import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Ave81487 = tf.keras.layers.Input(shape=([2, 2, 2, 1]))
in1Ave81487 = tf.keras.layers.Input(shape=([2, 2, 2, 1]))
in0Dot64170 = tf.keras.layers.Input(shape=([2, 2]))
in1Dot64170 = tf.keras.layers.Input(shape=([2, 2]))
in0Con86607 = tf.keras.layers.Input(shape=([2, 2]))
in0Sim33612 = tf.keras.layers.Input(shape=([1, 2]))
in0Con35536 = tf.keras.layers.Input(shape=([3, 2, 3, 1]))
in0Sub76169 = tf.keras.layers.Input(shape=([3, 2, 3, 2]))
in1Sub76169 = tf.keras.layers.Input(shape=([3, 2, 3, 2]))

Ave81487 = keras.layers.Average(name = 'Ave81487', )([in0Ave81487,in1Ave81487])
Res30205 = keras.layers.Reshape((2, 2, 2), name = 'Res30205', )(Ave81487)
Res60770 = keras.layers.Reshape((2, 4), name = 'Res60770', )(Res30205)
Dot64170 = keras.layers.Dot(axes=(2, 2), name = 'Dot64170', )([in0Dot64170,in1Dot64170])
ReL72180 = keras.layers.ReLU(max_value=2.9994026747702756, negative_slope=8.356855424073744, threshold=0.2811519972613019, name = 'ReL72180', )(Dot64170)
Con86607 = keras.layers.Concatenate(axis=2, name = 'Con86607', )([ReL72180,in0Con86607])
Min71796 = keras.layers.Minimum(name = 'Min71796', )([Res60770,Con86607])
Zer93285 = keras.layers.ZeroPadding1D(padding=((1, 0)), name = 'Zer93285', )(Min71796)
Sim33612 = keras.layers.SimpleRNN(3,name = 'Sim33612', )(in0Sim33612)
Res27457 = keras.layers.Reshape((3, 1), name = 'Res27457', )(Sim33612)
Res36365 = keras.layers.Reshape((3, 1, 1), name = 'Res36365', )(Res27457)
Res13670 = keras.layers.Reshape((3, 1, 1, 1), name = 'Res13670', )(Res36365)
Zer64919 = keras.layers.ZeroPadding3D(padding=((0, 0), (1, 0), (2, 0)), name = 'Zer64919', )(Res13670)
Con35536 = keras.layers.Concatenate(axis=4, name = 'Con35536', )([Zer64919,in0Con35536])
Sub76169 = keras.layers.Subtract(name = 'Sub76169', )([in0Sub76169,in1Sub76169])
Max94360 = keras.layers.Maximum(name = 'Max94360', )([Con35536,Sub76169])
Res54338 = keras.layers.Reshape((3, 2, 6), name = 'Res54338', )(Max94360)
Res35055 = keras.layers.Reshape((3, 12), name = 'Res35055', )(Res54338)
Dot53552 = keras.layers.Dot(axes=(1, 1), name = 'Dot53552', )([Zer93285,Res35055])
model = tf.keras.models.Model(inputs=[in0Ave81487,in1Ave81487,in0Dot64170,in1Dot64170,in0Con86607,in0Sim33612,in0Con35536,in0Sub76169,in1Sub76169], outputs=Dot53552)
w = model.get_layer('Sim33612').get_weights() 
w[0] = np.array([[1, 3, 7], [8, 8, 5]])
w[1] = np.array([[6, 2, 4], [10, 5, 6], [2, 4, 6]])
w[2] = np.array([3, 4, 7])
model.get_layer('Sim33612').set_weights(w) 
in0Ave81487 = tf.constant([[[[[0.0527], [0.8079]], [[0.2094], [0.188]]], [[[0.7509], [0.6466]], [[0.9585], [0.9477]]]]])
in1Ave81487 = tf.constant([[[[[0.0159], [0.9725]], [[0.3492], [0.8632]]], [[[0.3291], [0.8939]], [[0.1086], [0.0893]]]]])
in0Dot64170 = tf.constant([[[0.4141, 0.7399], [0.6975, 0.0675]]])
in1Dot64170 = tf.constant([[[0.6631, 0.2039], [0.539, 0.0727]]])
in0Con86607 = tf.constant([[[0.9994, 0.2479], [0.1885, 0.189]]])
in0Sim33612 = tf.constant([[[10, 5]]])
in0Con35536 = tf.constant([[[[[0.9208], [0.7359], [0.944]], [[0.27], [0.6331], [0.759]]], [[[0.2397], [0.0446], [0.669]], [[0.4419], [0.7652], [0.9468]]], [[[0.1351], [0.3535], [0.3586]], [[0.7633], [0.7612], [0.1954]]]]])
in0Sub76169 = tf.constant([[[[[0.5528, 0.5993], [0.7113, 0.9899], [0.7859, 0.0012]], [[0.7687, 0.0657], [0.7928, 0.1798], [0.3635, 0.592]]], [[[0.7563, 0.2011], [0.4507, 0.6064], [0.2726, 0.2536]], [[0.336, 0.4891], [0.9222, 0.9982], [0.0105, 0.0013]]], [[[0.3116, 0.4147], [0.7983, 0.6698], [0.9312, 0.019]], [[0.0192, 0.4287], [0.5235, 0.8404], [0.1135, 0.9605]]]]])
in1Sub76169 = tf.constant([[[[[0.042, 0.3482], [0.9488, 0.4897], [0.6958, 0.5954]], [[0.8364, 0.8808], [0.0196, 0.2052], [0.1198, 0.7651]]], [[[0.3893, 0.4719], [0.0663, 0.0807], [0.9088, 0.7674]], [[0.1941, 0.8462], [0.1369, 0.649], [0.0949, 0.2096]]], [[[0.6908, 0.5511], [0.2764, 0.8153], [0.3703, 0.7085]], [[0.541, 0.3128], [0.0748, 0.0076], [0.9421, 0.396]]]]])
print (np.array2string(model.predict([in0Ave81487,in1Ave81487,in0Dot64170,in1Dot64170,in0Con86607,in0Sim33612,in0Con35536,in0Sub76169,in1Sub76169],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Dot53552.png')

LAve81487 = average_layer([[[[[[0.0527], [0.8079]], [[0.2094], [0.188]]], [[[0.7509], [0.6466]], [[0.9585], [0.9477]]]]], [[[[[0.0159], [0.9725]], [[0.3492], [0.8632]]], [[[0.3291], [0.8939]], [[0.1086], [0.0893]]]]]], Ave81487), 
LRes30205 = reshape_layer(Ave81487, [2, 2, 2], Res30205), 
LRes60770 = reshape_layer(Res30205, [2, 4], Res60770), 
LDot64170 = dot_layer([[[0.4141, 0.7399], [0.6975, 0.0675]]], [[[0.6631, 0.2039], [0.539, 0.0727]]], 2, 2, Dot64170), 
LReL72180 = relu_layer(Dot64170, 2.9994026747702756, 8.356855424073744, 0.2811519972613019, ReL72180), 
LCon86607 = concatenate_layer([ReL72180,[[[0.9994, 0.2479], [0.1885, 0.189]]]], 2, Con86607), 
LMin71796 = minimum_layer([Res60770,Con86607], Min71796), 
LZer93285 = zero_padding1D_layer(Min71796, 1, 0, Zer93285), 
LSim33612 = simple_rnn_layer([[[10, 5]]],[[1, 3, 7], [8, 8, 5]],[[6, 2, 4], [10, 5, 6], [2, 4, 6]],[3, 4, 7], Sim33612), 
LRes27457 = reshape_layer(Sim33612, [3, 1], Res27457), 
LRes36365 = reshape_layer(Res27457, [3, 1, 1], Res36365), 
LRes13670 = reshape_layer(Res36365, [3, 1, 1, 1], Res13670), 
LZer64919 = zero_padding3D_layer(Res13670, 0, 0, 1, 0, 2, 0, Zer64919), 
LCon35536 = concatenate_layer([Zer64919,[[[[[0.9208], [0.7359], [0.944]], [[0.27], [0.6331], [0.759]]], [[[0.2397], [0.0446], [0.669]], [[0.4419], [0.7652], [0.9468]]], [[[0.1351], [0.3535], [0.3586]], [[0.7633], [0.7612], [0.1954]]]]]], 4, Con35536), 
LSub76169 = subtract_layer([[[[[0.5528, 0.5993], [0.7113, 0.9899], [0.7859, 0.0012]], [[0.7687, 0.0657], [0.7928, 0.1798], [0.3635, 0.592]]], [[[0.7563, 0.2011], [0.4507, 0.6064], [0.2726, 0.2536]], [[0.336, 0.4891], [0.9222, 0.9982], [0.0105, 0.0013]]], [[[0.3116, 0.4147], [0.7983, 0.6698], [0.9312, 0.019]], [[0.0192, 0.4287], [0.5235, 0.8404], [0.1135, 0.9605]]]]], [[[[[0.042, 0.3482], [0.9488, 0.4897], [0.6958, 0.5954]], [[0.8364, 0.8808], [0.0196, 0.2052], [0.1198, 0.7651]]], [[[0.3893, 0.4719], [0.0663, 0.0807], [0.9088, 0.7674]], [[0.1941, 0.8462], [0.1369, 0.649], [0.0949, 0.2096]]], [[[0.6908, 0.5511], [0.2764, 0.8153], [0.3703, 0.7085]], [[0.541, 0.3128], [0.0748, 0.0076], [0.9421, 0.396]]]]], Sub76169), 
LMax94360 = maximum_layer([Con35536,Sub76169], Max94360), 
LRes54338 = reshape_layer(Max94360, [3, 2, 6], Res54338), 
LRes35055 = reshape_layer(Res54338, [3, 12], Res35055), 
LDot53552 = dot_layer(Zer93285,Res35055, 1, 1, Dot53552), 
exec_layers([LAve81487,LRes30205,LRes60770,LDot64170,LReL72180,LCon86607,LMin71796,LZer93285,LSim33612,LRes27457,LRes36365,LRes13670,LZer64919,LCon35536,LSub76169,LMax94360,LRes54338,LRes35055,LDot53552],["Ave81487","Res30205","Res60770","Dot64170","ReL72180","Con86607","Min71796","Zer93285","Sim33612","Res27457","Res36365","Res13670","Zer64919","Con35536","Sub76169","Max94360","Res54338","Res35055","Dot53552"],Dot53552,"Dot53552")

Actual (Unparsed): [[[0.0125881, 0.0725665, 0.2617531, 0.1863949, 0.2671429, 0.1937391, 0.0048672, 0.3786983, 0.2406406, 0.4228886, 0.5105755, 0.3013328], [-0.0127628, 0.0431183, 0.1854028, 0.1163521, 0.2136242, 0.1133111, -0.0049347, 0.2753427, 0.1435821, 0.2905693, 0.3460837, 0.1820693], [0.1025031, 0.0924146, 0.2057411, 0.2134628, 0.1057297, 0.2544478, 0.0396327, 0.2673047, 0.3039143, 0.3707032, 0.4678000, 0.3708495], [0.0909793, 0.0849555, 0.1939319, 0.1971325, 0.1060101, 0.2336205, 0.0351770, 0.2538107, 0.2794802, 0.3470923, 0.4369000, 0.3414022]]]

Expected (Unparsed): [[[0.012588099999999998,0.07256653005,0.26175310345,0.18639489925,0.26714292795,0.19373909429999997,0.0048671700000000005,0.37869825915,0.24064060685,0.4228885964,0.5105755000000001,0.30133275975],[-0.012762771656886608,0.043118358311769155,0.18540283043260977,0.11635220756498557,0.21362423377499998,0.11331119943322303,-0.004934706534365695,0.2753427572698823,0.14358222055482817,0.29056944701566856,0.3460838054308267,0.1820694645569067],[0.1025031,0.09241455999999999,0.20574107,0.21346276,0.10572965,0.2544478,0.03963267000000001,0.26730472,0.30391424,0.37070316000000003,0.4678,0.37084948999999995],[0.0909793,0.08495553,0.19393186,0.19713253000000003,0.1060101,0.2336205,0.03517701000000001,0.25381071,0.27948017,0.34709228000000003,0.4369,0.34140222000000003]]]

Actual:   [[[0.0126, 0.0726, 0.2618, 0.1864, 0.2672, 0.1938, 0.0049, 0.3787, 0.2407, 0.4229, 0.5106, 0.3014], [-0.0127, 0.0432, 0.1855, 0.1164, 0.2137, 0.1134, -0.0049, 0.2754, 0.1436, 0.2906, 0.3461, 0.1821], [0.1026, 0.0925, 0.2058, 0.2135, 0.1058, 0.2545, 0.0397, 0.2674, 0.304, 0.3708, 0.4678, 0.3709], [0.091, 0.085, 0.194, 0.1972, 0.1061, 0.2337, 0.0352, 0.2539, 0.2795, 0.3471, 0.4369, 0.3415]]]

Expected: [[[0.0126, 0.0726, 0.2618, 0.1864, 0.2672, 0.1938, 0.0049, 0.3787, 0.2407, 0.4229, 0.5106, 0.3014], [-0.0127, 0.0432, 0.1855, 0.1164, 0.2137, 0.1134, -0.0049, 0.2754, 0.1436, 0.2906, 0.3461, 0.1821], [0.1026, 0.0925, 0.2058, 0.2135, 0.1058, 0.2545, 0.0397, 0.2674, 0.304, 0.3708, 0.4678, 0.3709], [0.091, 0.085, 0.194, 0.1972, 0.1061, 0.2337, 0.0352, 0.2539, 0.2795, 0.3471, 0.4369, 0.3415]]]