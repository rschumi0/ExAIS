import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Lea48168 = tf.keras.layers.Input(shape=([2, 1, 1, 1]))
in0Con32386 = tf.keras.layers.Input(shape=([2, 7]))
in0Ave57902 = tf.keras.layers.Input(shape=([1, 2, 2, 2]))
in1Ave57902 = tf.keras.layers.Input(shape=([1, 2, 2, 2]))
in0Con95384 = tf.keras.layers.Input(shape=([2, 3, 3, 2]))
in0Sub36136 = tf.keras.layers.Input(shape=([2, 3, 3, 3]))
in1Sub36136 = tf.keras.layers.Input(shape=([2, 3, 3, 3]))

Lea48168 = keras.layers.LeakyReLU(alpha=8.632339031758786, name = 'Lea48168', input_shape=(2, 1, 1, 1))(in0Lea48168)
Res91169 = keras.layers.Reshape((2, 1, 1), name = 'Res91169', )(Lea48168)
Res99309 = keras.layers.Reshape((2, 1), name = 'Res99309', )(Res91169)
Con32386 = keras.layers.Concatenate(axis=2, name = 'Con32386', )([Res99309,in0Con32386])
Ave57902 = keras.layers.Average(name = 'Ave57902', )([in0Ave57902,in1Ave57902])
Res48841 = keras.layers.Reshape((1, 2, 4), name = 'Res48841', )(Ave57902)
Res14273 = keras.layers.Reshape((1, 8), name = 'Res14273', )(Res48841)
Dot53978 = keras.layers.Dot(axes=(2, 2), name = 'Dot53978', )([Con32386,Res14273])
Res23705 = keras.layers.Reshape((2, 1, 1), name = 'Res23705', )(Dot53978)
Res13497 = keras.layers.Reshape((2, 1, 1, 1), name = 'Res13497', )(Res23705)
Zer24192 = keras.layers.ZeroPadding3D(padding=((0, 0), (2, 0), (2, 0)), name = 'Zer24192', )(Res13497)
Con95384 = keras.layers.Concatenate(axis=4, name = 'Con95384', )([Zer24192,in0Con95384])
Sub36136 = keras.layers.Subtract(name = 'Sub36136', )([in0Sub36136,in1Sub36136])
Sub90407 = keras.layers.Subtract(name = 'Sub90407', )([Con95384,Sub36136])
Res79019 = keras.layers.Reshape((2, 3, 9), name = 'Res79019', )(Sub90407)
Res70086 = keras.layers.Reshape((2, 27), name = 'Res70086', )(Res79019)
Cro39989 = keras.layers.Cropping1D(cropping=((1, 0)), name = 'Cro39989', )(Res70086)
model = tf.keras.models.Model(inputs=[in0Lea48168,in0Con32386,in0Ave57902,in1Ave57902,in0Con95384,in0Sub36136,in1Sub36136], outputs=Cro39989)
in0Lea48168 = tf.constant([[[[[0.2333]]], [[[0.7876]]]]])
in0Con32386 = tf.constant([[[0.4023, 0.3464, 0.1139, 0.3039, 0.869, 0.4341, 0.3807], [0.7631, 0.5841, 0.1921, 0.2421, 0.6818, 0.7128, 0.4334]]])
in0Ave57902 = tf.constant([[[[[0.1139, 0.3903], [0.3462, 0.7485]], [[0.2645, 0.4212], [0.4035, 0.7213]]]]])
in1Ave57902 = tf.constant([[[[[0.1369, 0.1447], [0.54, 0.6397]], [[0.3052, 0.254], [0.3207, 0.9196]]]]])
in0Con95384 = tf.constant([[[[[0.6198, 0.7975], [0.1725, 0.396], [0.2619, 0.1144]], [[0.3101, 0.2287], [0.4524, 0.31], [0.2631, 0.1493]], [[0.6817, 0.8338], [0.7574, 0.2222], [0.1956, 0.577]]], [[[0.1401, 0.6275], [0.1611, 0.8208], [0.5315, 0.0762]], [[0.8335, 0.4734], [0.0276, 0.127], [0.8834, 0.0353]], [[0.1742, 0.1194], [0.1181, 0.5393], [0.0336, 0.8811]]]]])
in0Sub36136 = tf.constant([[[[[0.309, 0.6955, 0.2253], [0.3865, 0.1253, 0.6172], [0.0814, 0.7514, 0.824]], [[0.4469, 0.9023, 0.6184], [0.8228, 0.4923, 0.2975], [0.6709, 0.0775, 0.44]], [[0.9965, 0.2489, 0.6188], [0.5284, 0.0561, 0.0051], [0.0774, 0.9703, 0.0055]]], [[[0.7062, 0.2278, 0.41], [0.5231, 0.5317, 0.1237], [0.8118, 0.2379, 0.4175]], [[0.1002, 0.2011, 0.9002], [0.0854, 0.7734, 0.1006], [0.4768, 0.4098, 0.1789]], [[0.343, 0.691, 0.6808], [0.3636, 0.1769, 0.1503], [0.1401, 0.0668, 0.2289]]]]])
in1Sub36136 = tf.constant([[[[[0.4834, 0.8917, 0.6093], [0.9381, 0.8405, 0.9189], [0.7484, 0.5346, 0.7058]], [[0.4721, 0.0471, 0.5017], [0.213, 0.5403, 0.2606], [0.7274, 0.0631, 0.4606]], [[0.3444, 0.2308, 0.6993], [0.9816, 0.957, 0.432], [0.6112, 0.2534, 0.7425]]], [[[0.4209, 0.5143, 0.2854], [0.2602, 0.5779, 0.6749], [0.3873, 0.1542, 0.2012]], [[0.8401, 0.9887, 0.0471], [0.5029, 0.0685, 0.0173], [0.685, 0.4488, 0.259]], [[0.7105, 0.0606, 0.4415], [0.3242, 0.3308, 0.5976], [0.7681, 0.7672, 0.7634]]]]])
print (np.array2string(model.predict([in0Lea48168,in0Con32386,in0Ave57902,in1Ave57902,in0Con95384,in0Sub36136,in1Sub36136],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Cro39989.png')

LLea48168 = leaky_relu_layer([[[[[0.2333]]], [[[0.7876]]]]], 8.632339031758786, Lea48168), 
LRes91169 = reshape_layer(Lea48168, [2, 1, 1], Res91169), 
LRes99309 = reshape_layer(Res91169, [2, 1], Res99309), 
LCon32386 = concatenate_layer([Res99309,[[[0.4023, 0.3464, 0.1139, 0.3039, 0.869, 0.4341, 0.3807], [0.7631, 0.5841, 0.1921, 0.2421, 0.6818, 0.7128, 0.4334]]]], 2, Con32386), 
LAve57902 = average_layer([[[[[[0.1139, 0.3903], [0.3462, 0.7485]], [[0.2645, 0.4212], [0.4035, 0.7213]]]]], [[[[[0.1369, 0.1447], [0.54, 0.6397]], [[0.3052, 0.254], [0.3207, 0.9196]]]]]], Ave57902), 
LRes48841 = reshape_layer(Ave57902, [1, 2, 4], Res48841), 
LRes14273 = reshape_layer(Res48841, [1, 8], Res14273), 
LDot53978 = dot_layer(Con32386,Res14273, 2, 2, Dot53978), 
LRes23705 = reshape_layer(Dot53978, [2, 1, 1], Res23705), 
LRes13497 = reshape_layer(Res23705, [2, 1, 1, 1], Res13497), 
LZer24192 = zero_padding3D_layer(Res13497, 0, 0, 2, 0, 2, 0, Zer24192), 
LCon95384 = concatenate_layer([Zer24192,[[[[[0.6198, 0.7975], [0.1725, 0.396], [0.2619, 0.1144]], [[0.3101, 0.2287], [0.4524, 0.31], [0.2631, 0.1493]], [[0.6817, 0.8338], [0.7574, 0.2222], [0.1956, 0.577]]], [[[0.1401, 0.6275], [0.1611, 0.8208], [0.5315, 0.0762]], [[0.8335, 0.4734], [0.0276, 0.127], [0.8834, 0.0353]], [[0.1742, 0.1194], [0.1181, 0.5393], [0.0336, 0.8811]]]]]], 4, Con95384), 
LSub36136 = subtract_layer([[[[[0.309, 0.6955, 0.2253], [0.3865, 0.1253, 0.6172], [0.0814, 0.7514, 0.824]], [[0.4469, 0.9023, 0.6184], [0.8228, 0.4923, 0.2975], [0.6709, 0.0775, 0.44]], [[0.9965, 0.2489, 0.6188], [0.5284, 0.0561, 0.0051], [0.0774, 0.9703, 0.0055]]], [[[0.7062, 0.2278, 0.41], [0.5231, 0.5317, 0.1237], [0.8118, 0.2379, 0.4175]], [[0.1002, 0.2011, 0.9002], [0.0854, 0.7734, 0.1006], [0.4768, 0.4098, 0.1789]], [[0.343, 0.691, 0.6808], [0.3636, 0.1769, 0.1503], [0.1401, 0.0668, 0.2289]]]]], [[[[[0.4834, 0.8917, 0.6093], [0.9381, 0.8405, 0.9189], [0.7484, 0.5346, 0.7058]], [[0.4721, 0.0471, 0.5017], [0.213, 0.5403, 0.2606], [0.7274, 0.0631, 0.4606]], [[0.3444, 0.2308, 0.6993], [0.9816, 0.957, 0.432], [0.6112, 0.2534, 0.7425]]], [[[0.4209, 0.5143, 0.2854], [0.2602, 0.5779, 0.6749], [0.3873, 0.1542, 0.2012]], [[0.8401, 0.9887, 0.0471], [0.5029, 0.0685, 0.0173], [0.685, 0.4488, 0.259]], [[0.7105, 0.0606, 0.4415], [0.3242, 0.3308, 0.5976], [0.7681, 0.7672, 0.7634]]]]], Sub36136), 
LSub90407 = subtract_layer(Con95384,Sub36136, Sub90407), 
LRes79019 = reshape_layer(Sub90407, [2, 3, 9], Res79019), 
LRes70086 = reshape_layer(Res79019, [2, 27], Res70086), 
LCro39989 = cropping1D_layer(Res70086, 1, 0, Cro39989), 
exec_layers([LLea48168,LRes91169,LRes99309,LCon32386,LAve57902,LRes48841,LRes14273,LDot53978,LRes23705,LRes13497,LZer24192,LCon95384,LSub36136,LSub90407,LRes79019,LRes70086,LCro39989],["Lea48168","Res91169","Res99309","Con32386","Ave57902","Res48841","Res14273","Dot53978","Res23705","Res13497","Zer24192","Con95384","Sub36136","Sub90407","Res79019","Res70086","Cro39989"],Cro39989,"Cro39989")

Actual (Unparsed): [[[-0.2853000, 0.4266000, 0.5029000, -0.2629000, 0.2073000, 1.3720000, -0.4245000, 0.4478000, -0.1401000, 0.7399000, 1.6211000, -0.3797000, 0.4175000, -0.6773000, 0.0437000, 0.2082000, 0.9224000, 0.1154000, 0.3675000, -0.4562000, -0.1199000, -0.0394000, 0.2720000, 0.9866000, 2.2358714, 0.7340000, 1.4156000]]]

Expected (Unparsed): [[[-0.28530000000000005,0.4266,0.5028999999999999,-0.2629,0.2073,1.3719999999999999,-0.4245,0.4478,-0.1401,0.7399,1.6211000000000002,-0.3797,0.4175,-0.6773,0.0437,0.20820000000000005,0.9223999999999999,0.1154,0.3675,-0.45619999999999994,-0.11989999999999995,-0.03939999999999999,0.27199999999999996,0.9866,2.235871385,0.734,1.4156]]]

Actual:   [[[-0.2853, 0.4266, 0.5029, -0.2629, 0.2073, 1.372, -0.4245, 0.4478, -0.1401, 0.7399, 1.6211, -0.3797, 0.4175, -0.6773, 0.0437, 0.2082, 0.9224, 0.1154, 0.3675, -0.4562, -0.1199, -0.0394, 0.272, 0.9866, 2.2359, 0.734, 1.4156]]]

Expected: [[[-0.2853, 0.4266, 0.5029, -0.2629, 0.2073, 1.372, -0.4245, 0.4478, -0.1401, 0.7399, 1.6212, -0.3797, 0.4175, -0.6773, 0.0437, 0.2083, 0.9224, 0.1154, 0.3675, -0.4561, -0.1198, -0.0393, 0.272, 0.9866, 2.2359, 0.734, 1.4156]]]