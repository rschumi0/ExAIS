import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Add66241 = tf.keras.layers.Input(shape=([1, 2, 2, 2]))
in1Add66241 = tf.keras.layers.Input(shape=([1, 2, 2, 2]))
in0Min57812 = tf.keras.layers.Input(shape=([2, 1]))
in1Min57812 = tf.keras.layers.Input(shape=([2, 1]))

Add66241 = keras.layers.Add(name = 'Add66241', )([in0Add66241,in1Add66241])
Res36076 = keras.layers.Reshape((1, 2, 4), name = 'Res36076', )(Add66241)
Res87811 = keras.layers.Reshape((1, 8), name = 'Res87811', )(Res36076)
Zer40571 = keras.layers.ZeroPadding1D(padding=((1, 0)), name = 'Zer40571', )(Res87811)
Min57812 = keras.layers.Minimum(name = 'Min57812', )([in0Min57812,in1Min57812])
Dot84215 = keras.layers.Dot(axes=(1, 1), name = 'Dot84215', )([Zer40571,Min57812])
Res92274 = keras.layers.Reshape((8, 1, 1), name = 'Res92274', )(Dot84215)
Con84916 = keras.layers.Conv2D(2, (8, 1),strides=(8, 11), padding='valid', dilation_rate=(1, 1), name = 'Con84916', )(Res92274)
Res16243 = keras.layers.Reshape((1, 2), name = 'Res16243', )(Con84916)
Ave65106 = keras.layers.AveragePooling1D(pool_size=(1), name = 'Ave65106', )(Res16243)
model = tf.keras.models.Model(inputs=[in0Add66241,in1Add66241,in0Min57812,in1Min57812], outputs=Ave65106)
w = model.get_layer('Con84916').get_weights() 
w[0] = np.array([[[[0.8435, 0.5579]]], [[[0.4329, 0.0966]]], [[[0.7338, 0.419]]], [[[0.6224, 0.7793]]], [[[0.7401, 0.758]]], [[[0.5359, 0.1896]]], [[[0.9688, 0.551]]], [[[0.9362, 0.61]]]])
w[1] = np.array([0, 0])
model.get_layer('Con84916').set_weights(w) 
in0Add66241 = tf.constant([[[[[0.9896, 0.4356], [0.3019, 0.0114]], [[0.7324, 0.4543], [0.5484, 0.0301]]]]])
in1Add66241 = tf.constant([[[[[0.4187, 0.906], [0.8691, 0.7946]], [[0.0278, 0.0871], [0.1095, 0.2648]]]]])
in0Min57812 = tf.constant([[[0.0822], [0.5656]]])
in1Min57812 = tf.constant([[[0.7942], [0.2046]]])
print (np.array2string(model.predict([in0Add66241,in1Add66241,in0Min57812,in1Min57812],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Ave65106.png')

LAdd66241 = add_layer([[[[[[0.9896, 0.4356], [0.3019, 0.0114]], [[0.7324, 0.4543], [0.5484, 0.0301]]]]], [[[[[0.4187, 0.906], [0.8691, 0.7946]], [[0.0278, 0.0871], [0.1095, 0.2648]]]]]], Add66241), 
LRes36076 = reshape_layer(Add66241, [1, 2, 4], Res36076), 
LRes87811 = reshape_layer(Res36076, [1, 8], Res87811), 
LZer40571 = zero_padding1D_layer(Res87811, 1, 0, Zer40571), 
LMin57812 = minimum_layer([[[[0.0822], [0.5656]]], [[[0.7942], [0.2046]]]], Min57812), 
LDot84215 = dot_layer(Zer40571,Min57812, 1, 1, Dot84215), 
LRes92274 = reshape_layer(Dot84215, [8, 1, 1], Res92274), 
LCon84916 = conv2D_layer(Res92274, 8, 1,[[[[0.8435, 0.5579]]], [[[0.4329, 0.0966]]], [[[0.7338, 0.419]]], [[[0.6224, 0.7793]]], [[[0.7401, 0.758]]], [[[0.5359, 0.1896]]], [[[0.9688, 0.551]]], [[[0.9362, 0.61]]]],[0, 0], 8, 11, false, 1, 1, Con84916), 
LRes16243 = reshape_layer(Con84916, [1, 2], Res16243), 
LAve65106 = average_pooling1D_layer(Res16243, 1, Ave65106), 
exec_layers([LAdd66241,LRes36076,LRes87811,LZer40571,LMin57812,LDot84215,LRes92274,LCon84916,LRes16243,LAve65106],["Add66241","Res36076","Res87811","Zer40571","Min57812","Dot84215","Res92274","Con84916","Res16243","Ave65106"],Ave65106,"Ave65106")

Actual (Unparsed): [[[1.0016875, 0.6660399]]]

Expected (Unparsed): [[[1.0016874461220002,0.666039877602]]]

Actual:   [[[1.0017, 0.6661]]]

Expected: [[[1.0017, 0.6661]]]