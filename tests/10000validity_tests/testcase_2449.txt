import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Mul27576 = tf.keras.layers.Input(shape=([2, 2, 2, 1]))
in1Mul27576 = tf.keras.layers.Input(shape=([2, 2, 2, 1]))

Mul27576 = keras.layers.Multiply(name = 'Mul27576', )([in0Mul27576,in1Mul27576])
Con87914 = keras.layers.Conv3DTranspose(2, (2, 2, 2),strides=(1, 1, 1), padding='valid', name = 'Con87914', )(Mul27576)
model = tf.keras.models.Model(inputs=[in0Mul27576,in1Mul27576], outputs=Con87914)
w = model.get_layer('Con87914').get_weights() 
w[0] = np.array([[[[[0.4398], [0.4459]], [[0.9544], [0.7083]]], [[[0.1851], [0.1196]], [[0.1286], [0.5154]]]], [[[[0.1107], [0.9935]], [[0.6531], [0.2172]]], [[[0.7261], [0.997]], [[0.1508], [0.0136]]]]])
w[1] = np.array([0, 0])
model.get_layer('Con87914').set_weights(w) 
in0Mul27576 = tf.constant([[[[[0.0713], [0.3414]], [[0.6768], [0.2801]]], [[[0.1149], [0.5775]], [[0.4087], [0.0167]]]]])
in1Mul27576 = tf.constant([[[[[0.712], [0.0969]], [[0.4663], [0.8262]]], [[[0.5247], [0.6345]], [[0.1564], [0.7756]]]]])
print (np.array2string(model.predict([in0Mul27576,in1Mul27576],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Con87914.png')

LMul27576 = multiply_layer([[[[[[0.0713], [0.3414]], [[0.6768], [0.2801]]], [[[0.1149], [0.5775]], [[0.4087], [0.0167]]]]], [[[[[0.712], [0.0969]], [[0.4663], [0.8262]]], [[[0.5247], [0.6345]], [[0.1564], [0.7756]]]]]], Mul27576), 
LCon87914 = conv3D_transpose_layer(Mul27576, 2, 2, 2,[[[[[0.4398], [0.4459]], [[0.9544], [0.7083]]], [[[0.1851], [0.1196]], [[0.1286], [0.5154]]]], [[[[0.1107], [0.9935]], [[0.6531], [0.2172]]], [[[0.7261], [0.997]], [[0.1508], [0.0136]]]]],[0, 0], 1, 1, 1, false, Con87914), 
exec_layers([LMul27576,LCon87914],["Mul27576","Con87914"],Con87914,"Con87914")

Actual (Unparsed): [[[[[0.0223267, 0.0226364], [0.0630000, 0.0507084], [0.0315731, 0.0234317]], [[0.1481940, 0.1467940], [0.4156306, 0.3568444], [0.2251202, 0.1809641]], [[0.0584161, 0.0377448], [0.0834207, 0.1903337], [0.0297604, 0.1192732]]], [[[0.0321344, 0.0773181], [0.2555092, 0.2499833], [0.3713205, 0.2667233]], [[0.1110685, 0.3998665], [0.4056876, 0.4580810], [0.2156122, 0.2487431]], [[0.2409830, 0.3222900], [0.2262420, 0.2695102], [0.0365636, 0.0098230]]], [[[0.0066739, 0.0598962], [0.0799372, 0.3771366], [0.2393114, 0.0795872]], [[0.0508512, 0.1236124], [0.3183322, 0.3928963], [0.0637160, 0.0077967]], [[0.0464128, 0.0637289], [0.0190441, 0.0137830], [0.0019532, 0.0001762]]]]]

Expected (Unparsed): [[[[[0.022326710880000003,0.02263638104],[0.063000002708,0.050708386674],[0.031573136304,0.023431739778]],[[0.14819400379199998,0.146793967216],[0.4156306325979999,0.356844419706],[0.22512023240400003,0.18096409611000003]],[[0.058416049583999985,0.037744784063999996],[0.083420697186,0.19033370128799995],[0.029760434532000002,0.119273156748]]],[[[0.032134427514,0.07731805617700001],[0.255509214204,0.249983279304],[0.371320459146,0.266723278677]],[[0.11106854826500001,0.39986647584],[0.4056876098149999,0.45808105127200005],[0.215612194388,0.248743105506]],[[0.24098295289199995,0.32228997780799995],[0.22624202035399998,0.26951025302799997],[0.036563621968,0.009823022039999999]]],[[[0.006673884921000001,0.05989615780500001],[0.079937221518,0.377136555741],[0.239311351125,0.0795872385]],[[0.050851157859000004,0.12361236149000002],[0.318332159871,0.392896296274],[0.063715992312,0.007796650343999999]],[[0.046412805748000004,0.06372891796],[0.019044063315999997,0.013782983688],[0.0019532400159999997,0.00017615427199999998]]]]]

Actual:   [[[[[0.0224, 0.0227], [0.063, 0.0508], [0.0316, 0.0235]], [[0.1482, 0.1468], [0.4157, 0.3569], [0.2252, 0.181]], [[0.0585, 0.0378], [0.0835, 0.1904], [0.0298, 0.1193]]], [[[0.0322, 0.0774], [0.2556, 0.25], [0.3714, 0.2668]], [[0.1111, 0.3999], [0.4057, 0.4581], [0.2157, 0.2488]], [[0.241, 0.3223], [0.2263, 0.2696], [0.0366, 0.0099]]], [[[0.0067, 0.0599], [0.08, 0.3772], [0.2394, 0.0796]], [[0.0509, 0.1237], [0.3184, 0.3929], [0.0638, 0.0078]], [[0.0465, 0.0638], [0.0191, 0.0138], [0.002, 0.0002]]]]]

Expected: [[[[[0.0224, 0.0227], [0.0631, 0.0508], [0.0316, 0.0235]], [[0.1482, 0.1468], [0.4157, 0.3569], [0.2252, 0.181]], [[0.0585, 0.0378], [0.0835, 0.1904], [0.0298, 0.1193]]], [[[0.0322, 0.0774], [0.2556, 0.25], [0.3714, 0.2668]], [[0.1111, 0.3999], [0.4057, 0.4581], [0.2157, 0.2488]], [[0.241, 0.3223], [0.2263, 0.2696], [0.0366, 0.0099]]], [[[0.0067, 0.0599], [0.08, 0.3772], [0.2394, 0.0796]], [[0.0509, 0.1237], [0.3184, 0.3929], [0.0638, 0.0078]], [[0.0465, 0.0638], [0.0191, 0.0138], [0.002, 0.0002]]]]]