import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Ave80280 = tf.keras.layers.Input(shape=([1, 1, 1, 2]))
in1Ave80280 = tf.keras.layers.Input(shape=([1, 1, 1, 2]))

Ave80280 = keras.layers.Average(name = 'Ave80280', )([in0Ave80280,in1Ave80280])
Res9568 = keras.layers.Reshape((1, 1, 2), name = 'Res9568', )(Ave80280)
Ave85397 = keras.layers.AveragePooling2D(pool_size=(1, 1), name = 'Ave85397', )(Res9568)
Res82344 = keras.layers.Reshape((1, 2), name = 'Res82344', )(Ave85397)
Glo63695 = keras.layers.GlobalMaxPool1D(name = 'Glo63695', )(Res82344)
model = tf.keras.models.Model(inputs=[in0Ave80280,in1Ave80280], outputs=Glo63695)
in0Ave80280 = tf.constant([[[[[0.8564, 0.0476]]]]])
in1Ave80280 = tf.constant([[[[[0.9248, 0.6964]]]]])
print (np.array2string(model.predict([in0Ave80280,in1Ave80280],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Glo63695.png')

LAve80280 = average_layer([[[[[[0.8564, 0.0476]]]]], [[[[[0.9248, 0.6964]]]]]], Ave80280), 
LRes9568 = reshape_layer(Ave80280, [1, 1, 2], Res9568), 
LAve85397 = average_pooling2D_layer(Res9568, 1, 1, Ave85397), 
LRes82344 = reshape_layer(Ave85397, [1, 2], Res82344), 
LGlo63695 = global_max_pool1D_layer(Res82344, Glo63695), 
exec_layers([LAve80280,LRes9568,LAve85397,LRes82344,LGlo63695],["Ave80280","Res9568","Ave85397","Res82344","Glo63695"],Glo63695,"Glo63695")

Actual (Unparsed): [[0.8906000, 0.3720000]]

Expected (Unparsed): [[0.8906000000000001,0.372]]

Actual:   [[0.8906, 0.372]]

Expected: [[0.8907, 0.372]]