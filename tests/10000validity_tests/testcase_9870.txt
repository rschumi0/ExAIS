import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Add97480 = tf.keras.layers.Input(shape=([1, 2]))
in1Add97480 = tf.keras.layers.Input(shape=([1, 2]))
in0Con70712 = tf.keras.layers.Input(shape=([3]))
in0Bat91990 = tf.keras.layers.Input(shape=([1]))
in0Con35773 = tf.keras.layers.Input(shape=([3]))
in0Cro33795 = tf.keras.layers.Input(shape=([3, 1]))
in0Con29269 = tf.keras.layers.Input(shape=([3]))
in0Fla8303 = tf.keras.layers.Input(shape=([4]))

Add97480 = keras.layers.Add(name = 'Add97480', )([in0Add97480,in1Add97480])
Res34932 = keras.layers.Reshape((1, 2, 1), name = 'Res34932', )(Add97480)
Max368 = keras.layers.MaxPool2D(pool_size=(1, 2), strides=(1, 1), padding='valid', name = 'Max368', )(Res34932)
Res42442 = keras.layers.Reshape((1, 1), name = 'Res42442', )(Max368)
Fla87518 = keras.layers.Flatten(name = 'Fla87518', )(Res42442)
Con70712 = keras.layers.Concatenate(axis=1, name = 'Con70712', )([Fla87518,in0Con70712])
Bat91990 = keras.layers.BatchNormalization(axis=1, epsilon=0.10995372292907236,  name = 'Bat91990', )(in0Bat91990)
Con35773 = keras.layers.Concatenate(axis=1, name = 'Con35773', )([Bat91990,in0Con35773])
Cro33795 = keras.layers.Cropping1D(cropping=((2, 0)), name = 'Cro33795', )(in0Cro33795)
Fla87869 = keras.layers.Flatten(name = 'Fla87869', )(Cro33795)
Con29269 = keras.layers.Concatenate(axis=1, name = 'Con29269', )([Fla87869,in0Con29269])
Fla8303 = keras.layers.Flatten(name = 'Fla8303', )(in0Fla8303)
Sub76341 = keras.layers.Subtract(name = 'Sub76341', )([Con29269,Fla8303])
Min1882 = keras.layers.Minimum(name = 'Min1882', )([Con35773,Sub76341])
Sub83563 = keras.layers.Subtract(name = 'Sub83563', )([Con70712,Min1882])
model = tf.keras.models.Model(inputs=[in0Add97480,in1Add97480,in0Con70712,in0Bat91990,in0Con35773,in0Cro33795,in0Con29269,in0Fla8303], outputs=Sub83563)
w = model.get_layer('Bat91990').get_weights() 
w[0] = np.array([0.1577])
w[1] = np.array([0.5363])
w[2] = np.array([0.4843])
w[3] = np.array([0.1991])
model.get_layer('Bat91990').set_weights(w) 
in0Add97480 = tf.constant([[[0.223, 0.5479]]])
in1Add97480 = tf.constant([[[0.5837, 0.122]]])
in0Con70712 = tf.constant([[0.906, 0.4344, 0.2182]])
in0Bat91990 = tf.constant([[1.561]])
in0Con35773 = tf.constant([[0.9777, 0.5102, 0.2966]])
in0Cro33795 = tf.constant([[[1.3792], [1.3078], [1.4958]]])
in0Con29269 = tf.constant([[0.2856, 0.6652, 0.0326]])
in0Fla8303 = tf.constant([[1.4987, 1.73, 1.3551, 1.3686]])
print (np.array2string(model.predict([in0Add97480,in1Add97480,in0Con70712,in0Bat91990,in0Con35773,in0Cro33795,in0Con29269,in0Fla8303],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Sub83563.png')

LAdd97480 = add_layer([[[[0.223, 0.5479]]], [[[0.5837, 0.122]]]], Add97480), 
LRes34932 = reshape_layer(Add97480, [1, 2, 1], Res34932), 
LMax368 = max_pool2D_layer(Res34932, 1, 2, 1, 1, false, Max368), 
LRes42442 = reshape_layer(Max368, [1, 1], Res42442), 
LFla87518 = flatten_layer(Res42442, Fla87518), 
LCon70712 = concatenate_layer([Fla87518,[[0.906, 0.4344, 0.2182]]], 1, Con70712), 
LBat91990 = batch_normalization_layer([[1.561]], 1, 0.10995372292907236, [0.1577], [0.5363], [0.4843], [0.1991], Bat91990), 
LCon35773 = concatenate_layer([Bat91990,[[0.9777, 0.5102, 0.2966]]], 1, Con35773), 
LCro33795 = cropping1D_layer([[[1.3792], [1.3078], [1.4958]]], 2, 0, Cro33795), 
LFla87869 = flatten_layer(Cro33795, Fla87869), 
LCon29269 = concatenate_layer([Fla87869,[[0.2856, 0.6652, 0.0326]]], 1, Con29269), 
LFla8303 = flatten_layer([[1.4987, 1.73, 1.3551, 1.3686]], Fla8303), 
LSub76341 = subtract_layer(Con29269,Fla8303, Sub76341), 
LMin1882 = minimum_layer([Con35773,Sub76341], Min1882), 
LSub83563 = subtract_layer(Con70712,Min1882, Sub83563), 
exec_layers([LAdd97480,LRes34932,LMax368,LRes42442,LFla87518,LCon70712,LBat91990,LCon35773,LCro33795,LFla87869,LCon29269,LFla8303,LSub76341,LMin1882,LSub83563],["Add97480","Res34932","Max368","Res42442","Fla87518","Con70712","Bat91990","Con35773","Cro33795","Fla87869","Con29269","Fla8303","Sub76341","Min1882","Sub83563"],Sub83563,"Sub83563")

Actual (Unparsed): [[0.8096000, 2.3504000, 1.1243000, 1.5542000]]

Expected (Unparsed): [[0.8095999999999999,2.3504,1.1242999999999999,1.5542]]

Actual:   [[0.8096, 2.3504, 1.1243, 1.5542]]

Expected: [[0.8096, 2.3504, 1.1243, 1.5542]]