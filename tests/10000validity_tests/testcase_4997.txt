import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0LST28028 = tf.keras.layers.Input(shape=([1, 1]))
in0Max9050 = tf.keras.layers.Input(shape=([1, 2]))
in1Max9050 = tf.keras.layers.Input(shape=([1, 2]))
in0Con78328 = tf.keras.layers.Input(shape=([1, 2, 2]))

LST28028 = keras.layers.LSTM(2,recurrent_activation='sigmoid', name = 'LST28028', )(in0LST28028)
Res1680 = keras.layers.Reshape((2, 1), name = 'Res1680', )(LST28028)
Res78853 = keras.layers.Reshape((2, 1, 1), name = 'Res78853', )(Res1680)
Loc16280 = keras.layers.LocallyConnected2D(3, (2, 1),strides=(1, 1), name = 'Loc16280', )(Res78853)
Zer41814 = keras.layers.ZeroPadding2D(padding=((0, 0), (1, 0)), name = 'Zer41814', )(Loc16280)
Max9050 = keras.layers.Maximum(name = 'Max9050', )([in0Max9050,in1Max9050])
Res89072 = keras.layers.Reshape((1, 2, 1), name = 'Res89072', )(Max9050)
Ave43178 = keras.layers.AveragePooling2D(pool_size=(1, 1), strides=(1, 1), padding='same', name = 'Ave43178', )(Res89072)
Thr10873 = keras.layers.ThresholdedReLU(theta=5.087524825336364, name = 'Thr10873', )(Ave43178)
Con78328 = keras.layers.Concatenate(axis=3, name = 'Con78328', )([Thr10873,in0Con78328])
Min59342 = keras.layers.Minimum(name = 'Min59342', )([Zer41814,Con78328])
Zer40790 = keras.layers.ZeroPadding2D(padding=((1, 1), (1, 1)), name = 'Zer40790', )(Min59342)
model = tf.keras.models.Model(inputs=[in0LST28028,in0Max9050,in1Max9050,in0Con78328], outputs=Zer40790)
w = model.get_layer('LST28028').get_weights() 
w[0] = np.array([[7, 8, 6, 9, 9, 9, 4, 10]])
w[1] = np.array([[4, 8, 3, 7, 10, 1, 9, 9], [1, 7, 4, 1, 5, 2, 5, 2]])
w[2] = np.array([9, 10, 4, 7, 10, 2, 10, 9])
model.get_layer('LST28028').set_weights(w) 
w = model.get_layer('Loc16280').get_weights() 
w[0] = np.array([[[0.29, 0.6127, 0.0717], [0.4987, 0.8331, 0.2952]]])
w[1] = np.array([[[0, 0, 0]]])
model.get_layer('Loc16280').set_weights(w) 
in0LST28028 = tf.constant([[[3]]])
in0Max9050 = tf.constant([[[0.9695, 0.5155]]])
in1Max9050 = tf.constant([[[0.7843, 0.683]]])
in0Con78328 = tf.constant([[[[0.3426, 0.8006], [0.6782, 0.9713]]]])
print (np.array2string(model.predict([in0LST28028,in0Max9050,in1Max9050,in0Con78328],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Zer40790.png')

LLST28028 = lstm_layer([[[3]]],[[7, 8, 6, 9, 9, 9, 4, 10]],[[4, 8, 3, 7, 10, 1, 9, 9], [1, 7, 4, 1, 5, 2, 5, 2]],[9, 10, 4, 7, 10, 2, 10, 9], LST28028), 
LRes1680 = reshape_layer(LST28028, [2, 1], Res1680), 
LRes78853 = reshape_layer(Res1680, [2, 1, 1], Res78853), 
LLoc16280 = locally_connected2D_layer(Res78853, 2, 1,[[[0.29, 0.6127, 0.0717], [0.4987, 0.8331, 0.2952]]],[[[0, 0, 0]]], 1, 1, Loc16280), 
LZer41814 = zero_padding2D_layer(Loc16280, 0, 0, 1, 0, Zer41814), 
LMax9050 = maximum_layer([[[[0.9695, 0.5155]]], [[[0.7843, 0.683]]]], Max9050), 
LRes89072 = reshape_layer(Max9050, [1, 2, 1], Res89072), 
LAve43178 = average_pooling2D_layer(Res89072, 1, 1, 1, 1, true, Ave43178), 
LThr10873 = thresholded_relu_layer(Ave43178, 5.087524825336364, Thr10873), 
LCon78328 = concatenate_layer([Thr10873,[[[[0.3426, 0.8006], [0.6782, 0.9713]]]]], 3, Con78328), 
LMin59342 = minimum_layer([Zer41814,Con78328], Min59342), 
LZer40790 = zero_padding2D_layer(Min59342, 1, 1, 1, 1, Zer40790), 
exec_layers([LLST28028,LRes1680,LRes78853,LLoc16280,LZer41814,LMax9050,LRes89072,LAve43178,LThr10873,LCon78328,LMin59342,LZer40790],["LST28028","Res1680","Res78853","Loc16280","Zer41814","Max9050","Res89072","Ave43178","Thr10873","Con78328","Min59342","Zer40790"],Zer40790,"Zer40790")

Actual (Unparsed): [[[[0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000]], [[0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.6782000, 0.2794289], [0.0000000, 0.0000000, 0.0000000]], [[0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000]]]]

Expected (Unparsed): [[[[0,0,0],[0,0,0],[0,0,0],[0,0,0]],[[0,0,0],[0,0,0],[0,0.6782,0.27942889580493485],[0,0,0]],[[0,0,0],[0,0,0],[0,0,0],[0,0,0]]]]

Actual:   [[[[0, 0, 0], [0, 0, 0], [0, 0, 0], [0, 0, 0]], [[0, 0, 0], [0, 0, 0], [0, 0.6782, 0.2795], [0, 0, 0]], [[0, 0, 0], [0, 0, 0], [0, 0, 0], [0, 0, 0]]]]

Expected: [[[[0, 0, 0], [0, 0, 0], [0, 0, 0], [0, 0, 0]], [[0, 0, 0], [0, 0, 0], [0, 0.6782, 0.2795], [0, 0, 0]], [[0, 0, 0], [0, 0, 0], [0, 0, 0], [0, 0, 0]]]]