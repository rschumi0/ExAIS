import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Ave77821 = tf.keras.layers.Input(shape=([2, 1, 2]))
in1Ave77821 = tf.keras.layers.Input(shape=([2, 1, 2]))

Ave77821 = keras.layers.Average(name = 'Ave77821', )([in0Ave77821,in1Ave77821])
Zer26017 = keras.layers.ZeroPadding2D(padding=((1, 1), (1, 1)), name = 'Zer26017', )(Ave77821)
Ave78401 = keras.layers.AveragePooling2D(pool_size=(1, 2), name = 'Ave78401', )(Zer26017)
Res29962 = keras.layers.Reshape((4, 2), name = 'Res29962', )(Ave78401)
Per38839 = keras.layers.Permute((2,1), name = 'Per38839',)(Res29962)
model = tf.keras.models.Model(inputs=[in0Ave77821,in1Ave77821], outputs=Per38839)
in0Ave77821 = tf.constant([[[[0.2228, 0.1049]], [[0.3168, 0.2137]]]])
in1Ave77821 = tf.constant([[[[0.1645, 0.1448]], [[0.2421, 0.1481]]]])
print (np.array2string(model.predict([in0Ave77821,in1Ave77821],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Per38839.png')

LAve77821 = average_layer([[[[[0.2228, 0.1049]], [[0.3168, 0.2137]]]], [[[[0.1645, 0.1448]], [[0.2421, 0.1481]]]]], Ave77821), 
LZer26017 = zero_padding2D_layer(Ave77821, 1, 1, 1, 1, Zer26017), 
LAve78401 = average_pooling2D_layer(Zer26017, 1, 2, Ave78401), 
LRes29962 = reshape_layer(Ave78401, [4, 2], Res29962), 
LPer38839 = permute_layer(Res29962, 2,1, Per38839), 
exec_layers([LAve77821,LZer26017,LAve78401,LRes29962,LPer38839],["Ave77821","Zer26017","Ave78401","Res29962","Per38839"],Per38839,"Per38839")

Actual (Unparsed): [[[0.0000000, 0.0968250, 0.1397250, 0.0000000], [0.0000000, 0.0624250, 0.0904500, 0.0000000]]]

Expected (Unparsed): [[[0,0.096825,0.13972500000000002,0],[0,0.062425,0.09045,0]]]

Actual:   [[[0, 0.0969, 0.1398, 0], [0, 0.0625, 0.0905, 0]]]

Expected: [[[0, 0.0969, 0.1398, 0], [0, 0.0625, 0.0905, 0]]]