import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Cro63630 = tf.keras.layers.Input(shape=([1, 3]))
in0Mul69183 = tf.keras.layers.Input(shape=([1, 2, 1]))
in1Mul69183 = tf.keras.layers.Input(shape=([1, 2, 1]))
in0Min45686 = tf.keras.layers.Input(shape=([2, 2]))
in1Min45686 = tf.keras.layers.Input(shape=([2, 2]))
in0Add4401 = tf.keras.layers.Input(shape=([2, 2]))
in1Add4401 = tf.keras.layers.Input(shape=([2, 2]))
in0Con33258 = tf.keras.layers.Input(shape=([2, 1]))

Cro63630 = keras.layers.Cropping1D(cropping=((0, 0)), name = 'Cro63630', )(in0Cro63630)
Thr99097 = keras.layers.ThresholdedReLU(theta=2.299195352246123, name = 'Thr99097', )(Cro63630)
Zer80326 = keras.layers.ZeroPadding1D(padding=((1, 0)), name = 'Zer80326', )(Thr99097)
Mul69183 = keras.layers.Multiply(name = 'Mul69183', )([in0Mul69183,in1Mul69183])
Res57872 = keras.layers.Reshape((1, 2), name = 'Res57872', )(Mul69183)
Con97704 = keras.layers.Conv1D(2, (1),strides=(1), padding='valid', dilation_rate=(1), name = 'Con97704', )(Res57872)
Zer65384 = keras.layers.ZeroPadding1D(padding=((1, 0)), name = 'Zer65384', )(Con97704)
Min45686 = keras.layers.Minimum(name = 'Min45686', )([in0Min45686,in1Min45686])
Add89345 = keras.layers.Add(name = 'Add89345', )([Zer65384,Min45686])
Add4401 = keras.layers.Add(name = 'Add4401', )([in0Add4401,in1Add4401])
Max47888 = keras.layers.Maximum(name = 'Max47888', )([Add89345,Add4401])
Con33258 = keras.layers.Concatenate(axis=2, name = 'Con33258', )([Max47888,in0Con33258])
Min50321 = keras.layers.Minimum(name = 'Min50321', )([Zer80326,Con33258])
model = tf.keras.models.Model(inputs=[in0Cro63630,in0Mul69183,in1Mul69183,in0Min45686,in1Min45686,in0Add4401,in1Add4401,in0Con33258], outputs=Min50321)
w = model.get_layer('Con97704').get_weights() 
w[0] = np.array([[[0.7796, 0.235], [0.8171, 0.3179]]])
w[1] = np.array([0, 0])
model.get_layer('Con97704').set_weights(w) 
in0Cro63630 = tf.constant([[[1.6681, 1.0543, 1.3806]]])
in0Mul69183 = tf.constant([[[[0.7755], [0.6099]]]])
in1Mul69183 = tf.constant([[[[0.1271], [0.5173]]]])
in0Min45686 = tf.constant([[[0.2553, 0.2256], [0.0604, 0.7412]]])
in1Min45686 = tf.constant([[[0.2719, 0.8747], [0.4032, 0.9751]]])
in0Add4401 = tf.constant([[[0.7476, 0.3291], [0.9479, 0.545]]])
in1Add4401 = tf.constant([[[0.3016, 0.6615], [0.2458, 0.8996]]])
in0Con33258 = tf.constant([[[0.3761], [0.7222]]])
print (np.array2string(model.predict([in0Cro63630,in0Mul69183,in1Mul69183,in0Min45686,in1Min45686,in0Add4401,in1Add4401,in0Con33258],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Min50321.png')

LCro63630 = cropping1D_layer([[[1.6681, 1.0543, 1.3806]]], 0, 0, Cro63630), 
LThr99097 = thresholded_relu_layer(Cro63630, 2.299195352246123, Thr99097), 
LZer80326 = zero_padding1D_layer(Thr99097, 1, 0, Zer80326), 
LMul69183 = multiply_layer([[[[[0.7755], [0.6099]]]], [[[[0.1271], [0.5173]]]]], Mul69183), 
LRes57872 = reshape_layer(Mul69183, [1, 2], Res57872), 
LCon97704 = conv1D_layer(Res57872, 1,[[[0.7796, 0.235], [0.8171, 0.3179]]],[0, 0], 1, false, 1, Con97704), 
LZer65384 = zero_padding1D_layer(Con97704, 1, 0, Zer65384), 
LMin45686 = minimum_layer([[[[0.2553, 0.2256], [0.0604, 0.7412]]], [[[0.2719, 0.8747], [0.4032, 0.9751]]]], Min45686), 
LAdd89345 = add_layer([Zer65384,Min45686], Add89345), 
LAdd4401 = add_layer([[[[0.7476, 0.3291], [0.9479, 0.545]]], [[[0.3016, 0.6615], [0.2458, 0.8996]]]], Add4401), 
LMax47888 = maximum_layer([Add89345,Add4401], Max47888), 
LCon33258 = concatenate_layer([Max47888,[[[0.3761], [0.7222]]]], 2, Con33258), 
LMin50321 = minimum_layer([Zer80326,Con33258], Min50321), 
exec_layers([LCro63630,LThr99097,LZer80326,LMul69183,LRes57872,LCon97704,LZer65384,LMin45686,LAdd89345,LAdd4401,LMax47888,LCon33258,LMin50321],["Cro63630","Thr99097","Zer80326","Mul69183","Res57872","Con97704","Zer65384","Min45686","Add89345","Add4401","Max47888","Con33258","Min50321"],Min50321,"Min50321")

Actual (Unparsed): [[[0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000]]]

Expected (Unparsed): [[[0,0,0],[0,0,0]]]

Actual:   [[[0, 0, 0], [0, 0, 0]]]

Expected: [[[0, 0, 0], [0, 0, 0]]]