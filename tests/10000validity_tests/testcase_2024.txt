import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0PRe80269 = tf.keras.layers.Input(shape=([2, 2, 2, 2]))
in0Mul50153 = tf.keras.layers.Input(shape=([2, 2, 2]))
in1Mul50153 = tf.keras.layers.Input(shape=([2, 2, 2]))
in0Con82362 = tf.keras.layers.Input(shape=([2, 2, 2]))
in0Con21722 = tf.keras.layers.Input(shape=([3, 3, 5, 1]))
in0Con25535 = tf.keras.layers.Input(shape=([2, 2, 2, 1]))

PRe80269 = keras.layers.PReLU(name = 'PRe80269', input_shape=(2, 2, 2, 2))(in0PRe80269)
Res1737 = keras.layers.Reshape((2, 2, 4), name = 'Res1737', )(PRe80269)
Mul50153 = keras.layers.Multiply(name = 'Mul50153', )([in0Mul50153,in1Mul50153])
Con82362 = keras.layers.Concatenate(axis=3, name = 'Con82362', )([Mul50153,in0Con82362])
Max13615 = keras.layers.Maximum(name = 'Max13615', )([Res1737,Con82362])
Res79640 = keras.layers.Reshape((2, 2, 4, 1), name = 'Res79640', )(Max13615)
Zer41025 = keras.layers.ZeroPadding3D(padding=((1, 0), (1, 0), (1, 0)), name = 'Zer41025', )(Res79640)
Con21722 = keras.layers.Concatenate(axis=4, name = 'Con21722', )([Zer41025,in0Con21722])
Con25535 = keras.layers.Conv3DTranspose(2, (2, 2, 2),strides=(1, 1, 1), padding='valid', name = 'Con25535', )(in0Con25535)
Zer74323 = keras.layers.ZeroPadding3D(padding=((0, 0), (0, 0), (2, 0)), name = 'Zer74323', )(Con25535)
Min12322 = keras.layers.Minimum(name = 'Min12322', )([Con21722,Zer74323])
model = tf.keras.models.Model(inputs=[in0PRe80269,in0Mul50153,in1Mul50153,in0Con82362,in0Con21722,in0Con25535], outputs=Min12322)
w = model.get_layer('PRe80269').get_weights() 
w[0] = np.array([[[[0.9646, 0.3064], [0.3735, 0.9833]], [[0.6013, 0.5297], [0.5864, 0.5623]]], [[[0.9166, 0.165], [0.6847, 0.2992]], [[0.899, 0.4688], [0.0023, 0.7525]]]])
model.get_layer('PRe80269').set_weights(w) 
w = model.get_layer('Con25535').get_weights() 
w[0] = np.array([[[[[0.8403], [0.9659]], [[0.4549], [0.7576]]], [[[0.2897], [0.3142]], [[0.1493], [0.4691]]]], [[[[0.2267], [0.8073]], [[0.1192], [0.3061]]], [[[0.0284], [0.3317]], [[0.3724], [0.314]]]]])
w[1] = np.array([0, 0])
model.get_layer('Con25535').set_weights(w) 
in0PRe80269 = tf.constant([[[[[0.8278, 0.9655], [0.0238, 0.5089]], [[0.4253, 0.4153], [0.8824, 0.2813]]], [[[0.7809, 0.0757], [0.5663, 0.2673]], [[0.8766, 0.6779], [0.4801, 0.8257]]]]])
in0Mul50153 = tf.constant([[[[0.1919, 0.7447], [0.6637, 0.5983]], [[0.6041, 0.1256], [0.5339, 0.7626]]]])
in1Mul50153 = tf.constant([[[[0.5872, 0.4733], [0.3764, 0.1345]], [[0.2851, 0.0844], [0.264, 0.9163]]]])
in0Con82362 = tf.constant([[[[0.1404, 0.8169], [0.3084, 0.5974]], [[0.7431, 0.0223], [0.9798, 0.7586]]]])
in0Con21722 = tf.constant([[[[[0.5937], [0.4282], [0.3495], [0.7348], [0.6055]], [[0.8055], [0.2968], [0.6426], [0.116], [0.4013]], [[0.7442], [0.8698], [0.6084], [0.9908], [0.1137]]], [[[0.533], [0.0418], [0.3228], [0.3791], [0.0126]], [[0.3297], [0.2422], [0.9802], [0.6009], [0.7547]], [[0.9635], [0.8817], [0.329], [0.9997], [0.0765]]], [[[0.3463], [0.7527], [0.7893], [0.8707], [0.0016]], [[0.3157], [0.0995], [0.476], [0.9522], [0.1454]], [[0.5151], [0.1342], [0.0093], [0.7798], [0.5945]]]]])
in0Con25535 = tf.constant([[[[[0.8134], [0.1597]], [[0.131], [0.4147]]], [[[0.7098], [0.2055]], [[0.0599], [0.1048]]]]])
print (np.array2string(model.predict([in0PRe80269,in0Mul50153,in1Mul50153,in0Con82362,in0Con21722,in0Con25535],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Min12322.png')

LPRe80269 = prelu_layer([[[[[0.8278, 0.9655], [0.0238, 0.5089]], [[0.4253, 0.4153], [0.8824, 0.2813]]], [[[0.7809, 0.0757], [0.5663, 0.2673]], [[0.8766, 0.6779], [0.4801, 0.8257]]]]], [[[[0.9646, 0.3064], [0.3735, 0.9833]], [[0.6013, 0.5297], [0.5864, 0.5623]]], [[[0.9166, 0.165], [0.6847, 0.2992]], [[0.899, 0.4688], [0.0023, 0.7525]]]], PRe80269), 
LRes1737 = reshape_layer(PRe80269, [2, 2, 4], Res1737), 
LMul50153 = multiply_layer([[[[[0.1919, 0.7447], [0.6637, 0.5983]], [[0.6041, 0.1256], [0.5339, 0.7626]]]], [[[[0.5872, 0.4733], [0.3764, 0.1345]], [[0.2851, 0.0844], [0.264, 0.9163]]]]], Mul50153), 
LCon82362 = concatenate_layer([Mul50153,[[[[0.1404, 0.8169], [0.3084, 0.5974]], [[0.7431, 0.0223], [0.9798, 0.7586]]]]], 3, Con82362), 
LMax13615 = maximum_layer([Res1737,Con82362], Max13615), 
LRes79640 = reshape_layer(Max13615, [2, 2, 4, 1], Res79640), 
LZer41025 = zero_padding3D_layer(Res79640, 1, 0, 1, 0, 1, 0, Zer41025), 
LCon21722 = concatenate_layer([Zer41025,[[[[[0.5937], [0.4282], [0.3495], [0.7348], [0.6055]], [[0.8055], [0.2968], [0.6426], [0.116], [0.4013]], [[0.7442], [0.8698], [0.6084], [0.9908], [0.1137]]], [[[0.533], [0.0418], [0.3228], [0.3791], [0.0126]], [[0.3297], [0.2422], [0.9802], [0.6009], [0.7547]], [[0.9635], [0.8817], [0.329], [0.9997], [0.0765]]], [[[0.3463], [0.7527], [0.7893], [0.8707], [0.0016]], [[0.3157], [0.0995], [0.476], [0.9522], [0.1454]], [[0.5151], [0.1342], [0.0093], [0.7798], [0.5945]]]]]], 4, Con21722), 
LCon25535 = conv3D_transpose_layer([[[[[0.8134], [0.1597]], [[0.131], [0.4147]]], [[[0.7098], [0.2055]], [[0.0599], [0.1048]]]]], 2, 2, 2,[[[[[0.8403], [0.9659]], [[0.4549], [0.7576]]], [[[0.2897], [0.3142]], [[0.1493], [0.4691]]]], [[[[0.2267], [0.8073]], [[0.1192], [0.3061]]], [[[0.0284], [0.3317]], [[0.3724], [0.314]]]]],[0, 0], 1, 1, 1, false, Con25535), 
LZer74323 = zero_padding3D_layer(Con25535, 0, 0, 0, 0, 2, 0, Zer74323), 
LMin12322 = minimum_layer([Con21722,Zer74323], Min12322), 
exec_layers([LPRe80269,LRes1737,LMul50153,LCon82362,LMax13615,LRes79640,LZer41025,LCon21722,LCon25535,LZer74323,LMin12322],["PRe80269","Res1737","Mul50153","Con82362","Max13615","Res79640","Zer41025","Con21722","Con25535","Zer74323","Min12322"],Min12322,"Min12322")

Actual (Unparsed): [[[[[0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.3495000], [0.0000000, 0.7348000], [0.0000000, 0.1209887]], [[0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.3821032], [0.0000000, 0.1160000], [0.0000000, 0.3890920]], [[0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0411602], [0.0000000, 0.1917508], [0.0000000, 0.1137000]]], [[[0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.3228000], [0.0000000, 0.3791000], [0.0000000, 0.0126000]], [[0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.3087613, 0.6564376], [0.1404000, 0.6009000], [0.1872592, 0.3528820]], [[0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0210734, 0.0622733], [0.0998655, 0.2397172], [0.1700809, 0.0765000]]], [[[0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.5730215], [0.0000000, 0.3831699], [0.0000000, 0.0016000]], [[0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0337377, 0.2837979], [0.3010640, 0.3939820], [0.0890204, 0.0966063]], [[0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0017012, 0.0093000], [0.0252831, 0.0535708], [0.0390275, 0.0329072]]]]]

Expected (Unparsed): [[[[[0,0],[0,0],[0,0.3495],[0,0.7348],[0,0.12098872000000001]],[[0,0],[0,0],[0,0.38210318],[0,0.116],[0,0.38909199000000005]],[[0,0],[0,0],[0,0.0411602],[0,0.19175084],[0,0.1137]]],[[[0,0],[0,0],[0,0.3228],[0,0.3791],[0,0.0126]],[[0,0],[0,0],[0.30876129,0.65643765],[0.1404,0.6009],[0.18725919,0.35288200000000003]],[[0,0],[0,0],[0.021073430000000004,0.06227328],[0.09986551000000002,0.23971724],[0.17008092,0.0765]]],[[[0,0],[0,0],[0,0.57302154],[0,0.38316993],[0,0.0016]],[[0,0],[0,0],[0.03373765,0.28379793],[0.30106396,0.39398198],[0.08902035999999999,0.09660628]],[[0,0],[0,0],[0.0017011600000000002,0.0093],[0.025283080000000003,0.05357076],[0.03902752,0.032907200000000005]]]]]

Actual:   [[[[[0, 0], [0, 0], [0, 0.3495], [0, 0.7348], [0, 0.121]], [[0, 0], [0, 0], [0, 0.3822], [0, 0.116], [0, 0.3891]], [[0, 0], [0, 0], [0, 0.0412], [0, 0.1918], [0, 0.1137]]], [[[0, 0], [0, 0], [0, 0.3228], [0, 0.3791], [0, 0.0126]], [[0, 0], [0, 0], [0.3088, 0.6565], [0.1404, 0.6009], [0.1873, 0.3529]], [[0, 0], [0, 0], [0.0211, 0.0623], [0.0999, 0.2398], [0.1701, 0.0765]]], [[[0, 0], [0, 0], [0, 0.5731], [0, 0.3832], [0, 0.0016]], [[0, 0], [0, 0], [0.0338, 0.2838], [0.3011, 0.394], [0.0891, 0.0967]], [[0, 0], [0, 0], [0.0018, 0.0093], [0.0253, 0.0536], [0.0391, 0.033]]]]]

Expected: [[[[[0, 0], [0, 0], [0, 0.3495], [0, 0.7348], [0, 0.121]], [[0, 0], [0, 0], [0, 0.3822], [0, 0.116], [0, 0.3891]], [[0, 0], [0, 0], [0, 0.0412], [0, 0.1918], [0, 0.1137]]], [[[0, 0], [0, 0], [0, 0.3228], [0, 0.3791], [0, 0.0126]], [[0, 0], [0, 0], [0.3088, 0.6565], [0.1404, 0.6009], [0.1873, 0.3529]], [[0, 0], [0, 0], [0.0211, 0.0623], [0.0999, 0.2398], [0.1701, 0.0765]]], [[[0, 0], [0, 0], [0, 0.5731], [0, 0.3832], [0, 0.0016]], [[0, 0], [0, 0], [0.0338, 0.2838], [0.3011, 0.394], [0.0891, 0.0967]], [[0, 0], [0, 0], [0.0018, 0.0093], [0.0253, 0.0536], [0.0391, 0.033]]]]]