import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Max87348 = tf.keras.layers.Input(shape=([2, 2, 2, 2]))
in1Max87348 = tf.keras.layers.Input(shape=([2, 2, 2, 2]))
in0Bat4582 = tf.keras.layers.Input(shape=([2, 3]))
in0Con19062 = tf.keras.layers.Input(shape=([13]))
in0Loc81270 = tf.keras.layers.Input(shape=([2, 2]))
in0Con67497 = tf.keras.layers.Input(shape=([14]))

Max87348 = keras.layers.Maximum(name = 'Max87348', )([in0Max87348,in1Max87348])
Res6522 = keras.layers.Reshape((2, 2, 4), name = 'Res6522', )(Max87348)
Res93808 = keras.layers.Reshape((2, 8), name = 'Res93808', )(Res6522)
Fla71158 = keras.layers.Flatten(name = 'Fla71158', )(Res93808)
Bat4582 = keras.layers.BatchNormalization(axis=1, epsilon=0.9043941586049824,  name = 'Bat4582', )(in0Bat4582)
Glo98494 = keras.layers.GlobalAveragePooling1D(name = 'Glo98494', )(Bat4582)
Con19062 = keras.layers.Concatenate(axis=1, name = 'Con19062', )([Glo98494,in0Con19062])
Add71641 = keras.layers.Add(name = 'Add71641', )([Fla71158,Con19062])
Loc81270 = keras.layers.LocallyConnected1D(2, (2),strides=(1), name = 'Loc81270', )(in0Loc81270)
Glo94216 = keras.layers.GlobalMaxPool1D(name = 'Glo94216', )(Loc81270)
Con67497 = keras.layers.Concatenate(axis=1, name = 'Con67497', )([Glo94216,in0Con67497])
Mul61401 = keras.layers.Multiply(name = 'Mul61401', )([Add71641,Con67497])
model = tf.keras.models.Model(inputs=[in0Max87348,in1Max87348,in0Bat4582,in0Con19062,in0Loc81270,in0Con67497], outputs=Mul61401)
w = model.get_layer('Bat4582').get_weights() 
w[0] = np.array([0.8198, 0.5253])
w[1] = np.array([0.4681, 0.6129])
w[2] = np.array([0.3176, 0.3147])
w[3] = np.array([0.3194, 0.1271])
model.get_layer('Bat4582').set_weights(w) 
w = model.get_layer('Loc81270').get_weights() 
w[0] = np.array([[[0.6106, 0.1514], [0.6627, 0.9342], [0.1669, 0.1229], [0.2696, 0.0414]]])
w[1] = np.array([[0, 0]])
model.get_layer('Loc81270').set_weights(w) 
in0Max87348 = tf.constant([[[[[0.233, 0.1344], [0.6208, 0.051]], [[0.0845, 0.9525], [0.0699, 0.5502]]], [[[0.2103, 0.1982], [0.3848, 0.8783]], [[0.0407, 0.5415], [0.1069, 0.215]]]]])
in1Max87348 = tf.constant([[[[[0.9442, 0.4898], [0.816, 0.862]], [[0.503, 0.0771], [0.3733, 0.6071]]], [[[0.3061, 0.7465], [0.9422, 0.4359]], [[0.322, 0.7907], [0.7953, 0.7182]]]]])
in0Bat4582 = tf.constant([[[1.3476, 1.8478, 1.0567], [1.9596, 1.1195, 1.9851]]])
in0Con19062 = tf.constant([[0.4721, 0.5911, 0.1948, 0.9557, 0.5883, 0.0648, 0.647, 0.7745, 0.7578, 0.3657, 0.6801, 0.8506, 0.7382]])
in0Loc81270 = tf.constant([[[0.819, 0.572], [0.4225, 0.8449]]])
in0Con67497 = tf.constant([[0.1928, 0.6933, 0.0255, 0.1796, 0.1435, 0.2579, 0.3319, 0.0732, 0.8153, 0.4199, 0.5314, 0.1993, 0.3705, 0.6715]])
print (np.array2string(model.predict([in0Max87348,in1Max87348,in0Bat4582,in0Con19062,in0Loc81270,in0Con67497],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Mul61401.png')

LMax87348 = maximum_layer([[[[[[0.233, 0.1344], [0.6208, 0.051]], [[0.0845, 0.9525], [0.0699, 0.5502]]], [[[0.2103, 0.1982], [0.3848, 0.8783]], [[0.0407, 0.5415], [0.1069, 0.215]]]]], [[[[[0.9442, 0.4898], [0.816, 0.862]], [[0.503, 0.0771], [0.3733, 0.6071]]], [[[0.3061, 0.7465], [0.9422, 0.4359]], [[0.322, 0.7907], [0.7953, 0.7182]]]]]], Max87348), 
LRes6522 = reshape_layer(Max87348, [2, 2, 4], Res6522), 
LRes93808 = reshape_layer(Res6522, [2, 8], Res93808), 
LFla71158 = flatten_layer(Res93808, Fla71158), 
LBat4582 = batch_normalization_layer([[[1.3476, 1.8478, 1.0567], [1.9596, 1.1195, 1.9851]]], 1, 0.9043941586049824, [0.8198, 0.5253], [0.4681, 0.6129], [0.3176, 0.3147], [0.3194, 0.1271], Bat4582), 
LGlo98494 = global_average_pooling1D_layer(Bat4582, Glo98494), 
LCon19062 = concatenate_layer([Glo98494,[[0.4721, 0.5911, 0.1948, 0.9557, 0.5883, 0.0648, 0.647, 0.7745, 0.7578, 0.3657, 0.6801, 0.8506, 0.7382]]], 1, Con19062), 
LAdd71641 = add_layer([Fla71158,Con19062], Add71641), 
LLoc81270 = locally_connected1D_layer([[[0.819, 0.572], [0.4225, 0.8449]]], 2,[[[0.6106, 0.1514], [0.6627, 0.9342], [0.1669, 0.1229], [0.2696, 0.0414]]],[[0, 0]], 1, Loc81270), 
LGlo94216 = global_max_pool1D_layer(Loc81270, Glo94216), 
LCon67497 = concatenate_layer([Glo94216,[[0.1928, 0.6933, 0.0255, 0.1796, 0.1435, 0.2579, 0.3319, 0.0732, 0.8153, 0.4199, 0.5314, 0.1993, 0.3705, 0.6715]]], 1, Con67497), 
LMul61401 = multiply_layer([Add71641,Con67497], Mul61401), 
exec_layers([LMax87348,LRes6522,LRes93808,LFla71158,LBat4582,LGlo98494,LCon19062,LAdd71641,LLoc81270,LGlo94216,LCon67497,LMul61401],["Max87348","Res6522","Res93808","Fla71158","Bat4582","Glo98494","Con19062","Add71641","Loc81270","Glo94216","Con67497","Mul61401"],Mul61401,"Mul61401")

Actual (Unparsed): [[2.6983915, 1.3455087, 0.3976191, 0.9249315, 0.0278995, 0.2060551, 0.1907115, 0.3082937, 0.1231017, 0.1020042, 1.3996255, 0.6869984, 0.3654438, 0.2931305, 0.6098060, 0.9779727]]

Expected (Unparsed): [[2.6983915079628455,1.3455085830304154,0.3976191137281912,0.9249315300000001,0.02789955,0.20605508,0.19071149999999998,0.30829366,0.12310170999999999,0.1020042,1.39962551,0.68699839,0.36544378,0.29313044000000005,0.60980595,0.9779726]]

Actual:   [[2.6984, 1.3456, 0.3977, 0.925, 0.0279, 0.2061, 0.1908, 0.3083, 0.1232, 0.1021, 1.3997, 0.687, 0.3655, 0.2932, 0.6099, 0.978]]

Expected: [[2.6984, 1.3456, 0.3977, 0.925, 0.0279, 0.2061, 0.1908, 0.3083, 0.1232, 0.1021, 1.3997, 0.687, 0.3655, 0.2932, 0.6099, 0.978]]