import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Lay68159 = tf.keras.layers.Input(shape=([4]))
in0Con54145 = tf.keras.layers.Input(shape=([4, 3, 2]))
in0Con494 = tf.keras.layers.Input(shape=([2, 2, 1]))
in0Glo82517 = tf.keras.layers.Input(shape=([2, 1, 1]))
in0Con9376 = tf.keras.layers.Input(shape=([35]))
in0Max14820 = tf.keras.layers.Input(shape=([2, 1]))
in1Max14820 = tf.keras.layers.Input(shape=([2, 1]))

Lay68159 = keras.layers.LayerNormalization(axis=1, epsilon=2.6077883284073713, name = 'Lay68159', )(in0Lay68159)
Res88406 = keras.layers.Reshape((4, 1), name = 'Res88406', )(Lay68159)
Res84812 = keras.layers.Reshape((4, 1, 1), name = 'Res84812', )(Res88406)
Zer23979 = keras.layers.ZeroPadding2D(padding=((0, 0), (2, 0)), name = 'Zer23979', )(Res84812)
Con54145 = keras.layers.Concatenate(axis=3, name = 'Con54145', )([Zer23979,in0Con54145])
Con494 = keras.layers.Conv2DTranspose(3, (2, 1),strides=(1, 1), padding='same', name = 'Con494', )(in0Con494)
Zer24484 = keras.layers.ZeroPadding2D(padding=((2, 0), (1, 0)), name = 'Zer24484', )(Con494)
Sub43023 = keras.layers.Subtract(name = 'Sub43023', )([Con54145,Zer24484])
Res31231 = keras.layers.Reshape((4, 9), name = 'Res31231', )(Sub43023)
Fla99190 = keras.layers.Flatten(name = 'Fla99190', )(Res31231)
Glo82517 = keras.layers.GlobalMaxPool2D(name = 'Glo82517', )(in0Glo82517)
Con9376 = keras.layers.Concatenate(axis=1, name = 'Con9376', )([Glo82517,in0Con9376])
Mul99339 = keras.layers.Multiply(name = 'Mul99339', )([Fla99190,Con9376])
Thr94932 = keras.layers.ThresholdedReLU(theta=5.06112298910192, name = 'Thr94932', )(Mul99339)
Res50082 = keras.layers.Reshape((36, 1), name = 'Res50082', )(Thr94932)
Max14820 = keras.layers.Maximum(name = 'Max14820', )([in0Max14820,in1Max14820])
Zer16477 = keras.layers.ZeroPadding1D(padding=((34, 0)), name = 'Zer16477', )(Max14820)
Add34386 = keras.layers.Add(name = 'Add34386', )([Res50082,Zer16477])
model = tf.keras.models.Model(inputs=[in0Lay68159,in0Con54145,in0Con494,in0Glo82517,in0Con9376,in0Max14820,in1Max14820], outputs=Add34386)
w = model.get_layer('Con494').get_weights() 
w[0] = np.array([[[[0.6054], [0.7745], [0.2146]]], [[[0.8345], [0.0082], [0.9253]]]])
w[1] = np.array([0, 0, 0])
model.get_layer('Con494').set_weights(w) 
in0Lay68159 = tf.constant([[1.0346, 1.956, 1.2957, 1.5052]])
in0Con54145 = tf.constant([[[[0.1365, 0.7888], [0.6903, 0.4507], [0.0646, 0.3139]], [[0.0135, 0.2093], [0.8047, 0.3666], [0.4737, 0.7176]], [[0.7409, 0.87], [0.3723, 0.2155], [0.6935, 0.4199]], [[0.5469, 0.2231], [0.0128, 0.7434], [0.0721, 0.7179]]]])
in0Con494 = tf.constant([[[[0.9714], [0.1443]], [[0.953], [0.3162]]]])
in0Glo82517 = tf.constant([[[[1.469]], [[1.7614]]]])
in0Con9376 = tf.constant([[0.2031, 0.0399, 0.4883, 0.2648, 0.2366, 0.8585, 0.5618, 0.3982, 0.3245, 0.9364, 0.5643, 0.2587, 0.8512, 0.6922, 0.5563, 0.3869, 0.1212, 0.3281, 0.2611, 0.4634, 0.4315, 0.6133, 0.328, 0.998, 0.212, 0.668, 0.2627, 0.1154, 0.2467, 0.3136, 0.6732, 0.1596, 0.3336, 0.2502, 0.0929]])
in0Max14820 = tf.constant([[[0.9003], [0.8045]]])
in1Max14820 = tf.constant([[[0.3768], [0.7042]]])
print (np.array2string(model.predict([in0Lay68159,in0Con54145,in0Con494,in0Glo82517,in0Con9376,in0Max14820,in1Max14820],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Add34386.png')

LLay68159 = layer_normalization_layer([[1.0346, 1.956, 1.2957, 1.5052]], 1, 2.6077883284073713, Lay68159), 
LRes88406 = reshape_layer(Lay68159, [4, 1], Res88406), 
LRes84812 = reshape_layer(Res88406, [4, 1, 1], Res84812), 
LZer23979 = zero_padding2D_layer(Res84812, 0, 0, 2, 0, Zer23979), 
LCon54145 = concatenate_layer([Zer23979,[[[[0.1365, 0.7888], [0.6903, 0.4507], [0.0646, 0.3139]], [[0.0135, 0.2093], [0.8047, 0.3666], [0.4737, 0.7176]], [[0.7409, 0.87], [0.3723, 0.2155], [0.6935, 0.4199]], [[0.5469, 0.2231], [0.0128, 0.7434], [0.0721, 0.7179]]]]], 3, Con54145), 
LCon494 = conv2D_transpose_layer([[[[0.9714], [0.1443]], [[0.953], [0.3162]]]], 2, 1,[[[[0.6054], [0.7745], [0.2146]]], [[[0.8345], [0.0082], [0.9253]]]],[0, 0, 0], 1, 1, true, Con494), 
LZer24484 = zero_padding2D_layer(Con494, 2, 0, 1, 0, Zer24484), 
LSub43023 = subtract_layer(Con54145,Zer24484, Sub43023), 
LRes31231 = reshape_layer(Sub43023, [4, 9], Res31231), 
LFla99190 = flatten_layer(Res31231, Fla99190), 
LGlo82517 = global_max_pool2D_layer([[[[1.469]], [[1.7614]]]], Glo82517), 
LCon9376 = concatenate_layer([Glo82517,[[0.2031, 0.0399, 0.4883, 0.2648, 0.2366, 0.8585, 0.5618, 0.3982, 0.3245, 0.9364, 0.5643, 0.2587, 0.8512, 0.6922, 0.5563, 0.3869, 0.1212, 0.3281, 0.2611, 0.4634, 0.4315, 0.6133, 0.328, 0.998, 0.212, 0.668, 0.2627, 0.1154, 0.2467, 0.3136, 0.6732, 0.1596, 0.3336, 0.2502, 0.0929]]], 1, Con9376), 
LMul99339 = multiply_layer([Fla99190,Con9376], Mul99339), 
LThr94932 = thresholded_relu_layer(Mul99339, 5.06112298910192, Thr94932), 
LRes50082 = reshape_layer(Thr94932, [36, 1], Res50082), 
LMax14820 = maximum_layer([[[[0.9003], [0.8045]]], [[[0.3768], [0.7042]]]], Max14820), 
LZer16477 = zero_padding1D_layer(Max14820, 34, 0, Zer16477), 
LAdd34386 = add_layer([Res50082,Zer16477], Add34386), 
exec_layers([LLay68159,LRes88406,LRes84812,LZer23979,LCon54145,LCon494,LZer24484,LSub43023,LRes31231,LFla99190,LGlo82517,LCon9376,LMul99339,LThr94932,LRes50082,LMax14820,LZer16477,LAdd34386],["Lay68159","Res88406","Res84812","Zer23979","Con54145","Con494","Zer24484","Sub43023","Res31231","Fla99190","Glo82517","Con9376","Mul99339","Thr94932","Res50082","Max14820","Zer16477","Add34386"],Add34386,"Add34386")

Actual (Unparsed): [[[0.0000000], [0.0000000], [0.0000000], [0.0000000], [0.0000000], [0.0000000], [0.0000000], [0.0000000], [0.0000000], [0.0000000], [0.0000000], [0.0000000], [0.0000000], [0.0000000], [0.0000000], [0.0000000], [0.0000000], [0.0000000], [0.0000000], [0.0000000], [0.0000000], [0.0000000], [0.0000000], [0.0000000], [0.0000000], [0.0000000], [0.0000000], [0.0000000], [0.0000000], [0.0000000], [0.0000000], [0.0000000], [0.0000000], [0.0000000], [0.9003000], [0.8045000]]]

Expected (Unparsed): [[[0],[0],[0],[0],[0],[0],[0],[0],[0],[0],[0],[0],[0],[0],[0],[0],[0],[0],[0],[0],[0],[0],[0],[0],[0],[0],[0],[0],[0],[0],[0],[0],[0],[0],[0.9003],[0.8045]]]

Actual:   [[[0], [0], [0], [0], [0], [0], [0], [0], [0], [0], [0], [0], [0], [0], [0], [0], [0], [0], [0], [0], [0], [0], [0], [0], [0], [0], [0], [0], [0], [0], [0], [0], [0], [0], [0.9003], [0.8045]]]

Expected: [[[0], [0], [0], [0], [0], [0], [0], [0], [0], [0], [0], [0], [0], [0], [0], [0], [0], [0], [0], [0], [0], [0], [0], [0], [0], [0], [0], [0], [0], [0], [0], [0], [0], [0], [0.9003], [0.8045]]]