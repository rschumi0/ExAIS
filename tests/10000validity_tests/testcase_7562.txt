import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Glo26353 = tf.keras.layers.Input(shape=([1, 1, 1, 2]))
in0Con6458 = tf.keras.layers.Input(shape=([2, 1]))
in0Ave49854 = tf.keras.layers.Input(shape=([1, 2]))
in1Ave49854 = tf.keras.layers.Input(shape=([1, 2]))

Glo26353 = keras.layers.GlobalMaxPool3D(name = 'Glo26353', )(in0Glo26353)
Res76663 = keras.layers.Reshape((2, 1), name = 'Res76663', )(Glo26353)
Con6458 = keras.layers.Concatenate(axis=2, name = 'Con6458', )([Res76663,in0Con6458])
Ave49854 = keras.layers.Average(name = 'Ave49854', )([in0Ave49854,in1Ave49854])
Zer25697 = keras.layers.ZeroPadding1D(padding=((1, 0)), name = 'Zer25697', )(Ave49854)
Min90946 = keras.layers.Minimum(name = 'Min90946', )([Con6458,Zer25697])
model = tf.keras.models.Model(inputs=[in0Glo26353,in0Con6458,in0Ave49854,in1Ave49854], outputs=Min90946)
in0Glo26353 = tf.constant([[[[[1.1353, 1.4872]]]]])
in0Con6458 = tf.constant([[[0.6378], [0.0837]]])
in0Ave49854 = tf.constant([[[0.5032, 0.1646]]])
in1Ave49854 = tf.constant([[[0.1786, 0.5829]]])
print (np.array2string(model.predict([in0Glo26353,in0Con6458,in0Ave49854,in1Ave49854],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Min90946.png')

LGlo26353 = global_max_pool3D_layer([[[[[1.1353, 1.4872]]]]], Glo26353), 
LRes76663 = reshape_layer(Glo26353, [2, 1], Res76663), 
LCon6458 = concatenate_layer([Res76663,[[[0.6378], [0.0837]]]], 2, Con6458), 
LAve49854 = average_layer([[[[0.5032, 0.1646]]], [[[0.1786, 0.5829]]]], Ave49854), 
LZer25697 = zero_padding1D_layer(Ave49854, 1, 0, Zer25697), 
LMin90946 = minimum_layer([Con6458,Zer25697], Min90946), 
exec_layers([LGlo26353,LRes76663,LCon6458,LAve49854,LZer25697,LMin90946],["Glo26353","Res76663","Con6458","Ave49854","Zer25697","Min90946"],Min90946,"Min90946")

Actual (Unparsed): [[[0.0000000, 0.0000000], [0.3409000, 0.0837000]]]

Expected (Unparsed): [[[0,0],[0.3409,0.0837]]]

Actual:   [[[0, 0], [0.3409, 0.0837]]]

Expected: [[[0, 0], [0.3409, 0.0837]]]