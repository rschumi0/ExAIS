import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Den47773 = tf.keras.layers.Input(shape=([2, 4]))

Den47773 = keras.layers.Dense(1,name = 'Den47773', )(in0Den47773)
Res97412 = keras.layers.Reshape((2, 1, 1), name = 'Res97412', )(Den47773)
Con22750 = keras.layers.Conv2D(2, (2, 1),strides=(1, 1), padding='same', dilation_rate=(1, 1), name = 'Con22750', )(Res97412)
Res16477 = keras.layers.Reshape((2, 1, 2, 1), name = 'Res16477', )(Con22750)
Cro44592 = keras.layers.Cropping3D(cropping=((1, 0), (0, 0), (1, 0)), name = 'Cro44592', )(Res16477)
model = tf.keras.models.Model(inputs=[in0Den47773], outputs=Cro44592)
w = model.get_layer('Den47773').get_weights() 
w[0] = np.array([[0.0763], [0.9689], [0.0069], [0.0577]])
w[1] = np.array([0.2382])
model.get_layer('Den47773').set_weights(w) 
w = model.get_layer('Con22750').get_weights() 
w[0] = np.array([[[[0.8737, 0.211]]], [[[0.3437, 0.9939]]]])
w[1] = np.array([0, 0])
model.get_layer('Con22750').set_weights(w) 
in0Den47773 = tf.constant([[[0.6319, 0.6357, 0.6985, 0.9512], [0.879, 0.4707, 0.5271, 0.74]]])
print (np.array2string(model.predict([in0Den47773],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Cro44592.png')

LDen47773 = dense_layer([[[0.6319, 0.6357, 0.6985, 0.9512], [0.879, 0.4707, 0.5271, 0.74]]], [[0.0763], [0.9689], [0.0069], [0.0577]],[0.2382], Den47773), 
LRes97412 = reshape_layer(Den47773, [2, 1, 1], Res97412), 
LCon22750 = conv2D_layer(Res97412, 2, 1,[[[[0.8737, 0.211]]], [[[0.3437, 0.9939]]]],[0, 0], 1, 1, true, 1, 1, Con22750), 
LRes16477 = reshape_layer(Con22750, [2, 1, 2, 1], Res16477), 
LCro44592 = cropping3D_layer(Res16477, 1, 0, 0, 0, 1, 0, Cro44592), 
exec_layers([LDen47773,LRes97412,LCon22750,LRes16477,LCro44592],["Den47773","Res97412","Con22750","Res16477","Cro44592"],Cro44592,"Cro44592")

Actual (Unparsed): [[[[[0.1704171]]]]]

Expected (Unparsed): [[[[[0.17041708711999998]]]]]

Actual:   [[[[[0.1705]]]]]

Expected: [[[[[0.1705]]]]]