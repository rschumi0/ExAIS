import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Sof65604 = tf.keras.layers.Input(shape=([2, 1]))
in0Con37620 = tf.keras.layers.Input(shape=([3, 2, 6, 2]))
in0Up_87126 = tf.keras.layers.Input(shape=([3, 2, 3, 3]))

Sof65604 = keras.layers.Softmax(axis=1, name = 'Sof65604', input_shape=(2, 1))(in0Sof65604)
Lay5420 = keras.layers.LayerNormalization(axis=1, epsilon=1.716403129737682, name = 'Lay5420', )(Sof65604)
Res48712 = keras.layers.Reshape((2, 1, 1), name = 'Res48712', )(Lay5420)
Res3262 = keras.layers.Reshape((2, 1, 1, 1), name = 'Res3262', )(Res48712)
Zer24632 = keras.layers.ZeroPadding3D(padding=((1, 0), (1, 0), (5, 0)), name = 'Zer24632', )(Res3262)
Con37620 = keras.layers.Concatenate(axis=4, name = 'Con37620', )([Zer24632,in0Con37620])
Up_87126 = keras.layers.UpSampling3D(size=(1, 1, 2), name = 'Up_87126', )(in0Up_87126)
Mul78292 = keras.layers.Multiply(name = 'Mul78292', )([Con37620,Up_87126])
model = tf.keras.models.Model(inputs=[in0Sof65604,in0Con37620,in0Up_87126], outputs=Mul78292)
in0Sof65604 = tf.constant([[[0.8814], [0.2046]]])
in0Con37620 = tf.constant([[[[[0.5737, 0.1474], [0.2577, 0.4458], [0.0281, 0.2185], [0.64, 0.1999], [0.1568, 0.9202], [0.627, 0.591]], [[0.2978, 0.2799], [0.4188, 0.0114], [0.9463, 0.3608], [0.0559, 0.7909], [0.8808, 0.9024], [0.7785, 0.9199]]], [[[0.2915, 0.8938], [0.7978, 0.0439], [0.2851, 0.4417], [0.2474, 0.4046], [0.0584, 0.8719], [0.3884, 0.9999]], [[0.9785, 0.8642], [0.9775, 0.6118], [0.7853, 0.5609], [0.0777, 0.5047], [0.1397, 0.0143], [0.488, 0.5403]]], [[[0.7818, 0.0399], [0.4016, 0.1696], [0.6361, 0.5306], [0.8625, 0.2688], [0.2989, 0.5498], [0.0836, 0.0626]], [[0.4823, 0.0735], [0.7157, 0.4478], [0.1504, 0.0768], [0.7087, 0.8693], [0.2812, 0.7732], [0.4977, 0.5298]]]]])
in0Up_87126 = tf.constant([[[[[1.7099, 1.3328, 1.7806], [1.9436, 1.7569, 1.8665], [1.379, 1.6876, 1.3252]], [[1.036, 1.4729, 1.2942], [1.8612, 1.6322, 1.6848], [1.625, 1.5027, 1.5519]]], [[[1.1604, 1.602, 1.015], [1.2874, 1.2028, 1.0997], [1.3824, 1.8981, 1.5479]], [[1.3162, 1.7865, 1.0781], [1.8327, 1.0552, 1.751], [1.0447, 1.2976, 1.0424]]], [[[1.4273, 1.4956, 1.9251], [1.9979, 1.3575, 1.808], [1.0193, 1.6921, 1.5579]], [[1.9872, 1.7026, 1.6229], [1.4417, 1.6095, 1.9239], [1.2693, 1.9188, 1.1517]]]]])
print (np.array2string(model.predict([in0Sof65604,in0Con37620,in0Up_87126],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Mul78292.png')

LSof65604 = softmax_layer([[[0.8814], [0.2046]]], 1, Sof65604), 
LLay5420 = layer_normalization_layer(Sof65604, 1, 1.716403129737682, Lay5420), 
LRes48712 = reshape_layer(Lay5420, [2, 1, 1], Res48712), 
LRes3262 = reshape_layer(Res48712, [2, 1, 1, 1], Res3262), 
LZer24632 = zero_padding3D_layer(Res3262, 1, 0, 1, 0, 5, 0, Zer24632), 
LCon37620 = concatenate_layer([Zer24632,[[[[[0.5737, 0.1474], [0.2577, 0.4458], [0.0281, 0.2185], [0.64, 0.1999], [0.1568, 0.9202], [0.627, 0.591]], [[0.2978, 0.2799], [0.4188, 0.0114], [0.9463, 0.3608], [0.0559, 0.7909], [0.8808, 0.9024], [0.7785, 0.9199]]], [[[0.2915, 0.8938], [0.7978, 0.0439], [0.2851, 0.4417], [0.2474, 0.4046], [0.0584, 0.8719], [0.3884, 0.9999]], [[0.9785, 0.8642], [0.9775, 0.6118], [0.7853, 0.5609], [0.0777, 0.5047], [0.1397, 0.0143], [0.488, 0.5403]]], [[[0.7818, 0.0399], [0.4016, 0.1696], [0.6361, 0.5306], [0.8625, 0.2688], [0.2989, 0.5498], [0.0836, 0.0626]], [[0.4823, 0.0735], [0.7157, 0.4478], [0.1504, 0.0768], [0.7087, 0.8693], [0.2812, 0.7732], [0.4977, 0.5298]]]]]], 4, Con37620), 
LUp_87126 = up_sampling3D_layer([[[[[1.7099, 1.3328, 1.7806], [1.9436, 1.7569, 1.8665], [1.379, 1.6876, 1.3252]], [[1.036, 1.4729, 1.2942], [1.8612, 1.6322, 1.6848], [1.625, 1.5027, 1.5519]]], [[[1.1604, 1.602, 1.015], [1.2874, 1.2028, 1.0997], [1.3824, 1.8981, 1.5479]], [[1.3162, 1.7865, 1.0781], [1.8327, 1.0552, 1.751], [1.0447, 1.2976, 1.0424]]], [[[1.4273, 1.4956, 1.9251], [1.9979, 1.3575, 1.808], [1.0193, 1.6921, 1.5579]], [[1.9872, 1.7026, 1.6229], [1.4417, 1.6095, 1.9239], [1.2693, 1.9188, 1.1517]]]]], 1, 1, 2, Up_87126), 
LMul78292 = multiply_layer([Con37620,Up_87126], Mul78292), 
exec_layers([LSof65604,LLay5420,LRes48712,LRes3262,LZer24632,LCon37620,LUp_87126,LMul78292],["Sof65604","Lay5420","Res48712","Res3262","Zer24632","Con37620","Up_87126","Mul78292"],Mul78292,"Mul78292")

Actual (Unparsed): [[[[[0.0000000, 0.7646274, 0.2624604], [0.0000000, 0.3434626, 0.7937915], [0.0000000, 0.0493689, 0.4078303], [0.0000000, 1.1244159, 0.3731134], [0.0000000, 0.2646157, 1.2194490], [0.0000000, 1.0581252, 0.7831932]], [[0.0000000, 0.4386296, 0.3622466], [0.0000000, 0.6168505, 0.0147539], [0.0000000, 1.5445509, 0.6078758], [0.0000000, 0.0912400, 1.3325083], [0.0000000, 1.3235781, 1.4004346], [0.0000000, 1.1698520, 1.4275928]]], [[[0.0000000, 0.4669830, 0.9072070], [0.0000000, 1.2780756, 0.0445585], [0.0000000, 0.3429183, 0.4857375], [0.0000000, 0.2975727, 0.4449386], [0.0000000, 0.1108490, 1.3496140], [0.0000000, 0.7372220, 1.5477451]], [[0.0000000, 1.7480902, 0.9316940], [0.0000000, 1.7463038, 0.6595816], [0.0000000, 0.8286486, 0.9821359], [0.0000000, 0.0819890, 0.8837297], [0.0000000, 0.1812747, 0.0149063], [0.1290022, 0.6332288, 0.5632087]]], [[[0.0000000, 1.1692600, 0.0768115], [0.0000000, 0.6006330, 0.3264969], [0.0000000, 0.8635057, 0.9593248], [0.0000000, 1.1708437, 0.4859904], [0.0000000, 0.5057687, 0.8565334], [0.0000000, 0.1414596, 0.0975245]], [[0.0000000, 0.8211640, 0.1192832], [0.0000000, 1.2185508, 0.7267346], [0.0000000, 0.2420688, 0.1477555], [0.0000000, 1.1406527, 1.6724463], [0.0000000, 0.5395665, 0.8904944], [-0.1567364, 0.9549868, 0.6101707]]]]]

Expected (Unparsed): [[[[[0.0,0.76462736,0.26246044],[0.0,0.34346256,0.7937914799999999],[0.0,0.04936889,0.40783025],[0.0,1.1244159999999999,0.37311335],[0.0,0.26461567999999996,1.21944904],[0.0,1.0581252,0.7831931999999999]],[[0.0,0.43862962000000005,0.36224658],[0.0,0.6168505200000001,0.01475388],[0.0,1.5445508600000002,0.6078758400000001],[0.0,0.09123998,1.33250832],[0.0,1.32357816,1.40043456],[0.0,1.16985195,1.4275928100000002]]],[[[0.0,0.466983,0.907207],[0.0,1.2780756,0.044558499999999994],[0.0,0.3429182800000001,0.48573748999999994],[0.0,0.29757272,0.44493861999999995],[0.0,0.11084904,1.34961401],[0.0,0.73722204,1.54774521]],[[0.0,1.74809025,0.93169402],[0.0,1.74630375,0.65958158],[0.0,0.82864856,0.9821358999999998],[0.0,0.08198904,0.8837297000000001],[0.0,0.18127472,0.01490632],[0.12900223947212672,0.6332288,0.56320872]]],[[[0.0,1.1692600800000001,0.07681149],[0.0,0.60063296,0.32649696],[0.0,0.86350575,0.9593248],[0.0,1.17084375,0.4859904],[0.0,0.50576869,0.85653342],[0.0,0.14145955999999998,0.09752454]],[[0.0,0.8211639799999999,0.11928314999999999],[0.0,1.21855082,0.72673462],[0.0,0.2420688,0.14775551999999997],[0.0,1.14065265,1.6724462699999998],[0.0,0.53956656,0.89049444],[-0.1567364243916631,0.9549867599999999,0.61017066]]]]]

Actual:   [[[[[0, 0.7647, 0.2625], [0, 0.3435, 0.7938], [0, 0.0494, 0.4079], [0, 1.1245, 0.3732], [0, 0.2647, 1.2195], [0, 1.0582, 0.7832]], [[0, 0.4387, 0.3623], [0, 0.6169, 0.0148], [0, 1.5446, 0.6079], [0, 0.0913, 1.3326], [0, 1.3236, 1.4005], [0, 1.1699, 1.4276]]], [[[0, 0.467, 0.9073], [0, 1.2781, 0.0446], [0, 0.343, 0.4858], [0, 0.2976, 0.445], [0, 0.1109, 1.3497], [0, 0.7373, 1.5478]], [[0, 1.7481, 0.9317], [0, 1.7464, 0.6596], [0, 0.8287, 0.9822], [0, 0.082, 0.8838], [0, 0.1813, 0.015], [0.1291, 0.6333, 0.5633]]], [[[0, 1.1693, 0.0769], [0, 0.6007, 0.3265], [0, 0.8636, 0.9594], [0, 1.1709, 0.486], [0, 0.5058, 0.8566], [0, 0.1415, 0.0976]], [[0, 0.8212, 0.1193], [0, 1.2186, 0.7268], [0, 0.2421, 0.1478], [0, 1.1407, 1.6725], [0, 0.5396, 0.8905], [-0.1567, 0.955, 0.6102]]]]]

Expected: [[[[[0, 0.7647, 0.2625], [0, 0.3435, 0.7938], [0, 0.0494, 0.4079], [0, 1.1245, 0.3732], [0, 0.2647, 1.2195], [0, 1.0582, 0.7832]], [[0, 0.4387, 0.3623], [0, 0.6169, 0.0148], [0, 1.5446, 0.6079], [0, 0.0913, 1.3326], [0, 1.3236, 1.4005], [0, 1.1699, 1.4276]]], [[[0, 0.467, 0.9073], [0, 1.2781, 0.0446], [0, 0.343, 0.4858], [0, 0.2976, 0.445], [0, 0.1109, 1.3497], [0, 0.7373, 1.5478]], [[0, 1.7481, 0.9317], [0, 1.7464, 0.6596], [0, 0.8287, 0.9822], [0, 0.082, 0.8838], [0, 0.1813, 0.015], [0.1291, 0.6333, 0.5633]]], [[[0, 1.1693, 0.0769], [0, 0.6007, 0.3265], [0, 0.8636, 0.9594], [0, 1.1709, 0.486], [0, 0.5058, 0.8566], [0, 0.1415, 0.0976]], [[0, 0.8212, 0.1193], [0, 1.2186, 0.7268], [0, 0.2421, 0.1478], [0, 1.1407, 1.6725], [0, 0.5396, 0.8905], [-0.1567, 0.955, 0.6102]]]]]