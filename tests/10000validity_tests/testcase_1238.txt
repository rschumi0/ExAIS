import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Per98545 = tf.keras.layers.Input(shape=([1, 1]))
in0Con9897 = tf.keras.layers.Input(shape=([2, 2, 1, 1]))
in0Max30304 = tf.keras.layers.Input(shape=([2, 2, 1, 2]))
in1Max30304 = tf.keras.layers.Input(shape=([2, 2, 1, 2]))
in0Glo15510 = tf.keras.layers.Input(shape=([1, 1]))
in0Con3641 = tf.keras.layers.Input(shape=([7]))

Per98545 = keras.layers.Permute((2,1), name = 'Per98545',)(in0Per98545)
Res27129 = keras.layers.Reshape((1, 1, 1), name = 'Res27129', )(Per98545)
Res68084 = keras.layers.Reshape((1, 1, 1, 1), name = 'Res68084', )(Res27129)
Zer66019 = keras.layers.ZeroPadding3D(padding=((1, 0), (1, 0), (0, 0)), name = 'Zer66019', )(Res68084)
Con9897 = keras.layers.Concatenate(axis=4, name = 'Con9897', )([Zer66019,in0Con9897])
Max30304 = keras.layers.Maximum(name = 'Max30304', )([in0Max30304,in1Max30304])
Min89900 = keras.layers.Minimum(name = 'Min89900', )([Con9897,Max30304])
Res8093 = keras.layers.Reshape((2, 2, 2), name = 'Res8093', )(Min89900)
Res75961 = keras.layers.Reshape((2, 4), name = 'Res75961', )(Res8093)
Fla29462 = keras.layers.Flatten(name = 'Fla29462', )(Res75961)
Glo15510 = keras.layers.GlobalMaxPool1D(name = 'Glo15510', )(in0Glo15510)
Con3641 = keras.layers.Concatenate(axis=1, name = 'Con3641', )([Glo15510,in0Con3641])
Ave5193 = keras.layers.Average(name = 'Ave5193', )([Fla29462,Con3641])
Lea77254 = keras.layers.LeakyReLU(alpha=0.5330796371963451, name = 'Lea77254', )(Ave5193)
Res40913 = keras.layers.Reshape((8, 1), name = 'Res40913', )(Lea77254)
Loc44412 = keras.layers.LocallyConnected1D(4, (5),strides=(1), name = 'Loc44412', )(Res40913)
model = tf.keras.models.Model(inputs=[in0Per98545,in0Con9897,in0Max30304,in1Max30304,in0Glo15510,in0Con3641], outputs=Loc44412)
w = model.get_layer('Loc44412').get_weights() 
w[0] = np.array([[[0.0098, 0.123, 0.3195, 0.4437], [0.3719, 0.0591, 0.0649, 0.62], [0.9553, 0.6581, 0.7759, 0.5912], [0.0467, 0.5046, 0.5116, 0.1694], [0.4739, 0.7895, 0.4574, 0.9279]], [[0.5801, 0.1149, 0.6559, 0.5518], [0.1052, 0.6661, 0.9652, 0.7199], [0.567, 0.2028, 0.1689, 0.9247], [0.0612, 0.9616, 0.4385, 0.3629], [0.8799, 0.6174, 0.2873, 0.6597]], [[0.9874, 0.9084, 0.7415, 0.7235], [0.1834, 0.3923, 0.7046, 0.4729], [0.7368, 0.0739, 0.3927, 0.525], [0.3776, 0.319, 0.2781, 0.1883], [0.7988, 0.555, 0.195, 0.2666]], [[0.2371, 0.7444, 0.133, 0.246], [0.2792, 0.5169, 0.7717, 0.4116], [0.7679, 0.1442, 0.9956, 0.3195], [0.5754, 0.2515, 0.4676, 0.8368], [0.0493, 0.2733, 0.8385, 0.6547]]])
w[1] = np.array([[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]])
model.get_layer('Loc44412').set_weights(w) 
in0Per98545 = tf.constant([[[1.6256]]])
in0Con9897 = tf.constant([[[[[0.5044]], [[0.2605]]], [[[0.6143]], [[0.9534]]]]])
in0Max30304 = tf.constant([[[[[0.3858, 0.7415]], [[0.246, 0.6025]]], [[[0.7985, 0.3255]], [[0.1104, 0.0327]]]]])
in1Max30304 = tf.constant([[[[[0.359, 0.8498]], [[0.849, 0.91]]], [[[0.0424, 0.0249]], [[0.2188, 0.499]]]]])
in0Glo15510 = tf.constant([[[1.4007]]])
in0Con3641 = tf.constant([[0.0441, 0.9023, 0.1017, 0.5115, 0.3556, 0.4429, 0.6252]])
print (np.array2string(model.predict([in0Per98545,in0Con9897,in0Max30304,in1Max30304,in0Glo15510,in0Con3641],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Loc44412.png')

LPer98545 = permute_layer([[[1.6256]]], 2,1, Per98545), 
LRes27129 = reshape_layer(Per98545, [1, 1, 1], Res27129), 
LRes68084 = reshape_layer(Res27129, [1, 1, 1, 1], Res68084), 
LZer66019 = zero_padding3D_layer(Res68084, 1, 0, 1, 0, 0, 0, Zer66019), 
LCon9897 = concatenate_layer([Zer66019,[[[[[0.5044]], [[0.2605]]], [[[0.6143]], [[0.9534]]]]]], 4, Con9897), 
LMax30304 = maximum_layer([[[[[[0.3858, 0.7415]], [[0.246, 0.6025]]], [[[0.7985, 0.3255]], [[0.1104, 0.0327]]]]], [[[[[0.359, 0.8498]], [[0.849, 0.91]]], [[[0.0424, 0.0249]], [[0.2188, 0.499]]]]]], Max30304), 
LMin89900 = minimum_layer([Con9897,Max30304], Min89900), 
LRes8093 = reshape_layer(Min89900, [2, 2, 2], Res8093), 
LRes75961 = reshape_layer(Res8093, [2, 4], Res75961), 
LFla29462 = flatten_layer(Res75961, Fla29462), 
LGlo15510 = global_max_pool1D_layer([[[1.4007]]], Glo15510), 
LCon3641 = concatenate_layer([Glo15510,[[0.0441, 0.9023, 0.1017, 0.5115, 0.3556, 0.4429, 0.6252]]], 1, Con3641), 
LAve5193 = average_layer([Fla29462,Con3641], Ave5193), 
LLea77254 = leaky_relu_layer(Ave5193, 0.5330796371963451, Lea77254), 
LRes40913 = reshape_layer(Lea77254, [8, 1], Res40913), 
LLoc44412 = locally_connected1D_layer(Res40913, 5,[[[0.0098, 0.123, 0.3195, 0.4437], [0.3719, 0.0591, 0.0649, 0.62], [0.9553, 0.6581, 0.7759, 0.5912], [0.0467, 0.5046, 0.5116, 0.1694], [0.4739, 0.7895, 0.4574, 0.9279]], [[0.5801, 0.1149, 0.6559, 0.5518], [0.1052, 0.6661, 0.9652, 0.7199], [0.567, 0.2028, 0.1689, 0.9247], [0.0612, 0.9616, 0.4385, 0.3629], [0.8799, 0.6174, 0.2873, 0.6597]], [[0.9874, 0.9084, 0.7415, 0.7235], [0.1834, 0.3923, 0.7046, 0.4729], [0.7368, 0.0739, 0.3927, 0.525], [0.3776, 0.319, 0.2781, 0.1883], [0.7988, 0.555, 0.195, 0.2666]], [[0.2371, 0.7444, 0.133, 0.246], [0.2792, 0.5169, 0.7717, 0.4116], [0.7679, 0.1442, 0.9956, 0.3195], [0.5754, 0.2515, 0.4676, 0.8368], [0.0493, 0.2733, 0.8385, 0.6547]]],[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]], 1, Loc44412), 
exec_layers([LPer98545,LRes27129,LRes68084,LZer66019,LCon9897,LMax30304,LMin89900,LRes8093,LRes75961,LFla29462,LGlo15510,LCon3641,LAve5193,LLea77254,LRes40913,LLoc44412],["Per98545","Res27129","Res68084","Zer66019","Con9897","Max30304","Min89900","Res8093","Res75961","Fla29462","Glo15510","Con3641","Ave5193","Lea77254","Res40913","Loc44412"],Loc44412,"Loc44412")

Actual (Unparsed): [[[0.6694979, 0.6925507, 0.8012387, 1.0154889], [0.6245390, 0.8249342, 0.8559047, 0.9610497], [1.0599905, 0.7920273, 0.7217865, 0.6986481], [0.5939352, 0.5529460, 1.1865265, 0.9034852]]]

Expected (Unparsed): [[[0.669497895,0.692550725,0.801238745,1.0154889399999998],[0.62453895,0.82493419,0.855904735,0.9610497149999999],[1.05999051,0.792027315,0.721786515,0.6986481400000001],[0.593935175,0.55294603,1.186526465,0.903485175]]]

Actual:   [[[0.6695, 0.6926, 0.8013, 1.0155], [0.6246, 0.825, 0.856, 0.9611], [1.06, 0.7921, 0.7218, 0.6987], [0.594, 0.553, 1.1866, 0.9035]]]

Expected: [[[0.6695, 0.6926, 0.8013, 1.0155], [0.6246, 0.825, 0.856, 0.9611], [1.06, 0.7921, 0.7218, 0.6987], [0.594, 0.553, 1.1866, 0.9035]]]