import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Min85331 = tf.keras.layers.Input(shape=([2, 2, 1, 2]))
in1Min85331 = tf.keras.layers.Input(shape=([2, 2, 1, 2]))

Min85331 = keras.layers.Minimum(name = 'Min85331', )([in0Min85331,in1Min85331])
Res37319 = keras.layers.Reshape((2, 2, 2), name = 'Res37319', )(Min85331)
Up_26166 = keras.layers.UpSampling2D(size=(2, 2), name = 'Up_26166', )(Res37319)
Res24928 = keras.layers.Reshape((4, 8), name = 'Res24928', )(Up_26166)
Glo10319 = keras.layers.GlobalMaxPool1D(name = 'Glo10319', )(Res24928)
model = tf.keras.models.Model(inputs=[in0Min85331,in1Min85331], outputs=Glo10319)
in0Min85331 = tf.constant([[[[[0.1592, 0.5143]], [[0.7949, 0.7443]]], [[[0.9267, 0.2]], [[0.4363, 0.1344]]]]])
in1Min85331 = tf.constant([[[[[0.1694, 0.551]], [[0.3925, 0.2056]]], [[[0.0131, 0.023]], [[0.0559, 0.9749]]]]])
print (np.array2string(model.predict([in0Min85331,in1Min85331],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Glo10319.png')

LMin85331 = minimum_layer([[[[[[0.1592, 0.5143]], [[0.7949, 0.7443]]], [[[0.9267, 0.2]], [[0.4363, 0.1344]]]]], [[[[[0.1694, 0.551]], [[0.3925, 0.2056]]], [[[0.0131, 0.023]], [[0.0559, 0.9749]]]]]], Min85331), 
LRes37319 = reshape_layer(Min85331, [2, 2, 2], Res37319), 
LUp_26166 = up_sampling2D_layer(Res37319, 2, 2, Up_26166), 
LRes24928 = reshape_layer(Up_26166, [4, 8], Res24928), 
LGlo10319 = global_max_pool1D_layer(Res24928, Glo10319), 
exec_layers([LMin85331,LRes37319,LUp_26166,LRes24928,LGlo10319],["Min85331","Res37319","Up_26166","Res24928","Glo10319"],Glo10319,"Glo10319")

Actual (Unparsed): [[0.1592000, 0.5143000, 0.1592000, 0.5143000, 0.3925000, 0.2056000, 0.3925000, 0.2056000]]

Expected (Unparsed): [[0.1592,0.5143,0.1592,0.5143,0.3925,0.2056,0.3925,0.2056]]

Actual:   [[0.1592, 0.5143, 0.1592, 0.5143, 0.3925, 0.2056, 0.3925, 0.2056]]

Expected: [[0.1592, 0.5143, 0.1592, 0.5143, 0.3925, 0.2056, 0.3925, 0.2056]]