import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Up_66331 = tf.keras.layers.Input(shape=([4, 4, 3]))
in0Sub21120 = tf.keras.layers.Input(shape=([3, 2, 2]))
in1Sub21120 = tf.keras.layers.Input(shape=([3, 2, 2]))
in0Con51412 = tf.keras.layers.Input(shape=([4, 3, 1]))
in0Add56785 = tf.keras.layers.Input(shape=([2, 1, 2]))
in1Add56785 = tf.keras.layers.Input(shape=([2, 1, 2]))
in0Con88398 = tf.keras.layers.Input(shape=([4, 3, 1]))

Up_66331 = keras.layers.UpSampling2D(size=(1, 1), name = 'Up_66331', )(in0Up_66331)
Ave23802 = keras.layers.AveragePooling2D(pool_size=(1, 1), strides=(1, 8), padding='same', name = 'Ave23802', )(Up_66331)
Zer93005 = keras.layers.ZeroPadding2D(padding=((0, 0), (2, 0)), name = 'Zer93005', )(Ave23802)
Sub21120 = keras.layers.Subtract(name = 'Sub21120', )([in0Sub21120,in1Sub21120])
Zer27055 = keras.layers.ZeroPadding2D(padding=((1, 0), (1, 0)), name = 'Zer27055', )(Sub21120)
Con51412 = keras.layers.Concatenate(axis=3, name = 'Con51412', )([Zer27055,in0Con51412])
Sub14453 = keras.layers.Subtract(name = 'Sub14453', )([Zer93005,Con51412])
Add56785 = keras.layers.Add(name = 'Add56785', )([in0Add56785,in1Add56785])
Zer24405 = keras.layers.ZeroPadding2D(padding=((2, 0), (2, 0)), name = 'Zer24405', )(Add56785)
Con88398 = keras.layers.Concatenate(axis=3, name = 'Con88398', )([Zer24405,in0Con88398])
Min97320 = keras.layers.Minimum(name = 'Min97320', )([Sub14453,Con88398])
model = tf.keras.models.Model(inputs=[in0Up_66331,in0Sub21120,in1Sub21120,in0Con51412,in0Add56785,in1Add56785,in0Con88398], outputs=Min97320)
in0Up_66331 = tf.constant([[[[1.8331, 1.6416, 1.7821], [1.156, 1.4455, 1.4249], [1.0057, 1.0703, 1.0522], [1.3606, 1.0028, 1.5425]], [[1.8521, 1.1094, 1.8345], [1.5317, 1.4939, 1.3509], [1.8112, 1.7399, 1.0056], [1.6783, 1.4458, 1.9519]], [[1.6364, 1.8127, 1.2974], [1.5268, 1.27, 1.2812], [1.963, 1.2415, 1.7103], [1.571, 1.1308, 1.1947]], [[1.063, 1.173, 1.0481], [1.0201, 1.6401, 1.8566], [1.9769, 1.2281, 1.3001], [1.9806, 1.21, 1.099]]]])
in0Sub21120 = tf.constant([[[[0.9045, 0.6381], [0.0041, 0.1838]], [[0.6168, 0.9586], [0.3478, 0.1332]], [[0.1002, 0.9432], [0.8303, 0.2731]]]])
in1Sub21120 = tf.constant([[[[0.2821, 0.8004], [0.9988, 0.0715]], [[0.2427, 0.8631], [0.5038, 0.4]], [[0.9596, 0.821], [0.0157, 0.2846]]]])
in0Con51412 = tf.constant([[[[0.7438], [0.1302], [0.2576]], [[0.4299], [0.3825], [0.3838]], [[0.4775], [0.6739], [0.183]], [[0.7886], [0.3607], [0.7146]]]])
in0Add56785 = tf.constant([[[[0.0924, 0.1803]], [[0.3701, 0.6606]]]])
in1Add56785 = tf.constant([[[[0.7304, 0.577]], [[0.6462, 0.4989]]]])
in0Con88398 = tf.constant([[[[0.2312], [0.1215], [0.2912]], [[0.0533], [0.8388], [0.8472]], [[0.1769], [0.507], [0.7734]], [[0.2493], [0.4424], [0.4567]]]])
print (np.array2string(model.predict([in0Up_66331,in0Sub21120,in1Sub21120,in0Con51412,in0Add56785,in1Add56785,in0Con88398],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Min97320.png')

LUp_66331 = up_sampling2D_layer([[[[1.8331, 1.6416, 1.7821], [1.156, 1.4455, 1.4249], [1.0057, 1.0703, 1.0522], [1.3606, 1.0028, 1.5425]], [[1.8521, 1.1094, 1.8345], [1.5317, 1.4939, 1.3509], [1.8112, 1.7399, 1.0056], [1.6783, 1.4458, 1.9519]], [[1.6364, 1.8127, 1.2974], [1.5268, 1.27, 1.2812], [1.963, 1.2415, 1.7103], [1.571, 1.1308, 1.1947]], [[1.063, 1.173, 1.0481], [1.0201, 1.6401, 1.8566], [1.9769, 1.2281, 1.3001], [1.9806, 1.21, 1.099]]]], 1, 1, Up_66331), 
LAve23802 = average_pooling2D_layer(Up_66331, 1, 1, 1, 8, true, Ave23802), 
LZer93005 = zero_padding2D_layer(Ave23802, 0, 0, 2, 0, Zer93005), 
LSub21120 = subtract_layer([[[[0.9045, 0.6381], [0.0041, 0.1838]], [[0.6168, 0.9586], [0.3478, 0.1332]], [[0.1002, 0.9432], [0.8303, 0.2731]]]], [[[[0.2821, 0.8004], [0.9988, 0.0715]], [[0.2427, 0.8631], [0.5038, 0.4]], [[0.9596, 0.821], [0.0157, 0.2846]]]], Sub21120), 
LZer27055 = zero_padding2D_layer(Sub21120, 1, 0, 1, 0, Zer27055), 
LCon51412 = concatenate_layer([Zer27055,[[[[0.7438], [0.1302], [0.2576]], [[0.4299], [0.3825], [0.3838]], [[0.4775], [0.6739], [0.183]], [[0.7886], [0.3607], [0.7146]]]]], 3, Con51412), 
LSub14453 = subtract_layer(Zer93005,Con51412, Sub14453), 
LAdd56785 = add_layer([[[[[0.0924, 0.1803]], [[0.3701, 0.6606]]]], [[[[0.7304, 0.577]], [[0.6462, 0.4989]]]]], Add56785), 
LZer24405 = zero_padding2D_layer(Add56785, 2, 0, 2, 0, Zer24405), 
LCon88398 = concatenate_layer([Zer24405,[[[[0.2312], [0.1215], [0.2912]], [[0.0533], [0.8388], [0.8472]], [[0.1769], [0.507], [0.7734]], [[0.2493], [0.4424], [0.4567]]]]], 3, Con88398), 
LMin97320 = minimum_layer([Sub14453,Con88398], Min97320), 
exec_layers([LUp_66331,LAve23802,LZer93005,LSub21120,LZer27055,LCon51412,LSub14453,LAdd56785,LZer24405,LCon88398,LMin97320],["Up_66331","Ave23802","Zer93005","Sub21120","Zer27055","Con51412","Sub14453","Add56785","Zer24405","Con88398","Min97320"],Min97320,"Min97320")

Actual (Unparsed): [[[[0.0000000, 0.0000000, -0.7438000], [0.0000000, 0.0000000, -0.1302000], [0.0000000, 0.0000000, 0.2912000]], [[0.0000000, 0.0000000, -0.4299000], [-0.6224000, 0.0000000, -0.3825000], [0.0000000, 0.0000000, 0.8472000]], [[0.0000000, 0.0000000, -0.4775000], [-0.3741000, -0.0955000, -0.6739000], [0.8228000, 0.7573000, 0.7734000]], [[0.0000000, 0.0000000, -0.7886000], [0.0000000, -0.1222000, -0.3607000], [0.2484000, 1.1595000, 0.3335000]]]]

Expected (Unparsed): [[[[0,0,-0.7438],[0,0,-0.1302],[0,0,0.2912]],[[0,0,-0.4299],[-0.6224,0,-0.3825],[0,0,0.8472]],[[0,0,-0.4775],[-0.3741,-0.09550000000000003,-0.6739],[0.8228000000000001,0.7573,0.7734]],[[0,0,-0.7886],[0,-0.12220000000000009,-0.3607],[0.24839999999999995,1.1595,0.3335]]]]

Actual:   [[[[0, 0, -0.7438], [0, 0, -0.1302], [0, 0, 0.2912]], [[0, 0, -0.4299], [-0.6224, 0, -0.3825], [0, 0, 0.8472]], [[0, 0, -0.4775], [-0.3741, -0.0955, -0.6739], [0.8228, 0.7573, 0.7734]], [[0, 0, -0.7886], [0, -0.1222, -0.3607], [0.2484, 1.1595, 0.3335]]]]

Expected: [[[[0, 0, -0.7438], [0, 0, -0.1302], [0, 0, 0.2912]], [[0, 0, -0.4299], [-0.6224, 0, -0.3825], [0, 0, 0.8472]], [[0, 0, -0.4775], [-0.3741, -0.0955, -0.6739], [0.8229, 0.7573, 0.7734]], [[0, 0, -0.7886], [0, -0.1222, -0.3607], [0.2484, 1.1595, 0.3335]]]]