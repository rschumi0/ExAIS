import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Cro8195 = tf.keras.layers.Input(shape=([3, 4, 3]))
in0Con828 = tf.keras.layers.Input(shape=([1, 1]))
in0Min93362 = tf.keras.layers.Input(shape=([1, 1, 2, 1]))
in1Min93362 = tf.keras.layers.Input(shape=([1, 1, 2, 1]))
in0Sub52088 = tf.keras.layers.Input(shape=([2, 3]))
in1Sub52088 = tf.keras.layers.Input(shape=([2, 3]))

Cro8195 = keras.layers.Cropping2D(cropping=((2, 0), (0, 1)), name = 'Cro8195', )(in0Cro8195)
Glo43557 = keras.layers.GlobalAveragePooling2D(name = 'Glo43557', )(Cro8195)
Res84911 = keras.layers.Reshape((3, 1), name = 'Res84911', )(Glo43557)
Res36234 = keras.layers.Reshape((3, 1, 1), name = 'Res36234', )(Res84911)
Res4694 = keras.layers.Reshape((3, 1, 1, 1), name = 'Res4694', )(Res36234)
Up_46750 = keras.layers.UpSampling3D(size=(2, 1, 1), name = 'Up_46750', )(Res4694)
Res99195 = keras.layers.Reshape((6, 1, 1), name = 'Res99195', )(Up_46750)
Res81587 = keras.layers.Reshape((6, 1), name = 'Res81587', )(Res99195)
Sep54824 = keras.layers.SeparableConv1D(2, (4),strides=(4), padding='valid', name = 'Sep54824', )(Res81587)
Con828 = keras.layers.Concatenate(axis=2, name = 'Con828', )([Sep54824,in0Con828])
Min93362 = keras.layers.Minimum(name = 'Min93362', )([in0Min93362,in1Min93362])
Res7459 = keras.layers.Reshape((1, 1, 2), name = 'Res7459', )(Min93362)
Res69203 = keras.layers.Reshape((1, 2), name = 'Res69203', )(Res7459)
Con91546 = keras.layers.Conv1D(3, (1),strides=(1), padding='valid', dilation_rate=(1), name = 'Con91546', )(Res69203)
Den86707 = keras.layers.Dense(3,name = 'Den86707', )(Con91546)
Sub26616 = keras.layers.Subtract(name = 'Sub26616', )([Con828,Den86707])
Res24388 = keras.layers.Reshape((1, 3, 1), name = 'Res24388', )(Sub26616)
Zer85099 = keras.layers.ZeroPadding2D(padding=((1, 0), (2, 0)), name = 'Zer85099', )(Res24388)
Sub52088 = keras.layers.Subtract(name = 'Sub52088', )([in0Sub52088,in1Sub52088])
Res81021 = keras.layers.Reshape((2, 3, 1), name = 'Res81021', )(Sub52088)
Ave37856 = keras.layers.AveragePooling2D(pool_size=(1, 3), strides=(1, 1), padding='valid', name = 'Ave37856', )(Res81021)
Sof79622 = keras.layers.Softmax(axis=1, name = 'Sof79622', )(Ave37856)
Zer85045 = keras.layers.ZeroPadding2D(padding=((0, 0), (4, 0)), name = 'Zer85045', )(Sof79622)
Ave41434 = keras.layers.Average(name = 'Ave41434', )([Zer85099,Zer85045])
model = tf.keras.models.Model(inputs=[in0Cro8195,in0Con828,in0Min93362,in1Min93362,in0Sub52088,in1Sub52088], outputs=Ave41434)
w = model.get_layer('Sep54824').get_weights() 
w[0] = np.array([[[0.0671]], [[0.6221]], [[0.2655]], [[0.7278]]])
w[1] = np.array([[[0.9702, 0.2092]]])
w[2] = np.array([0, 0])
model.get_layer('Sep54824').set_weights(w) 
w = model.get_layer('Con91546').get_weights() 
w[0] = np.array([[[0.496, 0.4813, 0.1559], [0.3775, 0.3352, 0.4971]]])
w[1] = np.array([0, 0, 0])
model.get_layer('Con91546').set_weights(w) 
w = model.get_layer('Den86707').get_weights() 
w[0] = np.array([[0.0646, 0.7994, 0.8861], [0.6617, 0.3012, 0.7283], [0.4297, 0.8884, 0.3067]])
w[1] = np.array([0.4106, 0.8764, 0.7799])
model.get_layer('Den86707').set_weights(w) 
in0Cro8195 = tf.constant([[[[1.3035, 1.5186, 1.8911], [1.2212, 1.5446, 1.7662], [1.2607, 1.9781, 1.5092], [1.2925, 1.9662, 1.0833]], [[1.7493, 1.0505, 1.2445], [1.3487, 1.2965, 1.8046], [1.2605, 1.3789, 1.5969], [1.6314, 1.0753, 1.477]], [[1.5429, 1.7999, 1.7742], [1.2971, 1.3506, 1.2351], [1.3936, 1.0628, 1.4134], [1.1592, 1.4927, 1.5057]]]])
in0Con828 = tf.constant([[[0.0172]]])
in0Min93362 = tf.constant([[[[[0.5452], [0.0453]]]]])
in1Min93362 = tf.constant([[[[[0.8318], [0.6817]]]]])
in0Sub52088 = tf.constant([[[0.2227, 0.7204, 0.6384], [0.4698, 0.533, 0.3118]]])
in1Sub52088 = tf.constant([[[0.3679, 0.8729, 0.5369], [0.7409, 0.7019, 0.2036]]])
print (np.array2string(model.predict([in0Cro8195,in0Con828,in0Min93362,in1Min93362,in0Sub52088,in1Sub52088],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Ave41434.png')

LCro8195 = cropping2D_layer([[[[1.3035, 1.5186, 1.8911], [1.2212, 1.5446, 1.7662], [1.2607, 1.9781, 1.5092], [1.2925, 1.9662, 1.0833]], [[1.7493, 1.0505, 1.2445], [1.3487, 1.2965, 1.8046], [1.2605, 1.3789, 1.5969], [1.6314, 1.0753, 1.477]], [[1.5429, 1.7999, 1.7742], [1.2971, 1.3506, 1.2351], [1.3936, 1.0628, 1.4134], [1.1592, 1.4927, 1.5057]]]], 2, 0, 0, 1, Cro8195), 
LGlo43557 = global_average_pooling2D_layer(Cro8195, Glo43557), 
LRes84911 = reshape_layer(Glo43557, [3, 1], Res84911), 
LRes36234 = reshape_layer(Res84911, [3, 1, 1], Res36234), 
LRes4694 = reshape_layer(Res36234, [3, 1, 1, 1], Res4694), 
LUp_46750 = up_sampling3D_layer(Res4694, 2, 1, 1, Up_46750), 
LRes99195 = reshape_layer(Up_46750, [6, 1, 1], Res99195), 
LRes81587 = reshape_layer(Res99195, [6, 1], Res81587), 
LSep54824 = separable_conv1D_layer(Res81587, 4,[[[[0.0671]], [[0.6221]], [[0.2655]], [[0.7278]]],[[[0.9702, 0.2092]]]],[0, 0], 4, false, Sep54824), 
LCon828 = concatenate_layer([Sep54824,[[[0.0172]]]], 2, Con828), 
LMin93362 = minimum_layer([[[[[[0.5452], [0.0453]]]]], [[[[[0.8318], [0.6817]]]]]], Min93362), 
LRes7459 = reshape_layer(Min93362, [1, 1, 2], Res7459), 
LRes69203 = reshape_layer(Res7459, [1, 2], Res69203), 
LCon91546 = conv1D_layer(Res69203, 1,[[[0.496, 0.4813, 0.1559], [0.3775, 0.3352, 0.4971]]],[0, 0, 0], 1, false, 1, Con91546), 
LDen86707 = dense_layer(Con91546, [[0.0646, 0.7994, 0.8861], [0.6617, 0.3012, 0.7283], [0.4297, 0.8884, 0.3067]],[0.4106, 0.8764, 0.7799], Den86707), 
LSub26616 = subtract_layer(Con828,Den86707, Sub26616), 
LRes24388 = reshape_layer(Sub26616, [1, 3, 1], Res24388), 
LZer85099 = zero_padding2D_layer(Res24388, 1, 0, 2, 0, Zer85099), 
LSub52088 = subtract_layer([[[0.2227, 0.7204, 0.6384], [0.4698, 0.533, 0.3118]]], [[[0.3679, 0.8729, 0.5369], [0.7409, 0.7019, 0.2036]]], Sub52088), 
LRes81021 = reshape_layer(Sub52088, [2, 3, 1], Res81021), 
LAve37856 = average_pooling2D_layer(Res81021, 1, 3, 1, 1, false, Ave37856), 
LSof79622 = softmax_layer(Ave37856, 1, Sof79622), 
LZer85045 = zero_padding2D_layer(Sof79622, 0, 0, 4, 0, Zer85045), 
LAve41434 = average_layer([Zer85099,Zer85045], Ave41434), 
exec_layers([LCro8195,LGlo43557,LRes84911,LRes36234,LRes4694,LUp_46750,LRes99195,LRes81587,LSep54824,LCon828,LMin93362,LRes7459,LRes69203,LCon91546,LDen86707,LSub26616,LRes24388,LZer85099,LSub52088,LRes81021,LAve37856,LSof79622,LZer85045,LAve41434],["Cro8195","Glo43557","Res84911","Res36234","Res4694","Up_46750","Res99195","Res81587","Sep54824","Con828","Min93362","Res7459","Res69203","Con91546","Den86707","Sub26616","Res24388","Zer85099","Sub52088","Res81021","Ave37856","Sof79622","Zer85045","Ave41434"],Ave41434,"Ave41434")

Actual (Unparsed): [[[[0.0000000], [0.0000000], [0.0000000], [0.0000000], [0.2556490]], [[0.0000000], [0.0000000], [0.8190068], [-0.3950316], [-0.3819564]]]]

Expected (Unparsed): [[[[0],[0],[0],[0],[0.25564903826515245]],[[0],[0],[0.8190067719564997],[-0.395031645027],[-0.3819563757791525]]]]

Actual:   [[[[0], [0], [0], [0], [0.2557]], [[0], [0], [0.8191], [-0.395], [-0.3819]]]]

Expected: [[[[0], [0], [0], [0], [0.2557]], [[0], [0], [0.8191], [-0.395], [-0.3819]]]]