import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Cro57498 = tf.keras.layers.Input(shape=([4, 2, 4, 2]))
in0Dep32271 = tf.keras.layers.Input(shape=([2, 2, 1]))
in0Con68659 = tf.keras.layers.Input(shape=([4, 4, 1]))
in0Zer34034 = tf.keras.layers.Input(shape=([2, 2, 3]))
in0Con45647 = tf.keras.layers.Input(shape=([4, 4, 5]))
in0Dot1642 = tf.keras.layers.Input(shape=([2, 2]))
in1Dot1642 = tf.keras.layers.Input(shape=([2, 2]))
in0Add28164 = tf.keras.layers.Input(shape=([2, 1, 2, 1]))
in1Add28164 = tf.keras.layers.Input(shape=([2, 1, 2, 1]))

Cro57498 = keras.layers.Cropping3D(cropping=((2, 0), (0, 1), (0, 0)), name = 'Cro57498', )(in0Cro57498)
Res21755 = keras.layers.Reshape((2, 1, 8), name = 'Res21755', )(Cro57498)
Zer18036 = keras.layers.ZeroPadding2D(padding=((2, 0), (3, 0)), name = 'Zer18036', )(Res21755)
Dep32271 = keras.layers.DepthwiseConv2D((2, 1),strides=(1, 1), padding='same', name = 'Dep32271', )(in0Dep32271)
Res39212 = keras.layers.Reshape((2, 2), name = 'Res39212', )(Dep32271)
Con4170 = keras.layers.Conv1D(3, (1),strides=(1), padding='same', dilation_rate=(1), name = 'Con4170', )(Res39212)
Res27098 = keras.layers.Reshape((2, 3, 1), name = 'Res27098', )(Con4170)
Loc2594 = keras.layers.LocallyConnected2D(2, (2, 2),strides=(1, 1), name = 'Loc2594', )(Res27098)
Zer49482 = keras.layers.ZeroPadding2D(padding=((3, 0), (2, 0)), name = 'Zer49482', )(Loc2594)
Con68659 = keras.layers.Concatenate(axis=3, name = 'Con68659', )([Zer49482,in0Con68659])
Zer34034 = keras.layers.ZeroPadding2D(padding=((1, 1), (1, 1)), name = 'Zer34034', )(in0Zer34034)
Mul94256 = keras.layers.Multiply(name = 'Mul94256', )([Con68659,Zer34034])
Con45647 = keras.layers.Concatenate(axis=3, name = 'Con45647', )([Mul94256,in0Con45647])
Mul26477 = keras.layers.Multiply(name = 'Mul26477', )([Zer18036,Con45647])
Res5719 = keras.layers.Reshape((4, 4, 8, 1), name = 'Res5719', )(Mul26477)
Dot1642 = keras.layers.Dot(axes=(1, 1), name = 'Dot1642', )([in0Dot1642,in1Dot1642])
Res85221 = keras.layers.Reshape((2, 2, 1), name = 'Res85221', )(Dot1642)
Sep62957 = keras.layers.SeparableConv2D(3, (2, 1),strides=(2, 2), padding='same', name = 'Sep62957', )(Res85221)
Res36917 = keras.layers.Reshape((1, 1, 3, 1), name = 'Res36917', )(Sep62957)
Zer14597 = keras.layers.ZeroPadding3D(padding=((1, 0), (0, 0), (1, 0)), name = 'Zer14597', )(Res36917)
Add28164 = keras.layers.Add(name = 'Add28164', )([in0Add28164,in1Add28164])
Zer7810 = keras.layers.ZeroPadding3D(padding=((0, 0), (0, 0), (2, 0)), name = 'Zer7810', )(Add28164)
Min79323 = keras.layers.Minimum(name = 'Min79323', )([Zer14597,Zer7810])
Zer24048 = keras.layers.ZeroPadding3D(padding=((2, 0), (3, 0), (4, 0)), name = 'Zer24048', )(Min79323)
Sub9843 = keras.layers.Subtract(name = 'Sub9843', )([Res5719,Zer24048])
model = tf.keras.models.Model(inputs=[in0Cro57498,in0Dep32271,in0Con68659,in0Zer34034,in0Con45647,in0Dot1642,in1Dot1642,in0Add28164,in1Add28164], outputs=Sub9843)
w = model.get_layer('Dep32271').get_weights() 
w[0] = np.array([[[[0.004]]], [[[0.4955]]]])
w[1] = np.array([0])
model.get_layer('Dep32271').set_weights(w) 
w = model.get_layer('Con4170').get_weights() 
w[0] = np.array([[[0.0335, 0.3173, 0.087], [0.6072, 0.4604, 0.8816]]])
w[1] = np.array([0, 0, 0])
model.get_layer('Con4170').set_weights(w) 
w = model.get_layer('Loc2594').get_weights() 
w[0] = np.array([[[0.2578, 0.6878], [0.1335, 0.7816], [0.2498, 0.7844], [0.1679, 0.5733]], [[0.9091, 0.4546], [0.7462, 0.5495], [0.7154, 0.9389], [0.0591, 0.8199]]])
w[1] = np.array([[[0, 0], [0, 0]]])
model.get_layer('Loc2594').set_weights(w) 
w = model.get_layer('Sep62957').get_weights() 
w[0] = np.array([[[[0.5094]]], [[[0.8839]]]])
w[1] = np.array([[[[0.8319, 0.9783, 0.6154]]]])
w[2] = np.array([0, 0, 0])
model.get_layer('Sep62957').set_weights(w) 
in0Cro57498 = tf.constant([[[[[1.246, 1.3599], [1.7915, 1.6176], [1.8505, 1.9879], [1.7802, 1.4629]], [[1.9424, 1.526], [1.841, 1.2235], [1.5889, 1.9043], [1.5193, 1.5655]]], [[[1.3305, 1.8396], [1.3852, 1.0403], [1.8503, 1.6898], [1.5844, 1.1268]], [[1.6326, 1.1343], [1.104, 1.7346], [1.0702, 1.0246], [1.061, 1.0258]]], [[[1.1543, 1.3137], [1.5756, 1.6742], [1.9647, 1.185], [1.9551, 1.1031]], [[1.6675, 1.3762], [1.9784, 1.8122], [1.6227, 1.2195], [1.0459, 1.6418]]], [[[1.5059, 1.1068], [1.8412, 1.7056], [1.0558, 1.9267], [1.9343, 1.7708]], [[1.1753, 1.5183], [1.4505, 1.06], [1.6311, 1.3418], [1.5268, 1.8124]]]]])
in0Dep32271 = tf.constant([[[[0.5281], [0.3719]], [[0.7826], [0.4463]]]])
in0Con68659 = tf.constant([[[[0.8703], [0.4441], [0.8836], [0.4856]], [[0.2426], [0.2991], [0.5064], [0.7246]], [[0.8229], [0.275], [0.9491], [0.9651]], [[0.6612], [0.0572], [0.4482], [0.8871]]]])
in0Zer34034 = tf.constant([[[[1.0627, 1.6889, 1.443], [1.8422, 1.8035, 1.3627]], [[1.0704, 1.0837, 1.8885], [1.0054, 1.0831, 1.9809]]]])
in0Con45647 = tf.constant([[[[0.1875, 0.9525, 0.054, 0.3276, 0.2546], [0.8612, 0.1098, 0.0185, 0.7781, 0.5403], [0.1773, 0.9825, 0.143, 0.2384, 0.1188], [0.1551, 0.3047, 0.9169, 0.8687, 0.4157]], [[0.4424, 0.6666, 0.4398, 0.2584, 0.6801], [0.4474, 0.6634, 0.384, 0.5912, 0.9895], [0.6764, 0.5254, 0.427, 0.0852, 0.7858], [0.2251, 0.2714, 0.1764, 0.4884, 0.4729]], [[0.6114, 0.0933, 0.1069, 0.0804, 0.1357], [0.0372, 0.714, 0.4204, 0.9267, 0.4179], [0.7596, 0.693, 0.5928, 0.9504, 0.0901], [0.1901, 0.3063, 0.4994, 0.8558, 0.1288]], [[0.1547, 0.5162, 0.1375, 0.4979, 0.6942], [0.5567, 0.9936, 0.018, 0.1002, 0.2926], [0.0263, 0.7578, 0.8519, 0.6284, 0.4982], [0.1646, 0.4577, 0.0266, 0.49, 0.2713]]]])
in0Dot1642 = tf.constant([[[0.0843, 0.7984], [0.37, 0.8333]]])
in1Dot1642 = tf.constant([[[0.6068, 0.8969], [0.3468, 0.1883]]])
in0Add28164 = tf.constant([[[[[0.9701], [0.8557]]], [[[0.7404], [0.797]]]]])
in1Add28164 = tf.constant([[[[[0.8992], [0.1282]]], [[[0.2391], [0.5787]]]]])
print (np.array2string(model.predict([in0Cro57498,in0Dep32271,in0Con68659,in0Zer34034,in0Con45647,in0Dot1642,in1Dot1642,in0Add28164,in1Add28164],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Sub9843.png')

LCro57498 = cropping3D_layer([[[[[1.246, 1.3599], [1.7915, 1.6176], [1.8505, 1.9879], [1.7802, 1.4629]], [[1.9424, 1.526], [1.841, 1.2235], [1.5889, 1.9043], [1.5193, 1.5655]]], [[[1.3305, 1.8396], [1.3852, 1.0403], [1.8503, 1.6898], [1.5844, 1.1268]], [[1.6326, 1.1343], [1.104, 1.7346], [1.0702, 1.0246], [1.061, 1.0258]]], [[[1.1543, 1.3137], [1.5756, 1.6742], [1.9647, 1.185], [1.9551, 1.1031]], [[1.6675, 1.3762], [1.9784, 1.8122], [1.6227, 1.2195], [1.0459, 1.6418]]], [[[1.5059, 1.1068], [1.8412, 1.7056], [1.0558, 1.9267], [1.9343, 1.7708]], [[1.1753, 1.5183], [1.4505, 1.06], [1.6311, 1.3418], [1.5268, 1.8124]]]]], 2, 0, 0, 1, 0, 0, Cro57498), 
LRes21755 = reshape_layer(Cro57498, [2, 1, 8], Res21755), 
LZer18036 = zero_padding2D_layer(Res21755, 2, 0, 3, 0, Zer18036), 
LDep32271 = depthwise_conv2D_layer([[[[0.5281], [0.3719]], [[0.7826], [0.4463]]]], 2, 1,[[[[0.004]]], [[[0.4955]]]],[0], 1, 1, true, Dep32271), 
LRes39212 = reshape_layer(Dep32271, [2, 2], Res39212), 
LCon4170 = conv1D_layer(Res39212, 1,[[[0.0335, 0.3173, 0.087], [0.6072, 0.4604, 0.8816]]],[0, 0, 0], 1, true, 1, Con4170), 
LRes27098 = reshape_layer(Con4170, [2, 3, 1], Res27098), 
LLoc2594 = locally_connected2D_layer(Res27098, 2, 2,[[[0.2578, 0.6878], [0.1335, 0.7816], [0.2498, 0.7844], [0.1679, 0.5733]], [[0.9091, 0.4546], [0.7462, 0.5495], [0.7154, 0.9389], [0.0591, 0.8199]]],[[[0, 0], [0, 0]]], 1, 1, Loc2594), 
LZer49482 = zero_padding2D_layer(Loc2594, 3, 0, 2, 0, Zer49482), 
LCon68659 = concatenate_layer([Zer49482,[[[[0.8703], [0.4441], [0.8836], [0.4856]], [[0.2426], [0.2991], [0.5064], [0.7246]], [[0.8229], [0.275], [0.9491], [0.9651]], [[0.6612], [0.0572], [0.4482], [0.8871]]]]], 3, Con68659), 
LZer34034 = zero_padding2D_layer([[[[1.0627, 1.6889, 1.443], [1.8422, 1.8035, 1.3627]], [[1.0704, 1.0837, 1.8885], [1.0054, 1.0831, 1.9809]]]], 1, 1, 1, 1, Zer34034), 
LMul94256 = multiply_layer([Con68659,Zer34034], Mul94256), 
LCon45647 = concatenate_layer([Mul94256,[[[[0.1875, 0.9525, 0.054, 0.3276, 0.2546], [0.8612, 0.1098, 0.0185, 0.7781, 0.5403], [0.1773, 0.9825, 0.143, 0.2384, 0.1188], [0.1551, 0.3047, 0.9169, 0.8687, 0.4157]], [[0.4424, 0.6666, 0.4398, 0.2584, 0.6801], [0.4474, 0.6634, 0.384, 0.5912, 0.9895], [0.6764, 0.5254, 0.427, 0.0852, 0.7858], [0.2251, 0.2714, 0.1764, 0.4884, 0.4729]], [[0.6114, 0.0933, 0.1069, 0.0804, 0.1357], [0.0372, 0.714, 0.4204, 0.9267, 0.4179], [0.7596, 0.693, 0.5928, 0.9504, 0.0901], [0.1901, 0.3063, 0.4994, 0.8558, 0.1288]], [[0.1547, 0.5162, 0.1375, 0.4979, 0.6942], [0.5567, 0.9936, 0.018, 0.1002, 0.2926], [0.0263, 0.7578, 0.8519, 0.6284, 0.4982], [0.1646, 0.4577, 0.0266, 0.49, 0.2713]]]]], 3, Con45647), 
LMul26477 = multiply_layer([Zer18036,Con45647], Mul26477), 
LRes5719 = reshape_layer(Mul26477, [4, 4, 8, 1], Res5719), 
LDot1642 = dot_layer([[[0.0843, 0.7984], [0.37, 0.8333]]], [[[0.6068, 0.8969], [0.3468, 0.1883]]], 1, 1, Dot1642), 
LRes85221 = reshape_layer(Dot1642, [2, 2, 1], Res85221), 
LSep62957 = separable_conv2D_layer(Res85221, 2, 1,[[[[[0.5094]]], [[[0.8839]]]],[[[[0.8319, 0.9783, 0.6154]]]]],[0, 0, 0], 2, 2, true, Sep62957), 
LRes36917 = reshape_layer(Sep62957, [1, 1, 3, 1], Res36917), 
LZer14597 = zero_padding3D_layer(Res36917, 1, 0, 0, 0, 1, 0, Zer14597), 
LAdd28164 = add_layer([[[[[[0.9701], [0.8557]]], [[[0.7404], [0.797]]]]], [[[[[0.8992], [0.1282]]], [[[0.2391], [0.5787]]]]]], Add28164), 
LZer7810 = zero_padding3D_layer(Add28164, 0, 0, 0, 0, 2, 0, Zer7810), 
LMin79323 = minimum_layer([Zer14597,Zer7810], Min79323), 
LZer24048 = zero_padding3D_layer(Min79323, 2, 0, 3, 0, 4, 0, Zer24048), 
LSub9843 = subtract_layer(Res5719,Zer24048, Sub9843), 
exec_layers([LCro57498,LRes21755,LZer18036,LDep32271,LRes39212,LCon4170,LRes27098,LLoc2594,LZer49482,LCon68659,LZer34034,LMul94256,LCon45647,LMul26477,LRes5719,LDot1642,LRes85221,LSep62957,LRes36917,LZer14597,LAdd28164,LZer7810,LMin79323,LZer24048,LSub9843],["Cro57498","Res21755","Zer18036","Dep32271","Res39212","Con4170","Res27098","Loc2594","Zer49482","Con68659","Zer34034","Mul94256","Con45647","Mul26477","Res5719","Dot1642","Res85221","Sep62957","Res36917","Zer14597","Add28164","Zer7810","Min79323","Zer24048","Sub9843"],Sub9843,"Sub9843")

Actual (Unparsed): [[[[[0.0000000], [0.0000000], [0.0000000], [0.0000000], [0.0000000], [0.0000000], [0.0000000], [0.0000000]], [[0.0000000], [0.0000000], [0.0000000], [0.0000000], [0.0000000], [0.0000000], [0.0000000], [0.0000000]], [[0.0000000], [0.0000000], [0.0000000], [0.0000000], [0.0000000], [0.0000000], [0.0000000], [0.0000000]], [[0.0000000], [0.0000000], [0.0000000], [0.0000000], [0.0000000], [0.0000000], [0.0000000], [0.0000000]]], [[[0.0000000], [0.0000000], [0.0000000], [0.0000000], [0.0000000], [0.0000000], [0.0000000], [0.0000000]], [[0.0000000], [0.0000000], [0.0000000], [0.0000000], [0.0000000], [0.0000000], [0.0000000], [0.0000000]], [[0.0000000], [0.0000000], [0.0000000], [0.0000000], [0.0000000], [0.0000000], [0.0000000], [0.0000000]], [[0.0000000], [0.0000000], [0.0000000], [0.0000000], [0.0000000], [0.0000000], [0.0000000], [0.0000000]]], [[[0.0000000], [0.0000000], [0.0000000], [0.0000000], [0.0000000], [0.0000000], [0.0000000], [0.0000000]], [[0.0000000], [0.0000000], [0.0000000], [0.0000000], [0.0000000], [0.0000000], [0.0000000], [0.0000000]], [[0.0000000], [0.0000000], [0.0000000], [0.0000000], [0.0000000], [0.0000000], [0.0000000], [0.0000000]], [[0.0000000], [0.0000000], [0.0000000], [0.3182654], [0.6017876], [0.5917890], [1.6731746], [0.1420793]]], [[[0.0000000], [0.0000000], [0.0000000], [0.0000000], [0.0000000], [0.0000000], [0.0000000], [0.0000000]], [[0.0000000], [0.0000000], [0.0000000], [0.0000000], [0.0000000], [0.0000000], [0.0000000], [0.0000000]], [[0.0000000], [0.0000000], [0.0000000], [0.0000000], [0.0000000], [0.0000000], [0.0000000], [0.0000000]], [[0.0000000], [0.0000000], [0.0000000], [0.2807418], [0.4832397], [0.0512502], [0.1895455], [0.0034333]]]]]

Expected (Unparsed): [[[[[0],[0],[0.0],[0.0],[0.0],[0.0],[0.0],[0.0]],[[0],[0],[0.0],[0.0],[0.0],[0.0],[0.0],[0.0]],[[0],[0],[0.0],[0.0],[0.0],[0.0],[0.0],[0.0]],[[0],[0],[0.0],[0.0],[0.0],[0.0],[0.0],[0.0]]],[[[0],[0],[0.0],[0.0],[0.0],[0.0],[0.0],[0.0]],[[0.0],[0.0],[0.0],[0.0],[0.0],[0.0],[0.0],[0.0]],[[0.0],[0.0],[0.0],[0.0],[0.0],[0.0],[0.0],[0.0]],[[0],[0],[0.0],[0.0],[0.0],[0.0],[0.0],[0.0]]],[[[0],[0],[0.0],[0.0],[0.0],[0.0],[0.0],[0.0]],[[0.0],[0.0],[0.0],[0.0],[0.0],[0.0],[0.0],[0.0]],[[0.0],[0.0],[0.0],[0.0],[0.0],[0.0],[0.0],[0.0]],[[0.0],[0.0],[0.0],[0.31826541999999997],[0.60178761],[0.591789],[1.67317458],[0.14207928]]],[[[0],[0],[0.0],[0.0],[0.0],[0.0],[0.0],[0.0]],[[0],[0],[0.0],[0.0],[0.0],[0.0],[0.0],[0.0]],[[0.0],[0.0],[0.0],[0.0],[0.0],[0.0],[0.0],[0.0]],[[0.0],[0.0],[0.0],[0.28074176],[0.48323966],[0.05125022],[0.18954548452863806],[0.003433335286643968]]]]]

Actual

Expected