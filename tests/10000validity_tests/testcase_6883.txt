import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Mul80507 = tf.keras.layers.Input(shape=([1, 1, 2]))
in1Mul80507 = tf.keras.layers.Input(shape=([1, 1, 2]))

Mul80507 = keras.layers.Multiply(name = 'Mul80507', )([in0Mul80507,in1Mul80507])
Fla72814 = keras.layers.Flatten(name = 'Fla72814', )(Mul80507)
Res81674 = keras.layers.Reshape((2, 1), name = 'Res81674', )(Fla72814)
Up_3381 = keras.layers.UpSampling1D(size=(1), name = 'Up_3381', )(Res81674)
model = tf.keras.models.Model(inputs=[in0Mul80507,in1Mul80507], outputs=Up_3381)
in0Mul80507 = tf.constant([[[[0.0145, 0.3219]]]])
in1Mul80507 = tf.constant([[[[0.8879, 0.3626]]]])
print (np.array2string(model.predict([in0Mul80507,in1Mul80507],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Up_3381.png')

LMul80507 = multiply_layer([[[[[0.0145, 0.3219]]]], [[[[0.8879, 0.3626]]]]], Mul80507), 
LFla72814 = flatten_layer(Mul80507, Fla72814), 
LRes81674 = reshape_layer(Fla72814, [2, 1], Res81674), 
LUp_3381 = up_sampling1D_layer(Res81674, 1, Up_3381), 
exec_layers([LMul80507,LFla72814,LRes81674,LUp_3381],["Mul80507","Fla72814","Res81674","Up_3381"],Up_3381,"Up_3381")

Actual (Unparsed): [[[0.0128745], [0.1167209]]]

Expected (Unparsed): [[[0.01287455],[0.11672094]]]

Actual:   [[[0.0129], [0.1168]]]

Expected: [[[0.0129], [0.1168]]]