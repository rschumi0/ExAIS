import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Con27333 = tf.keras.layers.Input(shape=([1, 2, 2, 1]))
in0Zer14806 = tf.keras.layers.Input(shape=([4, 3]))
in0Con75547 = tf.keras.layers.Input(shape=([6, 13]))

Con27333 = keras.layers.Conv3D(4, (1, 1, 1),strides=(1, 1, 1), padding='same', dilation_rate=(1, 1, 1), name = 'Con27333', )(in0Con27333)
Bat32587 = keras.layers.BatchNormalization(axis=2, epsilon=0.9494286689234327,  name = 'Bat32587', )(Con27333)
Res67649 = keras.layers.Reshape((1, 2, 8), name = 'Res67649', )(Bat32587)
Res24534 = keras.layers.Reshape((1, 16), name = 'Res24534', )(Res67649)
Zer22189 = keras.layers.ZeroPadding1D(padding=((5, 0)), name = 'Zer22189', )(Res24534)
Zer14806 = keras.layers.ZeroPadding1D(padding=((1, 1)), name = 'Zer14806', )(in0Zer14806)
Con75547 = keras.layers.Concatenate(axis=2, name = 'Con75547', )([Zer14806,in0Con75547])
Ave1773 = keras.layers.Average(name = 'Ave1773', )([Zer22189,Con75547])
Fla58642 = keras.layers.Flatten(name = 'Fla58642', )(Ave1773)
Den18672 = keras.layers.Dense(1,name = 'Den18672', )(Fla58642)
model = tf.keras.models.Model(inputs=[in0Con27333,in0Zer14806,in0Con75547], outputs=Den18672)
w = model.get_layer('Con27333').get_weights() 
w[0] = np.array([[[[[0.6668, 0.4265, 0.6117, 0.9028]]]]])
w[1] = np.array([0, 0, 0, 0])
model.get_layer('Con27333').set_weights(w) 
w = model.get_layer('Bat32587').get_weights() 
w[0] = np.array([0.6615, 0.3366])
w[1] = np.array([0.0224, 0.0314])
w[2] = np.array([0.1287, 0.1039])
w[3] = np.array([0.1196, 0.0072])
model.get_layer('Bat32587').set_weights(w) 
w = model.get_layer('Den18672').get_weights() 
w[0] = np.array([[0.2044], [0.888], [0.1905], [0.6073], [0.8124], [0.1318], [0.4586], [0.636], [0.2011], [0.5133], [0.7902], [0.1447], [0.0551], [0.2141], [0.2685], [0.4401], [0.3233], [0.0139], [0.2279], [0.4845], [0.5395], [0.2968], [0.8586], [0.1748], [0.5342], [0.3103], [0.7482], [0.1535], [0.3049], [0.0495], [0.7676], [0.0954], [0.2284], [0.2238], [0.5153], [0.5067], [0.2426], [0.1206], [0.8717], [0.9499], [0.1028], [0.8217], [0.0808], [0.2652], [0.3297], [0.1542], [0.1792], [0.7977], [0.0015], [0.9579], [0.5214], [0.8589], [0.1181], [0.7388], [0.6101], [0.6518], [0.8645], [0.5449], [0.4396], [0.6733], [0.7367], [0.9474], [0.0769], [0.1666], [0.1578], [0.3401], [0.267], [0.547], [0.9071], [0.3799], [0.4334], [0.8444], [0.4147], [0.2836], [0.5618], [0.118], [0.7302], [0.8676], [0.1075], [0.4836], [0.767], [0.6727], [0.2437], [0.8662], [0.2437], [0.2505], [0.4846], [0.84], [0.5944], [0.706], [0.9551], [0.9501], [0.0087], [0.8861], [0.3579], [0.7256]])
w[1] = np.array([0.6719])
model.get_layer('Den18672').set_weights(w) 
in0Con27333 = tf.constant([[[[[0.4771], [0.1824]], [[0.0317], [0.2447]]]]])
in0Zer14806 = tf.constant([[[1.6085, 1.888, 1.2406], [1.1093, 1.1314, 1.9768], [1.5364, 1.6368, 1.3762], [1.9824, 1.0116, 1.8408]]])
in0Con75547 = tf.constant([[[0.2641, 0.8379, 0.4829, 0.9516, 0.413, 0.2769, 0.5284, 0.1175, 0.6483, 0.8521, 0.1587, 0.8637, 0.5259], [0.2558, 0.5569, 0.9544, 0.4749, 0.3146, 0.1544, 0.0296, 0.4579, 0.2542, 0.2514, 0.8766, 0.4007, 0.7531], [0.4973, 0.0804, 0.692, 0.5215, 0.3497, 0.0165, 0.1662, 0.6374, 0.3242, 0.3512, 0.5048, 0.0264, 0.4438], [0.5708, 0.9167, 0.2808, 0.8018, 0.5728, 0.2921, 0.4775, 0.5652, 0.0226, 0.7639, 0.7812, 0.0598, 0.0036], [0.7544, 0.3914, 0.8059, 0.4701, 0.1394, 0.8312, 0.4978, 0.1488, 0.1176, 0.6654, 0.9642, 0.8331, 0.7391], [0.4799, 0.0793, 0.4579, 0.8153, 0.3624, 0.4535, 0.9551, 0.1119, 0.1796, 0.4775, 0.649, 0.3075, 0.6642]]])
print (np.array2string(model.predict([in0Con27333,in0Zer14806,in0Con75547],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Den18672.png')

LCon27333 = conv3D_layer([[[[[0.4771], [0.1824]], [[0.0317], [0.2447]]]]], 1, 1, 1,[[[[[0.6668, 0.4265, 0.6117, 0.9028]]]]],[0, 0, 0, 0], 1, 1, 1, true, 1, 1, 1, Con27333), 
LBat32587 = batch_normalization_layer(Con27333, 2, 0.9494286689234327, [0.6615, 0.3366], [0.0224, 0.0314], [0.1287, 0.1039], [0.1196, 0.0072], Bat32587), 
LRes67649 = reshape_layer(Bat32587, [1, 2, 8], Res67649), 
LRes24534 = reshape_layer(Res67649, [1, 16], Res24534), 
LZer22189 = zero_padding1D_layer(Res24534, 5, 0, Zer22189), 
LZer14806 = zero_padding1D_layer([[[1.6085, 1.888, 1.2406], [1.1093, 1.1314, 1.9768], [1.5364, 1.6368, 1.3762], [1.9824, 1.0116, 1.8408]]], 1, 1, Zer14806), 
LCon75547 = concatenate_layer([Zer14806,[[[0.2641, 0.8379, 0.4829, 0.9516, 0.413, 0.2769, 0.5284, 0.1175, 0.6483, 0.8521, 0.1587, 0.8637, 0.5259], [0.2558, 0.5569, 0.9544, 0.4749, 0.3146, 0.1544, 0.0296, 0.4579, 0.2542, 0.2514, 0.8766, 0.4007, 0.7531], [0.4973, 0.0804, 0.692, 0.5215, 0.3497, 0.0165, 0.1662, 0.6374, 0.3242, 0.3512, 0.5048, 0.0264, 0.4438], [0.5708, 0.9167, 0.2808, 0.8018, 0.5728, 0.2921, 0.4775, 0.5652, 0.0226, 0.7639, 0.7812, 0.0598, 0.0036], [0.7544, 0.3914, 0.8059, 0.4701, 0.1394, 0.8312, 0.4978, 0.1488, 0.1176, 0.6654, 0.9642, 0.8331, 0.7391], [0.4799, 0.0793, 0.4579, 0.8153, 0.3624, 0.4535, 0.9551, 0.1119, 0.1796, 0.4775, 0.649, 0.3075, 0.6642]]]], 2, Con75547), 
LAve1773 = average_layer([Zer22189,Con75547], Ave1773), 
LFla58642 = flatten_layer(Ave1773, Fla58642), 
LDen18672 = dense_layer(Fla58642, [[0.2044], [0.888], [0.1905], [0.6073], [0.8124], [0.1318], [0.4586], [0.636], [0.2011], [0.5133], [0.7902], [0.1447], [0.0551], [0.2141], [0.2685], [0.4401], [0.3233], [0.0139], [0.2279], [0.4845], [0.5395], [0.2968], [0.8586], [0.1748], [0.5342], [0.3103], [0.7482], [0.1535], [0.3049], [0.0495], [0.7676], [0.0954], [0.2284], [0.2238], [0.5153], [0.5067], [0.2426], [0.1206], [0.8717], [0.9499], [0.1028], [0.8217], [0.0808], [0.2652], [0.3297], [0.1542], [0.1792], [0.7977], [0.0015], [0.9579], [0.5214], [0.8589], [0.1181], [0.7388], [0.6101], [0.6518], [0.8645], [0.5449], [0.4396], [0.6733], [0.7367], [0.9474], [0.0769], [0.1666], [0.1578], [0.3401], [0.267], [0.547], [0.9071], [0.3799], [0.4334], [0.8444], [0.4147], [0.2836], [0.5618], [0.118], [0.7302], [0.8676], [0.1075], [0.4836], [0.767], [0.6727], [0.2437], [0.8662], [0.2437], [0.2505], [0.4846], [0.84], [0.5944], [0.706], [0.9551], [0.9501], [0.0087], [0.8861], [0.3579], [0.7256]],[0.6719], Den18672), 
exec_layers([LCon27333,LBat32587,LRes67649,LRes24534,LZer22189,LZer14806,LCon75547,LAve1773,LFla58642,LDen18672],["Con27333","Bat32587","Res67649","Res24534","Zer22189","Zer14806","Con75547","Ave1773","Fla58642","Den18672"],Den18672,"Den18672")

Actual (Unparsed): [[12.7894362]]

Expected (Unparsed): [[12.789436163535154]]

Actual:   [[12.7895]]

Expected: [[12.7895]]