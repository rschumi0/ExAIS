import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Sep69398 = tf.keras.layers.Input(shape=([1, 1, 2]))
in0Con71264 = tf.keras.layers.Input(shape=([3, 1, 10, 3]))
in0Con64521 = tf.keras.layers.Input(shape=([2, 1, 2, 2]))
in0Max33762 = tf.keras.layers.Input(shape=([1, 1]))
in1Max33762 = tf.keras.layers.Input(shape=([1, 1]))

Sep69398 = keras.layers.SeparableConv2D(3, (1, 1),strides=(1, 1), padding='valid', name = 'Sep69398', )(in0Sep69398)
Res65105 = keras.layers.Reshape((1, 1, 3, 1), name = 'Res65105', )(Sep69398)
Zer23862 = keras.layers.ZeroPadding3D(padding=((2, 0), (0, 0), (7, 0)), name = 'Zer23862', )(Res65105)
Con71264 = keras.layers.Concatenate(axis=4, name = 'Con71264', )([Zer23862,in0Con71264])
Con64521 = keras.layers.Conv3DTranspose(4, (2, 1, 1),strides=(1, 1, 5), padding='valid', name = 'Con64521', )(in0Con64521)
Ave59232 = keras.layers.Average(name = 'Ave59232', )([Con71264,Con64521])
Res27916 = keras.layers.Reshape((3, 1, 40), name = 'Res27916', )(Ave59232)
Res78347 = keras.layers.Reshape((3, 40), name = 'Res78347', )(Res27916)
LST28000 = keras.layers.LSTM(1,recurrent_activation='sigmoid', name = 'LST28000', )(Res78347)
Res9556 = keras.layers.Reshape((1, 1), name = 'Res9556', )(LST28000)
Max33762 = keras.layers.Maximum(name = 'Max33762', )([in0Max33762,in1Max33762])
Add96145 = keras.layers.Add(name = 'Add96145', )([Res9556,Max33762])
model = tf.keras.models.Model(inputs=[in0Sep69398,in0Con71264,in0Con64521,in0Max33762,in1Max33762], outputs=Add96145)
w = model.get_layer('Sep69398').get_weights() 
w[0] = np.array([[[[0.704], [0.9601]]]])
w[1] = np.array([[[[0.6795, 0.1928, 0.5185], [0.3264, 0.9685, 0.2824]]]])
w[2] = np.array([0, 0, 0])
model.get_layer('Sep69398').set_weights(w) 
w = model.get_layer('Con64521').get_weights() 
w[0] = np.array([[[[[0.0241, 0.1538], [0.8081, 0.0134], [0.6145, 0.2239], [0.6596, 0.5641]]]], [[[[0.3743, 0.833], [0.7024, 0.323], [0.7463, 0.6113], [0.1795, 0.6847]]]]])
w[1] = np.array([0, 0, 0, 0])
model.get_layer('Con64521').set_weights(w) 
w = model.get_layer('LST28000').get_weights() 
w[0] = np.array([[5, 10, 8, 5], [4, 7, 6, 1], [6, 2, 8, 8], [4, 9, 10, 2], [9, 2, 4, 7], [9, 9, 2, 7], [1, 7, 3, 10], [2, 10, 4, 1], [1, 1, 5, 9], [6, 1, 4, 7], [7, 1, 8, 4], [2, 2, 6, 10], [6, 9, 7, 10], [1, 9, 4, 4], [7, 4, 1, 6], [4, 1, 5, 3], [2, 8, 5, 6], [9, 7, 7, 5], [1, 8, 9, 1], [9, 8, 10, 6], [7, 6, 7, 2], [2, 3, 3, 9], [3, 4, 2, 2], [7, 10, 10, 8], [3, 10, 4, 2], [9, 7, 1, 8], [6, 1, 5, 7], [5, 8, 8, 7], [2, 1, 1, 4], [10, 7, 1, 3], [3, 3, 4, 9], [1, 4, 6, 10], [4, 9, 4, 4], [7, 2, 10, 8], [2, 3, 4, 8], [4, 6, 8, 2], [9, 2, 7, 8], [4, 6, 10, 1], [8, 6, 5, 9], [3, 5, 4, 10]])
w[1] = np.array([[9, 10, 10, 1]])
w[2] = np.array([2, 5, 3, 6])
model.get_layer('LST28000').set_weights(w) 
in0Sep69398 = tf.constant([[[[0.3891, 0.0829]]]])
in0Con71264 = tf.constant([[[[[0.7173, 0.8912, 0.5118], [0.8164, 0.6011, 0.8555], [0.5559, 0.5638, 0.1113], [0.8419, 0.4601, 0.5791], [0.6713, 0.5436, 0.6779], [0.5602, 0.1812, 0.0437], [0.9217, 0.6548, 0.6737], [0.8003, 0.1572, 0.6403], [0.7267, 0.3103, 0.0838], [0.9673, 0.5609, 0.6922]]], [[[0.4082, 0.9933, 0.4514], [0.858, 0.9351, 0.8054], [0.0701, 0.9066, 0.0021], [0.1307, 0.6418, 0.867], [0.0691, 0.971, 0.3431], [0.9385, 0.3323, 0.7594], [0.2057, 0.9376, 0.0816], [0.035, 0.8919, 0.7404], [0.1435, 0.8595, 0.1053], [0.1364, 0.1603, 0.4565]]], [[[0.0705, 0.6495, 0.6443], [0.846, 0.4699, 0.5717], [0.7149, 0.5684, 0.4626], [0.6592, 0.1789, 0.942], [0.9238, 0.6899, 0.145], [0.6846, 0.8455, 0.3512], [0.6782, 0.1446, 0.9136], [0.7353, 0.0933, 0.8306], [0.6404, 0.0553, 0.3642], [0.4101, 0.0716, 0.0633]]]]])
in0Con64521 = tf.constant([[[[[0.8819, 0.8066], [0.3916, 0.5641]]], [[[0.2503, 0.5556], [0.035, 0.7968]]]]])
in0Max33762 = tf.constant([[[0.2776]]])
in1Max33762 = tf.constant([[[0.7103]]])
print (np.array2string(model.predict([in0Sep69398,in0Con71264,in0Con64521,in0Max33762,in1Max33762],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Add96145.png')

LSep69398 = separable_conv2D_layer([[[[0.3891, 0.0829]]]], 1, 1,[[[[[0.704], [0.9601]]]],[[[[0.6795, 0.1928, 0.5185], [0.3264, 0.9685, 0.2824]]]]],[0, 0, 0], 1, 1, false, Sep69398), 
LRes65105 = reshape_layer(Sep69398, [1, 1, 3, 1], Res65105), 
LZer23862 = zero_padding3D_layer(Res65105, 2, 0, 0, 0, 7, 0, Zer23862), 
LCon71264 = concatenate_layer([Zer23862,[[[[[0.7173, 0.8912, 0.5118], [0.8164, 0.6011, 0.8555], [0.5559, 0.5638, 0.1113], [0.8419, 0.4601, 0.5791], [0.6713, 0.5436, 0.6779], [0.5602, 0.1812, 0.0437], [0.9217, 0.6548, 0.6737], [0.8003, 0.1572, 0.6403], [0.7267, 0.3103, 0.0838], [0.9673, 0.5609, 0.6922]]], [[[0.4082, 0.9933, 0.4514], [0.858, 0.9351, 0.8054], [0.0701, 0.9066, 0.0021], [0.1307, 0.6418, 0.867], [0.0691, 0.971, 0.3431], [0.9385, 0.3323, 0.7594], [0.2057, 0.9376, 0.0816], [0.035, 0.8919, 0.7404], [0.1435, 0.8595, 0.1053], [0.1364, 0.1603, 0.4565]]], [[[0.0705, 0.6495, 0.6443], [0.846, 0.4699, 0.5717], [0.7149, 0.5684, 0.4626], [0.6592, 0.1789, 0.942], [0.9238, 0.6899, 0.145], [0.6846, 0.8455, 0.3512], [0.6782, 0.1446, 0.9136], [0.7353, 0.0933, 0.8306], [0.6404, 0.0553, 0.3642], [0.4101, 0.0716, 0.0633]]]]]], 4, Con71264), 
LCon64521 = conv3D_transpose_layer([[[[[0.8819, 0.8066], [0.3916, 0.5641]]], [[[0.2503, 0.5556], [0.035, 0.7968]]]]], 2, 1, 1,[[[[[0.0241, 0.1538], [0.8081, 0.0134], [0.6145, 0.2239], [0.6596, 0.5641]]]], [[[[0.3743, 0.833], [0.7024, 0.323], [0.7463, 0.6113], [0.1795, 0.6847]]]]],[0, 0, 0, 0], 1, 1, 5, false, Con64521), 
LAve59232 = average_layer([Con71264,Con64521], Ave59232), 
LRes27916 = reshape_layer(Ave59232, [3, 1, 40], Res27916), 
LRes78347 = reshape_layer(Res27916, [3, 40], Res78347), 
LLST28000 = lstm_layer(Res78347,[[5, 10, 8, 5], [4, 7, 6, 1], [6, 2, 8, 8], [4, 9, 10, 2], [9, 2, 4, 7], [9, 9, 2, 7], [1, 7, 3, 10], [2, 10, 4, 1], [1, 1, 5, 9], [6, 1, 4, 7], [7, 1, 8, 4], [2, 2, 6, 10], [6, 9, 7, 10], [1, 9, 4, 4], [7, 4, 1, 6], [4, 1, 5, 3], [2, 8, 5, 6], [9, 7, 7, 5], [1, 8, 9, 1], [9, 8, 10, 6], [7, 6, 7, 2], [2, 3, 3, 9], [3, 4, 2, 2], [7, 10, 10, 8], [3, 10, 4, 2], [9, 7, 1, 8], [6, 1, 5, 7], [5, 8, 8, 7], [2, 1, 1, 4], [10, 7, 1, 3], [3, 3, 4, 9], [1, 4, 6, 10], [4, 9, 4, 4], [7, 2, 10, 8], [2, 3, 4, 8], [4, 6, 8, 2], [9, 2, 7, 8], [4, 6, 10, 1], [8, 6, 5, 9], [3, 5, 4, 10]],[[9, 10, 10, 1]],[2, 5, 3, 6], LST28000), 
LRes9556 = reshape_layer(LST28000, [1, 1], Res9556), 
LMax33762 = maximum_layer([[[[0.2776]]], [[[0.7103]]]], Max33762), 
LAdd96145 = add_layer([Res9556,Max33762], Add96145), 
exec_layers([LSep69398,LRes65105,LZer23862,LCon71264,LCon64521,LAve59232,LRes27916,LRes78347,LLST28000,LRes9556,LMax33762,LAdd96145],["Sep69398","Res65105","Zer23862","Con71264","Con64521","Ave59232","Res27916","Res78347","LST28000","Res9556","Max33762","Add96145"],Add96145,"Add96145")

Actual (Unparsed): [[[1.7053548]]]

Expected (Unparsed): [[[1.7053547536867306]]]

Actual:   [[[1.7054]]]

Expected: [[[1.7054]]]