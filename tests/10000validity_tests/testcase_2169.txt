import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Max74139 = tf.keras.layers.Input(shape=([2, 1, 1, 2]))
in1Max74139 = tf.keras.layers.Input(shape=([2, 1, 1, 2]))
in0Dot16889 = tf.keras.layers.Input(shape=([3]))
in1Dot16889 = tf.keras.layers.Input(shape=([3]))
in0Con92537 = tf.keras.layers.Input(shape=([3]))
in0Dot11156 = tf.keras.layers.Input(shape=([2, 2]))
in1Dot11156 = tf.keras.layers.Input(shape=([2, 2]))
in0Con40902 = tf.keras.layers.Input(shape=([3, 1]))
in0Dot83753 = tf.keras.layers.Input(shape=([3, 2]))
in1Dot83753 = tf.keras.layers.Input(shape=([3, 2]))

Max74139 = keras.layers.Maximum(name = 'Max74139', )([in0Max74139,in1Max74139])
Res19580 = keras.layers.Reshape((2, 1, 2), name = 'Res19580', )(Max74139)
Res2978 = keras.layers.Reshape((2, 2), name = 'Res2978', )(Res19580)
Fla46730 = keras.layers.Flatten(name = 'Fla46730', )(Res2978)
Dot16889 = keras.layers.Dot(axes=(1, 1), name = 'Dot16889', )([in0Dot16889,in1Dot16889])
Con92537 = keras.layers.Concatenate(axis=1, name = 'Con92537', )([Dot16889,in0Con92537])
Max41925 = keras.layers.Maximum(name = 'Max41925', )([Fla46730,Con92537])
Res83900 = keras.layers.Reshape((4, 1), name = 'Res83900', )(Max41925)
Res16054 = keras.layers.Reshape((4, 1, 1), name = 'Res16054', )(Res83900)
Zer27906 = keras.layers.ZeroPadding2D(padding=((2, 0), (5, 0)), name = 'Zer27906', )(Res16054)
Dot11156 = keras.layers.Dot(axes=(1, 2), name = 'Dot11156', )([in0Dot11156,in1Dot11156])
Zer44299 = keras.layers.ZeroPadding1D(padding=((1, 0)), name = 'Zer44299', )(Dot11156)
Con40902 = keras.layers.Concatenate(axis=2, name = 'Con40902', )([Zer44299,in0Con40902])
Dot83753 = keras.layers.Dot(axes=(2, 2), name = 'Dot83753', )([in0Dot83753,in1Dot83753])
Mul90781 = keras.layers.Multiply(name = 'Mul90781', )([Con40902,Dot83753])
Res47719 = keras.layers.Reshape((3, 3, 1), name = 'Res47719', )(Mul90781)
Up_42884 = keras.layers.UpSampling2D(size=(2, 2), name = 'Up_42884', )(Res47719)
Add83834 = keras.layers.Add(name = 'Add83834', )([Zer27906,Up_42884])
model = tf.keras.models.Model(inputs=[in0Max74139,in1Max74139,in0Dot16889,in1Dot16889,in0Con92537,in0Dot11156,in1Dot11156,in0Con40902,in0Dot83753,in1Dot83753], outputs=Add83834)
in0Max74139 = tf.constant([[[[[0.0561, 0.6952]]], [[[0.9648, 0.8297]]]]])
in1Max74139 = tf.constant([[[[[0.6059, 0.9518]]], [[[0.8372, 0.3792]]]]])
in0Dot16889 = tf.constant([[0.8626, 0.9909, 0.5061]])
in1Dot16889 = tf.constant([[0.0152, 0.1656, 0.7211]])
in0Con92537 = tf.constant([[0.1052, 0.3871, 0.0755]])
in0Dot11156 = tf.constant([[[0.1369, 0.2223], [0.7769, 0.2605]]])
in1Dot11156 = tf.constant([[[0.3686, 0.0572], [0.6934, 0.8483]]])
in0Con40902 = tf.constant([[[0.838], [0.5323], [0.3385]]])
in0Dot83753 = tf.constant([[[0.0853, 0.6526], [0.0673, 0.9377], [0.6976, 0.7849]]])
in1Dot83753 = tf.constant([[[0.1969, 0.7024], [0.7207, 0.583], [0.7701, 0.2617]]])
print (np.array2string(model.predict([in0Max74139,in1Max74139,in0Dot16889,in1Dot16889,in0Con92537,in0Dot11156,in1Dot11156,in0Con40902,in0Dot83753,in1Dot83753],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Add83834.png')

LMax74139 = maximum_layer([[[[[[0.0561, 0.6952]]], [[[0.9648, 0.8297]]]]], [[[[[0.6059, 0.9518]]], [[[0.8372, 0.3792]]]]]], Max74139), 
LRes19580 = reshape_layer(Max74139, [2, 1, 2], Res19580), 
LRes2978 = reshape_layer(Res19580, [2, 2], Res2978), 
LFla46730 = flatten_layer(Res2978, Fla46730), 
LDot16889 = dot_layer([[0.8626, 0.9909, 0.5061]], [[0.0152, 0.1656, 0.7211]], 1, 1, Dot16889), 
LCon92537 = concatenate_layer([Dot16889,[[0.1052, 0.3871, 0.0755]]], 1, Con92537), 
LMax41925 = maximum_layer([Fla46730,Con92537], Max41925), 
LRes83900 = reshape_layer(Max41925, [4, 1], Res83900), 
LRes16054 = reshape_layer(Res83900, [4, 1, 1], Res16054), 
LZer27906 = zero_padding2D_layer(Res16054, 2, 0, 5, 0, Zer27906), 
LDot11156 = dot_layer([[[0.1369, 0.2223], [0.7769, 0.2605]]], [[[0.3686, 0.0572], [0.6934, 0.8483]]], 1, 2, Dot11156), 
LZer44299 = zero_padding1D_layer(Dot11156, 1, 0, Zer44299), 
LCon40902 = concatenate_layer([Zer44299,[[[0.838], [0.5323], [0.3385]]]], 2, Con40902), 
LDot83753 = dot_layer([[[0.0853, 0.6526], [0.0673, 0.9377], [0.6976, 0.7849]]], [[[0.1969, 0.7024], [0.7207, 0.583], [0.7701, 0.2617]]], 2, 2, Dot83753), 
LMul90781 = multiply_layer([Con40902,Dot83753], Mul90781), 
LRes47719 = reshape_layer(Mul90781, [3, 3, 1], Res47719), 
LUp_42884 = up_sampling2D_layer(Res47719, 2, 2, Up_42884), 
LAdd83834 = add_layer([Zer27906,Up_42884], Add83834), 
exec_layers([LMax74139,LRes19580,LRes2978,LFla46730,LDot16889,LCon92537,LMax41925,LRes83900,LRes16054,LZer27906,LDot11156,LZer44299,LCon40902,LDot83753,LMul90781,LRes47719,LUp_42884,LAdd83834],["Max74139","Res19580","Res2978","Fla46730","Dot16889","Con92537","Max41925","Res83900","Res16054","Zer27906","Dot11156","Zer44299","Con40902","Dot83753","Mul90781","Res47719","Up_42884","Add83834"],Add83834,"Add83834")

Actual (Unparsed): [[[[0.0000000], [0.0000000], [0.0000000], [0.0000000], [0.1981660], [0.1981660]], [[0.0000000], [0.0000000], [0.0000000], [0.0000000], [0.1981660], [0.1981660]], [[0.0637625], [0.0637625], [0.4487499], [0.4487499], [0.1582122], [0.7641122]], [[0.0637625], [0.0637625], [0.4487499], [0.4487499], [0.1582122], [1.1100122]], [[0.0666912], [0.0666912], [0.3602539], [0.3602539], [0.2513803], [1.2161803]], [[0.0666912], [0.0666912], [0.3602539], [0.3602539], [0.2513803], [1.0810803]]]]

Expected (Unparsed): [[[[0.0],[0.0],[0.0],[0.0],[0.19816600809999999],[0.19816600809999999]],[[0.0],[0.0],[0.0],[0.0],[0.19816600809999999],[0.19816600809999999]],[[0.063762550002837],[0.063762550002837],[0.44874996535671335],[0.44874996535671335],[0.158212239386],[0.764112239386]],[[0.063762550002837],[0.063762550002837],[0.44874996535671335],[0.44874996535671335],[0.158212239386],[1.110012239386]],[[0.066691180703056],[0.066691180703056],[0.3602538983167894],[0.3602538983167894],[0.251380285465],[1.2161802854650001]],[[0.066691180703056],[0.066691180703056],[0.3602538983167894],[0.3602538983167894],[0.251380285465],[1.0810802854650001]]]]

Actual:   [[[[0], [0], [0], [0], [0.1982], [0.1982]], [[0], [0], [0], [0], [0.1982], [0.1982]], [[0.0638], [0.0638], [0.4488], [0.4488], [0.1583], [0.7642]], [[0.0638], [0.0638], [0.4488], [0.4488], [0.1583], [1.1101]], [[0.0667], [0.0667], [0.3603], [0.3603], [0.2514], [1.2162]], [[0.0667], [0.0667], [0.3603], [0.3603], [0.2514], [1.0811]]]]

Expected: [[[[0], [0], [0], [0], [0.1982], [0.1982]], [[0], [0], [0], [0], [0.1982], [0.1982]], [[0.0638], [0.0638], [0.4488], [0.4488], [0.1583], [0.7642]], [[0.0638], [0.0638], [0.4488], [0.4488], [0.1583], [1.1101]], [[0.0667], [0.0667], [0.3603], [0.3603], [0.2514], [1.2162]], [[0.0667], [0.0667], [0.3603], [0.3603], [0.2514], [1.0811]]]]