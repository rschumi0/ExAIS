import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0ReL52714 = tf.keras.layers.Input(shape=([2, 1, 2, 1]))
in0Con87114 = tf.keras.layers.Input(shape=([44]))
in0Up_73513 = tf.keras.layers.Input(shape=([1, 3, 4, 2]))

ReL52714 = keras.layers.ReLU(max_value=7.4872247488560015, negative_slope=0.1207371595123194, threshold=2.8128723357192054, name = 'ReL52714', input_shape=(2, 1, 2, 1))(in0ReL52714)
Res81347 = keras.layers.Reshape((2, 1, 2), name = 'Res81347', )(ReL52714)
Res9196 = keras.layers.Reshape((2, 2), name = 'Res9196', )(Res81347)
Fla18232 = keras.layers.Flatten(name = 'Fla18232', )(Res9196)
Con87114 = keras.layers.Concatenate(axis=1, name = 'Con87114', )([Fla18232,in0Con87114])
Up_73513 = keras.layers.UpSampling3D(size=(1, 1, 2), name = 'Up_73513', )(in0Up_73513)
Res28005 = keras.layers.Reshape((1, 3, 16), name = 'Res28005', )(Up_73513)
Res83850 = keras.layers.Reshape((1, 48), name = 'Res83850', )(Res28005)
Glo57206 = keras.layers.GlobalMaxPool1D(name = 'Glo57206', )(Res83850)
Add75067 = keras.layers.Add(name = 'Add75067', )([Con87114,Glo57206])
Res78052 = keras.layers.Reshape((48, 1), name = 'Res78052', )(Add75067)
Con4596 = keras.layers.Conv1D(2, (18),strides=(1), padding='valid', dilation_rate=(1), name = 'Con4596', )(Res78052)
model = tf.keras.models.Model(inputs=[in0ReL52714,in0Con87114,in0Up_73513], outputs=Con4596)
w = model.get_layer('Con4596').get_weights() 
w[0] = np.array([[[0.3533, 0.9284]], [[0.4537, 0.0538]], [[0.1365, 0.1205]], [[0.5487, 0.7436]], [[0.2506, 0.2405]], [[0.7384, 0.0568]], [[0.9084, 0.4031]], [[0.4187, 0.4095]], [[0.2741, 0.1208]], [[0.8591, 0.2746]], [[0.0012, 0.8233]], [[0.9705, 0.0977]], [[0.938, 0.8296]], [[0.7396, 0.6227]], [[0.5661, 0.0029]], [[0.7337, 0.7266]], [[0.1348, 0.3439]], [[0.5489, 0.0913]]])
w[1] = np.array([0, 0])
model.get_layer('Con4596').set_weights(w) 
in0ReL52714 = tf.constant([[[[[0.5853], [0.4464]]], [[[0.5243], [0.7273]]]]])
in0Con87114 = tf.constant([[0.6098, 0.629, 0.2799, 0.2519, 0.0022, 0.4224, 0.7647, 0.5666, 0.6555, 0.4808, 0.9553, 0.4548, 0.8475, 0.8115, 0.8904, 0.5839, 0.0629, 0.6884, 0.2255, 0.7115, 0.8324, 0.2405, 0.5453, 0.3868, 0.4078, 0.7361, 0.5943, 0.7975, 0.5893, 0.1079, 0.4222, 0.3848, 0.2035, 0.5542, 0.3941, 0.5304, 0.7046, 0.3705, 0.2543, 0.832, 0.1206, 0.5204, 0.9431, 0.2244]])
in0Up_73513 = tf.constant([[[[[1.9083, 1.4814], [1.0285, 1.3957], [1.8112, 1.3571], [1.5268, 1.7357]], [[1.9124, 1.9021], [1.2723, 1.5197], [1.0804, 1.9855], [1.0633, 1.4979]], [[1.7933, 1.4221], [1.5424, 1.3443], [1.9157, 1.7919], [1.4621, 1.5327]]]]])
print (np.array2string(model.predict([in0ReL52714,in0Con87114,in0Up_73513],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Con4596.png')

LReL52714 = relu_layer([[[[[0.5853], [0.4464]]], [[[0.5243], [0.7273]]]]], 7.4872247488560015, 0.1207371595123194, 2.8128723357192054, ReL52714), 
LRes81347 = reshape_layer(ReL52714, [2, 1, 2], Res81347), 
LRes9196 = reshape_layer(Res81347, [2, 2], Res9196), 
LFla18232 = flatten_layer(Res9196, Fla18232), 
LCon87114 = concatenate_layer([Fla18232,[[0.6098, 0.629, 0.2799, 0.2519, 0.0022, 0.4224, 0.7647, 0.5666, 0.6555, 0.4808, 0.9553, 0.4548, 0.8475, 0.8115, 0.8904, 0.5839, 0.0629, 0.6884, 0.2255, 0.7115, 0.8324, 0.2405, 0.5453, 0.3868, 0.4078, 0.7361, 0.5943, 0.7975, 0.5893, 0.1079, 0.4222, 0.3848, 0.2035, 0.5542, 0.3941, 0.5304, 0.7046, 0.3705, 0.2543, 0.832, 0.1206, 0.5204, 0.9431, 0.2244]]], 1, Con87114), 
LUp_73513 = up_sampling3D_layer([[[[[1.9083, 1.4814], [1.0285, 1.3957], [1.8112, 1.3571], [1.5268, 1.7357]], [[1.9124, 1.9021], [1.2723, 1.5197], [1.0804, 1.9855], [1.0633, 1.4979]], [[1.7933, 1.4221], [1.5424, 1.3443], [1.9157, 1.7919], [1.4621, 1.5327]]]]], 1, 1, 2, Up_73513), 
LRes28005 = reshape_layer(Up_73513, [1, 3, 16], Res28005), 
LRes83850 = reshape_layer(Res28005, [1, 48], Res83850), 
LGlo57206 = global_max_pool1D_layer(Res83850, Glo57206), 
LAdd75067 = add_layer([Con87114,Glo57206], Add75067), 
LRes78052 = reshape_layer(Add75067, [48, 1], Res78052), 
LCon4596 = conv1D_layer(Res78052, 18,[[[0.3533, 0.9284]], [[0.4537, 0.0538]], [[0.1365, 0.1205]], [[0.5487, 0.7436]], [[0.2506, 0.2405]], [[0.7384, 0.0568]], [[0.9084, 0.4031]], [[0.4187, 0.4095]], [[0.2741, 0.1208]], [[0.8591, 0.2746]], [[0.0012, 0.8233]], [[0.9705, 0.0977]], [[0.938, 0.8296]], [[0.7396, 0.6227]], [[0.5661, 0.0029]], [[0.7337, 0.7266]], [[0.1348, 0.3439]], [[0.5489, 0.0913]]],[0, 0], 1, false, 1, Con4596), 
exec_layers([LReL52714,LRes81347,LRes9196,LFla18232,LCon87114,LUp_73513,LRes28005,LRes83850,LGlo57206,LAdd75067,LRes78052,LCon4596],["ReL52714","Res81347","Res9196","Fla18232","Con87114","Up_73513","Res28005","Res83850","Glo57206","Add75067","Res78052","Con4596"],Con4596,"Con4596")

Actual (Unparsed): [[[18.2591032, 13.4111426], [19.8641185, 13.8367765], [20.1623408, 14.5986002], [20.1890696, 14.1740344], [21.5235155, 14.9604426], [21.0841521, 14.6328850], [20.8794288, 15.0002303], [20.9211930, 14.7144466], [20.5645579, 14.6666646], [20.2794182, 14.6818597], [21.5207001, 14.7180240], [19.9321569, 14.7524821], [21.5557737, 14.6690137], [19.9642356, 14.4245106], [20.1366297, 14.8492771], [19.4228352, 14.6586550], [19.7693256, 14.5143697], [19.0180046, 14.4252950], [19.8722711, 13.8354659], [18.4159089, 14.4426110], [19.2712948, 12.8137728], [18.3908758, 13.6081961], [18.4547205, 13.5562946], [19.2568748, 13.1752025], [18.4718199, 13.7498042], [19.2202736, 14.1495988], [20.0023663, 13.3166021], [18.9840359, 14.2614358], [19.9973067, 14.3600677], [20.1598484, 13.9376209], [18.9723042, 14.2392469]]]

Expected (Unparsed): [[[18.259103100781545,13.411142544422443],[19.864118454970754,13.836776477790737],[20.162340756617322,14.598600175532816],[20.189069512016484,14.17403431553948],[21.523515529999997,14.960442689999999],[21.08415205,14.632884939999999],[20.879428729999997,15.000230300000004],[20.92119288,14.71444665],[20.56455781,14.666664509999999],[20.279418039999996,14.681859670000003],[21.520699999999998,14.71802394],[19.932156839999998,14.752481970000002],[21.555773689999995,14.66901366],[19.964235609999996,14.42451059],[20.13662967,14.849277099999998],[19.422835210000002,14.658655050000002],[19.7693256,14.51436964],[19.01800455,14.425294980000004],[19.872271119999997,13.835465890000002],[18.415908960000003,14.442611040000003],[19.27129482,12.81377285],[18.39087583,13.608196099999999],[18.45472049,13.556294580000001],[19.256874770000003,13.175202539999999],[18.47181993,13.74980417],[19.22027361,14.14959891],[20.00236624,13.316602080000001],[18.984036009999997,14.261435859999999],[19.99730671,14.360067699999998],[20.15984846,13.93762092],[18.97230424,14.23924699]]]

Actual:   [[[18.2592, 13.4112], [19.8642, 13.8368], [20.1624, 14.5987], [20.1891, 14.1741], [21.5236, 14.9605], [21.0842, 14.6329], [20.8795, 15.0003], [20.9212, 14.7145], [20.5646, 14.6667], [20.2795, 14.6819], [21.5208, 14.7181], [19.9322, 14.7525], [21.5558, 14.6691], [19.9643, 14.4246], [20.1367, 14.8493], [19.4229, 14.6587], [19.7694, 14.5144], [19.0181, 14.4253], [19.8723, 13.8355], [18.416, 14.4427], [19.2713, 12.8138], [18.3909, 13.6082], [18.4548, 13.5563], [19.2569, 13.1753], [18.4719, 13.7499], [19.2203, 14.1496], [20.0024, 13.3167], [18.9841, 14.2615], [19.9974, 14.3601], [20.1599, 13.9377], [18.9724, 14.2393]]]

Expected: [[[18.2592, 13.4112], [19.8642, 13.8368], [20.1624, 14.5987], [20.1891, 14.1741], [21.5236, 14.9605], [21.0842, 14.6329], [20.8795, 15.0003], [20.9212, 14.7145], [20.5646, 14.6667], [20.2795, 14.6819], [21.5207, 14.7181], [19.9322, 14.7525], [21.5558, 14.6691], [19.9643, 14.4246], [20.1367, 14.8493], [19.4229, 14.6587], [19.7694, 14.5144], [19.0181, 14.4253], [19.8723, 13.8355], [18.416, 14.4427], [19.2713, 12.8138], [18.3909, 13.6082], [18.4548, 13.5563], [19.2569, 13.1753], [18.4719, 13.7499], [19.2203, 14.1496], [20.0024, 13.3167], [18.9841, 14.2615], [19.9974, 14.3601], [20.1599, 13.9377], [18.9724, 14.2393]]]