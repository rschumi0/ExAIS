import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Min45571 = tf.keras.layers.Input(shape=([2, 2, 2, 2]))
in1Min45571 = tf.keras.layers.Input(shape=([2, 2, 2, 2]))
in0Sub33481 = tf.keras.layers.Input(shape=([2]))
in1Sub33481 = tf.keras.layers.Input(shape=([2]))
in0Max19074 = tf.keras.layers.Input(shape=([2, 1, 1]))
in1Max19074 = tf.keras.layers.Input(shape=([2, 1, 1]))
in0Con5786 = tf.keras.layers.Input(shape=([2, 1, 3]))

Min45571 = keras.layers.Minimum(name = 'Min45571', )([in0Min45571,in1Min45571])
Res78758 = keras.layers.Reshape((2, 2, 4), name = 'Res78758', )(Min45571)
Dep93464 = keras.layers.DepthwiseConv2D((1, 1),strides=(2, 2), padding='valid', name = 'Dep93464', )(Res78758)
Zer29360 = keras.layers.ZeroPadding2D(padding=((1, 0), (0, 0)), name = 'Zer29360', )(Dep93464)
Sub33481 = keras.layers.Subtract(name = 'Sub33481', )([in0Sub33481,in1Sub33481])
ReL74534 = keras.layers.ReLU(max_value=9.282872900016413, negative_slope=2.227932133454603, threshold=8.27711907866659, name = 'ReL74534', )(Sub33481)
Res3609 = keras.layers.Reshape((2, 1), name = 'Res3609', )(ReL74534)
Res88024 = keras.layers.Reshape((2, 1, 1), name = 'Res88024', )(Res3609)
Max19074 = keras.layers.Maximum(name = 'Max19074', )([in0Max19074,in1Max19074])
Min92509 = keras.layers.Minimum(name = 'Min92509', )([Res88024,Max19074])
Con5786 = keras.layers.Concatenate(axis=3, name = 'Con5786', )([Min92509,in0Con5786])
Min91906 = keras.layers.Minimum(name = 'Min91906', )([Zer29360,Con5786])
Res77447 = keras.layers.Reshape((2, 4), name = 'Res77447', )(Min91906)
Up_81221 = keras.layers.UpSampling1D(size=(2), name = 'Up_81221', )(Res77447)
model = tf.keras.models.Model(inputs=[in0Min45571,in1Min45571,in0Sub33481,in1Sub33481,in0Max19074,in1Max19074,in0Con5786], outputs=Up_81221)
w = model.get_layer('Dep93464').get_weights() 
w[0] = np.array([[[[0.6594], [0.732], [0.2531], [0.7898]]]])
w[1] = np.array([0, 0, 0, 0])
model.get_layer('Dep93464').set_weights(w) 
in0Min45571 = tf.constant([[[[[0.9107, 0.6107], [0.3091, 0.4119]], [[0.9529, 0.2115], [0.9529, 0.365]]], [[[0.0955, 0.9561], [0.6194, 0.3409]], [[0.4265, 0.7311], [0.3093, 0.9532]]]]])
in1Min45571 = tf.constant([[[[[0.1244, 0.7595], [0.9596, 0.2735]], [[0.6875, 0.2105], [0.9665, 0.9885]]], [[[0.6182, 0.2704], [0.3605, 0.5845]], [[0.4089, 0.6398], [0.3475, 0.677]]]]])
in0Sub33481 = tf.constant([[0.6406, 0.5134]])
in1Sub33481 = tf.constant([[0.9683, 0.8933]])
in0Max19074 = tf.constant([[[[0.3629]], [[0.845]]]])
in1Max19074 = tf.constant([[[[0.5703]], [[0.1703]]]])
in0Con5786 = tf.constant([[[[0.1609, 0.6921, 0.3572]], [[0.8656, 0.8275, 0.3721]]]])
print (np.array2string(model.predict([in0Min45571,in1Min45571,in0Sub33481,in1Sub33481,in0Max19074,in1Max19074,in0Con5786],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Up_81221.png')

LMin45571 = minimum_layer([[[[[[0.9107, 0.6107], [0.3091, 0.4119]], [[0.9529, 0.2115], [0.9529, 0.365]]], [[[0.0955, 0.9561], [0.6194, 0.3409]], [[0.4265, 0.7311], [0.3093, 0.9532]]]]], [[[[[0.1244, 0.7595], [0.9596, 0.2735]], [[0.6875, 0.2105], [0.9665, 0.9885]]], [[[0.6182, 0.2704], [0.3605, 0.5845]], [[0.4089, 0.6398], [0.3475, 0.677]]]]]], Min45571), 
LRes78758 = reshape_layer(Min45571, [2, 2, 4], Res78758), 
LDep93464 = depthwise_conv2D_layer(Res78758, 1, 1,[[[[0.6594], [0.732], [0.2531], [0.7898]]]],[0, 0, 0, 0], 2, 2, false, Dep93464), 
LZer29360 = zero_padding2D_layer(Dep93464, 1, 0, 0, 0, Zer29360), 
LSub33481 = subtract_layer([[0.6406, 0.5134]], [[0.9683, 0.8933]], Sub33481), 
LReL74534 = relu_layer(Sub33481, 9.282872900016413, 2.227932133454603, 8.27711907866659, ReL74534), 
LRes3609 = reshape_layer(ReL74534, [2, 1], Res3609), 
LRes88024 = reshape_layer(Res3609, [2, 1, 1], Res88024), 
LMax19074 = maximum_layer([[[[[0.3629]], [[0.845]]]], [[[[0.5703]], [[0.1703]]]]], Max19074), 
LMin92509 = minimum_layer([Res88024,Max19074], Min92509), 
LCon5786 = concatenate_layer([Min92509,[[[[0.1609, 0.6921, 0.3572]], [[0.8656, 0.8275, 0.3721]]]]], 3, Con5786), 
LMin91906 = minimum_layer([Zer29360,Con5786], Min91906), 
LRes77447 = reshape_layer(Min91906, [2, 4], Res77447), 
LUp_81221 = up_sampling1D_layer(Res77447, 2, Up_81221), 
exec_layers([LMin45571,LRes78758,LDep93464,LZer29360,LSub33481,LReL74534,LRes3609,LRes88024,LMax19074,LMin92509,LCon5786,LMin91906,LRes77447,LUp_81221],["Min45571","Res78758","Dep93464","Zer29360","Sub33481","ReL74534","Res3609","Res88024","Max19074","Min92509","Con5786","Min91906","Res77447","Up_81221"],Up_81221,"Up_81221")

Actual (Unparsed): [[[-19.1709528, 0.0000000, 0.0000000, 0.0000000], [-19.1709528, 0.0000000, 0.0000000, 0.0000000], [-19.2872509, 0.4470324, 0.0782332, 0.2160103], [-19.2872509, 0.4470324, 0.0782332, 0.2160103]]]

Expected (Unparsed): [[[-19.170952927924528,0,0,0],[-19.170952927924528,0,0,0],[-19.28725098529086,0.4470324,0.07823321,0.2160103],[-19.28725098529086,0.4470324,0.07823321,0.2160103]]]

Actual:   [[[-19.1709, 0, 0, 0], [-19.1709, 0, 0, 0], [-19.2872, 0.4471, 0.0783, 0.2161], [-19.2872, 0.4471, 0.0783, 0.2161]]]

Expected: [[[-19.1709, 0, 0, 0], [-19.1709, 0, 0, 0], [-19.2872, 0.4471, 0.0783, 0.2161], [-19.2872, 0.4471, 0.0783, 0.2161]]]