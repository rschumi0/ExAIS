import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Con26265 = tf.keras.layers.Input(shape=([2, 2, 1, 1]))

Con26265 = keras.layers.Conv3D(2, (2, 1, 1),strides=(1, 1, 1), padding='same', dilation_rate=(1, 1, 1), name = 'Con26265', )(in0Con26265)
Res71623 = keras.layers.Reshape((2, 2, 2), name = 'Res71623', )(Con26265)
Zer10332 = keras.layers.ZeroPadding2D(padding=((1, 1), (1, 1)), name = 'Zer10332', )(Res71623)
model = tf.keras.models.Model(inputs=[in0Con26265], outputs=Zer10332)
w = model.get_layer('Con26265').get_weights() 
w[0] = np.array([[[[[0.1466, 0.7289]]]], [[[[0.3897, 0.1929]]]]])
w[1] = np.array([0, 0])
model.get_layer('Con26265').set_weights(w) 
in0Con26265 = tf.constant([[[[[0.8105]], [[0.3113]]], [[[0.6949]], [[0.4674]]]]])
print (np.array2string(model.predict([in0Con26265],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Zer10332.png')

LCon26265 = conv3D_layer([[[[[0.8105]], [[0.3113]]], [[[0.6949]], [[0.4674]]]]], 2, 1, 1,[[[[[0.1466, 0.7289]]]], [[[[0.3897, 0.1929]]]]],[0, 0], 1, 1, 1, true, 1, 1, 1, Con26265), 
LRes71623 = reshape_layer(Con26265, [2, 2, 2], Res71623), 
LZer10332 = zero_padding2D_layer(Res71623, 1, 1, 1, 1, Zer10332), 
exec_layers([LCon26265,LRes71623,LZer10332],["Con26265","Res71623","Zer10332"],Zer10332,"Zer10332")

Actual (Unparsed): [[[[0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000]], [[0.0000000, 0.0000000], [0.3896218, 0.7248197], [0.2277824, 0.3170680], [0.0000000, 0.0000000]], [[0.0000000, 0.0000000], [0.1018723, 0.5065126], [0.0685208, 0.3406879], [0.0000000, 0.0000000]], [[0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000]]]]

Expected (Unparsed): [[[[0,0],[0,0],[0,0],[0,0]],[[0,0],[0.38962183,0.72481966],[0.22778236,0.31706803],[0,0]],[[0,0],[0.10187234,0.5065126099999999],[0.06852084,0.34068786],[0,0]],[[0,0],[0,0],[0,0],[0,0]]]]

Actual:   [[[[0, 0], [0, 0], [0, 0], [0, 0]], [[0, 0], [0.3897, 0.7249], [0.2278, 0.3171], [0, 0]], [[0, 0], [0.1019, 0.5066], [0.0686, 0.3407], [0, 0]], [[0, 0], [0, 0], [0, 0], [0, 0]]]]

Expected: [[[[0, 0], [0, 0], [0, 0], [0, 0]], [[0, 0], [0.3897, 0.7249], [0.2278, 0.3171], [0, 0]], [[0, 0], [0.1019, 0.5066], [0.0686, 0.3407], [0, 0]], [[0, 0], [0, 0], [0, 0], [0, 0]]]]