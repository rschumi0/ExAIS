import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Mul16989 = tf.keras.layers.Input(shape=([1, 1, 1, 1]))
in1Mul16989 = tf.keras.layers.Input(shape=([1, 1, 1, 1]))
in0Den44276 = tf.keras.layers.Input(shape=([2, 3, 2]))
in0Con59711 = tf.keras.layers.Input(shape=([2, 3, 1]))
in0Add64097 = tf.keras.layers.Input(shape=([1, 2]))
in1Add64097 = tf.keras.layers.Input(shape=([1, 2]))
in0Con8955 = tf.keras.layers.Input(shape=([2, 10]))

Mul16989 = keras.layers.Multiply(name = 'Mul16989', )([in0Mul16989,in1Mul16989])
Con33248 = keras.layers.Conv3D(4, (1, 1, 1),strides=(1, 1, 1), padding='valid', dilation_rate=(1, 1, 1), name = 'Con33248', )(Mul16989)
Res1088 = keras.layers.Reshape((1, 1, 4), name = 'Res1088', )(Con33248)
Zer74046 = keras.layers.ZeroPadding2D(padding=((1, 0), (2, 0)), name = 'Zer74046', )(Res1088)
Den44276 = keras.layers.Dense(3,name = 'Den44276', )(in0Den44276)
Con59711 = keras.layers.Concatenate(axis=3, name = 'Con59711', )([Den44276,in0Con59711])
Add20220 = keras.layers.Add(name = 'Add20220', )([Zer74046,Con59711])
Res42299 = keras.layers.Reshape((2, 12), name = 'Res42299', )(Add20220)
Add64097 = keras.layers.Add(name = 'Add64097', )([in0Add64097,in1Add64097])
Zer4046 = keras.layers.ZeroPadding1D(padding=((1, 0)), name = 'Zer4046', )(Add64097)
Con8955 = keras.layers.Concatenate(axis=2, name = 'Con8955', )([Zer4046,in0Con8955])
Min26324 = keras.layers.Minimum(name = 'Min26324', )([Res42299,Con8955])
model = tf.keras.models.Model(inputs=[in0Mul16989,in1Mul16989,in0Den44276,in0Con59711,in0Add64097,in1Add64097,in0Con8955], outputs=Min26324)
w = model.get_layer('Con33248').get_weights() 
w[0] = np.array([[[[[0.5903, 0.2364, 0.4297, 0.7333]]]]])
w[1] = np.array([0, 0, 0, 0])
model.get_layer('Con33248').set_weights(w) 
w = model.get_layer('Den44276').get_weights() 
w[0] = np.array([[0.2744, 0.908, 0.1927], [0.5091, 0.399, 0.8891]])
w[1] = np.array([0.4742, 0.578, 0.1999])
model.get_layer('Den44276').set_weights(w) 
in0Mul16989 = tf.constant([[[[[0.6138]]]]])
in1Mul16989 = tf.constant([[[[[0.3214]]]]])
in0Den44276 = tf.constant([[[[0.979, 0.5829], [0.7909, 0.1705], [0.7624, 0.5116]], [[0.5315, 0.2347], [0.8483, 0.3269], [0.9049, 0.2969]]]])
in0Con59711 = tf.constant([[[[0.5934], [0.1907], [0.7193]], [[0.6797], [0.9841], [0.9659]]]])
in0Add64097 = tf.constant([[[0.6369, 0.5948]]])
in1Add64097 = tf.constant([[[0.972, 0.3343]]])
in0Con8955 = tf.constant([[[0.5079, 0.5073, 0.1568, 0.752, 0.0562, 0.1121, 0.8343, 0.1866, 0.1134, 0.9153], [0.5456, 0.1789, 0.5849, 0.1977, 0.3625, 0.9934, 0.2941, 0.549, 0.7981, 0.2068]]])
print (np.array2string(model.predict([in0Mul16989,in1Mul16989,in0Den44276,in0Con59711,in0Add64097,in1Add64097,in0Con8955],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Min26324.png')

LMul16989 = multiply_layer([[[[[[0.6138]]]]], [[[[[0.3214]]]]]], Mul16989), 
LCon33248 = conv3D_layer(Mul16989, 1, 1, 1,[[[[[0.5903, 0.2364, 0.4297, 0.7333]]]]],[0, 0, 0, 0], 1, 1, 1, false, 1, 1, 1, Con33248), 
LRes1088 = reshape_layer(Con33248, [1, 1, 4], Res1088), 
LZer74046 = zero_padding2D_layer(Res1088, 1, 0, 2, 0, Zer74046), 
LDen44276 = dense_layer([[[[0.979, 0.5829], [0.7909, 0.1705], [0.7624, 0.5116]], [[0.5315, 0.2347], [0.8483, 0.3269], [0.9049, 0.2969]]]], [[0.2744, 0.908, 0.1927], [0.5091, 0.399, 0.8891]],[0.4742, 0.578, 0.1999], Den44276), 
LCon59711 = concatenate_layer([Den44276,[[[[0.5934], [0.1907], [0.7193]], [[0.6797], [0.9841], [0.9659]]]]], 3, Con59711), 
LAdd20220 = add_layer([Zer74046,Con59711], Add20220), 
LRes42299 = reshape_layer(Add20220, [2, 12], Res42299), 
LAdd64097 = add_layer([[[[0.6369, 0.5948]]], [[[0.972, 0.3343]]]], Add64097), 
LZer4046 = zero_padding1D_layer(Add64097, 1, 0, Zer4046), 
LCon8955 = concatenate_layer([Zer4046,[[[0.5079, 0.5073, 0.1568, 0.752, 0.0562, 0.1121, 0.8343, 0.1866, 0.1134, 0.9153], [0.5456, 0.1789, 0.5849, 0.1977, 0.3625, 0.9934, 0.2941, 0.549, 0.7981, 0.2068]]]], 2, Con8955), 
LMin26324 = minimum_layer([Res42299,Con8955], Min26324), 
exec_layers([LMul16989,LCon33248,LRes1088,LZer74046,LDen44276,LCon59711,LAdd20220,LRes42299,LAdd64097,LZer4046,LCon8955,LMin26324],["Mul16989","Con33248","Res1088","Zer74046","Den44276","Con59711","Add20220","Res42299","Add64097","Zer4046","Con8955","Min26324"],Min26324,"Min26324")

Actual (Unparsed): [[[0.0000000, 0.0000000, 0.5079000, 0.5073000, 0.1568000, 0.7520000, 0.0562000, 0.1121000, 0.8343000, 0.1866000, 0.1134000, 0.7193000], [0.7395294, 0.9291000, 0.5109918, 0.1789000, 0.5849000, 0.1977000, 0.3625000, 0.9841000, 0.2941000, 0.5490000, 0.7230172, 0.2068000]]]

Expected (Unparsed): [[[0,0,0.5079,0.5073,0.1568,0.752,0.0562,0.1121,0.8343,0.1866,0.1134,0.7193],[0.7395293700000001,0.9291,0.51099182,0.1789,0.5849,0.1977,0.3625,0.9841,0.2941,0.549,0.723017225004,0.2068]]]

Actual:   [[[0, 0, 0.5079, 0.5073, 0.1568, 0.752, 0.0562, 0.1121, 0.8343, 0.1866, 0.1134, 0.7193], [0.7396, 0.9291, 0.511, 0.1789, 0.5849, 0.1977, 0.3625, 0.9841, 0.2941, 0.549, 0.7231, 0.2068]]]

Expected: [[[0, 0, 0.5079, 0.5073, 0.1568, 0.752, 0.0562, 0.1121, 0.8343, 0.1866, 0.1134, 0.7193], [0.7396, 0.9291, 0.511, 0.1789, 0.5849, 0.1977, 0.3625, 0.9841, 0.2941, 0.549, 0.7231, 0.2068]]]