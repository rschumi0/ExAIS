import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Mul84386 = tf.keras.layers.Input(shape=([1, 2]))
in1Mul84386 = tf.keras.layers.Input(shape=([1, 2]))
in0Con92410 = tf.keras.layers.Input(shape=([2, 2, 2, 1]))
in0Sub33856 = tf.keras.layers.Input(shape=([2, 2, 2, 2]))
in1Sub33856 = tf.keras.layers.Input(shape=([2, 2, 2, 2]))
in0Max55150 = tf.keras.layers.Input(shape=([1, 2]))
in1Max55150 = tf.keras.layers.Input(shape=([1, 2]))
in0Up_47426 = tf.keras.layers.Input(shape=([1, 3]))
in0Con82715 = tf.keras.layers.Input(shape=([3, 9]))
in0Con37595 = tf.keras.layers.Input(shape=([3, 4]))

Mul84386 = keras.layers.Multiply(name = 'Mul84386', )([in0Mul84386,in1Mul84386])
Res30145 = keras.layers.Reshape((1, 2, 1), name = 'Res30145', )(Mul84386)
Res54087 = keras.layers.Reshape((1, 2, 1, 1), name = 'Res54087', )(Res30145)
Zer83444 = keras.layers.ZeroPadding3D(padding=((1, 0), (0, 0), (1, 0)), name = 'Zer83444', )(Res54087)
Con92410 = keras.layers.Concatenate(axis=4, name = 'Con92410', )([Zer83444,in0Con92410])
Sub33856 = keras.layers.Subtract(name = 'Sub33856', )([in0Sub33856,in1Sub33856])
Ave4156 = keras.layers.Average(name = 'Ave4156', )([Con92410,Sub33856])
Up_75819 = keras.layers.UpSampling3D(size=(1, 2, 1), name = 'Up_75819', )(Ave4156)
Res86794 = keras.layers.Reshape((2, 4, 4), name = 'Res86794', )(Up_75819)
Res83229 = keras.layers.Reshape((2, 16), name = 'Res83229', )(Res86794)
Zer82747 = keras.layers.ZeroPadding1D(padding=((1, 0)), name = 'Zer82747', )(Res83229)
Max55150 = keras.layers.Maximum(name = 'Max55150', )([in0Max55150,in1Max55150])
Res45214 = keras.layers.Reshape((1, 2, 1), name = 'Res45214', )(Max55150)
Res99095 = keras.layers.Reshape((1, 2, 1, 1), name = 'Res99095', )(Res45214)
Zer47489 = keras.layers.ZeroPadding3D(padding=((1, 1), (1, 1), (1, 1)), name = 'Zer47489', )(Res99095)
Res61273 = keras.layers.Reshape((3, 4, 3), name = 'Res61273', )(Zer47489)
Res32989 = keras.layers.Reshape((3, 12), name = 'Res32989', )(Res61273)
Up_47426 = keras.layers.UpSampling1D(size=(2), name = 'Up_47426', )(in0Up_47426)
Zer55148 = keras.layers.ZeroPadding1D(padding=((1, 0)), name = 'Zer55148', )(Up_47426)
Con82715 = keras.layers.Concatenate(axis=2, name = 'Con82715', )([Zer55148,in0Con82715])
Mul92319 = keras.layers.Multiply(name = 'Mul92319', )([Res32989,Con82715])
Con37595 = keras.layers.Concatenate(axis=2, name = 'Con37595', )([Mul92319,in0Con37595])
Add45702 = keras.layers.Add(name = 'Add45702', )([Zer82747,Con37595])
model = tf.keras.models.Model(inputs=[in0Mul84386,in1Mul84386,in0Con92410,in0Sub33856,in1Sub33856,in0Max55150,in1Max55150,in0Up_47426,in0Con82715,in0Con37595], outputs=Add45702)
in0Mul84386 = tf.constant([[[0.9079, 0.4774]]])
in1Mul84386 = tf.constant([[[0.4825, 0.5349]]])
in0Con92410 = tf.constant([[[[[0.585], [0.0648]], [[0.7783], [0.7623]]], [[[0.0377], [0.7016]], [[0.3776], [0.8519]]]]])
in0Sub33856 = tf.constant([[[[[0.3955, 0.8302], [0.2427, 0.9423]], [[0.782, 0.3511], [0.7216, 0.606]]], [[[0.0481, 0.468], [0.0199, 0.0488]], [[0.8427, 0.3049], [0.9358, 0.8181]]]]])
in1Sub33856 = tf.constant([[[[[0.7497, 0.0657], [0.1419, 0.0952]], [[0.0706, 0.9219], [0.6653, 0.0739]]], [[[0.8402, 0.5557], [0.3986, 0.383]], [[0.8204, 0.5762], [0.5344, 0.6551]]]]])
in0Max55150 = tf.constant([[[0.7726, 0.8689]]])
in1Max55150 = tf.constant([[[0.013, 0.4564]]])
in0Up_47426 = tf.constant([[[1.3946, 1.5649, 1.3011]]])
in0Con82715 = tf.constant([[[0.1667, 0.7293, 0.6459, 0.1369, 0.4757, 0.9254, 0.5593, 0.4593, 0.2617], [0.9279, 0.0441, 0.71, 0.8814, 0.9696, 0.2538, 0.773, 0.294, 0.7951], [0.3098, 0.1139, 0.0169, 0.7401, 0.9368, 0.9384, 0.2017, 0.4159, 0.5225]]])
in0Con37595 = tf.constant([[[0.066, 0.852, 0.8923, 0.7811], [0.4219, 0.9206, 0.5623, 0.2778], [0.0544, 0.9138, 0.9153, 0.9602]]])
print (np.array2string(model.predict([in0Mul84386,in1Mul84386,in0Con92410,in0Sub33856,in1Sub33856,in0Max55150,in1Max55150,in0Up_47426,in0Con82715,in0Con37595],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Add45702.png')

LMul84386 = multiply_layer([[[[0.9079, 0.4774]]], [[[0.4825, 0.5349]]]], Mul84386), 
LRes30145 = reshape_layer(Mul84386, [1, 2, 1], Res30145), 
LRes54087 = reshape_layer(Res30145, [1, 2, 1, 1], Res54087), 
LZer83444 = zero_padding3D_layer(Res54087, 1, 0, 0, 0, 1, 0, Zer83444), 
LCon92410 = concatenate_layer([Zer83444,[[[[[0.585], [0.0648]], [[0.7783], [0.7623]]], [[[0.0377], [0.7016]], [[0.3776], [0.8519]]]]]], 4, Con92410), 
LSub33856 = subtract_layer([[[[[0.3955, 0.8302], [0.2427, 0.9423]], [[0.782, 0.3511], [0.7216, 0.606]]], [[[0.0481, 0.468], [0.0199, 0.0488]], [[0.8427, 0.3049], [0.9358, 0.8181]]]]], [[[[[0.7497, 0.0657], [0.1419, 0.0952]], [[0.0706, 0.9219], [0.6653, 0.0739]]], [[[0.8402, 0.5557], [0.3986, 0.383]], [[0.8204, 0.5762], [0.5344, 0.6551]]]]], Sub33856), 
LAve4156 = average_layer([Con92410,Sub33856], Ave4156), 
LUp_75819 = up_sampling3D_layer(Ave4156, 1, 2, 1, Up_75819), 
LRes86794 = reshape_layer(Up_75819, [2, 4, 4], Res86794), 
LRes83229 = reshape_layer(Res86794, [2, 16], Res83229), 
LZer82747 = zero_padding1D_layer(Res83229, 1, 0, Zer82747), 
LMax55150 = maximum_layer([[[[0.7726, 0.8689]]], [[[0.013, 0.4564]]]], Max55150), 
LRes45214 = reshape_layer(Max55150, [1, 2, 1], Res45214), 
LRes99095 = reshape_layer(Res45214, [1, 2, 1, 1], Res99095), 
LZer47489 = zero_padding3D_layer(Res99095, 1, 1, 1, 1, 1, 1, Zer47489), 
LRes61273 = reshape_layer(Zer47489, [3, 4, 3], Res61273), 
LRes32989 = reshape_layer(Res61273, [3, 12], Res32989), 
LUp_47426 = up_sampling1D_layer([[[1.3946, 1.5649, 1.3011]]], 2, Up_47426), 
LZer55148 = zero_padding1D_layer(Up_47426, 1, 0, Zer55148), 
LCon82715 = concatenate_layer([Zer55148,[[[0.1667, 0.7293, 0.6459, 0.1369, 0.4757, 0.9254, 0.5593, 0.4593, 0.2617], [0.9279, 0.0441, 0.71, 0.8814, 0.9696, 0.2538, 0.773, 0.294, 0.7951], [0.3098, 0.1139, 0.0169, 0.7401, 0.9368, 0.9384, 0.2017, 0.4159, 0.5225]]]], 2, Con82715), 
LMul92319 = multiply_layer([Res32989,Con82715], Mul92319), 
LCon37595 = concatenate_layer([Mul92319,[[[0.066, 0.852, 0.8923, 0.7811], [0.4219, 0.9206, 0.5623, 0.2778], [0.0544, 0.9138, 0.9153, 0.9602]]]], 2, Con37595), 
LAdd45702 = add_layer([Zer82747,Con37595], Add45702), 
exec_layers([LMul84386,LRes30145,LRes54087,LZer83444,LCon92410,LSub33856,LAve4156,LUp_75819,LRes86794,LRes83229,LZer82747,LMax55150,LRes45214,LRes99095,LZer47489,LRes61273,LRes32989,LUp_47426,LZer55148,LCon82715,LMul92319,LCon37595,LAdd45702],["Mul84386","Res30145","Res54087","Zer83444","Con92410","Sub33856","Ave4156","Up_75819","Res86794","Res83229","Zer82747","Max55150","Res45214","Res99095","Zer47489","Res61273","Res32989","Up_47426","Zer55148","Con82715","Mul92319","Con37595","Add45702"],Add45702,"Add45702")

Actual (Unparsed): [[[0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0660000, 0.8520000, 0.8923000, 0.7811000], [-0.1771000, 0.6747500, 0.0504000, 0.4559500, -0.1430283, 0.6747500, 0.0504000, 1.2984355, 0.3557000, 0.1037500, 0.0281500, 0.6472000, 0.7776000, 1.0243500, 0.5904500, 0.9250000], [-0.3960500, -0.0250000, 0.0296809, 0.1837000, -0.3960500, -0.0250000, 0.0296809, 0.1837000, 0.0111500, 0.0531500, 0.3283806, 0.5074500, 0.0655500, 0.9669500, 1.2436807, 1.4676500]]]

Expected (Unparsed): [[[0,0,0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.066,0.852,0.8923,0.7811],[-0.1771,0.67475,0.0504,0.45594999999999997,-0.14302834,0.67475,0.0504,1.29843544,0.3557,0.10375000000000001,0.02815000000000001,0.6472,0.7776000000000001,1.02435,0.59045,0.925],[-0.39604999999999996,-0.024999999999999974,0.029680874999999995,0.1837,-0.39604999999999996,-0.024999999999999974,0.029680874999999995,0.1837,0.011149999999999993,0.053149999999999975,0.32838063,0.50745,0.06555,0.96695,1.24368063,1.46765]]]

Actual:   [[[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.066, 0.852, 0.8923, 0.7811], [-0.1771, 0.6748, 0.0504, 0.456, -0.143, 0.6748, 0.0504, 1.2985, 0.3557, 0.1038, 0.0282, 0.6472, 0.7776, 1.0244, 0.5905, 0.925], [-0.396, -0.025, 0.0297, 0.1837, -0.396, -0.025, 0.0297, 0.1837, 0.0112, 0.0532, 0.3284, 0.5075, 0.0656, 0.967, 1.2437, 1.4677]]]

Expected: [[[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.066, 0.852, 0.8923, 0.7811], [-0.1771, 0.6748, 0.0504, 0.456, -0.143, 0.6748, 0.0504, 1.2985, 0.3557, 0.1038, 0.0282, 0.6472, 0.7777, 1.0244, 0.5905, 0.925], [-0.396, -0.0249, 0.0297, 0.1837, -0.396, -0.0249, 0.0297, 0.1837, 0.0112, 0.0532, 0.3284, 0.5075, 0.0656, 0.967, 1.2437, 1.4677]]]