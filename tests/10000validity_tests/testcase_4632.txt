import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Ave64447 = tf.keras.layers.Input(shape=([1, 1]))
in1Ave64447 = tf.keras.layers.Input(shape=([1, 1]))
in0Add20313 = tf.keras.layers.Input(shape=([1, 2, 1]))
in1Add20313 = tf.keras.layers.Input(shape=([1, 2, 1]))
in0Con40735 = tf.keras.layers.Input(shape=([1, 2, 3]))

Ave64447 = keras.layers.Average(name = 'Ave64447', )([in0Ave64447,in1Ave64447])
Res70265 = keras.layers.Reshape((1, 1, 1), name = 'Res70265', )(Ave64447)
Con79774 = keras.layers.Conv2D(4, (1, 1),strides=(8, 1), padding='valid', dilation_rate=(1, 1), name = 'Con79774', )(Res70265)
Cro85519 = keras.layers.Cropping2D(cropping=((0, 0), (0, 0)), name = 'Cro85519', )(Con79774)
Zer71793 = keras.layers.ZeroPadding2D(padding=((0, 0), (1, 0)), name = 'Zer71793', )(Cro85519)
Add20313 = keras.layers.Add(name = 'Add20313', )([in0Add20313,in1Add20313])
Con40735 = keras.layers.Concatenate(axis=3, name = 'Con40735', )([Add20313,in0Con40735])
Mul5738 = keras.layers.Multiply(name = 'Mul5738', )([Zer71793,Con40735])
ReL68495 = keras.layers.ReLU(max_value=6.69847964532517, negative_slope=3.8947906708613185, threshold=1.6312109720841306, name = 'ReL68495', )(Mul5738)
model = tf.keras.models.Model(inputs=[in0Ave64447,in1Ave64447,in0Add20313,in1Add20313,in0Con40735], outputs=ReL68495)
w = model.get_layer('Con79774').get_weights() 
w[0] = np.array([[[[0.9964, 0.7057, 0.0885, 0.3932]]]])
w[1] = np.array([0, 0, 0, 0])
model.get_layer('Con79774').set_weights(w) 
in0Ave64447 = tf.constant([[[0.7662]]])
in1Ave64447 = tf.constant([[[0.138]]])
in0Add20313 = tf.constant([[[[0.9916], [0.7592]]]])
in1Add20313 = tf.constant([[[[0.9268], [0.9219]]]])
in0Con40735 = tf.constant([[[[0.4536, 0.7894, 0.6574], [0.8582, 0.8634, 0.3347]]]])
print (np.array2string(model.predict([in0Ave64447,in1Ave64447,in0Add20313,in1Add20313,in0Con40735],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='ReL68495.png')

LAve64447 = average_layer([[[[0.7662]]], [[[0.138]]]], Ave64447), 
LRes70265 = reshape_layer(Ave64447, [1, 1, 1], Res70265), 
LCon79774 = conv2D_layer(Res70265, 1, 1,[[[[0.9964, 0.7057, 0.0885, 0.3932]]]],[0, 0, 0, 0], 8, 1, false, 1, 1, Con79774), 
LCro85519 = cropping2D_layer(Con79774, 0, 0, 0, 0, Cro85519), 
LZer71793 = zero_padding2D_layer(Cro85519, 0, 0, 1, 0, Zer71793), 
LAdd20313 = add_layer([[[[[0.9916], [0.7592]]]], [[[[0.9268], [0.9219]]]]], Add20313), 
LCon40735 = concatenate_layer([Add20313,[[[[0.4536, 0.7894, 0.6574], [0.8582, 0.8634, 0.3347]]]]], 3, Con40735), 
LMul5738 = multiply_layer([Zer71793,Con40735], Mul5738), 
LReL68495 = relu_layer(Mul5738, 6.69847964532517, 3.8947906708613185, 1.6312109720841306, ReL68495), 
exec_layers([LAve64447,LRes70265,LCon79774,LCro85519,LZer71793,LAdd20313,LCon40735,LMul5738,LReL68495],["Ave64447","Res70265","Con79774","Cro85519","Zer71793","Add20313","Con40735","Mul5738","ReL68495"],ReL68495,"ReL68495")

Actual (Unparsed): [[[[-6.3532253, -6.3532253, -6.3532253, -6.3532253], [-3.4037424, -5.2868078, -6.2186783, -6.1214923]]]]

Expected (Unparsed): [[[[-6.353225276279894,-6.353225276279894,-6.353225276279894,-6.353225276279894],[-3.403742291426636,-5.2868077947746634,-6.21867829970045,-6.121492294628844]]]]

Actual:   [[[[-6.3532, -6.3532, -6.3532, -6.3532], [-3.4037, -5.2868, -6.2186, -6.1214]]]]

Expected: [[[[-6.3532, -6.3532, -6.3532, -6.3532], [-3.4037, -5.2868, -6.2186, -6.1214]]]]