import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Glo74087 = tf.keras.layers.Input(shape=([1, 2, 1]))
in0Zer55850 = tf.keras.layers.Input(shape=([3, 4, 1, 1]))

Glo74087 = keras.layers.GlobalMaxPool2D(name = 'Glo74087', )(in0Glo74087)
Res94480 = keras.layers.Reshape((1, 1), name = 'Res94480', )(Glo74087)
Res49197 = keras.layers.Reshape((1, 1, 1), name = 'Res49197', )(Res94480)
Res41238 = keras.layers.Reshape((1, 1, 1, 1), name = 'Res41238', )(Res49197)
Zer22227 = keras.layers.ZeroPadding3D(padding=((5, 0), (1, 0), (0, 0)), name = 'Zer22227', )(Res41238)
Zer55850 = keras.layers.ZeroPadding3D(padding=((1, 1), (1, 1), (1, 1)), name = 'Zer55850', )(in0Zer55850)
Res60009 = keras.layers.Reshape((5, 6, 3), name = 'Res60009', )(Zer55850)
Res85623 = keras.layers.Reshape((5, 18), name = 'Res85623', )(Res60009)
LST44557 = keras.layers.LSTM(3,recurrent_activation='sigmoid', name = 'LST44557', )(Res85623)
Res12464 = keras.layers.Reshape((3, 1), name = 'Res12464', )(LST44557)
Res66646 = keras.layers.Reshape((3, 1, 1), name = 'Res66646', )(Res12464)
Res81798 = keras.layers.Reshape((3, 1, 1, 1), name = 'Res81798', )(Res66646)
Up_27975 = keras.layers.UpSampling3D(size=(2, 2, 1), name = 'Up_27975', )(Res81798)
Min20401 = keras.layers.Minimum(name = 'Min20401', )([Zer22227,Up_27975])
Res20611 = keras.layers.Reshape((6, 2, 1), name = 'Res20611', )(Min20401)
Res54965 = keras.layers.Reshape((6, 2), name = 'Res54965', )(Res20611)
Ave52178 = keras.layers.AveragePooling1D(pool_size=(1), name = 'Ave52178', )(Res54965)
model = tf.keras.models.Model(inputs=[in0Glo74087,in0Zer55850], outputs=Ave52178)
w = model.get_layer('LST44557').get_weights() 
w[0] = np.array([[7, 1, 8, 7, 2, 7, 5, 9, 8, 2, 3, 8], [4, 8, 5, 7, 8, 7, 6, 4, 6, 3, 7, 7], [6, 4, 1, 3, 1, 6, 4, 6, 1, 5, 7, 2], [5, 5, 4, 5, 7, 7, 1, 7, 6, 6, 4, 3], [2, 5, 7, 1, 2, 7, 2, 10, 8, 5, 3, 7], [10, 4, 10, 10, 8, 10, 5, 6, 5, 5, 1, 7], [5, 5, 8, 3, 5, 3, 6, 3, 3, 2, 3, 8], [1, 4, 7, 9, 5, 4, 7, 6, 2, 3, 3, 1], [10, 9, 9, 10, 3, 6, 6, 1, 10, 5, 7, 7], [7, 10, 3, 1, 3, 1, 6, 9, 8, 2, 8, 2], [4, 7, 4, 10, 2, 4, 9, 9, 8, 7, 7, 7], [5, 7, 6, 6, 7, 6, 5, 9, 9, 5, 6, 7], [10, 6, 4, 2, 4, 1, 4, 3, 5, 6, 4, 9], [1, 2, 6, 10, 8, 9, 8, 6, 3, 8, 1, 6], [8, 6, 6, 10, 9, 10, 8, 5, 9, 6, 10, 1], [10, 9, 9, 3, 7, 3, 1, 1, 4, 4, 1, 9], [5, 1, 3, 4, 6, 10, 9, 5, 3, 8, 6, 9], [9, 8, 7, 6, 6, 2, 5, 6, 7, 6, 6, 8]])
w[1] = np.array([[4, 9, 6, 5, 10, 7, 10, 2, 9, 2, 8, 9], [1, 6, 7, 3, 2, 1, 4, 5, 2, 1, 3, 3], [3, 5, 4, 3, 6, 4, 6, 9, 8, 10, 2, 3]])
w[2] = np.array([3, 5, 9, 5, 6, 2, 7, 3, 5, 6, 4, 6])
model.get_layer('LST44557').set_weights(w) 
in0Glo74087 = tf.constant([[[[1.0877], [1.4062]]]])
in0Zer55850 = tf.constant([[[[[1.2052]], [[1.2376]], [[1.0121]], [[1.7102]]], [[[1.5489]], [[1.5775]], [[1.6308]], [[1.5485]]], [[[1.6282]], [[1.4577]], [[1.3064]], [[1.832]]]]])
print (np.array2string(model.predict([in0Glo74087,in0Zer55850],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Ave52178.png')

LGlo74087 = global_max_pool2D_layer([[[[1.0877], [1.4062]]]], Glo74087), 
LRes94480 = reshape_layer(Glo74087, [1, 1], Res94480), 
LRes49197 = reshape_layer(Res94480, [1, 1, 1], Res49197), 
LRes41238 = reshape_layer(Res49197, [1, 1, 1, 1], Res41238), 
LZer22227 = zero_padding3D_layer(Res41238, 5, 0, 1, 0, 0, 0, Zer22227), 
LZer55850 = zero_padding3D_layer([[[[[1.2052]], [[1.2376]], [[1.0121]], [[1.7102]]], [[[1.5489]], [[1.5775]], [[1.6308]], [[1.5485]]], [[[1.6282]], [[1.4577]], [[1.3064]], [[1.832]]]]], 1, 1, 1, 1, 1, 1, Zer55850), 
LRes60009 = reshape_layer(Zer55850, [5, 6, 3], Res60009), 
LRes85623 = reshape_layer(Res60009, [5, 18], Res85623), 
LLST44557 = lstm_layer(Res85623,[[7, 1, 8, 7, 2, 7, 5, 9, 8, 2, 3, 8], [4, 8, 5, 7, 8, 7, 6, 4, 6, 3, 7, 7], [6, 4, 1, 3, 1, 6, 4, 6, 1, 5, 7, 2], [5, 5, 4, 5, 7, 7, 1, 7, 6, 6, 4, 3], [2, 5, 7, 1, 2, 7, 2, 10, 8, 5, 3, 7], [10, 4, 10, 10, 8, 10, 5, 6, 5, 5, 1, 7], [5, 5, 8, 3, 5, 3, 6, 3, 3, 2, 3, 8], [1, 4, 7, 9, 5, 4, 7, 6, 2, 3, 3, 1], [10, 9, 9, 10, 3, 6, 6, 1, 10, 5, 7, 7], [7, 10, 3, 1, 3, 1, 6, 9, 8, 2, 8, 2], [4, 7, 4, 10, 2, 4, 9, 9, 8, 7, 7, 7], [5, 7, 6, 6, 7, 6, 5, 9, 9, 5, 6, 7], [10, 6, 4, 2, 4, 1, 4, 3, 5, 6, 4, 9], [1, 2, 6, 10, 8, 9, 8, 6, 3, 8, 1, 6], [8, 6, 6, 10, 9, 10, 8, 5, 9, 6, 10, 1], [10, 9, 9, 3, 7, 3, 1, 1, 4, 4, 1, 9], [5, 1, 3, 4, 6, 10, 9, 5, 3, 8, 6, 9], [9, 8, 7, 6, 6, 2, 5, 6, 7, 6, 6, 8]],[[4, 9, 6, 5, 10, 7, 10, 2, 9, 2, 8, 9], [1, 6, 7, 3, 2, 1, 4, 5, 2, 1, 3, 3], [3, 5, 4, 3, 6, 4, 6, 9, 8, 10, 2, 3]],[3, 5, 9, 5, 6, 2, 7, 3, 5, 6, 4, 6], LST44557), 
LRes12464 = reshape_layer(LST44557, [3, 1], Res12464), 
LRes66646 = reshape_layer(Res12464, [3, 1, 1], Res66646), 
LRes81798 = reshape_layer(Res66646, [3, 1, 1, 1], Res81798), 
LUp_27975 = up_sampling3D_layer(Res81798, 2, 2, 1, Up_27975), 
LMin20401 = minimum_layer([Zer22227,Up_27975], Min20401), 
LRes20611 = reshape_layer(Min20401, [6, 2, 1], Res20611), 
LRes54965 = reshape_layer(Res20611, [6, 2], Res54965), 
LAve52178 = average_pooling1D_layer(Res54965, 1, Ave52178), 
exec_layers([LGlo74087,LRes94480,LRes49197,LRes41238,LZer22227,LZer55850,LRes60009,LRes85623,LLST44557,LRes12464,LRes66646,LRes81798,LUp_27975,LMin20401,LRes20611,LRes54965,LAve52178],["Glo74087","Res94480","Res49197","Res41238","Zer22227","Zer55850","Res60009","Res85623","LST44557","Res12464","Res66646","Res81798","Up_27975","Min20401","Res20611","Res54965","Ave52178"],Ave52178,"Ave52178")

Actual (Unparsed): [[[0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.9999092]]]

Expected (Unparsed): [[[0,0],[0,0],[0,0],[0,0],[0,0],[0,0.9999091639872073]]]

Actual:   [[[0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 1]]]

Expected: [[[0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 1]]]