import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0PRe40014 = tf.keras.layers.Input(shape=([1, 2, 1, 2]))
in0Max27145 = tf.keras.layers.Input(shape=([1, 1, 2]))
in0Glo2720 = tf.keras.layers.Input(shape=([1, 2]))
in0Con47723 = tf.keras.layers.Input(shape=([1, 2, 11]))

PRe40014 = keras.layers.PReLU(name = 'PRe40014', input_shape=(1, 2, 1, 2))(in0PRe40014)
Res78387 = keras.layers.Reshape((1, 2, 2), name = 'Res78387', )(PRe40014)
Max27145 = keras.layers.MaxPool2D(pool_size=(1, 1), strides=(2, 1), padding='valid', name = 'Max27145', )(in0Max27145)
Zer2339 = keras.layers.ZeroPadding2D(padding=((0, 0), (1, 0)), name = 'Zer2339', )(Max27145)
Max72160 = keras.layers.Maximum(name = 'Max72160', )([Res78387,Zer2339])
Res88745 = keras.layers.Reshape((1, 2, 2, 1), name = 'Res88745', )(Max72160)
Con82234 = keras.layers.Conv3DTranspose(4, (1, 1, 2),strides=(1, 1, 1), padding='valid', name = 'Con82234', )(Res88745)
Res728 = keras.layers.Reshape((1, 2, 12), name = 'Res728', )(Con82234)
Glo2720 = keras.layers.GlobalAveragePooling1D(name = 'Glo2720', )(in0Glo2720)
Res11375 = keras.layers.Reshape((2, 1), name = 'Res11375', )(Glo2720)
Res6176 = keras.layers.Reshape((2, 1, 1), name = 'Res6176', )(Res11375)
Cro5480 = keras.layers.Cropping2D(cropping=((1, 0), (0, 0)), name = 'Cro5480', )(Res6176)
Lea65462 = keras.layers.LeakyReLU(alpha=3.645406279045199, name = 'Lea65462', )(Cro5480)
Zer14240 = keras.layers.ZeroPadding2D(padding=((0, 0), (1, 0)), name = 'Zer14240', )(Lea65462)
Con47723 = keras.layers.Concatenate(axis=3, name = 'Con47723', )([Zer14240,in0Con47723])
Add69139 = keras.layers.Add(name = 'Add69139', )([Res728,Con47723])
model = tf.keras.models.Model(inputs=[in0PRe40014,in0Max27145,in0Glo2720,in0Con47723], outputs=Add69139)
w = model.get_layer('PRe40014').get_weights() 
w[0] = np.array([[[[0.1747, 0.4516]], [[0.4661, 0.7705]]]])
model.get_layer('PRe40014').set_weights(w) 
w = model.get_layer('Con82234').get_weights() 
w[0] = np.array([[[[[0.8719], [0.847], [0.8698], [0.5567]], [[0.1205], [0.1683], [0.2507], [0.3705]]]]])
w[1] = np.array([0, 0, 0, 0])
model.get_layer('Con82234').set_weights(w) 
in0PRe40014 = tf.constant([[[[[0.625, 0.3201]], [[0.918, 0.672]]]]])
in0Max27145 = tf.constant([[[[1.1477, 1.6091]]]])
in0Glo2720 = tf.constant([[[1.265, 1.1941]]])
in0Con47723 = tf.constant([[[[0.5001, 0.0454, 0.5769, 0.8858, 0.2709, 0.533, 0.3385, 0.3367, 0.0384, 0.1223, 0.0644], [0.8182, 0.6086, 0.2669, 0.1104, 0.6707, 0.1839, 0.1029, 0.075, 0.8955, 0.423, 0.7783]]]])
print (np.array2string(model.predict([in0PRe40014,in0Max27145,in0Glo2720,in0Con47723],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Add69139.png')

LPRe40014 = prelu_layer([[[[[0.625, 0.3201]], [[0.918, 0.672]]]]], [[[[0.1747, 0.4516]], [[0.4661, 0.7705]]]], PRe40014), 
LRes78387 = reshape_layer(PRe40014, [1, 2, 2], Res78387), 
LMax27145 = max_pool2D_layer([[[[1.1477, 1.6091]]]], 1, 1, 2, 1, false, Max27145), 
LZer2339 = zero_padding2D_layer(Max27145, 0, 0, 1, 0, Zer2339), 
LMax72160 = maximum_layer([Res78387,Zer2339], Max72160), 
LRes88745 = reshape_layer(Max72160, [1, 2, 2, 1], Res88745), 
LCon82234 = conv3D_transpose_layer(Res88745, 1, 1, 2,[[[[[0.8719], [0.847], [0.8698], [0.5567]], [[0.1205], [0.1683], [0.2507], [0.3705]]]]],[0, 0, 0, 0], 1, 1, 1, false, Con82234), 
LRes728 = reshape_layer(Con82234, [1, 2, 12], Res728), 
LGlo2720 = global_average_pooling1D_layer([[[1.265, 1.1941]]], Glo2720), 
LRes11375 = reshape_layer(Glo2720, [2, 1], Res11375), 
LRes6176 = reshape_layer(Res11375, [2, 1, 1], Res6176), 
LCro5480 = cropping2D_layer(Res6176, 1, 0, 0, 0, Cro5480), 
LLea65462 = leaky_relu_layer(Cro5480, 3.645406279045199, Lea65462), 
LZer14240 = zero_padding2D_layer(Lea65462, 0, 0, 1, 0, Zer14240), 
LCon47723 = concatenate_layer([Zer14240,[[[[0.5001, 0.0454, 0.5769, 0.8858, 0.2709, 0.533, 0.3385, 0.3367, 0.0384, 0.1223, 0.0644], [0.8182, 0.6086, 0.2669, 0.1104, 0.6707, 0.1839, 0.1029, 0.075, 0.8955, 0.423, 0.7783]]]]], 3, Con47723), 
LAdd69139 = add_layer([Res728,Con47723], Add69139), 
exec_layers([LPRe40014,LRes78387,LMax27145,LZer2339,LMax72160,LRes88745,LCon82234,LRes728,LGlo2720,LRes11375,LRes6176,LCro5480,LLea65462,LZer14240,LCon47723,LAdd69139],["PRe40014","Res78387","Max27145","Zer2339","Max72160","Res88745","Con82234","Res728","Glo2720","Res11375","Res6176","Cro5480","Lea65462","Zer14240","Con47723","Add69139"],Add69139,"Add69139")

Actual (Unparsed): [[[[0.5449375, 1.0294750, 0.5890250, 0.9248375, 1.2402077, 0.6472122, 0.9681105, 0.7482622, 0.3752720, 0.0922728, 0.2025491, 0.1829971], [2.1947796, 1.7903019, 1.6068694, 0.9058246, 1.6516721, 2.2267656, 1.8712235, 1.4239088, 0.2688966, 1.1663115, 0.8264014, 1.3744715]]]]

Expected (Unparsed): [[[[0.5449375,1.029475,0.589025,0.9248375,1.24020769,0.6472122,0.96811048,0.7482621700000001,0.37527204999999997,0.09227283,0.20254907,0.18299705],[2.19477963,1.7903019,1.60686946,0.9058245899999999,1.65167214,2.2267656099999997,1.8712235699999997,1.4239088199999999,0.26889655,1.16631153,0.8264013699999999,1.37447155]]]]

Actual:   [[[[0.545, 1.0295, 0.5891, 0.9249, 1.2403, 0.6473, 0.9682, 0.7483, 0.3753, 0.0923, 0.2026, 0.183], [2.1948, 1.7904, 1.6069, 0.9059, 1.6517, 2.2268, 1.8713, 1.424, 0.2689, 1.1664, 0.8265, 1.3745]]]]

Expected: [[[[0.545, 1.0295, 0.5891, 0.9249, 1.2403, 0.6473, 0.9682, 0.7483, 0.3753, 0.0923, 0.2026, 0.183], [2.1948, 1.7904, 1.6069, 0.9059, 1.6517, 2.2268, 1.8713, 1.424, 0.2689, 1.1664, 0.8265, 1.3745]]]]