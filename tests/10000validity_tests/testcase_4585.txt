import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Glo20660 = tf.keras.layers.Input(shape=([1, 2]))
in0Con25669 = tf.keras.layers.Input(shape=([2, 1]))
in0Thr15649 = tf.keras.layers.Input(shape=([1, 2]))
in0Ave74796 = tf.keras.layers.Input(shape=([2, 2]))
in1Ave74796 = tf.keras.layers.Input(shape=([2, 2]))
in0Dot97388 = tf.keras.layers.Input(shape=([2, 2]))
in1Dot97388 = tf.keras.layers.Input(shape=([2, 2]))

Glo20660 = keras.layers.GlobalMaxPool1D(name = 'Glo20660', )(in0Glo20660)
Res26209 = keras.layers.Reshape((2, 1), name = 'Res26209', )(Glo20660)
Con25669 = keras.layers.Concatenate(axis=2, name = 'Con25669', )([Res26209,in0Con25669])
Thr15649 = keras.layers.ThresholdedReLU(theta=9.566279620319552, name = 'Thr15649', input_shape=(1, 2))(in0Thr15649)
Zer66572 = keras.layers.ZeroPadding1D(padding=((1, 0)), name = 'Zer66572', )(Thr15649)
Ave74796 = keras.layers.Average(name = 'Ave74796', )([in0Ave74796,in1Ave74796])
Lea48532 = keras.layers.LeakyReLU(alpha=8.569897866454998, name = 'Lea48532', )(Ave74796)
Min41624 = keras.layers.Minimum(name = 'Min41624', )([Zer66572,Lea48532])
Dot97388 = keras.layers.Dot(axes=(1, 1), name = 'Dot97388', )([in0Dot97388,in1Dot97388])
Dot61442 = keras.layers.Dot(axes=(1, 1), name = 'Dot61442', )([Min41624,Dot97388])
Mul57282 = keras.layers.Multiply(name = 'Mul57282', )([Con25669,Dot61442])
model = tf.keras.models.Model(inputs=[in0Glo20660,in0Con25669,in0Thr15649,in0Ave74796,in1Ave74796,in0Dot97388,in1Dot97388], outputs=Mul57282)
in0Glo20660 = tf.constant([[[1.6809, 1.9527]]])
in0Con25669 = tf.constant([[[0.8276], [0.2469]]])
in0Thr15649 = tf.constant([[[0.0564, 0.2661]]])
in0Ave74796 = tf.constant([[[0.4401, 0.8006], [0.7689, 0.3283]]])
in1Ave74796 = tf.constant([[[0.6598, 0.064], [0.7029, 0.0538]]])
in0Dot97388 = tf.constant([[[0.3026, 0.849], [0.0248, 0.2488]]])
in1Dot97388 = tf.constant([[[0.1695, 0.8176], [0.8729, 0.0595]]])
print (np.array2string(model.predict([in0Glo20660,in0Con25669,in0Thr15649,in0Ave74796,in1Ave74796,in0Dot97388,in1Dot97388],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Mul57282.png')

LGlo20660 = global_max_pool1D_layer([[[1.6809, 1.9527]]], Glo20660), 
LRes26209 = reshape_layer(Glo20660, [2, 1], Res26209), 
LCon25669 = concatenate_layer([Res26209,[[[0.8276], [0.2469]]]], 2, Con25669), 
LThr15649 = thresholded_relu_layer([[[0.0564, 0.2661]]], 9.566279620319552, Thr15649), 
LZer66572 = zero_padding1D_layer(Thr15649, 1, 0, Zer66572), 
LAve74796 = average_layer([[[[0.4401, 0.8006], [0.7689, 0.3283]]], [[[0.6598, 0.064], [0.7029, 0.0538]]]], Ave74796), 
LLea48532 = leaky_relu_layer(Ave74796, 8.569897866454998, Lea48532), 
LMin41624 = minimum_layer([Zer66572,Lea48532], Min41624), 
LDot97388 = dot_layer([[[0.3026, 0.849], [0.0248, 0.2488]]], [[[0.1695, 0.8176], [0.8729, 0.0595]]], 1, 1, Dot97388), 
LDot61442 = dot_layer(Min41624,Dot97388, 1, 1, Dot61442), 
LMul57282 = multiply_layer([Con25669,Dot61442], Mul57282), 
exec_layers([LGlo20660,LRes26209,LCon25669,LThr15649,LZer66572,LAve74796,LLea48532,LMin41624,LDot97388,LDot61442,LMul57282],["Glo20660","Res26209","Con25669","Thr15649","Zer66572","Ave74796","Lea48532","Min41624","Dot97388","Dot61442","Mul57282"],Mul57282,"Mul57282")

Actual (Unparsed): [[[0.0000000, 0.0000000], [0.0000000, 0.0000000]]]

Expected (Unparsed): [[[0.0,0.0],[0.0,0.0]]]

Actual:   [[[0, 0], [0, 0]]]

Expected: [[[0, 0], [0, 0]]]