import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Ave90049 = tf.keras.layers.Input(shape=([2, 1, 1]))
in1Ave90049 = tf.keras.layers.Input(shape=([2, 1, 1]))

Ave90049 = keras.layers.Average(name = 'Ave90049', )([in0Ave90049,in1Ave90049])
Con6486 = keras.layers.Conv2D(3, (2, 1),strides=(1, 1), padding='valid', dilation_rate=(1, 1), name = 'Con6486', )(Ave90049)
Res95096 = keras.layers.Reshape((1, 1, 3, 1), name = 'Res95096', )(Con6486)
Glo32493 = keras.layers.GlobalAveragePooling3D(name = 'Glo32493', )(Res95096)
model = tf.keras.models.Model(inputs=[in0Ave90049,in1Ave90049], outputs=Glo32493)
w = model.get_layer('Con6486').get_weights() 
w[0] = np.array([[[[0.4599, 0.6288, 0.3556]]], [[[0.3167, 0.7669, 0.1412]]]])
w[1] = np.array([0, 0, 0])
model.get_layer('Con6486').set_weights(w) 
in0Ave90049 = tf.constant([[[[0.3409]], [[0.4457]]]])
in1Ave90049 = tf.constant([[[[0.1548]], [[0.3059]]]])
print (np.array2string(model.predict([in0Ave90049,in1Ave90049],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Glo32493.png')

LAve90049 = average_layer([[[[[0.3409]], [[0.4457]]]], [[[[0.1548]], [[0.3059]]]]], Ave90049), 
LCon6486 = conv2D_layer(Ave90049, 2, 1,[[[[0.4599, 0.6288, 0.3556]]], [[[0.3167, 0.7669, 0.1412]]]],[0, 0, 0], 1, 1, false, 1, 1, Con6486), 
LRes95096 = reshape_layer(Con6486, [1, 1, 3, 1], Res95096), 
LGlo32493 = global_average_pooling3D_layer(Res95096, Glo32493), 
exec_layers([LAve90049,LCon6486,LRes95096,LGlo32493],["Ave90049","Con6486","Res95096","Glo32493"],Glo32493,"Glo32493")

Actual (Unparsed): [[0.2727499]]

Expected (Unparsed): [[0.272749865]]

Actual:   [[0.2728]]

Expected: [[0.2728]]