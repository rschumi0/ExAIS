import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Lea77770 = tf.keras.layers.Input(shape=([2, 2]))
in0Sub65273 = tf.keras.layers.Input(shape=([2, 2]))
in1Sub65273 = tf.keras.layers.Input(shape=([2, 2]))

Lea77770 = keras.layers.LeakyReLU(alpha=4.26511305814355, name = 'Lea77770', input_shape=(2, 2))(in0Lea77770)
Sub65273 = keras.layers.Subtract(name = 'Sub65273', )([in0Sub65273,in1Sub65273])
Ave1237 = keras.layers.Average(name = 'Ave1237', )([Lea77770,Sub65273])
Res45341 = keras.layers.Reshape((2, 2, 1), name = 'Res45341', )(Ave1237)
Res90902 = keras.layers.Reshape((2, 2, 1, 1), name = 'Res90902', )(Res45341)
Up_9185 = keras.layers.UpSampling3D(size=(2, 1, 1), name = 'Up_9185', )(Res90902)
model = tf.keras.models.Model(inputs=[in0Lea77770,in0Sub65273,in1Sub65273], outputs=Up_9185)
in0Lea77770 = tf.constant([[[0.5941, 0.0584], [0.4073, 0.6121]]])
in0Sub65273 = tf.constant([[[0.9792, 0.3585], [0.6198, 0.5914]]])
in1Sub65273 = tf.constant([[[0.3079, 0.8116], [0.3976, 0.8748]]])
print (np.array2string(model.predict([in0Lea77770,in0Sub65273,in1Sub65273],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Up_9185.png')

LLea77770 = leaky_relu_layer([[[0.5941, 0.0584], [0.4073, 0.6121]]], 4.26511305814355, Lea77770), 
LSub65273 = subtract_layer([[[0.9792, 0.3585], [0.6198, 0.5914]]], [[[0.3079, 0.8116], [0.3976, 0.8748]]], Sub65273), 
LAve1237 = average_layer([Lea77770,Sub65273], Ave1237), 
LRes45341 = reshape_layer(Ave1237, [2, 2, 1], Res45341), 
LRes90902 = reshape_layer(Res45341, [2, 2, 1, 1], Res90902), 
LUp_9185 = up_sampling3D_layer(Res90902, 2, 1, 1, Up_9185), 
exec_layers([LLea77770,LSub65273,LAve1237,LRes45341,LRes90902,LUp_9185],["Lea77770","Sub65273","Ave1237","Res45341","Res90902","Up_9185"],Up_9185,"Up_9185")

Actual (Unparsed): [[[[[0.6327000]], [[-0.1973500]]], [[[0.6327000]], [[-0.1973500]]], [[[0.3147500]], [[0.1643500]]], [[[0.3147500]], [[0.1643500]]]]]

Expected (Unparsed): [[[[[0.6327]],[[-0.19735]]],[[[0.6327]],[[-0.19735]]],[[[0.31475]],[[0.16435]]],[[[0.31475]],[[0.16435]]]]]

Actual:   [[[[[0.6327]], [[-0.1973]]], [[[0.6327]], [[-0.1973]]], [[[0.3148]], [[0.1644]]], [[[0.3148]], [[0.1644]]]]]

Expected: [[[[[0.6327]], [[-0.1973]]], [[[0.6327]], [[-0.1973]]], [[[0.3148]], [[0.1644]]], [[[0.3148]], [[0.1644]]]]]