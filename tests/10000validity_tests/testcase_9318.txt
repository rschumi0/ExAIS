import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Sub41845 = tf.keras.layers.Input(shape=([3, 2]))
in1Sub41845 = tf.keras.layers.Input(shape=([3, 2]))

Sub41845 = keras.layers.Subtract(name = 'Sub41845', )([in0Sub41845,in1Sub41845])
Lay7098 = keras.layers.LayerNormalization(axis=1, epsilon=2.8446448195427463, name = 'Lay7098', )(Sub41845)
Lea33473 = keras.layers.LeakyReLU(alpha=2.6477216222810025, name = 'Lea33473', )(Lay7098)
model = tf.keras.models.Model(inputs=[in0Sub41845,in1Sub41845], outputs=Lea33473)
in0Sub41845 = tf.constant([[[0.9894, 0.5619], [0.6201, 0.8614], [0.4781, 0.1117]]])
in1Sub41845 = tf.constant([[[0.3656, 0.2079], [0.3389, 0.1873], [0.418, 0.6328]]])
print (np.array2string(model.predict([in0Sub41845,in1Sub41845],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Lea33473.png')

LSub41845 = subtract_layer([[[0.9894, 0.5619], [0.6201, 0.8614], [0.4781, 0.1117]]], [[[0.3656, 0.2079], [0.3389, 0.1873], [0.418, 0.6328]]], Sub41845), 
LLay7098 = layer_normalization_layer(Sub41845, 1, 2.8446448195427463, Lay7098), 
LLea33473 = leaky_relu_layer(Lay7098, 2.6477216222810025, Lea33473), 
exec_layers([LSub41845,LLay7098,LLea33473],["Sub41845","Lay7098","Lea33473"],Lea33473,"Lea33473")

Actual (Unparsed): [[[0.1774474, 0.1050756], [-0.0629863, 0.2868849], [-0.4068451, -1.0378023]]]

Expected (Unparsed): [[[0.17744743449564743,0.1050756313478251],[-0.06298633588170442,0.2868848723988458],[-0.4068450732507131,-1.0378023008502146]]]

Actual:   [[[0.1775, 0.1051], [-0.0629, 0.2869], [-0.4068, -1.0378]]]

Expected: [[[0.1775, 0.1051], [-0.0629, 0.2869], [-0.4068, -1.0378]]]