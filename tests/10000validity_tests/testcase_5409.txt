import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Loc8736 = tf.keras.layers.Input(shape=([1, 2, 1]))
in0Con8976 = tf.keras.layers.Input(shape=([1, 1, 2]))
in0Con53283 = tf.keras.layers.Input(shape=([5, 1, 1]))
in0Con48699 = tf.keras.layers.Input(shape=([5, 5, 3, 1]))
in0Min54446 = tf.keras.layers.Input(shape=([2, 1, 1, 2]))
in1Min54446 = tf.keras.layers.Input(shape=([2, 1, 1, 2]))

Loc8736 = keras.layers.LocallyConnected2D(3, (1, 2),strides=(1, 1), name = 'Loc8736', )(in0Loc8736)
Zer2165 = keras.layers.ZeroPadding2D(padding=((4, 0), (0, 0)), name = 'Zer2165', )(Loc8736)
Con8976 = keras.layers.Conv2DTranspose(2, (1, 1),strides=(5, 1), padding='same', name = 'Con8976', )(in0Con8976)
Con53283 = keras.layers.Concatenate(axis=3, name = 'Con53283', )([Con8976,in0Con53283])
Max18307 = keras.layers.Maximum(name = 'Max18307', )([Zer2165,Con53283])
Res87132 = keras.layers.Reshape((5, 1, 3, 1), name = 'Res87132', )(Max18307)
Zer98249 = keras.layers.ZeroPadding3D(padding=((0, 0), (4, 0), (0, 0)), name = 'Zer98249', )(Res87132)
Con48699 = keras.layers.Concatenate(axis=4, name = 'Con48699', )([Zer98249,in0Con48699])
Min54446 = keras.layers.Minimum(name = 'Min54446', )([in0Min54446,in1Min54446])
Lay65820 = keras.layers.LayerNormalization(axis=1, epsilon=2.324729740943063, name = 'Lay65820', )(Min54446)
Zer38634 = keras.layers.ZeroPadding3D(padding=((1, 1), (1, 1), (1, 1)), name = 'Zer38634', )(Lay65820)
Zer45989 = keras.layers.ZeroPadding3D(padding=((1, 0), (2, 0), (0, 0)), name = 'Zer45989', )(Zer38634)
Mul41722 = keras.layers.Multiply(name = 'Mul41722', )([Con48699,Zer45989])
model = tf.keras.models.Model(inputs=[in0Loc8736,in0Con8976,in0Con53283,in0Con48699,in0Min54446,in1Min54446], outputs=Mul41722)
w = model.get_layer('Loc8736').get_weights() 
w[0] = np.array([[[0.4956, 0.7858, 0.823], [0.8778, 0.7868, 0.2327]]])
w[1] = np.array([[[0, 0, 0]]])
model.get_layer('Loc8736').set_weights(w) 
w = model.get_layer('Con8976').get_weights() 
w[0] = np.array([[[[0.9013, 0.8262], [0.3444, 0.4131]]]])
w[1] = np.array([0, 0])
model.get_layer('Con8976').set_weights(w) 
in0Loc8736 = tf.constant([[[[0.8846], [0.0509]]]])
in0Con8976 = tf.constant([[[[0.7364, 0.8077]]]])
in0Con53283 = tf.constant([[[[0.1456]], [[0.9257]], [[0.4765]], [[0.2742]], [[0.341]]]])
in0Con48699 = tf.constant([[[[[0.3557], [0.6225], [0.076]], [[0.9354], [0.0703], [0.9854]], [[0.3368], [0.7447], [0.7214]], [[0.7216], [0.8849], [0.7585]], [[0.3217], [0.3912], [0.5098]]], [[[0.1896], [0.8408], [0.6826]], [[0.1361], [0.2139], [0.3083]], [[0.7651], [0.6276], [0.479]], [[0.5098], [0.3638], [0.2173]], [[0.6739], [0.1706], [0.4405]]], [[[0.0741], [0.9477], [0.9824]], [[0.9614], [0.0566], [0.7582]], [[0.6918], [0.4733], [0.1429]], [[0.6829], [0.739], [0.1191]], [[0.3756], [0.8313], [0.613]]], [[[0.2782], [0.418], [0.7576]], [[0.1731], [0.2369], [0.9746]], [[0.1966], [0.6728], [0.1628]], [[0.3995], [0.5153], [0.1224]], [[0.1881], [0.7895], [0.508]]], [[[0.9233], [0.5904], [0.7373]], [[0.0501], [0.4194], [0.8991]], [[0.7071], [0.1665], [0.1221]], [[0.2548], [0.6881], [0.2758]], [[0.8877], [0.5013], [0.3781]]]]])
in0Min54446 = tf.constant([[[[[0.7935, 0.3496]]], [[[0.9791, 0.2353]]]]])
in1Min54446 = tf.constant([[[[[0.7979, 0.151]]], [[[0.0837, 0.426]]]]])
print (np.array2string(model.predict([in0Loc8736,in0Con8976,in0Con53283,in0Con48699,in0Min54446,in1Min54446],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Mul41722.png')

LLoc8736 = locally_connected2D_layer([[[[0.8846], [0.0509]]]], 1, 2,[[[0.4956, 0.7858, 0.823], [0.8778, 0.7868, 0.2327]]],[[[0, 0, 0]]], 1, 1, Loc8736), 
LZer2165 = zero_padding2D_layer(Loc8736, 4, 0, 0, 0, Zer2165), 
LCon8976 = conv2D_transpose_layer([[[[0.7364, 0.8077]]]], 1, 1,[[[[0.9013, 0.8262], [0.3444, 0.4131]]]],[0, 0], 5, 1, true, Con8976), 
LCon53283 = concatenate_layer([Con8976,[[[[0.1456]], [[0.9257]], [[0.4765]], [[0.2742]], [[0.341]]]]], 3, Con53283), 
LMax18307 = maximum_layer([Zer2165,Con53283], Max18307), 
LRes87132 = reshape_layer(Max18307, [5, 1, 3, 1], Res87132), 
LZer98249 = zero_padding3D_layer(Res87132, 0, 0, 4, 0, 0, 0, Zer98249), 
LCon48699 = concatenate_layer([Zer98249,[[[[[0.3557], [0.6225], [0.076]], [[0.9354], [0.0703], [0.9854]], [[0.3368], [0.7447], [0.7214]], [[0.7216], [0.8849], [0.7585]], [[0.3217], [0.3912], [0.5098]]], [[[0.1896], [0.8408], [0.6826]], [[0.1361], [0.2139], [0.3083]], [[0.7651], [0.6276], [0.479]], [[0.5098], [0.3638], [0.2173]], [[0.6739], [0.1706], [0.4405]]], [[[0.0741], [0.9477], [0.9824]], [[0.9614], [0.0566], [0.7582]], [[0.6918], [0.4733], [0.1429]], [[0.6829], [0.739], [0.1191]], [[0.3756], [0.8313], [0.613]]], [[[0.2782], [0.418], [0.7576]], [[0.1731], [0.2369], [0.9746]], [[0.1966], [0.6728], [0.1628]], [[0.3995], [0.5153], [0.1224]], [[0.1881], [0.7895], [0.508]]], [[[0.9233], [0.5904], [0.7373]], [[0.0501], [0.4194], [0.8991]], [[0.7071], [0.1665], [0.1221]], [[0.2548], [0.6881], [0.2758]], [[0.8877], [0.5013], [0.3781]]]]]], 4, Con48699), 
LMin54446 = minimum_layer([[[[[[0.7935, 0.3496]]], [[[0.9791, 0.2353]]]]], [[[[[0.7979, 0.151]]], [[[0.0837, 0.426]]]]]], Min54446), 
LLay65820 = layer_normalization_layer(Min54446, 1, 2.324729740943063, Lay65820), 
LZer38634 = zero_padding3D_layer(Lay65820, 1, 1, 1, 1, 1, 1, Zer38634), 
LZer45989 = zero_padding3D_layer(Zer38634, 1, 0, 2, 0, 0, 0, Zer45989), 
LMul41722 = multiply_layer([Con48699,Zer45989], Mul41722), 
exec_layers([LLoc8736,LZer2165,LCon8976,LCon53283,LMax18307,LRes87132,LZer98249,LCon48699,LMin54446,LLay65820,LZer38634,LZer45989,LMul41722],["Loc8736","Zer2165","Con8976","Con53283","Max18307","Res87132","Zer98249","Con48699","Min54446","Lay65820","Zer38634","Zer45989","Mul41722"],Mul41722,"Mul41722")

Actual (Unparsed): [[[[[0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000]], [[0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000]], [[0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000]], [[0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000]], [[0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000]]], [[[0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000]], [[0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000]], [[0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000]], [[0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000]], [[0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000]]], [[[0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000]], [[0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000]], [[0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000]], [[0.0000000, 0.0000000], [0.0000000, -0.0204216], [0.0000000, 0.0000000]], [[0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000]]], [[[0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000]], [[0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000]], [[0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000]], [[0.0000000, 0.0000000], [-0.0000000, 0.0142399], [0.0000000, 0.0000000]], [[0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000]]], [[[0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000]], [[0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000]], [[0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000]], [[0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000]], [[0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000]]]]]

Expected (Unparsed): [[[[[0,0.0],[0,0.0],[0,0.0]],[[0,0.0],[0,0.0],[0,0.0]],[[0,0.0],[0,0.0],[0,0.0]],[[0,0.0],[0,0.0],[0,0.0]],[[0.0,0.0],[0.0,0.0],[0.0,0.0]]],[[[0,0.0],[0,0.0],[0,0.0]],[[0,0.0],[0,0.0],[0,0.0]],[[0,0.0],[0,0.0],[0,0.0]],[[0,0.0],[0,0.0],[0,0.0]],[[0,0.0],[0,0.0],[0.0,0.0]]],[[[0,0.0],[0,0.0],[0,0.0]],[[0,0.0],[0,0.0],[0,0.0]],[[0,0.0],[0,0.0],[0,0.0]],[[0,0.0],[0.0,-0.02042160609468733],[0,0.0]],[[0,0.0],[0,0.0],[0.0,0.0]]],[[[0,0.0],[0,0.0],[0,0.0]],[[0,0.0],[0,0.0],[0,0.0]],[[0,0.0],[0,0.0],[0,0.0]],[[0,0.0],[-0.0,0.014239856049516084],[0,0.0]],[[0,0.0],[0,0.0],[0.0,0.0]]],[[[0,0.0],[0,0.0],[0,0.0]],[[0,0.0],[0,0.0],[0,0.0]],[[0,0.0],[0,0.0],[0,0.0]],[[0,0.0],[0,0.0],[0,0.0]],[[0.0,0.0],[0.0,0.0],[0.0,0.0]]]]]

Actual:   [[[[[0, 0], [0, 0], [0, 0]], [[0, 0], [0, 0], [0, 0]], [[0, 0], [0, 0], [0, 0]], [[0, 0], [0, 0], [0, 0]], [[0, 0], [0, 0], [0, 0]]], [[[0, 0], [0, 0], [0, 0]], [[0, 0], [0, 0], [0, 0]], [[0, 0], [0, 0], [0, 0]], [[0, 0], [0, 0], [0, 0]], [[0, 0], [0, 0], [0, 0]]], [[[0, 0], [0, 0], [0, 0]], [[0, 0], [0, 0], [0, 0]], [[0, 0], [0, 0], [0, 0]], [[0, 0], [0, -0.0204], [0, 0]], [[0, 0], [0, 0], [0, 0]]], [[[0, 0], [0, 0], [0, 0]], [[0, 0], [0, 0], [0, 0]], [[0, 0], [0, 0], [0, 0]], [[0, 0], [-0, 0.0143], [0, 0]], [[0, 0], [0, 0], [0, 0]]], [[[0, 0], [0, 0], [0, 0]], [[0, 0], [0, 0], [0, 0]], [[0, 0], [0, 0], [0, 0]], [[0, 0], [0, 0], [0, 0]], [[0, 0], [0, 0], [0, 0]]]]]

Expected: [[[[[0, 0], [0, 0], [0, 0]], [[0, 0], [0, 0], [0, 0]], [[0, 0], [0, 0], [0, 0]], [[0, 0], [0, 0], [0, 0]], [[0, 0], [0, 0], [0, 0]]], [[[0, 0], [0, 0], [0, 0]], [[0, 0], [0, 0], [0, 0]], [[0, 0], [0, 0], [0, 0]], [[0, 0], [0, 0], [0, 0]], [[0, 0], [0, 0], [0, 0]]], [[[0, 0], [0, 0], [0, 0]], [[0, 0], [0, 0], [0, 0]], [[0, 0], [0, 0], [0, 0]], [[0, 0], [0, -0.0204], [0, 0]], [[0, 0], [0, 0], [0, 0]]], [[[0, 0], [0, 0], [0, 0]], [[0, 0], [0, 0], [0, 0]], [[0, 0], [0, 0], [0, 0]], [[0, 0], [-0, 0.0143], [0, 0]], [[0, 0], [0, 0], [0, 0]]], [[[0, 0], [0, 0], [0, 0]], [[0, 0], [0, 0], [0, 0]], [[0, 0], [0, 0], [0, 0]], [[0, 0], [0, 0], [0, 0]], [[0, 0], [0, 0], [0, 0]]]]]