import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Con77207 = tf.keras.layers.Input(shape=([2, 2, 1]))

Con77207 = keras.layers.Conv2D(4, (1, 2),strides=(1, 1), padding='same', dilation_rate=(1, 1), name = 'Con77207', )(in0Con77207)
Lea41899 = keras.layers.LeakyReLU(alpha=2.8890920986850213, name = 'Lea41899', )(Con77207)
Res48844 = keras.layers.Reshape((2, 8), name = 'Res48844', )(Lea41899)
Sim1768 = keras.layers.SimpleRNN(1,name = 'Sim1768', )(Res48844)
model = tf.keras.models.Model(inputs=[in0Con77207], outputs=Sim1768)
w = model.get_layer('Con77207').get_weights() 
w[0] = np.array([[[[0.6755, 0.8758, 0.5296, 0.4666]], [[0.7756, 0.9117, 0.4824, 0.1204]]]])
w[1] = np.array([0, 0, 0, 0])
model.get_layer('Con77207').set_weights(w) 
w = model.get_layer('Sim1768').get_weights() 
w[0] = np.array([[7], [6], [7], [10], [5], [10], [3], [9]])
w[1] = np.array([[9]])
w[2] = np.array([3])
model.get_layer('Sim1768').set_weights(w) 
in0Con77207 = tf.constant([[[[0.8328], [0.4115]], [[0.2393], [0.9983]]]])
print (np.array2string(model.predict([in0Con77207],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Sim1768.png')

LCon77207 = conv2D_layer([[[[0.8328], [0.4115]], [[0.2393], [0.9983]]]], 1, 2,[[[[0.6755, 0.8758, 0.5296, 0.4666]], [[0.7756, 0.9117, 0.4824, 0.1204]]]],[0, 0, 0, 0], 1, 1, true, 1, 1, Con77207), 
LLea41899 = leaky_relu_layer(Con77207, 2.8890920986850213, Lea41899), 
LRes48844 = reshape_layer(Lea41899, [2, 8], Res48844), 
LSim1768 = simple_rnn_layer(Res48844,[[7], [6], [7], [10], [5], [10], [3], [9]],[[9]],[3], Sim1768), 
exec_layers([LCon77207,LLea41899,LRes48844,LSim1768],["Con77207","Lea41899","Res48844","Sim1768"],Sim1768,"Sim1768")

Actual (Unparsed): [[1.0000000]]

Expected (Unparsed): [[1.0]]

Actual:   [[1]]

Expected: [[1]]