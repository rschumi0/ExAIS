import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Ave66137 = tf.keras.layers.Input(shape=([2, 1, 1]))
in1Ave66137 = tf.keras.layers.Input(shape=([2, 1, 1]))

Ave66137 = keras.layers.Average(name = 'Ave66137', )([in0Ave66137,in1Ave66137])
Zer18829 = keras.layers.ZeroPadding2D(padding=((1, 1), (1, 1)), name = 'Zer18829', )(Ave66137)
Max98385 = keras.layers.MaxPool2D(pool_size=(2, 2), name = 'Max98385', )(Zer18829)
Res75178 = keras.layers.Reshape((2, 1), name = 'Res75178', )(Max98385)
Loc37014 = keras.layers.LocallyConnected1D(2, (1),strides=(8), name = 'Loc37014', )(Res75178)
model = tf.keras.models.Model(inputs=[in0Ave66137,in1Ave66137], outputs=Loc37014)
w = model.get_layer('Loc37014').get_weights() 
w[0] = np.array([[[0.3108, 0.8861]]])
w[1] = np.array([[0, 0]])
model.get_layer('Loc37014').set_weights(w) 
in0Ave66137 = tf.constant([[[[0.3275]], [[0.1861]]]])
in1Ave66137 = tf.constant([[[[0.9149]], [[0.031]]]])
print (np.array2string(model.predict([in0Ave66137,in1Ave66137],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Loc37014.png')

LAve66137 = average_layer([[[[[0.3275]], [[0.1861]]]], [[[[0.9149]], [[0.031]]]]], Ave66137), 
LZer18829 = zero_padding2D_layer(Ave66137, 1, 1, 1, 1, Zer18829), 
LMax98385 = max_pool2D_layer(Zer18829, 2, 2, Max98385), 
LRes75178 = reshape_layer(Max98385, [2, 1], Res75178), 
LLoc37014 = locally_connected1D_layer(Res75178, 1,[[[0.3108, 0.8861]]],[[0, 0]], 8, Loc37014), 
exec_layers([LAve66137,LZer18829,LMax98385,LRes75178,LLoc37014],["Ave66137","Zer18829","Max98385","Res75178","Loc37014"],Loc37014,"Loc37014")

Actual (Unparsed): [[[0.1930690, 0.5504453]]]

Expected (Unparsed): [[[0.19306896,0.55044532]]]

Actual:   [[[0.1931, 0.5505]]]

Expected: [[[0.1931, 0.5505]]]