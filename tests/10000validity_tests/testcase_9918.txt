import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Sub14148 = tf.keras.layers.Input(shape=([2, 3, 2]))
in1Sub14148 = tf.keras.layers.Input(shape=([2, 3, 2]))
in0Zer24210 = tf.keras.layers.Input(shape=([2, 3]))
in0Con52003 = tf.keras.layers.Input(shape=([4, 3]))

Sub14148 = keras.layers.Subtract(name = 'Sub14148', )([in0Sub14148,in1Sub14148])
Res58128 = keras.layers.Reshape((2, 6), name = 'Res58128', )(Sub14148)
Zer56326 = keras.layers.ZeroPadding1D(padding=((2, 0)), name = 'Zer56326', )(Res58128)
Zer24210 = keras.layers.ZeroPadding1D(padding=((1, 1)), name = 'Zer24210', )(in0Zer24210)
Per82915 = keras.layers.Permute((1,2), name = 'Per82915',)(Zer24210)
Con52003 = keras.layers.Concatenate(axis=2, name = 'Con52003', )([Per82915,in0Con52003])
Max24336 = keras.layers.Maximum(name = 'Max24336', )([Zer56326,Con52003])
Up_25812 = keras.layers.UpSampling1D(size=(2), name = 'Up_25812', )(Max24336)
model = tf.keras.models.Model(inputs=[in0Sub14148,in1Sub14148,in0Zer24210,in0Con52003], outputs=Up_25812)
in0Sub14148 = tf.constant([[[[0.2159, 0.3263], [0.8084, 0.7139], [0.855, 0.2776]], [[0.5802, 0.2355], [0.8592, 0.1655], [0.4368, 0.0176]]]])
in1Sub14148 = tf.constant([[[[0.9925, 0.0295], [0.3421, 0.7692], [0.2094, 0.5683]], [[0.1199, 0.5262], [0.372, 0.4104], [0.4655, 0.1098]]]])
in0Zer24210 = tf.constant([[[1.2704, 1.5703, 1.9973], [1.2159, 1.296, 1.906]]])
in0Con52003 = tf.constant([[[0.2733, 0.0972, 0.4504], [0.6475, 0.9047, 0.4503], [0.1821, 0.11, 0.7931], [0.9421, 0.7504, 0.343]]])
print (np.array2string(model.predict([in0Sub14148,in1Sub14148,in0Zer24210,in0Con52003],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Up_25812.png')

LSub14148 = subtract_layer([[[[0.2159, 0.3263], [0.8084, 0.7139], [0.855, 0.2776]], [[0.5802, 0.2355], [0.8592, 0.1655], [0.4368, 0.0176]]]], [[[[0.9925, 0.0295], [0.3421, 0.7692], [0.2094, 0.5683]], [[0.1199, 0.5262], [0.372, 0.4104], [0.4655, 0.1098]]]], Sub14148), 
LRes58128 = reshape_layer(Sub14148, [2, 6], Res58128), 
LZer56326 = zero_padding1D_layer(Res58128, 2, 0, Zer56326), 
LZer24210 = zero_padding1D_layer([[[1.2704, 1.5703, 1.9973], [1.2159, 1.296, 1.906]]], 1, 1, Zer24210), 
LPer82915 = permute_layer(Zer24210, 1,2, Per82915), 
LCon52003 = concatenate_layer([Per82915,[[[0.2733, 0.0972, 0.4504], [0.6475, 0.9047, 0.4503], [0.1821, 0.11, 0.7931], [0.9421, 0.7504, 0.343]]]], 2, Con52003), 
LMax24336 = maximum_layer([Zer56326,Con52003], Max24336), 
LUp_25812 = up_sampling1D_layer(Max24336, 2, Up_25812), 
exec_layers([LSub14148,LRes58128,LZer56326,LZer24210,LPer82915,LCon52003,LMax24336,LUp_25812],["Sub14148","Res58128","Zer56326","Zer24210","Per82915","Con52003","Max24336","Up_25812"],Up_25812,"Up_25812")

Actual (Unparsed): [[[0.0000000, 0.0000000, 0.0000000, 0.2733000, 0.0972000, 0.4504000], [0.0000000, 0.0000000, 0.0000000, 0.2733000, 0.0972000, 0.4504000], [1.2704000, 1.5703000, 1.9973000, 0.6475000, 0.9047000, 0.4503000], [1.2704000, 1.5703000, 1.9973000, 0.6475000, 0.9047000, 0.4503000], [1.2158999, 1.2960000, 1.9060000, 0.1821000, 0.6456000, 0.7931000], [1.2158999, 1.2960000, 1.9060000, 0.1821000, 0.6456000, 0.7931000], [0.4603000, 0.0000000, 0.4872000, 0.9421000, 0.7504000, 0.3430000], [0.4603000, 0.0000000, 0.4872000, 0.9421000, 0.7504000, 0.3430000]]]

Expected (Unparsed): [[[0,0,0,0.2733,0.0972,0.4504],[0,0,0,0.2733,0.0972,0.4504],[1.2704,1.5703,1.9973,0.6475,0.9047,0.4503],[1.2704,1.5703,1.9973,0.6475,0.9047,0.4503],[1.2159,1.296,1.906,0.1821,0.6456,0.7931],[1.2159,1.296,1.906,0.1821,0.6456,0.7931],[0.46030000000000004,0,0.48719999999999997,0.9421,0.7504,0.343],[0.46030000000000004,0,0.48719999999999997,0.9421,0.7504,0.343]]]

Actual:   [[[0, 0, 0, 0.2733, 0.0972, 0.4504], [0, 0, 0, 0.2733, 0.0972, 0.4504], [1.2704, 1.5703, 1.9973, 0.6475, 0.9047, 0.4503], [1.2704, 1.5703, 1.9973, 0.6475, 0.9047, 0.4503], [1.2159, 1.296, 1.906, 0.1821, 0.6456, 0.7931], [1.2159, 1.296, 1.906, 0.1821, 0.6456, 0.7931], [0.4603, 0, 0.4872, 0.9421, 0.7504, 0.343], [0.4603, 0, 0.4872, 0.9421, 0.7504, 0.343]]]

Expected: [[[0, 0, 0, 0.2733, 0.0972, 0.4504], [0, 0, 0, 0.2733, 0.0972, 0.4504], [1.2704, 1.5703, 1.9973, 0.6475, 0.9047, 0.4503], [1.2704, 1.5703, 1.9973, 0.6475, 0.9047, 0.4503], [1.2159, 1.296, 1.906, 0.1821, 0.6456, 0.7931], [1.2159, 1.296, 1.906, 0.1821, 0.6456, 0.7931], [0.4604, 0, 0.4872, 0.9421, 0.7504, 0.343], [0.4604, 0, 0.4872, 0.9421, 0.7504, 0.343]]]