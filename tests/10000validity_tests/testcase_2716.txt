import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0PRe87167 = tf.keras.layers.Input(shape=([1, 2, 2]))

PRe87167 = keras.layers.PReLU(name = 'PRe87167', input_shape=(1, 2, 2))(in0PRe87167)
Res55211 = keras.layers.Reshape((1, 2, 2, 1), name = 'Res55211', )(PRe87167)
Con24065 = keras.layers.Conv3D(3, (1, 2, 2),strides=(1, 1, 1), padding='valid', dilation_rate=(1, 1, 1), name = 'Con24065', )(Res55211)
Zer42068 = keras.layers.ZeroPadding3D(padding=((1, 1), (1, 1), (1, 1)), name = 'Zer42068', )(Con24065)
model = tf.keras.models.Model(inputs=[in0PRe87167], outputs=Zer42068)
w = model.get_layer('PRe87167').get_weights() 
w[0] = np.array([[[0.1243, 0.9531], [0.749, 0.3924]]])
model.get_layer('PRe87167').set_weights(w) 
w = model.get_layer('Con24065').get_weights() 
w[0] = np.array([[[[[0.5961, 0.1048, 0.0649]], [[0.34, 0.7944, 0.976]]], [[[0.7203, 0.5999, 0.2457]], [[0.0415, 0.7587, 0.2421]]]]])
w[1] = np.array([0, 0, 0])
model.get_layer('Con24065').set_weights(w) 
in0PRe87167 = tf.constant([[[[0.4489, 0.0362], [0.0521, 0.3788]]]])
print (np.array2string(model.predict([in0PRe87167],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Zer42068.png')

LPRe87167 = prelu_layer([[[[0.4489, 0.0362], [0.0521, 0.3788]]]], [[[0.1243, 0.9531], [0.749, 0.3924]]], PRe87167), 
LRes55211 = reshape_layer(PRe87167, [1, 2, 2, 1], Res55211), 
LCon24065 = conv3D_layer(Res55211, 1, 2, 2,[[[[[0.5961, 0.1048, 0.0649]], [[0.34, 0.7944, 0.976]]], [[[0.7203, 0.5999, 0.2457]], [[0.0415, 0.7587, 0.2421]]]]],[0, 0, 0], 1, 1, 1, false, 1, 1, 1, Con24065), 
LZer42068 = zero_padding3D_layer(Con24065, 1, 1, 1, 1, 1, 1, Zer42068), 
exec_layers([LPRe87167,LRes55211,LCon24065,LZer42068],["PRe87167","Res55211","Con24065","Zer42068"],Zer42068,"Zer42068")

Actual (Unparsed): [[[[[0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000]], [[0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000]], [[0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000]]], [[[0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000]], [[0.0000000, 0.0000000, 0.0000000], [0.3331451, 0.3944524, 0.1689733], [0.0000000, 0.0000000, 0.0000000]], [[0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000]]], [[[0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000]], [[0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000]], [[0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000]]]]]

Expected (Unparsed): [[[[[0,0,0],[0,0,0],[0,0,0]],[[0,0,0],[0,0,0],[0,0,0]],[[0,0,0],[0,0,0],[0,0,0]]],[[[0,0,0],[0,0,0],[0,0,0]],[[0,0,0],[0.33314512,0.39445235000000006,0.16897326000000001],[0,0,0]],[[0,0,0],[0,0,0],[0,0,0]]],[[[0,0,0],[0,0,0],[0,0,0]],[[0,0,0],[0,0,0],[0,0,0]],[[0,0,0],[0,0,0],[0,0,0]]]]]

Actual:   [[[[[0, 0, 0], [0, 0, 0], [0, 0, 0]], [[0, 0, 0], [0, 0, 0], [0, 0, 0]], [[0, 0, 0], [0, 0, 0], [0, 0, 0]]], [[[0, 0, 0], [0, 0, 0], [0, 0, 0]], [[0, 0, 0], [0.3332, 0.3945, 0.169], [0, 0, 0]], [[0, 0, 0], [0, 0, 0], [0, 0, 0]]], [[[0, 0, 0], [0, 0, 0], [0, 0, 0]], [[0, 0, 0], [0, 0, 0], [0, 0, 0]], [[0, 0, 0], [0, 0, 0], [0, 0, 0]]]]]

Expected: [[[[[0, 0, 0], [0, 0, 0], [0, 0, 0]], [[0, 0, 0], [0, 0, 0], [0, 0, 0]], [[0, 0, 0], [0, 0, 0], [0, 0, 0]]], [[[0, 0, 0], [0, 0, 0], [0, 0, 0]], [[0, 0, 0], [0.3332, 0.3945, 0.169], [0, 0, 0]], [[0, 0, 0], [0, 0, 0], [0, 0, 0]]], [[[0, 0, 0], [0, 0, 0], [0, 0, 0]], [[0, 0, 0], [0, 0, 0], [0, 0, 0]], [[0, 0, 0], [0, 0, 0], [0, 0, 0]]]]]