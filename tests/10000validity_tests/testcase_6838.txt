import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Mul40663 = tf.keras.layers.Input(shape=([2, 1, 1]))
in1Mul40663 = tf.keras.layers.Input(shape=([2, 1, 1]))
in0Max7858 = tf.keras.layers.Input(shape=([1, 2, 2]))
in1Max7858 = tf.keras.layers.Input(shape=([1, 2, 2]))
in0Con99513 = tf.keras.layers.Input(shape=([2, 1, 1]))
in0Mul18130 = tf.keras.layers.Input(shape=([1, 1, 2]))
in1Mul18130 = tf.keras.layers.Input(shape=([1, 1, 2]))

Mul40663 = keras.layers.Multiply(name = 'Mul40663', )([in0Mul40663,in1Mul40663])
Thr25280 = keras.layers.ThresholdedReLU(theta=4.3636844964056065, name = 'Thr25280', )(Mul40663)
Res68515 = keras.layers.Reshape((2, 1), name = 'Res68515', )(Thr25280)
Max7858 = keras.layers.Maximum(name = 'Max7858', )([in0Max7858,in1Max7858])
Res63284 = keras.layers.Reshape((1, 2, 2, 1), name = 'Res63284', )(Max7858)
Cro59090 = keras.layers.Cropping3D(cropping=((0, 0), (1, 0), (0, 1)), name = 'Cro59090', )(Res63284)
Res44618 = keras.layers.Reshape((1, 1, 1), name = 'Res44618', )(Cro59090)
Res4954 = keras.layers.Reshape((1, 1), name = 'Res4954', )(Res44618)
Dot66704 = keras.layers.Dot(axes=(2, 1), name = 'Dot66704', )([Res68515,Res4954])
Res81723 = keras.layers.Reshape((2, 1, 1), name = 'Res81723', )(Dot66704)
Con99513 = keras.layers.Concatenate(axis=3, name = 'Con99513', )([Res81723,in0Con99513])
Mul18130 = keras.layers.Multiply(name = 'Mul18130', )([in0Mul18130,in1Mul18130])
Zer93932 = keras.layers.ZeroPadding2D(padding=((1, 0), (0, 0)), name = 'Zer93932', )(Mul18130)
Ave74016 = keras.layers.Average(name = 'Ave74016', )([Con99513,Zer93932])
model = tf.keras.models.Model(inputs=[in0Mul40663,in1Mul40663,in0Max7858,in1Max7858,in0Con99513,in0Mul18130,in1Mul18130], outputs=Ave74016)
in0Mul40663 = tf.constant([[[[0.6518]], [[0.7309]]]])
in1Mul40663 = tf.constant([[[[0.859]], [[0.8212]]]])
in0Max7858 = tf.constant([[[[0.2184, 0.2], [0.5132, 0.9275]]]])
in1Max7858 = tf.constant([[[[0.1332, 0.697], [0.9518, 0.9184]]]])
in0Con99513 = tf.constant([[[[0.0017]], [[0.6352]]]])
in0Mul18130 = tf.constant([[[[0.9862, 0.3276]]]])
in1Mul18130 = tf.constant([[[[0.5692, 0.1129]]]])
print (np.array2string(model.predict([in0Mul40663,in1Mul40663,in0Max7858,in1Max7858,in0Con99513,in0Mul18130,in1Mul18130],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Ave74016.png')

LMul40663 = multiply_layer([[[[[0.6518]], [[0.7309]]]], [[[[0.859]], [[0.8212]]]]], Mul40663), 
LThr25280 = thresholded_relu_layer(Mul40663, 4.3636844964056065, Thr25280), 
LRes68515 = reshape_layer(Thr25280, [2, 1], Res68515), 
LMax7858 = maximum_layer([[[[[0.2184, 0.2], [0.5132, 0.9275]]]], [[[[0.1332, 0.697], [0.9518, 0.9184]]]]], Max7858), 
LRes63284 = reshape_layer(Max7858, [1, 2, 2, 1], Res63284), 
LCro59090 = cropping3D_layer(Res63284, 0, 0, 1, 0, 0, 1, Cro59090), 
LRes44618 = reshape_layer(Cro59090, [1, 1, 1], Res44618), 
LRes4954 = reshape_layer(Res44618, [1, 1], Res4954), 
LDot66704 = dot_layer(Res68515,Res4954, 2, 1, Dot66704), 
LRes81723 = reshape_layer(Dot66704, [2, 1, 1], Res81723), 
LCon99513 = concatenate_layer([Res81723,[[[[0.0017]], [[0.6352]]]]], 3, Con99513), 
LMul18130 = multiply_layer([[[[[0.9862, 0.3276]]]], [[[[0.5692, 0.1129]]]]], Mul18130), 
LZer93932 = zero_padding2D_layer(Mul18130, 1, 0, 0, 0, Zer93932), 
LAve74016 = average_layer([Con99513,Zer93932], Ave74016), 
exec_layers([LMul40663,LThr25280,LRes68515,LMax7858,LRes63284,LCro59090,LRes44618,LRes4954,LDot66704,LRes81723,LCon99513,LMul18130,LZer93932,LAve74016],["Mul40663","Thr25280","Res68515","Max7858","Res63284","Cro59090","Res44618","Res4954","Dot66704","Res81723","Con99513","Mul18130","Zer93932","Ave74016"],Ave74016,"Ave74016")

Actual (Unparsed): [[[[0.0000000, 0.0008500]], [[0.2806725, 0.3360930]]]]

Expected (Unparsed): [[[[0.0,0.00085]],[[0.28067252000000004,0.33609301999999996]]]]

Actual:   [[[[0, 0.0009]], [[0.2807, 0.3361]]]]

Expected: [[[[0, 0.0009]], [[0.2807, 0.3361]]]]