import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Den55306 = tf.keras.layers.Input(shape=([5, 5]))

Den55306 = keras.layers.Dense(3,name = 'Den55306', )(in0Den55306)
Sof3528 = keras.layers.Softmax(axis=1, name = 'Sof3528', )(Den55306)
model = tf.keras.models.Model(inputs=[in0Den55306], outputs=Sof3528)
w = model.get_layer('Den55306').get_weights() 
w[0] = np.array([[0.4851, 0.9092, 0.5966], [0.9495, 0.0451, 0.5591], [0.857, 0.6454, 0.5229], [0.9142, 0.1838, 0.9056], [0.8752, 0.9451, 0.6403]])
w[1] = np.array([0.8677, 0.291, 0.059])
model.get_layer('Den55306').set_weights(w) 
in0Den55306 = tf.constant([[[0.6281, 0.0859, 0.5952, 0.0889, 0.1924], [0.3021, 0.4861, 0.6497, 0.9119, 0.8328], [0.2501, 0.1039, 0.4693, 0.2222, 0.5359], [0.2063, 0.1774, 0.9025, 0.0303, 0.893], [0.0769, 0.5183, 0.6523, 0.4421, 0.083]]])
print (np.array2string(model.predict([in0Den55306],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Sof3528.png')

LDen55306 = dense_layer([[[0.6281, 0.0859, 0.5952, 0.0889, 0.1924], [0.3021, 0.4861, 0.6497, 0.9119, 0.8328], [0.2501, 0.1039, 0.4693, 0.2222, 0.5359], [0.2063, 0.1774, 0.9025, 0.0303, 0.893], [0.0769, 0.5183, 0.6523, 0.4421, 0.083]]], [[0.4851, 0.9092, 0.5966], [0.9495, 0.0451, 0.5591], [0.857, 0.6454, 0.5229], [0.9142, 0.1838, 0.9056], [0.8752, 0.9451, 0.6403]],[0.8677, 0.291, 0.059], Den55306), 
LSof3528 = softmax_layer(Den55306, 1, Sof3528), 
exec_layers([LDen55306,LSof3528],["Den55306","Sof3528"],Sof3528,"Sof3528")

Actual (Unparsed): [[[0.0946356, 0.1719428, 0.1239971], [0.4601039, 0.2872909, 0.4171198], [0.1097664, 0.1595221, 0.1315825], [0.1915688, 0.2751966, 0.1769705], [0.1439252, 0.1060476, 0.1503301]]]

Expected (Unparsed): [[[0.09463561559339748,0.1719427795560081,0.12399710590007333],[0.4601039174145446,0.2872909037890138,0.4171197771044532],[0.10976644171971987,0.15952210061318278,0.13158244927387316],[0.19156880926508127,0.27519656783846996,0.17697052367872498],[0.1439252160072567,0.10604764820332532,0.15033014404287537]]]

Actual:   [[[0.0947, 0.172, 0.124], [0.4602, 0.2873, 0.4172], [0.1098, 0.1596, 0.1316], [0.1916, 0.2752, 0.177], [0.144, 0.1061, 0.1504]]]

Expected: [[[0.0947, 0.172, 0.124], [0.4602, 0.2873, 0.4172], [0.1098, 0.1596, 0.1316], [0.1916, 0.2752, 0.177], [0.144, 0.1061, 0.1504]]]