import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Ave16985 = tf.keras.layers.Input(shape=([2, 1]))
in1Ave16985 = tf.keras.layers.Input(shape=([2, 1]))

Ave16985 = keras.layers.Average(name = 'Ave16985', )([in0Ave16985,in1Ave16985])
Sof81303 = keras.layers.Softmax(axis=1, name = 'Sof81303', )(Ave16985)
model = tf.keras.models.Model(inputs=[in0Ave16985,in1Ave16985], outputs=Sof81303)
in0Ave16985 = tf.constant([[[0.9573], [0.8605]]])
in1Ave16985 = tf.constant([[[0.5896], [0.2382]]])
print (np.array2string(model.predict([in0Ave16985,in1Ave16985],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Sof81303.png')

LAve16985 = average_layer([[[[0.9573], [0.8605]]], [[[0.5896], [0.2382]]]], Ave16985), 
LSof81303 = softmax_layer(Ave16985, 1, Sof81303), 
exec_layers([LAve16985,LSof81303],["Ave16985","Sof81303"],Sof81303,"Sof81303")

Actual (Unparsed): [[[0.5557917], [0.4442083]]]

Expected (Unparsed): [[[0.5557917031589362],[0.4442082968410638]]]

Actual:   [[[0.5558], [0.4443]]]

Expected: [[[0.5558], [0.4443]]]