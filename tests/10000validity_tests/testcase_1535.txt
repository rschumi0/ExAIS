import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Sep38212 = tf.keras.layers.Input(shape=([1, 1]))

Sep38212 = keras.layers.SeparableConv1D(3, (1),strides=(1), padding='same', name = 'Sep38212', )(in0Sep38212)
Res30202 = keras.layers.Reshape((1, 3, 1), name = 'Res30202', )(Sep38212)
Max95358 = keras.layers.MaxPool2D(pool_size=(1, 2), strides=(1, 1), padding='valid', name = 'Max95358', )(Res30202)
Fla70366 = keras.layers.Flatten(name = 'Fla70366', )(Max95358)
ReL2678 = keras.layers.ReLU(max_value=5.926265435027932, negative_slope=3.7639766888056365, threshold=0.5714667813687324, name = 'ReL2678', )(Fla70366)
model = tf.keras.models.Model(inputs=[in0Sep38212], outputs=ReL2678)
w = model.get_layer('Sep38212').get_weights() 
w[0] = np.array([[[0.5809]]])
w[1] = np.array([[[0.3546, 0.483, 0.6648]]])
w[2] = np.array([0, 0, 0])
model.get_layer('Sep38212').set_weights(w) 
in0Sep38212 = tf.constant([[[0.9095]]])
print (np.array2string(model.predict([in0Sep38212],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='ReL2678.png')

LSep38212 = separable_conv1D_layer([[[0.9095]]], 1,[[[[0.5809]]],[[[0.3546, 0.483, 0.6648]]]],[0, 0, 0], 1, true, Sep38212), 
LRes30202 = reshape_layer(Sep38212, [1, 3, 1], Res30202), 
LMax95358 = max_pool2D_layer(Res30202, 1, 2, 1, 1, false, Max95358), 
LFla70366 = flatten_layer(Max95358, Fla70366), 
LReL2678 = relu_layer(Fla70366, 5.926265435027932, 3.7639766888056365, 0.5714667813687324, ReL2678), 
exec_layers([LSep38212,LRes30202,LMax95358,LFla70366,LReL2678],["Sep38212","Res30202","Max95358","Fla70366","ReL2678"],ReL2678,"ReL2678")

Actual (Unparsed): [[-1.1904859, -0.8289555]]

Expected (Unparsed): [[-1.1904859482693726,-0.8289554965246706]]

Actual:   [[-1.1904, -0.8289]]

Expected: [[-1.1904, -0.8289]]