import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Up_37921 = tf.keras.layers.Input(shape=([4, 3]))
in0Con2565 = tf.keras.layers.Input(shape=([8, 3, 3]))
in0Sub61554 = tf.keras.layers.Input(shape=([2]))
in1Sub61554 = tf.keras.layers.Input(shape=([2]))
in0Con54512 = tf.keras.layers.Input(shape=([4, 3, 1]))
in0Sub53988 = tf.keras.layers.Input(shape=([3, 2, 3]))
in1Sub53988 = tf.keras.layers.Input(shape=([3, 2, 3]))

Up_37921 = keras.layers.UpSampling1D(size=(2), name = 'Up_37921', )(in0Up_37921)
Res71856 = keras.layers.Reshape((8, 3, 1), name = 'Res71856', )(Up_37921)
Con2565 = keras.layers.Concatenate(axis=3, name = 'Con2565', )([Res71856,in0Con2565])
Sub61554 = keras.layers.Subtract(name = 'Sub61554', )([in0Sub61554,in1Sub61554])
Res6091 = keras.layers.Reshape((2, 1), name = 'Res6091', )(Sub61554)
Res67886 = keras.layers.Reshape((2, 1, 1), name = 'Res67886', )(Res6091)
Res52804 = keras.layers.Reshape((2, 1, 1, 1), name = 'Res52804', )(Res67886)
Zer37861 = keras.layers.ZeroPadding3D(padding=((1, 1), (1, 1), (1, 1)), name = 'Zer37861', )(Res52804)
Res64326 = keras.layers.Reshape((4, 3, 3), name = 'Res64326', )(Zer37861)
Con54512 = keras.layers.Concatenate(axis=3, name = 'Con54512', )([Res64326,in0Con54512])
Sub53988 = keras.layers.Subtract(name = 'Sub53988', )([in0Sub53988,in1Sub53988])
Sep43858 = keras.layers.SeparableConv2D(4, (2, 2),strides=(3, 3), padding='valid', name = 'Sep43858', )(Sub53988)
Zer37370 = keras.layers.ZeroPadding2D(padding=((3, 0), (2, 0)), name = 'Zer37370', )(Sep43858)
Ave21038 = keras.layers.Average(name = 'Ave21038', )([Con54512,Zer37370])
Zer91289 = keras.layers.ZeroPadding2D(padding=((4, 0), (0, 0)), name = 'Zer91289', )(Ave21038)
Add23771 = keras.layers.Add(name = 'Add23771', )([Con2565,Zer91289])
model = tf.keras.models.Model(inputs=[in0Up_37921,in0Con2565,in0Sub61554,in1Sub61554,in0Con54512,in0Sub53988,in1Sub53988], outputs=Add23771)
w = model.get_layer('Sep43858').get_weights() 
w[0] = np.array([[[[0.8323], [0.3071], [0.799]], [[0.5944], [0.7979], [0.7952]]], [[[0.6515], [0.9076], [0.8977]], [[0.7366], [0.663], [0.9252]]]])
w[1] = np.array([[[[0.7878, 0.552, 0.858, 0.9827], [0.5962, 0.4952, 0.9011, 0.068], [0.5309, 0.4783, 0.0109, 0.9185]]]])
w[2] = np.array([0, 0, 0, 0])
model.get_layer('Sep43858').set_weights(w) 
in0Up_37921 = tf.constant([[[1.3574, 1.1094, 1.6075], [1.3243, 1.3796, 1.5416], [1.7038, 1.0352, 1.2501], [1.8224, 1.9835, 1.4752]]])
in0Con2565 = tf.constant([[[[0.4816, 0.6097, 0.1063], [0.5735, 0.4541, 0.2204], [0.1625, 0.1291, 0.2004]], [[0.4901, 0.7849, 0.7968], [0.0237, 0.9162, 0.1493], [0.4614, 0.3838, 0.7691]], [[0.9065, 0.6874, 0.0741], [0.5155, 0.2706, 0.0104], [0.4073, 0.254, 0.8742]], [[0.2187, 0.4423, 0.1043], [0.3456, 0.4606, 0.2266], [0.9403, 0.3307, 0.4137]], [[0.8783, 0.4668, 0.8594], [0.8146, 0.0863, 0.3973], [0.5405, 0.3603, 0.2679]], [[0.4158, 0.0576, 0.3677], [0.1916, 0.6734, 0.8337], [0.6031, 0.3447, 0.809]], [[0.5346, 0.3808, 0.7076], [0.8653, 0.2892, 0.3679], [0.8801, 0.0194, 0.1178]], [[0.5332, 0.6997, 0.7452], [0.0824, 0.3261, 0.5896], [0.8812, 0.0971, 0.4877]]]])
in0Sub61554 = tf.constant([[0.3873, 0.2076]])
in1Sub61554 = tf.constant([[0.2082, 0.8468]])
in0Con54512 = tf.constant([[[[0.4697], [0.6282], [0.0824]], [[0.8854], [0.7324], [0.8276]], [[0.8108], [0.3683], [0.1525]], [[0.8577], [0.436], [0.9216]]]])
in0Sub53988 = tf.constant([[[[0.0933, 0.0786, 0.3423], [0.6069, 0.5086, 0.1137]], [[0.887, 0.7511, 0.3894], [0.2538, 0.7419, 0.1534]], [[0.8434, 0.3204, 0.9826], [0.5747, 0.0782, 0.1343]]]])
in1Sub53988 = tf.constant([[[[0.3123, 0.5227, 0.2916], [0.3763, 0.979, 0.6199]], [[0.065, 0.2369, 0.6272], [0.5132, 0.0089, 0.1063]], [[0.9007, 0.6483, 0.9528], [0.1724, 0.6061, 0.4226]]]])
print (np.array2string(model.predict([in0Up_37921,in0Con2565,in0Sub61554,in1Sub61554,in0Con54512,in0Sub53988,in1Sub53988],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Add23771.png')

LUp_37921 = up_sampling1D_layer([[[1.3574, 1.1094, 1.6075], [1.3243, 1.3796, 1.5416], [1.7038, 1.0352, 1.2501], [1.8224, 1.9835, 1.4752]]], 2, Up_37921), 
LRes71856 = reshape_layer(Up_37921, [8, 3, 1], Res71856), 
LCon2565 = concatenate_layer([Res71856,[[[[0.4816, 0.6097, 0.1063], [0.5735, 0.4541, 0.2204], [0.1625, 0.1291, 0.2004]], [[0.4901, 0.7849, 0.7968], [0.0237, 0.9162, 0.1493], [0.4614, 0.3838, 0.7691]], [[0.9065, 0.6874, 0.0741], [0.5155, 0.2706, 0.0104], [0.4073, 0.254, 0.8742]], [[0.2187, 0.4423, 0.1043], [0.3456, 0.4606, 0.2266], [0.9403, 0.3307, 0.4137]], [[0.8783, 0.4668, 0.8594], [0.8146, 0.0863, 0.3973], [0.5405, 0.3603, 0.2679]], [[0.4158, 0.0576, 0.3677], [0.1916, 0.6734, 0.8337], [0.6031, 0.3447, 0.809]], [[0.5346, 0.3808, 0.7076], [0.8653, 0.2892, 0.3679], [0.8801, 0.0194, 0.1178]], [[0.5332, 0.6997, 0.7452], [0.0824, 0.3261, 0.5896], [0.8812, 0.0971, 0.4877]]]]], 3, Con2565), 
LSub61554 = subtract_layer([[0.3873, 0.2076]], [[0.2082, 0.8468]], Sub61554), 
LRes6091 = reshape_layer(Sub61554, [2, 1], Res6091), 
LRes67886 = reshape_layer(Res6091, [2, 1, 1], Res67886), 
LRes52804 = reshape_layer(Res67886, [2, 1, 1, 1], Res52804), 
LZer37861 = zero_padding3D_layer(Res52804, 1, 1, 1, 1, 1, 1, Zer37861), 
LRes64326 = reshape_layer(Zer37861, [4, 3, 3], Res64326), 
LCon54512 = concatenate_layer([Res64326,[[[[0.4697], [0.6282], [0.0824]], [[0.8854], [0.7324], [0.8276]], [[0.8108], [0.3683], [0.1525]], [[0.8577], [0.436], [0.9216]]]]], 3, Con54512), 
LSub53988 = subtract_layer([[[[0.0933, 0.0786, 0.3423], [0.6069, 0.5086, 0.1137]], [[0.887, 0.7511, 0.3894], [0.2538, 0.7419, 0.1534]], [[0.8434, 0.3204, 0.9826], [0.5747, 0.0782, 0.1343]]]], [[[[0.3123, 0.5227, 0.2916], [0.3763, 0.979, 0.6199]], [[0.065, 0.2369, 0.6272], [0.5132, 0.0089, 0.1063]], [[0.9007, 0.6483, 0.9528], [0.1724, 0.6061, 0.4226]]]], Sub53988), 
LSep43858 = separable_conv2D_layer(Sub53988, 2, 2,[[[[[0.8323], [0.3071], [0.799]], [[0.5944], [0.7979], [0.7952]]], [[[0.6515], [0.9076], [0.8977]], [[0.7366], [0.663], [0.9252]]]],[[[[0.7878, 0.552, 0.858, 0.9827], [0.5962, 0.4952, 0.9011, 0.068], [0.5309, 0.4783, 0.0109, 0.9185]]]]],[0, 0, 0, 0], 3, 3, false, Sep43858), 
LZer37370 = zero_padding2D_layer(Sep43858, 3, 0, 2, 0, Zer37370), 
LAve21038 = average_layer([Con54512,Zer37370], Ave21038), 
LZer91289 = zero_padding2D_layer(Ave21038, 4, 0, 0, 0, Zer91289), 
LAdd23771 = add_layer([Con2565,Zer91289], Add23771), 
exec_layers([LUp_37921,LRes71856,LCon2565,LSub61554,LRes6091,LRes67886,LRes52804,LZer37861,LRes64326,LCon54512,LSub53988,LSep43858,LZer37370,LAve21038,LZer91289,LAdd23771],["Up_37921","Res71856","Con2565","Sub61554","Res6091","Res67886","Res52804","Zer37861","Res64326","Con54512","Sub53988","Sep43858","Zer37370","Ave21038","Zer91289","Add23771"],Add23771,"Add23771")

Actual (Unparsed): [[[[1.3573999, 0.4816000, 0.6097000, 0.1063000], [1.1094000, 0.5735000, 0.4541000, 0.2204000], [1.6075000, 0.1625000, 0.1291000, 0.2004000]], [[1.3573999, 0.4901000, 0.7849000, 0.7968000], [1.1094000, 0.0237000, 0.9162000, 0.1493000], [1.6075000, 0.4614000, 0.3838000, 0.7691000]], [[1.3243001, 0.9065000, 0.6874000, 0.0741000], [1.3796000, 0.5155000, 0.2706000, 0.0104000], [1.5416000, 0.4073000, 0.2540000, 0.8742000]], [[1.3243001, 0.2187000, 0.4423000, 0.1043000], [1.3796000, 0.3456000, 0.4606000, 0.2266000], [1.5416000, 0.9403000, 0.3307000, 0.4137000]], [[1.7038000, 0.8783000, 0.4668000, 1.0942500], [1.0352000, 0.8146000, 0.0863000, 0.7114000], [1.2501000, 0.5405000, 0.3603000, 0.3091000]], [[1.7038000, 0.4158000, 0.0576000, 0.8104000], [1.0352000, 0.2811500, 0.6734000, 1.1999000], [1.2501000, 0.6031000, 0.3447000, 1.2228000]], [[1.8224000, 0.5346000, 0.3808000, 1.1130000], [1.9835000, 0.5457000, 0.2892000, 0.5520500], [1.4752001, 0.8801000, 0.0194000, 0.1940500]], [[1.8224000, 0.5332000, 0.6997000, 1.1740500], [1.9835000, 0.0824000, 0.3261000, 0.8076000], [1.5833265, 0.9457658, 0.4212518, 0.8662478]]]]

Expected (Unparsed): [[[[1.3574,0.4816,0.6097,0.1063],[1.1094,0.5735,0.4541,0.2204],[1.6075,0.1625,0.1291,0.2004]],[[1.3574,0.4901,0.7849,0.7968],[1.1094,0.0237,0.9162,0.1493],[1.6075,0.4614,0.3838,0.7691]],[[1.3243,0.9065,0.6874,0.0741],[1.3796,0.5155,0.2706,0.0104],[1.5416,0.4073,0.254,0.8742]],[[1.3243,0.2187,0.4423,0.1043],[1.3796,0.3456,0.4606,0.2266],[1.5416,0.9403,0.3307,0.4137]],[[1.7038,0.8783,0.4668,1.0942500000000002],[1.0352,0.8146,0.0863,0.7114],[1.2501,0.5405,0.3603,0.30910000000000004]],[[1.7038,0.4158,0.0576,0.8104],[1.0352,0.28115,0.6734,1.1999],[1.2501,0.6031,0.3447,1.2228]],[[1.8224,0.5346,0.3808,1.113],[1.9835,0.5457,0.2892,0.55205],[1.4752,0.8801,0.0194,0.19405]],[[1.8224,0.5332,0.6997,1.17405],[1.9835,0.0824,0.3261,0.8076],[1.583326409189,0.945765735258,0.42125174092150003,0.8662478408750001]]]]

Actual:   [[[[1.3574, 0.4816, 0.6097, 0.1063], [1.1094, 0.5735, 0.4541, 0.2204], [1.6075, 0.1625, 0.1291, 0.2004]], [[1.3574, 0.4901, 0.7849, 0.7968], [1.1094, 0.0237, 0.9162, 0.1493], [1.6075, 0.4614, 0.3838, 0.7691]], [[1.3244, 0.9065, 0.6874, 0.0741], [1.3796, 0.5155, 0.2706, 0.0104], [1.5416, 0.4073, 0.254, 0.8742]], [[1.3244, 0.2187, 0.4423, 0.1043], [1.3796, 0.3456, 0.4606, 0.2266], [1.5416, 0.9403, 0.3307, 0.4137]], [[1.7038, 0.8783, 0.4668, 1.0943], [1.0352, 0.8146, 0.0863, 0.7114], [1.2501, 0.5405, 0.3603, 0.3091]], [[1.7038, 0.4158, 0.0576, 0.8104], [1.0352, 0.2812, 0.6734, 1.1999], [1.2501, 0.6031, 0.3447, 1.2228]], [[1.8224, 0.5346, 0.3808, 1.113], [1.9835, 0.5457, 0.2892, 0.5521], [1.4753, 0.8801, 0.0194, 0.1941]], [[1.8224, 0.5332, 0.6997, 1.1741], [1.9835, 0.0824, 0.3261, 0.8076], [1.5834, 0.9458, 0.4213, 0.8663]]]]

Expected: [[[[1.3574, 0.4816, 0.6097, 0.1063], [1.1094, 0.5735, 0.4541, 0.2204], [1.6075, 0.1625, 0.1291, 0.2004]], [[1.3574, 0.4901, 0.7849, 0.7968], [1.1094, 0.0237, 0.9162, 0.1493], [1.6075, 0.4614, 0.3838, 0.7691]], [[1.3243, 0.9065, 0.6874, 0.0741], [1.3796, 0.5155, 0.2706, 0.0104], [1.5416, 0.4073, 0.254, 0.8742]], [[1.3243, 0.2187, 0.4423, 0.1043], [1.3796, 0.3456, 0.4606, 0.2266], [1.5416, 0.9403, 0.3307, 0.4137]], [[1.7038, 0.8783, 0.4668, 1.0943], [1.0352, 0.8146, 0.0863, 0.7114], [1.2501, 0.5405, 0.3603, 0.3092]], [[1.7038, 0.4158, 0.0576, 0.8104], [1.0352, 0.2812, 0.6734, 1.1999], [1.2501, 0.6031, 0.3447, 1.2228]], [[1.8224, 0.5346, 0.3808, 1.113], [1.9835, 0.5457, 0.2892, 0.5521], [1.4752, 0.8801, 0.0194, 0.1941]], [[1.8224, 0.5332, 0.6997, 1.1741], [1.9835, 0.0824, 0.3261, 0.8076], [1.5834, 0.9458, 0.4213, 0.8663]]]]