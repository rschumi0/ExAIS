import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Dot68918 = tf.keras.layers.Input(shape=([2, 3]))
in1Dot68918 = tf.keras.layers.Input(shape=([2, 3]))
in0Con42901 = tf.keras.layers.Input(shape=([3, 2, 1]))
in0Mul82816 = tf.keras.layers.Input(shape=([1, 1]))
in1Mul82816 = tf.keras.layers.Input(shape=([1, 1]))
in0Con38037 = tf.keras.layers.Input(shape=([3, 2, 1]))
in0Sub90428 = tf.keras.layers.Input(shape=([3, 2, 2]))
in1Sub90428 = tf.keras.layers.Input(shape=([3, 2, 2]))

Dot68918 = keras.layers.Dot(axes=(2, 2), name = 'Dot68918', )([in0Dot68918,in1Dot68918])
Bat2786 = keras.layers.BatchNormalization(axis=2, epsilon=0.17472843459011056,  name = 'Bat2786', )(Dot68918)
Res27747 = keras.layers.Reshape((2, 2, 1), name = 'Res27747', )(Bat2786)
Zer64166 = keras.layers.ZeroPadding2D(padding=((1, 0), (0, 0)), name = 'Zer64166', )(Res27747)
Con42901 = keras.layers.Concatenate(axis=3, name = 'Con42901', )([Zer64166,in0Con42901])
Mul82816 = keras.layers.Multiply(name = 'Mul82816', )([in0Mul82816,in1Mul82816])
Res98710 = keras.layers.Reshape((1, 1, 1), name = 'Res98710', )(Mul82816)
Zer99537 = keras.layers.ZeroPadding2D(padding=((2, 0), (1, 0)), name = 'Zer99537', )(Res98710)
Con38037 = keras.layers.Concatenate(axis=3, name = 'Con38037', )([Zer99537,in0Con38037])
Sub90428 = keras.layers.Subtract(name = 'Sub90428', )([in0Sub90428,in1Sub90428])
Min29844 = keras.layers.Minimum(name = 'Min29844', )([Con38037,Sub90428])
Sub54042 = keras.layers.Subtract(name = 'Sub54042', )([Con42901,Min29844])
Mas77590 = keras.layers.Masking(mask_value=2, name = 'Mas77590', )(Sub54042)
model = tf.keras.models.Model(inputs=[in0Dot68918,in1Dot68918,in0Con42901,in0Mul82816,in1Mul82816,in0Con38037,in0Sub90428,in1Sub90428], outputs=Mas77590)
w = model.get_layer('Bat2786').get_weights() 
w[0] = np.array([0.431, 0.2476])
w[1] = np.array([0.5444, 0.0308])
w[2] = np.array([0.1006, 0.5916])
w[3] = np.array([0.034, 0.3332])
model.get_layer('Bat2786').set_weights(w) 
in0Dot68918 = tf.constant([[[0.6234, 0.3629, 0.1681], [0.1825, 0.2098, 0.2104]]])
in1Dot68918 = tf.constant([[[0.1283, 0.0484, 0.8436], [0.4877, 0.8094, 0.8217]]])
in0Con42901 = tf.constant([[[[0.0307], [0.3658]], [[0.2218], [0.4816]], [[0.8485], [0.4297]]]])
in0Mul82816 = tf.constant([[[0.3971]]])
in1Mul82816 = tf.constant([[[0.8156]]])
in0Con38037 = tf.constant([[[[0.1032], [0.0468]], [[0.5659], [0.7776]], [[0.0668], [0.4285]]]])
in0Sub90428 = tf.constant([[[[0.7237, 0.5708], [0.4523, 0.9608]], [[0.7172, 0.5501], [0.1351, 0.2357]], [[0.2196, 0.0139], [0.3624, 0.7287]]]])
in1Sub90428 = tf.constant([[[[0.6529, 0.8001], [0.0243, 0.3717]], [[0.7211, 0.1173], [0.6226, 0.862]], [[0.1336, 0.9283], [0.8017, 0.6273]]]])
print (np.array2string(model.predict([in0Dot68918,in1Dot68918,in0Con42901,in0Mul82816,in1Mul82816,in0Con38037,in0Sub90428,in1Sub90428],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Mas77590.png')

LDot68918 = dot_layer([[[0.6234, 0.3629, 0.1681], [0.1825, 0.2098, 0.2104]]], [[[0.1283, 0.0484, 0.8436], [0.4877, 0.8094, 0.8217]]], 2, 2, Dot68918), 
LBat2786 = batch_normalization_layer(Dot68918, 2, 0.17472843459011056, [0.431, 0.2476], [0.5444, 0.0308], [0.1006, 0.5916], [0.034, 0.3332], Bat2786), 
LRes27747 = reshape_layer(Bat2786, [2, 2, 1], Res27747), 
LZer64166 = zero_padding2D_layer(Res27747, 1, 0, 0, 0, Zer64166), 
LCon42901 = concatenate_layer([Zer64166,[[[[0.0307], [0.3658]], [[0.2218], [0.4816]], [[0.8485], [0.4297]]]]], 3, Con42901), 
LMul82816 = multiply_layer([[[[0.3971]]], [[[0.8156]]]], Mul82816), 
LRes98710 = reshape_layer(Mul82816, [1, 1, 1], Res98710), 
LZer99537 = zero_padding2D_layer(Res98710, 2, 0, 1, 0, Zer99537), 
LCon38037 = concatenate_layer([Zer99537,[[[[0.1032], [0.0468]], [[0.5659], [0.7776]], [[0.0668], [0.4285]]]]], 3, Con38037), 
LSub90428 = subtract_layer([[[[0.7237, 0.5708], [0.4523, 0.9608]], [[0.7172, 0.5501], [0.1351, 0.2357]], [[0.2196, 0.0139], [0.3624, 0.7287]]]], [[[[0.6529, 0.8001], [0.0243, 0.3717]], [[0.7211, 0.1173], [0.6226, 0.862]], [[0.1336, 0.9283], [0.8017, 0.6273]]]], Sub90428), 
LMin29844 = minimum_layer([Con38037,Sub90428], Min29844), 
LSub54042 = subtract_layer(Con42901,Min29844, Sub54042), 
LMas77590 = masking_layer(Sub54042, 2, Mas77590), 
exec_layers([LDot68918,LBat2786,LRes27747,LZer64166,LCon42901,LMul82816,LRes98710,LZer99537,LCon38037,LSub90428,LMin29844,LSub54042,LMas77590],["Dot68918","Bat2786","Res27747","Zer64166","Con42901","Mul82816","Res98710","Zer99537","Con38037","Sub90428","Min29844","Sub54042","Mas77590"],Mas77590,"Mas77590")

Actual (Unparsed): [[[[0.0000000, 0.2600000], [0.0000000, 0.3190000]], [[0.6791993, -0.2110000], [0.5684290, 1.1079000]], [[0.6486081, 1.7629000], [0.4145493, 0.3283000]]]]

Expected (Unparsed): [[[[0,0.26000000000000006],[0,0.319]],[[0.6791993289188154,-0.21100000000000002],[0.5684290244183262,1.1078999999999999]],[[0.648608074056525,1.7629000000000001],[0.4145492972859131,0.3283]]]]

Actual:   [[[[0, 0.26], [0, 0.319]], [[0.6792, -0.211], [0.5685, 1.1079]], [[0.6487, 1.7629], [0.4146, 0.3283]]]]

Expected: [[[[0, 0.2601], [0, 0.319]], [[0.6792, -0.211], [0.5685, 1.1079]], [[0.6487, 1.763], [0.4146, 0.3283]]]]