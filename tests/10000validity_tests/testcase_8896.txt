import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Max34389 = tf.keras.layers.Input(shape=([2, 1, 1]))

Max34389 = keras.layers.MaxPool2D(pool_size=(1, 1), name = 'Max34389', )(in0Max34389)
Bat86353 = keras.layers.BatchNormalization(axis=1, epsilon=0.9161730301459787,  name = 'Bat86353', )(Max34389)
model = tf.keras.models.Model(inputs=[in0Max34389], outputs=Bat86353)
w = model.get_layer('Bat86353').get_weights() 
w[0] = np.array([0.1461, 0.882])
w[1] = np.array([0.4697, 0.3019])
w[2] = np.array([0.3627, 0.5052])
w[3] = np.array([0.4084, 0.0802])
model.get_layer('Bat86353').set_weights(w) 
in0Max34389 = tf.constant([[[[1.9025]], [[1.9457]]]])
print (np.array2string(model.predict([in0Max34389],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Bat86353.png')

LMax34389 = max_pool2D_layer([[[[1.9025]], [[1.9457]]]], 1, 1, Max34389), 
LBat86353 = batch_normalization_layer(Max34389, 1, 0.9161730301459787, [0.1461, 0.882], [0.4697, 0.3019], [0.3627, 0.5052], [0.4084, 0.0802], Bat86353), 
exec_layers([LMax34389,LBat86353],["Max34389","Bat86353"],Bat86353,"Bat86353")

Actual (Unparsed): [[[[0.6651684]], [[1.5747314]]]]

Expected (Unparsed): [[[[0.6651684086069285]],[[1.5747313572831005]]]]

Actual:   [[[[0.6652]], [[1.5748]]]]

Expected: [[[[0.6652]], [[1.5748]]]]