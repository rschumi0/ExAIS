import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Dot69690 = tf.keras.layers.Input(shape=([2]))
in1Dot69690 = tf.keras.layers.Input(shape=([2]))
in0Con376 = tf.keras.layers.Input(shape=([3, 2]))
in0Sub35402 = tf.keras.layers.Input(shape=([3, 3]))
in1Sub35402 = tf.keras.layers.Input(shape=([3, 3]))

Dot69690 = keras.layers.Dot(axes=(1, 1), name = 'Dot69690', )([in0Dot69690,in1Dot69690])
Res61845 = keras.layers.Reshape((1, 1), name = 'Res61845', )(Dot69690)
Zer35866 = keras.layers.ZeroPadding1D(padding=((2, 0)), name = 'Zer35866', )(Res61845)
Con376 = keras.layers.Concatenate(axis=2, name = 'Con376', )([Zer35866,in0Con376])
Sub35402 = keras.layers.Subtract(name = 'Sub35402', )([in0Sub35402,in1Sub35402])
Min61486 = keras.layers.Minimum(name = 'Min61486', )([Con376,Sub35402])
Lea94073 = keras.layers.LeakyReLU(alpha=7.9971079197288315, name = 'Lea94073', )(Min61486)
Res26365 = keras.layers.Reshape((3, 3, 1), name = 'Res26365', )(Lea94073)
Res60114 = keras.layers.Reshape((3, 3, 1, 1), name = 'Res60114', )(Res26365)
Cro71836 = keras.layers.Cropping3D(cropping=((2, 0), (0, 0), (0, 0)), name = 'Cro71836', )(Res60114)
Thr9032 = keras.layers.ThresholdedReLU(theta=0.7962813870873513, name = 'Thr9032', )(Cro71836)
model = tf.keras.models.Model(inputs=[in0Dot69690,in1Dot69690,in0Con376,in0Sub35402,in1Sub35402], outputs=Thr9032)
in0Dot69690 = tf.constant([[0.0583, 0.392]])
in1Dot69690 = tf.constant([[0.2309, 0.2762]])
in0Con376 = tf.constant([[[0.652, 0.6106], [0.0941, 0.876], [0.5165, 0.9511]]])
in0Sub35402 = tf.constant([[[0.7008, 0.224, 0.2022], [0.8696, 0.1287, 0.1267], [0.7717, 0.9694, 0.5936]]])
in1Sub35402 = tf.constant([[[0.9513, 0.1721, 0.4606], [0.9878, 0.0176, 0.5711], [0.4452, 0.4573, 0.7177]]])
print (np.array2string(model.predict([in0Dot69690,in1Dot69690,in0Con376,in0Sub35402,in1Sub35402],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Thr9032.png')

LDot69690 = dot_layer([[0.0583, 0.392]], [[0.2309, 0.2762]], 1, 1, Dot69690), 
LRes61845 = reshape_layer(Dot69690, [1, 1], Res61845), 
LZer35866 = zero_padding1D_layer(Res61845, 2, 0, Zer35866), 
LCon376 = concatenate_layer([Zer35866,[[[0.652, 0.6106], [0.0941, 0.876], [0.5165, 0.9511]]]], 2, Con376), 
LSub35402 = subtract_layer([[[0.7008, 0.224, 0.2022], [0.8696, 0.1287, 0.1267], [0.7717, 0.9694, 0.5936]]], [[[0.9513, 0.1721, 0.4606], [0.9878, 0.0176, 0.5711], [0.4452, 0.4573, 0.7177]]], Sub35402), 
LMin61486 = minimum_layer([Con376,Sub35402], Min61486), 
LLea94073 = leaky_relu_layer(Min61486, 7.9971079197288315, Lea94073), 
LRes26365 = reshape_layer(Lea94073, [3, 3, 1], Res26365), 
LRes60114 = reshape_layer(Res26365, [3, 3, 1, 1], Res60114), 
LCro71836 = cropping3D_layer(Res60114, 2, 0, 0, 0, 0, 0, Cro71836), 
LThr9032 = thresholded_relu_layer(Cro71836, 0.7962813870873513, Thr9032), 
exec_layers([LDot69690,LRes61845,LZer35866,LCon376,LSub35402,LMin61486,LLea94073,LRes26365,LRes60114,LCro71836,LThr9032],["Dot69690","Res61845","Zer35866","Con376","Sub35402","Min61486","Lea94073","Res26365","Res60114","Cro71836","Thr9032"],Thr9032,"Thr9032")

Actual (Unparsed): [[[[[0.0000000]], [[0.0000000]], [[-0.0000000]]]]]

Expected (Unparsed): [[[[[0]],[[0]],[[0]]]]]

Actual:   [[[[[0]], [[0]], [[-0]]]]]

Expected: [[[[[0]], [[0]], [[0]]]]]