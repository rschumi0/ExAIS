import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Mul39620 = tf.keras.layers.Input(shape=([2, 1]))
in1Mul39620 = tf.keras.layers.Input(shape=([2, 1]))
in0Dot15776 = tf.keras.layers.Input(shape=([2]))
in1Dot15776 = tf.keras.layers.Input(shape=([2]))
in0Con17479 = tf.keras.layers.Input(shape=([1]))

Mul39620 = keras.layers.Multiply(name = 'Mul39620', )([in0Mul39620,in1Mul39620])
Fla72369 = keras.layers.Flatten(name = 'Fla72369', )(Mul39620)
Dot15776 = keras.layers.Dot(axes=(1, 1), name = 'Dot15776', )([in0Dot15776,in1Dot15776])
Con17479 = keras.layers.Concatenate(axis=1, name = 'Con17479', )([Dot15776,in0Con17479])
Add20053 = keras.layers.Add(name = 'Add20053', )([Fla72369,Con17479])
model = tf.keras.models.Model(inputs=[in0Mul39620,in1Mul39620,in0Dot15776,in1Dot15776,in0Con17479], outputs=Add20053)
in0Mul39620 = tf.constant([[[0.38], [0.822]]])
in1Mul39620 = tf.constant([[[0.2763], [0.1299]]])
in0Dot15776 = tf.constant([[0.331, 0.3957]])
in1Dot15776 = tf.constant([[0.353, 0.9506]])
in0Con17479 = tf.constant([[0.6411]])
print (np.array2string(model.predict([in0Mul39620,in1Mul39620,in0Dot15776,in1Dot15776,in0Con17479],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Add20053.png')

LMul39620 = multiply_layer([[[[0.38], [0.822]]], [[[0.2763], [0.1299]]]], Mul39620), 
LFla72369 = flatten_layer(Mul39620, Fla72369), 
LDot15776 = dot_layer([[0.331, 0.3957]], [[0.353, 0.9506]], 1, 1, Dot15776), 
LCon17479 = concatenate_layer([Dot15776,[[0.6411]]], 1, Con17479), 
LAdd20053 = add_layer([Fla72369,Con17479], Add20053), 
exec_layers([LMul39620,LFla72369,LDot15776,LCon17479,LAdd20053],["Mul39620","Fla72369","Dot15776","Con17479","Add20053"],Add20053,"Add20053")

Actual (Unparsed): [[0.5979894, 0.7478778]]

Expected (Unparsed): [[0.59798942,0.7478777999999999]]

Actual:   [[0.598, 0.7479]]

Expected: [[0.598, 0.7479]]