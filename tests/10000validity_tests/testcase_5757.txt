import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Mul39793 = tf.keras.layers.Input(shape=([2, 2]))
in1Mul39793 = tf.keras.layers.Input(shape=([2, 2]))
in0Con33410 = tf.keras.layers.Input(shape=([3]))
in0Ave2120 = tf.keras.layers.Input(shape=([2, 1]))
in1Ave2120 = tf.keras.layers.Input(shape=([2, 1]))
in0Con16620 = tf.keras.layers.Input(shape=([2, 3]))
in0Con98153 = tf.keras.layers.Input(shape=([2, 2]))
in0Min7256 = tf.keras.layers.Input(shape=([2, 2]))
in1Min7256 = tf.keras.layers.Input(shape=([2, 2]))
in0Con28789 = tf.keras.layers.Input(shape=([2, 2]))

Mul39793 = keras.layers.Multiply(name = 'Mul39793', )([in0Mul39793,in1Mul39793])
Res25689 = keras.layers.Reshape((2, 2, 1), name = 'Res25689', )(Mul39793)
Res2526 = keras.layers.Reshape((2, 2, 1, 1), name = 'Res2526', )(Res25689)
Glo11947 = keras.layers.GlobalMaxPool3D(name = 'Glo11947', )(Res2526)
Con33410 = keras.layers.Concatenate(axis=1, name = 'Con33410', )([Glo11947,in0Con33410])
Ave2120 = keras.layers.Average(name = 'Ave2120', )([in0Ave2120,in1Ave2120])
Con16620 = keras.layers.Concatenate(axis=2, name = 'Con16620', )([Ave2120,in0Con16620])
Con98153 = keras.layers.Conv1D(4, (2),strides=(12), padding='same', dilation_rate=(1), name = 'Con98153', )(in0Con98153)
Zer94921 = keras.layers.ZeroPadding1D(padding=((1, 0)), name = 'Zer94921', )(Con98153)
Sub86989 = keras.layers.Subtract(name = 'Sub86989', )([Con16620,Zer94921])
Min7256 = keras.layers.Minimum(name = 'Min7256', )([in0Min7256,in1Min7256])
Con28789 = keras.layers.Concatenate(axis=2, name = 'Con28789', )([Min7256,in0Con28789])
Ave83156 = keras.layers.Average(name = 'Ave83156', )([Sub86989,Con28789])
Glo88409 = keras.layers.GlobalMaxPool1D(name = 'Glo88409', )(Ave83156)
Max85024 = keras.layers.Maximum(name = 'Max85024', )([Con33410,Glo88409])
model = tf.keras.models.Model(inputs=[in0Mul39793,in1Mul39793,in0Con33410,in0Ave2120,in1Ave2120,in0Con16620,in0Con98153,in0Min7256,in1Min7256,in0Con28789], outputs=Max85024)
w = model.get_layer('Con98153').get_weights() 
w[0] = np.array([[[0.0818, 0.0598, 0.6758, 0.1392], [0.0253, 0.3668, 0.0765, 0.7952]], [[0.436, 0.9286, 0.4645, 0.9811], [0.3871, 0.7856, 0.1001, 0.1418]]])
w[1] = np.array([0, 0, 0, 0])
model.get_layer('Con98153').set_weights(w) 
in0Mul39793 = tf.constant([[[0.1952, 0.1414], [0.9951, 0.8679]]])
in1Mul39793 = tf.constant([[[0.4447, 0.5327], [0.569, 0.9202]]])
in0Con33410 = tf.constant([[0.8501, 0.2255, 0.0697]])
in0Ave2120 = tf.constant([[[0.6538], [0.1962]]])
in1Ave2120 = tf.constant([[[0.1646], [0.2957]]])
in0Con16620 = tf.constant([[[0.1873, 0.9515, 0.6948], [0.334, 0.8822, 0.5434]]])
in0Con98153 = tf.constant([[[0.3479, 0.8785], [0.2166, 0.9102]]])
in0Min7256 = tf.constant([[[0.6691, 0.1016], [0.1612, 0.0232]]])
in1Min7256 = tf.constant([[[0.4015, 0.1125], [0.8291, 0.6164]]])
in0Con28789 = tf.constant([[[0.2251, 0.6466], [0.0207, 0.142]]])
print (np.array2string(model.predict([in0Mul39793,in1Mul39793,in0Con33410,in0Ave2120,in1Ave2120,in0Con16620,in0Con98153,in0Min7256,in1Min7256,in0Con28789],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Max85024.png')

LMul39793 = multiply_layer([[[[0.1952, 0.1414], [0.9951, 0.8679]]], [[[0.4447, 0.5327], [0.569, 0.9202]]]], Mul39793), 
LRes25689 = reshape_layer(Mul39793, [2, 2, 1], Res25689), 
LRes2526 = reshape_layer(Res25689, [2, 2, 1, 1], Res2526), 
LGlo11947 = global_max_pool3D_layer(Res2526, Glo11947), 
LCon33410 = concatenate_layer([Glo11947,[[0.8501, 0.2255, 0.0697]]], 1, Con33410), 
LAve2120 = average_layer([[[[0.6538], [0.1962]]], [[[0.1646], [0.2957]]]], Ave2120), 
LCon16620 = concatenate_layer([Ave2120,[[[0.1873, 0.9515, 0.6948], [0.334, 0.8822, 0.5434]]]], 2, Con16620), 
LCon98153 = conv1D_layer([[[0.3479, 0.8785], [0.2166, 0.9102]]], 2,[[[0.0818, 0.0598, 0.6758, 0.1392], [0.0253, 0.3668, 0.0765, 0.7952]], [[0.436, 0.9286, 0.4645, 0.9811], [0.3871, 0.7856, 0.1001, 0.1418]]],[0, 0, 0, 0], 12, true, 1, Con98153), 
LZer94921 = zero_padding1D_layer(Con98153, 1, 0, Zer94921), 
LSub86989 = subtract_layer(Con16620,Zer94921, Sub86989), 
LMin7256 = minimum_layer([[[[0.6691, 0.1016], [0.1612, 0.0232]]], [[[0.4015, 0.1125], [0.8291, 0.6164]]]], Min7256), 
LCon28789 = concatenate_layer([Min7256,[[[0.2251, 0.6466], [0.0207, 0.142]]]], 2, Con28789), 
LAve83156 = average_layer([Sub86989,Con28789], Ave83156), 
LGlo88409 = global_max_pool1D_layer(Ave83156, Glo88409), 
LMax85024 = maximum_layer([Con33410,Glo88409], Max85024), 
exec_layers([LMul39793,LRes25689,LRes2526,LGlo11947,LCon33410,LAve2120,LCon16620,LCon98153,LZer94921,LSub86989,LMin7256,LCon28789,LAve83156,LGlo88409,LMax85024],["Mul39793","Res25689","Res2526","Glo11947","Con33410","Ave2120","Con16620","Con98153","Zer94921","Sub86989","Min7256","Con28789","Ave83156","Glo88409","Max85024"],Max85024,"Max85024")

Actual (Unparsed): [[0.7986416, 0.8501000, 0.5883000, 0.6707000]]

Expected (Unparsed): [[0.7986415800000001,0.8501,0.5883,0.6707]]

Actual:   [[0.7987, 0.8501, 0.5883, 0.6707]]

Expected: [[0.7987, 0.8501, 0.5883, 0.6707]]