import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Sub35797 = tf.keras.layers.Input(shape=([2]))
in1Sub35797 = tf.keras.layers.Input(shape=([2]))

Sub35797 = keras.layers.Subtract(name = 'Sub35797', )([in0Sub35797,in1Sub35797])
Res17995 = keras.layers.Reshape((2, 1), name = 'Res17995', )(Sub35797)
Zer72827 = keras.layers.ZeroPadding1D(padding=((1, 1)), name = 'Zer72827', )(Res17995)
Bat46233 = keras.layers.BatchNormalization(axis=2, epsilon=0.8703358485364083,  name = 'Bat46233', )(Zer72827)
model = tf.keras.models.Model(inputs=[in0Sub35797,in1Sub35797], outputs=Bat46233)
w = model.get_layer('Bat46233').get_weights() 
w[0] = np.array([0.752])
w[1] = np.array([0.3436])
w[2] = np.array([0.1044])
w[3] = np.array([0.2104])
model.get_layer('Bat46233').set_weights(w) 
in0Sub35797 = tf.constant([[0.0066, 0.6209]])
in1Sub35797 = tf.constant([[0.0757, 0.2956]])
print (np.array2string(model.predict([in0Sub35797,in1Sub35797],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Bat46233.png')

LSub35797 = subtract_layer([[0.0066, 0.6209]], [[0.0757, 0.2956]], Sub35797), 
LRes17995 = reshape_layer(Sub35797, [2, 1], Res17995), 
LZer72827 = zero_padding1D_layer(Res17995, 1, 1, Zer72827), 
LBat46233 = batch_normalization_layer(Zer72827, 2, 0.8703358485364083, [0.752], [0.3436], [0.1044], [0.2104], Bat46233), 
exec_layers([LSub35797,LRes17995,LZer72827,LBat46233],["Sub35797","Res17995","Zer72827","Bat46233"],Bat46233,"Bat46233")

Actual (Unparsed): [[[0.2680806], [0.2180960], [0.5033915], [0.2680806]]]

Expected (Unparsed): [[[0.26808059483879104],[0.21809600770622836],[0.5033915383152401],[0.26808059483879104]]]

Actual:   [[[0.2681], [0.2181], [0.5034], [0.2681]]]

Expected: [[[0.2681], [0.2181], [0.5034], [0.2681]]]