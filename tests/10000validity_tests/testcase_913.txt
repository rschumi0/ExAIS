import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Max49876 = tf.keras.layers.Input(shape=([1, 2, 2]))
in0Con30540 = tf.keras.layers.Input(shape=([3, 2, 1]))
in0Sub67445 = tf.keras.layers.Input(shape=([3, 2, 3]))
in1Sub67445 = tf.keras.layers.Input(shape=([3, 2, 3]))
in0LST81566 = tf.keras.layers.Input(shape=([2, 2]))
in0Con69200 = tf.keras.layers.Input(shape=([17]))

Max49876 = keras.layers.MaxPool2D(pool_size=(1, 1), strides=(1, 1), padding='valid', name = 'Max49876', )(in0Max49876)
Zer15261 = keras.layers.ZeroPadding2D(padding=((2, 0), (0, 0)), name = 'Zer15261', )(Max49876)
Con30540 = keras.layers.Concatenate(axis=3, name = 'Con30540', )([Zer15261,in0Con30540])
Sub67445 = keras.layers.Subtract(name = 'Sub67445', )([in0Sub67445,in1Sub67445])
Mul79063 = keras.layers.Multiply(name = 'Mul79063', )([Con30540,Sub67445])
Res63851 = keras.layers.Reshape((3, 6), name = 'Res63851', )(Mul79063)
Fla46303 = keras.layers.Flatten(name = 'Fla46303', )(Res63851)
LST81566 = keras.layers.LSTM(1,recurrent_activation='sigmoid', name = 'LST81566', )(in0LST81566)
Con69200 = keras.layers.Concatenate(axis=1, name = 'Con69200', )([LST81566,in0Con69200])
Min74608 = keras.layers.Minimum(name = 'Min74608', )([Fla46303,Con69200])
model = tf.keras.models.Model(inputs=[in0Max49876,in0Con30540,in0Sub67445,in1Sub67445,in0LST81566,in0Con69200], outputs=Min74608)
w = model.get_layer('LST81566').get_weights() 
w[0] = np.array([[7, 3, 5, 2], [10, 2, 1, 5]])
w[1] = np.array([[6, 1, 6, 8]])
w[2] = np.array([6, 2, 8, 7])
model.get_layer('LST81566').set_weights(w) 
in0Max49876 = tf.constant([[[[1.6215, 1.1781], [1.2729, 1.2659]]]])
in0Con30540 = tf.constant([[[[0.8102], [0.7143]], [[0.3785], [0.2533]], [[0.2657], [0.8506]]]])
in0Sub67445 = tf.constant([[[[0.3474, 0.9903, 0.2951], [0.7621, 0.2192, 0.8818]], [[0.6358, 0.3691, 0.2968], [0.6999, 0.4115, 0.1242]], [[0.9061, 0.9683, 0.2817], [0.2983, 0.9171, 0.0268]]]])
in1Sub67445 = tf.constant([[[[0.3405, 0.9057, 0.715], [0.5146, 0.9878, 0.9074]], [[0.3903, 0.818, 0.1033], [0.4973, 0.3643, 0.3047]], [[0.3599, 0.0135, 0.2658], [0.5207, 0.4487, 0.8256]]]])
in0LST81566 = tf.constant([[[4, 5], [4, 5]]])
in0Con69200 = tf.constant([[0.5245, 0.297, 0.7553, 0.2021, 0.2496, 0.9974, 0.3111, 0.3901, 0.4419, 0.8658, 0.1033, 0.4793, 0.0123, 0.7498, 0.2302, 0.2094, 0.9341]])
print (np.array2string(model.predict([in0Max49876,in0Con30540,in0Sub67445,in1Sub67445,in0LST81566,in0Con69200],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Min74608.png')

LMax49876 = max_pool2D_layer([[[[1.6215, 1.1781], [1.2729, 1.2659]]]], 1, 1, 1, 1, false, Max49876), 
LZer15261 = zero_padding2D_layer(Max49876, 2, 0, 0, 0, Zer15261), 
LCon30540 = concatenate_layer([Zer15261,[[[[0.8102], [0.7143]], [[0.3785], [0.2533]], [[0.2657], [0.8506]]]]], 3, Con30540), 
LSub67445 = subtract_layer([[[[0.3474, 0.9903, 0.2951], [0.7621, 0.2192, 0.8818]], [[0.6358, 0.3691, 0.2968], [0.6999, 0.4115, 0.1242]], [[0.9061, 0.9683, 0.2817], [0.2983, 0.9171, 0.0268]]]], [[[[0.3405, 0.9057, 0.715], [0.5146, 0.9878, 0.9074]], [[0.3903, 0.818, 0.1033], [0.4973, 0.3643, 0.3047]], [[0.3599, 0.0135, 0.2658], [0.5207, 0.4487, 0.8256]]]], Sub67445), 
LMul79063 = multiply_layer([Con30540,Sub67445], Mul79063), 
LRes63851 = reshape_layer(Mul79063, [3, 6], Res63851), 
LFla46303 = flatten_layer(Res63851, Fla46303), 
LLST81566 = lstm_layer([[[4, 5], [4, 5]]],[[7, 3, 5, 2], [10, 2, 1, 5]],[[6, 1, 6, 8]],[6, 2, 8, 7], LST81566), 
LCon69200 = concatenate_layer([LST81566,[[0.5245, 0.297, 0.7553, 0.2021, 0.2496, 0.9974, 0.3111, 0.3901, 0.4419, 0.8658, 0.1033, 0.4793, 0.0123, 0.7498, 0.2302, 0.2094, 0.9341]]], 1, Con69200), 
LMin74608 = minimum_layer([Fla46303,Con69200], Min74608), 
exec_layers([LMax49876,LZer15261,LCon30540,LSub67445,LMul79063,LRes63851,LFla46303,LLST81566,LCon69200,LMin74608],["Max49876","Zer15261","Con30540","Sub67445","Mul79063","Res63851","Fla46303","LST81566","Con69200","Min74608"],Min74608,"Min74608")

Actual (Unparsed): [[0.0000000, 0.0000000, -0.3402029, 0.0000000, -0.0000000, -0.0182861, 0.0000000, -0.0000000, 0.0732397, 0.0000000, 0.0000000, -0.0457206, 0.4793000, 0.0123000, 0.0042246, -0.2830929, 0.2094000, -0.6794593]]

Expected (Unparsed): [[0.0,0.0,-0.34020298,0.0,-0.0,-0.01828607999999997,0.0,-0.0,0.07323975,0.0,0.0,-0.04572065000000001,0.4793,0.0123,0.004224630000000007,-0.28309296000000006,0.2094,-0.67945928]]

Actual:   [[0, 0, -0.3402, 0, -0, -0.0182, 0, -0, 0.0733, 0, 0, -0.0457, 0.4793, 0.0123, 0.0043, -0.283, 0.2094, -0.6794]]

Expected: [[0, 0, -0.3402, 0, -0, -0.0182, 0, -0, 0.0733, 0, 0, -0.0457, 0.4793, 0.0123, 0.0043, -0.283, 0.2094, -0.6794]]