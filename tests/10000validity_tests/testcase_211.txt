import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Ave19348 = tf.keras.layers.Input(shape=([1, 1, 1]))
in1Ave19348 = tf.keras.layers.Input(shape=([1, 1, 1]))

Ave19348 = keras.layers.Average(name = 'Ave19348', )([in0Ave19348,in1Ave19348])
Res1052 = keras.layers.Reshape((1, 1), name = 'Res1052', )(Ave19348)
Ave16005 = keras.layers.AveragePooling1D(pool_size=(1), strides=(5), padding='same', name = 'Ave16005', )(Res1052)
Res59250 = keras.layers.Reshape((1, 1, 1), name = 'Res59250', )(Ave16005)
Up_29241 = keras.layers.UpSampling2D(size=(2, 2), name = 'Up_29241', )(Res59250)
model = tf.keras.models.Model(inputs=[in0Ave19348,in1Ave19348], outputs=Up_29241)
in0Ave19348 = tf.constant([[[[0.0915]]]])
in1Ave19348 = tf.constant([[[[0.9554]]]])
print (np.array2string(model.predict([in0Ave19348,in1Ave19348],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Up_29241.png')

LAve19348 = average_layer([[[[[0.0915]]]], [[[[0.9554]]]]], Ave19348), 
LRes1052 = reshape_layer(Ave19348, [1, 1], Res1052), 
LAve16005 = average_pooling1D_layer(Res1052, 1, 5, true, Ave16005), 
LRes59250 = reshape_layer(Ave16005, [1, 1, 1], Res59250), 
LUp_29241 = up_sampling2D_layer(Res59250, 2, 2, Up_29241), 
exec_layers([LAve19348,LRes1052,LAve16005,LRes59250,LUp_29241],["Ave19348","Res1052","Ave16005","Res59250","Up_29241"],Up_29241,"Up_29241")

Actual (Unparsed): [[[[0.5234500], [0.5234500]], [[0.5234500], [0.5234500]]]]

Expected (Unparsed): [[[[0.52345],[0.52345]],[[0.52345],[0.52345]]]]

Actual:   [[[[0.5235], [0.5235]], [[0.5235], [0.5235]]]]

Expected: [[[[0.5235], [0.5235]], [[0.5235], [0.5235]]]]