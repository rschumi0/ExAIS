import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Con54359 = tf.keras.layers.Input(shape=([1, 1]))
in0Con45776 = tf.keras.layers.Input(shape=([3, 6, 1]))
in0Mul32287 = tf.keras.layers.Input(shape=([1, 1, 1]))
in1Mul32287 = tf.keras.layers.Input(shape=([1, 1, 1]))
in0Con70523 = tf.keras.layers.Input(shape=([3, 6, 1]))
in0Zer84983 = tf.keras.layers.Input(shape=([1, 4, 2]))

Con54359 = keras.layers.Conv1D(4, (1),strides=(1), padding='same', dilation_rate=(1), name = 'Con54359', )(in0Con54359)
Res82544 = keras.layers.Reshape((1, 4, 1), name = 'Res82544', )(Con54359)
Zer32002 = keras.layers.ZeroPadding2D(padding=((2, 0), (2, 0)), name = 'Zer32002', )(Res82544)
Con45776 = keras.layers.Concatenate(axis=3, name = 'Con45776', )([Zer32002,in0Con45776])
Mul32287 = keras.layers.Multiply(name = 'Mul32287', )([in0Mul32287,in1Mul32287])
Zer44928 = keras.layers.ZeroPadding2D(padding=((2, 0), (5, 0)), name = 'Zer44928', )(Mul32287)
Con70523 = keras.layers.Concatenate(axis=3, name = 'Con70523', )([Zer44928,in0Con70523])
Zer84983 = keras.layers.ZeroPadding2D(padding=((1, 1), (1, 1)), name = 'Zer84983', )(in0Zer84983)
Ave63937 = keras.layers.Average(name = 'Ave63937', )([Con70523,Zer84983])
Add95083 = keras.layers.Add(name = 'Add95083', )([Con45776,Ave63937])
model = tf.keras.models.Model(inputs=[in0Con54359,in0Con45776,in0Mul32287,in1Mul32287,in0Con70523,in0Zer84983], outputs=Add95083)
w = model.get_layer('Con54359').get_weights() 
w[0] = np.array([[[0.1817, 0.3421, 0.643, 0.9673]]])
w[1] = np.array([0, 0, 0, 0])
model.get_layer('Con54359').set_weights(w) 
in0Con54359 = tf.constant([[[0.7087]]])
in0Con45776 = tf.constant([[[[0.2621], [0.1655], [0.155], [0.536], [0.5876], [0.3687]], [[0.5347], [0.8021], [0.7664], [0.8527], [0.5512], [0.3082]], [[0.8267], [0.9286], [0.0733], [0.5704], [0.8256], [0.9836]]]])
in0Mul32287 = tf.constant([[[[0.3317]]]])
in1Mul32287 = tf.constant([[[[0.1453]]]])
in0Con70523 = tf.constant([[[[0.1101], [0.4834], [0.3097], [0.3493], [0.4735], [0.5159]], [[0.7485], [0.3052], [0.7656], [0.6755], [0.4167], [0.3651]], [[0.1451], [0.5677], [0.9455], [0.2055], [0.162], [0.7084]]]])
in0Zer84983 = tf.constant([[[[1.8775, 1.5356], [1.6757, 1.7776], [1.8574, 1.7427], [1.9397, 1.7384]]]])
print (np.array2string(model.predict([in0Con54359,in0Con45776,in0Mul32287,in1Mul32287,in0Con70523,in0Zer84983],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Add95083.png')

LCon54359 = conv1D_layer([[[0.7087]]], 1,[[[0.1817, 0.3421, 0.643, 0.9673]]],[0, 0, 0, 0], 1, true, 1, Con54359), 
LRes82544 = reshape_layer(Con54359, [1, 4, 1], Res82544), 
LZer32002 = zero_padding2D_layer(Res82544, 2, 0, 2, 0, Zer32002), 
LCon45776 = concatenate_layer([Zer32002,[[[[0.2621], [0.1655], [0.155], [0.536], [0.5876], [0.3687]], [[0.5347], [0.8021], [0.7664], [0.8527], [0.5512], [0.3082]], [[0.8267], [0.9286], [0.0733], [0.5704], [0.8256], [0.9836]]]]], 3, Con45776), 
LMul32287 = multiply_layer([[[[[0.3317]]]], [[[[0.1453]]]]], Mul32287), 
LZer44928 = zero_padding2D_layer(Mul32287, 2, 0, 5, 0, Zer44928), 
LCon70523 = concatenate_layer([Zer44928,[[[[0.1101], [0.4834], [0.3097], [0.3493], [0.4735], [0.5159]], [[0.7485], [0.3052], [0.7656], [0.6755], [0.4167], [0.3651]], [[0.1451], [0.5677], [0.9455], [0.2055], [0.162], [0.7084]]]]], 3, Con70523), 
LZer84983 = zero_padding2D_layer([[[[1.8775, 1.5356], [1.6757, 1.7776], [1.8574, 1.7427], [1.9397, 1.7384]]]], 1, 1, 1, 1, Zer84983), 
LAve63937 = average_layer([Con70523,Zer84983], Ave63937), 
LAdd95083 = add_layer([Con45776,Ave63937], Add95083), 
exec_layers([LCon54359,LRes82544,LZer32002,LCon45776,LMul32287,LZer44928,LCon70523,LZer84983,LAve63937,LAdd95083],["Con54359","Res82544","Zer32002","Con45776","Mul32287","Zer44928","Con70523","Zer84983","Ave63937","Add95083"],Add95083,"Add95083")

Actual (Unparsed): [[[[0.0000000, 0.3171500], [0.0000000, 0.4072000], [0.0000000, 0.3098500], [0.0000000, 0.7106500], [0.0000000, 0.8243500], [0.0000000, 0.6266500]], [[0.0000000, 0.9089500], [0.9387500, 1.7225000], [0.8378500, 2.0380000], [0.9287000, 2.0618000], [0.9698500, 1.6287500], [0.0000000, 0.4907500]], [[0.0000000, 0.8992500], [0.0000000, 1.2124500], [0.1287708, 0.5460500], [0.2424463, 0.6731500], [0.4556941, 0.9066000], [0.7096235, 1.3378000]]]]

Expected (Unparsed): [[[[0,0.31715],[0,0.4072],[0,0.30984999999999996],[0,0.71065],[0,0.82435],[0,0.62665]],[[0,0.9089499999999999],[0.93875,1.7225000000000001],[0.83785,2.0380000000000003],[0.9287,2.0618],[0.96985,1.6287500000000001],[0,0.49074999999999996]],[[0,0.89925],[0,1.21245],[0.12877079,0.54605],[0.24244627000000002,0.67315],[0.4556941,0.9066],[0.7096235150000001,1.3378]]]]

Actual:   [[[[0, 0.3172], [0, 0.4072], [0, 0.3099], [0, 0.7107], [0, 0.8244], [0, 0.6267]], [[0, 0.909], [0.9388, 1.7225], [0.8379, 2.038], [0.9287, 2.0618], [0.9699, 1.6288], [0, 0.4908]], [[0, 0.8993], [0, 1.2125], [0.1288, 0.5461], [0.2425, 0.6732], [0.4557, 0.9066], [0.7097, 1.3378]]]]

Expected: [[[[0, 0.3172], [0, 0.4072], [0, 0.3099], [0, 0.7107], [0, 0.8244], [0, 0.6267]], [[0, 0.909], [0.9388, 1.7226], [0.8379, 2.0381], [0.9287, 2.0618], [0.9699, 1.6288], [0, 0.4908]], [[0, 0.8993], [0, 1.2125], [0.1288, 0.5461], [0.2425, 0.6732], [0.4557, 0.9066], [0.7097, 1.3378]]]]