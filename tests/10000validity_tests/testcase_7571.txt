import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Per53326 = tf.keras.layers.Input(shape=([3, 1]))
in0Min56010 = tf.keras.layers.Input(shape=([2, 1, 1]))
in1Min56010 = tf.keras.layers.Input(shape=([2, 1, 1]))
in0Con81125 = tf.keras.layers.Input(shape=([3, 3, 3, 1]))
in0Add65596 = tf.keras.layers.Input(shape=([1, 2, 2, 2]))
in1Add65596 = tf.keras.layers.Input(shape=([1, 2, 2, 2]))
in0Con20641 = tf.keras.layers.Input(shape=([1, 1, 1, 1]))
in0Con48819 = tf.keras.layers.Input(shape=([4, 6]))
in0Con44396 = tf.keras.layers.Input(shape=([1, 1, 2]))
in0Con21007 = tf.keras.layers.Input(shape=([1, 1, 4, 1]))
in0Con5931 = tf.keras.layers.Input(shape=([2, 1, 1, 1]))

Per53326 = keras.layers.Permute((1,2), name = 'Per53326',)(in0Per53326)
Res49438 = keras.layers.Reshape((3, 1, 1), name = 'Res49438', )(Per53326)
Min56010 = keras.layers.Minimum(name = 'Min56010', )([in0Min56010,in1Min56010])
Zer15335 = keras.layers.ZeroPadding2D(padding=((1, 0), (0, 0)), name = 'Zer15335', )(Min56010)
Ave87890 = keras.layers.Average(name = 'Ave87890', )([Res49438,Zer15335])
Res73646 = keras.layers.Reshape((3, 1, 1, 1), name = 'Res73646', )(Ave87890)
Zer38530 = keras.layers.ZeroPadding3D(padding=((0, 0), (2, 0), (2, 0)), name = 'Zer38530', )(Res73646)
Con81125 = keras.layers.Concatenate(axis=4, name = 'Con81125', )([Zer38530,in0Con81125])
Add65596 = keras.layers.Add(name = 'Add65596', )([in0Add65596,in1Add65596])
Zer17537 = keras.layers.ZeroPadding3D(padding=((2, 0), (1, 0), (1, 0)), name = 'Zer17537', )(Add65596)
Max50221 = keras.layers.Maximum(name = 'Max50221', )([Con81125,Zer17537])
Res52723 = keras.layers.Reshape((3, 3, 6), name = 'Res52723', )(Max50221)
Loc39774 = keras.layers.LocallyConnected2D(4, (3, 3),strides=(2, 1), name = 'Loc39774', )(Res52723)
Res38630 = keras.layers.Reshape((1, 4), name = 'Res38630', )(Loc39774)
Con20641 = keras.layers.Conv3D(2, (1, 1, 1),strides=(1, 1, 1), padding='valid', dilation_rate=(1, 1, 1), name = 'Con20641', )(in0Con20641)
Res13983 = keras.layers.Reshape((1, 1, 2), name = 'Res13983', )(Con20641)
Res99497 = keras.layers.Reshape((1, 2), name = 'Res99497', )(Res13983)
Ave13448 = keras.layers.AveragePooling1D(pool_size=(1), strides=(8), padding='same', name = 'Ave13448', )(Res99497)
Dot69328 = keras.layers.Dot(axes=(1, 1), name = 'Dot69328', )([Res38630,Ave13448])
Con48819 = keras.layers.Concatenate(axis=2, name = 'Con48819', )([Dot69328,in0Con48819])
Con44396 = keras.layers.Conv2DTranspose(4, (1, 1),strides=(1, 1), padding='valid', name = 'Con44396', )(in0Con44396)
Res394 = keras.layers.Reshape((1, 1, 4, 1), name = 'Res394', )(Con44396)
Con21007 = keras.layers.Concatenate(axis=4, name = 'Con21007', )([Res394,in0Con21007])
Con5931 = keras.layers.Conv3D(2, (2, 1, 1),strides=(2, 8, 1), padding='same', dilation_rate=(1, 1, 1), name = 'Con5931', )(in0Con5931)
Zer97215 = keras.layers.ZeroPadding3D(padding=((0, 0), (0, 0), (3, 0)), name = 'Zer97215', )(Con5931)
Min77159 = keras.layers.Minimum(name = 'Min77159', )([Con21007,Zer97215])
Res19433 = keras.layers.Reshape((1, 1, 8), name = 'Res19433', )(Min77159)
Res14232 = keras.layers.Reshape((1, 8), name = 'Res14232', )(Res19433)
Max19907 = keras.layers.MaxPool1D(pool_size=(1), strides=(11), padding='valid', name = 'Max19907', )(Res14232)
Zer22861 = keras.layers.ZeroPadding1D(padding=((3, 0)), name = 'Zer22861', )(Max19907)
Mul18626 = keras.layers.Multiply(name = 'Mul18626', )([Con48819,Zer22861])
model = tf.keras.models.Model(inputs=[in0Per53326,in0Min56010,in1Min56010,in0Con81125,in0Add65596,in1Add65596,in0Con20641,in0Con48819,in0Con44396,in0Con21007,in0Con5931], outputs=Mul18626)
w = model.get_layer('Loc39774').get_weights() 
w[0] = np.array([[[0.7842, 0.8673, 0.3736, 0.7268], [0.1119, 0.5375, 0.6888, 0.4436], [0.0528, 0.6958, 0.0158, 0.6757], [0.0626, 0.9479, 0.3406, 0.5509], [0.0605, 0.0988, 0.5796, 0.3482], [0.3388, 0.0454, 0.2631, 0.7005], [0.8072, 0.5823, 0.2627, 0.5679], [0.3523, 0.4267, 0.286, 0.8472], [0.9868, 0.7048, 0.9041, 0.1831], [0.9008, 0.8646, 0.9463, 0.5381], [0.4813, 0.4764, 0.2009, 0.3376], [0.8671, 0.6713, 0.493, 0.5614], [0.6246, 0.023, 0.3769, 0.976], [0.6894, 0.5317, 0.8757, 0.8166], [0.8034, 0.9876, 0.9297, 0.6182], [0.2963, 0.4034, 0.4712, 0.5654], [0.2103, 0.3917, 0.3377, 0.6897], [0.4453, 0.3325, 0.5519, 0.4735], [0.8167, 0.9295, 0.8536, 0.9402], [0.6585, 0.2821, 0.7497, 0.1043], [0.8811, 0.9175, 0.7645, 0.7389], [0.1958, 0.3204, 0.0193, 0.7732], [0.5597, 0.3716, 0.7471, 0.2788], [0.7567, 0.7685, 0.8559, 0.9237], [0.4356, 0.9353, 0.1979, 0.9771], [0.853, 0.1519, 0.7687, 0.4357], [0.0323, 0.6311, 0.6655, 0.6056], [0.0433, 0.057, 0.2675, 0.5248], [0.6297, 0.658, 0.7653, 0.9375], [0.4709, 0.2378, 0.863, 0.1445], [0.9466, 0.7071, 0.205, 0.944], [0.3959, 0.572, 0.8369, 0.0496], [0.5079, 0.5193, 0.8005, 0.828], [0.6641, 0.712, 0.7852, 0.9329], [0.7629, 0.6558, 0.6092, 0.4283], [0.3027, 0.5321, 0.1878, 0.2937], [0.2693, 0.7067, 0.5625, 0.7801], [0.6855, 0.7153, 0.5095, 0.9493], [0.5116, 0.4071, 0.2237, 0.8674], [0.9582, 0.0805, 0.5852, 0.3491], [0.1691, 0.3867, 0.5516, 0.8515], [0.665, 0.4964, 0.2944, 0.1018], [0.8992, 0.5228, 0.7987, 0.3116], [0.7692, 0.4806, 0.7776, 0.3754], [0.955, 0.1211, 0.9224, 0.2825], [0.5076, 0.8295, 0.6994, 0.0811], [0.2, 0.3961, 0.1385, 0.1239], [0.7708, 0.8801, 0.312, 0.9998], [0.3394, 0.9743, 0.4957, 0.5072], [0.952, 0.2476, 0.3231, 0.2629], [0.4328, 0.3924, 0.5996, 0.0548], [0.4526, 0.1396, 0.8216, 0.8463], [0.0055, 0.813, 0.8669, 0.4171], [0.2898, 0.5925, 0.7654, 0.9887]]])
w[1] = np.array([[[0, 0, 0, 0]]])
model.get_layer('Loc39774').set_weights(w) 
w = model.get_layer('Con20641').get_weights() 
w[0] = np.array([[[[[0.6095, 0.4003]]]]])
w[1] = np.array([0, 0])
model.get_layer('Con20641').set_weights(w) 
w = model.get_layer('Con44396').get_weights() 
w[0] = np.array([[[[0.7983, 0.0545], [0.3944, 0.9445], [0.0052, 0.5344], [0.471, 0.1214]]]])
w[1] = np.array([0, 0, 0, 0])
model.get_layer('Con44396').set_weights(w) 
w = model.get_layer('Con5931').get_weights() 
w[0] = np.array([[[[[0.2751, 0.0791]]]], [[[[0.3122, 0.5449]]]]])
w[1] = np.array([0, 0])
model.get_layer('Con5931').set_weights(w) 
in0Per53326 = tf.constant([[[1.8186], [1.382], [1.7909]]])
in0Min56010 = tf.constant([[[[0.2166]], [[0.9482]]]])
in1Min56010 = tf.constant([[[[0.8835]], [[0.6738]]]])
in0Con81125 = tf.constant([[[[[0.0853], [0.4493], [0.5339]], [[0.1172], [0.9133], [0.6263]], [[0.7312], [0.6699], [0.5157]]], [[[0.2261], [0.3499], [0.6001]], [[0.8941], [0.2641], [0.5564]], [[0.0049], [0.1039], [0.2339]]], [[[0.8687], [0.4708], [0.2128]], [[0.662], [0.8093], [0.253]], [[0.8897], [0.6311], [0.0496]]]]])
in0Add65596 = tf.constant([[[[[0.2024, 0.4466], [0.0904, 0.6073]], [[0.9056, 0.4928], [0.2348, 0.1333]]]]])
in1Add65596 = tf.constant([[[[[0.2413, 0.7411], [0.3844, 0.1085]], [[0.6429, 0.0542], [0.8574, 0.8348]]]]])
in0Con20641 = tf.constant([[[[[0.4669]]]]])
in0Con48819 = tf.constant([[[0.991, 0.2956, 0.1988, 0.5282, 0.1551, 0.8263], [0.3249, 0.215, 0.4637, 0.67, 0.4917, 0.5473], [0.2688, 0.1296, 0.1172, 0.4085, 0.5379, 0.7642], [0.3589, 0.4573, 0.4856, 0.8969, 0.547, 0.7866]]])
in0Con44396 = tf.constant([[[[0.1543, 0.4277]]]])
in0Con21007 = tf.constant([[[[[0.352], [0.0934], [0.5742], [0.2056]]]]])
in0Con5931 = tf.constant([[[[[0.0906]]], [[[0.1472]]]]])
print (np.array2string(model.predict([in0Per53326,in0Min56010,in1Min56010,in0Con81125,in0Add65596,in1Add65596,in0Con20641,in0Con48819,in0Con44396,in0Con21007,in0Con5931],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Mul18626.png')

LPer53326 = permute_layer([[[1.8186], [1.382], [1.7909]]], 1,2, Per53326), 
LRes49438 = reshape_layer(Per53326, [3, 1, 1], Res49438), 
LMin56010 = minimum_layer([[[[[0.2166]], [[0.9482]]]], [[[[0.8835]], [[0.6738]]]]], Min56010), 
LZer15335 = zero_padding2D_layer(Min56010, 1, 0, 0, 0, Zer15335), 
LAve87890 = average_layer([Res49438,Zer15335], Ave87890), 
LRes73646 = reshape_layer(Ave87890, [3, 1, 1, 1], Res73646), 
LZer38530 = zero_padding3D_layer(Res73646, 0, 0, 2, 0, 2, 0, Zer38530), 
LCon81125 = concatenate_layer([Zer38530,[[[[[0.0853], [0.4493], [0.5339]], [[0.1172], [0.9133], [0.6263]], [[0.7312], [0.6699], [0.5157]]], [[[0.2261], [0.3499], [0.6001]], [[0.8941], [0.2641], [0.5564]], [[0.0049], [0.1039], [0.2339]]], [[[0.8687], [0.4708], [0.2128]], [[0.662], [0.8093], [0.253]], [[0.8897], [0.6311], [0.0496]]]]]], 4, Con81125), 
LAdd65596 = add_layer([[[[[[0.2024, 0.4466], [0.0904, 0.6073]], [[0.9056, 0.4928], [0.2348, 0.1333]]]]], [[[[[0.2413, 0.7411], [0.3844, 0.1085]], [[0.6429, 0.0542], [0.8574, 0.8348]]]]]], Add65596), 
LZer17537 = zero_padding3D_layer(Add65596, 2, 0, 1, 0, 1, 0, Zer17537), 
LMax50221 = maximum_layer([Con81125,Zer17537], Max50221), 
LRes52723 = reshape_layer(Max50221, [3, 3, 6], Res52723), 
LLoc39774 = locally_connected2D_layer(Res52723, 3, 3,[[[0.7842, 0.8673, 0.3736, 0.7268], [0.1119, 0.5375, 0.6888, 0.4436], [0.0528, 0.6958, 0.0158, 0.6757], [0.0626, 0.9479, 0.3406, 0.5509], [0.0605, 0.0988, 0.5796, 0.3482], [0.3388, 0.0454, 0.2631, 0.7005], [0.8072, 0.5823, 0.2627, 0.5679], [0.3523, 0.4267, 0.286, 0.8472], [0.9868, 0.7048, 0.9041, 0.1831], [0.9008, 0.8646, 0.9463, 0.5381], [0.4813, 0.4764, 0.2009, 0.3376], [0.8671, 0.6713, 0.493, 0.5614], [0.6246, 0.023, 0.3769, 0.976], [0.6894, 0.5317, 0.8757, 0.8166], [0.8034, 0.9876, 0.9297, 0.6182], [0.2963, 0.4034, 0.4712, 0.5654], [0.2103, 0.3917, 0.3377, 0.6897], [0.4453, 0.3325, 0.5519, 0.4735], [0.8167, 0.9295, 0.8536, 0.9402], [0.6585, 0.2821, 0.7497, 0.1043], [0.8811, 0.9175, 0.7645, 0.7389], [0.1958, 0.3204, 0.0193, 0.7732], [0.5597, 0.3716, 0.7471, 0.2788], [0.7567, 0.7685, 0.8559, 0.9237], [0.4356, 0.9353, 0.1979, 0.9771], [0.853, 0.1519, 0.7687, 0.4357], [0.0323, 0.6311, 0.6655, 0.6056], [0.0433, 0.057, 0.2675, 0.5248], [0.6297, 0.658, 0.7653, 0.9375], [0.4709, 0.2378, 0.863, 0.1445], [0.9466, 0.7071, 0.205, 0.944], [0.3959, 0.572, 0.8369, 0.0496], [0.5079, 0.5193, 0.8005, 0.828], [0.6641, 0.712, 0.7852, 0.9329], [0.7629, 0.6558, 0.6092, 0.4283], [0.3027, 0.5321, 0.1878, 0.2937], [0.2693, 0.7067, 0.5625, 0.7801], [0.6855, 0.7153, 0.5095, 0.9493], [0.5116, 0.4071, 0.2237, 0.8674], [0.9582, 0.0805, 0.5852, 0.3491], [0.1691, 0.3867, 0.5516, 0.8515], [0.665, 0.4964, 0.2944, 0.1018], [0.8992, 0.5228, 0.7987, 0.3116], [0.7692, 0.4806, 0.7776, 0.3754], [0.955, 0.1211, 0.9224, 0.2825], [0.5076, 0.8295, 0.6994, 0.0811], [0.2, 0.3961, 0.1385, 0.1239], [0.7708, 0.8801, 0.312, 0.9998], [0.3394, 0.9743, 0.4957, 0.5072], [0.952, 0.2476, 0.3231, 0.2629], [0.4328, 0.3924, 0.5996, 0.0548], [0.4526, 0.1396, 0.8216, 0.8463], [0.0055, 0.813, 0.8669, 0.4171], [0.2898, 0.5925, 0.7654, 0.9887]]],[[[0, 0, 0, 0]]], 2, 1, Loc39774), 
LRes38630 = reshape_layer(Loc39774, [1, 4], Res38630), 
LCon20641 = conv3D_layer([[[[[0.4669]]]]], 1, 1, 1,[[[[[0.6095, 0.4003]]]]],[0, 0], 1, 1, 1, false, 1, 1, 1, Con20641), 
LRes13983 = reshape_layer(Con20641, [1, 1, 2], Res13983), 
LRes99497 = reshape_layer(Res13983, [1, 2], Res99497), 
LAve13448 = average_pooling1D_layer(Res99497, 1, 8, true, Ave13448), 
LDot69328 = dot_layer(Res38630,Ave13448, 1, 1, Dot69328), 
LCon48819 = concatenate_layer([Dot69328,[[[0.991, 0.2956, 0.1988, 0.5282, 0.1551, 0.8263], [0.3249, 0.215, 0.4637, 0.67, 0.4917, 0.5473], [0.2688, 0.1296, 0.1172, 0.4085, 0.5379, 0.7642], [0.3589, 0.4573, 0.4856, 0.8969, 0.547, 0.7866]]]], 2, Con48819), 
LCon44396 = conv2D_transpose_layer([[[[0.1543, 0.4277]]]], 1, 1,[[[[0.7983, 0.0545], [0.3944, 0.9445], [0.0052, 0.5344], [0.471, 0.1214]]]],[0, 0, 0, 0], 1, 1, false, Con44396), 
LRes394 = reshape_layer(Con44396, [1, 1, 4, 1], Res394), 
LCon21007 = concatenate_layer([Res394,[[[[[0.352], [0.0934], [0.5742], [0.2056]]]]]], 4, Con21007), 
LCon5931 = conv3D_layer([[[[[0.0906]]], [[[0.1472]]]]], 2, 1, 1,[[[[[0.2751, 0.0791]]]], [[[[0.3122, 0.5449]]]]],[0, 0], 2, 8, 1, true, 1, 1, 1, Con5931), 
LZer97215 = zero_padding3D_layer(Con5931, 0, 0, 0, 0, 3, 0, Zer97215), 
LMin77159 = minimum_layer([Con21007,Zer97215], Min77159), 
LRes19433 = reshape_layer(Min77159, [1, 1, 8], Res19433), 
LRes14232 = reshape_layer(Res19433, [1, 8], Res14232), 
LMax19907 = max_pool1D_layer(Res14232, 1, 11, false, Max19907), 
LZer22861 = zero_padding1D_layer(Max19907, 3, 0, Zer22861), 
LMul18626 = multiply_layer([Con48819,Zer22861], Mul18626), 
exec_layers([LPer53326,LRes49438,LMin56010,LZer15335,LAve87890,LRes73646,LZer38530,LCon81125,LAdd65596,LZer17537,LMax50221,LRes52723,LLoc39774,LRes38630,LCon20641,LRes13983,LRes99497,LAve13448,LDot69328,LCon48819,LCon44396,LRes394,LCon21007,LCon5931,LZer97215,LMin77159,LRes19433,LRes14232,LMax19907,LZer22861,LMul18626],["Per53326","Res49438","Min56010","Zer15335","Ave87890","Res73646","Zer38530","Con81125","Add65596","Zer17537","Max50221","Res52723","Loc39774","Res38630","Con20641","Res13983","Res99497","Ave13448","Dot69328","Con48819","Con44396","Res394","Con21007","Con5931","Zer97215","Min77159","Res19433","Res14232","Max19907","Zer22861","Mul18626"],Mul18626,"Mul18626")

Actual (Unparsed): [[[0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0387713, 0.0687298]]]

Expected (Unparsed): [[[0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0],[0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0],[0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0],[0.0,0.0,0.0,0.0,0.0,0.0,0.0387713053,0.068729757084]]]

Actual:   [[[0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0.0388, 0.0688]]]

Expected: [[[0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0.0388, 0.0688]]]