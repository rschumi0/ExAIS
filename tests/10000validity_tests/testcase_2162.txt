import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Glo81628 = tf.keras.layers.Input(shape=([2, 1, 1]))
in0Con16026 = tf.keras.layers.Input(shape=([6, 3]))
in0Con29209 = tf.keras.layers.Input(shape=([2, 1, 2]))
in0Glo50 = tf.keras.layers.Input(shape=([1, 1, 1]))
in0Con751 = tf.keras.layers.Input(shape=([5]))
in0Con1073 = tf.keras.layers.Input(shape=([6, 3]))
in0Add11729 = tf.keras.layers.Input(shape=([2, 2, 1, 2]))
in1Add11729 = tf.keras.layers.Input(shape=([2, 2, 1, 2]))

Glo81628 = keras.layers.GlobalAveragePooling2D(name = 'Glo81628', )(in0Glo81628)
Res28692 = keras.layers.Reshape((1, 1), name = 'Res28692', )(Glo81628)
Zer80511 = keras.layers.ZeroPadding1D(padding=((5, 0)), name = 'Zer80511', )(Res28692)
Con16026 = keras.layers.Concatenate(axis=2, name = 'Con16026', )([Zer80511,in0Con16026])
Con29209 = keras.layers.Conv2D(3, (1, 1),strides=(1, 1), padding='valid', dilation_rate=(1, 1), name = 'Con29209', )(in0Con29209)
Res94330 = keras.layers.Reshape((2, 3), name = 'Res94330', )(Con29209)
Fla85740 = keras.layers.Flatten(name = 'Fla85740', )(Res94330)
Glo50 = keras.layers.GlobalMaxPool2D(name = 'Glo50', )(in0Glo50)
Con751 = keras.layers.Concatenate(axis=1, name = 'Con751', )([Glo50,in0Con751])
Mul98409 = keras.layers.Multiply(name = 'Mul98409', )([Fla85740,Con751])
Res53144 = keras.layers.Reshape((6, 1), name = 'Res53144', )(Mul98409)
Con1073 = keras.layers.Concatenate(axis=2, name = 'Con1073', )([Res53144,in0Con1073])
Add11729 = keras.layers.Add(name = 'Add11729', )([in0Add11729,in1Add11729])
Res93937 = keras.layers.Reshape((2, 2, 2), name = 'Res93937', )(Add11729)
Up_56612 = keras.layers.UpSampling2D(size=(1, 1), name = 'Up_56612', )(Res93937)
Res93708 = keras.layers.Reshape((2, 4), name = 'Res93708', )(Up_56612)
Cro21678 = keras.layers.Cropping1D(cropping=((0, 1)), name = 'Cro21678', )(Res93708)
Zer26780 = keras.layers.ZeroPadding1D(padding=((5, 0)), name = 'Zer26780', )(Cro21678)
Max31724 = keras.layers.Maximum(name = 'Max31724', )([Con1073,Zer26780])
Mul93232 = keras.layers.Multiply(name = 'Mul93232', )([Con16026,Max31724])
Lay76981 = keras.layers.LayerNormalization(axis=1, epsilon=1.8264981540374163, name = 'Lay76981', )(Mul93232)
model = tf.keras.models.Model(inputs=[in0Glo81628,in0Con16026,in0Con29209,in0Glo50,in0Con751,in0Con1073,in0Add11729,in1Add11729], outputs=Lay76981)
w = model.get_layer('Con29209').get_weights() 
w[0] = np.array([[[[0.0578, 0.1939, 0.1437], [0.5395, 0.2536, 0.9281]]]])
w[1] = np.array([0, 0, 0])
model.get_layer('Con29209').set_weights(w) 
in0Glo81628 = tf.constant([[[[1.6445]], [[1.4373]]]])
in0Con16026 = tf.constant([[[0.2342, 0.0645, 0.1115], [0.1612, 0.8841, 0.2645], [0.1066, 0.4799, 0.9122], [0.3188, 0.4395, 0.804], [0.6266, 0.86, 0.454], [0.7726, 0.6278, 0.9019]]])
in0Con29209 = tf.constant([[[[0.0245, 0.0944]], [[0.4805, 0.6435]]]])
in0Glo50 = tf.constant([[[[1.6201]]]])
in0Con751 = tf.constant([[0.3144, 0.0857, 0.0241, 0.4586, 0.4116]])
in0Con1073 = tf.constant([[[0.1292, 0.9616, 0.2046], [0.0468, 0.8425, 0.1603], [0.9305, 0.266, 0.1549], [0.3659, 0.2473, 0.4967], [0.0568, 0.7964, 0.0217], [0.4728, 0.0929, 0.8568]]])
in0Add11729 = tf.constant([[[[[0.6864, 0.5071]], [[0.9306, 0.6997]]], [[[0.3894, 0.8847]], [[0.191, 0.7523]]]]])
in1Add11729 = tf.constant([[[[[0.3726, 0.3281]], [[0.0142, 0.8648]]], [[[0.2143, 0.7775]], [[0.0075, 0.939]]]]])
print (np.array2string(model.predict([in0Glo81628,in0Con16026,in0Con29209,in0Glo50,in0Con751,in0Con1073,in0Add11729,in1Add11729],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Lay76981.png')

LGlo81628 = global_average_pooling2D_layer([[[[1.6445]], [[1.4373]]]], Glo81628), 
LRes28692 = reshape_layer(Glo81628, [1, 1], Res28692), 
LZer80511 = zero_padding1D_layer(Res28692, 5, 0, Zer80511), 
LCon16026 = concatenate_layer([Zer80511,[[[0.2342, 0.0645, 0.1115], [0.1612, 0.8841, 0.2645], [0.1066, 0.4799, 0.9122], [0.3188, 0.4395, 0.804], [0.6266, 0.86, 0.454], [0.7726, 0.6278, 0.9019]]]], 2, Con16026), 
LCon29209 = conv2D_layer([[[[0.0245, 0.0944]], [[0.4805, 0.6435]]]], 1, 1,[[[[0.0578, 0.1939, 0.1437], [0.5395, 0.2536, 0.9281]]]],[0, 0, 0], 1, 1, false, 1, 1, Con29209), 
LRes94330 = reshape_layer(Con29209, [2, 3], Res94330), 
LFla85740 = flatten_layer(Res94330, Fla85740), 
LGlo50 = global_max_pool2D_layer([[[[1.6201]]]], Glo50), 
LCon751 = concatenate_layer([Glo50,[[0.3144, 0.0857, 0.0241, 0.4586, 0.4116]]], 1, Con751), 
LMul98409 = multiply_layer([Fla85740,Con751], Mul98409), 
LRes53144 = reshape_layer(Mul98409, [6, 1], Res53144), 
LCon1073 = concatenate_layer([Res53144,[[[0.1292, 0.9616, 0.2046], [0.0468, 0.8425, 0.1603], [0.9305, 0.266, 0.1549], [0.3659, 0.2473, 0.4967], [0.0568, 0.7964, 0.0217], [0.4728, 0.0929, 0.8568]]]], 2, Con1073), 
LAdd11729 = add_layer([[[[[[0.6864, 0.5071]], [[0.9306, 0.6997]]], [[[0.3894, 0.8847]], [[0.191, 0.7523]]]]], [[[[[0.3726, 0.3281]], [[0.0142, 0.8648]]], [[[0.2143, 0.7775]], [[0.0075, 0.939]]]]]], Add11729), 
LRes93937 = reshape_layer(Add11729, [2, 2, 2], Res93937), 
LUp_56612 = up_sampling2D_layer(Res93937, 1, 1, Up_56612), 
LRes93708 = reshape_layer(Up_56612, [2, 4], Res93708), 
LCro21678 = cropping1D_layer(Res93708, 0, 1, Cro21678), 
LZer26780 = zero_padding1D_layer(Cro21678, 5, 0, Zer26780), 
LMax31724 = maximum_layer([Con1073,Zer26780], Max31724), 
LMul93232 = multiply_layer([Con16026,Max31724], Mul93232), 
LLay76981 = layer_normalization_layer(Mul93232, 1, 1.8264981540374163, Lay76981), 
exec_layers([LGlo81628,LRes28692,LZer80511,LCon16026,LCon29209,LRes94330,LFla85740,LGlo50,LCon751,LMul98409,LRes53144,LCon1073,LAdd11729,LRes93937,LUp_56612,LRes93708,LCro21678,LZer26780,LMax31724,LMul93232,LLay76981],["Glo81628","Res28692","Zer80511","Con16026","Con29209","Res94330","Fla85740","Glo50","Con751","Mul98409","Res53144","Con1073","Add11729","Res93937","Up_56612","Res93708","Cro21678","Zer26780","Max31724","Mul93232","Lay76981"],Lay76981,"Lay76981")

Actual (Unparsed): [[[-0.1835143, -0.0916247, -0.2349684, -0.2186839], [-0.1835143, -0.1082089, 0.2589251, -0.2050853], [-0.1835143, -0.0412957, -0.1874979, -0.1364199], [-0.1835143, -0.0285496, -0.2012154, 0.0427389], [-0.1835143, -0.0877315, 0.2155629, -0.2276826], [0.9175717, 0.3574103, 0.1491937, 0.7451328]]]

Expected (Unparsed): [[[-0.1835143495901314,-0.0916246706318982,-0.23496841634318139,-0.21868388433930674],[-0.1835143495901314,-0.10820892560606162,0.2589250947469339,-0.20508525630087215],[-0.1835143495901314,-0.04129568183324138,-0.18749791846300076,-0.1364199208056069],[-0.1835143495901314,-0.02854955595573706,-0.2012153894721173,0.042738907946234014],[-0.1835143495901314,-0.08773150522624361,0.21556291977959727,-0.22768261447513813],[0.9175717479506572,0.3574103392531819,0.1491937097517683,0.7451327679746901]]]

Actual:   [[[-0.1835, -0.0916, -0.2349, -0.2186], [-0.1835, -0.1082, 0.259, -0.205], [-0.1835, -0.0412, -0.1874, -0.1364], [-0.1835, -0.0285, -0.2012, 0.0428], [-0.1835, -0.0877, 0.2156, -0.2276], [0.9176, 0.3575, 0.1492, 0.7452]]]

Expected: [[[-0.1835, -0.0916, -0.2349, -0.2186], [-0.1835, -0.1082, 0.259, -0.205], [-0.1835, -0.0412, -0.1874, -0.1364], [-0.1835, -0.0285, -0.2012, 0.0428], [-0.1835, -0.0877, 0.2156, -0.2276], [0.9176, 0.3575, 0.1492, 0.7452]]]