import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Mul40863 = tf.keras.layers.Input(shape=([2, 1]))
in1Mul40863 = tf.keras.layers.Input(shape=([2, 1]))

Mul40863 = keras.layers.Multiply(name = 'Mul40863', )([in0Mul40863,in1Mul40863])
Up_3601 = keras.layers.UpSampling1D(size=(2), name = 'Up_3601', )(Mul40863)
Res59748 = keras.layers.Reshape((4, 1, 1), name = 'Res59748', )(Up_3601)
Res61639 = keras.layers.Reshape((4, 1, 1, 1), name = 'Res61639', )(Res59748)
Glo10334 = keras.layers.GlobalMaxPool3D(name = 'Glo10334', )(Res61639)
model = tf.keras.models.Model(inputs=[in0Mul40863,in1Mul40863], outputs=Glo10334)
in0Mul40863 = tf.constant([[[0.8021], [0.6295]]])
in1Mul40863 = tf.constant([[[0.4531], [0.1519]]])
print (np.array2string(model.predict([in0Mul40863,in1Mul40863],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Glo10334.png')

LMul40863 = multiply_layer([[[[0.8021], [0.6295]]], [[[0.4531], [0.1519]]]], Mul40863), 
LUp_3601 = up_sampling1D_layer(Mul40863, 2, Up_3601), 
LRes59748 = reshape_layer(Up_3601, [4, 1, 1], Res59748), 
LRes61639 = reshape_layer(Res59748, [4, 1, 1, 1], Res61639), 
LGlo10334 = global_max_pool3D_layer(Res61639, Glo10334), 
exec_layers([LMul40863,LUp_3601,LRes59748,LRes61639,LGlo10334],["Mul40863","Up_3601","Res59748","Res61639","Glo10334"],Glo10334,"Glo10334")

Actual (Unparsed): [[0.3634315]]

Expected (Unparsed): [[0.36343151]]

Actual:   [[0.3635]]

Expected: [[0.3635]]