import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Sub15878 = tf.keras.layers.Input(shape=([3]))
in1Sub15878 = tf.keras.layers.Input(shape=([3]))
in0Dot48167 = tf.keras.layers.Input(shape=([2]))
in1Dot48167 = tf.keras.layers.Input(shape=([2]))

Sub15878 = keras.layers.Subtract(name = 'Sub15878', )([in0Sub15878,in1Sub15878])
Res18779 = keras.layers.Reshape((3, 1), name = 'Res18779', )(Sub15878)
Res33021 = keras.layers.Reshape((3, 1, 1), name = 'Res33021', )(Res18779)
Glo70478 = keras.layers.GlobalAveragePooling2D(name = 'Glo70478', )(Res33021)
Res99363 = keras.layers.Reshape((1, 1), name = 'Res99363', )(Glo70478)
Res3014 = keras.layers.Reshape((1, 1, 1), name = 'Res3014', )(Res99363)
Con36651 = keras.layers.Conv2DTranspose(4, (1, 1),strides=(10, 6), padding='same', name = 'Con36651', )(Res3014)
Res43541 = keras.layers.Reshape((10, 6, 4, 1), name = 'Res43541', )(Con36651)
Dot48167 = keras.layers.Dot(axes=(1, 1), name = 'Dot48167', )([in0Dot48167,in1Dot48167])
Res38836 = keras.layers.Reshape((1, 1), name = 'Res38836', )(Dot48167)
Res48108 = keras.layers.Reshape((1, 1, 1), name = 'Res48108', )(Res38836)
Res82845 = keras.layers.Reshape((1, 1, 1, 1), name = 'Res82845', )(Res48108)
Zer71785 = keras.layers.ZeroPadding3D(padding=((1, 1), (1, 1), (1, 1)), name = 'Zer71785', )(Res82845)
Zer12279 = keras.layers.ZeroPadding3D(padding=((7, 0), (3, 0), (1, 0)), name = 'Zer12279', )(Zer71785)
Min71678 = keras.layers.Minimum(name = 'Min71678', )([Res43541,Zer12279])
model = tf.keras.models.Model(inputs=[in0Sub15878,in1Sub15878,in0Dot48167,in1Dot48167], outputs=Min71678)
w = model.get_layer('Con36651').get_weights() 
w[0] = np.array([[[[0.0991], [0.2836], [0.6649], [0.4093]]]])
w[1] = np.array([0, 0, 0, 0])
model.get_layer('Con36651').set_weights(w) 
in0Sub15878 = tf.constant([[0.9409, 0.6672, 0.7914]])
in1Sub15878 = tf.constant([[0.6422, 0.1631, 0.9965]])
in0Dot48167 = tf.constant([[0.7918, 0.325]])
in1Dot48167 = tf.constant([[0.5963, 0.293]])
print (np.array2string(model.predict([in0Sub15878,in1Sub15878,in0Dot48167,in1Dot48167],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Min71678.png')

LSub15878 = subtract_layer([[0.9409, 0.6672, 0.7914]], [[0.6422, 0.1631, 0.9965]], Sub15878), 
LRes18779 = reshape_layer(Sub15878, [3, 1], Res18779), 
LRes33021 = reshape_layer(Res18779, [3, 1, 1], Res33021), 
LGlo70478 = global_average_pooling2D_layer(Res33021, Glo70478), 
LRes99363 = reshape_layer(Glo70478, [1, 1], Res99363), 
LRes3014 = reshape_layer(Res99363, [1, 1, 1], Res3014), 
LCon36651 = conv2D_transpose_layer(Res3014, 1, 1,[[[[0.0991], [0.2836], [0.6649], [0.4093]]]],[0, 0, 0, 0], 10, 6, true, Con36651), 
LRes43541 = reshape_layer(Con36651, [10, 6, 4, 1], Res43541), 
LDot48167 = dot_layer([[0.7918, 0.325]], [[0.5963, 0.293]], 1, 1, Dot48167), 
LRes38836 = reshape_layer(Dot48167, [1, 1], Res38836), 
LRes48108 = reshape_layer(Res38836, [1, 1, 1], Res48108), 
LRes82845 = reshape_layer(Res48108, [1, 1, 1, 1], Res82845), 
LZer71785 = zero_padding3D_layer(Res82845, 1, 1, 1, 1, 1, 1, Zer71785), 
LZer12279 = zero_padding3D_layer(Zer71785, 7, 0, 3, 0, 1, 0, Zer12279), 
LMin71678 = minimum_layer([Res43541,Zer12279], Min71678), 
exec_layers([LSub15878,LRes18779,LRes33021,LGlo70478,LRes99363,LRes3014,LCon36651,LRes43541,LDot48167,LRes38836,LRes48108,LRes82845,LZer71785,LZer12279,LMin71678],["Sub15878","Res18779","Res33021","Glo70478","Res99363","Res3014","Con36651","Res43541","Dot48167","Res38836","Res48108","Res82845","Zer71785","Zer12279","Min71678"],Min71678,"Min71678")

Actual (Unparsed): [[[[[0.0000000], [0.0000000], [0.0000000], [0.0000000]], [[0.0000000], [0.0000000], [0.0000000], [0.0000000]], [[0.0000000], [0.0000000], [0.0000000], [0.0000000]], [[0.0000000], [0.0000000], [0.0000000], [0.0000000]], [[0.0000000], [0.0000000], [0.0000000], [0.0000000]], [[0.0000000], [0.0000000], [0.0000000], [0.0000000]]], [[[0.0000000], [0.0000000], [0.0000000], [0.0000000]], [[0.0000000], [0.0000000], [0.0000000], [0.0000000]], [[0.0000000], [0.0000000], [0.0000000], [0.0000000]], [[0.0000000], [0.0000000], [0.0000000], [0.0000000]], [[0.0000000], [0.0000000], [0.0000000], [0.0000000]], [[0.0000000], [0.0000000], [0.0000000], [0.0000000]]], [[[0.0000000], [0.0000000], [0.0000000], [0.0000000]], [[0.0000000], [0.0000000], [0.0000000], [0.0000000]], [[0.0000000], [0.0000000], [0.0000000], [0.0000000]], [[0.0000000], [0.0000000], [0.0000000], [0.0000000]], [[0.0000000], [0.0000000], [0.0000000], [0.0000000]], [[0.0000000], [0.0000000], [0.0000000], [0.0000000]]], [[[0.0000000], [0.0000000], [0.0000000], [0.0000000]], [[0.0000000], [0.0000000], [0.0000000], [0.0000000]], [[0.0000000], [0.0000000], [0.0000000], [0.0000000]], [[0.0000000], [0.0000000], [0.0000000], [0.0000000]], [[0.0000000], [0.0000000], [0.0000000], [0.0000000]], [[0.0000000], [0.0000000], [0.0000000], [0.0000000]]], [[[0.0000000], [0.0000000], [0.0000000], [0.0000000]], [[0.0000000], [0.0000000], [0.0000000], [0.0000000]], [[0.0000000], [0.0000000], [0.0000000], [0.0000000]], [[0.0000000], [0.0000000], [0.0000000], [0.0000000]], [[0.0000000], [0.0000000], [0.0000000], [0.0000000]], [[0.0000000], [0.0000000], [0.0000000], [0.0000000]]], [[[0.0000000], [0.0000000], [0.0000000], [0.0000000]], [[0.0000000], [0.0000000], [0.0000000], [0.0000000]], [[0.0000000], [0.0000000], [0.0000000], [0.0000000]], [[0.0000000], [0.0000000], [0.0000000], [0.0000000]], [[0.0000000], [0.0000000], [0.0000000], [0.0000000]], [[0.0000000], [0.0000000], [0.0000000], [0.0000000]]], [[[0.0000000], [0.0000000], [0.0000000], [0.0000000]], [[0.0000000], [0.0000000], [0.0000000], [0.0000000]], [[0.0000000], [0.0000000], [0.0000000], [0.0000000]], [[0.0000000], [0.0000000], [0.0000000], [0.0000000]], [[0.0000000], [0.0000000], [0.0000000], [0.0000000]], [[0.0000000], [0.0000000], [0.0000000], [0.0000000]]], [[[0.0000000], [0.0000000], [0.0000000], [0.0000000]], [[0.0000000], [0.0000000], [0.0000000], [0.0000000]], [[0.0000000], [0.0000000], [0.0000000], [0.0000000]], [[0.0000000], [0.0000000], [0.0000000], [0.0000000]], [[0.0000000], [0.0000000], [0.0000000], [0.0000000]], [[0.0000000], [0.0000000], [0.0000000], [0.0000000]]], [[[0.0000000], [0.0000000], [0.0000000], [0.0000000]], [[0.0000000], [0.0000000], [0.0000000], [0.0000000]], [[0.0000000], [0.0000000], [0.0000000], [0.0000000]], [[0.0000000], [0.0000000], [0.0000000], [0.0000000]], [[0.0000000], [0.0000000], [0.0000000], [0.0000000]], [[0.0000000], [0.0000000], [0.0000000], [0.0000000]]], [[[0.0000000], [0.0000000], [0.0000000], [0.0000000]], [[0.0000000], [0.0000000], [0.0000000], [0.0000000]], [[0.0000000], [0.0000000], [0.0000000], [0.0000000]], [[0.0000000], [0.0000000], [0.0000000], [0.0000000]], [[0.0000000], [0.0000000], [0.0000000], [0.0000000]], [[0.0000000], [0.0000000], [0.0000000], [0.0000000]]]]]

Expected (Unparsed

Actual

Expected