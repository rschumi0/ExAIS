import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Fla12215 = tf.keras.layers.Input(shape=([3]))
in0Con27518 = tf.keras.layers.Input(shape=([6]))
in0Zer12985 = tf.keras.layers.Input(shape=([1, 3, 3]))

Fla12215 = keras.layers.Flatten(name = 'Fla12215', )(in0Fla12215)
Res58666 = keras.layers.Reshape((3, 1), name = 'Res58666', )(Fla12215)
Res66359 = keras.layers.Reshape((3, 1, 1), name = 'Res66359', )(Res58666)
Res42032 = keras.layers.Reshape((3, 1, 1, 1), name = 'Res42032', )(Res66359)
Con73859 = keras.layers.Conv3D(3, (3, 1, 1),strides=(1, 1, 3), padding='same', dilation_rate=(1, 1, 1), name = 'Con73859', )(Res42032)
Res10047 = keras.layers.Reshape((3, 1, 3), name = 'Res10047', )(Con73859)
Res35873 = keras.layers.Reshape((3, 3), name = 'Res35873', )(Res10047)
Fla53261 = keras.layers.Flatten(name = 'Fla53261', )(Res35873)
Con27518 = keras.layers.Concatenate(axis=1, name = 'Con27518', )([Fla53261,in0Con27518])
Zer12985 = keras.layers.ZeroPadding2D(padding=((1, 1), (1, 1)), name = 'Zer12985', )(in0Zer12985)
Res72757 = keras.layers.Reshape((3, 15), name = 'Res72757', )(Zer12985)
Glo98218 = keras.layers.GlobalMaxPool1D(name = 'Glo98218', )(Res72757)
Mul58861 = keras.layers.Multiply(name = 'Mul58861', )([Con27518,Glo98218])
model = tf.keras.models.Model(inputs=[in0Fla12215,in0Con27518,in0Zer12985], outputs=Mul58861)
w = model.get_layer('Con73859').get_weights() 
w[0] = np.array([[[[[0.4465, 0.9288, 0.5564]]]], [[[[0.5944, 0.5118, 0.1021]]]], [[[[0.5878, 0.7142, 0.4632]]]]])
w[1] = np.array([0, 0, 0])
model.get_layer('Con73859').set_weights(w) 
in0Fla12215 = tf.constant([[1.9125, 1.5039, 1.8122]])
in0Con27518 = tf.constant([[0.7854, 0.3968, 0.0037, 0.7447, 0.7394, 0.8923]])
in0Zer12985 = tf.constant([[[[1.2901, 1.8171, 1.4893], [1.4587, 1.0869, 1.9268], [1.3956, 1.4157, 1.5094]]]])
print (np.array2string(model.predict([in0Fla12215,in0Con27518,in0Zer12985],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Mul58861.png')

LFla12215 = flatten_layer([[1.9125, 1.5039, 1.8122]], Fla12215), 
LRes58666 = reshape_layer(Fla12215, [3, 1], Res58666), 
LRes66359 = reshape_layer(Res58666, [3, 1, 1], Res66359), 
LRes42032 = reshape_layer(Res66359, [3, 1, 1, 1], Res42032), 
LCon73859 = conv3D_layer(Res42032, 3, 1, 1,[[[[[0.4465, 0.9288, 0.5564]]]], [[[[0.5944, 0.5118, 0.1021]]]], [[[[0.5878, 0.7142, 0.4632]]]]],[0, 0, 0], 1, 1, 3, true, 1, 1, 1, Con73859), 
LRes10047 = reshape_layer(Con73859, [3, 1, 3], Res10047), 
LRes35873 = reshape_layer(Res10047, [3, 3], Res35873), 
LFla53261 = flatten_layer(Res35873, Fla53261), 
LCon27518 = concatenate_layer([Fla53261,[[0.7854, 0.3968, 0.0037, 0.7447, 0.7394, 0.8923]]], 1, Con27518), 
LZer12985 = zero_padding2D_layer([[[[1.2901, 1.8171, 1.4893], [1.4587, 1.0869, 1.9268], [1.3956, 1.4157, 1.5094]]]], 1, 1, 1, 1, Zer12985), 
LRes72757 = reshape_layer(Zer12985, [3, 15], Res72757), 
LGlo98218 = global_max_pool1D_layer(Res72757, Glo98218), 
LMul58861 = multiply_layer([Con27518,Glo98218], Mul58861), 
exec_layers([LFla12215,LRes58666,LRes66359,LRes42032,LCon73859,LRes10047,LRes35873,LFla53261,LCon27518,LZer12985,LRes72757,LGlo98218,LMul58861],["Fla12215","Res58666","Res66359","Res42032","Con73859","Res10047","Res35873","Fla53261","Con27518","Zer12985","Res72757","Glo98218","Mul58861"],Mul58861,"Mul58861")

Actual (Unparsed): [[0.0000000, 0.0000000, 0.0000000, 3.6291294, 6.9782080, 3.0636007, 2.5507746, 2.5262885, 1.9687958, 1.0961042, 0.5617498, 0.0055848, 0.0000000, 0.0000000, 0.0000000]]

Expected (Unparsed): [[0.0,0.0,0.0,3.6291294413570006,6.978207785346,3.063600650739,2.5507747618610006,2.526288495732,1.9687957235440001,1.0961042399999998,0.56174976,0.00558478,0.0,0.0,0.0]]

Actual:   [[0, 0, 0, 3.6292, 6.9783, 3.0637, 2.5508, 2.5263, 1.9688, 1.0962, 0.5618, 0.0056, 0, 0, 0]]

Expected: [[0, 0, 0, 3.6292, 6.9783, 3.0637, 2.5508, 2.5263, 1.9688, 1.0962, 0.5618, 0.0056, 0, 0, 0]]