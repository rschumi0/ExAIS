import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Mul99180 = tf.keras.layers.Input(shape=([2, 1, 2]))
in1Mul99180 = tf.keras.layers.Input(shape=([2, 1, 2]))

Mul99180 = keras.layers.Multiply(name = 'Mul99180', )([in0Mul99180,in1Mul99180])
Res54791 = keras.layers.Reshape((2, 2), name = 'Res54791', )(Mul99180)
Cro35254 = keras.layers.Cropping1D(cropping=((1, 0)), name = 'Cro35254', )(Res54791)
ELU68262 = keras.layers.ELU(alpha=5.338940963622836, name = 'ELU68262', )(Cro35254)
Den67838 = keras.layers.Dense(1,name = 'Den67838', )(ELU68262)
model = tf.keras.models.Model(inputs=[in0Mul99180,in1Mul99180], outputs=Den67838)
w = model.get_layer('Den67838').get_weights() 
w[0] = np.array([[0.269], [0.7524]])
w[1] = np.array([0.9549])
model.get_layer('Den67838').set_weights(w) 
in0Mul99180 = tf.constant([[[[0.8444, 0.0855]], [[0.0637, 0.7171]]]])
in1Mul99180 = tf.constant([[[[0.8278, 0.9798]], [[0.5642, 0.0674]]]])
print (np.array2string(model.predict([in0Mul99180,in1Mul99180],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Den67838.png')

LMul99180 = multiply_layer([[[[[0.8444, 0.0855]], [[0.0637, 0.7171]]]], [[[[0.8278, 0.9798]], [[0.5642, 0.0674]]]]], Mul99180), 
LRes54791 = reshape_layer(Mul99180, [2, 2], Res54791), 
LCro35254 = cropping1D_layer(Res54791, 1, 0, Cro35254), 
LELU68262 = elu_layer(Cro35254, 5.338940963622836, ELU68262), 
LDen67838 = dense_layer(ELU68262, [[0.269], [0.7524]],[0.9549], Den67838), 
exec_layers([LMul99180,LRes54791,LCro35254,LELU68262,LDen67838],["Mul99180","Res54791","Cro35254","ELU68262","Den67838"],Den67838,"Den67838")

Actual (Unparsed): [[[1.0009331]]]

Expected (Unparsed): [[[1.000933139356]]]

Actual:   [[[1.001]]]

Expected: [[[1.001]]]