import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Sub26148 = tf.keras.layers.Input(shape=([3, 2, 2, 3]))
in1Sub26148 = tf.keras.layers.Input(shape=([3, 2, 2, 3]))
in0Con48895 = tf.keras.layers.Input(shape=([51]))
in0Zer46924 = tf.keras.layers.Input(shape=([3, 3, 3, 3]))
in0Sub74348 = tf.keras.layers.Input(shape=([3, 2]))
in1Sub74348 = tf.keras.layers.Input(shape=([3, 2]))
in0Con70752 = tf.keras.layers.Input(shape=([75, 5]))
in0Cro51707 = tf.keras.layers.Input(shape=([4, 1, 4, 2]))

Sub26148 = keras.layers.Subtract(name = 'Sub26148', )([in0Sub26148,in1Sub26148])
Lea22670 = keras.layers.LeakyReLU(alpha=7.665976324390202, name = 'Lea22670', )(Sub26148)
Res67375 = keras.layers.Reshape((3, 2, 6), name = 'Res67375', )(Lea22670)
Con12877 = keras.layers.Conv2DTranspose(4, (1, 1),strides=(1, 1), padding='valid', name = 'Con12877', )(Res67375)
Res50291 = keras.layers.Reshape((3, 8), name = 'Res50291', )(Con12877)
Fla81633 = keras.layers.Flatten(name = 'Fla81633', )(Res50291)
Con48895 = keras.layers.Concatenate(axis=1, name = 'Con48895', )([Fla81633,in0Con48895])
Zer46924 = keras.layers.ZeroPadding3D(padding=((1, 1), (1, 1), (1, 1)), name = 'Zer46924', )(in0Zer46924)
Res51520 = keras.layers.Reshape((5, 5, 15), name = 'Res51520', )(Zer46924)
Res65091 = keras.layers.Reshape((5, 75), name = 'Res65091', )(Res51520)
Glo92810 = keras.layers.GlobalAveragePooling1D(name = 'Glo92810', )(Res65091)
Add3122 = keras.layers.Add(name = 'Add3122', )([Con48895,Glo92810])
Res27094 = keras.layers.Reshape((75, 1), name = 'Res27094', )(Add3122)
Res6885 = keras.layers.Reshape((75, 1, 1), name = 'Res6885', )(Res27094)
Sub74348 = keras.layers.Subtract(name = 'Sub74348', )([in0Sub74348,in1Sub74348])
Res54183 = keras.layers.Reshape((3, 2, 1), name = 'Res54183', )(Sub74348)
Max67284 = keras.layers.MaxPool2D(pool_size=(1, 2), name = 'Max67284', )(Res54183)
Zer31157 = keras.layers.ZeroPadding2D(padding=((72, 0), (0, 0)), name = 'Zer31157', )(Max67284)
Ave76636 = keras.layers.Average(name = 'Ave76636', )([Res6885,Zer31157])
Res21996 = keras.layers.Reshape((75, 1), name = 'Res21996', )(Ave76636)
Con70752 = keras.layers.Concatenate(axis=2, name = 'Con70752', )([Res21996,in0Con70752])
Cro51707 = keras.layers.Cropping3D(cropping=((3, 0), (0, 0), (0, 1)), name = 'Cro51707', )(in0Cro51707)
Sof1521 = keras.layers.Softmax(axis=1, name = 'Sof1521', )(Cro51707)
Res99159 = keras.layers.Reshape((1, 1, 6), name = 'Res99159', )(Sof1521)
Res72098 = keras.layers.Reshape((1, 6), name = 'Res72098', )(Res99159)
Ave74116 = keras.layers.AveragePooling1D(pool_size=(1), strides=(7), padding='same', name = 'Ave74116', )(Res72098)
Zer29509 = keras.layers.ZeroPadding1D(padding=((74, 0)), name = 'Zer29509', )(Ave74116)
Mul30885 = keras.layers.Multiply(name = 'Mul30885', )([Con70752,Zer29509])
model = tf.keras.models.Model(inputs=[in0Sub26148,in1Sub26148,in0Con48895,in0Zer46924,in0Sub74348,in1Sub74348,in0Con70752,in0Cro51707], outputs=Mul30885)
w = model.get_layer('Con12877').get_weights() 
w[0] = np.array([[[[0.3307, 0.3099, 0.6689, 0.693, 0.9544, 0.8287], [0.8395, 0.5031, 0.4301, 0.0347, 0.1667, 0.7766], [0.7781, 0.821, 0.3864, 0.4583, 0.0353, 0.5674], [0.1614, 0.7234, 0.6972, 0.7106, 0.3839, 0.1214]]]])
w[1] = np.array([0, 0, 0, 0])
model.get_layer('Con12877').set_weights(w) 
in0Sub26148 = tf.constant([[[[[0.266, 0.0202, 0.8652], [0.0906, 0.2028, 0.1104]], [[0.5299, 0.5877, 0.3607], [0.6988, 0.9544, 0.9626]]], [[[0.947, 0.1395, 0.5443], [0.0572, 0.9541, 0.5522]], [[0.8266, 0.8606, 0.8855], [0.2845, 0.8687, 0.3267]]], [[[0.5063, 0.3186, 0.9097], [0.7965, 0.2293, 0.0112]], [[0.2756, 0.3204, 0.462], [0.2199, 0.5709, 0.1666]]]]])
in1Sub26148 = tf.constant([[[[[0.6099, 0.435, 0.2135], [0.1957, 0.4649, 0.0112]], [[0.6112, 0.5836, 0.3868], [0.9701, 0.6665, 0.5834]]], [[[0.0294, 0.1345, 0.8394], [0.6305, 0.3607, 0.5455]], [[0.6984, 0.1164, 0.3768], [0.2122, 0.7468, 0.5835]]], [[[0.2225, 0.2495, 0.324], [0.9239, 0.3939, 0.3706]], [[0.5492, 0.4088, 0.3229], [0.5165, 0.6028, 0.0164]]]]])
in0Con48895 = tf.constant([[0.7254, 0.735, 0.058, 0.9281, 0.7753, 0.3885, 0.1404, 0.6294, 0.7621, 0.442, 0.5141, 0.0382, 0.8674, 0.2266, 0.3666, 0.2264, 0.4973, 0.7845, 0.4687, 0.7816, 0.7064, 0.2676, 0.4506, 0.3439, 0.5408, 0.0711, 0.6113, 0.3975, 0.8082, 0.3088, 0.1737, 0.0618, 0.8419, 0.5815, 0.587, 0.2347, 0.4103, 0.1156, 0.2119, 0.3358, 0.0429, 0.2574, 0.478, 0.0666, 0.6919, 0.9951, 0.395, 0.0623, 0.8317, 0.6524, 0.1216]])
in0Zer46924 = tf.constant([[[[[1.9207, 1.1314, 1.1183], [1.5804, 1.5922, 1.2197], [1.1002, 1.7379, 1.8235]], [[1.8586, 1.5714, 1.5218], [1.6935, 1.2821, 1.1102], [1.7096, 1.561, 1.9997]], [[1.5377, 1.7221, 1.7415], [1.6703, 1.2833, 1.9431], [1.2011, 1.6101, 1.3724]]], [[[1.8266, 1.1684, 1.8834], [1.5565, 1.0466, 1.0939], [1.8972, 1.8376, 1.2533]], [[1.5688, 1.3002, 1.5268], [1.7015, 1.6594, 1.7747], [1.0184, 1.1358, 1.6064]], [[1.9995, 1.6657, 1.8346], [1.9959, 1.6638, 1.4957], [1.6435, 1.3138, 1.9141]]], [[[1.0172, 1.1612, 1.2666], [1.0295, 1.0433, 1.9797], [1.3677, 1.4351, 1.2744]], [[1.0265, 1.0719, 1.392], [1.3707, 1.609, 1.1718], [1.8263, 1.3799, 1.7184]], [[1.2629, 1.7995, 1.6794], [1.5137, 1.8288, 1.0651], [1.0438, 1.6803, 1.905]]]]])
in0Sub74348 = tf.constant([[[0.0016, 0.0534], [0.5305, 0.3342], [0.9711, 0.8236]]])
in1Sub74348 = tf.constant([[[0.2981, 0.3475], [0.8115, 0.9526], [0.0695, 0.5732]]])
in0Con70752 = tf.constant([[[0.9417, 0.4086, 0.2066, 0.9798, 0.0484], [0.8488, 0.4581, 0.1906, 0.1927, 0.7488], [0.6157, 0.9811, 0.0624, 0.9691, 0.534], [0.0692, 0.7757, 0.4954, 0.3189, 0.5952], [0.4692, 0.9137, 0.7718, 0.9031, 0.3255], [0.5302, 0.7411, 0.9964, 0.2249, 0.3012], [0.541, 0.6755, 0.6709, 0.741, 0.2079], [0.129, 0.6314, 0.7572, 0.9903, 0.8002], [0.4603, 0.9262, 0.1401, 0.6802, 0.1225], [0.0664, 0.7654, 0.7862, 0.5305, 0.0934], [0.2331, 0.4785, 0.9189, 0.0477, 0.3705], [0.4408, 0.8342, 0.8738, 0.5016, 0.6027], [0.4951, 0.0013, 0.1785, 0.0192, 0.9936], [0.026, 0.3185, 0.7377, 0.0483, 0.825], [0.3426, 0.9822, 0.7955, 0.2509, 0.8255], [0.5615, 0.4116, 0.146, 0.1136, 0.2712], [0.1947, 0.7915, 0.3456, 0.1981, 0.1022], [0.0685, 0.3176, 0.2607, 0.6427, 0.5389], [0.6765, 0.0225, 0.4464, 0.3822, 0.9964], [0.7996, 0.807, 0.618, 0.3926, 0.3527], [0.9728, 0.331, 0.4666, 0.9996, 0.9984], [0.6762, 0.5355, 0.8132, 0.5149, 0.2885], [0.2989, 0.683, 0.8719, 0.3455, 0.322], [0.4056, 0.715, 0.9393, 0.9738, 0.6475], [0.2186, 0.6038, 0.7477, 0.5717, 0.8698], [0.8114, 0.2157, 0.1611, 0.9135, 0.0047], [0.2158, 0.7837, 0.3105, 0.2609, 0.2611], [0.3445, 0.3373, 0.0016, 0.5696, 0.4476], [0.7574, 0.2525, 0.563, 0.3531, 0.8374], [0.8363, 0.1581, 0.1533, 0.3416, 0.5374], [0.6865, 0.5178, 0.0454, 0.7165, 0.8128], [0.5586, 0.234, 0.073, 0.3999, 0.855], [0.116, 0.253, 0.8656, 0.4405, 0.0748], [0.7843, 0.2138, 0.6061, 0.206, 0.3818], [0.5857, 0.7, 0.6425, 0.0137, 0.8732], [0.7163, 0.7577, 0.2412, 0.6655, 0.3553], [0.4557, 0.2568, 0.5564, 0.4131, 0.4041], [0.7282, 0.633, 0.8083, 0.249, 0.0321], [0.784, 0.2949, 0.5623, 0.7058, 0.3214], [0.9199, 0.5128, 0.9825, 0.2927, 0.5893], [0.0312, 0.0856, 0.7728, 0.6789, 0.5402], [0.5555, 0.3771, 0.4915, 0.1605, 0.2552], [0.2068, 0.5003, 0.6719, 0.8604, 0.4543], [0.7433, 0.406, 0.5771, 0.9311, 0.4372], [0.6797, 0.5504, 0.8537, 0.8625, 0.3397], [0.9281, 0.3254, 0.8425, 0.4812, 0.826], [0.0876, 0.6822, 0.4293, 0.5041, 0.2743], [0.2645, 0.626, 0.9089, 0.1058, 0.1121], [0.1541, 0.3621, 0.6809, 0.6126, 0.2458], [0.5831, 0.2872, 0.2798, 0.2745, 0.4223], [0.9391, 0.8771, 0.4092, 0.6508, 0.1743], [0.4632, 0.3201, 0.903, 0.4924, 0.9398], [0.0726, 0.4019, 0.2023, 0.475, 0.6137], [0.4101, 0.8603, 0.259, 0.069, 0.4427], [0.9287, 0.4071, 0.3974, 0.156, 0.7589], [0.4648, 0.8256, 0.4837, 0.5156, 0.8982], [0.8777, 0.0275, 0.1961, 0.1499, 0.7522], [0.9328, 0.4702, 0.332, 0.2545, 0.4783], [0.6705, 0.3909, 0.491, 0.3916, 0.8954], [0.6274, 0.0525, 0.4667, 0.851, 0.7853], [0.4705, 0.4031, 0.7572, 0.5311, 0.3197], [0.9126, 0.3684, 0.0395, 0.4529, 0.048], [0.9195, 0.5722, 0.5102, 0.3947, 0.5964], [0.3921, 0.0188, 0.2371, 0.9535, 0.0887], [0.1175, 0.0628, 0.5513, 0.4095, 0.1784], [0.7983, 0.9725, 0.9875, 0.3752, 0.986], [0.2891, 0.9368, 0.5527, 0.7044, 0.999], [0.1457, 0.5899, 0.4103, 0.43, 0.2407], [0.8138, 0.041, 0.6153, 0.616, 0.9257], [0.6482, 0.687, 0.6288, 0.3277, 0.5612], [0.9035, 0.044, 0.7027, 0.5725, 0.5302], [0.0808, 0.1902, 0.9245, 0.9275, 0.9594], [0.5301, 0.9379, 0.363, 0.6767, 0.0969], [0.9683, 0.2623, 0.8497, 0.837, 0.0018], [0.8418, 0.8566, 0.7396, 0.6096, 0.3224]]])
in0Cro51707 = tf.constant([[[[[1.7365, 1.6614], [1.1871, 1.6063], [1.3957, 1.3298], [1.7637, 1.954]]], [[[1.2213, 1.0224], [1.1553, 1.517], [1.4785, 1.1393], [1.852, 1.7577]]], [[[1.6272, 1.0293], [1.269, 1.3659], [1.7003, 1.258], [1.3458, 1.5383]]], [[[1.4123, 1.2369], [1.6949, 1.9542], [1.6177, 1.0876], [1.2795, 1.1545]]]]])
print (np.array2string(model.predict([in0Sub26148,in1Sub26148,in0Con48895,in0Zer46924,in0Sub74348,in1Sub74348,in0Con70752,in0Cro51707],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Mul30885.png')

LSub26148 = subtract_layer([[[[[0.266, 0.0202, 0.8652], [0.0906, 0.2028, 0.1104]], [[0.5299, 0.5877, 0.3607], [0.6988, 0.9544, 0.9626]]], [[[0.947, 0.1395, 0.5443], [0.0572, 0.9541, 0.5522]], [[0.8266, 0.8606, 0.8855], [0.2845, 0.8687, 0.3267]]], [[[0.5063, 0.3186, 0.9097], [0.7965, 0.2293, 0.0112]], [[0.2756, 0.3204, 0.462], [0.2199, 0.5709, 0.1666]]]]], [[[[[0.6099, 0.435, 0.2135], [0.1957, 0.4649, 0.0112]], [[0.6112, 0.5836, 0.3868], [0.9701, 0.6665, 0.5834]]], [[[0.0294, 0.1345, 0.8394], [0.6305, 0.3607, 0.5455]], [[0.6984, 0.1164, 0.3768], [0.2122, 0.7468, 0.5835]]], [[[0.2225, 0.2495, 0.324], [0.9239, 0.3939, 0.3706]], [[0.5492, 0.4088, 0.3229], [0.5165, 0.6028, 0.0164]]]]], Sub26148), 
LLea22670 = leaky_relu_layer(Sub26148, 7.665976324390202, Lea22670), 
LRes67375 = reshape_layer(Lea22670, [3, 2, 6], Res67375), 
LCon12877 = conv2D_transpose_layer(Res67375, 1, 1,[[[[0.3307, 0.3099, 0.6689, 0.693, 0.9544, 0.8287], [0.8395, 0.5031, 0.4301, 0.0347, 0.1667, 0.7766], [0.7781, 0.821, 0.3864, 0.4583, 0.0353, 0.5674], [0.1614, 0.7234, 0.6972, 0.7106, 0.3839, 0.1214]]]],[0, 0, 0, 0], 1, 1, false, Con12877), 
LRes50291 = reshape_layer(Con12877, [3, 8], Res50291), 
LFla81633 = flatten_layer(Res50291, Fla81633), 
LCon48895 = concatenate_layer([Fla81633,[[0.7254, 0.735, 0.058, 0.9281, 0.7753, 0.3885, 0.1404, 0.6294, 0.7621, 0.442, 0.5141, 0.0382, 0.8674, 0.2266, 0.3666, 0.2264, 0.4973, 0.7845, 0.4687, 0.7816, 0.7064, 0.2676, 0.4506, 0.3439, 0.5408, 0.0711, 0.6113, 0.3975, 0.8082, 0.3088, 0.1737, 0.0618, 0.8419, 0.5815, 0.587, 0.2347, 0.4103, 0.1156, 0.2119, 0.3358, 0.0429, 0.2574, 0.478, 0.0666, 0.6919, 0.9951, 0.395, 0.0623, 0.8317, 0.6524, 0.1216]]], 1, Con48895), 
LZer46924 = zero_padding3D_layer([[[[[1.9207, 1.1314, 1.1183], [1.5804, 1.5922, 1.2197], [1.1002, 1.7379, 1.8235]], [[1.8586, 1.5714, 1.5218], [1.6935, 1.2821, 1.1102], [1.7096, 1.561, 1.9997]], [[1.5377, 1.7221, 1.7415], [1.6703, 1.2833, 1.9431], [1.2011, 1.6101, 1.3724]]], [[[1.8266, 1.1684, 1.8834], [1.5565, 1.0466, 1.0939], [1.8972, 1.8376, 1.2533]], [[1.5688, 1.3002, 1.5268], [1.7015, 1.6594, 1.7747], [1.0184, 1.1358, 1.6064]], [[1.9995, 1.6657, 1.8346], [1.9959, 1.6638, 1.4957], [1.6435, 1.3138, 1.9141]]], [[[1.0172, 1.1612, 1.2666], [1.0295, 1.0433, 1.9797], [1.3677, 1.4351, 1.2744]], [[1.0265, 1.0719, 1.392], [1.3707, 1.609, 1.1718], [1.8263, 1.3799, 1.7184]], [[1.2629, 1.7995, 1.6794], [1.5137, 1.8288, 1.0651], [1.0438, 1.6803, 1.905]]]]], 1, 1, 1, 1, 1, 1, Zer46924), 
LRes51520 = reshape_layer(Zer46924, [5, 5, 15], Res51520), 
LRes65091 = reshape_layer(Res51520, [5, 75], Res65091), 
LGlo92810 = global_average_pooling1D_layer(Res65091, Glo92810), 
LAdd3122 = add_layer([Con48895,Glo92810], Add3122), 
LRes27094 = reshape_layer(Add3122, [75, 1], Res27094), 
LRes6885 = reshape_layer(Res27094, [75, 1, 1], Res6885), 
LSub74348 = subtract_layer([[[0.0016, 0.0534], [0.5305, 0.3342], [0.9711, 0.8236]]], [[[0.2981, 0.3475], [0.8115, 0.9526], [0.0695, 0.5732]]], Sub74348), 
LRes54183 = reshape_layer(Sub74348, [3, 2, 1], Res54183), 
LMax67284 = max_pool2D_layer(Res54183, 1, 2, Max67284), 
LZer31157 = zero_padding2D_layer(Max67284, 72, 0, 0, 0, Zer31157), 
LAve76636 = average_layer([Res6885,Zer31157], Ave76636), 
LRes21996 = reshape_layer(Ave76636, [75, 1], Res21996), 
LCon70752 = concatenate_layer([Res21996,[[[0.9417, 0.4086, 0.2066, 0.9798, 0.0484], [0.8488, 0.4581, 0.1906, 0.1927, 0.7488], [0.6157, 0.9811, 0.0624, 0.9691, 0.534], [0.0692, 0.7757, 0.4954, 0.3189, 0.5952], [0.4692, 0.9137, 0.7718, 0.9031, 0.3255], [0.5302, 0.7411, 0.9964, 0.2249, 0.3012], [0.541, 0.6755, 0.6709, 0.741, 0.2079], [0.129, 0.6314, 0.7572, 0.9903, 0.8002], [0.4603, 0.9262, 0.1401, 0.6802, 0.1225], [0.0664, 0.7654, 0.7862, 0.5305, 0.0934], [0.2331, 0.4785, 0.9189, 0.0477, 0.3705], [0.4408, 0.8342, 0.8738, 0.5016, 0.6027], [0.4951, 0.0013, 0.1785, 0.0192, 0.9936], [0.026, 0.3185, 0.7377, 0.0483, 0.825], [0.3426, 0.9822, 0.7955, 0.2509, 0.8255], [0.5615, 0.4116, 0.146, 0.1136, 0.2712], [0.1947, 0.7915, 0.3456, 0.1981, 0.1022], [0.0685, 0.3176, 0.2607, 0.6427, 0.5389], [0.6765, 0.0225, 0.4464, 0.3822, 0.9964], [0.7996, 0.807, 0.618, 0.3926, 0.3527], [0.9728, 0.331, 0.4666, 0.9996, 0.9984], [0.6762, 0.5355, 0.8132, 0.5149, 0.2885], [0.2989, 0.683, 0.8719, 0.3455, 0.322], [0.4056, 0.715, 0.9393, 0.9738, 0.6475], [0.2186, 0.6038, 0.7477, 0.5717, 0.8698], [0.8114, 0.2157, 0.1611, 0.9135, 0.0047], [0.2158, 0.7837, 0.3105, 0.2609, 0.2611], [0.3445, 0.3373, 0.0016, 0.5696, 0.4476], [0.7574, 0.2525, 0.563, 0.3531, 0.8374], [0.8363, 0.1581, 0.1533, 0.3416, 0.5374], [0.6865, 0.5178, 0.0454, 0.7165, 0.8128], [0.5586, 0.234, 0.073, 0.3999, 0.855], [0.116, 0.253, 0.8656, 0.4405, 0.0748], [0.7843, 0.2138, 0.6061, 0.206, 0.3818], [0.5857, 0.7, 0.6425, 0.0137, 0.8732], [0.7163, 0.7577, 0.2412, 0.6655, 0.3553], [0.4557, 0.2568, 0.5564, 0.4131, 0.4041], [0.7282, 0.633, 0.8083, 0.249, 0.0321], [0.784, 0.2949, 0.5623, 0.7058, 0.3214], [0.9199, 0.5128, 0.9825, 0.2927, 0.5893], [0.0312, 0.0856, 0.7728, 0.6789, 0.5402], [0.5555, 0.3771, 0.4915, 0.1605, 0.2552], [0.2068, 0.5003, 0.6719, 0.8604, 0.4543], [0.7433, 0.406, 0.5771, 0.9311, 0.4372], [0.6797, 0.5504, 0.8537, 0.8625, 0.3397], [0.9281, 0.3254, 0.8425, 0.4812, 0.826], [0.0876, 0.6822, 0.4293, 0.5041, 0.2743], [0.2645, 0.626, 0.9089, 0.1058, 0.1121], [0.1541, 0.3621, 0.6809, 0.6126, 0.2458], [0.5831, 0.2872, 0.2798, 0.2745, 0.4223], [0.9391, 0.8771, 0.4092, 0.6508, 0.1743], [0.4632, 0.3201, 0.903, 0.4924, 0.9398], [0.0726, 0.4019, 0.2023, 0.475, 0.6137], [0.4101, 0.8603, 0.259, 0.069, 0.4427], [0.9287, 0.4071, 0.3974, 0.156, 0.7589], [0.4648, 0.8256, 0.4837, 0.5156, 0.8982], [0.8777, 0.0275, 0.1961, 0.1499, 0.7522], [0.9328, 0.4702, 0.332, 0.2545, 0.4783], [0.6705, 0.3909, 0.491, 0.3916, 0.8954], [0.6274, 0.0525, 0.4667, 0.851, 0.7853], [0.4705, 0.4031, 0.7572, 0.5311, 0.3197], [0.9126, 0.3684, 0.0395, 0.4529, 0.048], [0.9195, 0.5722, 0.5102, 0.3947, 0.5964], [0.3921, 0.0188, 0.2371, 0.9535, 0.0887], [0.1175, 0.0628, 0.5513, 0.4095, 0.1784], [0.7983, 0.9725, 0.9875, 0.3752, 0.986], [0.2891, 0.9368, 0.5527, 0.7044, 0.999], [0.1457, 0.5899, 0.4103, 0.43, 0.2407], [0.8138, 0.041, 0.6153, 0.616, 0.9257], [0.6482, 0.687, 0.6288, 0.3277, 0.5612], [0.9035, 0.044, 0.7027, 0.5725, 0.5302], [0.0808, 0.1902, 0.9245, 0.9275, 0.9594], [0.5301, 0.9379, 0.363, 0.6767, 0.0969], [0.9683, 0.2623, 0.8497, 0.837, 0.0018], [0.8418, 0.8566, 0.7396, 0.6096, 0.3224]]]], 2, Con70752), 
LCro51707 = cropping3D_layer([[[[[1.7365, 1.6614], [1.1871, 1.6063], [1.3957, 1.3298], [1.7637, 1.954]]], [[[1.2213, 1.0224], [1.1553, 1.517], [1.4785, 1.1393], [1.852, 1.7577]]], [[[1.6272, 1.0293], [1.269, 1.3659], [1.7003, 1.258], [1.3458, 1.5383]]], [[[1.4123, 1.2369], [1.6949, 1.9542], [1.6177, 1.0876], [1.2795, 1.1545]]]]], 3, 0, 0, 0, 0, 1, Cro51707), 
LSof1521 = softmax_layer(Cro51707, 1, Sof1521), 
LRes99159 = reshape_layer(Sof1521, [1, 1, 6], Res99159), 
LRes72098 = reshape_layer(Res99159, [1, 6], Res72098), 
LAve74116 = average_pooling1D_layer(Res72098, 1, 7, true, Ave74116), 
LZer29509 = zero_padding1D_layer(Ave74116, 74, 0, Zer29509), 
LMul30885 = multiply_layer([Con70752,Zer29509], Mul30885), 
exec_layers([LSub26148,LLea22670,LRes67375,LCon12877,LRes50291,LFla81633,LCon48895,LZer46924,LRes51520,LRes65091,LGlo92810,LAdd3122,LRes27094,LRes6885,LSub74348,LRes54183,LMax67284,LZer31157,LAve76636,LRes21996,LCon70752,LCro51707,LSof1521,LRes99159,LRes72098,LAve74116,LZer29509,LMul30885],["Sub26148","Lea22670","Res67375","Con12877","Res50291","Fla81633","Con48895","Zer46924","Res51520","Res65091","Glo92810","Add3122","Res27094","Res6885","Sub74348","Res54183","Max67284","Zer31157","Ave76636","Res21996","Con70752","Cro51707","Sof1521","Res99159","Res72098","Ave74116","Zer29509","Mul30885"],Mul30885,"Mul30885")

Actual (Unparsed): [[[-0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000], [-0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000], [-0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000], [-0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000], [-0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000], [-0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000], [-0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000], [-0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000], [-0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000], [-0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000], [-0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000], [-0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000], [-0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000], [-0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000], [-0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000], [-0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000], [-0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000], [-0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000], [-0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000], [-0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000], [-0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000], [-0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000], [-0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000], [0.5116000, 0.8418000, 0.8566000, 0.7396000, 0.6096000, 0.3224000]]]

Expected (Unparsed): [[[-0.0,0.0,0.0,0.0,0.0,0.0],[-0.0,0.0,0.0,0.0,0.0,0.0],[-0.0,0.0,0.0,0.0,0.0,0.0],[-0.0,0.0,0.0,0.0,0.0,0.0],[-0.0,0.0,0.0,0.0,0.0,0.0],[-0.0,0.0,0.0,0.0,0.0,0.0],[-0.0,0.0,0.0,0.0,0.0,0.0],[-0.0,0.0,0.0,0.0,0.0,0.0],[-0.0,0.0,0.0,0.0,0.0,0.0],[-0.0,0.0,0.0,0.0,0.0,0.0],[-0.0,0.0,0.0,0.0,0.0,0.0],[-0.0,0.0,0.0,0.0,0.0,0.0],[-0.0,0.0,0.0,0.0,0.0,0.0],[-0.0,0.0,0.0,0.0,0.0,0.0],[-0.0,0.0,0.0,0.0,0.0,0.0],[0.0,0.0,0.0,0.0,0.0,0.0],[-0.0,0.0,0.0,0.0,0.0,0.0],[-0.0,0.0,0.0,0.0,0.0,0.0],[-0.0,0.0,0.0,0.0,0.0,0.0],[-0.0,0.0,0.0,0.0,0.0,0.0],[-0.0,0.0,0.0,0.0,0.0,0.0],[-0.0,0.0,0.0,0.0,0.0,0.0],[-0.0,0.0,0.0,0.0,0.0,0.0],[-0.0,0.0,0.0,0.0,0.0,0.0],[0.0,0.0,0.0,0.0,0.0,0.0],[0.0,0.0,0.0,0.0,0.0,0.0],[0.0,0.0,0.0,0.0,0.0,0.0],[0.0,0.0,0.0,0.0,0.0,0.0],[0.0,0.0,0.0,0.0,0.0,0.0],[0.0,0.0,0.0,0.0,0.0,0.0],[0.0,0.0,0.0,0.0,0.0,0.0],[0.0,0.0,0.0,0.0,0.0,0.0],[0.0,0.0,0.0,0.0,0.0,0.0],[0.0,0.0,0.0,0.0,0.0,0.0],[0.0,0.0,0.0,0.0,0.0,0.0],[0.0,0.0,0.0,0.0,0.0,0.0],[0.0,0.0,0.0,0.0,0.0,0.0],[0.0,0.0,0.0,0.0,0.0,0.0],[0.0,0.0,0.0,0.0,0.0,0.0],[0.0,0.0,0.0,0.0,0.0,0.0],[0.0,0.0,0.0,0.0,0.0,0.0],[0.0,0.0,0.0,0.0,0.0,0.0],[0.0,0.0,0.0,0.0,0.0,0.0],[0.0,0.0,0.0,0.0,0.0,0.0],[0.0,0.0,0.0,0.0,0.0,0.0],[0.0,0.0,0.0,0.0,0.0,0.0],[0.0,0.0,0.0,0.0,0.0,0.0],[0.0,0.0,0.0,0.0,0.0,0.0],[0.0,0.0,0.0,0.0,0.0,0.0],[0.0,0.0,0.0,0.0,0.0,0.0],[0.0,0.0,0.0,0.0,0.0,0.0],[0.0,0.0,0.0,0.0,0.0,0.0],[0.0,0.0,0.0,0.0,0.0,0.0],[0.0,0.0,0.0,0.0,0.0,0.0],[0.0,0.0,0.0,0.0,0.0,0.0],[0.0,0.0,0.0,0.0,0.0,0.0],[0.0,0.0,0.0,0.0,0.0,0.0],[0.0,0.0,0.0,0.0,0.0,0.0],[0.0,0.0,0.0,0.0,0.0,0.0],[0.0,0.0,0.0,0.0,0.0,0.0],[0.0,0.0,0.0,0.0,0.0,0.0],[0.0,0.0,0.0,0.0,0.0,0.0],[0.0,0.0,0.0,0.0,0.0,0.0],[0.0,0.0,0.0,0.0,0.0,0.0],[0.0,0.0,0.0,0.0,0.0,0.0],[0.0,0.0,0.0,0.0,0.0,0.0],[0.0,0.0,0.0,0.0,0.0,0.0],[0.0,0.0,0.0,0.0,0.0,0.0],[0.0,0.0,0.0,0.0,0.0,0.0],[0.0,0.0,0.0,0.0,0.0,0.0],[0.0,0.0,0.0,0.0,0.0,0.0],[0.0,0.0,0.0,0.0,0.0,0.0],[0.0,0.0,0.0,0.0,0.0,0.0],[0.0,0.0,0.0,0.0,0.0,0.0],[0.5115999999999999,0.8418,0.8566,0.7396,0.6096,0.3224]]]

Actual:   [[[-0, 0, 0, 0, 0, 0], [-0, 0, 0, 0, 0, 0], [-0, 0, 0, 0, 0, 0], [-0, 0, 0, 0, 0, 0], [-0, 0, 0, 0, 0, 0], [-0, 0, 0, 0, 0, 0], [-0, 0, 0, 0, 0, 0], [-0, 0, 0, 0, 0, 0], [-0, 0, 0, 0, 0, 0], [-0, 0, 0, 0, 0, 0], [-0, 0, 0, 0, 0, 0], [-0, 0, 0, 0, 0, 0], [-0, 0, 0, 0, 0, 0], [-0, 0, 0, 0, 0, 0], [-0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0], [-0, 0, 0, 0, 0, 0], [-0, 0, 0, 0, 0, 0], [-0, 0, 0, 0, 0, 0], [-0, 0, 0, 0, 0, 0], [-0, 0, 0, 0, 0, 0], [-0, 0, 0, 0, 0, 0], [-0, 0, 0, 0, 0, 0], [-0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0], [0.5116, 0.8418, 0.8566, 0.7396, 0.6096, 0.3224]]]

Expected: [[[-0, 0, 0, 0, 0, 0], [-0, 0, 0, 0, 0, 0], [-0, 0, 0, 0, 0, 0], [-0, 0, 0, 0, 0, 0], [-0, 0, 0, 0, 0, 0], [-0, 0, 0, 0, 0, 0], [-0, 0, 0, 0, 0, 0], [-0, 0, 0, 0, 0, 0], [-0, 0, 0, 0, 0, 0], [-0, 0, 0, 0, 0, 0], [-0, 0, 0, 0, 0, 0], [-0, 0, 0, 0, 0, 0], [-0, 0, 0, 0, 0, 0], [-0, 0, 0, 0, 0, 0], [-0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0], [-0, 0, 0, 0, 0, 0], [-0, 0, 0, 0, 0, 0], [-0, 0, 0, 0, 0, 0], [-0, 0, 0, 0, 0, 0], [-0, 0, 0, 0, 0, 0], [-0, 0, 0, 0, 0, 0], [-0, 0, 0, 0, 0, 0], [-0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0], [0.5116, 0.8418, 0.8566, 0.7396, 0.6096, 0.3224]]]