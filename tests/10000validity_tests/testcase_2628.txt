import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Sim35789 = tf.keras.layers.Input(shape=([3, 1]))
in0Add71107 = tf.keras.layers.Input(shape=([1, 1]))
in1Add71107 = tf.keras.layers.Input(shape=([1, 1]))

Sim35789 = keras.layers.SimpleRNN(1,name = 'Sim35789', )(in0Sim35789)
Den66898 = keras.layers.Dense(3,name = 'Den66898', )(Sim35789)
Thr9391 = keras.layers.ThresholdedReLU(theta=7.692240461129927, name = 'Thr9391', )(Den66898)
Res40431 = keras.layers.Reshape((3, 1), name = 'Res40431', )(Thr9391)
Add71107 = keras.layers.Add(name = 'Add71107', )([in0Add71107,in1Add71107])
Zer9831 = keras.layers.ZeroPadding1D(padding=((2, 0)), name = 'Zer9831', )(Add71107)
Mul48071 = keras.layers.Multiply(name = 'Mul48071', )([Res40431,Zer9831])
model = tf.keras.models.Model(inputs=[in0Sim35789,in0Add71107,in1Add71107], outputs=Mul48071)
w = model.get_layer('Sim35789').get_weights() 
w[0] = np.array([[4]])
w[1] = np.array([[5]])
w[2] = np.array([3])
model.get_layer('Sim35789').set_weights(w) 
w = model.get_layer('Den66898').get_weights() 
w[0] = np.array([[0.8987, 0.1635, 0.5592]])
w[1] = np.array([0.6283, 0.6106, 0.984])
model.get_layer('Den66898').set_weights(w) 
in0Sim35789 = tf.constant([[[4], [9], [5]]])
in0Add71107 = tf.constant([[[0.5607]]])
in1Add71107 = tf.constant([[[0.5237]]])
print (np.array2string(model.predict([in0Sim35789,in0Add71107,in1Add71107],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Mul48071.png')

LSim35789 = simple_rnn_layer([[[4], [9], [5]]],[[4]],[[5]],[3], Sim35789), 
LDen66898 = dense_layer(Sim35789, [[0.8987, 0.1635, 0.5592]],[0.6283, 0.6106, 0.984], Den66898), 
LThr9391 = thresholded_relu_layer(Den66898, 7.692240461129927, Thr9391), 
LRes40431 = reshape_layer(Thr9391, [3, 1], Res40431), 
LAdd71107 = add_layer([[[[0.5607]]], [[[0.5237]]]], Add71107), 
LZer9831 = zero_padding1D_layer(Add71107, 2, 0, Zer9831), 
LMul48071 = multiply_layer([Res40431,Zer9831], Mul48071), 
exec_layers([LSim35789,LDen66898,LThr9391,LRes40431,LAdd71107,LZer9831,LMul48071],["Sim35789","Den66898","Thr9391","Res40431","Add71107","Zer9831","Mul48071"],Mul48071,"Mul48071")

Actual (Unparsed): [[[0.0000000], [0.0000000], [0.0000000]]]

Expected (Unparsed): [[[0],[0],[0.0]]]

Actual:   [[[0], [0], [0]]]

Expected: [[[0], [0], [0]]]