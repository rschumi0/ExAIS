import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Cro92089 = tf.keras.layers.Input(shape=([3, 2, 2]))
in0Con96716 = tf.keras.layers.Input(shape=([2, 2, 3, 1]))
in0ELU76255 = tf.keras.layers.Input(shape=([2, 2, 1, 2]))
in0Mul8575 = tf.keras.layers.Input(shape=([1, 1]))
in1Mul8575 = tf.keras.layers.Input(shape=([1, 1]))
in0Con37305 = tf.keras.layers.Input(shape=([2, 11]))

Cro92089 = keras.layers.Cropping2D(cropping=((2, 0), (1, 0)), name = 'Cro92089', )(in0Cro92089)
Res57087 = keras.layers.Reshape((1, 1, 2, 1), name = 'Res57087', )(Cro92089)
Zer43786 = keras.layers.ZeroPadding3D(padding=((1, 0), (1, 0), (1, 0)), name = 'Zer43786', )(Res57087)
Con96716 = keras.layers.Concatenate(axis=4, name = 'Con96716', )([Zer43786,in0Con96716])
ELU76255 = keras.layers.ELU(alpha=-8.495453582777568, name = 'ELU76255', input_shape=(2, 2, 1, 2))(in0ELU76255)
Zer22431 = keras.layers.ZeroPadding3D(padding=((0, 0), (0, 0), (2, 0)), name = 'Zer22431', )(ELU76255)
Ave70210 = keras.layers.Average(name = 'Ave70210', )([Con96716,Zer22431])
Res84808 = keras.layers.Reshape((2, 2, 6), name = 'Res84808', )(Ave70210)
Res46566 = keras.layers.Reshape((2, 12), name = 'Res46566', )(Res84808)
Mul8575 = keras.layers.Multiply(name = 'Mul8575', )([in0Mul8575,in1Mul8575])
Zer51541 = keras.layers.ZeroPadding1D(padding=((1, 0)), name = 'Zer51541', )(Mul8575)
Con37305 = keras.layers.Concatenate(axis=2, name = 'Con37305', )([Zer51541,in0Con37305])
Min89828 = keras.layers.Minimum(name = 'Min89828', )([Res46566,Con37305])
model = tf.keras.models.Model(inputs=[in0Cro92089,in0Con96716,in0ELU76255,in0Mul8575,in1Mul8575,in0Con37305], outputs=Min89828)
in0Cro92089 = tf.constant([[[[1.1377, 1.8817], [1.4242, 1.1952]], [[1.8539, 1.7273], [1.0712, 1.2096]], [[1.7023, 1.7498], [1.2453, 1.678]]]])
in0Con96716 = tf.constant([[[[[0.382], [0.0399], [0.103]], [[0.9346], [0.2681], [0.7413]]], [[[0.97], [0.0773], [0.2463]], [[0.1159], [0.2224], [0.855]]]]])
in0ELU76255 = tf.constant([[[[[0.9413, 0.9894]], [[0.8206, 0.9527]]], [[[0.2356, 0.2374]], [[0.0012, 0.5343]]]]])
in0Mul8575 = tf.constant([[[0.8249]]])
in1Mul8575 = tf.constant([[[0.1051]]])
in0Con37305 = tf.constant([[[0.5426, 0.0981, 0.5669, 0.4804, 0.5219, 0.0867, 0.0424, 0.3106, 0.3148, 0.0139, 0.9657], [0.6778, 0.495, 0.5268, 0.8128, 0.1447, 0.8942, 0.7663, 0.6567, 0.5468, 0.1362, 0.9398]]])
print (np.array2string(model.predict([in0Cro92089,in0Con96716,in0ELU76255,in0Mul8575,in1Mul8575,in0Con37305],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Min89828.png')

LCro92089 = cropping2D_layer([[[[1.1377, 1.8817], [1.4242, 1.1952]], [[1.8539, 1.7273], [1.0712, 1.2096]], [[1.7023, 1.7498], [1.2453, 1.678]]]], 2, 0, 1, 0, Cro92089), 
LRes57087 = reshape_layer(Cro92089, [1, 1, 2, 1], Res57087), 
LZer43786 = zero_padding3D_layer(Res57087, 1, 0, 1, 0, 1, 0, Zer43786), 
LCon96716 = concatenate_layer([Zer43786,[[[[[0.382], [0.0399], [0.103]], [[0.9346], [0.2681], [0.7413]]], [[[0.97], [0.0773], [0.2463]], [[0.1159], [0.2224], [0.855]]]]]], 4, Con96716), 
LELU76255 = elu_layer([[[[[0.9413, 0.9894]], [[0.8206, 0.9527]]], [[[0.2356, 0.2374]], [[0.0012, 0.5343]]]]], -8.495453582777568, ELU76255), 
LZer22431 = zero_padding3D_layer(ELU76255, 0, 0, 0, 0, 2, 0, Zer22431), 
LAve70210 = average_layer([Con96716,Zer22431], Ave70210), 
LRes84808 = reshape_layer(Ave70210, [2, 2, 6], Res84808), 
LRes46566 = reshape_layer(Res84808, [2, 12], Res46566), 
LMul8575 = multiply_layer([[[[0.8249]]], [[[0.1051]]]], Mul8575), 
LZer51541 = zero_padding1D_layer(Mul8575, 1, 0, Zer51541), 
LCon37305 = concatenate_layer([Zer51541,[[[0.5426, 0.0981, 0.5669, 0.4804, 0.5219, 0.0867, 0.0424, 0.3106, 0.3148, 0.0139, 0.9657], [0.6778, 0.495, 0.5268, 0.8128, 0.1447, 0.8942, 0.7663, 0.6567, 0.5468, 0.1362, 0.9398]]]], 2, Con37305), 
LMin89828 = minimum_layer([Res46566,Con37305], Min89828), 
exec_layers([LCro92089,LRes57087,LZer43786,LCon96716,LELU76255,LZer22431,LAve70210,LRes84808,LRes46566,LMul8575,LZer51541,LCon37305,LMin89828],["Cro92089","Res57087","Zer43786","Con96716","ELU76255","Zer22431","Ave70210","Res84808","Res46566","Mul8575","Zer51541","Con37305","Min89828"],Min89828,"Min89828")

Actual (Unparsed): [[[0.0000000, 0.1910000, 0.0000000, 0.0199500, 0.4706500, 0.5219000, 0.0000000, 0.0424000, 0.0000000, 0.1340500, 0.0139000, 0.8470000], [0.0000000, 0.4850000, 0.0000000, 0.0386500, 0.1178000, 0.1447000, 0.0000000, 0.0579500, 0.6226500, 0.1112000, 0.1362000, 0.6946500]]]

Expected (Unparsed): [[[0,0.191,0,0.01995,0.47065,0.5219,0,0.0424,0,0.13405,0.0139,0.847],[0,0.485,0,0.03865,0.1178,0.1447,0,0.05795,0.62265,0.1112,0.1362,0.69465]]]

Actual:   [[[0, 0.191, 0, 0.02, 0.4707, 0.5219, 0, 0.0424, 0, 0.1341, 0.0139, 0.847], [0, 0.485, 0, 0.0387, 0.1178, 0.1447, 0, 0.058, 0.6227, 0.1112, 0.1362, 0.6947]]]

Expected: [[[0, 0.191, 0, 0.02, 0.4707, 0.5219, 0, 0.0424, 0, 0.1341, 0.0139, 0.847], [0, 0.485, 0, 0.0387, 0.1178, 0.1447, 0, 0.058, 0.6227, 0.1112, 0.1362, 0.6947]]]