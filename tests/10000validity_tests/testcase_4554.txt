import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Max35723 = tf.keras.layers.Input(shape=([2, 1]))
in1Max35723 = tf.keras.layers.Input(shape=([2, 1]))
in0Con70528 = tf.keras.layers.Input(shape=([2, 1, 2]))
in0Cro37843 = tf.keras.layers.Input(shape=([2, 1, 3]))
in0Con43927 = tf.keras.layers.Input(shape=([2, 3, 1, 1]))
in0Mul39122 = tf.keras.layers.Input(shape=([1, 1, 1, 2]))
in1Mul39122 = tf.keras.layers.Input(shape=([1, 1, 1, 2]))

Max35723 = keras.layers.Maximum(name = 'Max35723', )([in0Max35723,in1Max35723])
Res96657 = keras.layers.Reshape((2, 1, 1), name = 'Res96657', )(Max35723)
Con70528 = keras.layers.Concatenate(axis=3, name = 'Con70528', )([Res96657,in0Con70528])
Cro37843 = keras.layers.Cropping2D(cropping=((0, 0), (0, 0)), name = 'Cro37843', )(in0Cro37843)
Ave58612 = keras.layers.Average(name = 'Ave58612', )([Con70528,Cro37843])
Res47625 = keras.layers.Reshape((2, 3), name = 'Res47625', )(Ave58612)
Per33002 = keras.layers.Permute((1,2), name = 'Per33002',)(Res47625)
Res49697 = keras.layers.Reshape((2, 3, 1), name = 'Res49697', )(Per33002)
Res28535 = keras.layers.Reshape((2, 3, 1, 1), name = 'Res28535', )(Res49697)
Con43927 = keras.layers.Concatenate(axis=4, name = 'Con43927', )([Res28535,in0Con43927])
Mul39122 = keras.layers.Multiply(name = 'Mul39122', )([in0Mul39122,in1Mul39122])
Zer71135 = keras.layers.ZeroPadding3D(padding=((1, 0), (2, 0), (0, 0)), name = 'Zer71135', )(Mul39122)
Add2558 = keras.layers.Add(name = 'Add2558', )([Con43927,Zer71135])
model = tf.keras.models.Model(inputs=[in0Max35723,in1Max35723,in0Con70528,in0Cro37843,in0Con43927,in0Mul39122,in1Mul39122], outputs=Add2558)
in0Max35723 = tf.constant([[[0.9698], [0.5022]]])
in1Max35723 = tf.constant([[[0.3243], [0.1751]]])
in0Con70528 = tf.constant([[[[0.7768, 0.7041]], [[0.7799, 0.1046]]]])
in0Cro37843 = tf.constant([[[[1.2251, 1.2466, 1.4141]], [[1.3619, 1.4188, 1.8546]]]])
in0Con43927 = tf.constant([[[[[0.9505]], [[0.4388]], [[0.9032]]], [[[0.4654]], [[0.6245]], [[0.1635]]]]])
in0Mul39122 = tf.constant([[[[[0.1556, 0.3504]]]]])
in1Mul39122 = tf.constant([[[[[0.5528, 0.7505]]]]])
print (np.array2string(model.predict([in0Max35723,in1Max35723,in0Con70528,in0Cro37843,in0Con43927,in0Mul39122,in1Mul39122],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Add2558.png')

LMax35723 = maximum_layer([[[[0.9698], [0.5022]]], [[[0.3243], [0.1751]]]], Max35723), 
LRes96657 = reshape_layer(Max35723, [2, 1, 1], Res96657), 
LCon70528 = concatenate_layer([Res96657,[[[[0.7768, 0.7041]], [[0.7799, 0.1046]]]]], 3, Con70528), 
LCro37843 = cropping2D_layer([[[[1.2251, 1.2466, 1.4141]], [[1.3619, 1.4188, 1.8546]]]], 0, 0, 0, 0, Cro37843), 
LAve58612 = average_layer([Con70528,Cro37843], Ave58612), 
LRes47625 = reshape_layer(Ave58612, [2, 3], Res47625), 
LPer33002 = permute_layer(Res47625, 1,2, Per33002), 
LRes49697 = reshape_layer(Per33002, [2, 3, 1], Res49697), 
LRes28535 = reshape_layer(Res49697, [2, 3, 1, 1], Res28535), 
LCon43927 = concatenate_layer([Res28535,[[[[[0.9505]], [[0.4388]], [[0.9032]]], [[[0.4654]], [[0.6245]], [[0.1635]]]]]], 4, Con43927), 
LMul39122 = multiply_layer([[[[[[0.1556, 0.3504]]]]], [[[[[0.5528, 0.7505]]]]]], Mul39122), 
LZer71135 = zero_padding3D_layer(Mul39122, 1, 0, 2, 0, 0, 0, Zer71135), 
LAdd2558 = add_layer([Con43927,Zer71135], Add2558), 
exec_layers([LMax35723,LRes96657,LCon70528,LCro37843,LAve58612,LRes47625,LPer33002,LRes49697,LRes28535,LCon43927,LMul39122,LZer71135,LAdd2558],["Max35723","Res96657","Con70528","Cro37843","Ave58612","Res47625","Per33002","Res49697","Res28535","Con43927","Mul39122","Zer71135","Add2558"],Add2558,"Add2558")

Actual (Unparsed): [[[[[1.0974500, 0.9505000]], [[1.0117000, 0.4388000]], [[1.0591000, 0.9032000]]], [[[0.9320500, 0.4654000]], [[1.0993500, 0.6245000]], [[1.0656157, 0.4264752]]]]]

Expected (Unparsed): [[[[[1.09745,0.9505]],[[1.0117,0.4388]],[[1.0591,0.9032]]],[[[0.93205,0.4654]],[[1.09935,0.6245]],[[1.06561568,0.42647519999999994]]]]]

Actual:   [[[[[1.0975, 0.9505]], [[1.0117, 0.4388]], [[1.0591, 0.9032]]], [[[0.9321, 0.4654]], [[1.0994, 0.6245]], [[1.0657, 0.4265]]]]]

Expected: [[[[[1.0975, 0.9505]], [[1.0117, 0.4388]], [[1.0591, 0.9032]]], [[[0.9321, 0.4654]], [[1.0994, 0.6245]], [[1.0657, 0.4265]]]]]