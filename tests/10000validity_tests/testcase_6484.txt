import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Min61830 = tf.keras.layers.Input(shape=([1, 2, 2, 2]))
in1Min61830 = tf.keras.layers.Input(shape=([1, 2, 2, 2]))
in0Lea55361 = tf.keras.layers.Input(shape=([2, 1]))
in0Con89429 = tf.keras.layers.Input(shape=([2, 3]))

Min61830 = keras.layers.Minimum(name = 'Min61830', )([in0Min61830,in1Min61830])
Res58562 = keras.layers.Reshape((1, 2, 4), name = 'Res58562', )(Min61830)
Res42826 = keras.layers.Reshape((1, 8), name = 'Res42826', )(Res58562)
Sep54996 = keras.layers.SeparableConv1D(4, (1),strides=(1), padding='valid', name = 'Sep54996', )(Res42826)
Zer45921 = keras.layers.ZeroPadding1D(padding=((1, 0)), name = 'Zer45921', )(Sep54996)
Lea55361 = keras.layers.LeakyReLU(alpha=6.572742236686094, name = 'Lea55361', input_shape=(2, 1))(in0Lea55361)
Con89429 = keras.layers.Concatenate(axis=2, name = 'Con89429', )([Lea55361,in0Con89429])
Min52396 = keras.layers.Minimum(name = 'Min52396', )([Zer45921,Con89429])
Res49884 = keras.layers.Reshape((2, 4, 1), name = 'Res49884', )(Min52396)
Res67685 = keras.layers.Reshape((2, 4, 1, 1), name = 'Res67685', )(Res49884)
Zer84852 = keras.layers.ZeroPadding3D(padding=((1, 1), (1, 1), (1, 1)), name = 'Zer84852', )(Res67685)
model = tf.keras.models.Model(inputs=[in0Min61830,in1Min61830,in0Lea55361,in0Con89429], outputs=Zer84852)
w = model.get_layer('Sep54996').get_weights() 
w[0] = np.array([[[0.0937], [0.3679], [0.0209], [0.5974], [0.7102], [0.2628], [0.3568], [0.0609]]])
w[1] = np.array([[[0.6247, 0.7763, 0.8399, 0.137], [0.7179, 0.9441, 0.047, 0.5933], [0.6379, 0.5367, 0.3026, 0.3728], [0.4891, 0.073, 0.4574, 0.2801], [0.9285, 0.8642, 0.1611, 0.2863], [0.428, 0.4172, 0.6299, 0.2781], [0.0852, 0.3369, 0.4226, 0.0452], [0.5324, 0.8937, 0.0397, 0.4546]]])
w[2] = np.array([0, 0, 0, 0])
model.get_layer('Sep54996').set_weights(w) 
in0Min61830 = tf.constant([[[[[0.5182, 0.711], [0.7092, 0.5674]], [[0.6349, 0.5878], [0.5866, 0.2634]]]]])
in1Min61830 = tf.constant([[[[[0.2352, 0.1865], [0.6373, 0.6309]], [[0.516, 0.9621], [0.0934, 0.1905]]]]])
in0Lea55361 = tf.constant([[[0.2304], [0.9551]]])
in0Con89429 = tf.constant([[[0.2182, 0.5945, 0.0908], [0.1332, 0.9786, 0.372]]])
print (np.array2string(model.predict([in0Min61830,in1Min61830,in0Lea55361,in0Con89429],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Zer84852.png')

LMin61830 = minimum_layer([[[[[[0.5182, 0.711], [0.7092, 0.5674]], [[0.6349, 0.5878], [0.5866, 0.2634]]]]], [[[[[0.2352, 0.1865], [0.6373, 0.6309]], [[0.516, 0.9621], [0.0934, 0.1905]]]]]], Min61830), 
LRes58562 = reshape_layer(Min61830, [1, 2, 4], Res58562), 
LRes42826 = reshape_layer(Res58562, [1, 8], Res42826), 
LSep54996 = separable_conv1D_layer(Res42826, 1,[[[[0.0937], [0.3679], [0.0209], [0.5974], [0.7102], [0.2628], [0.3568], [0.0609]]],[[[0.6247, 0.7763, 0.8399, 0.137], [0.7179, 0.9441, 0.047, 0.5933], [0.6379, 0.5367, 0.3026, 0.3728], [0.4891, 0.073, 0.4574, 0.2801], [0.9285, 0.8642, 0.1611, 0.2863], [0.428, 0.4172, 0.6299, 0.2781], [0.0852, 0.3369, 0.4226, 0.0452], [0.5324, 0.8937, 0.0397, 0.4546]]]],[0, 0, 0, 0], 1, false, Sep54996), 
LZer45921 = zero_padding1D_layer(Sep54996, 1, 0, Zer45921), 
LLea55361 = leaky_relu_layer([[[0.2304], [0.9551]]], 6.572742236686094, Lea55361), 
LCon89429 = concatenate_layer([Lea55361,[[[0.2182, 0.5945, 0.0908], [0.1332, 0.9786, 0.372]]]], 2, Con89429), 
LMin52396 = minimum_layer([Zer45921,Con89429], Min52396), 
LRes49884 = reshape_layer(Min52396, [2, 4, 1], Res49884), 
LRes67685 = reshape_layer(Res49884, [2, 4, 1, 1], Res67685), 
LZer84852 = zero_padding3D_layer(Res67685, 1, 1, 1, 1, 1, 1, Zer84852), 
exec_layers([LMin61830,LRes58562,LRes42826,LSep54996,LZer45921,LLea55361,LCon89429,LMin52396,LRes49884,LRes67685,LZer84852],["Min61830","Res58562","Res42826","Sep54996","Zer45921","Lea55361","Con89429","Min52396","Res49884","Res67685","Zer84852"],Zer84852,"Zer84852")

Actual (Unparsed): [[[[[0.0000000], [0.0000000], [0.0000000]], [[0.0000000], [0.0000000], [0.0000000]], [[0.0000000], [0.0000000], [0.0000000]], [[0.0000000], [0.0000000], [0.0000000]], [[0.0000000], [0.0000000], [0.0000000]], [[0.0000000], [0.0000000], [0.0000000]]], [[[0.0000000], [0.0000000], [0.0000000]], [[0.0000000], [0.0000000], [0.0000000]], [[0.0000000], [0.0000000], [0.0000000]], [[0.0000000], [0.0000000], [0.0000000]], [[0.0000000], [0.0000000], [0.0000000]], [[0.0000000], [0.0000000], [0.0000000]]], [[[0.0000000], [0.0000000], [0.0000000]], [[0.0000000], [0.6527008], [0.0000000]], [[0.0000000], [0.1332000], [0.0000000]], [[0.0000000], [0.3516918], [0.0000000]], [[0.0000000], [0.2982950], [0.0000000]], [[0.0000000], [0.0000000], [0.0000000]]], [[[0.0000000], [0.0000000], [0.0000000]], [[0.0000000], [0.0000000], [0.0000000]], [[0.0000000], [0.0000000], [0.0000000]], [[0.0000000], [0.0000000], [0.0000000]], [[0.0000000], [0.0000000], [0.0000000]], [[0.0000000], [0.0000000], [0.0000000]]]]]

Expected (Unparsed): [[[[[0],[0],[0]],[[0],[0],[0]],[[0],[0],[0]],[[0],[0],[0]],[[0],[0],[0]],[[0],[0],[0]]],[[[0],[0],[0]],[[0],[0],[0]],[[0],[0],[0]],[[0],[0],[0]],[[0],[0],[0]],[[0],[0],[0]]],[[[0],[0],[0]],[[0],[0.652700827236],[0]],[[0],[0.1332],[0]],[[0],[0.35169179494499997],[0]],[[0],[0.298295008065],[0]],[[0],[0],[0]]],[[[0],[0],[0]],[[0],[0],[0]],[[0],[0],[0]],[[0],[0],[0]],[[0],[0],[0]],[[0],[0],[0]]]]]

Actual:   [[[[[0], [0], [0]], [[0], [0], [0]], [[0], [0], [0]], [[0], [0], [0]], [[0], [0], [0]], [[0], [0], [0]]], [[[0], [0], [0]], [[0], [0], [0]], [[0], [0], [0]], [[0], [0], [0]], [[0], [0], [0]], [[0], [0], [0]]], [[[0], [0], [0]], [[0], [0.6528], [0]], [[0], [0.1332], [0]], [[0], [0.3517], [0]], [[0], [0.2983], [0]], [[0], [0], [0]]], [[[0], [0], [0]], [[0], [0], [0]], [[0], [0], [0]], [[0], [0], [0]], [[0], [0], [0]], [[0], [0], [0]]]]]

Expected: [[[[[0], [0], [0]], [[0], [0], [0]], [[0], [0], [0]], [[0], [0], [0]], [[0], [0], [0]], [[0], [0], [0]]], [[[0], [0], [0]], [[0], [0], [0]], [[0], [0], [0]], [[0], [0], [0]], [[0], [0], [0]], [[0], [0], [0]]], [[[0], [0], [0]], [[0], [0.6528], [0]], [[0], [0.1332], [0]], [[0], [0.3517], [0]], [[0], [0.2983], [0]], [[0], [0], [0]]], [[[0], [0], [0]], [[0], [0], [0]], [[0], [0], [0]], [[0], [0], [0]], [[0], [0], [0]], [[0], [0], [0]]]]]