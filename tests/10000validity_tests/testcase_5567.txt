import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Ave1460 = tf.keras.layers.Input(shape=([2, 2, 2, 2]))
in1Ave1460 = tf.keras.layers.Input(shape=([2, 2, 2, 2]))
in0Mul45743 = tf.keras.layers.Input(shape=([2, 1]))
in1Mul45743 = tf.keras.layers.Input(shape=([2, 1]))
in0Con45499 = tf.keras.layers.Input(shape=([2, 7]))
in0Con18620 = tf.keras.layers.Input(shape=([2, 8, 1, 1]))
in0Min1782 = tf.keras.layers.Input(shape=([2, 1, 1, 2]))
in1Min1782 = tf.keras.layers.Input(shape=([2, 1, 1, 2]))

Ave1460 = keras.layers.Average(name = 'Ave1460', )([in0Ave1460,in1Ave1460])
Res87800 = keras.layers.Reshape((2, 2, 4), name = 'Res87800', )(Ave1460)
Res52532 = keras.layers.Reshape((2, 8), name = 'Res52532', )(Res87800)
Mul45743 = keras.layers.Multiply(name = 'Mul45743', )([in0Mul45743,in1Mul45743])
Con45499 = keras.layers.Concatenate(axis=2, name = 'Con45499', )([Mul45743,in0Con45499])
Mul88934 = keras.layers.Multiply(name = 'Mul88934', )([Res52532,Con45499])
Res80285 = keras.layers.Reshape((2, 8, 1), name = 'Res80285', )(Mul88934)
Res19553 = keras.layers.Reshape((2, 8, 1, 1), name = 'Res19553', )(Res80285)
Con18620 = keras.layers.Concatenate(axis=4, name = 'Con18620', )([Res19553,in0Con18620])
Min1782 = keras.layers.Minimum(name = 'Min1782', )([in0Min1782,in1Min1782])
Zer17651 = keras.layers.ZeroPadding3D(padding=((0, 0), (7, 0), (0, 0)), name = 'Zer17651', )(Min1782)
Ave90299 = keras.layers.Average(name = 'Ave90299', )([Con18620,Zer17651])
model = tf.keras.models.Model(inputs=[in0Ave1460,in1Ave1460,in0Mul45743,in1Mul45743,in0Con45499,in0Con18620,in0Min1782,in1Min1782], outputs=Ave90299)
in0Ave1460 = tf.constant([[[[[0.8691, 0.0812], [0.1693, 0.0033]], [[0.6974, 0.8082], [0.5385, 0.7447]]], [[[0.5694, 0.5557], [0.7008, 0.9922]], [[0.4089, 0.7835], [0.0834, 0.8622]]]]])
in1Ave1460 = tf.constant([[[[[0.9092, 0.84], [0.5735, 0.6718]], [[0.0466, 0.3719], [0.0809, 0.4433]]], [[[0.1792, 0.1221], [0.4372, 0.5382]], [[0.4294, 0.7584], [0.7857, 0.3546]]]]])
in0Mul45743 = tf.constant([[[0.1545], [0.4631]]])
in1Mul45743 = tf.constant([[[0.2425], [0.2485]]])
in0Con45499 = tf.constant([[[0.7546, 0.0094, 0.2758, 0.9281, 0.831, 0.3309, 0.7878], [0.8113, 0.3409, 0.4331, 0.5992, 0.5468, 0.6141, 0.2802]]])
in0Con18620 = tf.constant([[[[[0.4848]], [[0.5107]], [[0.5396]], [[0.1492]], [[0.1689]], [[0.9024]], [[0.5092]], [[0.3769]]], [[[0.8895]], [[0.1922]], [[0.4569]], [[0.0275]], [[0.5575]], [[0.6488]], [[0.7508]], [[0.3062]]]]])
in0Min1782 = tf.constant([[[[[0.7082, 0.6337]]], [[[0.0168, 0.0973]]]]])
in1Min1782 = tf.constant([[[[[0.3614, 0.191]]], [[[0.3672, 0.2179]]]]])
print (np.array2string(model.predict([in0Ave1460,in1Ave1460,in0Mul45743,in1Mul45743,in0Con45499,in0Con18620,in0Min1782,in1Min1782],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Ave90299.png')

LAve1460 = average_layer([[[[[[0.8691, 0.0812], [0.1693, 0.0033]], [[0.6974, 0.8082], [0.5385, 0.7447]]], [[[0.5694, 0.5557], [0.7008, 0.9922]], [[0.4089, 0.7835], [0.0834, 0.8622]]]]], [[[[[0.9092, 0.84], [0.5735, 0.6718]], [[0.0466, 0.3719], [0.0809, 0.4433]]], [[[0.1792, 0.1221], [0.4372, 0.5382]], [[0.4294, 0.7584], [0.7857, 0.3546]]]]]], Ave1460), 
LRes87800 = reshape_layer(Ave1460, [2, 2, 4], Res87800), 
LRes52532 = reshape_layer(Res87800, [2, 8], Res52532), 
LMul45743 = multiply_layer([[[[0.1545], [0.4631]]], [[[0.2425], [0.2485]]]], Mul45743), 
LCon45499 = concatenate_layer([Mul45743,[[[0.7546, 0.0094, 0.2758, 0.9281, 0.831, 0.3309, 0.7878], [0.8113, 0.3409, 0.4331, 0.5992, 0.5468, 0.6141, 0.2802]]]], 2, Con45499), 
LMul88934 = multiply_layer([Res52532,Con45499], Mul88934), 
LRes80285 = reshape_layer(Mul88934, [2, 8, 1], Res80285), 
LRes19553 = reshape_layer(Res80285, [2, 8, 1, 1], Res19553), 
LCon18620 = concatenate_layer([Res19553,[[[[[0.4848]], [[0.5107]], [[0.5396]], [[0.1492]], [[0.1689]], [[0.9024]], [[0.5092]], [[0.3769]]], [[[0.8895]], [[0.1922]], [[0.4569]], [[0.0275]], [[0.5575]], [[0.6488]], [[0.7508]], [[0.3062]]]]]], 4, Con18620), 
LMin1782 = minimum_layer([[[[[[0.7082, 0.6337]]], [[[0.0168, 0.0973]]]]], [[[[[0.3614, 0.191]]], [[[0.3672, 0.2179]]]]]], Min1782), 
LZer17651 = zero_padding3D_layer(Min1782, 0, 0, 7, 0, 0, 0, Zer17651), 
LAve90299 = average_layer([Con18620,Zer17651], Ave90299), 
exec_layers([LAve1460,LRes87800,LRes52532,LMul45743,LCon45499,LMul88934,LRes80285,LRes19553,LCon18620,LMin1782,LZer17651,LAve90299],["Ave1460","Res87800","Res52532","Mul45743","Con45499","Mul88934","Res80285","Res19553","Con18620","Min1782","Zer17651","Ave90299"],Ave90299,"Ave90299")

Actual (Unparsed): [[[[[0.0166566, 0.2424000]], [[0.1737844, 0.2553500]], [[0.0017456, 0.2698000]], [[0.0465481, 0.0746000]], [[0.1726266, 0.0844500]], [[0.2451658, 0.4512000]], [[0.0512399, 0.2546000]], [[0.4146766, 0.2839500]]], [[[0.0215373, 0.4447500]], [[0.1374748, 0.0961000]], [[0.0969861, 0.2284500]], [[0.1657041, 0.0137500]], [[0.1255773, 0.2787500]], [[0.2107777, 0.3244000]], [[0.1334286, 0.3754000]], [[0.0936368, 0.2017500]]]]]

Expected (Unparsed): [[[[[0.01665655809375,0.2424]],[[0.17378438000000002,0.25535]],[[0.00174558,0.2698]],[[0.04654814499999999,0.0746]],[[0.17262660000000002,0.08445]],[[0.24516577499999997,0.4512]],[[0.051239865,0.2546]],[[0.4146766,0.28395000000000004]]],[[[0.021537287502500002,0.44475]],[[0.137474785,0.0961]],[[0.09698604999999999,0.22845]],[[0.16570406,0.01375]],[[0.12557734,0.27875]],[[0.21077773,0.3244]],[[0.1334285775,0.3754]],[[0.09363684000000001,0.20175]]]]]

Actual:   [[[[[0.0167, 0.2424]], [[0.1738, 0.2554]], [[0.0018, 0.2698]], [[0.0466, 0.0746]], [[0.1727, 0.0845]], [[0.2452, 0.4512]], [[0.0513, 0.2546]], [[0.4147, 0.284]]], [[[0.0216, 0.4448]], [[0.1375, 0.0961]], [[0.097, 0.2285]], [[0.1658, 0.0138]], [[0.1256, 0.2788]], [[0.2108, 0.3244]], [[0.1335, 0.3754]], [[0.0937, 0.2018]]]]]

Expected: [[[[[0.0167, 0.2424]], [[0.1738, 0.2554]], [[0.0018, 0.2698]], [[0.0466, 0.0746]], [[0.1727, 0.0845]], [[0.2452, 0.4512]], [[0.0513, 0.2546]], [[0.4147, 0.284]]], [[[0.0216, 0.4448]], [[0.1375, 0.0961]], [[0.097, 0.2285]], [[0.1658, 0.0138]], [[0.1256, 0.2788]], [[0.2108, 0.3244]], [[0.1335, 0.3754]], [[0.0937, 0.2018]]]]]