import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Min49654 = tf.keras.layers.Input(shape=([1, 1, 1]))
in1Min49654 = tf.keras.layers.Input(shape=([1, 1, 1]))
in0Con10204 = tf.keras.layers.Input(shape=([2, 3]))
in0Min41223 = tf.keras.layers.Input(shape=([2, 1]))
in1Min41223 = tf.keras.layers.Input(shape=([2, 1]))
in0Con36053 = tf.keras.layers.Input(shape=([2, 3]))
in0Add73871 = tf.keras.layers.Input(shape=([2, 2, 1, 2]))
in1Add73871 = tf.keras.layers.Input(shape=([2, 2, 1, 2]))

Min49654 = keras.layers.Minimum(name = 'Min49654', )([in0Min49654,in1Min49654])
Sof67323 = keras.layers.Softmax(axis=1, name = 'Sof67323', )(Min49654)
Res65428 = keras.layers.Reshape((1, 1), name = 'Res65428', )(Sof67323)
Zer51042 = keras.layers.ZeroPadding1D(padding=((1, 0)), name = 'Zer51042', )(Res65428)
Con10204 = keras.layers.Concatenate(axis=2, name = 'Con10204', )([Zer51042,in0Con10204])
Min41223 = keras.layers.Minimum(name = 'Min41223', )([in0Min41223,in1Min41223])
Con36053 = keras.layers.Concatenate(axis=2, name = 'Con36053', )([Min41223,in0Con36053])
Add73871 = keras.layers.Add(name = 'Add73871', )([in0Add73871,in1Add73871])
Res7087 = keras.layers.Reshape((2, 2, 2), name = 'Res7087', )(Add73871)
Res22481 = keras.layers.Reshape((2, 4), name = 'Res22481', )(Res7087)
Cro30231 = keras.layers.Cropping1D(cropping=((0, 0)), name = 'Cro30231', )(Res22481)
Ave7033 = keras.layers.Average(name = 'Ave7033', )([Con36053,Cro30231])
Ave48772 = keras.layers.Average(name = 'Ave48772', )([Con10204,Ave7033])
model = tf.keras.models.Model(inputs=[in0Min49654,in1Min49654,in0Con10204,in0Min41223,in1Min41223,in0Con36053,in0Add73871,in1Add73871], outputs=Ave48772)
in0Min49654 = tf.constant([[[[0.7282]]]])
in1Min49654 = tf.constant([[[[0.7785]]]])
in0Con10204 = tf.constant([[[0.6807, 0.2837, 0.3844], [0.1287, 0.4145, 0.9218]]])
in0Min41223 = tf.constant([[[0.6891], [0.7602]]])
in1Min41223 = tf.constant([[[0.1042], [0.7673]]])
in0Con36053 = tf.constant([[[0.7625, 0.932, 0.9728], [0.5001, 0.7711, 0.3702]]])
in0Add73871 = tf.constant([[[[[0.4233, 0.1542]], [[0.4518, 0.6063]]], [[[0.1818, 0.5806]], [[0.3505, 0.6983]]]]])
in1Add73871 = tf.constant([[[[[0.9655, 0.4113]], [[0.9116, 0.7333]]], [[[0.9733, 0.4392]], [[0.3051, 0.382]]]]])
print (np.array2string(model.predict([in0Min49654,in1Min49654,in0Con10204,in0Min41223,in1Min41223,in0Con36053,in0Add73871,in1Add73871],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Ave48772.png')

LMin49654 = minimum_layer([[[[[0.7282]]]], [[[[0.7785]]]]], Min49654), 
LSof67323 = softmax_layer(Min49654, 1, Sof67323), 
LRes65428 = reshape_layer(Sof67323, [1, 1], Res65428), 
LZer51042 = zero_padding1D_layer(Res65428, 1, 0, Zer51042), 
LCon10204 = concatenate_layer([Zer51042,[[[0.6807, 0.2837, 0.3844], [0.1287, 0.4145, 0.9218]]]], 2, Con10204), 
LMin41223 = minimum_layer([[[[0.6891], [0.7602]]], [[[0.1042], [0.7673]]]], Min41223), 
LCon36053 = concatenate_layer([Min41223,[[[0.7625, 0.932, 0.9728], [0.5001, 0.7711, 0.3702]]]], 2, Con36053), 
LAdd73871 = add_layer([[[[[[0.4233, 0.1542]], [[0.4518, 0.6063]]], [[[0.1818, 0.5806]], [[0.3505, 0.6983]]]]], [[[[[0.9655, 0.4113]], [[0.9116, 0.7333]]], [[[0.9733, 0.4392]], [[0.3051, 0.382]]]]]], Add73871), 
LRes7087 = reshape_layer(Add73871, [2, 2, 2], Res7087), 
LRes22481 = reshape_layer(Res7087, [2, 4], Res22481), 
LCro30231 = cropping1D_layer(Res22481, 0, 0, Cro30231), 
LAve7033 = average_layer([Con36053,Cro30231], Ave7033), 
LAve48772 = average_layer([Con10204,Ave7033], Ave48772), 
exec_layers([LMin49654,LSof67323,LRes65428,LZer51042,LCon10204,LMin41223,LCon36053,LAdd73871,LRes7087,LRes22481,LCro30231,LAve7033,LAve48772],["Min49654","Sof67323","Res65428","Zer51042","Con10204","Min41223","Con36053","Add73871","Res7087","Res22481","Cro30231","Ave7033","Ave48772"],Ave48772,"Ave48772")

Actual (Unparsed): [[[0.3732500, 0.6723500, 0.7157000, 0.7703000], [0.9788250, 0.4443250, 0.5639250, 0.8235250]]]

Expected (Unparsed): [[[0.37325,0.67235,0.7157,0.7703],[0.9788250000000001,0.444325,0.563925,0.823525]]]

Actual:   [[[0.3733, 0.6724, 0.7157, 0.7703], [0.9789, 0.4444, 0.564, 0.8236]]]

Expected: [[[0.3733, 0.6724, 0.7157, 0.7703], [0.9789, 0.4444, 0.564, 0.8236]]]