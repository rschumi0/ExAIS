import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Ave5952 = tf.keras.layers.Input(shape=([1, 2, 2]))
in1Ave5952 = tf.keras.layers.Input(shape=([1, 2, 2]))
in0Ave63825 = tf.keras.layers.Input(shape=([2, 2, 1]))
in1Ave63825 = tf.keras.layers.Input(shape=([2, 2, 1]))
in0Con70156 = tf.keras.layers.Input(shape=([3, 1]))
in0Dot22405 = tf.keras.layers.Input(shape=([3, 3]))
in1Dot22405 = tf.keras.layers.Input(shape=([3, 3]))
in0Con4550 = tf.keras.layers.Input(shape=([3, 1]))

Ave5952 = keras.layers.Average(name = 'Ave5952', )([in0Ave5952,in1Ave5952])
Res65612 = keras.layers.Reshape((1, 4), name = 'Res65612', )(Ave5952)
Zer69550 = keras.layers.ZeroPadding1D(padding=((2, 0)), name = 'Zer69550', )(Res65612)
Ave63825 = keras.layers.Average(name = 'Ave63825', )([in0Ave63825,in1Ave63825])
Res68039 = keras.layers.Reshape((2, 2), name = 'Res68039', )(Ave63825)
Zer69074 = keras.layers.ZeroPadding1D(padding=((1, 0)), name = 'Zer69074', )(Res68039)
Con70156 = keras.layers.Concatenate(axis=2, name = 'Con70156', )([Zer69074,in0Con70156])
Dot22405 = keras.layers.Dot(axes=(1, 1), name = 'Dot22405', )([in0Dot22405,in1Dot22405])
Max4389 = keras.layers.Maximum(name = 'Max4389', )([Con70156,Dot22405])
Mas51372 = keras.layers.Masking(mask_value=2, name = 'Mas51372', )(Max4389)
Con4550 = keras.layers.Concatenate(axis=2, name = 'Con4550', )([Mas51372,in0Con4550])
Mul94808 = keras.layers.Multiply(name = 'Mul94808', )([Zer69550,Con4550])
Cro69959 = keras.layers.Cropping1D(cropping=((0, 0)), name = 'Cro69959', )(Mul94808)
model = tf.keras.models.Model(inputs=[in0Ave5952,in1Ave5952,in0Ave63825,in1Ave63825,in0Con70156,in0Dot22405,in1Dot22405,in0Con4550], outputs=Cro69959)
in0Ave5952 = tf.constant([[[[0.6611, 0.9294], [0.0283, 0.8404]]]])
in1Ave5952 = tf.constant([[[[0.2361, 0.7934], [0.7365, 0.8076]]]])
in0Ave63825 = tf.constant([[[[0.9712], [0.3262]], [[0.577], [0.7847]]]])
in1Ave63825 = tf.constant([[[[0.7025], [0.7474]], [[0.9194], [0.1609]]]])
in0Con70156 = tf.constant([[[0.8341], [0.8599], [0.1053]]])
in0Dot22405 = tf.constant([[[0.7467, 0.3222, 0.4389], [0.1968, 0.8976, 0.1519], [0.0107, 0.7342, 0.529]]])
in1Dot22405 = tf.constant([[[0.1388, 0.5839, 0.6279], [0.9059, 0.5925, 0.7092], [0.7558, 0.4884, 0.326]]])
in0Con4550 = tf.constant([[[0.0748], [0.2779], [0.8546]]])
print (np.array2string(model.predict([in0Ave5952,in1Ave5952,in0Ave63825,in1Ave63825,in0Con70156,in0Dot22405,in1Dot22405,in0Con4550],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Cro69959.png')

LAve5952 = average_layer([[[[[0.6611, 0.9294], [0.0283, 0.8404]]]], [[[[0.2361, 0.7934], [0.7365, 0.8076]]]]], Ave5952), 
LRes65612 = reshape_layer(Ave5952, [1, 4], Res65612), 
LZer69550 = zero_padding1D_layer(Res65612, 2, 0, Zer69550), 
LAve63825 = average_layer([[[[[0.9712], [0.3262]], [[0.577], [0.7847]]]], [[[[0.7025], [0.7474]], [[0.9194], [0.1609]]]]], Ave63825), 
LRes68039 = reshape_layer(Ave63825, [2, 2], Res68039), 
LZer69074 = zero_padding1D_layer(Res68039, 1, 0, Zer69074), 
LCon70156 = concatenate_layer([Zer69074,[[[0.8341], [0.8599], [0.1053]]]], 2, Con70156), 
LDot22405 = dot_layer([[[0.7467, 0.3222, 0.4389], [0.1968, 0.8976, 0.1519], [0.0107, 0.7342, 0.529]]], [[[0.1388, 0.5839, 0.6279], [0.9059, 0.5925, 0.7092], [0.7558, 0.4884, 0.326]]], 1, 1, Dot22405), 
LMax4389 = maximum_layer([Con70156,Dot22405], Max4389), 
LMas51372 = masking_layer(Max4389, 2, Mas51372), 
LCon4550 = concatenate_layer([Mas51372,[[[0.0748], [0.2779], [0.8546]]]], 2, Con4550), 
LMul94808 = multiply_layer([Zer69550,Con4550], Mul94808), 
LCro69959 = cropping1D_layer(Mul94808, 0, 0, Cro69959), 
exec_layers([LAve5952,LRes65612,LZer69550,LAve63825,LRes68039,LZer69074,LCon70156,LDot22405,LMax4389,LMas51372,LCon4550,LMul94808,LCro69959],["Ave5952","Res65612","Zer69550","Ave63825","Res68039","Zer69074","Con70156","Dot22405","Max4389","Mas51372","Con4550","Mul94808","Cro69959"],Cro69959,"Cro69959")

Actual (Unparsed): [[[0.0000000, 0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000, 0.0000000], [0.3356425, 0.5208352, 0.2125252, 0.7041904]]]

Expected (Unparsed): [[[0.0,0.0,0.0,0.0],[0.0,0.0,0.0,0.0],[0.33564252,0.520835224884,0.21252522049600003,0.7041904000000001]]]

Actual:   [[[0, 0, 0, 0], [0, 0, 0, 0], [0.3357, 0.5209, 0.2126, 0.7042]]]

Expected: [[[0, 0, 0, 0], [0, 0, 0, 0], [0.3357, 0.5209, 0.2126, 0.7042]]]