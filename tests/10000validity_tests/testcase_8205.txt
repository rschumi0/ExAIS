import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Sub68898 = tf.keras.layers.Input(shape=([2, 2, 2]))
in1Sub68898 = tf.keras.layers.Input(shape=([2, 2, 2]))
in0Con90629 = tf.keras.layers.Input(shape=([1, 1]))
in0Con38389 = tf.keras.layers.Input(shape=([4, 2]))
in0Con99291 = tf.keras.layers.Input(shape=([2, 1]))

Sub68898 = keras.layers.Subtract(name = 'Sub68898', )([in0Sub68898,in1Sub68898])
Up_73321 = keras.layers.UpSampling2D(size=(2, 1), name = 'Up_73321', )(Sub68898)
Res26524 = keras.layers.Reshape((4, 4), name = 'Res26524', )(Up_73321)
Con90629 = keras.layers.Conv1D(2, (1),strides=(1), padding='same', dilation_rate=(1), name = 'Con90629', )(in0Con90629)
Zer88502 = keras.layers.ZeroPadding1D(padding=((3, 0)), name = 'Zer88502', )(Con90629)
Con38389 = keras.layers.Concatenate(axis=2, name = 'Con38389', )([Zer88502,in0Con38389])
Add80802 = keras.layers.Add(name = 'Add80802', )([Res26524,Con38389])
Con99291 = keras.layers.Conv1D(4, (1),strides=(1), padding='same', dilation_rate=(1), name = 'Con99291', )(in0Con99291)
Zer60735 = keras.layers.ZeroPadding1D(padding=((2, 0)), name = 'Zer60735', )(Con99291)
Mul38869 = keras.layers.Multiply(name = 'Mul38869', )([Add80802,Zer60735])
model = tf.keras.models.Model(inputs=[in0Sub68898,in1Sub68898,in0Con90629,in0Con38389,in0Con99291], outputs=Mul38869)
w = model.get_layer('Con90629').get_weights() 
w[0] = np.array([[[0.3262, 0.5085]]])
w[1] = np.array([0, 0])
model.get_layer('Con90629').set_weights(w) 
w = model.get_layer('Con99291').get_weights() 
w[0] = np.array([[[0.2534, 0.2966, 0.7352, 0.4455]]])
w[1] = np.array([0, 0, 0, 0])
model.get_layer('Con99291').set_weights(w) 
in0Sub68898 = tf.constant([[[[0.7746, 0.6029], [0.979, 0.2291]], [[0.0906, 0.7401], [0.9836, 0.2493]]]])
in1Sub68898 = tf.constant([[[[0.3103, 0.1127], [0.5634, 0.1414]], [[0.8613, 0.4673], [0.2534, 0.9185]]]])
in0Con90629 = tf.constant([[[0.4574]]])
in0Con38389 = tf.constant([[[0.0628, 0.9251], [0.5446, 0.5193], [0.8365, 0.7327], [0.1934, 0.8241]]])
in0Con99291 = tf.constant([[[0.5283], [0.881]]])
print (np.array2string(model.predict([in0Sub68898,in1Sub68898,in0Con90629,in0Con38389,in0Con99291],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Mul38869.png')

LSub68898 = subtract_layer([[[[0.7746, 0.6029], [0.979, 0.2291]], [[0.0906, 0.7401], [0.9836, 0.2493]]]], [[[[0.3103, 0.1127], [0.5634, 0.1414]], [[0.8613, 0.4673], [0.2534, 0.9185]]]], Sub68898), 
LUp_73321 = up_sampling2D_layer(Sub68898, 2, 1, Up_73321), 
LRes26524 = reshape_layer(Up_73321, [4, 4], Res26524), 
LCon90629 = conv1D_layer([[[0.4574]]], 1,[[[0.3262, 0.5085]]],[0, 0], 1, true, 1, Con90629), 
LZer88502 = zero_padding1D_layer(Con90629, 3, 0, Zer88502), 
LCon38389 = concatenate_layer([Zer88502,[[[0.0628, 0.9251], [0.5446, 0.5193], [0.8365, 0.7327], [0.1934, 0.8241]]]], 2, Con38389), 
LAdd80802 = add_layer([Res26524,Con38389], Add80802), 
LCon99291 = conv1D_layer([[[0.5283], [0.881]]], 1,[[[0.2534, 0.2966, 0.7352, 0.4455]]],[0, 0, 0, 0], 1, true, 1, Con99291), 
LZer60735 = zero_padding1D_layer(Con99291, 2, 0, Zer60735), 
LMul38869 = multiply_layer([Add80802,Zer60735], Mul38869), 
exec_layers([LSub68898,LUp_73321,LRes26524,LCon90629,LZer88502,LCon38389,LAdd80802,LCon99291,LZer60735,LMul38869],["Sub68898","Up_73321","Res26524","Con90629","Zer88502","Con38389","Add80802","Con99291","Zer60735","Mul38869"],Mul38869,"Mul38869")

Actual (Unparsed): [[[0.0000000, 0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000, 0.0000000], [-0.1031745, 0.0427461, 0.6085159, 0.0149452], [-0.1387461, 0.1320602, 0.5982261, 0.0607960]]]

Expected (Unparsed): [[[0.0,0.0,0.0,0.0],[0.0,0.0,0.0,0.0],[-0.103174549254,0.04274606318399999,0.608515930872,0.014945210775],[-0.138746149907848,0.13206018305433997,0.5982260643199999,0.06079600395000001]]]

Actual:   [[[0, 0, 0, 0], [0, 0, 0, 0], [-0.1031, 0.0428, 0.6086, 0.015], [-0.1387, 0.1321, 0.5983, 0.0608]]]

Expected: [[[0, 0, 0, 0], [0, 0, 0, 0], [-0.1031, 0.0428, 0.6086, 0.015], [-0.1387, 0.1321, 0.5983, 0.0608]]]