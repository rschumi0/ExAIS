import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Dot24756 = tf.keras.layers.Input(shape=([2, 2]))
in1Dot24756 = tf.keras.layers.Input(shape=([2, 2]))
in0Con17865 = tf.keras.layers.Input(shape=([3, 3, 4, 1]))
in0Sim37424 = tf.keras.layers.Input(shape=([3, 2]))
in0Con62398 = tf.keras.layers.Input(shape=([3, 3, 3]))
in0Con25693 = tf.keras.layers.Input(shape=([1, 2, 1]))
in0Glo95397 = tf.keras.layers.Input(shape=([1, 1]))
in0Con58233 = tf.keras.layers.Input(shape=([3, 3, 3]))
in0Con21141 = tf.keras.layers.Input(shape=([3, 3, 4, 1]))
in0Ave55256 = tf.keras.layers.Input(shape=([2, 1, 2, 2]))
in1Ave55256 = tf.keras.layers.Input(shape=([2, 1, 2, 2]))

Dot24756 = keras.layers.Dot(axes=(2, 2), name = 'Dot24756', )([in0Dot24756,in1Dot24756])
Res7655 = keras.layers.Reshape((2, 2, 1), name = 'Res7655', )(Dot24756)
Res38937 = keras.layers.Reshape((2, 2, 1, 1), name = 'Res38937', )(Res7655)
Zer87673 = keras.layers.ZeroPadding3D(padding=((1, 0), (1, 0), (3, 0)), name = 'Zer87673', )(Res38937)
Con17865 = keras.layers.Concatenate(axis=4, name = 'Con17865', )([Zer87673,in0Con17865])
Sim37424 = keras.layers.SimpleRNN(2,name = 'Sim37424', )(in0Sim37424)
Res74936 = keras.layers.Reshape((2, 1), name = 'Res74936', )(Sim37424)
Res29204 = keras.layers.Reshape((2, 1, 1), name = 'Res29204', )(Res74936)
Zer68231 = keras.layers.ZeroPadding2D(padding=((1, 0), (2, 0)), name = 'Zer68231', )(Res29204)
Con62398 = keras.layers.Concatenate(axis=3, name = 'Con62398', )([Zer68231,in0Con62398])
Con25693 = keras.layers.Conv2D(4, (1, 2),strides=(1, 1), padding='same', dilation_rate=(1, 1), name = 'Con25693', )(in0Con25693)
Zer78772 = keras.layers.ZeroPadding2D(padding=((2, 0), (1, 0)), name = 'Zer78772', )(Con25693)
Glo95397 = keras.layers.GlobalAveragePooling1D(name = 'Glo95397', )(in0Glo95397)
Res97985 = keras.layers.Reshape((1, 1), name = 'Res97985', )(Glo95397)
Res83340 = keras.layers.Reshape((1, 1, 1), name = 'Res83340', )(Res97985)
Zer59927 = keras.layers.ZeroPadding2D(padding=((1, 1), (1, 1)), name = 'Zer59927', )(Res83340)
Con58233 = keras.layers.Concatenate(axis=3, name = 'Con58233', )([Zer59927,in0Con58233])
Add42233 = keras.layers.Add(name = 'Add42233', )([Zer78772,Con58233])
Add83430 = keras.layers.Add(name = 'Add83430', )([Con62398,Add42233])
Res682 = keras.layers.Reshape((3, 3, 4, 1), name = 'Res682', )(Add83430)
Con21141 = keras.layers.Concatenate(axis=4, name = 'Con21141', )([Res682,in0Con21141])
Ave55256 = keras.layers.Average(name = 'Ave55256', )([in0Ave55256,in1Ave55256])
Zer26783 = keras.layers.ZeroPadding3D(padding=((1, 0), (2, 0), (2, 0)), name = 'Zer26783', )(Ave55256)
Min25388 = keras.layers.Minimum(name = 'Min25388', )([Con21141,Zer26783])
Mul71835 = keras.layers.Multiply(name = 'Mul71835', )([Con17865,Min25388])
model = tf.keras.models.Model(inputs=[in0Dot24756,in1Dot24756,in0Con17865,in0Sim37424,in0Con62398,in0Con25693,in0Glo95397,in0Con58233,in0Con21141,in0Ave55256,in1Ave55256], outputs=Mul71835)
w = model.get_layer('Sim37424').get_weights() 
w[0] = np.array([[10, 10], [9, 10]])
w[1] = np.array([[8, 1], [7, 3]])
w[2] = np.array([1, 2])
model.get_layer('Sim37424').set_weights(w) 
w = model.get_layer('Con25693').get_weights() 
w[0] = np.array([[[[0.7296, 0.9741, 0.5985, 0.1515]], [[0.5706, 0.7584, 0.8476, 0.9675]]]])
w[1] = np.array([0, 0, 0, 0])
model.get_layer('Con25693').set_weights(w) 
in0Dot24756 = tf.constant([[[0.191, 0.7632], [0.0781, 0.1128]]])
in1Dot24756 = tf.constant([[[0.4879, 0.1104], [0.2279, 0.4108]]])
in0Con17865 = tf.constant([[[[[0.6358], [0.0613], [0.1815], [0.444]], [[0.877], [0.4412], [0.9094], [0.9874]], [[0.7212], [0.3922], [0.9129], [0.5955]]], [[[0.7767], [0.6857], [0.1949], [0.3746]], [[0.2079], [0.2143], [0.0784], [0.9012]], [[0.9212], [0.0838], [0.0665], [0.1707]]], [[[0.9528], [0.9292], [0.0345], [0.3165]], [[0.536], [0.3593], [0.811], [0.8035]], [[0.0839], [0.1958], [0.7877], [0.5145]]]]])
in0Sim37424 = tf.constant([[[9, 3], [3, 7], [8, 6]]])
in0Con62398 = tf.constant([[[[0.9264, 0.9622, 0.0796], [0.3984, 0.3013, 0.6408], [0.1302, 0.8302, 0.3029]], [[0.7442, 0.9616, 0.1499], [0.486, 0.765, 0.9677], [0.2619, 0.2689, 0.6068]], [[0.2229, 0.1951, 0.9826], [0.6924, 0.8895, 0.2397], [0.8221, 0.1115, 0.5291]]]])
in0Con25693 = tf.constant([[[[0.0628], [0.2919]]]])
in0Glo95397 = tf.constant([[[1.8065]]])
in0Con58233 = tf.constant([[[[0.4392, 0.0796, 0.3438], [0.9762, 0.6844, 0.6353], [0.9395, 0.0157, 0.2193]], [[0.797, 0.52, 0.3634], [0.7756, 0.0376, 0.704], [0.7204, 0.0157, 0.0613]], [[0.6359, 0.5818, 0.4297], [0.0573, 0.6036, 0.1564], [0.6439, 0.2439, 0.8329]]]])
in0Con21141 = tf.constant([[[[[0.9799], [0.8617], [0.5586], [0.4281]], [[0.4641], [0.6832], [0.3199], [0.4896]], [[0.3772], [0.5931], [0.6037], [0.7927]]], [[[0.7303], [0.037], [0.0216], [0.1915]], [[0.5035], [0.4428], [0.204], [0.6627]], [[0.3382], [0.561], [0.9497], [0.2155]]], [[[0.1663], [0.9993], [0.2459], [0.0449]], [[0.9922], [0.0139], [0.8743], [0.9988]], [[0.4598], [0.1086], [0.1903], [0.4915]]]]])
in0Ave55256 = tf.constant([[[[[0.3588, 0.8401], [0.925, 0.2583]]], [[[0.1213, 0.5719], [0.4135, 0.9926]]]]])
in1Ave55256 = tf.constant([[[[[0.2141, 0.9755], [0.493, 0.4206]]], [[[0.6968, 0.0755], [0.5068, 0.5713]]]]])
print (np.array2string(model.predict([in0Dot24756,in1Dot24756,in0Con17865,in0Sim37424,in0Con62398,in0Con25693,in0Glo95397,in0Con58233,in0Con21141,in0Ave55256,in1Ave55256],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Mul71835.png')

LDot24756 = dot_layer([[[0.191, 0.7632], [0.0781, 0.1128]]], [[[0.4879, 0.1104], [0.2279, 0.4108]]], 2, 2, Dot24756), 
LRes7655 = reshape_layer(Dot24756, [2, 2, 1], Res7655), 
LRes38937 = reshape_layer(Res7655, [2, 2, 1, 1], Res38937), 
LZer87673 = zero_padding3D_layer(Res38937, 1, 0, 1, 0, 3, 0, Zer87673), 
LCon17865 = concatenate_layer([Zer87673,[[[[[0.6358], [0.0613], [0.1815], [0.444]], [[0.877], [0.4412], [0.9094], [0.9874]], [[0.7212], [0.3922], [0.9129], [0.5955]]], [[[0.7767], [0.6857], [0.1949], [0.3746]], [[0.2079], [0.2143], [0.0784], [0.9012]], [[0.9212], [0.0838], [0.0665], [0.1707]]], [[[0.9528], [0.9292], [0.0345], [0.3165]], [[0.536], [0.3593], [0.811], [0.8035]], [[0.0839], [0.1958], [0.7877], [0.5145]]]]]], 4, Con17865), 
LSim37424 = simple_rnn_layer([[[9, 3], [3, 7], [8, 6]]],[[10, 10], [9, 10]],[[8, 1], [7, 3]],[1, 2], Sim37424), 
LRes74936 = reshape_layer(Sim37424, [2, 1], Res74936), 
LRes29204 = reshape_layer(Res74936, [2, 1, 1], Res29204), 
LZer68231 = zero_padding2D_layer(Res29204, 1, 0, 2, 0, Zer68231), 
LCon62398 = concatenate_layer([Zer68231,[[[[0.9264, 0.9622, 0.0796], [0.3984, 0.3013, 0.6408], [0.1302, 0.8302, 0.3029]], [[0.7442, 0.9616, 0.1499], [0.486, 0.765, 0.9677], [0.2619, 0.2689, 0.6068]], [[0.2229, 0.1951, 0.9826], [0.6924, 0.8895, 0.2397], [0.8221, 0.1115, 0.5291]]]]], 3, Con62398), 
LCon25693 = conv2D_layer([[[[0.0628], [0.2919]]]], 1, 2,[[[[0.7296, 0.9741, 0.5985, 0.1515]], [[0.5706, 0.7584, 0.8476, 0.9675]]]],[0, 0, 0, 0], 1, 1, true, 1, 1, Con25693), 
LZer78772 = zero_padding2D_layer(Con25693, 2, 0, 1, 0, Zer78772), 
LGlo95397 = global_average_pooling1D_layer([[[1.8065]]], Glo95397), 
LRes97985 = reshape_layer(Glo95397, [1, 1], Res97985), 
LRes83340 = reshape_layer(Res97985, [1, 1, 1], Res83340), 
LZer59927 = zero_padding2D_layer(Res83340, 1, 1, 1, 1, Zer59927), 
LCon58233 = concatenate_layer([Zer59927,[[[[0.4392, 0.0796, 0.3438], [0.9762, 0.6844, 0.6353], [0.9395, 0.0157, 0.2193]], [[0.797, 0.52, 0.3634], [0.7756, 0.0376, 0.704], [0.7204, 0.0157, 0.0613]], [[0.6359, 0.5818, 0.4297], [0.0573, 0.6036, 0.1564], [0.6439, 0.2439, 0.8329]]]]], 3, Con58233), 
LAdd42233 = add_layer([Zer78772,Con58233], Add42233), 
LAdd83430 = add_layer([Con62398,Add42233], Add83430), 
LRes682 = reshape_layer(Add83430, [3, 3, 4, 1], Res682), 
LCon21141 = concatenate_layer([Res682,[[[[[0.9799], [0.8617], [0.5586], [0.4281]], [[0.4641], [0.6832], [0.3199], [0.4896]], [[0.3772], [0.5931], [0.6037], [0.7927]]], [[[0.7303], [0.037], [0.0216], [0.1915]], [[0.5035], [0.4428], [0.204], [0.6627]], [[0.3382], [0.561], [0.9497], [0.2155]]], [[[0.1663], [0.9993], [0.2459], [0.0449]], [[0.9922], [0.0139], [0.8743], [0.9988]], [[0.4598], [0.1086], [0.1903], [0.4915]]]]]], 4, Con21141), 
LAve55256 = average_layer([[[[[[0.3588, 0.8401], [0.925, 0.2583]]], [[[0.1213, 0.5719], [0.4135, 0.9926]]]]], [[[[[0.2141, 0.9755], [0.493, 0.4206]]], [[[0.6968, 0.0755], [0.5068, 0.5713]]]]]], Ave55256), 
LZer26783 = zero_padding3D_layer(Ave55256, 1, 0, 2, 0, 2, 0, Zer26783), 
LMin25388 = minimum_layer([Con21141,Zer26783], Min25388), 
LMul71835 = multiply_layer([Con17865,Min25388], Mul71835), 
exec_layers([LDot24756,LRes7655,LRes38937,LZer87673,LCon17865,LSim37424,LRes74936,LRes29204,LZer68231,LCon62398,LCon25693,LZer78772,LGlo95397,LRes97985,LRes83340,LZer59927,LCon58233,LAdd42233,LAdd83430,LRes682,LCon21141,LAve55256,LZer26783,LMin25388,LMul71835],["Dot24756","Res7655","Res38937","Zer87673","Con17865","Sim37424","Res74936","Res29204","Zer68231","Con62398","Con25693","Zer78772","Glo95397","Res97985","Res83340","Zer59927","Con58233","Add42233","Add83430","Res682","Con21141","Ave55256","Zer26783","Min25388","Mul71835"],Mul71835,"Mul71835")

Actual (Unparsed): [[[[[0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000]], [[0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000]], [[0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000]]], [[[0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000]], [[0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000]], [[0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0603687], [0.2385461, 0.0367858]]], [[[0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000]], [[0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000]], [[0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.1498993], [0.0295127, 0.2528768]]]]]

Expected (Unparsed): [[[[[0,0.0],[0,0.0],[0,0.0],[0,0.0]],[[0,0.0],[0,0.0],[0,0.0],[0,0.0]],[[0,0.0],[0,0.0],[0,0.0],[0,0.0]]],[[[0,0.0],[0,0.0],[0,0.0],[0,0.0]],[[0,0.0],[0,0.0],[0,0.0],[0.0,0.0]],[[0,0.0],[0,0.0],[0.0,0.0603687],[0.238546080426,0.036785849999999995]]],[[[0,0.0],[0,0.0],[0,0.0],[0,0.0]],[[0,0.0],[0,0.0],[0,0.0],[0.0,0.0]],[[0,0.0],[0,0.0],[0.0,0.14989930999999998],[0.029512746384499994,0.25287675]]]]]

Actual:   [[[[[0, 0], [0, 0], [0, 0], [0, 0]], [[0, 0], [0, 0], [0, 0], [0, 0]], [[0, 0], [0, 0], [0, 0], [0, 0]]], [[[0, 0], [0, 0], [0, 0], [0, 0]], [[0, 0], [0, 0], [0, 0], [0, 0]], [[0, 0], [0, 0], [0, 0.0604], [0.2386, 0.0368]]], [[[0, 0], [0, 0], [0, 0], [0, 0]], [[0, 0], [0, 0], [0, 0], [0, 0]], [[0, 0], [0, 0], [0, 0.1499], [0.0296, 0.2529]]]]]

Expected: [[[[[0, 0], [0, 0], [0, 0], [0, 0]], [[0, 0], [0, 0], [0, 0], [0, 0]], [[0, 0], [0, 0], [0, 0], [0, 0]]], [[[0, 0], [0, 0], [0, 0], [0, 0]], [[0, 0], [0, 0], [0, 0], [0, 0]], [[0, 0], [0, 0], [0, 0.0604], [0.2386, 0.0368]]], [[[0, 0], [0, 0], [0, 0], [0, 0]], [[0, 0], [0, 0], [0, 0], [0, 0]], [[0, 0], [0, 0], [0, 0.1499], [0.0296, 0.2529]]]]]