import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Mul6015 = tf.keras.layers.Input(shape=([2, 2, 1, 2]))
in1Mul6015 = tf.keras.layers.Input(shape=([2, 2, 1, 2]))
in0Add92236 = tf.keras.layers.Input(shape=([1, 1, 2, 1]))
in1Add92236 = tf.keras.layers.Input(shape=([1, 1, 2, 1]))
in0Thr31322 = tf.keras.layers.Input(shape=([2, 1, 1, 1]))

Mul6015 = keras.layers.Multiply(name = 'Mul6015', )([in0Mul6015,in1Mul6015])
Res63126 = keras.layers.Reshape((2, 2, 2), name = 'Res63126', )(Mul6015)
Res90704 = keras.layers.Reshape((2, 4), name = 'Res90704', )(Res63126)
Cro91800 = keras.layers.Cropping1D(cropping=((0, 1)), name = 'Cro91800', )(Res90704)
Res18485 = keras.layers.Reshape((1, 4, 1), name = 'Res18485', )(Cro91800)
Res90714 = keras.layers.Reshape((1, 4, 1, 1), name = 'Res90714', )(Res18485)
Zer2735 = keras.layers.ZeroPadding3D(padding=((1, 0), (3, 0), (2, 0)), name = 'Zer2735', )(Res90714)
Add92236 = keras.layers.Add(name = 'Add92236', )([in0Add92236,in1Add92236])
Zer54250 = keras.layers.ZeroPadding3D(padding=((1, 0), (0, 0), (1, 0)), name = 'Zer54250', )(Add92236)
Thr31322 = keras.layers.ThresholdedReLU(theta=1.6826356974769985, name = 'Thr31322', input_shape=(2, 1, 1, 1))(in0Thr31322)
Zer35251 = keras.layers.ZeroPadding3D(padding=((0, 0), (0, 0), (2, 0)), name = 'Zer35251', )(Thr31322)
Ave81786 = keras.layers.Average(name = 'Ave81786', )([Zer54250,Zer35251])
Zer34578 = keras.layers.ZeroPadding3D(padding=((0, 0), (6, 0), (0, 0)), name = 'Zer34578', )(Ave81786)
Ave48388 = keras.layers.Average(name = 'Ave48388', )([Zer2735,Zer34578])
model = tf.keras.models.Model(inputs=[in0Mul6015,in1Mul6015,in0Add92236,in1Add92236,in0Thr31322], outputs=Ave48388)
in0Mul6015 = tf.constant([[[[[0.853, 0.698]], [[0.1609, 0.837]]], [[[0.0691, 0.3333]], [[0.3206, 0.2721]]]]])
in1Mul6015 = tf.constant([[[[[0.1662, 0.2566]], [[0.8938, 0.5467]]], [[[0.9407, 0.7387]], [[0.3959, 0.3749]]]]])
in0Add92236 = tf.constant([[[[[0.5295], [0.9321]]]]])
in1Add92236 = tf.constant([[[[[0.7352], [0.5316]]]]])
in0Thr31322 = tf.constant([[[[[0.1576]]], [[[0.8396]]]]])
print (np.array2string(model.predict([in0Mul6015,in1Mul6015,in0Add92236,in1Add92236,in0Thr31322],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Ave48388.png')

LMul6015 = multiply_layer([[[[[[0.853, 0.698]], [[0.1609, 0.837]]], [[[0.0691, 0.3333]], [[0.3206, 0.2721]]]]], [[[[[0.1662, 0.2566]], [[0.8938, 0.5467]]], [[[0.9407, 0.7387]], [[0.3959, 0.3749]]]]]], Mul6015), 
LRes63126 = reshape_layer(Mul6015, [2, 2, 2], Res63126), 
LRes90704 = reshape_layer(Res63126, [2, 4], Res90704), 
LCro91800 = cropping1D_layer(Res90704, 0, 1, Cro91800), 
LRes18485 = reshape_layer(Cro91800, [1, 4, 1], Res18485), 
LRes90714 = reshape_layer(Res18485, [1, 4, 1, 1], Res90714), 
LZer2735 = zero_padding3D_layer(Res90714, 1, 0, 3, 0, 2, 0, Zer2735), 
LAdd92236 = add_layer([[[[[[0.5295], [0.9321]]]]], [[[[[0.7352], [0.5316]]]]]], Add92236), 
LZer54250 = zero_padding3D_layer(Add92236, 1, 0, 0, 0, 1, 0, Zer54250), 
LThr31322 = thresholded_relu_layer([[[[[0.1576]]], [[[0.8396]]]]], 1.6826356974769985, Thr31322), 
LZer35251 = zero_padding3D_layer(Thr31322, 0, 0, 0, 0, 2, 0, Zer35251), 
LAve81786 = average_layer([Zer54250,Zer35251], Ave81786), 
LZer34578 = zero_padding3D_layer(Ave81786, 0, 0, 6, 0, 0, 0, Zer34578), 
LAve48388 = average_layer([Zer2735,Zer34578], Ave48388), 
exec_layers([LMul6015,LRes63126,LRes90704,LCro91800,LRes18485,LRes90714,LZer2735,LAdd92236,LZer54250,LThr31322,LZer35251,LAve81786,LZer34578,LAve48388],["Mul6015","Res63126","Res90704","Cro91800","Res18485","Res90714","Zer2735","Add92236","Zer54250","Thr31322","Zer35251","Ave81786","Zer34578","Ave48388"],Ave48388,"Ave48388")

Actual (Unparsed): [[[[[0.0000000], [0.0000000], [0.0000000]], [[0.0000000], [0.0000000], [0.0000000]], [[0.0000000], [0.0000000], [0.0000000]], [[0.0000000], [0.0000000], [0.0000000]], [[0.0000000], [0.0000000], [0.0000000]], [[0.0000000], [0.0000000], [0.0000000]], [[0.0000000], [0.0000000], [0.0000000]]], [[[0.0000000], [0.0000000], [0.0000000]], [[0.0000000], [0.0000000], [0.0000000]], [[0.0000000], [0.0000000], [0.0000000]], [[0.0000000], [0.0000000], [0.0708843]], [[0.0000000], [0.0000000], [0.0895534]], [[0.0000000], [0.0000000], [0.0719062]], [[0.0000000], [0.3161750], [0.5947190]]]]]

Expected (Unparsed): [[[[[0],[0],[0]],[[0],[0],[0]],[[0],[0],[0]],[[0],[0],[0]],[[0],[0],[0]],[[0],[0],[0]],[[0],[0],[0]]],[[[0],[0],[0]],[[0],[0],[0]],[[0],[0],[0]],[[0],[0],[0.0708843]],[[0],[0],[0.08955339999999999]],[[0],[0],[0.07190621]],[[0],[0.316175],[0.59471895]]]]]

Actual:   [[[[[0], [0], [0]], [[0], [0], [0]], [[0], [0], [0]], [[0], [0], [0]], [[0], [0], [0]], [[0], [0], [0]], [[0], [0], [0]]], [[[0], [0], [0]], [[0], [0], [0]], [[0], [0], [0]], [[0], [0], [0.0709]], [[0], [0], [0.0896]], [[0], [0], [0.072]], [[0], [0.3162], [0.5948]]]]]

Expected: [[[[[0], [0], [0]], [[0], [0], [0]], [[0], [0], [0]], [[0], [0], [0]], [[0], [0], [0]], [[0], [0], [0]], [[0], [0], [0]]], [[[0], [0], [0]], [[0], [0], [0]], [[0], [0], [0]], [[0], [0], [0.0709]], [[0], [0], [0.0896]], [[0], [0], [0.072]], [[0], [0.3162], [0.5948]]]]]