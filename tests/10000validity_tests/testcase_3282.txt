import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Ave44515 = tf.keras.layers.Input(shape=([1, 2]))
in1Ave44515 = tf.keras.layers.Input(shape=([1, 2]))
in0Con78452 = tf.keras.layers.Input(shape=([2, 3, 1]))
in0Sub62485 = tf.keras.layers.Input(shape=([2, 3, 2]))
in1Sub62485 = tf.keras.layers.Input(shape=([2, 3, 2]))
in0Max74242 = tf.keras.layers.Input(shape=([2, 1]))
in1Max74242 = tf.keras.layers.Input(shape=([2, 1]))
in0Con83130 = tf.keras.layers.Input(shape=([2, 5]))
in0Max8891 = tf.keras.layers.Input(shape=([1, 1]))
in1Max8891 = tf.keras.layers.Input(shape=([1, 1]))

Ave44515 = keras.layers.Average(name = 'Ave44515', )([in0Ave44515,in1Ave44515])
Res25709 = keras.layers.Reshape((1, 2, 1), name = 'Res25709', )(Ave44515)
Zer21154 = keras.layers.ZeroPadding2D(padding=((1, 0), (1, 0)), name = 'Zer21154', )(Res25709)
Con78452 = keras.layers.Concatenate(axis=3, name = 'Con78452', )([Zer21154,in0Con78452])
Sub62485 = keras.layers.Subtract(name = 'Sub62485', )([in0Sub62485,in1Sub62485])
Ave91270 = keras.layers.Average(name = 'Ave91270', )([Con78452,Sub62485])
Res57077 = keras.layers.Reshape((2, 6), name = 'Res57077', )(Ave91270)
Max74242 = keras.layers.Maximum(name = 'Max74242', )([in0Max74242,in1Max74242])
Con83130 = keras.layers.Concatenate(axis=2, name = 'Con83130', )([Max74242,in0Con83130])
Max79655 = keras.layers.Maximum(name = 'Max79655', )([Res57077,Con83130])
Res33804 = keras.layers.Reshape((2, 6, 1), name = 'Res33804', )(Max79655)
Res29102 = keras.layers.Reshape((2, 6, 1, 1), name = 'Res29102', )(Res33804)
Zer20119 = keras.layers.ZeroPadding3D(padding=((0, 0), (0, 0), (2, 0)), name = 'Zer20119', )(Res29102)
Max8891 = keras.layers.Maximum(name = 'Max8891', )([in0Max8891,in1Max8891])
Res4290 = keras.layers.Reshape((1, 1, 1), name = 'Res4290', )(Max8891)
Res67982 = keras.layers.Reshape((1, 1, 1, 1), name = 'Res67982', )(Res4290)
Up_45032 = keras.layers.UpSampling3D(size=(2, 1, 2), name = 'Up_45032', )(Res67982)
Zer82842 = keras.layers.ZeroPadding3D(padding=((0, 0), (5, 0), (1, 0)), name = 'Zer82842', )(Up_45032)
Min37373 = keras.layers.Minimum(name = 'Min37373', )([Zer20119,Zer82842])
Con56977 = keras.layers.Conv3D(3, (1, 1, 1),strides=(1, 1, 1), padding='valid', dilation_rate=(1, 1, 1), name = 'Con56977', )(Min37373)
model = tf.keras.models.Model(inputs=[in0Ave44515,in1Ave44515,in0Con78452,in0Sub62485,in1Sub62485,in0Max74242,in1Max74242,in0Con83130,in0Max8891,in1Max8891], outputs=Con56977)
w = model.get_layer('Con56977').get_weights() 
w[0] = np.array([[[[[0.2767, 0.3512, 0.4621]]]]])
w[1] = np.array([0, 0, 0])
model.get_layer('Con56977').set_weights(w) 
in0Ave44515 = tf.constant([[[0.3353, 0.1257]]])
in1Ave44515 = tf.constant([[[0.1, 0.1341]]])
in0Con78452 = tf.constant([[[[0.6861], [0.6516], [0.6797]], [[0.0703], [0.7594], [0.7386]]]])
in0Sub62485 = tf.constant([[[[0.7884, 0.0849], [0.9507, 0.6752], [0.7508, 0.1019]], [[0.7398, 0.585], [0.3178, 0.6973], [0.3432, 0.3281]]]])
in1Sub62485 = tf.constant([[[[0.7712, 0.3072], [0.28, 0.1994], [0.9378, 0.2489]], [[0.666, 0.4904], [0.7111, 0.3766], [0.4218, 0.027]]]])
in0Max74242 = tf.constant([[[0.2596], [0.1223]]])
in1Max74242 = tf.constant([[[0.3189], [0.2236]]])
in0Con83130 = tf.constant([[[0.5396, 0.2272, 0.1772, 0.3516, 0.9611], [0.1327, 0.8621, 0.0017, 0.9088, 0.4205]]])
in0Max8891 = tf.constant([[[0.3828]]])
in1Max8891 = tf.constant([[[0.6529]]])
print (np.array2string(model.predict([in0Ave44515,in1Ave44515,in0Con78452,in0Sub62485,in1Sub62485,in0Max74242,in1Max74242,in0Con83130,in0Max8891,in1Max8891],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Con56977.png')

LAve44515 = average_layer([[[[0.3353, 0.1257]]], [[[0.1, 0.1341]]]], Ave44515), 
LRes25709 = reshape_layer(Ave44515, [1, 2, 1], Res25709), 
LZer21154 = zero_padding2D_layer(Res25709, 1, 0, 1, 0, Zer21154), 
LCon78452 = concatenate_layer([Zer21154,[[[[0.6861], [0.6516], [0.6797]], [[0.0703], [0.7594], [0.7386]]]]], 3, Con78452), 
LSub62485 = subtract_layer([[[[0.7884, 0.0849], [0.9507, 0.6752], [0.7508, 0.1019]], [[0.7398, 0.585], [0.3178, 0.6973], [0.3432, 0.3281]]]], [[[[0.7712, 0.3072], [0.28, 0.1994], [0.9378, 0.2489]], [[0.666, 0.4904], [0.7111, 0.3766], [0.4218, 0.027]]]], Sub62485), 
LAve91270 = average_layer([Con78452,Sub62485], Ave91270), 
LRes57077 = reshape_layer(Ave91270, [2, 6], Res57077), 
LMax74242 = maximum_layer([[[[0.2596], [0.1223]]], [[[0.3189], [0.2236]]]], Max74242), 
LCon83130 = concatenate_layer([Max74242,[[[0.5396, 0.2272, 0.1772, 0.3516, 0.9611], [0.1327, 0.8621, 0.0017, 0.9088, 0.4205]]]], 2, Con83130), 
LMax79655 = maximum_layer([Res57077,Con83130], Max79655), 
LRes33804 = reshape_layer(Max79655, [2, 6, 1], Res33804), 
LRes29102 = reshape_layer(Res33804, [2, 6, 1, 1], Res29102), 
LZer20119 = zero_padding3D_layer(Res29102, 0, 0, 0, 0, 2, 0, Zer20119), 
LMax8891 = maximum_layer([[[[0.3828]]], [[[0.6529]]]], Max8891), 
LRes4290 = reshape_layer(Max8891, [1, 1, 1], Res4290), 
LRes67982 = reshape_layer(Res4290, [1, 1, 1, 1], Res67982), 
LUp_45032 = up_sampling3D_layer(Res67982, 2, 1, 2, Up_45032), 
LZer82842 = zero_padding3D_layer(Up_45032, 0, 0, 5, 0, 1, 0, Zer82842), 
LMin37373 = minimum_layer([Zer20119,Zer82842], Min37373), 
LCon56977 = conv3D_layer(Min37373, 1, 1, 1,[[[[[0.2767, 0.3512, 0.4621]]]]],[0, 0, 0], 1, 1, 1, false, 1, 1, 1, Con56977), 
exec_layers([LAve44515,LRes25709,LZer21154,LCon78452,LSub62485,LAve91270,LRes57077,LMax74242,LCon83130,LMax79655,LRes33804,LRes29102,LZer20119,LMax8891,LRes4290,LRes67982,LUp_45032,LZer82842,LMin37373,LCon56977],["Ave44515","Res25709","Zer21154","Con78452","Sub62485","Ave91270","Res57077","Max74242","Con83130","Max79655","Res33804","Res29102","Zer20119","Max8891","Res4290","Res67982","Up_45032","Zer82842","Min37373","Con56977"],Con56977,"Con56977")

Actual (Unparsed): [[[[[0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000]], [[0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000]], [[0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000]], [[0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000]], [[0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000]], [[0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000], [0.1806574, 0.2292985, 0.3017051]]], [[[0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000]], [[0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000]], [[0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000]], [[0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000]], [[0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000]], [[0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000], [0.1438425, 0.1825713, 0.2402227]]]]]

Expected (Unparsed): [[[[[0.0,0.0,0.0],[0.0,0.0,0.0],[0.0,0.0,0.0]],[[0.0,0.0,0.0],[0.0,0.0,0.0],[0.0,0.0,0.0]],[[0.0,0.0,0.0],[0.0,0.0,0.0],[0.0,0.0,0.0]],[[0.0,0.0,0.0],[0.0,0.0,0.0],[0.0,0.0,0.0]],[[0.0,0.0,0.0],[0.0,0.0,0.0],[0.0,0.0,0.0]],[[0.0,0.0,0.0],[0.0,0.0,0.0],[0.18065743,0.22929848000000003,0.30170509]]],[[[0.0,0.0,0.0],[0.0,0.0,0.0],[0.0,0.0,0.0]],[[0.0,0.0,0.0],[0.0,0.0,0.0],[0.0,0.0,0.0]],[[0.0,0.0,0.0],[0.0,0.0,0.0],[0.0,0.0,0.0]],[[0.0,0.0,0.0],[0.0,0.0,0.0],[0.0,0.0,0.0]],[[0.0,0.0,0.0],[0.0,0.0,0.0],[0.0,0.0,0.0]],[[0.0,0.0,0.0],[0.0,0.0,0.0],[0.14384249500000001,0.18257132,0.24022268500000002]]]]]

Actual:   [[[[[0, 0, 0], [0, 0, 0], [0, 0, 0]], [[0, 0, 0], [0, 0, 0], [0, 0, 0]], [[0, 0, 0], [0, 0, 0], [0, 0, 0]], [[0, 0, 0], [0, 0, 0], [0, 0, 0]], [[0, 0, 0], [0, 0, 0], [0, 0, 0]], [[0, 0, 0], [0, 0, 0], [0.1807, 0.2293, 0.3018]]], [[[0, 0, 0], [0, 0, 0], [0, 0, 0]], [[0, 0, 0], [0, 0, 0], [0, 0, 0]], [[0, 0, 0], [0, 0, 0], [0, 0, 0]], [[0, 0, 0], [0, 0, 0], [0, 0, 0]], [[0, 0, 0], [0, 0, 0], [0, 0, 0]], [[0, 0, 0], [0, 0, 0], [0.1439, 0.1826, 0.2403]]]]]

Expected: [[[[[0, 0, 0], [0, 0, 0], [0, 0, 0]], [[0, 0, 0], [0, 0, 0], [0, 0, 0]], [[0, 0, 0], [0, 0, 0], [0, 0, 0]], [[0, 0, 0], [0, 0, 0], [0, 0, 0]], [[0, 0, 0], [0, 0, 0], [0, 0, 0]], [[0, 0, 0], [0, 0, 0], [0.1807, 0.2293, 0.3018]]], [[[0, 0, 0], [0, 0, 0], [0, 0, 0]], [[0, 0, 0], [0, 0, 0], [0, 0, 0]], [[0, 0, 0], [0, 0, 0], [0, 0, 0]], [[0, 0, 0], [0, 0, 0], [0, 0, 0]], [[0, 0, 0], [0, 0, 0], [0, 0, 0]], [[0, 0, 0], [0, 0, 0], [0.1439, 0.1826, 0.2403]]]]]