import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Ave3403 = tf.keras.layers.Input(shape=([1, 1, 1]))
in1Ave3403 = tf.keras.layers.Input(shape=([1, 1, 1]))

Ave3403 = keras.layers.Average(name = 'Ave3403', )([in0Ave3403,in1Ave3403])
Sep16800 = keras.layers.SeparableConv2D(4, (1, 1),strides=(1, 1), padding='same', name = 'Sep16800', )(Ave3403)
model = tf.keras.models.Model(inputs=[in0Ave3403,in1Ave3403], outputs=Sep16800)
w = model.get_layer('Sep16800').get_weights() 
w[0] = np.array([[[[0.4382]]]])
w[1] = np.array([[[[0.1087, 0.348, 0.3154, 0.4493]]]])
w[2] = np.array([0, 0, 0, 0])
model.get_layer('Sep16800').set_weights(w) 
in0Ave3403 = tf.constant([[[[0.4104]]]])
in1Ave3403 = tf.constant([[[[0.3032]]]])
print (np.array2string(model.predict([in0Ave3403,in1Ave3403],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Sep16800.png')

LAve3403 = average_layer([[[[[0.4104]]]], [[[[0.3032]]]]], Ave3403), 
LSep16800 = separable_conv2D_layer(Ave3403, 1, 1,[[[[[0.4382]]]],[[[[0.1087, 0.348, 0.3154, 0.4493]]]]],[0, 0, 0, 0], 1, 1, true, Sep16800), 
exec_layers([LAve3403,LSep16800],["Ave3403","Sep16800"],Sep16800,"Sep16800")

Actual (Unparsed): [[[[0.0169952, 0.0544097, 0.0493127, 0.0702479]]]]

Expected (Unparsed): [[[[0.016995218912000003,0.054409716479999995,0.049312714304000006,0.070247947168]]]]

Actual:   [[[[0.017, 0.0545, 0.0494, 0.0703]]]]

Expected: [[[[0.017, 0.0545, 0.0494, 0.0703]]]]