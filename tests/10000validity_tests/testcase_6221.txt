import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Sub76622 = tf.keras.layers.Input(shape=([3, 3, 3]))
in1Sub76622 = tf.keras.layers.Input(shape=([3, 3, 3]))
in0Mul63615 = tf.keras.layers.Input(shape=([1, 1, 1]))
in1Mul63615 = tf.keras.layers.Input(shape=([1, 1, 1]))
in0Con26830 = tf.keras.layers.Input(shape=([3, 8]))
in0Sub82982 = tf.keras.layers.Input(shape=([3, 2]))
in1Sub82982 = tf.keras.layers.Input(shape=([3, 2]))
in0Con21786 = tf.keras.layers.Input(shape=([3, 7]))

Sub76622 = keras.layers.Subtract(name = 'Sub76622', )([in0Sub76622,in1Sub76622])
Res59909 = keras.layers.Reshape((3, 9), name = 'Res59909', )(Sub76622)
Mul63615 = keras.layers.Multiply(name = 'Mul63615', )([in0Mul63615,in1Mul63615])
Res11160 = keras.layers.Reshape((1, 1), name = 'Res11160', )(Mul63615)
Zer42242 = keras.layers.ZeroPadding1D(padding=((1, 1)), name = 'Zer42242', )(Res11160)
Con26830 = keras.layers.Concatenate(axis=2, name = 'Con26830', )([Zer42242,in0Con26830])
Min98575 = keras.layers.Minimum(name = 'Min98575', )([Res59909,Con26830])
Sub82982 = keras.layers.Subtract(name = 'Sub82982', )([in0Sub82982,in1Sub82982])
Con21786 = keras.layers.Concatenate(axis=2, name = 'Con21786', )([Sub82982,in0Con21786])
Max1254 = keras.layers.Maximum(name = 'Max1254', )([Min98575,Con21786])
model = tf.keras.models.Model(inputs=[in0Sub76622,in1Sub76622,in0Mul63615,in1Mul63615,in0Con26830,in0Sub82982,in1Sub82982,in0Con21786], outputs=Max1254)
in0Sub76622 = tf.constant([[[[0.1025, 0.1579, 0.4536], [0.0244, 0.5648, 0.7385], [0.7435, 0.7163, 0.5679]], [[0.6395, 0.8076, 0.345], [0.0149, 0.999, 0.1908], [0.2888, 0.322, 0.4471]], [[0.6527, 0.368, 0.4652], [0.942, 0.6656, 0.7813], [0.1721, 0.453, 0.6568]]]])
in1Sub76622 = tf.constant([[[[0.1017, 0.5843, 0.2925], [0.2798, 0.1242, 0.3596], [0.1706, 0.7211, 0.8402]], [[0.2346, 0.9882, 0.6796], [0.4535, 0.5282, 0.9676], [0.1927, 0.142, 0.9294]], [[0.9733, 0.9229, 0.2235], [0.183, 0.7737, 0.8719], [0.4886, 0.9647, 0.5581]]]])
in0Mul63615 = tf.constant([[[[0.7383]]]])
in1Mul63615 = tf.constant([[[[0.7264]]]])
in0Con26830 = tf.constant([[[0.1751, 0.3174, 0.6369, 0.7254, 0.6668, 0.9078, 0.7756, 0.6978], [0.9207, 0.0002, 0.7792, 0.2486, 0.3076, 0.2957, 0.9633, 0.9076], [0.7318, 0.859, 0.4411, 0.9137, 0.0927, 0.4718, 0.0636, 0.8324]]])
in0Sub82982 = tf.constant([[[0.3192, 0.2369], [0.3017, 0.8885], [0.5252, 0.925]]])
in1Sub82982 = tf.constant([[[0.2795, 0.9113], [0.1443, 0.538], [0.078, 0.9482]]])
in0Con21786 = tf.constant([[[0.2341, 0.7345, 0.3695, 0.299, 0.7921, 0.3182, 0.3783], [0.3717, 0.6912, 0.529, 0.9914, 0.6158, 0.8488, 0.6135], [0.3973, 0.9558, 0.3293, 0.8699, 0.8346, 0.4482, 0.5858]]])
print (np.array2string(model.predict([in0Sub76622,in1Sub76622,in0Mul63615,in1Mul63615,in0Con26830,in0Sub82982,in1Sub82982,in0Con21786],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Max1254.png')

LSub76622 = subtract_layer([[[[0.1025, 0.1579, 0.4536], [0.0244, 0.5648, 0.7385], [0.7435, 0.7163, 0.5679]], [[0.6395, 0.8076, 0.345], [0.0149, 0.999, 0.1908], [0.2888, 0.322, 0.4471]], [[0.6527, 0.368, 0.4652], [0.942, 0.6656, 0.7813], [0.1721, 0.453, 0.6568]]]], [[[[0.1017, 0.5843, 0.2925], [0.2798, 0.1242, 0.3596], [0.1706, 0.7211, 0.8402]], [[0.2346, 0.9882, 0.6796], [0.4535, 0.5282, 0.9676], [0.1927, 0.142, 0.9294]], [[0.9733, 0.9229, 0.2235], [0.183, 0.7737, 0.8719], [0.4886, 0.9647, 0.5581]]]], Sub76622), 
LRes59909 = reshape_layer(Sub76622, [3, 9], Res59909), 
LMul63615 = multiply_layer([[[[[0.7383]]]], [[[[0.7264]]]]], Mul63615), 
LRes11160 = reshape_layer(Mul63615, [1, 1], Res11160), 
LZer42242 = zero_padding1D_layer(Res11160, 1, 1, Zer42242), 
LCon26830 = concatenate_layer([Zer42242,[[[0.1751, 0.3174, 0.6369, 0.7254, 0.6668, 0.9078, 0.7756, 0.6978], [0.9207, 0.0002, 0.7792, 0.2486, 0.3076, 0.2957, 0.9633, 0.9076], [0.7318, 0.859, 0.4411, 0.9137, 0.0927, 0.4718, 0.0636, 0.8324]]]], 2, Con26830), 
LMin98575 = minimum_layer([Res59909,Con26830], Min98575), 
LSub82982 = subtract_layer([[[0.3192, 0.2369], [0.3017, 0.8885], [0.5252, 0.925]]], [[[0.2795, 0.9113], [0.1443, 0.538], [0.078, 0.9482]]], Sub82982), 
LCon21786 = concatenate_layer([Sub82982,[[[0.2341, 0.7345, 0.3695, 0.299, 0.7921, 0.3182, 0.3783], [0.3717, 0.6912, 0.529, 0.9914, 0.6158, 0.8488, 0.6135], [0.3973, 0.9558, 0.3293, 0.8699, 0.8346, 0.4482, 0.5858]]]], 2, Con21786), 
LMax1254 = maximum_layer([Min98575,Con21786], Max1254), 
exec_layers([LSub76622,LRes59909,LMul63615,LRes11160,LZer42242,LCon26830,LMin98575,LSub82982,LCon21786,LMax1254],["Sub76622","Res59909","Mul63615","Res11160","Zer42242","Con26830","Min98575","Sub82982","Con21786","Max1254"],Max1254,"Max1254")

Actual (Unparsed): [[[0.0397000, -0.4264000, 0.2341000, 0.7345000, 0.4406000, 0.3789000, 0.7921000, 0.3182000, 0.3783000], [0.4049000, 0.3505000, 0.3717000, 0.6912000, 0.5290000, 0.9914000, 0.6158000, 0.8488000, 0.6135000], [0.4472000, -0.0232000, 0.3973000, 0.9558000, 0.3293000, 0.8699000, 0.8346000, 0.4482000, 0.5858000]]]

Expected (Unparsed): [[[0.03969999999999996,-0.4264,0.2341,0.7345,0.4406,0.37890000000000007,0.7921,0.3182,0.3783],[0.4048999999999999,0.3504999999999999,0.3717,0.6912,0.529,0.9914,0.6158,0.8488,0.6135],[0.4472,-0.0232,0.3973,0.9558,0.3293,0.8699,0.8346,0.4482,0.5858]]]

Actual:   [[[0.0397, -0.4264, 0.2341, 0.7345, 0.4406, 0.3789, 0.7921, 0.3182, 0.3783], [0.4049, 0.3505, 0.3717, 0.6912, 0.529, 0.9914, 0.6158, 0.8488, 0.6135], [0.4472, -0.0232, 0.3973, 0.9558, 0.3293, 0.8699, 0.8346, 0.4482, 0.5858]]]

Expected: [[[0.0397, -0.4264, 0.2341, 0.7345, 0.4406, 0.379, 0.7921, 0.3182, 0.3783], [0.4049, 0.3505, 0.3717, 0.6912, 0.529, 0.9914, 0.6158, 0.8488, 0.6135], [0.4472, -0.0232, 0.3973, 0.9558, 0.3293, 0.8699, 0.8346, 0.4482, 0.5858]]]