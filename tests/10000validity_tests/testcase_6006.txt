import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Min47497 = tf.keras.layers.Input(shape=([1, 2]))
in1Min47497 = tf.keras.layers.Input(shape=([1, 2]))
in0Mul97749 = tf.keras.layers.Input(shape=([2, 2, 1, 1]))
in1Mul97749 = tf.keras.layers.Input(shape=([2, 2, 1, 1]))
in0Ave52124 = tf.keras.layers.Input(shape=([2, 2]))
in0Con2235 = tf.keras.layers.Input(shape=([2]))

Min47497 = keras.layers.Minimum(name = 'Min47497', )([in0Min47497,in1Min47497])
Res92133 = keras.layers.Reshape((1, 2, 1), name = 'Res92133', )(Min47497)
Res47655 = keras.layers.Reshape((1, 2, 1, 1), name = 'Res47655', )(Res92133)
Zer28460 = keras.layers.ZeroPadding3D(padding=((1, 0), (0, 0), (0, 0)), name = 'Zer28460', )(Res47655)
Mul97749 = keras.layers.Multiply(name = 'Mul97749', )([in0Mul97749,in1Mul97749])
Mul88573 = keras.layers.Multiply(name = 'Mul88573', )([Zer28460,Mul97749])
Res15522 = keras.layers.Reshape((2, 2, 1), name = 'Res15522', )(Mul88573)
Res71334 = keras.layers.Reshape((2, 2), name = 'Res71334', )(Res15522)
Fla18286 = keras.layers.Flatten(name = 'Fla18286', )(Res71334)
Ave52124 = keras.layers.AveragePooling1D(pool_size=(1), strides=(1), padding='same', name = 'Ave52124', )(in0Ave52124)
Sim56797 = keras.layers.SimpleRNN(2,name = 'Sim56797', )(Ave52124)
Con2235 = keras.layers.Concatenate(axis=1, name = 'Con2235', )([Sim56797,in0Con2235])
Mul86756 = keras.layers.Multiply(name = 'Mul86756', )([Fla18286,Con2235])
model = tf.keras.models.Model(inputs=[in0Min47497,in1Min47497,in0Mul97749,in1Mul97749,in0Ave52124,in0Con2235], outputs=Mul86756)
w = model.get_layer('Sim56797').get_weights() 
w[0] = np.array([[5, 2], [8, 1]])
w[1] = np.array([[6, 4], [2, 9]])
w[2] = np.array([4, 8])
model.get_layer('Sim56797').set_weights(w) 
in0Min47497 = tf.constant([[[0.1832, 0.3163]]])
in1Min47497 = tf.constant([[[0.4638, 0.0439]]])
in0Mul97749 = tf.constant([[[[[0.5636]], [[0.0346]]], [[[0.0577]], [[0.059]]]]])
in1Mul97749 = tf.constant([[[[[0.4008]], [[0.3209]]], [[[0.7813]], [[0.3077]]]]])
in0Ave52124 = tf.constant([[[1.0588, 1.8575], [1.9251, 1.4183]]])
in0Con2235 = tf.constant([[0.6559, 0.0693]])
print (np.array2string(model.predict([in0Min47497,in1Min47497,in0Mul97749,in1Mul97749,in0Ave52124,in0Con2235],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Mul86756.png')

LMin47497 = minimum_layer([[[[0.1832, 0.3163]]], [[[0.4638, 0.0439]]]], Min47497), 
LRes92133 = reshape_layer(Min47497, [1, 2, 1], Res92133), 
LRes47655 = reshape_layer(Res92133, [1, 2, 1, 1], Res47655), 
LZer28460 = zero_padding3D_layer(Res47655, 1, 0, 0, 0, 0, 0, Zer28460), 
LMul97749 = multiply_layer([[[[[[0.5636]], [[0.0346]]], [[[0.0577]], [[0.059]]]]], [[[[[0.4008]], [[0.3209]]], [[[0.7813]], [[0.3077]]]]]], Mul97749), 
LMul88573 = multiply_layer([Zer28460,Mul97749], Mul88573), 
LRes15522 = reshape_layer(Mul88573, [2, 2, 1], Res15522), 
LRes71334 = reshape_layer(Res15522, [2, 2], Res71334), 
LFla18286 = flatten_layer(Res71334, Fla18286), 
LAve52124 = average_pooling1D_layer([[[1.0588, 1.8575], [1.9251, 1.4183]]], 1, 1, true, Ave52124), 
LSim56797 = simple_rnn_layer(Ave52124,[[5, 2], [8, 1]],[[6, 4], [2, 9]],[4, 8], Sim56797), 
LCon2235 = concatenate_layer([Sim56797,[[0.6559, 0.0693]]], 1, Con2235), 
LMul86756 = multiply_layer([Fla18286,Con2235], Mul86756), 
exec_layers([LMin47497,LRes92133,LRes47655,LZer28460,LMul97749,LMul88573,LRes15522,LRes71334,LFla18286,LAve52124,LSim56797,LCon2235,LMul86756],["Min47497","Res92133","Res47655","Zer28460","Mul97749","Mul88573","Res15522","Res71334","Fla18286","Ave52124","Sim56797","Con2235","Mul86756"],Mul86756,"Mul86756")

Actual (Unparsed): [[0.0000000, 0.0000000, 0.0054170, 0.0000552]]

Expected (Unparsed): [[0.0,0.0,0.0054169738328888,5.5230282261e-5]]

Actual:   [[0, 0, 0.0055, 0.0001]]

Expected: [[0, 0, 0.0055, 0.0001]]