import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Fla61998 = tf.keras.layers.Input(shape=([2, 4]))

Fla61998 = keras.layers.Flatten(name = 'Fla61998', )(in0Fla61998)
Res18564 = keras.layers.Reshape((8, 1), name = 'Res18564', )(Fla61998)
Sep25504 = keras.layers.SeparableConv1D(2, (5),strides=(7), padding='valid', name = 'Sep25504', )(Res18564)
model = tf.keras.models.Model(inputs=[in0Fla61998], outputs=Sep25504)
w = model.get_layer('Sep25504').get_weights() 
w[0] = np.array([[[0.0291]], [[0.1679]], [[0.572]], [[0.5503]], [[0.9782]]])
w[1] = np.array([[[0.0063, 0.0084]]])
w[2] = np.array([0, 0])
model.get_layer('Sep25504').set_weights(w) 
in0Fla61998 = tf.constant([[[1.0338, 1.6735, 1.9953, 1.1516], [1.9187, 1.0573, 1.7686, 1.7436]]])
print (np.array2string(model.predict([in0Fla61998],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Sep25504.png')

LFla61998 = flatten_layer([[[1.0338, 1.6735, 1.9953, 1.1516], [1.9187, 1.0573, 1.7686, 1.7436]]], Fla61998), 
LRes18564 = reshape_layer(Fla61998, [8, 1], Res18564), 
LSep25504 = separable_conv1D_layer(Res18564, 5,[[[[0.0291]], [[0.1679]], [[0.572]], [[0.5503]], [[0.9782]]],[[[0.0063, 0.0084]]]],[0, 0], 7, false, Sep25504), 
exec_layers([LFla61998,LRes18564,LSep25504],["Fla61998","Res18564","Sep25504"],Sep25504,"Sep25504")

Actual (Unparsed): [[[0.0249667, 0.0332890]]]

Expected (Unparsed): [[[0.024966733994999997,0.033288978659999996]]]

Actual:   [[[0.025, 0.0333]]]

Expected: [[[0.025, 0.0333]]]