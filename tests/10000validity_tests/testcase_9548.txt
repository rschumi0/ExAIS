import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Sub77283 = tf.keras.layers.Input(shape=([2, 2, 2]))
in1Sub77283 = tf.keras.layers.Input(shape=([2, 2, 2]))
in0Per85678 = tf.keras.layers.Input(shape=([3, 3]))
in0Dot87935 = tf.keras.layers.Input(shape=([3, 2]))
in1Dot87935 = tf.keras.layers.Input(shape=([3, 2]))

Sub77283 = keras.layers.Subtract(name = 'Sub77283', )([in0Sub77283,in1Sub77283])
ELU41572 = keras.layers.ELU(alpha=6.73833608840193, name = 'ELU41572', )(Sub77283)
Res74023 = keras.layers.Reshape((2, 4), name = 'Res74023', )(ELU41572)
Per85678 = keras.layers.Permute((2,1), name = 'Per85678',)(in0Per85678)
Res64031 = keras.layers.Reshape((3, 3, 1), name = 'Res64031', )(Per85678)
Res51335 = keras.layers.Reshape((3, 3, 1, 1), name = 'Res51335', )(Res64031)
Con22173 = keras.layers.Conv3D(4, (2, 2, 1),strides=(1, 1, 1), padding='valid', dilation_rate=(1, 1, 1), name = 'Con22173', )(Res51335)
Res54847 = keras.layers.Reshape((2, 2, 4), name = 'Res54847', )(Con22173)
Res18728 = keras.layers.Reshape((2, 8), name = 'Res18728', )(Res54847)
Dot27187 = keras.layers.Dot(axes=(1, 1), name = 'Dot27187', )([Res74023,Res18728])
Dot87935 = keras.layers.Dot(axes=(1, 1), name = 'Dot87935', )([in0Dot87935,in1Dot87935])
Res80360 = keras.layers.Reshape((2, 2, 1), name = 'Res80360', )(Dot87935)
Res13165 = keras.layers.Reshape((2, 2, 1, 1), name = 'Res13165', )(Res80360)
Up_70763 = keras.layers.UpSampling3D(size=(2, 2, 1), name = 'Up_70763', )(Res13165)
Res23426 = keras.layers.Reshape((4, 4, 1), name = 'Res23426', )(Up_70763)
Res60518 = keras.layers.Reshape((4, 4), name = 'Res60518', )(Res23426)
Dot91004 = keras.layers.Dot(axes=(1, 2), name = 'Dot91004', )([Dot27187,Res60518])
model = tf.keras.models.Model(inputs=[in0Sub77283,in1Sub77283,in0Per85678,in0Dot87935,in1Dot87935], outputs=Dot91004)
w = model.get_layer('Con22173').get_weights() 
w[0] = np.array([[[[[0.0544, 0.0432, 0.9884, 0.9327]]], [[[0.5794, 0.0638, 0.0897, 0.3672]]]], [[[[0.7228, 0.9452, 0.2084, 0.4484]]], [[[0.5459, 0.4074, 0.3077, 0.3997]]]]])
w[1] = np.array([0, 0, 0, 0])
model.get_layer('Con22173').set_weights(w) 
in0Sub77283 = tf.constant([[[[0.5651, 0.61], [0.8549, 0.5417]], [[0.8765, 0.6631], [0.2696, 0.94]]]])
in1Sub77283 = tf.constant([[[[0.1474, 0.899], [0.6843, 0.3885]], [[0.0496, 0.4865], [0.1372, 0.172]]]])
in0Per85678 = tf.constant([[[1.1209, 1.1184, 1.998], [1.7273, 1.9352, 1.9905], [1.3658, 1.2486, 1.6411]]])
in0Dot87935 = tf.constant([[[0.6382, 0.3659], [0.3228, 0.8591], [0.2428, 0.0135]]])
in1Dot87935 = tf.constant([[[0.4631, 0.9795], [0.5414, 0.8764], [0.0745, 0.2278]]])
print (np.array2string(model.predict([in0Sub77283,in1Sub77283,in0Per85678,in0Dot87935,in1Dot87935],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Dot91004.png')

LSub77283 = subtract_layer([[[[0.5651, 0.61], [0.8549, 0.5417]], [[0.8765, 0.6631], [0.2696, 0.94]]]], [[[[0.1474, 0.899], [0.6843, 0.3885]], [[0.0496, 0.4865], [0.1372, 0.172]]]], Sub77283), 
LELU41572 = elu_layer(Sub77283, 6.73833608840193, ELU41572), 
LRes74023 = reshape_layer(ELU41572, [2, 4], Res74023), 
LPer85678 = permute_layer([[[1.1209, 1.1184, 1.998], [1.7273, 1.9352, 1.9905], [1.3658, 1.2486, 1.6411]]], 2,1, Per85678), 
LRes64031 = reshape_layer(Per85678, [3, 3, 1], Res64031), 
LRes51335 = reshape_layer(Res64031, [3, 3, 1, 1], Res51335), 
LCon22173 = conv3D_layer(Res51335, 2, 2, 1,[[[[[0.0544, 0.0432, 0.9884, 0.9327]]], [[[0.5794, 0.0638, 0.0897, 0.3672]]]], [[[[0.7228, 0.9452, 0.2084, 0.4484]]], [[[0.5459, 0.4074, 0.3077, 0.3997]]]]],[0, 0, 0, 0], 1, 1, 1, false, 1, 1, 1, Con22173), 
LRes54847 = reshape_layer(Con22173, [2, 2, 4], Res54847), 
LRes18728 = reshape_layer(Res54847, [2, 8], Res18728), 
LDot27187 = dot_layer(Res74023,Res18728, 1, 1, Dot27187), 
LDot87935 = dot_layer([[[0.6382, 0.3659], [0.3228, 0.8591], [0.2428, 0.0135]]], [[[0.4631, 0.9795], [0.5414, 0.8764], [0.0745, 0.2278]]], 1, 1, Dot87935), 
LRes80360 = reshape_layer(Dot87935, [2, 2, 1], Res80360), 
LRes13165 = reshape_layer(Res80360, [2, 2, 1, 1], Res13165), 
LUp_70763 = up_sampling3D_layer(Res13165, 2, 2, 1, Up_70763), 
LRes23426 = reshape_layer(Up_70763, [4, 4, 1], Res23426), 
LRes60518 = reshape_layer(Res23426, [4, 4], Res60518), 
LDot91004 = dot_layer(Dot27187,Res60518, 1, 2, Dot91004), 
exec_layers([LSub77283,LELU41572,LRes74023,LPer85678,LRes64031,LRes51335,LCon22173,LRes54847,LRes18728,LDot27187,LDot87935,LRes80360,LRes13165,LUp_70763,LRes23426,LRes60518,LDot91004],["Sub77283","ELU41572","Res74023","Per85678","Res64031","Res51335","Con22173","Res54847","Res18728","Dot27187","Dot87935","Res80360","Res13165","Up_70763","Res23426","Res60518","Dot91004"],Dot91004,"Dot91004")

Actual (Unparsed): [[[4.1327301, 4.1327301, 4.7807006, 4.7807006], [3.2762299, 3.2762299, 3.8131957, 3.8131957], [2.4844421, 2.4844421, 2.8495045, 2.8495045], [3.7607113, 3.7607113, 4.3288608, 4.3288608], [3.3746075, 3.3746075, 3.8612581, 3.8612581], [2.9081816, 2.9081816, 3.3317108, 3.3317108], [3.1856426, 3.1856426, 3.6584836, 3.6584836], [4.0958073, 4.0958073, 4.6953148, 4.6953148]]]

Expected (Unparsed): [[[4.132729935366423,4.132729935366423,4.780700405637855,4.780700405637855],[3.276229792657797,3.276229792657797,3.813195464141771,3.813195464141771],[2.4844419781943166,2.4844419781943166,2.849504440879229,2.849504440879229],[3.760711193644762,3.760711193644762,4.328860624380523,4.328860624380523],[3.3746072743091213,3.3746072743091213,3.8612578744746884,3.8612578744746884],[2.9081814109481656,2.9081814109481656,3.33171058670666,3.33171058670666],[3.185642438500912,3.185642438500912,3.6584834100395573,3.6584834100395573],[4.095807094156871,4.095807094156871,4.695314530638427,4.695314530638427]]]

Actual:   [[[4.1328, 4.1328, 4.7808, 4.7808], [3.2763, 3.2763, 3.8132, 3.8132], [2.4845, 2.4845, 2.8496, 2.8496], [3.7608, 3.7608, 4.3289, 4.3289], [3.3747, 3.3747, 3.8613, 3.8613], [2.9082, 2.9082, 3.3318, 3.3318], [3.1857, 3.1857, 3.6585, 3.6585], [4.0959, 4.0959, 4.6954, 4.6954]]]

Expected: [[[4.1328, 4.1328, 4.7808, 4.7808], [3.2763, 3.2763, 3.8132, 3.8132], [2.4845, 2.4845, 2.8496, 2.8496], [3.7608, 3.7608, 4.3289, 4.3289], [3.3747, 3.3747, 3.8613, 3.8613], [2.9082, 2.9082, 3.3318, 3.3318], [3.1857, 3.1857, 3.6585, 3.6585], [4.0959, 4.0959, 4.6954, 4.6954]]]