import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Sub86546 = tf.keras.layers.Input(shape=([2, 3, 3]))
in1Sub86546 = tf.keras.layers.Input(shape=([2, 3, 3]))
in0Con81131 = tf.keras.layers.Input(shape=([2, 3, 3, 1]))
in0ReL97124 = tf.keras.layers.Input(shape=([1, 2, 1, 2]))
in0Add71329 = tf.keras.layers.Input(shape=([2, 1, 1]))
in1Add71329 = tf.keras.layers.Input(shape=([2, 1, 1]))
in0Con98316 = tf.keras.layers.Input(shape=([2, 3, 5]))
in0Min66915 = tf.keras.layers.Input(shape=([1, 2, 1]))
in1Min66915 = tf.keras.layers.Input(shape=([1, 2, 1]))
in0Mul10295 = tf.keras.layers.Input(shape=([2, 2]))
in1Mul10295 = tf.keras.layers.Input(shape=([2, 2]))
in0Con74697 = tf.keras.layers.Input(shape=([2, 16]))

Sub86546 = keras.layers.Subtract(name = 'Sub86546', )([in0Sub86546,in1Sub86546])
Res89536 = keras.layers.Reshape((2, 3, 3, 1), name = 'Res89536', )(Sub86546)
Con81131 = keras.layers.Concatenate(axis=4, name = 'Con81131', )([Res89536,in0Con81131])
ReL97124 = keras.layers.ReLU(max_value=4.375243966833937, negative_slope=0.9410606631178344, threshold=9.970233404690799, name = 'ReL97124', input_shape=(1, 2, 1, 2))(in0ReL97124)
Zer86554 = keras.layers.ZeroPadding3D(padding=((1, 0), (1, 0), (2, 0)), name = 'Zer86554', )(ReL97124)
Mul90838 = keras.layers.Multiply(name = 'Mul90838', )([Con81131,Zer86554])
Res58478 = keras.layers.Reshape((2, 3, 6), name = 'Res58478', )(Mul90838)
Add71329 = keras.layers.Add(name = 'Add71329', )([in0Add71329,in1Add71329])
ELU40950 = keras.layers.ELU(alpha=-8.747479856678215, name = 'ELU40950', )(Add71329)
Max92720 = keras.layers.MaxPool2D(pool_size=(2, 1), name = 'Max92720', )(ELU40950)
Zer76951 = keras.layers.ZeroPadding2D(padding=((1, 0), (2, 0)), name = 'Zer76951', )(Max92720)
Con98316 = keras.layers.Concatenate(axis=3, name = 'Con98316', )([Zer76951,in0Con98316])
Min1090 = keras.layers.Minimum(name = 'Min1090', )([Res58478,Con98316])
Res86379 = keras.layers.Reshape((2, 18), name = 'Res86379', )(Min1090)
Min66915 = keras.layers.Minimum(name = 'Min66915', )([in0Min66915,in1Min66915])
Res96087 = keras.layers.Reshape((1, 2), name = 'Res96087', )(Min66915)
Zer54717 = keras.layers.ZeroPadding1D(padding=((1, 0)), name = 'Zer54717', )(Res96087)
Mul10295 = keras.layers.Multiply(name = 'Mul10295', )([in0Mul10295,in1Mul10295])
Max75028 = keras.layers.Maximum(name = 'Max75028', )([Zer54717,Mul10295])
Con74697 = keras.layers.Concatenate(axis=2, name = 'Con74697', )([Max75028,in0Con74697])
Sub21075 = keras.layers.Subtract(name = 'Sub21075', )([Res86379,Con74697])
model = tf.keras.models.Model(inputs=[in0Sub86546,in1Sub86546,in0Con81131,in0ReL97124,in0Add71329,in1Add71329,in0Con98316,in0Min66915,in1Min66915,in0Mul10295,in1Mul10295,in0Con74697], outputs=Sub21075)
in0Sub86546 = tf.constant([[[[0.1911, 0.1509, 0.2001], [0.8366, 0.8148, 0.3735], [0.4852, 0.9045, 0.6164]], [[0.4407, 0.47, 0.6158], [0.6125, 0.0867, 0.2368], [0.5342, 0.7923, 0.8626]]]])
in1Sub86546 = tf.constant([[[[0.2808, 0.7975, 0.7133], [0.0293, 0.7686, 0.6861], [0.9392, 0.7853, 0.014]], [[0.4078, 0.8101, 0.3645], [0.6607, 0.7271, 0.3856], [0.6406, 0.7382, 0.6268]]]])
in0Con81131 = tf.constant([[[[[0.5946], [0.4733], [0.6686]], [[0.2105], [0.97], [0.7017]], [[0.2353], [0.3532], [0.2571]]], [[[0.2678], [0.9901], [0.8512]], [[0.387], [0.3341], [0.3098]], [[0.5933], [0.1338], [0.2431]]]]])
in0ReL97124 = tf.constant([[[[[0.6537, 0.1386]], [[0.8386, 0.4043]]]]])
in0Add71329 = tf.constant([[[[0.2604]], [[0.7751]]]])
in1Add71329 = tf.constant([[[[0.1547]], [[0.4795]]]])
in0Con98316 = tf.constant([[[[0.7821, 0.6451, 0.1774, 0.0461, 0.5329], [0.6599, 0.7621, 0.049, 0.2192, 0.0472], [0.964, 0.5019, 0.8929, 0.2375, 0.9055]], [[0.5774, 0.1585, 0.1396, 0.913, 0.9028], [0.5865, 0.9337, 0.5523, 0.1016, 0.4549], [0.4443, 0.4187, 0.1755, 0.4, 0.1562]]]])
in0Min66915 = tf.constant([[[[0.0853], [0.2215]]]])
in1Min66915 = tf.constant([[[[0.0102], [0.7174]]]])
in0Mul10295 = tf.constant([[[0.9552, 0.5166], [0.82, 0.2541]]])
in1Mul10295 = tf.constant([[[0.6768, 0.4432], [0.1227, 0.6555]]])
in0Con74697 = tf.constant([[[0.2133, 0.6511, 0.9547, 0.4776, 0.72, 0.8907, 0.8886, 0.6957, 0.5769, 0.1649, 0.447, 0.756, 0.1331, 0.8196, 0.5545, 0.0386], [0.1898, 0.5931, 0.9284, 0.8949, 0.3511, 0.024, 0.0389, 0.1109, 0.7679, 0.9896, 0.5694, 0.6402, 0.6329, 0.6842, 0.8107, 0.4208]]])
print (np.array2string(model.predict([in0Sub86546,in1Sub86546,in0Con81131,in0ReL97124,in0Add71329,in1Add71329,in0Con98316,in0Min66915,in1Min66915,in0Mul10295,in1Mul10295,in0Con74697],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Sub21075.png')

LSub86546 = subtract_layer([[[[0.1911, 0.1509, 0.2001], [0.8366, 0.8148, 0.3735], [0.4852, 0.9045, 0.6164]], [[0.4407, 0.47, 0.6158], [0.6125, 0.0867, 0.2368], [0.5342, 0.7923, 0.8626]]]], [[[[0.2808, 0.7975, 0.7133], [0.0293, 0.7686, 0.6861], [0.9392, 0.7853, 0.014]], [[0.4078, 0.8101, 0.3645], [0.6607, 0.7271, 0.3856], [0.6406, 0.7382, 0.6268]]]], Sub86546), 
LRes89536 = reshape_layer(Sub86546, [2, 3, 3, 1], Res89536), 
LCon81131 = concatenate_layer([Res89536,[[[[[0.5946], [0.4733], [0.6686]], [[0.2105], [0.97], [0.7017]], [[0.2353], [0.3532], [0.2571]]], [[[0.2678], [0.9901], [0.8512]], [[0.387], [0.3341], [0.3098]], [[0.5933], [0.1338], [0.2431]]]]]], 4, Con81131), 
LReL97124 = relu_layer([[[[[0.6537, 0.1386]], [[0.8386, 0.4043]]]]], 4.375243966833937, 0.9410606631178344, 9.970233404690799, ReL97124), 
LZer86554 = zero_padding3D_layer(ReL97124, 1, 0, 1, 0, 2, 0, Zer86554), 
LMul90838 = multiply_layer([Con81131,Zer86554], Mul90838), 
LRes58478 = reshape_layer(Mul90838, [2, 3, 6], Res58478), 
LAdd71329 = add_layer([[[[[0.2604]], [[0.7751]]]], [[[[0.1547]], [[0.4795]]]]], Add71329), 
LELU40950 = elu_layer(Add71329, -8.747479856678215, ELU40950), 
LMax92720 = max_pool2D_layer(ELU40950, 2, 1, Max92720), 
LZer76951 = zero_padding2D_layer(Max92720, 1, 0, 2, 0, Zer76951), 
LCon98316 = concatenate_layer([Zer76951,[[[[0.7821, 0.6451, 0.1774, 0.0461, 0.5329], [0.6599, 0.7621, 0.049, 0.2192, 0.0472], [0.964, 0.5019, 0.8929, 0.2375, 0.9055]], [[0.5774, 0.1585, 0.1396, 0.913, 0.9028], [0.5865, 0.9337, 0.5523, 0.1016, 0.4549], [0.4443, 0.4187, 0.1755, 0.4, 0.1562]]]]], 3, Con98316), 
LMin1090 = minimum_layer([Res58478,Con98316], Min1090), 
LRes86379 = reshape_layer(Min1090, [2, 18], Res86379), 
LMin66915 = minimum_layer([[[[[0.0853], [0.2215]]]], [[[[0.0102], [0.7174]]]]], Min66915), 
LRes96087 = reshape_layer(Min66915, [1, 2], Res96087), 
LZer54717 = zero_padding1D_layer(Res96087, 1, 0, Zer54717), 
LMul10295 = multiply_layer([[[[0.9552, 0.5166], [0.82, 0.2541]]], [[[0.6768, 0.4432], [0.1227, 0.6555]]]], Mul10295), 
LMax75028 = maximum_layer([Zer54717,Mul10295], Max75028), 
LCon74697 = concatenate_layer([Max75028,[[[0.2133, 0.6511, 0.9547, 0.4776, 0.72, 0.8907, 0.8886, 0.6957, 0.5769, 0.1649, 0.447, 0.756, 0.1331, 0.8196, 0.5545, 0.0386], [0.1898, 0.5931, 0.9284, 0.8949, 0.3511, 0.024, 0.0389, 0.1109, 0.7679, 0.9896, 0.5694, 0.6402, 0.6329, 0.6842, 0.8107, 0.4208]]]], 2, Con74697), 
LSub21075 = subtract_layer(Res86379,Con74697, Sub21075), 
exec_layers([LSub86546,LRes89536,LCon81131,LReL97124,LZer86554,LMul90838,LRes58478,LAdd71329,LELU40950,LMax92720,LZer76951,LCon98316,LMin1090,LRes86379,LMin66915,LRes96087,LZer54717,LMul10295,LMax75028,LCon74697,LSub21075],["Sub86546","Res89536","Con81131","ReL97124","Zer86554","Mul90838","Res58478","Add71329","ELU40950","Max92720","Zer76951","Con98316","Min1090","Res86379","Min66915","Res96087","Zer54717","Mul10295","Max75028","Con74697","Sub21075"],Sub21075,"Sub21075")

Actual (Unparsed): [[[-0.6464794, -0.2289571, -0.2133000, -0.6511000, -0.9547000, -0.4776000, -0.7200000, -0.8907000, -0.8886000, -0.6957000, -0.5769000, -0.1649000, -0.4470000, -0.7560000, -0.1331000, -0.8196000, -0.5545000, -0.0386000], [-0.1006140, -0.2215000, -0.1898000, -0.5931000, -0.9284000, -0.8949000, -0.3511000, -0.0240000, -0.0389000, -0.1109000, -0.6663000, -3.8559202, -0.5694000, -0.6402000, -0.6329000, -0.6842000, -2.8370289, -2.6092163]]]

Expected (Unparsed): [[[-0.64647936,-0.22895711999999996,-0.2133,-0.6511,-0.9547,-0.4776,-0.72,-0.8907,-0.8886,-0.6957,-0.5769,-0.1649,-0.447,-0.756,-0.1331,-0.8196,-0.5545,-0.0386],[-0.100614,-0.2215,-0.1898,-0.5931,-0.9284,-0.8949,-0.3511,-0.024,-0.0389,-0.1109,-0.6663,-3.85592023722816,-0.5694,-0.6402,-0.6329,-0.6842,-2.837028668774048,-2.609216255221042]]]

Actual:   [[[-0.6464, -0.2289, -0.2133, -0.6511, -0.9547, -0.4776, -0.72, -0.8907, -0.8886, -0.6957, -0.5769, -0.1649, -0.447, -0.756, -0.1331, -0.8196, -0.5545, -0.0386], [-0.1006, -0.2215, -0.1898, -0.5931, -0.9284, -0.8949, -0.3511, -0.024, -0.0389, -0.1109, -0.6663, -3.8559, -0.5694, -0.6402, -0.6329, -0.6842, -2.837, -2.6092]]]

Expected: [[[-0.6464, -0.2289, -0.2133, -0.6511, -0.9547, -0.4776, -0.72, -0.8907, -0.8886, -0.6957, -0.5769, -0.1649, -0.447, -0.756, -0.1331, -0.8196, -0.5545, -0.0386], [-0.1006, -0.2215, -0.1898, -0.5931, -0.9284, -0.8949, -0.3511, -0.024, -0.0389, -0.1109, -0.6663, -3.8559, -0.5694, -0.6402, -0.6329, -0.6842, -2.837, -2.6092]]]