import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Mas40906 = tf.keras.layers.Input(shape=([1, 1, 4]))
in0Con65121 = tf.keras.layers.Input(shape=([2, 1, 2]))
in0Con37417 = tf.keras.layers.Input(shape=([1, 2, 1]))
in0Max54436 = tf.keras.layers.Input(shape=([1, 2, 2]))
in1Max54436 = tf.keras.layers.Input(shape=([1, 2, 2]))

Mas40906 = keras.layers.Masking(mask_value=2, name = 'Mas40906', )(in0Mas40906)
Ave7166 = keras.layers.AveragePooling2D(pool_size=(1, 1), name = 'Ave7166', )(Mas40906)
Zer67258 = keras.layers.ZeroPadding2D(padding=((1, 0), (0, 0)), name = 'Zer67258', )(Ave7166)
Con65121 = keras.layers.Conv2DTranspose(4, (1, 1),strides=(1, 1), padding='same', name = 'Con65121', )(in0Con65121)
Add44098 = keras.layers.Add(name = 'Add44098', )([Zer67258,Con65121])
Res46131 = keras.layers.Reshape((2, 4), name = 'Res46131', )(Add44098)
Sim5885 = keras.layers.SimpleRNN(1,name = 'Sim5885', )(Res46131)
Res59317 = keras.layers.Reshape((1, 1), name = 'Res59317', )(Sim5885)
Res30337 = keras.layers.Reshape((1, 1, 1), name = 'Res30337', )(Res59317)
Zer19043 = keras.layers.ZeroPadding2D(padding=((0, 0), (1, 0)), name = 'Zer19043', )(Res30337)
Con37417 = keras.layers.Concatenate(axis=3, name = 'Con37417', )([Zer19043,in0Con37417])
Max54436 = keras.layers.Maximum(name = 'Max54436', )([in0Max54436,in1Max54436])
Max89604 = keras.layers.Maximum(name = 'Max89604', )([Con37417,Max54436])
model = tf.keras.models.Model(inputs=[in0Mas40906,in0Con65121,in0Con37417,in0Max54436,in1Max54436], outputs=Max89604)
w = model.get_layer('Con65121').get_weights() 
w[0] = np.array([[[[0.1742, 0.5609], [0.6431, 0.4447], [0.1732, 0.0346], [0.9354, 0.3954]]]])
w[1] = np.array([0, 0, 0, 0])
model.get_layer('Con65121').set_weights(w) 
w = model.get_layer('Sim5885').get_weights() 
w[0] = np.array([[4], [4], [8], [8]])
w[1] = np.array([[2]])
w[2] = np.array([7])
model.get_layer('Sim5885').set_weights(w) 
in0Mas40906 = tf.constant([[[[1.6239, 1.0841, 1.844, 1.2147]]]])
in0Con65121 = tf.constant([[[[0.5904, 0.0868]], [[0.3026, 0.5229]]]])
in0Con37417 = tf.constant([[[[0.3472], [0.0175]]]])
in0Max54436 = tf.constant([[[[0.0593, 0.9137], [0.0133, 0.5234]]]])
in1Max54436 = tf.constant([[[[0.19, 0.3468], [0.8377, 0.1269]]]])
print (np.array2string(model.predict([in0Mas40906,in0Con65121,in0Con37417,in0Max54436,in1Max54436],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Max89604.png')

LMas40906 = masking_layer([[[[1.6239, 1.0841, 1.844, 1.2147]]]], 2, Mas40906), 
LAve7166 = average_pooling2D_layer(Mas40906, 1, 1, Ave7166), 
LZer67258 = zero_padding2D_layer(Ave7166, 1, 0, 0, 0, Zer67258), 
LCon65121 = conv2D_transpose_layer([[[[0.5904, 0.0868]], [[0.3026, 0.5229]]]], 1, 1,[[[[0.1742, 0.5609], [0.6431, 0.4447], [0.1732, 0.0346], [0.9354, 0.3954]]]],[0, 0, 0, 0], 1, 1, true, Con65121), 
LAdd44098 = add_layer([Zer67258,Con65121], Add44098), 
LRes46131 = reshape_layer(Add44098, [2, 4], Res46131), 
LSim5885 = simple_rnn_layer(Res46131,[[4], [4], [8], [8]],[[2]],[7], Sim5885), 
LRes59317 = reshape_layer(Sim5885, [1, 1], Res59317), 
LRes30337 = reshape_layer(Res59317, [1, 1, 1], Res30337), 
LZer19043 = zero_padding2D_layer(Res30337, 0, 0, 1, 0, Zer19043), 
LCon37417 = concatenate_layer([Zer19043,[[[[0.3472], [0.0175]]]]], 3, Con37417), 
LMax54436 = maximum_layer([[[[[0.0593, 0.9137], [0.0133, 0.5234]]]], [[[[0.19, 0.3468], [0.8377, 0.1269]]]]], Max54436), 
LMax89604 = maximum_layer([Con37417,Max54436], Max89604), 
exec_layers([LMas40906,LAve7166,LZer67258,LCon65121,LAdd44098,LRes46131,LSim5885,LRes59317,LRes30337,LZer19043,LCon37417,LMax54436,LMax89604],["Mas40906","Ave7166","Zer67258","Con65121","Add44098","Res46131","Sim5885","Res59317","Res30337","Zer19043","Con37417","Max54436","Max89604"],Max89604,"Max89604")

Actual (Unparsed): [[[[0.1900000, 0.9137000], [1.0000000, 0.5234000]]]]

Expected (Unparsed): [[[[0.19,0.9137],[1.0,0.5234]]]]

Actual:   [[[[0.19, 0.9137], [1, 0.5234]]]]

Expected: [[[[0.19, 0.9137], [1, 0.5234]]]]