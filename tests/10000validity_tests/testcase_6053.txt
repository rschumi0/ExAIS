import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Lea22246 = tf.keras.layers.Input(shape=([2, 1]))

Lea22246 = keras.layers.LeakyReLU(alpha=0.20755743643644925, name = 'Lea22246', input_shape=(2, 1))(in0Lea22246)
Con88220 = keras.layers.Conv1D(4, (1),strides=(1), padding='valid', dilation_rate=(1), name = 'Con88220', )(Lea22246)
model = tf.keras.models.Model(inputs=[in0Lea22246], outputs=Con88220)
w = model.get_layer('Con88220').get_weights() 
w[0] = np.array([[[0.2957, 0.3762, 0.2661, 0.6624]]])
w[1] = np.array([0, 0, 0, 0])
model.get_layer('Con88220').set_weights(w) 
in0Lea22246 = tf.constant([[[0.5361], [0.179]]])
print (np.array2string(model.predict([in0Lea22246],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Con88220.png')

LLea22246 = leaky_relu_layer([[[0.5361], [0.179]]], 0.20755743643644925, Lea22246), 
LCon88220 = conv1D_layer(Lea22246, 1,[[[0.2957, 0.3762, 0.2661, 0.6624]]],[0, 0, 0, 0], 1, false, 1, Con88220), 
exec_layers([LLea22246,LCon88220],["Lea22246","Con88220"],Con88220,"Con88220")

Actual (Unparsed): [[[0.1585248, 0.2016808, 0.1426562, 0.3551126], [0.0529303, 0.0673398, 0.0476319, 0.1185696]]]

Expected (Unparsed): [[[0.15852477,0.20168081999999998,0.14265621,0.35511264000000003],[0.0529303,0.06733979999999999,0.0476319,0.1185696]]]

Actual:   [[[0.1586, 0.2017, 0.1427, 0.3552], [0.053, 0.0674, 0.0477, 0.1186]]]

Expected: [[[0.1586, 0.2017, 0.1427, 0.3552], [0.053, 0.0674, 0.0477, 0.1186]]]