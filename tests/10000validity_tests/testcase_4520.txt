import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Min32344 = tf.keras.layers.Input(shape=([2, 2, 1]))
in1Min32344 = tf.keras.layers.Input(shape=([2, 2, 1]))
in0Con88112 = tf.keras.layers.Input(shape=([8, 3, 4, 1]))
in0Loc73697 = tf.keras.layers.Input(shape=([1, 1, 2]))
in0Add67228 = tf.keras.layers.Input(shape=([1, 1]))
in1Add67228 = tf.keras.layers.Input(shape=([1, 1]))
in0Con98685 = tf.keras.layers.Input(shape=([8, 1, 4, 1]))
in0Up_85805 = tf.keras.layers.Input(shape=([4, 1, 2, 2]))

Min32344 = keras.layers.Minimum(name = 'Min32344', )([in0Min32344,in1Min32344])
Res99510 = keras.layers.Reshape((2, 2, 1, 1), name = 'Res99510', )(Min32344)
Zer21981 = keras.layers.ZeroPadding3D(padding=((6, 0), (1, 0), (3, 0)), name = 'Zer21981', )(Res99510)
Con88112 = keras.layers.Concatenate(axis=4, name = 'Con88112', )([Zer21981,in0Con88112])
Loc73697 = keras.layers.LocallyConnected2D(2, (1, 1),strides=(1, 1), name = 'Loc73697', )(in0Loc73697)
Res25572 = keras.layers.Reshape((1, 2), name = 'Res25572', )(Loc73697)
LST91247 = keras.layers.LSTM(1,recurrent_activation='sigmoid', name = 'LST91247', )(Res25572)
Res27421 = keras.layers.Reshape((1, 1), name = 'Res27421', )(LST91247)
Add67228 = keras.layers.Add(name = 'Add67228', )([in0Add67228,in1Add67228])
Mas77866 = keras.layers.Masking(mask_value=2, name = 'Mas77866', )(Add67228)
Mul40333 = keras.layers.Multiply(name = 'Mul40333', )([Res27421,Mas77866])
Res44111 = keras.layers.Reshape((1, 1, 1), name = 'Res44111', )(Mul40333)
Res10913 = keras.layers.Reshape((1, 1, 1, 1), name = 'Res10913', )(Res44111)
Zer46870 = keras.layers.ZeroPadding3D(padding=((7, 0), (0, 0), (3, 0)), name = 'Zer46870', )(Res10913)
Con98685 = keras.layers.Concatenate(axis=4, name = 'Con98685', )([Zer46870,in0Con98685])
Up_85805 = keras.layers.UpSampling3D(size=(2, 1, 2), name = 'Up_85805', )(in0Up_85805)
Mul24545 = keras.layers.Multiply(name = 'Mul24545', )([Con98685,Up_85805])
Zer40606 = keras.layers.ZeroPadding3D(padding=((0, 0), (2, 0), (0, 0)), name = 'Zer40606', )(Mul24545)
Max10644 = keras.layers.Maximum(name = 'Max10644', )([Con88112,Zer40606])
model = tf.keras.models.Model(inputs=[in0Min32344,in1Min32344,in0Con88112,in0Loc73697,in0Add67228,in1Add67228,in0Con98685,in0Up_85805], outputs=Max10644)
w = model.get_layer('Loc73697').get_weights() 
w[0] = np.array([[[0.7921, 0.9966], [0.7456, 0.8687]]])
w[1] = np.array([[[0, 0]]])
model.get_layer('Loc73697').set_weights(w) 
w = model.get_layer('LST91247').get_weights() 
w[0] = np.array([[9, 1, 3, 5], [2, 6, 7, 3]])
w[1] = np.array([[6, 4, 10, 3]])
w[2] = np.array([10, 6, 8, 7])
model.get_layer('LST91247').set_weights(w) 
in0Min32344 = tf.constant([[[[0.8794], [0.1149]], [[0.3624], [0.1975]]]])
in1Min32344 = tf.constant([[[[0.1149], [0.6732]], [[0.0018], [0.1843]]]])
in0Con88112 = tf.constant([[[[[0.0855], [0.2082], [0.4152], [0.7572]], [[0.2581], [0.013], [0.7219], [0.8145]], [[0.1404], [0.8249], [0.4123], [0.6189]]], [[[0.0626], [0.8022], [0.686], [0.2875]], [[0.2151], [0.3582], [0.874], [0.4231]], [[0.7009], [0.3136], [0.3123], [0.8384]]], [[[0.7653], [0.9065], [0.2754], [0.5052]], [[0.4453], [0.8935], [0.0313], [0.6039]], [[0.064], [0.8572], [0.972], [0.2517]]], [[[0.8366], [0.6176], [0.8137], [0.6068]], [[0.3525], [0.3414], [0.0637], [0.5633]], [[0.8496], [0.5396], [0.3057], [0.1795]]], [[[0.009], [0.6481], [0.3686], [0.3147]], [[0.461], [0.3002], [0.1142], [0.6906]], [[0.3184], [0.7126], [0.4001], [0.7358]]], [[[0.8286], [0.8353], [0.7624], [0.126]], [[0.6738], [0.0414], [0.4925], [0.8915]], [[0.5362], [0.1711], [0.084], [0.3234]]], [[[0.2934], [0.6873], [0.4693], [0.6855]], [[0.6143], [0.545], [0.0767], [0.9131]], [[0.7825], [0.138], [0.4987], [0.0625]]], [[[0.2908], [0.34], [0.4832], [0.2651]], [[0.1253], [0.2313], [0.0313], [0.3369]], [[0.6806], [0.5715], [0.6214], [0.9922]]]]])
in0Loc73697 = tf.constant([[[[0.3972, 0.7064]]]])
in0Add67228 = tf.constant([[[0.818]]])
in1Add67228 = tf.constant([[[0.3152]]])
in0Con98685 = tf.constant([[[[[0.9601], [0.5991], [0.5312], [0.4671]]], [[[0.0259], [0.6274], [0.1518], [0.1542]]], [[[0.1472], [0.3425], [0.6456], [0.7638]]], [[[0.0411], [0.9686], [0.6388], [0.1134]]], [[[0.1297], [0.0832], [0.3894], [0.7094]]], [[[0.7067], [0.414], [0.5708], [0.9346]]], [[[0.4378], [0.8139], [0.126], [0.6303]]], [[[0.9234], [0.7628], [0.1987], [0.0487]]]]])
in0Up_85805 = tf.constant([[[[[1.5582, 1.8018], [1.2971, 1.7462]]], [[[1.1741, 1.6767], [1.669, 1.9076]]], [[[1.9237, 1.5021], [1.988, 1.6033]]], [[[1.1552, 1.4632], [1.8309, 1.8343]]]]])
print (np.array2string(model.predict([in0Min32344,in1Min32344,in0Con88112,in0Loc73697,in0Add67228,in1Add67228,in0Con98685,in0Up_85805],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Max10644.png')

LMin32344 = minimum_layer([[[[[0.8794], [0.1149]], [[0.3624], [0.1975]]]], [[[[0.1149], [0.6732]], [[0.0018], [0.1843]]]]], Min32344), 
LRes99510 = reshape_layer(Min32344, [2, 2, 1, 1], Res99510), 
LZer21981 = zero_padding3D_layer(Res99510, 6, 0, 1, 0, 3, 0, Zer21981), 
LCon88112 = concatenate_layer([Zer21981,[[[[[0.0855], [0.2082], [0.4152], [0.7572]], [[0.2581], [0.013], [0.7219], [0.8145]], [[0.1404], [0.8249], [0.4123], [0.6189]]], [[[0.0626], [0.8022], [0.686], [0.2875]], [[0.2151], [0.3582], [0.874], [0.4231]], [[0.7009], [0.3136], [0.3123], [0.8384]]], [[[0.7653], [0.9065], [0.2754], [0.5052]], [[0.4453], [0.8935], [0.0313], [0.6039]], [[0.064], [0.8572], [0.972], [0.2517]]], [[[0.8366], [0.6176], [0.8137], [0.6068]], [[0.3525], [0.3414], [0.0637], [0.5633]], [[0.8496], [0.5396], [0.3057], [0.1795]]], [[[0.009], [0.6481], [0.3686], [0.3147]], [[0.461], [0.3002], [0.1142], [0.6906]], [[0.3184], [0.7126], [0.4001], [0.7358]]], [[[0.8286], [0.8353], [0.7624], [0.126]], [[0.6738], [0.0414], [0.4925], [0.8915]], [[0.5362], [0.1711], [0.084], [0.3234]]], [[[0.2934], [0.6873], [0.4693], [0.6855]], [[0.6143], [0.545], [0.0767], [0.9131]], [[0.7825], [0.138], [0.4987], [0.0625]]], [[[0.2908], [0.34], [0.4832], [0.2651]], [[0.1253], [0.2313], [0.0313], [0.3369]], [[0.6806], [0.5715], [0.6214], [0.9922]]]]]], 4, Con88112), 
LLoc73697 = locally_connected2D_layer([[[[0.3972, 0.7064]]]], 1, 1,[[[0.7921, 0.9966], [0.7456, 0.8687]]],[[[0, 0]]], 1, 1, Loc73697), 
LRes25572 = reshape_layer(Loc73697, [1, 2], Res25572), 
LLST91247 = lstm_layer(Res25572,[[9, 1, 3, 5], [2, 6, 7, 3]],[[6, 4, 10, 3]],[10, 6, 8, 7], LST91247), 
LRes27421 = reshape_layer(LST91247, [1, 1], Res27421), 
LAdd67228 = add_layer([[[[0.818]]], [[[0.3152]]]], Add67228), 
LMas77866 = masking_layer(Add67228, 2, Mas77866), 
LMul40333 = multiply_layer([Res27421,Mas77866], Mul40333), 
LRes44111 = reshape_layer(Mul40333, [1, 1, 1], Res44111), 
LRes10913 = reshape_layer(Res44111, [1, 1, 1, 1], Res10913), 
LZer46870 = zero_padding3D_layer(Res10913, 7, 0, 0, 0, 3, 0, Zer46870), 
LCon98685 = concatenate_layer([Zer46870,[[[[[0.9601], [0.5991], [0.5312], [0.4671]]], [[[0.0259], [0.6274], [0.1518], [0.1542]]], [[[0.1472], [0.3425], [0.6456], [0.7638]]], [[[0.0411], [0.9686], [0.6388], [0.1134]]], [[[0.1297], [0.0832], [0.3894], [0.7094]]], [[[0.7067], [0.414], [0.5708], [0.9346]]], [[[0.4378], [0.8139], [0.126], [0.6303]]], [[[0.9234], [0.7628], [0.1987], [0.0487]]]]]], 4, Con98685), 
LUp_85805 = up_sampling3D_layer([[[[[1.5582, 1.8018], [1.2971, 1.7462]]], [[[1.1741, 1.6767], [1.669, 1.9076]]], [[[1.9237, 1.5021], [1.988, 1.6033]]], [[[1.1552, 1.4632], [1.8309, 1.8343]]]]], 2, 1, 2, Up_85805), 
LMul24545 = multiply_layer([Con98685,Up_85805], Mul24545), 
LZer40606 = zero_padding3D_layer(Mul24545, 0, 0, 2, 0, 0, 0, Zer40606), 
LMax10644 = maximum_layer([Con88112,Zer40606], Max10644), 
exec_layers([LMin32344,LRes99510,LZer21981,LCon88112,LLoc73697,LRes25572,LLST91247,LRes27421,LAdd67228,LMas77866,LMul40333,LRes44111,LRes10913,LZer46870,LCon98685,LUp_85805,LMul24545,LZer40606,LMax10644],["Min32344","Res99510","Zer21981","Con88112","Loc73697","Res25572","LST91247","Res27421","Add67228","Mas77866","Mul40333","Res44111","Res10913","Zer46870","Con98685","Up_85805","Mul24545","Zer40606","Max10644"],Max10644,"Max10644")

Actual (Unparsed): [[[[[0.0000000, 0.0855000], [0.0000000, 0.2082000], [0.0000000, 0.4152000], [0.0000000, 0.7572000]], [[0.0000000, 0.2581000], [0.0000000, 0.0130000], [0.0000000, 0.7219000], [0.0000000, 0.8145000]], [[0.0000000, 1.7299082], [0.0000000, 1.0794584], [0.0000000, 0.9275814], [0.0000000, 0.8156500]]], [[[0.0000000, 0.0626000], [0.0000000, 0.8022000], [0.0000000, 0.6860000], [0.0000000, 0.2875000]], [[0.0000000, 0.2151000], [0.0000000, 0.3582000], [0.0000000, 0.8740000], [0.0000000, 0.4231000]], [[0.0000000, 0.7009000], [0.0000000, 1.1304493], [0.0000000, 0.3123000], [0.0000000, 0.8384000]]], [[[0.0000000, 0.7653000], [0.0000000, 0.9065000], [0.0000000, 0.2754000], [0.0000000, 0.5052000]], [[0.0000000, 0.4453000], [0.0000000, 0.8935000], [0.0000000, 0.0313000], [0.0000000, 0.6039000]], [[0.0000000, 0.2468102], [0.0000000, 0.8572000], [0.0000000, 1.2315466], [0.0000000, 1.4570250]]], [[[0.0000000, 0.8366000], [0.0000000, 0.6176000], [0.0000000, 0.8137000], [0.0000000, 0.6068000]], [[0.0000000, 0.3525000], [0.0000000, 0.3414000], [0.0000000, 0.0637000], [0.0000000, 0.5633000]], [[0.0000000, 0.8496000], [0.0000000, 1.6240516], [0.0000000, 1.2185750], [0.0000000, 0.2163218]]], [[[0.0000000, 0.0090000], [0.0000000, 0.6481000], [0.0000000, 0.3686000], [0.0000000, 0.3147000]], [[0.0000000, 0.4610000], [0.0000000, 0.3002000], [0.0000000, 0.1142000], [0.0000000, 0.6906000]], [[0.0000000, 0.3184000], [0.0000000, 0.7126000], [0.0000000, 0.6243250], [0.0000000, 1.1373810]]], [[[0.0000000, 0.8286000], [0.0000000, 0.8353000], [0.0000000, 0.7624000], [0.0000000, 0.1260000]], [[0.0000000, 0.6738000], [0.0000000, 0.0414000], [0.0000000, 0.4925000], [0.0000000, 0.8915000]], [[0.0000000, 1.0615341], [0.0000000, 0.6218694], [0.0000000, 0.9151636], [0.0000000, 1.4984441]]], [[[0.0000000, 0.2934000], [0.0000000, 0.6873000], [0.0000000, 0.4693000], [0.0000000, 0.6855000]], [[0.0000000, 0.6143000], [0.0000000, 0.5450000], [0.0000000, 0.0767000], [0.1149000, 0.9131000]], [[0.0000000, 0.7825000], [0.0000000, 1.1908984], [0.0000000, 0.4987000], [0.1149000, 1.1561593]]], [[[0.0000000, 0.2908000], [0.0000000, 0.3400000], [0.0000000, 0.4832000], [0.0000000, 0.2651000]], [[0.0000000, 0.1253000], [0.0000000, 0.2313000], [0.0000000, 0.0313000], [0.0018000, 0.3369000]], [[0.0000000, 1.3511188], [0.0000000, 1.1161289], [0.0000000, 0.6214000], [1.5801361, 0.9922000]]]]]

Expected (Unparsed): [[[[[0,0.0855],[0,0.2082],[0,0.4152],[0,0.7572]],[[0,0.2581],[0,0.013],[0,0.7219],[0,0.8145]],[[0,1.72990818],[0,1.07945838],[0,0.92758144],[0,0.81565002]]],[[[0,0.0626],[0,0.8022],[0,0.686],[0,0.2875]],[[0,0.2151],[0,0.3582],[0,0.874],[0,0.4231]],[[0,0.7009],[0,1.1304493199999999],[0,0.3123],[0,0.8384]]],[[[0,0.7653],[0,0.9065],[0,0.2754],[0,0.5052]],[[0,0.4453],[0,0.8935],[0,0.0313],[0,0.6039]],[[0,0.24681024000000001],[0,0.8572],[0,1.23154656],[0,1.45702488]]],[[[0,0.8366],[0,0.6176],[0,0.8137],[0,0.6068]],[[0,0.3525],[0,0.3414],[0,0.0637],[0,0.5633]],[[0,0.8496],[0,1.6240516200000001],[0,1.21857488],[0,0.21632184]]],[[[0,0.009],[0,0.6481],[0,0.3686],[0,0.3147]],[[0,0.461],[0,0.3002],[0,0.1142],[0,0.6906]],[[0,0.3184],[0,0.7126],[0,0.62432502],[0,1.13738102]]],[[[0,0.8286],[0,0.8353],[0,0.7624],[0,0.126]],[[0,0.6738],[0,0.0414],[0,0.4925],[0,0.8915]],[[0,1.06153407],[0,0.6218694],[0,0.91516364],[0,1.49844418]]],[[[0,0.2934],[0,0.6873],[0,0.4693],[0,0.6855]],[[0,0.6143],[0,0.545],[0,0.0767],[0.1149,0.9131]],[[0,0.7825],[0,1.19089848],[0,0.4987],[0.1149,1.15615929]]],[[[0,0.2908],[0,0.34],[0,0.4832],[0,0.2651]],[[0,0.1253],[0,0.2313],[0,0.0313],[0.0018,0.3369]],[[0,1.35111888],[0,1.1161289600000002],[0,0.6214],[1.5801361437383479,0.9922]]]]]

Actual:   [[[[[0, 0.0855], [0, 0.2082], [0, 0.4152], [0, 0.7572]], [[0, 0.2581], [0, 0.013], [0, 0.7219], [0, 0.8145]], [[0, 1.73], [0, 1.0795], [0, 0.9276], [0, 0.8157]]], [[[0, 0.0626], [0, 0.8022], [0, 0.686], [0, 0.2875]], [[0, 0.2151], [0, 0.3582], [0, 0.874], [0, 0.4231]], [[0, 0.7009], [0, 1.1305], [0, 0.3123], [0, 0.8384]]], [[[0, 0.7653], [0, 0.9065], [0, 0.2754], [0, 0.5052]], [[0, 0.4453], [0, 0.8935], [0, 0.0313], [0, 0.6039]], [[0, 0.2469], [0, 0.8572], [0, 1.2316], [0, 1.4571]]], [[[0, 0.8366], [0, 0.6176], [0, 0.8137], [0, 0.6068]], [[0, 0.3525], [0, 0.3414], [0, 0.0637], [0, 0.5633]], [[0, 0.8496], [0, 1.6241], [0, 1.2186], [0, 0.2164]]], [[[0, 0.009], [0, 0.6481], [0, 0.3686], [0, 0.3147]], [[0, 0.461], [0, 0.3002], [0, 0.1142], [0, 0.6906]], [[0, 0.3184], [0, 0.7126], [0, 0.6244], [0, 1.1374]]], [[[0, 0.8286], [0, 0.8353], [0, 0.7624], [0, 0.126]], [[0, 0.6738], [0, 0.0414], [0, 0.4925], [0, 0.8915]], [[0, 1.0616], [0, 0.6219], [0, 0.9152], [0, 1.4985]]], [[[0, 0.2934], [0, 0.6873], [0, 0.4693], [0, 0.6855]], [[0, 0.6143], [0, 0.545], [0, 0.0767], [0.1149, 0.9131]], [[0, 0.7825], [0, 1.1909], [0, 0.4987], [0.1149, 1.1562]]], [[[0, 0.2908], [0, 0.34], [0, 0.4832], [0, 0.2651]], [[0, 0.1253], [0, 0.2313], [0, 0.0313], [0.0018, 0.3369]], [[0, 1.3512], [0, 1.1162], [0, 0.6214], [1.5802, 0.9922]]]]]

Expected: [[[[[0, 0.0855], [0, 0.2082], [0, 0.4152], [0, 0.7572]], [[0, 0.2581], [0, 0.013], [0, 0.7219], [0, 0.8145]], [[0, 1.73], [0, 1.0795], [0, 0.9276], [0, 0.8157]]], [[[0, 0.0626], [0, 0.8022], [0, 0.686], [0, 0.2875]], [[0, 0.2151], [0, 0.3582], [0, 0.874], [0, 0.4231]], [[0, 0.7009], [0, 1.1305], [0, 0.3123], [0, 0.8384]]], [[[0, 0.7653], [0, 0.9065], [0, 0.2754], [0, 0.5052]], [[0, 0.4453], [0, 0.8935], [0, 0.0313], [0, 0.6039]], [[0, 0.2469], [0, 0.8572], [0, 1.2316], [0, 1.4571]]], [[[0, 0.8366], [0, 0.6176], [0, 0.8137], [0, 0.6068]], [[0, 0.3525], [0, 0.3414], [0, 0.0637], [0, 0.5633]], [[0, 0.8496], [0, 1.6241], [0, 1.2186], [0, 0.2164]]], [[[0, 0.009], [0, 0.6481], [0, 0.3686], [0, 0.3147]], [[0, 0.461], [0, 0.3002], [0, 0.1142], [0, 0.6906]], [[0, 0.3184], [0, 0.7126], [0, 0.6244], [0, 1.1374]]], [[[0, 0.8286], [0, 0.8353], [0, 0.7624], [0, 0.126]], [[0, 0.6738], [0, 0.0414], [0, 0.4925], [0, 0.8915]], [[0, 1.0616], [0, 0.6219], [0, 0.9152], [0, 1.4985]]], [[[0, 0.2934], [0, 0.6873], [0, 0.4693], [0, 0.6855]], [[0, 0.6143], [0, 0.545], [0, 0.0767], [0.1149, 0.9131]], [[0, 0.7825], [0, 1.1909], [0, 0.4987], [0.1149, 1.1562]]], [[[0, 0.2908], [0, 0.34], [0, 0.4832], [0, 0.2651]], [[0, 0.1253], [0, 0.2313], [0, 0.0313], [0.0018, 0.3369]], [[0, 1.3512], [0, 1.1162], [0, 0.6214], [1.5802, 0.9922]]]]]