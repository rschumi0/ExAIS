import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Ave28535 = tf.keras.layers.Input(shape=([2, 2, 2, 2]))
in1Ave28535 = tf.keras.layers.Input(shape=([2, 2, 2, 2]))
in0Max17277 = tf.keras.layers.Input(shape=([1, 2, 1, 1]))
in1Max17277 = tf.keras.layers.Input(shape=([1, 2, 1, 1]))
in0Con15203 = tf.keras.layers.Input(shape=([2, 2, 2, 1]))
in0Mul61510 = tf.keras.layers.Input(shape=([1, 1, 2]))
in1Mul61510 = tf.keras.layers.Input(shape=([1, 1, 2]))
in0Con71098 = tf.keras.layers.Input(shape=([2, 2, 2]))

Ave28535 = keras.layers.Average(name = 'Ave28535', )([in0Ave28535,in1Ave28535])
Mas24235 = keras.layers.Masking(mask_value=2, name = 'Mas24235', )(Ave28535)
Max17277 = keras.layers.Maximum(name = 'Max17277', )([in0Max17277,in1Max17277])
Zer25933 = keras.layers.ZeroPadding3D(padding=((1, 0), (0, 0), (1, 0)), name = 'Zer25933', )(Max17277)
Con15203 = keras.layers.Concatenate(axis=4, name = 'Con15203', )([Zer25933,in0Con15203])
Min96243 = keras.layers.Minimum(name = 'Min96243', )([Mas24235,Con15203])
Res71730 = keras.layers.Reshape((2, 2, 4), name = 'Res71730', )(Min96243)
Mul61510 = keras.layers.Multiply(name = 'Mul61510', )([in0Mul61510,in1Mul61510])
Zer75102 = keras.layers.ZeroPadding2D(padding=((1, 0), (1, 0)), name = 'Zer75102', )(Mul61510)
Con71098 = keras.layers.Concatenate(axis=3, name = 'Con71098', )([Zer75102,in0Con71098])
Ave58225 = keras.layers.Average(name = 'Ave58225', )([Res71730,Con71098])
model = tf.keras.models.Model(inputs=[in0Ave28535,in1Ave28535,in0Max17277,in1Max17277,in0Con15203,in0Mul61510,in1Mul61510,in0Con71098], outputs=Ave58225)
in0Ave28535 = tf.constant([[[[[0.3657, 0.8564], [0.3279, 0.531]], [[0.206, 0.5192], [0.9676, 0.1496]]], [[[0.3958, 0.7858], [0.6761, 0.6275]], [[0.6619, 0.0263], [0.3419, 0.9513]]]]])
in1Ave28535 = tf.constant([[[[[0.9063, 0.5235], [0.8125, 0.6873]], [[0.294, 0.4341], [0.9332, 0.2206]]], [[[0.805, 0.5903], [0.5414, 0.5854]], [[0.6943, 0.5002], [0.3977, 0.353]]]]])
in0Max17277 = tf.constant([[[[[0.4231]], [[0.2218]]]]])
in1Max17277 = tf.constant([[[[[0.8653]], [[0.1849]]]]])
in0Con15203 = tf.constant([[[[[0.4674], [0.6434]], [[0.2055], [0.739]]], [[[0.3481], [0.9977]], [[0.5085], [0.2147]]]]])
in0Mul61510 = tf.constant([[[[0.406, 0.0059]]]])
in1Mul61510 = tf.constant([[[[0.127, 0.2163]]]])
in0Con71098 = tf.constant([[[[0.4625, 0.7189], [0.756, 0.1469]], [[0.9115, 0.4617], [0.9329, 0.1655]]]])
print (np.array2string(model.predict([in0Ave28535,in1Ave28535,in0Max17277,in1Max17277,in0Con15203,in0Mul61510,in1Mul61510,in0Con71098],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Ave58225.png')

LAve28535 = average_layer([[[[[[0.3657, 0.8564], [0.3279, 0.531]], [[0.206, 0.5192], [0.9676, 0.1496]]], [[[0.3958, 0.7858], [0.6761, 0.6275]], [[0.6619, 0.0263], [0.3419, 0.9513]]]]], [[[[[0.9063, 0.5235], [0.8125, 0.6873]], [[0.294, 0.4341], [0.9332, 0.2206]]], [[[0.805, 0.5903], [0.5414, 0.5854]], [[0.6943, 0.5002], [0.3977, 0.353]]]]]], Ave28535), 
LMas24235 = masking_layer(Ave28535, 2, Mas24235), 
LMax17277 = maximum_layer([[[[[[0.4231]], [[0.2218]]]]], [[[[[0.8653]], [[0.1849]]]]]], Max17277), 
LZer25933 = zero_padding3D_layer(Max17277, 1, 0, 0, 0, 1, 0, Zer25933), 
LCon15203 = concatenate_layer([Zer25933,[[[[[0.4674], [0.6434]], [[0.2055], [0.739]]], [[[0.3481], [0.9977]], [[0.5085], [0.2147]]]]]], 4, Con15203), 
LMin96243 = minimum_layer([Mas24235,Con15203], Min96243), 
LRes71730 = reshape_layer(Min96243, [2, 2, 4], Res71730), 
LMul61510 = multiply_layer([[[[[0.406, 0.0059]]]], [[[[0.127, 0.2163]]]]], Mul61510), 
LZer75102 = zero_padding2D_layer(Mul61510, 1, 0, 1, 0, Zer75102), 
LCon71098 = concatenate_layer([Zer75102,[[[[0.4625, 0.7189], [0.756, 0.1469]], [[0.9115, 0.4617], [0.9329, 0.1655]]]]], 3, Con71098), 
LAve58225 = average_layer([Res71730,Con71098], Ave58225), 
exec_layers([LAve28535,LMas24235,LMax17277,LZer25933,LCon15203,LMin96243,LRes71730,LMul61510,LZer75102,LCon71098,LAve58225],["Ave28535","Mas24235","Max17277","Zer25933","Con15203","Min96243","Res71730","Mul61510","Zer75102","Con71098","Ave58225"],Ave58225,"Ave58225")

Actual (Unparsed): [[[[0.0000000, 0.2337000, 0.2312500, 0.6640250], [0.0000000, 0.1027500, 0.3780000, 0.1660000]], [[0.0000000, 0.1740500, 0.7601250, 0.5340750], [0.0257810, 0.1322631, 0.5773500, 0.1901000]]]]

Expected (Unparsed): [[[[0,0.2337,0.23125,0.6640250000000001],[0,0.10275,0.378,0.16599999999999998]],[[0,0.17405,0.7601249999999999,0.534075],[0.025781000000000002,0.132263085,0.57735,0.1901]]]]

Actual:   [[[[0, 0.2337, 0.2313, 0.6641], [0, 0.1028, 0.378, 0.166]], [[0, 0.1741, 0.7602, 0.5341], [0.0258, 0.1323, 0.5774, 0.1901]]]]

Expected: [[[[0, 0.2337, 0.2313, 0.6641], [0, 0.1028, 0.378, 0.166]], [[0, 0.1741, 0.7602, 0.5341], [0.0258, 0.1323, 0.5774, 0.1901]]]]