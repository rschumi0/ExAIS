import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Lea11832 = tf.keras.layers.Input(shape=([2, 1, 2, 1]))
in0Con50211 = tf.keras.layers.Input(shape=([3, 3, 4, 1]))
in0ReL95674 = tf.keras.layers.Input(shape=([2, 2, 2]))
in0Con58349 = tf.keras.layers.Input(shape=([3, 3, 2]))
in0Lay55101 = tf.keras.layers.Input(shape=([3, 1, 4]))
in0Con22723 = tf.keras.layers.Input(shape=([3, 3, 4, 1]))
in0Add81407 = tf.keras.layers.Input(shape=([2, 1, 2, 2]))
in1Add81407 = tf.keras.layers.Input(shape=([2, 1, 2, 2]))

Lea11832 = keras.layers.LeakyReLU(alpha=9.022166272752939, name = 'Lea11832', input_shape=(2, 1, 2, 1))(in0Lea11832)
Zer85483 = keras.layers.ZeroPadding3D(padding=((1, 0), (2, 0), (2, 0)), name = 'Zer85483', )(Lea11832)
Con50211 = keras.layers.Concatenate(axis=4, name = 'Con50211', )([Zer85483,in0Con50211])
ReL95674 = keras.layers.ReLU(max_value=7.452498628291515, negative_slope=7.05665854144643, threshold=4.862355928957276, name = 'ReL95674', input_shape=(2, 2, 2))(in0ReL95674)
Zer80647 = keras.layers.ZeroPadding2D(padding=((1, 0), (1, 0)), name = 'Zer80647', )(ReL95674)
Con58349 = keras.layers.Concatenate(axis=3, name = 'Con58349', )([Zer80647,in0Con58349])
Lay55101 = keras.layers.LayerNormalization(axis=3, epsilon=2.49279660050148, name = 'Lay55101', )(in0Lay55101)
Zer87638 = keras.layers.ZeroPadding2D(padding=((0, 0), (2, 0)), name = 'Zer87638', )(Lay55101)
Ave18383 = keras.layers.Average(name = 'Ave18383', )([Con58349,Zer87638])
Res35157 = keras.layers.Reshape((3, 3, 4, 1), name = 'Res35157', )(Ave18383)
Con22723 = keras.layers.Concatenate(axis=4, name = 'Con22723', )([Res35157,in0Con22723])
Add81407 = keras.layers.Add(name = 'Add81407', )([in0Add81407,in1Add81407])
Zer94882 = keras.layers.ZeroPadding3D(padding=((1, 0), (2, 0), (2, 0)), name = 'Zer94882', )(Add81407)
Mul5828 = keras.layers.Multiply(name = 'Mul5828', )([Con22723,Zer94882])
Max33342 = keras.layers.Maximum(name = 'Max33342', )([Con50211,Mul5828])
model = tf.keras.models.Model(inputs=[in0Lea11832,in0Con50211,in0ReL95674,in0Con58349,in0Lay55101,in0Con22723,in0Add81407,in1Add81407], outputs=Max33342)
in0Lea11832 = tf.constant([[[[[0.9406], [0.1764]]], [[[0.718], [0.5277]]]]])
in0Con50211 = tf.constant([[[[[0.7371], [0.5997], [0.84], [0.5921]], [[0.7594], [0.3676], [0.2035], [0.7408]], [[0.6119], [0.404], [0.7774], [0.9625]]], [[[0.5988], [0.6974], [0.1222], [0.8761]], [[0.4807], [0.0335], [0.066], [0.8805]], [[0.2534], [0.9161], [0.68], [0.554]]], [[[0.5838], [0.5813], [0.1447], [0.081]], [[0.4147], [0.9432], [0.0336], [0.6888]], [[0.9492], [0.3254], [0.2006], [0.1764]]]]])
in0ReL95674 = tf.constant([[[[0.9747, 0.8437], [0.0156, 0.6955]], [[0.2705, 0.9264], [0.3702, 0.5998]]]])
in0Con58349 = tf.constant([[[[0.4012, 0.7597], [0.2012, 0.576], [0.1193, 0.859]], [[0.6857, 0.4778], [0.8898, 0.2751], [0.0899, 0.2307]], [[0.0306, 0.6005], [0.255, 0.141], [0.0319, 0.6909]]]])
in0Lay55101 = tf.constant([[[[1.5899, 1.3294, 1.907, 1.994]], [[1.2286, 1.9615, 1.2817, 1.7545]], [[1.3528, 1.1464, 1.5456, 1.0261]]]])
in0Con22723 = tf.constant([[[[[0.8712], [0.503], [0.6351], [0.0071]], [[0.6849], [0.484], [0.0385], [0.7808]], [[0.1852], [0.1232], [0.8533], [0.0917]]], [[[0.1989], [0.7428], [0.6251], [0.2725]], [[0.4768], [0.2399], [0.7121], [0.1979]], [[0.2531], [0.8831], [0.9894], [0.2614]]], [[[0.4372], [0.3612], [0.4179], [0.2334]], [[0.0667], [0.621], [0.2339], [0.1717]], [[0.3176], [0.7703], [0.6362], [0.8709]]]]])
in0Add81407 = tf.constant([[[[[0.6567, 0.8587], [0.7038, 0.03]]], [[[0.7798, 0.9138], [0.3311, 0.7611]]]]])
in1Add81407 = tf.constant([[[[[0.4039, 0.8807], [0.4747, 0.4563]]], [[[0.4559, 0.4097], [0.4766, 0.1575]]]]])
print (np.array2string(model.predict([in0Lea11832,in0Con50211,in0ReL95674,in0Con58349,in0Lay55101,in0Con22723,in0Add81407,in1Add81407],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Max33342.png')

LLea11832 = leaky_relu_layer([[[[[0.9406], [0.1764]]], [[[0.718], [0.5277]]]]], 9.022166272752939, Lea11832), 
LZer85483 = zero_padding3D_layer(Lea11832, 1, 0, 2, 0, 2, 0, Zer85483), 
LCon50211 = concatenate_layer([Zer85483,[[[[[0.7371], [0.5997], [0.84], [0.5921]], [[0.7594], [0.3676], [0.2035], [0.7408]], [[0.6119], [0.404], [0.7774], [0.9625]]], [[[0.5988], [0.6974], [0.1222], [0.8761]], [[0.4807], [0.0335], [0.066], [0.8805]], [[0.2534], [0.9161], [0.68], [0.554]]], [[[0.5838], [0.5813], [0.1447], [0.081]], [[0.4147], [0.9432], [0.0336], [0.6888]], [[0.9492], [0.3254], [0.2006], [0.1764]]]]]], 4, Con50211), 
LReL95674 = relu_layer([[[[0.9747, 0.8437], [0.0156, 0.6955]], [[0.2705, 0.9264], [0.3702, 0.5998]]]], 7.452498628291515, 7.05665854144643, 4.862355928957276, ReL95674), 
LZer80647 = zero_padding2D_layer(ReL95674, 1, 0, 1, 0, Zer80647), 
LCon58349 = concatenate_layer([Zer80647,[[[[0.4012, 0.7597], [0.2012, 0.576], [0.1193, 0.859]], [[0.6857, 0.4778], [0.8898, 0.2751], [0.0899, 0.2307]], [[0.0306, 0.6005], [0.255, 0.141], [0.0319, 0.6909]]]]], 3, Con58349), 
LLay55101 = layer_normalization_layer([[[[1.5899, 1.3294, 1.907, 1.994]], [[1.2286, 1.9615, 1.2817, 1.7545]], [[1.3528, 1.1464, 1.5456, 1.0261]]]], 3, 2.49279660050148, Lay55101), 
LZer87638 = zero_padding2D_layer(Lay55101, 0, 0, 2, 0, Zer87638), 
LAve18383 = average_layer([Con58349,Zer87638], Ave18383), 
LRes35157 = reshape_layer(Ave18383, [3, 3, 4, 1], Res35157), 
LCon22723 = concatenate_layer([Res35157,[[[[[0.8712], [0.503], [0.6351], [0.0071]], [[0.6849], [0.484], [0.0385], [0.7808]], [[0.1852], [0.1232], [0.8533], [0.0917]]], [[[0.1989], [0.7428], [0.6251], [0.2725]], [[0.4768], [0.2399], [0.7121], [0.1979]], [[0.2531], [0.8831], [0.9894], [0.2614]]], [[[0.4372], [0.3612], [0.4179], [0.2334]], [[0.0667], [0.621], [0.2339], [0.1717]], [[0.3176], [0.7703], [0.6362], [0.8709]]]]]], 4, Con22723), 
LAdd81407 = add_layer([[[[[[0.6567, 0.8587], [0.7038, 0.03]]], [[[0.7798, 0.9138], [0.3311, 0.7611]]]]], [[[[[0.4039, 0.8807], [0.4747, 0.4563]]], [[[0.4559, 0.4097], [0.4766, 0.1575]]]]]], Add81407), 
LZer94882 = zero_padding3D_layer(Add81407, 1, 0, 2, 0, 2, 0, Zer94882), 
LMul5828 = multiply_layer([Con22723,Zer94882], Mul5828), 
LMax33342 = maximum_layer([Con50211,Mul5828], Max33342), 
exec_layers([LLea11832,LZer85483,LCon50211,LReL95674,LZer80647,LCon58349,LLay55101,LZer87638,LAve18383,LRes35157,LCon22723,LAdd81407,LZer94882,LMul5828,LMax33342],["Lea11832","Zer85483","Con50211","ReL95674","Zer80647","Con58349","Lay55101","Zer87638","Ave18383","Res35157","Con22723","Add81407","Zer94882","Mul5828","Max33342"],Max33342,"Max33342")

Actual (Unparsed): [[[[[0.0000000, 0.7371000], [0.0000000, 0.5997000], [0.0000000, 0.8400000], [0.0000000, 0.5921000]], [[0.0000000, 0.7594000], [0.0000000, 0.3676000], [0.0000000, 0.2035000], [0.0000000, 0.7408000]], [[-0.0000000, 0.6119000], [-0.0000000, 0.4040000], [0.0000000, 0.7774000], [0.0000000, 0.9625000]]], [[[0.0000000, 0.5988000], [0.0000000, 0.6974000], [0.0000000, 0.1222000], [0.0000000, 0.8761000]], [[-0.0000000, 0.4807000], [-0.0000000, 0.0335000], [0.0000000, 0.0660000], [0.0000000, 0.8805000]], [[-0.0000000, 0.2534000], [-0.0000000, 0.9161000], [0.9406000, 1.7209624], [0.2084176, 0.5540000]]], [[[0.0000000, 0.5838000], [0.0000000, 0.5813000], [0.0000000, 0.1447000], [0.0000000, 0.0810000]], [[-0.0000000, 0.4147000], [-0.0000000, 0.9432000], [0.0000000, 0.0336000], [0.0000000, 0.6888000]], [[-0.0000000, 0.9492000], [-0.0000000, 0.3254000], [0.7180000, 0.8420107], [0.5277000, 0.8000087]]]]]

Expected (Unparsed): [[[[[0,0.7371],[0,0.5997],[0,0.84],[0,0.5921]],[[0,0.7594],[0,0.3676],[0,0.2035],[0,0.7408]],[[0,0.6119],[0,0.404],[0,0.7774],[0,0.9625]]],[[[0,0.5988],[0,0.6974],[0,0.1222],[0,0.8761]],[[0,0.4807],[0,0.0335],[0,0.066],[0,0.8805]],[[0,0.2534],[0,0.9161],[0.9406,1.72096236],[0.20841758142033887,0.554]]],[[[0,0.5838],[0,0.5813],[0,0.1447],[0,0.081]],[[0,0.4147],[0,0.9432],[0,0.0336],[0,0.6888]],[[0,0.9492],[0,0.3254],[0.718,0.8420106999999999],[0.5277,0.80000874]]]]]

Actual:   [[[[[0, 0.7371], [0, 0.5997], [0, 0.84], [0, 0.5921]], [[0, 0.7594], [0, 0.3676], [0, 0.2035], [0, 0.7408]], [[-0, 0.6119], [-0, 0.404], [0, 0.7774], [0, 0.9625]]], [[[0, 0.5988], [0, 0.6974], [0, 0.1222], [0, 0.8761]], [[-0, 0.4807], [-0, 0.0335], [0, 0.066], [0, 0.8805]], [[-0, 0.2534], [-0, 0.9161], [0.9406, 1.721], [0.2085, 0.554]]], [[[0, 0.5838], [0, 0.5813], [0, 0.1447], [0, 0.081]], [[-0, 0.4147], [-0, 0.9432], [0, 0.0336], [0, 0.6888]], [[-0, 0.9492], [-0, 0.3254], [0.718, 0.8421], [0.5277, 0.8001]]]]]

Expected: [[[[[0, 0.7371], [0, 0.5997], [0, 0.84], [0, 0.5921]], [[0, 0.7594], [0, 0.3676], [0, 0.2035], [0, 0.7408]], [[0, 0.6119], [0, 0.404], [0, 0.7774], [0, 0.9625]]], [[[0, 0.5988], [0, 0.6974], [0, 0.1222], [0, 0.8761]], [[0, 0.4807], [0, 0.0335], [0, 0.066], [0, 0.8805]], [[0, 0.2534], [0, 0.9161], [0.9406, 1.721], [0.2085, 0.554]]], [[[0, 0.5838], [0, 0.5813], [0, 0.1447], [0, 0.081]], [[0, 0.4147], [0, 0.9432], [0, 0.0336], [0, 0.6888]], [[0, 0.9492], [0, 0.3254], [0.718, 0.8421], [0.5277, 0.8001]]]]]