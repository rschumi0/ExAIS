import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Max99400 = tf.keras.layers.Input(shape=([1, 2]))
in1Max99400 = tf.keras.layers.Input(shape=([1, 2]))
in0Con28101 = tf.keras.layers.Input(shape=([10, 3, 1]))
in0Lay40036 = tf.keras.layers.Input(shape=([3, 1]))
in0Max97601 = tf.keras.layers.Input(shape=([1, 2]))
in1Max97601 = tf.keras.layers.Input(shape=([1, 2]))
in0GRU82115 = tf.keras.layers.Input(shape=([3, 1]))
in0Con37495 = tf.keras.layers.Input(shape=([8]))
in0Con43673 = tf.keras.layers.Input(shape=([10, 3, 1]))
in0Max70388 = tf.keras.layers.Input(shape=([2, 2, 2]))
in1Max70388 = tf.keras.layers.Input(shape=([2, 2, 2]))
in0Max30028 = tf.keras.layers.Input(shape=([2, 2, 1]))
in1Max30028 = tf.keras.layers.Input(shape=([2, 2, 1]))
in0Con1048 = tf.keras.layers.Input(shape=([2, 2, 1]))

Max99400 = keras.layers.Maximum(name = 'Max99400', )([in0Max99400,in1Max99400])
Den2283 = keras.layers.Dense(3,name = 'Den2283', )(Max99400)
Res47965 = keras.layers.Reshape((1, 3, 1), name = 'Res47965', )(Den2283)
Zer64578 = keras.layers.ZeroPadding2D(padding=((9, 0), (0, 0)), name = 'Zer64578', )(Res47965)
Con28101 = keras.layers.Concatenate(axis=3, name = 'Con28101', )([Zer64578,in0Con28101])
Lay40036 = keras.layers.LayerNormalization(axis=2, epsilon=2.997676116714588, name = 'Lay40036', )(in0Lay40036)
Zer4321 = keras.layers.ZeroPadding1D(padding=((2, 0)), name = 'Zer4321', )(Lay40036)
Max97601 = keras.layers.Maximum(name = 'Max97601', )([in0Max97601,in1Max97601])
Dot4517 = keras.layers.Dot(axes=(2, 1), name = 'Dot4517', )([Zer4321,Max97601])
Fla44210 = keras.layers.Flatten(name = 'Fla44210', )(Dot4517)
GRU82115 = keras.layers.GRU(3,reset_after=True, recurrent_activation='sigmoid', name = 'GRU82115', )(in0GRU82115)
Res26091 = keras.layers.Reshape((3, 1), name = 'Res26091', )(GRU82115)
LST49972 = keras.layers.LSTM(2,recurrent_activation='sigmoid', name = 'LST49972', )(Res26091)
Con37495 = keras.layers.Concatenate(axis=1, name = 'Con37495', )([LST49972,in0Con37495])
Mul5469 = keras.layers.Multiply(name = 'Mul5469', )([Fla44210,Con37495])
Res72884 = keras.layers.Reshape((10, 1), name = 'Res72884', )(Mul5469)
Res14639 = keras.layers.Reshape((10, 1, 1), name = 'Res14639', )(Res72884)
Zer1297 = keras.layers.ZeroPadding2D(padding=((0, 0), (2, 0)), name = 'Zer1297', )(Res14639)
Con43673 = keras.layers.Concatenate(axis=3, name = 'Con43673', )([Zer1297,in0Con43673])
Max70388 = keras.layers.Maximum(name = 'Max70388', )([in0Max70388,in1Max70388])
Max30028 = keras.layers.Maximum(name = 'Max30028', )([in0Max30028,in1Max30028])
ReL85206 = keras.layers.ReLU(max_value=5.8838631508357375, negative_slope=3.605295914904925, threshold=4.783593638511972, name = 'ReL85206', )(Max30028)
Con1048 = keras.layers.Concatenate(axis=3, name = 'Con1048', )([ReL85206,in0Con1048])
Ave35424 = keras.layers.Average(name = 'Ave35424', )([Max70388,Con1048])
Zer9944 = keras.layers.ZeroPadding2D(padding=((8, 0), (1, 0)), name = 'Zer9944', )(Ave35424)
Add10283 = keras.layers.Add(name = 'Add10283', )([Con43673,Zer9944])
Add23599 = keras.layers.Add(name = 'Add23599', )([Con28101,Add10283])
model = tf.keras.models.Model(inputs=[in0Max99400,in1Max99400,in0Con28101,in0Lay40036,in0Max97601,in1Max97601,in0GRU82115,in0Con37495,in0Con43673,in0Max70388,in1Max70388,in0Max30028,in1Max30028,in0Con1048], outputs=Add23599)
w = model.get_layer('Den2283').get_weights() 
w[0] = np.array([[0.2395, 0.8087, 0.143], [0.7802, 0.1241, 0.4652]])
w[1] = np.array([0.3911, 0.6511, 0.3865])
model.get_layer('Den2283').set_weights(w) 
w = model.get_layer('GRU82115').get_weights() 
w[0] = np.array([[7, 6, 2, 4, 9, 10, 10, 3, 7]])
w[1] = np.array([[1, 8, 7, 3, 8, 9, 5, 9, 7], [8, 3, 10, 8, 9, 1, 3, 2, 8], [1, 5, 5, 10, 7, 3, 6, 2, 8]])
w[2] = np.array([[3, 10, 1, 4, 2, 2, 9, 6, 7], [10, 9, 6, 7, 8, 3, 3, 7, 10]])
model.get_layer('GRU82115').set_weights(w) 
w = model.get_layer('LST49972').get_weights() 
w[0] = np.array([[4, 4, 5, 5, 10, 10, 9, 10]])
w[1] = np.array([[7, 2, 10, 10, 8, 10, 5, 8], [3, 10, 7, 3, 1, 8, 4, 1]])
w[2] = np.array([3, 9, 7, 5, 8, 8, 4, 8])
model.get_layer('LST49972').set_weights(w) 
in0Max99400 = tf.constant([[[0.8427, 0.2313]]])
in1Max99400 = tf.constant([[[0.5777, 0.6856]]])
in0Con28101 = tf.constant([[[[0.1717], [0.8537], [0.6506]], [[0.2447], [0.9707], [0.8899]], [[0.7561], [0.0544], [0.2886]], [[0.6001], [0.1835], [0.6199]], [[0.651], [0.5249], [0.607]], [[0.0023], [0.2204], [0.9535]], [[0.1952], [0.198], [0.2244]], [[0.2771], [0.9187], [0.8791]], [[0.907], [0.1607], [0.3287]], [[0.853], [0.1591], [0.4647]]]])
in0Lay40036 = tf.constant([[[1.4847], [1.5973], [1.434]]])
in0Max97601 = tf.constant([[[0.6081, 0.8276]]])
in1Max97601 = tf.constant([[[0.493, 0.8559]]])
in0GRU82115 = tf.constant([[[9], [4], [10]]])
in0Con37495 = tf.constant([[0.8651, 0.9661, 0.306, 0.8731, 0.864, 0.2688, 0.9771, 0.1391]])
in0Con43673 = tf.constant([[[[0.8718], [0.994], [0.8036]], [[0.1241], [0.5729], [0.8715]], [[0.9695], [0.1554], [0.5023]], [[0.4657], [0.0659], [0.7535]], [[0.1853], [0.6848], [0.1766]], [[0.8783], [0.0065], [0.3229]], [[0.796], [0.5915], [0.8178]], [[0.0533], [0.853], [0.7647]], [[0.8438], [0.5503], [0.6687]], [[0.372], [0.436], [0.0268]]]])
in0Max70388 = tf.constant([[[[0.0308, 0.7859], [0.6723, 0.3115]], [[0.7039, 0.2169], [0.1929, 0.8649]]]])
in1Max70388 = tf.constant([[[[0.3225, 0.3526], [0.7194, 0.1467]], [[0.5782, 0.0065], [0.1331, 0.9508]]]])
in0Max30028 = tf.constant([[[[0.5316], [0.5286]], [[0.6294], [0.4256]]]])
in1Max30028 = tf.constant([[[[0.0467], [0.0912]], [[0.406], [0.8722]]]])
in0Con1048 = tf.constant([[[[0.0697], [0.8445]], [[0.5126], [0.6616]]]])
print (np.array2string(model.predict([in0Max99400,in1Max99400,in0Con28101,in0Lay40036,in0Max97601,in1Max97601,in0GRU82115,in0Con37495,in0Con43673,in0Max70388,in1Max70388,in0Max30028,in1Max30028,in0Con1048],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Add23599.png')

LMax99400 = maximum_layer([[[[0.8427, 0.2313]]], [[[0.5777, 0.6856]]]], Max99400), 
LDen2283 = dense_layer(Max99400, [[0.2395, 0.8087, 0.143], [0.7802, 0.1241, 0.4652]],[0.3911, 0.6511, 0.3865], Den2283), 
LRes47965 = reshape_layer(Den2283, [1, 3, 1], Res47965), 
LZer64578 = zero_padding2D_layer(Res47965, 9, 0, 0, 0, Zer64578), 
LCon28101 = concatenate_layer([Zer64578,[[[[0.1717], [0.8537], [0.6506]], [[0.2447], [0.9707], [0.8899]], [[0.7561], [0.0544], [0.2886]], [[0.6001], [0.1835], [0.6199]], [[0.651], [0.5249], [0.607]], [[0.0023], [0.2204], [0.9535]], [[0.1952], [0.198], [0.2244]], [[0.2771], [0.9187], [0.8791]], [[0.907], [0.1607], [0.3287]], [[0.853], [0.1591], [0.4647]]]]], 3, Con28101), 
LLay40036 = layer_normalization_layer([[[1.4847], [1.5973], [1.434]]], 2, 2.997676116714588, Lay40036), 
LZer4321 = zero_padding1D_layer(Lay40036, 2, 0, Zer4321), 
LMax97601 = maximum_layer([[[[0.6081, 0.8276]]], [[[0.493, 0.8559]]]], Max97601), 
LDot4517 = dot_layer(Zer4321,Max97601, 2, 1, Dot4517), 
LFla44210 = flatten_layer(Dot4517, Fla44210), 
LGRU82115 = gru_layer([[[9], [4], [10]]],[[7, 6, 2, 4, 9, 10, 10, 3, 7]],[[1, 8, 7, 3, 8, 9, 5, 9, 7], [8, 3, 10, 8, 9, 1, 3, 2, 8], [1, 5, 5, 10, 7, 3, 6, 2, 8]],[[3, 10, 1, 4, 2, 2, 9, 6, 7], [10, 9, 6, 7, 8, 3, 3, 7, 10]], true, GRU82115), 
LRes26091 = reshape_layer(GRU82115, [3, 1], Res26091), 
LLST49972 = lstm_layer(Res26091,[[4, 4, 5, 5, 10, 10, 9, 10]],[[7, 2, 10, 10, 8, 10, 5, 8], [3, 10, 7, 3, 1, 8, 4, 1]],[3, 9, 7, 5, 8, 8, 4, 8], LST49972), 
LCon37495 = concatenate_layer([LST49972,[[0.8651, 0.9661, 0.306, 0.8731, 0.864, 0.2688, 0.9771, 0.1391]]], 1, Con37495), 
LMul5469 = multiply_layer([Fla44210,Con37495], Mul5469), 
LRes72884 = reshape_layer(Mul5469, [10, 1], Res72884), 
LRes14639 = reshape_layer(Res72884, [10, 1, 1], Res14639), 
LZer1297 = zero_padding2D_layer(Res14639, 0, 0, 2, 0, Zer1297), 
LCon43673 = concatenate_layer([Zer1297,[[[[0.8718], [0.994], [0.8036]], [[0.1241], [0.5729], [0.8715]], [[0.9695], [0.1554], [0.5023]], [[0.4657], [0.0659], [0.7535]], [[0.1853], [0.6848], [0.1766]], [[0.8783], [0.0065], [0.3229]], [[0.796], [0.5915], [0.8178]], [[0.0533], [0.853], [0.7647]], [[0.8438], [0.5503], [0.6687]], [[0.372], [0.436], [0.0268]]]]], 3, Con43673), 
LMax70388 = maximum_layer([[[[[0.0308, 0.7859], [0.6723, 0.3115]], [[0.7039, 0.2169], [0.1929, 0.8649]]]], [[[[0.3225, 0.3526], [0.7194, 0.1467]], [[0.5782, 0.0065], [0.1331, 0.9508]]]]], Max70388), 
LMax30028 = maximum_layer([[[[[0.5316], [0.5286]], [[0.6294], [0.4256]]]], [[[[0.0467], [0.0912]], [[0.406], [0.8722]]]]], Max30028), 
LReL85206 = relu_layer(Max30028, 5.8838631508357375, 3.605295914904925, 4.783593638511972, ReL85206), 
LCon1048 = concatenate_layer([ReL85206,[[[[0.0697], [0.8445]], [[0.5126], [0.6616]]]]], 3, Con1048), 
LAve35424 = average_layer([Max70388,Con1048], Ave35424), 
LZer9944 = zero_padding2D_layer(Ave35424, 8, 0, 1, 0, Zer9944), 
LAdd10283 = add_layer([Con43673,Zer9944], Add10283), 
LAdd23599 = add_layer([Con28101,Add10283], Add23599), 
exec_layers([LMax99400,LDen2283,LRes47965,LZer64578,LCon28101,LLay40036,LZer4321,LMax97601,LDot4517,LFla44210,LGRU82115,LRes26091,LLST49972,LCon37495,LMul5469,LRes72884,LRes14639,LZer1297,LCon43673,LMax70388,LMax30028,LReL85206,LCon1048,LAve35424,LZer9944,LAdd10283,LAdd23599],["Max99400","Den2283","Res47965","Zer64578","Con28101","Lay40036","Zer4321","Max97601","Dot4517","Fla44210","GRU82115","Res26091","LST49972","Con37495","Mul5469","Res72884","Res14639","Zer1297","Con43673","Max70388","Max30028","ReL85206","Con1048","Ave35424","Zer9944","Add10283","Add23599"],Add23599,"Add23599")

Actual (Unparsed): [[[[0.0000000, 1.0435000], [0.0000000, 1.8477000], [0.0000000, 1.4542000]], [[0.0000000, 0.3688000], [0.0000000, 1.5436000], [0.0000000, 1.7614000]], [[0.0000000, 1.7256000], [0.0000000, 0.2098000], [0.0000000, 0.7909000]], [[0.0000000, 1.0658000], [0.0000000, 0.2494000], [0.0000000, 1.3734000]], [[0.0000000, 0.8363000], [0.0000000, 1.2097000], [0.0000000, 0.7836000]], [[0.0000000, 0.8806000], [0.0000000, 0.2269000], [0.0000000, 1.2764000]], [[0.0000000, 0.9912000], [0.0000000, 0.7895000], [0.0000000, 1.0422000]], [[0.0000000, 0.3304000], [0.0000000, 1.7717000], [0.0000000, 1.6438000]], [[0.0000000, 1.7508000], [-7.5035977, 1.1388000], [-7.3105556, 1.5754000]], [[1.1278318, 1.2250000], [-5.7189242, 0.9598500], [-6.1284685, 1.2977000]]]]

Expected (Unparsed): [[[[0,1.0435],[0,1.8477000000000001],[0.0,1.4542]],[[0,0.3688],[0,1.5436],[0.0,1.7614]],[[0,1.7256],[0,0.20980000000000001],[0.0,0.7908999999999999]],[[0,1.0657999999999999],[0,0.2494],[0.0,1.3734]],[[0,0.8363],[0,1.2097],[0.0,0.7836]],[[0,0.8805999999999999],[0,0.22690000000000002],[0.0,1.2764]],[[0,0.9912000000000001],[0,0.7895000000000001],[0.0,1.0422]],[[0,0.3304],[0,1.7717],[0.0,1.6438000000000001]],[[0,1.7508],[-7.503597647564471,1.1388],[-7.310555591436827,1.5754000000000001]],[[1.12783177,1.225],[-5.718924227325619,0.95985],[-6.128468533256162,1.2977]]]]

Actual:   [[[[0, 1.0435], [0, 1.8477], [0, 1.4542]], [[0, 0.3688], [0, 1.5436], [0, 1.7614]], [[0, 1.7256], [0, 0.2098], [0, 0.7909]], [[0, 1.0658], [0, 0.2494], [0, 1.3734]], [[0, 0.8363], [0, 1.2097], [0, 0.7836]], [[0, 0.8806], [0, 0.2269], [0, 1.2764]], [[0, 0.9912], [0, 0.7895], [0, 1.0422]], [[0, 0.3304], [0, 1.7717], [0, 1.6438]], [[0, 1.7508], [-7.5035, 1.1388], [-7.3105, 1.5754]], [[1.1279, 1.225], [-5.7189, 0.9599], [-6.1284, 1.2977]]]]

Expected: [[[[0, 1.0435], [0, 1.8478], [0, 1.4542]], [[0, 0.3688], [0, 1.5436], [0, 1.7614]], [[0, 1.7256], [0, 0.2099], [0, 0.7909]], [[0, 1.0658], [0, 0.2494], [0, 1.3734]], [[0, 0.8363], [0, 1.2097], [0, 0.7836]], [[0, 0.8806], [0, 0.227], [0, 1.2764]], [[0, 0.9913], [0, 0.7896], [0, 1.0422]], [[0, 0.3304], [0, 1.7717], [0, 1.6439]], [[0, 1.7508], [-7.5035, 1.1388], [-7.3105, 1.5755]], [[1.1279, 1.225], [-5.7189, 0.9599], [-6.1284, 1.2977]]]]