import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Max34072 = tf.keras.layers.Input(shape=([1, 1, 1]))
in1Max34072 = tf.keras.layers.Input(shape=([1, 1, 1]))

Max34072 = keras.layers.Maximum(name = 'Max34072', )([in0Max34072,in1Max34072])
Res18671 = keras.layers.Reshape((1, 1, 1, 1), name = 'Res18671', )(Max34072)
Up_17214 = keras.layers.UpSampling3D(size=(1, 2, 1), name = 'Up_17214', )(Res18671)
Bat12148 = keras.layers.BatchNormalization(axis=2, epsilon=0.44494667032712754,  name = 'Bat12148', )(Up_17214)
model = tf.keras.models.Model(inputs=[in0Max34072,in1Max34072], outputs=Bat12148)
w = model.get_layer('Bat12148').get_weights() 
w[0] = np.array([0.7722, 0.8356])
w[1] = np.array([0.4936, 0.2984])
w[2] = np.array([0.0368, 0.7822])
w[3] = np.array([0.8322, 0.0401])
model.get_layer('Bat12148').set_weights(w) 
in0Max34072 = tf.constant([[[[0.9851]]]])
in1Max34072 = tf.constant([[[[0.496]]]])
print (np.array2string(model.predict([in0Max34072,in1Max34072],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Bat12148.png')

LMax34072 = maximum_layer([[[[[0.9851]]]], [[[[0.496]]]]], Max34072), 
LRes18671 = reshape_layer(Max34072, [1, 1, 1, 1], Res18671), 
LUp_17214 = up_sampling3D_layer(Res18671, 1, 2, 1, Up_17214), 
LBat12148 = batch_normalization_layer(Up_17214, 2, 0.44494667032712754, [0.7722, 0.8356], [0.4936, 0.2984], [0.0368, 0.7822], [0.8322, 0.0401], Bat12148), 
exec_layers([LMax34072,LRes18671,LUp_17214,LBat12148],["Max34072","Res18671","Up_17214","Bat12148"],Bat12148,"Bat12148")

Actual (Unparsed): [[[[[1.1415704]], [[0.5418382]]]]]

Expected (Unparsed): [[[[[1.1415703893220095]],[[0.5418381923530041]]]]]

Actual:   [[[[[1.1416]], [[0.5419]]]]]

Expected: [[[[[1.1416]], [[0.5419]]]]]