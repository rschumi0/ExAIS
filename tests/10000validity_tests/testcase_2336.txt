import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Up_36703 = tf.keras.layers.Input(shape=([1, 4, 4]))
in0Min58518 = tf.keras.layers.Input(shape=([2, 2, 1, 1]))
in1Min58518 = tf.keras.layers.Input(shape=([2, 2, 1, 1]))
in0Glo54115 = tf.keras.layers.Input(shape=([1, 1, 2, 1]))
in0Con69762 = tf.keras.layers.Input(shape=([239]))

Up_36703 = keras.layers.UpSampling2D(size=(2, 2), name = 'Up_36703', )(in0Up_36703)
Thr27475 = keras.layers.ThresholdedReLU(theta=7.5870218132785805, name = 'Thr27475', )(Up_36703)
Res48435 = keras.layers.Reshape((2, 8, 4, 1), name = 'Res48435', )(Thr27475)
Zer87876 = keras.layers.ZeroPadding3D(padding=((1, 1), (1, 1), (1, 1)), name = 'Zer87876', )(Res48435)
Res36402 = keras.layers.Reshape((4, 10, 6), name = 'Res36402', )(Zer87876)
Res31293 = keras.layers.Reshape((4, 60), name = 'Res31293', )(Res36402)
Fla25383 = keras.layers.Flatten(name = 'Fla25383', )(Res31293)
Min58518 = keras.layers.Minimum(name = 'Min58518', )([in0Min58518,in1Min58518])
Res35968 = keras.layers.Reshape((2, 2, 1), name = 'Res35968', )(Min58518)
Res23852 = keras.layers.Reshape((2, 2), name = 'Res23852', )(Res35968)
LST19234 = keras.layers.LSTM(1,recurrent_activation='sigmoid', name = 'LST19234', )(Res23852)
Glo54115 = keras.layers.GlobalMaxPool3D(name = 'Glo54115', )(in0Glo54115)
Dot55820 = keras.layers.Dot(axes=(1, 1), name = 'Dot55820', )([LST19234,Glo54115])
Con69762 = keras.layers.Concatenate(axis=1, name = 'Con69762', )([Dot55820,in0Con69762])
Mul91793 = keras.layers.Multiply(name = 'Mul91793', )([Fla25383,Con69762])
Res44946 = keras.layers.Reshape((240, 1), name = 'Res44946', )(Mul91793)
Glo53811 = keras.layers.GlobalMaxPool1D(name = 'Glo53811', )(Res44946)
model = tf.keras.models.Model(inputs=[in0Up_36703,in0Min58518,in1Min58518,in0Glo54115,in0Con69762], outputs=Glo53811)
w = model.get_layer('LST19234').get_weights() 
w[0] = np.array([[8, 10, 6, 9], [7, 2, 2, 3]])
w[1] = np.array([[4, 6, 8, 4]])
w[2] = np.array([4, 3, 8, 10])
model.get_layer('LST19234').set_weights(w) 
in0Up_36703 = tf.constant([[[[1.2685, 1.6715, 1.0508, 1.9679], [1.4008, 1.6067, 1.5608, 1.714], [1.5579, 1.3153, 1.9784, 1.3209], [1.9222, 1.3098, 1.9311, 1.1137]]]])
in0Min58518 = tf.constant([[[[[0.5562]], [[0.7326]]], [[[0.5532]], [[0.2276]]]]])
in1Min58518 = tf.constant([[[[[0.1882]], [[0.7024]]], [[[0.2227]], [[0.5065]]]]])
in0Glo54115 = tf.constant([[[[[1.324], [1.1727]]]]])
in0Con69762 = tf.constant([[0.1613, 0.4586, 0.0085, 0.8855, 0.3981, 0.1218, 0.8799, 0.0327, 0.0958, 0.024, 0.2458, 0.8984, 0.2189, 0.7744, 0.406, 0.2146, 0.7329, 0.7329, 0.7428, 0.2539, 0.4875, 0.7002, 0.9226, 0.6864, 0.5912, 0.6479, 0.7764, 0.6514, 0.4343, 0.5195, 0.0165, 0.7841, 0.4632, 0.8107, 0.9171, 0.2598, 0.0519, 0.8521, 0.8364, 0.27, 0.3281, 0.4594, 0.9911, 0.7288, 0.612, 0.8891, 0.2072, 0.4226, 0.2021, 0.8468, 0.4652, 0.2636, 0.6076, 0.6291, 0.9352, 0.7834, 0.9613, 0.3491, 0.8527, 0.5141, 0.2784, 0.5962, 0.0262, 0.4408, 0.4223, 0.8088, 0.9867, 0.2853, 0.1306, 0.1045, 0.7892, 0.9791, 0.2164, 0.3008, 0.2604, 0.3202, 0.111, 0.3874, 0.049, 0.4723, 0.2412, 0.7655, 0.1798, 0.6614, 0.3457, 0.1561, 0.9396, 0.1518, 0.7264, 0.1981, 0.8285, 0.3441, 0.6036, 0.4057, 0.0014, 0.6252, 0.1974, 0.3368, 0.0906, 0.4241, 0.8942, 0.5334, 0.5551, 0.7776, 0.8726, 0.0413, 0.731, 0.5959, 0.8612, 0.0874, 0.5743, 0.7319, 0.2804, 0.8024, 0.6788, 0.9037, 0.8804, 0.7102, 0.5301, 0.4992, 0.1287, 0.0745, 0.1134, 0.2995, 0.0236, 0.0953, 0.9301, 0.1962, 0.7149, 0.3722, 0.1998, 0.0529, 0.2973, 0.0221, 0.5241, 0.9598, 0.4093, 0.3227, 0.5706, 0.2657, 0.8178, 0.786, 0.4, 0.9379, 0.9985, 0.1153, 0.9034, 0.9948, 0.8312, 0.5899, 0.4419, 0.984, 0.9227, 0.0389, 0.1905, 0.7391, 0.7399, 0.7135, 0.873, 0.9359, 0.6935, 0.0501, 0.5484, 0.2922, 0.5449, 0.5272, 0.8564, 0.6068, 0.0264, 0.5617, 0.6653, 0.2165, 0.3646, 0.6666, 0.3763, 0.8677, 0.4727, 0.8946, 0.2342, 0.4411, 0.9398, 0.9337, 0.8718, 0.4501, 0.5877, 0.0831, 0.9684, 0.7388, 0.2853, 0.7425, 0.3469, 0.3477, 0.9186, 0.9762, 0.0484, 0.0854, 0.8977, 0.1736, 0.9284, 0.9468, 0.3478, 0.8257, 0.0973, 0.1548, 0.1815, 0.9556, 0.095, 0.2627, 0.5775, 0.8022, 0.0311, 0.4553, 0.0003, 0.9392, 0.0495, 0.9127, 0.7895, 0.1313, 0.3841, 0.8585, 0.5167, 0.8803, 0.9584, 0.7044, 0.7664, 0.7905, 0.955, 0.5278, 0.7285, 0.5991, 0.0288, 0.9659, 0.009, 0.9586, 0.8716, 0.4979, 0.3633, 0.8304, 0.6486]])
print (np.array2string(model.predict([in0Up_36703,in0Min58518,in1Min58518,in0Glo54115,in0Con69762],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Glo53811.png')

LUp_36703 = up_sampling2D_layer([[[[1.2685, 1.6715, 1.0508, 1.9679], [1.4008, 1.6067, 1.5608, 1.714], [1.5579, 1.3153, 1.9784, 1.3209], [1.9222, 1.3098, 1.9311, 1.1137]]]], 2, 2, Up_36703), 
LThr27475 = thresholded_relu_layer(Up_36703, 7.5870218132785805, Thr27475), 
LRes48435 = reshape_layer(Thr27475, [2, 8, 4, 1], Res48435), 
LZer87876 = zero_padding3D_layer(Res48435, 1, 1, 1, 1, 1, 1, Zer87876), 
LRes36402 = reshape_layer(Zer87876, [4, 10, 6], Res36402), 
LRes31293 = reshape_layer(Res36402, [4, 60], Res31293), 
LFla25383 = flatten_layer(Res31293, Fla25383), 
LMin58518 = minimum_layer([[[[[[0.5562]], [[0.7326]]], [[[0.5532]], [[0.2276]]]]], [[[[[0.1882]], [[0.7024]]], [[[0.2227]], [[0.5065]]]]]], Min58518), 
LRes35968 = reshape_layer(Min58518, [2, 2, 1], Res35968), 
LRes23852 = reshape_layer(Res35968, [2, 2], Res23852), 
LLST19234 = lstm_layer(Res23852,[[8, 10, 6, 9], [7, 2, 2, 3]],[[4, 6, 8, 4]],[4, 3, 8, 10], LST19234), 
LGlo54115 = global_max_pool3D_layer([[[[[1.324], [1.1727]]]]], Glo54115), 
LDot55820 = dot_layer(LST19234,Glo54115, 1, 1, Dot55820), 
LCon69762 = concatenate_layer([Dot55820,[[0.1613, 0.4586, 0.0085, 0.8855, 0.3981, 0.1218, 0.8799, 0.0327, 0.0958, 0.024, 0.2458, 0.8984, 0.2189, 0.7744, 0.406, 0.2146, 0.7329, 0.7329, 0.7428, 0.2539, 0.4875, 0.7002, 0.9226, 0.6864, 0.5912, 0.6479, 0.7764, 0.6514, 0.4343, 0.5195, 0.0165, 0.7841, 0.4632, 0.8107, 0.9171, 0.2598, 0.0519, 0.8521, 0.8364, 0.27, 0.3281, 0.4594, 0.9911, 0.7288, 0.612, 0.8891, 0.2072, 0.4226, 0.2021, 0.8468, 0.4652, 0.2636, 0.6076, 0.6291, 0.9352, 0.7834, 0.9613, 0.3491, 0.8527, 0.5141, 0.2784, 0.5962, 0.0262, 0.4408, 0.4223, 0.8088, 0.9867, 0.2853, 0.1306, 0.1045, 0.7892, 0.9791, 0.2164, 0.3008, 0.2604, 0.3202, 0.111, 0.3874, 0.049, 0.4723, 0.2412, 0.7655, 0.1798, 0.6614, 0.3457, 0.1561, 0.9396, 0.1518, 0.7264, 0.1981, 0.8285, 0.3441, 0.6036, 0.4057, 0.0014, 0.6252, 0.1974, 0.3368, 0.0906, 0.4241, 0.8942, 0.5334, 0.5551, 0.7776, 0.8726, 0.0413, 0.731, 0.5959, 0.8612, 0.0874, 0.5743, 0.7319, 0.2804, 0.8024, 0.6788, 0.9037, 0.8804, 0.7102, 0.5301, 0.4992, 0.1287, 0.0745, 0.1134, 0.2995, 0.0236, 0.0953, 0.9301, 0.1962, 0.7149, 0.3722, 0.1998, 0.0529, 0.2973, 0.0221, 0.5241, 0.9598, 0.4093, 0.3227, 0.5706, 0.2657, 0.8178, 0.786, 0.4, 0.9379, 0.9985, 0.1153, 0.9034, 0.9948, 0.8312, 0.5899, 0.4419, 0.984, 0.9227, 0.0389, 0.1905, 0.7391, 0.7399, 0.7135, 0.873, 0.9359, 0.6935, 0.0501, 0.5484, 0.2922, 0.5449, 0.5272, 0.8564, 0.6068, 0.0264, 0.5617, 0.6653, 0.2165, 0.3646, 0.6666, 0.3763, 0.8677, 0.4727, 0.8946, 0.2342, 0.4411, 0.9398, 0.9337, 0.8718, 0.4501, 0.5877, 0.0831, 0.9684, 0.7388, 0.2853, 0.7425, 0.3469, 0.3477, 0.9186, 0.9762, 0.0484, 0.0854, 0.8977, 0.1736, 0.9284, 0.9468, 0.3478, 0.8257, 0.0973, 0.1548, 0.1815, 0.9556, 0.095, 0.2627, 0.5775, 0.8022, 0.0311, 0.4553, 0.0003, 0.9392, 0.0495, 0.9127, 0.7895, 0.1313, 0.3841, 0.8585, 0.5167, 0.8803, 0.9584, 0.7044, 0.7664, 0.7905, 0.955, 0.5278, 0.7285, 0.5991, 0.0288, 0.9659, 0.009, 0.9586, 0.8716, 0.4979, 0.3633, 0.8304, 0.6486]]], 1, Con69762), 
LMul91793 = multiply_layer([Fla25383,Con69762], Mul91793), 
LRes44946 = reshape_layer(Mul91793, [240, 1], Res44946), 
LGlo53811 = global_max_pool1D_layer(Res44946, Glo53811), 
exec_layers([LUp_36703,LThr27475,LRes48435,LZer87876,LRes36402,LRes31293,LFla25383,LMin58518,LRes35968,LRes23852,LLST19234,LGlo54115,LDot55820,LCon69762,LMul91793,LRes44946,LGlo53811],["Up_36703","Thr27475","Res48435","Zer87876","Res36402","Res31293","Fla25383","Min58518","Res35968","Res23852","LST19234","Glo54115","Dot55820","Con69762","Mul91793","Res44946","Glo53811"],Glo53811,"Glo53811")

Actual (Unparsed): [[0.0000000]]

Expected (Unparsed): [[0.0]]

Actual:   [[0]]

Expected: [[0]]