import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Min9832 = tf.keras.layers.Input(shape=([2, 1]))
in1Min9832 = tf.keras.layers.Input(shape=([2, 1]))
in0Ave25022 = tf.keras.layers.Input(shape=([2, 1]))
in1Ave25022 = tf.keras.layers.Input(shape=([2, 1]))
in0Con21565 = tf.keras.layers.Input(shape=([3, 2]))
in0Dot78820 = tf.keras.layers.Input(shape=([3, 3]))
in1Dot78820 = tf.keras.layers.Input(shape=([3, 3]))

Min9832 = keras.layers.Minimum(name = 'Min9832', )([in0Min9832,in1Min9832])
Ave25022 = keras.layers.Average(name = 'Ave25022', )([in0Ave25022,in1Ave25022])
Mul82032 = keras.layers.Multiply(name = 'Mul82032', )([Min9832,Ave25022])
Zer21516 = keras.layers.ZeroPadding1D(padding=((1, 0)), name = 'Zer21516', )(Mul82032)
Con21565 = keras.layers.Concatenate(axis=2, name = 'Con21565', )([Zer21516,in0Con21565])
Dot78820 = keras.layers.Dot(axes=(1, 2), name = 'Dot78820', )([in0Dot78820,in1Dot78820])
Mul34018 = keras.layers.Multiply(name = 'Mul34018', )([Con21565,Dot78820])
ReL34407 = keras.layers.ReLU(max_value=1.037623644768684, negative_slope=7.357998928399124, threshold=6.819118909970388, name = 'ReL34407', )(Mul34018)
model = tf.keras.models.Model(inputs=[in0Min9832,in1Min9832,in0Ave25022,in1Ave25022,in0Con21565,in0Dot78820,in1Dot78820], outputs=ReL34407)
in0Min9832 = tf.constant([[[0.6101], [0.0759]]])
in1Min9832 = tf.constant([[[0.3236], [0.7443]]])
in0Ave25022 = tf.constant([[[0.2035], [0.0202]]])
in1Ave25022 = tf.constant([[[0.1881], [0.6866]]])
in0Con21565 = tf.constant([[[0.0319, 0.9385], [0.5696, 0.028], [0.0784, 0.7491]]])
in0Dot78820 = tf.constant([[[0.1737, 0.6832, 0.3876], [0.5677, 0.3539, 0.2696], [0.3827, 0.705, 0.1326]]])
in1Dot78820 = tf.constant([[[0.3854, 0.671, 0.753], [0.5022, 0.377, 0.4199], [0.9988, 0.4533, 0.499]]])
print (np.array2string(model.predict([in0Min9832,in1Min9832,in0Ave25022,in1Ave25022,in0Con21565,in0Dot78820,in1Dot78820],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='ReL34407.png')

LMin9832 = minimum_layer([[[[0.6101], [0.0759]]], [[[0.3236], [0.7443]]]], Min9832), 
LAve25022 = average_layer([[[[0.2035], [0.0202]]], [[[0.1881], [0.6866]]]], Ave25022), 
LMul82032 = multiply_layer([Min9832,Ave25022], Mul82032), 
LZer21516 = zero_padding1D_layer(Mul82032, 1, 0, Zer21516), 
LCon21565 = concatenate_layer([Zer21516,[[[0.0319, 0.9385], [0.5696, 0.028], [0.0784, 0.7491]]]], 2, Con21565), 
LDot78820 = dot_layer([[[0.1737, 0.6832, 0.3876], [0.5677, 0.3539, 0.2696], [0.3827, 0.705, 0.1326]]], [[[0.3854, 0.671, 0.753], [0.5022, 0.377, 0.4199], [0.9988, 0.4533, 0.499]]], 1, 2, Dot78820), 
LMul34018 = multiply_layer([Con21565,Dot78820], Mul34018), 
LReL34407 = relu_layer(Mul34018, 1.037623644768684, 7.357998928399124, 6.819118909970388, ReL34407), 
exec_layers([LMin9832,LAve25022,LMul82032,LZer21516,LCon21565,LDot78820,LMul34018,LReL34407],["Min9832","Ave25022","Mul82032","Zer21516","Con21565","Dot78820","Mul34018","ReL34407"],ReL34407,"ReL34407")

Actual (Unparsed): [[[-50.1750696, -50.0666405, -45.8812597], [-49.6941108, -46.9372110, -49.9289538], [-50.0901773, -49.9720293, -47.0029184]]]

Expected (Unparsed): [[[-50.17506963218832,-50.06664047085512,-45.88125978009682],[-49.694110797910895,-46.93721091713039,-49.928953803499304],[-50.09017734792542,-49.97202933264226,-47.00291849821412]]]

Actual:   [[[-50.175, -50.0666, -45.8812], [-49.6941, -46.9372, -49.9289], [-50.0901, -49.972, -47.0029]]]

Expected: [[[-50.175, -50.0666, -45.8812], [-49.6941, -46.9372, -49.9289], [-50.0901, -49.972, -47.0029]]]