import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Add81568 = tf.keras.layers.Input(shape=([1, 1, 1, 1]))
in1Add81568 = tf.keras.layers.Input(shape=([1, 1, 1, 1]))
in0Con51353 = tf.keras.layers.Input(shape=([2, 2, 2, 1]))
in0Min44694 = tf.keras.layers.Input(shape=([2, 2, 2, 2]))
in1Min44694 = tf.keras.layers.Input(shape=([2, 2, 2, 2]))
in0Glo11619 = tf.keras.layers.Input(shape=([1, 2, 2, 2]))
in0Con90166 = tf.keras.layers.Input(shape=([2, 2, 1]))

Add81568 = keras.layers.Add(name = 'Add81568', )([in0Add81568,in1Add81568])
Mas71554 = keras.layers.Masking(mask_value=2, name = 'Mas71554', )(Add81568)
Zer24163 = keras.layers.ZeroPadding3D(padding=((1, 0), (1, 0), (1, 0)), name = 'Zer24163', )(Mas71554)
Con51353 = keras.layers.Concatenate(axis=4, name = 'Con51353', )([Zer24163,in0Con51353])
Min44694 = keras.layers.Minimum(name = 'Min44694', )([in0Min44694,in1Min44694])
Min43697 = keras.layers.Minimum(name = 'Min43697', )([Con51353,Min44694])
Res41184 = keras.layers.Reshape((2, 2, 4), name = 'Res41184', )(Min43697)
Glo11619 = keras.layers.GlobalMaxPool3D(name = 'Glo11619', )(in0Glo11619)
Res22872 = keras.layers.Reshape((2, 1), name = 'Res22872', )(Glo11619)
Res21044 = keras.layers.Reshape((2, 1, 1), name = 'Res21044', )(Res22872)
Sep51931 = keras.layers.SeparableConv2D(3, (2, 1),strides=(2, 2), padding='same', name = 'Sep51931', )(Res21044)
Zer4462 = keras.layers.ZeroPadding2D(padding=((1, 0), (1, 0)), name = 'Zer4462', )(Sep51931)
Con90166 = keras.layers.Concatenate(axis=3, name = 'Con90166', )([Zer4462,in0Con90166])
Max66521 = keras.layers.Maximum(name = 'Max66521', )([Res41184,Con90166])
Res85813 = keras.layers.Reshape((2, 8), name = 'Res85813', )(Max66521)
Up_1130 = keras.layers.UpSampling1D(size=(1), name = 'Up_1130', )(Res85813)
Res43477 = keras.layers.Reshape((2, 8, 1), name = 'Res43477', )(Up_1130)
Zer3983 = keras.layers.ZeroPadding2D(padding=((1, 1), (1, 1)), name = 'Zer3983', )(Res43477)
model = tf.keras.models.Model(inputs=[in0Add81568,in1Add81568,in0Con51353,in0Min44694,in1Min44694,in0Glo11619,in0Con90166], outputs=Zer3983)
w = model.get_layer('Sep51931').get_weights() 
w[0] = np.array([[[[0.8041]]], [[[0.858]]]])
w[1] = np.array([[[[0.1785, 0.0588, 0.5334]]]])
w[2] = np.array([0, 0, 0])
model.get_layer('Sep51931').set_weights(w) 
in0Add81568 = tf.constant([[[[[0.6818]]]]])
in1Add81568 = tf.constant([[[[[0.991]]]]])
in0Con51353 = tf.constant([[[[[0.103], [0.5926]], [[0.8976], [0.5185]]], [[[0.5646], [0.1146]], [[0.803], [0.9862]]]]])
in0Min44694 = tf.constant([[[[[0.9054, 0.7061], [0.6934, 0.6315]], [[0.7992, 0.3407], [0.8116, 0.6932]]], [[[0.344, 0.9882], [0.3612, 0.0958]], [[0.2049, 0.9947], [0.9491, 0.1592]]]]])
in1Min44694 = tf.constant([[[[[0.1833, 0.7035], [0.4524, 0.9993]], [[0.7333, 0.7461], [0.1682, 0.7514]]], [[[0.0665, 0.2292], [0.0035, 0.4725]], [[0.859, 0.7092], [0.3295, 0.6921]]]]])
in0Glo11619 = tf.constant([[[[[1.89, 1.6684], [1.2644, 1.3606]], [[1.1678, 1.19], [1.7044, 1.3797]]]]])
in0Con90166 = tf.constant([[[[0.5412], [0.7768]], [[0.7422], [0.1735]]]])
print (np.array2string(model.predict([in0Add81568,in1Add81568,in0Con51353,in0Min44694,in1Min44694,in0Glo11619,in0Con90166],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Zer3983.png')

LAdd81568 = add_layer([[[[[[0.6818]]]]], [[[[[0.991]]]]]], Add81568), 
LMas71554 = masking_layer(Add81568, 2, Mas71554), 
LZer24163 = zero_padding3D_layer(Mas71554, 1, 0, 1, 0, 1, 0, Zer24163), 
LCon51353 = concatenate_layer([Zer24163,[[[[[0.103], [0.5926]], [[0.8976], [0.5185]]], [[[0.5646], [0.1146]], [[0.803], [0.9862]]]]]], 4, Con51353), 
LMin44694 = minimum_layer([[[[[[0.9054, 0.7061], [0.6934, 0.6315]], [[0.7992, 0.3407], [0.8116, 0.6932]]], [[[0.344, 0.9882], [0.3612, 0.0958]], [[0.2049, 0.9947], [0.9491, 0.1592]]]]], [[[[[0.1833, 0.7035], [0.4524, 0.9993]], [[0.7333, 0.7461], [0.1682, 0.7514]]], [[[0.0665, 0.2292], [0.0035, 0.4725]], [[0.859, 0.7092], [0.3295, 0.6921]]]]]], Min44694), 
LMin43697 = minimum_layer([Con51353,Min44694], Min43697), 
LRes41184 = reshape_layer(Min43697, [2, 2, 4], Res41184), 
LGlo11619 = global_max_pool3D_layer([[[[[1.89, 1.6684], [1.2644, 1.3606]], [[1.1678, 1.19], [1.7044, 1.3797]]]]], Glo11619), 
LRes22872 = reshape_layer(Glo11619, [2, 1], Res22872), 
LRes21044 = reshape_layer(Res22872, [2, 1, 1], Res21044), 
LSep51931 = separable_conv2D_layer(Res21044, 2, 1,[[[[[0.8041]]], [[[0.858]]]],[[[[0.1785, 0.0588, 0.5334]]]]],[0, 0, 0], 2, 2, true, Sep51931), 
LZer4462 = zero_padding2D_layer(Sep51931, 1, 0, 1, 0, Zer4462), 
LCon90166 = concatenate_layer([Zer4462,[[[[0.5412], [0.7768]], [[0.7422], [0.1735]]]]], 3, Con90166), 
LMax66521 = maximum_layer([Res41184,Con90166], Max66521), 
LRes85813 = reshape_layer(Max66521, [2, 8], Res85813), 
LUp_1130 = up_sampling1D_layer(Res85813, 1, Up_1130), 
LRes43477 = reshape_layer(Up_1130, [2, 8, 1], Res43477), 
LZer3983 = zero_padding2D_layer(Res43477, 1, 1, 1, 1, Zer3983), 
exec_layers([LAdd81568,LMas71554,LZer24163,LCon51353,LMin44694,LMin43697,LRes41184,LGlo11619,LRes22872,LRes21044,LSep51931,LZer4462,LCon90166,LMax66521,LRes85813,LUp_1130,LRes43477,LZer3983],["Add81568","Mas71554","Zer24163","Con51353","Min44694","Min43697","Res41184","Glo11619","Res22872","Res21044","Sep51931","Zer4462","Con90166","Max66521","Res85813","Up_1130","Res43477","Zer3983"],Zer3983,"Zer3983")

Actual (Unparsed): [[[[0.0000000], [0.0000000], [0.0000000], [0.0000000], [0.0000000], [0.0000000], [0.0000000], [0.0000000], [0.0000000], [0.0000000]], [[0.0000000], [0.0000000], [0.1030000], [0.0000000], [0.5926000], [0.0000000], [0.3407000], [0.0000000], [0.7768000], [0.0000000]], [[0.0000000], [0.0000000], [0.2292000], [0.0000000], [0.7422000], [0.5267957], [0.7092000], [1.5741894], [0.1735000], [0.0000000]], [[0.0000000], [0.0000000], [0.0000000], [0.0000000], [0.0000000], [0.0000000], [0.0000000], [0.0000000], [0.0000000], [0.0000000]]]]

Expected (Unparsed): [[[[0],[0],[0],[0],[0],[0],[0],[0],[0],[0]],[[0],[0],[0.103],[0],[0.5926],[0],[0.3407],[0],[0.7768],[0]],[[0],[0],[0.2292],[0],[0.7422],[0.5267956617],[0.7092],[1.5741893890799998],[0.1735],[0]],[[0],[0],[0],[0],[0],[0],[0],[0],[0],[0]]]]

Actual:   [[[[0], [0], [0], [0], [0], [0], [0], [0], [0], [0]], [[0], [0], [0.103], [0], [0.5926], [0], [0.3407], [0], [0.7768], [0]], [[0], [0], [0.2292], [0], [0.7422], [0.5268], [0.7092], [1.5742], [0.1735], [0]], [[0], [0], [0], [0], [0], [0], [0], [0], [0], [0]]]]

Expected: [[[[0], [0], [0], [0], [0], [0], [0], [0], [0], [0]], [[0], [0], [0.103], [0], [0.5926], [0], [0.3407], [0], [0.7768], [0]], [[0], [0], [0.2292], [0], [0.7422], [0.5268], [0.7092], [1.5742], [0.1735], [0]], [[0], [0], [0], [0], [0], [0], [0], [0], [0], [0]]]]