import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Min63615 = tf.keras.layers.Input(shape=([2, 2]))
in1Min63615 = tf.keras.layers.Input(shape=([2, 2]))
in0Min73711 = tf.keras.layers.Input(shape=([1, 2, 1, 1]))
in1Min73711 = tf.keras.layers.Input(shape=([1, 2, 1, 1]))

Min63615 = keras.layers.Minimum(name = 'Min63615', )([in0Min63615,in1Min63615])
PRe2970 = keras.layers.PReLU(name = 'PRe2970', )(Min63615)
Min73711 = keras.layers.Minimum(name = 'Min73711', )([in0Min73711,in1Min73711])
Res11947 = keras.layers.Reshape((1, 2, 1), name = 'Res11947', )(Min73711)
Res84453 = keras.layers.Reshape((1, 2), name = 'Res84453', )(Res11947)
Zer17783 = keras.layers.ZeroPadding1D(padding=((1, 0)), name = 'Zer17783', )(Res84453)
Dot75765 = keras.layers.Dot(axes=(2, 2), name = 'Dot75765', )([PRe2970,Zer17783])
Res28799 = keras.layers.Reshape((2, 2, 1), name = 'Res28799', )(Dot75765)
Con69097 = keras.layers.Conv2DTranspose(3, (2, 2),strides=(1, 1), padding='same', name = 'Con69097', )(Res28799)
Res84949 = keras.layers.Reshape((2, 2, 3, 1), name = 'Res84949', )(Con69097)
Con57992 = keras.layers.Conv3D(2, (2, 2, 3),strides=(1, 1, 1), padding='same', dilation_rate=(1, 1, 1), name = 'Con57992', )(Res84949)
PRe57528 = keras.layers.PReLU(name = 'PRe57528', )(Con57992)
model = tf.keras.models.Model(inputs=[in0Min63615,in1Min63615,in0Min73711,in1Min73711], outputs=PRe57528)
w = model.get_layer('PRe2970').get_weights() 
w[0] = np.array([[0.7271, 0.2014], [0.2975, 0.7053]])
model.get_layer('PRe2970').set_weights(w) 
w = model.get_layer('Con69097').get_weights() 
w[0] = np.array([[[[0.3595], [0.13], [0.6524]], [[0.3196], [0.4253], [0.738]]], [[[0.4087], [0.7793], [0.4946]], [[0.0131], [0.4101], [0.1621]]]])
w[1] = np.array([0, 0, 0])
model.get_layer('Con69097').set_weights(w) 
w = model.get_layer('Con57992').get_weights() 
w[0] = np.array([[[[[0.8409, 0.2052]], [[0.0692, 0.6242]], [[0.4401, 0.9738]]], [[[0.5422, 0.6985]], [[0.1736, 0.5759]], [[0.2501, 0.4738]]]], [[[[0.1406, 0.7775]], [[0.8989, 0.2247]], [[0.3056, 0.4971]]], [[[0.2917, 0.1462]], [[0.9276, 0.8008]], [[0.1151, 0.9203]]]]])
w[1] = np.array([0, 0])
model.get_layer('Con57992').set_weights(w) 
w = model.get_layer('PRe57528').get_weights() 
w[0] = np.array([[[[0.6792, 0.9237], [0.1516, 0.434], [0.9621, 0.7072]], [[0.4598, 0.4437], [0.5052, 0.9685], [0.7951, 0.8668]]], [[[0.4565, 0.2219], [0.2973, 0.5585], [0.8241, 0.865]], [[0.2642, 0.8835], [0.3058, 0.4082], [0.6535, 0.128]]]])
model.get_layer('PRe57528').set_weights(w) 
in0Min63615 = tf.constant([[[0.7717, 0.2426], [0.8722, 0.6544]]])
in1Min63615 = tf.constant([[[0.4614, 0.9287], [0.8501, 0.2157]]])
in0Min73711 = tf.constant([[[[[0.1346]], [[0.3178]]]]])
in1Min73711 = tf.constant([[[[[0.9856]], [[0.2624]]]]])
print (np.array2string(model.predict([in0Min63615,in1Min63615,in0Min73711,in1Min73711],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='PRe57528.png')

LMin63615 = minimum_layer([[[[0.7717, 0.2426], [0.8722, 0.6544]]], [[[0.4614, 0.9287], [0.8501, 0.2157]]]], Min63615), 
LPRe2970 = prelu_layer(Min63615, [[0.7271, 0.2014], [0.2975, 0.7053]], PRe2970), 
LMin73711 = minimum_layer([[[[[[0.1346]], [[0.3178]]]]], [[[[[0.9856]], [[0.2624]]]]]], Min73711), 
LRes11947 = reshape_layer(Min73711, [1, 2, 1], Res11947), 
LRes84453 = reshape_layer(Res11947, [1, 2], Res84453), 
LZer17783 = zero_padding1D_layer(Res84453, 1, 0, Zer17783), 
LDot75765 = dot_layer(PRe2970,Zer17783, 2, 2, Dot75765), 
LRes28799 = reshape_layer(Dot75765, [2, 2, 1], Res28799), 
LCon69097 = conv2D_transpose_layer(Res28799, 2, 2,[[[[0.3595], [0.13], [0.6524]], [[0.3196], [0.4253], [0.738]]], [[[0.4087], [0.7793], [0.4946]], [[0.0131], [0.4101], [0.1621]]]],[0, 0, 0], 1, 1, true, Con69097), 
LRes84949 = reshape_layer(Con69097, [2, 2, 3, 1], Res84949), 
LCon57992 = conv3D_layer(Res84949, 2, 2, 3,[[[[[0.8409, 0.2052]], [[0.0692, 0.6242]], [[0.4401, 0.9738]]], [[[0.5422, 0.6985]], [[0.1736, 0.5759]], [[0.2501, 0.4738]]]], [[[[0.1406, 0.7775]], [[0.8989, 0.2247]], [[0.3056, 0.4971]]], [[[0.2917, 0.1462]], [[0.9276, 0.8008]], [[0.1151, 0.9203]]]]],[0, 0], 1, 1, 1, true, 1, 1, 1, Con57992), 
LPRe57528 = prelu_layer(Con57992, [[[[0.6792, 0.9237], [0.1516, 0.434], [0.9621, 0.7072]], [[0.4598, 0.4437], [0.5052, 0.9685], [0.7951, 0.8668]]], [[[0.4565, 0.2219], [0.2973, 0.5585], [0.8241, 0.865]], [[0.2642, 0.8835], [0.3058, 0.4082], [0.6535, 0.128]]]], PRe57528), 
exec_layers([LMin63615,LPRe2970,LMin73711,LRes11947,LRes84453,LZer17783,LDot75765,LRes28799,LCon69097,LRes84949,LCon57992,LPRe57528],["Min63615","PRe2970","Min73711","Res11947","Res84453","Zer17783","Dot75765","Res28799","Con69097","Res84949","Con57992","PRe57528"],PRe57528,"PRe57528")

Actual (Unparsed): [[[[[0.1304866, 0.2348363], [0.2123361, 0.3525890], [0.2193781, 0.2154113]], [[0.1485389, 0.1292778], [0.2523203, 0.3005491], [0.1925402, 0.1871033]]], [[[0.0496683, 0.1219784], [0.1255401, 0.2304301], [0.0953619, 0.1840661]], [[0.0607290, 0.1875505], [0.1797227, 0.2674419], [0.1131351, 0.1331453]]]]]

Expected (Unparsed): [[[[[0.130486646146258,0.234836309059748],[0.2123360856934322,0.35258904510647526],[0.2193781466528324,0.2154113419692888]],[[0.1485388646685658,0.1292777615569586],[0.25232030023500684,0.3005490784931658],[0.19254020664977842,0.1871032880356252]]],[[[0.049668309906418004,0.1219784067637126],[0.125540082380254,0.2304301161762558],[0.0953618665092632,0.1840661333427716]],[[0.060729000674335606,0.1875505409885644],[0.17972266814503862,0.2674418571766032],[0.11313512033644041,0.1331452718569136]]]]]

Actual:   [[[[[0.1305, 0.2349], [0.2124, 0.3526], [0.2194, 0.2155]], [[0.1486, 0.1293], [0.2524, 0.3006], [0.1926, 0.1872]]], [[[0.0497, 0.122], [0.1256, 0.2305], [0.0954, 0.1841]], [[0.0608, 0.1876], [0.1798, 0.2675], [0.1132, 0.1332]]]]]

Expected: [[[[[0.1305, 0.2349], [0.2124, 0.3526], [0.2194, 0.2155]], [[0.1486, 0.1293], [0.2524, 0.3006], [0.1926, 0.1872]]], [[[0.0497, 0.122], [0.1256, 0.2305], [0.0954, 0.1841]], [[0.0608, 0.1876], [0.1798, 0.2675], [0.1132, 0.1332]]]]]