import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0GRU11974 = tf.keras.layers.Input(shape=([1, 1]))

GRU11974 = keras.layers.GRU(3,reset_after=False, recurrent_activation='sigmoid', name = 'GRU11974', )(in0GRU11974)
Res28461 = keras.layers.Reshape((3, 1), name = 'Res28461', )(GRU11974)
Con80353 = keras.layers.Conv1D(4, (2),strides=(1), padding='same', dilation_rate=(1), name = 'Con80353', )(Res28461)
model = tf.keras.models.Model(inputs=[in0GRU11974], outputs=Con80353)
w = model.get_layer('GRU11974').get_weights() 
w[0] = np.array([[9, 8, 1, 8, 8, 9, 9, 6, 9]])
w[1] = np.array([[4, 6, 8, 4, 7, 2, 4, 5, 4], [4, 8, 1, 3, 8, 1, 9, 3, 7], [7, 9, 10, 2, 5, 2, 10, 9, 8]])
w[2] = np.array([5, 5, 8, 7, 4, 1, 1, 1, 6])
model.get_layer('GRU11974').set_weights(w) 
w = model.get_layer('Con80353').get_weights() 
w[0] = np.array([[[0.0668, 0.0631, 0.3551, 0.3307]], [[0.5871, 0.1287, 0.2189, 0.7626]]])
w[1] = np.array([0, 0, 0, 0])
model.get_layer('Con80353').set_weights(w) 
in0GRU11974 = tf.constant([[[9]]])
print (np.array2string(model.predict([in0GRU11974],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Con80353.png')

LGRU11974 = gru_layer([[[9]]],[[9, 8, 1, 8, 8, 9, 9, 6, 9]],[[4, 6, 8, 4, 7, 2, 4, 5, 4], [4, 8, 1, 3, 8, 1, 9, 3, 7], [7, 9, 10, 2, 5, 2, 10, 9, 8]],[5, 5, 8, 7, 4, 1, 1, 1, 6], false, GRU11974), 
LRes28461 = reshape_layer(GRU11974, [3, 1], Res28461), 
LCon80353 = conv1D_layer(Res28461, 2,[[[0.0668, 0.0631, 0.3551, 0.3307]], [[0.5871, 0.1287, 0.2189, 0.7626]]],[0, 0, 0, 0], 1, true, 1, Con80353), 
exec_layers([LGRU11974,LRes28461,LCon80353],["GRU11974","Res28461","Con80353"],Con80353,"Con80353")

Actual (Unparsed): [[[0.0000000, 0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000, 0.0000000]]]

Expected (Unparsed): [[[0.0,0.0,0.0,0.0],[2.4305573411431688e-8,5.328099638990392e-9,9.062323317599043e-9,3.157116382823677e-8],[2.765478289701306e-9,2.612300600002282e-9,1.4700918273546915e-8,1.3690773509045239e-8]]]

Actual:   [[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]]

Expected: [[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]]