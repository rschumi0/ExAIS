import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Dot80003 = tf.keras.layers.Input(shape=([2]))
in1Dot80003 = tf.keras.layers.Input(shape=([2]))
in0Con11021 = tf.keras.layers.Input(shape=([3, 2]))
in0Sub64543 = tf.keras.layers.Input(shape=([3, 3, 3]))
in1Sub64543 = tf.keras.layers.Input(shape=([3, 3, 3]))
in0Lay62980 = tf.keras.layers.Input(shape=([4, 3]))

Dot80003 = keras.layers.Dot(axes=(1, 1), name = 'Dot80003', )([in0Dot80003,in1Dot80003])
Res67749 = keras.layers.Reshape((1, 1), name = 'Res67749', )(Dot80003)
Zer68036 = keras.layers.ZeroPadding1D(padding=((2, 0)), name = 'Zer68036', )(Res67749)
Con11021 = keras.layers.Concatenate(axis=2, name = 'Con11021', )([Zer68036,in0Con11021])
Sub64543 = keras.layers.Subtract(name = 'Sub64543', )([in0Sub64543,in1Sub64543])
Res10720 = keras.layers.Reshape((3, 9), name = 'Res10720', )(Sub64543)
Sep59837 = keras.layers.SeparableConv1D(3, (1),strides=(1), padding='valid', name = 'Sep59837', )(Res10720)
Add63117 = keras.layers.Add(name = 'Add63117', )([Con11021,Sep59837])
Zer57381 = keras.layers.ZeroPadding1D(padding=((1, 0)), name = 'Zer57381', )(Add63117)
Lay62980 = keras.layers.LayerNormalization(axis=2, epsilon=1.0495995544502783, name = 'Lay62980', )(in0Lay62980)
Mul49365 = keras.layers.Multiply(name = 'Mul49365', )([Zer57381,Lay62980])
model = tf.keras.models.Model(inputs=[in0Dot80003,in1Dot80003,in0Con11021,in0Sub64543,in1Sub64543,in0Lay62980], outputs=Mul49365)
w = model.get_layer('Sep59837').get_weights() 
w[0] = np.array([[[0.7398], [0.7896], [0.8665], [0.6719], [0.0628], [0.5343], [0.9614], [0.37], [0.1801]]])
w[1] = np.array([[[0.5632, 0.6129, 0.9598], [0.209, 0.6572, 0.1825], [0.3112, 0.9455, 0.0375], [0.3604, 0.6062, 0.181], [0.0101, 0.4751, 0.7499], [0.9209, 0.4178, 0.2694], [0.003, 0.326, 0.1158], [0.8189, 0.5877, 0.0942], [0.6354, 0.9141, 0.6971]]])
w[2] = np.array([0, 0, 0])
model.get_layer('Sep59837').set_weights(w) 
in0Dot80003 = tf.constant([[0.6221, 0.3574]])
in1Dot80003 = tf.constant([[0.9483, 0.0763]])
in0Con11021 = tf.constant([[[0.1978, 0.8255], [0.8114, 0.4348], [0.9274, 0.7844]]])
in0Sub64543 = tf.constant([[[[0.6726, 0.9326, 0.2124], [0.1317, 0.1011, 0.9734], [0.4383, 0.9733, 0.206]], [[0.7838, 0.0302, 0.4407], [0.2672, 0.4312, 0.6461], [0.1389, 0.1671, 0.5472]], [[0.3652, 0.2263, 0.2505], [0.7857, 0.3385, 0.2321], [0.8044, 0.2609, 0.3458]]]])
in1Sub64543 = tf.constant([[[[0.0419, 0.1971, 0.8005], [0.6092, 0.5892, 0.1553], [0.386, 0.4138, 0.7182]], [[0.8761, 0.7264, 0.5761], [0.1511, 0.6715, 0.5118], [0.5622, 0.4796, 0.6288]], [[0.5282, 0.1088, 0.6294], [0.3277, 0.4805, 0.5288], [0.3012, 0.006, 0.0645]]]])
in0Lay62980 = tf.constant([[[1.494, 1.4767, 1.6868], [1.5603, 1.9758, 1.1984], [1.6909, 1.9737, 1.2027], [1.4805, 1.6436, 1.5457]]])
print (np.array2string(model.predict([in0Dot80003,in1Dot80003,in0Con11021,in0Sub64543,in1Sub64543,in0Lay62980],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Mul49365.png')

LDot80003 = dot_layer([[0.6221, 0.3574]], [[0.9483, 0.0763]], 1, 1, Dot80003), 
LRes67749 = reshape_layer(Dot80003, [1, 1], Res67749), 
LZer68036 = zero_padding1D_layer(Res67749, 2, 0, Zer68036), 
LCon11021 = concatenate_layer([Zer68036,[[[0.1978, 0.8255], [0.8114, 0.4348], [0.9274, 0.7844]]]], 2, Con11021), 
LSub64543 = subtract_layer([[[[0.6726, 0.9326, 0.2124], [0.1317, 0.1011, 0.9734], [0.4383, 0.9733, 0.206]], [[0.7838, 0.0302, 0.4407], [0.2672, 0.4312, 0.6461], [0.1389, 0.1671, 0.5472]], [[0.3652, 0.2263, 0.2505], [0.7857, 0.3385, 0.2321], [0.8044, 0.2609, 0.3458]]]], [[[[0.0419, 0.1971, 0.8005], [0.6092, 0.5892, 0.1553], [0.386, 0.4138, 0.7182]], [[0.8761, 0.7264, 0.5761], [0.1511, 0.6715, 0.5118], [0.5622, 0.4796, 0.6288]], [[0.5282, 0.1088, 0.6294], [0.3277, 0.4805, 0.5288], [0.3012, 0.006, 0.0645]]]], Sub64543), 
LRes10720 = reshape_layer(Sub64543, [3, 9], Res10720), 
LSep59837 = separable_conv1D_layer(Res10720, 1,[[[[0.7398], [0.7896], [0.8665], [0.6719], [0.0628], [0.5343], [0.9614], [0.37], [0.1801]]],[[[0.5632, 0.6129, 0.9598], [0.209, 0.6572, 0.1825], [0.3112, 0.9455, 0.0375], [0.3604, 0.6062, 0.181], [0.0101, 0.4751, 0.7499], [0.9209, 0.4178, 0.2694], [0.003, 0.326, 0.1158], [0.8189, 0.5877, 0.0942], [0.6354, 0.9141, 0.6971]]]],[0, 0, 0], 1, false, Sep59837), 
LAdd63117 = add_layer([Con11021,Sep59837], Add63117), 
LZer57381 = zero_padding1D_layer(Add63117, 1, 0, Zer57381), 
LLay62980 = layer_normalization_layer([[[1.494, 1.4767, 1.6868], [1.5603, 1.9758, 1.1984], [1.6909, 1.9737, 1.2027], [1.4805, 1.6436, 1.5457]]], 2, 1.0495995544502783, Lay62980), 
LMul49365 = multiply_layer([Zer57381,Lay62980], Mul49365), 
exec_layers([LDot80003,LRes67749,LZer68036,LCon11021,LSub64543,LRes10720,LSep59837,LAdd63117,LZer57381,LLay62980,LMul49365],["Dot80003","Res67749","Zer68036","Con11021","Sub64543","Res10720","Sep59837","Add63117","Zer57381","Lay62980","Mul49365"],Mul49365,"Mul49365")

Actual (Unparsed): [[[-0.0000000, -0.0000000, 0.0000000], [-0.0103814, 0.1523395, -0.4807885], [-0.0128312, 0.0502206, -0.0854484], [-0.0401898, 0.0830070, -0.0082789]]]

Expected (Unparsed): [[[-0.0,-0.0,0.0],[-0.01038140904478815,0.15233946458968847,-0.4807885463186331],[-0.012831230912283168,0.05022061743343055,-0.08544837506292557],[-0.040189825902485564,0.08300695489959302,-0.008278933185638772]]]

Actual:   [[[-0, -0, 0], [-0.0103, 0.1524, -0.4807], [-0.0128, 0.0503, -0.0854], [-0.0401, 0.0831, -0.0082]]]

Expected: [[[-0, -0, 0], [-0.0103, 0.1524, -0.4807], [-0.0128, 0.0503, -0.0854], [-0.0401, 0.0831, -0.0082]]]