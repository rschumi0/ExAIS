import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Lea91650 = tf.keras.layers.Input(shape=([2, 2]))

Lea91650 = keras.layers.LeakyReLU(alpha=4.564180539190547, name = 'Lea91650', input_shape=(2, 2))(in0Lea91650)
Res69647 = keras.layers.Reshape((2, 2, 1), name = 'Res69647', )(Lea91650)
Ave6696 = keras.layers.AveragePooling2D(pool_size=(2, 1), strides=(1, 1), padding='same', name = 'Ave6696', )(Res69647)
Lay78878 = keras.layers.LayerNormalization(axis=3, epsilon=2.3998060656830353, name = 'Lay78878', )(Ave6696)
Glo4351 = keras.layers.GlobalAveragePooling2D(name = 'Glo4351', )(Lay78878)
model = tf.keras.models.Model(inputs=[in0Lea91650], outputs=Glo4351)
in0Lea91650 = tf.constant([[[0.4548, 0.782], [0.6708, 0.638]]])
print (np.array2string(model.predict([in0Lea91650],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Glo4351.png')

LLea91650 = leaky_relu_layer([[[0.4548, 0.782], [0.6708, 0.638]]], 4.564180539190547, Lea91650), 
LRes69647 = reshape_layer(Lea91650, [2, 2, 1], Res69647), 
LAve6696 = average_pooling2D_layer(Res69647, 2, 1, 1, 1, true, Ave6696), 
LLay78878 = layer_normalization_layer(Ave6696, 3, 2.3998060656830353, Lay78878), 
LGlo4351 = global_average_pooling2D_layer(Lay78878, Glo4351), 
exec_layers([LLea91650,LRes69647,LAve6696,LLay78878,LGlo4351],["Lea91650","Res69647","Ave6696","Lay78878","Glo4351"],Glo4351,"Glo4351")

Actual (Unparsed): [[0.0000000]]

Expected (Unparsed): [[0.0]]

Actual:   [[0]]

Expected: [[0]]