import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Ave83057 = tf.keras.layers.Input(shape=([1, 1]))
in1Ave83057 = tf.keras.layers.Input(shape=([1, 1]))

Ave83057 = keras.layers.Average(name = 'Ave83057', )([in0Ave83057,in1Ave83057])
Res55649 = keras.layers.Reshape((1, 1, 1), name = 'Res55649', )(Ave83057)
Dep52905 = keras.layers.DepthwiseConv2D((1, 1),strides=(1, 1), padding='valid', name = 'Dep52905', )(Res55649)
model = tf.keras.models.Model(inputs=[in0Ave83057,in1Ave83057], outputs=Dep52905)
w = model.get_layer('Dep52905').get_weights() 
w[0] = np.array([[[[0.8851]]]])
w[1] = np.array([0])
model.get_layer('Dep52905').set_weights(w) 
in0Ave83057 = tf.constant([[[0.0275]]])
in1Ave83057 = tf.constant([[[0.1782]]])
print (np.array2string(model.predict([in0Ave83057,in1Ave83057],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Dep52905.png')

LAve83057 = average_layer([[[[0.0275]]], [[[0.1782]]]], Ave83057), 
LRes55649 = reshape_layer(Ave83057, [1, 1, 1], Res55649), 
LDep52905 = depthwise_conv2D_layer(Res55649, 1, 1,[[[[0.8851]]]],[0], 1, 1, false, Dep52905), 
exec_layers([LAve83057,LRes55649,LDep52905],["Ave83057","Res55649","Dep52905"],Dep52905,"Dep52905")

Actual (Unparsed): [[[[0.0910325]]]]

Expected (Unparsed): [[[[0.091032535]]]]

Actual:   [[[[0.0911]]]]

Expected: [[[[0.0911]]]]