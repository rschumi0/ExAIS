import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Min73998 = tf.keras.layers.Input(shape=([1, 1]))
in1Min73998 = tf.keras.layers.Input(shape=([1, 1]))
in0Con51886 = tf.keras.layers.Input(shape=([2, 2, 1, 1]))
in0Thr71314 = tf.keras.layers.Input(shape=([2, 2, 1, 2]))
in0Lay28431 = tf.keras.layers.Input(shape=([4, 4]))

Min73998 = keras.layers.Minimum(name = 'Min73998', )([in0Min73998,in1Min73998])
Res56280 = keras.layers.Reshape((1, 1, 1), name = 'Res56280', )(Min73998)
Res41223 = keras.layers.Reshape((1, 1, 1, 1), name = 'Res41223', )(Res56280)
Zer58039 = keras.layers.ZeroPadding3D(padding=((1, 0), (1, 0), (0, 0)), name = 'Zer58039', )(Res41223)
Con51886 = keras.layers.Concatenate(axis=4, name = 'Con51886', )([Zer58039,in0Con51886])
Thr71314 = keras.layers.ThresholdedReLU(theta=3.3965664935177435, name = 'Thr71314', input_shape=(2, 2, 1, 2))(in0Thr71314)
Min19538 = keras.layers.Minimum(name = 'Min19538', )([Con51886,Thr71314])
Res42104 = keras.layers.Reshape((2, 2, 2), name = 'Res42104', )(Min19538)
Res11543 = keras.layers.Reshape((2, 4), name = 'Res11543', )(Res42104)
Zer51870 = keras.layers.ZeroPadding1D(padding=((2, 0)), name = 'Zer51870', )(Res11543)
Lay28431 = keras.layers.LayerNormalization(axis=1, epsilon=1.7113206442907234, name = 'Lay28431', )(in0Lay28431)
Ave66764 = keras.layers.Average(name = 'Ave66764', )([Zer51870,Lay28431])
Sep93124 = keras.layers.SeparableConv1D(4, (4),strides=(1), padding='valid', name = 'Sep93124', )(Ave66764)
ReL64088 = keras.layers.ReLU(max_value=0.781201064446307, negative_slope=4.81600829482121, threshold=3.161289256204279, name = 'ReL64088', )(Sep93124)
model = tf.keras.models.Model(inputs=[in0Min73998,in1Min73998,in0Con51886,in0Thr71314,in0Lay28431], outputs=ReL64088)
w = model.get_layer('Sep93124').get_weights() 
w[0] = np.array([[[0.5302], [0.9831], [0.091], [0.1746]], [[0.7094], [0.994], [0.5306], [0.3489]], [[0.2984], [0.0603], [0.6143], [0.3497]], [[0.8248], [0.3428], [0.6068], [0.9368]]])
w[1] = np.array([[[0.1847, 0.0618, 0.1373, 0.6514], [0.0371, 0.1831, 0.9444, 0.233], [0.8739, 0.4668, 0.238, 0.3026], [0.1934, 0.41, 0.0971, 0.5717]]])
w[2] = np.array([0, 0, 0, 0])
model.get_layer('Sep93124').set_weights(w) 
in0Min73998 = tf.constant([[[0.1829]]])
in1Min73998 = tf.constant([[[0.1825]]])
in0Con51886 = tf.constant([[[[[0.8789]], [[0.165]]], [[[0.1421]], [[0.6849]]]]])
in0Thr71314 = tf.constant([[[[[0.8684, 0.8883]], [[0.0735, 0.8215]]], [[[0.3221, 0.4268]], [[0.1178, 0.3452]]]]])
in0Lay28431 = tf.constant([[[1.4276, 1.5112, 1.4024, 1.8221], [1.8629, 1.111, 1.421, 1.3724], [1.2317, 1.169, 1.3534, 1.3547], [1.912, 1.998, 1.5796, 1.1823]]])
print (np.array2string(model.predict([in0Min73998,in1Min73998,in0Con51886,in0Thr71314,in0Lay28431],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='ReL64088.png')

LMin73998 = minimum_layer([[[[0.1829]]], [[[0.1825]]]], Min73998), 
LRes56280 = reshape_layer(Min73998, [1, 1, 1], Res56280), 
LRes41223 = reshape_layer(Res56280, [1, 1, 1, 1], Res41223), 
LZer58039 = zero_padding3D_layer(Res41223, 1, 0, 1, 0, 0, 0, Zer58039), 
LCon51886 = concatenate_layer([Zer58039,[[[[[0.8789]], [[0.165]]], [[[0.1421]], [[0.6849]]]]]], 4, Con51886), 
LThr71314 = thresholded_relu_layer([[[[[0.8684, 0.8883]], [[0.0735, 0.8215]]], [[[0.3221, 0.4268]], [[0.1178, 0.3452]]]]], 3.3965664935177435, Thr71314), 
LMin19538 = minimum_layer([Con51886,Thr71314], Min19538), 
LRes42104 = reshape_layer(Min19538, [2, 2, 2], Res42104), 
LRes11543 = reshape_layer(Res42104, [2, 4], Res11543), 
LZer51870 = zero_padding1D_layer(Res11543, 2, 0, Zer51870), 
LLay28431 = layer_normalization_layer([[[1.4276, 1.5112, 1.4024, 1.8221], [1.8629, 1.111, 1.421, 1.3724], [1.2317, 1.169, 1.3534, 1.3547], [1.912, 1.998, 1.5796, 1.1823]]], 1, 1.7113206442907234, Lay28431), 
LAve66764 = average_layer([Zer51870,Lay28431], Ave66764), 
LSep93124 = separable_conv1D_layer(Ave66764, 4,[[[[0.5302], [0.9831], [0.091], [0.1746]], [[0.7094], [0.994], [0.5306], [0.3489]], [[0.2984], [0.0603], [0.6143], [0.3497]], [[0.8248], [0.3428], [0.6068], [0.9368]]],[[[0.1847, 0.0618, 0.1373, 0.6514], [0.0371, 0.1831, 0.9444, 0.233], [0.8739, 0.4668, 0.238, 0.3026], [0.1934, 0.41, 0.0971, 0.5717]]]],[0, 0, 0, 0], 1, false, Sep93124), 
LReL64088 = relu_layer(Sep93124, 0.781201064446307, 4.81600829482121, 3.161289256204279, ReL64088), 
exec_layers([LMin73998,LRes56280,LRes41223,LZer58039,LCon51886,LThr71314,LMin19538,LRes42104,LRes11543,LZer51870,LLay28431,LAve66764,LSep93124,LReL64088],["Min73998","Res56280","Res41223","Zer58039","Con51886","Thr71314","Min19538","Res42104","Res11543","Zer51870","Lay28431","Ave66764","Sep93124","ReL64088"],ReL64088,"ReL64088")

Actual (Unparsed): [[[-15.2013553, -15.3754288, -15.3661152, -15.2175620]]]

Expected (Unparsed): [[[-15.201355254770755,-15.375428718361208,-15.366115131329689,-15.217561991794181]]]

Actual:   [[[-15.2013, -15.3754, -15.3661, -15.2175]]]

Expected: [[[-15.2013, -15.3754, -15.3661, -15.2175]]]