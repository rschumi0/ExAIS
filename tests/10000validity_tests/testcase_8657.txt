import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Dot58596 = tf.keras.layers.Input(shape=([3]))
in1Dot58596 = tf.keras.layers.Input(shape=([3]))

Dot58596 = keras.layers.Dot(axes=(1, 1), name = 'Dot58596', )([in0Dot58596,in1Dot58596])
Res62165 = keras.layers.Reshape((1, 1), name = 'Res62165', )(Dot58596)
Ave78059 = keras.layers.AveragePooling1D(pool_size=(1), name = 'Ave78059', )(Res62165)
Res73149 = keras.layers.Reshape((1, 1, 1), name = 'Res73149', )(Ave78059)
Loc28028 = keras.layers.LocallyConnected2D(4, (1, 1),strides=(1, 1), name = 'Loc28028', )(Res73149)
model = tf.keras.models.Model(inputs=[in0Dot58596,in1Dot58596], outputs=Loc28028)
w = model.get_layer('Loc28028').get_weights() 
w[0] = np.array([[[0.1129, 0.0928, 0.6094, 0.976]]])
w[1] = np.array([[[0, 0, 0, 0]]])
model.get_layer('Loc28028').set_weights(w) 
in0Dot58596 = tf.constant([[0.2388, 0.501, 0.7188]])
in1Dot58596 = tf.constant([[0.1703, 0.956, 0.7587]])
print (np.array2string(model.predict([in0Dot58596,in1Dot58596],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Loc28028.png')

LDot58596 = dot_layer([[0.2388, 0.501, 0.7188]], [[0.1703, 0.956, 0.7587]], 1, 1, Dot58596), 
LRes62165 = reshape_layer(Dot58596, [1, 1], Res62165), 
LAve78059 = average_pooling1D_layer(Res62165, 1, Ave78059), 
LRes73149 = reshape_layer(Ave78059, [1, 1, 1], Res73149), 
LLoc28028 = locally_connected2D_layer(Res73149, 1, 1,[[[0.1129, 0.0928, 0.6094, 0.976]]],[[[0, 0, 0, 0]]], 1, 1, Loc28028), 
exec_layers([LDot58596,LRes62165,LAve78059,LRes73149,LLoc28028],["Dot58596","Res62165","Ave78059","Res73149","Loc28028"],Loc28028,"Loc28028")

Actual (Unparsed): [[[[0.1202359, 0.0988299, 0.6489971, 1.0394177]]]]

Expected (Unparsed): [[[[0.12023592588,0.09882988415999999,0.64899710568,1.0394177472]]]]

Actual:   [[[[0.1203, 0.0989, 0.649, 1.0395]]]]

Expected: [[[[0.1203, 0.0989, 0.649, 1.0395]]]]