import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Dot29976 = tf.keras.layers.Input(shape=([3, 3]))
in1Dot29976 = tf.keras.layers.Input(shape=([3, 3]))
in0Con90754 = tf.keras.layers.Input(shape=([3, 3, 2]))
in0Cro31091 = tf.keras.layers.Input(shape=([4, 4, 3]))
in0Zer11554 = tf.keras.layers.Input(shape=([3, 1, 4, 3]))
in0Con1873 = tf.keras.layers.Input(shape=([9]))
in0Mul36887 = tf.keras.layers.Input(shape=([2, 1, 1, 1]))
in1Mul36887 = tf.keras.layers.Input(shape=([2, 1, 1, 1]))

Dot29976 = keras.layers.Dot(axes=(1, 1), name = 'Dot29976', )([in0Dot29976,in1Dot29976])
Res69579 = keras.layers.Reshape((3, 3, 1), name = 'Res69579', )(Dot29976)
Con90754 = keras.layers.Concatenate(axis=3, name = 'Con90754', )([Res69579,in0Con90754])
Cro31091 = keras.layers.Cropping2D(cropping=((2, 1), (0, 2)), name = 'Cro31091', )(in0Cro31091)
Mas2631 = keras.layers.Masking(mask_value=2, name = 'Mas2631', )(Cro31091)
Zer82824 = keras.layers.ZeroPadding2D(padding=((2, 0), (1, 0)), name = 'Zer82824', )(Mas2631)
Max52327 = keras.layers.Maximum(name = 'Max52327', )([Con90754,Zer82824])
Res12429 = keras.layers.Reshape((3, 9), name = 'Res12429', )(Max52327)
Fla80806 = keras.layers.Flatten(name = 'Fla80806', )(Res12429)
Zer11554 = keras.layers.ZeroPadding3D(padding=((1, 1), (1, 1), (1, 1)), name = 'Zer11554', )(in0Zer11554)
Res26975 = keras.layers.Reshape((5, 3, 18), name = 'Res26975', )(Zer11554)
Glo84587 = keras.layers.GlobalMaxPool2D(name = 'Glo84587', )(Res26975)
Con1873 = keras.layers.Concatenate(axis=1, name = 'Con1873', )([Glo84587,in0Con1873])
Add22649 = keras.layers.Add(name = 'Add22649', )([Fla80806,Con1873])
Res37456 = keras.layers.Reshape((27, 1), name = 'Res37456', )(Add22649)
Res87405 = keras.layers.Reshape((27, 1, 1), name = 'Res87405', )(Res37456)
Mul36887 = keras.layers.Multiply(name = 'Mul36887', )([in0Mul36887,in1Mul36887])
Res22592 = keras.layers.Reshape((2, 1, 1), name = 'Res22592', )(Mul36887)
Cro89990 = keras.layers.Cropping2D(cropping=((1, 0), (0, 0)), name = 'Cro89990', )(Res22592)
Zer24051 = keras.layers.ZeroPadding2D(padding=((26, 0), (0, 0)), name = 'Zer24051', )(Cro89990)
Ave58136 = keras.layers.Average(name = 'Ave58136', )([Res87405,Zer24051])
model = tf.keras.models.Model(inputs=[in0Dot29976,in1Dot29976,in0Con90754,in0Cro31091,in0Zer11554,in0Con1873,in0Mul36887,in1Mul36887], outputs=Ave58136)
in0Dot29976 = tf.constant([[[0.2462, 0.0157, 0.5346], [0.7788, 0.3714, 0.716], [0.1905, 0.3208, 0.4827]]])
in1Dot29976 = tf.constant([[[0.9564, 0.0544, 0.6842], [0.3681, 0.5617, 0.1466], [0.0197, 0.9923, 0.4298]]])
in0Con90754 = tf.constant([[[[0.2897, 0.8458], [0.9352, 0.8467], [0.1392, 0.463]], [[0.1271, 0.5192], [0.5906, 0.1456], [0.6425, 0.4841]], [[0.9107, 0.3886], [0.8963, 0.3987], [0.873, 0.7205]]]])
in0Cro31091 = tf.constant([[[[1.4529, 1.5315, 1.0605], [1.779, 1.1879, 1.8019], [1.6866, 1.3675, 1.7936], [1.4151, 1.5696, 1.7581]], [[1.549, 1.887, 1.4688], [1.3205, 1.0703, 1.162], [1.4448, 1.8143, 1.1739], [1.2316, 1.2853, 1.0739]], [[1.5407, 1.7485, 1.771], [1.5302, 1.372, 1.8643], [1.9538, 1.0468, 1.7614], [1.8998, 1.4152, 1.8221]], [[1.8174, 1.8761, 1.5555], [1.9162, 1.6695, 1.3768], [1.3213, 1.2954, 1.3635], [1.6923, 1.4229, 1.1586]]]])
in0Zer11554 = tf.constant([[[[[1.311, 1.7039, 1.0141], [1.7067, 1.3962, 1.507], [1.0125, 1.4484, 1.0616], [1.3419, 1.7231, 1.5973]]], [[[1.6974, 1.0073, 1.1943], [1.1066, 1.4388, 1.5589], [1.7845, 1.4165, 1.0422], [1.7679, 1.7447, 1.0395]]], [[[1.8523, 1.5047, 1.2341], [1.6999, 1.0021, 1.9436], [1.0782, 1.8606, 1.8907], [1.242, 1.7486, 1.1189]]]]])
in0Con1873 = tf.constant([[0.4785, 0.9896, 0.3934, 0.1646, 0.7412, 0.4652, 0.887, 0.3404, 0.8376]])
in0Mul36887 = tf.constant([[[[[0.6769]]], [[[0.139]]]]])
in1Mul36887 = tf.constant([[[[[0.5021]]], [[[0.135]]]]])
print (np.array2string(model.predict([in0Dot29976,in1Dot29976,in0Con90754,in0Cro31091,in0Zer11554,in0Con1873,in0Mul36887,in1Mul36887],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Ave58136.png')

LDot29976 = dot_layer([[[0.2462, 0.0157, 0.5346], [0.7788, 0.3714, 0.716], [0.1905, 0.3208, 0.4827]]], [[[0.9564, 0.0544, 0.6842], [0.3681, 0.5617, 0.1466], [0.0197, 0.9923, 0.4298]]], 1, 1, Dot29976), 
LRes69579 = reshape_layer(Dot29976, [3, 3, 1], Res69579), 
LCon90754 = concatenate_layer([Res69579,[[[[0.2897, 0.8458], [0.9352, 0.8467], [0.1392, 0.463]], [[0.1271, 0.5192], [0.5906, 0.1456], [0.6425, 0.4841]], [[0.9107, 0.3886], [0.8963, 0.3987], [0.873, 0.7205]]]]], 3, Con90754), 
LCro31091 = cropping2D_layer([[[[1.4529, 1.5315, 1.0605], [1.779, 1.1879, 1.8019], [1.6866, 1.3675, 1.7936], [1.4151, 1.5696, 1.7581]], [[1.549, 1.887, 1.4688], [1.3205, 1.0703, 1.162], [1.4448, 1.8143, 1.1739], [1.2316, 1.2853, 1.0739]], [[1.5407, 1.7485, 1.771], [1.5302, 1.372, 1.8643], [1.9538, 1.0468, 1.7614], [1.8998, 1.4152, 1.8221]], [[1.8174, 1.8761, 1.5555], [1.9162, 1.6695, 1.3768], [1.3213, 1.2954, 1.3635], [1.6923, 1.4229, 1.1586]]]], 2, 1, 0, 2, Cro31091), 
LMas2631 = masking_layer(Cro31091, 2, Mas2631), 
LZer82824 = zero_padding2D_layer(Mas2631, 2, 0, 1, 0, Zer82824), 
LMax52327 = maximum_layer([Con90754,Zer82824], Max52327), 
LRes12429 = reshape_layer(Max52327, [3, 9], Res12429), 
LFla80806 = flatten_layer(Res12429, Fla80806), 
LZer11554 = zero_padding3D_layer([[[[[1.311, 1.7039, 1.0141], [1.7067, 1.3962, 1.507], [1.0125, 1.4484, 1.0616], [1.3419, 1.7231, 1.5973]]], [[[1.6974, 1.0073, 1.1943], [1.1066, 1.4388, 1.5589], [1.7845, 1.4165, 1.0422], [1.7679, 1.7447, 1.0395]]], [[[1.8523, 1.5047, 1.2341], [1.6999, 1.0021, 1.9436], [1.0782, 1.8606, 1.8907], [1.242, 1.7486, 1.1189]]]]], 1, 1, 1, 1, 1, 1, Zer11554), 
LRes26975 = reshape_layer(Zer11554, [5, 3, 18], Res26975), 
LGlo84587 = global_max_pool2D_layer(Res26975, Glo84587), 
LCon1873 = concatenate_layer([Glo84587,[[0.4785, 0.9896, 0.3934, 0.1646, 0.7412, 0.4652, 0.887, 0.3404, 0.8376]]], 1, Con1873), 
LAdd22649 = add_layer([Fla80806,Con1873], Add22649), 
LRes37456 = reshape_layer(Add22649, [27, 1], Res37456), 
LRes87405 = reshape_layer(Res37456, [27, 1, 1], Res87405), 
LMul36887 = multiply_layer([[[[[[0.6769]]], [[[0.139]]]]], [[[[[0.5021]]], [[[0.135]]]]]], Mul36887), 
LRes22592 = reshape_layer(Mul36887, [2, 1, 1], Res22592), 
LCro89990 = cropping2D_layer(Res22592, 1, 0, 0, 0, Cro89990), 
LZer24051 = zero_padding2D_layer(Cro89990, 26, 0, 0, 0, Zer24051), 
LAve58136 = average_layer([Res87405,Zer24051], Ave58136), 
exec_layers([LDot29976,LRes69579,LCon90754,LCro31091,LMas2631,LZer82824,LMax52327,LRes12429,LFla80806,LZer11554,LRes26975,LGlo84587,LCon1873,LAdd22649,LRes37456,LRes87405,LMul36887,LRes22592,LCro89990,LZer24051,LAve58136],["Dot29976","Res69579","Con90754","Cro31091","Mas2631","Zer82824","Max52327","Res12429","Fla80806","Zer11554","Res26975","Glo84587","Con1873","Add22649","Res37456","Res87405","Mul36887","Res22592","Cro89990","Zer24051","Ave58136"],Ave58136,"Ave58136")

Actual (Unparsed): [[[[0.2629474]], [[0.1448500]], [[0.4229000]], [[1.2460892]], [[1.3195500]], [[1.0404000]], [[1.0355995]], [[0.7890000]], [[1.2033000]], [[0.9712738]], [[0.9938500]], [[1.2049500]], [[1.1478496]], [[1.1696000]], [[0.8714500]], [[0.1015345]], [[0.3212500]], [[0.2420500]], [[0.6314301]], [[0.9501500]], [[0.3910000]], [[0.8526500]], [[1.2448500]], [[1.1181000]], [[1.2086000]], [[0.8562000]], [[1.3603325]]]]

Expected (Unparsed): [[[[0.262947405]],[[0.14485]],[[0.4229]],[[1.2460891950000001]],[[1.31955]],[[1.0404]],[[1.03559951]],[[0.789]],[[1.2033]],[[0.97127379]],[[0.99385]],[[1.20495]],[[1.14784965]],[[1.1696]],[[0.87145]],[[0.10153451]],[[0.32125]],[[0.24205]],[[0.6314301149999999]],[[0.95015]],[[0.391]],[[0.85265]],[[1.24485]],[[1.1180999999999999]],[[1.2086000000000001]],[[0.8562000000000001]],[[1.3603325000000002]]]]

Actual:   [[[[0.263]], [[0.1449]], [[0.4229]], [[1.2461]], [[1.3196]], [[1.0404]], [[1.0356]], [[0.789]], [[1.2033]], [[0.9713]], [[0.9939]], [[1.205]], [[1.1479]], [[1.1696]], [[0.8715]], [[0.1016]], [[0.3213]], [[0.2421]], [[0.6315]], [[0.9502]], [[0.391]], [[0.8527]], [[1.2449]], [[1.1181]], [[1.2086]], [[0.8562]], [[1.3604]]]]

Expected: [[[[0.263]], [[0.1449]], [[0.4229]], [[1.2461]], [[1.3196]], [[1.0404]], [[1.0356]], [[0.789]], [[1.2033]], [[0.9713]], [[0.9939]], [[1.205]], [[1.1479]], [[1.1696]], [[0.8715]], [[0.1016]], [[0.3213]], [[0.2421]], [[0.6315]], [[0.9502]], [[0.391]], [[0.8527]], [[1.2449]], [[1.1181]], [[1.2087]], [[0.8563]], [[1.3604]]]]