import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Min31234 = tf.keras.layers.Input(shape=([2, 1, 1]))
in1Min31234 = tf.keras.layers.Input(shape=([2, 1, 1]))

Min31234 = keras.layers.Minimum(name = 'Min31234', )([in0Min31234,in1Min31234])
Sof86393 = keras.layers.Softmax(axis=1, name = 'Sof86393', )(Min31234)
model = tf.keras.models.Model(inputs=[in0Min31234,in1Min31234], outputs=Sof86393)
in0Min31234 = tf.constant([[[[0.9614]], [[0.5156]]]])
in1Min31234 = tf.constant([[[[0.7472]], [[0.4601]]]])
print (np.array2string(model.predict([in0Min31234,in1Min31234],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Sof86393.png')

LMin31234 = minimum_layer([[[[[0.9614]], [[0.5156]]]], [[[[0.7472]], [[0.4601]]]]], Min31234), 
LSof86393 = softmax_layer(Min31234, 1, Sof86393), 
exec_layers([LMin31234,LSof86393],["Min31234","Sof86393"],Sof86393,"Sof86393")

Actual (Unparsed): [[[[0.5712860]], [[0.4287140]]]]

Expected (Unparsed): [[[[0.5712860171501354]],[[0.42871398284986467]]]]

Actual:   [[[[0.5713]], [[0.4288]]]]

Expected: [[[[0.5713]], [[0.4288]]]]