import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Min79465 = tf.keras.layers.Input(shape=([2, 1, 1]))
in1Min79465 = tf.keras.layers.Input(shape=([2, 1, 1]))
in0Add21144 = tf.keras.layers.Input(shape=([2, 2, 1, 1]))
in1Add21144 = tf.keras.layers.Input(shape=([2, 2, 1, 1]))
in0Max57794 = tf.keras.layers.Input(shape=([1, 1]))
in0Con4673 = tf.keras.layers.Input(shape=([2, 1]))

Min79465 = keras.layers.Minimum(name = 'Min79465', )([in0Min79465,in1Min79465])
Res35474 = keras.layers.Reshape((2, 1, 1, 1), name = 'Res35474', )(Min79465)
Zer3291 = keras.layers.ZeroPadding3D(padding=((0, 0), (1, 0), (0, 0)), name = 'Zer3291', )(Res35474)
Add21144 = keras.layers.Add(name = 'Add21144', )([in0Add21144,in1Add21144])
Mul62358 = keras.layers.Multiply(name = 'Mul62358', )([Zer3291,Add21144])
Res73532 = keras.layers.Reshape((2, 2, 1), name = 'Res73532', )(Mul62358)
Res57883 = keras.layers.Reshape((2, 2), name = 'Res57883', )(Res73532)
Max57794 = keras.layers.MaxPool1D(pool_size=(1), strides=(1), padding='valid', name = 'Max57794', )(in0Max57794)
Zer52563 = keras.layers.ZeroPadding1D(padding=((1, 0)), name = 'Zer52563', )(Max57794)
Con4673 = keras.layers.Concatenate(axis=2, name = 'Con4673', )([Zer52563,in0Con4673])
Min77216 = keras.layers.Minimum(name = 'Min77216', )([Res57883,Con4673])
Lea44479 = keras.layers.LeakyReLU(alpha=5.214266739301536, name = 'Lea44479', )(Min77216)
Ave20395 = keras.layers.AveragePooling1D(pool_size=(1), strides=(1), padding='same', name = 'Ave20395', )(Lea44479)
model = tf.keras.models.Model(inputs=[in0Min79465,in1Min79465,in0Add21144,in1Add21144,in0Max57794,in0Con4673], outputs=Ave20395)
in0Min79465 = tf.constant([[[[0.6117]], [[0.604]]]])
in1Min79465 = tf.constant([[[[0.097]], [[0.7725]]]])
in0Add21144 = tf.constant([[[[[0.0379]], [[0.5094]]], [[[0.2115]], [[0.9404]]]]])
in1Add21144 = tf.constant([[[[[0.8662]], [[0.005]]], [[[0.0839]], [[0.8265]]]]])
in0Max57794 = tf.constant([[[1.9959]]])
in0Con4673 = tf.constant([[[0.7473], [0.9514]]])
print (np.array2string(model.predict([in0Min79465,in1Min79465,in0Add21144,in1Add21144,in0Max57794,in0Con4673],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Ave20395.png')

LMin79465 = minimum_layer([[[[[0.6117]], [[0.604]]]], [[[[0.097]], [[0.7725]]]]], Min79465), 
LRes35474 = reshape_layer(Min79465, [2, 1, 1, 1], Res35474), 
LZer3291 = zero_padding3D_layer(Res35474, 0, 0, 1, 0, 0, 0, Zer3291), 
LAdd21144 = add_layer([[[[[[0.0379]], [[0.5094]]], [[[0.2115]], [[0.9404]]]]], [[[[[0.8662]], [[0.005]]], [[[0.0839]], [[0.8265]]]]]], Add21144), 
LMul62358 = multiply_layer([Zer3291,Add21144], Mul62358), 
LRes73532 = reshape_layer(Mul62358, [2, 2, 1], Res73532), 
LRes57883 = reshape_layer(Res73532, [2, 2], Res57883), 
LMax57794 = max_pool1D_layer([[[1.9959]]], 1, 1, false, Max57794), 
LZer52563 = zero_padding1D_layer(Max57794, 1, 0, Zer52563), 
LCon4673 = concatenate_layer([Zer52563,[[[0.7473], [0.9514]]]], 2, Con4673), 
LMin77216 = minimum_layer([Res57883,Con4673], Min77216), 
LLea44479 = leaky_relu_layer(Min77216, 5.214266739301536, Lea44479), 
LAve20395 = average_pooling1D_layer(Lea44479, 1, 1, true, Ave20395), 
exec_layers([LMin79465,LRes35474,LZer3291,LAdd21144,LMul62358,LRes73532,LRes57883,LMax57794,LZer52563,LCon4673,LMin77216,LLea44479,LAve20395],["Min79465","Res35474","Zer3291","Add21144","Mul62358","Res73532","Res57883","Max57794","Zer52563","Con4673","Min77216","Lea44479","Ave20395"],Ave20395,"Ave20395")

Actual (Unparsed): [[[0.0000000, 0.0498968], [0.0000000, 0.9514000]]]

Expected (Unparsed): [[[0.0,0.0498968],[0.0,0.9514]]]

Actual:   [[[0, 0.0499], [0, 0.9514]]]

Expected: [[[0, 0.0499], [0, 0.9514]]]