import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Con26249 = tf.keras.layers.Input(shape=([1, 1, 2, 1]))

Con26249 = keras.layers.Conv3D(2, (1, 1, 1),strides=(1, 4, 2), padding='same', dilation_rate=(1, 1, 1), name = 'Con26249', )(in0Con26249)
Res91071 = keras.layers.Reshape((1, 1, 2), name = 'Res91071', )(Con26249)
Zer76097 = keras.layers.ZeroPadding2D(padding=((1, 1), (1, 1)), name = 'Zer76097', )(Res91071)
model = tf.keras.models.Model(inputs=[in0Con26249], outputs=Zer76097)
w = model.get_layer('Con26249').get_weights() 
w[0] = np.array([[[[[0.6074, 0.4227]]]]])
w[1] = np.array([0, 0])
model.get_layer('Con26249').set_weights(w) 
in0Con26249 = tf.constant([[[[[0.1542], [0.8007]]]]])
print (np.array2string(model.predict([in0Con26249],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Zer76097.png')

LCon26249 = conv3D_layer([[[[[0.1542], [0.8007]]]]], 1, 1, 1,[[[[[0.6074, 0.4227]]]]],[0, 0], 1, 4, 2, true, 1, 1, 1, Con26249), 
LRes91071 = reshape_layer(Con26249, [1, 1, 2], Res91071), 
LZer76097 = zero_padding2D_layer(Res91071, 1, 1, 1, 1, Zer76097), 
exec_layers([LCon26249,LRes91071,LZer76097],["Con26249","Res91071","Zer76097"],Zer76097,"Zer76097")

Actual (Unparsed): [[[[0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000]], [[0.0000000, 0.0000000], [0.0936611, 0.0651803], [0.0000000, 0.0000000]], [[0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000]]]]

Expected (Unparsed): [[[[0,0],[0,0],[0,0]],[[0,0],[0.09366108000000001,0.06518034],[0,0]],[[0,0],[0,0],[0,0]]]]

Actual:   [[[[0, 0], [0, 0], [0, 0]], [[0, 0], [0.0937, 0.0652], [0, 0]], [[0, 0], [0, 0], [0, 0]]]]

Expected: [[[[0, 0], [0, 0], [0, 0]], [[0, 0], [0.0937, 0.0652], [0, 0]], [[0, 0], [0, 0], [0, 0]]]]