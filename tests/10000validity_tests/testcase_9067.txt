import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Sub48945 = tf.keras.layers.Input(shape=([2, 3]))
in1Sub48945 = tf.keras.layers.Input(shape=([2, 3]))

Sub48945 = keras.layers.Subtract(name = 'Sub48945', )([in0Sub48945,in1Sub48945])
Lea77115 = keras.layers.LeakyReLU(alpha=6.86342654431806, name = 'Lea77115', )(Sub48945)
model = tf.keras.models.Model(inputs=[in0Sub48945,in1Sub48945], outputs=Lea77115)
in0Sub48945 = tf.constant([[[0.8288, 0.4198, 0.3312], [0.2437, 0.3081, 0.0601]]])
in1Sub48945 = tf.constant([[[0.6098, 0.8383, 0.8064], [0.0023, 0.3352, 0.9544]]])
print (np.array2string(model.predict([in0Sub48945,in1Sub48945],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Lea77115.png')

LSub48945 = subtract_layer([[[0.8288, 0.4198, 0.3312], [0.2437, 0.3081, 0.0601]]], [[[0.6098, 0.8383, 0.8064], [0.0023, 0.3352, 0.9544]]], Sub48945), 
LLea77115 = leaky_relu_layer(Sub48945, 6.86342654431806, Lea77115), 
exec_layers([LSub48945,LLea77115],["Sub48945","Lea77115"],Lea77115,"Lea77115")

Actual (Unparsed): [[[0.2190000, -2.8723439, -3.2615003], [0.2414000, -0.1859990, -6.1379625]]]

Expected (Unparsed): [[[0.21899999999999997,-2.8723440087971084,-3.2615002938599424],[0.2414,-0.18599885935101954,-6.137962358583641]]]

Actual:   [[[0.219, -2.8723, -3.2615], [0.2414, -0.1859, -6.1379]]]

Expected: [[[0.219, -2.8723, -3.2615], [0.2414, -0.1859, -6.1379]]]