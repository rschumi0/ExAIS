import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0LST28935 = tf.keras.layers.Input(shape=([2, 2]))
in0Mul70108 = tf.keras.layers.Input(shape=([1, 2, 2, 1]))
in1Mul70108 = tf.keras.layers.Input(shape=([1, 2, 2, 1]))
in0Sub11187 = tf.keras.layers.Input(shape=([3]))
in1Sub11187 = tf.keras.layers.Input(shape=([3]))
in0Con24503 = tf.keras.layers.Input(shape=([24]))

LST28935 = keras.layers.LSTM(3,recurrent_activation='sigmoid', name = 'LST28935', )(in0LST28935)
Res99000 = keras.layers.Reshape((3, 1), name = 'Res99000', )(LST28935)
Res34302 = keras.layers.Reshape((3, 1, 1), name = 'Res34302', )(Res99000)
Res49465 = keras.layers.Reshape((3, 1, 1, 1), name = 'Res49465', )(Res34302)
Zer77500 = keras.layers.ZeroPadding3D(padding=((0, 0), (2, 0), (2, 0)), name = 'Zer77500', )(Res49465)
Mul70108 = keras.layers.Multiply(name = 'Mul70108', )([in0Mul70108,in1Mul70108])
Zer36426 = keras.layers.ZeroPadding3D(padding=((2, 0), (1, 0), (1, 0)), name = 'Zer36426', )(Mul70108)
Add33684 = keras.layers.Add(name = 'Add33684', )([Zer77500,Zer36426])
Res60430 = keras.layers.Reshape((3, 3, 3), name = 'Res60430', )(Add33684)
Res23971 = keras.layers.Reshape((3, 9), name = 'Res23971', )(Res60430)
Fla27365 = keras.layers.Flatten(name = 'Fla27365', )(Res23971)
Sub11187 = keras.layers.Subtract(name = 'Sub11187', )([in0Sub11187,in1Sub11187])
Con24503 = keras.layers.Concatenate(axis=1, name = 'Con24503', )([Sub11187,in0Con24503])
Max11999 = keras.layers.Maximum(name = 'Max11999', )([Fla27365,Con24503])
model = tf.keras.models.Model(inputs=[in0LST28935,in0Mul70108,in1Mul70108,in0Sub11187,in1Sub11187,in0Con24503], outputs=Max11999)
w = model.get_layer('LST28935').get_weights() 
w[0] = np.array([[6, 9, 3, 3, 7, 9, 10, 6, 5, 8, 9, 3], [8, 8, 10, 1, 6, 5, 10, 3, 5, 4, 10, 4]])
w[1] = np.array([[3, 7, 10, 3, 8, 8, 2, 7, 4, 3, 8, 8], [2, 8, 10, 3, 2, 1, 10, 5, 2, 2, 7, 4], [1, 8, 7, 1, 8, 9, 7, 9, 5, 3, 6, 7]])
w[2] = np.array([5, 3, 6, 6, 8, 8, 6, 8, 3, 9, 9, 6])
model.get_layer('LST28935').set_weights(w) 
in0LST28935 = tf.constant([[[7, 1], [9, 3]]])
in0Mul70108 = tf.constant([[[[[0.1891], [0.7811]], [[0.4032], [0.5698]]]]])
in1Mul70108 = tf.constant([[[[[0.7259], [0.5929]], [[0.3704], [0.0488]]]]])
in0Sub11187 = tf.constant([[0.4416, 0.7383, 0.6402]])
in1Sub11187 = tf.constant([[0.2022, 0.2044, 0.5769]])
in0Con24503 = tf.constant([[0.4221, 0.3283, 0.948, 0.6993, 0.6511, 0.2732, 0.5757, 0.2698, 0.5337, 0.7353, 0.2739, 0.7435, 0.3637, 0.5049, 0.6078, 0.1809, 0.3518, 0.0259, 0.8103, 0.0122, 0.2872, 0.8801, 0.0908, 0.8781]])
print (np.array2string(model.predict([in0LST28935,in0Mul70108,in1Mul70108,in0Sub11187,in1Sub11187,in0Con24503],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Max11999.png')

LLST28935 = lstm_layer([[[7, 1], [9, 3]]],[[6, 9, 3, 3, 7, 9, 10, 6, 5, 8, 9, 3], [8, 8, 10, 1, 6, 5, 10, 3, 5, 4, 10, 4]],[[3, 7, 10, 3, 8, 8, 2, 7, 4, 3, 8, 8], [2, 8, 10, 3, 2, 1, 10, 5, 2, 2, 7, 4], [1, 8, 7, 1, 8, 9, 7, 9, 5, 3, 6, 7]],[5, 3, 6, 6, 8, 8, 6, 8, 3, 9, 9, 6], LST28935), 
LRes99000 = reshape_layer(LST28935, [3, 1], Res99000), 
LRes34302 = reshape_layer(Res99000, [3, 1, 1], Res34302), 
LRes49465 = reshape_layer(Res34302, [3, 1, 1, 1], Res49465), 
LZer77500 = zero_padding3D_layer(Res49465, 0, 0, 2, 0, 2, 0, Zer77500), 
LMul70108 = multiply_layer([[[[[[0.1891], [0.7811]], [[0.4032], [0.5698]]]]], [[[[[0.7259], [0.5929]], [[0.3704], [0.0488]]]]]], Mul70108), 
LZer36426 = zero_padding3D_layer(Mul70108, 2, 0, 1, 0, 1, 0, Zer36426), 
LAdd33684 = add_layer([Zer77500,Zer36426], Add33684), 
LRes60430 = reshape_layer(Add33684, [3, 3, 3], Res60430), 
LRes23971 = reshape_layer(Res60430, [3, 9], Res23971), 
LFla27365 = flatten_layer(Res23971, Fla27365), 
LSub11187 = subtract_layer([[0.4416, 0.7383, 0.6402]], [[0.2022, 0.2044, 0.5769]], Sub11187), 
LCon24503 = concatenate_layer([Sub11187,[[0.4221, 0.3283, 0.948, 0.6993, 0.6511, 0.2732, 0.5757, 0.2698, 0.5337, 0.7353, 0.2739, 0.7435, 0.3637, 0.5049, 0.6078, 0.1809, 0.3518, 0.0259, 0.8103, 0.0122, 0.2872, 0.8801, 0.0908, 0.8781]]], 1, Con24503), 
LMax11999 = maximum_layer([Fla27365,Con24503], Max11999), 
exec_layers([LLST28935,LRes99000,LRes34302,LRes49465,LZer77500,LMul70108,LZer36426,LAdd33684,LRes60430,LRes23971,LFla27365,LSub11187,LCon24503,LMax11999],["LST28935","Res99000","Res34302","Res49465","Zer77500","Mul70108","Zer36426","Add33684","Res60430","Res23971","Fla27365","Sub11187","Con24503","Max11999"],Max11999,"Max11999")

Actual (Unparsed): [[0.2394000, 0.5339000, 0.0633000, 0.4221000, 0.3283000, 0.9480000, 0.6993000, 0.6511000, 0.9640276, 0.5757000, 0.2698000, 0.5337000, 0.7353000, 0.2739000, 0.7435000, 0.3637000, 0.5049000, 0.9640276, 0.1809000, 0.3518000, 0.0259000, 0.8103000, 0.1372677, 0.4631142, 0.8801000, 0.1493453, 0.9918338]]

Expected (Unparsed): [[0.2394,0.5338999999999999,0.06330000000000002,0.4221,0.3283,0.948,0.6993,0.6511,0.9640275800758169,0.5757,0.2698,0.5337,0.7353,0.2739,0.7435,0.3637,0.5049,0.9640275800758169,0.1809,0.3518,0.0259,0.8103,0.13726769,0.46311419,0.8801,0.14934528,0.9918338200758169]]

Actual:   [[0.2394, 0.5339, 0.0633, 0.4221, 0.3283, 0.948, 0.6993, 0.6511, 0.9641, 0.5757, 0.2698, 0.5337, 0.7353, 0.2739, 0.7435, 0.3637, 0.5049, 0.9641, 0.1809, 0.3518, 0.0259, 0.8103, 0.1373, 0.4632, 0.8801, 0.1494, 0.9919]]

Expected: [[0.2394, 0.5339, 0.0634, 0.4221, 0.3283, 0.948, 0.6993, 0.6511, 0.9641, 0.5757, 0.2698, 0.5337, 0.7353, 0.2739, 0.7435, 0.3637, 0.5049, 0.9641, 0.1809, 0.3518, 0.0259, 0.8103, 0.1373, 0.4632, 0.8801, 0.1494, 0.9919]]