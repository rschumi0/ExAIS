import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0PRe89850 = tf.keras.layers.Input(shape=([2, 1]))
in0Up_41946 = tf.keras.layers.Input(shape=([4, 3, 2, 1]))
in0Con4413 = tf.keras.layers.Input(shape=([4, 3, 2, 1]))
in0Mul14011 = tf.keras.layers.Input(shape=([2, 1]))
in1Mul14011 = tf.keras.layers.Input(shape=([2, 1]))

PRe89850 = keras.layers.PReLU(name = 'PRe89850', input_shape=(2, 1))(in0PRe89850)
Res81616 = keras.layers.Reshape((2, 1, 1), name = 'Res81616', )(PRe89850)
Res70536 = keras.layers.Reshape((2, 1, 1, 1), name = 'Res70536', )(Res81616)
Zer80256 = keras.layers.ZeroPadding3D(padding=((2, 0), (2, 0), (1, 0)), name = 'Zer80256', )(Res70536)
Up_41946 = keras.layers.UpSampling3D(size=(1, 1, 1), name = 'Up_41946', )(in0Up_41946)
Mas7833 = keras.layers.Masking(mask_value=2, name = 'Mas7833', )(Up_41946)
Sub62516 = keras.layers.Subtract(name = 'Sub62516', )([Zer80256,Mas7833])
Con4413 = keras.layers.Concatenate(axis=4, name = 'Con4413', )([Sub62516,in0Con4413])
Mul14011 = keras.layers.Multiply(name = 'Mul14011', )([in0Mul14011,in1Mul14011])
Res84045 = keras.layers.Reshape((2, 1, 1), name = 'Res84045', )(Mul14011)
Con26166 = keras.layers.Conv2D(2, (2, 1),strides=(1, 1), padding='same', dilation_rate=(1, 1), name = 'Con26166', )(Res84045)
Res71806 = keras.layers.Reshape((2, 1, 2, 1), name = 'Res71806', )(Con26166)
Con9488 = keras.layers.Conv3D(2, (2, 1, 2),strides=(1, 1, 1), padding='same', dilation_rate=(1, 1, 1), name = 'Con9488', )(Res71806)
Zer20344 = keras.layers.ZeroPadding3D(padding=((2, 0), (2, 0), (0, 0)), name = 'Zer20344', )(Con9488)
Ave36524 = keras.layers.Average(name = 'Ave36524', )([Con4413,Zer20344])
model = tf.keras.models.Model(inputs=[in0PRe89850,in0Up_41946,in0Con4413,in0Mul14011,in1Mul14011], outputs=Ave36524)
w = model.get_layer('PRe89850').get_weights() 
w[0] = np.array([[0.3613], [0.1851]])
model.get_layer('PRe89850').set_weights(w) 
w = model.get_layer('Con26166').get_weights() 
w[0] = np.array([[[[0.3742, 0.0573]]], [[[0.3385, 0.3414]]]])
w[1] = np.array([0, 0])
model.get_layer('Con26166').set_weights(w) 
w = model.get_layer('Con9488').get_weights() 
w[0] = np.array([[[[[0.814, 0.1302]], [[0.5107, 0.4674]]]], [[[[0.1944, 0.8272]], [[0.6087, 0.6529]]]]])
w[1] = np.array([0, 0])
model.get_layer('Con9488').set_weights(w) 
in0PRe89850 = tf.constant([[[0.5127], [0.8345]]])
in0Up_41946 = tf.constant([[[[[1.5627], [1.2459]], [[1.7886], [1.3897]], [[1.1165], [1.2702]]], [[[1.245], [1.2198]], [[1.6879], [1.2403]], [[1.8022], [1.3252]]], [[[1.2795], [1.4708]], [[1.5097], [1.8309]], [[1.8796], [1.9327]]], [[[1.1103], [1.3308]], [[1.873], [1.0128]], [[1.2175], [1.2193]]]]])
in0Con4413 = tf.constant([[[[[0.1015], [0.5719]], [[0.1447], [0.8822]], [[0.3755], [0.9784]]], [[[0.7376], [0.876]], [[0.0124], [0.2279]], [[0.7711], [0.3209]]], [[[0.6149], [0.2796]], [[0.9313], [0.4802]], [[0.6322], [0.7836]]], [[[0.9294], [0.4184]], [[0.3533], [0.6403]], [[0.72], [0.4059]]]]])
in0Mul14011 = tf.constant([[[0.4219], [0.7381]]])
in1Mul14011 = tf.constant([[[0.1899], [0.7737]]])
print (np.array2string(model.predict([in0PRe89850,in0Up_41946,in0Con4413,in0Mul14011,in1Mul14011],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Ave36524.png')

LPRe89850 = prelu_layer([[[0.5127], [0.8345]]], [[0.3613], [0.1851]], PRe89850), 
LRes81616 = reshape_layer(PRe89850, [2, 1, 1], Res81616), 
LRes70536 = reshape_layer(Res81616, [2, 1, 1, 1], Res70536), 
LZer80256 = zero_padding3D_layer(Res70536, 2, 0, 2, 0, 1, 0, Zer80256), 
LUp_41946 = up_sampling3D_layer([[[[[1.5627], [1.2459]], [[1.7886], [1.3897]], [[1.1165], [1.2702]]], [[[1.245], [1.2198]], [[1.6879], [1.2403]], [[1.8022], [1.3252]]], [[[1.2795], [1.4708]], [[1.5097], [1.8309]], [[1.8796], [1.9327]]], [[[1.1103], [1.3308]], [[1.873], [1.0128]], [[1.2175], [1.2193]]]]], 1, 1, 1, Up_41946), 
LMas7833 = masking_layer(Up_41946, 2, Mas7833), 
LSub62516 = subtract_layer(Zer80256,Mas7833, Sub62516), 
LCon4413 = concatenate_layer([Sub62516,[[[[[0.1015], [0.5719]], [[0.1447], [0.8822]], [[0.3755], [0.9784]]], [[[0.7376], [0.876]], [[0.0124], [0.2279]], [[0.7711], [0.3209]]], [[[0.6149], [0.2796]], [[0.9313], [0.4802]], [[0.6322], [0.7836]]], [[[0.9294], [0.4184]], [[0.3533], [0.6403]], [[0.72], [0.4059]]]]]], 4, Con4413), 
LMul14011 = multiply_layer([[[[0.4219], [0.7381]]], [[[0.1899], [0.7737]]]], Mul14011), 
LRes84045 = reshape_layer(Mul14011, [2, 1, 1], Res84045), 
LCon26166 = conv2D_layer(Res84045, 2, 1,[[[[0.3742, 0.0573]]], [[[0.3385, 0.3414]]]],[0, 0], 1, 1, true, 1, 1, Con26166), 
LRes71806 = reshape_layer(Con26166, [2, 1, 2, 1], Res71806), 
LCon9488 = conv3D_layer(Res71806, 2, 1, 2,[[[[[0.814, 0.1302]], [[0.5107, 0.4674]]]], [[[[0.1944, 0.8272]], [[0.6087, 0.6529]]]]],[0, 0], 1, 1, 1, true, 1, 1, 1, Con9488), 
LZer20344 = zero_padding3D_layer(Con9488, 2, 0, 2, 0, 0, 0, Zer20344), 
LAve36524 = average_layer([Con4413,Zer20344], Ave36524), 
exec_layers([LPRe89850,LRes81616,LRes70536,LZer80256,LUp_41946,LMas7833,LSub62516,LCon4413,LMul14011,LRes84045,LCon26166,LRes71806,LCon9488,LZer20344,LAve36524],["PRe89850","Res81616","Res70536","Zer80256","Up_41946","Mas7833","Sub62516","Con4413","Mul14011","Res84045","Con26166","Res71806","Con9488","Zer20344","Ave36524"],Ave36524,"Ave36524")

Actual (Unparsed): [[[[[-0.7813500, 0.0507500], [-0.6229500, 0.2859500]], [[-0.8943000, 0.0723500], [-0.6948500, 0.4411000]], [[-0.5582500, 0.1877500], [-0.6351000, 0.4892000]]], [[[-0.6225000, 0.3688000], [-0.6099000, 0.4380000]], [[-0.8439500, 0.0062000], [-0.6201500, 0.1139500]], [[-0.9011000, 0.3855500], [-0.6626000, 0.1604500]]], [[[-0.6397500, 0.3074500], [-0.7354000, 0.1398000]], [[-0.7548500, 0.4656500], [-0.9154500, 0.2401000]], [[-0.7672362, 0.4763375], [-0.6256012, 0.4183248]]], [[[-0.5551500, 0.4647000], [-0.6654000, 0.2092000]], [[-0.9365000, 0.1766500], [-0.5064000, 0.3201500]], [[-0.5134211, 0.3815586], [-0.1790821, 0.2050802]]]]]

Expected (Unparsed): [[[[[-0.78135,0.05075],[-0.62295,0.28595]],[[-0.8943,0.07235],[-0.69485,0.4411]],[[-0.55825,0.18775],[-0.6351,0.4892]]],[[[-0.6225,0.3688],[-0.6099,0.438]],[[-0.84395,0.0062],[-0.62015,0.11395]],[[-0.9011,0.38555],[-0.6626,0.16045]]],[[[-0.63975,0.30745],[-0.7354,0.1398]],[[-0.75485,0.46565],[-0.91545,0.2401]],[[-0.7672362194519811,0.47633746171749125],[-0.6256011636792098,0.41832482689145367]]],[[[-0.55515,0.4647],[-0.6654,0.2092]],[[-0.9365,0.17665],[-0.5064,0.32015]],[[-0.5134210783979887,0.38155863249469707],[-0.17908206676483301,0.2050802148737331]]]]]

Actual:   [[[[[-0.7813, 0.0508], [-0.6229, 0.286]], [[-0.8943, 0.0724], [-0.6948, 0.4411]], [[-0.5582, 0.1878], [-0.6351, 0.4892]]], [[[-0.6225, 0.3688], [-0.6099, 0.438]], [[-0.8439, 0.0062], [-0.6201, 0.114]], [[-0.9011, 0.3856], [-0.6626, 0.1605]]], [[[-0.6397, 0.3075], [-0.7354, 0.1398]], [[-0.7548, 0.4657], [-0.9154, 0.2401]], [[-0.7672, 0.4764], [-0.6256, 0.4184]]], [[[-0.5551, 0.4647], [-0.6654, 0.2092]], [[-0.9365, 0.1767], [-0.5064, 0.3202]], [[-0.5134, 0.3816], [-0.179, 0.2051]]]]]

Expected: [[[[[-0.7813, 0.0508], [-0.6229, 0.286]], [[-0.8943, 0.0724], [-0.6948, 0.4411]], [[-0.5582, 0.1878], [-0.6351, 0.4892]]], [[[-0.6225, 0.3688], [-0.6099, 0.438]], [[-0.8439, 0.0062], [-0.6201, 0.114]], [[-0.9011, 0.3856], [-0.6626, 0.1605]]], [[[-0.6397, 0.3075], [-0.7354, 0.1398]], [[-0.7548, 0.4657], [-0.9154, 0.2401]], [[-0.7672, 0.4764], [-0.6256, 0.4184]]], [[[-0.5551, 0.4647], [-0.6654, 0.2092]], [[-0.9365, 0.1767], [-0.5064, 0.3202]], [[-0.5134, 0.3816], [-0.179, 0.2051]]]]]