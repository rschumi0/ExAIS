import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Ave2018 = tf.keras.layers.Input(shape=([1, 2]))
in0Con47517 = tf.keras.layers.Input(shape=([1, 10]))
in0Add18104 = tf.keras.layers.Input(shape=([2, 2, 1]))
in1Add18104 = tf.keras.layers.Input(shape=([2, 2, 1]))
in0Con12383 = tf.keras.layers.Input(shape=([1, 1, 3, 3]))
in0Cro1266 = tf.keras.layers.Input(shape=([2, 4, 3, 4]))

Ave2018 = keras.layers.AveragePooling1D(pool_size=(1), name = 'Ave2018', )(in0Ave2018)
ReL42039 = keras.layers.ReLU(max_value=4.378206048795233, negative_slope=3.224351545138256, threshold=0.8226306738533307, name = 'ReL42039', )(Ave2018)
Con47517 = keras.layers.Concatenate(axis=2, name = 'Con47517', )([ReL42039,in0Con47517])
Add18104 = keras.layers.Add(name = 'Add18104', )([in0Add18104,in1Add18104])
Glo56347 = keras.layers.GlobalMaxPool2D(name = 'Glo56347', )(Add18104)
Res29020 = keras.layers.Reshape((1, 1), name = 'Res29020', )(Glo56347)
Res24146 = keras.layers.Reshape((1, 1, 1), name = 'Res24146', )(Res29020)
Res61773 = keras.layers.Reshape((1, 1, 1, 1), name = 'Res61773', )(Res24146)
Zer91344 = keras.layers.ZeroPadding3D(padding=((0, 0), (0, 0), (2, 0)), name = 'Zer91344', )(Res61773)
Con12383 = keras.layers.Concatenate(axis=4, name = 'Con12383', )([Zer91344,in0Con12383])
Cro1266 = keras.layers.Cropping3D(cropping=((1, 0), (0, 3), (0, 0)), name = 'Cro1266', )(in0Cro1266)
Max92218 = keras.layers.Maximum(name = 'Max92218', )([Con12383,Cro1266])
Res26877 = keras.layers.Reshape((1, 1, 12), name = 'Res26877', )(Max92218)
Res85678 = keras.layers.Reshape((1, 12), name = 'Res85678', )(Res26877)
Dot28593 = keras.layers.Dot(axes=(1, 1), name = 'Dot28593', )([Con47517,Res85678])
model = tf.keras.models.Model(inputs=[in0Ave2018,in0Con47517,in0Add18104,in1Add18104,in0Con12383,in0Cro1266], outputs=Dot28593)
in0Ave2018 = tf.constant([[[1.6656, 1.3136]]])
in0Con47517 = tf.constant([[[0.8509, 0.749, 0.4816, 0.8741, 0.5332, 0.6958, 0.4167, 0.6858, 0.7643, 0.4105]]])
in0Add18104 = tf.constant([[[[0.0651], [0.8377]], [[0.1459], [0.9242]]]])
in1Add18104 = tf.constant([[[[0.5602], [0.2897]], [[0.5806], [0.3059]]]])
in0Con12383 = tf.constant([[[[[0.1782, 0.885, 0.92], [0.9528, 0.7592, 0.7413], [0.6052, 0.219, 0.7085]]]]])
in0Cro1266 = tf.constant([[[[[1.0817, 1.0216, 1.7837, 1.4813], [1.2175, 1.6509, 1.7807, 1.5802], [1.9844, 1.8395, 1.6192, 1.572]], [[1.186, 1.1481, 1.9137, 1.7384], [1.8817, 1.5986, 1.8407, 1.3724], [1.9214, 1.756, 1.4699, 1.8447]], [[1.1869, 1.9284, 1.7758, 1.3553], [1.6521, 1.9078, 1.4025, 1.4027], [1.6242, 1.5246, 1.2804, 1.2447]], [[1.5605, 1.1744, 1.4808, 1.3993], [1.6705, 1.3896, 1.2836, 1.5409], [1.1041, 1.4744, 1.2858, 1.9826]]], [[[1.907, 1.2006, 1.5243, 1.3047], [1.0776, 1.5692, 1.0091, 1.5883], [1.0021, 1.6827, 1.7643, 1.1437]], [[1.2606, 1.8463, 1.4641, 1.5841], [1.2997, 1.1158, 1.0131, 1.5921], [1.751, 1.6456, 1.9708, 1.7447]], [[1.2337, 1.3558, 1.5497, 1.3246], [1.33, 1.6315, 1.0234, 1.1274], [1.0432, 1.9972, 1.7769, 1.8962]], [[1.4576, 1.9661, 1.9018, 1.162], [1.5098, 1.5566, 1.1922, 1.9498], [1.7449, 1.2859, 1.6364, 1.0232]]]]])
print (np.array2string(model.predict([in0Ave2018,in0Con47517,in0Add18104,in1Add18104,in0Con12383,in0Cro1266],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Dot28593.png')

LAve2018 = average_pooling1D_layer([[[1.6656, 1.3136]]], 1, Ave2018), 
LReL42039 = relu_layer(Ave2018, 4.378206048795233, 3.224351545138256, 0.8226306738533307, ReL42039), 
LCon47517 = concatenate_layer([ReL42039,[[[0.8509, 0.749, 0.4816, 0.8741, 0.5332, 0.6958, 0.4167, 0.6858, 0.7643, 0.4105]]]], 2, Con47517), 
LAdd18104 = add_layer([[[[[0.0651], [0.8377]], [[0.1459], [0.9242]]]], [[[[0.5602], [0.2897]], [[0.5806], [0.3059]]]]], Add18104), 
LGlo56347 = global_max_pool2D_layer(Add18104, Glo56347), 
LRes29020 = reshape_layer(Glo56347, [1, 1], Res29020), 
LRes24146 = reshape_layer(Res29020, [1, 1, 1], Res24146), 
LRes61773 = reshape_layer(Res24146, [1, 1, 1, 1], Res61773), 
LZer91344 = zero_padding3D_layer(Res61773, 0, 0, 0, 0, 2, 0, Zer91344), 
LCon12383 = concatenate_layer([Zer91344,[[[[[0.1782, 0.885, 0.92], [0.9528, 0.7592, 0.7413], [0.6052, 0.219, 0.7085]]]]]], 4, Con12383), 
LCro1266 = cropping3D_layer([[[[[1.0817, 1.0216, 1.7837, 1.4813], [1.2175, 1.6509, 1.7807, 1.5802], [1.9844, 1.8395, 1.6192, 1.572]], [[1.186, 1.1481, 1.9137, 1.7384], [1.8817, 1.5986, 1.8407, 1.3724], [1.9214, 1.756, 1.4699, 1.8447]], [[1.1869, 1.9284, 1.7758, 1.3553], [1.6521, 1.9078, 1.4025, 1.4027], [1.6242, 1.5246, 1.2804, 1.2447]], [[1.5605, 1.1744, 1.4808, 1.3993], [1.6705, 1.3896, 1.2836, 1.5409], [1.1041, 1.4744, 1.2858, 1.9826]]], [[[1.907, 1.2006, 1.5243, 1.3047], [1.0776, 1.5692, 1.0091, 1.5883], [1.0021, 1.6827, 1.7643, 1.1437]], [[1.2606, 1.8463, 1.4641, 1.5841], [1.2997, 1.1158, 1.0131, 1.5921], [1.751, 1.6456, 1.9708, 1.7447]], [[1.2337, 1.3558, 1.5497, 1.3246], [1.33, 1.6315, 1.0234, 1.1274], [1.0432, 1.9972, 1.7769, 1.8962]], [[1.4576, 1.9661, 1.9018, 1.162], [1.5098, 1.5566, 1.1922, 1.9498], [1.7449, 1.2859, 1.6364, 1.0232]]]]], 1, 0, 0, 3, 0, 0, Cro1266), 
LMax92218 = maximum_layer([Con12383,Cro1266], Max92218), 
LRes26877 = reshape_layer(Max92218, [1, 1, 12], Res26877), 
LRes85678 = reshape_layer(Res26877, [1, 12], Res85678), 
LDot28593 = dot_layer(Con47517,Res85678, 1, 1, Dot28593), 
exec_layers([LAve2018,LReL42039,LCon47517,LAdd18104,LGlo56347,LRes29020,LRes24146,LRes61773,LZer91344,LCon12383,LCro1266,LMax92218,LRes26877,LRes85678,LDot28593],["Ave2018","ReL42039","Con47517","Add18104","Glo56347","Res29020","Res24146","Res61773","Zer91344","Con12383","Cro1266","Max92218","Res26877","Res85678","Dot28593"],Dot28593,"Dot28593")

Actual (Unparsed): [[[3.1762990, 1.9997193, 2.5388740, 2.1731083, 1.7948505, 2.6136595, 1.6807568, 2.6454724, 2.0488545, 2.8027051, 2.9386180, 1.9049467], [2.5050350, 1.5771081, 2.0023204, 1.7138539, 1.4155353, 2.0613011, 1.3255537, 2.0863908, 1.6158593, 2.2103947, 2.3175844, 1.5023643], [1.6226662, 1.0215906, 1.2970268, 1.1101692, 0.9169298, 1.3352323, 0.8586432, 1.3514845, 1.0466921, 1.4318095, 1.5012429, 0.9731743], [1.4283430, 0.8992494, 1.1417007, 0.9772203, 0.8071224, 1.1753308, 0.7558159, 1.1896367, 0.9213449, 1.2603424, 1.3214607, 0.8566313], [0.9184111, 0.5782090, 0.7341028, 0.6283435, 0.5189721, 0.7557267, 0.4859825, 0.7649253, 0.5924161, 0.8103883, 0.8496869, 0.5508059], [1.6669087, 1.0494445, 1.3323907, 1.1404383, 0.9419302, 1.3716378, 0.8820543, 1.3883331, 1.0752305, 1.4708482, 1.5421747, 0.9997082], [1.0168124, 0.6401600, 0.8127568, 0.6956661, 0.5745763, 0.8366975, 0.5380521, 0.8468816, 0.6558894, 0.8972157, 0.9407248, 0.6098209], [1.3268906, 0.8353775, 1.0606079, 0.9078103, 0.7497941, 1.0918494, 0.7021318, 1.1051391, 0.8559036, 1.1708227, 1.2275999, 0.7957865], [0.7946469, 0.5002900, 0.6351758, 0.5436685, 0.4490359, 0.6538857, 0.4204920, 0.6618446, 0.5125827, 0.7011811, 0.7351838, 0.4765798], [1.3078206, 0.8233715, 1.0453650, 0.8947633, 0.7390181, 1.0761574, 0.6920408, 1.0892562, 0.8436026, 1.1539957, 1.2099570, 0.7843495], [1.4575200, 0.9176186, 1.1650225, 0.9971822, 0.8236097, 1.1993396, 0.7712551, 1.2139377, 0.9401654, 1.2860876, 1.3484545, 0.8741299], [0.7828235, 0.4928463, 0.6257251, 0.5355793, 0.4423548, 0.6441566, 0.4142355, 0.6519971, 0.5049560, 0.6907483, 0.7242451, 0.4694888]]]

Expected (Unparsed): [[[3.1762992,1.9997193599999998,2.53887408,2.17310832,1.7948505599999998,2.6136595199999997,1.68075696,2.64547248,2.04885456,2.80270512,2.93861808,1.9049467199999999],[2.5050352,1.5771081599999999,2.0023204800000003,1.71385392,1.41553536,2.06130112,1.3255537600000002,2.08639088,1.6158593600000002,2.2103947200000005,2.3175844800000003,1.50236432],[1.6226663,1.0215905399999998,1.29702687,1.11016923,0.9169298399999999,1.3352322799999998,0.8586431900000001,1.35148447,1.0466920899999999,1.4318094300000002,1.50124287,0.97317433],[1.428343,0.8992493999999999,1.1417007,0.9772202999999999,0.8071223999999999,1.1753308,0.7558159000000001,1.1896367,0.9213449,1.2603423,1.3214607,0.8566313],[0.9184112,0.5782089599999999,0.7341028799999999,0.6283435199999999,0.5189721599999999,0.75572672,0.48598256,0.7649252799999999,0.59241616,0.8103883199999999,0.8496868799999999,0.55080592],[1.6669087,1.04944446,1.33239063,1.14043827,0.9419301599999998,1.3716377199999998,0.8820543100000001,1.38833303,1.0752304099999999,1.47084807,1.5421746299999999,0.9997081699999999],[1.0168124,0.64015992,0.81275676,0.69566604,0.5745763199999999,0.83669744,0.53805212,0.84688156,0.65588932,0.8972156400000001,0.94072476,0.60982084],[1.3268906,0.8353774799999999,1.06060794,0.90781026,0.7497940799999999,1.0918493599999999,0.7021317800000001,1.10513914,0.85590358,1.17082266,1.22759994,0.79578646],[0.7946469,0.50029002,0.63517581,0.5436684900000001,0.44903592,0.65388564,0.42049197000000005,0.66184461,0.51258267,0.7011810900000001,0.73518381,0.47657979],[1.3078205999999999,0.8233714799999999,1.04536494,0.89476326,0.7390180799999999,1.0761573599999998,0.69204078,1.08925614,0.84360258,1.15399566,1.2099569399999999,0.7843494599999999],[1.4575201,0.9176185799999999,1.16502249,0.99718221,0.8236096799999999,1.1993395599999999,0.77125513,1.21393769,0.94016543,1.28608761,1.34845449,0.87412991],[0.7828235,0.4928462999999999,0.62572515,0.53557935,0.44235479999999994,0.6441566,0.41423555,0.65199715,0.50495605,0.69074835,0.72424515,0.46948884999999996]]]

Actual:   [[[3.1763, 1.9998, 2.5389, 2.1732, 1.7949, 2.6137, 1.6808, 2.6455, 2.0489, 2.8028, 2.9387, 1.905], [2.5051, 1.5772, 2.0024, 1.7139, 1.4156, 2.0614, 1.3256, 2.0864, 1.6159, 2.2104, 2.3176, 1.5024], [1.6227, 1.0216, 1.2971, 1.1102, 0.917, 1.3353, 0.8587, 1.3515, 1.0467, 1.4319, 1.5013, 0.9732], [1.4284, 0.8993, 1.1418, 0.9773, 0.8072, 1.1754, 0.7559, 1.1897, 0.9214, 1.2604, 1.3215, 0.8567], [0.9185, 0.5783, 0.7342, 0.6284, 0.519, 0.7558, 0.486, 0.765, 0.5925, 0.8104, 0.8497, 0.5509], [1.667, 1.0495, 1.3324, 1.1405, 0.942, 1.3717, 0.8821, 1.3884, 1.0753, 1.4709, 1.5422, 0.9998], [1.0169, 0.6402, 0.8128, 0.6957, 0.5746, 0.8367, 0.5381, 0.8469, 0.6559, 0.8973, 0.9408, 0.6099], [1.3269, 0.8354, 1.0607, 0.9079, 0.7498, 1.0919, 0.7022, 1.1052, 0.856, 1.1709, 1.2276, 0.7958], [0.7947, 0.5003, 0.6352, 0.5437, 0.4491, 0.6539, 0.4205, 0.6619, 0.5126, 0.7012, 0.7352, 0.4766], [1.3079, 0.8234, 1.0454, 0.8948, 0.7391, 1.0762, 0.6921, 1.0893, 0.8437, 1.154, 1.21, 0.7844], [1.4576, 0.9177, 1.1651, 0.9972, 0.8237, 1.1994, 0.7713, 1.214, 0.9402, 1.2861, 1.3485, 0.8742], [0.7829, 0.4929, 0.6258, 0.5356, 0.4424, 0.6442, 0.4143, 0.652, 0.505, 0.6908, 0.7243, 0.4695]]]

Expected: [[[3.1763, 1.9998, 2.5389, 2.1732, 1.7949, 2.6137, 1.6808, 2.6455, 2.0489, 2.8028, 2.9387, 1.905], [2.5051, 1.5772, 2.0024, 1.7139, 1.4156, 2.0614, 1.3256, 2.0864, 1.6159, 2.2104, 2.3176, 1.5024], [1.6227, 1.0216, 1.2971, 1.1102, 0.917, 1.3353, 0.8587, 1.3515, 1.0467, 1.4319, 1.5013, 0.9732], [1.4284, 0.8993, 1.1418, 0.9773, 0.8072, 1.1754, 0.7559, 1.1897, 0.9214, 1.2604, 1.3215, 0.8567], [0.9185, 0.5783, 0.7342, 0.6284, 0.519, 0.7558, 0.486, 0.765, 0.5925, 0.8104, 0.8497, 0.5509], [1.667, 1.0495, 1.3324, 1.1405, 0.942, 1.3717, 0.8821, 1.3884, 1.0753, 1.4709, 1.5422, 0.9998], [1.0169, 0.6402, 0.8128, 0.6957, 0.5746, 0.8367, 0.5381, 0.8469, 0.6559, 0.8973, 0.9408, 0.6099], [1.3269, 0.8354, 1.0607, 0.9079, 0.7498, 1.0919, 0.7022, 1.1052, 0.856, 1.1709, 1.2276, 0.7958], [0.7947, 0.5003, 0.6352, 0.5437, 0.4491, 0.6539, 0.4205, 0.6619, 0.5126, 0.7012, 0.7352, 0.4766], [1.3079, 0.8234, 1.0454, 0.8948, 0.7391, 1.0762, 0.6921, 1.0893, 0.8437, 1.154, 1.21, 0.7844], [1.4576, 0.9177, 1.1651, 0.9972, 0.8237, 1.1994, 0.7713, 1.214, 0.9402, 1.2861, 1.3485, 0.8742], [0.7829, 0.4929, 0.6258, 0.5356, 0.4424, 0.6442, 0.4143, 0.652, 0.505, 0.6908, 0.7243, 0.4695]]]