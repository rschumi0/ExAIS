import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Max99005 = tf.keras.layers.Input(shape=([2, 1, 1]))
in1Max99005 = tf.keras.layers.Input(shape=([2, 1, 1]))
in0Con29267 = tf.keras.layers.Input(shape=([34]))
in0Sub79790 = tf.keras.layers.Input(shape=([3, 3, 2, 2]))
in1Sub79790 = tf.keras.layers.Input(shape=([3, 3, 2, 2]))
in0Zer49386 = tf.keras.layers.Input(shape=([1, 2]))
in0Con75788 = tf.keras.layers.Input(shape=([3, 10]))
in0Bat57671 = tf.keras.layers.Input(shape=([3]))
in0Con1398 = tf.keras.layers.Input(shape=([33]))
in0Glo75922 = tf.keras.layers.Input(shape=([1, 1]))

Max99005 = keras.layers.Maximum(name = 'Max99005', )([in0Max99005,in1Max99005])
Res47616 = keras.layers.Reshape((2, 1), name = 'Res47616', )(Max99005)
Fla49273 = keras.layers.Flatten(name = 'Fla49273', )(Res47616)
Con29267 = keras.layers.Concatenate(axis=1, name = 'Con29267', )([Fla49273,in0Con29267])
Sub79790 = keras.layers.Subtract(name = 'Sub79790', )([in0Sub79790,in1Sub79790])
Res49572 = keras.layers.Reshape((3, 3, 4), name = 'Res49572', )(Sub79790)
Res81344 = keras.layers.Reshape((3, 12), name = 'Res81344', )(Res49572)
Zer49386 = keras.layers.ZeroPadding1D(padding=((1, 1)), name = 'Zer49386', )(in0Zer49386)
Con75788 = keras.layers.Concatenate(axis=2, name = 'Con75788', )([Zer49386,in0Con75788])
Ave51274 = keras.layers.Average(name = 'Ave51274', )([Res81344,Con75788])
Fla55192 = keras.layers.Flatten(name = 'Fla55192', )(Ave51274)
Bat57671 = keras.layers.BatchNormalization(axis=1, epsilon=0.5789571438460369,  name = 'Bat57671', )(in0Bat57671)
Con1398 = keras.layers.Concatenate(axis=1, name = 'Con1398', )([Bat57671,in0Con1398])
Ave7581 = keras.layers.Average(name = 'Ave7581', )([Fla55192,Con1398])
Dot88326 = keras.layers.Dot(axes=(1, 1), name = 'Dot88326', )([Con29267,Ave7581])
Res9266 = keras.layers.Reshape((1, 1), name = 'Res9266', )(Dot88326)
Glo75922 = keras.layers.GlobalMaxPool1D(name = 'Glo75922', )(in0Glo75922)
Res6194 = keras.layers.Reshape((1, 1), name = 'Res6194', )(Glo75922)
Max64371 = keras.layers.MaxPool1D(pool_size=(1), name = 'Max64371', )(Res6194)
Sub83784 = keras.layers.Subtract(name = 'Sub83784', )([Res9266,Max64371])
model = tf.keras.models.Model(inputs=[in0Max99005,in1Max99005,in0Con29267,in0Sub79790,in1Sub79790,in0Zer49386,in0Con75788,in0Bat57671,in0Con1398,in0Glo75922], outputs=Sub83784)
w = model.get_layer('Bat57671').get_weights() 
w[0] = np.array([0.6115, 0.1311, 0.4078])
w[1] = np.array([0.5954, 0.1676, 0.1162])
w[2] = np.array([0.3825, 0.8071, 0.6619])
w[3] = np.array([0.3802, 0.3696, 0.8522])
model.get_layer('Bat57671').set_weights(w) 
in0Max99005 = tf.constant([[[[0.0294]], [[0.7361]]]])
in1Max99005 = tf.constant([[[[0.875]], [[0.0348]]]])
in0Con29267 = tf.constant([[0.9704, 0.954, 0.8691, 0.6991, 0.808, 0.5712, 0.8086, 0.9951, 0.1975, 0.1859, 0.1675, 0.3123, 0.0359, 0.397, 0.2012, 0.4316, 0.0481, 0.3872, 0.7389, 0.4057, 0.323, 0.6204, 0.9059, 0.1972, 0.641, 0.2555, 0.086, 0.0118, 0.4298, 0.5269, 0.3116, 0.7934, 0.3955, 0.0962]])
in0Sub79790 = tf.constant([[[[[0.1373, 0.582], [0.1759, 0.5463]], [[0.2166, 0.0483], [0.4941, 0.7439]], [[0.8079, 0.0974], [0.6023, 0.7709]]], [[[0.5652, 0.6279], [0.1822, 0.9883]], [[0.8171, 0.1187], [0.6676, 0.5824]], [[0.4113, 0.3073], [0.8685, 0.8013]]], [[[0.5123, 0.3003], [0.9181, 0.1887]], [[0.1223, 0.3723], [0.5149, 0.4968]], [[0.0979, 0.7214], [0.2621, 0.9229]]]]])
in1Sub79790 = tf.constant([[[[[0.3488, 0.6185], [0.1491, 0.937]], [[0.7197, 0.7125], [0.8613, 0.2484]], [[0.7822, 0.7353], [0.6595, 0.389]]], [[[0.3924, 0.4882], [0.0275, 0.9876]], [[0.4054, 0.7849], [0.1492, 0.052]], [[0.3831, 0.9774], [0.5485, 0.4809]]], [[[0.4754, 0.7958], [0.9027, 0.5878]], [[0.9153, 0.498], [0.12, 0.6333]], [[0.7258, 0.7419], [0.265, 0.2354]]]]])
in0Zer49386 = tf.constant([[[1.3047, 1.1697]]])
in0Con75788 = tf.constant([[[0.1246, 0.3505, 0.098, 0.9365, 0.3968, 0.6669, 0.2559, 0.1149, 0.7282, 0.0657], [0.2675, 0.7775, 0.3372, 0.4708, 0.7679, 0.5181, 0.8393, 0.896, 0.1143, 0.6545], [0.6804, 0.8489, 0.5043, 0.1878, 0.2521, 0.6215, 0.9315, 0.0048, 0.6495, 0.5191]]])
in0Bat57671 = tf.constant([[1.8089, 1.0557, 1.528]])
in0Con1398 = tf.constant([[0.5759, 0.7916, 0.4214, 0.5058, 0.9528, 0.746, 0.786, 0.3958, 0.2342, 0.4704, 0.1248, 0.5803, 0.3145, 0.284, 0.0538, 0.2653, 0.3448, 0.726, 0.5877, 0.8974, 0.6815, 0.6381, 0.8077, 0.6957, 0.9744, 0.1392, 0.0325, 0.491, 0.9244, 0.2597, 0.9161, 0.4547, 0.1614]])
in0Glo75922 = tf.constant([[[1.4247]]])
print (np.array2string(model.predict([in0Max99005,in1Max99005,in0Con29267,in0Sub79790,in1Sub79790,in0Zer49386,in0Con75788,in0Bat57671,in0Con1398,in0Glo75922],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Sub83784.png')

LMax99005 = maximum_layer([[[[[0.0294]], [[0.7361]]]], [[[[0.875]], [[0.0348]]]]], Max99005), 
LRes47616 = reshape_layer(Max99005, [2, 1], Res47616), 
LFla49273 = flatten_layer(Res47616, Fla49273), 
LCon29267 = concatenate_layer([Fla49273,[[0.9704, 0.954, 0.8691, 0.6991, 0.808, 0.5712, 0.8086, 0.9951, 0.1975, 0.1859, 0.1675, 0.3123, 0.0359, 0.397, 0.2012, 0.4316, 0.0481, 0.3872, 0.7389, 0.4057, 0.323, 0.6204, 0.9059, 0.1972, 0.641, 0.2555, 0.086, 0.0118, 0.4298, 0.5269, 0.3116, 0.7934, 0.3955, 0.0962]]], 1, Con29267), 
LSub79790 = subtract_layer([[[[[0.1373, 0.582], [0.1759, 0.5463]], [[0.2166, 0.0483], [0.4941, 0.7439]], [[0.8079, 0.0974], [0.6023, 0.7709]]], [[[0.5652, 0.6279], [0.1822, 0.9883]], [[0.8171, 0.1187], [0.6676, 0.5824]], [[0.4113, 0.3073], [0.8685, 0.8013]]], [[[0.5123, 0.3003], [0.9181, 0.1887]], [[0.1223, 0.3723], [0.5149, 0.4968]], [[0.0979, 0.7214], [0.2621, 0.9229]]]]], [[[[[0.3488, 0.6185], [0.1491, 0.937]], [[0.7197, 0.7125], [0.8613, 0.2484]], [[0.7822, 0.7353], [0.6595, 0.389]]], [[[0.3924, 0.4882], [0.0275, 0.9876]], [[0.4054, 0.7849], [0.1492, 0.052]], [[0.3831, 0.9774], [0.5485, 0.4809]]], [[[0.4754, 0.7958], [0.9027, 0.5878]], [[0.9153, 0.498], [0.12, 0.6333]], [[0.7258, 0.7419], [0.265, 0.2354]]]]], Sub79790), 
LRes49572 = reshape_layer(Sub79790, [3, 3, 4], Res49572), 
LRes81344 = reshape_layer(Res49572, [3, 12], Res81344), 
LZer49386 = zero_padding1D_layer([[[1.3047, 1.1697]]], 1, 1, Zer49386), 
LCon75788 = concatenate_layer([Zer49386,[[[0.1246, 0.3505, 0.098, 0.9365, 0.3968, 0.6669, 0.2559, 0.1149, 0.7282, 0.0657], [0.2675, 0.7775, 0.3372, 0.4708, 0.7679, 0.5181, 0.8393, 0.896, 0.1143, 0.6545], [0.6804, 0.8489, 0.5043, 0.1878, 0.2521, 0.6215, 0.9315, 0.0048, 0.6495, 0.5191]]]], 2, Con75788), 
LAve51274 = average_layer([Res81344,Con75788], Ave51274), 
LFla55192 = flatten_layer(Ave51274, Fla55192), 
LBat57671 = batch_normalization_layer([[1.8089, 1.0557, 1.528]], 1, 0.5789571438460369, [0.6115, 0.1311, 0.4078], [0.5954, 0.1676, 0.1162], [0.3825, 0.8071, 0.6619], [0.3802, 0.3696, 0.8522], Bat57671), 
LCon1398 = concatenate_layer([Bat57671,[[0.5759, 0.7916, 0.4214, 0.5058, 0.9528, 0.746, 0.786, 0.3958, 0.2342, 0.4704, 0.1248, 0.5803, 0.3145, 0.284, 0.0538, 0.2653, 0.3448, 0.726, 0.5877, 0.8974, 0.6815, 0.6381, 0.8077, 0.6957, 0.9744, 0.1392, 0.0325, 0.491, 0.9244, 0.2597, 0.9161, 0.4547, 0.1614]]], 1, Con1398), 
LAve7581 = average_layer([Fla55192,Con1398], Ave7581), 
LDot88326 = dot_layer(Con29267,Ave7581, 1, 1, Dot88326), 
LRes9266 = reshape_layer(Dot88326, [1, 1], Res9266), 
LGlo75922 = global_max_pool1D_layer([[[1.4247]]], Glo75922), 
LRes6194 = reshape_layer(Glo75922, [1, 1], Res6194), 
LMax64371 = max_pool1D_layer(Res6194, 1, Max64371), 
LSub83784 = subtract_layer(Res9266,Max64371, Sub83784), 
exec_layers([LMax99005,LRes47616,LFla49273,LCon29267,LSub79790,LRes49572,LRes81344,LZer49386,LCon75788,LAve51274,LFla55192,LBat57671,LCon1398,LAve7581,LDot88326,LRes9266,LGlo75922,LRes6194,LMax64371,LSub83784],["Max99005","Res47616","Fla49273","Con29267","Sub79790","Res49572","Res81344","Zer49386","Con75788","Ave51274","Fla55192","Bat57671","Con1398","Ave7581","Dot88326","Res9266","Glo75922","Res6194","Max64371","Sub83784"],Sub83784,"Sub83784")

Actual (Unparsed): [[[5.2563681]]]

Expected (Unparsed): [[[5.256368069648628]]]

Actual:   [[[5.2564]]]

Expected: [[[5.2564]]]