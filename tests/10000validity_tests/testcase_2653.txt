import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Max2250 = tf.keras.layers.Input(shape=([2, 2, 2]))
in1Max2250 = tf.keras.layers.Input(shape=([2, 2, 2]))
in0Con72821 = tf.keras.layers.Input(shape=([3, 2, 1]))
in0Sub13432 = tf.keras.layers.Input(shape=([3, 2, 3]))
in1Sub13432 = tf.keras.layers.Input(shape=([3, 2, 3]))
in0Max36480 = tf.keras.layers.Input(shape=([1, 2]))
in1Max36480 = tf.keras.layers.Input(shape=([1, 2]))
in0Con18536 = tf.keras.layers.Input(shape=([3, 2, 2]))

Max2250 = keras.layers.Maximum(name = 'Max2250', )([in0Max2250,in1Max2250])
Cro94782 = keras.layers.Cropping2D(cropping=((1, 0), (0, 1)), name = 'Cro94782', )(Max2250)
Zer34042 = keras.layers.ZeroPadding2D(padding=((2, 0), (1, 0)), name = 'Zer34042', )(Cro94782)
Con72821 = keras.layers.Concatenate(axis=3, name = 'Con72821', )([Zer34042,in0Con72821])
Sub13432 = keras.layers.Subtract(name = 'Sub13432', )([in0Sub13432,in1Sub13432])
Max36480 = keras.layers.Maximum(name = 'Max36480', )([in0Max36480,in1Max36480])
Thr45817 = keras.layers.ThresholdedReLU(theta=2.3331234038469977, name = 'Thr45817', )(Max36480)
Res34131 = keras.layers.Reshape((1, 2, 1), name = 'Res34131', )(Thr45817)
Max44916 = keras.layers.MaxPool2D(pool_size=(1, 2), name = 'Max44916', )(Res34131)
Zer27917 = keras.layers.ZeroPadding2D(padding=((2, 0), (1, 0)), name = 'Zer27917', )(Max44916)
Con18536 = keras.layers.Concatenate(axis=3, name = 'Con18536', )([Zer27917,in0Con18536])
Ave21809 = keras.layers.Average(name = 'Ave21809', )([Sub13432,Con18536])
Ave44095 = keras.layers.Average(name = 'Ave44095', )([Con72821,Ave21809])
model = tf.keras.models.Model(inputs=[in0Max2250,in1Max2250,in0Con72821,in0Sub13432,in1Sub13432,in0Max36480,in1Max36480,in0Con18536], outputs=Ave44095)
in0Max2250 = tf.constant([[[[0.9136, 0.6592], [0.6973, 0.5739]], [[0.7562, 0.6205], [0.9844, 0.8439]]]])
in1Max2250 = tf.constant([[[[0.2427, 0.2637], [0.816, 0.7412]], [[0.6086, 0.793], [0.9572, 0.238]]]])
in0Con72821 = tf.constant([[[[0.8388], [0.0574]], [[0.7115], [0.1542]], [[0.0452], [0.822]]]])
in0Sub13432 = tf.constant([[[[0.4002, 0.0963, 0.234], [0.7553, 0.7982, 0.3735]], [[0.7514, 0.7653, 0.9923], [0.4246, 0.72, 0.8909]], [[0.5562, 0.6962, 0.8269], [0.6718, 0.4437, 0.3348]]]])
in1Sub13432 = tf.constant([[[[0.2782, 0.4569, 0.1829], [0.1752, 0.6089, 0.2032]], [[0.0792, 0.8055, 0.1067], [0.316, 0.7558, 0.5912]], [[0.2299, 0.0451, 0.1559], [0.8181, 0.7108, 0.372]]]])
in0Max36480 = tf.constant([[[0.2135, 0.9164]]])
in1Max36480 = tf.constant([[[0.1328, 0.7637]]])
in0Con18536 = tf.constant([[[[0.6318, 0.7776], [0.4153, 0.9146]], [[0.9091, 0.8382], [0.543, 0.9698]], [[0.4501, 0.1304], [0.6651, 0.8234]]]])
print (np.array2string(model.predict([in0Max2250,in1Max2250,in0Con72821,in0Sub13432,in1Sub13432,in0Max36480,in1Max36480,in0Con18536],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Ave44095.png')

LMax2250 = maximum_layer([[[[[0.9136, 0.6592], [0.6973, 0.5739]], [[0.7562, 0.6205], [0.9844, 0.8439]]]], [[[[0.2427, 0.2637], [0.816, 0.7412]], [[0.6086, 0.793], [0.9572, 0.238]]]]], Max2250), 
LCro94782 = cropping2D_layer(Max2250, 1, 0, 0, 1, Cro94782), 
LZer34042 = zero_padding2D_layer(Cro94782, 2, 0, 1, 0, Zer34042), 
LCon72821 = concatenate_layer([Zer34042,[[[[0.8388], [0.0574]], [[0.7115], [0.1542]], [[0.0452], [0.822]]]]], 3, Con72821), 
LSub13432 = subtract_layer([[[[0.4002, 0.0963, 0.234], [0.7553, 0.7982, 0.3735]], [[0.7514, 0.7653, 0.9923], [0.4246, 0.72, 0.8909]], [[0.5562, 0.6962, 0.8269], [0.6718, 0.4437, 0.3348]]]], [[[[0.2782, 0.4569, 0.1829], [0.1752, 0.6089, 0.2032]], [[0.0792, 0.8055, 0.1067], [0.316, 0.7558, 0.5912]], [[0.2299, 0.0451, 0.1559], [0.8181, 0.7108, 0.372]]]], Sub13432), 
LMax36480 = maximum_layer([[[[0.2135, 0.9164]]], [[[0.1328, 0.7637]]]], Max36480), 
LThr45817 = thresholded_relu_layer(Max36480, 2.3331234038469977, Thr45817), 
LRes34131 = reshape_layer(Thr45817, [1, 2, 1], Res34131), 
LMax44916 = max_pool2D_layer(Res34131, 1, 2, Max44916), 
LZer27917 = zero_padding2D_layer(Max44916, 2, 0, 1, 0, Zer27917), 
LCon18536 = concatenate_layer([Zer27917,[[[[0.6318, 0.7776], [0.4153, 0.9146]], [[0.9091, 0.8382], [0.543, 0.9698]], [[0.4501, 0.1304], [0.6651, 0.8234]]]]], 3, Con18536), 
LAve21809 = average_layer([Sub13432,Con18536], Ave21809), 
LAve44095 = average_layer([Con72821,Ave21809], Ave44095), 
exec_layers([LMax2250,LCro94782,LZer34042,LCon72821,LSub13432,LMax36480,LThr45817,LRes34131,LMax44916,LZer27917,LCon18536,LAve21809,LAve44095],["Max2250","Cro94782","Zer34042","Con72821","Sub13432","Max36480","Thr45817","Res34131","Max44916","Zer27917","Con18536","Ave21809","Ave44095"],Ave44095,"Ave44095")

Actual (Unparsed): [[[[0.0305000, 0.0678000, 0.6265750], [0.1450250, 0.1511500, 0.2999250]], [[0.1680500, 0.2172250, 0.7867000], [0.0271500, 0.1268000, 0.3944750]], [[0.0815750, 0.2753000, 0.2229500], [0.3415250, 0.4960000, 0.6075500]]]]

Expected (Unparsed): [[[[0.0305,0.06780000000000001,0.626575],[0.145025,0.15115,0.299925]],[[0.16804999999999998,0.217225,0.7867],[0.027149999999999994,0.1268,0.394475]],[[0.08157500000000001,0.2753,0.22294999999999998],[0.34152499999999997,0.496,0.60755]]]]

Actual:   [[[[0.0305, 0.0678, 0.6266], [0.1451, 0.1512, 0.3]], [[0.1681, 0.2173, 0.7867], [0.0272, 0.1268, 0.3945]], [[0.0816, 0.2753, 0.223], [0.3416, 0.496, 0.6076]]]]

Expected: [[[[0.0305, 0.0679, 0.6266], [0.1451, 0.1512, 0.3]], [[0.1681, 0.2173, 0.7867], [0.0272, 0.1268, 0.3945]], [[0.0816, 0.2753, 0.223], [0.3416, 0.496, 0.6076]]]]