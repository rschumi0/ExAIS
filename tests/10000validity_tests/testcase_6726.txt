import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Con81597 = tf.keras.layers.Input(shape=([2, 1, 1, 1]))

Con81597 = keras.layers.Conv3DTranspose(3, (2, 1, 1),strides=(1, 1, 1), padding='valid', name = 'Con81597', )(in0Con81597)
Res13278 = keras.layers.Reshape((3, 1, 3), name = 'Res13278', )(Con81597)
Res42083 = keras.layers.Reshape((3, 3), name = 'Res42083', )(Res13278)
Up_98765 = keras.layers.UpSampling1D(size=(2), name = 'Up_98765', )(Res42083)
model = tf.keras.models.Model(inputs=[in0Con81597], outputs=Up_98765)
w = model.get_layer('Con81597').get_weights() 
w[0] = np.array([[[[[0.4442], [0.9814], [0.5527]]]], [[[[0.0652], [0.0549], [0.6921]]]]])
w[1] = np.array([0, 0, 0])
model.get_layer('Con81597').set_weights(w) 
in0Con81597 = tf.constant([[[[[0.1104]]], [[[0.5279]]]]])
print (np.array2string(model.predict([in0Con81597],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Up_98765.png')

LCon81597 = conv3D_transpose_layer([[[[[0.1104]]], [[[0.5279]]]]], 2, 1, 1,[[[[[0.4442], [0.9814], [0.5527]]]], [[[[0.0652], [0.0549], [0.6921]]]]],[0, 0, 0], 1, 1, 1, false, Con81597), 
LRes13278 = reshape_layer(Con81597, [3, 1, 3], Res13278), 
LRes42083 = reshape_layer(Res13278, [3, 3], Res42083), 
LUp_98765 = up_sampling1D_layer(Res42083, 2, Up_98765), 
exec_layers([LCon81597,LRes13278,LRes42083,LUp_98765],["Con81597","Res13278","Res42083","Up_98765"],Up_98765,"Up_98765")

Actual (Unparsed): [[[0.0490397, 0.1083466, 0.0610181], [0.0490397, 0.1083466, 0.0610181], [0.2416913, 0.5241420, 0.3681782], [0.2416913, 0.5241420, 0.3681782], [0.0344191, 0.0289817, 0.3653596], [0.0344191, 0.0289817, 0.3653596]]]

Expected (Unparsed): [[[0.049039679999999995,0.10834656000000001,0.061018079999999995],[0.049039679999999995,0.10834656000000001,0.061018079999999995],[0.24169126,0.5241420200000001,0.36817817],[0.24169126,0.5241420200000001,0.36817817],[0.03441908,0.02898171,0.36535959000000007],[0.03441908,0.02898171,0.36535959000000007]]]

Actual:   [[[0.0491, 0.1084, 0.0611], [0.0491, 0.1084, 0.0611], [0.2417, 0.5242, 0.3682], [0.2417, 0.5242, 0.3682], [0.0345, 0.029, 0.3654], [0.0345, 0.029, 0.3654]]]

Expected: [[[0.0491, 0.1084, 0.0611], [0.0491, 0.1084, 0.0611], [0.2417, 0.5242, 0.3682], [0.2417, 0.5242, 0.3682], [0.0345, 0.029, 0.3654], [0.0345, 0.029, 0.3654]]]