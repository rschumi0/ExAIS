import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Up_35513 = tf.keras.layers.Input(shape=([2, 1, 1, 1]))
in0Dot76693 = tf.keras.layers.Input(shape=([3, 2]))
in1Dot76693 = tf.keras.layers.Input(shape=([3, 2]))
in0Max42470 = tf.keras.layers.Input(shape=([2, 2]))
in1Max42470 = tf.keras.layers.Input(shape=([2, 2]))
in0Con71615 = tf.keras.layers.Input(shape=([3, 1]))
in0Con83610 = tf.keras.layers.Input(shape=([95]))

Up_35513 = keras.layers.UpSampling3D(size=(1, 2, 1), name = 'Up_35513', )(in0Up_35513)
Res54269 = keras.layers.Reshape((2, 2, 1), name = 'Res54269', )(Up_35513)
Con47934 = keras.layers.Conv2DTranspose(2, (2, 1),strides=(1, 12), padding='same', name = 'Con47934', )(Res54269)
Res23529 = keras.layers.Reshape((2, 48), name = 'Res23529', )(Con47934)
Fla90560 = keras.layers.Flatten(name = 'Fla90560', )(Res23529)
Dot76693 = keras.layers.Dot(axes=(2, 2), name = 'Dot76693', )([in0Dot76693,in1Dot76693])
Max42470 = keras.layers.Maximum(name = 'Max42470', )([in0Max42470,in1Max42470])
Zer96009 = keras.layers.ZeroPadding1D(padding=((1, 0)), name = 'Zer96009', )(Max42470)
Con71615 = keras.layers.Concatenate(axis=2, name = 'Con71615', )([Zer96009,in0Con71615])
Min15665 = keras.layers.Minimum(name = 'Min15665', )([Dot76693,Con71615])
Res43359 = keras.layers.Reshape((3, 3, 1), name = 'Res43359', )(Min15665)
Glo66204 = keras.layers.GlobalMaxPool2D(name = 'Glo66204', )(Res43359)
Con83610 = keras.layers.Concatenate(axis=1, name = 'Con83610', )([Glo66204,in0Con83610])
Mul67415 = keras.layers.Multiply(name = 'Mul67415', )([Fla90560,Con83610])
model = tf.keras.models.Model(inputs=[in0Up_35513,in0Dot76693,in1Dot76693,in0Max42470,in1Max42470,in0Con71615,in0Con83610], outputs=Mul67415)
w = model.get_layer('Con47934').get_weights() 
w[0] = np.array([[[[0.3805], [0.3581]]], [[[0.1559], [0.0459]]]])
w[1] = np.array([0, 0])
model.get_layer('Con47934').set_weights(w) 
in0Up_35513 = tf.constant([[[[[1.6752]]], [[[1.7895]]]]])
in0Dot76693 = tf.constant([[[0.0547, 0.9863], [0.7837, 0.4282], [0.3997, 0.9267]]])
in1Dot76693 = tf.constant([[[0.4393, 0.0168], [0.673, 0.6581], [0.7945, 0.0384]]])
in0Max42470 = tf.constant([[[0.0889, 0.9364], [0.6085, 0.9626]]])
in1Max42470 = tf.constant([[[0.5026, 0.4562], [0.4345, 0.6331]]])
in0Con71615 = tf.constant([[[0.9641], [0.7925], [0.3794]]])
in0Con83610 = tf.constant([[0.3225, 0.1177, 0.7953, 0.0706, 0.7574, 0.344, 0.089, 0.5859, 0.1865, 0.0902, 0.6967, 0.2372, 0.3493, 0.3969, 0.5528, 0.0896, 0.3237, 0.2333, 0.3444, 0.1491, 0.9405, 0.1837, 0.7254, 0.2799, 0.8108, 0.1418, 0.2987, 0.2746, 0.2677, 0.7233, 0.4, 0.7887, 0.5533, 0.9924, 0.0098, 0.6265, 0.3977, 0.0117, 0.7035, 0.1697, 0.7303, 0.6739, 0.4058, 0.5781, 0.6394, 0.2467, 0.8622, 0.7593, 0.8544, 0.0769, 0.1574, 0.0041, 0.9626, 0.9336, 0.3196, 0.6143, 0.2924, 0.5474, 0.0319, 0.8128, 0.8962, 1, 0.7401, 0.7173, 0.347, 0.7574, 0.9938, 0.1855, 0.129, 0.2989, 0.6854, 0.8922, 0.2443, 0.4976, 0.9652, 0.0901, 0.2849, 0.1286, 0.9979, 0.1198, 0.6278, 0.1452, 0.4035, 0.8856, 0.5962, 0.6497, 0.1756, 0.197, 0.4039, 0.8106, 0.1081, 0.0821, 0.4463, 0.3255, 0.2759]])
print (np.array2string(model.predict([in0Up_35513,in0Dot76693,in1Dot76693,in0Max42470,in1Max42470,in0Con71615,in0Con83610],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Mul67415.png')

LUp_35513 = up_sampling3D_layer([[[[[1.6752]]], [[[1.7895]]]]], 1, 2, 1, Up_35513), 
LRes54269 = reshape_layer(Up_35513, [2, 2, 1], Res54269), 
LCon47934 = conv2D_transpose_layer(Res54269, 2, 1,[[[[0.3805], [0.3581]]], [[[0.1559], [0.0459]]]],[0, 0], 1, 12, true, Con47934), 
LRes23529 = reshape_layer(Con47934, [2, 48], Res23529), 
LFla90560 = flatten_layer(Res23529, Fla90560), 
LDot76693 = dot_layer([[[0.0547, 0.9863], [0.7837, 0.4282], [0.3997, 0.9267]]], [[[0.4393, 0.0168], [0.673, 0.6581], [0.7945, 0.0384]]], 2, 2, Dot76693), 
LMax42470 = maximum_layer([[[[0.0889, 0.9364], [0.6085, 0.9626]]], [[[0.5026, 0.4562], [0.4345, 0.6331]]]], Max42470), 
LZer96009 = zero_padding1D_layer(Max42470, 1, 0, Zer96009), 
LCon71615 = concatenate_layer([Zer96009,[[[0.9641], [0.7925], [0.3794]]]], 2, Con71615), 
LMin15665 = minimum_layer([Dot76693,Con71615], Min15665), 
LRes43359 = reshape_layer(Min15665, [3, 3, 1], Res43359), 
LGlo66204 = global_max_pool2D_layer(Res43359, Glo66204), 
LCon83610 = concatenate_layer([Glo66204,[[0.3225, 0.1177, 0.7953, 0.0706, 0.7574, 0.344, 0.089, 0.5859, 0.1865, 0.0902, 0.6967, 0.2372, 0.3493, 0.3969, 0.5528, 0.0896, 0.3237, 0.2333, 0.3444, 0.1491, 0.9405, 0.1837, 0.7254, 0.2799, 0.8108, 0.1418, 0.2987, 0.2746, 0.2677, 0.7233, 0.4, 0.7887, 0.5533, 0.9924, 0.0098, 0.6265, 0.3977, 0.0117, 0.7035, 0.1697, 0.7303, 0.6739, 0.4058, 0.5781, 0.6394, 0.2467, 0.8622, 0.7593, 0.8544, 0.0769, 0.1574, 0.0041, 0.9626, 0.9336, 0.3196, 0.6143, 0.2924, 0.5474, 0.0319, 0.8128, 0.8962, 1, 0.7401, 0.7173, 0.347, 0.7574, 0.9938, 0.1855, 0.129, 0.2989, 0.6854, 0.8922, 0.2443, 0.4976, 0.9652, 0.0901, 0.2849, 0.1286, 0.9979, 0.1198, 0.6278, 0.1452, 0.4035, 0.8856, 0.5962, 0.6497, 0.1756, 0.197, 0.4039, 0.8106, 0.1081, 0.0821, 0.4463, 0.3255, 0.2759]]], 1, Con83610), 
LMul67415 = multiply_layer([Fla90560,Con83610], Mul67415), 
exec_layers([LUp_35513,LRes54269,LCon47934,LRes23529,LFla90560,LDot76693,LMax42470,LZer96009,LCon71615,LMin15665,LRes43359,LGlo66204,LCon83610,LMul67415],["Up_35513","Res54269","Con47934","Res23529","Fla90560","Dot76693","Max42470","Zer96009","Con71615","Min15665","Res43359","Glo66204","Con83610","Mul67415"],Mul67415,"Mul67415")

Actual (Unparsed): [[0.5601969, 0.1934642, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.1784121, 0.4863901, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.7153126, 0.6132128, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.8405134, 0.1753369, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000]]

Expected (Unparsed): [[0.560196914925432,0.1934642412,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.17841206664,0.48639009849599996,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.715312558899,0.6132128166720001,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.840513453246,0.175336951209,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0]]

Actual:   [[0.5602, 0.1935, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.1785, 0.4864, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.7154, 0.6133, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.8406, 0.1754, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]]

Expected: [[0.5602, 0.1935, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.1785, 0.4864, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.7154, 0.6133, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.8406, 0.1754, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]]