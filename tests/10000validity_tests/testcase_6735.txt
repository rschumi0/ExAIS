import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Max32194 = tf.keras.layers.Input(shape=([1, 1, 1]))
in0Con2129 = tf.keras.layers.Input(shape=([1, 4, 4, 1]))
in0Mul32894 = tf.keras.layers.Input(shape=([1, 1, 2, 2]))
in1Mul32894 = tf.keras.layers.Input(shape=([1, 1, 2, 2]))
in0Up_44040 = tf.keras.layers.Input(shape=([1, 2, 4, 1]))
in0Con77602 = tf.keras.layers.Input(shape=([1, 4, 4, 1]))

Max32194 = keras.layers.MaxPool2D(pool_size=(1, 1), name = 'Max32194', )(in0Max32194)
Res31936 = keras.layers.Reshape((1, 1, 1, 1), name = 'Res31936', )(Max32194)
Zer64096 = keras.layers.ZeroPadding3D(padding=((0, 0), (3, 0), (3, 0)), name = 'Zer64096', )(Res31936)
Con2129 = keras.layers.Concatenate(axis=4, name = 'Con2129', )([Zer64096,in0Con2129])
Mul32894 = keras.layers.Multiply(name = 'Mul32894', )([in0Mul32894,in1Mul32894])
Zer64013 = keras.layers.ZeroPadding3D(padding=((0, 0), (3, 0), (2, 0)), name = 'Zer64013', )(Mul32894)
Up_44040 = keras.layers.UpSampling3D(size=(1, 2, 1), name = 'Up_44040', )(in0Up_44040)
Con77602 = keras.layers.Concatenate(axis=4, name = 'Con77602', )([Up_44040,in0Con77602])
Ave13095 = keras.layers.Average(name = 'Ave13095', )([Zer64013,Con77602])
Ave32043 = keras.layers.Average(name = 'Ave32043', )([Con2129,Ave13095])
Res18801 = keras.layers.Reshape((1, 4, 8), name = 'Res18801', )(Ave32043)
Sep80797 = keras.layers.SeparableConv2D(4, (1, 2),strides=(1, 1), padding='valid', name = 'Sep80797', )(Res18801)
model = tf.keras.models.Model(inputs=[in0Max32194,in0Con2129,in0Mul32894,in1Mul32894,in0Up_44040,in0Con77602], outputs=Sep80797)
w = model.get_layer('Sep80797').get_weights() 
w[0] = np.array([[[[0.4445], [0.0631], [0.6223], [0.8532], [0.165], [0.6722], [0.2148], [0.9267]], [[0.6779], [0.0368], [0.3874], [0.7272], [0.9038], [0.8029], [0.1966], [0.7986]]]])
w[1] = np.array([[[[0.5206, 0.7691, 0.0001, 0.8875], [0.6784, 0.5801, 0.2854, 0.5175], [0.2633, 0.7361, 0.2691, 0.6716], [0.6817, 0.1382, 0.7201, 0.1799], [0.6369, 0.8666, 0.8998, 0.5283], [0.4262, 0.2698, 0.3567, 0.1717], [0.794, 0.4124, 0.621, 0.8273], [0.3575, 0.6272, 0.8964, 0.2052]]]])
w[2] = np.array([0, 0, 0, 0])
model.get_layer('Sep80797').set_weights(w) 
in0Max32194 = tf.constant([[[[1.1043]]]])
in0Con2129 = tf.constant([[[[[0.7372], [0.1922], [0.8968], [0.2247]], [[0.0258], [0.3614], [0.5073], [0.4163]], [[0.3946], [0.6671], [0.3423], [0.5802]], [[0.0405], [0.3828], [0.2032], [0.7223]]]]])
in0Mul32894 = tf.constant([[[[[0.9821, 0.5196], [0.3864, 0.9852]]]]])
in1Mul32894 = tf.constant([[[[[0.7354, 0.8834], [0.754, 0.7938]]]]])
in0Up_44040 = tf.constant([[[[[1.5503], [1.4271], [1.7825], [1.2819]], [[1.1106], [1.5017], [1.5234], [1.8028]]]]])
in0Con77602 = tf.constant([[[[[0.0423], [0.7725], [0.2442], [0.1306]], [[0.3507], [0.9871], [0.8771], [0.5176]], [[0.8776], [0.3899], [0.362], [0.1353]], [[0.9836], [0.1251], [0.4148], [0.336]]]]])
print (np.array2string(model.predict([in0Max32194,in0Con2129,in0Mul32894,in1Mul32894,in0Up_44040,in0Con77602],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Sep80797.png')

LMax32194 = max_pool2D_layer([[[[1.1043]]]], 1, 1, Max32194), 
LRes31936 = reshape_layer(Max32194, [1, 1, 1, 1], Res31936), 
LZer64096 = zero_padding3D_layer(Res31936, 0, 0, 3, 0, 3, 0, Zer64096), 
LCon2129 = concatenate_layer([Zer64096,[[[[[0.7372], [0.1922], [0.8968], [0.2247]], [[0.0258], [0.3614], [0.5073], [0.4163]], [[0.3946], [0.6671], [0.3423], [0.5802]], [[0.0405], [0.3828], [0.2032], [0.7223]]]]]], 4, Con2129), 
LMul32894 = multiply_layer([[[[[[0.9821, 0.5196], [0.3864, 0.9852]]]]], [[[[[0.7354, 0.8834], [0.754, 0.7938]]]]]], Mul32894), 
LZer64013 = zero_padding3D_layer(Mul32894, 0, 0, 3, 0, 2, 0, Zer64013), 
LUp_44040 = up_sampling3D_layer([[[[[1.5503], [1.4271], [1.7825], [1.2819]], [[1.1106], [1.5017], [1.5234], [1.8028]]]]], 1, 2, 1, Up_44040), 
LCon77602 = concatenate_layer([Up_44040,[[[[[0.0423], [0.7725], [0.2442], [0.1306]], [[0.3507], [0.9871], [0.8771], [0.5176]], [[0.8776], [0.3899], [0.362], [0.1353]], [[0.9836], [0.1251], [0.4148], [0.336]]]]]], 4, Con77602), 
LAve13095 = average_layer([Zer64013,Con77602], Ave13095), 
LAve32043 = average_layer([Con2129,Ave13095], Ave32043), 
LRes18801 = reshape_layer(Ave32043, [1, 4, 8], Res18801), 
LSep80797 = separable_conv2D_layer(Res18801, 1, 2,[[[[[0.4445], [0.0631], [0.6223], [0.8532], [0.165], [0.6722], [0.2148], [0.9267]], [[0.6779], [0.0368], [0.3874], [0.7272], [0.9038], [0.8029], [0.1966], [0.7986]]]],[[[[0.5206, 0.7691, 0.0001, 0.8875], [0.6784, 0.5801, 0.2854, 0.5175], [0.2633, 0.7361, 0.2691, 0.6716], [0.6817, 0.1382, 0.7201, 0.1799], [0.6369, 0.8666, 0.8998, 0.5283], [0.4262, 0.2698, 0.3567, 0.1717], [0.794, 0.4124, 0.621, 0.8273], [0.3575, 0.6272, 0.8964, 0.2052]]]]],[0, 0, 0, 0], 1, 1, false, Sep80797), 
exec_layers([LMax32194,LRes31936,LZer64096,LCon2129,LMul32894,LZer64013,LUp_44040,LCon77602,LAve13095,LAve32043,LRes18801,LSep80797],["Max32194","Res31936","Zer64096","Con2129","Mul32894","Zer64013","Up_44040","Con77602","Ave13095","Ave32043","Res18801","Sep80797"],Sep80797,"Sep80797")

Actual (Unparsed): [[[[1.5804180, 1.6081396, 1.6365364, 1.3102021], [1.5818431, 1.5818787, 1.7677266, 1.2588198], [1.7302848, 1.8601095, 2.0804209, 1.4423340]]]]

Expected (Unparsed): [[[[1.58041803768925,1.6081396158504997,1.6365363939275002,1.3102021243114998],[1.58184312598975,1.58187871971875,1.7677265770810002,1.258819805455],[1.7302848324444258,1.8601095452982597,2.0804208848000165,1.4423340281393235]]]]

Actual:   [[[[1.5805, 1.6082, 1.6366, 1.3103], [1.5819, 1.5819, 1.7678, 1.2589], [1.7303, 1.8602, 2.0805, 1.4424]]]]

Expected: [[[[1.5805, 1.6082, 1.6366, 1.3103], [1.5819, 1.5819, 1.7678, 1.2589], [1.7303, 1.8602, 2.0805, 1.4424]]]]