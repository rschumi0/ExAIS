import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Sub43635 = tf.keras.layers.Input(shape=([3, 3]))
in1Sub43635 = tf.keras.layers.Input(shape=([3, 3]))
in0Con67634 = tf.keras.layers.Input(shape=([1, 4]))
in0Ave28401 = tf.keras.layers.Input(shape=([1, 2]))
in1Ave28401 = tf.keras.layers.Input(shape=([1, 2]))

Sub43635 = keras.layers.Subtract(name = 'Sub43635', )([in0Sub43635,in1Sub43635])
Res25105 = keras.layers.Reshape((3, 3, 1), name = 'Res25105', )(Sub43635)
Loc96736 = keras.layers.LocallyConnected2D(3, (3, 2),strides=(2, 1), name = 'Loc96736', )(Res25105)
Res29769 = keras.layers.Reshape((1, 6), name = 'Res29769', )(Loc96736)
Con67634 = keras.layers.Concatenate(axis=2, name = 'Con67634', )([Res29769,in0Con67634])
Ave28401 = keras.layers.Average(name = 'Ave28401', )([in0Ave28401,in1Ave28401])
Dot11627 = keras.layers.Dot(axes=(1, 1), name = 'Dot11627', )([Con67634,Ave28401])
model = tf.keras.models.Model(inputs=[in0Sub43635,in1Sub43635,in0Con67634,in0Ave28401,in1Ave28401], outputs=Dot11627)
w = model.get_layer('Loc96736').get_weights() 
w[0] = np.array([[[0.9571, 0.199, 0.6611], [0.7738, 0.5093, 0.6784], [0.5222, 0.2322, 0.8348], [0.936, 0.2237, 0.8489], [0.6108, 0.4762, 0.0264], [0.2997, 0.8846, 0.4855]], [[0.8575, 0.2023, 0.4063], [0.1487, 0.9718, 0.2438], [0.5028, 0.2717, 0.0186], [0.5516, 0.1153, 0.2539], [0.1093, 0.7832, 0.0097], [0.0709, 0.8847, 0.6647]]])
w[1] = np.array([[[0, 0, 0], [0, 0, 0]]])
model.get_layer('Loc96736').set_weights(w) 
in0Sub43635 = tf.constant([[[0.6218, 0.6641, 0.6852], [0.3882, 0.1652, 0.7483], [0.9387, 0.088, 0.4928]]])
in1Sub43635 = tf.constant([[[0.3802, 0.0594, 0.3904], [0.1268, 0.2041, 0.9584], [0.9893, 0.2118, 0.1901]]])
in0Con67634 = tf.constant([[[0.3347, 0.6731, 0.0588, 0.2631]]])
in0Ave28401 = tf.constant([[[0.8092, 0.076]]])
in1Ave28401 = tf.constant([[[0.4999, 0.7641]]])
print (np.array2string(model.predict([in0Sub43635,in1Sub43635,in0Con67634,in0Ave28401,in1Ave28401],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Dot11627.png')

LSub43635 = subtract_layer([[[0.6218, 0.6641, 0.6852], [0.3882, 0.1652, 0.7483], [0.9387, 0.088, 0.4928]]], [[[0.3802, 0.0594, 0.3904], [0.1268, 0.2041, 0.9584], [0.9893, 0.2118, 0.1901]]], Sub43635), 
LRes25105 = reshape_layer(Sub43635, [3, 3, 1], Res25105), 
LLoc96736 = locally_connected2D_layer(Res25105, 3, 2,[[[0.9571, 0.199, 0.6611], [0.7738, 0.5093, 0.6784], [0.5222, 0.2322, 0.8348], [0.936, 0.2237, 0.8489], [0.6108, 0.4762, 0.0264], [0.2997, 0.8846, 0.4855]], [[0.8575, 0.2023, 0.4063], [0.1487, 0.9718, 0.2438], [0.5028, 0.2717, 0.0186], [0.5516, 0.1153, 0.2539], [0.1093, 0.7832, 0.0097], [0.0709, 0.8847, 0.6647]]],[[[0, 0, 0], [0, 0, 0]]], 2, 1, Loc96736), 
LRes29769 = reshape_layer(Loc96736, [1, 6], Res29769), 
LCon67634 = concatenate_layer([Res29769,[[[0.3347, 0.6731, 0.0588, 0.2631]]]], 2, Con67634), 
LAve28401 = average_layer([[[[0.8092, 0.076]]], [[[0.4999, 0.7641]]]], Ave28401), 
LDot11627 = dot_layer(Con67634,Ave28401, 1, 1, Dot11627), 
exec_layers([LSub43635,LRes25105,LLoc96736,LRes29769,LCon67634,LAve28401,LDot11627],["Sub43635","Res25105","Loc96736","Res29769","Con67634","Ave28401","Dot11627"],Dot11627,"Dot11627")

Actual (Unparsed): [[[0.4786302, 0.3071555], [0.1796334, 0.1152777], [0.4540640, 0.2913904], [0.2846291, 0.1826575], [0.3566396, 0.2288694], [0.3033824, 0.1946922], [0.2190779, 0.1405907], [0.4405776, 0.2827357], [0.0384875, 0.0246989], [0.1722121, 0.1105152]]]

Expected (Unparsed): [[[0.4786302357980001,0.3071554969780001],[0.17963343217299998,0.11527770710299999],[0.4540639597455,0.2913903694005],[0.284629116941,0.182657490751],[0.356639631556,0.22886941751599998],[0.30338245226249994,0.19469222988749996],[0.219077885,0.140590735],[0.440577605,0.282735655],[0.038487539999999994,0.02469894],[0.172212105,0.11051515499999999]]]

Actual:   [[[0.4787, 0.3072], [0.1797, 0.1153], [0.4541, 0.2914], [0.2847, 0.1827], [0.3567, 0.2289], [0.3034, 0.1947], [0.2191, 0.1406], [0.4406, 0.2828], [0.0385, 0.0247], [0.1723, 0.1106]]]

Expected: [[[0.4787, 0.3072], [0.1797, 0.1153], [0.4541, 0.2914], [0.2847, 0.1827], [0.3567, 0.2289], [0.3034, 0.1947], [0.2191, 0.1406], [0.4406, 0.2828], [0.0385, 0.0247], [0.1723, 0.1106]]]