import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Dot851 = tf.keras.layers.Input(shape=([2]))
in1Dot851 = tf.keras.layers.Input(shape=([2]))

Dot851 = keras.layers.Dot(axes=(1, 1), name = 'Dot851', )([in0Dot851,in1Dot851])
Thr80809 = keras.layers.ThresholdedReLU(theta=3.577612689383171, name = 'Thr80809', )(Dot851)
Res20010 = keras.layers.Reshape((1, 1), name = 'Res20010', )(Thr80809)
Res87709 = keras.layers.Reshape((1, 1, 1), name = 'Res87709', )(Res20010)
Con58170 = keras.layers.Conv2DTranspose(3, (1, 1),strides=(1, 2), padding='valid', name = 'Con58170', )(Res87709)
model = tf.keras.models.Model(inputs=[in0Dot851,in1Dot851], outputs=Con58170)
w = model.get_layer('Con58170').get_weights() 
w[0] = np.array([[[[0.3688], [0.6568], [0.9231]]]])
w[1] = np.array([0, 0, 0])
model.get_layer('Con58170').set_weights(w) 
in0Dot851 = tf.constant([[0.4531, 0.1207]])
in1Dot851 = tf.constant([[0.0528, 0.7358]])
print (np.array2string(model.predict([in0Dot851,in1Dot851],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Con58170.png')

LDot851 = dot_layer([[0.4531, 0.1207]], [[0.0528, 0.7358]], 1, 1, Dot851), 
LThr80809 = thresholded_relu_layer(Dot851, 3.577612689383171, Thr80809), 
LRes20010 = reshape_layer(Thr80809, [1, 1], Res20010), 
LRes87709 = reshape_layer(Res20010, [1, 1, 1], Res87709), 
LCon58170 = conv2D_transpose_layer(Res87709, 1, 1,[[[[0.3688], [0.6568], [0.9231]]]],[0, 0, 0], 1, 2, false, Con58170), 
exec_layers([LDot851,LThr80809,LRes20010,LRes87709,LCon58170],["Dot851","Thr80809","Res20010","Res87709","Con58170"],Con58170,"Con58170")

Actual (Unparsed): [[[[0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000]]]]

Expected (Unparsed): [[[[0.0,0.0,0.0],[0,0,0]]]]

Actual:   [[[[0, 0, 0], [0, 0, 0]]]]

Expected: [[[[0, 0, 0], [0, 0, 0]]]]