import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Max71731 = tf.keras.layers.Input(shape=([2, 2, 1, 2]))
in1Max71731 = tf.keras.layers.Input(shape=([2, 2, 1, 2]))
in0Min69623 = tf.keras.layers.Input(shape=([2, 2]))
in1Min69623 = tf.keras.layers.Input(shape=([2, 2]))
in0Con62521 = tf.keras.layers.Input(shape=([2, 2]))

Max71731 = keras.layers.Maximum(name = 'Max71731', )([in0Max71731,in1Max71731])
Res23181 = keras.layers.Reshape((2, 2, 2), name = 'Res23181', )(Max71731)
Res84877 = keras.layers.Reshape((2, 4), name = 'Res84877', )(Res23181)
Min69623 = keras.layers.Minimum(name = 'Min69623', )([in0Min69623,in1Min69623])
Con62521 = keras.layers.Concatenate(axis=2, name = 'Con62521', )([Min69623,in0Con62521])
Max33304 = keras.layers.Maximum(name = 'Max33304', )([Res84877,Con62521])
ReL16775 = keras.layers.ReLU(max_value=9.732966340904277, negative_slope=6.298326083988865, threshold=4.99936212015948, name = 'ReL16775', )(Max33304)
model = tf.keras.models.Model(inputs=[in0Max71731,in1Max71731,in0Min69623,in1Min69623,in0Con62521], outputs=ReL16775)
in0Max71731 = tf.constant([[[[[0.4609, 0.4432]], [[0.2207, 0.661]]], [[[0.3653, 0.8341]], [[0.531, 0.3603]]]]])
in1Max71731 = tf.constant([[[[[0.641, 0.9559]], [[0.1379, 0.8361]]], [[[0.3846, 0.6921]], [[0.7258, 0.658]]]]])
in0Min69623 = tf.constant([[[0.7148, 0.9282], [0.4769, 0.8167]]])
in1Min69623 = tf.constant([[[0.9874, 0.2005], [0.3066, 0.1309]]])
in0Con62521 = tf.constant([[[0.1024, 0.5488], [0.1196, 0.9186]]])
print (np.array2string(model.predict([in0Max71731,in1Max71731,in0Min69623,in1Min69623,in0Con62521],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='ReL16775.png')

LMax71731 = maximum_layer([[[[[[0.4609, 0.4432]], [[0.2207, 0.661]]], [[[0.3653, 0.8341]], [[0.531, 0.3603]]]]], [[[[[0.641, 0.9559]], [[0.1379, 0.8361]]], [[[0.3846, 0.6921]], [[0.7258, 0.658]]]]]], Max71731), 
LRes23181 = reshape_layer(Max71731, [2, 2, 2], Res23181), 
LRes84877 = reshape_layer(Res23181, [2, 4], Res84877), 
LMin69623 = minimum_layer([[[[0.7148, 0.9282], [0.4769, 0.8167]]], [[[0.9874, 0.2005], [0.3066, 0.1309]]]], Min69623), 
LCon62521 = concatenate_layer([Min69623,[[[0.1024, 0.5488], [0.1196, 0.9186]]]], 2, Con62521), 
LMax33304 = maximum_layer([Res84877,Con62521], Max33304), 
LReL16775 = relu_layer(Max33304, 9.732966340904277, 6.298326083988865, 4.99936212015948, ReL16775), 
exec_layers([LMax71731,LRes23181,LRes84877,LMin69623,LCon62521,LMax33304,LReL16775],["Max71731","Res23181","Res84877","Min69623","Con62521","Max33304","ReL16775"],ReL16775,"ReL16775")

Actual (Unparsed): [[[-26.9855694, -25.4670429, -30.0975723, -26.2215825], [-29.0652765, -26.2341790, -26.9162879, -25.7019704]]]

Expected (Unparsed): [[[-26.98556935987109,-25.467042941021376,-30.097572277969988,-26.22158240588324],[-29.065276632804213,-26.234179058051218,-26.91628777294721,-25.701970503954158]]]

Actual:   [[[-26.9855, -25.467, -30.0975, -26.2215], [-29.0652, -26.2341, -26.9162, -25.7019]]]

Expected: [[[-26.9855, -25.467, -30.0975, -26.2215], [-29.0652, -26.2341, -26.9162, -25.7019]]]