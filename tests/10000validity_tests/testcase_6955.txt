import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Fla34747 = tf.keras.layers.Input(shape=([1, 1, 2]))

Fla34747 = keras.layers.Flatten(name = 'Fla34747', )(in0Fla34747)
Res91271 = keras.layers.Reshape((2, 1), name = 'Res91271', )(Fla34747)
Up_86058 = keras.layers.UpSampling1D(size=(2), name = 'Up_86058', )(Res91271)
model = tf.keras.models.Model(inputs=[in0Fla34747], outputs=Up_86058)
in0Fla34747 = tf.constant([[[[1.9263, 1.2541]]]])
print (np.array2string(model.predict([in0Fla34747],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Up_86058.png')

LFla34747 = flatten_layer([[[[1.9263, 1.2541]]]], Fla34747), 
LRes91271 = reshape_layer(Fla34747, [2, 1], Res91271), 
LUp_86058 = up_sampling1D_layer(Res91271, 2, Up_86058), 
exec_layers([LFla34747,LRes91271,LUp_86058],["Fla34747","Res91271","Up_86058"],Up_86058,"Up_86058")

Actual (Unparsed): [[[1.9263000], [1.9263000], [1.2541000], [1.2541000]]]

Expected (Unparsed): [[[1.9263],[1.9263],[1.2541],[1.2541]]]

Actual:   [[[1.9263], [1.9263], [1.2541], [1.2541]]]

Expected: [[[1.9263], [1.9263], [1.2541], [1.2541]]]