import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Add39741 = tf.keras.layers.Input(shape=([1, 2, 2]))
in1Add39741 = tf.keras.layers.Input(shape=([1, 2, 2]))
in0Glo43760 = tf.keras.layers.Input(shape=([1, 1]))
in0Con35054 = tf.keras.layers.Input(shape=([3]))
in0Ave45510 = tf.keras.layers.Input(shape=([1, 2, 1]))
in1Ave45510 = tf.keras.layers.Input(shape=([1, 2, 1]))
in0Con7342 = tf.keras.layers.Input(shape=([8, 3, 1]))

Add39741 = keras.layers.Add(name = 'Add39741', )([in0Add39741,in1Add39741])
Res33291 = keras.layers.Reshape((1, 4), name = 'Res33291', )(Add39741)
Fla26316 = keras.layers.Flatten(name = 'Fla26316', )(Res33291)
Glo43760 = keras.layers.GlobalMaxPool1D(name = 'Glo43760', )(in0Glo43760)
Con35054 = keras.layers.Concatenate(axis=1, name = 'Con35054', )([Glo43760,in0Con35054])
Mul26719 = keras.layers.Multiply(name = 'Mul26719', )([Fla26316,Con35054])
Res19706 = keras.layers.Reshape((4, 1), name = 'Res19706', )(Mul26719)
Res45746 = keras.layers.Reshape((4, 1, 1), name = 'Res45746', )(Res19706)
Res64634 = keras.layers.Reshape((4, 1, 1, 1), name = 'Res64634', )(Res45746)
Up_96001 = keras.layers.UpSampling3D(size=(2, 1, 2), name = 'Up_96001', )(Res64634)
Res94548 = keras.layers.Reshape((8, 1, 2), name = 'Res94548', )(Up_96001)
Zer72130 = keras.layers.ZeroPadding2D(padding=((0, 0), (2, 0)), name = 'Zer72130', )(Res94548)
Ave45510 = keras.layers.Average(name = 'Ave45510', )([in0Ave45510,in1Ave45510])
Zer60169 = keras.layers.ZeroPadding2D(padding=((7, 0), (1, 0)), name = 'Zer60169', )(Ave45510)
Con7342 = keras.layers.Concatenate(axis=3, name = 'Con7342', )([Zer60169,in0Con7342])
Ave41005 = keras.layers.Average(name = 'Ave41005', )([Zer72130,Con7342])
model = tf.keras.models.Model(inputs=[in0Add39741,in1Add39741,in0Glo43760,in0Con35054,in0Ave45510,in1Ave45510,in0Con7342], outputs=Ave41005)
in0Add39741 = tf.constant([[[[0.4386, 0.2159], [0.7655, 0.3187]]]])
in1Add39741 = tf.constant([[[[0.1707, 0.595], [0.2014, 0.4998]]]])
in0Glo43760 = tf.constant([[[1.6688]]])
in0Con35054 = tf.constant([[0.9368, 0.5348, 0.084]])
in0Ave45510 = tf.constant([[[[0.7027], [0.0518]]]])
in1Ave45510 = tf.constant([[[[0.5812], [0.5055]]]])
in0Con7342 = tf.constant([[[[0.3986], [0.8982], [0.9791]], [[0.9081], [0.231], [0.4427]], [[0.5772], [0.0829], [0.5477]], [[0.4196], [0.8037], [0.6935]], [[0.6215], [0.2421], [0.5683]], [[0.9888], [0.05], [0.0162]], [[0.8452], [0.024], [0.0568]], [[0.3611], [0.0952], [0.7502]]]])
print (np.array2string(model.predict([in0Add39741,in1Add39741,in0Glo43760,in0Con35054,in0Ave45510,in1Ave45510,in0Con7342],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Ave41005.png')

LAdd39741 = add_layer([[[[[0.4386, 0.2159], [0.7655, 0.3187]]]], [[[[0.1707, 0.595], [0.2014, 0.4998]]]]], Add39741), 
LRes33291 = reshape_layer(Add39741, [1, 4], Res33291), 
LFla26316 = flatten_layer(Res33291, Fla26316), 
LGlo43760 = global_max_pool1D_layer([[[1.6688]]], Glo43760), 
LCon35054 = concatenate_layer([Glo43760,[[0.9368, 0.5348, 0.084]]], 1, Con35054), 
LMul26719 = multiply_layer([Fla26316,Con35054], Mul26719), 
LRes19706 = reshape_layer(Mul26719, [4, 1], Res19706), 
LRes45746 = reshape_layer(Res19706, [4, 1, 1], Res45746), 
LRes64634 = reshape_layer(Res45746, [4, 1, 1, 1], Res64634), 
LUp_96001 = up_sampling3D_layer(Res64634, 2, 1, 2, Up_96001), 
LRes94548 = reshape_layer(Up_96001, [8, 1, 2], Res94548), 
LZer72130 = zero_padding2D_layer(Res94548, 0, 0, 2, 0, Zer72130), 
LAve45510 = average_layer([[[[[0.7027], [0.0518]]]], [[[[0.5812], [0.5055]]]]], Ave45510), 
LZer60169 = zero_padding2D_layer(Ave45510, 7, 0, 1, 0, Zer60169), 
LCon7342 = concatenate_layer([Zer60169,[[[[0.3986], [0.8982], [0.9791]], [[0.9081], [0.231], [0.4427]], [[0.5772], [0.0829], [0.5477]], [[0.4196], [0.8037], [0.6935]], [[0.6215], [0.2421], [0.5683]], [[0.9888], [0.05], [0.0162]], [[0.8452], [0.024], [0.0568]], [[0.3611], [0.0952], [0.7502]]]]], 3, Con7342), 
LAve41005 = average_layer([Zer72130,Con7342], Ave41005), 
exec_layers([LAdd39741,LRes33291,LFla26316,LGlo43760,LCon35054,LMul26719,LRes19706,LRes45746,LRes64634,LUp_96001,LRes94548,LZer72130,LAve45510,LZer60169,LCon7342,LAve41005],["Add39741","Res33291","Fla26316","Glo43760","Con35054","Mul26719","Res19706","Res45746","Res64634","Up_96001","Res94548","Zer72130","Ave45510","Zer60169","Con7342","Ave41005"],Ave41005,"Ave41005")

Actual (Unparsed): [[[[0.0000000, 0.1993000], [0.0000000, 0.4491000], [0.5083999, 0.9979499]], [[0.0000000, 0.4540500], [0.0000000, 0.1155000], [0.5083999, 0.7297499]], [[0.0000000, 0.2886000], [0.0000000, 0.0414500], [0.3798256, 0.6536756]], [[0.0000000, 0.2098000], [0.0000000, 0.4018500], [0.3798256, 0.7265756]], [[0.0000000, 0.3107500], [0.0000000, 0.1210500], [0.2585491, 0.5426991]], [[0.0000000, 0.4944000], [0.0000000, 0.0250000], [0.2585491, 0.2666491]], [[0.0000000, 0.4226000], [0.0000000, 0.0120000], [0.0343770, 0.0627770]], [[0.0000000, 0.1805500], [0.3209750, 0.0476000], [0.1737020, 0.4094770]]]]

Expected (Unparsed): [[[[0,0.1993],[0,0.4491],[0.50839992,0.9979499199999999]],[[0,0.45405],[0,0.1155],[0.50839992,0.7297499199999999]],[[0,0.2886],[0,0.04145],[0.37982555999999995,0.6536755599999999]],[[0,0.2098],[0,0.40185],[0.37982555999999995,0.7265755599999999]],[[0,0.31075],[0,0.12105],[0.25854906,0.54269906]],[[0,0.4944],[0,0.025],[0.25854906,0.26664906]],[[0,0.4226],[0,0.012],[0.034377000000000005,0.062777]],[[0,0.18055],[0.320975,0.0476],[0.17370199999999997,0.409477]]]]

Actual:   [[[[0, 0.1993], [0, 0.4491], [0.5084, 0.998]], [[0, 0.4541], [0, 0.1155], [0.5084, 0.7298]], [[0, 0.2886], [0, 0.0415], [0.3799, 0.6537]], [[0, 0.2098], [0, 0.4019], [0.3799, 0.7266]], [[0, 0.3108], [0, 0.1211], [0.2586, 0.5427]], [[0, 0.4944], [0, 0.025], [0.2586, 0.2667]], [[0, 0.4226], [0, 0.012], [0.0344, 0.0628]], [[0, 0.1806], [0.321, 0.0476], [0.1738, 0.4095]]]]

Expected: [[[[0, 0.1993], [0, 0.4491], [0.5084, 0.998]], [[0, 0.4541], [0, 0.1155], [0.5084, 0.7298]], [[0, 0.2886], [0, 0.0415], [0.3799, 0.6537]], [[0, 0.2098], [0, 0.4019], [0.3799, 0.7266]], [[0, 0.3108], [0, 0.1211], [0.2586, 0.5427]], [[0, 0.4944], [0, 0.025], [0.2586, 0.2667]], [[0, 0.4226], [0, 0.012], [0.0344, 0.0628]], [[0, 0.1806], [0.321, 0.0476], [0.1738, 0.4095]]]]