import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Dot41794 = tf.keras.layers.Input(shape=([2]))
in1Dot41794 = tf.keras.layers.Input(shape=([2]))
in0Con67486 = tf.keras.layers.Input(shape=([3, 2, 2]))
in0Sub16811 = tf.keras.layers.Input(shape=([3, 2, 3]))
in1Sub16811 = tf.keras.layers.Input(shape=([3, 2, 3]))

Dot41794 = keras.layers.Dot(axes=(1, 1), name = 'Dot41794', )([in0Dot41794,in1Dot41794])
Res74231 = keras.layers.Reshape((1, 1), name = 'Res74231', )(Dot41794)
Res95372 = keras.layers.Reshape((1, 1, 1), name = 'Res95372', )(Res74231)
Zer90344 = keras.layers.ZeroPadding2D(padding=((2, 0), (1, 0)), name = 'Zer90344', )(Res95372)
Con67486 = keras.layers.Concatenate(axis=3, name = 'Con67486', )([Zer90344,in0Con67486])
Sub16811 = keras.layers.Subtract(name = 'Sub16811', )([in0Sub16811,in1Sub16811])
Max84155 = keras.layers.Maximum(name = 'Max84155', )([Con67486,Sub16811])
Res68120 = keras.layers.Reshape((3, 6), name = 'Res68120', )(Max84155)
Glo64489 = keras.layers.GlobalAveragePooling1D(name = 'Glo64489', )(Res68120)
model = tf.keras.models.Model(inputs=[in0Dot41794,in1Dot41794,in0Con67486,in0Sub16811,in1Sub16811], outputs=Glo64489)
in0Dot41794 = tf.constant([[0.5056, 0.1615]])
in1Dot41794 = tf.constant([[0.5746, 0.8208]])
in0Con67486 = tf.constant([[[[0.3427, 0.8968], [0.3654, 0.5886]], [[0.9959, 0.2372], [0.5407, 0.6136]], [[0.0163, 0.7231], [0.4314, 0.0463]]]])
in0Sub16811 = tf.constant([[[[0.405, 0.9339, 0.9592], [0.0601, 0.2825, 0.5792]], [[0.2623, 0.7618, 0.2795], [0.873, 0.4446, 0.5516]], [[0.8087, 0.3554, 0.0623], [0.5654, 0.3595, 0.2293]]]])
in1Sub16811 = tf.constant([[[[0.7717, 0.8818, 0.5853], [0.3194, 0.9901, 0.3998]], [[0.291, 0.7715, 0.4155], [0.1675, 0.3648, 0.8956]], [[0.1766, 0.1544, 0.663], [0.0515, 0.4912, 0.7224]]]])
print (np.array2string(model.predict([in0Dot41794,in1Dot41794,in0Con67486,in0Sub16811,in1Sub16811],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Glo64489.png')

LDot41794 = dot_layer([[0.5056, 0.1615]], [[0.5746, 0.8208]], 1, 1, Dot41794), 
LRes74231 = reshape_layer(Dot41794, [1, 1], Res74231), 
LRes95372 = reshape_layer(Res74231, [1, 1, 1], Res95372), 
LZer90344 = zero_padding2D_layer(Res95372, 2, 0, 1, 0, Zer90344), 
LCon67486 = concatenate_layer([Zer90344,[[[[0.3427, 0.8968], [0.3654, 0.5886]], [[0.9959, 0.2372], [0.5407, 0.6136]], [[0.0163, 0.7231], [0.4314, 0.0463]]]]], 3, Con67486), 
LSub16811 = subtract_layer([[[[0.405, 0.9339, 0.9592], [0.0601, 0.2825, 0.5792]], [[0.2623, 0.7618, 0.2795], [0.873, 0.4446, 0.5516]], [[0.8087, 0.3554, 0.0623], [0.5654, 0.3595, 0.2293]]]], [[[[0.7717, 0.8818, 0.5853], [0.3194, 0.9901, 0.3998]], [[0.291, 0.7715, 0.4155], [0.1675, 0.3648, 0.8956]], [[0.1766, 0.1544, 0.663], [0.0515, 0.4912, 0.7224]]]], Sub16811), 
LMax84155 = maximum_layer([Con67486,Sub16811], Max84155), 
LRes68120 = reshape_layer(Max84155, [3, 6], Res68120), 
LGlo64489 = global_average_pooling1D_layer(Res68120, Glo64489), 
exec_layers([LDot41794,LRes74231,LRes95372,LZer90344,LCon67486,LSub16811,LMax84155,LRes68120,LGlo64489],["Dot41794","Res74231","Res95372","Zer90344","Con67486","Sub16811","Max84155","Res68120","Glo64489"],Glo64489,"Glo64489")

Actual (Unparsed): [[0.2107000, 0.5132000, 0.6190333, 0.4064667, 0.4458333, 0.4161667]]

Expected (Unparsed): [[0.2107,0.5132,0.6190333333333333,0.4064666666666667,0.4458333333333333,0.41616666666666663]]

Actual:   [[0.2107, 0.5132, 0.6191, 0.4065, 0.4459, 0.4162]]

Expected: [[0.2107, 0.5132, 0.6191, 0.4065, 0.4459, 0.4162]]