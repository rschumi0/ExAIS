import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Max47330 = tf.keras.layers.Input(shape=([1, 2, 1]))
in1Max47330 = tf.keras.layers.Input(shape=([1, 2, 1]))
in0Con92732 = tf.keras.layers.Input(shape=([1, 2, 1, 1]))
in0Add97088 = tf.keras.layers.Input(shape=([1, 2, 1, 2]))
in1Add97088 = tf.keras.layers.Input(shape=([1, 2, 1, 2]))
in0Min80 = tf.keras.layers.Input(shape=([2, 1]))
in1Min80 = tf.keras.layers.Input(shape=([2, 1]))
in0Up_85807 = tf.keras.layers.Input(shape=([4, 2, 3, 2]))
in0Con66787 = tf.keras.layers.Input(shape=([2]))

Max47330 = keras.layers.Maximum(name = 'Max47330', )([in0Max47330,in1Max47330])
Res92573 = keras.layers.Reshape((1, 2, 1, 1), name = 'Res92573', )(Max47330)
Con92732 = keras.layers.Concatenate(axis=4, name = 'Con92732', )([Res92573,in0Con92732])
Add97088 = keras.layers.Add(name = 'Add97088', )([in0Add97088,in1Add97088])
Add45659 = keras.layers.Add(name = 'Add45659', )([Con92732,Add97088])
Res20197 = keras.layers.Reshape((1, 2, 2), name = 'Res20197', )(Add45659)
Res66572 = keras.layers.Reshape((1, 4), name = 'Res66572', )(Res20197)
Fla39000 = keras.layers.Flatten(name = 'Fla39000', )(Res66572)
Min80 = keras.layers.Minimum(name = 'Min80', )([in0Min80,in1Min80])
Fla30792 = keras.layers.Flatten(name = 'Fla30792', )(Min80)
Up_85807 = keras.layers.UpSampling3D(size=(2, 2, 1), name = 'Up_85807', )(in0Up_85807)
Glo62915 = keras.layers.GlobalMaxPool3D(name = 'Glo62915', )(Up_85807)
Min43969 = keras.layers.Minimum(name = 'Min43969', )([Fla30792,Glo62915])
Con66787 = keras.layers.Concatenate(axis=1, name = 'Con66787', )([Min43969,in0Con66787])
Mul4174 = keras.layers.Multiply(name = 'Mul4174', )([Fla39000,Con66787])
model = tf.keras.models.Model(inputs=[in0Max47330,in1Max47330,in0Con92732,in0Add97088,in1Add97088,in0Min80,in1Min80,in0Up_85807,in0Con66787], outputs=Mul4174)
in0Max47330 = tf.constant([[[[0.6075], [0.8692]]]])
in1Max47330 = tf.constant([[[[0.6626], [0.8823]]]])
in0Con92732 = tf.constant([[[[[0.6381]], [[0.9586]]]]])
in0Add97088 = tf.constant([[[[[0.0035, 0.7583]], [[0.9638, 0.7816]]]]])
in1Add97088 = tf.constant([[[[[0.2743, 0.1782]], [[0.7659, 0.4801]]]]])
in0Min80 = tf.constant([[[0.5746], [0.2774]]])
in1Min80 = tf.constant([[[0.8914], [0.0781]]])
in0Up_85807 = tf.constant([[[[[1.8288, 1.5692], [1.0509, 1.6079], [1.8234, 1.5252]], [[1.0074, 1.2346], [1.0278, 1.6182], [1.8373, 1.3166]]], [[[1.5518, 1.4315], [1.4971, 1.5285], [1.4798, 1.4196]], [[1.82, 1.4235], [1.0629, 1.5226], [1.8822, 1.1345]]], [[[1.8948, 1.1208], [1.4014, 1.3937], [1.249, 1.7452]], [[1.4619, 1.6925], [1.2127, 1.555], [1.3946, 1.192]]], [[[1.1173, 1.8356], [1.0854, 1.9487], [1.0369, 1.6795]], [[1.3312, 1.1249], [1.8003, 1.5661], [1.119, 1.1155]]]]])
in0Con66787 = tf.constant([[0.0859, 0.9755]])
print (np.array2string(model.predict([in0Max47330,in1Max47330,in0Con92732,in0Add97088,in1Add97088,in0Min80,in1Min80,in0Up_85807,in0Con66787],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Mul4174.png')

LMax47330 = maximum_layer([[[[[0.6075], [0.8692]]]], [[[[0.6626], [0.8823]]]]], Max47330), 
LRes92573 = reshape_layer(Max47330, [1, 2, 1, 1], Res92573), 
LCon92732 = concatenate_layer([Res92573,[[[[[0.6381]], [[0.9586]]]]]], 4, Con92732), 
LAdd97088 = add_layer([[[[[[0.0035, 0.7583]], [[0.9638, 0.7816]]]]], [[[[[0.2743, 0.1782]], [[0.7659, 0.4801]]]]]], Add97088), 
LAdd45659 = add_layer([Con92732,Add97088], Add45659), 
LRes20197 = reshape_layer(Add45659, [1, 2, 2], Res20197), 
LRes66572 = reshape_layer(Res20197, [1, 4], Res66572), 
LFla39000 = flatten_layer(Res66572, Fla39000), 
LMin80 = minimum_layer([[[[0.5746], [0.2774]]], [[[0.8914], [0.0781]]]], Min80), 
LFla30792 = flatten_layer(Min80, Fla30792), 
LUp_85807 = up_sampling3D_layer([[[[[1.8288, 1.5692], [1.0509, 1.6079], [1.8234, 1.5252]], [[1.0074, 1.2346], [1.0278, 1.6182], [1.8373, 1.3166]]], [[[1.5518, 1.4315], [1.4971, 1.5285], [1.4798, 1.4196]], [[1.82, 1.4235], [1.0629, 1.5226], [1.8822, 1.1345]]], [[[1.8948, 1.1208], [1.4014, 1.3937], [1.249, 1.7452]], [[1.4619, 1.6925], [1.2127, 1.555], [1.3946, 1.192]]], [[[1.1173, 1.8356], [1.0854, 1.9487], [1.0369, 1.6795]], [[1.3312, 1.1249], [1.8003, 1.5661], [1.119, 1.1155]]]]], 2, 2, 1, Up_85807), 
LGlo62915 = global_max_pool3D_layer(Up_85807, Glo62915), 
LMin43969 = minimum_layer([Fla30792,Glo62915], Min43969), 
LCon66787 = concatenate_layer([Min43969,[[0.0859, 0.9755]]], 1, Con66787), 
LMul4174 = multiply_layer([Fla39000,Con66787], Mul4174), 
exec_layers([LMax47330,LRes92573,LCon92732,LAdd97088,LAdd45659,LRes20197,LRes66572,LFla39000,LMin80,LFla30792,LUp_85807,LGlo62915,LMin43969,LCon66787,LMul4174],["Max47330","Res92573","Con92732","Add97088","Add45659","Res20197","Res66572","Fla39000","Min80","Fla30792","Up_85807","Glo62915","Min43969","Con66787","Mul4174"],Mul4174,"Mul4174")

Actual (Unparsed): [[0.5403538, 0.1229763, 0.2243708, 2.1659026]]

Expected (Unparsed): [[0.54035384,0.12297626,0.2243708,2.16590265]]

Actual:   [[0.5404, 0.123, 0.2244, 2.166]]

Expected: [[0.5404, 0.123, 0.2244, 2.166]]