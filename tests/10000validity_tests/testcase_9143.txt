import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Zer25283 = tf.keras.layers.Input(shape=([1, 3]))
in0Con61895 = tf.keras.layers.Input(shape=([3, 1]))
in0Add48149 = tf.keras.layers.Input(shape=([2, 1, 2]))
in1Add48149 = tf.keras.layers.Input(shape=([2, 1, 2]))
in0Con75909 = tf.keras.layers.Input(shape=([1, 1]))
in0Up_41961 = tf.keras.layers.Input(shape=([1, 4]))

Zer25283 = keras.layers.ZeroPadding1D(padding=((1, 1)), name = 'Zer25283', )(in0Zer25283)
Con61895 = keras.layers.Concatenate(axis=2, name = 'Con61895', )([Zer25283,in0Con61895])
Add48149 = keras.layers.Add(name = 'Add48149', )([in0Add48149,in1Add48149])
Loc15248 = keras.layers.LocallyConnected2D(3, (2, 1),strides=(1, 1), name = 'Loc15248', )(Add48149)
Res63123 = keras.layers.Reshape((1, 3), name = 'Res63123', )(Loc15248)
Con75909 = keras.layers.Concatenate(axis=2, name = 'Con75909', )([Res63123,in0Con75909])
Up_41961 = keras.layers.UpSampling1D(size=(1), name = 'Up_41961', )(in0Up_41961)
Mul33533 = keras.layers.Multiply(name = 'Mul33533', )([Con75909,Up_41961])
Zer67295 = keras.layers.ZeroPadding1D(padding=((2, 0)), name = 'Zer67295', )(Mul33533)
Sub80839 = keras.layers.Subtract(name = 'Sub80839', )([Con61895,Zer67295])
model = tf.keras.models.Model(inputs=[in0Zer25283,in0Con61895,in0Add48149,in1Add48149,in0Con75909,in0Up_41961], outputs=Sub80839)
w = model.get_layer('Loc15248').get_weights() 
w[0] = np.array([[[0.5205, 0.0558, 0.1064], [0.1527, 0.7777, 0.2836], [0.4157, 0.8694, 0.2352], [0.2592, 0.0857, 0.4105]]])
w[1] = np.array([[[0, 0, 0]]])
model.get_layer('Loc15248').set_weights(w) 
in0Zer25283 = tf.constant([[[1.825, 1.0315, 1.8703]]])
in0Con61895 = tf.constant([[[0.1808], [0.3132], [0.9021]]])
in0Add48149 = tf.constant([[[[0.2668, 0.6691]], [[0.6361, 0.8338]]]])
in1Add48149 = tf.constant([[[[0.7731, 0.348]], [[0.0601, 0.155]]]])
in0Con75909 = tf.constant([[[0.8139]]])
in0Up_41961 = tf.constant([[[1.988, 1.3205, 1.2275, 1.8337]]])
print (np.array2string(model.predict([in0Zer25283,in0Con61895,in0Add48149,in1Add48149,in0Con75909,in0Up_41961],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Sub80839.png')

LZer25283 = zero_padding1D_layer([[[1.825, 1.0315, 1.8703]]], 1, 1, Zer25283), 
LCon61895 = concatenate_layer([Zer25283,[[[0.1808], [0.3132], [0.9021]]]], 2, Con61895), 
LAdd48149 = add_layer([[[[[0.2668, 0.6691]], [[0.6361, 0.8338]]]], [[[[0.7731, 0.348]], [[0.0601, 0.155]]]]], Add48149), 
LLoc15248 = locally_connected2D_layer(Add48149, 2, 1,[[[0.5205, 0.0558, 0.1064], [0.1527, 0.7777, 0.2836], [0.4157, 0.8694, 0.2352], [0.2592, 0.0857, 0.4105]]],[[[0, 0, 0]]], 1, 1, Loc15248), 
LRes63123 = reshape_layer(Loc15248, [1, 3], Res63123), 
LCon75909 = concatenate_layer([Res63123,[[[0.8139]]]], 2, Con75909), 
LUp_41961 = up_sampling1D_layer([[[1.988, 1.3205, 1.2275, 1.8337]]], 1, Up_41961), 
LMul33533 = multiply_layer([Con75909,Up_41961], Mul33533), 
LZer67295 = zero_padding1D_layer(Mul33533, 2, 0, Zer67295), 
LSub80839 = subtract_layer(Con61895,Zer67295, Sub80839), 
exec_layers([LZer25283,LCon61895,LAdd48149,LLoc15248,LRes63123,LCon75909,LUp_41961,LMul33533,LZer67295,LSub80839],["Zer25283","Con61895","Add48149","Loc15248","Res63123","Con75909","Up_41961","Mul33533","Zer67295","Sub80839"],Sub80839,"Sub80839")

Actual (Unparsed): [[[0.0000000, 0.0000000, 0.0000000, 0.1808000], [1.8250000, 1.0315000, 1.8703001, 0.3132000], [-2.4696654, -2.0323043, -1.1891327, -0.5903483]]]

Expected (Unparsed): [[[0,0,0,0.1808],[1.825,1.0315,1.8703,0.3132],[-2.46966540296,-2.032304340365,-1.1891327199000001,-0.59034843]]]

Actual:   [[[0, 0, 0, 0.1808], [1.825, 1.0315, 1.8704, 0.3132], [-2.4696, -2.0323, -1.1891, -0.5903]]]

Expected: [[[0, 0, 0, 0.1808], [1.825, 1.0315, 1.8703, 0.3132], [-2.4696, -2.0323, -1.1891, -0.5903]]]