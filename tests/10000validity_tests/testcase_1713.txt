import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Con20767 = tf.keras.layers.Input(shape=([1, 2, 2]))

Con20767 = keras.layers.Conv2DTranspose(2, (1, 2),strides=(1, 1), padding='valid', name = 'Con20767', )(in0Con20767)
Sep83909 = keras.layers.SeparableConv2D(2, (1, 1),strides=(1, 1), padding='same', name = 'Sep83909', )(Con20767)
model = tf.keras.models.Model(inputs=[in0Con20767], outputs=Sep83909)
w = model.get_layer('Con20767').get_weights() 
w[0] = np.array([[[[0.9256, 0.976], [0.0111, 0.3404]], [[0.8681, 0.0473], [0.687, 0.7863]]]])
w[1] = np.array([0, 0])
model.get_layer('Con20767').set_weights(w) 
w = model.get_layer('Sep83909').get_weights() 
w[0] = np.array([[[[0.1654], [0.9121]]]])
w[1] = np.array([[[[0.5215, 0.5672], [0.3419, 0.856]]]])
w[2] = np.array([0, 0])
model.get_layer('Sep83909').set_weights(w) 
in0Con20767 = tf.constant([[[[0.7059, 0.7276], [0.2264, 0.8378]]]])
print (np.array2string(model.predict([in0Con20767],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Sep83909.png')

LCon20767 = conv2D_transpose_layer([[[[0.7059, 0.7276], [0.2264, 0.8378]]]], 1, 2,[[[[0.9256, 0.976], [0.0111, 0.3404]], [[0.8681, 0.0473], [0.687, 0.7863]]]],[0, 0], 1, 1, false, Con20767), 
LSep83909 = separable_conv2D_layer(Con20767, 1, 1,[[[[[0.1654], [0.9121]]]],[[[[0.5215, 0.5672], [0.3419, 0.856]]]]],[0, 0], 1, 1, true, Sep83909), 
exec_layers([LCon20767,LSep83909],["Con20767","Sep83909"],Sep83909,"Sep83909")

Actual (Unparsed): [[[[0.1972920, 0.3274101], [0.5637931, 1.2070246], [0.2743074, 0.6579260]]]]

Expected (Unparsed): [[[[0.19729198985750868,0.3274101257668912],[0.5637930599538775,1.2070246396835247],[0.27430741253544855,0.6579259503877504]]]]

Actual:   [[[[0.1973, 0.3275], [0.5638, 1.2071], [0.2744, 0.658]]]]

Expected: [[[[0.1973, 0.3275], [0.5638, 1.2071], [0.2744, 0.658]]]]