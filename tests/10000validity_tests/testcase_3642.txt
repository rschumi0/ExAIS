import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Mul26986 = tf.keras.layers.Input(shape=([1, 1, 2, 2]))
in1Mul26986 = tf.keras.layers.Input(shape=([1, 1, 2, 2]))
in0Glo89157 = tf.keras.layers.Input(shape=([1, 1, 1, 2]))
in0Con54452 = tf.keras.layers.Input(shape=([2]))
in0Sub57422 = tf.keras.layers.Input(shape=([2]))
in1Sub57422 = tf.keras.layers.Input(shape=([2]))

Mul26986 = keras.layers.Multiply(name = 'Mul26986', )([in0Mul26986,in1Mul26986])
Res23548 = keras.layers.Reshape((1, 1, 4), name = 'Res23548', )(Mul26986)
Res7252 = keras.layers.Reshape((1, 4), name = 'Res7252', )(Res23548)
Glo74423 = keras.layers.GlobalMaxPool1D(name = 'Glo74423', )(Res7252)
Glo89157 = keras.layers.GlobalMaxPool3D(name = 'Glo89157', )(in0Glo89157)
Con54452 = keras.layers.Concatenate(axis=1, name = 'Con54452', )([Glo89157,in0Con54452])
Min25733 = keras.layers.Minimum(name = 'Min25733', )([Glo74423,Con54452])
Res78475 = keras.layers.Reshape((4, 1), name = 'Res78475', )(Min25733)
Res81790 = keras.layers.Reshape((4, 1, 1), name = 'Res81790', )(Res78475)
Sub57422 = keras.layers.Subtract(name = 'Sub57422', )([in0Sub57422,in1Sub57422])
Res62466 = keras.layers.Reshape((2, 1), name = 'Res62466', )(Sub57422)
Res22604 = keras.layers.Reshape((2, 1, 1), name = 'Res22604', )(Res62466)
Cro296 = keras.layers.Cropping2D(cropping=((1, 0), (0, 0)), name = 'Cro296', )(Res22604)
Zer85444 = keras.layers.ZeroPadding2D(padding=((3, 0), (0, 0)), name = 'Zer85444', )(Cro296)
Ave54681 = keras.layers.Average(name = 'Ave54681', )([Res81790,Zer85444])
model = tf.keras.models.Model(inputs=[in0Mul26986,in1Mul26986,in0Glo89157,in0Con54452,in0Sub57422,in1Sub57422], outputs=Ave54681)
in0Mul26986 = tf.constant([[[[[0.175, 0.6754], [0.4692, 0.0162]]]]])
in1Mul26986 = tf.constant([[[[[0.2611, 0.7404], [0.529, 0.8266]]]]])
in0Glo89157 = tf.constant([[[[[1.7044, 1.2862]]]]])
in0Con54452 = tf.constant([[0.6879, 0.9031]])
in0Sub57422 = tf.constant([[0.6061, 0.0655]])
in1Sub57422 = tf.constant([[0.2589, 0.916]])
print (np.array2string(model.predict([in0Mul26986,in1Mul26986,in0Glo89157,in0Con54452,in0Sub57422,in1Sub57422],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Ave54681.png')

LMul26986 = multiply_layer([[[[[[0.175, 0.6754], [0.4692, 0.0162]]]]], [[[[[0.2611, 0.7404], [0.529, 0.8266]]]]]], Mul26986), 
LRes23548 = reshape_layer(Mul26986, [1, 1, 4], Res23548), 
LRes7252 = reshape_layer(Res23548, [1, 4], Res7252), 
LGlo74423 = global_max_pool1D_layer(Res7252, Glo74423), 
LGlo89157 = global_max_pool3D_layer([[[[[1.7044, 1.2862]]]]], Glo89157), 
LCon54452 = concatenate_layer([Glo89157,[[0.6879, 0.9031]]], 1, Con54452), 
LMin25733 = minimum_layer([Glo74423,Con54452], Min25733), 
LRes78475 = reshape_layer(Min25733, [4, 1], Res78475), 
LRes81790 = reshape_layer(Res78475, [4, 1, 1], Res81790), 
LSub57422 = subtract_layer([[0.6061, 0.0655]], [[0.2589, 0.916]], Sub57422), 
LRes62466 = reshape_layer(Sub57422, [2, 1], Res62466), 
LRes22604 = reshape_layer(Res62466, [2, 1, 1], Res22604), 
LCro296 = cropping2D_layer(Res22604, 1, 0, 0, 0, Cro296), 
LZer85444 = zero_padding2D_layer(Cro296, 3, 0, 0, 0, Zer85444), 
LAve54681 = average_layer([Res81790,Zer85444], Ave54681), 
exec_layers([LMul26986,LRes23548,LRes7252,LGlo74423,LGlo89157,LCon54452,LMin25733,LRes78475,LRes81790,LSub57422,LRes62466,LRes22604,LCro296,LZer85444,LAve54681],["Mul26986","Res23548","Res7252","Glo74423","Glo89157","Con54452","Min25733","Res78475","Res81790","Sub57422","Res62466","Res22604","Cro296","Zer85444","Ave54681"],Ave54681,"Ave54681")

Actual (Unparsed): [[[[0.0228462]], [[0.2500331]], [[0.1241034]], [[-0.4185545]]]]

Expected (Unparsed): [[[[0.02284625]],[[0.25003307999999996]],[[0.1241034]],[[-0.41855454000000003]]]]

Actual:   [[[[0.0229]], [[0.2501]], [[0.1242]], [[-0.4185]]]]

Expected: [[[[0.0229]], [[0.2501]], [[0.1242]], [[-0.4185]]]]