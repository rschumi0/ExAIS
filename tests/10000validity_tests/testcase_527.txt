import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Up_93117 = tf.keras.layers.Input(shape=([3, 3]))
in0Dot10192 = tf.keras.layers.Input(shape=([3, 3]))
in1Dot10192 = tf.keras.layers.Input(shape=([3, 3]))
in0Con7635 = tf.keras.layers.Input(shape=([2, 1]))

Up_93117 = keras.layers.UpSampling1D(size=(2), name = 'Up_93117', )(in0Up_93117)
Sep88895 = keras.layers.SeparableConv1D(4, (1),strides=(5), padding='same', name = 'Sep88895', )(Up_93117)
ELU63886 = keras.layers.ELU(alpha=-1.2735322236833024, name = 'ELU63886', )(Sep88895)
Dot10192 = keras.layers.Dot(axes=(1, 1), name = 'Dot10192', )([in0Dot10192,in1Dot10192])
Cro14548 = keras.layers.Cropping1D(cropping=((1, 0)), name = 'Cro14548', )(Dot10192)
Con7635 = keras.layers.Concatenate(axis=2, name = 'Con7635', )([Cro14548,in0Con7635])
Mul11320 = keras.layers.Multiply(name = 'Mul11320', )([ELU63886,Con7635])
model = tf.keras.models.Model(inputs=[in0Up_93117,in0Dot10192,in1Dot10192,in0Con7635], outputs=Mul11320)
w = model.get_layer('Sep88895').get_weights() 
w[0] = np.array([[[0.5054], [0.4884], [0.089]]])
w[1] = np.array([[[0.1925, 0.9517, 0.2023, 0.9028], [0.7601, 0.6987, 0.1715, 0.7377], [0.4606, 0.2783, 0.7911, 0.0021]]])
w[2] = np.array([0, 0, 0, 0])
model.get_layer('Sep88895').set_weights(w) 
in0Up_93117 = tf.constant([[[1.1766, 1.1116, 1.2619], [1.321, 1.1508, 1.4724], [1.5869, 1.1113, 1.6888]]])
in0Dot10192 = tf.constant([[[0.6598, 0.8643, 0.3718], [0.9702, 0.3919, 0.8419], [0.2252, 0.2651, 0.559]]])
in1Dot10192 = tf.constant([[[0.2873, 0.369, 0.5081], [0.6739, 0.7992, 0.9771], [0.3484, 0.2209, 0.1946]]])
in0Con7635 = tf.constant([[[0.1271], [0.9832]]])
print (np.array2string(model.predict([in0Up_93117,in0Dot10192,in1Dot10192,in0Con7635],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Mul11320.png')

LUp_93117 = up_sampling1D_layer([[[1.1766, 1.1116, 1.2619], [1.321, 1.1508, 1.4724], [1.5869, 1.1113, 1.6888]]], 2, Up_93117), 
LSep88895 = separable_conv1D_layer(Up_93117, 1,[[[[0.5054], [0.4884], [0.089]]],[[[0.1925, 0.9517, 0.2023, 0.9028], [0.7601, 0.6987, 0.1715, 0.7377], [0.4606, 0.2783, 0.7911, 0.0021]]]],[0, 0, 0, 0], 5, true, Sep88895), 
LELU63886 = elu_layer(Sep88895, -1.2735322236833024, ELU63886), 
LDot10192 = dot_layer([[[0.6598, 0.8643, 0.3718], [0.9702, 0.3919, 0.8419], [0.2252, 0.2651, 0.559]]], [[[0.2873, 0.369, 0.5081], [0.6739, 0.7992, 0.9771], [0.3484, 0.2209, 0.1946]]], 1, 1, Dot10192), 
LCro14548 = cropping1D_layer(Dot10192, 1, 0, Cro14548), 
LCon7635 = concatenate_layer([Cro14548,[[[0.1271], [0.9832]]]], 2, Con7635), 
LMul11320 = multiply_layer([ELU63886,Con7635], Mul11320), 
exec_layers([LUp_93117,LSep88895,LELU63886,LDot10192,LCro14548,LCon7635,LMul11320],["Up_93117","Sep88895","ELU63886","Dot10192","Cro14548","Con7635","Mul11320"],Mul11320,"Mul11320")

Actual (Unparsed): [[[0.3500821, 0.6744732, 0.2640691, 0.1191678], [0.5527868, 1.1056065, 0.4192622, 1.1058757]]]

Expected (Unparsed): [[[0.3500821337101528,0.6744731877998862,0.26406906174641087,0.11916775234536899],[0.5527867865586312,1.105606536181887,0.4192622060293641,1.1058757123491423]]]

Actual:   [[[0.3501, 0.6745, 0.2641, 0.1192], [0.5528, 1.1057, 0.4193, 1.1059]]]

Expected: [[[0.3501, 0.6745, 0.2641, 0.1192], [0.5528, 1.1057, 0.4193, 1.1059]]]