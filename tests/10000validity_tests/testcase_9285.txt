import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Dot67136 = tf.keras.layers.Input(shape=([2]))
in1Dot67136 = tf.keras.layers.Input(shape=([2]))

Dot67136 = keras.layers.Dot(axes=(1, 1), name = 'Dot67136', )([in0Dot67136,in1Dot67136])
Res28709 = keras.layers.Reshape((1, 1), name = 'Res28709', )(Dot67136)
Sim3068 = keras.layers.SimpleRNN(1,name = 'Sim3068', )(Res28709)
Res62653 = keras.layers.Reshape((1, 1), name = 'Res62653', )(Sim3068)
Cro58693 = keras.layers.Cropping1D(cropping=((0, 0)), name = 'Cro58693', )(Res62653)
model = tf.keras.models.Model(inputs=[in0Dot67136,in1Dot67136], outputs=Cro58693)
w = model.get_layer('Sim3068').get_weights() 
w[0] = np.array([[1]])
w[1] = np.array([[5]])
w[2] = np.array([3])
model.get_layer('Sim3068').set_weights(w) 
in0Dot67136 = tf.constant([[0.7118, 0.3239]])
in1Dot67136 = tf.constant([[0.321, 0.5841]])
print (np.array2string(model.predict([in0Dot67136,in1Dot67136],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Cro58693.png')

LDot67136 = dot_layer([[0.7118, 0.3239]], [[0.321, 0.5841]], 1, 1, Dot67136), 
LRes28709 = reshape_layer(Dot67136, [1, 1], Res28709), 
LSim3068 = simple_rnn_layer(Res28709,[[1]],[[5]],[3], Sim3068), 
LRes62653 = reshape_layer(Sim3068, [1, 1], Res62653), 
LCro58693 = cropping1D_layer(Res62653, 0, 0, Cro58693), 
exec_layers([LDot67136,LRes28709,LSim3068,LRes62653,LCro58693],["Dot67136","Res28709","Sim3068","Res62653","Cro58693"],Cro58693,"Cro58693")

Actual (Unparsed): [[[0.9978521]]]

Expected (Unparsed): [[[0.9978521391957342]]]

Actual:   [[[0.9979]]]

Expected: [[[0.9979]]]