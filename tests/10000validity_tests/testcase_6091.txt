import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Mul7896 = tf.keras.layers.Input(shape=([2, 2, 1]))
in1Mul7896 = tf.keras.layers.Input(shape=([2, 2, 1]))

Mul7896 = keras.layers.Multiply(name = 'Mul7896', )([in0Mul7896,in1Mul7896])
Res10484 = keras.layers.Reshape((2, 2), name = 'Res10484', )(Mul7896)
Glo65569 = keras.layers.GlobalMaxPool1D(name = 'Glo65569', )(Res10484)
model = tf.keras.models.Model(inputs=[in0Mul7896,in1Mul7896], outputs=Glo65569)
in0Mul7896 = tf.constant([[[[0.3634], [0.0829]], [[0.2949], [0.795]]]])
in1Mul7896 = tf.constant([[[[0.5947], [0.0557]], [[0.6086], [0.9518]]]])
print (np.array2string(model.predict([in0Mul7896,in1Mul7896],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Glo65569.png')

LMul7896 = multiply_layer([[[[[0.3634], [0.0829]], [[0.2949], [0.795]]]], [[[[0.5947], [0.0557]], [[0.6086], [0.9518]]]]], Mul7896), 
LRes10484 = reshape_layer(Mul7896, [2, 2], Res10484), 
LGlo65569 = global_max_pool1D_layer(Res10484, Glo65569), 
exec_layers([LMul7896,LRes10484,LGlo65569],["Mul7896","Res10484","Glo65569"],Glo65569,"Glo65569")

Actual (Unparsed): [[0.2161140, 0.7566810]]

Expected (Unparsed): [[0.21611398,0.756681]]

Actual:   [[0.2162, 0.7567]]

Expected: [[0.2162, 0.7567]]