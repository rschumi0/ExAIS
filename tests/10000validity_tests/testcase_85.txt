import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Dot36442 = tf.keras.layers.Input(shape=([2, 2]))
in1Dot36442 = tf.keras.layers.Input(shape=([2, 2]))

Dot36442 = keras.layers.Dot(axes=(1, 2), name = 'Dot36442', )([in0Dot36442,in1Dot36442])
Bat80428 = keras.layers.BatchNormalization(axis=1, epsilon=0.6132002751323724,  name = 'Bat80428', )(Dot36442)
model = tf.keras.models.Model(inputs=[in0Dot36442,in1Dot36442], outputs=Bat80428)
w = model.get_layer('Bat80428').get_weights() 
w[0] = np.array([0.0556, 0.4623])
w[1] = np.array([0.7194, 0.992])
w[2] = np.array([0.2037, 0.7312])
w[3] = np.array([0.2189, 0.5822])
model.get_layer('Bat80428').set_weights(w) 
in0Dot36442 = tf.constant([[[0.5823, 0.1659], [0.3457, 0.144]]])
in1Dot36442 = tf.constant([[[0.9185, 0.7819], [0.8751, 0.4452]]])
print (np.array2string(model.predict([in0Dot36442,in1Dot36442],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Bat80428.png')

LDot36442 = dot_layer([[[0.5823, 0.1659], [0.3457, 0.144]]], [[[0.9185, 0.7819], [0.8751, 0.4452]]], 1, 2, Dot36442), 
LBat80428 = batch_normalization_layer(Dot36442, 1, 0.6132002751323724, [0.0556, 0.4623], [0.7194, 0.992], [0.2037, 0.7312], [0.2189, 0.5822], Bat80428), 
exec_layers([LDot36442,LBat80428],["Dot36442","Bat80428"],Bat80428,"Bat80428")

Actual (Unparsed): [[[0.7560592, 0.7474242], [0.7948645, 0.7713192]]]

Expected (Unparsed): [[[0.7560592142398395,0.747424224660676],[0.7948644852402034,0.771319178653282]]]

Actual:   [[[0.7561, 0.7475], [0.7949, 0.7714]]]

Expected: [[[0.7561, 0.7475], [0.7949, 0.7714]]]