import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0ELU97199 = tf.keras.layers.Input(shape=([1, 1, 2, 2]))

ELU97199 = keras.layers.ELU(alpha=-9.179157486608343, name = 'ELU97199', input_shape=(1, 1, 2, 2))(in0ELU97199)
Bat28599 = keras.layers.BatchNormalization(axis=1, epsilon=0.8367105822990778,  name = 'Bat28599', )(ELU97199)
Res14998 = keras.layers.Reshape((1, 1, 4), name = 'Res14998', )(Bat28599)
Res45580 = keras.layers.Reshape((1, 4), name = 'Res45580', )(Res14998)
Sim2606 = keras.layers.SimpleRNN(2,name = 'Sim2606', )(Res45580)
model = tf.keras.models.Model(inputs=[in0ELU97199], outputs=Sim2606)
w = model.get_layer('Bat28599').get_weights() 
w[0] = np.array([0.6316])
w[1] = np.array([0.5814])
w[2] = np.array([0.2535])
w[3] = np.array([0.1864])
model.get_layer('Bat28599').set_weights(w) 
w = model.get_layer('Sim2606').get_weights() 
w[0] = np.array([[6, 9], [4, 5], [8, 7], [5, 5]])
w[1] = np.array([[3, 3], [4, 3]])
w[2] = np.array([2, 10])
model.get_layer('Sim2606').set_weights(w) 
in0ELU97199 = tf.constant([[[[[0.8283, 0.0451], [0.6172, 0.7759]]]]])
print (np.array2string(model.predict([in0ELU97199],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Sim2606.png')

LELU97199 = elu_layer([[[[[0.8283, 0.0451], [0.6172, 0.7759]]]]], -9.179157486608343, ELU97199), 
LBat28599 = batch_normalization_layer(ELU97199, 1, 0.8367105822990778, [0.6316], [0.5814], [0.2535], [0.1864], Bat28599), 
LRes14998 = reshape_layer(Bat28599, [1, 1, 4], Res14998), 
LRes45580 = reshape_layer(Res14998, [1, 4], Res45580), 
LSim2606 = simple_rnn_layer(Res45580,[[6, 9], [4, 5], [8, 7], [5, 5]],[[3, 3], [4, 3]],[2, 10], Sim2606), 
exec_layers([LELU97199,LBat28599,LRes14998,LRes45580,LSim2606],["ELU97199","Bat28599","Res14998","Res45580","Sim2606"],Sim2606,"Sim2606")

Actual (Unparsed): [[1.0000000, 1.0000000]]

Expected (Unparsed): [[1.0,1.0]]

Actual:   [[1, 1]]

Expected: [[1, 1]]