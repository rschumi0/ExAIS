import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Dot44979 = tf.keras.layers.Input(shape=([2]))
in1Dot44979 = tf.keras.layers.Input(shape=([2]))

Dot44979 = keras.layers.Dot(axes=(1, 1), name = 'Dot44979', )([in0Dot44979,in1Dot44979])
Res1564 = keras.layers.Reshape((1, 1), name = 'Res1564', )(Dot44979)
Res78125 = keras.layers.Reshape((1, 1, 1), name = 'Res78125', )(Res1564)
Dep4021 = keras.layers.DepthwiseConv2D((1, 1),strides=(1, 1), padding='same', name = 'Dep4021', )(Res78125)
Zer7064 = keras.layers.ZeroPadding2D(padding=((1, 1), (1, 1)), name = 'Zer7064', )(Dep4021)
Con35316 = keras.layers.Conv2D(4, (1, 2),strides=(1, 1), padding='valid', dilation_rate=(1, 1), name = 'Con35316', )(Zer7064)
Lea25512 = keras.layers.LeakyReLU(alpha=1.9298991088877906, name = 'Lea25512', )(Con35316)
Lay65160 = keras.layers.LayerNormalization(axis=1, epsilon=2.6195226576959696, name = 'Lay65160', )(Lea25512)
model = tf.keras.models.Model(inputs=[in0Dot44979,in1Dot44979], outputs=Lay65160)
w = model.get_layer('Dep4021').get_weights() 
w[0] = np.array([[[[0.8072]]]])
w[1] = np.array([0])
model.get_layer('Dep4021').set_weights(w) 
w = model.get_layer('Con35316').get_weights() 
w[0] = np.array([[[[0.2529, 0.8434, 0.6048, 0.6054]], [[0.8705, 0.733, 0.9511, 0.4364]]]])
w[1] = np.array([0, 0, 0, 0])
model.get_layer('Con35316').set_weights(w) 
in0Dot44979 = tf.constant([[0.5013, 0.092]])
in1Dot44979 = tf.constant([[0.261, 0.3006]])
print (np.array2string(model.predict([in0Dot44979,in1Dot44979],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Lay65160.png')

LDot44979 = dot_layer([[0.5013, 0.092]], [[0.261, 0.3006]], 1, 1, Dot44979), 
LRes1564 = reshape_layer(Dot44979, [1, 1], Res1564), 
LRes78125 = reshape_layer(Res1564, [1, 1, 1], Res78125), 
LDep4021 = depthwise_conv2D_layer(Res78125, 1, 1,[[[[0.8072]]]],[0], 1, 1, true, Dep4021), 
LZer7064 = zero_padding2D_layer(Dep4021, 1, 1, 1, 1, Zer7064), 
LCon35316 = conv2D_layer(Zer7064, 1, 2,[[[[0.2529, 0.8434, 0.6048, 0.6054]], [[0.8705, 0.733, 0.9511, 0.4364]]]],[0, 0, 0, 0], 1, 1, false, 1, 1, Con35316), 
LLea25512 = leaky_relu_layer(Con35316, 1.9298991088877906, Lea25512), 
LLay65160 = layer_normalization_layer(Lea25512, 1, 2.6195226576959696, Lay65160), 
exec_layers([LDot44979,LRes1564,LRes78125,LDep4021,LZer7064,LCon35316,LLea25512,LLay65160],["Dot44979","Res1564","Res78125","Dep4021","Zer7064","Con35316","Lea25512","Lay65160"],Lay65160,"Lay65160")

Actual (Unparsed): [[[[-0.0229247, -0.0193066, -0.0250447, -0.0114972], [-0.0066633, -0.0222117, -0.0159318, -0.0159476]], [[0.0458494, 0.0386131, 0.0500895, 0.0229943], [0.0133267, 0.0444234, 0.0318636, 0.0318952]], [[-0.0229247, -0.0193066, -0.0250447, -0.0114972], [-0.0066633, -0.0222117, -0.0159318, -0.0159476]]]]

Expected (Unparsed): [[[[-0.022924687842602057,-0.019306566659042096,-0.02504474528696233,-0.011497153833700579],[-0.00666334900364344,-0.02221172265879063,-0.01593178863615837,-0.015947585946604496]],[[0.04584937568520412,0.03861313331808419,0.05008949057392466,0.022994307667401157],[0.01332669800728688,0.04442344531758127,0.03186357727231675,0.03189517189320899]],[[-0.022924687842602057,-0.019306566659042096,-0.02504474528696233,-0.011497153833700579],[-0.00666334900364344,-0.02221172265879063,-0.01593178863615837,-0.015947585946604496]]]]

Actual:   [[[[-0.0229, -0.0193, -0.025, -0.0114], [-0.0066, -0.0222, -0.0159, -0.0159]], [[0.0459, 0.0387, 0.0501, 0.023], [0.0134, 0.0445, 0.0319, 0.0319]], [[-0.0229, -0.0193, -0.025, -0.0114], [-0.0066, -0.0222, -0.0159, -0.0159]]]]

Expected: [[[[-0.0229, -0.0193, -0.025, -0.0114], [-0.0066, -0.0222, -0.0159, -0.0159]], [[0.0459, 0.0387, 0.0501, 0.023], [0.0134, 0.0445, 0.0319, 0.0319]], [[-0.0229, -0.0193, -0.025, -0.0114], [-0.0066, -0.0222, -0.0159, -0.0159]]]]