import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Sep48100 = tf.keras.layers.Input(shape=([1, 1, 2]))
in0Min40767 = tf.keras.layers.Input(shape=([1, 1, 1]))
in1Min40767 = tf.keras.layers.Input(shape=([1, 1, 1]))
in0Con22009 = tf.keras.layers.Input(shape=([1, 1, 2]))
in0Max13604 = tf.keras.layers.Input(shape=([1, 1, 1]))
in1Max13604 = tf.keras.layers.Input(shape=([1, 1, 1]))
in0Con51095 = tf.keras.layers.Input(shape=([1, 1, 1]))
in0Cro41845 = tf.keras.layers.Input(shape=([2, 3, 2]))
in0Con10470 = tf.keras.layers.Input(shape=([25]))

Sep48100 = keras.layers.SeparableConv2D(3, (1, 1),strides=(1, 1), padding='valid', name = 'Sep48100', )(in0Sep48100)
Min40767 = keras.layers.Minimum(name = 'Min40767', )([in0Min40767,in1Min40767])
Con22009 = keras.layers.Concatenate(axis=3, name = 'Con22009', )([Min40767,in0Con22009])
Sub77997 = keras.layers.Subtract(name = 'Sub77997', )([Sep48100,Con22009])
Zer73649 = keras.layers.ZeroPadding2D(padding=((1, 1), (1, 1)), name = 'Zer73649', )(Sub77997)
Res54950 = keras.layers.Reshape((3, 9), name = 'Res54950', )(Zer73649)
Fla2146 = keras.layers.Flatten(name = 'Fla2146', )(Res54950)
Max13604 = keras.layers.Maximum(name = 'Max13604', )([in0Max13604,in1Max13604])
Con51095 = keras.layers.Concatenate(axis=3, name = 'Con51095', )([Max13604,in0Con51095])
Cro41845 = keras.layers.Cropping2D(cropping=((0, 1), (1, 1)), name = 'Cro41845', )(in0Cro41845)
Sub33566 = keras.layers.Subtract(name = 'Sub33566', )([Con51095,Cro41845])
Res42466 = keras.layers.Reshape((1, 2), name = 'Res42466', )(Sub33566)
LST63584 = keras.layers.LSTM(2,recurrent_activation='sigmoid', name = 'LST63584', )(Res42466)
Con10470 = keras.layers.Concatenate(axis=1, name = 'Con10470', )([LST63584,in0Con10470])
Add46597 = keras.layers.Add(name = 'Add46597', )([Fla2146,Con10470])
model = tf.keras.models.Model(inputs=[in0Sep48100,in0Min40767,in1Min40767,in0Con22009,in0Max13604,in1Max13604,in0Con51095,in0Cro41845,in0Con10470], outputs=Add46597)
w = model.get_layer('Sep48100').get_weights() 
w[0] = np.array([[[[0.3918], [0.9402]]]])
w[1] = np.array([[[[0.2918, 0.471, 0.3257], [0.5036, 0.4461, 0.7951]]]])
w[2] = np.array([0, 0, 0])
model.get_layer('Sep48100').set_weights(w) 
w = model.get_layer('LST63584').get_weights() 
w[0] = np.array([[8, 4, 9, 6, 1, 7, 7, 7], [7, 3, 5, 5, 8, 7, 7, 3]])
w[1] = np.array([[6, 4, 9, 10, 4, 4, 4, 8], [4, 6, 2, 8, 4, 6, 3, 7]])
w[2] = np.array([7, 5, 8, 6, 8, 8, 8, 10])
model.get_layer('LST63584').set_weights(w) 
in0Sep48100 = tf.constant([[[[0.0414, 0.0677]]]])
in0Min40767 = tf.constant([[[[0.954]]]])
in1Min40767 = tf.constant([[[[0.8027]]]])
in0Con22009 = tf.constant([[[[0.1095, 0.2946]]]])
in0Max13604 = tf.constant([[[[0.712]]]])
in1Max13604 = tf.constant([[[[0.5129]]]])
in0Con51095 = tf.constant([[[[0.3601]]]])
in0Cro41845 = tf.constant([[[[1.8855, 1.9176], [1.0502, 1.9686], [1.6389, 1.0933]], [[1.0229, 1.3436], [1.999, 1.027], [1.8981, 1.175]]]])
in0Con10470 = tf.constant([[0.4651, 0.6228, 0.7622, 0.3291, 0.855, 0.1539, 0.3622, 0.228, 0.4804, 0.1393, 0.3119, 0.0814, 0.5788, 0.253, 0.7137, 0.3394, 0.3761, 0.3917, 0.7017, 0.8217, 0.3591, 0.3816, 0.9205, 0.6826, 0.3637]])
print (np.array2string(model.predict([in0Sep48100,in0Min40767,in1Min40767,in0Con22009,in0Max13604,in1Max13604,in0Con51095,in0Cro41845,in0Con10470],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Add46597.png')

LSep48100 = separable_conv2D_layer([[[[0.0414, 0.0677]]]], 1, 1,[[[[[0.3918], [0.9402]]]],[[[[0.2918, 0.471, 0.3257], [0.5036, 0.4461, 0.7951]]]]],[0, 0, 0], 1, 1, false, Sep48100), 
LMin40767 = minimum_layer([[[[[0.954]]]], [[[[0.8027]]]]], Min40767), 
LCon22009 = concatenate_layer([Min40767,[[[[0.1095, 0.2946]]]]], 3, Con22009), 
LSub77997 = subtract_layer(Sep48100,Con22009, Sub77997), 
LZer73649 = zero_padding2D_layer(Sub77997, 1, 1, 1, 1, Zer73649), 
LRes54950 = reshape_layer(Zer73649, [3, 9], Res54950), 
LFla2146 = flatten_layer(Res54950, Fla2146), 
LMax13604 = maximum_layer([[[[[0.712]]]], [[[[0.5129]]]]], Max13604), 
LCon51095 = concatenate_layer([Max13604,[[[[0.3601]]]]], 3, Con51095), 
LCro41845 = cropping2D_layer([[[[1.8855, 1.9176], [1.0502, 1.9686], [1.6389, 1.0933]], [[1.0229, 1.3436], [1.999, 1.027], [1.8981, 1.175]]]], 0, 1, 1, 1, Cro41845), 
LSub33566 = subtract_layer(Con51095,Cro41845, Sub33566), 
LRes42466 = reshape_layer(Sub33566, [1, 2], Res42466), 
LLST63584 = lstm_layer(Res42466,[[8, 4, 9, 6, 1, 7, 7, 7], [7, 3, 5, 5, 8, 7, 7, 3]],[[6, 4, 9, 10, 4, 4, 4, 8], [4, 6, 2, 8, 4, 6, 3, 7]],[7, 5, 8, 6, 8, 8, 8, 10], LST63584), 
LCon10470 = concatenate_layer([LST63584,[[0.4651, 0.6228, 0.7622, 0.3291, 0.855, 0.1539, 0.3622, 0.228, 0.4804, 0.1393, 0.3119, 0.0814, 0.5788, 0.253, 0.7137, 0.3394, 0.3761, 0.3917, 0.7017, 0.8217, 0.3591, 0.3816, 0.9205, 0.6826, 0.3637]]], 1, Con10470), 
LAdd46597 = add_layer([Fla2146,Con10470], Add46597), 
exec_layers([LSep48100,LMin40767,LCon22009,LSub77997,LZer73649,LRes54950,LFla2146,LMax13604,LCon51095,LCro41845,LSub33566,LRes42466,LLST63584,LCon10470,LAdd46597],["Sep48100","Min40767","Con22009","Sub77997","Zer73649","Res54950","Fla2146","Max13604","Con51095","Cro41845","Sub33566","Res42466","LST63584","Con10470","Add46597"],Add46597,"Add46597")

Actual (Unparsed): [[-0.0000034, -0.2179414, 0.4651000, 0.6228000, 0.7622000, 0.3291000, 0.8550000, 0.1539000, 0.3622000, 0.2280000, 0.4804000, 0.1393000, -0.4540119, 0.0079348, 0.3400924, 0.2530000, 0.7137000, 0.3394000, 0.3761000, 0.3917000, 0.7017000, 0.8217000, 0.3591000, 0.3816000, 0.9205000, 0.6826000, 0.3637000]]

Expected (Unparsed): [[-3.383508097050511e-6,-0.2179413791325064,0.4651,0.6228,0.7622,0.3291,0.855,0.1539,0.3622,0.228,0.4804,0.1393,-0.45401193672,0.007934816913999998,0.34009236281800004,0.253,0.7137,0.3394,0.3761,0.3917,0.7017,0.8217,0.3591,0.3816,0.9205,0.6826,0.3637]]

Actual:   [[-0, -0.2179, 0.4651, 0.6228, 0.7622, 0.3291, 0.855, 0.1539, 0.3622, 0.228, 0.4804, 0.1393, -0.454, 0.008, 0.3401, 0.253, 0.7137, 0.3394, 0.3761, 0.3917, 0.7017, 0.8217, 0.3591, 0.3816, 0.9205, 0.6826, 0.3637]]

Expected: [[-0, -0.2179, 0.4651, 0.6228, 0.7622, 0.3291, 0.855, 0.1539, 0.3622, 0.228, 0.4804, 0.1393, -0.454, 0.008, 0.3401, 0.253, 0.7137, 0.3394, 0.3761, 0.3917, 0.7017, 0.8217, 0.3591, 0.3816, 0.9205, 0.6826, 0.3637]]