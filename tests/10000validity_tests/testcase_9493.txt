import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Sep16052 = tf.keras.layers.Input(shape=([2, 1]))

Sep16052 = keras.layers.SeparableConv1D(4, (2),strides=(1), padding='same', name = 'Sep16052', )(in0Sep16052)
Fla64037 = keras.layers.Flatten(name = 'Fla64037', )(Sep16052)
Res54922 = keras.layers.Reshape((8, 1), name = 'Res54922', )(Fla64037)
Con96662 = keras.layers.Conv1D(3, (4),strides=(1), padding='valid', dilation_rate=(1), name = 'Con96662', )(Res54922)
model = tf.keras.models.Model(inputs=[in0Sep16052], outputs=Con96662)
w = model.get_layer('Sep16052').get_weights() 
w[0] = np.array([[[0.6676]], [[0.5671]]])
w[1] = np.array([[[0.8421, 0.4718, 0.9448, 0.8737]]])
w[2] = np.array([0, 0, 0, 0])
model.get_layer('Sep16052').set_weights(w) 
w = model.get_layer('Con96662').get_weights() 
w[0] = np.array([[[0.5935, 0.3433, 0.7836]], [[0.0615, 0.0831, 0.2613]], [[0.7177, 0.7224, 0.8464]], [[0.0456, 0.4367, 0.1881]]])
w[1] = np.array([0, 0, 0])
model.get_layer('Con96662').set_weights(w) 
in0Sep16052 = tf.constant([[[0.4583], [0.8958]]])
print (np.array2string(model.predict([in0Sep16052],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Con96662.png')

LSep16052 = separable_conv1D_layer([[[0.4583], [0.8958]]], 2,[[[[0.6676]], [[0.5671]]],[[[0.8421, 0.4718, 0.9448, 0.8737]]]],[0, 0, 0, 0], 1, true, Sep16052), 
LFla64037 = flatten_layer(Sep16052, Fla64037), 
LRes54922 = reshape_layer(Fla64037, [8, 1], Res54922), 
LCon96662 = conv1D_layer(Res54922, 4,[[[0.5935, 0.3433, 0.7836]], [[0.0615, 0.0831, 0.2613]], [[0.7177, 0.7224, 0.8464]], [[0.0456, 0.4367, 0.1881]]],[0, 0, 0], 1, false, 1, Con96662), 
exec_layers([LSep16052,LFla64037,LRes54922,LCon96662],["Sep16052","Fla64037","Res54922","Con96662"],Con96662,"Con96662")

Actual (Unparsed): [[[1.0147964, 1.1333446, 1.4221448], [0.8085856, 0.9294152, 1.1985344], [0.8744651, 0.8101301, 1.2677710], [0.6813148, 0.7365664, 1.0339569], [0.7455870, 0.8326862, 1.0448722]]]

Expected (Unparsed): [[[1.01479641987106,1.1333446040932134,1.4221447801745835],[0.8085855863856284,0.9294151836055277,1.1985344547662649],[0.8744651436348411,0.8101301121655586,1.267771031216055],[0.6813148016338684,0.7365664250749239,1.0339569076290336],[0.7455869684043384,0.8326861929909456,1.044872246807047]]]

Actual:   [[[1.0148, 1.1334, 1.4222], [0.8086, 0.9295, 1.1986], [0.8745, 0.8102, 1.2678], [0.6814, 0.7366, 1.034], [0.7456, 0.8327, 1.0449]]]

Expected: [[[1.0148, 1.1334, 1.4222], [0.8086, 0.9295, 1.1986], [0.8745, 0.8102, 1.2678], [0.6814, 0.7366, 1.034], [0.7456, 0.8327, 1.0449]]]