import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Glo78745 = tf.keras.layers.Input(shape=([2, 2, 2, 1]))
in0Ave42919 = tf.keras.layers.Input(shape=([2, 1, 1, 2]))
in1Ave42919 = tf.keras.layers.Input(shape=([2, 1, 1, 2]))
in0Con56450 = tf.keras.layers.Input(shape=([7, 7]))
in0Cro33126 = tf.keras.layers.Input(shape=([4, 3, 1, 4]))

Glo78745 = keras.layers.GlobalMaxPool3D(name = 'Glo78745', )(in0Glo78745)
Ave42919 = keras.layers.Average(name = 'Ave42919', )([in0Ave42919,in1Ave42919])
Fla46535 = keras.layers.Flatten(name = 'Fla46535', )(Ave42919)
Res64714 = keras.layers.Reshape((4, 1), name = 'Res64714', )(Fla46535)
Zer22695 = keras.layers.ZeroPadding1D(padding=((3, 0)), name = 'Zer22695', )(Res64714)
Con56450 = keras.layers.Concatenate(axis=2, name = 'Con56450', )([Zer22695,in0Con56450])
Cro33126 = keras.layers.Cropping3D(cropping=((3, 0), (1, 0), (0, 0)), name = 'Cro33126', )(in0Cro33126)
Res92649 = keras.layers.Reshape((1, 2, 4), name = 'Res92649', )(Cro33126)
Res69756 = keras.layers.Reshape((1, 8), name = 'Res69756', )(Res92649)
Dot47449 = keras.layers.Dot(axes=(2, 2), name = 'Dot47449', )([Con56450,Res69756])
Res95578 = keras.layers.Reshape((7, 1, 1), name = 'Res95578', )(Dot47449)
Glo81483 = keras.layers.GlobalMaxPool2D(name = 'Glo81483', )(Res95578)
Ave97104 = keras.layers.Average(name = 'Ave97104', )([Glo78745,Glo81483])
model = tf.keras.models.Model(inputs=[in0Glo78745,in0Ave42919,in1Ave42919,in0Con56450,in0Cro33126], outputs=Ave97104)
in0Glo78745 = tf.constant([[[[[1.3802], [1.3334]], [[1.2897], [1.6958]]], [[[1.4332], [1.8144]], [[1.8312], [1.1082]]]]])
in0Ave42919 = tf.constant([[[[[0.3098, 0.044]]], [[[0.1998, 0.7597]]]]])
in1Ave42919 = tf.constant([[[[[0.5331, 0.113]]], [[[0.7275, 0.7786]]]]])
in0Con56450 = tf.constant([[[0.9971, 0.2025, 0.6388, 0.4129, 0.8705, 0.6922, 0.7228], [0.0396, 0.0158, 0.7772, 0.906, 0.2837, 0.8618, 0.0033], [0.8212, 0.3664, 0.0515, 0.1421, 0.9891, 0.8199, 0.9293], [0.8622, 0.7609, 0.2463, 0.2463, 0.2427, 0.4469, 0.191], [0.4365, 0.4023, 0.1472, 0.7255, 0.1181, 0.7017, 0.6797], [0.2233, 0.1822, 0.8158, 0.7855, 0.855, 0.9443, 0.4717], [0.486, 0.5307, 0.3575, 0.8015, 0.0636, 0.3733, 0.2093]]])
in0Cro33126 = tf.constant([[[[[1.6004, 1.6931, 1.8311, 1.091]], [[1.2252, 1.9735, 1.1253, 1.3689]], [[1.3693, 1.6066, 1.4041, 1.8351]]], [[[1.6098, 1.6111, 1.9397, 1.9184]], [[1.5124, 1.9101, 1.4376, 1.8763]], [[1.5893, 1.939, 1.1611, 1.1464]]], [[[1.1089, 1.5471, 1.1916, 1.3725]], [[1.493, 1.241, 1.5262, 1.761]], [[1.2904, 1.6676, 1.732, 1.6673]]], [[[1.7454, 1.12, 1.1722, 1.0856]], [[1.7958, 1.7638, 1.4013, 1.0221]], [[1.9268, 1.2278, 1.1831, 1.568]]]]])
print (np.array2string(model.predict([in0Glo78745,in0Ave42919,in1Ave42919,in0Con56450,in0Cro33126],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Ave97104.png')

LGlo78745 = global_max_pool3D_layer([[[[[1.3802], [1.3334]], [[1.2897], [1.6958]]], [[[1.4332], [1.8144]], [[1.8312], [1.1082]]]]], Glo78745), 
LAve42919 = average_layer([[[[[[0.3098, 0.044]]], [[[0.1998, 0.7597]]]]], [[[[[0.5331, 0.113]]], [[[0.7275, 0.7786]]]]]], Ave42919), 
LFla46535 = flatten_layer(Ave42919, Fla46535), 
LRes64714 = reshape_layer(Fla46535, [4, 1], Res64714), 
LZer22695 = zero_padding1D_layer(Res64714, 3, 0, Zer22695), 
LCon56450 = concatenate_layer([Zer22695,[[[0.9971, 0.2025, 0.6388, 0.4129, 0.8705, 0.6922, 0.7228], [0.0396, 0.0158, 0.7772, 0.906, 0.2837, 0.8618, 0.0033], [0.8212, 0.3664, 0.0515, 0.1421, 0.9891, 0.8199, 0.9293], [0.8622, 0.7609, 0.2463, 0.2463, 0.2427, 0.4469, 0.191], [0.4365, 0.4023, 0.1472, 0.7255, 0.1181, 0.7017, 0.6797], [0.2233, 0.1822, 0.8158, 0.7855, 0.855, 0.9443, 0.4717], [0.486, 0.5307, 0.3575, 0.8015, 0.0636, 0.3733, 0.2093]]]], 2, Con56450), 
LCro33126 = cropping3D_layer([[[[[1.6004, 1.6931, 1.8311, 1.091]], [[1.2252, 1.9735, 1.1253, 1.3689]], [[1.3693, 1.6066, 1.4041, 1.8351]]], [[[1.6098, 1.6111, 1.9397, 1.9184]], [[1.5124, 1.9101, 1.4376, 1.8763]], [[1.5893, 1.939, 1.1611, 1.1464]]], [[[1.1089, 1.5471, 1.1916, 1.3725]], [[1.493, 1.241, 1.5262, 1.761]], [[1.2904, 1.6676, 1.732, 1.6673]]], [[[1.7454, 1.12, 1.1722, 1.0856]], [[1.7958, 1.7638, 1.4013, 1.0221]], [[1.9268, 1.2278, 1.1831, 1.568]]]]], 3, 0, 1, 0, 0, 0, Cro33126), 
LRes92649 = reshape_layer(Cro33126, [1, 2, 4], Res92649), 
LRes69756 = reshape_layer(Res92649, [1, 8], Res69756), 
LDot47449 = dot_layer(Con56450,Res69756, 2, 2, Dot47449), 
LRes95578 = reshape_layer(Dot47449, [7, 1, 1], Res95578), 
LGlo81483 = global_max_pool2D_layer(Res95578, Glo81483), 
LAve97104 = average_layer([Glo78745,Glo81483], Ave97104), 
exec_layers([LGlo78745,LAve42919,LFla46535,LRes64714,LZer22695,LCon56450,LCro33126,LRes92649,LRes69756,LDot47449,LRes95578,LGlo81483,LAve97104],["Glo78745","Ave42919","Fla46535","Res64714","Zer22695","Con56450","Cro33126","Res92649","Res69756","Dot47449","Res95578","Glo81483","Ave97104"],Ave97104,"Ave97104")

Actual (Unparsed): [[4.2834613]]

Expected (Unparsed): [[4.28346129]]

Actual:   [[4.2835]]

Expected: [[4.2835]]