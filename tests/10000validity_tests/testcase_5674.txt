import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Bat65063 = tf.keras.layers.Input(shape=([3, 2]))
in0Con40560 = tf.keras.layers.Input(shape=([6, 4]))
in0Min11129 = tf.keras.layers.Input(shape=([2, 2]))
in1Min11129 = tf.keras.layers.Input(shape=([2, 2]))
in0Con40973 = tf.keras.layers.Input(shape=([2, 4]))
in0Con52182 = tf.keras.layers.Input(shape=([2, 1, 2, 2]))

Bat65063 = keras.layers.BatchNormalization(axis=2, epsilon=0.24143809349679754,  name = 'Bat65063', )(in0Bat65063)
Zer69865 = keras.layers.ZeroPadding1D(padding=((3, 0)), name = 'Zer69865', )(Bat65063)
Con40560 = keras.layers.Concatenate(axis=2, name = 'Con40560', )([Zer69865,in0Con40560])
Min11129 = keras.layers.Minimum(name = 'Min11129', )([in0Min11129,in1Min11129])
Con40973 = keras.layers.Concatenate(axis=2, name = 'Con40973', )([Min11129,in0Con40973])
Con52182 = keras.layers.Conv3DTranspose(3, (2, 1, 1),strides=(1, 1, 1), padding='same', name = 'Con52182', )(in0Con52182)
Res9930 = keras.layers.Reshape((2, 1, 6), name = 'Res9930', )(Con52182)
Res52859 = keras.layers.Reshape((2, 6), name = 'Res52859', )(Res9930)
Dot36361 = keras.layers.Dot(axes=(1, 1), name = 'Dot36361', )([Con40973,Res52859])
Add2048 = keras.layers.Add(name = 'Add2048', )([Con40560,Dot36361])
model = tf.keras.models.Model(inputs=[in0Bat65063,in0Con40560,in0Min11129,in1Min11129,in0Con40973,in0Con52182], outputs=Add2048)
w = model.get_layer('Bat65063').get_weights() 
w[0] = np.array([0.6396, 0.2064])
w[1] = np.array([0.4139, 0.9829])
w[2] = np.array([0.9356, 0.3177])
w[3] = np.array([0.8498, 0.7624])
model.get_layer('Bat65063').set_weights(w) 
w = model.get_layer('Con52182').get_weights() 
w[0] = np.array([[[[[0.2696, 0.4141], [0.899, 0.8264], [0.2089, 0.2917]]]], [[[[0.1602, 0.0849], [0.3586, 0.2684], [0.9765, 0.6224]]]]])
w[1] = np.array([0, 0, 0])
model.get_layer('Con52182').set_weights(w) 
in0Bat65063 = tf.constant([[[1.9887, 1.8005], [1.0593, 1.6867], [1.8766, 1.2541]]])
in0Con40560 = tf.constant([[[0.2129, 0.2777, 0.3726, 0.0209], [0.2916, 0.5432, 0.5083, 0.9995], [0.7609, 0.1417, 0.3485, 0.0214], [0.6479, 0.4144, 0.9577, 0.7869], [0.6642, 0.1096, 0.0128, 0.15], [0.7626, 0.0185, 0.231, 0.1465]]])
in0Min11129 = tf.constant([[[0.337, 0.2769], [0.8087, 0.9893]]])
in1Min11129 = tf.constant([[[0.2816, 0.5615], [0.9217, 0.6757]]])
in0Con40973 = tf.constant([[[0.7584, 0.4177, 0.0915, 0.091], [0.3194, 0.7841, 0.8452, 0.0495]]])
in0Con52182 = tf.constant([[[[[0.3553, 0.2092], [0.7729, 0.4897]]], [[[0.0286, 0.9947], [0.2897, 0.641]]]]])
print (np.array2string(model.predict([in0Bat65063,in0Con40560,in0Min11129,in1Min11129,in0Con40973,in0Con52182],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Add2048.png')

LBat65063 = batch_normalization_layer([[[1.9887, 1.8005], [1.0593, 1.6867], [1.8766, 1.2541]]], 2, 0.24143809349679754, [0.6396, 0.2064], [0.4139, 0.9829], [0.9356, 0.3177], [0.8498, 0.7624], Bat65063), 
LZer69865 = zero_padding1D_layer(Bat65063, 3, 0, Zer69865), 
LCon40560 = concatenate_layer([Zer69865,[[[0.2129, 0.2777, 0.3726, 0.0209], [0.2916, 0.5432, 0.5083, 0.9995], [0.7609, 0.1417, 0.3485, 0.0214], [0.6479, 0.4144, 0.9577, 0.7869], [0.6642, 0.1096, 0.0128, 0.15], [0.7626, 0.0185, 0.231, 0.1465]]]], 2, Con40560), 
LMin11129 = minimum_layer([[[[0.337, 0.2769], [0.8087, 0.9893]]], [[[0.2816, 0.5615], [0.9217, 0.6757]]]], Min11129), 
LCon40973 = concatenate_layer([Min11129,[[[0.7584, 0.4177, 0.0915, 0.091], [0.3194, 0.7841, 0.8452, 0.0495]]]], 2, Con40973), 
LCon52182 = conv3D_transpose_layer([[[[[0.3553, 0.2092], [0.7729, 0.4897]]], [[[0.0286, 0.9947], [0.2897, 0.641]]]]], 2, 1, 1,[[[[[0.2696, 0.4141], [0.899, 0.8264], [0.2089, 0.2917]]]], [[[[0.1602, 0.0849], [0.3586, 0.2684], [0.9765, 0.6224]]]]],[0, 0, 0], 1, 1, 1, true, Con52182), 
LRes9930 = reshape_layer(Con52182, [2, 1, 6], Res9930), 
LRes52859 = reshape_layer(Res9930, [2, 6], Res52859), 
LDot36361 = dot_layer(Con40973,Res52859, 1, 1, Dot36361), 
LAdd2048 = add_layer([Con40560,Dot36361], Add2048), 
exec_layers([LBat65063,LZer69865,LCon40560,LMin11129,LCon40973,LCon52182,LRes9930,LRes52859,LDot36361,LAdd2048],["Bat65063","Zer69865","Con40560","Min11129","Con40973","Con52182","Res9930","Res52859","Dot36361","Add2048"],Add2048,"Add2048")

Actual (Unparsed): [[[0.4511062, 0.9726363, 0.8763409, 0.8050583, 1.6516636, 1.1635825], [0.3845075, 0.8331608, 0.8515583, 1.0009374, 1.6227607, 1.9669181], [0.2962244, 0.7027530, 1.1104577, 0.6160766, 1.5652639, 0.6696479], [1.5224638, 2.3026325, 1.3107250, 0.9851971, 2.3569194, 1.9388455], [0.9241090, 2.1816136, 1.3301555, 0.5773731, 1.1265986, 1.2825406], [1.0311214, 1.2716511, 0.8131850, 0.0811077, 0.3903954, 0.2388894]]]

Expected (Unparsed): [[[0.451106228699,0.9726363051860001,0.8763408481180001,0.805058265947,1.651663599732,1.163582529072],[0.384507497269,0.83316075834,0.851558279831,1.00093742159,1.6227607354259999,1.966918085582],[0.296224399058,0.702752938668,1.110457670468,0.616076634226,1.5652638788400002,0.669647897824],[1.5224637420989153,2.302632520020486,1.310724990383,0.9851971436500001,2.356919477778,1.938845549966],[0.9241090515094514,2.1816135761441404,1.330155524327,0.5773731537310001,1.126598607394,1.2825406634819998],[1.0311213956234058,1.2716511255223812,0.81318497918,0.081107732345,0.39039541732000005,0.23888938722]]]

Actual:   [[[0.4512, 0.9727, 0.8764, 0.8051, 1.6517, 1.1636], [0.3846, 0.8332, 0.8516, 1.001, 1.6228, 1.967], [0.2963, 0.7028, 1.1105, 0.6161, 1.5653, 0.6697], [1.5225, 2.3027, 1.3108, 0.9852, 2.357, 1.9389], [0.9242, 2.1817, 1.3302, 0.5774, 1.1266, 1.2826], [1.0312, 1.2717, 0.8132, 0.0812, 0.3904, 0.2389]]]

Expected: [[[0.4512, 0.9727, 0.8764, 0.8051, 1.6517, 1.1636], [0.3846, 0.8332, 0.8516, 1.001, 1.6228, 1.967], [0.2963, 0.7028, 1.1105, 0.6161, 1.5653, 0.6697], [1.5225, 2.3027, 1.3108, 0.9852, 2.357, 1.9389], [0.9242, 2.1817, 1.3302, 0.5774, 1.1266, 1.2826], [1.0312, 1.2717, 0.8132, 0.0812, 0.3904, 0.2389]]]