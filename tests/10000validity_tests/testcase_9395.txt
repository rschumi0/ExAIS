import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Min48664 = tf.keras.layers.Input(shape=([1, 1]))
in1Min48664 = tf.keras.layers.Input(shape=([1, 1]))
in0Glo35813 = tf.keras.layers.Input(shape=([2, 2]))

Min48664 = keras.layers.Minimum(name = 'Min48664', )([in0Min48664,in1Min48664])
Fla88925 = keras.layers.Flatten(name = 'Fla88925', )(Min48664)
Glo35813 = keras.layers.GlobalMaxPool1D(name = 'Glo35813', )(in0Glo35813)
Den35703 = keras.layers.Dense(1,name = 'Den35703', )(Glo35813)
Mul58669 = keras.layers.Multiply(name = 'Mul58669', )([Fla88925,Den35703])
model = tf.keras.models.Model(inputs=[in0Min48664,in1Min48664,in0Glo35813], outputs=Mul58669)
w = model.get_layer('Den35703').get_weights() 
w[0] = np.array([[0.0842], [0.55]])
w[1] = np.array([0.7977])
model.get_layer('Den35703').set_weights(w) 
in0Min48664 = tf.constant([[[0.8734]]])
in1Min48664 = tf.constant([[[0.4122]]])
in0Glo35813 = tf.constant([[[1.1832, 1.5096], [1.7443, 1.277]]])
print (np.array2string(model.predict([in0Min48664,in1Min48664,in0Glo35813],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Mul58669.png')

LMin48664 = minimum_layer([[[[0.8734]]], [[[0.4122]]]], Min48664), 
LFla88925 = flatten_layer(Min48664, Fla88925), 
LGlo35813 = global_max_pool1D_layer([[[1.1832, 1.5096], [1.7443, 1.277]]], Glo35813), 
LDen35703 = dense_layer(Glo35813, [[0.0842], [0.55]],[0.7977], Den35703), 
LMul58669 = multiply_layer([Fla88925,Den35703], Mul58669), 
exec_layers([LMin48664,LFla88925,LGlo35813,LDen35703,LMul58669],["Min48664","Fla88925","Glo35813","Den35703","Mul58669"],Mul58669,"Mul58669")

Actual (Unparsed): [[0.7315932]]

Expected (Unparsed): [[0.731593194732]]

Actual:   [[0.7316]]

Expected: [[0.7316]]