import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Cro91578 = tf.keras.layers.Input(shape=([3, 1]))

Cro91578 = keras.layers.Cropping1D(cropping=((1, 0)), name = 'Cro91578', )(in0Cro91578)
Res60481 = keras.layers.Reshape((2, 1, 1), name = 'Res60481', )(Cro91578)
Res22387 = keras.layers.Reshape((2, 1, 1, 1), name = 'Res22387', )(Res60481)
Cro84591 = keras.layers.Cropping3D(cropping=((0, 1), (0, 0), (0, 0)), name = 'Cro84591', )(Res22387)
Lea12775 = keras.layers.LeakyReLU(alpha=1.1510955821503672, name = 'Lea12775', )(Cro84591)
model = tf.keras.models.Model(inputs=[in0Cro91578], outputs=Lea12775)
in0Cro91578 = tf.constant([[[1.3447], [1.933], [1.2713]]])
print (np.array2string(model.predict([in0Cro91578],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Lea12775.png')

LCro91578 = cropping1D_layer([[[1.3447], [1.933], [1.2713]]], 1, 0, Cro91578), 
LRes60481 = reshape_layer(Cro91578, [2, 1, 1], Res60481), 
LRes22387 = reshape_layer(Res60481, [2, 1, 1, 1], Res22387), 
LCro84591 = cropping3D_layer(Res22387, 0, 1, 0, 0, 0, 0, Cro84591), 
LLea12775 = leaky_relu_layer(Cro84591, 1.1510955821503672, Lea12775), 
exec_layers([LCro91578,LRes60481,LRes22387,LCro84591,LLea12775],["Cro91578","Res60481","Res22387","Cro84591","Lea12775"],Lea12775,"Lea12775")

Actual (Unparsed): [[[[[1.9330000]]]]]

Expected (Unparsed): [[[[[1.933]]]]]

Actual:   [[[[[1.933]]]]]

Expected: [[[[[1.933]]]]]