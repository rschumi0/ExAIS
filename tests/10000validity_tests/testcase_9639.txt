import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Cro31221 = tf.keras.layers.Input(shape=([4, 1, 1]))
in0Con93170 = tf.keras.layers.Input(shape=([4, 3, 3, 2]))
in0Add43156 = tf.keras.layers.Input(shape=([2, 2]))
in1Add43156 = tf.keras.layers.Input(shape=([2, 2]))
in0Con8594 = tf.keras.layers.Input(shape=([4, 3, 3, 2]))
in0Up_76016 = tf.keras.layers.Input(shape=([2, 1, 3, 3]))

Cro31221 = keras.layers.Cropping2D(cropping=((2, 1), (0, 0)), name = 'Cro31221', )(in0Cro31221)
Res49262 = keras.layers.Reshape((1, 1, 1, 1), name = 'Res49262', )(Cro31221)
Zer2650 = keras.layers.ZeroPadding3D(padding=((3, 0), (2, 0), (2, 0)), name = 'Zer2650', )(Res49262)
Con93170 = keras.layers.Concatenate(axis=4, name = 'Con93170', )([Zer2650,in0Con93170])
Add43156 = keras.layers.Add(name = 'Add43156', )([in0Add43156,in1Add43156])
Res70054 = keras.layers.Reshape((2, 2, 1), name = 'Res70054', )(Add43156)
Res54457 = keras.layers.Reshape((2, 2, 1, 1), name = 'Res54457', )(Res70054)
Zer58269 = keras.layers.ZeroPadding3D(padding=((2, 0), (1, 0), (2, 0)), name = 'Zer58269', )(Res54457)
Con8594 = keras.layers.Concatenate(axis=4, name = 'Con8594', )([Zer58269,in0Con8594])
Up_76016 = keras.layers.UpSampling3D(size=(2, 1, 1), name = 'Up_76016', )(in0Up_76016)
Zer43963 = keras.layers.ZeroPadding3D(padding=((0, 0), (2, 0), (0, 0)), name = 'Zer43963', )(Up_76016)
Sub47906 = keras.layers.Subtract(name = 'Sub47906', )([Con8594,Zer43963])
Add44047 = keras.layers.Add(name = 'Add44047', )([Con93170,Sub47906])
Res82086 = keras.layers.Reshape((4, 3, 9), name = 'Res82086', )(Add44047)
Res10383 = keras.layers.Reshape((4, 27), name = 'Res10383', )(Res82086)
LST13098 = keras.layers.LSTM(3,recurrent_activation='sigmoid', name = 'LST13098', )(Res10383)
model = tf.keras.models.Model(inputs=[in0Cro31221,in0Con93170,in0Add43156,in1Add43156,in0Con8594,in0Up_76016], outputs=LST13098)
w = model.get_layer('LST13098').get_weights() 
w[0] = np.array([[1, 3, 10, 4, 4, 2, 6, 3, 6, 9, 5, 6], [4, 3, 4, 10, 7, 5, 8, 5, 1, 6, 2, 8], [9, 5, 5, 2, 2, 3, 3, 6, 7, 2, 2, 3], [8, 5, 7, 4, 2, 5, 3, 7, 10, 10, 6, 3], [9, 4, 6, 5, 6, 1, 8, 2, 6, 1, 5, 8], [8, 5, 7, 10, 7, 5, 3, 9, 6, 4, 7, 9], [3, 2, 9, 3, 6, 7, 6, 7, 6, 5, 8, 4], [7, 3, 2, 9, 2, 9, 7, 9, 10, 9, 7, 10], [5, 10, 4, 10, 4, 6, 3, 10, 4, 9, 7, 7], [9, 1, 4, 3, 2, 10, 5, 1, 2, 3, 7, 8], [5, 8, 1, 4, 4, 2, 1, 6, 9, 3, 4, 8], [3, 6, 7, 1, 5, 4, 4, 9, 8, 1, 5, 1], [3, 7, 8, 6, 1, 6, 6, 4, 9, 2, 5, 10], [2, 5, 7, 5, 6, 2, 9, 3, 6, 8, 2, 10], [1, 5, 7, 7, 5, 2, 7, 5, 10, 10, 4, 3], [9, 1, 7, 2, 10, 1, 2, 9, 1, 1, 5, 10], [4, 5, 10, 8, 3, 5, 8, 10, 9, 2, 2, 3], [3, 4, 6, 8, 6, 2, 10, 5, 10, 5, 1, 1], [4, 9, 10, 3, 3, 7, 9, 5, 3, 1, 4, 7], [7, 7, 9, 3, 7, 9, 7, 7, 9, 6, 9, 2], [1, 2, 5, 7, 2, 1, 4, 7, 8, 4, 8, 3], [8, 2, 7, 7, 10, 9, 4, 9, 9, 8, 9, 7], [5, 4, 7, 9, 9, 3, 5, 9, 4, 2, 3, 1], [10, 10, 7, 7, 3, 1, 3, 2, 10, 9, 5, 2], [3, 5, 7, 9, 2, 5, 4, 2, 10, 9, 10, 6], [4, 4, 10, 9, 10, 1, 5, 4, 1, 9, 6, 5], [4, 3, 5, 2, 5, 10, 10, 6, 6, 4, 10, 9]])
w[1] = np.array([[4, 10, 1, 1, 10, 6, 5, 9, 7, 5, 7, 2], [10, 3, 2, 7, 10, 5, 2, 3, 1, 10, 1, 4], [1, 3, 4, 4, 10, 8, 7, 3, 6, 7, 6, 7]])
w[2] = np.array([3, 4, 3, 2, 8, 2, 4, 8, 10, 1, 10, 10])
model.get_layer('LST13098').set_weights(w) 
in0Cro31221 = tf.constant([[[[1.2601]], [[1.1008]], [[1.2728]], [[1.9947]]]])
in0Con93170 = tf.constant([[[[[0.3674, 0.4817], [0.6698, 0.1321], [0.7705, 0.0696]], [[0.5216, 0.7057], [0.3481, 0.4172], [0.6331, 0.3589]], [[0.5754, 0.7205], [0.218, 0.3533], [0.9985, 0.9484]]], [[[1, 0.7167], [0.2012, 0.7047], [0.1886, 0.6595]], [[0.6614, 0.4073], [0.4151, 0.5043], [0.5126, 0.9063]], [[0.8681, 0.338], [0.1868, 0.1604], [0.9749, 0.8631]]], [[[0.4091, 0.8733], [0.1051, 0.4716], [0.0368, 0.059]], [[0.9404, 0.3965], [0.7941, 0.343], [0.3506, 0.9023]], [[0.0393, 0.4395], [0.8407, 0.8717], [0.3178, 0.6472]]], [[[0.8975, 0.8154], [0.6075, 0.3956], [0.8488, 0.2881]], [[0.839, 0.8455], [0.1742, 0.9271], [0.4906, 0.296]], [[0.5565, 0.8491], [0.7947, 0.6832], [0.346, 0.9359]]]]])
in0Add43156 = tf.constant([[[0.6698, 0.7075], [0.4814, 0.5349]]])
in1Add43156 = tf.constant([[[0.0178, 0.0163], [0.6097, 0.6163]]])
in0Con8594 = tf.constant([[[[[0.1589, 0.4179], [0.1409, 0.0023], [0.9461, 0.2313]], [[0.5275, 0.9254], [0.4113, 0.6202], [0.7114, 0.5242]], [[0.5626, 0.5072], [0.7848, 0.6825], [0.6368, 0.7242]]], [[[0.5492, 0.7954], [0.0787, 0.964], [0.6886, 0.8123]], [[0.5833, 0.8597], [0.786, 0.6432], [0.1193, 0.2391]], [[0.2115, 0.5545], [0.1709, 0.4243], [0.0538, 0.9592]]], [[[0.6585, 0.432], [0.8195, 0.4428], [0.1289, 0.0626]], [[0.5841, 0.9548], [0.8398, 0.1653], [0.6391, 0.8434]], [[0.3096, 0.8131], [0.4553, 0.816], [0.7476, 0.7289]]], [[[0.9541, 0.9647], [0.5392, 0.0675], [0.6648, 0.7143]], [[0.617, 0.577], [0.3344, 0.9214], [0.1211, 0.2362]], [[0.9512, 0.3811], [0.2209, 0.6994], [0.9461, 0.6836]]]]])
in0Up_76016 = tf.constant([[[[[1.0153, 1.5521, 1.3003], [1.1067, 1.0085, 1.5888], [1.4135, 1.1721, 1.1332]]], [[[1.8387, 1.7339, 1.615], [1.487, 1.9262, 1.7893], [1.7864, 1.0293, 1.4226]]]]])
print (np.array2string(model.predict([in0Cro31221,in0Con93170,in0Add43156,in1Add43156,in0Con8594,in0Up_76016],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='LST13098.png')

LCro31221 = cropping2D_layer([[[[1.2601]], [[1.1008]], [[1.2728]], [[1.9947]]]], 2, 1, 0, 0, Cro31221), 
LRes49262 = reshape_layer(Cro31221, [1, 1, 1, 1], Res49262), 
LZer2650 = zero_padding3D_layer(Res49262, 3, 0, 2, 0, 2, 0, Zer2650), 
LCon93170 = concatenate_layer([Zer2650,[[[[[0.3674, 0.4817], [0.6698, 0.1321], [0.7705, 0.0696]], [[0.5216, 0.7057], [0.3481, 0.4172], [0.6331, 0.3589]], [[0.5754, 0.7205], [0.218, 0.3533], [0.9985, 0.9484]]], [[[1, 0.7167], [0.2012, 0.7047], [0.1886, 0.6595]], [[0.6614, 0.4073], [0.4151, 0.5043], [0.5126, 0.9063]], [[0.8681, 0.338], [0.1868, 0.1604], [0.9749, 0.8631]]], [[[0.4091, 0.8733], [0.1051, 0.4716], [0.0368, 0.059]], [[0.9404, 0.3965], [0.7941, 0.343], [0.3506, 0.9023]], [[0.0393, 0.4395], [0.8407, 0.8717], [0.3178, 0.6472]]], [[[0.8975, 0.8154], [0.6075, 0.3956], [0.8488, 0.2881]], [[0.839, 0.8455], [0.1742, 0.9271], [0.4906, 0.296]], [[0.5565, 0.8491], [0.7947, 0.6832], [0.346, 0.9359]]]]]], 4, Con93170), 
LAdd43156 = add_layer([[[[0.6698, 0.7075], [0.4814, 0.5349]]], [[[0.0178, 0.0163], [0.6097, 0.6163]]]], Add43156), 
LRes70054 = reshape_layer(Add43156, [2, 2, 1], Res70054), 
LRes54457 = reshape_layer(Res70054, [2, 2, 1, 1], Res54457), 
LZer58269 = zero_padding3D_layer(Res54457, 2, 0, 1, 0, 2, 0, Zer58269), 
LCon8594 = concatenate_layer([Zer58269,[[[[[0.1589, 0.4179], [0.1409, 0.0023], [0.9461, 0.2313]], [[0.5275, 0.9254], [0.4113, 0.6202], [0.7114, 0.5242]], [[0.5626, 0.5072], [0.7848, 0.6825], [0.6368, 0.7242]]], [[[0.5492, 0.7954], [0.0787, 0.964], [0.6886, 0.8123]], [[0.5833, 0.8597], [0.786, 0.6432], [0.1193, 0.2391]], [[0.2115, 0.5545], [0.1709, 0.4243], [0.0538, 0.9592]]], [[[0.6585, 0.432], [0.8195, 0.4428], [0.1289, 0.0626]], [[0.5841, 0.9548], [0.8398, 0.1653], [0.6391, 0.8434]], [[0.3096, 0.8131], [0.4553, 0.816], [0.7476, 0.7289]]], [[[0.9541, 0.9647], [0.5392, 0.0675], [0.6648, 0.7143]], [[0.617, 0.577], [0.3344, 0.9214], [0.1211, 0.2362]], [[0.9512, 0.3811], [0.2209, 0.6994], [0.9461, 0.6836]]]]]], 4, Con8594), 
LUp_76016 = up_sampling3D_layer([[[[[1.0153, 1.5521, 1.3003], [1.1067, 1.0085, 1.5888], [1.4135, 1.1721, 1.1332]]], [[[1.8387, 1.7339, 1.615], [1.487, 1.9262, 1.7893], [1.7864, 1.0293, 1.4226]]]]], 2, 1, 1, Up_76016), 
LZer43963 = zero_padding3D_layer(Up_76016, 0, 0, 2, 0, 0, 0, Zer43963), 
LSub47906 = subtract_layer(Con8594,Zer43963, Sub47906), 
LAdd44047 = add_layer([Con93170,Sub47906], Add44047), 
LRes82086 = reshape_layer(Add44047, [4, 3, 9], Res82086), 
LRes10383 = reshape_layer(Res82086, [4, 27], Res10383), 
LLST13098 = lstm_layer(Res10383,[[1, 3, 10, 4, 4, 2, 6, 3, 6, 9, 5, 6], [4, 3, 4, 10, 7, 5, 8, 5, 1, 6, 2, 8], [9, 5, 5, 2, 2, 3, 3, 6, 7, 2, 2, 3], [8, 5, 7, 4, 2, 5, 3, 7, 10, 10, 6, 3], [9, 4, 6, 5, 6, 1, 8, 2, 6, 1, 5, 8], [8, 5, 7, 10, 7, 5, 3, 9, 6, 4, 7, 9], [3, 2, 9, 3, 6, 7, 6, 7, 6, 5, 8, 4], [7, 3, 2, 9, 2, 9, 7, 9, 10, 9, 7, 10], [5, 10, 4, 10, 4, 6, 3, 10, 4, 9, 7, 7], [9, 1, 4, 3, 2, 10, 5, 1, 2, 3, 7, 8], [5, 8, 1, 4, 4, 2, 1, 6, 9, 3, 4, 8], [3, 6, 7, 1, 5, 4, 4, 9, 8, 1, 5, 1], [3, 7, 8, 6, 1, 6, 6, 4, 9, 2, 5, 10], [2, 5, 7, 5, 6, 2, 9, 3, 6, 8, 2, 10], [1, 5, 7, 7, 5, 2, 7, 5, 10, 10, 4, 3], [9, 1, 7, 2, 10, 1, 2, 9, 1, 1, 5, 10], [4, 5, 10, 8, 3, 5, 8, 10, 9, 2, 2, 3], [3, 4, 6, 8, 6, 2, 10, 5, 10, 5, 1, 1], [4, 9, 10, 3, 3, 7, 9, 5, 3, 1, 4, 7], [7, 7, 9, 3, 7, 9, 7, 7, 9, 6, 9, 2], [1, 2, 5, 7, 2, 1, 4, 7, 8, 4, 8, 3], [8, 2, 7, 7, 10, 9, 4, 9, 9, 8, 9, 7], [5, 4, 7, 9, 9, 3, 5, 9, 4, 2, 3, 1], [10, 10, 7, 7, 3, 1, 3, 2, 10, 9, 5, 2], [3, 5, 7, 9, 2, 5, 4, 2, 10, 9, 10, 6], [4, 4, 10, 9, 10, 1, 5, 4, 1, 9, 6, 5], [4, 3, 5, 2, 5, 10, 10, 6, 6, 4, 10, 9]],[[4, 10, 1, 1, 10, 6, 5, 9, 7, 5, 7, 2], [10, 3, 2, 7, 10, 5, 2, 3, 1, 10, 1, 4], [1, 3, 4, 4, 10, 8, 7, 3, 6, 7, 6, 7]],[3, 4, 3, 2, 8, 2, 4, 8, 10, 1, 10, 10], LST13098), 
exec_layers([LCro31221,LRes49262,LZer2650,LCon93170,LAdd43156,LRes70054,LRes54457,LZer58269,LCon8594,LUp_76016,LZer43963,LSub47906,LAdd44047,LRes82086,LRes10383,LLST13098],["Cro31221","Res49262","Zer2650","Con93170","Add43156","Res70054","Res54457","Zer58269","Con8594","Up_76016","Zer43963","Sub47906","Add44047","Res82086","Res10383","LST13098"],LST13098,"LST13098")

Actual (Unparsed): [[0.9993293, 0.9993293, 0.9993293]]

Expected (Unparsed): [[0.999329299739067,0.999329299739067,0.9993292879941924]]

Actual:   [[0.9994, 0.9994, 0.9994]]

Expected: [[0.9994, 0.9994, 0.9994]]