import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Min59727 = tf.keras.layers.Input(shape=([1, 2, 2]))
in1Min59727 = tf.keras.layers.Input(shape=([1, 2, 2]))
in0Con8634 = tf.keras.layers.Input(shape=([3, 3, 4]))
in0LST4178 = tf.keras.layers.Input(shape=([1, 1]))
in0Per8110 = tf.keras.layers.Input(shape=([4, 2]))
in0Con20804 = tf.keras.layers.Input(shape=([3, 3, 5]))
in0Min85075 = tf.keras.layers.Input(shape=([2, 1]))
in1Min85075 = tf.keras.layers.Input(shape=([2, 1]))
in0Con74173 = tf.keras.layers.Input(shape=([3, 3, 2, 2]))
in0Sub30256 = tf.keras.layers.Input(shape=([3, 3, 2, 3]))
in1Sub30256 = tf.keras.layers.Input(shape=([3, 3, 2, 3]))
in0Max1963 = tf.keras.layers.Input(shape=([1, 2, 2]))
in0Con29807 = tf.keras.layers.Input(shape=([3, 3, 4]))

Min59727 = keras.layers.Minimum(name = 'Min59727', )([in0Min59727,in1Min59727])
Zer64199 = keras.layers.ZeroPadding2D(padding=((2, 0), (1, 0)), name = 'Zer64199', )(Min59727)
Con8634 = keras.layers.Concatenate(axis=3, name = 'Con8634', )([Zer64199,in0Con8634])
LST4178 = keras.layers.LSTM(2,recurrent_activation='sigmoid', name = 'LST4178', )(in0LST4178)
Res19361 = keras.layers.Reshape((2, 1), name = 'Res19361', )(LST4178)
Res35658 = keras.layers.Reshape((2, 1, 1), name = 'Res35658', )(Res19361)
Res48365 = keras.layers.Reshape((2, 1, 1, 1), name = 'Res48365', )(Res35658)
Zer12639 = keras.layers.ZeroPadding3D(padding=((0, 0), (2, 0), (0, 0)), name = 'Zer12639', )(Res48365)
Per8110 = keras.layers.Permute((2,1), name = 'Per8110',)(in0Per8110)
Res17713 = keras.layers.Reshape((2, 4, 1), name = 'Res17713', )(Per8110)
PRe36828 = keras.layers.PReLU(name = 'PRe36828', )(Res17713)
Res66859 = keras.layers.Reshape((2, 4, 1, 1), name = 'Res66859', )(PRe36828)
Cro61862 = keras.layers.Cropping3D(cropping=((0, 1), (1, 1), (0, 0)), name = 'Cro61862', )(Res66859)
Zer34177 = keras.layers.ZeroPadding3D(padding=((1, 0), (1, 0), (0, 0)), name = 'Zer34177', )(Cro61862)
Mul15556 = keras.layers.Multiply(name = 'Mul15556', )([Zer12639,Zer34177])
Res18383 = keras.layers.Reshape((2, 3, 1), name = 'Res18383', )(Mul15556)
Zer30018 = keras.layers.ZeroPadding2D(padding=((1, 0), (0, 0)), name = 'Zer30018', )(Res18383)
Con20804 = keras.layers.Concatenate(axis=3, name = 'Con20804', )([Zer30018,in0Con20804])
Min85075 = keras.layers.Minimum(name = 'Min85075', )([in0Min85075,in1Min85075])
Res3095 = keras.layers.Reshape((2, 1, 1), name = 'Res3095', )(Min85075)
Res55311 = keras.layers.Reshape((2, 1, 1, 1), name = 'Res55311', )(Res3095)
Zer55179 = keras.layers.ZeroPadding3D(padding=((1, 0), (2, 0), (1, 0)), name = 'Zer55179', )(Res55311)
Con74173 = keras.layers.Concatenate(axis=4, name = 'Con74173', )([Zer55179,in0Con74173])
Sub30256 = keras.layers.Subtract(name = 'Sub30256', )([in0Sub30256,in1Sub30256])
Max19836 = keras.layers.Maximum(name = 'Max19836', )([Con74173,Sub30256])
Res47770 = keras.layers.Reshape((3, 3, 6), name = 'Res47770', )(Max19836)
Max1963 = keras.layers.MaxPool2D(pool_size=(1, 1), name = 'Max1963', )(in0Max1963)
Zer60953 = keras.layers.ZeroPadding2D(padding=((2, 0), (1, 0)), name = 'Zer60953', )(Max1963)
Con29807 = keras.layers.Concatenate(axis=3, name = 'Con29807', )([Zer60953,in0Con29807])
Ave64938 = keras.layers.Average(name = 'Ave64938', )([Res47770,Con29807])
Add28956 = keras.layers.Add(name = 'Add28956', )([Con20804,Ave64938])
Sub15137 = keras.layers.Subtract(name = 'Sub15137', )([Con8634,Add28956])
model = tf.keras.models.Model(inputs=[in0Min59727,in1Min59727,in0Con8634,in0LST4178,in0Per8110,in0Con20804,in0Min85075,in1Min85075,in0Con74173,in0Sub30256,in1Sub30256,in0Max1963,in0Con29807], outputs=Sub15137)
w = model.get_layer('LST4178').get_weights() 
w[0] = np.array([[7, 6, 2, 7, 10, 10, 2, 7]])
w[1] = np.array([[2, 10, 6, 9, 5, 10, 5, 5], [1, 2, 5, 10, 7, 2, 10, 5]])
w[2] = np.array([10, 7, 2, 1, 2, 7, 7, 2])
model.get_layer('LST4178').set_weights(w) 
w = model.get_layer('PRe36828').get_weights() 
w[0] = np.array([[[0.2129], [0.0083], [0.4517], [0.0865]], [[0.0031], [0.1798], [0.2562], [0.8874]]])
model.get_layer('PRe36828').set_weights(w) 
in0Min59727 = tf.constant([[[[0.7512, 0.3701], [0.523, 0.2751]]]])
in1Min59727 = tf.constant([[[[0.2823, 0.6921], [0.8049, 0.2693]]]])
in0Con8634 = tf.constant([[[[0.1337, 0.5406, 0.6321, 0.0742], [0.3152, 0.9531, 0.6222, 0.8244], [0.8401, 0.4857, 0.1017, 0.4725]], [[0.5719, 0.733, 0.5525, 0.038], [0.0565, 0.5972, 0.952, 0.3317], [0.2745, 0.7732, 0.3818, 0.0268]], [[0.5287, 0.3262, 0.3195, 0.6121], [0.6558, 0.2288, 0.8951, 0.2367], [0.3172, 0.2068, 0.8534, 0.4564]]]])
in0LST4178 = tf.constant([[[4]]])
in0Per8110 = tf.constant([[[1.3642, 1.2045], [1.5092, 1.1889], [1.5311, 1.8896], [1.2926, 1.7797]]])
in0Con20804 = tf.constant([[[[0.7955, 0.6338, 0.3071, 0.6791, 0.9554], [0.6138, 0.3676, 0.269, 0.9078, 0.8625], [0.6573, 0.2956, 0.8257, 0.2404, 0.3252]], [[0.0832, 0.1885, 0.6618, 0.4372, 0.5205], [0.3938, 0.9416, 0.9996, 0.9941, 0.713], [0.127, 0.0291, 0.6765, 0.618, 0.9197]], [[0.8188, 0.789, 0.5704, 0.955, 0.3778], [0.0128, 0.208, 0.9031, 0.1347, 0.3119], [0.4923, 0.584, 0.3831, 0.0461, 0.784]]]])
in0Min85075 = tf.constant([[[0.3532], [0.8518]]])
in1Min85075 = tf.constant([[[0.1033], [0.4803]]])
in0Con74173 = tf.constant([[[[[0.2889, 0.7006], [0.7485, 0.2207]], [[0.6232, 0.1034], [0.713, 0.3564]], [[0.8798, 0.5569], [0.7773, 0.2088]]], [[[0.8766, 0.2515], [0.1987, 0.9813]], [[0.0554, 0.1105], [0.0318, 0.2264]], [[0.9929, 0.8044], [0.652, 0.139]]], [[[0.0719, 0.9098], [0.7444, 0.5815]], [[0.7611, 0.8107], [0.1987, 0.509]], [[0.6273, 0.0911], [0.5333, 0.7564]]]]])
in0Sub30256 = tf.constant([[[[[0.1756, 0.9947, 0.4993], [0.5853, 0.9717, 0.5645]], [[0.2098, 0.0111, 0.1205], [0.78, 0.1909, 0.4526]], [[0.0207, 0.2694, 0.9446], [0.5344, 0.8577, 0.5453]]], [[[0.9589, 0.2954, 0.9638], [0.0672, 0.9542, 0.4925]], [[0.9896, 0.665, 0.6011], [0.7609, 0.5389, 0.2243]], [[0.5134, 0.6249, 0.01], [0.5754, 0.6133, 0.7193]]], [[[0.135, 0.464, 0.4165], [0.3512, 0.1091, 0.3365]], [[0.3909, 0.708, 0.2649], [0.4218, 0.3058, 0.6025]], [[0.9596, 0.2581, 0.4076], [0.6321, 0.7168, 0.3765]]]]])
in1Sub30256 = tf.constant([[[[[0.3313, 0.0286, 0.6919], [0.3279, 0.8926, 0.2723]], [[0.2164, 0.622, 0.2874], [0.7565, 0.5137, 0.4294]], [[0.7754, 0.3998, 0.6814], [0.0923, 0.6203, 0.125]]], [[[0.6822, 0.5895, 0.917], [0.5504, 0.4009, 0.1022]], [[0.9507, 0.0727, 0.7862], [0.7422, 0.8977, 0.7576]], [[0.7213, 0.319, 0.0071], [0.1042, 0.5439, 0.7474]]], [[[0.8813, 0.7955, 0.0709], [0.326, 0.1123, 0.0104]], [[0.5748, 0.6538, 0.324], [0.7331, 0.4051, 0.3938]], [[0.6207, 0.7687, 0.8514], [0.4431, 0.5496, 0.8496]]]]])
in0Max1963 = tf.constant([[[[1.4046, 1.3199], [1.9473, 1.2994]]]])
in0Con29807 = tf.constant([[[[0.0246, 0.1252, 0.6043, 0.5644], [0.4882, 0.9931, 0.4805, 0.0021], [0.6932, 0.3855, 0.3293, 0.0176]], [[0.5017, 0.4093, 0.3369, 0.9149], [0.225, 0.9537, 0.8852, 0.9126], [0.7374, 0.8678, 0.2046, 0.3289]], [[0.1047, 0.6698, 0.3188, 0.2119], [0.7976, 0.4086, 0.578, 0.7183], [0.458, 0.4172, 0.9834, 0.2996]]]])
print (np.array2string(model.predict([in0Min59727,in1Min59727,in0Con8634,in0LST4178,in0Per8110,in0Con20804,in0Min85075,in1Min85075,in0Con74173,in0Sub30256,in1Sub30256,in0Max1963,in0Con29807],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Sub15137.png')

LMin59727 = minimum_layer([[[[[0.7512, 0.3701], [0.523, 0.2751]]]], [[[[0.2823, 0.6921], [0.8049, 0.2693]]]]], Min59727), 
LZer64199 = zero_padding2D_layer(Min59727, 2, 0, 1, 0, Zer64199), 
LCon8634 = concatenate_layer([Zer64199,[[[[0.1337, 0.5406, 0.6321, 0.0742], [0.3152, 0.9531, 0.6222, 0.8244], [0.8401, 0.4857, 0.1017, 0.4725]], [[0.5719, 0.733, 0.5525, 0.038], [0.0565, 0.5972, 0.952, 0.3317], [0.2745, 0.7732, 0.3818, 0.0268]], [[0.5287, 0.3262, 0.3195, 0.6121], [0.6558, 0.2288, 0.8951, 0.2367], [0.3172, 0.2068, 0.8534, 0.4564]]]]], 3, Con8634), 
LLST4178 = lstm_layer([[[4]]],[[7, 6, 2, 7, 10, 10, 2, 7]],[[2, 10, 6, 9, 5, 10, 5, 5], [1, 2, 5, 10, 7, 2, 10, 5]],[10, 7, 2, 1, 2, 7, 7, 2], LST4178), 
LRes19361 = reshape_layer(LST4178, [2, 1], Res19361), 
LRes35658 = reshape_layer(Res19361, [2, 1, 1], Res35658), 
LRes48365 = reshape_layer(Res35658, [2, 1, 1, 1], Res48365), 
LZer12639 = zero_padding3D_layer(Res48365, 0, 0, 2, 0, 0, 0, Zer12639), 
LPer8110 = permute_layer([[[1.3642, 1.2045], [1.5092, 1.1889], [1.5311, 1.8896], [1.2926, 1.7797]]], 2,1, Per8110), 
LRes17713 = reshape_layer(Per8110, [2, 4, 1], Res17713), 
LPRe36828 = prelu_layer(Res17713, [[[0.2129], [0.0083], [0.4517], [0.0865]], [[0.0031], [0.1798], [0.2562], [0.8874]]], PRe36828), 
LRes66859 = reshape_layer(PRe36828, [2, 4, 1, 1], Res66859), 
LCro61862 = cropping3D_layer(Res66859, 0, 1, 1, 1, 0, 0, Cro61862), 
LZer34177 = zero_padding3D_layer(Cro61862, 1, 0, 1, 0, 0, 0, Zer34177), 
LMul15556 = multiply_layer([Zer12639,Zer34177], Mul15556), 
LRes18383 = reshape_layer(Mul15556, [2, 3, 1], Res18383), 
LZer30018 = zero_padding2D_layer(Res18383, 1, 0, 0, 0, Zer30018), 
LCon20804 = concatenate_layer([Zer30018,[[[[0.7955, 0.6338, 0.3071, 0.6791, 0.9554], [0.6138, 0.3676, 0.269, 0.9078, 0.8625], [0.6573, 0.2956, 0.8257, 0.2404, 0.3252]], [[0.0832, 0.1885, 0.6618, 0.4372, 0.5205], [0.3938, 0.9416, 0.9996, 0.9941, 0.713], [0.127, 0.0291, 0.6765, 0.618, 0.9197]], [[0.8188, 0.789, 0.5704, 0.955, 0.3778], [0.0128, 0.208, 0.9031, 0.1347, 0.3119], [0.4923, 0.584, 0.3831, 0.0461, 0.784]]]]], 3, Con20804), 
LMin85075 = minimum_layer([[[[0.3532], [0.8518]]], [[[0.1033], [0.4803]]]], Min85075), 
LRes3095 = reshape_layer(Min85075, [2, 1, 1], Res3095), 
LRes55311 = reshape_layer(Res3095, [2, 1, 1, 1], Res55311), 
LZer55179 = zero_padding3D_layer(Res55311, 1, 0, 2, 0, 1, 0, Zer55179), 
LCon74173 = concatenate_layer([Zer55179,[[[[[0.2889, 0.7006], [0.7485, 0.2207]], [[0.6232, 0.1034], [0.713, 0.3564]], [[0.8798, 0.5569], [0.7773, 0.2088]]], [[[0.8766, 0.2515], [0.1987, 0.9813]], [[0.0554, 0.1105], [0.0318, 0.2264]], [[0.9929, 0.8044], [0.652, 0.139]]], [[[0.0719, 0.9098], [0.7444, 0.5815]], [[0.7611, 0.8107], [0.1987, 0.509]], [[0.6273, 0.0911], [0.5333, 0.7564]]]]]], 4, Con74173), 
LSub30256 = subtract_layer([[[[[0.1756, 0.9947, 0.4993], [0.5853, 0.9717, 0.5645]], [[0.2098, 0.0111, 0.1205], [0.78, 0.1909, 0.4526]], [[0.0207, 0.2694, 0.9446], [0.5344, 0.8577, 0.5453]]], [[[0.9589, 0.2954, 0.9638], [0.0672, 0.9542, 0.4925]], [[0.9896, 0.665, 0.6011], [0.7609, 0.5389, 0.2243]], [[0.5134, 0.6249, 0.01], [0.5754, 0.6133, 0.7193]]], [[[0.135, 0.464, 0.4165], [0.3512, 0.1091, 0.3365]], [[0.3909, 0.708, 0.2649], [0.4218, 0.3058, 0.6025]], [[0.9596, 0.2581, 0.4076], [0.6321, 0.7168, 0.3765]]]]], [[[[[0.3313, 0.0286, 0.6919], [0.3279, 0.8926, 0.2723]], [[0.2164, 0.622, 0.2874], [0.7565, 0.5137, 0.4294]], [[0.7754, 0.3998, 0.6814], [0.0923, 0.6203, 0.125]]], [[[0.6822, 0.5895, 0.917], [0.5504, 0.4009, 0.1022]], [[0.9507, 0.0727, 0.7862], [0.7422, 0.8977, 0.7576]], [[0.7213, 0.319, 0.0071], [0.1042, 0.5439, 0.7474]]], [[[0.8813, 0.7955, 0.0709], [0.326, 0.1123, 0.0104]], [[0.5748, 0.6538, 0.324], [0.7331, 0.4051, 0.3938]], [[0.6207, 0.7687, 0.8514], [0.4431, 0.5496, 0.8496]]]]], Sub30256), 
LMax19836 = maximum_layer([Con74173,Sub30256], Max19836), 
LRes47770 = reshape_layer(Max19836, [3, 3, 6], Res47770), 
LMax1963 = max_pool2D_layer([[[[1.4046, 1.3199], [1.9473, 1.2994]]]], 1, 1, Max1963), 
LZer60953 = zero_padding2D_layer(Max1963, 2, 0, 1, 0, Zer60953), 
LCon29807 = concatenate_layer([Zer60953,[[[[0.0246, 0.1252, 0.6043, 0.5644], [0.4882, 0.9931, 0.4805, 0.0021], [0.6932, 0.3855, 0.3293, 0.0176]], [[0.5017, 0.4093, 0.3369, 0.9149], [0.225, 0.9537, 0.8852, 0.9126], [0.7374, 0.8678, 0.2046, 0.3289]], [[0.1047, 0.6698, 0.3188, 0.2119], [0.7976, 0.4086, 0.578, 0.7183], [0.458, 0.4172, 0.9834, 0.2996]]]]], 3, Con29807), 
LAve64938 = average_layer([Res47770,Con29807], Ave64938), 
LAdd28956 = add_layer([Con20804,Ave64938], Add28956), 
LSub15137 = subtract_layer(Con8634,Add28956, Sub15137), 
exec_layers([LMin59727,LZer64199,LCon8634,LLST4178,LRes19361,LRes35658,LRes48365,LZer12639,LPer8110,LRes17713,LPRe36828,LRes66859,LCro61862,LZer34177,LMul15556,LRes18383,LZer30018,LCon20804,LMin85075,LRes3095,LRes55311,LZer55179,LCon74173,LSub30256,LMax19836,LRes47770,LMax1963,LZer60953,LCon29807,LAve64938,LAdd28956,LSub15137],["Min59727","Zer64199","Con8634","LST4178","Res19361","Res35658","Res48365","Zer12639","Per8110","Res17713","PRe36828","Res66859","Cro61862","Zer34177","Mul15556","Res18383","Zer30018","Con20804","Min85075","Res3095","Res55311","Zer55179","Con74173","Sub30256","Max19836","Res47770","Max1963","Zer60953","Con29807","Ave64938","Add28956","Sub15137"],Sub15137,"Sub15137")

Actual (Unparsed): [[[[0.0000000, -1.2785500, -0.8627000, 0.0422000, -0.7234000, -1.3095000], [0.0000000, -0.9254000, -0.3482000, 0.1758001, -0.8823500, -0.2173500], [0.0000000, -1.0972000, -0.0805500, -0.7538000, -0.6920000, -0.0716500]], [[-0.1383500, -0.5215000, 0.0068000, -0.1334500, -0.3298000, -1.4306000], [-0.0194500, -0.6899500, -1.0528500, -0.8886000, -0.5006000, -0.9508000], [0.0000000, -0.6234500, -0.5255000, -0.5728000, -0.6645000, -1.1268500]], [[0.0000000, -0.8547500, -0.7675500, -0.5917000, -1.1671000, -0.1624000], [-0.4200000, -0.6832000, -0.3563500, -0.8786000, 0.3720500, -0.6888500], [-1.7861768, -1.1863500, -0.5413500, -0.6250500, 0.0489500, -0.8556000]]]]

Expected (Unparsed): [[[[0,-1.27855,-0.8626999999999999,0.04219999999999996,-0.7234000000000002,-1.3095],[0,-0.9254,-0.3482,0.17579999999999996,-0.8823500000000001,-0.21734999999999993],[0,-1.0972,-0.08055000000000001,-0.7538,-0.6920000000000001,-0.07165000000000005]],[[-0.13834999999999997,-0.5215000000000001,0.006799999999999917,-0.13345000000000007,-0.3298000000000001,-1.4305999999999999],[-0.019450000000000023,-0.6899500000000001,-1.05285,-0.8886000000000001,-0.5005999999999999,-0.9508],[0.0,-0.6234500000000001,-0.5255000000000001,-0.5728000000000001,-0.6645000000000001,-1.1268500000000001]],[[0,-0.85475,-0.7675500000000002,-0.5916999999999999,-1.1671,-0.1624],[-0.42000000000000004,-0.6831999999999999,-0.35634999999999983,-0.8785999999999999,0.37205,-0.6888500000000001],[-1.78617681218374,-1.18635,-0.54135,-0.62505,0.04894999999999994,-0.8556000000000001]]]]

Actual:   [[[[0, -1.2785, -0.8627, 0.0422, -0.7234, -1.3095], [0, -0.9254, -0.3482, 0.1759, -0.8823, -0.2173], [0, -1.0972, -0.0805, -0.7538, -0.692, -0.0716]], [[-0.1383, -0.5215, 0.0068, -0.1334, -0.3298, -1.4306], [-0.0194, -0.6899, -1.0528, -0.8886, -0.5006, -0.9508], [0, -0.6234, -0.5255, -0.5728, -0.6645, -1.1268]], [[0, -0.8547, -0.7675, -0.5917, -1.1671, -0.1624], [-0.42, -0.6832, -0.3563, -0.8786, 0.3721, -0.6888], [-1.7861, -1.1863, -0.5413, -0.625, 0.049, -0.8556]]]]

Expected: [[[[0, -1.2785, -0.8626, 0.0422, -0.7234, -1.3095], [0, -0.9254, -0.3482, 0.1758, -0.8823, -0.2173], [0, -1.0972, -0.0805, -0.7538, -0.692, -0.0716]], [[-0.1383, -0.5215, 0.0068, -0.1334, -0.3298, -1.4305], [-0.0194, -0.6899, -1.0528, -0.8886, -0.5005, -0.9508], [0, -0.6234, -0.5255, -0.5728, -0.6645, -1.1268]], [[0, -0.8547, -0.7675, -0.5916, -1.1671, -0.1624], [-0.42, -0.6831, -0.3563, -0.8785, 0.3721, -0.6888], [-1.7861, -1.1863, -0.5413, -0.625, 0.049, -0.8556]]]]