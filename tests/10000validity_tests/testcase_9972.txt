import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Dot76934 = tf.keras.layers.Input(shape=([3, 2]))
in1Dot76934 = tf.keras.layers.Input(shape=([3, 2]))
in0Con98722 = tf.keras.layers.Input(shape=([3, 3, 3, 1]))
in0Max30212 = tf.keras.layers.Input(shape=([2, 1, 2, 2]))
in1Max30212 = tf.keras.layers.Input(shape=([2, 1, 2, 2]))

Dot76934 = keras.layers.Dot(axes=(2, 2), name = 'Dot76934', )([in0Dot76934,in1Dot76934])
Res94297 = keras.layers.Reshape((3, 3, 1), name = 'Res94297', )(Dot76934)
Res64070 = keras.layers.Reshape((3, 3, 1, 1), name = 'Res64070', )(Res94297)
Zer61256 = keras.layers.ZeroPadding3D(padding=((0, 0), (0, 0), (2, 0)), name = 'Zer61256', )(Res64070)
Con98722 = keras.layers.Concatenate(axis=4, name = 'Con98722', )([Zer61256,in0Con98722])
Max30212 = keras.layers.Maximum(name = 'Max30212', )([in0Max30212,in1Max30212])
Zer35193 = keras.layers.ZeroPadding3D(padding=((1, 0), (2, 0), (1, 0)), name = 'Zer35193', )(Max30212)
Sub1939 = keras.layers.Subtract(name = 'Sub1939', )([Con98722,Zer35193])
model = tf.keras.models.Model(inputs=[in0Dot76934,in1Dot76934,in0Con98722,in0Max30212,in1Max30212], outputs=Sub1939)
in0Dot76934 = tf.constant([[[0.8334, 0.86], [0.0591, 0.6699], [0.8169, 0.6654]]])
in1Dot76934 = tf.constant([[[0.9085, 0.6049], [0.8416, 0.7968], [0.2121, 0.3481]]])
in0Con98722 = tf.constant([[[[[0.5788], [0.164], [0.4986]], [[0.5472], [0.9587], [0.542]], [[0.8862], [0.5871], [0.8808]]], [[[0.1648], [0.1007], [0.3952]], [[0.6822], [0.8965], [0.8604]], [[0.5033], [0.7119], [0.9236]]], [[[0.5181], [0.9504], [0.4615]], [[0.2569], [0.868], [0.8639]], [[0.7168], [0.0692], [0.2061]]]]])
in0Max30212 = tf.constant([[[[[0.4835, 0.2759], [0.2043, 0.1409]]], [[[0.1946, 0.7766], [0.0866, 0.6312]]]]])
in1Max30212 = tf.constant([[[[[0.0696, 0.2293], [0.6517, 0.5978]]], [[[0.4798, 0.0056], [0.6728, 0.6057]]]]])
print (np.array2string(model.predict([in0Dot76934,in1Dot76934,in0Con98722,in0Max30212,in1Max30212],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Sub1939.png')

LDot76934 = dot_layer([[[0.8334, 0.86], [0.0591, 0.6699], [0.8169, 0.6654]]], [[[0.9085, 0.6049], [0.8416, 0.7968], [0.2121, 0.3481]]], 2, 2, Dot76934), 
LRes94297 = reshape_layer(Dot76934, [3, 3, 1], Res94297), 
LRes64070 = reshape_layer(Res94297, [3, 3, 1, 1], Res64070), 
LZer61256 = zero_padding3D_layer(Res64070, 0, 0, 0, 0, 2, 0, Zer61256), 
LCon98722 = concatenate_layer([Zer61256,[[[[[0.5788], [0.164], [0.4986]], [[0.5472], [0.9587], [0.542]], [[0.8862], [0.5871], [0.8808]]], [[[0.1648], [0.1007], [0.3952]], [[0.6822], [0.8965], [0.8604]], [[0.5033], [0.7119], [0.9236]]], [[[0.5181], [0.9504], [0.4615]], [[0.2569], [0.868], [0.8639]], [[0.7168], [0.0692], [0.2061]]]]]], 4, Con98722), 
LMax30212 = maximum_layer([[[[[[0.4835, 0.2759], [0.2043, 0.1409]]], [[[0.1946, 0.7766], [0.0866, 0.6312]]]]], [[[[[0.0696, 0.2293], [0.6517, 0.5978]]], [[[0.4798, 0.0056], [0.6728, 0.6057]]]]]], Max30212), 
LZer35193 = zero_padding3D_layer(Max30212, 1, 0, 2, 0, 1, 0, Zer35193), 
LSub1939 = subtract_layer(Con98722,Zer35193, Sub1939), 
exec_layers([LDot76934,LRes94297,LRes64070,LZer61256,LCon98722,LMax30212,LZer35193,LSub1939],["Dot76934","Res94297","Res64070","Zer61256","Con98722","Max30212","Zer35193","Sub1939"],Sub1939,"Sub1939")

Actual (Unparsed): [[[[[0.0000000, 0.5788000], [0.0000000, 0.1640000], [1.2773579, 0.4986000]], [[0.0000000, 0.5472000], [0.0000000, 0.9587000], [1.3866375, 0.5420000]], [[0.0000000, 0.8862000], [0.0000000, 0.5871000], [0.4761302, 0.8808000]]], [[[0.0000000, 0.1648000], [0.0000000, 0.1007000], [0.4589149, 0.3952000]], [[0.0000000, 0.6822000], [0.0000000, 0.8965000], [0.5835149, 0.8604000]], [[0.0000000, 0.5033000], [-0.4835000, 0.4360000], [-0.4059727, 0.3258000]]], [[[0.0000000, 0.5181000], [0.0000000, 0.9504000], [1.1446542, 0.4615000]], [[0.0000000, 0.2569000], [0.0000000, 0.8680000], [1.2176938, 0.8639000]], [[0.0000000, 0.7168000], [-0.4798000, -0.7074000], [-0.2679098, -0.4251000]]]]]

Expected (Unparsed): [[[[[0,0.5788],[0,0.164],[1.2773579,0.4986]],[[0,0.5472],[0,0.9587],[1.3866374399999999,0.542]],[[0,0.8862],[0,0.5871],[0.47613014000000004,0.8808]]],[[[0,0.1648],[0,0.1007],[0.45891486000000004,0.3952]],[[0,0.6822],[0,0.8965],[0.58351488,0.8604]],[[0,0.5033],[-0.4835,0.436],[-0.40597269999999996,0.3258]]],[[[0,0.5181],[0,0.9504],[1.1446541099999998,0.4615]],[[0,0.2569],[0,0.868],[1.21769376,0.8639]],[[0,0.7168],[-0.4798,-0.7073999999999999],[-0.26790976999999994,-0.4251]]]]]

Actual:   [[[[[0, 0.5788], [0, 0.164], [1.2774, 0.4986]], [[0, 0.5472], [0, 0.9587], [1.3867, 0.542]], [[0, 0.8862], [0, 0.5871], [0.4762, 0.8808]]], [[[0, 0.1648], [0, 0.1007], [0.459, 0.3952]], [[0, 0.6822], [0, 0.8965], [0.5836, 0.8604]], [[0, 0.5033], [-0.4835, 0.436], [-0.4059, 0.3258]]], [[[0, 0.5181], [0, 0.9504], [1.1447, 0.4615]], [[0, 0.2569], [0, 0.868], [1.2177, 0.8639]], [[0, 0.7168], [-0.4798, -0.7074], [-0.2679, -0.4251]]]]]

Expected: [[[[[0, 0.5788], [0, 0.164], [1.2774, 0.4986]], [[0, 0.5472], [0, 0.9587], [1.3867, 0.542]], [[0, 0.8862], [0, 0.5871], [0.4762, 0.8808]]], [[[0, 0.1648], [0, 0.1007], [0.459, 0.3952]], [[0, 0.6822], [0, 0.8965], [0.5836, 0.8604]], [[0, 0.5033], [-0.4835, 0.436], [-0.4059, 0.3258]]], [[[0, 0.5181], [0, 0.9504], [1.1447, 0.4615]], [[0, 0.2569], [0, 0.868], [1.2177, 0.8639]], [[0, 0.7168], [-0.4798, -0.7073], [-0.2679, -0.4251]]]]]