import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Max39740 = tf.keras.layers.Input(shape=([1, 1, 1, 2]))
in1Max39740 = tf.keras.layers.Input(shape=([1, 1, 1, 2]))
in0Ave33343 = tf.keras.layers.Input(shape=([1, 2, 2]))
in1Ave33343 = tf.keras.layers.Input(shape=([1, 2, 2]))
in0Glo83716 = tf.keras.layers.Input(shape=([1, 1]))
in0Con62811 = tf.keras.layers.Input(shape=([15]))

Max39740 = keras.layers.Maximum(name = 'Max39740', )([in0Max39740,in1Max39740])
Con19934 = keras.layers.Conv3D(4, (1, 1, 1),strides=(1, 1, 1), padding='same', dilation_rate=(1, 1, 1), name = 'Con19934', )(Max39740)
Res24000 = keras.layers.Reshape((1, 1, 4), name = 'Res24000', )(Con19934)
Res49163 = keras.layers.Reshape((1, 4), name = 'Res49163', )(Res24000)
Ave33343 = keras.layers.Average(name = 'Ave33343', )([in0Ave33343,in1Ave33343])
Res12132 = keras.layers.Reshape((1, 4), name = 'Res12132', )(Ave33343)
Dot16076 = keras.layers.Dot(axes=(1, 1), name = 'Dot16076', )([Res49163,Res12132])
Fla10953 = keras.layers.Flatten(name = 'Fla10953', )(Dot16076)
Glo83716 = keras.layers.GlobalMaxPool1D(name = 'Glo83716', )(in0Glo83716)
Con62811 = keras.layers.Concatenate(axis=1, name = 'Con62811', )([Glo83716,in0Con62811])
Mul10549 = keras.layers.Multiply(name = 'Mul10549', )([Fla10953,Con62811])
model = tf.keras.models.Model(inputs=[in0Max39740,in1Max39740,in0Ave33343,in1Ave33343,in0Glo83716,in0Con62811], outputs=Mul10549)
w = model.get_layer('Con19934').get_weights() 
w[0] = np.array([[[[[0.7923, 0.8459, 0.9628, 0.1943], [0.4436, 0.2065, 0.9534, 0.0833]]]]])
w[1] = np.array([0, 0, 0, 0])
model.get_layer('Con19934').set_weights(w) 
in0Max39740 = tf.constant([[[[[0.7994, 0.4801]]]]])
in1Max39740 = tf.constant([[[[[0.6897, 0.4454]]]]])
in0Ave33343 = tf.constant([[[[0.1423, 0.7638], [0.5292, 0.052]]]])
in1Ave33343 = tf.constant([[[[0.8515, 0.2537], [0.2289, 0.6757]]]])
in0Glo83716 = tf.constant([[[1.931]]])
in0Con62811 = tf.constant([[0.4176, 0.3062, 0.4615, 0.4956, 0.4218, 0.9405, 0.4044, 0.3698, 0.262, 0.6358, 0.037, 0.6749, 0.4113, 0.6183, 0.605]])
print (np.array2string(model.predict([in0Max39740,in1Max39740,in0Ave33343,in1Ave33343,in0Glo83716,in0Con62811],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Mul10549.png')

LMax39740 = maximum_layer([[[[[[0.7994, 0.4801]]]]], [[[[[0.6897, 0.4454]]]]]], Max39740), 
LCon19934 = conv3D_layer(Max39740, 1, 1, 1,[[[[[0.7923, 0.8459, 0.9628, 0.1943], [0.4436, 0.2065, 0.9534, 0.0833]]]]],[0, 0, 0, 0], 1, 1, 1, true, 1, 1, 1, Con19934), 
LRes24000 = reshape_layer(Con19934, [1, 1, 4], Res24000), 
LRes49163 = reshape_layer(Res24000, [1, 4], Res49163), 
LAve33343 = average_layer([[[[[0.1423, 0.7638], [0.5292, 0.052]]]], [[[[0.8515, 0.2537], [0.2289, 0.6757]]]]], Ave33343), 
LRes12132 = reshape_layer(Ave33343, [1, 4], Res12132), 
LDot16076 = dot_layer(Res49163,Res12132, 1, 1, Dot16076), 
LFla10953 = flatten_layer(Dot16076, Fla10953), 
LGlo83716 = global_max_pool1D_layer([[[1.931]]], Glo83716), 
LCon62811 = concatenate_layer([Glo83716,[[0.4176, 0.3062, 0.4615, 0.4956, 0.4218, 0.9405, 0.4044, 0.3698, 0.262, 0.6358, 0.037, 0.6749, 0.4113, 0.6183, 0.605]]], 1, Con62811), 
LMul10549 = multiply_layer([Fla10953,Con62811], Mul10549), 
exec_layers([LMax39740,LCon19934,LRes24000,LRes49163,LAve33343,LRes12132,LDot16076,LFla10953,LGlo83716,LCon62811,LMul10549],["Max39740","Con19934","Res24000","Res49163","Ave33343","Res12132","Dot16076","Fla10953","Glo83716","Con62811","Mul10549"],Mul10549,"Mul10549")

Actual (Unparsed): [[0.8120721, 0.1798077, 0.0982302, 0.1421142, 0.1909413, 0.1663836, 0.2764107, 0.1140862, 0.2255373, 0.1636018, 0.2958009, 0.0165237, 0.0655007, 0.0408696, 0.0457755, 0.0429947]]

Expected (Unparsed): [[0.8120720963940221,0.17980767674892004,0.09823019468076781,0.14211417624483952,0.1909412791539204,0.16638360538973251,0.2764106893629428,0.11408618543732338,0.22553729317556923,0.16360183625555003,0.2958008957861034,0.016523671928267,0.0655006621785075,0.040869600957281246,0.04577549118368625,0.042994709560687495]]

Actual:   [[0.8121, 0.1799, 0.0983, 0.1422, 0.191, 0.1664, 0.2765, 0.1141, 0.2256, 0.1637, 0.2959, 0.0166, 0.0656, 0.0409, 0.0458, 0.043]]

Expected: [[0.8121, 0.1799, 0.0983, 0.1422, 0.191, 0.1664, 0.2765, 0.1141, 0.2256, 0.1637, 0.2959, 0.0166, 0.0656, 0.0409, 0.0458, 0.043]]