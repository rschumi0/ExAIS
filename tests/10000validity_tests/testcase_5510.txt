import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Dot40611 = tf.keras.layers.Input(shape=([3, 2]))
in1Dot40611 = tf.keras.layers.Input(shape=([3, 2]))

Dot40611 = keras.layers.Dot(axes=(1, 1), name = 'Dot40611', )([in0Dot40611,in1Dot40611])
Fla23139 = keras.layers.Flatten(name = 'Fla23139', )(Dot40611)
Den92724 = keras.layers.Dense(2,name = 'Den92724', )(Fla23139)
model = tf.keras.models.Model(inputs=[in0Dot40611,in1Dot40611], outputs=Den92724)
w = model.get_layer('Den92724').get_weights() 
w[0] = np.array([[0.9638, 0.7493], [0.2249, 0.2384], [0.1738, 0.7031], [0.3011, 0.7247]])
w[1] = np.array([0.7336, 0.7154])
model.get_layer('Den92724').set_weights(w) 
in0Dot40611 = tf.constant([[[0.2674, 0.9871], [0.9109, 0.1475], [0.1507, 0.7701]]])
in1Dot40611 = tf.constant([[[0.1493, 0.3145], [0.6061, 0.219], [0.5337, 0.4306]]])
print (np.array2string(model.predict([in0Dot40611,in1Dot40611],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Den92724.png')

LDot40611 = dot_layer([[[0.2674, 0.9871], [0.9109, 0.1475], [0.1507, 0.7701]]], [[[0.1493, 0.3145], [0.6061, 0.219], [0.5337, 0.4306]]], 1, 1, Dot40611), 
LFla23139 = flatten_layer(Dot40611, Fla23139), 
LDen92724 = dense_layer(Fla23139, [[0.9638, 0.7493], [0.2249, 0.2384], [0.1738, 0.7031], [0.3011, 0.7247]],[0.7336, 0.7154], Den92724), 
exec_layers([LDot40611,LFla23139,LDen92724],["Dot40611","Fla23139","Den92724"],Den92724,"Den92724")

Actual (Unparsed): [[1.7757079, 2.2464951]]

Expected (Unparsed): [[1.7757079313689998,2.24649507262]]

Actual:   [[1.7758, 2.2465]]

Expected: [[1.7758, 2.2465]]