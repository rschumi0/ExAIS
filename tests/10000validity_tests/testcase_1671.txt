import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Min33529 = tf.keras.layers.Input(shape=([2, 1, 2]))
in1Min33529 = tf.keras.layers.Input(shape=([2, 1, 2]))

Min33529 = keras.layers.Minimum(name = 'Min33529', )([in0Min33529,in1Min33529])
Fla89638 = keras.layers.Flatten(name = 'Fla89638', )(Min33529)
ReL29223 = keras.layers.ReLU(max_value=3.169414173467854, negative_slope=8.742098322582528, threshold=5.338049755063446, name = 'ReL29223', )(Fla89638)
model = tf.keras.models.Model(inputs=[in0Min33529,in1Min33529], outputs=ReL29223)
in0Min33529 = tf.constant([[[[0.9452, 0.7235]], [[0.7612, 0.5667]]]])
in1Min33529 = tf.constant([[[[0.7916, 0.7166]], [[0.5129, 0.8843]]]])
print (np.array2string(model.predict([in0Min33529,in1Min33529],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='ReL29223.png')

LMin33529 = minimum_layer([[[[[0.9452, 0.7235]], [[0.7612, 0.5667]]]], [[[[0.7916, 0.7166]], [[0.5129, 0.8843]]]]], Min33529), 
LFla89638 = flatten_layer(Min33529, Fla89638), 
LReL29223 = relu_layer(Fla89638, 3.169414173467854, 8.742098322582528, 5.338049755063446, ReL29223), 
exec_layers([LMin33529,LFla89638,LReL29223],["Min33529","Fla89638","ReL29223"],ReL29223,"ReL29223")

Actual (Unparsed): [[-39.7455109, -40.4011681, -42.1819336, -41.7116089]]

Expected (Unparsed): [[-39.7455107774459,-40.401168151639595,-42.18193357994965,-41.711608690194716]]

Actual:   [[-39.7455, -40.4011, -42.1819, -41.7116]]

Expected: [[-39.7455, -40.4011, -42.1819, -41.7116]]