import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Lay7662 = tf.keras.layers.Input(shape=([4, 4]))

Lay7662 = keras.layers.LayerNormalization(axis=2, epsilon=1.4380095675690183, name = 'Lay7662', )(in0Lay7662)
Fla76086 = keras.layers.Flatten(name = 'Fla76086', )(Lay7662)
Res35605 = keras.layers.Reshape((16, 1), name = 'Res35605', )(Fla76086)
Res67455 = keras.layers.Reshape((16, 1, 1), name = 'Res67455', )(Res35605)
Res4750 = keras.layers.Reshape((16, 1, 1, 1), name = 'Res4750', )(Res67455)
Cro61642 = keras.layers.Cropping3D(cropping=((3, 6), (0, 0), (0, 0)), name = 'Cro61642', )(Res4750)
model = tf.keras.models.Model(inputs=[in0Lay7662], outputs=Cro61642)
in0Lay7662 = tf.constant([[[1.0316, 1.7446, 1.2258, 1.5309], [1.441, 1.5537, 1.1875, 1.4357], [1.1835, 1.3725, 1.975, 1.6212], [1.5126, 1.1639, 1.4271, 1.7605]]])
print (np.array2string(model.predict([in0Lay7662],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Cro61642.png')

LLay7662 = layer_normalization_layer([[[1.0316, 1.7446, 1.2258, 1.5309], [1.441, 1.5537, 1.1875, 1.4357], [1.1835, 1.3725, 1.975, 1.6212], [1.5126, 1.1639, 1.4271, 1.7605]]], 2, 1.4380095675690183, Lay7662), 
LFla76086 = flatten_layer(Lay7662, Fla76086), 
LRes35605 = reshape_layer(Fla76086, [16, 1], Res35605), 
LRes67455 = reshape_layer(Res35605, [16, 1, 1], Res67455), 
LRes4750 = reshape_layer(Res67455, [16, 1, 1, 1], Res4750), 
LCro61642 = cropping3D_layer(Res4750, 3, 6, 0, 0, 0, 0, Cro61642), 
exec_layers([LLay7662,LFla76086,LRes35605,LRes67455,LRes4750,LCro61642],["Lay7662","Fla76086","Res35605","Res67455","Res4750","Cro61642"],Cro61642,"Cro61642")

Actual (Unparsed): [[[[[0.1200485]]], [[[0.0302706]]], [[[0.1236722]]], [[[-0.1798210]]], [[[0.0258782]]], [[[-0.2870358]]], [[[-0.1340257]]]]]

Expected (Unparsed): [[[[[0.12004847034146161]]],[[[0.03027059528186589]]],[[[0.1236722677874449]]],[[[-0.17982101057584732]]],[[[0.025878147506536907]]],[[[-0.28703585916373336]]],[[[-0.13402562821761688]]]]]

Actual:   [[[[[0.1201]]], [[[0.0303]]], [[[0.1237]]], [[[-0.1798]]], [[[0.0259]]], [[[-0.287]]], [[[-0.134]]]]]

Expected: [[[[[0.1201]]], [[[0.0303]]], [[[0.1237]]], [[[-0.1798]]], [[[0.0259]]], [[[-0.287]]], [[[-0.134]]]]]