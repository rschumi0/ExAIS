import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0PRe15571 = tf.keras.layers.Input(shape=([2, 1, 1, 2]))
in0Con45836 = tf.keras.layers.Input(shape=([1, 1]))
in0Con54179 = tf.keras.layers.Input(shape=([6, 3, 1]))

PRe15571 = keras.layers.PReLU(name = 'PRe15571', input_shape=(2, 1, 1, 2))(in0PRe15571)
Mas9393 = keras.layers.Masking(mask_value=2, name = 'Mas9393', )(PRe15571)
Res7776 = keras.layers.Reshape((2, 1, 2), name = 'Res7776', )(Mas9393)
Zer42954 = keras.layers.ZeroPadding2D(padding=((4, 0), (2, 0)), name = 'Zer42954', )(Res7776)
Con45836 = keras.layers.Conv1D(4, (1),strides=(1), padding='valid', dilation_rate=(1), name = 'Con45836', )(in0Con45836)
Glo13523 = keras.layers.GlobalAveragePooling1D(name = 'Glo13523', )(Con45836)
Res7031 = keras.layers.Reshape((4, 1), name = 'Res7031', )(Glo13523)
Res43618 = keras.layers.Reshape((4, 1, 1), name = 'Res43618', )(Res7031)
Zer60426 = keras.layers.ZeroPadding2D(padding=((1, 1), (1, 1)), name = 'Zer60426', )(Res43618)
Con54179 = keras.layers.Concatenate(axis=3, name = 'Con54179', )([Zer60426,in0Con54179])
Add80201 = keras.layers.Add(name = 'Add80201', )([Zer42954,Con54179])
model = tf.keras.models.Model(inputs=[in0PRe15571,in0Con45836,in0Con54179], outputs=Add80201)
w = model.get_layer('PRe15571').get_weights() 
w[0] = np.array([[[[0.5362, 0.6793]]], [[[0.9071, 0.2321]]]])
model.get_layer('PRe15571').set_weights(w) 
w = model.get_layer('Con45836').get_weights() 
w[0] = np.array([[[0.9496, 0.7311, 0.9045, 0.9705]]])
w[1] = np.array([0, 0, 0, 0])
model.get_layer('Con45836').set_weights(w) 
in0PRe15571 = tf.constant([[[[[0.404, 0.0789]]], [[[0.5048, 0.8969]]]]])
in0Con45836 = tf.constant([[[0.9785]]])
in0Con54179 = tf.constant([[[[0.6232], [0.4232], [0.9733]], [[0.4912], [0.511], [0.8373]], [[0.2951], [0.7059], [0.8152]], [[0.5847], [0.4711], [0.9578]], [[0.155], [0.1416], [0.5667]], [[0.9193], [0.0915], [0.4563]]]])
print (np.array2string(model.predict([in0PRe15571,in0Con45836,in0Con54179],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Add80201.png')

LPRe15571 = prelu_layer([[[[[0.404, 0.0789]]], [[[0.5048, 0.8969]]]]], [[[[0.5362, 0.6793]]], [[[0.9071, 0.2321]]]], PRe15571), 
LMas9393 = masking_layer(PRe15571, 2, Mas9393), 
LRes7776 = reshape_layer(Mas9393, [2, 1, 2], Res7776), 
LZer42954 = zero_padding2D_layer(Res7776, 4, 0, 2, 0, Zer42954), 
LCon45836 = conv1D_layer([[[0.9785]]], 1,[[[0.9496, 0.7311, 0.9045, 0.9705]]],[0, 0, 0, 0], 1, false, 1, Con45836), 
LGlo13523 = global_average_pooling1D_layer(Con45836, Glo13523), 
LRes7031 = reshape_layer(Glo13523, [4, 1], Res7031), 
LRes43618 = reshape_layer(Res7031, [4, 1, 1], Res43618), 
LZer60426 = zero_padding2D_layer(Res43618, 1, 1, 1, 1, Zer60426), 
LCon54179 = concatenate_layer([Zer60426,[[[[0.6232], [0.4232], [0.9733]], [[0.4912], [0.511], [0.8373]], [[0.2951], [0.7059], [0.8152]], [[0.5847], [0.4711], [0.9578]], [[0.155], [0.1416], [0.5667]], [[0.9193], [0.0915], [0.4563]]]]], 3, Con54179), 
LAdd80201 = add_layer([Zer42954,Con54179], Add80201), 
exec_layers([LPRe15571,LMas9393,LRes7776,LZer42954,LCon45836,LGlo13523,LRes7031,LRes43618,LZer60426,LCon54179,LAdd80201],["PRe15571","Mas9393","Res7776","Zer42954","Con45836","Glo13523","Res7031","Res43618","Zer60426","Con54179","Add80201"],Add80201,"Add80201")

Actual (Unparsed): [[[[0.0000000, 0.6232000], [0.0000000, 0.4232000], [0.0000000, 0.9733000]], [[0.0000000, 0.4912000], [0.9291836, 0.5110000], [0.0000000, 0.8373000]], [[0.0000000, 0.2951000], [0.7153814, 0.7059000], [0.0000000, 0.8152000]], [[0.0000000, 0.5847000], [0.8850533, 0.4711000], [0.0000000, 0.9578000]], [[0.0000000, 0.1550000], [0.9496343, 0.1416000], [0.4040000, 0.6456000]], [[0.0000000, 0.9193000], [0.0000000, 0.0915000], [0.5048000, 1.3532000]]]]

Expected (Unparsed): [[[[0,0.6232],[0,0.4232],[0,0.9733]],[[0,0.4912],[0.9291836,0.511],[0,0.8373]],[[0,0.2951],[0.71538135,0.7059],[0,0.8152]],[[0,0.5847],[0.88505325,0.4711],[0,0.9578]],[[0,0.155],[0.94963425,0.1416],[0.404,0.6456]],[[0,0.9193],[0,0.0915],[0.5048,1.3532]]]]

Actual:   [[[[0, 0.6232], [0, 0.4232], [0, 0.9733]], [[0, 0.4912], [0.9292, 0.511], [0, 0.8373]], [[0, 0.2951], [0.7154, 0.7059], [0, 0.8152]], [[0, 0.5847], [0.8851, 0.4711], [0, 0.9578]], [[0, 0.155], [0.9497, 0.1416], [0.404, 0.6456]], [[0, 0.9193], [0, 0.0915], [0.5048, 1.3532]]]]

Expected: [[[[0, 0.6232], [0, 0.4232], [0, 0.9733]], [[0, 0.4912], [0.9292, 0.511], [0, 0.8373]], [[0, 0.2951], [0.7154, 0.7059], [0, 0.8152]], [[0, 0.5847], [0.8851, 0.4711], [0, 0.9578]], [[0, 0.155], [0.9497, 0.1416], [0.404, 0.6456]], [[0, 0.9193], [0, 0.0915], [0.5048, 1.3532]]]]