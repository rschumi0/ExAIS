import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Max50361 = tf.keras.layers.Input(shape=([2, 1, 2, 2]))
in1Max50361 = tf.keras.layers.Input(shape=([2, 1, 2, 2]))
in0Glo18673 = tf.keras.layers.Input(shape=([2, 1, 1, 2]))
in0Con88417 = tf.keras.layers.Input(shape=([6]))
in0Con49037 = tf.keras.layers.Input(shape=([8, 2]))
in0Sub98235 = tf.keras.layers.Input(shape=([2]))
in1Sub98235 = tf.keras.layers.Input(shape=([2]))

Max50361 = keras.layers.Maximum(name = 'Max50361', )([in0Max50361,in1Max50361])
Res24435 = keras.layers.Reshape((2, 1, 4), name = 'Res24435', )(Max50361)
Res26631 = keras.layers.Reshape((2, 4), name = 'Res26631', )(Res24435)
Fla61144 = keras.layers.Flatten(name = 'Fla61144', )(Res26631)
Glo18673 = keras.layers.GlobalMaxPool3D(name = 'Glo18673', )(in0Glo18673)
Con88417 = keras.layers.Concatenate(axis=1, name = 'Con88417', )([Glo18673,in0Con88417])
Min21286 = keras.layers.Minimum(name = 'Min21286', )([Fla61144,Con88417])
Res26059 = keras.layers.Reshape((8, 1), name = 'Res26059', )(Min21286)
Con49037 = keras.layers.Concatenate(axis=2, name = 'Con49037', )([Res26059,in0Con49037])
Sub98235 = keras.layers.Subtract(name = 'Sub98235', )([in0Sub98235,in1Sub98235])
Res12670 = keras.layers.Reshape((2, 1), name = 'Res12670', )(Sub98235)
Con29903 = keras.layers.Conv1D(3, (1),strides=(1), padding='same', dilation_rate=(1), name = 'Con29903', )(Res12670)
Zer68312 = keras.layers.ZeroPadding1D(padding=((6, 0)), name = 'Zer68312', )(Con29903)
Ave93972 = keras.layers.Average(name = 'Ave93972', )([Con49037,Zer68312])
Cro52536 = keras.layers.Cropping1D(cropping=((0, 0)), name = 'Cro52536', )(Ave93972)
model = tf.keras.models.Model(inputs=[in0Max50361,in1Max50361,in0Glo18673,in0Con88417,in0Con49037,in0Sub98235,in1Sub98235], outputs=Cro52536)
w = model.get_layer('Con29903').get_weights() 
w[0] = np.array([[[0.1219, 0.3537, 0.8549]]])
w[1] = np.array([0, 0, 0])
model.get_layer('Con29903').set_weights(w) 
in0Max50361 = tf.constant([[[[[0.3577, 0.9975], [0.3713, 0.9589]]], [[[0.2543, 0.8041], [0.4503, 0.9537]]]]])
in1Max50361 = tf.constant([[[[[0.4795, 0.318], [0.4428, 0.6021]]], [[[0.0117, 0.3205], [0.4954, 0.2184]]]]])
in0Glo18673 = tf.constant([[[[[1.0237, 1.989]]], [[[1.5427, 1.438]]]]])
in0Con88417 = tf.constant([[0.4283, 0.8485, 0.2345, 0.785, 0.1379, 0.7551]])
in0Con49037 = tf.constant([[[0.0862, 0.6521], [0.2162, 0.0286], [0.8129, 0.8668], [0.7903, 0.6535], [0.3655, 0.4938], [0.4771, 0.1448], [0.0848, 0.1413], [0.0048, 0.4678]]])
in0Sub98235 = tf.constant([[0.179, 0.1295]])
in1Sub98235 = tf.constant([[0.0142, 0.1861]])
print (np.array2string(model.predict([in0Max50361,in1Max50361,in0Glo18673,in0Con88417,in0Con49037,in0Sub98235,in1Sub98235],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Cro52536.png')

LMax50361 = maximum_layer([[[[[[0.3577, 0.9975], [0.3713, 0.9589]]], [[[0.2543, 0.8041], [0.4503, 0.9537]]]]], [[[[[0.4795, 0.318], [0.4428, 0.6021]]], [[[0.0117, 0.3205], [0.4954, 0.2184]]]]]], Max50361), 
LRes24435 = reshape_layer(Max50361, [2, 1, 4], Res24435), 
LRes26631 = reshape_layer(Res24435, [2, 4], Res26631), 
LFla61144 = flatten_layer(Res26631, Fla61144), 
LGlo18673 = global_max_pool3D_layer([[[[[1.0237, 1.989]]], [[[1.5427, 1.438]]]]], Glo18673), 
LCon88417 = concatenate_layer([Glo18673,[[0.4283, 0.8485, 0.2345, 0.785, 0.1379, 0.7551]]], 1, Con88417), 
LMin21286 = minimum_layer([Fla61144,Con88417], Min21286), 
LRes26059 = reshape_layer(Min21286, [8, 1], Res26059), 
LCon49037 = concatenate_layer([Res26059,[[[0.0862, 0.6521], [0.2162, 0.0286], [0.8129, 0.8668], [0.7903, 0.6535], [0.3655, 0.4938], [0.4771, 0.1448], [0.0848, 0.1413], [0.0048, 0.4678]]]], 2, Con49037), 
LSub98235 = subtract_layer([[0.179, 0.1295]], [[0.0142, 0.1861]], Sub98235), 
LRes12670 = reshape_layer(Sub98235, [2, 1], Res12670), 
LCon29903 = conv1D_layer(Res12670, 1,[[[0.1219, 0.3537, 0.8549]]],[0, 0, 0], 1, true, 1, Con29903), 
LZer68312 = zero_padding1D_layer(Con29903, 6, 0, Zer68312), 
LAve93972 = average_layer([Con49037,Zer68312], Ave93972), 
LCro52536 = cropping1D_layer(Ave93972, 0, 0, Cro52536), 
exec_layers([LMax50361,LRes24435,LRes26631,LFla61144,LGlo18673,LCon88417,LMin21286,LRes26059,LCon49037,LSub98235,LRes12670,LCon29903,LZer68312,LAve93972,LCro52536],["Max50361","Res24435","Res26631","Fla61144","Glo18673","Con88417","Min21286","Res26059","Con49037","Sub98235","Res12670","Con29903","Zer68312","Ave93972","Cro52536"],Cro52536,"Cro52536")

Actual (Unparsed): [[[0.2397500, 0.0431000, 0.3260500], [0.4987500, 0.1081000, 0.0143000], [0.2141500, 0.4064500, 0.4334000], [0.4242500, 0.3951500, 0.3267500], [0.1172500, 0.1827500, 0.2469000], [0.3925000, 0.2385500, 0.0724000], [0.0789946, 0.0715449, 0.1410938], [0.3741002, -0.0076097, 0.2097063]]]

Expected (Unparsed): [[[0.23975,0.0431,0.32605],[0.49875,0.1081,0.0143],[0.21415,0.40645,0.4334],[0.42425,0.39515,0.32675],[0.11725,0.18275,0.2469],[0.3925,0.23855,0.0724],[0.07899455999999999,0.07154488,0.14109376],[0.37410023,-0.007609709999999999,0.20970633]]]

Actual:   [[[0.2398, 0.0431, 0.3261], [0.4988, 0.1081, 0.0143], [0.2142, 0.4065, 0.4334], [0.4243, 0.3952, 0.3268], [0.1173, 0.1828, 0.2469], [0.3925, 0.2386, 0.0724], [0.079, 0.0716, 0.1411], [0.3742, -0.0076, 0.2098]]]

Expected: [[[0.2398, 0.0431, 0.3261], [0.4988, 0.1081, 0.0143], [0.2142, 0.4065, 0.4334], [0.4243, 0.3952, 0.3268], [0.1173, 0.1828, 0.2469], [0.3925, 0.2386, 0.0724], [0.079, 0.0716, 0.1411], [0.3742, -0.0076, 0.2098]]]