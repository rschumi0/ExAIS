import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Max56150 = tf.keras.layers.Input(shape=([1, 1]))
in1Max56150 = tf.keras.layers.Input(shape=([1, 1]))
in0Con28393 = tf.keras.layers.Input(shape=([4]))
in0Mul84935 = tf.keras.layers.Input(shape=([2, 2, 1, 2]))
in1Mul84935 = tf.keras.layers.Input(shape=([2, 2, 1, 2]))
in0Fla1837 = tf.keras.layers.Input(shape=([1, 3]))
in0Con11900 = tf.keras.layers.Input(shape=([5]))

Max56150 = keras.layers.Maximum(name = 'Max56150', )([in0Max56150,in1Max56150])
Sep12703 = keras.layers.SeparableConv1D(4, (1),strides=(1), padding='valid', name = 'Sep12703', )(Max56150)
Fla31227 = keras.layers.Flatten(name = 'Fla31227', )(Sep12703)
Con28393 = keras.layers.Concatenate(axis=1, name = 'Con28393', )([Fla31227,in0Con28393])
Mul84935 = keras.layers.Multiply(name = 'Mul84935', )([in0Mul84935,in1Mul84935])
Res36727 = keras.layers.Reshape((2, 2, 2), name = 'Res36727', )(Mul84935)
Res25223 = keras.layers.Reshape((2, 4), name = 'Res25223', )(Res36727)
Fla85405 = keras.layers.Flatten(name = 'Fla85405', )(Res25223)
Fla1837 = keras.layers.Flatten(name = 'Fla1837', )(in0Fla1837)
Con11900 = keras.layers.Concatenate(axis=1, name = 'Con11900', )([Fla1837,in0Con11900])
Max43250 = keras.layers.Maximum(name = 'Max43250', )([Fla85405,Con11900])
Min82019 = keras.layers.Minimum(name = 'Min82019', )([Con28393,Max43250])
model = tf.keras.models.Model(inputs=[in0Max56150,in1Max56150,in0Con28393,in0Mul84935,in1Mul84935,in0Fla1837,in0Con11900], outputs=Min82019)
w = model.get_layer('Sep12703').get_weights() 
w[0] = np.array([[[0.5305]]])
w[1] = np.array([[[0.0582, 0.2549, 0.7495, 0.4272]]])
w[2] = np.array([0, 0, 0, 0])
model.get_layer('Sep12703').set_weights(w) 
in0Max56150 = tf.constant([[[0.1667]]])
in1Max56150 = tf.constant([[[0.1989]]])
in0Con28393 = tf.constant([[0.4455, 0.6168, 0.8774, 0.4255]])
in0Mul84935 = tf.constant([[[[[0.8738, 0.6818]], [[0.7868, 0.9698]]], [[[0.4831, 0.8019]], [[0.6798, 0.0883]]]]])
in1Mul84935 = tf.constant([[[[[0.8441, 0.4696]], [[0.8514, 0.0748]]], [[[0.8151, 0.4306]], [[0.8458, 0.1214]]]]])
in0Fla1837 = tf.constant([[[1.4013, 1.2209, 1.7413]]])
in0Con11900 = tf.constant([[0.4041, 0.9202, 0.9398, 0.8268, 0.2623]])
print (np.array2string(model.predict([in0Max56150,in1Max56150,in0Con28393,in0Mul84935,in1Mul84935,in0Fla1837,in0Con11900],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Min82019.png')

LMax56150 = maximum_layer([[[[0.1667]]], [[[0.1989]]]], Max56150), 
LSep12703 = separable_conv1D_layer(Max56150, 1,[[[[0.5305]]],[[[0.0582, 0.2549, 0.7495, 0.4272]]]],[0, 0, 0, 0], 1, false, Sep12703), 
LFla31227 = flatten_layer(Sep12703, Fla31227), 
LCon28393 = concatenate_layer([Fla31227,[[0.4455, 0.6168, 0.8774, 0.4255]]], 1, Con28393), 
LMul84935 = multiply_layer([[[[[[0.8738, 0.6818]], [[0.7868, 0.9698]]], [[[0.4831, 0.8019]], [[0.6798, 0.0883]]]]], [[[[[0.8441, 0.4696]], [[0.8514, 0.0748]]], [[[0.8151, 0.4306]], [[0.8458, 0.1214]]]]]], Mul84935), 
LRes36727 = reshape_layer(Mul84935, [2, 2, 2], Res36727), 
LRes25223 = reshape_layer(Res36727, [2, 4], Res25223), 
LFla85405 = flatten_layer(Res25223, Fla85405), 
LFla1837 = flatten_layer([[[1.4013, 1.2209, 1.7413]]], Fla1837), 
LCon11900 = concatenate_layer([Fla1837,[[0.4041, 0.9202, 0.9398, 0.8268, 0.2623]]], 1, Con11900), 
LMax43250 = maximum_layer([Fla85405,Con11900], Max43250), 
LMin82019 = minimum_layer([Con28393,Max43250], Min82019), 
exec_layers([LMax56150,LSep12703,LFla31227,LCon28393,LMul84935,LRes36727,LRes25223,LFla85405,LFla1837,LCon11900,LMax43250,LMin82019],["Max56150","Sep12703","Fla31227","Con28393","Mul84935","Res36727","Res25223","Fla85405","Fla1837","Con11900","Max43250","Min82019"],Min82019,"Min82019")

Actual (Unparsed): [[0.0061411, 0.0268961, 0.0790846, 0.0450766, 0.4455000, 0.6168000, 0.8268000, 0.2623000]]

Expected (Unparsed): [[0.00614105739,0.026896143105000003,0.07908457927500001,0.04507662744,0.4455,0.6168,0.8268,0.2623]]

Actual:   [[0.0062, 0.0269, 0.0791, 0.0451, 0.4455, 0.6168, 0.8268, 0.2623]]

Expected: [[0.0062, 0.0269, 0.0791, 0.0451, 0.4455, 0.6168, 0.8268, 0.2623]]