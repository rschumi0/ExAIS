import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Ave10350 = tf.keras.layers.Input(shape=([2, 2]))

Ave10350 = keras.layers.AveragePooling1D(pool_size=(1), strides=(1), padding='valid', name = 'Ave10350', )(in0Ave10350)
Sim28522 = keras.layers.SimpleRNN(3,name = 'Sim28522', )(Ave10350)
model = tf.keras.models.Model(inputs=[in0Ave10350], outputs=Sim28522)
w = model.get_layer('Sim28522').get_weights() 
w[0] = np.array([[7, 10, 9], [1, 8, 1]])
w[1] = np.array([[10, 5, 8], [3, 2, 10], [4, 8, 3]])
w[2] = np.array([5, 5, 6])
model.get_layer('Sim28522').set_weights(w) 
in0Ave10350 = tf.constant([[[1.1144, 1.1974], [1.3062, 1.2181]]])
print (np.array2string(model.predict([in0Ave10350],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Sim28522.png')

LAve10350 = average_pooling1D_layer([[[1.1144, 1.1974], [1.3062, 1.2181]]], 1, 1, false, Ave10350), 
LSim28522 = simple_rnn_layer(Ave10350,[[7, 10, 9], [1, 8, 1]],[[10, 5, 8], [3, 2, 10], [4, 8, 3]],[5, 5, 6], Sim28522), 
exec_layers([LAve10350,LSim28522],["Ave10350","Sim28522"],Sim28522,"Sim28522")

Actual (Unparsed): [[1.0000000, 1.0000000, 1.0000000]]

Expected (Unparsed): [[1.0,1.0,1.0]]

Actual:   [[1, 1, 1]]

Expected: [[1, 1, 1]]