import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Sep16220 = tf.keras.layers.Input(shape=([1, 1]))

Sep16220 = keras.layers.SeparableConv1D(2, (1),strides=(1), padding='same', name = 'Sep16220', )(in0Sep16220)
Res10158 = keras.layers.Reshape((1, 2, 1), name = 'Res10158', )(Sep16220)
Loc5025 = keras.layers.LocallyConnected2D(3, (1, 2),strides=(1, 1), name = 'Loc5025', )(Res10158)
Thr84570 = keras.layers.ThresholdedReLU(theta=2.351390737602134, name = 'Thr84570', )(Loc5025)
model = tf.keras.models.Model(inputs=[in0Sep16220], outputs=Thr84570)
w = model.get_layer('Sep16220').get_weights() 
w[0] = np.array([[[0.1638]]])
w[1] = np.array([[[0.7218, 0.7046]]])
w[2] = np.array([0, 0])
model.get_layer('Sep16220').set_weights(w) 
w = model.get_layer('Loc5025').get_weights() 
w[0] = np.array([[[0.7613, 0.4737, 0.6278], [0.8469, 0.2813, 0.2635]]])
w[1] = np.array([[[0, 0, 0]]])
model.get_layer('Loc5025').set_weights(w) 
in0Sep16220 = tf.constant([[[0.0476]]])
print (np.array2string(model.predict([in0Sep16220],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Thr84570.png')

LSep16220 = separable_conv1D_layer([[[0.0476]]], 1,[[[[0.1638]]],[[[0.7218, 0.7046]]]],[0, 0], 1, true, Sep16220), 
LRes10158 = reshape_layer(Sep16220, [1, 2, 1], Res10158), 
LLoc5025 = locally_connected2D_layer(Res10158, 1, 2,[[[0.7613, 0.4737, 0.6278], [0.8469, 0.2813, 0.2635]]],[[[0, 0, 0]]], 1, 1, Loc5025), 
LThr84570 = thresholded_relu_layer(Loc5025, 2.351390737602134, Thr84570), 
exec_layers([LSep16220,LRes10158,LLoc5025,LThr84570],["Sep16220","Res10158","Loc5025","Thr84570"],Thr84570,"Thr84570")

Actual (Unparsed): [[[[0.0000000, 0.0000000, 0.0000000]]]]

Expected (Unparsed): [[[[0,0,0]]]]

Actual:   [[[[0, 0, 0]]]]

Expected: [[[[0, 0, 0]]]]