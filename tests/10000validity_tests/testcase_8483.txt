import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Sub87438 = tf.keras.layers.Input(shape=([2]))
in1Sub87438 = tf.keras.layers.Input(shape=([2]))

Sub87438 = keras.layers.Subtract(name = 'Sub87438', )([in0Sub87438,in1Sub87438])
Sof95416 = keras.layers.Softmax(axis=1, name = 'Sof95416', )(Sub87438)
ReL34101 = keras.layers.ReLU(max_value=9.085612037453345, negative_slope=5.564528947302805, threshold=5.618937496495853, name = 'ReL34101', )(Sof95416)
model = tf.keras.models.Model(inputs=[in0Sub87438,in1Sub87438], outputs=ReL34101)
in0Sub87438 = tf.constant([[0.7509, 0.6722]])
in1Sub87438 = tf.constant([[0.077, 0.9322]])
print (np.array2string(model.predict([in0Sub87438,in1Sub87438],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='ReL34101.png')

LSub87438 = subtract_layer([[0.7509, 0.6722]], [[0.077, 0.9322]], Sub87438), 
LSof95416 = softmax_layer(Sub87438, 1, Sof95416), 
LReL34101 = relu_layer(Sof95416, 9.085612037453345, 5.564528947302805, 5.618937496495853, ReL34101), 
exec_layers([LSub87438,LSof95416,LReL34101],["Sub87438","Sof95416","ReL34101"],ReL34101,"ReL34101")

Actual (Unparsed): [[-27.2721551, -29.6967966]]

Expected (Unparsed): [[-27.27215510169468,-29.69679665567518]]

Actual:   [[-27.2721, -29.6967]]

Expected: [[-27.2721, -29.6967]]