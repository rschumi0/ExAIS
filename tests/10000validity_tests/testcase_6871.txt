import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Add79885 = tf.keras.layers.Input(shape=([1, 2, 1, 1]))
in1Add79885 = tf.keras.layers.Input(shape=([1, 2, 1, 1]))

Add79885 = keras.layers.Add(name = 'Add79885', )([in0Add79885,in1Add79885])
Res21424 = keras.layers.Reshape((1, 2, 1), name = 'Res21424', )(Add79885)
Res38987 = keras.layers.Reshape((1, 2), name = 'Res38987', )(Res21424)
Up_78457 = keras.layers.UpSampling1D(size=(1), name = 'Up_78457', )(Res38987)
Lea99099 = keras.layers.LeakyReLU(alpha=2.2179091746544373, name = 'Lea99099', )(Up_78457)
model = tf.keras.models.Model(inputs=[in0Add79885,in1Add79885], outputs=Lea99099)
in0Add79885 = tf.constant([[[[[0.9146]], [[0.3838]]]]])
in1Add79885 = tf.constant([[[[[0.5054]], [[0.3425]]]]])
print (np.array2string(model.predict([in0Add79885,in1Add79885],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Lea99099.png')

LAdd79885 = add_layer([[[[[[0.9146]], [[0.3838]]]]], [[[[[0.5054]], [[0.3425]]]]]], Add79885), 
LRes21424 = reshape_layer(Add79885, [1, 2, 1], Res21424), 
LRes38987 = reshape_layer(Res21424, [1, 2], Res38987), 
LUp_78457 = up_sampling1D_layer(Res38987, 1, Up_78457), 
LLea99099 = leaky_relu_layer(Up_78457, 2.2179091746544373, Lea99099), 
exec_layers([LAdd79885,LRes21424,LRes38987,LUp_78457,LLea99099],["Add79885","Res21424","Res38987","Up_78457","Lea99099"],Lea99099,"Lea99099")

Actual (Unparsed): [[[1.4200000, 0.7263000]]]

Expected (Unparsed): [[[1.42,0.7263]]]

Actual:   [[[1.42, 0.7263]]]

Expected: [[[1.42, 0.7263]]]