import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Mul2256 = tf.keras.layers.Input(shape=([2, 2, 2, 1]))
in1Mul2256 = tf.keras.layers.Input(shape=([2, 2, 2, 1]))

Mul2256 = keras.layers.Multiply(name = 'Mul2256', )([in0Mul2256,in1Mul2256])
Con99943 = keras.layers.Conv3D(3, (1, 1, 1),strides=(1, 4, 4), padding='same', dilation_rate=(1, 1, 1), name = 'Con99943', )(Mul2256)
model = tf.keras.models.Model(inputs=[in0Mul2256,in1Mul2256], outputs=Con99943)
w = model.get_layer('Con99943').get_weights() 
w[0] = np.array([[[[[0.933, 0.2055, 0.6862]]]]])
w[1] = np.array([0, 0, 0])
model.get_layer('Con99943').set_weights(w) 
in0Mul2256 = tf.constant([[[[[0.0792], [0.9674]], [[0.3515], [0.4506]]], [[[0.8245], [0.6033]], [[0.9451], [0.0931]]]]])
in1Mul2256 = tf.constant([[[[[0.152], [0.6176]], [[0.3696], [0.1872]]], [[[0.1244], [0.6276]], [[0.2076], [0.9137]]]]])
print (np.array2string(model.predict([in0Mul2256,in1Mul2256],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Con99943.png')

LMul2256 = multiply_layer([[[[[[0.0792], [0.9674]], [[0.3515], [0.4506]]], [[[0.8245], [0.6033]], [[0.9451], [0.0931]]]]], [[[[[0.152], [0.6176]], [[0.3696], [0.1872]]], [[[0.1244], [0.6276]], [[0.2076], [0.9137]]]]]], Mul2256), 
LCon99943 = conv3D_layer(Mul2256, 1, 1, 1,[[[[[0.933, 0.2055, 0.6862]]]]],[0, 0, 0], 1, 4, 4, true, 1, 1, 1, Con99943), 
exec_layers([LMul2256,LCon99943],["Mul2256","Con99943"],Con99943,"Con99943")

Actual (Unparsed): [[[[[0.0112318, 0.0024739, 0.0082607]]], [[[0.0956958, 0.0210777, 0.0703820]]]]]

Expected (Unparsed): [[[[[0.011231827200000002,0.0024738912000000003,0.00826075008]]],[[[0.09569575740000001,0.0210776829,0.07038202436]]]]]

Actual:   [[[[[0.0113, 0.0025, 0.0083]]], [[[0.0957, 0.0211, 0.0704]]]]]

Expected: [[[[[0.0113, 0.0025, 0.0083]]], [[[0.0957, 0.0211, 0.0704]]]]]