import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Mul89985 = tf.keras.layers.Input(shape=([1, 2, 1, 1]))
in1Mul89985 = tf.keras.layers.Input(shape=([1, 2, 1, 1]))
in0GRU50892 = tf.keras.layers.Input(shape=([2, 3]))
in0Con26958 = tf.keras.layers.Input(shape=([33]))

Mul89985 = keras.layers.Multiply(name = 'Mul89985', )([in0Mul89985,in1Mul89985])
Zer94293 = keras.layers.ZeroPadding3D(padding=((1, 1), (1, 1), (1, 1)), name = 'Zer94293', )(Mul89985)
Res99269 = keras.layers.Reshape((3, 4, 3), name = 'Res99269', )(Zer94293)
Res31453 = keras.layers.Reshape((3, 12), name = 'Res31453', )(Res99269)
Fla51517 = keras.layers.Flatten(name = 'Fla51517', )(Res31453)
GRU50892 = keras.layers.GRU(3,reset_after=False, recurrent_activation='sigmoid', name = 'GRU50892', )(in0GRU50892)
Con26958 = keras.layers.Concatenate(axis=1, name = 'Con26958', )([GRU50892,in0Con26958])
Mul68558 = keras.layers.Multiply(name = 'Mul68558', )([Fla51517,Con26958])
Res66620 = keras.layers.Reshape((36, 1), name = 'Res66620', )(Mul68558)
Res91925 = keras.layers.Reshape((36, 1, 1), name = 'Res91925', )(Res66620)
Glo79340 = keras.layers.GlobalAveragePooling2D(name = 'Glo79340', )(Res91925)
model = tf.keras.models.Model(inputs=[in0Mul89985,in1Mul89985,in0GRU50892,in0Con26958], outputs=Glo79340)
w = model.get_layer('GRU50892').get_weights() 
w[0] = np.array([[2, 5, 7, 6, 1, 3, 3, 3, 2], [8, 10, 7, 7, 8, 5, 1, 5, 6], [6, 7, 9, 2, 9, 2, 6, 8, 5]])
w[1] = np.array([[7, 2, 8, 3, 5, 3, 9, 7, 8], [8, 4, 9, 6, 7, 10, 6, 2, 8], [1, 4, 9, 4, 6, 8, 2, 7, 2]])
w[2] = np.array([4, 1, 2, 5, 8, 1, 3, 2, 8])
model.get_layer('GRU50892').set_weights(w) 
in0Mul89985 = tf.constant([[[[[0.7473]], [[0.0368]]]]])
in1Mul89985 = tf.constant([[[[[0.9445]], [[0.7322]]]]])
in0GRU50892 = tf.constant([[[8, 8, 6], [10, 3, 6]]])
in0Con26958 = tf.constant([[0.7157, 0.146, 0.0254, 0.967, 0.6402, 0.4567, 0.0607, 0.4212, 0.7061, 0.4155, 0.2605, 0.7598, 0.6054, 0.2582, 0.9293, 0.3686, 0.8379, 0.076, 0.7366, 0.083, 0.0238, 0.9602, 0.0681, 0.2448, 0.7991, 0.8618, 0.5219, 0.7157, 0.1879, 0.5003, 0.4711, 0.1487, 0.1871]])
print (np.array2string(model.predict([in0Mul89985,in1Mul89985,in0GRU50892,in0Con26958],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Glo79340.png')

LMul89985 = multiply_layer([[[[[[0.7473]], [[0.0368]]]]], [[[[[0.9445]], [[0.7322]]]]]], Mul89985), 
LZer94293 = zero_padding3D_layer(Mul89985, 1, 1, 1, 1, 1, 1, Zer94293), 
LRes99269 = reshape_layer(Zer94293, [3, 4, 3], Res99269), 
LRes31453 = reshape_layer(Res99269, [3, 12], Res31453), 
LFla51517 = flatten_layer(Res31453, Fla51517), 
LGRU50892 = gru_layer([[[8, 8, 6], [10, 3, 6]]],[[2, 5, 7, 6, 1, 3, 3, 3, 2], [8, 10, 7, 7, 8, 5, 1, 5, 6], [6, 7, 9, 2, 9, 2, 6, 8, 5]],[[7, 2, 8, 3, 5, 3, 9, 7, 8], [8, 4, 9, 6, 7, 10, 6, 2, 8], [1, 4, 9, 4, 6, 8, 2, 7, 2]],[4, 1, 2, 5, 8, 1, 3, 2, 8], false, GRU50892), 
LCon26958 = concatenate_layer([GRU50892,[[0.7157, 0.146, 0.0254, 0.967, 0.6402, 0.4567, 0.0607, 0.4212, 0.7061, 0.4155, 0.2605, 0.7598, 0.6054, 0.2582, 0.9293, 0.3686, 0.8379, 0.076, 0.7366, 0.083, 0.0238, 0.9602, 0.0681, 0.2448, 0.7991, 0.8618, 0.5219, 0.7157, 0.1879, 0.5003, 0.4711, 0.1487, 0.1871]]], 1, Con26958), 
LMul68558 = multiply_layer([Fla51517,Con26958], Mul68558), 
LRes66620 = reshape_layer(Mul68558, [36, 1], Res66620), 
LRes91925 = reshape_layer(Res66620, [36, 1, 1], Res91925), 
LGlo79340 = global_average_pooling2D_layer(Res91925, Glo79340), 
exec_layers([LMul89985,LZer94293,LRes99269,LRes31453,LFla51517,LGRU50892,LCon26958,LMul68558,LRes66620,LRes91925,LGlo79340],["Mul89985","Zer94293","Res99269","Res31453","Fla51517","GRU50892","Con26958","Mul68558","Res66620","Res91925","Glo79340"],Glo79340,"Glo79340")

Actual (Unparsed): [[0.0056895]]

Expected (Unparsed): [[0.005689476618166666]]

Actual:   [[0.0057]]

Expected: [[0.0057]]