import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Glo38932 = tf.keras.layers.Input(shape=([2, 1, 2]))
in0LST68070 = tf.keras.layers.Input(shape=([2, 2]))

Glo38932 = keras.layers.GlobalMaxPool2D(name = 'Glo38932', )(in0Glo38932)
Res32652 = keras.layers.Reshape((2, 1), name = 'Res32652', )(Glo38932)
Res16584 = keras.layers.Reshape((2, 1, 1), name = 'Res16584', )(Res32652)
Zer72866 = keras.layers.ZeroPadding2D(padding=((0, 0), (4, 0)), name = 'Zer72866', )(Res16584)
LST68070 = keras.layers.LSTM(2,recurrent_activation='sigmoid', name = 'LST68070', )(in0LST68070)
Thr33213 = keras.layers.ThresholdedReLU(theta=5.065391769840142, name = 'Thr33213', )(LST68070)
Res32482 = keras.layers.Reshape((2, 1), name = 'Res32482', )(Thr33213)
Con95931 = keras.layers.Conv1D(3, (2),strides=(1), padding='valid', dilation_rate=(1), name = 'Con95931', )(Res32482)
Res43916 = keras.layers.Reshape((1, 3, 1), name = 'Res43916', )(Con95931)
PRe44090 = keras.layers.PReLU(name = 'PRe44090', )(Res43916)
Zer79801 = keras.layers.ZeroPadding2D(padding=((1, 0), (2, 0)), name = 'Zer79801', )(PRe44090)
Min14386 = keras.layers.Minimum(name = 'Min14386', )([Zer72866,Zer79801])
model = tf.keras.models.Model(inputs=[in0Glo38932,in0LST68070], outputs=Min14386)
w = model.get_layer('LST68070').get_weights() 
w[0] = np.array([[7, 5, 5, 8, 2, 1, 2, 1], [6, 4, 6, 3, 4, 1, 10, 5]])
w[1] = np.array([[8, 2, 8, 10, 2, 4, 5, 7], [1, 4, 6, 8, 1, 6, 3, 5]])
w[2] = np.array([6, 10, 1, 5, 2, 9, 10, 10])
model.get_layer('LST68070').set_weights(w) 
w = model.get_layer('Con95931').get_weights() 
w[0] = np.array([[[0.4111, 0.4783, 0.5592]], [[0.4626, 0.3116, 0.5832]]])
w[1] = np.array([0, 0, 0])
model.get_layer('Con95931').set_weights(w) 
w = model.get_layer('PRe44090').get_weights() 
w[0] = np.array([[[0.5741], [0.7809], [0.149]]])
model.get_layer('PRe44090').set_weights(w) 
in0Glo38932 = tf.constant([[[[1.5536, 1.003]], [[1.4558, 1.19]]]])
in0LST68070 = tf.constant([[[8, 8], [4, 6]]])
print (np.array2string(model.predict([in0Glo38932,in0LST68070],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Min14386.png')

LGlo38932 = global_max_pool2D_layer([[[[1.5536, 1.003]], [[1.4558, 1.19]]]], Glo38932), 
LRes32652 = reshape_layer(Glo38932, [2, 1], Res32652), 
LRes16584 = reshape_layer(Res32652, [2, 1, 1], Res16584), 
LZer72866 = zero_padding2D_layer(Res16584, 0, 0, 4, 0, Zer72866), 
LLST68070 = lstm_layer([[[8, 8], [4, 6]]],[[7, 5, 5, 8, 2, 1, 2, 1], [6, 4, 6, 3, 4, 1, 10, 5]],[[8, 2, 8, 10, 2, 4, 5, 7], [1, 4, 6, 8, 1, 6, 3, 5]],[6, 10, 1, 5, 2, 9, 10, 10], LST68070), 
LThr33213 = thresholded_relu_layer(LST68070, 5.065391769840142, Thr33213), 
LRes32482 = reshape_layer(Thr33213, [2, 1], Res32482), 
LCon95931 = conv1D_layer(Res32482, 2,[[[0.4111, 0.4783, 0.5592]], [[0.4626, 0.3116, 0.5832]]],[0, 0, 0], 1, false, 1, Con95931), 
LRes43916 = reshape_layer(Con95931, [1, 3, 1], Res43916), 
LPRe44090 = prelu_layer(Res43916, [[[0.5741], [0.7809], [0.149]]], PRe44090), 
LZer79801 = zero_padding2D_layer(PRe44090, 1, 0, 2, 0, Zer79801), 
LMin14386 = minimum_layer([Zer72866,Zer79801], Min14386), 
exec_layers([LGlo38932,LRes32652,LRes16584,LZer72866,LLST68070,LThr33213,LRes32482,LCon95931,LRes43916,LPRe44090,LZer79801,LMin14386],["Glo38932","Res32652","Res16584","Zer72866","LST68070","Thr33213","Res32482","Con95931","Res43916","PRe44090","Zer79801","Min14386"],Min14386,"Min14386")

Actual (Unparsed): [[[[0.0000000], [0.0000000], [0.0000000], [0.0000000], [0.0000000]], [[0.0000000], [0.0000000], [0.0000000], [0.0000000], [0.0000000]]]]

Expected (Unparsed): [[[[0],[0],[0],[0],[0]],[[0],[0],[0],[0],[0.0]]]]

Actual:   [[[[0], [0], [0], [0], [0]], [[0], [0], [0], [0], [0]]]]

Expected: [[[[0], [0], [0], [0], [0]], [[0], [0], [0], [0], [0]]]]