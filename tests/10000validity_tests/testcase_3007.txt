import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Glo23949 = tf.keras.layers.Input(shape=([1, 1, 1, 2]))

Glo23949 = keras.layers.GlobalAveragePooling3D(name = 'Glo23949', )(in0Glo23949)
Res87188 = keras.layers.Reshape((2, 1), name = 'Res87188', )(Glo23949)
Res99094 = keras.layers.Reshape((2, 1, 1), name = 'Res99094', )(Res87188)
Res64877 = keras.layers.Reshape((2, 1, 1, 1), name = 'Res64877', )(Res99094)
Up_67522 = keras.layers.UpSampling3D(size=(2, 2, 1), name = 'Up_67522', )(Res64877)
Thr43690 = keras.layers.ThresholdedReLU(theta=7.541294889666053, name = 'Thr43690', )(Up_67522)
model = tf.keras.models.Model(inputs=[in0Glo23949], outputs=Thr43690)
in0Glo23949 = tf.constant([[[[[1.0808, 1.1865]]]]])
print (np.array2string(model.predict([in0Glo23949],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Thr43690.png')

LGlo23949 = global_average_pooling3D_layer([[[[[1.0808, 1.1865]]]]], Glo23949), 
LRes87188 = reshape_layer(Glo23949, [2, 1], Res87188), 
LRes99094 = reshape_layer(Res87188, [2, 1, 1], Res99094), 
LRes64877 = reshape_layer(Res99094, [2, 1, 1, 1], Res64877), 
LUp_67522 = up_sampling3D_layer(Res64877, 2, 2, 1, Up_67522), 
LThr43690 = thresholded_relu_layer(Up_67522, 7.541294889666053, Thr43690), 
exec_layers([LGlo23949,LRes87188,LRes99094,LRes64877,LUp_67522,LThr43690],["Glo23949","Res87188","Res99094","Res64877","Up_67522","Thr43690"],Thr43690,"Thr43690")

Actual (Unparsed): [[[[[0.0000000]], [[0.0000000]]], [[[0.0000000]], [[0.0000000]]], [[[0.0000000]], [[0.0000000]]], [[[0.0000000]], [[0.0000000]]]]]

Expected (Unparsed): [[[[[0]],[[0]]],[[[0]],[[0]]],[[[0]],[[0]]],[[[0]],[[0]]]]]

Actual:   [[[[[0]], [[0]]], [[[0]], [[0]]], [[[0]], [[0]]], [[[0]], [[0]]]]]

Expected: [[[[[0]], [[0]]], [[[0]], [[0]]], [[[0]], [[0]]], [[[0]], [[0]]]]]