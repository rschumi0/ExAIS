import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Min48030 = tf.keras.layers.Input(shape=([1, 1]))
in1Min48030 = tf.keras.layers.Input(shape=([1, 1]))
in0Con66394 = tf.keras.layers.Input(shape=([1, 4]))
in0Mas32373 = tf.keras.layers.Input(shape=([4]))
in0Con14243 = tf.keras.layers.Input(shape=([4, 3, 1, 1]))
in0Add12944 = tf.keras.layers.Input(shape=([1, 2, 1, 2]))
in1Add12944 = tf.keras.layers.Input(shape=([1, 2, 1, 2]))

Min48030 = keras.layers.Minimum(name = 'Min48030', )([in0Min48030,in1Min48030])
Res55255 = keras.layers.Reshape((1, 1, 1), name = 'Res55255', )(Min48030)
Sep42023 = keras.layers.SeparableConv2D(2, (1, 1),strides=(1, 1), padding='valid', name = 'Sep42023', )(Res55255)
Res45982 = keras.layers.Reshape((1, 2), name = 'Res45982', )(Sep42023)
Con66394 = keras.layers.Concatenate(axis=2, name = 'Con66394', )([Res45982,in0Con66394])
Mas32373 = keras.layers.Masking(mask_value=2, name = 'Mas32373', )(in0Mas32373)
Res9868 = keras.layers.Reshape((4, 1), name = 'Res9868', )(Mas32373)
Res88709 = keras.layers.Reshape((4, 1, 1), name = 'Res88709', )(Res9868)
Res64783 = keras.layers.Reshape((4, 1, 1, 1), name = 'Res64783', )(Res88709)
Zer71128 = keras.layers.ZeroPadding3D(padding=((0, 0), (2, 0), (0, 0)), name = 'Zer71128', )(Res64783)
Con14243 = keras.layers.Concatenate(axis=4, name = 'Con14243', )([Zer71128,in0Con14243])
Add12944 = keras.layers.Add(name = 'Add12944', )([in0Add12944,in1Add12944])
Zer46378 = keras.layers.ZeroPadding3D(padding=((3, 0), (1, 0), (0, 0)), name = 'Zer46378', )(Add12944)
Mul45887 = keras.layers.Multiply(name = 'Mul45887', )([Con14243,Zer46378])
Res14939 = keras.layers.Reshape((4, 3, 2), name = 'Res14939', )(Mul45887)
Res11129 = keras.layers.Reshape((4, 6), name = 'Res11129', )(Res14939)
Dot34284 = keras.layers.Dot(axes=(2, 2), name = 'Dot34284', )([Con66394,Res11129])
Glo79534 = keras.layers.GlobalMaxPool1D(name = 'Glo79534', )(Dot34284)
model = tf.keras.models.Model(inputs=[in0Min48030,in1Min48030,in0Con66394,in0Mas32373,in0Con14243,in0Add12944,in1Add12944], outputs=Glo79534)
w = model.get_layer('Sep42023').get_weights() 
w[0] = np.array([[[[0.0524]]]])
w[1] = np.array([[[[0.6671, 0.394]]]])
w[2] = np.array([0, 0])
model.get_layer('Sep42023').set_weights(w) 
in0Min48030 = tf.constant([[[0.1897]]])
in1Min48030 = tf.constant([[[0.8601]]])
in0Con66394 = tf.constant([[[0.1024, 0.3626, 0.5303, 0.0164]]])
in0Mas32373 = tf.constant([[1.919, 1.6675, 1.4378, 1.8872]])
in0Con14243 = tf.constant([[[[[0.5711]], [[0.654]], [[0.3745]]], [[[0.4362]], [[0.4704]], [[0.6765]]], [[[0.024]], [[0.8854]], [[0.5103]]], [[[0.4657]], [[0.866]], [[0.829]]]]])
in0Add12944 = tf.constant([[[[[0.7379, 0.0751]], [[0.2948, 0.8076]]]]])
in1Add12944 = tf.constant([[[[[0.9896, 0.6464]], [[0.7474, 0.6232]]]]])
print (np.array2string(model.predict([in0Min48030,in1Min48030,in0Con66394,in0Mas32373,in0Con14243,in0Add12944,in1Add12944],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Glo79534.png')

LMin48030 = minimum_layer([[[[0.1897]]], [[[0.8601]]]], Min48030), 
LRes55255 = reshape_layer(Min48030, [1, 1, 1], Res55255), 
LSep42023 = separable_conv2D_layer(Res55255, 1, 1,[[[[[0.0524]]]],[[[[0.6671, 0.394]]]]],[0, 0], 1, 1, false, Sep42023), 
LRes45982 = reshape_layer(Sep42023, [1, 2], Res45982), 
LCon66394 = concatenate_layer([Res45982,[[[0.1024, 0.3626, 0.5303, 0.0164]]]], 2, Con66394), 
LMas32373 = masking_layer([[1.919, 1.6675, 1.4378, 1.8872]], 2, Mas32373), 
LRes9868 = reshape_layer(Mas32373, [4, 1], Res9868), 
LRes88709 = reshape_layer(Res9868, [4, 1, 1], Res88709), 
LRes64783 = reshape_layer(Res88709, [4, 1, 1, 1], Res64783), 
LZer71128 = zero_padding3D_layer(Res64783, 0, 0, 2, 0, 0, 0, Zer71128), 
LCon14243 = concatenate_layer([Zer71128,[[[[[0.5711]], [[0.654]], [[0.3745]]], [[[0.4362]], [[0.4704]], [[0.6765]]], [[[0.024]], [[0.8854]], [[0.5103]]], [[[0.4657]], [[0.866]], [[0.829]]]]]], 4, Con14243), 
LAdd12944 = add_layer([[[[[[0.7379, 0.0751]], [[0.2948, 0.8076]]]]], [[[[[0.9896, 0.6464]], [[0.7474, 0.6232]]]]]], Add12944), 
LZer46378 = zero_padding3D_layer(Add12944, 3, 0, 1, 0, 0, 0, Zer46378), 
LMul45887 = multiply_layer([Con14243,Zer46378], Mul45887), 
LRes14939 = reshape_layer(Mul45887, [4, 3, 2], Res14939), 
LRes11129 = reshape_layer(Res14939, [4, 6], Res11129), 
LDot34284 = dot_layer(Con66394,Res11129, 2, 2, Dot34284), 
LGlo79534 = global_max_pool1D_layer(Dot34284, Glo79534), 
exec_layers([LMin48030,LRes55255,LSep42023,LRes45982,LCon66394,LMas32373,LRes9868,LRes88709,LRes64783,LZer71128,LCon14243,LAdd12944,LZer46378,LMul45887,LRes14939,LRes11129,LDot34284,LGlo79534],["Min48030","Res55255","Sep42023","Res45982","Con66394","Mas32373","Res9868","Res88709","Res64783","Zer71128","Con14243","Add12944","Zer46378","Mul45887","Res14939","Res11129","Dot34284","Glo79534"],Glo79534,"Glo79534")

Actual (Unparsed): [[0.0000000, 0.0000000, 0.0000000, 1.2890272]]

Expected (Unparsed): [[0.0,0.0,0.0,1.2890271210320001]]

Actual:   [[0, 0, 0, 1.2891]]

Expected: [[0, 0, 0, 1.2891]]