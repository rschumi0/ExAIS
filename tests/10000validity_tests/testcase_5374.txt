import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Bat97356 = tf.keras.layers.Input(shape=([1, 3, 3]))
in0Con66001 = tf.keras.layers.Input(shape=([5, 15]))
in0Zer24894 = tf.keras.layers.Input(shape=([3, 2, 3]))
in0Lea14745 = tf.keras.layers.Input(shape=([2, 2, 1]))
in0Con26645 = tf.keras.layers.Input(shape=([5, 4, 3]))

Bat97356 = keras.layers.BatchNormalization(axis=1, epsilon=0.6080241839055445,  name = 'Bat97356', )(in0Bat97356)
Res96357 = keras.layers.Reshape((1, 3, 3, 1), name = 'Res96357', )(Bat97356)
Glo61645 = keras.layers.GlobalMaxPool3D(name = 'Glo61645', )(Res96357)
Res19258 = keras.layers.Reshape((1, 1), name = 'Res19258', )(Glo61645)
Zer91759 = keras.layers.ZeroPadding1D(padding=((4, 0)), name = 'Zer91759', )(Res19258)
Con66001 = keras.layers.Concatenate(axis=2, name = 'Con66001', )([Zer91759,in0Con66001])
Zer24894 = keras.layers.ZeroPadding2D(padding=((1, 1), (1, 1)), name = 'Zer24894', )(in0Zer24894)
Loc27193 = keras.layers.LocallyConnected2D(4, (1, 3),strides=(1, 1), name = 'Loc27193', )(Zer24894)
Up_49975 = keras.layers.UpSampling2D(size=(1, 2), name = 'Up_49975', )(Loc27193)
Lea14745 = keras.layers.LeakyReLU(alpha=9.426436266602229, name = 'Lea14745', input_shape=(2, 2, 1))(in0Lea14745)
Zer63420 = keras.layers.ZeroPadding2D(padding=((3, 0), (2, 0)), name = 'Zer63420', )(Lea14745)
Con26645 = keras.layers.Concatenate(axis=3, name = 'Con26645', )([Zer63420,in0Con26645])
Sub33764 = keras.layers.Subtract(name = 'Sub33764', )([Up_49975,Con26645])
Res17940 = keras.layers.Reshape((5, 16), name = 'Res17940', )(Sub33764)
Up_68486 = keras.layers.UpSampling1D(size=(1), name = 'Up_68486', )(Res17940)
Sub54430 = keras.layers.Subtract(name = 'Sub54430', )([Con66001,Up_68486])
model = tf.keras.models.Model(inputs=[in0Bat97356,in0Con66001,in0Zer24894,in0Lea14745,in0Con26645], outputs=Sub54430)
w = model.get_layer('Bat97356').get_weights() 
w[0] = np.array([0.3619])
w[1] = np.array([0.4543])
w[2] = np.array([0.2701])
w[3] = np.array([0.2347])
model.get_layer('Bat97356').set_weights(w) 
w = model.get_layer('Loc27193').get_weights() 
w[0] = np.array([[[0.9214, 0.2566, 0.1665, 0.3267], [0.6153, 0.9439, 0.9455, 0.0467], [0.2807, 0.331, 0.8629, 0.3167], [0.8073, 0.4656, 0.5445, 0.3504], [0.9007, 0.4257, 0.7898, 0.1789], [0.0728, 0.0439, 0.1385, 0.2395], [0.1995, 0.7479, 0.6862, 0.6888], [0.6615, 0.865, 0.0151, 0.8865], [0.6902, 0.9161, 0.1594, 0.2546]], [[0.3046, 0.0075, 0.2436, 0.3759], [0.1442, 0.4181, 0.8048, 0.765], [0.5761, 0.8749, 0.836, 0.2161], [0.6888, 0.8123, 0.2732, 0.0142], [0.1696, 0.1169, 0.9912, 0.5807], [0.6103, 0.4756, 0.3676, 0.3182], [0.4823, 0.4651, 0.1289, 0.5158], [0.8813, 0.9458, 0.5036, 0.1846], [0.1531, 0.1588, 0.6702, 0.6005]], [[0.682, 0.162, 0.1126, 0.1501], [0.4471, 0.887, 0.7722, 0.8017], [0.4349, 0.1519, 0.8215, 0.1481], [0.6327, 0.4211, 0.4737, 0.5089], [0.1226, 0.9677, 0.4912, 0.0205], [0.7451, 0.3668, 0.9588, 0.9883], [0.9083, 0.9211, 0.445, 0.0366], [0.381, 0.7075, 0.8955, 0.7447], [0.3281, 0.4181, 0.4687, 0.5327]], [[0.4188, 0.0683, 0.0564, 0.5292], [0.575, 0.9447, 0.4158, 0.0346], [0.8085, 0.8733, 0.6781, 0.9807], [0.6445, 0.0038, 0.499, 0.4777], [0.8272, 0.8251, 0.2675, 0.1402], [0.3597, 0.055, 0.5995, 0.3876], [0.4428, 0.3795, 0.8102, 0.3256], [0.548, 0.7563, 0.1772, 0.1335], [0.6823, 0.1429, 0.5903, 0.1049]], [[0.8869, 0.0608, 0.613, 0.6191], [0.1476, 0.3674, 0.076, 0.3577], [0.1888, 0.9672, 0.0661, 0.0229], [0.0745, 0.9701, 0.5809, 0.6612], [0.1448, 0.9761, 0.177, 0.4531], [0.5791, 0.7516, 0.6552, 0.4904], [0.7974, 0.5523, 0.1998, 0.6276], [0.9856, 0.7396, 0.416, 0.9707], [0.2603, 0.1442, 0.3944, 0.9451]], [[0.381, 0.834, 0.2729, 0.1699], [0.4557, 0.5607, 0.7621, 0.5592], [0.7905, 0.1787, 0.7557, 0.1699], [0.889, 0.7566, 0.4548, 0.3188], [0.6181, 0.9359, 0.4016, 0.4047], [0.7296, 0.3278, 0.4417, 0.6882], [0.2475, 0.3891, 0.9087, 0.0035], [0.7175, 0.2655, 0.2643, 0.0107], [0.9474, 0.5504, 0.013, 0.1278]], [[0.6661, 0.7728, 0.9621, 0.7285], [0.4758, 0.6969, 0.7963, 0.5394], [0.5793, 0.1915, 0.5014, 0.4217], [0.028, 0.5143, 0.3809, 0.8897], [0.6535, 0.3417, 0.2882, 0.7807], [0.4224, 0.771, 0.219, 0.466], [0.684, 0.8255, 0.5986, 0.8749], [0.6694, 0.6995, 0.4346, 0.3852], [0.6444, 0.0933, 0.0079, 0.3306]], [[0.3169, 0.512, 0.9225, 0.4718], [0.4598, 0.3258, 0.1499, 0.2817], [0.2179, 0.7235, 0.1641, 0.3101], [0.2423, 0.4311, 0.3903, 0.2065], [0.6143, 0.2106, 0.9653, 0.2064], [0.509, 0.7085, 0.2438, 0.0139], [0.681, 0.1801, 0.5745, 0.0521], [0.1515, 0.979, 0.619, 0.9921], [0.9261, 0.4745, 0.8868, 0.324]], [[0.1772, 0.2337, 0.2221, 0.4833], [0.0904, 0.889, 0.6925, 0.7118], [0.4906, 0.1016, 0.7015, 0.3972], [0.4407, 0.4264, 0.1761, 0.1089], [0.2356, 0.6856, 0.3651, 0.928], [0.6034, 0.6658, 0.1231, 0.9572], [0.4681, 0.5696, 0.554, 0.0854], [0.3302, 0.6702, 0.5417, 0.1826], [0.1765, 0.0467, 0.0016, 0.9064]], [[0.8425, 0.1101, 0.6569, 0.2095], [0.923, 0.8686, 0.7631, 0.4582], [0.6475, 0.5272, 0.4823, 0.7937], [0.6219, 0.0679, 0.5455, 0.9974], [0.9727, 0.915, 0.4291, 0.6608], [0.2272, 0.6537, 0.5214, 0.8974], [0.2101, 0.0422, 0.6574, 0.189], [0.3462, 0.2316, 0.9577, 0.2084], [0.0181, 0.1942, 0.1278, 0.6245]]])
w[1] = np.array([[[0, 0, 0, 0], [0, 0, 0, 0]], [[0, 0, 0, 0], [0, 0, 0, 0]], [[0, 0, 0, 0], [0, 0, 0, 0]], [[0, 0, 0, 0], [0, 0, 0, 0]], [[0, 0, 0, 0], [0, 0, 0, 0]]])
model.get_layer('Loc27193').set_weights(w) 
in0Bat97356 = tf.constant([[[[1.412, 1.4928, 1.4424], [1.0459, 1.382, 1.4408], [1.5004, 1.6758, 1.4066]]]])
in0Con66001 = tf.constant([[[0.4111, 0.4827, 0.6567, 0.7734, 0.1526, 0.6043, 0.8619, 0.7717, 0.057, 0.277, 0.9433, 0.7381, 0.7675, 0.1137, 0.2326], [0.5962, 0.0633, 0.611, 0.0782, 0.3935, 0.2536, 0.312, 0.91, 0.1034, 0.2103, 0.2273, 0.8109, 0.2853, 0.4373, 0.6839], [0.8204, 0.6183, 0.2964, 0.8423, 0.1794, 0.286, 0.0111, 0.2285, 0.9933, 0.6801, 0.3495, 0.7573, 0.3362, 0.919, 0.9529], [0.8898, 0.6508, 0.2296, 0.1217, 0.7665, 0.4074, 0.3307, 0.4941, 0.3798, 0.3769, 0.5713, 0.463, 0.1148, 0.5457, 0.7289], [0.3618, 0.2722, 0.6559, 0.0535, 0.4235, 0.5102, 0.5865, 0.3523, 0.2645, 0.4968, 0.312, 0.6573, 0.1796, 0.4438, 0.9679]]])
in0Zer24894 = tf.constant([[[[1.7974, 1.8897, 1.4463], [1.1935, 1.9813, 1.9192]], [[1.4395, 1.8611, 1.2205], [1.7534, 1.7001, 1.868]], [[1.4558, 1.709, 1.3677], [1.3235, 1.1729, 1.4533]]]])
in0Lea14745 = tf.constant([[[[0.6974], [0.4212]], [[0.7535], [0.1434]]]])
in0Con26645 = tf.constant([[[[0.0313, 0.1466, 0.4213], [0.0399, 0.7201, 0.5941], [0.9456, 0.0692, 0.374], [0.5319, 0.4553, 0.3927]], [[0.1515, 0.7225, 0.8401], [0.12, 0.574, 0.6483], [0.9001, 0.1494, 0.1029], [0.3391, 0.7856, 0.0562]], [[0.1584, 0.9298, 0.4376], [0.3784, 0.9193, 0.1085], [0.7828, 0.2408, 0.5803], [0.4955, 0.9149, 0.8998]], [[0.6104, 0.6464, 0.0011], [0.7118, 0.9548, 0.8161], [0.1935, 0.2366, 0.0561], [0.835, 0.3977, 0.6667]], [[0.0297, 0.4537, 0.351], [0.5464, 0.3224, 0.2926], [0.0979, 0.7873, 0.7083], [0.097, 0.6159, 0.3182]]]])
print (np.array2string(model.predict([in0Bat97356,in0Con66001,in0Zer24894,in0Lea14745,in0Con26645],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Sub54430.png')

LBat97356 = batch_normalization_layer([[[[1.412, 1.4928, 1.4424], [1.0459, 1.382, 1.4408], [1.5004, 1.6758, 1.4066]]]], 1, 0.6080241839055445, [0.3619], [0.4543], [0.2701], [0.2347], Bat97356), 
LRes96357 = reshape_layer(Bat97356, [1, 3, 3, 1], Res96357), 
LGlo61645 = global_max_pool3D_layer(Res96357, Glo61645), 
LRes19258 = reshape_layer(Glo61645, [1, 1], Res19258), 
LZer91759 = zero_padding1D_layer(Res19258, 4, 0, Zer91759), 
LCon66001 = concatenate_layer([Zer91759,[[[0.4111, 0.4827, 0.6567, 0.7734, 0.1526, 0.6043, 0.8619, 0.7717, 0.057, 0.277, 0.9433, 0.7381, 0.7675, 0.1137, 0.2326], [0.5962, 0.0633, 0.611, 0.0782, 0.3935, 0.2536, 0.312, 0.91, 0.1034, 0.2103, 0.2273, 0.8109, 0.2853, 0.4373, 0.6839], [0.8204, 0.6183, 0.2964, 0.8423, 0.1794, 0.286, 0.0111, 0.2285, 0.9933, 0.6801, 0.3495, 0.7573, 0.3362, 0.919, 0.9529], [0.8898, 0.6508, 0.2296, 0.1217, 0.7665, 0.4074, 0.3307, 0.4941, 0.3798, 0.3769, 0.5713, 0.463, 0.1148, 0.5457, 0.7289], [0.3618, 0.2722, 0.6559, 0.0535, 0.4235, 0.5102, 0.5865, 0.3523, 0.2645, 0.4968, 0.312, 0.6573, 0.1796, 0.4438, 0.9679]]]], 2, Con66001), 
LZer24894 = zero_padding2D_layer([[[[1.7974, 1.8897, 1.4463], [1.1935, 1.9813, 1.9192]], [[1.4395, 1.8611, 1.2205], [1.7534, 1.7001, 1.868]], [[1.4558, 1.709, 1.3677], [1.3235, 1.1729, 1.4533]]]], 1, 1, 1, 1, Zer24894), 
LLoc27193 = locally_connected2D_layer(Zer24894, 1, 3,[[[0.9214, 0.2566, 0.1665, 0.3267], [0.6153, 0.9439, 0.9455, 0.0467], [0.2807, 0.331, 0.8629, 0.3167], [0.8073, 0.4656, 0.5445, 0.3504], [0.9007, 0.4257, 0.7898, 0.1789], [0.0728, 0.0439, 0.1385, 0.2395], [0.1995, 0.7479, 0.6862, 0.6888], [0.6615, 0.865, 0.0151, 0.8865], [0.6902, 0.9161, 0.1594, 0.2546]], [[0.3046, 0.0075, 0.2436, 0.3759], [0.1442, 0.4181, 0.8048, 0.765], [0.5761, 0.8749, 0.836, 0.2161], [0.6888, 0.8123, 0.2732, 0.0142], [0.1696, 0.1169, 0.9912, 0.5807], [0.6103, 0.4756, 0.3676, 0.3182], [0.4823, 0.4651, 0.1289, 0.5158], [0.8813, 0.9458, 0.5036, 0.1846], [0.1531, 0.1588, 0.6702, 0.6005]], [[0.682, 0.162, 0.1126, 0.1501], [0.4471, 0.887, 0.7722, 0.8017], [0.4349, 0.1519, 0.8215, 0.1481], [0.6327, 0.4211, 0.4737, 0.5089], [0.1226, 0.9677, 0.4912, 0.0205], [0.7451, 0.3668, 0.9588, 0.9883], [0.9083, 0.9211, 0.445, 0.0366], [0.381, 0.7075, 0.8955, 0.7447], [0.3281, 0.4181, 0.4687, 0.5327]], [[0.4188, 0.0683, 0.0564, 0.5292], [0.575, 0.9447, 0.4158, 0.0346], [0.8085, 0.8733, 0.6781, 0.9807], [0.6445, 0.0038, 0.499, 0.4777], [0.8272, 0.8251, 0.2675, 0.1402], [0.3597, 0.055, 0.5995, 0.3876], [0.4428, 0.3795, 0.8102, 0.3256], [0.548, 0.7563, 0.1772, 0.1335], [0.6823, 0.1429, 0.5903, 0.1049]], [[0.8869, 0.0608, 0.613, 0.6191], [0.1476, 0.3674, 0.076, 0.3577], [0.1888, 0.9672, 0.0661, 0.0229], [0.0745, 0.9701, 0.5809, 0.6612], [0.1448, 0.9761, 0.177, 0.4531], [0.5791, 0.7516, 0.6552, 0.4904], [0.7974, 0.5523, 0.1998, 0.6276], [0.9856, 0.7396, 0.416, 0.9707], [0.2603, 0.1442, 0.3944, 0.9451]], [[0.381, 0.834, 0.2729, 0.1699], [0.4557, 0.5607, 0.7621, 0.5592], [0.7905, 0.1787, 0.7557, 0.1699], [0.889, 0.7566, 0.4548, 0.3188], [0.6181, 0.9359, 0.4016, 0.4047], [0.7296, 0.3278, 0.4417, 0.6882], [0.2475, 0.3891, 0.9087, 0.0035], [0.7175, 0.2655, 0.2643, 0.0107], [0.9474, 0.5504, 0.013, 0.1278]], [[0.6661, 0.7728, 0.9621, 0.7285], [0.4758, 0.6969, 0.7963, 0.5394], [0.5793, 0.1915, 0.5014, 0.4217], [0.028, 0.5143, 0.3809, 0.8897], [0.6535, 0.3417, 0.2882, 0.7807], [0.4224, 0.771, 0.219, 0.466], [0.684, 0.8255, 0.5986, 0.8749], [0.6694, 0.6995, 0.4346, 0.3852], [0.6444, 0.0933, 0.0079, 0.3306]], [[0.3169, 0.512, 0.9225, 0.4718], [0.4598, 0.3258, 0.1499, 0.2817], [0.2179, 0.7235, 0.1641, 0.3101], [0.2423, 0.4311, 0.3903, 0.2065], [0.6143, 0.2106, 0.9653, 0.2064], [0.509, 0.7085, 0.2438, 0.0139], [0.681, 0.1801, 0.5745, 0.0521], [0.1515, 0.979, 0.619, 0.9921], [0.9261, 0.4745, 0.8868, 0.324]], [[0.1772, 0.2337, 0.2221, 0.4833], [0.0904, 0.889, 0.6925, 0.7118], [0.4906, 0.1016, 0.7015, 0.3972], [0.4407, 0.4264, 0.1761, 0.1089], [0.2356, 0.6856, 0.3651, 0.928], [0.6034, 0.6658, 0.1231, 0.9572], [0.4681, 0.5696, 0.554, 0.0854], [0.3302, 0.6702, 0.5417, 0.1826], [0.1765, 0.0467, 0.0016, 0.9064]], [[0.8425, 0.1101, 0.6569, 0.2095], [0.923, 0.8686, 0.7631, 0.4582], [0.6475, 0.5272, 0.4823, 0.7937], [0.6219, 0.0679, 0.5455, 0.9974], [0.9727, 0.915, 0.4291, 0.6608], [0.2272, 0.6537, 0.5214, 0.8974], [0.2101, 0.0422, 0.6574, 0.189], [0.3462, 0.2316, 0.9577, 0.2084], [0.0181, 0.1942, 0.1278, 0.6245]]],[[[0, 0, 0, 0], [0, 0, 0, 0]], [[0, 0, 0, 0], [0, 0, 0, 0]], [[0, 0, 0, 0], [0, 0, 0, 0]], [[0, 0, 0, 0], [0, 0, 0, 0]], [[0, 0, 0, 0], [0, 0, 0, 0]]], 1, 1, Loc27193), 
LUp_49975 = up_sampling2D_layer(Loc27193, 1, 2, Up_49975), 
LLea14745 = leaky_relu_layer([[[[0.6974], [0.4212]], [[0.7535], [0.1434]]]], 9.426436266602229, Lea14745), 
LZer63420 = zero_padding2D_layer(Lea14745, 3, 0, 2, 0, Zer63420), 
LCon26645 = concatenate_layer([Zer63420,[[[[0.0313, 0.1466, 0.4213], [0.0399, 0.7201, 0.5941], [0.9456, 0.0692, 0.374], [0.5319, 0.4553, 0.3927]], [[0.1515, 0.7225, 0.8401], [0.12, 0.574, 0.6483], [0.9001, 0.1494, 0.1029], [0.3391, 0.7856, 0.0562]], [[0.1584, 0.9298, 0.4376], [0.3784, 0.9193, 0.1085], [0.7828, 0.2408, 0.5803], [0.4955, 0.9149, 0.8998]], [[0.6104, 0.6464, 0.0011], [0.7118, 0.9548, 0.8161], [0.1935, 0.2366, 0.0561], [0.835, 0.3977, 0.6667]], [[0.0297, 0.4537, 0.351], [0.5464, 0.3224, 0.2926], [0.0979, 0.7873, 0.7083], [0.097, 0.6159, 0.3182]]]]], 3, Con26645), 
LSub33764 = subtract_layer(Up_49975,Con26645, Sub33764), 
LRes17940 = reshape_layer(Sub33764, [5, 16], Res17940), 
LUp_68486 = up_sampling1D_layer(Res17940, 1, Up_68486), 
LSub54430 = subtract_layer(Con66001,Up_68486, Sub54430), 
exec_layers([LBat97356,LRes96357,LGlo61645,LRes19258,LZer91759,LCon66001,LZer24894,LLoc27193,LUp_49975,LLea14745,LZer63420,LCon26645,LSub33764,LRes17940,LUp_68486,LSub54430],["Bat97356","Res96357","Glo61645","Res19258","Zer91759","Con66001","Zer24894","Loc27193","Up_49975","Lea14745","Zer63420","Con26645","Sub33764","Res17940","Up_68486","Sub54430"],Sub54430,"Sub54430")

Actual (Unparsed): [[[0.0000000, 0.4424000, 0.6293000, 1.0780000, 0.7734000, 0.1925000, 1.3244000, 1.4560000, 0.7717000, 1.0026000, 0.3462000, 1.3173000, 0.7381000, 1.2994000, 0.5690000, 0.6253000], [-4.9151512, -5.6718709, -5.5854522, -3.4732281, -4.8369512, -5.9060709, -5.5436522, -3.9640280, -5.1971406, -3.9123778, -3.7842613, -3.6965493, -5.2962406, -4.2914778, -2.9210613, -3.2866493], [-4.6435416, -5.6467687, -2.2115019, -6.1757626, -3.8012416, -6.0677687, -2.5543019, -6.7901626, -6.1053552, -4.2161414, -4.1179177, -3.0954331, -5.5765551, -5.1605414, -3.2049177, -2.1725331], [-4.3622301, -2.9355656, -1.3628449, -5.1262820, -4.2405302, -2.9574657, -1.2978448, -4.2101820, -2.1345893, -3.5656294, -3.2131712, -1.5005857, -2.4418893, -3.1891294, -2.8832711, -0.7323857], [1.0084642, 0.3915000, 0.7259000, 1.0069000, 0.0535000, 0.9699000, 0.8326000, 0.8791000, 1.1058000, 0.3624000, 1.2841000, 1.0203000, 0.8007000, 0.2766000, 1.0597000, 1.2861000]]]

Expected (Unparsed): [[[0.0,0.4424,0.6293,1.0779999999999998,0.7734,0.1925,1.3243999999999998,1.456,0.7717,1.0026,0.3462,1.3173,0.7381,1.2993999999999999,0.569,0.6253],[-4.915151200000001,-5.671870790000002,-5.585452150000001,-3.4732280500000003,-4.8369512000000014,-5.906070790000001,-5.5436521500000016,-3.96402805,-5.19714052,-3.9123777299999998,-3.7842613,-3.69654924,-5.29624052,-4.2914777299999995,-2.9210613,-3.28664924],[-4.6435417,-5.646768839999999,-2.21150197,-6.175762720000001,-3.8012417000000003,-6.067768839999999,-2.5543019699999996,-6.7901627200000005,-6.10535523,-4.216141550000001,-4.11791779,-3.09543311,-5.57655523,-5.1605415500000005,-3.20491779,-2.1725331100000003],[-4.362230159999999,-2.93556563,-1.36284483,-5.12628197,-4.24053016,-2.9574656300000006,-1.2978448299999998,-4.210181969999999,-2.1345892699999998,-3.5656293899999993,-3.213171129999999,-1.5005856899999999,-2.44188927,-3.1891293899999997,-2.8832711299999993,-0.7323856899999995],[1.008464242365311,0.3915,0.7259,1.0069,0.0535,0.9699,0.8326,0.8791,1.1058,0.3624,1.2841,1.0203,0.8007,0.2766,1.0596999999999999,1.2861]]]

Actual:   [[[0, 0.4424, 0.6293, 1.078, 0.7734, 0.1925, 1.3244, 1.456, 0.7717, 1.0026, 0.3462, 1.3173, 0.7381, 1.2994, 0.569, 0.6253], [-4.9151, -5.6718, -5.5854, -3.4732, -4.8369, -5.906, -5.5436, -3.964, -5.1971, -3.9123, -3.7842, -3.6965, -5.2962, -4.2914, -2.921, -3.2866], [-4.6435, -5.6467, -2.2115, -6.1757, -3.8012, -6.0677, -2.5543, -6.7901, -6.1053, -4.2161, -4.1179, -3.0954, -5.5765, -5.1605, -3.2049, -2.1725], [-4.3622, -2.9355, -1.3628, -5.1262, -4.2405, -2.9574, -1.2978, -4.2101, -2.1345, -3.5656, -3.2131, -1.5005, -2.4418, -3.1891, -2.8832, -0.7323], [1.0085, 0.3915, 0.7259, 1.0069, 0.0535, 0.9699, 0.8326, 0.8791, 1.1058, 0.3624, 1.2841, 1.0203, 0.8007, 0.2766, 1.0597, 1.2861]]]

Expected: [[[0, 0.4424, 0.6293, 1.078, 0.7734, 0.1925, 1.3244, 1.456, 0.7717, 1.0026, 0.3462, 1.3173, 0.7381, 1.2994, 0.569, 0.6253], [-4.9151, -5.6718, -5.5854, -3.4732, -4.8369, -5.906, -5.5436, -3.964, -5.1971, -3.9123, -3.7842, -3.6965, -5.2962, -4.2914, -2.921, -3.2866], [-4.6435, -5.6467, -2.2115, -6.1757, -3.8012, -6.0677, -2.5543, -6.7901, -6.1053, -4.2161, -4.1179, -3.0954, -5.5765, -5.1605, -3.2049, -2.1725], [-4.3622, -2.9355, -1.3628, -5.1262, -4.2405, -2.9574, -1.2978, -4.2101, -2.1345, -3.5656, -3.2131, -1.5005, -2.4418, -3.1891, -2.8832, -0.7323], [1.0085, 0.3915, 0.7259, 1.0069, 0.0535, 0.9699, 0.8326, 0.8791, 1.1058, 0.3624, 1.2841, 1.0203, 0.8007, 0.2766, 1.0597, 1.2861]]]