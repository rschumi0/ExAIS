import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Cro70697 = tf.keras.layers.Input(shape=([3, 3, 1, 2]))
in0Con92639 = tf.keras.layers.Input(shape=([2, 1]))
in0Min31652 = tf.keras.layers.Input(shape=([1, 2]))
in1Min31652 = tf.keras.layers.Input(shape=([1, 2]))
in0Thr97985 = tf.keras.layers.Input(shape=([1, 1, 2, 1]))
in0Con17078 = tf.keras.layers.Input(shape=([3, 6, 3, 2]))
in0Mul63606 = tf.keras.layers.Input(shape=([1, 1, 2, 2]))
in1Mul63606 = tf.keras.layers.Input(shape=([1, 1, 2, 2]))
in0Con70513 = tf.keras.layers.Input(shape=([3, 6, 3, 1]))
in0Zer10549 = tf.keras.layers.Input(shape=([1, 4, 1, 3]))

Cro70697 = keras.layers.Cropping3D(cropping=((1, 1), (1, 1), (0, 0)), name = 'Cro70697', )(in0Cro70697)
Fla66324 = keras.layers.Flatten(name = 'Fla66324', )(Cro70697)
Res65686 = keras.layers.Reshape((2, 1), name = 'Res65686', )(Fla66324)
Con92639 = keras.layers.Concatenate(axis=2, name = 'Con92639', )([Res65686,in0Con92639])
Min31652 = keras.layers.Minimum(name = 'Min31652', )([in0Min31652,in1Min31652])
Dot58190 = keras.layers.Dot(axes=(2, 2), name = 'Dot58190', )([Con92639,Min31652])
Res10267 = keras.layers.Reshape((2, 1, 1), name = 'Res10267', )(Dot58190)
Res67369 = keras.layers.Reshape((2, 1, 1, 1), name = 'Res67369', )(Res10267)
Zer74686 = keras.layers.ZeroPadding3D(padding=((0, 0), (0, 0), (2, 0)), name = 'Zer74686', )(Res67369)
Thr97985 = keras.layers.ThresholdedReLU(theta=7.187853062209817, name = 'Thr97985', input_shape=(1, 1, 2, 1))(in0Thr97985)
Zer46377 = keras.layers.ZeroPadding3D(padding=((1, 0), (0, 0), (1, 0)), name = 'Zer46377', )(Thr97985)
Sub53017 = keras.layers.Subtract(name = 'Sub53017', )([Zer74686,Zer46377])
Zer83287 = keras.layers.ZeroPadding3D(padding=((1, 0), (5, 0), (0, 0)), name = 'Zer83287', )(Sub53017)
Con17078 = keras.layers.Concatenate(axis=4, name = 'Con17078', )([Zer83287,in0Con17078])
Mul63606 = keras.layers.Multiply(name = 'Mul63606', )([in0Mul63606,in1Mul63606])
ELU67264 = keras.layers.ELU(alpha=-9.124098767512127, name = 'ELU67264', )(Mul63606)
Zer3570 = keras.layers.ZeroPadding3D(padding=((2, 0), (5, 0), (1, 0)), name = 'Zer3570', )(ELU67264)
Con70513 = keras.layers.Concatenate(axis=4, name = 'Con70513', )([Zer3570,in0Con70513])
Zer10549 = keras.layers.ZeroPadding3D(padding=((1, 1), (1, 1), (1, 1)), name = 'Zer10549', )(in0Zer10549)
Mul12796 = keras.layers.Multiply(name = 'Mul12796', )([Con70513,Zer10549])
Max3836 = keras.layers.Maximum(name = 'Max3836', )([Con17078,Mul12796])
model = tf.keras.models.Model(inputs=[in0Cro70697,in0Con92639,in0Min31652,in1Min31652,in0Thr97985,in0Con17078,in0Mul63606,in1Mul63606,in0Con70513,in0Zer10549], outputs=Max3836)
in0Cro70697 = tf.constant([[[[[1.1208, 1.5987]], [[1.8004, 1.7809]], [[1.9945, 1.1023]]], [[[1.603, 1.0199]], [[1.9364, 1.9331]], [[1.5271, 1.0739]]], [[[1.6353, 1.9065]], [[1.1988, 1.3733]], [[1.4435, 1.444]]]]])
in0Con92639 = tf.constant([[[0.5581], [0.0824]]])
in0Min31652 = tf.constant([[[0.9253, 0.2918]]])
in1Min31652 = tf.constant([[[0.8688, 0.788]]])
in0Thr97985 = tf.constant([[[[[0.6997], [0.7447]]]]])
in0Con17078 = tf.constant([[[[[0.4672, 0.2848], [0.7339, 0.1875], [0.7864, 0.3824]], [[0.374, 0.6275], [0.8534, 0.5929], [0.7656, 0.2874]], [[0.0318, 0.4831], [0.1473, 0.0024], [0.378, 0.9045]], [[0.5439, 0.291], [0.4509, 0.1539], [0.5229, 0.6796]], [[0.1759, 0.9724], [0.1025, 0.8333], [0.9193, 0.0737]], [[0.7418, 0.6974], [0.7395, 0.9897], [0.7944, 0.2168]]], [[[0.1145, 0.8972], [0.2783, 0.8371], [0.315, 0.7449]], [[0.3292, 0.9202], [0.9908, 0.4413], [0.2406, 0.4058]], [[0.4711, 0.0818], [0.5679, 0.5391], [0.7381, 0.1939]], [[0.3736, 0.2502], [0.0285, 0.7638], [0.3286, 0.8185]], [[0.5426, 0.3692], [0.0438, 0.7856], [0.7928, 0.0882]], [[0.7084, 0.6878], [0.7154, 0.9814], [0.8351, 0.076]]], [[[0.7826, 0.8497], [0.6727, 0.4568], [0.0049, 0.6599]], [[0.635, 0.2499], [0.8929, 0.5003], [0.9196, 0.5855]], [[0.1595, 0.178], [0.3384, 0.7878], [0.187, 0.6032]], [[0.2693, 0.685], [0.0583, 0.9187], [0.5501, 0.4654]], [[0.2564, 0.9279], [0.0856, 0.6623], [0.9739, 0.7494]], [[0.9131, 0.9885], [0.3414, 0.7856], [0.4818, 0.1668]]]]])
in0Mul63606 = tf.constant([[[[[0.2519, 0.6011], [0.3178, 0.8116]]]]])
in1Mul63606 = tf.constant([[[[[0.7702, 0.6283], [0.127, 0.9421]]]]])
in0Con70513 = tf.constant([[[[[0.6938], [0.9123], [0.6673]], [[0.9382], [0.9347], [0.1814]], [[0.672], [0.8434], [0.7659]], [[0.0534], [0.6124], [0.2977]], [[0.7577], [0.9283], [0.488]], [[0.6574], [0.8875], [0.8688]]], [[[0.6221], [0.7524], [0.6107]], [[0.313], [0.0103], [0.256]], [[0.2968], [0.4002], [0.2747]], [[0.3012], [0.2462], [0.1295]], [[0.2997], [0.8921], [0.3215]], [[0.8934], [0.268], [0.9395]]], [[[0.9502], [0.4127], [0.8694]], [[0.6802], [0.8862], [0.7351]], [[0.9099], [0.8345], [0.6534]], [[0.7536], [0.4166], [0.1012]], [[0.0372], [0.6525], [0.6018]], [[0.4925], [0.3368], [0.7933]]]]])
in0Zer10549 = tf.constant([[[[[1.0823, 1.3394, 1.5505]], [[1.1231, 1.2494, 1.1163]], [[1.808, 1.1083, 1.052]], [[1.599, 1.1883, 1.4399]]]]])
print (np.array2string(model.predict([in0Cro70697,in0Con92639,in0Min31652,in1Min31652,in0Thr97985,in0Con17078,in0Mul63606,in1Mul63606,in0Con70513,in0Zer10549],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Max3836.png')

LCro70697 = cropping3D_layer([[[[[1.1208, 1.5987]], [[1.8004, 1.7809]], [[1.9945, 1.1023]]], [[[1.603, 1.0199]], [[1.9364, 1.9331]], [[1.5271, 1.0739]]], [[[1.6353, 1.9065]], [[1.1988, 1.3733]], [[1.4435, 1.444]]]]], 1, 1, 1, 1, 0, 0, Cro70697), 
LFla66324 = flatten_layer(Cro70697, Fla66324), 
LRes65686 = reshape_layer(Fla66324, [2, 1], Res65686), 
LCon92639 = concatenate_layer([Res65686,[[[0.5581], [0.0824]]]], 2, Con92639), 
LMin31652 = minimum_layer([[[[0.9253, 0.2918]]], [[[0.8688, 0.788]]]], Min31652), 
LDot58190 = dot_layer(Con92639,Min31652, 2, 2, Dot58190), 
LRes10267 = reshape_layer(Dot58190, [2, 1, 1], Res10267), 
LRes67369 = reshape_layer(Res10267, [2, 1, 1, 1], Res67369), 
LZer74686 = zero_padding3D_layer(Res67369, 0, 0, 0, 0, 2, 0, Zer74686), 
LThr97985 = thresholded_relu_layer([[[[[0.6997], [0.7447]]]]], 7.187853062209817, Thr97985), 
LZer46377 = zero_padding3D_layer(Thr97985, 1, 0, 0, 0, 1, 0, Zer46377), 
LSub53017 = subtract_layer(Zer74686,Zer46377, Sub53017), 
LZer83287 = zero_padding3D_layer(Sub53017, 1, 0, 5, 0, 0, 0, Zer83287), 
LCon17078 = concatenate_layer([Zer83287,[[[[[0.4672, 0.2848], [0.7339, 0.1875], [0.7864, 0.3824]], [[0.374, 0.6275], [0.8534, 0.5929], [0.7656, 0.2874]], [[0.0318, 0.4831], [0.1473, 0.0024], [0.378, 0.9045]], [[0.5439, 0.291], [0.4509, 0.1539], [0.5229, 0.6796]], [[0.1759, 0.9724], [0.1025, 0.8333], [0.9193, 0.0737]], [[0.7418, 0.6974], [0.7395, 0.9897], [0.7944, 0.2168]]], [[[0.1145, 0.8972], [0.2783, 0.8371], [0.315, 0.7449]], [[0.3292, 0.9202], [0.9908, 0.4413], [0.2406, 0.4058]], [[0.4711, 0.0818], [0.5679, 0.5391], [0.7381, 0.1939]], [[0.3736, 0.2502], [0.0285, 0.7638], [0.3286, 0.8185]], [[0.5426, 0.3692], [0.0438, 0.7856], [0.7928, 0.0882]], [[0.7084, 0.6878], [0.7154, 0.9814], [0.8351, 0.076]]], [[[0.7826, 0.8497], [0.6727, 0.4568], [0.0049, 0.6599]], [[0.635, 0.2499], [0.8929, 0.5003], [0.9196, 0.5855]], [[0.1595, 0.178], [0.3384, 0.7878], [0.187, 0.6032]], [[0.2693, 0.685], [0.0583, 0.9187], [0.5501, 0.4654]], [[0.2564, 0.9279], [0.0856, 0.6623], [0.9739, 0.7494]], [[0.9131, 0.9885], [0.3414, 0.7856], [0.4818, 0.1668]]]]]], 4, Con17078), 
LMul63606 = multiply_layer([[[[[[0.2519, 0.6011], [0.3178, 0.8116]]]]], [[[[[0.7702, 0.6283], [0.127, 0.9421]]]]]], Mul63606), 
LELU67264 = elu_layer(Mul63606, -9.124098767512127, ELU67264), 
LZer3570 = zero_padding3D_layer(ELU67264, 2, 0, 5, 0, 1, 0, Zer3570), 
LCon70513 = concatenate_layer([Zer3570,[[[[[0.6938], [0.9123], [0.6673]], [[0.9382], [0.9347], [0.1814]], [[0.672], [0.8434], [0.7659]], [[0.0534], [0.6124], [0.2977]], [[0.7577], [0.9283], [0.488]], [[0.6574], [0.8875], [0.8688]]], [[[0.6221], [0.7524], [0.6107]], [[0.313], [0.0103], [0.256]], [[0.2968], [0.4002], [0.2747]], [[0.3012], [0.2462], [0.1295]], [[0.2997], [0.8921], [0.3215]], [[0.8934], [0.268], [0.9395]]], [[[0.9502], [0.4127], [0.8694]], [[0.6802], [0.8862], [0.7351]], [[0.9099], [0.8345], [0.6534]], [[0.7536], [0.4166], [0.1012]], [[0.0372], [0.6525], [0.6018]], [[0.4925], [0.3368], [0.7933]]]]]], 4, Con70513), 
LZer10549 = zero_padding3D_layer([[[[[1.0823, 1.3394, 1.5505]], [[1.1231, 1.2494, 1.1163]], [[1.808, 1.1083, 1.052]], [[1.599, 1.1883, 1.4399]]]]], 1, 1, 1, 1, 1, 1, Zer10549), 
LMul12796 = multiply_layer([Con70513,Zer10549], Mul12796), 
LMax3836 = maximum_layer([Con17078,Mul12796], Max3836), 
exec_layers([LCro70697,LFla66324,LRes65686,LCon92639,LMin31652,LDot58190,LRes10267,LRes67369,LZer74686,LThr97985,LZer46377,LSub53017,LZer83287,LCon17078,LMul63606,LELU67264,LZer3570,LCon70513,LZer10549,LMul12796,LMax3836],["Cro70697","Fla66324","Res65686","Con92639","Min31652","Dot58190","Res10267","Res67369","Zer74686","Thr97985","Zer46377","Sub53017","Zer83287","Con17078","Mul63606","ELU67264","Zer3570","Con70513","Zer10549","Mul12796","Max3836"],Max3836,"Max3836")

Actual (Unparsed): [[[[[0.0000000, 0.4672000, 0.2848000], [0.0000000, 0.7339000, 0.1875000], [0.0000000, 0.7864000, 0.3824000]], [[0.0000000, 0.3740000, 0.6275000], [0.0000000, 0.8534000, 0.5929000], [0.0000000, 0.7656000, 0.2874000]], [[0.0000000, 0.0318000, 0.4831000], [0.0000000, 0.1473000, 0.0024000], [0.0000000, 0.3780000, 0.9045000]], [[0.0000000, 0.5439000, 0.2910000], [0.0000000, 0.4509000, 0.1539000], [0.0000000, 0.5229000, 0.6796000]], [[0.0000000, 0.1759000, 0.9724000], [0.0000000, 0.1025000, 0.8333000], [0.0000000, 0.9193000, 0.0737000]], [[0.0000000, 0.7418000, 0.6974000], [0.0000000, 0.7395000, 0.9897000], [0.0000000, 0.7944000, 0.2168000]]], [[[0.0000000, 0.1145000, 0.8972000], [0.0000000, 0.2783000, 0.8371000], [0.0000000, 0.3150000, 0.7449000]], [[0.0000000, 0.3292000, 0.9202000], [0.0000000, 0.9908000, 0.4413000], [0.0000000, 0.2406000, 0.4058000]], [[0.0000000, 0.4711000, 0.0818000], [0.0000000, 0.5679000, 0.5391000], [0.0000000, 0.7381000, 0.1939000]], [[0.0000000, 0.3736000, 0.2502000], [0.0000000, 0.0285000, 0.7638000], [0.0000000, 0.3286000, 0.8185000]], [[0.0000000, 0.5426000, 0.3692000], [0.0000000, 0.0438000, 1.2845348], [0.0000000, 0.7928000, 0.0882000]], [[0.0000000, 0.7084000, 0.6878000], [0.0000000, 0.7154000, 0.9814000], [1.8451979, 0.8351000, 0.0760000]]], [[[0.0000000, 0.7826000, 0.8497000], [0.0000000, 0.6727000, 0.4568000], [0.0000000, 0.0049000, 0.6599000]], [[0.0000000, 0.6350000, 0.2499000], [0.0000000, 0.8929000, 0.5003000], [0.0000000, 0.9196000, 0.5855000]], [[0.0000000, 0.1595000, 0.1780000], [0.0000000, 0.3384000, 0.7878000], [0.0000000, 0.1870000, 0.6032000]], [[0.0000000, 0.2693000, 0.6850000], [0.0000000, 0.0583000, 0.9187000], [0.0000000, 0.5501000, 0.4654000]], [[0.0000000, 0.2564000, 0.9279000], [0.0000000, 0.0856000, 0.6623000], [0.0000000, 0.9739000, 0.7494000]], [[0.0000000, 0.9131000, 0.9885000], [0.0000000, 0.3414000, 0.7856000], [1.7035216, 0.4818000, 0.1668000]]]]]

Expected (Unparsed): [[[[[0,0.4672,0.2848],[0,0.7339,0.1875],[0,0.7864,0.3824]],[[0,0.374,0.6275],[0,0.8534,0.5929],[0,0.7656,0.2874]],[[0,0.0318,0.4831],[0,0.1473,0.0024],[0,0.378,0.9045]],[[0,0.5439,0.291],[0,0.4509,0.1539],[0,0.5229,0.6796]],[[0,0.1759,0.9724],[0,0.1025,0.8333],[0,0.9193,0.0737]],[[0,0.7418,0.6974],[0,0.7395,0.9897],[0,0.7944,0.2168]]],[[[0,0.1145,0.8972],[0,0.2783,0.8371],[0,0.315,0.7449]],[[0,0.3292,0.9202],[0,0.9908,0.4413],[0,0.2406,0.4058]],[[0,0.4711,0.0818],[0,0.5679,0.5391],[0,0.7381,0.1939]],[[0,0.3736,0.2502],[0,0.0285,0.7638],[0,0.3286,0.8185]],[[0,0.5426,0.3692],[0,0.0438,1.28453479],[0,0.7928,0.0882]],[[0,0.7084,0.6878],[0,0.7154,0.9814],[1.8451978999999998,0.8351,0.076]]],[[[0,0.7826,0.8497],[0,0.6727,0.4568],[0,0.0049,0.6599]],[[0,0.635,0.2499],[0,0.8929,0.5003],[0,0.9196,0.5855]],[[0,0.1595,0.178],[0,0.3384,0.7878],[0,0.187,0.6032]],[[0,0.2693,0.685],[0,0.0583,0.9187],[0,0.5501,0.4654]],[[0,0.2564,0.9279],[0,0.0856,0.6623],[0,0.9739,0.7494]],[[0,0.9131,0.9885],[0,0.3414,0.7856],[1.7035216,0.4818,0.1668]]]]]

Actual:   [[[[[0, 0.4672, 0.2848], [0, 0.7339, 0.1875], [0, 0.7864, 0.3824]], [[0, 0.374, 0.6275], [0, 0.8534, 0.5929], [0, 0.7656, 0.2874]], [[0, 0.0318, 0.4831], [0, 0.1473, 0.0024], [0, 0.378, 0.9045]], [[0, 0.5439, 0.291], [0, 0.4509, 0.1539], [0, 0.5229, 0.6796]], [[0, 0.1759, 0.9724], [0, 0.1025, 0.8333], [0, 0.9193, 0.0737]], [[0, 0.7418, 0.6974], [0, 0.7395, 0.9897], [0, 0.7944, 0.2168]]], [[[0, 0.1145, 0.8972], [0, 0.2783, 0.8371], [0, 0.315, 0.7449]], [[0, 0.3292, 0.9202], [0, 0.9908, 0.4413], [0, 0.2406, 0.4058]], [[0, 0.4711, 0.0818], [0, 0.5679, 0.5391], [0, 0.7381, 0.1939]], [[0, 0.3736, 0.2502], [0, 0.0285, 0.7638], [0, 0.3286, 0.8185]], [[0, 0.5426, 0.3692], [0, 0.0438, 1.2846], [0, 0.7928, 0.0882]], [[0, 0.7084, 0.6878], [0, 0.7154, 0.9814], [1.8452, 0.8351, 0.076]]], [[[0, 0.7826, 0.8497], [0, 0.6727, 0.4568], [0, 0.0049, 0.6599]], [[0, 0.635, 0.2499], [0, 0.8929, 0.5003], [0, 0.9196, 0.5855]], [[0, 0.1595, 0.178], [0, 0.3384, 0.7878], [0, 0.187, 0.6032]], [[0, 0.2693, 0.685], [0, 0.0583, 0.9187], [0, 0.5501, 0.4654]], [[0, 0.2564, 0.9279], [0, 0.0856, 0.6623], [0, 0.9739, 0.7494]], [[0, 0.9131, 0.9885], [0, 0.3414, 0.7856], [1.7036, 0.4818, 0.1668]]]]]

Expected: [[[[[0, 0.4672, 0.2848], [0, 0.7339, 0.1875], [0, 0.7864, 0.3824]], [[0, 0.374, 0.6275], [0, 0.8534, 0.5929], [0, 0.7656, 0.2874]], [[0, 0.0318, 0.4831], [0, 0.1473, 0.0024], [0, 0.378, 0.9045]], [[0, 0.5439, 0.291], [0, 0.4509, 0.1539], [0, 0.5229, 0.6796]], [[0, 0.1759, 0.9724], [0, 0.1025, 0.8333], [0, 0.9193, 0.0737]], [[0, 0.7418, 0.6974], [0, 0.7395, 0.9897], [0, 0.7944, 0.2168]]], [[[0, 0.1145, 0.8972], [0, 0.2783, 0.8371], [0, 0.315, 0.7449]], [[0, 0.3292, 0.9202], [0, 0.9908, 0.4413], [0, 0.2406, 0.4058]], [[0, 0.4711, 0.0818], [0, 0.5679, 0.5391], [0, 0.7381, 0.1939]], [[0, 0.3736, 0.2502], [0, 0.0285, 0.7638], [0, 0.3286, 0.8185]], [[0, 0.5426, 0.3692], [0, 0.0438, 1.2846], [0, 0.7928, 0.0882]], [[0, 0.7084, 0.6878], [0, 0.7154, 0.9814], [1.8452, 0.8351, 0.076]]], [[[0, 0.7826, 0.8497], [0, 0.6727, 0.4568], [0, 0.0049, 0.6599]], [[0, 0.635, 0.2499], [0, 0.8929, 0.5003], [0, 0.9196, 0.5855]], [[0, 0.1595, 0.178], [0, 0.3384, 0.7878], [0, 0.187, 0.6032]], [[0, 0.2693, 0.685], [0, 0.0583, 0.9187], [0, 0.5501, 0.4654]], [[0, 0.2564, 0.9279], [0, 0.0856, 0.6623], [0, 0.9739, 0.7494]], [[0, 0.9131, 0.9885], [0, 0.3414, 0.7856], [1.7036, 0.4818, 0.1668]]]]]