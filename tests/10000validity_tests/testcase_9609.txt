import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Ave19247 = tf.keras.layers.Input(shape=([1, 1]))
in1Ave19247 = tf.keras.layers.Input(shape=([1, 1]))
in0Con58005 = tf.keras.layers.Input(shape=([12, 1, 1]))
in0Dot98887 = tf.keras.layers.Input(shape=([3]))
in1Dot98887 = tf.keras.layers.Input(shape=([3]))

Ave19247 = keras.layers.Average(name = 'Ave19247', )([in0Ave19247,in1Ave19247])
Lea5540 = keras.layers.LeakyReLU(alpha=6.7685090405387935, name = 'Lea5540', )(Ave19247)
Lay33058 = keras.layers.LayerNormalization(axis=2, epsilon=1.2781216552937127, name = 'Lay33058', )(Lea5540)
Res1505 = keras.layers.Reshape((1, 1, 1), name = 'Res1505', )(Lay33058)
Zer788 = keras.layers.ZeroPadding2D(padding=((11, 0), (0, 0)), name = 'Zer788', )(Res1505)
Con58005 = keras.layers.Concatenate(axis=3, name = 'Con58005', )([Zer788,in0Con58005])
Dot98887 = keras.layers.Dot(axes=(1, 1), name = 'Dot98887', )([in0Dot98887,in1Dot98887])
Res36192 = keras.layers.Reshape((1, 1), name = 'Res36192', )(Dot98887)
Res83177 = keras.layers.Reshape((1, 1, 1), name = 'Res83177', )(Res36192)
Res36290 = keras.layers.Reshape((1, 1, 1, 1), name = 'Res36290', )(Res83177)
Con65817 = keras.layers.Conv3DTranspose(2, (1, 1, 1),strides=(12, 1, 1), padding='valid', name = 'Con65817', )(Res36290)
Res75401 = keras.layers.Reshape((12, 1, 2), name = 'Res75401', )(Con65817)
Max70436 = keras.layers.MaxPool2D(pool_size=(3, 1), strides=(1, 1), padding='same', name = 'Max70436', )(Res75401)
Max48904 = keras.layers.Maximum(name = 'Max48904', )([Con58005,Max70436])
model = tf.keras.models.Model(inputs=[in0Ave19247,in1Ave19247,in0Con58005,in0Dot98887,in1Dot98887], outputs=Max48904)
w = model.get_layer('Con65817').get_weights() 
w[0] = np.array([[[[[0.7747], [0.1791]]]]])
w[1] = np.array([0, 0])
model.get_layer('Con65817').set_weights(w) 
in0Ave19247 = tf.constant([[[0.1624]]])
in1Ave19247 = tf.constant([[[0.8495]]])
in0Con58005 = tf.constant([[[[0.3471]], [[0.5089]], [[0.7023]], [[0.5606]], [[0.8599]], [[0.0791]], [[0.0528]], [[0.43]], [[0.0705]], [[0.3111]], [[0.3268]], [[0.6573]]]])
in0Dot98887 = tf.constant([[0.5312, 0.105, 0.3079]])
in1Dot98887 = tf.constant([[0.0766, 0.3653, 0.6798]])
print (np.array2string(model.predict([in0Ave19247,in1Ave19247,in0Con58005,in0Dot98887,in1Dot98887],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Max48904.png')

LAve19247 = average_layer([[[[0.1624]]], [[[0.8495]]]], Ave19247), 
LLea5540 = leaky_relu_layer(Ave19247, 6.7685090405387935, Lea5540), 
LLay33058 = layer_normalization_layer(Lea5540, 2, 1.2781216552937127, Lay33058), 
LRes1505 = reshape_layer(Lay33058, [1, 1, 1], Res1505), 
LZer788 = zero_padding2D_layer(Res1505, 11, 0, 0, 0, Zer788), 
LCon58005 = concatenate_layer([Zer788,[[[[0.3471]], [[0.5089]], [[0.7023]], [[0.5606]], [[0.8599]], [[0.0791]], [[0.0528]], [[0.43]], [[0.0705]], [[0.3111]], [[0.3268]], [[0.6573]]]]], 3, Con58005), 
LDot98887 = dot_layer([[0.5312, 0.105, 0.3079]], [[0.0766, 0.3653, 0.6798]], 1, 1, Dot98887), 
LRes36192 = reshape_layer(Dot98887, [1, 1], Res36192), 
LRes83177 = reshape_layer(Res36192, [1, 1, 1], Res83177), 
LRes36290 = reshape_layer(Res83177, [1, 1, 1, 1], Res36290), 
LCon65817 = conv3D_transpose_layer(Res36290, 1, 1, 1,[[[[[0.7747], [0.1791]]]]],[0, 0], 12, 1, 1, false, Con65817), 
LRes75401 = reshape_layer(Con65817, [12, 1, 2], Res75401), 
LMax70436 = max_pool2D_layer(Res75401, 3, 1, 1, 1, true, Max70436), 
LMax48904 = maximum_layer([Con58005,Max70436], Max48904), 
exec_layers([LAve19247,LLea5540,LLay33058,LRes1505,LZer788,LCon58005,LDot98887,LRes36192,LRes83177,LRes36290,LCon65817,LRes75401,LMax70436,LMax48904],["Ave19247","Lea5540","Lay33058","Res1505","Zer788","Con58005","Dot98887","Res36192","Res83177","Res36290","Con65817","Res75401","Max70436","Max48904"],Max48904,"Max48904")

Actual (Unparsed): [[[[0.2233900, 0.3471000]], [[0.2233900, 0.5089000]], [[0.0000000, 0.7023000]], [[0.0000000, 0.5606000]], [[0.0000000, 0.8599000]], [[0.0000000, 0.0791000]], [[0.0000000, 0.0528000]], [[0.0000000, 0.4300000]], [[0.0000000, 0.0705000]], [[0.0000000, 0.3111000]], [[0.0000000, 0.3268000]], [[0.0000000, 0.6573000]]]]

Expected (Unparsed): [[[[0.22339004394800002,0.3471]],[[0.22339004394800002,0.5089]],[[0,0.7023]],[[0,0.5606]],[[0,0.8599]],[[0,0.0791]],[[0,0.0528]],[[0,0.43]],[[0,0.0705]],[[0,0.3111]],[[0,0.3268]],[[0.0,0.6573]]]]

Actual:   [[[[0.2234, 0.3471]], [[0.2234, 0.5089]], [[0, 0.7023]], [[0, 0.5606]], [[0, 0.8599]], [[0, 0.0791]], [[0, 0.0528]], [[0, 0.43]], [[0, 0.0705]], [[0, 0.3111]], [[0, 0.3268]], [[0, 0.6573]]]]

Expected: [[[[0.2234, 0.3471]], [[0.2234, 0.5089]], [[0, 0.7023]], [[0, 0.5606]], [[0, 0.8599]], [[0, 0.0791]], [[0, 0.0528]], [[0, 0.43]], [[0, 0.0705]], [[0, 0.3111]], [[0, 0.3268]], [[0, 0.6573]]]]