import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Sub1489 = tf.keras.layers.Input(shape=([3, 2, 2, 3]))
in1Sub1489 = tf.keras.layers.Input(shape=([3, 2, 2, 3]))
in0Cro69564 = tf.keras.layers.Input(shape=([2, 1]))
in0Con38320 = tf.keras.layers.Input(shape=([3]))
in0Cro9490 = tf.keras.layers.Input(shape=([3, 2, 4, 4]))
in0Con94980 = tf.keras.layers.Input(shape=([32]))

Sub1489 = keras.layers.Subtract(name = 'Sub1489', )([in0Sub1489,in1Sub1489])
Res23833 = keras.layers.Reshape((3, 2, 6), name = 'Res23833', )(Sub1489)
Res92408 = keras.layers.Reshape((3, 12), name = 'Res92408', )(Res23833)
Fla89570 = keras.layers.Flatten(name = 'Fla89570', )(Res92408)
Cro69564 = keras.layers.Cropping1D(cropping=((0, 1)), name = 'Cro69564', )(in0Cro69564)
Fla23027 = keras.layers.Flatten(name = 'Fla23027', )(Cro69564)
Con38320 = keras.layers.Concatenate(axis=1, name = 'Con38320', )([Fla23027,in0Con38320])
Cro9490 = keras.layers.Cropping3D(cropping=((2, 0), (1, 0), (1, 0)), name = 'Cro9490', )(in0Cro9490)
Glo80526 = keras.layers.GlobalMaxPool3D(name = 'Glo80526', )(Cro9490)
Ave34370 = keras.layers.Average(name = 'Ave34370', )([Con38320,Glo80526])
Con94980 = keras.layers.Concatenate(axis=1, name = 'Con94980', )([Ave34370,in0Con94980])
Add49631 = keras.layers.Add(name = 'Add49631', )([Fla89570,Con94980])
model = tf.keras.models.Model(inputs=[in0Sub1489,in1Sub1489,in0Cro69564,in0Con38320,in0Cro9490,in0Con94980], outputs=Add49631)
in0Sub1489 = tf.constant([[[[[0.5093, 0.4815, 0.7076], [0.5722, 0.0291, 0.3148]], [[0.0299, 0.6332, 0.6862], [0.7103, 0.9459, 0.4446]]], [[[0.9502, 0.2675, 0.7569], [0.0302, 0.72, 0.5103]], [[0.6284, 0.1056, 0.156], [0.585, 0.0537, 0.1228]]], [[[0.9732, 0.8966, 0.559], [0.07, 0.9193, 0.195]], [[0.2679, 0.7693, 0.1467], [0.5914, 0.4462, 0.5161]]]]])
in1Sub1489 = tf.constant([[[[[0.456, 0.4713, 0.4295], [0.0388, 0.9342, 0.3007]], [[0.4, 0.9203, 0.3413], [0.874, 0.3228, 0.8229]]], [[[0.7093, 0.6403, 0.9788], [0.0824, 0.008, 0.3648]], [[0.4388, 0.4962, 0.4066], [0.5265, 0.5092, 0.4235]]], [[[0.6125, 0.5405, 0.6551], [0.632, 0.0058, 0.0993]], [[0.6501, 0.6827, 0.8026], [0.6746, 0.741, 0.0255]]]]])
in0Cro69564 = tf.constant([[[1.2801], [1.4935]]])
in0Con38320 = tf.constant([[0.6837, 0.027, 0.1098]])
in0Cro9490 = tf.constant([[[[[1.4253, 1.3932, 1.1737, 1.1093], [1.0352, 1.5299, 1.7182, 1.0243], [1.197, 1.7657, 1.4464, 1.6893], [1.8946, 1.4575, 1.7801, 1.6044]], [[1.3008, 1.8593, 1.6538, 1.1778], [1.7612, 1.5517, 1.8976, 1.4575], [1.3187, 1.1675, 1.8697, 1.8481], [1.9444, 1.7817, 1.879, 1.447]]], [[[1.2087, 1.9982, 1.2671, 1.6899], [1.4675, 1.4658, 1.6281, 1.5839], [1.7666, 1.2782, 1.5382, 1.9231], [1.5748, 1.4762, 1.3378, 1.5317]], [[1.1412, 1.6589, 1.9643, 1.7605], [1.7483, 1.5286, 1.5692, 1.1743], [1.3759, 1.0541, 1.6685, 1.6103], [1.33, 1.812, 1.8749, 1.5636]]], [[[1.1992, 1.9877, 1.8376, 1.1598], [1.099, 1.4613, 1.8778, 1.8125], [1.538, 1.3796, 1.9478, 1.0322], [1.4003, 1.6277, 1.9654, 1.7507]], [[1.4735, 1.6508, 1.2797, 1.9578], [1.673, 1.1496, 1.0089, 1.4084], [1.6157, 1.2747, 1.2574, 1.6499], [1.4753, 1.0791, 1.7685, 1.6462]]]]])
in0Con94980 = tf.constant([[0.2481, 0.2782, 0.7052, 0.8639, 0.0513, 0.3033, 0.0542, 0.6344, 0.2784, 0.0898, 0.7698, 0.9322, 0.0356, 0.889, 0.6159, 0.4447, 0.3383, 0.1572, 0.1305, 0.6813, 0.6127, 0.4466, 0.3427, 0.8404, 0.6458, 0.186, 0.2029, 0.9669, 0.6301, 0.3136, 0.9569, 0.1864]])
print (np.array2string(model.predict([in0Sub1489,in1Sub1489,in0Cro69564,in0Con38320,in0Cro9490,in0Con94980],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Add49631.png')

LSub1489 = subtract_layer([[[[[0.5093, 0.4815, 0.7076], [0.5722, 0.0291, 0.3148]], [[0.0299, 0.6332, 0.6862], [0.7103, 0.9459, 0.4446]]], [[[0.9502, 0.2675, 0.7569], [0.0302, 0.72, 0.5103]], [[0.6284, 0.1056, 0.156], [0.585, 0.0537, 0.1228]]], [[[0.9732, 0.8966, 0.559], [0.07, 0.9193, 0.195]], [[0.2679, 0.7693, 0.1467], [0.5914, 0.4462, 0.5161]]]]], [[[[[0.456, 0.4713, 0.4295], [0.0388, 0.9342, 0.3007]], [[0.4, 0.9203, 0.3413], [0.874, 0.3228, 0.8229]]], [[[0.7093, 0.6403, 0.9788], [0.0824, 0.008, 0.3648]], [[0.4388, 0.4962, 0.4066], [0.5265, 0.5092, 0.4235]]], [[[0.6125, 0.5405, 0.6551], [0.632, 0.0058, 0.0993]], [[0.6501, 0.6827, 0.8026], [0.6746, 0.741, 0.0255]]]]], Sub1489), 
LRes23833 = reshape_layer(Sub1489, [3, 2, 6], Res23833), 
LRes92408 = reshape_layer(Res23833, [3, 12], Res92408), 
LFla89570 = flatten_layer(Res92408, Fla89570), 
LCro69564 = cropping1D_layer([[[1.2801], [1.4935]]], 0, 1, Cro69564), 
LFla23027 = flatten_layer(Cro69564, Fla23027), 
LCon38320 = concatenate_layer([Fla23027,[[0.6837, 0.027, 0.1098]]], 1, Con38320), 
LCro9490 = cropping3D_layer([[[[[1.4253, 1.3932, 1.1737, 1.1093], [1.0352, 1.5299, 1.7182, 1.0243], [1.197, 1.7657, 1.4464, 1.6893], [1.8946, 1.4575, 1.7801, 1.6044]], [[1.3008, 1.8593, 1.6538, 1.1778], [1.7612, 1.5517, 1.8976, 1.4575], [1.3187, 1.1675, 1.8697, 1.8481], [1.9444, 1.7817, 1.879, 1.447]]], [[[1.2087, 1.9982, 1.2671, 1.6899], [1.4675, 1.4658, 1.6281, 1.5839], [1.7666, 1.2782, 1.5382, 1.9231], [1.5748, 1.4762, 1.3378, 1.5317]], [[1.1412, 1.6589, 1.9643, 1.7605], [1.7483, 1.5286, 1.5692, 1.1743], [1.3759, 1.0541, 1.6685, 1.6103], [1.33, 1.812, 1.8749, 1.5636]]], [[[1.1992, 1.9877, 1.8376, 1.1598], [1.099, 1.4613, 1.8778, 1.8125], [1.538, 1.3796, 1.9478, 1.0322], [1.4003, 1.6277, 1.9654, 1.7507]], [[1.4735, 1.6508, 1.2797, 1.9578], [1.673, 1.1496, 1.0089, 1.4084], [1.6157, 1.2747, 1.2574, 1.6499], [1.4753, 1.0791, 1.7685, 1.6462]]]]], 2, 0, 1, 0, 1, 0, Cro9490), 
LGlo80526 = global_max_pool3D_layer(Cro9490, Glo80526), 
LAve34370 = average_layer([Con38320,Glo80526], Ave34370), 
LCon94980 = concatenate_layer([Ave34370,[[0.2481, 0.2782, 0.7052, 0.8639, 0.0513, 0.3033, 0.0542, 0.6344, 0.2784, 0.0898, 0.7698, 0.9322, 0.0356, 0.889, 0.6159, 0.4447, 0.3383, 0.1572, 0.1305, 0.6813, 0.6127, 0.4466, 0.3427, 0.8404, 0.6458, 0.186, 0.2029, 0.9669, 0.6301, 0.3136, 0.9569, 0.1864]]], 1, Con94980), 
LAdd49631 = add_layer([Fla89570,Con94980], Add49631), 
exec_layers([LSub1489,LRes23833,LRes92408,LFla89570,LCro69564,LFla23027,LCon38320,LCro9490,LGlo80526,LAve34370,LCon94980,LAdd49631],["Sub1489","Res23833","Res92408","Fla89570","Cro69564","Fla23027","Con38320","Cro9490","Glo80526","Ave34370","Con94980","Add49631"],Add49631,"Add49631")

Actual (Unparsed): [[1.5298500, 0.9894000, 1.1758500, 1.4132500, -0.6570000, 0.2923000, 0.3351000, 0.5768000, 0.3962000, 0.1396000, 0.6773000, 0.2561000, 0.5193000, -0.2830000, 0.5479000, 0.8800000, 0.7476000, 1.0345000, 0.8055000, 0.0541000, 0.0877000, 0.2157000, -0.3250000, 0.3806000, 0.9734000, 0.8027000, 0.2466000, 0.2784000, 1.5593000, 0.2817000, -0.1793000, 1.0535000, -0.0258000, 0.2304000, 0.6621000, 0.6770000]]

Expected (Unparsed): [[1.52985,0.9894,1.17585,1.4132500000000001,-0.657,0.2923,0.3351,0.5768,0.39620000000000005,0.13960000000000006,0.6773,0.2561,0.5193,-0.283,0.5479,0.88,0.7475999999999999,1.0345,0.8054999999999999,0.05410000000000004,0.08769999999999994,0.2157,-0.325,0.38060000000000005,0.9733999999999999,0.8027,0.24660000000000004,0.2784,1.5593,0.2817,-0.1793,1.0535,-0.025799999999999934,0.23040000000000005,0.6620999999999999,0.677]]

Actual:   [[1.5299, 0.9894, 1.1759, 1.4133, -0.657, 0.2923, 0.3351, 0.5768, 0.3962, 0.1396, 0.6773, 0.2561, 0.5193, -0.283, 0.5479, 0.88, 0.7476, 1.0345, 0.8055, 0.0541, 0.0877, 0.2157, -0.325, 0.3806, 0.9734, 0.8027, 0.2466, 0.2784, 1.5593, 0.2817, -0.1793, 1.0535, -0.0258, 0.2304, 0.6621, 0.677]]

Expected: [[1.5299, 0.9894, 1.1759, 1.4133, -0.657, 0.2923, 0.3351, 0.5768, 0.3963, 0.1397, 0.6773, 0.2561, 0.5193, -0.283, 0.5479, 0.88, 0.7476, 1.0345, 0.8055, 0.0542, 0.0877, 0.2157, -0.325, 0.3807, 0.9734, 0.8027, 0.2467, 0.2784, 1.5593, 0.2817, -0.1793, 1.0535, -0.0257, 0.2305, 0.6621, 0.677]]