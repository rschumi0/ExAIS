import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0ReL26260 = tf.keras.layers.Input(shape=([1, 2, 1]))
in0Max90938 = tf.keras.layers.Input(shape=([1, 1, 1, 1]))
in1Max90938 = tf.keras.layers.Input(shape=([1, 1, 1, 1]))

ReL26260 = keras.layers.ReLU(max_value=5.346090301728647, negative_slope=4.747238315579535, threshold=4.76495747343758, name = 'ReL26260', input_shape=(1, 2, 1))(in0ReL26260)
Res49178 = keras.layers.Reshape((1, 2, 1, 1), name = 'Res49178', )(ReL26260)
Zer26338 = keras.layers.ZeroPadding3D(padding=((2, 0), (1, 0), (2, 0)), name = 'Zer26338', )(Res49178)
Max90938 = keras.layers.Maximum(name = 'Max90938', )([in0Max90938,in1Max90938])
Thr77639 = keras.layers.ThresholdedReLU(theta=4.955122691143478, name = 'Thr77639', )(Max90938)
Zer69428 = keras.layers.ZeroPadding3D(padding=((1, 1), (1, 1), (1, 1)), name = 'Zer69428', )(Thr77639)
Mul31737 = keras.layers.Multiply(name = 'Mul31737', )([Zer26338,Zer69428])
model = tf.keras.models.Model(inputs=[in0ReL26260,in0Max90938,in1Max90938], outputs=Mul31737)
in0ReL26260 = tf.constant([[[[0.295], [0.6976]]]])
in0Max90938 = tf.constant([[[[[0.5048]]]]])
in1Max90938 = tf.constant([[[[[0.5441]]]]])
print (np.array2string(model.predict([in0ReL26260,in0Max90938,in1Max90938],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Mul31737.png')

LReL26260 = relu_layer([[[[0.295], [0.6976]]]], 5.346090301728647, 4.747238315579535, 4.76495747343758, ReL26260), 
LRes49178 = reshape_layer(ReL26260, [1, 2, 1, 1], Res49178), 
LZer26338 = zero_padding3D_layer(Res49178, 2, 0, 1, 0, 2, 0, Zer26338), 
LMax90938 = maximum_layer([[[[[[0.5048]]]]], [[[[[0.5441]]]]]], Max90938), 
LThr77639 = thresholded_relu_layer(Max90938, 4.955122691143478, Thr77639), 
LZer69428 = zero_padding3D_layer(Thr77639, 1, 1, 1, 1, 1, 1, Zer69428), 
LMul31737 = multiply_layer([Zer26338,Zer69428], Mul31737), 
exec_layers([LReL26260,LRes49178,LZer26338,LMax90938,LThr77639,LZer69428,LMul31737],["ReL26260","Res49178","Zer26338","Max90938","Thr77639","Zer69428","Mul31737"],Mul31737,"Mul31737")

Actual (Unparsed): [[[[[0.0000000], [0.0000000], [0.0000000]], [[0.0000000], [0.0000000], [0.0000000]], [[0.0000000], [0.0000000], [0.0000000]]], [[[0.0000000], [0.0000000], [0.0000000]], [[0.0000000], [0.0000000], [0.0000000]], [[0.0000000], [0.0000000], [0.0000000]]], [[[0.0000000], [0.0000000], [0.0000000]], [[0.0000000], [0.0000000], [-0.0000000]], [[0.0000000], [0.0000000], [-0.0000000]]]]]

Expected (Unparsed): [[[[[0],[0],[0]],[[0],[0],[0]],[[0],[0],[0]]],[[[0],[0],[0]],[[0],[0],[0]],[[0],[0],[0]]],[[[0],[0],[0]],[[0],[0],[-0.0]],[[0],[0],[-0.0]]]]]

Actual:   [[[[[0], [0], [0]], [[0], [0], [0]], [[0], [0], [0]]], [[[0], [0], [0]], [[0], [0], [0]], [[0], [0], [0]]], [[[0], [0], [0]], [[0], [0], [-0]], [[0], [0], [-0]]]]]

Expected: [[[[[0], [0], [0]], [[0], [0], [0]], [[0], [0], [0]]], [[[0], [0], [0]], [[0], [0], [0]], [[0], [0], [0]]], [[[0], [0], [0]], [[0], [0], [-0]], [[0], [0], [-0]]]]]