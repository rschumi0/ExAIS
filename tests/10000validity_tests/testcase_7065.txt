import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Ave70161 = tf.keras.layers.Input(shape=([1, 1]))
in1Ave70161 = tf.keras.layers.Input(shape=([1, 1]))
in0Loc84477 = tf.keras.layers.Input(shape=([2, 1]))
in0Con12833 = tf.keras.layers.Input(shape=([3, 3, 3]))
in0Up_6641 = tf.keras.layers.Input(shape=([3, 3]))
in0Cro91925 = tf.keras.layers.Input(shape=([2, 1, 1, 3]))

Ave70161 = keras.layers.Average(name = 'Ave70161', )([in0Ave70161,in1Ave70161])
Loc84477 = keras.layers.LocallyConnected1D(2, (2),strides=(1), name = 'Loc84477', )(in0Loc84477)
Dot85352 = keras.layers.Dot(axes=(1, 1), name = 'Dot85352', )([Ave70161,Loc84477])
Res722 = keras.layers.Reshape((1, 2, 1), name = 'Res722', )(Dot85352)
Zer5177 = keras.layers.ZeroPadding2D(padding=((2, 0), (1, 0)), name = 'Zer5177', )(Res722)
Con12833 = keras.layers.Concatenate(axis=3, name = 'Con12833', )([Zer5177,in0Con12833])
Up_6641 = keras.layers.UpSampling1D(size=(1), name = 'Up_6641', )(in0Up_6641)
Cro91925 = keras.layers.Cropping3D(cropping=((0, 0), (0, 0), (0, 0)), name = 'Cro91925', )(in0Cro91925)
Res90389 = keras.layers.Reshape((2, 1, 3), name = 'Res90389', )(Cro91925)
Res49797 = keras.layers.Reshape((2, 3), name = 'Res49797', )(Res90389)
Up_94205 = keras.layers.UpSampling1D(size=(1), name = 'Up_94205', )(Res49797)
Zer26021 = keras.layers.ZeroPadding1D(padding=((1, 0)), name = 'Zer26021', )(Up_94205)
Ave46092 = keras.layers.Average(name = 'Ave46092', )([Up_6641,Zer26021])
Res66632 = keras.layers.Reshape((3, 3, 1), name = 'Res66632', )(Ave46092)
Sep53016 = keras.layers.SeparableConv2D(4, (3, 3),strides=(1, 1), padding='same', name = 'Sep53016', )(Res66632)
Mul67230 = keras.layers.Multiply(name = 'Mul67230', )([Con12833,Sep53016])
Res71389 = keras.layers.Reshape((3, 12), name = 'Res71389', )(Mul67230)
Con42660 = keras.layers.Conv1D(4, (3),strides=(1), padding='valid', dilation_rate=(1), name = 'Con42660', )(Res71389)
model = tf.keras.models.Model(inputs=[in0Ave70161,in1Ave70161,in0Loc84477,in0Con12833,in0Up_6641,in0Cro91925], outputs=Con42660)
w = model.get_layer('Loc84477').get_weights() 
w[0] = np.array([[[0.9798, 0.6712], [0.0069, 0.567]]])
w[1] = np.array([[0, 0]])
model.get_layer('Loc84477').set_weights(w) 
w = model.get_layer('Sep53016').get_weights() 
w[0] = np.array([[[[0.4937]], [[0.9665]], [[0.0224]]], [[[0.0098]], [[0.8057]], [[0.202]]], [[[0.1572]], [[0.9111]], [[0.9626]]]])
w[1] = np.array([[[[0.7055, 0.1635, 0.7286, 0.1357]]]])
w[2] = np.array([0, 0, 0, 0])
model.get_layer('Sep53016').set_weights(w) 
w = model.get_layer('Con42660').get_weights() 
w[0] = np.array([[[0.0806, 0.2034, 0.748, 0.0835], [0.0812, 0.3838, 0.5535, 0.3667], [0.6978, 0.6357, 0.9303, 0.8213], [0.7901, 0.7097, 0.1465, 0.8315], [0.2914, 0.6527, 0.4428, 0.5449], [0.777, 0.2504, 0.4215, 0.2536], [0.7761, 0.3181, 0.4694, 0.0117], [0.2774, 0.7188, 0.4505, 0.9032], [0.3578, 0.0333, 0.834, 0.0026], [0.5064, 0.2707, 0.0193, 0.609], [0.003, 0.8666, 0.8615, 0.7741], [0.6673, 0.4924, 0.3085, 0.4964]], [[0.3974, 0.8694, 0.6174, 0.205], [0.1786, 0.8707, 0.8362, 0.3213], [0.6656, 0.6794, 0.1062, 0.7514], [0.0141, 0.6674, 0.871, 0.1369], [0.3682, 0.9626, 0.2621, 0.5724], [0.3014, 0.3781, 0.7707, 0.2818], [0.5488, 0.4937, 0.8138, 0.4406], [0.5715, 0.1977, 0.9558, 0.9283], [0.8486, 0.9266, 0.3548, 0.3002], [0.3058, 0.1706, 0.4723, 0.6793], [0.9588, 0.5551, 0.2014, 0.5864], [0.6739, 0.9501, 0.3533, 0.9504]], [[0.9305, 0.6154, 0.8712, 0.6688], [0.6077, 0.3437, 0.2345, 0.1281], [0.1109, 0.9305, 0.263, 0.0325], [0.605, 0.0692, 0.932, 0.7402], [0.7262, 0.9469, 0.8716, 0.0605], [0.9086, 0.3983, 0.9382, 0.1274], [0.3799, 0.4663, 0.6171, 0.5295], [0.9546, 0.6123, 0.0446, 0.3549], [0.9874, 0.6201, 0.1239, 0.1838], [0.2343, 0.4473, 0.546, 0.352], [0.9142, 0.8907, 0.5287, 0.9997], [0.9645, 0.9532, 0.7357, 0.5169]]])
w[1] = np.array([0, 0, 0, 0])
model.get_layer('Con42660').set_weights(w) 
in0Ave70161 = tf.constant([[[0.4354]]])
in1Ave70161 = tf.constant([[[0.7255]]])
in0Loc84477 = tf.constant([[[0.6584], [0.8037]]])
in0Con12833 = tf.constant([[[[0.1605, 0.3161, 0.9508], [0.8118, 0.2745, 0.3905], [0.8102, 0.5169, 0.8214]], [[0.0535, 0.7285, 0.1482], [0.3191, 0.7553, 0.1898], [0.5018, 0.9351, 0.8629]], [[0.2891, 0.5212, 0.6378], [0.9158, 0.4295, 0.1131], [0.2987, 0.5824, 0.5946]]]])
in0Up_6641 = tf.constant([[[1.1209, 1.4415, 1.7165], [1.4032, 1.0243, 1.1486], [1.6884, 1.4325, 1.7904]]])
in0Cro91925 = tf.constant([[[[[1.0602, 1.093, 1.5897]]], [[[1.4339, 1.0843, 1.4568]]]]])
print (np.array2string(model.predict([in0Ave70161,in1Ave70161,in0Loc84477,in0Con12833,in0Up_6641,in0Cro91925],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Con42660.png')

LAve70161 = average_layer([[[[0.4354]]], [[[0.7255]]]], Ave70161), 
LLoc84477 = locally_connected1D_layer([[[0.6584], [0.8037]]], 2,[[[0.9798, 0.6712], [0.0069, 0.567]]],[[0, 0]], 1, Loc84477), 
LDot85352 = dot_layer(Ave70161,Loc84477, 1, 1, Dot85352), 
LRes722 = reshape_layer(Dot85352, [1, 2, 1], Res722), 
LZer5177 = zero_padding2D_layer(Res722, 2, 0, 1, 0, Zer5177), 
LCon12833 = concatenate_layer([Zer5177,[[[[0.1605, 0.3161, 0.9508], [0.8118, 0.2745, 0.3905], [0.8102, 0.5169, 0.8214]], [[0.0535, 0.7285, 0.1482], [0.3191, 0.7553, 0.1898], [0.5018, 0.9351, 0.8629]], [[0.2891, 0.5212, 0.6378], [0.9158, 0.4295, 0.1131], [0.2987, 0.5824, 0.5946]]]]], 3, Con12833), 
LUp_6641 = up_sampling1D_layer([[[1.1209, 1.4415, 1.7165], [1.4032, 1.0243, 1.1486], [1.6884, 1.4325, 1.7904]]], 1, Up_6641), 
LCro91925 = cropping3D_layer([[[[[1.0602, 1.093, 1.5897]]], [[[1.4339, 1.0843, 1.4568]]]]], 0, 0, 0, 0, 0, 0, Cro91925), 
LRes90389 = reshape_layer(Cro91925, [2, 1, 3], Res90389), 
LRes49797 = reshape_layer(Res90389, [2, 3], Res49797), 
LUp_94205 = up_sampling1D_layer(Res49797, 1, Up_94205), 
LZer26021 = zero_padding1D_layer(Up_94205, 1, 0, Zer26021), 
LAve46092 = average_layer([Up_6641,Zer26021], Ave46092), 
LRes66632 = reshape_layer(Ave46092, [3, 3, 1], Res66632), 
LSep53016 = separable_conv2D_layer(Res66632, 3, 3,[[[[[0.4937]], [[0.9665]], [[0.0224]]], [[[0.0098]], [[0.8057]], [[0.202]]], [[[0.1572]], [[0.9111]], [[0.9626]]]],[[[[0.7055, 0.1635, 0.7286, 0.1357]]]]],[0, 0, 0, 0], 1, 1, true, Sep53016), 
LMul67230 = multiply_layer([Con12833,Sep53016], Mul67230), 
LRes71389 = reshape_layer(Mul67230, [3, 12], Res71389), 
LCon42660 = conv1D_layer(Res71389, 3,[[[0.0806, 0.2034, 0.748, 0.0835], [0.0812, 0.3838, 0.5535, 0.3667], [0.6978, 0.6357, 0.9303, 0.8213], [0.7901, 0.7097, 0.1465, 0.8315], [0.2914, 0.6527, 0.4428, 0.5449], [0.777, 0.2504, 0.4215, 0.2536], [0.7761, 0.3181, 0.4694, 0.0117], [0.2774, 0.7188, 0.4505, 0.9032], [0.3578, 0.0333, 0.834, 0.0026], [0.5064, 0.2707, 0.0193, 0.609], [0.003, 0.8666, 0.8615, 0.7741], [0.6673, 0.4924, 0.3085, 0.4964]], [[0.3974, 0.8694, 0.6174, 0.205], [0.1786, 0.8707, 0.8362, 0.3213], [0.6656, 0.6794, 0.1062, 0.7514], [0.0141, 0.6674, 0.871, 0.1369], [0.3682, 0.9626, 0.2621, 0.5724], [0.3014, 0.3781, 0.7707, 0.2818], [0.5488, 0.4937, 0.8138, 0.4406], [0.5715, 0.1977, 0.9558, 0.9283], [0.8486, 0.9266, 0.3548, 0.3002], [0.3058, 0.1706, 0.4723, 0.6793], [0.9588, 0.5551, 0.2014, 0.5864], [0.6739, 0.9501, 0.3533, 0.9504]], [[0.9305, 0.6154, 0.8712, 0.6688], [0.6077, 0.3437, 0.2345, 0.1281], [0.1109, 0.9305, 0.263, 0.0325], [0.605, 0.0692, 0.932, 0.7402], [0.7262, 0.9469, 0.8716, 0.0605], [0.9086, 0.3983, 0.9382, 0.1274], [0.3799, 0.4663, 0.6171, 0.5295], [0.9546, 0.6123, 0.0446, 0.3549], [0.9874, 0.6201, 0.1239, 0.1838], [0.2343, 0.4473, 0.546, 0.352], [0.9142, 0.8907, 0.5287, 0.9997], [0.9645, 0.9532, 0.7357, 0.5169]]],[0, 0, 0, 0], 1, false, 1, Con42660), 
exec_layers([LAve70161,LLoc84477,LDot85352,LRes722,LZer5177,LCon12833,LUp_6641,LCro91925,LRes90389,LRes49797,LUp_94205,LZer26021,LAve46092,LRes66632,LSep53016,LMul67230,LRes71389,LCon42660],["Ave70161","Loc84477","Dot85352","Res722","Zer5177","Con12833","Up_6641","Cro91925","Res90389","Res49797","Up_94205","Zer26021","Ave46092","Res66632","Sep53016","Mul67230","Res71389","Con42660"],Con42660,"Con42660")

Actual (Unparsed): [[[12.5683445, 11.8518094, 9.1935788, 10.0653568]]]

Expected (Unparsed): [[[12.568344311353762,11.851809197200835,9.193578710181653,10.065356610940393]]]

Actual:   [[[12.5684, 11.8519, 9.1936, 10.0654]]]

Expected: [[[12.5684, 11.8519, 9.1936, 10.0654]]]