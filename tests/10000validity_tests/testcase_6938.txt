import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Mul3191 = tf.keras.layers.Input(shape=([2, 2, 1]))
in1Mul3191 = tf.keras.layers.Input(shape=([2, 2, 1]))
in0Add41679 = tf.keras.layers.Input(shape=([1, 2]))
in1Add41679 = tf.keras.layers.Input(shape=([1, 2]))

Mul3191 = keras.layers.Multiply(name = 'Mul3191', )([in0Mul3191,in1Mul3191])
Res1889 = keras.layers.Reshape((2, 2), name = 'Res1889', )(Mul3191)
Add41679 = keras.layers.Add(name = 'Add41679', )([in0Add41679,in1Add41679])
Zer26202 = keras.layers.ZeroPadding1D(padding=((1, 0)), name = 'Zer26202', )(Add41679)
Max5828 = keras.layers.Maximum(name = 'Max5828', )([Res1889,Zer26202])
model = tf.keras.models.Model(inputs=[in0Mul3191,in1Mul3191,in0Add41679,in1Add41679], outputs=Max5828)
in0Mul3191 = tf.constant([[[[0.4525], [0.6818]], [[0.8693], [0.9268]]]])
in1Mul3191 = tf.constant([[[[0.3238], [0.61]], [[0.2138], [0.064]]]])
in0Add41679 = tf.constant([[[0.3133, 0.5586]]])
in1Add41679 = tf.constant([[[0.64, 0.5299]]])
print (np.array2string(model.predict([in0Mul3191,in1Mul3191,in0Add41679,in1Add41679],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Max5828.png')

LMul3191 = multiply_layer([[[[[0.4525], [0.6818]], [[0.8693], [0.9268]]]], [[[[0.3238], [0.61]], [[0.2138], [0.064]]]]], Mul3191), 
LRes1889 = reshape_layer(Mul3191, [2, 2], Res1889), 
LAdd41679 = add_layer([[[[0.3133, 0.5586]]], [[[0.64, 0.5299]]]], Add41679), 
LZer26202 = zero_padding1D_layer(Add41679, 1, 0, Zer26202), 
LMax5828 = maximum_layer([Res1889,Zer26202], Max5828), 
exec_layers([LMul3191,LRes1889,LAdd41679,LZer26202,LMax5828],["Mul3191","Res1889","Add41679","Zer26202","Max5828"],Max5828,"Max5828")

Actual (Unparsed): [[[0.1465195, 0.4158980], [0.9533000, 1.0885000]]]

Expected (Unparsed): [[[0.1465195,0.415898],[0.9533,1.0885]]]

Actual:   [[[0.1466, 0.4159], [0.9533, 1.0885]]]

Expected: [[[0.1466, 0.4159], [0.9533, 1.0885]]]