import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Sub88577 = tf.keras.layers.Input(shape=([3, 3, 3]))
in1Sub88577 = tf.keras.layers.Input(shape=([3, 3, 3]))
in0Glo71209 = tf.keras.layers.Input(shape=([1, 2, 1, 1]))
in0Con30345 = tf.keras.layers.Input(shape=([8]))

Sub88577 = keras.layers.Subtract(name = 'Sub88577', )([in0Sub88577,in1Sub88577])
Res10324 = keras.layers.Reshape((3, 9), name = 'Res10324', )(Sub88577)
Glo8075 = keras.layers.GlobalAveragePooling1D(name = 'Glo8075', )(Res10324)
Glo71209 = keras.layers.GlobalMaxPool3D(name = 'Glo71209', )(in0Glo71209)
Con30345 = keras.layers.Concatenate(axis=1, name = 'Con30345', )([Glo71209,in0Con30345])
Min15404 = keras.layers.Minimum(name = 'Min15404', )([Glo8075,Con30345])
model = tf.keras.models.Model(inputs=[in0Sub88577,in1Sub88577,in0Glo71209,in0Con30345], outputs=Min15404)
in0Sub88577 = tf.constant([[[[0.9205, 0.7083, 0.1258], [0.9275, 0.2993, 0.9149], [0.9886, 0.0308, 0.6008]], [[0.3173, 0.8267, 0.1615], [0.297, 0.1692, 0.3481], [0.0857, 0.4808, 0.872]], [[0.618, 0.0541, 0.6304], [0.8707, 0.9007, 0.4023], [0.3594, 0.0791, 0.4614]]]])
in1Sub88577 = tf.constant([[[[0.759, 0.8105, 0.8934], [0.4865, 0.3377, 0.8351], [0.7272, 0.3544, 0.3657]], [[0.9996, 0.5258, 0.4571], [0.4305, 0.7601, 0.9078], [0.6556, 0.4155, 0.8556]], [[0.4156, 0.2387, 0.7404], [0.0824, 0.8608, 0.9441], [0.8188, 0.1354, 0.898]]]])
in0Glo71209 = tf.constant([[[[[1.2041]], [[1.0061]]]]])
in0Con30345 = tf.constant([[0.1253, 0.9578, 0.9059, 0.0648, 0.9804, 0.4719, 0.8334, 0.006]])
print (np.array2string(model.predict([in0Sub88577,in1Sub88577,in0Glo71209,in0Con30345],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Min15404.png')

LSub88577 = subtract_layer([[[[0.9205, 0.7083, 0.1258], [0.9275, 0.2993, 0.9149], [0.9886, 0.0308, 0.6008]], [[0.3173, 0.8267, 0.1615], [0.297, 0.1692, 0.3481], [0.0857, 0.4808, 0.872]], [[0.618, 0.0541, 0.6304], [0.8707, 0.9007, 0.4023], [0.3594, 0.0791, 0.4614]]]], [[[[0.759, 0.8105, 0.8934], [0.4865, 0.3377, 0.8351], [0.7272, 0.3544, 0.3657]], [[0.9996, 0.5258, 0.4571], [0.4305, 0.7601, 0.9078], [0.6556, 0.4155, 0.8556]], [[0.4156, 0.2387, 0.7404], [0.0824, 0.8608, 0.9441], [0.8188, 0.1354, 0.898]]]], Sub88577), 
LRes10324 = reshape_layer(Sub88577, [3, 9], Res10324), 
LGlo8075 = global_average_pooling1D_layer(Res10324, Glo8075), 
LGlo71209 = global_max_pool3D_layer([[[[[1.2041]], [[1.0061]]]]], Glo71209), 
LCon30345 = concatenate_layer([Glo71209,[[0.1253, 0.9578, 0.9059, 0.0648, 0.9804, 0.4719, 0.8334, 0.006]]], 1, Con30345), 
LMin15404 = minimum_layer([Glo8075,Con30345], Min15404), 
exec_layers([LSub88577,LRes10324,LGlo8075,LGlo71209,LCon30345,LMin15404],["Sub88577","Res10324","Glo8075","Glo71209","Con30345","Min15404"],Min15404,"Min15404")

Actual (Unparsed): [[-0.1061334, 0.0047000, -0.3910667, 0.3652667, -0.1964667, -0.3405667, -0.2559666, -0.1048667, -0.0617000]]

Expected (Unparsed): [[-0.10613333333333336,0.0047,-0.3910666666666667,0.3652666666666667,-0.19646666666666668,-0.3405666666666667,-0.2559666666666666,-0.10486666666666666,-0.06170000000000003]]

Actual:   [[-0.1061, 0.0047, -0.391, 0.3653, -0.1964, -0.3405, -0.2559, -0.1048, -0.0617]]

Expected: [[-0.1061, 0.0047, -0.391, 0.3653, -0.1964, -0.3405, -0.2559, -0.1048, -0.0617]]