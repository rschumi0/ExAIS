import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Mul15844 = tf.keras.layers.Input(shape=([1, 1, 1, 1]))
in1Mul15844 = tf.keras.layers.Input(shape=([1, 1, 1, 1]))
in0ReL64599 = tf.keras.layers.Input(shape=([1, 1, 1]))
in0Con86553 = tf.keras.layers.Input(shape=([1, 1, 1]))
in0Dep1620 = tf.keras.layers.Input(shape=([2, 1, 2]))

Mul15844 = keras.layers.Multiply(name = 'Mul15844', )([in0Mul15844,in1Mul15844])
Res35189 = keras.layers.Reshape((1, 1, 1), name = 'Res35189', )(Mul15844)
Dep90875 = keras.layers.DepthwiseConv2D((1, 1),strides=(1, 1), padding='valid', name = 'Dep90875', )(Res35189)
ReL64599 = keras.layers.ReLU(max_value=3.417759671649676, negative_slope=5.085469365189519, threshold=4.6361633382230405, name = 'ReL64599', input_shape=(1, 1, 1))(in0ReL64599)
Ave39281 = keras.layers.Average(name = 'Ave39281', )([Dep90875,ReL64599])
Con86553 = keras.layers.Concatenate(axis=3, name = 'Con86553', )([Ave39281,in0Con86553])
Dep1620 = keras.layers.DepthwiseConv2D((2, 1),strides=(2, 2), padding='valid', name = 'Dep1620', )(in0Dep1620)
Con51257 = keras.layers.Conv2D(2, (1, 1),strides=(1, 1), padding='valid', dilation_rate=(1, 1), name = 'Con51257', )(Dep1620)
Min20266 = keras.layers.Minimum(name = 'Min20266', )([Con86553,Con51257])
model = tf.keras.models.Model(inputs=[in0Mul15844,in1Mul15844,in0ReL64599,in0Con86553,in0Dep1620], outputs=Min20266)
w = model.get_layer('Dep90875').get_weights() 
w[0] = np.array([[[[0.9559]]]])
w[1] = np.array([0])
model.get_layer('Dep90875').set_weights(w) 
w = model.get_layer('Dep1620').get_weights() 
w[0] = np.array([[[[0.5116], [0.0301]]], [[[0.665], [0.4072]]]])
w[1] = np.array([0, 0])
model.get_layer('Dep1620').set_weights(w) 
w = model.get_layer('Con51257').get_weights() 
w[0] = np.array([[[[0.3922, 0.3674], [0.654, 0.3212]]]])
w[1] = np.array([0, 0])
model.get_layer('Con51257').set_weights(w) 
in0Mul15844 = tf.constant([[[[[0.7569]]]]])
in1Mul15844 = tf.constant([[[[[0.4137]]]]])
in0ReL64599 = tf.constant([[[[0.6085]]]])
in0Con86553 = tf.constant([[[[0.5429]]]])
in0Dep1620 = tf.constant([[[[0.684, 0.7748]], [[0.5638, 0.877]]]])
print (np.array2string(model.predict([in0Mul15844,in1Mul15844,in0ReL64599,in0Con86553,in0Dep1620],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Min20266.png')

LMul15844 = multiply_layer([[[[[[0.7569]]]]], [[[[[0.4137]]]]]], Mul15844), 
LRes35189 = reshape_layer(Mul15844, [1, 1, 1], Res35189), 
LDep90875 = depthwise_conv2D_layer(Res35189, 1, 1,[[[[0.9559]]]],[0], 1, 1, false, Dep90875), 
LReL64599 = relu_layer([[[[0.6085]]]], 3.417759671649676, 5.085469365189519, 4.6361633382230405, ReL64599), 
LAve39281 = average_layer([Dep90875,ReL64599], Ave39281), 
LCon86553 = concatenate_layer([Ave39281,[[[[0.5429]]]]], 3, Con86553), 
LDep1620 = depthwise_conv2D_layer([[[[0.684, 0.7748]], [[0.5638, 0.877]]]], 2, 1,[[[[0.5116], [0.0301]]], [[[0.665], [0.4072]]]],[0, 0], 2, 2, false, Dep1620), 
LCon51257 = conv2D_layer(Dep1620, 1, 1,[[[[0.3922, 0.3674], [0.654, 0.3212]]]],[0, 0], 1, 1, false, 1, 1, Con51257), 
LMin20266 = minimum_layer([Con86553,Con51257], Min20266), 
exec_layers([LMul15844,LRes35189,LDep90875,LReL64599,LAve39281,LCon86553,LDep1620,LCon51257,LMin20266],["Mul15844","Res35189","Dep90875","ReL64599","Ave39281","Con86553","Dep1620","Con51257","Min20266"],Min20266,"Min20266")

Actual (Unparsed): [[[[-10.0916190, 0.3885101]]]]

Expected (Unparsed): [[[[-10.091619001051614,0.38851008301600004]]]]

Actual:   [[[[-10.0916, 0.3886]]]]

Expected: [[[[-10.0916, 0.3886]]]]