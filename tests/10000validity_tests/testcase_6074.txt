import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Mul60894 = tf.keras.layers.Input(shape=([2, 2]))
in1Mul60894 = tf.keras.layers.Input(shape=([2, 2]))

Mul60894 = keras.layers.Multiply(name = 'Mul60894', )([in0Mul60894,in1Mul60894])
Thr61024 = keras.layers.ThresholdedReLU(theta=2.3843760922259905, name = 'Thr61024', )(Mul60894)
model = tf.keras.models.Model(inputs=[in0Mul60894,in1Mul60894], outputs=Thr61024)
in0Mul60894 = tf.constant([[[0.9138, 0.6097], [0.4963, 0.0932]]])
in1Mul60894 = tf.constant([[[0.1572, 0.7531], [0.7948, 0.8129]]])
print (np.array2string(model.predict([in0Mul60894,in1Mul60894],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Thr61024.png')

LMul60894 = multiply_layer([[[[0.9138, 0.6097], [0.4963, 0.0932]]], [[[0.1572, 0.7531], [0.7948, 0.8129]]]], Mul60894), 
LThr61024 = thresholded_relu_layer(Mul60894, 2.3843760922259905, Thr61024), 
exec_layers([LMul60894,LThr61024],["Mul60894","Thr61024"],Thr61024,"Thr61024")

Actual (Unparsed): [[[0.0000000, 0.0000000], [0.0000000, 0.0000000]]]

Expected (Unparsed): [[[0,0],[0,0]]]

Actual:   [[[0, 0], [0, 0]]]

Expected: [[[0, 0], [0, 0]]]