import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Add62612 = tf.keras.layers.Input(shape=([2, 2, 2]))
in1Add62612 = tf.keras.layers.Input(shape=([2, 2, 2]))

Add62612 = keras.layers.Add(name = 'Add62612', )([in0Add62612,in1Add62612])
Res93854 = keras.layers.Reshape((2, 4), name = 'Res93854', )(Add62612)
Sim481 = keras.layers.SimpleRNN(3,name = 'Sim481', )(Res93854)
model = tf.keras.models.Model(inputs=[in0Add62612,in1Add62612], outputs=Sim481)
w = model.get_layer('Sim481').get_weights() 
w[0] = np.array([[7, 6, 10], [4, 4, 1], [8, 2, 10], [5, 4, 6]])
w[1] = np.array([[3, 10, 1], [8, 7, 6], [3, 9, 2]])
w[2] = np.array([7, 3, 3])
model.get_layer('Sim481').set_weights(w) 
in0Add62612 = tf.constant([[[[0.3901, 0.4252], [0.0627, 0.3364]], [[0.0918, 0.0749], [0.8548, 0.1189]]]])
in1Add62612 = tf.constant([[[[0.4464, 0.291], [0.7077, 0.0725]], [[0.7926, 0.3867], [0.2155, 0.0553]]]])
print (np.array2string(model.predict([in0Add62612,in1Add62612],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Sim481.png')

LAdd62612 = add_layer([[[[[0.3901, 0.4252], [0.0627, 0.3364]], [[0.0918, 0.0749], [0.8548, 0.1189]]]], [[[[0.4464, 0.291], [0.7077, 0.0725]], [[0.7926, 0.3867], [0.2155, 0.0553]]]]], Add62612), 
LRes93854 = reshape_layer(Add62612, [2, 4], Res93854), 
LSim481 = simple_rnn_layer(Res93854,[[7, 6, 10], [4, 4, 1], [8, 2, 10], [5, 4, 6]],[[3, 10, 1], [8, 7, 6], [3, 9, 2]],[7, 3, 3], Sim481), 
exec_layers([LAdd62612,LRes93854,LSim481],["Add62612","Res93854","Sim481"],Sim481,"Sim481")

Actual (Unparsed): [[1.0000000, 1.0000000, 1.0000000]]

Expected (Unparsed): [[1.0,1.0,1.0]]

Actual:   [[1, 1, 1]]

Expected: [[1, 1, 1]]