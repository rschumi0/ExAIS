import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Max25100 = tf.keras.layers.Input(shape=([2, 1, 1, 1]))
in1Max25100 = tf.keras.layers.Input(shape=([2, 1, 1, 1]))

Max25100 = keras.layers.Maximum(name = 'Max25100', )([in0Max25100,in1Max25100])
Res61923 = keras.layers.Reshape((2, 1, 1), name = 'Res61923', )(Max25100)
Cro34679 = keras.layers.Cropping2D(cropping=((0, 0), (0, 0)), name = 'Cro34679', )(Res61923)
Res92749 = keras.layers.Reshape((2, 1), name = 'Res92749', )(Cro34679)
Con80051 = keras.layers.Conv1D(3, (1),strides=(1), padding='same', dilation_rate=(1), name = 'Con80051', )(Res92749)
model = tf.keras.models.Model(inputs=[in0Max25100,in1Max25100], outputs=Con80051)
w = model.get_layer('Con80051').get_weights() 
w[0] = np.array([[[0.4759, 0.4178, 0.4426]]])
w[1] = np.array([0, 0, 0])
model.get_layer('Con80051').set_weights(w) 
in0Max25100 = tf.constant([[[[[0.1006]]], [[[0.5474]]]]])
in1Max25100 = tf.constant([[[[[0.9431]]], [[[0.331]]]]])
print (np.array2string(model.predict([in0Max25100,in1Max25100],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Con80051.png')

LMax25100 = maximum_layer([[[[[[0.1006]]], [[[0.5474]]]]], [[[[[0.9431]]], [[[0.331]]]]]], Max25100), 
LRes61923 = reshape_layer(Max25100, [2, 1, 1], Res61923), 
LCro34679 = cropping2D_layer(Res61923, 0, 0, 0, 0, Cro34679), 
LRes92749 = reshape_layer(Cro34679, [2, 1], Res92749), 
LCon80051 = conv1D_layer(Res92749, 1,[[[0.4759, 0.4178, 0.4426]]],[0, 0, 0], 1, true, 1, Con80051), 
exec_layers([LMax25100,LRes61923,LCro34679,LRes92749,LCon80051],["Max25100","Res61923","Cro34679","Res92749","Con80051"],Con80051,"Con80051")

Actual (Unparsed): [[[0.4488213, 0.3940272, 0.4174160], [0.2605077, 0.2287037, 0.2422792]]]

Expected (Unparsed): [[[0.44882129000000004,0.39402718000000003,0.41741606000000003],[0.26050766,0.22870372,0.24227924]]]

Actual:   [[[0.4489, 0.3941, 0.4175], [0.2606, 0.2288, 0.2423]]]

Expected: [[[0.4489, 0.3941, 0.4175], [0.2606, 0.2288, 0.2423]]]