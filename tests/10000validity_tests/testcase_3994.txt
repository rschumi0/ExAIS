import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Min15748 = tf.keras.layers.Input(shape=([2, 2, 2]))
in1Min15748 = tf.keras.layers.Input(shape=([2, 2, 2]))
in0Mul90998 = tf.keras.layers.Input(shape=([2, 1]))
in1Mul90998 = tf.keras.layers.Input(shape=([2, 1]))
in0Con85563 = tf.keras.layers.Input(shape=([2, 3]))

Min15748 = keras.layers.Minimum(name = 'Min15748', )([in0Min15748,in1Min15748])
Res69909 = keras.layers.Reshape((2, 4), name = 'Res69909', )(Min15748)
Mul90998 = keras.layers.Multiply(name = 'Mul90998', )([in0Mul90998,in1Mul90998])
Con85563 = keras.layers.Concatenate(axis=2, name = 'Con85563', )([Mul90998,in0Con85563])
Max30534 = keras.layers.Maximum(name = 'Max30534', )([Res69909,Con85563])
Den56574 = keras.layers.Dense(4,name = 'Den56574', )(Max30534)
model = tf.keras.models.Model(inputs=[in0Min15748,in1Min15748,in0Mul90998,in1Mul90998,in0Con85563], outputs=Den56574)
w = model.get_layer('Den56574').get_weights() 
w[0] = np.array([[0.7391, 0.7443, 0.4963, 0.3498], [0.414, 0.5857, 0.1932, 0.2434], [0.6462, 0.3444, 0.8068, 0.8448], [0.482, 0.909, 0.0264, 0.6742]])
w[1] = np.array([0.4869, 0.7025, 0.3236, 0.8641])
model.get_layer('Den56574').set_weights(w) 
in0Min15748 = tf.constant([[[[0.7852, 0.465], [0.856, 0.3765]], [[0.0164, 0.1061], [0.1845, 0.7705]]]])
in1Min15748 = tf.constant([[[[0.888, 0.6491], [0.1048, 0.4156]], [[0.0232, 0.0218], [0.9378, 0.0476]]]])
in0Mul90998 = tf.constant([[[0.8808], [0.2667]]])
in1Mul90998 = tf.constant([[[0.4252], [0.2839]]])
in0Con85563 = tf.constant([[[0.6201, 0.1021, 0.2267], [0.5391, 0.9772, 0.0637]]])
print (np.array2string(model.predict([in0Min15748,in1Min15748,in0Mul90998,in1Mul90998,in0Con85563],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Den56574.png')

LMin15748 = minimum_layer([[[[[0.7852, 0.465], [0.856, 0.3765]], [[0.0164, 0.1061], [0.1845, 0.7705]]]], [[[[0.888, 0.6491], [0.1048, 0.4156]], [[0.0232, 0.0218], [0.9378, 0.0476]]]]], Min15748), 
LRes69909 = reshape_layer(Min15748, [2, 4], Res69909), 
LMul90998 = multiply_layer([[[[0.8808], [0.2667]]], [[[0.4252], [0.2839]]]], Mul90998), 
LCon85563 = concatenate_layer([Mul90998,[[[0.6201, 0.1021, 0.2267], [0.5391, 0.9772, 0.0637]]]], 2, Con85563), 
LMax30534 = maximum_layer([Res69909,Con85563], Max30534), 
LDen56574 = dense_layer(Max30534, [[0.7391, 0.7443, 0.4963, 0.3498], [0.414, 0.5857, 0.1932, 0.2434], [0.6462, 0.3444, 0.8068, 0.8448], [0.482, 0.909, 0.0264, 0.6742]],[0.4869, 0.7025, 0.3236, 0.8641], Den56574), 
exec_layers([LMin15748,LRes69909,LMul90998,LCon85563,LMax30534,LDen56574],["Min15748","Res69909","Mul90998","Con85563","Max30534","Den56574"],Den56574,"Den56574")

Actual (Unparsed): [[[1.5731575, 2.0284486, 0.9275903, 1.6320667], [1.4282192, 1.4690573, 1.2554186, 1.8902875]]]

Expected (Unparsed): [[[1.5731574799999999,2.0284485500000002,0.9275903200000001,1.6320666400000001],[1.428219231683,1.469057365559,1.255418675319,1.8902875422739998]]]

Actual:   [[[1.5732, 2.0285, 0.9276, 1.6321], [1.4283, 1.4691, 1.2555, 1.8903]]]

Expected: [[[1.5732, 2.0285, 0.9276, 1.6321], [1.4283, 1.4691, 1.2555, 1.8903]]]