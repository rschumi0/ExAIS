import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Ave2718 = tf.keras.layers.Input(shape=([1, 1, 2, 1]))
in1Ave2718 = tf.keras.layers.Input(shape=([1, 1, 2, 1]))

Ave2718 = keras.layers.Average(name = 'Ave2718', )([in0Ave2718,in1Ave2718])
Res73017 = keras.layers.Reshape((1, 1, 2), name = 'Res73017', )(Ave2718)
Res78657 = keras.layers.Reshape((1, 2), name = 'Res78657', )(Res73017)
Up_18775 = keras.layers.UpSampling1D(size=(2), name = 'Up_18775', )(Res78657)
model = tf.keras.models.Model(inputs=[in0Ave2718,in1Ave2718], outputs=Up_18775)
in0Ave2718 = tf.constant([[[[[0.5353], [0.8643]]]]])
in1Ave2718 = tf.constant([[[[[0.2693], [0.158]]]]])
print (np.array2string(model.predict([in0Ave2718,in1Ave2718],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Up_18775.png')

LAve2718 = average_layer([[[[[[0.5353], [0.8643]]]]], [[[[[0.2693], [0.158]]]]]], Ave2718), 
LRes73017 = reshape_layer(Ave2718, [1, 1, 2], Res73017), 
LRes78657 = reshape_layer(Res73017, [1, 2], Res78657), 
LUp_18775 = up_sampling1D_layer(Res78657, 2, Up_18775), 
exec_layers([LAve2718,LRes73017,LRes78657,LUp_18775],["Ave2718","Res73017","Res78657","Up_18775"],Up_18775,"Up_18775")

Actual (Unparsed): [[[0.4023000, 0.5111500], [0.4023000, 0.5111500]]]

Expected (Unparsed): [[[0.4023,0.51115],[0.4023,0.51115]]]

Actual:   [[[0.4023, 0.5112], [0.4023, 0.5112]]]

Expected: [[[0.4023, 0.5112], [0.4023, 0.5112]]]