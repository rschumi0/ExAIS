import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Sep49118 = tf.keras.layers.Input(shape=([2, 2, 1]))
in0Con44600 = tf.keras.layers.Input(shape=([4, 3, 8]))
in0GRU51553 = tf.keras.layers.Input(shape=([3, 1]))
in0Con21647 = tf.keras.layers.Input(shape=([4, 3, 9]))
in0Sub50320 = tf.keras.layers.Input(shape=([2, 2, 2, 2]))
in1Sub50320 = tf.keras.layers.Input(shape=([2, 2, 2, 2]))
in0Con18192 = tf.keras.layers.Input(shape=([4, 3, 9]))
in0Zer33226 = tf.keras.layers.Input(shape=([2, 1, 3, 2]))
in0Sub53125 = tf.keras.layers.Input(shape=([2, 3, 3]))
in1Sub53125 = tf.keras.layers.Input(shape=([2, 3, 3]))
in0Con20637 = tf.keras.layers.Input(shape=([4, 3, 7]))

Sep49118 = keras.layers.SeparableConv2D(2, (1, 1),strides=(2, 2), padding='same', name = 'Sep49118', )(in0Sep49118)
Zer51306 = keras.layers.ZeroPadding2D(padding=((3, 0), (2, 0)), name = 'Zer51306', )(Sep49118)
Con44600 = keras.layers.Concatenate(axis=3, name = 'Con44600', )([Zer51306,in0Con44600])
GRU51553 = keras.layers.GRU(3,reset_after=False, recurrent_activation='sigmoid', name = 'GRU51553', )(in0GRU51553)
Res8446 = keras.layers.Reshape((3, 1), name = 'Res8446', )(GRU51553)
Res57577 = keras.layers.Reshape((3, 1, 1), name = 'Res57577', )(Res8446)
Zer21319 = keras.layers.ZeroPadding2D(padding=((1, 0), (2, 0)), name = 'Zer21319', )(Res57577)
Con21647 = keras.layers.Concatenate(axis=3, name = 'Con21647', )([Zer21319,in0Con21647])
Sub50320 = keras.layers.Subtract(name = 'Sub50320', )([in0Sub50320,in1Sub50320])
Glo85359 = keras.layers.GlobalMaxPool3D(name = 'Glo85359', )(Sub50320)
Res55928 = keras.layers.Reshape((2, 1), name = 'Res55928', )(Glo85359)
Res93288 = keras.layers.Reshape((2, 1, 1), name = 'Res93288', )(Res55928)
Zer47365 = keras.layers.ZeroPadding2D(padding=((2, 0), (2, 0)), name = 'Zer47365', )(Res93288)
Con18192 = keras.layers.Concatenate(axis=3, name = 'Con18192', )([Zer47365,in0Con18192])
Zer33226 = keras.layers.ZeroPadding3D(padding=((1, 1), (1, 1), (1, 1)), name = 'Zer33226', )(in0Zer33226)
Res6878 = keras.layers.Reshape((4, 3, 10), name = 'Res6878', )(Zer33226)
Sub53125 = keras.layers.Subtract(name = 'Sub53125', )([in0Sub53125,in1Sub53125])
Zer97589 = keras.layers.ZeroPadding2D(padding=((2, 0), (0, 0)), name = 'Zer97589', )(Sub53125)
Con20637 = keras.layers.Concatenate(axis=3, name = 'Con20637', )([Zer97589,in0Con20637])
Min37422 = keras.layers.Minimum(name = 'Min37422', )([Res6878,Con20637])
Ave66337 = keras.layers.Average(name = 'Ave66337', )([Con18192,Min37422])
Ave62319 = keras.layers.Average(name = 'Ave62319', )([Con21647,Ave66337])
Max73662 = keras.layers.Maximum(name = 'Max73662', )([Con44600,Ave62319])
model = tf.keras.models.Model(inputs=[in0Sep49118,in0Con44600,in0GRU51553,in0Con21647,in0Sub50320,in1Sub50320,in0Con18192,in0Zer33226,in0Sub53125,in1Sub53125,in0Con20637], outputs=Max73662)
w = model.get_layer('Sep49118').get_weights() 
w[0] = np.array([[[[0.789]]]])
w[1] = np.array([[[[0.8696, 0.8125]]]])
w[2] = np.array([0, 0])
model.get_layer('Sep49118').set_weights(w) 
w = model.get_layer('GRU51553').get_weights() 
w[0] = np.array([[9, 8, 8, 7, 1, 4, 9, 6, 4]])
w[1] = np.array([[4, 7, 10, 9, 5, 6, 5, 6, 5], [2, 7, 1, 8, 1, 6, 4, 7, 7], [2, 7, 3, 9, 10, 3, 1, 4, 6]])
w[2] = np.array([5, 3, 9, 10, 2, 8, 10, 6, 10])
model.get_layer('GRU51553').set_weights(w) 
in0Sep49118 = tf.constant([[[[0.2186], [0.7454]], [[0.934], [0.852]]]])
in0Con44600 = tf.constant([[[[0.3734, 0.0951, 0.2693, 0.0992, 0.6221, 0.745, 0.4905, 0.3817], [0.2156, 0.9901, 0.6569, 0.753, 0.5549, 0.4896, 0.2393, 0.2525], [0.516, 0.6654, 0.6488, 0.4438, 0.5845, 0.7578, 0.4168, 0.866]], [[0.0044, 0.5805, 0.3935, 0.3333, 0.4995, 0.7551, 0.3768, 0.9901], [0.4066, 0.3427, 0.1351, 0.0535, 0.1241, 0.9513, 0.6138, 0.7298], [0.6253, 0.597, 0.2267, 0.8806, 0.4095, 0.8233, 0.5257, 0.6289]], [[0.6737, 0.8413, 0.213, 0.2492, 0.6735, 0.7443, 0.4178, 0.363], [0.2137, 0.1713, 0.3901, 0.6733, 0.9599, 0.1471, 0.2848, 0.2177], [0.7925, 0.2082, 0.5053, 0.3902, 0.7411, 0.3426, 0.155, 0.7904]], [[0.1287, 0.7137, 0.5054, 0.2945, 0.4355, 0.6198, 0.0324, 0.61], [0.0429, 0.6459, 0.4933, 0.978, 0.4641, 0.5083, 0.7218, 0.6136], [0.8818, 0.6599, 0.3052, 0.9416, 0.8169, 0.3308, 0.0716, 0.6731]]]])
in0GRU51553 = tf.constant([[[3], [2], [2]]])
in0Con21647 = tf.constant([[[[0.2901, 0.6679, 0.0555, 0.5442, 0.2682, 0.2664, 0.6632, 0.2186, 0.5654], [0.6654, 0.4194, 0.4365, 0.6101, 0.815, 0.4267, 0.5005, 0.873, 0.2847], [0.4954, 0.7691, 0.5095, 0.9154, 0.2128, 0.3533, 0.1491, 0.4239, 0.3625]], [[0.7175, 0.6659, 0.0296, 0.4342, 0.9196, 0.4933, 0.4776, 0.1507, 0.1025], [0.9353, 0.5385, 0.779, 0.6383, 0.9701, 0.1802, 0.4882, 0.0162, 0.2413], [0.1272, 0.1726, 0.1654, 0.2907, 0.4512, 0.9668, 0.409, 0.5953, 0.1661]], [[0.143, 0.6549, 0.6455, 0.5444, 0.209, 0.7491, 0.121, 0.0145, 0.796], [0.1384, 0.2065, 0.0499, 0.3663, 0.1199, 0.2264, 0.4224, 0.8579, 0.9928], [0.068, 0.5513, 0.1322, 0.3666, 0.3193, 0.4554, 0.4924, 0.7325, 0.6471]], [[0.9879, 0.6024, 0.1566, 0.7096, 0.6196, 0.8486, 0.6161, 0.8123, 0.0237], [0.5626, 0.0669, 0.5938, 0.1118, 0.5472, 0.8046, 0.2594, 0.9726, 0.0373], [0.0605, 0.2654, 0.3707, 0.5625, 0.0605, 0.9056, 0.0818, 0.1814, 0.9674]]]])
in0Sub50320 = tf.constant([[[[[0.0439, 0.9794], [0.9897, 0.9018]], [[0.4608, 0.5039], [0.4037, 0.165]]], [[[0.0981, 0.1066], [0.6284, 0.6653]], [[0.1347, 0.8706], [0.5971, 0.5676]]]]])
in1Sub50320 = tf.constant([[[[[0.1169, 0.3034], [0.2113, 0.6923]], [[0.0696, 0.1501], [0.6107, 0.0915]]], [[[0.4774, 0.7338], [0.2927, 0.0512]], [[0.9318, 0.6457], [0.6336, 0.0101]]]]])
in0Con18192 = tf.constant([[[[0.9044, 0.0422, 0.8093, 0.3962, 0.8894, 0.3464, 0.5064, 0.8656, 0.0786], [0.0628, 0.9517, 0.4177, 0.3117, 0.4158, 0.1326, 0.1337, 0.996, 0.6342], [0.3303, 0.8062, 0.429, 0.1315, 0.3431, 0.121, 0.0368, 0.0998, 0.7887]], [[0.127, 0.746, 0.0381, 0.442, 0.5426, 0.4136, 0.5744, 0.3538, 0.4866], [0.3535, 0.4411, 0.1852, 0.4233, 0.5197, 0.612, 0.7917, 0.4685, 0.8319], [0.4235, 0.5977, 0.7151, 0.4625, 0.9651, 0.7118, 0.9055, 0.645, 0.1484]], [[0.0497, 0.6052, 0.7055, 0.6404, 0.9578, 0.0098, 0.5752, 0.2831, 0.9582], [0.6603, 0.9962, 0.7107, 0.2727, 0.6298, 0, 0.6245, 0.7262, 0.2007], [0.0055, 0.5872, 0.4776, 0.653, 0.0631, 0.2586, 0.7823, 0.5498, 0.3534]], [[0.7114, 0.6509, 0.8251, 0.037, 0.8358, 0.8351, 0.0522, 0.9486, 0.8723], [0.0482, 0.5043, 0.4318, 0.7946, 0.7042, 0.0064, 0.8152, 0.6069, 0.7485], [0.1201, 0.6485, 0.6156, 0.3427, 0.9055, 0.8355, 0.3903, 0.2681, 0.3575]]]])
in0Zer33226 = tf.constant([[[[[1.2302, 1.9846], [1.9317, 1.9614], [1.1057, 1.3697]]], [[[1.5644, 1.1385], [1.5724, 1.6386], [1.2331, 1.1683]]]]])
in0Sub53125 = tf.constant([[[[0.0739, 0.4804, 0.5549], [0.4233, 0.2417, 0.2529], [0.453, 0.0031, 0.0873]], [[0.8848, 0.8949, 0.6317], [0.8806, 0.0743, 0.5348], [0.7696, 0.7993, 0.9619]]]])
in1Sub53125 = tf.constant([[[[0.7258, 0.4105, 0.673], [0.0738, 0.1858, 0.354], [0.7922, 0.6165, 0.3231]], [[0.2324, 0.8033, 0.1322], [0.8612, 0.2011, 0.169], [0.1179, 0.9336, 0.0015]]]])
in0Con20637 = tf.constant([[[[0.1264, 0.3878, 0.3357, 0.1887, 0.8715, 0.578, 0.5427], [0.6169, 0.0366, 0.785, 0.9353, 0.8252, 0.9029, 0.4585], [0.0751, 0.3097, 0.5315, 0.6336, 0.3022, 0.5871, 0.0158]], [[0.9663, 0.7021, 0.0783, 0.6824, 0.0031, 0.991, 0.1477], [0.5365, 0.1052, 0.7219, 0.2999, 0.5614, 0.2746, 0.3575], [0.3145, 0.7094, 0.1095, 0.3113, 0.5339, 0.5476, 0.2563]], [[0.0134, 0.6094, 0.5613, 0.0162, 0.4228, 0.7598, 0.058], [0.2177, 0.1792, 0.9971, 0.465, 0.0713, 0.7623, 0.8362], [0.5668, 0.485, 0.6118, 0.7203, 0.8926, 0.239, 0.1481]], [[0.7641, 0.0267, 0.4937, 0.0322, 0.4489, 0.0953, 0.3337], [0.8014, 0.5848, 0.0544, 0.443, 0.2294, 0.1978, 0.6987], [0.5448, 0.37, 0.9961, 0.4953, 0.9456, 0.2665, 0.7236]]]])
print (np.array2string(model.predict([in0Sep49118,in0Con44600,in0GRU51553,in0Con21647,in0Sub50320,in1Sub50320,in0Con18192,in0Zer33226,in0Sub53125,in1Sub53125,in0Con20637],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Max73662.png')

LSep49118 = separable_conv2D_layer([[[[0.2186], [0.7454]], [[0.934], [0.852]]]], 1, 1,[[[[[0.789]]]],[[[[0.8696, 0.8125]]]]],[0, 0], 2, 2, true, Sep49118), 
LZer51306 = zero_padding2D_layer(Sep49118, 3, 0, 2, 0, Zer51306), 
LCon44600 = concatenate_layer([Zer51306,[[[[0.3734, 0.0951, 0.2693, 0.0992, 0.6221, 0.745, 0.4905, 0.3817], [0.2156, 0.9901, 0.6569, 0.753, 0.5549, 0.4896, 0.2393, 0.2525], [0.516, 0.6654, 0.6488, 0.4438, 0.5845, 0.7578, 0.4168, 0.866]], [[0.0044, 0.5805, 0.3935, 0.3333, 0.4995, 0.7551, 0.3768, 0.9901], [0.4066, 0.3427, 0.1351, 0.0535, 0.1241, 0.9513, 0.6138, 0.7298], [0.6253, 0.597, 0.2267, 0.8806, 0.4095, 0.8233, 0.5257, 0.6289]], [[0.6737, 0.8413, 0.213, 0.2492, 0.6735, 0.7443, 0.4178, 0.363], [0.2137, 0.1713, 0.3901, 0.6733, 0.9599, 0.1471, 0.2848, 0.2177], [0.7925, 0.2082, 0.5053, 0.3902, 0.7411, 0.3426, 0.155, 0.7904]], [[0.1287, 0.7137, 0.5054, 0.2945, 0.4355, 0.6198, 0.0324, 0.61], [0.0429, 0.6459, 0.4933, 0.978, 0.4641, 0.5083, 0.7218, 0.6136], [0.8818, 0.6599, 0.3052, 0.9416, 0.8169, 0.3308, 0.0716, 0.6731]]]]], 3, Con44600), 
LGRU51553 = gru_layer([[[3], [2], [2]]],[[9, 8, 8, 7, 1, 4, 9, 6, 4]],[[4, 7, 10, 9, 5, 6, 5, 6, 5], [2, 7, 1, 8, 1, 6, 4, 7, 7], [2, 7, 3, 9, 10, 3, 1, 4, 6]],[5, 3, 9, 10, 2, 8, 10, 6, 10], false, GRU51553), 
LRes8446 = reshape_layer(GRU51553, [3, 1], Res8446), 
LRes57577 = reshape_layer(Res8446, [3, 1, 1], Res57577), 
LZer21319 = zero_padding2D_layer(Res57577, 1, 0, 2, 0, Zer21319), 
LCon21647 = concatenate_layer([Zer21319,[[[[0.2901, 0.6679, 0.0555, 0.5442, 0.2682, 0.2664, 0.6632, 0.2186, 0.5654], [0.6654, 0.4194, 0.4365, 0.6101, 0.815, 0.4267, 0.5005, 0.873, 0.2847], [0.4954, 0.7691, 0.5095, 0.9154, 0.2128, 0.3533, 0.1491, 0.4239, 0.3625]], [[0.7175, 0.6659, 0.0296, 0.4342, 0.9196, 0.4933, 0.4776, 0.1507, 0.1025], [0.9353, 0.5385, 0.779, 0.6383, 0.9701, 0.1802, 0.4882, 0.0162, 0.2413], [0.1272, 0.1726, 0.1654, 0.2907, 0.4512, 0.9668, 0.409, 0.5953, 0.1661]], [[0.143, 0.6549, 0.6455, 0.5444, 0.209, 0.7491, 0.121, 0.0145, 0.796], [0.1384, 0.2065, 0.0499, 0.3663, 0.1199, 0.2264, 0.4224, 0.8579, 0.9928], [0.068, 0.5513, 0.1322, 0.3666, 0.3193, 0.4554, 0.4924, 0.7325, 0.6471]], [[0.9879, 0.6024, 0.1566, 0.7096, 0.6196, 0.8486, 0.6161, 0.8123, 0.0237], [0.5626, 0.0669, 0.5938, 0.1118, 0.5472, 0.8046, 0.2594, 0.9726, 0.0373], [0.0605, 0.2654, 0.3707, 0.5625, 0.0605, 0.9056, 0.0818, 0.1814, 0.9674]]]]], 3, Con21647), 
LSub50320 = subtract_layer([[[[[0.0439, 0.9794], [0.9897, 0.9018]], [[0.4608, 0.5039], [0.4037, 0.165]]], [[[0.0981, 0.1066], [0.6284, 0.6653]], [[0.1347, 0.8706], [0.5971, 0.5676]]]]], [[[[[0.1169, 0.3034], [0.2113, 0.6923]], [[0.0696, 0.1501], [0.6107, 0.0915]]], [[[0.4774, 0.7338], [0.2927, 0.0512]], [[0.9318, 0.6457], [0.6336, 0.0101]]]]], Sub50320), 
LGlo85359 = global_max_pool3D_layer(Sub50320, Glo85359), 
LRes55928 = reshape_layer(Glo85359, [2, 1], Res55928), 
LRes93288 = reshape_layer(Res55928, [2, 1, 1], Res93288), 
LZer47365 = zero_padding2D_layer(Res93288, 2, 0, 2, 0, Zer47365), 
LCon18192 = concatenate_layer([Zer47365,[[[[0.9044, 0.0422, 0.8093, 0.3962, 0.8894, 0.3464, 0.5064, 0.8656, 0.0786], [0.0628, 0.9517, 0.4177, 0.3117, 0.4158, 0.1326, 0.1337, 0.996, 0.6342], [0.3303, 0.8062, 0.429, 0.1315, 0.3431, 0.121, 0.0368, 0.0998, 0.7887]], [[0.127, 0.746, 0.0381, 0.442, 0.5426, 0.4136, 0.5744, 0.3538, 0.4866], [0.3535, 0.4411, 0.1852, 0.4233, 0.5197, 0.612, 0.7917, 0.4685, 0.8319], [0.4235, 0.5977, 0.7151, 0.4625, 0.9651, 0.7118, 0.9055, 0.645, 0.1484]], [[0.0497, 0.6052, 0.7055, 0.6404, 0.9578, 0.0098, 0.5752, 0.2831, 0.9582], [0.6603, 0.9962, 0.7107, 0.2727, 0.6298, 0, 0.6245, 0.7262, 0.2007], [0.0055, 0.5872, 0.4776, 0.653, 0.0631, 0.2586, 0.7823, 0.5498, 0.3534]], [[0.7114, 0.6509, 0.8251, 0.037, 0.8358, 0.8351, 0.0522, 0.9486, 0.8723], [0.0482, 0.5043, 0.4318, 0.7946, 0.7042, 0.0064, 0.8152, 0.6069, 0.7485], [0.1201, 0.6485, 0.6156, 0.3427, 0.9055, 0.8355, 0.3903, 0.2681, 0.3575]]]]], 3, Con18192), 
LZer33226 = zero_padding3D_layer([[[[[1.2302, 1.9846], [1.9317, 1.9614], [1.1057, 1.3697]]], [[[1.5644, 1.1385], [1.5724, 1.6386], [1.2331, 1.1683]]]]], 1, 1, 1, 1, 1, 1, Zer33226), 
LRes6878 = reshape_layer(Zer33226, [4, 3, 10], Res6878), 
LSub53125 = subtract_layer([[[[0.0739, 0.4804, 0.5549], [0.4233, 0.2417, 0.2529], [0.453, 0.0031, 0.0873]], [[0.8848, 0.8949, 0.6317], [0.8806, 0.0743, 0.5348], [0.7696, 0.7993, 0.9619]]]], [[[[0.7258, 0.4105, 0.673], [0.0738, 0.1858, 0.354], [0.7922, 0.6165, 0.3231]], [[0.2324, 0.8033, 0.1322], [0.8612, 0.2011, 0.169], [0.1179, 0.9336, 0.0015]]]], Sub53125), 
LZer97589 = zero_padding2D_layer(Sub53125, 2, 0, 0, 0, Zer97589), 
LCon20637 = concatenate_layer([Zer97589,[[[[0.1264, 0.3878, 0.3357, 0.1887, 0.8715, 0.578, 0.5427], [0.6169, 0.0366, 0.785, 0.9353, 0.8252, 0.9029, 0.4585], [0.0751, 0.3097, 0.5315, 0.6336, 0.3022, 0.5871, 0.0158]], [[0.9663, 0.7021, 0.0783, 0.6824, 0.0031, 0.991, 0.1477], [0.5365, 0.1052, 0.7219, 0.2999, 0.5614, 0.2746, 0.3575], [0.3145, 0.7094, 0.1095, 0.3113, 0.5339, 0.5476, 0.2563]], [[0.0134, 0.6094, 0.5613, 0.0162, 0.4228, 0.7598, 0.058], [0.2177, 0.1792, 0.9971, 0.465, 0.0713, 0.7623, 0.8362], [0.5668, 0.485, 0.6118, 0.7203, 0.8926, 0.239, 0.1481]], [[0.7641, 0.0267, 0.4937, 0.0322, 0.4489, 0.0953, 0.3337], [0.8014, 0.5848, 0.0544, 0.443, 0.2294, 0.1978, 0.6987], [0.5448, 0.37, 0.9961, 0.4953, 0.9456, 0.2665, 0.7236]]]]], 3, Con20637), 
LMin37422 = minimum_layer([Res6878,Con20637], Min37422), 
LAve66337 = average_layer([Con18192,Min37422], Ave66337), 
LAve62319 = average_layer([Con21647,Ave66337], Ave62319), 
LMax73662 = maximum_layer([Con44600,Ave62319], Max73662), 
exec_layers([LSep49118,LZer51306,LCon44600,LGRU51553,LRes8446,LRes57577,LZer21319,LCon21647,LSub50320,LGlo85359,LRes55928,LRes93288,LZer47365,LCon18192,LZer33226,LRes6878,LSub53125,LZer97589,LCon20637,LMin37422,LAve66337,LAve62319,LMax73662],["Sep49118","Zer51306","Con44600","GRU51553","Res8446","Res57577","Zer21319","Con21647","Sub50320","Glo85359","Res55928","Res93288","Zer47365","Con18192","Zer33226","Res6878","Sub53125","Zer97589","Con20637","Min37422","Ave66337","Ave62319","Max73662"],Max73662,"Max73662")

Actual (Unparsed): [[[[0.0000000, 0.3711500, 0.3734000, 0.2300750, 0.3711500, 0.3564500, 0.6221000, 0.7450000, 0.4905000, 0.3817000], [0.0000000, 0.3484000, 0.4476250, 0.9901000, 0.6569000, 0.7530000, 0.5549000, 0.4896000, 0.6855000, 0.3009000], [0.0000000, 0.3302750, 0.5861000, 0.6654000, 0.6488000, 0.4438000, 0.5845000, 0.7578000, 0.4168000, 0.8660000]], [[0.0000000, 0.3905000, 0.5194500, 0.5805000, 0.3935000, 0.5954500, 0.4995000, 0.7551000, 0.3768000, 0.9901000], [0.0000000, 0.5560250, 0.4066000, 0.5699250, 0.4512750, 0.7954500, 0.3180750, 0.9513000, 0.6138000, 0.7298000], [0.0000000, 0.1694750, 0.6253000, 0.5970000, 0.2609750, 0.8806000, 0.6613500, 0.8233000, 0.5257000, 0.6289000]], [[0.0000000, 0.0839250, 0.6737000, 0.8413000, 0.4323000, 0.3439500, 0.6735000, 0.7443000, 0.4178000, 0.6375500], [0.0000000, 0.2342750, 0.3270250, 0.2570500, 0.3901000, 0.6733000, 0.9599000, 0.3851500, 0.6105000, 0.5465750], [0.1098000, 0.0000000, 0.7925000, 0.2082000, 0.5053000, 0.3902000, 0.7411000, 0.4417750, 0.5037000, 0.7904000]], [[0.0000000, 0.6718000, 0.4639250, 0.7137000, 0.5054000, 0.5187500, 0.6330750, 0.6198000, 0.6433000, 0.6100000], [0.0000000, 0.2616500, 0.1595250, 0.6459000, 0.4933000, 0.9780000, 0.4641000, 0.5083000, 0.7218000, 0.6136000], [0.1690000, 0.1401363, 0.8818000, 0.6599000, 0.3669250, 0.9416000, 0.8169000, 0.3308000, 0.1577250, 0.6731000]]]]

Expected (Unparsed): [[[[0,0.37115,0.3734,0.230075,0.37115,0.35645,0.6221,0.745,0.4905,0.3817],[0,0.3484,0.447625,0.9901,0.6569,0.753,0.5549,0.4896,0.6855,0.3009],[0,0.330275,0.5861000000000001,0.6654,0.6488,0.4438,0.5845,0.7578,0.4168,0.866]],[[0,0.3905,0.51945,0.5805,0.3935,0.59545,0.4995,0.7551,0.3768,0.9901],[0,0.556025,0.4066,0.569925,0.451275,0.79545,0.318075,0.9513,0.6138,0.7298],[1.0262513061049668e-10,0.169475,0.6253,0.597,0.260975,0.8806,0.66135,0.8233,0.5257,0.6289]],[[0,0.083925,0.6737,0.8413,0.4323,0.34395,0.6735,0.7443,0.4178,0.6375500000000001],[0,0.234275,0.327025,0.25705,0.3901,0.6733,0.9599,0.38515,0.6105,0.546575],[0.10980000560373612,0,0.7925,0.2082,0.5053,0.3902,0.7411,0.44177500000000003,0.5037,0.7904]],[[0,0.6718,0.46392500000000003,0.7137,0.5054,0.51875,0.633075,0.6198,0.6433,0.61],[0,0.26165,0.159525,0.6459,0.4933,0.978,0.4641,0.5083,0.7218,0.6136],[0.16900000001389034,0.1401362625,0.8818,0.6599,0.366925,0.9416,0.8169,0.3308,0.157725,0.6731]]]]

Actual:   [[[[0, 0.3712, 0.3734, 0.2301, 0.3712, 0.3565, 0.6221, 0.745, 0.4905, 0.3817], [0, 0.3484, 0.4477, 0.9901, 0.6569, 0.753, 0.5549, 0.4896, 0.6855, 0.3009], [0, 0.3303, 0.5861, 0.6654, 0.6488, 0.4438, 0.5845, 0.7578, 0.4168, 0.866]], [[0, 0.3905, 0.5195, 0.5805, 0.3935, 0.5955, 0.4995, 0.7551, 0.3768, 0.9901], [0, 0.5561, 0.4066, 0.57, 0.4513, 0.7955, 0.3181, 0.9513, 0.6138, 0.7298], [0, 0.1695, 0.6253, 0.597, 0.261, 0.8806, 0.6614, 0.8233, 0.5257, 0.6289]], [[0, 0.084, 0.6737, 0.8413, 0.4323, 0.344, 0.6735, 0.7443, 0.4178, 0.6376], [0, 0.2343, 0.3271, 0.2571, 0.3901, 0.6733, 0.9599, 0.3852, 0.6105, 0.5466], [0.1098, 0, 0.7925, 0.2082, 0.5053, 0.3902, 0.7411, 0.4418, 0.5037, 0.7904]], [[0, 0.6718, 0.464, 0.7137, 0.5054, 0.5188, 0.6331, 0.6198, 0.6433, 0.61], [0, 0.2617, 0.1596, 0.6459, 0.4933, 0.978, 0.4641, 0.5083, 0.7218, 0.6136], [0.169, 0.1402, 0.8818, 0.6599, 0.367, 0.9416, 0.8169, 0.3308, 0.1578, 0.6731]]]]

Expected: [[[[0, 0.3712, 0.3734, 0.2301, 0.3712, 0.3565, 0.6221, 0.745, 0.4905, 0.3817], [0, 0.3484, 0.4477, 0.9901, 0.6569, 0.753, 0.5549, 0.4896, 0.6855, 0.3009], [0, 0.3303, 0.5862, 0.6654, 0.6488, 0.4438, 0.5845, 0.7578, 0.4168, 0.866]], [[0, 0.3905, 0.5195, 0.5805, 0.3935, 0.5955, 0.4995, 0.7551, 0.3768, 0.9901], [0, 0.5561, 0.4066, 0.57, 0.4513, 0.7955, 0.3181, 0.9513, 0.6138, 0.7298], [0, 0.1695, 0.6253, 0.597, 0.261, 0.8806, 0.6614, 0.8233, 0.5257, 0.6289]], [[0, 0.084, 0.6737, 0.8413, 0.4323, 0.344, 0.6735, 0.7443, 0.4178, 0.6376], [0, 0.2343, 0.3271, 0.2571, 0.3901, 0.6733, 0.9599, 0.3852, 0.6105, 0.5466], [0.1099, 0, 0.7925, 0.2082, 0.5053, 0.3902, 0.7411, 0.4418, 0.5037, 0.7904]], [[0, 0.6718, 0.464, 0.7137, 0.5054, 0.5188, 0.6331, 0.6198, 0.6433, 0.61], [0, 0.2617, 0.1596, 0.6459, 0.4933, 0.978, 0.4641, 0.5083, 0.7218, 0.6136], [0.1691, 0.1402, 0.8818, 0.6599, 0.367, 0.9416, 0.8169, 0.3308, 0.1578, 0.6731]]]]