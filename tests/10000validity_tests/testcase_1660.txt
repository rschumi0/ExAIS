import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Con46990 = tf.keras.layers.Input(shape=([1, 1, 2]))
in0Con90266 = tf.keras.layers.Input(shape=([4, 4, 1]))
in0Glo67367 = tf.keras.layers.Input(shape=([2, 2, 1]))
in0Con87456 = tf.keras.layers.Input(shape=([4, 4, 1]))
in0Sub11622 = tf.keras.layers.Input(shape=([2, 2, 2]))
in1Sub11622 = tf.keras.layers.Input(shape=([2, 2, 2]))

Con46990 = keras.layers.Conv2DTranspose(2, (1, 1),strides=(1, 1), padding='same', name = 'Con46990', )(in0Con46990)
Glo55799 = keras.layers.GlobalMaxPool2D(name = 'Glo55799', )(Con46990)
Res53895 = keras.layers.Reshape((2, 1), name = 'Res53895', )(Glo55799)
Res3682 = keras.layers.Reshape((2, 1, 1), name = 'Res3682', )(Res53895)
Zer61147 = keras.layers.ZeroPadding2D(padding=((2, 0), (3, 0)), name = 'Zer61147', )(Res3682)
Con90266 = keras.layers.Concatenate(axis=3, name = 'Con90266', )([Zer61147,in0Con90266])
Glo67367 = keras.layers.GlobalMaxPool2D(name = 'Glo67367', )(in0Glo67367)
Res99258 = keras.layers.Reshape((1, 1), name = 'Res99258', )(Glo67367)
Res26650 = keras.layers.Reshape((1, 1, 1), name = 'Res26650', )(Res99258)
Zer81733 = keras.layers.ZeroPadding2D(padding=((3, 0), (3, 0)), name = 'Zer81733', )(Res26650)
Con87456 = keras.layers.Concatenate(axis=3, name = 'Con87456', )([Zer81733,in0Con87456])
Sub11622 = keras.layers.Subtract(name = 'Sub11622', )([in0Sub11622,in1Sub11622])
Zer90983 = keras.layers.ZeroPadding2D(padding=((1, 1), (1, 1)), name = 'Zer90983', )(Sub11622)
Mul60639 = keras.layers.Multiply(name = 'Mul60639', )([Con87456,Zer90983])
Sub67626 = keras.layers.Subtract(name = 'Sub67626', )([Con90266,Mul60639])
model = tf.keras.models.Model(inputs=[in0Con46990,in0Con90266,in0Glo67367,in0Con87456,in0Sub11622,in1Sub11622], outputs=Sub67626)
w = model.get_layer('Con46990').get_weights() 
w[0] = np.array([[[[0.1744, 0.8805], [0.0013, 0.626]]]])
w[1] = np.array([0, 0])
model.get_layer('Con46990').set_weights(w) 
in0Con46990 = tf.constant([[[[0.0477, 0.411]]]])
in0Con90266 = tf.constant([[[[0.2484], [0.2338], [0.5849], [0.5582]], [[0.2347], [0.1121], [0.8831], [0.413]], [[0.9212], [0.6715], [0.9864], [0.0369]], [[0.6223], [0.3956], [0.5927], [0.513]]]])
in0Glo67367 = tf.constant([[[[1.5677], [1.3504]], [[1.6942], [1.1626]]]])
in0Con87456 = tf.constant([[[[0.4582], [0.5925], [0.0258], [0.4462]], [[0.7659], [0.9687], [0.0206], [0.6333]], [[0.1878], [0.9692], [0.1547], [0.6342]], [[0.2294], [0.4256], [0.9769], [0.6437]]]])
in0Sub11622 = tf.constant([[[[0.6569, 0.1089], [0.7149, 0.6442]], [[0.9702, 0.9111], [0.4618, 0.083]]]])
in1Sub11622 = tf.constant([[[[0.2569, 0.8684], [0.5111, 0.6058]], [[0.5136, 0.7913], [0.7275, 0.4333]]]])
print (np.array2string(model.predict([in0Con46990,in0Con90266,in0Glo67367,in0Con87456,in0Sub11622,in1Sub11622],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Sub67626.png')

LCon46990 = conv2D_transpose_layer([[[[0.0477, 0.411]]]], 1, 1,[[[[0.1744, 0.8805], [0.0013, 0.626]]]],[0, 0], 1, 1, true, Con46990), 
LGlo55799 = global_max_pool2D_layer(Con46990, Glo55799), 
LRes53895 = reshape_layer(Glo55799, [2, 1], Res53895), 
LRes3682 = reshape_layer(Res53895, [2, 1, 1], Res3682), 
LZer61147 = zero_padding2D_layer(Res3682, 2, 0, 3, 0, Zer61147), 
LCon90266 = concatenate_layer([Zer61147,[[[[0.2484], [0.2338], [0.5849], [0.5582]], [[0.2347], [0.1121], [0.8831], [0.413]], [[0.9212], [0.6715], [0.9864], [0.0369]], [[0.6223], [0.3956], [0.5927], [0.513]]]]], 3, Con90266), 
LGlo67367 = global_max_pool2D_layer([[[[1.5677], [1.3504]], [[1.6942], [1.1626]]]], Glo67367), 
LRes99258 = reshape_layer(Glo67367, [1, 1], Res99258), 
LRes26650 = reshape_layer(Res99258, [1, 1, 1], Res26650), 
LZer81733 = zero_padding2D_layer(Res26650, 3, 0, 3, 0, Zer81733), 
LCon87456 = concatenate_layer([Zer81733,[[[[0.4582], [0.5925], [0.0258], [0.4462]], [[0.7659], [0.9687], [0.0206], [0.6333]], [[0.1878], [0.9692], [0.1547], [0.6342]], [[0.2294], [0.4256], [0.9769], [0.6437]]]]], 3, Con87456), 
LSub11622 = subtract_layer([[[[0.6569, 0.1089], [0.7149, 0.6442]], [[0.9702, 0.9111], [0.4618, 0.083]]]], [[[[0.2569, 0.8684], [0.5111, 0.6058]], [[0.5136, 0.7913], [0.7275, 0.4333]]]], Sub11622), 
LZer90983 = zero_padding2D_layer(Sub11622, 1, 1, 1, 1, Zer90983), 
LMul60639 = multiply_layer([Con87456,Zer90983], Mul60639), 
LSub67626 = subtract_layer(Con90266,Mul60639, Sub67626), 
exec_layers([LCon46990,LGlo55799,LRes53895,LRes3682,LZer61147,LCon90266,LGlo67367,LRes99258,LRes26650,LZer81733,LCon87456,LSub11622,LZer90983,LMul60639,LSub67626],["Con46990","Glo55799","Res53895","Res3682","Zer61147","Con90266","Glo67367","Res99258","Res26650","Zer81733","Con87456","Sub11622","Zer90983","Mul60639","Sub67626"],Sub67626,"Sub67626")

Actual (Unparsed): [[[[0.0000000, 0.2484000], [0.0000000, 0.2338000], [0.0000000, 0.5849000], [0.0000000, 0.5582000]], [[0.0000000, 0.2347000], [0.0000000, 0.8478276], [0.0000000, 0.8823089], [0.0000000, 0.4130000]], [[0.0000000, 0.9212000], [0.0000000, 0.5553899], [0.0000000, 1.0405914], [0.3702044, 0.0369000]], [[0.0000000, 0.6223000], [0.0000000, 0.3956000], [0.0000000, 0.5927000], [0.2573480, 0.5130000]]]]

Expected (Unparsed): [[[[0,0.2484],[0,0.2338],[0,0.5849],[0,0.5582]],[[0,0.2347],[0.0,0.8478276499999999],[0.0,0.88230896],[0,0.413]],[[0,0.9212],[0.0,0.5553898399999999],[0.0,1.04059141],[0.37020438,0.0369]],[[0,0.6223],[0,0.3956],[0,0.5927],[0.25734800999999996,0.513]]]]

Actual:   [[[[0, 0.2484], [0, 0.2338], [0, 0.5849], [0, 0.5582]], [[0, 0.2347], [0, 0.8479], [0, 0.8824], [0, 0.413]], [[0, 0.9212], [0, 0.5554], [0, 1.0406], [0.3703, 0.0369]], [[0, 0.6223], [0, 0.3956], [0, 0.5927], [0.2574, 0.513]]]]

Expected: [[[[0, 0.2484], [0, 0.2338], [0, 0.5849], [0, 0.5582]], [[0, 0.2347], [0, 0.8479], [0, 0.8824], [0, 0.413]], [[0, 0.9212], [0, 0.5554], [0, 1.0406], [0.3703, 0.0369]], [[0, 0.6223], [0, 0.3956], [0, 0.5927], [0.2574, 0.513]]]]