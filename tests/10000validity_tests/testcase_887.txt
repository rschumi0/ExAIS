import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Zer97625 = tf.keras.layers.Input(shape=([1, 2, 1]))
in0Ave38499 = tf.keras.layers.Input(shape=([1, 1]))
in1Ave38499 = tf.keras.layers.Input(shape=([1, 1]))
in0Con13224 = tf.keras.layers.Input(shape=([11]))
in0Add85668 = tf.keras.layers.Input(shape=([1, 2, 1, 1]))
in1Add85668 = tf.keras.layers.Input(shape=([1, 2, 1, 1]))

Zer97625 = keras.layers.ZeroPadding2D(padding=((1, 1), (1, 1)), name = 'Zer97625', )(in0Zer97625)
Res61867 = keras.layers.Reshape((3, 4), name = 'Res61867', )(Zer97625)
Sof72534 = keras.layers.Softmax(axis=1, name = 'Sof72534', )(Res61867)
Fla82904 = keras.layers.Flatten(name = 'Fla82904', )(Sof72534)
Ave38499 = keras.layers.Average(name = 'Ave38499', )([in0Ave38499,in1Ave38499])
Sim38084 = keras.layers.SimpleRNN(1,name = 'Sim38084', )(Ave38499)
Con13224 = keras.layers.Concatenate(axis=1, name = 'Con13224', )([Sim38084,in0Con13224])
Mul58210 = keras.layers.Multiply(name = 'Mul58210', )([Fla82904,Con13224])
Res51418 = keras.layers.Reshape((12, 1), name = 'Res51418', )(Mul58210)
Res28435 = keras.layers.Reshape((12, 1, 1), name = 'Res28435', )(Res51418)
Res56167 = keras.layers.Reshape((12, 1, 1, 1), name = 'Res56167', )(Res28435)
Zer47466 = keras.layers.ZeroPadding3D(padding=((0, 0), (2, 0), (0, 0)), name = 'Zer47466', )(Res56167)
Add85668 = keras.layers.Add(name = 'Add85668', )([in0Add85668,in1Add85668])
Zer5954 = keras.layers.ZeroPadding3D(padding=((11, 0), (1, 0), (0, 0)), name = 'Zer5954', )(Add85668)
Ave74698 = keras.layers.Average(name = 'Ave74698', )([Zer47466,Zer5954])
model = tf.keras.models.Model(inputs=[in0Zer97625,in0Ave38499,in1Ave38499,in0Con13224,in0Add85668,in1Add85668], outputs=Ave74698)
w = model.get_layer('Sim38084').get_weights() 
w[0] = np.array([[5]])
w[1] = np.array([[9]])
w[2] = np.array([4])
model.get_layer('Sim38084').set_weights(w) 
in0Zer97625 = tf.constant([[[[1.7998], [1.509]]]])
in0Ave38499 = tf.constant([[[0.059]]])
in1Ave38499 = tf.constant([[[0.138]]])
in0Con13224 = tf.constant([[0.3698, 0.9665, 0.8966, 0.0708, 0.9541, 0.1562, 0.8344, 0.7604, 0.9639, 0.9647, 0.4613]])
in0Add85668 = tf.constant([[[[[0.2087]], [[0.7428]]]]])
in1Add85668 = tf.constant([[[[[0.1438]], [[0.2139]]]]])
print (np.array2string(model.predict([in0Zer97625,in0Ave38499,in1Ave38499,in0Con13224,in0Add85668,in1Add85668],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Ave74698.png')

LZer97625 = zero_padding2D_layer([[[[1.7998], [1.509]]]], 1, 1, 1, 1, Zer97625), 
LRes61867 = reshape_layer(Zer97625, [3, 4], Res61867), 
LSof72534 = softmax_layer(Res61867, 1, Sof72534), 
LFla82904 = flatten_layer(Sof72534, Fla82904), 
LAve38499 = average_layer([[[[0.059]]], [[[0.138]]]], Ave38499), 
LSim38084 = simple_rnn_layer(Ave38499,[[5]],[[9]],[4], Sim38084), 
LCon13224 = concatenate_layer([Sim38084,[[0.3698, 0.9665, 0.8966, 0.0708, 0.9541, 0.1562, 0.8344, 0.7604, 0.9639, 0.9647, 0.4613]]], 1, Con13224), 
LMul58210 = multiply_layer([Fla82904,Con13224], Mul58210), 
LRes51418 = reshape_layer(Mul58210, [12, 1], Res51418), 
LRes28435 = reshape_layer(Res51418, [12, 1, 1], Res28435), 
LRes56167 = reshape_layer(Res28435, [12, 1, 1, 1], Res56167), 
LZer47466 = zero_padding3D_layer(Res56167, 0, 0, 2, 0, 0, 0, Zer47466), 
LAdd85668 = add_layer([[[[[[0.2087]], [[0.7428]]]]], [[[[[0.1438]], [[0.2139]]]]]], Add85668), 
LZer5954 = zero_padding3D_layer(Add85668, 11, 0, 1, 0, 0, 0, Zer5954), 
LAve74698 = average_layer([Zer47466,Zer5954], Ave74698), 
exec_layers([LZer97625,LRes61867,LSof72534,LFla82904,LAve38499,LSim38084,LCon13224,LMul58210,LRes51418,LRes28435,LRes56167,LZer47466,LAdd85668,LZer5954,LAve74698],["Zer97625","Res61867","Sof72534","Fla82904","Ave38499","Sim38084","Con13224","Mul58210","Res51418","Res28435","Res56167","Zer47466","Add85668","Zer5954","Ave74698"],Ave74698,"Ave74698")

Actual (Unparsed): [[[[[0.0000000]], [[0.0000000]], [[0.1666249]]], [[[0.0000000]], [[0.0000000]], [[0.0229734]]], [[[0.0000000]], [[0.0000000]], [[0.0740930]]], [[[0.0000000]], [[0.0000000]], [[0.1494333]]], [[[0.0000000]], [[0.0000000]], [[0.0118000]]], [[[0.0000000]], [[0.0000000]], [[0.3585053]]], [[[0.0000000]], [[0.0000000]], [[0.0541511]]], [[[0.0000000]], [[0.0000000]], [[0.1390667]]], [[[0.0000000]], [[0.0000000]], [[0.1267333]]], [[[0.0000000]], [[0.0000000]], [[0.0598812]]], [[[0.0000000]], [[0.0000000]], [[0.0739550]]], [[[0.0000000]], [[0.1762500]], [[0.5552333]]]]]

Expected (Unparsed): [[[[[0]],[[0]],[[0.16662491359580195]]],[[[0]],[[0]],[[0.022973402777661234]]],[[[0]],[[0]],[[0.07409302555545814]]],[[[0]],[[0]],[[0.1494333333333333]]],[[[0]],[[0]],[[0.0118]]],[[[0]],[[0]],[[0.3585052537038042]]],[[[0]],[[0]],[[0.05415104895651824]]],[[[0]],[[0]],[[0.13906666666666667]]],[[[0]],[[0]],[[0.1267333333333333]]],[[[0]],[[0]],[[0.05988118695886334]]],[[[0]],[[0]],[[0.07395503544061094]]],[[[0]],[[0.17625000000000002]],[[0.5552333333333334]]]]]

Actual:   [[[[[0]], [[0]], [[0.1667]]], [[[0]], [[0]], [[0.023]]], [[[0]], [[0]], [[0.0741]]], [[[0]], [[0]], [[0.1495]]], [[[0]], [[0]], [[0.0118]]], [[[0]], [[0]], [[0.3586]]], [[[0]], [[0]], [[0.0542]]], [[[0]], [[0]], [[0.1391]]], [[[0]], [[0]], [[0.1268]]], [[[0]], [[0]], [[0.0599]]], [[[0]], [[0]], [[0.074]]], [[[0]], [[0.1763]], [[0.5553]]]]]

Expected: [[[[[0]], [[0]], [[0.1667]]], [[[0]], [[0]], [[0.023]]], [[[0]], [[0]], [[0.0741]]], [[[0]], [[0]], [[0.1495]]], [[[0]], [[0]], [[0.0118]]], [[[0]], [[0]], [[0.3586]]], [[[0]], [[0]], [[0.0542]]], [[[0]], [[0]], [[0.1391]]], [[[0]], [[0]], [[0.1268]]], [[[0]], [[0]], [[0.0599]]], [[[0]], [[0]], [[0.074]]], [[[0]], [[0.1763]], [[0.5553]]]]]