import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Up_89479 = tf.keras.layers.Input(shape=([3, 1]))
in0Con48154 = tf.keras.layers.Input(shape=([2, 2, 1]))
in0Ave18345 = tf.keras.layers.Input(shape=([2, 2, 2]))
in1Ave18345 = tf.keras.layers.Input(shape=([2, 2, 2]))

Up_89479 = keras.layers.UpSampling1D(size=(2), name = 'Up_89479', )(in0Up_89479)
Ave34379 = keras.layers.AveragePooling1D(pool_size=(1), strides=(3), padding='valid', name = 'Ave34379', )(Up_89479)
Res42968 = keras.layers.Reshape((2, 1, 1), name = 'Res42968', )(Ave34379)
Zer50978 = keras.layers.ZeroPadding2D(padding=((0, 0), (1, 0)), name = 'Zer50978', )(Res42968)
Con48154 = keras.layers.Concatenate(axis=3, name = 'Con48154', )([Zer50978,in0Con48154])
Ave18345 = keras.layers.Average(name = 'Ave18345', )([in0Ave18345,in1Ave18345])
Ave37077 = keras.layers.Average(name = 'Ave37077', )([Con48154,Ave18345])
Res39475 = keras.layers.Reshape((2, 4), name = 'Res39475', )(Ave37077)
Sep11837 = keras.layers.SeparableConv1D(4, (1),strides=(2), padding='valid', name = 'Sep11837', )(Res39475)
Zer50475 = keras.layers.ZeroPadding1D(padding=((1, 1)), name = 'Zer50475', )(Sep11837)
model = tf.keras.models.Model(inputs=[in0Up_89479,in0Con48154,in0Ave18345,in1Ave18345], outputs=Zer50475)
w = model.get_layer('Sep11837').get_weights() 
w[0] = np.array([[[0.6668], [0.8381], [0.3698], [0.9829]]])
w[1] = np.array([[[0.9621, 0.9369, 0.4664, 0.9769], [0.4431, 0.6246, 0.3218, 0.5867], [0.7361, 0.1141, 0.3887, 0.2284], [0.0215, 0.1019, 0.8497, 0.8615]]])
w[2] = np.array([0, 0, 0, 0])
model.get_layer('Sep11837').set_weights(w) 
in0Up_89479 = tf.constant([[[1.3184], [1.3429], [1.4168]]])
in0Con48154 = tf.constant([[[[0.2951], [0.3775]], [[0.8636], [0.2459]]]])
in0Ave18345 = tf.constant([[[[0.3475, 0.3331], [0.4271, 0.7372]], [[0.4201, 0.5841], [0.6424, 0.3868]]]])
in1Ave18345 = tf.constant([[[[0.6283, 0.5374], [0.6205, 0.717]], [[0.832, 0.8136], [0.9744, 0.6866]]]])
print (np.array2string(model.predict([in0Up_89479,in0Con48154,in0Ave18345,in1Ave18345],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Zer50475.png')

LUp_89479 = up_sampling1D_layer([[[1.3184], [1.3429], [1.4168]]], 2, Up_89479), 
LAve34379 = average_pooling1D_layer(Up_89479, 1, 3, false, Ave34379), 
LRes42968 = reshape_layer(Ave34379, [2, 1, 1], Res42968), 
LZer50978 = zero_padding2D_layer(Res42968, 0, 0, 1, 0, Zer50978), 
LCon48154 = concatenate_layer([Zer50978,[[[[0.2951], [0.3775]], [[0.8636], [0.2459]]]]], 3, Con48154), 
LAve18345 = average_layer([[[[[0.3475, 0.3331], [0.4271, 0.7372]], [[0.4201, 0.5841], [0.6424, 0.3868]]]], [[[[0.6283, 0.5374], [0.6205, 0.717]], [[0.832, 0.8136], [0.9744, 0.6866]]]]], Ave18345), 
LAve37077 = average_layer([Con48154,Ave18345], Ave37077), 
LRes39475 = reshape_layer(Ave37077, [2, 4], Res39475), 
LSep11837 = separable_conv1D_layer(Res39475, 1,[[[[0.6668], [0.8381], [0.3698], [0.9829]]],[[[0.9621, 0.9369, 0.4664, 0.9769], [0.4431, 0.6246, 0.3218, 0.5867], [0.7361, 0.1141, 0.3887, 0.2284], [0.0215, 0.1019, 0.8497, 0.8615]]]],[0, 0, 0, 0], 2, false, Sep11837), 
LZer50475 = zero_padding1D_layer(Sep11837, 1, 1, Zer50475), 
exec_layers([LUp_89479,LAve34379,LRes42968,LZer50978,LCon48154,LAve18345,LAve37077,LRes39475,LSep11837,LZer50475],["Up_89479","Ave34379","Res42968","Zer50978","Con48154","Ave18345","Ave37077","Res39475","Sep11837","Zer50475"],Zer50475,"Zer50475")

Actual (Unparsed): [[[0.0000000, 0.0000000, 0.0000000, 0.0000000], [0.5545168, 0.4377445, 0.7680198, 0.8839381], [0.0000000, 0.0000000, 0.0000000, 0.0000000]]]

Expected (Unparsed): [[[0,0,0,0],[0.55451680768825,0.4377445046255,0.7680198037904999,0.88393807466325],[0,0,0,0]]]

Actual:   [[[0, 0, 0, 0], [0.5546, 0.4378, 0.7681, 0.884], [0, 0, 0, 0]]]

Expected: [[[0, 0, 0, 0], [0.5546, 0.4378, 0.7681, 0.884], [0, 0, 0, 0]]]