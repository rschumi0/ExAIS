import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Sub82760 = tf.keras.layers.Input(shape=([3, 3, 2, 3]))
in1Sub82760 = tf.keras.layers.Input(shape=([3, 3, 2, 3]))
in0Con65875 = tf.keras.layers.Input(shape=([4, 3, 2]))
in0Mas3487 = tf.keras.layers.Input(shape=([3, 2]))

Sub82760 = keras.layers.Subtract(name = 'Sub82760', )([in0Sub82760,in1Sub82760])
Res42581 = keras.layers.Reshape((3, 3, 6), name = 'Res42581', )(Sub82760)
Res94566 = keras.layers.Reshape((3, 18), name = 'Res94566', )(Res42581)
Sep96014 = keras.layers.SeparableConv1D(2, (2),strides=(3), padding='valid', name = 'Sep96014', )(Res94566)
ReL55868 = keras.layers.ReLU(max_value=8.165070184305485, negative_slope=1.480195544278969, threshold=8.116980936140111, name = 'ReL55868', )(Sep96014)
Res58271 = keras.layers.Reshape((1, 2, 1), name = 'Res58271', )(ReL55868)
Zer62122 = keras.layers.ZeroPadding2D(padding=((3, 0), (1, 0)), name = 'Zer62122', )(Res58271)
Con65875 = keras.layers.Concatenate(axis=3, name = 'Con65875', )([Zer62122,in0Con65875])
Mas3487 = keras.layers.Masking(mask_value=1, name = 'Mas3487', )(in0Mas3487)
Res89860 = keras.layers.Reshape((3, 2, 1), name = 'Res89860', )(Mas3487)
Res26223 = keras.layers.Reshape((3, 2, 1, 1), name = 'Res26223', )(Res89860)
Con61995 = keras.layers.Conv3DTranspose(2, (3, 2, 1),strides=(1, 1, 1), padding='same', name = 'Con61995', )(Res26223)
Res34951 = keras.layers.Reshape((3, 2, 2), name = 'Res34951', )(Con61995)
Con3977 = keras.layers.Conv2DTranspose(3, (2, 2),strides=(1, 1), padding='valid', name = 'Con3977', )(Res34951)
Add60663 = keras.layers.Add(name = 'Add60663', )([Con65875,Con3977])
model = tf.keras.models.Model(inputs=[in0Sub82760,in1Sub82760,in0Con65875,in0Mas3487], outputs=Add60663)
w = model.get_layer('Sep96014').get_weights() 
w[0] = np.array([[[0.5502], [0.3078], [0.1132], [0.3858], [0.4448], [0.6449], [0.9605], [0.4261], [0.5303], [0.6081], [0.917], [0.463], [0.1403], [0.5833], [0.6514], [0.4613], [0.7076], [0.172]], [[0.0165], [0.1394], [0.0495], [0.3988], [0.203], [0.7855], [0.5973], [0.464], [0.9493], [0.5128], [0.9315], [0.4375], [0.3381], [0.49], [0.4247], [0.2368], [0.9813], [0.5895]]])
w[1] = np.array([[[0.4497, 0.3784], [0.7212, 0.7828], [0.3428, 0.9449], [0.6448, 0.7595], [0.6751, 0.0811], [0.6178, 0.7122], [0.6194, 0.913], [0.1406, 0.249], [0.4835, 0.697], [0.4346, 0.0314], [0.332, 0.4143], [0.457, 0.614], [0.6803, 0.3398], [0.3326, 0.2567], [0.4234, 0.4612], [0.5801, 0.646], [0.4458, 0.1652], [0.1252, 0.4629]]])
w[2] = np.array([0, 0])
model.get_layer('Sep96014').set_weights(w) 
w = model.get_layer('Con61995').get_weights() 
w[0] = np.array([[[[[0.3728], [0.165]]], [[[0.9367], [0.1164]]]], [[[[0.5931], [0.9031]]], [[[0.2057], [0.895]]]], [[[[0.4267], [0.2185]]], [[[0.2092], [0.0546]]]]])
w[1] = np.array([0, 0])
model.get_layer('Con61995').set_weights(w) 
w = model.get_layer('Con3977').get_weights() 
w[0] = np.array([[[[0.3749, 0.5313], [0.5859, 0.6871], [0.5677, 0.0557]], [[0.6024, 0.9495], [0.5346, 0.7634], [0.5278, 0.955]]], [[[0.8398, 0.0602], [0.3097, 0.3092], [0.2102, 0.2247]], [[0.6479, 0.7004], [0.1123, 0.2935], [0.226, 0.6092]]]])
w[1] = np.array([0, 0, 0])
model.get_layer('Con3977').set_weights(w) 
in0Sub82760 = tf.constant([[[[[0.182, 0.4129, 0.6223], [0.4476, 0.8319, 0.225]], [[0.5323, 0.6612, 0.7026], [0.1763, 0.5521, 0.8778]], [[0.0549, 0.1909, 0.9906], [0.7249, 0.9839, 0.2647]]], [[[0.0076, 0.68, 0.6595], [0.6471, 0.931, 0.1337]], [[0.2568, 0.9123, 0.2136], [0.0952, 0.0833, 0.0441]], [[0.612, 0.5501, 0.0946], [0.0396, 0.5531, 0.6956]]], [[[0.3312, 0.8207, 0.2003], [0.8864, 0.8059, 0.4385]], [[0.4318, 0.1488, 0.0236], [0.6489, 0.797, 0.546]], [[0.6278, 0.9493, 0.5337], [0.5103, 0.6295, 0.0708]]]]])
in1Sub82760 = tf.constant([[[[[0.8952, 0.4981, 0.3006], [0.7424, 0.3611, 0.9683]], [[0.0904, 0.2657, 0.7894], [0.7371, 0.8558, 0.0676]], [[0.2042, 0.2188, 0.2935], [0.9359, 0.7044, 0.9292]]], [[[0.7002, 0.0855, 0.9353], [0.8952, 0.0997, 0.549]], [[0.6645, 0.2944, 0.3276], [0.6434, 0.2709, 0.7286]], [[0.8846, 0.4249, 0.373], [0.0264, 0.2405, 0.1084]]], [[[0.3971, 0.3648, 0.7982], [0.4071, 0.6198, 0.8007]], [[0.9131, 0.6225, 0.1029], [0.0137, 0.2024, 0.1046]], [[0.9884, 0.1718, 0.8787], [0.3922, 0.8152, 0.3569]]]]])
in0Con65875 = tf.constant([[[[0.0897, 0.3731], [0.2822, 0.1126], [0.7991, 0.6278]], [[0.8723, 0.0924], [0.962, 0.5149], [0.2442, 0.1009]], [[0.2533, 0.1218], [0.7504, 0.8264], [0.0658, 0.9405]], [[0.5516, 0.5624], [0.0677, 0.1803], [0.9917, 0.2915]]]])
in0Mas3487 = tf.constant([[[1.9913, 1.9442], [1.8807, 1.9096], [1.2729, 1.875]]])
print (np.array2string(model.predict([in0Sub82760,in1Sub82760,in0Con65875,in0Mas3487],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Add60663.png')

LSub82760 = subtract_layer([[[[[0.182, 0.4129, 0.6223], [0.4476, 0.8319, 0.225]], [[0.5323, 0.6612, 0.7026], [0.1763, 0.5521, 0.8778]], [[0.0549, 0.1909, 0.9906], [0.7249, 0.9839, 0.2647]]], [[[0.0076, 0.68, 0.6595], [0.6471, 0.931, 0.1337]], [[0.2568, 0.9123, 0.2136], [0.0952, 0.0833, 0.0441]], [[0.612, 0.5501, 0.0946], [0.0396, 0.5531, 0.6956]]], [[[0.3312, 0.8207, 0.2003], [0.8864, 0.8059, 0.4385]], [[0.4318, 0.1488, 0.0236], [0.6489, 0.797, 0.546]], [[0.6278, 0.9493, 0.5337], [0.5103, 0.6295, 0.0708]]]]], [[[[[0.8952, 0.4981, 0.3006], [0.7424, 0.3611, 0.9683]], [[0.0904, 0.2657, 0.7894], [0.7371, 0.8558, 0.0676]], [[0.2042, 0.2188, 0.2935], [0.9359, 0.7044, 0.9292]]], [[[0.7002, 0.0855, 0.9353], [0.8952, 0.0997, 0.549]], [[0.6645, 0.2944, 0.3276], [0.6434, 0.2709, 0.7286]], [[0.8846, 0.4249, 0.373], [0.0264, 0.2405, 0.1084]]], [[[0.3971, 0.3648, 0.7982], [0.4071, 0.6198, 0.8007]], [[0.9131, 0.6225, 0.1029], [0.0137, 0.2024, 0.1046]], [[0.9884, 0.1718, 0.8787], [0.3922, 0.8152, 0.3569]]]]], Sub82760), 
LRes42581 = reshape_layer(Sub82760, [3, 3, 6], Res42581), 
LRes94566 = reshape_layer(Res42581, [3, 18], Res94566), 
LSep96014 = separable_conv1D_layer(Res94566, 2,[[[[0.5502], [0.3078], [0.1132], [0.3858], [0.4448], [0.6449], [0.9605], [0.4261], [0.5303], [0.6081], [0.917], [0.463], [0.1403], [0.5833], [0.6514], [0.4613], [0.7076], [0.172]], [[0.0165], [0.1394], [0.0495], [0.3988], [0.203], [0.7855], [0.5973], [0.464], [0.9493], [0.5128], [0.9315], [0.4375], [0.3381], [0.49], [0.4247], [0.2368], [0.9813], [0.5895]]],[[[0.4497, 0.3784], [0.7212, 0.7828], [0.3428, 0.9449], [0.6448, 0.7595], [0.6751, 0.0811], [0.6178, 0.7122], [0.6194, 0.913], [0.1406, 0.249], [0.4835, 0.697], [0.4346, 0.0314], [0.332, 0.4143], [0.457, 0.614], [0.6803, 0.3398], [0.3326, 0.2567], [0.4234, 0.4612], [0.5801, 0.646], [0.4458, 0.1652], [0.1252, 0.4629]]]],[0, 0], 3, false, Sep96014), 
LReL55868 = relu_layer(Sep96014, 8.165070184305485, 1.480195544278969, 8.116980936140111, ReL55868), 
LRes58271 = reshape_layer(ReL55868, [1, 2, 1], Res58271), 
LZer62122 = zero_padding2D_layer(Res58271, 3, 0, 1, 0, Zer62122), 
LCon65875 = concatenate_layer([Zer62122,[[[[0.0897, 0.3731], [0.2822, 0.1126], [0.7991, 0.6278]], [[0.8723, 0.0924], [0.962, 0.5149], [0.2442, 0.1009]], [[0.2533, 0.1218], [0.7504, 0.8264], [0.0658, 0.9405]], [[0.5516, 0.5624], [0.0677, 0.1803], [0.9917, 0.2915]]]]], 3, Con65875), 
LMas3487 = masking_layer([[[1.9913, 1.9442], [1.8807, 1.9096], [1.2729, 1.875]]], 1, Mas3487), 
LRes89860 = reshape_layer(Mas3487, [3, 2, 1], Res89860), 
LRes26223 = reshape_layer(Res89860, [3, 2, 1, 1], Res26223), 
LCon61995 = conv3D_transpose_layer(Res26223, 3, 2, 1,[[[[[0.3728], [0.165]]], [[[0.9367], [0.1164]]]], [[[[0.5931], [0.9031]]], [[[0.2057], [0.895]]]], [[[[0.4267], [0.2185]]], [[[0.2092], [0.0546]]]]],[0, 0], 1, 1, 1, true, Con61995), 
LRes34951 = reshape_layer(Con61995, [3, 2, 2], Res34951), 
LCon3977 = conv2D_transpose_layer(Res34951, 2, 2,[[[[0.3749, 0.5313], [0.5859, 0.6871], [0.5677, 0.0557]], [[0.6024, 0.9495], [0.5346, 0.7634], [0.5278, 0.955]]], [[[0.8398, 0.0602], [0.3097, 0.3092], [0.2102, 0.2247]], [[0.6479, 0.7004], [0.1123, 0.2935], [0.226, 0.6092]]]],[0, 0, 0], 1, 1, false, Con3977), 
LAdd60663 = add_layer([Con65875,Con3977], Add60663), 
exec_layers([LSub82760,LRes42581,LRes94566,LSep96014,LReL55868,LRes58271,LZer62122,LCon65875,LMas3487,LRes89860,LRes26223,LCon61995,LRes34951,LCon3977,LAdd60663],["Sub82760","Res42581","Res94566","Sep96014","ReL55868","Res58271","Zer62122","Con65875","Mas3487","Res89860","Res26223","Con61995","Res34951","Con3977","Add60663"],Add60663,"Add60663")

Actual (Unparsed): [[[[1.8259539, 2.6413197, 1.5590574], [6.8126468, 8.0608872, 5.6379752], [6.2978278, 6.0654664, 6.6469184]], [[3.8673631, 5.1468843, 2.4773840], [14.1090439, 13.1456564, 10.4028136], [12.4491955, 7.7402991, 10.1526129]], [[3.6028935, 3.7182254, 2.1323069], [12.5669450, 10.3548787, 8.7377107], [10.8368804, 5.8195582, 9.2372508]], [[1.4018893, 1.5164459, 1.2404182], [-8.3086757, 2.5368928, 2.7790103], [-8.7685758, 2.2656337, 2.9174077]]]]

Expected (Unparsed): [[[[1.82595393174,2.6413197436040003,1.559057344944],[6.812646751011,8.060887142655998,5.637975188671999],[6.2978277294,6.0654663448,6.646918384799999]],[[3.867363090944,5.146884318491,2.477384012193],[14.109043933595,13.145656417582,10.402813568422],[12.449195466122003,7.7402990361879995,10.152612856083998]],[[3.6028935757979994,3.7182253926099995,2.132306926978],[12.566945059630998,10.354878741343,8.737710788791],[10.836880410698,5.819558165716,9.237250804542]],[[1.401889355052,1.516445965544,1.240418207954],[-8.308675697444336,2.536892853161,2.7790103131399997],[-8.7685757054636,2.2656336796870002,2.917407711284]]]]

Actual:   [[[[1.826, 2.6414, 1.5591], [6.8127, 8.0609, 5.638], [6.2979, 6.0655, 6.647]], [[3.8674, 5.1469, 2.4774], [14.1091, 13.1457, 10.4029], [12.4492, 7.7403, 10.1527]], [[3.6029, 3.7183, 2.1324], [12.567, 10.3549, 8.7378], [10.8369, 5.8196, 9.2373]], [[1.4019, 1.5165, 1.2405], [-8.3086, 2.5369, 2.7791], [-8.7685, 2.2657, 2.9175]]]]

Expected: [[[[1.826, 2.6414, 1.5591], [6.8127, 8.0609, 5.638], [6.2979, 6.0655, 6.647]], [[3.8674, 5.1469, 2.4774], [14.1091, 13.1457, 10.4029], [12.4492, 7.7403, 10.1527]], [[3.6029, 3.7183, 2.1324], [12.567, 10.3549, 8.7378], [10.8369, 5.8196, 9.2373]], [[1.4019, 1.5165, 1.2405], [-8.3086, 2.5369, 2.7791], [-8.7685, 2.2657, 2.9175]]]]