import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Min51609 = tf.keras.layers.Input(shape=([1, 2, 2]))
in1Min51609 = tf.keras.layers.Input(shape=([1, 2, 2]))
in0Con83760 = tf.keras.layers.Input(shape=([4, 4, 4]))
in0Sub29888 = tf.keras.layers.Input(shape=([2, 2, 3, 2]))
in1Sub29888 = tf.keras.layers.Input(shape=([2, 2, 3, 2]))
in0ReL76973 = tf.keras.layers.Input(shape=([1, 1, 1]))
in0Con14421 = tf.keras.layers.Input(shape=([4, 4, 5]))
in0Ave58853 = tf.keras.layers.Input(shape=([1, 1, 2]))
in1Ave58853 = tf.keras.layers.Input(shape=([1, 1, 2]))
in0Con5160 = tf.keras.layers.Input(shape=([4, 4, 4]))

Min51609 = keras.layers.Minimum(name = 'Min51609', )([in0Min51609,in1Min51609])
Zer53044 = keras.layers.ZeroPadding2D(padding=((3, 0), (2, 0)), name = 'Zer53044', )(Min51609)
Con83760 = keras.layers.Concatenate(axis=3, name = 'Con83760', )([Zer53044,in0Con83760])
Sub29888 = keras.layers.Subtract(name = 'Sub29888', )([in0Sub29888,in1Sub29888])
Res52350 = keras.layers.Reshape((2, 2, 6), name = 'Res52350', )(Sub29888)
Zer52105 = keras.layers.ZeroPadding2D(padding=((1, 1), (1, 1)), name = 'Zer52105', )(Res52350)
ReL76973 = keras.layers.ReLU(max_value=6.823453252510159, negative_slope=7.4035110046715165, threshold=8.68410939181895, name = 'ReL76973', input_shape=(1, 1, 1))(in0ReL76973)
Zer47756 = keras.layers.ZeroPadding2D(padding=((3, 0), (3, 0)), name = 'Zer47756', )(ReL76973)
Con14421 = keras.layers.Concatenate(axis=3, name = 'Con14421', )([Zer47756,in0Con14421])
Sub73730 = keras.layers.Subtract(name = 'Sub73730', )([Zer52105,Con14421])
Ave58853 = keras.layers.Average(name = 'Ave58853', )([in0Ave58853,in1Ave58853])
Up_39698 = keras.layers.UpSampling2D(size=(1, 1), name = 'Up_39698', )(Ave58853)
Zer47880 = keras.layers.ZeroPadding2D(padding=((3, 0), (3, 0)), name = 'Zer47880', )(Up_39698)
Con5160 = keras.layers.Concatenate(axis=3, name = 'Con5160', )([Zer47880,in0Con5160])
Sub7427 = keras.layers.Subtract(name = 'Sub7427', )([Sub73730,Con5160])
Sub89642 = keras.layers.Subtract(name = 'Sub89642', )([Con83760,Sub7427])
model = tf.keras.models.Model(inputs=[in0Min51609,in1Min51609,in0Con83760,in0Sub29888,in1Sub29888,in0ReL76973,in0Con14421,in0Ave58853,in1Ave58853,in0Con5160], outputs=Sub89642)
in0Min51609 = tf.constant([[[[0.1022, 0.3928], [0.7199, 0.3115]]]])
in1Min51609 = tf.constant([[[[0.8397, 0.6561], [0.6629, 0.3802]]]])
in0Con83760 = tf.constant([[[[0.7008, 0.3791, 0.7895, 0.5051], [0.1688, 0.7877, 0.7232, 0.1963], [0.2534, 0.8222, 0.7511, 0.6305], [0.24, 0.5295, 0.4016, 0.9154]], [[0.7762, 0.1176, 0.6188, 0.7594], [0.7612, 0.2657, 0.5127, 0.6778], [0.5143, 0.6694, 0.0063, 0.5553], [0.4985, 0.0223, 0.8367, 0.9372]], [[0.997, 0.5441, 0.1271, 0.5915], [0.7841, 0.8537, 0.5346, 0.3413], [0.0197, 0.4549, 0.8038, 0.8989], [0.3027, 0.353, 0.404, 0.4535]], [[0.0646, 0.3541, 0.816, 0.0579], [0.2584, 0.4114, 0.9457, 0.4432], [0.6038, 0.9777, 0.0919, 0.7461], [0.4859, 0.6994, 0.8689, 0.7805]]]])
in0Sub29888 = tf.constant([[[[[0.7647, 0.6759], [0.7208, 0.5626], [0.1045, 0.0391]], [[0.5588, 0.3976], [0.3255, 0.1806], [0.4509, 0.6336]]], [[[0.3505, 0.3656], [0.105, 0.039], [0.7717, 0.0551]], [[0.7584, 0.4337], [0.4497, 0.9572], [0.4634, 0.5033]]]]])
in1Sub29888 = tf.constant([[[[[0.199, 0.6605], [0.4225, 0.8233], [0.0933, 0.1233]], [[0.2158, 0.6584], [0.295, 0.4471], [0.7689, 0.5246]]], [[[0.2113, 0.3042], [0.9507, 0.2105], [0.2108, 0.1063]], [[0.761, 0.9327], [0.095, 0.505], [0.1722, 0.5727]]]]])
in0ReL76973 = tf.constant([[[[0.0142]]]])
in0Con14421 = tf.constant([[[[0.4691, 0.4405, 0.7115, 0.5987, 0.3216], [0.5157, 0.5816, 0.0793, 0.2126, 0.5768], [0.6344, 0.9713, 0.2198, 0.6923, 0.9555], [0.8783, 0.7073, 0.2471, 0.9431, 0.4124]], [[0.3448, 0.6862, 0.0797, 0.7571, 0.4405], [0.3085, 0.2138, 0.735, 0.1259, 0.844], [0.4343, 0.4221, 0.5873, 0.0532, 0.5404], [0.7547, 0.9795, 0.1286, 0.3182, 0.5006]], [[0.8735, 0.2493, 0.3155, 0.4323, 0.0955], [0.2434, 0.5778, 0.5299, 0.5914, 0.9432], [0.8526, 0.5684, 0.52, 0.4888, 0.1004], [0.4984, 0.1174, 0.5264, 0.7603, 0.6151]], [[0.0063, 0.9787, 0.1094, 0.6322, 0.527], [0.8223, 0.2294, 0.4219, 0.3572, 0.0975], [0.5454, 0.3675, 0.1578, 0.1957, 0.6414], [0.9829, 0.2315, 0.3257, 0.0677, 0.7006]]]])
in0Ave58853 = tf.constant([[[[0.0933, 0.8205]]]])
in1Ave58853 = tf.constant([[[[0.4877, 0.5401]]]])
in0Con5160 = tf.constant([[[[0.7698, 0.4382, 0.2153, 0.3297], [0.5817, 0.3273, 0.4947, 0.469], [0.7458, 0.8778, 0.0403, 0.6303], [0.6097, 0.4615, 0.4801, 0.7096]], [[0.7437, 0.4782, 0.6709, 0.7747], [0.1878, 0.2211, 0.128, 0.0639], [0.7999, 0.5301, 0.0689, 0.8455], [0.1725, 0.3776, 0.4238, 0.6884]], [[0.4272, 0.7242, 0.2777, 0.7798], [0.8253, 0.2137, 0.5971, 0.5459], [0.5365, 0.5307, 0.7724, 0.9791], [0.1009, 0.5385, 0.4557, 0.757]], [[0.0843, 0.6333, 0.4127, 0.4507], [0.1807, 0.104, 0.623, 0.8608], [0.5476, 0.6721, 0.6598, 0.7979], [0.4736, 0.7991, 0.4619, 0.4255]]]])
print (np.array2string(model.predict([in0Min51609,in1Min51609,in0Con83760,in0Sub29888,in1Sub29888,in0ReL76973,in0Con14421,in0Ave58853,in1Ave58853,in0Con5160],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Sub89642.png')

LMin51609 = minimum_layer([[[[[0.1022, 0.3928], [0.7199, 0.3115]]]], [[[[0.8397, 0.6561], [0.6629, 0.3802]]]]], Min51609), 
LZer53044 = zero_padding2D_layer(Min51609, 3, 0, 2, 0, Zer53044), 
LCon83760 = concatenate_layer([Zer53044,[[[[0.7008, 0.3791, 0.7895, 0.5051], [0.1688, 0.7877, 0.7232, 0.1963], [0.2534, 0.8222, 0.7511, 0.6305], [0.24, 0.5295, 0.4016, 0.9154]], [[0.7762, 0.1176, 0.6188, 0.7594], [0.7612, 0.2657, 0.5127, 0.6778], [0.5143, 0.6694, 0.0063, 0.5553], [0.4985, 0.0223, 0.8367, 0.9372]], [[0.997, 0.5441, 0.1271, 0.5915], [0.7841, 0.8537, 0.5346, 0.3413], [0.0197, 0.4549, 0.8038, 0.8989], [0.3027, 0.353, 0.404, 0.4535]], [[0.0646, 0.3541, 0.816, 0.0579], [0.2584, 0.4114, 0.9457, 0.4432], [0.6038, 0.9777, 0.0919, 0.7461], [0.4859, 0.6994, 0.8689, 0.7805]]]]], 3, Con83760), 
LSub29888 = subtract_layer([[[[[0.7647, 0.6759], [0.7208, 0.5626], [0.1045, 0.0391]], [[0.5588, 0.3976], [0.3255, 0.1806], [0.4509, 0.6336]]], [[[0.3505, 0.3656], [0.105, 0.039], [0.7717, 0.0551]], [[0.7584, 0.4337], [0.4497, 0.9572], [0.4634, 0.5033]]]]], [[[[[0.199, 0.6605], [0.4225, 0.8233], [0.0933, 0.1233]], [[0.2158, 0.6584], [0.295, 0.4471], [0.7689, 0.5246]]], [[[0.2113, 0.3042], [0.9507, 0.2105], [0.2108, 0.1063]], [[0.761, 0.9327], [0.095, 0.505], [0.1722, 0.5727]]]]], Sub29888), 
LRes52350 = reshape_layer(Sub29888, [2, 2, 6], Res52350), 
LZer52105 = zero_padding2D_layer(Res52350, 1, 1, 1, 1, Zer52105), 
LReL76973 = relu_layer([[[[0.0142]]]], 6.823453252510159, 7.4035110046715165, 8.68410939181895, ReL76973), 
LZer47756 = zero_padding2D_layer(ReL76973, 3, 0, 3, 0, Zer47756), 
LCon14421 = concatenate_layer([Zer47756,[[[[0.4691, 0.4405, 0.7115, 0.5987, 0.3216], [0.5157, 0.5816, 0.0793, 0.2126, 0.5768], [0.6344, 0.9713, 0.2198, 0.6923, 0.9555], [0.8783, 0.7073, 0.2471, 0.9431, 0.4124]], [[0.3448, 0.6862, 0.0797, 0.7571, 0.4405], [0.3085, 0.2138, 0.735, 0.1259, 0.844], [0.4343, 0.4221, 0.5873, 0.0532, 0.5404], [0.7547, 0.9795, 0.1286, 0.3182, 0.5006]], [[0.8735, 0.2493, 0.3155, 0.4323, 0.0955], [0.2434, 0.5778, 0.5299, 0.5914, 0.9432], [0.8526, 0.5684, 0.52, 0.4888, 0.1004], [0.4984, 0.1174, 0.5264, 0.7603, 0.6151]], [[0.0063, 0.9787, 0.1094, 0.6322, 0.527], [0.8223, 0.2294, 0.4219, 0.3572, 0.0975], [0.5454, 0.3675, 0.1578, 0.1957, 0.6414], [0.9829, 0.2315, 0.3257, 0.0677, 0.7006]]]]], 3, Con14421), 
LSub73730 = subtract_layer(Zer52105,Con14421, Sub73730), 
LAve58853 = average_layer([[[[[0.0933, 0.8205]]]], [[[[0.4877, 0.5401]]]]], Ave58853), 
LUp_39698 = up_sampling2D_layer(Ave58853, 1, 1, Up_39698), 
LZer47880 = zero_padding2D_layer(Up_39698, 3, 0, 3, 0, Zer47880), 
LCon5160 = concatenate_layer([Zer47880,[[[[0.7698, 0.4382, 0.2153, 0.3297], [0.5817, 0.3273, 0.4947, 0.469], [0.7458, 0.8778, 0.0403, 0.6303], [0.6097, 0.4615, 0.4801, 0.7096]], [[0.7437, 0.4782, 0.6709, 0.7747], [0.1878, 0.2211, 0.128, 0.0639], [0.7999, 0.5301, 0.0689, 0.8455], [0.1725, 0.3776, 0.4238, 0.6884]], [[0.4272, 0.7242, 0.2777, 0.7798], [0.8253, 0.2137, 0.5971, 0.5459], [0.5365, 0.5307, 0.7724, 0.9791], [0.1009, 0.5385, 0.4557, 0.757]], [[0.0843, 0.6333, 0.4127, 0.4507], [0.1807, 0.104, 0.623, 0.8608], [0.5476, 0.6721, 0.6598, 0.7979], [0.4736, 0.7991, 0.4619, 0.4255]]]]], 3, Con5160), 
LSub7427 = subtract_layer(Sub73730,Con5160, Sub7427), 
LSub89642 = subtract_layer(Con83760,Sub7427, Sub89642), 
exec_layers([LMin51609,LZer53044,LCon83760,LSub29888,LRes52350,LZer52105,LReL76973,LZer47756,LCon14421,LSub73730,LAve58853,LUp_39698,LZer47880,LCon5160,LSub7427,LSub89642],["Min51609","Zer53044","Con83760","Sub29888","Res52350","Zer52105","ReL76973","Zer47756","Con14421","Sub73730","Ave58853","Up_39698","Zer47880","Con5160","Sub7427","Sub89642"],Sub89642,"Sub89642")

Actual (Unparsed): [[[[0.0000000, 0.4691000, 1.9111000, 1.5288000, 1.6035000, 1.1564000], [0.0000000, 0.5157000, 1.3321000, 1.1943000, 1.4305000, 1.2421000], [0.0000000, 0.6344000, 1.9705000, 1.9198000, 1.4837000, 2.2163000], [0.0000000, 0.8783000, 1.5570000, 1.2381000, 1.8248000, 2.0374000]], [[0.0000000, 0.3448000, 2.2061000, 0.6755000, 2.0468000, 1.9746000], [-0.5657000, 0.2931000, 0.8645000, 1.4825000, 0.7554000, 1.6699000], [-0.3430000, 0.6951000, 1.7058000, 2.0533000, 0.4464000, 1.8322001], [0.0000000, 0.7547000, 1.6505000, 0.5285000, 1.5787000, 2.1262000]], [[0.0000000, 0.8735000, 1.6735000, 1.5838000, 0.8371000, 1.4668000], [-0.1392000, 0.1820000, 3.0328999, 1.7688000, 1.1622000, 1.8816000], [0.0026000, 1.3516000, 0.7699000, 1.0534000, 1.7738000, 2.0478000], [0.0000000, 0.4984000, 0.5210000, 1.4179000, 1.6200000, 1.8256001]], [[0.0000000, 0.0063000, 1.1276000, 1.0968000, 1.8609000, 1.0356000], [0.0000000, 0.8223000, 0.6685000, 0.9373000, 1.9259000, 1.4015000], [0.1022000, 0.9382000, 1.5189000, 1.8076000, 0.9474000, 2.1854000], [-63.2343696, 1.9747000, 1.1910000, 1.8242000, 1.3985000, 1.9066000]]]]

Expected (Unparsed): [[[[0,0.4691,1.9111000000000002,1.5288,1.6035,1.1564],[0,0.5157,1.3321,1.1943,1.4304999999999999,1.2420999999999998],[0,0.6344,1.9705000000000001,1.9198,1.4837,2.2163],[0,0.8783,1.5570000000000002,1.2381,1.8248,2.0374]],[[0,0.3448,2.2061,0.6755000000000001,2.0468,1.9746000000000001],[-0.5657000000000001,0.2931,0.8644999999999999,1.4825000000000002,0.7554000000000001,1.6698999999999997],[-0.34299999999999997,0.6951,1.7058,2.0533,0.4464,1.8321999999999998],[0,0.7547,1.6505,0.5285,1.5787,2.1262]],[[0,0.8735,1.6735,1.5837999999999999,0.8371,1.4668],[-0.1392,0.18200000000000005,3.0329,1.7688000000000001,1.1622,1.8816000000000002],[0.0026000000000000467,1.3516,0.7699,1.0534,1.7738,2.0478],[0,0.4984,0.521,1.4179,1.62,1.8256000000000001]],[[0,0.0063,1.1276,1.0968,1.8609,1.0356],[0,0.8223,0.6685000000000001,0.9373,1.9259,1.4015],[0.1022,0.9381999999999999,1.5189,1.8076,0.9474,2.1854],[-63.23436959183654,1.9747,1.191,1.8242,1.3984999999999999,1.9066]]]]

Actual:   [[[[0, 0.4691, 1.9111, 1.5288, 1.6035, 1.1564], [0, 0.5157, 1.3321, 1.1943, 1.4305, 1.2421], [0, 0.6344, 1.9705, 1.9198, 1.4837, 2.2163], [0, 0.8783, 1.557, 1.2381, 1.8248, 2.0374]], [[0, 0.3448, 2.2061, 0.6755, 2.0468, 1.9746], [-0.5657, 0.2931, 0.8645, 1.4825, 0.7554, 1.6699], [-0.343, 0.6951, 1.7058, 2.0533, 0.4464, 1.8323], [0, 0.7547, 1.6505, 0.5285, 1.5787, 2.1262]], [[0, 0.8735, 1.6735, 1.5838, 0.8371, 1.4668], [-0.1392, 0.182, 3.0329, 1.7688, 1.1622, 1.8816], [0.0026, 1.3516, 0.7699, 1.0534, 1.7738, 2.0478], [0, 0.4984, 0.521, 1.4179, 1.62, 1.8257]], [[0, 0.0063, 1.1276, 1.0968, 1.8609, 1.0356], [0, 0.8223, 0.6685, 0.9373, 1.9259, 1.4015], [0.1022, 0.9382, 1.5189, 1.8076, 0.9474, 2.1854], [-63.2343, 1.9747, 1.191, 1.8242, 1.3985, 1.9066]]]]

Expected: [[[[0, 0.4691, 1.9112, 1.5288, 1.6035, 1.1564], [0, 0.5157, 1.3321, 1.1943, 1.4305, 1.2421], [0, 0.6344, 1.9706, 1.9198, 1.4837, 2.2163], [0, 0.8783, 1.5571, 1.2381, 1.8248, 2.0374]], [[0, 0.3448, 2.2061, 0.6756, 2.0468, 1.9747], [-0.5657, 0.2931, 0.8645, 1.4826, 0.7555, 1.6699], [-0.3429, 0.6951, 1.7058, 2.0533, 0.4464, 1.8322], [0, 0.7547, 1.6505, 0.5285, 1.5787, 2.1262]], [[0, 0.8735, 1.6735, 1.5838, 0.8371, 1.4668], [-0.1392, 0.1821, 3.0329, 1.7689, 1.1622, 1.8817], [0.0027, 1.3516, 0.7699, 1.0534, 1.7738, 2.0478], [0, 0.4984, 0.521, 1.4179, 1.62, 1.8257]], [[0, 0.0063, 1.1276, 1.0968, 1.8609, 1.0356], [0, 0.8223, 0.6686, 0.9373, 1.9259, 1.4015], [0.1022, 0.9382, 1.5189, 1.8076, 0.9474, 2.1854], [-63.2343, 1.9747, 1.191, 1.8242, 1.3985, 1.9066]]]]