import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Ave5743 = tf.keras.layers.Input(shape=([1, 2, 2]))
in1Ave5743 = tf.keras.layers.Input(shape=([1, 2, 2]))
in0Con44556 = tf.keras.layers.Input(shape=([2, 2]))
in0Mul97842 = tf.keras.layers.Input(shape=([1, 2, 1, 1]))
in1Mul97842 = tf.keras.layers.Input(shape=([1, 2, 1, 1]))

Ave5743 = keras.layers.Average(name = 'Ave5743', )([in0Ave5743,in1Ave5743])
Res76014 = keras.layers.Reshape((1, 4), name = 'Res76014', )(Ave5743)
LST85364 = keras.layers.LSTM(2,recurrent_activation='sigmoid', name = 'LST85364', )(Res76014)
Res66064 = keras.layers.Reshape((2, 1), name = 'Res66064', )(LST85364)
Con44556 = keras.layers.Concatenate(axis=2, name = 'Con44556', )([Res66064,in0Con44556])
Mul97842 = keras.layers.Multiply(name = 'Mul97842', )([in0Mul97842,in1Mul97842])
Res76879 = keras.layers.Reshape((1, 2, 1), name = 'Res76879', )(Mul97842)
Res10923 = keras.layers.Reshape((1, 2), name = 'Res10923', )(Res76879)
Sep11583 = keras.layers.SeparableConv1D(3, (1),strides=(1), padding='valid', name = 'Sep11583', )(Res10923)
Zer13495 = keras.layers.ZeroPadding1D(padding=((1, 0)), name = 'Zer13495', )(Sep11583)
Ave89367 = keras.layers.Average(name = 'Ave89367', )([Con44556,Zer13495])
model = tf.keras.models.Model(inputs=[in0Ave5743,in1Ave5743,in0Con44556,in0Mul97842,in1Mul97842], outputs=Ave89367)
w = model.get_layer('LST85364').get_weights() 
w[0] = np.array([[8, 5, 2, 3, 8, 8, 8, 9], [3, 10, 9, 7, 1, 7, 4, 5], [8, 10, 2, 2, 8, 4, 10, 3], [9, 5, 2, 5, 7, 1, 6, 10]])
w[1] = np.array([[9, 1, 2, 3, 6, 1, 8, 10], [7, 10, 3, 1, 5, 3, 9, 6]])
w[2] = np.array([8, 3, 1, 7, 9, 7, 9, 3])
model.get_layer('LST85364').set_weights(w) 
w = model.get_layer('Sep11583').get_weights() 
w[0] = np.array([[[0.6659], [0.0224]]])
w[1] = np.array([[[0.6297, 0.7635, 0.4171], [0.3035, 0.7871, 0.4514]]])
w[2] = np.array([0, 0, 0])
model.get_layer('Sep11583').set_weights(w) 
in0Ave5743 = tf.constant([[[[0.8803, 0.3513], [0.1462, 0.7016]]]])
in1Ave5743 = tf.constant([[[[0.4656, 0.5796], [0.3375, 0.7096]]]])
in0Con44556 = tf.constant([[[0.0806, 0.9533], [0.4658, 0.5292]]])
in0Mul97842 = tf.constant([[[[[0.4602]], [[0.1253]]]]])
in1Mul97842 = tf.constant([[[[[0.1412]], [[0.2105]]]]])
print (np.array2string(model.predict([in0Ave5743,in1Ave5743,in0Con44556,in0Mul97842,in1Mul97842],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Ave89367.png')

LAve5743 = average_layer([[[[[0.8803, 0.3513], [0.1462, 0.7016]]]], [[[[0.4656, 0.5796], [0.3375, 0.7096]]]]], Ave5743), 
LRes76014 = reshape_layer(Ave5743, [1, 4], Res76014), 
LLST85364 = lstm_layer(Res76014,[[8, 5, 2, 3, 8, 8, 8, 9], [3, 10, 9, 7, 1, 7, 4, 5], [8, 10, 2, 2, 8, 4, 10, 3], [9, 5, 2, 5, 7, 1, 6, 10]],[[9, 1, 2, 3, 6, 1, 8, 10], [7, 10, 3, 1, 5, 3, 9, 6]],[8, 3, 1, 7, 9, 7, 9, 3], LST85364), 
LRes66064 = reshape_layer(LST85364, [2, 1], Res66064), 
LCon44556 = concatenate_layer([Res66064,[[[0.0806, 0.9533], [0.4658, 0.5292]]]], 2, Con44556), 
LMul97842 = multiply_layer([[[[[[0.4602]], [[0.1253]]]]], [[[[[0.1412]], [[0.2105]]]]]], Mul97842), 
LRes76879 = reshape_layer(Mul97842, [1, 2, 1], Res76879), 
LRes10923 = reshape_layer(Res76879, [1, 2], Res10923), 
LSep11583 = separable_conv1D_layer(Res10923, 1,[[[[0.6659], [0.0224]]],[[[0.6297, 0.7635, 0.4171], [0.3035, 0.7871, 0.4514]]]],[0, 0, 0], 1, false, Sep11583), 
LZer13495 = zero_padding1D_layer(Sep11583, 1, 0, Zer13495), 
LAve89367 = average_layer([Con44556,Zer13495], Ave89367), 
exec_layers([LAve5743,LRes76014,LLST85364,LRes66064,LCon44556,LMul97842,LRes76879,LRes10923,LSep11583,LZer13495,LAve89367],["Ave5743","Res76014","LST85364","Res66064","Con44556","Mul97842","Res76879","Res10923","Sep11583","Zer13495","Ave89367"],Ave89367,"Ave89367")

Actual (Unparsed): [[[0.3807971, 0.0403000, 0.4766500], [0.3945104, 0.2496510, 0.2737574]]]

Expected (Unparsed): [[[0.38079707791439815,0.0403,0.47665],[0.39451039040351493,0.249650968058346,0.2737573766319188]]]

Actual:   [[[0.3808, 0.0403, 0.4767], [0.3946, 0.2497, 0.2738]]]

Expected: [[[0.3808, 0.0403, 0.4767], [0.3946, 0.2497, 0.2738]]]