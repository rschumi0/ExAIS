import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Con41251 = tf.keras.layers.Input(shape=([1, 2, 1, 1]))

Con41251 = keras.layers.Conv3DTranspose(4, (1, 2, 1),strides=(1, 1, 1), padding='valid', name = 'Con41251', )(in0Con41251)
Lea38464 = keras.layers.LeakyReLU(alpha=1.5011224856686007, name = 'Lea38464', )(Con41251)
model = tf.keras.models.Model(inputs=[in0Con41251], outputs=Lea38464)
w = model.get_layer('Con41251').get_weights() 
w[0] = np.array([[[[[0.902], [0.89], [0.3448], [0.6043]]], [[[0.7519], [0.4812], [0.6611], [0.2752]]]]])
w[1] = np.array([0, 0, 0, 0])
model.get_layer('Con41251').set_weights(w) 
in0Con41251 = tf.constant([[[[[0.3108]], [[0.1551]]]]])
print (np.array2string(model.predict([in0Con41251],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Lea38464.png')

LCon41251 = conv3D_transpose_layer([[[[[0.3108]], [[0.1551]]]]], 1, 2, 1,[[[[[0.902], [0.89], [0.3448], [0.6043]]], [[[0.7519], [0.4812], [0.6611], [0.2752]]]]],[0, 0, 0, 0], 1, 1, 1, false, Con41251), 
LLea38464 = leaky_relu_layer(Con41251, 1.5011224856686007, Lea38464), 
exec_layers([LCon41251,LLea38464],["Con41251","Lea38464"],Lea38464,"Lea38464")

Actual (Unparsed): [[[[[0.2803416, 0.2766120, 0.1071638, 0.1878164]], [[0.3735907, 0.2875960, 0.2589484, 0.1792591]], [[0.1166197, 0.0746341, 0.1025366, 0.0426835]]]]]

Expected (Unparsed): [[[[[0.2803416,0.276612,0.10716384000000001,0.18781644]],[[0.37359072000000004,0.28759596,0.25894836,0.17925909]],[[0.11661969,0.07463412,0.10253661,0.042683519999999996]]]]]

Actual:   [[[[[0.2804, 0.2767, 0.1072, 0.1879]], [[0.3736, 0.2876, 0.259, 0.1793]], [[0.1167, 0.0747, 0.1026, 0.0427]]]]]

Expected: [[[[[0.2804, 0.2767, 0.1072, 0.1879]], [[0.3736, 0.2876, 0.259, 0.1793]], [[0.1167, 0.0747, 0.1026, 0.0427]]]]]