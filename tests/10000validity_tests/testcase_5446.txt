import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Up_46193 = tf.keras.layers.Input(shape=([4, 4, 1]))
in0Glo48162 = tf.keras.layers.Input(shape=([1, 1, 2, 2]))
in0Con90969 = tf.keras.layers.Input(shape=([62]))

Up_46193 = keras.layers.UpSampling2D(size=(2, 1), name = 'Up_46193', )(in0Up_46193)
Loc61864 = keras.layers.LocallyConnected2D(4, (1, 3),strides=(1, 1), name = 'Loc61864', )(Up_46193)
Res85067 = keras.layers.Reshape((8, 8), name = 'Res85067', )(Loc61864)
Fla93966 = keras.layers.Flatten(name = 'Fla93966', )(Res85067)
Glo48162 = keras.layers.GlobalAveragePooling3D(name = 'Glo48162', )(in0Glo48162)
Con90969 = keras.layers.Concatenate(axis=1, name = 'Con90969', )([Glo48162,in0Con90969])
Min76135 = keras.layers.Minimum(name = 'Min76135', )([Fla93966,Con90969])
model = tf.keras.models.Model(inputs=[in0Up_46193,in0Glo48162,in0Con90969], outputs=Min76135)
w = model.get_layer('Loc61864').get_weights() 
w[0] = np.array([[[0.0011, 0.6321, 0.0227, 0.8782], [0.0194, 0.2216, 0.8186, 0.9795], [0.6669, 0.9377, 0.7919, 0.6201]], [[0.9723, 0.6342, 0.795, 0.7698], [0.9193, 0.9566, 0.8859, 0.4512], [0.8689, 0.5417, 0.3735, 0.0586]], [[0.5879, 0.4213, 0.7848, 0.2879], [0.4727, 0.993, 0.579, 0.3625], [0.7321, 0.5723, 0.1291, 0.0305]], [[0.744, 0.7206, 0.9537, 0.629], [0.5394, 0.2554, 0.4404, 0.3655], [0.3813, 0.0916, 0.3272, 0.8487]], [[0.7057, 0.8378, 0.028, 0.8152], [0.2688, 0.3785, 0.4783, 0.9494], [0.2083, 0.5061, 0.5556, 0.6639]], [[0.8646, 0.04, 0.2864, 0.7246], [0.6322, 0.7646, 0.9887, 0.6393], [0.817, 0.9529, 0.2195, 0.8004]], [[0.4583, 0.2, 0.898, 0.4791], [0.3412, 0.7885, 0.2571, 0.8952], [0.9758, 0.8284, 0.3387, 0.7596]], [[0.1436, 0.972, 0.595, 0.8756], [0.7274, 0.5909, 0.7805, 0.6177], [0.9281, 0.9188, 0.7309, 0.3633]], [[0.6477, 0.8158, 0.8099, 0.2428], [0.7698, 0.4881, 0.7765, 0.8953], [0.3058, 0.7111, 0.5772, 0.2695]], [[0.8907, 0.8448, 0.0956, 0.893], [0.9107, 0.2065, 0.2123, 0.4488], [0.6232, 0.1718, 0.6149, 0.943]], [[0.9916, 0.709, 0.6803, 0.2271], [0.5966, 0.9241, 0.4052, 0.1443], [0.9115, 0.5901, 0.8, 0.1123]], [[0.4306, 0.5655, 0.3814, 0.5246], [0.6256, 0.4705, 0.3994, 0.9546], [0.4733, 0.9799, 0.2176, 0.7815]], [[0.3433, 0.6183, 0.8279, 0.5226], [0.3655, 0.998, 0.8261, 0.8502], [0.0056, 0.0271, 0.3013, 0.0025]], [[0.4703, 0.7321, 0.998, 0.0537], [0.7362, 0.992, 0.7996, 0.2997], [0.4492, 0.6582, 0.0517, 0.8382]], [[0.6785, 0.2474, 0.4916, 0.2715], [0.5241, 0.6395, 0.5889, 0.3478], [0.8768, 0.9845, 0.9081, 0.2696]], [[0.2058, 0.3299, 0.7043, 0.3428], [0.1127, 0.3153, 0.3376, 0.6227], [0.5284, 0.6516, 0.2468, 0.2149]]])
w[1] = np.array([[[0, 0, 0, 0], [0, 0, 0, 0]], [[0, 0, 0, 0], [0, 0, 0, 0]], [[0, 0, 0, 0], [0, 0, 0, 0]], [[0, 0, 0, 0], [0, 0, 0, 0]], [[0, 0, 0, 0], [0, 0, 0, 0]], [[0, 0, 0, 0], [0, 0, 0, 0]], [[0, 0, 0, 0], [0, 0, 0, 0]], [[0, 0, 0, 0], [0, 0, 0, 0]]])
model.get_layer('Loc61864').set_weights(w) 
in0Up_46193 = tf.constant([[[[1.8145], [1.955], [1.603], [1.4826]], [[1.1432], [1.0208], [1.536], [1.9896]], [[1.2195], [1.6166], [1.794], [1.0559]], [[1.9429], [1.3439], [1.2469], [1.4863]]]])
in0Glo48162 = tf.constant([[[[[1.2467, 1.2171], [1.5024, 1.3597]]]]])
in0Con90969 = tf.constant([[0.3594, 0.2609, 0.7894, 0.1488, 0.981, 0.9849, 0.3941, 0.8368, 0.8819, 0.1746, 0.0348, 0.7842, 0.2301, 0.8456, 0.4424, 0.6202, 0.1671, 0.975, 0.036, 0.5961, 0.2358, 0.952, 0.6058, 0.3198, 0.073, 0.8754, 0.7207, 0.5876, 0.4627, 0.5011, 0.7625, 0.7083, 0.6791, 0.6115, 0.3949, 0.8811, 0.2872, 0.1996, 0.0946, 0.5145, 0.2132, 0.1376, 0.0976, 0.8554, 0.9519, 0.9372, 0.7379, 0.9345, 0.2325, 0.7969, 0.6996, 0.6288, 0.3306, 0.3801, 0.1385, 0.5915, 0.4853, 0.6717, 0.9834, 0.9068, 0.5546, 0.8176]])
print (np.array2string(model.predict([in0Up_46193,in0Glo48162,in0Con90969],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Min76135.png')

LUp_46193 = up_sampling2D_layer([[[[1.8145], [1.955], [1.603], [1.4826]], [[1.1432], [1.0208], [1.536], [1.9896]], [[1.2195], [1.6166], [1.794], [1.0559]], [[1.9429], [1.3439], [1.2469], [1.4863]]]], 2, 1, Up_46193), 
LLoc61864 = locally_connected2D_layer(Up_46193, 1, 3,[[[0.0011, 0.6321, 0.0227, 0.8782], [0.0194, 0.2216, 0.8186, 0.9795], [0.6669, 0.9377, 0.7919, 0.6201]], [[0.9723, 0.6342, 0.795, 0.7698], [0.9193, 0.9566, 0.8859, 0.4512], [0.8689, 0.5417, 0.3735, 0.0586]], [[0.5879, 0.4213, 0.7848, 0.2879], [0.4727, 0.993, 0.579, 0.3625], [0.7321, 0.5723, 0.1291, 0.0305]], [[0.744, 0.7206, 0.9537, 0.629], [0.5394, 0.2554, 0.4404, 0.3655], [0.3813, 0.0916, 0.3272, 0.8487]], [[0.7057, 0.8378, 0.028, 0.8152], [0.2688, 0.3785, 0.4783, 0.9494], [0.2083, 0.5061, 0.5556, 0.6639]], [[0.8646, 0.04, 0.2864, 0.7246], [0.6322, 0.7646, 0.9887, 0.6393], [0.817, 0.9529, 0.2195, 0.8004]], [[0.4583, 0.2, 0.898, 0.4791], [0.3412, 0.7885, 0.2571, 0.8952], [0.9758, 0.8284, 0.3387, 0.7596]], [[0.1436, 0.972, 0.595, 0.8756], [0.7274, 0.5909, 0.7805, 0.6177], [0.9281, 0.9188, 0.7309, 0.3633]], [[0.6477, 0.8158, 0.8099, 0.2428], [0.7698, 0.4881, 0.7765, 0.8953], [0.3058, 0.7111, 0.5772, 0.2695]], [[0.8907, 0.8448, 0.0956, 0.893], [0.9107, 0.2065, 0.2123, 0.4488], [0.6232, 0.1718, 0.6149, 0.943]], [[0.9916, 0.709, 0.6803, 0.2271], [0.5966, 0.9241, 0.4052, 0.1443], [0.9115, 0.5901, 0.8, 0.1123]], [[0.4306, 0.5655, 0.3814, 0.5246], [0.6256, 0.4705, 0.3994, 0.9546], [0.4733, 0.9799, 0.2176, 0.7815]], [[0.3433, 0.6183, 0.8279, 0.5226], [0.3655, 0.998, 0.8261, 0.8502], [0.0056, 0.0271, 0.3013, 0.0025]], [[0.4703, 0.7321, 0.998, 0.0537], [0.7362, 0.992, 0.7996, 0.2997], [0.4492, 0.6582, 0.0517, 0.8382]], [[0.6785, 0.2474, 0.4916, 0.2715], [0.5241, 0.6395, 0.5889, 0.3478], [0.8768, 0.9845, 0.9081, 0.2696]], [[0.2058, 0.3299, 0.7043, 0.3428], [0.1127, 0.3153, 0.3376, 0.6227], [0.5284, 0.6516, 0.2468, 0.2149]]],[[[0, 0, 0, 0], [0, 0, 0, 0]], [[0, 0, 0, 0], [0, 0, 0, 0]], [[0, 0, 0, 0], [0, 0, 0, 0]], [[0, 0, 0, 0], [0, 0, 0, 0]], [[0, 0, 0, 0], [0, 0, 0, 0]], [[0, 0, 0, 0], [0, 0, 0, 0]], [[0, 0, 0, 0], [0, 0, 0, 0]], [[0, 0, 0, 0], [0, 0, 0, 0]]], 1, 1, Loc61864), 
LRes85067 = reshape_layer(Loc61864, [8, 8], Res85067), 
LFla93966 = flatten_layer(Res85067, Fla93966), 
LGlo48162 = global_average_pooling3D_layer([[[[[1.2467, 1.2171], [1.5024, 1.3597]]]]], Glo48162), 
LCon90969 = concatenate_layer([Glo48162,[[0.3594, 0.2609, 0.7894, 0.1488, 0.981, 0.9849, 0.3941, 0.8368, 0.8819, 0.1746, 0.0348, 0.7842, 0.2301, 0.8456, 0.4424, 0.6202, 0.1671, 0.975, 0.036, 0.5961, 0.2358, 0.952, 0.6058, 0.3198, 0.073, 0.8754, 0.7207, 0.5876, 0.4627, 0.5011, 0.7625, 0.7083, 0.6791, 0.6115, 0.3949, 0.8811, 0.2872, 0.1996, 0.0946, 0.5145, 0.2132, 0.1376, 0.0976, 0.8554, 0.9519, 0.9372, 0.7379, 0.9345, 0.2325, 0.7969, 0.6996, 0.6288, 0.3306, 0.3801, 0.1385, 0.5915, 0.4853, 0.6717, 0.9834, 0.9068, 0.5546, 0.8176]]], 1, Con90969), 
LMin76135 = minimum_layer([Fla93966,Con90969], Min76135), 
exec_layers([LUp_46193,LLoc61864,LRes85067,LFla93966,LGlo48162,LCon90969,LMin76135],["Up_46193","Loc61864","Res85067","Fla93966","Glo48162","Con90969","Min76135"],Min76135,"Min76135")

Actual (Unparsed): [[1.1089637, 1.2884000, 0.3594000, 0.2609000, 0.7894000, 0.1488000, 0.9810000, 0.9849000, 0.3941000, 0.8368000, 0.8819000, 0.1746000, 0.0348000, 0.7842000, 0.2301000, 0.8456000, 0.4424000, 0.6202000, 0.1671000, 0.9750000, 0.0360000, 0.5961000, 0.2358000, 0.9520000, 0.6058000, 0.3198000, 0.0730000, 0.8754000, 0.7207000, 0.5876000, 0.4627000, 0.5011000, 0.7625000, 0.7083000, 0.6791000, 0.6115000, 0.3949000, 0.8811000, 0.2872000, 0.1996000, 0.0946000, 0.5145000, 0.2132000, 0.1376000, 0.0976000, 0.8554000, 0.9519000, 0.9372000, 0.7379000, 0.9345000, 0.2325000, 0.7969000, 0.6996000, 0.6288000, 0.3306000, 0.3801000, 0.1385000, 0.5915000, 0.4853000, 0.6717000, 0.9834000, 0.9068000, 0.5546000, 0.8176000]]

Expected (Unparsed): [[1.10896365,1.2884,0.3594,0.2609,0.7894,0.1488,0.981,0.9849,0.3941,0.8368,0.8819,0.1746,0.0348,0.7842,0.2301,0.8456,0.4424,0.6202,0.1671,0.975,0.036,0.5961,0.2358,0.952,0.6058,0.3198,0.073,0.8754,0.7207,0.5876,0.4627,0.5011,0.7625,0.7083,0.6791,0.6115,0.3949,0.8811,0.2872,0.1996,0.0946,0.5145,0.2132,0.1376,0.0976,0.8554,0.9519,0.9372,0.7379,0.9345,0.2325,0.7969,0.6996,0.6288,0.3306,0.3801,0.1385,0.5915,0.4853,0.6717,0.9834,0.9068,0.5546,0.8176]]

Actual:   [[1.109, 1.2884, 0.3594, 0.2609, 0.7894, 0.1488, 0.981, 0.9849, 0.3941, 0.8368, 0.8819, 0.1746, 0.0348, 0.7842, 0.2301, 0.8456, 0.4424, 0.6202, 0.1671, 0.975, 0.036, 0.5961, 0.2358, 0.952, 0.6058, 0.3198, 0.073, 0.8754, 0.7207, 0.5876, 0.4627, 0.5011, 0.7625, 0.7083, 0.6791, 0.6115, 0.3949, 0.8811, 0.2872, 0.1996, 0.0946, 0.5145, 0.2132, 0.1376, 0.0976, 0.8554, 0.9519, 0.9372, 0.7379, 0.9345, 0.2325, 0.7969, 0.6996, 0.6288, 0.3306, 0.3801, 0.1385, 0.5915, 0.4853, 0.6717, 0.9834, 0.9068, 0.5546, 0.8176]]

Expected: [[1.109, 1.2884, 0.3594, 0.2609, 0.7894, 0.1488, 0.981, 0.9849, 0.3941, 0.8368, 0.8819, 0.1746, 0.0348, 0.7842, 0.2301, 0.8456, 0.4424, 0.6202, 0.1671, 0.975, 0.036, 0.5961, 0.2358, 0.952, 0.6058, 0.3198, 0.073, 0.8754, 0.7207, 0.5876, 0.4627, 0.5011, 0.7625, 0.7083, 0.6791, 0.6115, 0.3949, 0.8811, 0.2872, 0.1996, 0.0946, 0.5145, 0.2132, 0.1376, 0.0976, 0.8554, 0.9519, 0.9372, 0.7379, 0.9345, 0.2325, 0.7969, 0.6996, 0.6288, 0.3306, 0.3801, 0.1385, 0.5915, 0.4853, 0.6717, 0.9834, 0.9068, 0.5546, 0.8176]]