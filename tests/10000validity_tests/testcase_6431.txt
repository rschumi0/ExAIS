import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Mul65047 = tf.keras.layers.Input(shape=([1, 1, 1]))
in1Mul65047 = tf.keras.layers.Input(shape=([1, 1, 1]))
in0Con28853 = tf.keras.layers.Input(shape=([3, 2, 4, 1]))
in0Mul76796 = tf.keras.layers.Input(shape=([2, 1, 1, 2]))
in1Mul76796 = tf.keras.layers.Input(shape=([2, 1, 1, 2]))

Mul65047 = keras.layers.Multiply(name = 'Mul65047', )([in0Mul65047,in1Mul65047])
Zer59324 = keras.layers.ZeroPadding2D(padding=((1, 1), (1, 1)), name = 'Zer59324', )(Mul65047)
Con3967 = keras.layers.Conv2D(4, (1, 2),strides=(1, 1), padding='valid', dilation_rate=(1, 1), name = 'Con3967', )(Zer59324)
Res73311 = keras.layers.Reshape((3, 2, 4, 1), name = 'Res73311', )(Con3967)
Con28853 = keras.layers.Concatenate(axis=4, name = 'Con28853', )([Res73311,in0Con28853])
Mul76796 = keras.layers.Multiply(name = 'Mul76796', )([in0Mul76796,in1Mul76796])
Zer24899 = keras.layers.ZeroPadding3D(padding=((1, 0), (1, 0), (3, 0)), name = 'Zer24899', )(Mul76796)
Mul51672 = keras.layers.Multiply(name = 'Mul51672', )([Con28853,Zer24899])
Res92029 = keras.layers.Reshape((3, 2, 8), name = 'Res92029', )(Mul51672)
Res22883 = keras.layers.Reshape((3, 16), name = 'Res22883', )(Res92029)
Fla7086 = keras.layers.Flatten(name = 'Fla7086', )(Res22883)
Res91052 = keras.layers.Reshape((48, 1), name = 'Res91052', )(Fla7086)
Con7915 = keras.layers.Conv1D(2, (21),strides=(10), padding='same', dilation_rate=(1), name = 'Con7915', )(Res91052)
model = tf.keras.models.Model(inputs=[in0Mul65047,in1Mul65047,in0Con28853,in0Mul76796,in1Mul76796], outputs=Con7915)
w = model.get_layer('Con3967').get_weights() 
w[0] = np.array([[[[0.1982, 0.7239, 0.6605, 0.4183]], [[0.5271, 0.4813, 0.317, 0.9581]]]])
w[1] = np.array([0, 0, 0, 0])
model.get_layer('Con3967').set_weights(w) 
w = model.get_layer('Con7915').get_weights() 
w[0] = np.array([[[0.8687, 0.6591]], [[0.3817, 0.7367]], [[0.4105, 0.7573]], [[0.1797, 0.1166]], [[0.4785, 0.5381]], [[0.6462, 0.7351]], [[0.8461, 0.1675]], [[0.7009, 0.2435]], [[0.517, 0.1928]], [[0.5343, 0.8075]], [[0.2995, 0.87]], [[0.4261, 0.7592]], [[0.7176, 0.9216]], [[0.118, 0.4184]], [[0.898, 0.9858]], [[0.2767, 0.1845]], [[0.6591, 0.5581]], [[0.3791, 0.8715]], [[0.2765, 0.6619]], [[0.3032, 0.5215]], [[0.3052, 0.8416]]])
w[1] = np.array([0, 0])
model.get_layer('Con7915').set_weights(w) 
in0Mul65047 = tf.constant([[[[0.8471]]]])
in1Mul65047 = tf.constant([[[[0.6424]]]])
in0Con28853 = tf.constant([[[[[0.168], [0.948], [0.4303], [0.585]], [[0.3502], [0.4944], [0.9278], [0.4683]]], [[[0.4131], [0.0714], [0.0686], [0.8921]], [[0.1431], [0.7256], [0.0177], [0.7446]]], [[[0.558], [0.7482], [0.1316], [0.152]], [[0.8792], [0.5946], [0.339], [0.4469]]]]])
in0Mul76796 = tf.constant([[[[[0.8641, 0.1491]]], [[[0.784, 0.4401]]]]])
in1Mul76796 = tf.constant([[[[[0.7792, 0.6562]]], [[[0.7109, 0.9199]]]]])
print (np.array2string(model.predict([in0Mul65047,in1Mul65047,in0Con28853,in0Mul76796,in1Mul76796],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Con7915.png')

LMul65047 = multiply_layer([[[[[0.8471]]]], [[[[0.6424]]]]], Mul65047), 
LZer59324 = zero_padding2D_layer(Mul65047, 1, 1, 1, 1, Zer59324), 
LCon3967 = conv2D_layer(Zer59324, 1, 2,[[[[0.1982, 0.7239, 0.6605, 0.4183]], [[0.5271, 0.4813, 0.317, 0.9581]]]],[0, 0, 0, 0], 1, 1, false, 1, 1, Con3967), 
LRes73311 = reshape_layer(Con3967, [3, 2, 4, 1], Res73311), 
LCon28853 = concatenate_layer([Res73311,[[[[[0.168], [0.948], [0.4303], [0.585]], [[0.3502], [0.4944], [0.9278], [0.4683]]], [[[0.4131], [0.0714], [0.0686], [0.8921]], [[0.1431], [0.7256], [0.0177], [0.7446]]], [[[0.558], [0.7482], [0.1316], [0.152]], [[0.8792], [0.5946], [0.339], [0.4469]]]]]], 4, Con28853), 
LMul76796 = multiply_layer([[[[[[0.8641, 0.1491]]], [[[0.784, 0.4401]]]]], [[[[[0.7792, 0.6562]]], [[[0.7109, 0.9199]]]]]], Mul76796), 
LZer24899 = zero_padding3D_layer(Mul76796, 1, 0, 1, 0, 3, 0, Zer24899), 
LMul51672 = multiply_layer([Con28853,Zer24899], Mul51672), 
LRes92029 = reshape_layer(Mul51672, [3, 2, 8], Res92029), 
LRes22883 = reshape_layer(Res92029, [3, 16], Res22883), 
LFla7086 = flatten_layer(Res22883, Fla7086), 
LRes91052 = reshape_layer(Fla7086, [48, 1], Res91052), 
LCon7915 = conv1D_layer(Res91052, 21,[[[0.8687, 0.6591]], [[0.3817, 0.7367]], [[0.4105, 0.7573]], [[0.1797, 0.1166]], [[0.4785, 0.5381]], [[0.6462, 0.7351]], [[0.8461, 0.1675]], [[0.7009, 0.2435]], [[0.517, 0.1928]], [[0.5343, 0.8075]], [[0.2995, 0.87]], [[0.4261, 0.7592]], [[0.7176, 0.9216]], [[0.118, 0.4184]], [[0.898, 0.9858]], [[0.2767, 0.1845]], [[0.6591, 0.5581]], [[0.3791, 0.8715]], [[0.2765, 0.6619]], [[0.3032, 0.5215]], [[0.3052, 0.8416]]],[0, 0], 10, true, 1, Con7915), 
exec_layers([LMul65047,LZer59324,LCon3967,LRes73311,LCon28853,LMul76796,LZer24899,LMul51672,LRes92029,LRes22883,LFla7086,LRes91052,LCon7915],["Mul65047","Zer59324","Con3967","Res73311","Con28853","Mul76796","Zer24899","Mul51672","Res92029","Res22883","Fla7086","Res91052","Con7915"],Con7915,"Con7915")

Actual (Unparsed): [[[0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.1286344, 0.1490267], [0.1807384, 0.0434110], [0.0213493, 0.0756997]]]

Expected (Unparsed): [[[0.0,0.0],[0.0,0.0],[0.1286344072537709,0.14902665888591896],[0.18073835927884174,0.043411046550539706],[0.021349334874257997,0.07569967552025039]]]

Actual:   [[[0, 0], [0, 0], [0.1287, 0.1491], [0.1808, 0.0435], [0.0214, 0.0757]]]

Expected: [[[0, 0], [0, 0], [0.1287, 0.1491], [0.1808, 0.0435], [0.0214, 0.0757]]]