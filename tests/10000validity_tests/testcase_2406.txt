import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Sub43387 = tf.keras.layers.Input(shape=([3, 3, 2, 2]))
in1Sub43387 = tf.keras.layers.Input(shape=([3, 3, 2, 2]))
in0Max85376 = tf.keras.layers.Input(shape=([2, 2, 2]))
in0Con76569 = tf.keras.layers.Input(shape=([3, 3, 2]))

Sub43387 = keras.layers.Subtract(name = 'Sub43387', )([in0Sub43387,in1Sub43387])
ELU54117 = keras.layers.ELU(alpha=5.494909175458087, name = 'ELU54117', )(Sub43387)
Res99137 = keras.layers.Reshape((3, 3, 4), name = 'Res99137', )(ELU54117)
Max85376 = keras.layers.MaxPool2D(pool_size=(2, 2), strides=(1, 2), padding='valid', name = 'Max85376', )(in0Max85376)
Zer81958 = keras.layers.ZeroPadding2D(padding=((2, 0), (2, 0)), name = 'Zer81958', )(Max85376)
Con76569 = keras.layers.Concatenate(axis=3, name = 'Con76569', )([Zer81958,in0Con76569])
Mul79795 = keras.layers.Multiply(name = 'Mul79795', )([Res99137,Con76569])
model = tf.keras.models.Model(inputs=[in0Sub43387,in1Sub43387,in0Max85376,in0Con76569], outputs=Mul79795)
in0Sub43387 = tf.constant([[[[[0.3413, 0.7621], [0.3233, 0.438]], [[0.7951, 0.7893], [0.2864, 0.9301]], [[0.8728, 0.2379], [0.6749, 0.7243]]], [[[0.1315, 0.6519], [0.7001, 0.6515]], [[0.2513, 0.0172], [0.3479, 0.5279]], [[0.8753, 0.7047], [0.1913, 0.7269]]], [[[0.5366, 0.6046], [0.8883, 0.648]], [[0.5808, 0.7654], [0.776, 0.8092]], [[0.4749, 0.7161], [0.0401, 0.8645]]]]])
in1Sub43387 = tf.constant([[[[[0.7966, 0.1841], [0.9133, 0.5789]], [[0.4912, 0.1019], [0.2337, 0.6812]], [[0.6998, 0.6394], [0.4821, 0.5607]]], [[[0.5706, 0.4929], [0.1101, 0.9701]], [[0.9876, 0.8185], [0.5672, 0.2578]], [[0.0798, 0.0031], [0.9423, 0.1626]]], [[[0.7028, 0.9372], [0.5446, 0.8733]], [[0.8284, 0.5698], [0.0676, 0.8821]], [[0.9195, 0.3089], [0.2021, 0.14]]]]])
in0Max85376 = tf.constant([[[[1.9223, 1.2639], [1.6948, 1.1626]], [[1.4639, 1.4163], [1.8856, 1.0262]]]])
in0Con76569 = tf.constant([[[[0.5529, 0.8439], [0.6921, 0.5269], [0.2979, 0.8908]], [[0.4956, 0.7303], [0.192, 0.0662], [0.6411, 0.2198]], [[0.833, 0.4362], [0.4911, 0.3884], [0.4082, 0.6931]]]])
print (np.array2string(model.predict([in0Sub43387,in1Sub43387,in0Max85376,in0Con76569],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Mul79795.png')

LSub43387 = subtract_layer([[[[[0.3413, 0.7621], [0.3233, 0.438]], [[0.7951, 0.7893], [0.2864, 0.9301]], [[0.8728, 0.2379], [0.6749, 0.7243]]], [[[0.1315, 0.6519], [0.7001, 0.6515]], [[0.2513, 0.0172], [0.3479, 0.5279]], [[0.8753, 0.7047], [0.1913, 0.7269]]], [[[0.5366, 0.6046], [0.8883, 0.648]], [[0.5808, 0.7654], [0.776, 0.8092]], [[0.4749, 0.7161], [0.0401, 0.8645]]]]], [[[[[0.7966, 0.1841], [0.9133, 0.5789]], [[0.4912, 0.1019], [0.2337, 0.6812]], [[0.6998, 0.6394], [0.4821, 0.5607]]], [[[0.5706, 0.4929], [0.1101, 0.9701]], [[0.9876, 0.8185], [0.5672, 0.2578]], [[0.0798, 0.0031], [0.9423, 0.1626]]], [[[0.7028, 0.9372], [0.5446, 0.8733]], [[0.8284, 0.5698], [0.0676, 0.8821]], [[0.9195, 0.3089], [0.2021, 0.14]]]]], Sub43387), 
LELU54117 = elu_layer(Sub43387, 5.494909175458087, ELU54117), 
LRes99137 = reshape_layer(ELU54117, [3, 3, 4], Res99137), 
LMax85376 = max_pool2D_layer([[[[1.9223, 1.2639], [1.6948, 1.1626]], [[1.4639, 1.4163], [1.8856, 1.0262]]]], 2, 2, 1, 2, false, Max85376), 
LZer81958 = zero_padding2D_layer(Max85376, 2, 0, 2, 0, Zer81958), 
LCon76569 = concatenate_layer([Zer81958,[[[[0.5529, 0.8439], [0.6921, 0.5269], [0.2979, 0.8908]], [[0.4956, 0.7303], [0.192, 0.0662], [0.6411, 0.2198]], [[0.833, 0.4362], [0.4911, 0.3884], [0.4082, 0.6931]]]]], 3, Con76569), 
LMul79795 = multiply_layer([Res99137,Con76569], Mul79795), 
exec_layers([LSub43387,LELU54117,LRes99137,LMax85376,LZer81958,LCon76569,LMul79795],["Sub43387","ELU54117","Res99137","Max85376","Zer81958","Con76569","Mul79795"],Mul79795,"Mul79795")

Actual (Unparsed): [[[[-0.0000000, 0.0000000, -1.3540140, -0.6094325], [0.0000000, 0.0000000, 0.0364737, 0.1311454], [0.0000000, -0.0000000, 0.0574351, 0.1457349]], [[-0.0000000, 0.0000000, 0.2924040, -1.0948629], [-0.0000000, -0.0000000, -0.2077542, 0.0178806], [0.0000000, 0.0000000, -1.8604031, 0.1240331]], [[-0.0000000, -0.0000000, 0.2863021, -0.4835064], [-0.0000000, 0.0000000, 0.3478953, -0.1500491], [-3.7912160, 0.5767174, -0.3354636, 0.5021509]]]]

Expected (Unparsed): [[[[-0.0,0.0,-1.354014000967877,-0.6094325430009956],[0.0,0.0,0.03647367,0.13114541000000002],[0.0,-0.0,0.05743512000000003,0.14573488000000007]],[[-0.0,0.0,0.292404,-1.0948629005370891],[-0.0,-0.0,-0.20775424336832932,0.017880620000000003],[0.0,0.0,-1.860403079517349,0.12403314]],[[-0.0,-0.0,0.2863021,-0.4835064191298632],[-0.0,0.0,0.34789524,-0.15004910085019302],[-3.79121617388787,0.5767173599999998,-0.3354636573559604,0.5021509500000001]]]]

Actual:   [[[[-0, 0, -1.354, -0.6094], [0, 0, 0.0365, 0.1312], [0, -0, 0.0575, 0.1458]], [[-0, 0, 0.2925, -1.0948], [-0, -0, -0.2077, 0.0179], [0, 0, -1.8604, 0.1241]], [[-0, -0, 0.2864, -0.4835], [-0, 0, 0.3479, -0.15], [-3.7912, 0.5768, -0.3354, 0.5022]]]]

Expected: [[[[-0, 0, -1.354, -0.6094], [0, 0, 0.0365, 0.1312], [0, -0, 0.0575, 0.1458]], [[-0, 0, 0.2925, -1.0948], [-0, -0, -0.2077, 0.0179], [0, 0, -1.8604, 0.1241]], [[-0, -0, 0.2864, -0.4835], [-0, 0, 0.3479, -0.15], [-3.7912, 0.5768, -0.3354, 0.5022]]]]