import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Sub87535 = tf.keras.layers.Input(shape=([3, 3, 3]))
in1Sub87535 = tf.keras.layers.Input(shape=([3, 3, 3]))
in0Max8383 = tf.keras.layers.Input(shape=([1, 2, 1]))
in1Max8383 = tf.keras.layers.Input(shape=([1, 2, 1]))
in0Con71427 = tf.keras.layers.Input(shape=([3, 3, 2]))

Sub87535 = keras.layers.Subtract(name = 'Sub87535', )([in0Sub87535,in1Sub87535])
Max8383 = keras.layers.Maximum(name = 'Max8383', )([in0Max8383,in1Max8383])
Zer59204 = keras.layers.ZeroPadding2D(padding=((2, 0), (1, 0)), name = 'Zer59204', )(Max8383)
Con71427 = keras.layers.Concatenate(axis=3, name = 'Con71427', )([Zer59204,in0Con71427])
Mul82580 = keras.layers.Multiply(name = 'Mul82580', )([Sub87535,Con71427])
model = tf.keras.models.Model(inputs=[in0Sub87535,in1Sub87535,in0Max8383,in1Max8383,in0Con71427], outputs=Mul82580)
in0Sub87535 = tf.constant([[[[0.6905, 0.5405, 0.355], [0.7839, 0.7969, 0.1987], [1, 0.3789, 0.0449]], [[0.3756, 0.7116, 0.401], [0.8157, 0.375, 0.6354], [0.7627, 0.2787, 0.9328]], [[0.8455, 0.3917, 0.6739], [0.9046, 0.0551, 0.3026], [0.3849, 0.0375, 0.425]]]])
in1Sub87535 = tf.constant([[[[0.5523, 0.9126, 0.7678], [0.2163, 0.3814, 0.7375], [0.8712, 0.7449, 0.6808]], [[0.8456, 0.834, 0.207], [0.4251, 0.3855, 0.0197], [0.4665, 0.863, 0.522]], [[0.0556, 0.8224, 0.0672], [0.0573, 0.3803, 0.105], [0.9117, 0.801, 0.5623]]]])
in0Max8383 = tf.constant([[[[0.1936], [0.6648]]]])
in1Max8383 = tf.constant([[[[0.989], [0.8221]]]])
in0Con71427 = tf.constant([[[[0.451, 0.0908], [0.3453, 0.3059], [0.052, 0.7383]], [[0.7118, 0.655], [0.4639, 0.1863], [0.7267, 0.6675]], [[0.6142, 0.4101], [0.9004, 0.9218], [0.4747, 0.7364]]]])
print (np.array2string(model.predict([in0Sub87535,in1Sub87535,in0Max8383,in1Max8383,in0Con71427],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Mul82580.png')

LSub87535 = subtract_layer([[[[0.6905, 0.5405, 0.355], [0.7839, 0.7969, 0.1987], [1, 0.3789, 0.0449]], [[0.3756, 0.7116, 0.401], [0.8157, 0.375, 0.6354], [0.7627, 0.2787, 0.9328]], [[0.8455, 0.3917, 0.6739], [0.9046, 0.0551, 0.3026], [0.3849, 0.0375, 0.425]]]], [[[[0.5523, 0.9126, 0.7678], [0.2163, 0.3814, 0.7375], [0.8712, 0.7449, 0.6808]], [[0.8456, 0.834, 0.207], [0.4251, 0.3855, 0.0197], [0.4665, 0.863, 0.522]], [[0.0556, 0.8224, 0.0672], [0.0573, 0.3803, 0.105], [0.9117, 0.801, 0.5623]]]], Sub87535), 
LMax8383 = maximum_layer([[[[[0.1936], [0.6648]]]], [[[[0.989], [0.8221]]]]], Max8383), 
LZer59204 = zero_padding2D_layer(Max8383, 2, 0, 1, 0, Zer59204), 
LCon71427 = concatenate_layer([Zer59204,[[[[0.451, 0.0908], [0.3453, 0.3059], [0.052, 0.7383]], [[0.7118, 0.655], [0.4639, 0.1863], [0.7267, 0.6675]], [[0.6142, 0.4101], [0.9004, 0.9218], [0.4747, 0.7364]]]]], 3, Con71427), 
LMul82580 = multiply_layer([Sub87535,Con71427], Mul82580), 
exec_layers([LSub87535,LMax8383,LZer59204,LCon71427,LMul82580],["Sub87535","Max8383","Zer59204","Con71427","Mul82580"],Mul82580,"Mul82580")

Actual (Unparsed): [[[[0.0000000, -0.1678171, -0.0374822], [0.0000000, 0.1434721, -0.1648189], [0.0000000, -0.0190320, -0.4694850]], [[-0.0000000, -0.0871243, 0.1270700], [0.0000000, -0.0048710, 0.1147049], [0.0000000, -0.4246108, 0.2742090]], [[0.0000000, -0.2645359, 0.2488077], [0.8379797, -0.2928101, 0.1821477], [-0.4330823, -0.3624335, -0.1011077]]]]

Expected (Unparsed): [[[[0.0,-0.1678171,-0.03748224000000001],[0.0,0.14347215000000002,-0.16481892],[0.0,-0.019032,-0.4694849699999999]],[[-0.0,-0.08712431999999996,0.12707000000000002],[0.0,-0.004870950000000004,0.11470490999999998],[0.0,-0.42461081000000006,0.274209]],[[0.0,-0.26453594,0.24880767],[0.8379796999999999,-0.29281008000000003,0.18214767999999998],[-0.43308228,-0.36243345000000005,-0.10110772000000003]]]]

Actual:   [[[[0, -0.1678, -0.0374], [0, 0.1435, -0.1648], [0, -0.019, -0.4694]], [[-0, -0.0871, 0.1271], [0, -0.0048, 0.1148], [0, -0.4246, 0.2743]], [[0, -0.2645, 0.2489], [0.838, -0.2928, 0.1822], [-0.433, -0.3624, -0.1011]]]]

Expected: [[[[0, -0.1678, -0.0374], [0, 0.1435, -0.1648], [0, -0.019, -0.4694]], [[-0, -0.0871, 0.1271], [0, -0.0048, 0.1148], [0, -0.4246, 0.2743]], [[0, -0.2645, 0.2489], [0.838, -0.2928, 0.1822], [-0.433, -0.3624, -0.1011]]]]