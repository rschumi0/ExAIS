import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Mul80367 = tf.keras.layers.Input(shape=([1, 2, 2, 1]))
in1Mul80367 = tf.keras.layers.Input(shape=([1, 2, 2, 1]))

Mul80367 = keras.layers.Multiply(name = 'Mul80367', )([in0Mul80367,in1Mul80367])
Res96908 = keras.layers.Reshape((1, 2, 2), name = 'Res96908', )(Mul80367)
Res7125 = keras.layers.Reshape((1, 4), name = 'Res7125', )(Res96908)
Ave64468 = keras.layers.AveragePooling1D(pool_size=(1), name = 'Ave64468', )(Res7125)
model = tf.keras.models.Model(inputs=[in0Mul80367,in1Mul80367], outputs=Ave64468)
in0Mul80367 = tf.constant([[[[[0.5262], [0.1676]], [[0.5463], [0.5209]]]]])
in1Mul80367 = tf.constant([[[[[0.8295], [0.9294]], [[0.5423], [0.7611]]]]])
print (np.array2string(model.predict([in0Mul80367,in1Mul80367],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Ave64468.png')

LMul80367 = multiply_layer([[[[[[0.5262], [0.1676]], [[0.5463], [0.5209]]]]], [[[[[0.8295], [0.9294]], [[0.5423], [0.7611]]]]]], Mul80367), 
LRes96908 = reshape_layer(Mul80367, [1, 2, 2], Res96908), 
LRes7125 = reshape_layer(Res96908, [1, 4], Res7125), 
LAve64468 = average_pooling1D_layer(Res7125, 1, Ave64468), 
exec_layers([LMul80367,LRes96908,LRes7125,LAve64468],["Mul80367","Res96908","Res7125","Ave64468"],Ave64468,"Ave64468")

Actual (Unparsed): [[[0.4364829, 0.1557674, 0.2962585, 0.3964570]]]

Expected (Unparsed): [[[0.4364829,0.15576744,0.29625849,0.39645699]]]

Actual:   [[[0.4365, 0.1558, 0.2963, 0.3965]]]

Expected: [[[0.4365, 0.1558, 0.2963, 0.3965]]]