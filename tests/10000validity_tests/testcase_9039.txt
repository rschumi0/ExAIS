import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Lay17385 = tf.keras.layers.Input(shape=([3, 4]))

Lay17385 = keras.layers.LayerNormalization(axis=1, epsilon=1.8712379880550556, name = 'Lay17385', )(in0Lay17385)
GRU36787 = keras.layers.GRU(1,reset_after=False, recurrent_activation='sigmoid', name = 'GRU36787', )(Lay17385)
ReL42459 = keras.layers.ReLU(max_value=8.127456382125041, negative_slope=7.11930971088028, threshold=9.13232871616744, name = 'ReL42459', )(GRU36787)
model = tf.keras.models.Model(inputs=[in0Lay17385], outputs=ReL42459)
w = model.get_layer('GRU36787').get_weights() 
w[0] = np.array([[9, 8, 6], [8, 4, 1], [10, 5, 9], [1, 5, 1]])
w[1] = np.array([[4, 4, 6]])
w[2] = np.array([1, 7, 6])
model.get_layer('GRU36787').set_weights(w) 
in0Lay17385 = tf.constant([[[1.792, 1.5938, 1.3755, 1.5156], [1.0132, 1.0254, 1.6761, 1.1839], [1.9061, 1.4786, 1.959, 1.7272]]])
print (np.array2string(model.predict([in0Lay17385],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='ReL42459.png')

LLay17385 = layer_normalization_layer([[[1.792, 1.5938, 1.3755, 1.5156], [1.0132, 1.0254, 1.6761, 1.1839], [1.9061, 1.4786, 1.959, 1.7272]]], 1, 1.8712379880550556, Lay17385), 
LGRU36787 = gru_layer(Lay17385,[[9, 8, 6], [8, 4, 1], [10, 5, 9], [1, 5, 1]],[[4, 4, 6]],[1, 7, 6], false, GRU36787), 
LReL42459 = relu_layer(GRU36787, 8.127456382125041, 7.11930971088028, 9.13232871616744, ReL42459), 
exec_layers([LLay17385,LGRU36787,LReL42459],["Lay17385","GRU36787","ReL42459"],ReL42459,"ReL42459")

Actual (Unparsed): [[-58.0081920]]

Expected (Unparsed): [[-58.008191977480166]]

Actual:   [[-58.0081]]

Expected: [[-58.0081]]