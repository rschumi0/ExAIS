import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Min50229 = tf.keras.layers.Input(shape=([2, 2]))
in1Min50229 = tf.keras.layers.Input(shape=([2, 2]))

Min50229 = keras.layers.Minimum(name = 'Min50229', )([in0Min50229,in1Min50229])
Res48178 = keras.layers.Reshape((2, 2, 1), name = 'Res48178', )(Min50229)
Res8221 = keras.layers.Reshape((2, 2, 1, 1), name = 'Res8221', )(Res48178)
Up_27255 = keras.layers.UpSampling3D(size=(1, 1, 1), name = 'Up_27255', )(Res8221)
model = tf.keras.models.Model(inputs=[in0Min50229,in1Min50229], outputs=Up_27255)
in0Min50229 = tf.constant([[[0.0724, 0.5545], [0.7697, 0.2963]]])
in1Min50229 = tf.constant([[[0.5298, 0.5756], [0.0264, 0.5662]]])
print (np.array2string(model.predict([in0Min50229,in1Min50229],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Up_27255.png')

LMin50229 = minimum_layer([[[[0.0724, 0.5545], [0.7697, 0.2963]]], [[[0.5298, 0.5756], [0.0264, 0.5662]]]], Min50229), 
LRes48178 = reshape_layer(Min50229, [2, 2, 1], Res48178), 
LRes8221 = reshape_layer(Res48178, [2, 2, 1, 1], Res8221), 
LUp_27255 = up_sampling3D_layer(Res8221, 1, 1, 1, Up_27255), 
exec_layers([LMin50229,LRes48178,LRes8221,LUp_27255],["Min50229","Res48178","Res8221","Up_27255"],Up_27255,"Up_27255")

Actual (Unparsed): [[[[[0.0724000]], [[0.5545000]]], [[[0.0264000]], [[0.2963000]]]]]

Expected (Unparsed): [[[[[0.0724]],[[0.5545]]],[[[0.0264]],[[0.2963]]]]]

Actual:   [[[[[0.0724]], [[0.5545]]], [[[0.0264]], [[0.2963]]]]]

Expected: [[[[[0.0724]], [[0.5545]]], [[[0.0264]], [[0.2963]]]]]