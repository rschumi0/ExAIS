import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Fla16282 = tf.keras.layers.Input(shape=([2, 1]))

Fla16282 = keras.layers.Flatten(name = 'Fla16282', )(in0Fla16282)
Res73084 = keras.layers.Reshape((2, 1), name = 'Res73084', )(Fla16282)
Res49271 = keras.layers.Reshape((2, 1, 1), name = 'Res49271', )(Res73084)
Up_14084 = keras.layers.UpSampling2D(size=(1, 2), name = 'Up_14084', )(Res49271)
PRe88165 = keras.layers.PReLU(name = 'PRe88165', )(Up_14084)
model = tf.keras.models.Model(inputs=[in0Fla16282], outputs=PRe88165)
w = model.get_layer('PRe88165').get_weights() 
w[0] = np.array([[[0.1892], [0.0918]], [[0.3324], [0.2868]]])
model.get_layer('PRe88165').set_weights(w) 
in0Fla16282 = tf.constant([[[1.9976], [1.1073]]])
print (np.array2string(model.predict([in0Fla16282],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='PRe88165.png')

LFla16282 = flatten_layer([[[1.9976], [1.1073]]], Fla16282), 
LRes73084 = reshape_layer(Fla16282, [2, 1], Res73084), 
LRes49271 = reshape_layer(Res73084, [2, 1, 1], Res49271), 
LUp_14084 = up_sampling2D_layer(Res49271, 1, 2, Up_14084), 
LPRe88165 = prelu_layer(Up_14084, [[[0.1892], [0.0918]], [[0.3324], [0.2868]]], PRe88165), 
exec_layers([LFla16282,LRes73084,LRes49271,LUp_14084,LPRe88165],["Fla16282","Res73084","Res49271","Up_14084","PRe88165"],PRe88165,"PRe88165")

Actual (Unparsed): [[[[1.9976000], [1.9976000]], [[1.1073000], [1.1073000]]]]

Expected (Unparsed): [[[[1.9976],[1.9976]],[[1.1073],[1.1073]]]]

Actual:   [[[[1.9976], [1.9976]], [[1.1073], [1.1073]]]]

Expected: [[[[1.9976], [1.9976]], [[1.1073], [1.1073]]]]