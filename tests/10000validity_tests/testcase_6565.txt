import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Min9019 = tf.keras.layers.Input(shape=([2, 1, 1, 1]))
in1Min9019 = tf.keras.layers.Input(shape=([2, 1, 1, 1]))
in0Con91008 = tf.keras.layers.Input(shape=([2, 3, 1, 1]))
in0Sub21457 = tf.keras.layers.Input(shape=([2, 2, 3]))
in1Sub21457 = tf.keras.layers.Input(shape=([2, 2, 3]))
in0Con98411 = tf.keras.layers.Input(shape=([2, 3, 1, 1]))
in0Min79300 = tf.keras.layers.Input(shape=([1, 2]))
in1Min79300 = tf.keras.layers.Input(shape=([1, 2]))
in0Con13289 = tf.keras.layers.Input(shape=([2, 3, 1, 1]))
in0Min31725 = tf.keras.layers.Input(shape=([2, 1, 1, 2]))
in1Min31725 = tf.keras.layers.Input(shape=([2, 1, 1, 2]))

Min9019 = keras.layers.Minimum(name = 'Min9019', )([in0Min9019,in1Min9019])
Zer3118 = keras.layers.ZeroPadding3D(padding=((0, 0), (2, 0), (0, 0)), name = 'Zer3118', )(Min9019)
Con91008 = keras.layers.Concatenate(axis=4, name = 'Con91008', )([Zer3118,in0Con91008])
Sub21457 = keras.layers.Subtract(name = 'Sub21457', )([in0Sub21457,in1Sub21457])
Res40873 = keras.layers.Reshape((2, 2, 3, 1), name = 'Res40873', )(Sub21457)
Glo80687 = keras.layers.GlobalAveragePooling3D(name = 'Glo80687', )(Res40873)
Res77772 = keras.layers.Reshape((1, 1), name = 'Res77772', )(Glo80687)
Res88941 = keras.layers.Reshape((1, 1, 1), name = 'Res88941', )(Res77772)
Res11256 = keras.layers.Reshape((1, 1, 1, 1), name = 'Res11256', )(Res88941)
Zer99621 = keras.layers.ZeroPadding3D(padding=((1, 0), (2, 0), (0, 0)), name = 'Zer99621', )(Res11256)
Con98411 = keras.layers.Concatenate(axis=4, name = 'Con98411', )([Zer99621,in0Con98411])
Min79300 = keras.layers.Minimum(name = 'Min79300', )([in0Min79300,in1Min79300])
Res56463 = keras.layers.Reshape((1, 2, 1), name = 'Res56463', )(Min79300)
Res71752 = keras.layers.Reshape((1, 2, 1, 1), name = 'Res71752', )(Res56463)
Zer58192 = keras.layers.ZeroPadding3D(padding=((1, 0), (1, 0), (0, 0)), name = 'Zer58192', )(Res71752)
Con13289 = keras.layers.Concatenate(axis=4, name = 'Con13289', )([Zer58192,in0Con13289])
Min31725 = keras.layers.Minimum(name = 'Min31725', )([in0Min31725,in1Min31725])
Zer23248 = keras.layers.ZeroPadding3D(padding=((0, 0), (2, 0), (0, 0)), name = 'Zer23248', )(Min31725)
Min4070 = keras.layers.Minimum(name = 'Min4070', )([Con13289,Zer23248])
Thr23006 = keras.layers.ThresholdedReLU(theta=7.874188084814245, name = 'Thr23006', )(Min4070)
Bat70384 = keras.layers.BatchNormalization(axis=1, epsilon=0.4020260917289963,  name = 'Bat70384', )(Thr23006)
Add48331 = keras.layers.Add(name = 'Add48331', )([Con98411,Bat70384])
Min24847 = keras.layers.Minimum(name = 'Min24847', )([Con91008,Add48331])
model = tf.keras.models.Model(inputs=[in0Min9019,in1Min9019,in0Con91008,in0Sub21457,in1Sub21457,in0Con98411,in0Min79300,in1Min79300,in0Con13289,in0Min31725,in1Min31725], outputs=Min24847)
w = model.get_layer('Bat70384').get_weights() 
w[0] = np.array([0.2502, 0.703])
w[1] = np.array([0.4916, 0.2611])
w[2] = np.array([0.0064, 0.8392])
w[3] = np.array([0.4577, 0.216])
model.get_layer('Bat70384').set_weights(w) 
in0Min9019 = tf.constant([[[[[0.3695]]], [[[0.8326]]]]])
in1Min9019 = tf.constant([[[[[0.1827]]], [[[0.1821]]]]])
in0Con91008 = tf.constant([[[[[0.5007]], [[0.4157]], [[0.877]]], [[[0.3636]], [[0.5908]], [[0.2985]]]]])
in0Sub21457 = tf.constant([[[[0.9885, 0.4218, 0.4236], [0.7538, 0.6339, 0.023]], [[0.274, 0.0491, 0.3291], [0.6107, 0.8417, 0.1575]]]])
in1Sub21457 = tf.constant([[[[0.8055, 0.3803, 0.6034], [0.1003, 0.1838, 0.3761]], [[0.6141, 0.8403, 0.015], [0.665, 0.1248, 0.0762]]]])
in0Con98411 = tf.constant([[[[[0.1407]], [[0.5248]], [[0.8015]]], [[[0.3023]], [[0.8764]], [[0.4686]]]]])
in0Min79300 = tf.constant([[[0.6937, 0.3689]]])
in1Min79300 = tf.constant([[[0.5495, 0.0556]]])
in0Con13289 = tf.constant([[[[[0.6619]], [[0.8482]], [[0.3895]]], [[[0.7145]], [[0.346]], [[0.1204]]]]])
in0Min31725 = tf.constant([[[[[0.8729, 0.2749]]], [[[0.9831, 0.3057]]]]])
in1Min31725 = tf.constant([[[[[0.6597, 0.929]]], [[[0.7598, 0.1419]]]]])
print (np.array2string(model.predict([in0Min9019,in1Min9019,in0Con91008,in0Sub21457,in1Sub21457,in0Con98411,in0Min79300,in1Min79300,in0Con13289,in0Min31725,in1Min31725],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Min24847.png')

LMin9019 = minimum_layer([[[[[[0.3695]]], [[[0.8326]]]]], [[[[[0.1827]]], [[[0.1821]]]]]], Min9019), 
LZer3118 = zero_padding3D_layer(Min9019, 0, 0, 2, 0, 0, 0, Zer3118), 
LCon91008 = concatenate_layer([Zer3118,[[[[[0.5007]], [[0.4157]], [[0.877]]], [[[0.3636]], [[0.5908]], [[0.2985]]]]]], 4, Con91008), 
LSub21457 = subtract_layer([[[[0.9885, 0.4218, 0.4236], [0.7538, 0.6339, 0.023]], [[0.274, 0.0491, 0.3291], [0.6107, 0.8417, 0.1575]]]], [[[[0.8055, 0.3803, 0.6034], [0.1003, 0.1838, 0.3761]], [[0.6141, 0.8403, 0.015], [0.665, 0.1248, 0.0762]]]], Sub21457), 
LRes40873 = reshape_layer(Sub21457, [2, 2, 3, 1], Res40873), 
LGlo80687 = global_average_pooling3D_layer(Res40873, Glo80687), 
LRes77772 = reshape_layer(Glo80687, [1, 1], Res77772), 
LRes88941 = reshape_layer(Res77772, [1, 1, 1], Res88941), 
LRes11256 = reshape_layer(Res88941, [1, 1, 1, 1], Res11256), 
LZer99621 = zero_padding3D_layer(Res11256, 1, 0, 2, 0, 0, 0, Zer99621), 
LCon98411 = concatenate_layer([Zer99621,[[[[[0.1407]], [[0.5248]], [[0.8015]]], [[[0.3023]], [[0.8764]], [[0.4686]]]]]], 4, Con98411), 
LMin79300 = minimum_layer([[[[0.6937, 0.3689]]], [[[0.5495, 0.0556]]]], Min79300), 
LRes56463 = reshape_layer(Min79300, [1, 2, 1], Res56463), 
LRes71752 = reshape_layer(Res56463, [1, 2, 1, 1], Res71752), 
LZer58192 = zero_padding3D_layer(Res71752, 1, 0, 1, 0, 0, 0, Zer58192), 
LCon13289 = concatenate_layer([Zer58192,[[[[[0.6619]], [[0.8482]], [[0.3895]]], [[[0.7145]], [[0.346]], [[0.1204]]]]]], 4, Con13289), 
LMin31725 = minimum_layer([[[[[[0.8729, 0.2749]]], [[[0.9831, 0.3057]]]]], [[[[[0.6597, 0.929]]], [[[0.7598, 0.1419]]]]]], Min31725), 
LZer23248 = zero_padding3D_layer(Min31725, 0, 0, 2, 0, 0, 0, Zer23248), 
LMin4070 = minimum_layer([Con13289,Zer23248], Min4070), 
LThr23006 = thresholded_relu_layer(Min4070, 7.874188084814245, Thr23006), 
LBat70384 = batch_normalization_layer(Thr23006, 1, 0.4020260917289963, [0.2502, 0.703], [0.4916, 0.2611], [0.0064, 0.8392], [0.4577, 0.216], Bat70384), 
LAdd48331 = add_layer([Con98411,Bat70384], Add48331), 
LMin24847 = minimum_layer([Con91008,Add48331], Min24847), 
exec_layers([LMin9019,LZer3118,LCon91008,LSub21457,LRes40873,LGlo80687,LRes77772,LRes88941,LRes11256,LZer99621,LCon98411,LMin79300,LRes56463,LRes71752,LZer58192,LCon13289,LMin31725,LZer23248,LMin4070,LThr23006,LBat70384,LAdd48331,LMin24847],["Min9019","Zer3118","Con91008","Sub21457","Res40873","Glo80687","Res77772","Res88941","Res11256","Zer99621","Con98411","Min79300","Res56463","Res71752","Zer58192","Con13289","Min31725","Zer23248","Min4070","Thr23006","Bat70384","Add48331","Min24847"],Min24847,"Min24847")

Actual (Unparsed): [[[[[0.0000000, 0.5007000]], [[0.0000000, 0.4157000]], [[0.1827000, 0.8770000]]], [[[-0.4893425, -0.1870424]], [[-0.4893425, 0.3870575]], [[-0.4291841, -0.0207424]]]]]

Expected (Unparsed): [[[[[0,0.5007]],[[0,0.4157]],[[0.1827,0.877]]],[[[-0.4893424540403216,-0.1870424540403216]],[[-0.4893424540403216,0.38705754595967834]],[[-0.4291841207069883,-0.0207424540403216]]]]]

Actual:   [[[[[0, 0.5007]], [[0, 0.4157]], [[0.1827, 0.877]]], [[[-0.4893, -0.187]], [[-0.4893, 0.3871]], [[-0.4291, -0.0207]]]]]

Expected: [[[[[0, 0.5007]], [[0, 0.4157]], [[0.1827, 0.877]]], [[[-0.4893, -0.187]], [[-0.4893, 0.3871]], [[-0.4291, -0.0207]]]]]