import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Ave23430 = tf.keras.layers.Input(shape=([1, 1, 2]))
in1Ave23430 = tf.keras.layers.Input(shape=([1, 1, 2]))
in0Ave62362 = tf.keras.layers.Input(shape=([2, 2, 2]))
in1Ave62362 = tf.keras.layers.Input(shape=([2, 2, 2]))

Ave23430 = keras.layers.Average(name = 'Ave23430', )([in0Ave23430,in1Ave23430])
Res69866 = keras.layers.Reshape((1, 1, 2, 1), name = 'Res69866', )(Ave23430)
Zer11859 = keras.layers.ZeroPadding3D(padding=((3, 0), (3, 0), (2, 0)), name = 'Zer11859', )(Res69866)
Ave62362 = keras.layers.Average(name = 'Ave62362', )([in0Ave62362,in1Ave62362])
Res64070 = keras.layers.Reshape((2, 2, 2, 1), name = 'Res64070', )(Ave62362)
Zer97808 = keras.layers.ZeroPadding3D(padding=((1, 1), (1, 1), (1, 1)), name = 'Zer97808', )(Res64070)
Thr17560 = keras.layers.ThresholdedReLU(theta=7.594948846337144, name = 'Thr17560', )(Zer97808)
Add5318 = keras.layers.Add(name = 'Add5318', )([Zer11859,Thr17560])
Den6021 = keras.layers.Dense(1,name = 'Den6021', )(Add5318)
model = tf.keras.models.Model(inputs=[in0Ave23430,in1Ave23430,in0Ave62362,in1Ave62362], outputs=Den6021)
w = model.get_layer('Den6021').get_weights() 
w[0] = np.array([[0.2605]])
w[1] = np.array([0.6163])
model.get_layer('Den6021').set_weights(w) 
in0Ave23430 = tf.constant([[[[0.4985, 0.703]]]])
in1Ave23430 = tf.constant([[[[0.8705, 0.4152]]]])
in0Ave62362 = tf.constant([[[[0.363, 0.5794], [0.7158, 0.5286]], [[0.9876, 0.22], [0.1312, 0.8984]]]])
in1Ave62362 = tf.constant([[[[0.3163, 0.2635], [0.4192, 0.9987]], [[0.3936, 0.7145], [0.9824, 0.3927]]]])
print (np.array2string(model.predict([in0Ave23430,in1Ave23430,in0Ave62362,in1Ave62362],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Den6021.png')

LAve23430 = average_layer([[[[[0.4985, 0.703]]]], [[[[0.8705, 0.4152]]]]], Ave23430), 
LRes69866 = reshape_layer(Ave23430, [1, 1, 2, 1], Res69866), 
LZer11859 = zero_padding3D_layer(Res69866, 3, 0, 3, 0, 2, 0, Zer11859), 
LAve62362 = average_layer([[[[[0.363, 0.5794], [0.7158, 0.5286]], [[0.9876, 0.22], [0.1312, 0.8984]]]], [[[[0.3163, 0.2635], [0.4192, 0.9987]], [[0.3936, 0.7145], [0.9824, 0.3927]]]]], Ave62362), 
LRes64070 = reshape_layer(Ave62362, [2, 2, 2, 1], Res64070), 
LZer97808 = zero_padding3D_layer(Res64070, 1, 1, 1, 1, 1, 1, Zer97808), 
LThr17560 = thresholded_relu_layer(Zer97808, 7.594948846337144, Thr17560), 
LAdd5318 = add_layer([Zer11859,Thr17560], Add5318), 
LDen6021 = dense_layer(Add5318, [[0.2605]],[0.6163], Den6021), 
exec_layers([LAve23430,LRes69866,LZer11859,LAve62362,LRes64070,LZer97808,LThr17560,LAdd5318,LDen6021],["Ave23430","Res69866","Zer11859","Ave62362","Res64070","Zer97808","Thr17560","Add5318","Den6021"],Den6021,"Den6021")

Actual (Unparsed): [[[[[0.6163000], [0.6163000], [0.6163000], [0.6163000]], [[0.6163000], [0.6163000], [0.6163000], [0.6163000]], [[0.6163000], [0.6163000], [0.6163000], [0.6163000]], [[0.6163000], [0.6163000], [0.6163000], [0.6163000]]], [[[0.6163000], [0.6163000], [0.6163000], [0.6163000]], [[0.6163000], [0.6163000], [0.6163000], [0.6163000]], [[0.6163000], [0.6163000], [0.6163000], [0.6163000]], [[0.6163000], [0.6163000], [0.6163000], [0.6163000]]], [[[0.6163000], [0.6163000], [0.6163000], [0.6163000]], [[0.6163000], [0.6163000], [0.6163000], [0.6163000]], [[0.6163000], [0.6163000], [0.6163000], [0.6163000]], [[0.6163000], [0.6163000], [0.6163000], [0.6163000]]], [[[0.6163000], [0.6163000], [0.6163000], [0.6163000]], [[0.6163000], [0.6163000], [0.6163000], [0.6163000]], [[0.6163000], [0.6163000], [0.6163000], [0.6163000]], [[0.6163000], [0.6163000], [0.7946123], [0.7619456]]]]]

Expected (Unparsed): [[[[[0.6163],[0.6163],[0.6163],[0.6163]],[[0.6163],[0.6163],[0.6163],[0.6163]],[[0.6163],[0.6163],[0.6163],[0.6163]],[[0.6163],[0.6163],[0.6163],[0.6163]]],[[[0.6163],[0.6163],[0.6163],[0.6163]],[[0.6163],[0.6163],[0.6163],[0.6163]],[[0.6163],[0.6163],[0.6163],[0.6163]],[[0.6163],[0.6163],[0.6163],[0.6163]]],[[[0.6163],[0.6163],[0.6163],[0.6163]],[[0.6163],[0.6163],[0.6163],[0.6163]],[[0.6163],[0.6163],[0.6163],[0.6163]],[[0.6163],[0.6163],[0.6163],[0.6163]]],[[[0.6163],[0.6163],[0.6163],[0.6163]],[[0.6163],[0.6163],[0.6163],[0.6163]],[[0.6163],[0.6163],[0.6163],[0.6163]],[[0.6163],[0.6163],[0.7946122499999999],[0.76194555]]]]]

Actual:   [[[[[0.6163], [0.6163], [0.6163], [0.6163]], [[0.6163], [0.6163], [0.6163], [0.6163]], [[0.6163], [0.6163], [0.6163], [0.6163]], [[0.6163], [0.6163], [0.6163], [0.6163]]], [[[0.6163], [0.6163], [0.6163], [0.6163]], [[0.6163], [0.6163], [0.6163], [0.6163]], [[0.6163], [0.6163], [0.6163], [0.6163]], [[0.6163], [0.6163], [0.6163], [0.6163]]], [[[0.6163], [0.6163], [0.6163], [0.6163]], [[0.6163], [0.6163], [0.6163], [0.6163]], [[0.6163], [0.6163], [0.6163], [0.6163]], [[0.6163], [0.6163], [0.6163], [0.6163]]], [[[0.6163], [0.6163], [0.6163], [0.6163]], [[0.6163], [0.6163], [0.6163], [0.6163]], [[0.6163], [0.6163], [0.6163], [0.6163]], [[0.6163], [0.6163], [0.7947], [0.762]]]]]

Expected: [[[[[0.6163], [0.6163], [0.6163], [0.6163]], [[0.6163], [0.6163], [0.6163], [0.6163]], [[0.6163], [0.6163], [0.6163], [0.6163]], [[0.6163], [0.6163], [0.6163], [0.6163]]], [[[0.6163], [0.6163], [0.6163], [0.6163]], [[0.6163], [0.6163], [0.6163], [0.6163]], [[0.6163], [0.6163], [0.6163], [0.6163]], [[0.6163], [0.6163], [0.6163], [0.6163]]], [[[0.6163], [0.6163], [0.6163], [0.6163]], [[0.6163], [0.6163], [0.6163], [0.6163]], [[0.6163], [0.6163], [0.6163], [0.6163]], [[0.6163], [0.6163], [0.6163], [0.6163]]], [[[0.6163], [0.6163], [0.6163], [0.6163]], [[0.6163], [0.6163], [0.6163], [0.6163]], [[0.6163], [0.6163], [0.6163], [0.6163]], [[0.6163], [0.6163], [0.7947], [0.762]]]]]