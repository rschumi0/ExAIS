import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Add95280 = tf.keras.layers.Input(shape=([2, 2, 2, 2]))
in1Add95280 = tf.keras.layers.Input(shape=([2, 2, 2, 2]))
in0Mul59734 = tf.keras.layers.Input(shape=([1, 1, 1]))
in1Mul59734 = tf.keras.layers.Input(shape=([1, 1, 1]))

Add95280 = keras.layers.Add(name = 'Add95280', )([in0Add95280,in1Add95280])
Lay83508 = keras.layers.LayerNormalization(axis=1, epsilon=2.009204317177762, name = 'Lay83508', )(Add95280)
Res82487 = keras.layers.Reshape((2, 2, 4), name = 'Res82487', )(Lay83508)
Res1906 = keras.layers.Reshape((2, 8), name = 'Res1906', )(Res82487)
Glo14511 = keras.layers.GlobalAveragePooling1D(name = 'Glo14511', )(Res1906)
Res17584 = keras.layers.Reshape((8, 1), name = 'Res17584', )(Glo14511)
Res58698 = keras.layers.Reshape((8, 1, 1), name = 'Res58698', )(Res17584)
Res40574 = keras.layers.Reshape((8, 1, 1, 1), name = 'Res40574', )(Res58698)
Mul59734 = keras.layers.Multiply(name = 'Mul59734', )([in0Mul59734,in1Mul59734])
Res47148 = keras.layers.Reshape((1, 1, 1, 1), name = 'Res47148', )(Mul59734)
Cro30401 = keras.layers.Cropping3D(cropping=((0, 0), (0, 0), (0, 0)), name = 'Cro30401', )(Res47148)
Zer31715 = keras.layers.ZeroPadding3D(padding=((7, 0), (0, 0), (0, 0)), name = 'Zer31715', )(Cro30401)
Sub91135 = keras.layers.Subtract(name = 'Sub91135', )([Res40574,Zer31715])
model = tf.keras.models.Model(inputs=[in0Add95280,in1Add95280,in0Mul59734,in1Mul59734], outputs=Sub91135)
in0Add95280 = tf.constant([[[[[0.4822, 0.5814], [0.2377, 0.5942]], [[0.3939, 0.9914], [0.9464, 0.2348]]], [[[0.1081, 0.4911], [0.8268, 0.6334]], [[0.0712, 0.7814], [0.972, 0.8948]]]]])
in1Add95280 = tf.constant([[[[[0.7843, 0.6562], [0.793, 0.2512]], [[0.5375, 0.1744], [0.5816, 0.1933]]], [[[0.9847, 0.5029], [0.2907, 0.6353]], [[0.3783, 0.176], [0.7251, 0.9179]]]]])
in0Mul59734 = tf.constant([[[[0.3185]]]])
in1Mul59734 = tf.constant([[[[0.9885]]]])
print (np.array2string(model.predict([in0Add95280,in1Add95280,in0Mul59734,in1Mul59734],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Sub91135.png')

LAdd95280 = add_layer([[[[[[0.4822, 0.5814], [0.2377, 0.5942]], [[0.3939, 0.9914], [0.9464, 0.2348]]], [[[0.1081, 0.4911], [0.8268, 0.6334]], [[0.0712, 0.7814], [0.972, 0.8948]]]]], [[[[[0.7843, 0.6562], [0.793, 0.2512]], [[0.5375, 0.1744], [0.5816, 0.1933]]], [[[0.9847, 0.5029], [0.2907, 0.6353]], [[0.3783, 0.176], [0.7251, 0.9179]]]]]], Add95280), 
LLay83508 = layer_normalization_layer(Add95280, 1, 2.009204317177762, Lay83508), 
LRes82487 = reshape_layer(Lay83508, [2, 2, 4], Res82487), 
LRes1906 = reshape_layer(Res82487, [2, 8], Res1906), 
LGlo14511 = global_average_pooling1D_layer(Res1906, Glo14511), 
LRes17584 = reshape_layer(Glo14511, [8, 1], Res17584), 
LRes58698 = reshape_layer(Res17584, [8, 1, 1], Res58698), 
LRes40574 = reshape_layer(Res58698, [8, 1, 1, 1], Res40574), 
LMul59734 = multiply_layer([[[[[0.3185]]]], [[[[0.9885]]]]], Mul59734), 
LRes47148 = reshape_layer(Mul59734, [1, 1, 1, 1], Res47148), 
LCro30401 = cropping3D_layer(Res47148, 0, 0, 0, 0, 0, 0, Cro30401), 
LZer31715 = zero_padding3D_layer(Cro30401, 7, 0, 0, 0, 0, 0, Zer31715), 
LSub91135 = subtract_layer(Res40574,Zer31715, Sub91135), 
exec_layers([LAdd95280,LLay83508,LRes82487,LRes1906,LGlo14511,LRes17584,LRes58698,LRes40574,LMul59734,LRes47148,LCro30401,LZer31715,LSub91135],["Add95280","Lay83508","Res82487","Res1906","Glo14511","Res17584","Res58698","Res40574","Mul59734","Res47148","Cro30401","Zer31715","Sub91135"],Sub91135,"Sub91135")

Actual (Unparsed): [[[[[0.0000000]]], [[[-0.0000000]]], [[[0.0000000]]], [[[0.0000000]]], [[[0.0000000]]], [[[0.0000000]]], [[[0.0000000]]], [[[-0.3148373]]]]]

Expected (Unparsed): [[[[[-7.979727989493313e-17]]],[[[-7.632783294297951e-17]]],[[[-7.806255641895632e-17]]],[[[6.938893903907228e-17]]],[[[0.0]]],[[[7.632783294297951e-17]]],[[[0.0]]],[[[-0.31483725000000007]]]]]

Actual:   [[[[[0]]], [[[-0]]], [[[0]]], [[[0]]], [[[0]]], [[[0]]], [[[0]]], [[[-0.3148]]]]]

Expected: [[[[[-0]]], [[[-0]]], [[[-0]]], [[[0]]], [[[0]]], [[[0]]], [[[0]]], [[[-0.3148]]]]]