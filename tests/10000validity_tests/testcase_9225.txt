import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Cro45277 = tf.keras.layers.Input(shape=([1, 4, 2, 3]))
in0Add67170 = tf.keras.layers.Input(shape=([1, 2, 2, 2]))
in1Add67170 = tf.keras.layers.Input(shape=([1, 2, 2, 2]))
in0Con28358 = tf.keras.layers.Input(shape=([1, 3, 3, 1]))

Cro45277 = keras.layers.Cropping3D(cropping=((0, 0), (1, 0), (0, 1)), name = 'Cro45277', )(in0Cro45277)
Zer62125 = keras.layers.ZeroPadding3D(padding=((0, 0), (0, 0), (2, 0)), name = 'Zer62125', )(Cro45277)
Add67170 = keras.layers.Add(name = 'Add67170', )([in0Add67170,in1Add67170])
Den5016 = keras.layers.Dense(2,name = 'Den5016', )(Add67170)
Zer26322 = keras.layers.ZeroPadding3D(padding=((0, 0), (1, 0), (1, 0)), name = 'Zer26322', )(Den5016)
Con28358 = keras.layers.Concatenate(axis=4, name = 'Con28358', )([Zer26322,in0Con28358])
Max88481 = keras.layers.Maximum(name = 'Max88481', )([Zer62125,Con28358])
model = tf.keras.models.Model(inputs=[in0Cro45277,in0Add67170,in1Add67170,in0Con28358], outputs=Max88481)
w = model.get_layer('Den5016').get_weights() 
w[0] = np.array([[0.3095, 0.0895], [0.6411, 0.9796]])
w[1] = np.array([0.3539, 0.0794])
model.get_layer('Den5016').set_weights(w) 
in0Cro45277 = tf.constant([[[[[1.8678, 1.9356, 1.3741], [1.5311, 1.403, 1.5631]], [[1.5617, 1.7651, 1.3751], [1.5095, 1.5772, 1.9653]], [[1.7895, 1.6545, 1.4489], [1.6282, 1.5516, 1.4765]], [[1.8289, 1.9468, 1.0676], [1.6892, 1.0192, 1.6961]]]]])
in0Add67170 = tf.constant([[[[[0.4275, 0.2522], [0.2744, 0.5637]], [[0.1457, 0.8674], [0.3106, 0.419]]]]])
in1Add67170 = tf.constant([[[[[0.473, 0.7806], [0.3789, 0.7344]], [[0.3645, 0.6917], [0.2217, 0.8724]]]]])
in0Con28358 = tf.constant([[[[[0.9022], [0.8776], [0.1221]], [[0.0647], [0.9862], [0.3102]], [[0.9764], [0.7654], [0.4064]]]]])
print (np.array2string(model.predict([in0Cro45277,in0Add67170,in1Add67170,in0Con28358],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Max88481.png')

LCro45277 = cropping3D_layer([[[[[1.8678, 1.9356, 1.3741], [1.5311, 1.403, 1.5631]], [[1.5617, 1.7651, 1.3751], [1.5095, 1.5772, 1.9653]], [[1.7895, 1.6545, 1.4489], [1.6282, 1.5516, 1.4765]], [[1.8289, 1.9468, 1.0676], [1.6892, 1.0192, 1.6961]]]]], 0, 0, 1, 0, 0, 1, Cro45277), 
LZer62125 = zero_padding3D_layer(Cro45277, 0, 0, 0, 0, 2, 0, Zer62125), 
LAdd67170 = add_layer([[[[[[0.4275, 0.2522], [0.2744, 0.5637]], [[0.1457, 0.8674], [0.3106, 0.419]]]]], [[[[[0.473, 0.7806], [0.3789, 0.7344]], [[0.3645, 0.6917], [0.2217, 0.8724]]]]]], Add67170), 
LDen5016 = dense_layer(Add67170, [[0.3095, 0.0895], [0.6411, 0.9796]],[0.3539, 0.0794], Den5016), 
LZer26322 = zero_padding3D_layer(Den5016, 0, 0, 1, 0, 1, 0, Zer26322), 
LCon28358 = concatenate_layer([Zer26322,[[[[[0.9022], [0.8776], [0.1221]], [[0.0647], [0.9862], [0.3102]], [[0.9764], [0.7654], [0.4064]]]]]], 4, Con28358), 
LMax88481 = maximum_layer([Zer62125,Con28358], Max88481), 
exec_layers([LCro45277,LZer62125,LAdd67170,LDen5016,LZer26322,LCon28358,LMax88481],["Cro45277","Zer62125","Add67170","Den5016","Zer26322","Con28358","Max88481"],Max88481,"Max88481")

Actual (Unparsed): [[[[[0.0000000, 0.0000000, 0.9022000], [0.0000000, 0.0000000, 0.8776000], [1.5617000, 1.7651000, 1.3751000]], [[0.0000000, 0.0000000, 0.0647000], [1.2947328, 1.1717256, 0.9862000], [1.7895000, 1.6545000, 1.4489000]], [[0.0000000, 0.0000000, 0.9764000], [1.5113459, 1.6523572, 0.7654000], [1.8289000, 1.9468000, 1.0676000]]]]]

Expected (Unparsed): [[[[[0,0,0.9022],[0,0,0.8776],[1.5617,1.7651,1.3751]],[[0,0,0.0647],[1.29473283,1.17172563,0.9862],[1.7895,1.6545,1.4489]],[[0,0,0.9764],[1.51134591,1.65235726,0.7654],[1.8289,1.9468,1.0676]]]]]

Actual:   [[[[[0, 0, 0.9022], [0, 0, 0.8776], [1.5617, 1.7651, 1.3751]], [[0, 0, 0.0647], [1.2948, 1.1718, 0.9862], [1.7895, 1.6545, 1.4489]], [[0, 0, 0.9764], [1.5114, 1.6524, 0.7654], [1.8289, 1.9468, 1.0676]]]]]

Expected: [[[[[0, 0, 0.9022], [0, 0, 0.8776], [1.5617, 1.7651, 1.3751]], [[0, 0, 0.0647], [1.2948, 1.1718, 0.9862], [1.7895, 1.6545, 1.4489]], [[0, 0, 0.9764], [1.5114, 1.6524, 0.7654], [1.8289, 1.9468, 1.0676]]]]]