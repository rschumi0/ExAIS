import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0PRe43274 = tf.keras.layers.Input(shape=([1, 2, 2, 2]))
in0Con67341 = tf.keras.layers.Input(shape=([1, 1]))
in0Sep34527 = tf.keras.layers.Input(shape=([1, 1, 2]))
in0Con84500 = tf.keras.layers.Input(shape=([1, 1]))
in0Con52304 = tf.keras.layers.Input(shape=([1, 2, 1]))
in0Con78508 = tf.keras.layers.Input(shape=([4, 4, 1]))
in0Ave6756 = tf.keras.layers.Input(shape=([1, 1]))
in1Ave6756 = tf.keras.layers.Input(shape=([1, 1]))
in0Con41481 = tf.keras.layers.Input(shape=([2, 1, 1]))
in0Add89475 = tf.keras.layers.Input(shape=([2, 1, 2]))
in1Add89475 = tf.keras.layers.Input(shape=([2, 1, 2]))

PRe43274 = keras.layers.PReLU(name = 'PRe43274', input_shape=(1, 2, 2, 2))(in0PRe43274)
Res37568 = keras.layers.Reshape((1, 2, 4), name = 'Res37568', )(PRe43274)
Res13930 = keras.layers.Reshape((1, 8), name = 'Res13930', )(Res37568)
Loc65364 = keras.layers.LocallyConnected1D(3, (1),strides=(1), name = 'Loc65364', )(Res13930)
Con67341 = keras.layers.Concatenate(axis=2, name = 'Con67341', )([Loc65364,in0Con67341])
Sep34527 = keras.layers.SeparableConv2D(2, (1, 1),strides=(1, 1), padding='same', name = 'Sep34527', )(in0Sep34527)
Zer94846 = keras.layers.ZeroPadding2D(padding=((0, 0), (1, 0)), name = 'Zer94846', )(Sep34527)
Con84500 = keras.layers.Conv1D(2, (1),strides=(1), padding='valid', dilation_rate=(1), name = 'Con84500', )(in0Con84500)
Res65950 = keras.layers.Reshape((1, 2, 1), name = 'Res65950', )(Con84500)
Up_7772 = keras.layers.UpSampling2D(size=(1, 1), name = 'Up_7772', )(Res65950)
Con52304 = keras.layers.Concatenate(axis=3, name = 'Con52304', )([Up_7772,in0Con52304])
Max59442 = keras.layers.Maximum(name = 'Max59442', )([Zer94846,Con52304])
Res10152 = keras.layers.Reshape((1, 4), name = 'Res10152', )(Max59442)
Dot50423 = keras.layers.Dot(axes=(1, 1), name = 'Dot50423', )([Con67341,Res10152])
Res93523 = keras.layers.Reshape((4, 4, 1), name = 'Res93523', )(Dot50423)
Con78508 = keras.layers.Concatenate(axis=3, name = 'Con78508', )([Res93523,in0Con78508])
Ave6756 = keras.layers.Average(name = 'Ave6756', )([in0Ave6756,in1Ave6756])
Res7030 = keras.layers.Reshape((1, 1, 1), name = 'Res7030', )(Ave6756)
Zer85125 = keras.layers.ZeroPadding2D(padding=((1, 0), (0, 0)), name = 'Zer85125', )(Res7030)
Con41481 = keras.layers.Concatenate(axis=3, name = 'Con41481', )([Zer85125,in0Con41481])
Add89475 = keras.layers.Add(name = 'Add89475', )([in0Add89475,in1Add89475])
Add68785 = keras.layers.Add(name = 'Add68785', )([Con41481,Add89475])
Zer94441 = keras.layers.ZeroPadding2D(padding=((2, 0), (3, 0)), name = 'Zer94441', )(Add68785)
Sub20051 = keras.layers.Subtract(name = 'Sub20051', )([Con78508,Zer94441])
model = tf.keras.models.Model(inputs=[in0PRe43274,in0Con67341,in0Sep34527,in0Con84500,in0Con52304,in0Con78508,in0Ave6756,in1Ave6756,in0Con41481,in0Add89475,in1Add89475], outputs=Sub20051)
w = model.get_layer('PRe43274').get_weights() 
w[0] = np.array([[[[0.2677, 0.7475], [0.5614, 0.2647]], [[0.1691, 0.2446], [0.814, 0.2364]]]])
model.get_layer('PRe43274').set_weights(w) 
w = model.get_layer('Loc65364').get_weights() 
w[0] = np.array([[[0.0017, 0.5476, 0.6999], [0.6765, 0.8707, 0.1083], [0.7612, 0.9447, 0.1222], [0.9937, 0.4569, 0.7717], [0.9698, 0.5863, 0.4192], [0.7162, 0.946, 0.51], [0.3081, 0.3485, 0.0687], [0.7993, 0.8618, 0.9108]]])
w[1] = np.array([[0, 0, 0]])
model.get_layer('Loc65364').set_weights(w) 
w = model.get_layer('Sep34527').get_weights() 
w[0] = np.array([[[[0.8823], [0.518]]]])
w[1] = np.array([[[[0.5976, 0.4812], [0.0053, 0.3004]]]])
w[2] = np.array([0, 0])
model.get_layer('Sep34527').set_weights(w) 
w = model.get_layer('Con84500').get_weights() 
w[0] = np.array([[[0.8484, 0.4695]]])
w[1] = np.array([0, 0])
model.get_layer('Con84500').set_weights(w) 
in0PRe43274 = tf.constant([[[[[0.2815, 0.2556], [0.7547, 0.2733]], [[0.7307, 0.1381], [0.4964, 0.3545]]]]])
in0Con67341 = tf.constant([[[0.0489]]])
in0Sep34527 = tf.constant([[[[0.8944, 0.9039]]]])
in0Con84500 = tf.constant([[[0.9494]]])
in0Con52304 = tf.constant([[[[0.533], [0.0726]]]])
in0Con78508 = tf.constant([[[[0.1603], [0.0608], [0.0428], [0.6841]], [[0.0845], [0.1728], [0.1255], [0.477]], [[0.3068], [0.0225], [0.2029], [0.3353]], [[0.1625], [0.4686], [0.945], [0.5921]]]])
in0Ave6756 = tf.constant([[[0.2695]]])
in1Ave6756 = tf.constant([[[0.0654]]])
in0Con41481 = tf.constant([[[[0.4386]], [[0.823]]]])
in0Add89475 = tf.constant([[[[0.4102, 0.4938]], [[0.7776, 0.227]]]])
in1Add89475 = tf.constant([[[[0.9957, 0.0381]], [[0.4195, 0.8688]]]])
print (np.array2string(model.predict([in0PRe43274,in0Con67341,in0Sep34527,in0Con84500,in0Con52304,in0Con78508,in0Ave6756,in1Ave6756,in0Con41481,in0Add89475,in1Add89475],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Sub20051.png')

LPRe43274 = prelu_layer([[[[[0.2815, 0.2556], [0.7547, 0.2733]], [[0.7307, 0.1381], [0.4964, 0.3545]]]]], [[[[0.2677, 0.7475], [0.5614, 0.2647]], [[0.1691, 0.2446], [0.814, 0.2364]]]], PRe43274), 
LRes37568 = reshape_layer(PRe43274, [1, 2, 4], Res37568), 
LRes13930 = reshape_layer(Res37568, [1, 8], Res13930), 
LLoc65364 = locally_connected1D_layer(Res13930, 1,[[[0.0017, 0.5476, 0.6999], [0.6765, 0.8707, 0.1083], [0.7612, 0.9447, 0.1222], [0.9937, 0.4569, 0.7717], [0.9698, 0.5863, 0.4192], [0.7162, 0.946, 0.51], [0.3081, 0.3485, 0.0687], [0.7993, 0.8618, 0.9108]]],[[0, 0, 0]], 1, Loc65364), 
LCon67341 = concatenate_layer([Loc65364,[[[0.0489]]]], 2, Con67341), 
LSep34527 = separable_conv2D_layer([[[[0.8944, 0.9039]]]], 1, 1,[[[[[0.8823], [0.518]]]],[[[[0.5976, 0.4812], [0.0053, 0.3004]]]]],[0, 0], 1, 1, true, Sep34527), 
LZer94846 = zero_padding2D_layer(Sep34527, 0, 0, 1, 0, Zer94846), 
LCon84500 = conv1D_layer([[[0.9494]]], 1,[[[0.8484, 0.4695]]],[0, 0], 1, false, 1, Con84500), 
LRes65950 = reshape_layer(Con84500, [1, 2, 1], Res65950), 
LUp_7772 = up_sampling2D_layer(Res65950, 1, 1, Up_7772), 
LCon52304 = concatenate_layer([Up_7772,[[[[0.533], [0.0726]]]]], 3, Con52304), 
LMax59442 = maximum_layer([Zer94846,Con52304], Max59442), 
LRes10152 = reshape_layer(Max59442, [1, 4], Res10152), 
LDot50423 = dot_layer(Con67341,Res10152, 1, 1, Dot50423), 
LRes93523 = reshape_layer(Dot50423, [4, 4, 1], Res93523), 
LCon78508 = concatenate_layer([Res93523,[[[[0.1603], [0.0608], [0.0428], [0.6841]], [[0.0845], [0.1728], [0.1255], [0.477]], [[0.3068], [0.0225], [0.2029], [0.3353]], [[0.1625], [0.4686], [0.945], [0.5921]]]]], 3, Con78508), 
LAve6756 = average_layer([[[[0.2695]]], [[[0.0654]]]], Ave6756), 
LRes7030 = reshape_layer(Ave6756, [1, 1, 1], Res7030), 
LZer85125 = zero_padding2D_layer(Res7030, 1, 0, 0, 0, Zer85125), 
LCon41481 = concatenate_layer([Zer85125,[[[[0.4386]], [[0.823]]]]], 3, Con41481), 
LAdd89475 = add_layer([[[[[0.4102, 0.4938]], [[0.7776, 0.227]]]], [[[[0.9957, 0.0381]], [[0.4195, 0.8688]]]]], Add89475), 
LAdd68785 = add_layer([Con41481,Add89475], Add68785), 
LZer94441 = zero_padding2D_layer(Add68785, 2, 0, 3, 0, Zer94441), 
LSub20051 = subtract_layer(Con78508,Zer94441, Sub20051), 
exec_layers([LPRe43274,LRes37568,LRes13930,LLoc65364,LCon67341,LSep34527,LZer94846,LCon84500,LRes65950,LUp_7772,LCon52304,LMax59442,LRes10152,LDot50423,LRes93523,LCon78508,LAve6756,LRes7030,LZer85125,LCon41481,LAdd89475,LAdd68785,LZer94441,LSub20051],["PRe43274","Res37568","Res13930","Loc65364","Con67341","Sep34527","Zer94846","Con84500","Res65950","Up_7772","Con52304","Max59442","Res10152","Dot50423","Res93523","Con78508","Ave6756","Res7030","Zer85125","Con41481","Add89475","Add68785","Zer94441","Sub20051"],Sub20051,"Sub20051")

Actual (Unparsed): [[[[1.8230068, 0.1603000], [1.2063285, 0.0608000], [1.0729424, 0.0428000], [1.1777711, 0.6841000]], [[1.8139945, 0.0845000], [1.2003649, 0.1728000], [1.0676381, 0.1255000], [1.1719486, 0.4770000]], [[1.0161459, 0.3068000], [0.6724088, 0.0225000], [0.5980592, 0.2029000], [-0.7494091, -0.6352000]], [[0.0393875, 0.1625000], [0.0260637, 0.4686000], [0.0231818, 0.9450000], [-1.3391033, -1.3267000]]]]

Expected (Unparsed): [[[[1.8230067734672475,0.1603],[1.20632854381,0.0608],[1.0729423957695279,0.0428],[1.1777711047085866,0.6841]],[[1.8139944555523224,0.0845],[1.20036487077,0.1728],[1.0676381379270377,0.1255],[1.1719486098165581,0.477]],[[1.0161459169428,0.3068],[0.672408815,0.0225],[0.5980592340325824,0.2029],[-0.7494091319673897,-0.6352]],[[0.039387529944,0.1625],[0.026063700000000002,0.4686],[0.0231817848165108,0.945],[-1.3391033064774864,-1.3267000000000002]]]]

Actual:   [[[[1.8231, 0.1603], [1.2064, 0.0608], [1.073, 0.0428], [1.1778, 0.6841]], [[1.814, 0.0845], [1.2004, 0.1728], [1.0677, 0.1255], [1.172, 0.477]], [[1.0162, 0.3068], [0.6725, 0.0225], [0.5981, 0.2029], [-0.7494, -0.6352]], [[0.0394, 0.1625], [0.0261, 0.4686], [0.0232, 0.945], [-1.3391, -1.3267]]]]

Expected: [[[[1.8231, 0.1603], [1.2064, 0.0608], [1.073, 0.0428], [1.1778, 0.6841]], [[1.814, 0.0845], [1.2004, 0.1728], [1.0677, 0.1255], [1.172, 0.477]], [[1.0162, 0.3068], [0.6725, 0.0225], [0.5981, 0.2029], [-0.7494, -0.6352]], [[0.0394, 0.1625], [0.0261, 0.4686], [0.0232, 0.945], [-1.3391, -1.3267]]]]