import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Dot73614 = tf.keras.layers.Input(shape=([2, 3]))
in1Dot73614 = tf.keras.layers.Input(shape=([2, 3]))

Dot73614 = keras.layers.Dot(axes=(1, 1), name = 'Dot73614', )([in0Dot73614,in1Dot73614])
Thr40790 = keras.layers.ThresholdedReLU(theta=4.753289185152257, name = 'Thr40790', )(Dot73614)
Con81132 = keras.layers.Conv1D(2, (2),strides=(1), padding='same', dilation_rate=(1), name = 'Con81132', )(Thr40790)
model = tf.keras.models.Model(inputs=[in0Dot73614,in1Dot73614], outputs=Con81132)
w = model.get_layer('Con81132').get_weights() 
w[0] = np.array([[[0.8972, 0.0799], [0.7127, 0.532], [0.7128, 0.2645]], [[0.9084, 0.8948], [0.8011, 0.5992], [0.0776, 0.0047]]])
w[1] = np.array([0, 0])
model.get_layer('Con81132').set_weights(w) 
in0Dot73614 = tf.constant([[[0.1148, 0.5373, 0.3382], [0.7541, 0.909, 0.7736]]])
in1Dot73614 = tf.constant([[[0.8136, 0.6095, 0.609], [0.7071, 0.9731, 0.3403]]])
print (np.array2string(model.predict([in0Dot73614,in1Dot73614],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Con81132.png')

LDot73614 = dot_layer([[[0.1148, 0.5373, 0.3382], [0.7541, 0.909, 0.7736]]], [[[0.8136, 0.6095, 0.609], [0.7071, 0.9731, 0.3403]]], 1, 1, Dot73614), 
LThr40790 = thresholded_relu_layer(Dot73614, 4.753289185152257, Thr40790), 
LCon81132 = conv1D_layer(Thr40790, 2,[[[0.8972, 0.0799], [0.7127, 0.532], [0.7128, 0.2645]], [[0.9084, 0.8948], [0.8011, 0.5992], [0.0776, 0.0047]]],[0, 0], 1, true, 1, Con81132), 
exec_layers([LDot73614,LThr40790,LCon81132],["Dot73614","Thr40790","Con81132"],Con81132,"Con81132")

Actual (Unparsed): [[[0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000]]]

Expected (Unparsed): [[[0.0,0.0],[0.0,0.0],[0.0,0.0]]]

Actual:   [[[0, 0], [0, 0], [0, 0]]]

Expected: [[[0, 0], [0, 0], [0, 0]]]