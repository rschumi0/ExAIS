import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Up_98959 = tf.keras.layers.Input(shape=([2, 4, 2]))
in0Con32425 = tf.keras.layers.Input(shape=([2, 2, 6, 3]))
in0GRU53870 = tf.keras.layers.Input(shape=([2, 2]))
in0Con83241 = tf.keras.layers.Input(shape=([2, 2, 6, 3]))
in0Up_90576 = tf.keras.layers.Input(shape=([2, 1, 3, 4]))

Up_98959 = keras.layers.UpSampling2D(size=(2, 1), name = 'Up_98959', )(in0Up_98959)
Res29295 = keras.layers.Reshape((4, 4, 2, 1), name = 'Res29295', )(Up_98959)
Cro11079 = keras.layers.Cropping3D(cropping=((0, 0), (2, 0), (0, 1)), name = 'Cro11079', )(Res29295)
Res55426 = keras.layers.Reshape((4, 2, 1), name = 'Res55426', )(Cro11079)
Res35068 = keras.layers.Reshape((4, 2), name = 'Res35068', )(Res55426)
Ave97300 = keras.layers.AveragePooling1D(pool_size=(3), name = 'Ave97300', )(Res35068)
Res98612 = keras.layers.Reshape((1, 2, 1), name = 'Res98612', )(Ave97300)
Res62151 = keras.layers.Reshape((1, 2, 1, 1), name = 'Res62151', )(Res98612)
Zer83521 = keras.layers.ZeroPadding3D(padding=((1, 0), (0, 0), (5, 0)), name = 'Zer83521', )(Res62151)
Con32425 = keras.layers.Concatenate(axis=4, name = 'Con32425', )([Zer83521,in0Con32425])
GRU53870 = keras.layers.GRU(2,reset_after=True, recurrent_activation='sigmoid', name = 'GRU53870', )(in0GRU53870)
Res87556 = keras.layers.Reshape((2, 1), name = 'Res87556', )(GRU53870)
Res22883 = keras.layers.Reshape((2, 1, 1), name = 'Res22883', )(Res87556)
Res41767 = keras.layers.Reshape((2, 1, 1, 1), name = 'Res41767', )(Res22883)
Zer11377 = keras.layers.ZeroPadding3D(padding=((0, 0), (1, 0), (5, 0)), name = 'Zer11377', )(Res41767)
Con83241 = keras.layers.Concatenate(axis=4, name = 'Con83241', )([Zer11377,in0Con83241])
Up_90576 = keras.layers.UpSampling3D(size=(1, 2, 2), name = 'Up_90576', )(in0Up_90576)
Mul69078 = keras.layers.Multiply(name = 'Mul69078', )([Con83241,Up_90576])
Ave2048 = keras.layers.Average(name = 'Ave2048', )([Con32425,Mul69078])
model = tf.keras.models.Model(inputs=[in0Up_98959,in0Con32425,in0GRU53870,in0Con83241,in0Up_90576], outputs=Ave2048)
w = model.get_layer('GRU53870').get_weights() 
w[0] = np.array([[7, 10, 5, 3, 10, 8], [2, 4, 1, 3, 3, 1]])
w[1] = np.array([[10, 10, 5, 7, 1, 10], [7, 8, 5, 4, 7, 6]])
w[2] = np.array([[2, 5, 1, 4, 10, 1], [4, 2, 2, 4, 3, 1]])
model.get_layer('GRU53870').set_weights(w) 
in0Up_98959 = tf.constant([[[[1.1293, 1.6483], [1.4313, 1.5066], [1.4434, 1.9458], [1.9931, 1.5372]], [[1.0509, 1.1419], [1.0012, 1.5605], [1.7547, 1.8058], [1.6366, 1.2805]]]])
in0Con32425 = tf.constant([[[[[0.2636, 0.5744, 0.3681], [0.8058, 0.056, 0.3463], [0.8512, 0.4058, 0.2515], [0.4503, 0.0415, 0.466], [0.9347, 0.4119, 0.5967], [0.0259, 0.7673, 0.0184]], [[0.8525, 0.682, 0.9975], [0.6658, 0.0397, 0.1075], [0.674, 0.109, 0.6666], [0.2164, 0.6151, 0.7846], [0.8815, 0.9208, 0.2809], [0.8161, 0.4887, 0.2669]]], [[[0.0713, 0.7945, 0.4352], [0.1027, 0.7284, 0.4322], [0.0069, 0.33, 0.4635], [0.2287, 0.6773, 0.2248], [0.1462, 0.3604, 0.5368], [0.2701, 0.3942, 0.1061]], [[0.4992, 0.4415, 0.6856], [0.2553, 0.0259, 0.9069], [0.6789, 0.1116, 0.9428], [0.6596, 0.7697, 0.8987], [0.0292, 0.6906, 0.5398], [0.6053, 0.4557, 0.9224]]]]])
in0GRU53870 = tf.constant([[[10, 3], [1, 4]]])
in0Con83241 = tf.constant([[[[[0.0553, 0.6334, 0.8375], [0.6342, 0.8784, 0.207], [0.3135, 0.1907, 0.008], [0.4033, 0.7054, 0.0461], [0.6438, 0.5935, 0.4718], [0.3977, 0.677, 0.1649]], [[0.1904, 0.0359, 0.147], [0.6937, 0.1413, 0.1849], [0.5458, 0.7222, 0.2611], [0.8774, 0.5012, 0.3026], [0.1273, 0.4509, 0.504], [0.0209, 0.6518, 0.8226]]], [[[0.5105, 0.0393, 0.7234], [0.0374, 0.4474, 0.8108], [0.1221, 0.2168, 0.8726], [0.5072, 0.6481, 0.4375], [0.3054, 0.8759, 0.5572], [0.2616, 0.0299, 0.1971]], [[0.075, 0.6065, 0.4958], [0.2437, 0.9747, 0.3974], [0.7934, 0.6677, 0.9457], [0.9726, 0.064, 0.0325], [0.7548, 0.53, 0.1218], [0.7878, 0.0086, 0.9957]]]]])
in0Up_90576 = tf.constant([[[[[1.0402, 1.6547, 1.4993, 1.0317], [1.6229, 1.4846, 1.0269, 1.3401], [1.7322, 1.8455, 1.4877, 1.1066]]], [[[1.9398, 1.8801, 1.7599, 1.4363], [1.5818, 1.8222, 1.0476, 1.9848], [1.8163, 1.9789, 1.4566, 1.1397]]]]])
print (np.array2string(model.predict([in0Up_98959,in0Con32425,in0GRU53870,in0Con83241,in0Up_90576],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Ave2048.png')

LUp_98959 = up_sampling2D_layer([[[[1.1293, 1.6483], [1.4313, 1.5066], [1.4434, 1.9458], [1.9931, 1.5372]], [[1.0509, 1.1419], [1.0012, 1.5605], [1.7547, 1.8058], [1.6366, 1.2805]]]], 2, 1, Up_98959), 
LRes29295 = reshape_layer(Up_98959, [4, 4, 2, 1], Res29295), 
LCro11079 = cropping3D_layer(Res29295, 0, 0, 2, 0, 0, 1, Cro11079), 
LRes55426 = reshape_layer(Cro11079, [4, 2, 1], Res55426), 
LRes35068 = reshape_layer(Res55426, [4, 2], Res35068), 
LAve97300 = average_pooling1D_layer(Res35068, 3, Ave97300), 
LRes98612 = reshape_layer(Ave97300, [1, 2, 1], Res98612), 
LRes62151 = reshape_layer(Res98612, [1, 2, 1, 1], Res62151), 
LZer83521 = zero_padding3D_layer(Res62151, 1, 0, 0, 0, 5, 0, Zer83521), 
LCon32425 = concatenate_layer([Zer83521,[[[[[0.2636, 0.5744, 0.3681], [0.8058, 0.056, 0.3463], [0.8512, 0.4058, 0.2515], [0.4503, 0.0415, 0.466], [0.9347, 0.4119, 0.5967], [0.0259, 0.7673, 0.0184]], [[0.8525, 0.682, 0.9975], [0.6658, 0.0397, 0.1075], [0.674, 0.109, 0.6666], [0.2164, 0.6151, 0.7846], [0.8815, 0.9208, 0.2809], [0.8161, 0.4887, 0.2669]]], [[[0.0713, 0.7945, 0.4352], [0.1027, 0.7284, 0.4322], [0.0069, 0.33, 0.4635], [0.2287, 0.6773, 0.2248], [0.1462, 0.3604, 0.5368], [0.2701, 0.3942, 0.1061]], [[0.4992, 0.4415, 0.6856], [0.2553, 0.0259, 0.9069], [0.6789, 0.1116, 0.9428], [0.6596, 0.7697, 0.8987], [0.0292, 0.6906, 0.5398], [0.6053, 0.4557, 0.9224]]]]]], 4, Con32425), 
LGRU53870 = gru_layer([[[10, 3], [1, 4]]],[[7, 10, 5, 3, 10, 8], [2, 4, 1, 3, 3, 1]],[[10, 10, 5, 7, 1, 10], [7, 8, 5, 4, 7, 6]],[[2, 5, 1, 4, 10, 1], [4, 2, 2, 4, 3, 1]], true, GRU53870), 
LRes87556 = reshape_layer(GRU53870, [2, 1], Res87556), 
LRes22883 = reshape_layer(Res87556, [2, 1, 1], Res22883), 
LRes41767 = reshape_layer(Res22883, [2, 1, 1, 1], Res41767), 
LZer11377 = zero_padding3D_layer(Res41767, 0, 0, 1, 0, 5, 0, Zer11377), 
LCon83241 = concatenate_layer([Zer11377,[[[[[0.0553, 0.6334, 0.8375], [0.6342, 0.8784, 0.207], [0.3135, 0.1907, 0.008], [0.4033, 0.7054, 0.0461], [0.6438, 0.5935, 0.4718], [0.3977, 0.677, 0.1649]], [[0.1904, 0.0359, 0.147], [0.6937, 0.1413, 0.1849], [0.5458, 0.7222, 0.2611], [0.8774, 0.5012, 0.3026], [0.1273, 0.4509, 0.504], [0.0209, 0.6518, 0.8226]]], [[[0.5105, 0.0393, 0.7234], [0.0374, 0.4474, 0.8108], [0.1221, 0.2168, 0.8726], [0.5072, 0.6481, 0.4375], [0.3054, 0.8759, 0.5572], [0.2616, 0.0299, 0.1971]], [[0.075, 0.6065, 0.4958], [0.2437, 0.9747, 0.3974], [0.7934, 0.6677, 0.9457], [0.9726, 0.064, 0.0325], [0.7548, 0.53, 0.1218], [0.7878, 0.0086, 0.9957]]]]]], 4, Con83241), 
LUp_90576 = up_sampling3D_layer([[[[[1.0402, 1.6547, 1.4993, 1.0317], [1.6229, 1.4846, 1.0269, 1.3401], [1.7322, 1.8455, 1.4877, 1.1066]]], [[[1.9398, 1.8801, 1.7599, 1.4363], [1.5818, 1.8222, 1.0476, 1.9848], [1.8163, 1.9789, 1.4566, 1.1397]]]]], 1, 2, 2, Up_90576), 
LMul69078 = multiply_layer([Con83241,Up_90576], Mul69078), 
LAve2048 = average_layer([Con32425,Mul69078], Ave2048), 
exec_layers([LUp_98959,LRes29295,LCro11079,LRes55426,LRes35068,LAve97300,LRes98612,LRes62151,LZer83521,LCon32425,LGRU53870,LRes87556,LRes22883,LRes41767,LZer11377,LCon83241,LUp_90576,LMul69078,LAve2048],["Up_98959","Res29295","Cro11079","Res55426","Res35068","Ave97300","Res98612","Res62151","Zer83521","Con32425","GRU53870","Res87556","Res22883","Res41767","Zer11377","Con83241","Up_90576","Mul69078","Ave2048"],Ave2048,"Ave2048")

Actual (Unparsed): [[[[[0.0000000, 0.1775525, 0.7620283, 0.6160744], [0.0000000, 0.9276054, 0.6864926, 0.2799310], [0.0000000, 0.6583110, 0.3008149, 0.1311104], [0.0000000, 0.5245196, 0.3829376, 0.2638893], [0.0000000, 1.0614165, 0.6474250, 0.5593970], [0.0000000, 0.3799277, 0.8872364, 0.1004392]], [[0.0000000, 0.5837775, 0.3679124, 0.5745800], [0.0000000, 0.9068327, 0.1257755, 0.1491307], [0.0000000, 0.7421473, 0.4253136, 0.5082501], [0.0000000, 0.7594940, 0.5648912, 0.5950571], [0.0000000, 0.5582161, 0.7958019, 0.4193132], [0.0000000, 0.4273355, 0.7291914, 0.5885946]]], [[[0.0000000, 0.5155455, 0.4318320, 0.7371097], [0.0000000, 0.0865079, 0.7578896, 0.7983761], [0.0000000, 0.1146953, 0.2785599, 1.0977182], [0.0000000, 0.5764599, 0.6781248, 0.5465750], [0.0000000, 0.3752780, 0.8181179, 0.5859205], [0.7735833, 0.3938901, 0.2188762, 0.1653674]], [[0.0000000, 0.3201037, 0.7544397, 0.6988588], [0.0000000, 0.3567402, 0.8706372, 0.7388428], [0.0000000, 1.0623167, 0.4055413, 1.4099127], [0.0000000, 1.2159358, 0.4183732, 0.4816030], [0.0000000, 0.7614369, 0.7312990, 0.3393077], [0.9371334, 1.0821387, 0.2341134, 1.0285997]]]]]

Expected (Unparsed): [[[[[0.0,0.177552455,0.76202831,0.616074375],[0.0,0.92760537,0.68649256,0.27993095],[0.0,0.65831105,0.300814915,0.1311104],[0.0,0.5245195899999999,0.38293763,0.263889305],[0.0,1.06141645,0.6474249750000001,0.5593969400000001],[0.0,0.379927675,0.8872364500000001,0.10043917]],[[0.0,0.58377744,0.36791243500000004,0.5745799500000001],[0.0,0.906832695,0.12577554500000002,0.149130665],[0.0,0.74214734,0.42531358999999996,0.508250055],[0.0,0.7594940199999999,0.56489114,0.59505713],[0.0,0.5582160749999999,0.795801965,0.41931320000000005],[6.567256294776058e-10,0.427335475,0.72919143,0.5885945800000001]]],[[[0.0,0.515545525,0.431832035,0.73710971],[0.0,0.08650787000000001,0.75788963,0.7983760199999999],[0.0,0.11469531,0.27855984,1.0977182399999998],[0.0,0.57645992,0.6781247800000001,0.546575],[0.0,0.37527803000000004,0.81811797,0.5859204200000001],[0.7735833333333333,0.39389012,0.21887616999999998,0.165367435]],[[0.0,0.32010375,0.7544396750000001,0.69885877],[0.0,0.35674018500000004,0.870637265,0.73884281],[0.0,1.06231674,0.40554126,1.40991268],[0.0,1.21593586,0.4183732,0.481603],[0.0,0.76143686,0.7312989999999999,0.33930773],[0.9371333333333375,1.08213871,0.23411338,1.028599645]]]]]

Actual:   [[[[[0, 0.1776, 0.7621, 0.6161], [0, 0.9277, 0.6865, 0.28], [0, 0.6584, 0.3009, 0.1312], [0, 0.5246, 0.383, 0.2639], [0, 1.0615, 0.6475, 0.5594], [0, 0.38, 0.8873, 0.1005]], [[0, 0.5838, 0.368, 0.5746], [0, 0.9069, 0.1258, 0.1492], [0, 0.7422, 0.4254, 0.5083], [0, 0.7595, 0.5649, 0.5951], [0, 0.5583, 0.7959, 0.4194], [0, 0.4274, 0.7292, 0.5886]]], [[[0, 0.5156, 0.4319, 0.7372], [0, 0.0866, 0.7579, 0.7984], [0, 0.1147, 0.2786, 1.0978], [0, 0.5765, 0.6782, 0.5466], [0, 0.3753, 0.8182, 0.586], [0.7736, 0.3939, 0.2189, 0.1654]], [[0, 0.3202, 0.7545, 0.6989], [0, 0.3568, 0.8707, 0.7389], [0, 1.0624, 0.4056, 1.41], [0, 1.216, 0.4184, 0.4817], [0, 0.7615, 0.7313, 0.3394], [0.9372, 1.0822, 0.2342, 1.0286]]]]]

Expected: [[[[[0, 0.1776, 0.7621, 0.6161], [0, 0.9277, 0.6865, 0.28], [0, 0.6584, 0.3009, 0.1312], [0, 0.5246, 0.383, 0.2639], [0, 1.0615, 0.6475, 0.5594], [0, 0.38, 0.8873, 0.1005]], [[0, 0.5838, 0.368, 0.5746], [0, 0.9069, 0.1258, 0.1492], [0, 0.7422, 0.4254, 0.5083], [0, 0.7595, 0.5649, 0.5951], [0, 0.5583, 0.7959, 0.4194], [0, 0.4274, 0.7292, 0.5886]]], [[[0, 0.5156, 0.4319, 0.7372], [0, 0.0866, 0.7579, 0.7984], [0, 0.1147, 0.2786, 1.0978], [0, 0.5765, 0.6782, 0.5466], [0, 0.3753, 0.8182, 0.586], [0.7736, 0.3939, 0.2189, 0.1654]], [[0, 0.3202, 0.7545, 0.6989], [0, 0.3568, 0.8707, 0.7389], [0, 1.0624, 0.4056, 1.41], [0, 1.216, 0.4184, 0.4817], [0, 0.7615, 0.7313, 0.3394], [0.9372, 1.0822, 0.2342, 1.0286]]]]]