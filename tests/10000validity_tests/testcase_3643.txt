import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Sub2392 = tf.keras.layers.Input(shape=([3]))
in1Sub2392 = tf.keras.layers.Input(shape=([3]))
in0Con21289 = tf.keras.layers.Input(shape=([3, 3, 3, 1]))
in0Mul76751 = tf.keras.layers.Input(shape=([1, 2, 2, 1]))
in1Mul76751 = tf.keras.layers.Input(shape=([1, 2, 2, 1]))
in0Con89437 = tf.keras.layers.Input(shape=([1, 2, 2, 1]))
in0Mul68148 = tf.keras.layers.Input(shape=([1, 1, 2, 2]))
in1Mul68148 = tf.keras.layers.Input(shape=([1, 1, 2, 2]))

Sub2392 = keras.layers.Subtract(name = 'Sub2392', )([in0Sub2392,in1Sub2392])
Res27343 = keras.layers.Reshape((3, 1), name = 'Res27343', )(Sub2392)
Res81251 = keras.layers.Reshape((3, 1, 1), name = 'Res81251', )(Res27343)
Res83191 = keras.layers.Reshape((3, 1, 1, 1), name = 'Res83191', )(Res81251)
Zer87660 = keras.layers.ZeroPadding3D(padding=((0, 0), (2, 0), (2, 0)), name = 'Zer87660', )(Res83191)
Con21289 = keras.layers.Concatenate(axis=4, name = 'Con21289', )([Zer87660,in0Con21289])
Mul76751 = keras.layers.Multiply(name = 'Mul76751', )([in0Mul76751,in1Mul76751])
Con89437 = keras.layers.Concatenate(axis=4, name = 'Con89437', )([Mul76751,in0Con89437])
Mul68148 = keras.layers.Multiply(name = 'Mul68148', )([in0Mul68148,in1Mul68148])
Zer77365 = keras.layers.ZeroPadding3D(padding=((0, 0), (1, 0), (0, 0)), name = 'Zer77365', )(Mul68148)
Ave73319 = keras.layers.Average(name = 'Ave73319', )([Con89437,Zer77365])
Zer57251 = keras.layers.ZeroPadding3D(padding=((2, 0), (1, 0), (1, 0)), name = 'Zer57251', )(Ave73319)
Add1789 = keras.layers.Add(name = 'Add1789', )([Con21289,Zer57251])
model = tf.keras.models.Model(inputs=[in0Sub2392,in1Sub2392,in0Con21289,in0Mul76751,in1Mul76751,in0Con89437,in0Mul68148,in1Mul68148], outputs=Add1789)
in0Sub2392 = tf.constant([[0.6878, 0.1415, 0.7546]])
in1Sub2392 = tf.constant([[0.7869, 0.5271, 0.1473]])
in0Con21289 = tf.constant([[[[[0.5908], [0.8372], [0.8872]], [[0.2577], [0.731], [0.5938]], [[0.9584], [0.817], [0.415]]], [[[0.2315], [0.915], [0.5724]], [[0.1801], [0.3889], [0.8006]], [[0.5578], [0.2205], [0.8056]]], [[[0.9737], [0.4774], [0.8307]], [[0.9861], [0.2767], [0.659]], [[0.3131], [0.37], [0.0958]]]]])
in0Mul76751 = tf.constant([[[[[0.6008], [0.7123]], [[0.3588], [0.7665]]]]])
in1Mul76751 = tf.constant([[[[[0.8695], [0.3509]], [[0.4914], [0.9718]]]]])
in0Con89437 = tf.constant([[[[[0.6915], [0.441]], [[0.5224], [0.4496]]]]])
in0Mul68148 = tf.constant([[[[[0.6825, 0.3204], [0.3637, 0.1037]]]]])
in1Mul68148 = tf.constant([[[[[0.7905, 0.3885], [0.1548, 0.0026]]]]])
print (np.array2string(model.predict([in0Sub2392,in1Sub2392,in0Con21289,in0Mul76751,in1Mul76751,in0Con89437,in0Mul68148,in1Mul68148],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Add1789.png')

LSub2392 = subtract_layer([[0.6878, 0.1415, 0.7546]], [[0.7869, 0.5271, 0.1473]], Sub2392), 
LRes27343 = reshape_layer(Sub2392, [3, 1], Res27343), 
LRes81251 = reshape_layer(Res27343, [3, 1, 1], Res81251), 
LRes83191 = reshape_layer(Res81251, [3, 1, 1, 1], Res83191), 
LZer87660 = zero_padding3D_layer(Res83191, 0, 0, 2, 0, 2, 0, Zer87660), 
LCon21289 = concatenate_layer([Zer87660,[[[[[0.5908], [0.8372], [0.8872]], [[0.2577], [0.731], [0.5938]], [[0.9584], [0.817], [0.415]]], [[[0.2315], [0.915], [0.5724]], [[0.1801], [0.3889], [0.8006]], [[0.5578], [0.2205], [0.8056]]], [[[0.9737], [0.4774], [0.8307]], [[0.9861], [0.2767], [0.659]], [[0.3131], [0.37], [0.0958]]]]]], 4, Con21289), 
LMul76751 = multiply_layer([[[[[[0.6008], [0.7123]], [[0.3588], [0.7665]]]]], [[[[[0.8695], [0.3509]], [[0.4914], [0.9718]]]]]], Mul76751), 
LCon89437 = concatenate_layer([Mul76751,[[[[[0.6915], [0.441]], [[0.5224], [0.4496]]]]]], 4, Con89437), 
LMul68148 = multiply_layer([[[[[[0.6825, 0.3204], [0.3637, 0.1037]]]]], [[[[[0.7905, 0.3885], [0.1548, 0.0026]]]]]], Mul68148), 
LZer77365 = zero_padding3D_layer(Mul68148, 0, 0, 1, 0, 0, 0, Zer77365), 
LAve73319 = average_layer([Con89437,Zer77365], Ave73319), 
LZer57251 = zero_padding3D_layer(Ave73319, 2, 0, 1, 0, 1, 0, Zer57251), 
LAdd1789 = add_layer([Con21289,Zer57251], Add1789), 
exec_layers([LSub2392,LRes27343,LRes81251,LRes83191,LZer87660,LCon21289,LMul76751,LCon89437,LMul68148,LZer77365,LAve73319,LZer57251,LAdd1789],["Sub2392","Res27343","Res81251","Res83191","Zer87660","Con21289","Mul76751","Con89437","Mul68148","Zer77365","Ave73319","Zer57251","Add1789"],Add1789,"Add1789")

Actual (Unparsed): [[[[[0.0000000, 0.5908000], [0.0000000, 0.8372000], [0.0000000, 0.8872000]], [[0.0000000, 0.2577000], [0.0000000, 0.7310000], [0.0000000, 0.5938000]], [[0.0000000, 0.9584000], [0.0000000, 0.8170000], [-0.0991000, 0.4150000]]], [[[0.0000000, 0.2315000], [0.0000000, 0.9150000], [0.0000000, 0.5724000]], [[0.0000000, 0.1801000], [0.0000000, 0.3889000], [0.0000000, 0.8006000]], [[0.0000000, 0.5578000], [0.0000000, 0.2205000], [-0.3856000, 0.8056000]]], [[[0.0000000, 0.9737000], [0.0000000, 0.4774000], [0.0000000, 0.8307000]], [[0.0000000, 0.9861000], [0.2611978, 0.6224500], [0.1249730, 0.8795000]], [[0.0000000, 0.3131000], [0.3579153, 0.6934377], [1.0078927, 0.3207348]]]]]

Expected (Unparsed): [[[[[0,0.5908],[0,0.8372],[0,0.8872]],[[0,0.2577],[0,0.731],[0,0.5938]],[[0,0.9584],[0,0.817],[-0.09910000000000008,0.415]]],[[[0,0.2315],[0,0.915],[0,0.5724]],[[0,0.1801],[0,0.3889],[0,0.8006]],[[0,0.5578],[0,0.2205],[-0.38560000000000005,0.8056]]],[[[0,0.9737],[0,0.4774],[0,0.8307]],[[0,0.9861],[0.26119780000000004,0.62245],[0.12497303500000001,0.8795000000000001]],[[0,0.3131],[0.357915285,0.6934377],[1.00789273,0.32073481000000004]]]]]

Actual:   [[[[[0, 0.5908], [0, 0.8372], [0, 0.8872]], [[0, 0.2577], [0, 0.731], [0, 0.5938]], [[0, 0.9584], [0, 0.817], [-0.0991, 0.415]]], [[[0, 0.2315], [0, 0.915], [0, 0.5724]], [[0, 0.1801], [0, 0.3889], [0, 0.8006]], [[0, 0.5578], [0, 0.2205], [-0.3856, 0.8056]]], [[[0, 0.9737], [0, 0.4774], [0, 0.8307]], [[0, 0.9861], [0.2612, 0.6225], [0.125, 0.8795]], [[0, 0.3131], [0.358, 0.6935], [1.0079, 0.3208]]]]]

Expected: [[[[[0, 0.5908], [0, 0.8372], [0, 0.8872]], [[0, 0.2577], [0, 0.731], [0, 0.5938]], [[0, 0.9584], [0, 0.817], [-0.0991, 0.415]]], [[[0, 0.2315], [0, 0.915], [0, 0.5724]], [[0, 0.1801], [0, 0.3889], [0, 0.8006]], [[0, 0.5578], [0, 0.2205], [-0.3856, 0.8056]]], [[[0, 0.9737], [0, 0.4774], [0, 0.8307]], [[0, 0.9861], [0.2612, 0.6225], [0.125, 0.8796]], [[0, 0.3131], [0.358, 0.6935], [1.0079, 0.3208]]]]]