import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Lea57084 = tf.keras.layers.Input(shape=([1, 2]))

Lea57084 = keras.layers.LeakyReLU(alpha=2.4669934853983833, name = 'Lea57084', input_shape=(1, 2))(in0Lea57084)
Sep64458 = keras.layers.SeparableConv1D(2, (1),strides=(2), padding='same', name = 'Sep64458', )(Lea57084)
Fla54311 = keras.layers.Flatten(name = 'Fla54311', )(Sep64458)
model = tf.keras.models.Model(inputs=[in0Lea57084], outputs=Fla54311)
w = model.get_layer('Sep64458').get_weights() 
w[0] = np.array([[[0.6737], [0.0116]]])
w[1] = np.array([[[0.2812, 0.7889], [0.6743, 0.9068]]])
w[2] = np.array([0, 0])
model.get_layer('Sep64458').set_weights(w) 
in0Lea57084 = tf.constant([[[0.9262, 0.9927]]])
print (np.array2string(model.predict([in0Lea57084],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Fla54311.png')

LLea57084 = leaky_relu_layer([[[0.9262, 0.9927]]], 2.4669934853983833, Lea57084), 
LSep64458 = separable_conv1D_layer(Lea57084, 1,[[[[0.6737], [0.0116]]],[[[0.2812, 0.7889], [0.6743, 0.9068]]]],[0, 0], 2, true, Sep64458), 
LFla54311 = flatten_layer(Sep64458, Fla54311), 
exec_layers([LLea57084,LSep64458,LFla54311],["Lea57084","Sep64458","Fla54311"],Fla54311,"Fla54311")

Actual (Unparsed): [[0.1832282, 0.5027006]]

Expected (Unparsed): [[0.18322822060399999,0.502700655742]]

Actual:   [[0.1833, 0.5028]]

Expected: [[0.1833, 0.5028]]