import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Sep32275 = tf.keras.layers.Input(shape=([2, 2, 2]))
in0Dot27683 = tf.keras.layers.Input(shape=([2]))
in1Dot27683 = tf.keras.layers.Input(shape=([2]))
in0Con53452 = tf.keras.layers.Input(shape=([1, 1]))

Sep32275 = keras.layers.SeparableConv2D(2, (1, 1),strides=(2, 2), padding='valid', name = 'Sep32275', )(in0Sep32275)
Res86073 = keras.layers.Reshape((1, 2), name = 'Res86073', )(Sep32275)
Dot27683 = keras.layers.Dot(axes=(1, 1), name = 'Dot27683', )([in0Dot27683,in1Dot27683])
Res32678 = keras.layers.Reshape((1, 1), name = 'Res32678', )(Dot27683)
Up_93059 = keras.layers.UpSampling1D(size=(1), name = 'Up_93059', )(Res32678)
Con53452 = keras.layers.Concatenate(axis=2, name = 'Con53452', )([Up_93059,in0Con53452])
Mul16583 = keras.layers.Multiply(name = 'Mul16583', )([Res86073,Con53452])
Res11594 = keras.layers.Reshape((1, 2, 1), name = 'Res11594', )(Mul16583)
Res67856 = keras.layers.Reshape((1, 2, 1, 1), name = 'Res67856', )(Res11594)
Cro79946 = keras.layers.Cropping3D(cropping=((0, 0), (1, 0), (0, 0)), name = 'Cro79946', )(Res67856)
Fla26055 = keras.layers.Flatten(name = 'Fla26055', )(Cro79946)
Lay45626 = keras.layers.LayerNormalization(axis=1, epsilon=1.5159050537355923, name = 'Lay45626', )(Fla26055)
model = tf.keras.models.Model(inputs=[in0Sep32275,in0Dot27683,in1Dot27683,in0Con53452], outputs=Lay45626)
w = model.get_layer('Sep32275').get_weights() 
w[0] = np.array([[[[0.7236], [0.9273]]]])
w[1] = np.array([[[[0.8319, 0.3274], [0.2406, 0.2717]]]])
w[2] = np.array([0, 0])
model.get_layer('Sep32275').set_weights(w) 
in0Sep32275 = tf.constant([[[[0.1953, 0.7746], [0.7834, 0.1064]], [[0.2498, 0.1523], [0.3343, 0.7935]]]])
in0Dot27683 = tf.constant([[0.6299, 0.2095]])
in1Dot27683 = tf.constant([[0.3747, 0.62]])
in0Con53452 = tf.constant([[[0.3037]]])
print (np.array2string(model.predict([in0Sep32275,in0Dot27683,in1Dot27683,in0Con53452],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Lay45626.png')

LSep32275 = separable_conv2D_layer([[[[0.1953, 0.7746], [0.7834, 0.1064]], [[0.2498, 0.1523], [0.3343, 0.7935]]]], 1, 1,[[[[[0.7236], [0.9273]]]],[[[[0.8319, 0.3274], [0.2406, 0.2717]]]]],[0, 0], 2, 2, false, Sep32275), 
LRes86073 = reshape_layer(Sep32275, [1, 2], Res86073), 
LDot27683 = dot_layer([[0.6299, 0.2095]], [[0.3747, 0.62]], 1, 1, Dot27683), 
LRes32678 = reshape_layer(Dot27683, [1, 1], Res32678), 
LUp_93059 = up_sampling1D_layer(Res32678, 1, Up_93059), 
LCon53452 = concatenate_layer([Up_93059,[[[0.3037]]]], 2, Con53452), 
LMul16583 = multiply_layer([Res86073,Con53452], Mul16583), 
LRes11594 = reshape_layer(Mul16583, [1, 2, 1], Res11594), 
LRes67856 = reshape_layer(Res11594, [1, 2, 1, 1], Res67856), 
LCro79946 = cropping3D_layer(Res67856, 0, 0, 1, 0, 0, 0, Cro79946), 
LFla26055 = flatten_layer(Cro79946, Fla26055), 
LLay45626 = layer_normalization_layer(Fla26055, 1, 1.5159050537355923, Lay45626), 
exec_layers([LSep32275,LRes86073,LDot27683,LRes32678,LUp_93059,LCon53452,LMul16583,LRes11594,LRes67856,LCro79946,LFla26055,LLay45626],["Sep32275","Res86073","Dot27683","Res32678","Up_93059","Con53452","Mul16583","Res11594","Res67856","Cro79946","Fla26055","Lay45626"],Lay45626,"Lay45626")

Actual (Unparsed): [[0.0000000]]

Expected (Unparsed): [[0.0]]

Actual:   [[0]]

Expected: [[0]]