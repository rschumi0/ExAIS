import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Dot96156 = tf.keras.layers.Input(shape=([3]))
in1Dot96156 = tf.keras.layers.Input(shape=([3]))

Dot96156 = keras.layers.Dot(axes=(1, 1), name = 'Dot96156', )([in0Dot96156,in1Dot96156])
Sof87150 = keras.layers.Softmax(axis=1, name = 'Sof87150', )(Dot96156)
model = tf.keras.models.Model(inputs=[in0Dot96156,in1Dot96156], outputs=Sof87150)
in0Dot96156 = tf.constant([[0.0744, 0.5766, 0.4229]])
in1Dot96156 = tf.constant([[0.8026, 0.9877, 0.0721]])
print (np.array2string(model.predict([in0Dot96156,in1Dot96156],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Sof87150.png')

LDot96156 = dot_layer([[0.0744, 0.5766, 0.4229]], [[0.8026, 0.9877, 0.0721]], 1, 1, Dot96156), 
LSof87150 = softmax_layer(Dot96156, 1, Sof87150), 
exec_layers([LDot96156,LSof87150],["Dot96156","Sof87150"],Sof87150,"Sof87150")

Actual (Unparsed): [[1.0000000]]

Expected (Unparsed): [[1.0]]

Actual:   [[1]]

Expected: [[1]]