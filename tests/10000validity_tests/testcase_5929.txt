import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Max50583 = tf.keras.layers.Input(shape=([2, 2, 1, 1]))
in1Max50583 = tf.keras.layers.Input(shape=([2, 2, 1, 1]))
in0Add95269 = tf.keras.layers.Input(shape=([1, 2]))
in1Add95269 = tf.keras.layers.Input(shape=([1, 2]))
in0Con17312 = tf.keras.layers.Input(shape=([1, 2]))

Max50583 = keras.layers.Maximum(name = 'Max50583', )([in0Max50583,in1Max50583])
Res8217 = keras.layers.Reshape((2, 2, 1), name = 'Res8217', )(Max50583)
Loc80785 = keras.layers.LocallyConnected2D(2, (2, 1),strides=(1, 1), name = 'Loc80785', )(Res8217)
Res28750 = keras.layers.Reshape((1, 4), name = 'Res28750', )(Loc80785)
Cro73378 = keras.layers.Cropping1D(cropping=((0, 0)), name = 'Cro73378', )(Res28750)
Add95269 = keras.layers.Add(name = 'Add95269', )([in0Add95269,in1Add95269])
Bat12435 = keras.layers.BatchNormalization(axis=2, epsilon=0.8825411656738457,  name = 'Bat12435', )(Add95269)
Con17312 = keras.layers.Concatenate(axis=2, name = 'Con17312', )([Bat12435,in0Con17312])
Mul17735 = keras.layers.Multiply(name = 'Mul17735', )([Cro73378,Con17312])
model = tf.keras.models.Model(inputs=[in0Max50583,in1Max50583,in0Add95269,in1Add95269,in0Con17312], outputs=Mul17735)
w = model.get_layer('Loc80785').get_weights() 
w[0] = np.array([[[0.755, 0.2555], [0.8054, 0.379]], [[0.9629, 0.1371], [0.9651, 0.277]]])
w[1] = np.array([[[0, 0], [0, 0]]])
model.get_layer('Loc80785').set_weights(w) 
w = model.get_layer('Bat12435').get_weights() 
w[0] = np.array([0.0086, 0.6795])
w[1] = np.array([0.0484, 0.2893])
w[2] = np.array([0.9919, 0.9982])
w[3] = np.array([0.2538, 0.3196])
model.get_layer('Bat12435').set_weights(w) 
in0Max50583 = tf.constant([[[[[0.8512]], [[0.7794]]], [[[0.7952]], [[0.5609]]]]])
in1Max50583 = tf.constant([[[[[0.7794]], [[0.4024]]], [[[0.6566]], [[0.3394]]]]])
in0Add95269 = tf.constant([[[0.8911, 0.1122]]])
in1Add95269 = tf.constant([[[0.3162, 0.3808]]])
in0Con17312 = tf.constant([[[0.7494, 0.662]]])
print (np.array2string(model.predict([in0Max50583,in1Max50583,in0Add95269,in1Add95269,in0Con17312],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Mul17735.png')

LMax50583 = maximum_layer([[[[[[0.8512]], [[0.7794]]], [[[0.7952]], [[0.5609]]]]], [[[[[0.7794]], [[0.4024]]], [[[0.6566]], [[0.3394]]]]]], Max50583), 
LRes8217 = reshape_layer(Max50583, [2, 2, 1], Res8217), 
LLoc80785 = locally_connected2D_layer(Res8217, 2, 1,[[[0.755, 0.2555], [0.8054, 0.379]], [[0.9629, 0.1371], [0.9651, 0.277]]],[[[0, 0], [0, 0]]], 1, 1, Loc80785), 
LRes28750 = reshape_layer(Loc80785, [1, 4], Res28750), 
LCro73378 = cropping1D_layer(Res28750, 0, 0, Cro73378), 
LAdd95269 = add_layer([[[[0.8911, 0.1122]]], [[[0.3162, 0.3808]]]], Add95269), 
LBat12435 = batch_normalization_layer(Add95269, 2, 0.8825411656738457, [0.0086, 0.6795], [0.0484, 0.2893], [0.9919, 0.9982], [0.2538, 0.3196], Bat12435), 
LCon17312 = concatenate_layer([Bat12435,[[[0.7494, 0.662]]]], 2, Con17312), 
LMul17735 = multiply_layer([Cro73378,Con17312], Mul17735), 
exec_layers([LMax50583,LRes8217,LLoc80785,LRes28750,LCro73378,LAdd95269,LBat12435,LCon17312,LMul17735],["Max50583","Res8217","Loc80785","Res28750","Cro73378","Add95269","Bat12435","Con17312","Mul17735"],Mul17735,"Mul17735")

Actual (Unparsed): [[[0.0643323, -0.0123459, 0.9680816, 0.1735930]]]

Expected (Unparsed): [[[0.0643322651618894,-0.012345932870975273,0.9680815521899998,0.17359297648]]]

Actual:   [[[0.0644, -0.0123, 0.9681, 0.1736]]]

Expected: [[[0.0644, -0.0123, 0.9681, 0.1736]]]