import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Sof31823 = tf.keras.layers.Input(shape=([1, 1]))
in0Min51052 = tf.keras.layers.Input(shape=([2, 1]))
in1Min51052 = tf.keras.layers.Input(shape=([2, 1]))

Sof31823 = keras.layers.Softmax(axis=1, name = 'Sof31823', input_shape=(1, 1))(in0Sof31823)
Zer80787 = keras.layers.ZeroPadding1D(padding=((1, 0)), name = 'Zer80787', )(Sof31823)
Min51052 = keras.layers.Minimum(name = 'Min51052', )([in0Min51052,in1Min51052])
Add48464 = keras.layers.Add(name = 'Add48464', )([Zer80787,Min51052])
GRU53426 = keras.layers.GRU(1,reset_after=False, recurrent_activation='sigmoid', name = 'GRU53426', )(Add48464)
model = tf.keras.models.Model(inputs=[in0Sof31823,in0Min51052,in1Min51052], outputs=GRU53426)
w = model.get_layer('GRU53426').get_weights() 
w[0] = np.array([[3, 5, 6]])
w[1] = np.array([[9, 6, 5]])
w[2] = np.array([8, 5, 6])
model.get_layer('GRU53426').set_weights(w) 
in0Sof31823 = tf.constant([[[0.9787]]])
in0Min51052 = tf.constant([[[0.169], [0.9023]]])
in1Min51052 = tf.constant([[[0.0823], [0.5401]]])
print (np.array2string(model.predict([in0Sof31823,in0Min51052,in1Min51052],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='GRU53426.png')

LSof31823 = softmax_layer([[[0.9787]]], 1, Sof31823), 
LZer80787 = zero_padding1D_layer(Sof31823, 1, 0, Zer80787), 
LMin51052 = minimum_layer([[[[0.169], [0.9023]]], [[[0.0823], [0.5401]]]], Min51052), 
LAdd48464 = add_layer([Zer80787,Min51052], Add48464), 
LGRU53426 = gru_layer(Add48464,[[3, 5, 6]],[[9, 6, 5]],[8, 5, 6], false, GRU53426), 
exec_layers([LSof31823,LZer80787,LMin51052,LAdd48464,LGRU53426],["Sof31823","Zer80787","Min51052","Add48464","GRU53426"],GRU53426,"GRU53426")

Actual (Unparsed): [[0.0002653]]

Expected (Unparsed): [[0.00026529545038970055]]

Actual:   [[0.0003]]

Expected: [[0.0003]]