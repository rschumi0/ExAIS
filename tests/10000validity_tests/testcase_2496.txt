import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Dep95499 = tf.keras.layers.Input(shape=([1, 1, 2]))

Dep95499 = keras.layers.DepthwiseConv2D((1, 1),strides=(1, 1), padding='valid', name = 'Dep95499', )(in0Dep95499)
Res98324 = keras.layers.Reshape((1, 1, 2, 1), name = 'Res98324', )(Dep95499)
Zer63132 = keras.layers.ZeroPadding3D(padding=((1, 1), (1, 1), (1, 1)), name = 'Zer63132', )(Res98324)
Res20898 = keras.layers.Reshape((3, 3, 4), name = 'Res20898', )(Zer63132)
Res94011 = keras.layers.Reshape((3, 12), name = 'Res94011', )(Res20898)
Zer14941 = keras.layers.ZeroPadding1D(padding=((1, 1)), name = 'Zer14941', )(Res94011)
Cro56 = keras.layers.Cropping1D(cropping=((0, 1)), name = 'Cro56', )(Zer14941)
model = tf.keras.models.Model(inputs=[in0Dep95499], outputs=Cro56)
w = model.get_layer('Dep95499').get_weights() 
w[0] = np.array([[[[0.8147], [0.783]]]])
w[1] = np.array([0, 0])
model.get_layer('Dep95499').set_weights(w) 
in0Dep95499 = tf.constant([[[[0.4922, 0.1291]]]])
print (np.array2string(model.predict([in0Dep95499],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Cro56.png')

LDep95499 = depthwise_conv2D_layer([[[[0.4922, 0.1291]]]], 1, 1,[[[[0.8147], [0.783]]]],[0, 0], 1, 1, false, Dep95499), 
LRes98324 = reshape_layer(Dep95499, [1, 1, 2, 1], Res98324), 
LZer63132 = zero_padding3D_layer(Res98324, 1, 1, 1, 1, 1, 1, Zer63132), 
LRes20898 = reshape_layer(Zer63132, [3, 3, 4], Res20898), 
LRes94011 = reshape_layer(Res20898, [3, 12], Res94011), 
LZer14941 = zero_padding1D_layer(Res94011, 1, 1, Zer14941), 
LCro56 = cropping1D_layer(Zer14941, 0, 1, Cro56), 
exec_layers([LDep95499,LRes98324,LZer63132,LRes20898,LRes94011,LZer14941,LCro56],["Dep95499","Res98324","Zer63132","Res20898","Res94011","Zer14941","Cro56"],Cro56,"Cro56")

Actual (Unparsed): [[[0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.4009953, 0.1010853, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000]]]

Expected (Unparsed): [[[0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0.40099534000000003,0.1010853,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0]]]

Actual:   [[[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0.401, 0.1011, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]]]

Expected: [[[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0.401, 0.1011, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]]]