import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Zer63640 = tf.keras.layers.Input(shape=([1, 4]))
in0Cro8511 = tf.keras.layers.Input(shape=([3, 2]))
in0Dep99173 = tf.keras.layers.Input(shape=([2, 2, 1]))

Zer63640 = keras.layers.ZeroPadding1D(padding=((1, 1)), name = 'Zer63640', )(in0Zer63640)
Res86229 = keras.layers.Reshape((3, 4, 1), name = 'Res86229', )(Zer63640)
Res85299 = keras.layers.Reshape((3, 4, 1, 1), name = 'Res85299', )(Res86229)
Zer36711 = keras.layers.ZeroPadding3D(padding=((0, 0), (0, 0), (4, 0)), name = 'Zer36711', )(Res85299)
Cro8511 = keras.layers.Cropping1D(cropping=((1, 1)), name = 'Cro8511', )(in0Cro8511)
Res94964 = keras.layers.Reshape((1, 2, 1), name = 'Res94964', )(Cro8511)
Res16701 = keras.layers.Reshape((1, 2, 1, 1), name = 'Res16701', )(Res94964)
Zer85632 = keras.layers.ZeroPadding3D(padding=((2, 0), (1, 0), (2, 0)), name = 'Zer85632', )(Res16701)
Dep99173 = keras.layers.DepthwiseConv2D((1, 1),strides=(2, 2), padding='valid', name = 'Dep99173', )(in0Dep99173)
Res54141 = keras.layers.Reshape((1, 1, 1, 1), name = 'Res54141', )(Dep99173)
Zer99341 = keras.layers.ZeroPadding3D(padding=((1, 1), (1, 1), (1, 1)), name = 'Zer99341', )(Res54141)
Sub11368 = keras.layers.Subtract(name = 'Sub11368', )([Zer85632,Zer99341])
ELU37879 = keras.layers.ELU(alpha=-5.794942016387859, name = 'ELU37879', )(Sub11368)
Zer6860 = keras.layers.ZeroPadding3D(padding=((0, 0), (1, 0), (2, 0)), name = 'Zer6860', )(ELU37879)
Max66784 = keras.layers.Maximum(name = 'Max66784', )([Zer36711,Zer6860])
model = tf.keras.models.Model(inputs=[in0Zer63640,in0Cro8511,in0Dep99173], outputs=Max66784)
w = model.get_layer('Dep99173').get_weights() 
w[0] = np.array([[[[0.0656]]]])
w[1] = np.array([0])
model.get_layer('Dep99173').set_weights(w) 
in0Zer63640 = tf.constant([[[1.0003, 1.4791, 1.526, 1.9135]]])
in0Cro8511 = tf.constant([[[1.7161, 1.3895], [1.941, 1.7009], [1.9495, 1.0003]]])
in0Dep99173 = tf.constant([[[[0.5158], [0.2607]], [[0.168], [0.6076]]]])
print (np.array2string(model.predict([in0Zer63640,in0Cro8511,in0Dep99173],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Max66784.png')

LZer63640 = zero_padding1D_layer([[[1.0003, 1.4791, 1.526, 1.9135]]], 1, 1, Zer63640), 
LRes86229 = reshape_layer(Zer63640, [3, 4, 1], Res86229), 
LRes85299 = reshape_layer(Res86229, [3, 4, 1, 1], Res85299), 
LZer36711 = zero_padding3D_layer(Res85299, 0, 0, 0, 0, 4, 0, Zer36711), 
LCro8511 = cropping1D_layer([[[1.7161, 1.3895], [1.941, 1.7009], [1.9495, 1.0003]]], 1, 1, Cro8511), 
LRes94964 = reshape_layer(Cro8511, [1, 2, 1], Res94964), 
LRes16701 = reshape_layer(Res94964, [1, 2, 1, 1], Res16701), 
LZer85632 = zero_padding3D_layer(Res16701, 2, 0, 1, 0, 2, 0, Zer85632), 
LDep99173 = depthwise_conv2D_layer([[[[0.5158], [0.2607]], [[0.168], [0.6076]]]], 1, 1,[[[[0.0656]]]],[0], 2, 2, false, Dep99173), 
LRes54141 = reshape_layer(Dep99173, [1, 1, 1, 1], Res54141), 
LZer99341 = zero_padding3D_layer(Res54141, 1, 1, 1, 1, 1, 1, Zer99341), 
LSub11368 = subtract_layer(Zer85632,Zer99341, Sub11368), 
LELU37879 = elu_layer(Sub11368, -5.794942016387859, ELU37879), 
LZer6860 = zero_padding3D_layer(ELU37879, 0, 0, 1, 0, 2, 0, Zer6860), 
LMax66784 = maximum_layer([Zer36711,Zer6860], Max66784), 
exec_layers([LZer63640,LRes86229,LRes85299,LZer36711,LCro8511,LRes94964,LRes16701,LZer85632,LDep99173,LRes54141,LZer99341,LSub11368,LELU37879,LZer6860,LMax66784],["Zer63640","Res86229","Res85299","Zer36711","Cro8511","Res94964","Res16701","Zer85632","Dep99173","Res54141","Zer99341","Sub11368","ELU37879","Zer6860","Max66784"],Max66784,"Max66784")

Actual (Unparsed): [[[[[0.0000000], [0.0000000], [0.0000000], [0.0000000], [0.0000000]], [[0.0000000], [0.0000000], [-0.0000000], [-0.0000000], [-0.0000000]], [[0.0000000], [0.0000000], [-0.0000000], [-0.0000000], [-0.0000000]], [[0.0000000], [0.0000000], [-0.0000000], [-0.0000000], [-0.0000000]]], [[[0.0000000], [0.0000000], [0.0000000], [0.0000000], [1.0003000]], [[0.0000000], [0.0000000], [-0.0000000], [-0.0000000], [1.4791000]], [[0.0000000], [0.0000000], [-0.0000000], [0.1928002], [1.5260000]], [[0.0000000], [0.0000000], [-0.0000000], [-0.0000000], [1.9135000]]], [[[0.0000000], [0.0000000], [0.0000000], [0.0000000], [0.0000000]], [[0.0000000], [0.0000000], [-0.0000000], [-0.0000000], [-0.0000000]], [[0.0000000], [0.0000000], [-0.0000000], [-0.0000000], [1.9410000]], [[0.0000000], [0.0000000], [-0.0000000], [-0.0000000], [1.7009000]]]]]

Expected (Unparsed): [[[[[0],[0],[0],[0],[0]],[[0],[0],[0],[0],[0]],[[0],[0],[0],[0],[0]],[[0],[0],[0],[0],[0]]],[[[0],[0],[0],[0],[1.0003]],[[0],[0],[0],[0],[1.4791]],[[0],[0],[0],[0.19280020498490463],[1.526]],[[0],[0],[0],[0],[1.9135]]],[[[0],[0],[0],[0],[0]],[[0],[0],[0],[0],[0]],[[0],[0],[0],[0],[1.941]],[[0],[0],[0],[0],[1.7009]]]]]

Actual:   [[[[[0], [0], [0], [0], [0]], [[0], [0], [-0], [-0], [-0]], [[0], [0], [-0], [-0], [-0]], [[0], [0], [-0], [-0], [-0]]], [[[0], [0], [0], [0], [1.0003]], [[0], [0], [-0], [-0], [1.4791]], [[0], [0], [-0], [0.1929], [1.526]], [[0], [0], [-0], [-0], [1.9135]]], [[[0], [0], [0], [0], [0]], [[0], [0], [-0], [-0], [-0]], [[0], [0], [-0], [-0], [1.941]], [[0], [0], [-0], [-0], [1.7009]]]]]

Expected: [[[[[0], [0], [0], [0], [0]], [[0], [0], [0], [0], [0]], [[0], [0], [0], [0], [0]], [[0], [0], [0], [0], [0]]], [[[0], [0], [0], [0], [1.0003]], [[0], [0], [0], [0], [1.4791]], [[0], [0], [0], [0.1929], [1.526]], [[0], [0], [0], [0], [1.9135]]], [[[0], [0], [0], [0], [0]], [[0], [0], [0], [0], [0]], [[0], [0], [0], [0], [1.941]], [[0], [0], [0], [0], [1.7009]]]]]