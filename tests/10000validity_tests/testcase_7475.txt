import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Den24116 = tf.keras.layers.Input(shape=([2, 5, 5]))

Den24116 = keras.layers.Dense(2,name = 'Den24116', )(in0Den24116)
Res24656 = keras.layers.Reshape((2, 10), name = 'Res24656', )(Den24116)
LST56175 = keras.layers.LSTM(1,recurrent_activation='sigmoid', name = 'LST56175', )(Res24656)
Res50946 = keras.layers.Reshape((1, 1), name = 'Res50946', )(LST56175)
Sep85641 = keras.layers.SeparableConv1D(3, (1),strides=(1), padding='valid', name = 'Sep85641', )(Res50946)
Thr65965 = keras.layers.ThresholdedReLU(theta=0.44493943728026497, name = 'Thr65965', )(Sep85641)
model = tf.keras.models.Model(inputs=[in0Den24116], outputs=Thr65965)
w = model.get_layer('Den24116').get_weights() 
w[0] = np.array([[0.9862, 0.7058], [0.6903, 0.0073], [0.7338, 0.5661], [0.4547, 0.2526], [0.8271, 0.381]])
w[1] = np.array([0.3891, 0.8933])
model.get_layer('Den24116').set_weights(w) 
w = model.get_layer('LST56175').get_weights() 
w[0] = np.array([[1, 7, 7, 2], [6, 10, 8, 6], [8, 2, 5, 10], [5, 5, 10, 6], [7, 2, 6, 7], [8, 7, 7, 4], [4, 4, 4, 7], [4, 10, 3, 3], [8, 1, 7, 6], [5, 2, 8, 10]])
w[1] = np.array([[10, 3, 1, 6]])
w[2] = np.array([6, 8, 8, 4])
model.get_layer('LST56175').set_weights(w) 
w = model.get_layer('Sep85641').get_weights() 
w[0] = np.array([[[0.5827]]])
w[1] = np.array([[[0.108, 0.0263, 0.4012]]])
w[2] = np.array([0, 0, 0])
model.get_layer('Sep85641').set_weights(w) 
in0Den24116 = tf.constant([[[[0.0767, 0.0113, 0.7637, 0.5446, 0.2153], [0.8069, 0.1407, 0.2699, 0.3885, 0.6746], [0.7468, 0.9925, 0.3656, 0.9043, 0.5884], [0.8014, 0.3366, 0.6573, 0.6798, 0.4522], [0.2739, 0.8888, 0.0294, 0.8988, 0.6453]], [[0.4032, 0.6137, 0.2278, 0.4581, 0.2649], [0.4513, 0.465, 0.8844, 0.1017, 0.3021], [0.8023, 0.5263, 0.9315, 0.9635, 0.1539], [0.7153, 0.0187, 0.6146, 0.5927, 0.1085], [0.9261, 0.1656, 0.14, 0.2438, 0.3644]]]])
print (np.array2string(model.predict([in0Den24116],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Thr65965.png')

LDen24116 = dense_layer([[[[0.0767, 0.0113, 0.7637, 0.5446, 0.2153], [0.8069, 0.1407, 0.2699, 0.3885, 0.6746], [0.7468, 0.9925, 0.3656, 0.9043, 0.5884], [0.8014, 0.3366, 0.6573, 0.6798, 0.4522], [0.2739, 0.8888, 0.0294, 0.8988, 0.6453]], [[0.4032, 0.6137, 0.2278, 0.4581, 0.2649], [0.4513, 0.465, 0.8844, 0.1017, 0.3021], [0.8023, 0.5263, 0.9315, 0.9635, 0.1539], [0.7153, 0.0187, 0.6146, 0.5927, 0.1085], [0.9261, 0.1656, 0.14, 0.2438, 0.3644]]]], [[0.9862, 0.7058], [0.6903, 0.0073], [0.7338, 0.5661], [0.4547, 0.2526], [0.8271, 0.381]],[0.3891, 0.8933], Den24116), 
LRes24656 = reshape_layer(Den24116, [2, 10], Res24656), 
LLST56175 = lstm_layer(Res24656,[[1, 7, 7, 2], [6, 10, 8, 6], [8, 2, 5, 10], [5, 5, 10, 6], [7, 2, 6, 7], [8, 7, 7, 4], [4, 4, 4, 7], [4, 10, 3, 3], [8, 1, 7, 6], [5, 2, 8, 10]],[[10, 3, 1, 6]],[6, 8, 8, 4], LST56175), 
LRes50946 = reshape_layer(LST56175, [1, 1], Res50946), 
LSep85641 = separable_conv1D_layer(Res50946, 1,[[[[0.5827]]],[[[0.108, 0.0263, 0.4012]]]],[0, 0, 0], 1, false, Sep85641), 
LThr65965 = thresholded_relu_layer(Sep85641, 0.44493943728026497, Thr65965), 
exec_layers([LDen24116,LRes24656,LLST56175,LRes50946,LSep85641,LThr65965],["Den24116","Res24656","LST56175","Res50946","Sep85641","Thr65965"],Thr65965,"Thr65965")

Actual (Unparsed): [[[0.0000000, 0.0000000, 0.0000000]]]

Expected (Unparsed): [[[0,0,0]]]

Actual:   [[[0, 0, 0]]]

Expected: [[[0, 0, 0]]]