import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Dot25025 = tf.keras.layers.Input(shape=([2, 3]))
in1Dot25025 = tf.keras.layers.Input(shape=([2, 3]))
in0Dot78053 = tf.keras.layers.Input(shape=([3]))
in1Dot78053 = tf.keras.layers.Input(shape=([3]))
in0Sof89812 = tf.keras.layers.Input(shape=([1, 2, 2]))
in0Con94017 = tf.keras.layers.Input(shape=([3]))
in0Con98837 = tf.keras.layers.Input(shape=([70, 1]))
in0Sub44757 = tf.keras.layers.Input(shape=([3, 2, 3, 2]))
in1Sub44757 = tf.keras.layers.Input(shape=([3, 2, 3, 2]))
in0Add71743 = tf.keras.layers.Input(shape=([1, 2, 1]))
in1Add71743 = tf.keras.layers.Input(shape=([1, 2, 1]))
in0Con7454 = tf.keras.layers.Input(shape=([3, 6, 5]))
in0Con92422 = tf.keras.layers.Input(shape=([3, 34]))
in0Min87359 = tf.keras.layers.Input(shape=([2, 2]))
in1Min87359 = tf.keras.layers.Input(shape=([2, 2]))

Dot25025 = keras.layers.Dot(axes=(2, 2), name = 'Dot25025', )([in0Dot25025,in1Dot25025])
Fla10794 = keras.layers.Flatten(name = 'Fla10794', )(Dot25025)
Dot78053 = keras.layers.Dot(axes=(1, 1), name = 'Dot78053', )([in0Dot78053,in1Dot78053])
ELU94793 = keras.layers.ELU(alpha=2.3537923302436816, name = 'ELU94793', )(Dot78053)
Sof89812 = keras.layers.Softmax(axis=1, name = 'Sof89812', input_shape=(1, 2, 2))(in0Sof89812)
Res2611 = keras.layers.Reshape((1, 4), name = 'Res2611', )(Sof89812)
Sim37422 = keras.layers.SimpleRNN(1,name = 'Sim37422', )(Res2611)
Max92812 = keras.layers.Maximum(name = 'Max92812', )([ELU94793,Sim37422])
Con94017 = keras.layers.Concatenate(axis=1, name = 'Con94017', )([Max92812,in0Con94017])
Min97184 = keras.layers.Minimum(name = 'Min97184', )([Fla10794,Con94017])
Res95041 = keras.layers.Reshape((4, 1), name = 'Res95041', )(Min97184)
Zer54416 = keras.layers.ZeroPadding1D(padding=((66, 0)), name = 'Zer54416', )(Res95041)
Con98837 = keras.layers.Concatenate(axis=2, name = 'Con98837', )([Zer54416,in0Con98837])
Sub44757 = keras.layers.Subtract(name = 'Sub44757', )([in0Sub44757,in1Sub44757])
Res27102 = keras.layers.Reshape((3, 2, 6), name = 'Res27102', )(Sub44757)
Zer6379 = keras.layers.ZeroPadding2D(padding=((0, 0), (4, 0)), name = 'Zer6379', )(Res27102)
Add71743 = keras.layers.Add(name = 'Add71743', )([in0Add71743,in1Add71743])
Up_82460 = keras.layers.UpSampling2D(size=(2, 2), name = 'Up_82460', )(Add71743)
Zer35641 = keras.layers.ZeroPadding2D(padding=((1, 0), (2, 0)), name = 'Zer35641', )(Up_82460)
Con7454 = keras.layers.Concatenate(axis=3, name = 'Con7454', )([Zer35641,in0Con7454])
Mul93314 = keras.layers.Multiply(name = 'Mul93314', )([Zer6379,Con7454])
Res47156 = keras.layers.Reshape((3, 36), name = 'Res47156', )(Mul93314)
Con92422 = keras.layers.Concatenate(axis=2, name = 'Con92422', )([Res47156,in0Con92422])
Min87359 = keras.layers.Minimum(name = 'Min87359', )([in0Min87359,in1Min87359])
Zer60672 = keras.layers.ZeroPadding1D(padding=((1, 0)), name = 'Zer60672', )(Min87359)
Dot22732 = keras.layers.Dot(axes=(1, 1), name = 'Dot22732', )([Con92422,Zer60672])
Mul77469 = keras.layers.Multiply(name = 'Mul77469', )([Con98837,Dot22732])
model = tf.keras.models.Model(inputs=[in0Dot25025,in1Dot25025,in0Dot78053,in1Dot78053,in0Sof89812,in0Con94017,in0Con98837,in0Sub44757,in1Sub44757,in0Add71743,in1Add71743,in0Con7454,in0Con92422,in0Min87359,in1Min87359], outputs=Mul77469)
w = model.get_layer('Sim37422').get_weights() 
w[0] = np.array([[1], [2], [4], [2]])
w[1] = np.array([[7]])
w[2] = np.array([10])
model.get_layer('Sim37422').set_weights(w) 
in0Dot25025 = tf.constant([[[0.4742, 0.5852, 0.6582], [0.0871, 0.2133, 0.7134]]])
in1Dot25025 = tf.constant([[[0.3205, 0.8634, 0.4439], [0.2129, 0.1598, 0.6961]]])
in0Dot78053 = tf.constant([[0.0643, 0.529, 0.501]])
in1Dot78053 = tf.constant([[0.589, 0.337, 0.3839]])
in0Sof89812 = tf.constant([[[[0.191, 0.075], [0.5309, 0.5301]]]])
in0Con94017 = tf.constant([[0.9815, 0.908, 0.8003]])
in0Con98837 = tf.constant([[[0.5274], [0.6232], [0.2908], [0.2211], [0.7068], [0.1269], [0.5211], [0.573], [0.3384], [0.9826], [0.8081], [0.9367], [0.4036], [0.1559], [0.866], [0.6249], [0.0398], [0.3152], [0.1478], [0.7536], [0.7385], [0.5151], [0.0944], [0.0491], [0.7978], [0.6797], [0.1959], [0.1483], [0.4524], [0.3247], [0.7856], [0.2207], [0.9214], [0.8714], [0.0697], [0.0495], [0.2099], [0.8542], [0.7548], [0.5437], [0.871], [0.2987], [0.7765], [0.0218], [0.0996], [0.5571], [0.0556], [0.5086], [0.4612], [0.9276], [0.9129], [0.7141], [0.2827], [0.4567], [0.7582], [0.3293], [0.2313], [0.4228], [0.937], [0.7636], [0.8902], [0.1378], [0.1632], [0.4746], [0.2046], [0.8645], [0.8008], [0.5967], [0.5135], [0.8461]]])
in0Sub44757 = tf.constant([[[[[0.9842, 0.1944], [0.3585, 0.0586], [0.9713, 0.107]], [[0.4172, 0.1189], [0.2355, 0.4221], [0.7039, 0.3343]]], [[[0.2279, 0.3307], [0.2835, 0.0278], [0.3202, 0.5386]], [[0.3608, 0.6139], [0.6149, 0.8152], [0.3304, 0.1588]]], [[[0.3719, 0.6953], [0.8617, 0.1592], [0.3444, 0.504]], [[0.712, 0.0522], [0.9083, 0.4077], [0.7566, 0.8307]]]]])
in1Sub44757 = tf.constant([[[[[0.115, 0.6392], [0.6734, 0.4095], [0.7038, 0.3915]], [[0.8265, 0.064], [0.6665, 0.1314], [0.1571, 0.3479]]], [[[0.1737, 0.244], [0.3062, 0.3829], [0.5459, 0.9871]], [[0.7722, 0.3111], [0.4783, 0.7083], [0.6357, 0.0018]]], [[[0.9142, 0.1568], [0.2709, 0.8121], [0.8034, 0.5093]], [[0.5109, 0.3159], [0.4771, 0.4189], [0.9277, 0.4346]]]]])
in0Add71743 = tf.constant([[[[0.525], [0.9998]]]])
in1Add71743 = tf.constant([[[[0.2524], [0.3323]]]])
in0Con7454 = tf.constant([[[[0.5719, 0.9275, 0.8092, 0.7096, 0.7558], [0.7841, 0.5043, 0.5072, 0.0672, 0.2409], [0.488, 0.2773, 0.8585, 0.942, 0.6063], [0.3648, 0.5649, 0.9156, 0.1788, 0.2501], [0.8892, 0.069, 0.5084, 0.0521, 0.7724], [0.4155, 0.4015, 0.2964, 0.8418, 0.7831]], [[0.4567, 0.1791, 0.6389, 0.754, 0.0728], [0.2568, 0.9538, 0.2366, 0.2287, 0.3492], [0.0177, 0.3807, 0.0877, 0.4534, 0.1375], [0.5123, 0.394, 0.6397, 0.5987, 0.3883], [0.4444, 0.2208, 0.303, 0.3477, 0.1428], [0.9705, 0.6651, 0.87, 0.2741, 0.8046]], [[0.747, 0.6465, 0.6709, 0.1305, 0.4721], [0.5104, 0.3896, 0.0218, 0.0355, 0.4823], [0.3582, 0.4826, 0.3001, 0.7414, 0.2169], [0.3264, 0.0528, 0.552, 0.2305, 0.6147], [0.4834, 0.0457, 0.221, 0.1762, 0.1464], [0.2874, 0.4413, 0.4576, 0.964, 0.2396]]]])
in0Con92422 = tf.constant([[[0.7544, 0.823, 0.6952, 0.8789, 0.1196, 0.7082, 0.9119, 0.432, 0.3604, 0.2132, 0.7639, 0.1778, 0.6874, 0.316, 0.2362, 0.0037, 0.0259, 0.633, 0.4685, 0.7598, 0.4235, 0.7628, 0.353, 0.3332, 0.6253, 0.929, 0.1182, 0.3563, 0.437, 0.7961, 0.88, 0.2556, 0.3166, 0.6575], [0.7858, 0.6225, 0.3593, 0.6783, 0.4289, 0.8269, 0.4666, 0.5112, 0.67, 0.3796, 0.0309, 0.3978, 0.864, 0.8023, 0.9076, 0.8203, 0.7638, 0.6625, 0.7937, 0.8706, 0.0481, 0.9928, 0.3896, 0.7717, 0.5027, 0.5302, 0.88, 0.4009, 0.3758, 0.0809, 0.3388, 0.2415, 0.3207, 0.8459], [0.6334, 0.9217, 0.6446, 0.7286, 0.2888, 0.3852, 0.2869, 0.4826, 0.5521, 0.7835, 0.0655, 0.0592, 0.5955, 0.3799, 0.2523, 0.664, 0.3918, 0.1107, 0.4627, 0.8447, 0.3003, 0.9631, 0.1787, 0.3946, 0.8169, 0.9968, 0.9644, 0.9814, 0.2532, 0.6632, 0.578, 0.188, 0.338, 0.056]]])
in0Min87359 = tf.constant([[[0.872, 0.1595], [0.4651, 0.768]]])
in1Min87359 = tf.constant([[[0.2133, 0.1047], [0.7615, 0.3405]]])
print (np.array2string(model.predict([in0Dot25025,in1Dot25025,in0Dot78053,in1Dot78053,in0Sof89812,in0Con94017,in0Con98837,in0Sub44757,in1Sub44757,in0Add71743,in1Add71743,in0Con7454,in0Con92422,in0Min87359,in1Min87359],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Mul77469.png')

LDot25025 = dot_layer([[[0.4742, 0.5852, 0.6582], [0.0871, 0.2133, 0.7134]]], [[[0.3205, 0.8634, 0.4439], [0.2129, 0.1598, 0.6961]]], 2, 2, Dot25025), 
LFla10794 = flatten_layer(Dot25025, Fla10794), 
LDot78053 = dot_layer([[0.0643, 0.529, 0.501]], [[0.589, 0.337, 0.3839]], 1, 1, Dot78053), 
LELU94793 = elu_layer(Dot78053, 2.3537923302436816, ELU94793), 
LSof89812 = softmax_layer([[[[0.191, 0.075], [0.5309, 0.5301]]]], 1, Sof89812), 
LRes2611 = reshape_layer(Sof89812, [1, 4], Res2611), 
LSim37422 = simple_rnn_layer(Res2611,[[1], [2], [4], [2]],[[7]],[10], Sim37422), 
LMax92812 = maximum_layer([ELU94793,Sim37422], Max92812), 
LCon94017 = concatenate_layer([Max92812,[[0.9815, 0.908, 0.8003]]], 1, Con94017), 
LMin97184 = minimum_layer([Fla10794,Con94017], Min97184), 
LRes95041 = reshape_layer(Min97184, [4, 1], Res95041), 
LZer54416 = zero_padding1D_layer(Res95041, 66, 0, Zer54416), 
LCon98837 = concatenate_layer([Zer54416,[[[0.5274], [0.6232], [0.2908], [0.2211], [0.7068], [0.1269], [0.5211], [0.573], [0.3384], [0.9826], [0.8081], [0.9367], [0.4036], [0.1559], [0.866], [0.6249], [0.0398], [0.3152], [0.1478], [0.7536], [0.7385], [0.5151], [0.0944], [0.0491], [0.7978], [0.6797], [0.1959], [0.1483], [0.4524], [0.3247], [0.7856], [0.2207], [0.9214], [0.8714], [0.0697], [0.0495], [0.2099], [0.8542], [0.7548], [0.5437], [0.871], [0.2987], [0.7765], [0.0218], [0.0996], [0.5571], [0.0556], [0.5086], [0.4612], [0.9276], [0.9129], [0.7141], [0.2827], [0.4567], [0.7582], [0.3293], [0.2313], [0.4228], [0.937], [0.7636], [0.8902], [0.1378], [0.1632], [0.4746], [0.2046], [0.8645], [0.8008], [0.5967], [0.5135], [0.8461]]]], 2, Con98837), 
LSub44757 = subtract_layer([[[[[0.9842, 0.1944], [0.3585, 0.0586], [0.9713, 0.107]], [[0.4172, 0.1189], [0.2355, 0.4221], [0.7039, 0.3343]]], [[[0.2279, 0.3307], [0.2835, 0.0278], [0.3202, 0.5386]], [[0.3608, 0.6139], [0.6149, 0.8152], [0.3304, 0.1588]]], [[[0.3719, 0.6953], [0.8617, 0.1592], [0.3444, 0.504]], [[0.712, 0.0522], [0.9083, 0.4077], [0.7566, 0.8307]]]]], [[[[[0.115, 0.6392], [0.6734, 0.4095], [0.7038, 0.3915]], [[0.8265, 0.064], [0.6665, 0.1314], [0.1571, 0.3479]]], [[[0.1737, 0.244], [0.3062, 0.3829], [0.5459, 0.9871]], [[0.7722, 0.3111], [0.4783, 0.7083], [0.6357, 0.0018]]], [[[0.9142, 0.1568], [0.2709, 0.8121], [0.8034, 0.5093]], [[0.5109, 0.3159], [0.4771, 0.4189], [0.9277, 0.4346]]]]], Sub44757), 
LRes27102 = reshape_layer(Sub44757, [3, 2, 6], Res27102), 
LZer6379 = zero_padding2D_layer(Res27102, 0, 0, 4, 0, Zer6379), 
LAdd71743 = add_layer([[[[[0.525], [0.9998]]]], [[[[0.2524], [0.3323]]]]], Add71743), 
LUp_82460 = up_sampling2D_layer(Add71743, 2, 2, Up_82460), 
LZer35641 = zero_padding2D_layer(Up_82460, 1, 0, 2, 0, Zer35641), 
LCon7454 = concatenate_layer([Zer35641,[[[[0.5719, 0.9275, 0.8092, 0.7096, 0.7558], [0.7841, 0.5043, 0.5072, 0.0672, 0.2409], [0.488, 0.2773, 0.8585, 0.942, 0.6063], [0.3648, 0.5649, 0.9156, 0.1788, 0.2501], [0.8892, 0.069, 0.5084, 0.0521, 0.7724], [0.4155, 0.4015, 0.2964, 0.8418, 0.7831]], [[0.4567, 0.1791, 0.6389, 0.754, 0.0728], [0.2568, 0.9538, 0.2366, 0.2287, 0.3492], [0.0177, 0.3807, 0.0877, 0.4534, 0.1375], [0.5123, 0.394, 0.6397, 0.5987, 0.3883], [0.4444, 0.2208, 0.303, 0.3477, 0.1428], [0.9705, 0.6651, 0.87, 0.2741, 0.8046]], [[0.747, 0.6465, 0.6709, 0.1305, 0.4721], [0.5104, 0.3896, 0.0218, 0.0355, 0.4823], [0.3582, 0.4826, 0.3001, 0.7414, 0.2169], [0.3264, 0.0528, 0.552, 0.2305, 0.6147], [0.4834, 0.0457, 0.221, 0.1762, 0.1464], [0.2874, 0.4413, 0.4576, 0.964, 0.2396]]]]], 3, Con7454), 
LMul93314 = multiply_layer([Zer6379,Con7454], Mul93314), 
LRes47156 = reshape_layer(Mul93314, [3, 36], Res47156), 
LCon92422 = concatenate_layer([Res47156,[[[0.7544, 0.823, 0.6952, 0.8789, 0.1196, 0.7082, 0.9119, 0.432, 0.3604, 0.2132, 0.7639, 0.1778, 0.6874, 0.316, 0.2362, 0.0037, 0.0259, 0.633, 0.4685, 0.7598, 0.4235, 0.7628, 0.353, 0.3332, 0.6253, 0.929, 0.1182, 0.3563, 0.437, 0.7961, 0.88, 0.2556, 0.3166, 0.6575], [0.7858, 0.6225, 0.3593, 0.6783, 0.4289, 0.8269, 0.4666, 0.5112, 0.67, 0.3796, 0.0309, 0.3978, 0.864, 0.8023, 0.9076, 0.8203, 0.7638, 0.6625, 0.7937, 0.8706, 0.0481, 0.9928, 0.3896, 0.7717, 0.5027, 0.5302, 0.88, 0.4009, 0.3758, 0.0809, 0.3388, 0.2415, 0.3207, 0.8459], [0.6334, 0.9217, 0.6446, 0.7286, 0.2888, 0.3852, 0.2869, 0.4826, 0.5521, 0.7835, 0.0655, 0.0592, 0.5955, 0.3799, 0.2523, 0.664, 0.3918, 0.1107, 0.4627, 0.8447, 0.3003, 0.9631, 0.1787, 0.3946, 0.8169, 0.9968, 0.9644, 0.9814, 0.2532, 0.6632, 0.578, 0.188, 0.338, 0.056]]]], 2, Con92422), 
LMin87359 = minimum_layer([[[[0.872, 0.1595], [0.4651, 0.768]]], [[[0.2133, 0.1047], [0.7615, 0.3405]]]], Min87359), 
LZer60672 = zero_padding1D_layer(Min87359, 1, 0, Zer60672), 
LDot22732 = dot_layer(Con92422,Zer60672, 1, 1, Dot22732), 
LMul77469 = multiply_layer([Con98837,Dot22732], Mul77469), 
exec_layers([LDot25025,LFla10794,LDot78053,LELU94793,LSof89812,LRes2611,LSim37422,LMax92812,LCon94017,LMin97184,LRes95041,LZer54416,LCon98837,LSub44757,LRes27102,LZer6379,LAdd71743,LUp_82460,LZer35641,LCon7454,LMul93314,LRes47156,LCon92422,LMin87359,LZer60672,LDot22732,LMul77469],["Dot25025","Fla10794","Dot78053","ELU94793","Sof89812","Res2611","Sim37422","Max92812","Con94017","Min97184","Res95041","Zer54416","Con98837","Sub44757","Res27102","Zer6379","Add71743","Up_82460","Zer35641","Con7454","Mul93314","Res47156","Con92422","Min87359","Zer60672","Dot22732","Mul77469"],Mul77469,"Mul77469")

Actual (Unparsed): [[[0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000], [-0.0000000, -0.1902092], [0.0000000, 0.0629877], [0.0000000, 0.0016982], [-0.0000000, -0.0089568], [-0.0000000, -0.0161754], [-0.0000000, -0.0022631], [0.0000000, 0.0265821], [0.0000000, 0.0010952], [0.0000000, 0.0684651], [0.0000000, 0.0069645], [-0.0000000, -0.0045252], [0.0000000, 0.0022543], [0.0000000, 0.0625389], [0.0000000, 0.3237543], [0.0000000, 0.1940629], [0.0000000, 0.1734981], [0.0000000, 0.1247640], [0.0000000, 0.0650381], [0.0000000, 0.1137902], [0.0000000, 0.0047491], [0.0000000, 0.0257106], [0.0000000, 0.1707656], [0.0000000, 0.0014199], [0.0000000, 0.0314352], [0.0000000, 0.1352370], [0.0000000, 0.1979097], [0.0000000, 0.1651745], [0.0000000, 0.2227831], [0.0000000, 0.0603219], [0.0000000, 0.0488930], [0.0000000, 0.1824606], [0.0000000, 0.1247297], [0.0000000, 0.0248158], [0.0000000, 0.1825996], [0.0000000, 0.0952352], [0.0000000, 0.1642949], [0.0000000, 0.2944667], [0.0000000, 0.0544203], [0.0000000, 0.0686279], [0.0000000, 0.1785165], [0.0000000, 0.0256898], [0.0000000, 0.2025436], [0.3238406, 0.1860109], [0.0906855, 0.0532847], [0.1192924, 0.0763401], [0.1134022, 0.0910689]]]

Expected (Unparsed): [[[0.0,0.0],[0.0,0.0],[0.0,0.0],[0.0,0.0],[0.0,0.0],[0.0,0.0],[0.0,0.0],[0.0,0.0],[0.0,0.0],[0.0,0.0],[0.0,0.0],[0.0,0.0],[0.0,0.0],[0.0,0.0],[0.0,0.0],[0.0,0.0],[0.0,0.0],[0.0,0.0],[0.0,0.0],[0.0,0.0],[0.0,0.0],[0.0,0.0],[0.0,0.0],[0.0,0.0],[-0.0,-0.1902091942608858],[0.0,0.06298772967467821],[0.0,0.0016981742397851995],[-0.0,-0.008956768229088],[-0.0,-0.016175397137749202],[-0.0,-0.0022630927676939995],[0.0,0.026582058206827176],[0.0,0.001095182675523001],[0.0,0.06846511366689481],[0.0,0.006964499578836001],[-0.0,-0.0045251880257606986],[0.0,0.0022542932372400003],[0.0,0.062538857004],[0.0,0.32375427131999995],[0.0,0.19406286154799998],[0.0,0.17349810074700003],[0.0,0.12476398233],[0.0,0.06503805086100001],[0.0,0.113790227955],[0.0,0.004749085092000001],[0.0,0.025710649380000002],[0.0,0.170765562177],[0.0,0.0014199116880000001],[0.0,0.031435172436000004],[0.0,0.13523700726000001],[0.0,0.19790973057600003],[0.0,0.165174529923],[0.0,0.222783068481],[0.0,0.060321892752],[0.0,0.04889297757000001],[0.0,0.182460632868],[0.0,0.124729675581],[0.0,0.024815765286000005],[0.0,0.18259958698800002],[0.0,0.09523524639000001],[0.0,0.16429487024400002],[0.0,0.29446671202799996],[0.0,0.054420298452000006],[0.0,0.06862791744],[0.0,0.17851648537800002],[0.0,0.025689751955999998],[0.0,0.20254355803500002],[0.3238405495225984,0.186010913088],[0.09068553446587,0.05328474313500001],[0.11929240294454331,0.076340139915],[0.1134021643607869,0.091068898953]]]

Actual:   [[[0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [-0, -0.1902], [0, 0.063], [0, 0.0017], [-0, -0.0089], [-0, -0.0161], [-0, -0.0022], [0, 0.0266], [0, 0.0011], [0, 0.0685], [0, 0.007], [-0, -0.0045], [0, 0.0023], [0, 0.0626], [0, 0.3238], [0, 0.1941], [0, 0.1735], [0, 0.1248], [0, 0.0651], [0, 0.1138], [0, 0.0048], [0, 0.0258], [0, 0.1708], [0, 0.0015], [0, 0.0315], [0, 0.1353], [0, 0.198], [0, 0.1652], [0, 0.2228], [0, 0.0604], [0, 0.0489], [0, 0.1825], [0, 0.1248], [0, 0.0249], [0, 0.1826], [0, 0.0953], [0, 0.1643], [0, 0.2945], [0, 0.0545], [0, 0.0687], [0, 0.1786], [0, 0.0257], [0, 0.2026], [0.3239, 0.1861], [0.0907, 0.0533], [0.1193, 0.0764], [0.1135, 0.0911]]]

Expected: [[[0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [-0, -0.1902], [0, 0.063], [0, 0.0017], [-0, -0.0089], [-0, -0.0161], [-0, -0.0022], [0, 0.0266], [0, 0.0011], [0, 0.0685], [0, 0.007], [-0, -0.0045], [0, 0.0023], [0, 0.0626], [0, 0.3238], [0, 0.1941], [0, 0.1735], [0, 0.1248], [0, 0.0651], [0, 0.1138], [0, 0.0048], [0, 0.0258], [0, 0.1708], [0, 0.0015], [0, 0.0315], [0, 0.1353], [0, 0.198], [0, 0.1652], [0, 0.2228], [0, 0.0604], [0, 0.0489], [0, 0.1825], [0, 0.1248], [0, 0.0249], [0, 0.1826], [0, 0.0953], [0, 0.1643], [0, 0.2945], [0, 0.0545], [0, 0.0687], [0, 0.1786], [0, 0.0257], [0, 0.2026], [0.3239, 0.1861], [0.0907, 0.0533], [0.1193, 0.0764], [0.1135, 0.0911]]]