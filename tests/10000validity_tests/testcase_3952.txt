import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Thr71082 = tf.keras.layers.Input(shape=([1, 2, 2, 1]))
in0Con37925 = tf.keras.layers.Input(shape=([3, 3, 1]))
in0Loc71228 = tf.keras.layers.Input(shape=([1, 1, 2]))
in0Max23812 = tf.keras.layers.Input(shape=([1, 2, 1]))
in1Max23812 = tf.keras.layers.Input(shape=([1, 2, 1]))
in0Con78542 = tf.keras.layers.Input(shape=([1, 2, 1]))

Thr71082 = keras.layers.ThresholdedReLU(theta=8.477586588557212, name = 'Thr71082', input_shape=(1, 2, 2, 1))(in0Thr71082)
Res33776 = keras.layers.Reshape((1, 2, 2), name = 'Res33776', )(Thr71082)
Res70123 = keras.layers.Reshape((1, 4), name = 'Res70123', )(Res33776)
GRU40368 = keras.layers.GRU(3,reset_after=False, recurrent_activation='sigmoid', name = 'GRU40368', )(Res70123)
Res66200 = keras.layers.Reshape((3, 1), name = 'Res66200', )(GRU40368)
Res3030 = keras.layers.Reshape((3, 1, 1), name = 'Res3030', )(Res66200)
Zer4763 = keras.layers.ZeroPadding2D(padding=((0, 0), (2, 0)), name = 'Zer4763', )(Res3030)
Con37925 = keras.layers.Concatenate(axis=3, name = 'Con37925', )([Zer4763,in0Con37925])
Loc71228 = keras.layers.LocallyConnected2D(2, (1, 1),strides=(8, 1), name = 'Loc71228', )(in0Loc71228)
Zer77297 = keras.layers.ZeroPadding2D(padding=((0, 0), (1, 0)), name = 'Zer77297', )(Loc71228)
Max23812 = keras.layers.Maximum(name = 'Max23812', )([in0Max23812,in1Max23812])
Con78542 = keras.layers.Concatenate(axis=3, name = 'Con78542', )([Max23812,in0Con78542])
Min32311 = keras.layers.Minimum(name = 'Min32311', )([Zer77297,Con78542])
Zer39518 = keras.layers.ZeroPadding2D(padding=((2, 0), (1, 0)), name = 'Zer39518', )(Min32311)
Max48045 = keras.layers.Maximum(name = 'Max48045', )([Con37925,Zer39518])
Sep4314 = keras.layers.SeparableConv2D(4, (1, 3),strides=(1, 1), padding='same', name = 'Sep4314', )(Max48045)
model = tf.keras.models.Model(inputs=[in0Thr71082,in0Con37925,in0Loc71228,in0Max23812,in1Max23812,in0Con78542], outputs=Sep4314)
w = model.get_layer('GRU40368').get_weights() 
w[0] = np.array([[6, 6, 6, 8, 4, 4, 9, 1, 7], [2, 7, 7, 8, 6, 8, 9, 8, 5], [3, 6, 2, 10, 9, 4, 10, 6, 6], [5, 8, 6, 10, 2, 1, 7, 10, 4]])
w[1] = np.array([[9, 6, 7, 2, 2, 1, 5, 8, 2], [4, 9, 1, 3, 2, 10, 3, 6, 2], [6, 9, 8, 5, 7, 2, 7, 1, 6]])
w[2] = np.array([5, 2, 5, 5, 5, 7, 6, 10, 4])
model.get_layer('GRU40368').set_weights(w) 
w = model.get_layer('Loc71228').get_weights() 
w[0] = np.array([[[0.6833, 0.7957], [0.9652, 0.2375]]])
w[1] = np.array([[[0, 0]]])
model.get_layer('Loc71228').set_weights(w) 
w = model.get_layer('Sep4314').get_weights() 
w[0] = np.array([[[[0.1445], [0.1126]], [[0.3141], [0.6989]], [[0.606], [0.6656]]]])
w[1] = np.array([[[[0.4762, 0.5726, 0.1427, 0.6799], [0.0879, 0.8757, 0.0021, 0.8498]]]])
w[2] = np.array([0, 0, 0, 0])
model.get_layer('Sep4314').set_weights(w) 
in0Thr71082 = tf.constant([[[[[0.4775], [0.3197]], [[0.6759], [0.9933]]]]])
in0Con37925 = tf.constant([[[[0.1123], [0.2337], [0.2751]], [[0.3466], [0.481], [0.5745]], [[0.528], [0.6935], [0.8011]]]])
in0Loc71228 = tf.constant([[[[0.1315, 0.3107]]]])
in0Max23812 = tf.constant([[[[0.3389], [0.1199]]]])
in1Max23812 = tf.constant([[[[0.0958], [0.4698]]]])
in0Con78542 = tf.constant([[[[0.1694], [0.7113]]]])
print (np.array2string(model.predict([in0Thr71082,in0Con37925,in0Loc71228,in0Max23812,in1Max23812,in0Con78542],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Sep4314.png')

LThr71082 = thresholded_relu_layer([[[[[0.4775], [0.3197]], [[0.6759], [0.9933]]]]], 8.477586588557212, Thr71082), 
LRes33776 = reshape_layer(Thr71082, [1, 2, 2], Res33776), 
LRes70123 = reshape_layer(Res33776, [1, 4], Res70123), 
LGRU40368 = gru_layer(Res70123,[[6, 6, 6, 8, 4, 4, 9, 1, 7], [2, 7, 7, 8, 6, 8, 9, 8, 5], [3, 6, 2, 10, 9, 4, 10, 6, 6], [5, 8, 6, 10, 2, 1, 7, 10, 4]],[[9, 6, 7, 2, 2, 1, 5, 8, 2], [4, 9, 1, 3, 2, 10, 3, 6, 2], [6, 9, 8, 5, 7, 2, 7, 1, 6]],[5, 2, 5, 5, 5, 7, 6, 10, 4], false, GRU40368), 
LRes66200 = reshape_layer(GRU40368, [3, 1], Res66200), 
LRes3030 = reshape_layer(Res66200, [3, 1, 1], Res3030), 
LZer4763 = zero_padding2D_layer(Res3030, 0, 0, 2, 0, Zer4763), 
LCon37925 = concatenate_layer([Zer4763,[[[[0.1123], [0.2337], [0.2751]], [[0.3466], [0.481], [0.5745]], [[0.528], [0.6935], [0.8011]]]]], 3, Con37925), 
LLoc71228 = locally_connected2D_layer([[[[0.1315, 0.3107]]]], 1, 1,[[[0.6833, 0.7957], [0.9652, 0.2375]]],[[[0, 0]]], 8, 1, Loc71228), 
LZer77297 = zero_padding2D_layer(Loc71228, 0, 0, 1, 0, Zer77297), 
LMax23812 = maximum_layer([[[[[0.3389], [0.1199]]]], [[[[0.0958], [0.4698]]]]], Max23812), 
LCon78542 = concatenate_layer([Max23812,[[[[0.1694], [0.7113]]]]], 3, Con78542), 
LMin32311 = minimum_layer([Zer77297,Con78542], Min32311), 
LZer39518 = zero_padding2D_layer(Min32311, 2, 0, 1, 0, Zer39518), 
LMax48045 = maximum_layer([Con37925,Zer39518], Max48045), 
LSep4314 = separable_conv2D_layer(Max48045, 1, 3,[[[[[0.1445], [0.1126]], [[0.3141], [0.6989]], [[0.606], [0.6656]]]],[[[[0.4762, 0.5726, 0.1427, 0.6799], [0.0879, 0.8757, 0.0021, 0.8498]]]]],[0, 0, 0, 0], 1, 1, true, Sep4314), 
exec_layers([LThr71082,LRes33776,LRes70123,LGRU40368,LRes66200,LRes3030,LZer4763,LCon37925,LLoc71228,LZer77297,LMax23812,LCon78542,LMin32311,LZer39518,LMax48045,LSep4314],["Thr71082","Res33776","Res70123","GRU40368","Res66200","Res3030","Zer4763","Con37925","Loc71228","Zer77297","Max23812","Con78542","Min32311","Zer39518","Max48045","Sep4314"],Sep4314,"Sep4314")

Actual (Unparsed): [[[[0.0205719, 0.2049464, 0.0004915, 0.1988848], [0.0334949, 0.3167726, 0.0013328, 0.3079075], [0.0202144, 0.1926160, 0.0007590, 0.1871803]], [[0.0494343, 0.4924870, 0.0011810, 0.4779210], [0.1009910, 0.7047803, 0.0118991, 0.6929099], [0.0578839, 0.4204769, 0.0062998, 0.4126923]], [[0.0730109, 0.7273676, 0.0017443, 0.7058547], [0.2071698, 1.0786759, 0.0359658, 1.0761149], [0.1143735, 0.6287728, 0.0188088, 0.6253847]]]]

Expected (Unparsed): [[[[0.020571869001,0.20494636728299997,0.0004914780989999999,0.198884804062],[0.03349490535897849,0.31677263166284564,0.0013328425899423136,0.3079075331419529],[0.020214425672534397,0.19261598509966654,0.0007590059672775259,0.18718027695500133]],[[0.049434286686,0.4924869721380001,0.001181023914,0.477921010532],[0.1009909896811568,0.7047803014603073,0.01189914472887542,0.6929098701553371],[0.05788386118526395,0.420476875524994,0.006299846858054735,0.41269228621013954]],[[0.07301086512,0.72736762896,0.0017442868799999998,0.70585475744],[0.207169787234748,1.078675859594004,0.03596581111615799,1.076114919144846],[0.1143735409051278,0.6287728139887194,0.018808776297891298,0.6253846460635781]]]]

Actual:   [[[[0.0206, 0.205, 0.0005, 0.1989], [0.0335, 0.3168, 0.0014, 0.308], [0.0203, 0.1927, 0.0008, 0.1872]], [[0.0495, 0.4925, 0.0012, 0.478], [0.101, 0.7048, 0.0119, 0.693], [0.0579, 0.4205, 0.0063, 0.4127]], [[0.0731, 0.7274, 0.0018, 0.7059], [0.2072, 1.0787, 0.036, 1.0762], [0.1144, 0.6288, 0.0189, 0.6254]]]]

Expected: [[[[0.0206, 0.205, 0.0005, 0.1989], [0.0335, 0.3168, 0.0014, 0.308], [0.0203, 0.1927, 0.0008, 0.1872]], [[0.0495, 0.4925, 0.0012, 0.478], [0.101, 0.7048, 0.0119, 0.693], [0.0579, 0.4205, 0.0063, 0.4127]], [[0.0731, 0.7274, 0.0018, 0.7059], [0.2072, 1.0787, 0.036, 1.0762], [0.1144, 0.6288, 0.0189, 0.6254]]]]