import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Glo43962 = tf.keras.layers.Input(shape=([2, 1]))
in0Dep63870 = tf.keras.layers.Input(shape=([2, 2, 2]))
in0ReL40246 = tf.keras.layers.Input(shape=([1, 1, 2, 1]))
in0Glo35420 = tf.keras.layers.Input(shape=([1, 1, 2, 1]))
in0Con48426 = tf.keras.layers.Input(shape=([1]))
in0Con82889 = tf.keras.layers.Input(shape=([2]))
in0Lea37334 = tf.keras.layers.Input(shape=([1, 2, 2]))

Glo43962 = keras.layers.GlobalAveragePooling1D(name = 'Glo43962', )(in0Glo43962)
Res28062 = keras.layers.Reshape((1, 1), name = 'Res28062', )(Glo43962)
Res78462 = keras.layers.Reshape((1, 1, 1), name = 'Res78462', )(Res28062)
Res1266 = keras.layers.Reshape((1, 1, 1, 1), name = 'Res1266', )(Res78462)
Zer49385 = keras.layers.ZeroPadding3D(padding=((0, 0), (0, 0), (1, 0)), name = 'Zer49385', )(Res1266)
Dep63870 = keras.layers.DepthwiseConv2D((2, 1),strides=(2, 2), padding='valid', name = 'Dep63870', )(in0Dep63870)
Res3106 = keras.layers.Reshape((1, 1, 2, 1), name = 'Res3106', )(Dep63870)
ReL40246 = keras.layers.ReLU(max_value=3.0391786870195134, negative_slope=4.630608250005007, threshold=1.103711127951973, name = 'ReL40246', input_shape=(1, 1, 2, 1))(in0ReL40246)
Ave74131 = keras.layers.Average(name = 'Ave74131', )([Res3106,ReL40246])
Mul99097 = keras.layers.Multiply(name = 'Mul99097', )([Zer49385,Ave74131])
Res82247 = keras.layers.Reshape((1, 1, 2), name = 'Res82247', )(Mul99097)
Res22770 = keras.layers.Reshape((1, 2), name = 'Res22770', )(Res82247)
Fla40697 = keras.layers.Flatten(name = 'Fla40697', )(Res22770)
Glo35420 = keras.layers.GlobalMaxPool3D(name = 'Glo35420', )(in0Glo35420)
Con48426 = keras.layers.Concatenate(axis=1, name = 'Con48426', )([Glo35420,in0Con48426])
Max33274 = keras.layers.Maximum(name = 'Max33274', )([Fla40697,Con48426])
Con82889 = keras.layers.Concatenate(axis=1, name = 'Con82889', )([Max33274,in0Con82889])
Lea37334 = keras.layers.LeakyReLU(alpha=3.8600914445219616, name = 'Lea37334', input_shape=(1, 2, 2))(in0Lea37334)
Res66900 = keras.layers.Reshape((1, 4), name = 'Res66900', )(Lea37334)
Glo26670 = keras.layers.GlobalAveragePooling1D(name = 'Glo26670', )(Res66900)
Add81931 = keras.layers.Add(name = 'Add81931', )([Con82889,Glo26670])
model = tf.keras.models.Model(inputs=[in0Glo43962,in0Dep63870,in0ReL40246,in0Glo35420,in0Con48426,in0Con82889,in0Lea37334], outputs=Add81931)
w = model.get_layer('Dep63870').get_weights() 
w[0] = np.array([[[[0.4966], [0.5192]]], [[[0.0931], [0.9333]]]])
w[1] = np.array([0, 0])
model.get_layer('Dep63870').set_weights(w) 
in0Glo43962 = tf.constant([[[1.0551], [1.7761]]])
in0Dep63870 = tf.constant([[[[0.0886, 0.6906], [0.4566, 0.1878]], [[0.5529, 0.1724], [0.121, 0.2815]]]])
in0ReL40246 = tf.constant([[[[[0.3305], [0.9728]]]]])
in0Glo35420 = tf.constant([[[[[1.7845], [1.6794]]]]])
in0Con48426 = tf.constant([[0.8978]])
in0Con82889 = tf.constant([[0.1168, 0.7935]])
in0Lea37334 = tf.constant([[[[0.0354, 0.4343], [0.4084, 0.2174]]]])
print (np.array2string(model.predict([in0Glo43962,in0Dep63870,in0ReL40246,in0Glo35420,in0Con48426,in0Con82889,in0Lea37334],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Add81931.png')

LGlo43962 = global_average_pooling1D_layer([[[1.0551], [1.7761]]], Glo43962), 
LRes28062 = reshape_layer(Glo43962, [1, 1], Res28062), 
LRes78462 = reshape_layer(Res28062, [1, 1, 1], Res78462), 
LRes1266 = reshape_layer(Res78462, [1, 1, 1, 1], Res1266), 
LZer49385 = zero_padding3D_layer(Res1266, 0, 0, 0, 0, 1, 0, Zer49385), 
LDep63870 = depthwise_conv2D_layer([[[[0.0886, 0.6906], [0.4566, 0.1878]], [[0.5529, 0.1724], [0.121, 0.2815]]]], 2, 1,[[[[0.4966], [0.5192]]], [[[0.0931], [0.9333]]]],[0, 0], 2, 2, false, Dep63870), 
LRes3106 = reshape_layer(Dep63870, [1, 1, 2, 1], Res3106), 
LReL40246 = relu_layer([[[[[0.3305], [0.9728]]]]], 3.0391786870195134, 4.630608250005007, 1.103711127951973, ReL40246), 
LAve74131 = average_layer([Res3106,ReL40246], Ave74131), 
LMul99097 = multiply_layer([Zer49385,Ave74131], Mul99097), 
LRes82247 = reshape_layer(Mul99097, [1, 1, 2], Res82247), 
LRes22770 = reshape_layer(Res82247, [1, 2], Res22770), 
LFla40697 = flatten_layer(Res22770, Fla40697), 
LGlo35420 = global_max_pool3D_layer([[[[[1.7845], [1.6794]]]]], Glo35420), 
LCon48426 = concatenate_layer([Glo35420,[[0.8978]]], 1, Con48426), 
LMax33274 = maximum_layer([Fla40697,Con48426], Max33274), 
LCon82889 = concatenate_layer([Max33274,[[0.1168, 0.7935]]], 1, Con82889), 
LLea37334 = leaky_relu_layer([[[[0.0354, 0.4343], [0.4084, 0.2174]]]], 3.8600914445219616, Lea37334), 
LRes66900 = reshape_layer(Lea37334, [1, 4], Res66900), 
LGlo26670 = global_average_pooling1D_layer(Res66900, Glo26670), 
LAdd81931 = add_layer([Con82889,Glo26670], Add81931), 
exec_layers([LGlo43962,LRes28062,LRes78462,LRes1266,LZer49385,LDep63870,LRes3106,LReL40246,LAve74131,LMul99097,LRes82247,LRes22770,LFla40697,LGlo35420,LCon48426,LMax33274,LCon82889,LLea37334,LRes66900,LGlo26670,LAdd81931],["Glo43962","Res28062","Res78462","Res1266","Zer49385","Dep63870","Res3106","ReL40246","Ave74131","Mul99097","Res82247","Res22770","Fla40697","Glo35420","Con48426","Max33274","Con82889","Lea37334","Res66900","Glo26670","Add81931"],Add81931,"Add81931")

Actual (Unparsed): [[1.8199000, 1.3321000, 0.5252000, 1.0109000]]

Expected (Unparsed): [[1.8199,1.3321,0.5252,1.0109]]

Actual:   [[1.8199, 1.3321, 0.5252, 1.0109]]

Expected: [[1.8199, 1.3321, 0.5252, 1.0109]]