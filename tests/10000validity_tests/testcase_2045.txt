import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Max663 = tf.keras.layers.Input(shape=([2, 1]))
in0LST51752 = tf.keras.layers.Input(shape=([3, 3]))

Max663 = keras.layers.MaxPool1D(pool_size=(2), strides=(1), padding='valid', name = 'Max663', )(in0Max663)
Fla61245 = keras.layers.Flatten(name = 'Fla61245', )(Max663)
LST51752 = keras.layers.LSTM(1,recurrent_activation='sigmoid', name = 'LST51752', )(in0LST51752)
Mul16778 = keras.layers.Multiply(name = 'Mul16778', )([Fla61245,LST51752])
model = tf.keras.models.Model(inputs=[in0Max663,in0LST51752], outputs=Mul16778)
w = model.get_layer('LST51752').get_weights() 
w[0] = np.array([[4, 1, 1, 4], [6, 8, 5, 1], [10, 8, 5, 2]])
w[1] = np.array([[1, 10, 2, 8]])
w[2] = np.array([7, 5, 8, 3])
model.get_layer('LST51752').set_weights(w) 
in0Max663 = tf.constant([[[1.5146], [1.5906]]])
in0LST51752 = tf.constant([[[4, 8, 1], [10, 4, 10], [9, 1, 6]]])
print (np.array2string(model.predict([in0Max663,in0LST51752],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Mul16778.png')

LMax663 = max_pool1D_layer([[[1.5146], [1.5906]]], 2, 1, false, Max663), 
LFla61245 = flatten_layer(Max663, Fla61245), 
LLST51752 = lstm_layer([[[4, 8, 1], [10, 4, 10], [9, 1, 6]]],[[4, 1, 1, 4], [6, 8, 5, 1], [10, 8, 5, 2]],[[1, 10, 2, 8]],[7, 5, 8, 3], LST51752), 
LMul16778 = multiply_layer([Fla61245,LST51752], Mul16778), 
exec_layers([LMax663,LFla61245,LLST51752,LMul16778],["Max663","Fla61245","LST51752","Mul16778"],Mul16778,"Mul16778")

Actual (Unparsed): [[1.5827341]]

Expected (Unparsed): [[1.5827340912141135]]

Actual:   [[1.5828]]

Expected: [[1.5828]]