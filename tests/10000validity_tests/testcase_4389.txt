import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Dot74244 = tf.keras.layers.Input(shape=([2, 3]))
in1Dot74244 = tf.keras.layers.Input(shape=([2, 3]))
in0Ave89955 = tf.keras.layers.Input(shape=([2, 1, 2, 1]))
in1Ave89955 = tf.keras.layers.Input(shape=([2, 1, 2, 1]))

Dot74244 = keras.layers.Dot(axes=(2, 2), name = 'Dot74244', )([in0Dot74244,in1Dot74244])
Res37942 = keras.layers.Reshape((2, 2, 1), name = 'Res37942', )(Dot74244)
Res40232 = keras.layers.Reshape((2, 2, 1, 1), name = 'Res40232', )(Res37942)
Zer43045 = keras.layers.ZeroPadding3D(padding=((1, 1), (1, 1), (1, 1)), name = 'Zer43045', )(Res40232)
Res39048 = keras.layers.Reshape((4, 4, 3), name = 'Res39048', )(Zer43045)
Res13429 = keras.layers.Reshape((4, 12), name = 'Res13429', )(Res39048)
Glo60114 = keras.layers.GlobalMaxPool1D(name = 'Glo60114', )(Res13429)
Res48382 = keras.layers.Reshape((12, 1), name = 'Res48382', )(Glo60114)
Res35240 = keras.layers.Reshape((12, 1, 1), name = 'Res35240', )(Res48382)
Res8977 = keras.layers.Reshape((12, 1, 1, 1), name = 'Res8977', )(Res35240)
Zer76010 = keras.layers.ZeroPadding3D(padding=((0, 0), (0, 0), (2, 0)), name = 'Zer76010', )(Res8977)
Ave89955 = keras.layers.Average(name = 'Ave89955', )([in0Ave89955,in1Ave89955])
Zer77438 = keras.layers.ZeroPadding3D(padding=((10, 0), (0, 0), (1, 0)), name = 'Zer77438', )(Ave89955)
Max30688 = keras.layers.Maximum(name = 'Max30688', )([Zer76010,Zer77438])
Res65776 = keras.layers.Reshape((12, 1, 3), name = 'Res65776', )(Max30688)
Con36323 = keras.layers.Conv2D(2, (8, 1),strides=(1, 1), padding='same', dilation_rate=(1, 1), name = 'Con36323', )(Res65776)
model = tf.keras.models.Model(inputs=[in0Dot74244,in1Dot74244,in0Ave89955,in1Ave89955], outputs=Con36323)
w = model.get_layer('Con36323').get_weights() 
w[0] = np.array([[[[0.4639, 0.8436], [0.2242, 0.2823], [0.615, 0.2448]]], [[[0.008, 0.8713], [0.9809, 0.5735], [0.5612, 0.8215]]], [[[0.5219, 0.1147], [0.8833, 0.4746], [0.5126, 0.0126]]], [[[0.1906, 0.969], [0.8505, 0.4189], [0.7192, 0.7338]]], [[[0.5804, 0.1033], [0.3123, 0.5079], [0.6689, 0.6247]]], [[[0.1071, 0.1974], [0.4067, 0.446], [0.1727, 0.5035]]], [[[0.8105, 0.5707], [0.6568, 0.2692], [0.0521, 0.3751]]], [[[0.8518, 0.9218], [0.2498, 0.3176], [0.6057, 0.2223]]]])
w[1] = np.array([0, 0])
model.get_layer('Con36323').set_weights(w) 
in0Dot74244 = tf.constant([[[0.3193, 0.2101, 0.703], [0.4947, 0.2717, 0.9873]]])
in1Dot74244 = tf.constant([[[0.0294, 0.9128, 0.2164], [0.4461, 0.6689, 0.4052]]])
in0Ave89955 = tf.constant([[[[[0.1048], [0.8835]]], [[[0.282], [0.288]]]]])
in1Ave89955 = tf.constant([[[[[0.1331], [0.2308]]], [[[0.9258], [0.2319]]]]])
print (np.array2string(model.predict([in0Dot74244,in1Dot74244,in0Ave89955,in1Ave89955],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Con36323.png')

LDot74244 = dot_layer([[[0.3193, 0.2101, 0.703], [0.4947, 0.2717, 0.9873]]], [[[0.0294, 0.9128, 0.2164], [0.4461, 0.6689, 0.4052]]], 2, 2, Dot74244), 
LRes37942 = reshape_layer(Dot74244, [2, 2, 1], Res37942), 
LRes40232 = reshape_layer(Res37942, [2, 2, 1, 1], Res40232), 
LZer43045 = zero_padding3D_layer(Res40232, 1, 1, 1, 1, 1, 1, Zer43045), 
LRes39048 = reshape_layer(Zer43045, [4, 4, 3], Res39048), 
LRes13429 = reshape_layer(Res39048, [4, 12], Res13429), 
LGlo60114 = global_max_pool1D_layer(Res13429, Glo60114), 
LRes48382 = reshape_layer(Glo60114, [12, 1], Res48382), 
LRes35240 = reshape_layer(Res48382, [12, 1, 1], Res35240), 
LRes8977 = reshape_layer(Res35240, [12, 1, 1, 1], Res8977), 
LZer76010 = zero_padding3D_layer(Res8977, 0, 0, 0, 0, 2, 0, Zer76010), 
LAve89955 = average_layer([[[[[[0.1048], [0.8835]]], [[[0.282], [0.288]]]]], [[[[[0.1331], [0.2308]]], [[[0.9258], [0.2319]]]]]], Ave89955), 
LZer77438 = zero_padding3D_layer(Ave89955, 10, 0, 0, 0, 1, 0, Zer77438), 
LMax30688 = maximum_layer([Zer76010,Zer77438], Max30688), 
LRes65776 = reshape_layer(Max30688, [12, 1, 3], Res65776), 
LCon36323 = conv2D_layer(Res65776, 8, 1,[[[[0.4639, 0.8436], [0.2242, 0.2823], [0.615, 0.2448]]], [[[0.008, 0.8713], [0.9809, 0.5735], [0.5612, 0.8215]]], [[[0.5219, 0.1147], [0.8833, 0.4746], [0.5126, 0.0126]]], [[[0.1906, 0.969], [0.8505, 0.4189], [0.7192, 0.7338]]], [[[0.5804, 0.1033], [0.3123, 0.5079], [0.6689, 0.6247]]], [[[0.1071, 0.1974], [0.4067, 0.446], [0.1727, 0.5035]]], [[[0.8105, 0.5707], [0.6568, 0.2692], [0.0521, 0.3751]]], [[[0.8518, 0.9218], [0.2498, 0.3176], [0.6057, 0.2223]]]],[0, 0], 1, 1, true, 1, 1, Con36323), 
exec_layers([LDot74244,LRes37942,LRes40232,LZer43045,LRes39048,LRes13429,LGlo60114,LRes48382,LRes35240,LRes8977,LZer76010,LAve89955,LZer77438,LMax30688,LRes65776,LCon36323],["Dot74244","Res37942","Res40232","Zer43045","Res39048","Res13429","Glo60114","Res48382","Res35240","Res8977","Zer76010","Ave89955","Zer77438","Max30688","Res65776","Con36323"],Con36323,"Con36323")

Actual (Unparsed): [[[[0.2884366, 0.1058601]], [[0.0248102, 0.1786240]], [[0.0822404, 0.2397685]], [[0.8045946, 0.4758757]], [[0.3842949, 0.6504484]], [[0.3826902, 0.4100487]], [[1.1712037, 1.0541434]], [[1.2854685, 1.1960281]], [[0.9661328, 0.6037651]], [[1.1506769, 1.4679277]], [[1.3578728, 1.1242234]], [[1.0912366, 0.5071988]]]]

Expected (Unparsed): [[[[0.288436556862,0.105860073618]],[[0.024810210686,0.17862399286599998]],[[0.082240372082,0.23976854280999996]],[[0.804594618806,0.47587567705]],[[0.3842948677679999,0.6504484036839999]],[[0.38269025066799994,0.41004872527599995]],[[1.171203670456,1.054143377762]],[[1.285468504292,1.1960281338560002]],[[0.966132809976,0.603765094976]],[[1.1506768563120002,1.4679276578400002]],[[1.3578728324,1.124223445248]],[[1.0912366150000001,0.50719878]]]]

Actual:   [[[[0.2885, 0.1059]], [[0.0249, 0.1787]], [[0.0823, 0.2398]], [[0.8046, 0.4759]], [[0.3843, 0.6505]], [[0.3827, 0.4101]], [[1.1713, 1.0542]], [[1.2855, 1.1961]], [[0.9662, 0.6038]], [[1.1507, 1.468]], [[1.3579, 1.1243]], [[1.0913, 0.5072]]]]

Expected: [[[[0.2885, 0.1059]], [[0.0249, 0.1787]], [[0.0823, 0.2398]], [[0.8046, 0.4759]], [[0.3843, 0.6505]], [[0.3827, 0.4101]], [[1.1713, 1.0542]], [[1.2855, 1.1961]], [[0.9662, 0.6038]], [[1.1507, 1.468]], [[1.3579, 1.1243]], [[1.0913, 0.5072]]]]