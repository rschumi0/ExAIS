import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Cro18771 = tf.keras.layers.Input(shape=([4, 4]))
in0Min25975 = tf.keras.layers.Input(shape=([2, 2, 1]))
in1Min25975 = tf.keras.layers.Input(shape=([2, 2, 1]))

Cro18771 = keras.layers.Cropping1D(cropping=((2, 0)), name = 'Cro18771', )(in0Cro18771)
Res3434 = keras.layers.Reshape((2, 4, 1), name = 'Res3434', )(Cro18771)
Min25975 = keras.layers.Minimum(name = 'Min25975', )([in0Min25975,in1Min25975])
Zer26312 = keras.layers.ZeroPadding2D(padding=((0, 0), (2, 0)), name = 'Zer26312', )(Min25975)
Mul57590 = keras.layers.Multiply(name = 'Mul57590', )([Res3434,Zer26312])
Res78705 = keras.layers.Reshape((2, 4), name = 'Res78705', )(Mul57590)
Fla63604 = keras.layers.Flatten(name = 'Fla63604', )(Res78705)
Res38876 = keras.layers.Reshape((8, 1), name = 'Res38876', )(Fla63604)
Glo72706 = keras.layers.GlobalAveragePooling1D(name = 'Glo72706', )(Res38876)
Res43490 = keras.layers.Reshape((1, 1), name = 'Res43490', )(Glo72706)
LST58354 = keras.layers.LSTM(3,recurrent_activation='sigmoid', name = 'LST58354', )(Res43490)
model = tf.keras.models.Model(inputs=[in0Cro18771,in0Min25975,in1Min25975], outputs=LST58354)
w = model.get_layer('LST58354').get_weights() 
w[0] = np.array([[9, 10, 6, 4, 1, 1, 9, 5, 8, 7, 3, 3]])
w[1] = np.array([[2, 3, 1, 1, 5, 5, 2, 1, 9, 9, 3, 9], [4, 3, 3, 4, 8, 10, 2, 3, 5, 3, 4, 8], [6, 7, 2, 3, 8, 2, 2, 7, 3, 7, 5, 1]])
w[2] = np.array([5, 2, 1, 2, 7, 1, 4, 3, 9, 2, 1, 7])
model.get_layer('LST58354').set_weights(w) 
in0Cro18771 = tf.constant([[[1.8986, 1.7243, 1.8402, 1.9718], [1.1604, 1.1308, 1.1298, 1.9289], [1.6622, 1.333, 1.8393, 1.9896], [1.092, 1.319, 1.3911, 1.3785]]])
in0Min25975 = tf.constant([[[[0.7196], [0.0961]], [[0.7893], [0.0665]]]])
in1Min25975 = tf.constant([[[[0.0813], [0.8323]], [[0.3384], [0.0152]]]])
print (np.array2string(model.predict([in0Cro18771,in0Min25975,in1Min25975],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='LST58354.png')

LCro18771 = cropping1D_layer([[[1.8986, 1.7243, 1.8402, 1.9718], [1.1604, 1.1308, 1.1298, 1.9289], [1.6622, 1.333, 1.8393, 1.9896], [1.092, 1.319, 1.3911, 1.3785]]], 2, 0, Cro18771), 
LRes3434 = reshape_layer(Cro18771, [2, 4, 1], Res3434), 
LMin25975 = minimum_layer([[[[[0.7196], [0.0961]], [[0.7893], [0.0665]]]], [[[[0.0813], [0.8323]], [[0.3384], [0.0152]]]]], Min25975), 
LZer26312 = zero_padding2D_layer(Min25975, 0, 0, 2, 0, Zer26312), 
LMul57590 = multiply_layer([Res3434,Zer26312], Mul57590), 
LRes78705 = reshape_layer(Mul57590, [2, 4], Res78705), 
LFla63604 = flatten_layer(Res78705, Fla63604), 
LRes38876 = reshape_layer(Fla63604, [8, 1], Res38876), 
LGlo72706 = global_average_pooling1D_layer(Res38876, Glo72706), 
LRes43490 = reshape_layer(Glo72706, [1, 1], Res43490), 
LLST58354 = lstm_layer(Res43490,[[9, 10, 6, 4, 1, 1, 9, 5, 8, 7, 3, 3]],[[2, 3, 1, 1, 5, 5, 2, 1, 9, 9, 3, 9], [4, 3, 3, 4, 8, 10, 2, 3, 5, 3, 4, 8], [6, 7, 2, 3, 8, 2, 2, 7, 3, 7, 5, 1]],[5, 2, 1, 2, 7, 1, 4, 3, 9, 2, 1, 7], LST58354), 
exec_layers([LCro18771,LRes3434,LMin25975,LZer26312,LMul57590,LRes78705,LFla63604,LRes38876,LGlo72706,LRes43490,LLST58354],["Cro18771","Res3434","Min25975","Zer26312","Mul57590","Res78705","Fla63604","Res38876","Glo72706","Res43490","LST58354"],LST58354,"LST58354")

Actual (Unparsed): [[0.7138125, 0.5838187, 0.6829044]]

Expected (Unparsed): [[0.7138125178871823,0.5838186879615164,0.6829044212235807]]

Actual:   [[0.7139, 0.5839, 0.683]]

Expected: [[0.7139, 0.5839, 0.683]]