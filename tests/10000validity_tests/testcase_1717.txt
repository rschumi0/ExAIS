import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Min59600 = tf.keras.layers.Input(shape=([1, 2]))
in1Min59600 = tf.keras.layers.Input(shape=([1, 2]))

Min59600 = keras.layers.Minimum(name = 'Min59600', )([in0Min59600,in1Min59600])
Res28371 = keras.layers.Reshape((1, 2, 1), name = 'Res28371', )(Min59600)
Con75213 = keras.layers.Conv2DTranspose(2, (1, 2),strides=(1, 2), padding='valid', name = 'Con75213', )(Res28371)
Res94990 = keras.layers.Reshape((1, 4, 2, 1), name = 'Res94990', )(Con75213)
Con68880 = keras.layers.Conv3DTranspose(2, (1, 2, 2),strides=(1, 1, 1), padding='valid', name = 'Con68880', )(Res94990)
model = tf.keras.models.Model(inputs=[in0Min59600,in1Min59600], outputs=Con68880)
w = model.get_layer('Con75213').get_weights() 
w[0] = np.array([[[[0.3604], [0.4372]], [[0.1252], [0.6867]]]])
w[1] = np.array([0, 0])
model.get_layer('Con75213').set_weights(w) 
w = model.get_layer('Con68880').get_weights() 
w[0] = np.array([[[[[0.0166], [0.6242]], [[0.3042], [0.3542]]], [[[0.337], [0.8708]], [[0.1836], [0.7579]]]]])
w[1] = np.array([0, 0])
model.get_layer('Con68880').set_weights(w) 
in0Min59600 = tf.constant([[[0.0602, 0.8344]]])
in1Min59600 = tf.constant([[[0.627, 0.8111]]])
print (np.array2string(model.predict([in0Min59600,in1Min59600],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Con68880.png')

LMin59600 = minimum_layer([[[[0.0602, 0.8344]]], [[[0.627, 0.8111]]]], Min59600), 
LRes28371 = reshape_layer(Min59600, [1, 2, 1], Res28371), 
LCon75213 = conv2D_transpose_layer(Res28371, 1, 2,[[[[0.3604], [0.4372]], [[0.1252], [0.6867]]]],[0, 0], 1, 2, false, Con75213), 
LRes94990 = reshape_layer(Con75213, [1, 4, 2, 1], Res94990), 
LCon68880 = conv3D_transpose_layer(Res94990, 1, 2, 2,[[[[[0.0166], [0.6242]], [[0.3042], [0.3542]]], [[[0.337], [0.8708]], [[0.1836], [0.7579]]]]],[0, 0], 1, 1, 1, false, Con68880), 
exec_layers([LMin59600,LRes28371,LCon75213,LRes94990,LCon68880],["Min59600","Res28371","Con75213","Res94990","Con68880"],Con68880,"Con68880")

Actual (Unparsed): [[[[[0.0003602, 0.0135427], [0.0070369, 0.0241133], [0.0080064, 0.0093223]], [[0.0074367, 0.0235976], [0.0158321, 0.0678361], [0.0174077, 0.0345899]], [[0.0073925, 0.1890297], [0.1101256, 0.3665999], [0.1154632, 0.1569350]], [[0.1001977, 0.3179400], [0.2133119, 0.9139839], [0.2345410, 0.4660443]], [[0.0342223, 0.0884295], [0.2063476, 0.5619848], [0.1022620, 0.4221369]]]]]

Expected (Unparsed): [[[[[0.000360154928,0.013542693136],[0.007036850240000001,0.024113345983999997],[0.008006373648,0.009322345647999998]],[[0.0074366938240000005,0.023597566831999997],[0.01583205218,0.06783606298],[0.017407676412,0.03458989780399999]],[[0.0073925017840000004,0.18902967308000002],[0.11012561044400002,0.3665999044],[0.11546315308800001,0.15693498205]],[[0.10019771363200002,0.31793997437599997],[0.21331191899000002,0.9139838983900002],[0.23454096906600003,0.466044287522]],[[0.034222255640000004,0.08842949617600002],[0.20634758728200003,0.561984780584],[0.10226196313200002,0.4221369382230001]]]]]

Actual:   [[[[[0.0004, 0.0136], [0.0071, 0.0242], [0.0081, 0.0094]], [[0.0075, 0.0236], [0.0159, 0.0679], [0.0175, 0.0346]], [[0.0074, 0.1891], [0.1102, 0.3666], [0.1155, 0.157]], [[0.1002, 0.318], [0.2134, 0.914], [0.2346, 0.4661]], [[0.0343, 0.0885], [0.2064, 0.562], [0.1023, 0.4222]]]]]

Expected: [[[[[0.0004, 0.0136], [0.0071, 0.0242], [0.0081, 0.0094]], [[0.0075, 0.0236], [0.0159, 0.0679], [0.0175, 0.0346]], [[0.0074, 0.1891], [0.1102, 0.3666], [0.1155, 0.157]], [[0.1002, 0.318], [0.2134, 0.914], [0.2346, 0.4661]], [[0.0343, 0.0885], [0.2064, 0.562], [0.1023, 0.4222]]]]]