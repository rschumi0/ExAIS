import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Mul7898 = tf.keras.layers.Input(shape=([1, 2]))
in1Mul7898 = tf.keras.layers.Input(shape=([1, 2]))

Mul7898 = keras.layers.Multiply(name = 'Mul7898', )([in0Mul7898,in1Mul7898])
Res56523 = keras.layers.Reshape((1, 2, 1), name = 'Res56523', )(Mul7898)
Dep73053 = keras.layers.DepthwiseConv2D((1, 1),strides=(1, 1), padding='same', name = 'Dep73053', )(Res56523)
Res29544 = keras.layers.Reshape((1, 2), name = 'Res29544', )(Dep73053)
Cro24937 = keras.layers.Cropping1D(cropping=((0, 0)), name = 'Cro24937', )(Res29544)
model = tf.keras.models.Model(inputs=[in0Mul7898,in1Mul7898], outputs=Cro24937)
w = model.get_layer('Dep73053').get_weights() 
w[0] = np.array([[[[0.6503]]]])
w[1] = np.array([0])
model.get_layer('Dep73053').set_weights(w) 
in0Mul7898 = tf.constant([[[0.6981, 0.0816]]])
in1Mul7898 = tf.constant([[[0.659, 0.5606]]])
print (np.array2string(model.predict([in0Mul7898,in1Mul7898],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Cro24937.png')

LMul7898 = multiply_layer([[[[0.6981, 0.0816]]], [[[0.659, 0.5606]]]], Mul7898), 
LRes56523 = reshape_layer(Mul7898, [1, 2, 1], Res56523), 
LDep73053 = depthwise_conv2D_layer(Res56523, 1, 1,[[[[0.6503]]]],[0], 1, 1, true, Dep73053), 
LRes29544 = reshape_layer(Dep73053, [1, 2], Res29544), 
LCro24937 = cropping1D_layer(Res29544, 0, 0, Cro24937), 
exec_layers([LMul7898,LRes56523,LDep73053,LRes29544,LCro24937],["Mul7898","Res56523","Dep73053","Res29544","Cro24937"],Cro24937,"Cro24937")

Actual (Unparsed): [[[0.2991691, 0.0297479]]]

Expected (Unparsed): [[[0.29916914937000005,0.029747947488000002]]]

Actual:   [[[0.2992, 0.0298]]]

Expected: [[[0.2992, 0.0298]]]