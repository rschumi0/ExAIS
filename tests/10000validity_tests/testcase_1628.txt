import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Sub72422 = tf.keras.layers.Input(shape=([3, 2, 2]))
in1Sub72422 = tf.keras.layers.Input(shape=([3, 2, 2]))
in0Con81473 = tf.keras.layers.Input(shape=([3, 3, 1]))
in0Sub28671 = tf.keras.layers.Input(shape=([3, 3, 3]))
in1Sub28671 = tf.keras.layers.Input(shape=([3, 3, 3]))

Sub72422 = keras.layers.Subtract(name = 'Sub72422', )([in0Sub72422,in1Sub72422])
Zer83912 = keras.layers.ZeroPadding2D(padding=((0, 0), (1, 0)), name = 'Zer83912', )(Sub72422)
Con81473 = keras.layers.Concatenate(axis=3, name = 'Con81473', )([Zer83912,in0Con81473])
Sub28671 = keras.layers.Subtract(name = 'Sub28671', )([in0Sub28671,in1Sub28671])
Mul52109 = keras.layers.Multiply(name = 'Mul52109', )([Con81473,Sub28671])
model = tf.keras.models.Model(inputs=[in0Sub72422,in1Sub72422,in0Con81473,in0Sub28671,in1Sub28671], outputs=Mul52109)
in0Sub72422 = tf.constant([[[[0.254, 0.7805], [0.8504, 0.244]], [[0.2552, 0.964], [0.2539, 0.1089]], [[0.9762, 0.2705], [0.373, 0.5863]]]])
in1Sub72422 = tf.constant([[[[0.0278, 0.4043], [0.2953, 0.7699]], [[0.4189, 0.904], [0.1176, 0.1159]], [[0.5689, 0.7393], [0.6212, 0.7518]]]])
in0Con81473 = tf.constant([[[[0.9534], [0.7431], [0.0177]], [[0.8552], [0.2183], [0.8388]], [[0.5441], [0.952], [0.9332]]]])
in0Sub28671 = tf.constant([[[[0.0205, 0.6526, 0.9669], [0.8846, 0.1432, 0.9072], [0.6848, 0.8356, 0.2572]], [[0.0629, 0.3279, 0.2644], [0.8983, 0.762, 0.9052], [0.0906, 0.3977, 0.2826]], [[0.6129, 0.4665, 0.5545], [0.7876, 0.4411, 0.9108], [0.9443, 0.7875, 0.9517]]]])
in1Sub28671 = tf.constant([[[[0.3747, 0.3219, 0.318], [0.8925, 0.5786, 0.6567], [0.733, 0.3419, 0.4304]], [[0.5658, 0.8144, 0.7642], [0.7187, 0.3014, 0.1065], [0.6947, 0.5577, 0.9898]], [[1, 0.7711, 0.2545], [0.5227, 0.1075, 0.483], [0.3676, 0.3552, 0.9033]]]])
print (np.array2string(model.predict([in0Sub72422,in1Sub72422,in0Con81473,in0Sub28671,in1Sub28671],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Mul52109.png')

LSub72422 = subtract_layer([[[[0.254, 0.7805], [0.8504, 0.244]], [[0.2552, 0.964], [0.2539, 0.1089]], [[0.9762, 0.2705], [0.373, 0.5863]]]], [[[[0.0278, 0.4043], [0.2953, 0.7699]], [[0.4189, 0.904], [0.1176, 0.1159]], [[0.5689, 0.7393], [0.6212, 0.7518]]]], Sub72422), 
LZer83912 = zero_padding2D_layer(Sub72422, 0, 0, 1, 0, Zer83912), 
LCon81473 = concatenate_layer([Zer83912,[[[[0.9534], [0.7431], [0.0177]], [[0.8552], [0.2183], [0.8388]], [[0.5441], [0.952], [0.9332]]]]], 3, Con81473), 
LSub28671 = subtract_layer([[[[0.0205, 0.6526, 0.9669], [0.8846, 0.1432, 0.9072], [0.6848, 0.8356, 0.2572]], [[0.0629, 0.3279, 0.2644], [0.8983, 0.762, 0.9052], [0.0906, 0.3977, 0.2826]], [[0.6129, 0.4665, 0.5545], [0.7876, 0.4411, 0.9108], [0.9443, 0.7875, 0.9517]]]], [[[[0.3747, 0.3219, 0.318], [0.8925, 0.5786, 0.6567], [0.733, 0.3419, 0.4304]], [[0.5658, 0.8144, 0.7642], [0.7187, 0.3014, 0.1065], [0.6947, 0.5577, 0.9898]], [[1, 0.7711, 0.2545], [0.5227, 0.1075, 0.483], [0.3676, 0.3552, 0.9033]]]], Sub28671), 
LMul52109 = multiply_layer([Con81473,Sub28671], Mul52109), 
exec_layers([LSub72422,LZer83912,LCon81473,LSub28671,LMul52109],["Sub72422","Zer83912","Con81473","Sub28671","Mul52109"],Mul52109,"Mul52109")

Actual (Unparsed): [[[[-0.0000000, 0.0000000, 0.6186613], [-0.0017870, -0.1637975, 0.1861465], [-0.0267558, -0.2596369, -0.0030656]], [[-0.0000000, -0.0000000, -0.4274289], [-0.0294005, 0.0276360, 0.1743562], [-0.0823388, 0.0011200, -0.5931994]], [[-0.0000000, -0.0000000, 0.1632300], [0.1078938, -0.1563917, 0.4072656], [-0.1431370, -0.0715456, 0.0451669]]]]

Expected (Unparsed): [[[[-0.0,0.0,0.6186612600000001],[-0.001786979999999979,-0.16379748,0.18614655000000005],[-0.026755820000000013,-0.25963683000000004,-0.0030656400000000006]],[[-0.0,-0.0,-0.42742895999999997],[-0.02940052,0.027635999999999973,0.17435620999999998],[-0.08233883000000002,0.0011200000000000008,-0.5931993600000001]],[[-0.0,-0.0,0.16323000000000001],[0.10789376999999996,-0.15639167999999998,0.40726560000000006],[-0.14313694,-0.07154564999999999,0.04516688]]]]

Actual:   [[[[-0, 0, 0.6187], [-0.0017, -0.1637, 0.1862], [-0.0267, -0.2596, -0.003]], [[-0, -0, -0.4274], [-0.0294, 0.0277, 0.1744], [-0.0823, 0.0012, -0.5931]], [[-0, -0, 0.1633], [0.1079, -0.1563, 0.4073], [-0.1431, -0.0715, 0.0452]]]]

Expected: [[[[-0, 0, 0.6187], [-0.0017, -0.1637, 0.1862], [-0.0267, -0.2596, -0.003]], [[-0, -0, -0.4274], [-0.0294, 0.0277, 0.1744], [-0.0823, 0.0012, -0.5931]], [[-0, -0, 0.1633], [0.1079, -0.1563, 0.4073], [-0.1431, -0.0715, 0.0452]]]]