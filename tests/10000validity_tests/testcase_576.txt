import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Ave55847 = tf.keras.layers.Input(shape=([1, 1, 1, 2]))
in1Ave55847 = tf.keras.layers.Input(shape=([1, 1, 1, 2]))
in0Add46544 = tf.keras.layers.Input(shape=([2, 2, 1, 1]))
in1Add46544 = tf.keras.layers.Input(shape=([2, 2, 1, 1]))
in0Con21235 = tf.keras.layers.Input(shape=([2, 2, 1, 1]))
in0Dot69780 = tf.keras.layers.Input(shape=([3, 2]))
in1Dot69780 = tf.keras.layers.Input(shape=([3, 2]))
in0Con55461 = tf.keras.layers.Input(shape=([5]))

Ave55847 = keras.layers.Average(name = 'Ave55847', )([in0Ave55847,in1Ave55847])
Zer69607 = keras.layers.ZeroPadding3D(padding=((1, 0), (1, 0), (0, 0)), name = 'Zer69607', )(Ave55847)
Add46544 = keras.layers.Add(name = 'Add46544', )([in0Add46544,in1Add46544])
Con21235 = keras.layers.Concatenate(axis=4, name = 'Con21235', )([Add46544,in0Con21235])
Ave50843 = keras.layers.Average(name = 'Ave50843', )([Zer69607,Con21235])
Res7959 = keras.layers.Reshape((2, 2, 2), name = 'Res7959', )(Ave50843)
Res35351 = keras.layers.Reshape((2, 4), name = 'Res35351', )(Res7959)
Fla45789 = keras.layers.Flatten(name = 'Fla45789', )(Res35351)
Dot69780 = keras.layers.Dot(axes=(2, 2), name = 'Dot69780', )([in0Dot69780,in1Dot69780])
Glo70681 = keras.layers.GlobalAveragePooling1D(name = 'Glo70681', )(Dot69780)
Con55461 = keras.layers.Concatenate(axis=1, name = 'Con55461', )([Glo70681,in0Con55461])
Add29164 = keras.layers.Add(name = 'Add29164', )([Fla45789,Con55461])
model = tf.keras.models.Model(inputs=[in0Ave55847,in1Ave55847,in0Add46544,in1Add46544,in0Con21235,in0Dot69780,in1Dot69780,in0Con55461], outputs=Add29164)
in0Ave55847 = tf.constant([[[[[0.5028, 0.9556]]]]])
in1Ave55847 = tf.constant([[[[[0.5353, 0.6195]]]]])
in0Add46544 = tf.constant([[[[[0.2068]], [[0.9778]]], [[[0.1083]], [[0.541]]]]])
in1Add46544 = tf.constant([[[[[0.7183]], [[0.9688]]], [[[0.7516]], [[0.6323]]]]])
in0Con21235 = tf.constant([[[[[0.7741]], [[0.6551]]], [[[0.4047]], [[0.3109]]]]])
in0Dot69780 = tf.constant([[[0.8484, 0.0047], [0.4392, 0.8787], [0.7646, 0.1427]]])
in1Dot69780 = tf.constant([[[0.4946, 0.0365], [0.7309, 0.87], [0.5128, 0.2737]]])
in0Con55461 = tf.constant([[0.9403, 0.1078, 0.1368, 0.7367, 0.6477]])
print (np.array2string(model.predict([in0Ave55847,in1Ave55847,in0Add46544,in1Add46544,in0Con21235,in0Dot69780,in1Dot69780,in0Con55461],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Add29164.png')

LAve55847 = average_layer([[[[[[0.5028, 0.9556]]]]], [[[[[0.5353, 0.6195]]]]]], Ave55847), 
LZer69607 = zero_padding3D_layer(Ave55847, 1, 0, 1, 0, 0, 0, Zer69607), 
LAdd46544 = add_layer([[[[[[0.2068]], [[0.9778]]], [[[0.1083]], [[0.541]]]]], [[[[[0.7183]], [[0.9688]]], [[[0.7516]], [[0.6323]]]]]], Add46544), 
LCon21235 = concatenate_layer([Add46544,[[[[[0.7741]], [[0.6551]]], [[[0.4047]], [[0.3109]]]]]], 4, Con21235), 
LAve50843 = average_layer([Zer69607,Con21235], Ave50843), 
LRes7959 = reshape_layer(Ave50843, [2, 2, 2], Res7959), 
LRes35351 = reshape_layer(Res7959, [2, 4], Res35351), 
LFla45789 = flatten_layer(Res35351, Fla45789), 
LDot69780 = dot_layer([[[0.8484, 0.0047], [0.4392, 0.8787], [0.7646, 0.1427]]], [[[0.4946, 0.0365], [0.7309, 0.87], [0.5128, 0.2737]]], 2, 2, Dot69780), 
LGlo70681 = global_average_pooling1D_layer(Dot69780, Glo70681), 
LCon55461 = concatenate_layer([Glo70681,[[0.9403, 0.1078, 0.1368, 0.7367, 0.6477]]], 1, Con55461), 
LAdd29164 = add_layer([Fla45789,Con55461], Add29164), 
exec_layers([LAve55847,LZer69607,LAdd46544,LCon21235,LAve50843,LRes7959,LRes35351,LFla45789,LDot69780,LGlo70681,LCon55461,LAdd29164],["Ave55847","Zer69607","Add46544","Con21235","Ave50843","Res7959","Res35351","Fla45789","Dot69780","Glo70681","Con55461","Add29164"],Add29164,"Add29164")

Actual (Unparsed): [[0.8133736, 1.1846033, 1.4177039, 1.2678500, 0.5377500, 0.3391500, 1.5828750, 1.1969250]]

Expected (Unparsed): [[0.8133735899999999,1.1846033266666667,1.41770391,1.2678500000000001,0.53775,0.33915,1.582875,1.196925]]

Actual:   [[0.8134, 1.1847, 1.4178, 1.2679, 0.5378, 0.3392, 1.5829, 1.197]]

Expected: [[0.8134, 1.1847, 1.4178, 1.2679, 0.5378, 0.3392, 1.5829, 1.197]]