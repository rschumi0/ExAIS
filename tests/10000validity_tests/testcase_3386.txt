import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Max52170 = tf.keras.layers.Input(shape=([1, 1, 2, 1]))
in1Max52170 = tf.keras.layers.Input(shape=([1, 1, 2, 1]))
in0Con56927 = tf.keras.layers.Input(shape=([2, 1]))
in0Mas41169 = tf.keras.layers.Input(shape=([3, 2, 3]))

Max52170 = keras.layers.Maximum(name = 'Max52170', )([in0Max52170,in1Max52170])
Sof61854 = keras.layers.Softmax(axis=1, name = 'Sof61854', )(Max52170)
Res49704 = keras.layers.Reshape((1, 1, 2), name = 'Res49704', )(Sof61854)
Res97432 = keras.layers.Reshape((1, 2), name = 'Res97432', )(Res49704)
Max84844 = keras.layers.MaxPool1D(pool_size=(1), name = 'Max84844', )(Res97432)
Zer67782 = keras.layers.ZeroPadding1D(padding=((1, 0)), name = 'Zer67782', )(Max84844)
Con56927 = keras.layers.Concatenate(axis=2, name = 'Con56927', )([Zer67782,in0Con56927])
Mas41169 = keras.layers.Masking(mask_value=1, name = 'Mas41169', )(in0Mas41169)
ReL99550 = keras.layers.ReLU(max_value=9.30862887548493, negative_slope=1.474942214798255, threshold=9.066761370162288, name = 'ReL99550', )(Mas41169)
Zer11847 = keras.layers.ZeroPadding2D(padding=((1, 1), (1, 1)), name = 'Zer11847', )(ReL99550)
Res52098 = keras.layers.Reshape((5, 12), name = 'Res52098', )(Zer11847)
Loc750 = keras.layers.LocallyConnected1D(3, (2),strides=(1), name = 'Loc750', )(Res52098)
Cro97959 = keras.layers.Cropping1D(cropping=((2, 0)), name = 'Cro97959', )(Loc750)
Ave65661 = keras.layers.Average(name = 'Ave65661', )([Con56927,Cro97959])
model = tf.keras.models.Model(inputs=[in0Max52170,in1Max52170,in0Con56927,in0Mas41169], outputs=Ave65661)
w = model.get_layer('Loc750').get_weights() 
w[0] = np.array([[[0.2377, 0.1624, 0.1065], [0.7416, 0.863, 0.2136], [0.5378, 0.4376, 0.0651], [0.1421, 0.8112, 0.576], [0.8289, 0.7472, 0.2547], [0.99, 0.7036, 0.9111], [0.2628, 0.8764, 0.0375], [0.3041, 0.0402, 0.0133], [0.2481, 0.5733, 0.6686], [0.0645, 0.3601, 0.3818], [0.2528, 0.3936, 0.8188], [0.0651, 0.7512, 0.4168], [0.757, 0.7354, 0.8497], [0.2866, 0.4832, 0.3752], [0.9018, 0.6149, 0.9429], [0.8386, 0.5204, 0.0245], [0.3029, 0.7033, 0.8859], [0.5434, 0.6097, 0.6037], [0.2106, 0.2484, 0.6815], [0.0134, 0.0883, 0.1062], [0.0061, 0.4453, 0.6492], [0.6617, 0.4398, 0.6895], [0.5382, 0.0783, 0.9266], [0.0178, 0.7423, 0.0491]], [[0.2931, 0.2515, 0.2], [0.2653, 0.4094, 0.21], [0.9464, 0.4555, 0.6574], [0.3362, 0.2697, 0.4881], [0.6941, 0.2285, 0.9846], [0.6695, 0.9595, 0.403], [0.465, 0.1634, 0.241], [0.8515, 0.52, 0.4058], [0.8772, 0.8696, 0.5469], [0.4994, 0.8613, 0.1852], [0.648, 0.8311, 0.1854], [0.6346, 0.5614, 0.5759], [0.2601, 0.5057, 0.3215], [0.3284, 0.1335, 0.1958], [0.5394, 0.8285, 0.5424], [0.0167, 0.0729, 0.6437], [0.5301, 0.8192, 0.6432], [0.7062, 0.4835, 0.6073], [0.6449, 0.8098, 0.9615], [0.4669, 0.9983, 0.5232], [0.6133, 0.9393, 0.3946], [0.4922, 0.818, 0.4408], [0.6977, 0.7717, 0.4171], [0.4482, 0.5833, 0.6505]], [[0.0559, 0.9486, 0.7183], [0.4189, 0.2023, 0.0893], [0.9159, 0.6613, 0.8693], [0.0498, 0.736, 0.954], [0.4318, 0.9102, 0.9426], [0.2958, 0.6984, 0.6883], [0.0804, 0.2076, 0.5763], [0.7825, 0.1867, 0.1979], [0.2499, 0.7687, 0.3142], [0.2119, 0.7839, 0.8749], [0.1117, 0.7558, 0.4549], [0.4838, 0.178, 0.6202], [0.9206, 0.6987, 0.2903], [0.513, 0.5407, 0.3491], [0.8879, 0.4579, 0.7798], [0.8088, 0.3902, 0.5129], [0.642, 0.6532, 0.0237], [0.2217, 0.5138, 0.492], [0.8373, 0.2208, 0.6266], [0.2792, 0.4976, 0.598], [0.586, 0.0239, 0.273], [0.9185, 0.0634, 0.1054], [0.3391, 0.3204, 0.7969], [0.3275, 0.1658, 0.7165]], [[0.5051, 0.4421, 0.2871], [0.9344, 0.1825, 0.1146], [0.192, 0.5768, 0.5157], [0.211, 0.426, 0.4901], [0.8372, 0.843, 0.2492], [0.9926, 0.1142, 0.8251], [0.3535, 0.432, 0.9618], [0.0701, 0.2143, 0.218], [0.5638, 0.9749, 0.6204], [0.2053, 0.6867, 0.0369], [0.8109, 0.1931, 0.6801], [0.7795, 0.4288, 0.348], [0.4719, 0.5626, 0.1984], [0.5589, 0.0854, 0.0085], [0.8277, 0.0897, 0.1344], [0.5823, 0.1461, 0.4061], [0.0841, 0.3314, 0.8945], [0.7243, 0.8036, 0.9114], [0.9066, 0.6526, 0.0855], [0.8037, 0.6403, 0.2786], [0.3546, 0.0657, 0.1502], [0.1947, 0.7494, 0.0431], [0.6274, 0.2442, 0.123], [0.2226, 0.5749, 0.2256]]])
w[1] = np.array([[0, 0, 0], [0, 0, 0], [0, 0, 0], [0, 0, 0]])
model.get_layer('Loc750').set_weights(w) 
in0Max52170 = tf.constant([[[[[0.2775], [0.0781]]]]])
in1Max52170 = tf.constant([[[[[0.8934], [0.1593]]]]])
in0Con56927 = tf.constant([[[0.7952], [0.666]]])
in0Mas41169 = tf.constant([[[[1.9565, 1.4827, 1.7053], [1.7314, 1.6935, 1.9244]], [[1.1371, 1.9651, 1.8733], [1.0435, 1.9624, 1.3279]], [[1.999, 1.803, 1.9705], [1.3863, 1.1673, 1.254]]]])
print (np.array2string(model.predict([in0Max52170,in1Max52170,in0Con56927,in0Mas41169],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Ave65661.png')

LMax52170 = maximum_layer([[[[[[0.2775], [0.0781]]]]], [[[[[0.8934], [0.1593]]]]]], Max52170), 
LSof61854 = softmax_layer(Max52170, 1, Sof61854), 
LRes49704 = reshape_layer(Sof61854, [1, 1, 2], Res49704), 
LRes97432 = reshape_layer(Res49704, [1, 2], Res97432), 
LMax84844 = max_pool1D_layer(Res97432, 1, Max84844), 
LZer67782 = zero_padding1D_layer(Max84844, 1, 0, Zer67782), 
LCon56927 = concatenate_layer([Zer67782,[[[0.7952], [0.666]]]], 2, Con56927), 
LMas41169 = masking_layer([[[[1.9565, 1.4827, 1.7053], [1.7314, 1.6935, 1.9244]], [[1.1371, 1.9651, 1.8733], [1.0435, 1.9624, 1.3279]], [[1.999, 1.803, 1.9705], [1.3863, 1.1673, 1.254]]]], 1, Mas41169), 
LReL99550 = relu_layer(Mas41169, 9.30862887548493, 1.474942214798255, 9.066761370162288, ReL99550), 
LZer11847 = zero_padding2D_layer(ReL99550, 1, 1, 1, 1, Zer11847), 
LRes52098 = reshape_layer(Zer11847, [5, 12], Res52098), 
LLoc750 = locally_connected1D_layer(Res52098, 2,[[[0.2377, 0.1624, 0.1065], [0.7416, 0.863, 0.2136], [0.5378, 0.4376, 0.0651], [0.1421, 0.8112, 0.576], [0.8289, 0.7472, 0.2547], [0.99, 0.7036, 0.9111], [0.2628, 0.8764, 0.0375], [0.3041, 0.0402, 0.0133], [0.2481, 0.5733, 0.6686], [0.0645, 0.3601, 0.3818], [0.2528, 0.3936, 0.8188], [0.0651, 0.7512, 0.4168], [0.757, 0.7354, 0.8497], [0.2866, 0.4832, 0.3752], [0.9018, 0.6149, 0.9429], [0.8386, 0.5204, 0.0245], [0.3029, 0.7033, 0.8859], [0.5434, 0.6097, 0.6037], [0.2106, 0.2484, 0.6815], [0.0134, 0.0883, 0.1062], [0.0061, 0.4453, 0.6492], [0.6617, 0.4398, 0.6895], [0.5382, 0.0783, 0.9266], [0.0178, 0.7423, 0.0491]], [[0.2931, 0.2515, 0.2], [0.2653, 0.4094, 0.21], [0.9464, 0.4555, 0.6574], [0.3362, 0.2697, 0.4881], [0.6941, 0.2285, 0.9846], [0.6695, 0.9595, 0.403], [0.465, 0.1634, 0.241], [0.8515, 0.52, 0.4058], [0.8772, 0.8696, 0.5469], [0.4994, 0.8613, 0.1852], [0.648, 0.8311, 0.1854], [0.6346, 0.5614, 0.5759], [0.2601, 0.5057, 0.3215], [0.3284, 0.1335, 0.1958], [0.5394, 0.8285, 0.5424], [0.0167, 0.0729, 0.6437], [0.5301, 0.8192, 0.6432], [0.7062, 0.4835, 0.6073], [0.6449, 0.8098, 0.9615], [0.4669, 0.9983, 0.5232], [0.6133, 0.9393, 0.3946], [0.4922, 0.818, 0.4408], [0.6977, 0.7717, 0.4171], [0.4482, 0.5833, 0.6505]], [[0.0559, 0.9486, 0.7183], [0.4189, 0.2023, 0.0893], [0.9159, 0.6613, 0.8693], [0.0498, 0.736, 0.954], [0.4318, 0.9102, 0.9426], [0.2958, 0.6984, 0.6883], [0.0804, 0.2076, 0.5763], [0.7825, 0.1867, 0.1979], [0.2499, 0.7687, 0.3142], [0.2119, 0.7839, 0.8749], [0.1117, 0.7558, 0.4549], [0.4838, 0.178, 0.6202], [0.9206, 0.6987, 0.2903], [0.513, 0.5407, 0.3491], [0.8879, 0.4579, 0.7798], [0.8088, 0.3902, 0.5129], [0.642, 0.6532, 0.0237], [0.2217, 0.5138, 0.492], [0.8373, 0.2208, 0.6266], [0.2792, 0.4976, 0.598], [0.586, 0.0239, 0.273], [0.9185, 0.0634, 0.1054], [0.3391, 0.3204, 0.7969], [0.3275, 0.1658, 0.7165]], [[0.5051, 0.4421, 0.2871], [0.9344, 0.1825, 0.1146], [0.192, 0.5768, 0.5157], [0.211, 0.426, 0.4901], [0.8372, 0.843, 0.2492], [0.9926, 0.1142, 0.8251], [0.3535, 0.432, 0.9618], [0.0701, 0.2143, 0.218], [0.5638, 0.9749, 0.6204], [0.2053, 0.6867, 0.0369], [0.8109, 0.1931, 0.6801], [0.7795, 0.4288, 0.348], [0.4719, 0.5626, 0.1984], [0.5589, 0.0854, 0.0085], [0.8277, 0.0897, 0.1344], [0.5823, 0.1461, 0.4061], [0.0841, 0.3314, 0.8945], [0.7243, 0.8036, 0.9114], [0.9066, 0.6526, 0.0855], [0.8037, 0.6403, 0.2786], [0.3546, 0.0657, 0.1502], [0.1947, 0.7494, 0.0431], [0.6274, 0.2442, 0.123], [0.2226, 0.5749, 0.2256]]],[[0, 0, 0], [0, 0, 0], [0, 0, 0], [0, 0, 0]], 1, Loc750), 
LCro97959 = cropping1D_layer(Loc750, 2, 0, Cro97959), 
LAve65661 = average_layer([Con56927,Cro97959], Ave65661), 
exec_layers([LMax52170,LSof61854,LRes49704,LRes97432,LMax84844,LZer67782,LCon56927,LMas41169,LReL99550,LZer11847,LRes52098,LLoc750,LCro97959,LAve65661],["Max52170","Sof61854","Res49704","Res97432","Max84844","Zer67782","Con56927","Mas41169","ReL99550","Zer11847","Res52098","Loc750","Cro97959","Ave65661"],Ave65661,"Ave65661")

Actual (Unparsed): [[[-28.6839641, -31.8785779, -33.9902329], [-15.9381557, -16.1462607, -18.1667223]]]

Expected (Unparsed): [[[-28.68396398523094,-31.878577852618598,-33.9902328175142],[-15.938155688956464,-16.146260647007544,-18.166722257024766]]]

Actual:   [[[-28.6839, -31.8785, -33.9902], [-15.9381, -16.1462, -18.1667]]]

Expected: [[[-28.6839, -31.8785, -33.9902], [-15.9381, -16.1462, -18.1667]]]