import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Sub57755 = tf.keras.layers.Input(shape=([3, 2, 3]))
in1Sub57755 = tf.keras.layers.Input(shape=([3, 2, 3]))

Sub57755 = keras.layers.Subtract(name = 'Sub57755', )([in0Sub57755,in1Sub57755])
Den98359 = keras.layers.Dense(1,name = 'Den98359', )(Sub57755)
model = tf.keras.models.Model(inputs=[in0Sub57755,in1Sub57755], outputs=Den98359)
w = model.get_layer('Den98359').get_weights() 
w[0] = np.array([[0.4475], [0.0875], [0.1233]])
w[1] = np.array([0.5478])
model.get_layer('Den98359').set_weights(w) 
in0Sub57755 = tf.constant([[[[0.9549, 0.7814, 0.9494], [0.0098, 0.3345, 0.4553]], [[0.8865, 0.483, 0.1661], [0.6449, 0.8337, 0.5254]], [[0.2838, 0.4826, 0.6462], [0.6983, 0.2288, 0.6523]]]])
in1Sub57755 = tf.constant([[[[0.5866, 0.622, 0.2287], [0.319, 0.9027, 0.9063]], [[0.8386, 0.6797, 0.9597], [0.7665, 0.0662, 0.6042]], [[0.3253, 0.3852, 0.0227], [0.403, 0.6877, 0.544]]]])
print (np.array2string(model.predict([in0Sub57755,in1Sub57755],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Den98359.png')

LSub57755 = subtract_layer([[[[0.9549, 0.7814, 0.9494], [0.0098, 0.3345, 0.4553]], [[0.8865, 0.483, 0.1661], [0.6449, 0.8337, 0.5254]], [[0.2838, 0.4826, 0.6462], [0.6983, 0.2288, 0.6523]]]], [[[[0.5866, 0.622, 0.2287], [0.319, 0.9027, 0.9063]], [[0.8386, 0.6797, 0.9597], [0.7665, 0.0662, 0.6042]], [[0.3253, 0.3852, 0.0227], [0.403, 0.6877, 0.544]]]], Sub57755), 
LDen98359 = dense_layer(Sub57755, [[0.4475], [0.0875], [0.1233]],[0.5478], Den98359), 
exec_layers([LSub57755,LDen98359],["Sub57755","Den98359"],Den98359,"Den98359")

Actual (Unparsed): [[[[0.8154241], [0.3041072]], [[0.4541731], [0.5508242]], [[0.6146288], [0.6531464]]]]

Expected (Unparsed): [[[[0.8154240599999999],[0.30410719999999997]],[[0.45417312],[0.5508242099999999]],[[0.6146287999999999],[0.65314639]]]]

Actual:   [[[[0.8155], [0.3042]], [[0.4542], [0.5509]], [[0.6147], [0.6532]]]]

Expected: [[[[0.8155], [0.3042]], [[0.4542], [0.5509]], [[0.6147], [0.6532]]]]