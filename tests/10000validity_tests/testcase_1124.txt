import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Fla81162 = tf.keras.layers.Input(shape=([2]))

Fla81162 = keras.layers.Flatten(name = 'Fla81162', )(in0Fla81162)
Res47473 = keras.layers.Reshape((2, 1), name = 'Res47473', )(Fla81162)
Sep73766 = keras.layers.SeparableConv1D(4, (1),strides=(2), padding='valid', name = 'Sep73766', )(Res47473)
Glo93182 = keras.layers.GlobalMaxPool1D(name = 'Glo93182', )(Sep73766)
model = tf.keras.models.Model(inputs=[in0Fla81162], outputs=Glo93182)
w = model.get_layer('Sep73766').get_weights() 
w[0] = np.array([[[0.3499]]])
w[1] = np.array([[[0.5839, 0.6268, 0.6317, 0.5176]]])
w[2] = np.array([0, 0, 0, 0])
model.get_layer('Sep73766').set_weights(w) 
in0Fla81162 = tf.constant([[1.1578, 1.0881]])
print (np.array2string(model.predict([in0Fla81162],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Glo93182.png')

LFla81162 = flatten_layer([[1.1578, 1.0881]], Fla81162), 
LRes47473 = reshape_layer(Fla81162, [2, 1], Res47473), 
LSep73766 = separable_conv1D_layer(Res47473, 1,[[[[0.3499]]],[[[0.5839, 0.6268, 0.6317, 0.5176]]]],[0, 0, 0, 0], 2, false, Sep73766), 
LGlo93182 = global_max_pool1D_layer(Sep73766, Glo93182), 
exec_layers([LFla81162,LRes47473,LSep73766,LGlo93182],["Fla81162","Res47473","Sep73766","Glo93182"],Glo93182,"Glo93182")

Actual (Unparsed): [[0.2365462, 0.2539256, 0.2559106, 0.2096871]]

Expected (Unparsed): [[0.23654619305799998,0.253925593096,0.255910652774,0.20968712027199995]]

Actual:   [[0.2366, 0.254, 0.256, 0.2097]]

Expected: [[0.2366, 0.254, 0.256, 0.2097]]