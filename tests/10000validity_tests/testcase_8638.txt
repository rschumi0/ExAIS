import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Max48483 = tf.keras.layers.Input(shape=([2, 1, 2]))
in1Max48483 = tf.keras.layers.Input(shape=([2, 1, 2]))
in0Max19878 = tf.keras.layers.Input(shape=([1, 2, 2]))
in1Max19878 = tf.keras.layers.Input(shape=([1, 2, 2]))
in0Max49676 = tf.keras.layers.Input(shape=([2, 2]))
in1Max49676 = tf.keras.layers.Input(shape=([2, 2]))

Max48483 = keras.layers.Maximum(name = 'Max48483', )([in0Max48483,in1Max48483])
Zer72125 = keras.layers.ZeroPadding2D(padding=((0, 0), (2, 0)), name = 'Zer72125', )(Max48483)
Max19878 = keras.layers.Maximum(name = 'Max19878', )([in0Max19878,in1Max19878])
Zer22313 = keras.layers.ZeroPadding2D(padding=((1, 0), (1, 0)), name = 'Zer22313', )(Max19878)
Ave13959 = keras.layers.Average(name = 'Ave13959', )([Zer72125,Zer22313])
Res24695 = keras.layers.Reshape((2, 3, 2, 1), name = 'Res24695', )(Ave13959)
Max49676 = keras.layers.Maximum(name = 'Max49676', )([in0Max49676,in1Max49676])
Thr27569 = keras.layers.ThresholdedReLU(theta=5.808773892829345, name = 'Thr27569', )(Max49676)
Res30322 = keras.layers.Reshape((2, 2, 1), name = 'Res30322', )(Thr27569)
Res76362 = keras.layers.Reshape((2, 2, 1, 1), name = 'Res76362', )(Res30322)
Cro8314 = keras.layers.Cropping3D(cropping=((1, 0), (1, 0), (0, 0)), name = 'Cro8314', )(Res76362)
Zer64855 = keras.layers.ZeroPadding3D(padding=((1, 0), (2, 0), (1, 0)), name = 'Zer64855', )(Cro8314)
Max60960 = keras.layers.Maximum(name = 'Max60960', )([Res24695,Zer64855])
model = tf.keras.models.Model(inputs=[in0Max48483,in1Max48483,in0Max19878,in1Max19878,in0Max49676,in1Max49676], outputs=Max60960)
in0Max48483 = tf.constant([[[[0.9029, 0.177]], [[0.9732, 0.9232]]]])
in1Max48483 = tf.constant([[[[0.7895, 0.6656]], [[0.6681, 0.4]]]])
in0Max19878 = tf.constant([[[[0.2287, 0.5764], [0.0255, 0.5676]]]])
in1Max19878 = tf.constant([[[[0.2109, 0.4709], [0.6942, 0.6398]]]])
in0Max49676 = tf.constant([[[0.8393, 0.2349], [0.3415, 0.4509]]])
in1Max49676 = tf.constant([[[0.7159, 0.035], [0.9121, 0.8764]]])
print (np.array2string(model.predict([in0Max48483,in1Max48483,in0Max19878,in1Max19878,in0Max49676,in1Max49676],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Max60960.png')

LMax48483 = maximum_layer([[[[[0.9029, 0.177]], [[0.9732, 0.9232]]]], [[[[0.7895, 0.6656]], [[0.6681, 0.4]]]]], Max48483), 
LZer72125 = zero_padding2D_layer(Max48483, 0, 0, 2, 0, Zer72125), 
LMax19878 = maximum_layer([[[[[0.2287, 0.5764], [0.0255, 0.5676]]]], [[[[0.2109, 0.4709], [0.6942, 0.6398]]]]], Max19878), 
LZer22313 = zero_padding2D_layer(Max19878, 1, 0, 1, 0, Zer22313), 
LAve13959 = average_layer([Zer72125,Zer22313], Ave13959), 
LRes24695 = reshape_layer(Ave13959, [2, 3, 2, 1], Res24695), 
LMax49676 = maximum_layer([[[[0.8393, 0.2349], [0.3415, 0.4509]]], [[[0.7159, 0.035], [0.9121, 0.8764]]]], Max49676), 
LThr27569 = thresholded_relu_layer(Max49676, 5.808773892829345, Thr27569), 
LRes30322 = reshape_layer(Thr27569, [2, 2, 1], Res30322), 
LRes76362 = reshape_layer(Res30322, [2, 2, 1, 1], Res76362), 
LCro8314 = cropping3D_layer(Res76362, 1, 0, 1, 0, 0, 0, Cro8314), 
LZer64855 = zero_padding3D_layer(Cro8314, 1, 0, 2, 0, 1, 0, Zer64855), 
LMax60960 = maximum_layer([Res24695,Zer64855], Max60960), 
exec_layers([LMax48483,LZer72125,LMax19878,LZer22313,LAve13959,LRes24695,LMax49676,LThr27569,LRes30322,LRes76362,LCro8314,LZer64855,LMax60960],["Max48483","Zer72125","Max19878","Zer22313","Ave13959","Res24695","Max49676","Thr27569","Res30322","Res76362","Cro8314","Zer64855","Max60960"],Max60960,"Max60960")

Actual (Unparsed): [[[[[0.0000000], [0.0000000]], [[0.0000000], [0.0000000]], [[0.4514500], [0.3328000]]], [[[0.0000000], [0.0000000]], [[0.1143500], [0.2882000]], [[0.8337000], [0.7815000]]]]]

Expected (Unparsed): [[[[[0],[0]],[[0],[0]],[[0.45145],[0.3328]]],[[[0],[0]],[[0.11435],[0.2882]],[[0.8337],[0.7815000000000001]]]]]

Actual:   [[[[[0], [0]], [[0], [0]], [[0.4515], [0.3328]]], [[[0], [0]], [[0.1144], [0.2882]], [[0.8337], [0.7815]]]]]

Expected: [[[[[0], [0]], [[0], [0]], [[0.4515], [0.3328]]], [[[0], [0]], [[0.1144], [0.2882]], [[0.8337], [0.7816]]]]]