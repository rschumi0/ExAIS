import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Max86597 = tf.keras.layers.Input(shape=([1, 1]))
in1Max86597 = tf.keras.layers.Input(shape=([1, 1]))

Max86597 = keras.layers.Maximum(name = 'Max86597', )([in0Max86597,in1Max86597])
Lay46285 = keras.layers.LayerNormalization(axis=1, epsilon=1.8985170094161492, name = 'Lay46285', )(Max86597)
model = tf.keras.models.Model(inputs=[in0Max86597,in1Max86597], outputs=Lay46285)
in0Max86597 = tf.constant([[[0.3705]]])
in1Max86597 = tf.constant([[[0.1315]]])
print (np.array2string(model.predict([in0Max86597,in1Max86597],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Lay46285.png')

LMax86597 = maximum_layer([[[[0.3705]]], [[[0.1315]]]], Max86597), 
LLay46285 = layer_normalization_layer(Max86597, 1, 1.8985170094161492, Lay46285), 
exec_layers([LMax86597,LLay46285],["Max86597","Lay46285"],Lay46285,"Lay46285")

Actual (Unparsed): [[[0.0000000]]]

Expected (Unparsed): [[[0.0]]]

Actual:   [[[0]]]

Expected: [[[0]]]