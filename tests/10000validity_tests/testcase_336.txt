import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Ave40529 = tf.keras.layers.Input(shape=([1, 2, 2, 2]))
in1Ave40529 = tf.keras.layers.Input(shape=([1, 2, 2, 2]))
in0Con70409 = tf.keras.layers.Input(shape=([8, 7, 3]))
in0Lay63693 = tf.keras.layers.Input(shape=([4, 4, 4]))

Ave40529 = keras.layers.Average(name = 'Ave40529', )([in0Ave40529,in1Ave40529])
Res23840 = keras.layers.Reshape((1, 2, 4), name = 'Res23840', )(Ave40529)
Res78786 = keras.layers.Reshape((1, 8), name = 'Res78786', )(Res23840)
Per44728 = keras.layers.Permute((2,1), name = 'Per44728',)(Res78786)
Res49768 = keras.layers.Reshape((8, 1, 1), name = 'Res49768', )(Per44728)
Zer3829 = keras.layers.ZeroPadding2D(padding=((0, 0), (6, 0)), name = 'Zer3829', )(Res49768)
Con70409 = keras.layers.Concatenate(axis=3, name = 'Con70409', )([Zer3829,in0Con70409])
Lay63693 = keras.layers.LayerNormalization(axis=3, epsilon=1.4540048234558374, name = 'Lay63693', )(in0Lay63693)
ELU90270 = keras.layers.ELU(alpha=7.068087367215497, name = 'ELU90270', )(Lay63693)
Zer15249 = keras.layers.ZeroPadding2D(padding=((4, 0), (3, 0)), name = 'Zer15249', )(ELU90270)
Sub92452 = keras.layers.Subtract(name = 'Sub92452', )([Con70409,Zer15249])
Sep12733 = keras.layers.SeparableConv2D(3, (1, 4),strides=(7, 7), padding='same', name = 'Sep12733', )(Sub92452)
model = tf.keras.models.Model(inputs=[in0Ave40529,in1Ave40529,in0Con70409,in0Lay63693], outputs=Sep12733)
w = model.get_layer('Sep12733').get_weights() 
w[0] = np.array([[[[0.7699], [0.2867], [0.5571], [0.2899]], [[0.4336], [0.157], [0.3154], [0.9645]], [[0.3055], [0.4124], [0.6332], [0.6818]], [[0.7194], [0.4915], [0.5784], [0.0297]]]])
w[1] = np.array([[[[0.5949, 0.3224, 0.5218], [0.9136, 0.8901, 0.1343], [0.2731, 0.5879, 0.4848], [0.7129, 0.1773, 0.8559]]]])
w[2] = np.array([0, 0, 0])
model.get_layer('Sep12733').set_weights(w) 
in0Ave40529 = tf.constant([[[[[0.5465, 0.8105], [0.7789, 0.3272]], [[0.3976, 0.0453], [0.5541, 0.9956]]]]])
in1Ave40529 = tf.constant([[[[[0.8076, 0.8218], [0.5698, 0.8972]], [[0.8432, 0.7006], [0.3139, 0.1544]]]]])
in0Con70409 = tf.constant([[[[0.897, 0.5969, 0.35], [0.44, 0.1322, 0.3056], [0.3647, 0.2002, 0.0104], [0.4952, 0.8921, 0.0319], [0.38, 0.3011, 0.5952], [0.7967, 0.7431, 0.9195], [0.7366, 0.4528, 0.445]], [[0.4935, 0.0926, 0.766], [0.6687, 0.8539, 0.8594], [0.0473, 0.3887, 0.1419], [0.7076, 0.6581, 0.3899], [0.0243, 0.113, 0.3454], [0.6956, 0.4238, 0.8419], [0.8215, 0.2631, 0.4283]], [[0.0009, 0.3863, 0.6033], [0.3194, 0.3754, 0.8056], [0.0619, 0.4654, 0.8755], [0.1056, 0.8568, 0.1604], [0.7836, 0.4199, 0.612], [0.3594, 0.1559, 0.5368], [0.0463, 0.6604, 0.168]], [[0.3301, 0.6846, 0.8124], [0.4144, 0.8342, 0.9396], [0.4921, 0.173, 0.3201], [0.6829, 0.0847, 0.4284], [0.3686, 0.4689, 0.7287], [0.0101, 0.5981, 0.9064], [0.9395, 0.5466, 0.4014]], [[0.2816, 0.7153, 0.0646], [0.7765, 0.4288, 0.1448], [0.9655, 0.0895, 0.0167], [0.1872, 0.8048, 0.4038], [0.8746, 0.4748, 0.7652], [0.8265, 0.7151, 0.7012], [0.9686, 0.1778, 0.6289]], [[0.4, 0.8021, 0.1729], [0.0251, 0.6957, 0.2485], [0.219, 0.2662, 0.9099], [0.8048, 0.8797, 0.1136], [0.7482, 0.949, 0.0327], [0.2333, 0.1575, 0.2729], [0.7592, 0.4419, 0.8433]], [[0.3374, 0.0397, 0.071], [0.8691, 0.0242, 0.407], [0.8174, 0.7203, 0.6628], [0.8032, 0.7108, 0.7085], [0.4899, 0.0291, 0.3806], [0.6162, 0.0642, 0.3316], [0.63, 0.0393, 0.1042]], [[0.8777, 0.4382, 0.9691], [0.8408, 0.0861, 0.9021], [0.7752, 0.3864, 0.05], [0.3016, 0.9008, 0.8079], [0.5719, 0.427, 0.26], [0.5631, 0.6542, 0.5423], [0.5424, 0.7098, 0.6416]]]])
in0Lay63693 = tf.constant([[[[1.5997, 1.1935, 1.4668, 1.7391], [1.2201, 1.3423, 1.6649, 1.3475], [1.0356, 1.5287, 1.9278, 1.7234], [1.4589, 1.2122, 1.8646, 1.0784]], [[1.3263, 1.8642, 1.6655, 1.7889], [1.3612, 1.1022, 1.1915, 1.733], [1.3091, 1.9114, 1.1788, 1.4722], [1.0829, 1.8881, 1.692, 1.9779]], [[1.9464, 1.638, 1.4789, 1.7589], [1.3655, 1.8191, 1.8059, 1.0527], [1.6605, 1.8327, 1.6885, 1.2119], [1.0022, 1.8325, 1.1687, 1.5371]], [[1.6163, 1.55, 1.4361, 1.5861], [1.2785, 1.4134, 1.1438, 1.4263], [1.317, 1.5767, 1.225, 1.3841], [1.3749, 1.7681, 1.8837, 1.5951]]]])
print (np.array2string(model.predict([in0Ave40529,in1Ave40529,in0Con70409,in0Lay63693],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Sep12733.png')

LAve40529 = average_layer([[[[[[0.5465, 0.8105], [0.7789, 0.3272]], [[0.3976, 0.0453], [0.5541, 0.9956]]]]], [[[[[0.8076, 0.8218], [0.5698, 0.8972]], [[0.8432, 0.7006], [0.3139, 0.1544]]]]]], Ave40529), 
LRes23840 = reshape_layer(Ave40529, [1, 2, 4], Res23840), 
LRes78786 = reshape_layer(Res23840, [1, 8], Res78786), 
LPer44728 = permute_layer(Res78786, 2,1, Per44728), 
LRes49768 = reshape_layer(Per44728, [8, 1, 1], Res49768), 
LZer3829 = zero_padding2D_layer(Res49768, 0, 0, 6, 0, Zer3829), 
LCon70409 = concatenate_layer([Zer3829,[[[[0.897, 0.5969, 0.35], [0.44, 0.1322, 0.3056], [0.3647, 0.2002, 0.0104], [0.4952, 0.8921, 0.0319], [0.38, 0.3011, 0.5952], [0.7967, 0.7431, 0.9195], [0.7366, 0.4528, 0.445]], [[0.4935, 0.0926, 0.766], [0.6687, 0.8539, 0.8594], [0.0473, 0.3887, 0.1419], [0.7076, 0.6581, 0.3899], [0.0243, 0.113, 0.3454], [0.6956, 0.4238, 0.8419], [0.8215, 0.2631, 0.4283]], [[0.0009, 0.3863, 0.6033], [0.3194, 0.3754, 0.8056], [0.0619, 0.4654, 0.8755], [0.1056, 0.8568, 0.1604], [0.7836, 0.4199, 0.612], [0.3594, 0.1559, 0.5368], [0.0463, 0.6604, 0.168]], [[0.3301, 0.6846, 0.8124], [0.4144, 0.8342, 0.9396], [0.4921, 0.173, 0.3201], [0.6829, 0.0847, 0.4284], [0.3686, 0.4689, 0.7287], [0.0101, 0.5981, 0.9064], [0.9395, 0.5466, 0.4014]], [[0.2816, 0.7153, 0.0646], [0.7765, 0.4288, 0.1448], [0.9655, 0.0895, 0.0167], [0.1872, 0.8048, 0.4038], [0.8746, 0.4748, 0.7652], [0.8265, 0.7151, 0.7012], [0.9686, 0.1778, 0.6289]], [[0.4, 0.8021, 0.1729], [0.0251, 0.6957, 0.2485], [0.219, 0.2662, 0.9099], [0.8048, 0.8797, 0.1136], [0.7482, 0.949, 0.0327], [0.2333, 0.1575, 0.2729], [0.7592, 0.4419, 0.8433]], [[0.3374, 0.0397, 0.071], [0.8691, 0.0242, 0.407], [0.8174, 0.7203, 0.6628], [0.8032, 0.7108, 0.7085], [0.4899, 0.0291, 0.3806], [0.6162, 0.0642, 0.3316], [0.63, 0.0393, 0.1042]], [[0.8777, 0.4382, 0.9691], [0.8408, 0.0861, 0.9021], [0.7752, 0.3864, 0.05], [0.3016, 0.9008, 0.8079], [0.5719, 0.427, 0.26], [0.5631, 0.6542, 0.5423], [0.5424, 0.7098, 0.6416]]]]], 3, Con70409), 
LLay63693 = layer_normalization_layer([[[[1.5997, 1.1935, 1.4668, 1.7391], [1.2201, 1.3423, 1.6649, 1.3475], [1.0356, 1.5287, 1.9278, 1.7234], [1.4589, 1.2122, 1.8646, 1.0784]], [[1.3263, 1.8642, 1.6655, 1.7889], [1.3612, 1.1022, 1.1915, 1.733], [1.3091, 1.9114, 1.1788, 1.4722], [1.0829, 1.8881, 1.692, 1.9779]], [[1.9464, 1.638, 1.4789, 1.7589], [1.3655, 1.8191, 1.8059, 1.0527], [1.6605, 1.8327, 1.6885, 1.2119], [1.0022, 1.8325, 1.1687, 1.5371]], [[1.6163, 1.55, 1.4361, 1.5861], [1.2785, 1.4134, 1.1438, 1.4263], [1.317, 1.5767, 1.225, 1.3841], [1.3749, 1.7681, 1.8837, 1.5951]]]], 3, 1.4540048234558374, Lay63693), 
LELU90270 = elu_layer(Lay63693, 7.068087367215497, ELU90270), 
LZer15249 = zero_padding2D_layer(ELU90270, 4, 0, 3, 0, Zer15249), 
LSub92452 = subtract_layer(Con70409,Zer15249, Sub92452), 
LSep12733 = separable_conv2D_layer(Sub92452, 1, 4,[[[[[0.7699], [0.2867], [0.5571], [0.2899]], [[0.4336], [0.157], [0.3154], [0.9645]], [[0.3055], [0.4124], [0.6332], [0.6818]], [[0.7194], [0.4915], [0.5784], [0.0297]]]],[[[[0.5949, 0.3224, 0.5218], [0.9136, 0.8901, 0.1343], [0.2731, 0.5879, 0.4848], [0.7129, 0.1773, 0.8559]]]]],[0, 0, 0], 7, 7, true, Sep12733), 
exec_layers([LAve40529,LRes23840,LRes78786,LPer44728,LRes49768,LZer3829,LCon70409,LLay63693,LELU90270,LZer15249,LSub92452,LSep12733],["Ave40529","Res23840","Res78786","Per44728","Res49768","Zer3829","Con70409","Lay63693","ELU90270","Zer15249","Sub92452","Sep12733"],Sep12733,"Sep12733")

Actual (Unparsed): [[[[1.2237631, 1.3104707, 0.9357379]], [[1.9949545, 1.7785854, 1.8035522]]]]

Expected (Unparsed): [[[[1.223763110208,1.3104707103379998,0.935737955899]],[[1.994954455196233,1.7785854650827033,1.8035522362192977]]]]

Actual:   [[[[1.2238, 1.3105, 0.9358]], [[1.995, 1.7786, 1.8036]]]]

Expected: [[[[1.2238, 1.3105, 0.9358]], [[1.995, 1.7786, 1.8036]]]]