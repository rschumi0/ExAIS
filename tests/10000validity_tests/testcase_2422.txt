import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Min5077 = tf.keras.layers.Input(shape=([2, 1]))
in1Min5077 = tf.keras.layers.Input(shape=([2, 1]))
in0Con34709 = tf.keras.layers.Input(shape=([4, 6, 3]))
in0Zer79607 = tf.keras.layers.Input(shape=([2, 4, 4]))
in0Ave40125 = tf.keras.layers.Input(shape=([2, 1, 1, 1]))
in1Ave40125 = tf.keras.layers.Input(shape=([2, 1, 1, 1]))
in0Con98092 = tf.keras.layers.Input(shape=([4, 6, 3]))

Min5077 = keras.layers.Minimum(name = 'Min5077', )([in0Min5077,in1Min5077])
Mas10526 = keras.layers.Masking(mask_value=2, name = 'Mas10526', )(Min5077)
Res5141 = keras.layers.Reshape((2, 1, 1), name = 'Res5141', )(Mas10526)
Zer24643 = keras.layers.ZeroPadding2D(padding=((2, 0), (5, 0)), name = 'Zer24643', )(Res5141)
Con34709 = keras.layers.Concatenate(axis=3, name = 'Con34709', )([Zer24643,in0Con34709])
Zer79607 = keras.layers.ZeroPadding2D(padding=((1, 1), (1, 1)), name = 'Zer79607', )(in0Zer79607)
Ave7201 = keras.layers.Average(name = 'Ave7201', )([Con34709,Zer79607])
ReL47482 = keras.layers.ReLU(max_value=6.052870825517091, negative_slope=9.606284371598953, threshold=4.030949475120856, name = 'ReL47482', )(Ave7201)
Ave40125 = keras.layers.Average(name = 'Ave40125', )([in0Ave40125,in1Ave40125])
Res48990 = keras.layers.Reshape((2, 1, 1), name = 'Res48990', )(Ave40125)
Res89850 = keras.layers.Reshape((2, 1), name = 'Res89850', )(Res48990)
Sim44006 = keras.layers.SimpleRNN(2,name = 'Sim44006', )(Res89850)
Res12828 = keras.layers.Reshape((2, 1), name = 'Res12828', )(Sim44006)
Res67890 = keras.layers.Reshape((2, 1, 1), name = 'Res67890', )(Res12828)
Zer51901 = keras.layers.ZeroPadding2D(padding=((1, 1), (1, 1)), name = 'Zer51901', )(Res67890)
Zer26175 = keras.layers.ZeroPadding2D(padding=((0, 0), (3, 0)), name = 'Zer26175', )(Zer51901)
Con98092 = keras.layers.Concatenate(axis=3, name = 'Con98092', )([Zer26175,in0Con98092])
Max41213 = keras.layers.Maximum(name = 'Max41213', )([ReL47482,Con98092])
Res42144 = keras.layers.Reshape((4, 24), name = 'Res42144', )(Max41213)
Loc56692 = keras.layers.LocallyConnected1D(4, (3),strides=(1), name = 'Loc56692', )(Res42144)
model = tf.keras.models.Model(inputs=[in0Min5077,in1Min5077,in0Con34709,in0Zer79607,in0Ave40125,in1Ave40125,in0Con98092], outputs=Loc56692)
w = model.get_layer('Sim44006').get_weights() 
w[0] = np.array([[1, 8]])
w[1] = np.array([[4, 2], [2, 8]])
w[2] = np.array([10, 2])
model.get_layer('Sim44006').set_weights(w) 
w = model.get_layer('Loc56692').get_weights() 
w[0] = np.array([[[0.6369, 0.1244, 0.8797, 0.0732], [0.2038, 0.3867, 0.7461, 0.4238], [0.0917, 0.962, 0.6996, 0.6842], [0.8068, 0.7987, 0.0075, 0.6903], [0.3079, 0.0346, 0.4401, 0.2115], [0.6139, 0.1865, 0.8551, 0.1113], [0.1784, 0.5903, 0.2714, 0.955], [0.2042, 0.6307, 0.1628, 0.1479], [0.9445, 0.9552, 0.212, 0.6064], [0.4317, 0.3073, 0.3032, 0.1729], [0.0101, 0.8327, 0.1069, 0.4674], [0.506, 0.7118, 0.2083, 0.6367], [0.8673, 0.7579, 0.3675, 0.51], [0.6234, 0.1792, 0.1642, 0.9986], [0.576, 0.0517, 0.9758, 0.1876], [0.717, 0.1726, 0.9646, 0.4591], [0.4872, 0.8741, 0.509, 0.1598], [0.1399, 0.0631, 0.3057, 0.7788], [0.1534, 0.2241, 0.186, 0.3386], [0.3493, 0.3734, 0.549, 0.717], [0.6156, 0.9831, 0.1912, 0.917], [0.908, 0.7089, 0.2321, 0.8785], [0.5102, 0.3504, 0.7795, 0.291], [0.3684, 0.8464, 0.9557, 0.0002], [0.6853, 0.2677, 0.9154, 0.0335], [0.8571, 0.7062, 0.5261, 0.9651], [0.269, 0.6807, 0.4512, 0.3321], [0.425, 0.1782, 0.4825, 0.0784], [0.3814, 0.7355, 0.0974, 0.5489], [0.4803, 0.025, 0.3867, 0.3895], [0.93, 0.257, 0.6897, 0.8144], [0.8711, 0.335, 0.5059, 0.0974], [0.1824, 0.1072, 0.5068, 0.8148], [0.4316, 0.2483, 0.7658, 0.3221], [0.0548, 0.2717, 0.6413, 0.1823], [0.0624, 0.9276, 0.104, 0.7793], [0.3111, 0.7706, 0.6802, 0.1496], [0.6572, 0.9967, 0.6021, 0.1421], [0.1103, 0.743, 0.1964, 0.3784], [0.445, 0.9198, 0.0262, 0.126], [0.5965, 0.3016, 0.8064, 0.1212], [0.5631, 0.0436, 0.6527, 0.5808], [0.4722, 0.006, 0.7984, 0.1284], [0.9274, 0.2759, 0.5116, 0.127], [0.7449, 0.0514, 0.5838, 0.9588], [0.7168, 0.622, 0.4222, 0.1189], [0.09, 0.521, 0.476, 0.605], [0.0377, 0.052, 0.4542, 0.9717], [0.5214, 0.2999, 0.5517, 0.5938], [0.585, 0.4231, 0.6895, 0.1374], [0.31, 0.4973, 0.597, 0.9706], [0.3664, 0.4267, 0.4163, 0.2641], [0.3424, 0.4758, 0.3932, 0.8297], [0.806, 0.7859, 0.1327, 0.3233], [0.3609, 0.8344, 0.8459, 0.2989], [0.7936, 0.1742, 0.9895, 0.743], [0.7769, 0.9434, 0.7112, 0.1404], [0.497, 0.5783, 0.551, 0.8278], [0.9976, 0.8789, 0.9233, 0.3757], [0.0018, 0.0789, 0.0028, 0.0052], [0.4591, 0.8546, 0.7768, 0.5978], [0.0974, 0.2698, 0.1847, 0.6797], [0.8062, 0.4979, 0.4683, 0.8779], [0.7738, 0.7909, 0.0792, 0.7328], [0.9105, 0.5688, 0.7507, 0.4284], [0.2465, 0.695, 0.6325, 0.9519], [0.6688, 0.9691, 0.704, 0.4324], [0.5759, 0.6232, 0.0392, 0.9245], [0.7722, 0.1384, 0.8772, 0.6986], [0.1968, 0.0098, 0.867, 0.1823], [0.8885, 0.187, 0.3045, 0.0533], [0.9258, 0.7905, 0.6528, 0.6306]], [[0.9478, 0.3605, 0.1503, 0.6286], [0.2618, 0.3371, 0.8473, 0.5481], [0.4747, 0.6859, 0.9858, 0.4577], [0.0463, 0.5887, 0.238, 0.6921], [0.1562, 0.8958, 0.9533, 0.0361], [0.8002, 0.6058, 0.2294, 0.2946], [0.0886, 0.9786, 0.3187, 0.7611], [0.3035, 0.0165, 0.6082, 0.9839], [0.394, 0.9529, 0.1704, 0.4077], [0.2337, 0.08, 0.6745, 0.9176], [0.148, 0.7124, 0.2643, 0.0516], [0.9305, 0.3384, 0.8661, 0.6613], [0.8093, 0.0403, 0.2716, 0.1005], [0.6013, 0.0802, 0.255, 0.5993], [0.594, 0.1407, 0.9324, 0.3423], [0.5364, 0.0884, 0.5464, 0.9109], [0.4845, 0.2833, 0.8691, 0.1716], [0.1479, 0.3952, 0.4574, 0.399], [0.8158, 0.4115, 0.0628, 0.4037], [0.9002, 0.0162, 0.6052, 0.7053], [0.6295, 0.8085, 0.248, 0.337], [0.4484, 0.8867, 0.2837, 0.697], [0.2374, 0.1722, 0.7285, 0.9737], [0.5499, 0.4734, 0.7574, 0.0616], [0.6859, 0.6941, 0.3682, 0.559], [0.5671, 0.7834, 0.9505, 0.3927], [0.0632, 0.991, 0.762, 0.8482], [0.6267, 0.7428, 0.6621, 0.3041], [0.84, 0.987, 0.8395, 0.7633], [0.7519, 0.1689, 0.6847, 0.3562], [0.6849, 0.0938, 0.4049, 0.3485], [0.5346, 0.8075, 0.4551, 0.8303], [0.4472, 0.2857, 0.3697, 0.184], [0.1636, 0.1585, 0.1181, 0.6349], [0.2472, 0.9188, 0.6787, 0.6698], [0.875, 0.0624, 0.1294, 0.8815], [0.8657, 0.3904, 0.1852, 0.8384], [0.1412, 0.2695, 0.7791, 0.9124], [0.8748, 0.9869, 0.9795, 0.6069], [0.1662, 0.4667, 0.2631, 0.8171], [0.2007, 0.5188, 0.9233, 0.6297], [0.5011, 0.4815, 0.1818, 0.7227], [0.0594, 0.5881, 0.3948, 0.1596], [0.8488, 0.6383, 0.5953, 0.3923], [0.4589, 0.5886, 0.4987, 0.5801], [0.3724, 0.4887, 0.0133, 0.9175], [0.706, 0.7847, 0.2434, 0.517], [0.0752, 0.3886, 0.9495, 0.5403], [0.6127, 0.0668, 0.4417, 0.6911], [0.0671, 0.6439, 0.9184, 0.8879], [0.3404, 0.2316, 0.3369, 0.9203], [0.7854, 0.1998, 0.0044, 0.1584], [0.0754, 0.8845, 0.2092, 0.9338], [0.4852, 0.0932, 0.3816, 0.0395], [0.9763, 0.3115, 0.4656, 0.9052], [0.5667, 0.1432, 0.4128, 0.3977], [0.085, 0.9189, 0.9684, 0.8681], [0.5552, 0.6022, 0.2076, 0.0218], [0.1425, 0.0878, 0.605, 0.4222], [0.8001, 0.7385, 0.7678, 0.9567], [0.5004, 0.5414, 0.3532, 0.3903], [0.21, 0.5747, 0.0988, 0.2116], [0.5709, 0.5731, 0.3468, 0.337], [0.5901, 0.2549, 0.9169, 0.8791], [0.5054, 0.732, 0.6935, 0.1094], [0.3972, 0.7611, 0.8304, 0.9495], [0.0436, 0.8148, 0.0514, 0.8087], [0.9811, 0.954, 0.1236, 0.3553], [0.7247, 0.2606, 0.2163, 0.8538], [0.6256, 0.1593, 0.5236, 0.0317], [0.9013, 0.2966, 0.2237, 0.0477], [0.9585, 0.773, 0.5767, 0.0278]]])
w[1] = np.array([[0, 0, 0, 0], [0, 0, 0, 0]])
model.get_layer('Loc56692').set_weights(w) 
in0Min5077 = tf.constant([[[0.4797], [0.7848]]])
in1Min5077 = tf.constant([[[0.6671], [0.2692]]])
in0Con34709 = tf.constant([[[[0.9152, 0.1042, 0.5763], [0.9009, 0.6882, 0.1962], [0.3801, 0.504, 0.7549], [0.1971, 0.0052, 0.0416], [0.2977, 0.9445, 0.5146], [0.9711, 0.8316, 0.905]], [[0.9826, 0.2526, 0.9664], [0.9787, 0.5909, 0.0183], [0.211, 0.8515, 0.0214], [0.0715, 0.4402, 0.7963], [0.2139, 0.1715, 0.5476], [0.76, 0.5964, 0.7674]], [[0.2352, 0.2917, 0.9671], [0.8272, 0.8547, 0.3721], [0.3101, 0.677, 0.707], [0.4825, 0.9599, 0.3107], [0.2325, 0.3177, 0.6965], [0.4627, 0.0788, 0.3918]], [[0.5457, 0.8428, 0.1202], [0.4096, 0.2922, 0.328], [0.1213, 0.6864, 0.9652], [0.5751, 0.8877, 0.086], [0.8532, 0.475, 0.4239], [0.9165, 0.9194, 0.1035]]]])
in0Zer79607 = tf.constant([[[[1.2639, 1.941, 1.4834, 1.2563], [1.7797, 1.1869, 1.8186, 1.6929], [1.6629, 1.1656, 1.9344, 1.908], [1.0437, 1.1383, 1.4327, 1.0233]], [[1.7523, 1.2886, 1.28, 1.6659], [1.7945, 1.0342, 1.8824, 1.533], [1.91, 1.1369, 1.9992, 1.4374], [1.4855, 1.4041, 1.8864, 1.2335]]]])
in0Ave40125 = tf.constant([[[[[0.0907]]], [[[0.5563]]]]])
in1Ave40125 = tf.constant([[[[[0.6953]]], [[[0.0697]]]]])
in0Con98092 = tf.constant([[[[0.9847, 0.8706, 0.5459], [0.5208, 0.2199, 0.3931], [0.197, 0.6329, 0.5118], [0.3701, 0.9473, 0.6241], [0.3604, 0.4079, 0.7413], [0.837, 0.594, 0.2262]], [[0.0845, 0.9857, 0.0359], [0.5605, 0.4876, 0.2393], [0.6563, 0.8775, 0.7437], [0.0134, 0.8971, 0.5236], [0.526, 0.4708, 0.1533], [0.6972, 0.6095, 0.6477]], [[0.9767, 0.9447, 0.6114], [0.0692, 0.4266, 0.7132], [0.5255, 0.6932, 0.1316], [0.8667, 0.4778, 0.0321], [0.0541, 0.9643, 0.0743], [0.3431, 0.6495, 0.5376]], [[0.4271, 0.8448, 0.098], [0.5605, 0.4494, 0.0256], [0.5553, 0.8004, 0.2899], [0.2394, 0.9146, 0.7638], [0.842, 0.9507, 0.4013], [0.5056, 0.1065, 0.1873]]]])
print (np.array2string(model.predict([in0Min5077,in1Min5077,in0Con34709,in0Zer79607,in0Ave40125,in1Ave40125,in0Con98092],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Loc56692.png')

LMin5077 = minimum_layer([[[[0.4797], [0.7848]]], [[[0.6671], [0.2692]]]], Min5077), 
LMas10526 = masking_layer(Min5077, 2, Mas10526), 
LRes5141 = reshape_layer(Mas10526, [2, 1, 1], Res5141), 
LZer24643 = zero_padding2D_layer(Res5141, 2, 0, 5, 0, Zer24643), 
LCon34709 = concatenate_layer([Zer24643,[[[[0.9152, 0.1042, 0.5763], [0.9009, 0.6882, 0.1962], [0.3801, 0.504, 0.7549], [0.1971, 0.0052, 0.0416], [0.2977, 0.9445, 0.5146], [0.9711, 0.8316, 0.905]], [[0.9826, 0.2526, 0.9664], [0.9787, 0.5909, 0.0183], [0.211, 0.8515, 0.0214], [0.0715, 0.4402, 0.7963], [0.2139, 0.1715, 0.5476], [0.76, 0.5964, 0.7674]], [[0.2352, 0.2917, 0.9671], [0.8272, 0.8547, 0.3721], [0.3101, 0.677, 0.707], [0.4825, 0.9599, 0.3107], [0.2325, 0.3177, 0.6965], [0.4627, 0.0788, 0.3918]], [[0.5457, 0.8428, 0.1202], [0.4096, 0.2922, 0.328], [0.1213, 0.6864, 0.9652], [0.5751, 0.8877, 0.086], [0.8532, 0.475, 0.4239], [0.9165, 0.9194, 0.1035]]]]], 3, Con34709), 
LZer79607 = zero_padding2D_layer([[[[1.2639, 1.941, 1.4834, 1.2563], [1.7797, 1.1869, 1.8186, 1.6929], [1.6629, 1.1656, 1.9344, 1.908], [1.0437, 1.1383, 1.4327, 1.0233]], [[1.7523, 1.2886, 1.28, 1.6659], [1.7945, 1.0342, 1.8824, 1.533], [1.91, 1.1369, 1.9992, 1.4374], [1.4855, 1.4041, 1.8864, 1.2335]]]], 1, 1, 1, 1, Zer79607), 
LAve7201 = average_layer([Con34709,Zer79607], Ave7201), 
LReL47482 = relu_layer(Ave7201, 6.052870825517091, 9.606284371598953, 4.030949475120856, ReL47482), 
LAve40125 = average_layer([[[[[[0.0907]]], [[[0.5563]]]]], [[[[[0.6953]]], [[[0.0697]]]]]], Ave40125), 
LRes48990 = reshape_layer(Ave40125, [2, 1, 1], Res48990), 
LRes89850 = reshape_layer(Res48990, [2, 1], Res89850), 
LSim44006 = simple_rnn_layer(Res89850,[[1, 8]],[[4, 2], [2, 8]],[10, 2], Sim44006), 
LRes12828 = reshape_layer(Sim44006, [2, 1], Res12828), 
LRes67890 = reshape_layer(Res12828, [2, 1, 1], Res67890), 
LZer51901 = zero_padding2D_layer(Res67890, 1, 1, 1, 1, Zer51901), 
LZer26175 = zero_padding2D_layer(Zer51901, 0, 0, 3, 0, Zer26175), 
LCon98092 = concatenate_layer([Zer26175,[[[[0.9847, 0.8706, 0.5459], [0.5208, 0.2199, 0.3931], [0.197, 0.6329, 0.5118], [0.3701, 0.9473, 0.6241], [0.3604, 0.4079, 0.7413], [0.837, 0.594, 0.2262]], [[0.0845, 0.9857, 0.0359], [0.5605, 0.4876, 0.2393], [0.6563, 0.8775, 0.7437], [0.0134, 0.8971, 0.5236], [0.526, 0.4708, 0.1533], [0.6972, 0.6095, 0.6477]], [[0.9767, 0.9447, 0.6114], [0.0692, 0.4266, 0.7132], [0.5255, 0.6932, 0.1316], [0.8667, 0.4778, 0.0321], [0.0541, 0.9643, 0.0743], [0.3431, 0.6495, 0.5376]], [[0.4271, 0.8448, 0.098], [0.5605, 0.4494, 0.0256], [0.5553, 0.8004, 0.2899], [0.2394, 0.9146, 0.7638], [0.842, 0.9507, 0.4013], [0.5056, 0.1065, 0.1873]]]]], 3, Con98092), 
LMax41213 = maximum_layer([ReL47482,Con98092], Max41213), 
LRes42144 = reshape_layer(Max41213, [4, 24], Res42144), 
LLoc56692 = locally_connected1D_layer(Res42144, 3,[[[0.6369, 0.1244, 0.8797, 0.0732], [0.2038, 0.3867, 0.7461, 0.4238], [0.0917, 0.962, 0.6996, 0.6842], [0.8068, 0.7987, 0.0075, 0.6903], [0.3079, 0.0346, 0.4401, 0.2115], [0.6139, 0.1865, 0.8551, 0.1113], [0.1784, 0.5903, 0.2714, 0.955], [0.2042, 0.6307, 0.1628, 0.1479], [0.9445, 0.9552, 0.212, 0.6064], [0.4317, 0.3073, 0.3032, 0.1729], [0.0101, 0.8327, 0.1069, 0.4674], [0.506, 0.7118, 0.2083, 0.6367], [0.8673, 0.7579, 0.3675, 0.51], [0.6234, 0.1792, 0.1642, 0.9986], [0.576, 0.0517, 0.9758, 0.1876], [0.717, 0.1726, 0.9646, 0.4591], [0.4872, 0.8741, 0.509, 0.1598], [0.1399, 0.0631, 0.3057, 0.7788], [0.1534, 0.2241, 0.186, 0.3386], [0.3493, 0.3734, 0.549, 0.717], [0.6156, 0.9831, 0.1912, 0.917], [0.908, 0.7089, 0.2321, 0.8785], [0.5102, 0.3504, 0.7795, 0.291], [0.3684, 0.8464, 0.9557, 0.0002], [0.6853, 0.2677, 0.9154, 0.0335], [0.8571, 0.7062, 0.5261, 0.9651], [0.269, 0.6807, 0.4512, 0.3321], [0.425, 0.1782, 0.4825, 0.0784], [0.3814, 0.7355, 0.0974, 0.5489], [0.4803, 0.025, 0.3867, 0.3895], [0.93, 0.257, 0.6897, 0.8144], [0.8711, 0.335, 0.5059, 0.0974], [0.1824, 0.1072, 0.5068, 0.8148], [0.4316, 0.2483, 0.7658, 0.3221], [0.0548, 0.2717, 0.6413, 0.1823], [0.0624, 0.9276, 0.104, 0.7793], [0.3111, 0.7706, 0.6802, 0.1496], [0.6572, 0.9967, 0.6021, 0.1421], [0.1103, 0.743, 0.1964, 0.3784], [0.445, 0.9198, 0.0262, 0.126], [0.5965, 0.3016, 0.8064, 0.1212], [0.5631, 0.0436, 0.6527, 0.5808], [0.4722, 0.006, 0.7984, 0.1284], [0.9274, 0.2759, 0.5116, 0.127], [0.7449, 0.0514, 0.5838, 0.9588], [0.7168, 0.622, 0.4222, 0.1189], [0.09, 0.521, 0.476, 0.605], [0.0377, 0.052, 0.4542, 0.9717], [0.5214, 0.2999, 0.5517, 0.5938], [0.585, 0.4231, 0.6895, 0.1374], [0.31, 0.4973, 0.597, 0.9706], [0.3664, 0.4267, 0.4163, 0.2641], [0.3424, 0.4758, 0.3932, 0.8297], [0.806, 0.7859, 0.1327, 0.3233], [0.3609, 0.8344, 0.8459, 0.2989], [0.7936, 0.1742, 0.9895, 0.743], [0.7769, 0.9434, 0.7112, 0.1404], [0.497, 0.5783, 0.551, 0.8278], [0.9976, 0.8789, 0.9233, 0.3757], [0.0018, 0.0789, 0.0028, 0.0052], [0.4591, 0.8546, 0.7768, 0.5978], [0.0974, 0.2698, 0.1847, 0.6797], [0.8062, 0.4979, 0.4683, 0.8779], [0.7738, 0.7909, 0.0792, 0.7328], [0.9105, 0.5688, 0.7507, 0.4284], [0.2465, 0.695, 0.6325, 0.9519], [0.6688, 0.9691, 0.704, 0.4324], [0.5759, 0.6232, 0.0392, 0.9245], [0.7722, 0.1384, 0.8772, 0.6986], [0.1968, 0.0098, 0.867, 0.1823], [0.8885, 0.187, 0.3045, 0.0533], [0.9258, 0.7905, 0.6528, 0.6306]], [[0.9478, 0.3605, 0.1503, 0.6286], [0.2618, 0.3371, 0.8473, 0.5481], [0.4747, 0.6859, 0.9858, 0.4577], [0.0463, 0.5887, 0.238, 0.6921], [0.1562, 0.8958, 0.9533, 0.0361], [0.8002, 0.6058, 0.2294, 0.2946], [0.0886, 0.9786, 0.3187, 0.7611], [0.3035, 0.0165, 0.6082, 0.9839], [0.394, 0.9529, 0.1704, 0.4077], [0.2337, 0.08, 0.6745, 0.9176], [0.148, 0.7124, 0.2643, 0.0516], [0.9305, 0.3384, 0.8661, 0.6613], [0.8093, 0.0403, 0.2716, 0.1005], [0.6013, 0.0802, 0.255, 0.5993], [0.594, 0.1407, 0.9324, 0.3423], [0.5364, 0.0884, 0.5464, 0.9109], [0.4845, 0.2833, 0.8691, 0.1716], [0.1479, 0.3952, 0.4574, 0.399], [0.8158, 0.4115, 0.0628, 0.4037], [0.9002, 0.0162, 0.6052, 0.7053], [0.6295, 0.8085, 0.248, 0.337], [0.4484, 0.8867, 0.2837, 0.697], [0.2374, 0.1722, 0.7285, 0.9737], [0.5499, 0.4734, 0.7574, 0.0616], [0.6859, 0.6941, 0.3682, 0.559], [0.5671, 0.7834, 0.9505, 0.3927], [0.0632, 0.991, 0.762, 0.8482], [0.6267, 0.7428, 0.6621, 0.3041], [0.84, 0.987, 0.8395, 0.7633], [0.7519, 0.1689, 0.6847, 0.3562], [0.6849, 0.0938, 0.4049, 0.3485], [0.5346, 0.8075, 0.4551, 0.8303], [0.4472, 0.2857, 0.3697, 0.184], [0.1636, 0.1585, 0.1181, 0.6349], [0.2472, 0.9188, 0.6787, 0.6698], [0.875, 0.0624, 0.1294, 0.8815], [0.8657, 0.3904, 0.1852, 0.8384], [0.1412, 0.2695, 0.7791, 0.9124], [0.8748, 0.9869, 0.9795, 0.6069], [0.1662, 0.4667, 0.2631, 0.8171], [0.2007, 0.5188, 0.9233, 0.6297], [0.5011, 0.4815, 0.1818, 0.7227], [0.0594, 0.5881, 0.3948, 0.1596], [0.8488, 0.6383, 0.5953, 0.3923], [0.4589, 0.5886, 0.4987, 0.5801], [0.3724, 0.4887, 0.0133, 0.9175], [0.706, 0.7847, 0.2434, 0.517], [0.0752, 0.3886, 0.9495, 0.5403], [0.6127, 0.0668, 0.4417, 0.6911], [0.0671, 0.6439, 0.9184, 0.8879], [0.3404, 0.2316, 0.3369, 0.9203], [0.7854, 0.1998, 0.0044, 0.1584], [0.0754, 0.8845, 0.2092, 0.9338], [0.4852, 0.0932, 0.3816, 0.0395], [0.9763, 0.3115, 0.4656, 0.9052], [0.5667, 0.1432, 0.4128, 0.3977], [0.085, 0.9189, 0.9684, 0.8681], [0.5552, 0.6022, 0.2076, 0.0218], [0.1425, 0.0878, 0.605, 0.4222], [0.8001, 0.7385, 0.7678, 0.9567], [0.5004, 0.5414, 0.3532, 0.3903], [0.21, 0.5747, 0.0988, 0.2116], [0.5709, 0.5731, 0.3468, 0.337], [0.5901, 0.2549, 0.9169, 0.8791], [0.5054, 0.732, 0.6935, 0.1094], [0.3972, 0.7611, 0.8304, 0.9495], [0.0436, 0.8148, 0.0514, 0.8087], [0.9811, 0.954, 0.1236, 0.3553], [0.7247, 0.2606, 0.2163, 0.8538], [0.6256, 0.1593, 0.5236, 0.0317], [0.9013, 0.2966, 0.2237, 0.0477], [0.9585, 0.773, 0.5767, 0.0278]]],[[0, 0, 0, 0], [0, 0, 0, 0]], 1, Loc56692), 
exec_layers([LMin5077,LMas10526,LRes5141,LZer24643,LCon34709,LZer79607,LAve7201,LReL47482,LAve40125,LRes48990,LRes89850,LSim44006,LRes12828,LRes67890,LZer51901,LZer26175,LCon98092,LMax41213,LRes42144,LLoc56692],["Min5077","Mas10526","Res5141","Zer24643","Con34709","Zer79607","Ave7201","ReL47482","Ave40125","Res48990","Res89850","Sim44006","Res12828","Res67890","Zer51901","Zer26175","Con98092","Max41213","Res42144","Loc56692"],Loc56692,"Loc56692")

Actual (Unparsed): [[[14.1566532, 14.2879081, 16.4053985, 14.0826613], [12.5235537, 14.8602521, 16.7891112, 15.9806857]]]

Expected (Unparsed): [[[14.15665315999953,14.287908139999713,16.40539841999961,14.082661289999788],[12.523553549999896,14.860252089999737,16.78911112999952,15.98068565999968]]]

Actual:   [[[14.1567, 14.288, 16.4054, 14.0827], [12.5236, 14.8603, 16.7892, 15.9807]]]

Expected: [[[14.1567, 14.288, 16.4054, 14.0827], [12.5236, 14.8603, 16.7892, 15.9807]]]