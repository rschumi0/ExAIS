import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Ave3927 = tf.keras.layers.Input(shape=([2, 1]))
in0Con52828 = tf.keras.layers.Input(shape=([2]))
in0Add43305 = tf.keras.layers.Input(shape=([1, 2, 2]))
in1Add43305 = tf.keras.layers.Input(shape=([1, 2, 2]))
in0Dot42010 = tf.keras.layers.Input(shape=([3]))
in1Dot42010 = tf.keras.layers.Input(shape=([3]))
in0Con20705 = tf.keras.layers.Input(shape=([3]))

Ave3927 = keras.layers.AveragePooling1D(pool_size=(2), strides=(1), padding='same', name = 'Ave3927', )(in0Ave3927)
Fla69948 = keras.layers.Flatten(name = 'Fla69948', )(Ave3927)
Con52828 = keras.layers.Concatenate(axis=1, name = 'Con52828', )([Fla69948,in0Con52828])
Add43305 = keras.layers.Add(name = 'Add43305', )([in0Add43305,in1Add43305])
Res83118 = keras.layers.Reshape((1, 4), name = 'Res83118', )(Add43305)
Fla73440 = keras.layers.Flatten(name = 'Fla73440', )(Res83118)
Dot42010 = keras.layers.Dot(axes=(1, 1), name = 'Dot42010', )([in0Dot42010,in1Dot42010])
Con20705 = keras.layers.Concatenate(axis=1, name = 'Con20705', )([Dot42010,in0Con20705])
Min68525 = keras.layers.Minimum(name = 'Min68525', )([Fla73440,Con20705])
Min76863 = keras.layers.Minimum(name = 'Min76863', )([Con52828,Min68525])
Res86301 = keras.layers.Reshape((4, 1), name = 'Res86301', )(Min76863)
Res61828 = keras.layers.Reshape((4, 1, 1), name = 'Res61828', )(Res86301)
Con10789 = keras.layers.Conv2D(4, (3, 1),strides=(1, 1), padding='valid', dilation_rate=(1, 1), name = 'Con10789', )(Res61828)
model = tf.keras.models.Model(inputs=[in0Ave3927,in0Con52828,in0Add43305,in1Add43305,in0Dot42010,in1Dot42010,in0Con20705], outputs=Con10789)
w = model.get_layer('Con10789').get_weights() 
w[0] = np.array([[[[0.7361, 0.6227, 0.8603, 0.5632]]], [[[0.0353, 0.0196, 0.9095, 0.0086]]], [[[0.4248, 0.5037, 0.7798, 0.4903]]]])
w[1] = np.array([0, 0, 0, 0])
model.get_layer('Con10789').set_weights(w) 
in0Ave3927 = tf.constant([[[1.877], [1.721]]])
in0Con52828 = tf.constant([[0.3257, 0.6089]])
in0Add43305 = tf.constant([[[[0.188, 0.6747], [0.2776, 0.0959]]]])
in1Add43305 = tf.constant([[[[0.5919, 0.2688], [0.2061, 0.3897]]]])
in0Dot42010 = tf.constant([[0.1249, 0.0685, 0.6361]])
in1Dot42010 = tf.constant([[0.5253, 0.6797, 0.8569]])
in0Con20705 = tf.constant([[0.4345, 0.9374, 0.7901]])
print (np.array2string(model.predict([in0Ave3927,in0Con52828,in0Add43305,in1Add43305,in0Dot42010,in1Dot42010,in0Con20705],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Con10789.png')

LAve3927 = average_pooling1D_layer([[[1.877], [1.721]]], 2, 1, true, Ave3927), 
LFla69948 = flatten_layer(Ave3927, Fla69948), 
LCon52828 = concatenate_layer([Fla69948,[[0.3257, 0.6089]]], 1, Con52828), 
LAdd43305 = add_layer([[[[[0.188, 0.6747], [0.2776, 0.0959]]]], [[[[0.5919, 0.2688], [0.2061, 0.3897]]]]], Add43305), 
LRes83118 = reshape_layer(Add43305, [1, 4], Res83118), 
LFla73440 = flatten_layer(Res83118, Fla73440), 
LDot42010 = dot_layer([[0.1249, 0.0685, 0.6361]], [[0.5253, 0.6797, 0.8569]], 1, 1, Dot42010), 
LCon20705 = concatenate_layer([Dot42010,[[0.4345, 0.9374, 0.7901]]], 1, Con20705), 
LMin68525 = minimum_layer([Fla73440,Con20705], Min68525), 
LMin76863 = minimum_layer([Con52828,Min68525], Min76863), 
LRes86301 = reshape_layer(Min76863, [4, 1], Res86301), 
LRes61828 = reshape_layer(Res86301, [4, 1, 1], Res61828), 
LCon10789 = conv2D_layer(Res61828, 3, 1,[[[[0.7361, 0.6227, 0.8603, 0.5632]]], [[[0.0353, 0.0196, 0.9095, 0.0086]]], [[[0.4248, 0.5037, 0.7798, 0.4903]]]],[0, 0, 0, 0], 1, 1, false, 1, 1, Con10789), 
exec_layers([LAve3927,LFla69948,LCon52828,LAdd43305,LRes83118,LFla73440,LDot42010,LCon20705,LMin68525,LMin76863,LRes86301,LRes61828,LCon10789],["Ave3927","Fla69948","Con52828","Add43305","Res83118","Fla73440","Dot42010","Con20705","Min68525","Min76863","Res86301","Res61828","Con10789"],Con10789,"Con10789")

Actual (Unparsed): [[[[0.6374922, 0.5818368, 1.2145852, 0.5335870]], [[0.5376155, 0.5215436, 1.0486954, 0.4856011]]]]

Expected (Unparsed): [[[[0.6374921577109999,0.581836823677,1.2145852016529999,0.5335869548319999]],[[0.53761554,0.5215435900000001,1.04869538,0.4856011]]]]

Actual:   [[[[0.6375, 0.5819, 1.2146, 0.5336]], [[0.5377, 0.5216, 1.0487, 0.4857]]]]

Expected: [[[[0.6375, 0.5819, 1.2146, 0.5336]], [[0.5377, 0.5216, 1.0487, 0.4857]]]]