import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Min64100 = tf.keras.layers.Input(shape=([1, 2]))
in1Min64100 = tf.keras.layers.Input(shape=([1, 2]))
in0Con58657 = tf.keras.layers.Input(shape=([1, 1]))
in0Sub68994 = tf.keras.layers.Input(shape=([3, 3]))
in1Sub68994 = tf.keras.layers.Input(shape=([3, 3]))
in0Dot22404 = tf.keras.layers.Input(shape=([3, 3]))
in1Dot22404 = tf.keras.layers.Input(shape=([3, 3]))

Min64100 = keras.layers.Minimum(name = 'Min64100', )([in0Min64100,in1Min64100])
Con58657 = keras.layers.Concatenate(axis=2, name = 'Con58657', )([Min64100,in0Con58657])
Sub68994 = keras.layers.Subtract(name = 'Sub68994', )([in0Sub68994,in1Sub68994])
Dot64208 = keras.layers.Dot(axes=(2, 2), name = 'Dot64208', )([Con58657,Sub68994])
Dot22404 = keras.layers.Dot(axes=(1, 2), name = 'Dot22404', )([in0Dot22404,in1Dot22404])
Zer66406 = keras.layers.ZeroPadding1D(padding=((2, 0)), name = 'Zer66406', )(Dot22404)
Dot59155 = keras.layers.Dot(axes=(2, 2), name = 'Dot59155', )([Dot64208,Zer66406])
model = tf.keras.models.Model(inputs=[in0Min64100,in1Min64100,in0Con58657,in0Sub68994,in1Sub68994,in0Dot22404,in1Dot22404], outputs=Dot59155)
in0Min64100 = tf.constant([[[0.1287, 0.7068]]])
in1Min64100 = tf.constant([[[0.2585, 0.794]]])
in0Con58657 = tf.constant([[[0.1414]]])
in0Sub68994 = tf.constant([[[0.1097, 0.6844, 0.8209], [0.7862, 0.4476, 0.0947], [0.0273, 0.7768, 0.3527]]])
in1Sub68994 = tf.constant([[[0.0114, 0.0076, 0.2182], [0.8293, 0.96, 0.774], [0.4357, 0.0776, 0.3419]]])
in0Dot22404 = tf.constant([[[0.7959, 0.6409, 0.974], [0.196, 0.2709, 0.5246], [0.3445, 0.8827, 0.3949]]])
in1Dot22404 = tf.constant([[[0.2495, 0.2445, 0.3774], [0.2007, 0.1568, 0.7413], [0.9971, 0.0847, 0.5239]]])
print (np.array2string(model.predict([in0Min64100,in1Min64100,in0Con58657,in0Sub68994,in1Sub68994,in0Dot22404,in1Dot22404],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Dot59155.png')

LMin64100 = minimum_layer([[[[0.1287, 0.7068]]], [[[0.2585, 0.794]]]], Min64100), 
LCon58657 = concatenate_layer([Min64100,[[[0.1414]]]], 2, Con58657), 
LSub68994 = subtract_layer([[[0.1097, 0.6844, 0.8209], [0.7862, 0.4476, 0.0947], [0.0273, 0.7768, 0.3527]]], [[[0.0114, 0.0076, 0.2182], [0.8293, 0.96, 0.774], [0.4357, 0.0776, 0.3419]]], Sub68994), 
LDot64208 = dot_layer(Con58657,Sub68994, 2, 2, Dot64208), 
LDot22404 = dot_layer([[[0.7959, 0.6409, 0.974], [0.196, 0.2709, 0.5246], [0.3445, 0.8827, 0.3949]]], [[[0.2495, 0.2445, 0.3774], [0.2007, 0.1568, 0.7413], [0.9971, 0.0847, 0.5239]]], 1, 2, Dot22404), 
LZer66406 = zero_padding1D_layer(Dot22404, 2, 0, Zer66406), 
LDot59155 = dot_layer(Dot64208,Zer66406, 2, 2, Dot59155), 
exec_layers([LMin64100,LCon58657,LSub68994,LDot64208,LDot22404,LZer66406,LDot59155],["Min64100","Con58657","Sub68994","Dot64208","Dot22404","Zer66406","Dot59155"],Dot59155,"Dot59155")

Actual (Unparsed): [[[0.0000000, 0.0000000, 0.4492208, 0.4377611, 0.5770177]]]

Expected (Unparsed): [[[0.0,0.0,0.4492208229669727,0.43776104667989296,0.5770176750725393]]]

Actual:   [[[0, 0, 0.4493, 0.4378, 0.5771]]]

Expected: [[[0, 0, 0.4493, 0.4378, 0.5771]]]