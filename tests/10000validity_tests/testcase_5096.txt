import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Mul48531 = tf.keras.layers.Input(shape=([1, 2, 2]))
in1Mul48531 = tf.keras.layers.Input(shape=([1, 2, 2]))

Mul48531 = keras.layers.Multiply(name = 'Mul48531', )([in0Mul48531,in1Mul48531])
Res59006 = keras.layers.Reshape((1, 4), name = 'Res59006', )(Mul48531)
Sim53744 = keras.layers.SimpleRNN(3,name = 'Sim53744', )(Res59006)
model = tf.keras.models.Model(inputs=[in0Mul48531,in1Mul48531], outputs=Sim53744)
w = model.get_layer('Sim53744').get_weights() 
w[0] = np.array([[8, 10, 4], [3, 7, 6], [10, 5, 6], [2, 7, 2]])
w[1] = np.array([[4, 8, 9], [6, 1, 4], [5, 5, 3]])
w[2] = np.array([10, 4, 8])
model.get_layer('Sim53744').set_weights(w) 
in0Mul48531 = tf.constant([[[[0.6473, 0.2495], [0.8691, 0.8864]]]])
in1Mul48531 = tf.constant([[[[0.4648, 0.7424], [0.7569, 0.4179]]]])
print (np.array2string(model.predict([in0Mul48531,in1Mul48531],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Sim53744.png')

LMul48531 = multiply_layer([[[[[0.6473, 0.2495], [0.8691, 0.8864]]]], [[[[0.4648, 0.7424], [0.7569, 0.4179]]]]], Mul48531), 
LRes59006 = reshape_layer(Mul48531, [1, 4], Res59006), 
LSim53744 = simple_rnn_layer(Res59006,[[8, 10, 4], [3, 7, 6], [10, 5, 6], [2, 7, 2]],[[4, 8, 9], [6, 1, 4], [5, 5, 3]],[10, 4, 8], Sim53744), 
exec_layers([LMul48531,LRes59006,LSim53744],["Mul48531","Res59006","Sim53744"],Sim53744,"Sim53744")

Actual (Unparsed): [[1.0000000, 1.0000000, 1.0000000]]

Expected (Unparsed): [[1.0,0.9999999999990493,0.9999999999998138]]

Actual:   [[1, 1, 1]]

Expected: [[1, 1, 1]]