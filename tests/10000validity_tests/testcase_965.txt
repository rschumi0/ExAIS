import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Sub41728 = tf.keras.layers.Input(shape=([3]))
in1Sub41728 = tf.keras.layers.Input(shape=([3]))

Sub41728 = keras.layers.Subtract(name = 'Sub41728', )([in0Sub41728,in1Sub41728])
Res94632 = keras.layers.Reshape((3, 1), name = 'Res94632', )(Sub41728)
Up_90829 = keras.layers.UpSampling1D(size=(1), name = 'Up_90829', )(Res94632)
model = tf.keras.models.Model(inputs=[in0Sub41728,in1Sub41728], outputs=Up_90829)
in0Sub41728 = tf.constant([[0.3336, 0.984, 0.8926]])
in1Sub41728 = tf.constant([[0.9041, 0.9557, 0.9642]])
print (np.array2string(model.predict([in0Sub41728,in1Sub41728],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Up_90829.png')

LSub41728 = subtract_layer([[0.3336, 0.984, 0.8926]], [[0.9041, 0.9557, 0.9642]], Sub41728), 
LRes94632 = reshape_layer(Sub41728, [3, 1], Res94632), 
LUp_90829 = up_sampling1D_layer(Res94632, 1, Up_90829), 
exec_layers([LSub41728,LRes94632,LUp_90829],["Sub41728","Res94632","Up_90829"],Up_90829,"Up_90829")

Actual (Unparsed): [[[-0.5705000], [0.0283000], [-0.0716000]]]

Expected (Unparsed): [[[-0.5705],[0.028299999999999992],[-0.0716]]]

Actual:   [[[-0.5705], [0.0283], [-0.0716]]]

Expected: [[[-0.5705], [0.0283], [-0.0716]]]