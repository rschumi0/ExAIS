import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Max32668 = tf.keras.layers.Input(shape=([1, 2, 2]))
in1Max32668 = tf.keras.layers.Input(shape=([1, 2, 2]))

Max32668 = keras.layers.Maximum(name = 'Max32668', )([in0Max32668,in1Max32668])
Sof42859 = keras.layers.Softmax(axis=1, name = 'Sof42859', )(Max32668)
model = tf.keras.models.Model(inputs=[in0Max32668,in1Max32668], outputs=Sof42859)
in0Max32668 = tf.constant([[[[0.6861, 0.8217], [0.1907, 0.4045]]]])
in1Max32668 = tf.constant([[[[0.4774, 0.2825], [0.6633, 0.2577]]]])
print (np.array2string(model.predict([in0Max32668,in1Max32668],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Sof42859.png')

LMax32668 = maximum_layer([[[[[0.6861, 0.8217], [0.1907, 0.4045]]]], [[[[0.4774, 0.2825], [0.6633, 0.2577]]]]], Max32668), 
LSof42859 = softmax_layer(Max32668, 1, Sof42859), 
exec_layers([LMax32668,LSof42859],["Max32668","Sof42859"],Sof42859,"Sof42859")

Actual (Unparsed): [[[[1.0000000, 1.0000000], [1.0000000, 1.0000000]]]]

Expected (Unparsed): [[[[1.0,1.0],[1.0,1.0]]]]

Actual:   [[[[1, 1], [1, 1]]]]

Expected: [[[[1, 1], [1, 1]]]]