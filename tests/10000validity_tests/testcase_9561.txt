import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Mul80006 = tf.keras.layers.Input(shape=([2, 1, 1, 1]))
in1Mul80006 = tf.keras.layers.Input(shape=([2, 1, 1, 1]))
in0Add57085 = tf.keras.layers.Input(shape=([1, 1, 1]))
in1Add57085 = tf.keras.layers.Input(shape=([1, 1, 1]))
in0Con51922 = tf.keras.layers.Input(shape=([4, 1, 3]))
in0Dep14365 = tf.keras.layers.Input(shape=([1, 2, 1]))
in0Con32202 = tf.keras.layers.Input(shape=([4, 7, 3]))

Mul80006 = keras.layers.Multiply(name = 'Mul80006', )([in0Mul80006,in1Mul80006])
Res94101 = keras.layers.Reshape((2, 1, 1), name = 'Res94101', )(Mul80006)
Con15230 = keras.layers.Conv2DTranspose(4, (2, 1),strides=(2, 1), padding='valid', name = 'Con15230', )(Res94101)
Add57085 = keras.layers.Add(name = 'Add57085', )([in0Add57085,in1Add57085])
Zer13906 = keras.layers.ZeroPadding2D(padding=((3, 0), (0, 0)), name = 'Zer13906', )(Add57085)
Con51922 = keras.layers.Concatenate(axis=3, name = 'Con51922', )([Zer13906,in0Con51922])
Mul52526 = keras.layers.Multiply(name = 'Mul52526', )([Con15230,Con51922])
Zer26717 = keras.layers.ZeroPadding2D(padding=((0, 0), (6, 0)), name = 'Zer26717', )(Mul52526)
Dep14365 = keras.layers.DepthwiseConv2D((1, 2),strides=(1, 1), padding='same', name = 'Dep14365', )(in0Dep14365)
Zer10507 = keras.layers.ZeroPadding2D(padding=((1, 1), (1, 1)), name = 'Zer10507', )(Dep14365)
Zer9205 = keras.layers.ZeroPadding2D(padding=((1, 0), (3, 0)), name = 'Zer9205', )(Zer10507)
Con32202 = keras.layers.Concatenate(axis=3, name = 'Con32202', )([Zer9205,in0Con32202])
Mul88785 = keras.layers.Multiply(name = 'Mul88785', )([Zer26717,Con32202])
model = tf.keras.models.Model(inputs=[in0Mul80006,in1Mul80006,in0Add57085,in1Add57085,in0Con51922,in0Dep14365,in0Con32202], outputs=Mul88785)
w = model.get_layer('Con15230').get_weights() 
w[0] = np.array([[[[0.3574], [0.1579], [0.5761], [0.1031]]], [[[0.7655], [0.1499], [0.2181], [0.8458]]]])
w[1] = np.array([0, 0, 0, 0])
model.get_layer('Con15230').set_weights(w) 
w = model.get_layer('Dep14365').get_weights() 
w[0] = np.array([[[[0.9458]], [[0.1891]]]])
w[1] = np.array([0])
model.get_layer('Dep14365').set_weights(w) 
in0Mul80006 = tf.constant([[[[[0.0394]]], [[[0.8643]]]]])
in1Mul80006 = tf.constant([[[[[0.724]]], [[[0.9704]]]]])
in0Add57085 = tf.constant([[[[0.6709]]]])
in1Add57085 = tf.constant([[[[0.1969]]]])
in0Con51922 = tf.constant([[[[0.8114, 0.1862, 0.6263]], [[0.8103, 0.5886, 0.2905]], [[0.7992, 0.9788, 0.2252]], [[0.3655, 0.8889, 0.4972]]]])
in0Dep14365 = tf.constant([[[[0.1585], [0.5459]]]])
in0Con32202 = tf.constant([[[[0.6752, 0.6643, 0.7958], [0.2144, 0.7006, 0.1626], [0.0685, 0.4392, 0.1867], [0.4547, 0.8633, 0.084], [0.8774, 0.8837, 0.4092], [0.5895, 0.4394, 0.0667], [0.1678, 0.039, 0.4286]], [[0.6628, 0.967, 0.7481], [0.3058, 0.6173, 0.0067], [0.0506, 0.104, 0.8627], [0.7439, 0.6078, 0.9469], [0.9938, 0.4568, 0.4253], [0.8604, 0.8762, 0.2398], [0.0376, 0.2245, 0.4961]], [[0.2846, 0.9937, 0.7713], [0.6146, 0.5691, 0.8623], [0.2524, 0.9499, 0.4915], [0.4624, 0.7697, 0.6796], [0.5641, 0.9236, 0.2911], [0.0276, 0.0125, 0.4782], [0.0597, 0.5806, 0.0119]], [[0.5988, 0.4443, 0.7658], [0.3394, 0.2072, 0.2751], [0.6122, 0.4181, 0.202], [0.8646, 0.5183, 0.0866], [0.4779, 0.7203, 0.2539], [0.9421, 0.9448, 0.4239], [0.8315, 0.7693, 0.7906]]]])
print (np.array2string(model.predict([in0Mul80006,in1Mul80006,in0Add57085,in1Add57085,in0Con51922,in0Dep14365,in0Con32202],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Mul88785.png')

LMul80006 = multiply_layer([[[[[[0.0394]]], [[[0.8643]]]]], [[[[[0.724]]], [[[0.9704]]]]]], Mul80006), 
LRes94101 = reshape_layer(Mul80006, [2, 1, 1], Res94101), 
LCon15230 = conv2D_transpose_layer(Res94101, 2, 1,[[[[0.3574], [0.1579], [0.5761], [0.1031]]], [[[0.7655], [0.1499], [0.2181], [0.8458]]]],[0, 0, 0, 0], 2, 1, false, Con15230), 
LAdd57085 = add_layer([[[[[0.6709]]]], [[[[0.1969]]]]], Add57085), 
LZer13906 = zero_padding2D_layer(Add57085, 3, 0, 0, 0, Zer13906), 
LCon51922 = concatenate_layer([Zer13906,[[[[0.8114, 0.1862, 0.6263]], [[0.8103, 0.5886, 0.2905]], [[0.7992, 0.9788, 0.2252]], [[0.3655, 0.8889, 0.4972]]]]], 3, Con51922), 
LMul52526 = multiply_layer([Con15230,Con51922], Mul52526), 
LZer26717 = zero_padding2D_layer(Mul52526, 0, 0, 6, 0, Zer26717), 
LDep14365 = depthwise_conv2D_layer([[[[0.1585], [0.5459]]]], 1, 2,[[[[0.9458]], [[0.1891]]]],[0], 1, 1, true, Dep14365), 
LZer10507 = zero_padding2D_layer(Dep14365, 1, 1, 1, 1, Zer10507), 
LZer9205 = zero_padding2D_layer(Zer10507, 1, 0, 3, 0, Zer9205), 
LCon32202 = concatenate_layer([Zer9205,[[[[0.6752, 0.6643, 0.7958], [0.2144, 0.7006, 0.1626], [0.0685, 0.4392, 0.1867], [0.4547, 0.8633, 0.084], [0.8774, 0.8837, 0.4092], [0.5895, 0.4394, 0.0667], [0.1678, 0.039, 0.4286]], [[0.6628, 0.967, 0.7481], [0.3058, 0.6173, 0.0067], [0.0506, 0.104, 0.8627], [0.7439, 0.6078, 0.9469], [0.9938, 0.4568, 0.4253], [0.8604, 0.8762, 0.2398], [0.0376, 0.2245, 0.4961]], [[0.2846, 0.9937, 0.7713], [0.6146, 0.5691, 0.8623], [0.2524, 0.9499, 0.4915], [0.4624, 0.7697, 0.6796], [0.5641, 0.9236, 0.2911], [0.0276, 0.0125, 0.4782], [0.0597, 0.5806, 0.0119]], [[0.5988, 0.4443, 0.7658], [0.3394, 0.2072, 0.2751], [0.6122, 0.4181, 0.202], [0.8646, 0.5183, 0.0866], [0.4779, 0.7203, 0.2539], [0.9421, 0.9448, 0.4239], [0.8315, 0.7693, 0.7906]]]]], 3, Con32202), 
LMul88785 = multiply_layer([Zer26717,Con32202], Mul88785), 
exec_layers([LMul80006,LRes94101,LCon15230,LAdd57085,LZer13906,LCon51922,LMul52526,LZer26717,LDep14365,LZer10507,LZer9205,LCon32202,LMul88785],["Mul80006","Res94101","Con15230","Add57085","Zer13906","Con51922","Mul52526","Zer26717","Dep14365","Zer10507","Zer9205","Con32202","Mul88785"],Mul88785,"Mul88785")

Actual (Unparsed): [[[[0.0000000, 0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0006133, 0.0001193, 0.0007895]], [[0.0000000, 0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0001303, 0.0008221, 0.0034771]], [[0.0000000, 0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0063187, 0.2745897, 0.0002317]], [[0.0000000, 0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0382091, 0.1250891, 0.2788502]]]]

Expected (Unparsed): [[[[0,0.0,0.0,0.0],[0,0.0,0.0,0.0],[0,0.0,0.0,0.0],[0,0.0,0.0,0.0],[0,0.0,0.0,0.0],[0,0.0,0.0,0.0],[0.0,0.0006132589257173408,0.00011933750311828798,0.0007894561852616047]],[[0,0.0,0.0,0.0],[0,0.0,0.0,0.0],[0,0.0,0.0,0.0],[0,0.0,0.0,0.0],[0,0.0,0.0,0.0],[0,0.0,0.0,0.0],[0.0,0.00013027770661096322,0.000822104559193752,0.0034771052169077833]],[[0,0.0,0.0,0.0],[0,0.0,0.0,0.0],[0,0.0,0.0,0.0],[0,0.0,0.0,0.0],[0.0,0.0,0.0,0.0],[0.0,0.0,0.0,0.0],[0.0,0.006318692737647479,0.2745896529987687,0.0002317337628665002]],[[0,0.0,0.0,0.0],[0,0.0,0.0,0.0],[0,0.0,0.0,0.0],[0,0.0,0.0,0.0],[0,0.0,0.0,0.0],[0,0.0,0.0,0.0],[0.0,0.038209078918260544,0.12508913952803036,0.2788501687494333]]]]

Actual:   [[[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0.0007, 0.0002, 0.0008]], [[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0.0002, 0.0009, 0.0035]], [[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0.0064, 0.2746, 0.0003]], [[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0.0383, 0.1251, 0.2789]]]]

Expected: [[[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0.0007, 0.0002, 0.0008]], [[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0.0002, 0.0009, 0.0035]], [[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0.0064, 0.2746, 0.0003]], [[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0.0383, 0.1251, 0.2789]]]]