import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Sep35277 = tf.keras.layers.Input(shape=([1, 1, 1]))

Sep35277 = keras.layers.SeparableConv2D(3, (1, 1),strides=(1, 1), padding='valid', name = 'Sep35277', )(in0Sep35277)
Sof67506 = keras.layers.Softmax(axis=1, name = 'Sof67506', )(Sep35277)
model = tf.keras.models.Model(inputs=[in0Sep35277], outputs=Sof67506)
w = model.get_layer('Sep35277').get_weights() 
w[0] = np.array([[[[0.1223]]]])
w[1] = np.array([[[[0.1701, 0.7025, 0.8176]]]])
w[2] = np.array([0, 0, 0])
model.get_layer('Sep35277').set_weights(w) 
in0Sep35277 = tf.constant([[[[0.508]]]])
print (np.array2string(model.predict([in0Sep35277],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Sof67506.png')

LSep35277 = separable_conv2D_layer([[[[0.508]]]], 1, 1,[[[[[0.1223]]]],[[[[0.1701, 0.7025, 0.8176]]]]],[0, 0, 0], 1, 1, false, Sep35277), 
LSof67506 = softmax_layer(Sep35277, 1, Sof67506), 
exec_layers([LSep35277,LSof67506],["Sep35277","Sof67506"],Sof67506,"Sof67506")

Actual (Unparsed): [[[[1.0000000, 1.0000000, 1.0000000]]]]

Expected (Unparsed): [[[[1.0,1.0,1.0]]]]

Actual:   [[[[1, 1, 1]]]]

Expected: [[[[1, 1, 1]]]]