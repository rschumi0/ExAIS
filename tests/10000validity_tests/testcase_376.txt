import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Add77087 = tf.keras.layers.Input(shape=([1, 1, 1, 1]))
in1Add77087 = tf.keras.layers.Input(shape=([1, 1, 1, 1]))

Add77087 = keras.layers.Add(name = 'Add77087', )([in0Add77087,in1Add77087])
Res95543 = keras.layers.Reshape((1, 1, 1), name = 'Res95543', )(Add77087)
Res17717 = keras.layers.Reshape((1, 1), name = 'Res17717', )(Res95543)
GRU72427 = keras.layers.GRU(3,reset_after=True, recurrent_activation='sigmoid', name = 'GRU72427', )(Res17717)
model = tf.keras.models.Model(inputs=[in0Add77087,in1Add77087], outputs=GRU72427)
w = model.get_layer('GRU72427').get_weights() 
w[0] = np.array([[7, 4, 8, 6, 8, 6, 4, 8, 1]])
w[1] = np.array([[2, 6, 1, 4, 1, 4, 5, 4, 3], [3, 2, 9, 4, 8, 9, 6, 6, 5], [8, 6, 1, 3, 5, 8, 8, 8, 8]])
w[2] = np.array([[7, 10, 1, 3, 7, 10, 3, 9, 8], [5, 3, 9, 3, 10, 5, 8, 8, 2]])
model.get_layer('GRU72427').set_weights(w) 
in0Add77087 = tf.constant([[[[[0.6759]]]]])
in1Add77087 = tf.constant([[[[[0.7077]]]]])
print (np.array2string(model.predict([in0Add77087,in1Add77087],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='GRU72427.png')

LAdd77087 = add_layer([[[[[[0.6759]]]]], [[[[[0.7077]]]]]], Add77087), 
LRes95543 = reshape_layer(Add77087, [1, 1, 1], Res95543), 
LRes17717 = reshape_layer(Res95543, [1, 1], Res17717), 
LGRU72427 = gru_layer(Res17717,[[7, 4, 8, 6, 8, 6, 4, 8, 1]],[[2, 6, 1, 4, 1, 4, 5, 4, 3], [3, 2, 9, 4, 8, 9, 6, 6, 5], [8, 6, 1, 3, 5, 8, 8, 8, 8]],[[7, 10, 1, 3, 7, 10, 3, 9, 8], [5, 3, 9, 3, 10, 5, 8, 8, 2]], true, GRU72427), 
exec_layers([LAdd77087,LRes95543,LRes17717,LGRU72427],["Add77087","Res95543","Res17717","GRU72427"],GRU72427,"GRU72427")

Actual (Unparsed): [[0.0000000, 0.0000000, 0.0000000]]

Expected (Unparsed): [[3.821529759306908e-10,8.925084782340775e-9,7.078422290916451e-10]]

Actual:   [[0, 0, 0]]

Expected: [[0, 0, 0]]