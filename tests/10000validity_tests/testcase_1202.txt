import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Ave33084 = tf.keras.layers.Input(shape=([2, 1]))
in1Ave33084 = tf.keras.layers.Input(shape=([2, 1]))

Ave33084 = keras.layers.Average(name = 'Ave33084', )([in0Ave33084,in1Ave33084])
PRe99788 = keras.layers.PReLU(name = 'PRe99788', )(Ave33084)
Sim64114 = keras.layers.SimpleRNN(2,name = 'Sim64114', )(PRe99788)
Res72351 = keras.layers.Reshape((2, 1), name = 'Res72351', )(Sim64114)
Max95219 = keras.layers.MaxPool1D(pool_size=(1), strides=(1), padding='same', name = 'Max95219', )(Res72351)
model = tf.keras.models.Model(inputs=[in0Ave33084,in1Ave33084], outputs=Max95219)
w = model.get_layer('PRe99788').get_weights() 
w[0] = np.array([[0.0991], [0.3546]])
model.get_layer('PRe99788').set_weights(w) 
w = model.get_layer('Sim64114').get_weights() 
w[0] = np.array([[1, 1]])
w[1] = np.array([[10, 4], [8, 6]])
w[2] = np.array([6, 3])
model.get_layer('Sim64114').set_weights(w) 
in0Ave33084 = tf.constant([[[0.0262], [0.3578]]])
in1Ave33084 = tf.constant([[[0.9026], [0.3404]]])
print (np.array2string(model.predict([in0Ave33084,in1Ave33084],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Max95219.png')

LAve33084 = average_layer([[[[0.0262], [0.3578]]], [[[0.9026], [0.3404]]]], Ave33084), 
LPRe99788 = prelu_layer(Ave33084, [[0.0991], [0.3546]], PRe99788), 
LSim64114 = simple_rnn_layer(PRe99788,[[1, 1]],[[10, 4], [8, 6]],[6, 3], Sim64114), 
LRes72351 = reshape_layer(Sim64114, [2, 1], Res72351), 
LMax95219 = max_pool1D_layer(Res72351, 1, 1, true, Max95219), 
exec_layers([LAve33084,LPRe99788,LSim64114,LRes72351,LMax95219],["Ave33084","PRe99788","Sim64114","Res72351","Max95219"],Max95219,"Max95219")

Actual (Unparsed): [[[1.0000000], [1.0000000]]]

Expected (Unparsed): [[[1.0],[0.9999999999947957]]]

Actual:   [[[1], [1]]]

Expected: [[[1], [1]]]