import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Zer61003 = tf.keras.layers.Input(shape=([4, 3, 2, 1]))
in0Ave10104 = tf.keras.layers.Input(shape=([1, 1, 1]))
in1Ave10104 = tf.keras.layers.Input(shape=([1, 1, 1]))
in0Con2438 = tf.keras.layers.Input(shape=([6, 5, 3]))
in0Con88339 = tf.keras.layers.Input(shape=([1, 1, 1]))

Zer61003 = keras.layers.ZeroPadding3D(padding=((1, 1), (1, 1), (1, 1)), name = 'Zer61003', )(in0Zer61003)
Res91816 = keras.layers.Reshape((6, 5, 4), name = 'Res91816', )(Zer61003)
Ave10104 = keras.layers.Average(name = 'Ave10104', )([in0Ave10104,in1Ave10104])
Zer1648 = keras.layers.ZeroPadding2D(padding=((5, 0), (4, 0)), name = 'Zer1648', )(Ave10104)
Con2438 = keras.layers.Concatenate(axis=3, name = 'Con2438', )([Zer1648,in0Con2438])
Sub74669 = keras.layers.Subtract(name = 'Sub74669', )([Res91816,Con2438])
Con88339 = keras.layers.Conv2D(4, (1, 1),strides=(1, 1), padding='same', dilation_rate=(1, 1), name = 'Con88339', )(in0Con88339)
Zer68861 = keras.layers.ZeroPadding2D(padding=((5, 0), (4, 0)), name = 'Zer68861', )(Con88339)
Max72290 = keras.layers.Maximum(name = 'Max72290', )([Sub74669,Zer68861])
model = tf.keras.models.Model(inputs=[in0Zer61003,in0Ave10104,in1Ave10104,in0Con2438,in0Con88339], outputs=Max72290)
w = model.get_layer('Con88339').get_weights() 
w[0] = np.array([[[[0.3194, 0.3816, 0.7108, 0.4591]]]])
w[1] = np.array([0, 0, 0, 0])
model.get_layer('Con88339').set_weights(w) 
in0Zer61003 = tf.constant([[[[[1.0044], [1.5154]], [[1.1348], [1.197]], [[1.31], [1.8157]]], [[[1.0646], [1.9189]], [[1.5443], [1.7938]], [[1.3311], [1.0475]]], [[[1.9576], [1.3055]], [[1.9499], [1.1366]], [[1.5905], [1.1617]]], [[[1.2763], [1.3535]], [[1.0193], [1.9422]], [[1.5037], [1.3948]]]]])
in0Ave10104 = tf.constant([[[[0.1127]]]])
in1Ave10104 = tf.constant([[[[0.3117]]]])
in0Con2438 = tf.constant([[[[0.4502, 0.7758, 0.9358], [0.996, 0.3494, 0.6716], [0.6614, 0.3338, 0.9882], [0.1311, 0.803, 0.8797], [0.9831, 0.1135, 0.4929]], [[0.1016, 0.9223, 0.3807], [0.7161, 0.1182, 0.4326], [0.2361, 0.6974, 0.6776], [0.0346, 0.0577, 0.5302], [0.592, 0.3629, 0.1334]], [[0.8244, 0.1489, 0.2635], [0.9331, 0.7844, 0.478], [0.8706, 0.4943, 0.9249], [0.7187, 0.0135, 0.0336], [0.5806, 0.1003, 0.2057]], [[0.2502, 0.4745, 0.7285], [0.0295, 0.0409, 0.8685], [0.949, 0.9443, 0.5048], [0.2439, 0.6549, 0.4193], [0.1876, 0.0306, 0.7931]], [[0.8188, 0.4854, 0.6356], [0.6327, 0.6549, 0.0101], [0.9131, 0.0631, 0.6607], [0.5029, 0.2563, 0.3036], [0.6353, 0.5755, 0.6961]], [[0.9294, 0.1663, 0.1592], [0.7463, 0.0428, 0.1425], [0.0418, 0.2478, 0.7523], [0.4388, 0.2903, 0.1328], [0.8637, 0.2731, 0.668]]]])
in0Con88339 = tf.constant([[[[0.4498]]]])
print (np.array2string(model.predict([in0Zer61003,in0Ave10104,in1Ave10104,in0Con2438,in0Con88339],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Max72290.png')

LZer61003 = zero_padding3D_layer([[[[[1.0044], [1.5154]], [[1.1348], [1.197]], [[1.31], [1.8157]]], [[[1.0646], [1.9189]], [[1.5443], [1.7938]], [[1.3311], [1.0475]]], [[[1.9576], [1.3055]], [[1.9499], [1.1366]], [[1.5905], [1.1617]]], [[[1.2763], [1.3535]], [[1.0193], [1.9422]], [[1.5037], [1.3948]]]]], 1, 1, 1, 1, 1, 1, Zer61003), 
LRes91816 = reshape_layer(Zer61003, [6, 5, 4], Res91816), 
LAve10104 = average_layer([[[[[0.1127]]]], [[[[0.3117]]]]], Ave10104), 
LZer1648 = zero_padding2D_layer(Ave10104, 5, 0, 4, 0, Zer1648), 
LCon2438 = concatenate_layer([Zer1648,[[[[0.4502, 0.7758, 0.9358], [0.996, 0.3494, 0.6716], [0.6614, 0.3338, 0.9882], [0.1311, 0.803, 0.8797], [0.9831, 0.1135, 0.4929]], [[0.1016, 0.9223, 0.3807], [0.7161, 0.1182, 0.4326], [0.2361, 0.6974, 0.6776], [0.0346, 0.0577, 0.5302], [0.592, 0.3629, 0.1334]], [[0.8244, 0.1489, 0.2635], [0.9331, 0.7844, 0.478], [0.8706, 0.4943, 0.9249], [0.7187, 0.0135, 0.0336], [0.5806, 0.1003, 0.2057]], [[0.2502, 0.4745, 0.7285], [0.0295, 0.0409, 0.8685], [0.949, 0.9443, 0.5048], [0.2439, 0.6549, 0.4193], [0.1876, 0.0306, 0.7931]], [[0.8188, 0.4854, 0.6356], [0.6327, 0.6549, 0.0101], [0.9131, 0.0631, 0.6607], [0.5029, 0.2563, 0.3036], [0.6353, 0.5755, 0.6961]], [[0.9294, 0.1663, 0.1592], [0.7463, 0.0428, 0.1425], [0.0418, 0.2478, 0.7523], [0.4388, 0.2903, 0.1328], [0.8637, 0.2731, 0.668]]]]], 3, Con2438), 
LSub74669 = subtract_layer(Res91816,Con2438, Sub74669), 
LCon88339 = conv2D_layer([[[[0.4498]]]], 1, 1,[[[[0.3194, 0.3816, 0.7108, 0.4591]]]],[0, 0, 0, 0], 1, 1, true, 1, 1, Con88339), 
LZer68861 = zero_padding2D_layer(Con88339, 5, 0, 4, 0, Zer68861), 
LMax72290 = maximum_layer([Sub74669,Zer68861], Max72290), 
exec_layers([LZer61003,LRes91816,LAve10104,LZer1648,LCon2438,LSub74669,LCon88339,LZer68861,LMax72290],["Zer61003","Res91816","Ave10104","Zer1648","Con2438","Sub74669","Con88339","Zer68861","Max72290"],Max72290,"Max72290")

Actual (Unparsed): [[[[0.0000000, 0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000, 0.0000000]], [[0.0000000, 0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.2883000, 1.3972001, 0.0000000], [0.0000000, 0.8987000, 0.4996001, 0.0000000], [0.0000000, 1.2753999, 1.7580001, 0.0000000], [0.0000000, 0.0000000, 0.0000000, 0.0000000]], [[0.0000000, 0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.1315000, 1.1345000, 0.0000000], [0.0000000, 0.6737000, 1.2995000, 0.0000000], [0.0000000, 0.6124000, 1.0340000, 0.0000000], [0.0000000, 0.0000000, 0.0000000, 0.0000000]], [[0.0000000, 0.0000000, 0.0000000, 0.0000000], [0.0000000, 1.9281000, 1.2646000, 0.0000000], [0.0000000, 1.0009000, 0.1923000, 0.0000000], [0.0000000, 1.3466000, 0.5068000, 0.0000000], [0.0000000, 0.0000000, 0.0000000, 0.0000000]], [[0.0000000, 0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.6435999, 0.6986000, 0.0000000], [0.0000000, 0.1062000, 1.8790999, 0.0000000], [0.0000000, 1.0008000, 1.1384999, 0.0000000], [0.0000000, 0.0000000, 0.0000000, 0.0000000]], [[0.0000000, 0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000, 0.0000000], [0.1436661, 0.1716437, 0.3197179, 0.2065032]]]]

Expected (Unparsed): [[[[0,0,0,0],[0,0,0,0],[0,0,0,0],[0,0,0,0],[0,0,0,0]],[[0,0,0,0],[0,0.2883,1.3972,0],[0,0.8987,0.49960000000000004,0],[0,1.2754,1.758,0],[0,0,0,0]],[[0,0,0,0],[0,0.13149999999999995,1.1345,0],[0,0.6737,1.2995,0],[0,0.6123999999999999,1.034,0],[0,0,0,0]],[[0,0,0,0],[0,1.9281,1.2646000000000002,0],[0,1.0009000000000001,0.19230000000000003,0],[0,1.3466,0.5067999999999999,0],[0,0,0,0]],[[0,0,0,0],[0,0.6436,0.6985999999999999,0],[0,0.10620000000000007,1.8791,0],[0,1.0008,1.1385,0],[0,0,0,0]],[[0,0,0,0],[0,0,0,0],[0,0,0,0],[0,0,0,0],[0.14366612,0.17164368,0.31971784,0.20650317999999998]]]]

Actual:   [[[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]], [[0, 0, 0, 0], [0, 0.2883, 1.3973, 0], [0, 0.8987, 0.4997, 0], [0, 1.2754, 1.7581, 0], [0, 0, 0, 0]], [[0, 0, 0, 0], [0, 0.1315, 1.1345, 0], [0, 0.6737, 1.2995, 0], [0, 0.6124, 1.034, 0], [0, 0, 0, 0]], [[0, 0, 0, 0], [0, 1.9281, 1.2646, 0], [0, 1.0009, 0.1923, 0], [0, 1.3466, 0.5068, 0], [0, 0, 0, 0]], [[0, 0, 0, 0], [0, 0.6436, 0.6986, 0], [0, 0.1062, 1.8791, 0], [0, 1.0008, 1.1385, 0], [0, 0, 0, 0]], [[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0.1437, 0.1717, 0.3198, 0.2066]]]]

Expected: [[[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]], [[0, 0, 0, 0], [0, 0.2883, 1.3972, 0], [0, 0.8987, 0.4997, 0], [0, 1.2754, 1.758, 0], [0, 0, 0, 0]], [[0, 0, 0, 0], [0, 0.1315, 1.1345, 0], [0, 0.6737, 1.2995, 0], [0, 0.6124, 1.034, 0], [0, 0, 0, 0]], [[0, 0, 0, 0], [0, 1.9281, 1.2647, 0], [0, 1.001, 0.1924, 0], [0, 1.3466, 0.5068, 0], [0, 0, 0, 0]], [[0, 0, 0, 0], [0, 0.6436, 0.6986, 0], [0, 0.1063, 1.8791, 0], [0, 1.0008, 1.1385, 0], [0, 0, 0, 0]], [[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0.1437, 0.1717, 0.3198, 0.2066]]]]