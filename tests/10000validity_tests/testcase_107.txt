import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Add25598 = tf.keras.layers.Input(shape=([1, 2]))
in1Add25598 = tf.keras.layers.Input(shape=([1, 2]))
in0Con84375 = tf.keras.layers.Input(shape=([1, 2, 1]))
in0GRU96364 = tf.keras.layers.Input(shape=([2, 2]))

Add25598 = keras.layers.Add(name = 'Add25598', )([in0Add25598,in1Add25598])
Res55077 = keras.layers.Reshape((1, 2, 1), name = 'Res55077', )(Add25598)
Con84375 = keras.layers.Concatenate(axis=3, name = 'Con84375', )([Res55077,in0Con84375])
GRU96364 = keras.layers.GRU(2,reset_after=False, recurrent_activation='sigmoid', name = 'GRU96364', )(in0GRU96364)
Res67222 = keras.layers.Reshape((2, 1), name = 'Res67222', )(GRU96364)
Res15269 = keras.layers.Reshape((2, 1, 1), name = 'Res15269', )(Res67222)
Sep86079 = keras.layers.SeparableConv2D(2, (1, 1),strides=(2, 2), padding='same', name = 'Sep86079', )(Res15269)
Zer64786 = keras.layers.ZeroPadding2D(padding=((0, 0), (1, 0)), name = 'Zer64786', )(Sep86079)
Mul20175 = keras.layers.Multiply(name = 'Mul20175', )([Con84375,Zer64786])
Con72537 = keras.layers.Conv2D(4, (1, 2),strides=(6, 1), padding='same', dilation_rate=(1, 1), name = 'Con72537', )(Mul20175)
model = tf.keras.models.Model(inputs=[in0Add25598,in1Add25598,in0Con84375,in0GRU96364], outputs=Con72537)
w = model.get_layer('GRU96364').get_weights() 
w[0] = np.array([[8, 10, 2, 9, 2, 6], [8, 9, 9, 7, 6, 1]])
w[1] = np.array([[2, 6, 10, 4, 8, 6], [8, 8, 9, 4, 2, 10]])
w[2] = np.array([1, 9, 6, 5, 4, 9])
model.get_layer('GRU96364').set_weights(w) 
w = model.get_layer('Sep86079').get_weights() 
w[0] = np.array([[[[0.698]]]])
w[1] = np.array([[[[0.4055, 0.479]]]])
w[2] = np.array([0, 0])
model.get_layer('Sep86079').set_weights(w) 
w = model.get_layer('Con72537').get_weights() 
w[0] = np.array([[[[0.5599, 0.2432, 0.1972, 0.3377], [0.7275, 0.7755, 0.6271, 0.8918]], [[0.6017, 0.5505, 0.5115, 0.9584], [0.2944, 0.2607, 0.7994, 0.8952]]]])
w[1] = np.array([0, 0, 0, 0])
model.get_layer('Con72537').set_weights(w) 
in0Add25598 = tf.constant([[[0.5572, 0.9882]]])
in1Add25598 = tf.constant([[[0.4989, 0.0127]]])
in0Con84375 = tf.constant([[[[0.119], [0.3468]]]])
in0GRU96364 = tf.constant([[[4, 3], [10, 10]]])
print (np.array2string(model.predict([in0Add25598,in1Add25598,in0Con84375,in0GRU96364],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Con72537.png')

LAdd25598 = add_layer([[[[0.5572, 0.9882]]], [[[0.4989, 0.0127]]]], Add25598), 
LRes55077 = reshape_layer(Add25598, [1, 2, 1], Res55077), 
LCon84375 = concatenate_layer([Res55077,[[[[0.119], [0.3468]]]]], 3, Con84375), 
LGRU96364 = gru_layer([[[4, 3], [10, 10]]],[[8, 10, 2, 9, 2, 6], [8, 9, 9, 7, 6, 1]],[[2, 6, 10, 4, 8, 6], [8, 8, 9, 4, 2, 10]],[1, 9, 6, 5, 4, 9], false, GRU96364), 
LRes67222 = reshape_layer(GRU96364, [2, 1], Res67222), 
LRes15269 = reshape_layer(Res67222, [2, 1, 1], Res15269), 
LSep86079 = separable_conv2D_layer(Res15269, 1, 1,[[[[[0.698]]]],[[[[0.4055, 0.479]]]]],[0, 0], 2, 2, true, Sep86079), 
LZer64786 = zero_padding2D_layer(Sep86079, 0, 0, 1, 0, Zer64786), 
LMul20175 = multiply_layer([Con84375,Zer64786], Mul20175), 
LCon72537 = conv2D_layer(Mul20175, 1, 2,[[[[0.5599, 0.2432, 0.1972, 0.3377], [0.7275, 0.7755, 0.6271, 0.8918]], [[0.6017, 0.5505, 0.5115, 0.9584], [0.2944, 0.2607, 0.7994, 0.8952]]]],[0, 0, 0, 0], 6, 1, true, 1, 1, Con72537), 
exec_layers([LAdd25598,LRes55077,LCon84375,LGRU96364,LRes67222,LRes15269,LSep86079,LZer64786,LMul20175,LCon72537],["Add25598","Res55077","Con84375","GRU96364","Res67222","Res15269","Sep86079","Zer64786","Mul20175","Con72537"],Con72537,"Con72537")

Actual (Unparsed): [[[[0.0000000, 0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000, 0.0000000]]]]

Expected (Unparsed): [[[[0.0,0.0,0.0,0.0],[0.0,0.0,0.0,0.0]]]]

Actual:   [[[[0, 0, 0, 0], [0, 0, 0, 0]]]]

Expected: [[[[0, 0, 0, 0], [0, 0, 0, 0]]]]