import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Cro73949 = tf.keras.layers.Input(shape=([3, 4, 4]))
in0Fla95313 = tf.keras.layers.Input(shape=([4]))
in0Con89991 = tf.keras.layers.Input(shape=([4, 2]))
in0Con30869 = tf.keras.layers.Input(shape=([2, 2]))
in0Con81862 = tf.keras.layers.Input(shape=([3, 2]))
in0Sub78429 = tf.keras.layers.Input(shape=([3, 3]))
in1Sub78429 = tf.keras.layers.Input(shape=([3, 3]))
in0Con77720 = tf.keras.layers.Input(shape=([4, 13]))

Cro73949 = keras.layers.Cropping2D(cropping=((0, 1), (0, 0)), name = 'Cro73949', )(in0Cro73949)
Res74592 = keras.layers.Reshape((2, 16), name = 'Res74592', )(Cro73949)
Zer9314 = keras.layers.ZeroPadding1D(padding=((2, 0)), name = 'Zer9314', )(Res74592)
Fla95313 = keras.layers.Flatten(name = 'Fla95313', )(in0Fla95313)
Res50912 = keras.layers.Reshape((4, 1), name = 'Res50912', )(Fla95313)
Con89991 = keras.layers.Concatenate(axis=2, name = 'Con89991', )([Res50912,in0Con89991])
Con30869 = keras.layers.Conv1D(3, (2),strides=(1), padding='valid', dilation_rate=(1), name = 'Con30869', )(in0Con30869)
Glo82993 = keras.layers.GlobalAveragePooling1D(name = 'Glo82993', )(Con30869)
Res21085 = keras.layers.Reshape((3, 1), name = 'Res21085', )(Glo82993)
Con81862 = keras.layers.Concatenate(axis=2, name = 'Con81862', )([Res21085,in0Con81862])
Sub78429 = keras.layers.Subtract(name = 'Sub78429', )([in0Sub78429,in1Sub78429])
Min26320 = keras.layers.Minimum(name = 'Min26320', )([Con81862,Sub78429])
Dot20241 = keras.layers.Dot(axes=(2, 2), name = 'Dot20241', )([Con89991,Min26320])
Con77720 = keras.layers.Concatenate(axis=2, name = 'Con77720', )([Dot20241,in0Con77720])
Sub65729 = keras.layers.Subtract(name = 'Sub65729', )([Zer9314,Con77720])
Res55713 = keras.layers.Reshape((4, 16, 1), name = 'Res55713', )(Sub65729)
Res37062 = keras.layers.Reshape((4, 16, 1, 1), name = 'Res37062', )(Res55713)
Glo80774 = keras.layers.GlobalAveragePooling3D(name = 'Glo80774', )(Res37062)
model = tf.keras.models.Model(inputs=[in0Cro73949,in0Fla95313,in0Con89991,in0Con30869,in0Con81862,in0Sub78429,in1Sub78429,in0Con77720], outputs=Glo80774)
w = model.get_layer('Con30869').get_weights() 
w[0] = np.array([[[0.3116, 0.6203, 0.8912], [0.0098, 0.575, 0.0081]], [[0.4235, 0.2703, 0.0766], [0.2658, 0.1474, 0.0959]]])
w[1] = np.array([0, 0, 0])
model.get_layer('Con30869').set_weights(w) 
in0Cro73949 = tf.constant([[[[1.7651, 1.7192, 1.0251, 1.0067], [1.2147, 1.8385, 1.5905, 1.1531], [1.0106, 1.8089, 1.5707, 1.0346], [1.4976, 1.2676, 1.3746, 1.8975]], [[1.6962, 1.6543, 1.7072, 1.4581], [1.5242, 1.005, 1.2251, 1.8569], [1.2542, 1.4088, 1.4774, 1.4932], [1.134, 1.1635, 1.9046, 1.0792]], [[1.2345, 1.0336, 1.8256, 1.2625], [1.0157, 1.9123, 1.2821, 1.2066], [1.8018, 1.6229, 1.3267, 1.5899], [1.3468, 1.5526, 1.8458, 1.5866]]]])
in0Fla95313 = tf.constant([[1.9324, 1.3096, 1.2876, 1.5249]])
in0Con89991 = tf.constant([[[0.7657, 0.1341], [0.4415, 0.2881], [0.2471, 0.1356], [0.8643, 0.5558]]])
in0Con30869 = tf.constant([[[0.9939, 0.614], [0.7299, 0.0857]]])
in0Con81862 = tf.constant([[[0.3124, 0.2268], [0.7662, 0.4049], [0.6194, 0.9368]]])
in0Sub78429 = tf.constant([[[0.0947, 0.1933, 0.5686], [0.1003, 0.1826, 0.5367], [0.7299, 0.2307, 0.4506]]])
in1Sub78429 = tf.constant([[[0.9817, 0.7223, 0.0791], [0.8005, 0.7574, 0.0268], [0.5601, 0.86, 0.2865]]])
in0Con77720 = tf.constant([[[0.7793, 0.5812, 0.9674, 0.6681, 0.9656, 0.2721, 0.2324, 0.4625, 0.558, 0.1698, 0.1589, 0.3119, 0.7463], [0.3361, 0.7352, 0.6075, 0.868, 0.3539, 0.8213, 0.3972, 0.7278, 0.7744, 0.89, 0.3319, 0.4651, 0.1265], [0.236, 0.7575, 0.2245, 0.7859, 0.3037, 0.9787, 0.8693, 0.96, 0.2856, 0.8181, 0.2479, 0.5419, 0.424], [0.7302, 0.0662, 0.6065, 0.5153, 0.8956, 0.2519, 0.8815, 0.9565, 0.9149, 0.8052, 0.6108, 0.3051, 0.9511]]])
print (np.array2string(model.predict([in0Cro73949,in0Fla95313,in0Con89991,in0Con30869,in0Con81862,in0Sub78429,in1Sub78429,in0Con77720],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Glo80774.png')

LCro73949 = cropping2D_layer([[[[1.7651, 1.7192, 1.0251, 1.0067], [1.2147, 1.8385, 1.5905, 1.1531], [1.0106, 1.8089, 1.5707, 1.0346], [1.4976, 1.2676, 1.3746, 1.8975]], [[1.6962, 1.6543, 1.7072, 1.4581], [1.5242, 1.005, 1.2251, 1.8569], [1.2542, 1.4088, 1.4774, 1.4932], [1.134, 1.1635, 1.9046, 1.0792]], [[1.2345, 1.0336, 1.8256, 1.2625], [1.0157, 1.9123, 1.2821, 1.2066], [1.8018, 1.6229, 1.3267, 1.5899], [1.3468, 1.5526, 1.8458, 1.5866]]]], 0, 1, 0, 0, Cro73949), 
LRes74592 = reshape_layer(Cro73949, [2, 16], Res74592), 
LZer9314 = zero_padding1D_layer(Res74592, 2, 0, Zer9314), 
LFla95313 = flatten_layer([[1.9324, 1.3096, 1.2876, 1.5249]], Fla95313), 
LRes50912 = reshape_layer(Fla95313, [4, 1], Res50912), 
LCon89991 = concatenate_layer([Res50912,[[[0.7657, 0.1341], [0.4415, 0.2881], [0.2471, 0.1356], [0.8643, 0.5558]]]], 2, Con89991), 
LCon30869 = conv1D_layer([[[0.9939, 0.614], [0.7299, 0.0857]]], 2,[[[0.3116, 0.6203, 0.8912], [0.0098, 0.575, 0.0081]], [[0.4235, 0.2703, 0.0766], [0.2658, 0.1474, 0.0959]]],[0, 0, 0], 1, false, 1, Con30869), 
LGlo82993 = global_average_pooling1D_layer(Con30869, Glo82993), 
LRes21085 = reshape_layer(Glo82993, [3, 1], Res21085), 
LCon81862 = concatenate_layer([Res21085,[[[0.3124, 0.2268], [0.7662, 0.4049], [0.6194, 0.9368]]]], 2, Con81862), 
LSub78429 = subtract_layer([[[0.0947, 0.1933, 0.5686], [0.1003, 0.1826, 0.5367], [0.7299, 0.2307, 0.4506]]], [[[0.9817, 0.7223, 0.0791], [0.8005, 0.7574, 0.0268], [0.5601, 0.86, 0.2865]]], Sub78429), 
LMin26320 = minimum_layer([Con81862,Sub78429], Min26320), 
LDot20241 = dot_layer(Con89991,Min26320, 2, 2, Dot20241), 
LCon77720 = concatenate_layer([Dot20241,[[[0.7793, 0.5812, 0.9674, 0.6681, 0.9656, 0.2721, 0.2324, 0.4625, 0.558, 0.1698, 0.1589, 0.3119, 0.7463], [0.3361, 0.7352, 0.6075, 0.868, 0.3539, 0.8213, 0.3972, 0.7278, 0.7744, 0.89, 0.3319, 0.4651, 0.1265], [0.236, 0.7575, 0.2245, 0.7859, 0.3037, 0.9787, 0.8693, 0.96, 0.2856, 0.8181, 0.2479, 0.5419, 0.424], [0.7302, 0.0662, 0.6065, 0.5153, 0.8956, 0.2519, 0.8815, 0.9565, 0.9149, 0.8052, 0.6108, 0.3051, 0.9511]]]], 2, Con77720), 
LSub65729 = subtract_layer(Zer9314,Con77720, Sub65729), 
LRes55713 = reshape_layer(Sub65729, [4, 16, 1], Res55713), 
LRes37062 = reshape_layer(Res55713, [4, 16, 1, 1], Res37062), 
LGlo80774 = global_average_pooling3D_layer(Res37062, Glo80774), 
exec_layers([LCro73949,LRes74592,LZer9314,LFla95313,LRes50912,LCon89991,LCon30869,LGlo82993,LRes21085,LCon81862,LSub78429,LMin26320,LDot20241,LCon77720,LSub65729,LRes55713,LRes37062,LGlo80774],["Cro73949","Res74592","Zer9314","Fla95313","Res50912","Con89991","Con30869","Glo82993","Res21085","Con81862","Sub78429","Min26320","Dot20241","Con77720","Sub65729","Res55713","Res37062","Glo80774"],Glo80774,"Glo80774")

Actual (Unparsed): [[0.4265377]]

Expected (Unparsed): [[0.4265376731250001]]

Actual:   [[0.4266]]

Expected: [[0.4266]]