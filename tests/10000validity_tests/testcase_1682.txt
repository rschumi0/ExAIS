import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Ave30043 = tf.keras.layers.Input(shape=([1, 1]))
in1Ave30043 = tf.keras.layers.Input(shape=([1, 1]))
in0Sub57953 = tf.keras.layers.Input(shape=([2]))
in1Sub57953 = tf.keras.layers.Input(shape=([2]))
in0Con42590 = tf.keras.layers.Input(shape=([2, 2, 1]))
in0Min67978 = tf.keras.layers.Input(shape=([2, 2, 2, 1]))
in1Min67978 = tf.keras.layers.Input(shape=([2, 2, 2, 1]))

Ave30043 = keras.layers.Average(name = 'Ave30043', )([in0Ave30043,in1Ave30043])
LST35125 = keras.layers.LSTM(2,recurrent_activation='sigmoid', name = 'LST35125', )(Ave30043)
Sub57953 = keras.layers.Subtract(name = 'Sub57953', )([in0Sub57953,in1Sub57953])
Mul75331 = keras.layers.Multiply(name = 'Mul75331', )([LST35125,Sub57953])
Res10002 = keras.layers.Reshape((2, 1), name = 'Res10002', )(Mul75331)
Res77089 = keras.layers.Reshape((2, 1, 1), name = 'Res77089', )(Res10002)
Zer83145 = keras.layers.ZeroPadding2D(padding=((0, 0), (1, 0)), name = 'Zer83145', )(Res77089)
Con42590 = keras.layers.Concatenate(axis=3, name = 'Con42590', )([Zer83145,in0Con42590])
Min67978 = keras.layers.Minimum(name = 'Min67978', )([in0Min67978,in1Min67978])
Res75139 = keras.layers.Reshape((2, 2, 2), name = 'Res75139', )(Min67978)
Ave99935 = keras.layers.AveragePooling2D(pool_size=(1, 2), strides=(1, 1), padding='same', name = 'Ave99935', )(Res75139)
Mul64234 = keras.layers.Multiply(name = 'Mul64234', )([Con42590,Ave99935])
model = tf.keras.models.Model(inputs=[in0Ave30043,in1Ave30043,in0Sub57953,in1Sub57953,in0Con42590,in0Min67978,in1Min67978], outputs=Mul64234)
w = model.get_layer('LST35125').get_weights() 
w[0] = np.array([[9, 8, 5, 4, 4, 7, 5, 6]])
w[1] = np.array([[1, 2, 9, 4, 2, 1, 8, 9], [10, 10, 9, 1, 10, 7, 2, 5]])
w[2] = np.array([4, 10, 2, 5, 7, 9, 7, 1])
model.get_layer('LST35125').set_weights(w) 
in0Ave30043 = tf.constant([[[0.1826]]])
in1Ave30043 = tf.constant([[[0.9255]]])
in0Sub57953 = tf.constant([[0.0558, 0.7925]])
in1Sub57953 = tf.constant([[0.3611, 0.8228]])
in0Con42590 = tf.constant([[[[0.8265], [0.8893]], [[0.6213], [0.6111]]]])
in0Min67978 = tf.constant([[[[[0.9168], [0.9186]], [[0.9847], [0.746]]], [[[0.7613], [0.3574]], [[0.7202], [0.74]]]]])
in1Min67978 = tf.constant([[[[[0.7892], [0.761]], [[0.5834], [0.3336]]], [[[0.9073], [0.4739]], [[0.8907], [0.1774]]]]])
print (np.array2string(model.predict([in0Ave30043,in1Ave30043,in0Sub57953,in1Sub57953,in0Con42590,in0Min67978,in1Min67978],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Mul64234.png')

LAve30043 = average_layer([[[[0.1826]]], [[[0.9255]]]], Ave30043), 
LLST35125 = lstm_layer(Ave30043,[[9, 8, 5, 4, 4, 7, 5, 6]],[[1, 2, 9, 4, 2, 1, 8, 9], [10, 10, 9, 1, 10, 7, 2, 5]],[4, 10, 2, 5, 7, 9, 7, 1], LST35125), 
LSub57953 = subtract_layer([[0.0558, 0.7925]], [[0.3611, 0.8228]], Sub57953), 
LMul75331 = multiply_layer([LST35125,Sub57953], Mul75331), 
LRes10002 = reshape_layer(Mul75331, [2, 1], Res10002), 
LRes77089 = reshape_layer(Res10002, [2, 1, 1], Res77089), 
LZer83145 = zero_padding2D_layer(Res77089, 0, 0, 1, 0, Zer83145), 
LCon42590 = concatenate_layer([Zer83145,[[[[0.8265], [0.8893]], [[0.6213], [0.6111]]]]], 3, Con42590), 
LMin67978 = minimum_layer([[[[[[0.9168], [0.9186]], [[0.9847], [0.746]]], [[[0.7613], [0.3574]], [[0.7202], [0.74]]]]], [[[[[0.7892], [0.761]], [[0.5834], [0.3336]]], [[[0.9073], [0.4739]], [[0.8907], [0.1774]]]]]], Min67978), 
LRes75139 = reshape_layer(Min67978, [2, 2, 2], Res75139), 
LAve99935 = average_pooling2D_layer(Res75139, 1, 2, 1, 1, true, Ave99935), 
LMul64234 = multiply_layer([Con42590,Ave99935], Mul64234), 
exec_layers([LAve30043,LLST35125,LSub57953,LMul75331,LRes10002,LRes77089,LZer83145,LCon42590,LMin67978,LRes75139,LAve99935,LMul64234],["Ave30043","LST35125","Sub57953","Mul75331","Res10002","Res77089","Zer83145","Con42590","Min67978","Res75139","Ave99935","Mul64234"],Mul64234,"Mul64234")

Actual (Unparsed): [[[[0.0000000, 0.4523434], [-0.1356320, 0.2966705]], [[0.0000000, 0.1661356], [-0.0164023, 0.1084091]]]]

Expected (Unparsed): [[[[0.0,0.45234345000000004],[-0.13563196692139223,0.29667048]],[[0.0,0.16613561999999998],[-0.016402335299469478,0.10840914]]]]

Actual:   [[[[0, 0.4524], [-0.1356, 0.2967]], [[0, 0.1662], [-0.0164, 0.1085]]]]

Expected: [[[[0, 0.4524], [-0.1356, 0.2967]], [[0, 0.1662], [-0.0164, 0.1085]]]]