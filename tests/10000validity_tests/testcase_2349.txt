import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Max58990 = tf.keras.layers.Input(shape=([2, 2, 1]))
in0Con89319 = tf.keras.layers.Input(shape=([3, 12, 1]))
in0Mul66870 = tf.keras.layers.Input(shape=([2, 2, 2]))
in1Mul66870 = tf.keras.layers.Input(shape=([2, 2, 2]))
in0Sub67264 = tf.keras.layers.Input(shape=([3, 2, 3, 2]))
in1Sub67264 = tf.keras.layers.Input(shape=([3, 2, 3, 2]))
in0Con86475 = tf.keras.layers.Input(shape=([3, 20]))

Max58990 = keras.layers.MaxPool2D(pool_size=(2, 1), strides=(2, 4), padding='same', name = 'Max58990', )(in0Max58990)
Zer57380 = keras.layers.ZeroPadding2D(padding=((1, 1), (1, 1)), name = 'Zer57380', )(Max58990)
Con8474 = keras.layers.Conv2D(4, (2, 1),strides=(2, 1), padding='valid', dilation_rate=(1, 1), name = 'Con8474', )(Zer57380)
Res21492 = keras.layers.Reshape((1, 12), name = 'Res21492', )(Con8474)
Zer43969 = keras.layers.ZeroPadding1D(padding=((1, 1)), name = 'Zer43969', )(Res21492)
Res18196 = keras.layers.Reshape((3, 12, 1), name = 'Res18196', )(Zer43969)
Con89319 = keras.layers.Concatenate(axis=3, name = 'Con89319', )([Res18196,in0Con89319])
Mul66870 = keras.layers.Multiply(name = 'Mul66870', )([in0Mul66870,in1Mul66870])
Zer39241 = keras.layers.ZeroPadding2D(padding=((1, 0), (10, 0)), name = 'Zer39241', )(Mul66870)
Sub21272 = keras.layers.Subtract(name = 'Sub21272', )([Con89319,Zer39241])
Res6 = keras.layers.Reshape((3, 24), name = 'Res6', )(Sub21272)
Sub67264 = keras.layers.Subtract(name = 'Sub67264', )([in0Sub67264,in1Sub67264])
Res93734 = keras.layers.Reshape((3, 2, 6), name = 'Res93734', )(Sub67264)
Res66417 = keras.layers.Reshape((3, 12), name = 'Res66417', )(Res93734)
Sep60641 = keras.layers.SeparableConv1D(4, (2),strides=(2), padding='valid', name = 'Sep60641', )(Res66417)
Zer95087 = keras.layers.ZeroPadding1D(padding=((2, 0)), name = 'Zer95087', )(Sep60641)
Con86475 = keras.layers.Concatenate(axis=2, name = 'Con86475', )([Zer95087,in0Con86475])
Sub68814 = keras.layers.Subtract(name = 'Sub68814', )([Res6,Con86475])
model = tf.keras.models.Model(inputs=[in0Max58990,in0Con89319,in0Mul66870,in1Mul66870,in0Sub67264,in1Sub67264,in0Con86475], outputs=Sub68814)
w = model.get_layer('Con8474').get_weights() 
w[0] = np.array([[[[0.473, 0.8839, 0.1987, 0.431]]], [[[0.5147, 0.6769, 0.6243, 0.1891]]]])
w[1] = np.array([0, 0, 0, 0])
model.get_layer('Con8474').set_weights(w) 
w = model.get_layer('Sep60641').get_weights() 
w[0] = np.array([[[0.5715], [0.3803], [0.7743], [0.8091], [0.338], [0.6521], [0.7989], [0.4045], [0.8595], [0.5387], [0.8568], [0.5128]], [[0.3474], [0.3534], [0.9672], [0.6438], [0.7174], [0.8692], [0.8817], [0.1931], [0.5927], [0.1127], [0.5007], [0.0862]]])
w[1] = np.array([[[0.1912, 0.7502, 0.6671, 0.1516], [0.4977, 0.6779, 0.4028, 0.168], [0.8077, 0.1322, 0.9461, 0.4127], [0.3729, 0.1654, 0.0926, 0.5751], [0.6733, 0.9797, 0.0435, 0.012], [0.4768, 0.8325, 0.0587, 0.185], [0.5466, 0.4969, 0.502, 0.5024], [0.2898, 0.3244, 0.532, 0.8135], [0.8238, 0.4278, 0.5192, 0.5386], [0.6466, 0.7532, 0.1174, 0.4341], [0.3435, 0.8429, 0.8037, 0.2902], [0.5343, 0.902, 0.6181, 0.4391]]])
w[2] = np.array([0, 0, 0, 0])
model.get_layer('Sep60641').set_weights(w) 
in0Max58990 = tf.constant([[[[1.0404], [1.1907]], [[1.5039], [1.1729]]]])
in0Con89319 = tf.constant([[[[0.8162], [0.0152], [0.6335], [0.6566], [0.7535], [0.3671], [0.6292], [0.3432], [0.5803], [0.3795], [0.9843], [0.9862]], [[0.2196], [0.3844], [0.7681], [0.8467], [0.7612], [0.5345], [0.3994], [0.1098], [0.211], [0.3312], [0.2224], [0.5901]], [[0.1874], [0.8025], [0.0329], [0.2882], [0.2964], [0.6704], [0.3065], [0.4829], [0.1541], [0.0503], [0.631], [0.4]]]])
in0Mul66870 = tf.constant([[[[0.5084, 0.0517], [0.4454, 0.6896]], [[0.4279, 0.2831], [0.3179, 0.5858]]]])
in1Mul66870 = tf.constant([[[[0.7318, 0.0315], [0.2612, 0.3404]], [[0.2402, 0.8232], [0.1338, 0.8191]]]])
in0Sub67264 = tf.constant([[[[[0.9307, 0.5163], [0.1715, 0.3717], [0.5102, 0.8594]], [[0.0071, 0.8211], [0.9382, 0.0554], [0.4386, 0.3549]]], [[[0.1893, 0.1831], [0.9233, 0.8696], [0.3371, 0.1963]], [[0.022, 0.7557], [0.9909, 0.4884], [0.9228, 0.4656]]], [[[0.223, 0.6905], [0.7304, 0.4556], [0.3899, 0.4492]], [[0.426, 0.2599], [0.6638, 0.4245], [0.2717, 0.5176]]]]])
in1Sub67264 = tf.constant([[[[[0.6732, 0.6406], [0.9652, 0.7496], [0.3767, 0.6254]], [[0.0313, 0.5615], [0.185, 0.4808], [0.7806, 0.7347]]], [[[0.3908, 0.1443], [0.662, 0.3607], [0.1618, 0.6171]], [[0.9873, 0.7714], [0.7157, 0.866], [0.8183, 0.5245]]], [[[0.8014, 0.4352], [0.271, 0.1116], [0.2851, 0.5473]], [[0.6143, 0.3787], [0.4615, 0.614], [0.318, 0.8656]]]]])
in0Con86475 = tf.constant([[[0.6157, 0.1996, 0.2569, 0.0707, 0.6687, 0.6961, 0.0836, 0.4851, 0.1251, 0.9134, 0.2125, 0.6728, 0.9341, 0.67, 0.2398, 0.0928, 0.4432, 0.0805, 0.9063, 0.0702], [0.1251, 0.7743, 0.813, 0.5793, 0.7218, 0.3569, 0.9753, 0.6298, 0.8582, 0.4305, 0.472, 0.2037, 0.7181, 0.6952, 0.3758, 0.9093, 0.9456, 0.1379, 0.6132, 0.5186], [0.5379, 0.082, 0.3966, 0.339, 0.13, 0.9182, 0.3926, 0.931, 0.736, 0.6675, 0.8511, 0.0301, 0.708, 0.1369, 0.5006, 0.6572, 0.4021, 0.3194, 0.1392, 0.3067]]])
print (np.array2string(model.predict([in0Max58990,in0Con89319,in0Mul66870,in1Mul66870,in0Sub67264,in1Sub67264,in0Con86475],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Sub68814.png')

LMax58990 = max_pool2D_layer([[[[1.0404], [1.1907]], [[1.5039], [1.1729]]]], 2, 1, 2, 4, true, Max58990), 
LZer57380 = zero_padding2D_layer(Max58990, 1, 1, 1, 1, Zer57380), 
LCon8474 = conv2D_layer(Zer57380, 2, 1,[[[[0.473, 0.8839, 0.1987, 0.431]]], [[[0.5147, 0.6769, 0.6243, 0.1891]]]],[0, 0, 0, 0], 2, 1, false, 1, 1, Con8474), 
LRes21492 = reshape_layer(Con8474, [1, 12], Res21492), 
LZer43969 = zero_padding1D_layer(Res21492, 1, 1, Zer43969), 
LRes18196 = reshape_layer(Zer43969, [3, 12, 1], Res18196), 
LCon89319 = concatenate_layer([Res18196,[[[[0.8162], [0.0152], [0.6335], [0.6566], [0.7535], [0.3671], [0.6292], [0.3432], [0.5803], [0.3795], [0.9843], [0.9862]], [[0.2196], [0.3844], [0.7681], [0.8467], [0.7612], [0.5345], [0.3994], [0.1098], [0.211], [0.3312], [0.2224], [0.5901]], [[0.1874], [0.8025], [0.0329], [0.2882], [0.2964], [0.6704], [0.3065], [0.4829], [0.1541], [0.0503], [0.631], [0.4]]]]], 3, Con89319), 
LMul66870 = multiply_layer([[[[[0.5084, 0.0517], [0.4454, 0.6896]], [[0.4279, 0.2831], [0.3179, 0.5858]]]], [[[[0.7318, 0.0315], [0.2612, 0.3404]], [[0.2402, 0.8232], [0.1338, 0.8191]]]]], Mul66870), 
LZer39241 = zero_padding2D_layer(Mul66870, 1, 0, 10, 0, Zer39241), 
LSub21272 = subtract_layer(Con89319,Zer39241, Sub21272), 
LRes6 = reshape_layer(Sub21272, [3, 24], Res6), 
LSub67264 = subtract_layer([[[[[0.9307, 0.5163], [0.1715, 0.3717], [0.5102, 0.8594]], [[0.0071, 0.8211], [0.9382, 0.0554], [0.4386, 0.3549]]], [[[0.1893, 0.1831], [0.9233, 0.8696], [0.3371, 0.1963]], [[0.022, 0.7557], [0.9909, 0.4884], [0.9228, 0.4656]]], [[[0.223, 0.6905], [0.7304, 0.4556], [0.3899, 0.4492]], [[0.426, 0.2599], [0.6638, 0.4245], [0.2717, 0.5176]]]]], [[[[[0.6732, 0.6406], [0.9652, 0.7496], [0.3767, 0.6254]], [[0.0313, 0.5615], [0.185, 0.4808], [0.7806, 0.7347]]], [[[0.3908, 0.1443], [0.662, 0.3607], [0.1618, 0.6171]], [[0.9873, 0.7714], [0.7157, 0.866], [0.8183, 0.5245]]], [[[0.8014, 0.4352], [0.271, 0.1116], [0.2851, 0.5473]], [[0.6143, 0.3787], [0.4615, 0.614], [0.318, 0.8656]]]]], Sub67264), 
LRes93734 = reshape_layer(Sub67264, [3, 2, 6], Res93734), 
LRes66417 = reshape_layer(Res93734, [3, 12], Res66417), 
LSep60641 = separable_conv1D_layer(Res66417, 2,[[[[0.5715], [0.3803], [0.7743], [0.8091], [0.338], [0.6521], [0.7989], [0.4045], [0.8595], [0.5387], [0.8568], [0.5128]], [[0.3474], [0.3534], [0.9672], [0.6438], [0.7174], [0.8692], [0.8817], [0.1931], [0.5927], [0.1127], [0.5007], [0.0862]]],[[[0.1912, 0.7502, 0.6671, 0.1516], [0.4977, 0.6779, 0.4028, 0.168], [0.8077, 0.1322, 0.9461, 0.4127], [0.3729, 0.1654, 0.0926, 0.5751], [0.6733, 0.9797, 0.0435, 0.012], [0.4768, 0.8325, 0.0587, 0.185], [0.5466, 0.4969, 0.502, 0.5024], [0.2898, 0.3244, 0.532, 0.8135], [0.8238, 0.4278, 0.5192, 0.5386], [0.6466, 0.7532, 0.1174, 0.4341], [0.3435, 0.8429, 0.8037, 0.2902], [0.5343, 0.902, 0.6181, 0.4391]]]],[0, 0, 0, 0], 2, false, Sep60641), 
LZer95087 = zero_padding1D_layer(Sep60641, 2, 0, Zer95087), 
LCon86475 = concatenate_layer([Zer95087,[[[0.6157, 0.1996, 0.2569, 0.0707, 0.6687, 0.6961, 0.0836, 0.4851, 0.1251, 0.9134, 0.2125, 0.6728, 0.9341, 0.67, 0.2398, 0.0928, 0.4432, 0.0805, 0.9063, 0.0702], [0.1251, 0.7743, 0.813, 0.5793, 0.7218, 0.3569, 0.9753, 0.6298, 0.8582, 0.4305, 0.472, 0.2037, 0.7181, 0.6952, 0.3758, 0.9093, 0.9456, 0.1379, 0.6132, 0.5186], [0.5379, 0.082, 0.3966, 0.339, 0.13, 0.9182, 0.3926, 0.931, 0.736, 0.6675, 0.8511, 0.0301, 0.708, 0.1369, 0.5006, 0.6572, 0.4021, 0.3194, 0.1392, 0.3067]]]], 2, Con86475), 
LSub68814 = subtract_layer(Res6,Con86475, Sub68814), 
exec_layers([LMax58990,LZer57380,LCon8474,LRes21492,LZer43969,LRes18196,LCon89319,LMul66870,LZer39241,LSub21272,LRes6,LSub67264,LRes93734,LRes66417,LSep60641,LZer95087,LCon86475,LSub68814],["Max58990","Zer57380","Con8474","Res21492","Zer43969","Res18196","Con89319","Mul66870","Zer39241","Sub21272","Res6","Sub67264","Res93734","Res66417","Sep60641","Zer95087","Con86475","Sub68814"],Sub68814,"Sub68814")

Actual (Unparsed): [[[0.0000000, 0.8162000, 0.0000000, 0.0152000, -0.6157000, 0.4339000, -0.2569000, 0.5859000, -0.6687000, 0.0574000, -0.0836000, -0.1180000, -0.1251000, -0.2842000, -0.2125000, -0.3296000, -0.9341000, -0.0897000, -0.2398000, 0.2867000, -0.4432000, 0.9038000, -0.9063000, 0.9160000], [0.0000000, 0.2196000, 0.0000000, 0.3844000, -0.1251000, -0.0062000, -0.8130000, 0.2674000, 0.0522573, 0.4043000, 0.0426899, -0.0953000, 0.0806848, -0.0311000, -0.1876125, -0.0939000, -0.7181000, -0.4842000, -0.3758000, -0.5781000, -1.3176471, 0.0828714, -0.7295385, -0.1632398], [0.4163271, 0.8470437, 0.6182048, 1.1639526, -0.5379000, -0.0491000, -0.3966000, -0.0508000, -0.1300000, -0.6218000, -0.3926000, -0.2606000, -0.7360000, -0.3610000, -0.8511000, 0.4528000, -0.7080000, 0.0172000, -0.5006000, -0.6069000, -0.5048816, 0.0785520, -0.1817350, -0.3865288]]]

Expected (Unparsed): [[[0,0.8162,0,0.0152,-0.6157,0.43389999999999995,-0.2569,0.5859,-0.6687,0.057399999999999896,-0.0836,-0.118,-0.1251,-0.2842,-0.2125,-0.32959999999999995,-0.9341,-0.0897,-0.2398,0.2867,-0.4432,0.9037999999999999,-0.9063,0.9159999999999999],[0.0,0.2196,0.0,0.3844,-0.1251,-0.006199999999999983,-0.813,0.26739999999999997,0.0522573300000001,0.4043,0.04268990999999989,-0.09530000000000005,0.08068476999999996,-0.031100000000000017,-0.18761251,-0.0939,-0.7181,-0.4842000000000001,-0.3758,-0.5781000000000001,-1.31764712,0.08287144999999999,-0.72953848,-0.16323983999999997],[0.41632711455799976,0.8470436549189999,0.6182048049489999,1.1639526242009999,-0.5379,-0.049100000000000005,-0.3966,-0.05080000000000001,-0.13,-0.6218,-0.3926,-0.26060000000000005,-0.736,-0.361,-0.8511,0.4528,-0.708,0.017199999999999993,-0.5006,-0.6069,-0.50488158,0.07855207999999997,-0.18173502,-0.38652877999999996]]]

Actual:   [[[0, 0.8162, 0, 0.0152, -0.6157, 0.4339, -0.2569, 0.5859, -0.6687, 0.0574, -0.0836, -0.118, -0.1251, -0.2842, -0.2125, -0.3296, -0.9341, -0.0897, -0.2398, 0.2867, -0.4432, 0.9038, -0.9063, 0.916], [0, 0.2196, 0, 0.3844, -0.1251, -0.0062, -0.813, 0.2674, 0.0523, 0.4043, 0.0427, -0.0953, 0.0807, -0.0311, -0.1876, -0.0939, -0.7181, -0.4842, -0.3758, -0.5781, -1.3176, 0.0829, -0.7295, -0.1632], [0.4164, 0.8471, 0.6183, 1.164, -0.5379, -0.0491, -0.3966, -0.0508, -0.13, -0.6218, -0.3926, -0.2606, -0.736, -0.361, -0.8511, 0.4528, -0.708, 0.0172, -0.5006, -0.6069, -0.5048, 0.0786, -0.1817, -0.3865]]]

Expected: [[[0, 0.8162, 0, 0.0152, -0.6157, 0.4339, -0.2569, 0.5859, -0.6687, 0.0574, -0.0836, -0.118, -0.1251, -0.2842, -0.2125, -0.3295, -0.9341, -0.0897, -0.2398, 0.2867, -0.4432, 0.9038, -0.9063, 0.916], [0, 0.2196, 0, 0.3844, -0.1251, -0.0061, -0.813, 0.2674, 0.0523, 0.4043, 0.0427, -0.0953, 0.0807, -0.0311, -0.1876, -0.0939, -0.7181, -0.4842, -0.3758, -0.5781, -1.3176, 0.0829, -0.7295, -0.1632], [0.4164, 0.8471, 0.6183, 1.164, -0.5379, -0.0491, -0.3966, -0.0508, -0.13, -0.6218, -0.3926, -0.2606, -0.736, -0.361, -0.8511, 0.4528, -0.708, 0.0172, -0.5006, -0.6069, -0.5048, 0.0786, -0.1817, -0.3865]]]