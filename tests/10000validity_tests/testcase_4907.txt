import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Ave55623 = tf.keras.layers.Input(shape=([2, 2]))
in1Ave55623 = tf.keras.layers.Input(shape=([2, 2]))
in0Max2205 = tf.keras.layers.Input(shape=([2, 1, 2, 2]))
in1Max2205 = tf.keras.layers.Input(shape=([2, 1, 2, 2]))
in0Con9676 = tf.keras.layers.Input(shape=([2, 6, 5, 1]))
in0Loc32997 = tf.keras.layers.Input(shape=([2, 2, 2]))
in0Con38233 = tf.keras.layers.Input(shape=([2, 3, 3, 1]))
in0Sub10864 = tf.keras.layers.Input(shape=([2, 3, 3, 2]))
in1Sub10864 = tf.keras.layers.Input(shape=([2, 3, 3, 2]))

Ave55623 = keras.layers.Average(name = 'Ave55623', )([in0Ave55623,in1Ave55623])
Res66046 = keras.layers.Reshape((2, 2, 1), name = 'Res66046', )(Ave55623)
Zer71233 = keras.layers.ZeroPadding2D(padding=((0, 0), (4, 0)), name = 'Zer71233', )(Res66046)
Max2205 = keras.layers.Maximum(name = 'Max2205', )([in0Max2205,in1Max2205])
Res69196 = keras.layers.Reshape((2, 1, 4), name = 'Res69196', )(Max2205)
Res31103 = keras.layers.Reshape((2, 4), name = 'Res31103', )(Res69196)
Sep51049 = keras.layers.SeparableConv1D(4, (2),strides=(2), padding='valid', name = 'Sep51049', )(Res31103)
Res64128 = keras.layers.Reshape((1, 4, 1), name = 'Res64128', )(Sep51049)
PRe14244 = keras.layers.PReLU(name = 'PRe14244', )(Res64128)
Zer41036 = keras.layers.ZeroPadding2D(padding=((1, 0), (2, 0)), name = 'Zer41036', )(PRe14244)
Ave16581 = keras.layers.Average(name = 'Ave16581', )([Zer71233,Zer41036])
Res76630 = keras.layers.Reshape((2, 6, 1, 1), name = 'Res76630', )(Ave16581)
Zer39287 = keras.layers.ZeroPadding3D(padding=((0, 0), (0, 0), (4, 0)), name = 'Zer39287', )(Res76630)
Con9676 = keras.layers.Concatenate(axis=4, name = 'Con9676', )([Zer39287,in0Con9676])
Loc32997 = keras.layers.LocallyConnected2D(3, (2, 2),strides=(1, 1), name = 'Loc32997', )(in0Loc32997)
Bat15431 = keras.layers.BatchNormalization(axis=2, epsilon=0.33888241516578255,  name = 'Bat15431', )(Loc32997)
Res55654 = keras.layers.Reshape((1, 1, 3, 1), name = 'Res55654', )(Bat15431)
Zer24758 = keras.layers.ZeroPadding3D(padding=((1, 0), (2, 0), (0, 0)), name = 'Zer24758', )(Res55654)
Con38233 = keras.layers.Concatenate(axis=4, name = 'Con38233', )([Zer24758,in0Con38233])
Sub10864 = keras.layers.Subtract(name = 'Sub10864', )([in0Sub10864,in1Sub10864])
ELU54900 = keras.layers.ELU(alpha=-6.651465782143349, name = 'ELU54900', )(Sub10864)
Min82508 = keras.layers.Minimum(name = 'Min82508', )([Con38233,ELU54900])
Zer52960 = keras.layers.ZeroPadding3D(padding=((0, 0), (3, 0), (2, 0)), name = 'Zer52960', )(Min82508)
Sub4064 = keras.layers.Subtract(name = 'Sub4064', )([Con9676,Zer52960])
model = tf.keras.models.Model(inputs=[in0Ave55623,in1Ave55623,in0Max2205,in1Max2205,in0Con9676,in0Loc32997,in0Con38233,in0Sub10864,in1Sub10864], outputs=Sub4064)
w = model.get_layer('Sep51049').get_weights() 
w[0] = np.array([[[0.2802], [0.8948], [0.5298], [0.2831]], [[0.4475], [0.1456], [0.059], [0.0509]]])
w[1] = np.array([[[0.3228, 0.9353, 0.2684, 0.9674], [0.5278, 0.6279, 0.0482, 0.8686], [0.1717, 0.0592, 0.23, 0.3033], [0.7251, 0.5222, 0.2583, 0.6769]]])
w[2] = np.array([0, 0, 0, 0])
model.get_layer('Sep51049').set_weights(w) 
w = model.get_layer('PRe14244').get_weights() 
w[0] = np.array([[[0.8167], [0.008], [0.9521], [0.4612]]])
model.get_layer('PRe14244').set_weights(w) 
w = model.get_layer('Loc32997').get_weights() 
w[0] = np.array([[[0.2918, 0.6907, 0.6821], [0.2095, 0.4501, 0.1754], [0.3988, 0.0849, 0.4421], [0.1218, 0.772, 0.1805], [0.7503, 0.4818, 0.4271], [0.4301, 0.3091, 0.963], [0.8705, 0.4359, 0.9219], [0.3619, 0.9042, 0.0418]]])
w[1] = np.array([[[0, 0, 0]]])
model.get_layer('Loc32997').set_weights(w) 
w = model.get_layer('Bat15431').get_weights() 
w[0] = np.array([0.9227])
w[1] = np.array([0.4631])
w[2] = np.array([0.0838])
w[3] = np.array([0.4623])
model.get_layer('Bat15431').set_weights(w) 
in0Ave55623 = tf.constant([[[0.8969, 0.619], [0.4716, 0.7849]]])
in1Ave55623 = tf.constant([[[0.4486, 0.5681], [0.8547, 0.3197]]])
in0Max2205 = tf.constant([[[[[0.2563, 0.5403], [0.3218, 0.5282]]], [[[0.3421, 0.5067], [0.534, 0.9065]]]]])
in1Max2205 = tf.constant([[[[[0.1046, 0.8157], [0.5099, 0.0566]]], [[[0.2895, 0.7794], [0.1835, 0.5926]]]]])
in0Con9676 = tf.constant([[[[[0.2849], [0.2309], [0.6128], [0.1582], [0.0075]], [[0.1269], [0.5312], [0.2561], [0.2155], [0.5622]], [[0.9506], [0.1291], [0.622], [0.5196], [0.4345]], [[0.0353], [0.7003], [0.3755], [0.7186], [0.511]], [[0.8954], [0.3396], [0.2306], [0.9035], [0.4137]], [[0.5776], [0.349], [0.9263], [0.1732], [0.623]]], [[[0.1044], [0.4485], [0.496], [0.4628], [0.6613]], [[0.776], [0.6457], [0.2508], [0.5829], [0.0128]], [[0.3681], [0.9406], [0.5772], [0.7002], [0.1833]], [[0.261], [0.1508], [0.8239], [0.2914], [0.3627]], [[0.356], [0.4505], [0.6065], [0.1515], [0.6057]], [[0.7115], [0.6139], [0.7961], [0.3524], [0.5851]]]]])
in0Loc32997 = tf.constant([[[[0.7815, 0.8557], [0.7603, 0.9624]], [[0.3311, 0.9345], [0.0441, 0.9432]]]])
in0Con38233 = tf.constant([[[[[0.8561], [0.3595], [0.7832]], [[0.3086], [0.702], [0.2955]], [[0.6737], [0.7771], [0.3142]]], [[[0.0242], [0.7321], [0.744]], [[0.2694], [0.8376], [0.159]], [[0.387], [0.0623], [0.8254]]]]])
in0Sub10864 = tf.constant([[[[[0.7358, 0.0804], [0.5129, 0.7397], [0.0537, 0.8437]], [[0.6868, 0.2014], [0.1439, 0.9093], [0.2468, 0.6612]], [[0.1992, 0.4221], [0.4422, 0.2962], [0.9667, 0.802]]], [[[0.5519, 0.7109], [0.0338, 0.2378], [0.5566, 0.6515]], [[0.9014, 0.3404], [0.7182, 0.3759], [0.5593, 0.6248]], [[0.4689, 0.2219], [0.9359, 0.5886], [0.8615, 0.3453]]]]])
in1Sub10864 = tf.constant([[[[[0.8999, 0.1631], [0.8531, 0.4309], [0.4626, 0.2201]], [[0.8559, 0.4195], [0.4449, 0.6377], [0.3203, 0.9387]], [[0.1585, 0.1504], [0.5921, 0.179], [0.58, 0.8409]]], [[[0.9261, 0.4122], [0.0889, 0.6627], [0.3317, 0.2143]], [[0.0904, 0.8314], [0.876, 0.7272], [0.7414, 0.2652]], [[0.1758, 0.9672], [0.5651, 0.5129], [0.075, 0.2745]]]]])
print (np.array2string(model.predict([in0Ave55623,in1Ave55623,in0Max2205,in1Max2205,in0Con9676,in0Loc32997,in0Con38233,in0Sub10864,in1Sub10864],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Sub4064.png')

LAve55623 = average_layer([[[[0.8969, 0.619], [0.4716, 0.7849]]], [[[0.4486, 0.5681], [0.8547, 0.3197]]]], Ave55623), 
LRes66046 = reshape_layer(Ave55623, [2, 2, 1], Res66046), 
LZer71233 = zero_padding2D_layer(Res66046, 0, 0, 4, 0, Zer71233), 
LMax2205 = maximum_layer([[[[[[0.2563, 0.5403], [0.3218, 0.5282]]], [[[0.3421, 0.5067], [0.534, 0.9065]]]]], [[[[[0.1046, 0.8157], [0.5099, 0.0566]]], [[[0.2895, 0.7794], [0.1835, 0.5926]]]]]], Max2205), 
LRes69196 = reshape_layer(Max2205, [2, 1, 4], Res69196), 
LRes31103 = reshape_layer(Res69196, [2, 4], Res31103), 
LSep51049 = separable_conv1D_layer(Res31103, 2,[[[[0.2802], [0.8948], [0.5298], [0.2831]], [[0.4475], [0.1456], [0.059], [0.0509]]],[[[0.3228, 0.9353, 0.2684, 0.9674], [0.5278, 0.6279, 0.0482, 0.8686], [0.1717, 0.0592, 0.23, 0.3033], [0.7251, 0.5222, 0.2583, 0.6769]]]],[0, 0, 0, 0], 2, false, Sep51049), 
LRes64128 = reshape_layer(Sep51049, [1, 4, 1], Res64128), 
LPRe14244 = prelu_layer(Res64128, [[[0.8167], [0.008], [0.9521], [0.4612]]], PRe14244), 
LZer41036 = zero_padding2D_layer(PRe14244, 1, 0, 2, 0, Zer41036), 
LAve16581 = average_layer([Zer71233,Zer41036], Ave16581), 
LRes76630 = reshape_layer(Ave16581, [2, 6, 1, 1], Res76630), 
LZer39287 = zero_padding3D_layer(Res76630, 0, 0, 0, 0, 4, 0, Zer39287), 
LCon9676 = concatenate_layer([Zer39287,[[[[[0.2849], [0.2309], [0.6128], [0.1582], [0.0075]], [[0.1269], [0.5312], [0.2561], [0.2155], [0.5622]], [[0.9506], [0.1291], [0.622], [0.5196], [0.4345]], [[0.0353], [0.7003], [0.3755], [0.7186], [0.511]], [[0.8954], [0.3396], [0.2306], [0.9035], [0.4137]], [[0.5776], [0.349], [0.9263], [0.1732], [0.623]]], [[[0.1044], [0.4485], [0.496], [0.4628], [0.6613]], [[0.776], [0.6457], [0.2508], [0.5829], [0.0128]], [[0.3681], [0.9406], [0.5772], [0.7002], [0.1833]], [[0.261], [0.1508], [0.8239], [0.2914], [0.3627]], [[0.356], [0.4505], [0.6065], [0.1515], [0.6057]], [[0.7115], [0.6139], [0.7961], [0.3524], [0.5851]]]]]], 4, Con9676), 
LLoc32997 = locally_connected2D_layer([[[[0.7815, 0.8557], [0.7603, 0.9624]], [[0.3311, 0.9345], [0.0441, 0.9432]]]], 2, 2,[[[0.2918, 0.6907, 0.6821], [0.2095, 0.4501, 0.1754], [0.3988, 0.0849, 0.4421], [0.1218, 0.772, 0.1805], [0.7503, 0.4818, 0.4271], [0.4301, 0.3091, 0.963], [0.8705, 0.4359, 0.9219], [0.3619, 0.9042, 0.0418]]],[[[0, 0, 0]]], 1, 1, Loc32997), 
LBat15431 = batch_normalization_layer(Loc32997, 2, 0.33888241516578255, [0.9227], [0.4631], [0.0838], [0.4623], Bat15431), 
LRes55654 = reshape_layer(Bat15431, [1, 1, 3, 1], Res55654), 
LZer24758 = zero_padding3D_layer(Res55654, 1, 0, 2, 0, 0, 0, Zer24758), 
LCon38233 = concatenate_layer([Zer24758,[[[[[0.8561], [0.3595], [0.7832]], [[0.3086], [0.702], [0.2955]], [[0.6737], [0.7771], [0.3142]]], [[[0.0242], [0.7321], [0.744]], [[0.2694], [0.8376], [0.159]], [[0.387], [0.0623], [0.8254]]]]]], 4, Con38233), 
LSub10864 = subtract_layer([[[[[0.7358, 0.0804], [0.5129, 0.7397], [0.0537, 0.8437]], [[0.6868, 0.2014], [0.1439, 0.9093], [0.2468, 0.6612]], [[0.1992, 0.4221], [0.4422, 0.2962], [0.9667, 0.802]]], [[[0.5519, 0.7109], [0.0338, 0.2378], [0.5566, 0.6515]], [[0.9014, 0.3404], [0.7182, 0.3759], [0.5593, 0.6248]], [[0.4689, 0.2219], [0.9359, 0.5886], [0.8615, 0.3453]]]]], [[[[[0.8999, 0.1631], [0.8531, 0.4309], [0.4626, 0.2201]], [[0.8559, 0.4195], [0.4449, 0.6377], [0.3203, 0.9387]], [[0.1585, 0.1504], [0.5921, 0.179], [0.58, 0.8409]]], [[[0.9261, 0.4122], [0.0889, 0.6627], [0.3317, 0.2143]], [[0.0904, 0.8314], [0.876, 0.7272], [0.7414, 0.2652]], [[0.1758, 0.9672], [0.5651, 0.5129], [0.075, 0.2745]]]]], Sub10864), 
LELU54900 = elu_layer(Sub10864, -6.651465782143349, ELU54900), 
LMin82508 = minimum_layer([Con38233,ELU54900], Min82508), 
LZer52960 = zero_padding3D_layer(Min82508, 0, 0, 3, 0, 2, 0, Zer52960), 
LSub4064 = subtract_layer(Con9676,Zer52960, Sub4064), 
exec_layers([LAve55623,LRes66046,LZer71233,LMax2205,LRes69196,LRes31103,LSep51049,LRes64128,LPRe14244,LZer41036,LAve16581,LRes76630,LZer39287,LCon9676,LLoc32997,LBat15431,LRes55654,LZer24758,LCon38233,LSub10864,LELU54900,LMin82508,LZer52960,LSub4064],["Ave55623","Res66046","Zer71233","Max2205","Res69196","Res31103","Sep51049","Res64128","PRe14244","Zer41036","Ave16581","Res76630","Zer39287","Con9676","Loc32997","Bat15431","Res55654","Zer24758","Con38233","Sub10864","ELU54900","Min82508","Zer52960","Sub4064"],Sub4064,"Sub4064")

Actual (Unparsed): [[[[[0.0000000, 0.2849000], [0.0000000, 0.2309000], [0.0000000, 0.6128000], [0.0000000, 0.1582000], [0.0000000, 0.0075000]], [[0.0000000, 0.1269000], [0.0000000, 0.5312000], [0.0000000, 0.2561000], [0.0000000, 0.2155000], [0.0000000, 0.5622000]], [[0.0000000, 0.9506000], [0.0000000, 0.1291000], [0.0000000, 0.6220000], [0.0000000, 0.5196000], [0.0000000, 0.4345000]], [[0.0000000, 0.0353000], [0.0000000, 0.7003000], [0.0000000, -0.1524449], [0.0000000, 0.4098000], [0.0000000, -0.1126000]], [[0.0000000, 0.8954000], [0.0000000, 0.3396000], [0.0000000, -0.0780000], [0.0000000, 0.6319000], [0.3363750, 0.1182000]], [[0.0000000, 0.5776000], [0.0000000, 0.3490000], [0.0000000, 0.6546000], [0.0000000, 0.0560000], [0.2967750, 0.3692258]]], [[[0.0000000, 0.1044000], [0.0000000, 0.4485000], [0.0000000, 0.4960000], [0.0000000, 0.4628000], [0.0000000, 0.6613000]], [[0.0000000, 0.7760000], [0.0000000, 0.6457000], [0.0000000, 0.2508000], [0.0000000, 0.5829000], [0.0000000, 0.0128000]], [[0.0000000, 0.3681000], [0.0000000, 0.9406000], [0.0000000, 0.5772000], [0.0000000, 0.7002000], [0.3557032, 0.1833000]], [[0.0000000, 0.2610000], [0.0000000, 0.1508000], [0.0000000, 0.7997000], [0.0000000, -0.4407000], [0.4299719, -0.0745000]], [[0.0000000, 0.3560000], [0.0000000, 0.4505000], [0.0000000, 0.3371000], [0.0000000, -0.6861000], [0.4420436, 0.4467000]], [[0.0000000, 0.7115000], [0.0000000, 0.6139000], [-0.2931000, 0.4091000], [-0.3708000, 0.2901000], [0.0766830, 0.5143000]]]]]

Expected (Unparsed): [[[[[0,0.2849],[0,0.2309],[0,0.6128],[0,0.1582],[0,0.0075]],[[0,0.1269],[0,0.5312],[0,0.2561],[0,0.2155],[0,0.5622]],[[0,0.9506],[0,0.1291],[0,0.622],[0,0.5196],[0,0.4345]],[[0,0.0353],[0,0.7003],[0,-0.15244483809998938],[0,0.4098],[0,-0.11260000000000003]],[[0,0.8954],[0,0.3396],[0,-0.07799999999999999],[0,0.6319],[0.336375,0.11820000000000003]],[[0,0.5776],[0,0.349],[0,0.6546000000000001],[0,0.055999999999999966],[0.296775,0.36922588787542016]]],[[[0,0.1044],[0,0.4485],[0,0.496],[0,0.4628],[0,0.6613]],[[0,0.776],[0,0.6457],[0,0.2508],[0,0.5829],[0,0.0128]],[[0,0.3681],[0,0.9406],[0,0.5772],[0,0.7002],[0.35570319436950004,0.1833]],[[0,0.261],[0,0.1508],[0,0.7997],[0,-0.4407],[0.42997194756550006,-0.07449999999999996]],[[0,0.356],[0,0.4505],[0,0.33710000000000007],[0,-0.6861],[0.4420436445125,0.4467]],[[0,0.7115],[0,0.6139],[-0.29309999999999997,0.4091],[-0.3707999999999999,0.29009999999999997],[0.07668304390149983,0.5143]]]]]

Actual:   [[[[[0, 0.2849], [0, 0.2309], [0, 0.6128], [0, 0.1582], [0, 0.0075]], [[0, 0.1269], [0, 0.5312], [0, 0.2561], [0, 0.2155], [0, 0.5622]], [[0, 0.9506], [0, 0.1291], [0, 0.622], [0, 0.5196], [0, 0.4345]], [[0, 0.0353], [0, 0.7003], [0, -0.1524], [0, 0.4098], [0, -0.1126]], [[0, 0.8954], [0, 0.3396], [0, -0.078], [0, 0.6319], [0.3364, 0.1182]], [[0, 0.5776], [0, 0.349], [0, 0.6546], [0, 0.056], [0.2968, 0.3693]]], [[[0, 0.1044], [0, 0.4485], [0, 0.496], [0, 0.4628], [0, 0.6613]], [[0, 0.776], [0, 0.6457], [0, 0.2508], [0, 0.5829], [0, 0.0128]], [[0, 0.3681], [0, 0.9406], [0, 0.5772], [0, 0.7002], [0.3558, 0.1833]], [[0, 0.261], [0, 0.1508], [0, 0.7997], [0, -0.4407], [0.43, -0.0745]], [[0, 0.356], [0, 0.4505], [0, 0.3371], [0, -0.6861], [0.4421, 0.4467]], [[0, 0.7115], [0, 0.6139], [-0.2931, 0.4091], [-0.3708, 0.2901], [0.0767, 0.5143]]]]]

Expected: [[[[[0, 0.2849], [0, 0.2309], [0, 0.6128], [0, 0.1582], [0, 0.0075]], [[0, 0.1269], [0, 0.5312], [0, 0.2561], [0, 0.2155], [0, 0.5622]], [[0, 0.9506], [0, 0.1291], [0, 0.622], [0, 0.5196], [0, 0.4345]], [[0, 0.0353], [0, 0.7003], [0, -0.1524], [0, 0.4098], [0, -0.1126]], [[0, 0.8954], [0, 0.3396], [0, -0.0779], [0, 0.6319], [0.3364, 0.1183]], [[0, 0.5776], [0, 0.349], [0, 0.6547], [0, 0.056], [0.2968, 0.3693]]], [[[0, 0.1044], [0, 0.4485], [0, 0.496], [0, 0.4628], [0, 0.6613]], [[0, 0.776], [0, 0.6457], [0, 0.2508], [0, 0.5829], [0, 0.0128]], [[0, 0.3681], [0, 0.9406], [0, 0.5772], [0, 0.7002], [0.3558, 0.1833]], [[0, 0.261], [0, 0.1508], [0, 0.7997], [0, -0.4407], [0.43, -0.0744]], [[0, 0.356], [0, 0.4505], [0, 0.3372], [0, -0.6861], [0.4421, 0.4467]], [[0, 0.7115], [0, 0.6139], [-0.293, 0.4091], [-0.3707, 0.2901], [0.0767, 0.5143]]]]]