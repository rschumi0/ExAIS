import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Cro66642 = tf.keras.layers.Input(shape=([1, 1]))
in0Con48979 = tf.keras.layers.Input(shape=([2]))
in0Sub92859 = tf.keras.layers.Input(shape=([2, 3]))
in1Sub92859 = tf.keras.layers.Input(shape=([2, 3]))
in0Con43785 = tf.keras.layers.Input(shape=([3, 3, 1, 1]))
in0Glo84859 = tf.keras.layers.Input(shape=([1, 2, 1, 1]))
in0Con59691 = tf.keras.layers.Input(shape=([2, 2, 1, 1]))
in0Ave86336 = tf.keras.layers.Input(shape=([2, 2, 1, 2]))
in1Ave86336 = tf.keras.layers.Input(shape=([2, 2, 1, 2]))

Cro66642 = keras.layers.Cropping1D(cropping=((0, 0)), name = 'Cro66642', )(in0Cro66642)
Fla69744 = keras.layers.Flatten(name = 'Fla69744', )(Cro66642)
Con48979 = keras.layers.Concatenate(axis=1, name = 'Con48979', )([Fla69744,in0Con48979])
Sub92859 = keras.layers.Subtract(name = 'Sub92859', )([in0Sub92859,in1Sub92859])
Glo68105 = keras.layers.GlobalMaxPool1D(name = 'Glo68105', )(Sub92859)
Min66466 = keras.layers.Minimum(name = 'Min66466', )([Con48979,Glo68105])
Res39302 = keras.layers.Reshape((3, 1), name = 'Res39302', )(Min66466)
Res67201 = keras.layers.Reshape((3, 1, 1), name = 'Res67201', )(Res39302)
Res62843 = keras.layers.Reshape((3, 1, 1, 1), name = 'Res62843', )(Res67201)
Zer78525 = keras.layers.ZeroPadding3D(padding=((0, 0), (2, 0), (0, 0)), name = 'Zer78525', )(Res62843)
Con43785 = keras.layers.Concatenate(axis=4, name = 'Con43785', )([Zer78525,in0Con43785])
Glo84859 = keras.layers.GlobalMaxPool3D(name = 'Glo84859', )(in0Glo84859)
Res21630 = keras.layers.Reshape((1, 1), name = 'Res21630', )(Glo84859)
Res35987 = keras.layers.Reshape((1, 1, 1), name = 'Res35987', )(Res21630)
Res58984 = keras.layers.Reshape((1, 1, 1, 1), name = 'Res58984', )(Res35987)
Zer802 = keras.layers.ZeroPadding3D(padding=((1, 0), (1, 0), (0, 0)), name = 'Zer802', )(Res58984)
Con59691 = keras.layers.Concatenate(axis=4, name = 'Con59691', )([Zer802,in0Con59691])
Ave86336 = keras.layers.Average(name = 'Ave86336', )([in0Ave86336,in1Ave86336])
Ave12240 = keras.layers.Average(name = 'Ave12240', )([Con59691,Ave86336])
Zer3153 = keras.layers.ZeroPadding3D(padding=((1, 0), (1, 0), (0, 0)), name = 'Zer3153', )(Ave12240)
Max12509 = keras.layers.Maximum(name = 'Max12509', )([Con43785,Zer3153])
model = tf.keras.models.Model(inputs=[in0Cro66642,in0Con48979,in0Sub92859,in1Sub92859,in0Con43785,in0Glo84859,in0Con59691,in0Ave86336,in1Ave86336], outputs=Max12509)
in0Cro66642 = tf.constant([[[1.0829]]])
in0Con48979 = tf.constant([[0.7019, 0.1997]])
in0Sub92859 = tf.constant([[[0.9539, 0.8101, 0.3082], [0.9405, 0.0499, 0.6221]]])
in1Sub92859 = tf.constant([[[0.7991, 0.9454, 0.8296], [0.9552, 0.5389, 0.2881]]])
in0Con43785 = tf.constant([[[[[0.6618]], [[0.5964]], [[0.7065]]], [[[0.5995]], [[0.8684]], [[0.1998]]], [[[0.9472]], [[0.8826]], [[0.8717]]]]])
in0Glo84859 = tf.constant([[[[[1.0349]], [[1.7556]]]]])
in0Con59691 = tf.constant([[[[[0.5401]], [[0.5336]]], [[[0.159]], [[0.9237]]]]])
in0Ave86336 = tf.constant([[[[[0.1313, 0.4341]], [[0.116, 0.691]]], [[[0.4711, 0.3808]], [[0.2801, 0.1932]]]]])
in1Ave86336 = tf.constant([[[[[0.1937, 0.805]], [[0.4493, 0.2305]]], [[[0.7921, 0.2218]], [[0.0405, 0.0513]]]]])
print (np.array2string(model.predict([in0Cro66642,in0Con48979,in0Sub92859,in1Sub92859,in0Con43785,in0Glo84859,in0Con59691,in0Ave86336,in1Ave86336],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Max12509.png')

LCro66642 = cropping1D_layer([[[1.0829]]], 0, 0, Cro66642), 
LFla69744 = flatten_layer(Cro66642, Fla69744), 
LCon48979 = concatenate_layer([Fla69744,[[0.7019, 0.1997]]], 1, Con48979), 
LSub92859 = subtract_layer([[[0.9539, 0.8101, 0.3082], [0.9405, 0.0499, 0.6221]]], [[[0.7991, 0.9454, 0.8296], [0.9552, 0.5389, 0.2881]]], Sub92859), 
LGlo68105 = global_max_pool1D_layer(Sub92859, Glo68105), 
LMin66466 = minimum_layer([Con48979,Glo68105], Min66466), 
LRes39302 = reshape_layer(Min66466, [3, 1], Res39302), 
LRes67201 = reshape_layer(Res39302, [3, 1, 1], Res67201), 
LRes62843 = reshape_layer(Res67201, [3, 1, 1, 1], Res62843), 
LZer78525 = zero_padding3D_layer(Res62843, 0, 0, 2, 0, 0, 0, Zer78525), 
LCon43785 = concatenate_layer([Zer78525,[[[[[0.6618]], [[0.5964]], [[0.7065]]], [[[0.5995]], [[0.8684]], [[0.1998]]], [[[0.9472]], [[0.8826]], [[0.8717]]]]]], 4, Con43785), 
LGlo84859 = global_max_pool3D_layer([[[[[1.0349]], [[1.7556]]]]], Glo84859), 
LRes21630 = reshape_layer(Glo84859, [1, 1], Res21630), 
LRes35987 = reshape_layer(Res21630, [1, 1, 1], Res35987), 
LRes58984 = reshape_layer(Res35987, [1, 1, 1, 1], Res58984), 
LZer802 = zero_padding3D_layer(Res58984, 1, 0, 1, 0, 0, 0, Zer802), 
LCon59691 = concatenate_layer([Zer802,[[[[[0.5401]], [[0.5336]]], [[[0.159]], [[0.9237]]]]]], 4, Con59691), 
LAve86336 = average_layer([[[[[[0.1313, 0.4341]], [[0.116, 0.691]]], [[[0.4711, 0.3808]], [[0.2801, 0.1932]]]]], [[[[[0.1937, 0.805]], [[0.4493, 0.2305]]], [[[0.7921, 0.2218]], [[0.0405, 0.0513]]]]]], Ave86336), 
LAve12240 = average_layer([Con59691,Ave86336], Ave12240), 
LZer3153 = zero_padding3D_layer(Ave12240, 1, 0, 1, 0, 0, 0, Zer3153), 
LMax12509 = maximum_layer([Con43785,Zer3153], Max12509), 
exec_layers([LCro66642,LFla69744,LCon48979,LSub92859,LGlo68105,LMin66466,LRes39302,LRes67201,LRes62843,LZer78525,LCon43785,LGlo84859,LRes21630,LRes35987,LRes58984,LZer802,LCon59691,LAve86336,LAve12240,LZer3153,LMax12509],["Cro66642","Fla69744","Con48979","Sub92859","Glo68105","Min66466","Res39302","Res67201","Res62843","Zer78525","Con43785","Glo84859","Res21630","Res35987","Res58984","Zer802","Con59691","Ave86336","Ave12240","Zer3153","Max12509"],Max12509,"Max12509")

Actual (Unparsed): [[[[[0.0000000, 0.6618000]], [[0.0000000, 0.5964000]], [[0.1548000, 0.7065000]]], [[[0.0000000, 0.5995000]], [[0.0812500, 0.8684000]], [[0.1413250, 0.4971750]]], [[[0.0000000, 0.9472000]], [[0.3158000, 0.8826000]], [[0.9579500, 0.8717000]]]]]

Expected (Unparsed): [[[[[0,0.6618]],[[0,0.5964]],[[0.15479999999999994,0.7065]]],[[[0,0.5995]],[[0.08125,0.8684]],[[0.141325,0.497175]]],[[[0,0.9472]],[[0.3158,0.8826]],[[0.9579500000000001,0.8717]]]]]

Actual:   [[[[[0, 0.6618]], [[0, 0.5964]], [[0.1548, 0.7065]]], [[[0, 0.5995]], [[0.0813, 0.8684]], [[0.1414, 0.4972]]], [[[0, 0.9472]], [[0.3158, 0.8826]], [[0.958, 0.8717]]]]]

Expected: [[[[[0, 0.6618]], [[0, 0.5964]], [[0.1548, 0.7065]]], [[[0, 0.5995]], [[0.0813, 0.8684]], [[0.1414, 0.4972]]], [[[0, 0.9472]], [[0.3158, 0.8826]], [[0.958, 0.8717]]]]]