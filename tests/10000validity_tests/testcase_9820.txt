import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Ave44941 = tf.keras.layers.Input(shape=([1, 2, 2]))
in1Ave44941 = tf.keras.layers.Input(shape=([1, 2, 2]))
in0Mul32250 = tf.keras.layers.Input(shape=([1, 1, 1, 1]))
in1Mul32250 = tf.keras.layers.Input(shape=([1, 1, 1, 1]))
in0Cro89051 = tf.keras.layers.Input(shape=([3, 1]))
in0Con11180 = tf.keras.layers.Input(shape=([1, 2, 1, 1]))
in0Cro77411 = tf.keras.layers.Input(shape=([2, 3, 4, 2]))
in0Con84978 = tf.keras.layers.Input(shape=([1, 4, 1]))
in0Max98166 = tf.keras.layers.Input(shape=([1, 1, 1, 2]))
in1Max98166 = tf.keras.layers.Input(shape=([1, 1, 1, 2]))
in0Con60682 = tf.keras.layers.Input(shape=([3, 1]))
in0Dot54839 = tf.keras.layers.Input(shape=([3, 3]))
in1Dot54839 = tf.keras.layers.Input(shape=([3, 3]))

Ave44941 = keras.layers.Average(name = 'Ave44941', )([in0Ave44941,in1Ave44941])
Res84462 = keras.layers.Reshape((1, 2, 2, 1), name = 'Res84462', )(Ave44941)
Mul32250 = keras.layers.Multiply(name = 'Mul32250', )([in0Mul32250,in1Mul32250])
Zer47409 = keras.layers.ZeroPadding3D(padding=((0, 0), (1, 0), (1, 0)), name = 'Zer47409', )(Mul32250)
Sub64160 = keras.layers.Subtract(name = 'Sub64160', )([Res84462,Zer47409])
Res3956 = keras.layers.Reshape((1, 2, 2), name = 'Res3956', )(Sub64160)
Cro89051 = keras.layers.Cropping1D(cropping=((0, 2)), name = 'Cro89051', )(in0Cro89051)
Res50410 = keras.layers.Reshape((1, 1, 1), name = 'Res50410', )(Cro89051)
Res92799 = keras.layers.Reshape((1, 1, 1, 1), name = 'Res92799', )(Res50410)
Zer47808 = keras.layers.ZeroPadding3D(padding=((0, 0), (1, 0), (0, 0)), name = 'Zer47808', )(Res92799)
Con11180 = keras.layers.Concatenate(axis=4, name = 'Con11180', )([Zer47808,in0Con11180])
Cro77411 = keras.layers.Cropping3D(cropping=((1, 0), (1, 0), (3, 0)), name = 'Cro77411', )(in0Cro77411)
Max64519 = keras.layers.Maximum(name = 'Max64519', )([Con11180,Cro77411])
Res69481 = keras.layers.Reshape((1, 2, 2), name = 'Res69481', )(Max64519)
Con85780 = keras.layers.Conv2DTranspose(2, (1, 1),strides=(1, 1), padding='same', name = 'Con85780', )(Res69481)
Min72451 = keras.layers.Minimum(name = 'Min72451', )([Res3956,Con85780])
Res98113 = keras.layers.Reshape((1, 4), name = 'Res98113', )(Min72451)
Sep42211 = keras.layers.SeparableConv1D(4, (1),strides=(1), padding='same', name = 'Sep42211', )(Res98113)
Res89857 = keras.layers.Reshape((1, 4, 1), name = 'Res89857', )(Sep42211)
Con84978 = keras.layers.Concatenate(axis=3, name = 'Con84978', )([Res89857,in0Con84978])
Max98166 = keras.layers.Maximum(name = 'Max98166', )([in0Max98166,in1Max98166])
Res81279 = keras.layers.Reshape((1, 1, 2), name = 'Res81279', )(Max98166)
Res17717 = keras.layers.Reshape((1, 2), name = 'Res17717', )(Res81279)
Zer84795 = keras.layers.ZeroPadding1D(padding=((2, 0)), name = 'Zer84795', )(Res17717)
Con60682 = keras.layers.Concatenate(axis=2, name = 'Con60682', )([Zer84795,in0Con60682])
Dot54839 = keras.layers.Dot(axes=(2, 2), name = 'Dot54839', )([in0Dot54839,in1Dot54839])
Ave28319 = keras.layers.Average(name = 'Ave28319', )([Con60682,Dot54839])
Res69511 = keras.layers.Reshape((3, 3, 1), name = 'Res69511', )(Ave28319)
Loc59403 = keras.layers.LocallyConnected2D(2, (1, 2),strides=(5, 11), name = 'Loc59403', )(Res69511)
Dep11089 = keras.layers.DepthwiseConv2D((1, 2),strides=(1, 1), padding='same', name = 'Dep11089', )(Loc59403)
Zer31406 = keras.layers.ZeroPadding2D(padding=((0, 0), (3, 0)), name = 'Zer31406', )(Dep11089)
Sub39116 = keras.layers.Subtract(name = 'Sub39116', )([Con84978,Zer31406])
model = tf.keras.models.Model(inputs=[in0Ave44941,in1Ave44941,in0Mul32250,in1Mul32250,in0Cro89051,in0Con11180,in0Cro77411,in0Con84978,in0Max98166,in1Max98166,in0Con60682,in0Dot54839,in1Dot54839], outputs=Sub39116)
w = model.get_layer('Con85780').get_weights() 
w[0] = np.array([[[[0.0119, 0.1553], [0.6832, 0.4185]]]])
w[1] = np.array([0, 0])
model.get_layer('Con85780').set_weights(w) 
w = model.get_layer('Sep42211').get_weights() 
w[0] = np.array([[[0.7946], [0.484], [0.3981], [0.057]]])
w[1] = np.array([[[0.5186, 0.377, 0.9425, 0.202], [0.5917, 0.3935, 0.1647, 0.9984], [0.7664, 0.5293, 0.8689, 0.7629], [0.0161, 0.2977, 0.339, 0.4419]]])
w[2] = np.array([0, 0, 0, 0])
model.get_layer('Sep42211').set_weights(w) 
w = model.get_layer('Loc59403').get_weights() 
w[0] = np.array([[[0.7943, 0.7807], [0.4338, 0.055]]])
w[1] = np.array([[[0, 0]]])
model.get_layer('Loc59403').set_weights(w) 
w = model.get_layer('Dep11089').get_weights() 
w[0] = np.array([[[[0.496], [0.5839]], [[0.7215], [0.5403]]]])
w[1] = np.array([0, 0])
model.get_layer('Dep11089').set_weights(w) 
in0Ave44941 = tf.constant([[[[0.2231, 0.4961], [0.3806, 0.2828]]]])
in1Ave44941 = tf.constant([[[[0.9945, 0.6431], [0.112, 0.8525]]]])
in0Mul32250 = tf.constant([[[[[0.8095]]]]])
in1Mul32250 = tf.constant([[[[[0.5283]]]]])
in0Cro89051 = tf.constant([[[1.4157], [1.6592], [1.1367]]])
in0Con11180 = tf.constant([[[[[0.7206]], [[0.4028]]]]])
in0Cro77411 = tf.constant([[[[[1.295, 1.1105], [1.5433, 1.1666], [1.8715, 1.1357], [1.2426, 1.4481]], [[1.5684, 1.0215], [1.2243, 1.3596], [1.7127, 1.1787], [1.9046, 1.3299]], [[1.9269, 1.8818], [1.6562, 1.8364], [1.7565, 1.4438], [1.2345, 1.5966]]], [[[1.9603, 1.4906], [1.5094, 1.045], [1.9312, 1.4282], [1.6822, 1.1399]], [[1.3956, 1.1695], [1.4866, 1.7788], [1.7505, 1.9343], [1.2257, 1.6211]], [[1.1399, 1.4725], [1.8806, 1.9112], [1.6494, 1.3697], [1.9431, 1.9756]]]]])
in0Con84978 = tf.constant([[[[0.4787], [0.5967], [0.8273], [0.5072]]]])
in0Max98166 = tf.constant([[[[[0.7997, 0.194]]]]])
in1Max98166 = tf.constant([[[[[0.0672, 0.4291]]]]])
in0Con60682 = tf.constant([[[0.2481], [0.4201], [0.1243]]])
in0Dot54839 = tf.constant([[[0.8597, 0.1129, 0.1169], [0.7647, 0.3667, 0.2729], [0.6907, 0.9253, 0.6406]]])
in1Dot54839 = tf.constant([[[0.6668, 0.7501, 0.6612], [0.0105, 0.4387, 0.5431], [0.9597, 0.9326, 0.573]]])
print (np.array2string(model.predict([in0Ave44941,in1Ave44941,in0Mul32250,in1Mul32250,in0Cro89051,in0Con11180,in0Cro77411,in0Con84978,in0Max98166,in1Max98166,in0Con60682,in0Dot54839,in1Dot54839],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Sub39116.png')

LAve44941 = average_layer([[[[[0.2231, 0.4961], [0.3806, 0.2828]]]], [[[[0.9945, 0.6431], [0.112, 0.8525]]]]], Ave44941), 
LRes84462 = reshape_layer(Ave44941, [1, 2, 2, 1], Res84462), 
LMul32250 = multiply_layer([[[[[[0.8095]]]]], [[[[[0.5283]]]]]], Mul32250), 
LZer47409 = zero_padding3D_layer(Mul32250, 0, 0, 1, 0, 1, 0, Zer47409), 
LSub64160 = subtract_layer(Res84462,Zer47409, Sub64160), 
LRes3956 = reshape_layer(Sub64160, [1, 2, 2], Res3956), 
LCro89051 = cropping1D_layer([[[1.4157], [1.6592], [1.1367]]], 0, 2, Cro89051), 
LRes50410 = reshape_layer(Cro89051, [1, 1, 1], Res50410), 
LRes92799 = reshape_layer(Res50410, [1, 1, 1, 1], Res92799), 
LZer47808 = zero_padding3D_layer(Res92799, 0, 0, 1, 0, 0, 0, Zer47808), 
LCon11180 = concatenate_layer([Zer47808,[[[[[0.7206]], [[0.4028]]]]]], 4, Con11180), 
LCro77411 = cropping3D_layer([[[[[1.295, 1.1105], [1.5433, 1.1666], [1.8715, 1.1357], [1.2426, 1.4481]], [[1.5684, 1.0215], [1.2243, 1.3596], [1.7127, 1.1787], [1.9046, 1.3299]], [[1.9269, 1.8818], [1.6562, 1.8364], [1.7565, 1.4438], [1.2345, 1.5966]]], [[[1.9603, 1.4906], [1.5094, 1.045], [1.9312, 1.4282], [1.6822, 1.1399]], [[1.3956, 1.1695], [1.4866, 1.7788], [1.7505, 1.9343], [1.2257, 1.6211]], [[1.1399, 1.4725], [1.8806, 1.9112], [1.6494, 1.3697], [1.9431, 1.9756]]]]], 1, 0, 1, 0, 3, 0, Cro77411), 
LMax64519 = maximum_layer([Con11180,Cro77411], Max64519), 
LRes69481 = reshape_layer(Max64519, [1, 2, 2], Res69481), 
LCon85780 = conv2D_transpose_layer(Res69481, 1, 1,[[[[0.0119, 0.1553], [0.6832, 0.4185]]]],[0, 0], 1, 1, true, Con85780), 
LMin72451 = minimum_layer([Res3956,Con85780], Min72451), 
LRes98113 = reshape_layer(Min72451, [1, 4], Res98113), 
LSep42211 = separable_conv1D_layer(Res98113, 1,[[[[0.7946], [0.484], [0.3981], [0.057]]],[[[0.5186, 0.377, 0.9425, 0.202], [0.5917, 0.3935, 0.1647, 0.9984], [0.7664, 0.5293, 0.8689, 0.7629], [0.0161, 0.2977, 0.339, 0.4419]]]],[0, 0, 0, 0], 1, true, Sep42211), 
LRes89857 = reshape_layer(Sep42211, [1, 4, 1], Res89857), 
LCon84978 = concatenate_layer([Res89857,[[[[0.4787], [0.5967], [0.8273], [0.5072]]]]], 3, Con84978), 
LMax98166 = maximum_layer([[[[[[0.7997, 0.194]]]]], [[[[[0.0672, 0.4291]]]]]], Max98166), 
LRes81279 = reshape_layer(Max98166, [1, 1, 2], Res81279), 
LRes17717 = reshape_layer(Res81279, [1, 2], Res17717), 
LZer84795 = zero_padding1D_layer(Res17717, 2, 0, Zer84795), 
LCon60682 = concatenate_layer([Zer84795,[[[0.2481], [0.4201], [0.1243]]]], 2, Con60682), 
LDot54839 = dot_layer([[[0.8597, 0.1129, 0.1169], [0.7647, 0.3667, 0.2729], [0.6907, 0.9253, 0.6406]]], [[[0.6668, 0.7501, 0.6612], [0.0105, 0.4387, 0.5431], [0.9597, 0.9326, 0.573]]], 2, 2, Dot54839), 
LAve28319 = average_layer([Con60682,Dot54839], Ave28319), 
LRes69511 = reshape_layer(Ave28319, [3, 3, 1], Res69511), 
LLoc59403 = locally_connected2D_layer(Res69511, 1, 2,[[[0.7943, 0.7807], [0.4338, 0.055]]],[[[0, 0]]], 5, 11, Loc59403), 
LDep11089 = depthwise_conv2D_layer(Loc59403, 1, 2,[[[[0.496], [0.5839]], [[0.7215], [0.5403]]]],[0, 0], 1, 1, true, Dep11089), 
LZer31406 = zero_padding2D_layer(Dep11089, 0, 0, 3, 0, Zer31406), 
LSub39116 = subtract_layer(Con84978,Zer31406, Sub39116), 
exec_layers([LAve44941,LRes84462,LMul32250,LZer47409,LSub64160,LRes3956,LCro89051,LRes50410,LRes92799,LZer47808,LCon11180,LCro77411,LMax64519,LRes69481,LCon85780,LMin72451,LRes98113,LSep42211,LRes89857,LCon84978,LMax98166,LRes81279,LRes17717,LZer84795,LCon60682,LDot54839,LAve28319,LRes69511,LLoc59403,LDep11089,LZer31406,LSub39116],["Ave44941","Res84462","Mul32250","Zer47409","Sub64160","Res3956","Cro89051","Res50410","Res92799","Zer47808","Con11180","Cro77411","Max64519","Res69481","Con85780","Min72451","Res98113","Sep42211","Res89857","Con84978","Max98166","Res81279","Res17717","Zer84795","Con60682","Dot54839","Ave28319","Res69511","Loc59403","Dep11089","Zer31406","Sub39116"],Sub39116,"Sub39116")

Actual (Unparsed): [[[[0.3481536, 0.4787000], [0.2425438, 0.5967000], [0.3327748, 0.8273000], [0.2383659, 0.3376631]]]]

Expected (Unparsed): [[[[0.3481535546923846,0.4787],[0.242543759573007,0.5967],[0.33277482261038,0.8273],[0.23836592352169694,0.3376630703754291]]]]

Actual:   [[[[0.3482, 0.4787], [0.2426, 0.5967], [0.3328, 0.8273], [0.2384, 0.3377]]]]

Expected: [[[[0.3482, 0.4787], [0.2426, 0.5967], [0.3328, 0.8273], [0.2384, 0.3377]]]]