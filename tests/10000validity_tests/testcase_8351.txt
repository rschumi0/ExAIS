import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Sub27762 = tf.keras.layers.Input(shape=([3, 3]))
in1Sub27762 = tf.keras.layers.Input(shape=([3, 3]))

Sub27762 = keras.layers.Subtract(name = 'Sub27762', )([in0Sub27762,in1Sub27762])
Lea26464 = keras.layers.LeakyReLU(alpha=6.94439263208553, name = 'Lea26464', )(Sub27762)
model = tf.keras.models.Model(inputs=[in0Sub27762,in1Sub27762], outputs=Lea26464)
in0Sub27762 = tf.constant([[[0.428, 0.9107, 0.9809], [0.0093, 0.9034, 0.8707], [0.6976, 0.4149, 0.0386]]])
in1Sub27762 = tf.constant([[[0.8763, 0.5571, 0.1128], [0.2952, 0.2354, 0.2348], [0.7785, 0.1846, 0.151]]])
print (np.array2string(model.predict([in0Sub27762,in1Sub27762],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Lea26464.png')

LSub27762 = subtract_layer([[[0.428, 0.9107, 0.9809], [0.0093, 0.9034, 0.8707], [0.6976, 0.4149, 0.0386]]], [[[0.8763, 0.5571, 0.1128], [0.2952, 0.2354, 0.2348], [0.7785, 0.1846, 0.151]]], Sub27762), 
LLea26464 = leaky_relu_layer(Sub27762, 6.94439263208553, Lea26464), 
exec_layers([LSub27762,LLea26464],["Sub27762","Lea26464"],Lea26464,"Lea26464")

Actual (Unparsed): [[[-3.1131711, 0.3536000, 0.8681000], [-1.9854018, 0.6680000, 0.6359000], [-0.5618015, 0.2303000, -0.7805497]]]

Expected (Unparsed): [[[-3.113171216963943,0.3535999999999999,0.8681],[-1.9854018535132534,0.6679999999999999,0.6359],[-0.5618013639357192,0.2303,-0.7805497318464136]]]

Actual:   [[[-3.1131, 0.3536, 0.8681], [-1.9854, 0.668, 0.6359], [-0.5618, 0.2303, -0.7805]]]

Expected: [[[-3.1131, 0.3536, 0.8681], [-1.9854, 0.668, 0.6359], [-0.5618, 0.2303, -0.7805]]]