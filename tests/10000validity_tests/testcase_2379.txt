import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Dot37204 = tf.keras.layers.Input(shape=([2, 2]))
in1Dot37204 = tf.keras.layers.Input(shape=([2, 2]))

Dot37204 = keras.layers.Dot(axes=(2, 1), name = 'Dot37204', )([in0Dot37204,in1Dot37204])
Res85913 = keras.layers.Reshape((2, 2, 1), name = 'Res85913', )(Dot37204)
Zer98212 = keras.layers.ZeroPadding2D(padding=((1, 1), (1, 1)), name = 'Zer98212', )(Res85913)
Res61125 = keras.layers.Reshape((4, 4, 1, 1), name = 'Res61125', )(Zer98212)
Glo41965 = keras.layers.GlobalAveragePooling3D(name = 'Glo41965', )(Res61125)
model = tf.keras.models.Model(inputs=[in0Dot37204,in1Dot37204], outputs=Glo41965)
in0Dot37204 = tf.constant([[[0.3627, 0.1213], [0.9803, 0.1216]]])
in1Dot37204 = tf.constant([[[0.7506, 0.2218], [0.9645, 0.7491]]])
print (np.array2string(model.predict([in0Dot37204,in1Dot37204],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Glo41965.png')

LDot37204 = dot_layer([[[0.3627, 0.1213], [0.9803, 0.1216]]], [[[0.7506, 0.2218], [0.9645, 0.7491]]], 2, 1, Dot37204), 
LRes85913 = reshape_layer(Dot37204, [2, 2, 1], Res85913), 
LZer98212 = zero_padding2D_layer(Res85913, 1, 1, 1, 1, Zer98212), 
LRes61125 = reshape_layer(Zer98212, [4, 4, 1, 1], Res61125), 
LGlo41965 = global_average_pooling3D_layer(Res61125, Glo41965), 
exec_layers([LDot37204,LRes85913,LZer98212,LRes61125,LGlo41965],["Dot37204","Res85913","Zer98212","Res61125","Glo41965"],Glo41965,"Glo41965")

Actual (Unparsed): [[0.1076354]]

Expected (Unparsed): [[0.10763541499999998]]

Actual:   [[0.1077]]

Expected: [[0.1077]]