import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Max66383 = tf.keras.layers.Input(shape=([2, 1, 1]))
in1Max66383 = tf.keras.layers.Input(shape=([2, 1, 1]))

Max66383 = keras.layers.Maximum(name = 'Max66383', )([in0Max66383,in1Max66383])
Bat35314 = keras.layers.BatchNormalization(axis=1, epsilon=0.19423921751451279,  name = 'Bat35314', )(Max66383)
Con61889 = keras.layers.Conv2DTranspose(4, (2, 1),strides=(1, 1), padding='valid', name = 'Con61889', )(Bat35314)
model = tf.keras.models.Model(inputs=[in0Max66383,in1Max66383], outputs=Con61889)
w = model.get_layer('Bat35314').get_weights() 
w[0] = np.array([0.5889, 0.8817])
w[1] = np.array([0.5946, 0.9036])
w[2] = np.array([0.7787, 0.124])
w[3] = np.array([0.3323, 0.8974])
model.get_layer('Bat35314').set_weights(w) 
w = model.get_layer('Con61889').get_weights() 
w[0] = np.array([[[[0.2909], [0.6593], [0.8135], [0.2648]]], [[[0.8516], [0.0438], [0.4889], [0.6286]]]])
w[1] = np.array([0, 0, 0, 0])
model.get_layer('Con61889').set_weights(w) 
in0Max66383 = tf.constant([[[[0.553]], [[0.9045]]]])
in1Max66383 = tf.constant([[[[0.062]], [[0.6221]]]])
print (np.array2string(model.predict([in0Max66383,in1Max66383],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Con61889.png')

LMax66383 = maximum_layer([[[[[0.553]], [[0.9045]]]], [[[[0.062]], [[0.6221]]]]], Max66383), 
LBat35314 = batch_normalization_layer(Max66383, 1, 0.19423921751451279, [0.5889, 0.8817], [0.5946, 0.9036], [0.7787, 0.124], [0.3323, 0.8974], Bat35314), 
LCon61889 = conv2D_transpose_layer(Bat35314, 2, 1,[[[[0.2909], [0.6593], [0.8135], [0.2648]]], [[[0.8516], [0.0438], [0.4889], [0.6286]]]],[0, 0, 0, 0], 1, 1, false, Con61889), 
exec_layers([LMax66383,LBat35314,LCon61889],["Max66383","Bat35314","Con61889"],Con61889,"Con61889")

Actual (Unparsed): [[[[0.1196846, 0.2712548, 0.3346971, 0.1089463]], [[0.8048308, 1.0480115, 1.4720372, 0.6723076]], [[1.3304114, 0.0684265, 0.7637836, 0.9820299]]]]

Expected (Unparsed): [[[[0.11968456909568886,0.27125485185557807,0.3346971363332516,0.10894628359071298]],[[0.8048308634081586,1.048011483434788,1.4720371671090486,0.6723075890621493]],[[1.330411437833495,0.0684265159430567,0.7637836448529776,0.9820298612284347]]]]

Actual:   [[[[0.1197, 0.2713, 0.3347, 0.109]], [[0.8049, 1.0481, 1.4721, 0.6724]], [[1.3305, 0.0685, 0.7638, 0.9821]]]]

Expected: [[[[0.1197, 0.2713, 0.3347, 0.109]], [[0.8049, 1.0481, 1.4721, 0.6724]], [[1.3305, 0.0685, 0.7638, 0.9821]]]]