import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Glo39267 = tf.keras.layers.Input(shape=([1, 2, 2]))
in0Con80596 = tf.keras.layers.Input(shape=([5]))
in0Up_17794 = tf.keras.layers.Input(shape=([4, 2, 2, 2]))

Glo39267 = keras.layers.GlobalMaxPool2D(name = 'Glo39267', )(in0Glo39267)
Res66931 = keras.layers.Reshape((2, 1), name = 'Res66931', )(Glo39267)
Max94717 = keras.layers.MaxPool1D(pool_size=(2), name = 'Max94717', )(Res66931)
Den23314 = keras.layers.Dense(3,name = 'Den23314', )(Max94717)
Fla40399 = keras.layers.Flatten(name = 'Fla40399', )(Den23314)
Con80596 = keras.layers.Concatenate(axis=1, name = 'Con80596', )([Fla40399,in0Con80596])
Up_17794 = keras.layers.UpSampling3D(size=(2, 1, 2), name = 'Up_17794', )(in0Up_17794)
Res16422 = keras.layers.Reshape((8, 2, 8), name = 'Res16422', )(Up_17794)
Ave68299 = keras.layers.AveragePooling2D(pool_size=(3, 1), strides=(3, 1), padding='valid', name = 'Ave68299', )(Res16422)
Glo46333 = keras.layers.GlobalAveragePooling2D(name = 'Glo46333', )(Ave68299)
Min32608 = keras.layers.Minimum(name = 'Min32608', )([Con80596,Glo46333])
model = tf.keras.models.Model(inputs=[in0Glo39267,in0Con80596,in0Up_17794], outputs=Min32608)
w = model.get_layer('Den23314').get_weights() 
w[0] = np.array([[0.8312, 0.7033, 0.8229]])
w[1] = np.array([0.29, 0.8264, 0.854])
model.get_layer('Den23314').set_weights(w) 
in0Glo39267 = tf.constant([[[[1.9094, 1.1591], [1.9045, 1.9474]]]])
in0Con80596 = tf.constant([[0.875, 0.3165, 0.9418, 0.0437, 0.4581]])
in0Up_17794 = tf.constant([[[[[1.2445, 1.1689], [1.1276, 1.4589]], [[1.3238, 1.4221], [1.6253, 1.126]]], [[[1.1438, 1.9379], [1.9053, 1.1385]], [[1.5837, 1.2544], [1.7263, 1.9013]]], [[[1.1253, 1.0327], [1.0599, 1.2155]], [[1.5523, 1.9887], [1.9303, 1.5193]]], [[[1.3578, 1.8962], [1.369, 1.1687]], [[1.2125, 1.0436], [1.1849, 1.3299]]]]])
print (np.array2string(model.predict([in0Glo39267,in0Con80596,in0Up_17794],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Min32608.png')

LGlo39267 = global_max_pool2D_layer([[[[1.9094, 1.1591], [1.9045, 1.9474]]]], Glo39267), 
LRes66931 = reshape_layer(Glo39267, [2, 1], Res66931), 
LMax94717 = max_pool1D_layer(Res66931, 2, Max94717), 
LDen23314 = dense_layer(Max94717, [[0.8312, 0.7033, 0.8229]],[0.29, 0.8264, 0.854], Den23314), 
LFla40399 = flatten_layer(Den23314, Fla40399), 
LCon80596 = concatenate_layer([Fla40399,[[0.875, 0.3165, 0.9418, 0.0437, 0.4581]]], 1, Con80596), 
LUp_17794 = up_sampling3D_layer([[[[[1.2445, 1.1689], [1.1276, 1.4589]], [[1.3238, 1.4221], [1.6253, 1.126]]], [[[1.1438, 1.9379], [1.9053, 1.1385]], [[1.5837, 1.2544], [1.7263, 1.9013]]], [[[1.1253, 1.0327], [1.0599, 1.2155]], [[1.5523, 1.9887], [1.9303, 1.5193]]], [[[1.3578, 1.8962], [1.369, 1.1687]], [[1.2125, 1.0436], [1.1849, 1.3299]]]]], 2, 1, 2, Up_17794), 
LRes16422 = reshape_layer(Up_17794, [8, 2, 8], Res16422), 
LAve68299 = average_pooling2D_layer(Res16422, 3, 1, 3, 1, false, Ave68299), 
LGlo46333 = global_average_pooling2D_layer(Ave68299, Glo46333), 
LMin32608 = minimum_layer([Con80596,Glo46333], Min32608), 
exec_layers([LGlo39267,LRes66931,LMax94717,LDen23314,LFla40399,LCon80596,LUp_17794,LRes16422,LAve68299,LGlo46333,LMin32608],["Glo39267","Res66931","Max94717","Den23314","Fla40399","Con80596","Up_17794","Res16422","Ave68299","Glo46333","Min32608"],Min32608,"Min32608")

Actual (Unparsed): [[1.3289000, 1.4674500, 1.3289000, 0.8750000, 0.3165000, 0.9418000, 0.0437000, 0.4581000]]

Expected (Unparsed): [[1.3289,1.4674500000000001,1.3289,0.875,0.3165,0.9418,0.0437,0.4581]]

Actual:   [[1.3289, 1.4675, 1.3289, 0.875, 0.3165, 0.9418, 0.0437, 0.4581]]

Expected: [[1.3289, 1.4675, 1.3289, 0.875, 0.3165, 0.9418, 0.0437, 0.4581]]