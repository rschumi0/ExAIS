import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Cro63306 = tf.keras.layers.Input(shape=([2, 3, 4]))

Cro63306 = keras.layers.Cropping2D(cropping=((1, 0), (0, 0)), name = 'Cro63306', )(in0Cro63306)
Glo40658 = keras.layers.GlobalAveragePooling2D(name = 'Glo40658', )(Cro63306)
Bat9907 = keras.layers.BatchNormalization(axis=1, epsilon=0.9700714958469496,  name = 'Bat9907', )(Glo40658)
Res7972 = keras.layers.Reshape((4, 1), name = 'Res7972', )(Bat9907)
Glo177 = keras.layers.GlobalMaxPool1D(name = 'Glo177', )(Res7972)
Res60122 = keras.layers.Reshape((1, 1), name = 'Res60122', )(Glo177)
Res81751 = keras.layers.Reshape((1, 1, 1), name = 'Res81751', )(Res60122)
Res49377 = keras.layers.Reshape((1, 1, 1, 1), name = 'Res49377', )(Res81751)
Con27170 = keras.layers.Conv3D(4, (1, 1, 1),strides=(1, 1, 1), padding='same', dilation_rate=(1, 1, 1), name = 'Con27170', )(Res49377)
model = tf.keras.models.Model(inputs=[in0Cro63306], outputs=Con27170)
w = model.get_layer('Bat9907').get_weights() 
w[0] = np.array([0.2383, 0.1293, 0.7306, 0.4216])
w[1] = np.array([0.473, 0.2711, 0.0282, 0.565])
w[2] = np.array([0.4152, 0.3344, 0.7781, 0.3973])
w[3] = np.array([0.7776, 0.2272, 0.9776, 0.7543])
model.get_layer('Bat9907').set_weights(w) 
w = model.get_layer('Con27170').get_weights() 
w[0] = np.array([[[[[0.6448, 0.0714, 0.853, 0.5069]]]]])
w[1] = np.array([0, 0, 0, 0])
model.get_layer('Con27170').set_weights(w) 
in0Cro63306 = tf.constant([[[[1.9847, 1.7864, 1.4792, 1.7373], [1.4621, 1.6539, 1.3262, 1.533], [1.1401, 1.1171, 1.4834, 1.0924]], [[1.1068, 1.59, 1.978, 1.8577], [1.3672, 1.5991, 1.6918, 1.9894], [1.6924, 1.712, 1.7332, 1.7966]]]])
print (np.array2string(model.predict([in0Cro63306],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Con27170.png')

LCro63306 = cropping2D_layer([[[[1.9847, 1.7864, 1.4792, 1.7373], [1.4621, 1.6539, 1.3262, 1.533], [1.1401, 1.1171, 1.4834, 1.0924]], [[1.1068, 1.59, 1.978, 1.8577], [1.3672, 1.5991, 1.6918, 1.9894], [1.6924, 1.712, 1.7332, 1.7966]]]], 1, 0, 0, 0, Cro63306), 
LGlo40658 = global_average_pooling2D_layer(Cro63306, Glo40658), 
LBat9907 = batch_normalization_layer(Glo40658, 1, 0.9700714958469496, [0.2383, 0.1293, 0.7306, 0.4216], [0.473, 0.2711, 0.0282, 0.565], [0.4152, 0.3344, 0.7781, 0.3973], [0.7776, 0.2272, 0.9776, 0.7543], Bat9907), 
LRes7972 = reshape_layer(Bat9907, [4, 1], Res7972), 
LGlo177 = global_max_pool1D_layer(Res7972, Glo177), 
LRes60122 = reshape_layer(Glo177, [1, 1], Res60122), 
LRes81751 = reshape_layer(Res60122, [1, 1, 1], Res81751), 
LRes49377 = reshape_layer(Res81751, [1, 1, 1, 1], Res49377), 
LCon27170 = conv3D_layer(Res49377, 1, 1, 1,[[[[[0.6448, 0.0714, 0.853, 0.5069]]]]],[0, 0, 0, 0], 1, 1, 1, true, 1, 1, 1, Con27170), 
exec_layers([LCro63306,LGlo40658,LBat9907,LRes7972,LGlo177,LRes60122,LRes81751,LRes49377,LCon27170],["Cro63306","Glo40658","Bat9907","Res7972","Glo177","Res60122","Res81751","Res49377","Con27170"],Con27170,"Con27170")

Actual (Unparsed): [[[[[0.6715144, 0.0743581, 0.8883402, 0.5279011]]]]]

Expected (Unparsed): [[[[[0.6715143996533832,0.07435813916757375,0.8883402340327788,0.5279011308689515]]]]]

Actual:   [[[[[0.6716, 0.0744, 0.8884, 0.528]]]]]

Expected: [[[[[0.6716, 0.0744, 0.8884, 0.528]]]]]