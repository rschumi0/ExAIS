import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Min48963 = tf.keras.layers.Input(shape=([1, 1, 2, 2]))
in1Min48963 = tf.keras.layers.Input(shape=([1, 1, 2, 2]))
in0Dot23407 = tf.keras.layers.Input(shape=([3, 2]))
in1Dot23407 = tf.keras.layers.Input(shape=([3, 2]))
in0Con6513 = tf.keras.layers.Input(shape=([2, 1]))
in0Ave40728 = tf.keras.layers.Input(shape=([2, 1, 2]))
in0Con49907 = tf.keras.layers.Input(shape=([2, 2]))

Min48963 = keras.layers.Minimum(name = 'Min48963', )([in0Min48963,in1Min48963])
Res52752 = keras.layers.Reshape((1, 1, 4), name = 'Res52752', )(Min48963)
Res79707 = keras.layers.Reshape((1, 4), name = 'Res79707', )(Res52752)
Zer47758 = keras.layers.ZeroPadding1D(padding=((1, 0)), name = 'Zer47758', )(Res79707)
Dot23407 = keras.layers.Dot(axes=(2, 2), name = 'Dot23407', )([in0Dot23407,in1Dot23407])
Res84421 = keras.layers.Reshape((3, 3, 1), name = 'Res84421', )(Dot23407)
Glo68982 = keras.layers.GlobalMaxPool2D(name = 'Glo68982', )(Res84421)
Res98869 = keras.layers.Reshape((1, 1), name = 'Res98869', )(Glo68982)
Zer35343 = keras.layers.ZeroPadding1D(padding=((1, 0)), name = 'Zer35343', )(Res98869)
Con6513 = keras.layers.Concatenate(axis=2, name = 'Con6513', )([Zer35343,in0Con6513])
Ave40728 = keras.layers.AveragePooling2D(pool_size=(2, 1), name = 'Ave40728', )(in0Ave40728)
Res46658 = keras.layers.Reshape((1, 1, 2, 1), name = 'Res46658', )(Ave40728)
Up_58138 = keras.layers.UpSampling3D(size=(2, 1, 1), name = 'Up_58138', )(Res46658)
Res92052 = keras.layers.Reshape((2, 1, 2), name = 'Res92052', )(Up_58138)
Res58549 = keras.layers.Reshape((2, 2), name = 'Res58549', )(Res92052)
Ave10573 = keras.layers.AveragePooling1D(pool_size=(1), strides=(1), padding='same', name = 'Ave10573', )(Res58549)
Sub66709 = keras.layers.Subtract(name = 'Sub66709', )([Con6513,Ave10573])
Con49907 = keras.layers.Concatenate(axis=2, name = 'Con49907', )([Sub66709,in0Con49907])
Mul63597 = keras.layers.Multiply(name = 'Mul63597', )([Zer47758,Con49907])
model = tf.keras.models.Model(inputs=[in0Min48963,in1Min48963,in0Dot23407,in1Dot23407,in0Con6513,in0Ave40728,in0Con49907], outputs=Mul63597)
in0Min48963 = tf.constant([[[[[0.1322, 0.6187], [0.761, 0.1289]]]]])
in1Min48963 = tf.constant([[[[[0.4178, 0.9365], [0.7421, 0.8966]]]]])
in0Dot23407 = tf.constant([[[0.8073, 0.7826], [0.1105, 0.7039], [0.2172, 0.708]]])
in1Dot23407 = tf.constant([[[0.8093, 0.608], [0.4347, 0.8962], [0.9803, 0.3226]]])
in0Con6513 = tf.constant([[[0.6343], [0.8722]]])
in0Ave40728 = tf.constant([[[[1.3023, 1.892]], [[1.2158, 1.0019]]]])
in0Con49907 = tf.constant([[[0.2865, 0.3026], [0.509, 0.092]]])
print (np.array2string(model.predict([in0Min48963,in1Min48963,in0Dot23407,in1Dot23407,in0Con6513,in0Ave40728,in0Con49907],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Mul63597.png')

LMin48963 = minimum_layer([[[[[[0.1322, 0.6187], [0.761, 0.1289]]]]], [[[[[0.4178, 0.9365], [0.7421, 0.8966]]]]]], Min48963), 
LRes52752 = reshape_layer(Min48963, [1, 1, 4], Res52752), 
LRes79707 = reshape_layer(Res52752, [1, 4], Res79707), 
LZer47758 = zero_padding1D_layer(Res79707, 1, 0, Zer47758), 
LDot23407 = dot_layer([[[0.8073, 0.7826], [0.1105, 0.7039], [0.2172, 0.708]]], [[[0.8093, 0.608], [0.4347, 0.8962], [0.9803, 0.3226]]], 2, 2, Dot23407), 
LRes84421 = reshape_layer(Dot23407, [3, 3, 1], Res84421), 
LGlo68982 = global_max_pool2D_layer(Res84421, Glo68982), 
LRes98869 = reshape_layer(Glo68982, [1, 1], Res98869), 
LZer35343 = zero_padding1D_layer(Res98869, 1, 0, Zer35343), 
LCon6513 = concatenate_layer([Zer35343,[[[0.6343], [0.8722]]]], 2, Con6513), 
LAve40728 = average_pooling2D_layer([[[[1.3023, 1.892]], [[1.2158, 1.0019]]]], 2, 1, Ave40728), 
LRes46658 = reshape_layer(Ave40728, [1, 1, 2, 1], Res46658), 
LUp_58138 = up_sampling3D_layer(Res46658, 2, 1, 1, Up_58138), 
LRes92052 = reshape_layer(Up_58138, [2, 1, 2], Res92052), 
LRes58549 = reshape_layer(Res92052, [2, 2], Res58549), 
LAve10573 = average_pooling1D_layer(Res58549, 1, 1, true, Ave10573), 
LSub66709 = subtract_layer(Con6513,Ave10573, Sub66709), 
LCon49907 = concatenate_layer([Sub66709,[[[0.2865, 0.3026], [0.509, 0.092]]]], 2, Con49907), 
LMul63597 = multiply_layer([Zer47758,Con49907], Mul63597), 
exec_layers([LMin48963,LRes52752,LRes79707,LZer47758,LDot23407,LRes84421,LGlo68982,LRes98869,LZer35343,LCon6513,LAve40728,LRes46658,LUp_58138,LRes92052,LRes58549,LAve10573,LSub66709,LCon49907,LMul63597],["Min48963","Res52752","Res79707","Zer47758","Dot23407","Res84421","Glo68982","Res98869","Zer35343","Con6513","Ave40728","Res46658","Up_58138","Res92052","Res58549","Ave10573","Sub66709","Con49907","Mul63597"],Mul63597,"Mul63597")

Actual (Unparsed): [[[-0.0000000, -0.0000000, 0.0000000, 0.0000000], [-0.0171703, -0.3555978, 0.3777289, 0.0118588]]]

Expected (Unparsed): [[[-0.0,-0.0,0.0,0.0],[-0.017170309182000004,-0.355597825,0.3777289,0.0118588]]]

Actual:   [[[-0, -0, 0, 0], [-0.0171, -0.3555, 0.3778, 0.0119]]]

Expected: [[[-0, -0, 0, 0], [-0.0171, -0.3555, 0.3778, 0.0119]]]