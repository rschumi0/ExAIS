import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Bat90842 = tf.keras.layers.Input(shape=([2]))

Bat90842 = keras.layers.BatchNormalization(axis=1, epsilon=0.45083218561994287,  name = 'Bat90842', )(in0Bat90842)
Res20588 = keras.layers.Reshape((2, 1), name = 'Res20588', )(Bat90842)
Res81984 = keras.layers.Reshape((2, 1, 1), name = 'Res81984', )(Res20588)
Max83337 = keras.layers.MaxPool2D(pool_size=(2, 1), name = 'Max83337', )(Res81984)
Res43563 = keras.layers.Reshape((1, 1, 1, 1), name = 'Res43563', )(Max83337)
Up_20405 = keras.layers.UpSampling3D(size=(2, 2, 2), name = 'Up_20405', )(Res43563)
model = tf.keras.models.Model(inputs=[in0Bat90842], outputs=Up_20405)
w = model.get_layer('Bat90842').get_weights() 
w[0] = np.array([0.9475, 0.108])
w[1] = np.array([0.1231, 0.8982])
w[2] = np.array([0.2611, 0.2903])
w[3] = np.array([0.919, 0.5])
model.get_layer('Bat90842').set_weights(w) 
in0Bat90842 = tf.constant([[1.7034, 1.4099]])
print (np.array2string(model.predict([in0Bat90842],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Up_20405.png')

LBat90842 = batch_normalization_layer([[1.7034, 1.4099]], 1, 0.45083218561994287, [0.9475, 0.108], [0.1231, 0.8982], [0.2611, 0.2903], [0.919, 0.5], Bat90842), 
LRes20588 = reshape_layer(Bat90842, [2, 1], Res20588), 
LRes81984 = reshape_layer(Res20588, [2, 1, 1], Res81984), 
LMax83337 = max_pool2D_layer(Res81984, 2, 1, Max83337), 
LRes43563 = reshape_layer(Max83337, [1, 1, 1, 1], Res43563), 
LUp_20405 = up_sampling3D_layer(Res43563, 2, 2, 2, Up_20405), 
exec_layers([LBat90842,LRes20588,LRes81984,LMax83337,LRes43563,LUp_20405],["Bat90842","Res20588","Res81984","Max83337","Res43563","Up_20405"],Up_20405,"Up_20405")

Actual (Unparsed): [[[[[1.2907190], [1.2907190]], [[1.2907190], [1.2907190]]], [[[1.2907190], [1.2907190]], [[1.2907190], [1.2907190]]]]]

Expected (Unparsed): [[[[[1.2907189614402064],[1.2907189614402064]],[[1.2907189614402064],[1.2907189614402064]]],[[[1.2907189614402064],[1.2907189614402064]],[[1.2907189614402064],[1.2907189614402064]]]]]

Actual:   [[[[[1.2908], [1.2908]], [[1.2908], [1.2908]]], [[[1.2908], [1.2908]], [[1.2908], [1.2908]]]]]

Expected: [[[[[1.2908], [1.2908]], [[1.2908], [1.2908]]], [[[1.2908], [1.2908]], [[1.2908], [1.2908]]]]]