import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Mul22729 = tf.keras.layers.Input(shape=([2, 2, 2]))
in1Mul22729 = tf.keras.layers.Input(shape=([2, 2, 2]))
in0Mul66280 = tf.keras.layers.Input(shape=([2, 2, 1]))
in1Mul66280 = tf.keras.layers.Input(shape=([2, 2, 1]))
in0Con34189 = tf.keras.layers.Input(shape=([2, 2, 1]))
in0Con99861 = tf.keras.layers.Input(shape=([2, 2]))
in0Con60391 = tf.keras.layers.Input(shape=([2, 2]))

Mul22729 = keras.layers.Multiply(name = 'Mul22729', )([in0Mul22729,in1Mul22729])
Mul66280 = keras.layers.Multiply(name = 'Mul66280', )([in0Mul66280,in1Mul66280])
Con34189 = keras.layers.Concatenate(axis=3, name = 'Con34189', )([Mul66280,in0Con34189])
Min17714 = keras.layers.Minimum(name = 'Min17714', )([Mul22729,Con34189])
Res95240 = keras.layers.Reshape((2, 4), name = 'Res95240', )(Min17714)
Con99861 = keras.layers.Conv1D(2, (1),strides=(2), padding='valid', dilation_rate=(1), name = 'Con99861', )(in0Con99861)
Ave24708 = keras.layers.AveragePooling1D(pool_size=(1), strides=(1), padding='same', name = 'Ave24708', )(Con99861)
Lea77506 = keras.layers.LeakyReLU(alpha=5.808399428736374, name = 'Lea77506', )(Ave24708)
Zer58405 = keras.layers.ZeroPadding1D(padding=((1, 0)), name = 'Zer58405', )(Lea77506)
Con60391 = keras.layers.Concatenate(axis=2, name = 'Con60391', )([Zer58405,in0Con60391])
Sub6683 = keras.layers.Subtract(name = 'Sub6683', )([Res95240,Con60391])
model = tf.keras.models.Model(inputs=[in0Mul22729,in1Mul22729,in0Mul66280,in1Mul66280,in0Con34189,in0Con99861,in0Con60391], outputs=Sub6683)
w = model.get_layer('Con99861').get_weights() 
w[0] = np.array([[[0.6404, 0.1712], [0.5753, 0.8285]]])
w[1] = np.array([0, 0])
model.get_layer('Con99861').set_weights(w) 
in0Mul22729 = tf.constant([[[[0.8197, 0.2899], [0.5349, 0.8932]], [[0.268, 0.0409], [0.6177, 0.166]]]])
in1Mul22729 = tf.constant([[[[0.2776, 0.7354], [0.7564, 0.5486]], [[0.7343, 0.4363], [0.2339, 0.4802]]]])
in0Mul66280 = tf.constant([[[[0.1253], [0.7126]], [[0.7546], [0.6572]]]])
in1Mul66280 = tf.constant([[[[0.5073], [0.6139]], [[0.7471], [0.4504]]]])
in0Con34189 = tf.constant([[[[0.8599], [0.0883]], [[0.3433], [0.0816]]]])
in0Con99861 = tf.constant([[[0.9076, 0.9464], [0.1915, 0.6509]]])
in0Con60391 = tf.constant([[[0.5549, 0.0541], [0.2745, 0.4547]]])
print (np.array2string(model.predict([in0Mul22729,in1Mul22729,in0Mul66280,in1Mul66280,in0Con34189,in0Con99861,in0Con60391],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Sub6683.png')

LMul22729 = multiply_layer([[[[[0.8197, 0.2899], [0.5349, 0.8932]], [[0.268, 0.0409], [0.6177, 0.166]]]], [[[[0.2776, 0.7354], [0.7564, 0.5486]], [[0.7343, 0.4363], [0.2339, 0.4802]]]]], Mul22729), 
LMul66280 = multiply_layer([[[[[0.1253], [0.7126]], [[0.7546], [0.6572]]]], [[[[0.5073], [0.6139]], [[0.7471], [0.4504]]]]], Mul66280), 
LCon34189 = concatenate_layer([Mul66280,[[[[0.8599], [0.0883]], [[0.3433], [0.0816]]]]], 3, Con34189), 
LMin17714 = minimum_layer([Mul22729,Con34189], Min17714), 
LRes95240 = reshape_layer(Min17714, [2, 4], Res95240), 
LCon99861 = conv1D_layer([[[0.9076, 0.9464], [0.1915, 0.6509]]], 1,[[[0.6404, 0.1712], [0.5753, 0.8285]]],[0, 0], 2, false, 1, Con99861), 
LAve24708 = average_pooling1D_layer(Con99861, 1, 1, true, Ave24708), 
LLea77506 = leaky_relu_layer(Ave24708, 5.808399428736374, Lea77506), 
LZer58405 = zero_padding1D_layer(Lea77506, 1, 0, Zer58405), 
LCon60391 = concatenate_layer([Zer58405,[[[0.5549, 0.0541], [0.2745, 0.4547]]]], 2, Con60391), 
LSub6683 = subtract_layer(Res95240,Con60391, Sub6683), 
exec_layers([LMul22729,LMul66280,LCon34189,LMin17714,LRes95240,LCon99861,LAve24708,LLea77506,LZer58405,LCon60391,LSub6683],["Mul22729","Mul66280","Con34189","Min17714","Res95240","Con99861","Ave24708","Lea77506","Zer58405","Con60391","Sub6683"],Sub6683,"Sub6683")

Actual (Unparsed): [[[0.0635647, 0.2131925, -0.1503016, 0.0342000], [-0.9288985, -0.9216288, -0.1300200, -0.3749868]]]

Expected (Unparsed): [[[0.06356469,0.21319246,-0.15030163999999996,0.0342],[-0.92889856,-0.9216288499999999,-0.13001997,-0.37498679999999995]]]

Actual:   [[[0.0636, 0.2132, -0.1503, 0.0342], [-0.9288, -0.9216, -0.13, -0.3749]]]

Expected: [[[0.0636, 0.2132, -0.1503, 0.0342], [-0.9288, -0.9216, -0.13, -0.3749]]]