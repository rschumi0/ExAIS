import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Up_90119 = tf.keras.layers.Input(shape=([3, 2, 2]))
in0Con44149 = tf.keras.layers.Input(shape=([4, 1]))
in0Dot34865 = tf.keras.layers.Input(shape=([3, 3]))
in1Dot34865 = tf.keras.layers.Input(shape=([3, 3]))

Up_90119 = keras.layers.UpSampling2D(size=(1, 1), name = 'Up_90119', )(in0Up_90119)
Loc13775 = keras.layers.LocallyConnected2D(2, (1, 1),strides=(1, 2), name = 'Loc13775', )(Up_90119)
Res77481 = keras.layers.Reshape((3, 2), name = 'Res77481', )(Loc13775)
Cro56102 = keras.layers.Cropping1D(cropping=((0, 1)), name = 'Cro56102', )(Res77481)
Zer93149 = keras.layers.ZeroPadding1D(padding=((1, 1)), name = 'Zer93149', )(Cro56102)
Con44149 = keras.layers.Concatenate(axis=2, name = 'Con44149', )([Zer93149,in0Con44149])
Dot34865 = keras.layers.Dot(axes=(1, 2), name = 'Dot34865', )([in0Dot34865,in1Dot34865])
Zer92628 = keras.layers.ZeroPadding1D(padding=((1, 0)), name = 'Zer92628', )(Dot34865)
Sub78361 = keras.layers.Subtract(name = 'Sub78361', )([Con44149,Zer92628])
Res27321 = keras.layers.Reshape((4, 3, 1), name = 'Res27321', )(Sub78361)
Res17008 = keras.layers.Reshape((4, 3, 1, 1), name = 'Res17008', )(Res27321)
Up_85095 = keras.layers.UpSampling3D(size=(1, 2, 1), name = 'Up_85095', )(Res17008)
model = tf.keras.models.Model(inputs=[in0Up_90119,in0Con44149,in0Dot34865,in1Dot34865], outputs=Up_85095)
w = model.get_layer('Loc13775').get_weights() 
w[0] = np.array([[[0.5217, 0.5853], [0.0122, 0.996]], [[0.5544, 0.3796], [0.5024, 0.7218]], [[0.2792, 0.808], [0.0226, 0.4027]]])
w[1] = np.array([[[0, 0]], [[0, 0]], [[0, 0]]])
model.get_layer('Loc13775').set_weights(w) 
in0Up_90119 = tf.constant([[[[1.5861, 1.0315], [1.1897, 1.725]], [[1.2586, 1.2699], [1.0393, 1.8058]], [[1.1393, 1.7734], [1.3019, 1.6549]]]])
in0Con44149 = tf.constant([[[0.4744], [0.5187], [0.785], [0.5262]]])
in0Dot34865 = tf.constant([[[0.3831, 0.8604, 0.6616], [0.1013, 0.7001, 0.8061], [0.297, 0.9727, 0.3395]]])
in1Dot34865 = tf.constant([[[0.1613, 0.3621, 0.1541], [0.4627, 0.6378, 0.6064], [0.3084, 0.7871, 0.1998]]])
print (np.array2string(model.predict([in0Up_90119,in0Con44149,in0Dot34865,in1Dot34865],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Up_85095.png')

LUp_90119 = up_sampling2D_layer([[[[1.5861, 1.0315], [1.1897, 1.725]], [[1.2586, 1.2699], [1.0393, 1.8058]], [[1.1393, 1.7734], [1.3019, 1.6549]]]], 1, 1, Up_90119), 
LLoc13775 = locally_connected2D_layer(Up_90119, 1, 1,[[[0.5217, 0.5853], [0.0122, 0.996]], [[0.5544, 0.3796], [0.5024, 0.7218]], [[0.2792, 0.808], [0.0226, 0.4027]]],[[[0, 0]], [[0, 0]], [[0, 0]]], 1, 2, Loc13775), 
LRes77481 = reshape_layer(Loc13775, [3, 2], Res77481), 
LCro56102 = cropping1D_layer(Res77481, 0, 1, Cro56102), 
LZer93149 = zero_padding1D_layer(Cro56102, 1, 1, Zer93149), 
LCon44149 = concatenate_layer([Zer93149,[[[0.4744], [0.5187], [0.785], [0.5262]]]], 2, Con44149), 
LDot34865 = dot_layer([[[0.3831, 0.8604, 0.6616], [0.1013, 0.7001, 0.8061], [0.297, 0.9727, 0.3395]]], [[[0.1613, 0.3621, 0.1541], [0.4627, 0.6378, 0.6064], [0.3084, 0.7871, 0.1998]]], 1, 2, Dot34865), 
LZer92628 = zero_padding1D_layer(Dot34865, 1, 0, Zer92628), 
LSub78361 = subtract_layer(Con44149,Zer92628, Sub78361), 
LRes27321 = reshape_layer(Sub78361, [4, 3, 1], Res27321), 
LRes17008 = reshape_layer(Res27321, [4, 3, 1, 1], Res17008), 
LUp_85095 = up_sampling3D_layer(Res17008, 1, 2, 1, Up_85095), 
exec_layers([LUp_90119,LLoc13775,LRes77481,LCro56102,LZer93149,LCon44149,LDot34865,LZer92628,LSub78361,LRes27321,LRes17008,LUp_85095],["Up_90119","Loc13775","Res77481","Cro56102","Zer93149","Con44149","Dot34865","Zer92628","Sub78361","Res27321","Res17008","Up_85095"],Up_85095,"Up_85095")

Actual (Unparsed): [[[[[0.0000000]], [[0.0000000]], [[0.0000000]], [[0.0000000]], [[0.4744000]], [[0.4744000]]], [[[0.6958102]], [[0.6958102]], [[1.5337480]], [[1.5337480]], [[0.2614781]], [[0.2614781]]], [[[0.7935838]], [[0.7935838]], [[-0.0400978]], [[-0.0400978]], [[-0.2257415]], [[-0.2257415]]], [[[-0.4509219]], [[-0.4509219]], [[-1.0261257]], [[-1.0261257]], [[-0.3801509]], [[-0.3801509]]]]]

Expected (Unparsed): [[[[[0]],[[0]],[[0]],[[0]],[[0.4744]],[[0.4744]]],[[[0.6958102100000001]],[[0.6958102100000001]],[[1.53374802]],[[1.53374802]],[[0.26147813000000003]],[[0.26147813000000003]]],[[[0.7935837999999998]],[[0.7935837999999998]],[[-0.04009776000000009]],[[-0.04009776000000009]],[[-0.22574152999999997]],[[-0.22574152999999997]]],[[[-0.45092184]],[[-0.45092184]],[[-1.0261257000000001]],[[-1.0261257000000001]],[[-0.38015085000000015]],[[-0.38015085000000015]]]]]

Actual:   [[[[[0]], [[0]], [[0]], [[0]], [[0.4744]], [[0.4744]]], [[[0.6959]], [[0.6959]], [[1.5338]], [[1.5338]], [[0.2615]], [[0.2615]]], [[[0.7936]], [[0.7936]], [[-0.04]], [[-0.04]], [[-0.2257]], [[-0.2257]]], [[[-0.4509]], [[-0.4509]], [[-1.0261]], [[-1.0261]], [[-0.3801]], [[-0.3801]]]]]

Expected: [[[[[0]], [[0]], [[0]], [[0]], [[0.4744]], [[0.4744]]], [[[0.6959]], [[0.6959]], [[1.5338]], [[1.5338]], [[0.2615]], [[0.2615]]], [[[0.7936]], [[0.7936]], [[-0.04]], [[-0.04]], [[-0.2257]], [[-0.2257]]], [[[-0.4509]], [[-0.4509]], [[-1.0261]], [[-1.0261]], [[-0.3801]], [[-0.3801]]]]]