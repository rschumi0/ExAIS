import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Loc18696 = tf.keras.layers.Input(shape=([1, 2]))

Loc18696 = keras.layers.LocallyConnected1D(4, (1),strides=(1), name = 'Loc18696', )(in0Loc18696)
Fla89795 = keras.layers.Flatten(name = 'Fla89795', )(Loc18696)
model = tf.keras.models.Model(inputs=[in0Loc18696], outputs=Fla89795)
w = model.get_layer('Loc18696').get_weights() 
w[0] = np.array([[[0.0611, 0.4276, 0.8616, 0.0725], [0.0208, 0.9787, 0.2565, 0.7226]]])
w[1] = np.array([[0, 0, 0, 0]])
model.get_layer('Loc18696').set_weights(w) 
in0Loc18696 = tf.constant([[[0.4879, 0.6195]]])
print (np.array2string(model.predict([in0Loc18696],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Fla89795.png')

LLoc18696 = locally_connected1D_layer([[[0.4879, 0.6195]]], 1,[[[0.0611, 0.4276, 0.8616, 0.0725], [0.0208, 0.9787, 0.2565, 0.7226]]],[[0, 0, 0, 0]], 1, Loc18696), 
LFla89795 = flatten_layer(Loc18696, Fla89795), 
exec_layers([LLoc18696,LFla89795],["Loc18696","Fla89795"],Fla89795,"Fla89795")

Actual (Unparsed): [[0.0426963, 0.8149307, 0.5792764, 0.4830234]]

Expected (Unparsed): [[0.04269629,0.8149306900000001,0.57927639,0.4830234500000001]]

Actual:   [[0.0427, 0.815, 0.5793, 0.4831]]

Expected: [[0.0427, 0.815, 0.5793, 0.4831]]