import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Dot70251 = tf.keras.layers.Input(shape=([2]))
in1Dot70251 = tf.keras.layers.Input(shape=([2]))

Dot70251 = keras.layers.Dot(axes=(1, 1), name = 'Dot70251', )([in0Dot70251,in1Dot70251])
Bat33116 = keras.layers.BatchNormalization(axis=1, epsilon=0.4721825416094846,  name = 'Bat33116', )(Dot70251)
model = tf.keras.models.Model(inputs=[in0Dot70251,in1Dot70251], outputs=Bat33116)
w = model.get_layer('Bat33116').get_weights() 
w[0] = np.array([0.2489])
w[1] = np.array([0.238])
w[2] = np.array([0.388])
w[3] = np.array([0.1468])
model.get_layer('Bat33116').set_weights(w) 
in0Dot70251 = tf.constant([[0.008, 0.5717]])
in1Dot70251 = tf.constant([[0.9473, 0.9358]])
print (np.array2string(model.predict([in0Dot70251,in1Dot70251],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Bat33116.png')

LDot70251 = dot_layer([[0.008, 0.5717]], [[0.9473, 0.9358]], 1, 1, Dot70251), 
LBat33116 = batch_normalization_layer(Dot70251, 1, 0.4721825416094846, [0.2489], [0.238], [0.388], [0.1468], Bat33116), 
exec_layers([LDot70251,LBat33116],["Dot70251","Bat33116"],Bat33116,"Bat33116")

Actual (Unparsed): [[0.2869019]]

Expected (Unparsed): [[0.2869018942674469]]

Actual:   [[0.287]]

Expected: [[0.287]]