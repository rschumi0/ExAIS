import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Loc88722 = tf.keras.layers.Input(shape=([1, 1, 2]))
in0Max6430 = tf.keras.layers.Input(shape=([1, 2, 1]))
in0Con56086 = tf.keras.layers.Input(shape=([1, 1, 2]))
in0Con94777 = tf.keras.layers.Input(shape=([7, 4, 2]))
in0Cro67900 = tf.keras.layers.Input(shape=([4, 2]))
in0Max62900 = tf.keras.layers.Input(shape=([2, 1]))
in1Max62900 = tf.keras.layers.Input(shape=([2, 1]))
in0Mul4582 = tf.keras.layers.Input(shape=([2, 1]))
in1Mul4582 = tf.keras.layers.Input(shape=([2, 1]))
in0Con5456 = tf.keras.layers.Input(shape=([7, 11]))

Loc88722 = keras.layers.LocallyConnected2D(3, (1, 1),strides=(1, 1), name = 'Loc88722', )(in0Loc88722)
Max6430 = keras.layers.MaxPool2D(pool_size=(1, 1), strides=(2, 2), padding='same', name = 'Max6430', )(in0Max6430)
Con56086 = keras.layers.Concatenate(axis=3, name = 'Con56086', )([Max6430,in0Con56086])
Ave59318 = keras.layers.Average(name = 'Ave59318', )([Loc88722,Con56086])
Res48826 = keras.layers.Reshape((1, 1, 3, 1), name = 'Res48826', )(Ave59318)
Glo1361 = keras.layers.GlobalAveragePooling3D(name = 'Glo1361', )(Res48826)
Res56197 = keras.layers.Reshape((1, 1), name = 'Res56197', )(Glo1361)
Res13902 = keras.layers.Reshape((1, 1, 1), name = 'Res13902', )(Res56197)
Zer95990 = keras.layers.ZeroPadding2D(padding=((6, 0), (3, 0)), name = 'Zer95990', )(Res13902)
Con94777 = keras.layers.Concatenate(axis=3, name = 'Con94777', )([Zer95990,in0Con94777])
Cro67900 = keras.layers.Cropping1D(cropping=((0, 0)), name = 'Cro67900', )(in0Cro67900)
Per81209 = keras.layers.Permute((2,1), name = 'Per81209',)(Cro67900)
Zer58195 = keras.layers.ZeroPadding1D(padding=((1, 1)), name = 'Zer58195', )(Per81209)
Res56743 = keras.layers.Reshape((4, 4, 1), name = 'Res56743', )(Zer58195)
Con38979 = keras.layers.Conv2DTranspose(3, (4, 1),strides=(1, 1), padding='valid', name = 'Con38979', )(Res56743)
Mul65821 = keras.layers.Multiply(name = 'Mul65821', )([Con94777,Con38979])
Res46982 = keras.layers.Reshape((7, 12), name = 'Res46982', )(Mul65821)
Max62900 = keras.layers.Maximum(name = 'Max62900', )([in0Max62900,in1Max62900])
Mul4582 = keras.layers.Multiply(name = 'Mul4582', )([in0Mul4582,in1Mul4582])
Add10621 = keras.layers.Add(name = 'Add10621', )([Max62900,Mul4582])
Zer17057 = keras.layers.ZeroPadding1D(padding=((5, 0)), name = 'Zer17057', )(Add10621)
Con5456 = keras.layers.Concatenate(axis=2, name = 'Con5456', )([Zer17057,in0Con5456])
Sub99951 = keras.layers.Subtract(name = 'Sub99951', )([Res46982,Con5456])
model = tf.keras.models.Model(inputs=[in0Loc88722,in0Max6430,in0Con56086,in0Con94777,in0Cro67900,in0Max62900,in1Max62900,in0Mul4582,in1Mul4582,in0Con5456], outputs=Sub99951)
w = model.get_layer('Loc88722').get_weights() 
w[0] = np.array([[[0.7287, 0.2633, 0.9374], [0.4137, 0.8319, 0.7868]]])
w[1] = np.array([[[0, 0, 0]]])
model.get_layer('Loc88722').set_weights(w) 
w = model.get_layer('Con38979').get_weights() 
w[0] = np.array([[[[0.664], [0.092], [0.6632]]], [[[0.2946], [0.5672], [0.355]]], [[[0.2916], [0.5562], [0.1172]]], [[[0.8458], [0.8396], [0.2508]]]])
w[1] = np.array([0, 0, 0])
model.get_layer('Con38979').set_weights(w) 
in0Loc88722 = tf.constant([[[[0.2616, 0.2023]]]])
in0Max6430 = tf.constant([[[[1.1636], [1.5645]]]])
in0Con56086 = tf.constant([[[[0.7437, 0.4222]]]])
in0Con94777 = tf.constant([[[[0.2221, 0.3343], [0.652, 0.6944], [0.6828, 0.6659], [0.1252, 0.9442]], [[0.1965, 0.515], [0.4279, 0.7434], [0.3504, 0.7436], [0.2657, 0.7216]], [[0.669, 0.8469], [0.1313, 0.1067], [0.9966, 0.8174], [0.6558, 0.6331]], [[0.4172, 0.1811], [0.8075, 0.9005], [0.1546, 0.3551], [0.3886, 0.6623]], [[0.4508, 0.7352], [0.543, 0.6046], [0.6406, 0.0792], [0.4083, 0.6674]], [[0.5085, 0.8232], [0.6195, 0.8527], [0.5459, 0.9384], [0.1027, 0.769]], [[0.9088, 0.8175], [0.4876, 0.8677], [0.7173, 0.4649], [0.5067, 0.4399]]]])
in0Cro67900 = tf.constant([[[1.4085, 1.4243], [1.2174, 1.849], [1.6574, 1.7066], [1.6765, 1.6138]]])
in0Max62900 = tf.constant([[[0.6502], [0.4377]]])
in1Max62900 = tf.constant([[[0.7948], [0.8505]]])
in0Mul4582 = tf.constant([[[0.7618], [0.2365]]])
in1Mul4582 = tf.constant([[[0.2966], [0.2545]]])
in0Con5456 = tf.constant([[[0.0424, 0.9373, 0.7513, 0.3642, 0.125, 0.1864, 0.3816, 0.4701, 0.1123, 0.7609, 0.8264], [0.5832, 0.5492, 0.3701, 0.9183, 0.8604, 0.7382, 0.5677, 0.6875, 0.5535, 0.9581, 0.0184], [0.4233, 0.0934, 0.2665, 0.1636, 0.3894, 0.4383, 0.8037, 0.6827, 0.2801, 0.812, 0.8916], [0.7125, 0.5771, 0.3596, 0.2439, 0.2635, 0.199, 0.0442, 0.295, 0.6469, 0.2245, 0.3203], [0.9894, 0.0184, 0.0124, 0.7318, 0.3763, 0.3317, 0.7427, 0.6032, 0.0022, 0.0975, 0.2587], [0.4191, 0.4088, 0.3447, 0.105, 0.3229, 0.0042, 0.0966, 0.8212, 0.3993, 0.2025, 0.4865], [0.881, 0.0563, 0.0015, 0.3657, 0.1436, 0.8719, 0.1047, 0.8841, 0.3254, 0.7265, 0.2831]]])
print (np.array2string(model.predict([in0Loc88722,in0Max6430,in0Con56086,in0Con94777,in0Cro67900,in0Max62900,in1Max62900,in0Mul4582,in1Mul4582,in0Con5456],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Sub99951.png')

LLoc88722 = locally_connected2D_layer([[[[0.2616, 0.2023]]]], 1, 1,[[[0.7287, 0.2633, 0.9374], [0.4137, 0.8319, 0.7868]]],[[[0, 0, 0]]], 1, 1, Loc88722), 
LMax6430 = max_pool2D_layer([[[[1.1636], [1.5645]]]], 1, 1, 2, 2, true, Max6430), 
LCon56086 = concatenate_layer([Max6430,[[[[0.7437, 0.4222]]]]], 3, Con56086), 
LAve59318 = average_layer([Loc88722,Con56086], Ave59318), 
LRes48826 = reshape_layer(Ave59318, [1, 1, 3, 1], Res48826), 
LGlo1361 = global_average_pooling3D_layer(Res48826, Glo1361), 
LRes56197 = reshape_layer(Glo1361, [1, 1], Res56197), 
LRes13902 = reshape_layer(Res56197, [1, 1, 1], Res13902), 
LZer95990 = zero_padding2D_layer(Res13902, 6, 0, 3, 0, Zer95990), 
LCon94777 = concatenate_layer([Zer95990,[[[[0.2221, 0.3343], [0.652, 0.6944], [0.6828, 0.6659], [0.1252, 0.9442]], [[0.1965, 0.515], [0.4279, 0.7434], [0.3504, 0.7436], [0.2657, 0.7216]], [[0.669, 0.8469], [0.1313, 0.1067], [0.9966, 0.8174], [0.6558, 0.6331]], [[0.4172, 0.1811], [0.8075, 0.9005], [0.1546, 0.3551], [0.3886, 0.6623]], [[0.4508, 0.7352], [0.543, 0.6046], [0.6406, 0.0792], [0.4083, 0.6674]], [[0.5085, 0.8232], [0.6195, 0.8527], [0.5459, 0.9384], [0.1027, 0.769]], [[0.9088, 0.8175], [0.4876, 0.8677], [0.7173, 0.4649], [0.5067, 0.4399]]]]], 3, Con94777), 
LCro67900 = cropping1D_layer([[[1.4085, 1.4243], [1.2174, 1.849], [1.6574, 1.7066], [1.6765, 1.6138]]], 0, 0, Cro67900), 
LPer81209 = permute_layer(Cro67900, 2,1, Per81209), 
LZer58195 = zero_padding1D_layer(Per81209, 1, 1, Zer58195), 
LRes56743 = reshape_layer(Zer58195, [4, 4, 1], Res56743), 
LCon38979 = conv2D_transpose_layer(Res56743, 4, 1,[[[[0.664], [0.092], [0.6632]]], [[[0.2946], [0.5672], [0.355]]], [[[0.2916], [0.5562], [0.1172]]], [[[0.8458], [0.8396], [0.2508]]]],[0, 0, 0], 1, 1, false, Con38979), 
LMul65821 = multiply_layer([Con94777,Con38979], Mul65821), 
LRes46982 = reshape_layer(Mul65821, [7, 12], Res46982), 
LMax62900 = maximum_layer([[[[0.6502], [0.4377]]], [[[0.7948], [0.8505]]]], Max62900), 
LMul4582 = multiply_layer([[[[0.7618], [0.2365]]], [[[0.2966], [0.2545]]]], Mul4582), 
LAdd10621 = add_layer([Max62900,Mul4582], Add10621), 
LZer17057 = zero_padding1D_layer(Add10621, 5, 0, Zer17057), 
LCon5456 = concatenate_layer([Zer17057,[[[0.0424, 0.9373, 0.7513, 0.3642, 0.125, 0.1864, 0.3816, 0.4701, 0.1123, 0.7609, 0.8264], [0.5832, 0.5492, 0.3701, 0.9183, 0.8604, 0.7382, 0.5677, 0.6875, 0.5535, 0.9581, 0.0184], [0.4233, 0.0934, 0.2665, 0.1636, 0.3894, 0.4383, 0.8037, 0.6827, 0.2801, 0.812, 0.8916], [0.7125, 0.5771, 0.3596, 0.2439, 0.2635, 0.199, 0.0442, 0.295, 0.6469, 0.2245, 0.3203], [0.9894, 0.0184, 0.0124, 0.7318, 0.3763, 0.3317, 0.7427, 0.6032, 0.0022, 0.0975, 0.2587], [0.4191, 0.4088, 0.3447, 0.105, 0.3229, 0.0042, 0.0966, 0.8212, 0.3993, 0.2025, 0.4865], [0.881, 0.0563, 0.0015, 0.3657, 0.1436, 0.8719, 0.1047, 0.8841, 0.3254, 0.7265, 0.2831]]]], 2, Con5456), 
LSub99951 = subtract_layer(Res46982,Con5456, Sub99951), 
exec_layers([LLoc88722,LMax6430,LCon56086,LAve59318,LRes48826,LGlo1361,LRes56197,LRes13902,LZer95990,LCon94777,LCro67900,LPer81209,LZer58195,LRes56743,LCon38979,LMul65821,LRes46982,LMax62900,LMul4582,LAdd10621,LZer17057,LCon5456,LSub99951],["Loc88722","Max6430","Con56086","Ave59318","Res48826","Glo1361","Res56197","Res13902","Zer95990","Con94777","Cro67900","Per81209","Zer58195","Res56743","Con38979","Mul65821","Res46982","Max62900","Mul4582","Add10621","Zer17057","Con5456","Sub99951"],Sub99951,"Sub99951")

Actual (Unparsed): [[[0.0000000, -0.0424000, -0.9373000, -0.7513000, -0.3642000, -0.1250000, -0.1864000, -0.3816000, -0.4701000, -0.1123000, -0.7609000, -0.8264000], [0.0000000, -0.5577371, -0.0681297, -0.3701000, -0.8703748, -0.2601940, -0.7382000, -0.5142708, 0.1298560, -0.5535000, -0.9171190, 0.7839144], [0.0000000, 0.1988277, 1.1300429, -0.2665000, -0.0506010, -0.2124451, -0.4383000, 0.2896544, 0.7233866, -0.2801000, -0.0910263, 0.1627835], [0.0000000, -0.0486219, -0.4556357, -0.3596000, 1.1497406, 0.4560664, -0.1990000, 0.2479676, -0.0108879, -0.6469000, 0.4935615, 0.1892635], [0.0000000, -0.0991727, 0.3640361, -0.0124000, 0.3816447, -0.0606827, -0.3317000, 0.7567935, -0.5544374, -0.0022000, 0.8437070, 0.1481494], [-1.0207499, 0.1889858, -0.1147411, -0.3447000, 0.8567244, 0.0725219, -0.0042000, 0.6855990, -0.4195505, -0.3993000, -0.0633470, -0.1752541], [-0.9106892, -0.8810000, -0.0563000, -0.0015000, -0.3657000, -0.1436000, -0.8719000, -0.1047000, -0.8841000, -0.3254000, -0.7265000, -0.2831000]]]

Expected (Unparsed): [[[0.0,-0.0424,-0.9373,-0.7513,-0.3642,-0.125,-0.1864,-0.3816,-0.4701,-0.1123,-0.7609,-0.8264],[0.0,-0.557737137,-0.06812964199999993,-0.3701,-0.87037485768,-0.26019394588800004,-0.7382,-0.51427072768,0.12985595884800005,-0.5535,-0.9171189634,0.7839144236800002],[0.0,0.19882771920000009,1.130042969894,-0.2665,-0.050600951135999994,-0.21244511354,-0.4383,0.2896543927680001,0.723386673688,-0.2801,-0.0910263336799998,0.16278351774599997],[0.0,-0.04862188064799988,-0.45563574102999993,-0.3596,1.1497405741000002,0.4560663891399999,-0.199,0.24796762523999993,-0.010887941572000015,-0.6469,0.493561554076,0.18926355304000003],[0.0,-0.09917266519199996,0.36403615955199997,-0.0124,0.3816447621200003,-0.060682645087999976,-0.3317,0.7567933927759997,-0.554437396352,-0.0022,0.843707019168,0.14814941594400005],[-1.0207498799999999,0.18898579937999999,-0.11474107299199998,-0.3447,0.8567244378000001,0.07252188884000005,-0.0042,0.685599016424,-0.41955046124800005,-0.3993,-0.06334699650400002,-0.17525414023999997],[-0.91068925,-0.881,-0.0563,-0.0015,-0.3657,-0.1436,-0.8719,-0.1047,-0.8841,-0.3254,-0.7265,-0.2831]]]

Actual:   [[[0, -0.0424, -0.9373, -0.7513, -0.3642, -0.125, -0.1864, -0.3816, -0.4701, -0.1123, -0.7609, -0.8264], [0, -0.5577, -0.0681, -0.3701, -0.8703, -0.2601, -0.7382, -0.5142, 0.1299, -0.5535, -0.9171, 0.784], [0, 0.1989, 1.1301, -0.2665, -0.0506, -0.2124, -0.4383, 0.2897, 0.7234, -0.2801, -0.091, 0.1628], [0, -0.0486, -0.4556, -0.3596, 1.1498, 0.4561, -0.199, 0.248, -0.0108, -0.6469, 0.4936, 0.1893], [0, -0.0991, 0.3641, -0.0124, 0.3817, -0.0606, -0.3317, 0.7568, -0.5544, -0.0022, 0.8438, 0.1482], [-1.0207, 0.189, -0.1147, -0.3447, 0.8568, 0.0726, -0.0042, 0.6856, -0.4195, -0.3993, -0.0633, -0.1752], [-0.9106, -0.881, -0.0563, -0.0015, -0.3657, -0.1436, -0.8719, -0.1047, -0.8841, -0.3254, -0.7265, -0.2831]]]

Expected: [[[0, -0.0424, -0.9373, -0.7513, -0.3642, -0.125, -0.1864, -0.3816, -0.4701, -0.1123, -0.7609, -0.8264], [0, -0.5577, -0.0681, -0.3701, -0.8703, -0.2601, -0.7382, -0.5142, 0.1299, -0.5535, -0.9171, 0.784], [0, 0.1989, 1.1301, -0.2665, -0.0506, -0.2124, -0.4383, 0.2897, 0.7234, -0.2801, -0.091, 0.1628], [0, -0.0486, -0.4556, -0.3596, 1.1498, 0.4561, -0.199, 0.248, -0.0108, -0.6469, 0.4936, 0.1893], [0, -0.0991, 0.3641, -0.0124, 0.3817, -0.0606, -0.3317, 0.7568, -0.5544, -0.0022, 0.8438, 0.1482], [-1.0207, 0.189, -0.1147, -0.3447, 0.8568, 0.0726, -0.0042, 0.6856, -0.4195, -0.3993, -0.0633, -0.1752], [-0.9106, -0.881, -0.0563, -0.0015, -0.3657, -0.1436, -0.8719, -0.1047, -0.8841, -0.3254, -0.7265, -0.2831]]]