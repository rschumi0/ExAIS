import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Mul44186 = tf.keras.layers.Input(shape=([2, 1]))
in1Mul44186 = tf.keras.layers.Input(shape=([2, 1]))
in0Con75021 = tf.keras.layers.Input(shape=([2, 1]))
in0Min97252 = tf.keras.layers.Input(shape=([1, 1]))
in1Min97252 = tf.keras.layers.Input(shape=([1, 1]))
in0Con1497 = tf.keras.layers.Input(shape=([2, 1]))
in0Max77778 = tf.keras.layers.Input(shape=([2, 2]))
in1Max77778 = tf.keras.layers.Input(shape=([2, 2]))
in0PRe33314 = tf.keras.layers.Input(shape=([1, 1]))
in0Con73852 = tf.keras.layers.Input(shape=([2, 1]))

Mul44186 = keras.layers.Multiply(name = 'Mul44186', )([in0Mul44186,in1Mul44186])
Con75021 = keras.layers.Concatenate(axis=2, name = 'Con75021', )([Mul44186,in0Con75021])
Min97252 = keras.layers.Minimum(name = 'Min97252', )([in0Min97252,in1Min97252])
Zer66325 = keras.layers.ZeroPadding1D(padding=((1, 0)), name = 'Zer66325', )(Min97252)
Con1497 = keras.layers.Concatenate(axis=2, name = 'Con1497', )([Zer66325,in0Con1497])
Max77778 = keras.layers.Maximum(name = 'Max77778', )([in0Max77778,in1Max77778])
PRe33314 = keras.layers.PReLU(name = 'PRe33314', input_shape=(1, 1))(in0PRe33314)
Zer84940 = keras.layers.ZeroPadding1D(padding=((1, 0)), name = 'Zer84940', )(PRe33314)
Con73852 = keras.layers.Concatenate(axis=2, name = 'Con73852', )([Zer84940,in0Con73852])
Mul4035 = keras.layers.Multiply(name = 'Mul4035', )([Max77778,Con73852])
Up_590 = keras.layers.UpSampling1D(size=(1), name = 'Up_590', )(Mul4035)
Sub34429 = keras.layers.Subtract(name = 'Sub34429', )([Con1497,Up_590])
Sub65083 = keras.layers.Subtract(name = 'Sub65083', )([Con75021,Sub34429])
model = tf.keras.models.Model(inputs=[in0Mul44186,in1Mul44186,in0Con75021,in0Min97252,in1Min97252,in0Con1497,in0Max77778,in1Max77778,in0PRe33314,in0Con73852], outputs=Sub65083)
w = model.get_layer('PRe33314').get_weights() 
w[0] = np.array([[0.1113]])
model.get_layer('PRe33314').set_weights(w) 
in0Mul44186 = tf.constant([[[0.2277], [0.699]]])
in1Mul44186 = tf.constant([[[0.33], [0.1042]]])
in0Con75021 = tf.constant([[[0.4353], [0.1927]]])
in0Min97252 = tf.constant([[[0.9736]]])
in1Min97252 = tf.constant([[[0.6316]]])
in0Con1497 = tf.constant([[[0.876], [0.971]]])
in0Max77778 = tf.constant([[[0.6342, 0.7812], [0.9193, 0.606]]])
in1Max77778 = tf.constant([[[0.2679, 0.5626], [0.7887, 0.1139]]])
in0PRe33314 = tf.constant([[[0.1221]]])
in0Con73852 = tf.constant([[[0.6625], [0.0751]]])
print (np.array2string(model.predict([in0Mul44186,in1Mul44186,in0Con75021,in0Min97252,in1Min97252,in0Con1497,in0Max77778,in1Max77778,in0PRe33314,in0Con73852],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Sub65083.png')

LMul44186 = multiply_layer([[[[0.2277], [0.699]]], [[[0.33], [0.1042]]]], Mul44186), 
LCon75021 = concatenate_layer([Mul44186,[[[0.4353], [0.1927]]]], 2, Con75021), 
LMin97252 = minimum_layer([[[[0.9736]]], [[[0.6316]]]], Min97252), 
LZer66325 = zero_padding1D_layer(Min97252, 1, 0, Zer66325), 
LCon1497 = concatenate_layer([Zer66325,[[[0.876], [0.971]]]], 2, Con1497), 
LMax77778 = maximum_layer([[[[0.6342, 0.7812], [0.9193, 0.606]]], [[[0.2679, 0.5626], [0.7887, 0.1139]]]], Max77778), 
LPRe33314 = prelu_layer([[[0.1221]]], [[0.1113]], PRe33314), 
LZer84940 = zero_padding1D_layer(PRe33314, 1, 0, Zer84940), 
LCon73852 = concatenate_layer([Zer84940,[[[0.6625], [0.0751]]]], 2, Con73852), 
LMul4035 = multiply_layer([Max77778,Con73852], Mul4035), 
LUp_590 = up_sampling1D_layer(Mul4035, 1, Up_590), 
LSub34429 = subtract_layer(Con1497,Up_590, Sub34429), 
LSub65083 = subtract_layer(Con75021,Sub34429, Sub65083), 
exec_layers([LMul44186,LCon75021,LMin97252,LZer66325,LCon1497,LMax77778,LPRe33314,LZer84940,LCon73852,LMul4035,LUp_590,LSub34429,LSub65083],["Mul44186","Con75021","Min97252","Zer66325","Con1497","Max77778","PRe33314","Zer84940","Con73852","Mul4035","Up_590","Sub34429","Sub65083"],Sub65083,"Sub65083")

Actual (Unparsed): [[[0.0751410, 0.0768450], [-0.4465177, -0.7327894]]]

Expected (Unparsed): [[[0.07514100000000001,0.07684500000000005],[-0.4465176700000001,-0.7327894]]]

Actual:   [[[0.0752, 0.0769], [-0.4465, -0.7327]]]

Expected: [[[0.0752, 0.0769], [-0.4465, -0.7327]]]