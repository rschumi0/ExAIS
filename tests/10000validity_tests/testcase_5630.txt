import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Ave29273 = tf.keras.layers.Input(shape=([1, 1]))
in1Ave29273 = tf.keras.layers.Input(shape=([1, 1]))

Ave29273 = keras.layers.Average(name = 'Ave29273', )([in0Ave29273,in1Ave29273])
Bat22041 = keras.layers.BatchNormalization(axis=1, epsilon=0.27473404393642864,  name = 'Bat22041', )(Ave29273)
GRU49053 = keras.layers.GRU(1,reset_after=True, recurrent_activation='sigmoid', name = 'GRU49053', )(Bat22041)
model = tf.keras.models.Model(inputs=[in0Ave29273,in1Ave29273], outputs=GRU49053)
w = model.get_layer('Bat22041').get_weights() 
w[0] = np.array([0.3623])
w[1] = np.array([0.1535])
w[2] = np.array([0.1232])
w[3] = np.array([0.6254])
model.get_layer('Bat22041').set_weights(w) 
w = model.get_layer('GRU49053').get_weights() 
w[0] = np.array([[10, 2, 4]])
w[1] = np.array([[4, 9, 1]])
w[2] = np.array([[3, 2, 9], [9, 10, 3]])
model.get_layer('GRU49053').set_weights(w) 
in0Ave29273 = tf.constant([[[0.3438]]])
in1Ave29273 = tf.constant([[[0.9199]]])
print (np.array2string(model.predict([in0Ave29273,in1Ave29273],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='GRU49053.png')

LAve29273 = average_layer([[[[0.3438]]], [[[0.9199]]]], Ave29273), 
LBat22041 = batch_normalization_layer(Ave29273, 1, 0.27473404393642864, [0.3623], [0.1535], [0.1232], [0.6254], Bat22041), 
LGRU49053 = gru_layer(Bat22041,[[10, 2, 4]],[[4, 9, 1]],[[3, 2, 9], [9, 10, 3]], true, GRU49053), 
exec_layers([LAve29273,LBat22041,LGRU49053],["Ave29273","Bat22041","GRU49053"],GRU49053,"GRU49053")

Actual (Unparsed): [[0.0000002]]

Expected (Unparsed): [[1.8978416904591546e-7]]

Actual:   [[0]]

Expected: [[0]]