import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Min86403 = tf.keras.layers.Input(shape=([1, 1, 2]))
in1Min86403 = tf.keras.layers.Input(shape=([1, 1, 2]))
in0Con47145 = tf.keras.layers.Input(shape=([2, 3, 3, 2]))
in0Sub14111 = tf.keras.layers.Input(shape=([2, 3, 3, 3]))
in1Sub14111 = tf.keras.layers.Input(shape=([2, 3, 3, 3]))

Min86403 = keras.layers.Minimum(name = 'Min86403', )([in0Min86403,in1Min86403])
Zer53265 = keras.layers.ZeroPadding2D(padding=((1, 1), (1, 1)), name = 'Zer53265', )(Min86403)
Con24198 = keras.layers.Conv2D(4, (2, 2),strides=(1, 1), padding='valid', dilation_rate=(1, 1), name = 'Con24198', )(Zer53265)
Res31376 = keras.layers.Reshape((2, 2, 4, 1), name = 'Res31376', )(Con24198)
Cro76829 = keras.layers.Cropping3D(cropping=((1, 0), (0, 1), (2, 1)), name = 'Cro76829', )(Res31376)
Zer94181 = keras.layers.ZeroPadding3D(padding=((1, 0), (2, 0), (2, 0)), name = 'Zer94181', )(Cro76829)
Con47145 = keras.layers.Concatenate(axis=4, name = 'Con47145', )([Zer94181,in0Con47145])
Sub14111 = keras.layers.Subtract(name = 'Sub14111', )([in0Sub14111,in1Sub14111])
Ave19840 = keras.layers.Average(name = 'Ave19840', )([Con47145,Sub14111])
Res82782 = keras.layers.Reshape((2, 3, 9), name = 'Res82782', )(Ave19840)
Res3177 = keras.layers.Reshape((2, 27), name = 'Res3177', )(Res82782)
LST23975 = keras.layers.LSTM(1,recurrent_activation='sigmoid', name = 'LST23975', )(Res3177)
model = tf.keras.models.Model(inputs=[in0Min86403,in1Min86403,in0Con47145,in0Sub14111,in1Sub14111], outputs=LST23975)
w = model.get_layer('Con24198').get_weights() 
w[0] = np.array([[[[0.364, 0.1805, 0.1442, 0.5246], [0.7897, 0.637, 0.6974, 0.461]], [[0.0908, 0.2329, 0.4824, 0.9902], [0.9175, 0.4173, 0.859, 0.9894]]], [[[0.5746, 0.6175, 0.4044, 0.5047], [0.8818, 0.9314, 0.6085, 0.295]], [[0.2768, 0.087, 0.6861, 0.0953], [0.9109, 0.0301, 0.5009, 0.8956]]]])
w[1] = np.array([0, 0, 0, 0])
model.get_layer('Con24198').set_weights(w) 
w = model.get_layer('LST23975').get_weights() 
w[0] = np.array([[1, 1, 8, 6], [3, 10, 5, 1], [10, 9, 7, 5], [10, 1, 4, 8], [5, 10, 1, 4], [4, 9, 2, 8], [1, 3, 6, 1], [2, 10, 6, 10], [7, 1, 5, 10], [4, 2, 4, 5], [4, 8, 4, 10], [7, 6, 6, 6], [5, 7, 7, 8], [7, 8, 7, 7], [5, 6, 8, 6], [6, 8, 4, 3], [10, 7, 10, 7], [4, 5, 4, 7], [5, 4, 6, 3], [10, 2, 5, 10], [1, 3, 10, 8], [2, 2, 10, 4], [9, 8, 3, 8], [2, 6, 10, 5], [9, 9, 2, 9], [4, 7, 2, 6], [7, 8, 3, 6]])
w[1] = np.array([[2, 3, 9, 10]])
w[2] = np.array([1, 6, 7, 4])
model.get_layer('LST23975').set_weights(w) 
in0Min86403 = tf.constant([[[[0.5824, 0.5523]]]])
in1Min86403 = tf.constant([[[[0.5494, 0.8359]]]])
in0Con47145 = tf.constant([[[[[0.106, 0.1756], [0.2864, 0.774], [0.1762, 0.4455]], [[0.6593, 0.1797], [0.9805, 0.7213], [0.6694, 0.0306]], [[0.9506, 0.0189], [0.6527, 0.7234], [0.9883, 0.508]]], [[[0.9309, 0.6737], [0.2965, 0.2602], [0.0637, 0.7248]], [[0.2423, 0.3461], [0.5407, 0.5556], [0.763, 0.24]], [[0.8799, 0.3336], [0.9347, 0.5731], [0.7264, 0.085]]]]])
in0Sub14111 = tf.constant([[[[[0.7215, 0.6334, 0.9431], [0.8045, 0.9719, 0.3804], [0.8573, 0.9809, 0.6273]], [[0.8517, 0.7645, 0.3743], [0.3397, 0.042, 0.4859], [0.4302, 0.6908, 0.8092]], [[0.0772, 0.9873, 0.0158], [0.2059, 0.5172, 0.4397], [0.5018, 0.0585, 0.2235]]], [[[0.2481, 0.4691, 0.9351], [0.1956, 0.7587, 0.658], [0.2225, 0.8875, 0.883]], [[0.291, 0.8943, 0.7541], [0.567, 0.6556, 0.6909], [0.7782, 0.1369, 0.9641]], [[0.8585, 0.1896, 0.5445], [0.2859, 0.2946, 0.0141], [0.2582, 0.4185, 0.9362]]]]])
in1Sub14111 = tf.constant([[[[[0.055, 0.0445, 0.6664], [0.4916, 0.4015, 0.1671], [0.6319, 0.1646, 0.5833]], [[0.5951, 0.2845, 0.8499], [0.0465, 0.657, 0.7749], [0.3884, 0.7112, 0.1998]], [[0.684, 0.862, 0.9936], [0.7257, 0.658, 0.5819], [0.8177, 0.1607, 0.6722]]], [[[0.3772, 0.8315, 0.8842], [0.4816, 0.0254, 0.2449], [0.3973, 0.1774, 0.1864]], [[0.4577, 0.5402, 0.1445], [0.994, 0.9163, 0.4826], [0.1349, 0.5437, 0.4429]], [[0.8056, 0.6156, 0.8713], [0.621, 0.8703, 0.0307], [0.6616, 0.6871, 0.3237]]]]])
print (np.array2string(model.predict([in0Min86403,in1Min86403,in0Con47145,in0Sub14111,in1Sub14111],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='LST23975.png')

LMin86403 = minimum_layer([[[[[0.5824, 0.5523]]]], [[[[0.5494, 0.8359]]]]], Min86403), 
LZer53265 = zero_padding2D_layer(Min86403, 1, 1, 1, 1, Zer53265), 
LCon24198 = conv2D_layer(Zer53265, 2, 2,[[[[0.364, 0.1805, 0.1442, 0.5246], [0.7897, 0.637, 0.6974, 0.461]], [[0.0908, 0.2329, 0.4824, 0.9902], [0.9175, 0.4173, 0.859, 0.9894]]], [[[0.5746, 0.6175, 0.4044, 0.5047], [0.8818, 0.9314, 0.6085, 0.295]], [[0.2768, 0.087, 0.6861, 0.0953], [0.9109, 0.0301, 0.5009, 0.8956]]]],[0, 0, 0, 0], 1, 1, false, 1, 1, Con24198), 
LRes31376 = reshape_layer(Con24198, [2, 2, 4, 1], Res31376), 
LCro76829 = cropping3D_layer(Res31376, 1, 0, 0, 1, 2, 1, Cro76829), 
LZer94181 = zero_padding3D_layer(Cro76829, 1, 0, 2, 0, 2, 0, Zer94181), 
LCon47145 = concatenate_layer([Zer94181,[[[[[0.106, 0.1756], [0.2864, 0.774], [0.1762, 0.4455]], [[0.6593, 0.1797], [0.9805, 0.7213], [0.6694, 0.0306]], [[0.9506, 0.0189], [0.6527, 0.7234], [0.9883, 0.508]]], [[[0.9309, 0.6737], [0.2965, 0.2602], [0.0637, 0.7248]], [[0.2423, 0.3461], [0.5407, 0.5556], [0.763, 0.24]], [[0.8799, 0.3336], [0.9347, 0.5731], [0.7264, 0.085]]]]]], 4, Con47145), 
LSub14111 = subtract_layer([[[[[0.7215, 0.6334, 0.9431], [0.8045, 0.9719, 0.3804], [0.8573, 0.9809, 0.6273]], [[0.8517, 0.7645, 0.3743], [0.3397, 0.042, 0.4859], [0.4302, 0.6908, 0.8092]], [[0.0772, 0.9873, 0.0158], [0.2059, 0.5172, 0.4397], [0.5018, 0.0585, 0.2235]]], [[[0.2481, 0.4691, 0.9351], [0.1956, 0.7587, 0.658], [0.2225, 0.8875, 0.883]], [[0.291, 0.8943, 0.7541], [0.567, 0.6556, 0.6909], [0.7782, 0.1369, 0.9641]], [[0.8585, 0.1896, 0.5445], [0.2859, 0.2946, 0.0141], [0.2582, 0.4185, 0.9362]]]]], [[[[[0.055, 0.0445, 0.6664], [0.4916, 0.4015, 0.1671], [0.6319, 0.1646, 0.5833]], [[0.5951, 0.2845, 0.8499], [0.0465, 0.657, 0.7749], [0.3884, 0.7112, 0.1998]], [[0.684, 0.862, 0.9936], [0.7257, 0.658, 0.5819], [0.8177, 0.1607, 0.6722]]], [[[0.3772, 0.8315, 0.8842], [0.4816, 0.0254, 0.2449], [0.3973, 0.1774, 0.1864]], [[0.4577, 0.5402, 0.1445], [0.994, 0.9163, 0.4826], [0.1349, 0.5437, 0.4429]], [[0.8056, 0.6156, 0.8713], [0.621, 0.8703, 0.0307], [0.6616, 0.6871, 0.3237]]]]], Sub14111), 
LAve19840 = average_layer([Con47145,Sub14111], Ave19840), 
LRes82782 = reshape_layer(Ave19840, [2, 3, 9], Res82782), 
LRes3177 = reshape_layer(Res82782, [2, 27], Res3177), 
LLST23975 = lstm_layer(Res3177,[[1, 1, 8, 6], [3, 10, 5, 1], [10, 9, 7, 5], [10, 1, 4, 8], [5, 10, 1, 4], [4, 9, 2, 8], [1, 3, 6, 1], [2, 10, 6, 10], [7, 1, 5, 10], [4, 2, 4, 5], [4, 8, 4, 10], [7, 6, 6, 6], [5, 7, 7, 8], [7, 8, 7, 7], [5, 6, 8, 6], [6, 8, 4, 3], [10, 7, 10, 7], [4, 5, 4, 7], [5, 4, 6, 3], [10, 2, 5, 10], [1, 3, 10, 8], [2, 2, 10, 4], [9, 8, 3, 8], [2, 6, 10, 5], [9, 9, 2, 9], [4, 7, 2, 6], [7, 8, 3, 6]],[[2, 3, 9, 10]],[1, 6, 7, 4], LST23975), 
exec_layers([LMin86403,LZer53265,LCon24198,LRes31376,LCro76829,LZer94181,LCon47145,LSub14111,LAve19840,LRes82782,LRes3177,LLST23975],["Min86403","Zer53265","Con24198","Res31376","Cro76829","Zer94181","Con47145","Sub14111","Ave19840","Res82782","Res3177","LST23975"],LST23975,"LST23975")

Actual (Unparsed): [[0.9640276]]

Expected (Unparsed): [[0.9640275800757978]]

Actual:   [[0.9641]]

Expected: [[0.9641]]