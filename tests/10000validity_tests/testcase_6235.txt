import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Ave46648 = tf.keras.layers.Input(shape=([2, 1, 2, 2]))
in1Ave46648 = tf.keras.layers.Input(shape=([2, 1, 2, 2]))
in0Min71349 = tf.keras.layers.Input(shape=([1, 1, 1]))
in1Min71349 = tf.keras.layers.Input(shape=([1, 1, 1]))
in0Con56796 = tf.keras.layers.Input(shape=([1, 1, 3]))

Ave46648 = keras.layers.Average(name = 'Ave46648', )([in0Ave46648,in1Ave46648])
Res68998 = keras.layers.Reshape((2, 1, 4), name = 'Res68998', )(Ave46648)
Max9231 = keras.layers.MaxPool2D(pool_size=(2, 1), name = 'Max9231', )(Res68998)
Min71349 = keras.layers.Minimum(name = 'Min71349', )([in0Min71349,in1Min71349])
Con56796 = keras.layers.Concatenate(axis=3, name = 'Con56796', )([Min71349,in0Con56796])
Sub46754 = keras.layers.Subtract(name = 'Sub46754', )([Max9231,Con56796])
Res83122 = keras.layers.Reshape((1, 4), name = 'Res83122', )(Sub46754)
Ave80357 = keras.layers.AveragePooling1D(pool_size=(1), strides=(2), padding='same', name = 'Ave80357', )(Res83122)
Fla76787 = keras.layers.Flatten(name = 'Fla76787', )(Ave80357)
model = tf.keras.models.Model(inputs=[in0Ave46648,in1Ave46648,in0Min71349,in1Min71349,in0Con56796], outputs=Fla76787)
in0Ave46648 = tf.constant([[[[[0.3864, 0.0953], [0.8898, 0.9499]]], [[[0.4006, 0.6173], [0.2149, 0.4988]]]]])
in1Ave46648 = tf.constant([[[[[0.3436, 0.7029], [0.083, 0.6886]]], [[[0.7285, 0.0341], [0.3364, 0.9564]]]]])
in0Min71349 = tf.constant([[[[0.679]]]])
in1Min71349 = tf.constant([[[[0.4406]]]])
in0Con56796 = tf.constant([[[[0.0113, 0.2507, 0.025]]]])
print (np.array2string(model.predict([in0Ave46648,in1Ave46648,in0Min71349,in1Min71349,in0Con56796],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Fla76787.png')

LAve46648 = average_layer([[[[[[0.3864, 0.0953], [0.8898, 0.9499]]], [[[0.4006, 0.6173], [0.2149, 0.4988]]]]], [[[[[0.3436, 0.7029], [0.083, 0.6886]]], [[[0.7285, 0.0341], [0.3364, 0.9564]]]]]], Ave46648), 
LRes68998 = reshape_layer(Ave46648, [2, 1, 4], Res68998), 
LMax9231 = max_pool2D_layer(Res68998, 2, 1, Max9231), 
LMin71349 = minimum_layer([[[[[0.679]]]], [[[[0.4406]]]]], Min71349), 
LCon56796 = concatenate_layer([Min71349,[[[[0.0113, 0.2507, 0.025]]]]], 3, Con56796), 
LSub46754 = subtract_layer(Max9231,Con56796, Sub46754), 
LRes83122 = reshape_layer(Sub46754, [1, 4], Res83122), 
LAve80357 = average_pooling1D_layer(Res83122, 1, 2, true, Ave80357), 
LFla76787 = flatten_layer(Ave80357, Fla76787), 
exec_layers([LAve46648,LRes68998,LMax9231,LMin71349,LCon56796,LSub46754,LRes83122,LAve80357,LFla76787],["Ave46648","Res68998","Max9231","Min71349","Con56796","Sub46754","Res83122","Ave80357","Fla76787"],Fla76787,"Fla76787")

Actual (Unparsed): [[0.1239500, 0.3878000, 0.2357000, 0.7942500]]

Expected (Unparsed): [[0.12395,0.38780000000000003,0.23570000000000002,0.79425]]

Actual:   [[0.124, 0.3878, 0.2357, 0.7943]]

Expected: [[0.124, 0.3879, 0.2358, 0.7943]]