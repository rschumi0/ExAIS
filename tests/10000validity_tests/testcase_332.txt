import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Min94591 = tf.keras.layers.Input(shape=([2, 2, 1]))
in1Min94591 = tf.keras.layers.Input(shape=([2, 2, 1]))
in0Mul82245 = tf.keras.layers.Input(shape=([2, 2, 2]))
in1Mul82245 = tf.keras.layers.Input(shape=([2, 2, 2]))
in0Con72759 = tf.keras.layers.Input(shape=([2, 2, 2]))

Min94591 = keras.layers.Minimum(name = 'Min94591', )([in0Min94591,in1Min94591])
Res98346 = keras.layers.Reshape((2, 2, 1, 1), name = 'Res98346', )(Min94591)
Con71941 = keras.layers.Conv3D(4, (1, 2, 1),strides=(1, 1, 1), padding='valid', dilation_rate=(1, 1, 1), name = 'Con71941', )(Res98346)
Res90702 = keras.layers.Reshape((2, 1, 4), name = 'Res90702', )(Con71941)
Zer84271 = keras.layers.ZeroPadding2D(padding=((0, 0), (1, 0)), name = 'Zer84271', )(Res90702)
Mul82245 = keras.layers.Multiply(name = 'Mul82245', )([in0Mul82245,in1Mul82245])
Con72759 = keras.layers.Concatenate(axis=3, name = 'Con72759', )([Mul82245,in0Con72759])
Add98265 = keras.layers.Add(name = 'Add98265', )([Zer84271,Con72759])
Res20536 = keras.layers.Reshape((2, 2, 4, 1), name = 'Res20536', )(Add98265)
Glo29278 = keras.layers.GlobalMaxPool3D(name = 'Glo29278', )(Res20536)
model = tf.keras.models.Model(inputs=[in0Min94591,in1Min94591,in0Mul82245,in1Mul82245,in0Con72759], outputs=Glo29278)
w = model.get_layer('Con71941').get_weights() 
w[0] = np.array([[[[[0.5598, 0.01, 0.7113, 0.1022]]], [[[0.3733, 0.6361, 0.0881, 0.5207]]]]])
w[1] = np.array([0, 0, 0, 0])
model.get_layer('Con71941').set_weights(w) 
in0Min94591 = tf.constant([[[[0.3733], [0.5346]], [[0.6285], [0.4415]]]])
in1Min94591 = tf.constant([[[[0.3442], [0.5517]], [[0.1329], [0.1315]]]])
in0Mul82245 = tf.constant([[[[0.5237, 0.5698], [0.8392, 0.9022]], [[0.9258, 0.5395], [0.1566, 0.9212]]]])
in1Mul82245 = tf.constant([[[[0.7348, 0.4024], [0.8315, 0.0051]], [[0.5688, 0.2338], [0.8482, 0.6493]]]])
in0Con72759 = tf.constant([[[[0.054, 0.1465], [0.6299, 0.0968]], [[0.2582, 0.9414], [0.5381, 0.5363]]]])
print (np.array2string(model.predict([in0Min94591,in1Min94591,in0Mul82245,in1Mul82245,in0Con72759],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Glo29278.png')

LMin94591 = minimum_layer([[[[[0.3733], [0.5346]], [[0.6285], [0.4415]]]], [[[[0.3442], [0.5517]], [[0.1329], [0.1315]]]]], Min94591), 
LRes98346 = reshape_layer(Min94591, [2, 2, 1, 1], Res98346), 
LCon71941 = conv3D_layer(Res98346, 1, 2, 1,[[[[[0.5598, 0.01, 0.7113, 0.1022]]], [[[0.3733, 0.6361, 0.0881, 0.5207]]]]],[0, 0, 0, 0], 1, 1, 1, false, 1, 1, 1, Con71941), 
LRes90702 = reshape_layer(Con71941, [2, 1, 4], Res90702), 
LZer84271 = zero_padding2D_layer(Res90702, 0, 0, 1, 0, Zer84271), 
LMul82245 = multiply_layer([[[[[0.5237, 0.5698], [0.8392, 0.9022]], [[0.9258, 0.5395], [0.1566, 0.9212]]]], [[[[0.7348, 0.4024], [0.8315, 0.0051]], [[0.5688, 0.2338], [0.8482, 0.6493]]]]], Mul82245), 
LCon72759 = concatenate_layer([Mul82245,[[[[0.054, 0.1465], [0.6299, 0.0968]], [[0.2582, 0.9414], [0.5381, 0.5363]]]]], 3, Con72759), 
LAdd98265 = add_layer([Zer84271,Con72759], Add98265), 
LRes20536 = reshape_layer(Add98265, [2, 2, 4, 1], Res20536), 
LGlo29278 = global_max_pool3D_layer(Res20536, Glo29278), 
exec_layers([LMin94591,LRes98346,LCon71941,LRes90702,LZer84271,LMul82245,LCon72759,LAdd98265,LRes20536,LGlo29278],["Min94591","Res98346","Con71941","Res90702","Zer84271","Mul82245","Con72759","Add98265","Res20536","Glo29278"],Glo29278,"Glo29278")

Actual (Unparsed): [[1.0900442]]

Expected (Unparsed): [[1.0900441399999998]]

Actual:   [[1.0901]]

Expected: [[1.0901]]