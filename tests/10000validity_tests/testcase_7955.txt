import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Add27016 = tf.keras.layers.Input(shape=([1, 2]))
in1Add27016 = tf.keras.layers.Input(shape=([1, 2]))
in0Con89337 = tf.keras.layers.Input(shape=([2, 1, 2]))
in0Con33029 = tf.keras.layers.Input(shape=([2, 2]))
in0Con50071 = tf.keras.layers.Input(shape=([2, 7]))
in0Sof20185 = tf.keras.layers.Input(shape=([1, 2, 2]))
in0Con88108 = tf.keras.layers.Input(shape=([1, 1]))
in0Cro55585 = tf.keras.layers.Input(shape=([4, 3, 1]))
in0Con96717 = tf.keras.layers.Input(shape=([5]))

Add27016 = keras.layers.Add(name = 'Add27016', )([in0Add27016,in1Add27016])
Con89337 = keras.layers.Conv2D(4, (2, 1),strides=(11, 4), padding='same', dilation_rate=(1, 1), name = 'Con89337', )(in0Con89337)
Res47843 = keras.layers.Reshape((1, 4), name = 'Res47843', )(Con89337)
Dot18598 = keras.layers.Dot(axes=(1, 1), name = 'Dot18598', )([Add27016,Res47843])
Fla84088 = keras.layers.Flatten(name = 'Fla84088', )(Dot18598)
Con33029 = keras.layers.Conv1D(2, (2),strides=(1), padding='same', dilation_rate=(1), name = 'Con33029', )(in0Con33029)
Con50071 = keras.layers.Concatenate(axis=2, name = 'Con50071', )([Con33029,in0Con50071])
Sof20185 = keras.layers.Softmax(axis=1, name = 'Sof20185', input_shape=(1, 2, 2))(in0Sof20185)
Res47606 = keras.layers.Reshape((1, 4), name = 'Res47606', )(Sof20185)
Con88108 = keras.layers.Concatenate(axis=2, name = 'Con88108', )([Res47606,in0Con88108])
Cro55585 = keras.layers.Cropping2D(cropping=((1, 2), (0, 0)), name = 'Cro55585', )(in0Cro55585)
Res44527 = keras.layers.Reshape((1, 3), name = 'Res44527', )(Cro55585)
Dot63168 = keras.layers.Dot(axes=(1, 1), name = 'Dot63168', )([Con88108,Res44527])
Res50767 = keras.layers.Reshape((5, 3, 1), name = 'Res50767', )(Dot63168)
Con51148 = keras.layers.Conv2DTranspose(3, (3, 3),strides=(1, 1), padding='same', name = 'Con51148', )(Res50767)
Res16535 = keras.layers.Reshape((5, 9), name = 'Res16535', )(Con51148)
Dot23700 = keras.layers.Dot(axes=(2, 2), name = 'Dot23700', )([Con50071,Res16535])
LST49383 = keras.layers.LSTM(3,recurrent_activation='sigmoid', name = 'LST49383', )(Dot23700)
Con96717 = keras.layers.Concatenate(axis=1, name = 'Con96717', )([LST49383,in0Con96717])
Min35447 = keras.layers.Minimum(name = 'Min35447', )([Fla84088,Con96717])
model = tf.keras.models.Model(inputs=[in0Add27016,in1Add27016,in0Con89337,in0Con33029,in0Con50071,in0Sof20185,in0Con88108,in0Cro55585,in0Con96717], outputs=Min35447)
w = model.get_layer('Con89337').get_weights() 
w[0] = np.array([[[[0.4672, 0.7963, 0.6261, 0.5193], [0.1707, 0.2906, 0.9197, 0.5187]]], [[[0.3418, 0.5919, 0.593, 0.0316], [0.1122, 0.602, 0.1595, 0.3581]]]])
w[1] = np.array([0, 0, 0, 0])
model.get_layer('Con89337').set_weights(w) 
w = model.get_layer('Con33029').get_weights() 
w[0] = np.array([[[0.2161, 0.8772], [0.7364, 0.2608]], [[0.6468, 0.638], [0.1703, 0.2415]]])
w[1] = np.array([0, 0])
model.get_layer('Con33029').set_weights(w) 
w = model.get_layer('Con51148').get_weights() 
w[0] = np.array([[[[0.3713], [0.5236], [0.6346]], [[0.3272], [0.503], [0.0313]], [[0.2274], [0.1945], [0.2761]]], [[[0.7699], [0.4805], [0.0546]], [[0.686], [0.6766], [0.5673]], [[0.7327], [0.3786], [0.3575]]], [[[0.7109], [0.699], [0.9171]], [[0.7103], [0.89], [0.765]], [[0.8395], [0.7312], [0.6683]]]])
w[1] = np.array([0, 0, 0])
model.get_layer('Con51148').set_weights(w) 
w = model.get_layer('LST49383').get_weights() 
w[0] = np.array([[2, 8, 5, 6, 5, 8, 2, 9, 9, 5, 1, 4], [3, 2, 10, 8, 9, 2, 6, 3, 7, 10, 5, 4], [5, 2, 9, 1, 5, 5, 4, 3, 4, 1, 3, 1], [5, 9, 6, 5, 6, 9, 1, 4, 1, 4, 5, 3], [5, 8, 1, 7, 4, 3, 8, 7, 1, 5, 1, 3]])
w[1] = np.array([[4, 10, 1, 6, 3, 5, 1, 7, 9, 6, 9, 4], [5, 3, 10, 9, 8, 3, 5, 10, 10, 3, 10, 9], [6, 4, 9, 9, 10, 3, 5, 4, 4, 5, 8, 5]])
w[2] = np.array([4, 9, 2, 2, 9, 9, 5, 4, 10, 8, 10, 6])
model.get_layer('LST49383').set_weights(w) 
in0Add27016 = tf.constant([[[0.0667, 0.73]]])
in1Add27016 = tf.constant([[[0.3719, 0.5082]]])
in0Con89337 = tf.constant([[[[0.5192, 0.7797]], [[0.659, 0.5105]]]])
in0Con33029 = tf.constant([[[0.8555, 0.1248], [0.9262, 0.2512]]])
in0Con50071 = tf.constant([[[0.1078, 0.5091, 0.4719, 0.1554, 0.8166, 0.6112, 0.5833], [0.8346, 0.4121, 0.5954, 0.6106, 0.0609, 0.8734, 0.4666]]])
in0Sof20185 = tf.constant([[[[0.4606, 0.1149], [0.1434, 0.4431]]]])
in0Con88108 = tf.constant([[[0.0171]]])
in0Cro55585 = tf.constant([[[[1.9781], [1.9834], [1.389]], [[1.1587], [1.5999], [1.5068]], [[1.8281], [1.5768], [1.222]], [[1.0231], [1.702], [1.1188]]]])
in0Con96717 = tf.constant([[0.3033, 0.6505, 0.0355, 0.9605, 0.6798]])
print (np.array2string(model.predict([in0Add27016,in1Add27016,in0Con89337,in0Con33029,in0Con50071,in0Sof20185,in0Con88108,in0Cro55585,in0Con96717],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Min35447.png')

LAdd27016 = add_layer([[[[0.0667, 0.73]]], [[[0.3719, 0.5082]]]], Add27016), 
LCon89337 = conv2D_layer([[[[0.5192, 0.7797]], [[0.659, 0.5105]]]], 2, 1,[[[[0.4672, 0.7963, 0.6261, 0.5193], [0.1707, 0.2906, 0.9197, 0.5187]]], [[[0.3418, 0.5919, 0.593, 0.0316], [0.1122, 0.602, 0.1595, 0.3581]]]],[0, 0, 0, 0], 11, 4, true, 1, 1, Con89337), 
LRes47843 = reshape_layer(Con89337, [1, 4], Res47843), 
LDot18598 = dot_layer(Add27016,Res47843, 1, 1, Dot18598), 
LFla84088 = flatten_layer(Dot18598, Fla84088), 
LCon33029 = conv1D_layer([[[0.8555, 0.1248], [0.9262, 0.2512]]], 2,[[[0.2161, 0.8772], [0.7364, 0.2608]], [[0.6468, 0.638], [0.1703, 0.2415]]],[0, 0], 1, true, 1, Con33029), 
LCon50071 = concatenate_layer([Con33029,[[[0.1078, 0.5091, 0.4719, 0.1554, 0.8166, 0.6112, 0.5833], [0.8346, 0.4121, 0.5954, 0.6106, 0.0609, 0.8734, 0.4666]]]], 2, Con50071), 
LSof20185 = softmax_layer([[[[0.4606, 0.1149], [0.1434, 0.4431]]]], 1, Sof20185), 
LRes47606 = reshape_layer(Sof20185, [1, 4], Res47606), 
LCon88108 = concatenate_layer([Res47606,[[[0.0171]]]], 2, Con88108), 
LCro55585 = cropping2D_layer([[[[1.9781], [1.9834], [1.389]], [[1.1587], [1.5999], [1.5068]], [[1.8281], [1.5768], [1.222]], [[1.0231], [1.702], [1.1188]]]], 1, 2, 0, 0, Cro55585), 
LRes44527 = reshape_layer(Cro55585, [1, 3], Res44527), 
LDot63168 = dot_layer(Con88108,Res44527, 1, 1, Dot63168), 
LRes50767 = reshape_layer(Dot63168, [5, 3, 1], Res50767), 
LCon51148 = conv2D_transpose_layer(Res50767, 3, 3,[[[[0.3713], [0.5236], [0.6346]], [[0.3272], [0.503], [0.0313]], [[0.2274], [0.1945], [0.2761]]], [[[0.7699], [0.4805], [0.0546]], [[0.686], [0.6766], [0.5673]], [[0.7327], [0.3786], [0.3575]]], [[[0.7109], [0.699], [0.9171]], [[0.7103], [0.89], [0.765]], [[0.8395], [0.7312], [0.6683]]]],[0, 0, 0], 1, 1, true, Con51148), 
LRes16535 = reshape_layer(Con51148, [5, 9], Res16535), 
LDot23700 = dot_layer(Con50071,Res16535, 2, 2, Dot23700), 
LLST49383 = lstm_layer(Dot23700,[[2, 8, 5, 6, 5, 8, 2, 9, 9, 5, 1, 4], [3, 2, 10, 8, 9, 2, 6, 3, 7, 10, 5, 4], [5, 2, 9, 1, 5, 5, 4, 3, 4, 1, 3, 1], [5, 9, 6, 5, 6, 9, 1, 4, 1, 4, 5, 3], [5, 8, 1, 7, 4, 3, 8, 7, 1, 5, 1, 3]],[[4, 10, 1, 6, 3, 5, 1, 7, 9, 6, 9, 4], [5, 3, 10, 9, 8, 3, 5, 10, 10, 3, 10, 9], [6, 4, 9, 9, 10, 3, 5, 4, 4, 5, 8, 5]],[4, 9, 2, 2, 9, 9, 5, 4, 10, 8, 10, 6], LST49383), 
LCon96717 = concatenate_layer([LST49383,[[0.3033, 0.6505, 0.0355, 0.9605, 0.6798]]], 1, Con96717), 
LMin35447 = minimum_layer([Fla84088,Con96717], Min35447), 
exec_layers([LAdd27016,LCon89337,LRes47843,LDot18598,LFla84088,LCon33029,LCon50071,LSof20185,LRes47606,LCon88108,LCro55585,LRes44527,LDot63168,LRes50767,LCon51148,LRes16535,LDot23700,LLST49383,LCon96717,LMin35447],["Add27016","Con89337","Res47843","Dot18598","Fla84088","Con33029","Con50071","Sof20185","Res47606","Con88108","Cro55585","Res44527","Dot63168","Res50767","Con51148","Res16535","Dot23700","LST49383","Con96717","Min35447"],Min35447,"Min35447")

Actual (Unparsed): [[0.2886818, 0.5865849, 0.6642040, 0.3033000, 0.6505000, 0.0355000, 0.9605000, 0.6798000]]

Expected (Unparsed): [[0.288681840138,0.5865849031679999,0.664203980256,0.3033,0.6505,0.0355,0.9605,0.6798]]

Actual:   [[0.2887, 0.5866, 0.6643, 0.3033, 0.6505, 0.0355, 0.9605, 0.6798]]

Expected: [[0.2887, 0.5866, 0.6643, 0.3033, 0.6505, 0.0355, 0.9605, 0.6798]]