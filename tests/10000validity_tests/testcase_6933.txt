import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Min4636 = tf.keras.layers.Input(shape=([2, 2]))
in1Min4636 = tf.keras.layers.Input(shape=([2, 2]))
in0Min61318 = tf.keras.layers.Input(shape=([1, 1, 1]))
in1Min61318 = tf.keras.layers.Input(shape=([1, 1, 1]))
in0Glo93875 = tf.keras.layers.Input(shape=([2, 2, 1]))
in0Con50638 = tf.keras.layers.Input(shape=([3]))
in0Con48107 = tf.keras.layers.Input(shape=([4, 14]))
in0Den41584 = tf.keras.layers.Input(shape=([3, 5, 5]))
in0Mul34304 = tf.keras.layers.Input(shape=([1, 2, 2, 1]))
in1Mul34304 = tf.keras.layers.Input(shape=([1, 2, 2, 1]))
in0Mul53755 = tf.keras.layers.Input(shape=([1, 2]))
in1Mul53755 = tf.keras.layers.Input(shape=([1, 2]))
in0Con46901 = tf.keras.layers.Input(shape=([1, 2]))
in0Con99904 = tf.keras.layers.Input(shape=([3, 11]))

Min4636 = keras.layers.Minimum(name = 'Min4636', )([in0Min4636,in1Min4636])
Fla91904 = keras.layers.Flatten(name = 'Fla91904', )(Min4636)
Min61318 = keras.layers.Minimum(name = 'Min61318', )([in0Min61318,in1Min61318])
Res36854 = keras.layers.Reshape((1, 1), name = 'Res36854', )(Min61318)
Fla13030 = keras.layers.Flatten(name = 'Fla13030', )(Res36854)
Glo93875 = keras.layers.GlobalMaxPool2D(name = 'Glo93875', )(in0Glo93875)
Ave12995 = keras.layers.Average(name = 'Ave12995', )([Fla13030,Glo93875])
Con50638 = keras.layers.Concatenate(axis=1, name = 'Con50638', )([Ave12995,in0Con50638])
Max6673 = keras.layers.Maximum(name = 'Max6673', )([Fla91904,Con50638])
Res91576 = keras.layers.Reshape((4, 1), name = 'Res91576', )(Max6673)
Con48107 = keras.layers.Concatenate(axis=2, name = 'Con48107', )([Res91576,in0Con48107])
Den41584 = keras.layers.Dense(3,name = 'Den41584', )(in0Den41584)
Res55922 = keras.layers.Reshape((3, 15), name = 'Res55922', )(Den41584)
Mul34304 = keras.layers.Multiply(name = 'Mul34304', )([in0Mul34304,in1Mul34304])
Res8597 = keras.layers.Reshape((1, 2, 2), name = 'Res8597', )(Mul34304)
Res32075 = keras.layers.Reshape((1, 4), name = 'Res32075', )(Res8597)
Mul53755 = keras.layers.Multiply(name = 'Mul53755', )([in0Mul53755,in1Mul53755])
Con46901 = keras.layers.Concatenate(axis=2, name = 'Con46901', )([Mul53755,in0Con46901])
Mul29663 = keras.layers.Multiply(name = 'Mul29663', )([Res32075,Con46901])
ReL98485 = keras.layers.ReLU(max_value=5.127776790997309, negative_slope=9.67711688583864, threshold=2.217784591565144, name = 'ReL98485', )(Mul29663)
Zer31172 = keras.layers.ZeroPadding1D(padding=((2, 0)), name = 'Zer31172', )(ReL98485)
Con99904 = keras.layers.Concatenate(axis=2, name = 'Con99904', )([Zer31172,in0Con99904])
Ave87017 = keras.layers.Average(name = 'Ave87017', )([Res55922,Con99904])
Zer95413 = keras.layers.ZeroPadding1D(padding=((1, 0)), name = 'Zer95413', )(Ave87017)
Ave58808 = keras.layers.Average(name = 'Ave58808', )([Con48107,Zer95413])
model = tf.keras.models.Model(inputs=[in0Min4636,in1Min4636,in0Min61318,in1Min61318,in0Glo93875,in0Con50638,in0Con48107,in0Den41584,in0Mul34304,in1Mul34304,in0Mul53755,in1Mul53755,in0Con46901,in0Con99904], outputs=Ave58808)
w = model.get_layer('Den41584').get_weights() 
w[0] = np.array([[0.1506, 0.3213, 0.0301], [0.1702, 0.8413, 0.8191], [0.0849, 0.1855, 0.429], [0.4537, 0.422, 0.3575], [0.8674, 0.4252, 0.775]])
w[1] = np.array([0.8284, 0.8954, 0.7788])
model.get_layer('Den41584').set_weights(w) 
in0Min4636 = tf.constant([[[0.5627, 0.6769], [0.7614, 0.0269]]])
in1Min4636 = tf.constant([[[0.6625, 0.1452], [0.9921, 0.7576]]])
in0Min61318 = tf.constant([[[[0.8639]]]])
in1Min61318 = tf.constant([[[[0.1635]]]])
in0Glo93875 = tf.constant([[[[1.911], [1.8129]], [[1.9066], [1.894]]]])
in0Con50638 = tf.constant([[0.0022, 0.2119, 0.0343]])
in0Con48107 = tf.constant([[[0.3077, 0.1796, 0.2024, 0.1154, 0.5056, 0.4017, 0.5233, 0.4204, 0.3698, 0.0971, 0.8473, 0.7415, 0.6097, 0.0961], [0.9293, 0.9998, 0.1304, 0.9475, 0.2339, 0.402, 0.3758, 0.3258, 0.7769, 0.3129, 0.1686, 0.4107, 0.6714, 0.1502], [0.8133, 0.0958, 0.1172, 0.9739, 0.0215, 0.9284, 0.684, 0.941, 0.9056, 0.8836, 0.2608, 0.9478, 0.89, 0.43], [0.9705, 0.5943, 0.8892, 0.8596, 0.6802, 0.0683, 0.519, 0.5214, 0.4801, 0.6704, 0.4185, 0.4242, 0.6459, 0.4794]]])
in0Den41584 = tf.constant([[[[0.2972, 0.3927, 0.6748, 0.553, 0.9698], [0.4336, 0.6629, 0.1209, 0.928, 0.7857], [0.6002, 0.8682, 0.6978, 0.3052, 0.8494], [0.4992, 0.0251, 0.1344, 0.0307, 0.4994], [0.0974, 0.5488, 0.8256, 0.9691, 0.6788]], [[0.2773, 0.0634, 0.8177, 0.8977, 0.123], [0.0043, 0.7055, 0.9393, 0.0497, 0.2012], [0.5247, 0.5652, 0.6347, 0.4394, 0.5332], [0.2065, 0.937, 0.0374, 0.4753, 0.3584], [0.3788, 0.2215, 0.155, 0.1424, 0.2004]], [[0.382, 0.9637, 0.1964, 0.4069, 0.7622], [0.8048, 0.5014, 0.9023, 0.5376, 0.7093], [0.3626, 0.6774, 0.3004, 0.1882, 0.5233], [0.5054, 0.6814, 0.0311, 0.3102, 0.5856], [0.2121, 0.826, 0.7826, 0.9723, 0.5605]]]])
in0Mul34304 = tf.constant([[[[[0.9501], [0.0916]], [[0.427], [0.9554]]]]])
in1Mul34304 = tf.constant([[[[[0.1616], [0.6397]], [[0.5415], [0.9578]]]]])
in0Mul53755 = tf.constant([[[0.2061, 0.1797]]])
in1Mul53755 = tf.constant([[[0.592, 0.7336]]])
in0Con46901 = tf.constant([[[0.0079, 0.8967]]])
in0Con99904 = tf.constant([[[0.4497, 0.1305, 0.8633, 0.1569, 0.7828, 0.6952, 0.3409, 0.5378, 0.4699, 0.3779, 0.6272], [0.5021, 0.1193, 0.1648, 0.3997, 0.2862, 0.1108, 0.7315, 0.5667, 0.523, 0.734, 0.8889], [0.9486, 0.6378, 0.673, 0.3542, 0.5853, 0.8211, 0.4252, 0.6796, 0.9922, 0.0274, 0.8794]]])
print (np.array2string(model.predict([in0Min4636,in1Min4636,in0Min61318,in1Min61318,in0Glo93875,in0Con50638,in0Con48107,in0Den41584,in0Mul34304,in1Mul34304,in0Mul53755,in1Mul53755,in0Con46901,in0Con99904],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Ave58808.png')

LMin4636 = minimum_layer([[[[0.5627, 0.6769], [0.7614, 0.0269]]], [[[0.6625, 0.1452], [0.9921, 0.7576]]]], Min4636), 
LFla91904 = flatten_layer(Min4636, Fla91904), 
LMin61318 = minimum_layer([[[[[0.8639]]]], [[[[0.1635]]]]], Min61318), 
LRes36854 = reshape_layer(Min61318, [1, 1], Res36854), 
LFla13030 = flatten_layer(Res36854, Fla13030), 
LGlo93875 = global_max_pool2D_layer([[[[1.911], [1.8129]], [[1.9066], [1.894]]]], Glo93875), 
LAve12995 = average_layer([Fla13030,Glo93875], Ave12995), 
LCon50638 = concatenate_layer([Ave12995,[[0.0022, 0.2119, 0.0343]]], 1, Con50638), 
LMax6673 = maximum_layer([Fla91904,Con50638], Max6673), 
LRes91576 = reshape_layer(Max6673, [4, 1], Res91576), 
LCon48107 = concatenate_layer([Res91576,[[[0.3077, 0.1796, 0.2024, 0.1154, 0.5056, 0.4017, 0.5233, 0.4204, 0.3698, 0.0971, 0.8473, 0.7415, 0.6097, 0.0961], [0.9293, 0.9998, 0.1304, 0.9475, 0.2339, 0.402, 0.3758, 0.3258, 0.7769, 0.3129, 0.1686, 0.4107, 0.6714, 0.1502], [0.8133, 0.0958, 0.1172, 0.9739, 0.0215, 0.9284, 0.684, 0.941, 0.9056, 0.8836, 0.2608, 0.9478, 0.89, 0.43], [0.9705, 0.5943, 0.8892, 0.8596, 0.6802, 0.0683, 0.519, 0.5214, 0.4801, 0.6704, 0.4185, 0.4242, 0.6459, 0.4794]]]], 2, Con48107), 
LDen41584 = dense_layer([[[[0.2972, 0.3927, 0.6748, 0.553, 0.9698], [0.4336, 0.6629, 0.1209, 0.928, 0.7857], [0.6002, 0.8682, 0.6978, 0.3052, 0.8494], [0.4992, 0.0251, 0.1344, 0.0307, 0.4994], [0.0974, 0.5488, 0.8256, 0.9691, 0.6788]], [[0.2773, 0.0634, 0.8177, 0.8977, 0.123], [0.0043, 0.7055, 0.9393, 0.0497, 0.2012], [0.5247, 0.5652, 0.6347, 0.4394, 0.5332], [0.2065, 0.937, 0.0374, 0.4753, 0.3584], [0.3788, 0.2215, 0.155, 0.1424, 0.2004]], [[0.382, 0.9637, 0.1964, 0.4069, 0.7622], [0.8048, 0.5014, 0.9023, 0.5376, 0.7093], [0.3626, 0.6774, 0.3004, 0.1882, 0.5233], [0.5054, 0.6814, 0.0311, 0.3102, 0.5856], [0.2121, 0.826, 0.7826, 0.9723, 0.5605]]]], [[0.1506, 0.3213, 0.0301], [0.1702, 0.8413, 0.8191], [0.0849, 0.1855, 0.429], [0.4537, 0.422, 0.3575], [0.8674, 0.4252, 0.775]],[0.8284, 0.8954, 0.7788], Den41584), 
LRes55922 = reshape_layer(Den41584, [3, 15], Res55922), 
LMul34304 = multiply_layer([[[[[[0.9501], [0.0916]], [[0.427], [0.9554]]]]], [[[[[0.1616], [0.6397]], [[0.5415], [0.9578]]]]]], Mul34304), 
LRes8597 = reshape_layer(Mul34304, [1, 2, 2], Res8597), 
LRes32075 = reshape_layer(Res8597, [1, 4], Res32075), 
LMul53755 = multiply_layer([[[[0.2061, 0.1797]]], [[[0.592, 0.7336]]]], Mul53755), 
LCon46901 = concatenate_layer([Mul53755,[[[0.0079, 0.8967]]]], 2, Con46901), 
LMul29663 = multiply_layer([Res32075,Con46901], Mul29663), 
LReL98485 = relu_layer(Mul29663, 5.127776790997309, 9.67711688583864, 2.217784591565144, ReL98485), 
LZer31172 = zero_padding1D_layer(ReL98485, 2, 0, Zer31172), 
LCon99904 = concatenate_layer([Zer31172,[[[0.4497, 0.1305, 0.8633, 0.1569, 0.7828, 0.6952, 0.3409, 0.5378, 0.4699, 0.3779, 0.6272], [0.5021, 0.1193, 0.1648, 0.3997, 0.2862, 0.1108, 0.7315, 0.5667, 0.523, 0.734, 0.8889], [0.9486, 0.6378, 0.673, 0.3542, 0.5853, 0.8211, 0.4252, 0.6796, 0.9922, 0.0274, 0.8794]]]], 2, Con99904), 
LAve87017 = average_layer([Res55922,Con99904], Ave87017), 
LZer95413 = zero_padding1D_layer(Ave87017, 1, 0, Zer95413), 
LAve58808 = average_layer([Con48107,Zer95413], Ave58808), 
exec_layers([LMin4636,LFla91904,LMin61318,LRes36854,LFla13030,LGlo93875,LAve12995,LCon50638,LMax6673,LRes91576,LCon48107,LDen41584,LRes55922,LMul34304,LRes8597,LRes32075,LMul53755,LCon46901,LMul29663,LReL98485,LZer31172,LCon99904,LAve87017,LZer95413,LAve58808],["Min4636","Fla91904","Min61318","Res36854","Fla13030","Glo93875","Ave12995","Con50638","Max6673","Res91576","Con48107","Den41584","Res55922","Mul34304","Res8597","Res32075","Mul53755","Con46901","Mul29663","ReL98485","Zer31172","Con99904","Ave87017","Zer95413","Ave58808"],Ave58808,"Ave58808")

Actual (Unparsed): [[[0.5186250, 0.1538500, 0.0898000, 0.1012000, 0.0577000, 0.2528000, 0.2008500, 0.2616500, 0.2102000, 0.1849000, 0.0485500, 0.4236500, 0.3707500, 0.3048500, 0.0480500], [0.5949467, 0.9876923, 1.0869470, 0.5950350, 1.1713090, 0.7314191, 0.9170850, 0.8366405, 1.0022897, 0.9038426, 0.5734603, 0.5362633, 0.8315849, 0.9899587, 0.8463899], [0.7467879, 0.8118118, 0.4494309, 0.3650850, 1.0552456, 0.5239405, 0.9352391, 0.9592673, 1.0670876, 0.8676678, 1.1521631, 0.7761342, 0.8983350, 0.9728779, 0.7483114], [-4.8248775, -4.2712199, -4.4638480, -2.4430151, 1.2348621, 1.0852268, 0.5931754, 0.8329129, 0.8935958, 0.8632788, 0.9456794, 0.8617064, 0.9588201, 0.9428673, 1.1044202]]]

Expected (Unparsed): [[[0.518625,0.15385,0.0898,0.1012,0.0577,0.2528,0.20085,0.26165,0.2102,0.1849,0.04855,0.42365,0.37075,0.30485,0.04805],[0.59494675,0.9876923075,1.0869469975000001,0.5950349825000001,1.17130901,0.7314190875000001,0.917084945,0.836640525,1.0022897100000001,0.9038425625,0.5734602675,0.536263295,0.8315848575,0.9899587049999999,0.8463898674999999],[0.74678787,0.811811815,0.44943093,0.36508500499999996,1.0552456325000001,0.5239404825,0.9352390875000001,0.9592672900000001,1.0670876475,0.8676678325,1.1521631325,0.776134175,0.89833498,0.9728779425,0.7483113825],[-4.824877477663379,-4.271219864525173,-4.463847968132269,-2.443015013810411,1.2348620675,1.085226855,0.5931754400000001,0.8329129399999999,0.8935957999999999,0.8632787725000001,0.9456793524999998,0.86170642,0.9588201025,0.9428672574999999,1.10442024]]]

Actual:   [[[0.5187, 0.1539, 0.0898, 0.1012, 0.0577, 0.2528, 0.2009, 0.2617, 0.2102, 0.1849, 0.0486, 0.4237, 0.3708, 0.3049, 0.0481], [0.595, 0.9877, 1.087, 0.5951, 1.1714, 0.7315, 0.9171, 0.8367, 1.0023, 0.9039, 0.5735, 0.5363, 0.8316, 0.99, 0.8464], [0.7468, 0.8119, 0.4495, 0.3651, 1.0553, 0.524, 0.9353, 0.9593, 1.0671, 0.8677, 1.1522, 0.7762, 0.8984, 0.9729, 0.7484], [-4.8248, -4.2712, -4.4638, -2.443, 1.2349, 1.0853, 0.5932, 0.833, 0.8936, 0.8633, 0.9457, 0.8618, 0.9589, 0.9429, 1.1045]]]

Expected: [[[0.5187, 0.1539, 0.0898, 0.1012, 0.0577, 0.2528, 0.2009, 0.2617, 0.2102, 0.1849, 0.0486, 0.4237, 0.3708, 0.3049, 0.0481], [0.595, 0.9877, 1.087, 0.5951, 1.1714, 0.7315, 0.9171, 0.8367, 1.0023, 0.9039, 0.5735, 0.5363, 0.8316, 0.99, 0.8464], [0.7468, 0.8119, 0.4495, 0.3651, 1.0553, 0.524, 0.9353, 0.9593, 1.0671, 0.8677, 1.1522, 0.7762, 0.8984, 0.9729, 0.7484], [-4.8248, -4.2712, -4.4638, -2.443, 1.2349, 1.0853, 0.5932, 0.833, 0.8936, 0.8633, 0.9457, 0.8618, 0.9589, 0.9429, 1.1045]]]