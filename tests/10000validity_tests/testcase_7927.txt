import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Max22070 = tf.keras.layers.Input(shape=([2, 2, 1, 2]))
in1Max22070 = tf.keras.layers.Input(shape=([2, 2, 1, 2]))
in0Mul49430 = tf.keras.layers.Input(shape=([2, 1, 2]))
in1Mul49430 = tf.keras.layers.Input(shape=([2, 1, 2]))

Max22070 = keras.layers.Maximum(name = 'Max22070', )([in0Max22070,in1Max22070])
Mas68493 = keras.layers.Masking(mask_value=2, name = 'Mas68493', )(Max22070)
Zer95220 = keras.layers.ZeroPadding3D(padding=((0, 0), (1, 0), (1, 0)), name = 'Zer95220', )(Mas68493)
Mul49430 = keras.layers.Multiply(name = 'Mul49430', )([in0Mul49430,in1Mul49430])
Zer92258 = keras.layers.ZeroPadding2D(padding=((1, 1), (1, 1)), name = 'Zer92258', )(Mul49430)
Res86022 = keras.layers.Reshape((4, 3, 2, 1), name = 'Res86022', )(Zer92258)
Con72928 = keras.layers.Conv3D(2, (1, 1, 1),strides=(3, 1, 1), padding='same', dilation_rate=(1, 1, 1), name = 'Con72928', )(Res86022)
Mul43401 = keras.layers.Multiply(name = 'Mul43401', )([Zer95220,Con72928])
model = tf.keras.models.Model(inputs=[in0Max22070,in1Max22070,in0Mul49430,in1Mul49430], outputs=Mul43401)
w = model.get_layer('Con72928').get_weights() 
w[0] = np.array([[[[[0.6053, 0.1754]]]]])
w[1] = np.array([0, 0])
model.get_layer('Con72928').set_weights(w) 
in0Max22070 = tf.constant([[[[[0.786, 0.3878]], [[0.7364, 0.843]]], [[[0.1715, 0.569]], [[0.53, 0.8792]]]]])
in1Max22070 = tf.constant([[[[[0.2282, 0.7955]], [[0.4973, 0.851]]], [[[0.8238, 0.4678]], [[0.0684, 0.3258]]]]])
in0Mul49430 = tf.constant([[[[0.7531, 0.3834]], [[0.0349, 0.9387]]]])
in1Mul49430 = tf.constant([[[[0.31, 0.1239]], [[0.1292, 0.1038]]]])
print (np.array2string(model.predict([in0Max22070,in1Max22070,in0Mul49430,in1Mul49430],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Mul43401.png')

LMax22070 = maximum_layer([[[[[[0.786, 0.3878]], [[0.7364, 0.843]]], [[[0.1715, 0.569]], [[0.53, 0.8792]]]]], [[[[[0.2282, 0.7955]], [[0.4973, 0.851]]], [[[0.8238, 0.4678]], [[0.0684, 0.3258]]]]]], Max22070), 
LMas68493 = masking_layer(Max22070, 2, Mas68493), 
LZer95220 = zero_padding3D_layer(Mas68493, 0, 0, 1, 0, 1, 0, Zer95220), 
LMul49430 = multiply_layer([[[[[0.7531, 0.3834]], [[0.0349, 0.9387]]]], [[[[0.31, 0.1239]], [[0.1292, 0.1038]]]]], Mul49430), 
LZer92258 = zero_padding2D_layer(Mul49430, 1, 1, 1, 1, Zer92258), 
LRes86022 = reshape_layer(Zer92258, [4, 3, 2, 1], Res86022), 
LCon72928 = conv3D_layer(Res86022, 1, 1, 1,[[[[[0.6053, 0.1754]]]]],[0, 0], 3, 1, 1, true, 1, 1, 1, Con72928), 
LMul43401 = multiply_layer([Zer95220,Con72928], Mul43401), 
exec_layers([LMax22070,LMas68493,LZer95220,LMul49430,LZer92258,LRes86022,LCon72928,LMul43401],["Max22070","Mas68493","Zer95220","Mul49430","Zer92258","Res86022","Con72928","Mul43401"],Mul43401,"Mul43401")

Actual (Unparsed): [[[[[0.0000000, 0.0000000], [0.0000000, 0.0000000]], [[0.0000000, 0.0000000], [0.0000000, 0.0000000]], [[0.0000000, 0.0000000], [0.0000000, 0.0000000]]], [[[0.0000000, 0.0000000], [0.0000000, 0.0000000]], [[0.0000000, 0.0000000], [0.0000000, 0.0000000]], [[0.0000000, 0.0000000], [0.0000000, 0.0000000]]]]]

Expected (Unparsed): [[[[[0.0,0.0],[0.0,0.0]],[[0.0,0.0],[0.0,0.0]],[[0.0,0.0],[0.0,0.0]]],[[[0.0,0.0],[0.0,0.0]],[[0.0,0.0],[0.0,0.0]],[[0.0,0.0],[0.0,0.0]]]]]

Actual:   [[[[[0, 0], [0, 0]], [[0, 0], [0, 0]], [[0, 0], [0, 0]]], [[[0, 0], [0, 0]], [[0, 0], [0, 0]], [[0, 0], [0, 0]]]]]

Expected: [[[[[0, 0], [0, 0]], [[0, 0], [0, 0]], [[0, 0], [0, 0]]], [[[0, 0], [0, 0]], [[0, 0], [0, 0]], [[0, 0], [0, 0]]]]]