import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Dot66467 = tf.keras.layers.Input(shape=([3, 3]))
in1Dot66467 = tf.keras.layers.Input(shape=([3, 3]))
in0Con65345 = tf.keras.layers.Input(shape=([5, 5, 2]))
in0Loc15484 = tf.keras.layers.Input(shape=([2, 1, 2]))
in0Bat95899 = tf.keras.layers.Input(shape=([4, 2, 3]))

Dot66467 = keras.layers.Dot(axes=(1, 1), name = 'Dot66467', )([in0Dot66467,in1Dot66467])
Res18939 = keras.layers.Reshape((3, 3, 1), name = 'Res18939', )(Dot66467)
Zer70179 = keras.layers.ZeroPadding2D(padding=((1, 1), (1, 1)), name = 'Zer70179', )(Res18939)
Con65345 = keras.layers.Concatenate(axis=3, name = 'Con65345', )([Zer70179,in0Con65345])
Loc15484 = keras.layers.LocallyConnected2D(3, (1, 1),strides=(1, 1), name = 'Loc15484', )(in0Loc15484)
Zer31597 = keras.layers.ZeroPadding2D(padding=((2, 0), (1, 0)), name = 'Zer31597', )(Loc15484)
Bat95899 = keras.layers.BatchNormalization(axis=1, epsilon=0.7216022588214519,  name = 'Bat95899', )(in0Bat95899)
Add88881 = keras.layers.Add(name = 'Add88881', )([Zer31597,Bat95899])
Zer3921 = keras.layers.ZeroPadding2D(padding=((1, 0), (3, 0)), name = 'Zer3921', )(Add88881)
Min93686 = keras.layers.Minimum(name = 'Min93686', )([Con65345,Zer3921])
model = tf.keras.models.Model(inputs=[in0Dot66467,in1Dot66467,in0Con65345,in0Loc15484,in0Bat95899], outputs=Min93686)
w = model.get_layer('Loc15484').get_weights() 
w[0] = np.array([[[0.6916, 0.6168, 0.7221], [0.0242, 0.0842, 0.3863]], [[0.2586, 0.4412, 0.9074], [0.4131, 0.4064, 0.1299]]])
w[1] = np.array([[[0, 0, 0]], [[0, 0, 0]]])
model.get_layer('Loc15484').set_weights(w) 
w = model.get_layer('Bat95899').get_weights() 
w[0] = np.array([0.8858, 0.1641, 0.0158, 0.2046])
w[1] = np.array([0.2303, 0.5221, 0.9487, 0.7273])
w[2] = np.array([0.8881, 0.2292, 0.5193, 0.9381])
w[3] = np.array([0.0931, 0.0844, 0.6986, 0.9408])
model.get_layer('Bat95899').set_weights(w) 
in0Dot66467 = tf.constant([[[0.6782, 0.7148, 0.4951], [0.1436, 0.9482, 0.4352], [0.5996, 0.4747, 0.6372]]])
in1Dot66467 = tf.constant([[[0.9322, 0.5675, 0.1057], [0.906, 0.566, 0.5879], [0.7406, 0.5925, 0.9467]]])
in0Con65345 = tf.constant([[[[0.6071, 0.56], [0.1405, 0.8711], [0.4888, 0.7068], [0.3506, 0.6081], [0.8189, 0.4556]], [[0.616, 0.4263], [0.8838, 0.4164], [0.1503, 0.6954], [0.4154, 0.0593], [0.1153, 0.2607]], [[0.7531, 0.6554], [0.1391, 0.8223], [0.8447, 0.9475], [0.708, 0.4068], [0.0717, 0.7122]], [[0.112, 0.6107], [0.8147, 0.0073], [0.2641, 0.7494], [0.2699, 0.4354], [0.5045, 0.912]], [[0.2716, 0.1929], [0.4553, 0.1941], [0.7807, 0.0272], [0.0934, 0.0525], [0.2566, 0.4771]]]])
in0Loc15484 = tf.constant([[[[0.6478, 0.6027]], [[0.3851, 0.9533]]]])
in0Bat95899 = tf.constant([[[[1.6077, 1.9808, 1.4844], [1.581, 1.1682, 1.1678]], [[1.1625, 1.7649, 1.4429], [1.2336, 1.9986, 1.4846]], [[1.8615, 1.4947, 1.4684], [1.3939, 1.168, 1.2506]], [[1.9968, 1.9374, 1.3485], [1.3388, 1.5422, 1.4203]]]])
print (np.array2string(model.predict([in0Dot66467,in1Dot66467,in0Con65345,in0Loc15484,in0Bat95899],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Min93686.png')

LDot66467 = dot_layer([[[0.6782, 0.7148, 0.4951], [0.1436, 0.9482, 0.4352], [0.5996, 0.4747, 0.6372]]], [[[0.9322, 0.5675, 0.1057], [0.906, 0.566, 0.5879], [0.7406, 0.5925, 0.9467]]], 1, 1, Dot66467), 
LRes18939 = reshape_layer(Dot66467, [3, 3, 1], Res18939), 
LZer70179 = zero_padding2D_layer(Res18939, 1, 1, 1, 1, Zer70179), 
LCon65345 = concatenate_layer([Zer70179,[[[[0.6071, 0.56], [0.1405, 0.8711], [0.4888, 0.7068], [0.3506, 0.6081], [0.8189, 0.4556]], [[0.616, 0.4263], [0.8838, 0.4164], [0.1503, 0.6954], [0.4154, 0.0593], [0.1153, 0.2607]], [[0.7531, 0.6554], [0.1391, 0.8223], [0.8447, 0.9475], [0.708, 0.4068], [0.0717, 0.7122]], [[0.112, 0.6107], [0.8147, 0.0073], [0.2641, 0.7494], [0.2699, 0.4354], [0.5045, 0.912]], [[0.2716, 0.1929], [0.4553, 0.1941], [0.7807, 0.0272], [0.0934, 0.0525], [0.2566, 0.4771]]]]], 3, Con65345), 
LLoc15484 = locally_connected2D_layer([[[[0.6478, 0.6027]], [[0.3851, 0.9533]]]], 1, 1,[[[0.6916, 0.6168, 0.7221], [0.0242, 0.0842, 0.3863]], [[0.2586, 0.4412, 0.9074], [0.4131, 0.4064, 0.1299]]],[[[0, 0, 0]], [[0, 0, 0]]], 1, 1, Loc15484), 
LZer31597 = zero_padding2D_layer(Loc15484, 2, 0, 1, 0, Zer31597), 
LBat95899 = batch_normalization_layer([[[[1.6077, 1.9808, 1.4844], [1.581, 1.1682, 1.1678]], [[1.1625, 1.7649, 1.4429], [1.2336, 1.9986, 1.4846]], [[1.8615, 1.4947, 1.4684], [1.3939, 1.168, 1.2506]], [[1.9968, 1.9374, 1.3485], [1.3388, 1.5422, 1.4203]]]], 1, 0.7216022588214519, [0.8858, 0.1641, 0.0158, 0.2046], [0.2303, 0.5221, 0.9487, 0.7273], [0.8881, 0.2292, 0.5193, 0.9381], [0.0931, 0.0844, 0.6986, 0.9408], Bat95899), 
LAdd88881 = add_layer([Zer31597,Bat95899], Add88881), 
LZer3921 = zero_padding2D_layer(Add88881, 1, 0, 3, 0, Zer3921), 
LMin93686 = minimum_layer([Con65345,Zer3921], Min93686), 
exec_layers([LDot66467,LRes18939,LZer70179,LCon65345,LLoc15484,LZer31597,LBat95899,LAdd88881,LZer3921,LMin93686],["Dot66467","Res18939","Zer70179","Con65345","Loc15484","Zer31597","Bat95899","Add88881","Zer3921","Min93686"],Min93686,"Min93686")

Actual (Unparsed): [[[[0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000]], [[0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000], [0.7237495, 0.4154000, 0.0593000], [0.0000000, 0.1153000, 0.2607000]], [[0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000], [0.6926932, 0.7080000, 0.4068000], [0.0000000, 0.0717000, 0.7122000]], [[0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000], [0.9114234, 0.2699000, 0.4354000], [0.0000000, 0.5045000, 0.9120000]], [[0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0934000, 0.0525000], [0.0000000, 0.2566000, 0.4771000]]]]

Expected (Unparsed): [[[[0,0,0],[0,0,0],[0,0,0],[0,0,0],[0,0,0]],[[0,0,0],[0,0,0],[0,0,0],[0.7237495,0.4154,0.0593],[0,0.1153,0.2607]],[[0,0,0],[0,0,0],[0,0,0],[0.692693200636005,0.708,0.4068],[0,0.0717,0.7122]],[[0,0,0],[0,0,0],[0,0,0],[0.9114233899999999,0.2699,0.4354],[0,0.5045,0.912]],[[0,0,0],[0,0,0],[0,0,0],[0,0.0934,0.0525],[0,0.2566,0.4771]]]]

Actual:   [[[[0, 0, 0], [0, 0, 0], [0, 0, 0], [0, 0, 0], [0, 0, 0]], [[0, 0, 0], [0, 0, 0], [0, 0, 0], [0.7238, 0.4154, 0.0593], [0, 0.1153, 0.2607]], [[0, 0, 0], [0, 0, 0], [0, 0, 0], [0.6927, 0.708, 0.4068], [0, 0.0717, 0.7122]], [[0, 0, 0], [0, 0, 0], [0, 0, 0], [0.9115, 0.2699, 0.4354], [0, 0.5045, 0.912]], [[0, 0, 0], [0, 0, 0], [0, 0, 0], [0, 0.0934, 0.0525], [0, 0.2566, 0.4771]]]]

Expected: [[[[0, 0, 0], [0, 0, 0], [0, 0, 0], [0, 0, 0], [0, 0, 0]], [[0, 0, 0], [0, 0, 0], [0, 0, 0], [0.7238, 0.4154, 0.0593], [0, 0.1153, 0.2607]], [[0, 0, 0], [0, 0, 0], [0, 0, 0], [0.6927, 0.708, 0.4068], [0, 0.0717, 0.7122]], [[0, 0, 0], [0, 0, 0], [0, 0, 0], [0.9115, 0.2699, 0.4354], [0, 0.5045, 0.912]], [[0, 0, 0], [0, 0, 0], [0, 0, 0], [0, 0.0934, 0.0525], [0, 0.2566, 0.4771]]]]