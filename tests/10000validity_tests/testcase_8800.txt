import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Mul47631 = tf.keras.layers.Input(shape=([1, 2, 1, 2]))
in1Mul47631 = tf.keras.layers.Input(shape=([1, 2, 1, 2]))
in0Min90012 = tf.keras.layers.Input(shape=([1, 1, 1, 1]))
in1Min90012 = tf.keras.layers.Input(shape=([1, 1, 1, 1]))

Mul47631 = keras.layers.Multiply(name = 'Mul47631', )([in0Mul47631,in1Mul47631])
Res15418 = keras.layers.Reshape((1, 2, 2), name = 'Res15418', )(Mul47631)
Min90012 = keras.layers.Minimum(name = 'Min90012', )([in0Min90012,in1Min90012])
Res88370 = keras.layers.Reshape((1, 1, 1), name = 'Res88370', )(Min90012)
Res5548 = keras.layers.Reshape((1, 1), name = 'Res5548', )(Res88370)
Sep17230 = keras.layers.SeparableConv1D(4, (1),strides=(1), padding='same', name = 'Sep17230', )(Res5548)
Res41822 = keras.layers.Reshape((1, 2, 2), name = 'Res41822', )(Sep17230)
Ave32551 = keras.layers.Average(name = 'Ave32551', )([Res15418,Res41822])
Res11685 = keras.layers.Reshape((1, 4), name = 'Res11685', )(Ave32551)
LST92935 = keras.layers.LSTM(3,recurrent_activation='sigmoid', name = 'LST92935', )(Res11685)
model = tf.keras.models.Model(inputs=[in0Mul47631,in1Mul47631,in0Min90012,in1Min90012], outputs=LST92935)
w = model.get_layer('Sep17230').get_weights() 
w[0] = np.array([[[0.9161]]])
w[1] = np.array([[[0.3859, 0.7386, 0.0658, 0.413]]])
w[2] = np.array([0, 0, 0, 0])
model.get_layer('Sep17230').set_weights(w) 
w = model.get_layer('LST92935').get_weights() 
w[0] = np.array([[5, 7, 10, 6, 10, 5, 8, 2, 5, 3, 6, 4], [8, 4, 7, 1, 10, 8, 10, 4, 2, 9, 6, 2], [10, 4, 10, 10, 1, 5, 3, 7, 5, 10, 2, 7], [2, 3, 9, 10, 5, 7, 2, 1, 7, 8, 1, 9]])
w[1] = np.array([[4, 2, 2, 1, 10, 6, 6, 2, 7, 9, 1, 9], [5, 2, 4, 2, 5, 3, 1, 2, 5, 10, 10, 4], [8, 9, 3, 3, 10, 5, 4, 5, 7, 7, 2, 1]])
w[2] = np.array([6, 5, 3, 9, 1, 6, 4, 9, 10, 3, 8, 7])
model.get_layer('LST92935').set_weights(w) 
in0Mul47631 = tf.constant([[[[[0.7191, 0.3052]], [[0.4067, 0.6275]]]]])
in1Mul47631 = tf.constant([[[[[0.5181, 0.4339]], [[0.5872, 0.2511]]]]])
in0Min90012 = tf.constant([[[[[0.7514]]]]])
in1Min90012 = tf.constant([[[[[0.1623]]]]])
print (np.array2string(model.predict([in0Mul47631,in1Mul47631,in0Min90012,in1Min90012],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='LST92935.png')

LMul47631 = multiply_layer([[[[[[0.7191, 0.3052]], [[0.4067, 0.6275]]]]], [[[[[0.5181, 0.4339]], [[0.5872, 0.2511]]]]]], Mul47631), 
LRes15418 = reshape_layer(Mul47631, [1, 2, 2], Res15418), 
LMin90012 = minimum_layer([[[[[[0.7514]]]]], [[[[[0.1623]]]]]], Min90012), 
LRes88370 = reshape_layer(Min90012, [1, 1, 1], Res88370), 
LRes5548 = reshape_layer(Res88370, [1, 1], Res5548), 
LSep17230 = separable_conv1D_layer(Res5548, 1,[[[[0.9161]]],[[[0.3859, 0.7386, 0.0658, 0.413]]]],[0, 0, 0, 0], 1, true, Sep17230), 
LRes41822 = reshape_layer(Sep17230, [1, 2, 2], Res41822), 
LAve32551 = average_layer([Res15418,Res41822], Ave32551), 
LRes11685 = reshape_layer(Ave32551, [1, 4], Res11685), 
LLST92935 = lstm_layer(Res11685,[[5, 7, 10, 6, 10, 5, 8, 2, 5, 3, 6, 4], [8, 4, 7, 1, 10, 8, 10, 4, 2, 9, 6, 2], [10, 4, 10, 10, 1, 5, 3, 7, 5, 10, 2, 7], [2, 3, 9, 10, 5, 7, 2, 1, 7, 8, 1, 9]],[[4, 2, 2, 1, 10, 6, 6, 2, 7, 9, 1, 9], [5, 2, 4, 2, 5, 3, 1, 2, 5, 10, 10, 4], [8, 9, 3, 3, 10, 5, 4, 5, 7, 7, 2, 1]],[6, 5, 3, 9, 1, 6, 4, 9, 10, 3, 8, 7], LST92935), 
exec_layers([LMul47631,LRes15418,LMin90012,LRes88370,LRes5548,LSep17230,LRes41822,LAve32551,LRes11685,LLST92935],["Mul47631","Res15418","Min90012","Res88370","Res5548","Sep17230","Res41822","Ave32551","Res11685","LST92935"],LST92935,"LST92935")

Actual (Unparsed): [[0.7607598, 0.7614009, 0.7614457]]

Expected (Unparsed): [[0.7607597890305313,0.7614008787906111,0.7614457003278283]]

Actual:   [[0.7608, 0.7615, 0.7615]]

Expected: [[0.7608, 0.7615, 0.7615]]