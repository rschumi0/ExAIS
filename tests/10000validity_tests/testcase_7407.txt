import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0GRU33099 = tf.keras.layers.Input(shape=([3, 3]))

GRU33099 = keras.layers.GRU(1,reset_after=True, recurrent_activation='sigmoid', name = 'GRU33099', )(in0GRU33099)
Fla61178 = keras.layers.Flatten(name = 'Fla61178', )(GRU33099)
Res77357 = keras.layers.Reshape((1, 1), name = 'Res77357', )(Fla61178)
Res69328 = keras.layers.Reshape((1, 1, 1), name = 'Res69328', )(Res77357)
Res89045 = keras.layers.Reshape((1, 1, 1, 1), name = 'Res89045', )(Res69328)
Glo95491 = keras.layers.GlobalMaxPool3D(name = 'Glo95491', )(Res89045)
model = tf.keras.models.Model(inputs=[in0GRU33099], outputs=Glo95491)
w = model.get_layer('GRU33099').get_weights() 
w[0] = np.array([[9, 8, 8], [7, 8, 7], [6, 1, 8]])
w[1] = np.array([[3, 3, 5]])
w[2] = np.array([[5, 8, 3], [8, 10, 4]])
model.get_layer('GRU33099').set_weights(w) 
in0GRU33099 = tf.constant([[[6, 10, 7], [9, 3, 3], [4, 9, 1]]])
print (np.array2string(model.predict([in0GRU33099],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Glo95491.png')

LGRU33099 = gru_layer([[[6, 10, 7], [9, 3, 3], [4, 9, 1]]],[[9, 8, 8], [7, 8, 7], [6, 1, 8]],[[3, 3, 5]],[[5, 8, 3], [8, 10, 4]], true, GRU33099), 
LFla61178 = flatten_layer(GRU33099, Fla61178), 
LRes77357 = reshape_layer(Fla61178, [1, 1], Res77357), 
LRes69328 = reshape_layer(Res77357, [1, 1, 1], Res69328), 
LRes89045 = reshape_layer(Res69328, [1, 1, 1, 1], Res89045), 
LGlo95491 = global_max_pool3D_layer(Res89045, Glo95491), 
exec_layers([LGRU33099,LFla61178,LRes77357,LRes69328,LRes89045,LGlo95491],["GRU33099","Fla61178","Res77357","Res69328","Res89045","Glo95491"],Glo95491,"Glo95491")

Actual (Unparsed): [[0.0000000]]

Expected (Unparsed): [[0.0]]

Actual:   [[0]]

Expected: [[0]]