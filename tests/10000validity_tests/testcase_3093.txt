import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Add17283 = tf.keras.layers.Input(shape=([1, 2, 1, 2]))
in1Add17283 = tf.keras.layers.Input(shape=([1, 2, 1, 2]))

Add17283 = keras.layers.Add(name = 'Add17283', )([in0Add17283,in1Add17283])
Res71747 = keras.layers.Reshape((1, 2, 2), name = 'Res71747', )(Add17283)
Res32643 = keras.layers.Reshape((1, 4), name = 'Res32643', )(Res71747)
Ave88138 = keras.layers.AveragePooling1D(pool_size=(1), name = 'Ave88138', )(Res32643)
Res63662 = keras.layers.Reshape((1, 4, 1), name = 'Res63662', )(Ave88138)
Cro26627 = keras.layers.Cropping2D(cropping=((0, 0), (1, 0)), name = 'Cro26627', )(Res63662)
model = tf.keras.models.Model(inputs=[in0Add17283,in1Add17283], outputs=Cro26627)
in0Add17283 = tf.constant([[[[[0.7006, 0.5987]], [[0.565, 0.151]]]]])
in1Add17283 = tf.constant([[[[[0.3837, 0.5387]], [[0.2935, 0.0932]]]]])
print (np.array2string(model.predict([in0Add17283,in1Add17283],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Cro26627.png')

LAdd17283 = add_layer([[[[[[0.7006, 0.5987]], [[0.565, 0.151]]]]], [[[[[0.3837, 0.5387]], [[0.2935, 0.0932]]]]]], Add17283), 
LRes71747 = reshape_layer(Add17283, [1, 2, 2], Res71747), 
LRes32643 = reshape_layer(Res71747, [1, 4], Res32643), 
LAve88138 = average_pooling1D_layer(Res32643, 1, Ave88138), 
LRes63662 = reshape_layer(Ave88138, [1, 4, 1], Res63662), 
LCro26627 = cropping2D_layer(Res63662, 0, 0, 1, 0, Cro26627), 
exec_layers([LAdd17283,LRes71747,LRes32643,LAve88138,LRes63662,LCro26627],["Add17283","Res71747","Res32643","Ave88138","Res63662","Cro26627"],Cro26627,"Cro26627")

Actual (Unparsed): [[[[1.1374000], [0.8585000], [0.2442000]]]]

Expected (Unparsed): [[[[1.1374],[0.8584999999999999],[0.2442]]]]

Actual:   [[[[1.1374], [0.8585], [0.2442]]]]

Expected: [[[[1.1374], [0.8585], [0.2442]]]]