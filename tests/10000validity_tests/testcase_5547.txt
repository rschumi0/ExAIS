import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Sub39629 = tf.keras.layers.Input(shape=([3, 2, 2]))
in1Sub39629 = tf.keras.layers.Input(shape=([3, 2, 2]))
in0Ave53311 = tf.keras.layers.Input(shape=([1, 1]))
in0Con1008 = tf.keras.layers.Input(shape=([11]))
in0Con47703 = tf.keras.layers.Input(shape=([12, 1, 3, 1]))
in0Min61416 = tf.keras.layers.Input(shape=([1, 1, 2, 2]))
in1Min61416 = tf.keras.layers.Input(shape=([1, 1, 2, 2]))

Sub39629 = keras.layers.Subtract(name = 'Sub39629', )([in0Sub39629,in1Sub39629])
Res64107 = keras.layers.Reshape((3, 4), name = 'Res64107', )(Sub39629)
Fla68933 = keras.layers.Flatten(name = 'Fla68933', )(Res64107)
Ave53311 = keras.layers.AveragePooling1D(pool_size=(1), strides=(1), padding='same', name = 'Ave53311', )(in0Ave53311)
Res22083 = keras.layers.Reshape((1, 1, 1), name = 'Res22083', )(Ave53311)
Glo30538 = keras.layers.GlobalMaxPool2D(name = 'Glo30538', )(Res22083)
Con1008 = keras.layers.Concatenate(axis=1, name = 'Con1008', )([Glo30538,in0Con1008])
Max19960 = keras.layers.Maximum(name = 'Max19960', )([Fla68933,Con1008])
Res3992 = keras.layers.Reshape((12, 1), name = 'Res3992', )(Max19960)
Res96980 = keras.layers.Reshape((12, 1, 1), name = 'Res96980', )(Res3992)
Res32650 = keras.layers.Reshape((12, 1, 1, 1), name = 'Res32650', )(Res96980)
Zer70450 = keras.layers.ZeroPadding3D(padding=((0, 0), (0, 0), (2, 0)), name = 'Zer70450', )(Res32650)
Con47703 = keras.layers.Concatenate(axis=4, name = 'Con47703', )([Zer70450,in0Con47703])
Min61416 = keras.layers.Minimum(name = 'Min61416', )([in0Min61416,in1Min61416])
Zer43875 = keras.layers.ZeroPadding3D(padding=((11, 0), (0, 0), (1, 0)), name = 'Zer43875', )(Min61416)
Mul48076 = keras.layers.Multiply(name = 'Mul48076', )([Con47703,Zer43875])
model = tf.keras.models.Model(inputs=[in0Sub39629,in1Sub39629,in0Ave53311,in0Con1008,in0Con47703,in0Min61416,in1Min61416], outputs=Mul48076)
in0Sub39629 = tf.constant([[[[0.118, 0.668], [0.4404, 0.5998]], [[0.539, 0.328], [0.3073, 0.8263]], [[0.2057, 0.2043], [0.7684, 0.9773]]]])
in1Sub39629 = tf.constant([[[[0.0883, 0.6832], [0.4728, 0.5417]], [[0.1469, 0.7844], [0.7969, 0.1353]], [[0.6571, 0.2695], [0.4647, 0.5874]]]])
in0Ave53311 = tf.constant([[[1.8559]]])
in0Con1008 = tf.constant([[0.1836, 0.6139, 0.6903, 0.5467, 0.0984, 0.7265, 0.3764, 0.9601, 0.2182, 0.6709, 0.8153]])
in0Con47703 = tf.constant([[[[[0.2575], [0.3523], [0.3119]]], [[[0.6304], [0.5693], [0.8946]]], [[[0.3712], [0.3815], [0.0157]]], [[[0.6395], [0.5243], [0.5273]]], [[[0.9856], [0.4749], [0.7308]]], [[[0.1077], [0.9883], [0.7927]]], [[[0.5176], [0.4491], [0.8657]]], [[[0.5945], [0.8133], [0.3958]]], [[[0.7677], [0.8725], [0.9717]]], [[[0.0999], [0.5585], [0.6057]]], [[[0.5208], [0.2703], [0.3471]]], [[[0.1815], [0.4032], [0.5823]]]]])
in0Min61416 = tf.constant([[[[[0.3029, 0.0334], [0.2171, 0.86]]]]])
in1Min61416 = tf.constant([[[[[0.0424, 0.9739], [0.2129, 0.2856]]]]])
print (np.array2string(model.predict([in0Sub39629,in1Sub39629,in0Ave53311,in0Con1008,in0Con47703,in0Min61416,in1Min61416],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Mul48076.png')

LSub39629 = subtract_layer([[[[0.118, 0.668], [0.4404, 0.5998]], [[0.539, 0.328], [0.3073, 0.8263]], [[0.2057, 0.2043], [0.7684, 0.9773]]]], [[[[0.0883, 0.6832], [0.4728, 0.5417]], [[0.1469, 0.7844], [0.7969, 0.1353]], [[0.6571, 0.2695], [0.4647, 0.5874]]]], Sub39629), 
LRes64107 = reshape_layer(Sub39629, [3, 4], Res64107), 
LFla68933 = flatten_layer(Res64107, Fla68933), 
LAve53311 = average_pooling1D_layer([[[1.8559]]], 1, 1, true, Ave53311), 
LRes22083 = reshape_layer(Ave53311, [1, 1, 1], Res22083), 
LGlo30538 = global_max_pool2D_layer(Res22083, Glo30538), 
LCon1008 = concatenate_layer([Glo30538,[[0.1836, 0.6139, 0.6903, 0.5467, 0.0984, 0.7265, 0.3764, 0.9601, 0.2182, 0.6709, 0.8153]]], 1, Con1008), 
LMax19960 = maximum_layer([Fla68933,Con1008], Max19960), 
LRes3992 = reshape_layer(Max19960, [12, 1], Res3992), 
LRes96980 = reshape_layer(Res3992, [12, 1, 1], Res96980), 
LRes32650 = reshape_layer(Res96980, [12, 1, 1, 1], Res32650), 
LZer70450 = zero_padding3D_layer(Res32650, 0, 0, 0, 0, 2, 0, Zer70450), 
LCon47703 = concatenate_layer([Zer70450,[[[[[0.2575], [0.3523], [0.3119]]], [[[0.6304], [0.5693], [0.8946]]], [[[0.3712], [0.3815], [0.0157]]], [[[0.6395], [0.5243], [0.5273]]], [[[0.9856], [0.4749], [0.7308]]], [[[0.1077], [0.9883], [0.7927]]], [[[0.5176], [0.4491], [0.8657]]], [[[0.5945], [0.8133], [0.3958]]], [[[0.7677], [0.8725], [0.9717]]], [[[0.0999], [0.5585], [0.6057]]], [[[0.5208], [0.2703], [0.3471]]], [[[0.1815], [0.4032], [0.5823]]]]]], 4, Con47703), 
LMin61416 = minimum_layer([[[[[[0.3029, 0.0334], [0.2171, 0.86]]]]], [[[[[0.0424, 0.9739], [0.2129, 0.2856]]]]]], Min61416), 
LZer43875 = zero_padding3D_layer(Min61416, 11, 0, 0, 0, 1, 0, Zer43875), 
LMul48076 = multiply_layer([Con47703,Zer43875], Mul48076), 
exec_layers([LSub39629,LRes64107,LFla68933,LAve53311,LRes22083,LGlo30538,LCon1008,LMax19960,LRes3992,LRes96980,LRes32650,LZer70450,LCon47703,LMin61416,LZer43875,LMul48076],["Sub39629","Res64107","Fla68933","Ave53311","Res22083","Glo30538","Con1008","Max19960","Res3992","Res96980","Res32650","Zer70450","Con47703","Min61416","Zer43875","Mul48076"],Mul48076,"Mul48076")

Actual (Unparsed): [[[[[0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000]]], [[[0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000]]], [[[0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000]]], [[[0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000]]], [[[0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000]]], [[[0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000]]], [[[0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000]]], [[[0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000]]], [[[0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000]]], [[[0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000]]], [[[0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000]]], [[[0.0000000, 0.0000000], [0.0000000, 0.0134669], [0.1735774, 0.1663049]]]]]

Expected (Unparsed): [[[[[0,0.0],[0,0.0],[0.0,0.0]]],[[[0,0.0],[0,0.0],[0.0,0.0]]],[[[0,0.0],[0,0.0],[0.0,0.0]]],[[[0,0.0],[0,0.0],[0.0,0.0]]],[[[0,0.0],[0,0.0],[0.0,0.0]]],[[[0,0.0],[0,0.0],[0.0,0.0]]],[[[0,0.0],[0,0.0],[0.0,0.0]]],[[[0,0.0],[0,0.0],[0.0,0.0]]],[[[0,0.0],[0,0.0],[0.0,0.0]]],[[[0,0.0],[0,0.0],[0.0,0.0]]],[[[0,0.0],[0,0.0],[0.0,0.0]]],[[[0,0.0],[0.0,0.01346688],[0.17357737,0.16630488000000002]]]]]

Actual:   [[[[[0, 0], [0, 0], [0, 0]]], [[[0, 0], [0, 0], [0, 0]]], [[[0, 0], [0, 0], [0, 0]]], [[[0, 0], [0, 0], [0, 0]]], [[[0, 0], [0, 0], [0, 0]]], [[[0, 0], [0, 0], [0, 0]]], [[[0, 0], [0, 0], [0, 0]]], [[[0, 0], [0, 0], [0, 0]]], [[[0, 0], [0, 0], [0, 0]]], [[[0, 0], [0, 0], [0, 0]]], [[[0, 0], [0, 0], [0, 0]]], [[[0, 0], [0, 0.0135], [0.1736, 0.1664]]]]]

Expected: [[[[[0, 0], [0, 0], [0, 0]]], [[[0, 0], [0, 0], [0, 0]]], [[[0, 0], [0, 0], [0, 0]]], [[[0, 0], [0, 0], [0, 0]]], [[[0, 0], [0, 0], [0, 0]]], [[[0, 0], [0, 0], [0, 0]]], [[[0, 0], [0, 0], [0, 0]]], [[[0, 0], [0, 0], [0, 0]]], [[[0, 0], [0, 0], [0, 0]]], [[[0, 0], [0, 0], [0, 0]]], [[[0, 0], [0, 0], [0, 0]]], [[[0, 0], [0, 0.0135], [0.1736, 0.1664]]]]]