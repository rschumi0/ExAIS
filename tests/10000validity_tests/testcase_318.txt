import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Sep48789 = tf.keras.layers.Input(shape=([1, 1]))

Sep48789 = keras.layers.SeparableConv1D(4, (1),strides=(1), padding='same', name = 'Sep48789', )(in0Sep48789)
Sof69857 = keras.layers.Softmax(axis=1, name = 'Sof69857', )(Sep48789)
Glo48559 = keras.layers.GlobalAveragePooling1D(name = 'Glo48559', )(Sof69857)
model = tf.keras.models.Model(inputs=[in0Sep48789], outputs=Glo48559)
w = model.get_layer('Sep48789').get_weights() 
w[0] = np.array([[[0.5693]]])
w[1] = np.array([[[0.6391, 0.8149, 0.6483, 0.8601]]])
w[2] = np.array([0, 0, 0, 0])
model.get_layer('Sep48789').set_weights(w) 
in0Sep48789 = tf.constant([[[0.6341]]])
print (np.array2string(model.predict([in0Sep48789],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Glo48559.png')

LSep48789 = separable_conv1D_layer([[[0.6341]]], 1,[[[[0.5693]]],[[[0.6391, 0.8149, 0.6483, 0.8601]]]],[0, 0, 0, 0], 1, true, Sep48789), 
LSof69857 = softmax_layer(Sep48789, 1, Sof69857), 
LGlo48559 = global_average_pooling1D_layer(Sof69857, Glo48559), 
exec_layers([LSep48789,LSof69857,LGlo48559],["Sep48789","Sof69857","Glo48559"],Glo48559,"Glo48559")

Actual (Unparsed): [[1.0000000, 1.0000000, 1.0000000, 1.0000000]]

Expected (Unparsed): [[1.0,1.0,1.0,1.0]]

Actual:   [[1, 1, 1, 1]]

Expected: [[1, 1, 1, 1]]