import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Sim31843 = tf.keras.layers.Input(shape=([1, 1]))
in0Con61357 = tf.keras.layers.Input(shape=([3, 2]))
in0Con24653 = tf.keras.layers.Input(shape=([1, 2, 1]))

Sim31843 = keras.layers.SimpleRNN(3,name = 'Sim31843', )(in0Sim31843)
Res74372 = keras.layers.Reshape((3, 1), name = 'Res74372', )(Sim31843)
Con61357 = keras.layers.Concatenate(axis=2, name = 'Con61357', )([Res74372,in0Con61357])
Con24653 = keras.layers.Conv2D(2, (1, 1),strides=(1, 1), padding='valid', dilation_rate=(1, 1), name = 'Con24653', )(in0Con24653)
Res52974 = keras.layers.Reshape((1, 4), name = 'Res52974', )(Con24653)
Sep33114 = keras.layers.SeparableConv1D(3, (1),strides=(1), padding='valid', name = 'Sep33114', )(Res52974)
Zer65039 = keras.layers.ZeroPadding1D(padding=((2, 0)), name = 'Zer65039', )(Sep33114)
Mul51691 = keras.layers.Multiply(name = 'Mul51691', )([Con61357,Zer65039])
Res93416 = keras.layers.Reshape((3, 3, 1), name = 'Res93416', )(Mul51691)
Con56000 = keras.layers.Conv2D(2, (1, 2),strides=(1, 1), padding='same', dilation_rate=(1, 1), name = 'Con56000', )(Res93416)
Res92485 = keras.layers.Reshape((3, 3, 2, 1), name = 'Res92485', )(Con56000)
Con5455 = keras.layers.Conv3DTranspose(3, (1, 3, 1),strides=(1, 1, 1), padding='same', name = 'Con5455', )(Res92485)
model = tf.keras.models.Model(inputs=[in0Sim31843,in0Con61357,in0Con24653], outputs=Con5455)
w = model.get_layer('Sim31843').get_weights() 
w[0] = np.array([[6, 9, 2]])
w[1] = np.array([[8, 9, 8], [6, 4, 10], [9, 7, 9]])
w[2] = np.array([4, 3, 3])
model.get_layer('Sim31843').set_weights(w) 
w = model.get_layer('Con24653').get_weights() 
w[0] = np.array([[[[0.592, 0.0144]]]])
w[1] = np.array([0, 0])
model.get_layer('Con24653').set_weights(w) 
w = model.get_layer('Sep33114').get_weights() 
w[0] = np.array([[[0.2067], [0.1799], [0.3983], [0.5756]]])
w[1] = np.array([[[0.9377, 0.4033, 0.6703], [0.4385, 0.2787, 0.763], [0.3411, 0.2156, 0.1172], [0.5049, 0.0377, 0.2437]]])
w[2] = np.array([0, 0, 0])
model.get_layer('Sep33114').set_weights(w) 
w = model.get_layer('Con56000').get_weights() 
w[0] = np.array([[[[0.6902, 0.5689]], [[0.3903, 0.4146]]]])
w[1] = np.array([0, 0])
model.get_layer('Con56000').set_weights(w) 
w = model.get_layer('Con5455').get_weights() 
w[0] = np.array([[[[[0.1484], [0.6895], [0.9995]]], [[[0.51], [0.6883], [0.1942]]], [[[0.339], [0.8262], [0.0048]]]]])
w[1] = np.array([0, 0, 0])
model.get_layer('Con5455').set_weights(w) 
in0Sim31843 = tf.constant([[[4]]])
in0Con61357 = tf.constant([[[0.1393, 0.352], [0.227, 0.3444], [0.1965, 0.0163]]])
in0Con24653 = tf.constant([[[[0.5557], [0.2907]]]])
print (np.array2string(model.predict([in0Sim31843,in0Con61357,in0Con24653],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Con5455.png')

LSim31843 = simple_rnn_layer([[[4]]],[[6, 9, 2]],[[8, 9, 8], [6, 4, 10], [9, 7, 9]],[4, 3, 3], Sim31843), 
LRes74372 = reshape_layer(Sim31843, [3, 1], Res74372), 
LCon61357 = concatenate_layer([Res74372,[[[0.1393, 0.352], [0.227, 0.3444], [0.1965, 0.0163]]]], 2, Con61357), 
LCon24653 = conv2D_layer([[[[0.5557], [0.2907]]]], 1, 1,[[[[0.592, 0.0144]]]],[0, 0], 1, 1, false, 1, 1, Con24653), 
LRes52974 = reshape_layer(Con24653, [1, 4], Res52974), 
LSep33114 = separable_conv1D_layer(Res52974, 1,[[[[0.2067], [0.1799], [0.3983], [0.5756]]],[[[0.9377, 0.4033, 0.6703], [0.4385, 0.2787, 0.763], [0.3411, 0.2156, 0.1172], [0.5049, 0.0377, 0.2437]]]],[0, 0, 0], 1, false, Sep33114), 
LZer65039 = zero_padding1D_layer(Sep33114, 2, 0, Zer65039), 
LMul51691 = multiply_layer([Con61357,Zer65039], Mul51691), 
LRes93416 = reshape_layer(Mul51691, [3, 3, 1], Res93416), 
LCon56000 = conv2D_layer(Res93416, 1, 2,[[[[0.6902, 0.5689]], [[0.3903, 0.4146]]]],[0, 0], 1, 1, true, 1, 1, Con56000), 
LRes92485 = reshape_layer(Con56000, [3, 3, 2, 1], Res92485), 
LCon5455 = conv3D_transpose_layer(Res92485, 1, 3, 1,[[[[[0.1484], [0.6895], [0.9995]]], [[[0.51], [0.6883], [0.1942]]], [[[0.339], [0.8262], [0.0048]]]]],[0, 0, 0], 1, 1, 1, true, Con5455), 
exec_layers([LSim31843,LRes74372,LCon61357,LCon24653,LRes52974,LSep33114,LZer65039,LMul51691,LRes93416,LCon56000,LRes92485,LCon5455],["Sim31843","Res74372","Con61357","Con24653","Res52974","Sep33114","Zer65039","Mul51691","Res93416","Con56000","Res92485","Con5455"],Con5455,"Con5455")

Actual (Unparsed): [[[[[0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000]], [[0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000]], [[0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000]]], [[[0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000]], [[0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000]], [[0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000]]], [[[0.0339065, 0.0487654, 0.0187031], [0.0283575, 0.0407892, 0.0156512]], [[0.0251568, 0.0581086, 0.0021252], [0.0210425, 0.0485978, 0.0017717]], [[0.0023995, 0.0055029, 0.0001503], [0.0020062, 0.0046050, 0.0001243]]]]]

Expected (Unparsed): [[[[[0.0,0.0,0.0],[0.0,0.0,0.0]],[[0.0,0.0,0.0],[0.0,0.0,0.0]],[[0.0,0.0,0.0],[0.0,0.0,0.0]]],[[[0.0,0.0,0.0],[0.0,0.0,0.0]],[[0.0,0.0,0.0],[0.0,0.0,0.0]],[[0.0,0.0,0.0],[0.0,0.0,0.0]]],[[[0.03390654613290398,0.048765417671156684,0.018703126021088725],[0.02835748344132265,0.04078922660112195,0.015651158587963458]],[[0.025156846028224586,0.05810860394538453,0.002125172344645657],[0.021042521982166596,0.048597752490485466,0.001771682930229116]],[[0.0023994908836410364,0.005502896885677357,0.00015029947035045214],[0.0020061746188141335,0.004604963014086661,0.000124286827650719]]]]]

Actual:   [[[[[0, 0, 0], [0, 0, 0]], [[0, 0, 0], [0, 0, 0]], [[0, 0, 0], [0, 0, 0]]], [[[0, 0, 0], [0, 0, 0]], [[0, 0, 0], [0, 0, 0]], [[0, 0, 0], [0, 0, 0]]], [[[0.034, 0.0488, 0.0188], [0.0284, 0.0408, 0.0157]], [[0.0252, 0.0582, 0.0022], [0.0211, 0.0486, 0.0018]], [[0.0024, 0.0056, 0.0002], [0.0021, 0.0047, 0.0002]]]]]

Expected: [[[[[0, 0, 0], [0, 0, 0]], [[0, 0, 0], [0, 0, 0]], [[0, 0, 0], [0, 0, 0]]], [[[0, 0, 0], [0, 0, 0]], [[0, 0, 0], [0, 0, 0]], [[0, 0, 0], [0, 0, 0]]], [[[0.034, 0.0488, 0.0188], [0.0284, 0.0408, 0.0157]], [[0.0252, 0.0582, 0.0022], [0.0211, 0.0486, 0.0018]], [[0.0024, 0.0056, 0.0002], [0.0021, 0.0047, 0.0002]]]]]