import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Dot47372 = tf.keras.layers.Input(shape=([2, 2]))
in1Dot47372 = tf.keras.layers.Input(shape=([2, 2]))
in0Con87691 = tf.keras.layers.Input(shape=([3, 2]))
in0Mas97565 = tf.keras.layers.Input(shape=([2, 3]))

Dot47372 = keras.layers.Dot(axes=(1, 1), name = 'Dot47372', )([in0Dot47372,in1Dot47372])
Res49546 = keras.layers.Reshape((2, 2, 1), name = 'Res49546', )(Dot47372)
Cro63685 = keras.layers.Cropping2D(cropping=((1, 0), (1, 0)), name = 'Cro63685', )(Res49546)
Res35314 = keras.layers.Reshape((1, 1), name = 'Res35314', )(Cro63685)
Zer46395 = keras.layers.ZeroPadding1D(padding=((1, 1)), name = 'Zer46395', )(Res35314)
Con87691 = keras.layers.Concatenate(axis=2, name = 'Con87691', )([Zer46395,in0Con87691])
Mas97565 = keras.layers.Masking(mask_value=2, name = 'Mas97565', )(in0Mas97565)
Zer33705 = keras.layers.ZeroPadding1D(padding=((1, 0)), name = 'Zer33705', )(Mas97565)
Ave68975 = keras.layers.Average(name = 'Ave68975', )([Con87691,Zer33705])
Res15115 = keras.layers.Reshape((3, 3, 1), name = 'Res15115', )(Ave68975)
Con67570 = keras.layers.Conv2DTranspose(2, (3, 3),strides=(1, 2), padding='same', name = 'Con67570', )(Res15115)
model = tf.keras.models.Model(inputs=[in0Dot47372,in1Dot47372,in0Con87691,in0Mas97565], outputs=Con67570)
w = model.get_layer('Con67570').get_weights() 
w[0] = np.array([[[[0.7183], [0.1158]], [[0.5951], [0.0521]], [[0.7966], [0.5083]]], [[[0.0002], [0.3617]], [[0.1486], [0.7838]], [[0.621], [0.9348]]], [[[0.8631], [0.1797]], [[0.0116], [0.3866]], [[0.8368], [0.0104]]]])
w[1] = np.array([0, 0])
model.get_layer('Con67570').set_weights(w) 
in0Dot47372 = tf.constant([[[0.6309, 0.0482], [0.1522, 0.3768]]])
in1Dot47372 = tf.constant([[[0.3099, 0.4263], [0.3748, 0.7873]]])
in0Con87691 = tf.constant([[[0.2268, 0.0332], [0.8768, 0.3511], [0.3417, 0.2616]]])
in0Mas97565 = tf.constant([[[1.9808, 1.5469, 1.2972], [1.0004, 1.3679, 1.0424]]])
print (np.array2string(model.predict([in0Dot47372,in1Dot47372,in0Con87691,in0Mas97565],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Con67570.png')

LDot47372 = dot_layer([[[0.6309, 0.0482], [0.1522, 0.3768]]], [[[0.3099, 0.4263], [0.3748, 0.7873]]], 1, 1, Dot47372), 
LRes49546 = reshape_layer(Dot47372, [2, 2, 1], Res49546), 
LCro63685 = cropping2D_layer(Res49546, 1, 0, 1, 0, Cro63685), 
LRes35314 = reshape_layer(Cro63685, [1, 1], Res35314), 
LZer46395 = zero_padding1D_layer(Res35314, 1, 1, Zer46395), 
LCon87691 = concatenate_layer([Zer46395,[[[0.2268, 0.0332], [0.8768, 0.3511], [0.3417, 0.2616]]]], 2, Con87691), 
LMas97565 = masking_layer([[[1.9808, 1.5469, 1.2972], [1.0004, 1.3679, 1.0424]]], 2, Mas97565), 
LZer33705 = zero_padding1D_layer(Mas97565, 1, 0, Zer33705), 
LAve68975 = average_layer([Con87691,Zer33705], Ave68975), 
LRes15115 = reshape_layer(Ave68975, [3, 3, 1], Res15115), 
LCon67570 = conv2D_transpose_layer(Res15115, 3, 3,[[[[0.7183], [0.1158]], [[0.5951], [0.0521]], [[0.7966], [0.5083]]], [[[0.0002], [0.3617]], [[0.1486], [0.7838]], [[0.621], [0.9348]]], [[[0.8631], [0.1797]], [[0.0116], [0.3866]], [[0.8368], [0.0104]]]],[0, 0], 1, 2, true, Con67570), 
exec_layers([LDot47372,LRes49546,LCro63685,LRes35314,LZer46395,LCon87691,LMas97565,LZer33705,LAve68975,LRes15115,LCon67570],["Dot47372","Res49546","Cro63685","Res35314","Zer46395","Con87691","Mas97565","Zer33705","Ave68975","Res15115","Con67570"],Con67570,"Con67570")

Actual (Unparsed): [[[[0.8253275, 0.1330543], [0.6837706, 0.0598630], [1.7857889, 0.7653863], [0.7380232, 0.1520203], [1.6277714, 0.8234305], [0.4929184, 0.0559493]], [[0.3595234, 0.4735169], [0.4684106, 0.9266475], [1.8241098, 1.8860279], [0.6900878, 1.0382236], [2.0112095, 1.9450913], [0.5106664, 0.6863555]], [[0.9918029, 0.3873978], [0.0876581, 0.8362606], [2.3182271, 1.0064872], [0.1410807, 1.1384935], [2.2563611, 1.1955984], [0.1064473, 0.8296540]]]]

Expected (Unparsed): [[[[0.825327526045,0.13305433316999998],[0.6837705843649999,0.05986295991499999],[1.78578885109,0.7653862945449998],[0.738023175,0.15202030500000002],[1.627771375,0.823430465],[0.49291842499999994,0.055949294999999996]],[[0.35952346023000004,0.47351687595499997],[0.4684105908899999,0.92664752137],[1.82410978415,1.88602790002],[0.69008783,1.03822355],[2.0112095400000003,1.945091255],[0.51066645,0.68635553]],[[0.9918029325649999,0.387397846655],[0.08765813334,0.83626060459],[2.31822705732,1.00648717696],[0.14108074,1.1384934500000001],[2.256361145,1.195598435],[0.10644734,0.8296539900000001]]]]

Actual:   [[[[0.8254, 0.1331], [0.6838, 0.0599], [1.7858, 0.7654], [0.7381, 0.1521], [1.6278, 0.8235], [0.493, 0.056]], [[0.3596, 0.4736], [0.4685, 0.9267], [1.8242, 1.8861], [0.6901, 1.0383], [2.0113, 1.9451], [0.5107, 0.6864]], [[0.9919, 0.3874], [0.0877, 0.8363], [2.3183, 1.0065], [0.1411, 1.1385], [2.2564, 1.1956], [0.1065, 0.8297]]]]

Expected: [[[[0.8254, 0.1331], [0.6838, 0.0599], [1.7858, 0.7654], [0.7381, 0.1521], [1.6278, 0.8235], [0.493, 0.056]], [[0.3596, 0.4736], [0.4685, 0.9267], [1.8242, 1.8861], [0.6901, 1.0383], [2.0113, 1.9451], [0.5107, 0.6864]], [[0.9919, 0.3874], [0.0877, 0.8363], [2.3183, 1.0065], [0.1411, 1.1385], [2.2564, 1.1956], [0.1065, 0.8297]]]]