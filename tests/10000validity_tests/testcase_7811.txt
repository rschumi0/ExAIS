import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Ave94672 = tf.keras.layers.Input(shape=([2, 2, 1]))
in1Ave94672 = tf.keras.layers.Input(shape=([2, 2, 1]))
in0ReL47881 = tf.keras.layers.Input(shape=([2, 2]))
in0Sub33412 = tf.keras.layers.Input(shape=([3, 2]))
in1Sub33412 = tf.keras.layers.Input(shape=([3, 2]))

Ave94672 = keras.layers.Average(name = 'Ave94672', )([in0Ave94672,in1Ave94672])
Res98854 = keras.layers.Reshape((2, 2), name = 'Res98854', )(Ave94672)
ReL47881 = keras.layers.ReLU(max_value=1.2822693400084595, negative_slope=4.454572243623119, threshold=9.168991838276945, name = 'ReL47881', input_shape=(2, 2))(in0ReL47881)
Ave6550 = keras.layers.Average(name = 'Ave6550', )([Res98854,ReL47881])
Zer23841 = keras.layers.ZeroPadding1D(padding=((1, 0)), name = 'Zer23841', )(Ave6550)
Sub33412 = keras.layers.Subtract(name = 'Sub33412', )([in0Sub33412,in1Sub33412])
Min90175 = keras.layers.Minimum(name = 'Min90175', )([Zer23841,Sub33412])
Up_27253 = keras.layers.UpSampling1D(size=(2), name = 'Up_27253', )(Min90175)
model = tf.keras.models.Model(inputs=[in0Ave94672,in1Ave94672,in0ReL47881,in0Sub33412,in1Sub33412], outputs=Up_27253)
in0Ave94672 = tf.constant([[[[0.3613], [0.9843]], [[0.3999], [0.5646]]]])
in1Ave94672 = tf.constant([[[[0.0628], [0.5021]], [[0.472], [0.0314]]]])
in0ReL47881 = tf.constant([[[0.1657, 0.2862], [0.2001, 0.0282]]])
in0Sub33412 = tf.constant([[[0.0677, 0.9189], [0.7928, 0.2106], [0.0171, 0.3201]]])
in1Sub33412 = tf.constant([[[0.0055, 0.2863], [0.4072, 0.0937], [0.9811, 0.4786]]])
print (np.array2string(model.predict([in0Ave94672,in1Ave94672,in0ReL47881,in0Sub33412,in1Sub33412],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Up_27253.png')

LAve94672 = average_layer([[[[[0.3613], [0.9843]], [[0.3999], [0.5646]]]], [[[[0.0628], [0.5021]], [[0.472], [0.0314]]]]], Ave94672), 
LRes98854 = reshape_layer(Ave94672, [2, 2], Res98854), 
LReL47881 = relu_layer([[[0.1657, 0.2862], [0.2001, 0.0282]]], 1.2822693400084595, 4.454572243623119, 9.168991838276945, ReL47881), 
LAve6550 = average_layer([Res98854,ReL47881], Ave6550), 
LZer23841 = zero_padding1D_layer(Ave6550, 1, 0, Zer23841), 
LSub33412 = subtract_layer([[[0.0677, 0.9189], [0.7928, 0.2106], [0.0171, 0.3201]]], [[[0.0055, 0.2863], [0.4072, 0.0937], [0.9811, 0.4786]]], Sub33412), 
LMin90175 = minimum_layer([Zer23841,Sub33412], Min90175), 
LUp_27253 = up_sampling1D_layer(Min90175, 2, Up_27253), 
exec_layers([LAve94672,LRes98854,LReL47881,LAve6550,LZer23841,LSub33412,LMin90175,LUp_27253],["Ave94672","Res98854","ReL47881","Ave6550","Zer23841","Sub33412","Min90175","Up_27253"],Up_27253,"Up_27253")

Actual (Unparsed): [[[0.0000000, 0.0000000], [0.0000000, 0.0000000], [-19.9468820, -19.4129190], [-19.9468820, -19.4129190], [-19.7583133, -20.2101588], [-19.7583133, -20.2101588]]]

Expected (Unparsed): [[[0,0],[0,0],[-19.946881962013524,-19.412918984335228],[-19.946881962013524,-19.412918984335228],[-19.758313319423205,-20.21015880376261],[-19.758313319423205,-20.21015880376261]]]

Actual:   [[[0, 0], [0, 0], [-19.9468, -19.4129], [-19.9468, -19.4129], [-19.7583, -20.2101], [-19.7583, -20.2101]]]

Expected: [[[0, 0], [0, 0], [-19.9468, -19.4129], [-19.9468, -19.4129], [-19.7583, -20.2101], [-19.7583, -20.2101]]]