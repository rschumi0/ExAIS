import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Up_97812 = tf.keras.layers.Input(shape=([2, 3, 3, 3]))
in0LST3192 = tf.keras.layers.Input(shape=([1, 3]))
in0Con9511 = tf.keras.layers.Input(shape=([17]))

Up_97812 = keras.layers.UpSampling3D(size=(1, 1, 1), name = 'Up_97812', )(in0Up_97812)
Res65819 = keras.layers.Reshape((2, 3, 9), name = 'Res65819', )(Up_97812)
Dep55938 = keras.layers.DepthwiseConv2D((1, 1),strides=(2, 2), padding='same', name = 'Dep55938', )(Res65819)
Res10439 = keras.layers.Reshape((1, 18), name = 'Res10439', )(Dep55938)
Fla29331 = keras.layers.Flatten(name = 'Fla29331', )(Res10439)
LST3192 = keras.layers.LSTM(3,recurrent_activation='sigmoid', name = 'LST3192', )(in0LST3192)
Den86450 = keras.layers.Dense(4,name = 'Den86450', )(LST3192)
Res77924 = keras.layers.Reshape((4, 1), name = 'Res77924', )(Den86450)
Res6822 = keras.layers.Reshape((4, 1, 1), name = 'Res6822', )(Res77924)
Glo17497 = keras.layers.GlobalMaxPool2D(name = 'Glo17497', )(Res6822)
Con9511 = keras.layers.Concatenate(axis=1, name = 'Con9511', )([Glo17497,in0Con9511])
Ave23832 = keras.layers.Average(name = 'Ave23832', )([Fla29331,Con9511])
Res46587 = keras.layers.Reshape((18, 1), name = 'Res46587', )(Ave23832)
Loc56771 = keras.layers.LocallyConnected1D(3, (8),strides=(1), name = 'Loc56771', )(Res46587)
model = tf.keras.models.Model(inputs=[in0Up_97812,in0LST3192,in0Con9511], outputs=Loc56771)
w = model.get_layer('Dep55938').get_weights() 
w[0] = np.array([[[[0.757], [0.2535], [0.7431], [0.4333], [0.0586], [0.8085], [0.8353], [0.9895], [0.7165]]]])
w[1] = np.array([0, 0, 0, 0, 0, 0, 0, 0, 0])
model.get_layer('Dep55938').set_weights(w) 
w = model.get_layer('LST3192').get_weights() 
w[0] = np.array([[2, 6, 3, 3, 10, 10, 10, 10, 10, 3, 6, 2], [3, 5, 5, 4, 4, 4, 8, 2, 4, 8, 4, 6], [4, 3, 3, 1, 5, 2, 1, 5, 1, 2, 9, 9]])
w[1] = np.array([[3, 9, 6, 4, 10, 1, 10, 10, 2, 5, 10, 6], [3, 5, 8, 2, 2, 6, 10, 7, 10, 7, 7, 3], [6, 3, 6, 9, 2, 10, 7, 8, 8, 3, 2, 8]])
w[2] = np.array([1, 8, 10, 5, 2, 2, 9, 7, 2, 5, 10, 8])
model.get_layer('LST3192').set_weights(w) 
w = model.get_layer('Den86450').get_weights() 
w[0] = np.array([[0.5631, 0.5389, 0.5675, 0.7136], [0.3637, 0.3644, 0.2519, 0.8822], [0.2975, 0.7875, 0.5438, 0.0269]])
w[1] = np.array([0.5288, 0.4755, 0.2078, 0.8395])
model.get_layer('Den86450').set_weights(w) 
w = model.get_layer('Loc56771').get_weights() 
w[0] = np.array([[[0.8284, 0.7176, 0.0303], [0.6371, 0.9284, 0.4428], [0.3158, 0.6921, 0.0549], [0.8966, 0.2219, 0.6493], [0.6069, 0.3777, 0.362], [0.5721, 0.6776, 0.7994], [0.63, 0.4142, 0.1605], [0.4646, 0.1478, 0.0336]], [[0.7586, 0.9211, 0.4873], [0.7335, 0.229, 0.7689], [0.2915, 0.5581, 0.8195], [0.1114, 0.7458, 0.2216], [0.1295, 0.0622, 0.8296], [0.596, 0.5636, 0.3514], [0.9174, 0.145, 0.1377], [0.6109, 0.0931, 0.5524]], [[0.6427, 0.3616, 0.4891], [0.0669, 0.0749, 0.0705], [0.0722, 0.7591, 0.8033], [0.9058, 0.5559, 0.9722], [0.1572, 0.9752, 0.542], [0.7346, 0.9912, 0.9012], [0.5679, 0.8, 0.3141], [0.5614, 0.4663, 0.2819]], [[0.2485, 0.7012, 0.3343], [0.5568, 0.4346, 0.9121], [0.4503, 0.2252, 0.4842], [0.1619, 0.6794, 0.4397], [0.2458, 0.6613, 0.262], [0.8369, 0.4514, 0.3563], [0.3961, 0.6419, 0.7825], [0.7468, 0.6904, 0.2544]], [[0.5112, 0.05, 0.3901], [0.7691, 0.6552, 0.9493], [0.262, 0.4387, 0.0174], [0.3011, 0.1593, 0.0403], [0.5714, 0.2063, 0.5829], [0.4753, 0.4031, 0.7972], [0.0049, 0.7007, 0.8199], [0.9385, 0.3282, 0.2671]], [[0.3008, 0.7943, 0.616], [0.3214, 0.6732, 0.8785], [0.1468, 0.9222, 0.279], [0.7686, 0.9242, 0.9112], [0.9158, 0.1383, 0.0015], [0.3848, 0.027, 0.147], [0.3719, 0.0184, 0.9554], [0.5045, 0.7141, 0.1126]], [[0.069, 0.7276, 0.989], [0.2456, 0.2243, 0.2001], [0.7348, 0.8494, 0.341], [0.6542, 0.9229, 0.8551], [0.8266, 0.601, 0.4061], [0.7946, 0.2121, 0.0584], [0.315, 0.3908, 0.6407], [0.6438, 0.2393, 0.7205]], [[0.7809, 0.7323, 0.6705], [0.4911, 0.3318, 0.9165], [0.9747, 0.838, 0.5311], [0.4448, 0.1139, 0.3193], [0.9826, 0.6667, 0.4441], [0.4609, 0.6772, 0.765], [0.1756, 0.288, 0.2995], [0.2186, 0.5055, 0.7707]], [[0.782, 0.5063, 0.0043], [0.0017, 0.5997, 0.5348], [0.5693, 0.232, 0.4788], [0.1544, 0.1497, 0.5944], [0.0388, 0.9133, 0.4855], [0.4591, 0.3799, 0.8915], [0.3095, 0.8888, 0.7836], [0.0558, 0.8121, 0.5849]], [[0.5034, 0.0814, 0.6858], [0.0502, 0.0879, 0.9972], [0.7329, 0.4332, 0.8005], [0.3281, 0.8451, 0.664], [0.4794, 0.634, 0.1461], [0.0444, 0.6149, 0.471], [0.2265, 0.4108, 0.5127], [0.8402, 0.691, 0.3562]], [[0.1574, 0.1302, 0.6931], [0.7645, 0.7974, 0.4077], [0.7343, 0.0891, 0.3261], [0.6658, 0.7703, 0.391], [0.2569, 0.3019, 0.5848], [0.1388, 0.4555, 0.6626], [0.4661, 0.1717, 0.8257], [0.968, 0.455, 0.025]]])
w[1] = np.array([[0, 0, 0], [0, 0, 0], [0, 0, 0], [0, 0, 0], [0, 0, 0], [0, 0, 0], [0, 0, 0], [0, 0, 0], [0, 0, 0], [0, 0, 0], [0, 0, 0]])
model.get_layer('Loc56771').set_weights(w) 
in0Up_97812 = tf.constant([[[[[1.7207, 1.2328, 1.3438], [1.4156, 1.0748, 1.2725], [1.2596, 1.3674, 1.2835]], [[1.2733, 1.8076, 1.4207], [1.2235, 1.3886, 1.5605], [1.1507, 1.4658, 1.419]], [[1.2796, 1.7823, 1.5595], [1.3707, 1.99, 1.9076], [1.3689, 1.0783, 1.1507]]], [[[1.5435, 1.8121, 1.7783], [1.4564, 1.4038, 1.6083], [1.1935, 1.9568, 1.4509]], [[1.93, 1.6409, 1.859], [1.7589, 1.1794, 1.9128], [1.5917, 1.4737, 1.4591]], [[1.1956, 1.4519, 1.1869], [1.6923, 1.0901, 1.4308], [1.3523, 1.7615, 1.8754]]]]])
in0LST3192 = tf.constant([[[4, 3, 2]]])
in0Con9511 = tf.constant([[0.6165, 0.9438, 0.3703, 0.9765, 0.8276, 0.5393, 0.8054, 0.4036, 0.2496, 0.7325, 0.0564, 0.9186, 0.6677, 0.1735, 0.9394, 0.7317, 0.2061]])
print (np.array2string(model.predict([in0Up_97812,in0LST3192,in0Con9511],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Loc56771.png')

LUp_97812 = up_sampling3D_layer([[[[[1.7207, 1.2328, 1.3438], [1.4156, 1.0748, 1.2725], [1.2596, 1.3674, 1.2835]], [[1.2733, 1.8076, 1.4207], [1.2235, 1.3886, 1.5605], [1.1507, 1.4658, 1.419]], [[1.2796, 1.7823, 1.5595], [1.3707, 1.99, 1.9076], [1.3689, 1.0783, 1.1507]]], [[[1.5435, 1.8121, 1.7783], [1.4564, 1.4038, 1.6083], [1.1935, 1.9568, 1.4509]], [[1.93, 1.6409, 1.859], [1.7589, 1.1794, 1.9128], [1.5917, 1.4737, 1.4591]], [[1.1956, 1.4519, 1.1869], [1.6923, 1.0901, 1.4308], [1.3523, 1.7615, 1.8754]]]]], 1, 1, 1, Up_97812), 
LRes65819 = reshape_layer(Up_97812, [2, 3, 9], Res65819), 
LDep55938 = depthwise_conv2D_layer(Res65819, 1, 1,[[[[0.757], [0.2535], [0.7431], [0.4333], [0.0586], [0.8085], [0.8353], [0.9895], [0.7165]]]],[0, 0, 0, 0, 0, 0, 0, 0, 0], 2, 2, true, Dep55938), 
LRes10439 = reshape_layer(Dep55938, [1, 18], Res10439), 
LFla29331 = flatten_layer(Res10439, Fla29331), 
LLST3192 = lstm_layer([[[4, 3, 2]]],[[2, 6, 3, 3, 10, 10, 10, 10, 10, 3, 6, 2], [3, 5, 5, 4, 4, 4, 8, 2, 4, 8, 4, 6], [4, 3, 3, 1, 5, 2, 1, 5, 1, 2, 9, 9]],[[3, 9, 6, 4, 10, 1, 10, 10, 2, 5, 10, 6], [3, 5, 8, 2, 2, 6, 10, 7, 10, 7, 7, 3], [6, 3, 6, 9, 2, 10, 7, 8, 8, 3, 2, 8]],[1, 8, 10, 5, 2, 2, 9, 7, 2, 5, 10, 8], LST3192), 
LDen86450 = dense_layer(LST3192, [[0.5631, 0.5389, 0.5675, 0.7136], [0.3637, 0.3644, 0.2519, 0.8822], [0.2975, 0.7875, 0.5438, 0.0269]],[0.5288, 0.4755, 0.2078, 0.8395], Den86450), 
LRes77924 = reshape_layer(Den86450, [4, 1], Res77924), 
LRes6822 = reshape_layer(Res77924, [4, 1, 1], Res6822), 
LGlo17497 = global_max_pool2D_layer(Res6822, Glo17497), 
LCon9511 = concatenate_layer([Glo17497,[[0.6165, 0.9438, 0.3703, 0.9765, 0.8276, 0.5393, 0.8054, 0.4036, 0.2496, 0.7325, 0.0564, 0.9186, 0.6677, 0.1735, 0.9394, 0.7317, 0.2061]]], 1, Con9511), 
LAve23832 = average_layer([Fla29331,Con9511], Ave23832), 
LRes46587 = reshape_layer(Ave23832, [18, 1], Res46587), 
LLoc56771 = locally_connected1D_layer(Res46587, 8,[[[0.8284, 0.7176, 0.0303], [0.6371, 0.9284, 0.4428], [0.3158, 0.6921, 0.0549], [0.8966, 0.2219, 0.6493], [0.6069, 0.3777, 0.362], [0.5721, 0.6776, 0.7994], [0.63, 0.4142, 0.1605], [0.4646, 0.1478, 0.0336]], [[0.7586, 0.9211, 0.4873], [0.7335, 0.229, 0.7689], [0.2915, 0.5581, 0.8195], [0.1114, 0.7458, 0.2216], [0.1295, 0.0622, 0.8296], [0.596, 0.5636, 0.3514], [0.9174, 0.145, 0.1377], [0.6109, 0.0931, 0.5524]], [[0.6427, 0.3616, 0.4891], [0.0669, 0.0749, 0.0705], [0.0722, 0.7591, 0.8033], [0.9058, 0.5559, 0.9722], [0.1572, 0.9752, 0.542], [0.7346, 0.9912, 0.9012], [0.5679, 0.8, 0.3141], [0.5614, 0.4663, 0.2819]], [[0.2485, 0.7012, 0.3343], [0.5568, 0.4346, 0.9121], [0.4503, 0.2252, 0.4842], [0.1619, 0.6794, 0.4397], [0.2458, 0.6613, 0.262], [0.8369, 0.4514, 0.3563], [0.3961, 0.6419, 0.7825], [0.7468, 0.6904, 0.2544]], [[0.5112, 0.05, 0.3901], [0.7691, 0.6552, 0.9493], [0.262, 0.4387, 0.0174], [0.3011, 0.1593, 0.0403], [0.5714, 0.2063, 0.5829], [0.4753, 0.4031, 0.7972], [0.0049, 0.7007, 0.8199], [0.9385, 0.3282, 0.2671]], [[0.3008, 0.7943, 0.616], [0.3214, 0.6732, 0.8785], [0.1468, 0.9222, 0.279], [0.7686, 0.9242, 0.9112], [0.9158, 0.1383, 0.0015], [0.3848, 0.027, 0.147], [0.3719, 0.0184, 0.9554], [0.5045, 0.7141, 0.1126]], [[0.069, 0.7276, 0.989], [0.2456, 0.2243, 0.2001], [0.7348, 0.8494, 0.341], [0.6542, 0.9229, 0.8551], [0.8266, 0.601, 0.4061], [0.7946, 0.2121, 0.0584], [0.315, 0.3908, 0.6407], [0.6438, 0.2393, 0.7205]], [[0.7809, 0.7323, 0.6705], [0.4911, 0.3318, 0.9165], [0.9747, 0.838, 0.5311], [0.4448, 0.1139, 0.3193], [0.9826, 0.6667, 0.4441], [0.4609, 0.6772, 0.765], [0.1756, 0.288, 0.2995], [0.2186, 0.5055, 0.7707]], [[0.782, 0.5063, 0.0043], [0.0017, 0.5997, 0.5348], [0.5693, 0.232, 0.4788], [0.1544, 0.1497, 0.5944], [0.0388, 0.9133, 0.4855], [0.4591, 0.3799, 0.8915], [0.3095, 0.8888, 0.7836], [0.0558, 0.8121, 0.5849]], [[0.5034, 0.0814, 0.6858], [0.0502, 0.0879, 0.9972], [0.7329, 0.4332, 0.8005], [0.3281, 0.8451, 0.664], [0.4794, 0.634, 0.1461], [0.0444, 0.6149, 0.471], [0.2265, 0.4108, 0.5127], [0.8402, 0.691, 0.3562]], [[0.1574, 0.1302, 0.6931], [0.7645, 0.7974, 0.4077], [0.7343, 0.0891, 0.3261], [0.6658, 0.7703, 0.391], [0.2569, 0.3019, 0.5848], [0.1388, 0.4555, 0.6626], [0.4661, 0.1717, 0.8257], [0.968, 0.455, 0.025]]],[[0, 0, 0], [0, 0, 0], [0, 0, 0], [0, 0, 0], [0, 0, 0], [0, 0, 0], [0, 0, 0], [0, 0, 0], [0, 0, 0], [0, 0, 0], [0, 0, 0]], 1, Loc56771), 
exec_layers([LUp_97812,LRes65819,LDep55938,LRes10439,LFla29331,LLST3192,LDen86450,LRes77924,LRes6822,LGlo17497,LCon9511,LAve23832,LRes46587,LLoc56771],["Up_97812","Res65819","Dep55938","Res10439","Fla29331","LST3192","Den86450","Res77924","Res6822","Glo17497","Con9511","Ave23832","Res46587","Loc56771"],Loc56771,"Loc56771")

Actual (Unparsed): [[[4.2919225, 3.7388986, 1.7236603], [3.2547235, 2.0366659, 3.0550814], [3.1709621, 3.9575873, 3.6129973], [2.4608894, 3.1325697, 2.5835724], [2.7537388, 2.1515319, 2.6602971], [2.5951106, 3.5311350, 2.9284309], [2.6676017, 2.8193315, 2.7924442], [3.2268110, 3.0515910, 3.4695932], [1.4823635, 3.3765242, 2.9714568], [2.2474220, 2.8293846, 3.3124514], [2.6570857, 2.0533254, 3.0053161]]]

Expected (Unparsed): [[[4.29192246381518,3.7388985504691985,1.7236602581415486],[3.254723495036,2.0366658452275,3.0550814150159997],[3.1709621056525,3.9575872807095,3.6129972486434996],[2.460889363303,3.132569661088,2.5835724004915],[2.7537388337405,2.151531844158,2.6602971107299997],[2.595110609036,3.531134960881,2.9284308415330007],[2.6676017387449997,2.8193314845755,2.792444115961],[3.2268110092919997,3.051590963791,3.4695931657125],[1.4823634552995002,3.376524238045,2.9714568123015],[2.2474220120105004,2.829384620311,3.3124514290069995],[2.6570856901745,2.0533253685155004,3.005316130564]]]

Actual:   [[[4.292, 3.7389, 1.7237], [3.2548, 2.0367, 3.0551], [3.171, 3.9576, 3.613], [2.4609, 3.1326, 2.5836], [2.7538, 2.1516, 2.6603], [2.5952, 3.5312, 2.9285], [2.6677, 2.8194, 2.7925], [3.2269, 3.0516, 3.4696], [1.4824, 3.3766, 2.9715], [2.2475, 2.8294, 3.3125], [2.6571, 2.0534, 3.0054]]]

Expected: [[[4.292, 3.7389, 1.7237], [3.2548, 2.0367, 3.0551], [3.171, 3.9576, 3.613], [2.4609, 3.1326, 2.5836], [2.7538, 2.1516, 2.6603], [2.5952, 3.5312, 2.9285], [2.6677, 2.8194, 2.7925], [3.2269, 3.0516, 3.4696], [1.4824, 3.3766, 2.9715], [2.2475, 2.8294, 3.3125], [2.6571, 2.0534, 3.0054]]]