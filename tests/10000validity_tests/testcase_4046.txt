import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Min32489 = tf.keras.layers.Input(shape=([2, 1, 2]))
in1Min32489 = tf.keras.layers.Input(shape=([2, 1, 2]))
in0Min72308 = tf.keras.layers.Input(shape=([2, 2]))
in1Min72308 = tf.keras.layers.Input(shape=([2, 2]))
in0Con50870 = tf.keras.layers.Input(shape=([24, 3, 2]))
in0Up_62397 = tf.keras.layers.Input(shape=([4, 2, 3]))
in0Con40830 = tf.keras.layers.Input(shape=([2, 2, 2]))
in0Con57000 = tf.keras.layers.Input(shape=([23]))
in0Con71181 = tf.keras.layers.Input(shape=([24, 3, 2]))
in0Min90233 = tf.keras.layers.Input(shape=([1, 2]))
in1Min90233 = tf.keras.layers.Input(shape=([1, 2]))

Min32489 = keras.layers.Minimum(name = 'Min32489', )([in0Min32489,in1Min32489])
Res19882 = keras.layers.Reshape((2, 2), name = 'Res19882', )(Min32489)
Min72308 = keras.layers.Minimum(name = 'Min72308', )([in0Min72308,in1Min72308])
Min25594 = keras.layers.Minimum(name = 'Min25594', )([Res19882,Min72308])
Res11712 = keras.layers.Reshape((2, 2, 1), name = 'Res11712', )(Min25594)
Zer73966 = keras.layers.ZeroPadding2D(padding=((22, 0), (1, 0)), name = 'Zer73966', )(Res11712)
Con50870 = keras.layers.Concatenate(axis=3, name = 'Con50870', )([Zer73966,in0Con50870])
Up_62397 = keras.layers.UpSampling2D(size=(2, 1), name = 'Up_62397', )(in0Up_62397)
Res64782 = keras.layers.Reshape((8, 6), name = 'Res64782', )(Up_62397)
Max18969 = keras.layers.MaxPool1D(pool_size=(5), strides=(1), padding='valid', name = 'Max18969', )(Res64782)
Fla33388 = keras.layers.Flatten(name = 'Fla33388', )(Max18969)
Con40830 = keras.layers.Conv2DTranspose(4, (1, 1),strides=(1, 1), padding='same', name = 'Con40830', )(in0Con40830)
Res64708 = keras.layers.Reshape((2, 2, 4, 1), name = 'Res64708', )(Con40830)
Glo66376 = keras.layers.GlobalAveragePooling3D(name = 'Glo66376', )(Res64708)
Con57000 = keras.layers.Concatenate(axis=1, name = 'Con57000', )([Glo66376,in0Con57000])
Ave42234 = keras.layers.Average(name = 'Ave42234', )([Fla33388,Con57000])
Res19560 = keras.layers.Reshape((24, 1), name = 'Res19560', )(Ave42234)
Res78361 = keras.layers.Reshape((24, 1, 1), name = 'Res78361', )(Res19560)
Zer43864 = keras.layers.ZeroPadding2D(padding=((0, 0), (2, 0)), name = 'Zer43864', )(Res78361)
Con71181 = keras.layers.Concatenate(axis=3, name = 'Con71181', )([Zer43864,in0Con71181])
Min90233 = keras.layers.Minimum(name = 'Min90233', )([in0Min90233,in1Min90233])
Res66330 = keras.layers.Reshape((1, 2, 1), name = 'Res66330', )(Min90233)
Loc83433 = keras.layers.LocallyConnected2D(3, (1, 1),strides=(1, 1), name = 'Loc83433', )(Res66330)
Zer4002 = keras.layers.ZeroPadding2D(padding=((23, 0), (1, 0)), name = 'Zer4002', )(Loc83433)
Max9804 = keras.layers.Maximum(name = 'Max9804', )([Con71181,Zer4002])
Min42453 = keras.layers.Minimum(name = 'Min42453', )([Con50870,Max9804])
model = tf.keras.models.Model(inputs=[in0Min32489,in1Min32489,in0Min72308,in1Min72308,in0Con50870,in0Up_62397,in0Con40830,in0Con57000,in0Con71181,in0Min90233,in1Min90233], outputs=Min42453)
w = model.get_layer('Con40830').get_weights() 
w[0] = np.array([[[[0.2194, 0.0535], [0.0473, 0.5694], [0.7305, 0.6795], [0.1224, 0.4]]]])
w[1] = np.array([0, 0, 0, 0])
model.get_layer('Con40830').set_weights(w) 
w = model.get_layer('Loc83433').get_weights() 
w[0] = np.array([[[0.1266, 0.8522, 0.1198]], [[0.1064, 0.0709, 0.0431]]])
w[1] = np.array([[[0, 0, 0], [0, 0, 0]]])
model.get_layer('Loc83433').set_weights(w) 
in0Min32489 = tf.constant([[[[0.1137, 0.417]], [[0.2984, 0.2685]]]])
in1Min32489 = tf.constant([[[[0.2351, 0.6742]], [[0.845, 0.7761]]]])
in0Min72308 = tf.constant([[[0.3698, 0.0711], [0.0095, 0.989]]])
in1Min72308 = tf.constant([[[0.9379, 0.0348], [0.1568, 0.4662]]])
in0Con50870 = tf.constant([[[[0.0212, 0.4988], [0.1856, 0.4591], [0.2009, 0.9901]], [[0.4377, 0.2703], [0.376, 0.0187], [0.9872, 0.5881]], [[0.8535, 0.6685], [0.1044, 0.0316], [0.2016, 0.7007]], [[0.3036, 0.1533], [0.9384, 0.2569], [0.9995, 0.8036]], [[0.3554, 0.7613], [0.2883, 0.8019], [0.3957, 0.7208]], [[0.8257, 0.0386], [0.7698, 0.202], [0.9838, 0.2942]], [[0.9087, 0.2553], [0.3463, 0.1316], [0.9328, 0.4506]], [[0.1244, 0.1859], [0.5425, 0.9918], [0.2661, 0.0621]], [[0.6271, 0.5843], [0.8663, 0.8322], [0.4314, 0.3447]], [[0.9873, 0.8193], [0.32, 0.562], [0.1507, 0.9515]], [[0.5341, 0.0472], [0.5695, 0.4767], [0.8517, 0.1393]], [[0.6584, 0.2378], [0.7268, 0.1778], [0.4796, 0.0268]], [[0.313, 0.3941], [0.5611, 0.759], [0.7534, 0.7285]], [[0.9597, 0.3398], [0.2606, 0.0369], [0.5281, 0.13]], [[0.8028, 0.5141], [0.0987, 0.8611], [0.661, 0.9332]], [[0.6941, 0.6988], [0.732, 0.4759], [0.9368, 0.9082]], [[0.2105, 0.5122], [0.5468, 0.2346], [0.2058, 0.6775]], [[0.1861, 0.6835], [0.9235, 0.9886], [0.9389, 0.8541]], [[0.2707, 0.5461], [0.3998, 0.3626], [0.1359, 0.573]], [[0.6842, 0.1766], [0.1349, 0.1588], [0.6711, 0.875]], [[0.3156, 0.0964], [0.4427, 0.9455], [0.1719, 0.6246]], [[0.1942, 0.2381], [0.3268, 0.7256], [0.8531, 0.603]], [[0.4185, 0.8632], [0.2698, 0.5583], [0.0417, 0.6933]], [[0.1189, 0.5586], [0.0861, 0.332], [0.5861, 0.063]]]])
in0Up_62397 = tf.constant([[[[1.1454, 1.6085, 1.1247], [1.392, 1.7894, 1.155]], [[1.5939, 1.7214, 1.6889], [1.8901, 1.7131, 1.8332]], [[1.1998, 1.1726, 1.9666], [1.2913, 1.65, 1.4533]], [[1.4115, 1.6775, 1.6852], [1.7948, 1.8388, 1.3636]]]])
in0Con40830 = tf.constant([[[[0.4592, 0.9134], [0.1109, 0.5164]], [[0.317, 0.7666], [0.9191, 0.5951]]]])
in0Con57000 = tf.constant([[0.5649, 0.4206, 0.7313, 0.7656, 0.3884, 0.5536, 0.9845, 0.8375, 0.6684, 0.091, 0.8318, 0.7838, 0.6091, 0.846, 0.8855, 0.5017, 0.0716, 0.9863, 0.3541, 0.0015, 0.2205, 0.5083, 0.6875]])
in0Con71181 = tf.constant([[[[0.4161, 0.3544], [0.1423, 0.3768], [0.6392, 0.8955]], [[0.4643, 0.2204], [0.4105, 0.482], [0.7222, 0.6656]], [[0.9575, 0.2592], [0.7057, 0.207], [0.8091, 0.824]], [[0.425, 0.9347], [0.562, 0.5125], [0.5751, 0.9595]], [[0.2765, 0.2811], [0.6695, 0.3863], [0.003, 0.642]], [[0.6473, 0.3857], [0.7758, 0.0796], [0.6711, 0.0824]], [[0.6464, 0.9972], [0.6476, 0.3036], [0.9771, 0.5206]], [[0.731, 0.7123], [0.266, 0.4218], [0.6923, 0.489]], [[0.2327, 0.0138], [0.5821, 0.5175], [0.7584, 0.1178]], [[0.5487, 0.9831], [0.5448, 0.1049], [0.0286, 0.3946]], [[0.0323, 0.575], [0.7769, 0.3079], [0.2018, 0.4527]], [[0.3684, 0.4452], [0.3728, 0.1479], [0.8673, 0.4804]], [[0.0078, 0.9637], [0.3363, 0.4921], [0.8311, 0.1115]], [[0.7366, 0.9734], [0.2832, 0.5403], [0.5562, 0.3324]], [[0.4411, 0.2792], [0.1958, 0.0154], [0.0597, 0.1503]], [[0.7408, 0.7452], [0.3128, 0.5132], [0.2533, 0.8742]], [[0.1474, 0.1745], [0.1267, 0.5258], [0.904, 0.711]], [[0.3671, 0.0202], [0.9991, 0.2398], [0.8839, 0.0631]], [[0.0212, 0.0988], [0.0082, 0.3123], [0.5468, 0.9937]], [[0.487, 0.233], [0.3488, 0.9147], [0.1497, 0.6016]], [[0.4383, 0.5288], [0.2874, 0.6239], [0.5607, 0.8135]], [[0.5435, 0.3976], [0.3468, 0.4136], [0.7735, 0.3668]], [[0.3108, 0.5746], [0.8995, 0.4915], [0.2819, 0.5354]], [[0.2593, 0.0879], [0.6576, 0.9456], [0.3294, 0.6802]]]])
in0Min90233 = tf.constant([[[0.1232, 0.8116]]])
in1Min90233 = tf.constant([[[0.4675, 0.0915]]])
print (np.array2string(model.predict([in0Min32489,in1Min32489,in0Min72308,in1Min72308,in0Con50870,in0Up_62397,in0Con40830,in0Con57000,in0Con71181,in0Min90233,in1Min90233],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Min42453.png')

LMin32489 = minimum_layer([[[[[0.1137, 0.417]], [[0.2984, 0.2685]]]], [[[[0.2351, 0.6742]], [[0.845, 0.7761]]]]], Min32489), 
LRes19882 = reshape_layer(Min32489, [2, 2], Res19882), 
LMin72308 = minimum_layer([[[[0.3698, 0.0711], [0.0095, 0.989]]], [[[0.9379, 0.0348], [0.1568, 0.4662]]]], Min72308), 
LMin25594 = minimum_layer([Res19882,Min72308], Min25594), 
LRes11712 = reshape_layer(Min25594, [2, 2, 1], Res11712), 
LZer73966 = zero_padding2D_layer(Res11712, 22, 0, 1, 0, Zer73966), 
LCon50870 = concatenate_layer([Zer73966,[[[[0.0212, 0.4988], [0.1856, 0.4591], [0.2009, 0.9901]], [[0.4377, 0.2703], [0.376, 0.0187], [0.9872, 0.5881]], [[0.8535, 0.6685], [0.1044, 0.0316], [0.2016, 0.7007]], [[0.3036, 0.1533], [0.9384, 0.2569], [0.9995, 0.8036]], [[0.3554, 0.7613], [0.2883, 0.8019], [0.3957, 0.7208]], [[0.8257, 0.0386], [0.7698, 0.202], [0.9838, 0.2942]], [[0.9087, 0.2553], [0.3463, 0.1316], [0.9328, 0.4506]], [[0.1244, 0.1859], [0.5425, 0.9918], [0.2661, 0.0621]], [[0.6271, 0.5843], [0.8663, 0.8322], [0.4314, 0.3447]], [[0.9873, 0.8193], [0.32, 0.562], [0.1507, 0.9515]], [[0.5341, 0.0472], [0.5695, 0.4767], [0.8517, 0.1393]], [[0.6584, 0.2378], [0.7268, 0.1778], [0.4796, 0.0268]], [[0.313, 0.3941], [0.5611, 0.759], [0.7534, 0.7285]], [[0.9597, 0.3398], [0.2606, 0.0369], [0.5281, 0.13]], [[0.8028, 0.5141], [0.0987, 0.8611], [0.661, 0.9332]], [[0.6941, 0.6988], [0.732, 0.4759], [0.9368, 0.9082]], [[0.2105, 0.5122], [0.5468, 0.2346], [0.2058, 0.6775]], [[0.1861, 0.6835], [0.9235, 0.9886], [0.9389, 0.8541]], [[0.2707, 0.5461], [0.3998, 0.3626], [0.1359, 0.573]], [[0.6842, 0.1766], [0.1349, 0.1588], [0.6711, 0.875]], [[0.3156, 0.0964], [0.4427, 0.9455], [0.1719, 0.6246]], [[0.1942, 0.2381], [0.3268, 0.7256], [0.8531, 0.603]], [[0.4185, 0.8632], [0.2698, 0.5583], [0.0417, 0.6933]], [[0.1189, 0.5586], [0.0861, 0.332], [0.5861, 0.063]]]]], 3, Con50870), 
LUp_62397 = up_sampling2D_layer([[[[1.1454, 1.6085, 1.1247], [1.392, 1.7894, 1.155]], [[1.5939, 1.7214, 1.6889], [1.8901, 1.7131, 1.8332]], [[1.1998, 1.1726, 1.9666], [1.2913, 1.65, 1.4533]], [[1.4115, 1.6775, 1.6852], [1.7948, 1.8388, 1.3636]]]], 2, 1, Up_62397), 
LRes64782 = reshape_layer(Up_62397, [8, 6], Res64782), 
LMax18969 = max_pool1D_layer(Res64782, 5, 1, false, Max18969), 
LFla33388 = flatten_layer(Max18969, Fla33388), 
LCon40830 = conv2D_transpose_layer([[[[0.4592, 0.9134], [0.1109, 0.5164]], [[0.317, 0.7666], [0.9191, 0.5951]]]], 1, 1,[[[[0.2194, 0.0535], [0.0473, 0.5694], [0.7305, 0.6795], [0.1224, 0.4]]]],[0, 0, 0, 0], 1, 1, true, Con40830), 
LRes64708 = reshape_layer(Con40830, [2, 2, 4, 1], Res64708), 
LGlo66376 = global_average_pooling3D_layer(Res64708, Glo66376), 
LCon57000 = concatenate_layer([Glo66376,[[0.5649, 0.4206, 0.7313, 0.7656, 0.3884, 0.5536, 0.9845, 0.8375, 0.6684, 0.091, 0.8318, 0.7838, 0.6091, 0.846, 0.8855, 0.5017, 0.0716, 0.9863, 0.3541, 0.0015, 0.2205, 0.5083, 0.6875]]], 1, Con57000), 
LAve42234 = average_layer([Fla33388,Con57000], Ave42234), 
LRes19560 = reshape_layer(Ave42234, [24, 1], Res19560), 
LRes78361 = reshape_layer(Res19560, [24, 1, 1], Res78361), 
LZer43864 = zero_padding2D_layer(Res78361, 0, 0, 2, 0, Zer43864), 
LCon71181 = concatenate_layer([Zer43864,[[[[0.4161, 0.3544], [0.1423, 0.3768], [0.6392, 0.8955]], [[0.4643, 0.2204], [0.4105, 0.482], [0.7222, 0.6656]], [[0.9575, 0.2592], [0.7057, 0.207], [0.8091, 0.824]], [[0.425, 0.9347], [0.562, 0.5125], [0.5751, 0.9595]], [[0.2765, 0.2811], [0.6695, 0.3863], [0.003, 0.642]], [[0.6473, 0.3857], [0.7758, 0.0796], [0.6711, 0.0824]], [[0.6464, 0.9972], [0.6476, 0.3036], [0.9771, 0.5206]], [[0.731, 0.7123], [0.266, 0.4218], [0.6923, 0.489]], [[0.2327, 0.0138], [0.5821, 0.5175], [0.7584, 0.1178]], [[0.5487, 0.9831], [0.5448, 0.1049], [0.0286, 0.3946]], [[0.0323, 0.575], [0.7769, 0.3079], [0.2018, 0.4527]], [[0.3684, 0.4452], [0.3728, 0.1479], [0.8673, 0.4804]], [[0.0078, 0.9637], [0.3363, 0.4921], [0.8311, 0.1115]], [[0.7366, 0.9734], [0.2832, 0.5403], [0.5562, 0.3324]], [[0.4411, 0.2792], [0.1958, 0.0154], [0.0597, 0.1503]], [[0.7408, 0.7452], [0.3128, 0.5132], [0.2533, 0.8742]], [[0.1474, 0.1745], [0.1267, 0.5258], [0.904, 0.711]], [[0.3671, 0.0202], [0.9991, 0.2398], [0.8839, 0.0631]], [[0.0212, 0.0988], [0.0082, 0.3123], [0.5468, 0.9937]], [[0.487, 0.233], [0.3488, 0.9147], [0.1497, 0.6016]], [[0.4383, 0.5288], [0.2874, 0.6239], [0.5607, 0.8135]], [[0.5435, 0.3976], [0.3468, 0.4136], [0.7735, 0.3668]], [[0.3108, 0.5746], [0.8995, 0.4915], [0.2819, 0.5354]], [[0.2593, 0.0879], [0.6576, 0.9456], [0.3294, 0.6802]]]]], 3, Con71181), 
LMin90233 = minimum_layer([[[[0.1232, 0.8116]]], [[[0.4675, 0.0915]]]], Min90233), 
LRes66330 = reshape_layer(Min90233, [1, 2, 1], Res66330), 
LLoc83433 = locally_connected2D_layer(Res66330, 1, 1,[[[0.1266, 0.8522, 0.1198]], [[0.1064, 0.0709, 0.0431]]],[[[0, 0, 0], [0, 0, 0]]], 1, 1, Loc83433), 
LZer4002 = zero_padding2D_layer(Loc83433, 23, 0, 1, 0, Zer4002), 
LMax9804 = maximum_layer([Con71181,Zer4002], Max9804), 
LMin42453 = minimum_layer([Con50870,Max9804], Min42453), 
exec_layers([LMin32489,LRes19882,LMin72308,LMin25594,LRes11712,LZer73966,LCon50870,LUp_62397,LRes64782,LMax18969,LFla33388,LCon40830,LRes64708,LGlo66376,LCon57000,LAve42234,LRes19560,LRes78361,LZer43864,LCon71181,LMin90233,LRes66330,LLoc83433,LZer4002,LMax9804,LMin42453],["Min32489","Res19882","Min72308","Min25594","Res11712","Zer73966","Con50870","Up_62397","Res64782","Max18969","Fla33388","Con40830","Res64708","Glo66376","Con57000","Ave42234","Res19560","Res78361","Zer43864","Con71181","Min90233","Res66330","Loc83433","Zer4002","Max9804","Min42453"],Min42453,"Min42453")

Actual (Unparsed): [[[[0.0000000, 0.0212000, 0.3544000], [0.0000000, 0.1423000, 0.3768000], [0.0000000, 0.2009000, 0.8955000]], [[0.0000000, 0.4377000, 0.2204000], [0.0000000, 0.3760000, 0.0187000], [0.0000000, 0.7222000, 0.5881000]], [[0.0000000, 0.8535000, 0.2592000], [0.0000000, 0.1044000, 0.0316000], [0.0000000, 0.2016000, 0.7007000]], [[0.0000000, 0.3036000, 0.1533000], [0.0000000, 0.5620000, 0.2569000], [0.0000000, 0.5751000, 0.8036000]], [[0.0000000, 0.2765000, 0.2811000], [0.0000000, 0.2883000, 0.3863000], [0.0000000, 0.0030000, 0.6420000]], [[0.0000000, 0.6473000, 0.0386000], [0.0000000, 0.7698000, 0.0796000], [0.0000000, 0.6711000, 0.0824000]], [[0.0000000, 0.6464000, 0.2553000], [0.0000000, 0.3463000, 0.1316000], [0.0000000, 0.9328000, 0.4506000]], [[0.0000000, 0.1244000, 0.1859000], [0.0000000, 0.2660000, 0.4218000], [0.0000000, 0.2661000, 0.0621000]], [[0.0000000, 0.2327000, 0.0138000], [0.0000000, 0.5821000, 0.5175000], [0.0000000, 0.4314000, 0.1178000]], [[0.0000000, 0.5487000, 0.8193000], [0.0000000, 0.3200000, 0.1049000], [0.0000000, 0.0286000, 0.3946000]], [[0.0000000, 0.0323000, 0.0472000], [0.0000000, 0.5695000, 0.3079000], [0.0000000, 0.2018000, 0.1393000]], [[0.0000000, 0.3684000, 0.2378000], [0.0000000, 0.3728000, 0.1479000], [0.0000000, 0.4796000, 0.0268000]], [[0.0000000, 0.0078000, 0.3941000], [0.0000000, 0.3363000, 0.4921000], [0.0000000, 0.7534000, 0.1115000]], [[0.0000000, 0.7366000, 0.3398000], [0.0000000, 0.2606000, 0.0369000], [0.0000000, 0.5281000, 0.1300000]], [[0.0000000, 0.4411000, 0.2792000], [0.0000000, 0.0987000, 0.0154000], [0.0000000, 0.0597000, 0.1503000]], [[0.0000000, 0.6941000, 0.6988000], [0.0000000, 0.3128000, 0.4759000], [0.0000000, 0.2533000, 0.8742000]], [[0.0000000, 0.1474000, 0.1745000], [0.0000000, 0.1267000, 0.2346000], [0.0000000, 0.2058000, 0.6775000]], [[0.0000000, 0.1861000, 0.0202000], [0.0000000, 0.9235000, 0.2398000], [0.0000000, 0.8839000, 0.0631000]], [[0.0000000, 0.0212000, 0.0988000], [0.0000000, 0.0082000, 0.3123000], [0.0000000, 0.1359000, 0.5730000]], [[0.0000000, 0.4870000, 0.1766000], [0.0000000, 0.1349000, 0.1588000], [0.0000000, 0.1497000, 0.6016000]], [[0.0000000, 0.3156000, 0.0964000], [0.0000000, 0.2874000, 0.6239000], [0.0000000, 0.1719000, 0.6246000]], [[0.0000000, 0.1942000, 0.2381000], [0.0000000, 0.3268000, 0.4136000], [0.0000000, 0.7735000, 0.3668000]], [[0.0000000, 0.3108000, 0.5746000], [0.0000000, 0.2698000, 0.4915000], [0.0348000, 0.0417000, 0.5354000]], [[0.0000000, 0.1189000, 0.0879000], [0.0095000, 0.0861000, 0.3320000], [0.2685000, 0.3294000, 0.0630000]]]]

Expected (Unparsed): [[[[0,0.0212,0.3544],[0,0.1423,0.3768],[0,0.2009,0.8955]],[[0,0.4377,0.2204],[0,0.376,0.0187],[0,0.7222,0.5881]],[[0,0.8535,0.2592],[0,0.1044,0.0316],[0,0.2016,0.7007]],[[0,0.3036,0.1533],[0,0.562,0.2569],[0,0.5751,0.8036]],[[0,0.2765,0.2811],[0,0.2883,0.3863],[0,0.003,0.642]],[[0,0.6473,0.0386],[0,0.7698,0.0796],[0,0.6711,0.0824]],[[0,0.6464,0.2553],[0,0.3463,0.1316],[0,0.9328,0.4506]],[[0,0.1244,0.1859],[0,0.266,0.4218],[0,0.2661,0.0621]],[[0,0.2327,0.0138],[0,0.5821,0.5175],[0,0.4314,0.1178]],[[0,0.5487,0.8193],[0,0.32,0.1049],[0,0.0286,0.3946]],[[0,0.0323,0.0472],[0,0.5695,0.3079],[0,0.2018,0.1393]],[[0,0.3684,0.2378],[0,0.3728,0.1479],[0,0.4796,0.0268]],[[0,0.0078,0.3941],[0,0.3363,0.4921],[0,0.7534,0.1115]],[[0,0.7366,0.3398],[0,0.2606,0.0369],[0,0.5281,0.13]],[[0,0.4411,0.2792],[0,0.0987,0.0154],[0,0.0597,0.1503]],[[0,0.6941,0.6988],[0,0.3128,0.4759],[0,0.2533,0.8742]],[[0,0.1474,0.1745],[0,0.1267,0.2346],[0,0.2058,0.6775]],[[0,0.1861,0.0202],[0,0.9235,0.2398],[0,0.8839,0.0631]],[[0,0.0212,0.0988],[0,0.0082,0.3123],[0,0.1359,0.573]],[[0,0.487,0.1766],[0,0.1349,0.1588],[0,0.1497,0.6016]],[[0,0.3156,0.0964],[0,0.2874,0.6239],[0,0.1719,0.6246]],[[0,0.1942,0.2381],[0,0.3268,0.4136],[0,0.7735,0.3668]],[[0,0.3108,0.5746],[0,0.2698,0.4915],[0.0348,0.0417,0.5354]],[[0,0.1189,0.0879],[0.0095,0.0861,0.332],[0.2685,0.3294,0.063]]]]

Actual:   [[[[0, 0.0212, 0.3544], [0, 0.1423, 0.3768], [0, 0.2009, 0.8955]], [[0, 0.4377, 0.2204], [0, 0.376, 0.0187], [0, 0.7222, 0.5881]], [[0, 0.8535, 0.2592], [0, 0.1044, 0.0316], [0, 0.2016, 0.7007]], [[0, 0.3036, 0.1533], [0, 0.562, 0.2569], [0, 0.5751, 0.8036]], [[0, 0.2765, 0.2811], [0, 0.2883, 0.3863], [0, 0.003, 0.642]], [[0, 0.6473, 0.0386], [0, 0.7698, 0.0796], [0, 0.6711, 0.0824]], [[0, 0.6464, 0.2553], [0, 0.3463, 0.1316], [0, 0.9328, 0.4506]], [[0, 0.1244, 0.1859], [0, 0.266, 0.4218], [0, 0.2661, 0.0621]], [[0, 0.2327, 0.0138], [0, 0.5821, 0.5175], [0, 0.4314, 0.1178]], [[0, 0.5487, 0.8193], [0, 0.32, 0.1049], [0, 0.0286, 0.3946]], [[0, 0.0323, 0.0472], [0, 0.5695, 0.3079], [0, 0.2018, 0.1393]], [[0, 0.3684, 0.2378], [0, 0.3728, 0.1479], [0, 0.4796, 0.0268]], [[0, 0.0078, 0.3941], [0, 0.3363, 0.4921], [0, 0.7534, 0.1115]], [[0, 0.7366, 0.3398], [0, 0.2606, 0.0369], [0, 0.5281, 0.13]], [[0, 0.4411, 0.2792], [0, 0.0987, 0.0154], [0, 0.0597, 0.1503]], [[0, 0.6941, 0.6988], [0, 0.3128, 0.4759], [0, 0.2533, 0.8742]], [[0, 0.1474, 0.1745], [0, 0.1267, 0.2346], [0, 0.2058, 0.6775]], [[0, 0.1861, 0.0202], [0, 0.9235, 0.2398], [0, 0.8839, 0.0631]], [[0, 0.0212, 0.0988], [0, 0.0082, 0.3123], [0, 0.1359, 0.573]], [[0, 0.487, 0.1766], [0, 0.1349, 0.1588], [0, 0.1497, 0.6016]], [[0, 0.3156, 0.0964], [0, 0.2874, 0.6239], [0, 0.1719, 0.6246]], [[0, 0.1942, 0.2381], [0, 0.3268, 0.4136], [0, 0.7735, 0.3668]], [[0, 0.3108, 0.5746], [0, 0.2698, 0.4915], [0.0348, 0.0417, 0.5354]], [[0, 0.1189, 0.0879], [0.0095, 0.0861, 0.332], [0.2685, 0.3294, 0.063]]]]

Expected: [[[[0, 0.0212, 0.3544], [0, 0.1423, 0.3768], [0, 0.2009, 0.8955]], [[0, 0.4377, 0.2204], [0, 0.376, 0.0187], [0, 0.7222, 0.5881]], [[0, 0.8535, 0.2592], [0, 0.1044, 0.0316], [0, 0.2016, 0.7007]], [[0, 0.3036, 0.1533], [0, 0.562, 0.2569], [0, 0.5751, 0.8036]], [[0, 0.2765, 0.2811], [0, 0.2883, 0.3863], [0, 0.003, 0.642]], [[0, 0.6473, 0.0386], [0, 0.7698, 0.0796], [0, 0.6711, 0.0824]], [[0, 0.6464, 0.2553], [0, 0.3463, 0.1316], [0, 0.9328, 0.4506]], [[0, 0.1244, 0.1859], [0, 0.266, 0.4218], [0, 0.2661, 0.0621]], [[0, 0.2327, 0.0138], [0, 0.5821, 0.5175], [0, 0.4314, 0.1178]], [[0, 0.5487, 0.8193], [0, 0.32, 0.1049], [0, 0.0286, 0.3946]], [[0, 0.0323, 0.0472], [0, 0.5695, 0.3079], [0, 0.2018, 0.1393]], [[0, 0.3684, 0.2378], [0, 0.3728, 0.1479], [0, 0.4796, 0.0268]], [[0, 0.0078, 0.3941], [0, 0.3363, 0.4921], [0, 0.7534, 0.1115]], [[0, 0.7366, 0.3398], [0, 0.2606, 0.0369], [0, 0.5281, 0.13]], [[0, 0.4411, 0.2792], [0, 0.0987, 0.0154], [0, 0.0597, 0.1503]], [[0, 0.6941, 0.6988], [0, 0.3128, 0.4759], [0, 0.2533, 0.8742]], [[0, 0.1474, 0.1745], [0, 0.1267, 0.2346], [0, 0.2058, 0.6775]], [[0, 0.1861, 0.0202], [0, 0.9235, 0.2398], [0, 0.8839, 0.0631]], [[0, 0.0212, 0.0988], [0, 0.0082, 0.3123], [0, 0.1359, 0.573]], [[0, 0.487, 0.1766], [0, 0.1349, 0.1588], [0, 0.1497, 0.6016]], [[0, 0.3156, 0.0964], [0, 0.2874, 0.6239], [0, 0.1719, 0.6246]], [[0, 0.1942, 0.2381], [0, 0.3268, 0.4136], [0, 0.7735, 0.3668]], [[0, 0.3108, 0.5746], [0, 0.2698, 0.4915], [0.0348, 0.0417, 0.5354]], [[0, 0.1189, 0.0879], [0.0095, 0.0861, 0.332], [0.2685, 0.3294, 0.063]]]]