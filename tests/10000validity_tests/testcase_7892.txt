import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Mul83064 = tf.keras.layers.Input(shape=([2, 1, 2, 2]))
in1Mul83064 = tf.keras.layers.Input(shape=([2, 1, 2, 2]))
in0Con51462 = tf.keras.layers.Input(shape=([1, 4, 3, 1]))
in0ELU8270 = tf.keras.layers.Input(shape=([1, 1, 2, 2]))

Mul83064 = keras.layers.Multiply(name = 'Mul83064', )([in0Mul83064,in1Mul83064])
Res24810 = keras.layers.Reshape((2, 1, 4), name = 'Res24810', )(Mul83064)
Res73180 = keras.layers.Reshape((2, 4), name = 'Res73180', )(Res24810)
Cro97600 = keras.layers.Cropping1D(cropping=((0, 1)), name = 'Cro97600', )(Res73180)
Res41893 = keras.layers.Reshape((1, 4, 1), name = 'Res41893', )(Cro97600)
Res80249 = keras.layers.Reshape((1, 4, 1, 1), name = 'Res80249', )(Res41893)
Zer80422 = keras.layers.ZeroPadding3D(padding=((0, 0), (0, 0), (2, 0)), name = 'Zer80422', )(Res80249)
Con51462 = keras.layers.Concatenate(axis=4, name = 'Con51462', )([Zer80422,in0Con51462])
ELU8270 = keras.layers.ELU(alpha=-9.137036109003331, name = 'ELU8270', input_shape=(1, 1, 2, 2))(in0ELU8270)
Zer8501 = keras.layers.ZeroPadding3D(padding=((0, 0), (3, 0), (1, 0)), name = 'Zer8501', )(ELU8270)
Ave13791 = keras.layers.Average(name = 'Ave13791', )([Con51462,Zer8501])
Res93585 = keras.layers.Reshape((1, 4, 6), name = 'Res93585', )(Ave13791)
Res26563 = keras.layers.Reshape((1, 24), name = 'Res26563', )(Res93585)
Max73083 = keras.layers.MaxPool1D(pool_size=(1), name = 'Max73083', )(Res26563)
model = tf.keras.models.Model(inputs=[in0Mul83064,in1Mul83064,in0Con51462,in0ELU8270], outputs=Max73083)
in0Mul83064 = tf.constant([[[[[0.4164, 0.5773], [0.1208, 0.3974]]], [[[0.4029, 0.7737], [0.0759, 0.1966]]]]])
in1Mul83064 = tf.constant([[[[[0.7714, 0.3201], [0.1976, 0.8416]]], [[[0.9168, 0.1134], [0.2996, 0.4909]]]]])
in0Con51462 = tf.constant([[[[[0.4917], [0.9719], [0.651]], [[0.4794], [0.2252], [0.9911]], [[0.5998], [0.7218], [0.3447]], [[0.7792], [0.8103], [0.1004]]]]])
in0ELU8270 = tf.constant([[[[[0.2086, 0.7978], [0.2242, 0.5178]]]]])
print (np.array2string(model.predict([in0Mul83064,in1Mul83064,in0Con51462,in0ELU8270],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Max73083.png')

LMul83064 = multiply_layer([[[[[[0.4164, 0.5773], [0.1208, 0.3974]]], [[[0.4029, 0.7737], [0.0759, 0.1966]]]]], [[[[[0.7714, 0.3201], [0.1976, 0.8416]]], [[[0.9168, 0.1134], [0.2996, 0.4909]]]]]], Mul83064), 
LRes24810 = reshape_layer(Mul83064, [2, 1, 4], Res24810), 
LRes73180 = reshape_layer(Res24810, [2, 4], Res73180), 
LCro97600 = cropping1D_layer(Res73180, 0, 1, Cro97600), 
LRes41893 = reshape_layer(Cro97600, [1, 4, 1], Res41893), 
LRes80249 = reshape_layer(Res41893, [1, 4, 1, 1], Res80249), 
LZer80422 = zero_padding3D_layer(Res80249, 0, 0, 0, 0, 2, 0, Zer80422), 
LCon51462 = concatenate_layer([Zer80422,[[[[[0.4917], [0.9719], [0.651]], [[0.4794], [0.2252], [0.9911]], [[0.5998], [0.7218], [0.3447]], [[0.7792], [0.8103], [0.1004]]]]]], 4, Con51462), 
LELU8270 = elu_layer([[[[[0.2086, 0.7978], [0.2242, 0.5178]]]]], -9.137036109003331, ELU8270), 
LZer8501 = zero_padding3D_layer(ELU8270, 0, 0, 3, 0, 1, 0, Zer8501), 
LAve13791 = average_layer([Con51462,Zer8501], Ave13791), 
LRes93585 = reshape_layer(Ave13791, [1, 4, 6], Res93585), 
LRes26563 = reshape_layer(Res93585, [1, 24], Res26563), 
LMax73083 = max_pool1D_layer(Res26563, 1, Max73083), 
exec_layers([LMul83064,LRes24810,LRes73180,LCro97600,LRes41893,LRes80249,LZer80422,LCon51462,LELU8270,LZer8501,LAve13791,LRes93585,LRes26563,LMax73083],["Mul83064","Res24810","Res73180","Cro97600","Res41893","Res80249","Zer80422","Con51462","ELU8270","Zer8501","Ave13791","Res93585","Res26563","Max73083"],Max73083,"Max73083")

Actual (Unparsed): [[[0.0000000, 0.2458500, 0.0000000, 0.4859500, 0.1606055, 0.3255000, 0.0000000, 0.2397000, 0.0000000, 0.1126000, 0.0923969, 0.4955500, 0.0000000, 0.2999000, 0.0000000, 0.3609000, 0.0119350, 0.1723500, 0.0000000, 0.3896000, 0.1043000, 0.8040500, 0.2793259, 0.3091000]]]

Expected (Unparsed): [[[0,0.24585,0,0.48595,0.16060548,0.3255,0,0.2397,0,0.1126,0.09239686500000001,0.49555,0,0.2999,0,0.3609,0.011935040000000001,0.17235,0,0.3896,0.1043,0.8040499999999999,0.27932592,0.30910000000000004]]]

Actual:   [[[0, 0.2459, 0, 0.486, 0.1607, 0.3255, 0, 0.2397, 0, 0.1126, 0.0924, 0.4956, 0, 0.2999, 0, 0.3609, 0.012, 0.1724, 0, 0.3896, 0.1043, 0.8041, 0.2794, 0.3091]]]

Expected: [[[0, 0.2459, 0, 0.486, 0.1607, 0.3255, 0, 0.2397, 0, 0.1126, 0.0924, 0.4956, 0, 0.2999, 0, 0.3609, 0.012, 0.1724, 0, 0.3896, 0.1043, 0.8041, 0.2794, 0.3092]]]