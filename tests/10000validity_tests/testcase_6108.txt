import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Add61686 = tf.keras.layers.Input(shape=([2, 2]))
in1Add61686 = tf.keras.layers.Input(shape=([2, 2]))
in0Con37032 = tf.keras.layers.Input(shape=([1, 22]))
in0Con60164 = tf.keras.layers.Input(shape=([2, 2, 2]))

Add61686 = keras.layers.Add(name = 'Add61686', )([in0Add61686,in1Add61686])
Ave95147 = keras.layers.AveragePooling1D(pool_size=(1), strides=(10), padding='same', name = 'Ave95147', )(Add61686)
Con37032 = keras.layers.Concatenate(axis=2, name = 'Con37032', )([Ave95147,in0Con37032])
Con60164 = keras.layers.Conv2DTranspose(3, (2, 2),strides=(6, 2), padding='same', name = 'Con60164', )(in0Con60164)
Up_69720 = keras.layers.UpSampling2D(size=(2, 2), name = 'Up_69720', )(Con60164)
Res66710 = keras.layers.Reshape((24, 24), name = 'Res66710', )(Up_69720)
Dot13954 = keras.layers.Dot(axes=(2, 2), name = 'Dot13954', )([Con37032,Res66710])
Res70545 = keras.layers.Reshape((1, 24, 1), name = 'Res70545', )(Dot13954)
Res52421 = keras.layers.Reshape((1, 24, 1, 1), name = 'Res52421', )(Res70545)
Cro87842 = keras.layers.Cropping3D(cropping=((0, 0), (4, 16), (0, 0)), name = 'Cro87842', )(Res52421)
model = tf.keras.models.Model(inputs=[in0Add61686,in1Add61686,in0Con37032,in0Con60164], outputs=Cro87842)
w = model.get_layer('Con60164').get_weights() 
w[0] = np.array([[[[0.0357, 0.1754], [0.6292, 0.4071], [0.4139, 0.0681]], [[0.1041, 0.4354], [0.9371, 0.996], [0.768, 0.5524]]], [[[0.5305, 0.3962], [0.4093, 0.2102], [0.7841, 0.1984]], [[0.6291, 0.115], [0.4017, 0.281], [0.1059, 0.6459]]]])
w[1] = np.array([0, 0, 0])
model.get_layer('Con60164').set_weights(w) 
in0Add61686 = tf.constant([[[0.4246, 0.8751], [0.639, 0.7607]]])
in1Add61686 = tf.constant([[[0.0147, 0.6661], [0.4806, 0.3322]]])
in0Con37032 = tf.constant([[[0.4788, 0.3425, 0.8063, 0.9216, 0.3063, 0.5115, 0.6317, 0.8283, 0.033, 0.7592, 0.3091, 0.994, 0.1109, 0.3242, 0.0605, 0.7075, 0.8174, 0.3375, 0.9924, 0.9922, 0.8043, 0.3509]]])
in0Con60164 = tf.constant([[[[0.0076, 0.0128], [0.6001, 0.5928]], [[0.9634, 0.8064], [0.1354, 0.0728]]]])
print (np.array2string(model.predict([in0Add61686,in1Add61686,in0Con37032,in0Con60164],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Cro87842.png')

LAdd61686 = add_layer([[[[0.4246, 0.8751], [0.639, 0.7607]]], [[[0.0147, 0.6661], [0.4806, 0.3322]]]], Add61686), 
LAve95147 = average_pooling1D_layer(Add61686, 1, 10, true, Ave95147), 
LCon37032 = concatenate_layer([Ave95147,[[[0.4788, 0.3425, 0.8063, 0.9216, 0.3063, 0.5115, 0.6317, 0.8283, 0.033, 0.7592, 0.3091, 0.994, 0.1109, 0.3242, 0.0605, 0.7075, 0.8174, 0.3375, 0.9924, 0.9922, 0.8043, 0.3509]]]], 2, Con37032), 
LCon60164 = conv2D_transpose_layer([[[[0.0076, 0.0128], [0.6001, 0.5928]], [[0.9634, 0.8064], [0.1354, 0.0728]]]], 2, 2,[[[[0.0357, 0.1754], [0.6292, 0.4071], [0.4139, 0.0681]], [[0.1041, 0.4354], [0.9371, 0.996], [0.768, 0.5524]]], [[[0.5305, 0.3962], [0.4093, 0.2102], [0.7841, 0.1984]], [[0.6291, 0.115], [0.4017, 0.281], [0.1059, 0.6459]]]],[0, 0, 0], 6, 2, true, Con60164), 
LUp_69720 = up_sampling2D_layer(Con60164, 2, 2, Up_69720), 
LRes66710 = reshape_layer(Up_69720, [24, 24], Res66710), 
LDot13954 = dot_layer(Con37032,Res66710, 2, 2, Dot13954), 
LRes70545 = reshape_layer(Dot13954, [1, 24, 1], Res70545), 
LRes52421 = reshape_layer(Res70545, [1, 24, 1, 1], Res52421), 
LCro87842 = cropping3D_layer(Res52421, 0, 0, 4, 16, 0, 0, Cro87842), 
exec_layers([LAdd61686,LAve95147,LCon37032,LCon60164,LUp_69720,LRes66710,LDot13954,LRes70545,LRes52421,LCro87842],["Add61686","Ave95147","Con37032","Con60164","Up_69720","Res66710","Dot13954","Res70545","Res52421","Cro87842"],Cro87842,"Cro87842")

Actual (Unparsed): [[[[[0.0000000]], [[0.0000000]], [[0.0000000]], [[0.0000000]]]]]

Expected (Unparsed): [[[[[0.0]],[[0.0]],[[0.0]],[[0.0]]]]]

Actual:   [[[[[0]], [[0]], [[0]], [[0]]]]]

Expected: [[[[[0]], [[0]], [[0]], [[0]]]]]