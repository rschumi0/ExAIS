import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Dot51499 = tf.keras.layers.Input(shape=([3, 3]))
in1Dot51499 = tf.keras.layers.Input(shape=([3, 3]))
in0Dot96810 = tf.keras.layers.Input(shape=([2]))
in1Dot96810 = tf.keras.layers.Input(shape=([2]))
in0Con47881 = tf.keras.layers.Input(shape=([8]))

Dot51499 = keras.layers.Dot(axes=(1, 2), name = 'Dot51499', )([in0Dot51499,in1Dot51499])
Fla97233 = keras.layers.Flatten(name = 'Fla97233', )(Dot51499)
Dot96810 = keras.layers.Dot(axes=(1, 1), name = 'Dot96810', )([in0Dot96810,in1Dot96810])
Con47881 = keras.layers.Concatenate(axis=1, name = 'Con47881', )([Dot96810,in0Con47881])
Ave602 = keras.layers.Average(name = 'Ave602', )([Fla97233,Con47881])
Bat46890 = keras.layers.BatchNormalization(axis=1, epsilon=0.6758839295924366,  name = 'Bat46890', )(Ave602)
Res3436 = keras.layers.Reshape((9, 1), name = 'Res3436', )(Bat46890)
Res58121 = keras.layers.Reshape((9, 1, 1), name = 'Res58121', )(Res3436)
Cro4273 = keras.layers.Cropping2D(cropping=((3, 2), (0, 0)), name = 'Cro4273', )(Res58121)
model = tf.keras.models.Model(inputs=[in0Dot51499,in1Dot51499,in0Dot96810,in1Dot96810,in0Con47881], outputs=Cro4273)
w = model.get_layer('Bat46890').get_weights() 
w[0] = np.array([0.3609, 0.4447, 0.2482, 0.4825, 0.6469, 0.2985, 0.0134, 0.1524, 0.5134])
w[1] = np.array([0.6785, 0.3719, 0.6656, 0.9986, 0.4689, 0.5563, 0.0819, 0.1294, 0.2077])
w[2] = np.array([0.2541, 0.0605, 0.2598, 0.7827, 0.6039, 0.6023, 0.395, 0.3948, 0.3496])
w[3] = np.array([0.4938, 0.0251, 0.1771, 0.8505, 0.6044, 0.0384, 0.3887, 0.2125, 0.8515])
model.get_layer('Bat46890').set_weights(w) 
in0Dot51499 = tf.constant([[[0.3406, 0.0433, 0.6701], [0.8454, 0.4891, 0.7179], [0.7972, 0.5039, 0.8937]]])
in1Dot51499 = tf.constant([[[0.2018, 0.0077, 0.7202], [0.6944, 0.6449, 0.8606], [0.8959, 0.7297, 0.836]]])
in0Dot96810 = tf.constant([[0.8507, 0.2321]])
in1Dot96810 = tf.constant([[0.027, 0.5204]])
in0Con47881 = tf.constant([[0.6858, 0.8426, 0.1548, 0.8955, 0.7999, 0.5731, 0.0645, 0.1773]])
print (np.array2string(model.predict([in0Dot51499,in1Dot51499,in0Dot96810,in1Dot96810,in0Con47881],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Cro4273.png')

LDot51499 = dot_layer([[[0.3406, 0.0433, 0.6701], [0.8454, 0.4891, 0.7179], [0.7972, 0.5039, 0.8937]]], [[[0.2018, 0.0077, 0.7202], [0.6944, 0.6449, 0.8606], [0.8959, 0.7297, 0.836]]], 1, 2, Dot51499), 
LFla97233 = flatten_layer(Dot51499, Fla97233), 
LDot96810 = dot_layer([[0.8507, 0.2321]], [[0.027, 0.5204]], 1, 1, Dot96810), 
LCon47881 = concatenate_layer([Dot96810,[[0.6858, 0.8426, 0.1548, 0.8955, 0.7999, 0.5731, 0.0645, 0.1773]]], 1, Con47881), 
LAve602 = average_layer([Fla97233,Con47881], Ave602), 
LBat46890 = batch_normalization_layer(Ave602, 1, 0.6758839295924366, [0.3609, 0.4447, 0.2482, 0.4825, 0.6469, 0.2985, 0.0134, 0.1524, 0.5134], [0.6785, 0.3719, 0.6656, 0.9986, 0.4689, 0.5563, 0.0819, 0.1294, 0.2077], [0.2541, 0.0605, 0.2598, 0.7827, 0.6039, 0.6023, 0.395, 0.3948, 0.3496], [0.4938, 0.0251, 0.1771, 0.8505, 0.6044, 0.0384, 0.3887, 0.2125, 0.8515], Bat46890), 
LRes3436 = reshape_layer(Bat46890, [9, 1], Res3436), 
LRes58121 = reshape_layer(Res3436, [9, 1, 1], Res58121), 
LCro4273 = cropping2D_layer(Res58121, 3, 2, 0, 0, Cro4273), 
exec_layers([LDot51499,LFla97233,LDot96810,LCon47881,LAve602,LBat46890,LRes3436,LRes58121,LCro4273],["Dot51499","Fla97233","Dot96810","Con47881","Ave602","Bat46890","Res3436","Res58121","Cro4273"],Cro4273,"Cro4273")

Actual (Unparsed): [[[[0.7964590]], [[0.6023523]], [[0.6291012]], [[0.0855851]]]]

Expected (Unparsed): [[[[0.7964590385217387]],[[0.6023523446925534]],[[0.6291012202117636]],[[0.08558509109818117]]]]

Actual:   [[[[0.7965]], [[0.6024]], [[0.6292]], [[0.0856]]]]

Expected: [[[[0.7965]], [[0.6024]], [[0.6292]], [[0.0856]]]]