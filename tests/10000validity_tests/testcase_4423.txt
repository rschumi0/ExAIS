import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Max5372 = tf.keras.layers.Input(shape=([1, 2, 2, 1]))
in1Max5372 = tf.keras.layers.Input(shape=([1, 2, 2, 1]))
in0Glo66981 = tf.keras.layers.Input(shape=([1, 1, 2]))
in0Con2220 = tf.keras.layers.Input(shape=([2]))
in0Dot40188 = tf.keras.layers.Input(shape=([2]))
in1Dot40188 = tf.keras.layers.Input(shape=([2]))
in0Con97977 = tf.keras.layers.Input(shape=([3]))

Max5372 = keras.layers.Maximum(name = 'Max5372', )([in0Max5372,in1Max5372])
Res34171 = keras.layers.Reshape((1, 2, 2), name = 'Res34171', )(Max5372)
Res11475 = keras.layers.Reshape((1, 4), name = 'Res11475', )(Res34171)
Fla96770 = keras.layers.Flatten(name = 'Fla96770', )(Res11475)
Glo66981 = keras.layers.GlobalAveragePooling2D(name = 'Glo66981', )(in0Glo66981)
Con2220 = keras.layers.Concatenate(axis=1, name = 'Con2220', )([Glo66981,in0Con2220])
Add20878 = keras.layers.Add(name = 'Add20878', )([Fla96770,Con2220])
Dot40188 = keras.layers.Dot(axes=(1, 1), name = 'Dot40188', )([in0Dot40188,in1Dot40188])
Con97977 = keras.layers.Concatenate(axis=1, name = 'Con97977', )([Dot40188,in0Con97977])
Sub67960 = keras.layers.Subtract(name = 'Sub67960', )([Add20878,Con97977])
Res61231 = keras.layers.Reshape((4, 1), name = 'Res61231', )(Sub67960)
Per48716 = keras.layers.Permute((2,1), name = 'Per48716',)(Res61231)
Res12314 = keras.layers.Reshape((1, 4, 1), name = 'Res12314', )(Per48716)
Dep92346 = keras.layers.DepthwiseConv2D((1, 1),strides=(1, 1), padding='same', name = 'Dep92346', )(Res12314)
model = tf.keras.models.Model(inputs=[in0Max5372,in1Max5372,in0Glo66981,in0Con2220,in0Dot40188,in1Dot40188,in0Con97977], outputs=Dep92346)
w = model.get_layer('Dep92346').get_weights() 
w[0] = np.array([[[[0.7877]]]])
w[1] = np.array([0])
model.get_layer('Dep92346').set_weights(w) 
in0Max5372 = tf.constant([[[[[0.4818], [0.2177]], [[0.4697], [0.3719]]]]])
in1Max5372 = tf.constant([[[[[0.2609], [0.6341]], [[0.8481], [0.7585]]]]])
in0Glo66981 = tf.constant([[[[1.1732, 1.0498]]]])
in0Con2220 = tf.constant([[0.8496, 0.4927]])
in0Dot40188 = tf.constant([[0.6164, 0.639]])
in1Dot40188 = tf.constant([[0.884, 0.9504]])
in0Con97977 = tf.constant([[0.9929, 0.8135, 0.83]])
print (np.array2string(model.predict([in0Max5372,in1Max5372,in0Glo66981,in0Con2220,in0Dot40188,in1Dot40188,in0Con97977],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Dep92346.png')

LMax5372 = maximum_layer([[[[[[0.4818], [0.2177]], [[0.4697], [0.3719]]]]], [[[[[0.2609], [0.6341]], [[0.8481], [0.7585]]]]]], Max5372), 
LRes34171 = reshape_layer(Max5372, [1, 2, 2], Res34171), 
LRes11475 = reshape_layer(Res34171, [1, 4], Res11475), 
LFla96770 = flatten_layer(Res11475, Fla96770), 
LGlo66981 = global_average_pooling2D_layer([[[[1.1732, 1.0498]]]], Glo66981), 
LCon2220 = concatenate_layer([Glo66981,[[0.8496, 0.4927]]], 1, Con2220), 
LAdd20878 = add_layer([Fla96770,Con2220], Add20878), 
LDot40188 = dot_layer([[0.6164, 0.639]], [[0.884, 0.9504]], 1, 1, Dot40188), 
LCon97977 = concatenate_layer([Dot40188,[[0.9929, 0.8135, 0.83]]], 1, Con97977), 
LSub67960 = subtract_layer(Add20878,Con97977, Sub67960), 
LRes61231 = reshape_layer(Sub67960, [4, 1], Res61231), 
LPer48716 = permute_layer(Res61231, 2,1, Per48716), 
LRes12314 = reshape_layer(Per48716, [1, 4, 1], Res12314), 
LDep92346 = depthwise_conv2D_layer(Res12314, 1, 1,[[[[0.7877]]]],[0], 1, 1, true, Dep92346), 
exec_layers([LMax5372,LRes34171,LRes11475,LFla96770,LGlo66981,LCon2220,LAdd20878,LDot40188,LCon97977,LSub67960,LRes61231,LPer48716,LRes12314,LDep92346],["Max5372","Res34171","Res11475","Fla96770","Glo66981","Con2220","Add20878","Dot40188","Con97977","Sub67960","Res61231","Per48716","Res12314","Dep92346"],Dep92346,"Dep92346")

Actual (Unparsed): [[[[0.3960530], [0.5443007], [0.6964844], [0.3317792]]]]

Expected (Unparsed): [[[[0.39605303936],[0.5443007],[0.6964843399999999],[0.3317792399999999]]]]

Actual:   [[[[0.3961], [0.5444], [0.6965], [0.3318]]]]

Expected: [[[[0.3961], [0.5444], [0.6965], [0.3318]]]]