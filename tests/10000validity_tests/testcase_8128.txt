import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Con25387 = tf.keras.layers.Input(shape=([2, 2, 2, 2]))
in0Up_1308 = tf.keras.layers.Input(shape=([2, 4]))

Con25387 = keras.layers.Conv3DTranspose(3, (1, 1, 2),strides=(1, 1, 1), padding='valid', name = 'Con25387', )(in0Con25387)
Glo80625 = keras.layers.GlobalAveragePooling3D(name = 'Glo80625', )(Con25387)
Res93384 = keras.layers.Reshape((3, 1), name = 'Res93384', )(Glo80625)
Res57521 = keras.layers.Reshape((3, 1, 1), name = 'Res57521', )(Res93384)
Res33701 = keras.layers.Reshape((3, 1, 1, 1), name = 'Res33701', )(Res57521)
Zer85132 = keras.layers.ZeroPadding3D(padding=((0, 0), (4, 0), (0, 0)), name = 'Zer85132', )(Res33701)
Up_1308 = keras.layers.UpSampling1D(size=(2), name = 'Up_1308', )(in0Up_1308)
Res62255 = keras.layers.Reshape((4, 4, 1), name = 'Res62255', )(Up_1308)
Res4919 = keras.layers.Reshape((4, 4, 1, 1), name = 'Res4919', )(Res62255)
Cro47768 = keras.layers.Cropping3D(cropping=((0, 2), (1, 0), (0, 0)), name = 'Cro47768', )(Res4919)
Zer61531 = keras.layers.ZeroPadding3D(padding=((1, 0), (2, 0), (0, 0)), name = 'Zer61531', )(Cro47768)
Min1454 = keras.layers.Minimum(name = 'Min1454', )([Zer85132,Zer61531])
Fla62371 = keras.layers.Flatten(name = 'Fla62371', )(Min1454)
model = tf.keras.models.Model(inputs=[in0Con25387,in0Up_1308], outputs=Fla62371)
w = model.get_layer('Con25387').get_weights() 
w[0] = np.array([[[[[0.4163, 0.9586], [0.4266, 0.2835], [0.2176, 0.4901]], [[0.7383, 0.7605], [0.5317, 0.1688], [0.1635, 0.1164]]]]])
w[1] = np.array([0, 0, 0])
model.get_layer('Con25387').set_weights(w) 
in0Con25387 = tf.constant([[[[[0.9136, 0.999], [0.7048, 0.082]], [[0.2457, 0.0415], [0.7123, 0.352]]], [[[0.4138, 0.5614], [0.873, 0.5659]], [[0.8939, 0.9854], [0.6222, 0.7098]]]]])
in0Up_1308 = tf.constant([[[1.3643, 1.0024, 1.7106, 1.6126], [1.2035, 1.8118, 1.8806, 1.062]]])
print (np.array2string(model.predict([in0Con25387,in0Up_1308],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Fla62371.png')

LCon25387 = conv3D_transpose_layer([[[[[0.9136, 0.999], [0.7048, 0.082]], [[0.2457, 0.0415], [0.7123, 0.352]]], [[[0.4138, 0.5614], [0.873, 0.5659]], [[0.8939, 0.9854], [0.6222, 0.7098]]]]], 1, 1, 2,[[[[[0.4163, 0.9586], [0.4266, 0.2835], [0.2176, 0.4901]], [[0.7383, 0.7605], [0.5317, 0.1688], [0.1635, 0.1164]]]]],[0, 0, 0], 1, 1, 1, false, Con25387), 
LGlo80625 = global_average_pooling3D_layer(Con25387, Glo80625), 
LRes93384 = reshape_layer(Glo80625, [3, 1], Res93384), 
LRes57521 = reshape_layer(Res93384, [3, 1, 1], Res57521), 
LRes33701 = reshape_layer(Res57521, [3, 1, 1, 1], Res33701), 
LZer85132 = zero_padding3D_layer(Res33701, 0, 0, 4, 0, 0, 0, Zer85132), 
LUp_1308 = up_sampling1D_layer([[[1.3643, 1.0024, 1.7106, 1.6126], [1.2035, 1.8118, 1.8806, 1.062]]], 2, Up_1308), 
LRes62255 = reshape_layer(Up_1308, [4, 4, 1], Res62255), 
LRes4919 = reshape_layer(Res62255, [4, 4, 1, 1], Res4919), 
LCro47768 = cropping3D_layer(Res4919, 0, 2, 1, 0, 0, 0, Cro47768), 
LZer61531 = zero_padding3D_layer(Cro47768, 1, 0, 2, 0, 0, 0, Zer61531), 
LMin1454 = minimum_layer([Zer85132,Zer61531], Min1454), 
LFla62371 = flatten_layer(Min1454, Fla62371), 
exec_layers([LCon25387,LGlo80625,LRes93384,LRes57521,LRes33701,LZer85132,LUp_1308,LRes62255,LRes4919,LCro47768,LZer61531,LMin1454,LFla62371],["Con25387","Glo80625","Res93384","Res57521","Res33701","Zer85132","Up_1308","Res62255","Res4919","Cro47768","Zer61531","Min1454","Fla62371"],Fla62371,"Fla62371")

Actual (Unparsed): [[0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.5915430, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.3880151]]

Expected (Unparsed): [[0,0,0,0,0,0,0,0,0,0.5915430241666667,0,0,0,0,0.38801514416666666]]

Actual:   [[0, 0, 0, 0, 0, 0, 0, 0, 0, 0.5916, 0, 0, 0, 0, 0.3881]]

Expected: [[0, 0, 0, 0, 0, 0, 0, 0, 0, 0.5916, 0, 0, 0, 0, 0.3881]]