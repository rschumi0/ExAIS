import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Sub87552 = tf.keras.layers.Input(shape=([3]))
in1Sub87552 = tf.keras.layers.Input(shape=([3]))
in0Per28373 = tf.keras.layers.Input(shape=([3, 1]))
in0Mul35628 = tf.keras.layers.Input(shape=([2, 2, 2]))
in1Mul35628 = tf.keras.layers.Input(shape=([2, 2, 2]))
in0Mul44697 = tf.keras.layers.Input(shape=([2, 2]))
in1Mul44697 = tf.keras.layers.Input(shape=([2, 2]))
in0Con61679 = tf.keras.layers.Input(shape=([2, 2]))

Sub87552 = keras.layers.Subtract(name = 'Sub87552', )([in0Sub87552,in1Sub87552])
Res85348 = keras.layers.Reshape((3, 1), name = 'Res85348', )(Sub87552)
Per28373 = keras.layers.Permute((1,2), name = 'Per28373',)(in0Per28373)
LST43585 = keras.layers.LSTM(2,recurrent_activation='sigmoid', name = 'LST43585', )(Per28373)
Res96998 = keras.layers.Reshape((2, 1), name = 'Res96998', )(LST43585)
Max10017 = keras.layers.MaxPool1D(pool_size=(1), strides=(1), padding='valid', name = 'Max10017', )(Res96998)
Zer37378 = keras.layers.ZeroPadding1D(padding=((1, 0)), name = 'Zer37378', )(Max10017)
Add8177 = keras.layers.Add(name = 'Add8177', )([Res85348,Zer37378])
Res16358 = keras.layers.Reshape((3, 1, 1), name = 'Res16358', )(Add8177)
Zer9618 = keras.layers.ZeroPadding2D(padding=((1, 0), (3, 0)), name = 'Zer9618', )(Res16358)
Mul35628 = keras.layers.Multiply(name = 'Mul35628', )([in0Mul35628,in1Mul35628])
Res16497 = keras.layers.Reshape((2, 4), name = 'Res16497', )(Mul35628)
Mul44697 = keras.layers.Multiply(name = 'Mul44697', )([in0Mul44697,in1Mul44697])
Con61679 = keras.layers.Concatenate(axis=2, name = 'Con61679', )([Mul44697,in0Con61679])
Add47895 = keras.layers.Add(name = 'Add47895', )([Res16497,Con61679])
Res53661 = keras.layers.Reshape((2, 4, 1), name = 'Res53661', )(Add47895)
Up_73950 = keras.layers.UpSampling2D(size=(2, 1), name = 'Up_73950', )(Res53661)
Min70577 = keras.layers.Minimum(name = 'Min70577', )([Zer9618,Up_73950])
model = tf.keras.models.Model(inputs=[in0Sub87552,in1Sub87552,in0Per28373,in0Mul35628,in1Mul35628,in0Mul44697,in1Mul44697,in0Con61679], outputs=Min70577)
w = model.get_layer('LST43585').get_weights() 
w[0] = np.array([[8, 6, 1, 8, 5, 1, 1, 8]])
w[1] = np.array([[7, 9, 4, 9, 9, 2, 4, 2], [8, 2, 7, 8, 10, 1, 3, 3]])
w[2] = np.array([9, 2, 9, 2, 5, 4, 6, 4])
model.get_layer('LST43585').set_weights(w) 
in0Sub87552 = tf.constant([[0.1785, 0.748, 0.3924]])
in1Sub87552 = tf.constant([[0.0595, 0.2869, 0.7278]])
in0Per28373 = tf.constant([[[1.6447], [1.3757], [1.6237]]])
in0Mul35628 = tf.constant([[[[0.9211, 0.6745], [0.529, 0.5387]], [[0.2227, 0.49], [0.3462, 0.7336]]]])
in1Mul35628 = tf.constant([[[[0.4768, 0.2149], [0.6086, 0.5567]], [[0.7305, 0.7233], [0.3681, 0.494]]]])
in0Mul44697 = tf.constant([[[0.434, 0.3599], [0.3036, 0.8891]]])
in1Mul44697 = tf.constant([[[0.4819, 0.5238], [0.4464, 0.7032]]])
in0Con61679 = tf.constant([[[0.8931, 0.2039], [0.2755, 0.962]]])
print (np.array2string(model.predict([in0Sub87552,in1Sub87552,in0Per28373,in0Mul35628,in1Mul35628,in0Mul44697,in1Mul44697,in0Con61679],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Min70577.png')

LSub87552 = subtract_layer([[0.1785, 0.748, 0.3924]], [[0.0595, 0.2869, 0.7278]], Sub87552), 
LRes85348 = reshape_layer(Sub87552, [3, 1], Res85348), 
LPer28373 = permute_layer([[[1.6447], [1.3757], [1.6237]]], 1,2, Per28373), 
LLST43585 = lstm_layer(Per28373,[[8, 6, 1, 8, 5, 1, 1, 8]],[[7, 9, 4, 9, 9, 2, 4, 2], [8, 2, 7, 8, 10, 1, 3, 3]],[9, 2, 9, 2, 5, 4, 6, 4], LST43585), 
LRes96998 = reshape_layer(LST43585, [2, 1], Res96998), 
LMax10017 = max_pool1D_layer(Res96998, 1, 1, false, Max10017), 
LZer37378 = zero_padding1D_layer(Max10017, 1, 0, Zer37378), 
LAdd8177 = add_layer([Res85348,Zer37378], Add8177), 
LRes16358 = reshape_layer(Add8177, [3, 1, 1], Res16358), 
LZer9618 = zero_padding2D_layer(Res16358, 1, 0, 3, 0, Zer9618), 
LMul35628 = multiply_layer([[[[[0.9211, 0.6745], [0.529, 0.5387]], [[0.2227, 0.49], [0.3462, 0.7336]]]], [[[[0.4768, 0.2149], [0.6086, 0.5567]], [[0.7305, 0.7233], [0.3681, 0.494]]]]], Mul35628), 
LRes16497 = reshape_layer(Mul35628, [2, 4], Res16497), 
LMul44697 = multiply_layer([[[[0.434, 0.3599], [0.3036, 0.8891]]], [[[0.4819, 0.5238], [0.4464, 0.7032]]]], Mul44697), 
LCon61679 = concatenate_layer([Mul44697,[[[0.8931, 0.2039], [0.2755, 0.962]]]], 2, Con61679), 
LAdd47895 = add_layer([Res16497,Con61679], Add47895), 
LRes53661 = reshape_layer(Add47895, [2, 4, 1], Res53661), 
LUp_73950 = up_sampling2D_layer(Res53661, 2, 1, Up_73950), 
LMin70577 = minimum_layer([Zer9618,Up_73950], Min70577), 
exec_layers([LSub87552,LRes85348,LPer28373,LLST43585,LRes96998,LMax10017,LZer37378,LAdd8177,LRes16358,LZer9618,LMul35628,LRes16497,LMul44697,LCon61679,LAdd47895,LRes53661,LUp_73950,LMin70577],["Sub87552","Res85348","Per28373","LST43585","Res96998","Max10017","Zer37378","Add8177","Res16358","Zer9618","Mul35628","Res16497","Mul44697","Con61679","Add47895","Res53661","Up_73950","Min70577"],Min70577,"Min70577")

Actual (Unparsed): [[[[0.0000000], [0.0000000], [0.0000000], [0.0000000]], [[0.0000000], [0.0000000], [0.0000000], [0.1190000]], [[0.0000000], [0.0000000], [0.0000000], [1.3243984]], [[0.0000000], [0.0000000], [0.0000000], [0.6596544]]]]

Expected (Unparsed): [[[[0],[0],[0],[0]],[[0],[0],[0],[0.119]],[[0],[0],[0],[1.3243984]],[[0],[0],[0],[0.659654432182645]]]]

Actual:   [[[[0], [0], [0], [0]], [[0], [0], [0], [0.119]], [[0], [0], [0], [1.3244]], [[0], [0], [0], [0.6597]]]]

Expected: [[[[0], [0], [0], [0]], [[0], [0], [0], [0.119]], [[0], [0], [0], [1.3244]], [[0], [0], [0], [0.6597]]]]