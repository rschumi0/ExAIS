import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Cro13970 = tf.keras.layers.Input(shape=([3, 3, 2]))
in0ReL92160 = tf.keras.layers.Input(shape=([2, 1, 1, 2]))
in0Max76309 = tf.keras.layers.Input(shape=([2, 2, 1, 2]))
in1Max76309 = tf.keras.layers.Input(shape=([2, 2, 1, 2]))
in0Glo28159 = tf.keras.layers.Input(shape=([1, 1]))
in0Con18316 = tf.keras.layers.Input(shape=([7]))

Cro13970 = keras.layers.Cropping2D(cropping=((1, 1), (1, 1)), name = 'Cro13970', )(in0Cro13970)
Zer59554 = keras.layers.ZeroPadding2D(padding=((1, 0), (0, 0)), name = 'Zer59554', )(Cro13970)
ReL92160 = keras.layers.ReLU(max_value=9.251683407807207, negative_slope=6.36973642487253, threshold=9.609160424725756, name = 'ReL92160', input_shape=(2, 1, 1, 2))(in0ReL92160)
Bat46373 = keras.layers.BatchNormalization(axis=2, epsilon=0.220741178073121,  name = 'Bat46373', )(ReL92160)
Res4593 = keras.layers.Reshape((2, 1, 2), name = 'Res4593', )(Bat46373)
Max76309 = keras.layers.Maximum(name = 'Max76309', )([in0Max76309,in1Max76309])
Res39783 = keras.layers.Reshape((2, 2, 2), name = 'Res39783', )(Max76309)
Res23905 = keras.layers.Reshape((2, 4), name = 'Res23905', )(Res39783)
Fla24905 = keras.layers.Flatten(name = 'Fla24905', )(Res23905)
Glo28159 = keras.layers.GlobalMaxPool1D(name = 'Glo28159', )(in0Glo28159)
Con18316 = keras.layers.Concatenate(axis=1, name = 'Con18316', )([Glo28159,in0Con18316])
Min52494 = keras.layers.Minimum(name = 'Min52494', )([Fla24905,Con18316])
Res21059 = keras.layers.Reshape((8, 1), name = 'Res21059', )(Min52494)
Ave72510 = keras.layers.AveragePooling1D(pool_size=(2), name = 'Ave72510', )(Res21059)
Res34160 = keras.layers.Reshape((2, 1, 2), name = 'Res34160', )(Ave72510)
Sub32081 = keras.layers.Subtract(name = 'Sub32081', )([Res4593,Res34160])
Min86873 = keras.layers.Minimum(name = 'Min86873', )([Zer59554,Sub32081])
model = tf.keras.models.Model(inputs=[in0Cro13970,in0ReL92160,in0Max76309,in1Max76309,in0Glo28159,in0Con18316], outputs=Min86873)
w = model.get_layer('Bat46373').get_weights() 
w[0] = np.array([0.1436])
w[1] = np.array([0.5655])
w[2] = np.array([0.8184])
w[3] = np.array([0.1986])
model.get_layer('Bat46373').set_weights(w) 
in0Cro13970 = tf.constant([[[[1.3936, 1.4582], [1.7298, 1.0792], [1.0715, 1.6492]], [[1.5061, 1.4688], [1.8805, 1.9467], [1.5476, 1.0275]], [[1.7506, 1.4256], [1.2002, 1.1578], [1.4511, 1.8179]]]])
in0ReL92160 = tf.constant([[[[[0.2125, 0.9373]]], [[[0.1311, 0.475]]]]])
in0Max76309 = tf.constant([[[[[0.4749, 0.1506]], [[0.5817, 0.7348]]], [[[0.6805, 0.1259]], [[0.4559, 0.7236]]]]])
in1Max76309 = tf.constant([[[[[0.4369, 0.2619]], [[0.3119, 0.4381]]], [[[0.6848, 0.7777]], [[0.6149, 0.6778]]]]])
in0Glo28159 = tf.constant([[[1.7624]]])
in0Con18316 = tf.constant([[0.3906, 0.0285, 0.409, 0.0218, 0.5382, 0.1203, 0.5408]])
print (np.array2string(model.predict([in0Cro13970,in0ReL92160,in0Max76309,in1Max76309,in0Glo28159,in0Con18316],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Min86873.png')

LCro13970 = cropping2D_layer([[[[1.3936, 1.4582], [1.7298, 1.0792], [1.0715, 1.6492]], [[1.5061, 1.4688], [1.8805, 1.9467], [1.5476, 1.0275]], [[1.7506, 1.4256], [1.2002, 1.1578], [1.4511, 1.8179]]]], 1, 1, 1, 1, Cro13970), 
LZer59554 = zero_padding2D_layer(Cro13970, 1, 0, 0, 0, Zer59554), 
LReL92160 = relu_layer([[[[[0.2125, 0.9373]]], [[[0.1311, 0.475]]]]], 9.251683407807207, 6.36973642487253, 9.609160424725756, ReL92160), 
LBat46373 = batch_normalization_layer(ReL92160, 2, 0.220741178073121, [0.1436], [0.5655], [0.8184], [0.1986], Bat46373), 
LRes4593 = reshape_layer(Bat46373, [2, 1, 2], Res4593), 
LMax76309 = maximum_layer([[[[[[0.4749, 0.1506]], [[0.5817, 0.7348]]], [[[0.6805, 0.1259]], [[0.4559, 0.7236]]]]], [[[[[0.4369, 0.2619]], [[0.3119, 0.4381]]], [[[0.6848, 0.7777]], [[0.6149, 0.6778]]]]]], Max76309), 
LRes39783 = reshape_layer(Max76309, [2, 2, 2], Res39783), 
LRes23905 = reshape_layer(Res39783, [2, 4], Res23905), 
LFla24905 = flatten_layer(Res23905, Fla24905), 
LGlo28159 = global_max_pool1D_layer([[[1.7624]]], Glo28159), 
LCon18316 = concatenate_layer([Glo28159,[[0.3906, 0.0285, 0.409, 0.0218, 0.5382, 0.1203, 0.5408]]], 1, Con18316), 
LMin52494 = minimum_layer([Fla24905,Con18316], Min52494), 
LRes21059 = reshape_layer(Min52494, [8, 1], Res21059), 
LAve72510 = average_pooling1D_layer(Res21059, 2, Ave72510), 
LRes34160 = reshape_layer(Ave72510, [2, 1, 2], Res34160), 
LSub32081 = subtract_layer(Res4593,Res34160, Sub32081), 
LMin86873 = minimum_layer([Zer59554,Sub32081], Min86873), 
exec_layers([LCro13970,LZer59554,LReL92160,LBat46373,LRes4593,LMax76309,LRes39783,LRes23905,LFla24905,LGlo28159,LCon18316,LMin52494,LRes21059,LAve72510,LRes34160,LSub32081,LMin86873],["Cro13970","Zer59554","ReL92160","Bat46373","Res4593","Max76309","Res39783","Res23905","Fla24905","Glo28159","Con18316","Min52494","Res21059","Ave72510","Res34160","Sub32081","Min86873"],Min86873,"Min86873")

Actual (Unparsed): [[[[-13.2572788, -12.0838400]], [[-13.2838573, -12.8486444]]]]

Expected (Unparsed): [[[[-13.25727876726142,-12.083840068974961]],[[-13.283857244138513,-12.848644367012806]]]]

Actual:   [[[[-13.2572, -12.0838]], [[-13.2838, -12.8486]]]]

Expected: [[[[-13.2572, -12.0838]], [[-13.2838, -12.8486]]]]