import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Dot37252 = tf.keras.layers.Input(shape=([2]))
in1Dot37252 = tf.keras.layers.Input(shape=([2]))
in0Con68078 = tf.keras.layers.Input(shape=([1, 1]))
in0Up_1345 = tf.keras.layers.Input(shape=([4, 1]))
in0Con2115 = tf.keras.layers.Input(shape=([1, 1]))
in0Sub27403 = tf.keras.layers.Input(shape=([2, 3]))
in1Sub27403 = tf.keras.layers.Input(shape=([2, 3]))

Dot37252 = keras.layers.Dot(axes=(1, 1), name = 'Dot37252', )([in0Dot37252,in1Dot37252])
Res80282 = keras.layers.Reshape((1, 1), name = 'Res80282', )(Dot37252)
Res1572 = keras.layers.Reshape((1, 1, 1), name = 'Res1572', )(Res80282)
Zer2747 = keras.layers.ZeroPadding2D(padding=((1, 1), (1, 1)), name = 'Zer2747', )(Res1572)
Glo26652 = keras.layers.GlobalMaxPool2D(name = 'Glo26652', )(Zer2747)
Res58279 = keras.layers.Reshape((1, 1), name = 'Res58279', )(Glo26652)
Con68078 = keras.layers.Concatenate(axis=2, name = 'Con68078', )([Res58279,in0Con68078])
Up_1345 = keras.layers.UpSampling1D(size=(2), name = 'Up_1345', )(in0Up_1345)
Res17573 = keras.layers.Reshape((8, 1, 1), name = 'Res17573', )(Up_1345)
Cro80722 = keras.layers.Cropping2D(cropping=((7, 0), (0, 0)), name = 'Cro80722', )(Res17573)
Res64203 = keras.layers.Reshape((1, 1, 1, 1), name = 'Res64203', )(Cro80722)
Glo43929 = keras.layers.GlobalAveragePooling3D(name = 'Glo43929', )(Res64203)
Res54097 = keras.layers.Reshape((1, 1), name = 'Res54097', )(Glo43929)
Con2115 = keras.layers.Concatenate(axis=2, name = 'Con2115', )([Res54097,in0Con2115])
Sub27403 = keras.layers.Subtract(name = 'Sub27403', )([in0Sub27403,in1Sub27403])
Sep75329 = keras.layers.SeparableConv1D(2, (1),strides=(2), padding='same', name = 'Sep75329', )(Sub27403)
Sub16994 = keras.layers.Subtract(name = 'Sub16994', )([Con2115,Sep75329])
Mul57446 = keras.layers.Multiply(name = 'Mul57446', )([Con68078,Sub16994])
model = tf.keras.models.Model(inputs=[in0Dot37252,in1Dot37252,in0Con68078,in0Up_1345,in0Con2115,in0Sub27403,in1Sub27403], outputs=Mul57446)
w = model.get_layer('Sep75329').get_weights() 
w[0] = np.array([[[0.4339], [0.2087], [0.896]]])
w[1] = np.array([[[0.2434, 0.4913], [0.1154, 0.5083], [0.5366, 0.2515]]])
w[2] = np.array([0, 0])
model.get_layer('Sep75329').set_weights(w) 
in0Dot37252 = tf.constant([[0.5945, 0.0137]])
in1Dot37252 = tf.constant([[0.7306, 0.2748]])
in0Con68078 = tf.constant([[[0.6802]]])
in0Up_1345 = tf.constant([[[1.8117], [1.0238], [1.3478], [1.5924]]])
in0Con2115 = tf.constant([[[0.1582]]])
in0Sub27403 = tf.constant([[[0.7659, 0.6094, 0.128], [0.8509, 0.5177, 0.5398]]])
in1Sub27403 = tf.constant([[[0.7159, 0.4768, 0.3543], [0.1409, 0.2521, 0.0942]]])
print (np.array2string(model.predict([in0Dot37252,in1Dot37252,in0Con68078,in0Up_1345,in0Con2115,in0Sub27403,in1Sub27403],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Mul57446.png')

LDot37252 = dot_layer([[0.5945, 0.0137]], [[0.7306, 0.2748]], 1, 1, Dot37252), 
LRes80282 = reshape_layer(Dot37252, [1, 1], Res80282), 
LRes1572 = reshape_layer(Res80282, [1, 1, 1], Res1572), 
LZer2747 = zero_padding2D_layer(Res1572, 1, 1, 1, 1, Zer2747), 
LGlo26652 = global_max_pool2D_layer(Zer2747, Glo26652), 
LRes58279 = reshape_layer(Glo26652, [1, 1], Res58279), 
LCon68078 = concatenate_layer([Res58279,[[[0.6802]]]], 2, Con68078), 
LUp_1345 = up_sampling1D_layer([[[1.8117], [1.0238], [1.3478], [1.5924]]], 2, Up_1345), 
LRes17573 = reshape_layer(Up_1345, [8, 1, 1], Res17573), 
LCro80722 = cropping2D_layer(Res17573, 7, 0, 0, 0, Cro80722), 
LRes64203 = reshape_layer(Cro80722, [1, 1, 1, 1], Res64203), 
LGlo43929 = global_average_pooling3D_layer(Res64203, Glo43929), 
LRes54097 = reshape_layer(Glo43929, [1, 1], Res54097), 
LCon2115 = concatenate_layer([Res54097,[[[0.1582]]]], 2, Con2115), 
LSub27403 = subtract_layer([[[0.7659, 0.6094, 0.128], [0.8509, 0.5177, 0.5398]]], [[[0.7159, 0.4768, 0.3543], [0.1409, 0.2521, 0.0942]]], Sub27403), 
LSep75329 = separable_conv1D_layer(Sub27403, 1,[[[[0.4339], [0.2087], [0.896]]],[[[0.2434, 0.4913], [0.1154, 0.5083], [0.5366, 0.2515]]]],[0, 0], 2, true, Sep75329), 
LSub16994 = subtract_layer(Con2115,Sep75329, Sub16994), 
LMul57446 = multiply_layer([Con68078,Sub16994], Mul57446), 
exec_layers([LDot37252,LRes80282,LRes1572,LZer2747,LGlo26652,LRes58279,LCon68078,LUp_1345,LRes17573,LCro80722,LRes64203,LGlo43929,LRes54097,LCon2115,LSub27403,LSep75329,LSub16994,LMul57446],["Dot37252","Res80282","Res1572","Zer2747","Glo26652","Res58279","Con68078","Up_1345","Res17573","Cro80722","Res64203","Glo43929","Res54097","Con2115","Sub27403","Sep75329","Sub16994","Mul57446"],Mul57446,"Mul57446")

Actual (Unparsed): [[[0.7415957, 0.1254765]]]

Expected (Unparsed): [[[0.7415957258860336,0.1254765570232508]]]

Actual:   [[[0.7416, 0.1255]]]

Expected: [[[0.7416, 0.1255]]]