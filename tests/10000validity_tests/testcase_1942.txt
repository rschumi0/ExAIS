import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Sep18703 = tf.keras.layers.Input(shape=([2, 1]))

Sep18703 = keras.layers.SeparableConv1D(2, (2),strides=(1), padding='same', name = 'Sep18703', )(in0Sep18703)
GRU63387 = keras.layers.GRU(3,reset_after=True, recurrent_activation='sigmoid', name = 'GRU63387', )(Sep18703)
Res51453 = keras.layers.Reshape((3, 1), name = 'Res51453', )(GRU63387)
Res23648 = keras.layers.Reshape((3, 1, 1), name = 'Res23648', )(Res51453)
Con51843 = keras.layers.Conv2DTranspose(2, (3, 1),strides=(1, 9), padding='valid', name = 'Con51843', )(Res23648)
Den50775 = keras.layers.Dense(2,name = 'Den50775', )(Con51843)
model = tf.keras.models.Model(inputs=[in0Sep18703], outputs=Den50775)
w = model.get_layer('Sep18703').get_weights() 
w[0] = np.array([[[0.3573]], [[0.7911]]])
w[1] = np.array([[[0.6934, 0.44]]])
w[2] = np.array([0, 0])
model.get_layer('Sep18703').set_weights(w) 
w = model.get_layer('GRU63387').get_weights() 
w[0] = np.array([[5, 5, 4, 5, 5, 3, 3, 4, 4], [9, 2, 9, 6, 4, 5, 1, 1, 3]])
w[1] = np.array([[9, 1, 6, 9, 8, 4, 4, 9, 2], [5, 3, 7, 3, 1, 10, 9, 3, 4], [8, 1, 6, 6, 4, 4, 7, 3, 8]])
w[2] = np.array([[7, 5, 3, 8, 10, 1, 1, 7, 4], [4, 3, 7, 1, 1, 5, 8, 2, 8]])
model.get_layer('GRU63387').set_weights(w) 
w = model.get_layer('Con51843').get_weights() 
w[0] = np.array([[[[0.9465], [0.4044]]], [[[0.6455], [0.0214]]], [[[0.2737], [0.9366]]]])
w[1] = np.array([0, 0])
model.get_layer('Con51843').set_weights(w) 
w = model.get_layer('Den50775').get_weights() 
w[0] = np.array([[0.4948, 0.1826], [0.45, 0.2053]])
w[1] = np.array([0.2532, 0.8368])
model.get_layer('Den50775').set_weights(w) 
in0Sep18703 = tf.constant([[[0.9581], [0.7126]]])
print (np.array2string(model.predict([in0Sep18703],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Den50775.png')

LSep18703 = separable_conv1D_layer([[[0.9581], [0.7126]]], 2,[[[[0.3573]], [[0.7911]]],[[[0.6934, 0.44]]]],[0, 0], 1, true, Sep18703), 
LGRU63387 = gru_layer(Sep18703,[[5, 5, 4, 5, 5, 3, 3, 4, 4], [9, 2, 9, 6, 4, 5, 1, 1, 3]],[[9, 1, 6, 9, 8, 4, 4, 9, 2], [5, 3, 7, 3, 1, 10, 9, 3, 4], [8, 1, 6, 6, 4, 4, 7, 3, 8]],[[7, 5, 3, 8, 10, 1, 1, 7, 4], [4, 3, 7, 1, 1, 5, 8, 2, 8]], true, GRU63387), 
LRes51453 = reshape_layer(GRU63387, [3, 1], Res51453), 
LRes23648 = reshape_layer(Res51453, [3, 1, 1], Res23648), 
LCon51843 = conv2D_transpose_layer(Res23648, 3, 1,[[[[0.9465], [0.4044]]], [[[0.6455], [0.0214]]], [[[0.2737], [0.9366]]]],[0, 0], 1, 9, false, Con51843), 
LDen50775 = dense_layer(Con51843, [[0.4948, 0.1826], [0.45, 0.2053]],[0.2532, 0.8368], Den50775), 
exec_layers([LSep18703,LGRU63387,LRes51453,LRes23648,LCon51843,LDen50775],["Sep18703","GRU63387","Res51453","Res23648","Con51843","Den50775"],Den50775,"Den50775")

Actual (Unparsed): [[[[0.2532017, 0.8368006], [0.2532000, 0.8368000], [0.2532000, 0.8368000], [0.2532000, 0.8368000], [0.2532000, 0.8368000], [0.2532000, 0.8368000], [0.2532000, 0.8368000], [0.2532000, 0.8368000], [0.2532000, 0.8368000]], [[0.2532772, 0.8368304], [0.2532000, 0.8368000], [0.2532000, 0.8368000], [0.2532000, 0.8368000], [0.2532000, 0.8368000], [0.2532000, 0.8368000], [0.2532000, 0.8368000], [0.2532000, 0.8368000], [0.2532000, 0.8368000]], [[0.2532454, 0.8368171], [0.2532000, 0.8368000], [0.2532000, 0.8368000], [0.2532000, 0.8368000], [0.2532000, 0.8368000], [0.2532000, 0.8368000], [0.2532000, 0.8368000], [0.2532000, 0.8368000], [0.2532000, 0.8368000]], [[0.2532681, 0.8368295], [0.2532000, 0.8368000], [0.2532000, 0.8368000], [0.2532000, 0.8368000], [0.2532000, 0.8368000], [0.2532000, 0.8368000], [0.2532000, 0.8368000], [0.2532000, 0.8368000], [0.2532000, 0.8368000]], [[0.2532046, 0.8368020], [0.2532000, 0.8368000], [0.2532000, 0.8368000], [0.2532000, 0.8368000], [0.2532000, 0.8368000], [0.2532000, 0.8368000], [0.2532000, 0.8368000], [0.2532000, 0.8368000], [0.2532000, 0.8368000]]]]

Expected (Unparsed): [[[[0.2532016521070084,0.8368006499972629],[0.2532,0.8368],[0.2532,0.8368],[0.2532,0.8368],[0.2532,0.8368],[0.2532,0.8368],[0.2532,0.8368],[0.2532,0.8368],[0.2532,0.8368]],[[0.2532771994977933,0.8368303547493748],[0.2532,0.8368],[0.2532,0.8368],[0.2532,0.8368],[0.2532,0.8368],[0.2532,0.8368],[0.2532,0.8368],[0.2532,0.8368],[0.2532,0.8368]],[[0.2532454329516728,0.8368170897332495],[0.2532,0.8368],[0.2532,0.8368],[0.2532,0.8368],[0.2532,0.8368],[0.2532,0.8368],[0.2532,0.8368],[0.2532,0.8368],[0.2532,0.8368]],[[0.25326811762471646,0.8368294598510284],[0.2532,0.8368],[0.2532,0.8368],[0.2532,0.8368],[0.2532,0.8368],[0.2532,0.8368],[0.2532,0.8368],[0.2532,0.8368],[0.2532,0.8368]],[[0.2532046089109135,0.8368020049714998],[0.2532,0.8368],[0.2532,0.8368],[0.2532,0.8368],[0.2532,0.8368],[0.2532,0.8368],[0.2532,0.8368],[0.2532,0.8368],[0.2532,0.8368]]]]

Actual:   [[[[0.2533, 0.8369], [0.2532, 0.8368], [0.2532, 0.8368], [0.2532, 0.8368], [0.2532, 0.8368], [0.2532, 0.8368], [0.2532, 0.8368], [0.2532, 0.8368], [0.2532, 0.8368]], [[0.2533, 0.8369], [0.2532, 0.8368], [0.2532, 0.8368], [0.2532, 0.8368], [0.2532, 0.8368], [0.2532, 0.8368], [0.2532, 0.8368], [0.2532, 0.8368], [0.2532, 0.8368]], [[0.2533, 0.8369], [0.2532, 0.8368], [0.2532, 0.8368], [0.2532, 0.8368], [0.2532, 0.8368], [0.2532, 0.8368], [0.2532, 0.8368], [0.2532, 0.8368], [0.2532, 0.8368]], [[0.2533, 0.8369], [0.2532, 0.8368], [0.2532, 0.8368], [0.2532, 0.8368], [0.2532, 0.8368], [0.2532, 0.8368], [0.2532, 0.8368], [0.2532, 0.8368], [0.2532, 0.8368]], [[0.2533, 0.8369], [0.2532, 0.8368], [0.2532, 0.8368], [0.2532, 0.8368], [0.2532, 0.8368], [0.2532, 0.8368], [0.2532, 0.8368], [0.2532, 0.8368], [0.2532, 0.8368]]]]

Expected: [[[[0.2533, 0.8369], [0.2532, 0.8368], [0.2532, 0.8368], [0.2532, 0.8368], [0.2532, 0.8368], [0.2532, 0.8368], [0.2532, 0.8368], [0.2532, 0.8368], [0.2532, 0.8368]], [[0.2533, 0.8369], [0.2532, 0.8368], [0.2532, 0.8368], [0.2532, 0.8368], [0.2532, 0.8368], [0.2532, 0.8368], [0.2532, 0.8368], [0.2532, 0.8368], [0.2532, 0.8368]], [[0.2533, 0.8369], [0.2532, 0.8368], [0.2532, 0.8368], [0.2532, 0.8368], [0.2532, 0.8368], [0.2532, 0.8368], [0.2532, 0.8368], [0.2532, 0.8368], [0.2532, 0.8368]], [[0.2533, 0.8369], [0.2532, 0.8368], [0.2532, 0.8368], [0.2532, 0.8368], [0.2532, 0.8368], [0.2532, 0.8368], [0.2532, 0.8368], [0.2532, 0.8368], [0.2532, 0.8368]], [[0.2533, 0.8369], [0.2532, 0.8368], [0.2532, 0.8368], [0.2532, 0.8368], [0.2532, 0.8368], [0.2532, 0.8368], [0.2532, 0.8368], [0.2532, 0.8368], [0.2532, 0.8368]]]]