import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Sub2984 = tf.keras.layers.Input(shape=([3, 3, 3]))
in1Sub2984 = tf.keras.layers.Input(shape=([3, 3, 3]))
in0Ave6444 = tf.keras.layers.Input(shape=([2, 2]))
in1Ave6444 = tf.keras.layers.Input(shape=([2, 2]))
in0Cro42703 = tf.keras.layers.Input(shape=([2, 4, 4, 2]))
in0Con2372 = tf.keras.layers.Input(shape=([3, 3, 2]))

Sub2984 = keras.layers.Subtract(name = 'Sub2984', )([in0Sub2984,in1Sub2984])
Ave6444 = keras.layers.Average(name = 'Ave6444', )([in0Ave6444,in1Ave6444])
Res81195 = keras.layers.Reshape((2, 2, 1), name = 'Res81195', )(Ave6444)
Cro42703 = keras.layers.Cropping3D(cropping=((1, 0), (3, 0), (2, 0)), name = 'Cro42703', )(in0Cro42703)
Res30424 = keras.layers.Reshape((2, 2, 1), name = 'Res30424', )(Cro42703)
Ave44771 = keras.layers.Average(name = 'Ave44771', )([Res81195,Res30424])
Zer25784 = keras.layers.ZeroPadding2D(padding=((1, 0), (1, 0)), name = 'Zer25784', )(Ave44771)
Con2372 = keras.layers.Concatenate(axis=3, name = 'Con2372', )([Zer25784,in0Con2372])
Min98257 = keras.layers.Minimum(name = 'Min98257', )([Sub2984,Con2372])
Res12817 = keras.layers.Reshape((3, 9), name = 'Res12817', )(Min98257)
Max49685 = keras.layers.MaxPool1D(pool_size=(2), strides=(1), padding='valid', name = 'Max49685', )(Res12817)
model = tf.keras.models.Model(inputs=[in0Sub2984,in1Sub2984,in0Ave6444,in1Ave6444,in0Cro42703,in0Con2372], outputs=Max49685)
in0Sub2984 = tf.constant([[[[0.2627, 0.1855, 0.5961], [0.7641, 0.3005, 0.7657], [0.3973, 0.528, 0.7375]], [[0.0831, 0.0897, 0.5185], [0.0365, 0.1856, 0.5522], [0.5761, 0.4652, 0.7989]], [[0.2985, 0.9143, 0.6149], [0.114, 0.3203, 0.1723], [0.9273, 0.3384, 0.5694]]]])
in1Sub2984 = tf.constant([[[[0.0969, 0.2623, 0.0014], [0.2053, 0.1938, 0.644], [0.6795, 0.2971, 0.9422]], [[0.587, 0.89, 0.8828], [0.3267, 0.8221, 0.3912], [0.1608, 0.5113, 0.8169]], [[0.0237, 0.1196, 0.4501], [0.2187, 0.5269, 0.0906], [0.1119, 0.2322, 0.476]]]])
in0Ave6444 = tf.constant([[[0.5575, 0.7802], [0.992, 0.5947]]])
in1Ave6444 = tf.constant([[[0.045, 0.5837], [0.1879, 0.2249]]])
in0Cro42703 = tf.constant([[[[[1.0681, 1.0111], [1.557, 1.6552], [1.9319, 1.6673], [1.3711, 1.3488]], [[1.6349, 1.9416], [1.7164, 1.8468], [1.255, 1.5731], [1.1855, 1.2693]], [[1.972, 1.3258], [1.5869, 1.8902], [1.3177, 1.111], [1.411, 1.2169]], [[1.3338, 1.9359], [1.0892, 1.3724], [1.066, 1.9955], [1.5296, 1.3466]]], [[[1.2246, 1.0756], [1.0219, 1.8612], [1.9038, 1.1897], [1.3646, 1.176]], [[1.9643, 1.0322], [1.9889, 1.1505], [1.0606, 1.4001], [1.9261, 1.2758]], [[1.317, 1.2059], [1.6995, 1.1878], [1.3459, 1.0873], [1.6078, 1.3849]], [[1.6405, 1.9041], [1.411, 1.4848], [1.3703, 1.604], [1.1306, 1.378]]]]])
in0Con2372 = tf.constant([[[[0.1349, 0.5867], [0.4249, 0.2298], [0.4726, 0.9615]], [[0.883, 0.588], [0.4974, 0.0367], [0.3106, 0.35]], [[0.1642, 0.4814], [0.7237, 0.6616], [0.2176, 0.3979]]]])
print (np.array2string(model.predict([in0Sub2984,in1Sub2984,in0Ave6444,in1Ave6444,in0Cro42703,in0Con2372],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Max49685.png')

LSub2984 = subtract_layer([[[[0.2627, 0.1855, 0.5961], [0.7641, 0.3005, 0.7657], [0.3973, 0.528, 0.7375]], [[0.0831, 0.0897, 0.5185], [0.0365, 0.1856, 0.5522], [0.5761, 0.4652, 0.7989]], [[0.2985, 0.9143, 0.6149], [0.114, 0.3203, 0.1723], [0.9273, 0.3384, 0.5694]]]], [[[[0.0969, 0.2623, 0.0014], [0.2053, 0.1938, 0.644], [0.6795, 0.2971, 0.9422]], [[0.587, 0.89, 0.8828], [0.3267, 0.8221, 0.3912], [0.1608, 0.5113, 0.8169]], [[0.0237, 0.1196, 0.4501], [0.2187, 0.5269, 0.0906], [0.1119, 0.2322, 0.476]]]], Sub2984), 
LAve6444 = average_layer([[[[0.5575, 0.7802], [0.992, 0.5947]]], [[[0.045, 0.5837], [0.1879, 0.2249]]]], Ave6444), 
LRes81195 = reshape_layer(Ave6444, [2, 2, 1], Res81195), 
LCro42703 = cropping3D_layer([[[[[1.0681, 1.0111], [1.557, 1.6552], [1.9319, 1.6673], [1.3711, 1.3488]], [[1.6349, 1.9416], [1.7164, 1.8468], [1.255, 1.5731], [1.1855, 1.2693]], [[1.972, 1.3258], [1.5869, 1.8902], [1.3177, 1.111], [1.411, 1.2169]], [[1.3338, 1.9359], [1.0892, 1.3724], [1.066, 1.9955], [1.5296, 1.3466]]], [[[1.2246, 1.0756], [1.0219, 1.8612], [1.9038, 1.1897], [1.3646, 1.176]], [[1.9643, 1.0322], [1.9889, 1.1505], [1.0606, 1.4001], [1.9261, 1.2758]], [[1.317, 1.2059], [1.6995, 1.1878], [1.3459, 1.0873], [1.6078, 1.3849]], [[1.6405, 1.9041], [1.411, 1.4848], [1.3703, 1.604], [1.1306, 1.378]]]]], 1, 0, 3, 0, 2, 0, Cro42703), 
LRes30424 = reshape_layer(Cro42703, [2, 2, 1], Res30424), 
LAve44771 = average_layer([Res81195,Res30424], Ave44771), 
LZer25784 = zero_padding2D_layer(Ave44771, 1, 0, 1, 0, Zer25784), 
LCon2372 = concatenate_layer([Zer25784,[[[[0.1349, 0.5867], [0.4249, 0.2298], [0.4726, 0.9615]], [[0.883, 0.588], [0.4974, 0.0367], [0.3106, 0.35]], [[0.1642, 0.4814], [0.7237, 0.6616], [0.2176, 0.3979]]]]], 3, Con2372), 
LMin98257 = minimum_layer([Sub2984,Con2372], Min98257), 
LRes12817 = reshape_layer(Min98257, [3, 9], Res12817), 
LMax49685 = max_pool1D_layer(Res12817, 2, 1, false, Max49685), 
exec_layers([LSub2984,LAve6444,LRes81195,LCro42703,LRes30424,LAve44771,LZer25784,LCon2372,LMin98257,LRes12817,LMax49685],["Sub2984","Ave6444","Res81195","Cro42703","Res30424","Ave44771","Zer25784","Con2372","Min98257","Res12817","Max49685"],Max49685,"Max49685")

Actual (Unparsed): [[[0.0000000, -0.0768000, 0.5867000, 0.0000000, 0.1067000, 0.1217000, 0.4153000, 0.2309000, -0.0180000], [0.0000000, 0.1642000, 0.1648000, -0.1047000, -0.2066000, 0.0817000, 0.8154000, 0.1062000, 0.0934000]]]

Expected (Unparsed): [[[0,-0.07679999999999998,0.5867,0,0.10669999999999999,0.12170000000000003,0.41529999999999995,0.23090000000000005,-0.017999999999999905],[0,0.1642,0.1648,-0.1047,-0.20660000000000006,0.08170000000000001,0.8154,0.10619999999999999,0.09340000000000004]]]

Actual:   [[[0, -0.0768, 0.5867, 0, 0.1067, 0.1217, 0.4153, 0.2309, -0.018], [0, 0.1642, 0.1648, -0.1047, -0.2066, 0.0817, 0.8154, 0.1062, 0.0934]]]

Expected: [[[0, -0.0767, 0.5867, 0, 0.1067, 0.1218, 0.4153, 0.231, -0.0179], [0, 0.1642, 0.1648, -0.1047, -0.2066, 0.0818, 0.8154, 0.1062, 0.0935]]]