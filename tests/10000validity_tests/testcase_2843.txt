import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Ave30998 = tf.keras.layers.Input(shape=([1, 2]))
in1Ave30998 = tf.keras.layers.Input(shape=([1, 2]))

Ave30998 = keras.layers.Average(name = 'Ave30998', )([in0Ave30998,in1Ave30998])
Lay12431 = keras.layers.LayerNormalization(axis=2, epsilon=1.0909340681739217, name = 'Lay12431', )(Ave30998)
model = tf.keras.models.Model(inputs=[in0Ave30998,in1Ave30998], outputs=Lay12431)
in0Ave30998 = tf.constant([[[0.5616, 0.1355]]])
in1Ave30998 = tf.constant([[[0.6701, 0.2358]]])
print (np.array2string(model.predict([in0Ave30998,in1Ave30998],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Lay12431.png')

LAve30998 = average_layer([[[[0.5616, 0.1355]]], [[[0.6701, 0.2358]]]], Ave30998), 
LLay12431 = layer_normalization_layer(Ave30998, 2, 1.0909340681739217, Lay12431), 
exec_layers([LAve30998,LLay12431],["Ave30998","Lay12431"],Lay12431,"Lay12431")

Actual (Unparsed): [[[0.2017073, -0.2017073]]]

Expected (Unparsed): [[[0.20170728698645138,-0.20170728698645135]]]

Actual:   [[[0.2018, -0.2017]]]

Expected: [[[0.2018, -0.2017]]]