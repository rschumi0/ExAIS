import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Ave39793 = tf.keras.layers.Input(shape=([1, 2, 1, 1]))
in1Ave39793 = tf.keras.layers.Input(shape=([1, 2, 1, 1]))

Ave39793 = keras.layers.Average(name = 'Ave39793', )([in0Ave39793,in1Ave39793])
Res98019 = keras.layers.Reshape((1, 2, 1), name = 'Res98019', )(Ave39793)
Max66598 = keras.layers.MaxPool2D(pool_size=(1, 1), name = 'Max66598', )(Res98019)
Loc40873 = keras.layers.LocallyConnected2D(2, (1, 2),strides=(1, 2), name = 'Loc40873', )(Max66598)
model = tf.keras.models.Model(inputs=[in0Ave39793,in1Ave39793], outputs=Loc40873)
w = model.get_layer('Loc40873').get_weights() 
w[0] = np.array([[[0.5613, 0.9227], [0.7246, 0.5798]]])
w[1] = np.array([[[0, 0]]])
model.get_layer('Loc40873').set_weights(w) 
in0Ave39793 = tf.constant([[[[[0.3727]], [[0.2686]]]]])
in1Ave39793 = tf.constant([[[[[0.503]], [[0.3373]]]]])
print (np.array2string(model.predict([in0Ave39793,in1Ave39793],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Loc40873.png')

LAve39793 = average_layer([[[[[[0.3727]], [[0.2686]]]]], [[[[[0.503]], [[0.3373]]]]]], Ave39793), 
LRes98019 = reshape_layer(Ave39793, [1, 2, 1], Res98019), 
LMax66598 = max_pool2D_layer(Res98019, 1, 1, Max66598), 
LLoc40873 = locally_connected2D_layer(Max66598, 1, 2,[[[0.5613, 0.9227], [0.7246, 0.5798]]],[[[0, 0]]], 1, 2, Loc40873), 
exec_layers([LAve39793,LRes98019,LMax66598,LLoc40873],["Ave39793","Res98019","Max66598","Loc40873"],Loc40873,"Loc40873")

Actual (Unparsed): [[[[0.4652828, 0.5796546]]]]

Expected (Unparsed): [[[[0.465282775,0.579654605]]]]

Actual:   [[[[0.4653, 0.5797]]]]

Expected: [[[[0.4653, 0.5797]]]]