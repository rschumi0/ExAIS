import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Max1692 = tf.keras.layers.Input(shape=([2, 2, 1, 1]))
in1Max1692 = tf.keras.layers.Input(shape=([2, 2, 1, 1]))
in0Con13297 = tf.keras.layers.Input(shape=([20, 3, 2]))
in0Con52335 = tf.keras.layers.Input(shape=([1, 1, 1, 2]))

Max1692 = keras.layers.Maximum(name = 'Max1692', )([in0Max1692,in1Max1692])
Lay86449 = keras.layers.LayerNormalization(axis=1, epsilon=1.0049257395433082, name = 'Lay86449', )(Max1692)
Res40870 = keras.layers.Reshape((2, 2, 1), name = 'Res40870', )(Lay86449)
Zer96479 = keras.layers.ZeroPadding2D(padding=((18, 0), (1, 0)), name = 'Zer96479', )(Res40870)
Con13297 = keras.layers.Concatenate(axis=3, name = 'Con13297', )([Zer96479,in0Con13297])
Con52335 = keras.layers.Conv3DTranspose(3, (1, 1, 1),strides=(10, 1, 1), padding='valid', name = 'Con52335', )(in0Con52335)
Mas79969 = keras.layers.Masking(mask_value=2, name = 'Mas79969', )(Con52335)
Res95073 = keras.layers.Reshape((10, 1, 3), name = 'Res95073', )(Mas79969)
Up_48532 = keras.layers.UpSampling2D(size=(2, 1), name = 'Up_48532', )(Res95073)
Zer44736 = keras.layers.ZeroPadding2D(padding=((0, 0), (2, 0)), name = 'Zer44736', )(Up_48532)
Max11766 = keras.layers.Maximum(name = 'Max11766', )([Con13297,Zer44736])
model = tf.keras.models.Model(inputs=[in0Max1692,in1Max1692,in0Con13297,in0Con52335], outputs=Max11766)
w = model.get_layer('Con52335').get_weights() 
w[0] = np.array([[[[[0.4165, 0.7976], [0.2634, 0.4363], [0.2186, 0.188]]]]])
w[1] = np.array([0, 0, 0])
model.get_layer('Con52335').set_weights(w) 
in0Max1692 = tf.constant([[[[[0.938]], [[0.4577]]], [[[0.6476]], [[0.0969]]]]])
in1Max1692 = tf.constant([[[[[0.3433]], [[0.7348]]], [[[0.8677]], [[0.9274]]]]])
in0Con13297 = tf.constant([[[[0.0258, 0.7439], [0.3389, 0.2915], [0.11, 0.97]], [[0.0667, 0.7632], [0.4867, 0.8006], [0.7543, 0.0649]], [[0.189, 0.5924], [0.9566, 0.4197], [0.9157, 0.0834]], [[0.9646, 0.695], [0.9032, 0.2423], [0.7626, 0.402]], [[0.7134, 0.437], [0.9376, 0.6925], [0.642, 0.3641]], [[0.744, 0.9807], [0.7321, 0.9009], [0.0038, 0.867]], [[0.3093, 0.6743], [0.1602, 0.4983], [0.5493, 0.6767]], [[0.5996, 0.3673], [0.8327, 0.699], [0.3031, 0.8182]], [[0.5466, 0.703], [0.9991, 0.2084], [0.5517, 0.5074]], [[0.2474, 0.7551], [0.751, 0.3245], [0.3071, 0.5862]], [[0.0644, 0.7517], [0.2148, 0.4113], [0.6466, 0.7946]], [[0.23, 0.5292], [0.367, 0.3797], [0.6949, 0.5955]], [[0.4118, 0.6001], [0.396, 0.6912], [0.3666, 0.6304]], [[0.7192, 0.7499], [0.2903, 0.845], [0.2431, 0.3317]], [[0.1, 0.1789], [0.9306, 0.061], [0.0538, 0.1831]], [[0.7452, 0.7883], [0.2404, 0.5408], [0.3457, 0.68]], [[0.7607, 0.0368], [0.4949, 0.9898], [0.7241, 0.1022]], [[0.9513, 0.2291], [0.2709, 0.0906], [0.9138, 0.811]], [[0.5793, 0.3869], [0.5322, 0.0186], [0.2216, 0.2973]], [[0.6085, 0.3217], [0.2884, 0.4237], [0.3733, 0.6511]]]])
in0Con52335 = tf.constant([[[[[0.3084, 0.2574]]]]])
print (np.array2string(model.predict([in0Max1692,in1Max1692,in0Con13297,in0Con52335],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Max11766.png')

LMax1692 = maximum_layer([[[[[[0.938]], [[0.4577]]], [[[0.6476]], [[0.0969]]]]], [[[[[0.3433]], [[0.7348]]], [[[0.8677]], [[0.9274]]]]]], Max1692), 
LLay86449 = layer_normalization_layer(Max1692, 1, 1.0049257395433082, Lay86449), 
LRes40870 = reshape_layer(Lay86449, [2, 2, 1], Res40870), 
LZer96479 = zero_padding2D_layer(Res40870, 18, 0, 1, 0, Zer96479), 
LCon13297 = concatenate_layer([Zer96479,[[[[0.0258, 0.7439], [0.3389, 0.2915], [0.11, 0.97]], [[0.0667, 0.7632], [0.4867, 0.8006], [0.7543, 0.0649]], [[0.189, 0.5924], [0.9566, 0.4197], [0.9157, 0.0834]], [[0.9646, 0.695], [0.9032, 0.2423], [0.7626, 0.402]], [[0.7134, 0.437], [0.9376, 0.6925], [0.642, 0.3641]], [[0.744, 0.9807], [0.7321, 0.9009], [0.0038, 0.867]], [[0.3093, 0.6743], [0.1602, 0.4983], [0.5493, 0.6767]], [[0.5996, 0.3673], [0.8327, 0.699], [0.3031, 0.8182]], [[0.5466, 0.703], [0.9991, 0.2084], [0.5517, 0.5074]], [[0.2474, 0.7551], [0.751, 0.3245], [0.3071, 0.5862]], [[0.0644, 0.7517], [0.2148, 0.4113], [0.6466, 0.7946]], [[0.23, 0.5292], [0.367, 0.3797], [0.6949, 0.5955]], [[0.4118, 0.6001], [0.396, 0.6912], [0.3666, 0.6304]], [[0.7192, 0.7499], [0.2903, 0.845], [0.2431, 0.3317]], [[0.1, 0.1789], [0.9306, 0.061], [0.0538, 0.1831]], [[0.7452, 0.7883], [0.2404, 0.5408], [0.3457, 0.68]], [[0.7607, 0.0368], [0.4949, 0.9898], [0.7241, 0.1022]], [[0.9513, 0.2291], [0.2709, 0.0906], [0.9138, 0.811]], [[0.5793, 0.3869], [0.5322, 0.0186], [0.2216, 0.2973]], [[0.6085, 0.3217], [0.2884, 0.4237], [0.3733, 0.6511]]]]], 3, Con13297), 
LCon52335 = conv3D_transpose_layer([[[[[0.3084, 0.2574]]]]], 1, 1, 1,[[[[[0.4165, 0.7976], [0.2634, 0.4363], [0.2186, 0.188]]]]],[0, 0, 0], 10, 1, 1, false, Con52335), 
LMas79969 = masking_layer(Con52335, 2, Mas79969), 
LRes95073 = reshape_layer(Mas79969, [10, 1, 3], Res95073), 
LUp_48532 = up_sampling2D_layer(Res95073, 2, 1, Up_48532), 
LZer44736 = zero_padding2D_layer(Up_48532, 0, 0, 2, 0, Zer44736), 
LMax11766 = maximum_layer([Con13297,Zer44736], Max11766), 
exec_layers([LMax1692,LLay86449,LRes40870,LZer96479,LCon13297,LCon52335,LMas79969,LRes95073,LUp_48532,LZer44736,LMax11766],["Max1692","Lay86449","Res40870","Zer96479","Con13297","Con52335","Mas79969","Res95073","Up_48532","Zer44736","Max11766"],Max11766,"Max11766")

Actual (Unparsed): [[[[0.0000000, 0.0258000, 0.7439000], [0.0000000, 0.3389000, 0.2915000], [0.3337508, 0.1935362, 0.9700000]], [[0.0000000, 0.0667000, 0.7632000], [0.0000000, 0.4867000, 0.8006000], [0.3337508, 0.7543000, 0.1158074]], [[0.0000000, 0.1890000, 0.5924000], [0.0000000, 0.9566000, 0.4197000], [0.0000000, 0.9157000, 0.0834000]], [[0.0000000, 0.9646000, 0.6950000], [0.0000000, 0.9032000, 0.2423000], [0.0000000, 0.7626000, 0.4020000]], [[0.0000000, 0.7134000, 0.4370000], [0.0000000, 0.9376000, 0.6925000], [0.0000000, 0.6420000, 0.3641000]], [[0.0000000, 0.7440000, 0.9807000], [0.0000000, 0.7321000, 0.9009000], [0.0000000, 0.0038000, 0.8670000]], [[0.0000000, 0.3093000, 0.6743000], [0.0000000, 0.1602000, 0.4983000], [0.0000000, 0.5493000, 0.6767000]], [[0.0000000, 0.5996000, 0.3673000], [0.0000000, 0.8327000, 0.6990000], [0.0000000, 0.3031000, 0.8182000]], [[0.0000000, 0.5466000, 0.7030000], [0.0000000, 0.9991000, 0.2084000], [0.0000000, 0.5517000, 0.5074000]], [[0.0000000, 0.2474000, 0.7551000], [0.0000000, 0.7510000, 0.3245000], [0.0000000, 0.3071000, 0.5862000]], [[0.0000000, 0.0644000, 0.7517000], [0.0000000, 0.2148000, 0.4113000], [0.0000000, 0.6466000, 0.7946000]], [[0.0000000, 0.2300000, 0.5292000], [0.0000000, 0.3670000, 0.3797000], [0.0000000, 0.6949000, 0.5955000]], [[0.0000000, 0.4118000, 0.6001000], [0.0000000, 0.3960000, 0.6912000], [0.0000000, 0.3666000, 0.6304000]], [[0.0000000, 0.7192000, 0.7499000], [0.0000000, 0.2903000, 0.8450000], [0.0000000, 0.2431000, 0.3317000]], [[0.0000000, 0.1000000, 0.1789000], [0.0000000, 0.9306000, 0.0610000], [0.0000000, 0.0538000, 0.1831000]], [[0.0000000, 0.7452000, 0.7883000], [0.0000000, 0.2404000, 0.5408000], [0.0000000, 0.3457000, 0.6800000]], [[0.0000000, 0.7607000, 0.0368000], [0.0000000, 0.4949000, 0.9898000], [0.0000000, 0.7241000, 0.1022000]], [[0.0000000, 0.9513000, 0.2291000], [0.0000000, 0.2709000, 0.0906000], [0.0000000, 0.9138000, 0.8110000]], [[0.0000000, 0.5793000, 0.3869000], [0.0350422, 0.5322000, 0.0186000], [0.0000000, 0.2216000, 0.2973000]], [[0.0000000, 0.6085000, 0.3217000], [0.0000000, 0.2884000, 0.4237000], [0.0956235, 0.3733000, 0.6511000]]]]

Expected (Unparsed): [[[[0,0.0258,0.7439],[0,0.3389,0.2915],[0.33375084,0.19353618,0.97]],[[0,0.0667,0.7632],[0,0.4867,0.8006],[0.33375084,0.7543,0.11580744000000001]],[[0,0.189,0.5924],[0,0.9566,0.4197],[0,0.9157,0.0834]],[[0,0.9646,0.695],[0,0.9032,0.2423],[0,0.7626,0.402]],[[0,0.7134,0.437],[0,0.9376,0.6925],[0,0.642,0.3641]],[[0,0.744,0.9807],[0,0.7321,0.9009],[0,0.0038,0.867]],[[0,0.3093,0.6743],[0,0.1602,0.4983],[0,0.5493,0.6767]],[[0,0.5996,0.3673],[0,0.8327,0.699],[0,0.3031,0.8182]],[[0,0.5466,0.703],[0,0.9991,0.2084],[0,0.5517,0.5074]],[[0,0.2474,0.7551],[0,0.751,0.3245],[0,0.3071,0.5862]],[[0,0.0644,0.7517],[0,0.2148,0.4113],[0,0.6466,0.7946]],[[0,0.23,0.5292],[0,0.367,0.3797],[0,0.6949,0.5955]],[[0,0.4118,0.6001],[0,0.396,0.6912],[0,0.3666,0.6304]],[[0,0.7192,0.7499],[0,0.2903,0.845],[0,0.2431,0.3317]],[[0,0.1,0.1789],[0,0.9306,0.061],[0,0.0538,0.1831]],[[0,0.7452,0.7883],[0,0.2404,0.5408],[0,0.3457,0.68]],[[0,0.7607,0.0368],[0,0.4949,0.9898],[0,0.7241,0.1022]],[[0,0.9513,0.2291],[0,0.2709,0.0906],[0,0.9138,0.811]],[[0,0.5793,0.3869],[0.03504221363965088,0.5322,0.0186],[0,0.2216,0.2973]],[[0,0.6085,0.3217],[0,0.2884,0.4237],[0.09562349350720484,0.3733,0.6511]]]]

Actual:   [[[[0, 0.0258, 0.7439], [0, 0.3389, 0.2915], [0.3338, 0.1936, 0.97]], [[0, 0.0667, 0.7632], [0, 0.4867, 0.8006], [0.3338, 0.7543, 0.1159]], [[0, 0.189, 0.5924], [0, 0.9566, 0.4197], [0, 0.9157, 0.0834]], [[0, 0.9646, 0.695], [0, 0.9032, 0.2423], [0, 0.7626, 0.402]], [[0, 0.7134, 0.437], [0, 0.9376, 0.6925], [0, 0.642, 0.3641]], [[0, 0.744, 0.9807], [0, 0.7321, 0.9009], [0, 0.0038, 0.867]], [[0, 0.3093, 0.6743], [0, 0.1602, 0.4983], [0, 0.5493, 0.6767]], [[0, 0.5996, 0.3673], [0, 0.8327, 0.699], [0, 0.3031, 0.8182]], [[0, 0.5466, 0.703], [0, 0.9991, 0.2084], [0, 0.5517, 0.5074]], [[0, 0.2474, 0.7551], [0, 0.751, 0.3245], [0, 0.3071, 0.5862]], [[0, 0.0644, 0.7517], [0, 0.2148, 0.4113], [0, 0.6466, 0.7946]], [[0, 0.23, 0.5292], [0, 0.367, 0.3797], [0, 0.6949, 0.5955]], [[0, 0.4118, 0.6001], [0, 0.396, 0.6912], [0, 0.3666, 0.6304]], [[0, 0.7192, 0.7499], [0, 0.2903, 0.845], [0, 0.2431, 0.3317]], [[0, 0.1, 0.1789], [0, 0.9306, 0.061], [0, 0.0538, 0.1831]], [[0, 0.7452, 0.7883], [0, 0.2404, 0.5408], [0, 0.3457, 0.68]], [[0, 0.7607, 0.0368], [0, 0.4949, 0.9898], [0, 0.7241, 0.1022]], [[0, 0.9513, 0.2291], [0, 0.2709, 0.0906], [0, 0.9138, 0.811]], [[0, 0.5793, 0.3869], [0.0351, 0.5322, 0.0186], [0, 0.2216, 0.2973]], [[0, 0.6085, 0.3217], [0, 0.2884, 0.4237], [0.0957, 0.3733, 0.6511]]]]

Expected: [[[[0, 0.0258, 0.7439], [0, 0.3389, 0.2915], [0.3338, 0.1936, 0.97]], [[0, 0.0667, 0.7632], [0, 0.4867, 0.8006], [0.3338, 0.7543, 0.1159]], [[0, 0.189, 0.5924], [0, 0.9566, 0.4197], [0, 0.9157, 0.0834]], [[0, 0.9646, 0.695], [0, 0.9032, 0.2423], [0, 0.7626, 0.402]], [[0, 0.7134, 0.437], [0, 0.9376, 0.6925], [0, 0.642, 0.3641]], [[0, 0.744, 0.9807], [0, 0.7321, 0.9009], [0, 0.0038, 0.867]], [[0, 0.3093, 0.6743], [0, 0.1602, 0.4983], [0, 0.5493, 0.6767]], [[0, 0.5996, 0.3673], [0, 0.8327, 0.699], [0, 0.3031, 0.8182]], [[0, 0.5466, 0.703], [0, 0.9991, 0.2084], [0, 0.5517, 0.5074]], [[0, 0.2474, 0.7551], [0, 0.751, 0.3245], [0, 0.3071, 0.5862]], [[0, 0.0644, 0.7517], [0, 0.2148, 0.4113], [0, 0.6466, 0.7946]], [[0, 0.23, 0.5292], [0, 0.367, 0.3797], [0, 0.6949, 0.5955]], [[0, 0.4118, 0.6001], [0, 0.396, 0.6912], [0, 0.3666, 0.6304]], [[0, 0.7192, 0.7499], [0, 0.2903, 0.845], [0, 0.2431, 0.3317]], [[0, 0.1, 0.1789], [0, 0.9306, 0.061], [0, 0.0538, 0.1831]], [[0, 0.7452, 0.7883], [0, 0.2404, 0.5408], [0, 0.3457, 0.68]], [[0, 0.7607, 0.0368], [0, 0.4949, 0.9898], [0, 0.7241, 0.1022]], [[0, 0.9513, 0.2291], [0, 0.2709, 0.0906], [0, 0.9138, 0.811]], [[0, 0.5793, 0.3869], [0.0351, 0.5322, 0.0186], [0, 0.2216, 0.2973]], [[0, 0.6085, 0.3217], [0, 0.2884, 0.4237], [0.0957, 0.3733, 0.6511]]]]