import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Ave52618 = tf.keras.layers.Input(shape=([1, 1]))
in1Ave52618 = tf.keras.layers.Input(shape=([1, 1]))
in0Con58260 = tf.keras.layers.Input(shape=([2, 2, 2]))
in0Sub62593 = tf.keras.layers.Input(shape=([2, 2, 3]))
in1Sub62593 = tf.keras.layers.Input(shape=([2, 2, 3]))

Ave52618 = keras.layers.Average(name = 'Ave52618', )([in0Ave52618,in1Ave52618])
Res82624 = keras.layers.Reshape((1, 1, 1), name = 'Res82624', )(Ave52618)
Zer23733 = keras.layers.ZeroPadding2D(padding=((1, 0), (1, 0)), name = 'Zer23733', )(Res82624)
Con58260 = keras.layers.Concatenate(axis=3, name = 'Con58260', )([Zer23733,in0Con58260])
Sub62593 = keras.layers.Subtract(name = 'Sub62593', )([in0Sub62593,in1Sub62593])
Min93491 = keras.layers.Minimum(name = 'Min93491', )([Con58260,Sub62593])
Lea54427 = keras.layers.LeakyReLU(alpha=7.343640863840925, name = 'Lea54427', )(Min93491)
model = tf.keras.models.Model(inputs=[in0Ave52618,in1Ave52618,in0Con58260,in0Sub62593,in1Sub62593], outputs=Lea54427)
in0Ave52618 = tf.constant([[[0.6661]]])
in1Ave52618 = tf.constant([[[0.841]]])
in0Con58260 = tf.constant([[[[0.2137, 0.9092], [0.2759, 0.6351]], [[0.5779, 0.0398], [0.5373, 0.213]]]])
in0Sub62593 = tf.constant([[[[0.0821, 0.3832, 0.6414], [0.2623, 0.0331, 0.2895]], [[0.1811, 0.3632, 0.5461], [0.566, 0.014, 0.4572]]]])
in1Sub62593 = tf.constant([[[[0.9816, 0.7773, 0.8252], [0.3756, 0.1042, 0.9821]], [[0.3779, 0.3348, 0.6686], [0.5823, 0.3216, 0.0895]]]])
print (np.array2string(model.predict([in0Ave52618,in1Ave52618,in0Con58260,in0Sub62593,in1Sub62593],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Lea54427.png')

LAve52618 = average_layer([[[[0.6661]]], [[[0.841]]]], Ave52618), 
LRes82624 = reshape_layer(Ave52618, [1, 1, 1], Res82624), 
LZer23733 = zero_padding2D_layer(Res82624, 1, 0, 1, 0, Zer23733), 
LCon58260 = concatenate_layer([Zer23733,[[[[0.2137, 0.9092], [0.2759, 0.6351]], [[0.5779, 0.0398], [0.5373, 0.213]]]]], 3, Con58260), 
LSub62593 = subtract_layer([[[[0.0821, 0.3832, 0.6414], [0.2623, 0.0331, 0.2895]], [[0.1811, 0.3632, 0.5461], [0.566, 0.014, 0.4572]]]], [[[[0.9816, 0.7773, 0.8252], [0.3756, 0.1042, 0.9821]], [[0.3779, 0.3348, 0.6686], [0.5823, 0.3216, 0.0895]]]], Sub62593), 
LMin93491 = minimum_layer([Con58260,Sub62593], Min93491), 
LLea54427 = leaky_relu_layer(Min93491, 7.343640863840925, Lea54427), 
exec_layers([LAve52618,LRes82624,LZer23733,LCon58260,LSub62593,LMin93491,LLea54427],["Ave52618","Res82624","Zer23733","Con58260","Sub62593","Min93491","Lea54427"],Lea54427,"Lea54427")

Actual (Unparsed): [[[[-6.6056048, -2.8941289, -1.3497615], [-0.8320345, -0.5221328, -5.0862057]], [[-1.4452286, 0.0284000, -0.8995960], [-0.1197015, -2.2589038, 0.2130000]]]]

Expected (Unparsed): [[[[-6.605604957024911,-2.8941288644397085,-1.3497611907739626],[-0.8320345098731768,-0.5221328654190898,-5.086205662296225]],[[-1.445228522003894,0.028400000000000036,-0.8995960058205129],[-0.11970134608060776,-2.2589039297174685,0.213]]]]

Actual:   [[[[-6.6056, -2.8941, -1.3497], [-0.832, -0.5221, -5.0862]], [[-1.4452, 0.0284, -0.8995], [-0.1197, -2.2589, 0.213]]]]

Expected: [[[[-6.6056, -2.8941, -1.3497], [-0.832, -0.5221, -5.0862]], [[-1.4452, 0.0285, -0.8995], [-0.1197, -2.2589, 0.213]]]]