import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Ave50513 = tf.keras.layers.Input(shape=([2, 2]))
in1Ave50513 = tf.keras.layers.Input(shape=([2, 2]))

Ave50513 = keras.layers.Average(name = 'Ave50513', )([in0Ave50513,in1Ave50513])
Res51361 = keras.layers.Reshape((2, 2, 1), name = 'Res51361', )(Ave50513)
Res71280 = keras.layers.Reshape((2, 2, 1, 1), name = 'Res71280', )(Res51361)
Zer34605 = keras.layers.ZeroPadding3D(padding=((1, 1), (1, 1), (1, 1)), name = 'Zer34605', )(Res71280)
model = tf.keras.models.Model(inputs=[in0Ave50513,in1Ave50513], outputs=Zer34605)
in0Ave50513 = tf.constant([[[0.4876, 0.1185], [0.7827, 0.7806]]])
in1Ave50513 = tf.constant([[[0.144, 0.2474], [0.8179, 0.6117]]])
print (np.array2string(model.predict([in0Ave50513,in1Ave50513],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Zer34605.png')

LAve50513 = average_layer([[[[0.4876, 0.1185], [0.7827, 0.7806]]], [[[0.144, 0.2474], [0.8179, 0.6117]]]], Ave50513), 
LRes51361 = reshape_layer(Ave50513, [2, 2, 1], Res51361), 
LRes71280 = reshape_layer(Res51361, [2, 2, 1, 1], Res71280), 
LZer34605 = zero_padding3D_layer(Res71280, 1, 1, 1, 1, 1, 1, Zer34605), 
exec_layers([LAve50513,LRes51361,LRes71280,LZer34605],["Ave50513","Res51361","Res71280","Zer34605"],Zer34605,"Zer34605")

Actual (Unparsed): [[[[[0.0000000], [0.0000000], [0.0000000]], [[0.0000000], [0.0000000], [0.0000000]], [[0.0000000], [0.0000000], [0.0000000]], [[0.0000000], [0.0000000], [0.0000000]]], [[[0.0000000], [0.0000000], [0.0000000]], [[0.0000000], [0.3158000], [0.0000000]], [[0.0000000], [0.1829500], [0.0000000]], [[0.0000000], [0.0000000], [0.0000000]]], [[[0.0000000], [0.0000000], [0.0000000]], [[0.0000000], [0.8003000], [0.0000000]], [[0.0000000], [0.6961500], [0.0000000]], [[0.0000000], [0.0000000], [0.0000000]]], [[[0.0000000], [0.0000000], [0.0000000]], [[0.0000000], [0.0000000], [0.0000000]], [[0.0000000], [0.0000000], [0.0000000]], [[0.0000000], [0.0000000], [0.0000000]]]]]

Expected (Unparsed): [[[[[0],[0],[0]],[[0],[0],[0]],[[0],[0],[0]],[[0],[0],[0]]],[[[0],[0],[0]],[[0],[0.31579999999999997],[0]],[[0],[0.18295],[0]],[[0],[0],[0]]],[[[0],[0],[0]],[[0],[0.8003],[0]],[[0],[0.69615],[0]],[[0],[0],[0]]],[[[0],[0],[0]],[[0],[0],[0]],[[0],[0],[0]],[[0],[0],[0]]]]]

Actual:   [[[[[0], [0], [0]], [[0], [0], [0]], [[0], [0], [0]], [[0], [0], [0]]], [[[0], [0], [0]], [[0], [0.3158], [0]], [[0], [0.183], [0]], [[0], [0], [0]]], [[[0], [0], [0]], [[0], [0.8003], [0]], [[0], [0.6962], [0]], [[0], [0], [0]]], [[[0], [0], [0]], [[0], [0], [0]], [[0], [0], [0]], [[0], [0], [0]]]]]

Expected: [[[[[0], [0], [0]], [[0], [0], [0]], [[0], [0], [0]], [[0], [0], [0]]], [[[0], [0], [0]], [[0], [0.3158], [0]], [[0], [0.183], [0]], [[0], [0], [0]]], [[[0], [0], [0]], [[0], [0.8003], [0]], [[0], [0.6962], [0]], [[0], [0], [0]]], [[[0], [0], [0]], [[0], [0], [0]], [[0], [0], [0]], [[0], [0], [0]]]]]