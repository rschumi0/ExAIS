import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Min87262 = tf.keras.layers.Input(shape=([1, 2, 1, 2]))
in1Min87262 = tf.keras.layers.Input(shape=([1, 2, 1, 2]))
in0Mul58615 = tf.keras.layers.Input(shape=([1, 1, 2]))
in1Mul58615 = tf.keras.layers.Input(shape=([1, 1, 2]))
in0Con76822 = tf.keras.layers.Input(shape=([2, 2, 1]))
in0Min35659 = tf.keras.layers.Input(shape=([2, 2, 2]))
in1Min35659 = tf.keras.layers.Input(shape=([2, 2, 2]))

Min87262 = keras.layers.Minimum(name = 'Min87262', )([in0Min87262,in1Min87262])
Res80486 = keras.layers.Reshape((1, 2, 2), name = 'Res80486', )(Min87262)
Zer92535 = keras.layers.ZeroPadding2D(padding=((1, 0), (0, 0)), name = 'Zer92535', )(Res80486)
Mul58615 = keras.layers.Multiply(name = 'Mul58615', )([in0Mul58615,in1Mul58615])
Fla54715 = keras.layers.Flatten(name = 'Fla54715', )(Mul58615)
Res70698 = keras.layers.Reshape((2, 1), name = 'Res70698', )(Fla54715)
Res34873 = keras.layers.Reshape((2, 1, 1), name = 'Res34873', )(Res70698)
Zer24137 = keras.layers.ZeroPadding2D(padding=((0, 0), (1, 0)), name = 'Zer24137', )(Res34873)
Con76822 = keras.layers.Concatenate(axis=3, name = 'Con76822', )([Zer24137,in0Con76822])
Min35659 = keras.layers.Minimum(name = 'Min35659', )([in0Min35659,in1Min35659])
Ave71574 = keras.layers.Average(name = 'Ave71574', )([Con76822,Min35659])
Add17607 = keras.layers.Add(name = 'Add17607', )([Zer92535,Ave71574])
model = tf.keras.models.Model(inputs=[in0Min87262,in1Min87262,in0Mul58615,in1Mul58615,in0Con76822,in0Min35659,in1Min35659], outputs=Add17607)
in0Min87262 = tf.constant([[[[[0.6918, 0.5606]], [[0.0839, 0.9337]]]]])
in1Min87262 = tf.constant([[[[[0.946, 0.9054]], [[0.8422, 0.9292]]]]])
in0Mul58615 = tf.constant([[[[0.6843, 0.8973]]]])
in1Mul58615 = tf.constant([[[[0.8156, 0.9292]]]])
in0Con76822 = tf.constant([[[[0.9968], [0.9048]], [[0.1138], [0.6955]]]])
in0Min35659 = tf.constant([[[[0.6787, 0.1727], [0.9409, 0.166]], [[0.0608, 0.4062], [0.8726, 0.2629]]]])
in1Min35659 = tf.constant([[[[0.4765, 0.1526], [0.2111, 0.4442]], [[0.6759, 0.3078], [0.0975, 0.1796]]]])
print (np.array2string(model.predict([in0Min87262,in1Min87262,in0Mul58615,in1Mul58615,in0Con76822,in0Min35659,in1Min35659],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Add17607.png')

LMin87262 = minimum_layer([[[[[[0.6918, 0.5606]], [[0.0839, 0.9337]]]]], [[[[[0.946, 0.9054]], [[0.8422, 0.9292]]]]]], Min87262), 
LRes80486 = reshape_layer(Min87262, [1, 2, 2], Res80486), 
LZer92535 = zero_padding2D_layer(Res80486, 1, 0, 0, 0, Zer92535), 
LMul58615 = multiply_layer([[[[[0.6843, 0.8973]]]], [[[[0.8156, 0.9292]]]]], Mul58615), 
LFla54715 = flatten_layer(Mul58615, Fla54715), 
LRes70698 = reshape_layer(Fla54715, [2, 1], Res70698), 
LRes34873 = reshape_layer(Res70698, [2, 1, 1], Res34873), 
LZer24137 = zero_padding2D_layer(Res34873, 0, 0, 1, 0, Zer24137), 
LCon76822 = concatenate_layer([Zer24137,[[[[0.9968], [0.9048]], [[0.1138], [0.6955]]]]], 3, Con76822), 
LMin35659 = minimum_layer([[[[[0.6787, 0.1727], [0.9409, 0.166]], [[0.0608, 0.4062], [0.8726, 0.2629]]]], [[[[0.4765, 0.1526], [0.2111, 0.4442]], [[0.6759, 0.3078], [0.0975, 0.1796]]]]], Min35659), 
LAve71574 = average_layer([Con76822,Min35659], Ave71574), 
LAdd17607 = add_layer([Zer92535,Ave71574], Add17607), 
exec_layers([LMin87262,LRes80486,LZer92535,LMul58615,LFla54715,LRes70698,LRes34873,LZer24137,LCon76822,LMin35659,LAve71574,LAdd17607],["Min87262","Res80486","Zer92535","Mul58615","Fla54715","Res70698","Res34873","Zer24137","Con76822","Min35659","Ave71574","Add17607"],Add17607,"Add17607")

Actual (Unparsed): [[[[0.2382500, 0.5747000], [0.3846075, 0.5354000]], [[0.7222000, 0.7714000], [0.5495356, 1.3667500]]]]

Expected (Unparsed): [[[[0.23825,0.5747],[0.38460753999999997,0.5354]],[[0.7222,0.7714],[0.54953558,1.3667500000000001]]]]

Actual:   [[[[0.2383, 0.5747], [0.3847, 0.5354]], [[0.7222, 0.7714], [0.5496, 1.3668]]]]

Expected: [[[[0.2383, 0.5747], [0.3847, 0.5354]], [[0.7222, 0.7714], [0.5496, 1.3668]]]]