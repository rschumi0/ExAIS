import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Glo2974 = tf.keras.layers.Input(shape=([1, 1, 2]))
in0Con9431 = tf.keras.layers.Input(shape=([4, 4, 3]))
in0Mas88494 = tf.keras.layers.Input(shape=([4, 4, 4]))
in0Cro53344 = tf.keras.layers.Input(shape=([4, 4, 2]))
in0Con98303 = tf.keras.layers.Input(shape=([4, 4, 2]))

Glo2974 = keras.layers.GlobalMaxPool2D(name = 'Glo2974', )(in0Glo2974)
Res87322 = keras.layers.Reshape((2, 1), name = 'Res87322', )(Glo2974)
Res51932 = keras.layers.Reshape((2, 1, 1), name = 'Res51932', )(Res87322)
Zer60347 = keras.layers.ZeroPadding2D(padding=((2, 0), (3, 0)), name = 'Zer60347', )(Res51932)
Con9431 = keras.layers.Concatenate(axis=3, name = 'Con9431', )([Zer60347,in0Con9431])
Mas88494 = keras.layers.Masking(mask_value=1, name = 'Mas88494', )(in0Mas88494)
Sub68457 = keras.layers.Subtract(name = 'Sub68457', )([Con9431,Mas88494])
Cro53344 = keras.layers.Cropping2D(cropping=((1, 2), (1, 2)), name = 'Cro53344', )(in0Cro53344)
Zer11312 = keras.layers.ZeroPadding2D(padding=((3, 0), (3, 0)), name = 'Zer11312', )(Cro53344)
Con98303 = keras.layers.Concatenate(axis=3, name = 'Con98303', )([Zer11312,in0Con98303])
Sub85380 = keras.layers.Subtract(name = 'Sub85380', )([Sub68457,Con98303])
model = tf.keras.models.Model(inputs=[in0Glo2974,in0Con9431,in0Mas88494,in0Cro53344,in0Con98303], outputs=Sub85380)
in0Glo2974 = tf.constant([[[[1.2067, 1.6879]]]])
in0Con9431 = tf.constant([[[[0.6831, 0.8028, 0.7238], [0.4766, 0.9309, 0.2803], [0.8783, 0.8634, 0.5253], [0.5782, 0.8886, 0.6009]], [[0.0536, 0.1985, 0.1097], [0.997, 0.4718, 0.7236], [0.3772, 0.7027, 0.2769], [0.1534, 0.5801, 0.0547]], [[0.3361, 0.4382, 0.0531], [0.5859, 0.9386, 0.8339], [0.4205, 0.8086, 0.2493], [0.7032, 0.7191, 0.076]], [[0.3648, 0.0379, 0.7249], [0.1841, 0.5985, 0.2904], [0.4143, 0.3873, 0.4541], [0.0643, 0.4005, 0.6732]]]])
in0Mas88494 = tf.constant([[[[1.8818, 1.3789, 1.6212, 1.1274], [1.84, 1.7106, 1.4102, 1.8189], [1.848, 1.7328, 1.447, 1.5416], [1.6627, 1.9106, 1.0321, 1.0434]], [[1.0606, 1.1963, 1.2049, 1.3332], [1.8825, 1.4463, 1.2662, 1.9577], [1.0491, 1.9167, 1.8563, 1.4374], [1.1362, 1.7428, 1.1743, 1.0701]], [[1.9778, 1.6065, 1.7015, 1.1221], [1.6827, 1.3736, 1.0947, 1.0226], [1.3975, 1.3467, 1.7542, 1.5527], [1.1235, 1.9157, 1.9374, 1.1782]], [[1.9062, 1.8165, 1.1913, 1.6129], [1.7551, 1.9072, 1.3044, 1.4194], [1.7235, 1.3616, 1.9431, 1.9555], [1.6792, 1.4413, 1.6295, 1.2565]]]])
in0Cro53344 = tf.constant([[[[1.4328, 1.5605], [1.742, 1.5056], [1.0525, 1.1822], [1.7768, 1.5933]], [[1.3948, 1.1987], [1.1941, 1.8877], [1.1025, 1.8381], [1.7907, 1.7479]], [[1.5862, 1.8122], [1.6925, 1.5017], [1.7901, 1.3769], [1.7378, 1.5754]], [[1.8681, 1.2085], [1.2363, 1.2179], [1.2468, 1.5186], [1.8324, 1.7916]]]])
in0Con98303 = tf.constant([[[[0.7714, 0.8371], [0.4222, 0.4316], [0.245, 0.6464], [0.8801, 0.5186]], [[0.96, 0.5778], [0.1894, 0.5776], [0.1396, 0.9303], [0.8512, 0.225]], [[0.5514, 0.4424], [0.0546, 0.4636], [0.5702, 0.1927], [0.5979, 0.2185]], [[0.5866, 0.0717], [0.8882, 0.1069], [0.8925, 0.1268], [0.8163, 0.5649]]]])
print (np.array2string(model.predict([in0Glo2974,in0Con9431,in0Mas88494,in0Cro53344,in0Con98303],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Sub85380.png')

LGlo2974 = global_max_pool2D_layer([[[[1.2067, 1.6879]]]], Glo2974), 
LRes87322 = reshape_layer(Glo2974, [2, 1], Res87322), 
LRes51932 = reshape_layer(Res87322, [2, 1, 1], Res51932), 
LZer60347 = zero_padding2D_layer(Res51932, 2, 0, 3, 0, Zer60347), 
LCon9431 = concatenate_layer([Zer60347,[[[[0.6831, 0.8028, 0.7238], [0.4766, 0.9309, 0.2803], [0.8783, 0.8634, 0.5253], [0.5782, 0.8886, 0.6009]], [[0.0536, 0.1985, 0.1097], [0.997, 0.4718, 0.7236], [0.3772, 0.7027, 0.2769], [0.1534, 0.5801, 0.0547]], [[0.3361, 0.4382, 0.0531], [0.5859, 0.9386, 0.8339], [0.4205, 0.8086, 0.2493], [0.7032, 0.7191, 0.076]], [[0.3648, 0.0379, 0.7249], [0.1841, 0.5985, 0.2904], [0.4143, 0.3873, 0.4541], [0.0643, 0.4005, 0.6732]]]]], 3, Con9431), 
LMas88494 = masking_layer([[[[1.8818, 1.3789, 1.6212, 1.1274], [1.84, 1.7106, 1.4102, 1.8189], [1.848, 1.7328, 1.447, 1.5416], [1.6627, 1.9106, 1.0321, 1.0434]], [[1.0606, 1.1963, 1.2049, 1.3332], [1.8825, 1.4463, 1.2662, 1.9577], [1.0491, 1.9167, 1.8563, 1.4374], [1.1362, 1.7428, 1.1743, 1.0701]], [[1.9778, 1.6065, 1.7015, 1.1221], [1.6827, 1.3736, 1.0947, 1.0226], [1.3975, 1.3467, 1.7542, 1.5527], [1.1235, 1.9157, 1.9374, 1.1782]], [[1.9062, 1.8165, 1.1913, 1.6129], [1.7551, 1.9072, 1.3044, 1.4194], [1.7235, 1.3616, 1.9431, 1.9555], [1.6792, 1.4413, 1.6295, 1.2565]]]], 1, Mas88494), 
LSub68457 = subtract_layer(Con9431,Mas88494, Sub68457), 
LCro53344 = cropping2D_layer([[[[1.4328, 1.5605], [1.742, 1.5056], [1.0525, 1.1822], [1.7768, 1.5933]], [[1.3948, 1.1987], [1.1941, 1.8877], [1.1025, 1.8381], [1.7907, 1.7479]], [[1.5862, 1.8122], [1.6925, 1.5017], [1.7901, 1.3769], [1.7378, 1.5754]], [[1.8681, 1.2085], [1.2363, 1.2179], [1.2468, 1.5186], [1.8324, 1.7916]]]], 1, 2, 1, 2, Cro53344), 
LZer11312 = zero_padding2D_layer(Cro53344, 3, 0, 3, 0, Zer11312), 
LCon98303 = concatenate_layer([Zer11312,[[[[0.7714, 0.8371], [0.4222, 0.4316], [0.245, 0.6464], [0.8801, 0.5186]], [[0.96, 0.5778], [0.1894, 0.5776], [0.1396, 0.9303], [0.8512, 0.225]], [[0.5514, 0.4424], [0.0546, 0.4636], [0.5702, 0.1927], [0.5979, 0.2185]], [[0.5866, 0.0717], [0.8882, 0.1069], [0.8925, 0.1268], [0.8163, 0.5649]]]]], 3, Con98303), 
LSub85380 = subtract_layer(Sub68457,Con98303, Sub85380), 
exec_layers([LGlo2974,LRes87322,LRes51932,LZer60347,LCon9431,LMas88494,LSub68457,LCro53344,LZer11312,LCon98303,LSub85380],["Glo2974","Res87322","Res51932","Zer60347","Con9431","Mas88494","Sub68457","Cro53344","Zer11312","Con98303","Sub85380"],Sub85380,"Sub85380")

Actual (Unparsed): [[[[-1.8818001, -0.6958001, -1.5897999, -1.2407001], [-1.8400000, -1.2340000, -0.9015000, -1.9702000], [-1.8480000, -0.8545000, -0.8286000, -1.6626999], [-1.6627001, -1.3324000, -1.0236000, -0.9611000]], [[-1.0606000, -1.1427000, -1.9664000, -1.8013000], [-1.8825001, -0.4493001, -0.9837999, -1.8117000], [-1.0491000, -1.5395000, -1.2932000, -2.0908000], [-1.1362000, -1.5894000, -1.4453999, -1.2403999]], [[-1.9778000, -1.2704000, -1.8147001, -1.5114000], [-1.6827000, -0.7877000, -0.2107000, -0.6523001], [-1.3975000, -0.9261999, -1.5158000, -1.4961000], [0.0832000, -1.2125000, -1.8162000, -1.3207000]], [[-1.9062001, -1.4516999, -1.7400000, -0.9597000], [-1.7551000, -1.7231000, -1.5940999, -1.2359000], [-1.7235000, -0.9473000, -2.4482999, -1.6282000], [-1.1854001, -3.2647000, -2.0453000, -1.1482000]]]]

Expected (Unparsed): [[[[-1.8818,-0.6958,-1.5897999999999999,-1.2407],[-1.84,-1.234,-0.9015,-1.9702],[-1.848,-0.8544999999999999,-0.8286000000000001,-1.6627],[-1.6627,-1.3324,-1.0236,-0.9611000000000001]],[[-1.0606,-1.1426999999999998,-1.9664000000000001,-1.8013],[-1.8825,-0.4492999999999999,-0.9838,-1.8117],[-1.0491,-1.5395,-1.2932,-2.0908],[-1.1362,-1.5894,-1.4453999999999998,-1.2404000000000002]],[[-1.9778,-1.2704,-1.8147000000000002,-1.5114],[-1.6827,-0.7877,-0.21070000000000003,-0.6523],[-1.3975,-0.9262,-1.5158,-1.4961],[0.08320000000000016,-1.2125,-1.8162000000000003,-1.3206999999999998]],[[-1.9062,-1.4517,-1.74,-0.9597],[-1.7551,-1.7231,-1.5941,-1.2359],[-1.7235,-0.9472999999999999,-2.4483,-1.6282],[-1.1854,-3.2647,-2.0453,-1.1481999999999999]]]]

Actual:   [[[[-1.8818, -0.6958, -1.5897, -1.2407], [-1.84, -1.234, -0.9015, -1.9702], [-1.848, -0.8545, -0.8286, -1.6626], [-1.6627, -1.3324, -1.0236, -0.9611]], [[-1.0606, -1.1427, -1.9664, -1.8013], [-1.8825, -0.4493, -0.9837, -1.8117], [-1.0491, -1.5395, -1.2932, -2.0908], [-1.1362, -1.5894, -1.4453, -1.2403]], [[-1.9778, -1.2704, -1.8147, -1.5114], [-1.6827, -0.7877, -0.2107, -0.6523], [-1.3975, -0.9261, -1.5158, -1.4961], [0.0832, -1.2125, -1.8162, -1.3207]], [[-1.9062, -1.4516, -1.74, -0.9597], [-1.7551, -1.7231, -1.594, -1.2359], [-1.7235, -0.9473, -2.4482, -1.6282], [-1.1854, -3.2647, -2.0453, -1.1482]]]]

Expected: [[[[-1.8818, -0.6958, -1.5897, -1.2407], [-1.84, -1.234, -0.9015, -1.9702], [-1.848, -0.8544, -0.8286, -1.6627], [-1.6627, -1.3324, -1.0236, -0.9611]], [[-1.0606, -1.1426, -1.9664, -1.8013], [-1.8825, -0.4492, -0.9838, -1.8117], [-1.0491, -1.5395, -1.2932, -2.0908], [-1.1362, -1.5894, -1.4453, -1.2404]], [[-1.9778, -1.2704, -1.8147, -1.5114], [-1.6827, -0.7877, -0.2107, -0.6523], [-1.3975, -0.9262, -1.5158, -1.4961], [0.0833, -1.2125, -1.8162, -1.3206]], [[-1.9062, -1.4517, -1.74, -0.9597], [-1.7551, -1.7231, -1.5941, -1.2359], [-1.7235, -0.9472, -2.4483, -1.6282], [-1.1854, -3.2647, -2.0453, -1.1481]]]]