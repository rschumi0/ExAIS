import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Ave84881 = tf.keras.layers.Input(shape=([2, 2, 2, 2]))
in1Ave84881 = tf.keras.layers.Input(shape=([2, 2, 2, 2]))

Ave84881 = keras.layers.Average(name = 'Ave84881', )([in0Ave84881,in1Ave84881])
Res84041 = keras.layers.Reshape((2, 2, 4), name = 'Res84041', )(Ave84881)
Up_16833 = keras.layers.UpSampling2D(size=(1, 1), name = 'Up_16833', )(Res84041)
Bat11879 = keras.layers.BatchNormalization(axis=1, epsilon=0.8205737675890951,  name = 'Bat11879', )(Up_16833)
model = tf.keras.models.Model(inputs=[in0Ave84881,in1Ave84881], outputs=Bat11879)
w = model.get_layer('Bat11879').get_weights() 
w[0] = np.array([0.0366, 0.1453])
w[1] = np.array([0.7625, 0.8588])
w[2] = np.array([0.9878, 0.698])
w[3] = np.array([0.6214, 0.3282])
model.get_layer('Bat11879').set_weights(w) 
in0Ave84881 = tf.constant([[[[[0.2257, 0.1163], [0.2935, 0.0134]], [[0.5678, 0.1834], [0.1221, 0.8822]]], [[[0.0214, 0.1866], [0.0117, 0.2763]], [[0.029, 0.0884], [0.3427, 0.8254]]]]])
in1Ave84881 = tf.constant([[[[[0.4171, 0.0946], [0.292, 0.8741]], [[0.582, 0.4101], [0.2492, 0.5678]]], [[[0.5169, 0.9719], [0.6244, 0.5328]], [[0.2547, 0.0843], [0.1409, 0.9326]]]]])
print (np.array2string(model.predict([in0Ave84881,in1Ave84881],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Bat11879.png')

LAve84881 = average_layer([[[[[[0.2257, 0.1163], [0.2935, 0.0134]], [[0.5678, 0.1834], [0.1221, 0.8822]]], [[[0.0214, 0.1866], [0.0117, 0.2763]], [[0.029, 0.0884], [0.3427, 0.8254]]]]], [[[[[0.4171, 0.0946], [0.292, 0.8741]], [[0.582, 0.4101], [0.2492, 0.5678]]], [[[0.5169, 0.9719], [0.6244, 0.5328]], [[0.2547, 0.0843], [0.1409, 0.9326]]]]]], Ave84881), 
LRes84041 = reshape_layer(Ave84881, [2, 2, 4], Res84041), 
LUp_16833 = up_sampling2D_layer(Res84041, 1, 1, Up_16833), 
LBat11879 = batch_normalization_layer(Up_16833, 1, 0.8205737675890951, [0.0366, 0.1453], [0.7625, 0.8588], [0.9878, 0.698], [0.6214, 0.3282], Bat11879), 
exec_layers([LAve84881,LRes84041,LUp_16833,LBat11879],["Ave84881","Res84041","Up_16833","Bat11879"],Bat11879,"Bat11879")

Actual (Unparsed): [[[[0.7421887, 0.7356067, 0.7413155, 0.7459178], [0.7499152, 0.7414374, 0.7380512, 0.7544901]], [[0.8006628, 0.8427016, 0.8072920, 0.8190184], [0.7834054, 0.7758815, 0.7969551, 0.8833373]]]]

Expected (Unparsed): [[[[0.7421887152872881,0.7356067496004481,0.7413154885360588,0.7459178354622585],[0.7499151718819347,0.741437405010925,0.7380511749215158,0.7544900876012894]],[[0.8006628452040715,0.8427016273008826,0.8072919856250134,0.8190183792121599],[0.7834053896706177,0.7758815186407144,0.7969551357866327,0.8833373091245496]]]]

Actual:   [[[[0.7422, 0.7357, 0.7414, 0.746], [0.75, 0.7415, 0.7381, 0.7545]], [[0.8007, 0.8428, 0.8073, 0.8191], [0.7835, 0.7759, 0.797, 0.8834]]]]

Expected: [[[[0.7422, 0.7357, 0.7414, 0.746], [0.75, 0.7415, 0.7381, 0.7545]], [[0.8007, 0.8428, 0.8073, 0.8191], [0.7835, 0.7759, 0.797, 0.8834]]]]