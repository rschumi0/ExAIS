import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Ave64444 = tf.keras.layers.Input(shape=([1, 2, 1, 2]))
in1Ave64444 = tf.keras.layers.Input(shape=([1, 2, 1, 2]))
in0Lea67086 = tf.keras.layers.Input(shape=([1, 2, 2]))
in0Cro78657 = tf.keras.layers.Input(shape=([1, 4, 1, 1]))
in0Con23373 = tf.keras.layers.Input(shape=([1, 2, 2, 1]))
in0LST54624 = tf.keras.layers.Input(shape=([2, 3]))
in0Con84647 = tf.keras.layers.Input(shape=([1, 2, 1]))
in0Up_47615 = tf.keras.layers.Input(shape=([1, 1, 2, 4]))
in0Con40360 = tf.keras.layers.Input(shape=([1, 1, 2, 2]))
in0Con88683 = tf.keras.layers.Input(shape=([1, 2, 4, 1]))
in0Con94085 = tf.keras.layers.Input(shape=([1, 6]))

Ave64444 = keras.layers.Average(name = 'Ave64444', )([in0Ave64444,in1Ave64444])
Zer5947 = keras.layers.ZeroPadding3D(padding=((0, 0), (0, 0), (1, 0)), name = 'Zer5947', )(Ave64444)
Lea67086 = keras.layers.LeakyReLU(alpha=3.382030042020295, name = 'Lea67086', input_shape=(1, 2, 2))(in0Lea67086)
Res70661 = keras.layers.Reshape((1, 2, 2, 1), name = 'Res70661', )(Lea67086)
Cro78657 = keras.layers.Cropping3D(cropping=((0, 0), (1, 2), (0, 0)), name = 'Cro78657', )(in0Cro78657)
Zer67831 = keras.layers.ZeroPadding3D(padding=((0, 0), (1, 0), (1, 0)), name = 'Zer67831', )(Cro78657)
Min78361 = keras.layers.Minimum(name = 'Min78361', )([Res70661,Zer67831])
Con23373 = keras.layers.Concatenate(axis=4, name = 'Con23373', )([Min78361,in0Con23373])
Mul91513 = keras.layers.Multiply(name = 'Mul91513', )([Zer5947,Con23373])
Res6014 = keras.layers.Reshape((1, 2, 4), name = 'Res6014', )(Mul91513)
LST54624 = keras.layers.LSTM(1,recurrent_activation='sigmoid', name = 'LST54624', )(in0LST54624)
Res10879 = keras.layers.Reshape((1, 1), name = 'Res10879', )(LST54624)
Res59794 = keras.layers.Reshape((1, 1, 1), name = 'Res59794', )(Res10879)
Con76090 = keras.layers.Conv2D(3, (1, 1),strides=(1, 1), padding='same', dilation_rate=(1, 1), name = 'Con76090', )(Res59794)
Up_82479 = keras.layers.UpSampling2D(size=(1, 2), name = 'Up_82479', )(Con76090)
Con84647 = keras.layers.Concatenate(axis=3, name = 'Con84647', )([Up_82479,in0Con84647])
Max81243 = keras.layers.Maximum(name = 'Max81243', )([Res6014,Con84647])
Res94658 = keras.layers.Reshape((1, 8), name = 'Res94658', )(Max81243)
Up_47615 = keras.layers.UpSampling3D(size=(1, 2, 2), name = 'Up_47615', )(in0Up_47615)
Con40360 = keras.layers.Conv3D(3, (1, 1, 2),strides=(1, 1, 1), padding='same', dilation_rate=(1, 1, 1), name = 'Con40360', )(in0Con40360)
Zer87455 = keras.layers.ZeroPadding3D(padding=((0, 0), (1, 0), (2, 0)), name = 'Zer87455', )(Con40360)
Con88683 = keras.layers.Concatenate(axis=4, name = 'Con88683', )([Zer87455,in0Con88683])
Sub35897 = keras.layers.Subtract(name = 'Sub35897', )([Up_47615,Con88683])
Res22022 = keras.layers.Reshape((1, 2, 16), name = 'Res22022', )(Sub35897)
Res83427 = keras.layers.Reshape((1, 32), name = 'Res83427', )(Res22022)
Loc78275 = keras.layers.LocallyConnected1D(2, (1),strides=(1), name = 'Loc78275', )(Res83427)
Con94085 = keras.layers.Concatenate(axis=2, name = 'Con94085', )([Loc78275,in0Con94085])
Min66390 = keras.layers.Minimum(name = 'Min66390', )([Res94658,Con94085])
model = tf.keras.models.Model(inputs=[in0Ave64444,in1Ave64444,in0Lea67086,in0Cro78657,in0Con23373,in0LST54624,in0Con84647,in0Up_47615,in0Con40360,in0Con88683,in0Con94085], outputs=Min66390)
w = model.get_layer('LST54624').get_weights() 
w[0] = np.array([[3, 1, 2, 1], [9, 10, 7, 5], [8, 1, 1, 6]])
w[1] = np.array([[10, 9, 10, 1]])
w[2] = np.array([9, 9, 7, 1])
model.get_layer('LST54624').set_weights(w) 
w = model.get_layer('Con76090').get_weights() 
w[0] = np.array([[[[0.1112, 0.1396, 0.7931]]]])
w[1] = np.array([0, 0, 0])
model.get_layer('Con76090').set_weights(w) 
w = model.get_layer('Con40360').get_weights() 
w[0] = np.array([[[[[0.5801, 0.3734, 0.4962], [0.4908, 0.8872, 0.1173]], [[0.9236, 0.0244, 0.4857], [0.8058, 0.8282, 0.6657]]]]])
w[1] = np.array([0, 0, 0])
model.get_layer('Con40360').set_weights(w) 
w = model.get_layer('Loc78275').get_weights() 
w[0] = np.array([[[0.7169, 0.4584], [0.4916, 0.4038], [0.0598, 0.1999], [0.9234, 0.6825], [0.5667, 0.3582], [0.2273, 0.6403], [0.6114, 0.3734], [0.6424, 0.556], [0.6992, 0.8238], [0.3582, 0.9698], [0.4193, 0.7826], [0.9944, 0.6793], [0.9796, 0.7543], [0.1179, 0.8864], [0.6771, 0.7419], [0.1073, 0.8342], [0.7685, 0.0784], [0.3006, 0.5], [0.5951, 0.2816], [0.772, 0.1715], [0.4905, 0.333], [0.2683, 0.0209], [0.9538, 0.4682], [0.8092, 0.114], [0.8055, 0.7741], [0.2028, 0.6446], [0.5596, 0.6339], [0.2627, 0.5671], [0.0451, 0.3346], [0.8258, 0.2151], [0.3877, 0.9559], [0.7639, 0.9422]]])
w[1] = np.array([[0, 0]])
model.get_layer('Loc78275').set_weights(w) 
in0Ave64444 = tf.constant([[[[[0.4034, 0.4144]], [[0.8812, 0.9582]]]]])
in1Ave64444 = tf.constant([[[[[0.6869, 0.4725]], [[0.9089, 0.3129]]]]])
in0Lea67086 = tf.constant([[[[0.3129, 0.9143], [0.1514, 0.8667]]]])
in0Cro78657 = tf.constant([[[[[1.0344]], [[1.9391]], [[1.9127]], [[1.3911]]]]])
in0Con23373 = tf.constant([[[[[0.8751], [0.0202]], [[0.9846], [0.8286]]]]])
in0LST54624 = tf.constant([[[10, 5, 1], [8, 2, 2]]])
in0Con84647 = tf.constant([[[[0.8821], [0.3507]]]])
in0Up_47615 = tf.constant([[[[[1.5349, 1.5189, 1.5883, 1.1351], [1.8513, 1.558, 1.9962, 1.4116]]]]])
in0Con40360 = tf.constant([[[[[0.3004, 0.0538], [0.4415, 0.5852]]]]])
in0Con88683 = tf.constant([[[[[0.296], [0.0675], [0.0942], [0.2093]], [[0.687], [0.18], [0.897], [0.7554]]]]])
in0Con94085 = tf.constant([[[0.9185, 0.3928, 0.2945, 0.112, 0.8392, 0.5831]]])
print (np.array2string(model.predict([in0Ave64444,in1Ave64444,in0Lea67086,in0Cro78657,in0Con23373,in0LST54624,in0Con84647,in0Up_47615,in0Con40360,in0Con88683,in0Con94085],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Min66390.png')

LAve64444 = average_layer([[[[[[0.4034, 0.4144]], [[0.8812, 0.9582]]]]], [[[[[0.6869, 0.4725]], [[0.9089, 0.3129]]]]]], Ave64444), 
LZer5947 = zero_padding3D_layer(Ave64444, 0, 0, 0, 0, 1, 0, Zer5947), 
LLea67086 = leaky_relu_layer([[[[0.3129, 0.9143], [0.1514, 0.8667]]]], 3.382030042020295, Lea67086), 
LRes70661 = reshape_layer(Lea67086, [1, 2, 2, 1], Res70661), 
LCro78657 = cropping3D_layer([[[[[1.0344]], [[1.9391]], [[1.9127]], [[1.3911]]]]], 0, 0, 1, 2, 0, 0, Cro78657), 
LZer67831 = zero_padding3D_layer(Cro78657, 0, 0, 1, 0, 1, 0, Zer67831), 
LMin78361 = minimum_layer([Res70661,Zer67831], Min78361), 
LCon23373 = concatenate_layer([Min78361,[[[[[0.8751], [0.0202]], [[0.9846], [0.8286]]]]]], 4, Con23373), 
LMul91513 = multiply_layer([Zer5947,Con23373], Mul91513), 
LRes6014 = reshape_layer(Mul91513, [1, 2, 4], Res6014), 
LLST54624 = lstm_layer([[[10, 5, 1], [8, 2, 2]]],[[3, 1, 2, 1], [9, 10, 7, 5], [8, 1, 1, 6]],[[10, 9, 10, 1]],[9, 9, 7, 1], LST54624), 
LRes10879 = reshape_layer(LST54624, [1, 1], Res10879), 
LRes59794 = reshape_layer(Res10879, [1, 1, 1], Res59794), 
LCon76090 = conv2D_layer(Res59794, 1, 1,[[[[0.1112, 0.1396, 0.7931]]]],[0, 0, 0], 1, 1, true, 1, 1, Con76090), 
LUp_82479 = up_sampling2D_layer(Con76090, 1, 2, Up_82479), 
LCon84647 = concatenate_layer([Up_82479,[[[[0.8821], [0.3507]]]]], 3, Con84647), 
LMax81243 = maximum_layer([Res6014,Con84647], Max81243), 
LRes94658 = reshape_layer(Max81243, [1, 8], Res94658), 
LUp_47615 = up_sampling3D_layer([[[[[1.5349, 1.5189, 1.5883, 1.1351], [1.8513, 1.558, 1.9962, 1.4116]]]]], 1, 2, 2, Up_47615), 
LCon40360 = conv3D_layer([[[[[0.3004, 0.0538], [0.4415, 0.5852]]]]], 1, 1, 2,[[[[[0.5801, 0.3734, 0.4962], [0.4908, 0.8872, 0.1173]], [[0.9236, 0.0244, 0.4857], [0.8058, 0.8282, 0.6657]]]]],[0, 0, 0], 1, 1, 1, true, 1, 1, 1, Con40360), 
LZer87455 = zero_padding3D_layer(Con40360, 0, 0, 1, 0, 2, 0, Zer87455), 
LCon88683 = concatenate_layer([Zer87455,[[[[[0.296], [0.0675], [0.0942], [0.2093]], [[0.687], [0.18], [0.897], [0.7554]]]]]], 4, Con88683), 
LSub35897 = subtract_layer(Up_47615,Con88683, Sub35897), 
LRes22022 = reshape_layer(Sub35897, [1, 2, 16], Res22022), 
LRes83427 = reshape_layer(Res22022, [1, 32], Res83427), 
LLoc78275 = locally_connected1D_layer(Res83427, 1,[[[0.7169, 0.4584], [0.4916, 0.4038], [0.0598, 0.1999], [0.9234, 0.6825], [0.5667, 0.3582], [0.2273, 0.6403], [0.6114, 0.3734], [0.6424, 0.556], [0.6992, 0.8238], [0.3582, 0.9698], [0.4193, 0.7826], [0.9944, 0.6793], [0.9796, 0.7543], [0.1179, 0.8864], [0.6771, 0.7419], [0.1073, 0.8342], [0.7685, 0.0784], [0.3006, 0.5], [0.5951, 0.2816], [0.772, 0.1715], [0.4905, 0.333], [0.2683, 0.0209], [0.9538, 0.4682], [0.8092, 0.114], [0.8055, 0.7741], [0.2028, 0.6446], [0.5596, 0.6339], [0.2627, 0.5671], [0.0451, 0.3346], [0.8258, 0.2151], [0.3877, 0.9559], [0.7639, 0.9422]]],[[0, 0]], 1, Loc78275), 
LCon94085 = concatenate_layer([Loc78275,[[[0.9185, 0.3928, 0.2945, 0.112, 0.8392, 0.5831]]]], 2, Con94085), 
LMin66390 = minimum_layer([Res94658,Con94085], Min66390), 
exec_layers([LAve64444,LZer5947,LLea67086,LRes70661,LCro78657,LZer67831,LMin78361,LCon23373,LMul91513,LRes6014,LLST54624,LRes10879,LRes59794,LCon76090,LUp_82479,LCon84647,LMax81243,LRes94658,LUp_47615,LCon40360,LZer87455,LCon88683,LSub35897,LRes22022,LRes83427,LLoc78275,LCon94085,LMin66390],["Ave64444","Zer5947","Lea67086","Res70661","Cro78657","Zer67831","Min78361","Con23373","Mul91513","Res6014","LST54624","Res10879","Res59794","Con76090","Up_82479","Con84647","Max81243","Res94658","Up_47615","Con40360","Zer87455","Con88683","Sub35897","Res22022","Res83427","Loc78275","Con94085","Min66390"],Min66390,"Min66390")

Actual (Unparsed): [[[0.1071999, 0.1345783, 0.7645703, 0.3928000, 0.1071999, 0.1120000, 0.7757398, 0.5266167]]]

Expected (Unparsed): [[[0.10719986690442912,0.13457825017858188,0.7645702737581181,0.3928,0.10719986690442912,0.112,0.775739835,0.5266167300000001]]]

Actual:   [[[0.1072, 0.1346, 0.7646, 0.3928, 0.1072, 0.112, 0.7758, 0.5267]]]

Expected: [[[0.1072, 0.1346, 0.7646, 0.3928, 0.1072, 0.112, 0.7758, 0.5267]]]