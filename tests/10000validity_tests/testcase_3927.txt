import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Con97271 = tf.keras.layers.Input(shape=([1, 1, 2, 1]))

Con97271 = keras.layers.Conv3D(4, (1, 1, 2),strides=(1, 1, 1), padding='valid', dilation_rate=(1, 1, 1), name = 'Con97271', )(in0Con97271)
Up_35196 = keras.layers.UpSampling3D(size=(1, 1, 2), name = 'Up_35196', )(Con97271)
Lea78222 = keras.layers.LeakyReLU(alpha=0.21166966526502465, name = 'Lea78222', )(Up_35196)
model = tf.keras.models.Model(inputs=[in0Con97271], outputs=Lea78222)
w = model.get_layer('Con97271').get_weights() 
w[0] = np.array([[[[[0.3688, 0.8327, 0.0439, 0.0816]], [[0.9212, 0.6877, 0.9378, 0.89]]]]])
w[1] = np.array([0, 0, 0, 0])
model.get_layer('Con97271').set_weights(w) 
in0Con97271 = tf.constant([[[[[0.7952], [0.5439]]]]])
print (np.array2string(model.predict([in0Con97271],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Lea78222.png')

LCon97271 = conv3D_layer([[[[[0.7952], [0.5439]]]]], 1, 1, 2,[[[[[0.3688, 0.8327, 0.0439, 0.0816]], [[0.9212, 0.6877, 0.9378, 0.89]]]]],[0, 0, 0, 0], 1, 1, 1, false, 1, 1, 1, Con97271), 
LUp_35196 = up_sampling3D_layer(Con97271, 1, 1, 2, Up_35196), 
LLea78222 = leaky_relu_layer(Up_35196, 0.21166966526502465, Lea78222), 
exec_layers([LCon97271,LUp_35196,LLea78222],["Con97271","Up_35196","Lea78222"],Lea78222,"Lea78222")

Actual (Unparsed): [[[[[0.7943104, 1.0362031, 0.5449787, 0.5489593], [0.7943104, 1.0362031, 0.5449787, 0.5489593]]]]]

Expected (Unparsed): [[[[[0.7943104400000001,1.03620307,0.5449787,0.54895932],[0.7943104400000001,1.03620307,0.5449787,0.54895932]]]]]

Actual:   [[[[[0.7944, 1.0363, 0.545, 0.549], [0.7944, 1.0363, 0.545, 0.549]]]]]

Expected: [[[[[0.7944, 1.0363, 0.545, 0.549], [0.7944, 1.0363, 0.545, 0.549]]]]]