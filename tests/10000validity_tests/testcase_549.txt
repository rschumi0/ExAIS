import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Ave92473 = tf.keras.layers.Input(shape=([2, 2, 1]))
in1Ave92473 = tf.keras.layers.Input(shape=([2, 2, 1]))
in0Ave74550 = tf.keras.layers.Input(shape=([2, 1, 1, 1]))
in1Ave74550 = tf.keras.layers.Input(shape=([2, 1, 1, 1]))
in0Con86628 = tf.keras.layers.Input(shape=([2, 2, 1, 3]))
in0Min42375 = tf.keras.layers.Input(shape=([2, 1]))
in1Min42375 = tf.keras.layers.Input(shape=([2, 1]))
in0Con99874 = tf.keras.layers.Input(shape=([191]))

Ave92473 = keras.layers.Average(name = 'Ave92473', )([in0Ave92473,in1Ave92473])
Res59049 = keras.layers.Reshape((2, 2, 1, 1), name = 'Res59049', )(Ave92473)
Con53027 = keras.layers.Conv3DTranspose(4, (2, 2, 1),strides=(1, 1, 1), padding='same', name = 'Con53027', )(Res59049)
Ave74550 = keras.layers.Average(name = 'Ave74550', )([in0Ave74550,in1Ave74550])
Zer34605 = keras.layers.ZeroPadding3D(padding=((0, 0), (1, 0), (0, 0)), name = 'Zer34605', )(Ave74550)
Con86628 = keras.layers.Concatenate(axis=4, name = 'Con86628', )([Zer34605,in0Con86628])
Max18755 = keras.layers.Maximum(name = 'Max18755', )([Con53027,Con86628])
Zer66725 = keras.layers.ZeroPadding3D(padding=((1, 1), (1, 1), (1, 1)), name = 'Zer66725', )(Max18755)
Res81517 = keras.layers.Reshape((4, 4, 12), name = 'Res81517', )(Zer66725)
Res77896 = keras.layers.Reshape((4, 48), name = 'Res77896', )(Res81517)
Fla62582 = keras.layers.Flatten(name = 'Fla62582', )(Res77896)
Min42375 = keras.layers.Minimum(name = 'Min42375', )([in0Min42375,in1Min42375])
Res55111 = keras.layers.Reshape((2, 1, 1), name = 'Res55111', )(Min42375)
Res55842 = keras.layers.Reshape((2, 1, 1, 1), name = 'Res55842', )(Res55111)
Glo72276 = keras.layers.GlobalAveragePooling3D(name = 'Glo72276', )(Res55842)
Con99874 = keras.layers.Concatenate(axis=1, name = 'Con99874', )([Glo72276,in0Con99874])
Add86429 = keras.layers.Add(name = 'Add86429', )([Fla62582,Con99874])
model = tf.keras.models.Model(inputs=[in0Ave92473,in1Ave92473,in0Ave74550,in1Ave74550,in0Con86628,in0Min42375,in1Min42375,in0Con99874], outputs=Add86429)
w = model.get_layer('Con53027').get_weights() 
w[0] = np.array([[[[[0.3789], [0.4755], [0.267], [0.8682]]], [[[0.3685], [0.5404], [0.4552], [0.0042]]]], [[[[0.8904], [0.3702], [0.7021], [0.8503]]], [[[0.8439], [0.7195], [0.1622], [0.837]]]]])
w[1] = np.array([0, 0, 0, 0])
model.get_layer('Con53027').set_weights(w) 
in0Ave92473 = tf.constant([[[[0.3899], [0.5384]], [[0.8869], [0.534]]]])
in1Ave92473 = tf.constant([[[[0.1838], [0.0886]], [[0.5277], [0.3385]]]])
in0Ave74550 = tf.constant([[[[[0.3318]]], [[[0.7239]]]]])
in1Ave74550 = tf.constant([[[[[0.8338]]], [[[0.6096]]]]])
in0Con86628 = tf.constant([[[[[0.5262, 0.5606, 0.0716]], [[0.8692, 0.5548, 0.668]]], [[[0.0243, 0.0482, 0.5692]], [[0.9294, 0.9139, 0.0601]]]]])
in0Min42375 = tf.constant([[[0.0623], [0.5985]]])
in1Min42375 = tf.constant([[[0.7715], [0.8307]]])
in0Con99874 = tf.constant([[0.4804, 0.2438, 0.1884, 0.1448, 0.2772, 0.8236, 0.2393, 0.4429, 0.3888, 0.5288, 0.0867, 0.5056, 0.8923, 0.9359, 0.5439, 0.9911, 0.8895, 0.9705, 0.6401, 0.7076, 0.0454, 0.0599, 0.9314, 0.8446, 0.5832, 0.0881, 0.4931, 0.1672, 0.2812, 0.7746, 0.0698, 0.9185, 0.1698, 0.7008, 0.2171, 0.106, 0.4362, 0.7097, 0.781, 0.1761, 0.5108, 0.8183, 0.7305, 0.8256, 0.4321, 0.0967, 0.1836, 0.8394, 0.3626, 0.1943, 0.4496, 0.3987, 0.5653, 0.3208, 0.0456, 0.2608, 0.2411, 0.5287, 0.9424, 0.5765, 0.3719, 0.0834, 0.7428, 0.88, 0.1218, 0.558, 0.1025, 0.9653, 0.4029, 0.0426, 0.4669, 0.9441, 0.9344, 0.5223, 0.1151, 0.7707, 0.4895, 0.041, 0.5784, 0.9145, 0.0579, 0.7465, 0.7323, 0.6616, 0.3326, 0.2875, 0.2472, 0.7378, 0.2737, 0.3245, 0.629, 0.5547, 0.496, 0.1035, 0.7783, 0.4066, 0.883, 0.1446, 0.8578, 0.3693, 0.1377, 0.0994, 0.2638, 0.4842, 0.9471, 0.7442, 0.6732, 0.0547, 0.0601, 0.8922, 0.4583, 0.5214, 0.8555, 0.732, 0.244, 0.4399, 0.9116, 0.7296, 0.0215, 0.5394, 0.6812, 0.7667, 0.0238, 0.7061, 0.6206, 0.6322, 0.5213, 0.0054, 0.0272, 0.3293, 0.7992, 0.5342, 0.3959, 0.9188, 0.8442, 0.9765, 0.3253, 0.7786, 0.6848, 0.2265, 0.8732, 0.2261, 0.9053, 0.3372, 0.7897, 0.4268, 0.5853, 0.3548, 0.2422, 0.3876, 0.804, 0.3079, 0.4863, 0.6249, 0.8929, 0.7342, 0.4338, 0.7847, 0.8192, 0.6473, 0.2224, 0.095, 0.4415, 0.7746, 0.7016, 0.0325, 0.8887, 0.2279, 0.2144, 0.9983, 0.9851, 0.5104, 0.1779, 0.1146, 0.4673, 0.9073, 0.7413, 0.4773, 0.7215, 0.8587, 0.2384, 0.3298, 0.9079, 0.8738, 0.2395, 0.6599, 0.6301, 0.907, 0.755, 0.6632, 0.7614]])
print (np.array2string(model.predict([in0Ave92473,in1Ave92473,in0Ave74550,in1Ave74550,in0Con86628,in0Min42375,in1Min42375,in0Con99874],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Add86429.png')

LAve92473 = average_layer([[[[[0.3899], [0.5384]], [[0.8869], [0.534]]]], [[[[0.1838], [0.0886]], [[0.5277], [0.3385]]]]], Ave92473), 
LRes59049 = reshape_layer(Ave92473, [2, 2, 1, 1], Res59049), 
LCon53027 = conv3D_transpose_layer(Res59049, 2, 2, 1,[[[[[0.3789], [0.4755], [0.267], [0.8682]]], [[[0.3685], [0.5404], [0.4552], [0.0042]]]], [[[[0.8904], [0.3702], [0.7021], [0.8503]]], [[[0.8439], [0.7195], [0.1622], [0.837]]]]],[0, 0, 0, 0], 1, 1, 1, true, Con53027), 
LAve74550 = average_layer([[[[[[0.3318]]], [[[0.7239]]]]], [[[[[0.8338]]], [[[0.6096]]]]]], Ave74550), 
LZer34605 = zero_padding3D_layer(Ave74550, 0, 0, 1, 0, 0, 0, Zer34605), 
LCon86628 = concatenate_layer([Zer34605,[[[[[0.5262, 0.5606, 0.0716]], [[0.8692, 0.5548, 0.668]]], [[[0.0243, 0.0482, 0.5692]], [[0.9294, 0.9139, 0.0601]]]]]], 4, Con86628), 
LMax18755 = maximum_layer([Con53027,Con86628], Max18755), 
LZer66725 = zero_padding3D_layer(Max18755, 1, 1, 1, 1, 1, 1, Zer66725), 
LRes81517 = reshape_layer(Zer66725, [4, 4, 12], Res81517), 
LRes77896 = reshape_layer(Res81517, [4, 48], Res77896), 
LFla62582 = flatten_layer(Res77896, Fla62582), 
LMin42375 = minimum_layer([[[[0.0623], [0.5985]]], [[[0.7715], [0.8307]]]], Min42375), 
LRes55111 = reshape_layer(Min42375, [2, 1, 1], Res55111), 
LRes55842 = reshape_layer(Res55111, [2, 1, 1, 1], Res55842), 
LGlo72276 = global_average_pooling3D_layer(Res55842, Glo72276), 
LCon99874 = concatenate_layer([Glo72276,[[0.4804, 0.2438, 0.1884, 0.1448, 0.2772, 0.8236, 0.2393, 0.4429, 0.3888, 0.5288, 0.0867, 0.5056, 0.8923, 0.9359, 0.5439, 0.9911, 0.8895, 0.9705, 0.6401, 0.7076, 0.0454, 0.0599, 0.9314, 0.8446, 0.5832, 0.0881, 0.4931, 0.1672, 0.2812, 0.7746, 0.0698, 0.9185, 0.1698, 0.7008, 0.2171, 0.106, 0.4362, 0.7097, 0.781, 0.1761, 0.5108, 0.8183, 0.7305, 0.8256, 0.4321, 0.0967, 0.1836, 0.8394, 0.3626, 0.1943, 0.4496, 0.3987, 0.5653, 0.3208, 0.0456, 0.2608, 0.2411, 0.5287, 0.9424, 0.5765, 0.3719, 0.0834, 0.7428, 0.88, 0.1218, 0.558, 0.1025, 0.9653, 0.4029, 0.0426, 0.4669, 0.9441, 0.9344, 0.5223, 0.1151, 0.7707, 0.4895, 0.041, 0.5784, 0.9145, 0.0579, 0.7465, 0.7323, 0.6616, 0.3326, 0.2875, 0.2472, 0.7378, 0.2737, 0.3245, 0.629, 0.5547, 0.496, 0.1035, 0.7783, 0.4066, 0.883, 0.1446, 0.8578, 0.3693, 0.1377, 0.0994, 0.2638, 0.4842, 0.9471, 0.7442, 0.6732, 0.0547, 0.0601, 0.8922, 0.4583, 0.5214, 0.8555, 0.732, 0.244, 0.4399, 0.9116, 0.7296, 0.0215, 0.5394, 0.6812, 0.7667, 0.0238, 0.7061, 0.6206, 0.6322, 0.5213, 0.0054, 0.0272, 0.3293, 0.7992, 0.5342, 0.3959, 0.9188, 0.8442, 0.9765, 0.3253, 0.7786, 0.6848, 0.2265, 0.8732, 0.2261, 0.9053, 0.3372, 0.7897, 0.4268, 0.5853, 0.3548, 0.2422, 0.3876, 0.804, 0.3079, 0.4863, 0.6249, 0.8929, 0.7342, 0.4338, 0.7847, 0.8192, 0.6473, 0.2224, 0.095, 0.4415, 0.7746, 0.7016, 0.0325, 0.8887, 0.2279, 0.2144, 0.9983, 0.9851, 0.5104, 0.1779, 0.1146, 0.4673, 0.9073, 0.7413, 0.4773, 0.7215, 0.8587, 0.2384, 0.3298, 0.9079, 0.8738, 0.2395, 0.6599, 0.6301, 0.907, 0.755, 0.6632, 0.7614]]], 1, Con99874), 
LAdd86429 = add_layer([Fla62582,Con99874], Add86429), 
exec_layers([LAve92473,LRes59049,LCon53027,LAve74550,LZer34605,LCon86628,LMax18755,LZer66725,LRes81517,LRes77896,LFla62582,LMin42375,LRes55111,LRes55842,LGlo72276,LCon99874,LAdd86429],["Ave92473","Res59049","Con53027","Ave74550","Zer34605","Con86628","Max18755","Zer66725","Res81517","Res77896","Fla62582","Min42375","Res55111","Res55842","Glo72276","Con99874","Add86429"],Add86429,"Add86429")

Actual (Unparsed): [[0.3304000, 0.4804000, 0.2438000, 0.1884000, 0.1448000, 0.2772000, 0.8236000, 0.2393000, 0.4429000, 0.3888000, 0.5288000, 0.0867000, 0.5056000, 0.8923000, 0.9359000, 0.5439000, 0.9911000, 0.8895000, 0.9705000, 0.6401000, 0.7076000, 0.0454000, 0.0599000, 0.9314000, 0.8446000, 0.5832000, 0.0881000, 0.4931000, 0.1672000, 0.2812000, 0.7746000, 0.0698000, 0.9185000, 0.1698000, 0.7008000, 0.2171000, 0.1060000, 0.4362000, 0.7097000, 0.7810000, 0.1761000, 0.5108000, 0.8183000, 0.7305000, 0.8256000, 0.4321000, 0.0967000, 0.1836000, 0.8394000, 0.3626000, 0.1943000, 0.4496000, 0.3987000, 0.5653000, 0.3208000, 0.0456000, 0.2608000, 0.2411000, 0.5287000, 0.9424000, 0.5765000, 0.3719000, 0.0834000, 0.7428000, 0.9886875, 0.6480000, 1.1186000, 0.3515432, 0.9653000, 0.4029000, 0.0426000, 0.4669000, 0.9441000, 0.9344000, 0.5223000, 0.1151000, 1.3535000, 1.3587000, 0.5958000, 1.2464000, 0.9145000, 0.0579000, 0.7465000, 0.7323000, 0.6616000, 0.3326000, 0.2875000, 0.2472000, 0.7378000, 0.2737000, 0.3245000, 0.6290000, 0.5547000, 0.4960000, 0.1035000, 0.7783000, 0.4066000, 0.8830000, 0.1446000, 0.8578000, 0.3693000, 0.1377000, 0.0994000, 0.2638000, 0.4842000, 0.9471000, 0.7442000, 0.6732000, 0.0547000, 0.0601000, 0.8922000, 0.4583000, 1.0448072, 1.2980130, 1.1222465, 1.1019864, 0.4399000, 0.9116000, 0.7296000, 0.0215000, 0.5394000, 0.6812000, 0.7667000, 0.0238000, 1.6532483, 1.5500000, 1.5461000, 1.4096854, 0.0054000, 0.0272000, 0.3293000, 0.7992000, 0.5342000, 0.3959000, 0.9188000, 0.8442000, 0.9765000, 0.3253000, 0.7786000, 0.6848000, 0.2265000, 0.8732000, 0.2261000, 0.9053000, 0.3372000, 0.7897000, 0.4268000, 0.5853000, 0.3548000, 0.2422000, 0.3876000, 0.8040000, 0.3079000, 0.4863000, 0.6249000, 0.8929000, 0.7342000, 0.4338000, 0.7847000, 0.8192000, 0.6473000, 0.2224000, 0.0950000, 0.4415000, 0.7746000, 0.7016000, 0.0325000, 0.8887000, 0.2279000, 0.2144000, 0.9983000, 0.9851000, 0.5104000, 0.1779000, 0.1146000, 0.4673000, 0.9073000, 0.7413000, 0.4773000, 0.7215000, 0.8587000, 0.2384000, 0.3298000, 0.9079000, 0.8738000, 0.2395000, 0.6599000, 0.6301000, 0.9070000, 0.7550000, 0.6632000, 0.7614000]]

Expected (Unparsed): [[0.3304,0.4804,0.2438,0.1884,0.1448,0.2772,0.8236,0.2393,0.4429,0.3888,0.5288,0.0867,0.5056,0.8923,0.9359,0.5439,0.9911,0.8895,0.9705,0.6401,0.7076,0.0454,0.0599,0.9314,0.8446,0.5832,0.0881,0.4931,0.1672,0.2812,0.7746,0.0698,0.9185,0.1698,0.7008,0.2171,0.106,0.4362,0.7097,0.781,0.1761,0.5108,0.8183,0.7305,0.8256,0.4321,0.0967,0.1836,0.8394,0.3626,0.1943,0.4496,0.3987,0.5653,0.3208,0.0456,0.2608,0.2411,0.5287,0.9424,0.5765,0.3719,0.0834,0.7428,0.988687465,0.648,1.1186,0.35154316999999996,0.9653,0.4029,0.0426,0.4669,0.9441,0.9344,0.5223,0.1151,1.3535,1.3587,0.5958,1.2464,0.9145,0.0579,0.7465,0.7323,0.6616,0.3326,0.2875,0.2472,0.7378,0.2737,0.3245,0.629,0.5547,0.496,0.1035,0.7783,0.4066,0.883,0.1446,0.8578,0.3693,0.1377,0.0994,0.2638,0.4842,0.9471,0.7442,0.6732,0.0547,0.0601,0.8922,0.4583,1.04480721,1.29801302,1.122246485,1.1019864149999998,0.4399,0.9116,0.7296,0.0215,0.5394,0.6812,0.7667,0.0238,1.65324829,1.55,1.5461,1.4096854099999998,0.0054,0.0272,0.3293,0.7992,0.5342,0.3959,0.9188,0.8442,0.9765,0.3253,0.7786,0.6848,0.2265,0.8732,0.2261,0.9053,0.3372,0.7897,0.4268,0.5853,0.3548,0.2422,0.3876,0.804,0.3079,0.4863,0.6249,0.8929,0.7342,0.4338,0.7847,0.8192,0.6473,0.2224,0.095,0.4415,0.7746,0.7016,0.0325,0.8887,0.2279,0.2144,0.9983,0.9851,0.5104,0.1779,0.1146,0.4673,0.9073,0.7413,0.4773,0.7215,0.8587,0.2384,0.3298,0.9079,0.8738,0.2395,0.6599,0.6301,0.907,0.755,0.6632,0.7614]]

Actual:   [[0.3304, 0.4804, 0.2438, 0.1884, 0.1448, 0.2772, 0.8236, 0.2393, 0.4429, 0.3888, 0.5288, 0.0867, 0.5056, 0.8923, 0.9359, 0.5439, 0.9911, 0.8895, 0.9705, 0.6401, 0.7076, 0.0454, 0.0599, 0.9314, 0.8446, 0.5832, 0.0881, 0.4931, 0.1672, 0.2812, 0.7746, 0.0698, 0.9185, 0.1698, 0.7008, 0.2171, 0.106, 0.4362, 0.7097, 0.781, 0.1761, 0.5108, 0.8183, 0.7305, 0.8256, 0.4321, 0.0967, 0.1836, 0.8394, 0.3626, 0.1943, 0.4496, 0.3987, 0.5653, 0.3208, 0.0456, 0.2608, 0.2411, 0.5287, 0.9424, 0.5765, 0.3719, 0.0834, 0.7428, 0.9887, 0.648, 1.1186, 0.3516, 0.9653, 0.4029, 0.0426, 0.4669, 0.9441, 0.9344, 0.5223, 0.1151, 1.3535, 1.3587, 0.5958, 1.2464, 0.9145, 0.0579, 0.7465, 0.7323, 0.6616, 0.3326, 0.2875, 0.2472, 0.7378, 0.2737, 0.3245, 0.629, 0.5547, 0.496, 0.1035, 0.7783, 0.4066, 0.883, 0.1446, 0.8578, 0.3693, 0.1377, 0.0994, 0.2638, 0.4842, 0.9471, 0.7442, 0.6732, 0.0547, 0.0601, 0.8922, 0.4583, 1.0449, 1.2981, 1.1223, 1.102, 0.4399, 0.9116, 0.7296, 0.0215, 0.5394, 0.6812, 0.7667, 0.0238, 1.6533, 1.55, 1.5461, 1.4097, 0.0054, 0.0272, 0.3293, 0.7992, 0.5342, 0.3959, 0.9188, 0.8442, 0.9765, 0.3253, 0.7786, 0.6848, 0.2265, 0.8732, 0.2261, 0.9053, 0.3372, 0.7897, 0.4268, 0.5853, 0.3548, 0.2422, 0.3876, 0.804, 0.3079, 0.4863, 0.6249, 0.8929, 0.7342, 0.4338, 0.7847, 0.8192, 0.6473, 0.2224, 0.095, 0.4415, 0.7746, 0.7016, 0.0325, 0.8887, 0.2279, 0.2144, 0.9983, 0.9851, 0.5104, 0.1779, 0.1146, 0.4673, 0.9073, 0.7413, 0.4773, 0.7215, 0.8587, 0.2384, 0.3298, 0.9079, 0.8738, 0.2395, 0.6599, 0.6301, 0.907, 0.755, 0.6632, 0.7614]]

Expected: [[0.3304, 0.4804, 0.2438, 0.1884, 0.1448, 0.2772, 0.8236, 0.2393, 0.4429, 0.3888, 0.5288, 0.0867, 0.5056, 0.8923, 0.9359, 0.5439, 0.9911, 0.8895, 0.9705, 0.6401, 0.7076, 0.0454, 0.0599, 0.9314, 0.8446, 0.5832, 0.0881, 0.4931, 0.1672, 0.2812, 0.7746, 0.0698, 0.9185, 0.1698, 0.7008, 0.2171, 0.106, 0.4362, 0.7097, 0.781, 0.1761, 0.5108, 0.8183, 0.7305, 0.8256, 0.4321, 0.0967, 0.1836, 0.8394, 0.3626, 0.1943, 0.4496, 0.3987, 0.5653, 0.3208, 0.0456, 0.2608, 0.2411, 0.5287, 0.9424, 0.5765, 0.3719, 0.0834, 0.7428, 0.9887, 0.648, 1.1186, 0.3516, 0.9653, 0.4029, 0.0426, 0.4669, 0.9441, 0.9344, 0.5223, 0.1151, 1.3535, 1.3587, 0.5958, 1.2464, 0.9145, 0.0579, 0.7465, 0.7323, 0.6616, 0.3326, 0.2875, 0.2472, 0.7378, 0.2737, 0.3245, 0.629, 0.5547, 0.496, 0.1035, 0.7783, 0.4066, 0.883, 0.1446, 0.8578, 0.3693, 0.1377, 0.0994, 0.2638, 0.4842, 0.9471, 0.7442, 0.6732, 0.0547, 0.0601, 0.8922, 0.4583, 1.0449, 1.2981, 1.1223, 1.102, 0.4399, 0.9116, 0.7296, 0.0215, 0.5394, 0.6812, 0.7667, 0.0238, 1.6533, 1.55, 1.5461, 1.4097, 0.0054, 0.0272, 0.3293, 0.7992, 0.5342, 0.3959, 0.9188, 0.8442, 0.9765, 0.3253, 0.7786, 0.6848, 0.2265, 0.8732, 0.2261, 0.9053, 0.3372, 0.7897, 0.4268, 0.5853, 0.3548, 0.2422, 0.3876, 0.804, 0.3079, 0.4863, 0.6249, 0.8929, 0.7342, 0.4338, 0.7847, 0.8192, 0.6473, 0.2224, 0.095, 0.4415, 0.7746, 0.7016, 0.0325, 0.8887, 0.2279, 0.2144, 0.9983, 0.9851, 0.5104, 0.1779, 0.1146, 0.4673, 0.9073, 0.7413, 0.4773, 0.7215, 0.8587, 0.2384, 0.3298, 0.9079, 0.8738, 0.2395, 0.6599, 0.6301, 0.907, 0.755, 0.6632, 0.7614]]