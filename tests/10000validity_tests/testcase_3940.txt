import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Con46054 = tf.keras.layers.Input(shape=([1, 1, 1, 2]))
in0Add36173 = tf.keras.layers.Input(shape=([2, 2]))
in1Add36173 = tf.keras.layers.Input(shape=([2, 2]))

Con46054 = keras.layers.Conv3D(4, (1, 1, 1),strides=(1, 1, 1), padding='valid', dilation_rate=(1, 1, 1), name = 'Con46054', )(in0Con46054)
Res75136 = keras.layers.Reshape((1, 1, 4), name = 'Res75136', )(Con46054)
Res12339 = keras.layers.Reshape((1, 4), name = 'Res12339', )(Res75136)
Zer24458 = keras.layers.ZeroPadding1D(padding=((1, 0)), name = 'Zer24458', )(Res12339)
Add36173 = keras.layers.Add(name = 'Add36173', )([in0Add36173,in1Add36173])
Dot54486 = keras.layers.Dot(axes=(1, 1), name = 'Dot54486', )([Zer24458,Add36173])
Res45916 = keras.layers.Reshape((4, 2, 1), name = 'Res45916', )(Dot54486)
Res97195 = keras.layers.Reshape((4, 2, 1, 1), name = 'Res97195', )(Res45916)
Zer59513 = keras.layers.ZeroPadding3D(padding=((1, 1), (1, 1), (1, 1)), name = 'Zer59513', )(Res97195)
Con88001 = keras.layers.Conv3DTranspose(2, (6, 2, 2),strides=(1, 1, 1), padding='same', name = 'Con88001', )(Zer59513)
model = tf.keras.models.Model(inputs=[in0Con46054,in0Add36173,in1Add36173], outputs=Con88001)
w = model.get_layer('Con46054').get_weights() 
w[0] = np.array([[[[[0.6829, 0.7752, 0.7826, 0.0576], [0.7885, 0.5919, 0.9836, 0.1508]]]]])
w[1] = np.array([0, 0, 0, 0])
model.get_layer('Con46054').set_weights(w) 
w = model.get_layer('Con88001').get_weights() 
w[0] = np.array([[[[[0.05], [0.5649]], [[0.8701], [0.1013]]], [[[0.4401], [0.3163]], [[0.7968], [0.896]]]], [[[[0.3452], [0.0504]], [[0.1547], [0.1265]]], [[[0.5386], [0.4112]], [[0.3085], [0.3642]]]], [[[[0.7237], [0.9904]], [[0.2943], [0.4517]]], [[[0.4207], [0.0211]], [[0.3985], [0.7538]]]], [[[[0.6699], [0.6526]], [[0.799], [0.9354]]], [[[0.4874], [0.2988]], [[0.8623], [0.7643]]]], [[[[0.1745], [0.9767]], [[0.1789], [0.3065]]], [[[0.6447], [0.121]], [[0.314], [0.4143]]]], [[[[0.9111], [0.0977]], [[0.552], [0.5865]]], [[[0.7515], [0.5235]], [[0.6234], [0.1256]]]]])
w[1] = np.array([0, 0])
model.get_layer('Con88001').set_weights(w) 
in0Con46054 = tf.constant([[[[[0.2789, 0.771]]]]])
in0Add36173 = tf.constant([[[0.095, 0.5229], [0.7204, 0.1791]]])
in1Add36173 = tf.constant([[[0.1396, 0.1129], [0.8368, 0.3029]]])
print (np.array2string(model.predict([in0Con46054,in0Add36173,in1Add36173],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Con88001.png')

LCon46054 = conv3D_layer([[[[[0.2789, 0.771]]]]], 1, 1, 1,[[[[[0.6829, 0.7752, 0.7826, 0.0576], [0.7885, 0.5919, 0.9836, 0.1508]]]]],[0, 0, 0, 0], 1, 1, 1, false, 1, 1, 1, Con46054), 
LRes75136 = reshape_layer(Con46054, [1, 1, 4], Res75136), 
LRes12339 = reshape_layer(Res75136, [1, 4], Res12339), 
LZer24458 = zero_padding1D_layer(Res12339, 1, 0, Zer24458), 
LAdd36173 = add_layer([[[[0.095, 0.5229], [0.7204, 0.1791]]], [[[0.1396, 0.1129], [0.8368, 0.3029]]]], Add36173), 
LDot54486 = dot_layer(Zer24458,Add36173, 1, 1, Dot54486), 
LRes45916 = reshape_layer(Dot54486, [4, 2, 1], Res45916), 
LRes97195 = reshape_layer(Res45916, [4, 2, 1, 1], Res97195), 
LZer59513 = zero_padding3D_layer(Res97195, 1, 1, 1, 1, 1, 1, Zer59513), 
LCon88001 = conv3D_transpose_layer(Zer59513, 6, 2, 2,[[[[[0.05], [0.5649]], [[0.8701], [0.1013]]], [[[0.4401], [0.3163]], [[0.7968], [0.896]]]], [[[[0.3452], [0.0504]], [[0.1547], [0.1265]]], [[[0.5386], [0.4112]], [[0.3085], [0.3642]]]], [[[[0.7237], [0.9904]], [[0.2943], [0.4517]]], [[[0.4207], [0.0211]], [[0.3985], [0.7538]]]], [[[[0.6699], [0.6526]], [[0.799], [0.9354]]], [[[0.4874], [0.2988]], [[0.8623], [0.7643]]]], [[[[0.1745], [0.9767]], [[0.1789], [0.3065]]], [[[0.6447], [0.121]], [[0.314], [0.4143]]]], [[[[0.9111], [0.0977]], [[0.552], [0.5865]]], [[[0.7515], [0.5235]], [[0.6234], [0.1256]]]]],[0, 0], 1, 1, 1, true, Con88001), 
exec_layers([LCon46054,LRes75136,LRes12339,LZer24458,LAdd36173,LDot54486,LRes45916,LRes97195,LZer59513,LCon88001],["Con46054","Res75136","Res12339","Zer24458","Add36173","Dot54486","Res45916","Res97195","Zer59513","Con88001"],Con88001,"Con88001")

Actual (Unparsed): [[[[[0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000]], [[0.0000000, 0.0000000], [0.4815386, 0.6542843], [1.1035946, 0.2633646]], [[0.0000000, 0.0000000], [1.2795903, 1.0450123], [1.5596358, 1.4727020]], [[0.0000000, 0.0000000], [0.3499359, 0.2607764], [0.3770199, 0.4306127]]], [[[0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000]], [[0.0000000, 0.0000000], [1.3373174, 2.1432068], [1.8511552, 0.8481215]], [[0.0000000, 0.0000000], [2.1703617, 1.6013004], [2.6032923, 2.9437516]], [[0.0000000, 0.0000000], [0.5436652, 0.2903124], [0.6284400, 0.8299217]]], [[[0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000]], [[0.0000000, 0.0000000], [2.1260785, 2.0416598], [1.7161528, 1.8492692]], [[0.0000000, 0.0000000], [2.6144431, 1.7160695], [2.6539752, 3.0505978]], [[0.0000000, 0.0000000], [0.6055514, 0.3355659], [0.6570622, 0.7670751]]], [[[0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000]], [[0.0000000, 0.0000000], [2.0902751, 3.4143476], [1.5386669, 2.0737220]], [[0.0000000, 0.0000000], [2.7097766, 1.6370361], [2.4393494, 3.1788448]], [[0.0000000, 0.0000000], [0.6384903, 0.1795872], [0.6076339, 0.7852668]]], [[[0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000]], [[0.0000000, 0.0000000], [2.4834012, 2.3409321], [2.1494048, 2.5658052]], [[0.0000000, 0.0000000], [3.2061244, 1.9609213], [3.1627084, 2.7019245]], [[0.0000000, 0.0000000], [0.7544598, 0.3826820], [0.7730211, 0.5904998]]], [[[0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000]], [[0.0000000, 0.0000000], [1.3576250, 1.7221633], [1.0148315, 1.2731248]], [[0.0000000, 0.0000000], [2.2881718, 1.3269157], [1.6222337, 1.3131749]], [[0.0000000, 0.0000000], [0.5781853, 0.2457218], [0.4049001, 0.2844904]]]]]

Expected (Unparsed): [[[[[0.0,0.0],[0.0,0.0],[0.0,0.0]],[[0.0,0.0],[0.48153860055724634,0.6542843468758631],[1.10359460407091,0.2633646015376628]],[[0.0,0.0],[1.2795903120733487,1.0450123339151551],[1.5596358422175047,1.4727019866435882]],[[0.0,0.0],[0.34993587064508797,0.260776408236092],[0.3770199191852379,0.43061269642532396]]],[[[0.0,0.0],[0.0,0.0],[0.0,0.0]],[[0.0,0.0],[1.3373174159854075,2.143206816286698],[1.8511552008492114,0.8481215103591947]],[[0.0,0.0],[2.1703616835268966,1.6013003776082309],[2.6032922781598344,2.943751566211871]],[[0.0,0.0],[0.543665147102398,0.290312367417558],[0.6284399532031539,0.829921720225668]]],[[[0.0,0.0],[0.0,0.0],[0.0,0.0]],[[0.0,0.0],[2.1260785541275276,2.0416598141975557],[1.7161528248824793,1.849269240127626]],[[0.0,0.0],[2.6144430831004075,1.716069512506779],[2.6539751586942617,3.050597807270862]],[[0.0,0.0],[0.6055513913884959,0.335565943046452],[0.65706223367385,0.76707509189393]]],[[[0.0,0.0],[0.0,0.0],[0.0,0.0]],[[0.0,0.0],[2.0902750643473516,3.414347641502592],[1.5386669437579588,2.073721988641866]],[[0.0,0.0],[2.709776580434311,1.6370360629363734],[2.439349424492383,3.1788448224836223]],[[0.0,0.0],[0.638490250205462,0.179587186392552],[0.6076338509664879,0.785266838127094]]],[[[0.0,0.0],[0.0,0.0],[0.0,0.0]],[[0.0,0.0],[2.483401218426066,2.3409321524780595],[2.1494047632526327,2.565805240960439]],[[0.0,0.0],[3.206124414900304,1.960921311383735],[3.162708429746663,2.7019244868235184]],[[0.0,0.0],[0.75445982327539,0.38268198605560194],[0.773021067777512,0.590499828660648]]],[[[0.0,0.0],[0.0,0.0],[0.0,0.0]],[[0.0,0.0],[1.3576249775098048,1.7221633244434336],[1.0148315131218633,1.273124786715563]],[[0.0,0.0],[2.288171820267237,1.3269157173314186],[1.6222336742247767,1.3131748630786022]],[[0.0,0.0],[0.5781852673631279,0.24572176504624396],[0.40490010445328795,0.28449039158372397]]]]]

Actual:   [[[[[0, 0], [0, 0], [0, 0]], [[0, 0], [0.4816, 0.6543], [1.1036, 0.2634]], [[0, 0], [1.2796, 1.0451], [1.5597, 1.4728]], [[0, 0], [0.35, 0.2608], [0.3771, 0.4307]]], [[[0, 0], [0, 0], [0, 0]], [[0, 0], [1.3374, 2.1433], [1.8512, 0.8482]], [[0, 0], [2.1704, 1.6014], [2.6033, 2.9438]], [[0, 0], [0.5437, 0.2904], [0.6285, 0.83]]], [[[0, 0], [0, 0], [0, 0]], [[0, 0], [2.1261, 2.0417], [1.7162, 1.8493]], [[0, 0], [2.6145, 1.7161], [2.654, 3.0506]], [[0, 0], [0.6056, 0.3356], [0.6571, 0.7671]]], [[[0, 0], [0, 0], [0, 0]], [[0, 0], [2.0903, 3.4144], [1.5387, 2.0738]], [[0, 0], [2.7098, 1.6371], [2.4394, 3.1789]], [[0, 0], [0.6385, 0.1796], [0.6077, 0.7853]]], [[[0, 0], [0, 0], [0, 0]], [[0, 0], [2.4835, 2.341], [2.1495, 2.5659]], [[0, 0], [3.2062, 1.961], [3.1628, 2.702]], [[0, 0], [0.7545, 0.3827], [0.7731, 0.5905]]], [[[0, 0], [0, 0], [0, 0]], [[0, 0], [1.3577, 1.7222], [1.0149, 1.2732]], [[0, 0], [2.2882, 1.327], [1.6223, 1.3132]], [[0, 0], [0.5782, 0.2458], [0.405, 0.2845]]]]]

Expected: [[[[[0, 0], [0, 0], [0, 0]], [[0, 0], [0.4816, 0.6543], [1.1036, 0.2634]], [[0, 0], [1.2796, 1.0451], [1.5597, 1.4728]], [[0, 0], [0.35, 0.2608], [0.3771, 0.4307]]], [[[0, 0], [0, 0], [0, 0]], [[0, 0], [1.3374, 2.1433], [1.8512, 0.8482]], [[0, 0], [2.1704, 1.6014], [2.6033, 2.9438]], [[0, 0], [0.5437, 0.2904], [0.6285, 0.83]]], [[[0, 0], [0, 0], [0, 0]], [[0, 0], [2.1261, 2.0417], [1.7162, 1.8493]], [[0, 0], [2.6145, 1.7161], [2.654, 3.0506]], [[0, 0], [0.6056, 0.3356], [0.6571, 0.7671]]], [[[0, 0], [0, 0], [0, 0]], [[0, 0], [2.0903, 3.4144], [1.5387, 2.0738]], [[0, 0], [2.7098, 1.6371], [2.4394, 3.1789]], [[0, 0], [0.6385, 0.1796], [0.6077, 0.7853]]], [[[0, 0], [0, 0], [0, 0]], [[0, 0], [2.4835, 2.341], [2.1495, 2.5659]], [[0, 0], [3.2062, 1.961], [3.1628, 2.702]], [[0, 0], [0.7545, 0.3827], [0.7731, 0.5905]]], [[[0, 0], [0, 0], [0, 0]], [[0, 0], [1.3577, 1.7222], [1.0149, 1.2732]], [[0, 0], [2.2882, 1.327], [1.6223, 1.3132]], [[0, 0], [0.5782, 0.2458], [0.405, 0.2845]]]]]