import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Add60304 = tf.keras.layers.Input(shape=([2, 1, 1]))
in1Add60304 = tf.keras.layers.Input(shape=([2, 1, 1]))

Add60304 = keras.layers.Add(name = 'Add60304', )([in0Add60304,in1Add60304])
Bat68241 = keras.layers.BatchNormalization(axis=2, epsilon=0.410687753465218,  name = 'Bat68241', )(Add60304)
Den72325 = keras.layers.Dense(4,name = 'Den72325', )(Bat68241)
Res67564 = keras.layers.Reshape((2, 1, 4, 1), name = 'Res67564', )(Den72325)
Con97036 = keras.layers.Conv3DTranspose(2, (2, 1, 4),strides=(4, 1, 1), padding='same', name = 'Con97036', )(Res67564)
model = tf.keras.models.Model(inputs=[in0Add60304,in1Add60304], outputs=Con97036)
w = model.get_layer('Bat68241').get_weights() 
w[0] = np.array([0.5058])
w[1] = np.array([0.6402])
w[2] = np.array([0.3751])
w[3] = np.array([0.9562])
model.get_layer('Bat68241').set_weights(w) 
w = model.get_layer('Den72325').get_weights() 
w[0] = np.array([[0.646, 0.6655, 0.767, 0.8208]])
w[1] = np.array([0.1246, 0.8723, 0.6764, 0.8456])
model.get_layer('Den72325').set_weights(w) 
w = model.get_layer('Con97036').get_weights() 
w[0] = np.array([[[[[0.1364], [0.7996]], [[0.7397], [0.9603]], [[0.9732], [0.0572]], [[0.1372], [0.8185]]]], [[[[0.522], [0.7566]], [[0.3284], [0.4408]], [[0.7245], [0.0131]], [[0.0358], [0.4683]]]]])
w[1] = np.array([0, 0])
model.get_layer('Con97036').set_weights(w) 
in0Add60304 = tf.constant([[[[0.2157]], [[0.5576]]]])
in1Add60304 = tf.constant([[[[0.9839]], [[0.5082]]]])
print (np.array2string(model.predict([in0Add60304,in1Add60304],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Con97036.png')

LAdd60304 = add_layer([[[[[0.2157]], [[0.5576]]]], [[[[0.9839]], [[0.5082]]]]], Add60304), 
LBat68241 = batch_normalization_layer(Add60304, 2, 0.410687753465218, [0.5058], [0.6402], [0.3751], [0.9562], Bat68241), 
LDen72325 = dense_layer(Bat68241, [[0.646, 0.6655, 0.767, 0.8208]],[0.1246, 0.8723, 0.6764, 0.8456], Den72325), 
LRes67564 = reshape_layer(Den72325, [2, 1, 4, 1], Res67564), 
LCon97036 = conv3D_transpose_layer(Res67564, 2, 1, 4,[[[[[0.1364], [0.7996]], [[0.7397], [0.9603]], [[0.9732], [0.0572]], [[0.1372], [0.8185]]]], [[[[0.522], [0.7566]], [[0.3284], [0.4408]], [[0.7245], [0.0131]], [[0.0358], [0.4683]]]]],[0, 0], 4, 1, 1, true, Con97036), 
exec_layers([LAdd60304,LBat68241,LDen72325,LRes67564,LCon97036],["Add60304","Bat68241","Den72325","Res67564","Con97036"],Con97036,"Con97036")

Actual (Unparsed): [[[[[0.7780060, 1.9660593], [2.0805390, 2.6709733], [2.8929048, 3.4311736], [2.8438599, 2.9372276]]], [[[1.0540621, 1.5007363], [1.8133984, 1.7772989], [2.4819215, 2.2741280], [1.6454102, 1.4714905]]], [[[0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000]]], [[[0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000]]], [[[0.7450912, 1.8993472], [2.0095961, 2.5963404], [2.8109622, 3.3177370], [2.7602216, 2.8575311]]], [[[1.0216730, 1.4551068], [1.7504799, 1.7262367], [2.4132914, 2.2005933], [1.5962616, 1.4319253]]], [[[0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000]]], [[[0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000]]]]]

Expected (Unparsed): [[[[[0.7780059931296741,1.9660593005457323],[2.0805390023833614,2.6709733418641797],[2.8929047924293747,3.4311736324830253],[2.843859879997998,2.937227567774982]]],[[[1.054062050807139,1.5007362775314603],[1.8133984261092482,1.7772989090211795],[2.4819214626837587,2.2741279799446596],[1.645410156643067,1.4714904906261732]]],[[[0,0],[0,0],[0,0],[0,0]]],[[[0,0],[0,0],[0,0],[0,0]]],[[[0.7450912137311945,1.8993471757020175],[2.009596111139495,2.5963403939803116],[2.810962156294327,3.3177369452230376],[2.7602215544842146,2.857531138869105]]],[[[1.0216730438594481,1.4551067712614867],[1.7504798973949902,1.7262366851027298],[2.4132913450618,2.200593308946842],[1.5962616263594152,1.4319252894172352]]],[[[0,0],[0,0],[0,0],[0,0]]],[[[0,0],[0,0],[0,0],[0,0]]]]]

Actual:   [[[[[0.7781, 1.9661], [2.0806, 2.671], [2.893, 3.4312], [2.8439, 2.9373]]], [[[1.0541, 1.5008], [1.8134, 1.7773], [2.482, 2.2742], [1.6455, 1.4715]]], [[[0, 0], [0, 0], [0, 0], [0, 0]]], [[[0, 0], [0, 0], [0, 0], [0, 0]]], [[[0.7451, 1.8994], [2.0096, 2.5964], [2.811, 3.3178], [2.7603, 2.8576]]], [[[1.0217, 1.4552], [1.7505, 1.7263], [2.4133, 2.2006], [1.5963, 1.432]]], [[[0, 0], [0, 0], [0, 0], [0, 0]]], [[[0, 0], [0, 0], [0, 0], [0, 0]]]]]

Expected: [[[[[0.7781, 1.9661], [2.0806, 2.671], [2.893, 3.4312], [2.8439, 2.9373]]], [[[1.0541, 1.5008], [1.8134, 1.7773], [2.482, 2.2742], [1.6455, 1.4715]]], [[[0, 0], [0, 0], [0, 0], [0, 0]]], [[[0, 0], [0, 0], [0, 0], [0, 0]]], [[[0.7451, 1.8994], [2.0096, 2.5964], [2.811, 3.3178], [2.7603, 2.8576]]], [[[1.0217, 1.4552], [1.7505, 1.7263], [2.4133, 2.2006], [1.5963, 1.432]]], [[[0, 0], [0, 0], [0, 0], [0, 0]]], [[[0, 0], [0, 0], [0, 0], [0, 0]]]]]