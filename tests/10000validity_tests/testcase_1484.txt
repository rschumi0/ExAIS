import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Ave66060 = tf.keras.layers.Input(shape=([1, 1, 2, 1]))
in1Ave66060 = tf.keras.layers.Input(shape=([1, 1, 2, 1]))

Ave66060 = keras.layers.Average(name = 'Ave66060', )([in0Ave66060,in1Ave66060])
Res18187 = keras.layers.Reshape((1, 1, 2), name = 'Res18187', )(Ave66060)
Res29897 = keras.layers.Reshape((1, 2), name = 'Res29897', )(Res18187)
Sim3559 = keras.layers.SimpleRNN(3,name = 'Sim3559', )(Res29897)
model = tf.keras.models.Model(inputs=[in0Ave66060,in1Ave66060], outputs=Sim3559)
w = model.get_layer('Sim3559').get_weights() 
w[0] = np.array([[10, 8, 6], [10, 3, 6]])
w[1] = np.array([[9, 2, 8], [9, 1, 8], [9, 8, 7]])
w[2] = np.array([2, 4, 7])
model.get_layer('Sim3559').set_weights(w) 
in0Ave66060 = tf.constant([[[[[0.3637], [0.2305]]]]])
in1Ave66060 = tf.constant([[[[[0.74], [0.1802]]]]])
print (np.array2string(model.predict([in0Ave66060,in1Ave66060],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Sim3559.png')

LAve66060 = average_layer([[[[[[0.3637], [0.2305]]]]], [[[[[0.74], [0.1802]]]]]], Ave66060), 
LRes18187 = reshape_layer(Ave66060, [1, 1, 2], Res18187), 
LRes29897 = reshape_layer(Res18187, [1, 2], Res29897), 
LSim3559 = simple_rnn_layer(Res29897,[[10, 8, 6], [10, 3, 6]],[[9, 2, 8], [9, 1, 8], [9, 8, 7]],[2, 4, 7], Sim3559), 
exec_layers([LAve66060,LRes18187,LRes29897,LSim3559],["Ave66060","Res18187","Res29897","Sim3559"],Sim3559,"Sim3559")

Actual (Unparsed): [[1.0000000, 1.0000000, 1.0000000]]

Expected (Unparsed): [[0.9999999902972144,0.9999999713626159,0.9999999998117505]]

Actual:   [[1, 1, 1]]

Expected: [[1, 1, 1]]