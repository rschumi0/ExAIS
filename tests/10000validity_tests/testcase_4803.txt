import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Ave70971 = tf.keras.layers.Input(shape=([1, 2, 1, 1]))
in1Ave70971 = tf.keras.layers.Input(shape=([1, 2, 1, 1]))
in0Con77117 = tf.keras.layers.Input(shape=([4, 4, 1]))
in0Up_19973 = tf.keras.layers.Input(shape=([4, 2, 2]))
in0Con97636 = tf.keras.layers.Input(shape=([46]))
in0Mas9664 = tf.keras.layers.Input(shape=([1, 4]))

Ave70971 = keras.layers.Average(name = 'Ave70971', )([in0Ave70971,in1Ave70971])
Res93376 = keras.layers.Reshape((1, 2, 1), name = 'Res93376', )(Ave70971)
Zer84709 = keras.layers.ZeroPadding2D(padding=((3, 0), (2, 0)), name = 'Zer84709', )(Res93376)
Con77117 = keras.layers.Concatenate(axis=3, name = 'Con77117', )([Zer84709,in0Con77117])
Up_19973 = keras.layers.UpSampling2D(size=(1, 2), name = 'Up_19973', )(in0Up_19973)
Max91284 = keras.layers.Maximum(name = 'Max91284', )([Con77117,Up_19973])
Res71076 = keras.layers.Reshape((4, 8), name = 'Res71076', )(Max91284)
Cro97330 = keras.layers.Cropping1D(cropping=((1, 2)), name = 'Cro97330', )(Res71076)
Fla26425 = keras.layers.Flatten(name = 'Fla26425', )(Cro97330)
Con97636 = keras.layers.Concatenate(axis=1, name = 'Con97636', )([Fla26425,in0Con97636])
Mas9664 = keras.layers.Masking(mask_value=2, name = 'Mas9664', )(in0Mas9664)
Res241 = keras.layers.Reshape((1, 4, 1), name = 'Res241', )(Mas9664)
Res83920 = keras.layers.Reshape((1, 4, 1, 1), name = 'Res83920', )(Res241)
Zer88714 = keras.layers.ZeroPadding3D(padding=((1, 1), (1, 1), (1, 1)), name = 'Zer88714', )(Res83920)
Fla19065 = keras.layers.Flatten(name = 'Fla19065', )(Zer88714)
Min59762 = keras.layers.Minimum(name = 'Min59762', )([Con97636,Fla19065])
model = tf.keras.models.Model(inputs=[in0Ave70971,in1Ave70971,in0Con77117,in0Up_19973,in0Con97636,in0Mas9664], outputs=Min59762)
in0Ave70971 = tf.constant([[[[[0.6092]], [[0.0958]]]]])
in1Ave70971 = tf.constant([[[[[0.4159]], [[0.1461]]]]])
in0Con77117 = tf.constant([[[[0.3352], [0.5169], [0.161], [0.6565]], [[0.8965], [0.7617], [0.0487], [0.4168]], [[0.7691], [0.986], [0.4505], [0.7478]], [[0.9233], [0.4478], [0.9523], [0.9287]]]])
in0Up_19973 = tf.constant([[[[1.2539, 1.8693], [1.9187, 1.5741]], [[1.1525, 1.204], [1.3737, 1.0446]], [[1.579, 1.636], [1.427, 1.1532]], [[1.0947, 1.3539], [1.2079, 1.237]]]])
in0Con97636 = tf.constant([[0.309, 0.1869, 0.2544, 0.4978, 0.8304, 0.6598, 0.0888, 0.0116, 0.4347, 0.9488, 0.6816, 0.0636, 0.853, 0.2198, 0.1489, 0.9891, 0.8945, 0.7887, 0.7397, 0.7391, 0.7188, 0.6646, 0.9269, 0.9565, 0.7491, 0.8353, 0.6232, 0.2084, 0.8603, 0.0982, 0.8187, 0.9973, 0.7777, 0.427, 0.8166, 0.0692, 0.3289, 0.7006, 0.0292, 0.5743, 0.3078, 0.1237, 0.988, 0.8397, 0.2283, 0.8164]])
in0Mas9664 = tf.constant([[[1.9513, 1.2968, 1.4661, 1.9811]]])
print (np.array2string(model.predict([in0Ave70971,in1Ave70971,in0Con77117,in0Up_19973,in0Con97636,in0Mas9664],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Min59762.png')

LAve70971 = average_layer([[[[[[0.6092]], [[0.0958]]]]], [[[[[0.4159]], [[0.1461]]]]]], Ave70971), 
LRes93376 = reshape_layer(Ave70971, [1, 2, 1], Res93376), 
LZer84709 = zero_padding2D_layer(Res93376, 3, 0, 2, 0, Zer84709), 
LCon77117 = concatenate_layer([Zer84709,[[[[0.3352], [0.5169], [0.161], [0.6565]], [[0.8965], [0.7617], [0.0487], [0.4168]], [[0.7691], [0.986], [0.4505], [0.7478]], [[0.9233], [0.4478], [0.9523], [0.9287]]]]], 3, Con77117), 
LUp_19973 = up_sampling2D_layer([[[[1.2539, 1.8693], [1.9187, 1.5741]], [[1.1525, 1.204], [1.3737, 1.0446]], [[1.579, 1.636], [1.427, 1.1532]], [[1.0947, 1.3539], [1.2079, 1.237]]]], 1, 2, Up_19973), 
LMax91284 = maximum_layer([Con77117,Up_19973], Max91284), 
LRes71076 = reshape_layer(Max91284, [4, 8], Res71076), 
LCro97330 = cropping1D_layer(Res71076, 1, 2, Cro97330), 
LFla26425 = flatten_layer(Cro97330, Fla26425), 
LCon97636 = concatenate_layer([Fla26425,[[0.309, 0.1869, 0.2544, 0.4978, 0.8304, 0.6598, 0.0888, 0.0116, 0.4347, 0.9488, 0.6816, 0.0636, 0.853, 0.2198, 0.1489, 0.9891, 0.8945, 0.7887, 0.7397, 0.7391, 0.7188, 0.6646, 0.9269, 0.9565, 0.7491, 0.8353, 0.6232, 0.2084, 0.8603, 0.0982, 0.8187, 0.9973, 0.7777, 0.427, 0.8166, 0.0692, 0.3289, 0.7006, 0.0292, 0.5743, 0.3078, 0.1237, 0.988, 0.8397, 0.2283, 0.8164]]], 1, Con97636), 
LMas9664 = masking_layer([[[1.9513, 1.2968, 1.4661, 1.9811]]], 2, Mas9664), 
LRes241 = reshape_layer(Mas9664, [1, 4, 1], Res241), 
LRes83920 = reshape_layer(Res241, [1, 4, 1, 1], Res83920), 
LZer88714 = zero_padding3D_layer(Res83920, 1, 1, 1, 1, 1, 1, Zer88714), 
LFla19065 = flatten_layer(Zer88714, Fla19065), 
LMin59762 = minimum_layer([Con97636,Fla19065], Min59762), 
exec_layers([LAve70971,LRes93376,LZer84709,LCon77117,LUp_19973,LMax91284,LRes71076,LCro97330,LFla26425,LCon97636,LMas9664,LRes241,LRes83920,LZer88714,LFla19065,LMin59762],["Ave70971","Res93376","Zer84709","Con77117","Up_19973","Max91284","Res71076","Cro97330","Fla26425","Con97636","Mas9664","Res241","Res83920","Zer88714","Fla19065","Min59762"],Min59762,"Min59762")

Actual (Unparsed): [[0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.1489000, 0.0000000, 0.0000000, 0.7887000, 0.0000000, 0.0000000, 0.7188000, 0.0000000, 0.0000000, 0.9565000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000]]

Expected (Unparsed): [[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.1489,0,0,0.7887,0,0,0.7188,0,0,0.9565,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]]

Actual:   [[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.1489, 0, 0, 0.7887, 0, 0, 0.7188, 0, 0, 0.9565, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]]

Expected: [[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.1489, 0, 0, 0.7887, 0, 0, 0.7188, 0, 0, 0.9565, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]]