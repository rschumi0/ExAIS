import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Sub20194 = tf.keras.layers.Input(shape=([3, 3]))
in1Sub20194 = tf.keras.layers.Input(shape=([3, 3]))
in0Sim69629 = tf.keras.layers.Input(shape=([1, 3]))
in0Con23487 = tf.keras.layers.Input(shape=([6]))

Sub20194 = keras.layers.Subtract(name = 'Sub20194', )([in0Sub20194,in1Sub20194])
Fla73366 = keras.layers.Flatten(name = 'Fla73366', )(Sub20194)
Sim69629 = keras.layers.SimpleRNN(3,name = 'Sim69629', )(in0Sim69629)
Sof16521 = keras.layers.Softmax(axis=1, name = 'Sof16521', )(Sim69629)
Con23487 = keras.layers.Concatenate(axis=1, name = 'Con23487', )([Sof16521,in0Con23487])
Max18506 = keras.layers.Maximum(name = 'Max18506', )([Fla73366,Con23487])
model = tf.keras.models.Model(inputs=[in0Sub20194,in1Sub20194,in0Sim69629,in0Con23487], outputs=Max18506)
w = model.get_layer('Sim69629').get_weights() 
w[0] = np.array([[5, 5, 5], [10, 3, 2], [4, 9, 3]])
w[1] = np.array([[7, 7, 10], [8, 5, 6], [10, 1, 6]])
w[2] = np.array([8, 9, 4])
model.get_layer('Sim69629').set_weights(w) 
in0Sub20194 = tf.constant([[[0.3119, 0.5813, 0.0385], [0.1865, 0.3851, 0.6715], [0.8771, 0.7977, 0.525]]])
in1Sub20194 = tf.constant([[[0.144, 0.5339, 0.9167], [0.1657, 0.5814, 0.3983], [0.0885, 0.125, 0.2976]]])
in0Sim69629 = tf.constant([[[10, 8, 10]]])
in0Con23487 = tf.constant([[0.0505, 0.7542, 0.3189, 0.9982, 0.8705, 0.1783]])
print (np.array2string(model.predict([in0Sub20194,in1Sub20194,in0Sim69629,in0Con23487],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Max18506.png')

LSub20194 = subtract_layer([[[0.3119, 0.5813, 0.0385], [0.1865, 0.3851, 0.6715], [0.8771, 0.7977, 0.525]]], [[[0.144, 0.5339, 0.9167], [0.1657, 0.5814, 0.3983], [0.0885, 0.125, 0.2976]]], Sub20194), 
LFla73366 = flatten_layer(Sub20194, Fla73366), 
LSim69629 = simple_rnn_layer([[[10, 8, 10]]],[[5, 5, 5], [10, 3, 2], [4, 9, 3]],[[7, 7, 10], [8, 5, 6], [10, 1, 6]],[8, 9, 4], Sim69629), 
LSof16521 = softmax_layer(Sim69629, 1, Sof16521), 
LCon23487 = concatenate_layer([Sof16521,[[0.0505, 0.7542, 0.3189, 0.9982, 0.8705, 0.1783]]], 1, Con23487), 
LMax18506 = maximum_layer([Fla73366,Con23487], Max18506), 
exec_layers([LSub20194,LFla73366,LSim69629,LSof16521,LCon23487,LMax18506],["Sub20194","Fla73366","Sim69629","Sof16521","Con23487","Max18506"],Max18506,"Max18506")

Actual (Unparsed): [[0.3333333, 0.3333333, 0.3333333, 0.0505000, 0.7542000, 0.3189000, 0.9982000, 0.8705000, 0.2274000]]

Expected (Unparsed): [[0.3333333333333333,0.3333333333333333,0.3333333333333333,0.0505,0.7542,0.3189,0.9982,0.8705,0.22740000000000005]]

Actual:   [[0.3334, 0.3334, 0.3334, 0.0505, 0.7542, 0.3189, 0.9982, 0.8705, 0.2274]]

Expected: [[0.3334, 0.3334, 0.3334, 0.0505, 0.7542, 0.3189, 0.9982, 0.8705, 0.2275]]