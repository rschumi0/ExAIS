import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Max24205 = tf.keras.layers.Input(shape=([2, 2]))
in1Max24205 = tf.keras.layers.Input(shape=([2, 2]))
in0Zer47839 = tf.keras.layers.Input(shape=([2, 3, 4]))
in0Ave33947 = tf.keras.layers.Input(shape=([1, 1, 1, 1]))
in1Ave33947 = tf.keras.layers.Input(shape=([1, 1, 1, 1]))

Max24205 = keras.layers.Maximum(name = 'Max24205', )([in0Max24205,in1Max24205])
Res60990 = keras.layers.Reshape((2, 2, 1), name = 'Res60990', )(Max24205)
Glo24060 = keras.layers.GlobalAveragePooling2D(name = 'Glo24060', )(Res60990)
Res79639 = keras.layers.Reshape((1, 1), name = 'Res79639', )(Glo24060)
Res49990 = keras.layers.Reshape((1, 1, 1), name = 'Res49990', )(Res79639)
Res80125 = keras.layers.Reshape((1, 1, 1, 1), name = 'Res80125', )(Res49990)
Zer97567 = keras.layers.ZeroPadding3D(padding=((3, 0), (4, 0), (3, 0)), name = 'Zer97567', )(Res80125)
Zer47839 = keras.layers.ZeroPadding2D(padding=((1, 1), (1, 1)), name = 'Zer47839', )(in0Zer47839)
Res70728 = keras.layers.Reshape((4, 5, 4, 1), name = 'Res70728', )(Zer47839)
Ave33947 = keras.layers.Average(name = 'Ave33947', )([in0Ave33947,in1Ave33947])
Zer39445 = keras.layers.ZeroPadding3D(padding=((3, 0), (4, 0), (3, 0)), name = 'Zer39445', )(Ave33947)
Min69571 = keras.layers.Minimum(name = 'Min69571', )([Res70728,Zer39445])
Ave63599 = keras.layers.Average(name = 'Ave63599', )([Zer97567,Min69571])
model = tf.keras.models.Model(inputs=[in0Max24205,in1Max24205,in0Zer47839,in0Ave33947,in1Ave33947], outputs=Ave63599)
in0Max24205 = tf.constant([[[0.3673, 0.4006], [0.6856, 0.0915]]])
in1Max24205 = tf.constant([[[0.0634, 0.3761], [0.6148, 0.5389]]])
in0Zer47839 = tf.constant([[[[1.8521, 1.8967, 1.1745, 1.1066], [1.3583, 1.0638, 1.3897, 1.7478], [1.3663, 1.5332, 1.6176, 1.7109]], [[1.0714, 1.5241, 1.8876, 1.0654], [1.6908, 1.1892, 1.3036, 1.8557], [1.6918, 1.3547, 1.1052, 1.8752]]]])
in0Ave33947 = tf.constant([[[[[0.8997]]]]])
in1Ave33947 = tf.constant([[[[[0.2384]]]]])
print (np.array2string(model.predict([in0Max24205,in1Max24205,in0Zer47839,in0Ave33947,in1Ave33947],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Ave63599.png')

LMax24205 = maximum_layer([[[[0.3673, 0.4006], [0.6856, 0.0915]]], [[[0.0634, 0.3761], [0.6148, 0.5389]]]], Max24205), 
LRes60990 = reshape_layer(Max24205, [2, 2, 1], Res60990), 
LGlo24060 = global_average_pooling2D_layer(Res60990, Glo24060), 
LRes79639 = reshape_layer(Glo24060, [1, 1], Res79639), 
LRes49990 = reshape_layer(Res79639, [1, 1, 1], Res49990), 
LRes80125 = reshape_layer(Res49990, [1, 1, 1, 1], Res80125), 
LZer97567 = zero_padding3D_layer(Res80125, 3, 0, 4, 0, 3, 0, Zer97567), 
LZer47839 = zero_padding2D_layer([[[[1.8521, 1.8967, 1.1745, 1.1066], [1.3583, 1.0638, 1.3897, 1.7478], [1.3663, 1.5332, 1.6176, 1.7109]], [[1.0714, 1.5241, 1.8876, 1.0654], [1.6908, 1.1892, 1.3036, 1.8557], [1.6918, 1.3547, 1.1052, 1.8752]]]], 1, 1, 1, 1, Zer47839), 
LRes70728 = reshape_layer(Zer47839, [4, 5, 4, 1], Res70728), 
LAve33947 = average_layer([[[[[[0.8997]]]]], [[[[[0.2384]]]]]], Ave33947), 
LZer39445 = zero_padding3D_layer(Ave33947, 3, 0, 4, 0, 3, 0, Zer39445), 
LMin69571 = minimum_layer([Res70728,Zer39445], Min69571), 
LAve63599 = average_layer([Zer97567,Min69571], Ave63599), 
exec_layers([LMax24205,LRes60990,LGlo24060,LRes79639,LRes49990,LRes80125,LZer97567,LZer47839,LRes70728,LAve33947,LZer39445,LMin69571,LAve63599],["Max24205","Res60990","Glo24060","Res79639","Res49990","Res80125","Zer97567","Zer47839","Res70728","Ave33947","Zer39445","Min69571","Ave63599"],Ave63599,"Ave63599")

Actual (Unparsed): [[[[[0.0000000], [0.0000000], [0.0000000], [0.0000000]], [[0.0000000], [0.0000000], [0.0000000], [0.0000000]], [[0.0000000], [0.0000000], [0.0000000], [0.0000000]], [[0.0000000], [0.0000000], [0.0000000], [0.0000000]], [[0.0000000], [0.0000000], [0.0000000], [0.0000000]]], [[[0.0000000], [0.0000000], [0.0000000], [0.0000000]], [[0.0000000], [0.0000000], [0.0000000], [0.0000000]], [[0.0000000], [0.0000000], [0.0000000], [0.0000000]], [[0.0000000], [0.0000000], [0.0000000], [0.0000000]], [[0.0000000], [0.0000000], [0.0000000], [0.0000000]]], [[[0.0000000], [0.0000000], [0.0000000], [0.0000000]], [[0.0000000], [0.0000000], [0.0000000], [0.0000000]], [[0.0000000], [0.0000000], [0.0000000], [0.0000000]], [[0.0000000], [0.0000000], [0.0000000], [0.0000000]], [[0.0000000], [0.0000000], [0.0000000], [0.0000000]]], [[[0.0000000], [0.0000000], [0.0000000], [0.0000000]], [[0.0000000], [0.0000000], [0.0000000], [0.0000000]], [[0.0000000], [0.0000000], [0.0000000], [0.0000000]], [[0.0000000], [0.0000000], [0.0000000], [0.0000000]], [[0.0000000], [0.0000000], [0.0000000], [0.2490500]]]]]

Expected (Unparsed): [[[[[0],[0],[0],[0]],[[0],[0],[0],[0]],[[0],[0],[0],[0]],[[0],[0],[0],[0]],[[0],[0],[0],[0]]],[[[0],[0],[0],[0]],[[0],[0],[0],[0]],[[0],[0],[0],[0]],[[0],[0],[0],[0]],[[0],[0],[0],[0]]],[[[0],[0],[0],[0]],[[0],[0],[0],[0]],[[0],[0],[0],[0]],[[0],[0],[0],[0]],[[0],[0],[0],[0]]],[[[0],[0],[0],[0]],[[0],[0],[0],[0]],[[0],[0],[0],[0]],[[0],[0],[0],[0]],[[0],[0],[0],[0.24905]]]]]

Actual:   [[[[[0], [0], [0], [0]], [[0], [0], [0], [0]], [[0], [0], [0], [0]], [[0], [0], [0], [0]], [[0], [0], [0], [0]]], [[[0], [0], [0], [0]], [[0], [0], [0], [0]], [[0], [0], [0], [0]], [[0], [0], [0], [0]], [[0], [0], [0], [0]]], [[[0], [0], [0], [0]], [[0], [0], [0], [0]], [[0], [0], [0], [0]], [[0], [0], [0], [0]], [[0], [0], [0], [0]]], [[[0], [0], [0], [0]], [[0], [0], [0], [0]], [[0], [0], [0], [0]], [[0], [0], [0], [0]], [[0], [0], [0], [0.2491]]]]]

Expected: [[[[[0], [0], [0], [0]], [[0], [0], [0], [0]], [[0], [0], [0], [0]], [[0], [0], [0], [0]], [[0], [0], [0], [0]]], [[[0], [0], [0], [0]], [[0], [0], [0], [0]], [[0], [0], [0], [0]], [[0], [0], [0], [0]], [[0], [0], [0], [0]]], [[[0], [0], [0], [0]], [[0], [0], [0], [0]], [[0], [0], [0], [0]], [[0], [0], [0], [0]], [[0], [0], [0], [0]]], [[[0], [0], [0], [0]], [[0], [0], [0], [0]], [[0], [0], [0], [0]], [[0], [0], [0], [0]], [[0], [0], [0], [0.2491]]]]]