import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Lay86229 = tf.keras.layers.Input(shape=([4]))
in0Thr16368 = tf.keras.layers.Input(shape=([2, 1]))

Lay86229 = keras.layers.LayerNormalization(axis=1, epsilon=1.347762088357125, name = 'Lay86229', )(in0Lay86229)
ReL458 = keras.layers.ReLU(max_value=8.845474757851052, negative_slope=6.089795147955543, threshold=3.413586718100267, name = 'ReL458', )(Lay86229)
Res74694 = keras.layers.Reshape((4, 1), name = 'Res74694', )(ReL458)
Res26661 = keras.layers.Reshape((4, 1, 1), name = 'Res26661', )(Res74694)
Zer32738 = keras.layers.ZeroPadding2D(padding=((0, 0), (2, 0)), name = 'Zer32738', )(Res26661)
Thr16368 = keras.layers.ThresholdedReLU(theta=3.022658798948623, name = 'Thr16368', input_shape=(2, 1))(in0Thr16368)
Res93822 = keras.layers.Reshape((2, 1, 1), name = 'Res93822', )(Thr16368)
Up_47549 = keras.layers.UpSampling2D(size=(1, 2), name = 'Up_47549', )(Res93822)
Sof2887 = keras.layers.Softmax(axis=1, name = 'Sof2887', )(Up_47549)
Zer23682 = keras.layers.ZeroPadding2D(padding=((2, 0), (1, 0)), name = 'Zer23682', )(Sof2887)
Mul72089 = keras.layers.Multiply(name = 'Mul72089', )([Zer32738,Zer23682])
model = tf.keras.models.Model(inputs=[in0Lay86229,in0Thr16368], outputs=Mul72089)
in0Lay86229 = tf.constant([[1.9901, 1.5571, 1.3042, 1.9974]])
in0Thr16368 = tf.constant([[[0.8889], [0.6239]]])
print (np.array2string(model.predict([in0Lay86229,in0Thr16368],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Mul72089.png')

LLay86229 = layer_normalization_layer([[1.9901, 1.5571, 1.3042, 1.9974]], 1, 1.347762088357125, Lay86229), 
LReL458 = relu_layer(Lay86229, 8.845474757851052, 6.089795147955543, 3.413586718100267, ReL458), 
LRes74694 = reshape_layer(ReL458, [4, 1], Res74694), 
LRes26661 = reshape_layer(Res74694, [4, 1, 1], Res26661), 
LZer32738 = zero_padding2D_layer(Res26661, 0, 0, 2, 0, Zer32738), 
LThr16368 = thresholded_relu_layer([[[0.8889], [0.6239]]], 3.022658798948623, Thr16368), 
LRes93822 = reshape_layer(Thr16368, [2, 1, 1], Res93822), 
LUp_47549 = up_sampling2D_layer(Res93822, 1, 2, Up_47549), 
LSof2887 = softmax_layer(Up_47549, 1, Sof2887), 
LZer23682 = zero_padding2D_layer(Sof2887, 2, 0, 1, 0, Zer23682), 
LMul72089 = multiply_layer([Zer32738,Zer23682], Mul72089), 
exec_layers([LLay86229,LReL458,LRes74694,LRes26661,LZer32738,LThr16368,LRes93822,LUp_47549,LSof2887,LZer23682,LMul72089],["Lay86229","ReL458","Res74694","Res26661","Zer32738","Thr16368","Res93822","Up_47549","Sof2887","Zer23682","Mul72089"],Mul72089,"Mul72089")

Actual (Unparsed): [[[[0.0000000], [0.0000000], [-0.0000000]], [[0.0000000], [0.0000000], [-0.0000000]], [[0.0000000], [0.0000000], [-11.4310768]], [[0.0000000], [0.0000000], [-9.6691002]]]]

Expected (Unparsed): [[[[0],[0],[-0.0]],[[0],[0],[-0.0]],[[0],[0.0],[-11.431076852436076]],[[0],[0.0],[-9.669100181880784]]]]

Actual:   [[[[0], [0], [-0]], [[0], [0], [-0]], [[0], [0], [-11.431]], [[0], [0], [-9.6691]]]]

Expected: [[[[0], [0], [-0]], [[0], [0], [-0]], [[0], [0], [-11.431]], [[0], [0], [-9.6691]]]]