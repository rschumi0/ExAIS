import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Min4056 = tf.keras.layers.Input(shape=([2, 1]))
in1Min4056 = tf.keras.layers.Input(shape=([2, 1]))
in0Con36431 = tf.keras.layers.Input(shape=([2, 1]))
in0Min4989 = tf.keras.layers.Input(shape=([2, 2]))
in1Min4989 = tf.keras.layers.Input(shape=([2, 2]))
in0Min26151 = tf.keras.layers.Input(shape=([1, 2, 1]))
in1Min26151 = tf.keras.layers.Input(shape=([1, 2, 1]))
in0Con47892 = tf.keras.layers.Input(shape=([4, 1]))

Min4056 = keras.layers.Minimum(name = 'Min4056', )([in0Min4056,in1Min4056])
Con36431 = keras.layers.Concatenate(axis=2, name = 'Con36431', )([Min4056,in0Con36431])
Min4989 = keras.layers.Minimum(name = 'Min4989', )([in0Min4989,in1Min4989])
Max98889 = keras.layers.Maximum(name = 'Max98889', )([Con36431,Min4989])
Zer59361 = keras.layers.ZeroPadding1D(padding=((2, 0)), name = 'Zer59361', )(Max98889)
Min26151 = keras.layers.Minimum(name = 'Min26151', )([in0Min26151,in1Min26151])
Res79879 = keras.layers.Reshape((1, 2), name = 'Res79879', )(Min26151)
Fla24564 = keras.layers.Flatten(name = 'Fla24564', )(Res79879)
Res68844 = keras.layers.Reshape((2, 1), name = 'Res68844', )(Fla24564)
Zer68636 = keras.layers.ZeroPadding1D(padding=((1, 1)), name = 'Zer68636', )(Res68844)
Con47892 = keras.layers.Concatenate(axis=2, name = 'Con47892', )([Zer68636,in0Con47892])
Min89603 = keras.layers.Minimum(name = 'Min89603', )([Zer59361,Con47892])
model = tf.keras.models.Model(inputs=[in0Min4056,in1Min4056,in0Con36431,in0Min4989,in1Min4989,in0Min26151,in1Min26151,in0Con47892], outputs=Min89603)
in0Min4056 = tf.constant([[[0.3262], [0.4987]]])
in1Min4056 = tf.constant([[[0.6294], [0.7803]]])
in0Con36431 = tf.constant([[[0.7734], [0.8142]]])
in0Min4989 = tf.constant([[[0.1359, 0.9029], [0.1401, 0.2249]]])
in1Min4989 = tf.constant([[[0.2699, 0.7793], [0.0862, 0.3438]]])
in0Min26151 = tf.constant([[[[0.5235], [0.4298]]]])
in1Min26151 = tf.constant([[[[0.5317], [0.762]]]])
in0Con47892 = tf.constant([[[0.1185], [0.2472], [0.8515], [0.3275]]])
print (np.array2string(model.predict([in0Min4056,in1Min4056,in0Con36431,in0Min4989,in1Min4989,in0Min26151,in1Min26151,in0Con47892],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Min89603.png')

LMin4056 = minimum_layer([[[[0.3262], [0.4987]]], [[[0.6294], [0.7803]]]], Min4056), 
LCon36431 = concatenate_layer([Min4056,[[[0.7734], [0.8142]]]], 2, Con36431), 
LMin4989 = minimum_layer([[[[0.1359, 0.9029], [0.1401, 0.2249]]], [[[0.2699, 0.7793], [0.0862, 0.3438]]]], Min4989), 
LMax98889 = maximum_layer([Con36431,Min4989], Max98889), 
LZer59361 = zero_padding1D_layer(Max98889, 2, 0, Zer59361), 
LMin26151 = minimum_layer([[[[[0.5235], [0.4298]]]], [[[[0.5317], [0.762]]]]], Min26151), 
LRes79879 = reshape_layer(Min26151, [1, 2], Res79879), 
LFla24564 = flatten_layer(Res79879, Fla24564), 
LRes68844 = reshape_layer(Fla24564, [2, 1], Res68844), 
LZer68636 = zero_padding1D_layer(Res68844, 1, 1, Zer68636), 
LCon47892 = concatenate_layer([Zer68636,[[[0.1185], [0.2472], [0.8515], [0.3275]]]], 2, Con47892), 
LMin89603 = minimum_layer([Zer59361,Con47892], Min89603), 
exec_layers([LMin4056,LCon36431,LMin4989,LMax98889,LZer59361,LMin26151,LRes79879,LFla24564,LRes68844,LZer68636,LCon47892,LMin89603],["Min4056","Con36431","Min4989","Max98889","Zer59361","Min26151","Res79879","Fla24564","Res68844","Zer68636","Con47892","Min89603"],Min89603,"Min89603")

Actual (Unparsed): [[[0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.3262000, 0.7793000], [0.0000000, 0.3275000]]]

Expected (Unparsed): [[[0,0],[0,0],[0.3262,0.7793],[0,0.3275]]]

Actual:   [[[0, 0], [0, 0], [0.3262, 0.7793], [0, 0.3275]]]

Expected: [[[0, 0], [0, 0], [0.3262, 0.7793], [0, 0.3275]]]