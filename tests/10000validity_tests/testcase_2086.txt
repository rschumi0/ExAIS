import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Ave60019 = tf.keras.layers.Input(shape=([1, 1, 1, 2]))
in1Ave60019 = tf.keras.layers.Input(shape=([1, 1, 1, 2]))

Ave60019 = keras.layers.Average(name = 'Ave60019', )([in0Ave60019,in1Ave60019])
Res47478 = keras.layers.Reshape((1, 1, 2), name = 'Res47478', )(Ave60019)
Sep14442 = keras.layers.SeparableConv2D(3, (1, 1),strides=(1, 1), padding='same', name = 'Sep14442', )(Res47478)
model = tf.keras.models.Model(inputs=[in0Ave60019,in1Ave60019], outputs=Sep14442)
w = model.get_layer('Sep14442').get_weights() 
w[0] = np.array([[[[0.6587], [0.7044]]]])
w[1] = np.array([[[[0.3643, 0.2036, 0.7301], [0.2392, 0.9014, 0.5673]]]])
w[2] = np.array([0, 0, 0])
model.get_layer('Sep14442').set_weights(w) 
in0Ave60019 = tf.constant([[[[[0.0778, 0.9548]]]]])
in1Ave60019 = tf.constant([[[[[0.8887, 0.6967]]]]])
print (np.array2string(model.predict([in0Ave60019,in1Ave60019],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Sep14442.png')

LAve60019 = average_layer([[[[[[0.0778, 0.9548]]]]], [[[[[0.8887, 0.6967]]]]]], Ave60019), 
LRes47478 = reshape_layer(Ave60019, [1, 1, 2], Res47478), 
LSep14442 = separable_conv2D_layer(Res47478, 1, 1,[[[[[0.6587], [0.7044]]]],[[[[0.3643, 0.2036, 0.7301], [0.2392, 0.9014, 0.5673]]]]],[0, 0, 0], 1, 1, true, Sep14442), 
exec_layers([LAve60019,LRes47478,LSep14442],["Ave60019","Res47478","Sep14442"],Sep14442,"Sep14442")

Actual (Unparsed): [[[[0.2550955, 0.5891161, 0.5623778]]]]

Expected (Unparsed): [[[[0.2550954664925,0.58911608701,0.5623778310175]]]]

Actual:   [[[[0.2551, 0.5892, 0.5624]]]]

Expected: [[[[0.2551, 0.5892, 0.5624]]]]