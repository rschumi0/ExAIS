import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Add30129 = tf.keras.layers.Input(shape=([1, 1]))
in1Add30129 = tf.keras.layers.Input(shape=([1, 1]))
in0Zer78002 = tf.keras.layers.Input(shape=([4, 1]))
in0Con77438 = tf.keras.layers.Input(shape=([8, 3, 3]))
in0Ave64943 = tf.keras.layers.Input(shape=([2, 1, 2, 1]))
in1Ave64943 = tf.keras.layers.Input(shape=([2, 1, 2, 1]))
in0Con61835 = tf.keras.layers.Input(shape=([2, 1, 2]))
in0Glo63474 = tf.keras.layers.Input(shape=([1, 1, 1, 2]))

Add30129 = keras.layers.Add(name = 'Add30129', )([in0Add30129,in1Add30129])
Res45990 = keras.layers.Reshape((1, 1, 1), name = 'Res45990', )(Add30129)
Zer68999 = keras.layers.ZeroPadding2D(padding=((7, 0), (2, 0)), name = 'Zer68999', )(Res45990)
Zer78002 = keras.layers.ZeroPadding1D(padding=((1, 1)), name = 'Zer78002', )(in0Zer78002)
Res63991 = keras.layers.Reshape((6, 1, 1), name = 'Res63991', )(Zer78002)
Zer5268 = keras.layers.ZeroPadding2D(padding=((1, 1), (1, 1)), name = 'Zer5268', )(Res63991)
Sub10677 = keras.layers.Subtract(name = 'Sub10677', )([Zer68999,Zer5268])
Con77438 = keras.layers.Concatenate(axis=3, name = 'Con77438', )([Sub10677,in0Con77438])
Ave64943 = keras.layers.Average(name = 'Ave64943', )([in0Ave64943,in1Ave64943])
Res87924 = keras.layers.Reshape((2, 1, 2), name = 'Res87924', )(Ave64943)
Con61835 = keras.layers.Concatenate(axis=3, name = 'Con61835', )([Res87924,in0Con61835])
Glo63474 = keras.layers.GlobalMaxPool3D(name = 'Glo63474', )(in0Glo63474)
Res70871 = keras.layers.Reshape((2, 1), name = 'Res70871', )(Glo63474)
Res46624 = keras.layers.Reshape((2, 1, 1), name = 'Res46624', )(Res70871)
Res40589 = keras.layers.Reshape((2, 1, 1, 1), name = 'Res40589', )(Res46624)
Con86373 = keras.layers.Conv3DTranspose(4, (1, 1, 1),strides=(1, 7, 1), padding='valid', name = 'Con86373', )(Res40589)
Res95230 = keras.layers.Reshape((2, 7, 4), name = 'Res95230', )(Con86373)
Max33789 = keras.layers.MaxPool2D(pool_size=(2, 6), name = 'Max33789', )(Res95230)
Zer37764 = keras.layers.ZeroPadding2D(padding=((1, 0), (0, 0)), name = 'Zer37764', )(Max33789)
Ave68820 = keras.layers.Average(name = 'Ave68820', )([Con61835,Zer37764])
Zer89104 = keras.layers.ZeroPadding2D(padding=((6, 0), (2, 0)), name = 'Zer89104', )(Ave68820)
Add82079 = keras.layers.Add(name = 'Add82079', )([Con77438,Zer89104])
model = tf.keras.models.Model(inputs=[in0Add30129,in1Add30129,in0Zer78002,in0Con77438,in0Ave64943,in1Ave64943,in0Con61835,in0Glo63474], outputs=Add82079)
w = model.get_layer('Con86373').get_weights() 
w[0] = np.array([[[[[0.7645], [0.7837], [0.4124], [0.9516]]]]])
w[1] = np.array([0, 0, 0, 0])
model.get_layer('Con86373').set_weights(w) 
in0Add30129 = tf.constant([[[0.2914]]])
in1Add30129 = tf.constant([[[0.0675]]])
in0Zer78002 = tf.constant([[[1.7112], [1.0585], [1.3231], [1.7541]]])
in0Con77438 = tf.constant([[[[0.1497, 0.6527, 0.6449], [0.7896, 0.4964, 0.5302], [0.0554, 0.4421, 0.8422]], [[0.0478, 0.9019, 0.2783], [0.7007, 0.1844, 0.1581], [0.4162, 0.7936, 0.4437]], [[0.6316, 0.1306, 0.1851], [0.6136, 0.9203, 0.2933], [0.3577, 0.4054, 0.812]], [[0.2105, 0.5154, 0.3935], [0.9504, 0.1789, 0.9849], [0.8002, 0.3195, 0.9764]], [[0.7037, 0.5805, 0.8558], [0.6732, 0.4337, 0.9486], [0.2885, 0.6078, 0.5211]], [[0.9566, 0.1298, 0.1007], [0.7316, 0.9895, 0.5886], [0.5036, 0.9375, 0.0698]], [[0.0653, 0.4727, 0.2038], [0.6814, 0.8009, 0.9367], [0.1298, 0.415, 0.1994]], [[0.0927, 0.135, 0.1135], [0.3194, 0.8993, 0.7516], [0.3553, 0.0422, 0.9644]]]])
in0Ave64943 = tf.constant([[[[[0.9612], [0.6779]]], [[[0.9938], [0.3126]]]]])
in1Ave64943 = tf.constant([[[[[0.7152], [0.3383]]], [[[0.1985], [0.5671]]]]])
in0Con61835 = tf.constant([[[[0.3557, 0.6062]], [[0.0403, 0.2442]]]])
in0Glo63474 = tf.constant([[[[[1.7461, 1.6947]]]]])
print (np.array2string(model.predict([in0Add30129,in1Add30129,in0Zer78002,in0Con77438,in0Ave64943,in1Ave64943,in0Con61835,in0Glo63474],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Add82079.png')

LAdd30129 = add_layer([[[[0.2914]]], [[[0.0675]]]], Add30129), 
LRes45990 = reshape_layer(Add30129, [1, 1, 1], Res45990), 
LZer68999 = zero_padding2D_layer(Res45990, 7, 0, 2, 0, Zer68999), 
LZer78002 = zero_padding1D_layer([[[1.7112], [1.0585], [1.3231], [1.7541]]], 1, 1, Zer78002), 
LRes63991 = reshape_layer(Zer78002, [6, 1, 1], Res63991), 
LZer5268 = zero_padding2D_layer(Res63991, 1, 1, 1, 1, Zer5268), 
LSub10677 = subtract_layer(Zer68999,Zer5268, Sub10677), 
LCon77438 = concatenate_layer([Sub10677,[[[[0.1497, 0.6527, 0.6449], [0.7896, 0.4964, 0.5302], [0.0554, 0.4421, 0.8422]], [[0.0478, 0.9019, 0.2783], [0.7007, 0.1844, 0.1581], [0.4162, 0.7936, 0.4437]], [[0.6316, 0.1306, 0.1851], [0.6136, 0.9203, 0.2933], [0.3577, 0.4054, 0.812]], [[0.2105, 0.5154, 0.3935], [0.9504, 0.1789, 0.9849], [0.8002, 0.3195, 0.9764]], [[0.7037, 0.5805, 0.8558], [0.6732, 0.4337, 0.9486], [0.2885, 0.6078, 0.5211]], [[0.9566, 0.1298, 0.1007], [0.7316, 0.9895, 0.5886], [0.5036, 0.9375, 0.0698]], [[0.0653, 0.4727, 0.2038], [0.6814, 0.8009, 0.9367], [0.1298, 0.415, 0.1994]], [[0.0927, 0.135, 0.1135], [0.3194, 0.8993, 0.7516], [0.3553, 0.0422, 0.9644]]]]], 3, Con77438), 
LAve64943 = average_layer([[[[[[0.9612], [0.6779]]], [[[0.9938], [0.3126]]]]], [[[[[0.7152], [0.3383]]], [[[0.1985], [0.5671]]]]]], Ave64943), 
LRes87924 = reshape_layer(Ave64943, [2, 1, 2], Res87924), 
LCon61835 = concatenate_layer([Res87924,[[[[0.3557, 0.6062]], [[0.0403, 0.2442]]]]], 3, Con61835), 
LGlo63474 = global_max_pool3D_layer([[[[[1.7461, 1.6947]]]]], Glo63474), 
LRes70871 = reshape_layer(Glo63474, [2, 1], Res70871), 
LRes46624 = reshape_layer(Res70871, [2, 1, 1], Res46624), 
LRes40589 = reshape_layer(Res46624, [2, 1, 1, 1], Res40589), 
LCon86373 = conv3D_transpose_layer(Res40589, 1, 1, 1,[[[[[0.7645], [0.7837], [0.4124], [0.9516]]]]],[0, 0, 0, 0], 1, 7, 1, false, Con86373), 
LRes95230 = reshape_layer(Con86373, [2, 7, 4], Res95230), 
LMax33789 = max_pool2D_layer(Res95230, 2, 6, Max33789), 
LZer37764 = zero_padding2D_layer(Max33789, 1, 0, 0, 0, Zer37764), 
LAve68820 = average_layer([Con61835,Zer37764], Ave68820), 
LZer89104 = zero_padding2D_layer(Ave68820, 6, 0, 2, 0, Zer89104), 
LAdd82079 = add_layer([Con77438,Zer89104], Add82079), 
exec_layers([LAdd30129,LRes45990,LZer68999,LZer78002,LRes63991,LZer5268,LSub10677,LCon77438,LAve64943,LRes87924,LCon61835,LGlo63474,LRes70871,LRes46624,LRes40589,LCon86373,LRes95230,LMax33789,LZer37764,LAve68820,LZer89104,LAdd82079],["Add30129","Res45990","Zer68999","Zer78002","Res63991","Zer5268","Sub10677","Con77438","Ave64943","Res87924","Con61835","Glo63474","Res70871","Res46624","Res40589","Con86373","Res95230","Max33789","Zer37764","Ave68820","Zer89104","Add82079"],Add82079,"Add82079")

Actual (Unparsed): [[[[0.0000000, 0.1497000, 0.6527000, 0.6449000], [0.0000000, 0.7896000, 0.4964000, 0.5302000], [0.0000000, 0.0554000, 0.4421000, 0.8422000]], [[0.0000000, 0.0478000, 0.9019000, 0.2783000], [0.0000000, 0.7007000, 0.1844000, 0.1581000], [0.0000000, 0.4162000, 0.7936000, 0.4437000]], [[0.0000000, 0.6316000, 0.1306000, 0.1851000], [-1.7112000, 0.6136000, 0.9203000, 0.2933000], [0.0000000, 0.3577000, 0.4054000, 0.8120000]], [[0.0000000, 0.2105000, 0.5154000, 0.3935000], [-1.0585001, 0.9504000, 0.1789000, 0.9849000], [0.0000000, 0.8002000, 0.3195000, 0.9764000]], [[0.0000000, 0.7037000, 0.5805000, 0.8558000], [-1.3231000, 0.6732000, 0.4337000, 0.9486000], [0.0000000, 0.2885000, 0.6078000, 0.5211000]], [[0.0000000, 0.9566000, 0.1298000, 0.1007000], [-1.7541000, 0.7316000, 0.9895000, 0.5886000], [0.0000000, 0.5036000, 0.9375000, 0.0698000]], [[0.0000000, 0.0653000, 0.4727000, 0.2038000], [0.0000000, 0.6814000, 0.8009000, 0.9367000], [0.4191000, 0.3838500, 0.5928500, 0.5025000]], [[0.0000000, 0.0927000, 0.1350000, 0.1135000], [0.0000000, 0.3194000, 0.8993000, 0.7516000], [1.3244217, 1.2594343, 0.4223958, 1.9172944]]]]

Expected (Unparsed): [[[[0,0.1497,0.6527,0.6449],[0,0.7896,0.4964,0.5302],[0,0.0554,0.4421,0.8422]],[[0,0.0478,0.9019,0.2783],[0,0.7007,0.1844,0.1581],[0,0.4162,0.7936,0.4437]],[[0,0.6316,0.1306,0.1851],[-1.7112,0.6136,0.9203,0.2933],[0,0.3577,0.4054,0.812]],[[0,0.2105,0.5154,0.3935],[-1.0585,0.9504,0.1789,0.9849],[0,0.8002,0.3195,0.9764]],[[0,0.7037,0.5805,0.8558],[-1.3231,0.6732,0.4337,0.9486],[0,0.2885,0.6078,0.5211]],[[0,0.9566,0.1298,0.1007],[-1.7541,0.7316,0.9895,0.5886],[0,0.5036,0.9375,0.0698]],[[0,0.0653,0.4727,0.2038],[0,0.6814,0.8009,0.9367],[0.41910000000000003,0.38385,0.59285,0.5025]],[[0,0.0927,0.135,0.1135],[0,0.3194,0.8993,0.7516],[1.3244217249999999,1.259434285,0.42239582,1.91729438]]]]

Actual:   [[[[0, 0.1497, 0.6527, 0.6449], [0, 0.7896, 0.4964, 0.5302], [0, 0.0554, 0.4421, 0.8422]], [[0, 0.0478, 0.9019, 0.2783], [0, 0.7007, 0.1844, 0.1581], [0, 0.4162, 0.7936, 0.4437]], [[0, 0.6316, 0.1306, 0.1851], [-1.7112, 0.6136, 0.9203, 0.2933], [0, 0.3577, 0.4054, 0.812]], [[0, 0.2105, 0.5154, 0.3935], [-1.0585, 0.9504, 0.1789, 0.9849], [0, 0.8002, 0.3195, 0.9764]], [[0, 0.7037, 0.5805, 0.8558], [-1.3231, 0.6732, 0.4337, 0.9486], [0, 0.2885, 0.6078, 0.5211]], [[0, 0.9566, 0.1298, 0.1007], [-1.7541, 0.7316, 0.9895, 0.5886], [0, 0.5036, 0.9375, 0.0698]], [[0, 0.0653, 0.4727, 0.2038], [0, 0.6814, 0.8009, 0.9367], [0.4191, 0.3839, 0.5929, 0.5025]], [[0, 0.0927, 0.135, 0.1135], [0, 0.3194, 0.8993, 0.7516], [1.3245, 1.2595, 0.4224, 1.9173]]]]

Expected: [[[[0, 0.1497, 0.6527, 0.6449], [0, 0.7896, 0.4964, 0.5302], [0, 0.0554, 0.4421, 0.8422]], [[0, 0.0478, 0.9019, 0.2783], [0, 0.7007, 0.1844, 0.1581], [0, 0.4162, 0.7936, 0.4437]], [[0, 0.6316, 0.1306, 0.1851], [-1.7112, 0.6136, 0.9203, 0.2933], [0, 0.3577, 0.4054, 0.812]], [[0, 0.2105, 0.5154, 0.3935], [-1.0585, 0.9504, 0.1789, 0.9849], [0, 0.8002, 0.3195, 0.9764]], [[0, 0.7037, 0.5805, 0.8558], [-1.3231, 0.6732, 0.4337, 0.9486], [0, 0.2885, 0.6078, 0.5211]], [[0, 0.9566, 0.1298, 0.1007], [-1.7541, 0.7316, 0.9895, 0.5886], [0, 0.5036, 0.9375, 0.0698]], [[0, 0.0653, 0.4727, 0.2038], [0, 0.6814, 0.8009, 0.9367], [0.4192, 0.3839, 0.5929, 0.5025]], [[0, 0.0927, 0.135, 0.1135], [0, 0.3194, 0.8993, 0.7516], [1.3245, 1.2595, 0.4224, 1.9173]]]]