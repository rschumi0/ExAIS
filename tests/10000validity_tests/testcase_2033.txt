import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Dot76071 = tf.keras.layers.Input(shape=([2]))
in1Dot76071 = tf.keras.layers.Input(shape=([2]))

Dot76071 = keras.layers.Dot(axes=(1, 1), name = 'Dot76071', )([in0Dot76071,in1Dot76071])
Res99816 = keras.layers.Reshape((1, 1), name = 'Res99816', )(Dot76071)
Res71675 = keras.layers.Reshape((1, 1, 1), name = 'Res71675', )(Res99816)
Res70335 = keras.layers.Reshape((1, 1, 1, 1), name = 'Res70335', )(Res71675)
Up_49166 = keras.layers.UpSampling3D(size=(1, 1, 2), name = 'Up_49166', )(Res70335)
model = tf.keras.models.Model(inputs=[in0Dot76071,in1Dot76071], outputs=Up_49166)
in0Dot76071 = tf.constant([[0.6233, 0.4739]])
in1Dot76071 = tf.constant([[0.5511, 0.8488]])
print (np.array2string(model.predict([in0Dot76071,in1Dot76071],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Up_49166.png')

LDot76071 = dot_layer([[0.6233, 0.4739]], [[0.5511, 0.8488]], 1, 1, Dot76071), 
LRes99816 = reshape_layer(Dot76071, [1, 1], Res99816), 
LRes71675 = reshape_layer(Res99816, [1, 1, 1], Res71675), 
LRes70335 = reshape_layer(Res71675, [1, 1, 1, 1], Res70335), 
LUp_49166 = up_sampling3D_layer(Res70335, 1, 1, 2, Up_49166), 
exec_layers([LDot76071,LRes99816,LRes71675,LRes70335,LUp_49166],["Dot76071","Res99816","Res71675","Res70335","Up_49166"],Up_49166,"Up_49166")

Actual (Unparsed): [[[[[0.7457470], [0.7457470]]]]]

Expected (Unparsed): [[[[[0.74574695],[0.74574695]]]]]

Actual:   [[[[[0.7458], [0.7458]]]]]

Expected: [[[[[0.7458], [0.7458]]]]]