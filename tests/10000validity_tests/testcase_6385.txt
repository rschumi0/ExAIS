import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Sub1930 = tf.keras.layers.Input(shape=([3, 3]))
in1Sub1930 = tf.keras.layers.Input(shape=([3, 3]))
in0Con14549 = tf.keras.layers.Input(shape=([4, 6, 1]))
in0Zer49777 = tf.keras.layers.Input(shape=([4, 4, 2]))

Sub1930 = keras.layers.Subtract(name = 'Sub1930', )([in0Sub1930,in1Sub1930])
Res74480 = keras.layers.Reshape((3, 3, 1), name = 'Res74480', )(Sub1930)
Zer85797 = keras.layers.ZeroPadding2D(padding=((1, 0), (3, 0)), name = 'Zer85797', )(Res74480)
Con14549 = keras.layers.Concatenate(axis=3, name = 'Con14549', )([Zer85797,in0Con14549])
Zer49777 = keras.layers.ZeroPadding2D(padding=((1, 1), (1, 1)), name = 'Zer49777', )(in0Zer49777)
Cro2405 = keras.layers.Cropping2D(cropping=((0, 2), (0, 0)), name = 'Cro2405', )(Zer49777)
Max94398 = keras.layers.Maximum(name = 'Max94398', )([Con14549,Cro2405])
model = tf.keras.models.Model(inputs=[in0Sub1930,in1Sub1930,in0Con14549,in0Zer49777], outputs=Max94398)
in0Sub1930 = tf.constant([[[0.1163, 0.074, 0.9245], [0.3903, 0.4804, 0.6711], [0.0822, 0.0837, 0.5027]]])
in1Sub1930 = tf.constant([[[0.3833, 0.0328, 0.4386], [0.2914, 0.6266, 0.6178], [0.414, 0.9703, 0.2472]]])
in0Con14549 = tf.constant([[[[0.9651], [0.8892], [0.5736], [0.1422], [0.3163], [0.2207]], [[0.8804], [0.6224], [0.3699], [0.3483], [0.5184], [0.109]], [[0.6814], [0.1373], [0.0187], [0.1481], [0.4159], [0.2243]], [[0.994], [0.9019], [0.1133], [0.1716], [0.2348], [0.447]]]])
in0Zer49777 = tf.constant([[[[1.0226, 1.5127], [1.6789, 1.4725], [1.0916, 1.9794], [1.7094, 1.5257]], [[1.1389, 1.9263], [1.0752, 1.1819], [1.1312, 1.8721], [1.6336, 1.688]], [[1.8984, 1.4053], [1.8655, 1.0212], [1.4626, 1.8115], [1.5538, 1.4188]], [[1.665, 1.5418], [1.8936, 1.4751], [1.0196, 1.3401], [1.021, 1.8741]]]])
print (np.array2string(model.predict([in0Sub1930,in1Sub1930,in0Con14549,in0Zer49777],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Max94398.png')

LSub1930 = subtract_layer([[[0.1163, 0.074, 0.9245], [0.3903, 0.4804, 0.6711], [0.0822, 0.0837, 0.5027]]], [[[0.3833, 0.0328, 0.4386], [0.2914, 0.6266, 0.6178], [0.414, 0.9703, 0.2472]]], Sub1930), 
LRes74480 = reshape_layer(Sub1930, [3, 3, 1], Res74480), 
LZer85797 = zero_padding2D_layer(Res74480, 1, 0, 3, 0, Zer85797), 
LCon14549 = concatenate_layer([Zer85797,[[[[0.9651], [0.8892], [0.5736], [0.1422], [0.3163], [0.2207]], [[0.8804], [0.6224], [0.3699], [0.3483], [0.5184], [0.109]], [[0.6814], [0.1373], [0.0187], [0.1481], [0.4159], [0.2243]], [[0.994], [0.9019], [0.1133], [0.1716], [0.2348], [0.447]]]]], 3, Con14549), 
LZer49777 = zero_padding2D_layer([[[[1.0226, 1.5127], [1.6789, 1.4725], [1.0916, 1.9794], [1.7094, 1.5257]], [[1.1389, 1.9263], [1.0752, 1.1819], [1.1312, 1.8721], [1.6336, 1.688]], [[1.8984, 1.4053], [1.8655, 1.0212], [1.4626, 1.8115], [1.5538, 1.4188]], [[1.665, 1.5418], [1.8936, 1.4751], [1.0196, 1.3401], [1.021, 1.8741]]]], 1, 1, 1, 1, Zer49777), 
LCro2405 = cropping2D_layer(Zer49777, 0, 2, 0, 0, Cro2405), 
LMax94398 = maximum_layer([Con14549,Cro2405], Max94398), 
exec_layers([LSub1930,LRes74480,LZer85797,LCon14549,LZer49777,LCro2405,LMax94398],["Sub1930","Res74480","Zer85797","Con14549","Zer49777","Cro2405","Max94398"],Max94398,"Max94398")

Actual (Unparsed): [[[[0.0000000, 0.9651000], [0.0000000, 0.8892000], [0.0000000, 0.5736000], [0.0000000, 0.1422000], [0.0000000, 0.3163000], [0.0000000, 0.2207000]], [[0.0000000, 0.8804000], [1.0226001, 1.5127000], [1.6789000, 1.4725000], [1.0915999, 1.9794000], [1.7094001, 1.5257000], [0.4859000, 0.1090000]], [[0.0000000, 0.6814000], [1.1389000, 1.9263000], [1.0752000, 1.1819000], [1.1312000, 1.8721000], [1.6336000, 1.6880000], [0.0533000, 0.2243000]], [[0.0000000, 0.9940000], [1.8983999, 1.4053000], [1.8655000, 1.0211999], [1.4626000, 1.8115000], [1.5538000, 1.4188000], [0.2555000, 0.4470000]]]]

Expected (Unparsed): [[[[0,0.9651],[0,0.8892],[0,0.5736],[0,0.1422],[0,0.3163],[0,0.2207]],[[0,0.8804],[1.0226,1.5127],[1.6789,1.4725],[1.0916,1.9794],[1.7094,1.5257],[0.4859,0.109]],[[0,0.6814],[1.1389,1.9263],[1.0752,1.1819],[1.1312,1.8721],[1.6336,1.688],[0.053300000000000014,0.2243]],[[0,0.994],[1.8984,1.4053],[1.8655,1.0212],[1.4626,1.8115],[1.5538,1.4188],[0.25550000000000006,0.447]]]]

Actual:   [[[[0, 0.9651], [0, 0.8892], [0, 0.5736], [0, 0.1422], [0, 0.3163], [0, 0.2207]], [[0, 0.8804], [1.0227, 1.5127], [1.6789, 1.4725], [1.0916, 1.9794], [1.7095, 1.5257], [0.4859, 0.109]], [[0, 0.6814], [1.1389, 1.9263], [1.0752, 1.1819], [1.1312, 1.8721], [1.6336, 1.688], [0.0533, 0.2243]], [[0, 0.994], [1.8984, 1.4053], [1.8655, 1.0212], [1.4626, 1.8115], [1.5538, 1.4188], [0.2555, 0.447]]]]

Expected: [[[[0, 0.9651], [0, 0.8892], [0, 0.5736], [0, 0.1422], [0, 0.3163], [0, 0.2207]], [[0, 0.8804], [1.0226, 1.5127], [1.6789, 1.4725], [1.0916, 1.9794], [1.7094, 1.5257], [0.4859, 0.109]], [[0, 0.6814], [1.1389, 1.9263], [1.0752, 1.1819], [1.1312, 1.8721], [1.6336, 1.688], [0.0534, 0.2243]], [[0, 0.994], [1.8984, 1.4053], [1.8655, 1.0212], [1.4626, 1.8115], [1.5538, 1.4188], [0.2556, 0.447]]]]