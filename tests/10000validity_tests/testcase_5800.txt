import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0GRU22725 = tf.keras.layers.Input(shape=([2, 3]))
in0Con11393 = tf.keras.layers.Input(shape=([5, 3, 5, 2]))
in0Sub1198 = tf.keras.layers.Input(shape=([3, 3, 2, 3]))
in1Sub1198 = tf.keras.layers.Input(shape=([3, 3, 2, 3]))

GRU22725 = keras.layers.GRU(3,reset_after=False, recurrent_activation='sigmoid', name = 'GRU22725', )(in0GRU22725)
Res55081 = keras.layers.Reshape((3, 1), name = 'Res55081', )(GRU22725)
Res90133 = keras.layers.Reshape((3, 1, 1), name = 'Res90133', )(Res55081)
Con62123 = keras.layers.Conv2D(3, (1, 1),strides=(1, 1), padding='same', dilation_rate=(1, 1), name = 'Con62123', )(Res90133)
Res55517 = keras.layers.Reshape((3, 1, 3, 1), name = 'Res55517', )(Con62123)
Zer35621 = keras.layers.ZeroPadding3D(padding=((1, 1), (1, 1), (1, 1)), name = 'Zer35621', )(Res55517)
Con11393 = keras.layers.Concatenate(axis=4, name = 'Con11393', )([Zer35621,in0Con11393])
Sub1198 = keras.layers.Subtract(name = 'Sub1198', )([in0Sub1198,in1Sub1198])
Zer12039 = keras.layers.ZeroPadding3D(padding=((2, 0), (0, 0), (3, 0)), name = 'Zer12039', )(Sub1198)
Min13246 = keras.layers.Minimum(name = 'Min13246', )([Con11393,Zer12039])
model = tf.keras.models.Model(inputs=[in0GRU22725,in0Con11393,in0Sub1198,in1Sub1198], outputs=Min13246)
w = model.get_layer('GRU22725').get_weights() 
w[0] = np.array([[6, 7, 7, 3, 5, 2, 5, 5, 1], [2, 4, 7, 3, 1, 2, 7, 1, 1], [6, 8, 9, 9, 2, 7, 9, 7, 2]])
w[1] = np.array([[4, 1, 10, 10, 3, 4, 9, 10, 3], [4, 1, 6, 4, 4, 6, 8, 7, 2], [1, 2, 10, 9, 8, 5, 5, 9, 2]])
w[2] = np.array([6, 4, 3, 9, 8, 4, 4, 10, 8])
model.get_layer('GRU22725').set_weights(w) 
w = model.get_layer('Con62123').get_weights() 
w[0] = np.array([[[[0.87, 0.9976, 0.6467]]]])
w[1] = np.array([0, 0, 0])
model.get_layer('Con62123').set_weights(w) 
in0GRU22725 = tf.constant([[[7, 5, 2], [6, 6, 6]]])
in0Con11393 = tf.constant([[[[[0.3704, 0.4822], [0.275, 0.8986], [0.7237, 0.346], [0.5488, 0.7063], [0.4307, 0.0619]], [[0.4227, 0.2796], [0.5298, 0.1933], [0.5545, 0.0519], [0.7384, 0.5838], [0.6096, 0.7361]], [[0.6708, 0.527], [0.1898, 0.0163], [0.9348, 0.8259], [0.5672, 0.9777], [0.9099, 0.7588]]], [[[0.0538, 0.4673], [0.384, 0.9496], [0.9789, 0.944], [0.3878, 0.1484], [0.67, 0.2773]], [[0.4996, 0.966], [0.5366, 0.385], [0.6148, 0.681], [0.3412, 0.5601], [0.6771, 0.3375]], [[0.0096, 0.8338], [0.1472, 0.4868], [0.8786, 0.7407], [0.0516, 0.0919], [0.1104, 0.4147]]], [[[0.2963, 0.3074], [0.1125, 0.024], [0.5574, 0.0791], [0.1918, 0.1772], [0.468, 0.7621]], [[0.3482, 0.079], [0.0085, 0.2487], [0.0625, 0.8961], [0.9783, 0.4191], [0.1741, 0.0043]], [[0.1752, 0.0776], [0.454, 0.5325], [0.4459, 0.9245], [0.2841, 0.8929], [0.0783, 0.5262]]], [[[0.9255, 0.7929], [0.1068, 0.6931], [0.2242, 0.56], [0.9736, 0.1529], [0.2418, 0.481]], [[0.649, 0.9156], [0.2222, 0.2535], [0.7498, 0.2649], [0.5086, 0.5824], [0.4168, 0.8856]], [[0.5126, 0.4107], [0.7122, 0.2345], [0.601, 0.2732], [0.0796, 0.9003], [0.8156, 0.7794]]], [[[0.9744, 0.3604], [0.6704, 0.2948], [0.115, 0.2392], [0.8799, 0.4692], [0.9322, 0.9019]], [[0.7643, 0.3858], [0.7029, 0.9735], [0.251, 0.749], [0.5396, 0.1656], [0.8449, 0.7122]], [[0.8788, 0.6124], [0.6745, 0.6583], [0.3631, 0.7732], [0.7414, 0.4882], [0.0425, 0.8375]]]]])
in0Sub1198 = tf.constant([[[[[0.5104, 0.2261, 0.8033], [0.9179, 0.7898, 0.5357]], [[0.8468, 0.5779, 0.3041], [0.6958, 0.3392, 0.6766]], [[0.2573, 0.3857, 0.7574], [0.0042, 0.5194, 0.1963]]], [[[0.8316, 0.2647, 0.0042], [0.9456, 0.1827, 0.0982]], [[0.4106, 0.9992, 0.6093], [0.3685, 0.6277, 0.2585]], [[0.8793, 0.9208, 0.9734], [0.1382, 0.392, 0.9395]]], [[[0.8331, 0.2906, 0.6151], [0.2416, 0.2007, 0.0574]], [[0.7721, 0.3223, 0.0796], [0.6272, 0.8601, 0.7401]], [[0.6998, 0.6618, 0.7087], [0.4749, 0.0291, 0.7157]]]]])
in1Sub1198 = tf.constant([[[[[0.4591, 0.2215, 0.1127], [0.1201, 0.536, 0.1909]], [[0.3617, 0.1267, 0.9147], [0.8853, 0.0315, 0.0154]], [[0.2415, 0.4834, 0.7759], [0.5568, 0.1608, 0.9278]]], [[[0.3498, 0.6926, 0.0164], [0.5417, 0.2388, 0.5448]], [[0.9544, 0.0176, 0.2416], [0.8998, 0.3334, 0.9205]], [[0.8041, 0.1248, 0.2652], [0.4259, 0.209, 0.0708]]], [[[0.0556, 0.8716, 0.5628], [0.8887, 0.2915, 0.8494]], [[0.8901, 0.8481, 0.3295], [0.978, 0.5434, 0.1801]], [[0.982, 0.2093, 0.569], [0.6915, 0.2671, 0.5017]]]]])
print (np.array2string(model.predict([in0GRU22725,in0Con11393,in0Sub1198,in1Sub1198],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Min13246.png')

LGRU22725 = gru_layer([[[7, 5, 2], [6, 6, 6]]],[[6, 7, 7, 3, 5, 2, 5, 5, 1], [2, 4, 7, 3, 1, 2, 7, 1, 1], [6, 8, 9, 9, 2, 7, 9, 7, 2]],[[4, 1, 10, 10, 3, 4, 9, 10, 3], [4, 1, 6, 4, 4, 6, 8, 7, 2], [1, 2, 10, 9, 8, 5, 5, 9, 2]],[6, 4, 3, 9, 8, 4, 4, 10, 8], false, GRU22725), 
LRes55081 = reshape_layer(GRU22725, [3, 1], Res55081), 
LRes90133 = reshape_layer(Res55081, [3, 1, 1], Res90133), 
LCon62123 = conv2D_layer(Res90133, 1, 1,[[[[0.87, 0.9976, 0.6467]]]],[0, 0, 0], 1, 1, true, 1, 1, Con62123), 
LRes55517 = reshape_layer(Con62123, [3, 1, 3, 1], Res55517), 
LZer35621 = zero_padding3D_layer(Res55517, 1, 1, 1, 1, 1, 1, Zer35621), 
LCon11393 = concatenate_layer([Zer35621,[[[[[0.3704, 0.4822], [0.275, 0.8986], [0.7237, 0.346], [0.5488, 0.7063], [0.4307, 0.0619]], [[0.4227, 0.2796], [0.5298, 0.1933], [0.5545, 0.0519], [0.7384, 0.5838], [0.6096, 0.7361]], [[0.6708, 0.527], [0.1898, 0.0163], [0.9348, 0.8259], [0.5672, 0.9777], [0.9099, 0.7588]]], [[[0.0538, 0.4673], [0.384, 0.9496], [0.9789, 0.944], [0.3878, 0.1484], [0.67, 0.2773]], [[0.4996, 0.966], [0.5366, 0.385], [0.6148, 0.681], [0.3412, 0.5601], [0.6771, 0.3375]], [[0.0096, 0.8338], [0.1472, 0.4868], [0.8786, 0.7407], [0.0516, 0.0919], [0.1104, 0.4147]]], [[[0.2963, 0.3074], [0.1125, 0.024], [0.5574, 0.0791], [0.1918, 0.1772], [0.468, 0.7621]], [[0.3482, 0.079], [0.0085, 0.2487], [0.0625, 0.8961], [0.9783, 0.4191], [0.1741, 0.0043]], [[0.1752, 0.0776], [0.454, 0.5325], [0.4459, 0.9245], [0.2841, 0.8929], [0.0783, 0.5262]]], [[[0.9255, 0.7929], [0.1068, 0.6931], [0.2242, 0.56], [0.9736, 0.1529], [0.2418, 0.481]], [[0.649, 0.9156], [0.2222, 0.2535], [0.7498, 0.2649], [0.5086, 0.5824], [0.4168, 0.8856]], [[0.5126, 0.4107], [0.7122, 0.2345], [0.601, 0.2732], [0.0796, 0.9003], [0.8156, 0.7794]]], [[[0.9744, 0.3604], [0.6704, 0.2948], [0.115, 0.2392], [0.8799, 0.4692], [0.9322, 0.9019]], [[0.7643, 0.3858], [0.7029, 0.9735], [0.251, 0.749], [0.5396, 0.1656], [0.8449, 0.7122]], [[0.8788, 0.6124], [0.6745, 0.6583], [0.3631, 0.7732], [0.7414, 0.4882], [0.0425, 0.8375]]]]]], 4, Con11393), 
LSub1198 = subtract_layer([[[[[0.5104, 0.2261, 0.8033], [0.9179, 0.7898, 0.5357]], [[0.8468, 0.5779, 0.3041], [0.6958, 0.3392, 0.6766]], [[0.2573, 0.3857, 0.7574], [0.0042, 0.5194, 0.1963]]], [[[0.8316, 0.2647, 0.0042], [0.9456, 0.1827, 0.0982]], [[0.4106, 0.9992, 0.6093], [0.3685, 0.6277, 0.2585]], [[0.8793, 0.9208, 0.9734], [0.1382, 0.392, 0.9395]]], [[[0.8331, 0.2906, 0.6151], [0.2416, 0.2007, 0.0574]], [[0.7721, 0.3223, 0.0796], [0.6272, 0.8601, 0.7401]], [[0.6998, 0.6618, 0.7087], [0.4749, 0.0291, 0.7157]]]]], [[[[[0.4591, 0.2215, 0.1127], [0.1201, 0.536, 0.1909]], [[0.3617, 0.1267, 0.9147], [0.8853, 0.0315, 0.0154]], [[0.2415, 0.4834, 0.7759], [0.5568, 0.1608, 0.9278]]], [[[0.3498, 0.6926, 0.0164], [0.5417, 0.2388, 0.5448]], [[0.9544, 0.0176, 0.2416], [0.8998, 0.3334, 0.9205]], [[0.8041, 0.1248, 0.2652], [0.4259, 0.209, 0.0708]]], [[[0.0556, 0.8716, 0.5628], [0.8887, 0.2915, 0.8494]], [[0.8901, 0.8481, 0.3295], [0.978, 0.5434, 0.1801]], [[0.982, 0.2093, 0.569], [0.6915, 0.2671, 0.5017]]]]], Sub1198), 
LZer12039 = zero_padding3D_layer(Sub1198, 2, 0, 0, 0, 3, 0, Zer12039), 
LMin13246 = minimum_layer([Con11393,Zer12039], Min13246), 
exec_layers([LGRU22725,LRes55081,LRes90133,LCon62123,LRes55517,LZer35621,LCon11393,LSub1198,LZer12039,LMin13246],["GRU22725","Res55081","Res90133","Con62123","Res55517","Zer35621","Con11393","Sub1198","Zer12039","Min13246"],Min13246,"Min13246")

Actual (Unparsed): [[[[[0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000]], [[0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000]], [[0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000]]], [[[0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000]], [[0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000]], [[0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000]]], [[[0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0046000, 0.1772000], [0.0000000, 0.2538000, 0.3448000]], [[0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.4512000, -0.6106000], [-0.1895000, 0.1741000, 0.0043000]], [[0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000], [0.0000000, -0.0977000, -0.0185000], [-0.5526000, 0.0783000, -0.7315000]]], [[[0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000], [0.0000000, -0.4279000, -0.0122000], [0.0000000, -0.0561000, -0.4466000]], [[0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000], [-0.5438000, 0.5086000, 0.3677000], [-0.5313000, 0.2943000, -0.6620000]], [[0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0796000, 0.7082000], [-0.2877000, 0.1830000, 0.7794000]]], [[[0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000], [0.0000000, -0.5810000, 0.0523000], [-0.6471000, -0.0908000, -0.7920000]], [[0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000], [-0.1180000, -0.5258000, -0.2499000], [-0.3508000, 0.3167000, 0.5600000]], [[0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000], [-0.2822000, 0.4525000, 0.1397000], [-0.2166000, -0.2380000, 0.2140000]]]]]

Expected (Unparsed): [[[[[0,0,0],[0,0,0],[0,0,0],[0,0,0],[0,0,0]],[[0,0,0],[0,0,0],[0,0,0],[0,0,0],[0,0,0]],[[0,0,0],[0,0,0],[0,0,0],[0,0,0],[0,0,0]]],[[[0,0,0],[0,0,0],[0,0,0],[0,0,0],[0,0,0]],[[0,0,0],[0.0,0,0],[0.0,0,0],[0.0,0,0],[0,0,0]],[[0,0,0],[0,0,0],[0,0,0],[0,0,0],[0,0,0]]],[[[0,0,0],[0,0,0],[0,0,0],[0,0.004599999999999993,0.1772],[0,0.2537999999999999,0.3448]],[[0,0,0],[0.0,0,0],[0.0,0,0],[0.0,0.45119999999999993,-0.6106],[-0.1895,0.1741,0.0043]],[[0,0,0],[0,0,0],[0,0,0],[0,-0.09770000000000001,-0.018500000000000072],[-0.5526,0.0783,-0.7314999999999999]]],[[[0,0,0],[0,0,0],[0,0,0],[0,-0.4279,-0.012200000000000003],[0,-0.05610000000000001,-0.44659999999999994]],[[0,0,0],[0.0,0,0],[0.0,0,0],[-0.5438000000000001,0.5086,0.3676999999999999],[-0.5313000000000001,0.29430000000000006,-0.6619999999999999]],[[0,0,0],[0,0,0],[0,0,0],[0,0.0796,0.7082],[-0.2877,0.18300000000000002,0.7794]]],[[[0,0,0],[0,0,0],[0,0,0],[0,-0.581,0.05230000000000001],[-0.6471,-0.09079999999999999,-0.792]],[[0,0,0],[0,0,0],[0,0,0],[-0.118,-0.5258,-0.2499],[-0.3508,0.3167,0.5599999999999999]],[[0,0,0],[0,0,0],[0,0,0],[-0.2822,0.4525,0.13970000000000005],[-0.21660000000000001,-0.238,0.21399999999999997]]]]]

Actual:   [[[[[0, 0, 0], [0, 0, 0], [0, 0, 0], [0, 0, 0], [0, 0, 0]], [[0, 0, 0], [0, 0, 0], [0, 0, 0], [0, 0, 0], [0, 0, 0]], [[0, 0, 0], [0, 0, 0], [0, 0, 0], [0, 0, 0], [0, 0, 0]]], [[[0, 0, 0], [0, 0, 0], [0, 0, 0], [0, 0, 0], [0, 0, 0]], [[0, 0, 0], [0, 0, 0], [0, 0, 0], [0, 0, 0], [0, 0, 0]], [[0, 0, 0], [0, 0, 0], [0, 0, 0], [0, 0, 0], [0, 0, 0]]], [[[0, 0, 0], [0, 0, 0], [0, 0, 0], [0, 0.0046, 0.1772], [0, 0.2538, 0.3448]], [[0, 0, 0], [0, 0, 0], [0, 0, 0], [0, 0.4512, -0.6106], [-0.1895, 0.1741, 0.0043]], [[0, 0, 0], [0, 0, 0], [0, 0, 0], [0, -0.0977, -0.0185], [-0.5526, 0.0783, -0.7315]]], [[[0, 0, 0], [0, 0, 0], [0, 0, 0], [0, -0.4279, -0.0122], [0, -0.0561, -0.4466]], [[0, 0, 0], [0, 0, 0], [0, 0, 0], [-0.5438, 0.5086, 0.3677], [-0.5313, 0.2943, -0.662]], [[0, 0, 0], [0, 0, 0], [0, 0, 0], [0, 0.0796, 0.7082], [-0.2877, 0.183, 0.7794]]], [[[0, 0, 0], [0, 0, 0], [0, 0, 0], [0, -0.581, 0.0523], [-0.6471, -0.0908, -0.792]], [[0, 0, 0], [0, 0, 0], [0, 0, 0], [-0.118, -0.5258, -0.2499], [-0.3508, 0.3167, 0.56]], [[0, 0, 0], [0, 0, 0], [0, 0, 0], [-0.2822, 0.4525, 0.1397], [-0.2166, -0.238, 0.214]]]]]

Expected: [[[[[0, 0, 0], [0, 0, 0], [0, 0, 0], [0, 0, 0], [0, 0, 0]], [[0, 0, 0], [0, 0, 0], [0, 0, 0], [0, 0, 0], [0, 0, 0]], [[0, 0, 0], [0, 0, 0], [0, 0, 0], [0, 0, 0], [0, 0, 0]]], [[[0, 0, 0], [0, 0, 0], [0, 0, 0], [0, 0, 0], [0, 0, 0]], [[0, 0, 0], [0, 0, 0], [0, 0, 0], [0, 0, 0], [0, 0, 0]], [[0, 0, 0], [0, 0, 0], [0, 0, 0], [0, 0, 0], [0, 0, 0]]], [[[0, 0, 0], [0, 0, 0], [0, 0, 0], [0, 0.0046, 0.1772], [0, 0.2538, 0.3448]], [[0, 0, 0], [0, 0, 0], [0, 0, 0], [0, 0.4512, -0.6106], [-0.1895, 0.1741, 0.0043]], [[0, 0, 0], [0, 0, 0], [0, 0, 0], [0, -0.0977, -0.0185], [-0.5526, 0.0783, -0.7314]]], [[[0, 0, 0], [0, 0, 0], [0, 0, 0], [0, -0.4279, -0.0122], [0, -0.0561, -0.4465]], [[0, 0, 0], [0, 0, 0], [0, 0, 0], [-0.5438, 0.5086, 0.3677], [-0.5313, 0.2944, -0.6619]], [[0, 0, 0], [0, 0, 0], [0, 0, 0], [0, 0.0796, 0.7082], [-0.2877, 0.1831, 0.7794]]], [[[0, 0, 0], [0, 0, 0], [0, 0, 0], [0, -0.581, 0.0524], [-0.6471, -0.0907, -0.792]], [[0, 0, 0], [0, 0, 0], [0, 0, 0], [-0.118, -0.5258, -0.2499], [-0.3508, 0.3167, 0.56]], [[0, 0, 0], [0, 0, 0], [0, 0, 0], [-0.2822, 0.4525, 0.1398], [-0.2166, -0.238, 0.214]]]]]