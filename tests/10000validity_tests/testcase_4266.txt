import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Min33127 = tf.keras.layers.Input(shape=([2, 2]))
in1Min33127 = tf.keras.layers.Input(shape=([2, 2]))
in0Con4107 = tf.keras.layers.Input(shape=([2, 8, 1, 2]))
in0Min18186 = tf.keras.layers.Input(shape=([2, 2, 1]))
in1Min18186 = tf.keras.layers.Input(shape=([2, 2, 1]))

Min33127 = keras.layers.Minimum(name = 'Min33127', )([in0Min33127,in1Min33127])
Lay53349 = keras.layers.LayerNormalization(axis=2, epsilon=1.261552047775861, name = 'Lay53349', )(Min33127)
Lea28299 = keras.layers.LeakyReLU(alpha=8.820221240244276, name = 'Lea28299', )(Lay53349)
Res29698 = keras.layers.Reshape((2, 2, 1), name = 'Res29698', )(Lea28299)
Res57733 = keras.layers.Reshape((2, 2, 1, 1), name = 'Res57733', )(Res29698)
Zer79691 = keras.layers.ZeroPadding3D(padding=((0, 0), (6, 0), (0, 0)), name = 'Zer79691', )(Res57733)
Con4107 = keras.layers.Concatenate(axis=4, name = 'Con4107', )([Zer79691,in0Con4107])
Min18186 = keras.layers.Minimum(name = 'Min18186', )([in0Min18186,in1Min18186])
Res10135 = keras.layers.Reshape((2, 2, 1, 1), name = 'Res10135', )(Min18186)
Con31864 = keras.layers.Conv3DTranspose(3, (1, 2, 1),strides=(1, 4, 1), padding='valid', name = 'Con31864', )(Res10135)
Mul99235 = keras.layers.Multiply(name = 'Mul99235', )([Con4107,Con31864])
model = tf.keras.models.Model(inputs=[in0Min33127,in1Min33127,in0Con4107,in0Min18186,in1Min18186], outputs=Mul99235)
w = model.get_layer('Con31864').get_weights() 
w[0] = np.array([[[[[0.4151], [0.6714], [0.983]]], [[[0.646], [0.6508], [0.4069]]]]])
w[1] = np.array([0, 0, 0])
model.get_layer('Con31864').set_weights(w) 
in0Min33127 = tf.constant([[[0.971, 0.8712], [0.405, 0.7247]]])
in1Min33127 = tf.constant([[[0.2334, 0.752], [0.6337, 0.4761]]])
in0Con4107 = tf.constant([[[[[0.3406, 0.1366]], [[0.7931, 0.9643]], [[0.7997, 0.9844]], [[0.2383, 0.1151]], [[0.3622, 0.2961]], [[0.4128, 0.8691]], [[0.3035, 0.5758]], [[0.0942, 0.4387]]], [[[0.3731, 0.9379]], [[0.2885, 0.3716]], [[0.331, 0.8468]], [[0.5967, 0.3684]], [[0.957, 0.2538]], [[0.6422, 0.0119]], [[0.2777, 0.6958]], [[0.5104, 0.015]]]]])
in0Min18186 = tf.constant([[[[0.3526], [0.5037]], [[0.4957], [0.8985]]]])
in1Min18186 = tf.constant([[[[0.1245], [0.505]], [[0.6975], [0.5767]]]])
print (np.array2string(model.predict([in0Min33127,in1Min33127,in0Con4107,in0Min18186,in1Min18186],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Mul99235.png')

LMin33127 = minimum_layer([[[[0.971, 0.8712], [0.405, 0.7247]]], [[[0.2334, 0.752], [0.6337, 0.4761]]]], Min33127), 
LLay53349 = layer_normalization_layer(Min33127, 2, 1.261552047775861, Lay53349), 
LLea28299 = leaky_relu_layer(Lay53349, 8.820221240244276, Lea28299), 
LRes29698 = reshape_layer(Lea28299, [2, 2, 1], Res29698), 
LRes57733 = reshape_layer(Res29698, [2, 2, 1, 1], Res57733), 
LZer79691 = zero_padding3D_layer(Res57733, 0, 0, 6, 0, 0, 0, Zer79691), 
LCon4107 = concatenate_layer([Zer79691,[[[[[0.3406, 0.1366]], [[0.7931, 0.9643]], [[0.7997, 0.9844]], [[0.2383, 0.1151]], [[0.3622, 0.2961]], [[0.4128, 0.8691]], [[0.3035, 0.5758]], [[0.0942, 0.4387]]], [[[0.3731, 0.9379]], [[0.2885, 0.3716]], [[0.331, 0.8468]], [[0.5967, 0.3684]], [[0.957, 0.2538]], [[0.6422, 0.0119]], [[0.2777, 0.6958]], [[0.5104, 0.015]]]]]], 4, Con4107), 
LMin18186 = minimum_layer([[[[[0.3526], [0.5037]], [[0.4957], [0.8985]]]], [[[[0.1245], [0.505]], [[0.6975], [0.5767]]]]], Min18186), 
LRes10135 = reshape_layer(Min18186, [2, 2, 1, 1], Res10135), 
LCon31864 = conv3D_transpose_layer(Res10135, 1, 2, 1,[[[[[0.4151], [0.6714], [0.983]]], [[[0.646], [0.6508], [0.4069]]]]],[0, 0, 0], 1, 4, 1, false, Con31864), 
LMul99235 = multiply_layer([Con4107,Con31864], Mul99235), 
exec_layers([LMin33127,LLay53349,LLea28299,LRes29698,LRes57733,LZer79691,LCon4107,LMin18186,LRes10135,LCon31864,LMul99235],["Min33127","Lay53349","Lea28299","Res29698","Res57733","Zer79691","Con4107","Min18186","Res10135","Con31864","Mul99235"],Mul99235,"Mul99235")

Actual (Unparsed): [[[[[0.0000000, 0.0284705, 0.0167176]], [[0.0000000, 0.0642606, 0.0488505]], [[0.0000000, 0.0000000, 0.0000000]], [[0.0000000, 0.0000000, 0.0000000]], [[0.0000000, 0.1224903, 0.1466101]], [[0.0000000, 0.1353191, 0.1781269]], [[-0.0000000, 0.0000000, 0.0000000]], [[0.0000000, 0.0000000, 0.0000000]]], [[[0.0000000, 0.1241725, 0.4570134]], [[0.0000000, 0.0930706, 0.0749518]], [[0.0000000, 0.0000000, 0.0000000]], [[0.0000000, 0.0000000, 0.0000000]], [[0.0000000, 0.3705469, 0.1438782]], [[0.0000000, 0.2410282, 0.0027924]], [[-0.0000000, 0.0000000, 0.0000000]], [[0.0000000, 0.0000000, 0.0000000]]]]]

Expected (Unparsed): [[[[[0.0,0.028470515580000005,0.016717586099999997]],[[0.0,0.06426061026,0.048850521915]],[[0,0.0,0.0]],[[0,0.0,0.0]],[[0.0,0.12249030999600001,0.14661009531]],[[0.0,0.13531912588800002,0.178126851123]],[[-0.0,0.0,0.0]],[[0.0,0.0,0.0]]],[[[0.0,0.12417252283799998,0.4570134404899999]],[[0.0,0.09307055005999999,0.07495184262799999]],[[0,0.0,0.0]],[[0,0.0,0.0]],[[0.0,0.37054693565999997,0.14387823018]],[[0.0,0.241028166392,0.002792444837]],[[-0.0,0.0,0.0]],[[0.0,0.0,0.0]]]]]

Actual:   [[[[[0, 0.0285, 0.0168]], [[0, 0.0643, 0.0489]], [[0, 0, 0]], [[0, 0, 0]], [[0, 0.1225, 0.1467]], [[0, 0.1354, 0.1782]], [[-0, 0, 0]], [[0, 0, 0]]], [[[0, 0.1242, 0.4571]], [[0, 0.0931, 0.075]], [[0, 0, 0]], [[0, 0, 0]], [[0, 0.3706, 0.1439]], [[0, 0.2411, 0.0028]], [[-0, 0, 0]], [[0, 0, 0]]]]]

Expected: [[[[[0, 0.0285, 0.0168]], [[0, 0.0643, 0.0489]], [[0, 0, 0]], [[0, 0, 0]], [[0, 0.1225, 0.1467]], [[0, 0.1354, 0.1782]], [[-0, 0, 0]], [[0, 0, 0]]], [[[0, 0.1242, 0.4571]], [[0, 0.0931, 0.075]], [[0, 0, 0]], [[0, 0, 0]], [[0, 0.3706, 0.1439]], [[0, 0.2411, 0.0028]], [[-0, 0, 0]], [[0, 0, 0]]]]]