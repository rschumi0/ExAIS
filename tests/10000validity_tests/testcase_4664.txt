import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Sep20823 = tf.keras.layers.Input(shape=([2, 2]))
in0Loc28844 = tf.keras.layers.Input(shape=([1, 1]))
in0Con13607 = tf.keras.layers.Input(shape=([197]))

Sep20823 = keras.layers.SeparableConv1D(3, (2),strides=(1), padding='valid', name = 'Sep20823', )(in0Sep20823)
Bat16334 = keras.layers.BatchNormalization(axis=1, epsilon=0.7894254288295867,  name = 'Bat16334', )(Sep20823)
Res55954 = keras.layers.Reshape((1, 3, 1), name = 'Res55954', )(Bat16334)
Con10911 = keras.layers.Conv2DTranspose(4, (1, 2),strides=(11, 2), padding='same', name = 'Con10911', )(Res55954)
Con38997 = keras.layers.Conv2D(3, (3, 4),strides=(1, 1), padding='same', dilation_rate=(1, 1), name = 'Con38997', )(Con10911)
Res51669 = keras.layers.Reshape((11, 18), name = 'Res51669', )(Con38997)
Fla23901 = keras.layers.Flatten(name = 'Fla23901', )(Res51669)
Loc28844 = keras.layers.LocallyConnected1D(2, (1),strides=(1), name = 'Loc28844', )(in0Loc28844)
Mas13309 = keras.layers.Masking(mask_value=2, name = 'Mas13309', )(Loc28844)
Res53978 = keras.layers.Reshape((1, 2, 1), name = 'Res53978', )(Mas13309)
Glo79548 = keras.layers.GlobalAveragePooling2D(name = 'Glo79548', )(Res53978)
Con13607 = keras.layers.Concatenate(axis=1, name = 'Con13607', )([Glo79548,in0Con13607])
Max76925 = keras.layers.Maximum(name = 'Max76925', )([Fla23901,Con13607])
model = tf.keras.models.Model(inputs=[in0Sep20823,in0Loc28844,in0Con13607], outputs=Max76925)
w = model.get_layer('Sep20823').get_weights() 
w[0] = np.array([[[0.6379], [0.3174]], [[0.7337], [0.9397]]])
w[1] = np.array([[[0.8007, 0.8744, 0.3547], [0.2751, 0.9407, 0.5527]]])
w[2] = np.array([0, 0, 0])
model.get_layer('Sep20823').set_weights(w) 
w = model.get_layer('Bat16334').get_weights() 
w[0] = np.array([0.4964])
w[1] = np.array([0.3375])
w[2] = np.array([0.7549])
w[3] = np.array([0.9369])
model.get_layer('Bat16334').set_weights(w) 
w = model.get_layer('Con10911').get_weights() 
w[0] = np.array([[[[0.3777], [0.6623], [0.6527], [0.7266]], [[0.4347], [0.3762], [0.5331], [0.4984]]]])
w[1] = np.array([0, 0, 0, 0])
model.get_layer('Con10911').set_weights(w) 
w = model.get_layer('Con38997').get_weights() 
w[0] = np.array([[[[0.3402, 0.207, 0.8734], [0.2742, 0.4712, 0.6828], [0.8869, 0.3296, 0.3389], [0.8153, 0.5009, 0.8282]], [[0.7326, 0.9219, 0.7501], [0.3289, 0.119, 0.9929], [0.3225, 0.0642, 0.9801], [0.9343, 0.1432, 0.7134]], [[0.6352, 0.2917, 0.6291], [0.6448, 0.1282, 0.4225], [0.6296, 0.6264, 0.9846], [0.0619, 0.6247, 0.4388]], [[0.7706, 0.3685, 0.7031], [0.9138, 0.4264, 0.8274], [0.2135, 0.6723, 0.2849], [0.8397, 0.7494, 0.2347]]], [[[0.5378, 0.4334, 0.3042], [0.2387, 0.6639, 0.2945], [0.0194, 0.2161, 0.9982], [0.234, 0.9338, 0.7492]], [[0.1853, 0.2831, 0.5408], [0.8584, 0.736, 0.8411], [0.7606, 0.157, 0.2843], [0.6858, 0.1423, 0.648]], [[0.4299, 0.2024, 0.7268], [0.0366, 0.2421, 0.886], [0.0183, 0.0858, 0.6005], [0.0292, 0.9436, 0.8495]], [[0.5528, 0.5201, 0.5079], [0.5869, 0.7808, 0.8429], [0.0961, 0.78, 0.083], [0.7008, 0.0152, 0.9592]]], [[[0.506, 0.1605, 0.9227], [0.9712, 0.3874, 0.8567], [0.2467, 0.9186, 0.1076], [0.5877, 0.5662, 0.2453]], [[0.7921, 0.5839, 0.19], [0.3461, 0.5525, 0.8393], [0.8505, 0.638, 0.1112], [0.1533, 0.5121, 0.2462]], [[0.8147, 0.9575, 0.781], [0.3314, 0.1082, 0.5685], [0.3011, 0.6112, 0.5179], [0.246, 0.8214, 0.815]], [[0.0666, 0.3194, 0.3276], [0.6503, 0.8364, 0.691], [0.7467, 0.3588, 0.0813], [0.2249, 0.2521, 0.0894]]]])
w[1] = np.array([0, 0, 0])
model.get_layer('Con38997').set_weights(w) 
w = model.get_layer('Loc28844').get_weights() 
w[0] = np.array([[[0.2249, 0.5508]]])
w[1] = np.array([[0, 0]])
model.get_layer('Loc28844').set_weights(w) 
in0Sep20823 = tf.constant([[[0.1456, 0.9772], [0.6999, 0.9776]]])
in0Loc28844 = tf.constant([[[0.228]]])
in0Con13607 = tf.constant([[0.3878, 0.7509, 0.1977, 0.6891, 0.7744, 0.0889, 0.7777, 0.9798, 0.3693, 0.2231, 0.7655, 0.8811, 0.8216, 0.4615, 0.518, 0.5853, 0.1391, 0.056, 0.754, 0.6607, 0.7532, 0.2781, 0.9566, 0.8891, 0.5063, 0.0031, 0.1062, 0.3782, 0.3835, 0.9967, 0.3452, 0.264, 0.2201, 0.759, 0.9138, 0.444, 0.9341, 0.6127, 0.8426, 0.5594, 0.0567, 0.7003, 0.4385, 0.8776, 0.4632, 0.694, 0.5599, 0.8198, 0.2438, 0.315, 0.0387, 0.6224, 0.5946, 0.2102, 0.3811, 0.0275, 0.4599, 0.3407, 0.0517, 0.9551, 0.4097, 0.7977, 0.2322, 0.8258, 0.8981, 0.8819, 0.9317, 0.5756, 0.617, 0.3577, 0.7254, 0.4321, 0.131, 0.0239, 0.1947, 0.2062, 0.3608, 0.1303, 0.3555, 0.1945, 0.7675, 0.7155, 0.9715, 0.7836, 0.2839, 0.6389, 0.6719, 0.5023, 0.1364, 0.9375, 0.2189, 0.5759, 0.7059, 0.1512, 0.104, 0.0046, 0.4884, 0.4283, 0.8903, 0.806, 0.0322, 0.5489, 0.365, 0.3465, 0.4525, 0.485, 0.6164, 0.6136, 0.7553, 0.753, 0.6096, 0.8779, 0.7359, 0.6106, 0.6968, 0.4378, 0.663, 0.0973, 0.772, 0.0429, 0.3058, 0.026, 0.4529, 0.1534, 0.1162, 0.2962, 0.7593, 0.4073, 0.5418, 0.3162, 0.2436, 0.5403, 0.5093, 0.8997, 0.4269, 0.5298, 0.0951, 0.7311, 0.6941, 0.9214, 0.2768, 0.3823, 0.5109, 0.1354, 0.4462, 0.91, 0.9386, 0.0482, 0.06, 0.2576, 0.9439, 0.2972, 0.3959, 0.0488, 0.9277, 0.5677, 0.8958, 0.8657, 0.2293, 0.5839, 0.9802, 0.7802, 0.1018, 0.6524, 0.5418, 0.7263, 0.8008, 0.3797, 0.5466, 0.2864, 0.9797, 0.6247, 0.3008, 0.6026, 0.5418, 0.8342, 0.9801, 0.4129, 0.4659, 0.6587, 0.9576, 0.6709, 0.8914, 0.1489, 0.317, 0.8043, 0.9245, 0.8909, 0.6922, 0.4393, 0.2126, 0.1577, 0.2351, 0.3302, 0.322, 0.5218, 0.0817]])
print (np.array2string(model.predict([in0Sep20823,in0Loc28844,in0Con13607],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Max76925.png')

LSep20823 = separable_conv1D_layer([[[0.1456, 0.9772], [0.6999, 0.9776]]], 2,[[[[0.6379], [0.3174]], [[0.7337], [0.9397]]],[[[0.8007, 0.8744, 0.3547], [0.2751, 0.9407, 0.5527]]]],[0, 0, 0], 1, false, Sep20823), 
LBat16334 = batch_normalization_layer(Sep20823, 1, 0.7894254288295867, [0.4964], [0.3375], [0.7549], [0.9369], Bat16334), 
LRes55954 = reshape_layer(Bat16334, [1, 3, 1], Res55954), 
LCon10911 = conv2D_transpose_layer(Res55954, 1, 2,[[[[0.3777], [0.6623], [0.6527], [0.7266]], [[0.4347], [0.3762], [0.5331], [0.4984]]]],[0, 0, 0, 0], 11, 2, true, Con10911), 
LCon38997 = conv2D_layer(Con10911, 3, 4,[[[[0.3402, 0.207, 0.8734], [0.2742, 0.4712, 0.6828], [0.8869, 0.3296, 0.3389], [0.8153, 0.5009, 0.8282]], [[0.7326, 0.9219, 0.7501], [0.3289, 0.119, 0.9929], [0.3225, 0.0642, 0.9801], [0.9343, 0.1432, 0.7134]], [[0.6352, 0.2917, 0.6291], [0.6448, 0.1282, 0.4225], [0.6296, 0.6264, 0.9846], [0.0619, 0.6247, 0.4388]], [[0.7706, 0.3685, 0.7031], [0.9138, 0.4264, 0.8274], [0.2135, 0.6723, 0.2849], [0.8397, 0.7494, 0.2347]]], [[[0.5378, 0.4334, 0.3042], [0.2387, 0.6639, 0.2945], [0.0194, 0.2161, 0.9982], [0.234, 0.9338, 0.7492]], [[0.1853, 0.2831, 0.5408], [0.8584, 0.736, 0.8411], [0.7606, 0.157, 0.2843], [0.6858, 0.1423, 0.648]], [[0.4299, 0.2024, 0.7268], [0.0366, 0.2421, 0.886], [0.0183, 0.0858, 0.6005], [0.0292, 0.9436, 0.8495]], [[0.5528, 0.5201, 0.5079], [0.5869, 0.7808, 0.8429], [0.0961, 0.78, 0.083], [0.7008, 0.0152, 0.9592]]], [[[0.506, 0.1605, 0.9227], [0.9712, 0.3874, 0.8567], [0.2467, 0.9186, 0.1076], [0.5877, 0.5662, 0.2453]], [[0.7921, 0.5839, 0.19], [0.3461, 0.5525, 0.8393], [0.8505, 0.638, 0.1112], [0.1533, 0.5121, 0.2462]], [[0.8147, 0.9575, 0.781], [0.3314, 0.1082, 0.5685], [0.3011, 0.6112, 0.5179], [0.246, 0.8214, 0.815]], [[0.0666, 0.3194, 0.3276], [0.6503, 0.8364, 0.691], [0.7467, 0.3588, 0.0813], [0.2249, 0.2521, 0.0894]]]],[0, 0, 0], 1, 1, true, 1, 1, Con38997), 
LRes51669 = reshape_layer(Con38997, [11, 18], Res51669), 
LFla23901 = flatten_layer(Res51669, Fla23901), 
LLoc28844 = locally_connected1D_layer([[[0.228]]], 1,[[[0.2249, 0.5508]]],[[0, 0]], 1, Loc28844), 
LMas13309 = masking_layer(Loc28844, 2, Mas13309), 
LRes53978 = reshape_layer(Mas13309, [1, 2, 1], Res53978), 
LGlo79548 = global_average_pooling2D_layer(Res53978, Glo79548), 
LCon13607 = concatenate_layer([Glo79548,[[0.3878, 0.7509, 0.1977, 0.6891, 0.7744, 0.0889, 0.7777, 0.9798, 0.3693, 0.2231, 0.7655, 0.8811, 0.8216, 0.4615, 0.518, 0.5853, 0.1391, 0.056, 0.754, 0.6607, 0.7532, 0.2781, 0.9566, 0.8891, 0.5063, 0.0031, 0.1062, 0.3782, 0.3835, 0.9967, 0.3452, 0.264, 0.2201, 0.759, 0.9138, 0.444, 0.9341, 0.6127, 0.8426, 0.5594, 0.0567, 0.7003, 0.4385, 0.8776, 0.4632, 0.694, 0.5599, 0.8198, 0.2438, 0.315, 0.0387, 0.6224, 0.5946, 0.2102, 0.3811, 0.0275, 0.4599, 0.3407, 0.0517, 0.9551, 0.4097, 0.7977, 0.2322, 0.8258, 0.8981, 0.8819, 0.9317, 0.5756, 0.617, 0.3577, 0.7254, 0.4321, 0.131, 0.0239, 0.1947, 0.2062, 0.3608, 0.1303, 0.3555, 0.1945, 0.7675, 0.7155, 0.9715, 0.7836, 0.2839, 0.6389, 0.6719, 0.5023, 0.1364, 0.9375, 0.2189, 0.5759, 0.7059, 0.1512, 0.104, 0.0046, 0.4884, 0.4283, 0.8903, 0.806, 0.0322, 0.5489, 0.365, 0.3465, 0.4525, 0.485, 0.6164, 0.6136, 0.7553, 0.753, 0.6096, 0.8779, 0.7359, 0.6106, 0.6968, 0.4378, 0.663, 0.0973, 0.772, 0.0429, 0.3058, 0.026, 0.4529, 0.1534, 0.1162, 0.2962, 0.7593, 0.4073, 0.5418, 0.3162, 0.2436, 0.5403, 0.5093, 0.8997, 0.4269, 0.5298, 0.0951, 0.7311, 0.6941, 0.9214, 0.2768, 0.3823, 0.5109, 0.1354, 0.4462, 0.91, 0.9386, 0.0482, 0.06, 0.2576, 0.9439, 0.2972, 0.3959, 0.0488, 0.9277, 0.5677, 0.8958, 0.8657, 0.2293, 0.5839, 0.9802, 0.7802, 0.1018, 0.6524, 0.5418, 0.7263, 0.8008, 0.3797, 0.5466, 0.2864, 0.9797, 0.6247, 0.3008, 0.6026, 0.5418, 0.8342, 0.9801, 0.4129, 0.4659, 0.6587, 0.9576, 0.6709, 0.8914, 0.1489, 0.317, 0.8043, 0.9245, 0.8909, 0.6922, 0.4393, 0.2126, 0.1577, 0.2351, 0.3302, 0.322, 0.5218, 0.0817]]], 1, Con13607), 
LMax76925 = maximum_layer([Fla23901,Con13607], Max76925), 
exec_layers([LSep20823,LBat16334,LRes55954,LCon10911,LCon38997,LRes51669,LFla23901,LLoc28844,LMas13309,LRes53978,LGlo79548,LCon13607,LMax76925],["Sep20823","Bat16334","Res55954","Con10911","Con38997","Res51669","Fla23901","Loc28844","Mas13309","Res53978","Glo79548","Con13607","Max76925"],Max76925,"Max76925")

Actual (Unparsed): [[1.4814998, 1.3939360, 2.0563269, 1.3613670, 2.0433888, 2.9404666, 1.9009437, 1.8824070, 2.9405381, 1.5901033, 2.1129043, 2.8887356, 1.0355600, 1.2856855, 1.8882676, 0.6611710, 0.7715231, 0.9878057, 1.9591791, 1.4748557, 1.9968492, 2.5397476, 2.0073617, 2.7868326, 2.6170266, 1.7603031, 3.1611103, 2.6760997, 1.8714649, 3.1165608, 1.6643676, 1.0210315, 2.1256076, 0.9992282, 0.7590000, 1.2417343, 0.4440000, 0.9341000, 0.6127000, 0.8426000, 0.5594000, 0.0567000, 0.7003000, 0.4385000, 0.8776000, 0.4632000, 0.6940000, 0.5599000, 0.8198000, 0.2438000, 0.3150000, 0.0387000, 0.6224000, 0.5946000, 0.2102000, 0.3811000, 0.0275000, 0.4599000, 0.3407000, 0.0517000, 0.9551000, 0.4097000, 0.7977000, 0.2322000, 0.8258000, 0.8981000, 0.8819000, 0.9317000, 0.5756000, 0.6170000, 0.3577000, 0.7254000, 0.4321000, 0.1310000, 0.0239000, 0.1947000, 0.2062000, 0.3608000, 0.1303000, 0.3555000, 0.1945000, 0.7675000, 0.7155000, 0.9715000, 0.7836000, 0.2839000, 0.6389000, 0.6719000, 0.5023000, 0.1364000, 0.9375000, 0.2189000, 0.5759000, 0.7059000, 0.1512000, 0.1040000, 0.0046000, 0.4884000, 0.4283000, 0.8903000, 0.8060000, 0.0322000, 0.5489000, 0.3650000, 0.3465000, 0.4525000, 0.4850000, 0.6164000, 0.6136000, 0.7553000, 0.7530000, 0.6096000, 0.8779000, 0.7359000, 0.6106000, 0.6968000, 0.4378000, 0.6630000, 0.0973000, 0.7720000, 0.0429000, 0.3058000, 0.0260000, 0.4529000, 0.1534000, 0.1162000, 0.2962000, 0.7593000, 0.4073000, 0.5418000, 0.3162000, 0.2436000, 0.5403000, 0.5093000, 0.8997000, 0.4269000, 0.5298000, 0.0951000, 0.7311000, 0.6941000, 0.9214000, 0.2768000, 0.3823000, 0.5109000, 0.1354000, 0.4462000, 0.9100000, 0.9386000, 0.0482000, 0.0600000, 0.2576000, 0.9439000, 0.2972000, 0.3959000, 0.0488000, 0.9277000, 0.5677000, 0.8958000, 0.8657000, 0.2293000, 0.5839000, 0.9802000, 0.7802000, 0.1018000, 0.6524000, 0.5418000, 0.7263000, 0.8008000, 0.3797000, 0.5466000, 0.2864000, 0.9797000, 0.6247000, 0.3008000, 0.6026000, 0.5418000, 0.8342000, 0.9801000, 0.4129000, 0.4659000, 0.6587000, 0.9576000, 0.6709000, 0.8914000, 0.1489000, 0.3170000, 0.8043000, 0.9245000, 0.8909000, 0.6922000, 0.4393000, 0.2126000, 0.1577000, 0.2351000, 0.3302000, 0.3220000, 0.5218000, 0.0817000]]

Expected (Unparsed): [[1.4814998074072392,1.3939360042346882,2.056326965439377,1.3613670421446005,2.0433888195650978,2.940466646056893,1.900943701635112,1.8824070890994506,2.940538151223893,1.5901033760989984,2.1129043068510325,2.888735653415189,1.0355600596933752,1.2856855551374102,1.8882676797433822,0.6611710327511676,0.7715231097503332,0.9878057182130686,1.9591791917486099,1.47485568570288,1.9968492352008842,2.5397476647696067,2.007361746555787,2.7868326834265935,2.6170266171805454,1.7603031448349962,3.1611103258556716,2.676099762006554,1.8714649325863406,3.116560855464884,1.6643676051609746,1.021031555439447,2.125607692619219,0.9992282707914973,0.759,1.2417342835500378,0.444,0.9341,0.6127,0.8426,0.5594,0.0567,0.7003,0.4385,0.8776,0.4632,0.694,0.5599,0.8198,0.2438,0.315,0.0387,0.6224,0.5946,0.2102,0.3811,0.0275,0.4599,0.3407,0.0517,0.9551,0.4097,0.7977,0.2322,0.8258,0.8981,0.8819,0.9317,0.5756,0.617,0.3577,0.7254,0.4321,0.131,0.0239,0.1947,0.2062,0.3608,0.1303,0.3555,0.1945,0.7675,0.7155,0.9715,0.7836,0.2839,0.6389,0.6719,0.5023,0.1364,0.9375,0.2189,0.5759,0.7059,0.1512,0.104,0.0046,0.4884,0.4283,0.8903,0.806,0.0322,0.5489,0.365,0.3465,0.4525,0.485,0.6164,0.6136,0.7553,0.753,0.6096,0.8779,0.7359,0.6106,0.6968,0.4378,0.663,0.0973,0.772,0.0429,0.3058,0.026,0.4529,0.1534,0.1162,0.2962,0.7593,0.4073,0.5418,0.3162,0.2436,0.5403,0.5093,0.8997,0.4269,0.5298,0.0951,0.7311,0.6941,0.9214,0.2768,0.3823,0.5109,0.1354,0.4462,0.91,0.9386,0.0482,0.06,0.2576,0.9439,0.2972,0.3959,0.0488,0.9277,0.5677,0.8958,0.8657,0.2293,0.5839,0.9802,0.7802,0.1018,0.6524,0.5418,0.7263,0.8008,0.3797,0.5466,0.2864,0.9797,0.6247,0.3008,0.6026,0.5418,0.8342,0.9801,0.4129,0.4659,0.6587,0.9576,0.6709,0.8914,0.1489,0.317,0.8043,0.9245,0.8909,0.6922,0.4393,0.2126,0.1577,0.2351,0.3302,0.322,0.5218,0.0817]]

Actual:   [[1.4815, 1.394, 2.0564, 1.3614, 2.0434, 2.9405, 1.901, 1.8825, 2.9406, 1.5902, 2.113, 2.8888, 1.0356, 1.2857, 1.8883, 0.6612, 0.7716, 0.9879, 1.9592, 1.4749, 1.9969, 2.5398, 2.0074, 2.7869, 2.6171, 1.7604, 3.1612, 2.6761, 1.8715, 3.1166, 1.6644, 1.0211, 2.1257, 0.9993, 0.759, 1.2418, 0.444, 0.9341, 0.6127, 0.8426, 0.5594, 0.0567, 0.7003, 0.4385, 0.8776, 0.4632, 0.694, 0.5599, 0.8198, 0.2438, 0.315, 0.0387, 0.6224, 0.5946, 0.2102, 0.3811, 0.0275, 0.4599, 0.3407, 0.0517, 0.9551, 0.4097, 0.7977, 0.2322, 0.8258, 0.8981, 0.8819, 0.9317, 0.5756, 0.617, 0.3577, 0.7254, 0.4321, 0.131, 0.0239, 0.1947, 0.2062, 0.3608, 0.1303, 0.3555, 0.1945, 0.7675, 0.7155, 0.9715, 0.7836, 0.2839, 0.6389, 0.6719, 0.5023, 0.1364, 0.9375, 0.2189, 0.5759, 0.7059, 0.1512, 0.104, 0.0046, 0.4884, 0.4283, 0.8903, 0.806, 0.0322, 0.5489, 0.365, 0.3465, 0.4525, 0.485, 0.6164, 0.6136, 0.7553, 0.753, 0.6096, 0.8779, 0.7359, 0.6106, 0.6968, 0.4378, 0.663, 0.0973, 0.772, 0.0429, 0.3058, 0.026, 0.4529, 0.1534, 0.1162, 0.2962, 0.7593, 0.4073, 0.5418, 0.3162, 0.2436, 0.5403, 0.5093, 0.8997, 0.4269, 0.5298, 0.0951, 0.7311, 0.6941, 0.9214, 0.2768, 0.3823, 0.5109, 0.1354, 0.4462, 0.91, 0.9386, 0.0482, 0.06, 0.2576, 0.9439, 0.2972, 0.3959, 0.0488, 0.9277, 0.5677, 0.8958, 0.8657, 0.2293, 0.5839, 0.9802, 0.7802, 0.1018, 0.6524, 0.5418, 0.7263, 0.8008, 0.3797, 0.5466, 0.2864, 0.9797, 0.6247, 0.3008, 0.6026, 0.5418, 0.8342, 0.9801, 0.4129, 0.4659, 0.6587, 0.9576, 0.6709, 0.8914, 0.1489, 0.317, 0.8043, 0.9245, 0.8909, 0.6922, 0.4393, 0.2126, 0.1577, 0.2351, 0.3302, 0.322, 0.5218, 0.0817]]

Expected: [[1.4815, 1.394, 2.0564, 1.3614, 2.0434, 2.9405, 1.901, 1.8825, 2.9406, 1.5902, 2.113, 2.8888, 1.0356, 1.2857, 1.8883, 0.6612, 0.7716, 0.9879, 1.9592, 1.4749, 1.9969, 2.5398, 2.0074, 2.7869, 2.6171, 1.7604, 3.1612, 2.6761, 1.8715, 3.1166, 1.6644, 1.0211, 2.1257, 0.9993, 0.759, 1.2418, 0.444, 0.9341, 0.6127, 0.8426, 0.5594, 0.0567, 0.7003, 0.4385, 0.8776, 0.4632, 0.694, 0.5599, 0.8198, 0.2438, 0.315, 0.0387, 0.6224, 0.5946, 0.2102, 0.3811, 0.0275, 0.4599, 0.3407, 0.0517, 0.9551, 0.4097, 0.7977, 0.2322, 0.8258, 0.8981, 0.8819, 0.9317, 0.5756, 0.617, 0.3577, 0.7254, 0.4321, 0.131, 0.0239, 0.1947, 0.2062, 0.3608, 0.1303, 0.3555, 0.1945, 0.7675, 0.7155, 0.9715, 0.7836, 0.2839, 0.6389, 0.6719, 0.5023, 0.1364, 0.9375, 0.2189, 0.5759, 0.7059, 0.1512, 0.104, 0.0046, 0.4884, 0.4283, 0.8903, 0.806, 0.0322, 0.5489, 0.365, 0.3465, 0.4525, 0.485, 0.6164, 0.6136, 0.7553, 0.753, 0.6096, 0.8779, 0.7359, 0.6106, 0.6968, 0.4378, 0.663, 0.0973, 0.772, 0.0429, 0.3058, 0.026, 0.4529, 0.1534, 0.1162, 0.2962, 0.7593, 0.4073, 0.5418, 0.3162, 0.2436, 0.5403, 0.5093, 0.8997, 0.4269, 0.5298, 0.0951, 0.7311, 0.6941, 0.9214, 0.2768, 0.3823, 0.5109, 0.1354, 0.4462, 0.91, 0.9386, 0.0482, 0.06, 0.2576, 0.9439, 0.2972, 0.3959, 0.0488, 0.9277, 0.5677, 0.8958, 0.8657, 0.2293, 0.5839, 0.9802, 0.7802, 0.1018, 0.6524, 0.5418, 0.7263, 0.8008, 0.3797, 0.5466, 0.2864, 0.9797, 0.6247, 0.3008, 0.6026, 0.5418, 0.8342, 0.9801, 0.4129, 0.4659, 0.6587, 0.9576, 0.6709, 0.8914, 0.1489, 0.317, 0.8043, 0.9245, 0.8909, 0.6922, 0.4393, 0.2126, 0.1577, 0.2351, 0.3302, 0.322, 0.5218, 0.0817]]