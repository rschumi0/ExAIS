import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Add82151 = tf.keras.layers.Input(shape=([1, 2, 1]))
in1Add82151 = tf.keras.layers.Input(shape=([1, 2, 1]))
in0Zer54945 = tf.keras.layers.Input(shape=([2, 4]))

Add82151 = keras.layers.Add(name = 'Add82151', )([in0Add82151,in1Add82151])
Zer54945 = keras.layers.ZeroPadding1D(padding=((1, 1)), name = 'Zer54945', )(in0Zer54945)
Res75055 = keras.layers.Reshape((4, 4, 1), name = 'Res75055', )(Zer54945)
Res4926 = keras.layers.Reshape((4, 4, 1, 1), name = 'Res4926', )(Res75055)
Up_9297 = keras.layers.UpSampling3D(size=(1, 2, 2), name = 'Up_9297', )(Res4926)
Res5257 = keras.layers.Reshape((4, 8, 2), name = 'Res5257', )(Up_9297)
Res86837 = keras.layers.Reshape((4, 16), name = 'Res86837', )(Res5257)
Loc47519 = keras.layers.LocallyConnected1D(2, (1),strides=(4), name = 'Loc47519', )(Res86837)
Res97981 = keras.layers.Reshape((1, 2, 1), name = 'Res97981', )(Loc47519)
PRe36419 = keras.layers.PReLU(name = 'PRe36419', )(Res97981)
Mul70890 = keras.layers.Multiply(name = 'Mul70890', )([Add82151,PRe36419])
model = tf.keras.models.Model(inputs=[in0Add82151,in1Add82151,in0Zer54945], outputs=Mul70890)
w = model.get_layer('Loc47519').get_weights() 
w[0] = np.array([[[0.6135, 0.8833], [0.9018, 0.455], [0.8078, 0.6341], [0.1774, 0.0854], [0.2625, 0.6317], [0.888, 0.4436], [0.5112, 0.1315], [0.1748, 0.6923], [0.6773, 0.8856], [0.0891, 0.9466], [0.5495, 0.1428], [0.7555, 0.8857], [0.7516, 0.2562], [0.2525, 0.5061], [0.3554, 0.4839], [0.8631, 0.8927]]])
w[1] = np.array([[0, 0]])
model.get_layer('Loc47519').set_weights(w) 
w = model.get_layer('PRe36419').get_weights() 
w[0] = np.array([[[0.2201], [0.3169]]])
model.get_layer('PRe36419').set_weights(w) 
in0Add82151 = tf.constant([[[[0.411], [0.9856]]]])
in1Add82151 = tf.constant([[[[0.4204], [0.7363]]]])
in0Zer54945 = tf.constant([[[1.6924, 1.4848, 1.0671, 1.6276], [1.377, 1.6861, 1.9546, 1.4481]]])
print (np.array2string(model.predict([in0Add82151,in1Add82151,in0Zer54945],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Mul70890.png')

LAdd82151 = add_layer([[[[[0.411], [0.9856]]]], [[[[0.4204], [0.7363]]]]], Add82151), 
LZer54945 = zero_padding1D_layer([[[1.6924, 1.4848, 1.0671, 1.6276], [1.377, 1.6861, 1.9546, 1.4481]]], 1, 1, Zer54945), 
LRes75055 = reshape_layer(Zer54945, [4, 4, 1], Res75055), 
LRes4926 = reshape_layer(Res75055, [4, 4, 1, 1], Res4926), 
LUp_9297 = up_sampling3D_layer(Res4926, 1, 2, 2, Up_9297), 
LRes5257 = reshape_layer(Up_9297, [4, 8, 2], Res5257), 
LRes86837 = reshape_layer(Res5257, [4, 16], Res86837), 
LLoc47519 = locally_connected1D_layer(Res86837, 1,[[[0.6135, 0.8833], [0.9018, 0.455], [0.8078, 0.6341], [0.1774, 0.0854], [0.2625, 0.6317], [0.888, 0.4436], [0.5112, 0.1315], [0.1748, 0.6923], [0.6773, 0.8856], [0.0891, 0.9466], [0.5495, 0.1428], [0.7555, 0.8857], [0.7516, 0.2562], [0.2525, 0.5061], [0.3554, 0.4839], [0.8631, 0.8927]]],[[0, 0]], 4, Loc47519), 
LRes97981 = reshape_layer(Loc47519, [1, 2, 1], Res97981), 
LPRe36419 = prelu_layer(Res97981, [[[0.2201], [0.3169]]], PRe36419), 
LMul70890 = multiply_layer([Add82151,PRe36419], Mul70890), 
exec_layers([LAdd82151,LZer54945,LRes75055,LRes4926,LUp_9297,LRes5257,LRes86837,LLoc47519,LRes97981,LPRe36419,LMul70890],["Add82151","Zer54945","Res75055","Res4926","Up_9297","Res5257","Res86837","Loc47519","Res97981","PRe36419","Mul70890"],Mul70890,"Mul70890")

Actual (Unparsed): [[[[0.0000000], [0.0000000]]]]

Expected (Unparsed): [[[[0.0],[0.0]]]]

Actual:   [[[[0], [0]]]]

Expected: [[[[0], [0]]]]