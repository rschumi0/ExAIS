import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Lea52722 = tf.keras.layers.Input(shape=([1, 1]))

Lea52722 = keras.layers.LeakyReLU(alpha=4.636792800753421, name = 'Lea52722', input_shape=(1, 1))(in0Lea52722)
Res3424 = keras.layers.Reshape((1, 1, 1), name = 'Res3424', )(Lea52722)
Res87011 = keras.layers.Reshape((1, 1, 1, 1), name = 'Res87011', )(Res3424)
Con504 = keras.layers.Conv3D(2, (1, 1, 1),strides=(1, 1, 1), padding='same', dilation_rate=(1, 1, 1), name = 'Con504', )(Res87011)
Fla70898 = keras.layers.Flatten(name = 'Fla70898', )(Con504)
model = tf.keras.models.Model(inputs=[in0Lea52722], outputs=Fla70898)
w = model.get_layer('Con504').get_weights() 
w[0] = np.array([[[[[0.4445, 0.9985]]]]])
w[1] = np.array([0, 0])
model.get_layer('Con504').set_weights(w) 
in0Lea52722 = tf.constant([[[0.4578]]])
print (np.array2string(model.predict([in0Lea52722],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Fla70898.png')

LLea52722 = leaky_relu_layer([[[0.4578]]], 4.636792800753421, Lea52722), 
LRes3424 = reshape_layer(Lea52722, [1, 1, 1], Res3424), 
LRes87011 = reshape_layer(Res3424, [1, 1, 1, 1], Res87011), 
LCon504 = conv3D_layer(Res87011, 1, 1, 1,[[[[[0.4445, 0.9985]]]]],[0, 0], 1, 1, 1, true, 1, 1, 1, Con504), 
LFla70898 = flatten_layer(Con504, Fla70898), 
exec_layers([LLea52722,LRes3424,LRes87011,LCon504,LFla70898],["Lea52722","Res3424","Res87011","Con504","Fla70898"],Fla70898,"Fla70898")

Actual (Unparsed): [[0.2034921, 0.4571133]]

Expected (Unparsed): [[0.2034921,0.4571133]]

Actual:   [[0.2035, 0.4572]]

Expected: [[0.2035, 0.4572]]