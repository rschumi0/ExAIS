import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Add22940 = tf.keras.layers.Input(shape=([1, 1]))
in1Add22940 = tf.keras.layers.Input(shape=([1, 1]))
in0Con15866 = tf.keras.layers.Input(shape=([1, 2, 1, 1]))
in0Ave28908 = tf.keras.layers.Input(shape=([1, 2, 1, 2]))
in1Ave28908 = tf.keras.layers.Input(shape=([1, 2, 1, 2]))
in0Con46349 = tf.keras.layers.Input(shape=([5]))
in0Dot13080 = tf.keras.layers.Input(shape=([3, 3]))
in1Dot13080 = tf.keras.layers.Input(shape=([3, 3]))
in0Sim9327 = tf.keras.layers.Input(shape=([3, 1]))
in0Con3702 = tf.keras.layers.Input(shape=([7]))

Add22940 = keras.layers.Add(name = 'Add22940', )([in0Add22940,in1Add22940])
Res58844 = keras.layers.Reshape((1, 1, 1), name = 'Res58844', )(Add22940)
Res1312 = keras.layers.Reshape((1, 1, 1, 1), name = 'Res1312', )(Res58844)
Zer12199 = keras.layers.ZeroPadding3D(padding=((0, 0), (1, 0), (0, 0)), name = 'Zer12199', )(Res1312)
Con15866 = keras.layers.Concatenate(axis=4, name = 'Con15866', )([Zer12199,in0Con15866])
Ave28908 = keras.layers.Average(name = 'Ave28908', )([in0Ave28908,in1Ave28908])
Min50075 = keras.layers.Minimum(name = 'Min50075', )([Con15866,Ave28908])
Res35698 = keras.layers.Reshape((1, 2, 2), name = 'Res35698', )(Min50075)
Res7437 = keras.layers.Reshape((1, 4), name = 'Res7437', )(Res35698)
Fla74575 = keras.layers.Flatten(name = 'Fla74575', )(Res7437)
Con46349 = keras.layers.Concatenate(axis=1, name = 'Con46349', )([Fla74575,in0Con46349])
Dot13080 = keras.layers.Dot(axes=(2, 2), name = 'Dot13080', )([in0Dot13080,in1Dot13080])
Fla98160 = keras.layers.Flatten(name = 'Fla98160', )(Dot13080)
Sim9327 = keras.layers.SimpleRNN(2,name = 'Sim9327', )(in0Sim9327)
Con3702 = keras.layers.Concatenate(axis=1, name = 'Con3702', )([Sim9327,in0Con3702])
Mul36620 = keras.layers.Multiply(name = 'Mul36620', )([Fla98160,Con3702])
Ave38655 = keras.layers.Average(name = 'Ave38655', )([Con46349,Mul36620])
Res27370 = keras.layers.Reshape((9, 1), name = 'Res27370', )(Ave38655)
Con39055 = keras.layers.Conv1D(4, (2),strides=(8), padding='same', dilation_rate=(1), name = 'Con39055', )(Res27370)
model = tf.keras.models.Model(inputs=[in0Add22940,in1Add22940,in0Con15866,in0Ave28908,in1Ave28908,in0Con46349,in0Dot13080,in1Dot13080,in0Sim9327,in0Con3702], outputs=Con39055)
w = model.get_layer('Sim9327').get_weights() 
w[0] = np.array([[8, 4]])
w[1] = np.array([[2, 10], [1, 5]])
w[2] = np.array([7, 9])
model.get_layer('Sim9327').set_weights(w) 
w = model.get_layer('Con39055').get_weights() 
w[0] = np.array([[[0.4226, 0.2226, 0.6971, 0.4015]], [[0.1421, 0.7535, 0.9158, 0.1874]]])
w[1] = np.array([0, 0, 0, 0])
model.get_layer('Con39055').set_weights(w) 
in0Add22940 = tf.constant([[[0.0744]]])
in1Add22940 = tf.constant([[[0.5916]]])
in0Con15866 = tf.constant([[[[[0.7862]], [[0.8109]]]]])
in0Ave28908 = tf.constant([[[[[0.8774, 0.6597]], [[0.435, 0.4525]]]]])
in1Ave28908 = tf.constant([[[[[0.1406, 0.8243]], [[0.9484, 0.7573]]]]])
in0Con46349 = tf.constant([[0.6599, 0.5518, 0.7645, 0.1812, 0.4189]])
in0Dot13080 = tf.constant([[[0.3326, 0.0103, 0.663], [0.1786, 0.6153, 0.2482], [0.2102, 0.6781, 0.3238]]])
in1Dot13080 = tf.constant([[[0.9184, 0.9081, 0.3374], [0.1346, 0.7193, 0.5107], [0.7244, 0.05, 0.0715]]])
in0Sim9327 = tf.constant([[[9], [10], [10]]])
in0Con3702 = tf.constant([[0.4033, 0.7595, 0.0146, 0.9965, 0.2557, 0.2341, 0.1944]])
print (np.array2string(model.predict([in0Add22940,in1Add22940,in0Con15866,in0Ave28908,in1Ave28908,in0Con46349,in0Dot13080,in1Dot13080,in0Sim9327,in0Con3702],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Con39055.png')

LAdd22940 = add_layer([[[[0.0744]]], [[[0.5916]]]], Add22940), 
LRes58844 = reshape_layer(Add22940, [1, 1, 1], Res58844), 
LRes1312 = reshape_layer(Res58844, [1, 1, 1, 1], Res1312), 
LZer12199 = zero_padding3D_layer(Res1312, 0, 0, 1, 0, 0, 0, Zer12199), 
LCon15866 = concatenate_layer([Zer12199,[[[[[0.7862]], [[0.8109]]]]]], 4, Con15866), 
LAve28908 = average_layer([[[[[[0.8774, 0.6597]], [[0.435, 0.4525]]]]], [[[[[0.1406, 0.8243]], [[0.9484, 0.7573]]]]]], Ave28908), 
LMin50075 = minimum_layer([Con15866,Ave28908], Min50075), 
LRes35698 = reshape_layer(Min50075, [1, 2, 2], Res35698), 
LRes7437 = reshape_layer(Res35698, [1, 4], Res7437), 
LFla74575 = flatten_layer(Res7437, Fla74575), 
LCon46349 = concatenate_layer([Fla74575,[[0.6599, 0.5518, 0.7645, 0.1812, 0.4189]]], 1, Con46349), 
LDot13080 = dot_layer([[[0.3326, 0.0103, 0.663], [0.1786, 0.6153, 0.2482], [0.2102, 0.6781, 0.3238]]], [[[0.9184, 0.9081, 0.3374], [0.1346, 0.7193, 0.5107], [0.7244, 0.05, 0.0715]]], 2, 2, Dot13080), 
LFla98160 = flatten_layer(Dot13080, Fla98160), 
LSim9327 = simple_rnn_layer([[[9], [10], [10]]],[[8, 4]],[[2, 10], [1, 5]],[7, 9], Sim9327), 
LCon3702 = concatenate_layer([Sim9327,[[0.4033, 0.7595, 0.0146, 0.9965, 0.2557, 0.2341, 0.1944]]], 1, Con3702), 
LMul36620 = multiply_layer([Fla98160,Con3702], Mul36620), 
LAve38655 = average_layer([Con46349,Mul36620], Ave38655), 
LRes27370 = reshape_layer(Ave38655, [9, 1], Res27370), 
LCon39055 = conv1D_layer(Res27370, 2,[[[0.4226, 0.2226, 0.6971, 0.4015]], [[0.1421, 0.7535, 0.9158, 0.1874]]],[0, 0, 0, 0], 8, true, 1, Con39055), 
exec_layers([LAdd22940,LRes58844,LRes1312,LZer12199,LCon15866,LAve28908,LMin50075,LRes35698,LRes7437,LFla74575,LCon46349,LDot13080,LFla98160,LSim9327,LCon3702,LMul36620,LAve38655,LRes27370,LCon39055],["Add22940","Res58844","Res1312","Zer12199","Con15866","Ave28908","Min50075","Res35698","Res7437","Fla74575","Con46349","Dot13080","Fla98160","Sim9327","Con3702","Mul36620","Ave38655","Res27370","Con39055"],Con39055,"Con39055")

Actual (Unparsed): [[[0.1942704, 0.4867075, 0.7063932, 0.2142464], [0.0971120, 0.0511527, 0.1601911, 0.0922633]]]

Expected (Unparsed): [[[0.19427041990349997,0.48670752174849996,0.7063932479835,0.2142464047475],[0.0971119782384976,0.051152688963297596,0.1601911027687096,0.092263273219964]]]

Actual:   [[[0.1943, 0.4868, 0.7064, 0.2143], [0.0972, 0.0512, 0.1602, 0.0923]]]

Expected: [[[0.1943, 0.4868, 0.7064, 0.2143], [0.0972, 0.0512, 0.1602, 0.0923]]]