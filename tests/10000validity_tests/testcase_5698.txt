import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Ave7488 = tf.keras.layers.Input(shape=([1, 1]))
in1Ave7488 = tf.keras.layers.Input(shape=([1, 1]))
in0Ave96628 = tf.keras.layers.Input(shape=([1, 2]))
in1Ave96628 = tf.keras.layers.Input(shape=([1, 2]))
in0Con19126 = tf.keras.layers.Input(shape=([3, 5, 3, 2]))
in0Con55243 = tf.keras.layers.Input(shape=([1, 2, 1, 1]))

Ave7488 = keras.layers.Average(name = 'Ave7488', )([in0Ave7488,in1Ave7488])
Fla97203 = keras.layers.Flatten(name = 'Fla97203', )(Ave7488)
Ave96628 = keras.layers.Average(name = 'Ave96628', )([in0Ave96628,in1Ave96628])
Res18616 = keras.layers.Reshape((1, 2, 1), name = 'Res18616', )(Ave96628)
Glo78194 = keras.layers.GlobalAveragePooling2D(name = 'Glo78194', )(Res18616)
Mul91878 = keras.layers.Multiply(name = 'Mul91878', )([Fla97203,Glo78194])
Res71531 = keras.layers.Reshape((1, 1), name = 'Res71531', )(Mul91878)
Res14987 = keras.layers.Reshape((1, 1, 1), name = 'Res14987', )(Res71531)
Res72024 = keras.layers.Reshape((1, 1, 1, 1), name = 'Res72024', )(Res14987)
Zer93394 = keras.layers.ZeroPadding3D(padding=((2, 0), (4, 0), (2, 0)), name = 'Zer93394', )(Res72024)
Con19126 = keras.layers.Concatenate(axis=4, name = 'Con19126', )([Zer93394,in0Con19126])
Con55243 = keras.layers.Conv3DTranspose(3, (1, 2, 1),strides=(1, 1, 1), padding='valid', name = 'Con55243', )(in0Con55243)
Zer40837 = keras.layers.ZeroPadding3D(padding=((1, 1), (1, 1), (1, 1)), name = 'Zer40837', )(Con55243)
Add2014 = keras.layers.Add(name = 'Add2014', )([Con19126,Zer40837])
Con33552 = keras.layers.Conv3D(4, (2, 1, 1),strides=(1, 1, 1), padding='valid', dilation_rate=(1, 1, 1), name = 'Con33552', )(Add2014)
model = tf.keras.models.Model(inputs=[in0Ave7488,in1Ave7488,in0Ave96628,in1Ave96628,in0Con19126,in0Con55243], outputs=Con33552)
w = model.get_layer('Con55243').get_weights() 
w[0] = np.array([[[[[0.3502], [0.8356], [0.6211]]], [[[0.6966], [0.6587], [0.5567]]]]])
w[1] = np.array([0, 0, 0])
model.get_layer('Con55243').set_weights(w) 
w = model.get_layer('Con33552').get_weights() 
w[0] = np.array([[[[[0.7772, 0.0038, 0.0836, 0.8479], [0.7541, 0.7481, 0.8295, 0.5979], [0.8964, 0.9662, 0.3077, 0.9522]]]], [[[[0.7046, 0.5418, 0.9711, 0.3189], [0.9333, 0.0969, 0.4193, 0.1556], [0.2349, 0.582, 0.3065, 0.2624]]]]])
w[1] = np.array([0, 0, 0, 0])
model.get_layer('Con33552').set_weights(w) 
in0Ave7488 = tf.constant([[[0.8458]]])
in1Ave7488 = tf.constant([[[0.4528]]])
in0Ave96628 = tf.constant([[[0.3797, 0.7815]]])
in1Ave96628 = tf.constant([[[0.611, 0.5748]]])
in0Con19126 = tf.constant([[[[[0.4435, 0.5828], [0.6562, 0.3324], [0.0632, 0.3119]], [[0.6943, 0.0767], [0.0971, 0.4344], [0.4985, 0.674]], [[0.2964, 0.0052], [0.8707, 0.1889], [0.256, 0.46]], [[0.7911, 0.44], [0.7954, 0.2763], [0.0266, 0.4065]], [[0.8872, 0.2325], [0.3863, 0.4478], [0.8752, 0.5516]]], [[[0.7824, 0.1986], [0.5279, 0.904], [0.6295, 0.3872]], [[0.6789, 0.5817], [0.4059, 0.3711], [0.8226, 0.155]], [[0.3897, 0.8805], [0.0521, 0.5766], [0.6831, 0.3213]], [[0.1542, 0.0051], [0.6428, 0.9975], [0.5078, 0.5885]], [[0.7436, 0.7857], [0.6739, 0.0688], [0.7236, 0.1164]]], [[[0.2076, 0.3475], [0.5788, 0.6008], [0.2775, 0.0864]], [[0.6075, 0.2775], [0.1336, 0.0089], [0.2409, 0.2483]], [[0.33, 0.814], [0.8363, 0.4234], [0.8789, 0.5187]], [[0.9614, 0.2011], [0.19, 0.6035], [0.9509, 0.1701]], [[0.7306, 0.5531], [0.6768, 0.3431], [0.8334, 0.2542]]]]])
in0Con55243 = tf.constant([[[[[0.853]], [[0.0533]]]]])
print (np.array2string(model.predict([in0Ave7488,in1Ave7488,in0Ave96628,in1Ave96628,in0Con19126,in0Con55243],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Con33552.png')

LAve7488 = average_layer([[[[0.8458]]], [[[0.4528]]]], Ave7488), 
LFla97203 = flatten_layer(Ave7488, Fla97203), 
LAve96628 = average_layer([[[[0.3797, 0.7815]]], [[[0.611, 0.5748]]]], Ave96628), 
LRes18616 = reshape_layer(Ave96628, [1, 2, 1], Res18616), 
LGlo78194 = global_average_pooling2D_layer(Res18616, Glo78194), 
LMul91878 = multiply_layer([Fla97203,Glo78194], Mul91878), 
LRes71531 = reshape_layer(Mul91878, [1, 1], Res71531), 
LRes14987 = reshape_layer(Res71531, [1, 1, 1], Res14987), 
LRes72024 = reshape_layer(Res14987, [1, 1, 1, 1], Res72024), 
LZer93394 = zero_padding3D_layer(Res72024, 2, 0, 4, 0, 2, 0, Zer93394), 
LCon19126 = concatenate_layer([Zer93394,[[[[[0.4435, 0.5828], [0.6562, 0.3324], [0.0632, 0.3119]], [[0.6943, 0.0767], [0.0971, 0.4344], [0.4985, 0.674]], [[0.2964, 0.0052], [0.8707, 0.1889], [0.256, 0.46]], [[0.7911, 0.44], [0.7954, 0.2763], [0.0266, 0.4065]], [[0.8872, 0.2325], [0.3863, 0.4478], [0.8752, 0.5516]]], [[[0.7824, 0.1986], [0.5279, 0.904], [0.6295, 0.3872]], [[0.6789, 0.5817], [0.4059, 0.3711], [0.8226, 0.155]], [[0.3897, 0.8805], [0.0521, 0.5766], [0.6831, 0.3213]], [[0.1542, 0.0051], [0.6428, 0.9975], [0.5078, 0.5885]], [[0.7436, 0.7857], [0.6739, 0.0688], [0.7236, 0.1164]]], [[[0.2076, 0.3475], [0.5788, 0.6008], [0.2775, 0.0864]], [[0.6075, 0.2775], [0.1336, 0.0089], [0.2409, 0.2483]], [[0.33, 0.814], [0.8363, 0.4234], [0.8789, 0.5187]], [[0.9614, 0.2011], [0.19, 0.6035], [0.9509, 0.1701]], [[0.7306, 0.5531], [0.6768, 0.3431], [0.8334, 0.2542]]]]]], 4, Con19126), 
LCon55243 = conv3D_transpose_layer([[[[[0.853]], [[0.0533]]]]], 1, 2, 1,[[[[[0.3502], [0.8356], [0.6211]]], [[[0.6966], [0.6587], [0.5567]]]]],[0, 0, 0], 1, 1, 1, false, Con55243), 
LZer40837 = zero_padding3D_layer(Con55243, 1, 1, 1, 1, 1, 1, Zer40837), 
LAdd2014 = add_layer([Con19126,Zer40837], Add2014), 
LCon33552 = conv3D_layer(Add2014, 2, 1, 1,[[[[[0.7772, 0.0038, 0.0836, 0.8479], [0.7541, 0.7481, 0.8295, 0.5979], [0.8964, 0.9662, 0.3077, 0.9522]]]], [[[[0.7046, 0.5418, 0.9711, 0.3189], [0.9333, 0.0969, 0.4193, 0.1556], [0.2349, 0.582, 0.3065, 0.2624]]]]],[0, 0, 0, 0], 1, 1, 1, false, 1, 1, 1, Con33552), 
exec_layers([LAve7488,LFla97203,LAve96628,LRes18616,LGlo78194,LMul91878,LRes71531,LRes14987,LRes72024,LZer93394,LCon19126,LCon55243,LZer40837,LAdd2014,LCon33552],["Ave7488","Fla97203","Ave96628","Res18616","Glo78194","Mul91878","Res71531","Res14987","Res72024","Zer93394","Con19126","Con55243","Zer40837","Add2014","Con33552"],Con33552,"Con33552")

Actual (Unparsed): [[[[[1.6337303, 1.0862834, 0.9361420, 0.9939649], [1.4978424, 1.3893496, 1.1450218, 1.0282041], [1.0057119, 0.6349866, 0.5310222, 0.5343299]], [[1.3625842, 0.9978482, 1.0624763, 0.7464306], [1.9287705, 1.2869262, 1.2494792, 0.9774140], [1.7842346, 1.1940666, 1.0133192, 1.1085045]], [[0.7987130, 0.7769740, 0.6807383, 0.4738495], [2.1271013, 1.8609654, 1.9840571, 1.2829599], [1.3184042, 0.8891546, 0.7387963, 0.7816739]], [[1.1360974, 1.0348601, 0.8578247, 0.9172985], [1.7476223, 1.5456197, 1.3799330, 1.1255155], [0.9966140, 0.8043726, 0.5404405, 0.6364095]], [[1.7560133, 1.4176881, 1.3600812, 1.0737152], [1.3378288, 0.8269979, 0.7618774, 0.7802759], [1.8571207, 1.3255546, 1.2347878, 1.1916511]]], [[[1.0434137, 0.9995622, 0.9036655, 0.7803904], [1.8897569, 1.6741181, 1.1428899, 1.4241314], [1.1010781, 0.9222161, 0.7841490, 0.8109202]], [[1.6655589, 1.2902954, 1.0819152, 1.1271521], [2.0100970, 1.7265833, 1.2888599, 1.8030949], [1.0424223, 0.9330019, 0.9071535, 0.7420615]], [[1.5823506, 1.6479987, 0.9820460, 1.3363553], [2.8250841, 1.8703267, 1.4116232, 2.1873266], [1.7452590, 1.2085160, 1.1929998, 0.9872311]], [[1.0653668, 0.3304845, 0.5942303, 0.2994149], [1.7799137, 1.8693863, 1.1461298, 1.6027988], [1.8378949, 1.1396343, 1.0531496, 1.0565776]], [[2.0768424, 1.7081299, 1.3344418, 1.4515568], [1.2821120, 0.8358853, 0.9691122, 0.6637757], [1.7559677, 1.0889049, 1.4333659, 0.8613491]]]]]

Expected (Unparsed): [[[[[1.6337303300000001,1.08628347,0.93614203,0.99396489],[1.49784245,1.3893496099999998,1.14502185,1.0282041],[1.00571191,0.63498665,0.5310221799999999,0.53432994]],[[1.36258421,0.9978481799999999,1.06247626,0.7464306300000001],[1.9287705398700001,1.2869262345999999,1.2494792228499998,0.9774140373400001],[1.78423453,1.1940665899999998,1.01331923,1.1085045100000002]],[[0.7987129799999999,0.77697401,0.6807383,0.47384952],[2.1271013204069997,1.8609654204900001,1.984057098045,1.2829599373940002],[1.3184042000000002,0.88915459,0.7387962800000001,0.78167388]],[[1.13609736,1.03486009,0.8578246599999999,0.91729845],[1.7476223260700001,1.545619695023,1.379932942076,1.125515444882],[0.99661405,0.8043725799999999,0.54044054,0.63640952]],[[1.7560133299999998,1.41768806,1.36008118,1.07371522],[1.33782874,0.8269979,0.7618773799999999,0.78027589],[1.8571208000000001,1.32555468,1.2347878,1.19165112]]],[[[1.0434137099999998,0.9995622,0.9036654500000001,0.78039044],[1.88975695,1.67411811,1.1428898900000002,1.42413141],[1.1010781399999998,0.92221614,0.7841490399999999,0.81092025]],[[1.6655588699999997,1.2902953799999999,1.0819151399999998,1.1271520499999998],[2.01009701032,1.72658334882,1.28885988967,1.80309495772],[1.0424223000000001,0.93300187,0.9071535199999999,0.7420614999999999]],[[1.58235057,1.6479986699999998,0.9820460000000001,1.33635533],[2.825084111662,1.8703267005720001,1.411623215487,2.187326640422],[1.74525903,1.20851598,1.19299978,0.9872310700000001]],[[1.06536687,0.3304845,0.59423034,0.29941488],[1.779913675431,1.869386287997,1.1461298492,1.6027987934130001],[1.83789484,1.13963429,1.0531495700000002,1.0565776]],[[2.07684241,1.7081298399999998,1.33444182,1.4515567799999998],[1.28211194,0.8358852699999999,0.9691122000000001,0.66377569],[1.7559677556650002,1.088904916695,1.4333659462025,0.8613491335475]]]]]

Actual:   [[[[[1.6338, 1.0863, 0.9362, 0.994], [1.4979, 1.3894, 1.1451, 1.0283], [1.0058, 0.635, 0.5311, 0.5344]], [[1.3626, 0.9979, 1.0625, 0.7465], [1.9288, 1.287, 1.2495, 0.9775], [1.7843, 1.1941, 1.0134, 1.1086]], [[0.7988, 0.777, 0.6808, 0.4739], [2.1272, 1.861, 1.9841, 1.283], [1.3185, 0.8892, 0.7388, 0.7817]], [[1.1361, 1.0349, 0.8579, 0.9173], [1.7477, 1.5457, 1.38, 1.1256], [0.9967, 0.8044, 0.5405, 0.6365]], [[1.7561, 1.4177, 1.3601, 1.0738], [1.3379, 0.827, 0.7619, 0.7803], [1.8572, 1.3256, 1.2348, 1.1917]]], [[[1.0435, 0.9996, 0.9037, 0.7804], [1.8898, 1.6742, 1.1429, 1.4242], [1.1011, 0.9223, 0.7842, 0.811]], [[1.6656, 1.2903, 1.082, 1.1272], [2.0101, 1.7266, 1.2889, 1.8031], [1.0425, 0.9331, 0.9072, 0.7421]], [[1.5824, 1.648, 0.9821, 1.3364], [2.8251, 1.8704, 1.4117, 2.1874], [1.7453, 1.2086, 1.193, 0.9873]], [[1.0654, 0.3305, 0.5943, 0.2995], [1.78, 1.8694, 1.1462, 1.6028], [1.8379, 1.1397, 1.0532, 1.0566]], [[2.0769, 1.7082, 1.3345, 1.4516], [1.2822, 0.8359, 0.9692, 0.6638], [1.756, 1.089, 1.4334, 0.8614]]]]]

Expected: [[[[[1.6338, 1.0863, 0.9362, 0.994], [1.4979, 1.3894, 1.1451, 1.0283], [1.0058, 0.635, 0.5311, 0.5344]], [[1.3626, 0.9979, 1.0625, 0.7465], [1.9288, 1.287, 1.2495, 0.9775], [1.7843, 1.1941, 1.0134, 1.1086]], [[0.7988, 0.777, 0.6808, 0.4739], [2.1272, 1.861, 1.9841, 1.283], [1.3185, 0.8892, 0.7388, 0.7817]], [[1.1361, 1.0349, 0.8579, 0.9173], [1.7477, 1.5457, 1.38, 1.1256], [0.9967, 0.8044, 0.5405, 0.6365]], [[1.7561, 1.4177, 1.3601, 1.0738], [1.3379, 0.827, 0.7619, 0.7803], [1.8572, 1.3256, 1.2348, 1.1917]]], [[[1.0435, 0.9996, 0.9037, 0.7804], [1.8898, 1.6742, 1.1429, 1.4242], [1.1011, 0.9223, 0.7842, 0.811]], [[1.6656, 1.2903, 1.082, 1.1272], [2.0101, 1.7266, 1.2889, 1.8031], [1.0425, 0.9331, 0.9072, 0.7421]], [[1.5824, 1.648, 0.9821, 1.3364], [2.8251, 1.8704, 1.4117, 2.1874], [1.7453, 1.2086, 1.193, 0.9873]], [[1.0654, 0.3305, 0.5943, 0.2995], [1.78, 1.8694, 1.1462, 1.6028], [1.8379, 1.1397, 1.0532, 1.0566]], [[2.0769, 1.7082, 1.3345, 1.4516], [1.2822, 0.8359, 0.9692, 0.6638], [1.756, 1.089, 1.4334, 0.8614]]]]]