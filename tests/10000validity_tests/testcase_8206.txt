import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Con59863 = tf.keras.layers.Input(shape=([2, 2, 2, 2]))

Con59863 = keras.layers.Conv3D(4, (2, 2, 1),strides=(1, 1, 1), padding='valid', dilation_rate=(1, 1, 1), name = 'Con59863', )(in0Con59863)
Con35853 = keras.layers.Conv3DTranspose(3, (1, 1, 2),strides=(1, 7, 1), padding='valid', name = 'Con35853', )(Con59863)
model = tf.keras.models.Model(inputs=[in0Con59863], outputs=Con35853)
w = model.get_layer('Con59863').get_weights() 
w[0] = np.array([[[[[0.0394, 0.9234, 0.1717, 0.6807], [0.8787, 0.3529, 0.373, 0.2105]]], [[[0.1373, 0.2549, 0.7232, 0.9444], [0.7918, 0.2653, 0.9531, 0.1754]]]], [[[[0.9965, 0.4604, 0.8366, 0.4671], [0.4106, 0.8862, 0.9227, 0.3238]]], [[[0.1325, 0.352, 0.8096, 0.8006], [0.3128, 0.4238, 0.3934, 0.6405]]]]])
w[1] = np.array([0, 0, 0, 0])
model.get_layer('Con59863').set_weights(w) 
w = model.get_layer('Con35853').get_weights() 
w[0] = np.array([[[[[0.1045, 0.1385, 0.2603, 0.6507], [0.3988, 0.3196, 0.0249, 0.1064], [0.4039, 0.7121, 0.9677, 0.0882]], [[0.7633, 0.3219, 0.4098, 0.399], [0.2451, 0.0984, 0.1812, 0.5011], [0.8505, 0.0843, 0.914, 0.8924]]]]])
w[1] = np.array([0, 0, 0])
model.get_layer('Con35853').set_weights(w) 
in0Con59863 = tf.constant([[[[[0.6403, 0.5615], [0.8157, 0.9034]], [[0.725, 0.7444], [0.8019, 0.3539]]], [[[0.9672, 0.5863], [0.5216, 0.2671]], [[0.0081, 0.7498], [0.6535, 0.5642]]]]])
print (np.array2string(model.predict([in0Con59863],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Con35853.png')

LCon59863 = conv3D_layer([[[[[0.6403, 0.5615], [0.8157, 0.9034]], [[0.725, 0.7444], [0.8019, 0.3539]]], [[[0.9672, 0.5863], [0.5216, 0.2671]], [[0.0081, 0.7498], [0.6535, 0.5642]]]]], 2, 2, 1,[[[[[0.0394, 0.9234, 0.1717, 0.6807], [0.8787, 0.3529, 0.373, 0.2105]]], [[[0.1373, 0.2549, 0.7232, 0.9444], [0.7918, 0.2653, 0.9531, 0.1754]]]], [[[[0.9965, 0.4604, 0.8366, 0.4671], [0.4106, 0.8862, 0.9227, 0.3238]]], [[[0.1325, 0.352, 0.8096, 0.8006], [0.3128, 0.4238, 0.3934, 0.6405]]]]],[0, 0, 0, 0], 1, 1, 1, false, 1, 1, 1, Con59863), 
LCon35853 = conv3D_transpose_layer(Con59863, 1, 1, 2,[[[[[0.1045, 0.1385, 0.2603, 0.6507], [0.3988, 0.3196, 0.0249, 0.1064], [0.4039, 0.7121, 0.9677, 0.0882]], [[0.7633, 0.3219, 0.4098, 0.399], [0.2451, 0.0984, 0.1812, 0.5011], [0.8505, 0.0843, 0.914, 0.8924]]]]],[0, 0, 0], 1, 7, 1, false, Con35853), 
exec_layers([LCon59863,LCon35853],["Con59863","Con35853"],Con35853,"Con35853")

Actual (Unparsed): [[[[[3.0764610, 2.1867881, 6.1408188], [8.2078530, 4.6704816, 13.1002921], [4.6232379, 2.6500461, 7.0541044]], [[0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000]], [[0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000]], [[0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000]], [[0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000]], [[0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000]], [[0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000]]]]]

Expected (Unparsed): [[[[[3.0764609187209997,2.1867880380299995,6.140818752711],[8.207852934624999,4.670481560792999,13.100291933877998],[4.623237828038,2.6500460768969996,7.054104310162]],[[0,0,0],[0,0,0],[0,0,0]],[[0,0,0],[0,0,0],[0,0,0]],[[0,0,0],[0,0,0],[0,0,0]],[[0,0,0],[0,0,0],[0,0,0]],[[0,0,0],[0,0,0],[0,0,0]],[[0,0,0],[0,0,0],[0,0,0]]]]]

Actual:   [[[[[3.0765, 2.1868, 6.1409], [8.2079, 4.6705, 13.1003], [4.6233, 2.6501, 7.0542]], [[0, 0, 0], [0, 0, 0], [0, 0, 0]], [[0, 0, 0], [0, 0, 0], [0, 0, 0]], [[0, 0, 0], [0, 0, 0], [0, 0, 0]], [[0, 0, 0], [0, 0, 0], [0, 0, 0]], [[0, 0, 0], [0, 0, 0], [0, 0, 0]], [[0, 0, 0], [0, 0, 0], [0, 0, 0]]]]]

Expected: [[[[[3.0765, 2.1868, 6.1409], [8.2079, 4.6705, 13.1003], [4.6233, 2.6501, 7.0542]], [[0, 0, 0], [0, 0, 0], [0, 0, 0]], [[0, 0, 0], [0, 0, 0], [0, 0, 0]], [[0, 0, 0], [0, 0, 0], [0, 0, 0]], [[0, 0, 0], [0, 0, 0], [0, 0, 0]], [[0, 0, 0], [0, 0, 0], [0, 0, 0]], [[0, 0, 0], [0, 0, 0], [0, 0, 0]]]]]