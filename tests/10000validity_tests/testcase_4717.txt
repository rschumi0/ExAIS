import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Ave87217 = tf.keras.layers.Input(shape=([2, 2]))
in1Ave87217 = tf.keras.layers.Input(shape=([2, 2]))

Ave87217 = keras.layers.Average(name = 'Ave87217', )([in0Ave87217,in1Ave87217])
Glo68070 = keras.layers.GlobalAveragePooling1D(name = 'Glo68070', )(Ave87217)
Bat55526 = keras.layers.BatchNormalization(axis=1, epsilon=0.19174568179490875,  name = 'Bat55526', )(Glo68070)
model = tf.keras.models.Model(inputs=[in0Ave87217,in1Ave87217], outputs=Bat55526)
w = model.get_layer('Bat55526').get_weights() 
w[0] = np.array([0.2781, 0.3716])
w[1] = np.array([0.0458, 0.0199])
w[2] = np.array([0.179, 0.3192])
w[3] = np.array([0.6954, 0.3156])
model.get_layer('Bat55526').set_weights(w) 
in0Ave87217 = tf.constant([[[0.9382, 0.1317], [0.7072, 0.8467]]])
in1Ave87217 = tf.constant([[[0.5633, 0.128], [0.3462, 0.1603]]])
print (np.array2string(model.predict([in0Ave87217,in1Ave87217],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Bat55526.png')

LAve87217 = average_layer([[[[0.9382, 0.1317], [0.7072, 0.8467]]], [[[0.5633, 0.128], [0.3462, 0.1603]]]], Ave87217), 
LGlo68070 = global_average_pooling1D_layer(Ave87217, Glo68070), 
LBat55526 = batch_normalization_layer(Glo68070, 1, 0.19174568179490875, [0.2781, 0.3716], [0.0458, 0.0199], [0.179, 0.3192], [0.6954, 0.3156], Bat55526), 
exec_layers([LAve87217,LGlo68070,LBat55526],["Ave87217","Glo68070","Bat55526"],Bat55526,"Bat55526")

Actual (Unparsed): [[0.1815381, 0.0185827]]

Expected (Unparsed): [[0.18153806031269773,0.018582698750902727]]

Actual:   [[0.1816, 0.0186]]

Expected: [[0.1816, 0.0186]]