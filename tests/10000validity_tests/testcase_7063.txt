import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Ave69537 = tf.keras.layers.Input(shape=([2, 1]))
in1Ave69537 = tf.keras.layers.Input(shape=([2, 1]))

Ave69537 = keras.layers.Average(name = 'Ave69537', )([in0Ave69537,in1Ave69537])
Res34552 = keras.layers.Reshape((2, 1, 1), name = 'Res34552', )(Ave69537)
Up_21642 = keras.layers.UpSampling2D(size=(1, 1), name = 'Up_21642', )(Res34552)
Den27205 = keras.layers.Dense(3,name = 'Den27205', )(Up_21642)
Up_52290 = keras.layers.UpSampling2D(size=(2, 1), name = 'Up_52290', )(Den27205)
model = tf.keras.models.Model(inputs=[in0Ave69537,in1Ave69537], outputs=Up_52290)
w = model.get_layer('Den27205').get_weights() 
w[0] = np.array([[0.3757, 0.7813, 0.9995]])
w[1] = np.array([0.365, 0.9535, 0.1046])
model.get_layer('Den27205').set_weights(w) 
in0Ave69537 = tf.constant([[[0.9006], [0.7451]]])
in1Ave69537 = tf.constant([[[0.3531], [0.8382]]])
print (np.array2string(model.predict([in0Ave69537,in1Ave69537],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Up_52290.png')

LAve69537 = average_layer([[[[0.9006], [0.7451]]], [[[0.3531], [0.8382]]]], Ave69537), 
LRes34552 = reshape_layer(Ave69537, [2, 1, 1], Res34552), 
LUp_21642 = up_sampling2D_layer(Res34552, 1, 1, Up_21642), 
LDen27205 = dense_layer(Up_21642, [[0.3757, 0.7813, 0.9995]],[0.365, 0.9535, 0.1046], Den27205), 
LUp_52290 = up_sampling2D_layer(Den27205, 2, 1, Up_52290), 
exec_layers([LAve69537,LRes34552,LUp_21642,LDen27205,LUp_52290],["Ave69537","Res34552","Up_21642","Den27205","Up_52290"],Up_52290,"Up_52290")

Actual (Unparsed): [[[[0.6005075, 1.4432579, 0.7311366]], [[0.6005075, 1.4432579, 0.7311366]], [[0.6624229, 1.5720161, 0.8958542]], [[0.6624229, 1.5720161, 0.8958542]]]]

Expected (Unparsed): [[[[0.6005075449999999,1.443257905,0.7311365750000001]],[[0.6005075449999999,1.443257905,0.7311365750000001]],[[0.6624229049999999,1.572016145,0.8958541750000001]],[[0.6624229049999999,1.572016145,0.8958541750000001]]]]

Actual:   [[[[0.6006, 1.4433, 0.7312]], [[0.6006, 1.4433, 0.7312]], [[0.6625, 1.5721, 0.8959]], [[0.6625, 1.5721, 0.8959]]]]

Expected: [[[[0.6006, 1.4433, 0.7312]], [[0.6006, 1.4433, 0.7312]], [[0.6625, 1.5721, 0.8959]], [[0.6625, 1.5721, 0.8959]]]]