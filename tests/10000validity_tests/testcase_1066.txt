import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Sim6670 = tf.keras.layers.Input(shape=([3, 1]))
in0Glo28536 = tf.keras.layers.Input(shape=([2, 2]))
in0Con27427 = tf.keras.layers.Input(shape=([1]))
in0Con37349 = tf.keras.layers.Input(shape=([3, 3]))
in0Mas4727 = tf.keras.layers.Input(shape=([3, 4]))

Sim6670 = keras.layers.SimpleRNN(1,name = 'Sim6670', )(in0Sim6670)
Res84977 = keras.layers.Reshape((1, 1), name = 'Res84977', )(Sim6670)
Res27060 = keras.layers.Reshape((1, 1, 1), name = 'Res27060', )(Res84977)
Res29017 = keras.layers.Reshape((1, 1, 1, 1), name = 'Res29017', )(Res27060)
Con39670 = keras.layers.Conv3D(3, (1, 1, 1),strides=(1, 1, 1), padding='valid', dilation_rate=(1, 1, 1), name = 'Con39670', )(Res29017)
Res84943 = keras.layers.Reshape((1, 1, 3), name = 'Res84943', )(Con39670)
Res36358 = keras.layers.Reshape((1, 3), name = 'Res36358', )(Res84943)
Fla89008 = keras.layers.Flatten(name = 'Fla89008', )(Res36358)
Glo28536 = keras.layers.GlobalAveragePooling1D(name = 'Glo28536', )(in0Glo28536)
Con27427 = keras.layers.Concatenate(axis=1, name = 'Con27427', )([Glo28536,in0Con27427])
Add76138 = keras.layers.Add(name = 'Add76138', )([Fla89008,Con27427])
Res37204 = keras.layers.Reshape((3, 1), name = 'Res37204', )(Add76138)
Con37349 = keras.layers.Concatenate(axis=2, name = 'Con37349', )([Res37204,in0Con37349])
Mas4727 = keras.layers.Masking(mask_value=2, name = 'Mas4727', )(in0Mas4727)
Mul63732 = keras.layers.Multiply(name = 'Mul63732', )([Con37349,Mas4727])
Res62979 = keras.layers.Reshape((3, 4, 1), name = 'Res62979', )(Mul63732)
Con22558 = keras.layers.Conv2DTranspose(4, (2, 3),strides=(1, 1), padding='valid', name = 'Con22558', )(Res62979)
model = tf.keras.models.Model(inputs=[in0Sim6670,in0Glo28536,in0Con27427,in0Con37349,in0Mas4727], outputs=Con22558)
w = model.get_layer('Sim6670').get_weights() 
w[0] = np.array([[2]])
w[1] = np.array([[7]])
w[2] = np.array([6])
model.get_layer('Sim6670').set_weights(w) 
w = model.get_layer('Con39670').get_weights() 
w[0] = np.array([[[[[0.4666, 0.9336, 0.0436]]]]])
w[1] = np.array([0, 0, 0])
model.get_layer('Con39670').set_weights(w) 
w = model.get_layer('Con22558').get_weights() 
w[0] = np.array([[[[0.6653], [0.9505], [0.5586], [0.6023]], [[0.793], [0.5795], [0.2504], [0.3534]], [[0.854], [0.0385], [0.8962], [0.6523]]], [[[0.2712], [0.0968], [0.1847], [0.9264]], [[0.9806], [0.7251], [0.6805], [0.0356]], [[0.693], [0.3351], [0.0898], [0.3545]]]])
w[1] = np.array([0, 0, 0, 0])
model.get_layer('Con22558').set_weights(w) 
in0Sim6670 = tf.constant([[[8], [1], [1]]])
in0Glo28536 = tf.constant([[[1.3942, 1.7615], [1.7613, 1.7826]]])
in0Con27427 = tf.constant([[0.883]])
in0Con37349 = tf.constant([[[0.2026, 0.0753, 0.5915], [0.8363, 0.5673, 0.6067], [0.705, 0.3026, 0.4047]]])
in0Mas4727 = tf.constant([[[1.3099, 1.1917, 1.3788, 1.1683], [1.4273, 1.5666, 1.8675, 1.698], [1.6934, 1.1599, 1.532, 1.8288]]])
print (np.array2string(model.predict([in0Sim6670,in0Glo28536,in0Con27427,in0Con37349,in0Mas4727],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Con22558.png')

LSim6670 = simple_rnn_layer([[[8], [1], [1]]],[[2]],[[7]],[6], Sim6670), 
LRes84977 = reshape_layer(Sim6670, [1, 1], Res84977), 
LRes27060 = reshape_layer(Res84977, [1, 1, 1], Res27060), 
LRes29017 = reshape_layer(Res27060, [1, 1, 1, 1], Res29017), 
LCon39670 = conv3D_layer(Res29017, 1, 1, 1,[[[[[0.4666, 0.9336, 0.0436]]]]],[0, 0, 0], 1, 1, 1, false, 1, 1, 1, Con39670), 
LRes84943 = reshape_layer(Con39670, [1, 1, 3], Res84943), 
LRes36358 = reshape_layer(Res84943, [1, 3], Res36358), 
LFla89008 = flatten_layer(Res36358, Fla89008), 
LGlo28536 = global_average_pooling1D_layer([[[1.3942, 1.7615], [1.7613, 1.7826]]], Glo28536), 
LCon27427 = concatenate_layer([Glo28536,[[0.883]]], 1, Con27427), 
LAdd76138 = add_layer([Fla89008,Con27427], Add76138), 
LRes37204 = reshape_layer(Add76138, [3, 1], Res37204), 
LCon37349 = concatenate_layer([Res37204,[[[0.2026, 0.0753, 0.5915], [0.8363, 0.5673, 0.6067], [0.705, 0.3026, 0.4047]]]], 2, Con37349), 
LMas4727 = masking_layer([[[1.3099, 1.1917, 1.3788, 1.1683], [1.4273, 1.5666, 1.8675, 1.698], [1.6934, 1.1599, 1.532, 1.8288]]], 2, Mas4727), 
LMul63732 = multiply_layer([Con37349,Mas4727], Mul63732), 
LRes62979 = reshape_layer(Mul63732, [3, 4, 1], Res62979), 
LCon22558 = conv2D_transpose_layer(Res62979, 2, 3,[[[[0.6653], [0.9505], [0.5586], [0.6023]], [[0.793], [0.5795], [0.2504], [0.3534]], [[0.854], [0.0385], [0.8962], [0.6523]]], [[[0.2712], [0.0968], [0.1847], [0.9264]], [[0.9806], [0.7251], [0.6805], [0.0356]], [[0.693], [0.3351], [0.0898], [0.3545]]]],[0, 0, 0, 0], 1, 1, false, Con22558), 
exec_layers([LSim6670,LRes84977,LRes27060,LRes29017,LCon39670,LRes84943,LRes36358,LFla89008,LGlo28536,LCon27427,LAdd76138,LRes37204,LCon37349,LMas4727,LMul63732,LRes62979,LCon22558],["Sim6670","Res84977","Res27060","Res29017","Con39670","Res84943","Res36358","Fla89008","Glo28536","Con27427","Add76138","Res37204","Con37349","Mas4727","Mul63732","Res62979","Con22558"],Con22558,"Con22558")

Actual (Unparsed): [[[[1.7816030, 2.5453384, 1.4958717, 1.6128956], [2.2841990, 1.7813269, 0.8054122, 1.0917861], [2.5474561, 0.3416969, 2.5183808, 1.8946476], [0.7482758, 0.7263037, 0.6283948, 0.6104006], [0.6366676, 0.4044604, 0.2660855, 0.3119410], [0.5901562, 0.0266054, 0.6193185, 0.4507716]], [[3.2954833, 3.9298365, 2.6517941, 4.8067477], [6.6254492, 5.4483057, 3.5657373, 2.4728545], [7.1624349, 2.9973791, 4.8047321, 4.6742287], [3.1009116, 1.8666469, 2.2348628, 2.5789624], [2.4712785, 1.1736467, 1.6870024, 1.1165392], [1.3586681, 0.2712325, 0.9853005, 0.9169612]], [[2.0912384, 1.8652536, 1.5897715, 4.5226193], [5.9305031, 4.6135427, 3.7196090, 2.3982398], [6.5451550, 3.3215422, 3.3039684, 3.9888273], [3.7845571, 2.3105549, 2.2912277, 2.5995254], [2.7271896, 1.5487418, 1.3969604, 0.9761953], [1.3459709, 0.3737066, 0.7558012, 0.8479748]], [[0.4255411, 0.1518893, 0.2898136, 1.4536184], [1.7604321, 1.2169139, 1.2188102, 0.8134047], [2.0149787, 1.1636174, 0.7829943, 1.0148222], [1.2219955, 0.6818085, 0.5255998, 0.9920315], [1.0470203, 0.6920044, 0.5452783, 0.1906883], [0.5128999, 0.2480127, 0.0664624, 0.2623709]]]]

Expected (Unparsed): [[[[1.781602921444424,2.5453383087823913,1.495871624708936,1.612895595349431],[2.2841989743709092,1.7813268288774338,0.8054121752879714,1.0917861229369596],[2.547456066261902,0.3416968557124956,2.518380726724897,1.8946476145994255],[0.748275756285,0.726303680775,0.62839477423,0.610400639477],[0.63666760241,0.404460366415,0.266085528448,0.31194103600199996],[0.5901562303,0.026605403825,0.61931851709,0.450771556235]],[[3.2954832756263035,3.929836565364252,2.65179412706234,4.806747689579244],[6.625449180901691,5.4483056753547725,3.5657372965423595,2.4728544866189077],[7.1624349176097075,2.997379087792952,4.804732124705765,4.6742287140007965],[3.100911593334,1.866646941421,2.234862861107,2.578962418418],[2.47127848549,1.173646758534,1.687002364787,1.1165392340650002],[1.3586680852500002,0.271232469795,0.9853005095300001,0.916961226205]],[[2.0912383591759234,1.8652535171359628,1.5897714432354464,4.5226192647797605],[5.930503105612745,4.6135427035233105,3.7196090822243266,2.3982398681799864],[6.545155018752816,3.3215422477474155,3.3039684257639657,3.988827316172403],[3.784557141118,2.310554935793,2.2912277083549997,2.5995254623079997],[2.72718960299,1.548741771505,1.396960387234,0.9761952864189999],[1.3459709012399999,0.37370662002000005,0.755801244312,0.847974854028]],[[0.4255411241279963,0.15188930979199866,0.28981359006799745,1.4536183532159872],[1.7604320542639864,1.21691384504399,1.2188102100699905,0.8134047268639993],[2.0149786884599905,1.163617412053995,0.7829943205019986,1.0148221706599951],[1.2219955150519999,0.6818085006179999,0.5255997836919999,0.992031539174],[1.047020279616,0.692004377856,0.54527827384,0.19068835121599997],[0.51289994448,0.24801265713600001,0.066462359328,0.26237089512]]]]

Actual:   [[[[1.7817, 2.5454, 1.4959, 1.6129], [2.2842, 1.7814, 0.8055, 1.0918], [2.5475, 0.3417, 2.5184, 1.8947], [0.7483, 0.7264, 0.6284, 0.6105], [0.6367, 0.4045, 0.2661, 0.312], [0.5902, 0.0267, 0.6194, 0.4508]], [[3.2955, 3.9299, 2.6518, 4.8068], [6.6255, 5.4484, 3.5658, 2.4729], [7.1625, 2.9974, 4.8048, 4.6743], [3.101, 1.8667, 2.2349, 2.579], [2.4713, 1.1737, 1.6871, 1.1166], [1.3587, 0.2713, 0.9854, 0.917]], [[2.0913, 1.8653, 1.5898, 4.5227], [5.9306, 4.6136, 3.7197, 2.3983], [6.5452, 3.3216, 3.304, 3.9889], [3.7846, 2.3106, 2.2913, 2.5996], [2.7272, 1.5488, 1.397, 0.9762], [1.346, 0.3738, 0.7559, 0.848]], [[0.4256, 0.1519, 0.2899, 1.4537], [1.7605, 1.217, 1.2189, 0.8135], [2.015, 1.1637, 0.783, 1.0149], [1.222, 0.6819, 0.5256, 0.9921], [1.0471, 0.6921, 0.5453, 0.1907], [0.5129, 0.2481, 0.0665, 0.2624]]]]

Expected: [[[[1.7817, 2.5454, 1.4959, 1.6129], [2.2842, 1.7814, 0.8055, 1.0918], [2.5475, 0.3417, 2.5184, 1.8947], [0.7483, 0.7264, 0.6284, 0.6105], [0.6367, 0.4045, 0.2661, 0.312], [0.5902, 0.0267, 0.6194, 0.4508]], [[3.2955, 3.9299, 2.6518, 4.8068], [6.6255, 5.4484, 3.5658, 2.4729], [7.1625, 2.9974, 4.8048, 4.6743], [3.101, 1.8667, 2.2349, 2.579], [2.4713, 1.1737, 1.6871, 1.1166], [1.3587, 0.2713, 0.9854, 0.917]], [[2.0913, 1.8653, 1.5898, 4.5227], [5.9306, 4.6136, 3.7197, 2.3983], [6.5452, 3.3216, 3.304, 3.9889], [3.7846, 2.3106, 2.2913, 2.5996], [2.7272, 1.5488, 1.397, 0.9762], [1.346, 0.3738, 0.7559, 0.848]], [[0.4256, 0.1519, 0.2899, 1.4537], [1.7605, 1.217, 1.2189, 0.8135], [2.015, 1.1637, 0.783, 1.0149], [1.222, 0.6819, 0.5256, 0.9921], [1.0471, 0.6921, 0.5453, 0.1907], [0.5129, 0.2481, 0.0665, 0.2624]]]]