import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Glo24492 = tf.keras.layers.Input(shape=([1, 1]))

Glo24492 = keras.layers.GlobalAveragePooling1D(name = 'Glo24492', )(in0Glo24492)
Res61656 = keras.layers.Reshape((1, 1), name = 'Res61656', )(Glo24492)
Res64387 = keras.layers.Reshape((1, 1, 1), name = 'Res64387', )(Res61656)
Res32217 = keras.layers.Reshape((1, 1, 1, 1), name = 'Res32217', )(Res64387)
Up_69098 = keras.layers.UpSampling3D(size=(1, 1, 1), name = 'Up_69098', )(Res32217)
model = tf.keras.models.Model(inputs=[in0Glo24492], outputs=Up_69098)
in0Glo24492 = tf.constant([[[1.4535]]])
print (np.array2string(model.predict([in0Glo24492],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Up_69098.png')

LGlo24492 = global_average_pooling1D_layer([[[1.4535]]], Glo24492), 
LRes61656 = reshape_layer(Glo24492, [1, 1], Res61656), 
LRes64387 = reshape_layer(Res61656, [1, 1, 1], Res64387), 
LRes32217 = reshape_layer(Res64387, [1, 1, 1, 1], Res32217), 
LUp_69098 = up_sampling3D_layer(Res32217, 1, 1, 1, Up_69098), 
exec_layers([LGlo24492,LRes61656,LRes64387,LRes32217,LUp_69098],["Glo24492","Res61656","Res64387","Res32217","Up_69098"],Up_69098,"Up_69098")

Actual (Unparsed): [[[[[1.4535000]]]]]

Expected (Unparsed): [[[[[1.4535]]]]]

Actual:   [[[[[1.4535]]]]]

Expected: [[[[[1.4535]]]]]