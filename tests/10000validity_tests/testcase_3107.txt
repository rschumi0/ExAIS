import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Sim24939 = tf.keras.layers.Input(shape=([2, 2]))

Sim24939 = keras.layers.SimpleRNN(1,name = 'Sim24939', )(in0Sim24939)
Res12951 = keras.layers.Reshape((1, 1), name = 'Res12951', )(Sim24939)
Ave26629 = keras.layers.AveragePooling1D(pool_size=(1), strides=(4), padding='valid', name = 'Ave26629', )(Res12951)
Res244 = keras.layers.Reshape((1, 1, 1), name = 'Res244', )(Ave26629)
Dep26109 = keras.layers.DepthwiseConv2D((1, 1),strides=(1, 1), padding='valid', name = 'Dep26109', )(Res244)
model = tf.keras.models.Model(inputs=[in0Sim24939], outputs=Dep26109)
w = model.get_layer('Sim24939').get_weights() 
w[0] = np.array([[1], [9]])
w[1] = np.array([[8]])
w[2] = np.array([7])
model.get_layer('Sim24939').set_weights(w) 
w = model.get_layer('Dep26109').get_weights() 
w[0] = np.array([[[[0.0864]]]])
w[1] = np.array([0])
model.get_layer('Dep26109').set_weights(w) 
in0Sim24939 = tf.constant([[[6, 5], [3, 6]]])
print (np.array2string(model.predict([in0Sim24939],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Dep26109.png')

LSim24939 = simple_rnn_layer([[[6, 5], [3, 6]]],[[1], [9]],[[8]],[7], Sim24939), 
LRes12951 = reshape_layer(Sim24939, [1, 1], Res12951), 
LAve26629 = average_pooling1D_layer(Res12951, 1, 4, false, Ave26629), 
LRes244 = reshape_layer(Ave26629, [1, 1, 1], Res244), 
LDep26109 = depthwise_conv2D_layer(Res244, 1, 1,[[[[0.0864]]]],[0], 1, 1, false, Dep26109), 
exec_layers([LSim24939,LRes12951,LAve26629,LRes244,LDep26109],["Sim24939","Res12951","Ave26629","Res244","Dep26109"],Dep26109,"Dep26109")

Actual (Unparsed): [[[[0.0864000]]]]

Expected (Unparsed): [[[[0.0864]]]]

Actual:   [[[[0.0864]]]]

Expected: [[[[0.0864]]]]