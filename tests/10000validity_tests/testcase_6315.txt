import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Add32206 = tf.keras.layers.Input(shape=([1, 2, 2, 2]))
in1Add32206 = tf.keras.layers.Input(shape=([1, 2, 2, 2]))

Add32206 = keras.layers.Add(name = 'Add32206', )([in0Add32206,in1Add32206])
Res41384 = keras.layers.Reshape((1, 2, 4), name = 'Res41384', )(Add32206)
Res66303 = keras.layers.Reshape((1, 8), name = 'Res66303', )(Res41384)
Sim12305 = keras.layers.SimpleRNN(1,name = 'Sim12305', )(Res66303)
model = tf.keras.models.Model(inputs=[in0Add32206,in1Add32206], outputs=Sim12305)
w = model.get_layer('Sim12305').get_weights() 
w[0] = np.array([[2], [10], [9], [10], [6], [2], [9], [7]])
w[1] = np.array([[9]])
w[2] = np.array([10])
model.get_layer('Sim12305').set_weights(w) 
in0Add32206 = tf.constant([[[[[0.3533, 0.1255], [0.8083, 0.4535]], [[0.2018, 0.4717], [0.5835, 0.4192]]]]])
in1Add32206 = tf.constant([[[[[0.3551, 0.2598], [0.3488, 0.6179]], [[0.7453, 0.2344], [0.7477, 0.8068]]]]])
print (np.array2string(model.predict([in0Add32206,in1Add32206],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Sim12305.png')

LAdd32206 = add_layer([[[[[[0.3533, 0.1255], [0.8083, 0.4535]], [[0.2018, 0.4717], [0.5835, 0.4192]]]]], [[[[[0.3551, 0.2598], [0.3488, 0.6179]], [[0.7453, 0.2344], [0.7477, 0.8068]]]]]], Add32206), 
LRes41384 = reshape_layer(Add32206, [1, 2, 4], Res41384), 
LRes66303 = reshape_layer(Res41384, [1, 8], Res66303), 
LSim12305 = simple_rnn_layer(Res66303,[[2], [10], [9], [10], [6], [2], [9], [7]],[[9]],[10], Sim12305), 
exec_layers([LAdd32206,LRes41384,LRes66303,LSim12305],["Add32206","Res41384","Res66303","Sim12305"],Sim12305,"Sim12305")

Actual (Unparsed): [[1.0000000]]

Expected (Unparsed): [[1.0]]

Actual:   [[1]]

Expected: [[1]]