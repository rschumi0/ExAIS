import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Mas91562 = tf.keras.layers.Input(shape=([4, 3, 3]))
in0Sof59672 = tf.keras.layers.Input(shape=([2, 1]))
in0Con15596 = tf.keras.layers.Input(shape=([3, 2]))
in0Dot96080 = tf.keras.layers.Input(shape=([3, 3]))
in1Dot96080 = tf.keras.layers.Input(shape=([3, 3]))
in0Con70129 = tf.keras.layers.Input(shape=([3, 3]))

Mas91562 = keras.layers.Masking(mask_value=2, name = 'Mas91562', )(in0Mas91562)
Con28759 = keras.layers.Conv2D(3, (3, 2),strides=(1, 1), padding='valid', dilation_rate=(1, 1), name = 'Con28759', )(Mas91562)
Res78085 = keras.layers.Reshape((2, 6), name = 'Res78085', )(Con28759)
Zer62775 = keras.layers.ZeroPadding1D(padding=((1, 0)), name = 'Zer62775', )(Res78085)
Sof59672 = keras.layers.Softmax(axis=1, name = 'Sof59672', input_shape=(2, 1))(in0Sof59672)
Zer29918 = keras.layers.ZeroPadding1D(padding=((1, 0)), name = 'Zer29918', )(Sof59672)
Con15596 = keras.layers.Concatenate(axis=2, name = 'Con15596', )([Zer29918,in0Con15596])
Dot96080 = keras.layers.Dot(axes=(1, 2), name = 'Dot96080', )([in0Dot96080,in1Dot96080])
Max51642 = keras.layers.Maximum(name = 'Max51642', )([Con15596,Dot96080])
Con70129 = keras.layers.Concatenate(axis=2, name = 'Con70129', )([Max51642,in0Con70129])
Max98567 = keras.layers.Maximum(name = 'Max98567', )([Zer62775,Con70129])
model = tf.keras.models.Model(inputs=[in0Mas91562,in0Sof59672,in0Con15596,in0Dot96080,in1Dot96080,in0Con70129], outputs=Max98567)
w = model.get_layer('Con28759').get_weights() 
w[0] = np.array([[[[0.9794, 0.2167, 0.9823], [0.1116, 0.669, 0.8816], [0.9658, 0.9333, 0.6958]], [[0.7578, 0.8122, 0.6902], [0.3831, 0.0483, 0.5536], [0.0375, 0.8634, 0.0331]]], [[[0.7988, 0.595, 0.9949], [0.0088, 0.599, 0.4665], [0.5583, 0.5221, 0.9281]], [[0.0225, 0.2221, 0.8115], [0.6691, 0.614, 0.4186], [0.294, 0.9833, 0.2607]]], [[[0.8474, 0.0081, 0.3383], [0.381, 0.7906, 0.1535], [0.2705, 0.3195, 0.8085]], [[0.2595, 0.1652, 0.7651], [0.6667, 0.0543, 0.9538], [0.1543, 0.5421, 0.8109]]]])
w[1] = np.array([0, 0, 0])
model.get_layer('Con28759').set_weights(w) 
in0Mas91562 = tf.constant([[[[1.994, 1.7632, 1.7903], [1.1276, 1.0152, 1.0945], [1.6713, 1.1495, 1.8785]], [[1.5242, 1.282, 1.6485], [1.1193, 1.3383, 1.4931], [1.8869, 1.2267, 1.3906]], [[1.7767, 1.5367, 1.8916], [1.7612, 1.2799, 1.1564], [1.3729, 1.0838, 1.1047]], [[1.9304, 1.4063, 1.4281], [1.1248, 1.0152, 1.2749], [1.7302, 1.7567, 1.46]]]])
in0Sof59672 = tf.constant([[[0.8913], [0.1592]]])
in0Con15596 = tf.constant([[[0.4434, 0.4845], [0.824, 0.8126], [0.439, 0.2953]]])
in0Dot96080 = tf.constant([[[0.7224, 0.0758, 0.9971], [0.4778, 0.9877, 0.8188], [0.8774, 0.4123, 0.7446]]])
in1Dot96080 = tf.constant([[[0.2189, 0.3089, 0.2783], [0.5136, 0.1409, 0.8108], [0.6302, 0.1885, 0.6924]]])
in0Con70129 = tf.constant([[[0.2965, 0.131, 0.5795], [0.1167, 0.2643, 0.1868], [0.7103, 0.728, 0.7232]]])
print (np.array2string(model.predict([in0Mas91562,in0Sof59672,in0Con15596,in0Dot96080,in1Dot96080,in0Con70129],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Max98567.png')

LMas91562 = masking_layer([[[[1.994, 1.7632, 1.7903], [1.1276, 1.0152, 1.0945], [1.6713, 1.1495, 1.8785]], [[1.5242, 1.282, 1.6485], [1.1193, 1.3383, 1.4931], [1.8869, 1.2267, 1.3906]], [[1.7767, 1.5367, 1.8916], [1.7612, 1.2799, 1.1564], [1.3729, 1.0838, 1.1047]], [[1.9304, 1.4063, 1.4281], [1.1248, 1.0152, 1.2749], [1.7302, 1.7567, 1.46]]]], 2, Mas91562), 
LCon28759 = conv2D_layer(Mas91562, 3, 2,[[[[0.9794, 0.2167, 0.9823], [0.1116, 0.669, 0.8816], [0.9658, 0.9333, 0.6958]], [[0.7578, 0.8122, 0.6902], [0.3831, 0.0483, 0.5536], [0.0375, 0.8634, 0.0331]]], [[[0.7988, 0.595, 0.9949], [0.0088, 0.599, 0.4665], [0.5583, 0.5221, 0.9281]], [[0.0225, 0.2221, 0.8115], [0.6691, 0.614, 0.4186], [0.294, 0.9833, 0.2607]]], [[[0.8474, 0.0081, 0.3383], [0.381, 0.7906, 0.1535], [0.2705, 0.3195, 0.8085]], [[0.2595, 0.1652, 0.7651], [0.6667, 0.0543, 0.9538], [0.1543, 0.5421, 0.8109]]]],[0, 0, 0], 1, 1, false, 1, 1, Con28759), 
LRes78085 = reshape_layer(Con28759, [2, 6], Res78085), 
LZer62775 = zero_padding1D_layer(Res78085, 1, 0, Zer62775), 
LSof59672 = softmax_layer([[[0.8913], [0.1592]]], 1, Sof59672), 
LZer29918 = zero_padding1D_layer(Sof59672, 1, 0, Zer29918), 
LCon15596 = concatenate_layer([Zer29918,[[[0.4434, 0.4845], [0.824, 0.8126], [0.439, 0.2953]]]], 2, Con15596), 
LDot96080 = dot_layer([[[0.7224, 0.0758, 0.9971], [0.4778, 0.9877, 0.8188], [0.8774, 0.4123, 0.7446]]], [[[0.2189, 0.3089, 0.2783], [0.5136, 0.1409, 0.8108], [0.6302, 0.1885, 0.6924]]], 1, 2, Dot96080), 
LMax51642 = maximum_layer([Con15596,Dot96080], Max51642), 
LCon70129 = concatenate_layer([Max51642,[[[0.2965, 0.131, 0.5795], [0.1167, 0.2643, 0.1868], [0.7103, 0.728, 0.7232]]]], 2, Con70129), 
LMax98567 = maximum_layer([Zer62775,Con70129], Max98567), 
exec_layers([LMas91562,LCon28759,LRes78085,LZer62775,LSof59672,LZer29918,LCon15596,LDot96080,LMax51642,LCon70129,LMax98567],["Mas91562","Con28759","Res78085","Zer62775","Sof59672","Zer29918","Con15596","Dot96080","Max51642","Con70129","Max98567"],Max98567,"Max98567")

Actual (Unparsed): [[[0.5499062, 1.1497426, 1.1528335, 0.2965000, 0.1310000, 0.5795000], [12.7635221, 13.0874122, 17.5098612, 10.6057935, 12.0468238, 14.8543310], [12.0930731, 12.7845089, 16.7301000, 11.3144561, 12.1905177, 16.3743695]]]

Expected (Unparsed): [[[0.5499062,1.1497425799999998,1.15283354,0.2965,0.131,0.5795],[12.76352223,13.08741232,17.50986134,10.60579363,12.046823909999999,14.854331199999999],[12.09307321,12.78450906,16.73010014,11.31445616,12.19051781,16.374369570000002]]]

Actual:   [[[0.55, 1.1498, 1.1529, 0.2965, 0.131, 0.5795], [12.7636, 13.0875, 17.5099, 10.6058, 12.0469, 14.8544], [12.0931, 12.7846, 16.7301, 11.3145, 12.1906, 16.3744]]]

Expected: [[[0.55, 1.1498, 1.1529, 0.2965, 0.131, 0.5795], [12.7636, 13.0875, 17.5099, 10.6058, 12.0469, 14.8544], [12.0931, 12.7846, 16.7302, 11.3145, 12.1906, 16.3744]]]