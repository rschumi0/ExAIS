import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Add47711 = tf.keras.layers.Input(shape=([1, 1, 1, 2]))
in1Add47711 = tf.keras.layers.Input(shape=([1, 1, 1, 2]))
in0Con16266 = tf.keras.layers.Input(shape=([1]))
in0Sub40739 = tf.keras.layers.Input(shape=([3]))
in1Sub40739 = tf.keras.layers.Input(shape=([3]))
in0Con91163 = tf.keras.layers.Input(shape=([3, 3]))
in0Lea69374 = tf.keras.layers.Input(shape=([1, 2]))
in0Con2474 = tf.keras.layers.Input(shape=([2, 2]))
in0Sep47615 = tf.keras.layers.Input(shape=([2, 1]))

Add47711 = keras.layers.Add(name = 'Add47711', )([in0Add47711,in1Add47711])
Res57335 = keras.layers.Reshape((1, 1, 2), name = 'Res57335', )(Add47711)
Res11690 = keras.layers.Reshape((1, 2), name = 'Res11690', )(Res57335)
Fla45202 = keras.layers.Flatten(name = 'Fla45202', )(Res11690)
Con16266 = keras.layers.Concatenate(axis=1, name = 'Con16266', )([Fla45202,in0Con16266])
Sub40739 = keras.layers.Subtract(name = 'Sub40739', )([in0Sub40739,in1Sub40739])
Mul15691 = keras.layers.Multiply(name = 'Mul15691', )([Con16266,Sub40739])
Res77295 = keras.layers.Reshape((3, 1), name = 'Res77295', )(Mul15691)
Con91163 = keras.layers.Concatenate(axis=2, name = 'Con91163', )([Res77295,in0Con91163])
Lea69374 = keras.layers.LeakyReLU(alpha=5.491545385826793, name = 'Lea69374', input_shape=(1, 2))(in0Lea69374)
Lay5117 = keras.layers.LayerNormalization(axis=2, epsilon=2.0770525078375397, name = 'Lay5117', )(Lea69374)
Zer20038 = keras.layers.ZeroPadding1D(padding=((1, 0)), name = 'Zer20038', )(Lay5117)
Con2474 = keras.layers.Concatenate(axis=2, name = 'Con2474', )([Zer20038,in0Con2474])
Sep47615 = keras.layers.SeparableConv1D(4, (2),strides=(1), padding='valid', name = 'Sep47615', )(in0Sep47615)
Up_85228 = keras.layers.UpSampling1D(size=(2), name = 'Up_85228', )(Sep47615)
Bat16427 = keras.layers.BatchNormalization(axis=2, epsilon=0.13710232359324176,  name = 'Bat16427', )(Up_85228)
Ave90021 = keras.layers.Average(name = 'Ave90021', )([Con2474,Bat16427])
Zer64014 = keras.layers.ZeroPadding1D(padding=((1, 0)), name = 'Zer64014', )(Ave90021)
Add37546 = keras.layers.Add(name = 'Add37546', )([Con91163,Zer64014])
model = tf.keras.models.Model(inputs=[in0Add47711,in1Add47711,in0Con16266,in0Sub40739,in1Sub40739,in0Con91163,in0Lea69374,in0Con2474,in0Sep47615], outputs=Add37546)
w = model.get_layer('Sep47615').get_weights() 
w[0] = np.array([[[0.0656]], [[0.6764]]])
w[1] = np.array([[[0.4689, 0.7053, 0.6527, 0.2161]]])
w[2] = np.array([0, 0, 0, 0])
model.get_layer('Sep47615').set_weights(w) 
w = model.get_layer('Bat16427').get_weights() 
w[0] = np.array([0.6981, 0.811, 0.7433, 0.2366])
w[1] = np.array([0.3882, 0.2776, 0.2728, 0.9033])
w[2] = np.array([0.7498, 0.3684, 0.1991, 0.7365])
w[3] = np.array([0.607, 0.4461, 0.5851, 0.9965])
model.get_layer('Bat16427').set_weights(w) 
in0Add47711 = tf.constant([[[[[0.5176, 0.239]]]]])
in1Add47711 = tf.constant([[[[[0.5112, 0.4858]]]]])
in0Con16266 = tf.constant([[0.3093]])
in0Sub40739 = tf.constant([[0.708, 0.4142, 0.7923]])
in1Sub40739 = tf.constant([[0.5287, 0.6193, 0.2441]])
in0Con91163 = tf.constant([[[0.8598, 0.2271, 0.337], [0.8774, 0.8997, 0.2129], [0.7278, 0.0611, 0.9364]]])
in0Lea69374 = tf.constant([[[0.7432, 0.2878]]])
in0Con2474 = tf.constant([[[0.0362, 0.0112], [0.891, 0.7171]]])
in0Sep47615 = tf.constant([[[0.6821], [0.1129]]])
print (np.array2string(model.predict([in0Add47711,in1Add47711,in0Con16266,in0Sub40739,in1Sub40739,in0Con91163,in0Lea69374,in0Con2474,in0Sep47615],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Add37546.png')

LAdd47711 = add_layer([[[[[[0.5176, 0.239]]]]], [[[[[0.5112, 0.4858]]]]]], Add47711), 
LRes57335 = reshape_layer(Add47711, [1, 1, 2], Res57335), 
LRes11690 = reshape_layer(Res57335, [1, 2], Res11690), 
LFla45202 = flatten_layer(Res11690, Fla45202), 
LCon16266 = concatenate_layer([Fla45202,[[0.3093]]], 1, Con16266), 
LSub40739 = subtract_layer([[0.708, 0.4142, 0.7923]], [[0.5287, 0.6193, 0.2441]], Sub40739), 
LMul15691 = multiply_layer([Con16266,Sub40739], Mul15691), 
LRes77295 = reshape_layer(Mul15691, [3, 1], Res77295), 
LCon91163 = concatenate_layer([Res77295,[[[0.8598, 0.2271, 0.337], [0.8774, 0.8997, 0.2129], [0.7278, 0.0611, 0.9364]]]], 2, Con91163), 
LLea69374 = leaky_relu_layer([[[0.7432, 0.2878]]], 5.491545385826793, Lea69374), 
LLay5117 = layer_normalization_layer(Lea69374, 2, 2.0770525078375397, Lay5117), 
LZer20038 = zero_padding1D_layer(Lay5117, 1, 0, Zer20038), 
LCon2474 = concatenate_layer([Zer20038,[[[0.0362, 0.0112], [0.891, 0.7171]]]], 2, Con2474), 
LSep47615 = separable_conv1D_layer([[[0.6821], [0.1129]]], 2,[[[[0.0656]], [[0.6764]]],[[[0.4689, 0.7053, 0.6527, 0.2161]]]],[0, 0, 0, 0], 1, false, Sep47615), 
LUp_85228 = up_sampling1D_layer(Sep47615, 2, Up_85228), 
LBat16427 = batch_normalization_layer(Up_85228, 2, 0.13710232359324176, [0.6981, 0.811, 0.7433, 0.2366], [0.3882, 0.2776, 0.2728, 0.9033], [0.7498, 0.3684, 0.1991, 0.7365], [0.607, 0.4461, 0.5851, 0.9965], Bat16427), 
LAve90021 = average_layer([Con2474,Bat16427], Ave90021), 
LZer64014 = zero_padding1D_layer(Ave90021, 1, 0, Zer64014), 
LAdd37546 = add_layer([Con91163,Zer64014], Add37546), 
exec_layers([LAdd47711,LRes57335,LRes11690,LFla45202,LCon16266,LSub40739,LMul15691,LRes77295,LCon91163,LLea69374,LLay5117,LZer20038,LCon2474,LSep47615,LUp_85228,LBat16427,LAve90021,LZer64014,LAdd37546],["Add47711","Res57335","Res11690","Fla45202","Con16266","Sub40739","Mul15691","Res77295","Con91163","Lea69374","Lay5117","Zer20038","Con2474","Sep47615","Up_85228","Bat16427","Ave90021","Zer64014","Add37546"],Add37546,"Add37546")

Actual (Unparsed): [[[0.1844639, 0.8598000, 0.2271000, 0.3370000], [-0.2349780, 0.8659421, 1.0016988, 0.5912252], [0.1612656, 0.6383132, 0.5904988, 1.6676753]]]

Expected (Unparsed): [[[0.18446384000000002,0.8598,0.2271,0.337],[-0.23497802563201406,0.8659421177877668,1.0016988058897072,0.5912252491494876],[0.16126560359245234,0.6383132285633004,0.590498805889707,1.6676752491494877]]]

Actual:   [[[0.1845, 0.8598, 0.2271, 0.337], [-0.2349, 0.866, 1.0017, 0.5913], [0.1613, 0.6384, 0.5905, 1.6677]]]

Expected: [[[0.1845, 0.8598, 0.2271, 0.337], [-0.2349, 0.866, 1.0017, 0.5913], [0.1613, 0.6384, 0.5905, 1.6677]]]