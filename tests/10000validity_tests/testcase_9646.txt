import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Min62210 = tf.keras.layers.Input(shape=([1, 1, 2]))
in1Min62210 = tf.keras.layers.Input(shape=([1, 1, 2]))
in0Sub88140 = tf.keras.layers.Input(shape=([2, 2]))
in1Sub88140 = tf.keras.layers.Input(shape=([2, 2]))
in0Con31945 = tf.keras.layers.Input(shape=([2, 2]))
in0Con11289 = tf.keras.layers.Input(shape=([2, 4, 3]))
in0Sub63879 = tf.keras.layers.Input(shape=([3, 2, 3]))
in1Sub63879 = tf.keras.layers.Input(shape=([3, 2, 3]))

Min62210 = keras.layers.Minimum(name = 'Min62210', )([in0Min62210,in1Min62210])
Sep59287 = keras.layers.SeparableConv2D(4, (1, 1),strides=(1, 1), padding='valid', name = 'Sep59287', )(Min62210)
Res94892 = keras.layers.Reshape((1, 4), name = 'Res94892', )(Sep59287)
Zer92346 = keras.layers.ZeroPadding1D(padding=((1, 0)), name = 'Zer92346', )(Res94892)
Sub88140 = keras.layers.Subtract(name = 'Sub88140', )([in0Sub88140,in1Sub88140])
Con31945 = keras.layers.Concatenate(axis=2, name = 'Con31945', )([Sub88140,in0Con31945])
Add26202 = keras.layers.Add(name = 'Add26202', )([Zer92346,Con31945])
Res84668 = keras.layers.Reshape((2, 4, 1), name = 'Res84668', )(Add26202)
Con11289 = keras.layers.Concatenate(axis=3, name = 'Con11289', )([Res84668,in0Con11289])
Sub63879 = keras.layers.Subtract(name = 'Sub63879', )([in0Sub63879,in1Sub63879])
Loc54658 = keras.layers.LocallyConnected2D(3, (2, 2),strides=(1, 1), name = 'Loc54658', )(Sub63879)
Res88610 = keras.layers.Reshape((2, 3), name = 'Res88610', )(Loc54658)
Max5711 = keras.layers.MaxPool1D(pool_size=(2), strides=(10), padding='valid', name = 'Max5711', )(Res88610)
Res54169 = keras.layers.Reshape((1, 3, 1), name = 'Res54169', )(Max5711)
Con54084 = keras.layers.Conv2DTranspose(4, (1, 2),strides=(1, 1), padding='same', name = 'Con54084', )(Res54169)
Zer90585 = keras.layers.ZeroPadding2D(padding=((1, 0), (1, 0)), name = 'Zer90585', )(Con54084)
Sub92719 = keras.layers.Subtract(name = 'Sub92719', )([Con11289,Zer90585])
model = tf.keras.models.Model(inputs=[in0Min62210,in1Min62210,in0Sub88140,in1Sub88140,in0Con31945,in0Con11289,in0Sub63879,in1Sub63879], outputs=Sub92719)
w = model.get_layer('Sep59287').get_weights() 
w[0] = np.array([[[[0.746], [0.5683]]]])
w[1] = np.array([[[[0.5903, 0.2648, 0.2809, 0.0278], [0.925, 0.7992, 0.1624, 0.6084]]]])
w[2] = np.array([0, 0, 0, 0])
model.get_layer('Sep59287').set_weights(w) 
w = model.get_layer('Loc54658').get_weights() 
w[0] = np.array([[[0.8513, 0.5508, 0.7138], [0.2722, 0.0425, 0.2939], [0.023, 0.2694, 0.2728], [0.5039, 0.0765, 0.9426], [0.3452, 0.6075, 0.2801], [0.1285, 0.9942, 0.3425], [0.6575, 0.2789, 0.4842], [0.0502, 0.6795, 0.4052], [0.3744, 0.7324, 0.3498], [0.703, 0.7205, 0.1855], [0.6109, 0.5248, 0.6067], [0.337, 0.4564, 0.0138]], [[0.1786, 0.6365, 0.619], [0.7649, 0.2824, 0.9824], [0.3411, 0.3342, 0.4074], [0.1997, 0.5272, 0.2866], [0.875, 0.5302, 0.5298], [0.738, 0.1209, 0.9414], [0.9261, 0.0265, 0.4773], [0.3188, 0.9037, 0.2325], [0.0771, 0.7633, 0.2966], [0.7512, 0.3737, 0.2879], [0.8819, 0.0231, 0.301], [0.1764, 0.287, 0.8252]]])
w[1] = np.array([[[0, 0, 0]], [[0, 0, 0]]])
model.get_layer('Loc54658').set_weights(w) 
w = model.get_layer('Con54084').get_weights() 
w[0] = np.array([[[[0.7072], [0.7246], [0.1259], [0.7684]], [[0.6412], [0.2033], [0.8749], [0.1409]]]])
w[1] = np.array([0, 0, 0, 0])
model.get_layer('Con54084').set_weights(w) 
in0Min62210 = tf.constant([[[[0.9012, 0.591]]]])
in1Min62210 = tf.constant([[[[0.3354, 0.0968]]]])
in0Sub88140 = tf.constant([[[0.6975, 0.896], [0.9447, 0.1933]]])
in1Sub88140 = tf.constant([[[0.5666, 0.4578], [0.7373, 0.0576]]])
in0Con31945 = tf.constant([[[0.742, 0.4892], [0.5303, 0.0914]]])
in0Con11289 = tf.constant([[[[0.2253, 0.9497, 0.6519], [0.6205, 0.5525, 0.4422], [0.3589, 0.1758, 0.9523], [0.1559, 0.6053, 0.0357]], [[0.0713, 0.3592, 0.7375], [0.6322, 0.9313, 0.4102], [0.7316, 0.9722, 0.3452], [0.8064, 0.4842, 0.7169]]]])
in0Sub63879 = tf.constant([[[[0.5635, 0.9967, 0.1401], [0.6285, 0.6842, 0.3415]], [[0.8531, 0.1939, 0.4775], [0.2, 0.6768, 0.2191]], [[0.4604, 0.0721, 0.057], [0.9378, 0.9282, 0.1776]]]])
in1Sub63879 = tf.constant([[[[0.5935, 0.3749, 0.3778], [0.4962, 0.1472, 0.0862]], [[0.1697, 0.2773, 0.8572], [0.0524, 0.2419, 0.6654]], [[0.3294, 0.8409, 0.6599], [0.4113, 0.497, 0.3664]]]])
print (np.array2string(model.predict([in0Min62210,in1Min62210,in0Sub88140,in1Sub88140,in0Con31945,in0Con11289,in0Sub63879,in1Sub63879],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Sub92719.png')

LMin62210 = minimum_layer([[[[[0.9012, 0.591]]]], [[[[0.3354, 0.0968]]]]], Min62210), 
LSep59287 = separable_conv2D_layer(Min62210, 1, 1,[[[[[0.746], [0.5683]]]],[[[[0.5903, 0.2648, 0.2809, 0.0278], [0.925, 0.7992, 0.1624, 0.6084]]]]],[0, 0, 0, 0], 1, 1, false, Sep59287), 
LRes94892 = reshape_layer(Sep59287, [1, 4], Res94892), 
LZer92346 = zero_padding1D_layer(Res94892, 1, 0, Zer92346), 
LSub88140 = subtract_layer([[[0.6975, 0.896], [0.9447, 0.1933]]], [[[0.5666, 0.4578], [0.7373, 0.0576]]], Sub88140), 
LCon31945 = concatenate_layer([Sub88140,[[[0.742, 0.4892], [0.5303, 0.0914]]]], 2, Con31945), 
LAdd26202 = add_layer([Zer92346,Con31945], Add26202), 
LRes84668 = reshape_layer(Add26202, [2, 4, 1], Res84668), 
LCon11289 = concatenate_layer([Res84668,[[[[0.2253, 0.9497, 0.6519], [0.6205, 0.5525, 0.4422], [0.3589, 0.1758, 0.9523], [0.1559, 0.6053, 0.0357]], [[0.0713, 0.3592, 0.7375], [0.6322, 0.9313, 0.4102], [0.7316, 0.9722, 0.3452], [0.8064, 0.4842, 0.7169]]]]], 3, Con11289), 
LSub63879 = subtract_layer([[[[0.5635, 0.9967, 0.1401], [0.6285, 0.6842, 0.3415]], [[0.8531, 0.1939, 0.4775], [0.2, 0.6768, 0.2191]], [[0.4604, 0.0721, 0.057], [0.9378, 0.9282, 0.1776]]]], [[[[0.5935, 0.3749, 0.3778], [0.4962, 0.1472, 0.0862]], [[0.1697, 0.2773, 0.8572], [0.0524, 0.2419, 0.6654]], [[0.3294, 0.8409, 0.6599], [0.4113, 0.497, 0.3664]]]], Sub63879), 
LLoc54658 = locally_connected2D_layer(Sub63879, 2, 2,[[[0.8513, 0.5508, 0.7138], [0.2722, 0.0425, 0.2939], [0.023, 0.2694, 0.2728], [0.5039, 0.0765, 0.9426], [0.3452, 0.6075, 0.2801], [0.1285, 0.9942, 0.3425], [0.6575, 0.2789, 0.4842], [0.0502, 0.6795, 0.4052], [0.3744, 0.7324, 0.3498], [0.703, 0.7205, 0.1855], [0.6109, 0.5248, 0.6067], [0.337, 0.4564, 0.0138]], [[0.1786, 0.6365, 0.619], [0.7649, 0.2824, 0.9824], [0.3411, 0.3342, 0.4074], [0.1997, 0.5272, 0.2866], [0.875, 0.5302, 0.5298], [0.738, 0.1209, 0.9414], [0.9261, 0.0265, 0.4773], [0.3188, 0.9037, 0.2325], [0.0771, 0.7633, 0.2966], [0.7512, 0.3737, 0.2879], [0.8819, 0.0231, 0.301], [0.1764, 0.287, 0.8252]]],[[[0, 0, 0]], [[0, 0, 0]]], 1, 1, Loc54658), 
LRes88610 = reshape_layer(Loc54658, [2, 3], Res88610), 
LMax5711 = max_pool1D_layer(Res88610, 2, 10, false, Max5711), 
LRes54169 = reshape_layer(Max5711, [1, 3, 1], Res54169), 
LCon54084 = conv2D_transpose_layer(Res54169, 1, 2,[[[[0.7072], [0.7246], [0.1259], [0.7684]], [[0.6412], [0.2033], [0.8749], [0.1409]]]],[0, 0, 0, 0], 1, 1, true, Con54084), 
LZer90585 = zero_padding2D_layer(Con54084, 1, 0, 1, 0, Zer90585), 
LSub92719 = subtract_layer(Con11289,Zer90585, Sub92719), 
exec_layers([LMin62210,LSep59287,LRes94892,LZer92346,LSub88140,LCon31945,LAdd26202,LRes84668,LCon11289,LSub63879,LLoc54658,LRes88610,LMax5711,LRes54169,LCon54084,LZer90585,LSub92719],["Min62210","Sep59287","Res94892","Zer92346","Sub88140","Con31945","Add26202","Res84668","Con11289","Sub63879","Loc54658","Res88610","Max5711","Res54169","Con54084","Zer90585","Sub92719"],Sub92719,"Sub92719")

Actual (Unparsed): [[[[0.1309000, 0.2253000, 0.9497000, 0.6519000], [0.4382000, 0.6205000, 0.5525000, 0.4422000], [0.7420000, 0.3589000, 0.1758000, 0.9523000], [0.4892000, 0.1559000, 0.6053000, 0.0357000]], [[0.4059836, 0.0713000, 0.3592000, 0.7375000], [-0.4224696, -0.0526350, 0.8123092, -0.3160313], [-0.3661914, 0.1606638, 0.0794975, -0.1896575], [-0.8457993, 0.0418868, -0.0875332, -0.0547813]]]]

Expected (Unparsed): [[[[0.13090000000000002,0.2253,0.9497,0.6519],[0.43820000000000003,0.6205,0.5525,0.4422],[0.742,0.3589,0.1758,0.9523],[0.4892,0.1559,0.6053,0.0357]],[[0.40598360052000004,0.0713,0.3592,0.7375],[-0.4224696188480001,-0.05263506063800005,0.812309199373,-0.316031383652],[-0.36619146749200016,0.16066380280499992,0.07949749929399985,-0.18965756786100002],[-0.8457993314600001,0.04188680056500005,-0.08753319395700004,-0.0547813539669999]]]]

Actual:   [[[[0.1309, 0.2253, 0.9497, 0.6519], [0.4382, 0.6205, 0.5525, 0.4422], [0.742, 0.3589, 0.1758, 0.9523], [0.4892, 0.1559, 0.6053, 0.0357]], [[0.406, 0.0713, 0.3592, 0.7375], [-0.4224, -0.0526, 0.8124, -0.316], [-0.3661, 0.1607, 0.0795, -0.1896], [-0.8457, 0.0419, -0.0875, -0.0547]]]]

Expected: [[[[0.131, 0.2253, 0.9497, 0.6519], [0.4383, 0.6205, 0.5525, 0.4422], [0.742, 0.3589, 0.1758, 0.9523], [0.4892, 0.1559, 0.6053, 0.0357]], [[0.406, 0.0713, 0.3592, 0.7375], [-0.4224, -0.0526, 0.8124, -0.316], [-0.3661, 0.1607, 0.0795, -0.1896], [-0.8457, 0.0419, -0.0875, -0.0547]]]]