import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Mul11114 = tf.keras.layers.Input(shape=([2, 2, 1]))
in1Mul11114 = tf.keras.layers.Input(shape=([2, 2, 1]))
in0Con31070 = tf.keras.layers.Input(shape=([2, 2, 1]))
in0Dot8639 = tf.keras.layers.Input(shape=([3]))
in1Dot8639 = tf.keras.layers.Input(shape=([3]))

Mul11114 = keras.layers.Multiply(name = 'Mul11114', )([in0Mul11114,in1Mul11114])
Res66884 = keras.layers.Reshape((2, 2, 1, 1), name = 'Res66884', )(Mul11114)
Cro69702 = keras.layers.Cropping3D(cropping=((0, 0), (0, 0), (0, 0)), name = 'Cro69702', )(Res66884)
Res95135 = keras.layers.Reshape((2, 2, 1), name = 'Res95135', )(Cro69702)
Con31070 = keras.layers.Concatenate(axis=3, name = 'Con31070', )([Res95135,in0Con31070])
Dot8639 = keras.layers.Dot(axes=(1, 1), name = 'Dot8639', )([in0Dot8639,in1Dot8639])
Res21901 = keras.layers.Reshape((1, 1), name = 'Res21901', )(Dot8639)
Res81001 = keras.layers.Reshape((1, 1, 1), name = 'Res81001', )(Res21901)
Loc99211 = keras.layers.LocallyConnected2D(2, (1, 1),strides=(1, 1), name = 'Loc99211', )(Res81001)
Lea83580 = keras.layers.LeakyReLU(alpha=8.531073548154104, name = 'Lea83580', )(Loc99211)
Zer41624 = keras.layers.ZeroPadding2D(padding=((1, 0), (1, 0)), name = 'Zer41624', )(Lea83580)
Mul61405 = keras.layers.Multiply(name = 'Mul61405', )([Con31070,Zer41624])
model = tf.keras.models.Model(inputs=[in0Mul11114,in1Mul11114,in0Con31070,in0Dot8639,in1Dot8639], outputs=Mul61405)
w = model.get_layer('Loc99211').get_weights() 
w[0] = np.array([[[0.8867, 0.9206]]])
w[1] = np.array([[[0, 0]]])
model.get_layer('Loc99211').set_weights(w) 
in0Mul11114 = tf.constant([[[[0.9922], [0.0907]], [[0.0969], [0.3015]]]])
in1Mul11114 = tf.constant([[[[0.966], [0.8699]], [[0.8923], [0.8962]]]])
in0Con31070 = tf.constant([[[[0.2537], [0.8855]], [[0.5823], [0.3848]]]])
in0Dot8639 = tf.constant([[0.8033, 0.1625, 0.4324]])
in1Dot8639 = tf.constant([[0.9754, 0.0874, 0.6066]])
print (np.array2string(model.predict([in0Mul11114,in1Mul11114,in0Con31070,in0Dot8639,in1Dot8639],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Mul61405.png')

LMul11114 = multiply_layer([[[[[0.9922], [0.0907]], [[0.0969], [0.3015]]]], [[[[0.966], [0.8699]], [[0.8923], [0.8962]]]]], Mul11114), 
LRes66884 = reshape_layer(Mul11114, [2, 2, 1, 1], Res66884), 
LCro69702 = cropping3D_layer(Res66884, 0, 0, 0, 0, 0, 0, Cro69702), 
LRes95135 = reshape_layer(Cro69702, [2, 2, 1], Res95135), 
LCon31070 = concatenate_layer([Res95135,[[[[0.2537], [0.8855]], [[0.5823], [0.3848]]]]], 3, Con31070), 
LDot8639 = dot_layer([[0.8033, 0.1625, 0.4324]], [[0.9754, 0.0874, 0.6066]], 1, 1, Dot8639), 
LRes21901 = reshape_layer(Dot8639, [1, 1], Res21901), 
LRes81001 = reshape_layer(Res21901, [1, 1, 1], Res81001), 
LLoc99211 = locally_connected2D_layer(Res81001, 1, 1,[[[0.8867, 0.9206]]],[[[0, 0]]], 1, 1, Loc99211), 
LLea83580 = leaky_relu_layer(Loc99211, 8.531073548154104, Lea83580), 
LZer41624 = zero_padding2D_layer(Lea83580, 1, 0, 1, 0, Zer41624), 
LMul61405 = multiply_layer([Con31070,Zer41624], Mul61405), 
exec_layers([LMul11114,LRes66884,LCro69702,LRes95135,LCon31070,LDot8639,LRes21901,LRes81001,LLoc99211,LLea83580,LZer41624,LMul61405],["Mul11114","Res66884","Cro69702","Res95135","Con31070","Dot8639","Res21901","Res81001","Loc99211","Lea83580","Zer41624","Mul61405"],Mul61405,"Mul61405")

Actual (Unparsed): [[[[0.0000000, 0.0000000], [0.0000000, 0.0000000]], [[0.0000000, 0.0000000], [0.2539740, 0.3755141]]]]

Expected (Unparsed): [[[[0.0,0.0],[0.0,0.0]],[[0.0,0.0],[0.25397398596837284,0.37551414812030076]]]]

Actual:   [[[[0, 0], [0, 0]], [[0, 0], [0.254, 0.3756]]]]

Expected: [[[[0, 0], [0, 0]], [[0, 0], [0.254, 0.3756]]]]