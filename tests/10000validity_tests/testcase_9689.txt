import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Mul97572 = tf.keras.layers.Input(shape=([2, 2]))
in1Mul97572 = tf.keras.layers.Input(shape=([2, 2]))
in0Add34395 = tf.keras.layers.Input(shape=([2, 2, 1, 1]))
in1Add34395 = tf.keras.layers.Input(shape=([2, 2, 1, 1]))
in0Thr77107 = tf.keras.layers.Input(shape=([1, 2]))

Mul97572 = keras.layers.Multiply(name = 'Mul97572', )([in0Mul97572,in1Mul97572])
Sof89581 = keras.layers.Softmax(axis=1, name = 'Sof89581', )(Mul97572)
Res51145 = keras.layers.Reshape((2, 2, 1), name = 'Res51145', )(Sof89581)
Add34395 = keras.layers.Add(name = 'Add34395', )([in0Add34395,in1Add34395])
Res28659 = keras.layers.Reshape((2, 2, 1), name = 'Res28659', )(Add34395)
Min37955 = keras.layers.Minimum(name = 'Min37955', )([Res51145,Res28659])
Res11199 = keras.layers.Reshape((2, 2), name = 'Res11199', )(Min37955)
Thr77107 = keras.layers.ThresholdedReLU(theta=9.854427202312017, name = 'Thr77107', input_shape=(1, 2))(in0Thr77107)
Zer61107 = keras.layers.ZeroPadding1D(padding=((1, 0)), name = 'Zer61107', )(Thr77107)
Max14432 = keras.layers.Maximum(name = 'Max14432', )([Res11199,Zer61107])
model = tf.keras.models.Model(inputs=[in0Mul97572,in1Mul97572,in0Add34395,in1Add34395,in0Thr77107], outputs=Max14432)
in0Mul97572 = tf.constant([[[0.5691, 0.3666], [0.5886, 0.9912]]])
in1Mul97572 = tf.constant([[[0.0195, 0.804], [0.1371, 0.1811]]])
in0Add34395 = tf.constant([[[[[0.1938]], [[0.4896]]], [[[0.0131]], [[0.8387]]]]])
in1Add34395 = tf.constant([[[[[0.6944]], [[0.7367]]], [[[0.7184]], [[0.046]]]]])
in0Thr77107 = tf.constant([[[0.787, 0.8353]]])
print (np.array2string(model.predict([in0Mul97572,in1Mul97572,in0Add34395,in1Add34395,in0Thr77107],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Max14432.png')

LMul97572 = multiply_layer([[[[0.5691, 0.3666], [0.5886, 0.9912]]], [[[0.0195, 0.804], [0.1371, 0.1811]]]], Mul97572), 
LSof89581 = softmax_layer(Mul97572, 1, Sof89581), 
LRes51145 = reshape_layer(Sof89581, [2, 2, 1], Res51145), 
LAdd34395 = add_layer([[[[[[0.1938]], [[0.4896]]], [[[0.0131]], [[0.8387]]]]], [[[[[0.6944]], [[0.7367]]], [[[0.7184]], [[0.046]]]]]], Add34395), 
LRes28659 = reshape_layer(Add34395, [2, 2, 1], Res28659), 
LMin37955 = minimum_layer([Res51145,Res28659], Min37955), 
LRes11199 = reshape_layer(Min37955, [2, 2], Res11199), 
LThr77107 = thresholded_relu_layer([[[0.787, 0.8353]]], 9.854427202312017, Thr77107), 
LZer61107 = zero_padding1D_layer(Thr77107, 1, 0, Zer61107), 
LMax14432 = maximum_layer([Res11199,Zer61107], Max14432), 
exec_layers([LMul97572,LSof89581,LRes51145,LAdd34395,LRes28659,LMin37955,LRes11199,LThr77107,LZer61107,LMax14432],["Mul97572","Sof89581","Res51145","Add34395","Res28659","Min37955","Res11199","Thr77107","Zer61107","Max14432"],Max14432,"Max14432")

Actual (Unparsed): [[[0.4826071, 0.5287782], [0.5173929, 0.4712218]]]

Expected (Unparsed): [[[0.48260711801313305,0.5287781785341544],[0.5173928819868668,0.47122182146584546]]]

Actual:   [[[0.4827, 0.5288], [0.5174, 0.4713]]]

Expected: [[[0.4827, 0.5288], [0.5174, 0.4713]]]