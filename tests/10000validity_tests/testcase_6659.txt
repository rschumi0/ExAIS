import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Bat72116 = tf.keras.layers.Input(shape=([4, 4, 2]))

Bat72116 = keras.layers.BatchNormalization(axis=1, epsilon=0.6565693029125859,  name = 'Bat72116', )(in0Bat72116)
Res27454 = keras.layers.Reshape((4, 8), name = 'Res27454', )(Bat72116)
Ave80337 = keras.layers.AveragePooling1D(pool_size=(1), name = 'Ave80337', )(Res27454)
model = tf.keras.models.Model(inputs=[in0Bat72116], outputs=Ave80337)
w = model.get_layer('Bat72116').get_weights() 
w[0] = np.array([0.3415, 0.5258, 0.1881, 0.2536])
w[1] = np.array([0.8436, 0.7449, 0.4726, 0.8861])
w[2] = np.array([0.5226, 0.0666, 0.0371, 0.0107])
w[3] = np.array([0.4722, 0.4342, 0.0084, 0.0685])
model.get_layer('Bat72116').set_weights(w) 
in0Bat72116 = tf.constant([[[[1.3417, 1.9227], [1.9097, 1.0757], [1.3947, 1.0924], [1.5356, 1.656]], [[1.9031, 1.5597], [1.1249, 1.0639], [1.8888, 1.6858], [1.2479, 1.0993]], [[1.092, 1.8148], [1.0476, 1.9299], [1.6669, 1.0366], [1.5892, 1.4125]], [[1.5641, 1.7265], [1.377, 1.5125], [1.0083, 1.7103], [1.8731, 1.2685]]]])
print (np.array2string(model.predict([in0Bat72116],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Ave80337.png')

LBat72116 = batch_normalization_layer([[[[1.3417, 1.9227], [1.9097, 1.0757], [1.3947, 1.0924], [1.5356, 1.656]], [[1.9031, 1.5597], [1.1249, 1.0639], [1.8888, 1.6858], [1.2479, 1.0993]], [[1.092, 1.8148], [1.0476, 1.9299], [1.6669, 1.0366], [1.5892, 1.4125]], [[1.5641, 1.7265], [1.377, 1.5125], [1.0083, 1.7103], [1.8731, 1.2685]]]], 1, 0.6565693029125859, [0.3415, 0.5258, 0.1881, 0.2536], [0.8436, 0.7449, 0.4726, 0.8861], [0.5226, 0.0666, 0.0371, 0.0107], [0.4722, 0.4342, 0.0084, 0.0685], Bat72116), 
LRes27454 = reshape_layer(Bat72116, [4, 8], Res27454), 
LAve80337 = average_pooling1D_layer(Res27454, 1, Ave80337), 
exec_layers([LBat72116,LRes27454,LAve80337],["Bat72116","Res27454","Ave80337"],Ave80337,"Ave80337")

Actual (Unparsed): [[[1.1068843, 1.2936359, 1.2894573, 1.0213836, 1.1239202, 1.0267515, 1.1692099, 1.2079102], [1.6694812, 1.4965974, 1.2776984, 1.2469881, 1.6622819, 1.5600821, 1.3396225, 1.2648102], [0.7159320, 0.8826591, 0.7056904, 0.9092091, 0.8485433, 0.7031530, 0.8306203, 0.7898612], [1.3487396, 1.3971062, 1.2930167, 1.3333719, 1.1832091, 1.3922814, 1.4407672, 1.2607028]]]

Expected (Unparsed): [[[1.1068843464051834,1.2936359094150864,1.289457303013832,1.0213836308102882,1.1239202032718354,1.0267515328795915,1.1692098680361993,1.2079101919370465],[1.66948120504065,1.4965973576075113,1.2776984150800543,1.246988121855181,1.6622819067928516,1.560082078519913,1.3396224489597168,1.2648101608742057],[0.7159320355795384,0.8826591142759933,0.7056903611272383,0.9092090406151769,0.8485432662693446,0.7031530093485151,0.8306203359778193,0.7898612396777867],[1.3487395859153395,1.397106180966615,1.293016741493581,1.3333718746798358,1.1832090838864058,1.3922814344159335,1.4407671590116702,1.2607028525584616]]]

Actual:   [[[1.1069, 1.2937, 1.2895, 1.0214, 1.124, 1.0268, 1.1693, 1.208], [1.6695, 1.4966, 1.2777, 1.247, 1.6623, 1.5601, 1.3397, 1.2649], [0.716, 0.8827, 0.7057, 0.9093, 0.8486, 0.7032, 0.8307, 0.7899], [1.3488, 1.3972, 1.2931, 1.3334, 1.1833, 1.3923, 1.4408, 1.2608]]]

Expected: [[[1.1069, 1.2937, 1.2895, 1.0214, 1.124, 1.0268, 1.1693, 1.208], [1.6695, 1.4966, 1.2777, 1.247, 1.6623, 1.5601, 1.3397, 1.2649], [0.716, 0.8827, 0.7057, 0.9093, 0.8486, 0.7032, 0.8307, 0.7899], [1.3488, 1.3972, 1.2931, 1.3334, 1.1833, 1.3923, 1.4408, 1.2608]]]