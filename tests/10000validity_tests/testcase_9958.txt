import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Zer6111 = tf.keras.layers.Input(shape=([4, 3, 1, 1]))
in0Dot2989 = tf.keras.layers.Input(shape=([3]))
in1Dot2989 = tf.keras.layers.Input(shape=([3]))
in0Con95388 = tf.keras.layers.Input(shape=([14]))
in0Con85827 = tf.keras.layers.Input(shape=([15, 1]))
in0Dot99806 = tf.keras.layers.Input(shape=([2]))
in1Dot99806 = tf.keras.layers.Input(shape=([2]))
in0Con130 = tf.keras.layers.Input(shape=([3, 5, 1]))
in0Den50780 = tf.keras.layers.Input(shape=([3, 5, 3]))

Zer6111 = keras.layers.ZeroPadding3D(padding=((1, 1), (1, 1), (1, 1)), name = 'Zer6111', )(in0Zer6111)
Res88829 = keras.layers.Reshape((6, 5, 3), name = 'Res88829', )(Zer6111)
Res8059 = keras.layers.Reshape((6, 15), name = 'Res8059', )(Res88829)
Glo14464 = keras.layers.GlobalMaxPool1D(name = 'Glo14464', )(Res8059)
Dot2989 = keras.layers.Dot(axes=(1, 1), name = 'Dot2989', )([in0Dot2989,in1Dot2989])
Con95388 = keras.layers.Concatenate(axis=1, name = 'Con95388', )([Dot2989,in0Con95388])
Add64952 = keras.layers.Add(name = 'Add64952', )([Glo14464,Con95388])
Res25087 = keras.layers.Reshape((15, 1), name = 'Res25087', )(Add64952)
Con85827 = keras.layers.Concatenate(axis=2, name = 'Con85827', )([Res25087,in0Con85827])
Dot99806 = keras.layers.Dot(axes=(1, 1), name = 'Dot99806', )([in0Dot99806,in1Dot99806])
Res62182 = keras.layers.Reshape((1, 1), name = 'Res62182', )(Dot99806)
Res76505 = keras.layers.Reshape((1, 1, 1), name = 'Res76505', )(Res62182)
Zer4848 = keras.layers.ZeroPadding2D(padding=((2, 0), (4, 0)), name = 'Zer4848', )(Res76505)
Con130 = keras.layers.Concatenate(axis=3, name = 'Con130', )([Zer4848,in0Con130])
Den50780 = keras.layers.Dense(2,name = 'Den50780', )(in0Den50780)
Add76070 = keras.layers.Add(name = 'Add76070', )([Con130,Den50780])
Res76421 = keras.layers.Reshape((3, 10), name = 'Res76421', )(Add76070)
Sep75677 = keras.layers.SeparableConv1D(2, (3),strides=(1), padding='valid', name = 'Sep75677', )(Res76421)
Zer8203 = keras.layers.ZeroPadding1D(padding=((14, 0)), name = 'Zer8203', )(Sep75677)
Ave37129 = keras.layers.Average(name = 'Ave37129', )([Con85827,Zer8203])
model = tf.keras.models.Model(inputs=[in0Zer6111,in0Dot2989,in1Dot2989,in0Con95388,in0Con85827,in0Dot99806,in1Dot99806,in0Con130,in0Den50780], outputs=Ave37129)
w = model.get_layer('Den50780').get_weights() 
w[0] = np.array([[0.7593, 0.0077], [0.4331, 0.1374], [0.8662, 0.7942]])
w[1] = np.array([0.7326, 0.9386])
model.get_layer('Den50780').set_weights(w) 
w = model.get_layer('Sep75677').get_weights() 
w[0] = np.array([[[0.7276], [0.2298], [0.6876], [0.8943], [0.9181], [0.359], [0.4526], [0.04], [0.078], [0.4813]], [[0.2377], [0.8581], [0.4691], [0.1805], [0.7851], [0.5392], [0.1722], [0.2524], [0.6035], [0.8021]], [[0.4961], [0.3911], [0.7069], [0.8419], [0.9491], [0.1983], [0.912], [0.7194], [0.5302], [0.1911]]])
w[1] = np.array([[[0.9919, 0.0273], [0.0258, 0.9186], [0.0179, 0.3674], [0.5816, 0.7512], [0.8019, 0.3957], [0.7209, 0.5621], [0.3347, 0.4077], [0.0455, 0.5189], [0.8776, 0.1717], [0.9455, 0.0591]]])
w[2] = np.array([0, 0])
model.get_layer('Sep75677').set_weights(w) 
in0Zer6111 = tf.constant([[[[[1.4708]], [[1.2092]], [[1.9509]]], [[[1.3536]], [[1.9478]], [[1.7104]]], [[[1.4331]], [[1.3306]], [[1.6624]]], [[[1.11]], [[1.7688]], [[1.0094]]]]])
in0Dot2989 = tf.constant([[0.5952, 0.3298, 0.1058]])
in1Dot2989 = tf.constant([[0.7745, 0.4763, 0.9623]])
in0Con95388 = tf.constant([[0.4226, 0.4337, 0.569, 0.6743, 0.5107, 0.7757, 0.2217, 0.5502, 0.765, 0.8099, 0.7694, 0.54, 0.5102, 0.9257]])
in0Con85827 = tf.constant([[[0.7545], [0.2613], [0.6194], [0.3662], [0.673], [0.4909], [0.6426], [0.0502], [0.3246], [0.0656], [0.0932], [0.1352], [0.435], [0.6254], [0.675]]])
in0Dot99806 = tf.constant([[0.7975, 0.5216]])
in1Dot99806 = tf.constant([[0.3377, 0.909]])
in0Con130 = tf.constant([[[[0.3866], [0.2607], [0.2935], [0.62], [0.0418]], [[0.5829], [0.4445], [0.2237], [0.2634], [0.7583]], [[0.5718], [0.7946], [0.6968], [0.3965], [0.4753]]]])
in0Den50780 = tf.constant([[[[0.7833, 0.0423, 0.5672], [0.6421, 0.7415, 0.6222], [0.271, 0.7964, 0.712], [0.759, 0.063, 0.8026], [0.8908, 0.7428, 0.3627]], [[0.1839, 0.4729, 0.0777], [0.9089, 0.9569, 0.7432], [0.3729, 0.4707, 0.2991], [0.0968, 0.3775, 0.6753], [0.2776, 0.3063, 0.2982]], [[0.4609, 0.967, 0.1516], [0.3975, 0.911, 0.7297], [0.4729, 0.1434, 0.1296], [0.7784, 0.818, 0.8582], [0.375, 0.3964, 0.1156]]]])
print (np.array2string(model.predict([in0Zer6111,in0Dot2989,in1Dot2989,in0Con95388,in0Con85827,in0Dot99806,in1Dot99806,in0Con130,in0Den50780],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Ave37129.png')

LZer6111 = zero_padding3D_layer([[[[[1.4708]], [[1.2092]], [[1.9509]]], [[[1.3536]], [[1.9478]], [[1.7104]]], [[[1.4331]], [[1.3306]], [[1.6624]]], [[[1.11]], [[1.7688]], [[1.0094]]]]], 1, 1, 1, 1, 1, 1, Zer6111), 
LRes88829 = reshape_layer(Zer6111, [6, 5, 3], Res88829), 
LRes8059 = reshape_layer(Res88829, [6, 15], Res8059), 
LGlo14464 = global_max_pool1D_layer(Res8059, Glo14464), 
LDot2989 = dot_layer([[0.5952, 0.3298, 0.1058]], [[0.7745, 0.4763, 0.9623]], 1, 1, Dot2989), 
LCon95388 = concatenate_layer([Dot2989,[[0.4226, 0.4337, 0.569, 0.6743, 0.5107, 0.7757, 0.2217, 0.5502, 0.765, 0.8099, 0.7694, 0.54, 0.5102, 0.9257]]], 1, Con95388), 
LAdd64952 = add_layer([Glo14464,Con95388], Add64952), 
LRes25087 = reshape_layer(Add64952, [15, 1], Res25087), 
LCon85827 = concatenate_layer([Res25087,[[[0.7545], [0.2613], [0.6194], [0.3662], [0.673], [0.4909], [0.6426], [0.0502], [0.3246], [0.0656], [0.0932], [0.1352], [0.435], [0.6254], [0.675]]]], 2, Con85827), 
LDot99806 = dot_layer([[0.7975, 0.5216]], [[0.3377, 0.909]], 1, 1, Dot99806), 
LRes62182 = reshape_layer(Dot99806, [1, 1], Res62182), 
LRes76505 = reshape_layer(Res62182, [1, 1, 1], Res76505), 
LZer4848 = zero_padding2D_layer(Res76505, 2, 0, 4, 0, Zer4848), 
LCon130 = concatenate_layer([Zer4848,[[[[0.3866], [0.2607], [0.2935], [0.62], [0.0418]], [[0.5829], [0.4445], [0.2237], [0.2634], [0.7583]], [[0.5718], [0.7946], [0.6968], [0.3965], [0.4753]]]]], 3, Con130), 
LDen50780 = dense_layer([[[[0.7833, 0.0423, 0.5672], [0.6421, 0.7415, 0.6222], [0.271, 0.7964, 0.712], [0.759, 0.063, 0.8026], [0.8908, 0.7428, 0.3627]], [[0.1839, 0.4729, 0.0777], [0.9089, 0.9569, 0.7432], [0.3729, 0.4707, 0.2991], [0.0968, 0.3775, 0.6753], [0.2776, 0.3063, 0.2982]], [[0.4609, 0.967, 0.1516], [0.3975, 0.911, 0.7297], [0.4729, 0.1434, 0.1296], [0.7784, 0.818, 0.8582], [0.375, 0.3964, 0.1156]]]], [[0.7593, 0.0077], [0.4331, 0.1374], [0.8662, 0.7942]],[0.7326, 0.9386], Den50780), 
LAdd76070 = add_layer([Con130,Den50780], Add76070), 
LRes76421 = reshape_layer(Add76070, [3, 10], Res76421), 
LSep75677 = separable_conv1D_layer(Res76421, 3,[[[[0.7276], [0.2298], [0.6876], [0.8943], [0.9181], [0.359], [0.4526], [0.04], [0.078], [0.4813]], [[0.2377], [0.8581], [0.4691], [0.1805], [0.7851], [0.5392], [0.1722], [0.2524], [0.6035], [0.8021]], [[0.4961], [0.3911], [0.7069], [0.8419], [0.9491], [0.1983], [0.912], [0.7194], [0.5302], [0.1911]]],[[[0.9919, 0.0273], [0.0258, 0.9186], [0.0179, 0.3674], [0.5816, 0.7512], [0.8019, 0.3957], [0.7209, 0.5621], [0.3347, 0.4077], [0.0455, 0.5189], [0.8776, 0.1717], [0.9455, 0.0591]]]],[0, 0], 1, false, Sep75677), 
LZer8203 = zero_padding1D_layer(Sep75677, 14, 0, Zer8203), 
LAve37129 = average_layer([Con85827,Zer8203], Ave37129), 
exec_layers([LZer6111,LRes88829,LRes8059,LGlo14464,LDot2989,LCon95388,LAdd64952,LRes25087,LCon85827,LDot99806,LRes62182,LRes76505,LZer4848,LCon130,LDen50780,LAdd76070,LRes76421,LSep75677,LZer8203,LAve37129],["Zer6111","Res88829","Res8059","Glo14464","Dot2989","Con95388","Add64952","Res25087","Con85827","Dot99806","Res62182","Res76505","Zer4848","Con130","Den50780","Add76070","Res76421","Sep75677","Zer8203","Ave37129"],Ave37129,"Ave37129")

Actual (Unparsed): [[[0.3599387, 0.3772500], [0.2113000, 0.1306500], [0.2168500, 0.3097000], [0.2845000, 0.1831000], [1.0725500, 0.3365000], [0.2553500, 0.2454500], [0.3878500, 0.3213000], [1.0847500, 0.0251000], [0.2751000, 0.1623000], [0.3825000, 0.0328000], [1.3804000, 0.0466000], [0.3847000, 0.0676000], [0.2700000, 0.2175000], [0.2551000, 0.3127000], [7.9288553, 6.5979659]]]

Expected (Unparsed): [[[0.35993874,0.37725],[0.2113,0.13065],[0.21685,0.3097],[0.2845,0.1831],[1.0725500000000001,0.3365],[0.25535,0.24545],[0.38785,0.3213],[1.08475,0.0251],[0.2751,0.1623],[0.3825,0.0328],[1.3804,0.0466],[0.3847,0.0676],[0.27,0.2175],[0.2551,0.3127],[7.928855241148737,6.597965907417286]]]

Actual:   [[[0.36, 0.3773], [0.2113, 0.1307], [0.2169, 0.3097], [0.2845, 0.1831], [1.0726, 0.3365], [0.2554, 0.2455], [0.3879, 0.3213], [1.0848, 0.0251], [0.2751, 0.1623], [0.3825, 0.0328], [1.3804, 0.0466], [0.3847, 0.0676], [0.27, 0.2175], [0.2551, 0.3127], [7.9289, 6.598]]]

Expected: [[[0.36, 0.3773], [0.2113, 0.1307], [0.2169, 0.3097], [0.2845, 0.1831], [1.0726, 0.3365], [0.2554, 0.2455], [0.3879, 0.3213], [1.0848, 0.0251], [0.2751, 0.1623], [0.3825, 0.0328], [1.3804, 0.0466], [0.3847, 0.0676], [0.27, 0.2175], [0.2551, 0.3127], [7.9289, 6.598]]]