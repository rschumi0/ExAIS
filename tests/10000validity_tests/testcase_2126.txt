import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Zer46208 = tf.keras.layers.Input(shape=([3, 1]))
in0Up_52156 = tf.keras.layers.Input(shape=([1, 1]))

Zer46208 = keras.layers.ZeroPadding1D(padding=((1, 1)), name = 'Zer46208', )(in0Zer46208)
Up_52156 = keras.layers.UpSampling1D(size=(2), name = 'Up_52156', )(in0Up_52156)
Zer3763 = keras.layers.ZeroPadding1D(padding=((3, 0)), name = 'Zer3763', )(Up_52156)
Add6928 = keras.layers.Add(name = 'Add6928', )([Zer46208,Zer3763])
Lay76213 = keras.layers.LayerNormalization(axis=1, epsilon=2.3188453635821995, name = 'Lay76213', )(Add6928)
model = tf.keras.models.Model(inputs=[in0Zer46208,in0Up_52156], outputs=Lay76213)
in0Zer46208 = tf.constant([[[1.4785], [1.5426], [1.6776]]])
in0Up_52156 = tf.constant([[[1.9793]]])
print (np.array2string(model.predict([in0Zer46208,in0Up_52156],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Lay76213.png')

LZer46208 = zero_padding1D_layer([[[1.4785], [1.5426], [1.6776]]], 1, 1, Zer46208), 
LUp_52156 = up_sampling1D_layer([[[1.9793]]], 2, Up_52156), 
LZer3763 = zero_padding1D_layer(Up_52156, 3, 0, Zer3763), 
LAdd6928 = add_layer([Zer46208,Zer3763], Add6928), 
LLay76213 = layer_normalization_layer(Add6928, 1, 2.3188453635821995, Lay76213), 
exec_layers([LZer46208,LUp_52156,LZer3763,LAdd6928,LLay76213],["Zer46208","Up_52156","Zer3763","Add6928","Lay76213"],Lay76213,"Lay76213")

Actual (Unparsed): [[[-0.9011037], [-0.1316480], [-0.0982884], [1.0020567], [0.1289834]]]

Expected (Unparsed): [[[-0.9011037133202262],[-0.13164797068455772],[-0.09828840822061022],[1.0020567230980195],[0.12898336912737524]]]

Actual:   [[[-0.9011], [-0.1316], [-0.0982], [1.0021], [0.129]]]

Expected: [[[-0.9011], [-0.1316], [-0.0982], [1.0021], [0.129]]]