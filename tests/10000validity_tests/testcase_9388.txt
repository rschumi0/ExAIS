import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Mul98135 = tf.keras.layers.Input(shape=([2, 2, 2, 2]))
in1Mul98135 = tf.keras.layers.Input(shape=([2, 2, 2, 2]))

Mul98135 = keras.layers.Multiply(name = 'Mul98135', )([in0Mul98135,in1Mul98135])
Up_91626 = keras.layers.UpSampling3D(size=(2, 2, 1), name = 'Up_91626', )(Mul98135)
model = tf.keras.models.Model(inputs=[in0Mul98135,in1Mul98135], outputs=Up_91626)
in0Mul98135 = tf.constant([[[[[0.4561, 0.8022], [0.501, 0.5562]], [[0.8387, 0.7811], [0.1122, 0.1762]]], [[[0.3958, 0.9428], [0.2612, 0.1069]], [[0.9761, 0.0842], [0.6265, 0.461]]]]])
in1Mul98135 = tf.constant([[[[[0.3209, 0.0139], [0.4239, 0.7113]], [[0.7514, 0.8113], [0.6127, 0.8421]]], [[[0.5585, 0.7298], [0.2557, 0.3037]], [[0.3799, 0.9112], [0.1473, 0.6038]]]]])
print (np.array2string(model.predict([in0Mul98135,in1Mul98135],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Up_91626.png')

LMul98135 = multiply_layer([[[[[[0.4561, 0.8022], [0.501, 0.5562]], [[0.8387, 0.7811], [0.1122, 0.1762]]], [[[0.3958, 0.9428], [0.2612, 0.1069]], [[0.9761, 0.0842], [0.6265, 0.461]]]]], [[[[[0.3209, 0.0139], [0.4239, 0.7113]], [[0.7514, 0.8113], [0.6127, 0.8421]]], [[[0.5585, 0.7298], [0.2557, 0.3037]], [[0.3799, 0.9112], [0.1473, 0.6038]]]]]], Mul98135), 
LUp_91626 = up_sampling3D_layer(Mul98135, 2, 2, 1, Up_91626), 
exec_layers([LMul98135,LUp_91626],["Mul98135","Up_91626"],Up_91626,"Up_91626")

Actual (Unparsed): [[[[[0.1463625, 0.0111506], [0.2123739, 0.3956251]], [[0.1463625, 0.0111506], [0.2123739, 0.3956251]], [[0.6301992, 0.6337064], [0.0687449, 0.1483780]], [[0.6301992, 0.6337064], [0.0687449, 0.1483780]]], [[[0.1463625, 0.0111506], [0.2123739, 0.3956251]], [[0.1463625, 0.0111506], [0.2123739, 0.3956251]], [[0.6301992, 0.6337064], [0.0687449, 0.1483780]], [[0.6301992, 0.6337064], [0.0687449, 0.1483780]]], [[[0.2210543, 0.6880554], [0.0667888, 0.0324655]], [[0.2210543, 0.6880554], [0.0667888, 0.0324655]], [[0.3708204, 0.0767230], [0.0922835, 0.2783518]], [[0.3708204, 0.0767230], [0.0922835, 0.2783518]]], [[[0.2210543, 0.6880554], [0.0667888, 0.0324655]], [[0.2210543, 0.6880554], [0.0667888, 0.0324655]], [[0.3708204, 0.0767230], [0.0922835, 0.2783518]], [[0.3708204, 0.0767230], [0.0922835, 0.2783518]]]]]

Expected (Unparsed): [[[[[0.14636249,0.01115058],[0.2123739,0.39562506000000003]],[[0.14636249,0.01115058],[0.2123739,0.39562506000000003]],[[0.63019918,0.63370643],[0.06874494,0.14837802]],[[0.63019918,0.63370643],[0.06874494,0.14837802]]],[[[0.14636249,0.01115058],[0.2123739,0.39562506000000003]],[[0.14636249,0.01115058],[0.2123739,0.39562506000000003]],[[0.63019918,0.63370643],[0.06874494,0.14837802]],[[0.63019918,0.63370643],[0.06874494,0.14837802]]],[[[0.22105429999999998,0.68805544],[0.06678883999999999,0.03246553]],[[0.22105429999999998,0.68805544],[0.06678883999999999,0.03246553]],[[0.37082039,0.07672303999999999],[0.09228344999999999,0.27835180000000004]],[[0.37082039,0.07672303999999999],[0.09228344999999999,0.27835180000000004]]],[[[0.22105429999999998,0.68805544],[0.06678883999999999,0.03246553]],[[0.22105429999999998,0.68805544],[0.06678883999999999,0.03246553]],[[0.37082039,0.07672303999999999],[0.09228344999999999,0.27835180000000004]],[[0.37082039,0.07672303999999999],[0.09228344999999999,0.27835180000000004]]]]]

Actual:   [[[[[0.1464, 0.0112], [0.2124, 0.3957]], [[0.1464, 0.0112], [0.2124, 0.3957]], [[0.6302, 0.6338], [0.0688, 0.1484]], [[0.6302, 0.6338], [0.0688, 0.1484]]], [[[0.1464, 0.0112], [0.2124, 0.3957]], [[0.1464, 0.0112], [0.2124, 0.3957]], [[0.6302, 0.6338], [0.0688, 0.1484]], [[0.6302, 0.6338], [0.0688, 0.1484]]], [[[0.2211, 0.6881], [0.0668, 0.0325]], [[0.2211, 0.6881], [0.0668, 0.0325]], [[0.3709, 0.0768], [0.0923, 0.2784]], [[0.3709, 0.0768], [0.0923, 0.2784]]], [[[0.2211, 0.6881], [0.0668, 0.0325]], [[0.2211, 0.6881], [0.0668, 0.0325]], [[0.3709, 0.0768], [0.0923, 0.2784]], [[0.3709, 0.0768], [0.0923, 0.2784]]]]]

Expected: [[[[[0.1464, 0.0112], [0.2124, 0.3957]], [[0.1464, 0.0112], [0.2124, 0.3957]], [[0.6302, 0.6338], [0.0688, 0.1484]], [[0.6302, 0.6338], [0.0688, 0.1484]]], [[[0.1464, 0.0112], [0.2124, 0.3957]], [[0.1464, 0.0112], [0.2124, 0.3957]], [[0.6302, 0.6338], [0.0688, 0.1484]], [[0.6302, 0.6338], [0.0688, 0.1484]]], [[[0.2211, 0.6881], [0.0668, 0.0325]], [[0.2211, 0.6881], [0.0668, 0.0325]], [[0.3709, 0.0768], [0.0923, 0.2784]], [[0.3709, 0.0768], [0.0923, 0.2784]]], [[[0.2211, 0.6881], [0.0668, 0.0325]], [[0.2211, 0.6881], [0.0668, 0.0325]], [[0.3709, 0.0768], [0.0923, 0.2784]], [[0.3709, 0.0768], [0.0923, 0.2784]]]]]