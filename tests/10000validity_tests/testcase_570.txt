import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Up_70790 = tf.keras.layers.Input(shape=([1, 2, 3, 1]))

Up_70790 = keras.layers.UpSampling3D(size=(1, 2, 2), name = 'Up_70790', )(in0Up_70790)
Res48848 = keras.layers.Reshape((1, 4, 6), name = 'Res48848', )(Up_70790)
Cro7137 = keras.layers.Cropping2D(cropping=((0, 0), (0, 1)), name = 'Cro7137', )(Res48848)
Res71526 = keras.layers.Reshape((1, 18), name = 'Res71526', )(Cro7137)
Glo71202 = keras.layers.GlobalAveragePooling1D(name = 'Glo71202', )(Res71526)
model = tf.keras.models.Model(inputs=[in0Up_70790], outputs=Glo71202)
in0Up_70790 = tf.constant([[[[[1.4309], [1.3181], [1.9359]], [[1.7974], [1.5893], [1.1146]]]]])
print (np.array2string(model.predict([in0Up_70790],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Glo71202.png')

LUp_70790 = up_sampling3D_layer([[[[[1.4309], [1.3181], [1.9359]], [[1.7974], [1.5893], [1.1146]]]]], 1, 2, 2, Up_70790), 
LRes48848 = reshape_layer(Up_70790, [1, 4, 6], Res48848), 
LCro7137 = cropping2D_layer(Res48848, 0, 0, 0, 1, Cro7137), 
LRes71526 = reshape_layer(Cro7137, [1, 18], Res71526), 
LGlo71202 = global_average_pooling1D_layer(Res71526, Glo71202), 
exec_layers([LUp_70790,LRes48848,LCro7137,LRes71526,LGlo71202],["Up_70790","Res48848","Cro7137","Res71526","Glo71202"],Glo71202,"Glo71202")

Actual (Unparsed): [[1.4309000, 1.4309000, 1.3181000, 1.3181000, 1.9359000, 1.9359000, 1.4309000, 1.4309000, 1.3181000, 1.3181000, 1.9359000, 1.9359000, 1.7974000, 1.7974000, 1.5893000, 1.5893000, 1.1145999, 1.1145999]]

Expected (Unparsed): [[1.4309,1.4309,1.3181,1.3181,1.9359,1.9359,1.4309,1.4309,1.3181,1.3181,1.9359,1.9359,1.7974,1.7974,1.5893,1.5893,1.1146,1.1146]]

Actual:   [[1.4309, 1.4309, 1.3181, 1.3181, 1.9359, 1.9359, 1.4309, 1.4309, 1.3181, 1.3181, 1.9359, 1.9359, 1.7974, 1.7974, 1.5893, 1.5893, 1.1146, 1.1146]]

Expected: [[1.4309, 1.4309, 1.3181, 1.3181, 1.9359, 1.9359, 1.4309, 1.4309, 1.3181, 1.3181, 1.9359, 1.9359, 1.7974, 1.7974, 1.5893, 1.5893, 1.1146, 1.1146]]