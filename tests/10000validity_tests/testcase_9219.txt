import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Ave23038 = tf.keras.layers.Input(shape=([1, 1, 2]))
in1Ave23038 = tf.keras.layers.Input(shape=([1, 1, 2]))

Ave23038 = keras.layers.Average(name = 'Ave23038', )([in0Ave23038,in1Ave23038])
Den85713 = keras.layers.Dense(4,name = 'Den85713', )(Ave23038)
Res41807 = keras.layers.Reshape((1, 4), name = 'Res41807', )(Den85713)
Ave40417 = keras.layers.AveragePooling1D(pool_size=(1), strides=(1), padding='same', name = 'Ave40417', )(Res41807)
model = tf.keras.models.Model(inputs=[in0Ave23038,in1Ave23038], outputs=Ave40417)
w = model.get_layer('Den85713').get_weights() 
w[0] = np.array([[0.3893, 0.7373, 0.5197, 0.3705], [0.5118, 0.6729, 0.9678, 0.0245]])
w[1] = np.array([0.6765, 0.5033, 0.5571, 0.0516])
model.get_layer('Den85713').set_weights(w) 
in0Ave23038 = tf.constant([[[[0.2402, 0.1544]]]])
in1Ave23038 = tf.constant([[[[0.081, 0.636]]]])
print (np.array2string(model.predict([in0Ave23038,in1Ave23038],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Ave40417.png')

LAve23038 = average_layer([[[[[0.2402, 0.1544]]]], [[[[0.081, 0.636]]]]], Ave23038), 
LDen85713 = dense_layer(Ave23038, [[0.3893, 0.7373, 0.5197, 0.3705], [0.5118, 0.6729, 0.9678, 0.0245]],[0.6765, 0.5033, 0.5571, 0.0516], Den85713), 
LRes41807 = reshape_layer(Den85713, [1, 4], Res41807), 
LAve40417 = average_pooling1D_layer(Res41807, 1, 1, true, Ave40417), 
exec_layers([LAve23038,LDen85713,LRes41807,LAve40417],["Ave23038","Den85713","Res41807","Ave40417"],Ave40417,"Ave40417")

Actual (Unparsed): [[[0.9412849, 0.8876405, 1.0230384, 0.1207847]]]

Expected (Unparsed): [[[0.94128494,0.8876404599999999,1.02303838,0.1207847]]]

Actual:   [[[0.9413, 0.8877, 1.0231, 0.1208]]]

Expected: [[[0.9413, 0.8877, 1.0231, 0.1208]]]