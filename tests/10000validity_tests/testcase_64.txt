import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Ave77627 = tf.keras.layers.Input(shape=([1, 1, 1, 1]))
in1Ave77627 = tf.keras.layers.Input(shape=([1, 1, 1, 1]))

Ave77627 = keras.layers.Average(name = 'Ave77627', )([in0Ave77627,in1Ave77627])
Res62327 = keras.layers.Reshape((1, 1, 1), name = 'Res62327', )(Ave77627)
Glo88581 = keras.layers.GlobalMaxPool2D(name = 'Glo88581', )(Res62327)
Res53007 = keras.layers.Reshape((1, 1), name = 'Res53007', )(Glo88581)
Con63987 = keras.layers.Conv1D(4, (1),strides=(1), padding='valid', dilation_rate=(1), name = 'Con63987', )(Res53007)
model = tf.keras.models.Model(inputs=[in0Ave77627,in1Ave77627], outputs=Con63987)
w = model.get_layer('Con63987').get_weights() 
w[0] = np.array([[[0.1554, 0.0042, 0.4086, 0.1964]]])
w[1] = np.array([0, 0, 0, 0])
model.get_layer('Con63987').set_weights(w) 
in0Ave77627 = tf.constant([[[[[0.262]]]]])
in1Ave77627 = tf.constant([[[[[0.5428]]]]])
print (np.array2string(model.predict([in0Ave77627,in1Ave77627],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Con63987.png')

LAve77627 = average_layer([[[[[[0.262]]]]], [[[[[0.5428]]]]]], Ave77627), 
LRes62327 = reshape_layer(Ave77627, [1, 1, 1], Res62327), 
LGlo88581 = global_max_pool2D_layer(Res62327, Glo88581), 
LRes53007 = reshape_layer(Glo88581, [1, 1], Res53007), 
LCon63987 = conv1D_layer(Res53007, 1,[[[0.1554, 0.0042, 0.4086, 0.1964]]],[0, 0, 0, 0], 1, false, 1, Con63987), 
exec_layers([LAve77627,LRes62327,LGlo88581,LRes53007,LCon63987],["Ave77627","Res62327","Glo88581","Res53007","Con63987"],Con63987,"Con63987")

Actual (Unparsed): [[[0.0625330, 0.0016901, 0.1644206, 0.0790314]]]

Expected (Unparsed): [[[0.06253296,0.0016900799999999998,0.16442064,0.07903136]]]

Actual:   [[[0.0626, 0.0017, 0.1645, 0.0791]]]

Expected: [[[0.0626, 0.0017, 0.1645, 0.0791]]]