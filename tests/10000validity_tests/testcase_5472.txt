import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Sub20619 = tf.keras.layers.Input(shape=([3, 3, 3, 2]))
in1Sub20619 = tf.keras.layers.Input(shape=([3, 3, 3, 2]))
in0Mul80988 = tf.keras.layers.Input(shape=([1, 2, 1, 1]))
in1Mul80988 = tf.keras.layers.Input(shape=([1, 2, 1, 1]))
in0Mul9414 = tf.keras.layers.Input(shape=([1, 1]))
in1Mul9414 = tf.keras.layers.Input(shape=([1, 1]))
in0Con31338 = tf.keras.layers.Input(shape=([1, 1]))

Sub20619 = keras.layers.Subtract(name = 'Sub20619', )([in0Sub20619,in1Sub20619])
Res74445 = keras.layers.Reshape((3, 3, 6), name = 'Res74445', )(Sub20619)
Con6137 = keras.layers.Conv2DTranspose(3, (1, 2),strides=(1, 1), padding='valid', name = 'Con6137', )(Res74445)
Res88281 = keras.layers.Reshape((3, 12), name = 'Res88281', )(Con6137)
Con27194 = keras.layers.Conv1D(2, (2),strides=(3), padding='same', dilation_rate=(1), name = 'Con27194', )(Res88281)
Mul80988 = keras.layers.Multiply(name = 'Mul80988', )([in0Mul80988,in1Mul80988])
Res91738 = keras.layers.Reshape((1, 2, 1), name = 'Res91738', )(Mul80988)
Res87553 = keras.layers.Reshape((1, 2), name = 'Res87553', )(Res91738)
Mul9414 = keras.layers.Multiply(name = 'Mul9414', )([in0Mul9414,in1Mul9414])
Con31338 = keras.layers.Concatenate(axis=2, name = 'Con31338', )([Mul9414,in0Con31338])
Min21891 = keras.layers.Minimum(name = 'Min21891', )([Res87553,Con31338])
Ave721 = keras.layers.Average(name = 'Ave721', )([Con27194,Min21891])
model = tf.keras.models.Model(inputs=[in0Sub20619,in1Sub20619,in0Mul80988,in1Mul80988,in0Mul9414,in1Mul9414,in0Con31338], outputs=Ave721)
w = model.get_layer('Con6137').get_weights() 
w[0] = np.array([[[[0.9967, 0.6114, 0.0223, 0.4502, 0.8388, 0.2532], [0.7175, 0.7007, 0.1006, 0.206, 0.67, 0.6483], [0.7127, 0.7001, 0.8153, 0.8211, 0.8079, 0.5352]], [[0.1656, 0.9232, 0.5863, 0.8539, 0.7006, 0.6775], [0.303, 0.3229, 0.7884, 0.7207, 0.7634, 0.5292], [0.8943, 0.4157, 0.7387, 0.8712, 0.5617, 0.2538]]]])
w[1] = np.array([0, 0, 0])
model.get_layer('Con6137').set_weights(w) 
w = model.get_layer('Con27194').get_weights() 
w[0] = np.array([[[0.7077, 0.7209], [0.2795, 0.9268], [0.2712, 0.706], [0.1722, 0.3616], [0.2676, 0.7592], [0.3378, 0.4301], [0.9421, 0.0178], [0.4051, 0.9322], [0.0406, 0.2684], [0.1965, 0.4168], [0.428, 0.8045], [0.722, 0.6807]], [[0.9021, 0.1495], [0.5158, 0.9959], [0.9931, 0.5074], [0.2102, 0.0944], [0.7859, 0.2429], [0.1908, 0.2147], [0.7056, 0.0438], [0.2836, 0.1861], [0.7677, 0.6716], [0.689, 0.6142], [0.0062, 0.3682], [0.7925, 0.7161]]])
w[1] = np.array([0, 0])
model.get_layer('Con27194').set_weights(w) 
in0Sub20619 = tf.constant([[[[[0.921, 0.234], [0.5671, 0.2961], [0.0539, 0.3516]], [[0.5405, 0.341], [0.0376, 0.7606], [0.1383, 0.7224]], [[0.4229, 0.8505], [0.0099, 0.0097], [0.906, 0.8228]]], [[[0.8238, 0.5487], [0.7997, 0.2438], [0.7012, 0.5898]], [[0.8958, 0.2034], [0.449, 0.299], [0.0825, 0.9115]], [[0.276, 0.4147], [0.7307, 0.247], [0.4671, 0.7674]]], [[[0.0434, 0.246], [0.314, 0.6126], [0.2746, 0.7682]], [[0.4483, 0.7471], [0.9672, 0.6095], [0.6129, 0.6744]], [[0.1339, 0.1458], [0.8169, 0.6647], [0.6096, 0.1839]]]]])
in1Sub20619 = tf.constant([[[[[0.7699, 0.4149], [0.6438, 0.0765], [0.4657, 0.1572]], [[0.1651, 0.3091], [0.7976, 0.4855], [0.054, 0.7108]], [[0.1243, 0.8745], [0.1872, 0.1585], [0.7786, 0.851]]], [[[0.9807, 0.1426], [0.6133, 0.0442], [0.6513, 0.8499]], [[0.8125, 0.8887], [0.4409, 0.477], [0.3606, 0.5835]], [[0.6025, 0.3376], [0.7596, 0.0214], [0.0363, 0.9475]]], [[[0.8104, 0.7929], [0.079, 0.6851], [0.5348, 0.0436]], [[0.1021, 0.8055], [0.6033, 0.9171], [0.2531, 0.5652]], [[0.956, 0.5507], [0.8875, 0.9555], [0.6561, 0.1085]]]]])
in0Mul80988 = tf.constant([[[[[0.9807]], [[0.0854]]]]])
in1Mul80988 = tf.constant([[[[[0.3999]], [[0.1331]]]]])
in0Mul9414 = tf.constant([[[0.085]]])
in1Mul9414 = tf.constant([[[0.5576]]])
in0Con31338 = tf.constant([[[0.2799]]])
print (np.array2string(model.predict([in0Sub20619,in1Sub20619,in0Mul80988,in1Mul80988,in0Mul9414,in1Mul9414,in0Con31338],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Ave721.png')

LSub20619 = subtract_layer([[[[[0.921, 0.234], [0.5671, 0.2961], [0.0539, 0.3516]], [[0.5405, 0.341], [0.0376, 0.7606], [0.1383, 0.7224]], [[0.4229, 0.8505], [0.0099, 0.0097], [0.906, 0.8228]]], [[[0.8238, 0.5487], [0.7997, 0.2438], [0.7012, 0.5898]], [[0.8958, 0.2034], [0.449, 0.299], [0.0825, 0.9115]], [[0.276, 0.4147], [0.7307, 0.247], [0.4671, 0.7674]]], [[[0.0434, 0.246], [0.314, 0.6126], [0.2746, 0.7682]], [[0.4483, 0.7471], [0.9672, 0.6095], [0.6129, 0.6744]], [[0.1339, 0.1458], [0.8169, 0.6647], [0.6096, 0.1839]]]]], [[[[[0.7699, 0.4149], [0.6438, 0.0765], [0.4657, 0.1572]], [[0.1651, 0.3091], [0.7976, 0.4855], [0.054, 0.7108]], [[0.1243, 0.8745], [0.1872, 0.1585], [0.7786, 0.851]]], [[[0.9807, 0.1426], [0.6133, 0.0442], [0.6513, 0.8499]], [[0.8125, 0.8887], [0.4409, 0.477], [0.3606, 0.5835]], [[0.6025, 0.3376], [0.7596, 0.0214], [0.0363, 0.9475]]], [[[0.8104, 0.7929], [0.079, 0.6851], [0.5348, 0.0436]], [[0.1021, 0.8055], [0.6033, 0.9171], [0.2531, 0.5652]], [[0.956, 0.5507], [0.8875, 0.9555], [0.6561, 0.1085]]]]], Sub20619), 
LRes74445 = reshape_layer(Sub20619, [3, 3, 6], Res74445), 
LCon6137 = conv2D_transpose_layer(Res74445, 1, 2,[[[[0.9967, 0.6114, 0.0223, 0.4502, 0.8388, 0.2532], [0.7175, 0.7007, 0.1006, 0.206, 0.67, 0.6483], [0.7127, 0.7001, 0.8153, 0.8211, 0.8079, 0.5352]], [[0.1656, 0.9232, 0.5863, 0.8539, 0.7006, 0.6775], [0.303, 0.3229, 0.7884, 0.7207, 0.7634, 0.5292], [0.8943, 0.4157, 0.7387, 0.8712, 0.5617, 0.2538]]]],[0, 0, 0], 1, 1, false, Con6137), 
LRes88281 = reshape_layer(Con6137, [3, 12], Res88281), 
LCon27194 = conv1D_layer(Res88281, 2,[[[0.7077, 0.7209], [0.2795, 0.9268], [0.2712, 0.706], [0.1722, 0.3616], [0.2676, 0.7592], [0.3378, 0.4301], [0.9421, 0.0178], [0.4051, 0.9322], [0.0406, 0.2684], [0.1965, 0.4168], [0.428, 0.8045], [0.722, 0.6807]], [[0.9021, 0.1495], [0.5158, 0.9959], [0.9931, 0.5074], [0.2102, 0.0944], [0.7859, 0.2429], [0.1908, 0.2147], [0.7056, 0.0438], [0.2836, 0.1861], [0.7677, 0.6716], [0.689, 0.6142], [0.0062, 0.3682], [0.7925, 0.7161]]],[0, 0], 3, true, 1, Con27194), 
LMul80988 = multiply_layer([[[[[[0.9807]], [[0.0854]]]]], [[[[[0.3999]], [[0.1331]]]]]], Mul80988), 
LRes91738 = reshape_layer(Mul80988, [1, 2, 1], Res91738), 
LRes87553 = reshape_layer(Res91738, [1, 2], Res87553), 
LMul9414 = multiply_layer([[[[0.085]]], [[[0.5576]]]], Mul9414), 
LCon31338 = concatenate_layer([Mul9414,[[[0.2799]]]], 2, Con31338), 
LMin21891 = minimum_layer([Res87553,Con31338], Min21891), 
LAve721 = average_layer([Con27194,Min21891], Ave721), 
exec_layers([LSub20619,LRes74445,LCon6137,LRes88281,LCon27194,LMul80988,LRes91738,LRes87553,LMul9414,LCon31338,LMin21891,LAve721],["Sub20619","Res74445","Con6137","Res88281","Con27194","Mul80988","Res91738","Res87553","Mul9414","Con31338","Min21891","Ave721"],Ave721,"Ave721")

Actual (Unparsed): [[[0.1431735, 0.1763699]]]

Expected (Unparsed): [[[0.14317359464999996,0.17636993232299994]]]

Actual:   [[[0.1432, 0.1764]]]

Expected: [[[0.1432, 0.1764]]]