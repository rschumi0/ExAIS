import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Ave84285 = tf.keras.layers.Input(shape=([2, 1, 1, 1]))
in1Ave84285 = tf.keras.layers.Input(shape=([2, 1, 1, 1]))
in0Sim16032 = tf.keras.layers.Input(shape=([1, 3]))

Ave84285 = keras.layers.Average(name = 'Ave84285', )([in0Ave84285,in1Ave84285])
Res89355 = keras.layers.Reshape((2, 1, 1), name = 'Res89355', )(Ave84285)
Sim16032 = keras.layers.SimpleRNN(3,name = 'Sim16032', )(in0Sim16032)
Res94529 = keras.layers.Reshape((3, 1), name = 'Res94529', )(Sim16032)
Res67624 = keras.layers.Reshape((3, 1, 1), name = 'Res67624', )(Res94529)
Cro28947 = keras.layers.Cropping2D(cropping=((0, 1), (0, 0)), name = 'Cro28947', )(Res67624)
Ave17794 = keras.layers.Average(name = 'Ave17794', )([Res89355,Cro28947])
model = tf.keras.models.Model(inputs=[in0Ave84285,in1Ave84285,in0Sim16032], outputs=Ave17794)
w = model.get_layer('Sim16032').get_weights() 
w[0] = np.array([[5, 3, 10], [4, 2, 2], [6, 10, 5]])
w[1] = np.array([[1, 5, 4], [7, 8, 3], [3, 4, 6]])
w[2] = np.array([2, 6, 7])
model.get_layer('Sim16032').set_weights(w) 
in0Ave84285 = tf.constant([[[[[0.43]]], [[[0.3986]]]]])
in1Ave84285 = tf.constant([[[[[0.4315]]], [[[0.7569]]]]])
in0Sim16032 = tf.constant([[[10, 5, 4]]])
print (np.array2string(model.predict([in0Ave84285,in1Ave84285,in0Sim16032],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Ave17794.png')

LAve84285 = average_layer([[[[[[0.43]]], [[[0.3986]]]]], [[[[[0.4315]]], [[[0.7569]]]]]], Ave84285), 
LRes89355 = reshape_layer(Ave84285, [2, 1, 1], Res89355), 
LSim16032 = simple_rnn_layer([[[10, 5, 4]]],[[5, 3, 10], [4, 2, 2], [6, 10, 5]],[[1, 5, 4], [7, 8, 3], [3, 4, 6]],[2, 6, 7], Sim16032), 
LRes94529 = reshape_layer(Sim16032, [3, 1], Res94529), 
LRes67624 = reshape_layer(Res94529, [3, 1, 1], Res67624), 
LCro28947 = cropping2D_layer(Res67624, 0, 1, 0, 0, Cro28947), 
LAve17794 = average_layer([Res89355,Cro28947], Ave17794), 
exec_layers([LAve84285,LRes89355,LSim16032,LRes94529,LRes67624,LCro28947,LAve17794],["Ave84285","Res89355","Sim16032","Res94529","Res67624","Cro28947","Ave17794"],Ave17794,"Ave17794")

Actual (Unparsed): [[[[0.7153750]], [[0.7888750]]]]

Expected (Unparsed): [[[[0.715375]],[[0.788875]]]]

Actual:   [[[[0.7154]], [[0.7889]]]]

Expected: [[[[0.7154]], [[0.7889]]]]