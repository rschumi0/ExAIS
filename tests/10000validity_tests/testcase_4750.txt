import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Dot28049 = tf.keras.layers.Input(shape=([3, 3]))
in1Dot28049 = tf.keras.layers.Input(shape=([3, 3]))
in0Con91239 = tf.keras.layers.Input(shape=([3, 3, 1]))
in0Lea90436 = tf.keras.layers.Input(shape=([1, 2, 2]))
in0Max87044 = tf.keras.layers.Input(shape=([2, 2, 2, 1]))
in1Max87044 = tf.keras.layers.Input(shape=([2, 2, 2, 1]))
in0Con48223 = tf.keras.layers.Input(shape=([3, 3, 1]))
in0Ave3808 = tf.keras.layers.Input(shape=([1, 1]))

Dot28049 = keras.layers.Dot(axes=(2, 2), name = 'Dot28049', )([in0Dot28049,in1Dot28049])
Res59154 = keras.layers.Reshape((3, 3, 1), name = 'Res59154', )(Dot28049)
Con91239 = keras.layers.Concatenate(axis=3, name = 'Con91239', )([Res59154,in0Con91239])
Lea90436 = keras.layers.LeakyReLU(alpha=2.496321128399359, name = 'Lea90436', input_shape=(1, 2, 2))(in0Lea90436)
Zer3061 = keras.layers.ZeroPadding2D(padding=((2, 0), (1, 0)), name = 'Zer3061', )(Lea90436)
Min95606 = keras.layers.Minimum(name = 'Min95606', )([Con91239,Zer3061])
Res61840 = keras.layers.Reshape((3, 3, 2, 1), name = 'Res61840', )(Min95606)
Max87044 = keras.layers.Maximum(name = 'Max87044', )([in0Max87044,in1Max87044])
Zer26317 = keras.layers.ZeroPadding3D(padding=((1, 0), (1, 0), (0, 0)), name = 'Zer26317', )(Max87044)
Min57934 = keras.layers.Minimum(name = 'Min57934', )([Res61840,Zer26317])
Res31780 = keras.layers.Reshape((3, 3, 2), name = 'Res31780', )(Min57934)
Con48223 = keras.layers.Concatenate(axis=3, name = 'Con48223', )([Res31780,in0Con48223])
Ave3808 = keras.layers.AveragePooling1D(pool_size=(1), name = 'Ave3808', )(in0Ave3808)
Res86234 = keras.layers.Reshape((1, 1, 1), name = 'Res86234', )(Ave3808)
Sep74695 = keras.layers.SeparableConv2D(3, (1, 1),strides=(1, 1), padding='valid', name = 'Sep74695', )(Res86234)
Zer10357 = keras.layers.ZeroPadding2D(padding=((2, 0), (2, 0)), name = 'Zer10357', )(Sep74695)
Ave71393 = keras.layers.Average(name = 'Ave71393', )([Con48223,Zer10357])
model = tf.keras.models.Model(inputs=[in0Dot28049,in1Dot28049,in0Con91239,in0Lea90436,in0Max87044,in1Max87044,in0Con48223,in0Ave3808], outputs=Ave71393)
w = model.get_layer('Sep74695').get_weights() 
w[0] = np.array([[[[0.1397]]]])
w[1] = np.array([[[[0.637, 0.9136, 0.5798]]]])
w[2] = np.array([0, 0, 0])
model.get_layer('Sep74695').set_weights(w) 
in0Dot28049 = tf.constant([[[0.9744, 0.2824, 0.5007], [0.3891, 0.5995, 0.9161], [0.5344, 0.3599, 0.011]]])
in1Dot28049 = tf.constant([[[0.9941, 0.9158, 0.6948], [0.1407, 0.5543, 0.8983], [0.2675, 0.9357, 0.0269]]])
in0Con91239 = tf.constant([[[[0.6695], [0.4763], [0.6978]], [[0.4482], [0.7968], [0.6519]], [[0.2187], [0.6698], [0.3191]]]])
in0Lea90436 = tf.constant([[[[0.5068, 0.5835], [0.0155, 0.0331]]]])
in0Max87044 = tf.constant([[[[[0.112], [0.725]], [[0.2682], [0.911]]], [[[0.605], [0.4956]], [[0.9497], [0.5953]]]]])
in1Max87044 = tf.constant([[[[[0.804], [0.8679]], [[0.4669], [0.4744]]], [[[0.9227], [0.542]], [[0.0442], [0.4992]]]]])
in0Con48223 = tf.constant([[[[0.6582], [0.7321], [0.6279]], [[0.1566], [0.4664], [0.6632]], [[0.314], [0.0326], [0.3524]]]])
in0Ave3808 = tf.constant([[[1.0229]]])
print (np.array2string(model.predict([in0Dot28049,in1Dot28049,in0Con91239,in0Lea90436,in0Max87044,in1Max87044,in0Con48223,in0Ave3808],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Ave71393.png')

LDot28049 = dot_layer([[[0.9744, 0.2824, 0.5007], [0.3891, 0.5995, 0.9161], [0.5344, 0.3599, 0.011]]], [[[0.9941, 0.9158, 0.6948], [0.1407, 0.5543, 0.8983], [0.2675, 0.9357, 0.0269]]], 2, 2, Dot28049), 
LRes59154 = reshape_layer(Dot28049, [3, 3, 1], Res59154), 
LCon91239 = concatenate_layer([Res59154,[[[[0.6695], [0.4763], [0.6978]], [[0.4482], [0.7968], [0.6519]], [[0.2187], [0.6698], [0.3191]]]]], 3, Con91239), 
LLea90436 = leaky_relu_layer([[[[0.5068, 0.5835], [0.0155, 0.0331]]]], 2.496321128399359, Lea90436), 
LZer3061 = zero_padding2D_layer(Lea90436, 2, 0, 1, 0, Zer3061), 
LMin95606 = minimum_layer([Con91239,Zer3061], Min95606), 
LRes61840 = reshape_layer(Min95606, [3, 3, 2, 1], Res61840), 
LMax87044 = maximum_layer([[[[[[0.112], [0.725]], [[0.2682], [0.911]]], [[[0.605], [0.4956]], [[0.9497], [0.5953]]]]], [[[[[0.804], [0.8679]], [[0.4669], [0.4744]]], [[[0.9227], [0.542]], [[0.0442], [0.4992]]]]]], Max87044), 
LZer26317 = zero_padding3D_layer(Max87044, 1, 0, 1, 0, 0, 0, Zer26317), 
LMin57934 = minimum_layer([Res61840,Zer26317], Min57934), 
LRes31780 = reshape_layer(Min57934, [3, 3, 2], Res31780), 
LCon48223 = concatenate_layer([Res31780,[[[[0.6582], [0.7321], [0.6279]], [[0.1566], [0.4664], [0.6632]], [[0.314], [0.0326], [0.3524]]]]], 3, Con48223), 
LAve3808 = average_pooling1D_layer([[[1.0229]]], 1, Ave3808), 
LRes86234 = reshape_layer(Ave3808, [1, 1, 1], Res86234), 
LSep74695 = separable_conv2D_layer(Res86234, 1, 1,[[[[[0.1397]]]],[[[[0.637, 0.9136, 0.5798]]]]],[0, 0, 0], 1, 1, false, Sep74695), 
LZer10357 = zero_padding2D_layer(Sep74695, 2, 0, 2, 0, Zer10357), 
LAve71393 = average_layer([Con48223,Zer10357], Ave71393), 
exec_layers([LDot28049,LRes59154,LCon91239,LLea90436,LZer3061,LMin95606,LRes61840,LMax87044,LZer26317,LMin57934,LRes31780,LCon48223,LAve3808,LRes86234,LSep74695,LZer10357,LAve71393],["Dot28049","Res59154","Con91239","Lea90436","Zer3061","Min95606","Res61840","Max87044","Zer26317","Min57934","Res31780","Con48223","Ave3808","Res86234","Sep74695","Zer10357","Ave71393"],Ave71393,"Ave71393")

Actual (Unparsed): [[[[0.0000000, 0.0000000, 0.3291000], [0.0000000, 0.0000000, 0.3660500], [0.0000000, 0.0000000, 0.3139500]], [[0.0000000, 0.0000000, 0.0783000], [0.0000000, 0.0000000, 0.2332000], [0.0000000, 0.0000000, 0.3316000]], [[0.0000000, 0.0000000, 0.1570000], [0.1422820, 0.2710000, 0.0163000], [0.0532634, 0.0818263, 0.2176265]]]]

Expected (Unparsed): [[[[0,0,0.3291],[0,0,0.36605],[0,0,0.31395]],[[0,0,0.0783],[0,0,0.2332],[0,0,0.3316]],[[0,0,0.157],[0.142281975,0.271,0.0163],[0.053263372904999995,0.08182632258399998,0.217626457787]]]]

Actual:   [[[[0, 0, 0.3291], [0, 0, 0.3661], [0, 0, 0.314]], [[0, 0, 0.0783], [0, 0, 0.2332], [0, 0, 0.3316]], [[0, 0, 0.157], [0.1423, 0.271, 0.0163], [0.0533, 0.0819, 0.2177]]]]

Expected: [[[[0, 0, 0.3291], [0, 0, 0.3661], [0, 0, 0.314]], [[0, 0, 0.0783], [0, 0, 0.2332], [0, 0, 0.3316]], [[0, 0, 0.157], [0.1423, 0.271, 0.0163], [0.0533, 0.0819, 0.2177]]]]