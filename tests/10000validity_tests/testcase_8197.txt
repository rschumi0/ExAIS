import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Sub46581 = tf.keras.layers.Input(shape=([2, 2, 3, 2]))
in1Sub46581 = tf.keras.layers.Input(shape=([2, 2, 3, 2]))
in0Ave80456 = tf.keras.layers.Input(shape=([1, 2]))
in1Ave80456 = tf.keras.layers.Input(shape=([1, 2]))
in0Dot21557 = tf.keras.layers.Input(shape=([2]))
in1Dot21557 = tf.keras.layers.Input(shape=([2]))
in0Con75558 = tf.keras.layers.Input(shape=([1]))
in0Con14478 = tf.keras.layers.Input(shape=([2, 2, 2, 1]))
in0Sub33867 = tf.keras.layers.Input(shape=([2, 2, 2, 2]))
in1Sub33867 = tf.keras.layers.Input(shape=([2, 2, 2, 2]))

Sub46581 = keras.layers.Subtract(name = 'Sub46581', )([in0Sub46581,in1Sub46581])
Ave80456 = keras.layers.Average(name = 'Ave80456', )([in0Ave80456,in1Ave80456])
Fla45640 = keras.layers.Flatten(name = 'Fla45640', )(Ave80456)
Dot21557 = keras.layers.Dot(axes=(1, 1), name = 'Dot21557', )([in0Dot21557,in1Dot21557])
Con75558 = keras.layers.Concatenate(axis=1, name = 'Con75558', )([Dot21557,in0Con75558])
Min69839 = keras.layers.Minimum(name = 'Min69839', )([Fla45640,Con75558])
Res4486 = keras.layers.Reshape((2, 1), name = 'Res4486', )(Min69839)
Res19293 = keras.layers.Reshape((2, 1, 1), name = 'Res19293', )(Res4486)
Res91053 = keras.layers.Reshape((2, 1, 1, 1), name = 'Res91053', )(Res19293)
Zer90645 = keras.layers.ZeroPadding3D(padding=((0, 0), (1, 0), (1, 0)), name = 'Zer90645', )(Res91053)
Con14478 = keras.layers.Concatenate(axis=4, name = 'Con14478', )([Zer90645,in0Con14478])
Sub33867 = keras.layers.Subtract(name = 'Sub33867', )([in0Sub33867,in1Sub33867])
ReL53473 = keras.layers.ReLU(max_value=1.3180983617998812, negative_slope=2.941985533204151, threshold=1.5224603771917211, name = 'ReL53473', )(Sub33867)
Max6508 = keras.layers.Maximum(name = 'Max6508', )([Con14478,ReL53473])
Zer38640 = keras.layers.ZeroPadding3D(padding=((0, 0), (0, 0), (1, 0)), name = 'Zer38640', )(Max6508)
Sub42245 = keras.layers.Subtract(name = 'Sub42245', )([Sub46581,Zer38640])
model = tf.keras.models.Model(inputs=[in0Sub46581,in1Sub46581,in0Ave80456,in1Ave80456,in0Dot21557,in1Dot21557,in0Con75558,in0Con14478,in0Sub33867,in1Sub33867], outputs=Sub42245)
in0Sub46581 = tf.constant([[[[[0.1236, 0.3539], [0.1915, 0.7734], [0.5033, 0.9095]], [[0.3245, 0.6201], [0.2084, 0.8349], [0.3085, 0.5183]]], [[[0.0143, 0.131], [0.5588, 0.682], [0.6668, 0.1205]], [[0.6366, 0.7783], [0.6304, 0.8514], [0.8087, 0.4019]]]]])
in1Sub46581 = tf.constant([[[[[0.2321, 0.1078], [0.8566, 0.4188], [0.2019, 0.966]], [[0.3531, 0.9779], [0.3637, 0.1844], [0.1394, 0.7288]]], [[[0.7626, 0.1008], [0.5364, 0.0608], [0.8259, 0.1265]], [[0.899, 0.9846], [0.2542, 0.37], [0.4876, 0.6112]]]]])
in0Ave80456 = tf.constant([[[0.2081, 0.4045]]])
in1Ave80456 = tf.constant([[[0.2674, 0.0557]]])
in0Dot21557 = tf.constant([[0.0223, 0.6991]])
in1Dot21557 = tf.constant([[0.1732, 0.9887]])
in0Con75558 = tf.constant([[0.505]])
in0Con14478 = tf.constant([[[[[0.6814], [0.6858]], [[0.2016], [0.708]]], [[[0.8098], [0.6998]], [[0.113], [0.7904]]]]])
in0Sub33867 = tf.constant([[[[[0.1077, 0.7751], [0.5783, 0.9926]], [[0.9298, 0.719], [0.1942, 0.3376]]], [[[0.9485, 0.2893], [0.3925, 0.79]], [[0.1864, 0.4826], [0.9878, 0.5867]]]]])
in1Sub33867 = tf.constant([[[[[0.6588, 0.0952], [0.853, 0.7654]], [[0.2416, 0.5096], [0.3432, 0.63]]], [[[0.6787, 0.6628], [0.4022, 0.2445]], [[0.3392, 0.9133], [0.3925, 0.5026]]]]])
print (np.array2string(model.predict([in0Sub46581,in1Sub46581,in0Ave80456,in1Ave80456,in0Dot21557,in1Dot21557,in0Con75558,in0Con14478,in0Sub33867,in1Sub33867],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Sub42245.png')

LSub46581 = subtract_layer([[[[[0.1236, 0.3539], [0.1915, 0.7734], [0.5033, 0.9095]], [[0.3245, 0.6201], [0.2084, 0.8349], [0.3085, 0.5183]]], [[[0.0143, 0.131], [0.5588, 0.682], [0.6668, 0.1205]], [[0.6366, 0.7783], [0.6304, 0.8514], [0.8087, 0.4019]]]]], [[[[[0.2321, 0.1078], [0.8566, 0.4188], [0.2019, 0.966]], [[0.3531, 0.9779], [0.3637, 0.1844], [0.1394, 0.7288]]], [[[0.7626, 0.1008], [0.5364, 0.0608], [0.8259, 0.1265]], [[0.899, 0.9846], [0.2542, 0.37], [0.4876, 0.6112]]]]], Sub46581), 
LAve80456 = average_layer([[[[0.2081, 0.4045]]], [[[0.2674, 0.0557]]]], Ave80456), 
LFla45640 = flatten_layer(Ave80456, Fla45640), 
LDot21557 = dot_layer([[0.0223, 0.6991]], [[0.1732, 0.9887]], 1, 1, Dot21557), 
LCon75558 = concatenate_layer([Dot21557,[[0.505]]], 1, Con75558), 
LMin69839 = minimum_layer([Fla45640,Con75558], Min69839), 
LRes4486 = reshape_layer(Min69839, [2, 1], Res4486), 
LRes19293 = reshape_layer(Res4486, [2, 1, 1], Res19293), 
LRes91053 = reshape_layer(Res19293, [2, 1, 1, 1], Res91053), 
LZer90645 = zero_padding3D_layer(Res91053, 0, 0, 1, 0, 1, 0, Zer90645), 
LCon14478 = concatenate_layer([Zer90645,[[[[[0.6814], [0.6858]], [[0.2016], [0.708]]], [[[0.8098], [0.6998]], [[0.113], [0.7904]]]]]], 4, Con14478), 
LSub33867 = subtract_layer([[[[[0.1077, 0.7751], [0.5783, 0.9926]], [[0.9298, 0.719], [0.1942, 0.3376]]], [[[0.9485, 0.2893], [0.3925, 0.79]], [[0.1864, 0.4826], [0.9878, 0.5867]]]]], [[[[[0.6588, 0.0952], [0.853, 0.7654]], [[0.2416, 0.5096], [0.3432, 0.63]]], [[[0.6787, 0.6628], [0.4022, 0.2445]], [[0.3392, 0.9133], [0.3925, 0.5026]]]]], Sub33867), 
LReL53473 = relu_layer(Sub33867, 1.3180983617998812, 2.941985533204151, 1.5224603771917211, ReL53473), 
LMax6508 = maximum_layer([Con14478,ReL53473], Max6508), 
LZer38640 = zero_padding3D_layer(Max6508, 0, 0, 0, 0, 1, 0, Zer38640), 
LSub42245 = subtract_layer(Sub46581,Zer38640, Sub42245), 
exec_layers([LSub46581,LAve80456,LFla45640,LDot21557,LCon75558,LMin69839,LRes4486,LRes19293,LRes91053,LZer90645,LCon14478,LSub33867,LReL53473,LMax6508,LZer38640,LSub42245],["Sub46581","Ave80456","Fla45640","Dot21557","Con75558","Min69839","Res4486","Res19293","Res91053","Zer90645","Con14478","Sub33867","ReL53473","Max6508","Zer38640","Sub42245"],Sub42245,"Sub42245")

Actual (Unparsed): [[[[[-0.1085000, 0.2461000], [-0.6651000, -0.3268000], [0.3014000, -0.7423000]], [[-0.0286000, -0.3578000], [-0.1553000, 0.4489000], [-0.0686500, -0.9185000]]], [[[-0.7483000, 0.0302000], [0.0224000, -0.1886000], [-0.1591000, -0.7058000]], [[-0.2624000, -0.2063000], [0.3762000, 0.3684000], [0.0910000, -0.9997000]]]]]

Expected (Unparsed): [[[[[-0.1085,0.24609999999999999],[-0.6651,-0.32680000000000003],[0.3014,-0.7423]],[[-0.028600000000000014,-0.3578],[-0.15530000000000002,0.44889999999999997],[-0.06865000000000002,-0.9185]]],[[[-0.7483,0.030200000000000005],[0.022399999999999975,-0.18859999999999988],[-0.15910000000000002,-0.7058]],[[-0.26239999999999997,-0.20630000000000004],[0.3762,0.36840000000000006],[0.09099999999999997,-0.9997]]]]]

Actual:   [[[[[-0.1085, 0.2461], [-0.6651, -0.3268], [0.3014, -0.7423]], [[-0.0286, -0.3578], [-0.1553, 0.4489], [-0.0686, -0.9185]]], [[[-0.7483, 0.0302], [0.0224, -0.1886], [-0.1591, -0.7058]], [[-0.2624, -0.2063], [0.3762, 0.3684], [0.091, -0.9997]]]]]

Expected: [[[[[-0.1085, 0.2461], [-0.6651, -0.3268], [0.3014, -0.7423]], [[-0.0286, -0.3578], [-0.1553, 0.4489], [-0.0686, -0.9185]]], [[[-0.7483, 0.0303], [0.0224, -0.1885], [-0.1591, -0.7058]], [[-0.2623, -0.2063], [0.3762, 0.3685], [0.091, -0.9997]]]]]