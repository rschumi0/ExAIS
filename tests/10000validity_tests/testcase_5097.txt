import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Glo98013 = tf.keras.layers.Input(shape=([2, 2, 1]))
in0Mul83594 = tf.keras.layers.Input(shape=([1, 1, 1, 1]))
in1Mul83594 = tf.keras.layers.Input(shape=([1, 1, 1, 1]))
in0Sub59174 = tf.keras.layers.Input(shape=([3, 2, 3]))
in1Sub59174 = tf.keras.layers.Input(shape=([3, 2, 3]))

Glo98013 = keras.layers.GlobalMaxPool2D(name = 'Glo98013', )(in0Glo98013)
Mas73747 = keras.layers.Masking(mask_value=2, name = 'Mas73747', )(Glo98013)
Res46897 = keras.layers.Reshape((1, 1), name = 'Res46897', )(Mas73747)
Mul83594 = keras.layers.Multiply(name = 'Mul83594', )([in0Mul83594,in1Mul83594])
Res82860 = keras.layers.Reshape((1, 1, 1), name = 'Res82860', )(Mul83594)
Dep15285 = keras.layers.DepthwiseConv2D((1, 1),strides=(1, 1), padding='same', name = 'Dep15285', )(Res82860)
Res65824 = keras.layers.Reshape((1, 1), name = 'Res65824', )(Dep15285)
Ave83268 = keras.layers.Average(name = 'Ave83268', )([Res46897,Res65824])
Res49455 = keras.layers.Reshape((1, 1, 1), name = 'Res49455', )(Ave83268)
Sub59174 = keras.layers.Subtract(name = 'Sub59174', )([in0Sub59174,in1Sub59174])
Res43789 = keras.layers.Reshape((3, 2, 3, 1), name = 'Res43789', )(Sub59174)
Cro24943 = keras.layers.Cropping3D(cropping=((2, 0), (1, 0), (2, 0)), name = 'Cro24943', )(Res43789)
Res53356 = keras.layers.Reshape((1, 1, 1), name = 'Res53356', )(Cro24943)
Min23244 = keras.layers.Minimum(name = 'Min23244', )([Res49455,Res53356])
model = tf.keras.models.Model(inputs=[in0Glo98013,in0Mul83594,in1Mul83594,in0Sub59174,in1Sub59174], outputs=Min23244)
w = model.get_layer('Dep15285').get_weights() 
w[0] = np.array([[[[0.6648]]]])
w[1] = np.array([0])
model.get_layer('Dep15285').set_weights(w) 
in0Glo98013 = tf.constant([[[[1.661], [1.7766]], [[1.0507], [1.5297]]]])
in0Mul83594 = tf.constant([[[[[0.0623]]]]])
in1Mul83594 = tf.constant([[[[[0.7335]]]]])
in0Sub59174 = tf.constant([[[[0.4799, 0.609, 0.5585], [0.8417, 0.9394, 0.0441]], [[0.9258, 0.9551, 0.1129], [0.0722, 0.699, 0.364]], [[0.8358, 0.6755, 0.3528], [0.6786, 0.1971, 0.9527]]]])
in1Sub59174 = tf.constant([[[[0.1303, 0.4227, 0.1022], [0.8124, 0.3523, 0.5496]], [[0.5607, 0.2357, 0.2585], [0.0804, 0.5202, 0.7918]], [[0.5664, 0.1976, 0.0196], [0.1831, 0.9681, 0.4227]]]])
print (np.array2string(model.predict([in0Glo98013,in0Mul83594,in1Mul83594,in0Sub59174,in1Sub59174],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Min23244.png')

LGlo98013 = global_max_pool2D_layer([[[[1.661], [1.7766]], [[1.0507], [1.5297]]]], Glo98013), 
LMas73747 = masking_layer(Glo98013, 2, Mas73747), 
LRes46897 = reshape_layer(Mas73747, [1, 1], Res46897), 
LMul83594 = multiply_layer([[[[[[0.0623]]]]], [[[[[0.7335]]]]]], Mul83594), 
LRes82860 = reshape_layer(Mul83594, [1, 1, 1], Res82860), 
LDep15285 = depthwise_conv2D_layer(Res82860, 1, 1,[[[[0.6648]]]],[0], 1, 1, true, Dep15285), 
LRes65824 = reshape_layer(Dep15285, [1, 1], Res65824), 
LAve83268 = average_layer([Res46897,Res65824], Ave83268), 
LRes49455 = reshape_layer(Ave83268, [1, 1, 1], Res49455), 
LSub59174 = subtract_layer([[[[0.4799, 0.609, 0.5585], [0.8417, 0.9394, 0.0441]], [[0.9258, 0.9551, 0.1129], [0.0722, 0.699, 0.364]], [[0.8358, 0.6755, 0.3528], [0.6786, 0.1971, 0.9527]]]], [[[[0.1303, 0.4227, 0.1022], [0.8124, 0.3523, 0.5496]], [[0.5607, 0.2357, 0.2585], [0.0804, 0.5202, 0.7918]], [[0.5664, 0.1976, 0.0196], [0.1831, 0.9681, 0.4227]]]], Sub59174), 
LRes43789 = reshape_layer(Sub59174, [3, 2, 3, 1], Res43789), 
LCro24943 = cropping3D_layer(Res43789, 2, 0, 1, 0, 2, 0, Cro24943), 
LRes53356 = reshape_layer(Cro24943, [1, 1, 1], Res53356), 
LMin23244 = minimum_layer([Res49455,Res53356], Min23244), 
exec_layers([LGlo98013,LMas73747,LRes46897,LMul83594,LRes82860,LDep15285,LRes65824,LAve83268,LRes49455,LSub59174,LRes43789,LCro24943,LRes53356,LMin23244],["Glo98013","Mas73747","Res46897","Mul83594","Res82860","Dep15285","Res65824","Ave83268","Res49455","Sub59174","Res43789","Cro24943","Res53356","Min23244"],Min23244,"Min23244")

Actual (Unparsed): [[[[0.5300000]]]]

Expected (Unparsed): [[[[0.53]]]]

Actual:   [[[[0.53]]]]

Expected: [[[[0.53]]]]