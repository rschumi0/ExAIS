import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Mul68377 = tf.keras.layers.Input(shape=([1, 2, 2]))
in1Mul68377 = tf.keras.layers.Input(shape=([1, 2, 2]))
in0Con53452 = tf.keras.layers.Input(shape=([3, 38]))
in0Max98579 = tf.keras.layers.Input(shape=([2, 1, 2, 1]))
in1Max98579 = tf.keras.layers.Input(shape=([2, 1, 2, 1]))
in0Max42778 = tf.keras.layers.Input(shape=([1, 1]))
in1Max42778 = tf.keras.layers.Input(shape=([1, 1]))
in0Con57619 = tf.keras.layers.Input(shape=([1, 2, 1, 2]))
in0Con12431 = tf.keras.layers.Input(shape=([3, 40]))

Mul68377 = keras.layers.Multiply(name = 'Mul68377', )([in0Mul68377,in1Mul68377])
Res13256 = keras.layers.Reshape((1, 4), name = 'Res13256', )(Mul68377)
Zer23643 = keras.layers.ZeroPadding1D(padding=((2, 0)), name = 'Zer23643', )(Res13256)
Con53452 = keras.layers.Concatenate(axis=2, name = 'Con53452', )([Zer23643,in0Con53452])
Max98579 = keras.layers.Maximum(name = 'Max98579', )([in0Max98579,in1Max98579])
Con73832 = keras.layers.Conv3DTranspose(3, (2, 1, 2),strides=(1, 1, 7), padding='valid', name = 'Con73832', )(Max98579)
Res57511 = keras.layers.Reshape((3, 1, 42), name = 'Res57511', )(Con73832)
Res14088 = keras.layers.Reshape((3, 42), name = 'Res14088', )(Res57511)
Max42778 = keras.layers.Maximum(name = 'Max42778', )([in0Max42778,in1Max42778])
Res24329 = keras.layers.Reshape((1, 1, 1), name = 'Res24329', )(Max42778)
Res80013 = keras.layers.Reshape((1, 1, 1, 1), name = 'Res80013', )(Res24329)
Up_57504 = keras.layers.UpSampling3D(size=(2, 2, 1), name = 'Up_57504', )(Res80013)
Res6084 = keras.layers.Reshape((2, 2, 1), name = 'Res6084', )(Up_57504)
Res78657 = keras.layers.Reshape((2, 2), name = 'Res78657', )(Res6084)
Con57619 = keras.layers.Conv3D(4, (1, 2, 1),strides=(1, 6, 12), padding='valid', dilation_rate=(1, 1, 1), name = 'Con57619', )(in0Con57619)
Lea72075 = keras.layers.LeakyReLU(alpha=8.969245510902912, name = 'Lea72075', )(Con57619)
Res40004 = keras.layers.Reshape((2, 2, 1), name = 'Res40004', )(Lea72075)
Res6968 = keras.layers.Reshape((2, 2), name = 'Res6968', )(Res40004)
Dot33897 = keras.layers.Dot(axes=(2, 1), name = 'Dot33897', )([Res78657,Res6968])
Zer57505 = keras.layers.ZeroPadding1D(padding=((1, 0)), name = 'Zer57505', )(Dot33897)
Con12431 = keras.layers.Concatenate(axis=2, name = 'Con12431', )([Zer57505,in0Con12431])
Ave54089 = keras.layers.Average(name = 'Ave54089', )([Res14088,Con12431])
Ave85209 = keras.layers.Average(name = 'Ave85209', )([Con53452,Ave54089])
model = tf.keras.models.Model(inputs=[in0Mul68377,in1Mul68377,in0Con53452,in0Max98579,in1Max98579,in0Max42778,in1Max42778,in0Con57619,in0Con12431], outputs=Ave85209)
w = model.get_layer('Con73832').get_weights() 
w[0] = np.array([[[[[0.4609], [0.6098], [0.8283]], [[0.9972], [0.2542], [0.4571]]]], [[[[0.9323], [0.1316], [0.97]], [[0.4085], [0.6545], [0.7852]]]]])
w[1] = np.array([0, 0, 0])
model.get_layer('Con73832').set_weights(w) 
w = model.get_layer('Con57619').get_weights() 
w[0] = np.array([[[[[0.9054, 0.3487, 0.7052, 0.4092], [0.7428, 0.3254, 0.1771, 0.2252]]], [[[0.4422, 0.1045, 0.7366, 0.4659], [0.9891, 0.2667, 0.9705, 0.7076]]]]])
w[1] = np.array([0, 0, 0, 0])
model.get_layer('Con57619').set_weights(w) 
in0Mul68377 = tf.constant([[[[0.8104, 0.8098], [0.3088, 0.2669]]]])
in1Mul68377 = tf.constant([[[[0.6834, 0.0425], [0.7442, 0.8454]]]])
in0Con53452 = tf.constant([[[0.4974, 0.4393, 0.8054, 0.9662, 0.1827, 0.7513, 0.5895, 0.197, 0.6461, 0.9295, 0.1664, 0.6685, 0.3693, 0.5703, 0.5426, 0.701, 0.1192, 0.9218, 0.465, 0.1038, 0.5732, 0.273, 0.7717, 0.2405, 0.2914, 0.1863, 0.4908, 0.9277, 0.8911, 0.5487, 0.233, 0.2479, 0.1428, 0.6682, 0.8713, 0.3095, 0.9756, 0.5417], [0.8456, 0.0918, 0.0586, 0.984, 0.6861, 0.7754, 0.7071, 0.5197, 0.5119, 0.3801, 0.3526, 0.8146, 0.3266, 0.1023, 0.7084, 0.9498, 0.9078, 0.4812, 0.0682, 0.0276, 0.9654, 0.4071, 0.8801, 0.4379, 0.0332, 0.0297, 0.8542, 0.6115, 0.2463, 0.8255, 0.3814, 0.2403, 0.759, 0.439, 0.9691, 0.7529, 0.0608, 0.425], [0.7317, 0.3019, 0.8601, 0.6888, 0.7124, 0.6385, 0.5221, 0.2465, 0.9603, 0.031, 0.272, 0.9071, 0.8358, 0.8161, 0.5019, 0.6194, 0.9786, 0.2654, 0.5605, 0.5165, 0.7331, 0.1933, 0.3416, 0.1443, 0.6007, 0.1384, 0.8408, 0.9646, 0.4608, 0.0091, 0.6019, 0.9879, 0.8893, 0.8001, 0.636, 0.3075, 0.8901, 0.358]]])
in0Max98579 = tf.constant([[[[[0.7217], [0.5185]]], [[[0.5744], [0.9066]]]]])
in1Max98579 = tf.constant([[[[[0.0194], [0.0084]]], [[[0.5107], [0.9121]]]]])
in0Max42778 = tf.constant([[[0.0446]]])
in1Max42778 = tf.constant([[[0.0456]]])
in0Con57619 = tf.constant([[[[[0.7869, 0.7706]], [[0.2677, 0.8498]]]]])
in0Con12431 = tf.constant([[[0.147, 0.2847, 0.1128, 0.9814, 0.7423, 0.606, 0.4817, 0.0198, 0.6634, 0.6806, 0.9377, 0.1021, 0.0041, 0.1126, 0.0763, 0.9443, 0.241, 0.3629, 0.8456, 0.9913, 0.6557, 0.2757, 0.8283, 0.5669, 0.7851, 0.0315, 0.0645, 0.3597, 0.8815, 0.8804, 0.7963, 0.9418, 0.9522, 0.5491, 0.3102, 0.8832, 0.1988, 0.6557, 0.0017, 0.2949], [0.5759, 0.8144, 0.8963, 0.3099, 0.7537, 0.3692, 0.1189, 0.096, 0.9781, 0.8554, 0.2283, 0.4799, 0.2012, 0.3539, 0.9033, 0.1633, 0.3764, 0.881, 0.2019, 0.8074, 0.003, 0.831, 0.5022, 0.9745, 0.842, 0.2793, 0.275, 0.0279, 0.2232, 0.6433, 0.043, 0.6116, 0.5171, 0.8001, 0.2326, 0.2593, 0.1555, 0.26, 0.1423, 0.014], [0.0473, 0.4118, 0.915, 0.6789, 0.3632, 0.1684, 0.2325, 0.467, 0.4365, 0.5683, 0.4274, 0.3666, 0.9641, 0.015, 0.8477, 0.5001, 0.7827, 0.877, 0.6023, 0.1154, 0.242, 0.1085, 0.2663, 0.6222, 0.5987, 0.4037, 0.7321, 0.2596, 0.9177, 0.1494, 0.1524, 0.5678, 0.6785, 0.1043, 0.8437, 0.8215, 0.6612, 0.2983, 0.0917, 0.9825]]])
print (np.array2string(model.predict([in0Mul68377,in1Mul68377,in0Con53452,in0Max98579,in1Max98579,in0Max42778,in1Max42778,in0Con57619,in0Con12431],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Ave85209.png')

LMul68377 = multiply_layer([[[[[0.8104, 0.8098], [0.3088, 0.2669]]]], [[[[0.6834, 0.0425], [0.7442, 0.8454]]]]], Mul68377), 
LRes13256 = reshape_layer(Mul68377, [1, 4], Res13256), 
LZer23643 = zero_padding1D_layer(Res13256, 2, 0, Zer23643), 
LCon53452 = concatenate_layer([Zer23643,[[[0.4974, 0.4393, 0.8054, 0.9662, 0.1827, 0.7513, 0.5895, 0.197, 0.6461, 0.9295, 0.1664, 0.6685, 0.3693, 0.5703, 0.5426, 0.701, 0.1192, 0.9218, 0.465, 0.1038, 0.5732, 0.273, 0.7717, 0.2405, 0.2914, 0.1863, 0.4908, 0.9277, 0.8911, 0.5487, 0.233, 0.2479, 0.1428, 0.6682, 0.8713, 0.3095, 0.9756, 0.5417], [0.8456, 0.0918, 0.0586, 0.984, 0.6861, 0.7754, 0.7071, 0.5197, 0.5119, 0.3801, 0.3526, 0.8146, 0.3266, 0.1023, 0.7084, 0.9498, 0.9078, 0.4812, 0.0682, 0.0276, 0.9654, 0.4071, 0.8801, 0.4379, 0.0332, 0.0297, 0.8542, 0.6115, 0.2463, 0.8255, 0.3814, 0.2403, 0.759, 0.439, 0.9691, 0.7529, 0.0608, 0.425], [0.7317, 0.3019, 0.8601, 0.6888, 0.7124, 0.6385, 0.5221, 0.2465, 0.9603, 0.031, 0.272, 0.9071, 0.8358, 0.8161, 0.5019, 0.6194, 0.9786, 0.2654, 0.5605, 0.5165, 0.7331, 0.1933, 0.3416, 0.1443, 0.6007, 0.1384, 0.8408, 0.9646, 0.4608, 0.0091, 0.6019, 0.9879, 0.8893, 0.8001, 0.636, 0.3075, 0.8901, 0.358]]]], 2, Con53452), 
LMax98579 = maximum_layer([[[[[[0.7217], [0.5185]]], [[[0.5744], [0.9066]]]]], [[[[[0.0194], [0.0084]]], [[[0.5107], [0.9121]]]]]], Max98579), 
LCon73832 = conv3D_transpose_layer(Max98579, 2, 1, 2,[[[[[0.4609], [0.6098], [0.8283]], [[0.9972], [0.2542], [0.4571]]]], [[[[0.9323], [0.1316], [0.97]], [[0.4085], [0.6545], [0.7852]]]]],[0, 0, 0], 1, 1, 7, false, Con73832), 
LRes57511 = reshape_layer(Con73832, [3, 1, 42], Res57511), 
LRes14088 = reshape_layer(Res57511, [3, 42], Res14088), 
LMax42778 = maximum_layer([[[[0.0446]]], [[[0.0456]]]], Max42778), 
LRes24329 = reshape_layer(Max42778, [1, 1, 1], Res24329), 
LRes80013 = reshape_layer(Res24329, [1, 1, 1, 1], Res80013), 
LUp_57504 = up_sampling3D_layer(Res80013, 2, 2, 1, Up_57504), 
LRes6084 = reshape_layer(Up_57504, [2, 2, 1], Res6084), 
LRes78657 = reshape_layer(Res6084, [2, 2], Res78657), 
LCon57619 = conv3D_layer([[[[[0.7869, 0.7706]], [[0.2677, 0.8498]]]]], 1, 2, 1,[[[[[0.9054, 0.3487, 0.7052, 0.4092], [0.7428, 0.3254, 0.1771, 0.2252]]], [[[0.4422, 0.1045, 0.7366, 0.4659], [0.9891, 0.2667, 0.9705, 0.7076]]]]],[0, 0, 0, 0], 1, 6, 12, false, 1, 1, 1, Con57619), 
LLea72075 = leaky_relu_layer(Con57619, 8.969245510902912, Lea72075), 
LRes40004 = reshape_layer(Lea72075, [2, 2, 1], Res40004), 
LRes6968 = reshape_layer(Res40004, [2, 2], Res6968), 
LDot33897 = dot_layer(Res78657,Res6968, 2, 1, Dot33897), 
LZer57505 = zero_padding1D_layer(Dot33897, 1, 0, Zer57505), 
LCon12431 = concatenate_layer([Zer57505,[[[0.147, 0.2847, 0.1128, 0.9814, 0.7423, 0.606, 0.4817, 0.0198, 0.6634, 0.6806, 0.9377, 0.1021, 0.0041, 0.1126, 0.0763, 0.9443, 0.241, 0.3629, 0.8456, 0.9913, 0.6557, 0.2757, 0.8283, 0.5669, 0.7851, 0.0315, 0.0645, 0.3597, 0.8815, 0.8804, 0.7963, 0.9418, 0.9522, 0.5491, 0.3102, 0.8832, 0.1988, 0.6557, 0.0017, 0.2949], [0.5759, 0.8144, 0.8963, 0.3099, 0.7537, 0.3692, 0.1189, 0.096, 0.9781, 0.8554, 0.2283, 0.4799, 0.2012, 0.3539, 0.9033, 0.1633, 0.3764, 0.881, 0.2019, 0.8074, 0.003, 0.831, 0.5022, 0.9745, 0.842, 0.2793, 0.275, 0.0279, 0.2232, 0.6433, 0.043, 0.6116, 0.5171, 0.8001, 0.2326, 0.2593, 0.1555, 0.26, 0.1423, 0.014], [0.0473, 0.4118, 0.915, 0.6789, 0.3632, 0.1684, 0.2325, 0.467, 0.4365, 0.5683, 0.4274, 0.3666, 0.9641, 0.015, 0.8477, 0.5001, 0.7827, 0.877, 0.6023, 0.1154, 0.242, 0.1085, 0.2663, 0.6222, 0.5987, 0.4037, 0.7321, 0.2596, 0.9177, 0.1494, 0.1524, 0.5678, 0.6785, 0.1043, 0.8437, 0.8215, 0.6612, 0.2983, 0.0917, 0.9825]]]], 2, Con12431), 
LAve54089 = average_layer([Res14088,Con12431], Ave54089), 
LAve85209 = average_layer([Con53452,Ave54089], Ave85209), 
exec_layers([LMul68377,LRes13256,LZer23643,LCon53452,LMax98579,LCon73832,LRes57511,LRes14088,LMax42778,LRes24329,LRes80013,LUp_57504,LRes6084,LRes78657,LCon57619,LLea72075,LRes40004,LRes6968,LDot33897,LZer57505,LCon12431,LAve54089,LAve85209],["Mul68377","Res13256","Zer23643","Con53452","Max98579","Con73832","Res57511","Res14088","Max42778","Res24329","Res80013","Up_57504","Res6084","Res78657","Con57619","Lea72075","Res40004","Res6968","Dot33897","Zer57505","Con12431","Ave54089","Ave85209"],Ave85209,"Ave85209")

Actual (Unparsed): [[[0.0831579, 0.1100232, 0.1861960, 0.2510948, 0.3227640, 0.5474723, 0.5882750, 0.6346000, 0.2117750, 0.3806000, 0.4606000, 0.2686500, 0.5574750, 0.4902750, 0.0842250, 0.3624000, 0.2037250, 0.5212250, 0.3315500, 0.4412250, 0.2710000, 0.7684692, 0.4754703, 0.2281934, 0.6229370, 0.3111757, 0.6413766, 0.1281250, 0.1618250, 0.1830750, 0.4657750, 0.6839500, 0.6446250, 0.5098000, 0.3545500, 0.2612250, 0.1489500, 0.5549000, 0.4853500, 0.3186750, 0.4882250, 0.3445750], [0.2795063, 0.1341265, 0.4379311, 0.4205015, 0.8014663, 0.3306843, 0.2177250, 0.5843000, 0.3727750, 0.4117000, 0.5980750, 0.4737000, 0.3130250, 0.3100250, 0.2266000, 0.4957750, 0.3891250, 0.0919750, 0.4483000, 0.6951500, 0.5043750, 0.6683961, 0.1909583, 0.5361593, 0.8885883, 0.5899785, 0.8565618, 0.2887750, 0.0853500, 0.0218250, 0.4829000, 0.4665750, 0.1339000, 0.5656500, 0.3199750, 0.3201750, 0.4376500, 0.2843250, 0.5234250, 0.4414500, 0.0659750, 0.2160000], [0.4559028, 0.0589213, 0.2660215, 0.2744292, 0.6885862, 0.4334297, 0.5208500, 0.3865000, 0.4143250, 0.4360000, 0.3701750, 0.2653250, 0.5870000, 0.1071500, 0.3770250, 0.4573000, 0.6298250, 0.5330750, 0.4466250, 0.5289500, 0.6398750, 0.3741377, 0.3707581, 0.5065593, 0.5262732, 0.4014424, 0.4995202, 0.1730750, 0.4833750, 0.1341000, 0.6498250, 0.5196500, 0.2685000, 0.1465000, 0.4705750, 0.5200250, 0.6555750, 0.6054250, 0.4833000, 0.2283250, 0.4679750, 0.4246250]]]

Expected (Unparsed): [[[0.0831578825,0.110023165,0.1861960275,0.25109481,0.322764035,0.5474722675,0.588275,0.6345999999999999,0.211775,0.3806,0.4606,0.26865,0.5574749999999999,0.490275,0.084225,0.3624,0.20372500000000002,0.521225,0.33155,0.441225,0.271,0.7684691625,0.47547032499999997,0.2281933875,0.62293705,0.311175675,0.6413765875,0.128125,0.161825,0.183075,0.465775,0.68395,0.644625,0.5098,0.35455000000000003,0.26122500000000004,0.14895,0.5549,0.48535,0.318675,0.488225,0.34457499999999996],[0.279506281188,0.134126487026,0.43793113000000006,0.4205015325,0.8014662825000001,0.33068427,0.217725,0.5843,0.372775,0.4117,0.5980749999999999,0.4737,0.313025,0.310025,0.22660000000000002,0.49577499999999997,0.389125,0.091975,0.44830000000000003,0.6951499999999999,0.504375,0.66839611,0.190958295,0.5361593575000001,0.8885883425000001,0.5899785175,0.8565617775000001,0.288775,0.08535000000000001,0.021825,0.4829,0.466575,0.1339,0.56565,0.319975,0.320175,0.43765,0.284325,0.523425,0.44145,0.065975,0.216],[0.45590277368800003,0.058921287026000004,0.26602148000000003,0.27442923,0.6885862,0.43342972,0.52085,0.38649999999999995,0.414325,0.436,0.37017500000000003,0.26532500000000003,0.587,0.10715,0.377025,0.4573,0.629825,0.533075,0.446625,0.52895,0.639875,0.37413770749999997,0.37075809,0.50655925,0.5262732125,0.4014423625,0.49952023,0.173075,0.483375,0.1341,0.649825,0.5196500000000001,0.2685,0.1465,0.47057499999999997,0.520025,0.655575,0.605425,0.4833,0.228325,0.46797500000000003,0.42462500000000003]]]

Actual:   [[[0.0832, 0.1101, 0.1862, 0.2511, 0.3228, 0.5475, 0.5883, 0.6346, 0.2118, 0.3806, 0.4606, 0.2687, 0.5575, 0.4903, 0.0843, 0.3624, 0.2038, 0.5213, 0.3316, 0.4413, 0.271, 0.7685, 0.4755, 0.2282, 0.623, 0.3112, 0.6414, 0.1282, 0.1619, 0.1831, 0.4658, 0.684, 0.6447, 0.5098, 0.3546, 0.2613, 0.149, 0.5549, 0.4854, 0.3187, 0.4883, 0.3446], [0.2796, 0.1342, 0.438, 0.4206, 0.8015, 0.3307, 0.2178, 0.5843, 0.3728, 0.4117, 0.5981, 0.4737, 0.3131, 0.3101, 0.2266, 0.4958, 0.3892, 0.092, 0.4483, 0.6952, 0.5044, 0.6684, 0.191, 0.5362, 0.8886, 0.59, 0.8566, 0.2888, 0.0854, 0.0219, 0.4829, 0.4666, 0.1339, 0.5657, 0.32, 0.3202, 0.4377, 0.2844, 0.5235, 0.4415, 0.066, 0.216], [0.456, 0.059, 0.2661, 0.2745, 0.6886, 0.4335, 0.5209, 0.3865, 0.4144, 0.436, 0.3702, 0.2654, 0.587, 0.1072, 0.3771, 0.4573, 0.6299, 0.5331, 0.4467, 0.529, 0.6399, 0.3742, 0.3708, 0.5066, 0.5263, 0.4015, 0.4996, 0.1731, 0.4834, 0.1341, 0.6499, 0.5197, 0.2685, 0.1465, 0.4706, 0.5201, 0.6556, 0.6055, 0.4833, 0.2284, 0.468, 0.4247]]]

Expected: [[[0.0832, 0.1101, 0.1862, 0.2511, 0.3228, 0.5475, 0.5883, 0.6346, 0.2118, 0.3806, 0.4606, 0.2687, 0.5575, 0.4903, 0.0843, 0.3624, 0.2038, 0.5213, 0.3316, 0.4413, 0.271, 0.7685, 0.4755, 0.2282, 0.623, 0.3112, 0.6414, 0.1282, 0.1619, 0.1831, 0.4658, 0.684, 0.6447, 0.5098, 0.3546, 0.2613, 0.149, 0.5549, 0.4854, 0.3187, 0.4883, 0.3446], [0.2796, 0.1342, 0.438, 0.4206, 0.8015, 0.3307, 0.2178, 0.5843, 0.3728, 0.4117, 0.5981, 0.4737, 0.3131, 0.3101, 0.2267, 0.4958, 0.3892, 0.092, 0.4484, 0.6952, 0.5044, 0.6684, 0.191, 0.5362, 0.8886, 0.59, 0.8566, 0.2888, 0.0854, 0.0219, 0.4829, 0.4666, 0.1339, 0.5657, 0.32, 0.3202, 0.4377, 0.2844, 0.5235, 0.4415, 0.066, 0.216], [0.456, 0.059, 0.2661, 0.2745, 0.6886, 0.4335, 0.5209, 0.3865, 0.4144, 0.436, 0.3702, 0.2654, 0.587, 0.1072, 0.3771, 0.4573, 0.6299, 0.5331, 0.4467, 0.529, 0.6399, 0.3742, 0.3708, 0.5066, 0.5263, 0.4015, 0.4996, 0.1731, 0.4834, 0.1341, 0.6499, 0.5197, 0.2685, 0.1465, 0.4706, 0.5201, 0.6556, 0.6055, 0.4833, 0.2284, 0.468, 0.4247]]]