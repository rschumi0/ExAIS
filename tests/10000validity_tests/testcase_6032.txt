import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Dot84927 = tf.keras.layers.Input(shape=([3]))
in1Dot84927 = tf.keras.layers.Input(shape=([3]))
in0Con25602 = tf.keras.layers.Input(shape=([3, 2, 2, 2]))
in0Min25546 = tf.keras.layers.Input(shape=([2, 2, 2]))
in1Min25546 = tf.keras.layers.Input(shape=([2, 2, 2]))
in0Con45373 = tf.keras.layers.Input(shape=([3, 2, 2, 2]))
in0Sub77649 = tf.keras.layers.Input(shape=([3, 2, 2, 3]))
in1Sub77649 = tf.keras.layers.Input(shape=([3, 2, 2, 3]))

Dot84927 = keras.layers.Dot(axes=(1, 1), name = 'Dot84927', )([in0Dot84927,in1Dot84927])
Res79495 = keras.layers.Reshape((1, 1), name = 'Res79495', )(Dot84927)
Per68448 = keras.layers.Permute((2,1), name = 'Per68448',)(Res79495)
Res48064 = keras.layers.Reshape((1, 1, 1), name = 'Res48064', )(Per68448)
Res39050 = keras.layers.Reshape((1, 1, 1, 1), name = 'Res39050', )(Res48064)
Zer98555 = keras.layers.ZeroPadding3D(padding=((2, 0), (1, 0), (1, 0)), name = 'Zer98555', )(Res39050)
Con25602 = keras.layers.Concatenate(axis=4, name = 'Con25602', )([Zer98555,in0Con25602])
Min25546 = keras.layers.Minimum(name = 'Min25546', )([in0Min25546,in1Min25546])
Res84744 = keras.layers.Reshape((2, 2, 2, 1), name = 'Res84744', )(Min25546)
Zer38952 = keras.layers.ZeroPadding3D(padding=((1, 0), (0, 0), (0, 0)), name = 'Zer38952', )(Res84744)
Con45373 = keras.layers.Concatenate(axis=4, name = 'Con45373', )([Zer38952,in0Con45373])
Sub77649 = keras.layers.Subtract(name = 'Sub77649', )([in0Sub77649,in1Sub77649])
Ave94747 = keras.layers.Average(name = 'Ave94747', )([Con45373,Sub77649])
Max89038 = keras.layers.Maximum(name = 'Max89038', )([Con25602,Ave94747])
model = tf.keras.models.Model(inputs=[in0Dot84927,in1Dot84927,in0Con25602,in0Min25546,in1Min25546,in0Con45373,in0Sub77649,in1Sub77649], outputs=Max89038)
in0Dot84927 = tf.constant([[0.9804, 0.2338, 0.9351]])
in1Dot84927 = tf.constant([[0.1878, 0.3831, 0.4506]])
in0Con25602 = tf.constant([[[[[0.121, 0.8597], [0.7424, 0.2589]], [[0.4354, 0.79], [0.0265, 0.6909]]], [[[0.3206, 0.1558], [0.9398, 0.6764]], [[0.6096, 0.7151], [0.248, 0.0417]]], [[[0.4281, 0.5713], [0.4295, 0.9527]], [[0.7936, 0.7554], [0.7946, 0.3614]]]]])
in0Min25546 = tf.constant([[[[0.6108, 0.3531], [0.9943, 0.413]], [[0.9509, 0.9864], [0.739, 0.7727]]]])
in1Min25546 = tf.constant([[[[0.2485, 0.3145], [0.6248, 0.5453]], [[0.0053, 0.8335], [0.5847, 0.8337]]]])
in0Con45373 = tf.constant([[[[[0.4514, 0.1922], [0.0577, 0.5783]], [[0.5997, 0.1857], [0.7832, 0.4441]]], [[[0.5572, 0.9882], [0.7403, 0.3875]], [[0.8267, 0.6146], [0.1005, 0.6012]]], [[[0.4367, 0.501], [0.4371, 0.9375]], [[0.8372, 0.1039], [0.8393, 0.2416]]]]])
in0Sub77649 = tf.constant([[[[[0.4502, 0.4256, 0.1862], [0.6133, 0.6987, 0.1522]], [[0.3923, 0.9042, 0.0782], [0.2113, 0.4275, 0.4894]]], [[[0.5145, 0.5247, 0.9371], [0.7075, 0.0357, 0.4293]], [[0.0563, 0.7489, 0.3871], [0.986, 0.7051, 0.3113]]], [[[0.4688, 0.493, 0.4139], [0.4381, 0.8124, 0.8897]], [[0.2495, 0.85, 0.5908], [0.8749, 0.9596, 0.111]]]]])
in1Sub77649 = tf.constant([[[[[0.7228, 0.7246, 0.2821], [0.519, 0.4761, 0.9936]], [[0.4777, 0.7041, 0.5994], [0.5109, 0.5341, 0.5323]]], [[[0.4217, 0.3389, 0.1637], [0.0624, 0.5445, 0.6551]], [[0.6712, 0.9853, 0.7234], [0.8384, 0.0022, 0.1863]]], [[[0.2863, 0.3918, 0.7998], [0.8137, 0.9655, 0.72]], [[0.0967, 0.513, 0.3398], [0.1928, 0.3466, 0.2895]]]]])
print (np.array2string(model.predict([in0Dot84927,in1Dot84927,in0Con25602,in0Min25546,in1Min25546,in0Con45373,in0Sub77649,in1Sub77649],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Max89038.png')

LDot84927 = dot_layer([[0.9804, 0.2338, 0.9351]], [[0.1878, 0.3831, 0.4506]], 1, 1, Dot84927), 
LRes79495 = reshape_layer(Dot84927, [1, 1], Res79495), 
LPer68448 = permute_layer(Res79495, 2,1, Per68448), 
LRes48064 = reshape_layer(Per68448, [1, 1, 1], Res48064), 
LRes39050 = reshape_layer(Res48064, [1, 1, 1, 1], Res39050), 
LZer98555 = zero_padding3D_layer(Res39050, 2, 0, 1, 0, 1, 0, Zer98555), 
LCon25602 = concatenate_layer([Zer98555,[[[[[0.121, 0.8597], [0.7424, 0.2589]], [[0.4354, 0.79], [0.0265, 0.6909]]], [[[0.3206, 0.1558], [0.9398, 0.6764]], [[0.6096, 0.7151], [0.248, 0.0417]]], [[[0.4281, 0.5713], [0.4295, 0.9527]], [[0.7936, 0.7554], [0.7946, 0.3614]]]]]], 4, Con25602), 
LMin25546 = minimum_layer([[[[[0.6108, 0.3531], [0.9943, 0.413]], [[0.9509, 0.9864], [0.739, 0.7727]]]], [[[[0.2485, 0.3145], [0.6248, 0.5453]], [[0.0053, 0.8335], [0.5847, 0.8337]]]]], Min25546), 
LRes84744 = reshape_layer(Min25546, [2, 2, 2, 1], Res84744), 
LZer38952 = zero_padding3D_layer(Res84744, 1, 0, 0, 0, 0, 0, Zer38952), 
LCon45373 = concatenate_layer([Zer38952,[[[[[0.4514, 0.1922], [0.0577, 0.5783]], [[0.5997, 0.1857], [0.7832, 0.4441]]], [[[0.5572, 0.9882], [0.7403, 0.3875]], [[0.8267, 0.6146], [0.1005, 0.6012]]], [[[0.4367, 0.501], [0.4371, 0.9375]], [[0.8372, 0.1039], [0.8393, 0.2416]]]]]], 4, Con45373), 
LSub77649 = subtract_layer([[[[[0.4502, 0.4256, 0.1862], [0.6133, 0.6987, 0.1522]], [[0.3923, 0.9042, 0.0782], [0.2113, 0.4275, 0.4894]]], [[[0.5145, 0.5247, 0.9371], [0.7075, 0.0357, 0.4293]], [[0.0563, 0.7489, 0.3871], [0.986, 0.7051, 0.3113]]], [[[0.4688, 0.493, 0.4139], [0.4381, 0.8124, 0.8897]], [[0.2495, 0.85, 0.5908], [0.8749, 0.9596, 0.111]]]]], [[[[[0.7228, 0.7246, 0.2821], [0.519, 0.4761, 0.9936]], [[0.4777, 0.7041, 0.5994], [0.5109, 0.5341, 0.5323]]], [[[0.4217, 0.3389, 0.1637], [0.0624, 0.5445, 0.6551]], [[0.6712, 0.9853, 0.7234], [0.8384, 0.0022, 0.1863]]], [[[0.2863, 0.3918, 0.7998], [0.8137, 0.9655, 0.72]], [[0.0967, 0.513, 0.3398], [0.1928, 0.3466, 0.2895]]]]], Sub77649), 
LAve94747 = average_layer([Con45373,Sub77649], Ave94747), 
LMax89038 = maximum_layer([Con25602,Ave94747], Max89038), 
exec_layers([LDot84927,LRes79495,LPer68448,LRes48064,LRes39050,LZer98555,LCon25602,LMin25546,LRes84744,LZer38952,LCon45373,LSub77649,LAve94747,LMax89038],["Dot84927","Res79495","Per68448","Res48064","Res39050","Zer98555","Con25602","Min25546","Res84744","Zer38952","Con45373","Sub77649","Ave94747","Max89038"],Max89038,"Max89038")

Actual (Unparsed): [[[[[0.0000000, 0.1210000, 0.8597000], [0.0471500, 0.7424000, 0.2589000]], [[0.0000000, 0.4354000, 0.7900000], [0.0000000, 0.3383000, 0.6909000]]], [[[0.1706500, 0.3715000, 0.8808000], [0.4798000, 0.9398000, 0.6764000]], [[0.0049500, 0.6096000, 0.7151000], [0.2803000, 0.4017000, 0.3631000]]], [[[0.0939000, 0.4281000, 0.5713000], [0.2289500, 0.4295000, 0.9527000]], [[0.3687500, 0.7936000, 0.7554000], [0.7274000, 0.7946000, 0.3614000]]]]]

Expected (Unparsed): [[[[[0,0.121,0.8597],[0.04714999999999997,0.7424,0.2589]],[[0,0.4354,0.79],[0,0.3383,0.6909]]],[[[0.17064999999999997,0.37150000000000005,0.8808],[0.4798,0.9398,0.6764]],[[0.00495000000000001,0.6096,0.7151],[0.2803,0.4017,0.3631]]],[[[0.0939,0.4281,0.5713],[0.22895000000000001,0.4295,0.9527]],[[0.36875,0.7936,0.7554],[0.7274,0.7946,0.3614]]]]]

Actual:   [[[[[0, 0.121, 0.8597], [0.0472, 0.7424, 0.2589]], [[0, 0.4354, 0.79], [0, 0.3383, 0.6909]]], [[[0.1707, 0.3715, 0.8808], [0.4798, 0.9398, 0.6764]], [[0.005, 0.6096, 0.7151], [0.2803, 0.4017, 0.3631]]], [[[0.0939, 0.4281, 0.5713], [0.229, 0.4295, 0.9527]], [[0.3688, 0.7936, 0.7554], [0.7274, 0.7946, 0.3614]]]]]

Expected: [[[[[0, 0.121, 0.8597], [0.0472, 0.7424, 0.2589]], [[0, 0.4354, 0.79], [0, 0.3383, 0.6909]]], [[[0.1707, 0.3716, 0.8808], [0.4798, 0.9398, 0.6764]], [[0.005, 0.6096, 0.7151], [0.2803, 0.4017, 0.3631]]], [[[0.0939, 0.4281, 0.5713], [0.229, 0.4295, 0.9527]], [[0.3688, 0.7936, 0.7554], [0.7274, 0.7946, 0.3614]]]]]