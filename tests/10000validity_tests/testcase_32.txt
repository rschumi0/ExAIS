import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Dot96758 = tf.keras.layers.Input(shape=([3, 2]))
in1Dot96758 = tf.keras.layers.Input(shape=([3, 2]))

Dot96758 = keras.layers.Dot(axes=(1, 1), name = 'Dot96758', )([in0Dot96758,in1Dot96758])
Glo98419 = keras.layers.GlobalAveragePooling1D(name = 'Glo98419', )(Dot96758)
Res28337 = keras.layers.Reshape((2, 1), name = 'Res28337', )(Glo98419)
Zer7361 = keras.layers.ZeroPadding1D(padding=((1, 1)), name = 'Zer7361', )(Res28337)
model = tf.keras.models.Model(inputs=[in0Dot96758,in1Dot96758], outputs=Zer7361)
in0Dot96758 = tf.constant([[[0.0801, 0.6276], [0.2803, 0.4541], [0.7511, 0.5871]]])
in1Dot96758 = tf.constant([[[0.8041, 0.2586], [0.6734, 0.7321], [0.0116, 0.2094]]])
print (np.array2string(model.predict([in0Dot96758,in1Dot96758],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Zer7361.png')

LDot96758 = dot_layer([[[0.0801, 0.6276], [0.2803, 0.4541], [0.7511, 0.5871]]], [[[0.8041, 0.2586], [0.6734, 0.7321], [0.0116, 0.2094]]], 1, 1, Dot96758), 
LGlo98419 = global_average_pooling1D_layer(Dot96758, Glo98419), 
LRes28337 = reshape_layer(Glo98419, [2, 1], Res28337), 
LZer7361 = zero_padding1D_layer(Res28337, 1, 1, Zer7361), 
exec_layers([LDot96758,LGlo98419,LRes28337,LZer7361],["Dot96758","Glo98419","Res28337","Zer7361"],Zer7361,"Zer7361")

Actual (Unparsed): [[[0.0000000], [0.5395648], [0.5004423], [0.0000000]]]

Expected (Unparsed): [[[0],[0.539564825],[0.50044227],[0]]]

Actual:   [[[0], [0.5396], [0.5005], [0]]]

Expected: [[[0], [0.5396], [0.5005], [0]]]