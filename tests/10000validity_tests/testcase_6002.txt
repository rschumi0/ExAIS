import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Den36394 = tf.keras.layers.Input(shape=([5, 3]))
in0Min28948 = tf.keras.layers.Input(shape=([1, 2]))
in1Min28948 = tf.keras.layers.Input(shape=([1, 2]))
in0Max21592 = tf.keras.layers.Input(shape=([1, 2, 1]))
in1Max21592 = tf.keras.layers.Input(shape=([1, 2, 1]))
in0Loc53534 = tf.keras.layers.Input(shape=([2, 1]))
in0Add50166 = tf.keras.layers.Input(shape=([1, 1, 1]))
in1Add50166 = tf.keras.layers.Input(shape=([1, 1, 1]))
in0Con92788 = tf.keras.layers.Input(shape=([2, 3, 1]))
in0Mul91879 = tf.keras.layers.Input(shape=([1, 2, 2]))
in1Mul91879 = tf.keras.layers.Input(shape=([1, 2, 2]))
in0Con61786 = tf.keras.layers.Input(shape=([7, 4, 1]))

Den36394 = keras.layers.Dense(2,name = 'Den36394', )(in0Den36394)
Min28948 = keras.layers.Minimum(name = 'Min28948', )([in0Min28948,in1Min28948])
Sof1385 = keras.layers.Softmax(axis=1, name = 'Sof1385', )(Min28948)
Zer99 = keras.layers.ZeroPadding1D(padding=((4, 0)), name = 'Zer99', )(Sof1385)
Ave94240 = keras.layers.Average(name = 'Ave94240', )([Den36394,Zer99])
Res12095 = keras.layers.Reshape((5, 2, 1), name = 'Res12095', )(Ave94240)
Res33857 = keras.layers.Reshape((5, 2, 1, 1), name = 'Res33857', )(Res12095)
Zer17913 = keras.layers.ZeroPadding3D(padding=((1, 1), (1, 1), (1, 1)), name = 'Zer17913', )(Res33857)
Res21368 = keras.layers.Reshape((7, 4, 3), name = 'Res21368', )(Zer17913)
Max21592 = keras.layers.Maximum(name = 'Max21592', )([in0Max21592,in1Max21592])
Zer22989 = keras.layers.ZeroPadding2D(padding=((1, 0), (1, 0)), name = 'Zer22989', )(Max21592)
Loc53534 = keras.layers.LocallyConnected1D(3, (1),strides=(1), name = 'Loc53534', )(in0Loc53534)
Res42990 = keras.layers.Reshape((2, 3, 1), name = 'Res42990', )(Loc53534)
Add50166 = keras.layers.Add(name = 'Add50166', )([in0Add50166,in1Add50166])
Zer46835 = keras.layers.ZeroPadding2D(padding=((1, 0), (2, 0)), name = 'Zer46835', )(Add50166)
Add50430 = keras.layers.Add(name = 'Add50430', )([Res42990,Zer46835])
Min33364 = keras.layers.Minimum(name = 'Min33364', )([Zer22989,Add50430])
Con92788 = keras.layers.Concatenate(axis=3, name = 'Con92788', )([Min33364,in0Con92788])
Mul91879 = keras.layers.Multiply(name = 'Mul91879', )([in0Mul91879,in1Mul91879])
Zer19525 = keras.layers.ZeroPadding2D(padding=((1, 0), (1, 0)), name = 'Zer19525', )(Mul91879)
Max76686 = keras.layers.Maximum(name = 'Max76686', )([Con92788,Zer19525])
Zer54811 = keras.layers.ZeroPadding2D(padding=((5, 0), (1, 0)), name = 'Zer54811', )(Max76686)
Con61786 = keras.layers.Concatenate(axis=3, name = 'Con61786', )([Zer54811,in0Con61786])
Mul73605 = keras.layers.Multiply(name = 'Mul73605', )([Res21368,Con61786])
model = tf.keras.models.Model(inputs=[in0Den36394,in0Min28948,in1Min28948,in0Max21592,in1Max21592,in0Loc53534,in0Add50166,in1Add50166,in0Con92788,in0Mul91879,in1Mul91879,in0Con61786], outputs=Mul73605)
w = model.get_layer('Den36394').get_weights() 
w[0] = np.array([[0.1514, 0.0259], [0.0687, 0.5355], [0.084, 0.4451]])
w[1] = np.array([0.146, 0.1498])
model.get_layer('Den36394').set_weights(w) 
w = model.get_layer('Loc53534').get_weights() 
w[0] = np.array([[[0.8158, 0.8936, 0.7386]], [[0.9722, 0.7578, 0.4303]]])
w[1] = np.array([[0, 0, 0], [0, 0, 0]])
model.get_layer('Loc53534').set_weights(w) 
in0Den36394 = tf.constant([[[0.6638, 0.1459, 0.3912], [0.936, 0.8854, 0.798], [0.5044, 0.4932, 0.3124], [0.8839, 0.8495, 0.9533], [0.3386, 0.216, 0.879]]])
in0Min28948 = tf.constant([[[0.5608, 0.5387]]])
in1Min28948 = tf.constant([[[0.0221, 0.0537]]])
in0Max21592 = tf.constant([[[[0.4317], [0.2172]]]])
in1Max21592 = tf.constant([[[[0.9105], [0.0081]]]])
in0Loc53534 = tf.constant([[[0.7839], [0.2424]]])
in0Add50166 = tf.constant([[[[0.5731]]]])
in1Add50166 = tf.constant([[[[0.5769]]]])
in0Con92788 = tf.constant([[[[0.7305], [0.7773], [0.4037]], [[0.18], [0.7606], [0.578]]]])
in0Mul91879 = tf.constant([[[[0.0694, 0.2625], [0.2585, 0.2039]]]])
in1Mul91879 = tf.constant([[[[0.6406, 0.8804], [0.6922, 0.1204]]]])
in0Con61786 = tf.constant([[[[0.6541], [0.6842], [0.7644], [0.2859]], [[0.3732], [0.5109], [0.9531], [0.2964]], [[0.715], [0.6386], [0.2059], [0.7946]], [[0.1966], [0.8604], [0.5445], [0.5555]], [[0.037], [0.6421], [0.7081], [0.218]], [[0.0226], [0.3558], [0.3731], [0.563]], [[0.0718], [0.0627], [0.9505], [0.3185]]]])
print (np.array2string(model.predict([in0Den36394,in0Min28948,in1Min28948,in0Max21592,in1Max21592,in0Loc53534,in0Add50166,in1Add50166,in0Con92788,in0Mul91879,in1Mul91879,in0Con61786],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Mul73605.png')

LDen36394 = dense_layer([[[0.6638, 0.1459, 0.3912], [0.936, 0.8854, 0.798], [0.5044, 0.4932, 0.3124], [0.8839, 0.8495, 0.9533], [0.3386, 0.216, 0.879]]], [[0.1514, 0.0259], [0.0687, 0.5355], [0.084, 0.4451]],[0.146, 0.1498], Den36394), 
LMin28948 = minimum_layer([[[[0.5608, 0.5387]]], [[[0.0221, 0.0537]]]], Min28948), 
LSof1385 = softmax_layer(Min28948, 1, Sof1385), 
LZer99 = zero_padding1D_layer(Sof1385, 4, 0, Zer99), 
LAve94240 = average_layer([Den36394,Zer99], Ave94240), 
LRes12095 = reshape_layer(Ave94240, [5, 2, 1], Res12095), 
LRes33857 = reshape_layer(Res12095, [5, 2, 1, 1], Res33857), 
LZer17913 = zero_padding3D_layer(Res33857, 1, 1, 1, 1, 1, 1, Zer17913), 
LRes21368 = reshape_layer(Zer17913, [7, 4, 3], Res21368), 
LMax21592 = maximum_layer([[[[[0.4317], [0.2172]]]], [[[[0.9105], [0.0081]]]]], Max21592), 
LZer22989 = zero_padding2D_layer(Max21592, 1, 0, 1, 0, Zer22989), 
LLoc53534 = locally_connected1D_layer([[[0.7839], [0.2424]]], 1,[[[0.8158, 0.8936, 0.7386]], [[0.9722, 0.7578, 0.4303]]],[[0, 0, 0], [0, 0, 0]], 1, Loc53534), 
LRes42990 = reshape_layer(Loc53534, [2, 3, 1], Res42990), 
LAdd50166 = add_layer([[[[[0.5731]]]], [[[[0.5769]]]]], Add50166), 
LZer46835 = zero_padding2D_layer(Add50166, 1, 0, 2, 0, Zer46835), 
LAdd50430 = add_layer([Res42990,Zer46835], Add50430), 
LMin33364 = minimum_layer([Zer22989,Add50430], Min33364), 
LCon92788 = concatenate_layer([Min33364,[[[[0.7305], [0.7773], [0.4037]], [[0.18], [0.7606], [0.578]]]]], 3, Con92788), 
LMul91879 = multiply_layer([[[[[0.0694, 0.2625], [0.2585, 0.2039]]]], [[[[0.6406, 0.8804], [0.6922, 0.1204]]]]], Mul91879), 
LZer19525 = zero_padding2D_layer(Mul91879, 1, 0, 1, 0, Zer19525), 
LMax76686 = maximum_layer([Con92788,Zer19525], Max76686), 
LZer54811 = zero_padding2D_layer(Max76686, 5, 0, 1, 0, Zer54811), 
LCon61786 = concatenate_layer([Zer54811,[[[[0.6541], [0.6842], [0.7644], [0.2859]], [[0.3732], [0.5109], [0.9531], [0.2964]], [[0.715], [0.6386], [0.2059], [0.7946]], [[0.1966], [0.8604], [0.5445], [0.5555]], [[0.037], [0.6421], [0.7081], [0.218]], [[0.0226], [0.3558], [0.3731], [0.563]], [[0.0718], [0.0627], [0.9505], [0.3185]]]]], 3, Con61786), 
LMul73605 = multiply_layer([Res21368,Con61786], Mul73605), 
exec_layers([LDen36394,LMin28948,LSof1385,LZer99,LAve94240,LRes12095,LRes33857,LZer17913,LRes21368,LMax21592,LZer22989,LLoc53534,LRes42990,LAdd50166,LZer46835,LAdd50430,LMin33364,LCon92788,LMul91879,LZer19525,LMax76686,LZer54811,LCon61786,LMul73605],["Den36394","Min28948","Sof1385","Zer99","Ave94240","Res12095","Res33857","Zer17913","Res21368","Max21592","Zer22989","Loc53534","Res42990","Add50166","Zer46835","Add50430","Min33364","Con92788","Mul91879","Zer19525","Max76686","Zer54811","Con61786","Mul73605"],Mul73605,"Mul73605")

Actual (Unparsed): [[[[0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000]], [[0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000]], [[0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000]], [[0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000]], [[0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000]], [[0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.4696893, 0.0000000], [0.0000000, 0.6472891, 0.0000000], [0.0000000, 0.0000000, 0.0000000]], [[0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000]]]]

Expected (Unparsed): [[[[0,0,0.0],[0,0,0.0],[0,0,0.0],[0,0,0.0]],[[0,0,0.0],[0,0.0,0.0],[0,0.0,0.0],[0,0,0.0]],[[0,0,0.0],[0,0.0,0.0],[0,0.0,0.0],[0,0,0.0]],[[0,0,0.0],[0,0.0,0.0],[0,0.0,0.0],[0,0,0.0]],[[0,0,0.0],[0,0.0,0.0],[0,0.0,0.0],[0,0,0.0]],[[0,0,0.0],[0,0.46968930741000003,0.0],[0,0.647289050736,0.0],[0,0.0,0.0]],[[0,0,0.0],[0,0.0,0.0],[0.0,0.0,0.0],[0.0,0.0,0.0]]]]

Actual:   [[[[0, 0, 0], [0, 0, 0], [0, 0, 0], [0, 0, 0]], [[0, 0, 0], [0, 0, 0], [0, 0, 0], [0, 0, 0]], [[0, 0, 0], [0, 0, 0], [0, 0, 0], [0, 0, 0]], [[0, 0, 0], [0, 0, 0], [0, 0, 0], [0, 0, 0]], [[0, 0, 0], [0, 0, 0], [0, 0, 0], [0, 0, 0]], [[0, 0, 0], [0, 0.4697, 0], [0, 0.6473, 0], [0, 0, 0]], [[0, 0, 0], [0, 0, 0], [0, 0, 0], [0, 0, 0]]]]

Expected: [[[[0, 0, 0], [0, 0, 0], [0, 0, 0], [0, 0, 0]], [[0, 0, 0], [0, 0, 0], [0, 0, 0], [0, 0, 0]], [[0, 0, 0], [0, 0, 0], [0, 0, 0], [0, 0, 0]], [[0, 0, 0], [0, 0, 0], [0, 0, 0], [0, 0, 0]], [[0, 0, 0], [0, 0, 0], [0, 0, 0], [0, 0, 0]], [[0, 0, 0], [0, 0.4697, 0], [0, 0.6473, 0], [0, 0, 0]], [[0, 0, 0], [0, 0, 0], [0, 0, 0], [0, 0, 0]]]]