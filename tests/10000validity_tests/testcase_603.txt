import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Mul90836 = tf.keras.layers.Input(shape=([1, 2, 1, 1]))
in1Mul90836 = tf.keras.layers.Input(shape=([1, 2, 1, 1]))

Mul90836 = keras.layers.Multiply(name = 'Mul90836', )([in0Mul90836,in1Mul90836])
Lay45583 = keras.layers.LayerNormalization(axis=3, epsilon=2.501106696322824, name = 'Lay45583', )(Mul90836)
Res90528 = keras.layers.Reshape((1, 2, 1), name = 'Res90528', )(Lay45583)
Glo47225 = keras.layers.GlobalAveragePooling2D(name = 'Glo47225', )(Res90528)
model = tf.keras.models.Model(inputs=[in0Mul90836,in1Mul90836], outputs=Glo47225)
in0Mul90836 = tf.constant([[[[[0.7531]], [[0.9649]]]]])
in1Mul90836 = tf.constant([[[[[0.0717]], [[0.7267]]]]])
print (np.array2string(model.predict([in0Mul90836,in1Mul90836],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Glo47225.png')

LMul90836 = multiply_layer([[[[[[0.7531]], [[0.9649]]]]], [[[[[0.0717]], [[0.7267]]]]]], Mul90836), 
LLay45583 = layer_normalization_layer(Mul90836, 3, 2.501106696322824, Lay45583), 
LRes90528 = reshape_layer(Lay45583, [1, 2, 1], Res90528), 
LGlo47225 = global_average_pooling2D_layer(Res90528, Glo47225), 
exec_layers([LMul90836,LLay45583,LRes90528,LGlo47225],["Mul90836","Lay45583","Res90528","Glo47225"],Glo47225,"Glo47225")

Actual (Unparsed): [[0.0000000]]

Expected (Unparsed): [[0.0]]

Actual:   [[0]]

Expected: [[0]]