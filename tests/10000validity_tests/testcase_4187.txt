import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Sub27158 = tf.keras.layers.Input(shape=([2, 2]))
in1Sub27158 = tf.keras.layers.Input(shape=([2, 2]))
in0Con1052 = tf.keras.layers.Input(shape=([2, 2, 1]))
in0Ave8389 = tf.keras.layers.Input(shape=([2, 1, 2]))
in1Ave8389 = tf.keras.layers.Input(shape=([2, 1, 2]))

Sub27158 = keras.layers.Subtract(name = 'Sub27158', )([in0Sub27158,in1Sub27158])
Res41908 = keras.layers.Reshape((2, 2, 1), name = 'Res41908', )(Sub27158)
Con1052 = keras.layers.Concatenate(axis=3, name = 'Con1052', )([Res41908,in0Con1052])
Ave8389 = keras.layers.Average(name = 'Ave8389', )([in0Ave8389,in1Ave8389])
Fla27166 = keras.layers.Flatten(name = 'Fla27166', )(Ave8389)
Res47798 = keras.layers.Reshape((4, 1), name = 'Res47798', )(Fla27166)
Res78247 = keras.layers.Reshape((4, 1, 1), name = 'Res78247', )(Res47798)
Res56957 = keras.layers.Reshape((4, 1, 1, 1), name = 'Res56957', )(Res78247)
Con75862 = keras.layers.Conv3D(2, (3, 1, 1),strides=(1, 1, 1), padding='valid', dilation_rate=(1, 1, 1), name = 'Con75862', )(Res56957)
Res44036 = keras.layers.Reshape((2, 1, 2), name = 'Res44036', )(Con75862)
Dep50547 = keras.layers.DepthwiseConv2D((2, 1),strides=(2, 2), padding='valid', name = 'Dep50547', )(Res44036)
Zer95008 = keras.layers.ZeroPadding2D(padding=((1, 0), (1, 0)), name = 'Zer95008', )(Dep50547)
Ave10143 = keras.layers.Average(name = 'Ave10143', )([Con1052,Zer95008])
model = tf.keras.models.Model(inputs=[in0Sub27158,in1Sub27158,in0Con1052,in0Ave8389,in1Ave8389], outputs=Ave10143)
w = model.get_layer('Con75862').get_weights() 
w[0] = np.array([[[[[0.4251, 0.0726]]]], [[[[0.6143, 0.955]]]], [[[[0.189, 0.2069]]]]])
w[1] = np.array([0, 0])
model.get_layer('Con75862').set_weights(w) 
w = model.get_layer('Dep50547').get_weights() 
w[0] = np.array([[[[0.9356], [0.3482]]], [[[0.1042], [0.4084]]]])
w[1] = np.array([0, 0])
model.get_layer('Dep50547').set_weights(w) 
in0Sub27158 = tf.constant([[[0.9735, 0.71], [0.0115, 0.0824]]])
in1Sub27158 = tf.constant([[[0.4782, 0.6298], [0.2257, 0.464]]])
in0Con1052 = tf.constant([[[[0.4508], [0.4182]], [[0.1582], [0.5058]]]])
in0Ave8389 = tf.constant([[[[0.2348, 0.1587]], [[0.2475, 0.5674]]]])
in1Ave8389 = tf.constant([[[[0.9859, 0.6119]], [[0.7626, 0.4243]]]])
print (np.array2string(model.predict([in0Sub27158,in1Sub27158,in0Con1052,in0Ave8389,in1Ave8389],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Ave10143.png')

LSub27158 = subtract_layer([[[0.9735, 0.71], [0.0115, 0.0824]]], [[[0.4782, 0.6298], [0.2257, 0.464]]], Sub27158), 
LRes41908 = reshape_layer(Sub27158, [2, 2, 1], Res41908), 
LCon1052 = concatenate_layer([Res41908,[[[[0.4508], [0.4182]], [[0.1582], [0.5058]]]]], 3, Con1052), 
LAve8389 = average_layer([[[[[0.2348, 0.1587]], [[0.2475, 0.5674]]]], [[[[0.9859, 0.6119]], [[0.7626, 0.4243]]]]], Ave8389), 
LFla27166 = flatten_layer(Ave8389, Fla27166), 
LRes47798 = reshape_layer(Fla27166, [4, 1], Res47798), 
LRes78247 = reshape_layer(Res47798, [4, 1, 1], Res78247), 
LRes56957 = reshape_layer(Res78247, [4, 1, 1, 1], Res56957), 
LCon75862 = conv3D_layer(Res56957, 3, 1, 1,[[[[[0.4251, 0.0726]]]], [[[[0.6143, 0.955]]]], [[[[0.189, 0.2069]]]]],[0, 0], 1, 1, 1, false, 1, 1, 1, Con75862), 
LRes44036 = reshape_layer(Con75862, [2, 1, 2], Res44036), 
LDep50547 = depthwise_conv2D_layer(Res44036, 2, 1,[[[[0.9356], [0.3482]]], [[[0.1042], [0.4084]]]],[0, 0], 2, 2, false, Dep50547), 
LZer95008 = zero_padding2D_layer(Dep50547, 1, 0, 1, 0, Zer95008), 
LAve10143 = average_layer([Con1052,Zer95008], Ave10143), 
exec_layers([LSub27158,LRes41908,LCon1052,LAve8389,LFla27166,LRes47798,LRes78247,LRes56957,LCon75862,LRes44036,LDep50547,LZer95008,LAve10143],["Sub27158","Res41908","Con1052","Ave8389","Fla27166","Res47798","Res78247","Res56957","Con75862","Res44036","Dep50547","Zer95008","Ave10143"],Ave10143,"Ave10143")

Actual (Unparsed): [[[[0.2476500, 0.2254000], [0.0401000, 0.2091000]], [[-0.1071000, 0.0791000], [0.1155326, 0.4680208]]]]

Expected (Unparsed): [[[[0.24765,0.2254],[0.04009999999999997,0.2091]],[[-0.1071,0.0791],[0.11553260132449988,0.4680207701045]]]]

Actual:   [[[[0.2477, 0.2254], [0.0401, 0.2091]], [[-0.1071, 0.0791], [0.1156, 0.4681]]]]

Expected: [[[[0.2477, 0.2254], [0.0401, 0.2091]], [[-0.1071, 0.0791], [0.1156, 0.4681]]]]