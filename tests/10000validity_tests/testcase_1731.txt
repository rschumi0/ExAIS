import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Fla55818 = tf.keras.layers.Input(shape=([2, 2]))
in0Con44774 = tf.keras.layers.Input(shape=([4, 3, 3, 1]))
in0Ave50023 = tf.keras.layers.Input(shape=([1, 2, 2, 2]))
in1Ave50023 = tf.keras.layers.Input(shape=([1, 2, 2, 2]))

Fla55818 = keras.layers.Flatten(name = 'Fla55818', )(in0Fla55818)
Res79798 = keras.layers.Reshape((4, 1), name = 'Res79798', )(Fla55818)
Res81213 = keras.layers.Reshape((4, 1, 1), name = 'Res81213', )(Res79798)
Res17870 = keras.layers.Reshape((4, 1, 1, 1), name = 'Res17870', )(Res81213)
Zer67597 = keras.layers.ZeroPadding3D(padding=((0, 0), (2, 0), (2, 0)), name = 'Zer67597', )(Res17870)
Con44774 = keras.layers.Concatenate(axis=4, name = 'Con44774', )([Zer67597,in0Con44774])
Ave50023 = keras.layers.Average(name = 'Ave50023', )([in0Ave50023,in1Ave50023])
Zer32318 = keras.layers.ZeroPadding3D(padding=((3, 0), (1, 0), (1, 0)), name = 'Zer32318', )(Ave50023)
Mul7295 = keras.layers.Multiply(name = 'Mul7295', )([Con44774,Zer32318])
model = tf.keras.models.Model(inputs=[in0Fla55818,in0Con44774,in0Ave50023,in1Ave50023], outputs=Mul7295)
in0Fla55818 = tf.constant([[[1.9869, 1.3567], [1.1464, 1.3508]]])
in0Con44774 = tf.constant([[[[[0.9881], [0.7657], [0.403]], [[0.4589], [0.5415], [0.777]], [[0.0964], [0.4665], [0.1024]]], [[[0.6286], [0.878], [0.9701]], [[0.07], [0.9543], [0.4004]], [[0.5293], [0.5155], [0.2513]]], [[[0.539], [0.2277], [0.4721]], [[0.1918], [0.9567], [0.7009]], [[0.4682], [0.3855], [0.1316]]], [[[0.0403], [0.8079], [0.2605]], [[0.187], [0.1109], [0.4983]], [[0.7562], [0.3342], [0.0479]]]]])
in0Ave50023 = tf.constant([[[[[0.9009, 0.8839], [0.0199, 0.4691]], [[0.1682, 0.2211], [0.5749, 0.9536]]]]])
in1Ave50023 = tf.constant([[[[[0.3566, 0.0717], [0.2785, 0.138]], [[0.2101, 0.6922], [0.3502, 0.1876]]]]])
print (np.array2string(model.predict([in0Fla55818,in0Con44774,in0Ave50023,in1Ave50023],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Mul7295.png')

LFla55818 = flatten_layer([[[1.9869, 1.3567], [1.1464, 1.3508]]], Fla55818), 
LRes79798 = reshape_layer(Fla55818, [4, 1], Res79798), 
LRes81213 = reshape_layer(Res79798, [4, 1, 1], Res81213), 
LRes17870 = reshape_layer(Res81213, [4, 1, 1, 1], Res17870), 
LZer67597 = zero_padding3D_layer(Res17870, 0, 0, 2, 0, 2, 0, Zer67597), 
LCon44774 = concatenate_layer([Zer67597,[[[[[0.9881], [0.7657], [0.403]], [[0.4589], [0.5415], [0.777]], [[0.0964], [0.4665], [0.1024]]], [[[0.6286], [0.878], [0.9701]], [[0.07], [0.9543], [0.4004]], [[0.5293], [0.5155], [0.2513]]], [[[0.539], [0.2277], [0.4721]], [[0.1918], [0.9567], [0.7009]], [[0.4682], [0.3855], [0.1316]]], [[[0.0403], [0.8079], [0.2605]], [[0.187], [0.1109], [0.4983]], [[0.7562], [0.3342], [0.0479]]]]]], 4, Con44774), 
LAve50023 = average_layer([[[[[[0.9009, 0.8839], [0.0199, 0.4691]], [[0.1682, 0.2211], [0.5749, 0.9536]]]]], [[[[[0.3566, 0.0717], [0.2785, 0.138]], [[0.2101, 0.6922], [0.3502, 0.1876]]]]]], Ave50023), 
LZer32318 = zero_padding3D_layer(Ave50023, 3, 0, 1, 0, 1, 0, Zer32318), 
LMul7295 = multiply_layer([Con44774,Zer32318], Mul7295), 
exec_layers([LFla55818,LRes79798,LRes81213,LRes17870,LZer67597,LCon44774,LAve50023,LZer32318,LMul7295],["Fla55818","Res79798","Res81213","Res17870","Zer67597","Con44774","Ave50023","Zer32318","Mul7295"],Mul7295,"Mul7295")

Actual (Unparsed): [[[[[0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000]], [[0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000]], [[0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000]]], [[[0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000]], [[0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000]], [[0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000]]], [[[0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000]], [[0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000]], [[0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000]]], [[[0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000]], [[0.0000000, 0.0000000], [0.0000000, 0.0529880], [0.0000000, 0.1512590]], [[0.0000000, 0.0000000], [0.0000000, 0.1526124], [0.6248125, 0.0273317]]]]]

Expected (Unparsed): [[[[[0,0.0],[0,0.0],[0,0.0]],[[0,0.0],[0,0.0],[0,0.0]],[[0,0.0],[0,0.0],[0.0,0.0]]],[[[0,0.0],[0,0.0],[0,0.0]],[[0,0.0],[0,0.0],[0,0.0]],[[0,0.0],[0,0.0],[0.0,0.0]]],[[[0,0.0],[0,0.0],[0,0.0]],[[0,0.0],[0,0.0],[0,0.0]],[[0,0.0],[0,0.0],[0.0,0.0]]],[[[0,0.0],[0,0.0],[0,0.0]],[[0,0.0],[0.0,0.05298802],[0.0,0.151258965]],[[0,0.0],[0.0,0.15261243],[0.62481254,0.02733174]]]]]

Actual:   [[[[[0, 0], [0, 0], [0, 0]], [[0, 0], [0, 0], [0, 0]], [[0, 0], [0, 0], [0, 0]]], [[[0, 0], [0, 0], [0, 0]], [[0, 0], [0, 0], [0, 0]], [[0, 0], [0, 0], [0, 0]]], [[[0, 0], [0, 0], [0, 0]], [[0, 0], [0, 0], [0, 0]], [[0, 0], [0, 0], [0, 0]]], [[[0, 0], [0, 0], [0, 0]], [[0, 0], [0, 0.053], [0, 0.1513]], [[0, 0], [0, 0.1527], [0.6249, 0.0274]]]]]

Expected: [[[[[0, 0], [0, 0], [0, 0]], [[0, 0], [0, 0], [0, 0]], [[0, 0], [0, 0], [0, 0]]], [[[0, 0], [0, 0], [0, 0]], [[0, 0], [0, 0], [0, 0]], [[0, 0], [0, 0], [0, 0]]], [[[0, 0], [0, 0], [0, 0]], [[0, 0], [0, 0], [0, 0]], [[0, 0], [0, 0], [0, 0]]], [[[0, 0], [0, 0], [0, 0]], [[0, 0], [0, 0.053], [0, 0.1513]], [[0, 0], [0, 0.1527], [0.6249, 0.0274]]]]]