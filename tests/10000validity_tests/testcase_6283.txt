import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Max64341 = tf.keras.layers.Input(shape=([2, 1, 2, 2]))
in1Max64341 = tf.keras.layers.Input(shape=([2, 1, 2, 2]))
in0Con70398 = tf.keras.layers.Input(shape=([8, 1]))
in0Cro20082 = tf.keras.layers.Input(shape=([3, 4, 4]))
in0Con96913 = tf.keras.layers.Input(shape=([1, 2]))
in0Mul82998 = tf.keras.layers.Input(shape=([1, 2]))
in1Mul82998 = tf.keras.layers.Input(shape=([1, 2]))

Max64341 = keras.layers.Maximum(name = 'Max64341', )([in0Max64341,in1Max64341])
Res80259 = keras.layers.Reshape((2, 1, 4), name = 'Res80259', )(Max64341)
Res95286 = keras.layers.Reshape((2, 4), name = 'Res95286', )(Res80259)
Glo23278 = keras.layers.GlobalAveragePooling1D(name = 'Glo23278', )(Res95286)
Res73032 = keras.layers.Reshape((4, 1), name = 'Res73032', )(Glo23278)
Zer55808 = keras.layers.ZeroPadding1D(padding=((4, 0)), name = 'Zer55808', )(Res73032)
Con70398 = keras.layers.Concatenate(axis=2, name = 'Con70398', )([Zer55808,in0Con70398])
Cro20082 = keras.layers.Cropping2D(cropping=((2, 0), (3, 0)), name = 'Cro20082', )(in0Cro20082)
Res55831 = keras.layers.Reshape((1, 4), name = 'Res55831', )(Cro20082)
Con96913 = keras.layers.Concatenate(axis=2, name = 'Con96913', )([Res55831,in0Con96913])
Mul82998 = keras.layers.Multiply(name = 'Mul82998', )([in0Mul82998,in1Mul82998])
Dot85933 = keras.layers.Dot(axes=(1, 1), name = 'Dot85933', )([Con96913,Mul82998])
Zer48835 = keras.layers.ZeroPadding1D(padding=((1, 1)), name = 'Zer48835', )(Dot85933)
Ave55067 = keras.layers.Average(name = 'Ave55067', )([Con70398,Zer48835])
model = tf.keras.models.Model(inputs=[in0Max64341,in1Max64341,in0Con70398,in0Cro20082,in0Con96913,in0Mul82998,in1Mul82998], outputs=Ave55067)
in0Max64341 = tf.constant([[[[[0.5558, 0.6034], [0.0225, 0.8248]]], [[[0.3414, 0.7828], [0.6796, 0.1251]]]]])
in1Max64341 = tf.constant([[[[[0.365, 0.5938], [0.8472, 0.4824]]], [[[0.2534, 0.1131], [0.9324, 0.6572]]]]])
in0Con70398 = tf.constant([[[0.2343], [0.8674], [0.3401], [0.1615], [0.6187], [0.6984], [0.9796], [0.2033]]])
in0Cro20082 = tf.constant([[[[1.4589, 1.951, 1.9801, 1.6506], [1.5485, 1.5985, 1.4336, 1.4412], [1.0289, 1.721, 1.2486, 1.0762], [1.5882, 1.1043, 1.8489, 1.4944]], [[1.8878, 1.399, 1.3621, 1.724], [1.9377, 1.159, 1.6786, 1.7785], [1.6494, 1.9242, 1.1435, 1.6564], [1.3756, 1.2602, 1.105, 1.3376]], [[1.1194, 1.7318, 1.123, 1.5684], [1.6225, 1.7646, 1.3692, 1.5251], [1.7271, 1.2267, 1.6401, 1.1565], [1.2472, 1.3484, 1.447, 1.1199]]]])
in0Con96913 = tf.constant([[[0.3413, 0.209]]])
in0Mul82998 = tf.constant([[[0.0817, 0.2917]]])
in1Mul82998 = tf.constant([[[0.8478, 0.7442]]])
print (np.array2string(model.predict([in0Max64341,in1Max64341,in0Con70398,in0Cro20082,in0Con96913,in0Mul82998,in1Mul82998],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Ave55067.png')

LMax64341 = maximum_layer([[[[[[0.5558, 0.6034], [0.0225, 0.8248]]], [[[0.3414, 0.7828], [0.6796, 0.1251]]]]], [[[[[0.365, 0.5938], [0.8472, 0.4824]]], [[[0.2534, 0.1131], [0.9324, 0.6572]]]]]], Max64341), 
LRes80259 = reshape_layer(Max64341, [2, 1, 4], Res80259), 
LRes95286 = reshape_layer(Res80259, [2, 4], Res95286), 
LGlo23278 = global_average_pooling1D_layer(Res95286, Glo23278), 
LRes73032 = reshape_layer(Glo23278, [4, 1], Res73032), 
LZer55808 = zero_padding1D_layer(Res73032, 4, 0, Zer55808), 
LCon70398 = concatenate_layer([Zer55808,[[[0.2343], [0.8674], [0.3401], [0.1615], [0.6187], [0.6984], [0.9796], [0.2033]]]], 2, Con70398), 
LCro20082 = cropping2D_layer([[[[1.4589, 1.951, 1.9801, 1.6506], [1.5485, 1.5985, 1.4336, 1.4412], [1.0289, 1.721, 1.2486, 1.0762], [1.5882, 1.1043, 1.8489, 1.4944]], [[1.8878, 1.399, 1.3621, 1.724], [1.9377, 1.159, 1.6786, 1.7785], [1.6494, 1.9242, 1.1435, 1.6564], [1.3756, 1.2602, 1.105, 1.3376]], [[1.1194, 1.7318, 1.123, 1.5684], [1.6225, 1.7646, 1.3692, 1.5251], [1.7271, 1.2267, 1.6401, 1.1565], [1.2472, 1.3484, 1.447, 1.1199]]]], 2, 0, 3, 0, Cro20082), 
LRes55831 = reshape_layer(Cro20082, [1, 4], Res55831), 
LCon96913 = concatenate_layer([Res55831,[[[0.3413, 0.209]]]], 2, Con96913), 
LMul82998 = multiply_layer([[[[0.0817, 0.2917]]], [[[0.8478, 0.7442]]]], Mul82998), 
LDot85933 = dot_layer(Con96913,Mul82998, 1, 1, Dot85933), 
LZer48835 = zero_padding1D_layer(Dot85933, 1, 1, Zer48835), 
LAve55067 = average_layer([Con70398,Zer48835], Ave55067), 
exec_layers([LMax64341,LRes80259,LRes95286,LGlo23278,LRes73032,LZer55808,LCon70398,LCro20082,LRes55831,LCon96913,LMul82998,LDot85933,LZer48835,LAve55067],["Max64341","Res80259","Res95286","Glo23278","Res73032","Zer55808","Con70398","Cro20082","Res55831","Con96913","Mul82998","Dot85933","Zer48835","Ave55067"],Ave55067,"Ave55067")

Actual (Unparsed): [[[0.0000000, 0.1171500], [0.0431938, 0.5690730], [0.0466986, 0.3164074], [0.0501134, 0.2378097], [0.2630851, 0.4309057], [0.3583701, 0.3862452], [0.4521382, 0.5124852], [0.3705000, 0.1016500]]]

Expected (Unparsed): [[[0,0.11715],[0.043193816136,0.569073046104],[0.046698638292,0.316407452988],[0.050113415609999996,0.23780965179000002],[0.263085082337,0.430905704243],[0.35837011661900003,0.386245237841],[0.45213821966999995,0.51248518813],[0.3705,0.10165]]]

Actual:   [[[0, 0.1172], [0.0432, 0.5691], [0.0467, 0.3165], [0.0502, 0.2379], [0.2631, 0.431], [0.3584, 0.3863], [0.4522, 0.5125], [0.3705, 0.1017]]]

Expected: [[[0, 0.1172], [0.0432, 0.5691], [0.0467, 0.3165], [0.0502, 0.2379], [0.2631, 0.431], [0.3584, 0.3863], [0.4522, 0.5125], [0.3705, 0.1017]]]