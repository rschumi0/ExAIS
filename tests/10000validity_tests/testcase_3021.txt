import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0PRe69517 = tf.keras.layers.Input(shape=([1, 1, 2, 2]))
in0Dot72538 = tf.keras.layers.Input(shape=([3]))
in1Dot72538 = tf.keras.layers.Input(shape=([3]))
in0Con51541 = tf.keras.layers.Input(shape=([3]))
in0Min6621 = tf.keras.layers.Input(shape=([2, 1, 1]))
in1Min6621 = tf.keras.layers.Input(shape=([2, 1, 1]))

PRe69517 = keras.layers.PReLU(name = 'PRe69517', input_shape=(1, 1, 2, 2))(in0PRe69517)
Res7490 = keras.layers.Reshape((1, 1, 4), name = 'Res7490', )(PRe69517)
Res40305 = keras.layers.Reshape((1, 4), name = 'Res40305', )(Res7490)
Fla60189 = keras.layers.Flatten(name = 'Fla60189', )(Res40305)
Dot72538 = keras.layers.Dot(axes=(1, 1), name = 'Dot72538', )([in0Dot72538,in1Dot72538])
Con51541 = keras.layers.Concatenate(axis=1, name = 'Con51541', )([Dot72538,in0Con51541])
Min7223 = keras.layers.Minimum(name = 'Min7223', )([Fla60189,Con51541])
Res79205 = keras.layers.Reshape((4, 1), name = 'Res79205', )(Min7223)
Res84141 = keras.layers.Reshape((4, 1, 1), name = 'Res84141', )(Res79205)
Min6621 = keras.layers.Minimum(name = 'Min6621', )([in0Min6621,in1Min6621])
Lea94193 = keras.layers.LeakyReLU(alpha=0.15969568181557156, name = 'Lea94193', )(Min6621)
Zer97925 = keras.layers.ZeroPadding2D(padding=((2, 0), (0, 0)), name = 'Zer97925', )(Lea94193)
Mul62194 = keras.layers.Multiply(name = 'Mul62194', )([Res84141,Zer97925])
model = tf.keras.models.Model(inputs=[in0PRe69517,in0Dot72538,in1Dot72538,in0Con51541,in0Min6621,in1Min6621], outputs=Mul62194)
w = model.get_layer('PRe69517').get_weights() 
w[0] = np.array([[[[0.4895, 0.0187], [0.698, 0.8975]]]])
model.get_layer('PRe69517').set_weights(w) 
in0PRe69517 = tf.constant([[[[[0.812, 0.8806], [0.0689, 0.2112]]]]])
in0Dot72538 = tf.constant([[0.0593, 0.0026, 0.0973]])
in1Dot72538 = tf.constant([[0.1929, 0.1769, 0.0905]])
in0Con51541 = tf.constant([[0.4416, 0.5406, 0.3289]])
in0Min6621 = tf.constant([[[[0.2626]], [[0.2102]]]])
in1Min6621 = tf.constant([[[[0.5533]], [[0.8857]]]])
print (np.array2string(model.predict([in0PRe69517,in0Dot72538,in1Dot72538,in0Con51541,in0Min6621,in1Min6621],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Mul62194.png')

LPRe69517 = prelu_layer([[[[[0.812, 0.8806], [0.0689, 0.2112]]]]], [[[[0.4895, 0.0187], [0.698, 0.8975]]]], PRe69517), 
LRes7490 = reshape_layer(PRe69517, [1, 1, 4], Res7490), 
LRes40305 = reshape_layer(Res7490, [1, 4], Res40305), 
LFla60189 = flatten_layer(Res40305, Fla60189), 
LDot72538 = dot_layer([[0.0593, 0.0026, 0.0973]], [[0.1929, 0.1769, 0.0905]], 1, 1, Dot72538), 
LCon51541 = concatenate_layer([Dot72538,[[0.4416, 0.5406, 0.3289]]], 1, Con51541), 
LMin7223 = minimum_layer([Fla60189,Con51541], Min7223), 
LRes79205 = reshape_layer(Min7223, [4, 1], Res79205), 
LRes84141 = reshape_layer(Res79205, [4, 1, 1], Res84141), 
LMin6621 = minimum_layer([[[[[0.2626]], [[0.2102]]]], [[[[0.5533]], [[0.8857]]]]], Min6621), 
LLea94193 = leaky_relu_layer(Min6621, 0.15969568181557156, Lea94193), 
LZer97925 = zero_padding2D_layer(Lea94193, 2, 0, 0, 0, Zer97925), 
LMul62194 = multiply_layer([Res84141,Zer97925], Mul62194), 
exec_layers([LPRe69517,LRes7490,LRes40305,LFla60189,LDot72538,LCon51541,LMin7223,LRes79205,LRes84141,LMin6621,LLea94193,LZer97925,LMul62194],["PRe69517","Res7490","Res40305","Fla60189","Dot72538","Con51541","Min7223","Res79205","Res84141","Min6621","Lea94193","Zer97925","Mul62194"],Mul62194,"Mul62194")

Actual (Unparsed): [[[[0.0000000]], [[0.0000000]], [[0.0180931]], [[0.0443942]]]]

Expected (Unparsed): [[[[0.0]],[[0.0]],[[0.01809314]],[[0.04439424]]]]

Actual:   [[[[0]], [[0]], [[0.0181]], [[0.0444]]]]

Expected: [[[[0]], [[0]], [[0.0181]], [[0.0444]]]]