import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Sub44787 = tf.keras.layers.Input(shape=([2, 2]))
in1Sub44787 = tf.keras.layers.Input(shape=([2, 2]))

Sub44787 = keras.layers.Subtract(name = 'Sub44787', )([in0Sub44787,in1Sub44787])
LST1691 = keras.layers.LSTM(3,recurrent_activation='sigmoid', name = 'LST1691', )(Sub44787)
model = tf.keras.models.Model(inputs=[in0Sub44787,in1Sub44787], outputs=LST1691)
w = model.get_layer('LST1691').get_weights() 
w[0] = np.array([[6, 3, 9, 9, 1, 4, 1, 9, 1, 9, 5, 2], [3, 3, 1, 2, 3, 9, 4, 5, 5, 8, 1, 8]])
w[1] = np.array([[7, 2, 8, 5, 5, 4, 5, 5, 4, 10, 6, 1], [5, 10, 3, 1, 7, 3, 10, 3, 9, 8, 8, 2], [8, 2, 7, 5, 5, 2, 1, 5, 10, 9, 1, 2]])
w[2] = np.array([10, 8, 10, 8, 7, 5, 1, 2, 1, 4, 2, 5])
model.get_layer('LST1691').set_weights(w) 
in0Sub44787 = tf.constant([[[0.8908, 0.981], [0.132, 0.2052]]])
in1Sub44787 = tf.constant([[[0.9093, 0.699], [0.5209, 0.919]]])
print (np.array2string(model.predict([in0Sub44787,in1Sub44787],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='LST1691.png')

LSub44787 = subtract_layer([[[0.8908, 0.981], [0.132, 0.2052]]], [[[0.9093, 0.699], [0.5209, 0.919]]], Sub44787), 
LLST1691 = lstm_layer(Sub44787,[[6, 3, 9, 9, 1, 4, 1, 9, 1, 9, 5, 2], [3, 3, 1, 2, 3, 9, 4, 5, 5, 8, 1, 8]],[[7, 2, 8, 5, 5, 4, 5, 5, 4, 10, 6, 1], [5, 10, 3, 1, 7, 3, 10, 3, 9, 8, 8, 2], [8, 2, 7, 5, 5, 2, 1, 5, 10, 9, 1, 2]],[10, 8, 10, 8, 7, 5, 1, 2, 1, 4, 2, 5], LST1691), 
exec_layers([LSub44787,LLST1691],["Sub44787","LST1691"],LST1691,"LST1691")

Actual (Unparsed): [[0.9619174, 0.9637417, 0.8591762]]

Expected (Unparsed): [[0.961917396813865,0.9637416743771563,0.8591762336914875]]

Actual:   [[0.962, 0.9638, 0.8592]]

Expected: [[0.962, 0.9638, 0.8592]]