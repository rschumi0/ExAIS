import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Sub44794 = tf.keras.layers.Input(shape=([3, 3, 3]))
in1Sub44794 = tf.keras.layers.Input(shape=([3, 3, 3]))
in0Dot18058 = tf.keras.layers.Input(shape=([2, 3]))
in1Dot18058 = tf.keras.layers.Input(shape=([2, 3]))
in0Con16856 = tf.keras.layers.Input(shape=([3, 6]))

Sub44794 = keras.layers.Subtract(name = 'Sub44794', )([in0Sub44794,in1Sub44794])
Res57454 = keras.layers.Reshape((3, 9), name = 'Res57454', )(Sub44794)
Dot18058 = keras.layers.Dot(axes=(1, 1), name = 'Dot18058', )([in0Dot18058,in1Dot18058])
Con16856 = keras.layers.Concatenate(axis=2, name = 'Con16856', )([Dot18058,in0Con16856])
Ave68864 = keras.layers.Average(name = 'Ave68864', )([Res57454,Con16856])
model = tf.keras.models.Model(inputs=[in0Sub44794,in1Sub44794,in0Dot18058,in1Dot18058,in0Con16856], outputs=Ave68864)
in0Sub44794 = tf.constant([[[[0.6173, 0.7919, 0.0504], [0.6115, 0.5619, 0.5511], [0.4094, 0.257, 0.9727]], [[0.5937, 0.2304, 0.643], [0.82, 0.721, 0.0726], [0.7907, 0.7648, 0.8442]], [[0.0354, 0.2603, 0.2806], [0.1939, 0.5993, 0.6534], [0.975, 0.8464, 0.2471]]]])
in1Sub44794 = tf.constant([[[[0.4704, 0.6472, 0.0697], [0.3274, 0.1307, 0.6309], [0.8218, 0.5856, 0.8689]], [[0.1421, 0.9782, 0.4141], [0.0442, 0.6734, 0.5063], [0.1454, 0.1167, 0.9617]], [[0.8583, 0.6541, 0.1801], [0.6912, 0.3133, 0.1167], [0.4732, 0.8885, 0.8604]]]])
in0Dot18058 = tf.constant([[[0.0316, 0.736, 0.9168], [0.4887, 0.5008, 0.624]]])
in1Dot18058 = tf.constant([[[0.0821, 0.4237, 0.3371], [0.6509, 0.1285, 0.9348]]])
in0Con16856 = tf.constant([[[0.8973, 0.6956, 0.2222, 0.5622, 0.4507, 0.6066], [0.9545, 0.4323, 0.9056, 0.3944, 0.1062, 0.6095], [0.133, 0.3794, 0.5027, 0.3122, 0.685, 0.2766]]])
print (np.array2string(model.predict([in0Sub44794,in1Sub44794,in0Dot18058,in1Dot18058,in0Con16856],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Ave68864.png')

LSub44794 = subtract_layer([[[[0.6173, 0.7919, 0.0504], [0.6115, 0.5619, 0.5511], [0.4094, 0.257, 0.9727]], [[0.5937, 0.2304, 0.643], [0.82, 0.721, 0.0726], [0.7907, 0.7648, 0.8442]], [[0.0354, 0.2603, 0.2806], [0.1939, 0.5993, 0.6534], [0.975, 0.8464, 0.2471]]]], [[[[0.4704, 0.6472, 0.0697], [0.3274, 0.1307, 0.6309], [0.8218, 0.5856, 0.8689]], [[0.1421, 0.9782, 0.4141], [0.0442, 0.6734, 0.5063], [0.1454, 0.1167, 0.9617]], [[0.8583, 0.6541, 0.1801], [0.6912, 0.3133, 0.1167], [0.4732, 0.8885, 0.8604]]]], Sub44794), 
LRes57454 = reshape_layer(Sub44794, [3, 9], Res57454), 
LDot18058 = dot_layer([[[0.0316, 0.736, 0.9168], [0.4887, 0.5008, 0.624]]], [[[0.0821, 0.4237, 0.3371], [0.6509, 0.1285, 0.9348]]], 1, 1, Dot18058), 
LCon16856 = concatenate_layer([Dot18058,[[[0.8973, 0.6956, 0.2222, 0.5622, 0.4507, 0.6066], [0.9545, 0.4323, 0.9056, 0.3944, 0.1062, 0.6095], [0.133, 0.3794, 0.5027, 0.3122, 0.685, 0.2766]]]], 2, Con16856), 
LAve68864 = average_layer([Res57454,Con16856], Ave68864), 
exec_layers([LSub44794,LRes57454,LDot18058,LCon16856,LAve68864],["Sub44794","Res57454","Dot18058","Con16856","Ave68864"],Ave68864,"Ave68864")

Actual (Unparsed): [[[0.2337946, 0.1104434, 0.2240946, 0.5907000, 0.5634000, 0.0712000, 0.0749000, 0.0610500, 0.3552000], [0.4189982, -0.1858020, 0.4725767, 0.8651500, 0.2399500, 0.2359500, 0.5198500, 0.3771500, 0.2460000], [-0.1707345, 0.0374161, 0.4964343, -0.1821500, 0.3327000, 0.5197000, 0.4070000, 0.3214500, -0.1683500]]]

Expected (Unparsed): [[[0.23379459500000002,0.11044343500000003,0.22409456000000003,0.5907,0.5633999999999999,0.07120000000000001,0.07490000000000002,0.06104999999999999,0.3552],[0.41899816,-0.18580200000000002,0.47257672,0.86515,0.23995,0.23595,0.5198499999999999,0.37715,0.246],[-0.17073455999999998,0.03741607999999996,0.49643423999999997,-0.18215000000000003,0.3327,0.5197,0.40700000000000003,0.32145000000000007,-0.16835000000000003]]]

Actual:   [[[0.2338, 0.1105, 0.2241, 0.5907, 0.5634, 0.0712, 0.0749, 0.0611, 0.3552], [0.419, -0.1858, 0.4726, 0.8652, 0.24, 0.236, 0.5199, 0.3772, 0.246], [-0.1707, 0.0375, 0.4965, -0.1821, 0.3327, 0.5197, 0.407, 0.3215, -0.1683]]]

Expected: [[[0.2338, 0.1105, 0.2241, 0.5907, 0.5634, 0.0713, 0.075, 0.0611, 0.3552], [0.419, -0.1858, 0.4726, 0.8652, 0.24, 0.236, 0.5199, 0.3772, 0.246], [-0.1707, 0.0375, 0.4965, -0.1821, 0.3327, 0.5197, 0.4071, 0.3215, -0.1683]]]