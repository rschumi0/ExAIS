import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Max33707 = tf.keras.layers.Input(shape=([2, 2, 2]))
in1Max33707 = tf.keras.layers.Input(shape=([2, 2, 2]))
in0Con80313 = tf.keras.layers.Input(shape=([3, 3, 3, 1]))
in0Min17080 = tf.keras.layers.Input(shape=([2, 1]))
in1Min17080 = tf.keras.layers.Input(shape=([2, 1]))
in0Con2434 = tf.keras.layers.Input(shape=([3, 3, 3, 1]))
in0Sub79803 = tf.keras.layers.Input(shape=([3, 3]))
in1Sub79803 = tf.keras.layers.Input(shape=([3, 3]))
in0Con98340 = tf.keras.layers.Input(shape=([3, 3, 3, 1]))
in0PRe17069 = tf.keras.layers.Input(shape=([1, 1, 2, 2]))

Max33707 = keras.layers.Maximum(name = 'Max33707', )([in0Max33707,in1Max33707])
Res3133 = keras.layers.Reshape((2, 2, 2, 1), name = 'Res3133', )(Max33707)
Zer55736 = keras.layers.ZeroPadding3D(padding=((1, 0), (1, 0), (1, 0)), name = 'Zer55736', )(Res3133)
Con80313 = keras.layers.Concatenate(axis=4, name = 'Con80313', )([Zer55736,in0Con80313])
Min17080 = keras.layers.Minimum(name = 'Min17080', )([in0Min17080,in1Min17080])
Res2586 = keras.layers.Reshape((2, 1, 1), name = 'Res2586', )(Min17080)
Res60417 = keras.layers.Reshape((2, 1, 1, 1), name = 'Res60417', )(Res2586)
Zer67685 = keras.layers.ZeroPadding3D(padding=((1, 0), (2, 0), (2, 0)), name = 'Zer67685', )(Res60417)
Con2434 = keras.layers.Concatenate(axis=4, name = 'Con2434', )([Zer67685,in0Con2434])
Sub79803 = keras.layers.Subtract(name = 'Sub79803', )([in0Sub79803,in1Sub79803])
Res51345 = keras.layers.Reshape((3, 3, 1), name = 'Res51345', )(Sub79803)
Res74985 = keras.layers.Reshape((3, 3, 1, 1), name = 'Res74985', )(Res51345)
Zer74770 = keras.layers.ZeroPadding3D(padding=((0, 0), (0, 0), (2, 0)), name = 'Zer74770', )(Res74985)
Con98340 = keras.layers.Concatenate(axis=4, name = 'Con98340', )([Zer74770,in0Con98340])
PRe17069 = keras.layers.PReLU(name = 'PRe17069', input_shape=(1, 1, 2, 2))(in0PRe17069)
Zer66826 = keras.layers.ZeroPadding3D(padding=((2, 0), (2, 0), (1, 0)), name = 'Zer66826', )(PRe17069)
Max13353 = keras.layers.Maximum(name = 'Max13353', )([Con98340,Zer66826])
Mul34724 = keras.layers.Multiply(name = 'Mul34724', )([Con2434,Max13353])
Mul89640 = keras.layers.Multiply(name = 'Mul89640', )([Con80313,Mul34724])
model = tf.keras.models.Model(inputs=[in0Max33707,in1Max33707,in0Con80313,in0Min17080,in1Min17080,in0Con2434,in0Sub79803,in1Sub79803,in0Con98340,in0PRe17069], outputs=Mul89640)
w = model.get_layer('PRe17069').get_weights() 
w[0] = np.array([[[[0.3273, 0.8986], [0.5984, 0.2943]]]])
model.get_layer('PRe17069').set_weights(w) 
in0Max33707 = tf.constant([[[[0.9369, 0.9716], [0.5456, 0.0037]], [[0.5789, 0.2445], [0.9207, 0.5014]]]])
in1Max33707 = tf.constant([[[[0.3034, 0.1568], [0.473, 0.6326]], [[0.9274, 0.0452], [0.6435, 0.8223]]]])
in0Con80313 = tf.constant([[[[[0.0182], [0.984], [0.4834]], [[0.0603], [0.1272], [0.4606]], [[0.7304], [0.9511], [0.0744]]], [[[0.3871], [0.8455], [0.8459]], [[0.903], [0.1056], [0.0153]], [[0.7333], [0.5418], [0.8607]]], [[[0.8078], [0.3294], [0.9978]], [[0.8578], [0.585], [0.8097]], [[0.569], [0.8993], [0.9459]]]]])
in0Min17080 = tf.constant([[[0.0594], [0.0677]]])
in1Min17080 = tf.constant([[[0.8807], [0.7966]]])
in0Con2434 = tf.constant([[[[[0.3498], [0.51], [0.6222]], [[0.8702], [0.3451], [0.4299]], [[0.3778], [0.6218], [0.9233]]], [[[0.0388], [0.522], [0.4504]], [[0.7825], [0.8964], [0.0516]], [[0.6126], [0.8434], [0.9152]]], [[[0.0242], [0.7495], [0.141]], [[0.9136], [0.8115], [0.3906]], [[0.1988], [0.3066], [0.4784]]]]])
in0Sub79803 = tf.constant([[[0.203, 0.3948, 0.3304], [0.7268, 0.3378, 0.7256], [0.3871, 0.3739, 0.5224]]])
in1Sub79803 = tf.constant([[[0.1496, 0.8172, 0.9887], [0.4355, 0.9435, 0.2406], [0.1159, 0.7994, 0.3644]]])
in0Con98340 = tf.constant([[[[[0.4847], [0.7543], [0.0415]], [[0.0516], [0.6032], [0.5155]], [[0.102], [0.7674], [0.1119]]], [[[0.3078], [0.6069], [0.2083]], [[0.5333], [0.9956], [0.3276]], [[0.3801], [0.8018], [0.1888]]], [[[0.881], [0.757], [0.6776]], [[0.1142], [0.7437], [0.4726]], [[0.9909], [0.8264], [0.4185]]]]])
in0PRe17069 = tf.constant([[[[[0.9871, 0.2536], [0.3152, 0.8809]]]]])
print (np.array2string(model.predict([in0Max33707,in1Max33707,in0Con80313,in0Min17080,in1Min17080,in0Con2434,in0Sub79803,in1Sub79803,in0Con98340,in0PRe17069],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Mul89640.png')

LMax33707 = maximum_layer([[[[[0.9369, 0.9716], [0.5456, 0.0037]], [[0.5789, 0.2445], [0.9207, 0.5014]]]], [[[[0.3034, 0.1568], [0.473, 0.6326]], [[0.9274, 0.0452], [0.6435, 0.8223]]]]], Max33707), 
LRes3133 = reshape_layer(Max33707, [2, 2, 2, 1], Res3133), 
LZer55736 = zero_padding3D_layer(Res3133, 1, 0, 1, 0, 1, 0, Zer55736), 
LCon80313 = concatenate_layer([Zer55736,[[[[[0.0182], [0.984], [0.4834]], [[0.0603], [0.1272], [0.4606]], [[0.7304], [0.9511], [0.0744]]], [[[0.3871], [0.8455], [0.8459]], [[0.903], [0.1056], [0.0153]], [[0.7333], [0.5418], [0.8607]]], [[[0.8078], [0.3294], [0.9978]], [[0.8578], [0.585], [0.8097]], [[0.569], [0.8993], [0.9459]]]]]], 4, Con80313), 
LMin17080 = minimum_layer([[[[0.0594], [0.0677]]], [[[0.8807], [0.7966]]]], Min17080), 
LRes2586 = reshape_layer(Min17080, [2, 1, 1], Res2586), 
LRes60417 = reshape_layer(Res2586, [2, 1, 1, 1], Res60417), 
LZer67685 = zero_padding3D_layer(Res60417, 1, 0, 2, 0, 2, 0, Zer67685), 
LCon2434 = concatenate_layer([Zer67685,[[[[[0.3498], [0.51], [0.6222]], [[0.8702], [0.3451], [0.4299]], [[0.3778], [0.6218], [0.9233]]], [[[0.0388], [0.522], [0.4504]], [[0.7825], [0.8964], [0.0516]], [[0.6126], [0.8434], [0.9152]]], [[[0.0242], [0.7495], [0.141]], [[0.9136], [0.8115], [0.3906]], [[0.1988], [0.3066], [0.4784]]]]]], 4, Con2434), 
LSub79803 = subtract_layer([[[0.203, 0.3948, 0.3304], [0.7268, 0.3378, 0.7256], [0.3871, 0.3739, 0.5224]]], [[[0.1496, 0.8172, 0.9887], [0.4355, 0.9435, 0.2406], [0.1159, 0.7994, 0.3644]]], Sub79803), 
LRes51345 = reshape_layer(Sub79803, [3, 3, 1], Res51345), 
LRes74985 = reshape_layer(Res51345, [3, 3, 1, 1], Res74985), 
LZer74770 = zero_padding3D_layer(Res74985, 0, 0, 0, 0, 2, 0, Zer74770), 
LCon98340 = concatenate_layer([Zer74770,[[[[[0.4847], [0.7543], [0.0415]], [[0.0516], [0.6032], [0.5155]], [[0.102], [0.7674], [0.1119]]], [[[0.3078], [0.6069], [0.2083]], [[0.5333], [0.9956], [0.3276]], [[0.3801], [0.8018], [0.1888]]], [[[0.881], [0.757], [0.6776]], [[0.1142], [0.7437], [0.4726]], [[0.9909], [0.8264], [0.4185]]]]]], 4, Con98340), 
LPRe17069 = prelu_layer([[[[[0.9871, 0.2536], [0.3152, 0.8809]]]]], [[[[0.3273, 0.8986], [0.5984, 0.2943]]]], PRe17069), 
LZer66826 = zero_padding3D_layer(PRe17069, 2, 0, 2, 0, 1, 0, Zer66826), 
LMax13353 = maximum_layer([Con98340,Zer66826], Max13353), 
LMul34724 = multiply_layer([Con2434,Max13353], Mul34724), 
LMul89640 = multiply_layer([Con80313,Mul34724], Mul89640), 
exec_layers([LMax33707,LRes3133,LZer55736,LCon80313,LMin17080,LRes2586,LRes60417,LZer67685,LCon2434,LSub79803,LRes51345,LRes74985,LZer74770,LCon98340,LPRe17069,LZer66826,LMax13353,LMul34724,LMul89640],["Max33707","Res3133","Zer55736","Con80313","Min17080","Res2586","Res60417","Zer67685","Con2434","Sub79803","Res51345","Res74985","Zer74770","Con98340","PRe17069","Zer66826","Max13353","Mul34724","Mul89640"],Mul89640,"Mul89640")

Actual (Unparsed): [[[[[0.0000000, 0.0030858], [0.0000000, 0.3785379], [0.0000000, 0.0124820]], [[0.0000000, 0.0027076], [0.0000000, 0.0264785], [0.0000000, 0.1020752]], [[0.0000000, 0.0281464], [0.0000000, 0.4538358], [0.0000000, 0.0076868]]], [[[0.0000000, 0.0046230], [0.0000000, 0.2678559], [0.0000000, 0.0793609]], [[0.0000000, 0.3768284], [0.0000000, 0.0942433], [0.0000000, 0.0002586]], [[0.0000000, 0.1707484], [0.0000000, 0.3663858], [0.0182246, 0.1487202]]], [[[0.0000000, 0.0172225], [0.0000000, 0.1868922], [0.0000000, 0.0953314]], [[0.0000000, 0.0894970], [0.0000000, 0.3530548], [0.0000000, 0.1494686]], [[0.0000000, 0.1120878], [0.0000000, 0.2278594], [0.0175471, 0.3986236]]]]]

Expected (Unparsed): [[[[[0,0.003085774692],[0,0.378537912],[0.0,0.01248201642]],[[0,0.0027076098959999996],[0,0.026478501504],[0,0.10207515506999999]],[[0,0.028146402240000003],[0,0.45383574025199996],[0,0.007686804887999999]]],[[[0,0.004622995944],[0,0.2678559219],[0.0,0.07936091688800001]],[[0,0.37682844675],[0.0,0.094243336704],[0.0,0.000258633648]],[[0,0.17074836235799998],[0.0,0.36638581341599996],[0.018224573400000003,0.148720146432]]],[[[0,0.01722245756],[0,0.18689217210000003],[0.0,0.09533140847999999]],[[0,0.08949695033599998],[0.0,0.35305484175],[0.0,0.14946864433200002]],[[0,0.11208783348],[0.0,0.22785945403199998],[0.017547092591999998,0.398623599504]]]]]

Actual:   [[[[[0, 0.0031], [0, 0.3786], [0, 0.0125]], [[0, 0.0028], [0, 0.0265], [0, 0.1021]], [[0, 0.0282], [0, 0.4539], [0, 0.0077]]], [[[0, 0.0047], [0, 0.2679], [0, 0.0794]], [[0, 0.3769], [0, 0.0943], [0, 0.0003]], [[0, 0.1708], [0, 0.3664], [0.0183, 0.1488]]], [[[0, 0.0173], [0, 0.1869], [0, 0.0954]], [[0, 0.0895], [0, 0.3531], [0, 0.1495]], [[0, 0.1121], [0, 0.2279], [0.0176, 0.3987]]]]]

Expected: [[[[[0, 0.0031], [0, 0.3786], [0, 0.0125]], [[0, 0.0028], [0, 0.0265], [0, 0.1021]], [[0, 0.0282], [0, 0.4539], [0, 0.0077]]], [[[0, 0.0047], [0, 0.2679], [0, 0.0794]], [[0, 0.3769], [0, 0.0943], [0, 0.0003]], [[0, 0.1708], [0, 0.3664], [0.0183, 0.1488]]], [[[0, 0.0173], [0, 0.1869], [0, 0.0954]], [[0, 0.0895], [0, 0.3531], [0, 0.1495]], [[0, 0.1121], [0, 0.2279], [0.0176, 0.3987]]]]]