import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Min88705 = tf.keras.layers.Input(shape=([1, 1, 2]))
in1Min88705 = tf.keras.layers.Input(shape=([1, 1, 2]))
in0Bat69314 = tf.keras.layers.Input(shape=([2, 1]))
in0Con52079 = tf.keras.layers.Input(shape=([2, 3]))
in0Sub23321 = tf.keras.layers.Input(shape=([3, 3]))
in1Sub23321 = tf.keras.layers.Input(shape=([3, 3]))

Min88705 = keras.layers.Minimum(name = 'Min88705', )([in0Min88705,in1Min88705])
Res53548 = keras.layers.Reshape((1, 2), name = 'Res53548', )(Min88705)
Con73536 = keras.layers.Conv1D(4, (1),strides=(1), padding='valid', dilation_rate=(1), name = 'Con73536', )(Res53548)
Zer82431 = keras.layers.ZeroPadding1D(padding=((1, 0)), name = 'Zer82431', )(Con73536)
Bat69314 = keras.layers.BatchNormalization(axis=1, epsilon=0.4394940855968752,  name = 'Bat69314', )(in0Bat69314)
Con52079 = keras.layers.Concatenate(axis=2, name = 'Con52079', )([Bat69314,in0Con52079])
Min87694 = keras.layers.Minimum(name = 'Min87694', )([Zer82431,Con52079])
Sub23321 = keras.layers.Subtract(name = 'Sub23321', )([in0Sub23321,in1Sub23321])
Res23368 = keras.layers.Reshape((3, 3, 1), name = 'Res23368', )(Sub23321)
Glo14285 = keras.layers.GlobalMaxPool2D(name = 'Glo14285', )(Res23368)
Res43130 = keras.layers.Reshape((1, 1), name = 'Res43130', )(Glo14285)
Sep85719 = keras.layers.SeparableConv1D(4, (1),strides=(1), padding='valid', name = 'Sep85719', )(Res43130)
Zer26177 = keras.layers.ZeroPadding1D(padding=((1, 0)), name = 'Zer26177', )(Sep85719)
Ave83123 = keras.layers.Average(name = 'Ave83123', )([Min87694,Zer26177])
Res16861 = keras.layers.Reshape((2, 4, 1), name = 'Res16861', )(Ave83123)
Con26568 = keras.layers.Conv2D(3, (2, 4),strides=(1, 1), padding='same', dilation_rate=(1, 1), name = 'Con26568', )(Res16861)
model = tf.keras.models.Model(inputs=[in0Min88705,in1Min88705,in0Bat69314,in0Con52079,in0Sub23321,in1Sub23321], outputs=Con26568)
w = model.get_layer('Con73536').get_weights() 
w[0] = np.array([[[0.7556, 0.1069, 0.0109, 0.5464], [0.6462, 0.1026, 0.3147, 0.1767]]])
w[1] = np.array([0, 0, 0, 0])
model.get_layer('Con73536').set_weights(w) 
w = model.get_layer('Bat69314').get_weights() 
w[0] = np.array([0.0647, 0.1744])
w[1] = np.array([0.8007, 0.8714])
w[2] = np.array([0.548, 0.0884])
w[3] = np.array([0.2837, 0.4998])
model.get_layer('Bat69314').set_weights(w) 
w = model.get_layer('Sep85719').get_weights() 
w[0] = np.array([[[0.1874]]])
w[1] = np.array([[[0.4189, 0.3017, 0.3442, 0.1145]]])
w[2] = np.array([0, 0, 0, 0])
model.get_layer('Sep85719').set_weights(w) 
w = model.get_layer('Con26568').get_weights() 
w[0] = np.array([[[[0.5154, 0.9697, 0.9163]], [[0.0299, 0.0031, 0.2173]], [[0.8408, 0.8555, 0.2802]], [[0.337, 0.5557, 0.1832]]], [[[0.395, 0.6149, 0.1135]], [[0.7857, 0.1874, 0.4819]], [[0.0283, 0.2475, 0.5187]], [[0.1942, 0.7155, 0.4412]]]])
w[1] = np.array([0, 0, 0])
model.get_layer('Con26568').set_weights(w) 
in0Min88705 = tf.constant([[[[0.014, 0.1776]]]])
in1Min88705 = tf.constant([[[[0.1594, 0.8523]]]])
in0Bat69314 = tf.constant([[[1.2319], [1.4638]]])
in0Con52079 = tf.constant([[[0.7961, 0.1687, 0.97], [0.9538, 0.7474, 0.1172]]])
in0Sub23321 = tf.constant([[[0.226, 0.4768, 0.2287], [0.9386, 0.3885, 0.9824], [0.7394, 0.9405, 0.7909]]])
in1Sub23321 = tf.constant([[[0.7748, 0.4151, 0.652], [0.7059, 0.2815, 0.6055], [0.8865, 0.5946, 0.2113]]])
print (np.array2string(model.predict([in0Min88705,in1Min88705,in0Bat69314,in0Con52079,in0Sub23321,in1Sub23321],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Con26568.png')

LMin88705 = minimum_layer([[[[[0.014, 0.1776]]]], [[[[0.1594, 0.8523]]]]], Min88705), 
LRes53548 = reshape_layer(Min88705, [1, 2], Res53548), 
LCon73536 = conv1D_layer(Res53548, 1,[[[0.7556, 0.1069, 0.0109, 0.5464], [0.6462, 0.1026, 0.3147, 0.1767]]],[0, 0, 0, 0], 1, false, 1, Con73536), 
LZer82431 = zero_padding1D_layer(Con73536, 1, 0, Zer82431), 
LBat69314 = batch_normalization_layer([[[1.2319], [1.4638]]], 1, 0.4394940855968752, [0.0647, 0.1744], [0.8007, 0.8714], [0.548, 0.0884], [0.2837, 0.4998], Bat69314), 
LCon52079 = concatenate_layer([Bat69314,[[[0.7961, 0.1687, 0.97], [0.9538, 0.7474, 0.1172]]]], 2, Con52079), 
LMin87694 = minimum_layer([Zer82431,Con52079], Min87694), 
LSub23321 = subtract_layer([[[0.226, 0.4768, 0.2287], [0.9386, 0.3885, 0.9824], [0.7394, 0.9405, 0.7909]]], [[[0.7748, 0.4151, 0.652], [0.7059, 0.2815, 0.6055], [0.8865, 0.5946, 0.2113]]], Sub23321), 
LRes23368 = reshape_layer(Sub23321, [3, 3, 1], Res23368), 
LGlo14285 = global_max_pool2D_layer(Res23368, Glo14285), 
LRes43130 = reshape_layer(Glo14285, [1, 1], Res43130), 
LSep85719 = separable_conv1D_layer(Res43130, 1,[[[[0.1874]]],[[[0.4189, 0.3017, 0.3442, 0.1145]]]],[0, 0, 0, 0], 1, false, Sep85719), 
LZer26177 = zero_padding1D_layer(Sep85719, 1, 0, Zer26177), 
LAve83123 = average_layer([Min87694,Zer26177], Ave83123), 
LRes16861 = reshape_layer(Ave83123, [2, 4, 1], Res16861), 
LCon26568 = conv2D_layer(Res16861, 2, 4,[[[[0.5154, 0.9697, 0.9163]], [[0.0299, 0.0031, 0.2173]], [[0.8408, 0.8555, 0.2802]], [[0.337, 0.5557, 0.1832]]], [[[0.395, 0.6149, 0.1135]], [[0.7857, 0.1874, 0.4819]], [[0.0283, 0.2475, 0.5187]], [[0.1942, 0.7155, 0.4412]]]],[0, 0, 0], 1, 1, true, 1, 1, Con26568), 
exec_layers([LMin88705,LRes53548,LCon73536,LZer82431,LBat69314,LCon52079,LMin87694,LSub23321,LRes23368,LGlo14285,LRes43130,LSep85719,LZer26177,LAve83123,LRes16861,LCon26568],["Min88705","Res53548","Con73536","Zer82431","Bat69314","Con52079","Min87694","Sub23321","Res23368","Glo14285","Res43130","Sep85719","Zer26177","Ave83123","Res16861","Con26568"],Con26568,"Con26568")

Actual (Unparsed): [[[[0.0769304, 0.0559277, 0.0753880], [0.0606811, 0.0874185, 0.0579271], [0.0477984, 0.0312610, 0.0388388], [0.0386716, 0.0335474, 0.0177034]], [[0.0403629, 0.0486759, 0.0344738], [0.0927611, 0.1371795, 0.1017786], [0.0365602, 0.0476092, 0.0414092], [0.0248462, 0.0453790, 0.0483967]]]]

Expected (Unparsed): [[[[0.07693044279980961,0.0559277465514892,0.07538796746470482],[0.060681074018334,0.08741849289542881,0.057927133072486404],[0.047798381047210806,0.0312609848570032,0.0388387621147616],[0.03867155877945801,0.033547407504097605,0.01770336889001]],[[0.04036294978669241,0.048675933141977615,0.03447382356979001],[0.09276105626711,0.13717949778514202,0.1017785756574944],[0.036560176007747205,0.04760919105381521,0.0414092173963004],[0.0248461810994396,0.04537897427587881,0.048396652950561204]]]]

Actual:   [[[[0.077, 0.056, 0.0754], [0.0607, 0.0875, 0.058], [0.0478, 0.0313, 0.0389], [0.0387, 0.0336, 0.0178]], [[0.0404, 0.0487, 0.0345], [0.0928, 0.1372, 0.1018], [0.0366, 0.0477, 0.0415], [0.0249, 0.0454, 0.0484]]]]

Expected: [[[[0.077, 0.056, 0.0754], [0.0607, 0.0875, 0.058], [0.0478, 0.0313, 0.0389], [0.0387, 0.0336, 0.0178]], [[0.0404, 0.0487, 0.0345], [0.0928, 0.1372, 0.1018], [0.0366, 0.0477, 0.0415], [0.0249, 0.0454, 0.0484]]]]