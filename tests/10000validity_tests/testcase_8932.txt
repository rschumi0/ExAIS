import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Dot63068 = tf.keras.layers.Input(shape=([2, 2]))
in1Dot63068 = tf.keras.layers.Input(shape=([2, 2]))

Dot63068 = keras.layers.Dot(axes=(2, 2), name = 'Dot63068', )([in0Dot63068,in1Dot63068])
Res92448 = keras.layers.Reshape((2, 2, 1), name = 'Res92448', )(Dot63068)
Up_6751 = keras.layers.UpSampling2D(size=(1, 1), name = 'Up_6751', )(Res92448)
model = tf.keras.models.Model(inputs=[in0Dot63068,in1Dot63068], outputs=Up_6751)
in0Dot63068 = tf.constant([[[0.8133, 0.225], [0.0468, 0.7719]]])
in1Dot63068 = tf.constant([[[0.1964, 0.5975], [0.3696, 0.9994]]])
print (np.array2string(model.predict([in0Dot63068,in1Dot63068],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Up_6751.png')

LDot63068 = dot_layer([[[0.8133, 0.225], [0.0468, 0.7719]]], [[[0.1964, 0.5975], [0.3696, 0.9994]]], 2, 2, Dot63068), 
LRes92448 = reshape_layer(Dot63068, [2, 2, 1], Res92448), 
LUp_6751 = up_sampling2D_layer(Res92448, 1, 1, Up_6751), 
exec_layers([LDot63068,LRes92448,LUp_6751],["Dot63068","Res92448","Up_6751"],Up_6751,"Up_6751")

Actual (Unparsed): [[[[0.2941696], [0.5254607]], [[0.4704018], [0.7887342]]]]

Expected (Unparsed): [[[[0.29416962],[0.5254606799999999]],[[0.47040177000000005],[0.78873414]]]]

Actual:   [[[[0.2942], [0.5255]], [[0.4705], [0.7888]]]]

Expected: [[[[0.2942], [0.5255]], [[0.4705], [0.7888]]]]