import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Thr17724 = tf.keras.layers.Input(shape=([2, 2, 1, 1]))
in0LST13166 = tf.keras.layers.Input(shape=([2, 3]))
in0Con9514 = tf.keras.layers.Input(shape=([1]))

Thr17724 = keras.layers.ThresholdedReLU(theta=3.912971873828971, name = 'Thr17724', input_shape=(2, 2, 1, 1))(in0Thr17724)
Res92990 = keras.layers.Reshape((2, 2, 1), name = 'Res92990', )(Thr17724)
Res86191 = keras.layers.Reshape((2, 2), name = 'Res86191', )(Res92990)
Fla63524 = keras.layers.Flatten(name = 'Fla63524', )(Res86191)
LST13166 = keras.layers.LSTM(3,recurrent_activation='sigmoid', name = 'LST13166', )(in0LST13166)
Con9514 = keras.layers.Concatenate(axis=1, name = 'Con9514', )([LST13166,in0Con9514])
Min93059 = keras.layers.Minimum(name = 'Min93059', )([Fla63524,Con9514])
Res71876 = keras.layers.Reshape((4, 1), name = 'Res71876', )(Min93059)
LST60272 = keras.layers.LSTM(3,recurrent_activation='sigmoid', name = 'LST60272', )(Res71876)
model = tf.keras.models.Model(inputs=[in0Thr17724,in0LST13166,in0Con9514], outputs=LST60272)
w = model.get_layer('LST13166').get_weights() 
w[0] = np.array([[2, 1, 7, 10, 5, 3, 4, 1, 6, 4, 7, 10], [8, 3, 5, 8, 2, 8, 10, 6, 8, 7, 4, 6], [2, 7, 7, 9, 10, 7, 1, 8, 6, 9, 4, 8]])
w[1] = np.array([[2, 9, 7, 3, 8, 6, 6, 4, 3, 1, 6, 2], [1, 7, 4, 5, 3, 2, 6, 2, 7, 1, 10, 5], [6, 6, 4, 1, 4, 9, 10, 8, 2, 10, 8, 4]])
w[2] = np.array([6, 1, 3, 5, 4, 1, 1, 6, 2, 5, 5, 4])
model.get_layer('LST13166').set_weights(w) 
w = model.get_layer('LST60272').get_weights() 
w[0] = np.array([[2, 1, 10, 10, 9, 10, 2, 1, 10, 7, 1, 7]])
w[1] = np.array([[5, 4, 7, 6, 8, 3, 5, 10, 8, 2, 4, 1], [10, 10, 7, 5, 7, 6, 4, 4, 7, 8, 2, 3], [3, 7, 4, 3, 6, 8, 2, 4, 9, 8, 5, 8]])
w[2] = np.array([9, 1, 5, 2, 5, 6, 1, 2, 4, 7, 6, 2])
model.get_layer('LST60272').set_weights(w) 
in0Thr17724 = tf.constant([[[[[0.7443]], [[0.0328]]], [[[0.4477]], [[0.6311]]]]])
in0LST13166 = tf.constant([[[9, 9, 7], [10, 8, 6]]])
in0Con9514 = tf.constant([[0.1629]])
print (np.array2string(model.predict([in0Thr17724,in0LST13166,in0Con9514],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='LST60272.png')

LThr17724 = thresholded_relu_layer([[[[[0.7443]], [[0.0328]]], [[[0.4477]], [[0.6311]]]]], 3.912971873828971, Thr17724), 
LRes92990 = reshape_layer(Thr17724, [2, 2, 1], Res92990), 
LRes86191 = reshape_layer(Res92990, [2, 2], Res86191), 
LFla63524 = flatten_layer(Res86191, Fla63524), 
LLST13166 = lstm_layer([[[9, 9, 7], [10, 8, 6]]],[[2, 1, 7, 10, 5, 3, 4, 1, 6, 4, 7, 10], [8, 3, 5, 8, 2, 8, 10, 6, 8, 7, 4, 6], [2, 7, 7, 9, 10, 7, 1, 8, 6, 9, 4, 8]],[[2, 9, 7, 3, 8, 6, 6, 4, 3, 1, 6, 2], [1, 7, 4, 5, 3, 2, 6, 2, 7, 1, 10, 5], [6, 6, 4, 1, 4, 9, 10, 8, 2, 10, 8, 4]],[6, 1, 3, 5, 4, 1, 1, 6, 2, 5, 5, 4], LST13166), 
LCon9514 = concatenate_layer([LST13166,[[0.1629]]], 1, Con9514), 
LMin93059 = minimum_layer([Fla63524,Con9514], Min93059), 
LRes71876 = reshape_layer(Min93059, [4, 1], Res71876), 
LLST60272 = lstm_layer(Res71876,[[2, 1, 10, 10, 9, 10, 2, 1, 10, 7, 1, 7]],[[5, 4, 7, 6, 8, 3, 5, 10, 8, 2, 4, 1], [10, 10, 7, 5, 7, 6, 4, 4, 7, 8, 2, 3], [3, 7, 4, 3, 6, 8, 2, 4, 9, 8, 5, 8]],[9, 1, 5, 2, 5, 6, 1, 2, 4, 7, 6, 2], LST60272), 
exec_layers([LThr17724,LRes92990,LRes86191,LFla63524,LLST13166,LCon9514,LMin93059,LRes71876,LLST60272],["Thr17724","Res92990","Res86191","Fla63524","LST13166","Con9514","Min93059","Res71876","LST60272"],LST60272,"LST60272")

Actual (Unparsed): [[0.9989195, 0.9987898, 0.9993185]]

Expected (Unparsed): [[0.9989195340331906,0.9987897656927339,0.9993184629698034]]

Actual:   [[0.999, 0.9988, 0.9994]]

Expected: [[0.999, 0.9988, 0.9994]]