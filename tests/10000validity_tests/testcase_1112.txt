import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Ave68647 = tf.keras.layers.Input(shape=([1, 1, 1, 1]))
in1Ave68647 = tf.keras.layers.Input(shape=([1, 1, 1, 1]))
in0Min93575 = tf.keras.layers.Input(shape=([1, 1]))
in1Min93575 = tf.keras.layers.Input(shape=([1, 1]))

Ave68647 = keras.layers.Average(name = 'Ave68647', )([in0Ave68647,in1Ave68647])
Res88317 = keras.layers.Reshape((1, 1, 1), name = 'Res88317', )(Ave68647)
Res34435 = keras.layers.Reshape((1, 1), name = 'Res34435', )(Res88317)
Min93575 = keras.layers.Minimum(name = 'Min93575', )([in0Min93575,in1Min93575])
Mul57122 = keras.layers.Multiply(name = 'Mul57122', )([Res34435,Min93575])
Lea42575 = keras.layers.LeakyReLU(alpha=0.963067881080536, name = 'Lea42575', )(Mul57122)
model = tf.keras.models.Model(inputs=[in0Ave68647,in1Ave68647,in0Min93575,in1Min93575], outputs=Lea42575)
in0Ave68647 = tf.constant([[[[[0.8112]]]]])
in1Ave68647 = tf.constant([[[[[0.5915]]]]])
in0Min93575 = tf.constant([[[0.4329]]])
in1Min93575 = tf.constant([[[0.1122]]])
print (np.array2string(model.predict([in0Ave68647,in1Ave68647,in0Min93575,in1Min93575],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Lea42575.png')

LAve68647 = average_layer([[[[[[0.8112]]]]], [[[[[0.5915]]]]]], Ave68647), 
LRes88317 = reshape_layer(Ave68647, [1, 1, 1], Res88317), 
LRes34435 = reshape_layer(Res88317, [1, 1], Res34435), 
LMin93575 = minimum_layer([[[[0.4329]]], [[[0.1122]]]], Min93575), 
LMul57122 = multiply_layer([Res34435,Min93575], Mul57122), 
LLea42575 = leaky_relu_layer(Mul57122, 0.963067881080536, Lea42575), 
exec_layers([LAve68647,LRes88317,LRes34435,LMin93575,LMul57122,LLea42575],["Ave68647","Res88317","Res34435","Min93575","Mul57122","Lea42575"],Lea42575,"Lea42575")

Actual (Unparsed): [[[0.0786915]]]

Expected (Unparsed): [[[0.07869147]]]

Actual:   [[[0.0787]]]

Expected: [[[0.0787]]]