import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Mul35076 = tf.keras.layers.Input(shape=([1, 1]))
in1Mul35076 = tf.keras.layers.Input(shape=([1, 1]))
in0Con12700 = tf.keras.layers.Input(shape=([6, 1]))
in0Per31813 = tf.keras.layers.Input(shape=([3, 4]))

Mul35076 = keras.layers.Multiply(name = 'Mul35076', )([in0Mul35076,in1Mul35076])
Res80227 = keras.layers.Reshape((1, 1, 1), name = 'Res80227', )(Mul35076)
Up_99968 = keras.layers.UpSampling2D(size=(2, 2), name = 'Up_99968', )(Res80227)
Res95722 = keras.layers.Reshape((2, 2), name = 'Res95722', )(Up_99968)
Zer34889 = keras.layers.ZeroPadding1D(padding=((1, 1)), name = 'Zer34889', )(Res95722)
Sof20045 = keras.layers.Softmax(axis=1, name = 'Sof20045', )(Zer34889)
Zer10974 = keras.layers.ZeroPadding1D(padding=((2, 0)), name = 'Zer10974', )(Sof20045)
Con12700 = keras.layers.Concatenate(axis=2, name = 'Con12700', )([Zer10974,in0Con12700])
Per31813 = keras.layers.Permute((2,1), name = 'Per31813',)(in0Per31813)
Zer68690 = keras.layers.ZeroPadding1D(padding=((1, 1)), name = 'Zer68690', )(Per31813)
Mul93346 = keras.layers.Multiply(name = 'Mul93346', )([Con12700,Zer68690])
Res98754 = keras.layers.Reshape((6, 3, 1), name = 'Res98754', )(Mul93346)
Res75583 = keras.layers.Reshape((6, 3, 1, 1), name = 'Res75583', )(Res98754)
Con81018 = keras.layers.Conv3D(3, (6, 1, 1),strides=(6, 6, 1), padding='valid', dilation_rate=(1, 1, 1), name = 'Con81018', )(Res75583)
model = tf.keras.models.Model(inputs=[in0Mul35076,in1Mul35076,in0Con12700,in0Per31813], outputs=Con81018)
w = model.get_layer('Con81018').get_weights() 
w[0] = np.array([[[[[0.5389, 0.4197, 0.4832]]]], [[[[0.8356, 0.4817, 0.9181]]]], [[[[0.7194, 0.0051, 0.1669]]]], [[[[0.2163, 0.9076, 0.8357]]]], [[[[0.2198, 0.115, 0.0826]]]], [[[[0.8376, 0.916, 0.9005]]]]])
w[1] = np.array([0, 0, 0])
model.get_layer('Con81018').set_weights(w) 
in0Mul35076 = tf.constant([[[0.0597]]])
in1Mul35076 = tf.constant([[[0.8704]]])
in0Con12700 = tf.constant([[[0.1304], [0.8609], [0.1857], [0.4864], [0.705], [0.9173]]])
in0Per31813 = tf.constant([[[1.932, 1.2422, 1.3607, 1.4201], [1.8345, 1.3132, 1.6516, 1.3878], [1.3699, 1.6184, 1.0606, 1.8324]]])
print (np.array2string(model.predict([in0Mul35076,in1Mul35076,in0Con12700,in0Per31813],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Con81018.png')

LMul35076 = multiply_layer([[[[0.0597]]], [[[0.8704]]]], Mul35076), 
LRes80227 = reshape_layer(Mul35076, [1, 1, 1], Res80227), 
LUp_99968 = up_sampling2D_layer(Res80227, 2, 2, Up_99968), 
LRes95722 = reshape_layer(Up_99968, [2, 2], Res95722), 
LZer34889 = zero_padding1D_layer(Res95722, 1, 1, Zer34889), 
LSof20045 = softmax_layer(Zer34889, 1, Sof20045), 
LZer10974 = zero_padding1D_layer(Sof20045, 2, 0, Zer10974), 
LCon12700 = concatenate_layer([Zer10974,[[[0.1304], [0.8609], [0.1857], [0.4864], [0.705], [0.9173]]]], 2, Con12700), 
LPer31813 = permute_layer([[[1.932, 1.2422, 1.3607, 1.4201], [1.8345, 1.3132, 1.6516, 1.3878], [1.3699, 1.6184, 1.0606, 1.8324]]], 2,1, Per31813), 
LZer68690 = zero_padding1D_layer(Per31813, 1, 1, Zer68690), 
LMul93346 = multiply_layer([Con12700,Zer68690], Mul93346), 
LRes98754 = reshape_layer(Mul93346, [6, 3, 1], Res98754), 
LRes75583 = reshape_layer(Res98754, [6, 3, 1, 1], Res75583), 
LCon81018 = conv3D_layer(Res75583, 6, 1, 1,[[[[[0.5389, 0.4197, 0.4832]]]], [[[[0.8356, 0.4817, 0.9181]]]], [[[[0.7194, 0.0051, 0.1669]]]], [[[[0.2163, 0.9076, 0.8357]]]], [[[[0.2198, 0.115, 0.0826]]]], [[[[0.8376, 0.916, 0.9005]]]]],[0, 0, 0], 6, 6, 1, false, 1, 1, 1, Con81018), 
exec_layers([LMul35076,LRes80227,LUp_99968,LRes95722,LZer34889,LSof20045,LZer10974,LCon12700,LPer31813,LZer68690,LMul93346,LRes98754,LRes75583,LCon81018],["Mul35076","Res80227","Up_99968","Res95722","Zer34889","Sof20045","Zer10974","Con12700","Per31813","Zer68690","Mul93346","Res98754","Res75583","Con81018"],Con81018,"Con81018")

Actual (Unparsed): [[[[[0.3731591, 0.3601937, 0.3722400]]]]]

Expected (Unparsed): [[[[[0.37315909124760627,0.3601936769359674,0.37223996036783086]]]]]

Actual:   [[[[[0.3732, 0.3602, 0.3723]]]]]

Expected: [[[[[0.3732, 0.3602, 0.3723]]]]]