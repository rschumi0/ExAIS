import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Add85455 = tf.keras.layers.Input(shape=([2, 1, 1, 2]))
in1Add85455 = tf.keras.layers.Input(shape=([2, 1, 1, 2]))
in0Lea61529 = tf.keras.layers.Input(shape=([2, 2, 2, 1]))
in0Con73123 = tf.keras.layers.Input(shape=([2, 2, 2, 1]))
in0GRU83355 = tf.keras.layers.Input(shape=([3, 3]))
in0Con18133 = tf.keras.layers.Input(shape=([15]))

Add85455 = keras.layers.Add(name = 'Add85455', )([in0Add85455,in1Add85455])
Zer40651 = keras.layers.ZeroPadding3D(padding=((0, 0), (1, 0), (1, 0)), name = 'Zer40651', )(Add85455)
Lea61529 = keras.layers.LeakyReLU(alpha=6.46525028904292, name = 'Lea61529', input_shape=(2, 2, 2, 1))(in0Lea61529)
Con73123 = keras.layers.Concatenate(axis=4, name = 'Con73123', )([Lea61529,in0Con73123])
Min1910 = keras.layers.Minimum(name = 'Min1910', )([Zer40651,Con73123])
Res91925 = keras.layers.Reshape((2, 2, 4), name = 'Res91925', )(Min1910)
Res19241 = keras.layers.Reshape((2, 8), name = 'Res19241', )(Res91925)
Fla8749 = keras.layers.Flatten(name = 'Fla8749', )(Res19241)
GRU83355 = keras.layers.GRU(3,reset_after=False, recurrent_activation='sigmoid', name = 'GRU83355', )(in0GRU83355)
Res37554 = keras.layers.Reshape((3, 1), name = 'Res37554', )(GRU83355)
Res16098 = keras.layers.Reshape((3, 1, 1), name = 'Res16098', )(Res37554)
Res7035 = keras.layers.Reshape((3, 1, 1, 1), name = 'Res7035', )(Res16098)
Glo98231 = keras.layers.GlobalAveragePooling3D(name = 'Glo98231', )(Res7035)
Con18133 = keras.layers.Concatenate(axis=1, name = 'Con18133', )([Glo98231,in0Con18133])
Add15384 = keras.layers.Add(name = 'Add15384', )([Fla8749,Con18133])
model = tf.keras.models.Model(inputs=[in0Add85455,in1Add85455,in0Lea61529,in0Con73123,in0GRU83355,in0Con18133], outputs=Add15384)
w = model.get_layer('GRU83355').get_weights() 
w[0] = np.array([[1, 10, 3, 3, 8, 3, 10, 3, 9], [7, 4, 1, 3, 5, 9, 7, 10, 4], [3, 5, 5, 6, 9, 8, 5, 1, 10]])
w[1] = np.array([[1, 9, 8, 2, 9, 9, 3, 2, 10], [1, 4, 1, 1, 7, 3, 6, 5, 4], [6, 8, 1, 4, 4, 8, 2, 4, 6]])
w[2] = np.array([10, 3, 3, 2, 5, 3, 10, 8, 3])
model.get_layer('GRU83355').set_weights(w) 
in0Add85455 = tf.constant([[[[[0.6231, 0.3139]]], [[[0.5795, 0.4081]]]]])
in1Add85455 = tf.constant([[[[[0.8517, 0.9881]]], [[[0.9503, 0.1575]]]]])
in0Lea61529 = tf.constant([[[[[0.9564], [0.9222]], [[0.3056], [0.9478]]], [[[0.2916], [0.0106]], [[0.8691], [0.3149]]]]])
in0Con73123 = tf.constant([[[[[0.0184], [0.2268]], [[0.2337], [0.5034]]], [[[0.1002], [0.3586]], [[0.3183], [0.0868]]]]])
in0GRU83355 = tf.constant([[[6, 2, 7], [1, 9, 3], [1, 6, 3]]])
in0Con18133 = tf.constant([[0.5457, 0.1285, 0.1032, 0.3997, 0.3952, 0.0741, 0.0112, 0.6319, 0.3732, 0.6557, 0.9522, 0.0651, 0.3565, 0.7494, 0.8627]])
print (np.array2string(model.predict([in0Add85455,in1Add85455,in0Lea61529,in0Con73123,in0GRU83355,in0Con18133],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Add15384.png')

LAdd85455 = add_layer([[[[[[0.6231, 0.3139]]], [[[0.5795, 0.4081]]]]], [[[[[0.8517, 0.9881]]], [[[0.9503, 0.1575]]]]]], Add85455), 
LZer40651 = zero_padding3D_layer(Add85455, 0, 0, 1, 0, 1, 0, Zer40651), 
LLea61529 = leaky_relu_layer([[[[[0.9564], [0.9222]], [[0.3056], [0.9478]]], [[[0.2916], [0.0106]], [[0.8691], [0.3149]]]]], 6.46525028904292, Lea61529), 
LCon73123 = concatenate_layer([Lea61529,[[[[[0.0184], [0.2268]], [[0.2337], [0.5034]]], [[[0.1002], [0.3586]], [[0.3183], [0.0868]]]]]], 4, Con73123), 
LMin1910 = minimum_layer([Zer40651,Con73123], Min1910), 
LRes91925 = reshape_layer(Min1910, [2, 2, 4], Res91925), 
LRes19241 = reshape_layer(Res91925, [2, 8], Res19241), 
LFla8749 = flatten_layer(Res19241, Fla8749), 
LGRU83355 = gru_layer([[[6, 2, 7], [1, 9, 3], [1, 6, 3]]],[[1, 10, 3, 3, 8, 3, 10, 3, 9], [7, 4, 1, 3, 5, 9, 7, 10, 4], [3, 5, 5, 6, 9, 8, 5, 1, 10]],[[1, 9, 8, 2, 9, 9, 3, 2, 10], [1, 4, 1, 1, 7, 3, 6, 5, 4], [6, 8, 1, 4, 4, 8, 2, 4, 6]],[10, 3, 3, 2, 5, 3, 10, 8, 3], false, GRU83355), 
LRes37554 = reshape_layer(GRU83355, [3, 1], Res37554), 
LRes16098 = reshape_layer(Res37554, [3, 1, 1], Res16098), 
LRes7035 = reshape_layer(Res16098, [3, 1, 1, 1], Res7035), 
LGlo98231 = global_average_pooling3D_layer(Res7035, Glo98231), 
LCon18133 = concatenate_layer([Glo98231,[[0.5457, 0.1285, 0.1032, 0.3997, 0.3952, 0.0741, 0.0112, 0.6319, 0.3732, 0.6557, 0.9522, 0.0651, 0.3565, 0.7494, 0.8627]]], 1, Con18133), 
LAdd15384 = add_layer([Fla8749,Con18133], Add15384), 
exec_layers([LAdd85455,LZer40651,LLea61529,LCon73123,LMin1910,LRes91925,LRes19241,LFla8749,LGRU83355,LRes37554,LRes16098,LRes7035,LGlo98231,LCon18133,LAdd15384],["Add85455","Zer40651","Lea61529","Con73123","Min1910","Res91925","Res19241","Fla8749","GRU83355","Res37554","Res16098","Res7035","Glo98231","Con18133","Add15384"],Add15384,"Add15384")

Actual (Unparsed): [[0.0000000, 0.5457000, 0.1285000, 0.1032000, 0.3997000, 0.3952000, 1.0219000, 0.5146000, 0.6319000, 0.3732000, 0.6557000, 0.9522000, 0.0651000, 0.3565000, 1.0643000, 0.9495000]]

Expected (Unparsed): [[6.576961197878842e-13,0.5457,0.1285,0.1032,0.3997,0.3952,1.0219,0.5146,0.6319,0.3732,0.6557,0.9522,0.0651,0.3565,1.0643,0.9495]]

Actual:   [[0, 0.5457, 0.1285, 0.1032, 0.3997, 0.3952, 1.0219, 0.5146, 0.6319, 0.3732, 0.6557, 0.9522, 0.0651, 0.3565, 1.0643, 0.9495]]

Expected: [[0, 0.5457, 0.1285, 0.1032, 0.3997, 0.3952, 1.0219, 0.5146, 0.6319, 0.3732, 0.6557, 0.9522, 0.0651, 0.3565, 1.0643, 0.9495]]