import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Add98229 = tf.keras.layers.Input(shape=([1, 1]))
in1Add98229 = tf.keras.layers.Input(shape=([1, 1]))
in0Thr32474 = tf.keras.layers.Input(shape=([1, 2, 2, 1]))
in0Add26847 = tf.keras.layers.Input(shape=([2, 1, 1]))
in1Add26847 = tf.keras.layers.Input(shape=([2, 1, 1]))
in0Con85928 = tf.keras.layers.Input(shape=([2, 2, 2]))

Add98229 = keras.layers.Add(name = 'Add98229', )([in0Add98229,in1Add98229])
Res56306 = keras.layers.Reshape((1, 1, 1), name = 'Res56306', )(Add98229)
Up_42657 = keras.layers.UpSampling2D(size=(2, 2), name = 'Up_42657', )(Res56306)
Res41833 = keras.layers.Reshape((2, 2, 1, 1), name = 'Res41833', )(Up_42657)
Zer59109 = keras.layers.ZeroPadding3D(padding=((0, 0), (0, 0), (2, 0)), name = 'Zer59109', )(Res41833)
Thr32474 = keras.layers.ThresholdedReLU(theta=9.872058606410503, name = 'Thr32474', input_shape=(1, 2, 2, 1))(in0Thr32474)
Zer2150 = keras.layers.ZeroPadding3D(padding=((1, 0), (0, 0), (1, 0)), name = 'Zer2150', )(Thr32474)
Sub81336 = keras.layers.Subtract(name = 'Sub81336', )([Zer59109,Zer2150])
Res132 = keras.layers.Reshape((2, 2, 3), name = 'Res132', )(Sub81336)
Add26847 = keras.layers.Add(name = 'Add26847', )([in0Add26847,in1Add26847])
Zer17741 = keras.layers.ZeroPadding2D(padding=((0, 0), (1, 0)), name = 'Zer17741', )(Add26847)
Con85928 = keras.layers.Concatenate(axis=3, name = 'Con85928', )([Zer17741,in0Con85928])
Mul83821 = keras.layers.Multiply(name = 'Mul83821', )([Res132,Con85928])
model = tf.keras.models.Model(inputs=[in0Add98229,in1Add98229,in0Thr32474,in0Add26847,in1Add26847,in0Con85928], outputs=Mul83821)
in0Add98229 = tf.constant([[[0.6849]]])
in1Add98229 = tf.constant([[[0.7679]]])
in0Thr32474 = tf.constant([[[[[0.1303], [0.7557]], [[0.282], [0.5357]]]]])
in0Add26847 = tf.constant([[[[0.1812]], [[0.4801]]]])
in1Add26847 = tf.constant([[[[0.8793]], [[0.8433]]]])
in0Con85928 = tf.constant([[[[0.8216, 0.6214], [0.8973, 0.4387]], [[0.8757, 0.31], [0.0262, 0.509]]]])
print (np.array2string(model.predict([in0Add98229,in1Add98229,in0Thr32474,in0Add26847,in1Add26847,in0Con85928],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Mul83821.png')

LAdd98229 = add_layer([[[[0.6849]]], [[[0.7679]]]], Add98229), 
LRes56306 = reshape_layer(Add98229, [1, 1, 1], Res56306), 
LUp_42657 = up_sampling2D_layer(Res56306, 2, 2, Up_42657), 
LRes41833 = reshape_layer(Up_42657, [2, 2, 1, 1], Res41833), 
LZer59109 = zero_padding3D_layer(Res41833, 0, 0, 0, 0, 2, 0, Zer59109), 
LThr32474 = thresholded_relu_layer([[[[[0.1303], [0.7557]], [[0.282], [0.5357]]]]], 9.872058606410503, Thr32474), 
LZer2150 = zero_padding3D_layer(Thr32474, 1, 0, 0, 0, 1, 0, Zer2150), 
LSub81336 = subtract_layer(Zer59109,Zer2150, Sub81336), 
LRes132 = reshape_layer(Sub81336, [2, 2, 3], Res132), 
LAdd26847 = add_layer([[[[[0.1812]], [[0.4801]]]], [[[[0.8793]], [[0.8433]]]]], Add26847), 
LZer17741 = zero_padding2D_layer(Add26847, 0, 0, 1, 0, Zer17741), 
LCon85928 = concatenate_layer([Zer17741,[[[[0.8216, 0.6214], [0.8973, 0.4387]], [[0.8757, 0.31], [0.0262, 0.509]]]]], 3, Con85928), 
LMul83821 = multiply_layer([Res132,Con85928], Mul83821), 
exec_layers([LAdd98229,LRes56306,LUp_42657,LRes41833,LZer59109,LThr32474,LZer2150,LSub81336,LRes132,LAdd26847,LZer17741,LCon85928,LMul83821],["Add98229","Res56306","Up_42657","Res41833","Zer59109","Thr32474","Zer2150","Sub81336","Res132","Add26847","Zer17741","Con85928","Mul83821"],Mul83821,"Mul83821")

Actual (Unparsed): [[[[0.0000000, 0.0000000, 0.9027699], [0.0000000, 0.0000000, 0.6373433]], [[0.0000000, 0.0000000, 0.4503680], [0.0000000, 0.0000000, 0.7394752]]]]

Expected (Unparsed): [[[[0,0.0,0.9027699199999999],[0.0,0.0,0.6373433599999999]],[[0,0.0,0.45036799999999994],[0.0,0.0,0.7394752]]]]

Actual:   [[[[0, 0, 0.9028], [0, 0, 0.6374]], [[0, 0, 0.4504], [0, 0, 0.7395]]]]

Expected: [[[[0, 0, 0.9028], [0, 0, 0.6374]], [[0, 0, 0.4504], [0, 0, 0.7395]]]]