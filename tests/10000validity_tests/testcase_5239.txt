import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Sub65837 = tf.keras.layers.Input(shape=([2, 3, 3, 3]))
in1Sub65837 = tf.keras.layers.Input(shape=([2, 3, 3, 3]))

Sub65837 = keras.layers.Subtract(name = 'Sub65837', )([in0Sub65837,in1Sub65837])
ELU44848 = keras.layers.ELU(alpha=-9.23283645140421, name = 'ELU44848', )(Sub65837)
Thr86758 = keras.layers.ThresholdedReLU(theta=3.592252640500685, name = 'Thr86758', )(ELU44848)
Mas37107 = keras.layers.Masking(mask_value=1, name = 'Mas37107', )(Thr86758)
model = tf.keras.models.Model(inputs=[in0Sub65837,in1Sub65837], outputs=Mas37107)
in0Sub65837 = tf.constant([[[[[0.8604, 0.5946, 0.2506], [0.018, 0.4716, 0.72], [0.5553, 0.4817, 0.0038]], [[0.0852, 0.4674, 0.2395], [0.5367, 0.8875, 0.3701], [0.344, 0.5877, 0.9139]], [[0.9042, 0.7186, 0.2864], [0.9373, 0.1229, 0.8066], [0.4675, 0.7995, 0.0078]]], [[[0.9683, 0.0285, 0.5618], [0.4633, 0.5217, 0.7029], [0.197, 0.3578, 0.6773]], [[0.7385, 0.1739, 0.6534], [0.2626, 0.8356, 0.9431], [0.178, 0.0527, 0.1024]], [[0.7701, 0.1299, 0.7288], [0.7133, 0.5816, 0.9812], [0.9703, 0.4191, 0.493]]]]])
in1Sub65837 = tf.constant([[[[[0.044, 0.9556, 0.0502], [0.4669, 0.5999, 0.5904], [0.6796, 0.1138, 0.1587]], [[0.1152, 0.1662, 0.9947], [0.1065, 0.3519, 0.3887], [0.9087, 0.7319, 0.7424]], [[0.5952, 0.5553, 0.379], [0.5027, 0.9458, 0.6523], [0.2638, 0.673, 0.5049]]], [[[0.0584, 0.3134, 0.5778], [0.6514, 0.6987, 0.2389], [0.2267, 0.1192, 0.1277]], [[0.9387, 0.4852, 0.6551], [0.3748, 0.24, 0.4228], [0.5841, 0.3113, 0.9378]], [[0.1084, 0.413, 0.1583], [0.0636, 0.2607, 0.969], [0.9065, 0.3275, 0.588]]]]])
print (np.array2string(model.predict([in0Sub65837,in1Sub65837],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Mas37107.png')

LSub65837 = subtract_layer([[[[[0.8604, 0.5946, 0.2506], [0.018, 0.4716, 0.72], [0.5553, 0.4817, 0.0038]], [[0.0852, 0.4674, 0.2395], [0.5367, 0.8875, 0.3701], [0.344, 0.5877, 0.9139]], [[0.9042, 0.7186, 0.2864], [0.9373, 0.1229, 0.8066], [0.4675, 0.7995, 0.0078]]], [[[0.9683, 0.0285, 0.5618], [0.4633, 0.5217, 0.7029], [0.197, 0.3578, 0.6773]], [[0.7385, 0.1739, 0.6534], [0.2626, 0.8356, 0.9431], [0.178, 0.0527, 0.1024]], [[0.7701, 0.1299, 0.7288], [0.7133, 0.5816, 0.9812], [0.9703, 0.4191, 0.493]]]]], [[[[[0.044, 0.9556, 0.0502], [0.4669, 0.5999, 0.5904], [0.6796, 0.1138, 0.1587]], [[0.1152, 0.1662, 0.9947], [0.1065, 0.3519, 0.3887], [0.9087, 0.7319, 0.7424]], [[0.5952, 0.5553, 0.379], [0.5027, 0.9458, 0.6523], [0.2638, 0.673, 0.5049]]], [[[0.0584, 0.3134, 0.5778], [0.6514, 0.6987, 0.2389], [0.2267, 0.1192, 0.1277]], [[0.9387, 0.4852, 0.6551], [0.3748, 0.24, 0.4228], [0.5841, 0.3113, 0.9378]], [[0.1084, 0.413, 0.1583], [0.0636, 0.2607, 0.969], [0.9065, 0.3275, 0.588]]]]], Sub65837), 
LELU44848 = elu_layer(Sub65837, -9.23283645140421, ELU44848), 
LThr86758 = thresholded_relu_layer(ELU44848, 3.592252640500685, Thr86758), 
LMas37107 = masking_layer(Thr86758, 1, Mas37107), 
exec_layers([LSub65837,LELU44848,LThr86758,LMas37107],["Sub65837","ELU44848","Thr86758","Mas37107"],Mas37107,"Mas37107")

Actual (Unparsed): [[[[[0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000]], [[0.0000000, 0.0000000, 4.8941732], [0.0000000, 0.0000000, 0.0000000], [3.9836855, 0.0000000, 0.0000000]], [[0.0000000, 0.0000000, 0.0000000], [0.0000000, 5.1781786, 0.0000000], [0.0000000, 0.0000000, 3.6165744]]], [[[0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000]], [[0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 5.2285463]], [[0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000]]]]]

Expected (Unparsed): [[[[[0,0,0],[0,0,0],[0,0,0]],[[0,0,4.894173134615608],[0,0,0],[3.9836856618470433,0,0]],[[0,0,0],[0,5.17817859145258,0],[0,0,3.6165745014291097]]],[[[0,0,0],[0,0,0],[0,0,0]],[[0,0,0],[0,0,0],[0,0,5.228546360317951]],[[0,0,0],[0,0,0],[0,0,0]]]]]

Actual:   [[[[[0, 0, 0], [0, 0, 0], [0, 0, 0]], [[0, 0, 4.8942], [0, 0, 0], [3.9837, 0, 0]], [[0, 0, 0], [0, 5.1782, 0], [0, 0, 3.6166]]], [[[0, 0, 0], [0, 0, 0], [0, 0, 0]], [[0, 0, 0], [0, 0, 0], [0, 0, 5.2286]], [[0, 0, 0], [0, 0, 0], [0, 0, 0]]]]]

Expected: [[[[[0, 0, 0], [0, 0, 0], [0, 0, 0]], [[0, 0, 4.8942], [0, 0, 0], [3.9837, 0, 0]], [[0, 0, 0], [0, 5.1782, 0], [0, 0, 3.6166]]], [[[0, 0, 0], [0, 0, 0], [0, 0, 0]], [[0, 0, 0], [0, 0, 0], [0, 0, 5.2286]], [[0, 0, 0], [0, 0, 0], [0, 0, 0]]]]]