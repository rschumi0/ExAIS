import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Zer94152 = tf.keras.layers.Input(shape=([3, 3, 1, 4]))
in0Cro63201 = tf.keras.layers.Input(shape=([4, 4, 4]))
in0Con9509 = tf.keras.layers.Input(shape=([5, 56]))

Zer94152 = keras.layers.ZeroPadding3D(padding=((1, 1), (1, 1), (1, 1)), name = 'Zer94152', )(in0Zer94152)
Res64999 = keras.layers.Reshape((5, 5, 12), name = 'Res64999', )(Zer94152)
Res49988 = keras.layers.Reshape((5, 60), name = 'Res49988', )(Res64999)
Cro63201 = keras.layers.Cropping2D(cropping=((3, 0), (0, 3)), name = 'Cro63201', )(in0Cro63201)
Res99764 = keras.layers.Reshape((1, 4), name = 'Res99764', )(Cro63201)
Max77017 = keras.layers.MaxPool1D(pool_size=(1), strides=(1), padding='valid', name = 'Max77017', )(Res99764)
Zer79750 = keras.layers.ZeroPadding1D(padding=((4, 0)), name = 'Zer79750', )(Max77017)
Con9509 = keras.layers.Concatenate(axis=2, name = 'Con9509', )([Zer79750,in0Con9509])
Sub40062 = keras.layers.Subtract(name = 'Sub40062', )([Res49988,Con9509])
Thr73526 = keras.layers.ThresholdedReLU(theta=3.652066212291638, name = 'Thr73526', )(Sub40062)
Glo95666 = keras.layers.GlobalAveragePooling1D(name = 'Glo95666', )(Thr73526)
Res87160 = keras.layers.Reshape((60, 1), name = 'Res87160', )(Glo95666)
Res95525 = keras.layers.Reshape((60, 1, 1), name = 'Res95525', )(Res87160)
Up_49109 = keras.layers.UpSampling2D(size=(1, 1), name = 'Up_49109', )(Res95525)
model = tf.keras.models.Model(inputs=[in0Zer94152,in0Cro63201,in0Con9509], outputs=Up_49109)
in0Zer94152 = tf.constant([[[[[1.5669, 1.2389, 1.7874, 1.5842]], [[1.4788, 1.2385, 1.0372, 1.6211]], [[1.0834, 1.5706, 1.7547, 1.8653]]], [[[1.4479, 1.9516, 1.6375, 1.346]], [[1.2141, 1.3188, 1.1493, 1.4336]], [[1.3118, 1.8043, 1.6298, 1.7425]]], [[[1.0329, 1.9542, 1.3172, 1.964]], [[1.1793, 1.8012, 1.6734, 1.7028]], [[1.5799, 1.1157, 1.0638, 1.3082]]]]])
in0Cro63201 = tf.constant([[[[1.2617, 1.5348, 1.4122, 1.7673], [1.9563, 1.2925, 1.9229, 1.9586], [1.4237, 1.9624, 1.3436, 1.953], [1.2829, 1.9652, 1.5284, 1.5908]], [[1.6559, 1.5868, 1.2523, 1.2662], [1.9478, 1.9108, 1.3271, 1.7064], [1.517, 1.3752, 1.0743, 1.5426], [1.8191, 1.6301, 1.1209, 1.6446]], [[1.8486, 1.9967, 1.302, 1.5097], [1.3492, 1.1034, 1.1767, 1.4823], [1.3123, 1.2115, 1.2958, 1.2171], [1.7451, 1.3333, 1.8924, 1.5918]], [[1.55, 1.4926, 1.1139, 1.2272], [1.6313, 1.3793, 1.2567, 1.8767], [1.0185, 1.2131, 1.7248, 1.2128], [1.8814, 1.8427, 1.5921, 1.9543]]]])
in0Con9509 = tf.constant([[[0.1282, 0.9476, 0.3861, 0.5845, 0.5159, 0.0073, 0.4063, 0.4575, 0.5248, 0.1439, 0.5751, 0.1377, 0.5902, 0.0502, 0.079, 0.1428, 0.5685, 0.7774, 0.2796, 0.0827, 0.9796, 0.5956, 0.0162, 0.8046, 0.6738, 0.6945, 0.8386, 0.9784, 0.3078, 0.9509, 0.2436, 0.25, 0.3417, 0.0483, 0.3368, 0.7866, 0.8807, 0.8192, 0.4659, 0.7647, 0.5756, 0.7997, 0.2781, 0.1111, 0.9696, 0.6351, 0.3436, 0.5973, 0.1336, 0.155, 0.9574, 0.2087, 0.1659, 0.6512, 0.9819, 0.5619], [0.1512, 0.1302, 0.6244, 0.0287, 0.4686, 0.0917, 0.8581, 0.139, 0.9209, 0.6853, 0.7905, 0.7819, 0.0145, 0.9391, 0.6567, 0.702, 0.8632, 0.1178, 0.2746, 0.7951, 0.611, 0.1707, 0.7372, 0.7501, 0.9736, 0.6586, 0.8354, 0.6536, 0.4823, 0.5115, 0.2067, 0.2748, 0.2827, 0.4611, 0.489, 0.8871, 0.8878, 0.0193, 0.8185, 0.6401, 0.1117, 0.4242, 0.8586, 0.7012, 0.5251, 0.0693, 0.1721, 0.6044, 0.161, 0.5419, 0.1539, 0.5099, 0.875, 0.5536, 0.9344, 0.3639], [0.7158, 0.7199, 0.6281, 0.2716, 0.9009, 0.3629, 0.0573, 0.7461, 0.5039, 0.2511, 0.6108, 0.8844, 0.7623, 0.4659, 0.2118, 0.9312, 0.9915, 0.3909, 0.4628, 0.1422, 0.4508, 0.154, 0.9137, 0.3324, 0.151, 0.7249, 0.0525, 0.0077, 0.5118, 0.2662, 0.0619, 0.5125, 0.9876, 0.2686, 0.5994, 0.2049, 0.2589, 0.4625, 0.8629, 0.2655, 0.3582, 0.4919, 0.9849, 0.3858, 0.1441, 0.8597, 0.3629, 0.2439, 0.8687, 0.7098, 0.8751, 0.3736, 0.1912, 0.599, 0.0622, 0.7579], [0.8847, 0.5293, 0.2561, 0.2393, 0.6547, 0.159, 0.3325, 0.6285, 0.9409, 0.2959, 0.2271, 0.2126, 0.3133, 0.4823, 0.611, 0.2205, 0.0836, 0.7297, 0.1509, 0.682, 0.0583, 0.2317, 0.5933, 0.0363, 0.9324, 0.1924, 0.5079, 0.7894, 0.6873, 0.7416, 0.8987, 0.4987, 0.4961, 0.2783, 0.0525, 0.371, 0.0629, 0.4828, 0.9288, 0.8013, 0.0269, 0.6683, 0.118, 0.2494, 0.0472, 0.1046, 0.8941, 0.956, 0.4501, 0.4402, 0.1702, 0.1311, 0.8717, 0.3731, 0.2304, 0.4162], [0.1519, 0.276, 0.954, 0.6129, 0.8531, 0.5702, 0.8762, 0.9047, 0.1627, 0.2572, 0.8338, 0.0506, 0.6149, 0.1712, 0.137, 0.325, 0.0201, 0.1909, 0.1735, 0.2954, 0.2251, 0.8663, 0.106, 0.8853, 0.8461, 0.6556, 0.854, 0.5502, 0.9102, 0.2426, 0.8653, 0.8134, 0.4254, 0.2117, 0.2767, 0.8505, 0.2554, 0.6937, 0.9406, 0.2926, 0.318, 0.4638, 0.4495, 0.9245, 0.0516, 0.3724, 0.731, 0.4962, 0.2926, 0.9205, 0.0039, 0.4348, 0.1991, 0.2537, 0.8877, 0.8501]]])
print (np.array2string(model.predict([in0Zer94152,in0Cro63201,in0Con9509],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Up_49109.png')

LZer94152 = zero_padding3D_layer([[[[[1.5669, 1.2389, 1.7874, 1.5842]], [[1.4788, 1.2385, 1.0372, 1.6211]], [[1.0834, 1.5706, 1.7547, 1.8653]]], [[[1.4479, 1.9516, 1.6375, 1.346]], [[1.2141, 1.3188, 1.1493, 1.4336]], [[1.3118, 1.8043, 1.6298, 1.7425]]], [[[1.0329, 1.9542, 1.3172, 1.964]], [[1.1793, 1.8012, 1.6734, 1.7028]], [[1.5799, 1.1157, 1.0638, 1.3082]]]]], 1, 1, 1, 1, 1, 1, Zer94152), 
LRes64999 = reshape_layer(Zer94152, [5, 5, 12], Res64999), 
LRes49988 = reshape_layer(Res64999, [5, 60], Res49988), 
LCro63201 = cropping2D_layer([[[[1.2617, 1.5348, 1.4122, 1.7673], [1.9563, 1.2925, 1.9229, 1.9586], [1.4237, 1.9624, 1.3436, 1.953], [1.2829, 1.9652, 1.5284, 1.5908]], [[1.6559, 1.5868, 1.2523, 1.2662], [1.9478, 1.9108, 1.3271, 1.7064], [1.517, 1.3752, 1.0743, 1.5426], [1.8191, 1.6301, 1.1209, 1.6446]], [[1.8486, 1.9967, 1.302, 1.5097], [1.3492, 1.1034, 1.1767, 1.4823], [1.3123, 1.2115, 1.2958, 1.2171], [1.7451, 1.3333, 1.8924, 1.5918]], [[1.55, 1.4926, 1.1139, 1.2272], [1.6313, 1.3793, 1.2567, 1.8767], [1.0185, 1.2131, 1.7248, 1.2128], [1.8814, 1.8427, 1.5921, 1.9543]]]], 3, 0, 0, 3, Cro63201), 
LRes99764 = reshape_layer(Cro63201, [1, 4], Res99764), 
LMax77017 = max_pool1D_layer(Res99764, 1, 1, false, Max77017), 
LZer79750 = zero_padding1D_layer(Max77017, 4, 0, Zer79750), 
LCon9509 = concatenate_layer([Zer79750,[[[0.1282, 0.9476, 0.3861, 0.5845, 0.5159, 0.0073, 0.4063, 0.4575, 0.5248, 0.1439, 0.5751, 0.1377, 0.5902, 0.0502, 0.079, 0.1428, 0.5685, 0.7774, 0.2796, 0.0827, 0.9796, 0.5956, 0.0162, 0.8046, 0.6738, 0.6945, 0.8386, 0.9784, 0.3078, 0.9509, 0.2436, 0.25, 0.3417, 0.0483, 0.3368, 0.7866, 0.8807, 0.8192, 0.4659, 0.7647, 0.5756, 0.7997, 0.2781, 0.1111, 0.9696, 0.6351, 0.3436, 0.5973, 0.1336, 0.155, 0.9574, 0.2087, 0.1659, 0.6512, 0.9819, 0.5619], [0.1512, 0.1302, 0.6244, 0.0287, 0.4686, 0.0917, 0.8581, 0.139, 0.9209, 0.6853, 0.7905, 0.7819, 0.0145, 0.9391, 0.6567, 0.702, 0.8632, 0.1178, 0.2746, 0.7951, 0.611, 0.1707, 0.7372, 0.7501, 0.9736, 0.6586, 0.8354, 0.6536, 0.4823, 0.5115, 0.2067, 0.2748, 0.2827, 0.4611, 0.489, 0.8871, 0.8878, 0.0193, 0.8185, 0.6401, 0.1117, 0.4242, 0.8586, 0.7012, 0.5251, 0.0693, 0.1721, 0.6044, 0.161, 0.5419, 0.1539, 0.5099, 0.875, 0.5536, 0.9344, 0.3639], [0.7158, 0.7199, 0.6281, 0.2716, 0.9009, 0.3629, 0.0573, 0.7461, 0.5039, 0.2511, 0.6108, 0.8844, 0.7623, 0.4659, 0.2118, 0.9312, 0.9915, 0.3909, 0.4628, 0.1422, 0.4508, 0.154, 0.9137, 0.3324, 0.151, 0.7249, 0.0525, 0.0077, 0.5118, 0.2662, 0.0619, 0.5125, 0.9876, 0.2686, 0.5994, 0.2049, 0.2589, 0.4625, 0.8629, 0.2655, 0.3582, 0.4919, 0.9849, 0.3858, 0.1441, 0.8597, 0.3629, 0.2439, 0.8687, 0.7098, 0.8751, 0.3736, 0.1912, 0.599, 0.0622, 0.7579], [0.8847, 0.5293, 0.2561, 0.2393, 0.6547, 0.159, 0.3325, 0.6285, 0.9409, 0.2959, 0.2271, 0.2126, 0.3133, 0.4823, 0.611, 0.2205, 0.0836, 0.7297, 0.1509, 0.682, 0.0583, 0.2317, 0.5933, 0.0363, 0.9324, 0.1924, 0.5079, 0.7894, 0.6873, 0.7416, 0.8987, 0.4987, 0.4961, 0.2783, 0.0525, 0.371, 0.0629, 0.4828, 0.9288, 0.8013, 0.0269, 0.6683, 0.118, 0.2494, 0.0472, 0.1046, 0.8941, 0.956, 0.4501, 0.4402, 0.1702, 0.1311, 0.8717, 0.3731, 0.2304, 0.4162], [0.1519, 0.276, 0.954, 0.6129, 0.8531, 0.5702, 0.8762, 0.9047, 0.1627, 0.2572, 0.8338, 0.0506, 0.6149, 0.1712, 0.137, 0.325, 0.0201, 0.1909, 0.1735, 0.2954, 0.2251, 0.8663, 0.106, 0.8853, 0.8461, 0.6556, 0.854, 0.5502, 0.9102, 0.2426, 0.8653, 0.8134, 0.4254, 0.2117, 0.2767, 0.8505, 0.2554, 0.6937, 0.9406, 0.2926, 0.318, 0.4638, 0.4495, 0.9245, 0.0516, 0.3724, 0.731, 0.4962, 0.2926, 0.9205, 0.0039, 0.4348, 0.1991, 0.2537, 0.8877, 0.8501]]]], 2, Con9509), 
LSub40062 = subtract_layer(Res49988,Con9509, Sub40062), 
LThr73526 = thresholded_relu_layer(Sub40062, 3.652066212291638, Thr73526), 
LGlo95666 = global_average_pooling1D_layer(Thr73526, Glo95666), 
LRes87160 = reshape_layer(Glo95666, [60, 1], Res87160), 
LRes95525 = reshape_layer(Res87160, [60, 1, 1], Res95525), 
LUp_49109 = up_sampling2D_layer(Res95525, 1, 1, Up_49109), 
exec_layers([LZer94152,LRes64999,LRes49988,LCro63201,LRes99764,LMax77017,LZer79750,LCon9509,LSub40062,LThr73526,LGlo95666,LRes87160,LRes95525,LUp_49109],["Zer94152","Res64999","Res49988","Cro63201","Res99764","Max77017","Zer79750","Con9509","Sub40062","Thr73526","Glo95666","Res87160","Res95525","Up_49109"],Up_49109,"Up_49109")

Actual (Unparsed

Expected (Unparsed): [[[[0]],[[0]],[[0]],[[0]],[[0]],[[0]],[[0]],[[0]],[[0]],[[0]],[[0]],[[0]],[[0]],[[0]],[[0]],[[0]],[[0]],[[0]],[[0]],[[0]],[[0]],[[0]],[[0]],[[0]],[[0]],[[0]],[[0]],[[0]],[[0]],[[0]],[[0]],[[0]],[[0]],[[0]],[[0]],[[0]],[[0]],[[0]],[[0]],[[0]],[[0]],[[0]],[[0]],[[0]],[[0]],[[0]],[[0]],[[0]],[[0]],[[0]],[[0]],[[0]],[[0]],[[0]],[[0]],[[0]],[[0]],[[0]],[[0]],[[0]]]]

Actual:   [[[[0]], [[0]], [[0]], [[0]], [[0]], [[0]], [[0]], [[0]], [[0]], [[0]], [[0]], [[0]], [[0]], [[0]], [[0]], [[0]], [[0]], [[0]], [[0]], [[0]], [[0]], [[0]], [[0]], [[0]], [[0]], [[0]], [[0]], [[0]], [[0]], [[0]], [[0]], [[0]], [[0]], [[0]], [[0]], [[0]], [[0]], [[0]], [[0]], [[0]], [[0]], [[0]], [[0]], [[0]], [[0]], [[0]], [[0]], [[0]], [[0]], [[0]], [[0]], [[0]], [[0]], [[0]], [[0]], [[0]], [[0]], [[0]], [[0]], [[0]]]]

Expected: [[[[0]], [[0]], [[0]], [[0]], [[0]], [[0]], [[0]], [[0]], [[0]], [[0]], [[0]], [[0]], [[0]], [[0]], [[0]], [[0]], [[0]], [[0]], [[0]], [[0]], [[0]], [[0]], [[0]], [[0]], [[0]], [[0]], [[0]], [[0]], [[0]], [[0]], [[0]], [[0]], [[0]], [[0]], [[0]], [[0]], [[0]], [[0]], [[0]], [[0]], [[0]], [[0]], [[0]], [[0]], [[0]], [[0]], [[0]], [[0]], [[0]], [[0]], [[0]], [[0]], [[0]], [[0]], [[0]], [[0]], [[0]], [[0]], [[0]], [[0]]]]