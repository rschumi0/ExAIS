import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Min69053 = tf.keras.layers.Input(shape=([2, 1, 2]))
in1Min69053 = tf.keras.layers.Input(shape=([2, 1, 2]))

Min69053 = keras.layers.Minimum(name = 'Min69053', )([in0Min69053,in1Min69053])
Res39929 = keras.layers.Reshape((2, 1, 2, 1), name = 'Res39929', )(Min69053)
Zer41227 = keras.layers.ZeroPadding3D(padding=((1, 1), (1, 1), (1, 1)), name = 'Zer41227', )(Res39929)
model = tf.keras.models.Model(inputs=[in0Min69053,in1Min69053], outputs=Zer41227)
in0Min69053 = tf.constant([[[[0.3971, 0.3943]], [[0.2938, 0.7799]]]])
in1Min69053 = tf.constant([[[[0.0057, 0.6973]], [[0.7665, 0.9745]]]])
print (np.array2string(model.predict([in0Min69053,in1Min69053],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Zer41227.png')

LMin69053 = minimum_layer([[[[[0.3971, 0.3943]], [[0.2938, 0.7799]]]], [[[[0.0057, 0.6973]], [[0.7665, 0.9745]]]]], Min69053), 
LRes39929 = reshape_layer(Min69053, [2, 1, 2, 1], Res39929), 
LZer41227 = zero_padding3D_layer(Res39929, 1, 1, 1, 1, 1, 1, Zer41227), 
exec_layers([LMin69053,LRes39929,LZer41227],["Min69053","Res39929","Zer41227"],Zer41227,"Zer41227")

Actual (Unparsed): [[[[[0.0000000], [0.0000000], [0.0000000], [0.0000000]], [[0.0000000], [0.0000000], [0.0000000], [0.0000000]], [[0.0000000], [0.0000000], [0.0000000], [0.0000000]]], [[[0.0000000], [0.0000000], [0.0000000], [0.0000000]], [[0.0000000], [0.0057000], [0.3943000], [0.0000000]], [[0.0000000], [0.0000000], [0.0000000], [0.0000000]]], [[[0.0000000], [0.0000000], [0.0000000], [0.0000000]], [[0.0000000], [0.2938000], [0.7799000], [0.0000000]], [[0.0000000], [0.0000000], [0.0000000], [0.0000000]]], [[[0.0000000], [0.0000000], [0.0000000], [0.0000000]], [[0.0000000], [0.0000000], [0.0000000], [0.0000000]], [[0.0000000], [0.0000000], [0.0000000], [0.0000000]]]]]

Expected (Unparsed): [[[[[0],[0],[0],[0]],[[0],[0],[0],[0]],[[0],[0],[0],[0]]],[[[0],[0],[0],[0]],[[0],[0.0057],[0.3943],[0]],[[0],[0],[0],[0]]],[[[0],[0],[0],[0]],[[0],[0.2938],[0.7799],[0]],[[0],[0],[0],[0]]],[[[0],[0],[0],[0]],[[0],[0],[0],[0]],[[0],[0],[0],[0]]]]]

Actual:   [[[[[0], [0], [0], [0]], [[0], [0], [0], [0]], [[0], [0], [0], [0]]], [[[0], [0], [0], [0]], [[0], [0.0057], [0.3943], [0]], [[0], [0], [0], [0]]], [[[0], [0], [0], [0]], [[0], [0.2938], [0.7799], [0]], [[0], [0], [0], [0]]], [[[0], [0], [0], [0]], [[0], [0], [0], [0]], [[0], [0], [0], [0]]]]]

Expected: [[[[[0], [0], [0], [0]], [[0], [0], [0], [0]], [[0], [0], [0], [0]]], [[[0], [0], [0], [0]], [[0], [0.0057], [0.3943], [0]], [[0], [0], [0], [0]]], [[[0], [0], [0], [0]], [[0], [0.2938], [0.7799], [0]], [[0], [0], [0], [0]]], [[[0], [0], [0], [0]], [[0], [0], [0], [0]], [[0], [0], [0], [0]]]]]