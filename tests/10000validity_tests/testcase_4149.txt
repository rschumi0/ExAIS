import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Sub94973 = tf.keras.layers.Input(shape=([2]))
in1Sub94973 = tf.keras.layers.Input(shape=([2]))
in0Con12629 = tf.keras.layers.Input(shape=([5, 5, 6, 1]))
in0Zer16963 = tf.keras.layers.Input(shape=([3, 3, 4, 2]))
in0Con48289 = tf.keras.layers.Input(shape=([2, 2, 12, 1]))
in0Ave49185 = tf.keras.layers.Input(shape=([1, 1, 2, 2]))
in1Ave49185 = tf.keras.layers.Input(shape=([1, 1, 2, 2]))

Sub94973 = keras.layers.Subtract(name = 'Sub94973', )([in0Sub94973,in1Sub94973])
Res85576 = keras.layers.Reshape((2, 1), name = 'Res85576', )(Sub94973)
Res27227 = keras.layers.Reshape((2, 1, 1), name = 'Res27227', )(Res85576)
Res50718 = keras.layers.Reshape((2, 1, 1, 1), name = 'Res50718', )(Res27227)
Zer80139 = keras.layers.ZeroPadding3D(padding=((3, 0), (4, 0), (5, 0)), name = 'Zer80139', )(Res50718)
Con12629 = keras.layers.Concatenate(axis=4, name = 'Con12629', )([Zer80139,in0Con12629])
Zer16963 = keras.layers.ZeroPadding3D(padding=((1, 1), (1, 1), (1, 1)), name = 'Zer16963', )(in0Zer16963)
Max1866 = keras.layers.Maximum(name = 'Max1866', )([Con12629,Zer16963])
Lay81815 = keras.layers.LayerNormalization(axis=1, epsilon=1.4350267985021308, name = 'Lay81815', )(Max1866)
Res78209 = keras.layers.Reshape((5, 5, 12), name = 'Res78209', )(Lay81815)
Max89339 = keras.layers.MaxPool2D(pool_size=(3, 4), strides=(2, 1), padding='valid', name = 'Max89339', )(Res78209)
Res26097 = keras.layers.Reshape((2, 2, 12, 1), name = 'Res26097', )(Max89339)
Con48289 = keras.layers.Concatenate(axis=4, name = 'Con48289', )([Res26097,in0Con48289])
Ave49185 = keras.layers.Average(name = 'Ave49185', )([in0Ave49185,in1Ave49185])
Zer10019 = keras.layers.ZeroPadding3D(padding=((1, 0), (1, 0), (10, 0)), name = 'Zer10019', )(Ave49185)
Add65090 = keras.layers.Add(name = 'Add65090', )([Con48289,Zer10019])
model = tf.keras.models.Model(inputs=[in0Sub94973,in1Sub94973,in0Con12629,in0Zer16963,in0Con48289,in0Ave49185,in1Ave49185], outputs=Add65090)
in0Sub94973 = tf.constant([[0.7945, 0.3447]])
in1Sub94973 = tf.constant([[0.869, 0.4563]])
in0Con12629 = tf.constant([[[[[0.5689], [0.8869], [0.5322], [0.1096], [0.4595], [0.4406]], [[0.2998], [0.6047], [0.3695], [0.1859], [0.2528], [0.7714]], [[0.4073], [0.922], [0.9494], [0.4154], [0.4806], [0.0804]], [[0.5481], [0.1531], [0.1399], [0.9616], [0.8838], [0.696]], [[0.6317], [0.344], [0.2708], [0.6658], [0.725], [0.4173]]], [[[0.6342], [0.2944], [0.4663], [0.1174], [0.3055], [0.2529]], [[0.1309], [0.8483], [0.5717], [0.0308], [0.2924], [0.2631]], [[0.8591], [0.7365], [0.1101], [0.247], [0.2566], [0.9279]], [[0.6468], [0.4974], [0.9312], [0.0979], [0.2731], [0.1256]], [[0.8761], [0.7373], [0.9884], [0.5206], [0.3456], [0.4768]]], [[[0.7932], [0.3087], [0.2758], [0.6706], [0.0877], [0.6196]], [[0.9705], [0.9244], [0.4344], [0.0262], [0.3382], [0.4957]], [[0.9284], [0.4643], [0.0065], [0.1954], [0.8432], [0.1569]], [[0.7128], [0.4086], [0.1875], [0.0717], [0.4714], [0.115]], [[0.2966], [0.7183], [0.1506], [0.3412], [0.6109], [0.1594]]], [[[0.2611], [0.3041], [0.3464], [0.9518], [0.9483], [0.614]], [[0.8502], [0.3611], [0.415], [0.3007], [0.0528], [0.5998]], [[0.2542], [0.0956], [0.5772], [0.0279], [0.4645], [0.3593]], [[0.7468], [0.2239], [0.2423], [0.2777], [0.9434], [0.5867]], [[0.995], [0.4669], [0.5149], [0.6591], [0.4062], [0.9268]]], [[[0.6993], [0.6788], [0.7978], [0.3579], [0.8457], [0.9557]], [[0.4775], [0.222], [0.5416], [0.5525], [0.2438], [0.5642]], [[0.1312], [0.4019], [0.7228], [0.5391], [0.5034], [0.4299]], [[0.7554], [0.7868], [0.9626], [0.4791], [0.6237], [0.292]], [[0.4545], [0.823], [0.5068], [0.1217], [0.4143], [0.8446]]]]])
in0Zer16963 = tf.constant([[[[[1.4827, 1.7273], [1.3472, 1.3966], [1.033, 1.7392], [1.4223, 1.4328]], [[1.6952, 1.8455], [1.1015, 1.7041], [1.6069, 1.987], [1.8953, 1.7348]], [[1.5253, 1.535], [1.2236, 1.1622], [1.1153, 1.649], [1.9941, 1.5244]]], [[[1.702, 1.1551], [1.0669, 1.817], [1.229, 1.0263], [1.2264, 1.69]], [[1.4018, 1.1729], [1.0998, 1.4867], [1.6436, 1.5231], [1.1881, 1.8062]], [[1.5404, 1.315], [1.7997, 1.9065], [1.9106, 1.1073], [1.2188, 1.0639]]], [[[1.5006, 1.2646], [1.879, 1.9487], [1.5745, 1.5776], [1.6631, 1.1903]], [[1.3471, 1.2365], [1.7047, 1.5605], [1.2898, 1.5921], [1.2277, 1.6288]], [[1.8279, 1.0121], [1.0275, 1.3152], [1.8455, 1.667], [1.1721, 1.4978]]]]])
in0Con48289 = tf.constant([[[[[0.8389], [0.6175], [0.8129], [0.6617], [0.6351], [0.704], [0.4584], [0.153], [0.7654], [0.8834], [0.1799], [0.1905]], [[0.9287], [0.2441], [0.9407], [0.9489], [0.6031], [0.0388], [0.0308], [0.0887], [0.9121], [0.0316], [0.3234], [0.6309]]], [[[0.4522], [0.0662], [0.7093], [0.5341], [0.8843], [0.2258], [0.5992], [0.6654], [0.5238], [0.6722], [0.4531], [0.8455]], [[0.122], [0.753], [0.4016], [0.9116], [0.5306], [0.2486], [0.1531], [0.2917], [0.9598], [0.6936], [0.5525], [0.4124]]]]])
in0Ave49185 = tf.constant([[[[[0.7146, 0.2658], [0.3803, 0.7215]]]]])
in1Ave49185 = tf.constant([[[[[0.2713, 0.6018], [0.3198, 0.0979]]]]])
print (np.array2string(model.predict([in0Sub94973,in1Sub94973,in0Con12629,in0Zer16963,in0Con48289,in0Ave49185,in1Ave49185],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Add65090.png')

LSub94973 = subtract_layer([[0.7945, 0.3447]], [[0.869, 0.4563]], Sub94973), 
LRes85576 = reshape_layer(Sub94973, [2, 1], Res85576), 
LRes27227 = reshape_layer(Res85576, [2, 1, 1], Res27227), 
LRes50718 = reshape_layer(Res27227, [2, 1, 1, 1], Res50718), 
LZer80139 = zero_padding3D_layer(Res50718, 3, 0, 4, 0, 5, 0, Zer80139), 
LCon12629 = concatenate_layer([Zer80139,[[[[[0.5689], [0.8869], [0.5322], [0.1096], [0.4595], [0.4406]], [[0.2998], [0.6047], [0.3695], [0.1859], [0.2528], [0.7714]], [[0.4073], [0.922], [0.9494], [0.4154], [0.4806], [0.0804]], [[0.5481], [0.1531], [0.1399], [0.9616], [0.8838], [0.696]], [[0.6317], [0.344], [0.2708], [0.6658], [0.725], [0.4173]]], [[[0.6342], [0.2944], [0.4663], [0.1174], [0.3055], [0.2529]], [[0.1309], [0.8483], [0.5717], [0.0308], [0.2924], [0.2631]], [[0.8591], [0.7365], [0.1101], [0.247], [0.2566], [0.9279]], [[0.6468], [0.4974], [0.9312], [0.0979], [0.2731], [0.1256]], [[0.8761], [0.7373], [0.9884], [0.5206], [0.3456], [0.4768]]], [[[0.7932], [0.3087], [0.2758], [0.6706], [0.0877], [0.6196]], [[0.9705], [0.9244], [0.4344], [0.0262], [0.3382], [0.4957]], [[0.9284], [0.4643], [0.0065], [0.1954], [0.8432], [0.1569]], [[0.7128], [0.4086], [0.1875], [0.0717], [0.4714], [0.115]], [[0.2966], [0.7183], [0.1506], [0.3412], [0.6109], [0.1594]]], [[[0.2611], [0.3041], [0.3464], [0.9518], [0.9483], [0.614]], [[0.8502], [0.3611], [0.415], [0.3007], [0.0528], [0.5998]], [[0.2542], [0.0956], [0.5772], [0.0279], [0.4645], [0.3593]], [[0.7468], [0.2239], [0.2423], [0.2777], [0.9434], [0.5867]], [[0.995], [0.4669], [0.5149], [0.6591], [0.4062], [0.9268]]], [[[0.6993], [0.6788], [0.7978], [0.3579], [0.8457], [0.9557]], [[0.4775], [0.222], [0.5416], [0.5525], [0.2438], [0.5642]], [[0.1312], [0.4019], [0.7228], [0.5391], [0.5034], [0.4299]], [[0.7554], [0.7868], [0.9626], [0.4791], [0.6237], [0.292]], [[0.4545], [0.823], [0.5068], [0.1217], [0.4143], [0.8446]]]]]], 4, Con12629), 
LZer16963 = zero_padding3D_layer([[[[[1.4827, 1.7273], [1.3472, 1.3966], [1.033, 1.7392], [1.4223, 1.4328]], [[1.6952, 1.8455], [1.1015, 1.7041], [1.6069, 1.987], [1.8953, 1.7348]], [[1.5253, 1.535], [1.2236, 1.1622], [1.1153, 1.649], [1.9941, 1.5244]]], [[[1.702, 1.1551], [1.0669, 1.817], [1.229, 1.0263], [1.2264, 1.69]], [[1.4018, 1.1729], [1.0998, 1.4867], [1.6436, 1.5231], [1.1881, 1.8062]], [[1.5404, 1.315], [1.7997, 1.9065], [1.9106, 1.1073], [1.2188, 1.0639]]], [[[1.5006, 1.2646], [1.879, 1.9487], [1.5745, 1.5776], [1.6631, 1.1903]], [[1.3471, 1.2365], [1.7047, 1.5605], [1.2898, 1.5921], [1.2277, 1.6288]], [[1.8279, 1.0121], [1.0275, 1.3152], [1.8455, 1.667], [1.1721, 1.4978]]]]], 1, 1, 1, 1, 1, 1, Zer16963), 
LMax1866 = maximum_layer([Con12629,Zer16963], Max1866), 
LLay81815 = layer_normalization_layer(Max1866, 1, 1.4350267985021308, Lay81815), 
LRes78209 = reshape_layer(Lay81815, [5, 5, 12], Res78209), 
LMax89339 = max_pool2D_layer(Res78209, 3, 4, 2, 1, false, Max89339), 
LRes26097 = reshape_layer(Max89339, [2, 2, 12, 1], Res26097), 
LCon48289 = concatenate_layer([Res26097,[[[[[0.8389], [0.6175], [0.8129], [0.6617], [0.6351], [0.704], [0.4584], [0.153], [0.7654], [0.8834], [0.1799], [0.1905]], [[0.9287], [0.2441], [0.9407], [0.9489], [0.6031], [0.0388], [0.0308], [0.0887], [0.9121], [0.0316], [0.3234], [0.6309]]], [[[0.4522], [0.0662], [0.7093], [0.5341], [0.8843], [0.2258], [0.5992], [0.6654], [0.5238], [0.6722], [0.4531], [0.8455]], [[0.122], [0.753], [0.4016], [0.9116], [0.5306], [0.2486], [0.1531], [0.2917], [0.9598], [0.6936], [0.5525], [0.4124]]]]]], 4, Con48289), 
LAve49185 = average_layer([[[[[[0.7146, 0.2658], [0.3803, 0.7215]]]]], [[[[[0.2713, 0.6018], [0.3198, 0.0979]]]]]], Ave49185), 
LZer10019 = zero_padding3D_layer(Ave49185, 1, 0, 1, 0, 10, 0, Zer10019), 
LAdd65090 = add_layer([Con48289,Zer10019], Add65090), 
exec_layers([LSub94973,LRes85576,LRes27227,LRes50718,LZer80139,LCon12629,LZer16963,LMax1866,LLay81815,LRes78209,LMax89339,LRes26097,LCon48289,LAve49185,LZer10019,LAdd65090],["Sub94973","Res85576","Res27227","Res50718","Zer80139","Con12629","Zer16963","Max1866","Lay81815","Res78209","Max89339","Res26097","Con48289","Ave49185","Zer10019","Add65090"],Add65090,"Add65090")

Actual (Unparsed): [[[[[0.0000000, 0.8389000], [0.3425721, 0.6175000], [0.5736910, 0.8129000], [0.5673240, 0.6617000], [0.7109905, 0.6351000], [0.6094053, 0.7040000], [0.6391841, 0.4584000], [0.5748191, 0.1530000], [0.7834635, 0.7654000], [0.5427342, 0.8834000], [0.0000000, 0.1799000], [0.4350890, 0.1905000]], [[0.0000000, 0.9287000], [0.3425721, 0.2441000], [0.5736910, 0.9407000], [0.5673240, 0.9489000], [0.7109905, 0.6031000], [0.6094053, 0.0388000], [0.6391841, 0.0308000], [0.5748191, 0.0887000], [0.7834635, 0.9121000], [0.5427342, 0.0316000], [0.0000000, 0.3234000], [0.4350890, 0.6309000]]], [[[0.0000000, 0.4522000], [0.3425721, 0.0662000], [0.5880584, 0.7093000], [0.2749650, 0.5341000], [0.7224988, 0.8843000], [0.6094053, 0.2258000], [0.6391841, 0.5992000], [0.4202979, 0.6654000], [0.5734305, 0.5238000], [0.5427342, 0.6722000], [0.0000000, 0.4531000], [0.3107000, 0.8455000]], [[0.0000000, 0.1220000], [0.3425721, 0.7530000], [0.5880584, 0.4016000], [0.2749650, 0.9116000], [0.7224988, 0.5306000], [0.6094053, 0.2486000], [0.6391841, 0.1531000], [0.4202979, 0.2917000], [0.5734305, 0.9598000], [0.5427342, 0.6936000], [0.4929500, 0.9863000], [0.6439443, 0.8221000]]]]]

Expected (Unparsed): [[[[[0.0,0.8389],[0.3425721371033807,0.6175],[0.5736910399035001,0.8129],[0.5673240313999244,0.6617],[0.7109905189910979,0.6351],[0.6094052844190063,0.704],[0.6391841157132243,0.4584],[0.5748190627324256,0.153],[0.7834634771917847,0.7654],[0.5427342212490209,0.8834],[0.0,0.1799],[0.43508899878683943,0.1905]],[[0.0,0.9287],[0.3425721371033807,0.2441],[0.5736910399035001,0.9407],[0.5673240313999244,0.9489],[0.7109905189910979,0.6031],[0.6094052844190063,0.0388],[0.6391841157132243,0.0308],[0.5748190627324256,0.0887],[0.7834634771917847,0.9121],[0.5427342212490209,0.0316],[0.0,0.3234],[0.43508899878683943,0.6309]]],[[[0.0,0.4522],[0.3425721371033807,0.0662],[0.5880584220913679,0.7093],[0.27496497074096166,0.5341],[0.7224988258180253,0.8843],[0.6094052844190063,0.2258],[0.6391841157132243,0.5992],[0.42029792991483206,0.6654],[0.5734304697379475,0.5238],[0.5427342212490209,0.6722],[0.0,0.4531],[0.31070002147991466,0.8455]],[[0.0,0.122],[0.3425721371033807,0.753],[0.5880584220913679,0.4016],[0.27496497074096166,0.9116],[0.7224988258180253,0.5306],[0.6094052844190063,0.2486],[0.6391841157132243,0.1531],[0.42029792991483206,0.2917],[0.5734304697379475,0.9598],[0.5427342212490209,0.6936],[0.49295,0.9863],[0.6439443498748962,0.8221]]]]]

Actual:   [[[[[0, 0.8389], [0.3426, 0.6175], [0.5737, 0.8129], [0.5674, 0.6617], [0.711, 0.6351], [0.6095, 0.704], [0.6392, 0.4584], [0.5749, 0.153], [0.7835, 0.7654], [0.5428, 0.8834], [0, 0.1799], [0.4351, 0.1905]], [[0, 0.9287], [0.3426, 0.2441], [0.5737, 0.9407], [0.5674, 0.9489], [0.711, 0.6031], [0.6095, 0.0388], [0.6392, 0.0308], [0.5749, 0.0887], [0.7835, 0.9121], [0.5428, 0.0316], [0, 0.3234], [0.4351, 0.6309]]], [[[0, 0.4522], [0.3426, 0.0662], [0.5881, 0.7093], [0.275, 0.5341], [0.7225, 0.8843], [0.6095, 0.2258], [0.6392, 0.5992], [0.4203, 0.6654], [0.5735, 0.5238], [0.5428, 0.6722], [0, 0.4531], [0.3107, 0.8455]], [[0, 0.122], [0.3426, 0.753], [0.5881, 0.4016], [0.275, 0.9116], [0.7225, 0.5306], [0.6095, 0.2486], [0.6392, 0.1531], [0.4203, 0.2917], [0.5735, 0.9598], [0.5428, 0.6936], [0.493, 0.9863], [0.644, 0.8221]]]]]

Expected: [[[[[0, 0.8389], [0.3426, 0.6175], [0.5737, 0.8129], [0.5674, 0.6617], [0.711, 0.6351], [0.6095, 0.704], [0.6392, 0.4584], [0.5749, 0.153], [0.7835, 0.7654], [0.5428, 0.8834], [0, 0.1799], [0.4351, 0.1905]], [[0, 0.9287], [0.3426, 0.2441], [0.5737, 0.9407], [0.5674, 0.9489], [0.711, 0.6031], [0.6095, 0.0388], [0.6392, 0.0308], [0.5749, 0.0887], [0.7835, 0.9121], [0.5428, 0.0316], [0, 0.3234], [0.4351, 0.6309]]], [[[0, 0.4522], [0.3426, 0.0662], [0.5881, 0.7093], [0.275, 0.5341], [0.7225, 0.8843], [0.6095, 0.2258], [0.6392, 0.5992], [0.4203, 0.6654], [0.5735, 0.5238], [0.5428, 0.6722], [0, 0.4531], [0.3108, 0.8455]], [[0, 0.122], [0.3426, 0.753], [0.5881, 0.4016], [0.275, 0.9116], [0.7225, 0.5306], [0.6095, 0.2486], [0.6392, 0.1531], [0.4203, 0.2917], [0.5735, 0.9598], [0.5428, 0.6936], [0.493, 0.9863], [0.644, 0.8221]]]]]