import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0ReL97800 = tf.keras.layers.Input(shape=([1, 2, 1]))
in0Up_40808 = tf.keras.layers.Input(shape=([3, 2]))
in0Con76745 = tf.keras.layers.Input(shape=([2, 2, 1]))
in0ELU93876 = tf.keras.layers.Input(shape=([2, 2, 2]))

ReL97800 = keras.layers.ReLU(max_value=9.8752600922391, negative_slope=5.417652619968773, threshold=8.420712788325979, name = 'ReL97800', input_shape=(1, 2, 1))(in0ReL97800)
Res43629 = keras.layers.Reshape((1, 2), name = 'Res43629', )(ReL97800)
Zer3562 = keras.layers.ZeroPadding1D(padding=((5, 0)), name = 'Zer3562', )(Res43629)
Up_40808 = keras.layers.UpSampling1D(size=(2), name = 'Up_40808', )(in0Up_40808)
Min19320 = keras.layers.Minimum(name = 'Min19320', )([Zer3562,Up_40808])
Res25391 = keras.layers.Reshape((6, 2, 1), name = 'Res25391', )(Min19320)
Sep46020 = keras.layers.SeparableConv2D(2, (3, 2),strides=(2, 2), padding='valid', name = 'Sep46020', )(Res25391)
Res41832 = keras.layers.Reshape((2, 1, 2, 1), name = 'Res41832', )(Sep46020)
Glo72965 = keras.layers.GlobalAveragePooling3D(name = 'Glo72965', )(Res41832)
Res7261 = keras.layers.Reshape((1, 1), name = 'Res7261', )(Glo72965)
Res83305 = keras.layers.Reshape((1, 1, 1), name = 'Res83305', )(Res7261)
Zer71865 = keras.layers.ZeroPadding2D(padding=((1, 0), (1, 0)), name = 'Zer71865', )(Res83305)
Con76745 = keras.layers.Concatenate(axis=3, name = 'Con76745', )([Zer71865,in0Con76745])
ELU93876 = keras.layers.ELU(alpha=-3.7403935871163396, name = 'ELU93876', input_shape=(2, 2, 2))(in0ELU93876)
Ave46616 = keras.layers.Average(name = 'Ave46616', )([Con76745,ELU93876])
model = tf.keras.models.Model(inputs=[in0ReL97800,in0Up_40808,in0Con76745,in0ELU93876], outputs=Ave46616)
w = model.get_layer('Sep46020').get_weights() 
w[0] = np.array([[[[0.6372]], [[0.4135]]], [[[0.4647]], [[0.2286]]], [[[0.6251]], [[0.6477]]]])
w[1] = np.array([[[[0.1241, 0.6781]]]])
w[2] = np.array([0, 0])
model.get_layer('Sep46020').set_weights(w) 
in0ReL97800 = tf.constant([[[[0.3634], [0.615]]]])
in0Up_40808 = tf.constant([[[1.3321, 1.8203], [1.44, 1.4838], [1.3017, 1.9715]]])
in0Con76745 = tf.constant([[[[0.3339], [0.6943]], [[0.8999], [0.4214]]]])
in0ELU93876 = tf.constant([[[[0.6786, 0.8833], [0.6848, 0.0998]], [[0.5764, 0.3838], [0.5695, 0.5335]]]])
print (np.array2string(model.predict([in0ReL97800,in0Up_40808,in0Con76745,in0ELU93876],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Ave46616.png')

LReL97800 = relu_layer([[[[0.3634], [0.615]]]], 9.8752600922391, 5.417652619968773, 8.420712788325979, ReL97800), 
LRes43629 = reshape_layer(ReL97800, [1, 2], Res43629), 
LZer3562 = zero_padding1D_layer(Res43629, 5, 0, Zer3562), 
LUp_40808 = up_sampling1D_layer([[[1.3321, 1.8203], [1.44, 1.4838], [1.3017, 1.9715]]], 2, Up_40808), 
LMin19320 = minimum_layer([Zer3562,Up_40808], Min19320), 
LRes25391 = reshape_layer(Min19320, [6, 2, 1], Res25391), 
LSep46020 = separable_conv2D_layer(Res25391, 3, 2,[[[[[0.6372]], [[0.4135]]], [[[0.4647]], [[0.2286]]], [[[0.6251]], [[0.6477]]]],[[[[0.1241, 0.6781]]]]],[0, 0], 2, 2, false, Sep46020), 
LRes41832 = reshape_layer(Sep46020, [2, 1, 2, 1], Res41832), 
LGlo72965 = global_average_pooling3D_layer(Res41832, Glo72965), 
LRes7261 = reshape_layer(Glo72965, [1, 1], Res7261), 
LRes83305 = reshape_layer(Res7261, [1, 1, 1], Res83305), 
LZer71865 = zero_padding2D_layer(Res83305, 1, 0, 1, 0, Zer71865), 
LCon76745 = concatenate_layer([Zer71865,[[[[0.3339], [0.6943]], [[0.8999], [0.4214]]]]], 3, Con76745), 
LELU93876 = elu_layer([[[[0.6786, 0.8833], [0.6848, 0.0998]], [[0.5764, 0.3838], [0.5695, 0.5335]]]], -3.7403935871163396, ELU93876), 
LAve46616 = average_layer([Con76745,ELU93876], Ave46616), 
exec_layers([LReL97800,LRes43629,LZer3562,LUp_40808,LMin19320,LRes25391,LSep46020,LRes41832,LGlo72965,LRes7261,LRes83305,LZer71865,LCon76745,LELU93876,LAve46616],["ReL97800","Res43629","Zer3562","Up_40808","Min19320","Res25391","Sep46020","Res41832","Glo72965","Res7261","Res83305","Zer71865","Con76745","ELU93876","Ave46616"],Ave46616,"Ave46616")

Actual (Unparsed): [[[[0.3393000, 0.6086000], [0.3424000, 0.3970500]], [[0.2882000, 0.6418500], [0.2847500, 0.4774500]]]]

Expected (Unparsed): [[[[0.3393,0.6086],[0.3424,0.39705]],[[0.2882,0.64185],[0.28475,0.47745]]]]

Actual:   [[[[0.3393, 0.6086], [0.3424, 0.3971]], [[0.2882, 0.6419], [0.2848, 0.4775]]]]

Expected: [[[[0.3393, 0.6086], [0.3424, 0.3971]], [[0.2882, 0.6419], [0.2848, 0.4775]]]]