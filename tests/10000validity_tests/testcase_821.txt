import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Add2744 = tf.keras.layers.Input(shape=([1, 1, 1]))
in1Add2744 = tf.keras.layers.Input(shape=([1, 1, 1]))

Add2744 = keras.layers.Add(name = 'Add2744', )([in0Add2744,in1Add2744])
Res17114 = keras.layers.Reshape((1, 1), name = 'Res17114', )(Add2744)
LST47553 = keras.layers.LSTM(1,recurrent_activation='sigmoid', name = 'LST47553', )(Res17114)
Bat18536 = keras.layers.BatchNormalization(axis=1, epsilon=0.43135136723843637,  name = 'Bat18536', )(LST47553)
model = tf.keras.models.Model(inputs=[in0Add2744,in1Add2744], outputs=Bat18536)
w = model.get_layer('LST47553').get_weights() 
w[0] = np.array([[10, 10, 6, 9]])
w[1] = np.array([[3, 6, 1, 5]])
w[2] = np.array([6, 9, 6, 6])
model.get_layer('LST47553').set_weights(w) 
w = model.get_layer('Bat18536').get_weights() 
w[0] = np.array([0.3221])
w[1] = np.array([0.7714])
w[2] = np.array([0.9818])
w[3] = np.array([0.9681])
model.get_layer('Bat18536').set_weights(w) 
in0Add2744 = tf.constant([[[[0.1412]]]])
in1Add2744 = tf.constant([[[[0.2895]]]])
print (np.array2string(model.predict([in0Add2744,in1Add2744],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Bat18536.png')

LAdd2744 = add_layer([[[[[0.1412]]]], [[[[0.2895]]]]], Add2744), 
LRes17114 = reshape_layer(Add2744, [1, 1], Res17114), 
LLST47553 = lstm_layer(Res17114,[[10, 10, 6, 9]],[[3, 6, 1, 5]],[6, 9, 6, 6], LST47553), 
LBat18536 = batch_normalization_layer(LST47553, 1, 0.43135136723843637, [0.3221], [0.7714], [0.9818], [0.9681], Bat18536), 
exec_layers([LAdd2744,LRes17114,LLST47553,LBat18536],["Add2744","Res17114","LST47553","Bat18536"],Bat18536,"Bat18536")

Actual (Unparsed): [[0.7114284]]

Expected (Unparsed): [[0.7114284139787858]]

Actual:   [[0.7115]]

Expected: [[0.7115]]