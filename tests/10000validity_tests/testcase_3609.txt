import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Dot37083 = tf.keras.layers.Input(shape=([2]))
in1Dot37083 = tf.keras.layers.Input(shape=([2]))
in0Thr18859 = tf.keras.layers.Input(shape=([2, 2]))
in0Con24020 = tf.keras.layers.Input(shape=([1, 2, 1]))
in0Glo43630 = tf.keras.layers.Input(shape=([1, 2, 1]))

Dot37083 = keras.layers.Dot(axes=(1, 1), name = 'Dot37083', )([in0Dot37083,in1Dot37083])
Res63722 = keras.layers.Reshape((1, 1), name = 'Res63722', )(Dot37083)
Sim47247 = keras.layers.SimpleRNN(2,name = 'Sim47247', )(Res63722)
Res938 = keras.layers.Reshape((2, 1), name = 'Res938', )(Sim47247)
Thr18859 = keras.layers.ThresholdedReLU(theta=3.035749977168587, name = 'Thr18859', input_shape=(2, 2))(in0Thr18859)
Dot17915 = keras.layers.Dot(axes=(1, 1), name = 'Dot17915', )([Res938,Thr18859])
Res59486 = keras.layers.Reshape((1, 2, 1), name = 'Res59486', )(Dot17915)
Con24020 = keras.layers.Concatenate(axis=3, name = 'Con24020', )([Res59486,in0Con24020])
Glo43630 = keras.layers.GlobalMaxPool2D(name = 'Glo43630', )(in0Glo43630)
Res41101 = keras.layers.Reshape((1, 1), name = 'Res41101', )(Glo43630)
Res91744 = keras.layers.Reshape((1, 1, 1), name = 'Res91744', )(Res41101)
Con50115 = keras.layers.Conv2D(2, (1, 1),strides=(1, 1), padding='same', dilation_rate=(1, 1), name = 'Con50115', )(Res91744)
Zer46532 = keras.layers.ZeroPadding2D(padding=((0, 0), (1, 0)), name = 'Zer46532', )(Con50115)
Min39650 = keras.layers.Minimum(name = 'Min39650', )([Con24020,Zer46532])
model = tf.keras.models.Model(inputs=[in0Dot37083,in1Dot37083,in0Thr18859,in0Con24020,in0Glo43630], outputs=Min39650)
w = model.get_layer('Sim47247').get_weights() 
w[0] = np.array([[7, 8]])
w[1] = np.array([[3, 1], [10, 8]])
w[2] = np.array([7, 7])
model.get_layer('Sim47247').set_weights(w) 
w = model.get_layer('Con50115').get_weights() 
w[0] = np.array([[[[0.1233, 0.5792]]]])
w[1] = np.array([0, 0])
model.get_layer('Con50115').set_weights(w) 
in0Dot37083 = tf.constant([[0.3309, 0.7638]])
in1Dot37083 = tf.constant([[0.5341, 0.0446]])
in0Thr18859 = tf.constant([[[0.9643, 0.3096], [0.6202, 0.3951]]])
in0Con24020 = tf.constant([[[[0.1373], [0.547]]]])
in0Glo43630 = tf.constant([[[[1.9923], [1.4472]]]])
print (np.array2string(model.predict([in0Dot37083,in1Dot37083,in0Thr18859,in0Con24020,in0Glo43630],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Min39650.png')

LDot37083 = dot_layer([[0.3309, 0.7638]], [[0.5341, 0.0446]], 1, 1, Dot37083), 
LRes63722 = reshape_layer(Dot37083, [1, 1], Res63722), 
LSim47247 = simple_rnn_layer(Res63722,[[7, 8]],[[3, 1], [10, 8]],[7, 7], Sim47247), 
LRes938 = reshape_layer(Sim47247, [2, 1], Res938), 
LThr18859 = thresholded_relu_layer([[[0.9643, 0.3096], [0.6202, 0.3951]]], 3.035749977168587, Thr18859), 
LDot17915 = dot_layer(Res938,Thr18859, 1, 1, Dot17915), 
LRes59486 = reshape_layer(Dot17915, [1, 2, 1], Res59486), 
LCon24020 = concatenate_layer([Res59486,[[[[0.1373], [0.547]]]]], 3, Con24020), 
LGlo43630 = global_max_pool2D_layer([[[[1.9923], [1.4472]]]], Glo43630), 
LRes41101 = reshape_layer(Glo43630, [1, 1], Res41101), 
LRes91744 = reshape_layer(Res41101, [1, 1, 1], Res91744), 
LCon50115 = conv2D_layer(Res91744, 1, 1,[[[[0.1233, 0.5792]]]],[0, 0], 1, 1, true, 1, 1, Con50115), 
LZer46532 = zero_padding2D_layer(Con50115, 0, 0, 1, 0, Zer46532), 
LMin39650 = minimum_layer([Con24020,Zer46532], Min39650), 
exec_layers([LDot37083,LRes63722,LSim47247,LRes938,LThr18859,LDot17915,LRes59486,LCon24020,LGlo43630,LRes41101,LRes91744,LCon50115,LZer46532,LMin39650],["Dot37083","Res63722","Sim47247","Res938","Thr18859","Dot17915","Res59486","Con24020","Glo43630","Res41101","Res91744","Con50115","Zer46532","Min39650"],Min39650,"Min39650")

Actual (Unparsed): [[[[0.0000000, 0.0000000], [0.0000000, 0.5470000]]]]

Expected (Unparsed): [[[[0.0,0],[0.0,0.547]]]]

Actual:   [[[[0, 0], [0, 0.547]]]]

Expected: [[[[0, 0], [0, 0.547]]]]