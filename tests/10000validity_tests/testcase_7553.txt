import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Zer56237 = tf.keras.layers.Input(shape=([2, 1, 3]))
in0Con36333 = tf.keras.layers.Input(shape=([9, 4, 8]))
in0Cro30032 = tf.keras.layers.Input(shape=([2, 1, 4, 3]))
in0Mul82897 = tf.keras.layers.Input(shape=([2, 1, 1]))
in1Mul82897 = tf.keras.layers.Input(shape=([2, 1, 1]))
in0Con12989 = tf.keras.layers.Input(shape=([2, 1, 8]))

Zer56237 = keras.layers.ZeroPadding2D(padding=((1, 1), (1, 1)), name = 'Zer56237', )(in0Zer56237)
Res57311 = keras.layers.Reshape((4, 9), name = 'Res57311', )(Zer56237)
Per9379 = keras.layers.Permute((2,1), name = 'Per9379',)(Res57311)
Res45333 = keras.layers.Reshape((9, 4, 1), name = 'Res45333', )(Per9379)
Con36333 = keras.layers.Concatenate(axis=3, name = 'Con36333', )([Res45333,in0Con36333])
Cro30032 = keras.layers.Cropping3D(cropping=((0, 1), (0, 0), (1, 0)), name = 'Cro30032', )(in0Cro30032)
Res82078 = keras.layers.Reshape((1, 1, 9), name = 'Res82078', )(Cro30032)
Zer81803 = keras.layers.ZeroPadding2D(padding=((1, 0), (0, 0)), name = 'Zer81803', )(Res82078)
Mul82897 = keras.layers.Multiply(name = 'Mul82897', )([in0Mul82897,in1Mul82897])
Con12989 = keras.layers.Concatenate(axis=3, name = 'Con12989', )([Mul82897,in0Con12989])
Max94046 = keras.layers.Maximum(name = 'Max94046', )([Zer81803,Con12989])
Zer95126 = keras.layers.ZeroPadding2D(padding=((7, 0), (3, 0)), name = 'Zer95126', )(Max94046)
Mul71980 = keras.layers.Multiply(name = 'Mul71980', )([Con36333,Zer95126])
Thr38838 = keras.layers.ThresholdedReLU(theta=3.5158075254044867, name = 'Thr38838', )(Mul71980)
model = tf.keras.models.Model(inputs=[in0Zer56237,in0Con36333,in0Cro30032,in0Mul82897,in1Mul82897,in0Con12989], outputs=Thr38838)
in0Zer56237 = tf.constant([[[[1.0395, 1.6765, 1.3181]], [[1.3581, 1.1695, 1.0047]]]])
in0Con36333 = tf.constant([[[[0.5268, 0.4177, 0.924, 0.8179, 0.6861, 0.6729, 0.1538, 0.5683], [0.147, 0.0669, 0.2277, 0.4937, 0.3097, 0.3284, 0.7978, 0.9803], [0.5259, 0.6014, 0.4369, 0.4855, 0.786, 0.9664, 0.1142, 0.5903], [0.9258, 0.4462, 0.9156, 0.6846, 0.3566, 0.4822, 0.4009, 0.5895]], [[0.2322, 0.4445, 0.2968, 0.011, 0.9174, 0.601, 0.0602, 0.0987], [0.5983, 0.1121, 0.2154, 0.5407, 0.8829, 0.0386, 0.2681, 0.5605], [0.2816, 0.0573, 0.4299, 0.907, 0.5279, 0.5628, 0.3474, 0.424], [0.8027, 0.0988, 0.5258, 0.0734, 0.0585, 0.6152, 0.16, 0.3438]], [[0.8052, 0.8688, 0.6398, 0.8273, 0.917, 0.4042, 0.0873, 0.367], [0.2442, 0.9356, 0.8983, 0.5905, 0.0753, 0.6283, 0.4116, 0.8292], [0.7846, 0.7304, 0.5101, 0.3947, 0.3191, 0.2406, 0.1683, 0.9342], [0.5359, 0.8152, 0.7063, 0.12, 0.7787, 0.9154, 0.7829, 0.2384]], [[0.5041, 0.2743, 0.9667, 0.344, 0.2085, 0.1246, 0.0609, 0.5135], [0.3881, 0.2671, 0.2261, 0.3987, 0.771, 0.9872, 0.345, 0.7095], [0.6013, 0.0257, 0.0008, 0.483, 0.3271, 0.2996, 0.9088, 0.9916], [0.645, 0.8334, 0.6268, 0.9289, 0.4887, 0.4081, 0.9004, 0.0724]], [[0.2151, 0.7685, 0.0515, 0.9687, 0.9355, 0.8332, 0.4049, 0.3131], [0.6687, 0.2496, 0.8703, 0.6005, 0.7517, 0.806, 0.4399, 0.316], [0.7312, 0.6657, 0.5488, 0.4007, 0.7854, 0.1276, 0.9526, 0.9807], [0.5715, 0.629, 0.0228, 0.3797, 0.2849, 0.0102, 0.1331, 0.2469]], [[0.6254, 0.6327, 0.117, 0.2302, 0.316, 0.811, 0.6117, 0.9968], [0.7953, 0.1509, 0.4746, 0.564, 0.7137, 0.8193, 0.3553, 0.8389], [0.9048, 0.4652, 0.9377, 0.9863, 0.5725, 0.5062, 0.3303, 0.7466], [0.5388, 0.7527, 0.5717, 0.1042, 0.5302, 0.8974, 0.2485, 0.7743]], [[0.6459, 0.221, 0.7735, 0.818, 0.3468, 0.9793, 0.9612, 0.3227], [0.5329, 0.3258, 0.1563, 0.492, 0.5344, 0.2989, 0.319, 0.6771], [0.1314, 0.3552, 0.1514, 0.853, 0.0416, 0.1666, 0.5638, 0.7909], [0.6628, 0.9162, 0.5185, 0.7143, 0.2456, 0.1232, 0.5683, 0.5365]], [[0.0837, 0.1099, 0.2069, 0.8726, 0.7568, 0.5807, 0.4909, 0.8974], [0.9383, 0.4277, 0.2572, 0.7746, 0.7888, 0.7971, 0.6608, 0.8228], [0.497, 0.6574, 0.6875, 0.8035, 0.0988, 0.5953, 0.761, 0.718], [0.3119, 0.3301, 0.552, 0.2795, 0.7518, 0.4869, 0.6255, 0.794]], [[0.5657, 0.4975, 0.6173, 0.5254, 0.212, 0.1094, 0.2156, 0.7474], [0.8443, 0.8708, 0.3445, 0.5925, 0.5163, 0.1393, 0.5939, 0.4946], [0.2121, 0.6089, 0.1208, 0.4955, 0.5331, 0.0895, 0.9611, 0.9317], [0.7177, 0.2903, 0.9305, 0.0541, 0.5608, 0.6513, 0.0719, 0.9447]]]])
in0Cro30032 = tf.constant([[[[[1.8934, 1.7073, 1.5945], [1.6458, 1.2398, 1.3749], [1.1165, 1.2005, 1.7462], [1.2346, 1.0342, 1.9751]]], [[[1.8298, 1.2207, 1.3783], [1.022, 1.1062, 1.528], [1.3198, 1.77, 1.2388], [1.0017, 1.1389, 1.4713]]]]])
in0Mul82897 = tf.constant([[[[0.5429]], [[0.8459]]]])
in1Mul82897 = tf.constant([[[[0.4639]], [[0.7513]]]])
in0Con12989 = tf.constant([[[[0.2528, 0.2979, 0.9319, 0.5522, 0.3922, 0.3168, 0.5155, 0.4269]], [[0.6327, 0.9204, 0.6235, 0.1371, 0.2235, 0.0667, 0.4223, 0.5099]]]])
print (np.array2string(model.predict([in0Zer56237,in0Con36333,in0Cro30032,in0Mul82897,in1Mul82897,in0Con12989],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Thr38838.png')

LZer56237 = zero_padding2D_layer([[[[1.0395, 1.6765, 1.3181]], [[1.3581, 1.1695, 1.0047]]]], 1, 1, 1, 1, Zer56237), 
LRes57311 = reshape_layer(Zer56237, [4, 9], Res57311), 
LPer9379 = permute_layer(Res57311, 2,1, Per9379), 
LRes45333 = reshape_layer(Per9379, [9, 4, 1], Res45333), 
LCon36333 = concatenate_layer([Res45333,[[[[0.5268, 0.4177, 0.924, 0.8179, 0.6861, 0.6729, 0.1538, 0.5683], [0.147, 0.0669, 0.2277, 0.4937, 0.3097, 0.3284, 0.7978, 0.9803], [0.5259, 0.6014, 0.4369, 0.4855, 0.786, 0.9664, 0.1142, 0.5903], [0.9258, 0.4462, 0.9156, 0.6846, 0.3566, 0.4822, 0.4009, 0.5895]], [[0.2322, 0.4445, 0.2968, 0.011, 0.9174, 0.601, 0.0602, 0.0987], [0.5983, 0.1121, 0.2154, 0.5407, 0.8829, 0.0386, 0.2681, 0.5605], [0.2816, 0.0573, 0.4299, 0.907, 0.5279, 0.5628, 0.3474, 0.424], [0.8027, 0.0988, 0.5258, 0.0734, 0.0585, 0.6152, 0.16, 0.3438]], [[0.8052, 0.8688, 0.6398, 0.8273, 0.917, 0.4042, 0.0873, 0.367], [0.2442, 0.9356, 0.8983, 0.5905, 0.0753, 0.6283, 0.4116, 0.8292], [0.7846, 0.7304, 0.5101, 0.3947, 0.3191, 0.2406, 0.1683, 0.9342], [0.5359, 0.8152, 0.7063, 0.12, 0.7787, 0.9154, 0.7829, 0.2384]], [[0.5041, 0.2743, 0.9667, 0.344, 0.2085, 0.1246, 0.0609, 0.5135], [0.3881, 0.2671, 0.2261, 0.3987, 0.771, 0.9872, 0.345, 0.7095], [0.6013, 0.0257, 0.0008, 0.483, 0.3271, 0.2996, 0.9088, 0.9916], [0.645, 0.8334, 0.6268, 0.9289, 0.4887, 0.4081, 0.9004, 0.0724]], [[0.2151, 0.7685, 0.0515, 0.9687, 0.9355, 0.8332, 0.4049, 0.3131], [0.6687, 0.2496, 0.8703, 0.6005, 0.7517, 0.806, 0.4399, 0.316], [0.7312, 0.6657, 0.5488, 0.4007, 0.7854, 0.1276, 0.9526, 0.9807], [0.5715, 0.629, 0.0228, 0.3797, 0.2849, 0.0102, 0.1331, 0.2469]], [[0.6254, 0.6327, 0.117, 0.2302, 0.316, 0.811, 0.6117, 0.9968], [0.7953, 0.1509, 0.4746, 0.564, 0.7137, 0.8193, 0.3553, 0.8389], [0.9048, 0.4652, 0.9377, 0.9863, 0.5725, 0.5062, 0.3303, 0.7466], [0.5388, 0.7527, 0.5717, 0.1042, 0.5302, 0.8974, 0.2485, 0.7743]], [[0.6459, 0.221, 0.7735, 0.818, 0.3468, 0.9793, 0.9612, 0.3227], [0.5329, 0.3258, 0.1563, 0.492, 0.5344, 0.2989, 0.319, 0.6771], [0.1314, 0.3552, 0.1514, 0.853, 0.0416, 0.1666, 0.5638, 0.7909], [0.6628, 0.9162, 0.5185, 0.7143, 0.2456, 0.1232, 0.5683, 0.5365]], [[0.0837, 0.1099, 0.2069, 0.8726, 0.7568, 0.5807, 0.4909, 0.8974], [0.9383, 0.4277, 0.2572, 0.7746, 0.7888, 0.7971, 0.6608, 0.8228], [0.497, 0.6574, 0.6875, 0.8035, 0.0988, 0.5953, 0.761, 0.718], [0.3119, 0.3301, 0.552, 0.2795, 0.7518, 0.4869, 0.6255, 0.794]], [[0.5657, 0.4975, 0.6173, 0.5254, 0.212, 0.1094, 0.2156, 0.7474], [0.8443, 0.8708, 0.3445, 0.5925, 0.5163, 0.1393, 0.5939, 0.4946], [0.2121, 0.6089, 0.1208, 0.4955, 0.5331, 0.0895, 0.9611, 0.9317], [0.7177, 0.2903, 0.9305, 0.0541, 0.5608, 0.6513, 0.0719, 0.9447]]]]], 3, Con36333), 
LCro30032 = cropping3D_layer([[[[[1.8934, 1.7073, 1.5945], [1.6458, 1.2398, 1.3749], [1.1165, 1.2005, 1.7462], [1.2346, 1.0342, 1.9751]]], [[[1.8298, 1.2207, 1.3783], [1.022, 1.1062, 1.528], [1.3198, 1.77, 1.2388], [1.0017, 1.1389, 1.4713]]]]], 0, 1, 0, 0, 1, 0, Cro30032), 
LRes82078 = reshape_layer(Cro30032, [1, 1, 9], Res82078), 
LZer81803 = zero_padding2D_layer(Res82078, 1, 0, 0, 0, Zer81803), 
LMul82897 = multiply_layer([[[[[0.5429]], [[0.8459]]]], [[[[0.4639]], [[0.7513]]]]], Mul82897), 
LCon12989 = concatenate_layer([Mul82897,[[[[0.2528, 0.2979, 0.9319, 0.5522, 0.3922, 0.3168, 0.5155, 0.4269]], [[0.6327, 0.9204, 0.6235, 0.1371, 0.2235, 0.0667, 0.4223, 0.5099]]]]], 3, Con12989), 
LMax94046 = maximum_layer([Zer81803,Con12989], Max94046), 
LZer95126 = zero_padding2D_layer(Max94046, 7, 0, 3, 0, Zer95126), 
LMul71980 = multiply_layer([Con36333,Zer95126], Mul71980), 
LThr38838 = thresholded_relu_layer(Mul71980, 3.5158075254044867, Thr38838), 
exec_layers([LZer56237,LRes57311,LPer9379,LRes45333,LCon36333,LCro30032,LRes82078,LZer81803,LMul82897,LCon12989,LMax94046,LZer95126,LMul71980,LThr38838],["Zer56237","Res57311","Per9379","Res45333","Con36333","Cro30032","Res82078","Zer81803","Mul82897","Con12989","Max94046","Zer95126","Mul71980","Thr38838"],Thr38838,"Thr38838")

Actual (Unparsed): [[[[0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000]], [[0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000]], [[0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000]], [[0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000]], [[0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000]], [[0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000]], [[0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000]], [[0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000]], [[0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000]]]]

Expected (Unparsed): [[[[0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0]],[[0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0]],[[0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0]],[[0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0]],[[0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0]],[[0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0]],[[0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0]],[[0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0]],[[0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0]]]]

Actual:   [[[[0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0]], [[0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0]], [[0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0]], [[0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0]], [[0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0]], [[0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0]], [[0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0]], [[0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0]], [[0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0]]]]

Expected: [[[[0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0]], [[0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0]], [[0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0]], [[0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0]], [[0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0]], [[0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0]], [[0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0]], [[0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0]], [[0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0]]]]