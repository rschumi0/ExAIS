import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Mul98152 = tf.keras.layers.Input(shape=([2, 2, 1, 1]))
in1Mul98152 = tf.keras.layers.Input(shape=([2, 2, 1, 1]))
in0Con67346 = tf.keras.layers.Input(shape=([4, 4, 2]))
in0Cro68670 = tf.keras.layers.Input(shape=([4, 1, 3]))

Mul98152 = keras.layers.Multiply(name = 'Mul98152', )([in0Mul98152,in1Mul98152])
Res96481 = keras.layers.Reshape((2, 2, 1), name = 'Res96481', )(Mul98152)
Zer68527 = keras.layers.ZeroPadding2D(padding=((1, 1), (1, 1)), name = 'Zer68527', )(Res96481)
Con67346 = keras.layers.Concatenate(axis=3, name = 'Con67346', )([Zer68527,in0Con67346])
Cro68670 = keras.layers.Cropping2D(cropping=((3, 0), (0, 0)), name = 'Cro68670', )(in0Cro68670)
Zer79593 = keras.layers.ZeroPadding2D(padding=((3, 0), (3, 0)), name = 'Zer79593', )(Cro68670)
Ave57085 = keras.layers.Average(name = 'Ave57085', )([Con67346,Zer79593])
Mas8380 = keras.layers.Masking(mask_value=1, name = 'Mas8380', )(Ave57085)
model = tf.keras.models.Model(inputs=[in0Mul98152,in1Mul98152,in0Con67346,in0Cro68670], outputs=Mas8380)
in0Mul98152 = tf.constant([[[[[0.0749]], [[0.7309]]], [[[0.9588]], [[0.0821]]]]])
in1Mul98152 = tf.constant([[[[[0.6173]], [[0.6934]]], [[[0.4376]], [[0.8538]]]]])
in0Con67346 = tf.constant([[[[0.5047, 0.6049], [0.9332, 0.9911], [0.0066, 0.256], [0.5088, 0.2854]], [[0.4407, 0.1917], [0.5079, 0.7958], [0.4695, 0.9531], [0.5447, 0.7852]], [[0.9671, 0.5299], [0.1529, 0.9875], [0.9826, 0.0693], [0.0637, 0.5282]], [[0.014, 0.7649], [0.2351, 0.4622], [0.0839, 0.432], [0.0339, 0.3011]]]])
in0Cro68670 = tf.constant([[[[1.2209, 1.1634, 1.0987]], [[1.3311, 1.8399, 1.9119]], [[1.0237, 1.7457, 1.7889]], [[1.1998, 1.4719, 1.6429]]]])
print (np.array2string(model.predict([in0Mul98152,in1Mul98152,in0Con67346,in0Cro68670],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Mas8380.png')

LMul98152 = multiply_layer([[[[[[0.0749]], [[0.7309]]], [[[0.9588]], [[0.0821]]]]], [[[[[0.6173]], [[0.6934]]], [[[0.4376]], [[0.8538]]]]]], Mul98152), 
LRes96481 = reshape_layer(Mul98152, [2, 2, 1], Res96481), 
LZer68527 = zero_padding2D_layer(Res96481, 1, 1, 1, 1, Zer68527), 
LCon67346 = concatenate_layer([Zer68527,[[[[0.5047, 0.6049], [0.9332, 0.9911], [0.0066, 0.256], [0.5088, 0.2854]], [[0.4407, 0.1917], [0.5079, 0.7958], [0.4695, 0.9531], [0.5447, 0.7852]], [[0.9671, 0.5299], [0.1529, 0.9875], [0.9826, 0.0693], [0.0637, 0.5282]], [[0.014, 0.7649], [0.2351, 0.4622], [0.0839, 0.432], [0.0339, 0.3011]]]]], 3, Con67346), 
LCro68670 = cropping2D_layer([[[[1.2209, 1.1634, 1.0987]], [[1.3311, 1.8399, 1.9119]], [[1.0237, 1.7457, 1.7889]], [[1.1998, 1.4719, 1.6429]]]], 3, 0, 0, 0, Cro68670), 
LZer79593 = zero_padding2D_layer(Cro68670, 3, 0, 3, 0, Zer79593), 
LAve57085 = average_layer([Con67346,Zer79593], Ave57085), 
LMas8380 = masking_layer(Ave57085, 1, Mas8380), 
exec_layers([LMul98152,LRes96481,LZer68527,LCon67346,LCro68670,LZer79593,LAve57085,LMas8380],["Mul98152","Res96481","Zer68527","Con67346","Cro68670","Zer79593","Ave57085","Mas8380"],Mas8380,"Mas8380")

Actual (Unparsed): [[[[0.0000000, 0.2523500, 0.3024500], [0.0000000, 0.4666000, 0.4955500], [0.0000000, 0.0033000, 0.1280000], [0.0000000, 0.2544000, 0.1427000]], [[0.0000000, 0.2203500, 0.0958500], [0.0231179, 0.2539500, 0.3979000], [0.2534030, 0.2347500, 0.4765500], [0.0000000, 0.2723500, 0.3926000]], [[0.0000000, 0.4835500, 0.2649500], [0.2097854, 0.0764500, 0.4937500], [0.0350485, 0.4913000, 0.0346500], [0.0000000, 0.0318500, 0.2641000]], [[0.0000000, 0.0070000, 0.3824500], [0.0000000, 0.1175500, 0.2311000], [0.0000000, 0.0419500, 0.2160000], [0.5999000, 0.7529000, 0.9720000]]]]

Expected (Unparsed): [[[[0,0.25235,0.30245],[0,0.4666,0.49555],[0,0.0033,0.128],[0,0.2544,0.1427]],[[0,0.22035,0.09585],[0.023117884999999998,0.25395,0.3979],[0.25340303000000003,0.23475,0.47655],[0,0.27235,0.3926]],[[0,0.48355,0.26495],[0.20978544,0.07645,0.49375],[0.03504849,0.4913,0.03465],[0,0.03185,0.2641]],[[0,0.007,0.38245],[0,0.11755,0.2311],[0,0.04195,0.216],[0.5999,0.7529,0.972]]]]

Actual:   [[[[0, 0.2524, 0.3025], [0, 0.4666, 0.4956], [0, 0.0033, 0.128], [0, 0.2544, 0.1427]], [[0, 0.2204, 0.0959], [0.0232, 0.254, 0.3979], [0.2535, 0.2348, 0.4766], [0, 0.2724, 0.3926]], [[0, 0.4836, 0.265], [0.2098, 0.0765, 0.4938], [0.0351, 0.4913, 0.0347], [0, 0.0319, 0.2641]], [[0, 0.007, 0.3825], [0, 0.1176, 0.2311], [0, 0.042, 0.216], [0.5999, 0.7529, 0.972]]]]

Expected: [[[[0, 0.2524, 0.3025], [0, 0.4666, 0.4956], [0, 0.0033, 0.128], [0, 0.2544, 0.1427]], [[0, 0.2204, 0.0959], [0.0232, 0.254, 0.3979], [0.2535, 0.2348, 0.4766], [0, 0.2724, 0.3926]], [[0, 0.4836, 0.265], [0.2098, 0.0765, 0.4938], [0.0351, 0.4913, 0.0347], [0, 0.0319, 0.2641]], [[0, 0.007, 0.3825], [0, 0.1176, 0.2311], [0, 0.042, 0.216], [0.5999, 0.7529, 0.972]]]]