import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Mul52354 = tf.keras.layers.Input(shape=([2, 1, 2, 1]))
in1Mul52354 = tf.keras.layers.Input(shape=([2, 1, 2, 1]))

Mul52354 = keras.layers.Multiply(name = 'Mul52354', )([in0Mul52354,in1Mul52354])
Thr60989 = keras.layers.ThresholdedReLU(theta=0.9718555231630066, name = 'Thr60989', )(Mul52354)
model = tf.keras.models.Model(inputs=[in0Mul52354,in1Mul52354], outputs=Thr60989)
in0Mul52354 = tf.constant([[[[[0.8284], [0.9348]]], [[[0.5491], [0.4366]]]]])
in1Mul52354 = tf.constant([[[[[0.1028], [0.4865]]], [[[0.4273], [0.0536]]]]])
print (np.array2string(model.predict([in0Mul52354,in1Mul52354],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Thr60989.png')

LMul52354 = multiply_layer([[[[[[0.8284], [0.9348]]], [[[0.5491], [0.4366]]]]], [[[[[0.1028], [0.4865]]], [[[0.4273], [0.0536]]]]]], Mul52354), 
LThr60989 = thresholded_relu_layer(Mul52354, 0.9718555231630066, Thr60989), 
exec_layers([LMul52354,LThr60989],["Mul52354","Thr60989"],Thr60989,"Thr60989")

Actual (Unparsed): [[[[[0.0000000], [0.0000000]]], [[[0.0000000], [0.0000000]]]]]

Expected (Unparsed): [[[[[0],[0]]],[[[0],[0]]]]]

Actual:   [[[[[0], [0]]], [[[0], [0]]]]]

Expected: [[[[[0], [0]]], [[[0], [0]]]]]