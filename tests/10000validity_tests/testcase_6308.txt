import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Thr33284 = tf.keras.layers.Input(shape=([2, 2, 1, 2]))

Thr33284 = keras.layers.ThresholdedReLU(theta=5.6761984720240735, name = 'Thr33284', input_shape=(2, 2, 1, 2))(in0Thr33284)
Res49984 = keras.layers.Reshape((2, 2, 2), name = 'Res49984', )(Thr33284)
Res13135 = keras.layers.Reshape((2, 4), name = 'Res13135', )(Res49984)
Glo44885 = keras.layers.GlobalMaxPool1D(name = 'Glo44885', )(Res13135)
Res35868 = keras.layers.Reshape((4, 1), name = 'Res35868', )(Glo44885)
Sim47877 = keras.layers.SimpleRNN(1,name = 'Sim47877', )(Res35868)
model = tf.keras.models.Model(inputs=[in0Thr33284], outputs=Sim47877)
w = model.get_layer('Sim47877').get_weights() 
w[0] = np.array([[10]])
w[1] = np.array([[6]])
w[2] = np.array([5])
model.get_layer('Sim47877').set_weights(w) 
in0Thr33284 = tf.constant([[[[[0.2388, 0.186]], [[0.6822, 0.0356]]], [[[0.1969, 0.4828]], [[0.209, 0.4969]]]]])
print (np.array2string(model.predict([in0Thr33284],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Sim47877.png')

LThr33284 = thresholded_relu_layer([[[[[0.2388, 0.186]], [[0.6822, 0.0356]]], [[[0.1969, 0.4828]], [[0.209, 0.4969]]]]], 5.6761984720240735, Thr33284), 
LRes49984 = reshape_layer(Thr33284, [2, 2, 2], Res49984), 
LRes13135 = reshape_layer(Res49984, [2, 4], Res13135), 
LGlo44885 = global_max_pool1D_layer(Res13135, Glo44885), 
LRes35868 = reshape_layer(Glo44885, [4, 1], Res35868), 
LSim47877 = simple_rnn_layer(Res35868,[[10]],[[6]],[5], Sim47877), 
exec_layers([LThr33284,LRes49984,LRes13135,LGlo44885,LRes35868,LSim47877],["Thr33284","Res49984","Res13135","Glo44885","Res35868","Sim47877"],Sim47877,"Sim47877")

Actual (Unparsed): [[1.0000000]]

Expected (Unparsed): [[0.9999999994421064]]

Actual:   [[1]]

Expected: [[1]]