import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Zer74825 = tf.keras.layers.Input(shape=([4, 1]))

Zer74825 = keras.layers.ZeroPadding1D(padding=((1, 1)), name = 'Zer74825', )(in0Zer74825)
Res77948 = keras.layers.Reshape((6, 1, 1), name = 'Res77948', )(Zer74825)
Sep36818 = keras.layers.SeparableConv2D(4, (1, 1),strides=(2, 2), padding='valid', name = 'Sep36818', )(Res77948)
model = tf.keras.models.Model(inputs=[in0Zer74825], outputs=Sep36818)
w = model.get_layer('Sep36818').get_weights() 
w[0] = np.array([[[[0.0275]]]])
w[1] = np.array([[[[0.2922, 0.8456, 0.8356, 0.6372]]]])
w[2] = np.array([0, 0, 0, 0])
model.get_layer('Sep36818').set_weights(w) 
in0Zer74825 = tf.constant([[[1.0394], [1.7305], [1.226], [1.7004]]])
print (np.array2string(model.predict([in0Zer74825],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Sep36818.png')

LZer74825 = zero_padding1D_layer([[[1.0394], [1.7305], [1.226], [1.7004]]], 1, 1, Zer74825), 
LRes77948 = reshape_layer(Zer74825, [6, 1, 1], Res77948), 
LSep36818 = separable_conv2D_layer(Res77948, 1, 1,[[[[[0.0275]]]],[[[[0.2922, 0.8456, 0.8356, 0.6372]]]]],[0, 0, 0, 0], 2, 2, false, Sep36818), 
exec_layers([LZer74825,LRes77948,LSep36818],["Zer74825","Res77948","Sep36818"],Sep36818,"Sep36818")

Actual (Unparsed): [[[[0.0000000, 0.0000000, 0.0000000, 0.0000000]], [[0.0139054, 0.0402410, 0.0397652, 0.0303236]], [[0.0136636, 0.0395411, 0.0390735, 0.0297961]]]]

Expected (Unparsed): [[[[0.0,0.0,0.0,0.0]],[[0.01390543275,0.040241047,0.0397651595,0.0303235515]],[[0.0136635642,0.039541101599999996,0.039073491599999996,0.029796109199999997]]]]

Actual:   [[[[0, 0, 0, 0]], [[0.014, 0.0403, 0.0398, 0.0304]], [[0.0137, 0.0396, 0.0391, 0.0298]]]]

Expected: [[[[0, 0, 0, 0]], [[0.014, 0.0403, 0.0398, 0.0304]], [[0.0137, 0.0396, 0.0391, 0.0298]]]]