import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Min38059 = tf.keras.layers.Input(shape=([2, 1, 1, 2]))
in1Min38059 = tf.keras.layers.Input(shape=([2, 1, 1, 2]))

Min38059 = keras.layers.Minimum(name = 'Min38059', )([in0Min38059,in1Min38059])
Res61048 = keras.layers.Reshape((2, 1, 2), name = 'Res61048', )(Min38059)
Sep68720 = keras.layers.SeparableConv2D(2, (2, 1),strides=(1, 1), padding='same', name = 'Sep68720', )(Res61048)
model = tf.keras.models.Model(inputs=[in0Min38059,in1Min38059], outputs=Sep68720)
w = model.get_layer('Sep68720').get_weights() 
w[0] = np.array([[[[0.953], [0.2776]]], [[[0.4224], [0.3271]]]])
w[1] = np.array([[[[0.2924, 0.8632], [0.4483, 0.5681]]]])
w[2] = np.array([0, 0])
model.get_layer('Sep68720').set_weights(w) 
in0Min38059 = tf.constant([[[[[0.3361, 0.6055]]], [[[0.4706, 0.1024]]]]])
in1Min38059 = tf.constant([[[[[0.2056, 0.0267]]], [[[0.1842, 0.0007]]]]])
print (np.array2string(model.predict([in0Min38059,in1Min38059],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Sep68720.png')

LMin38059 = minimum_layer([[[[[[0.3361, 0.6055]]], [[[0.4706, 0.1024]]]]], [[[[[0.2056, 0.0267]]], [[[0.1842, 0.0007]]]]]], Min38059), 
LRes61048 = reshape_layer(Min38059, [2, 1, 2], Res61048), 
LSep68720 = separable_conv2D_layer(Res61048, 2, 1,[[[[[0.953], [0.2776]]], [[[0.4224], [0.3271]]]],[[[[0.2924, 0.8632], [0.4483, 0.5681]]]]],[0, 0], 1, 1, true, Sep68720), 
exec_layers([LMin38059,LRes61048,LSep68720],["Min38059","Res61048","Sep68720"],Sep68720,"Sep68720")

Actual (Unparsed): [[[[0.0834678, 0.2406356]], [[0.0514158, 0.1516388]]]]

Expected (Unparsed): [[[[0.083467829099,0.24063564362499998]],[[0.051415769895999996,0.151638765512]]]]

Actual:   [[[[0.0835, 0.2407]], [[0.0515, 0.1517]]]]

Expected: [[[[0.0835, 0.2407]], [[0.0515, 0.1517]]]]