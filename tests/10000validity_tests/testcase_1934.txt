import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Con85773 = tf.keras.layers.Input(shape=([1, 2]))
in0Ave35637 = tf.keras.layers.Input(shape=([1, 1]))
in1Ave35637 = tf.keras.layers.Input(shape=([1, 1]))
in0Con24702 = tf.keras.layers.Input(shape=([1, 2]))
in0Sub5924 = tf.keras.layers.Input(shape=([2]))
in1Sub5924 = tf.keras.layers.Input(shape=([2]))
in0Con56331 = tf.keras.layers.Input(shape=([1, 2]))

Con85773 = keras.layers.Conv1D(3, (1),strides=(1), padding='same', dilation_rate=(1), name = 'Con85773', )(in0Con85773)
Ave35637 = keras.layers.Average(name = 'Ave35637', )([in0Ave35637,in1Ave35637])
Cro3115 = keras.layers.Cropping1D(cropping=((0, 0)), name = 'Cro3115', )(Ave35637)
Thr35816 = keras.layers.ThresholdedReLU(theta=1.9586515267906712, name = 'Thr35816', )(Cro3115)
Con24702 = keras.layers.Concatenate(axis=2, name = 'Con24702', )([Thr35816,in0Con24702])
Mul91612 = keras.layers.Multiply(name = 'Mul91612', )([Con85773,Con24702])
Sub5924 = keras.layers.Subtract(name = 'Sub5924', )([in0Sub5924,in1Sub5924])
Res52545 = keras.layers.Reshape((2, 1), name = 'Res52545', )(Sub5924)
Ave66646 = keras.layers.AveragePooling1D(pool_size=(1), strides=(2), padding='same', name = 'Ave66646', )(Res52545)
Con56331 = keras.layers.Concatenate(axis=2, name = 'Con56331', )([Ave66646,in0Con56331])
Max19290 = keras.layers.Maximum(name = 'Max19290', )([Mul91612,Con56331])
model = tf.keras.models.Model(inputs=[in0Con85773,in0Ave35637,in1Ave35637,in0Con24702,in0Sub5924,in1Sub5924,in0Con56331], outputs=Max19290)
w = model.get_layer('Con85773').get_weights() 
w[0] = np.array([[[0.131, 0.9247, 0.7706], [0.4569, 0.8311, 0.9213]]])
w[1] = np.array([0, 0, 0])
model.get_layer('Con85773').set_weights(w) 
in0Con85773 = tf.constant([[[0.1011, 0.2089]]])
in0Ave35637 = tf.constant([[[0.9562]]])
in1Ave35637 = tf.constant([[[0.1922]]])
in0Con24702 = tf.constant([[[0.8929, 0.6708]]])
in0Sub5924 = tf.constant([[0.9528, 0.0207]])
in1Sub5924 = tf.constant([[0.2872, 0.7085]])
in0Con56331 = tf.constant([[[0.9373, 0.8558]]])
print (np.array2string(model.predict([in0Con85773,in0Ave35637,in1Ave35637,in0Con24702,in0Sub5924,in1Sub5924,in0Con56331],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Max19290.png')

LCon85773 = conv1D_layer([[[0.1011, 0.2089]]], 1,[[[0.131, 0.9247, 0.7706], [0.4569, 0.8311, 0.9213]]],[0, 0, 0], 1, true, 1, Con85773), 
LAve35637 = average_layer([[[[0.9562]]], [[[0.1922]]]], Ave35637), 
LCro3115 = cropping1D_layer(Ave35637, 0, 0, Cro3115), 
LThr35816 = thresholded_relu_layer(Cro3115, 1.9586515267906712, Thr35816), 
LCon24702 = concatenate_layer([Thr35816,[[[0.8929, 0.6708]]]], 2, Con24702), 
LMul91612 = multiply_layer([Con85773,Con24702], Mul91612), 
LSub5924 = subtract_layer([[0.9528, 0.0207]], [[0.2872, 0.7085]], Sub5924), 
LRes52545 = reshape_layer(Sub5924, [2, 1], Res52545), 
LAve66646 = average_pooling1D_layer(Res52545, 1, 2, true, Ave66646), 
LCon56331 = concatenate_layer([Ave66646,[[[0.9373, 0.8558]]]], 2, Con56331), 
LMax19290 = maximum_layer([Mul91612,Con56331], Max19290), 
exec_layers([LCon85773,LAve35637,LCro3115,LThr35816,LCon24702,LMul91612,LSub5924,LRes52545,LAve66646,LCon56331,LMax19290],["Con85773","Ave35637","Cro3115","Thr35816","Con24702","Mul91612","Sub5924","Res52545","Ave66646","Con56331","Max19290"],Max19290,"Max19290")

Actual (Unparsed): [[[0.6656000, 0.9373000, 0.8558000]]]

Expected (Unparsed): [[[0.6656,0.9373,0.8558]]]

Actual:   [[[0.6656, 0.9373, 0.8558]]]

Expected: [[[0.6656, 0.9373, 0.8558]]]