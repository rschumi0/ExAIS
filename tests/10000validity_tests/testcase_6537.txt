import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Ave26734 = tf.keras.layers.Input(shape=([1, 2, 1]))

Ave26734 = keras.layers.AveragePooling2D(pool_size=(1, 2), name = 'Ave26734', )(in0Ave26734)
Lay46122 = keras.layers.LayerNormalization(axis=1, epsilon=2.836866310977628, name = 'Lay46122', )(Ave26734)
Res95466 = keras.layers.Reshape((1, 1, 1, 1), name = 'Res95466', )(Lay46122)
Up_63363 = keras.layers.UpSampling3D(size=(2, 2, 2), name = 'Up_63363', )(Res95466)
Res55538 = keras.layers.Reshape((2, 2, 2), name = 'Res55538', )(Up_63363)
Res45410 = keras.layers.Reshape((2, 4), name = 'Res45410', )(Res55538)
Zer81345 = keras.layers.ZeroPadding1D(padding=((1, 1)), name = 'Zer81345', )(Res45410)
model = tf.keras.models.Model(inputs=[in0Ave26734], outputs=Zer81345)
in0Ave26734 = tf.constant([[[[1.5206], [1.7911]]]])
print (np.array2string(model.predict([in0Ave26734],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Zer81345.png')

LAve26734 = average_pooling2D_layer([[[[1.5206], [1.7911]]]], 1, 2, Ave26734), 
LLay46122 = layer_normalization_layer(Ave26734, 1, 2.836866310977628, Lay46122), 
LRes95466 = reshape_layer(Lay46122, [1, 1, 1, 1], Res95466), 
LUp_63363 = up_sampling3D_layer(Res95466, 2, 2, 2, Up_63363), 
LRes55538 = reshape_layer(Up_63363, [2, 2, 2], Res55538), 
LRes45410 = reshape_layer(Res55538, [2, 4], Res45410), 
LZer81345 = zero_padding1D_layer(Res45410, 1, 1, Zer81345), 
exec_layers([LAve26734,LLay46122,LRes95466,LUp_63363,LRes55538,LRes45410,LZer81345],["Ave26734","Lay46122","Res95466","Up_63363","Res55538","Res45410","Zer81345"],Zer81345,"Zer81345")

Actual (Unparsed): [[[0.0000000, 0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000, 0.0000000]]]

Expected (Unparsed): [[[0,0,0,0],[0.0,0.0,0.0,0.0],[0.0,0.0,0.0,0.0],[0,0,0,0]]]

Actual:   [[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]]

Expected: [[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]]