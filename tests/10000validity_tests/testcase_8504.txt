import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Min86951 = tf.keras.layers.Input(shape=([1, 1]))
in1Min86951 = tf.keras.layers.Input(shape=([1, 1]))
in0Con44610 = tf.keras.layers.Input(shape=([1, 8]))
in0Sub23215 = tf.keras.layers.Input(shape=([2, 3, 3]))
in1Sub23215 = tf.keras.layers.Input(shape=([2, 3, 3]))

Min86951 = keras.layers.Minimum(name = 'Min86951', )([in0Min86951,in1Min86951])
Con44610 = keras.layers.Concatenate(axis=2, name = 'Con44610', )([Min86951,in0Con44610])
Sub23215 = keras.layers.Subtract(name = 'Sub23215', )([in0Sub23215,in1Sub23215])
Res6094 = keras.layers.Reshape((2, 9), name = 'Res6094', )(Sub23215)
Max51198 = keras.layers.MaxPool1D(pool_size=(2), name = 'Max51198', )(Res6094)
Mul11853 = keras.layers.Multiply(name = 'Mul11853', )([Con44610,Max51198])
model = tf.keras.models.Model(inputs=[in0Min86951,in1Min86951,in0Con44610,in0Sub23215,in1Sub23215], outputs=Mul11853)
in0Min86951 = tf.constant([[[0.6034]]])
in1Min86951 = tf.constant([[[0.564]]])
in0Con44610 = tf.constant([[[0.4031, 0.5227, 0.3504, 0.1561, 0.4425, 0.6376, 0.5786, 0.5213]]])
in0Sub23215 = tf.constant([[[[0.3773, 0.2513, 0.8375], [0.4244, 0.4564, 0.4476], [0.1148, 0.1862, 0.6389]], [[0.0749, 0.8523, 0.3363], [0.1522, 0.9837, 0.1832], [0.7187, 0.1043, 0.4334]]]])
in1Sub23215 = tf.constant([[[[0.497, 0.2984, 0.7683], [0.3487, 0.1555, 0.7844], [0.1509, 0.5208, 0.4418]], [[0.7193, 0.7304, 0.4109], [0.0557, 0.9065, 0.3301], [0.426, 0.6304, 0.4616]]]])
print (np.array2string(model.predict([in0Min86951,in1Min86951,in0Con44610,in0Sub23215,in1Sub23215],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Mul11853.png')

LMin86951 = minimum_layer([[[[0.6034]]], [[[0.564]]]], Min86951), 
LCon44610 = concatenate_layer([Min86951,[[[0.4031, 0.5227, 0.3504, 0.1561, 0.4425, 0.6376, 0.5786, 0.5213]]]], 2, Con44610), 
LSub23215 = subtract_layer([[[[0.3773, 0.2513, 0.8375], [0.4244, 0.4564, 0.4476], [0.1148, 0.1862, 0.6389]], [[0.0749, 0.8523, 0.3363], [0.1522, 0.9837, 0.1832], [0.7187, 0.1043, 0.4334]]]], [[[[0.497, 0.2984, 0.7683], [0.3487, 0.1555, 0.7844], [0.1509, 0.5208, 0.4418]], [[0.7193, 0.7304, 0.4109], [0.0557, 0.9065, 0.3301], [0.426, 0.6304, 0.4616]]]], Sub23215), 
LRes6094 = reshape_layer(Sub23215, [2, 9], Res6094), 
LMax51198 = max_pool1D_layer(Res6094, 2, Max51198), 
LMul11853 = multiply_layer([Con44610,Max51198], Mul11853), 
exec_layers([LMin86951,LCon44610,LSub23215,LRes6094,LMax51198,LMul11853],["Min86951","Con44610","Sub23215","Res6094","Max51198","Mul11853"],Mul11853,"Mul11853")

Actual (Unparsed): [[[-0.0675108, 0.0491379, 0.0361708, 0.0338136, 0.0469705, -0.0650032, 0.1866255, -0.1935996, 0.1027482]]]

Expected (Unparsed): [[[-0.06751079999999998,0.04913788999999996,0.036170840000000024,0.0338136,0.04697048999999999,-0.06500325,0.18662552,-0.19359956,0.10274823]]]

Actual:   [[[-0.0675, 0.0492, 0.0362, 0.0339, 0.047, -0.065, 0.1867, -0.1935, 0.1028]]]

Expected: [[[-0.0675, 0.0492, 0.0362, 0.0339, 0.047, -0.065, 0.1867, -0.1935, 0.1028]]]