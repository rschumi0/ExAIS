import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Mul33 = tf.keras.layers.Input(shape=([1, 2]))
in1Mul33 = tf.keras.layers.Input(shape=([1, 2]))

Mul33 = keras.layers.Multiply(name = 'Mul33', )([in0Mul33,in1Mul33])
Fla59200 = keras.layers.Flatten(name = 'Fla59200', )(Mul33)
Lay75415 = keras.layers.LayerNormalization(axis=1, epsilon=2.059982316185856, name = 'Lay75415', )(Fla59200)
model = tf.keras.models.Model(inputs=[in0Mul33,in1Mul33], outputs=Lay75415)
in0Mul33 = tf.constant([[[0.3226, 0.5452]]])
in1Mul33 = tf.constant([[[0.7613, 0.023]]])
print (np.array2string(model.predict([in0Mul33,in1Mul33],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Lay75415.png')

LMul33 = multiply_layer([[[[0.3226, 0.5452]]], [[[0.7613, 0.023]]]], Mul33), 
LFla59200 = flatten_layer(Mul33, Fla59200), 
LLay75415 = layer_normalization_layer(Fla59200, 1, 2.059982316185856, Lay75415), 
exec_layers([LMul33,LFla59200,LLay75415],["Mul33","Fla59200","Lay75415"],Lay75415,"Lay75415")

Actual (Unparsed): [[0.0809229, -0.0809229]]

Expected (Unparsed): [[0.08092290555582393,-0.08092290555582395]]

Actual:   [[0.081, -0.0809]]

Expected: [[0.081, -0.0809]]