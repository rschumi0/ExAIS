import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Cro86460 = tf.keras.layers.Input(shape=([4, 4]))
in0Con11715 = tf.keras.layers.Input(shape=([3, 4, 1, 3]))
in0Con35841 = tf.keras.layers.Input(shape=([1, 1, 2, 1]))

Cro86460 = keras.layers.Cropping1D(cropping=((0, 1)), name = 'Cro86460', )(in0Cro86460)
Res99771 = keras.layers.Reshape((3, 4, 1), name = 'Res99771', )(Cro86460)
Res73242 = keras.layers.Reshape((3, 4, 1, 1), name = 'Res73242', )(Res99771)
Con11715 = keras.layers.Concatenate(axis=4, name = 'Con11715', )([Res73242,in0Con11715])
Con35841 = keras.layers.Conv3D(4, (1, 1, 2),strides=(1, 1, 1), padding='valid', dilation_rate=(1, 1, 1), name = 'Con35841', )(in0Con35841)
Zer97907 = keras.layers.ZeroPadding3D(padding=((2, 0), (3, 0), (0, 0)), name = 'Zer97907', )(Con35841)
Min67325 = keras.layers.Minimum(name = 'Min67325', )([Con11715,Zer97907])
Res45143 = keras.layers.Reshape((3, 4, 4), name = 'Res45143', )(Min67325)
Res87379 = keras.layers.Reshape((3, 16), name = 'Res87379', )(Res45143)
GRU54062 = keras.layers.GRU(3,reset_after=False, recurrent_activation='sigmoid', name = 'GRU54062', )(Res87379)
Den5814 = keras.layers.Dense(4,name = 'Den5814', )(GRU54062)
model = tf.keras.models.Model(inputs=[in0Cro86460,in0Con11715,in0Con35841], outputs=Den5814)
w = model.get_layer('Con35841').get_weights() 
w[0] = np.array([[[[[0.9496, 0.5049, 0.0911, 0.3818]], [[0.2567, 0.1503, 0.615, 0.9123]]]]])
w[1] = np.array([0, 0, 0, 0])
model.get_layer('Con35841').set_weights(w) 
w = model.get_layer('GRU54062').get_weights() 
w[0] = np.array([[6, 8, 3, 4, 5, 1, 4, 8, 10], [10, 5, 7, 1, 2, 2, 8, 5, 2], [6, 7, 7, 2, 8, 10, 8, 8, 4], [9, 3, 10, 5, 7, 1, 7, 8, 7], [3, 4, 9, 4, 5, 8, 2, 8, 9], [10, 3, 7, 6, 4, 10, 6, 1, 5], [9, 6, 4, 4, 1, 7, 5, 3, 2], [5, 7, 5, 5, 10, 7, 5, 2, 2], [7, 9, 6, 6, 2, 9, 7, 6, 3], [6, 8, 10, 8, 1, 3, 1, 4, 4], [6, 3, 6, 7, 3, 8, 9, 9, 1], [2, 7, 5, 7, 9, 9, 3, 2, 7], [8, 4, 7, 7, 5, 10, 8, 9, 7], [4, 10, 6, 5, 4, 3, 2, 4, 4], [4, 8, 2, 2, 9, 2, 8, 8, 8], [8, 7, 2, 3, 4, 3, 5, 10, 4]])
w[1] = np.array([[10, 1, 3, 4, 8, 6, 8, 3, 2], [2, 5, 3, 6, 9, 10, 1, 2, 10], [5, 3, 10, 2, 1, 1, 8, 1, 7]])
w[2] = np.array([3, 3, 2, 6, 9, 9, 10, 6, 10])
model.get_layer('GRU54062').set_weights(w) 
w = model.get_layer('Den5814').get_weights() 
w[0] = np.array([[0.0426, 0.1887, 0.8665, 0.0665], [0.855, 0.4801, 0.9207, 0.4393], [0.9245, 0.1443, 0.9158, 0.9342]])
w[1] = np.array([0.1896, 0.9885, 0.3242, 0.728])
model.get_layer('Den5814').set_weights(w) 
in0Cro86460 = tf.constant([[[1.0424, 1.5311, 1.4656, 1.3598], [1.29, 1.8746, 1.0811, 1.4335], [1.0688, 1.0939, 1.0136, 1.1468], [1.8017, 1.5254, 1.9538, 1.3715]]])
in0Con11715 = tf.constant([[[[[0.7501, 0.5244, 0.9395]], [[0.338, 0.9327, 0.8104]], [[0.1747, 0.6499, 0.7661]], [[0.4427, 0.1045, 0.0162]]], [[[0.0369, 0.9395, 0.3312]], [[0.582, 0.9634, 0.2296]], [[0.3838, 0.3879, 0.1519]], [[0.3107, 0.7831, 0.8894]]], [[[0.3109, 0.7017, 0.515]], [[0.3202, 0.3785, 0.9537]], [[0.6092, 0.359, 0.774]], [[0.419, 0.1449, 0.2033]]]]])
in0Con35841 = tf.constant([[[[[0.6342], [0.8252]]]]])
print (np.array2string(model.predict([in0Cro86460,in0Con11715,in0Con35841],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Den5814.png')

LCro86460 = cropping1D_layer([[[1.0424, 1.5311, 1.4656, 1.3598], [1.29, 1.8746, 1.0811, 1.4335], [1.0688, 1.0939, 1.0136, 1.1468], [1.8017, 1.5254, 1.9538, 1.3715]]], 0, 1, Cro86460), 
LRes99771 = reshape_layer(Cro86460, [3, 4, 1], Res99771), 
LRes73242 = reshape_layer(Res99771, [3, 4, 1, 1], Res73242), 
LCon11715 = concatenate_layer([Res73242,[[[[[0.7501, 0.5244, 0.9395]], [[0.338, 0.9327, 0.8104]], [[0.1747, 0.6499, 0.7661]], [[0.4427, 0.1045, 0.0162]]], [[[0.0369, 0.9395, 0.3312]], [[0.582, 0.9634, 0.2296]], [[0.3838, 0.3879, 0.1519]], [[0.3107, 0.7831, 0.8894]]], [[[0.3109, 0.7017, 0.515]], [[0.3202, 0.3785, 0.9537]], [[0.6092, 0.359, 0.774]], [[0.419, 0.1449, 0.2033]]]]]], 4, Con11715), 
LCon35841 = conv3D_layer([[[[[0.6342], [0.8252]]]]], 1, 1, 2,[[[[[0.9496, 0.5049, 0.0911, 0.3818]], [[0.2567, 0.1503, 0.615, 0.9123]]]]],[0, 0, 0, 0], 1, 1, 1, false, 1, 1, 1, Con35841), 
LZer97907 = zero_padding3D_layer(Con35841, 2, 0, 3, 0, 0, 0, Zer97907), 
LMin67325 = minimum_layer([Con11715,Zer97907], Min67325), 
LRes45143 = reshape_layer(Min67325, [3, 4, 4], Res45143), 
LRes87379 = reshape_layer(Res45143, [3, 16], Res87379), 
LGRU54062 = gru_layer(Res87379,[[6, 8, 3, 4, 5, 1, 4, 8, 10], [10, 5, 7, 1, 2, 2, 8, 5, 2], [6, 7, 7, 2, 8, 10, 8, 8, 4], [9, 3, 10, 5, 7, 1, 7, 8, 7], [3, 4, 9, 4, 5, 8, 2, 8, 9], [10, 3, 7, 6, 4, 10, 6, 1, 5], [9, 6, 4, 4, 1, 7, 5, 3, 2], [5, 7, 5, 5, 10, 7, 5, 2, 2], [7, 9, 6, 6, 2, 9, 7, 6, 3], [6, 8, 10, 8, 1, 3, 1, 4, 4], [6, 3, 6, 7, 3, 8, 9, 9, 1], [2, 7, 5, 7, 9, 9, 3, 2, 7], [8, 4, 7, 7, 5, 10, 8, 9, 7], [4, 10, 6, 5, 4, 3, 2, 4, 4], [4, 8, 2, 2, 9, 2, 8, 8, 8], [8, 7, 2, 3, 4, 3, 5, 10, 4]],[[10, 1, 3, 4, 8, 6, 8, 3, 2], [2, 5, 3, 6, 9, 10, 1, 2, 10], [5, 3, 10, 2, 1, 1, 8, 1, 7]],[3, 3, 2, 6, 9, 9, 10, 6, 10], false, GRU54062), 
LDen5814 = dense_layer(GRU54062, [[0.0426, 0.1887, 0.8665, 0.0665], [0.855, 0.4801, 0.9207, 0.4393], [0.9245, 0.1443, 0.9158, 0.9342]],[0.1896, 0.9885, 0.3242, 0.728], Den5814), 
exec_layers([LCro86460,LRes99771,LRes73242,LCon11715,LCon35841,LZer97907,LMin67325,LRes45143,LRes87379,LGRU54062,LDen5814],["Cro86460","Res99771","Res73242","Con11715","Con35841","Zer97907","Min67325","Res45143","Res87379","GRU54062","Den5814"],Den5814,"Den5814")

Actual (Unparsed): [[0.3882033, 1.0556538, 0.5773247, 0.8996741]]

Expected (Unparsed): [[0.3882033420555002,1.0556537952240748,0.5773246628652461,0.8996741242031645]]

Actual:   [[0.3883, 1.0557, 0.5774, 0.8997]]

Expected: [[0.3883, 1.0557, 0.5774, 0.8997]]