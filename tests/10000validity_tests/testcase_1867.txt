import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Dot32218 = tf.keras.layers.Input(shape=([2, 3]))
in1Dot32218 = tf.keras.layers.Input(shape=([2, 3]))
in0Mul6609 = tf.keras.layers.Input(shape=([1, 2, 2, 2]))
in1Mul6609 = tf.keras.layers.Input(shape=([1, 2, 2, 2]))
in0Con81328 = tf.keras.layers.Input(shape=([2, 14, 1, 1]))
in0PRe28012 = tf.keras.layers.Input(shape=([2, 2, 1, 2]))
in0Con58320 = tf.keras.layers.Input(shape=([3, 25, 1, 1]))

Dot32218 = keras.layers.Dot(axes=(1, 1), name = 'Dot32218', )([in0Dot32218,in1Dot32218])
Res38917 = keras.layers.Reshape((3, 3, 1), name = 'Res38917', )(Dot32218)
Res49812 = keras.layers.Reshape((3, 3, 1, 1), name = 'Res49812', )(Res38917)
Con51095 = keras.layers.Conv3DTranspose(4, (1, 1, 1),strides=(1, 1, 1), padding='same', name = 'Con51095', )(Res49812)
Den79776 = keras.layers.Dense(4,name = 'Den79776', )(Con51095)
Lay70934 = keras.layers.LayerNormalization(axis=1, epsilon=2.5264484335836355, name = 'Lay70934', )(Den79776)
Zer10553 = keras.layers.ZeroPadding3D(padding=((0, 0), (22, 0), (0, 0)), name = 'Zer10553', )(Lay70934)
Mul6609 = keras.layers.Multiply(name = 'Mul6609', )([in0Mul6609,in1Mul6609])
Res91820 = keras.layers.Reshape((1, 2, 4), name = 'Res91820', )(Mul6609)
Res38504 = keras.layers.Reshape((1, 8), name = 'Res38504', )(Res91820)
Ave28777 = keras.layers.AveragePooling1D(pool_size=(1), name = 'Ave28777', )(Res38504)
Res24803 = keras.layers.Reshape((1, 8, 1), name = 'Res24803', )(Ave28777)
Res70826 = keras.layers.Reshape((1, 8, 1, 1), name = 'Res70826', )(Res24803)
Zer37876 = keras.layers.ZeroPadding3D(padding=((1, 0), (6, 0), (0, 0)), name = 'Zer37876', )(Res70826)
Con81328 = keras.layers.Concatenate(axis=4, name = 'Con81328', )([Zer37876,in0Con81328])
PRe28012 = keras.layers.PReLU(name = 'PRe28012', input_shape=(2, 2, 1, 2))(in0PRe28012)
Zer28816 = keras.layers.ZeroPadding3D(padding=((0, 0), (12, 0), (0, 0)), name = 'Zer28816', )(PRe28012)
Max52228 = keras.layers.Maximum(name = 'Max52228', )([Con81328,Zer28816])
Con68928 = keras.layers.Conv3D(3, (1, 1, 2),strides=(1, 1, 1), padding='same', dilation_rate=(1, 1, 1), name = 'Con68928', )(Max52228)
Zer95621 = keras.layers.ZeroPadding3D(padding=((1, 0), (11, 0), (0, 0)), name = 'Zer95621', )(Con68928)
Con58320 = keras.layers.Concatenate(axis=4, name = 'Con58320', )([Zer95621,in0Con58320])
Min88434 = keras.layers.Minimum(name = 'Min88434', )([Zer10553,Con58320])
model = tf.keras.models.Model(inputs=[in0Dot32218,in1Dot32218,in0Mul6609,in1Mul6609,in0Con81328,in0PRe28012,in0Con58320], outputs=Min88434)
w = model.get_layer('Con51095').get_weights() 
w[0] = np.array([[[[[0.5196], [0.7718], [0.277], [0.7001]]]]])
w[1] = np.array([0, 0, 0, 0])
model.get_layer('Con51095').set_weights(w) 
w = model.get_layer('Den79776').get_weights() 
w[0] = np.array([[0.5147, 0.6854, 0.0506, 0.702], [0.1155, 0.8903, 0.5737, 0.1506], [0.2723, 0.9447, 0.324, 0.7049], [0.9062, 0.6024, 0.5189, 0.5916]])
w[1] = np.array([0.4668, 0.6567, 0.0053, 0.6017])
model.get_layer('Den79776').set_weights(w) 
w = model.get_layer('PRe28012').get_weights() 
w[0] = np.array([[[[0.2563, 0.7092]], [[0.4171, 0.803]]], [[[0.5694, 0.0224]], [[0.8885, 0.1163]]]])
model.get_layer('PRe28012').set_weights(w) 
w = model.get_layer('Con68928').get_weights() 
w[0] = np.array([[[[[0.9609, 0.1784, 0.4853], [0.7913, 0.4475, 0.9156]], [[0.7054, 0.9804, 0.3876], [0.2981, 0.3423, 0.1558]]]]])
w[1] = np.array([0, 0, 0])
model.get_layer('Con68928').set_weights(w) 
in0Dot32218 = tf.constant([[[0.032, 0.6413, 0.5237], [0.1636, 0.5916, 0.929]]])
in1Dot32218 = tf.constant([[[0.8367, 0.3881, 0.8725], [0.6469, 0.6538, 0.7247]]])
in0Mul6609 = tf.constant([[[[[0.3003, 0.9846], [0.2525, 0.523]], [[0.4009, 0.6111], [0.8717, 0.9262]]]]])
in1Mul6609 = tf.constant([[[[[0.0896, 0.3887], [0.4269, 0.3724]], [[0.4965, 0.8655], [0.9667, 0.6831]]]]])
in0Con81328 = tf.constant([[[[[0.679]], [[0.3678]], [[0.167]], [[0.6881]], [[0.0809]], [[0.5879]], [[0.8183]], [[0.7141]], [[0.5488]], [[0.0411]], [[0.5957]], [[0.7237]], [[0.2731]], [[0.2454]]], [[[0.3582]], [[0.604]], [[0.671]], [[0.1162]], [[0.7993]], [[0.8171]], [[0.1495]], [[0.5945]], [[0.4501]], [[0.9087]], [[0.9218]], [[0.6985]], [[0.3157]], [[0.4123]]]]])
in0PRe28012 = tf.constant([[[[[0.6391, 0.959]], [[0.5958, 0.1339]]], [[[0.1227, 0.3078]], [[0.1678, 0.7972]]]]])
in0Con58320 = tf.constant([[[[[0.1966]], [[0.6322]], [[0.8951]], [[0.1703]], [[0.3902]], [[0.3371]], [[0.7328]], [[0.7618]], [[0.8818]], [[0.9778]], [[0.5042]], [[0.9808]], [[0.6182]], [[0.3755]], [[0.2184]], [[0.9011]], [[0.8285]], [[0.7618]], [[0.9717]], [[0.1966]], [[0.826]], [[0.7126]], [[0.6164]], [[0.3597]], [[0.363]]], [[[0.9898]], [[0.5044]], [[0.1298]], [[0.2135]], [[0.5832]], [[0.2463]], [[0.2073]], [[0.2564]], [[0.1901]], [[0.2841]], [[0.162]], [[0.7068]], [[0.3482]], [[0.2201]], [[0.8145]], [[0.3004]], [[0.4459]], [[0.265]], [[0.2689]], [[0.1745]], [[0.8743]], [[0.8737]], [[0.205]], [[0.9082]], [[0.6552]]], [[[0.6223]], [[0.9991]], [[0.687]], [[0.986]], [[0.6468]], [[0.7395]], [[0.8369]], [[0.2693]], [[0.5103]], [[0.2218]], [[0.0392]], [[0.368]], [[0.1974]], [[0.5701]], [[0.3796]], [[0.0161]], [[0.0418]], [[0.2123]], [[0.012]], [[0.5474]], [[0.7864]], [[0.5599]], [[0.6259]], [[0.3611]], [[0.6487]]]]])
print (np.array2string(model.predict([in0Dot32218,in1Dot32218,in0Mul6609,in1Mul6609,in0Con81328,in0PRe28012,in0Con58320],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Min88434.png')

LDot32218 = dot_layer([[[0.032, 0.6413, 0.5237], [0.1636, 0.5916, 0.929]]], [[[0.8367, 0.3881, 0.8725], [0.6469, 0.6538, 0.7247]]], 1, 1, Dot32218), 
LRes38917 = reshape_layer(Dot32218, [3, 3, 1], Res38917), 
LRes49812 = reshape_layer(Res38917, [3, 3, 1, 1], Res49812), 
LCon51095 = conv3D_transpose_layer(Res49812, 1, 1, 1,[[[[[0.5196], [0.7718], [0.277], [0.7001]]]]],[0, 0, 0, 0], 1, 1, 1, true, Con51095), 
LDen79776 = dense_layer(Con51095, [[0.5147, 0.6854, 0.0506, 0.702], [0.1155, 0.8903, 0.5737, 0.1506], [0.2723, 0.9447, 0.324, 0.7049], [0.9062, 0.6024, 0.5189, 0.5916]],[0.4668, 0.6567, 0.0053, 0.6017], Den79776), 
LLay70934 = layer_normalization_layer(Den79776, 1, 2.5264484335836355, Lay70934), 
LZer10553 = zero_padding3D_layer(Lay70934, 0, 0, 22, 0, 0, 0, Zer10553), 
LMul6609 = multiply_layer([[[[[[0.3003, 0.9846], [0.2525, 0.523]], [[0.4009, 0.6111], [0.8717, 0.9262]]]]], [[[[[0.0896, 0.3887], [0.4269, 0.3724]], [[0.4965, 0.8655], [0.9667, 0.6831]]]]]], Mul6609), 
LRes91820 = reshape_layer(Mul6609, [1, 2, 4], Res91820), 
LRes38504 = reshape_layer(Res91820, [1, 8], Res38504), 
LAve28777 = average_pooling1D_layer(Res38504, 1, Ave28777), 
LRes24803 = reshape_layer(Ave28777, [1, 8, 1], Res24803), 
LRes70826 = reshape_layer(Res24803, [1, 8, 1, 1], Res70826), 
LZer37876 = zero_padding3D_layer(Res70826, 1, 0, 6, 0, 0, 0, Zer37876), 
LCon81328 = concatenate_layer([Zer37876,[[[[[0.679]], [[0.3678]], [[0.167]], [[0.6881]], [[0.0809]], [[0.5879]], [[0.8183]], [[0.7141]], [[0.5488]], [[0.0411]], [[0.5957]], [[0.7237]], [[0.2731]], [[0.2454]]], [[[0.3582]], [[0.604]], [[0.671]], [[0.1162]], [[0.7993]], [[0.8171]], [[0.1495]], [[0.5945]], [[0.4501]], [[0.9087]], [[0.9218]], [[0.6985]], [[0.3157]], [[0.4123]]]]]], 4, Con81328), 
LPRe28012 = prelu_layer([[[[[0.6391, 0.959]], [[0.5958, 0.1339]]], [[[0.1227, 0.3078]], [[0.1678, 0.7972]]]]], [[[[0.2563, 0.7092]], [[0.4171, 0.803]]], [[[0.5694, 0.0224]], [[0.8885, 0.1163]]]], PRe28012), 
LZer28816 = zero_padding3D_layer(PRe28012, 0, 0, 12, 0, 0, 0, Zer28816), 
LMax52228 = maximum_layer([Con81328,Zer28816], Max52228), 
LCon68928 = conv3D_layer(Max52228, 1, 1, 2,[[[[[0.9609, 0.1784, 0.4853], [0.7913, 0.4475, 0.9156]], [[0.7054, 0.9804, 0.3876], [0.2981, 0.3423, 0.1558]]]]],[0, 0, 0], 1, 1, 1, true, 1, 1, 1, Con68928), 
LZer95621 = zero_padding3D_layer(Con68928, 1, 0, 11, 0, 0, 0, Zer95621), 
LCon58320 = concatenate_layer([Zer95621,[[[[[0.1966]], [[0.6322]], [[0.8951]], [[0.1703]], [[0.3902]], [[0.3371]], [[0.7328]], [[0.7618]], [[0.8818]], [[0.9778]], [[0.5042]], [[0.9808]], [[0.6182]], [[0.3755]], [[0.2184]], [[0.9011]], [[0.8285]], [[0.7618]], [[0.9717]], [[0.1966]], [[0.826]], [[0.7126]], [[0.6164]], [[0.3597]], [[0.363]]], [[[0.9898]], [[0.5044]], [[0.1298]], [[0.2135]], [[0.5832]], [[0.2463]], [[0.2073]], [[0.2564]], [[0.1901]], [[0.2841]], [[0.162]], [[0.7068]], [[0.3482]], [[0.2201]], [[0.8145]], [[0.3004]], [[0.4459]], [[0.265]], [[0.2689]], [[0.1745]], [[0.8743]], [[0.8737]], [[0.205]], [[0.9082]], [[0.6552]]], [[[0.6223]], [[0.9991]], [[0.687]], [[0.986]], [[0.6468]], [[0.7395]], [[0.8369]], [[0.2693]], [[0.5103]], [[0.2218]], [[0.0392]], [[0.368]], [[0.1974]], [[0.5701]], [[0.3796]], [[0.0161]], [[0.0418]], [[0.2123]], [[0.012]], [[0.5474]], [[0.7864]], [[0.5599]], [[0.6259]], [[0.3611]], [[0.6487]]]]]], 4, Con58320), 
LMin88434 = minimum_layer([Zer10553,Con58320], Min88434), 
exec_layers([LDot32218,LRes38917,LRes49812,LCon51095,LDen79776,LLay70934,LZer10553,LMul6609,LRes91820,LRes38504,LAve28777,LRes24803,LRes70826,LZer37876,LCon81328,LPRe28012,LZer28816,LMax52228,LCon68928,LZer95621,LCon58320,LMin88434],["Dot32218","Res38917","Res49812","Con51095","Den79776","Lay70934","Zer10553","Mul6609","Res91820","Res38504","Ave28777","Res24803","Res70826","Zer37876","Con81328","PRe28012","Zer28816","Max52228","Con68928","Zer95621","Con58320","Min88434"],Min88434,"Min88434")

Actual (Unparsed): [[[[[0.0000000, 0.0000000, 0.0000000, 0.0000000]], [[0.0000000, 0.0000000, 0.0000000, 0.0000000]], [[0.0000000, 0.0000000, 0.0000000, 0.0000000]], [[0.0000000, 0.0000000, 0.0000000, 0.0000000]], [[0.0000000, 0.0000000, 0.0000000, 0.0000000]], [[0.0000000, 0.0000000, 0.0000000, 0.0000000]], [[0.0000000, 0.0000000, 0.0000000, 0.0000000]], [[0.0000000, 0.0000000, 0.0000000, 0.0000000]], [[0.0000000, 0.0000000, 0.0000000, 0.0000000]], [[0.0000000, 0.0000000, 0.0000000, 0.0000000]], [[0.0000000, 0.0000000, 0.0000000, 0.0000000]], [[0.0000000, 0.0000000, 0.0000000, 0.0000000]], [[0.0000000, 0.0000000, 0.0000000, 0.0000000]], [[0.0000000, 0.0000000, 0.0000000, 0.0000000]], [[0.0000000, 0.0000000, 0.0000000, 0.0000000]], [[0.0000000, 0.0000000, 0.0000000, 0.0000000]], [[0.0000000, 0.0000000, 0.0000000, 0.0000000]], [[0.0000000, 0.0000000, 0.0000000, 0.0000000]], [[0.0000000, 0.0000000, 0.0000000, 0.0000000]], [[0.0000000, 0.0000000, 0.0000000, 0.0000000]], [[0.0000000, 0.0000000, 0.0000000, 0.0000000]], [[0.0000000, 0.0000000, 0.0000000, 0.0000000]], [[-0.3656094, -0.5618665, -0.3188680, -0.3732583]], [[-0.2649744, -0.4166053, -0.2301983, -0.2707054]], [[-0.3919691, -0.5978633, -0.3423138, -0.4000754]]], [[[0.0000000, 0.0000000, 0.0000000, 0.0000000]], [[0.0000000, 0.0000000, 0.0000000, 0.0000000]], [[0.0000000, 0.0000000, 0.0000000, 0.0000000]], [[0.0000000, 0.0000000, 0.0000000, 0.0000000]], [[0.0000000, 0.0000000, 0.0000000, 0.0000000]], [[0.0000000, 0.0000000, 0.0000000, 0.0000000]], [[0.0000000, 0.0000000, 0.0000000, 0.0000000]], [[0.0000000, 0.0000000, 0.0000000, 0.0000000]], [[0.0000000, 0.0000000, 0.0000000, 0.0000000]], [[0.0000000, 0.0000000, 0.0000000, 0.0000000]], [[0.0000000, 0.0000000, 0.0000000, 0.0000000]], [[0.0000000, 0.0000000, 0.0000000, 0.0000000]], [[0.0000000, 0.0000000, 0.0000000, 0.0000000]], [[0.0000000, 0.0000000, 0.0000000, 0.0000000]], [[0.0000000, 0.0000000, 0.0000000, 0.0000000]], [[0.0000000, 0.0000000, 0.0000000, 0.0000000]], [[0.0000000, 0.0000000, 0.0000000, 0.0000000]], [[0.0000000, 0.0000000, 0.0000000, 0.0000000]], [[0.0000000, 0.0000000, 0.0000000, 0.0000000]], [[0.0000000, 0.0000000, 0.0000000, 0.0000000]], [[0.0000000, 0.0000000, 0.0000000, 0.0000000]], [[0.0000000, 0.0000000, 0.0000000, 0.0000000]], [[0.1439808, 0.2212688, 0.1255735, 0.1469930]], [[0.0749021, 0.1177646, 0.0650717, 0.0765221]], [[0.1502786, 0.2161072, 0.1312411, 0.1533866]]], [[[0.0000000, 0.0000000, 0.0000000, 0.0000000]], [[0.0000000, 0.0000000, 0.0000000, 0.0000000]], [[0.0000000, 0.0000000, 0.0000000, 0.0000000]], [[0.0000000, 0.0000000, 0.0000000, 0.0000000]], [[0.0000000, 0.0000000, 0.0000000, 0.0000000]], [[0.0000000, 0.0000000, 0.0000000, 0.0000000]], [[0.0000000, 0.0000000, 0.0000000, 0.0000000]], [[0.0000000, 0.0000000, 0.0000000, 0.0000000]], [[0.0000000, 0.0000000, 0.0000000, 0.0000000]], [[0.0000000, 0.0000000, 0.0000000, 0.0000000]], [[0.0000000, 0.0000000, 0.0000000, 0.0000000]], [[0.0000000, 0.0000000, 0.0000000, 0.0000000]], [[0.0000000, 0.0000000, 0.0000000, 0.0000000]], [[0.0000000, 0.0000000, 0.0000000, 0.0000000]], [[0.0000000, 0.0000000, 0.0000000, 0.0000000]], [[0.0000000, 0.0000000, 0.0000000, 0.0000000]], [[0.0000000, 0.0000000, 0.0000000, 0.0000000]], [[0.0000000, 0.0000000, 0.0000000, 0.0000000]], [[0.0000000, 0.0000000, 0.0000000, 0.0000000]], [[0.0000000, 0.0000000, 0.0000000, 0.0000000]], [[0.0000000, 0.0000000, 0.0000000, 0.0000000]], [[0.0000000, 0.0000000, 0.0000000, 0.0000000]], [[0.2216286, 0.3405977, 0.1932945, 0.2262654]], [[0.1900723, 0.2916085, 0.1651267, 0.1941833]], [[0.2416904, 0.3686460, 0.2110727, 0.2466888]]]]]

Expected (Unparsed): [[[[[0,0,0,0]],[[0,0,0,0]],[[0,0,0,0]],[[0,0,0,0]],[[0,0,0,0]],[[0,0,0,0]],[[0,0,0,0]],[[0,0,0,0]],[[0,0,0,0]],[[0,0,0,0]],[[0,0,0,0]],[[0,0,0,0]],[[0,0,0,0]],[[0,0,0,0]],[[0,0,0,0]],[[0,0,0,0]],[[0,0,0,0]],[[0,0,0,0]],[[0,0,0,0]],[[0,0,0,0]],[[0,0,0,0]],[[0,0,0,0]],[[-0.3656093864427782,-0.5618665112104155,-0.3188679805333112,-0.3732583386232055]],[[-0.2649743512368851,-0.41660528696935506,-0.2301983359303167,-0.2707053619594432]],[[-0.391969060582877,-0.5978633259397308,-0.3423138455375422,-0.400075385942351]]],[[[0,0,0,0]],[[0,0,0,0]],[[0,0,0,0]],[[0,0,0,0]],[[0,0,0,0]],[[0,0,0,0]],[[0,0,0,0]],[[0,0,0,0]],[[0,0,0,0]],[[0,0,0,0]],[[0,0,0,0]],[[0,0,0,0]],[[0,0,0,0]],[[0,0,0,0]],[[0,0,0,0]],[[0,0,0,0]],[[0,0,0,0]],[[0,0,0,0]],[[0,0,0,0]],[[0,0,0,0]],[[0,0,0,0]],[[0,0,0,0]],[[0.1439807448040724,0.22126882340643286,0.1255734973821361,0.14699298101229422]],[[0.07490205193206528,0.11776457115222806,0.0650716857387947,0.07652207462769778]],[[0.15027862686271168,0.21610722000000002,0.13124111017073345,0.15338654421239384]]],[[[0,0,0,0]],[[0,0,0,0]],[[0,0,0,0]],[[0,0,0,0]],[[0,0,0,0]],[[0,0,0,0]],[[0,0,0,0]],[[0,0,0,0]],[[0,0,0,0]],[[0,0,0,0]],[[0,0,0,0]],[[0,0,0,0]],[[0,0,0,0]],[[0,0,0,0]],[[0,0,0,0]],[[0,0,0,0]],[[0,0,0,0]],[[0,0,0,0]],[[0,0,0,0]],[[0,0,0,0]],[[0,0,0,0]],[[0,0,0,0]],[[0.2216286416387058,0.3405976878039829,0.19329448315117506,0.22626535761091127]],[[0.19007229930481973,0.29160850437600006,0.165126650191522,0.1941832873317453]],[[0.24169043372016527,0.36864605164723674,0.2110727353668089,0.24668884172995728]]]]]

Actual:   [[[[[0, 0, 0, 0]], [[0, 0, 0, 0]], [[0, 0, 0, 0]], [[0, 0, 0, 0]], [[0, 0, 0, 0]], [[0, 0, 0, 0]], [[0, 0, 0, 0]], [[0, 0, 0, 0]], [[0, 0, 0, 0]], [[0, 0, 0, 0]], [[0, 0, 0, 0]], [[0, 0, 0, 0]], [[0, 0, 0, 0]], [[0, 0, 0, 0]], [[0, 0, 0, 0]], [[0, 0, 0, 0]], [[0, 0, 0, 0]], [[0, 0, 0, 0]], [[0, 0, 0, 0]], [[0, 0, 0, 0]], [[0, 0, 0, 0]], [[0, 0, 0, 0]], [[-0.3656, -0.5618, -0.3188, -0.3732]], [[-0.2649, -0.4166, -0.2301, -0.2707]], [[-0.3919, -0.5978, -0.3423, -0.4]]], [[[0, 0, 0, 0]], [[0, 0, 0, 0]], [[0, 0, 0, 0]], [[0, 0, 0, 0]], [[0, 0, 0, 0]], [[0, 0, 0, 0]], [[0, 0, 0, 0]], [[0, 0, 0, 0]], [[0, 0, 0, 0]], [[0, 0, 0, 0]], [[0, 0, 0, 0]], [[0, 0, 0, 0]], [[0, 0, 0, 0]], [[0, 0, 0, 0]], [[0, 0, 0, 0]], [[0, 0, 0, 0]], [[0, 0, 0, 0]], [[0, 0, 0, 0]], [[0, 0, 0, 0]], [[0, 0, 0, 0]], [[0, 0, 0, 0]], [[0, 0, 0, 0]], [[0.144, 0.2213, 0.1256, 0.147]], [[0.075, 0.1178, 0.0651, 0.0766]], [[0.1503, 0.2162, 0.1313, 0.1534]]], [[[0, 0, 0, 0]], [[0, 0, 0, 0]], [[0, 0, 0, 0]], [[0, 0, 0, 0]], [[0, 0, 0, 0]], [[0, 0, 0, 0]], [[0, 0, 0, 0]], [[0, 0, 0, 0]], [[0, 0, 0, 0]], [[0, 0, 0, 0]], [[0, 0, 0, 0]], [[0, 0, 0, 0]], [[0, 0, 0, 0]], [[0, 0, 0, 0]], [[0, 0, 0, 0]], [[0, 0, 0, 0]], [[0, 0, 0, 0]], [[0, 0, 0, 0]], [[0, 0, 0, 0]], [[0, 0, 0, 0]], [[0, 0, 0, 0]], [[0, 0, 0, 0]], [[0.2217, 0.3406, 0.1933, 0.2263]], [[0.1901, 0.2917, 0.1652, 0.1942]], [[0.2417, 0.3687, 0.2111, 0.2467]]]]]

Expected: [[[[[0, 0, 0, 0]], [[0, 0, 0, 0]], [[0, 0, 0, 0]], [[0, 0, 0, 0]], [[0, 0, 0, 0]], [[0, 0, 0, 0]], [[0, 0, 0, 0]], [[0, 0, 0, 0]], [[0, 0, 0, 0]], [[0, 0, 0, 0]], [[0, 0, 0, 0]], [[0, 0, 0, 0]], [[0, 0, 0, 0]], [[0, 0, 0, 0]], [[0, 0, 0, 0]], [[0, 0, 0, 0]], [[0, 0, 0, 0]], [[0, 0, 0, 0]], [[0, 0, 0, 0]], [[0, 0, 0, 0]], [[0, 0, 0, 0]], [[0, 0, 0, 0]], [[-0.3656, -0.5618, -0.3188, -0.3732]], [[-0.2649, -0.4166, -0.2301, -0.2707]], [[-0.3919, -0.5978, -0.3423, -0.4]]], [[[0, 0, 0, 0]], [[0, 0, 0, 0]], [[0, 0, 0, 0]], [[0, 0, 0, 0]], [[0, 0, 0, 0]], [[0, 0, 0, 0]], [[0, 0, 0, 0]], [[0, 0, 0, 0]], [[0, 0, 0, 0]], [[0, 0, 0, 0]], [[0, 0, 0, 0]], [[0, 0, 0, 0]], [[0, 0, 0, 0]], [[0, 0, 0, 0]], [[0, 0, 0, 0]], [[0, 0, 0, 0]], [[0, 0, 0, 0]], [[0, 0, 0, 0]], [[0, 0, 0, 0]], [[0, 0, 0, 0]], [[0, 0, 0, 0]], [[0, 0, 0, 0]], [[0.144, 0.2213, 0.1256, 0.147]], [[0.075, 0.1178, 0.0651, 0.0766]], [[0.1503, 0.2162, 0.1313, 0.1534]]], [[[0, 0, 0, 0]], [[0, 0, 0, 0]], [[0, 0, 0, 0]], [[0, 0, 0, 0]], [[0, 0, 0, 0]], [[0, 0, 0, 0]], [[0, 0, 0, 0]], [[0, 0, 0, 0]], [[0, 0, 0, 0]], [[0, 0, 0, 0]], [[0, 0, 0, 0]], [[0, 0, 0, 0]], [[0, 0, 0, 0]], [[0, 0, 0, 0]], [[0, 0, 0, 0]], [[0, 0, 0, 0]], [[0, 0, 0, 0]], [[0, 0, 0, 0]], [[0, 0, 0, 0]], [[0, 0, 0, 0]], [[0, 0, 0, 0]], [[0, 0, 0, 0]], [[0.2217, 0.3406, 0.1933, 0.2263]], [[0.1901, 0.2917, 0.1652, 0.1942]], [[0.2417, 0.3687, 0.2111, 0.2467]]]]]