import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Mul32018 = tf.keras.layers.Input(shape=([1, 2, 2]))
in1Mul32018 = tf.keras.layers.Input(shape=([1, 2, 2]))

Mul32018 = keras.layers.Multiply(name = 'Mul32018', )([in0Mul32018,in1Mul32018])
Lea49170 = keras.layers.LeakyReLU(alpha=7.141072824830104, name = 'Lea49170', )(Mul32018)
Glo78006 = keras.layers.GlobalAveragePooling2D(name = 'Glo78006', )(Lea49170)
model = tf.keras.models.Model(inputs=[in0Mul32018,in1Mul32018], outputs=Glo78006)
in0Mul32018 = tf.constant([[[[0.1349, 0.952], [0.3779, 0.219]]]])
in1Mul32018 = tf.constant([[[[0.922, 0.9069], [0.4341, 0.0112]]]])
print (np.array2string(model.predict([in0Mul32018,in1Mul32018],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Glo78006.png')

LMul32018 = multiply_layer([[[[[0.1349, 0.952], [0.3779, 0.219]]]], [[[[0.922, 0.9069], [0.4341, 0.0112]]]]], Mul32018), 
LLea49170 = leaky_relu_layer(Mul32018, 7.141072824830104, Lea49170), 
LGlo78006 = global_average_pooling2D_layer(Lea49170, Glo78006), 
exec_layers([LMul32018,LLea49170,LGlo78006],["Mul32018","Lea49170","Glo78006"],Glo78006,"Glo78006")

Actual (Unparsed): [[0.1442121, 0.4329108]]

Expected (Unparsed): [[0.144212095,0.43291080000000004]]

Actual:   [[0.1443, 0.433]]

Expected: [[0.1443, 0.433]]