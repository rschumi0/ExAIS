import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Sep3504 = tf.keras.layers.Input(shape=([1, 2, 1]))

Sep3504 = keras.layers.SeparableConv2D(2, (1, 2),strides=(1, 1), padding='valid', name = 'Sep3504', )(in0Sep3504)
Res85615 = keras.layers.Reshape((1, 2), name = 'Res85615', )(Sep3504)
Up_94556 = keras.layers.UpSampling1D(size=(2), name = 'Up_94556', )(Res85615)
model = tf.keras.models.Model(inputs=[in0Sep3504], outputs=Up_94556)
w = model.get_layer('Sep3504').get_weights() 
w[0] = np.array([[[[0.3089]], [[0.3818]]]])
w[1] = np.array([[[[0.2487, 0.6068]]]])
w[2] = np.array([0, 0])
model.get_layer('Sep3504').set_weights(w) 
in0Sep3504 = tf.constant([[[[0.1785], [0.6918]]]])
print (np.array2string(model.predict([in0Sep3504],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Up_94556.png')

LSep3504 = separable_conv2D_layer([[[[0.1785], [0.6918]]]], 1, 2,[[[[[0.3089]], [[0.3818]]]],[[[[0.2487, 0.6068]]]]],[0, 0], 1, 1, false, Sep3504), 
LRes85615 = reshape_layer(Sep3504, [1, 2], Res85615), 
LUp_94556 = up_sampling1D_layer(Res85615, 2, Up_94556), 
exec_layers([LSep3504,LRes85615,LUp_94556],["Sep3504","Res85615","Up_94556"],Up_94556,"Up_94556")

Actual (Unparsed): [[[0.0794019, 0.1937318], [0.0794019, 0.1937318]]]

Expected (Unparsed): [[[0.079401924243,0.19373175565200002],[0.079401924243,0.19373175565200002]]]

Actual:   [[[0.0795, 0.1938], [0.0795, 0.1938]]]

Expected: [[[0.0795, 0.1938], [0.0795, 0.1938]]]