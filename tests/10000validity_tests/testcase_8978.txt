import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Mul87677 = tf.keras.layers.Input(shape=([1, 1, 1, 2]))
in1Mul87677 = tf.keras.layers.Input(shape=([1, 1, 1, 2]))

Mul87677 = keras.layers.Multiply(name = 'Mul87677', )([in0Mul87677,in1Mul87677])
Res92471 = keras.layers.Reshape((1, 1, 2), name = 'Res92471', )(Mul87677)
Res97527 = keras.layers.Reshape((1, 2), name = 'Res97527', )(Res92471)
Zer25696 = keras.layers.ZeroPadding1D(padding=((1, 1)), name = 'Zer25696', )(Res97527)
Glo76458 = keras.layers.GlobalAveragePooling1D(name = 'Glo76458', )(Zer25696)
Lea14397 = keras.layers.LeakyReLU(alpha=1.1705802853121168, name = 'Lea14397', )(Glo76458)
model = tf.keras.models.Model(inputs=[in0Mul87677,in1Mul87677], outputs=Lea14397)
in0Mul87677 = tf.constant([[[[[0.4102, 0.8993]]]]])
in1Mul87677 = tf.constant([[[[[0.43, 0.2188]]]]])
print (np.array2string(model.predict([in0Mul87677,in1Mul87677],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Lea14397.png')

LMul87677 = multiply_layer([[[[[[0.4102, 0.8993]]]]], [[[[[0.43, 0.2188]]]]]], Mul87677), 
LRes92471 = reshape_layer(Mul87677, [1, 1, 2], Res92471), 
LRes97527 = reshape_layer(Res92471, [1, 2], Res97527), 
LZer25696 = zero_padding1D_layer(Res97527, 1, 1, Zer25696), 
LGlo76458 = global_average_pooling1D_layer(Zer25696, Glo76458), 
LLea14397 = leaky_relu_layer(Glo76458, 1.1705802853121168, Lea14397), 
exec_layers([LMul87677,LRes92471,LRes97527,LZer25696,LGlo76458,LLea14397],["Mul87677","Res92471","Res97527","Zer25696","Glo76458","Lea14397"],Lea14397,"Lea14397")

Actual (Unparsed): [[0.0587953, 0.0655889]]

Expected (Unparsed): [[0.05879533333333334,0.06558894666666666]]

Actual:   [[0.0588, 0.0656]]

Expected: [[0.0588, 0.0656]]