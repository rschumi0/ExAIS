import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Add7897 = tf.keras.layers.Input(shape=([1, 2, 1, 2]))
in1Add7897 = tf.keras.layers.Input(shape=([1, 2, 1, 2]))
in0Con23443 = tf.keras.layers.Input(shape=([3, 3, 1]))
in0Dot25786 = tf.keras.layers.Input(shape=([3]))
in1Dot25786 = tf.keras.layers.Input(shape=([3]))
in0Con6074 = tf.keras.layers.Input(shape=([3, 3, 1]))
in0Sub89987 = tf.keras.layers.Input(shape=([3, 3, 2]))
in1Sub89987 = tf.keras.layers.Input(shape=([3, 3, 2]))

Add7897 = keras.layers.Add(name = 'Add7897', )([in0Add7897,in1Add7897])
Den23796 = keras.layers.Dense(3,name = 'Den23796', )(Add7897)
Glo23701 = keras.layers.GlobalMaxPool3D(name = 'Glo23701', )(Den23796)
Res96875 = keras.layers.Reshape((3, 1), name = 'Res96875', )(Glo23701)
Res83392 = keras.layers.Reshape((3, 1, 1), name = 'Res83392', )(Res96875)
Zer85032 = keras.layers.ZeroPadding2D(padding=((0, 0), (2, 0)), name = 'Zer85032', )(Res83392)
Con23443 = keras.layers.Concatenate(axis=3, name = 'Con23443', )([Zer85032,in0Con23443])
Dot25786 = keras.layers.Dot(axes=(1, 1), name = 'Dot25786', )([in0Dot25786,in1Dot25786])
Res86860 = keras.layers.Reshape((1, 1), name = 'Res86860', )(Dot25786)
Res32200 = keras.layers.Reshape((1, 1, 1), name = 'Res32200', )(Res86860)
Zer63517 = keras.layers.ZeroPadding2D(padding=((2, 0), (2, 0)), name = 'Zer63517', )(Res32200)
Con6074 = keras.layers.Concatenate(axis=3, name = 'Con6074', )([Zer63517,in0Con6074])
Sub89987 = keras.layers.Subtract(name = 'Sub89987', )([in0Sub89987,in1Sub89987])
Sub88146 = keras.layers.Subtract(name = 'Sub88146', )([Con6074,Sub89987])
ELU6852 = keras.layers.ELU(alpha=3.3901335994710884, name = 'ELU6852', )(Sub88146)
Sub75842 = keras.layers.Subtract(name = 'Sub75842', )([Con23443,ELU6852])
model = tf.keras.models.Model(inputs=[in0Add7897,in1Add7897,in0Con23443,in0Dot25786,in1Dot25786,in0Con6074,in0Sub89987,in1Sub89987], outputs=Sub75842)
w = model.get_layer('Den23796').get_weights() 
w[0] = np.array([[0.083, 0.4704, 0.6987], [0.3068, 0.4865, 0.5239]])
w[1] = np.array([0.9391, 0.0147, 0.5743])
model.get_layer('Den23796').set_weights(w) 
in0Add7897 = tf.constant([[[[[0.8743, 0.7064]], [[0.5338, 0.8006]]]]])
in1Add7897 = tf.constant([[[[[0.674, 0.9742]], [[0.3865, 0.2049]]]]])
in0Con23443 = tf.constant([[[[0.779], [0.9984], [0.9168]], [[0.5307], [0.2351], [0.9697]], [[0.2295], [0.1413], [0.8303]]]])
in0Dot25786 = tf.constant([[0.4935, 0.7935, 0.1994]])
in1Dot25786 = tf.constant([[0.5873, 0.3304, 0.2059]])
in0Con6074 = tf.constant([[[[0.3103], [0.9056], [0.3273]], [[0.2767], [0.5794], [0.2039]], [[0.5906], [0.7312], [0.5928]]]])
in0Sub89987 = tf.constant([[[[0.2728, 0.2332], [0.4587, 0.9715], [0.2753, 0.7271]], [[0.7355, 0.1287], [0.6444, 0.5513], [0.3911, 0.8878]], [[0.7809, 0.2279], [0.4814, 0.1811], [0.9783, 0.8115]]]])
in1Sub89987 = tf.constant([[[[0.3111, 0.3292], [0.9906, 0.6326], [0.1734, 0.576]], [[0.5012, 0.9392], [0.6932, 0.697], [0.5325, 0.4849]], [[0.9106, 0.4913], [0.0056, 0.174], [0.9952, 0.7297]]]])
print (np.array2string(model.predict([in0Add7897,in1Add7897,in0Con23443,in0Dot25786,in1Dot25786,in0Con6074,in0Sub89987,in1Sub89987],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Sub75842.png')

LAdd7897 = add_layer([[[[[[0.8743, 0.7064]], [[0.5338, 0.8006]]]]], [[[[[0.674, 0.9742]], [[0.3865, 0.2049]]]]]], Add7897), 
LDen23796 = dense_layer(Add7897, [[0.083, 0.4704, 0.6987], [0.3068, 0.4865, 0.5239]],[0.9391, 0.0147, 0.5743], Den23796), 
LGlo23701 = global_max_pool3D_layer(Den23796, Glo23701), 
LRes96875 = reshape_layer(Glo23701, [3, 1], Res96875), 
LRes83392 = reshape_layer(Res96875, [3, 1, 1], Res83392), 
LZer85032 = zero_padding2D_layer(Res83392, 0, 0, 2, 0, Zer85032), 
LCon23443 = concatenate_layer([Zer85032,[[[[0.779], [0.9984], [0.9168]], [[0.5307], [0.2351], [0.9697]], [[0.2295], [0.1413], [0.8303]]]]], 3, Con23443), 
LDot25786 = dot_layer([[0.4935, 0.7935, 0.1994]], [[0.5873, 0.3304, 0.2059]], 1, 1, Dot25786), 
LRes86860 = reshape_layer(Dot25786, [1, 1], Res86860), 
LRes32200 = reshape_layer(Res86860, [1, 1, 1], Res32200), 
LZer63517 = zero_padding2D_layer(Res32200, 2, 0, 2, 0, Zer63517), 
LCon6074 = concatenate_layer([Zer63517,[[[[0.3103], [0.9056], [0.3273]], [[0.2767], [0.5794], [0.2039]], [[0.5906], [0.7312], [0.5928]]]]], 3, Con6074), 
LSub89987 = subtract_layer([[[[0.2728, 0.2332], [0.4587, 0.9715], [0.2753, 0.7271]], [[0.7355, 0.1287], [0.6444, 0.5513], [0.3911, 0.8878]], [[0.7809, 0.2279], [0.4814, 0.1811], [0.9783, 0.8115]]]], [[[[0.3111, 0.3292], [0.9906, 0.6326], [0.1734, 0.576]], [[0.5012, 0.9392], [0.6932, 0.697], [0.5325, 0.4849]], [[0.9106, 0.4913], [0.0056, 0.174], [0.9952, 0.7297]]]], Sub89987), 
LSub88146 = subtract_layer(Con6074,Sub89987, Sub88146), 
LELU6852 = elu_layer(Sub88146, 3.3901335994710884, ELU6852), 
LSub75842 = subtract_layer(Con23443,ELU6852, Sub75842), 
exec_layers([LAdd7897,LDen23796,LGlo23701,LRes96875,LRes83392,LZer85032,LCon23443,LDot25786,LRes86860,LRes32200,LZer63517,LCon6074,LSub89987,LSub88146,LELU6852,LSub75842],["Add7897","Den23796","Glo23701","Res96875","Res83392","Zer85032","Con23443","Dot25786","Res86860","Res32200","Zer63517","Con6074","Sub89987","Sub88146","ELU6852","Sub75842"],Sub75842,"Sub75842")

Actual (Unparsed): [[[[-0.0383000, 0.3727000], [-0.5319000, 0.4316999], [1.9116536, 0.7406000]], [[0.7081159, -0.5564999], [-0.0488000, -0.4900000], [1.4192322, 1.5814499]], [[-0.1297000, -0.6245000], [1.2835461, -0.5828000], [1.9266022, 0.3192999]]]]

Expected (Unparsed): [[[[-0.0383,0.37270000000000003],[-0.5319,0.4317],[1.9116536006532086,0.7405999999999999]],[[0.7081160440345069,-0.5565],[-0.048800000000000066,-0.49],[1.41923222,1.581449969640191]],[[-0.12969999999999993,-0.6245],[1.2835461188123676,-0.5828],[1.9266021400000004,0.31930000000000003]]]]

Actual:   [[[[-0.0383, 0.3727], [-0.5319, 0.4317], [1.9117, 0.7406]], [[0.7082, -0.5564], [-0.0488, -0.49], [1.4193, 1.5815]], [[-0.1297, -0.6245], [1.2836, -0.5828], [1.9267, 0.3193]]]]

Expected: [[[[-0.0383, 0.3728], [-0.5319, 0.4317], [1.9117, 0.7406]], [[0.7082, -0.5565], [-0.0488, -0.49], [1.4193, 1.5815]], [[-0.1296, -0.6245], [1.2836, -0.5828], [1.9267, 0.3194]]]]