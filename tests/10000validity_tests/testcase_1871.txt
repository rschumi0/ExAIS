import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Glo39890 = tf.keras.layers.Input(shape=([2, 2, 1, 2]))
in0Con33842 = tf.keras.layers.Input(shape=([2, 2, 2, 1]))
in0Ave76829 = tf.keras.layers.Input(shape=([1, 1, 2, 2]))
in1Ave76829 = tf.keras.layers.Input(shape=([1, 1, 2, 2]))
in0Lay7371 = tf.keras.layers.Input(shape=([2, 2, 2]))
in0Min36664 = tf.keras.layers.Input(shape=([1, 1, 1, 1]))
in1Min36664 = tf.keras.layers.Input(shape=([1, 1, 1, 1]))
in0Con62810 = tf.keras.layers.Input(shape=([2, 2, 2, 1]))

Glo39890 = keras.layers.GlobalMaxPool3D(name = 'Glo39890', )(in0Glo39890)
Res69908 = keras.layers.Reshape((2, 1), name = 'Res69908', )(Glo39890)
Res15175 = keras.layers.Reshape((2, 1, 1), name = 'Res15175', )(Res69908)
Res3470 = keras.layers.Reshape((2, 1, 1, 1), name = 'Res3470', )(Res15175)
Zer83379 = keras.layers.ZeroPadding3D(padding=((0, 0), (1, 0), (1, 0)), name = 'Zer83379', )(Res3470)
Con33842 = keras.layers.Concatenate(axis=4, name = 'Con33842', )([Zer83379,in0Con33842])
Ave76829 = keras.layers.Average(name = 'Ave76829', )([in0Ave76829,in1Ave76829])
Zer91470 = keras.layers.ZeroPadding3D(padding=((1, 0), (1, 0), (0, 0)), name = 'Zer91470', )(Ave76829)
Lay7371 = keras.layers.LayerNormalization(axis=3, epsilon=2.55854618485155, name = 'Lay7371', )(in0Lay7371)
Res67779 = keras.layers.Reshape((2, 2, 2, 1), name = 'Res67779', )(Lay7371)
Min36664 = keras.layers.Minimum(name = 'Min36664', )([in0Min36664,in1Min36664])
Zer12157 = keras.layers.ZeroPadding3D(padding=((1, 0), (1, 0), (1, 0)), name = 'Zer12157', )(Min36664)
Add2995 = keras.layers.Add(name = 'Add2995', )([Res67779,Zer12157])
Con62810 = keras.layers.Concatenate(axis=4, name = 'Con62810', )([Add2995,in0Con62810])
Sub60242 = keras.layers.Subtract(name = 'Sub60242', )([Zer91470,Con62810])
Mul52473 = keras.layers.Multiply(name = 'Mul52473', )([Con33842,Sub60242])
model = tf.keras.models.Model(inputs=[in0Glo39890,in0Con33842,in0Ave76829,in1Ave76829,in0Lay7371,in0Min36664,in1Min36664,in0Con62810], outputs=Mul52473)
in0Glo39890 = tf.constant([[[[[1.353, 1.9451]], [[1.5096, 1.4836]]], [[[1.0865, 1.5562]], [[1.6621, 1.0652]]]]])
in0Con33842 = tf.constant([[[[[0.0265], [0.4294]], [[0.5142], [0.6674]]], [[[0.3335], [0.5188]], [[0.912], [0.4338]]]]])
in0Ave76829 = tf.constant([[[[[0.779, 0.9269], [0.9693, 0.5486]]]]])
in1Ave76829 = tf.constant([[[[[0.9998, 0.9157], [0.9095, 0.5862]]]]])
in0Lay7371 = tf.constant([[[[1.2288, 1.7993], [1.7043, 1.779]], [[1.6879, 1.9831], [1.9883, 1.075]]]])
in0Min36664 = tf.constant([[[[[0.7372]]]]])
in1Min36664 = tf.constant([[[[[0.3945]]]]])
in0Con62810 = tf.constant([[[[[0.3392], [0.7626]], [[0.6131], [0.6758]]], [[[0.2672], [0.2605]], [[0.2528], [0.4571]]]]])
print (np.array2string(model.predict([in0Glo39890,in0Con33842,in0Ave76829,in1Ave76829,in0Lay7371,in0Min36664,in1Min36664,in0Con62810],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Mul52473.png')

LGlo39890 = global_max_pool3D_layer([[[[[1.353, 1.9451]], [[1.5096, 1.4836]]], [[[1.0865, 1.5562]], [[1.6621, 1.0652]]]]], Glo39890), 
LRes69908 = reshape_layer(Glo39890, [2, 1], Res69908), 
LRes15175 = reshape_layer(Res69908, [2, 1, 1], Res15175), 
LRes3470 = reshape_layer(Res15175, [2, 1, 1, 1], Res3470), 
LZer83379 = zero_padding3D_layer(Res3470, 0, 0, 1, 0, 1, 0, Zer83379), 
LCon33842 = concatenate_layer([Zer83379,[[[[[0.0265], [0.4294]], [[0.5142], [0.6674]]], [[[0.3335], [0.5188]], [[0.912], [0.4338]]]]]], 4, Con33842), 
LAve76829 = average_layer([[[[[[0.779, 0.9269], [0.9693, 0.5486]]]]], [[[[[0.9998, 0.9157], [0.9095, 0.5862]]]]]], Ave76829), 
LZer91470 = zero_padding3D_layer(Ave76829, 1, 0, 1, 0, 0, 0, Zer91470), 
LLay7371 = layer_normalization_layer([[[[1.2288, 1.7993], [1.7043, 1.779]], [[1.6879, 1.9831], [1.9883, 1.075]]]], 3, 2.55854618485155, Lay7371), 
LRes67779 = reshape_layer(Lay7371, [2, 2, 2, 1], Res67779), 
LMin36664 = minimum_layer([[[[[[0.7372]]]]], [[[[[0.3945]]]]]], Min36664), 
LZer12157 = zero_padding3D_layer(Min36664, 1, 0, 1, 0, 1, 0, Zer12157), 
LAdd2995 = add_layer([Res67779,Zer12157], Add2995), 
LCon62810 = concatenate_layer([Add2995,[[[[[0.3392], [0.7626]], [[0.6131], [0.6758]]], [[[0.2672], [0.2605]], [[0.2528], [0.4571]]]]]], 4, Con62810), 
LSub60242 = subtract_layer(Zer91470,Con62810, Sub60242), 
LMul52473 = multiply_layer([Con33842,Sub60242], Mul52473), 
exec_layers([LGlo39890,LRes69908,LRes15175,LRes3470,LZer83379,LCon33842,LAve76829,LZer91470,LLay7371,LRes67779,LMin36664,LZer12157,LAdd2995,LCon62810,LSub60242,LMul52473],["Glo39890","Res69908","Res15175","Res3470","Zer83379","Con33842","Ave76829","Zer91470","Lay7371","Res67779","Min36664","Zer12157","Add2995","Con62810","Sub60242","Mul52473"],Mul52473,"Mul52473")

Actual (Unparsed): [[[[[0.0000000, -0.0089888], [-0.0000000, -0.3274604]], [[0.0000000, -0.3152560], [-0.0388001, -0.4510289]]], [[[0.0000000, -0.0891112], [-0.0000000, -0.1351474]], [[0.0000000, 0.6096720], [1.5938525, 0.0478481]]]]]

Expected (Unparsed): [[[[[0.0,-0.0089888],[-0.0,-0.32746043999999996]],[[0.0,-0.31525601999999997],[-0.03880009241665832,-0.45102891999999994]]],[[[0.0,-0.0891112],[-0.0,-0.13514740000000003]],[[0.0,0.609672],[1.593852581134229,0.047848140000000004]]]]]

Actual:   [[[[[0, -0.0089], [-0, -0.3274]], [[0, -0.3152], [-0.0388, -0.451]]], [[[0, -0.0891], [-0, -0.1351]], [[0, 0.6097], [1.5939, 0.0479]]]]]

Expected: [[[[[0, -0.0089], [-0, -0.3274]], [[0, -0.3152], [-0.0388, -0.451]]], [[[0, -0.0891], [-0, -0.1351]], [[0, 0.6097], [1.5939, 0.0479]]]]]