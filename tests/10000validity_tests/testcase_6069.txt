import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0ReL27862 = tf.keras.layers.Input(shape=([1, 2]))

ReL27862 = keras.layers.ReLU(max_value=7.1787079626112575, negative_slope=0.9415594532065406, threshold=9.992319934862286, name = 'ReL27862', input_shape=(1, 2))(in0ReL27862)
Res32037 = keras.layers.Reshape((1, 2, 1), name = 'Res32037', )(ReL27862)
Up_20485 = keras.layers.UpSampling2D(size=(2, 2), name = 'Up_20485', )(Res32037)
model = tf.keras.models.Model(inputs=[in0ReL27862], outputs=Up_20485)
in0ReL27862 = tf.constant([[[0.0585, 0.3291]]])
print (np.array2string(model.predict([in0ReL27862],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Up_20485.png')

LReL27862 = relu_layer([[[0.0585, 0.3291]]], 7.1787079626112575, 0.9415594532065406, 9.992319934862286, ReL27862), 
LRes32037 = reshape_layer(ReL27862, [1, 2, 1], Res32037), 
LUp_20485 = up_sampling2D_layer(Res32037, 2, 2, Up_20485), 
exec_layers([LReL27862,LRes32037,LUp_20485],["ReL27862","Res32037","Up_20485"],Up_20485,"Up_20485")

Actual (Unparsed): [[[[-9.3532821], [-9.3532821], [-9.0984961], [-9.0984961]], [[-9.3532821], [-9.3532821], [-9.0984961], [-9.0984961]]]]

Expected (Unparsed): [[[[-9.353282066121166],[-9.353282066121166],[-9.098496078083475],[-9.098496078083475]],[[-9.353282066121166],[-9.353282066121166],[-9.098496078083475],[-9.098496078083475]]]]

Actual:   [[[[-9.3532], [-9.3532], [-9.0984], [-9.0984]], [[-9.3532], [-9.3532], [-9.0984], [-9.0984]]]]

Expected: [[[[-9.3532], [-9.3532], [-9.0984], [-9.0984]], [[-9.3532], [-9.3532], [-9.0984], [-9.0984]]]]