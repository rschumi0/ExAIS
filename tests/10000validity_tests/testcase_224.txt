import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Min80529 = tf.keras.layers.Input(shape=([1, 1, 1, 1]))
in1Min80529 = tf.keras.layers.Input(shape=([1, 1, 1, 1]))

Min80529 = keras.layers.Minimum(name = 'Min80529', )([in0Min80529,in1Min80529])
Res65499 = keras.layers.Reshape((1, 1, 1), name = 'Res65499', )(Min80529)
Sep17381 = keras.layers.SeparableConv2D(2, (1, 1),strides=(1, 1), padding='valid', name = 'Sep17381', )(Res65499)
Res12503 = keras.layers.Reshape((1, 1, 2, 1), name = 'Res12503', )(Sep17381)
Glo52787 = keras.layers.GlobalAveragePooling3D(name = 'Glo52787', )(Res12503)
model = tf.keras.models.Model(inputs=[in0Min80529,in1Min80529], outputs=Glo52787)
w = model.get_layer('Sep17381').get_weights() 
w[0] = np.array([[[[0.2252]]]])
w[1] = np.array([[[[0.7039, 0.6932]]]])
w[2] = np.array([0, 0])
model.get_layer('Sep17381').set_weights(w) 
in0Min80529 = tf.constant([[[[[0.1231]]]]])
in1Min80529 = tf.constant([[[[[0.7769]]]]])
print (np.array2string(model.predict([in0Min80529,in1Min80529],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Glo52787.png')

LMin80529 = minimum_layer([[[[[[0.1231]]]]], [[[[[0.7769]]]]]], Min80529), 
LRes65499 = reshape_layer(Min80529, [1, 1, 1], Res65499), 
LSep17381 = separable_conv2D_layer(Res65499, 1, 1,[[[[[0.2252]]]],[[[[0.7039, 0.6932]]]]],[0, 0], 1, 1, false, Sep17381), 
LRes12503 = reshape_layer(Sep17381, [1, 1, 2, 1], Res12503), 
LGlo52787 = global_average_pooling3D_layer(Res12503, Glo52787), 
exec_layers([LMin80529,LRes65499,LSep17381,LRes12503,LGlo52787],["Min80529","Res65499","Sep17381","Res12503","Glo52787"],Glo52787,"Glo52787")

Actual (Unparsed): [[0.0193653]]

Expected (Unparsed): [[0.019365286926]]

Actual:   [[0.0194]]

Expected: [[0.0194]]