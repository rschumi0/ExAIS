import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Con62665 = tf.keras.layers.Input(shape=([1, 1, 1, 2]))

Con62665 = keras.layers.Conv3D(2, (1, 1, 1),strides=(1, 1, 1), padding='same', dilation_rate=(1, 1, 1), name = 'Con62665', )(in0Con62665)
Res66110 = keras.layers.Reshape((1, 1, 2), name = 'Res66110', )(Con62665)
Sep5671 = keras.layers.SeparableConv2D(3, (1, 1),strides=(1, 1), padding='valid', name = 'Sep5671', )(Res66110)
Thr87613 = keras.layers.ThresholdedReLU(theta=4.788941680664743, name = 'Thr87613', )(Sep5671)
model = tf.keras.models.Model(inputs=[in0Con62665], outputs=Thr87613)
w = model.get_layer('Con62665').get_weights() 
w[0] = np.array([[[[[0.4692, 0.7509], [0.5858, 0.6034]]]]])
w[1] = np.array([0, 0])
model.get_layer('Con62665').set_weights(w) 
w = model.get_layer('Sep5671').get_weights() 
w[0] = np.array([[[[0.0633], [0.9596]]]])
w[1] = np.array([[[[0.4448, 0.414, 0.1794], [0.9211, 0.3895, 0.0719]]]])
w[2] = np.array([0, 0, 0])
model.get_layer('Sep5671').set_weights(w) 
in0Con62665 = tf.constant([[[[[0.8875, 0.5402]]]]])
print (np.array2string(model.predict([in0Con62665],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Thr87613.png')

LCon62665 = conv3D_layer([[[[[0.8875, 0.5402]]]]], 1, 1, 1,[[[[[0.4692, 0.7509], [0.5858, 0.6034]]]]],[0, 0], 1, 1, 1, true, 1, 1, 1, Con62665), 
LRes66110 = reshape_layer(Con62665, [1, 1, 2], Res66110), 
LSep5671 = separable_conv2D_layer(Res66110, 1, 1,[[[[[0.0633], [0.9596]]]],[[[[0.4448, 0.414, 0.1794], [0.9211, 0.3895, 0.0719]]]]],[0, 0, 0], 1, 1, false, Sep5671), 
LThr87613 = thresholded_relu_layer(Sep5671, 4.788941680664743, Thr87613), 
exec_layers([LCon62665,LRes66110,LSep5671,LThr87613],["Con62665","Res66110","Sep5671","Thr87613"],Thr87613,"Thr87613")

Actual (Unparsed): [[[[0.0000000, 0.0000000, 0.0000000]]]]

Expected (Unparsed): [[[[0,0,0]]]]

Actual:   [[[[0, 0, 0]]]]

Expected: [[[[0, 0, 0]]]]