import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0LST39898 = tf.keras.layers.Input(shape=([3, 2]))
in0Con51883 = tf.keras.layers.Input(shape=([16, 2, 2, 3]))
in0Con69425 = tf.keras.layers.Input(shape=([2, 2, 2, 2]))
in0Sep726 = tf.keras.layers.Input(shape=([2, 1]))
in0Min84238 = tf.keras.layers.Input(shape=([1, 1, 1, 1]))
in1Min84238 = tf.keras.layers.Input(shape=([1, 1, 1, 1]))
in0Con73815 = tf.keras.layers.Input(shape=([253]))

LST39898 = keras.layers.LSTM(2,recurrent_activation='sigmoid', name = 'LST39898', )(in0LST39898)
Res80319 = keras.layers.Reshape((2, 1), name = 'Res80319', )(LST39898)
Res25673 = keras.layers.Reshape((2, 1, 1), name = 'Res25673', )(Res80319)
Res89378 = keras.layers.Reshape((2, 1, 1, 1), name = 'Res89378', )(Res25673)
Zer56928 = keras.layers.ZeroPadding3D(padding=((14, 0), (1, 0), (1, 0)), name = 'Zer56928', )(Res89378)
Con51883 = keras.layers.Concatenate(axis=4, name = 'Con51883', )([Zer56928,in0Con51883])
Con69425 = keras.layers.Conv3DTranspose(4, (2, 1, 1),strides=(8, 1, 1), padding='same', name = 'Con69425', )(in0Con69425)
Min4830 = keras.layers.Minimum(name = 'Min4830', )([Con51883,Con69425])
Res67243 = keras.layers.Reshape((16, 2, 8), name = 'Res67243', )(Min4830)
Res36253 = keras.layers.Reshape((16, 16), name = 'Res36253', )(Res67243)
Fla70937 = keras.layers.Flatten(name = 'Fla70937', )(Res36253)
Sep726 = keras.layers.SeparableConv1D(4, (1),strides=(1), padding='same', name = 'Sep726', )(in0Sep726)
Res84001 = keras.layers.Reshape((2, 4, 1), name = 'Res84001', )(Sep726)
Max87768 = keras.layers.MaxPool2D(pool_size=(2, 3), strides=(1, 1), padding='same', name = 'Max87768', )(Res84001)
Res66033 = keras.layers.Reshape((2, 4, 1, 1), name = 'Res66033', )(Max87768)
Min84238 = keras.layers.Minimum(name = 'Min84238', )([in0Min84238,in1Min84238])
Zer24884 = keras.layers.ZeroPadding3D(padding=((1, 0), (3, 0), (0, 0)), name = 'Zer24884', )(Min84238)
Add70707 = keras.layers.Add(name = 'Add70707', )([Res66033,Zer24884])
Res15920 = keras.layers.Reshape((2, 4, 1), name = 'Res15920', )(Add70707)
Res54892 = keras.layers.Reshape((2, 4), name = 'Res54892', )(Res15920)
Sim79718 = keras.layers.SimpleRNN(3,name = 'Sim79718', )(Res54892)
Mas69812 = keras.layers.Masking(mask_value=1, name = 'Mas69812', )(Sim79718)
Con73815 = keras.layers.Concatenate(axis=1, name = 'Con73815', )([Mas69812,in0Con73815])
Mul94845 = keras.layers.Multiply(name = 'Mul94845', )([Fla70937,Con73815])
model = tf.keras.models.Model(inputs=[in0LST39898,in0Con51883,in0Con69425,in0Sep726,in0Min84238,in1Min84238,in0Con73815], outputs=Mul94845)
w = model.get_layer('LST39898').get_weights() 
w[0] = np.array([[2, 5, 9, 4, 1, 4, 3, 5], [8, 4, 2, 5, 4, 3, 8, 4]])
w[1] = np.array([[3, 7, 10, 10, 9, 9, 6, 2], [7, 5, 2, 10, 2, 2, 4, 10]])
w[2] = np.array([8, 9, 10, 9, 1, 3, 8, 8])
model.get_layer('LST39898').set_weights(w) 
w = model.get_layer('Con69425').get_weights() 
w[0] = np.array([[[[[0.9421, 0.624], [0.0283, 0.0389], [0.6168, 0.0978], [0.688, 0.7566]]]], [[[[0.5663, 0.811], [0.4792, 0.4625], [0.3124, 0.4711], [0.3516, 0.5517]]]]])
w[1] = np.array([0, 0, 0, 0])
model.get_layer('Con69425').set_weights(w) 
w = model.get_layer('Sep726').get_weights() 
w[0] = np.array([[[0.3064]]])
w[1] = np.array([[[0.5152, 0.4579, 0.8197, 0.2634]]])
w[2] = np.array([0, 0, 0, 0])
model.get_layer('Sep726').set_weights(w) 
w = model.get_layer('Sim79718').get_weights() 
w[0] = np.array([[7, 1, 6], [10, 10, 3], [10, 7, 10], [6, 6, 3]])
w[1] = np.array([[10, 6, 9], [5, 2, 2], [3, 10, 1]])
w[2] = np.array([9, 7, 8])
model.get_layer('Sim79718').set_weights(w) 
in0LST39898 = tf.constant([[[6, 6], [6, 10], [10, 3]]])
in0Con51883 = tf.constant([[[[[0.0221, 0.439, 0.2651], [0.5269, 0.7315, 0.7542]], [[0.7498, 0.0409, 0.179], [0.9266, 0.6924, 0.8172]]], [[[0.5409, 0.5438, 0.5124], [0.2782, 0.164, 0.1072]], [[0.1495, 0.5905, 0.2705], [0.5739, 0.9321, 0.6741]]], [[[0.9416, 0.8916, 0.0159], [0.058, 0.1971, 0.4886]], [[0.3726, 0.6579, 0.7589], [0.6739, 0.0909, 0.1898]]], [[[0.1304, 0.4246, 0.3148], [0.5975, 0.9553, 0.0954]], [[0.4896, 0.5666, 0.2286], [0.1715, 0.7121, 0.9267]]], [[[0.8241, 0.3037, 0.8876], [0.5022, 0.9765, 0.5149]], [[0.0866, 0.7618, 0.8095], [0.6475, 0.962, 0.4374]]], [[[0.736, 0.8314, 0.3394], [0.1374, 0.5754, 0.9999]], [[0.1264, 0.8616, 0.5284], [0.2492, 0.4972, 0.2399]]], [[[0.7298, 0.1491, 0.9077], [0.2655, 0.9606, 0.9432]], [[0.8684, 0.267, 0.2413], [0.9509, 0.5622, 0.8776]]], [[[0.4525, 0.379, 0.3313], [0.7932, 0.8313, 0.1819]], [[0.7784, 0.1903, 0.1787], [0.5738, 0.7264, 0.7692]]], [[[0.8794, 0.286, 0.565], [0.528, 0.3828, 0.6894]], [[0.5759, 0.5348, 0.6244], [0.4562, 0.6705, 0.1618]]], [[[0.9748, 0.5242, 0.6038], [0.4741, 0.6981, 0.7411]], [[0.1329, 0.7242, 0.5719], [0.7209, 0.7773, 0.1912]]], [[[0.276, 0.1198, 0.8079], [0.929, 0.3934, 0.7558]], [[0.8447, 0.3364, 0.381], [0.7351, 0.971, 0.8482]]], [[[0.669, 0.0263, 0.5903], [0.4609, 0.1237, 0.7267]], [[0.3433, 0.2518, 0.4707], [0.6029, 0.2798, 0.5298]]], [[[0.9164, 0.3563, 0.1377], [0.7633, 0.1291, 0.4626]], [[0.0191, 0.9711, 0.9441], [0.3657, 0.9735, 0.8348]]], [[[0.6439, 0.2692, 0.9992], [0.3908, 0.4294, 0.7589]], [[0.7566, 0.7968, 0.7487], [0.0182, 0.8488, 0.332]]], [[[0.475, 0.4503, 0.8731], [0.4842, 0.5403, 0.1107]], [[0.5685, 0.7083, 0.5194], [0.4697, 0.2951, 0.1958]]], [[[0.8326, 0.6754, 0.7688], [0.7884, 0.6917, 0.6669]], [[0.4435, 0.9872, 0.6453], [0.2024, 0.1845, 0.8627]]]]])
in0Con69425 = tf.constant([[[[[0.9574, 0.071], [0.7213, 0.2478]], [[0.6046, 0.5185], [0.646, 0.7921]]], [[[0.1326, 0.9753], [0.1591, 0.9961]], [[0.8219, 0.8418], [0.7233, 0.5311]]]]])
in0Sep726 = tf.constant([[[0.4022], [0.7118]]])
in0Min84238 = tf.constant([[[[[0.662]]]]])
in1Min84238 = tf.constant([[[[[0.0927]]]]])
in0Con73815 = tf.constant([[0.5127, 0.6446, 0.9629, 0.2511, 0.827, 0.1373, 0.1377, 0.9432, 0.2155, 0.6608, 0.4055, 0.2645, 0.5812, 0.1951, 0.2285, 0.0896, 0.167, 0.139, 0.0899, 0.9587, 0.6633, 0.2991, 0.0518, 0.4509, 0.3835, 0.8963, 0.8751, 0.9163, 0.4667, 0.2467, 0.8103, 0.905, 0.0903, 0.4223, 0.2648, 0.4858, 0.1002, 0.5104, 0.5589, 0.6598, 0.2988, 0.054, 0.8916, 0.2436, 0.8732, 0.8788, 0.4585, 0.923, 0.087, 0.7909, 0.3818, 0.6565, 0.4157, 0.5614, 0.7492, 0.2504, 0.7594, 0.2096, 0.5888, 0.7151, 0.2342, 0.8385, 0.0533, 0.9689, 0.3118, 0.1831, 0.433, 0.5569, 0.7546, 0.5901, 0.874, 0.3175, 0.877, 0.3634, 0.8369, 0.3491, 0.1518, 0.2832, 0.4016, 0.2015, 0.0767, 0.6326, 0.4936, 0.951, 0.5181, 0.2519, 0.9912, 0.7049, 0.4561, 0.9817, 0.4563, 0.1242, 0.1705, 0.3508, 0.9243, 0.7544, 0.4266, 0.522, 0.7886, 0.3115, 0.1476, 0.3143, 0.3187, 0.58, 0.3921, 0.5883, 0.7623, 0.2535, 0.1967, 0.4043, 0.2995, 0.8674, 0.9854, 0.1382, 0.3416, 0.9623, 0.8034, 0.1772, 0.794, 0.7456, 0.5894, 0.9077, 0.9428, 0.822, 0.0618, 0.4534, 0.5644, 0.005, 0.5706, 0.0275, 0.7059, 0.8354, 0.4384, 0.82, 0.3415, 0.1903, 0.8986, 0.0584, 0.768, 0.287, 0.7299, 0.251, 0.1724, 0.463, 0.0787, 0.6525, 0.2768, 0.3407, 0.7648, 0.6735, 0.3461, 0.3774, 0.5735, 0.2972, 0.131, 0.3426, 0.6507, 0.566, 0.5089, 0.9649, 0.1386, 0.849, 0.6873, 0.8486, 0.6172, 0.9175, 0.8349, 0.7718, 0.7478, 0.8143, 0.9219, 0.6459, 0.7561, 0.1315, 0.3629, 0.7444, 0.0359, 0.5841, 0.7844, 0.2871, 0.2088, 0.7055, 0.8647, 0.1055, 0.4309, 0.0792, 0.733, 0.9086, 0.602, 0.7693, 0.8563, 0.6183, 0.406, 0.5146, 0.6886, 0.3506, 0.783, 0.8134, 0.6173, 0.8808, 0.5232, 0.2373, 0.8966, 0.8499, 0.1542, 0.1894, 0.3299, 0.546, 0.1968, 0.8472, 0.4346, 0.8235, 0.159, 0.2153, 0.702, 0.6124, 0.3516, 0.057, 0.354, 0.5141, 0.7188, 0.9662, 0.687, 0.1785, 0.4013, 0.998, 0.6943, 0.5159, 0.6722, 0.0846, 0.1642, 0.3076, 0.2239, 0.9287, 0.8576, 0.4506, 0.5176, 0.1897, 0.6928, 0.8949, 0.059, 0.5543, 0.0823, 0.3134, 0.0092, 0.7207, 0.7021, 0.6845, 0.5029, 0.4129, 0.0042, 0.2578, 0.4077]])
print (np.array2string(model.predict([in0LST39898,in0Con51883,in0Con69425,in0Sep726,in0Min84238,in1Min84238,in0Con73815],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Mul94845.png')

LLST39898 = lstm_layer([[[6, 6], [6, 10], [10, 3]]],[[2, 5, 9, 4, 1, 4, 3, 5], [8, 4, 2, 5, 4, 3, 8, 4]],[[3, 7, 10, 10, 9, 9, 6, 2], [7, 5, 2, 10, 2, 2, 4, 10]],[8, 9, 10, 9, 1, 3, 8, 8], LST39898), 
LRes80319 = reshape_layer(LST39898, [2, 1], Res80319), 
LRes25673 = reshape_layer(Res80319, [2, 1, 1], Res25673), 
LRes89378 = reshape_layer(Res25673, [2, 1, 1, 1], Res89378), 
LZer56928 = zero_padding3D_layer(Res89378, 14, 0, 1, 0, 1, 0, Zer56928), 
LCon51883 = concatenate_layer([Zer56928,[[[[[0.0221, 0.439, 0.2651], [0.5269, 0.7315, 0.7542]], [[0.7498, 0.0409, 0.179], [0.9266, 0.6924, 0.8172]]], [[[0.5409, 0.5438, 0.5124], [0.2782, 0.164, 0.1072]], [[0.1495, 0.5905, 0.2705], [0.5739, 0.9321, 0.6741]]], [[[0.9416, 0.8916, 0.0159], [0.058, 0.1971, 0.4886]], [[0.3726, 0.6579, 0.7589], [0.6739, 0.0909, 0.1898]]], [[[0.1304, 0.4246, 0.3148], [0.5975, 0.9553, 0.0954]], [[0.4896, 0.5666, 0.2286], [0.1715, 0.7121, 0.9267]]], [[[0.8241, 0.3037, 0.8876], [0.5022, 0.9765, 0.5149]], [[0.0866, 0.7618, 0.8095], [0.6475, 0.962, 0.4374]]], [[[0.736, 0.8314, 0.3394], [0.1374, 0.5754, 0.9999]], [[0.1264, 0.8616, 0.5284], [0.2492, 0.4972, 0.2399]]], [[[0.7298, 0.1491, 0.9077], [0.2655, 0.9606, 0.9432]], [[0.8684, 0.267, 0.2413], [0.9509, 0.5622, 0.8776]]], [[[0.4525, 0.379, 0.3313], [0.7932, 0.8313, 0.1819]], [[0.7784, 0.1903, 0.1787], [0.5738, 0.7264, 0.7692]]], [[[0.8794, 0.286, 0.565], [0.528, 0.3828, 0.6894]], [[0.5759, 0.5348, 0.6244], [0.4562, 0.6705, 0.1618]]], [[[0.9748, 0.5242, 0.6038], [0.4741, 0.6981, 0.7411]], [[0.1329, 0.7242, 0.5719], [0.7209, 0.7773, 0.1912]]], [[[0.276, 0.1198, 0.8079], [0.929, 0.3934, 0.7558]], [[0.8447, 0.3364, 0.381], [0.7351, 0.971, 0.8482]]], [[[0.669, 0.0263, 0.5903], [0.4609, 0.1237, 0.7267]], [[0.3433, 0.2518, 0.4707], [0.6029, 0.2798, 0.5298]]], [[[0.9164, 0.3563, 0.1377], [0.7633, 0.1291, 0.4626]], [[0.0191, 0.9711, 0.9441], [0.3657, 0.9735, 0.8348]]], [[[0.6439, 0.2692, 0.9992], [0.3908, 0.4294, 0.7589]], [[0.7566, 0.7968, 0.7487], [0.0182, 0.8488, 0.332]]], [[[0.475, 0.4503, 0.8731], [0.4842, 0.5403, 0.1107]], [[0.5685, 0.7083, 0.5194], [0.4697, 0.2951, 0.1958]]], [[[0.8326, 0.6754, 0.7688], [0.7884, 0.6917, 0.6669]], [[0.4435, 0.9872, 0.6453], [0.2024, 0.1845, 0.8627]]]]]], 4, Con51883), 
LCon69425 = conv3D_transpose_layer([[[[[0.9574, 0.071], [0.7213, 0.2478]], [[0.6046, 0.5185], [0.646, 0.7921]]], [[[0.1326, 0.9753], [0.1591, 0.9961]], [[0.8219, 0.8418], [0.7233, 0.5311]]]]], 2, 1, 1,[[[[[0.9421, 0.624], [0.0283, 0.0389], [0.6168, 0.0978], [0.688, 0.7566]]]], [[[[0.5663, 0.811], [0.4792, 0.4625], [0.3124, 0.4711], [0.3516, 0.5517]]]]],[0, 0, 0, 0], 8, 1, 1, true, Con69425), 
LMin4830 = minimum_layer([Con51883,Con69425], Min4830), 
LRes67243 = reshape_layer(Min4830, [16, 2, 8], Res67243), 
LRes36253 = reshape_layer(Res67243, [16, 16], Res36253), 
LFla70937 = flatten_layer(Res36253, Fla70937), 
LSep726 = separable_conv1D_layer([[[0.4022], [0.7118]]], 1,[[[[0.3064]]],[[[0.5152, 0.4579, 0.8197, 0.2634]]]],[0, 0, 0, 0], 1, true, Sep726), 
LRes84001 = reshape_layer(Sep726, [2, 4, 1], Res84001), 
LMax87768 = max_pool2D_layer(Res84001, 2, 3, 1, 1, true, Max87768), 
LRes66033 = reshape_layer(Max87768, [2, 4, 1, 1], Res66033), 
LMin84238 = minimum_layer([[[[[[0.662]]]]], [[[[[0.0927]]]]]], Min84238), 
LZer24884 = zero_padding3D_layer(Min84238, 1, 0, 3, 0, 0, 0, Zer24884), 
LAdd70707 = add_layer([Res66033,Zer24884], Add70707), 
LRes15920 = reshape_layer(Add70707, [2, 4, 1], Res15920), 
LRes54892 = reshape_layer(Res15920, [2, 4], Res54892), 
LSim79718 = simple_rnn_layer(Res54892,[[7, 1, 6], [10, 10, 3], [10, 7, 10], [6, 6, 3]],[[10, 6, 9], [5, 2, 2], [3, 10, 1]],[9, 7, 8], Sim79718), 
LMas69812 = masking_layer(Sim79718, 1, Mas69812), 
LCon73815 = concatenate_layer([Mas69812,[[0.5127, 0.6446, 0.9629, 0.2511, 0.827, 0.1373, 0.1377, 0.9432, 0.2155, 0.6608, 0.4055, 0.2645, 0.5812, 0.1951, 0.2285, 0.0896, 0.167, 0.139, 0.0899, 0.9587, 0.6633, 0.2991, 0.0518, 0.4509, 0.3835, 0.8963, 0.8751, 0.9163, 0.4667, 0.2467, 0.8103, 0.905, 0.0903, 0.4223, 0.2648, 0.4858, 0.1002, 0.5104, 0.5589, 0.6598, 0.2988, 0.054, 0.8916, 0.2436, 0.8732, 0.8788, 0.4585, 0.923, 0.087, 0.7909, 0.3818, 0.6565, 0.4157, 0.5614, 0.7492, 0.2504, 0.7594, 0.2096, 0.5888, 0.7151, 0.2342, 0.8385, 0.0533, 0.9689, 0.3118, 0.1831, 0.433, 0.5569, 0.7546, 0.5901, 0.874, 0.3175, 0.877, 0.3634, 0.8369, 0.3491, 0.1518, 0.2832, 0.4016, 0.2015, 0.0767, 0.6326, 0.4936, 0.951, 0.5181, 0.2519, 0.9912, 0.7049, 0.4561, 0.9817, 0.4563, 0.1242, 0.1705, 0.3508, 0.9243, 0.7544, 0.4266, 0.522, 0.7886, 0.3115, 0.1476, 0.3143, 0.3187, 0.58, 0.3921, 0.5883, 0.7623, 0.2535, 0.1967, 0.4043, 0.2995, 0.8674, 0.9854, 0.1382, 0.3416, 0.9623, 0.8034, 0.1772, 0.794, 0.7456, 0.5894, 0.9077, 0.9428, 0.822, 0.0618, 0.4534, 0.5644, 0.005, 0.5706, 0.0275, 0.7059, 0.8354, 0.4384, 0.82, 0.3415, 0.1903, 0.8986, 0.0584, 0.768, 0.287, 0.7299, 0.251, 0.1724, 0.463, 0.0787, 0.6525, 0.2768, 0.3407, 0.7648, 0.6735, 0.3461, 0.3774, 0.5735, 0.2972, 0.131, 0.3426, 0.6507, 0.566, 0.5089, 0.9649, 0.1386, 0.849, 0.6873, 0.8486, 0.6172, 0.9175, 0.8349, 0.7718, 0.7478, 0.8143, 0.9219, 0.6459, 0.7561, 0.1315, 0.3629, 0.7444, 0.0359, 0.5841, 0.7844, 0.2871, 0.2088, 0.7055, 0.8647, 0.1055, 0.4309, 0.0792, 0.733, 0.9086, 0.602, 0.7693, 0.8563, 0.6183, 0.406, 0.5146, 0.6886, 0.3506, 0.783, 0.8134, 0.6173, 0.8808, 0.5232, 0.2373, 0.8966, 0.8499, 0.1542, 0.1894, 0.3299, 0.546, 0.1968, 0.8472, 0.4346, 0.8235, 0.159, 0.2153, 0.702, 0.6124, 0.3516, 0.057, 0.354, 0.5141, 0.7188, 0.9662, 0.687, 0.1785, 0.4013, 0.998, 0.6943, 0.5159, 0.6722, 0.0846, 0.1642, 0.3076, 0.2239, 0.9287, 0.8576, 0.4506, 0.5176, 0.1897, 0.6928, 0.8949, 0.059, 0.5543, 0.0823, 0.3134, 0.0092, 0.7207, 0.7021, 0.6845, 0.5029, 0.4129, 0.0042, 0.2578, 0.4077]]], 1, Con73815), 
LMul94845 = multiply_layer([Fla70937,Con73815], Mul94845), 
exec_layers([LLST39898,LRes80319,LRes25673,LRes89378,LZer56928,LCon51883,LCon69425,LMin4830,LRes67243,LRes36253,LFla70937,LSep726,LRes84001,LMax87768,LRes66033,LMin84238,LZer24884,LAdd70707,LRes15920,LRes54892,LSim79718,LMas69812,LCon73815,LMul94845],["LST39898","Res80319","Res25673","Res89378","Zer56928","Con51883","Con69425","Min4830","Res67243","Res36253","Fla70937","Sep726","Res84001","Max87768","Res66033","Min84238","Zer24884","Add70707","Res15920","Res54892","Sim79718","Mas69812","Con73815","Mul94845"],Mul94845,"Mul94845")

Actual (Unparsed): [[0.0000000, 0.0000000, 0.0000000, 0.1359168, 0.0000000, 0.0289373, 0.1177992, 0.5654529, 0.0000000, 0.0051334, 0.0385769, 0.0385745, 0.0000000, 0.0199078, 0.1258809, 0.4749566, 0.0000000, 0.1123360, 0.0297956, 0.0627574, 0.0000000, 0.0250102, 0.1572268, 0.0711058, 0.0000000, 0.0077441, 0.1953039, 0.1037368, 0.0000000, 0.5022199, 0.5268438, 0.3099519, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0235308, 0.0008859, 0.3223890, 0.0000000, 0.0305308, 0.1633637, 0.3022330, 0.0000000, 0.0191260, 0.1017724, 0.5610858, 0.0000000, 0.0315872, 0.1429470, 0.1180978, 0.0000000, 0.0887202, 0.2319112, 0.0460155, 0.0000000, 0.1312309, 0.1768116, 0.4630772, 0.0000000, 0.0459967, 0.2465681, 0.3279846, 0.0000000, 0.0775833, 0.1631324, 0.1244138, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000]]

Expected (Unparsed): [[0.0,0.0221,0.439,0.13591677000000002,0.0,0.028937273008999998,0.117799215948,0.56545288076,0.0,0.005133432590999999,0.03857688,0.0385745,0.0,0.019907815695000004,0.12588088761000002,0.47495664000000004,0.0,0.11233598803000001,0.029795571456,0.06275735418,0.0,0.02501018,0.1572268,0.07110576,0.0,0.007744099999999999,0.195303903651,0.10373675,0.0,0.50221989,0.5268438289730001,0.309951883839,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.023530823699999995,0.0008858601,0.322389,0.0,0.030530753837999997,0.163363689684,0.30223296,0.0,0.019125977285,0.10177244,0.56108584,0.0,0.031587210240000003,0.14294695674,0.11809781999999999,0.0,0.088720172508,0.23191117641000003,0.046015509879,0.0,0.13123088,0.176811562885,0.463077168864,0.0,0.04599669,0.246568077996,0.32798465,0.0,0.07758332341000002,0.163132460538,0.12441384,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0]]

Actual:   [[0, 0, 0, 0.136, 0, 0.029, 0.1178, 0.5655, 0, 0.0052, 0.0386, 0.0386, 0, 0.02, 0.1259, 0.475, 0, 0.1124, 0.0298, 0.0628, 0, 0.0251, 0.1573, 0.0712, 0, 0.0078, 0.1954, 0.1038, 0, 0.5023, 0.5269, 0.31, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0236, 0.0009, 0.3224, 0, 0.0306, 0.1634, 0.3023, 0, 0.0192, 0.1018, 0.5611, 0, 0.0316, 0.143, 0.1181, 0, 0.0888, 0.232, 0.0461, 0, 0.1313, 0.1769, 0.4631, 0, 0.046, 0.2466, 0.328, 0, 0.0776, 0.1632, 0.1245, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]]

Expected: [[0, 0.0221, 0.439, 0.136, 0, 0.029, 0.1178, 0.5655, 0, 0.0052, 0.0386, 0.0386, 0, 0.02, 0.1259, 0.475, 0, 0.1124, 0.0298, 0.0628, 0, 0.0251, 0.1573, 0.0712, 0, 0.0078, 0.1954, 0.1038, 0, 0.5023, 0.5269, 0.31, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0236, 0.0009, 0.3224, 0, 0.0306, 0.1634, 0.3023, 0, 0.0192, 0.1018, 0.5611, 0, 0.0316, 0.143, 0.1181, 0, 0.0888, 0.232, 0.0461, 0, 0.1313, 0.1769, 0.4631, 0, 0.046, 0.2466, 0.328, 0, 0.0776, 0.1632, 0.1245, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]]