import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Zer20872 = tf.keras.layers.Input(shape=([1, 2]))
in0Con25373 = tf.keras.layers.Input(shape=([3, 3, 1, 3]))
in0Dot48184 = tf.keras.layers.Input(shape=([3, 3]))
in1Dot48184 = tf.keras.layers.Input(shape=([3, 3]))
in0Con40967 = tf.keras.layers.Input(shape=([3, 3, 1, 3]))
in0Mul74046 = tf.keras.layers.Input(shape=([2, 2, 1, 2]))
in1Mul74046 = tf.keras.layers.Input(shape=([2, 2, 1, 2]))

Zer20872 = keras.layers.ZeroPadding1D(padding=((1, 1)), name = 'Zer20872', )(in0Zer20872)
Res64177 = keras.layers.Reshape((3, 2, 1), name = 'Res64177', )(Zer20872)
Res16755 = keras.layers.Reshape((3, 2, 1, 1), name = 'Res16755', )(Res64177)
Glo47214 = keras.layers.GlobalMaxPool3D(name = 'Glo47214', )(Res16755)
Res3461 = keras.layers.Reshape((1, 1), name = 'Res3461', )(Glo47214)
Glo70340 = keras.layers.GlobalAveragePooling1D(name = 'Glo70340', )(Res3461)
Res56844 = keras.layers.Reshape((1, 1), name = 'Res56844', )(Glo70340)
Res91653 = keras.layers.Reshape((1, 1, 1), name = 'Res91653', )(Res56844)
Res46615 = keras.layers.Reshape((1, 1, 1, 1), name = 'Res46615', )(Res91653)
Zer30169 = keras.layers.ZeroPadding3D(padding=((2, 0), (2, 0), (0, 0)), name = 'Zer30169', )(Res46615)
Con25373 = keras.layers.Concatenate(axis=4, name = 'Con25373', )([Zer30169,in0Con25373])
Dot48184 = keras.layers.Dot(axes=(2, 1), name = 'Dot48184', )([in0Dot48184,in1Dot48184])
Res9614 = keras.layers.Reshape((3, 3, 1), name = 'Res9614', )(Dot48184)
Res87686 = keras.layers.Reshape((3, 3, 1, 1), name = 'Res87686', )(Res9614)
Con40967 = keras.layers.Concatenate(axis=4, name = 'Con40967', )([Res87686,in0Con40967])
Mul74046 = keras.layers.Multiply(name = 'Mul74046', )([in0Mul74046,in1Mul74046])
Den95606 = keras.layers.Dense(1,name = 'Den95606', )(Mul74046)
Con73029 = keras.layers.Conv3D(4, (2, 2, 1),strides=(1, 1, 1), padding='valid', dilation_rate=(1, 1, 1), name = 'Con73029', )(Den95606)
Zer45594 = keras.layers.ZeroPadding3D(padding=((2, 0), (2, 0), (0, 0)), name = 'Zer45594', )(Con73029)
Mul90574 = keras.layers.Multiply(name = 'Mul90574', )([Con40967,Zer45594])
Add19932 = keras.layers.Add(name = 'Add19932', )([Con25373,Mul90574])
model = tf.keras.models.Model(inputs=[in0Zer20872,in0Con25373,in0Dot48184,in1Dot48184,in0Con40967,in0Mul74046,in1Mul74046], outputs=Add19932)
w = model.get_layer('Den95606').get_weights() 
w[0] = np.array([[0.4017], [0.4316]])
w[1] = np.array([0.4397])
model.get_layer('Den95606').set_weights(w) 
w = model.get_layer('Con73029').get_weights() 
w[0] = np.array([[[[[0.9515, 0.6843, 0.4012, 0.0854]]], [[[0.205, 0.1145, 0.1075, 0.4628]]]], [[[[0.5955, 0.145, 0.2363, 0.6164]]], [[[0.5938, 0.2, 0.5784, 0.5493]]]]])
w[1] = np.array([0, 0, 0, 0])
model.get_layer('Con73029').set_weights(w) 
in0Zer20872 = tf.constant([[[1.5849, 1.5504]]])
in0Con25373 = tf.constant([[[[[0.2875, 0.2737, 0.895]], [[0.2628, 0.9726, 0.1849]], [[0.4155, 0.6595, 0.0253]]], [[[0.1807, 0.9266, 0.3733]], [[0.5266, 0.3581, 0.4039]], [[0.1142, 0.7699, 0.5594]]], [[[0.7156, 0.0347, 0.1862]], [[0.7691, 0.5515, 0.8126]], [[0.264, 0.5725, 0.6195]]]]])
in0Dot48184 = tf.constant([[[0.2188, 0.5965, 0.6229], [0.3065, 0.1151, 0.13], [0.2708, 0.0625, 0.6855]]])
in1Dot48184 = tf.constant([[[0.0442, 0.1523, 0.4172], [0.8864, 0.579, 0.6241], [0.2812, 0.1776, 0.9372]]])
in0Con40967 = tf.constant([[[[[0.8042, 0.5377, 0.2595]], [[0.5321, 0.2877, 0.8802]], [[0.519, 0.4524, 0.0732]]], [[[0.8934, 0.127, 0.9166]], [[0.0722, 0.4702, 0.075]], [[0.6907, 0.2117, 0.9283]]], [[[0.9635, 0.8348, 0.3486]], [[0.6497, 0.226, 0.8252]], [[0.6115, 0.0158, 0.2338]]]]])
in0Mul74046 = tf.constant([[[[[0.2255, 0.9488]], [[0.6783, 0.1936]]], [[[0.0412, 0.0831]], [[0.4989, 0.7964]]]]])
in1Mul74046 = tf.constant([[[[[0.4195, 0.5973]], [[0.0889, 0.369]]], [[[0.4748, 0.3771]], [[0.9384, 0.6262]]]]])
print (np.array2string(model.predict([in0Zer20872,in0Con25373,in0Dot48184,in1Dot48184,in0Con40967,in0Mul74046,in1Mul74046],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Add19932.png')

LZer20872 = zero_padding1D_layer([[[1.5849, 1.5504]]], 1, 1, Zer20872), 
LRes64177 = reshape_layer(Zer20872, [3, 2, 1], Res64177), 
LRes16755 = reshape_layer(Res64177, [3, 2, 1, 1], Res16755), 
LGlo47214 = global_max_pool3D_layer(Res16755, Glo47214), 
LRes3461 = reshape_layer(Glo47214, [1, 1], Res3461), 
LGlo70340 = global_average_pooling1D_layer(Res3461, Glo70340), 
LRes56844 = reshape_layer(Glo70340, [1, 1], Res56844), 
LRes91653 = reshape_layer(Res56844, [1, 1, 1], Res91653), 
LRes46615 = reshape_layer(Res91653, [1, 1, 1, 1], Res46615), 
LZer30169 = zero_padding3D_layer(Res46615, 2, 0, 2, 0, 0, 0, Zer30169), 
LCon25373 = concatenate_layer([Zer30169,[[[[[0.2875, 0.2737, 0.895]], [[0.2628, 0.9726, 0.1849]], [[0.4155, 0.6595, 0.0253]]], [[[0.1807, 0.9266, 0.3733]], [[0.5266, 0.3581, 0.4039]], [[0.1142, 0.7699, 0.5594]]], [[[0.7156, 0.0347, 0.1862]], [[0.7691, 0.5515, 0.8126]], [[0.264, 0.5725, 0.6195]]]]]], 4, Con25373), 
LDot48184 = dot_layer([[[0.2188, 0.5965, 0.6229], [0.3065, 0.1151, 0.13], [0.2708, 0.0625, 0.6855]]], [[[0.0442, 0.1523, 0.4172], [0.8864, 0.579, 0.6241], [0.2812, 0.1776, 0.9372]]], 2, 1, Dot48184), 
LRes9614 = reshape_layer(Dot48184, [3, 3, 1], Res9614), 
LRes87686 = reshape_layer(Res9614, [3, 3, 1, 1], Res87686), 
LCon40967 = concatenate_layer([Res87686,[[[[[0.8042, 0.5377, 0.2595]], [[0.5321, 0.2877, 0.8802]], [[0.519, 0.4524, 0.0732]]], [[[0.8934, 0.127, 0.9166]], [[0.0722, 0.4702, 0.075]], [[0.6907, 0.2117, 0.9283]]], [[[0.9635, 0.8348, 0.3486]], [[0.6497, 0.226, 0.8252]], [[0.6115, 0.0158, 0.2338]]]]]], 4, Con40967), 
LMul74046 = multiply_layer([[[[[[0.2255, 0.9488]], [[0.6783, 0.1936]]], [[[0.0412, 0.0831]], [[0.4989, 0.7964]]]]], [[[[[0.4195, 0.5973]], [[0.0889, 0.369]]], [[[0.4748, 0.3771]], [[0.9384, 0.6262]]]]]], Mul74046), 
LDen95606 = dense_layer(Mul74046, [[0.4017], [0.4316]],[0.4397], Den95606), 
LCon73029 = conv3D_layer(Den95606, 2, 2, 1,[[[[[0.9515, 0.6843, 0.4012, 0.0854]]], [[[0.205, 0.1145, 0.1075, 0.4628]]]], [[[[0.5955, 0.145, 0.2363, 0.6164]]], [[[0.5938, 0.2, 0.5784, 0.5493]]]]],[0, 0, 0, 0], 1, 1, 1, false, 1, 1, 1, Con73029), 
LZer45594 = zero_padding3D_layer(Con73029, 2, 0, 2, 0, 0, 0, Zer45594), 
LMul90574 = multiply_layer([Con40967,Zer45594], Mul90574), 
LAdd19932 = add_layer([Con25373,Mul90574], Add19932), 
exec_layers([LZer20872,LRes64177,LRes16755,LGlo47214,LRes3461,LGlo70340,LRes56844,LRes91653,LRes46615,LZer30169,LCon25373,LDot48184,LRes9614,LRes87686,LCon40967,LMul74046,LDen95606,LCon73029,LZer45594,LMul90574,LAdd19932],["Zer20872","Res64177","Res16755","Glo47214","Res3461","Glo70340","Res56844","Res91653","Res46615","Zer30169","Con25373","Dot48184","Res9614","Res87686","Con40967","Mul74046","Den95606","Con73029","Zer45594","Mul90574","Add19932"],Add19932,"Add19932")

Actual (Unparsed): [[[[[0.0000000, 0.2875000, 0.2737000, 0.8950000]], [[0.0000000, 0.2628000, 0.9726000, 0.1849000]], [[0.0000000, 0.4155000, 0.6595000, 0.0253000]]], [[[0.0000000, 0.1807000, 0.9266000, 0.3733000]], [[0.0000000, 0.5266000, 0.3581000, 0.4039000]], [[0.0000000, 0.1142000, 0.7699000, 0.5594000]]], [[[0.0000000, 0.7156000, 0.0347000, 0.1862000]], [[0.0000000, 0.7691000, 0.5515000, 0.8126000]], [[2.8272686, 0.7448678, 0.5873444, 0.8621682]]]]]

Expected (Unparsed): [[[[[0.0,0.2875,0.2737,0.895]],[[0.0,0.2628,0.9726,0.1849]],[[0.0,0.4155,0.6595,0.0253]]],[[[0.0,0.1807,0.9266,0.3733]],[[0.0,0.5266,0.3581,0.4039]],[[0.0,0.1142,0.7699,0.5594]]],[[[0.0,0.7156,0.0347,0.1862]],[[0.0,0.7691,0.5515,0.8126]],[[2.827268478738568,0.7448677698329803,0.5873443962557606,0.8621682231294046]]]]]

Actual:   [[[[[0, 0.2875, 0.2737, 0.895]], [[0, 0.2628, 0.9726, 0.1849]], [[0, 0.4155, 0.6595, 0.0253]]], [[[0, 0.1807, 0.9266, 0.3733]], [[0, 0.5266, 0.3581, 0.4039]], [[0, 0.1142, 0.7699, 0.5594]]], [[[0, 0.7156, 0.0347, 0.1862]], [[0, 0.7691, 0.5515, 0.8126]], [[2.8273, 0.7449, 0.5874, 0.8622]]]]]

Expected: [[[[[0, 0.2875, 0.2737, 0.895]], [[0, 0.2628, 0.9726, 0.1849]], [[0, 0.4155, 0.6595, 0.0253]]], [[[0, 0.1807, 0.9266, 0.3733]], [[0, 0.5266, 0.3581, 0.4039]], [[0, 0.1142, 0.7699, 0.5594]]], [[[0, 0.7156, 0.0347, 0.1862]], [[0, 0.7691, 0.5515, 0.8126]], [[2.8273, 0.7449, 0.5874, 0.8622]]]]]