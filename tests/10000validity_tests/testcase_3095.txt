import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Glo78885 = tf.keras.layers.Input(shape=([2, 2, 1]))
in0Con26074 = tf.keras.layers.Input(shape=([2, 3]))
in0Sep85249 = tf.keras.layers.Input(shape=([2, 2, 1]))
in0Max39189 = tf.keras.layers.Input(shape=([1, 1, 2, 2]))
in1Max39189 = tf.keras.layers.Input(shape=([1, 1, 2, 2]))
in0Con14165 = tf.keras.layers.Input(shape=([6]))

Glo78885 = keras.layers.GlobalAveragePooling2D(name = 'Glo78885', )(in0Glo78885)
ELU55665 = keras.layers.ELU(alpha=5.933910288742723, name = 'ELU55665', )(Glo78885)
Res25137 = keras.layers.Reshape((1, 1), name = 'Res25137', )(ELU55665)
Zer59560 = keras.layers.ZeroPadding1D(padding=((1, 0)), name = 'Zer59560', )(Res25137)
Con26074 = keras.layers.Concatenate(axis=2, name = 'Con26074', )([Zer59560,in0Con26074])
Sep85249 = keras.layers.SeparableConv2D(4, (1, 1),strides=(2, 2), padding='valid', name = 'Sep85249', )(in0Sep85249)
Res57468 = keras.layers.Reshape((1, 4), name = 'Res57468', )(Sep85249)
Cro72044 = keras.layers.Cropping1D(cropping=((0, 0)), name = 'Cro72044', )(Res57468)
Up_73662 = keras.layers.UpSampling1D(size=(2), name = 'Up_73662', )(Cro72044)
Sub22175 = keras.layers.Subtract(name = 'Sub22175', )([Con26074,Up_73662])
Fla68812 = keras.layers.Flatten(name = 'Fla68812', )(Sub22175)
Max39189 = keras.layers.Maximum(name = 'Max39189', )([in0Max39189,in1Max39189])
Res13508 = keras.layers.Reshape((1, 1, 4), name = 'Res13508', )(Max39189)
Res53250 = keras.layers.Reshape((1, 4), name = 'Res53250', )(Res13508)
Sim26841 = keras.layers.SimpleRNN(2,name = 'Sim26841', )(Res53250)
Con14165 = keras.layers.Concatenate(axis=1, name = 'Con14165', )([Sim26841,in0Con14165])
Max53557 = keras.layers.Maximum(name = 'Max53557', )([Fla68812,Con14165])
model = tf.keras.models.Model(inputs=[in0Glo78885,in0Con26074,in0Sep85249,in0Max39189,in1Max39189,in0Con14165], outputs=Max53557)
w = model.get_layer('Sep85249').get_weights() 
w[0] = np.array([[[[0.0782]]]])
w[1] = np.array([[[[0.2514, 0.3638, 0.9513, 0.1377]]]])
w[2] = np.array([0, 0, 0, 0])
model.get_layer('Sep85249').set_weights(w) 
w = model.get_layer('Sim26841').get_weights() 
w[0] = np.array([[8, 10], [8, 10], [3, 5], [2, 5]])
w[1] = np.array([[5, 6], [8, 8]])
w[2] = np.array([9, 10])
model.get_layer('Sim26841').set_weights(w) 
in0Glo78885 = tf.constant([[[[1.1891], [1.9098]], [[1.969], [1.1285]]]])
in0Con26074 = tf.constant([[[0.5794, 0.6835, 0.4602], [0.0981, 0.3828, 0.3244]]])
in0Sep85249 = tf.constant([[[[0.0424], [0.2353]], [[0.4914], [0.9426]]]])
in0Max39189 = tf.constant([[[[[0.7009, 0.7543], [0.5094, 0.5251]]]]])
in1Max39189 = tf.constant([[[[[0.2429, 0.9357], [0.2105, 0.7858]]]]])
in0Con14165 = tf.constant([[0.6852, 0.9719, 0.2218, 0.6371, 0.3329, 0.8573]])
print (np.array2string(model.predict([in0Glo78885,in0Con26074,in0Sep85249,in0Max39189,in1Max39189,in0Con14165],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Max53557.png')

LGlo78885 = global_average_pooling2D_layer([[[[1.1891], [1.9098]], [[1.969], [1.1285]]]], Glo78885), 
LELU55665 = elu_layer(Glo78885, 5.933910288742723, ELU55665), 
LRes25137 = reshape_layer(ELU55665, [1, 1], Res25137), 
LZer59560 = zero_padding1D_layer(Res25137, 1, 0, Zer59560), 
LCon26074 = concatenate_layer([Zer59560,[[[0.5794, 0.6835, 0.4602], [0.0981, 0.3828, 0.3244]]]], 2, Con26074), 
LSep85249 = separable_conv2D_layer([[[[0.0424], [0.2353]], [[0.4914], [0.9426]]]], 1, 1,[[[[[0.0782]]]],[[[[0.2514, 0.3638, 0.9513, 0.1377]]]]],[0, 0, 0, 0], 2, 2, false, Sep85249), 
LRes57468 = reshape_layer(Sep85249, [1, 4], Res57468), 
LCro72044 = cropping1D_layer(Res57468, 0, 0, Cro72044), 
LUp_73662 = up_sampling1D_layer(Cro72044, 2, Up_73662), 
LSub22175 = subtract_layer(Con26074,Up_73662, Sub22175), 
LFla68812 = flatten_layer(Sub22175, Fla68812), 
LMax39189 = maximum_layer([[[[[[0.7009, 0.7543], [0.5094, 0.5251]]]]], [[[[[0.2429, 0.9357], [0.2105, 0.7858]]]]]], Max39189), 
LRes13508 = reshape_layer(Max39189, [1, 1, 4], Res13508), 
LRes53250 = reshape_layer(Res13508, [1, 4], Res53250), 
LSim26841 = simple_rnn_layer(Res53250,[[8, 10], [8, 10], [3, 5], [2, 5]],[[5, 6], [8, 8]],[9, 10], Sim26841), 
LCon14165 = concatenate_layer([Sim26841,[[0.6852, 0.9719, 0.2218, 0.6371, 0.3329, 0.8573]]], 1, Con14165), 
LMax53557 = maximum_layer([Fla68812,Con14165], Max53557), 
exec_layers([LGlo78885,LELU55665,LRes25137,LZer59560,LCon26074,LSep85249,LRes57468,LCro72044,LUp_73662,LSub22175,LFla68812,LMax39189,LRes13508,LRes53250,LSim26841,LCon14165,LMax53557],["Glo78885","ELU55665","Res25137","Zer59560","Con26074","Sep85249","Res57468","Cro72044","Up_73662","Sub22175","Fla68812","Max39189","Res13508","Res53250","Sim26841","Con14165","Max53557"],Max53557,"Max53557")

Actual (Unparsed): [[1.0000000, 1.0000000, 0.6852000, 0.9719000, 1.5482664, 0.6371000, 0.3796458, 0.8573000]]

Expected (Unparsed): [[1.0,1.0,0.6852,0.9719,1.548266438048,0.6371,0.379645793616,0.8573]]

Actual:   [[1, 1, 0.6852, 0.9719, 1.5483, 0.6371, 0.3797, 0.8573]]

Expected: [[1, 1, 0.6852, 0.9719, 1.5483, 0.6371, 0.3797, 0.8573]]