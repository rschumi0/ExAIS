import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Min95964 = tf.keras.layers.Input(shape=([2, 2, 1, 1]))
in1Min95964 = tf.keras.layers.Input(shape=([2, 2, 1, 1]))

Min95964 = keras.layers.Minimum(name = 'Min95964', )([in0Min95964,in1Min95964])
Res26755 = keras.layers.Reshape((2, 2, 1), name = 'Res26755', )(Min95964)
Con28067 = keras.layers.Conv2DTranspose(3, (2, 2),strides=(1, 1), padding='valid', name = 'Con28067', )(Res26755)
model = tf.keras.models.Model(inputs=[in0Min95964,in1Min95964], outputs=Con28067)
w = model.get_layer('Con28067').get_weights() 
w[0] = np.array([[[[0.7959], [0.525], [0.3359]], [[0.4775], [0.1373], [0.1917]]], [[[0.9461], [0.3851], [0.3743]], [[0.037], [0.8212], [0.6595]]]])
w[1] = np.array([0, 0, 0])
model.get_layer('Con28067').set_weights(w) 
in0Min95964 = tf.constant([[[[[0.7287]], [[0.5775]]], [[[0.0236]], [[0.1143]]]]])
in1Min95964 = tf.constant([[[[[0.9639]], [[0.9924]]], [[[0.632]], [[0.6839]]]]])
print (np.array2string(model.predict([in0Min95964,in1Min95964],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Con28067.png')

LMin95964 = minimum_layer([[[[[[0.7287]], [[0.5775]]], [[[0.0236]], [[0.1143]]]]], [[[[[0.9639]], [[0.9924]]], [[[0.632]], [[0.6839]]]]]], Min95964), 
LRes26755 = reshape_layer(Min95964, [2, 2, 1], Res26755), 
LCon28067 = conv2D_transpose_layer(Res26755, 2, 2,[[[[0.7959], [0.525], [0.3359]], [[0.4775], [0.1373], [0.1917]]], [[[0.9461], [0.3851], [0.3743]], [[0.037], [0.8212], [0.6595]]]],[0, 0, 0], 1, 1, false, Con28067), 
exec_layers([LMin95964,LRes26755,LCon28067],["Min95964","Res26755","Con28067"],Con28067,"Con28067")

Actual (Unparsed): [[[[0.5799723, 0.3825675, 0.2447703], [0.8075865, 0.4032380, 0.3336740], [0.2757562, 0.0792907, 0.1107067]], [[0.7082063, 0.2930124, 0.2806796], [0.6755750, 0.8840514, 0.7396534], [0.0759457, 0.4899364, 0.4027726]], [[0.0223280, 0.0090884, 0.0088335], [0.1090124, 0.0633972, 0.0583467], [0.0042291, 0.0938632, 0.0753808]]]]

Expected (Unparsed): [[[[0.57997233,0.3825675,0.24477032999999998],[0.8075865,0.40323801000000004,0.33367404],[0.27575625,0.07929075000000001,0.11070675]],[[0.70820631,0.29301237,0.28067965],[0.67557502,0.8840514700000001,0.73965339],[0.07594574999999999,0.48993639,0.40277256]],[[0.02232796,0.00908836,0.00883348],[0.10901243000000001,0.06339725,0.05834669],[0.0042290999999999995,0.09386316,0.07538085]]]]

Actual:   [[[[0.58, 0.3826, 0.2448], [0.8076, 0.4033, 0.3337], [0.2758, 0.0793, 0.1108]], [[0.7083, 0.2931, 0.2807], [0.6756, 0.8841, 0.7397], [0.076, 0.49, 0.4028]], [[0.0224, 0.0091, 0.0089], [0.1091, 0.0634, 0.0584], [0.0043, 0.0939, 0.0754]]]]

Expected: [[[[0.58, 0.3826, 0.2448], [0.8076, 0.4033, 0.3337], [0.2758, 0.0793, 0.1108]], [[0.7083, 0.2931, 0.2807], [0.6756, 0.8841, 0.7397], [0.076, 0.49, 0.4028]], [[0.0224, 0.0091, 0.0089], [0.1091, 0.0634, 0.0584], [0.0043, 0.0939, 0.0754]]]]