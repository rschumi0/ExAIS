import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Mul11609 = tf.keras.layers.Input(shape=([1, 2, 1, 1]))
in1Mul11609 = tf.keras.layers.Input(shape=([1, 2, 1, 1]))

Mul11609 = keras.layers.Multiply(name = 'Mul11609', )([in0Mul11609,in1Mul11609])
Bat83775 = keras.layers.BatchNormalization(axis=1, epsilon=0.2700016554309726,  name = 'Bat83775', )(Mul11609)
model = tf.keras.models.Model(inputs=[in0Mul11609,in1Mul11609], outputs=Bat83775)
w = model.get_layer('Bat83775').get_weights() 
w[0] = np.array([0.4765])
w[1] = np.array([0.1845])
w[2] = np.array([0.341])
w[3] = np.array([0.0477])
model.get_layer('Bat83775').set_weights(w) 
in0Mul11609 = tf.constant([[[[[0.4567]], [[0.8591]]]]])
in1Mul11609 = tf.constant([[[[[0.0898]], [[0.7121]]]]])
print (np.array2string(model.predict([in0Mul11609,in1Mul11609],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Bat83775.png')

LMul11609 = multiply_layer([[[[[[0.4567]], [[0.8591]]]]], [[[[[0.0898]], [[0.7121]]]]]], Mul11609), 
LBat83775 = batch_normalization_layer(Mul11609, 1, 0.2700016554309726, [0.4765], [0.1845], [0.341], [0.0477], Bat83775), 
exec_layers([LMul11609,LBat83775],["Mul11609","Bat83775"],Bat83775,"Bat83775")

Actual (Unparsed): [[[[[-0.0691048]], [[0.4134001]]]]]

Expected (Unparsed): [[[[[-0.06910484185518057]],[[0.4134000395863737]]]]]

Actual:   [[[[[-0.0691]], [[0.4135]]]]]

Expected: [[[[[-0.0691]], [[0.4135]]]]]