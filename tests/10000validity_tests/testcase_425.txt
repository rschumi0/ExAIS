import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Ave30697 = tf.keras.layers.Input(shape=([1, 2, 2, 1]))
in1Ave30697 = tf.keras.layers.Input(shape=([1, 2, 2, 1]))

Ave30697 = keras.layers.Average(name = 'Ave30697', )([in0Ave30697,in1Ave30697])
Up_71218 = keras.layers.UpSampling3D(size=(1, 1, 1), name = 'Up_71218', )(Ave30697)
model = tf.keras.models.Model(inputs=[in0Ave30697,in1Ave30697], outputs=Up_71218)
in0Ave30697 = tf.constant([[[[[0.0708], [0.4722]], [[0.8621], [0.7892]]]]])
in1Ave30697 = tf.constant([[[[[0.8503], [0.3362]], [[0.3207], [0.4613]]]]])
print (np.array2string(model.predict([in0Ave30697,in1Ave30697],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Up_71218.png')

LAve30697 = average_layer([[[[[[0.0708], [0.4722]], [[0.8621], [0.7892]]]]], [[[[[0.8503], [0.3362]], [[0.3207], [0.4613]]]]]], Ave30697), 
LUp_71218 = up_sampling3D_layer(Ave30697, 1, 1, 1, Up_71218), 
exec_layers([LAve30697,LUp_71218],["Ave30697","Up_71218"],Up_71218,"Up_71218")

Actual (Unparsed): [[[[[0.4605500], [0.4042000]], [[0.5914000], [0.6252500]]]]]

Expected (Unparsed): [[[[[0.46054999999999996],[0.4042]],[[0.5913999999999999],[0.62525]]]]]

Actual:   [[[[[0.4606], [0.4042]], [[0.5914], [0.6253]]]]]

Expected: [[[[[0.4606], [0.4042]], [[0.5914], [0.6253]]]]]