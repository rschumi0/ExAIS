import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Dep63488 = tf.keras.layers.Input(shape=([1, 1, 1]))

Dep63488 = keras.layers.DepthwiseConv2D((1, 1),strides=(1, 1), padding='same', name = 'Dep63488', )(in0Dep63488)
Res74874 = keras.layers.Reshape((1, 1), name = 'Res74874', )(Dep63488)
Res31068 = keras.layers.Reshape((1, 1, 1), name = 'Res31068', )(Res74874)
Con35568 = keras.layers.Conv2DTranspose(3, (1, 1),strides=(1, 1), padding='same', name = 'Con35568', )(Res31068)
model = tf.keras.models.Model(inputs=[in0Dep63488], outputs=Con35568)
w = model.get_layer('Dep63488').get_weights() 
w[0] = np.array([[[[0.6303]]]])
w[1] = np.array([0])
model.get_layer('Dep63488').set_weights(w) 
w = model.get_layer('Con35568').get_weights() 
w[0] = np.array([[[[0.5991], [0.887], [0.4596]]]])
w[1] = np.array([0, 0, 0])
model.get_layer('Con35568').set_weights(w) 
in0Dep63488 = tf.constant([[[[0.9877]]]])
print (np.array2string(model.predict([in0Dep63488],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Con35568.png')

LDep63488 = depthwise_conv2D_layer([[[[0.9877]]]], 1, 1,[[[[0.6303]]]],[0], 1, 1, true, Dep63488), 
LRes74874 = reshape_layer(Dep63488, [1, 1], Res74874), 
LRes31068 = reshape_layer(Res74874, [1, 1, 1], Res31068), 
LCon35568 = conv2D_transpose_layer(Res31068, 1, 1,[[[[0.5991], [0.887], [0.4596]]]],[0, 0, 0], 1, 1, true, Con35568), 
exec_layers([LDep63488,LRes74874,LRes31068,LCon35568],["Dep63488","Res74874","Res31068","Con35568"],Con35568,"Con35568")

Actual (Unparsed): [[[[0.3729681, 0.5521995, 0.2861227]]]]

Expected (Unparsed): [[[[0.37296809342099996,0.55219946397,0.286122743676]]]]

Actual:   [[[[0.373, 0.5522, 0.2862]]]]

Expected: [[[[0.373, 0.5522, 0.2862]]]]