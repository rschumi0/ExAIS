import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Zer70592 = tf.keras.layers.Input(shape=([2, 3]))

Zer70592 = keras.layers.ZeroPadding1D(padding=((1, 1)), name = 'Zer70592', )(in0Zer70592)
Thr80095 = keras.layers.ThresholdedReLU(theta=8.462446053439088, name = 'Thr80095', )(Zer70592)
model = tf.keras.models.Model(inputs=[in0Zer70592], outputs=Thr80095)
in0Zer70592 = tf.constant([[[1.9271, 1.5368, 1.524], [1.4656, 1.4097, 1.6086]]])
print (np.array2string(model.predict([in0Zer70592],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Thr80095.png')

LZer70592 = zero_padding1D_layer([[[1.9271, 1.5368, 1.524], [1.4656, 1.4097, 1.6086]]], 1, 1, Zer70592), 
LThr80095 = thresholded_relu_layer(Zer70592, 8.462446053439088, Thr80095), 
exec_layers([LZer70592,LThr80095],["Zer70592","Thr80095"],Thr80095,"Thr80095")

Actual (Unparsed): [[[0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000]]]

Expected (Unparsed): [[[0,0,0],[0,0,0],[0,0,0],[0,0,0]]]

Actual:   [[[0, 0, 0], [0, 0, 0], [0, 0, 0], [0, 0, 0]]]

Expected: [[[0, 0, 0], [0, 0, 0], [0, 0, 0], [0, 0, 0]]]