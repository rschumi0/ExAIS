import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Add79369 = tf.keras.layers.Input(shape=([2, 2, 1]))
in1Add79369 = tf.keras.layers.Input(shape=([2, 2, 1]))
in0Sub86164 = tf.keras.layers.Input(shape=([3, 2]))
in1Sub86164 = tf.keras.layers.Input(shape=([3, 2]))
in0Con37621 = tf.keras.layers.Input(shape=([6, 4, 1, 3]))
in0Mul85334 = tf.keras.layers.Input(shape=([1, 2, 1]))
in1Mul85334 = tf.keras.layers.Input(shape=([1, 2, 1]))
in0Con68344 = tf.keras.layers.Input(shape=([3, 3, 1, 3]))
in0Con8220 = tf.keras.layers.Input(shape=([2, 2, 1, 2]))

Add79369 = keras.layers.Add(name = 'Add79369', )([in0Add79369,in1Add79369])
Res16393 = keras.layers.Reshape((2, 2), name = 'Res16393', )(Add79369)
Zer77222 = keras.layers.ZeroPadding1D(padding=((1, 0)), name = 'Zer77222', )(Res16393)
Sub86164 = keras.layers.Subtract(name = 'Sub86164', )([in0Sub86164,in1Sub86164])
Min21735 = keras.layers.Minimum(name = 'Min21735', )([Zer77222,Sub86164])
Up_1742 = keras.layers.UpSampling1D(size=(2), name = 'Up_1742', )(Min21735)
Res14344 = keras.layers.Reshape((6, 2, 1), name = 'Res14344', )(Up_1742)
Res31559 = keras.layers.Reshape((6, 2, 1, 1), name = 'Res31559', )(Res14344)
Zer80699 = keras.layers.ZeroPadding3D(padding=((0, 0), (2, 0), (0, 0)), name = 'Zer80699', )(Res31559)
Con37621 = keras.layers.Concatenate(axis=4, name = 'Con37621', )([Zer80699,in0Con37621])
Mul85334 = keras.layers.Multiply(name = 'Mul85334', )([in0Mul85334,in1Mul85334])
Res79309 = keras.layers.Reshape((1, 2, 1, 1), name = 'Res79309', )(Mul85334)
Zer56185 = keras.layers.ZeroPadding3D(padding=((2, 0), (1, 0), (0, 0)), name = 'Zer56185', )(Res79309)
Con68344 = keras.layers.Concatenate(axis=4, name = 'Con68344', )([Zer56185,in0Con68344])
Con8220 = keras.layers.Conv3DTranspose(4, (2, 2, 1),strides=(1, 1, 1), padding='valid', name = 'Con8220', )(in0Con8220)
ReL62122 = keras.layers.ReLU(max_value=2.981479763039757, negative_slope=7.996039403977282, threshold=6.049116515943176, name = 'ReL62122', )(Con8220)
Add50962 = keras.layers.Add(name = 'Add50962', )([Con68344,ReL62122])
Zer62694 = keras.layers.ZeroPadding3D(padding=((3, 0), (1, 0), (0, 0)), name = 'Zer62694', )(Add50962)
Min4429 = keras.layers.Minimum(name = 'Min4429', )([Con37621,Zer62694])
model = tf.keras.models.Model(inputs=[in0Add79369,in1Add79369,in0Sub86164,in1Sub86164,in0Con37621,in0Mul85334,in1Mul85334,in0Con68344,in0Con8220], outputs=Min4429)
w = model.get_layer('Con8220').get_weights() 
w[0] = np.array([[[[[0.4026, 0.5624], [0.5368, 0.4983], [0.9016, 0.8091], [0.4781, 0.6071]]], [[[0.893, 0.5032], [0.5635, 0.275], [0.0776, 0.2753], [0.2165, 0.4965]]]], [[[[0.6349, 0.442], [0.8951, 0.045], [0.7972, 0.0838], [0.8859, 0.4408]]], [[[0.6835, 0.1765], [0.746, 0.5958], [0.6378, 0.0966], [0.5506, 0.7304]]]]])
w[1] = np.array([0, 0, 0, 0])
model.get_layer('Con8220').set_weights(w) 
in0Add79369 = tf.constant([[[[0.6936], [0.5848]], [[0.8024], [0.3426]]]])
in1Add79369 = tf.constant([[[[0.7818], [0.6252]], [[0.6065], [0.2716]]]])
in0Sub86164 = tf.constant([[[0.3415, 0.4967], [0.9115, 0.4914], [0.9404, 0.163]]])
in1Sub86164 = tf.constant([[[0.4843, 0.4561], [0.8857, 0.2103], [0.6182, 0.595]]])
in0Con37621 = tf.constant([[[[[0.0801, 0.5136, 0.4976]], [[0.0114, 0.135, 0.6043]], [[0.2691, 0.8511, 0.2316]], [[0.875, 0.5685, 0.7052]]], [[[0.9025, 0.4821, 0.0075]], [[0.2224, 0.4378, 0.2701]], [[0.947, 0.2092, 0.9535]], [[0.8685, 0.4308, 0.6056]]], [[[0.9096, 0.5904, 0.2843]], [[0.5907, 0.9389, 0.3507]], [[0.3817, 0.103, 0.2612]], [[0.9032, 0.8883, 0.1581]]], [[[0.4067, 0.0565, 0.6227]], [[0.2198, 0.4471, 0.1669]], [[0.5528, 0.5399, 0.4434]], [[0.1349, 0.8359, 0.8183]]], [[[0.3596, 0.3294, 0.7463]], [[0.7574, 0.2605, 0.3558]], [[0.2968, 0.0831, 0.218]], [[0.3445, 0.3488, 0.3885]]], [[[0.9805, 0.4894, 0.5364]], [[0.7202, 0.127, 0.8915]], [[0.3802, 0.1695, 0.1246]], [[0.3748, 0.5577, 0.8612]]]]])
in0Mul85334 = tf.constant([[[[0.3994], [0.2172]]]])
in1Mul85334 = tf.constant([[[[0.8302], [0.2871]]]])
in0Con68344 = tf.constant([[[[[0.287, 0.6144, 0.354]], [[0.0468, 0.103, 0.6915]], [[0.1047, 0.1761, 0.1374]]], [[[0.0061, 0.0096, 0.0201]], [[0.047, 0.9074, 0.1367]], [[0.6639, 0.6684, 0.6331]]], [[[0.0506, 0.7821, 0.039]], [[0.7407, 0.1643, 0.6174]], [[0.5815, 0.7401, 0.6]]]]])
in0Con8220 = tf.constant([[[[[0.6754, 0.1703]], [[0.7213, 0.0561]]], [[[0.0179, 0.7805]], [[0.6038, 0.3872]]]]])
print (np.array2string(model.predict([in0Add79369,in1Add79369,in0Sub86164,in1Sub86164,in0Con37621,in0Mul85334,in1Mul85334,in0Con68344,in0Con8220],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Min4429.png')

LAdd79369 = add_layer([[[[[0.6936], [0.5848]], [[0.8024], [0.3426]]]], [[[[0.7818], [0.6252]], [[0.6065], [0.2716]]]]], Add79369), 
LRes16393 = reshape_layer(Add79369, [2, 2], Res16393), 
LZer77222 = zero_padding1D_layer(Res16393, 1, 0, Zer77222), 
LSub86164 = subtract_layer([[[0.3415, 0.4967], [0.9115, 0.4914], [0.9404, 0.163]]], [[[0.4843, 0.4561], [0.8857, 0.2103], [0.6182, 0.595]]], Sub86164), 
LMin21735 = minimum_layer([Zer77222,Sub86164], Min21735), 
LUp_1742 = up_sampling1D_layer(Min21735, 2, Up_1742), 
LRes14344 = reshape_layer(Up_1742, [6, 2, 1], Res14344), 
LRes31559 = reshape_layer(Res14344, [6, 2, 1, 1], Res31559), 
LZer80699 = zero_padding3D_layer(Res31559, 0, 0, 2, 0, 0, 0, Zer80699), 
LCon37621 = concatenate_layer([Zer80699,[[[[[0.0801, 0.5136, 0.4976]], [[0.0114, 0.135, 0.6043]], [[0.2691, 0.8511, 0.2316]], [[0.875, 0.5685, 0.7052]]], [[[0.9025, 0.4821, 0.0075]], [[0.2224, 0.4378, 0.2701]], [[0.947, 0.2092, 0.9535]], [[0.8685, 0.4308, 0.6056]]], [[[0.9096, 0.5904, 0.2843]], [[0.5907, 0.9389, 0.3507]], [[0.3817, 0.103, 0.2612]], [[0.9032, 0.8883, 0.1581]]], [[[0.4067, 0.0565, 0.6227]], [[0.2198, 0.4471, 0.1669]], [[0.5528, 0.5399, 0.4434]], [[0.1349, 0.8359, 0.8183]]], [[[0.3596, 0.3294, 0.7463]], [[0.7574, 0.2605, 0.3558]], [[0.2968, 0.0831, 0.218]], [[0.3445, 0.3488, 0.3885]]], [[[0.9805, 0.4894, 0.5364]], [[0.7202, 0.127, 0.8915]], [[0.3802, 0.1695, 0.1246]], [[0.3748, 0.5577, 0.8612]]]]]], 4, Con37621), 
LMul85334 = multiply_layer([[[[[0.3994], [0.2172]]]], [[[[0.8302], [0.2871]]]]], Mul85334), 
LRes79309 = reshape_layer(Mul85334, [1, 2, 1, 1], Res79309), 
LZer56185 = zero_padding3D_layer(Res79309, 2, 0, 1, 0, 0, 0, Zer56185), 
LCon68344 = concatenate_layer([Zer56185,[[[[[0.287, 0.6144, 0.354]], [[0.0468, 0.103, 0.6915]], [[0.1047, 0.1761, 0.1374]]], [[[0.0061, 0.0096, 0.0201]], [[0.047, 0.9074, 0.1367]], [[0.6639, 0.6684, 0.6331]]], [[[0.0506, 0.7821, 0.039]], [[0.7407, 0.1643, 0.6174]], [[0.5815, 0.7401, 0.6]]]]]], 4, Con68344), 
LCon8220 = conv3D_transpose_layer([[[[[0.6754, 0.1703]], [[0.7213, 0.0561]]], [[[0.0179, 0.7805]], [[0.6038, 0.3872]]]]], 2, 2, 1,[[[[[0.4026, 0.5624], [0.5368, 0.4983], [0.9016, 0.8091], [0.4781, 0.6071]]], [[[0.893, 0.5032], [0.5635, 0.275], [0.0776, 0.2753], [0.2165, 0.4965]]]], [[[[0.6349, 0.442], [0.8951, 0.045], [0.7972, 0.0838], [0.8859, 0.4408]]], [[[0.6835, 0.1765], [0.746, 0.5958], [0.6378, 0.0966], [0.5506, 0.7304]]]]],[0, 0, 0, 0], 1, 1, 1, false, Con8220), 
LReL62122 = relu_layer(Con8220, 2.981479763039757, 7.996039403977282, 6.049116515943176, ReL62122), 
LAdd50962 = add_layer([Con68344,ReL62122], Add50962), 
LZer62694 = zero_padding3D_layer(Add50962, 3, 0, 1, 0, 0, 0, Zer62694), 
LMin4429 = minimum_layer([Con37621,Zer62694], Min4429), 
exec_layers([LAdd79369,LRes16393,LZer77222,LSub86164,LMin21735,LUp_1742,LRes14344,LRes31559,LZer80699,LCon37621,LMul85334,LRes79309,LZer56185,LCon68344,LCon8220,LReL62122,LAdd50962,LZer62694,LMin4429],["Add79369","Res16393","Zer77222","Sub86164","Min21735","Up_1742","Res14344","Res31559","Zer80699","Con37621","Mul85334","Res79309","Zer56185","Con68344","Con8220","ReL62122","Add50962","Zer62694","Min4429"],Min4429,"Min4429")

Actual (Unparsed): [[[[[0.0000000, 0.0000000, 0.0000000, 0.0000000]], [[0.0000000, 0.0000000, 0.0000000, 0.0000000]], [[-0.1428000, 0.0000000, 0.0000000, 0.0000000]], [[0.0000000, 0.0000000, 0.0000000, 0.0000000]]], [[[0.0000000, 0.0000000, 0.0000000, 0.0000000]], [[0.0000000, 0.0000000, 0.0000000, 0.0000000]], [[-0.1428000, 0.0000000, 0.0000000, 0.0000000]], [[0.0000000, 0.0000000, 0.0000000, 0.0000000]]], [[[0.0000000, 0.0000000, 0.0000000, 0.0000000]], [[0.0000000, 0.0000000, 0.0000000, 0.0000000]], [[0.0000000, 0.0000000, 0.0000000, 0.0000000]], [[0.0000000, 0.0000000, 0.0000000, 0.0000000]]], [[[0.0000000, 0.0000000, 0.0000000, 0.0000000]], [[-45.4288881, -44.5044243, -41.7836883, -44.6062793]], [[-40.2867917, -41.5849600, -41.9090489, -42.8023695]], [[-42.9928335, -44.8909045, -47.6218192, -46.7601820]]], [[[0.0000000, 0.0000000, 0.0000000, 0.0000000]], [[-40.7707871, -40.2809098, -38.7613983, -39.1070144]], [[-33.6240623, -32.3678041, -30.6629112, -31.6394494]], [[-38.4783319, -39.5632230, -42.7517018, -41.6501626]]], [[[0.0000000, 0.0000000, 0.0000000, 0.0000000]], [[-45.5196197, -47.9094183, -46.9497833, -45.4521834]], [[-42.4042790, -39.3422928, -43.4021757, -37.4725285]], [[-44.4602163, -42.3411432, -44.2504901, -42.8493055]]]]]

Expected (Unparsed): [[[[[0,0,0,0]],[[0,0,0,0]],[[-0.14279999999999998,0,0,0]],[[0,0,0,0]]],[[[0,0,0,0]],[[0,0,0,0]],[[-0.14279999999999998,0,0,0]],[[0,0,0,0]]],[[[0,0,0,0]],[[0,0,0,0]],[[0,0,0,0]],[[0,0,0,0]]],[[[0,0,0,0]],[[-45.428888223214244,-44.50442437163264,-41.78368855806487,-44.60627945437982]],[[-40.286791844967986,-41.584960135646796,-41.90904897108616,-42.80236963608483]],[[-42.99283356913073,-44.8909045171795,-47.62181919544929,-46.76018203020459]]],[[[0,0,0,0]],[[-40.7707871525463,-40.28090989696253,-38.76139840735364,-39.10701457599163]],[[-33.62406242625812,-32.36780427567031,-30.6629112897022,-31.63944949397987]],[[-38.47833193083172,-39.563223000123685,-42.75170177476147,-41.650162633609966]]],[[[0,0,0,0]],[[-45.51961968213315,-47.90941826458326,-46.949783344308784,-45.45218336720078]],[[-42.40427897278541,-39.342292790659116,-43.4021756728828,-37.472528474724015]],[[-44.46021629831704,-42.3411432157971,-44.25049012090887,-42.84930554955583]]]]]

Actual:   [[[[[0, 0, 0, 0]], [[0, 0, 0, 0]], [[-0.1428, 0, 0, 0]], [[0, 0, 0, 0]]], [[[0, 0, 0, 0]], [[0, 0, 0, 0]], [[-0.1428, 0, 0, 0]], [[0, 0, 0, 0]]], [[[0, 0, 0, 0]], [[0, 0, 0, 0]], [[0, 0, 0, 0]], [[0, 0, 0, 0]]], [[[0, 0, 0, 0]], [[-45.4288, -44.5044, -41.7836, -44.6062]], [[-40.2867, -41.5849, -41.909, -42.8023]], [[-42.9928, -44.8909, -47.6218, -46.7601]]], [[[0, 0, 0, 0]], [[-40.7707, -40.2809, -38.7613, -39.107]], [[-33.624, -32.3678, -30.6629, -31.6394]], [[-38.4783, -39.5632, -42.7517, -41.6501]]], [[[0, 0, 0, 0]], [[-45.5196, -47.9094, -46.9497, -45.4521]], [[-42.4042, -39.3422, -43.4021, -37.4725]], [[-44.4602, -42.3411, -44.2504, -42.8493]]]]]

Expected: [[[[[0, 0, 0, 0]], [[0, 0, 0, 0]], [[-0.1427, 0, 0, 0]], [[0, 0, 0, 0]]], [[[0, 0, 0, 0]], [[0, 0, 0, 0]], [[-0.1427, 0, 0, 0]], [[0, 0, 0, 0]]], [[[0, 0, 0, 0]], [[0, 0, 0, 0]], [[0, 0, 0, 0]], [[0, 0, 0, 0]]], [[[0, 0, 0, 0]], [[-45.4288, -44.5044, -41.7836, -44.6062]], [[-40.2867, -41.5849, -41.909, -42.8023]], [[-42.9928, -44.8909, -47.6218, -46.7601]]], [[[0, 0, 0, 0]], [[-40.7707, -40.2809, -38.7613, -39.107]], [[-33.624, -32.3678, -30.6629, -31.6394]], [[-38.4783, -39.5632, -42.7517, -41.6501]]], [[[0, 0, 0, 0]], [[-45.5196, -47.9094, -46.9497, -45.4521]], [[-42.4042, -39.3422, -43.4021, -37.4725]], [[-44.4602, -42.3411, -44.2504, -42.8493]]]]]