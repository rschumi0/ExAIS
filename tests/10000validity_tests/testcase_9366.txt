import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Add57930 = tf.keras.layers.Input(shape=([1, 1]))
in1Add57930 = tf.keras.layers.Input(shape=([1, 1]))
in0Con25820 = tf.keras.layers.Input(shape=([4, 1]))
in0ReL8192 = tf.keras.layers.Input(shape=([2, 2]))
in0Sep13932 = tf.keras.layers.Input(shape=([2, 2, 2]))
in0Con55100 = tf.keras.layers.Input(shape=([15]))

Add57930 = keras.layers.Add(name = 'Add57930', )([in0Add57930,in1Add57930])
Zer53770 = keras.layers.ZeroPadding1D(padding=((3, 0)), name = 'Zer53770', )(Add57930)
Con25820 = keras.layers.Concatenate(axis=2, name = 'Con25820', )([Zer53770,in0Con25820])
ReL8192 = keras.layers.ReLU(max_value=6.686357641371246, negative_slope=4.316928895138154, threshold=8.696494263781606, name = 'ReL8192', input_shape=(2, 2))(in0ReL8192)
Up_9256 = keras.layers.UpSampling1D(size=(2), name = 'Up_9256', )(ReL8192)
Max1388 = keras.layers.Maximum(name = 'Max1388', )([Con25820,Up_9256])
Res34526 = keras.layers.Reshape((4, 2, 1), name = 'Res34526', )(Max1388)
Up_67333 = keras.layers.UpSampling2D(size=(1, 2), name = 'Up_67333', )(Res34526)
Res92412 = keras.layers.Reshape((4, 4), name = 'Res92412', )(Up_67333)
Fla53789 = keras.layers.Flatten(name = 'Fla53789', )(Res92412)
Sep13932 = keras.layers.SeparableConv2D(4, (1, 2),strides=(2, 2), padding='valid', name = 'Sep13932', )(in0Sep13932)
Res61948 = keras.layers.Reshape((1, 1, 4, 1), name = 'Res61948', )(Sep13932)
Glo5425 = keras.layers.GlobalAveragePooling3D(name = 'Glo5425', )(Res61948)
Con55100 = keras.layers.Concatenate(axis=1, name = 'Con55100', )([Glo5425,in0Con55100])
Mul91200 = keras.layers.Multiply(name = 'Mul91200', )([Fla53789,Con55100])
model = tf.keras.models.Model(inputs=[in0Add57930,in1Add57930,in0Con25820,in0ReL8192,in0Sep13932,in0Con55100], outputs=Mul91200)
w = model.get_layer('Sep13932').get_weights() 
w[0] = np.array([[[[0.3804], [0.6173]], [[0.8186], [0.5393]]]])
w[1] = np.array([[[[0.2073, 0.9935, 0.6474, 0.1563], [0.7249, 0.3596, 0.712, 0.4532]]]])
w[2] = np.array([0, 0, 0, 0])
model.get_layer('Sep13932').set_weights(w) 
in0Add57930 = tf.constant([[[0.8505]]])
in1Add57930 = tf.constant([[[0.9818]]])
in0Con25820 = tf.constant([[[0.8218], [0.5141], [0.9721], [0.6035]]])
in0ReL8192 = tf.constant([[[0.9805, 0.0686], [0.0941, 0.212]]])
in0Sep13932 = tf.constant([[[[0.3388, 0.7288], [0.6036, 0.502]], [[0.2607, 0.6112], [0.5594, 0.003]]]])
in0Con55100 = tf.constant([[0.574, 0.8554, 0.9754, 0.4588, 0.0816, 0.7414, 0.0732, 0.5701, 0.6252, 0.6287, 0.3478, 0.0701, 0.4409, 0.0955, 0.403]])
print (np.array2string(model.predict([in0Add57930,in1Add57930,in0Con25820,in0ReL8192,in0Sep13932,in0Con55100],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Mul91200.png')

LAdd57930 = add_layer([[[[0.8505]]], [[[0.9818]]]], Add57930), 
LZer53770 = zero_padding1D_layer(Add57930, 3, 0, Zer53770), 
LCon25820 = concatenate_layer([Zer53770,[[[0.8218], [0.5141], [0.9721], [0.6035]]]], 2, Con25820), 
LReL8192 = relu_layer([[[0.9805, 0.0686], [0.0941, 0.212]]], 6.686357641371246, 4.316928895138154, 8.696494263781606, ReL8192), 
LUp_9256 = up_sampling1D_layer(ReL8192, 2, Up_9256), 
LMax1388 = maximum_layer([Con25820,Up_9256], Max1388), 
LRes34526 = reshape_layer(Max1388, [4, 2, 1], Res34526), 
LUp_67333 = up_sampling2D_layer(Res34526, 1, 2, Up_67333), 
LRes92412 = reshape_layer(Up_67333, [4, 4], Res92412), 
LFla53789 = flatten_layer(Res92412, Fla53789), 
LSep13932 = separable_conv2D_layer([[[[0.3388, 0.7288], [0.6036, 0.502]], [[0.2607, 0.6112], [0.5594, 0.003]]]], 1, 2,[[[[[0.3804], [0.6173]], [[0.8186], [0.5393]]]],[[[[0.2073, 0.9935, 0.6474, 0.1563], [0.7249, 0.3596, 0.712, 0.4532]]]]],[0, 0, 0, 0], 2, 2, false, Sep13932), 
LRes61948 = reshape_layer(Sep13932, [1, 1, 4, 1], Res61948), 
LGlo5425 = global_average_pooling3D_layer(Res61948, Glo5425), 
LCon55100 = concatenate_layer([Glo5425,[[0.574, 0.8554, 0.9754, 0.4588, 0.0816, 0.7414, 0.0732, 0.5701, 0.6252, 0.6287, 0.3478, 0.0701, 0.4409, 0.0955, 0.403]]], 1, Con55100), 
LMul91200 = multiply_layer([Fla53789,Con55100], Mul91200), 
exec_layers([LAdd57930,LZer53770,LCon25820,LReL8192,LUp_9256,LMax1388,LRes34526,LUp_67333,LRes92412,LFla53789,LSep13932,LRes61948,LGlo5425,LCon55100,LMul91200],["Add57930","Zer53770","Con25820","ReL8192","Up_9256","Max1388","Res34526","Up_67333","Res92412","Fla53789","Sep13932","Res61948","Glo5425","Con55100","Mul91200"],Mul91200,"Mul91200")

Actual (Unparsed): [[0.0000000, 0.0000000, 0.7029677, 0.8015837, 0.0000000, 0.0000000, 0.3811538, 0.0376321, 0.0000000, 0.0000000, 0.6111593, 0.3380964, 0.1284442, 0.8078611, 0.0576343, 0.2432105]]

Expected (Unparsed): [[0.0,0.0,0.7029677200000001,0.80158372,0.0,0.0,0.38115373999999996,0.03763212,0.0,0.0,0.61115927,0.33809638,0.12844423,0.8078610700000001,0.057634250000000005,0.24321050000000002]]

Actual:   [[0, 0, 0.703, 0.8016, 0, 0, 0.3812, 0.0377, 0, 0, 0.6112, 0.3381, 0.1285, 0.8079, 0.0577, 0.2433]]

Expected: [[0, 0, 0.703, 0.8016, 0, 0, 0.3812, 0.0377, 0, 0, 0.6112, 0.3381, 0.1285, 0.8079, 0.0577, 0.2433]]