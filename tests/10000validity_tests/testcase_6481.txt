import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Dot37839 = tf.keras.layers.Input(shape=([2, 3]))
in1Dot37839 = tf.keras.layers.Input(shape=([2, 3]))

Dot37839 = keras.layers.Dot(axes=(1, 1), name = 'Dot37839', )([in0Dot37839,in1Dot37839])
Res52542 = keras.layers.Reshape((3, 3, 1), name = 'Res52542', )(Dot37839)
Up_15022 = keras.layers.UpSampling2D(size=(1, 1), name = 'Up_15022', )(Res52542)
model = tf.keras.models.Model(inputs=[in0Dot37839,in1Dot37839], outputs=Up_15022)
in0Dot37839 = tf.constant([[[0.0882, 0.7379, 0.9763], [0.5286, 0.0745, 0.4781]]])
in1Dot37839 = tf.constant([[[0.9978, 0.2297, 0.246], [0.1062, 0.8643, 0.633]]])
print (np.array2string(model.predict([in0Dot37839,in1Dot37839],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Up_15022.png')

LDot37839 = dot_layer([[[0.0882, 0.7379, 0.9763], [0.5286, 0.0745, 0.4781]]], [[[0.9978, 0.2297, 0.246], [0.1062, 0.8643, 0.633]]], 1, 1, Dot37839), 
LRes52542 = reshape_layer(Dot37839, [3, 3, 1], Res52542), 
LUp_15022 = up_sampling2D_layer(Res52542, 1, 1, Up_15022), 
exec_layers([LDot37839,LRes52542,LUp_15022],["Dot37839","Res52542","Up_15022"],Up_15022,"Up_15022")

Actual (Unparsed): [[[[0.1441433], [0.4771285], [0.3563010]], [[0.7441885], [0.2338860], [0.2286819]], [[1.0249264], [0.6374779], [0.5428071]]]]

Expected (Unparsed): [[[[0.14414328],[0.47712851999999994],[0.356301]],[[0.74418852],[0.23388598],[0.2286819]],[[1.02492636],[0.63747794],[0.5428071]]]]

Actual:   [[[[0.1442], [0.4772], [0.3564]], [[0.7442], [0.2339], [0.2287]], [[1.025], [0.6375], [0.5429]]]]

Expected: [[[[0.1442], [0.4772], [0.3564]], [[0.7442], [0.2339], [0.2287]], [[1.025], [0.6375], [0.5429]]]]