import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Max93170 = tf.keras.layers.Input(shape=([1, 1, 1]))
in1Max93170 = tf.keras.layers.Input(shape=([1, 1, 1]))

Max93170 = keras.layers.Maximum(name = 'Max93170', )([in0Max93170,in1Max93170])
Lay74685 = keras.layers.LayerNormalization(axis=2, epsilon=1.5422007263991178, name = 'Lay74685', )(Max93170)
Loc33565 = keras.layers.LocallyConnected2D(3, (1, 1),strides=(1, 1), name = 'Loc33565', )(Lay74685)
model = tf.keras.models.Model(inputs=[in0Max93170,in1Max93170], outputs=Loc33565)
w = model.get_layer('Loc33565').get_weights() 
w[0] = np.array([[[0.8951, 0.7058, 0.193]]])
w[1] = np.array([[[0, 0, 0]]])
model.get_layer('Loc33565').set_weights(w) 
in0Max93170 = tf.constant([[[[0.9517]]]])
in1Max93170 = tf.constant([[[[0.4056]]]])
print (np.array2string(model.predict([in0Max93170,in1Max93170],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Loc33565.png')

LMax93170 = maximum_layer([[[[[0.9517]]]], [[[[0.4056]]]]], Max93170), 
LLay74685 = layer_normalization_layer(Max93170, 2, 1.5422007263991178, Lay74685), 
LLoc33565 = locally_connected2D_layer(Lay74685, 1, 1,[[[0.8951, 0.7058, 0.193]]],[[[0, 0, 0]]], 1, 1, Loc33565), 
exec_layers([LMax93170,LLay74685,LLoc33565],["Max93170","Lay74685","Loc33565"],Loc33565,"Loc33565")

Actual (Unparsed): [[[[0.0000000, 0.0000000, 0.0000000]]]]

Expected (Unparsed): [[[[0.0,0.0,0.0]]]]

Actual:   [[[[0, 0, 0]]]]

Expected: [[[[0, 0, 0]]]]