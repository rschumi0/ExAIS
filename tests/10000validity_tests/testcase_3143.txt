import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Mul96799 = tf.keras.layers.Input(shape=([1, 2]))
in1Mul96799 = tf.keras.layers.Input(shape=([1, 2]))

Mul96799 = keras.layers.Multiply(name = 'Mul96799', )([in0Mul96799,in1Mul96799])
Fla43405 = keras.layers.Flatten(name = 'Fla43405', )(Mul96799)
model = tf.keras.models.Model(inputs=[in0Mul96799,in1Mul96799], outputs=Fla43405)
in0Mul96799 = tf.constant([[[0.619, 0.9326]]])
in1Mul96799 = tf.constant([[[0.9996, 0.6511]]])
print (np.array2string(model.predict([in0Mul96799,in1Mul96799],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Fla43405.png')

LMul96799 = multiply_layer([[[[0.619, 0.9326]]], [[[0.9996, 0.6511]]]], Mul96799), 
LFla43405 = flatten_layer(Mul96799, Fla43405), 
exec_layers([LMul96799,LFla43405],["Mul96799","Fla43405"],Fla43405,"Fla43405")

Actual (Unparsed): [[0.6187524, 0.6072159]]

Expected (Unparsed): [[0.6187524,0.60721586]]

Actual:   [[0.6188, 0.6073]]

Expected: [[0.6188, 0.6073]]