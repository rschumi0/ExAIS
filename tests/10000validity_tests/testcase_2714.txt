import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Con50380 = tf.keras.layers.Input(shape=([2, 1, 2]))

Con50380 = keras.layers.Conv2DTranspose(2, (2, 1),strides=(1, 1), padding='valid', name = 'Con50380', )(in0Con50380)
Res39937 = keras.layers.Reshape((3, 1, 2, 1), name = 'Res39937', )(Con50380)
Zer45040 = keras.layers.ZeroPadding3D(padding=((1, 1), (1, 1), (1, 1)), name = 'Zer45040', )(Res39937)
model = tf.keras.models.Model(inputs=[in0Con50380], outputs=Zer45040)
w = model.get_layer('Con50380').get_weights() 
w[0] = np.array([[[[0.0172, 0.5744], [0.2835, 0.4687]]], [[[0.6816, 0.3109], [0.0942, 0.881]]]])
w[1] = np.array([0, 0])
model.get_layer('Con50380').set_weights(w) 
in0Con50380 = tf.constant([[[[0.1597, 0.4653]], [[0.3821, 0.0849]]]])
print (np.array2string(model.predict([in0Con50380],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Zer45040.png')

LCon50380 = conv2D_transpose_layer([[[[0.1597, 0.4653]], [[0.3821, 0.0849]]]], 2, 1,[[[[0.0172, 0.5744], [0.2835, 0.4687]]], [[[0.6816, 0.3109], [0.0942, 0.881]]]],[0, 0], 1, 1, false, Con50380), 
LRes39937 = reshape_layer(Con50380, [3, 1, 2, 1], Res39937), 
LZer45040 = zero_padding3D_layer(Res39937, 1, 1, 1, 1, 1, 1, Zer45040), 
exec_layers([LCon50380,LRes39937,LZer45040],["Con50380","Res39937","Zer45040"],Zer45040,"Zer45040")

Actual (Unparsed): [[[[[0.0000000], [0.0000000], [0.0000000], [0.0000000]], [[0.0000000], [0.0000000], [0.0000000], [0.0000000]], [[0.0000000], [0.0000000], [0.0000000], [0.0000000]]], [[[0.0000000], [0.0000000], [0.0000000], [0.0000000]], [[0.0000000], [0.2700152], [0.2633611], [0.0000000]], [[0.0000000], [0.0000000], [0.0000000], [0.0000000]]], [[[0.0000000], [0.0000000], [0.0000000], [0.0000000]], [[0.0000000], [0.3088520], [0.5730910], [0.0000000]], [[0.0000000], [0.0000000], [0.0000000], [0.0000000]]], [[[0.0000000], [0.0000000], [0.0000000], [0.0000000]], [[0.0000000], [0.2868348], [0.1107907], [0.0000000]], [[0.0000000], [0.0000000], [0.0000000], [0.0000000]]], [[[0.0000000], [0.0000000], [0.0000000], [0.0000000]], [[0.0000000], [0.0000000], [0.0000000], [0.0000000]], [[0.0000000], [0.0000000], [0.0000000], [0.0000000]]]]]

Expected (Unparsed): [[[[[0],[0],[0],[0]],[[0],[0],[0],[0]],[[0],[0],[0],[0]]],[[[0],[0],[0],[0]],[[0],[0.27001516],[0.26336106],[0]],[[0],[0],[0],[0]]],[[[0],[0],[0],[0]],[[0],[0.30885197000000003],[0.57309102],[0]],[[0],[0],[0],[0]]],[[[0],[0],[0],[0]],[[0],[0.28683477],[0.11079072000000001],[0]],[[0],[0],[0],[0]]],[[[0],[0],[0],[0]],[[0],[0],[0],[0]],[[0],[0],[0],[0]]]]]

Actual:   [[[[[0], [0], [0], [0]], [[0], [0], [0], [0]], [[0], [0], [0], [0]]], [[[0], [0], [0], [0]], [[0], [0.2701], [0.2634], [0]], [[0], [0], [0], [0]]], [[[0], [0], [0], [0]], [[0], [0.3089], [0.5731], [0]], [[0], [0], [0], [0]]], [[[0], [0], [0], [0]], [[0], [0.2869], [0.1108], [0]], [[0], [0], [0], [0]]], [[[0], [0], [0], [0]], [[0], [0], [0], [0]], [[0], [0], [0], [0]]]]]

Expected: [[[[[0], [0], [0], [0]], [[0], [0], [0], [0]], [[0], [0], [0], [0]]], [[[0], [0], [0], [0]], [[0], [0.2701], [0.2634], [0]], [[0], [0], [0], [0]]], [[[0], [0], [0], [0]], [[0], [0.3089], [0.5731], [0]], [[0], [0], [0], [0]]], [[[0], [0], [0], [0]], [[0], [0.2869], [0.1108], [0]], [[0], [0], [0], [0]]], [[[0], [0], [0], [0]], [[0], [0], [0], [0]], [[0], [0], [0], [0]]]]]