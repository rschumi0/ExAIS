import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Min14693 = tf.keras.layers.Input(shape=([1, 1, 1]))
in1Min14693 = tf.keras.layers.Input(shape=([1, 1, 1]))
in0Con77255 = tf.keras.layers.Input(shape=([2, 3]))
in0Min65565 = tf.keras.layers.Input(shape=([1, 2, 2]))
in1Min65565 = tf.keras.layers.Input(shape=([1, 2, 2]))
in0Glo77896 = tf.keras.layers.Input(shape=([1, 1]))
in0Add46530 = tf.keras.layers.Input(shape=([2, 2]))
in1Add46530 = tf.keras.layers.Input(shape=([2, 2]))
in0Con66514 = tf.keras.layers.Input(shape=([2, 1]))
in0Con67140 = tf.keras.layers.Input(shape=([2, 1]))

Min14693 = keras.layers.Minimum(name = 'Min14693', )([in0Min14693,in1Min14693])
Lay14956 = keras.layers.LayerNormalization(axis=2, epsilon=2.6720680515183215, name = 'Lay14956', )(Min14693)
Res3117 = keras.layers.Reshape((1, 1), name = 'Res3117', )(Lay14956)
Zer98678 = keras.layers.ZeroPadding1D(padding=((1, 0)), name = 'Zer98678', )(Res3117)
Con77255 = keras.layers.Concatenate(axis=2, name = 'Con77255', )([Zer98678,in0Con77255])
Min65565 = keras.layers.Minimum(name = 'Min65565', )([in0Min65565,in1Min65565])
Res2617 = keras.layers.Reshape((1, 4), name = 'Res2617', )(Min65565)
Zer92411 = keras.layers.ZeroPadding1D(padding=((1, 0)), name = 'Zer92411', )(Res2617)
Glo77896 = keras.layers.GlobalAveragePooling1D(name = 'Glo77896', )(in0Glo77896)
Res14491 = keras.layers.Reshape((1, 1), name = 'Res14491', )(Glo77896)
Res72893 = keras.layers.Reshape((1, 1, 1), name = 'Res72893', )(Res14491)
Res56595 = keras.layers.Reshape((1, 1, 1, 1), name = 'Res56595', )(Res72893)
Con92180 = keras.layers.Conv3DTranspose(3, (1, 1, 1),strides=(1, 1, 1), padding='valid', name = 'Con92180', )(Res56595)
Res35488 = keras.layers.Reshape((1, 1, 3), name = 'Res35488', )(Con92180)
Res71667 = keras.layers.Reshape((1, 3), name = 'Res71667', )(Res35488)
Zer84514 = keras.layers.ZeroPadding1D(padding=((1, 0)), name = 'Zer84514', )(Res71667)
Add46530 = keras.layers.Add(name = 'Add46530', )([in0Add46530,in1Add46530])
Con66514 = keras.layers.Concatenate(axis=2, name = 'Con66514', )([Add46530,in0Con66514])
Ave42904 = keras.layers.Average(name = 'Ave42904', )([Zer84514,Con66514])
Con67140 = keras.layers.Concatenate(axis=2, name = 'Con67140', )([Ave42904,in0Con67140])
Sub32066 = keras.layers.Subtract(name = 'Sub32066', )([Zer92411,Con67140])
Cro93174 = keras.layers.Cropping1D(cropping=((0, 0)), name = 'Cro93174', )(Sub32066)
Add98375 = keras.layers.Add(name = 'Add98375', )([Con77255,Cro93174])
model = tf.keras.models.Model(inputs=[in0Min14693,in1Min14693,in0Con77255,in0Min65565,in1Min65565,in0Glo77896,in0Add46530,in1Add46530,in0Con66514,in0Con67140], outputs=Add98375)
w = model.get_layer('Con92180').get_weights() 
w[0] = np.array([[[[[0.4384], [0.5506], [0.0109]]]]])
w[1] = np.array([0, 0, 0])
model.get_layer('Con92180').set_weights(w) 
in0Min14693 = tf.constant([[[[0.5736]]]])
in1Min14693 = tf.constant([[[[0.2285]]]])
in0Con77255 = tf.constant([[[0.9981, 0.4984, 0.8275], [0.9633, 0.5303, 0.5282]]])
in0Min65565 = tf.constant([[[[0.8105, 0.782], [0.7141, 0.0467]]]])
in1Min65565 = tf.constant([[[[0.8416, 0.3768], [0.6493, 0.9656]]]])
in0Glo77896 = tf.constant([[[1.6654]]])
in0Add46530 = tf.constant([[[0.6025, 0.9266], [0.3709, 0.9183]]])
in1Add46530 = tf.constant([[[0.3851, 0.4412], [0.7908, 0.5571]]])
in0Con66514 = tf.constant([[[0.0737], [0.8369]]])
in0Con67140 = tf.constant([[[0.2421], [0.0541]]])
print (np.array2string(model.predict([in0Min14693,in1Min14693,in0Con77255,in0Min65565,in1Min65565,in0Glo77896,in0Add46530,in1Add46530,in0Con66514,in0Con67140],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Add98375.png')

LMin14693 = minimum_layer([[[[[0.5736]]]], [[[[0.2285]]]]], Min14693), 
LLay14956 = layer_normalization_layer(Min14693, 2, 2.6720680515183215, Lay14956), 
LRes3117 = reshape_layer(Lay14956, [1, 1], Res3117), 
LZer98678 = zero_padding1D_layer(Res3117, 1, 0, Zer98678), 
LCon77255 = concatenate_layer([Zer98678,[[[0.9981, 0.4984, 0.8275], [0.9633, 0.5303, 0.5282]]]], 2, Con77255), 
LMin65565 = minimum_layer([[[[[0.8105, 0.782], [0.7141, 0.0467]]]], [[[[0.8416, 0.3768], [0.6493, 0.9656]]]]], Min65565), 
LRes2617 = reshape_layer(Min65565, [1, 4], Res2617), 
LZer92411 = zero_padding1D_layer(Res2617, 1, 0, Zer92411), 
LGlo77896 = global_average_pooling1D_layer([[[1.6654]]], Glo77896), 
LRes14491 = reshape_layer(Glo77896, [1, 1], Res14491), 
LRes72893 = reshape_layer(Res14491, [1, 1, 1], Res72893), 
LRes56595 = reshape_layer(Res72893, [1, 1, 1, 1], Res56595), 
LCon92180 = conv3D_transpose_layer(Res56595, 1, 1, 1,[[[[[0.4384], [0.5506], [0.0109]]]]],[0, 0, 0], 1, 1, 1, false, Con92180), 
LRes35488 = reshape_layer(Con92180, [1, 1, 3], Res35488), 
LRes71667 = reshape_layer(Res35488, [1, 3], Res71667), 
LZer84514 = zero_padding1D_layer(Res71667, 1, 0, Zer84514), 
LAdd46530 = add_layer([[[[0.6025, 0.9266], [0.3709, 0.9183]]], [[[0.3851, 0.4412], [0.7908, 0.5571]]]], Add46530), 
LCon66514 = concatenate_layer([Add46530,[[[0.0737], [0.8369]]]], 2, Con66514), 
LAve42904 = average_layer([Zer84514,Con66514], Ave42904), 
LCon67140 = concatenate_layer([Ave42904,[[[0.2421], [0.0541]]]], 2, Con67140), 
LSub32066 = subtract_layer(Zer92411,Con67140, Sub32066), 
LCro93174 = cropping1D_layer(Sub32066, 0, 0, Cro93174), 
LAdd98375 = add_layer([Con77255,Cro93174], Add98375), 
exec_layers([LMin14693,LLay14956,LRes3117,LZer98678,LCon77255,LMin65565,LRes2617,LZer92411,LGlo77896,LRes14491,LRes72893,LRes56595,LCon92180,LRes35488,LRes71667,LZer84514,LAdd46530,LCon66514,LAve42904,LCon67140,LSub32066,LCro93174,LAdd98375],["Min14693","Lay14956","Res3117","Zer98678","Con77255","Min65565","Res2617","Zer92411","Glo77896","Res14491","Res72893","Res56595","Con92180","Res35488","Res71667","Zer84514","Add46530","Con66514","Ave42904","Con67140","Sub32066","Cro93174","Add98375"],Add98375,"Add98375")

Actual (Unparsed): [[[-0.4938000, 0.3142000, 0.4615500, 0.5854000], [-0.1354057, 0.1439154, 0.7520736, 0.5208000]]]

Expected (Unparsed): [[[-0.4938,0.31420000000000003,0.46155,0.5854],[-0.13540567999999997,0.14391538000000015,0.75207357,0.5208]]]

Actual:   [[[-0.4938, 0.3142, 0.4616, 0.5854], [-0.1354, 0.144, 0.7521, 0.5208]]]

Expected: [[[-0.4938, 0.3143, 0.4616, 0.5854], [-0.1354, 0.144, 0.7521, 0.5208]]]