import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Add6923 = tf.keras.layers.Input(shape=([1, 2, 1, 1]))
in1Add6923 = tf.keras.layers.Input(shape=([1, 2, 1, 1]))

Add6923 = keras.layers.Add(name = 'Add6923', )([in0Add6923,in1Add6923])
Res14733 = keras.layers.Reshape((1, 2, 1), name = 'Res14733', )(Add6923)
Res48624 = keras.layers.Reshape((1, 2), name = 'Res48624', )(Res14733)
Con43705 = keras.layers.Conv1D(2, (1),strides=(1), padding='valid', dilation_rate=(1), name = 'Con43705', )(Res48624)
Up_58624 = keras.layers.UpSampling1D(size=(2), name = 'Up_58624', )(Con43705)
Up_8981 = keras.layers.UpSampling1D(size=(1), name = 'Up_8981', )(Up_58624)
Sim82097 = keras.layers.SimpleRNN(3,name = 'Sim82097', )(Up_8981)
model = tf.keras.models.Model(inputs=[in0Add6923,in1Add6923], outputs=Sim82097)
w = model.get_layer('Con43705').get_weights() 
w[0] = np.array([[[0.3467, 0.902], [0.8793, 0.7473]]])
w[1] = np.array([0, 0])
model.get_layer('Con43705').set_weights(w) 
w = model.get_layer('Sim82097').get_weights() 
w[0] = np.array([[1, 3, 7], [3, 4, 6]])
w[1] = np.array([[6, 5, 6], [5, 10, 10], [1, 2, 5]])
w[2] = np.array([7, 8, 8])
model.get_layer('Sim82097').set_weights(w) 
in0Add6923 = tf.constant([[[[[0.953]], [[0.8663]]]]])
in1Add6923 = tf.constant([[[[[0.9331]], [[0.3728]]]]])
print (np.array2string(model.predict([in0Add6923,in1Add6923],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Sim82097.png')

LAdd6923 = add_layer([[[[[[0.953]], [[0.8663]]]]], [[[[[0.9331]], [[0.3728]]]]]], Add6923), 
LRes14733 = reshape_layer(Add6923, [1, 2, 1], Res14733), 
LRes48624 = reshape_layer(Res14733, [1, 2], Res48624), 
LCon43705 = conv1D_layer(Res48624, 1,[[[0.3467, 0.902], [0.8793, 0.7473]]],[0, 0], 1, false, 1, Con43705), 
LUp_58624 = up_sampling1D_layer(Con43705, 2, Up_58624), 
LUp_8981 = up_sampling1D_layer(Up_58624, 1, Up_8981), 
LSim82097 = simple_rnn_layer(Up_8981,[[1, 3, 7], [3, 4, 6]],[[6, 5, 6], [5, 10, 10], [1, 2, 5]],[7, 8, 8], Sim82097), 
exec_layers([LAdd6923,LRes14733,LRes48624,LCon43705,LUp_58624,LUp_8981,LSim82097],["Add6923","Res14733","Res48624","Con43705","Up_58624","Up_8981","Sim82097"],Sim82097,"Sim82097")

Actual (Unparsed): [[1.0000000, 1.0000000, 1.0000000]]

Expected (Unparsed): [[1.0,1.0,1.0]]

Actual:   [[1, 1, 1]]

Expected: [[1, 1, 1]]