import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Loc31751 = tf.keras.layers.Input(shape=([2, 2]))

Loc31751 = keras.layers.LocallyConnected1D(3, (1),strides=(1), name = 'Loc31751', )(in0Loc31751)
Lea73335 = keras.layers.LeakyReLU(alpha=2.8358219614433766, name = 'Lea73335', )(Loc31751)
model = tf.keras.models.Model(inputs=[in0Loc31751], outputs=Lea73335)
w = model.get_layer('Loc31751').get_weights() 
w[0] = np.array([[[0.6969, 0.2119, 0.3487], [0.1244, 0.0471, 0.528]], [[0.7998, 0.3409, 0.5346], [0.0963, 0.5821, 0.6752]]])
w[1] = np.array([[0, 0, 0], [0, 0, 0]])
model.get_layer('Loc31751').set_weights(w) 
in0Loc31751 = tf.constant([[[0.0104, 0.9138], [0.3276, 0.5827]]])
print (np.array2string(model.predict([in0Loc31751],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Lea73335.png')

LLoc31751 = locally_connected1D_layer([[[0.0104, 0.9138], [0.3276, 0.5827]]], 1,[[[0.6969, 0.2119, 0.3487], [0.1244, 0.0471, 0.528]], [[0.7998, 0.3409, 0.5346], [0.0963, 0.5821, 0.6752]]],[[0, 0, 0], [0, 0, 0]], 1, Loc31751), 
LLea73335 = leaky_relu_layer(Loc31751, 2.8358219614433766, Lea73335), 
exec_layers([LLoc31751,LLea73335],["Loc31751","Lea73335"],Lea73335,"Lea73335")

Actual (Unparsed): [[[0.1209245, 0.0452437, 0.4861129], [0.3181285, 0.4508685, 0.5685740]]]

Expected (Unparsed): [[[0.12092448,0.04524374,0.48611287999999997],[0.31812849,0.45086850999999994,0.568574]]]

Actual:   [[[0.121, 0.0453, 0.4862], [0.3182, 0.4509, 0.5686]]]

Expected: [[[0.121, 0.0453, 0.4862], [0.3182, 0.4509, 0.5686]]]