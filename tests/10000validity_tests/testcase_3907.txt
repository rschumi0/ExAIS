import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Mul27446 = tf.keras.layers.Input(shape=([2, 1, 1]))
in1Mul27446 = tf.keras.layers.Input(shape=([2, 1, 1]))
in0Max50007 = tf.keras.layers.Input(shape=([2, 2, 2]))
in1Max50007 = tf.keras.layers.Input(shape=([2, 2, 2]))
in0Con76654 = tf.keras.layers.Input(shape=([2, 2, 2]))
in0Max36614 = tf.keras.layers.Input(shape=([2, 1, 2]))
in1Max36614 = tf.keras.layers.Input(shape=([2, 1, 2]))
in0Glo66039 = tf.keras.layers.Input(shape=([2, 1, 1, 2]))
in0Con90434 = tf.keras.layers.Input(shape=([3]))
in0Dot4282 = tf.keras.layers.Input(shape=([2]))
in1Dot4282 = tf.keras.layers.Input(shape=([2]))
in0Con24097 = tf.keras.layers.Input(shape=([3]))
in0Con13374 = tf.keras.layers.Input(shape=([12]))

Mul27446 = keras.layers.Multiply(name = 'Mul27446', )([in0Mul27446,in1Mul27446])
Den17821 = keras.layers.Dense(4,name = 'Den17821', )(Mul27446)
Zer98982 = keras.layers.ZeroPadding2D(padding=((0, 0), (1, 0)), name = 'Zer98982', )(Den17821)
Max50007 = keras.layers.Maximum(name = 'Max50007', )([in0Max50007,in1Max50007])
Con76654 = keras.layers.Concatenate(axis=3, name = 'Con76654', )([Max50007,in0Con76654])
Mul71800 = keras.layers.Multiply(name = 'Mul71800', )([Zer98982,Con76654])
Res25469 = keras.layers.Reshape((2, 8), name = 'Res25469', )(Mul71800)
Fla13979 = keras.layers.Flatten(name = 'Fla13979', )(Res25469)
Max36614 = keras.layers.Maximum(name = 'Max36614', )([in0Max36614,in1Max36614])
Res89950 = keras.layers.Reshape((2, 2), name = 'Res89950', )(Max36614)
Fla71434 = keras.layers.Flatten(name = 'Fla71434', )(Res89950)
Glo66039 = keras.layers.GlobalAveragePooling3D(name = 'Glo66039', )(in0Glo66039)
Res72675 = keras.layers.Reshape((2, 1), name = 'Res72675', )(Glo66039)
Res48431 = keras.layers.Reshape((2, 1, 1), name = 'Res48431', )(Res72675)
Res74906 = keras.layers.Reshape((2, 1, 1, 1), name = 'Res74906', )(Res48431)
Glo30636 = keras.layers.GlobalAveragePooling3D(name = 'Glo30636', )(Res74906)
Con90434 = keras.layers.Concatenate(axis=1, name = 'Con90434', )([Glo30636,in0Con90434])
Min48487 = keras.layers.Minimum(name = 'Min48487', )([Fla71434,Con90434])
ELU29731 = keras.layers.ELU(alpha=-3.7194518538791455, name = 'ELU29731', )(Min48487)
Dot4282 = keras.layers.Dot(axes=(1, 1), name = 'Dot4282', )([in0Dot4282,in1Dot4282])
Con24097 = keras.layers.Concatenate(axis=1, name = 'Con24097', )([Dot4282,in0Con24097])
Ave37857 = keras.layers.Average(name = 'Ave37857', )([ELU29731,Con24097])
Con13374 = keras.layers.Concatenate(axis=1, name = 'Con13374', )([Ave37857,in0Con13374])
Max8180 = keras.layers.Maximum(name = 'Max8180', )([Fla13979,Con13374])
model = tf.keras.models.Model(inputs=[in0Mul27446,in1Mul27446,in0Max50007,in1Max50007,in0Con76654,in0Max36614,in1Max36614,in0Glo66039,in0Con90434,in0Dot4282,in1Dot4282,in0Con24097,in0Con13374], outputs=Max8180)
w = model.get_layer('Den17821').get_weights() 
w[0] = np.array([[0.1286, 0.2379, 0.6179, 0.66]])
w[1] = np.array([0.331, 0.567, 0.0081, 0.5388])
model.get_layer('Den17821').set_weights(w) 
in0Mul27446 = tf.constant([[[[0.1986]], [[0.5964]]]])
in1Mul27446 = tf.constant([[[[0.3497]], [[0.6869]]]])
in0Max50007 = tf.constant([[[[0.0228, 0.5906], [0.2597, 0.2682]], [[0.2247, 0.4683], [0.947, 0.4931]]]])
in1Max50007 = tf.constant([[[[0.6846, 0.0968], [0.8805, 0.4816]], [[0.1668, 0.1429], [0.422, 0.9053]]]])
in0Con76654 = tf.constant([[[[0.0218, 0.9988], [0.6737, 0.6247]], [[0.801, 0.847], [0.9662, 0.8908]]]])
in0Max36614 = tf.constant([[[[0.6683, 0.6798]], [[0.8155, 0.2221]]]])
in1Max36614 = tf.constant([[[[0.4804, 0.9379]], [[0.4566, 0.6821]]]])
in0Glo66039 = tf.constant([[[[[1.8425, 1.6371]]], [[[1.3908, 1.0236]]]]])
in0Con90434 = tf.constant([[0.0444, 0.325, 0.2345]])
in0Dot4282 = tf.constant([[0.6796, 0.3376]])
in1Dot4282 = tf.constant([[0.1775, 0.4745]])
in0Con24097 = tf.constant([[0.8706, 0.1907, 0.6273]])
in0Con13374 = tf.constant([[0.8631, 0.7455, 0.8845, 0.6967, 0.0162, 0.8718, 0.4577, 0.8343, 0.3788, 0.341, 0.0098, 0.5007]])
print (np.array2string(model.predict([in0Mul27446,in1Mul27446,in0Max50007,in1Max50007,in0Con76654,in0Max36614,in1Max36614,in0Glo66039,in0Con90434,in0Dot4282,in1Dot4282,in0Con24097,in0Con13374],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Max8180.png')

LMul27446 = multiply_layer([[[[[0.1986]], [[0.5964]]]], [[[[0.3497]], [[0.6869]]]]], Mul27446), 
LDen17821 = dense_layer(Mul27446, [[0.1286, 0.2379, 0.6179, 0.66]],[0.331, 0.567, 0.0081, 0.5388], Den17821), 
LZer98982 = zero_padding2D_layer(Den17821, 0, 0, 1, 0, Zer98982), 
LMax50007 = maximum_layer([[[[[0.0228, 0.5906], [0.2597, 0.2682]], [[0.2247, 0.4683], [0.947, 0.4931]]]], [[[[0.6846, 0.0968], [0.8805, 0.4816]], [[0.1668, 0.1429], [0.422, 0.9053]]]]], Max50007), 
LCon76654 = concatenate_layer([Max50007,[[[[0.0218, 0.9988], [0.6737, 0.6247]], [[0.801, 0.847], [0.9662, 0.8908]]]]], 3, Con76654), 
LMul71800 = multiply_layer([Zer98982,Con76654], Mul71800), 
LRes25469 = reshape_layer(Mul71800, [2, 8], Res25469), 
LFla13979 = flatten_layer(Res25469, Fla13979), 
LMax36614 = maximum_layer([[[[[0.6683, 0.6798]], [[0.8155, 0.2221]]]], [[[[0.4804, 0.9379]], [[0.4566, 0.6821]]]]], Max36614), 
LRes89950 = reshape_layer(Max36614, [2, 2], Res89950), 
LFla71434 = flatten_layer(Res89950, Fla71434), 
LGlo66039 = global_average_pooling3D_layer([[[[[1.8425, 1.6371]]], [[[1.3908, 1.0236]]]]], Glo66039), 
LRes72675 = reshape_layer(Glo66039, [2, 1], Res72675), 
LRes48431 = reshape_layer(Res72675, [2, 1, 1], Res48431), 
LRes74906 = reshape_layer(Res48431, [2, 1, 1, 1], Res74906), 
LGlo30636 = global_average_pooling3D_layer(Res74906, Glo30636), 
LCon90434 = concatenate_layer([Glo30636,[[0.0444, 0.325, 0.2345]]], 1, Con90434), 
LMin48487 = minimum_layer([Fla71434,Con90434], Min48487), 
LELU29731 = elu_layer(Min48487, -3.7194518538791455, ELU29731), 
LDot4282 = dot_layer([[0.6796, 0.3376]], [[0.1775, 0.4745]], 1, 1, Dot4282), 
LCon24097 = concatenate_layer([Dot4282,[[0.8706, 0.1907, 0.6273]]], 1, Con24097), 
LAve37857 = average_layer([ELU29731,Con24097], Ave37857), 
LCon13374 = concatenate_layer([Ave37857,[[0.8631, 0.7455, 0.8845, 0.6967, 0.0162, 0.8718, 0.4577, 0.8343, 0.3788, 0.341, 0.0098, 0.5007]]], 1, Con13374), 
LMax8180 = maximum_layer([Fla13979,Con13374], Max8180), 
exec_layers([LMul27446,LDen17821,LZer98982,LMax50007,LCon76654,LMul71800,LRes25469,LFla13979,LMax36614,LRes89950,LFla71434,LGlo66039,LRes72675,LRes48431,LRes74906,LGlo30636,LCon90434,LMin48487,LELU29731,LDot4282,LCon24097,LAve37857,LCon13374,LMax8180],["Mul27446","Den17821","Zer98982","Max50007","Con76654","Mul71800","Res25469","Fla13979","Max36614","Res89950","Fla71434","Glo66039","Res72675","Res48431","Res74906","Glo30636","Con90434","Min48487","ELU29731","Dot4282","Con24097","Ave37857","Con13374","Max8180"],Max8180,"Max8180")

Actual (Unparsed): [[0.4745601, 0.4575000, 0.2578500, 0.4309000, 0.8631000, 0.7455000, 0.8845000, 0.6967000, 0.0162000, 0.8718000, 0.4577000, 0.8343000, 0.3788000, 0.6015355, 0.2524037, 0.7208178]]

Expected (Unparsed): [[0.4745601,0.4575,0.25785,0.43089999999999995,0.8631,0.7455,0.8845,0.6967,0.0162,0.8718,0.4577,0.8343,0.3788,0.6015354726596291,0.25240365133405673,0.7208178340444799]]

Actual:   [[0.4746, 0.4575, 0.2579, 0.4309, 0.8631, 0.7455, 0.8845, 0.6967, 0.0162, 0.8718, 0.4577, 0.8343, 0.3788, 0.6016, 0.2525, 0.7209]]

Expected: [[0.4746, 0.4575, 0.2579, 0.4309, 0.8631, 0.7455, 0.8845, 0.6967, 0.0162, 0.8718, 0.4577, 0.8343, 0.3788, 0.6016, 0.2525, 0.7209]]