import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Dot87782 = tf.keras.layers.Input(shape=([2]))
in1Dot87782 = tf.keras.layers.Input(shape=([2]))

Dot87782 = keras.layers.Dot(axes=(1, 1), name = 'Dot87782', )([in0Dot87782,in1Dot87782])
Res48827 = keras.layers.Reshape((1, 1), name = 'Res48827', )(Dot87782)
Res68059 = keras.layers.Reshape((1, 1, 1), name = 'Res68059', )(Res48827)
Res96353 = keras.layers.Reshape((1, 1, 1, 1), name = 'Res96353', )(Res68059)
Zer30952 = keras.layers.ZeroPadding3D(padding=((1, 1), (1, 1), (1, 1)), name = 'Zer30952', )(Res96353)
Lay68740 = keras.layers.LayerNormalization(axis=1, epsilon=2.16106739143646, name = 'Lay68740', )(Zer30952)
model = tf.keras.models.Model(inputs=[in0Dot87782,in1Dot87782], outputs=Lay68740)
in0Dot87782 = tf.constant([[0.7638, 0.6829]])
in1Dot87782 = tf.constant([[0.8368, 0.0917]])
print (np.array2string(model.predict([in0Dot87782,in1Dot87782],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Lay68740.png')

LDot87782 = dot_layer([[0.7638, 0.6829]], [[0.8368, 0.0917]], 1, 1, Dot87782), 
LRes48827 = reshape_layer(Dot87782, [1, 1], Res48827), 
LRes68059 = reshape_layer(Res48827, [1, 1, 1], Res68059), 
LRes96353 = reshape_layer(Res68059, [1, 1, 1, 1], Res96353), 
LZer30952 = zero_padding3D_layer(Res96353, 1, 1, 1, 1, 1, 1, Zer30952), 
LLay68740 = layer_normalization_layer(Zer30952, 1, 2.16106739143646, Lay68740), 
exec_layers([LDot87782,LRes48827,LRes68059,LRes96353,LZer30952,LLay68740],["Dot87782","Res48827","Res68059","Res96353","Zer30952","Lay68740"],Lay68740,"Lay68740")

Actual (Unparsed): [[[[[0.0000000], [0.0000000], [0.0000000]], [[0.0000000], [-0.1552430], [0.0000000]], [[0.0000000], [0.0000000], [0.0000000]]], [[[0.0000000], [0.0000000], [0.0000000]], [[0.0000000], [0.3104859], [0.0000000]], [[0.0000000], [0.0000000], [0.0000000]]], [[[0.0000000], [0.0000000], [0.0000000]], [[0.0000000], [-0.1552430], [0.0000000]], [[0.0000000], [0.0000000], [0.0000000]]]]]

Expected (Unparsed): [[[[[0.0],[0.0],[0.0]],[[0.0],[-0.15524296340045862],[0.0]],[[0.0],[0.0],[0.0]]],[[[0.0],[0.0],[0.0]],[[0.0],[0.31048592680091724],[0.0]],[[0.0],[0.0],[0.0]]],[[[0.0],[0.0],[0.0]],[[0.0],[-0.15524296340045862],[0.0]],[[0.0],[0.0],[0.0]]]]]

Actual:   [[[[[0], [0], [0]], [[0], [-0.1552], [0]], [[0], [0], [0]]], [[[0], [0], [0]], [[0], [0.3105], [0]], [[0], [0], [0]]], [[[0], [0], [0]], [[0], [-0.1552], [0]], [[0], [0], [0]]]]]

Expected: [[[[[0], [0], [0]], [[0], [-0.1552], [0]], [[0], [0], [0]]], [[[0], [0], [0]], [[0], [0.3105], [0]], [[0], [0], [0]]], [[[0], [0], [0]], [[0], [-0.1552], [0]], [[0], [0], [0]]]]]