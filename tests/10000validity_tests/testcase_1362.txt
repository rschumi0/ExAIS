import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Sub19382 = tf.keras.layers.Input(shape=([2, 2, 3]))
in1Sub19382 = tf.keras.layers.Input(shape=([2, 2, 3]))

Sub19382 = keras.layers.Subtract(name = 'Sub19382', )([in0Sub19382,in1Sub19382])
Lay75587 = keras.layers.LayerNormalization(axis=1, epsilon=2.08398498986971, name = 'Lay75587', )(Sub19382)
Cro26123 = keras.layers.Cropping2D(cropping=((0, 0), (0, 1)), name = 'Cro26123', )(Lay75587)
model = tf.keras.models.Model(inputs=[in0Sub19382,in1Sub19382], outputs=Cro26123)
in0Sub19382 = tf.constant([[[[0.6684, 0.5228, 0.997], [0.709, 0.9973, 0.843]], [[0.928, 0.475, 0.287], [0.2609, 0.5013, 0.1726]]]])
in1Sub19382 = tf.constant([[[[0.6677, 0.1906, 0.1091], [0.9929, 0.8606, 0.3691]], [[0.9942, 0.7758, 0.1353], [0.1371, 0.7678, 0.271]]]])
print (np.array2string(model.predict([in0Sub19382,in1Sub19382],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Cro26123.png')

LSub19382 = subtract_layer([[[[0.6684, 0.5228, 0.997], [0.709, 0.9973, 0.843]], [[0.928, 0.475, 0.287], [0.2609, 0.5013, 0.1726]]]], [[[[0.6677, 0.1906, 0.1091], [0.9929, 0.8606, 0.3691]], [[0.9942, 0.7758, 0.1353], [0.1371, 0.7678, 0.271]]]], Sub19382), 
LLay75587 = layer_normalization_layer(Sub19382, 1, 2.08398498986971, Lay75587), 
LCro26123 = cropping2D_layer(Lay75587, 0, 0, 0, 1, Cro26123), 
exec_layers([LSub19382,LLay75587,LCro26123],["Sub19382","Lay75587","Cro26123"],Cro26123,"Cro26123")

Actual (Unparsed): [[[[0.0231650, 0.2141568, 0.2470813]], [[-0.0231650, -0.2141568, -0.2470813]]]]

Expected (Unparsed): [[[[0.023164998296529377,0.21415674834515863,0.24708133837613566]],[[-0.023164998296529377,-0.21415674834515863,-0.24708133837613572]]]]

Actual:   [[[[0.0232, 0.2142, 0.2471]], [[-0.0231, -0.2141, -0.247]]]]

Expected: [[[[0.0232, 0.2142, 0.2471]], [[-0.0231, -0.2141, -0.247]]]]