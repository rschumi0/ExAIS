import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Min19131 = tf.keras.layers.Input(shape=([2, 1, 2, 2]))
in1Min19131 = tf.keras.layers.Input(shape=([2, 1, 2, 2]))
in0Ave47429 = tf.keras.layers.Input(shape=([2, 2, 1]))
in1Ave47429 = tf.keras.layers.Input(shape=([2, 2, 1]))
in0Con96528 = tf.keras.layers.Input(shape=([2, 2, 1]))
in0Min11803 = tf.keras.layers.Input(shape=([2, 2, 1, 2]))
in1Min11803 = tf.keras.layers.Input(shape=([2, 2, 1, 2]))
in0Con2109 = tf.keras.layers.Input(shape=([2, 2, 2]))

Min19131 = keras.layers.Minimum(name = 'Min19131', )([in0Min19131,in1Min19131])
Lay33412 = keras.layers.LayerNormalization(axis=1, epsilon=1.2665658055639657, name = 'Lay33412', )(Min19131)
Thr26200 = keras.layers.ThresholdedReLU(theta=9.064482346929438, name = 'Thr26200', )(Lay33412)
Res67949 = keras.layers.Reshape((2, 1, 4), name = 'Res67949', )(Thr26200)
Zer36840 = keras.layers.ZeroPadding2D(padding=((0, 0), (1, 0)), name = 'Zer36840', )(Res67949)
Ave47429 = keras.layers.Average(name = 'Ave47429', )([in0Ave47429,in1Ave47429])
Con96528 = keras.layers.Concatenate(axis=3, name = 'Con96528', )([Ave47429,in0Con96528])
Min11803 = keras.layers.Minimum(name = 'Min11803', )([in0Min11803,in1Min11803])
Res5389 = keras.layers.Reshape((2, 2, 2), name = 'Res5389', )(Min11803)
Max94676 = keras.layers.MaxPool2D(pool_size=(1, 1), strides=(1, 1), padding='same', name = 'Max94676', )(Res5389)
ReL43506 = keras.layers.ReLU(max_value=0.5104312975070102, negative_slope=0.9006556957826798, threshold=1.204972958117737, name = 'ReL43506', )(Max94676)
Min22043 = keras.layers.Minimum(name = 'Min22043', )([Con96528,ReL43506])
Con2109 = keras.layers.Concatenate(axis=3, name = 'Con2109', )([Min22043,in0Con2109])
Add44923 = keras.layers.Add(name = 'Add44923', )([Zer36840,Con2109])
model = tf.keras.models.Model(inputs=[in0Min19131,in1Min19131,in0Ave47429,in1Ave47429,in0Con96528,in0Min11803,in1Min11803,in0Con2109], outputs=Add44923)
in0Min19131 = tf.constant([[[[[0.0236, 0.256], [0.3185, 0.6673]]], [[[0.6159, 0.2933], [0.86, 0.933]]]]])
in1Min19131 = tf.constant([[[[[0.6391, 0.8878], [0.4509, 0.1808]]], [[[0.598, 0.4303], [0.7689, 0.6085]]]]])
in0Ave47429 = tf.constant([[[[0.4456], [0.9014]], [[0.5343], [0.0459]]]])
in1Ave47429 = tf.constant([[[[0.6042], [0.1759]], [[0.4513], [0.298]]]])
in0Con96528 = tf.constant([[[[0.0147], [0.6745]], [[0.0956], [0.8016]]]])
in0Min11803 = tf.constant([[[[[0.2279, 0.8812]], [[0.4764, 0.6582]]], [[[0.216, 0.9674]], [[0.9161, 0.825]]]]])
in1Min11803 = tf.constant([[[[[0.1633, 0.3032]], [[0.0412, 0.7436]]], [[[0.3849, 0.2864]], [[0.8764, 0.2158]]]]])
in0Con2109 = tf.constant([[[[0.4394, 0.5381], [0.4574, 0.9635]], [[0.4318, 0.2466], [0.4107, 0.5529]]]])
print (np.array2string(model.predict([in0Min19131,in1Min19131,in0Ave47429,in1Ave47429,in0Con96528,in0Min11803,in1Min11803,in0Con2109],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Add44923.png')

LMin19131 = minimum_layer([[[[[[0.0236, 0.256], [0.3185, 0.6673]]], [[[0.6159, 0.2933], [0.86, 0.933]]]]], [[[[[0.6391, 0.8878], [0.4509, 0.1808]]], [[[0.598, 0.4303], [0.7689, 0.6085]]]]]], Min19131), 
LLay33412 = layer_normalization_layer(Min19131, 1, 1.2665658055639657, Lay33412), 
LThr26200 = thresholded_relu_layer(Lay33412, 9.064482346929438, Thr26200), 
LRes67949 = reshape_layer(Thr26200, [2, 1, 4], Res67949), 
LZer36840 = zero_padding2D_layer(Res67949, 0, 0, 1, 0, Zer36840), 
LAve47429 = average_layer([[[[[0.4456], [0.9014]], [[0.5343], [0.0459]]]], [[[[0.6042], [0.1759]], [[0.4513], [0.298]]]]], Ave47429), 
LCon96528 = concatenate_layer([Ave47429,[[[[0.0147], [0.6745]], [[0.0956], [0.8016]]]]], 3, Con96528), 
LMin11803 = minimum_layer([[[[[[0.2279, 0.8812]], [[0.4764, 0.6582]]], [[[0.216, 0.9674]], [[0.9161, 0.825]]]]], [[[[[0.1633, 0.3032]], [[0.0412, 0.7436]]], [[[0.3849, 0.2864]], [[0.8764, 0.2158]]]]]], Min11803), 
LRes5389 = reshape_layer(Min11803, [2, 2, 2], Res5389), 
LMax94676 = max_pool2D_layer(Res5389, 1, 1, 1, 1, true, Max94676), 
LReL43506 = relu_layer(Max94676, 0.5104312975070102, 0.9006556957826798, 1.204972958117737, ReL43506), 
LMin22043 = minimum_layer([Con96528,ReL43506], Min22043), 
LCon2109 = concatenate_layer([Min22043,[[[[0.4394, 0.5381], [0.4574, 0.9635]], [[0.4318, 0.2466], [0.4107, 0.5529]]]]], 3, Con2109), 
LAdd44923 = add_layer([Zer36840,Con2109], Add44923), 
exec_layers([LMin19131,LLay33412,LThr26200,LRes67949,LZer36840,LAve47429,LCon96528,LMin11803,LRes5389,LMax94676,LReL43506,LMin22043,LCon2109,LAdd44923],["Min19131","Lay33412","Thr26200","Res67949","Zer36840","Ave47429","Con96528","Min11803","Res5389","Max94676","ReL43506","Min22043","Con2109","Add44923"],Add44923,"Add44923")

Actual (Unparsed): [[[[-0.9381887, -0.8121869, 0.4394000, 0.5381000], [-1.0481587, -0.4924542, 0.4574000, 0.9635000]], [[-0.8907241, -0.8273180, 0.4318000, 0.2466000], [-0.2959311, -0.8909043, 0.4107000, 0.5529000]]]]

Expected (Unparsed): [[[[-0.9381886828715328,-0.8121869510315358,0.4394,0.5381],[-1.048158743326598,-0.4924541790286846,0.4574,0.9635]],[[-0.8907241277037856,-0.8273179667206849,0.4318,0.2466],[-0.29593110620890384,-0.8909042588429421,0.4107,0.5529]]]]

Actual:   [[[[-0.9381, -0.8121, 0.4394, 0.5381], [-1.0481, -0.4924, 0.4574, 0.9635]], [[-0.8907, -0.8273, 0.4318, 0.2466], [-0.2959, -0.8909, 0.4107, 0.5529]]]]

Expected: [[[[-0.9381, -0.8121, 0.4394, 0.5381], [-1.0481, -0.4924, 0.4574, 0.9635]], [[-0.8907, -0.8273, 0.4318, 0.2466], [-0.2959, -0.8909, 0.4107, 0.5529]]]]