import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Cro45328 = tf.keras.layers.Input(shape=([1, 1, 1]))
in0Con64752 = tf.keras.layers.Input(shape=([2, 1, 2, 1]))
in0Mul62101 = tf.keras.layers.Input(shape=([1, 2, 1, 1]))
in1Mul62101 = tf.keras.layers.Input(shape=([1, 2, 1, 1]))
in0Con34974 = tf.keras.layers.Input(shape=([2, 1, 2, 1]))
in0Glo79982 = tf.keras.layers.Input(shape=([1, 2, 1]))
in0Con29996 = tf.keras.layers.Input(shape=([2, 1, 2, 1]))
in0Ave3011 = tf.keras.layers.Input(shape=([2, 1, 2, 2]))
in1Ave3011 = tf.keras.layers.Input(shape=([2, 1, 2, 2]))

Cro45328 = keras.layers.Cropping2D(cropping=((0, 0), (0, 0)), name = 'Cro45328', )(in0Cro45328)
Thr63369 = keras.layers.ThresholdedReLU(theta=9.563029419172157, name = 'Thr63369', )(Cro45328)
Res36015 = keras.layers.Reshape((1, 1, 1, 1), name = 'Res36015', )(Thr63369)
Zer5509 = keras.layers.ZeroPadding3D(padding=((1, 0), (0, 0), (1, 0)), name = 'Zer5509', )(Res36015)
Con64752 = keras.layers.Concatenate(axis=4, name = 'Con64752', )([Zer5509,in0Con64752])
Mul62101 = keras.layers.Multiply(name = 'Mul62101', )([in0Mul62101,in1Mul62101])
Fla98111 = keras.layers.Flatten(name = 'Fla98111', )(Mul62101)
Res21935 = keras.layers.Reshape((2, 1), name = 'Res21935', )(Fla98111)
Res94172 = keras.layers.Reshape((2, 1, 1), name = 'Res94172', )(Res21935)
Res94178 = keras.layers.Reshape((2, 1, 1, 1), name = 'Res94178', )(Res94172)
Zer3450 = keras.layers.ZeroPadding3D(padding=((0, 0), (0, 0), (1, 0)), name = 'Zer3450', )(Res94178)
Con34974 = keras.layers.Concatenate(axis=4, name = 'Con34974', )([Zer3450,in0Con34974])
Glo79982 = keras.layers.GlobalMaxPool2D(name = 'Glo79982', )(in0Glo79982)
Res71420 = keras.layers.Reshape((1, 1), name = 'Res71420', )(Glo79982)
Res69536 = keras.layers.Reshape((1, 1, 1), name = 'Res69536', )(Res71420)
Res48731 = keras.layers.Reshape((1, 1, 1, 1), name = 'Res48731', )(Res69536)
Zer95514 = keras.layers.ZeroPadding3D(padding=((1, 0), (0, 0), (1, 0)), name = 'Zer95514', )(Res48731)
Con29996 = keras.layers.Concatenate(axis=4, name = 'Con29996', )([Zer95514,in0Con29996])
Ave3011 = keras.layers.Average(name = 'Ave3011', )([in0Ave3011,in1Ave3011])
Max97859 = keras.layers.Maximum(name = 'Max97859', )([Con29996,Ave3011])
Max38373 = keras.layers.Maximum(name = 'Max38373', )([Con34974,Max97859])
Mul86318 = keras.layers.Multiply(name = 'Mul86318', )([Con64752,Max38373])
model = tf.keras.models.Model(inputs=[in0Cro45328,in0Con64752,in0Mul62101,in1Mul62101,in0Con34974,in0Glo79982,in0Con29996,in0Ave3011,in1Ave3011], outputs=Mul86318)
in0Cro45328 = tf.constant([[[[1.3387]]]])
in0Con64752 = tf.constant([[[[[0.2093], [0.9721]]], [[[0.4811], [0.3816]]]]])
in0Mul62101 = tf.constant([[[[[0.1001]], [[0.3757]]]]])
in1Mul62101 = tf.constant([[[[[0.2774]], [[0.8346]]]]])
in0Con34974 = tf.constant([[[[[0.901], [0.5276]]], [[[0.5059], [0.0716]]]]])
in0Glo79982 = tf.constant([[[[1.6475], [1.825]]]])
in0Con29996 = tf.constant([[[[[0.1968], [0.9054]]], [[[0.8364], [0.9617]]]]])
in0Ave3011 = tf.constant([[[[[0.411, 0.4795], [0.0284, 0.2252]]], [[[0.8622, 0.6261], [0.7627, 0.5573]]]]])
in1Ave3011 = tf.constant([[[[[0.7996, 0.9145], [0.4316, 0.3396]]], [[[0.5409, 0.6085], [0.6445, 0.7944]]]]])
print (np.array2string(model.predict([in0Cro45328,in0Con64752,in0Mul62101,in1Mul62101,in0Con34974,in0Glo79982,in0Con29996,in0Ave3011,in1Ave3011],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Mul86318.png')

LCro45328 = cropping2D_layer([[[[1.3387]]]], 0, 0, 0, 0, Cro45328), 
LThr63369 = thresholded_relu_layer(Cro45328, 9.563029419172157, Thr63369), 
LRes36015 = reshape_layer(Thr63369, [1, 1, 1, 1], Res36015), 
LZer5509 = zero_padding3D_layer(Res36015, 1, 0, 0, 0, 1, 0, Zer5509), 
LCon64752 = concatenate_layer([Zer5509,[[[[[0.2093], [0.9721]]], [[[0.4811], [0.3816]]]]]], 4, Con64752), 
LMul62101 = multiply_layer([[[[[[0.1001]], [[0.3757]]]]], [[[[[0.2774]], [[0.8346]]]]]], Mul62101), 
LFla98111 = flatten_layer(Mul62101, Fla98111), 
LRes21935 = reshape_layer(Fla98111, [2, 1], Res21935), 
LRes94172 = reshape_layer(Res21935, [2, 1, 1], Res94172), 
LRes94178 = reshape_layer(Res94172, [2, 1, 1, 1], Res94178), 
LZer3450 = zero_padding3D_layer(Res94178, 0, 0, 0, 0, 1, 0, Zer3450), 
LCon34974 = concatenate_layer([Zer3450,[[[[[0.901], [0.5276]]], [[[0.5059], [0.0716]]]]]], 4, Con34974), 
LGlo79982 = global_max_pool2D_layer([[[[1.6475], [1.825]]]], Glo79982), 
LRes71420 = reshape_layer(Glo79982, [1, 1], Res71420), 
LRes69536 = reshape_layer(Res71420, [1, 1, 1], Res69536), 
LRes48731 = reshape_layer(Res69536, [1, 1, 1, 1], Res48731), 
LZer95514 = zero_padding3D_layer(Res48731, 1, 0, 0, 0, 1, 0, Zer95514), 
LCon29996 = concatenate_layer([Zer95514,[[[[[0.1968], [0.9054]]], [[[0.8364], [0.9617]]]]]], 4, Con29996), 
LAve3011 = average_layer([[[[[[0.411, 0.4795], [0.0284, 0.2252]]], [[[0.8622, 0.6261], [0.7627, 0.5573]]]]], [[[[[0.7996, 0.9145], [0.4316, 0.3396]]], [[[0.5409, 0.6085], [0.6445, 0.7944]]]]]], Ave3011), 
LMax97859 = maximum_layer([Con29996,Ave3011], Max97859), 
LMax38373 = maximum_layer([Con34974,Max97859], Max38373), 
LMul86318 = multiply_layer([Con64752,Max38373], Mul86318), 
exec_layers([LCro45328,LThr63369,LRes36015,LZer5509,LCon64752,LMul62101,LFla98111,LRes21935,LRes94172,LRes94178,LZer3450,LCon34974,LGlo79982,LRes71420,LRes69536,LRes48731,LZer95514,LCon29996,LAve3011,LMax97859,LMax38373,LMul86318],["Cro45328","Thr63369","Res36015","Zer5509","Con64752","Mul62101","Fla98111","Res21935","Res94172","Res94178","Zer3450","Con34974","Glo79982","Res71420","Res69536","Res48731","Zer95514","Con29996","Ave3011","Max97859","Max38373","Mul86318"],Mul86318,"Mul86318")

Actual (Unparsed): [[[[[0.0000000, 0.1885793], [0.0000000, 0.8801393]]], [[[0.0000000, 0.4023920], [0.0000000, 0.3669847]]]]]

Expected (Unparsed): [[[[[0.0,0.1885793],[0.0,0.8801393399999999]]],[[[0.0,0.40239204000000006],[0.0,0.36698472]]]]]

Actual:   [[[[[0, 0.1886], [0, 0.8802]]], [[[0, 0.4024], [0, 0.367]]]]]

Expected: [[[[[0, 0.1886], [0, 0.8802]]], [[[0, 0.4024], [0, 0.367]]]]]