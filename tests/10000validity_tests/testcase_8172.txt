import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Sub43431 = tf.keras.layers.Input(shape=([2]))
in1Sub43431 = tf.keras.layers.Input(shape=([2]))

Sub43431 = keras.layers.Subtract(name = 'Sub43431', )([in0Sub43431,in1Sub43431])
Sof62773 = keras.layers.Softmax(axis=1, name = 'Sof62773', )(Sub43431)
Lay60971 = keras.layers.LayerNormalization(axis=1, epsilon=2.576049183617797, name = 'Lay60971', )(Sof62773)
model = tf.keras.models.Model(inputs=[in0Sub43431,in1Sub43431], outputs=Lay60971)
in0Sub43431 = tf.constant([[0.6343, 0.6853]])
in1Sub43431 = tf.constant([[0.4392, 0.4863]])
print (np.array2string(model.predict([in0Sub43431,in1Sub43431],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Lay60971.png')

LSub43431 = subtract_layer([[0.6343, 0.6853]], [[0.4392, 0.4863]], Sub43431), 
LSof62773 = softmax_layer(Sub43431, 1, Sof62773), 
LLay60971 = layer_normalization_layer(Sof62773, 1, 2.576049183617797, Lay60971), 
exec_layers([LSub43431,LSof62773,LLay60971],["Sub43431","Sof62773","Lay60971"],Lay60971,"Lay60971")

Actual (Unparsed): [[-0.0006075, 0.0006075]]

Expected (Unparsed): [[-0.0006074729019933886,0.0006074729019933886]]

Actual:   [[-0.0006, 0.0007]]

Expected: [[-0.0006, 0.0007]]