import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Sof14738 = tf.keras.layers.Input(shape=([2, 2]))

Sof14738 = keras.layers.Softmax(axis=1, name = 'Sof14738', input_shape=(2, 2))(in0Sof14738)
Thr33775 = keras.layers.ThresholdedReLU(theta=7.424622891290275, name = 'Thr33775', )(Sof14738)
model = tf.keras.models.Model(inputs=[in0Sof14738], outputs=Thr33775)
in0Sof14738 = tf.constant([[[0.8993, 0.0221], [0.8625, 0.6479]]])
print (np.array2string(model.predict([in0Sof14738],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Thr33775.png')

LSof14738 = softmax_layer([[[0.8993, 0.0221], [0.8625, 0.6479]]], 1, Sof14738), 
LThr33775 = thresholded_relu_layer(Sof14738, 7.424622891290275, Thr33775), 
exec_layers([LSof14738,LThr33775],["Sof14738","Thr33775"],Thr33775,"Thr33775")

Actual (Unparsed): [[[0.0000000, 0.0000000], [0.0000000, 0.0000000]]]

Expected (Unparsed): [[[0,0],[0,0]]]

Actual:   [[[0, 0], [0, 0]]]

Expected: [[[0, 0], [0, 0]]]