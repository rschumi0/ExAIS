import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Zer31498 = tf.keras.layers.Input(shape=([2, 4]))
in0Con29902 = tf.keras.layers.Input(shape=([4, 4, 2]))
in0ELU69700 = tf.keras.layers.Input(shape=([1, 2]))
in0Con71046 = tf.keras.layers.Input(shape=([3, 3, 2]))
in0Sub31116 = tf.keras.layers.Input(shape=([3, 3, 3]))
in1Sub31116 = tf.keras.layers.Input(shape=([3, 3, 3]))
in0Dot68297 = tf.keras.layers.Input(shape=([2, 2]))
in1Dot68297 = tf.keras.layers.Input(shape=([2, 2]))
in0Con40980 = tf.keras.layers.Input(shape=([4, 10]))

Zer31498 = keras.layers.ZeroPadding1D(padding=((1, 1)), name = 'Zer31498', )(in0Zer31498)
Res58949 = keras.layers.Reshape((4, 4, 1), name = 'Res58949', )(Zer31498)
Con29902 = keras.layers.Concatenate(axis=3, name = 'Con29902', )([Res58949,in0Con29902])
ELU69700 = keras.layers.ELU(alpha=-8.261403789564811, name = 'ELU69700', input_shape=(1, 2))(in0ELU69700)
Res21558 = keras.layers.Reshape((1, 2, 1), name = 'Res21558', )(ELU69700)
Zer35630 = keras.layers.ZeroPadding2D(padding=((2, 0), (1, 0)), name = 'Zer35630', )(Res21558)
Con71046 = keras.layers.Concatenate(axis=3, name = 'Con71046', )([Zer35630,in0Con71046])
Sub31116 = keras.layers.Subtract(name = 'Sub31116', )([in0Sub31116,in1Sub31116])
Mul76284 = keras.layers.Multiply(name = 'Mul76284', )([Con71046,Sub31116])
Zer96487 = keras.layers.ZeroPadding2D(padding=((1, 0), (1, 0)), name = 'Zer96487', )(Mul76284)
Mul91726 = keras.layers.Multiply(name = 'Mul91726', )([Con29902,Zer96487])
Res39977 = keras.layers.Reshape((4, 12), name = 'Res39977', )(Mul91726)
Dot68297 = keras.layers.Dot(axes=(2, 2), name = 'Dot68297', )([in0Dot68297,in1Dot68297])
Zer62183 = keras.layers.ZeroPadding1D(padding=((2, 0)), name = 'Zer62183', )(Dot68297)
Con40980 = keras.layers.Concatenate(axis=2, name = 'Con40980', )([Zer62183,in0Con40980])
Add28967 = keras.layers.Add(name = 'Add28967', )([Res39977,Con40980])
model = tf.keras.models.Model(inputs=[in0Zer31498,in0Con29902,in0ELU69700,in0Con71046,in0Sub31116,in1Sub31116,in0Dot68297,in1Dot68297,in0Con40980], outputs=Add28967)
in0Zer31498 = tf.constant([[[1.3037, 1.0499, 1.9354, 1.399], [1.2967, 1.3944, 1.1867, 1.3672]]])
in0Con29902 = tf.constant([[[[0.8689, 0.848], [0.7981, 0.6323], [0.4815, 0.3432], [0.2193, 0.7259]], [[0.9263, 0.9454], [0.1832, 0.913], [0.537, 0.8363], [0.626, 0.1953]], [[0.5536, 0.4806], [0.1039, 0.0371], [0.0053, 0.7995], [0.5335, 0.6297]], [[0.4711, 0.2178], [0.3551, 0.9151], [0.2515, 0.56], [0.0757, 0.9389]]]])
in0ELU69700 = tf.constant([[[0.4169, 0.9483]]])
in0Con71046 = tf.constant([[[[0.1608, 0.8413], [0.4645, 0.3864], [0.886, 0.7]], [[0.0349, 0.1068], [0.6285, 0.2133], [0.6738, 0.9633]], [[0.0552, 0.0798], [0.5785, 0.0273], [0.1058, 0.9567]]]])
in0Sub31116 = tf.constant([[[[0.6309, 0.9099, 0.4556], [0.4445, 0.4438, 0.6225], [0.7879, 0.6748, 0.4105]], [[0.6159, 0.733, 0.4118], [0.0093, 0.7843, 0.58], [0.9657, 0.1085, 0.444]], [[0.8231, 0.3756, 0.9015], [0.8418, 0.441, 0.1856], [0.3817, 0.0053, 0.3763]]]])
in1Sub31116 = tf.constant([[[[0.9901, 0.8742, 0.1563], [0.7231, 0.4546, 0.8832], [0.4426, 0.5146, 0.3095]], [[0.7876, 0.0545, 0.4188], [0.8992, 0.724, 0.8889], [0.095, 0.225, 0.3329]], [[0.8007, 0.4418, 0.0647], [0.9128, 0.1337, 0.4779], [0.673, 0.924, 0.6696]]]])
in0Dot68297 = tf.constant([[[0.1329, 0.7718], [0.7176, 0.3447]]])
in1Dot68297 = tf.constant([[[0.8023, 0.0245], [0.8252, 0.0921]]])
in0Con40980 = tf.constant([[[0.1604, 0.3174, 0.3228, 0.0742, 0.4645, 0.0661, 0.9457, 0.0076, 0.4067, 0.6123], [0.4821, 0.4412, 0.7698, 0.2981, 0.4025, 0.3419, 0.4678, 0.3266, 0.9353, 0.793], [0.3905, 0.5276, 0.8731, 0.0731, 0.2249, 0.7031, 0.2245, 0.7327, 0.205, 0.806], [0.0056, 0.3218, 0.8141, 0.1943, 0.4296, 0.9187, 0.5631, 0.4683, 0.2454, 0.8937]]])
print (np.array2string(model.predict([in0Zer31498,in0Con29902,in0ELU69700,in0Con71046,in0Sub31116,in1Sub31116,in0Dot68297,in1Dot68297,in0Con40980],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Add28967.png')

LZer31498 = zero_padding1D_layer([[[1.3037, 1.0499, 1.9354, 1.399], [1.2967, 1.3944, 1.1867, 1.3672]]], 1, 1, Zer31498), 
LRes58949 = reshape_layer(Zer31498, [4, 4, 1], Res58949), 
LCon29902 = concatenate_layer([Res58949,[[[[0.8689, 0.848], [0.7981, 0.6323], [0.4815, 0.3432], [0.2193, 0.7259]], [[0.9263, 0.9454], [0.1832, 0.913], [0.537, 0.8363], [0.626, 0.1953]], [[0.5536, 0.4806], [0.1039, 0.0371], [0.0053, 0.7995], [0.5335, 0.6297]], [[0.4711, 0.2178], [0.3551, 0.9151], [0.2515, 0.56], [0.0757, 0.9389]]]]], 3, Con29902), 
LELU69700 = elu_layer([[[0.4169, 0.9483]]], -8.261403789564811, ELU69700), 
LRes21558 = reshape_layer(ELU69700, [1, 2, 1], Res21558), 
LZer35630 = zero_padding2D_layer(Res21558, 2, 0, 1, 0, Zer35630), 
LCon71046 = concatenate_layer([Zer35630,[[[[0.1608, 0.8413], [0.4645, 0.3864], [0.886, 0.7]], [[0.0349, 0.1068], [0.6285, 0.2133], [0.6738, 0.9633]], [[0.0552, 0.0798], [0.5785, 0.0273], [0.1058, 0.9567]]]]], 3, Con71046), 
LSub31116 = subtract_layer([[[[0.6309, 0.9099, 0.4556], [0.4445, 0.4438, 0.6225], [0.7879, 0.6748, 0.4105]], [[0.6159, 0.733, 0.4118], [0.0093, 0.7843, 0.58], [0.9657, 0.1085, 0.444]], [[0.8231, 0.3756, 0.9015], [0.8418, 0.441, 0.1856], [0.3817, 0.0053, 0.3763]]]], [[[[0.9901, 0.8742, 0.1563], [0.7231, 0.4546, 0.8832], [0.4426, 0.5146, 0.3095]], [[0.7876, 0.0545, 0.4188], [0.8992, 0.724, 0.8889], [0.095, 0.225, 0.3329]], [[0.8007, 0.4418, 0.0647], [0.9128, 0.1337, 0.4779], [0.673, 0.924, 0.6696]]]], Sub31116), 
LMul76284 = multiply_layer([Con71046,Sub31116], Mul76284), 
LZer96487 = zero_padding2D_layer(Mul76284, 1, 0, 1, 0, Zer96487), 
LMul91726 = multiply_layer([Con29902,Zer96487], Mul91726), 
LRes39977 = reshape_layer(Mul91726, [4, 12], Res39977), 
LDot68297 = dot_layer([[[0.1329, 0.7718], [0.7176, 0.3447]]], [[[0.8023, 0.0245], [0.8252, 0.0921]]], 2, 2, Dot68297), 
LZer62183 = zero_padding1D_layer(Dot68297, 2, 0, Zer62183), 
LCon40980 = concatenate_layer([Zer62183,[[[0.1604, 0.3174, 0.3228, 0.0742, 0.4645, 0.0661, 0.9457, 0.0076, 0.4067, 0.6123], [0.4821, 0.4412, 0.7698, 0.2981, 0.4025, 0.3419, 0.4678, 0.3266, 0.9353, 0.793], [0.3905, 0.5276, 0.8731, 0.0731, 0.2249, 0.7031, 0.2245, 0.7327, 0.205, 0.806], [0.0056, 0.3218, 0.8141, 0.1943, 0.4296, 0.9187, 0.5631, 0.4683, 0.2454, 0.8937]]]], 2, Con40980), 
LAdd28967 = add_layer([Res39977,Con40980], Add28967), 
exec_layers([LZer31498,LRes58949,LCon29902,LELU69700,LRes21558,LZer35630,LCon71046,LSub31116,LMul76284,LZer96487,LMul91726,LRes39977,LDot68297,LZer62183,LCon40980,LAdd28967],["Zer31498","Res58949","Con29902","ELU69700","Res21558","Zer35630","Con71046","Sub31116","Mul76284","Zer96487","Mul91726","Res39977","Dot68297","Zer62183","Con40980","Add28967"],Add28967,"Add28967")

Actual (Unparsed): [[[0.0000000, 0.0000000, 0.1604000, 0.3174000, 0.3228000, 0.0742000, 0.4645000, 0.0661000, 0.9457000, 0.0076000, 0.4067000, 0.6123000], [0.0000000, 0.0000000, 0.4821000, 0.4412000, 0.7708517, 0.5279944, 0.4025000, 0.3392061, 0.3835557, 0.3266000, 1.0241527, 0.8068077], [0.1255348, 0.1807519, 0.3905000, 0.5276000, 0.8755603, 0.0730723, 0.2249000, 0.7033009, 0.1718222, 0.7327000, 0.1631215, 0.8733922], [0.5841756, 0.6239104, 0.0056000, 0.3218000, 0.8128024, 0.2554073, 0.4296000, 0.9634099, 0.5586313, 0.4683000, 0.2380421, 0.6302446]]]

Expected (Unparsed): [[[0,0.0,0.1604,0.3174,0.3228,0.0742,0.4645,0.0661,0.9457,0.0076,0.4067,0.6123],[0.0,0.0,0.4821,0.4412,0.770851670592,0.52799439517,0.4025,0.3392060858,0.383555754376,0.3266,1.0241526872,0.8068077100000001],[0.12553477,0.18075186,0.3905,0.5276,0.875560315635,0.07307226404,0.2249,0.703300862315,0.171822248185,0.7327,0.16312147705,0.873392150111],[0.5841756300000001,0.62391039,0.0056,0.3218,0.8128023793760001,0.255407303264,0.4296,0.963409922075,0.5586313176000001,0.4683,0.238042076578,0.6302445567210001]]]

Actual:   [[[0, 0, 0.1604, 0.3174, 0.3228, 0.0742, 0.4645, 0.0661, 0.9457, 0.0076, 0.4067, 0.6123], [0, 0, 0.4821, 0.4412, 0.7709, 0.528, 0.4025, 0.3393, 0.3836, 0.3266, 1.0242, 0.8069], [0.1256, 0.1808, 0.3905, 0.5276, 0.8756, 0.0731, 0.2249, 0.7034, 0.1719, 0.7327, 0.1632, 0.8734], [0.5842, 0.624, 0.0056, 0.3218, 0.8129, 0.2555, 0.4296, 0.9635, 0.5587, 0.4683, 0.2381, 0.6303]]]

Expected: [[[0, 0, 0.1604, 0.3174, 0.3228, 0.0742, 0.4645, 0.0661, 0.9457, 0.0076, 0.4067, 0.6123], [0, 0, 0.4821, 0.4412, 0.7709, 0.528, 0.4025, 0.3393, 0.3836, 0.3266, 1.0242, 0.8069], [0.1256, 0.1808, 0.3905, 0.5276, 0.8756, 0.0731, 0.2249, 0.7034, 0.1719, 0.7327, 0.1632, 0.8734], [0.5842, 0.624, 0.0056, 0.3218, 0.8129, 0.2555, 0.4296, 0.9635, 0.5587, 0.4683, 0.2381, 0.6303]]]