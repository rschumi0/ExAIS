import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Dot25007 = tf.keras.layers.Input(shape=([2]))
in1Dot25007 = tf.keras.layers.Input(shape=([2]))
in0Con5080 = tf.keras.layers.Input(shape=([2, 2, 3, 2]))
in0Cro24332 = tf.keras.layers.Input(shape=([2, 2, 4, 3]))
in0Ave17131 = tf.keras.layers.Input(shape=([2, 2, 1, 1]))
in1Ave17131 = tf.keras.layers.Input(shape=([2, 2, 1, 1]))
in0Con45255 = tf.keras.layers.Input(shape=([2, 2, 3, 2]))
in0Dot85648 = tf.keras.layers.Input(shape=([3]))
in1Dot85648 = tf.keras.layers.Input(shape=([3]))
in0Ave69724 = tf.keras.layers.Input(shape=([1, 1, 1, 1]))
in1Ave69724 = tf.keras.layers.Input(shape=([1, 1, 1, 1]))
in0Con82044 = tf.keras.layers.Input(shape=([35]))

Dot25007 = keras.layers.Dot(axes=(1, 1), name = 'Dot25007', )([in0Dot25007,in1Dot25007])
Res5835 = keras.layers.Reshape((1, 1), name = 'Res5835', )(Dot25007)
Res71308 = keras.layers.Reshape((1, 1, 1), name = 'Res71308', )(Res5835)
Res8448 = keras.layers.Reshape((1, 1, 1, 1), name = 'Res8448', )(Res71308)
Zer35 = keras.layers.ZeroPadding3D(padding=((1, 0), (1, 0), (2, 0)), name = 'Zer35', )(Res8448)
Con5080 = keras.layers.Concatenate(axis=4, name = 'Con5080', )([Zer35,in0Con5080])
Cro24332 = keras.layers.Cropping3D(cropping=((0, 1), (1, 0), (2, 0)), name = 'Cro24332', )(in0Cro24332)
Zer12542 = keras.layers.ZeroPadding3D(padding=((1, 0), (1, 0), (1, 0)), name = 'Zer12542', )(Cro24332)
Ave17131 = keras.layers.Average(name = 'Ave17131', )([in0Ave17131,in1Ave17131])
Zer11200 = keras.layers.ZeroPadding3D(padding=((0, 0), (0, 0), (2, 0)), name = 'Zer11200', )(Ave17131)
Con45255 = keras.layers.Concatenate(axis=4, name = 'Con45255', )([Zer11200,in0Con45255])
Max98825 = keras.layers.Maximum(name = 'Max98825', )([Zer12542,Con45255])
Min85819 = keras.layers.Minimum(name = 'Min85819', )([Con5080,Max98825])
Res90129 = keras.layers.Reshape((2, 2, 9), name = 'Res90129', )(Min85819)
Res37741 = keras.layers.Reshape((2, 18), name = 'Res37741', )(Res90129)
Fla40170 = keras.layers.Flatten(name = 'Fla40170', )(Res37741)
Dot85648 = keras.layers.Dot(axes=(1, 1), name = 'Dot85648', )([in0Dot85648,in1Dot85648])
Ave69724 = keras.layers.Average(name = 'Ave69724', )([in0Ave69724,in1Ave69724])
Res37229 = keras.layers.Reshape((1, 1, 1), name = 'Res37229', )(Ave69724)
Res30589 = keras.layers.Reshape((1, 1), name = 'Res30589', )(Res37229)
Glo44674 = keras.layers.GlobalMaxPool1D(name = 'Glo44674', )(Res30589)
Ave55080 = keras.layers.Average(name = 'Ave55080', )([Dot85648,Glo44674])
Con82044 = keras.layers.Concatenate(axis=1, name = 'Con82044', )([Ave55080,in0Con82044])
Add43272 = keras.layers.Add(name = 'Add43272', )([Fla40170,Con82044])
model = tf.keras.models.Model(inputs=[in0Dot25007,in1Dot25007,in0Con5080,in0Cro24332,in0Ave17131,in1Ave17131,in0Con45255,in0Dot85648,in1Dot85648,in0Ave69724,in1Ave69724,in0Con82044], outputs=Add43272)
in0Dot25007 = tf.constant([[0.7347, 0.946]])
in1Dot25007 = tf.constant([[0.4092, 0.5344]])
in0Con5080 = tf.constant([[[[[0.4943, 0.3471], [0.7284, 0.0938], [0.5543, 0.785]], [[0.3515, 0.0301], [0.5606, 0.4854], [0.8247, 0.2814]]], [[[0.6913, 0.4022], [0.8822, 0.0334], [0.688, 0.5144]], [[0.6854, 0.7011], [0.4474, 0.2026], [0.6851, 0.8786]]]]])
in0Cro24332 = tf.constant([[[[[1.9982, 1.5242, 1.2027], [1.0657, 1.5987, 1.3733], [1.5364, 1.162, 1.3548], [1.644, 1.7113, 1.0533]], [[1.6022, 1.6608, 1.819], [1.5599, 1.2407, 1.2011], [1.7932, 1.0825, 1.8647], [1.1133, 1.8978, 1.7221]]], [[[1.1927, 1.6376, 1.2488], [1.5974, 1.3175, 1.796], [1.9838, 1.254, 1.2689], [1.1305, 1.8596, 1.3046]], [[1.9978, 1.8869, 1.383], [1.0799, 1.1739, 1.4613], [1.0638, 1.1266, 1.1192], [1.5612, 1.0143, 1.8419]]]]])
in0Ave17131 = tf.constant([[[[[0.7948]], [[0.0666]]], [[[0.9147]], [[0.4031]]]]])
in1Ave17131 = tf.constant([[[[[0.0006]], [[0.0177]]], [[[0.314]], [[0.4167]]]]])
in0Con45255 = tf.constant([[[[[0.1514, 0.0512], [0.8944, 0.079], [0.0932, 0.8418]], [[0.7554, 0.9427], [0.6501, 0.0328], [0.1821, 0.2607]]], [[[0.0175, 0.4048], [0.4285, 0.6154], [0.3406, 0.415]], [[0.5618, 0.5204], [0.7506, 0.262], [0.9779, 0.095]]]]])
in0Dot85648 = tf.constant([[0.8559, 0.5083, 0.3418]])
in1Dot85648 = tf.constant([[0.392, 0.1849, 0.514]])
in0Ave69724 = tf.constant([[[[[0.1704]]]]])
in1Ave69724 = tf.constant([[[[[0.2251]]]]])
in0Con82044 = tf.constant([[0.0013, 0.3695, 0.9638, 0.5868, 0.5122, 0.8006, 0.017, 0.9473, 0.6639, 0.9077, 0.9769, 0.8646, 0.932, 0.8222, 0.7537, 0.6372, 0.4551, 0.6584, 0.1552, 0.2524, 0.2036, 0.7556, 0.2724, 0.5917, 0.2468, 0.7409, 0.9824, 0.4579, 0.6199, 0.0666, 0.0742, 0.9938, 0.7758, 0.5475, 0.571]])
print (np.array2string(model.predict([in0Dot25007,in1Dot25007,in0Con5080,in0Cro24332,in0Ave17131,in1Ave17131,in0Con45255,in0Dot85648,in1Dot85648,in0Ave69724,in1Ave69724,in0Con82044],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Add43272.png')

LDot25007 = dot_layer([[0.7347, 0.946]], [[0.4092, 0.5344]], 1, 1, Dot25007), 
LRes5835 = reshape_layer(Dot25007, [1, 1], Res5835), 
LRes71308 = reshape_layer(Res5835, [1, 1, 1], Res71308), 
LRes8448 = reshape_layer(Res71308, [1, 1, 1, 1], Res8448), 
LZer35 = zero_padding3D_layer(Res8448, 1, 0, 1, 0, 2, 0, Zer35), 
LCon5080 = concatenate_layer([Zer35,[[[[[0.4943, 0.3471], [0.7284, 0.0938], [0.5543, 0.785]], [[0.3515, 0.0301], [0.5606, 0.4854], [0.8247, 0.2814]]], [[[0.6913, 0.4022], [0.8822, 0.0334], [0.688, 0.5144]], [[0.6854, 0.7011], [0.4474, 0.2026], [0.6851, 0.8786]]]]]], 4, Con5080), 
LCro24332 = cropping3D_layer([[[[[1.9982, 1.5242, 1.2027], [1.0657, 1.5987, 1.3733], [1.5364, 1.162, 1.3548], [1.644, 1.7113, 1.0533]], [[1.6022, 1.6608, 1.819], [1.5599, 1.2407, 1.2011], [1.7932, 1.0825, 1.8647], [1.1133, 1.8978, 1.7221]]], [[[1.1927, 1.6376, 1.2488], [1.5974, 1.3175, 1.796], [1.9838, 1.254, 1.2689], [1.1305, 1.8596, 1.3046]], [[1.9978, 1.8869, 1.383], [1.0799, 1.1739, 1.4613], [1.0638, 1.1266, 1.1192], [1.5612, 1.0143, 1.8419]]]]], 0, 1, 1, 0, 2, 0, Cro24332), 
LZer12542 = zero_padding3D_layer(Cro24332, 1, 0, 1, 0, 1, 0, Zer12542), 
LAve17131 = average_layer([[[[[[0.7948]], [[0.0666]]], [[[0.9147]], [[0.4031]]]]], [[[[[0.0006]], [[0.0177]]], [[[0.314]], [[0.4167]]]]]], Ave17131), 
LZer11200 = zero_padding3D_layer(Ave17131, 0, 0, 0, 0, 2, 0, Zer11200), 
LCon45255 = concatenate_layer([Zer11200,[[[[[0.1514, 0.0512], [0.8944, 0.079], [0.0932, 0.8418]], [[0.7554, 0.9427], [0.6501, 0.0328], [0.1821, 0.2607]]], [[[0.0175, 0.4048], [0.4285, 0.6154], [0.3406, 0.415]], [[0.5618, 0.5204], [0.7506, 0.262], [0.9779, 0.095]]]]]], 4, Con45255), 
LMax98825 = maximum_layer([Zer12542,Con45255], Max98825), 
LMin85819 = minimum_layer([Con5080,Max98825], Min85819), 
LRes90129 = reshape_layer(Min85819, [2, 2, 9], Res90129), 
LRes37741 = reshape_layer(Res90129, [2, 18], Res37741), 
LFla40170 = flatten_layer(Res37741, Fla40170), 
LDot85648 = dot_layer([[0.8559, 0.5083, 0.3418]], [[0.392, 0.1849, 0.514]], 1, 1, Dot85648), 
LAve69724 = average_layer([[[[[[0.1704]]]]], [[[[[0.2251]]]]]], Ave69724), 
LRes37229 = reshape_layer(Ave69724, [1, 1, 1], Res37229), 
LRes30589 = reshape_layer(Res37229, [1, 1], Res30589), 
LGlo44674 = global_max_pool1D_layer(Res30589, Glo44674), 
LAve55080 = average_layer([Dot85648,Glo44674], Ave55080), 
LCon82044 = concatenate_layer([Ave55080,[[0.0013, 0.3695, 0.9638, 0.5868, 0.5122, 0.8006, 0.017, 0.9473, 0.6639, 0.9077, 0.9769, 0.8646, 0.932, 0.8222, 0.7537, 0.6372, 0.4551, 0.6584, 0.1552, 0.2524, 0.2036, 0.7556, 0.2724, 0.5917, 0.2468, 0.7409, 0.9824, 0.4579, 0.6199, 0.0666, 0.0742, 0.9938, 0.7758, 0.5475, 0.571]]], 1, Con82044), 
LAdd43272 = add_layer([Fla40170,Con82044], Add43272), 
exec_layers([LDot25007,LRes5835,LRes71308,LRes8448,LZer35,LCon5080,LCro24332,LZer12542,LAve17131,LZer11200,LCon45255,LMax98825,LMin85819,LRes90129,LRes37741,LFla40170,LDot85648,LAve69724,LRes37229,LRes30589,LGlo44674,LAve55080,LCon82044,LAdd43272],["Dot25007","Res5835","Res71308","Res8448","Zer35","Con5080","Cro24332","Zer12542","Ave17131","Zer11200","Con45255","Max98825","Min85819","Res90129","Res37741","Fla40170","Dot85648","Ave69724","Res37229","Res30589","Glo44674","Ave55080","Con82044","Add43272"],Add43272,"Add43272")

Actual (Unparsed): [[0.4014663, 0.1527000, 0.4207000, 0.9638000, 1.3152000, 0.5912000, 0.8006000, 0.1102000, 1.7323000, 0.6639000, 1.2592000, 1.0070000, 0.8646000, 1.4926000, 0.8550000, 0.7537000, 0.8193000, 0.7158000, 0.6584000, 0.1727000, 0.6546000, 0.2036000, 1.1841000, 0.3058000, 0.5917000, 0.5874000, 1.1559000, 0.9824000, 1.0197000, 1.1403000, 0.0666000, 0.5216000, 1.1964000, 1.5819816, 1.2326000, 1.4496000]]

Expected (Unparsed): [[0.401466335,0.1527,0.4207,0.9638,1.3152,0.5912,0.8006,0.1102,1.7323,0.6639,1.2591999999999999,1.007,0.8646,1.4926,0.8550000000000001,0.7537,0.8193,0.7158,0.6584,0.17270000000000002,0.6546000000000001,0.2036,1.1841,0.30579999999999996,0.5917,0.5874,1.1559,0.9824,1.0196999999999998,1.1402999999999999,0.0666,0.5216000000000001,1.1964000000000001,1.58198164,1.2326000000000001,1.4496]]

Actual:   [[0.4015, 0.1527, 0.4207, 0.9638, 1.3152, 0.5912, 0.8006, 0.1102, 1.7323, 0.6639, 1.2592, 1.007, 0.8646, 1.4926, 0.855, 0.7537, 0.8193, 0.7158, 0.6584, 0.1727, 0.6546, 0.2036, 1.1841, 0.3058, 0.5917, 0.5874, 1.1559, 0.9824, 1.0197, 1.1403, 0.0666, 0.5216, 1.1964, 1.582, 1.2326, 1.4496]]

Expected: [[0.4015, 0.1527, 0.4207, 0.9638, 1.3152, 0.5912, 0.8006, 0.1102, 1.7323, 0.6639, 1.2592, 1.007, 0.8646, 1.4926, 0.8551, 0.7537, 0.8193, 0.7158, 0.6584, 0.1728, 0.6547, 0.2036, 1.1841, 0.3058, 0.5917, 0.5874, 1.1559, 0.9824, 1.0197, 1.1403, 0.0666, 0.5217, 1.1965, 1.582, 1.2327, 1.4496]]