import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Max50134 = tf.keras.layers.Input(shape=([1, 2]))
in1Max50134 = tf.keras.layers.Input(shape=([1, 2]))
in0Con24920 = tf.keras.layers.Input(shape=([3, 3, 2, 3]))
in0Up_54102 = tf.keras.layers.Input(shape=([1, 1, 1]))
in0Con81284 = tf.keras.layers.Input(shape=([3, 3, 2, 3]))
in0Con52196 = tf.keras.layers.Input(shape=([2, 1, 2, 1]))
in0Add15017 = tf.keras.layers.Input(shape=([1, 2, 2, 2]))
in1Add15017 = tf.keras.layers.Input(shape=([1, 2, 2, 2]))
in0Con46121 = tf.keras.layers.Input(shape=([3, 3, 2, 2]))

Max50134 = keras.layers.Maximum(name = 'Max50134', )([in0Max50134,in1Max50134])
Res6400 = keras.layers.Reshape((1, 2, 1), name = 'Res6400', )(Max50134)
Res27273 = keras.layers.Reshape((1, 2, 1, 1), name = 'Res27273', )(Res6400)
Zer92739 = keras.layers.ZeroPadding3D(padding=((2, 0), (1, 0), (1, 0)), name = 'Zer92739', )(Res27273)
Con24920 = keras.layers.Concatenate(axis=4, name = 'Con24920', )([Zer92739,in0Con24920])
Up_54102 = keras.layers.UpSampling2D(size=(1, 2), name = 'Up_54102', )(in0Up_54102)
Res66451 = keras.layers.Reshape((1, 2, 1, 1), name = 'Res66451', )(Up_54102)
Zer71764 = keras.layers.ZeroPadding3D(padding=((2, 0), (1, 0), (1, 0)), name = 'Zer71764', )(Res66451)
Con81284 = keras.layers.Concatenate(axis=4, name = 'Con81284', )([Zer71764,in0Con81284])
Con52196 = keras.layers.Conv3DTranspose(4, (2, 1, 1),strides=(1, 1, 1), padding='valid', name = 'Con52196', )(in0Con52196)
Zer29639 = keras.layers.ZeroPadding3D(padding=((0, 0), (2, 0), (0, 0)), name = 'Zer29639', )(Con52196)
Sub3886 = keras.layers.Subtract(name = 'Sub3886', )([Con81284,Zer29639])
Add15017 = keras.layers.Add(name = 'Add15017', )([in0Add15017,in1Add15017])
Zer61048 = keras.layers.ZeroPadding3D(padding=((2, 0), (1, 0), (0, 0)), name = 'Zer61048', )(Add15017)
Con46121 = keras.layers.Concatenate(axis=4, name = 'Con46121', )([Zer61048,in0Con46121])
Max67080 = keras.layers.Maximum(name = 'Max67080', )([Sub3886,Con46121])
Sub14467 = keras.layers.Subtract(name = 'Sub14467', )([Con24920,Max67080])
model = tf.keras.models.Model(inputs=[in0Max50134,in1Max50134,in0Con24920,in0Up_54102,in0Con81284,in0Con52196,in0Add15017,in1Add15017,in0Con46121], outputs=Sub14467)
w = model.get_layer('Con52196').get_weights() 
w[0] = np.array([[[[[0.6642], [0.1417], [0.7547], [0.6491]]]], [[[[0.7334], [0.2274], [0.9733], [0.6516]]]]])
w[1] = np.array([0, 0, 0, 0])
model.get_layer('Con52196').set_weights(w) 
in0Max50134 = tf.constant([[[0.1585, 0.5938]]])
in1Max50134 = tf.constant([[[0.6348, 0.8654]]])
in0Con24920 = tf.constant([[[[[0.5375, 0.8151, 0.9741], [0.146, 0.2034, 0.5464]], [[0.7876, 0.8735, 0.8549], [0.2105, 0.8705, 0.0427]], [[0.687, 0.3455, 0.1406], [0.5389, 0.0193, 0.6575]]], [[[0.7356, 0.6632, 0.8838], [0.5048, 0.0191, 0.3247]], [[0.1408, 0.5781, 0.2319], [0.8212, 0.7796, 0.5105]], [[0.9795, 0.4378, 0.5737], [0.897, 0.2786, 0.4716]]], [[[0.0617, 0.4726, 0.1982], [0.7111, 0.9016, 0.0093]], [[0.2282, 0.8405, 0.0075], [0.8246, 0.3803, 0.7197]], [[0.52, 0.6654, 0.6878], [0.9976, 0.5825, 0.1291]]]]])
in0Up_54102 = tf.constant([[[[1.4752]]]])
in0Con81284 = tf.constant([[[[[0.3594, 0.1382, 0.2756], [0.7545, 0.9514, 0.9578]], [[0.4627, 0.9792, 0.8623], [0.8204, 0.7121, 0.5604]], [[0.8984, 0.0862, 0.336], [0.6312, 0.7849, 0.7641]]], [[[0.3159, 0.3717, 0.6603], [0.2787, 0.013, 0.7138]], [[0.9049, 0.0746, 0.6935], [0.7877, 0.5178, 0.3717]], [[0.2944, 0.6715, 0.4037], [0.1654, 0.0768, 0.9825]]], [[[0.4793, 0.9994, 0.9446], [0.9903, 0.4719, 0.128]], [[0.2428, 0.2234, 0.6421], [0.4352, 0.7917, 0.9909]], [[0.4374, 0.8773, 0.7602], [0.8501, 0.2571, 0.2794]]]]])
in0Con52196 = tf.constant([[[[[0.9274], [0.66]]], [[[0.8078], [0.6033]]]]])
in0Add15017 = tf.constant([[[[[0.9088, 0.6357], [0.4043, 0.932]], [[0.539, 0.3834], [0.0337, 0.6906]]]]])
in1Add15017 = tf.constant([[[[[0.9219, 0.524], [0.8437, 0.6514]], [[0.1027, 0.1424], [0.7677, 0.957]]]]])
in0Con46121 = tf.constant([[[[[0.4608, 0.1506], [0.7076, 0.988]], [[0.4669, 0.6054], [0.1881, 0.5902]], [[0.1253, 0.9939], [0.7692, 0.076]]], [[[0.8644, 0.8417], [0.5199, 0.6122]], [[0.0607, 0.161], [0.1004, 0.3529]], [[0.4434, 0.9175], [0.9086, 0.7166]]], [[[0.7762, 0.2276], [0.997, 0.6021]], [[0.5026, 0.5801], [0.2759, 0.297]], [[0.3679, 0.0193], [0.8, 0.552]]]]])
print (np.array2string(model.predict([in0Max50134,in1Max50134,in0Con24920,in0Up_54102,in0Con81284,in0Con52196,in0Add15017,in1Add15017,in0Con46121],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Sub14467.png')

LMax50134 = maximum_layer([[[[0.1585, 0.5938]]], [[[0.6348, 0.8654]]]], Max50134), 
LRes6400 = reshape_layer(Max50134, [1, 2, 1], Res6400), 
LRes27273 = reshape_layer(Res6400, [1, 2, 1, 1], Res27273), 
LZer92739 = zero_padding3D_layer(Res27273, 2, 0, 1, 0, 1, 0, Zer92739), 
LCon24920 = concatenate_layer([Zer92739,[[[[[0.5375, 0.8151, 0.9741], [0.146, 0.2034, 0.5464]], [[0.7876, 0.8735, 0.8549], [0.2105, 0.8705, 0.0427]], [[0.687, 0.3455, 0.1406], [0.5389, 0.0193, 0.6575]]], [[[0.7356, 0.6632, 0.8838], [0.5048, 0.0191, 0.3247]], [[0.1408, 0.5781, 0.2319], [0.8212, 0.7796, 0.5105]], [[0.9795, 0.4378, 0.5737], [0.897, 0.2786, 0.4716]]], [[[0.0617, 0.4726, 0.1982], [0.7111, 0.9016, 0.0093]], [[0.2282, 0.8405, 0.0075], [0.8246, 0.3803, 0.7197]], [[0.52, 0.6654, 0.6878], [0.9976, 0.5825, 0.1291]]]]]], 4, Con24920), 
LUp_54102 = up_sampling2D_layer([[[[1.4752]]]], 1, 2, Up_54102), 
LRes66451 = reshape_layer(Up_54102, [1, 2, 1, 1], Res66451), 
LZer71764 = zero_padding3D_layer(Res66451, 2, 0, 1, 0, 1, 0, Zer71764), 
LCon81284 = concatenate_layer([Zer71764,[[[[[0.3594, 0.1382, 0.2756], [0.7545, 0.9514, 0.9578]], [[0.4627, 0.9792, 0.8623], [0.8204, 0.7121, 0.5604]], [[0.8984, 0.0862, 0.336], [0.6312, 0.7849, 0.7641]]], [[[0.3159, 0.3717, 0.6603], [0.2787, 0.013, 0.7138]], [[0.9049, 0.0746, 0.6935], [0.7877, 0.5178, 0.3717]], [[0.2944, 0.6715, 0.4037], [0.1654, 0.0768, 0.9825]]], [[[0.4793, 0.9994, 0.9446], [0.9903, 0.4719, 0.128]], [[0.2428, 0.2234, 0.6421], [0.4352, 0.7917, 0.9909]], [[0.4374, 0.8773, 0.7602], [0.8501, 0.2571, 0.2794]]]]]], 4, Con81284), 
LCon52196 = conv3D_transpose_layer([[[[[0.9274], [0.66]]], [[[0.8078], [0.6033]]]]], 2, 1, 1,[[[[[0.6642], [0.1417], [0.7547], [0.6491]]]], [[[[0.7334], [0.2274], [0.9733], [0.6516]]]]],[0, 0, 0, 0], 1, 1, 1, false, Con52196), 
LZer29639 = zero_padding3D_layer(Con52196, 0, 0, 2, 0, 0, 0, Zer29639), 
LSub3886 = subtract_layer(Con81284,Zer29639, Sub3886), 
LAdd15017 = add_layer([[[[[[0.9088, 0.6357], [0.4043, 0.932]], [[0.539, 0.3834], [0.0337, 0.6906]]]]], [[[[[0.9219, 0.524], [0.8437, 0.6514]], [[0.1027, 0.1424], [0.7677, 0.957]]]]]], Add15017), 
LZer61048 = zero_padding3D_layer(Add15017, 2, 0, 1, 0, 0, 0, Zer61048), 
LCon46121 = concatenate_layer([Zer61048,[[[[[0.4608, 0.1506], [0.7076, 0.988]], [[0.4669, 0.6054], [0.1881, 0.5902]], [[0.1253, 0.9939], [0.7692, 0.076]]], [[[0.8644, 0.8417], [0.5199, 0.6122]], [[0.0607, 0.161], [0.1004, 0.3529]], [[0.4434, 0.9175], [0.9086, 0.7166]]], [[[0.7762, 0.2276], [0.997, 0.6021]], [[0.5026, 0.5801], [0.2759, 0.297]], [[0.3679, 0.0193], [0.8, 0.552]]]]]], 4, Con46121), 
LMax67080 = maximum_layer([Sub3886,Con46121], Max67080), 
LSub14467 = subtract_layer(Con24920,Max67080, Sub14467), 
exec_layers([LMax50134,LRes6400,LRes27273,LZer92739,LCon24920,LUp_54102,LRes66451,LZer71764,LCon81284,LCon52196,LZer29639,LSub3886,LAdd15017,LZer61048,LCon46121,LMax67080,LSub14467],["Max50134","Res6400","Res27273","Zer92739","Con24920","Up_54102","Res66451","Zer71764","Con81284","Con52196","Zer29639","Sub3886","Add15017","Zer61048","Con46121","Max67080","Sub14467"],Sub14467,"Sub14467")

Actual (Unparsed): [[[[[0.0000000, 0.1781000, 0.3543000, 0.6985000], [0.0000000, -0.6085000, -0.7480000, -0.4416000]], [[0.0000000, 0.3249000, -0.1057000, -0.0074000], [0.0000000, -0.6099000, 0.1584000, -0.5475000]], [[0.0000000, -0.0799875, 0.2202000, -0.8533000], [0.0000000, 0.0012220, -0.7499000, 0.3218060]]], [[[0.0000000, 0.4197000, -0.2012000, 0.0421000], [0.0000000, 0.2261000, -0.5008000, -0.3891000]], [[0.0000000, -0.7641000, 0.5035000, -0.4616000], [0.0000000, 0.0335000, 0.2618001, 0.1388000]], [[0.0000000, 0.9795000, -0.0056000, -0.3438000], [0.0000000, 0.8970000, -0.6300000, -0.2450000]]], [[[0.0000000, -0.4176000, -0.5268000, -0.7464000], [0.0000000, -0.2792000, -0.0954000, -0.5928000]], [[-1.8307000, -0.9315000, 0.3379000, -0.6346000], [-0.8404000, -0.7588000, -0.4114000, -0.2712000]], [[-0.6417000, -0.0058000, 0.2975000, 0.4539624], [-0.1673398, -0.6500000, -0.2175000, -0.4229000]]]]]

Expected (Unparsed): [[[[[0,0.17809999999999998,0.35430000000000006,0.6984999999999999],[0,-0.6084999999999999,-0.748,-0.4416]],[[0,0.32489999999999997,-0.1056999999999999,-0.007399999999999962],[0,-0.6099,0.1584000000000001,-0.5475]],[[0,-0.07998741999999992,0.22019999999999998,-0.8533],[0,0.0012220000000000564,-0.7499,0.321806]]],[[[0,0.4197,-0.20119999999999993,0.042100000000000026],[0,0.22610000000000002,-0.5008,-0.3891]],[[0,-0.7641,0.5035,-0.4616],[0,0.033500000000000085,0.2617999999999999,0.13879999999999998]],[[0,0.9795,-0.005599999999999994,-0.3438],[0,0.897,-0.6299999999999999,-0.245]]],[[[0,-0.4176,-0.5267999999999999,-0.7464],[0,-0.2792,-0.09540000000000004,-0.5928]],[[-1.8307000000000002,-0.9315,0.3379,-0.6346],[-0.8404,-0.7588000000000001,-0.41139999999999993,-0.2712]],[[-0.6417,-0.005800000000000027,0.2975,0.45396247999999995],[-0.16733978000000005,-0.6499999999999999,-0.21750000000000003,-0.42290000000000005]]]]]

Actual:   [[[[[0, 0.1781, 0.3543, 0.6985], [0, -0.6085, -0.748, -0.4416]], [[0, 0.3249, -0.1057, -0.0074], [0, -0.6099, 0.1584, -0.5475]], [[0, -0.0799, 0.2202, -0.8533], [0, 0.0013, -0.7499, 0.3219]]], [[[0, 0.4197, -0.2012, 0.0421], [0, 0.2261, -0.5008, -0.3891]], [[0, -0.7641, 0.5035, -0.4616], [0, 0.0335, 0.2619, 0.1388]], [[0, 0.9795, -0.0056, -0.3438], [0, 0.897, -0.63, -0.245]]], [[[0, -0.4176, -0.5268, -0.7464], [0, -0.2792, -0.0954, -0.5928]], [[-1.8307, -0.9315, 0.3379, -0.6346], [-0.8404, -0.7588, -0.4114, -0.2712]], [[-0.6417, -0.0058, 0.2975, 0.454], [-0.1673, -0.65, -0.2175, -0.4229]]]]]

Expected: [[[[[0, 0.1781, 0.3544, 0.6985], [0, -0.6084, -0.748, -0.4416]], [[0, 0.3249, -0.1056, -0.0073], [0, -0.6099, 0.1585, -0.5475]], [[0, -0.0799, 0.2202, -0.8533], [0, 0.0013, -0.7499, 0.3219]]], [[[0, 0.4197, -0.2011, 0.0422], [0, 0.2262, -0.5008, -0.3891]], [[0, -0.7641, 0.5035, -0.4616], [0, 0.0336, 0.2618, 0.1388]], [[0, 0.9795, -0.0055, -0.3438], [0, 0.897, -0.6299, -0.245]]], [[[0, -0.4176, -0.5267, -0.7464], [0, -0.2792, -0.0954, -0.5928]], [[-1.8307, -0.9315, 0.3379, -0.6346], [-0.8404, -0.7588, -0.4113, -0.2712]], [[-0.6417, -0.0058, 0.2975, 0.454], [-0.1673, -0.6499, -0.2175, -0.4229]]]]]