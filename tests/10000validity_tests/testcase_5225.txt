import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Con96156 = tf.keras.layers.Input(shape=([1, 2, 2, 2]))
in0Thr69868 = tf.keras.layers.Input(shape=([2, 1]))

Con96156 = keras.layers.Conv3D(3, (1, 1, 1),strides=(1, 1, 1), padding='valid', dilation_rate=(1, 1, 1), name = 'Con96156', )(in0Con96156)
Res59020 = keras.layers.Reshape((1, 2, 6), name = 'Res59020', )(Con96156)
Res41162 = keras.layers.Reshape((1, 12), name = 'Res41162', )(Res59020)
LST68126 = keras.layers.LSTM(2,recurrent_activation='sigmoid', name = 'LST68126', )(Res41162)
Res76030 = keras.layers.Reshape((2, 1), name = 'Res76030', )(LST68126)
Thr69868 = keras.layers.ThresholdedReLU(theta=0.20385286349327317, name = 'Thr69868', input_shape=(2, 1))(in0Thr69868)
Min63397 = keras.layers.Minimum(name = 'Min63397', )([Res76030,Thr69868])
model = tf.keras.models.Model(inputs=[in0Con96156,in0Thr69868], outputs=Min63397)
w = model.get_layer('Con96156').get_weights() 
w[0] = np.array([[[[[0.9596, 0.6485, 0.915], [0.2782, 0.8773, 0.2797]]]]])
w[1] = np.array([0, 0, 0])
model.get_layer('Con96156').set_weights(w) 
w = model.get_layer('LST68126').get_weights() 
w[0] = np.array([[8, 8, 3, 9, 5, 8, 7, 1], [9, 4, 9, 8, 5, 8, 3, 5], [6, 9, 4, 3, 10, 1, 4, 3], [3, 1, 2, 6, 5, 3, 3, 9], [10, 3, 9, 2, 8, 8, 8, 8], [9, 7, 8, 6, 8, 4, 7, 3], [5, 7, 4, 4, 5, 2, 6, 9], [8, 7, 4, 5, 7, 1, 5, 10], [10, 2, 7, 5, 3, 2, 2, 9], [6, 2, 4, 1, 9, 4, 9, 4], [8, 7, 4, 7, 2, 5, 7, 5], [7, 4, 7, 5, 9, 8, 1, 4]])
w[1] = np.array([[7, 4, 2, 7, 1, 1, 1, 4], [3, 10, 9, 10, 10, 2, 1, 7]])
w[2] = np.array([10, 2, 10, 9, 8, 6, 10, 5])
model.get_layer('LST68126').set_weights(w) 
in0Con96156 = tf.constant([[[[[0.3524, 0.8988], [0.4165, 0.4482]], [[0.7461, 0.4014], [0.5463, 0.329]]]]])
in0Thr69868 = tf.constant([[[0.2708], [0.0603]]])
print (np.array2string(model.predict([in0Con96156,in0Thr69868],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Min63397.png')

LCon96156 = conv3D_layer([[[[[0.3524, 0.8988], [0.4165, 0.4482]], [[0.7461, 0.4014], [0.5463, 0.329]]]]], 1, 1, 1,[[[[[0.9596, 0.6485, 0.915], [0.2782, 0.8773, 0.2797]]]]],[0, 0, 0], 1, 1, 1, false, 1, 1, 1, Con96156), 
LRes59020 = reshape_layer(Con96156, [1, 2, 6], Res59020), 
LRes41162 = reshape_layer(Res59020, [1, 12], Res41162), 
LLST68126 = lstm_layer(Res41162,[[8, 8, 3, 9, 5, 8, 7, 1], [9, 4, 9, 8, 5, 8, 3, 5], [6, 9, 4, 3, 10, 1, 4, 3], [3, 1, 2, 6, 5, 3, 3, 9], [10, 3, 9, 2, 8, 8, 8, 8], [9, 7, 8, 6, 8, 4, 7, 3], [5, 7, 4, 4, 5, 2, 6, 9], [8, 7, 4, 5, 7, 1, 5, 10], [10, 2, 7, 5, 3, 2, 2, 9], [6, 2, 4, 1, 9, 4, 9, 4], [8, 7, 4, 7, 2, 5, 7, 5], [7, 4, 7, 5, 9, 8, 1, 4]],[[7, 4, 2, 7, 1, 1, 1, 4], [3, 10, 9, 10, 10, 2, 1, 7]],[10, 2, 10, 9, 8, 6, 10, 5], LST68126), 
LRes76030 = reshape_layer(LST68126, [2, 1], Res76030), 
LThr69868 = thresholded_relu_layer([[[0.2708], [0.0603]]], 0.20385286349327317, Thr69868), 
LMin63397 = minimum_layer([Res76030,Thr69868], Min63397), 
exec_layers([LCon96156,LRes59020,LRes41162,LLST68126,LRes76030,LThr69868,LMin63397],["Con96156","Res59020","Res41162","LST68126","Res76030","Thr69868","Min63397"],Min63397,"Min63397")

Actual (Unparsed): [[[0.2708000], [0.0000000]]]

Expected (Unparsed): [[[0.2708],[0]]]

Actual:   [[[0.2708], [0]]]

Expected: [[[0.2708], [0]]]