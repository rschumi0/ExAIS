import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Zer25158 = tf.keras.layers.Input(shape=([3, 2, 3]))

Zer25158 = keras.layers.ZeroPadding2D(padding=((1, 1), (1, 1)), name = 'Zer25158', )(in0Zer25158)
Lea60822 = keras.layers.LeakyReLU(alpha=0.47256486137065723, name = 'Lea60822', )(Zer25158)
Thr6574 = keras.layers.ThresholdedReLU(theta=3.1498590331862344, name = 'Thr6574', )(Lea60822)
model = tf.keras.models.Model(inputs=[in0Zer25158], outputs=Thr6574)
in0Zer25158 = tf.constant([[[[1.9279, 1.8545, 1.6189], [1.2475, 1.8471, 1.5741]], [[1.761, 1.7305, 1.5415], [1.762, 1.1502, 1.1929]], [[1.4468, 1.3382, 1.0323], [1.5577, 1.8214, 1.6671]]]])
print (np.array2string(model.predict([in0Zer25158],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Thr6574.png')

LZer25158 = zero_padding2D_layer([[[[1.9279, 1.8545, 1.6189], [1.2475, 1.8471, 1.5741]], [[1.761, 1.7305, 1.5415], [1.762, 1.1502, 1.1929]], [[1.4468, 1.3382, 1.0323], [1.5577, 1.8214, 1.6671]]]], 1, 1, 1, 1, Zer25158), 
LLea60822 = leaky_relu_layer(Zer25158, 0.47256486137065723, Lea60822), 
LThr6574 = thresholded_relu_layer(Lea60822, 3.1498590331862344, Thr6574), 
exec_layers([LZer25158,LLea60822,LThr6574],["Zer25158","Lea60822","Thr6574"],Thr6574,"Thr6574")

Actual (Unparsed): [[[[0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000]], [[0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000]], [[0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000]], [[0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000]], [[0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000]]]]

Expected (Unparsed): [[[[0,0,0],[0,0,0],[0,0,0],[0,0,0]],[[0,0,0],[0,0,0],[0,0,0],[0,0,0]],[[0,0,0],[0,0,0],[0,0,0],[0,0,0]],[[0,0,0],[0,0,0],[0,0,0],[0,0,0]],[[0,0,0],[0,0,0],[0,0,0],[0,0,0]]]]

Actual:   [[[[0, 0, 0], [0, 0, 0], [0, 0, 0], [0, 0, 0]], [[0, 0, 0], [0, 0, 0], [0, 0, 0], [0, 0, 0]], [[0, 0, 0], [0, 0, 0], [0, 0, 0], [0, 0, 0]], [[0, 0, 0], [0, 0, 0], [0, 0, 0], [0, 0, 0]], [[0, 0, 0], [0, 0, 0], [0, 0, 0], [0, 0, 0]]]]

Expected: [[[[0, 0, 0], [0, 0, 0], [0, 0, 0], [0, 0, 0]], [[0, 0, 0], [0, 0, 0], [0, 0, 0], [0, 0, 0]], [[0, 0, 0], [0, 0, 0], [0, 0, 0], [0, 0, 0]], [[0, 0, 0], [0, 0, 0], [0, 0, 0], [0, 0, 0]], [[0, 0, 0], [0, 0, 0], [0, 0, 0], [0, 0, 0]]]]