import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Dot20633 = tf.keras.layers.Input(shape=([2]))
in1Dot20633 = tf.keras.layers.Input(shape=([2]))
in0Con81892 = tf.keras.layers.Input(shape=([1, 2, 1]))
in0Ave82066 = tf.keras.layers.Input(shape=([1, 2, 2]))
in1Ave82066 = tf.keras.layers.Input(shape=([1, 2, 2]))
in0Con21068 = tf.keras.layers.Input(shape=([3, 4, 4, 3]))
in0Zer89536 = tf.keras.layers.Input(shape=([1, 2, 2, 4]))

Dot20633 = keras.layers.Dot(axes=(1, 1), name = 'Dot20633', )([in0Dot20633,in1Dot20633])
Res3594 = keras.layers.Reshape((1, 1), name = 'Res3594', )(Dot20633)
Res47277 = keras.layers.Reshape((1, 1, 1), name = 'Res47277', )(Res3594)
Zer59900 = keras.layers.ZeroPadding2D(padding=((0, 0), (1, 0)), name = 'Zer59900', )(Res47277)
Con81892 = keras.layers.Concatenate(axis=3, name = 'Con81892', )([Zer59900,in0Con81892])
Ave82066 = keras.layers.Average(name = 'Ave82066', )([in0Ave82066,in1Ave82066])
Min16363 = keras.layers.Minimum(name = 'Min16363', )([Con81892,Ave82066])
Res97707 = keras.layers.Reshape((1, 2, 2, 1), name = 'Res97707', )(Min16363)
Zer22026 = keras.layers.ZeroPadding3D(padding=((2, 0), (2, 0), (2, 0)), name = 'Zer22026', )(Res97707)
Con21068 = keras.layers.Concatenate(axis=4, name = 'Con21068', )([Zer22026,in0Con21068])
Zer89536 = keras.layers.ZeroPadding3D(padding=((1, 1), (1, 1), (1, 1)), name = 'Zer89536', )(in0Zer89536)
Ave24075 = keras.layers.Average(name = 'Ave24075', )([Con21068,Zer89536])
model = tf.keras.models.Model(inputs=[in0Dot20633,in1Dot20633,in0Con81892,in0Ave82066,in1Ave82066,in0Con21068,in0Zer89536], outputs=Ave24075)
in0Dot20633 = tf.constant([[0.9555, 0.7754]])
in1Dot20633 = tf.constant([[0.1114, 0.0573]])
in0Con81892 = tf.constant([[[[0.1914], [0.4372]]]])
in0Ave82066 = tf.constant([[[[0.9579, 0.0632], [0.2866, 0.8363]]]])
in1Ave82066 = tf.constant([[[[0.1076, 0.2373], [0.0912, 0.2853]]]])
in0Con21068 = tf.constant([[[[[0.8279, 0.2145, 0.2325], [0.8992, 0.6231, 0.6929], [0.8452, 0.4291, 0.9274], [0.5198, 0.8929, 0.7074]], [[0.2912, 0.249, 0.719], [0.2359, 0.9356, 0.8134], [0.8382, 0.4457, 0.4102], [0.0781, 0.0178, 0.1233]], [[0.0094, 0.9309, 0.2216], [0.6087, 0.6547, 0.3261], [0.5293, 0.1406, 0.1428], [0.8086, 0.2307, 0.346]], [[0.8908, 0.4342, 0.9112], [0.2825, 0.5648, 0.679], [0.4967, 0.627, 0.2721], [0.8809, 0.9043, 0.5767]]], [[[0.3153, 0.9941, 0.1594], [0.7765, 0.8606, 0.9528], [0.5797, 0.1228, 0.2561], [0.7388, 0.9062, 0.6027]], [[0.1516, 0.3268, 0.0605], [0.4278, 0.0166, 0.0415], [0.5505, 0.5909, 0.131], [0.5007, 0.4107, 0.6385]], [[0.6327, 0.2452, 0.9656], [0.8851, 0.745, 0.356], [0.6318, 0.5162, 0.8792], [0.8472, 0.4418, 0.0309]], [[0.9096, 0.3897, 0.9586], [0.2523, 0.5515, 0.9677], [0.7819, 0.7015, 0.4399], [0.3985, 0.8962, 0.4733]]], [[[0.1997, 0.259, 0.7021], [0.8795, 0.5283, 0.6513], [0.6887, 0.0307, 0.0697], [0.4134, 0.3541, 0.2184]], [[0.6488, 0.8362, 0.1622], [0.4263, 0.2548, 0.6815], [0.0363, 0.5544, 0.0189], [0.3145, 0.132, 0.9671]], [[0.3109, 0.0599, 0.4079], [0.7935, 0.9959, 0.4704], [0.8164, 0.0015, 0.8414], [0.0598, 0.7754, 0.644]], [[0.0369, 0.1879, 0.9491], [0.8304, 0.8031, 0.2154], [0.2656, 0.9195, 0.1025], [0.7433, 0.5298, 0.144]]]]])
in0Zer89536 = tf.constant([[[[[1.6608, 1.8828, 1.7231, 1.6629], [1.831, 1.2893, 1.4763, 1.1601]], [[1.6913, 1.632, 1.5477, 1.0491], [1.8798, 1.7127, 1.3682, 1.5701]]]]])
print (np.array2string(model.predict([in0Dot20633,in1Dot20633,in0Con81892,in0Ave82066,in1Ave82066,in0Con21068,in0Zer89536],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Ave24075.png')

LDot20633 = dot_layer([[0.9555, 0.7754]], [[0.1114, 0.0573]], 1, 1, Dot20633), 
LRes3594 = reshape_layer(Dot20633, [1, 1], Res3594), 
LRes47277 = reshape_layer(Res3594, [1, 1, 1], Res47277), 
LZer59900 = zero_padding2D_layer(Res47277, 0, 0, 1, 0, Zer59900), 
LCon81892 = concatenate_layer([Zer59900,[[[[0.1914], [0.4372]]]]], 3, Con81892), 
LAve82066 = average_layer([[[[[0.9579, 0.0632], [0.2866, 0.8363]]]], [[[[0.1076, 0.2373], [0.0912, 0.2853]]]]], Ave82066), 
LMin16363 = minimum_layer([Con81892,Ave82066], Min16363), 
LRes97707 = reshape_layer(Min16363, [1, 2, 2, 1], Res97707), 
LZer22026 = zero_padding3D_layer(Res97707, 2, 0, 2, 0, 2, 0, Zer22026), 
LCon21068 = concatenate_layer([Zer22026,[[[[[0.8279, 0.2145, 0.2325], [0.8992, 0.6231, 0.6929], [0.8452, 0.4291, 0.9274], [0.5198, 0.8929, 0.7074]], [[0.2912, 0.249, 0.719], [0.2359, 0.9356, 0.8134], [0.8382, 0.4457, 0.4102], [0.0781, 0.0178, 0.1233]], [[0.0094, 0.9309, 0.2216], [0.6087, 0.6547, 0.3261], [0.5293, 0.1406, 0.1428], [0.8086, 0.2307, 0.346]], [[0.8908, 0.4342, 0.9112], [0.2825, 0.5648, 0.679], [0.4967, 0.627, 0.2721], [0.8809, 0.9043, 0.5767]]], [[[0.3153, 0.9941, 0.1594], [0.7765, 0.8606, 0.9528], [0.5797, 0.1228, 0.2561], [0.7388, 0.9062, 0.6027]], [[0.1516, 0.3268, 0.0605], [0.4278, 0.0166, 0.0415], [0.5505, 0.5909, 0.131], [0.5007, 0.4107, 0.6385]], [[0.6327, 0.2452, 0.9656], [0.8851, 0.745, 0.356], [0.6318, 0.5162, 0.8792], [0.8472, 0.4418, 0.0309]], [[0.9096, 0.3897, 0.9586], [0.2523, 0.5515, 0.9677], [0.7819, 0.7015, 0.4399], [0.3985, 0.8962, 0.4733]]], [[[0.1997, 0.259, 0.7021], [0.8795, 0.5283, 0.6513], [0.6887, 0.0307, 0.0697], [0.4134, 0.3541, 0.2184]], [[0.6488, 0.8362, 0.1622], [0.4263, 0.2548, 0.6815], [0.0363, 0.5544, 0.0189], [0.3145, 0.132, 0.9671]], [[0.3109, 0.0599, 0.4079], [0.7935, 0.9959, 0.4704], [0.8164, 0.0015, 0.8414], [0.0598, 0.7754, 0.644]], [[0.0369, 0.1879, 0.9491], [0.8304, 0.8031, 0.2154], [0.2656, 0.9195, 0.1025], [0.7433, 0.5298, 0.144]]]]]], 4, Con21068), 
LZer89536 = zero_padding3D_layer([[[[[1.6608, 1.8828, 1.7231, 1.6629], [1.831, 1.2893, 1.4763, 1.1601]], [[1.6913, 1.632, 1.5477, 1.0491], [1.8798, 1.7127, 1.3682, 1.5701]]]]], 1, 1, 1, 1, 1, 1, Zer89536), 
LAve24075 = average_layer([Con21068,Zer89536], Ave24075), 
exec_layers([LDot20633,LRes3594,LRes47277,LZer59900,LCon81892,LAve82066,LMin16363,LRes97707,LZer22026,LCon21068,LZer89536,LAve24075],["Dot20633","Res3594","Res47277","Zer59900","Con81892","Ave82066","Min16363","Res97707","Zer22026","Con21068","Zer89536","Ave24075"],Ave24075,"Ave24075")

Actual (Unparsed): [[[[[0.0000000, 0.4139500, 0.1072500, 0.1162500], [0.0000000, 0.4496000, 0.3115500, 0.3464500], [0.0000000, 0.4226000, 0.2145500, 0.4637000], [0.0000000, 0.2599000, 0.4464500, 0.3537000]], [[0.0000000, 0.1456000, 0.1245000, 0.3595000], [0.0000000, 0.1179500, 0.4678000, 0.4067000], [0.0000000, 0.4191000, 0.2228500, 0.2051000], [0.0000000, 0.0390500, 0.0089000, 0.0616500]], [[0.0000000, 0.0047000, 0.4654500, 0.1108000], [0.0000000, 0.3043500, 0.3273500, 0.1630500], [0.0000000, 0.2646500, 0.0703000, 0.0714000], [0.0000000, 0.4043000, 0.1153500, 0.1730000]], [[0.0000000, 0.4454000, 0.2171000, 0.4556000], [0.0000000, 0.1412500, 0.2824000, 0.3395000], [0.0000000, 0.2483500, 0.3135000, 0.1360500], [0.0000000, 0.4404500, 0.4521500, 0.2883500]]], [[[0.0000000, 0.1576500, 0.4970500, 0.0797000], [0.0000000, 0.3882500, 0.4303000, 0.4764000], [0.0000000, 0.2898500, 0.0614000, 0.1280500], [0.0000000, 0.3694000, 0.4531000, 0.3013500]], [[0.0000000, 0.0758000, 0.1634000, 0.0302500], [0.8304000, 1.1553000, 0.8698500, 0.8522000], [0.9155000, 0.9199000, 1.0336000, 0.6455500], [0.0000000, 0.2503500, 0.2053500, 0.3192500]], [[0.0000000, 0.3163500, 0.1226000, 0.4828000], [0.8456500, 1.2585500, 1.1463500, 0.7025500], [0.9399000, 1.1722500, 0.9422000, 1.2246500], [0.0000000, 0.4236000, 0.2209000, 0.0154500]], [[0.0000000, 0.4548000, 0.1948500, 0.4793000], [0.0000000, 0.1261500, 0.2757500, 0.4838500], [0.0000000, 0.3909500, 0.3507500, 0.2199500], [0.0000000, 0.1992500, 0.4481000, 0.2366500]]], [[[0.0000000, 0.0998500, 0.1295000, 0.3510500], [0.0000000, 0.4397500, 0.2641500, 0.3256500], [0.0000000, 0.3443500, 0.0153500, 0.0348500], [0.0000000, 0.2067000, 0.1770500, 0.1092000]], [[0.0000000, 0.3244000, 0.4181000, 0.0811000], [0.0000000, 0.2131500, 0.1274000, 0.3407500], [0.0000000, 0.0181500, 0.2772000, 0.0094500], [0.0000000, 0.1572500, 0.0660000, 0.4835500]], [[0.0000000, 0.1554500, 0.0299500, 0.2039500], [0.0000000, 0.3967500, 0.4979500, 0.2352000], [0.0000000, 0.4082000, 0.0007500, 0.4207000], [0.0751250, 0.0299000, 0.3877000, 0.3220000]], [[0.0000000, 0.0184500, 0.0939500, 0.4745500], [0.0000000, 0.4152000, 0.4015500, 0.1077000], [0.0754366, 0.1328000, 0.4597500, 0.0512500], [0.2186000, 0.3716500, 0.2649000, 0.0720000]]]]]

Expected (Unparsed): [[[[[0,0.41395,0.10725,0.11625],[0,0.4496,0.31155,0.34645],[0,0.4226,0.21455,0.4637],[0,0.2599,0.44645,0.3537]],[[0,0.1456,0.1245,0.3595],[0,0.11795,0.4678,0.4067],[0,0.4191,0.22285,0.2051],[0,0.03905,0.0089,0.06165]],[[0,0.0047,0.46545,0.1108],[0,0.30435,0.32735,0.16305],[0,0.26465,0.0703,0.0714],[0,0.4043,0.11535,0.173]],[[0,0.4454,0.2171,0.4556],[0,0.14125,0.2824,0.3395],[0,0.24835,0.3135,0.13605],[0,0.44045,0.45215,0.28835]]],[[[0,0.15765,0.49705,0.0797],[0,0.38825,0.4303,0.4764],[0,0.28985,0.0614,0.12805],[0,0.3694,0.4531,0.30135]],[[0,0.0758,0.1634,0.03025],[0.8304,1.1553,0.86985,0.8522000000000001],[0.9155,0.9198999999999999,1.0335999999999999,0.64555],[0,0.25035,0.20535,0.31925]],[[0,0.31635,0.1226,0.4828],[0.84565,1.25855,1.14635,0.70255],[0.9399,1.17225,0.9422,1.22465],[0,0.4236,0.2209,0.01545]],[[0,0.4548,0.19485,0.4793],[0,0.12615,0.27575,0.48385],[0,0.39095,0.35075,0.21995],[0,0.19925,0.4481,0.23665]]],[[[0,0.09985,0.1295,0.35105],[0,0.43975,0.26415,0.32565],[0,0.34435,0.01535,0.03485],[0,0.2067,0.17705,0.1092]],[[0,0.3244,0.4181,0.0811],[0,0.21315,0.1274,0.34075],[0,0.01815,0.2772,0.00945],[0,0.15725,0.066,0.48355]],[[0,0.15545,0.02995,0.20395],[0,0.39675,0.49795,0.2352],[0,0.4082,0.00075,0.4207],[0.075125,0.0299,0.3877,0.322]],[[0,0.01845,0.09395,0.47455],[0,0.4152,0.40155,0.1077],[0.07543656,0.1328,0.45975,0.05125],[0.2186,0.37165,0.2649,0.072]]]]]

Actual:   [[[[[0, 0.414, 0.1073, 0.1163], [0, 0.4496, 0.3116, 0.3465], [0, 0.4226, 0.2146, 0.4637], [0, 0.2599, 0.4465, 0.3537]], [[0, 0.1456, 0.1245, 0.3595], [0, 0.118, 0.4678, 0.4067], [0, 0.4191, 0.2229, 0.2051], [0, 0.0391, 0.0089, 0.0617]], [[0, 0.0047, 0.4655, 0.1108], [0, 0.3044, 0.3274, 0.1631], [0, 0.2647, 0.0703, 0.0714], [0, 0.4043, 0.1154, 0.173]], [[0, 0.4454, 0.2171, 0.4556], [0, 0.1413, 0.2824, 0.3395], [0, 0.2484, 0.3135, 0.1361], [0, 0.4405, 0.4522, 0.2884]]], [[[0, 0.1577, 0.4971, 0.0797], [0, 0.3883, 0.4303, 0.4764], [0, 0.2899, 0.0614, 0.1281], [0, 0.3694, 0.4531, 0.3014]], [[0, 0.0758, 0.1634, 0.0303], [0.8304, 1.1553, 0.8699, 0.8522], [0.9155, 0.9199, 1.0336, 0.6456], [0, 0.2504, 0.2054, 0.3193]], [[0, 0.3164, 0.1226, 0.4828], [0.8457, 1.2586, 1.1464, 0.7026], [0.9399, 1.1723, 0.9422, 1.2247], [0, 0.4236, 0.2209, 0.0155]], [[0, 0.4548, 0.1949, 0.4793], [0, 0.1262, 0.2758, 0.4839], [0, 0.391, 0.3508, 0.22], [0, 0.1993, 0.4481, 0.2367]]], [[[0, 0.0999, 0.1295, 0.3511], [0, 0.4398, 0.2642, 0.3257], [0, 0.3444, 0.0154, 0.0349], [0, 0.2067, 0.1771, 0.1092]], [[0, 0.3244, 0.4181, 0.0811], [0, 0.2132, 0.1274, 0.3408], [0, 0.0182, 0.2772, 0.0095], [0, 0.1573, 0.066, 0.4836]], [[0, 0.1555, 0.03, 0.204], [0, 0.3968, 0.498, 0.2352], [0, 0.4082, 0.0008, 0.4207], [0.0752, 0.0299, 0.3877, 0.322]], [[0, 0.0185, 0.094, 0.4746], [0, 0.4152, 0.4016, 0.1077], [0.0755, 0.1328, 0.4598, 0.0513], [0.2186, 0.3717, 0.2649, 0.072]]]]]

Expected: [[[[[0, 0.414, 0.1073, 0.1163], [0, 0.4496, 0.3116, 0.3465], [0, 0.4226, 0.2146, 0.4637], [0, 0.2599, 0.4465, 0.3537]], [[0, 0.1456, 0.1245, 0.3595], [0, 0.118, 0.4678, 0.4067], [0, 0.4191, 0.2229, 0.2051], [0, 0.0391, 0.0089, 0.0617]], [[0, 0.0047, 0.4655, 0.1108], [0, 0.3044, 0.3274, 0.1631], [0, 0.2647, 0.0703, 0.0714], [0, 0.4043, 0.1154, 0.173]], [[0, 0.4454, 0.2171, 0.4556], [0, 0.1413, 0.2824, 0.3395], [0, 0.2484, 0.3135, 0.1361], [0, 0.4405, 0.4522, 0.2884]]], [[[0, 0.1577, 0.4971, 0.0797], [0, 0.3883, 0.4303, 0.4764], [0, 0.2899, 0.0614, 0.1281], [0, 0.3694, 0.4531, 0.3014]], [[0, 0.0758, 0.1634, 0.0303], [0.8304, 1.1553, 0.8699, 0.8523], [0.9155, 0.9199, 1.0336, 0.6456], [0, 0.2504, 0.2054, 0.3193]], [[0, 0.3164, 0.1226, 0.4828], [0.8457, 1.2586, 1.1464, 0.7026], [0.9399, 1.1723, 0.9422, 1.2247], [0, 0.4236, 0.2209, 0.0155]], [[0, 0.4548, 0.1949, 0.4793], [0, 0.1262, 0.2758, 0.4839], [0, 0.391, 0.3508, 0.22], [0, 0.1993, 0.4481, 0.2367]]], [[[0, 0.0999, 0.1295, 0.3511], [0, 0.4398, 0.2642, 0.3257], [0, 0.3444, 0.0154, 0.0349], [0, 0.2067, 0.1771, 0.1092]], [[0, 0.3244, 0.4181, 0.0811], [0, 0.2132, 0.1274, 0.3408], [0, 0.0182, 0.2772, 0.0095], [0, 0.1573, 0.066, 0.4836]], [[0, 0.1555, 0.03, 0.204], [0, 0.3968, 0.498, 0.2352], [0, 0.4082, 0.0008, 0.4207], [0.0752, 0.0299, 0.3877, 0.322]], [[0, 0.0185, 0.094, 0.4746], [0, 0.4152, 0.4016, 0.1077], [0.0755, 0.1328, 0.4598, 0.0513], [0.2186, 0.3717, 0.2649, 0.072]]]]]