import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Lay44803 = tf.keras.layers.Input(shape=([1, 3]))
in0Con97148 = tf.keras.layers.Input(shape=([1, 3, 1, 3]))
in0Con79309 = tf.keras.layers.Input(shape=([1, 2, 1, 2]))

Lay44803 = keras.layers.LayerNormalization(axis=1, epsilon=1.2138407876692696, name = 'Lay44803', )(in0Lay44803)
Res96142 = keras.layers.Reshape((1, 3, 1), name = 'Res96142', )(Lay44803)
Res91008 = keras.layers.Reshape((1, 3, 1, 1), name = 'Res91008', )(Res96142)
Con97148 = keras.layers.Concatenate(axis=4, name = 'Con97148', )([Res91008,in0Con97148])
Con79309 = keras.layers.Conv3D(4, (1, 1, 1),strides=(1, 1, 9), padding='valid', dilation_rate=(1, 1, 1), name = 'Con79309', )(in0Con79309)
Thr100 = keras.layers.ThresholdedReLU(theta=3.384556549983085, name = 'Thr100', )(Con79309)
Zer41273 = keras.layers.ZeroPadding3D(padding=((0, 0), (1, 0), (0, 0)), name = 'Zer41273', )(Thr100)
Ave42463 = keras.layers.Average(name = 'Ave42463', )([Con97148,Zer41273])
model = tf.keras.models.Model(inputs=[in0Lay44803,in0Con97148,in0Con79309], outputs=Ave42463)
w = model.get_layer('Con79309').get_weights() 
w[0] = np.array([[[[[0.8287, 0.5109, 0.9398, 0.2484], [0.4522, 0.2325, 0.6421, 0.7456]]]]])
w[1] = np.array([0, 0, 0, 0])
model.get_layer('Con79309').set_weights(w) 
in0Lay44803 = tf.constant([[[1.3542, 1.0815, 1.8872]]])
in0Con97148 = tf.constant([[[[[0.7729, 0.5287, 0.4409]], [[0.2526, 0.8193, 0.6712]], [[0.8045, 0.9725, 0.1192]]]]])
in0Con79309 = tf.constant([[[[[0.6361, 0.955]], [[0.3195, 0.4659]]]]])
print (np.array2string(model.predict([in0Lay44803,in0Con97148,in0Con79309],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Ave42463.png')

LLay44803 = layer_normalization_layer([[[1.3542, 1.0815, 1.8872]]], 1, 1.2138407876692696, Lay44803), 
LRes96142 = reshape_layer(Lay44803, [1, 3, 1], Res96142), 
LRes91008 = reshape_layer(Res96142, [1, 3, 1, 1], Res91008), 
LCon97148 = concatenate_layer([Res91008,[[[[[0.7729, 0.5287, 0.4409]], [[0.2526, 0.8193, 0.6712]], [[0.8045, 0.9725, 0.1192]]]]]], 4, Con97148), 
LCon79309 = conv3D_layer([[[[[0.6361, 0.955]], [[0.3195, 0.4659]]]]], 1, 1, 1,[[[[[0.8287, 0.5109, 0.9398, 0.2484], [0.4522, 0.2325, 0.6421, 0.7456]]]]],[0, 0, 0, 0], 1, 1, 9, false, 1, 1, 1, Con79309), 
LThr100 = thresholded_relu_layer(Con79309, 3.384556549983085, Thr100), 
LZer41273 = zero_padding3D_layer(Thr100, 0, 0, 1, 0, 0, 0, Zer41273), 
LAve42463 = average_layer([Con97148,Zer41273], Ave42463), 
exec_layers([LLay44803,LRes96142,LRes91008,LCon97148,LCon79309,LThr100,LZer41273,LAve42463],["Lay44803","Res96142","Res91008","Con97148","Con79309","Thr100","Zer41273","Ave42463"],Ave42463,"Ave42463")

Actual (Unparsed): [[[[[0.0000000, 0.3864500, 0.2643500, 0.2204500]], [[0.0000000, 0.1263000, 0.4096500, 0.3356000]], [[0.0000000, 0.4022500, 0.4862500, 0.0596000]]]]]

Expected (Unparsed): [[[[[0.0,0.38645,0.26435,0.22045]],[[0.0,0.1263,0.40965,0.3356]],[[0.0,0.40225,0.48625,0.0596]]]]]

Actual:   [[[[[0, 0.3865, 0.2644, 0.2205]], [[0, 0.1263, 0.4097, 0.3356]], [[0, 0.4023, 0.4863, 0.0596]]]]]

Expected: [[[[[0, 0.3865, 0.2644, 0.2205]], [[0, 0.1263, 0.4097, 0.3356]], [[0, 0.4023, 0.4863, 0.0596]]]]]