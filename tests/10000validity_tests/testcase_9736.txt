import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Ave3340 = tf.keras.layers.Input(shape=([2, 2, 1]))
in1Ave3340 = tf.keras.layers.Input(shape=([2, 2, 1]))

Ave3340 = keras.layers.Average(name = 'Ave3340', )([in0Ave3340,in1Ave3340])
ELU30085 = keras.layers.ELU(alpha=5.890341820359314, name = 'ELU30085', )(Ave3340)
Bat78981 = keras.layers.BatchNormalization(axis=2, epsilon=0.855037945055082,  name = 'Bat78981', )(ELU30085)
model = tf.keras.models.Model(inputs=[in0Ave3340,in1Ave3340], outputs=Bat78981)
w = model.get_layer('Bat78981').get_weights() 
w[0] = np.array([0.4739, 0.4053])
w[1] = np.array([0.8157, 0.8839])
w[2] = np.array([0.3256, 0.456])
w[3] = np.array([0.4567, 0.9785])
model.get_layer('Bat78981').set_weights(w) 
in0Ave3340 = tf.constant([[[[0.2088], [0.0998]], [[0.8833], [0.9877]]]])
in1Ave3340 = tf.constant([[[[0.7691], [0.5555]], [[0.7221], [0.3714]]]])
print (np.array2string(model.predict([in0Ave3340,in1Ave3340],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Bat78981.png')

LAve3340 = average_layer([[[[[0.2088], [0.0998]], [[0.8833], [0.9877]]]], [[[[0.7691], [0.5555]], [[0.7221], [0.3714]]]]], Ave3340), 
LELU30085 = elu_layer(Ave3340, 5.890341820359314, ELU30085), 
LBat78981 = batch_normalization_layer(ELU30085, 2, 0.855037945055082, [0.4739, 0.4053], [0.8157, 0.8839], [0.3256, 0.456], [0.4567, 0.9785], Bat78981), 
exec_layers([LAve3340,LELU30085,LBat78981],["Ave3340","ELU30085","Bat78981"],Bat78981,"Bat78981")

Actual (Unparsed): [[[[0.8832900], [0.8454826]], [[1.0131116], [0.9508124]]]]

Expected (Unparsed): [[[[0.8832899782455312],[0.8454826392572806]],[[1.013111561805589],[0.9508123567902993]]]]

Actual:   [[[[0.8833], [0.8455]], [[1.0132], [0.9509]]]]

Expected: [[[[0.8833], [0.8455]], [[1.0132], [0.9509]]]]