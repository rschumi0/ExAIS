import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Mul63480 = tf.keras.layers.Input(shape=([1, 2]))
in1Mul63480 = tf.keras.layers.Input(shape=([1, 2]))
in0Max49721 = tf.keras.layers.Input(shape=([2, 2, 2]))
in1Max49721 = tf.keras.layers.Input(shape=([2, 2, 2]))
in0Con1352 = tf.keras.layers.Input(shape=([2, 1]))

Mul63480 = keras.layers.Multiply(name = 'Mul63480', )([in0Mul63480,in1Mul63480])
Sep2137 = keras.layers.SeparableConv1D(4, (1),strides=(1), padding='valid', name = 'Sep2137', )(Mul63480)
Zer74272 = keras.layers.ZeroPadding1D(padding=((1, 0)), name = 'Zer74272', )(Sep2137)
Max49721 = keras.layers.Maximum(name = 'Max49721', )([in0Max49721,in1Max49721])
Res66339 = keras.layers.Reshape((2, 4), name = 'Res66339', )(Max49721)
Loc75202 = keras.layers.LocallyConnected1D(3, (1),strides=(1), name = 'Loc75202', )(Res66339)
Con1352 = keras.layers.Concatenate(axis=2, name = 'Con1352', )([Loc75202,in0Con1352])
Min66051 = keras.layers.Minimum(name = 'Min66051', )([Zer74272,Con1352])
model = tf.keras.models.Model(inputs=[in0Mul63480,in1Mul63480,in0Max49721,in1Max49721,in0Con1352], outputs=Min66051)
w = model.get_layer('Sep2137').get_weights() 
w[0] = np.array([[[0.8382], [0.9803]]])
w[1] = np.array([[[0.3976, 0.3348, 0.2925, 0.9795], [0.2371, 0.7742, 0.0898, 0.3643]]])
w[2] = np.array([0, 0, 0, 0])
model.get_layer('Sep2137').set_weights(w) 
w = model.get_layer('Loc75202').get_weights() 
w[0] = np.array([[[0.5013, 0.9046, 0.1274], [0.18, 0.9855, 0.0896], [0.3833, 0.6516, 0.3771], [0.4038, 0.1244, 0.512]], [[0.8751, 0.4867, 0.6271], [0.5065, 0.5557, 0.4527], [0.4658, 0.6215, 0.5446], [0.6732, 0.527, 0.8623]]])
w[1] = np.array([[0, 0, 0], [0, 0, 0]])
model.get_layer('Loc75202').set_weights(w) 
in0Mul63480 = tf.constant([[[0.7165, 0.1681]]])
in1Mul63480 = tf.constant([[[0.7226, 0.0743]]])
in0Max49721 = tf.constant([[[[0.1984, 0.761], [0.3518, 0.4313]], [[0.3817, 0.2739], [0.2991, 0.9496]]]])
in1Max49721 = tf.constant([[[[0.5428, 0.9398], [0.9902, 0.3553]], [[0.084, 0.5571], [0.4841, 0.1958]]]])
in0Con1352 = tf.constant([[[0.0512], [0.1699]]])
print (np.array2string(model.predict([in0Mul63480,in1Mul63480,in0Max49721,in1Max49721,in0Con1352],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Min66051.png')

LMul63480 = multiply_layer([[[[0.7165, 0.1681]]], [[[0.7226, 0.0743]]]], Mul63480), 
LSep2137 = separable_conv1D_layer(Mul63480, 1,[[[[0.8382], [0.9803]]],[[[0.3976, 0.3348, 0.2925, 0.9795], [0.2371, 0.7742, 0.0898, 0.3643]]]],[0, 0, 0, 0], 1, false, Sep2137), 
LZer74272 = zero_padding1D_layer(Sep2137, 1, 0, Zer74272), 
LMax49721 = maximum_layer([[[[[0.1984, 0.761], [0.3518, 0.4313]], [[0.3817, 0.2739], [0.2991, 0.9496]]]], [[[[0.5428, 0.9398], [0.9902, 0.3553]], [[0.084, 0.5571], [0.4841, 0.1958]]]]], Max49721), 
LRes66339 = reshape_layer(Max49721, [2, 4], Res66339), 
LLoc75202 = locally_connected1D_layer(Res66339, 1,[[[0.5013, 0.9046, 0.1274], [0.18, 0.9855, 0.0896], [0.3833, 0.6516, 0.3771], [0.4038, 0.1244, 0.512]], [[0.8751, 0.4867, 0.6271], [0.5065, 0.5557, 0.4527], [0.4658, 0.6215, 0.5446], [0.6732, 0.527, 0.8623]]],[[0, 0, 0], [0, 0, 0]], 1, Loc75202), 
LCon1352 = concatenate_layer([Loc75202,[[[0.0512], [0.1699]]]], 2, Con1352), 
LMin66051 = minimum_layer([Zer74272,Con1352], Min66051), 
exec_layers([LMul63480,LSep2137,LZer74272,LMax49721,LRes66339,LLoc75202,LCon1352,LMin66051],["Mul63480","Sep2137","Zer74272","Max49721","Res66339","Loc75202","Con1352","Min66051"],Min66051,"Min66051")

Actual (Unparsed): [[[0.0000000, 0.0000000, 0.0000000, 0.0000000], [0.1754503, 0.1547730, 0.1280363, 0.1699000]]]

Expected (Unparsed): [[[0,0,0,0],[0.1754503067956759,0.15477299341773978,0.1280363303684902,0.1699]]]

Actual:   [[[0, 0, 0, 0], [0.1755, 0.1548, 0.1281, 0.1699]]]

Expected: [[[0, 0, 0, 0], [0.1755, 0.1548, 0.1281, 0.1699]]]