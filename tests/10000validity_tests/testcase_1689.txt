import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Add90822 = tf.keras.layers.Input(shape=([1, 2, 1]))
in1Add90822 = tf.keras.layers.Input(shape=([1, 2, 1]))

Add90822 = keras.layers.Add(name = 'Add90822', )([in0Add90822,in1Add90822])
Res26244 = keras.layers.Reshape((1, 2), name = 'Res26244', )(Add90822)
Sim88400 = keras.layers.SimpleRNN(3,name = 'Sim88400', )(Res26244)
Res61261 = keras.layers.Reshape((3, 1), name = 'Res61261', )(Sim88400)
Zer21305 = keras.layers.ZeroPadding1D(padding=((1, 1)), name = 'Zer21305', )(Res61261)
model = tf.keras.models.Model(inputs=[in0Add90822,in1Add90822], outputs=Zer21305)
w = model.get_layer('Sim88400').get_weights() 
w[0] = np.array([[4, 10, 3], [1, 2, 10]])
w[1] = np.array([[1, 10, 3], [8, 6, 3], [3, 6, 3]])
w[2] = np.array([4, 2, 6])
model.get_layer('Sim88400').set_weights(w) 
in0Add90822 = tf.constant([[[[0.0769], [0.0683]]]])
in1Add90822 = tf.constant([[[[0.1537], [0.9781]]]])
print (np.array2string(model.predict([in0Add90822,in1Add90822],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Zer21305.png')

LAdd90822 = add_layer([[[[[0.0769], [0.0683]]]], [[[[0.1537], [0.9781]]]]], Add90822), 
LRes26244 = reshape_layer(Add90822, [1, 2], Res26244), 
LSim88400 = simple_rnn_layer(Res26244,[[4, 10, 3], [1, 2, 10]],[[1, 10, 3], [8, 6, 3], [3, 6, 3]],[4, 2, 6], Sim88400), 
LRes61261 = reshape_layer(Sim88400, [3, 1], Res61261), 
LZer21305 = zero_padding1D_layer(Res61261, 1, 1, Zer21305), 
exec_layers([LAdd90822,LRes26244,LSim88400,LRes61261,LZer21305],["Add90822","Res26244","Sim88400","Res61261","Zer21305"],Zer21305,"Zer21305")

Actual (Unparsed): [[[0.0000000], [0.9999869], [0.9999945], [1.0000000], [0.0000000]]]

Expected (Unparsed): [[[0],[0.9999869204335596],[0.9999944652025499],[0.9999999999999974],[0]]]

Actual:   [[[0], [1], [1], [1], [0]]]

Expected: [[[0], [1], [1], [1], [0]]]