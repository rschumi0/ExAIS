import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Sub43908 = tf.keras.layers.Input(shape=([3, 3, 3, 2]))
in1Sub43908 = tf.keras.layers.Input(shape=([3, 3, 3, 2]))

Sub43908 = keras.layers.Subtract(name = 'Sub43908', )([in0Sub43908,in1Sub43908])
Res45630 = keras.layers.Reshape((3, 3, 6), name = 'Res45630', )(Sub43908)
Dep27371 = keras.layers.DepthwiseConv2D((2, 1),strides=(3, 3), padding='same', name = 'Dep27371', )(Res45630)
Glo16650 = keras.layers.GlobalMaxPool2D(name = 'Glo16650', )(Dep27371)
ReL34075 = keras.layers.ReLU(max_value=0.9033768170469196, negative_slope=7.568750857036418, threshold=8.658237682011068, name = 'ReL34075', )(Glo16650)
model = tf.keras.models.Model(inputs=[in0Sub43908,in1Sub43908], outputs=ReL34075)
w = model.get_layer('Dep27371').get_weights() 
w[0] = np.array([[[[0.9319], [0.223], [0.5593], [0.8793], [0.6211], [0.2107]]], [[[0.3412], [0.3715], [0.2093], [0.1218], [0.6957], [0.0113]]]])
w[1] = np.array([0, 0, 0, 0, 0, 0])
model.get_layer('Dep27371').set_weights(w) 
in0Sub43908 = tf.constant([[[[[0.6819, 0.7721], [0.7928, 0.7456], [0.1429, 0.6602]], [[0.0922, 0.939], [0.0926, 0.448], [0.1043, 0.0161]], [[0.1815, 0.4743], [0.4135, 0.9194], [0.3208, 0.1966]]], [[[0.6454, 0.8985], [0.4766, 0.1293], [0.643, 0.2]], [[0.9132, 0.5798], [0.5193, 0.322], [0.882, 0.7338]], [[0.8259, 0.9081], [0.4644, 0.4815], [0.8612, 0.4049]]], [[[0.3861, 0.8733], [0.8364, 0.8004], [0.1462, 0.2465]], [[0.2152, 0.1244], [0.7267, 0.8769], [0.0463, 0.8968]], [[0.4837, 0.4703], [0.5229, 0.3874], [0.5598, 0.9347]]]]])
in1Sub43908 = tf.constant([[[[[0.3166, 0.3675], [0.3032, 0.6514], [0.4597, 0.0211]], [[0.7307, 0.8967], [0.6772, 0.819], [0.0284, 0.1585]], [[0.1095, 0.4521], [0.4514, 0.8371], [0.3051, 0.3725]]], [[[0.7501, 0.2243], [0.2142, 0.0953], [0.4319, 0.7149]], [[0.6675, 0.1793], [0.7455, 0.9183], [0.4869, 0.7203]], [[0.2688, 0.7125], [0.9403, 0.2691], [0.3729, 0.3095]]], [[[0.728, 0.3162], [0.64, 0.0859], [0.0677, 0.8732]], [[0.5175, 0.274], [0.7305, 0.2237], [0.1079, 0.6059]], [[0.0739, 0.62], [0.0135, 0.6542], [0.2148, 0.5537]]]]])
print (np.array2string(model.predict([in0Sub43908,in1Sub43908],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='ReL34075.png')

LSub43908 = subtract_layer([[[[[0.6819, 0.7721], [0.7928, 0.7456], [0.1429, 0.6602]], [[0.0922, 0.939], [0.0926, 0.448], [0.1043, 0.0161]], [[0.1815, 0.4743], [0.4135, 0.9194], [0.3208, 0.1966]]], [[[0.6454, 0.8985], [0.4766, 0.1293], [0.643, 0.2]], [[0.9132, 0.5798], [0.5193, 0.322], [0.882, 0.7338]], [[0.8259, 0.9081], [0.4644, 0.4815], [0.8612, 0.4049]]], [[[0.3861, 0.8733], [0.8364, 0.8004], [0.1462, 0.2465]], [[0.2152, 0.1244], [0.7267, 0.8769], [0.0463, 0.8968]], [[0.4837, 0.4703], [0.5229, 0.3874], [0.5598, 0.9347]]]]], [[[[[0.3166, 0.3675], [0.3032, 0.6514], [0.4597, 0.0211]], [[0.7307, 0.8967], [0.6772, 0.819], [0.0284, 0.1585]], [[0.1095, 0.4521], [0.4514, 0.8371], [0.3051, 0.3725]]], [[[0.7501, 0.2243], [0.2142, 0.0953], [0.4319, 0.7149]], [[0.6675, 0.1793], [0.7455, 0.9183], [0.4869, 0.7203]], [[0.2688, 0.7125], [0.9403, 0.2691], [0.3729, 0.3095]]], [[[0.728, 0.3162], [0.64, 0.0859], [0.0677, 0.8732]], [[0.5175, 0.274], [0.7305, 0.2237], [0.1079, 0.6059]], [[0.0739, 0.62], [0.0135, 0.6542], [0.2148, 0.5537]]]]], Sub43908), 
LRes45630 = reshape_layer(Sub43908, [3, 3, 6], Res45630), 
LDep27371 = depthwise_conv2D_layer(Res45630, 2, 1,[[[[0.9319], [0.223], [0.5593], [0.8793], [0.6211], [0.2107]]], [[[0.3412], [0.3715], [0.2093], [0.1218], [0.6957], [0.0113]]]],[0, 0, 0, 0, 0, 0], 3, 3, true, Dep27371), 
LGlo16650 = global_max_pool2D_layer(Dep27371, Glo16650), 
LReL34075 = relu_layer(Glo16650, 0.9033768170469196, 7.568750857036418, 8.658237682011068, ReL34075), 
exec_layers([LSub43908,LRes45630,LDep27371,LGlo16650,LReL34075],["Sub43908","Res45630","Dep27371","Glo16650","ReL34075"],ReL34075,"ReL34075")

Actual (Unparsed): [[-63.2258497, -62.9534378, -63.0437898, -64.8737804, -65.9097411, -64.5568860]]

Expected (Unparsed): [[-63.22584980419527,-62.953437821036594,-63.043789784392466,-64.87378007748374,-65.90974127085178,-64.55688601572571]]

Actual:   [[-63.2258, -62.9534, -63.0437, -64.8737, -65.9097, -64.5568]]

Expected: [[-63.2258, -62.9534, -63.0437, -64.8737, -65.9097, -64.5568]]