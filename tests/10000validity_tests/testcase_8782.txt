import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Min39217 = tf.keras.layers.Input(shape=([1, 1]))
in1Min39217 = tf.keras.layers.Input(shape=([1, 1]))

Min39217 = keras.layers.Minimum(name = 'Min39217', )([in0Min39217,in1Min39217])
Res77201 = keras.layers.Reshape((1, 1, 1), name = 'Res77201', )(Min39217)
Loc55282 = keras.layers.LocallyConnected2D(4, (1, 1),strides=(1, 1), name = 'Loc55282', )(Res77201)
model = tf.keras.models.Model(inputs=[in0Min39217,in1Min39217], outputs=Loc55282)
w = model.get_layer('Loc55282').get_weights() 
w[0] = np.array([[[0.0367, 0.8734, 0.0606, 0.2467]]])
w[1] = np.array([[[0, 0, 0, 0]]])
model.get_layer('Loc55282').set_weights(w) 
in0Min39217 = tf.constant([[[0.7084]]])
in1Min39217 = tf.constant([[[0.1657]]])
print (np.array2string(model.predict([in0Min39217,in1Min39217],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Loc55282.png')

LMin39217 = minimum_layer([[[[0.7084]]], [[[0.1657]]]], Min39217), 
LRes77201 = reshape_layer(Min39217, [1, 1, 1], Res77201), 
LLoc55282 = locally_connected2D_layer(Res77201, 1, 1,[[[0.0367, 0.8734, 0.0606, 0.2467]]],[[[0, 0, 0, 0]]], 1, 1, Loc55282), 
exec_layers([LMin39217,LRes77201,LLoc55282],["Min39217","Res77201","Loc55282"],Loc55282,"Loc55282")

Actual (Unparsed): [[[[0.0060812, 0.1447224, 0.0100414, 0.0408782]]]]

Expected (Unparsed): [[[[0.00608119,0.14472237999999998,0.010041419999999999,0.040878189999999995]]]]

Actual:   [[[[0.0061, 0.1448, 0.0101, 0.0409]]]]

Expected: [[[[0.0061, 0.1448, 0.0101, 0.0409]]]]