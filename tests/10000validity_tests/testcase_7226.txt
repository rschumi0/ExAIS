import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Ave19691 = tf.keras.layers.Input(shape=([2, 1]))
in1Ave19691 = tf.keras.layers.Input(shape=([2, 1]))
in0Con82734 = tf.keras.layers.Input(shape=([2, 3, 2]))
in0Sub98513 = tf.keras.layers.Input(shape=([2, 2, 3]))
in1Sub98513 = tf.keras.layers.Input(shape=([2, 2, 3]))

Ave19691 = keras.layers.Average(name = 'Ave19691', )([in0Ave19691,in1Ave19691])
Res70845 = keras.layers.Reshape((2, 1, 1), name = 'Res70845', )(Ave19691)
Zer58899 = keras.layers.ZeroPadding2D(padding=((0, 0), (2, 0)), name = 'Zer58899', )(Res70845)
Con82734 = keras.layers.Concatenate(axis=3, name = 'Con82734', )([Zer58899,in0Con82734])
Sub98513 = keras.layers.Subtract(name = 'Sub98513', )([in0Sub98513,in1Sub98513])
Loc74354 = keras.layers.LocallyConnected2D(3, (2, 1),strides=(1, 1), name = 'Loc74354', )(Sub98513)
Zer87399 = keras.layers.ZeroPadding2D(padding=((1, 0), (1, 0)), name = 'Zer87399', )(Loc74354)
Max60650 = keras.layers.Maximum(name = 'Max60650', )([Con82734,Zer87399])
Res84843 = keras.layers.Reshape((2, 9), name = 'Res84843', )(Max60650)
Loc78325 = keras.layers.LocallyConnected1D(4, (1),strides=(1), name = 'Loc78325', )(Res84843)
model = tf.keras.models.Model(inputs=[in0Ave19691,in1Ave19691,in0Con82734,in0Sub98513,in1Sub98513], outputs=Loc78325)
w = model.get_layer('Loc74354').get_weights() 
w[0] = np.array([[[0.932, 0.5672, 0.6811], [0.9254, 0.0665, 0.8759], [0.1809, 0.764, 0.7131], [0.6534, 0.2377, 0.8888], [0.8261, 0.3294, 0.2772], [0.5762, 0.1635, 0.7257]], [[0.5385, 0.6414, 0.2494], [0.1033, 0.2932, 0.4642], [0.8824, 0.1773, 0.9577], [0.1594, 0.8002, 0.8865], [0.4034, 0.1933, 0.0417], [0.3375, 0.4099, 0.207]]])
w[1] = np.array([[[0, 0, 0], [0, 0, 0]]])
model.get_layer('Loc74354').set_weights(w) 
w = model.get_layer('Loc78325').get_weights() 
w[0] = np.array([[[0.0446, 0.7738, 0.8148, 0.4436], [0.6265, 0.5454, 0.6815, 0.5246], [0.8915, 0.5239, 0.7439, 0.3177], [0.7336, 0.1036, 0.125, 0.0648], [0.3893, 0.4349, 0.4458, 0.8527], [0.0122, 0.5813, 0.0965, 0.3112], [0.3004, 0.6701, 0.9544, 0.7524], [0.6875, 0.2696, 0.3097, 0.7416], [0.527, 0.2159, 0.1348, 0.6559]], [[0.7738, 0.5064, 0.8602, 0.2622], [0.9, 0.6814, 0.5045, 0.7236], [0.167, 0.3201, 0.3482, 0.7334], [0.9235, 0.8936, 0.3349, 0.6628], [0.2955, 0.2382, 0.0416, 0.7122], [0.4936, 0.3375, 0.3644, 0.0581], [0.9742, 0.9356, 0.0354, 0.8984], [0.8608, 0.7442, 0.7065, 0.1188], [0.3559, 0.649, 0.6155, 0.0238]]])
w[1] = np.array([[0, 0, 0, 0], [0, 0, 0, 0]])
model.get_layer('Loc78325').set_weights(w) 
in0Ave19691 = tf.constant([[[0.0581], [0.3153]]])
in1Ave19691 = tf.constant([[[0.7632], [0.9933]]])
in0Con82734 = tf.constant([[[[0.2147, 0.5795], [0.1019, 0.6877], [0.003, 0.6567]], [[0.1769, 0.443], [0.4646, 0.991], [0.8322, 0.9227]]]])
in0Sub98513 = tf.constant([[[[0.7266, 0.1951, 0.056], [0.1278, 0.7743, 0.4692]], [[0.9073, 0.3393, 0.0222], [0.7238, 0.8485, 0.5029]]]])
in1Sub98513 = tf.constant([[[[0.5127, 0.8036, 0.7819], [0.619, 0.3225, 0.7806]], [[0.6656, 0.8572, 0.4007], [0.1857, 0.1906, 0.4652]]]])
print (np.array2string(model.predict([in0Ave19691,in1Ave19691,in0Con82734,in0Sub98513,in1Sub98513],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Loc78325.png')

LAve19691 = average_layer([[[[0.0581], [0.3153]]], [[[0.7632], [0.9933]]]], Ave19691), 
LRes70845 = reshape_layer(Ave19691, [2, 1, 1], Res70845), 
LZer58899 = zero_padding2D_layer(Res70845, 0, 0, 2, 0, Zer58899), 
LCon82734 = concatenate_layer([Zer58899,[[[[0.2147, 0.5795], [0.1019, 0.6877], [0.003, 0.6567]], [[0.1769, 0.443], [0.4646, 0.991], [0.8322, 0.9227]]]]], 3, Con82734), 
LSub98513 = subtract_layer([[[[0.7266, 0.1951, 0.056], [0.1278, 0.7743, 0.4692]], [[0.9073, 0.3393, 0.0222], [0.7238, 0.8485, 0.5029]]]], [[[[0.5127, 0.8036, 0.7819], [0.619, 0.3225, 0.7806]], [[0.6656, 0.8572, 0.4007], [0.1857, 0.1906, 0.4652]]]], Sub98513), 
LLoc74354 = locally_connected2D_layer(Sub98513, 2, 1,[[[0.932, 0.5672, 0.6811], [0.9254, 0.0665, 0.8759], [0.1809, 0.764, 0.7131], [0.6534, 0.2377, 0.8888], [0.8261, 0.3294, 0.2772], [0.5762, 0.1635, 0.7257]], [[0.5385, 0.6414, 0.2494], [0.1033, 0.2932, 0.4642], [0.8824, 0.1773, 0.9577], [0.1594, 0.8002, 0.8865], [0.4034, 0.1933, 0.0417], [0.3375, 0.4099, 0.207]]],[[[0, 0, 0], [0, 0, 0]]], 1, 1, Loc74354), 
LZer87399 = zero_padding2D_layer(Loc74354, 1, 0, 1, 0, Zer87399), 
LMax60650 = maximum_layer([Con82734,Zer87399], Max60650), 
LRes84843 = reshape_layer(Max60650, [2, 9], Res84843), 
LLoc78325 = locally_connected1D_layer(Res84843, 1,[[[0.0446, 0.7738, 0.8148, 0.4436], [0.6265, 0.5454, 0.6815, 0.5246], [0.8915, 0.5239, 0.7439, 0.3177], [0.7336, 0.1036, 0.125, 0.0648], [0.3893, 0.4349, 0.4458, 0.8527], [0.0122, 0.5813, 0.0965, 0.3112], [0.3004, 0.6701, 0.9544, 0.7524], [0.6875, 0.2696, 0.3097, 0.7416], [0.527, 0.2159, 0.1348, 0.6559]], [[0.7738, 0.5064, 0.8602, 0.2622], [0.9, 0.6814, 0.5045, 0.7236], [0.167, 0.3201, 0.3482, 0.7334], [0.9235, 0.8936, 0.3349, 0.6628], [0.2955, 0.2382, 0.0416, 0.7122], [0.4936, 0.3375, 0.3644, 0.0581], [0.9742, 0.9356, 0.0354, 0.8984], [0.8608, 0.7442, 0.7065, 0.1188], [0.3559, 0.649, 0.6155, 0.0238]]],[[0, 0, 0, 0], [0, 0, 0, 0]], 1, Loc78325), 
exec_layers([LAve19691,LRes70845,LZer58899,LCon82734,LSub98513,LLoc74354,LZer87399,LMax60650,LRes84843,LLoc78325],["Ave19691","Res70845","Zer58899","Con82734","Sub98513","Loc74354","Zer87399","Max60650","Res84843","Loc78325"],Loc78325,"Loc78325")

Actual (Unparsed): [[[1.1706961, 1.2825406, 1.1705748, 1.3395685], [2.5418036, 2.5377928, 1.8029798, 1.5500150]]]

Expected (Unparsed): [[[1.17069607,1.282540645,1.17057479,1.33956853],[2.5418036500000003,2.5377928,1.80297978,1.550015]]]

Actual:   [[[1.1707, 1.2826, 1.1706, 1.3396], [2.5419, 2.5378, 1.803, 1.5501]]]

Expected: [[[1.1707, 1.2826, 1.1706, 1.3396], [2.5419, 2.5378, 1.803, 1.5501]]]