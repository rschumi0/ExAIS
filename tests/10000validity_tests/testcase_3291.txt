import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Up_17612 = tf.keras.layers.Input(shape=([3, 3, 1]))

Up_17612 = keras.layers.UpSampling2D(size=(1, 2), name = 'Up_17612', )(in0Up_17612)
Lay47271 = keras.layers.LayerNormalization(axis=2, epsilon=1.0436724687302414, name = 'Lay47271', )(Up_17612)
Res45869 = keras.layers.Reshape((3, 6), name = 'Res45869', )(Lay47271)
Glo55005 = keras.layers.GlobalAveragePooling1D(name = 'Glo55005', )(Res45869)
model = tf.keras.models.Model(inputs=[in0Up_17612], outputs=Glo55005)
in0Up_17612 = tf.constant([[[[1.1921], [1.1535], [1.5275]], [[1.7791], [1.8731], [1.3296]], [[1.8833], [1.0919], [1.7025]]]])
print (np.array2string(model.predict([in0Up_17612],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Glo55005.png')

LUp_17612 = up_sampling2D_layer([[[[1.1921], [1.1535], [1.5275]], [[1.7791], [1.8731], [1.3296]], [[1.8833], [1.0919], [1.7025]]]], 1, 2, Up_17612), 
LLay47271 = layer_normalization_layer(Up_17612, 2, 1.0436724687302414, Lay47271), 
LRes45869 = reshape_layer(Lay47271, [3, 6], Res45869), 
LGlo55005 = global_average_pooling1D_layer(Res45869, Glo55005), 
exec_layers([LUp_17612,LLay47271,LRes45869,LGlo55005],["Up_17612","Lay47271","Res45869","Glo55005"],Glo55005,"Glo55005")

Actual (Unparsed): [[0.1061790, 0.1061790, -0.1214822, -0.1214822, 0.0153033, 0.0153033]]

Expected (Unparsed): [[0.10617896865896409,0.10617896865896409,-0.12148225321179817,-0.12148225321179817,0.015303284552834279,0.015303284552834279]]

Actual:   [[0.1062, 0.1062, -0.1214, -0.1214, 0.0154, 0.0154]]

Expected: [[0.1062, 0.1062, -0.1214, -0.1214, 0.0154, 0.0154]]