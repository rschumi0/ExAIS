import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Min69746 = tf.keras.layers.Input(shape=([2, 2]))
in1Min69746 = tf.keras.layers.Input(shape=([2, 2]))
in0Con3906 = tf.keras.layers.Input(shape=([2, 2, 2, 1]))
in0Mul28692 = tf.keras.layers.Input(shape=([2, 2, 2, 2]))
in1Mul28692 = tf.keras.layers.Input(shape=([2, 2, 2, 2]))
in0Sub61349 = tf.keras.layers.Input(shape=([3, 2, 3]))
in1Sub61349 = tf.keras.layers.Input(shape=([3, 2, 3]))
in0Con50287 = tf.keras.layers.Input(shape=([1, 2]))
in0Sub9584 = tf.keras.layers.Input(shape=([3, 3]))
in1Sub9584 = tf.keras.layers.Input(shape=([3, 3]))
in0Con82497 = tf.keras.layers.Input(shape=([2, 2, 2, 1]))

Min69746 = keras.layers.Minimum(name = 'Min69746', )([in0Min69746,in1Min69746])
Res33456 = keras.layers.Reshape((2, 2, 1), name = 'Res33456', )(Min69746)
Res15132 = keras.layers.Reshape((2, 2, 1, 1), name = 'Res15132', )(Res33456)
Zer52236 = keras.layers.ZeroPadding3D(padding=((0, 0), (0, 0), (1, 0)), name = 'Zer52236', )(Res15132)
Con3906 = keras.layers.Concatenate(axis=4, name = 'Con3906', )([Zer52236,in0Con3906])
Mul28692 = keras.layers.Multiply(name = 'Mul28692', )([in0Mul28692,in1Mul28692])
Max23977 = keras.layers.Maximum(name = 'Max23977', )([Con3906,Mul28692])
Lea57558 = keras.layers.LeakyReLU(alpha=4.076544900087805, name = 'Lea57558', )(Max23977)
Sub61349 = keras.layers.Subtract(name = 'Sub61349', )([in0Sub61349,in1Sub61349])
Res68740 = keras.layers.Reshape((3, 2, 3, 1), name = 'Res68740', )(Sub61349)
Glo8753 = keras.layers.GlobalAveragePooling3D(name = 'Glo8753', )(Res68740)
Res675 = keras.layers.Reshape((1, 1), name = 'Res675', )(Glo8753)
Con50287 = keras.layers.Concatenate(axis=2, name = 'Con50287', )([Res675,in0Con50287])
Sub9584 = keras.layers.Subtract(name = 'Sub9584', )([in0Sub9584,in1Sub9584])
Dot18387 = keras.layers.Dot(axes=(2, 2), name = 'Dot18387', )([Con50287,Sub9584])
Res52249 = keras.layers.Reshape((1, 3, 1), name = 'Res52249', )(Dot18387)
Res79867 = keras.layers.Reshape((1, 3, 1, 1), name = 'Res79867', )(Res52249)
Cro22151 = keras.layers.Cropping3D(cropping=((0, 0), (0, 1), (0, 0)), name = 'Cro22151', )(Res79867)
Zer5364 = keras.layers.ZeroPadding3D(padding=((1, 0), (0, 0), (1, 0)), name = 'Zer5364', )(Cro22151)
Con82497 = keras.layers.Concatenate(axis=4, name = 'Con82497', )([Zer5364,in0Con82497])
Min65129 = keras.layers.Minimum(name = 'Min65129', )([Lea57558,Con82497])
model = tf.keras.models.Model(inputs=[in0Min69746,in1Min69746,in0Con3906,in0Mul28692,in1Mul28692,in0Sub61349,in1Sub61349,in0Con50287,in0Sub9584,in1Sub9584,in0Con82497], outputs=Min65129)
in0Min69746 = tf.constant([[[0.0232, 0.3478], [0.4289, 0.2196]]])
in1Min69746 = tf.constant([[[0.8675, 0.0952], [0.5868, 0.4594]]])
in0Con3906 = tf.constant([[[[[0.6571], [0.0183]], [[0.0185], [0.0469]]], [[[0.9135], [0.9032]], [[0.2954], [0.8692]]]]])
in0Mul28692 = tf.constant([[[[[0.3038, 0.3335], [0.0249, 0.0323]], [[0.1097, 0.733], [0.6569, 0.3929]]], [[[0.5902, 0.9276], [0.0128, 0.3308]], [[0.1692, 0.5426], [0.0183, 0.5981]]]]])
in1Mul28692 = tf.constant([[[[[0.1957, 0.6498], [0.3796, 0.395]], [[0.5149, 0.7569], [0.3805, 0.1896]]], [[[0.8746, 0.9993], [0.5638, 0.6794]], [[0.2965, 0.5495], [0.4616, 0.3115]]]]])
in0Sub61349 = tf.constant([[[[0.1255, 0.3829, 0.2737], [0.6687, 0.5916, 0.4473]], [[0.1441, 0.2041, 0.3661], [0.9726, 0.4819, 0.2581]], [[0.7751, 0.1251, 0.5912], [0.0304, 0.0461, 0.4633]]]])
in1Sub61349 = tf.constant([[[[0.7266, 0.1917, 0.2046], [0.6831, 0.5777, 0.1231]], [[0.0146, 0.9558, 0.0974], [0.3449, 0.661, 0.7532]], [[0.5384, 0.5613, 0.7079], [0.436, 0.5362, 0.8857]]]])
in0Con50287 = tf.constant([[[0.7191, 0.3494]]])
in0Sub9584 = tf.constant([[[0.2383, 0.0316, 0.09], [0.2373, 0.9754, 0.5735], [0.3297, 0.6, 0.6216]]])
in1Sub9584 = tf.constant([[[0.0869, 0.0282, 0.8245], [0.6083, 0.8127, 0.925], [0.9165, 0.9463, 0.5391]]])
in0Con82497 = tf.constant([[[[[0.0191], [0.3533]], [[0.4815], [0.12]]], [[[0.5095], [0.1362]], [[0.9676], [0.3977]]]]])
print (np.array2string(model.predict([in0Min69746,in1Min69746,in0Con3906,in0Mul28692,in1Mul28692,in0Sub61349,in1Sub61349,in0Con50287,in0Sub9584,in1Sub9584,in0Con82497],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Min65129.png')

LMin69746 = minimum_layer([[[[0.0232, 0.3478], [0.4289, 0.2196]]], [[[0.8675, 0.0952], [0.5868, 0.4594]]]], Min69746), 
LRes33456 = reshape_layer(Min69746, [2, 2, 1], Res33456), 
LRes15132 = reshape_layer(Res33456, [2, 2, 1, 1], Res15132), 
LZer52236 = zero_padding3D_layer(Res15132, 0, 0, 0, 0, 1, 0, Zer52236), 
LCon3906 = concatenate_layer([Zer52236,[[[[[0.6571], [0.0183]], [[0.0185], [0.0469]]], [[[0.9135], [0.9032]], [[0.2954], [0.8692]]]]]], 4, Con3906), 
LMul28692 = multiply_layer([[[[[[0.3038, 0.3335], [0.0249, 0.0323]], [[0.1097, 0.733], [0.6569, 0.3929]]], [[[0.5902, 0.9276], [0.0128, 0.3308]], [[0.1692, 0.5426], [0.0183, 0.5981]]]]], [[[[[0.1957, 0.6498], [0.3796, 0.395]], [[0.5149, 0.7569], [0.3805, 0.1896]]], [[[0.8746, 0.9993], [0.5638, 0.6794]], [[0.2965, 0.5495], [0.4616, 0.3115]]]]]], Mul28692), 
LMax23977 = maximum_layer([Con3906,Mul28692], Max23977), 
LLea57558 = leaky_relu_layer(Max23977, 4.076544900087805, Lea57558), 
LSub61349 = subtract_layer([[[[0.1255, 0.3829, 0.2737], [0.6687, 0.5916, 0.4473]], [[0.1441, 0.2041, 0.3661], [0.9726, 0.4819, 0.2581]], [[0.7751, 0.1251, 0.5912], [0.0304, 0.0461, 0.4633]]]], [[[[0.7266, 0.1917, 0.2046], [0.6831, 0.5777, 0.1231]], [[0.0146, 0.9558, 0.0974], [0.3449, 0.661, 0.7532]], [[0.5384, 0.5613, 0.7079], [0.436, 0.5362, 0.8857]]]], Sub61349), 
LRes68740 = reshape_layer(Sub61349, [3, 2, 3, 1], Res68740), 
LGlo8753 = global_average_pooling3D_layer(Res68740, Glo8753), 
LRes675 = reshape_layer(Glo8753, [1, 1], Res675), 
LCon50287 = concatenate_layer([Res675,[[[0.7191, 0.3494]]]], 2, Con50287), 
LSub9584 = subtract_layer([[[0.2383, 0.0316, 0.09], [0.2373, 0.9754, 0.5735], [0.3297, 0.6, 0.6216]]], [[[0.0869, 0.0282, 0.8245], [0.6083, 0.8127, 0.925], [0.9165, 0.9463, 0.5391]]], Sub9584), 
LDot18387 = dot_layer(Con50287,Sub9584, 2, 2, Dot18387), 
LRes52249 = reshape_layer(Dot18387, [1, 3, 1], Res52249), 
LRes79867 = reshape_layer(Res52249, [1, 3, 1, 1], Res79867), 
LCro22151 = cropping3D_layer(Res79867, 0, 0, 0, 1, 0, 0, Cro22151), 
LZer5364 = zero_padding3D_layer(Cro22151, 1, 0, 0, 0, 1, 0, Zer5364), 
LCon82497 = concatenate_layer([Zer5364,[[[[[0.0191], [0.3533]], [[0.4815], [0.12]]], [[[0.5095], [0.1362]], [[0.9676], [0.3977]]]]]], 4, Con82497), 
LMin65129 = minimum_layer([Lea57558,Con82497], Min65129), 
exec_layers([LMin69746,LRes33456,LRes15132,LZer52236,LCon3906,LMul28692,LMax23977,LLea57558,LSub61349,LRes68740,LGlo8753,LRes675,LCon50287,LSub9584,LDot18387,LRes52249,LRes79867,LCro22151,LZer5364,LCon82497,LMin65129],["Min69746","Res33456","Res15132","Zer52236","Con3906","Mul28692","Max23977","Lea57558","Sub61349","Res68740","Glo8753","Res675","Con50287","Sub9584","Dot18387","Res52249","Res79867","Cro22151","Zer5364","Con82497","Min65129"],Min65129,"Min65129")

Actual (Unparsed): [[[[[0.0000000, 0.0191000], [0.0000000, 0.0183000]], [[0.0000000, 0.4815000], [0.0000000, 0.0744938]]], [[[0.0000000, 0.5095000], [-0.2714439, 0.1362000]], [[0.0000000, 0.2981587], [0.0364651, 0.3977000]]]]]

Expected (Unparsed): [[[[[0,0.0191],[0,0.0183]],[[0,0.4815],[0,0.07449384]]],[[[0,0.5095],[-0.2714439133333333,0.1362]],[[0,0.2981587],[0.03646510333333336,0.3977]]]]]

Actual:   [[[[[0, 0.0191], [0, 0.0183]], [[0, 0.4815], [0, 0.0745]]], [[[0, 0.5095], [-0.2714, 0.1362]], [[0, 0.2982], [0.0365, 0.3977]]]]]

Expected: [[[[[0, 0.0191], [0, 0.0183]], [[0, 0.4815], [0, 0.0745]]], [[[0, 0.5095], [-0.2714, 0.1362]], [[0, 0.2982], [0.0365, 0.3977]]]]]