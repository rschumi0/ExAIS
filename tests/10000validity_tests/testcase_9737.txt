import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Add82138 = tf.keras.layers.Input(shape=([2, 1, 1]))
in1Add82138 = tf.keras.layers.Input(shape=([2, 1, 1]))
in0Sub61592 = tf.keras.layers.Input(shape=([2, 3]))
in1Sub61592 = tf.keras.layers.Input(shape=([2, 3]))
in0Ave30353 = tf.keras.layers.Input(shape=([2, 2, 2, 1]))
in1Ave30353 = tf.keras.layers.Input(shape=([2, 2, 2, 1]))
in0Con21361 = tf.keras.layers.Input(shape=([2, 3, 3, 3]))

Add82138 = keras.layers.Add(name = 'Add82138', )([in0Add82138,in1Add82138])
Res92497 = keras.layers.Reshape((2, 1), name = 'Res92497', )(Add82138)
Per74157 = keras.layers.Permute((2,1), name = 'Per74157',)(Res92497)
Res18479 = keras.layers.Reshape((1, 2, 1), name = 'Res18479', )(Per74157)
Res85242 = keras.layers.Reshape((1, 2, 1, 1), name = 'Res85242', )(Res18479)
Up_34699 = keras.layers.UpSampling3D(size=(1, 1, 1), name = 'Up_34699', )(Res85242)
Con82071 = keras.layers.Conv3D(4, (1, 2, 1),strides=(1, 11, 5), padding='same', dilation_rate=(1, 1, 1), name = 'Con82071', )(Up_34699)
Zer51556 = keras.layers.ZeroPadding3D(padding=((1, 0), (2, 0), (2, 0)), name = 'Zer51556', )(Con82071)
Sub61592 = keras.layers.Subtract(name = 'Sub61592', )([in0Sub61592,in1Sub61592])
Res95670 = keras.layers.Reshape((2, 3, 1), name = 'Res95670', )(Sub61592)
Res11189 = keras.layers.Reshape((2, 3, 1, 1), name = 'Res11189', )(Res95670)
Zer62899 = keras.layers.ZeroPadding3D(padding=((0, 0), (0, 0), (2, 0)), name = 'Zer62899', )(Res11189)
Ave30353 = keras.layers.Average(name = 'Ave30353', )([in0Ave30353,in1Ave30353])
Zer21533 = keras.layers.ZeroPadding3D(padding=((0, 0), (1, 0), (1, 0)), name = 'Zer21533', )(Ave30353)
Add86907 = keras.layers.Add(name = 'Add86907', )([Zer62899,Zer21533])
Con21361 = keras.layers.Concatenate(axis=4, name = 'Con21361', )([Add86907,in0Con21361])
Sub81211 = keras.layers.Subtract(name = 'Sub81211', )([Zer51556,Con21361])
model = tf.keras.models.Model(inputs=[in0Add82138,in1Add82138,in0Sub61592,in1Sub61592,in0Ave30353,in1Ave30353,in0Con21361], outputs=Sub81211)
w = model.get_layer('Con82071').get_weights() 
w[0] = np.array([[[[[0.0692, 0.9751, 0.998, 0.4059]]], [[[0.8437, 0.3861, 0.9241, 0.4265]]]]])
w[1] = np.array([0, 0, 0, 0])
model.get_layer('Con82071').set_weights(w) 
in0Add82138 = tf.constant([[[[0.6086]], [[0.2883]]]])
in1Add82138 = tf.constant([[[[0.9576]], [[0.0629]]]])
in0Sub61592 = tf.constant([[[0.2225, 0.055, 0.7833], [0.3429, 0.0014, 0.0126]]])
in1Sub61592 = tf.constant([[[0.2202, 0.4021, 0.9778], [0.269, 0.1734, 0.2595]]])
in0Ave30353 = tf.constant([[[[[0.7118], [0.2732]], [[0.135], [0.0256]]], [[[0.5086], [0.9953]], [[0.6897], [0.0472]]]]])
in1Ave30353 = tf.constant([[[[[0.4083], [0.0508]], [[0.9509], [0.345]]], [[[0.7827], [0.6706]], [[0.0536], [0.3127]]]]])
in0Con21361 = tf.constant([[[[[0.774, 0.8128, 0.2317], [0.644, 0.687, 0.3393], [0.0654, 0.1361, 0.5757]], [[0.7345, 0.4485, 0.334], [0.334, 0.7374, 0.078], [0.2529, 0.978, 0.9618]], [[0.8805, 0.7496, 0.9215], [0.3232, 0.3579, 0.0845], [0.7413, 0.1248, 0.823]]], [[[0.9668, 0.6761, 0.8477], [0.8905, 0.9376, 0.6309], [0.6576, 0.3186, 0.2421]], [[0.6451, 0.5246, 0.1832], [0.0552, 0.6219, 0.6362], [0.413, 0.0369, 0.6137]], [[0.4777, 0.9122, 0.7129], [0.1124, 0.5513, 0.8538], [0.1062, 0.6028, 0.2115]]]]])
print (np.array2string(model.predict([in0Add82138,in1Add82138,in0Sub61592,in1Sub61592,in0Ave30353,in1Ave30353,in0Con21361],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Sub81211.png')

LAdd82138 = add_layer([[[[[0.6086]], [[0.2883]]]], [[[[0.9576]], [[0.0629]]]]], Add82138), 
LRes92497 = reshape_layer(Add82138, [2, 1], Res92497), 
LPer74157 = permute_layer(Res92497, 2,1, Per74157), 
LRes18479 = reshape_layer(Per74157, [1, 2, 1], Res18479), 
LRes85242 = reshape_layer(Res18479, [1, 2, 1, 1], Res85242), 
LUp_34699 = up_sampling3D_layer(Res85242, 1, 1, 1, Up_34699), 
LCon82071 = conv3D_layer(Up_34699, 1, 2, 1,[[[[[0.0692, 0.9751, 0.998, 0.4059]]], [[[0.8437, 0.3861, 0.9241, 0.4265]]]]],[0, 0, 0, 0], 1, 11, 5, true, 1, 1, 1, Con82071), 
LZer51556 = zero_padding3D_layer(Con82071, 1, 0, 2, 0, 2, 0, Zer51556), 
LSub61592 = subtract_layer([[[0.2225, 0.055, 0.7833], [0.3429, 0.0014, 0.0126]]], [[[0.2202, 0.4021, 0.9778], [0.269, 0.1734, 0.2595]]], Sub61592), 
LRes95670 = reshape_layer(Sub61592, [2, 3, 1], Res95670), 
LRes11189 = reshape_layer(Res95670, [2, 3, 1, 1], Res11189), 
LZer62899 = zero_padding3D_layer(Res11189, 0, 0, 0, 0, 2, 0, Zer62899), 
LAve30353 = average_layer([[[[[[0.7118], [0.2732]], [[0.135], [0.0256]]], [[[0.5086], [0.9953]], [[0.6897], [0.0472]]]]], [[[[[0.4083], [0.0508]], [[0.9509], [0.345]]], [[[0.7827], [0.6706]], [[0.0536], [0.3127]]]]]], Ave30353), 
LZer21533 = zero_padding3D_layer(Ave30353, 0, 0, 1, 0, 1, 0, Zer21533), 
LAdd86907 = add_layer([Zer62899,Zer21533], Add86907), 
LCon21361 = concatenate_layer([Add86907,[[[[[0.774, 0.8128, 0.2317], [0.644, 0.687, 0.3393], [0.0654, 0.1361, 0.5757]], [[0.7345, 0.4485, 0.334], [0.334, 0.7374, 0.078], [0.2529, 0.978, 0.9618]], [[0.8805, 0.7496, 0.9215], [0.3232, 0.3579, 0.0845], [0.7413, 0.1248, 0.823]]], [[[0.9668, 0.6761, 0.8477], [0.8905, 0.9376, 0.6309], [0.6576, 0.3186, 0.2421]], [[0.6451, 0.5246, 0.1832], [0.0552, 0.6219, 0.6362], [0.413, 0.0369, 0.6137]], [[0.4777, 0.9122, 0.7129], [0.1124, 0.5513, 0.8538], [0.1062, 0.6028, 0.2115]]]]]], 4, Con21361), 
LSub81211 = subtract_layer(Zer51556,Con21361, Sub81211), 
exec_layers([LAdd82138,LRes92497,LPer74157,LRes18479,LRes85242,LUp_34699,LCon82071,LZer51556,LSub61592,LRes95670,LRes11189,LZer62899,LAve30353,LZer21533,LAdd86907,LCon21361,LSub81211],["Add82138","Res92497","Per74157","Res18479","Res85242","Up_34699","Con82071","Zer51556","Sub61592","Res95670","Res11189","Zer62899","Ave30353","Zer21533","Add86907","Con21361","Sub81211"],Sub81211,"Sub81211")

Actual (Unparsed): [[[[[0.0000000, -0.7740000, -0.8128000, -0.2317000], [0.0000000, -0.6440000, -0.6870000, -0.3393000], [-0.0023000, -0.0654000, -0.1361000, -0.5757000]], [[0.0000000, -0.7345000, -0.4485000, -0.3340000], [-0.5600500, -0.3340000, -0.7374000, -0.0780000], [0.1851000, -0.2529000, -0.9780000, -0.9618000]], [[0.0000000, -0.8805000, -0.7496000, -0.9215000], [-0.5429500, -0.3232000, -0.3579000, -0.0845000], [0.0092000, -0.7413000, -0.1248000, -0.8230000]]], [[[0.0000000, -0.9668000, -0.6761000, -0.8477000], [0.0000000, -0.8905000, -0.9376000, -0.6309000], [-0.0739000, -0.6576000, -0.3186000, -0.2421000]], [[0.0000000, -0.6451000, -0.5246000, -0.1832000], [-0.6456500, -0.0552000, -0.6219000, -0.6362000], [-0.6609500, -0.4130000, -0.0369000, -0.6137000]], [[0.0000000, -0.4777000, -0.9122000, -0.7129000], [-0.3716500, -0.1124000, -0.5513000, -0.8538000], [0.4716385, 1.5566000, 1.2848115, 0.5740074]]]]]

Expected (Unparsed): [[[[[0,-0.774,-0.8128,-0.2317],[0,-0.644,-0.687,-0.3393],[-0.0022999999999999965,-0.0654,-0.1361,-0.5757]],[[0,-0.7345,-0.4485,-0.334],[-0.5600499999999999,-0.334,-0.7374,-0.078],[0.18510000000000001,-0.2529,-0.978,-0.9618]],[[0,-0.8805,-0.7496,-0.9215],[-0.54295,-0.3232,-0.3579,-0.0845],[0.009200000000000014,-0.7413,-0.1248,-0.823]]],[[[0,-0.9668,-0.6761,-0.8477],[0,-0.8905,-0.9376,-0.6309],[-0.07389999999999997,-0.6576,-0.3186,-0.2421]],[[0,-0.6451,-0.5246,-0.1832],[-0.6456500000000001,-0.0552,-0.6219,-0.6362],[-0.6609499999999999,-0.413,-0.0369,-0.6137]],[[0,-0.4777,-0.9122,-0.7129],[-0.37165,-0.1124,-0.5513,-0.8538],[0.47163848,1.55659994,1.28481152,0.57400738]]]]]

Actual:   [[[[[0, -0.774, -0.8128, -0.2317], [0, -0.644, -0.687, -0.3393], [-0.0023, -0.0654, -0.1361, -0.5757]], [[0, -0.7345, -0.4485, -0.334], [-0.56, -0.334, -0.7374, -0.078], [0.1851, -0.2529, -0.978, -0.9618]], [[0, -0.8805, -0.7496, -0.9215], [-0.5429, -0.3232, -0.3579, -0.0845], [0.0092, -0.7413, -0.1248, -0.823]]], [[[0, -0.9668, -0.6761, -0.8477], [0, -0.8905, -0.9376, -0.6309], [-0.0739, -0.6576, -0.3186, -0.2421]], [[0, -0.6451, -0.5246, -0.1832], [-0.6456, -0.0552, -0.6219, -0.6362], [-0.6609, -0.413, -0.0369, -0.6137]], [[0, -0.4777, -0.9122, -0.7129], [-0.3716, -0.1124, -0.5513, -0.8538], [0.4717, 1.5566, 1.2849, 0.5741]]]]]

Expected: [[[[[0, -0.774, -0.8128, -0.2317], [0, -0.644, -0.687, -0.3393], [-0.0022, -0.0654, -0.1361, -0.5757]], [[0, -0.7345, -0.4485, -0.334], [-0.56, -0.334, -0.7374, -0.078], [0.1852, -0.2529, -0.978, -0.9618]], [[0, -0.8805, -0.7496, -0.9215], [-0.5429, -0.3232, -0.3579, -0.0845], [0.0093, -0.7413, -0.1248, -0.823]]], [[[0, -0.9668, -0.6761, -0.8477], [0, -0.8905, -0.9376, -0.6309], [-0.0738, -0.6576, -0.3186, -0.2421]], [[0, -0.6451, -0.5246, -0.1832], [-0.6456, -0.0552, -0.6219, -0.6362], [-0.6609, -0.413, -0.0369, -0.6137]], [[0, -0.4777, -0.9122, -0.7129], [-0.3716, -0.1124, -0.5513, -0.8538], [0.4717, 1.5566, 1.2849, 0.5741]]]]]