import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Mul74328 = tf.keras.layers.Input(shape=([2, 2, 1]))
in1Mul74328 = tf.keras.layers.Input(shape=([2, 2, 1]))
in0Cro84421 = tf.keras.layers.Input(shape=([1, 3, 1, 2]))
in0Min99815 = tf.keras.layers.Input(shape=([2, 2, 2]))
in1Min99815 = tf.keras.layers.Input(shape=([2, 2, 2]))
in0Min23344 = tf.keras.layers.Input(shape=([1, 1]))
in1Min23344 = tf.keras.layers.Input(shape=([1, 1]))
in0Con67003 = tf.keras.layers.Input(shape=([2, 3]))

Mul74328 = keras.layers.Multiply(name = 'Mul74328', )([in0Mul74328,in1Mul74328])
Res95157 = keras.layers.Reshape((2, 2), name = 'Res95157', )(Mul74328)
Per11753 = keras.layers.Permute((1,2), name = 'Per11753',)(Res95157)
ReL77263 = keras.layers.ReLU(max_value=7.825120193525634, negative_slope=4.462722536393015, threshold=0.8849348555115921, name = 'ReL77263', )(Per11753)
Cro84421 = keras.layers.Cropping3D(cropping=((0, 0), (1, 1), (0, 0)), name = 'Cro84421', )(in0Cro84421)
Res54543 = keras.layers.Reshape((1, 1, 2), name = 'Res54543', )(Cro84421)
Res7857 = keras.layers.Reshape((1, 2), name = 'Res7857', )(Res54543)
Zer85647 = keras.layers.ZeroPadding1D(padding=((1, 0)), name = 'Zer85647', )(Res7857)
Dot43165 = keras.layers.Dot(axes=(1, 1), name = 'Dot43165', )([ReL77263,Zer85647])
Min99815 = keras.layers.Minimum(name = 'Min99815', )([in0Min99815,in1Min99815])
Res81117 = keras.layers.Reshape((2, 4), name = 'Res81117', )(Min99815)
Min23344 = keras.layers.Minimum(name = 'Min23344', )([in0Min23344,in1Min23344])
Zer86024 = keras.layers.ZeroPadding1D(padding=((1, 0)), name = 'Zer86024', )(Min23344)
Con67003 = keras.layers.Concatenate(axis=2, name = 'Con67003', )([Zer86024,in0Con67003])
Mul88540 = keras.layers.Multiply(name = 'Mul88540', )([Res81117,Con67003])
Res94788 = keras.layers.Reshape((2, 4, 1), name = 'Res94788', )(Mul88540)
Con79341 = keras.layers.Conv2DTranspose(4, (2, 4),strides=(1, 1), padding='same', name = 'Con79341', )(Res94788)
Res891 = keras.layers.Reshape((2, 16), name = 'Res891', )(Con79341)
Dot38972 = keras.layers.Dot(axes=(2, 1), name = 'Dot38972', )([Dot43165,Res891])
model = tf.keras.models.Model(inputs=[in0Mul74328,in1Mul74328,in0Cro84421,in0Min99815,in1Min99815,in0Min23344,in1Min23344,in0Con67003], outputs=Dot38972)
w = model.get_layer('Con79341').get_weights() 
w[0] = np.array([[[[0.9677], [0.1889], [0.0503], [0.8661]], [[0.2611], [0.5539], [0.1171], [0.2017]], [[0.7476], [0.0963], [0.6096], [0.8866]], [[0.8623], [0.7931], [0.5842], [0.5372]]], [[[0.1262], [0.6771], [0.8211], [0.3001]], [[0.5974], [0.7533], [0.7093], [0.1092]], [[0.2961], [0.8635], [0.1558], [0.4269]], [[0.374], [0.9594], [0.0233], [0.1329]]]])
w[1] = np.array([0, 0, 0, 0])
model.get_layer('Con79341').set_weights(w) 
in0Mul74328 = tf.constant([[[[0.1784], [0.0645]], [[0.3558], [0.7017]]]])
in1Mul74328 = tf.constant([[[[0.6151], [0.3306]], [[0.8142], [0.7069]]]])
in0Cro84421 = tf.constant([[[[[1.1758, 1.5131]], [[1.243, 1.6957]], [[1.3759, 1.8938]]]]])
in0Min99815 = tf.constant([[[[0.4743, 0.2368], [0.5334, 0.118]], [[0.8755, 0.6321], [0.8971, 0.3228]]]])
in1Min99815 = tf.constant([[[[0.0604, 0.6754], [0.7284, 0.4562]], [[0.5964, 0.8975], [0.6464, 0.8039]]]])
in0Min23344 = tf.constant([[[0.2032]]])
in1Min23344 = tf.constant([[[0.6848]]])
in0Con67003 = tf.constant([[[0.887, 0.1999, 0.7314], [0.9074, 0.6949, 0.1271]]])
print (np.array2string(model.predict([in0Mul74328,in1Mul74328,in0Cro84421,in0Min99815,in1Min99815,in0Min23344,in1Min23344,in0Con67003],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Dot38972.png')

LMul74328 = multiply_layer([[[[[0.1784], [0.0645]], [[0.3558], [0.7017]]]], [[[[0.6151], [0.3306]], [[0.8142], [0.7069]]]]], Mul74328), 
LRes95157 = reshape_layer(Mul74328, [2, 2], Res95157), 
LPer11753 = permute_layer(Res95157, 1,2, Per11753), 
LReL77263 = relu_layer(Per11753, 7.825120193525634, 4.462722536393015, 0.8849348555115921, ReL77263), 
LCro84421 = cropping3D_layer([[[[[1.1758, 1.5131]], [[1.243, 1.6957]], [[1.3759, 1.8938]]]]], 0, 0, 1, 1, 0, 0, Cro84421), 
LRes54543 = reshape_layer(Cro84421, [1, 1, 2], Res54543), 
LRes7857 = reshape_layer(Res54543, [1, 2], Res7857), 
LZer85647 = zero_padding1D_layer(Res7857, 1, 0, Zer85647), 
LDot43165 = dot_layer(ReL77263,Zer85647, 1, 1, Dot43165), 
LMin99815 = minimum_layer([[[[[0.4743, 0.2368], [0.5334, 0.118]], [[0.8755, 0.6321], [0.8971, 0.3228]]]], [[[[0.0604, 0.6754], [0.7284, 0.4562]], [[0.5964, 0.8975], [0.6464, 0.8039]]]]], Min99815), 
LRes81117 = reshape_layer(Min99815, [2, 4], Res81117), 
LMin23344 = minimum_layer([[[[0.2032]]], [[[0.6848]]]], Min23344), 
LZer86024 = zero_padding1D_layer(Min23344, 1, 0, Zer86024), 
LCon67003 = concatenate_layer([Zer86024,[[[0.887, 0.1999, 0.7314], [0.9074, 0.6949, 0.1271]]]], 2, Con67003), 
LMul88540 = multiply_layer([Res81117,Con67003], Mul88540), 
LRes94788 = reshape_layer(Mul88540, [2, 4, 1], Res94788), 
LCon79341 = conv2D_transpose_layer(Res94788, 2, 4,[[[[0.9677], [0.1889], [0.0503], [0.8661]], [[0.2611], [0.5539], [0.1171], [0.2017]], [[0.7476], [0.0963], [0.6096], [0.8866]], [[0.8623], [0.7931], [0.5842], [0.5372]]], [[[0.1262], [0.6771], [0.8211], [0.3001]], [[0.5974], [0.7533], [0.7093], [0.1092]], [[0.2961], [0.8635], [0.1558], [0.4269]], [[0.374], [0.9594], [0.0233], [0.1329]]]],[0, 0, 0, 0], 1, 1, true, Con79341), 
LRes891 = reshape_layer(Con79341, [2, 16], Res891), 
LDot38972 = dot_layer(Dot43165,Res891, 2, 1, Dot38972), 
exec_layers([LMul74328,LRes95157,LPer11753,LReL77263,LCro84421,LRes54543,LRes7857,LZer85647,LDot43165,LMin99815,LRes81117,LMin23344,LZer86024,LCon67003,LMul88540,LRes94788,LCon79341,LRes891,LDot38972],["Mul74328","Res95157","Per11753","ReL77263","Cro84421","Res54543","Res7857","Zer85647","Dot43165","Min99815","Res81117","Min23344","Zer86024","Con67003","Mul88540","Res94788","Con79341","Res891","Dot38972"],Dot38972,"Dot38972")

Actual (Unparsed): [[[-3.4332312, -1.5620423, -1.0056269, -3.2323779, -4.1882733, -3.3544196, -1.9014675, -3.4497740, -4.6116786, -3.5950231, -3.4257381, -4.6577834, -5.4527063, -4.7033693, -3.7901879, -4.3345005], [-2.2431100, -1.0205642, -0.6570288, -2.1118820, -2.7364186, -2.1916183, -1.2423285, -2.2539183, -3.0130515, -2.3488172, -2.2382144, -3.0431742, -3.5625390, -3.0729578, -2.4763285, -2.8319565]]]

Expected (Unparsed): [[[-3.4332311081608387,-1.5620422527423445,-1.0056268378179762,-3.2323778085810817,-4.188273311924477,-3.3544194912119645,-1.9014674257412691,-3.4497740049478938,-4.6116784455736175,-3.595023026221578,-3.4257379638033867,-4.657783284596636,-5.452706194410618,-4.703369085932566,-3.7901878213126325,-4.334500487940865],[-2.2431098562944842,-1.020564087499421,-0.6570287290890066,-2.111881866752594,-2.736418508064158,-2.191618095559732,-1.242328346019206,-2.253918197960299,-3.0130512771884135,-2.348816997654172,-2.238214192287804,-3.043173985382912,-3.562538793000897,-3.072957579047973,-2.4763283890166226,-2.831956387527267]]]

Actual:   [[[-3.4332, -1.562, -1.0056, -3.2323, -4.1882, -3.3544, -1.9014, -3.4497, -4.6116, -3.595, -3.4257, -4.6577, -5.4527, -4.7033, -3.7901, -4.3345], [-2.2431, -1.0205, -0.657, -2.1118, -2.7364, -2.1916, -1.2423, -2.2539, -3.013, -2.3488, -2.2382, -3.0431, -3.5625, -3.0729, -2.4763, -2.8319]]]

Expected: [[[-3.4332, -1.562, -1.0056, -3.2323, -4.1882, -3.3544, -1.9014, -3.4497, -4.6116, -3.595, -3.4257, -4.6577, -5.4527, -4.7033, -3.7901, -4.3345], [-2.2431, -1.0205, -0.657, -2.1118, -2.7364, -2.1916, -1.2423, -2.2539, -3.013, -2.3488, -2.2382, -3.0431, -3.5625, -3.0729, -2.4763, -2.8319]]]