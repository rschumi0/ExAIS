import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Sub86034 = tf.keras.layers.Input(shape=([2]))
in1Sub86034 = tf.keras.layers.Input(shape=([2]))

Sub86034 = keras.layers.Subtract(name = 'Sub86034', )([in0Sub86034,in1Sub86034])
Thr14386 = keras.layers.ThresholdedReLU(theta=5.492521139013364, name = 'Thr14386', )(Sub86034)
model = tf.keras.models.Model(inputs=[in0Sub86034,in1Sub86034], outputs=Thr14386)
in0Sub86034 = tf.constant([[0.4967, 0.7759]])
in1Sub86034 = tf.constant([[0.4631, 0.5877]])
print (np.array2string(model.predict([in0Sub86034,in1Sub86034],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Thr14386.png')

LSub86034 = subtract_layer([[0.4967, 0.7759]], [[0.4631, 0.5877]], Sub86034), 
LThr14386 = thresholded_relu_layer(Sub86034, 5.492521139013364, Thr14386), 
exec_layers([LSub86034,LThr14386],["Sub86034","Thr14386"],Thr14386,"Thr14386")

Actual (Unparsed): [[0.0000000, 0.0000000]]

Expected (Unparsed): [[0,0]]

Actual:   [[0, 0]]

Expected: [[0, 0]]