import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Min53031 = tf.keras.layers.Input(shape=([1, 1, 2]))
in1Min53031 = tf.keras.layers.Input(shape=([1, 1, 2]))
in0Con39926 = tf.keras.layers.Input(shape=([1, 1, 2]))
in0Sep38960 = tf.keras.layers.Input(shape=([1, 2, 2]))

Min53031 = keras.layers.Minimum(name = 'Min53031', )([in0Min53031,in1Min53031])
Con39926 = keras.layers.Concatenate(axis=3, name = 'Con39926', )([Min53031,in0Con39926])
Sep38960 = keras.layers.SeparableConv2D(4, (1, 2),strides=(1, 1), padding='valid', name = 'Sep38960', )(in0Sep38960)
Ave92026 = keras.layers.Average(name = 'Ave92026', )([Con39926,Sep38960])
Res70494 = keras.layers.Reshape((1, 4), name = 'Res70494', )(Ave92026)
Sim93046 = keras.layers.SimpleRNN(3,name = 'Sim93046', )(Res70494)
model = tf.keras.models.Model(inputs=[in0Min53031,in1Min53031,in0Con39926,in0Sep38960], outputs=Sim93046)
w = model.get_layer('Sep38960').get_weights() 
w[0] = np.array([[[[0.6211], [0.1847]], [[0.595], [1]]]])
w[1] = np.array([[[[0.2245, 0.038, 0.5473, 0.1776], [0.9965, 0.2973, 0.6263, 0.798]]]])
w[2] = np.array([0, 0, 0, 0])
model.get_layer('Sep38960').set_weights(w) 
w = model.get_layer('Sim93046').get_weights() 
w[0] = np.array([[3, 9, 9], [7, 1, 4], [1, 9, 2], [8, 3, 9]])
w[1] = np.array([[5, 9, 7], [4, 10, 8], [2, 3, 2]])
w[2] = np.array([3, 8, 7])
model.get_layer('Sim93046').set_weights(w) 
in0Min53031 = tf.constant([[[[0.1421, 0.0371]]]])
in1Min53031 = tf.constant([[[[0.1174, 0.3626]]]])
in0Con39926 = tf.constant([[[[0.3646, 0.909]]]])
in0Sep38960 = tf.constant([[[[0.4543, 0.9367], [0.2244, 0.3695]]]])
print (np.array2string(model.predict([in0Min53031,in1Min53031,in0Con39926,in0Sep38960],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Sim93046.png')

LMin53031 = minimum_layer([[[[[0.1421, 0.0371]]]], [[[[0.1174, 0.3626]]]]], Min53031), 
LCon39926 = concatenate_layer([Min53031,[[[[0.3646, 0.909]]]]], 3, Con39926), 
LSep38960 = separable_conv2D_layer([[[[0.4543, 0.9367], [0.2244, 0.3695]]]], 1, 2,[[[[[0.6211], [0.1847]], [[0.595], [1]]]],[[[[0.2245, 0.038, 0.5473, 0.1776], [0.9965, 0.2973, 0.6263, 0.798]]]]],[0, 0, 0, 0], 1, 1, false, Sep38960), 
LAve92026 = average_layer([Con39926,Sep38960], Ave92026), 
LRes70494 = reshape_layer(Ave92026, [1, 4], Res70494), 
LSim93046 = simple_rnn_layer(Res70494,[[3, 9, 9], [7, 1, 4], [1, 9, 2], [8, 3, 9]],[[5, 9, 7], [4, 10, 8], [2, 3, 2]],[3, 8, 7], Sim93046), 
exec_layers([LMin53031,LCon39926,LSep38960,LAve92026,LRes70494,LSim93046],["Min53031","Con39926","Sep38960","Ave92026","Res70494","Sim93046"],Sim93046,"Sim93046")

Actual (Unparsed): [[1.0000000, 1.0000000, 1.0000000]]

Expected (Unparsed): [[0.9999999994482829,0.9999999999999993,0.9999999999999997]]

Actual:   [[1, 1, 1]]

Expected: [[1, 1, 1]]