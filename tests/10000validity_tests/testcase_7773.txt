import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Sub83185 = tf.keras.layers.Input(shape=([2]))
in1Sub83185 = tf.keras.layers.Input(shape=([2]))

Sub83185 = keras.layers.Subtract(name = 'Sub83185', )([in0Sub83185,in1Sub83185])
Res99500 = keras.layers.Reshape((2, 1), name = 'Res99500', )(Sub83185)
Res38657 = keras.layers.Reshape((2, 1, 1), name = 'Res38657', )(Res99500)
Con11310 = keras.layers.Conv2D(4, (1, 1),strides=(1, 1), padding='valid', dilation_rate=(1, 1), name = 'Con11310', )(Res38657)
model = tf.keras.models.Model(inputs=[in0Sub83185,in1Sub83185], outputs=Con11310)
w = model.get_layer('Con11310').get_weights() 
w[0] = np.array([[[[0.1217, 0.7676, 0.2889, 0.378]]]])
w[1] = np.array([0, 0, 0, 0])
model.get_layer('Con11310').set_weights(w) 
in0Sub83185 = tf.constant([[0.1077, 0.4746]])
in1Sub83185 = tf.constant([[0.0446, 0.7564]])
print (np.array2string(model.predict([in0Sub83185,in1Sub83185],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Con11310.png')

LSub83185 = subtract_layer([[0.1077, 0.4746]], [[0.0446, 0.7564]], Sub83185), 
LRes99500 = reshape_layer(Sub83185, [2, 1], Res99500), 
LRes38657 = reshape_layer(Res99500, [2, 1, 1], Res38657), 
LCon11310 = conv2D_layer(Res38657, 1, 1,[[[[0.1217, 0.7676, 0.2889, 0.378]]]],[0, 0, 0, 0], 1, 1, false, 1, 1, Con11310), 
exec_layers([LSub83185,LRes99500,LRes38657,LCon11310],["Sub83185","Res99500","Res38657","Con11310"],Con11310,"Con11310")

Actual (Unparsed): [[[[0.0076793, 0.0484356, 0.0182296, 0.0238518]], [[-0.0342951, -0.2163097, -0.0814120, -0.1065204]]]]

Expected (Unparsed): [[[[0.00767927,0.04843556,0.01822959,0.023851800000000003]],[[-0.034295059999999995,-0.21630967999999995,-0.08141201999999997,-0.10652039999999997]]]]

Actual:   [[[[0.0077, 0.0485, 0.0183, 0.0239]], [[-0.0342, -0.2163, -0.0814, -0.1065]]]]

Expected: [[[[0.0077, 0.0485, 0.0183, 0.0239]], [[-0.0342, -0.2163, -0.0814, -0.1065]]]]