import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Dep97330 = tf.keras.layers.Input(shape=([2, 1, 1]))
in0Con48655 = tf.keras.layers.Input(shape=([3, 3, 1]))
in0Dot91629 = tf.keras.layers.Input(shape=([3, 3]))
in1Dot91629 = tf.keras.layers.Input(shape=([3, 3]))
in0Max22238 = tf.keras.layers.Input(shape=([1, 1, 1]))
in1Max22238 = tf.keras.layers.Input(shape=([1, 1, 1]))

Dep97330 = keras.layers.DepthwiseConv2D((2, 1),strides=(2, 2), padding='valid', name = 'Dep97330', )(in0Dep97330)
Res76726 = keras.layers.Reshape((1, 1), name = 'Res76726', )(Dep97330)
Loc74795 = keras.layers.LocallyConnected1D(4, (1),strides=(1), name = 'Loc74795', )(Res76726)
Res55986 = keras.layers.Reshape((1, 4, 1), name = 'Res55986', )(Loc74795)
Cro15200 = keras.layers.Cropping2D(cropping=((0, 0), (3, 0)), name = 'Cro15200', )(Res55986)
Res84265 = keras.layers.Reshape((1, 1), name = 'Res84265', )(Cro15200)
Up_70536 = keras.layers.UpSampling1D(size=(1), name = 'Up_70536', )(Res84265)
Res25976 = keras.layers.Reshape((1, 1, 1), name = 'Res25976', )(Up_70536)
Zer6615 = keras.layers.ZeroPadding2D(padding=((2, 0), (2, 0)), name = 'Zer6615', )(Res25976)
Con48655 = keras.layers.Concatenate(axis=3, name = 'Con48655', )([Zer6615,in0Con48655])
Dot91629 = keras.layers.Dot(axes=(1, 2), name = 'Dot91629', )([in0Dot91629,in1Dot91629])
Res98709 = keras.layers.Reshape((3, 3, 1), name = 'Res98709', )(Dot91629)
Max22238 = keras.layers.Maximum(name = 'Max22238', )([in0Max22238,in1Max22238])
Zer75667 = keras.layers.ZeroPadding2D(padding=((2, 0), (2, 0)), name = 'Zer75667', )(Max22238)
Max4047 = keras.layers.Maximum(name = 'Max4047', )([Res98709,Zer75667])
Den51171 = keras.layers.Dense(2,name = 'Den51171', )(Max4047)
Max98225 = keras.layers.Maximum(name = 'Max98225', )([Con48655,Den51171])
model = tf.keras.models.Model(inputs=[in0Dep97330,in0Con48655,in0Dot91629,in1Dot91629,in0Max22238,in1Max22238], outputs=Max98225)
w = model.get_layer('Dep97330').get_weights() 
w[0] = np.array([[[[0.0016]]], [[[0.65]]]])
w[1] = np.array([0])
model.get_layer('Dep97330').set_weights(w) 
w = model.get_layer('Loc74795').get_weights() 
w[0] = np.array([[[0.091, 0.1254, 0.6374, 0.5149]]])
w[1] = np.array([[0, 0, 0, 0]])
model.get_layer('Loc74795').set_weights(w) 
w = model.get_layer('Den51171').get_weights() 
w[0] = np.array([[0.4109, 0.4814]])
w[1] = np.array([0.2038, 0.209])
model.get_layer('Den51171').set_weights(w) 
in0Dep97330 = tf.constant([[[[0.3741]], [[0.8488]]]])
in0Con48655 = tf.constant([[[[0.3256], [0.9451], [0.5813]], [[0.796], [0.1565], [0.48]], [[0.3756], [0.5443], [0.6746]]]])
in0Dot91629 = tf.constant([[[0.1931, 0.1535, 0.5914], [0.0952, 0.86, 0.4473], [0.9419, 0.6829, 0.2323]]])
in1Dot91629 = tf.constant([[[0.7624, 0.475, 0.6923], [0.9731, 0.5884, 0.6173], [0.1378, 0.1911, 0.3158]]])
in0Max22238 = tf.constant([[[[0.7901]]]])
in1Max22238 = tf.constant([[[[0.1379]]]])
print (np.array2string(model.predict([in0Dep97330,in0Con48655,in0Dot91629,in1Dot91629,in0Max22238,in1Max22238],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Max98225.png')

LDep97330 = depthwise_conv2D_layer([[[[0.3741]], [[0.8488]]]], 2, 1,[[[[0.0016]]], [[[0.65]]]],[0], 2, 2, false, Dep97330), 
LRes76726 = reshape_layer(Dep97330, [1, 1], Res76726), 
LLoc74795 = locally_connected1D_layer(Res76726, 1,[[[0.091, 0.1254, 0.6374, 0.5149]]],[[0, 0, 0, 0]], 1, Loc74795), 
LRes55986 = reshape_layer(Loc74795, [1, 4, 1], Res55986), 
LCro15200 = cropping2D_layer(Res55986, 0, 0, 3, 0, Cro15200), 
LRes84265 = reshape_layer(Cro15200, [1, 1], Res84265), 
LUp_70536 = up_sampling1D_layer(Res84265, 1, Up_70536), 
LRes25976 = reshape_layer(Up_70536, [1, 1, 1], Res25976), 
LZer6615 = zero_padding2D_layer(Res25976, 2, 0, 2, 0, Zer6615), 
LCon48655 = concatenate_layer([Zer6615,[[[[0.3256], [0.9451], [0.5813]], [[0.796], [0.1565], [0.48]], [[0.3756], [0.5443], [0.6746]]]]], 3, Con48655), 
LDot91629 = dot_layer([[[0.1931, 0.1535, 0.5914], [0.0952, 0.86, 0.4473], [0.9419, 0.6829, 0.2323]]], [[[0.7624, 0.475, 0.6923], [0.9731, 0.5884, 0.6173], [0.1378, 0.1911, 0.3158]]], 1, 2, Dot91629), 
LRes98709 = reshape_layer(Dot91629, [3, 3, 1], Res98709), 
LMax22238 = maximum_layer([[[[[0.7901]]]], [[[[0.1379]]]]], Max22238), 
LZer75667 = zero_padding2D_layer(Max22238, 2, 0, 2, 0, Zer75667), 
LMax4047 = maximum_layer([Res98709,Zer75667], Max4047), 
LDen51171 = dense_layer(Max4047, [[0.4109, 0.4814]],[0.2038, 0.209], Den51171), 
LMax98225 = maximum_layer([Con48655,Den51171], Max98225), 
exec_layers([LDep97330,LRes76726,LLoc74795,LRes55986,LCro15200,LRes84265,LUp_70536,LRes25976,LZer6615,LCon48655,LDot91629,LRes98709,LMax22238,LZer75667,LMax4047,LDen51171,LMax98225],["Dep97330","Res76726","Loc74795","Res55986","Cro15200","Res84265","Up_70536","Res25976","Zer6615","Con48655","Dot91629","Res98709","Max22238","Zer75667","Max4047","Den51171","Max98225"],Max98225,"Max98225")

Actual (Unparsed): [[[[0.5508120, 0.6155504], [0.5429388, 0.9451000], [0.3444321, 0.5813000]], [[0.6140015, 0.7960000], [0.6463184, 0.7274433], [0.3686359, 0.4800000]], [[0.5424523, 0.6057565], [0.6073373, 0.6817740], [0.5284521, 0.6746000]]]]

Expected (Unparsed): [[[[0.550811957229,0.615550392334],[0.542938846144,0.9451],[0.344432135728,0.5813]],[[0.614001498763,0.796],[0.646318352318,0.7274432582279998],[0.36863587150800003,0.48]],[[0.542452336435,0.60575647301],[0.607337267805,0.68177401003],[0.52845209,0.6746]]]]

Actual:   [[[[0.5509, 0.6156], [0.543, 0.9451], [0.3445, 0.5813]], [[0.6141, 0.796], [0.6464, 0.7275], [0.3687, 0.48]], [[0.5425, 0.6058], [0.6074, 0.6818], [0.5285, 0.6746]]]]

Expected: [[[[0.5509, 0.6156], [0.543, 0.9451], [0.3445, 0.5813]], [[0.6141, 0.796], [0.6464, 0.7275], [0.3687, 0.48]], [[0.5425, 0.6058], [0.6074, 0.6818], [0.5285, 0.6746]]]]