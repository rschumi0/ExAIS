import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Min96363 = tf.keras.layers.Input(shape=([2, 2, 1, 2]))
in1Min96363 = tf.keras.layers.Input(shape=([2, 2, 1, 2]))
in0Max57968 = tf.keras.layers.Input(shape=([2, 1]))
in1Max57968 = tf.keras.layers.Input(shape=([2, 1]))
in0Sof96368 = tf.keras.layers.Input(shape=([2, 1, 2, 2]))

Min96363 = keras.layers.Minimum(name = 'Min96363', )([in0Min96363,in1Min96363])
Res4547 = keras.layers.Reshape((2, 2, 2), name = 'Res4547', )(Min96363)
Sep14714 = keras.layers.SeparableConv2D(3, (1, 2),strides=(2, 2), padding='valid', name = 'Sep14714', )(Res4547)
Res15349 = keras.layers.Reshape((1, 3), name = 'Res15349', )(Sep14714)
Max57968 = keras.layers.Maximum(name = 'Max57968', )([in0Max57968,in1Max57968])
Sof96368 = keras.layers.Softmax(axis=1, name = 'Sof96368', input_shape=(2, 1, 2, 2))(in0Sof96368)
Res55405 = keras.layers.Reshape((2, 1, 4), name = 'Res55405', )(Sof96368)
Res55898 = keras.layers.Reshape((2, 4), name = 'Res55898', )(Res55405)
Dot95569 = keras.layers.Dot(axes=(1, 1), name = 'Dot95569', )([Max57968,Res55898])
Dot6064 = keras.layers.Dot(axes=(1, 1), name = 'Dot6064', )([Res15349,Dot95569])
model = tf.keras.models.Model(inputs=[in0Min96363,in1Min96363,in0Max57968,in1Max57968,in0Sof96368], outputs=Dot6064)
w = model.get_layer('Sep14714').get_weights() 
w[0] = np.array([[[[0.384], [0.8195]], [[0.0954], [0.2547]]]])
w[1] = np.array([[[[0.8876, 0.3234, 0.3464], [0.7638, 0.0261, 0.078]]]])
w[2] = np.array([0, 0, 0])
model.get_layer('Sep14714').set_weights(w) 
in0Min96363 = tf.constant([[[[[0.1837, 0.2796]], [[0.8259, 0.1307]]], [[[0.3914, 0.8179]], [[0.3866, 0.6707]]]]])
in1Min96363 = tf.constant([[[[[0.0855, 0.4358]], [[0.6982, 0.6789]]], [[[0.1958, 0.9181]], [[0.4073, 0.4762]]]]])
in0Max57968 = tf.constant([[[0.986], [0.4208]]])
in1Max57968 = tf.constant([[[0.1533], [0.034]]])
in0Sof96368 = tf.constant([[[[[0.0134, 0.7094], [0.8519, 0.1798]]], [[[0.4694, 0.5082], [0.9381, 0.2828]]]]])
print (np.array2string(model.predict([in0Min96363,in1Min96363,in0Max57968,in1Max57968,in0Sof96368],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Dot6064.png')

LMin96363 = minimum_layer([[[[[[0.1837, 0.2796]], [[0.8259, 0.1307]]], [[[0.3914, 0.8179]], [[0.3866, 0.6707]]]]], [[[[[0.0855, 0.4358]], [[0.6982, 0.6789]]], [[[0.1958, 0.9181]], [[0.4073, 0.4762]]]]]], Min96363), 
LRes4547 = reshape_layer(Min96363, [2, 2, 2], Res4547), 
LSep14714 = separable_conv2D_layer(Res4547, 1, 2,[[[[[0.384], [0.8195]], [[0.0954], [0.2547]]]],[[[[0.8876, 0.3234, 0.3464], [0.7638, 0.0261, 0.078]]]]],[0, 0, 0], 2, 2, false, Sep14714), 
LRes15349 = reshape_layer(Sep14714, [1, 3], Res15349), 
LMax57968 = maximum_layer([[[[0.986], [0.4208]]], [[[0.1533], [0.034]]]], Max57968), 
LSof96368 = softmax_layer([[[[[0.0134, 0.7094], [0.8519, 0.1798]]], [[[0.4694, 0.5082], [0.9381, 0.2828]]]]], 1, Sof96368), 
LRes55405 = reshape_layer(Sof96368, [2, 1, 4], Res55405), 
LRes55898 = reshape_layer(Res55405, [2, 4], Res55898), 
LDot95569 = dot_layer(Max57968,Res55898, 1, 1, Dot95569), 
LDot6064 = dot_layer(Res15349,Dot95569, 1, 1, Dot6064), 
exec_layers([LMin96363,LRes4547,LSep14714,LRes15349,LMax57968,LSof96368,LRes55405,LRes55898,LDot95569,LDot6064],["Min96363","Res4547","Sep14714","Res15349","Max57968","Sof96368","Res55405","Res55898","Dot95569","Dot6064"],Dot6064,"Dot6064")

Actual (Unparsed): [[[0.1847861, 0.2112521, 0.1995579, 0.1988741], [0.0249676, 0.0285436, 0.0269635, 0.0268711], [0.0351489, 0.0401832, 0.0379587, 0.0378287]]]

Expected (Unparsed): [[[0.18478606250774732,0.2112521492676836,0.19955787465659028,0.19887408031397208],[0.024967617670818242,0.028543618622930582,0.02696353096120505,0.026871139167796692],[0.03514894038888917,0.040183166960025545,0.03795874940591815,0.03782868198491913]]]

Actual:   [[[0.1848, 0.2113, 0.1996, 0.1989], [0.025, 0.0286, 0.027, 0.0269], [0.0352, 0.0402, 0.038, 0.0379]]]

Expected: [[[0.1848, 0.2113, 0.1996, 0.1989], [0.025, 0.0286, 0.027, 0.0269], [0.0352, 0.0402, 0.038, 0.0379]]]