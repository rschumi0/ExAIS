import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Glo1710 = tf.keras.layers.Input(shape=([1, 2]))

Glo1710 = keras.layers.GlobalAveragePooling1D(name = 'Glo1710', )(in0Glo1710)
Res87873 = keras.layers.Reshape((2, 1), name = 'Res87873', )(Glo1710)
Sep96154 = keras.layers.SeparableConv1D(2, (1),strides=(2), padding='valid', name = 'Sep96154', )(Res87873)
ReL19168 = keras.layers.ReLU(max_value=5.861752650884175, negative_slope=4.875434782887936, threshold=1.119564034245265, name = 'ReL19168', )(Sep96154)
model = tf.keras.models.Model(inputs=[in0Glo1710], outputs=ReL19168)
w = model.get_layer('Sep96154').get_weights() 
w[0] = np.array([[[0.1219]]])
w[1] = np.array([[[0.5196, 0.5109]]])
w[2] = np.array([0, 0])
model.get_layer('Sep96154').set_weights(w) 
in0Glo1710 = tf.constant([[[1.4863, 1.9877]]])
print (np.array2string(model.predict([in0Glo1710],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='ReL19168.png')

LGlo1710 = global_average_pooling1D_layer([[[1.4863, 1.9877]]], Glo1710), 
LRes87873 = reshape_layer(Glo1710, [2, 1], Res87873), 
LSep96154 = separable_conv1D_layer(Res87873, 1,[[[[0.1219]]],[[[0.5196, 0.5109]]]],[0, 0], 2, false, Sep96154), 
LReL19168 = relu_layer(Sep96154, 5.861752650884175, 4.875434782887936, 1.119564034245265, ReL19168), 
exec_layers([LGlo1710,LRes87873,LSep96154,LReL19168],["Glo1710","Res87873","Sep96154","ReL19168"],ReL19168,"ReL19168")

Actual (Unparsed): [[[-4.9993826, -5.0070676]]]

Expected (Unparsed): [[[-4.999382580276477,-5.007067561087473]]]

Actual:   [[[-4.9993, -5.007]]]

Expected: [[[-4.9993, -5.007]]]