import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Dot12203 = tf.keras.layers.Input(shape=([2]))
in1Dot12203 = tf.keras.layers.Input(shape=([2]))

Dot12203 = keras.layers.Dot(axes=(1, 1), name = 'Dot12203', )([in0Dot12203,in1Dot12203])
Res63316 = keras.layers.Reshape((1, 1), name = 'Res63316', )(Dot12203)
Zer48648 = keras.layers.ZeroPadding1D(padding=((1, 1)), name = 'Zer48648', )(Res63316)
model = tf.keras.models.Model(inputs=[in0Dot12203,in1Dot12203], outputs=Zer48648)
in0Dot12203 = tf.constant([[0.3855, 0.0117]])
in1Dot12203 = tf.constant([[0.2382, 0.4775]])
print (np.array2string(model.predict([in0Dot12203,in1Dot12203],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Zer48648.png')

LDot12203 = dot_layer([[0.3855, 0.0117]], [[0.2382, 0.4775]], 1, 1, Dot12203), 
LRes63316 = reshape_layer(Dot12203, [1, 1], Res63316), 
LZer48648 = zero_padding1D_layer(Res63316, 1, 1, Zer48648), 
exec_layers([LDot12203,LRes63316,LZer48648],["Dot12203","Res63316","Zer48648"],Zer48648,"Zer48648")

Actual (Unparsed): [[[0.0000000], [0.0974129], [0.0000000]]]

Expected (Unparsed): [[[0],[0.09741285],[0]]]

Actual:   [[[0], [0.0975], [0]]]

Expected: [[[0], [0.0975], [0]]]