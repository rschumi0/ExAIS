import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Sub57083 = tf.keras.layers.Input(shape=([2, 3, 2]))
in1Sub57083 = tf.keras.layers.Input(shape=([2, 3, 2]))
in0Con75216 = tf.keras.layers.Input(shape=([2, 2]))
in0Ave23585 = tf.keras.layers.Input(shape=([1, 1, 1, 2]))
in1Ave23585 = tf.keras.layers.Input(shape=([1, 1, 1, 2]))
in0Add86016 = tf.keras.layers.Input(shape=([1, 2, 1, 2]))
in1Add86016 = tf.keras.layers.Input(shape=([1, 2, 1, 2]))
in0Mul54096 = tf.keras.layers.Input(shape=([2, 2, 1, 1]))
in1Mul54096 = tf.keras.layers.Input(shape=([2, 2, 1, 1]))
in0Con92506 = tf.keras.layers.Input(shape=([2, 2, 1, 1]))

Sub57083 = keras.layers.Subtract(name = 'Sub57083', )([in0Sub57083,in1Sub57083])
Ave52460 = keras.layers.AveragePooling2D(pool_size=(1, 1), strides=(1, 1), padding='valid', name = 'Ave52460', )(Sub57083)
Res51599 = keras.layers.Reshape((2, 6), name = 'Res51599', )(Ave52460)
Con75216 = keras.layers.Concatenate(axis=2, name = 'Con75216', )([Res51599,in0Con75216])
Ave23585 = keras.layers.Average(name = 'Ave23585', )([in0Ave23585,in1Ave23585])
Zer38102 = keras.layers.ZeroPadding3D(padding=((0, 0), (1, 0), (0, 0)), name = 'Zer38102', )(Ave23585)
Add86016 = keras.layers.Add(name = 'Add86016', )([in0Add86016,in1Add86016])
Sub10264 = keras.layers.Subtract(name = 'Sub10264', )([Zer38102,Add86016])
Zer98536 = keras.layers.ZeroPadding3D(padding=((1, 0), (0, 0), (0, 0)), name = 'Zer98536', )(Sub10264)
Mul54096 = keras.layers.Multiply(name = 'Mul54096', )([in0Mul54096,in1Mul54096])
Con92506 = keras.layers.Concatenate(axis=4, name = 'Con92506', )([Mul54096,in0Con92506])
Ave22371 = keras.layers.Average(name = 'Ave22371', )([Zer98536,Con92506])
Res53099 = keras.layers.Reshape((2, 2, 2), name = 'Res53099', )(Ave22371)
Res49534 = keras.layers.Reshape((2, 4), name = 'Res49534', )(Res53099)
Dot67961 = keras.layers.Dot(axes=(1, 1), name = 'Dot67961', )([Con75216,Res49534])
ReL66392 = keras.layers.ReLU(max_value=3.785045864912639, negative_slope=2.146810748424649, threshold=8.307195449531857, name = 'ReL66392', )(Dot67961)
model = tf.keras.models.Model(inputs=[in0Sub57083,in1Sub57083,in0Con75216,in0Ave23585,in1Ave23585,in0Add86016,in1Add86016,in0Mul54096,in1Mul54096,in0Con92506], outputs=ReL66392)
in0Sub57083 = tf.constant([[[[0.4113, 0.7881], [0.4822, 0.3534], [0.0971, 0.7878]], [[0.3436, 0.4005], [0.2484, 0.1773], [0.6973, 0.2207]]]])
in1Sub57083 = tf.constant([[[[0.3142, 0.1253], [0.174, 0.1563], [0.0163, 0.2373]], [[0.4793, 0.9472], [0.4998, 0.6488], [0.3393, 0.501]]]])
in0Con75216 = tf.constant([[[0.1626, 0.1769], [0.9832, 0.4202]]])
in0Ave23585 = tf.constant([[[[[0.0822, 0.0207]]]]])
in1Ave23585 = tf.constant([[[[[0.9684, 0.4448]]]]])
in0Add86016 = tf.constant([[[[[0.6156, 0.8807]], [[0.2719, 0.917]]]]])
in1Add86016 = tf.constant([[[[[0.4117, 0.3854]], [[0.6334, 0.5166]]]]])
in0Mul54096 = tf.constant([[[[[0.2691]], [[0.1144]]], [[[0.9321]], [[0.1904]]]]])
in1Mul54096 = tf.constant([[[[[0.3916]], [[0.9484]]], [[[0.3828]], [[0.1114]]]]])
in0Con92506 = tf.constant([[[[[0.1526]], [[0.4077]]], [[[0.0463]], [[0.9398]]]]])
print (np.array2string(model.predict([in0Sub57083,in1Sub57083,in0Con75216,in0Ave23585,in1Ave23585,in0Add86016,in1Add86016,in0Mul54096,in1Mul54096,in0Con92506],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='ReL66392.png')

LSub57083 = subtract_layer([[[[0.4113, 0.7881], [0.4822, 0.3534], [0.0971, 0.7878]], [[0.3436, 0.4005], [0.2484, 0.1773], [0.6973, 0.2207]]]], [[[[0.3142, 0.1253], [0.174, 0.1563], [0.0163, 0.2373]], [[0.4793, 0.9472], [0.4998, 0.6488], [0.3393, 0.501]]]], Sub57083), 
LAve52460 = average_pooling2D_layer(Sub57083, 1, 1, 1, 1, false, Ave52460), 
LRes51599 = reshape_layer(Ave52460, [2, 6], Res51599), 
LCon75216 = concatenate_layer([Res51599,[[[0.1626, 0.1769], [0.9832, 0.4202]]]], 2, Con75216), 
LAve23585 = average_layer([[[[[[0.0822, 0.0207]]]]], [[[[[0.9684, 0.4448]]]]]], Ave23585), 
LZer38102 = zero_padding3D_layer(Ave23585, 0, 0, 1, 0, 0, 0, Zer38102), 
LAdd86016 = add_layer([[[[[[0.6156, 0.8807]], [[0.2719, 0.917]]]]], [[[[[0.4117, 0.3854]], [[0.6334, 0.5166]]]]]], Add86016), 
LSub10264 = subtract_layer(Zer38102,Add86016, Sub10264), 
LZer98536 = zero_padding3D_layer(Sub10264, 1, 0, 0, 0, 0, 0, Zer98536), 
LMul54096 = multiply_layer([[[[[[0.2691]], [[0.1144]]], [[[0.9321]], [[0.1904]]]]], [[[[[0.3916]], [[0.9484]]], [[[0.3828]], [[0.1114]]]]]], Mul54096), 
LCon92506 = concatenate_layer([Mul54096,[[[[[0.1526]], [[0.4077]]], [[[0.0463]], [[0.9398]]]]]], 4, Con92506), 
LAve22371 = average_layer([Zer98536,Con92506], Ave22371), 
LRes53099 = reshape_layer(Ave22371, [2, 2, 2], Res53099), 
LRes49534 = reshape_layer(Res53099, [2, 4], Res49534), 
LDot67961 = dot_layer(Con75216,Res49534, 1, 1, Dot67961), 
LReL66392 = relu_layer(Dot67961, 3.785045864912639, 2.146810748424649, 8.307195449531857, ReL66392), 
exec_layers([LSub57083,LAve52460,LRes51599,LCon75216,LAve23585,LZer38102,LAdd86016,LSub10264,LZer98536,LMul54096,LCon92506,LAve22371,LRes53099,LRes49534,LDot67961,LReL66392],["Sub57083","Ave52460","Res51599","Con75216","Ave23585","Zer38102","Add86016","Sub10264","Zer98536","Mul54096","Con92506","Ave22371","Res53099","Res49534","Dot67961","ReL66392"],ReL66392,"ReL66392")

Actual (Unparsed): [[[-17.7253284, -17.6403939, -17.7704064, -17.7534580], [-17.3655385, -17.0095926, -17.5462373, -17.3907249], [-17.6181794, -17.4543248, -17.7012623, -17.6286543], [-17.4723383, -17.1843374, -17.6294348, -17.6155999], [-18.0824929, -18.2894850, -17.9624417, -17.8989323], [-17.5699720, -17.3767957, -17.6619136, -17.5145191], [-18.5232027, -19.0946853, -18.1936963, -18.0383232], [-18.1163885, -18.3551846, -17.9752047, -17.8743055]]]

Expected (Unparsed): [[[-17.725328389212105,-17.640393918022653,-17.770406428033635,-17.753458030011075],[-17.365538495326735,-17.009592630085585,-17.546237319021266,-17.39072489982126],[-17.618179386596267,-17.454324763983323,-17.70126232693582,-17.628654308860025],[-17.47233832466588,-17.184337421831298,-17.62943482293746,-17.615599944491816],[-18.08249291394866,-18.289484981599035,-17.96244170543956,-17.898932254049008],[-17.569972010959937,-17.376795699339016,-17.661913617113225,-17.51451905638273],[-18.523202703169282,-19.094685295942675,-18.19369627364194,-18.038323173176696],[-18.11638851614803,-18.355184582316838,-17.975204651317625,-17.874305479506283]]]

Actual:   [[[-17.7253, -17.6403, -17.7704, -17.7534], [-17.3655, -17.0095, -17.5462, -17.3907], [-17.6181, -17.4543, -17.7012, -17.6286], [-17.4723, -17.1843, -17.6294, -17.6155], [-18.0824, -18.2894, -17.9624, -17.8989], [-17.5699, -17.3767, -17.6619, -17.5145], [-18.5232, -19.0946, -18.1936, -18.0383], [-18.1163, -18.3551, -17.9752, -17.8743]]]

Expected: [[[-17.7253, -17.6403, -17.7704, -17.7534], [-17.3655, -17.0095, -17.5462, -17.3907], [-17.6181, -17.4543, -17.7012, -17.6286], [-17.4723, -17.1843, -17.6294, -17.6155], [-18.0824, -18.2894, -17.9624, -17.8989], [-17.5699, -17.3767, -17.6619, -17.5145], [-18.5232, -19.0946, -18.1936, -18.0383], [-18.1163, -18.3551, -17.9752, -17.8743]]]