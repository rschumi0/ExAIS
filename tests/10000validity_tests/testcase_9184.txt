import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Max21753 = tf.keras.layers.Input(shape=([2, 1, 2]))
in1Max21753 = tf.keras.layers.Input(shape=([2, 1, 2]))

Max21753 = keras.layers.Maximum(name = 'Max21753', )([in0Max21753,in1Max21753])
Res57409 = keras.layers.Reshape((2, 2), name = 'Res57409', )(Max21753)
Zer4924 = keras.layers.ZeroPadding1D(padding=((1, 0)), name = 'Zer4924', )(Res57409)
Res63236 = keras.layers.Reshape((3, 2, 1), name = 'Res63236', )(Zer4924)
Res80487 = keras.layers.Reshape((3, 2, 1, 1), name = 'Res80487', )(Res63236)
Zer94832 = keras.layers.ZeroPadding3D(padding=((1, 1), (1, 1), (1, 1)), name = 'Zer94832', )(Res80487)
model = tf.keras.models.Model(inputs=[in0Max21753,in1Max21753], outputs=Zer94832)
in0Max21753 = tf.constant([[[[0.1055, 0.9096]], [[0.5008, 0.3767]]]])
in1Max21753 = tf.constant([[[[0.2178, 0.6073]], [[0.8211, 0.1401]]]])
print (np.array2string(model.predict([in0Max21753,in1Max21753],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Zer94832.png')

LMax21753 = maximum_layer([[[[[0.1055, 0.9096]], [[0.5008, 0.3767]]]], [[[[0.2178, 0.6073]], [[0.8211, 0.1401]]]]], Max21753), 
LRes57409 = reshape_layer(Max21753, [2, 2], Res57409), 
LZer4924 = zero_padding1D_layer(Res57409, 1, 0, Zer4924), 
LRes63236 = reshape_layer(Zer4924, [3, 2, 1], Res63236), 
LRes80487 = reshape_layer(Res63236, [3, 2, 1, 1], Res80487), 
LZer94832 = zero_padding3D_layer(Res80487, 1, 1, 1, 1, 1, 1, Zer94832), 
exec_layers([LMax21753,LRes57409,LZer4924,LRes63236,LRes80487,LZer94832],["Max21753","Res57409","Zer4924","Res63236","Res80487","Zer94832"],Zer94832,"Zer94832")

Actual (Unparsed): [[[[[0.0000000], [0.0000000], [0.0000000]], [[0.0000000], [0.0000000], [0.0000000]], [[0.0000000], [0.0000000], [0.0000000]], [[0.0000000], [0.0000000], [0.0000000]]], [[[0.0000000], [0.0000000], [0.0000000]], [[0.0000000], [0.0000000], [0.0000000]], [[0.0000000], [0.0000000], [0.0000000]], [[0.0000000], [0.0000000], [0.0000000]]], [[[0.0000000], [0.0000000], [0.0000000]], [[0.0000000], [0.2178000], [0.0000000]], [[0.0000000], [0.9096000], [0.0000000]], [[0.0000000], [0.0000000], [0.0000000]]], [[[0.0000000], [0.0000000], [0.0000000]], [[0.0000000], [0.8211000], [0.0000000]], [[0.0000000], [0.3767000], [0.0000000]], [[0.0000000], [0.0000000], [0.0000000]]], [[[0.0000000], [0.0000000], [0.0000000]], [[0.0000000], [0.0000000], [0.0000000]], [[0.0000000], [0.0000000], [0.0000000]], [[0.0000000], [0.0000000], [0.0000000]]]]]

Expected (Unparsed): [[[[[0],[0],[0]],[[0],[0],[0]],[[0],[0],[0]],[[0],[0],[0]]],[[[0],[0],[0]],[[0],[0],[0]],[[0],[0],[0]],[[0],[0],[0]]],[[[0],[0],[0]],[[0],[0.2178],[0]],[[0],[0.9096],[0]],[[0],[0],[0]]],[[[0],[0],[0]],[[0],[0.8211],[0]],[[0],[0.3767],[0]],[[0],[0],[0]]],[[[0],[0],[0]],[[0],[0],[0]],[[0],[0],[0]],[[0],[0],[0]]]]]

Actual:   [[[[[0], [0], [0]], [[0], [0], [0]], [[0], [0], [0]], [[0], [0], [0]]], [[[0], [0], [0]], [[0], [0], [0]], [[0], [0], [0]], [[0], [0], [0]]], [[[0], [0], [0]], [[0], [0.2178], [0]], [[0], [0.9096], [0]], [[0], [0], [0]]], [[[0], [0], [0]], [[0], [0.8211], [0]], [[0], [0.3767], [0]], [[0], [0], [0]]], [[[0], [0], [0]], [[0], [0], [0]], [[0], [0], [0]], [[0], [0], [0]]]]]

Expected: [[[[[0], [0], [0]], [[0], [0], [0]], [[0], [0], [0]], [[0], [0], [0]]], [[[0], [0], [0]], [[0], [0], [0]], [[0], [0], [0]], [[0], [0], [0]]], [[[0], [0], [0]], [[0], [0.2178], [0]], [[0], [0.9096], [0]], [[0], [0], [0]]], [[[0], [0], [0]], [[0], [0.8211], [0]], [[0], [0.3767], [0]], [[0], [0], [0]]], [[[0], [0], [0]], [[0], [0], [0]], [[0], [0], [0]], [[0], [0], [0]]]]]