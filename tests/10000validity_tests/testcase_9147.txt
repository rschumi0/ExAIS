import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Glo93771 = tf.keras.layers.Input(shape=([2, 2]))

Glo93771 = keras.layers.GlobalMaxPool1D(name = 'Glo93771', )(in0Glo93771)
Lea62943 = keras.layers.LeakyReLU(alpha=3.920166001837608, name = 'Lea62943', )(Glo93771)
Res23870 = keras.layers.Reshape((2, 1), name = 'Res23870', )(Lea62943)
Cro32978 = keras.layers.Cropping1D(cropping=((0, 1)), name = 'Cro32978', )(Res23870)
Thr83337 = keras.layers.ThresholdedReLU(theta=7.350788270790894, name = 'Thr83337', )(Cro32978)
model = tf.keras.models.Model(inputs=[in0Glo93771], outputs=Thr83337)
in0Glo93771 = tf.constant([[[1.6139, 1.3146], [1.6811, 1.8068]]])
print (np.array2string(model.predict([in0Glo93771],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Thr83337.png')

LGlo93771 = global_max_pool1D_layer([[[1.6139, 1.3146], [1.6811, 1.8068]]], Glo93771), 
LLea62943 = leaky_relu_layer(Glo93771, 3.920166001837608, Lea62943), 
LRes23870 = reshape_layer(Lea62943, [2, 1], Res23870), 
LCro32978 = cropping1D_layer(Res23870, 0, 1, Cro32978), 
LThr83337 = thresholded_relu_layer(Cro32978, 7.350788270790894, Thr83337), 
exec_layers([LGlo93771,LLea62943,LRes23870,LCro32978,LThr83337],["Glo93771","Lea62943","Res23870","Cro32978","Thr83337"],Thr83337,"Thr83337")

Actual (Unparsed): [[[0.0000000]]]

Expected (Unparsed): [[[0]]]

Actual:   [[[0]]]

Expected: [[[0]]]