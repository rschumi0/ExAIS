import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Dot32704 = tf.keras.layers.Input(shape=([3]))
in1Dot32704 = tf.keras.layers.Input(shape=([3]))

Dot32704 = keras.layers.Dot(axes=(1, 1), name = 'Dot32704', )([in0Dot32704,in1Dot32704])
Res6695 = keras.layers.Reshape((1, 1), name = 'Res6695', )(Dot32704)
Res75591 = keras.layers.Reshape((1, 1, 1), name = 'Res75591', )(Res6695)
Con82830 = keras.layers.Conv2D(3, (1, 1),strides=(1, 8), padding='valid', dilation_rate=(1, 1), name = 'Con82830', )(Res75591)
model = tf.keras.models.Model(inputs=[in0Dot32704,in1Dot32704], outputs=Con82830)
w = model.get_layer('Con82830').get_weights() 
w[0] = np.array([[[[0.123, 0.4503, 0.7551]]]])
w[1] = np.array([0, 0, 0])
model.get_layer('Con82830').set_weights(w) 
in0Dot32704 = tf.constant([[0.067, 0.2874, 0.6788]])
in1Dot32704 = tf.constant([[0.445, 0.2722, 0.4555]])
print (np.array2string(model.predict([in0Dot32704,in1Dot32704],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Con82830.png')

LDot32704 = dot_layer([[0.067, 0.2874, 0.6788]], [[0.445, 0.2722, 0.4555]], 1, 1, Dot32704), 
LRes6695 = reshape_layer(Dot32704, [1, 1], Res6695), 
LRes75591 = reshape_layer(Res6695, [1, 1, 1], Res75591), 
LCon82830 = conv2D_layer(Res75591, 1, 1,[[[[0.123, 0.4503, 0.7551]]]],[0, 0, 0], 1, 8, false, 1, 1, Con82830), 
exec_layers([LDot32704,LRes6695,LRes75591,LCon82830],["Dot32704","Res6695","Res75591","Con82830"],Con82830,"Con82830")

Actual (Unparsed): [[[[0.0513204, 0.1878826, 0.3150569]]]]

Expected (Unparsed): [[[[0.051320357639999994,0.18788257760399998,0.315056927268]]]]

Actual:   [[[[0.0514, 0.1879, 0.3151]]]]

Expected: [[[[0.0514, 0.1879, 0.3151]]]]