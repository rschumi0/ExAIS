import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Min35547 = tf.keras.layers.Input(shape=([2, 1]))
in1Min35547 = tf.keras.layers.Input(shape=([2, 1]))
in0Con60482 = tf.keras.layers.Input(shape=([2, 47]))
in0Up_50169 = tf.keras.layers.Input(shape=([3, 1, 3, 4]))

Min35547 = keras.layers.Minimum(name = 'Min35547', )([in0Min35547,in1Min35547])
Con60482 = keras.layers.Concatenate(axis=2, name = 'Con60482', )([Min35547,in0Con60482])
Up_50169 = keras.layers.UpSampling3D(size=(1, 2, 2), name = 'Up_50169', )(in0Up_50169)
Res59822 = keras.layers.Reshape((3, 2, 24), name = 'Res59822', )(Up_50169)
Res85586 = keras.layers.Reshape((3, 48), name = 'Res85586', )(Res59822)
Dot90700 = keras.layers.Dot(axes=(2, 2), name = 'Dot90700', )([Con60482,Res85586])
Fla41996 = keras.layers.Flatten(name = 'Fla41996', )(Dot90700)
model = tf.keras.models.Model(inputs=[in0Min35547,in1Min35547,in0Con60482,in0Up_50169], outputs=Fla41996)
in0Min35547 = tf.constant([[[0.8635], [0.2453]]])
in1Min35547 = tf.constant([[[0.0048], [0.0983]]])
in0Con60482 = tf.constant([[[0.1655, 0.4551, 0.014, 0.5768, 0.3292, 0.6656, 0.8381, 0.2138, 0.6838, 0.9133, 0.9857, 0.8146, 0.5678, 0.9443, 0.7297, 0.815, 0.6741, 0.0533, 0.8048, 0.3947, 0.7814, 0.8435, 0.8964, 0.534, 0.0055, 0.102, 0.1306, 0.3749, 0.7084, 0.2745, 0.8058, 0.7465, 0.9809, 0.6599, 0.6572, 0.2384, 0.1823, 0.1065, 0.2723, 0.2647, 0.3631, 0.691, 0.8869, 0.1441, 0.5224, 0.5879, 0.6825], [0.3427, 0.5615, 0.0947, 0.8788, 0.674, 0.479, 0.5701, 0.3691, 0.4317, 0.8285, 0.8629, 0.3821, 0.1431, 0.7047, 0.6614, 0.6688, 0.8739, 0.5616, 0.0771, 0.0143, 0.7889, 0.975, 0.6924, 0.4484, 0.9797, 0.0602, 0.2477, 0.3949, 0.4072, 0.63, 0.1193, 0.1357, 0.1753, 0.334, 0.752, 0.394, 0.2493, 0.9618, 0.2459, 0.5389, 0.1669, 0.8105, 0.3721, 0.9064, 0.2487, 0.5171, 0.3919]]])
in0Up_50169 = tf.constant([[[[[1.9588, 1.148, 1.8814, 1.2295], [1.8765, 1.7693, 1.6573, 1.8095], [1.9804, 1.073, 1.1162, 1.6928]]], [[[1.9903, 1.7911, 1.1941, 1.2047], [1.4092, 1.0823, 1.9277, 1.6012], [1.4962, 1.7243, 1.2045, 1.2946]]], [[[1.2344, 1.1852, 1.0453, 1.0203], [1.6857, 1.7788, 1.9844, 1.5018], [1.1062, 1.2535, 1.4826, 1.3222]]]]])
print (np.array2string(model.predict([in0Min35547,in1Min35547,in0Con60482,in0Up_50169],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Fla41996.png')

LMin35547 = minimum_layer([[[[0.8635], [0.2453]]], [[[0.0048], [0.0983]]]], Min35547), 
LCon60482 = concatenate_layer([Min35547,[[[0.1655, 0.4551, 0.014, 0.5768, 0.3292, 0.6656, 0.8381, 0.2138, 0.6838, 0.9133, 0.9857, 0.8146, 0.5678, 0.9443, 0.7297, 0.815, 0.6741, 0.0533, 0.8048, 0.3947, 0.7814, 0.8435, 0.8964, 0.534, 0.0055, 0.102, 0.1306, 0.3749, 0.7084, 0.2745, 0.8058, 0.7465, 0.9809, 0.6599, 0.6572, 0.2384, 0.1823, 0.1065, 0.2723, 0.2647, 0.3631, 0.691, 0.8869, 0.1441, 0.5224, 0.5879, 0.6825], [0.3427, 0.5615, 0.0947, 0.8788, 0.674, 0.479, 0.5701, 0.3691, 0.4317, 0.8285, 0.8629, 0.3821, 0.1431, 0.7047, 0.6614, 0.6688, 0.8739, 0.5616, 0.0771, 0.0143, 0.7889, 0.975, 0.6924, 0.4484, 0.9797, 0.0602, 0.2477, 0.3949, 0.4072, 0.63, 0.1193, 0.1357, 0.1753, 0.334, 0.752, 0.394, 0.2493, 0.9618, 0.2459, 0.5389, 0.1669, 0.8105, 0.3721, 0.9064, 0.2487, 0.5171, 0.3919]]]], 2, Con60482), 
LUp_50169 = up_sampling3D_layer([[[[[1.9588, 1.148, 1.8814, 1.2295], [1.8765, 1.7693, 1.6573, 1.8095], [1.9804, 1.073, 1.1162, 1.6928]]], [[[1.9903, 1.7911, 1.1941, 1.2047], [1.4092, 1.0823, 1.9277, 1.6012], [1.4962, 1.7243, 1.2045, 1.2946]]], [[[1.2344, 1.1852, 1.0453, 1.0203], [1.6857, 1.7788, 1.9844, 1.5018], [1.1062, 1.2535, 1.4826, 1.3222]]]]], 1, 2, 2, Up_50169), 
LRes59822 = reshape_layer(Up_50169, [3, 2, 24], Res59822), 
LRes85586 = reshape_layer(Res59822, [3, 48], Res85586), 
LDot90700 = dot_layer(Con60482,Res85586, 2, 2, Dot90700), 
LFla41996 = flatten_layer(Dot90700, Fla41996), 
exec_layers([LMin35547,LCon60482,LUp_50169,LRes59822,LRes85586,LDot90700,LFla41996],["Min35547","Con60482","Up_50169","Res59822","Res85586","Dot90700","Fla41996"],Fla41996,"Fla41996")

Actual (Unparsed): [[40.1901800, 37.1305925, 35.8054862, 36.5122744, 35.8200686, 32.5301151]]

Expected (Unparsed): [[40.19018028999998,37.130592570000005,35.80548644,36.51227466999999,35.82006845000001,32.53011524]]

Actual:   [[40.1902, 37.1306, 35.8055, 36.5123, 35.8201, 32.5302]]

Expected: [[40.1902, 37.1306, 35.8055, 36.5123, 35.8201, 32.5302]]