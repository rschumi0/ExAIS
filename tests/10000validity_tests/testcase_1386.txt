import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Cro75354 = tf.keras.layers.Input(shape=([4, 2, 1, 3]))
in0Sub55224 = tf.keras.layers.Input(shape=([3, 2]))
in1Sub55224 = tf.keras.layers.Input(shape=([3, 2]))
in0Con12244 = tf.keras.layers.Input(shape=([4, 4]))
in0Mul70597 = tf.keras.layers.Input(shape=([1, 2, 1]))
in1Mul70597 = tf.keras.layers.Input(shape=([1, 2, 1]))

Cro75354 = keras.layers.Cropping3D(cropping=((0, 0), (0, 0), (0, 0)), name = 'Cro75354', )(in0Cro75354)
Sof27532 = keras.layers.Softmax(axis=1, name = 'Sof27532', )(Cro75354)
Res71107 = keras.layers.Reshape((4, 2, 3), name = 'Res71107', )(Sof27532)
Res83332 = keras.layers.Reshape((4, 6), name = 'Res83332', )(Res71107)
Sub55224 = keras.layers.Subtract(name = 'Sub55224', )([in0Sub55224,in1Sub55224])
Zer66264 = keras.layers.ZeroPadding1D(padding=((1, 0)), name = 'Zer66264', )(Sub55224)
Con12244 = keras.layers.Concatenate(axis=2, name = 'Con12244', )([Zer66264,in0Con12244])
Sub40868 = keras.layers.Subtract(name = 'Sub40868', )([Res83332,Con12244])
Res82987 = keras.layers.Reshape((4, 6, 1), name = 'Res82987', )(Sub40868)
Mul70597 = keras.layers.Multiply(name = 'Mul70597', )([in0Mul70597,in1Mul70597])
Zer10927 = keras.layers.ZeroPadding2D(padding=((3, 0), (4, 0)), name = 'Zer10927', )(Mul70597)
Sub68093 = keras.layers.Subtract(name = 'Sub68093', )([Res82987,Zer10927])
model = tf.keras.models.Model(inputs=[in0Cro75354,in0Sub55224,in1Sub55224,in0Con12244,in0Mul70597,in1Mul70597], outputs=Sub68093)
in0Cro75354 = tf.constant([[[[[1.4183, 1.579, 1.4016]], [[1.7596, 1.8186, 1.261]]], [[[1.9271, 1.9961, 1.1914]], [[1.6541, 1.7464, 1.8649]]], [[[1.648, 1.2632, 1.5158]], [[1.275, 1.5852, 1.729]]], [[[1.337, 1.4847, 1.7481]], [[1.3701, 1.5108, 1.8411]]]]])
in0Sub55224 = tf.constant([[[0.9568, 0.0305], [0.7433, 0.6505], [0.9364, 0.5757]]])
in1Sub55224 = tf.constant([[[0.9549, 0.6785], [0.9019, 0.543], [0.2629, 0.2673]]])
in0Con12244 = tf.constant([[[0.4253, 0.9049, 0.5758, 0.0199], [0.4622, 0.4291, 0.8728, 0.9245], [0.24, 0.4177, 0.5175, 0.0907], [0.1439, 0.5697, 0.8927, 0.5905]]])
in0Mul70597 = tf.constant([[[[0.4248], [0.5191]]]])
in1Mul70597 = tf.constant([[[[0.2822], [0.9547]]]])
print (np.array2string(model.predict([in0Cro75354,in0Sub55224,in1Sub55224,in0Con12244,in0Mul70597,in1Mul70597],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Sub68093.png')

LCro75354 = cropping3D_layer([[[[[1.4183, 1.579, 1.4016]], [[1.7596, 1.8186, 1.261]]], [[[1.9271, 1.9961, 1.1914]], [[1.6541, 1.7464, 1.8649]]], [[[1.648, 1.2632, 1.5158]], [[1.275, 1.5852, 1.729]]], [[[1.337, 1.4847, 1.7481]], [[1.3701, 1.5108, 1.8411]]]]], 0, 0, 0, 0, 0, 0, Cro75354), 
LSof27532 = softmax_layer(Cro75354, 1, Sof27532), 
LRes71107 = reshape_layer(Sof27532, [4, 2, 3], Res71107), 
LRes83332 = reshape_layer(Res71107, [4, 6], Res83332), 
LSub55224 = subtract_layer([[[0.9568, 0.0305], [0.7433, 0.6505], [0.9364, 0.5757]]], [[[0.9549, 0.6785], [0.9019, 0.543], [0.2629, 0.2673]]], Sub55224), 
LZer66264 = zero_padding1D_layer(Sub55224, 1, 0, Zer66264), 
LCon12244 = concatenate_layer([Zer66264,[[[0.4253, 0.9049, 0.5758, 0.0199], [0.4622, 0.4291, 0.8728, 0.9245], [0.24, 0.4177, 0.5175, 0.0907], [0.1439, 0.5697, 0.8927, 0.5905]]]], 2, Con12244), 
LSub40868 = subtract_layer(Res83332,Con12244, Sub40868), 
LRes82987 = reshape_layer(Sub40868, [4, 6, 1], Res82987), 
LMul70597 = multiply_layer([[[[[0.4248], [0.5191]]]], [[[[0.2822], [0.9547]]]]], Mul70597), 
LZer10927 = zero_padding2D_layer(Mul70597, 3, 0, 4, 0, Zer10927), 
LSub68093 = subtract_layer(Res82987,Zer10927, Sub68093), 
exec_layers([LCro75354,LSof27532,LRes71107,LRes83332,LSub55224,LZer66264,LCon12244,LSub40868,LRes82987,LMul70597,LZer10927,LSub68093],["Cro75354","Sof27532","Res71107","Res83332","Sub55224","Zer66264","Con12244","Sub40868","Res82987","Mul70597","Zer10927","Sub68093"],Sub68093,"Sub68093")

Actual (Unparsed): [[[[0.2064651], [0.2405715], [-0.1951773], [-0.5917358], [-0.2865522], [0.1410722]], [[0.3415122], [1.0130802], [-0.2757035], [-0.1472916], [-0.6036999], [-0.6300434]], [[0.4183790], [0.0679260], [0.0179621], [-0.2248086], [-0.2884630], [0.1663400]], [[-0.4831563], [-0.0894776], [0.1815187], [-0.3575640], [-0.7999635], [-0.7985535]]]]

Expected (Unparsed): [[[[0.2064650992383869],[0.24057144827283597],[-0.19517730444321135],[-0.5917358458985144],[-0.2865522555314398],[0.14107218480938244]],[[0.3415121698657807],[1.0130802263469285],[-0.2757034713773773],[-0.1472915719134168],[-0.6036998626381339],[-0.6300434114576203]],[[0.4183790305511336],[0.06792596948943522],[0.017962087287899664],[-0.22480856704873353],[-0.28846299871130127],[0.16633996660848216]],[[-0.48315629965530116],[-0.08947764410919959],[0.18151868853268896],[-0.35756401513933533],[-0.7999634431191249],[-0.7985535099602442]]]]

Actual:   [[[[0.2065], [0.2406], [-0.1951], [-0.5917], [-0.2865], [0.1411]], [[0.3416], [1.0131], [-0.2757], [-0.1472], [-0.6036], [-0.63]], [[0.4184], [0.068], [0.018], [-0.2248], [-0.2884], [0.1664]], [[-0.4831], [-0.0894], [0.1816], [-0.3575], [-0.7999], [-0.7985]]]]

Expected: [[[[0.2065], [0.2406], [-0.1951], [-0.5917], [-0.2865], [0.1411]], [[0.3416], [1.0131], [-0.2757], [-0.1472], [-0.6036], [-0.63]], [[0.4184], [0.068], [0.018], [-0.2248], [-0.2884], [0.1664]], [[-0.4831], [-0.0894], [0.1816], [-0.3575], [-0.7999], [-0.7985]]]]