import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Sub15638 = tf.keras.layers.Input(shape=([2, 3, 2, 2]))
in1Sub15638 = tf.keras.layers.Input(shape=([2, 3, 2, 2]))
in0Up_66075 = tf.keras.layers.Input(shape=([4, 4, 3, 2]))
in0Up_16987 = tf.keras.layers.Input(shape=([2, 1, 3]))
in0Con22438 = tf.keras.layers.Input(shape=([8, 4, 9]))
in0ReL47631 = tf.keras.layers.Input(shape=([2, 1, 2, 2]))

Sub15638 = keras.layers.Subtract(name = 'Sub15638', )([in0Sub15638,in1Sub15638])
Thr83774 = keras.layers.ThresholdedReLU(theta=7.528792115845582, name = 'Thr83774', )(Sub15638)
Res2105 = keras.layers.Reshape((2, 3, 4), name = 'Res2105', )(Thr83774)
Con49142 = keras.layers.Conv2DTranspose(3, (2, 3),strides=(1, 1), padding='same', name = 'Con49142', )(Res2105)
Res70439 = keras.layers.Reshape((2, 3, 3, 1), name = 'Res70439', )(Con49142)
Zer11702 = keras.layers.ZeroPadding3D(padding=((6, 0), (1, 0), (9, 0)), name = 'Zer11702', )(Res70439)
Up_66075 = keras.layers.UpSampling3D(size=(2, 1, 2), name = 'Up_66075', )(in0Up_66075)
Res22930 = keras.layers.Reshape((8, 4, 12), name = 'Res22930', )(Up_66075)
Up_16987 = keras.layers.UpSampling2D(size=(2, 1), name = 'Up_16987', )(in0Up_16987)
Zer17478 = keras.layers.ZeroPadding2D(padding=((4, 0), (3, 0)), name = 'Zer17478', )(Up_16987)
Con22438 = keras.layers.Concatenate(axis=3, name = 'Con22438', )([Zer17478,in0Con22438])
Mul40983 = keras.layers.Multiply(name = 'Mul40983', )([Res22930,Con22438])
Res98255 = keras.layers.Reshape((8, 4, 12, 1), name = 'Res98255', )(Mul40983)
ReL47631 = keras.layers.ReLU(max_value=6.1799452939878, negative_slope=1.9623922388157033, threshold=7.280067246413267, name = 'ReL47631', input_shape=(2, 1, 2, 2))(in0ReL47631)
Res16520 = keras.layers.Reshape((2, 1, 4), name = 'Res16520', )(ReL47631)
Cro26176 = keras.layers.Cropping2D(cropping=((1, 0), (0, 0)), name = 'Cro26176', )(Res16520)
Res21949 = keras.layers.Reshape((1, 1, 4, 1), name = 'Res21949', )(Cro26176)
Cro75893 = keras.layers.Cropping3D(cropping=((0, 0), (0, 0), (2, 1)), name = 'Cro75893', )(Res21949)
Zer1393 = keras.layers.ZeroPadding3D(padding=((7, 0), (3, 0), (11, 0)), name = 'Zer1393', )(Cro75893)
Sub40036 = keras.layers.Subtract(name = 'Sub40036', )([Res98255,Zer1393])
Min43328 = keras.layers.Minimum(name = 'Min43328', )([Zer11702,Sub40036])
model = tf.keras.models.Model(inputs=[in0Sub15638,in1Sub15638,in0Up_66075,in0Up_16987,in0Con22438,in0ReL47631], outputs=Min43328)
w = model.get_layer('Con49142').get_weights() 
w[0] = np.array([[[[0.0852, 0.7852, 0.4132, 0.124], [0.5272, 0.3314, 0.6709, 0.0966], [0.8955, 0.1628, 0.6524, 0.5918]], [[0.5449, 0.4007, 0.529, 0.4156], [0.1427, 0.9014, 0.5346, 0.5616], [0.1458, 0.8217, 0.3779, 0.0069]], [[0.7144, 0.6018, 0.841, 0.368], [0.8761, 0.714, 0.9454, 0.5366], [0.8311, 0.3266, 0.1597, 0.861]]], [[[0.6532, 0.3725, 0.9999, 0.9166], [0.2799, 0.3784, 0.0306, 0.4182], [0.6084, 0.8105, 0.7138, 0.3658]], [[0.7196, 0.6236, 0.771, 0.0884], [0.7364, 0.1619, 0.726, 0.4506], [0.5897, 0.5529, 0.0793, 0.1232]], [[0.0123, 0.2607, 0.1242, 0.4821], [0.4122, 0.5205, 0.7653, 0.397], [0.8848, 0.9624, 0.8214, 0.8987]]]])
w[1] = np.array([0, 0, 0])
model.get_layer('Con49142').set_weights(w) 
in0Sub15638 = tf.constant([[[[[0.4317, 0.2793], [0.5651, 0.1204]], [[0.7395, 0.7479], [0.9294, 0.4422]], [[0.8685, 0.6732], [0.7879, 0.8317]]], [[[0.2751, 0.9022], [0.9371, 0.5623]], [[0.4569, 0.742], [0.0816, 0.3477]], [[0.5686, 0.8498], [0.8473, 0.7639]]]]])
in1Sub15638 = tf.constant([[[[[0.7795, 0.823], [0.2758, 0.2751]], [[0.9633, 0.2403], [0.6063, 0.2693]], [[0.5327, 0.0649], [0.572, 0.9973]]], [[[0.0982, 0.3895], [0.011, 0.206]], [[0.1626, 0.4739], [0.3269, 0.557]], [[0.2462, 0.91], [0.2168, 0.6307]]]]])
in0Up_66075 = tf.constant([[[[[1.6764, 1.5307], [1.1341, 1.4287], [1.7765, 1.3748]], [[1.148, 1.8117], [1.338, 1.6176], [1.2238, 1.2301]], [[1.0724, 1.8799], [1.4547, 1.4456], [1.2041, 1.7441]], [[1.4508, 1.6746], [1.4872, 1.6171], [1.911, 1.7331]]], [[[1.7082, 1.3087], [1.3889, 1.3149], [1.1705, 1.8215]], [[1.3986, 1.4902], [1.7487, 1.8849], [1.3026, 1.8789]], [[1.8454, 1.707], [1.8715, 1.7215], [1.9894, 1.2712]], [[1.0154, 1.2482], [1.8709, 1.2517], [1.9447, 1.3295]]], [[[1.3283, 1.2917], [1.9429, 1.3804], [1.1695, 1.9482]], [[1.0024, 1.8872], [1.7425, 1.0862], [1.8125, 1.7257]], [[1.8529, 1.8813], [1.9707, 1.6495], [1.9657, 1.8787]], [[1.8371, 1.9394], [1.6286, 1.7464], [1.1478, 1.2284]]], [[[1.7055, 1.4616], [1.3634, 1.9392], [1.3175, 1.6716]], [[1.7379, 1.6088], [1.358, 1.8842], [1.2648, 1.6103]], [[1.0664, 1.9574], [1.9819, 1.4301], [1.4261, 1.0843]], [[1.5965, 1.708], [1.0864, 1.097], [1.0311, 1.7094]]]]])
in0Up_16987 = tf.constant([[[[1.0981, 1.4506, 1.2852]], [[1.7579, 1.9998, 1.6905]]]])
in0Con22438 = tf.constant([[[[0.7289, 0.1248, 0.8095, 0.0045, 0.4592, 0.1282, 0.3023, 0.7129, 0.4292], [0.9857, 0.9318, 0.9615, 0.0564, 0.733, 0.4888, 0.3407, 0.3563, 0.5476], [0.2266, 0.2475, 0.2437, 0.3819, 0.5728, 0.336, 0.2169, 0.8418, 0.6856], [0.5379, 0.7828, 0.9438, 0.2587, 0.7147, 0.2411, 0.4703, 0.1997, 0.1674]], [[0.8685, 0.1292, 0.6728, 0.2932, 0.1146, 0.6196, 0.5326, 0.655, 0.1564], [0.0086, 0.3518, 0.6097, 0.0437, 0.532, 0.0951, 0.424, 0.713, 0.0436], [0.9805, 0.5042, 0.3467, 0.8613, 0.229, 0.9583, 0.9106, 0.6839, 0.2101], [0.2218, 0.218, 0.5851, 0.9556, 0.8808, 0.5333, 0.8295, 0.1397, 0.1518]], [[0.5575, 0.4043, 0.3976, 0.694, 0.6163, 0.7086, 0.2926, 0.5661, 0.0112], [0.8011, 0.3306, 0.1698, 0.7867, 0.9735, 0.1692, 0.9703, 0.6173, 0.184], [0.5707, 0.6276, 0.1255, 0.064, 0.7094, 0.9309, 0.7016, 0.7952, 0.1571], [0.5884, 0.8203, 0.1394, 0.2461, 0.4911, 0.9174, 0.3051, 0.534, 0.5441]], [[0.1288, 0.1299, 0.7811, 0.5395, 0.5748, 0.271, 0.1917, 0.8285, 0.422], [0.7084, 0.6668, 0.7449, 0.6524, 0.8844, 0.4714, 0.8308, 0.3262, 0.2334], [0.0246, 0.9188, 0.1382, 0.6845, 0.4929, 0.0372, 0.2354, 0.9633, 0.4825], [0.9218, 0.5916, 0.1614, 0.4104, 0.6414, 0.7106, 0.0939, 0.0642, 0.4745]], [[0.0739, 0.4272, 0.4548, 0.7099, 0.538, 0.4181, 0.3109, 0.4875, 0.8387], [0.3789, 0.4686, 0.1426, 0.4649, 0.6613, 0.9688, 0.774, 0.4298, 0.0297], [0.8909, 0.9152, 0.882, 0.7906, 0.8236, 0.2571, 0.0789, 0.9341, 0.4001], [0.3427, 0.9728, 0.8498, 0.5144, 0.0362, 0.5488, 0.8837, 0.6693, 0.3521]], [[0.0991, 0.1213, 0.4093, 0.9257, 0.8157, 0.2976, 0.9441, 0.0021, 0.442], [0.6652, 0.8735, 0.328, 0.2365, 0.9846, 0.3979, 0.739, 0.1684, 0.5359], [0.5134, 0.5562, 0.0942, 0.203, 0.4728, 0.1258, 0.6416, 0.2279, 0.2285], [0.9678, 0.6671, 0.1927, 0.6618, 0.0346, 0.4473, 0.1518, 0.1518, 0.5239]], [[0.2147, 0.6063, 0.4413, 0.5381, 0.2521, 0.1893, 0.8127, 0.6367, 0.5276], [0.5147, 0.3094, 0.9914, 0.7662, 0.6306, 0.1024, 0.4185, 0.9326, 0.9134], [0.1373, 0.0393, 0.3289, 0.0432, 0.876, 0.696, 0.9004, 0.9042, 0.2915], [0.5406, 0.8858, 0.8736, 0.2709, 0.4026, 0.6482, 0.979, 0.2326, 0.6443]], [[0.3792, 0.8323, 0.0764, 0.2122, 0.3838, 0.0818, 0.5494, 0.5094, 0.8184], [0.3631, 0.7331, 0.5277, 0.0837, 0.3734, 0.634, 0.4033, 0.5523, 0.7481], [0.7979, 0.1884, 0.9513, 0.8754, 0.455, 0.1701, 0.5118, 0.6473, 0.953], [0.5071, 0.949, 0.4198, 0.1368, 0.3045, 0.4426, 0.1263, 0.8939, 0.5037]]]])
in0ReL47631 = tf.constant([[[[[0.9561, 0.4324], [0.6958, 0.5542]]], [[[0.87, 0.0059], [0.1266, 0.1156]]]]])
print (np.array2string(model.predict([in0Sub15638,in1Sub15638,in0Up_66075,in0Up_16987,in0Con22438,in0ReL47631],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Min43328.png')

LSub15638 = subtract_layer([[[[[0.4317, 0.2793], [0.5651, 0.1204]], [[0.7395, 0.7479], [0.9294, 0.4422]], [[0.8685, 0.6732], [0.7879, 0.8317]]], [[[0.2751, 0.9022], [0.9371, 0.5623]], [[0.4569, 0.742], [0.0816, 0.3477]], [[0.5686, 0.8498], [0.8473, 0.7639]]]]], [[[[[0.7795, 0.823], [0.2758, 0.2751]], [[0.9633, 0.2403], [0.6063, 0.2693]], [[0.5327, 0.0649], [0.572, 0.9973]]], [[[0.0982, 0.3895], [0.011, 0.206]], [[0.1626, 0.4739], [0.3269, 0.557]], [[0.2462, 0.91], [0.2168, 0.6307]]]]], Sub15638), 
LThr83774 = thresholded_relu_layer(Sub15638, 7.528792115845582, Thr83774), 
LRes2105 = reshape_layer(Thr83774, [2, 3, 4], Res2105), 
LCon49142 = conv2D_transpose_layer(Res2105, 2, 3,[[[[0.0852, 0.7852, 0.4132, 0.124], [0.5272, 0.3314, 0.6709, 0.0966], [0.8955, 0.1628, 0.6524, 0.5918]], [[0.5449, 0.4007, 0.529, 0.4156], [0.1427, 0.9014, 0.5346, 0.5616], [0.1458, 0.8217, 0.3779, 0.0069]], [[0.7144, 0.6018, 0.841, 0.368], [0.8761, 0.714, 0.9454, 0.5366], [0.8311, 0.3266, 0.1597, 0.861]]], [[[0.6532, 0.3725, 0.9999, 0.9166], [0.2799, 0.3784, 0.0306, 0.4182], [0.6084, 0.8105, 0.7138, 0.3658]], [[0.7196, 0.6236, 0.771, 0.0884], [0.7364, 0.1619, 0.726, 0.4506], [0.5897, 0.5529, 0.0793, 0.1232]], [[0.0123, 0.2607, 0.1242, 0.4821], [0.4122, 0.5205, 0.7653, 0.397], [0.8848, 0.9624, 0.8214, 0.8987]]]],[0, 0, 0], 1, 1, true, Con49142), 
LRes70439 = reshape_layer(Con49142, [2, 3, 3, 1], Res70439), 
LZer11702 = zero_padding3D_layer(Res70439, 6, 0, 1, 0, 9, 0, Zer11702), 
LUp_66075 = up_sampling3D_layer([[[[[1.6764, 1.5307], [1.1341, 1.4287], [1.7765, 1.3748]], [[1.148, 1.8117], [1.338, 1.6176], [1.2238, 1.2301]], [[1.0724, 1.8799], [1.4547, 1.4456], [1.2041, 1.7441]], [[1.4508, 1.6746], [1.4872, 1.6171], [1.911, 1.7331]]], [[[1.7082, 1.3087], [1.3889, 1.3149], [1.1705, 1.8215]], [[1.3986, 1.4902], [1.7487, 1.8849], [1.3026, 1.8789]], [[1.8454, 1.707], [1.8715, 1.7215], [1.9894, 1.2712]], [[1.0154, 1.2482], [1.8709, 1.2517], [1.9447, 1.3295]]], [[[1.3283, 1.2917], [1.9429, 1.3804], [1.1695, 1.9482]], [[1.0024, 1.8872], [1.7425, 1.0862], [1.8125, 1.7257]], [[1.8529, 1.8813], [1.9707, 1.6495], [1.9657, 1.8787]], [[1.8371, 1.9394], [1.6286, 1.7464], [1.1478, 1.2284]]], [[[1.7055, 1.4616], [1.3634, 1.9392], [1.3175, 1.6716]], [[1.7379, 1.6088], [1.358, 1.8842], [1.2648, 1.6103]], [[1.0664, 1.9574], [1.9819, 1.4301], [1.4261, 1.0843]], [[1.5965, 1.708], [1.0864, 1.097], [1.0311, 1.7094]]]]], 2, 1, 2, Up_66075), 
LRes22930 = reshape_layer(Up_66075, [8, 4, 12], Res22930), 
LUp_16987 = up_sampling2D_layer([[[[1.0981, 1.4506, 1.2852]], [[1.7579, 1.9998, 1.6905]]]], 2, 1, Up_16987), 
LZer17478 = zero_padding2D_layer(Up_16987, 4, 0, 3, 0, Zer17478), 
LCon22438 = concatenate_layer([Zer17478,[[[[0.7289, 0.1248, 0.8095, 0.0045, 0.4592, 0.1282, 0.3023, 0.7129, 0.4292], [0.9857, 0.9318, 0.9615, 0.0564, 0.733, 0.4888, 0.3407, 0.3563, 0.5476], [0.2266, 0.2475, 0.2437, 0.3819, 0.5728, 0.336, 0.2169, 0.8418, 0.6856], [0.5379, 0.7828, 0.9438, 0.2587, 0.7147, 0.2411, 0.4703, 0.1997, 0.1674]], [[0.8685, 0.1292, 0.6728, 0.2932, 0.1146, 0.6196, 0.5326, 0.655, 0.1564], [0.0086, 0.3518, 0.6097, 0.0437, 0.532, 0.0951, 0.424, 0.713, 0.0436], [0.9805, 0.5042, 0.3467, 0.8613, 0.229, 0.9583, 0.9106, 0.6839, 0.2101], [0.2218, 0.218, 0.5851, 0.9556, 0.8808, 0.5333, 0.8295, 0.1397, 0.1518]], [[0.5575, 0.4043, 0.3976, 0.694, 0.6163, 0.7086, 0.2926, 0.5661, 0.0112], [0.8011, 0.3306, 0.1698, 0.7867, 0.9735, 0.1692, 0.9703, 0.6173, 0.184], [0.5707, 0.6276, 0.1255, 0.064, 0.7094, 0.9309, 0.7016, 0.7952, 0.1571], [0.5884, 0.8203, 0.1394, 0.2461, 0.4911, 0.9174, 0.3051, 0.534, 0.5441]], [[0.1288, 0.1299, 0.7811, 0.5395, 0.5748, 0.271, 0.1917, 0.8285, 0.422], [0.7084, 0.6668, 0.7449, 0.6524, 0.8844, 0.4714, 0.8308, 0.3262, 0.2334], [0.0246, 0.9188, 0.1382, 0.6845, 0.4929, 0.0372, 0.2354, 0.9633, 0.4825], [0.9218, 0.5916, 0.1614, 0.4104, 0.6414, 0.7106, 0.0939, 0.0642, 0.4745]], [[0.0739, 0.4272, 0.4548, 0.7099, 0.538, 0.4181, 0.3109, 0.4875, 0.8387], [0.3789, 0.4686, 0.1426, 0.4649, 0.6613, 0.9688, 0.774, 0.4298, 0.0297], [0.8909, 0.9152, 0.882, 0.7906, 0.8236, 0.2571, 0.0789, 0.9341, 0.4001], [0.3427, 0.9728, 0.8498, 0.5144, 0.0362, 0.5488, 0.8837, 0.6693, 0.3521]], [[0.0991, 0.1213, 0.4093, 0.9257, 0.8157, 0.2976, 0.9441, 0.0021, 0.442], [0.6652, 0.8735, 0.328, 0.2365, 0.9846, 0.3979, 0.739, 0.1684, 0.5359], [0.5134, 0.5562, 0.0942, 0.203, 0.4728, 0.1258, 0.6416, 0.2279, 0.2285], [0.9678, 0.6671, 0.1927, 0.6618, 0.0346, 0.4473, 0.1518, 0.1518, 0.5239]], [[0.2147, 0.6063, 0.4413, 0.5381, 0.2521, 0.1893, 0.8127, 0.6367, 0.5276], [0.5147, 0.3094, 0.9914, 0.7662, 0.6306, 0.1024, 0.4185, 0.9326, 0.9134], [0.1373, 0.0393, 0.3289, 0.0432, 0.876, 0.696, 0.9004, 0.9042, 0.2915], [0.5406, 0.8858, 0.8736, 0.2709, 0.4026, 0.6482, 0.979, 0.2326, 0.6443]], [[0.3792, 0.8323, 0.0764, 0.2122, 0.3838, 0.0818, 0.5494, 0.5094, 0.8184], [0.3631, 0.7331, 0.5277, 0.0837, 0.3734, 0.634, 0.4033, 0.5523, 0.7481], [0.7979, 0.1884, 0.9513, 0.8754, 0.455, 0.1701, 0.5118, 0.6473, 0.953], [0.5071, 0.949, 0.4198, 0.1368, 0.3045, 0.4426, 0.1263, 0.8939, 0.5037]]]]], 3, Con22438), 
LMul40983 = multiply_layer([Res22930,Con22438], Mul40983), 
LRes98255 = reshape_layer(Mul40983, [8, 4, 12, 1], Res98255), 
LReL47631 = relu_layer([[[[[0.9561, 0.4324], [0.6958, 0.5542]]], [[[0.87, 0.0059], [0.1266, 0.1156]]]]], 6.1799452939878, 1.9623922388157033, 7.280067246413267, ReL47631), 
LRes16520 = reshape_layer(ReL47631, [2, 1, 4], Res16520), 
LCro26176 = cropping2D_layer(Res16520, 1, 0, 0, 0, Cro26176), 
LRes21949 = reshape_layer(Cro26176, [1, 1, 4, 1], Res21949), 
LCro75893 = cropping3D_layer(Res21949, 0, 0, 0, 0, 2, 1, Cro75893), 
LZer1393 = zero_padding3D_layer(Cro75893, 7, 0, 3, 0, 11, 0, Zer1393), 
LSub40036 = subtract_layer(Res98255,Zer1393, Sub40036), 
LMin43328 = minimum_layer([Zer11702,Sub40036], Min43328), 
exec_layers([LSub15638,LThr83774,LRes2105,LCon49142,LRes70439,LZer11702,LUp_66075,LRes22930,LUp_16987,LZer17478,LCon22438,LMul40983,LRes98255,LReL47631,LRes16520,LCro26176,LRes21949,LCro75893,LZer1393,LSub40036,LMin43328],["Sub15638","Thr83774","Res2105","Con49142","Res70439","Zer11702","Up_66075","Res22930","Up_16987","Zer17478","Con22438","Mul40983","Res98255","ReL47631","Res16520","Cro26176","Res21949","Cro75893","Zer1393","Sub40036","Min43328"],Min43328,"Min43328")

Actual (Unparsed): [[[[[0.0000000], [0.0000000], [0.0000000], [0.0000000], [0.0000000], [0.0000000], [0.0000000], [0.0000000], [0.0000000], [0.0000000], [0.0000000], [0.0000000]], [[0.0000000], [0.0000000], [0.0000000], [0.0000000], [0.0000000], [0.0000000], [0.0000000], [0.0000000], [0.0000000], [0.0000000], [0.0000000], [0.0000000]], [[0.0000000], [0.0000000], [0.0000000], [0.0000000], [0.0000000], [0.0000000], [0.0000000], [0.0000000], [0.0000000], [0.0000000], [0.0000000], [0.0000000]], [[0.0000000], [0.0000000], [0.0000000], [0.0000000], [0.0000000], [0.0000000], [0.0000000], [0.0000000], [0.0000000], [0.0000000], [0.0000000], [0.0000000]]], [[[0.0000000], [0.0000000], [0.0000000], [0.0000000], [0.0000000], [0.0000000], [0.0000000], [0.0000000], [0.0000000], [0.0000000], [0.0000000], [0.0000000]], [[0.0000000], [0.0000000], [0.0000000], [0.0000000], [0.0000000], [0.0000000], [0.0000000], [0.0000000], [0.0000000], [0.0000000], [0.0000000], [0.0000000]], [[0.0000000], [0.0000000], [0.0000000], [0.0000000], [0.0000000], [0.0000000], [0.0000000], [0.0000000], [0.0000000], [0.0000000], [0.0000000], [0.0000000]], [[0.0000000], [0.0000000], [0.0000000], [0.0000000], [0.0000000], [0.0000000], [0.0000000], [0.0000000], [0.0000000], [0.0000000], [0.0000000], [0.0000000]]], [[[0.0000000], [0.0000000], [0.0000000], [0.0000000], [0.0000000], [0.0000000], [0.0000000], [0.0000000], [0.0000000], [0.0000000], [0.0000000], [0.0000000]], [[0.0000000], [0.0000000], [0.0000000], [0.0000000], [0.0000000], [0.0000000], [0.0000000], [0.0000000], [0.0000000], [0.0000000], [0.0000000], [0.0000000]], [[0.0000000], [0.0000000], [0.0000000], [0.0000000], [0.0000000], [0.0000000], [0.0000000], [0.0000000], [0.0000000], [0.0000000], [0.0000000], [0.0000000]], [[0.0000000], [0.0000000], [0.0000000], [0.0000000], [0.0000000], [0.0000000], [0.0000000], [0.0000000], [0.0000000], [0.0000000], [0.0000000], [0.0000000]]], [[[0.0000000], [0.0000000], [0.0000000], [0.0000000], [0.0000000], [0.0000000], [0.0000000], [0.0000000], [0.0000000], [0.0000000], [0.0000000], [0.0000000]], [[0.0000000], [0.0000000], [0.0000000], [0.0000000], [0.0000000], [0.0000000], [0.0000000], [0.0000000], [0.0000000], [0.0000000], [0.0000000], [0.0000000]], [[0.0000000], [0.0000000], [0.0000000], [0.0000000], [0.0000000], [0.0000000], [0.0000000], [0.0000000], [0.0000000], [0.0000000], [0.0000000], [0.0000000]], [[0.0000000], [0.0000000], [0.0000000], [0.0000000], [0.0000000], [0.0000000], [0.0000000], [0.0000000], [0.0000000], [0.0000000], [0.0000000], [0.0000000]]], [[[0.0000000], [0.0000000], [0.0000000], [0.0000000], [0.0000000], [0.0000000], [0.0000000], [0.0000000], [0.0000000], [0.0000000], [0.0000000], [0.0000000]], [[0.0000000], [0.0000000], [0.0000000], [0.0000000], [0.0000000], [0.0000000], [0.0000000], [0.0000000], [0.0000000], [0.0000000], [0.0000000], [0.0000000]], [[0.0000000], [0.0000000], [0.0000000], [0.0000000], [0.0000000], [0.0000000], [0.0000000], [0.0000000], [0.0000000], [0.0000000], [0.0000000], [0.0000000]], [[0.0000000], [0.0000000], [0.0000000], [0.0000000], [0.0000000], [0.0000000], [0.0000000], [0.0000000], [0.0000000], [0.0000000], [0.0000000], [0.0000000]]], [[[0.0000000], [0.0000000], [0.0000000], [0.0000000], [0.0000000], [0.0000000], [0.0000000], [0.0000000], [0.0000000], [0.0000000], [0.0000000], [0.0000000]], [[0.0000000], [0.0000000], [0.0000000], [0.0000000], [0.0000000], [0.0000000], [0.0000000], [0.0000000], [0.0000000], [0.0000000], [0.0000000], [0.0000000]], [[0.0000000], [0.0000000], [0.0000000], [0.0000000], [0.0000000], [0.0000000], [0.0000000], [0.0000000], [0.0000000], [0.0000000], [0.0000000], [0.0000000]], [[0.0000000], [0.0000000], [0.0000000], [0.0000000], [0.0000000], [0.0000000], [0.0000000], [0.0000000], [0.0000000], [0.0000000], [0.0000000], [0.0000000]]], [[[0.0000000], [0.0000000], [0.0000000], [0.0000000], [0.0000000], [0.0000000], [0.0000000], [0.0000000], [0.0000000], [0.0000000], [0.0000000], [0.0000000]], [[0.0000000], [0.0000000], [0.0000000], [0.0000000], [0.0000000], [0.0000000], [0.0000000], [0.0000000], [0.0000000], [0.0000000], [0.0000000], [0.0000000]], [[0.0000000], [0.0000000], [0.0000000], [0.0000000], [0.0000000], [0.0000000], [0.0000000], [0.0000000], [0.0000000], [0.0000000], [0.0000000], [0.0000000]], [[0.0000000], [0.0000000], [0.0000000], [0.0000000], [0.0000000], [0.0000000], [0.0000000], [0.0000000], [0.0000000], [0.0000000], [0.0000000], [0.0000000]]], [[[0.0000000], [0.0000000], [0.0000000], [0.0000000], [0.0000000], [0.0000000], [0.0000000], [0.0000000], [0.0000000], [0.0000000], [0.0000000], [0.0000000]], [[0.0000000], [0.0000000], [0.0000000], [0.0000000], [0.0000000], [0.0000000], [0.0000000], [0.0000000], [0.0000000], [0.0000000], [0.0000000], [0.0000000]], [[0.0000000], [0.0000000], [0.0000000], [0.0000000], [0.0000000], [0.0000000], [0.0000000], [0.0000000], [0.0000000], [0.0000000], [0.0000000], [0.0000000]], [[0.0000000], [0.0000000], [0.0000000], [0.0000000], [0.0000000], [0.0000000], [0.0000000], [0.0000000], [0.0000000], [0.0000000], [0.0000000], [0.0000000]]]]]

Expected (Unparsed): [[[[[0],[0],[0],[0],[0],[0],[0],[0],[0],[0],[0],[0]],[[0],[0],[0],[0],[0],[0],[0],[0],[0],[0],[0],[0]],[[0],[0],[0],[0],[0],[0],[0],[0],[0],[0],[0],[0]],[[0],[0],[0],[0],[0],[0],[0],[0],[0],[0],[0],[0]]],[[[0],[0],[0],[0],[0],[0],[0],[0],[0],[0],[0],[0]],[[0],[0],[0],[0],[0],[0],[0],[0],[0],[0],[0],[0]],[[0],[0],[0],[0],[0],[0],[0],[0],[0],[0],[0],[0]],[[0],[0],[0],[0],[0],[0],[0],[0],[0],[0],[0],[0]]],[[[0],[0],[0],[0],[0],[0],[0],[0],[0],[0],[0],[0]],[[0],[0],[0],[0],[0],[0],[0],[0],[0],[0],[0],[0]],[[0],[0],[0],[0],[0],[0],[0],[0],[0],[0],[0],[0]],[[0],[0],[0],[0],[0],[0],[0],[0],[0],[0],[0],[0]]],[[[0],[0],[0],[0],[0],[0],[0],[0],[0],[0],[0],[0]],[[0],[0],[0],[0],[0],[0],[0],[0],[0],[0],[0],[0]],[[0],[0],[0],[0],[0],[0],[0],[0],[0],[0],[0],[0]],[[0],[0],[0],[0],[0],[0],[0],[0],[0],[0],[0],[0]]],[[[0],[0],[0],[0],[0],[0],[0],[0],[0],[0],[0],[0]],[[0],[0],[0],[0],[0],[0],[0],[0],[0],[0],[0],[0]],[[0],[0],[0],[0],[0],[0],[0],[0],[0],[0],[0],[0]],[[0],[0],[0],[0],[0],[0],[0],[0],[0],[0],[0],[0]]],[[[0],[0],[0],[0],[0],[0],[0],[0],[0],[0],[0],[0]],[[0],[0],[0],[0],[0],[0],[0],[0],[0],[0],[0],[0]],[[0],[0],[0],[0],[0],[0],[0],[0],[0],[0],[0],[0]],[[0],[0],[0],[0],[0],[0],[0],[0],[0],[0],[0],[0]]],[[[0],[0],[0],[0],[0],[0],[0],[0],[0],[0],[0],[0]],[[0],[0],[0],[0],[0],[0],[0],[0],[0],[0.0],[0.0],[0.0]],[[0],[0],[0],[0],[0],[0],[0],[0],[0],[0.0],[0.0],[0.0]],[[0],[0],[0],[0],[0],[0],[0],[0],[0],[0.0],[0.0],[0.0]]],[[[0],[0],[0],[0],[0],[0],[0],[0],[0],[0],[0],[0]],[[0],[0],[0],[0],[0],[0],[0],[0],[0],[0.0],[0.0],[0.0]],[[0],[0],[0],[0],[0],[0],[0],[0],[0],[0.0],[0.0],[0.0]],[[0],[0],[0],[0],[0],[0],[0],[0],[0],[0.0],[0.0],[0.0]]]]]

Actual

Expected