import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Max1786 = tf.keras.layers.Input(shape=([2, 2, 2, 2]))
in1Max1786 = tf.keras.layers.Input(shape=([2, 2, 2, 2]))

Max1786 = keras.layers.Maximum(name = 'Max1786', )([in0Max1786,in1Max1786])
Res6848 = keras.layers.Reshape((2, 2, 4), name = 'Res6848', )(Max1786)
Res85456 = keras.layers.Reshape((2, 8), name = 'Res85456', )(Res6848)
Fla104 = keras.layers.Flatten(name = 'Fla104', )(Res85456)
Res78092 = keras.layers.Reshape((16, 1), name = 'Res78092', )(Fla104)
Res9771 = keras.layers.Reshape((16, 1, 1), name = 'Res9771', )(Res78092)
Res76778 = keras.layers.Reshape((16, 1, 1, 1), name = 'Res76778', )(Res9771)
Con55992 = keras.layers.Conv3D(4, (5, 1, 1),strides=(1, 11, 1), padding='same', dilation_rate=(1, 1, 1), name = 'Con55992', )(Res76778)
Res29302 = keras.layers.Reshape((16, 1, 4), name = 'Res29302', )(Con55992)
Res44230 = keras.layers.Reshape((16, 4), name = 'Res44230', )(Res29302)
Cro63992 = keras.layers.Cropping1D(cropping=((0, 8)), name = 'Cro63992', )(Res44230)
model = tf.keras.models.Model(inputs=[in0Max1786,in1Max1786], outputs=Cro63992)
w = model.get_layer('Con55992').get_weights() 
w[0] = np.array([[[[[0.1426, 0.274, 0.2372, 0.7834]]]], [[[[0.2695, 0.3318, 0.1705, 0.1233]]]], [[[[0.0826, 0.5414, 0.056, 0.1952]]]], [[[[0.9943, 0.5952, 0.2593, 0.5357]]]], [[[[0.467, 0.8857, 0.6823, 0.8992]]]]])
w[1] = np.array([0, 0, 0, 0])
model.get_layer('Con55992').set_weights(w) 
in0Max1786 = tf.constant([[[[[0.6832, 0.9649], [0.5826, 0.2389]], [[0.1762, 0.3236], [0.3652, 0.438]]], [[[0.7978, 0.2668], [0.3587, 0.3612]], [[0.4279, 0.5555], [0.99, 0.1891]]]]])
in1Max1786 = tf.constant([[[[[0.8442, 0.9566], [0.9874, 0.0479]], [[0.5027, 0.0374], [0.6067, 0.4363]]], [[[0.7044, 0.3843], [0.5332, 0.0975]], [[0.5784, 0.1448], [0.6248, 0.642]]]]])
print (np.array2string(model.predict([in0Max1786,in1Max1786],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Cro63992.png')

LMax1786 = maximum_layer([[[[[[0.6832, 0.9649], [0.5826, 0.2389]], [[0.1762, 0.3236], [0.3652, 0.438]]], [[[0.7978, 0.2668], [0.3587, 0.3612]], [[0.4279, 0.5555], [0.99, 0.1891]]]]], [[[[[0.8442, 0.9566], [0.9874, 0.0479]], [[0.5027, 0.0374], [0.6067, 0.4363]]], [[[0.7044, 0.3843], [0.5332, 0.0975]], [[0.5784, 0.1448], [0.6248, 0.642]]]]]], Max1786), 
LRes6848 = reshape_layer(Max1786, [2, 2, 4], Res6848), 
LRes85456 = reshape_layer(Res6848, [2, 8], Res85456), 
LFla104 = flatten_layer(Res85456, Fla104), 
LRes78092 = reshape_layer(Fla104, [16, 1], Res78092), 
LRes9771 = reshape_layer(Res78092, [16, 1, 1], Res9771), 
LRes76778 = reshape_layer(Res9771, [16, 1, 1, 1], Res76778), 
LCon55992 = conv3D_layer(Res76778, 5, 1, 1,[[[[[0.1426, 0.274, 0.2372, 0.7834]]]], [[[[0.2695, 0.3318, 0.1705, 0.1233]]]], [[[[0.0826, 0.5414, 0.056, 0.1952]]]], [[[[0.9943, 0.5952, 0.2593, 0.5357]]]], [[[[0.467, 0.8857, 0.6823, 0.8992]]]]],[0, 0, 0, 0], 1, 11, 1, true, 1, 1, 1, Con55992), 
LRes29302 = reshape_layer(Con55992, [16, 1, 4], Res29302), 
LRes44230 = reshape_layer(Res29302, [16, 4], Res44230), 
LCro63992 = cropping1D_layer(Res44230, 0, 8, Cro63992), 
exec_layers([LMax1786,LRes6848,LRes85456,LFla104,LRes78092,LRes9771,LRes76778,LCon55992,LRes29302,LRes44230,LCro63992],["Max1786","Res6848","Res85456","Fla104","Res78092","Res9771","Res76778","Con55992","Res29302","Res44230","Cro63992"],Cro63992,"Cro63992")

Actual (Unparsed): [[[1.4902468, 1.9058986, 0.9711768, 1.5695549], [1.4005508, 1.6017966, 0.6170048, 1.0362074], [0.9342819, 1.6734776, 0.8249931, 1.5530655], [1.0743880, 1.3071619, 0.7617468, 1.4845599], [0.8517942, 1.3519373, 0.8009558, 1.6200097], [1.0040620, 1.1564959, 0.6166637, 1.0311627], [1.0170846, 1.5408867, 0.8663018, 1.5041612], [1.2185505, 1.3423277, 0.6738057, 1.1867560]]]

Expected (Unparsed): [[[1.49024679,1.90589854,0.97117679,1.5695548499999998],[1.40055076,1.6017966299999997,0.61700479,1.0362074],[0.93428188,1.6734776500000001,0.82499307,1.5530655],[1.07438799,1.30716194,0.76174677,1.48455987],[0.8517941900000001,1.3519373100000003,0.80095582,1.62000973],[1.00406196,1.15649594,0.61666374,1.03116268],[1.01708464,1.54088672,0.8663017799999999,1.50416126],[1.21855045,1.3423277299999998,0.6738057,1.1867559699999999]]]

Actual:   [[[1.4903, 1.9059, 0.9712, 1.5696], [1.4006, 1.6018, 0.6171, 1.0363], [0.9343, 1.6735, 0.825, 1.5531], [1.0744, 1.3072, 0.7618, 1.4846], [0.8518, 1.352, 0.801, 1.6201], [1.0041, 1.1565, 0.6167, 1.0312], [1.0171, 1.5409, 0.8664, 1.5042], [1.2186, 1.3424, 0.6739, 1.1868]]]

Expected: [[[1.4903, 1.9059, 0.9712, 1.5696], [1.4006, 1.6018, 0.6171, 1.0363], [0.9343, 1.6735, 0.825, 1.5531], [1.0744, 1.3072, 0.7618, 1.4846], [0.8518, 1.352, 0.801, 1.6201], [1.0041, 1.1565, 0.6167, 1.0312], [1.0171, 1.5409, 0.8664, 1.5042], [1.2186, 1.3424, 0.6739, 1.1868]]]