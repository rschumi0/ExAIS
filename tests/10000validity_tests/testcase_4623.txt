import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Cro38886 = tf.keras.layers.Input(shape=([4, 4]))

Cro38886 = keras.layers.Cropping1D(cropping=((0, 1)), name = 'Cro38886', )(in0Cro38886)
Fla58227 = keras.layers.Flatten(name = 'Fla58227', )(Cro38886)
Res3145 = keras.layers.Reshape((12, 1), name = 'Res3145', )(Fla58227)
Con15141 = keras.layers.Conv1D(4, (9),strides=(1), padding='valid', dilation_rate=(1), name = 'Con15141', )(Res3145)
Lay86462 = keras.layers.LayerNormalization(axis=1, epsilon=1.4433909475915552, name = 'Lay86462', )(Con15141)
model = tf.keras.models.Model(inputs=[in0Cro38886], outputs=Lay86462)
w = model.get_layer('Con15141').get_weights() 
w[0] = np.array([[[0.5289, 0.4973, 0.5841, 0.1049]], [[0.5286, 0.9832, 0.9199, 0.4802]], [[0.2467, 0.3692, 0.0296, 0.4008]], [[0.379, 0.2151, 0.9042, 0.6802]], [[0.6895, 0.7065, 0.9616, 0.0476]], [[0.9725, 0.1067, 0.8278, 0.9319]], [[0.4437, 0.2514, 0.354, 0.954]], [[0.6899, 0.0029, 0.6896, 0.5328]], [[0.5659, 0.2542, 0.3749, 0.2015]]])
w[1] = np.array([0, 0, 0, 0])
model.get_layer('Con15141').set_weights(w) 
in0Cro38886 = tf.constant([[[1.2573, 1.0984, 1.2909, 1.182], [1.5876, 1.4338, 1.9993, 1.0444], [1.8565, 1.1426, 1.518, 1.7421], [1.8041, 1.7621, 1.2249, 1.5255]]])
print (np.array2string(model.predict([in0Cro38886],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Lay86462.png')

LCro38886 = cropping1D_layer([[[1.2573, 1.0984, 1.2909, 1.182], [1.5876, 1.4338, 1.9993, 1.0444], [1.8565, 1.1426, 1.518, 1.7421], [1.8041, 1.7621, 1.2249, 1.5255]]], 0, 1, Cro38886), 
LFla58227 = flatten_layer(Cro38886, Fla58227), 
LRes3145 = reshape_layer(Fla58227, [12, 1], Res3145), 
LCon15141 = conv1D_layer(Res3145, 9,[[[0.5289, 0.4973, 0.5841, 0.1049]], [[0.5286, 0.9832, 0.9199, 0.4802]], [[0.2467, 0.3692, 0.0296, 0.4008]], [[0.379, 0.2151, 0.9042, 0.6802]], [[0.6895, 0.7065, 0.9616, 0.0476]], [[0.9725, 0.1067, 0.8278, 0.9319]], [[0.4437, 0.2514, 0.354, 0.954]], [[0.6899, 0.0029, 0.6896, 0.5328]], [[0.5659, 0.2542, 0.3749, 0.2015]]],[0, 0, 0, 0], 1, false, 1, Con15141), 
LLay86462 = layer_normalization_layer(Con15141, 1, 1.4433909475915552, Lay86462), 
exec_layers([LCro38886,LFla58227,LRes3145,LCon15141,LLay86462],["Cro38886","Fla58227","Res3145","Con15141","Lay86462"],Lay86462,"Lay86462")

Actual (Unparsed): [[[-0.1538492, -0.0347144, -0.3929896, -0.1342970], [0.1089396, -0.2875215, 0.1815432, 0.0319237], [-0.1959236, 0.2833255, -0.1569302, -0.2649351], [0.2408331, 0.0389105, 0.3683766, 0.3673084]]]

Expected (Unparsed): [[[-0.15384912951644497,-0.034714439317999314,-0.39298963789875413,-0.13429698325848136],[0.10893963255334403,-0.28752153830655053,0.18154322992963753,0.031923716494268534],[-0.19592362940189367,0.28332544736466336,-0.15693018557077779,-0.2649350704452525],[0.2408331263649939,0.038910530259884994,0.3683765935398951,0.3673083372094653]]]

Actual:   [[[-0.1538, -0.0347, -0.3929, -0.1342], [0.109, -0.2875, 0.1816, 0.032], [-0.1959, 0.2834, -0.1569, -0.2649], [0.2409, 0.039, 0.3684, 0.3674]]]

Expected: [[[-0.1538, -0.0347, -0.3929, -0.1342], [0.109, -0.2875, 0.1816, 0.032], [-0.1959, 0.2834, -0.1569, -0.2649], [0.2409, 0.039, 0.3684, 0.3674]]]