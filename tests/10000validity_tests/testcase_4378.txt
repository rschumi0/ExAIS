import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Dot44169 = tf.keras.layers.Input(shape=([3]))
in1Dot44169 = tf.keras.layers.Input(shape=([3]))
in0Con24308 = tf.keras.layers.Input(shape=([1, 3]))
in0Min97831 = tf.keras.layers.Input(shape=([2, 2, 2]))
in1Min97831 = tf.keras.layers.Input(shape=([2, 2, 2]))

Dot44169 = keras.layers.Dot(axes=(1, 1), name = 'Dot44169', )([in0Dot44169,in1Dot44169])
Res43190 = keras.layers.Reshape((1, 1), name = 'Res43190', )(Dot44169)
Con24308 = keras.layers.Concatenate(axis=2, name = 'Con24308', )([Res43190,in0Con24308])
Min97831 = keras.layers.Minimum(name = 'Min97831', )([in0Min97831,in1Min97831])
Res70559 = keras.layers.Reshape((2, 4), name = 'Res70559', )(Min97831)
Loc68566 = keras.layers.LocallyConnected1D(4, (2),strides=(11), name = 'Loc68566', )(Res70559)
Ave97045 = keras.layers.AveragePooling1D(pool_size=(1), strides=(10), padding='valid', name = 'Ave97045', )(Loc68566)
Mul72986 = keras.layers.Multiply(name = 'Mul72986', )([Con24308,Ave97045])
model = tf.keras.models.Model(inputs=[in0Dot44169,in1Dot44169,in0Con24308,in0Min97831,in1Min97831], outputs=Mul72986)
w = model.get_layer('Loc68566').get_weights() 
w[0] = np.array([[[0.8298, 0.9467, 0.6776, 0.4711], [0.4989, 0.0715, 0.4054, 0.0368], [0.6234, 0.1523, 0.9464, 0.6479], [0.2441, 0.5867, 0.2552, 0.7217], [0.9214, 0.4413, 0.7086, 0.3213], [0.1412, 0.7734, 0.5666, 0.1737], [0.5622, 0.8443, 0.4687, 0.1106], [0.0294, 0.9366, 0.7673, 0.0233]]])
w[1] = np.array([[0, 0, 0, 0]])
model.get_layer('Loc68566').set_weights(w) 
in0Dot44169 = tf.constant([[0.3742, 0.7055, 0.115]])
in1Dot44169 = tf.constant([[0.9972, 0.6659, 0.5827]])
in0Con24308 = tf.constant([[[0.0478, 0.964, 0.1308]]])
in0Min97831 = tf.constant([[[[0.5307, 0.4528], [0.608, 0.7097]], [[0.452, 0.5455], [0.158, 0.6167]]]])
in1Min97831 = tf.constant([[[[0.4655, 0.6678], [0.0539, 0.7137]], [[0.5151, 0.4608], [0.7064, 0.3118]]]])
print (np.array2string(model.predict([in0Dot44169,in1Dot44169,in0Con24308,in0Min97831,in1Min97831],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Mul72986.png')

LDot44169 = dot_layer([[0.3742, 0.7055, 0.115]], [[0.9972, 0.6659, 0.5827]], 1, 1, Dot44169), 
LRes43190 = reshape_layer(Dot44169, [1, 1], Res43190), 
LCon24308 = concatenate_layer([Res43190,[[[0.0478, 0.964, 0.1308]]]], 2, Con24308), 
LMin97831 = minimum_layer([[[[[0.5307, 0.4528], [0.608, 0.7097]], [[0.452, 0.5455], [0.158, 0.6167]]]], [[[[0.4655, 0.6678], [0.0539, 0.7137]], [[0.5151, 0.4608], [0.7064, 0.3118]]]]], Min97831), 
LRes70559 = reshape_layer(Min97831, [2, 4], Res70559), 
LLoc68566 = locally_connected1D_layer(Res70559, 2,[[[0.8298, 0.9467, 0.6776, 0.4711], [0.4989, 0.0715, 0.4054, 0.0368], [0.6234, 0.1523, 0.9464, 0.6479], [0.2441, 0.5867, 0.2552, 0.7217], [0.9214, 0.4413, 0.7086, 0.3213], [0.1412, 0.7734, 0.5666, 0.1737], [0.5622, 0.8443, 0.4687, 0.1106], [0.0294, 0.9366, 0.7673, 0.0233]]],[[0, 0, 0, 0]], 11, Loc68566), 
LAve97045 = average_pooling1D_layer(Loc68566, 1, 10, false, Ave97045), 
LMul72986 = multiply_layer([Con24308,Ave97045], Mul72986), 
exec_layers([LDot44169,LRes43190,LCon24308,LMin97831,LRes70559,LLoc68566,LAve97045,LMul72986],["Dot44169","Res43190","Con24308","Min97831","Res70559","Loc68566","Ave97045","Mul72986"],Mul72986,"Mul72986")

Actual (Unparsed): [[[1.2726134, 0.0898131, 1.5672611, 0.1351269]]]

Expected (Unparsed): [[[1.272613399492725,0.08981312215800001,1.5672611165599997,0.135126954252]]]

Actual:   [[[1.2727, 0.0899, 1.5673, 0.1352]]]

Expected: [[[1.2727, 0.0899, 1.5673, 0.1352]]]