import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Den88658 = tf.keras.layers.Input(shape=([2, 4, 4]))
in0Ave50808 = tf.keras.layers.Input(shape=([1, 1, 1]))
in1Ave50808 = tf.keras.layers.Input(shape=([1, 1, 1]))
in0Con78150 = tf.keras.layers.Input(shape=([2, 4, 3]))
in0Glo30643 = tf.keras.layers.Input(shape=([2, 2]))
in0Con91888 = tf.keras.layers.Input(shape=([14]))

Den88658 = keras.layers.Dense(4,name = 'Den88658', )(in0Den88658)
Ave50808 = keras.layers.Average(name = 'Ave50808', )([in0Ave50808,in1Ave50808])
Zer13645 = keras.layers.ZeroPadding2D(padding=((1, 0), (3, 0)), name = 'Zer13645', )(Ave50808)
Con78150 = keras.layers.Concatenate(axis=3, name = 'Con78150', )([Zer13645,in0Con78150])
Add62204 = keras.layers.Add(name = 'Add62204', )([Den88658,Con78150])
Den58324 = keras.layers.Dense(2,name = 'Den58324', )(Add62204)
Res47522 = keras.layers.Reshape((2, 8), name = 'Res47522', )(Den58324)
Fla13392 = keras.layers.Flatten(name = 'Fla13392', )(Res47522)
Glo30643 = keras.layers.GlobalMaxPool1D(name = 'Glo30643', )(in0Glo30643)
Con91888 = keras.layers.Concatenate(axis=1, name = 'Con91888', )([Glo30643,in0Con91888])
Mul87098 = keras.layers.Multiply(name = 'Mul87098', )([Fla13392,Con91888])
Res60126 = keras.layers.Reshape((16, 1), name = 'Res60126', )(Mul87098)
Res28059 = keras.layers.Reshape((16, 1, 1), name = 'Res28059', )(Res60126)
Res7666 = keras.layers.Reshape((16, 1, 1, 1), name = 'Res7666', )(Res28059)
Zer52877 = keras.layers.ZeroPadding3D(padding=((1, 1), (1, 1), (1, 1)), name = 'Zer52877', )(Res7666)
model = tf.keras.models.Model(inputs=[in0Den88658,in0Ave50808,in1Ave50808,in0Con78150,in0Glo30643,in0Con91888], outputs=Zer52877)
w = model.get_layer('Den88658').get_weights() 
w[0] = np.array([[0.4447, 0.3927, 0.4849, 0.82], [0.7135, 0.2426, 0.6366, 0.961], [0.6841, 0.9873, 0.3439, 0.4342], [0.599, 0.9821, 0.2348, 0.8422]])
w[1] = np.array([0.5562, 0.1174, 0.3833, 0.1598])
model.get_layer('Den88658').set_weights(w) 
w = model.get_layer('Den58324').get_weights() 
w[0] = np.array([[0.5475, 0.9384], [0.4179, 0.3808], [0.8484, 0.6588], [0.4847, 0.771]])
w[1] = np.array([0.3329, 0.5886])
model.get_layer('Den58324').set_weights(w) 
in0Den88658 = tf.constant([[[[0.2143, 0.7537, 0.8656, 0.4699], [0.5295, 0.7967, 0.2249, 0.4536], [0.002, 0.3792, 0.9712, 0.8335], [0.4275, 0.5071, 0.287, 0.0567]], [[0.7175, 0.7693, 0.6957, 0.1688], [0.0729, 0.8695, 0.4383, 0.0478], [0.7338, 0.6351, 0.831, 0.9563], [0.5127, 0.6714, 0.9243, 0.7753]]]])
in0Ave50808 = tf.constant([[[[0.2407]]]])
in1Ave50808 = tf.constant([[[[0.2297]]]])
in0Con78150 = tf.constant([[[[0.1434, 0.032, 0.9171], [0.9428, 0.7396, 0.1496], [0.3444, 0.8741, 0.8949], [0.8942, 0.664, 0.3334]], [[0.6369, 0.1872, 0.2199], [0.7694, 0.518, 0.6593], [0.9958, 0.6611, 0.5302], [0.3828, 0.9572, 0.8293]]]])
in0Glo30643 = tf.constant([[[1.2215, 1.8259], [1.4605, 1.7884]]])
in0Con91888 = tf.constant([[0.6253, 0.9736, 0.7761, 0.0134, 0.6908, 0.9709, 0.2984, 0.1947, 0.6812, 0.7995, 0.6086, 0.5534, 0.2767, 0.1152]])
print (np.array2string(model.predict([in0Den88658,in0Ave50808,in1Ave50808,in0Con78150,in0Glo30643,in0Con91888],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Zer52877.png')

LDen88658 = dense_layer([[[[0.2143, 0.7537, 0.8656, 0.4699], [0.5295, 0.7967, 0.2249, 0.4536], [0.002, 0.3792, 0.9712, 0.8335], [0.4275, 0.5071, 0.287, 0.0567]], [[0.7175, 0.7693, 0.6957, 0.1688], [0.0729, 0.8695, 0.4383, 0.0478], [0.7338, 0.6351, 0.831, 0.9563], [0.5127, 0.6714, 0.9243, 0.7753]]]], [[0.4447, 0.3927, 0.4849, 0.82], [0.7135, 0.2426, 0.6366, 0.961], [0.6841, 0.9873, 0.3439, 0.4342], [0.599, 0.9821, 0.2348, 0.8422]],[0.5562, 0.1174, 0.3833, 0.1598], Den88658), 
LAve50808 = average_layer([[[[[0.2407]]]], [[[[0.2297]]]]], Ave50808), 
LZer13645 = zero_padding2D_layer(Ave50808, 1, 0, 3, 0, Zer13645), 
LCon78150 = concatenate_layer([Zer13645,[[[[0.1434, 0.032, 0.9171], [0.9428, 0.7396, 0.1496], [0.3444, 0.8741, 0.8949], [0.8942, 0.664, 0.3334]], [[0.6369, 0.1872, 0.2199], [0.7694, 0.518, 0.6593], [0.9958, 0.6611, 0.5302], [0.3828, 0.9572, 0.8293]]]]], 3, Con78150), 
LAdd62204 = add_layer([Den88658,Con78150], Add62204), 
LDen58324 = dense_layer(Add62204, [[0.5475, 0.9384], [0.4179, 0.3808], [0.8484, 0.6588], [0.4847, 0.771]],[0.3329, 0.5886], Den58324), 
LRes47522 = reshape_layer(Den58324, [2, 8], Res47522), 
LFla13392 = flatten_layer(Res47522, Fla13392), 
LGlo30643 = global_max_pool1D_layer([[[1.2215, 1.8259], [1.4605, 1.7884]]], Glo30643), 
LCon91888 = concatenate_layer([Glo30643,[[0.6253, 0.9736, 0.7761, 0.0134, 0.6908, 0.9709, 0.2984, 0.1947, 0.6812, 0.7995, 0.6086, 0.5534, 0.2767, 0.1152]]], 1, Con91888), 
LMul87098 = multiply_layer([Fla13392,Con91888], Mul87098), 
LRes60126 = reshape_layer(Mul87098, [16, 1], Res60126), 
LRes28059 = reshape_layer(Res60126, [16, 1, 1], Res28059), 
LRes7666 = reshape_layer(Res28059, [16, 1, 1, 1], Res7666), 
LZer52877 = zero_padding3D_layer(Res7666, 1, 1, 1, 1, 1, 1, Zer52877), 
exec_layers([LDen88658,LAve50808,LZer13645,LCon78150,LAdd62204,LDen58324,LRes47522,LFla13392,LGlo30643,LCon91888,LMul87098,LRes60126,LRes28059,LRes7666,LZer52877],["Den88658","Ave50808","Zer13645","Con78150","Add62204","Den58324","Res47522","Fla13392","Glo30643","Con91888","Mul87098","Res60126","Res28059","Res7666","Zer52877"],Zer52877,"Zer52877")

Actual (Unparsed): [[[[[0.0000000], [0.0000000], [0.0000000]], [[0.0000000], [0.0000000], [0.0000000]], [[0.0000000], [0.0000000], [0.0000000]]], [[[0.0000000], [0.0000000], [0.0000000]], [[0.0000000], [6.9502774], [0.0000000]], [[0.0000000], [0.0000000], [0.0000000]]], [[[0.0000000], [0.0000000], [0.0000000]], [[0.0000000], [11.4532117], [0.0000000]], [[0.0000000], [0.0000000], [0.0000000]]], [[[0.0000000], [0.0000000], [0.0000000]], [[0.0000000], [3.0771156], [0.0000000]], [[0.0000000], [0.0000000], [0.0000000]]], [[[0.0000000], [0.0000000], [0.0000000]], [[0.0000000], [5.8149018], [0.0000000]], [[0.0000000], [0.0000000], [0.0000000]]], [[[0.0000000], [0.0000000], [0.0000000]], [[0.0000000], [4.1542925], [0.0000000]], [[0.0000000], [0.0000000], [0.0000000]]], [[[0.0000000], [0.0000000], [0.0000000]], [[0.0000000], [0.0890302], [0.0000000]], [[0.0000000], [0.0000000], [0.0000000]]], [[[0.0000000], [0.0000000], [0.0000000]], [[0.0000000], [2.7035950], [0.0000000]], [[0.0000000], [0.0000000], [0.0000000]]], [[[0.0000000], [0.0000000], [0.0000000]], [[0.0000000], [4.6038379], [0.0000000]], [[0.0000000], [0.0000000], [0.0000000]]], [[[0.0000000], [0.0000000], [0.0000000]], [[0.0000000], [1.4233680], [0.0000000]], [[0.0000000], [0.0000000], [0.0000000]]], [[[0.0000000], [0.0000000], [0.0000000]], [[0.0000000], [1.1734789], [0.0000000]], [[0.0000000], [0.0000000], [0.0000000]]], [[[0.0000000], [0.0000000], [0.0000000]], [[0.0000000], [2.8544056], [0.0000000]], [[0.0000000], [0.0000000], [0.0000000]]], [[[0.0000000], [0.0000000], [0.0000000]], [[0.0000000], [4.1821822], [0.0000000]], [[0.0000000], [0.0000000], [0.0000000]]], [[[0.0000000], [0.0000000], [0.0000000]], [[0.0000000], [3.9714266], [0.0000000]], [[0.0000000], [0.0000000], [0.0000000]]], [[[0.0000000], [0.0000000], [0.0000000]], [[0.0000000], [4.4637363], [0.0000000]], [[0.0000000], [0.0000000], [0.0000000]]], [[[0.0000000], [0.0000000], [0.0000000]], [[0.0000000], [1.7864935], [0.0000000]], [[0.0000000], [0.0000000], [0.0000000]]], [[[0.0000000], [0.0000000], [0.0000000]], [[0.0000000], [0.9268298], [0.0000000]], [[0.0000000], [0.0000000], [0.0000000]]], [[[0.0000000], [0.0000000], [0.0000000]], [[0.0000000], [0.0000000], [0.0000000]], [[0.0000000], [0.0000000], [0.0000000]]]]]

Expected (Unparsed): [[[[[0],[0],[0]],[[0],[0],[0]],[[0],[0],[0]]],[[[0],[0],[0]],[[0],[6.95027732324915],[0]],[[0],[0],[0]]],[[[0],[0],[0]],[[0],[11.453211878301873],[0]],[[0],[0],[0]]],[[[0],[0],[0]],[[0],[3.0771156751899054],[0]],[[0],[0],[0]]],[[[0],[0],[0]],[[0],[5.814902010104742],[0]],[[0],[0],[0]]],[[[0],[0],[0]],[[0],[4.154292556886296],[0]],[[0],[0],[0]]],[[[0],[0],[0]],[[0],[0.08903021682145681],[0]],[[0],[0],[0]]],[[[0],[0],[0]],[[0],[2.7035950052827142],[0]],[[0],[0],[0]]],[[[0],[0],[0]],[[0],[4.60383790366535],[0]],[[0],[0],[0]]],[[[0],[0],[0]],[[0],[1.4233679568641913],[0]],[[0],[0],[0]]],[[[0],[0],[0]],[[0],[1.1734788719152491],[0]],[[0],[0],[0]]],[[[0],[0],[0]],[[0],[2.85440550850404],[0]],[[0],[0],[0]]],[[[0],[0],[0]],[[0],[4.1821822608243595],[0]],[[0],[0],[0]]],[[[0],[0],[0]],[[0],[3.9714264641349],[0]],[[0],[0],[0]]],[[[0],[0],[0]],[[0],[4.4637364372690325],[0]],[[0],[0],[0]]],[[[0],[0],[0]],[[0],[1.7864935210514077],[0]],[[0],[0],[0]]],[[[0],[0],[0]],[[0],[0.9268298388624385],[0]],[[0],[0],[0]]],[[[0],[0],[0]],[[0],[0],[0]],[[0],[0],[0]]]]]

Actual:   [[[[[0], [0], [0]], [[0], [0], [0]], [[0], [0], [0]]], [[[0], [0], [0]], [[0], [6.9503], [0]], [[0], [0], [0]]], [[[0], [0], [0]], [[0], [11.4533], [0]], [[0], [0], [0]]], [[[0], [0], [0]], [[0], [3.0772], [0]], [[0], [0], [0]]], [[[0], [0], [0]], [[0], [5.815], [0]], [[0], [0], [0]]], [[[0], [0], [0]], [[0], [4.1543], [0]], [[0], [0], [0]]], [[[0], [0], [0]], [[0], [0.0891], [0]], [[0], [0], [0]]], [[[0], [0], [0]], [[0], [2.7036], [0]], [[0], [0], [0]]], [[[0], [0], [0]], [[0], [4.6039], [0]], [[0], [0], [0]]], [[[0], [0], [0]], [[0], [1.4234], [0]], [[0], [0], [0]]], [[[0], [0], [0]], [[0], [1.1735], [0]], [[0], [0], [0]]], [[[0], [0], [0]], [[0], [2.8545], [0]], [[0], [0], [0]]], [[[0], [0], [0]], [[0], [4.1822], [0]], [[0], [0], [0]]], [[[0], [0], [0]], [[0], [3.9715], [0]], [[0], [0], [0]]], [[[0], [0], [0]], [[0], [4.4638], [0]], [[0], [0], [0]]], [[[0], [0], [0]], [[0], [1.7865], [0]], [[0], [0], [0]]], [[[0], [0], [0]], [[0], [0.9269], [0]], [[0], [0], [0]]], [[[0], [0], [0]], [[0], [0], [0]], [[0], [0], [0]]]]]

Expected: [[[[[0], [0], [0]], [[0], [0], [0]], [[0], [0], [0]]], [[[0], [0], [0]], [[0], [6.9503], [0]], [[0], [0], [0]]], [[[0], [0], [0]], [[0], [11.4533], [0]], [[0], [0], [0]]], [[[0], [0], [0]], [[0], [3.0772], [0]], [[0], [0], [0]]], [[[0], [0], [0]], [[0], [5.815], [0]], [[0], [0], [0]]], [[[0], [0], [0]], [[0], [4.1543], [0]], [[0], [0], [0]]], [[[0], [0], [0]], [[0], [0.0891], [0]], [[0], [0], [0]]], [[[0], [0], [0]], [[0], [2.7036], [0]], [[0], [0], [0]]], [[[0], [0], [0]], [[0], [4.6039], [0]], [[0], [0], [0]]], [[[0], [0], [0]], [[0], [1.4234], [0]], [[0], [0], [0]]], [[[0], [0], [0]], [[0], [1.1735], [0]], [[0], [0], [0]]], [[[0], [0], [0]], [[0], [2.8545], [0]], [[0], [0], [0]]], [[[0], [0], [0]], [[0], [4.1822], [0]], [[0], [0], [0]]], [[[0], [0], [0]], [[0], [3.9715], [0]], [[0], [0], [0]]], [[[0], [0], [0]], [[0], [4.4638], [0]], [[0], [0], [0]]], [[[0], [0], [0]], [[0], [1.7865], [0]], [[0], [0], [0]]], [[[0], [0], [0]], [[0], [0.9269], [0]], [[0], [0], [0]]], [[[0], [0], [0]], [[0], [0], [0]], [[0], [0], [0]]]]]