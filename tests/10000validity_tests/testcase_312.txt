import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Max18725 = tf.keras.layers.Input(shape=([2, 1, 2, 2]))
in1Max18725 = tf.keras.layers.Input(shape=([2, 1, 2, 2]))
in0Dot69189 = tf.keras.layers.Input(shape=([2, 3]))
in1Dot69189 = tf.keras.layers.Input(shape=([2, 3]))
in0Con49667 = tf.keras.layers.Input(shape=([1, 2]))
in0Up_58821 = tf.keras.layers.Input(shape=([4, 1]))
in0Sub25645 = tf.keras.layers.Input(shape=([3]))
in1Sub25645 = tf.keras.layers.Input(shape=([3]))

Max18725 = keras.layers.Maximum(name = 'Max18725', )([in0Max18725,in1Max18725])
Res54224 = keras.layers.Reshape((2, 1, 4), name = 'Res54224', )(Max18725)
Res13562 = keras.layers.Reshape((2, 4), name = 'Res13562', )(Res54224)
Ave74073 = keras.layers.AveragePooling1D(pool_size=(2), strides=(2), padding='same', name = 'Ave74073', )(Res13562)
Dot69189 = keras.layers.Dot(axes=(2, 2), name = 'Dot69189', )([in0Dot69189,in1Dot69189])
Cro88008 = keras.layers.Cropping1D(cropping=((1, 0)), name = 'Cro88008', )(Dot69189)
Con49667 = keras.layers.Concatenate(axis=2, name = 'Con49667', )([Cro88008,in0Con49667])
Mul40328 = keras.layers.Multiply(name = 'Mul40328', )([Ave74073,Con49667])
Res65371 = keras.layers.Reshape((1, 4, 1), name = 'Res65371', )(Mul40328)
Zer72013 = keras.layers.ZeroPadding2D(padding=((3, 0), (3, 0)), name = 'Zer72013', )(Res65371)
Up_58821 = keras.layers.UpSampling1D(size=(1), name = 'Up_58821', )(in0Up_58821)
Res60548 = keras.layers.Reshape((4, 1, 1), name = 'Res60548', )(Up_58821)
Sub25645 = keras.layers.Subtract(name = 'Sub25645', )([in0Sub25645,in1Sub25645])
Res97795 = keras.layers.Reshape((3, 1), name = 'Res97795', )(Sub25645)
Res48305 = keras.layers.Reshape((3, 1, 1), name = 'Res48305', )(Res97795)
Ave48172 = keras.layers.AveragePooling2D(pool_size=(3, 1), name = 'Ave48172', )(Res48305)
Lea19087 = keras.layers.LeakyReLU(alpha=7.039867160857573, name = 'Lea19087', )(Ave48172)
Zer7870 = keras.layers.ZeroPadding2D(padding=((3, 0), (0, 0)), name = 'Zer7870', )(Lea19087)
Mul30188 = keras.layers.Multiply(name = 'Mul30188', )([Res60548,Zer7870])
Zer82738 = keras.layers.ZeroPadding2D(padding=((0, 0), (6, 0)), name = 'Zer82738', )(Mul30188)
Ave34504 = keras.layers.Average(name = 'Ave34504', )([Zer72013,Zer82738])
model = tf.keras.models.Model(inputs=[in0Max18725,in1Max18725,in0Dot69189,in1Dot69189,in0Con49667,in0Up_58821,in0Sub25645,in1Sub25645], outputs=Ave34504)
in0Max18725 = tf.constant([[[[[0.996, 0.6948], [0.0243, 0.7637]]], [[[0.8128, 0.8656], [0.6238, 0.425]]]]])
in1Max18725 = tf.constant([[[[[0.6298, 0.6053], [0.0926, 0.376]]], [[[0.5752, 0.9583], [0.7663, 0.4389]]]]])
in0Dot69189 = tf.constant([[[0.9878, 0.0915, 0.3401], [0.7071, 0.4267, 0.7945]]])
in1Dot69189 = tf.constant([[[0.1228, 0.0579, 0.3979], [0.9045, 0.4961, 0.5982]]])
in0Con49667 = tf.constant([[[0.2205, 0.5794]]])
in0Up_58821 = tf.constant([[[1.0735], [1.9052], [1.2086], [1.9188]]])
in0Sub25645 = tf.constant([[0.5627, 0.0853, 0.6891]])
in1Sub25645 = tf.constant([[0.0594, 0.3572, 0.8054]])
print (np.array2string(model.predict([in0Max18725,in1Max18725,in0Dot69189,in1Dot69189,in0Con49667,in0Up_58821,in0Sub25645,in1Sub25645],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Ave34504.png')

LMax18725 = maximum_layer([[[[[[0.996, 0.6948], [0.0243, 0.7637]]], [[[0.8128, 0.8656], [0.6238, 0.425]]]]], [[[[[0.6298, 0.6053], [0.0926, 0.376]]], [[[0.5752, 0.9583], [0.7663, 0.4389]]]]]], Max18725), 
LRes54224 = reshape_layer(Max18725, [2, 1, 4], Res54224), 
LRes13562 = reshape_layer(Res54224, [2, 4], Res13562), 
LAve74073 = average_pooling1D_layer(Res13562, 2, 2, true, Ave74073), 
LDot69189 = dot_layer([[[0.9878, 0.0915, 0.3401], [0.7071, 0.4267, 0.7945]]], [[[0.1228, 0.0579, 0.3979], [0.9045, 0.4961, 0.5982]]], 2, 2, Dot69189), 
LCro88008 = cropping1D_layer(Dot69189, 1, 0, Cro88008), 
LCon49667 = concatenate_layer([Cro88008,[[[0.2205, 0.5794]]]], 2, Con49667), 
LMul40328 = multiply_layer([Ave74073,Con49667], Mul40328), 
LRes65371 = reshape_layer(Mul40328, [1, 4, 1], Res65371), 
LZer72013 = zero_padding2D_layer(Res65371, 3, 0, 3, 0, Zer72013), 
LUp_58821 = up_sampling1D_layer([[[1.0735], [1.9052], [1.2086], [1.9188]]], 1, Up_58821), 
LRes60548 = reshape_layer(Up_58821, [4, 1, 1], Res60548), 
LSub25645 = subtract_layer([[0.5627, 0.0853, 0.6891]], [[0.0594, 0.3572, 0.8054]], Sub25645), 
LRes97795 = reshape_layer(Sub25645, [3, 1], Res97795), 
LRes48305 = reshape_layer(Res97795, [3, 1, 1], Res48305), 
LAve48172 = average_pooling2D_layer(Res48305, 3, 1, Ave48172), 
LLea19087 = leaky_relu_layer(Ave48172, 7.039867160857573, Lea19087), 
LZer7870 = zero_padding2D_layer(Lea19087, 3, 0, 0, 0, Zer7870), 
LMul30188 = multiply_layer([Res60548,Zer7870], Mul30188), 
LZer82738 = zero_padding2D_layer(Mul30188, 0, 0, 6, 0, Zer82738), 
LAve34504 = average_layer([Zer72013,Zer82738], Ave34504), 
exec_layers([LMax18725,LRes54224,LRes13562,LAve74073,LDot69189,LCro88008,LCon49667,LMul40328,LRes65371,LZer72013,LUp_58821,LRes60548,LSub25645,LRes97795,LRes48305,LAve48172,LLea19087,LZer7870,LMul30188,LZer82738,LAve34504],["Max18725","Res54224","Res13562","Ave74073","Dot69189","Cro88008","Con49667","Mul40328","Res65371","Zer72013","Up_58821","Res60548","Sub25645","Res97795","Res48305","Ave48172","Lea19087","Zer7870","Mul30188","Zer82738","Ave34504"],Ave34504,"Ave34504")

Actual (Unparsed): [[[[0.0000000], [0.0000000], [0.0000000], [0.0000000], [0.0000000], [0.0000000], [0.0000000]], [[0.0000000], [0.0000000], [0.0000000], [0.0000000], [0.0000000], [0.0000000], [0.0000000]], [[0.0000000], [0.0000000], [0.0000000], [0.0000000], [0.0000000], [0.0000000], [0.0000000]], [[0.0000000], [0.0000000], [0.0000000], [0.1933921], [0.5482207], [0.0473469], [0.2110056]]]]

Expected (Unparsed): [[[[0],[0],[0],[0],[0],[0],[0.0]],[[0],[0],[0],[0],[0],[0],[0.0]],[[0],[0],[0],[0],[0],[0],[0.0]],[[0],[0],[0],[0.193392084592],[0.548220743483],[0.0473468625],[0.21100559000000002]]]]

Actual:   [[[[0], [0], [0], [0], [0], [0], [0]], [[0], [0], [0], [0], [0], [0], [0]], [[0], [0], [0], [0], [0], [0], [0]], [[0], [0], [0], [0.1934], [0.5483], [0.0474], [0.2111]]]]

Expected: [[[[0], [0], [0], [0], [0], [0], [0]], [[0], [0], [0], [0], [0], [0], [0]], [[0], [0], [0], [0], [0], [0], [0]], [[0], [0], [0], [0.1934], [0.5483], [0.0474], [0.2111]]]]