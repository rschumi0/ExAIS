import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Sub70619 = tf.keras.layers.Input(shape=([2, 2, 2, 3]))
in1Sub70619 = tf.keras.layers.Input(shape=([2, 2, 2, 3]))
in0Max3541 = tf.keras.layers.Input(shape=([1, 1]))
in0Con13078 = tf.keras.layers.Input(shape=([2, 9]))
in0Con91719 = tf.keras.layers.Input(shape=([3, 21, 1]))
in0Sub30833 = tf.keras.layers.Input(shape=([3, 3, 2]))
in1Sub30833 = tf.keras.layers.Input(shape=([3, 3, 2]))

Sub70619 = keras.layers.Subtract(name = 'Sub70619', )([in0Sub70619,in1Sub70619])
Res6677 = keras.layers.Reshape((2, 2, 6), name = 'Res6677', )(Sub70619)
Res51561 = keras.layers.Reshape((2, 12), name = 'Res51561', )(Res6677)
Max3541 = keras.layers.MaxPool1D(pool_size=(1), strides=(1), padding='same', name = 'Max3541', )(in0Max3541)
Loc3455 = keras.layers.LocallyConnected1D(3, (1),strides=(1), name = 'Loc3455', )(Max3541)
Zer86239 = keras.layers.ZeroPadding1D(padding=((1, 0)), name = 'Zer86239', )(Loc3455)
Con13078 = keras.layers.Concatenate(axis=2, name = 'Con13078', )([Zer86239,in0Con13078])
Add77498 = keras.layers.Add(name = 'Add77498', )([Res51561,Con13078])
Res52503 = keras.layers.Reshape((2, 12, 1), name = 'Res52503', )(Add77498)
Zer29574 = keras.layers.ZeroPadding2D(padding=((1, 0), (9, 0)), name = 'Zer29574', )(Res52503)
Con91719 = keras.layers.Concatenate(axis=3, name = 'Con91719', )([Zer29574,in0Con91719])
Sub30833 = keras.layers.Subtract(name = 'Sub30833', )([in0Sub30833,in1Sub30833])
Zer43581 = keras.layers.ZeroPadding2D(padding=((0, 0), (18, 0)), name = 'Zer43581', )(Sub30833)
Sub60863 = keras.layers.Subtract(name = 'Sub60863', )([Con91719,Zer43581])
model = tf.keras.models.Model(inputs=[in0Sub70619,in1Sub70619,in0Max3541,in0Con13078,in0Con91719,in0Sub30833,in1Sub30833], outputs=Sub60863)
w = model.get_layer('Loc3455').get_weights() 
w[0] = np.array([[[0.1336, 0.8533, 0.4681]]])
w[1] = np.array([[0, 0, 0]])
model.get_layer('Loc3455').set_weights(w) 
in0Sub70619 = tf.constant([[[[[0.7374, 0.016, 0.4899], [0.9508, 0.1636, 0.4357]], [[0.8925, 0.5126, 0.0141], [0.7619, 0.3408, 0.4797]]], [[[0.4789, 0.6811, 0.7799], [0.2562, 0.298, 0.9053]], [[0.7916, 0.5912, 0.4595], [0.9125, 0.6449, 0.1315]]]]])
in1Sub70619 = tf.constant([[[[[0.0722, 0.3395, 0.4847], [0.0737, 0.5003, 0.3879]], [[0.5708, 0.1165, 0.5665], [0.6697, 0.4637, 0.8801]]], [[[0.1327, 0.0266, 0.3217], [0.4469, 0.6467, 0.9866]], [[0.0211, 0.7072, 0.3094], [0.69, 0.6394, 0.7464]]]]])
in0Max3541 = tf.constant([[[1.3617]]])
in0Con13078 = tf.constant([[[0.4336, 0.9248, 0.1646, 0.8319, 0.9609, 0.8738, 0.6456, 0.8755, 0.9783], [0.1968, 0.9485, 0.1756, 0.3536, 0.5566, 0.8153, 0.7072, 0.8198, 0.0877]]])
in0Con91719 = tf.constant([[[[0.5176], [0.7408], [0.9453], [0.9834], [0.3398], [0.4811], [0.2408], [0.89], [0.4825], [0.21], [0.0763], [0.3081], [0.7766], [0.4982], [0.5217], [0.2572], [0.6713], [0.2057], [0.4078], [0.1434], [0.1451]], [[0.2487], [0.654], [0.2323], [0.4679], [0.8553], [0.1091], [0.5227], [0.661], [0.7449], [0.1158], [0.9003], [0.9248], [0.5642], [0.9476], [0.4927], [0.01], [0.3462], [0.9889], [0.2172], [0.4901], [0.7172]], [[0.0287], [0.6162], [0.1631], [0.0723], [0.3185], [0.2068], [0.3563], [0.9636], [0.1136], [0.7395], [0.7372], [0.5008], [0.2559], [0.9542], [0.3436], [0.6505], [0.9865], [0.6508], [0.9399], [0.9407], [0.5814]]]])
in0Sub30833 = tf.constant([[[[0.3108, 0.954], [0.5986, 0.613], [0.2287, 0.9978]], [[0.3077, 0.7454], [0.4633, 0.3883], [0.3893, 0.1124]], [[0.1764, 0.0994], [0.4655, 0.7209], [0.3643, 0.5813]]]])
in1Sub30833 = tf.constant([[[[0.0559, 0.8399], [0.2187, 0.6495], [0.2541, 0.2054]], [[0.0165, 0.3635], [0.2904, 0.1108], [0.8151, 0.1926]], [[0.789, 0.7625], [0.674, 0.1288], [0.8639, 0.1579]]]])
print (np.array2string(model.predict([in0Sub70619,in1Sub70619,in0Max3541,in0Con13078,in0Con91719,in0Sub30833,in1Sub30833],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Sub60863.png')

LSub70619 = subtract_layer([[[[[0.7374, 0.016, 0.4899], [0.9508, 0.1636, 0.4357]], [[0.8925, 0.5126, 0.0141], [0.7619, 0.3408, 0.4797]]], [[[0.4789, 0.6811, 0.7799], [0.2562, 0.298, 0.9053]], [[0.7916, 0.5912, 0.4595], [0.9125, 0.6449, 0.1315]]]]], [[[[[0.0722, 0.3395, 0.4847], [0.0737, 0.5003, 0.3879]], [[0.5708, 0.1165, 0.5665], [0.6697, 0.4637, 0.8801]]], [[[0.1327, 0.0266, 0.3217], [0.4469, 0.6467, 0.9866]], [[0.0211, 0.7072, 0.3094], [0.69, 0.6394, 0.7464]]]]], Sub70619), 
LRes6677 = reshape_layer(Sub70619, [2, 2, 6], Res6677), 
LRes51561 = reshape_layer(Res6677, [2, 12], Res51561), 
LMax3541 = max_pool1D_layer([[[1.3617]]], 1, 1, true, Max3541), 
LLoc3455 = locally_connected1D_layer(Max3541, 1,[[[0.1336, 0.8533, 0.4681]]],[[0, 0, 0]], 1, Loc3455), 
LZer86239 = zero_padding1D_layer(Loc3455, 1, 0, Zer86239), 
LCon13078 = concatenate_layer([Zer86239,[[[0.4336, 0.9248, 0.1646, 0.8319, 0.9609, 0.8738, 0.6456, 0.8755, 0.9783], [0.1968, 0.9485, 0.1756, 0.3536, 0.5566, 0.8153, 0.7072, 0.8198, 0.0877]]]], 2, Con13078), 
LAdd77498 = add_layer([Res51561,Con13078], Add77498), 
LRes52503 = reshape_layer(Add77498, [2, 12, 1], Res52503), 
LZer29574 = zero_padding2D_layer(Res52503, 1, 0, 9, 0, Zer29574), 
LCon91719 = concatenate_layer([Zer29574,[[[[0.5176], [0.7408], [0.9453], [0.9834], [0.3398], [0.4811], [0.2408], [0.89], [0.4825], [0.21], [0.0763], [0.3081], [0.7766], [0.4982], [0.5217], [0.2572], [0.6713], [0.2057], [0.4078], [0.1434], [0.1451]], [[0.2487], [0.654], [0.2323], [0.4679], [0.8553], [0.1091], [0.5227], [0.661], [0.7449], [0.1158], [0.9003], [0.9248], [0.5642], [0.9476], [0.4927], [0.01], [0.3462], [0.9889], [0.2172], [0.4901], [0.7172]], [[0.0287], [0.6162], [0.1631], [0.0723], [0.3185], [0.2068], [0.3563], [0.9636], [0.1136], [0.7395], [0.7372], [0.5008], [0.2559], [0.9542], [0.3436], [0.6505], [0.9865], [0.6508], [0.9399], [0.9407], [0.5814]]]]], 3, Con91719), 
LSub30833 = subtract_layer([[[[0.3108, 0.954], [0.5986, 0.613], [0.2287, 0.9978]], [[0.3077, 0.7454], [0.4633, 0.3883], [0.3893, 0.1124]], [[0.1764, 0.0994], [0.4655, 0.7209], [0.3643, 0.5813]]]], [[[[0.0559, 0.8399], [0.2187, 0.6495], [0.2541, 0.2054]], [[0.0165, 0.3635], [0.2904, 0.1108], [0.8151, 0.1926]], [[0.789, 0.7625], [0.674, 0.1288], [0.8639, 0.1579]]]], Sub30833), 
LZer43581 = zero_padding2D_layer(Sub30833, 0, 0, 18, 0, Zer43581), 
LSub60863 = subtract_layer(Con91719,Zer43581, Sub60863), 
exec_layers([LSub70619,LRes6677,LRes51561,LMax3541,LLoc3455,LZer86239,LCon13078,LAdd77498,LRes52503,LZer29574,LCon91719,LSub30833,LZer43581,LSub60863],["Sub70619","Res6677","Res51561","Max3541","Loc3455","Zer86239","Con13078","Add77498","Res52503","Zer29574","Con91719","Sub30833","Zer43581","Sub60863"],Sub60863,"Sub60863")

Actual (Unparsed): [[[[0.0000000, 0.5176000], [0.0000000, 0.7408000], [0.0000000, 0.9453000], [0.0000000, 0.9834000], [0.0000000, 0.3398000], [0.0000000, 0.4811000], [0.0000000, 0.2408000], [0.0000000, 0.8900000], [0.0000000, 0.4825000], [0.0000000, 0.2100000], [0.0000000, 0.0763000], [0.0000000, 0.3081000], [0.0000000, 0.7766000], [0.0000000, 0.4982000], [0.0000000, 0.5217000], [0.0000000, 0.2572000], [0.0000000, 0.6713000], [0.0000000, 0.2057000], [-0.2549000, 0.2937000], [-0.3799000, 0.1799000], [0.0254000, -0.6473000]], [[0.0000000, 0.2487000], [0.0000000, 0.6540000], [0.0000000, 0.2323000], [0.0000000, 0.4679000], [0.0000000, 0.8553000], [0.0000000, 0.1091000], [0.0000000, 0.5227000], [0.0000000, 0.6610000], [0.0000000, 0.7449000], [0.6652000, 0.1158000], [-0.3235000, 0.9003000], [0.0052000, 0.9248000], [1.3107000, 0.5642000], [0.5881000, 0.9476000], [0.2124000, 0.4927000], [1.1536000, 0.0100000], [1.3570000, 0.3462000], [0.3214000, 0.9889000], [0.4466000, -0.1647000], [0.5797000, 0.2126000], [1.0037000, 0.7974000]], [[0.0000000, 0.0287000], [0.0000000, 0.6162000], [0.0000000, 0.1631000], [0.0000000, 0.0723000], [0.0000000, 0.3185000], [0.0000000, 0.2068000], [0.0000000, 0.3563000], [0.0000000, 0.9636000], [0.0000000, 0.1136000], [0.5281231, 0.7395000], [1.8164387, 0.7372000], [1.0956118, 0.5008000], [0.0061000, 0.2559000], [0.5998000, 0.9542000], [0.0943000, 0.3436000], [1.1241000, 0.6505000], [0.4406000, 0.9865000], [0.9654000, 0.6508000], [1.5423000, 1.6030000], [1.0338001, 0.3486000], [-0.0276000, 0.1580000]]]]

Expected (Unparsed): [[[[0,0.5176],[0,0.7408],[0,0.9453],[0,0.9834],[0,0.3398],[0,0.4811],[0,0.2408],[0,0.89],[0,0.4825],[0,0.21],[0,0.0763],[0,0.3081],[0,0.7766],[0,0.4982],[0,0.5217],[0,0.2572],[0,0.6713],[0,0.2057],[-0.2549,0.2937],[-0.3799,0.17989999999999998],[0.025400000000000006,-0.6473]],[[0,0.2487],[0,0.654],[0,0.2323],[0,0.4679],[0,0.8553],[0,0.1091],[0,0.5227],[0,0.661],[0,0.7449],[0.6652,0.1158],[-0.3235,0.9003],[0.005199999999999982,0.9248],[1.3107,0.5642],[0.5881,0.9476],[0.21239999999999995,0.4927],[1.1536,0.01],[1.357,0.3462],[0.3214,0.9889],[0.44660000000000005,-0.16469999999999996],[0.5796999999999999,0.2126],[1.0037,0.7973999999999999]],[[0,0.0287],[0,0.6162],[0,0.1631],[0,0.0723],[0,0.3185],[0,0.2068],[0,0.3563],[0,0.9636],[0,0.1136],[0.52812312,0.7395],[1.8164386099999998,0.7372],[1.09561177,0.5008],[0.0060999999999999666,0.2559],[0.5997999999999999,0.9542],[0.09429999999999997,0.3436],[1.1240999999999999,0.6505],[0.4405999999999999,0.9865],[0.9654,0.6508],[1.5423,1.6029999999999998],[1.0338,0.3486],[-0.027600000000000013,0.15800000000000003]]]]

Actual:   [[[[0, 0.5176], [0, 0.7408], [0, 0.9453], [0, 0.9834], [0, 0.3398], [0, 0.4811], [0, 0.2408], [0, 0.89], [0, 0.4825], [0, 0.21], [0, 0.0763], [0, 0.3081], [0, 0.7766], [0, 0.4982], [0, 0.5217], [0, 0.2572], [0, 0.6713], [0, 0.2057], [-0.2549, 0.2937], [-0.3799, 0.1799], [0.0254, -0.6473]], [[0, 0.2487], [0, 0.654], [0, 0.2323], [0, 0.4679], [0, 0.8553], [0, 0.1091], [0, 0.5227], [0, 0.661], [0, 0.7449], [0.6652, 0.1158], [-0.3235, 0.9003], [0.0052, 0.9248], [1.3107, 0.5642], [0.5881, 0.9476], [0.2124, 0.4927], [1.1536, 0.01], [1.357, 0.3462], [0.3214, 0.9889], [0.4466, -0.1647], [0.5797, 0.2126], [1.0037, 0.7974]], [[0, 0.0287], [0, 0.6162], [0, 0.1631], [0, 0.0723], [0, 0.3185], [0, 0.2068], [0, 0.3563], [0, 0.9636], [0, 0.1136], [0.5282, 0.7395], [1.8165, 0.7372], [1.0957, 0.5008], [0.0061, 0.2559], [0.5998, 0.9542], [0.0943, 0.3436], [1.1241, 0.6505], [0.4406, 0.9865], [0.9654, 0.6508], [1.5423, 1.603], [1.0339, 0.3486], [-0.0276, 0.158]]]]

Expected: [[[[0, 0.5176], [0, 0.7408], [0, 0.9453], [0, 0.9834], [0, 0.3398], [0, 0.4811], [0, 0.2408], [0, 0.89], [0, 0.4825], [0, 0.21], [0, 0.0763], [0, 0.3081], [0, 0.7766], [0, 0.4982], [0, 0.5217], [0, 0.2572], [0, 0.6713], [0, 0.2057], [-0.2549, 0.2937], [-0.3799, 0.1799], [0.0255, -0.6473]], [[0, 0.2487], [0, 0.654], [0, 0.2323], [0, 0.4679], [0, 0.8553], [0, 0.1091], [0, 0.5227], [0, 0.661], [0, 0.7449], [0.6652, 0.1158], [-0.3235, 0.9003], [0.0052, 0.9248], [1.3107, 0.5642], [0.5881, 0.9476], [0.2124, 0.4927], [1.1536, 0.01], [1.357, 0.3462], [0.3214, 0.9889], [0.4467, -0.1646], [0.5797, 0.2126], [1.0037, 0.7974]], [[0, 0.0287], [0, 0.6162], [0, 0.1631], [0, 0.0723], [0, 0.3185], [0, 0.2068], [0, 0.3563], [0, 0.9636], [0, 0.1136], [0.5282, 0.7395], [1.8165, 0.7372], [1.0957, 0.5008], [0.0061, 0.2559], [0.5998, 0.9542], [0.0943, 0.3436], [1.1241, 0.6505], [0.4406, 0.9865], [0.9654, 0.6508], [1.5423, 1.603], [1.0338, 0.3486], [-0.0276, 0.1581]]]]