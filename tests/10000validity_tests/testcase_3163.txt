import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Ave23485 = tf.keras.layers.Input(shape=([2, 2]))

Ave23485 = keras.layers.AveragePooling1D(pool_size=(2), name = 'Ave23485', )(in0Ave23485)
Res31119 = keras.layers.Reshape((1, 2, 1), name = 'Res31119', )(Ave23485)
Up_31479 = keras.layers.UpSampling2D(size=(1, 1), name = 'Up_31479', )(Res31119)
Lea35685 = keras.layers.LeakyReLU(alpha=1.3584976979972445, name = 'Lea35685', )(Up_31479)
model = tf.keras.models.Model(inputs=[in0Ave23485], outputs=Lea35685)
in0Ave23485 = tf.constant([[[1.5952, 1.65], [1.688, 1.4062]]])
print (np.array2string(model.predict([in0Ave23485],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Lea35685.png')

LAve23485 = average_pooling1D_layer([[[1.5952, 1.65], [1.688, 1.4062]]], 2, Ave23485), 
LRes31119 = reshape_layer(Ave23485, [1, 2, 1], Res31119), 
LUp_31479 = up_sampling2D_layer(Res31119, 1, 1, Up_31479), 
LLea35685 = leaky_relu_layer(Up_31479, 1.3584976979972445, Lea35685), 
exec_layers([LAve23485,LRes31119,LUp_31479,LLea35685],["Ave23485","Res31119","Up_31479","Lea35685"],Lea35685,"Lea35685")

Actual (Unparsed): [[[[1.6416000], [1.5281000]]]]

Expected (Unparsed): [[[[1.6416],[1.5280999999999998]]]]

Actual:   [[[[1.6416], [1.5281]]]]

Expected: [[[[1.6416], [1.5281]]]]