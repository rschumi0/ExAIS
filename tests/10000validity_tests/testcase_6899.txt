import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Mul3082 = tf.keras.layers.Input(shape=([1, 1]))
in1Mul3082 = tf.keras.layers.Input(shape=([1, 1]))

Mul3082 = keras.layers.Multiply(name = 'Mul3082', )([in0Mul3082,in1Mul3082])
Res87367 = keras.layers.Reshape((1, 1, 1), name = 'Res87367', )(Mul3082)
Con31527 = keras.layers.Conv2D(3, (1, 1),strides=(1, 1), padding='valid', dilation_rate=(1, 1), name = 'Con31527', )(Res87367)
Lea60747 = keras.layers.LeakyReLU(alpha=7.906060543745962, name = 'Lea60747', )(Con31527)
model = tf.keras.models.Model(inputs=[in0Mul3082,in1Mul3082], outputs=Lea60747)
w = model.get_layer('Con31527').get_weights() 
w[0] = np.array([[[[0.5845, 0.5172, 0.5159]]]])
w[1] = np.array([0, 0, 0])
model.get_layer('Con31527').set_weights(w) 
in0Mul3082 = tf.constant([[[0.8667]]])
in1Mul3082 = tf.constant([[[0.5796]]])
print (np.array2string(model.predict([in0Mul3082,in1Mul3082],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Lea60747.png')

LMul3082 = multiply_layer([[[[0.8667]]], [[[0.5796]]]], Mul3082), 
LRes87367 = reshape_layer(Mul3082, [1, 1, 1], Res87367), 
LCon31527 = conv2D_layer(Res87367, 1, 1,[[[[0.5845, 0.5172, 0.5159]]]],[0, 0, 0], 1, 1, false, 1, 1, Con31527), 
LLea60747 = leaky_relu_layer(Con31527, 7.906060543745962, Lea60747), 
exec_layers([LMul3082,LRes87367,LCon31527,LLea60747],["Mul3082","Res87367","Con31527","Lea60747"],Lea60747,"Lea60747")

Actual (Unparsed): [[[[0.2936173, 0.2598099, 0.2591568]]]]

Expected (Unparsed): [[[[0.29361733254000005,0.25980989630400003,0.259156855188]]]]

Actual:   [[[[0.2937, 0.2599, 0.2592]]]]

Expected: [[[[0.2937, 0.2599, 0.2592]]]]