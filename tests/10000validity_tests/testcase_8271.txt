import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Thr81709 = tf.keras.layers.Input(shape=([1, 2]))

Thr81709 = keras.layers.ThresholdedReLU(theta=5.983236376667924, name = 'Thr81709', input_shape=(1, 2))(in0Thr81709)
Den88675 = keras.layers.Dense(2,name = 'Den88675', )(Thr81709)
Ave81464 = keras.layers.AveragePooling1D(pool_size=(1), name = 'Ave81464', )(Den88675)
model = tf.keras.models.Model(inputs=[in0Thr81709], outputs=Ave81464)
w = model.get_layer('Den88675').get_weights() 
w[0] = np.array([[0.6756, 0.2959], [0.6667, 0.2358]])
w[1] = np.array([0.867, 0.6383])
model.get_layer('Den88675').set_weights(w) 
in0Thr81709 = tf.constant([[[0.6678, 0.0246]]])
print (np.array2string(model.predict([in0Thr81709],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Ave81464.png')

LThr81709 = thresholded_relu_layer([[[0.6678, 0.0246]]], 5.983236376667924, Thr81709), 
LDen88675 = dense_layer(Thr81709, [[0.6756, 0.2959], [0.6667, 0.2358]],[0.867, 0.6383], Den88675), 
LAve81464 = average_pooling1D_layer(Den88675, 1, Ave81464), 
exec_layers([LThr81709,LDen88675,LAve81464],["Thr81709","Den88675","Ave81464"],Ave81464,"Ave81464")

Actual (Unparsed): [[[0.8670000, 0.6383000]]]

Expected (Unparsed): [[[0.867,0.6383]]]

Actual:   [[[0.867, 0.6383]]]

Expected: [[[0.867, 0.6383]]]