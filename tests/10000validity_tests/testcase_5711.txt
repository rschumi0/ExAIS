import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Sep20723 = tf.keras.layers.Input(shape=([1, 2]))

Sep20723 = keras.layers.SeparableConv1D(2, (1),strides=(1), padding='valid', name = 'Sep20723', )(in0Sep20723)
Res34241 = keras.layers.Reshape((1, 2, 1), name = 'Res34241', )(Sep20723)
Zer44302 = keras.layers.ZeroPadding2D(padding=((1, 1), (1, 1)), name = 'Zer44302', )(Res34241)
model = tf.keras.models.Model(inputs=[in0Sep20723], outputs=Zer44302)
w = model.get_layer('Sep20723').get_weights() 
w[0] = np.array([[[0.3744], [0.1001]]])
w[1] = np.array([[[0.1928, 0.3085], [0.1399, 0.0136]]])
w[2] = np.array([0, 0])
model.get_layer('Sep20723').set_weights(w) 
in0Sep20723 = tf.constant([[[0.1046, 0.3855]]])
print (np.array2string(model.predict([in0Sep20723],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Zer44302.png')

LSep20723 = separable_conv1D_layer([[[0.1046, 0.3855]]], 1,[[[[0.3744], [0.1001]]],[[[0.1928, 0.3085], [0.1399, 0.0136]]]],[0, 0], 1, false, Sep20723), 
LRes34241 = reshape_layer(Sep20723, [1, 2, 1], Res34241), 
LZer44302 = zero_padding2D_layer(Res34241, 1, 1, 1, 1, Zer44302), 
exec_layers([LSep20723,LRes34241,LZer44302],["Sep20723","Res34241","Zer44302"],Zer44302,"Zer44302")

Actual (Unparsed): [[[[0.0000000], [0.0000000], [0.0000000], [0.0000000]], [[0.0000000], [0.0129490], [0.0126064], [0.0000000]], [[0.0000000], [0.0000000], [0.0000000], [0.0000000]]]]

Expected (Unparsed): [[[[0],[0],[0],[0]],[[0],[0.012949018017],[0.012606355320000002],[0]],[[0],[0],[0],[0]]]]

Actual:   [[[[0], [0], [0], [0]], [[0], [0.013], [0.0127], [0]], [[0], [0], [0], [0]]]]

Expected: [[[[0], [0], [0], [0]], [[0], [0.013], [0.0127], [0]], [[0], [0], [0], [0]]]]