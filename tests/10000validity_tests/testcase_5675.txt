import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Ave55512 = tf.keras.layers.Input(shape=([2, 2, 2]))
in1Ave55512 = tf.keras.layers.Input(shape=([2, 2, 2]))
in0Glo59210 = tf.keras.layers.Input(shape=([2, 1]))
in0Con63356 = tf.keras.layers.Input(shape=([7]))
in0Min36986 = tf.keras.layers.Input(shape=([2, 2, 1]))
in1Min36986 = tf.keras.layers.Input(shape=([2, 2, 1]))
in0Ave21942 = tf.keras.layers.Input(shape=([2, 2]))
in1Ave21942 = tf.keras.layers.Input(shape=([2, 2]))
in0Con92282 = tf.keras.layers.Input(shape=([10, 3, 1]))

Ave55512 = keras.layers.Average(name = 'Ave55512', )([in0Ave55512,in1Ave55512])
Res73419 = keras.layers.Reshape((2, 4), name = 'Res73419', )(Ave55512)
Fla61556 = keras.layers.Flatten(name = 'Fla61556', )(Res73419)
Glo59210 = keras.layers.GlobalAveragePooling1D(name = 'Glo59210', )(in0Glo59210)
Con63356 = keras.layers.Concatenate(axis=1, name = 'Con63356', )([Glo59210,in0Con63356])
Min38462 = keras.layers.Minimum(name = 'Min38462', )([Fla61556,Con63356])
Res75624 = keras.layers.Reshape((8, 1), name = 'Res75624', )(Min38462)
Res69966 = keras.layers.Reshape((8, 1, 1), name = 'Res69966', )(Res75624)
Res29460 = keras.layers.Reshape((8, 1, 1, 1), name = 'Res29460', )(Res69966)
Zer39557 = keras.layers.ZeroPadding3D(padding=((1, 1), (1, 1), (1, 1)), name = 'Zer39557', )(Res29460)
Res58417 = keras.layers.Reshape((10, 3, 3), name = 'Res58417', )(Zer39557)
Min36986 = keras.layers.Minimum(name = 'Min36986', )([in0Min36986,in1Min36986])
Sep40284 = keras.layers.SeparableConv2D(4, (2, 1),strides=(1, 1), padding='same', name = 'Sep40284', )(Min36986)
Res54565 = keras.layers.Reshape((2, 2, 4, 1), name = 'Res54565', )(Sep40284)
Con268 = keras.layers.Conv3D(2, (1, 1, 1),strides=(1, 2, 4), padding='same', dilation_rate=(1, 1, 1), name = 'Con268', )(Res54565)
Res16154 = keras.layers.Reshape((2, 1, 2), name = 'Res16154', )(Con268)
Ave21942 = keras.layers.Average(name = 'Ave21942', )([in0Ave21942,in1Ave21942])
Res68194 = keras.layers.Reshape((2, 1, 2), name = 'Res68194', )(Ave21942)
Mul23052 = keras.layers.Multiply(name = 'Mul23052', )([Res16154,Res68194])
Zer46012 = keras.layers.ZeroPadding2D(padding=((8, 0), (2, 0)), name = 'Zer46012', )(Mul23052)
Con92282 = keras.layers.Concatenate(axis=3, name = 'Con92282', )([Zer46012,in0Con92282])
Ave65703 = keras.layers.Average(name = 'Ave65703', )([Res58417,Con92282])
model = tf.keras.models.Model(inputs=[in0Ave55512,in1Ave55512,in0Glo59210,in0Con63356,in0Min36986,in1Min36986,in0Ave21942,in1Ave21942,in0Con92282], outputs=Ave65703)
w = model.get_layer('Sep40284').get_weights() 
w[0] = np.array([[[[0.1461]]], [[[0.7058]]]])
w[1] = np.array([[[[0.1374, 0.0691, 0.5147, 0.5575]]]])
w[2] = np.array([0, 0, 0, 0])
model.get_layer('Sep40284').set_weights(w) 
w = model.get_layer('Con268').get_weights() 
w[0] = np.array([[[[[0.2732, 0.7694]]]]])
w[1] = np.array([0, 0])
model.get_layer('Con268').set_weights(w) 
in0Ave55512 = tf.constant([[[[0.7999, 0.9079], [0.7204, 0.0206]], [[0.5819, 0.8335], [0.5159, 0.3511]]]])
in1Ave55512 = tf.constant([[[[0.2691, 0.9471], [0.8864, 0.6988]], [[0.7399, 0.0717], [0.9704, 0.0483]]]])
in0Glo59210 = tf.constant([[[1.8265], [1.6438]]])
in0Con63356 = tf.constant([[0.9919, 0.2387, 0.6729, 0.4974, 0.2643, 0.0341, 0.0835]])
in0Min36986 = tf.constant([[[[0.4097], [0.7325]], [[0.3696], [0.4882]]]])
in1Min36986 = tf.constant([[[[0.8126], [0.6583]], [[0.2796], [0.6426]]]])
in0Ave21942 = tf.constant([[[0.0686, 0.6148], [0.3971, 0.0211]]])
in1Ave21942 = tf.constant([[[0.1434, 0.937], [0.9446, 0.3085]]])
in0Con92282 = tf.constant([[[[0.2429], [0.82], [0.3478]], [[0.6091], [0.1954], [0.2708]], [[0.2827], [0.0356], [0.8811]], [[0.6042], [0.9547], [0.7499]], [[0.0882], [0.0551], [0.7524]], [[0.9088], [0.1422], [0.123]], [[0.6541], [0.3577], [0.9984]], [[0.0522], [0.7261], [0.4953]], [[0.1707], [0.7577], [0.1207]], [[0.3566], [0.9488], [0.1216]]]])
print (np.array2string(model.predict([in0Ave55512,in1Ave55512,in0Glo59210,in0Con63356,in0Min36986,in1Min36986,in0Ave21942,in1Ave21942,in0Con92282],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Ave65703.png')

LAve55512 = average_layer([[[[[0.7999, 0.9079], [0.7204, 0.0206]], [[0.5819, 0.8335], [0.5159, 0.3511]]]], [[[[0.2691, 0.9471], [0.8864, 0.6988]], [[0.7399, 0.0717], [0.9704, 0.0483]]]]], Ave55512), 
LRes73419 = reshape_layer(Ave55512, [2, 4], Res73419), 
LFla61556 = flatten_layer(Res73419, Fla61556), 
LGlo59210 = global_average_pooling1D_layer([[[1.8265], [1.6438]]], Glo59210), 
LCon63356 = concatenate_layer([Glo59210,[[0.9919, 0.2387, 0.6729, 0.4974, 0.2643, 0.0341, 0.0835]]], 1, Con63356), 
LMin38462 = minimum_layer([Fla61556,Con63356], Min38462), 
LRes75624 = reshape_layer(Min38462, [8, 1], Res75624), 
LRes69966 = reshape_layer(Res75624, [8, 1, 1], Res69966), 
LRes29460 = reshape_layer(Res69966, [8, 1, 1, 1], Res29460), 
LZer39557 = zero_padding3D_layer(Res29460, 1, 1, 1, 1, 1, 1, Zer39557), 
LRes58417 = reshape_layer(Zer39557, [10, 3, 3], Res58417), 
LMin36986 = minimum_layer([[[[[0.4097], [0.7325]], [[0.3696], [0.4882]]]], [[[[0.8126], [0.6583]], [[0.2796], [0.6426]]]]], Min36986), 
LSep40284 = separable_conv2D_layer(Min36986, 2, 1,[[[[[0.1461]]], [[[0.7058]]]],[[[[0.1374, 0.0691, 0.5147, 0.5575]]]]],[0, 0, 0, 0], 1, 1, true, Sep40284), 
LRes54565 = reshape_layer(Sep40284, [2, 2, 4, 1], Res54565), 
LCon268 = conv3D_layer(Res54565, 1, 1, 1,[[[[[0.2732, 0.7694]]]]],[0, 0], 1, 2, 4, true, 1, 1, 1, Con268), 
LRes16154 = reshape_layer(Con268, [2, 1, 2], Res16154), 
LAve21942 = average_layer([[[[0.0686, 0.6148], [0.3971, 0.0211]]], [[[0.1434, 0.937], [0.9446, 0.3085]]]], Ave21942), 
LRes68194 = reshape_layer(Ave21942, [2, 1, 2], Res68194), 
LMul23052 = multiply_layer([Res16154,Res68194], Mul23052), 
LZer46012 = zero_padding2D_layer(Mul23052, 8, 0, 2, 0, Zer46012), 
LCon92282 = concatenate_layer([Zer46012,[[[[0.2429], [0.82], [0.3478]], [[0.6091], [0.1954], [0.2708]], [[0.2827], [0.0356], [0.8811]], [[0.6042], [0.9547], [0.7499]], [[0.0882], [0.0551], [0.7524]], [[0.9088], [0.1422], [0.123]], [[0.6541], [0.3577], [0.9984]], [[0.0522], [0.7261], [0.4953]], [[0.1707], [0.7577], [0.1207]], [[0.3566], [0.9488], [0.1216]]]]], 3, Con92282), 
LAve65703 = average_layer([Res58417,Con92282], Ave65703), 
exec_layers([LAve55512,LRes73419,LFla61556,LGlo59210,LCon63356,LMin38462,LRes75624,LRes69966,LRes29460,LZer39557,LRes58417,LMin36986,LSep40284,LRes54565,LCon268,LRes16154,LAve21942,LRes68194,LMul23052,LZer46012,LCon92282,LAve65703],["Ave55512","Res73419","Fla61556","Glo59210","Con63356","Min38462","Res75624","Res69966","Res29460","Zer39557","Res58417","Min36986","Sep40284","Res54565","Con268","Res16154","Ave21942","Res68194","Mul23052","Zer46012","Con92282","Ave65703"],Ave65703,"Ave65703")

Actual (Unparsed): [[[[0.0000000, 0.0000000, 0.1214500], [0.0000000, 0.0000000, 0.4100000], [0.0000000, 0.0000000, 0.1739000]], [[0.0000000, 0.0000000, 0.3045500], [0.0000000, 0.2672500, 0.0977000], [0.0000000, 0.0000000, 0.1354000]], [[0.0000000, 0.0000000, 0.1413500], [0.0000000, 0.4637500, 0.0178000], [0.0000000, 0.0000000, 0.4405500]], [[0.0000000, 0.0000000, 0.3021000], [0.0000000, 0.1193500, 0.4773500], [0.0000000, 0.0000000, 0.3749500]], [[0.0000000, 0.0000000, 0.0441000], [0.0000000, 0.1798500, 0.0275500], [0.0000000, 0.0000000, 0.3762000]], [[0.0000000, 0.0000000, 0.4544000], [0.0000000, 0.2487000, 0.0711000], [0.0000000, 0.0000000, 0.0615000]], [[0.0000000, 0.0000000, 0.3270500], [0.0000000, 0.1321500, 0.1788500], [0.0000000, 0.0000000, 0.4992000]], [[0.0000000, 0.0000000, 0.0261000], [0.0000000, 0.0170500, 0.3630500], [0.0000000, 0.0000000, 0.2476500]], [[0.0000000, 0.0000000, 0.0853500], [0.0000000, 0.0417500, 0.3788500], [0.0005117, 0.0105483, 0.0603500]], [[0.0000000, 0.0000000, 0.1783000], [0.0000000, 0.0000000, 0.4744000], [0.0005143, 0.0003558, 0.0608000]]]]

Expected (Unparsed): [[[[0,0,0.12145],[0,0,0.41],[0,0,0.1739]],[[0,0,0.30455],[0,0.26725,0.0977],[0,0,0.1354]],[[0,0,0.14135],[0,0.46375,0.0178],[0,0,0.44055]],[[0,0,0.3021],[0,0.11935,0.47735],[0,0,0.37495]],[[0,0,0.0441],[0,0.17984999999999998,0.02755],[0,0,0.3762]],[[0,0,0.4544],[0,0.2487,0.0711],[0,0,0.0615]],[[0,0,0.32705],[0,0.13215,0.17885],[0,0,0.4992]],[[0,0,0.0261],[0,0.01705,0.36305],[0,0,0.24765]],[[0,0,0.08535],[0,0.04175,0.37885],[0.000511696350766404,0.010548329642110173,0.06035]],[[0,0,0.1783],[0,0,0.4744],[0.0005143399273533219,0.00035583897075905667,0.0608]]]]

Actual:   [[[[0, 0, 0.1215], [0, 0, 0.41], [0, 0, 0.1739]], [[0, 0, 0.3046], [0, 0.2673, 0.0977], [0, 0, 0.1354]], [[0, 0, 0.1414], [0, 0.4638, 0.0178], [0, 0, 0.4406]], [[0, 0, 0.3021], [0, 0.1194, 0.4774], [0, 0, 0.375]], [[0, 0, 0.0441], [0, 0.1799, 0.0276], [0, 0, 0.3762]], [[0, 0, 0.4544], [0, 0.2487, 0.0711], [0, 0, 0.0615]], [[0, 0, 0.3271], [0, 0.1322, 0.1789], [0, 0, 0.4992]], [[0, 0, 0.0261], [0, 0.0171, 0.3631], [0, 0, 0.2477]], [[0, 0, 0.0854], [0, 0.0418, 0.3789], [0.0006, 0.0106, 0.0604]], [[0, 0, 0.1783], [0, 0, 0.4744], [0.0006, 0.0004, 0.0608]]]]

Expected: [[[[0, 0, 0.1215], [0, 0, 0.41], [0, 0, 0.1739]], [[0, 0, 0.3046], [0, 0.2673, 0.0977], [0, 0, 0.1354]], [[0, 0, 0.1414], [0, 0.4638, 0.0178], [0, 0, 0.4406]], [[0, 0, 0.3021], [0, 0.1194, 0.4774], [0, 0, 0.375]], [[0, 0, 0.0441], [0, 0.1799, 0.0276], [0, 0, 0.3762]], [[0, 0, 0.4544], [0, 0.2487, 0.0711], [0, 0, 0.0615]], [[0, 0, 0.3271], [0, 0.1322, 0.1789], [0, 0, 0.4992]], [[0, 0, 0.0261], [0, 0.0171, 0.3631], [0, 0, 0.2477]], [[0, 0, 0.0854], [0, 0.0418, 0.3789], [0.0006, 0.0106, 0.0604]], [[0, 0, 0.1783], [0, 0, 0.4744], [0.0006, 0.0004, 0.0608]]]]