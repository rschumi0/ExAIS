import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Min93163 = tf.keras.layers.Input(shape=([1, 2, 1]))
in1Min93163 = tf.keras.layers.Input(shape=([1, 2, 1]))

Min93163 = keras.layers.Minimum(name = 'Min93163', )([in0Min93163,in1Min93163])
Bat62843 = keras.layers.BatchNormalization(axis=1, epsilon=0.5300878191910483,  name = 'Bat62843', )(Min93163)
model = tf.keras.models.Model(inputs=[in0Min93163,in1Min93163], outputs=Bat62843)
w = model.get_layer('Bat62843').get_weights() 
w[0] = np.array([0.3959])
w[1] = np.array([0.3544])
w[2] = np.array([0.0986])
w[3] = np.array([0.9838])
model.get_layer('Bat62843').set_weights(w) 
in0Min93163 = tf.constant([[[[0.6907], [0.4918]]]])
in1Min93163 = tf.constant([[[[0.8213], [0.4828]]]])
print (np.array2string(model.predict([in0Min93163,in1Min93163],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Bat62843.png')

LMin93163 = minimum_layer([[[[[0.6907], [0.4918]]]], [[[[0.8213], [0.4828]]]]], Min93163), 
LBat62843 = batch_normalization_layer(Min93163, 1, 0.5300878191910483, [0.3959], [0.3544], [0.0986], [0.9838], Bat62843), 
exec_layers([LMin93163,LBat62843],["Min93163","Bat62843"],Bat62843,"Bat62843")

Actual (Unparsed): [[[[0.5449170], [0.4780221]]]]

Expected (Unparsed): [[[[0.5449169917935961],[0.4780220710135106]]]]

Actual:   [[[[0.545], [0.4781]]]]

Expected: [[[[0.545], [0.4781]]]]