import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Mul48581 = tf.keras.layers.Input(shape=([1, 1, 2]))
in1Mul48581 = tf.keras.layers.Input(shape=([1, 1, 2]))

Mul48581 = keras.layers.Multiply(name = 'Mul48581', )([in0Mul48581,in1Mul48581])
Con45367 = keras.layers.Conv2D(3, (1, 1),strides=(1, 1), padding='valid', dilation_rate=(1, 1), name = 'Con45367', )(Mul48581)
model = tf.keras.models.Model(inputs=[in0Mul48581,in1Mul48581], outputs=Con45367)
w = model.get_layer('Con45367').get_weights() 
w[0] = np.array([[[[0.8495, 0.6848, 0.0813], [0.2587, 0.1523, 0.2117]]]])
w[1] = np.array([0, 0, 0])
model.get_layer('Con45367').set_weights(w) 
in0Mul48581 = tf.constant([[[[0.3048, 0.7679]]]])
in1Mul48581 = tf.constant([[[[0.5241, 0.4887]]]])
print (np.array2string(model.predict([in0Mul48581,in1Mul48581],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Con45367.png')

LMul48581 = multiply_layer([[[[[0.3048, 0.7679]]]], [[[[0.5241, 0.4887]]]]], Mul48581), 
LCon45367 = conv2D_layer(Mul48581, 1, 1,[[[[0.8495, 0.6848, 0.0813], [0.2587, 0.1523, 0.2117]]]],[0, 0, 0], 1, 1, false, 1, 1, Con45367), 
exec_layers([LMul48581,LCon45367],["Mul48581","Con45367"],Con45367,"Con45367")

Actual (Unparsed): [[[[0.2327870, 0.1665479, 0.0924326]]]]

Expected (Unparsed): [[[[0.23278701041100003,0.166547878443,0.09243256072500002]]]]

Actual:   [[[[0.2328, 0.1666, 0.0925]]]]

Expected: [[[[0.2328, 0.1666, 0.0925]]]]