import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Mul85067 = tf.keras.layers.Input(shape=([2, 2, 1, 1]))
in1Mul85067 = tf.keras.layers.Input(shape=([2, 2, 1, 1]))

Mul85067 = keras.layers.Multiply(name = 'Mul85067', )([in0Mul85067,in1Mul85067])
Den14308 = keras.layers.Dense(4,name = 'Den14308', )(Mul85067)
Sof7696 = keras.layers.Softmax(axis=1, name = 'Sof7696', )(Den14308)
model = tf.keras.models.Model(inputs=[in0Mul85067,in1Mul85067], outputs=Sof7696)
w = model.get_layer('Den14308').get_weights() 
w[0] = np.array([[0.4747, 0.5828, 0.861, 0.6878]])
w[1] = np.array([0.6809, 0.6653, 0.4011, 0.9896])
model.get_layer('Den14308').set_weights(w) 
in0Mul85067 = tf.constant([[[[[0.9104]], [[0.929]]], [[[0.3597]], [[0.7896]]]]])
in1Mul85067 = tf.constant([[[[[0.6978]], [[0.1977]]], [[[0.921]], [[0.8378]]]]])
print (np.array2string(model.predict([in0Mul85067,in1Mul85067],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Sof7696.png')

LMul85067 = multiply_layer([[[[[[0.9104]], [[0.929]]], [[[0.3597]], [[0.7896]]]]], [[[[[0.6978]], [[0.1977]]], [[[0.921]], [[0.8378]]]]]], Mul85067), 
LDen14308 = dense_layer(Mul85067, [[0.4747, 0.5828, 0.861, 0.6878]],[0.6809, 0.6653, 0.4011, 0.9896], Den14308), 
LSof7696 = softmax_layer(Den14308, 1, Sof7696), 
exec_layers([LMul85067,LDen14308,LSof7696],["Mul85067","Den14308","Sof7696"],Sof7696,"Sof7696")

Actual (Unparsed): [[[[[0.5360139, 0.5441763, 0.5650636, 0.5520821]], [[0.4435315, 0.4308218, 0.3985667, 0.4185631]]], [[[0.4639861, 0.4558237, 0.4349364, 0.4479179]], [[0.5564685, 0.5691782, 0.6014333, 0.5814369]]]]]

Expected (Unparsed): [[[[[0.5360139442155665,0.5441763500785199,0.5650635648405768,0.5520820663359626]],[[0.4435314750119463,0.4308218304459367,0.39856675646460504,0.4185631555200711]]],[[[0.4639860557844336,0.4558236499214801,0.43493643515942326,0.4479179336640374]],[[0.5564685249880537,0.5691781695540634,0.601433243535395,0.5814368444799288]]]]]

Actual:   [[[[[0.5361, 0.5442, 0.5651, 0.5521]], [[0.4436, 0.4309, 0.3986, 0.4186]]], [[[0.464, 0.4559, 0.435, 0.448]], [[0.5565, 0.5692, 0.6015, 0.5815]]]]]

Expected: [[[[[0.5361, 0.5442, 0.5651, 0.5521]], [[0.4436, 0.4309, 0.3986, 0.4186]]], [[[0.464, 0.4559, 0.435, 0.448]], [[0.5565, 0.5692, 0.6015, 0.5815]]]]]