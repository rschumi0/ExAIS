import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Ave70439 = tf.keras.layers.Input(shape=([1, 1]))
in1Ave70439 = tf.keras.layers.Input(shape=([1, 1]))
in0Lea72865 = tf.keras.layers.Input(shape=([1, 2]))
in0Con37307 = tf.keras.layers.Input(shape=([1, 1]))
in0PRe67550 = tf.keras.layers.Input(shape=([2, 2]))
in0Con63051 = tf.keras.layers.Input(shape=([2, 1]))
in0Con77411 = tf.keras.layers.Input(shape=([3, 3]))
in0Dot88741 = tf.keras.layers.Input(shape=([3]))
in1Dot88741 = tf.keras.layers.Input(shape=([3]))
in0Con9857 = tf.keras.layers.Input(shape=([3, 2, 2]))
in0Sub37471 = tf.keras.layers.Input(shape=([3, 2, 3]))
in1Sub37471 = tf.keras.layers.Input(shape=([3, 2, 3]))
in0Add77846 = tf.keras.layers.Input(shape=([2, 1, 1]))
in1Add77846 = tf.keras.layers.Input(shape=([2, 1, 1]))
in0Con99359 = tf.keras.layers.Input(shape=([3, 1]))
in0Cro49479 = tf.keras.layers.Input(shape=([3, 2]))
in0Con65577 = tf.keras.layers.Input(shape=([3, 4]))

Ave70439 = keras.layers.Average(name = 'Ave70439', )([in0Ave70439,in1Ave70439])
Con88310 = keras.layers.Conv1D(3, (1),strides=(1), padding='same', dilation_rate=(1), name = 'Con88310', )(Ave70439)
Lea72865 = keras.layers.LeakyReLU(alpha=4.612992422802931, name = 'Lea72865', input_shape=(1, 2))(in0Lea72865)
Con37307 = keras.layers.Concatenate(axis=2, name = 'Con37307', )([Lea72865,in0Con37307])
Sub83688 = keras.layers.Subtract(name = 'Sub83688', )([Con88310,Con37307])
Zer43159 = keras.layers.ZeroPadding1D(padding=((1, 0)), name = 'Zer43159', )(Sub83688)
PRe67550 = keras.layers.PReLU(name = 'PRe67550', input_shape=(2, 2))(in0PRe67550)
Con63051 = keras.layers.Concatenate(axis=2, name = 'Con63051', )([PRe67550,in0Con63051])
Ave99720 = keras.layers.Average(name = 'Ave99720', )([Zer43159,Con63051])
Zer54776 = keras.layers.ZeroPadding1D(padding=((1, 0)), name = 'Zer54776', )(Ave99720)
Con77411 = keras.layers.Concatenate(axis=2, name = 'Con77411', )([Zer54776,in0Con77411])
Dot88741 = keras.layers.Dot(axes=(1, 1), name = 'Dot88741', )([in0Dot88741,in1Dot88741])
Res47935 = keras.layers.Reshape((1, 1), name = 'Res47935', )(Dot88741)
Res48667 = keras.layers.Reshape((1, 1, 1), name = 'Res48667', )(Res47935)
Zer36442 = keras.layers.ZeroPadding2D(padding=((2, 0), (1, 0)), name = 'Zer36442', )(Res48667)
Con9857 = keras.layers.Concatenate(axis=3, name = 'Con9857', )([Zer36442,in0Con9857])
Sub37471 = keras.layers.Subtract(name = 'Sub37471', )([in0Sub37471,in1Sub37471])
Min35634 = keras.layers.Minimum(name = 'Min35634', )([Con9857,Sub37471])
Max93761 = keras.layers.MaxPool2D(pool_size=(1, 1), name = 'Max93761', )(Min35634)
Res81036 = keras.layers.Reshape((3, 6), name = 'Res81036', )(Max93761)
Add77846 = keras.layers.Add(name = 'Add77846', )([in0Add77846,in1Add77846])
Res94229 = keras.layers.Reshape((2, 1), name = 'Res94229', )(Add77846)
Zer33219 = keras.layers.ZeroPadding1D(padding=((1, 0)), name = 'Zer33219', )(Res94229)
Con99359 = keras.layers.Concatenate(axis=2, name = 'Con99359', )([Zer33219,in0Con99359])
Cro49479 = keras.layers.Cropping1D(cropping=((0, 0)), name = 'Cro49479', )(in0Cro49479)
Min41482 = keras.layers.Minimum(name = 'Min41482', )([Con99359,Cro49479])
Con65577 = keras.layers.Concatenate(axis=2, name = 'Con65577', )([Min41482,in0Con65577])
Max62664 = keras.layers.Maximum(name = 'Max62664', )([Res81036,Con65577])
Min69159 = keras.layers.Minimum(name = 'Min69159', )([Con77411,Max62664])
model = tf.keras.models.Model(inputs=[in0Ave70439,in1Ave70439,in0Lea72865,in0Con37307,in0PRe67550,in0Con63051,in0Con77411,in0Dot88741,in1Dot88741,in0Con9857,in0Sub37471,in1Sub37471,in0Add77846,in1Add77846,in0Con99359,in0Cro49479,in0Con65577], outputs=Min69159)
w = model.get_layer('Con88310').get_weights() 
w[0] = np.array([[[0.2397, 0.6707, 0.8043]]])
w[1] = np.array([0, 0, 0])
model.get_layer('Con88310').set_weights(w) 
w = model.get_layer('PRe67550').get_weights() 
w[0] = np.array([[0.9816, 0.4536], [0.8391, 0.3159]])
model.get_layer('PRe67550').set_weights(w) 
in0Ave70439 = tf.constant([[[0.1881]]])
in1Ave70439 = tf.constant([[[0.3771]]])
in0Lea72865 = tf.constant([[[0.7342, 0.6037]]])
in0Con37307 = tf.constant([[[0.5248]]])
in0PRe67550 = tf.constant([[[0.301, 0.6416], [0.4329, 0.4393]]])
in0Con63051 = tf.constant([[[0.2752], [0.0077]]])
in0Con77411 = tf.constant([[[0.202, 0.8612, 0.6169], [0.3701, 0.9628, 0.1654], [0.3089, 0.0036, 0.0852]]])
in0Dot88741 = tf.constant([[0.0957, 0.5116, 0.6996]])
in1Dot88741 = tf.constant([[0.0912, 0.9227, 0.9352]])
in0Con9857 = tf.constant([[[[0.653, 0.1045], [0.1899, 0.27]], [[0.7524, 0.9118], [0.8285, 0.7445]], [[0.0587, 0.8562], [0.9784, 0.5787]]]])
in0Sub37471 = tf.constant([[[[0.8376, 0.8119, 0.6186], [0.57, 0.003, 0.0162]], [[0.3715, 0.017, 0.5536], [0.3805, 0.2046, 0.1154]], [[0.3706, 0.7171, 0.9071], [0.6816, 0.0335, 0.6402]]]])
in1Sub37471 = tf.constant([[[[0.036, 0.3502, 0.0407], [0.4557, 0.6954, 0.9815]], [[0.3623, 0.1537, 0.158], [0.4369, 0.4897, 0.8588]], [[0.0357, 0.3894, 0.8021], [0.6042, 0.6283, 0.2391]]]])
in0Add77846 = tf.constant([[[[0.5083]], [[0.8333]]]])
in1Add77846 = tf.constant([[[[0.2852]], [[0.1323]]]])
in0Con99359 = tf.constant([[[0.0957], [0.7943], [0.4461]]])
in0Cro49479 = tf.constant([[[1.6438, 1.6057], [1.0982, 1.5454], [1.6017, 1.0854]]])
in0Con65577 = tf.constant([[[0.8671, 0.9029, 0.8882, 0.8876], [0.0022, 0.6525, 0.1341, 0.6661], [0.7539, 0.9726, 0.3262, 0.5638]]])
print (np.array2string(model.predict([in0Ave70439,in1Ave70439,in0Lea72865,in0Con37307,in0PRe67550,in0Con63051,in0Con77411,in0Dot88741,in1Dot88741,in0Con9857,in0Sub37471,in1Sub37471,in0Add77846,in1Add77846,in0Con99359,in0Cro49479,in0Con65577],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Min69159.png')

LAve70439 = average_layer([[[[0.1881]]], [[[0.3771]]]], Ave70439), 
LCon88310 = conv1D_layer(Ave70439, 1,[[[0.2397, 0.6707, 0.8043]]],[0, 0, 0], 1, true, 1, Con88310), 
LLea72865 = leaky_relu_layer([[[0.7342, 0.6037]]], 4.612992422802931, Lea72865), 
LCon37307 = concatenate_layer([Lea72865,[[[0.5248]]]], 2, Con37307), 
LSub83688 = subtract_layer(Con88310,Con37307, Sub83688), 
LZer43159 = zero_padding1D_layer(Sub83688, 1, 0, Zer43159), 
LPRe67550 = prelu_layer([[[0.301, 0.6416], [0.4329, 0.4393]]], [[0.9816, 0.4536], [0.8391, 0.3159]], PRe67550), 
LCon63051 = concatenate_layer([PRe67550,[[[0.2752], [0.0077]]]], 2, Con63051), 
LAve99720 = average_layer([Zer43159,Con63051], Ave99720), 
LZer54776 = zero_padding1D_layer(Ave99720, 1, 0, Zer54776), 
LCon77411 = concatenate_layer([Zer54776,[[[0.202, 0.8612, 0.6169], [0.3701, 0.9628, 0.1654], [0.3089, 0.0036, 0.0852]]]], 2, Con77411), 
LDot88741 = dot_layer([[0.0957, 0.5116, 0.6996]], [[0.0912, 0.9227, 0.9352]], 1, 1, Dot88741), 
LRes47935 = reshape_layer(Dot88741, [1, 1], Res47935), 
LRes48667 = reshape_layer(Res47935, [1, 1, 1], Res48667), 
LZer36442 = zero_padding2D_layer(Res48667, 2, 0, 1, 0, Zer36442), 
LCon9857 = concatenate_layer([Zer36442,[[[[0.653, 0.1045], [0.1899, 0.27]], [[0.7524, 0.9118], [0.8285, 0.7445]], [[0.0587, 0.8562], [0.9784, 0.5787]]]]], 3, Con9857), 
LSub37471 = subtract_layer([[[[0.8376, 0.8119, 0.6186], [0.57, 0.003, 0.0162]], [[0.3715, 0.017, 0.5536], [0.3805, 0.2046, 0.1154]], [[0.3706, 0.7171, 0.9071], [0.6816, 0.0335, 0.6402]]]], [[[[0.036, 0.3502, 0.0407], [0.4557, 0.6954, 0.9815]], [[0.3623, 0.1537, 0.158], [0.4369, 0.4897, 0.8588]], [[0.0357, 0.3894, 0.8021], [0.6042, 0.6283, 0.2391]]]], Sub37471), 
LMin35634 = minimum_layer([Con9857,Sub37471], Min35634), 
LMax93761 = max_pool2D_layer(Min35634, 1, 1, Max93761), 
LRes81036 = reshape_layer(Max93761, [3, 6], Res81036), 
LAdd77846 = add_layer([[[[[0.5083]], [[0.8333]]]], [[[[0.2852]], [[0.1323]]]]], Add77846), 
LRes94229 = reshape_layer(Add77846, [2, 1], Res94229), 
LZer33219 = zero_padding1D_layer(Res94229, 1, 0, Zer33219), 
LCon99359 = concatenate_layer([Zer33219,[[[0.0957], [0.7943], [0.4461]]]], 2, Con99359), 
LCro49479 = cropping1D_layer([[[1.6438, 1.6057], [1.0982, 1.5454], [1.6017, 1.0854]]], 0, 0, Cro49479), 
LMin41482 = minimum_layer([Con99359,Cro49479], Min41482), 
LCon65577 = concatenate_layer([Min41482,[[[0.8671, 0.9029, 0.8882, 0.8876], [0.0022, 0.6525, 0.1341, 0.6661], [0.7539, 0.9726, 0.3262, 0.5638]]]], 2, Con65577), 
LMax62664 = maximum_layer([Res81036,Con65577], Max62664), 
LMin69159 = minimum_layer([Con77411,Max62664], Min69159), 
exec_layers([LAve70439,LCon88310,LLea72865,LCon37307,LSub83688,LZer43159,LPRe67550,LCon63051,LAve99720,LZer54776,LCon77411,LDot88741,LRes47935,LRes48667,LZer36442,LCon9857,LSub37471,LMin35634,LMax93761,LRes81036,LAdd77846,LRes94229,LZer33219,LCon99359,LCro49479,LMin41482,LCon65577,LMax62664,LMin69159],["Ave70439","Con88310","Lea72865","Con37307","Sub83688","Zer43159","PRe67550","Con63051","Ave99720","Zer54776","Con77411","Dot88741","Res47935","Res48667","Zer36442","Con9857","Sub37471","Min35634","Max93761","Res81036","Add77846","Res94229","Zer33219","Con99359","Cro49479","Min41482","Con65577","Max62664","Min69159"],Min69159,"Min69159")

Actual (Unparsed): [[[0.0000000, 0.0000000, 0.0000000, 0.2020000, 0.8612000, 0.6169000], [0.1505000, 0.3208000, 0.1376000, 0.3701000, 0.1341000, 0.1654000], [-0.1167804, 0.0125699, -0.1449024, 0.3089000, 0.0036000, 0.0852000]]]

Expected (Unparsed): [[[0,0,0,0.202,0.8612,0.6169],[0.1505,0.3208,0.1376,0.3701,0.1341,0.1654],[-0.11678038999999998,0.01256990999999999,-0.14490241000000004,0.3089,0.0036,0.0852]]]

Actual:   [[[0, 0, 0, 0.202, 0.8612, 0.6169], [0.1505, 0.3208, 0.1376, 0.3701, 0.1341, 0.1654], [-0.1167, 0.0126, -0.1449, 0.3089, 0.0036, 0.0852]]]

Expected: [[[0, 0, 0, 0.202, 0.8612, 0.6169], [0.1505, 0.3208, 0.1376, 0.3701, 0.1341, 0.1654], [-0.1167, 0.0126, -0.1449, 0.3089, 0.0036, 0.0852]]]