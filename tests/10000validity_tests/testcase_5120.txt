import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Loc67392 = tf.keras.layers.Input(shape=([2, 1]))
in0Con3462 = tf.keras.layers.Input(shape=([3, 6, 1]))
in0Sub7190 = tf.keras.layers.Input(shape=([2, 3]))
in1Sub7190 = tf.keras.layers.Input(shape=([2, 3]))
in0Con10570 = tf.keras.layers.Input(shape=([3, 2, 1]))
in0Sub37811 = tf.keras.layers.Input(shape=([3, 2, 2]))
in1Sub37811 = tf.keras.layers.Input(shape=([3, 2, 2]))

Loc67392 = keras.layers.LocallyConnected1D(4, (2),strides=(2), name = 'Loc67392', )(in0Loc67392)
Bat89486 = keras.layers.BatchNormalization(axis=1, epsilon=0.1746296867372116,  name = 'Bat89486', )(Loc67392)
Res21214 = keras.layers.Reshape((1, 4, 1), name = 'Res21214', )(Bat89486)
Zer34157 = keras.layers.ZeroPadding2D(padding=((2, 0), (2, 0)), name = 'Zer34157', )(Res21214)
Con3462 = keras.layers.Concatenate(axis=3, name = 'Con3462', )([Zer34157,in0Con3462])
Sub7190 = keras.layers.Subtract(name = 'Sub7190', )([in0Sub7190,in1Sub7190])
LST3389 = keras.layers.LSTM(3,recurrent_activation='sigmoid', name = 'LST3389', )(Sub7190)
Res37983 = keras.layers.Reshape((3, 1), name = 'Res37983', )(LST3389)
Res31657 = keras.layers.Reshape((3, 1, 1), name = 'Res31657', )(Res37983)
Zer47925 = keras.layers.ZeroPadding2D(padding=((0, 0), (1, 0)), name = 'Zer47925', )(Res31657)
Con10570 = keras.layers.Concatenate(axis=3, name = 'Con10570', )([Zer47925,in0Con10570])
Sub37811 = keras.layers.Subtract(name = 'Sub37811', )([in0Sub37811,in1Sub37811])
Ave8319 = keras.layers.Average(name = 'Ave8319', )([Con10570,Sub37811])
Zer67008 = keras.layers.ZeroPadding2D(padding=((0, 0), (4, 0)), name = 'Zer67008', )(Ave8319)
Mul89192 = keras.layers.Multiply(name = 'Mul89192', )([Con3462,Zer67008])
model = tf.keras.models.Model(inputs=[in0Loc67392,in0Con3462,in0Sub7190,in1Sub7190,in0Con10570,in0Sub37811,in1Sub37811], outputs=Mul89192)
w = model.get_layer('Loc67392').get_weights() 
w[0] = np.array([[[0.5981, 0.8078, 0.2317, 0.8149], [0.5865, 0.1633, 0.3054, 0.1951]]])
w[1] = np.array([[0, 0, 0, 0]])
model.get_layer('Loc67392').set_weights(w) 
w = model.get_layer('Bat89486').get_weights() 
w[0] = np.array([0.9476])
w[1] = np.array([0.4932])
w[2] = np.array([0.901])
w[3] = np.array([0.8037])
model.get_layer('Bat89486').set_weights(w) 
w = model.get_layer('LST3389').get_weights() 
w[0] = np.array([[3, 1, 4, 8, 1, 9, 3, 6, 8, 1, 4, 8], [9, 3, 7, 2, 8, 9, 10, 7, 8, 10, 9, 3], [8, 9, 10, 5, 1, 8, 6, 6, 6, 8, 9, 10]])
w[1] = np.array([[9, 1, 4, 10, 3, 3, 9, 4, 7, 5, 2, 2], [4, 1, 3, 5, 5, 5, 6, 4, 2, 4, 3, 1], [3, 6, 8, 6, 10, 9, 6, 6, 6, 3, 5, 2]])
w[2] = np.array([9, 1, 8, 4, 8, 4, 7, 3, 7, 5, 1, 9])
model.get_layer('LST3389').set_weights(w) 
in0Loc67392 = tf.constant([[[0.6559], [0.5919]]])
in0Con3462 = tf.constant([[[[0.1202], [0.8535], [0.7896], [0.1871], [0.6756], [0.7626]], [[0.1422], [0.7573], [0.5359], [0.7887], [0.7341], [0.1698]], [[0.6929], [0.1439], [0.7292], [0.1993], [0.3286], [0.4171]]]])
in0Sub7190 = tf.constant([[[0.5338, 0.5251, 0.7333], [0.0229, 0.9453, 0.2019]]])
in1Sub7190 = tf.constant([[[0.4649, 0.3281, 0.3286], [0.0829, 0.7581, 0.8551]]])
in0Con10570 = tf.constant([[[[0.1929], [0.12]], [[0.7225], [0.8914]], [[0.8674], [0.5532]]]])
in0Sub37811 = tf.constant([[[[0.3189, 0.5813], [0.3785, 0.1312]], [[0.8855, 0.8262], [0.6085, 0.1207]], [[0.85, 0.7414], [0.2441, 0.1792]]]])
in1Sub37811 = tf.constant([[[[0.6607, 0.622], [0.9704, 0.4905]], [[0.596, 0.2409], [0.4309, 0.0853]], [[0.9862, 0.5969], [0.1096, 0.6345]]]])
print (np.array2string(model.predict([in0Loc67392,in0Con3462,in0Sub7190,in1Sub7190,in0Con10570,in0Sub37811,in1Sub37811],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Mul89192.png')

LLoc67392 = locally_connected1D_layer([[[0.6559], [0.5919]]], 2,[[[0.5981, 0.8078, 0.2317, 0.8149], [0.5865, 0.1633, 0.3054, 0.1951]]],[[0, 0, 0, 0]], 2, Loc67392), 
LBat89486 = batch_normalization_layer(Loc67392, 1, 0.1746296867372116, [0.9476], [0.4932], [0.901], [0.8037], Bat89486), 
LRes21214 = reshape_layer(Bat89486, [1, 4, 1], Res21214), 
LZer34157 = zero_padding2D_layer(Res21214, 2, 0, 2, 0, Zer34157), 
LCon3462 = concatenate_layer([Zer34157,[[[[0.1202], [0.8535], [0.7896], [0.1871], [0.6756], [0.7626]], [[0.1422], [0.7573], [0.5359], [0.7887], [0.7341], [0.1698]], [[0.6929], [0.1439], [0.7292], [0.1993], [0.3286], [0.4171]]]]], 3, Con3462), 
LSub7190 = subtract_layer([[[0.5338, 0.5251, 0.7333], [0.0229, 0.9453, 0.2019]]], [[[0.4649, 0.3281, 0.3286], [0.0829, 0.7581, 0.8551]]], Sub7190), 
LLST3389 = lstm_layer(Sub7190,[[3, 1, 4, 8, 1, 9, 3, 6, 8, 1, 4, 8], [9, 3, 7, 2, 8, 9, 10, 7, 8, 10, 9, 3], [8, 9, 10, 5, 1, 8, 6, 6, 6, 8, 9, 10]],[[9, 1, 4, 10, 3, 3, 9, 4, 7, 5, 2, 2], [4, 1, 3, 5, 5, 5, 6, 4, 2, 4, 3, 1], [3, 6, 8, 6, 10, 9, 6, 6, 6, 3, 5, 2]],[9, 1, 8, 4, 8, 4, 7, 3, 7, 5, 1, 9], LST3389), 
LRes37983 = reshape_layer(LST3389, [3, 1], Res37983), 
LRes31657 = reshape_layer(Res37983, [3, 1, 1], Res31657), 
LZer47925 = zero_padding2D_layer(Res31657, 0, 0, 1, 0, Zer47925), 
LCon10570 = concatenate_layer([Zer47925,[[[[0.1929], [0.12]], [[0.7225], [0.8914]], [[0.8674], [0.5532]]]]], 3, Con10570), 
LSub37811 = subtract_layer([[[[0.3189, 0.5813], [0.3785, 0.1312]], [[0.8855, 0.8262], [0.6085, 0.1207]], [[0.85, 0.7414], [0.2441, 0.1792]]]], [[[[0.6607, 0.622], [0.9704, 0.4905]], [[0.596, 0.2409], [0.4309, 0.0853]], [[0.9862, 0.5969], [0.1096, 0.6345]]]], Sub37811), 
LAve8319 = average_layer([Con10570,Sub37811], Ave8319), 
LZer67008 = zero_padding2D_layer(Ave8319, 0, 0, 4, 0, Zer67008), 
LMul89192 = multiply_layer([Con3462,Zer67008], Mul89192), 
exec_layers([LLoc67392,LBat89486,LRes21214,LZer34157,LCon3462,LSub7190,LLST3389,LRes37983,LRes31657,LZer47925,LCon10570,LSub37811,LAve8319,LZer67008,LMul89192],["Loc67392","Bat89486","Res21214","Zer34157","Con3462","Sub7190","LST3389","Res37983","Res31657","Zer47925","Con10570","Sub37811","Ave8319","Zer67008","Mul89192"],Mul89192,"Mul89192")

Actual (Unparsed): [[[[0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000], [-0.0000000, 0.0514132], [0.0000000, -0.0912451]], [[0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.4800280], [0.0000000, 0.0786853]], [[0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0034878, 0.1662552], [0.1385910, 0.0204170]]]]

Expected (Unparsed): [[[[0,0.0],[0,0.0],[0,0.0],[0,0.0],[-0.0,0.051413160000000006],[0.0,-0.09124508999999997]],[[0,0.0],[0,0.0],[0,0.0],[0,0.0],[0.0,0.48002799],[0.0,0.07868532]],[[0,0.0],[0,0.0],[0.0,0.0],[0.0,0.0],[0.0034878052928614574,0.16625516999999998],[0.13859097345363072,0.020417045000000023]]]]

Actual:   [[[[0, 0], [0, 0], [0, 0], [0, 0], [-0, 0.0515], [0, -0.0912]], [[0, 0], [0, 0], [0, 0], [0, 0], [0, 0.4801], [0, 0.0787]], [[0, 0], [0, 0], [0, 0], [0, 0], [0.0035, 0.1663], [0.1386, 0.0205]]]]

Expected: [[[[0, 0], [0, 0], [0, 0], [0, 0], [-0, 0.0515], [0, -0.0912]], [[0, 0], [0, 0], [0, 0], [0, 0], [0, 0.4801], [0, 0.0787]], [[0, 0], [0, 0], [0, 0], [0, 0], [0.0035, 0.1663], [0.1386, 0.0205]]]]