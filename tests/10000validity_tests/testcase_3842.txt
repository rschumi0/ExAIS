import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Max95793 = tf.keras.layers.Input(shape=([2, 2, 2]))
in1Max95793 = tf.keras.layers.Input(shape=([2, 2, 2]))
in0Ave73561 = tf.keras.layers.Input(shape=([2, 2, 1]))
in1Ave73561 = tf.keras.layers.Input(shape=([2, 2, 1]))
in0Con48335 = tf.keras.layers.Input(shape=([2, 2, 1]))

Max95793 = keras.layers.Maximum(name = 'Max95793', )([in0Max95793,in1Max95793])
Ave73561 = keras.layers.Average(name = 'Ave73561', )([in0Ave73561,in1Ave73561])
Con48335 = keras.layers.Concatenate(axis=3, name = 'Con48335', )([Ave73561,in0Con48335])
Mul50988 = keras.layers.Multiply(name = 'Mul50988', )([Max95793,Con48335])
Res16050 = keras.layers.Reshape((2, 4), name = 'Res16050', )(Mul50988)
Sep84352 = keras.layers.SeparableConv1D(2, (2),strides=(1), padding='valid', name = 'Sep84352', )(Res16050)
LST50973 = keras.layers.LSTM(3,recurrent_activation='sigmoid', name = 'LST50973', )(Sep84352)
model = tf.keras.models.Model(inputs=[in0Max95793,in1Max95793,in0Ave73561,in1Ave73561,in0Con48335], outputs=LST50973)
w = model.get_layer('Sep84352').get_weights() 
w[0] = np.array([[[0.738], [0.3467], [0.7941], [0.8544]], [[0.526], [0.4981], [0.4636], [0.9088]]])
w[1] = np.array([[[0.2615, 0.1655], [0.0182, 0.7831], [0.174, 0.8328], [0.3392, 0.2796]]])
w[2] = np.array([0, 0])
model.get_layer('Sep84352').set_weights(w) 
w = model.get_layer('LST50973').get_weights() 
w[0] = np.array([[4, 3, 6, 6, 6, 2, 10, 8, 6, 9, 7, 2], [2, 10, 7, 9, 7, 3, 8, 4, 3, 3, 5, 10]])
w[1] = np.array([[2, 1, 1, 2, 8, 7, 8, 9, 9, 6, 8, 7], [9, 8, 8, 2, 4, 2, 8, 10, 9, 8, 4, 8], [2, 8, 5, 3, 1, 1, 4, 6, 9, 7, 2, 9]])
w[2] = np.array([10, 1, 5, 8, 8, 3, 3, 2, 2, 4, 8, 6])
model.get_layer('LST50973').set_weights(w) 
in0Max95793 = tf.constant([[[[0.5741, 0.671], [0.8716, 0.9739]], [[0.1139, 0.7842], [0.4481, 0.5378]]]])
in1Max95793 = tf.constant([[[[0.8052, 0.0353], [0.0838, 0.0036]], [[0.7366, 0.5698], [0.8687, 0.3465]]]])
in0Ave73561 = tf.constant([[[[0.7383], [0.7478]], [[0.2908], [0.6951]]]])
in1Ave73561 = tf.constant([[[[0.6772], [0.8163]], [[0.934], [0.265]]]])
in0Con48335 = tf.constant([[[[0.4279], [0.1516]], [[0.0131], [0.0657]]]])
print (np.array2string(model.predict([in0Max95793,in1Max95793,in0Ave73561,in1Ave73561,in0Con48335],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='LST50973.png')

LMax95793 = maximum_layer([[[[[0.5741, 0.671], [0.8716, 0.9739]], [[0.1139, 0.7842], [0.4481, 0.5378]]]], [[[[0.8052, 0.0353], [0.0838, 0.0036]], [[0.7366, 0.5698], [0.8687, 0.3465]]]]], Max95793), 
LAve73561 = average_layer([[[[[0.7383], [0.7478]], [[0.2908], [0.6951]]]], [[[[0.6772], [0.8163]], [[0.934], [0.265]]]]], Ave73561), 
LCon48335 = concatenate_layer([Ave73561,[[[[0.4279], [0.1516]], [[0.0131], [0.0657]]]]], 3, Con48335), 
LMul50988 = multiply_layer([Max95793,Con48335], Mul50988), 
LRes16050 = reshape_layer(Mul50988, [2, 4], Res16050), 
LSep84352 = separable_conv1D_layer(Res16050, 2,[[[[0.738], [0.3467], [0.7941], [0.8544]], [[0.526], [0.4981], [0.4636], [0.9088]]],[[[0.2615, 0.1655], [0.0182, 0.7831], [0.174, 0.8328], [0.3392, 0.2796]]]],[0, 0], 1, false, Sep84352), 
LLST50973 = lstm_layer(Sep84352,[[4, 3, 6, 6, 6, 2, 10, 8, 6, 9, 7, 2], [2, 10, 7, 9, 7, 3, 8, 4, 3, 3, 5, 10]],[[2, 1, 1, 2, 8, 7, 8, 9, 9, 6, 8, 7], [9, 8, 8, 2, 4, 2, 8, 10, 9, 8, 4, 8], [2, 8, 5, 3, 1, 1, 4, 6, 9, 7, 2, 9]],[10, 1, 5, 8, 8, 3, 3, 2, 2, 4, 8, 6], LST50973), 
exec_layers([LMax95793,LAve73561,LCon48335,LMul50988,LRes16050,LSep84352,LLST50973],["Max95793","Ave73561","Con48335","Mul50988","Res16050","Sep84352","LST50973"],LST50973,"LST50973")

Actual (Unparsed): [[0.7615484, 0.7615826, 0.7615917]]

Expected (Unparsed): [[0.7615484491570245,0.7615826223948582,0.761591725286261]]

Actual:   [[0.7616, 0.7616, 0.7616]]

Expected: [[0.7616, 0.7616, 0.7616]]