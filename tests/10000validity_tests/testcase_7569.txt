import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Sub63917 = tf.keras.layers.Input(shape=([3, 3]))
in1Sub63917 = tf.keras.layers.Input(shape=([3, 3]))
in0Per70753 = tf.keras.layers.Input(shape=([1, 3]))
in0Con76869 = tf.keras.layers.Input(shape=([3, 2]))
in0Sub78507 = tf.keras.layers.Input(shape=([3, 3, 2]))
in1Sub78507 = tf.keras.layers.Input(shape=([3, 3, 2]))
in0Con6024 = tf.keras.layers.Input(shape=([3]))

Sub63917 = keras.layers.Subtract(name = 'Sub63917', )([in0Sub63917,in1Sub63917])
Per70753 = keras.layers.Permute((2,1), name = 'Per70753',)(in0Per70753)
Con76869 = keras.layers.Concatenate(axis=2, name = 'Con76869', )([Per70753,in0Con76869])
Max48378 = keras.layers.Maximum(name = 'Max48378', )([Sub63917,Con76869])
Fla75570 = keras.layers.Flatten(name = 'Fla75570', )(Max48378)
Sub78507 = keras.layers.Subtract(name = 'Sub78507', )([in0Sub78507,in1Sub78507])
Res624 = keras.layers.Reshape((3, 6), name = 'Res624', )(Sub78507)
Up_75713 = keras.layers.UpSampling1D(size=(2), name = 'Up_75713', )(Res624)
Glo48345 = keras.layers.GlobalMaxPool1D(name = 'Glo48345', )(Up_75713)
Con6024 = keras.layers.Concatenate(axis=1, name = 'Con6024', )([Glo48345,in0Con6024])
Ave63777 = keras.layers.Average(name = 'Ave63777', )([Fla75570,Con6024])
model = tf.keras.models.Model(inputs=[in0Sub63917,in1Sub63917,in0Per70753,in0Con76869,in0Sub78507,in1Sub78507,in0Con6024], outputs=Ave63777)
in0Sub63917 = tf.constant([[[0.5472, 0.7979, 0.8261], [0.4339, 0.3083, 0.865], [0.2007, 0.7044, 0.5796]]])
in1Sub63917 = tf.constant([[[0.612, 0.9035, 0.752], [0.4851, 0.3745, 0.2598], [0.0111, 0.6864, 0.415]]])
in0Per70753 = tf.constant([[[1.1283, 1.1047, 1.3735]]])
in0Con76869 = tf.constant([[[0.1665, 0.2483], [0.1844, 0.3373], [0.0571, 0.8943]]])
in0Sub78507 = tf.constant([[[[0.6514, 0.2473], [0.1396, 0.3669], [0.2779, 0.7019]], [[0.6811, 0.5821], [0.9095, 0.3878], [0.968, 0.2409]], [[0.4315, 0.3723], [0.9882, 0.3783], [0.5631, 0.6082]]]])
in1Sub78507 = tf.constant([[[[0.884, 0.3911], [0.2554, 0.5446], [0.7781, 0.6017]], [[0.4342, 0.7941], [0.5228, 0.0679], [0.2737, 0.169]], [[0.0592, 0.162], [0.138, 0.076], [0.0459, 0.7616]]]])
in0Con6024 = tf.constant([[0.2152, 0.8485, 0.0556]])
print (np.array2string(model.predict([in0Sub63917,in1Sub63917,in0Per70753,in0Con76869,in0Sub78507,in1Sub78507,in0Con6024],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Ave63777.png')

LSub63917 = subtract_layer([[[0.5472, 0.7979, 0.8261], [0.4339, 0.3083, 0.865], [0.2007, 0.7044, 0.5796]]], [[[0.612, 0.9035, 0.752], [0.4851, 0.3745, 0.2598], [0.0111, 0.6864, 0.415]]], Sub63917), 
LPer70753 = permute_layer([[[1.1283, 1.1047, 1.3735]]], 2,1, Per70753), 
LCon76869 = concatenate_layer([Per70753,[[[0.1665, 0.2483], [0.1844, 0.3373], [0.0571, 0.8943]]]], 2, Con76869), 
LMax48378 = maximum_layer([Sub63917,Con76869], Max48378), 
LFla75570 = flatten_layer(Max48378, Fla75570), 
LSub78507 = subtract_layer([[[[0.6514, 0.2473], [0.1396, 0.3669], [0.2779, 0.7019]], [[0.6811, 0.5821], [0.9095, 0.3878], [0.968, 0.2409]], [[0.4315, 0.3723], [0.9882, 0.3783], [0.5631, 0.6082]]]], [[[[0.884, 0.3911], [0.2554, 0.5446], [0.7781, 0.6017]], [[0.4342, 0.7941], [0.5228, 0.0679], [0.2737, 0.169]], [[0.0592, 0.162], [0.138, 0.076], [0.0459, 0.7616]]]], Sub78507), 
LRes624 = reshape_layer(Sub78507, [3, 6], Res624), 
LUp_75713 = up_sampling1D_layer(Res624, 2, Up_75713), 
LGlo48345 = global_max_pool1D_layer(Up_75713, Glo48345), 
LCon6024 = concatenate_layer([Glo48345,[[0.2152, 0.8485, 0.0556]]], 1, Con6024), 
LAve63777 = average_layer([Fla75570,Con6024], Ave63777), 
exec_layers([LSub63917,LPer70753,LCon76869,LMax48378,LFla75570,LSub78507,LRes624,LUp_75713,LGlo48345,LCon6024,LAve63777],["Sub63917","Per70753","Con76869","Max48378","Fla75570","Sub78507","Res624","Up_75713","Glo48345","Con6024","Ave63777"],Ave63777,"Ave63777")

Actual (Unparsed): [[0.7503000, 0.1884000, 0.5492500, 0.7123000, 0.4393500, 0.3527000, 0.7943500, 0.4528000, 0.4749500]]

Expected (Unparsed): [[0.7503,0.1884,0.54925,0.7122999999999999,0.43934999999999996,0.35269999999999996,0.79435,0.45280000000000004,0.47495]]

Actual:   [[0.7503, 0.1884, 0.5493, 0.7123, 0.4394, 0.3527, 0.7944, 0.4528, 0.475]]

Expected: [[0.7503, 0.1884, 0.5493, 0.7123, 0.4394, 0.3527, 0.7944, 0.4529, 0.475]]