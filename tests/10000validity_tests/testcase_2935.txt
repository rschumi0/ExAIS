import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Glo35617 = tf.keras.layers.Input(shape=([1, 1]))
in0Con17100 = tf.keras.layers.Input(shape=([9, 1, 1]))
in0Fla55528 = tf.keras.layers.Input(shape=([3, 3]))
in0Con30842 = tf.keras.layers.Input(shape=([9, 1, 1]))
in0Lea11556 = tf.keras.layers.Input(shape=([1, 1, 2]))

Glo35617 = keras.layers.GlobalMaxPool1D(name = 'Glo35617', )(in0Glo35617)
Res56306 = keras.layers.Reshape((1, 1), name = 'Res56306', )(Glo35617)
Res15400 = keras.layers.Reshape((1, 1, 1), name = 'Res15400', )(Res56306)
Zer80649 = keras.layers.ZeroPadding2D(padding=((8, 0), (0, 0)), name = 'Zer80649', )(Res15400)
Con17100 = keras.layers.Concatenate(axis=3, name = 'Con17100', )([Zer80649,in0Con17100])
Fla55528 = keras.layers.Flatten(name = 'Fla55528', )(in0Fla55528)
Res63854 = keras.layers.Reshape((9, 1), name = 'Res63854', )(Fla55528)
Res76655 = keras.layers.Reshape((9, 1, 1), name = 'Res76655', )(Res63854)
Con30842 = keras.layers.Concatenate(axis=3, name = 'Con30842', )([Res76655,in0Con30842])
Lea11556 = keras.layers.LeakyReLU(alpha=3.17601488300784, name = 'Lea11556', input_shape=(1, 1, 2))(in0Lea11556)
Zer13422 = keras.layers.ZeroPadding2D(padding=((8, 0), (0, 0)), name = 'Zer13422', )(Lea11556)
Add66274 = keras.layers.Add(name = 'Add66274', )([Con30842,Zer13422])
Min92368 = keras.layers.Minimum(name = 'Min92368', )([Con17100,Add66274])
Res62223 = keras.layers.Reshape((9, 2), name = 'Res62223', )(Min92368)
Res27405 = keras.layers.Reshape((9, 2, 1), name = 'Res27405', )(Res62223)
Con72113 = keras.layers.Conv2DTranspose(2, (9, 2),strides=(3, 1), padding='valid', name = 'Con72113', )(Res27405)
model = tf.keras.models.Model(inputs=[in0Glo35617,in0Con17100,in0Fla55528,in0Con30842,in0Lea11556], outputs=Con72113)
w = model.get_layer('Con72113').get_weights() 
w[0] = np.array([[[[0.8904], [0.64]], [[0.6352], [0.8392]]], [[[0.749], [0.4904]], [[0.0059], [0.3027]]], [[[0.8618], [0.7599]], [[0.0043], [0.085]]], [[[0.6544], [0.2258]], [[0.3028], [0.9975]]], [[[0.1528], [0.5958]], [[0.5792], [0.7924]]], [[[0.1897], [0.7138]], [[0.773], [0.6415]]], [[[0.3523], [0.5009]], [[0.4535], [0.8723]]], [[[0.3949], [0.4815]], [[0.144], [0.239]]], [[[0.9663], [0.2943]], [[0.4725], [0.0703]]]])
w[1] = np.array([0, 0])
model.get_layer('Con72113').set_weights(w) 
in0Glo35617 = tf.constant([[[1.8876]]])
in0Con17100 = tf.constant([[[[0.6371]], [[0.6407]], [[0.1219]], [[0.8982]], [[0.385]], [[0.569]], [[0.0221]], [[0.7009]], [[0.7103]]]])
in0Fla55528 = tf.constant([[[1.7223, 1.4857, 1.7711], [1.0451, 1.3192, 1.6718], [1.5178, 1.2709, 1.3008]]])
in0Con30842 = tf.constant([[[[0.6246]], [[0.8126]], [[0.4405]], [[0.4285]], [[0.224]], [[0.8491]], [[0.131]], [[0.158]], [[0.8791]]]])
in0Lea11556 = tf.constant([[[[0.665, 0.5638]]]])
print (np.array2string(model.predict([in0Glo35617,in0Con17100,in0Fla55528,in0Con30842,in0Lea11556],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Con72113.png')

LGlo35617 = global_max_pool1D_layer([[[1.8876]]], Glo35617), 
LRes56306 = reshape_layer(Glo35617, [1, 1], Res56306), 
LRes15400 = reshape_layer(Res56306, [1, 1, 1], Res15400), 
LZer80649 = zero_padding2D_layer(Res15400, 8, 0, 0, 0, Zer80649), 
LCon17100 = concatenate_layer([Zer80649,[[[[0.6371]], [[0.6407]], [[0.1219]], [[0.8982]], [[0.385]], [[0.569]], [[0.0221]], [[0.7009]], [[0.7103]]]]], 3, Con17100), 
LFla55528 = flatten_layer([[[1.7223, 1.4857, 1.7711], [1.0451, 1.3192, 1.6718], [1.5178, 1.2709, 1.3008]]], Fla55528), 
LRes63854 = reshape_layer(Fla55528, [9, 1], Res63854), 
LRes76655 = reshape_layer(Res63854, [9, 1, 1], Res76655), 
LCon30842 = concatenate_layer([Res76655,[[[[0.6246]], [[0.8126]], [[0.4405]], [[0.4285]], [[0.224]], [[0.8491]], [[0.131]], [[0.158]], [[0.8791]]]]], 3, Con30842), 
LLea11556 = leaky_relu_layer([[[[0.665, 0.5638]]]], 3.17601488300784, Lea11556), 
LZer13422 = zero_padding2D_layer(Lea11556, 8, 0, 0, 0, Zer13422), 
LAdd66274 = add_layer([Con30842,Zer13422], Add66274), 
LMin92368 = minimum_layer([Con17100,Add66274], Min92368), 
LRes62223 = reshape_layer(Min92368, [9, 2], Res62223), 
LRes27405 = reshape_layer(Res62223, [9, 2, 1], Res27405), 
LCon72113 = conv2D_transpose_layer(Res27405, 9, 2,[[[[0.8904], [0.64]], [[0.6352], [0.8392]]], [[[0.749], [0.4904]], [[0.0059], [0.3027]]], [[[0.8618], [0.7599]], [[0.0043], [0.085]]], [[[0.6544], [0.2258]], [[0.3028], [0.9975]]], [[[0.1528], [0.5958]], [[0.5792], [0.7924]]], [[[0.1897], [0.7138]], [[0.773], [0.6415]]], [[[0.3523], [0.5009]], [[0.4535], [0.8723]]], [[[0.3949], [0.4815]], [[0.144], [0.239]]], [[[0.9663], [0.2943]], [[0.4725], [0.0703]]]],[0, 0], 3, 1, false, Con72113), 
exec_layers([LGlo35617,LRes56306,LRes15400,LZer80649,LCon17100,LFla55528,LRes63854,LRes76655,LCon30842,LLea11556,LZer13422,LAdd66274,LMin92368,LRes62223,LRes27405,LCon72113],["Glo35617","Res56306","Res15400","Zer80649","Con17100","Fla55528","Res63854","Res76655","Con30842","Lea11556","Zer13422","Add66274","Min92368","Res62223","Res27405","Con72113"],Con72113,"Con72113")

Actual (Unparsed): [[[[0.0000000, 0.0000000], [0.5561438, 0.3997440], [0.3967459, 0.5241643]], [[0.0000000, 0.0000000], [0.4678254, 0.3063038], [0.0036851, 0.1890664]], [[0.0000000, 0.0000000], [0.5382803, 0.4746335], [0.0026858, 0.0530910]], [[0.0000000, 0.0000000], [0.9792175, 0.5510827], [0.5961015, 1.1607139]], [[0.0000000, 0.0000000], [0.5753232, 0.6863359], [0.3655484, 0.6888729]], [[0.0000000, 0.0000000], [0.6706419, 0.9327074], [0.4855708, 0.4551404]], [[0.0000000, 0.0000000], [0.7478604, 0.5355482], [0.5546909, 1.2862353]], [[0.0000000, 0.0000000], [0.4358566, 0.7422537], [0.4617550, 0.6938692]], [[0.0000000, 0.0000000], [0.8301452, 0.7337832], [0.7909088, 0.4652799]], [[0.0000000, 0.0000000], [0.6870264, 0.6226916], [0.5996520, 1.0400750]], [[0.0000000, 0.0000000], [0.5925852, 0.5912615], [0.1653934, 0.3794278]], [[0.0000000, 0.0000000], [1.0115141, 0.6011874], [0.3988020, 0.1596626]], [[0.0000000, 0.0000000], [0.5228054, 0.3011750], [0.3273163, 0.7217429]], [[0.0000000, 0.0000000], [0.2813891, 0.4238448], [0.2670624, 0.4364823]], [[0.0000000, 0.0000000], [0.3921216, 0.5119561], [0.3897914, 0.3024923]], [[0.0000000, 0.0000000], [0.8041838, 0.6293749], [0.6235808, 1.0747254]], [[0.0000000, 0.0000000], [0.6296229, 0.6188196], [0.1948019, 0.4521454]], [[0.0000000, 0.0000000], [0.9469166, 0.7183819], [0.3780650, 0.2221846]], [[0.0000000, 0.0000000], [0.4709466, 0.2548258], [0.2879151, 0.7815190]], [[0.0000000, 0.0000000], [0.1919537, 0.4577040], [0.3619512, 0.5111013]], [[0.0000000, 0.0000000], [0.3434363, 0.4888692], [0.5457720, 0.3826392]], [[0.0000000, 0.0000000], [0.3556041, 0.3911223], [0.3650950, 0.6509771]], [[0.0000000, 0.0000000], [0.3464170, 0.3646239], [0.0956685, 0.2013296]], [[0.0000000, 0.0000000], [0.6901815, 0.3032959], [0.2866152, 0.0676079]], [[1.6807190, 1.2080640], [1.9426357, 2.0854122], [0.5090473, 0.7729666]], [[1.4138124, 0.9256790], [0.5760213, 1.0244852], [0.0988868, 0.3454889]], [[1.6267336, 1.4343872], [0.6715811, 0.8194874], [0.1356305, 0.1632861]], [[1.2352454, 0.4262201], [1.0920490, 2.1224089], [0.2867319, 0.8463477]], [[0.2884253, 1.1246320], [1.2642259, 1.9950080], [0.4341578, 0.6006037]], [[0.3580777, 1.3473688], [1.7465341, 1.7644069], [0.6237169, 0.4667649]], [[0.6650015, 0.9454988], [1.1062653, 2.0023427], [0.3221211, 0.6195947]], [[0.7454132, 0.9088794], [0.5523119, 0.7931459], [0.1022832, 0.1697617]], [[1.8239878, 0.5555207], [1.5782539, 0.3417396], [0.3356168, 0.0499341]]]]

Expected (Unparsed): [[[[0.0,0.0],[0.5561438400000001,0.39974400000000004],[0.39674592000000003,0.52416432]],[[0.0,0.0],[0.46782540000000006,0.30630384000000005],[0.0036851400000000004,0.18906642000000004]],[[0.0,0.0],[0.53828028,0.47463354],[0.00268578,0.053091000000000006]],[[0.0,0.0],[0.9792175200000001,0.55108268],[0.59610152,1.16071394]],[[0.0,0.0],[0.57532318,0.6863359600000001],[0.36554845,0.68887293]],[[0.0,0.0],[0.67064188,0.9327074100000001],[0.4855708100000001,0.4551404]],[[0.0,0.0],[0.74786042,0.5355482],[0.5546909400000001,1.28623531]],[[0.0,0.0],[0.43585660000000004,0.74225372],[0.4617550500000001,0.69386921]],[[0.0,0.0],[0.8301451900000001,0.73378325],[0.7909087700000001,0.46527993]],[[0.0,0.0],[0.68702637,0.62269165],[0.59965197,1.04007506]],[[0.0,0.0],[0.59258525,0.5912614700000001],[0.16539343,0.37942781000000003]],[[0.0,0.0],[1.01151414,0.60118738],[0.398802,0.15966255999999998]],[[0.0,0.0],[0.5228053699999999,0.30117501],[0.32731625,0.7217429200000001]],[[0.0,0.0],[0.28138911,0.42384475],[0.2670624,0.4364823]],[[0.0,0.0],[0.39212161999999995,0.51195607],[0.38979145,0.30249232]],[[0.0,0.0],[0.80418375,0.62937485],[0.6235807499999999,1.07472535]],[[0.0,0.0],[0.62962285,0.61881955],[0.19480190000000003,0.45214540000000003]],[[0.0,0.0],[0.94691655,0.71838185],[0.37806495,0.22218454999999998]],[[0.0,0.0],[0.47094663999999997,0.2548258],[0.28791511999999997,0.78151902]],[[0.0,0.0],[0.19195369999999998,0.45770404],[0.36195119,0.5111012699999999]],[[0.0,0.0],[0.34343628000000004,0.48886918999999995],[0.54577203,0.38263919999999996]],[[0.0,0.0],[0.35560414,0.39112228],[0.36509497999999996,0.65097705]],[[0.0,0.0],[0.34641698,0.36462388],[0.09566851999999998,0.20132963999999998]],[[0.0,0.0],[0.69018147,0.30329587999999996],[0.28661519999999996,0.06760785]],[[1.6807190399999998,1.208064],[1.94263567,2.08541221],[0.50904731,0.77296659]],[[1.4138123999999999,0.92567904],[0.57602123,1.02448519],[0.09888677000000001,0.34548891000000004]],[[1.62673368,1.43438724],[0.6715810500000001,0.8194874],[0.13563054,0.16328613]],[[1.23524544,0.42622008],[1.092049,2.12240894],[0.28673184,0.84634765]],[[0.28842527999999995,1.12463208],[1.26422596,1.99500798],[0.43415776000000006,0.60060372]],[[0.35807772,1.3473688799999999],[1.7465341100000003,1.76440694],[0.6237169000000001,0.46676485]],[[0.66500148,0.94549884],[1.10626529,2.00234275],[0.32212105,0.61959469]],[[0.74541324,0.9088793999999999],[0.5523118699999999,0.7931458499999999],[0.1022832,0.16976170000000002]],[[1.82398788,0.55552068],[1.57825389,0.34173957],[0.33561675,0.04993409000000001]]]]

Actual:   [[[[0, 0], [0.5562, 0.3998], [0.3968, 0.5242]], [[0, 0], [0.4679, 0.3064], [0.0037, 0.1891]], [[0, 0], [0.5383, 0.4747], [0.0027, 0.0531]], [[0, 0], [0.9793, 0.5511], [0.5962, 1.1608]], [[0, 0], [0.5754, 0.6864], [0.3656, 0.6889]], [[0, 0], [0.6707, 0.9328], [0.4856, 0.4552]], [[0, 0], [0.7479, 0.5356], [0.5547, 1.2863]], [[0, 0], [0.4359, 0.7423], [0.4618, 0.6939]], [[0, 0], [0.8302, 0.7338], [0.791, 0.4653]], [[0, 0], [0.6871, 0.6227], [0.5997, 1.0401]], [[0, 0], [0.5926, 0.5913], [0.1654, 0.3795]], [[0, 0], [1.0116, 0.6012], [0.3989, 0.1597]], [[0, 0], [0.5229, 0.3012], [0.3274, 0.7218]], [[0, 0], [0.2814, 0.4239], [0.2671, 0.4365]], [[0, 0], [0.3922, 0.512], [0.3898, 0.3025]], [[0, 0], [0.8042, 0.6294], [0.6236, 1.0748]], [[0, 0], [0.6297, 0.6189], [0.1949, 0.4522]], [[0, 0], [0.947, 0.7184], [0.3781, 0.2222]], [[0, 0], [0.471, 0.2549], [0.288, 0.7816]], [[0, 0], [0.192, 0.4578], [0.362, 0.5112]], [[0, 0], [0.3435, 0.4889], [0.5458, 0.3827]], [[0, 0], [0.3557, 0.3912], [0.3651, 0.651]], [[0, 0], [0.3465, 0.3647], [0.0957, 0.2014]], [[0, 0], [0.6902, 0.3033], [0.2867, 0.0677]], [[1.6808, 1.2081], [1.9427, 2.0855], [0.5091, 0.773]], [[1.4139, 0.9257], [0.5761, 1.0245], [0.0989, 0.3455]], [[1.6268, 1.4344], [0.6716, 0.8195], [0.1357, 0.1633]], [[1.2353, 0.4263], [1.0921, 2.1225], [0.2868, 0.8464]], [[0.2885, 1.1247], [1.2643, 1.9951], [0.4342, 0.6007]], [[0.3581, 1.3474], [1.7466, 1.7645], [0.6238, 0.4668]], [[0.6651, 0.9455], [1.1063, 2.0024], [0.3222, 0.6196]], [[0.7455, 0.9089], [0.5524, 0.7932], [0.1023, 0.1698]], [[1.824, 0.5556], [1.5783, 0.3418], [0.3357, 0.05]]]]

Expected: [[[[0, 0], [0.5562, 0.3998], [0.3968, 0.5242]], [[0, 0], [0.4679, 0.3064], [0.0037, 0.1891]], [[0, 0], [0.5383, 0.4747], [0.0027, 0.0531]], [[0, 0], [0.9793, 0.5511], [0.5962, 1.1608]], [[0, 0], [0.5754, 0.6864], [0.3656, 0.6889]], [[0, 0], [0.6707, 0.9328], [0.4856, 0.4552]], [[0, 0], [0.7479, 0.5356], [0.5547, 1.2863]], [[0, 0], [0.4359, 0.7423], [0.4618, 0.6939]], [[0, 0], [0.8302, 0.7338], [0.791, 0.4653]], [[0, 0], [0.6871, 0.6227], [0.5997, 1.0401]], [[0, 0], [0.5926, 0.5913], [0.1654, 0.3795]], [[0, 0], [1.0116, 0.6012], [0.3989, 0.1597]], [[0, 0], [0.5229, 0.3012], [0.3274, 0.7218]], [[0, 0], [0.2814, 0.4239], [0.2671, 0.4365]], [[0, 0], [0.3922, 0.512], [0.3898, 0.3025]], [[0, 0], [0.8042, 0.6294], [0.6236, 1.0748]], [[0, 0], [0.6297, 0.6189], [0.1949, 0.4522]], [[0, 0], [0.947, 0.7184], [0.3781, 0.2222]], [[0, 0], [0.471, 0.2549], [0.288, 0.7816]], [[0, 0], [0.192, 0.4578], [0.362, 0.5112]], [[0, 0], [0.3435, 0.4889], [0.5458, 0.3827]], [[0, 0], [0.3557, 0.3912], [0.3651, 0.651]], [[0, 0], [0.3465, 0.3647], [0.0957, 0.2014]], [[0, 0], [0.6902, 0.3033], [0.2867, 0.0677]], [[1.6808, 1.2081], [1.9427, 2.0855], [0.5091, 0.773]], [[1.4139, 0.9257], [0.5761, 1.0245], [0.0989, 0.3455]], [[1.6268, 1.4344], [0.6716, 0.8195], [0.1357, 0.1633]], [[1.2353, 0.4263], [1.0921, 2.1225], [0.2868, 0.8464]], [[0.2885, 1.1247], [1.2643, 1.9951], [0.4342, 0.6007]], [[0.3581, 1.3474], [1.7466, 1.7645], [0.6238, 0.4668]], [[0.6651, 0.9455], [1.1063, 2.0024], [0.3222, 0.6196]], [[0.7455, 0.9089], [0.5524, 0.7932], [0.1023, 0.1698]], [[1.824, 0.5556], [1.5783, 0.3418], [0.3357, 0.05]]]]