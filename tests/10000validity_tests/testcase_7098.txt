import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Mul68468 = tf.keras.layers.Input(shape=([2, 1, 2, 2]))
in1Mul68468 = tf.keras.layers.Input(shape=([2, 1, 2, 2]))
in0Min41695 = tf.keras.layers.Input(shape=([2, 1]))
in1Min41695 = tf.keras.layers.Input(shape=([2, 1]))
in0Con63487 = tf.keras.layers.Input(shape=([2, 3]))
in0Con50309 = tf.keras.layers.Input(shape=([2, 4, 3, 1]))
in0Min95416 = tf.keras.layers.Input(shape=([2, 1, 2, 2]))
in1Min95416 = tf.keras.layers.Input(shape=([2, 1, 2, 2]))

Mul68468 = keras.layers.Multiply(name = 'Mul68468', )([in0Mul68468,in1Mul68468])
Res9278 = keras.layers.Reshape((2, 1, 4), name = 'Res9278', )(Mul68468)
Res11646 = keras.layers.Reshape((2, 4), name = 'Res11646', )(Res9278)
Min41695 = keras.layers.Minimum(name = 'Min41695', )([in0Min41695,in1Min41695])
Con63487 = keras.layers.Concatenate(axis=2, name = 'Con63487', )([Min41695,in0Con63487])
Min61968 = keras.layers.Minimum(name = 'Min61968', )([Res11646,Con63487])
Res76777 = keras.layers.Reshape((2, 4, 1), name = 'Res76777', )(Min61968)
Res46368 = keras.layers.Reshape((2, 4, 1, 1), name = 'Res46368', )(Res76777)
Zer33163 = keras.layers.ZeroPadding3D(padding=((0, 0), (0, 0), (2, 0)), name = 'Zer33163', )(Res46368)
Con50309 = keras.layers.Concatenate(axis=4, name = 'Con50309', )([Zer33163,in0Con50309])
Min95416 = keras.layers.Minimum(name = 'Min95416', )([in0Min95416,in1Min95416])
Zer70861 = keras.layers.ZeroPadding3D(padding=((0, 0), (3, 0), (1, 0)), name = 'Zer70861', )(Min95416)
Mul75225 = keras.layers.Multiply(name = 'Mul75225', )([Con50309,Zer70861])
model = tf.keras.models.Model(inputs=[in0Mul68468,in1Mul68468,in0Min41695,in1Min41695,in0Con63487,in0Con50309,in0Min95416,in1Min95416], outputs=Mul75225)
in0Mul68468 = tf.constant([[[[[0.3911, 0.1077], [0.9604, 0.2417]]], [[[0.8989, 0.6074], [0.7275, 0.0494]]]]])
in1Mul68468 = tf.constant([[[[[0.6239, 0.9976], [0.2396, 0.0872]]], [[[0.6104, 0.8917], [0.0191, 0.5288]]]]])
in0Min41695 = tf.constant([[[0.0061], [0.056]]])
in1Min41695 = tf.constant([[[0.9331], [0.1079]]])
in0Con63487 = tf.constant([[[0.401, 0.4697, 0.7342], [0.1883, 0.3094, 0.1211]]])
in0Con50309 = tf.constant([[[[[0.1474], [0.3168], [0.2688]], [[0.5288], [0.7037], [0.7503]], [[0.3763], [0.074], [0.2258]], [[0.4146], [0.4655], [0.0926]]], [[[0.8179], [0.1907], [0.9144]], [[0.5268], [0.4843], [0.4311]], [[0.5965], [0.7263], [0.1924]], [[0.7722], [0.6182], [0.1427]]]]])
in0Min95416 = tf.constant([[[[[0.1332, 0.7712], [0.7244, 0.4248]]], [[[0.3233, 0.2244], [0.8288, 0.1692]]]]])
in1Min95416 = tf.constant([[[[[0.9947, 0.6909], [0.0076, 0.4498]]], [[[0.7199, 0.3481], [0.5438, 0.576]]]]])
print (np.array2string(model.predict([in0Mul68468,in1Mul68468,in0Min41695,in1Min41695,in0Con63487,in0Con50309,in0Min95416,in1Min95416],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Mul75225.png')

LMul68468 = multiply_layer([[[[[[0.3911, 0.1077], [0.9604, 0.2417]]], [[[0.8989, 0.6074], [0.7275, 0.0494]]]]], [[[[[0.6239, 0.9976], [0.2396, 0.0872]]], [[[0.6104, 0.8917], [0.0191, 0.5288]]]]]], Mul68468), 
LRes9278 = reshape_layer(Mul68468, [2, 1, 4], Res9278), 
LRes11646 = reshape_layer(Res9278, [2, 4], Res11646), 
LMin41695 = minimum_layer([[[[0.0061], [0.056]]], [[[0.9331], [0.1079]]]], Min41695), 
LCon63487 = concatenate_layer([Min41695,[[[0.401, 0.4697, 0.7342], [0.1883, 0.3094, 0.1211]]]], 2, Con63487), 
LMin61968 = minimum_layer([Res11646,Con63487], Min61968), 
LRes76777 = reshape_layer(Min61968, [2, 4, 1], Res76777), 
LRes46368 = reshape_layer(Res76777, [2, 4, 1, 1], Res46368), 
LZer33163 = zero_padding3D_layer(Res46368, 0, 0, 0, 0, 2, 0, Zer33163), 
LCon50309 = concatenate_layer([Zer33163,[[[[[0.1474], [0.3168], [0.2688]], [[0.5288], [0.7037], [0.7503]], [[0.3763], [0.074], [0.2258]], [[0.4146], [0.4655], [0.0926]]], [[[0.8179], [0.1907], [0.9144]], [[0.5268], [0.4843], [0.4311]], [[0.5965], [0.7263], [0.1924]], [[0.7722], [0.6182], [0.1427]]]]]], 4, Con50309), 
LMin95416 = minimum_layer([[[[[[0.1332, 0.7712], [0.7244, 0.4248]]], [[[0.3233, 0.2244], [0.8288, 0.1692]]]]], [[[[[0.9947, 0.6909], [0.0076, 0.4498]]], [[[0.7199, 0.3481], [0.5438, 0.576]]]]]], Min95416), 
LZer70861 = zero_padding3D_layer(Min95416, 0, 0, 3, 0, 1, 0, Zer70861), 
LMul75225 = multiply_layer([Con50309,Zer70861], Mul75225), 
exec_layers([LMul68468,LRes9278,LRes11646,LMin41695,LCon63487,LMin61968,LRes76777,LRes46368,LZer33163,LCon50309,LMin95416,LZer70861,LMul75225],["Mul68468","Res9278","Res11646","Min41695","Con63487","Min61968","Res76777","Res46368","Zer33163","Con50309","Min95416","Zer70861","Mul75225"],Mul75225,"Mul75225")

Actual (Unparsed): [[[[[0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000]], [[0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000]], [[0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000]], [[0.0000000, 0.0000000], [0.0000000, 0.3216140], [0.0001602, 0.0393365]]], [[[0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000]], [[0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000]], [[0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000]], [[0.0000000, 0.0000000], [0.0000000, 0.1387241], [0.0142055, 0.0241448]]]]]

Expected (Unparsed): [[[[[0,0.0],[0,0.0],[0.0,0.0]],[[0,0.0],[0,0.0],[0.0,0.0]],[[0,0.0],[0,0.0],[0.0,0.0]],[[0,0.0],[0.0,0.32161395],[0.000160179424,0.03933648]]],[[[0,0.0],[0,0.0],[0.0,0.0]],[[0,0.0],[0,0.0],[0.0,0.0]],[[0,0.0],[0,0.0],[0.0,0.0]],[[0,0.0],[0.0,0.13872408],[0.014205535136,0.024144839999999997]]]]]

Actual:   [[[[[0, 0], [0, 0], [0, 0]], [[0, 0], [0, 0], [0, 0]], [[0, 0], [0, 0], [0, 0]], [[0, 0], [0, 0.3217], [0.0002, 0.0394]]], [[[0, 0], [0, 0], [0, 0]], [[0, 0], [0, 0], [0, 0]], [[0, 0], [0, 0], [0, 0]], [[0, 0], [0, 0.1388], [0.0143, 0.0242]]]]]

Expected: [[[[[0, 0], [0, 0], [0, 0]], [[0, 0], [0, 0], [0, 0]], [[0, 0], [0, 0], [0, 0]], [[0, 0], [0, 0.3217], [0.0002, 0.0394]]], [[[0, 0], [0, 0], [0, 0]], [[0, 0], [0, 0], [0, 0]], [[0, 0], [0, 0], [0, 0]], [[0, 0], [0, 0.1388], [0.0143, 0.0242]]]]]