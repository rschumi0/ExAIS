import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Mul84880 = tf.keras.layers.Input(shape=([1, 2]))
in1Mul84880 = tf.keras.layers.Input(shape=([1, 2]))
in0Con36485 = tf.keras.layers.Input(shape=([2, 2, 1]))
in0Max7459 = tf.keras.layers.Input(shape=([2, 2, 2]))
in1Max7459 = tf.keras.layers.Input(shape=([2, 2, 2]))
in0Add64654 = tf.keras.layers.Input(shape=([2, 2]))
in1Add64654 = tf.keras.layers.Input(shape=([2, 2]))
in0Con87525 = tf.keras.layers.Input(shape=([29]))

Mul84880 = keras.layers.Multiply(name = 'Mul84880', )([in0Mul84880,in1Mul84880])
Res9523 = keras.layers.Reshape((1, 2, 1), name = 'Res9523', )(Mul84880)
Zer56324 = keras.layers.ZeroPadding2D(padding=((1, 0), (0, 0)), name = 'Zer56324', )(Res9523)
Con36485 = keras.layers.Concatenate(axis=3, name = 'Con36485', )([Zer56324,in0Con36485])
Max7459 = keras.layers.Maximum(name = 'Max7459', )([in0Max7459,in1Max7459])
Add81152 = keras.layers.Add(name = 'Add81152', )([Con36485,Max7459])
Zer34007 = keras.layers.ZeroPadding2D(padding=((1, 1), (1, 1)), name = 'Zer34007', )(Add81152)
Res94075 = keras.layers.Reshape((4, 8), name = 'Res94075', )(Zer34007)
Fla68899 = keras.layers.Flatten(name = 'Fla68899', )(Res94075)
Add64654 = keras.layers.Add(name = 'Add64654', )([in0Add64654,in1Add64654])
Sim26459 = keras.layers.SimpleRNN(3,name = 'Sim26459', )(Add64654)
Con87525 = keras.layers.Concatenate(axis=1, name = 'Con87525', )([Sim26459,in0Con87525])
Mul11714 = keras.layers.Multiply(name = 'Mul11714', )([Fla68899,Con87525])
model = tf.keras.models.Model(inputs=[in0Mul84880,in1Mul84880,in0Con36485,in0Max7459,in1Max7459,in0Add64654,in1Add64654,in0Con87525], outputs=Mul11714)
w = model.get_layer('Sim26459').get_weights() 
w[0] = np.array([[1, 3, 9], [6, 7, 8]])
w[1] = np.array([[10, 2, 4], [8, 1, 9], [4, 3, 6]])
w[2] = np.array([8, 9, 3])
model.get_layer('Sim26459').set_weights(w) 
in0Mul84880 = tf.constant([[[0.2996, 0.1213]]])
in1Mul84880 = tf.constant([[[0.8518, 0.6927]]])
in0Con36485 = tf.constant([[[[0.2815], [0.7611]], [[0.534], [0.1968]]]])
in0Max7459 = tf.constant([[[[0.8963, 0.8458], [0.1258, 0.7341]], [[0.4936, 0.8675], [0.7782, 0.5501]]]])
in1Max7459 = tf.constant([[[[0.3191, 0.3406], [0.385, 0.41]], [[0.3248, 0.9003], [0.3577, 0.2135]]]])
in0Add64654 = tf.constant([[[0.9391, 0.5387], [0.2552, 0.2424]]])
in1Add64654 = tf.constant([[[0.6917, 0.9981], [0.5286, 0.6296]]])
in0Con87525 = tf.constant([[0.7514, 0.1946, 0.355, 0.4637, 0.1407, 0.1768, 0.0769, 0.7829, 0.7554, 0.4204, 0.4504, 0.3869, 0.8794, 0.7173, 0.8777, 0.8051, 0.6366, 0.9386, 0.7584, 0.9806, 0.5937, 0.7988, 0.6991, 0.2324, 0.6334, 0.6265, 0.1612, 0.2095, 0.5028]])
print (np.array2string(model.predict([in0Mul84880,in1Mul84880,in0Con36485,in0Max7459,in1Max7459,in0Add64654,in1Add64654,in0Con87525],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Mul11714.png')

LMul84880 = multiply_layer([[[[0.2996, 0.1213]]], [[[0.8518, 0.6927]]]], Mul84880), 
LRes9523 = reshape_layer(Mul84880, [1, 2, 1], Res9523), 
LZer56324 = zero_padding2D_layer(Res9523, 1, 0, 0, 0, Zer56324), 
LCon36485 = concatenate_layer([Zer56324,[[[[0.2815], [0.7611]], [[0.534], [0.1968]]]]], 3, Con36485), 
LMax7459 = maximum_layer([[[[[0.8963, 0.8458], [0.1258, 0.7341]], [[0.4936, 0.8675], [0.7782, 0.5501]]]], [[[[0.3191, 0.3406], [0.385, 0.41]], [[0.3248, 0.9003], [0.3577, 0.2135]]]]], Max7459), 
LAdd81152 = add_layer([Con36485,Max7459], Add81152), 
LZer34007 = zero_padding2D_layer(Add81152, 1, 1, 1, 1, Zer34007), 
LRes94075 = reshape_layer(Zer34007, [4, 8], Res94075), 
LFla68899 = flatten_layer(Res94075, Fla68899), 
LAdd64654 = add_layer([[[[0.9391, 0.5387], [0.2552, 0.2424]]], [[[0.6917, 0.9981], [0.5286, 0.6296]]]], Add64654), 
LSim26459 = simple_rnn_layer(Add64654,[[1, 3, 9], [6, 7, 8]],[[10, 2, 4], [8, 1, 9], [4, 3, 6]],[8, 9, 3], Sim26459), 
LCon87525 = concatenate_layer([Sim26459,[[0.7514, 0.1946, 0.355, 0.4637, 0.1407, 0.1768, 0.0769, 0.7829, 0.7554, 0.4204, 0.4504, 0.3869, 0.8794, 0.7173, 0.8777, 0.8051, 0.6366, 0.9386, 0.7584, 0.9806, 0.5937, 0.7988, 0.6991, 0.2324, 0.6334, 0.6265, 0.1612, 0.2095, 0.5028]]], 1, Con87525), 
LMul11714 = multiply_layer([Fla68899,Con87525], Mul11714), 
exec_layers([LMul84880,LRes9523,LZer56324,LCon36485,LMax7459,LAdd81152,LZer34007,LRes94075,LFla68899,LAdd64654,LSim26459,LCon87525,LMul11714],["Mul84880","Res9523","Zer56324","Con36485","Max7459","Add81152","Zer34007","Res94075","Fla68899","Add64654","Sim26459","Con87525","Mul11714"],Mul11714,"Mul11714")

Actual (Unparsed): [[0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.7017133, 0.8515624, 0.1618540, 0.6734381, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.6028583, 0.9130754, 0.8092839, 0.5664490, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000]]

Expected (Unparsed): [[0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.7017132700000001,0.8515624199999999,0.161854,0.67343808,0.0,0.0,0.0,0.0,0.602858300328,0.91307538,0.809283925086,0.56644896,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0]]

Actual:   [[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.7018, 0.8516, 0.1619, 0.6735, 0, 0, 0, 0, 0.6029, 0.9131, 0.8093, 0.5665, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]]

Expected: [[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.7018, 0.8516, 0.1619, 0.6735, 0, 0, 0, 0, 0.6029, 0.9131, 0.8093, 0.5665, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]]