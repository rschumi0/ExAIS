import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Loc84136 = tf.keras.layers.Input(shape=([1, 2, 2]))
in0Con93118 = tf.keras.layers.Input(shape=([2, 2, 4, 1]))
in0Ave47590 = tf.keras.layers.Input(shape=([2, 2, 2, 2]))
in1Ave47590 = tf.keras.layers.Input(shape=([2, 2, 2, 2]))

Loc84136 = keras.layers.LocallyConnected2D(2, (1, 2),strides=(1, 1), name = 'Loc84136', )(in0Loc84136)
Res68222 = keras.layers.Reshape((1, 1, 2, 1), name = 'Res68222', )(Loc84136)
Zer50413 = keras.layers.ZeroPadding3D(padding=((1, 0), (1, 0), (2, 0)), name = 'Zer50413', )(Res68222)
Con93118 = keras.layers.Concatenate(axis=4, name = 'Con93118', )([Zer50413,in0Con93118])
Ave47590 = keras.layers.Average(name = 'Ave47590', )([in0Ave47590,in1Ave47590])
Up_29790 = keras.layers.UpSampling3D(size=(1, 1, 2), name = 'Up_29790', )(Ave47590)
Sub11257 = keras.layers.Subtract(name = 'Sub11257', )([Con93118,Up_29790])
model = tf.keras.models.Model(inputs=[in0Loc84136,in0Con93118,in0Ave47590,in1Ave47590], outputs=Sub11257)
w = model.get_layer('Loc84136').get_weights() 
w[0] = np.array([[[0.9147, 0.6916], [0.8563, 0.2943], [0.8227, 0.8962], [0.1093, 0.5796]]])
w[1] = np.array([[[0, 0]]])
model.get_layer('Loc84136').set_weights(w) 
in0Loc84136 = tf.constant([[[[0.6902, 0.7767], [0.1236, 0.9398]]]])
in0Con93118 = tf.constant([[[[[0.9654], [0.0491], [0.3028], [0.0181]], [[0.5305], [0.2066], [0.8889], [0.3965]]], [[[0.7937], [0.1585], [0.1677], [0.8929]], [[0.0902], [0.6854], [0.0422], [0.7865]]]]])
in0Ave47590 = tf.constant([[[[[0.5209, 0.0575], [0.5861, 0.8721]], [[0.2691, 0.0374], [0.9857, 0.5276]]], [[[0.1554, 0.1807], [0.5138, 0.9193]], [[0.4151, 0.2359], [0.6874, 0.2594]]]]])
in1Ave47590 = tf.constant([[[[[0.3892, 0.9745], [0.4338, 0.9183]], [[0.6214, 0.3025], [0.3192, 0.0089]]], [[[0.2702, 0.1827], [0.7373, 0.2445]], [[0.0998, 0.4811], [0.8379, 0.0367]]]]])
print (np.array2string(model.predict([in0Loc84136,in0Con93118,in0Ave47590,in1Ave47590],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Sub11257.png')

LLoc84136 = locally_connected2D_layer([[[[0.6902, 0.7767], [0.1236, 0.9398]]]], 1, 2,[[[0.9147, 0.6916], [0.8563, 0.2943], [0.8227, 0.8962], [0.1093, 0.5796]]],[[[0, 0]]], 1, 1, Loc84136), 
LRes68222 = reshape_layer(Loc84136, [1, 1, 2, 1], Res68222), 
LZer50413 = zero_padding3D_layer(Res68222, 1, 0, 1, 0, 2, 0, Zer50413), 
LCon93118 = concatenate_layer([Zer50413,[[[[[0.9654], [0.0491], [0.3028], [0.0181]], [[0.5305], [0.2066], [0.8889], [0.3965]]], [[[0.7937], [0.1585], [0.1677], [0.8929]], [[0.0902], [0.6854], [0.0422], [0.7865]]]]]], 4, Con93118), 
LAve47590 = average_layer([[[[[[0.5209, 0.0575], [0.5861, 0.8721]], [[0.2691, 0.0374], [0.9857, 0.5276]]], [[[0.1554, 0.1807], [0.5138, 0.9193]], [[0.4151, 0.2359], [0.6874, 0.2594]]]]], [[[[[0.3892, 0.9745], [0.4338, 0.9183]], [[0.6214, 0.3025], [0.3192, 0.0089]]], [[[0.2702, 0.1827], [0.7373, 0.2445]], [[0.0998, 0.4811], [0.8379, 0.0367]]]]]], Ave47590), 
LUp_29790 = up_sampling3D_layer(Ave47590, 1, 1, 2, Up_29790), 
LSub11257 = subtract_layer(Con93118,Up_29790, Sub11257), 
exec_layers([LLoc84136,LRes68222,LZer50413,LCon93118,LAve47590,LUp_29790,LSub11257],["Loc84136","Res68222","Zer50413","Con93118","Ave47590","Up_29790","Sub11257"],Sub11257,"Sub11257")

Actual (Unparsed): [[[[[-0.4550500, 0.4494000], [-0.4550500, -0.4669000], [-0.5099500, -0.5924000], [-0.5099500, -0.8771000]], [[-0.4452500, 0.3605500], [-0.4452500, 0.0366500], [-0.6524500, 0.6206500], [-0.6524500, 0.1282500]]], [[[-0.2128000, 0.6120000], [-0.2128000, -0.0232000], [-0.6255500, -0.4142000], [-0.6255500, 0.3110000]], [[-0.2574500, -0.2683000], [-0.2574500, 0.3269000], [0.7381700, -0.1058500], [0.5987535, 0.6384500]]]]]

Expected (Unparsed): [[[[[-0.45505,0.4494],[-0.45505,-0.46690000000000004],[-0.50995,-0.5924],[-0.50995,-0.8771]],[[-0.44525,0.36055],[-0.44525,0.036650000000000016],[-0.65245,0.62065],[-0.65245,0.12825000000000003]]],[[[-0.2128,0.612],[-0.2128,-0.0232],[-0.62555,-0.4142],[-0.62555,0.31100000000000005]],[[-0.25745,-0.26830000000000004],[-0.25745,0.32689999999999997],[0.7381700099999997,-0.10585000000000001],[0.59875353,0.63845]]]]]

Actual:   [[[[[-0.455, 0.4494], [-0.455, -0.4669], [-0.5099, -0.5924], [-0.5099, -0.8771]], [[-0.4452, 0.3606], [-0.4452, 0.0367], [-0.6524, 0.6207], [-0.6524, 0.1283]]], [[[-0.2128, 0.612], [-0.2128, -0.0232], [-0.6255, -0.4142], [-0.6255, 0.311]], [[-0.2574, -0.2683], [-0.2574, 0.3269], [0.7382, -0.1058], [0.5988, 0.6385]]]]]

Expected: [[[[[-0.455, 0.4494], [-0.455, -0.4669], [-0.5099, -0.5924], [-0.5099, -0.8771]], [[-0.4452, 0.3606], [-0.4452, 0.0367], [-0.6524, 0.6207], [-0.6524, 0.1283]]], [[[-0.2128, 0.612], [-0.2128, -0.0232], [-0.6255, -0.4142], [-0.6255, 0.3111]], [[-0.2574, -0.2683], [-0.2574, 0.3269], [0.7382, -0.1058], [0.5988, 0.6385]]]]]