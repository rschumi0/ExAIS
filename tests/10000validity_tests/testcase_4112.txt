import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Max64779 = tf.keras.layers.Input(shape=([1, 1, 1, 1]))
in1Max64779 = tf.keras.layers.Input(shape=([1, 1, 1, 1]))

Max64779 = keras.layers.Maximum(name = 'Max64779', )([in0Max64779,in1Max64779])
Up_41711 = keras.layers.UpSampling3D(size=(1, 1, 1), name = 'Up_41711', )(Max64779)
Res62277 = keras.layers.Reshape((1, 1, 1), name = 'Res62277', )(Up_41711)
Zer2980 = keras.layers.ZeroPadding2D(padding=((1, 1), (1, 1)), name = 'Zer2980', )(Res62277)
Res16661 = keras.layers.Reshape((3, 3), name = 'Res16661', )(Zer2980)
Fla54903 = keras.layers.Flatten(name = 'Fla54903', )(Res16661)
model = tf.keras.models.Model(inputs=[in0Max64779,in1Max64779], outputs=Fla54903)
in0Max64779 = tf.constant([[[[[0.5084]]]]])
in1Max64779 = tf.constant([[[[[0.4966]]]]])
print (np.array2string(model.predict([in0Max64779,in1Max64779],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Fla54903.png')

LMax64779 = maximum_layer([[[[[[0.5084]]]]], [[[[[0.4966]]]]]], Max64779), 
LUp_41711 = up_sampling3D_layer(Max64779, 1, 1, 1, Up_41711), 
LRes62277 = reshape_layer(Up_41711, [1, 1, 1], Res62277), 
LZer2980 = zero_padding2D_layer(Res62277, 1, 1, 1, 1, Zer2980), 
LRes16661 = reshape_layer(Zer2980, [3, 3], Res16661), 
LFla54903 = flatten_layer(Res16661, Fla54903), 
exec_layers([LMax64779,LUp_41711,LRes62277,LZer2980,LRes16661,LFla54903],["Max64779","Up_41711","Res62277","Zer2980","Res16661","Fla54903"],Fla54903,"Fla54903")

Actual (Unparsed): [[0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.5084000, 0.0000000, 0.0000000, 0.0000000, 0.0000000]]

Expected (Unparsed): [[0,0,0,0,0.5084,0,0,0,0]]

Actual:   [[0, 0, 0, 0, 0.5084, 0, 0, 0, 0]]

Expected: [[0, 0, 0, 0, 0.5084, 0, 0, 0, 0]]