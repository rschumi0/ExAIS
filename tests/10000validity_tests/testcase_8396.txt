import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Thr46422 = tf.keras.layers.Input(shape=([2, 1, 1]))

Thr46422 = keras.layers.ThresholdedReLU(theta=3.8145277571735328, name = 'Thr46422', input_shape=(2, 1, 1))(in0Thr46422)
Zer35302 = keras.layers.ZeroPadding2D(padding=((1, 1), (1, 1)), name = 'Zer35302', )(Thr46422)
Dep81222 = keras.layers.DepthwiseConv2D((1, 2),strides=(1, 1), padding='valid', name = 'Dep81222', )(Zer35302)
model = tf.keras.models.Model(inputs=[in0Thr46422], outputs=Dep81222)
w = model.get_layer('Dep81222').get_weights() 
w[0] = np.array([[[[0.2112]], [[0.6621]]]])
w[1] = np.array([0])
model.get_layer('Dep81222').set_weights(w) 
in0Thr46422 = tf.constant([[[[0.1881]], [[0.1956]]]])
print (np.array2string(model.predict([in0Thr46422],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Dep81222.png')

LThr46422 = thresholded_relu_layer([[[[0.1881]], [[0.1956]]]], 3.8145277571735328, Thr46422), 
LZer35302 = zero_padding2D_layer(Thr46422, 1, 1, 1, 1, Zer35302), 
LDep81222 = depthwise_conv2D_layer(Zer35302, 1, 2,[[[[0.2112]], [[0.6621]]]],[0], 1, 1, false, Dep81222), 
exec_layers([LThr46422,LZer35302,LDep81222],["Thr46422","Zer35302","Dep81222"],Dep81222,"Dep81222")

Actual (Unparsed): [[[[0.0000000], [0.0000000]], [[0.0000000], [0.0000000]], [[0.0000000], [0.0000000]], [[0.0000000], [0.0000000]]]]

Expected (Unparsed): [[[[0.0],[0.0]],[[0.0],[0.0]],[[0.0],[0.0]],[[0.0],[0.0]]]]

Actual:   [[[[0], [0]], [[0], [0]], [[0], [0]], [[0], [0]]]]

Expected: [[[[0], [0]], [[0], [0]], [[0], [0]], [[0], [0]]]]