import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Mul74291 = tf.keras.layers.Input(shape=([2, 1]))
in1Mul74291 = tf.keras.layers.Input(shape=([2, 1]))
in0Con73899 = tf.keras.layers.Input(shape=([2, 1]))
in0Max15976 = tf.keras.layers.Input(shape=([2, 2]))

Mul74291 = keras.layers.Multiply(name = 'Mul74291', )([in0Mul74291,in1Mul74291])
Con73899 = keras.layers.Concatenate(axis=2, name = 'Con73899', )([Mul74291,in0Con73899])
Max15976 = keras.layers.MaxPool1D(pool_size=(1), strides=(1), padding='same', name = 'Max15976', )(in0Max15976)
Min25396 = keras.layers.Minimum(name = 'Min25396', )([Con73899,Max15976])
model = tf.keras.models.Model(inputs=[in0Mul74291,in1Mul74291,in0Con73899,in0Max15976], outputs=Min25396)
in0Mul74291 = tf.constant([[[0.6014], [0.7627]]])
in1Mul74291 = tf.constant([[[0.9629], [0.9115]]])
in0Con73899 = tf.constant([[[0.3346], [0.9355]]])
in0Max15976 = tf.constant([[[1.9947, 1.4705], [1.0986, 1.8565]]])
print (np.array2string(model.predict([in0Mul74291,in1Mul74291,in0Con73899,in0Max15976],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Min25396.png')

LMul74291 = multiply_layer([[[[0.6014], [0.7627]]], [[[0.9629], [0.9115]]]], Mul74291), 
LCon73899 = concatenate_layer([Mul74291,[[[0.3346], [0.9355]]]], 2, Con73899), 
LMax15976 = max_pool1D_layer([[[1.9947, 1.4705], [1.0986, 1.8565]]], 1, 1, true, Max15976), 
LMin25396 = minimum_layer([Con73899,Max15976], Min25396), 
exec_layers([LMul74291,LCon73899,LMax15976,LMin25396],["Mul74291","Con73899","Max15976","Min25396"],Min25396,"Min25396")

Actual (Unparsed): [[[0.5790881, 0.3346000], [0.6952011, 0.9355000]]]

Expected (Unparsed): [[[0.57908806,0.3346],[0.69520105,0.9355]]]

Actual:   [[[0.5791, 0.3346], [0.6953, 0.9355]]]

Expected: [[[0.5791, 0.3346], [0.6953, 0.9355]]]