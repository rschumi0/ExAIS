import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Max77987 = tf.keras.layers.Input(shape=([2, 2, 1, 2]))
in1Max77987 = tf.keras.layers.Input(shape=([2, 2, 1, 2]))

Max77987 = keras.layers.Maximum(name = 'Max77987', )([in0Max77987,in1Max77987])
Zer30445 = keras.layers.ZeroPadding3D(padding=((1, 1), (1, 1), (1, 1)), name = 'Zer30445', )(Max77987)
model = tf.keras.models.Model(inputs=[in0Max77987,in1Max77987], outputs=Zer30445)
in0Max77987 = tf.constant([[[[[0.7455, 0.5706]], [[0.7124, 0.1129]]], [[[0.657, 0.3334]], [[0.7201, 0.0351]]]]])
in1Max77987 = tf.constant([[[[[0.7649, 0.6889]], [[0.608, 0.1751]]], [[[0.4121, 0.6391]], [[0.712, 0.3601]]]]])
print (np.array2string(model.predict([in0Max77987,in1Max77987],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Zer30445.png')

LMax77987 = maximum_layer([[[[[[0.7455, 0.5706]], [[0.7124, 0.1129]]], [[[0.657, 0.3334]], [[0.7201, 0.0351]]]]], [[[[[0.7649, 0.6889]], [[0.608, 0.1751]]], [[[0.4121, 0.6391]], [[0.712, 0.3601]]]]]], Max77987), 
LZer30445 = zero_padding3D_layer(Max77987, 1, 1, 1, 1, 1, 1, Zer30445), 
exec_layers([LMax77987,LZer30445],["Max77987","Zer30445"],Zer30445,"Zer30445")

Actual (Unparsed): [[[[[0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000]], [[0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000]], [[0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000]], [[0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000]]], [[[0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000]], [[0.0000000, 0.0000000], [0.7649000, 0.6889000], [0.0000000, 0.0000000]], [[0.0000000, 0.0000000], [0.7124000, 0.1751000], [0.0000000, 0.0000000]], [[0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000]]], [[[0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000]], [[0.0000000, 0.0000000], [0.6570000, 0.6391000], [0.0000000, 0.0000000]], [[0.0000000, 0.0000000], [0.7201000, 0.3601000], [0.0000000, 0.0000000]], [[0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000]]], [[[0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000]], [[0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000]], [[0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000]], [[0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000]]]]]

Expected (Unparsed): [[[[[0,0],[0,0],[0,0]],[[0,0],[0,0],[0,0]],[[0,0],[0,0],[0,0]],[[0,0],[0,0],[0,0]]],[[[0,0],[0,0],[0,0]],[[0,0],[0.7649,0.6889],[0,0]],[[0,0],[0.7124,0.1751],[0,0]],[[0,0],[0,0],[0,0]]],[[[0,0],[0,0],[0,0]],[[0,0],[0.657,0.6391],[0,0]],[[0,0],[0.7201,0.3601],[0,0]],[[0,0],[0,0],[0,0]]],[[[0,0],[0,0],[0,0]],[[0,0],[0,0],[0,0]],[[0,0],[0,0],[0,0]],[[0,0],[0,0],[0,0]]]]]

Actual:   [[[[[0, 0], [0, 0], [0, 0]], [[0, 0], [0, 0], [0, 0]], [[0, 0], [0, 0], [0, 0]], [[0, 0], [0, 0], [0, 0]]], [[[0, 0], [0, 0], [0, 0]], [[0, 0], [0.7649, 0.6889], [0, 0]], [[0, 0], [0.7124, 0.1751], [0, 0]], [[0, 0], [0, 0], [0, 0]]], [[[0, 0], [0, 0], [0, 0]], [[0, 0], [0.657, 0.6391], [0, 0]], [[0, 0], [0.7201, 0.3601], [0, 0]], [[0, 0], [0, 0], [0, 0]]], [[[0, 0], [0, 0], [0, 0]], [[0, 0], [0, 0], [0, 0]], [[0, 0], [0, 0], [0, 0]], [[0, 0], [0, 0], [0, 0]]]]]

Expected: [[[[[0, 0], [0, 0], [0, 0]], [[0, 0], [0, 0], [0, 0]], [[0, 0], [0, 0], [0, 0]], [[0, 0], [0, 0], [0, 0]]], [[[0, 0], [0, 0], [0, 0]], [[0, 0], [0.7649, 0.6889], [0, 0]], [[0, 0], [0.7124, 0.1751], [0, 0]], [[0, 0], [0, 0], [0, 0]]], [[[0, 0], [0, 0], [0, 0]], [[0, 0], [0.657, 0.6391], [0, 0]], [[0, 0], [0.7201, 0.3601], [0, 0]], [[0, 0], [0, 0], [0, 0]]], [[[0, 0], [0, 0], [0, 0]], [[0, 0], [0, 0], [0, 0]], [[0, 0], [0, 0], [0, 0]], [[0, 0], [0, 0], [0, 0]]]]]