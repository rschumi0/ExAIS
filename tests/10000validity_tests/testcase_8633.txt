import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Fla60647 = tf.keras.layers.Input(shape=([1, 3, 3]))
in0Max56556 = tf.keras.layers.Input(shape=([2, 2, 1]))
in1Max56556 = tf.keras.layers.Input(shape=([2, 2, 1]))
in0Con38313 = tf.keras.layers.Input(shape=([2, 2, 1, 1]))
in0Min38884 = tf.keras.layers.Input(shape=([1, 2, 1]))
in1Min38884 = tf.keras.layers.Input(shape=([1, 2, 1]))
in0Con55547 = tf.keras.layers.Input(shape=([1, 2, 1, 1]))
in0Mul79743 = tf.keras.layers.Input(shape=([1, 1, 1, 2]))
in1Mul79743 = tf.keras.layers.Input(shape=([1, 1, 1, 2]))

Fla60647 = keras.layers.Flatten(name = 'Fla60647', )(in0Fla60647)
Res51276 = keras.layers.Reshape((9, 1), name = 'Res51276', )(Fla60647)
Res42214 = keras.layers.Reshape((9, 1, 1), name = 'Res42214', )(Res51276)
Res67815 = keras.layers.Reshape((9, 1, 1, 1), name = 'Res67815', )(Res42214)
Glo86440 = keras.layers.GlobalMaxPool3D(name = 'Glo86440', )(Res67815)
Res5672 = keras.layers.Reshape((1, 1), name = 'Res5672', )(Glo86440)
Res46667 = keras.layers.Reshape((1, 1, 1), name = 'Res46667', )(Res5672)
Zer40870 = keras.layers.ZeroPadding2D(padding=((1, 0), (1, 0)), name = 'Zer40870', )(Res46667)
Max56556 = keras.layers.Maximum(name = 'Max56556', )([in0Max56556,in1Max56556])
Mul3272 = keras.layers.Multiply(name = 'Mul3272', )([Zer40870,Max56556])
Res69349 = keras.layers.Reshape((2, 2, 1, 1), name = 'Res69349', )(Mul3272)
Con38313 = keras.layers.Concatenate(axis=4, name = 'Con38313', )([Res69349,in0Con38313])
Min38884 = keras.layers.Minimum(name = 'Min38884', )([in0Min38884,in1Min38884])
Res17574 = keras.layers.Reshape((1, 2, 1, 1), name = 'Res17574', )(Min38884)
Con55547 = keras.layers.Concatenate(axis=4, name = 'Con55547', )([Res17574,in0Con55547])
Mul79743 = keras.layers.Multiply(name = 'Mul79743', )([in0Mul79743,in1Mul79743])
Zer31870 = keras.layers.ZeroPadding3D(padding=((0, 0), (1, 0), (0, 0)), name = 'Zer31870', )(Mul79743)
Max32543 = keras.layers.Maximum(name = 'Max32543', )([Con55547,Zer31870])
Zer81599 = keras.layers.ZeroPadding3D(padding=((1, 0), (0, 0), (0, 0)), name = 'Zer81599', )(Max32543)
Mul80442 = keras.layers.Multiply(name = 'Mul80442', )([Con38313,Zer81599])
Res30873 = keras.layers.Reshape((2, 2, 2), name = 'Res30873', )(Mul80442)
Res19232 = keras.layers.Reshape((2, 4), name = 'Res19232', )(Res30873)
Sim85335 = keras.layers.SimpleRNN(3,name = 'Sim85335', )(Res19232)
model = tf.keras.models.Model(inputs=[in0Fla60647,in0Max56556,in1Max56556,in0Con38313,in0Min38884,in1Min38884,in0Con55547,in0Mul79743,in1Mul79743], outputs=Sim85335)
w = model.get_layer('Sim85335').get_weights() 
w[0] = np.array([[4, 6, 2], [9, 5, 5], [6, 1, 2], [2, 1, 2]])
w[1] = np.array([[2, 4, 8], [2, 1, 10], [7, 3, 7]])
w[2] = np.array([8, 3, 6])
model.get_layer('Sim85335').set_weights(w) 
in0Fla60647 = tf.constant([[[[1.8076, 1.0914, 1.1414], [1.8476, 1.1094, 1.7536], [1.0591, 1.0905, 1.0357]]]])
in0Max56556 = tf.constant([[[[0.1224], [0.4614]], [[0.3024], [0.1397]]]])
in1Max56556 = tf.constant([[[[0.7744], [0.6288]], [[0.1134], [0.2068]]]])
in0Con38313 = tf.constant([[[[[0.524]], [[0.9394]]], [[[0.6205]], [[0.1392]]]]])
in0Min38884 = tf.constant([[[[0.5685], [0.4059]]]])
in1Min38884 = tf.constant([[[[0.8861], [0.265]]]])
in0Con55547 = tf.constant([[[[[0.3549]], [[0.2229]]]]])
in0Mul79743 = tf.constant([[[[[0.724, 0.2242]]]]])
in1Mul79743 = tf.constant([[[[[0.7653, 0.7133]]]]])
print (np.array2string(model.predict([in0Fla60647,in0Max56556,in1Max56556,in0Con38313,in0Min38884,in1Min38884,in0Con55547,in0Mul79743,in1Mul79743],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Sim85335.png')

LFla60647 = flatten_layer([[[[1.8076, 1.0914, 1.1414], [1.8476, 1.1094, 1.7536], [1.0591, 1.0905, 1.0357]]]], Fla60647), 
LRes51276 = reshape_layer(Fla60647, [9, 1], Res51276), 
LRes42214 = reshape_layer(Res51276, [9, 1, 1], Res42214), 
LRes67815 = reshape_layer(Res42214, [9, 1, 1, 1], Res67815), 
LGlo86440 = global_max_pool3D_layer(Res67815, Glo86440), 
LRes5672 = reshape_layer(Glo86440, [1, 1], Res5672), 
LRes46667 = reshape_layer(Res5672, [1, 1, 1], Res46667), 
LZer40870 = zero_padding2D_layer(Res46667, 1, 0, 1, 0, Zer40870), 
LMax56556 = maximum_layer([[[[[0.1224], [0.4614]], [[0.3024], [0.1397]]]], [[[[0.7744], [0.6288]], [[0.1134], [0.2068]]]]], Max56556), 
LMul3272 = multiply_layer([Zer40870,Max56556], Mul3272), 
LRes69349 = reshape_layer(Mul3272, [2, 2, 1, 1], Res69349), 
LCon38313 = concatenate_layer([Res69349,[[[[[0.524]], [[0.9394]]], [[[0.6205]], [[0.1392]]]]]], 4, Con38313), 
LMin38884 = minimum_layer([[[[[0.5685], [0.4059]]]], [[[[0.8861], [0.265]]]]], Min38884), 
LRes17574 = reshape_layer(Min38884, [1, 2, 1, 1], Res17574), 
LCon55547 = concatenate_layer([Res17574,[[[[[0.3549]], [[0.2229]]]]]], 4, Con55547), 
LMul79743 = multiply_layer([[[[[[0.724, 0.2242]]]]], [[[[[0.7653, 0.7133]]]]]], Mul79743), 
LZer31870 = zero_padding3D_layer(Mul79743, 0, 0, 1, 0, 0, 0, Zer31870), 
LMax32543 = maximum_layer([Con55547,Zer31870], Max32543), 
LZer81599 = zero_padding3D_layer(Max32543, 1, 0, 0, 0, 0, 0, Zer81599), 
LMul80442 = multiply_layer([Con38313,Zer81599], Mul80442), 
LRes30873 = reshape_layer(Mul80442, [2, 2, 2], Res30873), 
LRes19232 = reshape_layer(Res30873, [2, 4], Res19232), 
LSim85335 = simple_rnn_layer(Res19232,[[4, 6, 2], [9, 5, 5], [6, 1, 2], [2, 1, 2]],[[2, 4, 8], [2, 1, 10], [7, 3, 7]],[8, 3, 6], Sim85335), 
exec_layers([LFla60647,LRes51276,LRes42214,LRes67815,LGlo86440,LRes5672,LRes46667,LZer40870,LMax56556,LMul3272,LRes69349,LCon38313,LMin38884,LRes17574,LCon55547,LMul79743,LZer31870,LMax32543,LZer81599,LMul80442,LRes30873,LRes19232,LSim85335],["Fla60647","Res51276","Res42214","Res67815","Glo86440","Res5672","Res46667","Zer40870","Max56556","Mul3272","Res69349","Con38313","Min38884","Res17574","Con55547","Mul79743","Zer31870","Max32543","Zer81599","Mul80442","Res30873","Res19232","Sim85335"],Sim85335,"Sim85335")

Actual (Unparsed): [[1.0000000, 1.0000000, 1.0000000]]

Expected (Unparsed): [[1.0,0.9999999999616591,1.0]]

Actual:   [[1, 1, 1]]

Expected: [[1, 1, 1]]