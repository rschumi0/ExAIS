import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Zer11846 = tf.keras.layers.Input(shape=([1, 3, 1]))
in0LST6347 = tf.keras.layers.Input(shape=([2, 3]))
in0Con16293 = tf.keras.layers.Input(shape=([13]))
in0Min64271 = tf.keras.layers.Input(shape=([1, 1, 1]))
in1Min64271 = tf.keras.layers.Input(shape=([1, 1, 1]))

Zer11846 = keras.layers.ZeroPadding2D(padding=((1, 1), (1, 1)), name = 'Zer11846', )(in0Zer11846)
Res30428 = keras.layers.Reshape((3, 5), name = 'Res30428', )(Zer11846)
Fla18940 = keras.layers.Flatten(name = 'Fla18940', )(Res30428)
LST6347 = keras.layers.LSTM(2,recurrent_activation='sigmoid', name = 'LST6347', )(in0LST6347)
Con16293 = keras.layers.Concatenate(axis=1, name = 'Con16293', )([LST6347,in0Con16293])
Mul11219 = keras.layers.Multiply(name = 'Mul11219', )([Fla18940,Con16293])
Res36219 = keras.layers.Reshape((15, 1), name = 'Res36219', )(Mul11219)
Min64271 = keras.layers.Minimum(name = 'Min64271', )([in0Min64271,in1Min64271])
Res46925 = keras.layers.Reshape((1, 1), name = 'Res46925', )(Min64271)
Dot43617 = keras.layers.Dot(axes=(2, 2), name = 'Dot43617', )([Res36219,Res46925])
Res88667 = keras.layers.Reshape((15, 1, 1), name = 'Res88667', )(Dot43617)
Up_98564 = keras.layers.UpSampling2D(size=(1, 2), name = 'Up_98564', )(Res88667)
model = tf.keras.models.Model(inputs=[in0Zer11846,in0LST6347,in0Con16293,in0Min64271,in1Min64271], outputs=Up_98564)
w = model.get_layer('LST6347').get_weights() 
w[0] = np.array([[6, 3, 6, 4, 10, 9, 6, 8], [1, 2, 10, 10, 8, 8, 4, 6], [2, 5, 1, 3, 3, 6, 5, 4]])
w[1] = np.array([[2, 7, 7, 8, 2, 2, 10, 3], [5, 7, 10, 3, 6, 4, 6, 2]])
w[2] = np.array([8, 3, 8, 3, 5, 8, 7, 2])
model.get_layer('LST6347').set_weights(w) 
in0Zer11846 = tf.constant([[[[1.9531], [1.4396], [1.7042]]]])
in0LST6347 = tf.constant([[[4, 8, 10], [2, 3, 6]]])
in0Con16293 = tf.constant([[0.9171, 0.5282, 0.5994, 0.2845, 0.5036, 0.6747, 0.3696, 0.0727, 0.4384, 0.2972, 0.9037, 0.931, 0.8469]])
in0Min64271 = tf.constant([[[[0.5765]]]])
in1Min64271 = tf.constant([[[[0.0272]]]])
print (np.array2string(model.predict([in0Zer11846,in0LST6347,in0Con16293,in0Min64271,in1Min64271],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Up_98564.png')

LZer11846 = zero_padding2D_layer([[[[1.9531], [1.4396], [1.7042]]]], 1, 1, 1, 1, Zer11846), 
LRes30428 = reshape_layer(Zer11846, [3, 5], Res30428), 
LFla18940 = flatten_layer(Res30428, Fla18940), 
LLST6347 = lstm_layer([[[4, 8, 10], [2, 3, 6]]],[[6, 3, 6, 4, 10, 9, 6, 8], [1, 2, 10, 10, 8, 8, 4, 6], [2, 5, 1, 3, 3, 6, 5, 4]],[[2, 7, 7, 8, 2, 2, 10, 3], [5, 7, 10, 3, 6, 4, 6, 2]],[8, 3, 8, 3, 5, 8, 7, 2], LST6347), 
LCon16293 = concatenate_layer([LST6347,[[0.9171, 0.5282, 0.5994, 0.2845, 0.5036, 0.6747, 0.3696, 0.0727, 0.4384, 0.2972, 0.9037, 0.931, 0.8469]]], 1, Con16293), 
LMul11219 = multiply_layer([Fla18940,Con16293], Mul11219), 
LRes36219 = reshape_layer(Mul11219, [15, 1], Res36219), 
LMin64271 = minimum_layer([[[[[0.5765]]]], [[[[0.0272]]]]], Min64271), 
LRes46925 = reshape_layer(Min64271, [1, 1], Res46925), 
LDot43617 = dot_layer(Res36219,Res46925, 2, 2, Dot43617), 
LRes88667 = reshape_layer(Dot43617, [15, 1, 1], Res88667), 
LUp_98564 = up_sampling2D_layer(Res88667, 1, 2, Up_98564), 
exec_layers([LZer11846,LRes30428,LFla18940,LLST6347,LCon16293,LMul11219,LRes36219,LMin64271,LRes46925,LDot43617,LRes88667,LUp_98564],["Zer11846","Res30428","Fla18940","LST6347","Con16293","Mul11219","Res36219","Min64271","Res46925","Dot43617","Res88667","Up_98564"],Up_98564,"Up_98564")

Actual (Unparsed): [[[[0.0000000], [0.0000000]], [[0.0000000], [0.0000000]], [[0.0000000], [0.0000000]], [[0.0000000], [0.0000000]], [[0.0000000], [0.0000000]], [[0.0000000], [0.0000000]], [[0.0267534], [0.0267534]], [[0.0264193], [0.0264193]], [[0.0171325], [0.0171325]], [[0.0000000], [0.0000000]], [[0.0000000], [0.0000000]], [[0.0000000], [0.0000000]], [[0.0000000], [0.0000000]], [[0.0000000], [0.0000000]], [[0.0000000], [0.0000000]]]]

Expected (Unparsed): [[[[0.0],[0.0]],[[0.0],[0.0]],[[0.0],[0.0]],[[0.0],[0.0]],[[0.0],[0.0]],[[0.0],[0.0]],[[0.026753407552000005],[0.026753407552000005]],[[0.026419308863999996],[0.026419308863999996]],[[0.017132527103999998],[0.017132527103999998]],[[0.0],[0.0]],[[0.0],[0.0]],[[0.0],[0.0]],[[0.0],[0.0]],[[0.0],[0.0]],[[0.0],[0.0]]]]

Actual:   [[[[0], [0]], [[0], [0]], [[0], [0]], [[0], [0]], [[0], [0]], [[0], [0]], [[0.0268], [0.0268]], [[0.0265], [0.0265]], [[0.0172], [0.0172]], [[0], [0]], [[0], [0]], [[0], [0]], [[0], [0]], [[0], [0]], [[0], [0]]]]

Expected: [[[[0], [0]], [[0], [0]], [[0], [0]], [[0], [0]], [[0], [0]], [[0], [0]], [[0.0268], [0.0268]], [[0.0265], [0.0265]], [[0.0172], [0.0172]], [[0], [0]], [[0], [0]], [[0], [0]], [[0], [0]], [[0], [0]], [[0], [0]]]]