import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Con21856 = tf.keras.layers.Input(shape=([1, 1]))

Con21856 = keras.layers.Conv1D(2, (1),strides=(1), padding='same', dilation_rate=(1), name = 'Con21856', )(in0Con21856)
Res28447 = keras.layers.Reshape((1, 2, 1), name = 'Res28447', )(Con21856)
Res4443 = keras.layers.Reshape((1, 2, 1, 1), name = 'Res4443', )(Res28447)
Up_10105 = keras.layers.UpSampling3D(size=(2, 1, 1), name = 'Up_10105', )(Res4443)
Res96150 = keras.layers.Reshape((2, 2, 1), name = 'Res96150', )(Up_10105)
Max3325 = keras.layers.MaxPool2D(pool_size=(1, 1), name = 'Max3325', )(Res96150)
model = tf.keras.models.Model(inputs=[in0Con21856], outputs=Max3325)
w = model.get_layer('Con21856').get_weights() 
w[0] = np.array([[[0.1609, 0.9436]]])
w[1] = np.array([0, 0])
model.get_layer('Con21856').set_weights(w) 
in0Con21856 = tf.constant([[[0.3038]]])
print (np.array2string(model.predict([in0Con21856],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Max3325.png')

LCon21856 = conv1D_layer([[[0.3038]]], 1,[[[0.1609, 0.9436]]],[0, 0], 1, true, 1, Con21856), 
LRes28447 = reshape_layer(Con21856, [1, 2, 1], Res28447), 
LRes4443 = reshape_layer(Res28447, [1, 2, 1, 1], Res4443), 
LUp_10105 = up_sampling3D_layer(Res4443, 2, 1, 1, Up_10105), 
LRes96150 = reshape_layer(Up_10105, [2, 2, 1], Res96150), 
LMax3325 = max_pool2D_layer(Res96150, 1, 1, Max3325), 
exec_layers([LCon21856,LRes28447,LRes4443,LUp_10105,LRes96150,LMax3325],["Con21856","Res28447","Res4443","Up_10105","Res96150","Max3325"],Max3325,"Max3325")

Actual (Unparsed): [[[[0.0488814], [0.2866657]], [[0.0488814], [0.2866657]]]]

Expected (Unparsed): [[[[0.04888142],[0.28666568000000003]],[[0.04888142],[0.28666568000000003]]]]

Actual:   [[[[0.0489], [0.2867]], [[0.0489], [0.2867]]]]

Expected: [[[[0.0489], [0.2867]], [[0.0489], [0.2867]]]]