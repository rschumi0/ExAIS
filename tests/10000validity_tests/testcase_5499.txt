import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Glo60892 = tf.keras.layers.Input(shape=([1, 2]))
in0Min28460 = tf.keras.layers.Input(shape=([1, 2, 2, 1]))
in1Min28460 = tf.keras.layers.Input(shape=([1, 2, 2, 1]))
in0Con87742 = tf.keras.layers.Input(shape=([2, 3, 3, 3]))

Glo60892 = keras.layers.GlobalMaxPool1D(name = 'Glo60892', )(in0Glo60892)
Res86449 = keras.layers.Reshape((2, 1), name = 'Res86449', )(Glo60892)
Res55809 = keras.layers.Reshape((2, 1, 1), name = 'Res55809', )(Res86449)
Res84028 = keras.layers.Reshape((2, 1, 1, 1), name = 'Res84028', )(Res55809)
Con44410 = keras.layers.Conv3D(4, (2, 1, 1),strides=(1, 12, 1), padding='same', dilation_rate=(1, 1, 1), name = 'Con44410', )(Res84028)
Zer23621 = keras.layers.ZeroPadding3D(padding=((0, 0), (2, 0), (2, 0)), name = 'Zer23621', )(Con44410)
Min28460 = keras.layers.Minimum(name = 'Min28460', )([in0Min28460,in1Min28460])
Zer17413 = keras.layers.ZeroPadding3D(padding=((1, 0), (1, 0), (1, 0)), name = 'Zer17413', )(Min28460)
Con87742 = keras.layers.Concatenate(axis=4, name = 'Con87742', )([Zer17413,in0Con87742])
Min7307 = keras.layers.Minimum(name = 'Min7307', )([Zer23621,Con87742])
model = tf.keras.models.Model(inputs=[in0Glo60892,in0Min28460,in1Min28460,in0Con87742], outputs=Min7307)
w = model.get_layer('Con44410').get_weights() 
w[0] = np.array([[[[[0.7057, 0.1791, 0.0514, 0.6294]]]], [[[[0.1254, 0.943, 0.45, 0.2968]]]]])
w[1] = np.array([0, 0, 0, 0])
model.get_layer('Con44410').set_weights(w) 
in0Glo60892 = tf.constant([[[1.9213, 1.6333]]])
in0Min28460 = tf.constant([[[[[0.0543], [0.7127]], [[0.5747], [0.8996]]]]])
in1Min28460 = tf.constant([[[[[0.2195], [0.8885]], [[0.7439], [0.0042]]]]])
in0Con87742 = tf.constant([[[[[0.0136, 0.9654, 0.8612], [0.7661, 0.4848, 0.6185], [0.2364, 0.3285, 0.42]], [[0.7872, 0.0383, 0.1277], [0.3256, 0.2154, 0.6011], [0.6572, 0.332, 0.7131]], [[0.7113, 0.7537, 0.2435], [0.8869, 0.7094, 0.0756], [0.8266, 0.0383, 0.0056]]], [[[0.8773, 0.8525, 0.1736], [0.72, 0.0402, 0.3428], [0.6999, 0.7992, 0.7758]], [[0.0588, 0.9188, 0.7518], [0.2837, 0.5208, 0.8704], [0.0995, 0.9152, 0.75]], [[0.4291, 0.742, 0.0699], [0.4806, 0.8087, 0.7013], [0.1396, 0.8098, 0.7935]]]]])
print (np.array2string(model.predict([in0Glo60892,in0Min28460,in1Min28460,in0Con87742],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Min7307.png')

LGlo60892 = global_max_pool1D_layer([[[1.9213, 1.6333]]], Glo60892), 
LRes86449 = reshape_layer(Glo60892, [2, 1], Res86449), 
LRes55809 = reshape_layer(Res86449, [2, 1, 1], Res55809), 
LRes84028 = reshape_layer(Res55809, [2, 1, 1, 1], Res84028), 
LCon44410 = conv3D_layer(Res84028, 2, 1, 1,[[[[[0.7057, 0.1791, 0.0514, 0.6294]]]], [[[[0.1254, 0.943, 0.45, 0.2968]]]]],[0, 0, 0, 0], 1, 12, 1, true, 1, 1, 1, Con44410), 
LZer23621 = zero_padding3D_layer(Con44410, 0, 0, 2, 0, 2, 0, Zer23621), 
LMin28460 = minimum_layer([[[[[[0.0543], [0.7127]], [[0.5747], [0.8996]]]]], [[[[[0.2195], [0.8885]], [[0.7439], [0.0042]]]]]], Min28460), 
LZer17413 = zero_padding3D_layer(Min28460, 1, 0, 1, 0, 1, 0, Zer17413), 
LCon87742 = concatenate_layer([Zer17413,[[[[[0.0136, 0.9654, 0.8612], [0.7661, 0.4848, 0.6185], [0.2364, 0.3285, 0.42]], [[0.7872, 0.0383, 0.1277], [0.3256, 0.2154, 0.6011], [0.6572, 0.332, 0.7131]], [[0.7113, 0.7537, 0.2435], [0.8869, 0.7094, 0.0756], [0.8266, 0.0383, 0.0056]]], [[[0.8773, 0.8525, 0.1736], [0.72, 0.0402, 0.3428], [0.6999, 0.7992, 0.7758]], [[0.0588, 0.9188, 0.7518], [0.2837, 0.5208, 0.8704], [0.0995, 0.9152, 0.75]], [[0.4291, 0.742, 0.0699], [0.4806, 0.8087, 0.7013], [0.1396, 0.8098, 0.7935]]]]]], 4, Con87742), 
LMin7307 = minimum_layer([Zer23621,Con87742], Min7307), 
exec_layers([LGlo60892,LRes86449,LRes55809,LRes84028,LCon44410,LZer23621,LMin28460,LZer17413,LCon87742,LMin7307],["Glo60892","Res86449","Res55809","Res84028","Con44410","Zer23621","Min28460","Zer17413","Con87742","Min7307"],Min7307,"Min7307")

Actual (Unparsed): [[[[[0.0000000, 0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000, 0.0000000]], [[0.0000000, 0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000, 0.0000000]], [[0.0000000, 0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.8266000, 0.0383000, 0.0056000]]], [[[0.0000000, 0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000, 0.0000000]], [[0.0000000, 0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000, 0.0000000]], [[0.0000000, 0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000, 0.0000000], [0.0042000, 0.1396000, 0.0839516, 0.7935000]]]]]

Expected (Unparsed): [[[[[0,0,0,0],[0,0,0,0],[0,0,0,0]],[[0,0,0,0],[0,0,0,0],[0,0,0,0]],[[0,0,0,0],[0,0,0,0],[0,0.8266,0.0383,0.0056]]],[[[0,0,0,0],[0,0,0,0],[0,0,0,0]],[[0,0,0,0],[0,0,0,0],[0,0,0,0]],[[0,0,0,0],[0,0,0,0],[0.0042,0.1396,0.08395162,0.7935]]]]]

Actual:   [[[[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]], [[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]], [[0, 0, 0, 0], [0, 0, 0, 0], [0, 0.8266, 0.0383, 0.0056]]], [[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]], [[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]], [[0, 0, 0, 0], [0, 0, 0, 0], [0.0042, 0.1396, 0.084, 0.7935]]]]]

Expected: [[[[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]], [[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]], [[0, 0, 0, 0], [0, 0, 0, 0], [0, 0.8266, 0.0383, 0.0056]]], [[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]], [[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]], [[0, 0, 0, 0], [0, 0, 0, 0], [0.0042, 0.1396, 0.084, 0.7935]]]]]