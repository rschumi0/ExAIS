import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Min24320 = tf.keras.layers.Input(shape=([2, 2, 2, 2]))
in1Min24320 = tf.keras.layers.Input(shape=([2, 2, 2, 2]))
in0Ave69439 = tf.keras.layers.Input(shape=([2, 2]))
in1Ave69439 = tf.keras.layers.Input(shape=([2, 2]))
in0Con31966 = tf.keras.layers.Input(shape=([2, 6]))

Min24320 = keras.layers.Minimum(name = 'Min24320', )([in0Min24320,in1Min24320])
Res96434 = keras.layers.Reshape((2, 2, 4), name = 'Res96434', )(Min24320)
Res65164 = keras.layers.Reshape((2, 8), name = 'Res65164', )(Res96434)
Ave69439 = keras.layers.Average(name = 'Ave69439', )([in0Ave69439,in1Ave69439])
Con31966 = keras.layers.Concatenate(axis=2, name = 'Con31966', )([Ave69439,in0Con31966])
Add46155 = keras.layers.Add(name = 'Add46155', )([Res65164,Con31966])
Den66253 = keras.layers.Dense(4,name = 'Den66253', )(Add46155)
Sim92361 = keras.layers.SimpleRNN(3,name = 'Sim92361', )(Den66253)
model = tf.keras.models.Model(inputs=[in0Min24320,in1Min24320,in0Ave69439,in1Ave69439,in0Con31966], outputs=Sim92361)
w = model.get_layer('Den66253').get_weights() 
w[0] = np.array([[0.1619, 0.0987, 0.8147, 0.134], [0.0259, 0.9358, 0.2651, 0.0015], [0.3367, 0.823, 0.2683, 0.643], [0.5986, 0.6471, 0.2668, 0.4205], [0.3129, 0.3732, 0.5517, 0.2652], [0.578, 0.944, 0.9213, 0.7841], [0.8514, 0.9898, 0.4175, 0.1398], [0.3991, 0.9222, 0.2887, 0.5888]])
w[1] = np.array([0.4869, 0.956, 0.0524, 0.8628])
model.get_layer('Den66253').set_weights(w) 
w = model.get_layer('Sim92361').get_weights() 
w[0] = np.array([[1, 5, 10], [3, 8, 1], [5, 6, 8], [10, 7, 2]])
w[1] = np.array([[10, 10, 9], [1, 8, 5], [3, 10, 2]])
w[2] = np.array([3, 4, 2])
model.get_layer('Sim92361').set_weights(w) 
in0Min24320 = tf.constant([[[[[0.8044, 0.7141], [0.2579, 0.4064]], [[0.6716, 0.4984], [0.3367, 0.2724]]], [[[0.071, 0.3187], [0.2182, 0.2399]], [[0.1929, 0.0704], [0.7841, 0.693]]]]])
in1Min24320 = tf.constant([[[[[0.446, 0.2648], [0.2269, 0.5736]], [[0.6977, 0.4101], [0.805, 0.3398]]], [[[0.5284, 0.6834], [0.2896, 0.3525]], [[0.4365, 0.3279], [0.6874, 0.7144]]]]])
in0Ave69439 = tf.constant([[[0.0148, 0.2449], [0.1176, 0.9545]]])
in1Ave69439 = tf.constant([[[0.8734, 0.1941], [0.1728, 0.7169]]])
in0Con31966 = tf.constant([[[0.8717, 0.3883, 0.5918, 0.2485, 0.2554, 0.4995], [0.1195, 0.9231, 0.637, 0.7595, 0.7795, 0.7768]]])
print (np.array2string(model.predict([in0Min24320,in1Min24320,in0Ave69439,in1Ave69439,in0Con31966],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Sim92361.png')

LMin24320 = minimum_layer([[[[[[0.8044, 0.7141], [0.2579, 0.4064]], [[0.6716, 0.4984], [0.3367, 0.2724]]], [[[0.071, 0.3187], [0.2182, 0.2399]], [[0.1929, 0.0704], [0.7841, 0.693]]]]], [[[[[0.446, 0.2648], [0.2269, 0.5736]], [[0.6977, 0.4101], [0.805, 0.3398]]], [[[0.5284, 0.6834], [0.2896, 0.3525]], [[0.4365, 0.3279], [0.6874, 0.7144]]]]]], Min24320), 
LRes96434 = reshape_layer(Min24320, [2, 2, 4], Res96434), 
LRes65164 = reshape_layer(Res96434, [2, 8], Res65164), 
LAve69439 = average_layer([[[[0.0148, 0.2449], [0.1176, 0.9545]]], [[[0.8734, 0.1941], [0.1728, 0.7169]]]], Ave69439), 
LCon31966 = concatenate_layer([Ave69439,[[[0.8717, 0.3883, 0.5918, 0.2485, 0.2554, 0.4995], [0.1195, 0.9231, 0.637, 0.7595, 0.7795, 0.7768]]]], 2, Con31966), 
LAdd46155 = add_layer([Res65164,Con31966], Add46155), 
LDen66253 = dense_layer(Add46155, [[0.1619, 0.0987, 0.8147, 0.134], [0.0259, 0.9358, 0.2651, 0.0015], [0.3367, 0.823, 0.2683, 0.643], [0.5986, 0.6471, 0.2668, 0.4205], [0.3129, 0.3732, 0.5517, 0.2652], [0.578, 0.944, 0.9213, 0.7841], [0.8514, 0.9898, 0.4175, 0.1398], [0.3991, 0.9222, 0.2887, 0.5888]],[0.4869, 0.956, 0.0524, 0.8628], Den66253), 
LSim92361 = simple_rnn_layer(Den66253,[[1, 5, 10], [3, 8, 1], [5, 6, 8], [10, 7, 2]],[[10, 10, 9], [1, 8, 5], [3, 10, 2]],[3, 4, 2], Sim92361), 
exec_layers([LMin24320,LRes96434,LRes65164,LAve69439,LCon31966,LAdd46155,LDen66253,LSim92361],["Min24320","Res96434","Res65164","Ave69439","Con31966","Add46155","Den66253","Sim92361"],Sim92361,"Sim92361")

Actual (Unparsed): [[1.0000000, 1.0000000, 1.0000000]]

Expected (Unparsed): [[1.0,1.0,1.0]]

Actual:   [[1, 1, 1]]

Expected: [[1, 1, 1]]