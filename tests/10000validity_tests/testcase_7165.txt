import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Lea63688 = tf.keras.layers.Input(shape=([1, 1, 2, 2]))
in0Add33883 = tf.keras.layers.Input(shape=([1, 1]))
in1Add33883 = tf.keras.layers.Input(shape=([1, 1]))
in0Con31174 = tf.keras.layers.Input(shape=([1, 3]))
in0Con80335 = tf.keras.layers.Input(shape=([1, 4, 1]))
in0Sep18999 = tf.keras.layers.Input(shape=([2, 2, 2]))

Lea63688 = keras.layers.LeakyReLU(alpha=6.745078058558068, name = 'Lea63688', input_shape=(1, 1, 2, 2))(in0Lea63688)
Lay20938 = keras.layers.LayerNormalization(axis=2, epsilon=1.0695475517228805, name = 'Lay20938', )(Lea63688)
Res79866 = keras.layers.Reshape((1, 1, 4), name = 'Res79866', )(Lay20938)
Cro24599 = keras.layers.Cropping2D(cropping=((0, 0), (0, 0)), name = 'Cro24599', )(Res79866)
Res99013 = keras.layers.Reshape((1, 4), name = 'Res99013', )(Cro24599)
Add33883 = keras.layers.Add(name = 'Add33883', )([in0Add33883,in1Add33883])
Con31174 = keras.layers.Concatenate(axis=2, name = 'Con31174', )([Add33883,in0Con31174])
Ave39994 = keras.layers.Average(name = 'Ave39994', )([Res99013,Con31174])
Res19239 = keras.layers.Reshape((1, 4, 1), name = 'Res19239', )(Ave39994)
Con80335 = keras.layers.Concatenate(axis=3, name = 'Con80335', )([Res19239,in0Con80335])
Sep18999 = keras.layers.SeparableConv2D(2, (2, 1),strides=(1, 1), padding='valid', name = 'Sep18999', )(in0Sep18999)
Zer3858 = keras.layers.ZeroPadding2D(padding=((0, 0), (2, 0)), name = 'Zer3858', )(Sep18999)
Mul9060 = keras.layers.Multiply(name = 'Mul9060', )([Con80335,Zer3858])
Res20676 = keras.layers.Reshape((1, 8), name = 'Res20676', )(Mul9060)
Sim66363 = keras.layers.SimpleRNN(1,name = 'Sim66363', )(Res20676)
model = tf.keras.models.Model(inputs=[in0Lea63688,in0Add33883,in1Add33883,in0Con31174,in0Con80335,in0Sep18999], outputs=Sim66363)
w = model.get_layer('Sep18999').get_weights() 
w[0] = np.array([[[[0.3454], [0.1348]]], [[[0.5518], [0.2538]]]])
w[1] = np.array([[[[0.2913, 0.3438], [0.86, 0.2242]]]])
w[2] = np.array([0, 0])
model.get_layer('Sep18999').set_weights(w) 
w = model.get_layer('Sim66363').get_weights() 
w[0] = np.array([[7], [1], [10], [8], [6], [4], [1], [2]])
w[1] = np.array([[7]])
w[2] = np.array([8])
model.get_layer('Sim66363').set_weights(w) 
in0Lea63688 = tf.constant([[[[[0.5723, 0.6965], [0.1959, 0.242]]]]])
in0Add33883 = tf.constant([[[0.6405]]])
in1Add33883 = tf.constant([[[0.008]]])
in0Con31174 = tf.constant([[[0.4776, 0.0253, 0.2424]]])
in0Con80335 = tf.constant([[[[0.2861], [0.6466], [0.6608], [0.3109]]]])
in0Sep18999 = tf.constant([[[[0.9513, 0.7406], [0.9184, 0.3874]], [[0.8431, 0.8484], [0.4154, 0.3571]]]])
print (np.array2string(model.predict([in0Lea63688,in0Add33883,in1Add33883,in0Con31174,in0Con80335,in0Sep18999],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Sim66363.png')

LLea63688 = leaky_relu_layer([[[[[0.5723, 0.6965], [0.1959, 0.242]]]]], 6.745078058558068, Lea63688), 
LLay20938 = layer_normalization_layer(Lea63688, 2, 1.0695475517228805, Lay20938), 
LRes79866 = reshape_layer(Lay20938, [1, 1, 4], Res79866), 
LCro24599 = cropping2D_layer(Res79866, 0, 0, 0, 0, Cro24599), 
LRes99013 = reshape_layer(Cro24599, [1, 4], Res99013), 
LAdd33883 = add_layer([[[[0.6405]]], [[[0.008]]]], Add33883), 
LCon31174 = concatenate_layer([Add33883,[[[0.4776, 0.0253, 0.2424]]]], 2, Con31174), 
LAve39994 = average_layer([Res99013,Con31174], Ave39994), 
LRes19239 = reshape_layer(Ave39994, [1, 4, 1], Res19239), 
LCon80335 = concatenate_layer([Res19239,[[[[0.2861], [0.6466], [0.6608], [0.3109]]]]], 3, Con80335), 
LSep18999 = separable_conv2D_layer([[[[0.9513, 0.7406], [0.9184, 0.3874]], [[0.8431, 0.8484], [0.4154, 0.3571]]]], 2, 1,[[[[[0.3454], [0.1348]]], [[[0.5518], [0.2538]]]],[[[[0.2913, 0.3438], [0.86, 0.2242]]]]],[0, 0], 1, 1, false, Sep18999), 
LZer3858 = zero_padding2D_layer(Sep18999, 0, 0, 2, 0, Zer3858), 
LMul9060 = multiply_layer([Con80335,Zer3858], Mul9060), 
LRes20676 = reshape_layer(Mul9060, [1, 8], Res20676), 
LSim66363 = simple_rnn_layer(Res20676,[[7], [1], [10], [8], [6], [4], [1], [2]],[[7]],[8], Sim66363), 
exec_layers([LLea63688,LLay20938,LRes79866,LCro24599,LRes99013,LAdd33883,LCon31174,LAve39994,LRes19239,LCon80335,LSep18999,LZer3858,LMul9060,LRes20676,LSim66363],["Lea63688","Lay20938","Res79866","Cro24599","Res99013","Add33883","Con31174","Ave39994","Res19239","Con80335","Sep18999","Zer3858","Mul9060","Res20676","Sim66363"],Sim66363,"Sim66363")

Actual (Unparsed): [[1.0000000]]

Expected (Unparsed): [[0.9999999759023551]]

Actual:   [[1]]

Expected: [[1]]