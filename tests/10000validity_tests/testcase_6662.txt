import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Ave57806 = tf.keras.layers.Input(shape=([2, 2, 1, 2]))
in1Ave57806 = tf.keras.layers.Input(shape=([2, 2, 1, 2]))
in0Ave87250 = tf.keras.layers.Input(shape=([2, 1, 1, 2]))
in1Ave87250 = tf.keras.layers.Input(shape=([2, 1, 1, 2]))
in0Add94284 = tf.keras.layers.Input(shape=([1, 2, 2]))
in1Add94284 = tf.keras.layers.Input(shape=([1, 2, 2]))

Ave57806 = keras.layers.Average(name = 'Ave57806', )([in0Ave57806,in1Ave57806])
Sof79123 = keras.layers.Softmax(axis=1, name = 'Sof79123', )(Ave57806)
Res44789 = keras.layers.Reshape((2, 2, 2), name = 'Res44789', )(Sof79123)
Res3219 = keras.layers.Reshape((2, 4), name = 'Res3219', )(Res44789)
Cro25289 = keras.layers.Cropping1D(cropping=((1, 0)), name = 'Cro25289', )(Res3219)
Res89818 = keras.layers.Reshape((1, 4, 1), name = 'Res89818', )(Cro25289)
Ave87250 = keras.layers.Average(name = 'Ave87250', )([in0Ave87250,in1Ave87250])
Res2306 = keras.layers.Reshape((1, 4, 1), name = 'Res2306', )(Ave87250)
Mul64825 = keras.layers.Multiply(name = 'Mul64825', )([Res89818,Res2306])
Res91474 = keras.layers.Reshape((1, 4), name = 'Res91474', )(Mul64825)
Add94284 = keras.layers.Add(name = 'Add94284', )([in0Add94284,in1Add94284])
Res89275 = keras.layers.Reshape((1, 4), name = 'Res89275', )(Add94284)
Max65849 = keras.layers.MaxPool1D(pool_size=(1), strides=(1), padding='same', name = 'Max65849', )(Res89275)
Dot39540 = keras.layers.Dot(axes=(1, 1), name = 'Dot39540', )([Res91474,Max65849])
model = tf.keras.models.Model(inputs=[in0Ave57806,in1Ave57806,in0Ave87250,in1Ave87250,in0Add94284,in1Add94284], outputs=Dot39540)
in0Ave57806 = tf.constant([[[[[0.3339, 0.6223]], [[0.1494, 0.7369]]], [[[0.286, 0.8049]], [[0.5361, 0.7689]]]]])
in1Ave57806 = tf.constant([[[[[0.2163, 0.3382]], [[0.3097, 0.5795]]], [[[0.5478, 0.7423]], [[0.7097, 0.8001]]]]])
in0Ave87250 = tf.constant([[[[[0.4704, 0.8406]]], [[[0.6782, 0.3119]]]]])
in1Ave87250 = tf.constant([[[[[0.7377, 0.2352]]], [[[0.61, 0.4407]]]]])
in0Add94284 = tf.constant([[[[0.8555, 0.2168], [0.7105, 0.1382]]]])
in1Add94284 = tf.constant([[[[0.7262, 0.3063], [0.3567, 0.5105]]]])
print (np.array2string(model.predict([in0Ave57806,in1Ave57806,in0Ave87250,in1Ave87250,in0Add94284,in1Add94284],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Dot39540.png')

LAve57806 = average_layer([[[[[[0.3339, 0.6223]], [[0.1494, 0.7369]]], [[[0.286, 0.8049]], [[0.5361, 0.7689]]]]], [[[[[0.2163, 0.3382]], [[0.3097, 0.5795]]], [[[0.5478, 0.7423]], [[0.7097, 0.8001]]]]]], Ave57806), 
LSof79123 = softmax_layer(Ave57806, 1, Sof79123), 
LRes44789 = reshape_layer(Sof79123, [2, 2, 2], Res44789), 
LRes3219 = reshape_layer(Res44789, [2, 4], Res3219), 
LCro25289 = cropping1D_layer(Res3219, 1, 0, Cro25289), 
LRes89818 = reshape_layer(Cro25289, [1, 4, 1], Res89818), 
LAve87250 = average_layer([[[[[[0.4704, 0.8406]]], [[[0.6782, 0.3119]]]]], [[[[[0.7377, 0.2352]]], [[[0.61, 0.4407]]]]]], Ave87250), 
LRes2306 = reshape_layer(Ave87250, [1, 4, 1], Res2306), 
LMul64825 = multiply_layer([Res89818,Res2306], Mul64825), 
LRes91474 = reshape_layer(Mul64825, [1, 4], Res91474), 
LAdd94284 = add_layer([[[[[0.8555, 0.2168], [0.7105, 0.1382]]]], [[[[0.7262, 0.3063], [0.3567, 0.5105]]]]], Add94284), 
LRes89275 = reshape_layer(Add94284, [1, 4], Res89275), 
LMax65849 = max_pool1D_layer(Res89275, 1, 1, true, Max65849), 
LDot39540 = dot_layer(Res91474,Max65849, 1, 1, Dot39540), 
exec_layers([LAve57806,LSof79123,LRes44789,LRes3219,LCro25289,LRes89818,LAve87250,LRes2306,LMul64825,LRes91474,LAdd94284,LRes89275,LMax65849,LDot39540],["Ave57806","Sof79123","Res44789","Res3219","Cro25289","Res89818","Ave87250","Res2306","Mul64825","Res91474","Add94284","Res89275","Max65849","Dot39540"],Dot39540,"Dot39540")

Actual (Unparsed): [[[0.5115261, 0.1691720, 0.3451354, 0.2097914], [0.4873499, 0.1611764, 0.3288233, 0.1998760], [0.6082980, 0.2011764, 0.4104291, 0.2494803], [0.3163651, 0.1046283, 0.2134570, 0.1297503]]]

Expected (Unparsed): [[[0.511526151575435,0.16917198576791428,0.3451354295765975,0.20979137290698907],[0.4873498672936964,0.16117640234009772,0.3288232777238622,0.19987599349650428],[0.6082980144951551,0.2011763870407888,0.41042905801936497,0.2494802566877455],[0.31636515418280203,0.10462831899413526,0.21345697195668356,0.12975031644331014]]]

Actual:   [[[0.5116, 0.1692, 0.3452, 0.2098], [0.4874, 0.1612, 0.3289, 0.1999], [0.6083, 0.2012, 0.4105, 0.2495], [0.3164, 0.1047, 0.2135, 0.1298]]]

Expected: [[[0.5116, 0.1692, 0.3452, 0.2098], [0.4874, 0.1612, 0.3289, 0.1999], [0.6083, 0.2012, 0.4105, 0.2495], [0.3164, 0.1047, 0.2135, 0.1298]]]