import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Min1893 = tf.keras.layers.Input(shape=([1, 1, 2]))
in1Min1893 = tf.keras.layers.Input(shape=([1, 1, 2]))

Min1893 = keras.layers.Minimum(name = 'Min1893', )([in0Min1893,in1Min1893])
Lay2961 = keras.layers.LayerNormalization(axis=1, epsilon=2.292369773448149, name = 'Lay2961', )(Min1893)
Sof88380 = keras.layers.Softmax(axis=1, name = 'Sof88380', )(Lay2961)
Ave73736 = keras.layers.AveragePooling2D(pool_size=(1, 1), strides=(1, 1), padding='valid', name = 'Ave73736', )(Sof88380)
model = tf.keras.models.Model(inputs=[in0Min1893,in1Min1893], outputs=Ave73736)
in0Min1893 = tf.constant([[[[0.246, 0.4304]]]])
in1Min1893 = tf.constant([[[[0.0445, 0.8778]]]])
print (np.array2string(model.predict([in0Min1893,in1Min1893],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Ave73736.png')

LMin1893 = minimum_layer([[[[[0.246, 0.4304]]]], [[[[0.0445, 0.8778]]]]], Min1893), 
LLay2961 = layer_normalization_layer(Min1893, 1, 2.292369773448149, Lay2961), 
LSof88380 = softmax_layer(Lay2961, 1, Sof88380), 
LAve73736 = average_pooling2D_layer(Sof88380, 1, 1, 1, 1, false, Ave73736), 
exec_layers([LMin1893,LLay2961,LSof88380,LAve73736],["Min1893","Lay2961","Sof88380","Ave73736"],Ave73736,"Ave73736")

Actual (Unparsed): [[[[1.0000000, 1.0000000]]]]

Expected (Unparsed): [[[[1.0,1.0]]]]

Actual:   [[[[1, 1]]]]

Expected: [[[[1, 1]]]]