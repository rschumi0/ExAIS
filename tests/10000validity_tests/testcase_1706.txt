import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Up_79395 = tf.keras.layers.Input(shape=([2, 4, 4, 3]))
in0ELU70565 = tf.keras.layers.Input(shape=([1, 2]))
in0Con19834 = tf.keras.layers.Input(shape=([4, 4, 11]))

Up_79395 = keras.layers.UpSampling3D(size=(2, 1, 1), name = 'Up_79395', )(in0Up_79395)
Res61773 = keras.layers.Reshape((4, 4, 12), name = 'Res61773', )(Up_79395)
ELU70565 = keras.layers.ELU(alpha=9.947962668838834, name = 'ELU70565', input_shape=(1, 2))(in0ELU70565)
Res76708 = keras.layers.Reshape((1, 2, 1), name = 'Res76708', )(ELU70565)
Max4905 = keras.layers.MaxPool2D(pool_size=(1, 2), name = 'Max4905', )(Res76708)
Zer67002 = keras.layers.ZeroPadding2D(padding=((3, 0), (3, 0)), name = 'Zer67002', )(Max4905)
Con19834 = keras.layers.Concatenate(axis=3, name = 'Con19834', )([Zer67002,in0Con19834])
Min36859 = keras.layers.Minimum(name = 'Min36859', )([Res61773,Con19834])
Res61322 = keras.layers.Reshape((4, 48), name = 'Res61322', )(Min36859)
Cro99558 = keras.layers.Cropping1D(cropping=((1, 0)), name = 'Cro99558', )(Res61322)
model = tf.keras.models.Model(inputs=[in0Up_79395,in0ELU70565,in0Con19834], outputs=Cro99558)
in0Up_79395 = tf.constant([[[[[1.9648, 1.7105, 1.0583], [1.654, 1.3537, 1.5492], [1.8262, 1.4974, 1.7731], [1.6954, 1.846, 1.713]], [[1.584, 1.7666, 1.2821], [1.3988, 1.3369, 1.4908], [1.7033, 1.6495, 1.5555], [1.9419, 1.6452, 1.2578]], [[1.6386, 1.3897, 1.0128], [1.1857, 1.0055, 1.8997], [1.9275, 1.4847, 1.6096], [1.0078, 1.3252, 1.3647]], [[1.5953, 1.8968, 1.4648], [1.5394, 1.1853, 1.5028], [1.5246, 1.8067, 1.8494], [1.895, 1.6274, 1.0644]]], [[[1.4295, 1.0853, 1.9647], [1.6057, 1.1729, 1.1514], [1.1692, 1.5898, 1.5601], [1.1853, 1.7232, 1.0435]], [[1.4059, 1.1146, 1.9854], [1.6115, 1.9578, 1.8883], [1.3671, 1.5449, 1.6199], [1.8655, 1.2967, 1.0938]], [[1.4901, 1.5023, 1.8739], [1.5527, 1.1145, 1.5903], [1.5317, 1.6971, 1.7329], [1.3715, 1.6044, 1.2456]], [[1.8218, 1.8245, 1.4251], [1.281, 1.9208, 1.298], [1.4694, 1.2767, 1.5736], [1.4559, 1.1023, 1.4837]]]]])
in0ELU70565 = tf.constant([[[0.709, 0.1854]]])
in0Con19834 = tf.constant([[[[0.9597, 0.5604, 0.9266, 0.8723, 0.9703, 0.3014, 0.5055, 0.1749, 0.8048, 0.5177, 0.9515], [0.4043, 0.8299, 0.6918, 0.0654, 0.2894, 0.7554, 0.5989, 0.4983, 0.3279, 0.9947, 0.8747], [0.2453, 0.3888, 0.7373, 0.2914, 0.6542, 0.0007, 0.9949, 0.2561, 0.9651, 0.3032, 0.3381], [0.225, 0.8677, 0.4551, 0.7746, 0.4403, 0.8146, 0.1509, 0.2395, 0.6394, 0.8592, 0.7767]], [[0.4619, 0.1598, 0.6018, 0.6539, 0.5549, 0.1698, 0.4235, 0.7644, 0.5334, 0.5903, 0.559], [0.3296, 0.109, 0.6439, 0.7221, 0.6233, 0.5302, 0.864, 0.9321, 0.4382, 0.9439, 0.8293], [0.9114, 0.6986, 0.7374, 0.85, 0.9236, 0.814, 0.587, 0.3252, 0.2064, 0.5, 0.4872], [0.5168, 0.2131, 0.9609, 0.8656, 0.0378, 0.7263, 0.5236, 0.9941, 0.4441, 0.5277, 0.0387]], [[0.3043, 0.9323, 0.7205, 0.6245, 0.8844, 0.2999, 0.985, 0.6216, 0.3886, 0.0016, 0.0212], [0.9422, 0.8291, 0.3491, 0.1807, 0.3562, 0.2318, 0.6444, 0.8227, 0.6359, 0.9406, 0.3108], [0.2451, 0.8984, 0.429, 0.8927, 0.132, 0.9305, 0.8426, 0.1298, 0.3391, 0.7578, 0.1338], [0.1819, 0.4917, 0.2295, 0.5754, 0.4794, 0.3137, 0.9295, 0.6434, 0.6028, 0.8193, 0.2971]], [[0.7439, 0.0614, 0.5056, 0.4408, 0.026, 0.8285, 0.4639, 0.7649, 0.5711, 0.0202, 0.8907], [0.1926, 0.5769, 0.1572, 0.8257, 0.4651, 0.7655, 0.037, 0.0691, 0.7244, 0.1374, 0.3622], [0.1369, 0.3466, 0.3634, 0.9202, 0.8039, 0.7814, 0.5634, 0.2896, 0.251, 0.9759, 0.9558], [0.7599, 0.0861, 0.8129, 0.8757, 0.3975, 0.5396, 0.8773, 0.9608, 0.9607, 0.949, 0.7806]]]])
print (np.array2string(model.predict([in0Up_79395,in0ELU70565,in0Con19834],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Cro99558.png')

LUp_79395 = up_sampling3D_layer([[[[[1.9648, 1.7105, 1.0583], [1.654, 1.3537, 1.5492], [1.8262, 1.4974, 1.7731], [1.6954, 1.846, 1.713]], [[1.584, 1.7666, 1.2821], [1.3988, 1.3369, 1.4908], [1.7033, 1.6495, 1.5555], [1.9419, 1.6452, 1.2578]], [[1.6386, 1.3897, 1.0128], [1.1857, 1.0055, 1.8997], [1.9275, 1.4847, 1.6096], [1.0078, 1.3252, 1.3647]], [[1.5953, 1.8968, 1.4648], [1.5394, 1.1853, 1.5028], [1.5246, 1.8067, 1.8494], [1.895, 1.6274, 1.0644]]], [[[1.4295, 1.0853, 1.9647], [1.6057, 1.1729, 1.1514], [1.1692, 1.5898, 1.5601], [1.1853, 1.7232, 1.0435]], [[1.4059, 1.1146, 1.9854], [1.6115, 1.9578, 1.8883], [1.3671, 1.5449, 1.6199], [1.8655, 1.2967, 1.0938]], [[1.4901, 1.5023, 1.8739], [1.5527, 1.1145, 1.5903], [1.5317, 1.6971, 1.7329], [1.3715, 1.6044, 1.2456]], [[1.8218, 1.8245, 1.4251], [1.281, 1.9208, 1.298], [1.4694, 1.2767, 1.5736], [1.4559, 1.1023, 1.4837]]]]], 2, 1, 1, Up_79395), 
LRes61773 = reshape_layer(Up_79395, [4, 4, 12], Res61773), 
LELU70565 = elu_layer([[[0.709, 0.1854]]], 9.947962668838834, ELU70565), 
LRes76708 = reshape_layer(ELU70565, [1, 2, 1], Res76708), 
LMax4905 = max_pool2D_layer(Res76708, 1, 2, Max4905), 
LZer67002 = zero_padding2D_layer(Max4905, 3, 0, 3, 0, Zer67002), 
LCon19834 = concatenate_layer([Zer67002,[[[[0.9597, 0.5604, 0.9266, 0.8723, 0.9703, 0.3014, 0.5055, 0.1749, 0.8048, 0.5177, 0.9515], [0.4043, 0.8299, 0.6918, 0.0654, 0.2894, 0.7554, 0.5989, 0.4983, 0.3279, 0.9947, 0.8747], [0.2453, 0.3888, 0.7373, 0.2914, 0.6542, 0.0007, 0.9949, 0.2561, 0.9651, 0.3032, 0.3381], [0.225, 0.8677, 0.4551, 0.7746, 0.4403, 0.8146, 0.1509, 0.2395, 0.6394, 0.8592, 0.7767]], [[0.4619, 0.1598, 0.6018, 0.6539, 0.5549, 0.1698, 0.4235, 0.7644, 0.5334, 0.5903, 0.559], [0.3296, 0.109, 0.6439, 0.7221, 0.6233, 0.5302, 0.864, 0.9321, 0.4382, 0.9439, 0.8293], [0.9114, 0.6986, 0.7374, 0.85, 0.9236, 0.814, 0.587, 0.3252, 0.2064, 0.5, 0.4872], [0.5168, 0.2131, 0.9609, 0.8656, 0.0378, 0.7263, 0.5236, 0.9941, 0.4441, 0.5277, 0.0387]], [[0.3043, 0.9323, 0.7205, 0.6245, 0.8844, 0.2999, 0.985, 0.6216, 0.3886, 0.0016, 0.0212], [0.9422, 0.8291, 0.3491, 0.1807, 0.3562, 0.2318, 0.6444, 0.8227, 0.6359, 0.9406, 0.3108], [0.2451, 0.8984, 0.429, 0.8927, 0.132, 0.9305, 0.8426, 0.1298, 0.3391, 0.7578, 0.1338], [0.1819, 0.4917, 0.2295, 0.5754, 0.4794, 0.3137, 0.9295, 0.6434, 0.6028, 0.8193, 0.2971]], [[0.7439, 0.0614, 0.5056, 0.4408, 0.026, 0.8285, 0.4639, 0.7649, 0.5711, 0.0202, 0.8907], [0.1926, 0.5769, 0.1572, 0.8257, 0.4651, 0.7655, 0.037, 0.0691, 0.7244, 0.1374, 0.3622], [0.1369, 0.3466, 0.3634, 0.9202, 0.8039, 0.7814, 0.5634, 0.2896, 0.251, 0.9759, 0.9558], [0.7599, 0.0861, 0.8129, 0.8757, 0.3975, 0.5396, 0.8773, 0.9608, 0.9607, 0.949, 0.7806]]]]], 3, Con19834), 
LMin36859 = minimum_layer([Res61773,Con19834], Min36859), 
LRes61322 = reshape_layer(Min36859, [4, 48], Res61322), 
LCro99558 = cropping1D_layer(Res61322, 1, 0, Cro99558), 
exec_layers([LUp_79395,LRes61773,LELU70565,LRes76708,LMax4905,LZer67002,LCon19834,LMin36859,LRes61322,LCro99558],["Up_79395","Res61773","ELU70565","Res76708","Max4905","Zer67002","Con19834","Min36859","Res61322","Cro99558"],Cro99558,"Cro99558")

Actual (Unparsed): [[[0.0000000, 0.4619000, 0.1598000, 0.6018000, 0.6539000, 0.5549000, 0.1698000, 0.4235000, 0.7644000, 0.5334000, 0.5903000, 0.5590000, 0.0000000, 0.3296000, 0.1090000, 0.6439000, 0.7221000, 0.6233000, 0.5302000, 0.8640000, 0.9321000, 0.4382000, 0.9439000, 0.8293000, 0.0000000, 0.9114000, 0.6986000, 0.7374000, 0.8500000, 0.9236000, 0.8140000, 0.5870000, 0.3252000, 0.2064000, 0.5000000, 0.4872000, 0.0000000, 0.5168000, 0.2131000, 0.9609000, 0.8656000, 0.0378000, 0.7263000, 0.5236000, 0.9941000, 0.4441000, 0.5277000, 0.0387000], [0.0000000, 0.3043000, 0.9323000, 0.7205000, 0.6245000, 0.8844000, 0.2999000, 0.9850000, 0.6216000, 0.3886000, 0.0016000, 0.0212000, 0.0000000, 0.9422000, 0.8291000, 0.3491000, 0.1807000, 0.3562000, 0.2318000, 0.6444000, 0.8227000, 0.6359000, 0.9406000, 0.3108000, 0.0000000, 0.2451000, 0.8984000, 0.4290000, 0.8927000, 0.1320000, 0.9305000, 0.8426000, 0.1298000, 0.3391000, 0.7578000, 0.1338000, 0.0000000, 0.1819000, 0.4917000, 0.2295000, 0.5754000, 0.4794000, 0.3137000, 0.9295000, 0.6434000, 0.6028000, 0.8193000, 0.2971000], [0.0000000, 0.7439000, 0.0614000, 0.5056000, 0.4408000, 0.0260000, 0.8285000, 0.4639000, 0.7649000, 0.5711000, 0.0202000, 0.8907000, 0.0000000, 0.1926000, 0.5769000, 0.1572000, 0.8257000, 0.4651000, 0.7655000, 0.0370000, 0.0691000, 0.7244000, 0.1374000, 0.3622000, 0.0000000, 0.1369000, 0.3466000, 0.3634000, 0.9202000, 0.8039000, 0.7814000, 0.5634000, 0.2896000, 0.2510000, 0.9759000, 0.9558000, 0.7090000, 0.7599000, 0.0861000, 0.8129000, 0.8757000, 0.3975000, 0.5396000, 0.8773000, 0.9608000, 0.9607000, 0.9490000, 0.7806000]]]

Expected (Unparsed): [[[0,0.4619,0.1598,0.6018,0.6539,0.5549,0.1698,0.4235,0.7644,0.5334,0.5903,0.559,0,0.3296,0.109,0.6439,0.7221,0.6233,0.5302,0.864,0.9321,0.4382,0.9439,0.8293,0,0.9114,0.6986,0.7374,0.85,0.9236,0.814,0.587,0.3252,0.2064,0.5,0.4872,0,0.5168,0.2131,0.9609,0.8656,0.0378,0.7263,0.5236,0.9941,0.4441,0.5277,0.0387],[0,0.3043,0.9323,0.7205,0.6245,0.8844,0.2999,0.985,0.6216,0.3886,0.0016,0.0212,0,0.9422,0.8291,0.3491,0.1807,0.3562,0.2318,0.6444,0.8227,0.6359,0.9406,0.3108,0,0.2451,0.8984,0.429,0.8927,0.132,0.9305,0.8426,0.1298,0.3391,0.7578,0.1338,0,0.1819,0.4917,0.2295,0.5754,0.4794,0.3137,0.9295,0.6434,0.6028,0.8193,0.2971],[0,0.7439,0.0614,0.5056,0.4408,0.026,0.8285,0.4639,0.7649,0.5711,0.0202,0.8907,0,0.1926,0.5769,0.1572,0.8257,0.4651,0.7655,0.037,0.0691,0.7244,0.1374,0.3622,0,0.1369,0.3466,0.3634,0.9202,0.8039,0.7814,0.5634,0.2896,0.251,0.9759,0.9558,0.709,0.7599,0.0861,0.8129,0.8757,0.3975,0.5396,0.8773,0.9608,0.9607,0.949,0.7806]]]

Actual:   [[[0, 0.4619, 0.1598, 0.6018, 0.6539, 0.5549, 0.1698, 0.4235, 0.7644, 0.5334, 0.5903, 0.559, 0, 0.3296, 0.109, 0.6439, 0.7221, 0.6233, 0.5302, 0.864, 0.9321, 0.4382, 0.9439, 0.8293, 0, 0.9114, 0.6986, 0.7374, 0.85, 0.9236, 0.814, 0.587, 0.3252, 0.2064, 0.5, 0.4872, 0, 0.5168, 0.2131, 0.9609, 0.8656, 0.0378, 0.7263, 0.5236, 0.9941, 0.4441, 0.5277, 0.0387], [0, 0.3043, 0.9323, 0.7205, 0.6245, 0.8844, 0.2999, 0.985, 0.6216, 0.3886, 0.0016, 0.0212, 0, 0.9422, 0.8291, 0.3491, 0.1807, 0.3562, 0.2318, 0.6444, 0.8227, 0.6359, 0.9406, 0.3108, 0, 0.2451, 0.8984, 0.429, 0.8927, 0.132, 0.9305, 0.8426, 0.1298, 0.3391, 0.7578, 0.1338, 0, 0.1819, 0.4917, 0.2295, 0.5754, 0.4794, 0.3137, 0.9295, 0.6434, 0.6028, 0.8193, 0.2971], [0, 0.7439, 0.0614, 0.5056, 0.4408, 0.026, 0.8285, 0.4639, 0.7649, 0.5711, 0.0202, 0.8907, 0, 0.1926, 0.5769, 0.1572, 0.8257, 0.4651, 0.7655, 0.037, 0.0691, 0.7244, 0.1374, 0.3622, 0, 0.1369, 0.3466, 0.3634, 0.9202, 0.8039, 0.7814, 0.5634, 0.2896, 0.251, 0.9759, 0.9558, 0.709, 0.7599, 0.0861, 0.8129, 0.8757, 0.3975, 0.5396, 0.8773, 0.9608, 0.9607, 0.949, 0.7806]]]

Expected: [[[0, 0.4619, 0.1598, 0.6018, 0.6539, 0.5549, 0.1698, 0.4235, 0.7644, 0.5334, 0.5903, 0.559, 0, 0.3296, 0.109, 0.6439, 0.7221, 0.6233, 0.5302, 0.864, 0.9321, 0.4382, 0.9439, 0.8293, 0, 0.9114, 0.6986, 0.7374, 0.85, 0.9236, 0.814, 0.587, 0.3252, 0.2064, 0.5, 0.4872, 0, 0.5168, 0.2131, 0.9609, 0.8656, 0.0378, 0.7263, 0.5236, 0.9941, 0.4441, 0.5277, 0.0387], [0, 0.3043, 0.9323, 0.7205, 0.6245, 0.8844, 0.2999, 0.985, 0.6216, 0.3886, 0.0016, 0.0212, 0, 0.9422, 0.8291, 0.3491, 0.1807, 0.3562, 0.2318, 0.6444, 0.8227, 0.6359, 0.9406, 0.3108, 0, 0.2451, 0.8984, 0.429, 0.8927, 0.132, 0.9305, 0.8426, 0.1298, 0.3391, 0.7578, 0.1338, 0, 0.1819, 0.4917, 0.2295, 0.5754, 0.4794, 0.3137, 0.9295, 0.6434, 0.6028, 0.8193, 0.2971], [0, 0.7439, 0.0614, 0.5056, 0.4408, 0.026, 0.8285, 0.4639, 0.7649, 0.5711, 0.0202, 0.8907, 0, 0.1926, 0.5769, 0.1572, 0.8257, 0.4651, 0.7655, 0.037, 0.0691, 0.7244, 0.1374, 0.3622, 0, 0.1369, 0.3466, 0.3634, 0.9202, 0.8039, 0.7814, 0.5634, 0.2896, 0.251, 0.9759, 0.9558, 0.709, 0.7599, 0.0861, 0.8129, 0.8757, 0.3975, 0.5396, 0.8773, 0.9608, 0.9607, 0.949, 0.7806]]]