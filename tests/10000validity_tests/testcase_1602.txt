import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Min51890 = tf.keras.layers.Input(shape=([2, 2, 2]))
in1Min51890 = tf.keras.layers.Input(shape=([2, 2, 2]))
in0Max44501 = tf.keras.layers.Input(shape=([1, 1, 1]))
in0Fla13614 = tf.keras.layers.Input(shape=([1]))
in0Con26665 = tf.keras.layers.Input(shape=([7]))
in0Con92125 = tf.keras.layers.Input(shape=([8, 2]))
in0Mul64537 = tf.keras.layers.Input(shape=([2, 2, 1, 1]))
in1Mul64537 = tf.keras.layers.Input(shape=([2, 2, 1, 1]))
in0Con98731 = tf.keras.layers.Input(shape=([6, 1]))
in0Zer64453 = tf.keras.layers.Input(shape=([4, 3]))

Min51890 = keras.layers.Minimum(name = 'Min51890', )([in0Min51890,in1Min51890])
Res21623 = keras.layers.Reshape((2, 4), name = 'Res21623', )(Min51890)
Fla73727 = keras.layers.Flatten(name = 'Fla73727', )(Res21623)
Max44501 = keras.layers.MaxPool2D(pool_size=(1, 1), name = 'Max44501', )(in0Max44501)
Res30507 = keras.layers.Reshape((1, 1), name = 'Res30507', )(Max44501)
Fla69840 = keras.layers.Flatten(name = 'Fla69840', )(Res30507)
Fla13614 = keras.layers.Flatten(name = 'Fla13614', )(in0Fla13614)
Dot85972 = keras.layers.Dot(axes=(1, 1), name = 'Dot85972', )([Fla69840,Fla13614])
ReL5115 = keras.layers.ReLU(max_value=2.0591275552776067, negative_slope=1.0876124158759646, threshold=6.877701906841574, name = 'ReL5115', )(Dot85972)
Con26665 = keras.layers.Concatenate(axis=1, name = 'Con26665', )([ReL5115,in0Con26665])
Max5946 = keras.layers.Maximum(name = 'Max5946', )([Fla73727,Con26665])
Res80774 = keras.layers.Reshape((8, 1), name = 'Res80774', )(Max5946)
Con92125 = keras.layers.Concatenate(axis=2, name = 'Con92125', )([Res80774,in0Con92125])
Mul64537 = keras.layers.Multiply(name = 'Mul64537', )([in0Mul64537,in1Mul64537])
Bat94893 = keras.layers.BatchNormalization(axis=1, epsilon=0.8381553170725943,  name = 'Bat94893', )(Mul64537)
Res84369 = keras.layers.Reshape((2, 2, 1), name = 'Res84369', )(Bat94893)
Res50615 = keras.layers.Reshape((2, 2), name = 'Res50615', )(Res84369)
Zer76758 = keras.layers.ZeroPadding1D(padding=((4, 0)), name = 'Zer76758', )(Res50615)
Con98731 = keras.layers.Concatenate(axis=2, name = 'Con98731', )([Zer76758,in0Con98731])
Zer64453 = keras.layers.ZeroPadding1D(padding=((1, 1)), name = 'Zer64453', )(in0Zer64453)
Sub2534 = keras.layers.Subtract(name = 'Sub2534', )([Con98731,Zer64453])
Lea7975 = keras.layers.LeakyReLU(alpha=8.619641964878348, name = 'Lea7975', )(Sub2534)
Zer65946 = keras.layers.ZeroPadding1D(padding=((2, 0)), name = 'Zer65946', )(Lea7975)
Add58677 = keras.layers.Add(name = 'Add58677', )([Con92125,Zer65946])
model = tf.keras.models.Model(inputs=[in0Min51890,in1Min51890,in0Max44501,in0Fla13614,in0Con26665,in0Con92125,in0Mul64537,in1Mul64537,in0Con98731,in0Zer64453], outputs=Add58677)
w = model.get_layer('Bat94893').get_weights() 
w[0] = np.array([0.73, 0.3945])
w[1] = np.array([0.366, 0.4614])
w[2] = np.array([0.8053, 0.1351])
w[3] = np.array([0.5693, 0.6279])
model.get_layer('Bat94893').set_weights(w) 
in0Min51890 = tf.constant([[[[0.8097, 0.6068], [0.6637, 0.1801]], [[0.1973, 0.598], [0.2535, 0.8622]]]])
in1Min51890 = tf.constant([[[[0.3396, 0.3706], [0.5871, 0.0896]], [[0.4267, 0.092], [0.3964, 0.6576]]]])
in0Max44501 = tf.constant([[[[1.2778]]]])
in0Fla13614 = tf.constant([[1.0373]])
in0Con26665 = tf.constant([[0.302, 0.5049, 0.7302, 0.6106, 0.1499, 0.2073, 0.5253]])
in0Con92125 = tf.constant([[[0.2039, 0.6516], [0.3411, 0.0506], [0.117, 0.3539], [0.9685, 0.0925], [0.5145, 0.7395], [0.2808, 0.0956], [0.8816, 0.8554], [0.1694, 0.8742]]])
in0Mul64537 = tf.constant([[[[[0.1837]], [[0.9952]]], [[[0.6298]], [[0.8232]]]]])
in1Mul64537 = tf.constant([[[[[0.4291]], [[0.3433]]], [[[0.1867]], [[0.5925]]]]])
in0Con98731 = tf.constant([[[0.8654], [0.6215], [0.0867], [0.6299], [0.3114], [0.7578]]])
in0Zer64453 = tf.constant([[[1.566, 1.2569, 1.4827], [1.249, 1.1922, 1.1043], [1.42, 1.531, 1.3638], [1.6248, 1.5429, 1.0463]]])
print (np.array2string(model.predict([in0Min51890,in1Min51890,in0Max44501,in0Fla13614,in0Con26665,in0Con92125,in0Mul64537,in1Mul64537,in0Con98731,in0Zer64453],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Add58677.png')

LMin51890 = minimum_layer([[[[[0.8097, 0.6068], [0.6637, 0.1801]], [[0.1973, 0.598], [0.2535, 0.8622]]]], [[[[0.3396, 0.3706], [0.5871, 0.0896]], [[0.4267, 0.092], [0.3964, 0.6576]]]]], Min51890), 
LRes21623 = reshape_layer(Min51890, [2, 4], Res21623), 
LFla73727 = flatten_layer(Res21623, Fla73727), 
LMax44501 = max_pool2D_layer([[[[1.2778]]]], 1, 1, Max44501), 
LRes30507 = reshape_layer(Max44501, [1, 1], Res30507), 
LFla69840 = flatten_layer(Res30507, Fla69840), 
LFla13614 = flatten_layer([[1.0373]], Fla13614), 
LDot85972 = dot_layer(Fla69840,Fla13614, 1, 1, Dot85972), 
LReL5115 = relu_layer(Dot85972, 2.0591275552776067, 1.0876124158759646, 6.877701906841574, ReL5115), 
LCon26665 = concatenate_layer([ReL5115,[[0.302, 0.5049, 0.7302, 0.6106, 0.1499, 0.2073, 0.5253]]], 1, Con26665), 
LMax5946 = maximum_layer([Fla73727,Con26665], Max5946), 
LRes80774 = reshape_layer(Max5946, [8, 1], Res80774), 
LCon92125 = concatenate_layer([Res80774,[[[0.2039, 0.6516], [0.3411, 0.0506], [0.117, 0.3539], [0.9685, 0.0925], [0.5145, 0.7395], [0.2808, 0.0956], [0.8816, 0.8554], [0.1694, 0.8742]]]], 2, Con92125), 
LMul64537 = multiply_layer([[[[[[0.1837]], [[0.9952]]], [[[0.6298]], [[0.8232]]]]], [[[[[0.4291]], [[0.3433]]], [[[0.1867]], [[0.5925]]]]]], Mul64537), 
LBat94893 = batch_normalization_layer(Mul64537, 1, 0.8381553170725943, [0.73, 0.3945], [0.366, 0.4614], [0.8053, 0.1351], [0.5693, 0.6279], Bat94893), 
LRes84369 = reshape_layer(Bat94893, [2, 2, 1], Res84369), 
LRes50615 = reshape_layer(Res84369, [2, 2], Res50615), 
LZer76758 = zero_padding1D_layer(Res50615, 4, 0, Zer76758), 
LCon98731 = concatenate_layer([Zer76758,[[[0.8654], [0.6215], [0.0867], [0.6299], [0.3114], [0.7578]]]], 2, Con98731), 
LZer64453 = zero_padding1D_layer([[[1.566, 1.2569, 1.4827], [1.249, 1.1922, 1.1043], [1.42, 1.531, 1.3638], [1.6248, 1.5429, 1.0463]]], 1, 1, Zer64453), 
LSub2534 = subtract_layer(Con98731,Zer64453, Sub2534), 
LLea7975 = leaky_relu_layer(Sub2534, 8.619641964878348, Lea7975), 
LZer65946 = zero_padding1D_layer(Lea7975, 2, 0, Zer65946), 
LAdd58677 = add_layer([Con92125,Zer65946], Add58677), 
exec_layers([LMin51890,LRes21623,LFla73727,LMax44501,LRes30507,LFla69840,LFla13614,LDot85972,LReL5115,LCon26665,LMax5946,LRes80774,LCon92125,LMul64537,LBat94893,LRes84369,LRes50615,LZer76758,LCon98731,LZer64453,LSub2534,LLea7975,LZer65946,LAdd58677],["Min51890","Res21623","Fla73727","Max44501","Res30507","Fla69840","Fla13614","Dot85972","ReL5115","Con26665","Max5946","Res80774","Con92125","Mul64537","Bat94893","Res84369","Res50615","Zer76758","Con98731","Zer64453","Sub2534","Lea7975","Zer65946","Add58677"],Add58677,"Add58677")

Actual (Unparsed): [[[0.3396000, 0.2039000, 0.6516000], [0.3706000, 0.3411000, 0.0506000], [0.5871000, 0.1170000, 1.2193000], [-12.7681597, -9.8655279, -7.3307357], [-10.1553328, -9.7618370, -8.0318482], [-12.0899916, -12.9158724, -6.2303561], [-14.4500478, -11.7219954, -5.4791756], [1.1132929, 0.7456976, 1.6320000]]]

Expected (Unparsed): [[[0.3396,0.2039,0.6516],[0.3706,0.3411,0.0506],[0.5871,0.117,1.2193],[-12.768159316999492,-9.865527985655593,-7.330735660153231],[-10.155332814133057,-9.761837150527965,-8.031847663460207],[-12.089991590127251,-12.91587184822875,-6.230355238024218],[-14.450047639509329,-11.721995302267485,-5.479174879989097],[1.113292903771867,0.7456975560228972,1.6320000000000001]]]

Actual:   [[[0.3396, 0.2039, 0.6516], [0.3706, 0.3411, 0.0506], [0.5871, 0.117, 1.2193], [-12.7681, -9.8655, -7.3307], [-10.1553, -9.7618, -8.0318], [-12.0899, -12.9158, -6.2303], [-14.45, -11.7219, -5.4791], [1.1133, 0.7457, 1.632]]]

Expected: [[[0.3396, 0.2039, 0.6516], [0.3706, 0.3411, 0.0506], [0.5871, 0.117, 1.2193], [-12.7681, -9.8655, -7.3307], [-10.1553, -9.7618, -8.0318], [-12.0899, -12.9158, -6.2303], [-14.45, -11.7219, -5.4791], [1.1133, 0.7457, 1.6321]]]