import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Mul66327 = tf.keras.layers.Input(shape=([2, 2]))
in1Mul66327 = tf.keras.layers.Input(shape=([2, 2]))

Mul66327 = keras.layers.Multiply(name = 'Mul66327', )([in0Mul66327,in1Mul66327])
Res94488 = keras.layers.Reshape((2, 2, 1), name = 'Res94488', )(Mul66327)
Res54019 = keras.layers.Reshape((2, 2, 1, 1), name = 'Res54019', )(Res94488)
Con93409 = keras.layers.Conv3DTranspose(2, (2, 1, 1),strides=(1, 5, 1), padding='valid', name = 'Con93409', )(Res54019)
Res32740 = keras.layers.Reshape((3, 10, 2), name = 'Res32740', )(Con93409)
Con30519 = keras.layers.Conv2D(4, (3, 5),strides=(1, 1), padding='same', dilation_rate=(1, 1), name = 'Con30519', )(Res32740)
model = tf.keras.models.Model(inputs=[in0Mul66327,in1Mul66327], outputs=Con30519)
w = model.get_layer('Con93409').get_weights() 
w[0] = np.array([[[[[0.1901], [0.744]]]], [[[[0.1349], [0.0337]]]]])
w[1] = np.array([0, 0])
model.get_layer('Con93409').set_weights(w) 
w = model.get_layer('Con30519').get_weights() 
w[0] = np.array([[[[0.9213, 0.7012, 0.8858, 0.4743], [0.3151, 0.7857, 0.0425, 0.0756]], [[0.529, 0.2145, 0.7553, 0.2395], [0.4612, 0.8939, 0.6948, 0.4556]], [[0.6661, 0.5056, 0.606, 0.6622], [0.3625, 0.5915, 0.6096, 0.2426]], [[0.9806, 0.728, 0.9969, 0.3001], [0.0385, 0.7208, 0.6718, 0.0024]], [[0.6292, 0.0361, 0.5326, 0.3292], [0.8254, 0.7474, 0.2476, 0.3922]]], [[[0.8643, 0.12, 0.0778, 0.6004], [0.0616, 0.5829, 0.6256, 0.3408]], [[0.0222, 0.2457, 0.6467, 0.5142], [0.8639, 0.304, 0.3556, 0.2207]], [[0.8532, 0.6483, 0.972, 0.1248], [0.0598, 0.7434, 0.6117, 0.548]], [[0.3858, 0.3743, 0.007, 0.1316], [0.5935, 0.1719, 0.9587, 0.9947]], [[0.7662, 0.9227, 0.8647, 0.6709], [0.9715, 0.547, 0.1526, 0.749]]], [[[0.7637, 0.2818, 0.9478, 0.0662], [0.564, 0.0496, 0.8517, 0.5075]], [[0.8848, 0.2082, 0.274, 0.947], [0.829, 0.881, 0.3684, 0.6371]], [[0.2863, 0.8481, 0.2495, 0.3982], [0.7748, 0.5435, 0.8412, 0.2884]], [[0.9293, 0.0457, 0.3956, 0.0479], [0.2282, 0.0778, 0.4544, 0.4984]], [[0.6651, 0.939, 0.7816, 0.2559], [0.7241, 0.9781, 0.5852, 0.5666]]]])
w[1] = np.array([0, 0, 0, 0])
model.get_layer('Con30519').set_weights(w) 
in0Mul66327 = tf.constant([[[0.9209, 0.3293], [0.3827, 0.6034]]])
in1Mul66327 = tf.constant([[[0.2127, 0.2976], [0.5197, 0.9608]]])
print (np.array2string(model.predict([in0Mul66327,in1Mul66327],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Con30519.png')

LMul66327 = multiply_layer([[[[0.9209, 0.3293], [0.3827, 0.6034]]], [[[0.2127, 0.2976], [0.5197, 0.9608]]]], Mul66327), 
LRes94488 = reshape_layer(Mul66327, [2, 2, 1], Res94488), 
LRes54019 = reshape_layer(Res94488, [2, 2, 1, 1], Res54019), 
LCon93409 = conv3D_transpose_layer(Res54019, 2, 1, 1,[[[[[0.1901], [0.744]]]], [[[[0.1349], [0.0337]]]]],[0, 0], 1, 5, 1, false, Con93409), 
LRes32740 = reshape_layer(Con93409, [3, 10, 2], Res32740), 
LCon30519 = conv2D_layer(Res32740, 3, 5,[[[[0.9213, 0.7012, 0.8858, 0.4743], [0.3151, 0.7857, 0.0425, 0.0756]], [[0.529, 0.2145, 0.7553, 0.2395], [0.4612, 0.8939, 0.6948, 0.4556]], [[0.6661, 0.5056, 0.606, 0.6622], [0.3625, 0.5915, 0.6096, 0.2426]], [[0.9806, 0.728, 0.9969, 0.3001], [0.0385, 0.7208, 0.6718, 0.0024]], [[0.6292, 0.0361, 0.5326, 0.3292], [0.8254, 0.7474, 0.2476, 0.3922]]], [[[0.8643, 0.12, 0.0778, 0.6004], [0.0616, 0.5829, 0.6256, 0.3408]], [[0.0222, 0.2457, 0.6467, 0.5142], [0.8639, 0.304, 0.3556, 0.2207]], [[0.8532, 0.6483, 0.972, 0.1248], [0.0598, 0.7434, 0.6117, 0.548]], [[0.3858, 0.3743, 0.007, 0.1316], [0.5935, 0.1719, 0.9587, 0.9947]], [[0.7662, 0.9227, 0.8647, 0.6709], [0.9715, 0.547, 0.1526, 0.749]]], [[[0.7637, 0.2818, 0.9478, 0.0662], [0.564, 0.0496, 0.8517, 0.5075]], [[0.8848, 0.2082, 0.274, 0.947], [0.829, 0.881, 0.3684, 0.6371]], [[0.2863, 0.8481, 0.2495, 0.3982], [0.7748, 0.5435, 0.8412, 0.2884]], [[0.9293, 0.0457, 0.3956, 0.0479], [0.2282, 0.0778, 0.4544, 0.4984]], [[0.6651, 0.939, 0.7816, 0.2559], [0.7241, 0.9781, 0.5852, 0.5666]]]],[0, 0, 0, 0], 1, 1, true, 1, 1, Con30519), 
exec_layers([LMul66327,LRes94488,LRes54019,LCon93409,LRes32740,LCon30519],["Mul66327","Res94488","Res54019","Con93409","Res32740","Con30519"],Con30519,"Con30519")

Actual (Unparsed): [[[[0.1786385, 0.2709635, 0.2713913, 0.1546645], [0.3116991, 0.2030046, 0.1504475, 0.2106172], [0.1773944, 0.1151827, 0.2865971, 0.1547205], [0.4819198, 0.5980888, 0.3780563, 0.3449590], [0.2643475, 0.0589619, 0.3163576, 0.2975110], [0.3923476, 0.4071849, 0.4591183, 0.2167789], [0.5329246, 0.4353533, 0.2319143, 0.4194647], [0.3599902, 0.1010763, 0.5342278, 0.2647815], [0.0000000, 0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000, 0.0000000]], [[0.1545517, 0.2879767, 0.2807223, 0.1653519], [0.2511677, 0.2125199, 0.2357049, 0.1721345], [0.1695337, 0.2463135, 0.1720145, 0.1251001], [0.6548854, 0.4993473, 0.2735908, 0.4741624], [0.4037871, 0.1921248, 0.5249187, 0.4678234], [0.2076699, 0.5326199, 0.4775241, 0.3203855], [0.5070975, 0.2651228, 0.3277348, 0.2835820], [0.2443385, 0.3615178, 0.3918764, 0.2516715], [0.0000000, 0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000, 0.0000000]], [[0.1221108, 0.1462834, 0.1633324, 0.0870559], [0.1116547, 0.1605818, 0.1756476, 0.1010832], [0.1314860, 0.1736156, 0.0697470, 0.0605443], [0.5153127, 0.4121507, 0.2439620, 0.2781999], [0.1795369, 0.4357730, 0.4343126, 0.0678105], [0.3076669, 0.3847186, 0.4277206, 0.2076445], [0.2843624, 0.4401502, 0.4527350, 0.2721072], [0.3194678, 0.4488145, 0.1461135, 0.1450155], [0.0000000, 0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000, 0.0000000]]]]

Expected (Unparsed): [[[[0.17863853267409222,0.270963507010134,0.27139127264155827,0.154664462789968],[0.31169908891746645,0.2030045654374293,0.1504474799670325,0.2106171754517387],[0.1773944129754671,0.1151826937565644,0.28659711811084687,0.1547204555136869],[0.4819197685943857,0.5980888329331873,0.37805626875190723,0.3449590495753584],[0.2643475035655088,0.058961931408232,0.3163575828702848,0.29751096046386083],[0.39234756676300964,0.4071849136815408,0.4591182643609232,0.2167789548285856],[0.5329246321143808,0.4353533154435264,0.23191431758728,0.4194646718614592],[0.35999020541628324,0.1010762648486368,0.5342278584496769,0.264781520973248],[0.0,0.0,0.0,0.0],[0.0,0.0,0.0,0.0]],[[0.154551738000005,0.28797666477612166,0.2807222812370168,0.16535189615732881],[0.2511677530270329,0.2125199037517909,0.2357049237903129,0.17213447133812368],[0.169533707798468,0.2463135109598181,0.17201447880684473,0.1251001535364028],[0.6548854556210176,0.499347281287216,0.2735908167424848,0.4741623849626048],[0.4037870777944752,0.1921248230914784,0.5249187196396768,0.4678233774195313],[0.207669918064232,0.5326198786749712,0.4775240782762641,0.32038554901425603],[0.5070974722944096,0.26512281426161444,0.3277347719144304,0.2835820242067824],[0.24433854628494078,0.3615178162769088,0.39187639318603046,0.25167153114684643],[0.0,0.0,0.0,0.0],[0.0,0.0,0.0,0.0]],[[0.1221107986240347,0.14628344344087962,0.1633323712021827,0.0870559125341426],[0.11165471840018511,0.16058180320570462,0.17564765010178712,0.10108315662202491],[0.131485960083512,0.17361555532291062,0.0697470166408169,0.060544335976292205],[0.5153126757333648,0.4121507463200384,0.243961967553528,0.27819986765725924],[0.1795369478240848,0.4357730224261408,0.4343126185159232,0.0678105341124064],[0.30766687059393116,0.3847186001809264,0.4277206424290705,0.2076444640468448],[0.28436237329622244,0.44015025612852804,0.45273501958420803,0.272107191118928],[0.3194678244325376,0.4488145005497776,0.14611345982312002,0.1450155451342672],[0.0,0.0,0.0,0.0],[0.0,0.0,0.0,0.0]]]]

Actual:   [[[[0.1787, 0.271, 0.2714, 0.1547], [0.3117, 0.2031, 0.1505, 0.2107], [0.1774, 0.1152, 0.2866, 0.1548], [0.482, 0.5981, 0.3781, 0.345], [0.2644, 0.059, 0.3164, 0.2976], [0.3924, 0.4072, 0.4592, 0.2168], [0.533, 0.4354, 0.232, 0.4195], [0.36, 0.1011, 0.5343, 0.2648], [0, 0, 0, 0], [0, 0, 0, 0]], [[0.1546, 0.288, 0.2808, 0.1654], [0.2512, 0.2126, 0.2358, 0.1722], [0.1696, 0.2464, 0.1721, 0.1252], [0.6549, 0.4994, 0.2736, 0.4742], [0.4038, 0.1922, 0.525, 0.4679], [0.2077, 0.5327, 0.4776, 0.3204], [0.5071, 0.2652, 0.3278, 0.2836], [0.2444, 0.3616, 0.3919, 0.2517], [0, 0, 0, 0], [0, 0, 0, 0]], [[0.1222, 0.1463, 0.1634, 0.0871], [0.1117, 0.1606, 0.1757, 0.1011], [0.1315, 0.1737, 0.0698, 0.0606], [0.5154, 0.4122, 0.244, 0.2782], [0.1796, 0.4358, 0.4344, 0.0679], [0.3077, 0.3848, 0.4278, 0.2077], [0.2844, 0.4402, 0.4528, 0.2722], [0.3195, 0.4489, 0.1462, 0.1451], [0, 0, 0, 0], [0, 0, 0, 0]]]]

Expected: [[[[0.1787, 0.271, 0.2714, 0.1547], [0.3117, 0.2031, 0.1505, 0.2107], [0.1774, 0.1152, 0.2866, 0.1548], [0.482, 0.5981, 0.3781, 0.345], [0.2644, 0.059, 0.3164, 0.2976], [0.3924, 0.4072, 0.4592, 0.2168], [0.533, 0.4354, 0.232, 0.4195], [0.36, 0.1011, 0.5343, 0.2648], [0, 0, 0, 0], [0, 0, 0, 0]], [[0.1546, 0.288, 0.2808, 0.1654], [0.2512, 0.2126, 0.2358, 0.1722], [0.1696, 0.2464, 0.1721, 0.1252], [0.6549, 0.4994, 0.2736, 0.4742], [0.4038, 0.1922, 0.525, 0.4679], [0.2077, 0.5327, 0.4776, 0.3204], [0.5071, 0.2652, 0.3278, 0.2836], [0.2444, 0.3616, 0.3919, 0.2517], [0, 0, 0, 0], [0, 0, 0, 0]], [[0.1222, 0.1463, 0.1634, 0.0871], [0.1117, 0.1606, 0.1757, 0.1011], [0.1315, 0.1737, 0.0698, 0.0606], [0.5154, 0.4122, 0.244, 0.2782], [0.1796, 0.4358, 0.4344, 0.0679], [0.3077, 0.3848, 0.4278, 0.2077], [0.2844, 0.4402, 0.4528, 0.2722], [0.3195, 0.4489, 0.1462, 0.1451], [0, 0, 0, 0], [0, 0, 0, 0]]]]