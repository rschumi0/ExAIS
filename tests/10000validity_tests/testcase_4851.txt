import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Mul39894 = tf.keras.layers.Input(shape=([1, 1, 1]))
in1Mul39894 = tf.keras.layers.Input(shape=([1, 1, 1]))
in0Con88855 = tf.keras.layers.Input(shape=([3, 1, 2]))
in0Mas36281 = tf.keras.layers.Input(shape=([3]))

Mul39894 = keras.layers.Multiply(name = 'Mul39894', )([in0Mul39894,in1Mul39894])
Res50973 = keras.layers.Reshape((1, 1), name = 'Res50973', )(Mul39894)
Ave52052 = keras.layers.AveragePooling1D(pool_size=(1), name = 'Ave52052', )(Res50973)
Res13717 = keras.layers.Reshape((1, 1, 1), name = 'Res13717', )(Ave52052)
Zer92190 = keras.layers.ZeroPadding2D(padding=((2, 0), (0, 0)), name = 'Zer92190', )(Res13717)
Con88855 = keras.layers.Concatenate(axis=3, name = 'Con88855', )([Zer92190,in0Con88855])
Mas36281 = keras.layers.Masking(mask_value=2, name = 'Mas36281', )(in0Mas36281)
Res15934 = keras.layers.Reshape((3, 1), name = 'Res15934', )(Mas36281)
Res93337 = keras.layers.Reshape((3, 1, 1), name = 'Res93337', )(Res15934)
Loc27908 = keras.layers.LocallyConnected2D(3, (1, 1),strides=(1, 1), name = 'Loc27908', )(Res93337)
Mul45362 = keras.layers.Multiply(name = 'Mul45362', )([Con88855,Loc27908])
Den71932 = keras.layers.Dense(4,name = 'Den71932', )(Mul45362)
model = tf.keras.models.Model(inputs=[in0Mul39894,in1Mul39894,in0Con88855,in0Mas36281], outputs=Den71932)
w = model.get_layer('Loc27908').get_weights() 
w[0] = np.array([[[0.953, 0.2871, 0.5791]], [[0.1576, 0.8309, 0.8481]], [[0.0475, 0.3176, 0.4611]]])
w[1] = np.array([[[0, 0, 0]], [[0, 0, 0]], [[0, 0, 0]]])
model.get_layer('Loc27908').set_weights(w) 
w = model.get_layer('Den71932').get_weights() 
w[0] = np.array([[0.1424, 0.2539, 0.0698, 0.3513], [0.0892, 0.7979, 0.7462, 0.5091], [0.7491, 0.4714, 0.5746, 0.6406]])
w[1] = np.array([0.2521, 0.0015, 0.5604, 0.3554])
model.get_layer('Den71932').set_weights(w) 
in0Mul39894 = tf.constant([[[[0.069]]]])
in1Mul39894 = tf.constant([[[[0.9187]]]])
in0Con88855 = tf.constant([[[[0.9965, 0.8881]], [[0.2407, 0.009]], [[0.4054, 0.4049]]]])
in0Mas36281 = tf.constant([[1.8028, 1.0095, 1.3816]])
print (np.array2string(model.predict([in0Mul39894,in1Mul39894,in0Con88855,in0Mas36281],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Den71932.png')

LMul39894 = multiply_layer([[[[[0.069]]]], [[[[0.9187]]]]], Mul39894), 
LRes50973 = reshape_layer(Mul39894, [1, 1], Res50973), 
LAve52052 = average_pooling1D_layer(Res50973, 1, Ave52052), 
LRes13717 = reshape_layer(Ave52052, [1, 1, 1], Res13717), 
LZer92190 = zero_padding2D_layer(Res13717, 2, 0, 0, 0, Zer92190), 
LCon88855 = concatenate_layer([Zer92190,[[[[0.9965, 0.8881]], [[0.2407, 0.009]], [[0.4054, 0.4049]]]]], 3, Con88855), 
LMas36281 = masking_layer([[1.8028, 1.0095, 1.3816]], 2, Mas36281), 
LRes15934 = reshape_layer(Mas36281, [3, 1], Res15934), 
LRes93337 = reshape_layer(Res15934, [3, 1, 1], Res93337), 
LLoc27908 = locally_connected2D_layer(Res93337, 1, 1,[[[0.953, 0.2871, 0.5791]], [[0.1576, 0.8309, 0.8481]], [[0.0475, 0.3176, 0.4611]]],[[[0, 0, 0]], [[0, 0, 0]], [[0, 0, 0]]], 1, 1, Loc27908), 
LMul45362 = multiply_layer([Con88855,Loc27908], Mul45362), 
LDen71932 = dense_layer(Mul45362, [[0.1424, 0.2539, 0.0698, 0.3513], [0.0892, 0.7979, 0.7462, 0.5091], [0.7491, 0.4714, 0.5746, 0.6406]],[0.2521, 0.0015, 0.5604, 0.3554], Den71932), 
exec_layers([LMul39894,LRes50973,LAve52052,LRes13717,LZer92190,LCon88855,LMas36281,LRes15934,LRes93337,LLoc27908,LMul45362,LDen71932],["Mul39894","Res50973","Ave52052","Res13717","Zer92190","Con88855","Mas36281","Res15934","Res93337","Loc27908","Mul45362","Den71932"],Den71932,"Den71932")

Actual (Unparsed): [[[[0.9926558, 0.8501064, 1.4780257, 1.2119298]], [[0.2758814, 0.1662264, 0.7154835, 0.4631222]], [[0.4617858, 0.2660878, 0.8416449, 0.6126630]]]]

Expected (Unparsed): [[[[0.9926557182567146,0.8501063217920211,1.4780256321239489,1.2119297403083746]],[[0.275881391128867,0.1662264324883515,0.715483524756537,0.4631221592501435]],[[0.4617857561319259,0.2660877867708176,0.8416449216580875,0.6126630360545029]]]]

Actual:   [[[[0.9927, 0.8502, 1.4781, 1.212]], [[0.2759, 0.1663, 0.7155, 0.4632]], [[0.4618, 0.2661, 0.8417, 0.6127]]]]

Expected: [[[[0.9927, 0.8502, 1.4781, 1.212]], [[0.2759, 0.1663, 0.7155, 0.4632]], [[0.4618, 0.2661, 0.8417, 0.6127]]]]