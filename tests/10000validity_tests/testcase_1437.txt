import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Ave21204 = tf.keras.layers.Input(shape=([1, 2]))
in1Ave21204 = tf.keras.layers.Input(shape=([1, 2]))
in0Con51991 = tf.keras.layers.Input(shape=([1, 6]))
in0Ave35049 = tf.keras.layers.Input(shape=([1, 2, 1]))
in1Ave35049 = tf.keras.layers.Input(shape=([1, 2, 1]))
in0Max37665 = tf.keras.layers.Input(shape=([2, 2, 1, 1]))
in1Max37665 = tf.keras.layers.Input(shape=([2, 2, 1, 1]))
in0Con58756 = tf.keras.layers.Input(shape=([3, 2, 2]))
in0Sub38642 = tf.keras.layers.Input(shape=([3, 2, 3]))
in1Sub38642 = tf.keras.layers.Input(shape=([3, 2, 3]))
in0Con83627 = tf.keras.layers.Input(shape=([63]))

Ave21204 = keras.layers.Average(name = 'Ave21204', )([in0Ave21204,in1Ave21204])
Con51991 = keras.layers.Concatenate(axis=2, name = 'Con51991', )([Ave21204,in0Con51991])
Ave35049 = keras.layers.Average(name = 'Ave35049', )([in0Ave35049,in1Ave35049])
Sep96270 = keras.layers.SeparableConv2D(4, (1, 1),strides=(1, 1), padding='valid', name = 'Sep96270', )(Ave35049)
Res79162 = keras.layers.Reshape((1, 8), name = 'Res79162', )(Sep96270)
Dot98396 = keras.layers.Dot(axes=(1, 1), name = 'Dot98396', )([Con51991,Res79162])
Fla59026 = keras.layers.Flatten(name = 'Fla59026', )(Dot98396)
Max37665 = keras.layers.Maximum(name = 'Max37665', )([in0Max37665,in1Max37665])
Res25146 = keras.layers.Reshape((2, 2, 1), name = 'Res25146', )(Max37665)
Zer16643 = keras.layers.ZeroPadding2D(padding=((1, 0), (0, 0)), name = 'Zer16643', )(Res25146)
Con58756 = keras.layers.Concatenate(axis=3, name = 'Con58756', )([Zer16643,in0Con58756])
Sub38642 = keras.layers.Subtract(name = 'Sub38642', )([in0Sub38642,in1Sub38642])
Min22654 = keras.layers.Minimum(name = 'Min22654', )([Con58756,Sub38642])
Res33599 = keras.layers.Reshape((3, 2, 3, 1), name = 'Res33599', )(Min22654)
Glo75645 = keras.layers.GlobalAveragePooling3D(name = 'Glo75645', )(Res33599)
Con83627 = keras.layers.Concatenate(axis=1, name = 'Con83627', )([Glo75645,in0Con83627])
Max78932 = keras.layers.Maximum(name = 'Max78932', )([Fla59026,Con83627])
model = tf.keras.models.Model(inputs=[in0Ave21204,in1Ave21204,in0Con51991,in0Ave35049,in1Ave35049,in0Max37665,in1Max37665,in0Con58756,in0Sub38642,in1Sub38642,in0Con83627], outputs=Max78932)
w = model.get_layer('Sep96270').get_weights() 
w[0] = np.array([[[[0.1732]]]])
w[1] = np.array([[[[0.4788, 0.575, 0.1817, 0.3637]]]])
w[2] = np.array([0, 0, 0, 0])
model.get_layer('Sep96270').set_weights(w) 
in0Ave21204 = tf.constant([[[0.739, 0.4598]]])
in1Ave21204 = tf.constant([[[0.7188, 0.7612]]])
in0Con51991 = tf.constant([[[0.7868, 0.529, 0.5288, 0.2672, 0.2515, 0.4649]]])
in0Ave35049 = tf.constant([[[[0.8076], [0.6106]]]])
in1Ave35049 = tf.constant([[[[0.3106], [0.0099]]]])
in0Max37665 = tf.constant([[[[[0.1958]], [[0.3235]]], [[[0.056]], [[0.7649]]]]])
in1Max37665 = tf.constant([[[[[0.1138]], [[0.9598]]], [[[0.0489]], [[0.6078]]]]])
in0Con58756 = tf.constant([[[[0.1935, 0.9069], [0.7693, 0.1445]], [[0.0328, 0.2436], [0.441, 0.7897]], [[0.2604, 0.1082], [0.8888, 0.5629]]]])
in0Sub38642 = tf.constant([[[[0.6887, 0.9829, 0.9651], [0.9818, 0.6828, 0.8599]], [[0.1036, 0.8432, 0.7085], [0.815, 0.6952, 0.0714]], [[0.3007, 0.2256, 0.2437], [0.182, 0.8649, 0.3718]]]])
in1Sub38642 = tf.constant([[[[0.6534, 0.26, 0.0927], [0.3249, 0.2918, 0.0557]], [[0.9041, 0.9922, 0.9394], [0.8743, 0.3591, 0.7238]], [[0.7846, 0.2276, 0.2674], [0.4291, 0.2384, 0.2162]]]])
in0Con83627 = tf.constant([[0.1439, 0.9722, 0.5612, 0.1732, 0.936, 0.8779, 0.7696, 0.3976, 0.2295, 0.5701, 0.8994, 0.6218, 0.9975, 0.309, 0.6939, 0.8942, 0.7081, 0.3943, 0.7465, 0.3138, 0.9152, 0.7274, 0.1529, 0.4752, 0.1403, 0.3801, 0.4701, 0.6977, 0.0463, 0.5046, 0.4301, 0.8414, 0.8755, 0.24, 0.0974, 0.7276, 0.8722, 0.6237, 0.6719, 0.9209, 0.9456, 0.9008, 0.9374, 0.9065, 0.1394, 0.0368, 0.4369, 0.5026, 0.5709, 0.6893, 0.8143, 0.682, 0.3786, 0.3679, 0.4039, 0.8484, 0.8728, 0.0226, 0.073, 0.0104, 0.5242, 0.8408, 0.5261]])
print (np.array2string(model.predict([in0Ave21204,in1Ave21204,in0Con51991,in0Ave35049,in1Ave35049,in0Max37665,in1Max37665,in0Con58756,in0Sub38642,in1Sub38642,in0Con83627],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Max78932.png')

LAve21204 = average_layer([[[[0.739, 0.4598]]], [[[0.7188, 0.7612]]]], Ave21204), 
LCon51991 = concatenate_layer([Ave21204,[[[0.7868, 0.529, 0.5288, 0.2672, 0.2515, 0.4649]]]], 2, Con51991), 
LAve35049 = average_layer([[[[[0.8076], [0.6106]]]], [[[[0.3106], [0.0099]]]]], Ave35049), 
LSep96270 = separable_conv2D_layer(Ave35049, 1, 1,[[[[[0.1732]]]],[[[[0.4788, 0.575, 0.1817, 0.3637]]]]],[0, 0, 0, 0], 1, 1, false, Sep96270), 
LRes79162 = reshape_layer(Sep96270, [1, 8], Res79162), 
LDot98396 = dot_layer(Con51991,Res79162, 1, 1, Dot98396), 
LFla59026 = flatten_layer(Dot98396, Fla59026), 
LMax37665 = maximum_layer([[[[[[0.1958]], [[0.3235]]], [[[0.056]], [[0.7649]]]]], [[[[[0.1138]], [[0.9598]]], [[[0.0489]], [[0.6078]]]]]], Max37665), 
LRes25146 = reshape_layer(Max37665, [2, 2, 1], Res25146), 
LZer16643 = zero_padding2D_layer(Res25146, 1, 0, 0, 0, Zer16643), 
LCon58756 = concatenate_layer([Zer16643,[[[[0.1935, 0.9069], [0.7693, 0.1445]], [[0.0328, 0.2436], [0.441, 0.7897]], [[0.2604, 0.1082], [0.8888, 0.5629]]]]], 3, Con58756), 
LSub38642 = subtract_layer([[[[0.6887, 0.9829, 0.9651], [0.9818, 0.6828, 0.8599]], [[0.1036, 0.8432, 0.7085], [0.815, 0.6952, 0.0714]], [[0.3007, 0.2256, 0.2437], [0.182, 0.8649, 0.3718]]]], [[[[0.6534, 0.26, 0.0927], [0.3249, 0.2918, 0.0557]], [[0.9041, 0.9922, 0.9394], [0.8743, 0.3591, 0.7238]], [[0.7846, 0.2276, 0.2674], [0.4291, 0.2384, 0.2162]]]], Sub38642), 
LMin22654 = minimum_layer([Con58756,Sub38642], Min22654), 
LRes33599 = reshape_layer(Min22654, [3, 2, 3, 1], Res33599), 
LGlo75645 = global_average_pooling3D_layer(Res33599, Glo75645), 
LCon83627 = concatenate_layer([Glo75645,[[0.1439, 0.9722, 0.5612, 0.1732, 0.936, 0.8779, 0.7696, 0.3976, 0.2295, 0.5701, 0.8994, 0.6218, 0.9975, 0.309, 0.6939, 0.8942, 0.7081, 0.3943, 0.7465, 0.3138, 0.9152, 0.7274, 0.1529, 0.4752, 0.1403, 0.3801, 0.4701, 0.6977, 0.0463, 0.5046, 0.4301, 0.8414, 0.8755, 0.24, 0.0974, 0.7276, 0.8722, 0.6237, 0.6719, 0.9209, 0.9456, 0.9008, 0.9374, 0.9065, 0.1394, 0.0368, 0.4369, 0.5026, 0.5709, 0.6893, 0.8143, 0.682, 0.3786, 0.3679, 0.4039, 0.8484, 0.8728, 0.0226, 0.073, 0.0104, 0.5242, 0.8408, 0.5261]]], 1, Con83627), 
LMax78932 = maximum_layer([Fla59026,Con83627], Max78932), 
exec_layers([LAve21204,LCon51991,LAve35049,LSep96270,LRes79162,LDot98396,LFla59026,LMax37665,LRes25146,LZer16643,LCon58756,LSub38642,LMin22654,LRes33599,LGlo75645,LCon83627,LMax78932],["Ave21204","Con51991","Ave35049","Sep96270","Res79162","Dot98396","Fla59026","Max37665","Res25146","Zer16643","Con58756","Sub38642","Min22654","Res33599","Glo75645","Con83627","Max78932"],Max78932,"Max78932")

Actual (Unparsed): [[0.0337955, 0.1439000, 0.9722000, 0.5612000, 0.1732000, 0.9360000, 0.8779000, 0.7696000, 0.3976000, 0.2295000, 0.5701000, 0.8994000, 0.6218000, 0.9975000, 0.3090000, 0.6939000, 0.8942000, 0.7081000, 0.3943000, 0.7465000, 0.3138000, 0.9152000, 0.7274000, 0.1529000, 0.4752000, 0.1403000, 0.3801000, 0.4701000, 0.6977000, 0.0463000, 0.5046000, 0.4301000, 0.8414000, 0.8755000, 0.2400000, 0.0974000, 0.7276000, 0.8722000, 0.6237000, 0.6719000, 0.9209000, 0.9456000, 0.9008000, 0.9374000, 0.9065000, 0.1394000, 0.0368000, 0.4369000, 0.5026000, 0.5709000, 0.6893000, 0.8143000, 0.6820000, 0.3786000, 0.3679000, 0.4039000, 0.8484000, 0.8728000, 0.0226000, 0.0730000, 0.0119612, 0.5242000, 0.8408000, 0.5261000]]

Expected (Unparsed): [[0.033795546359198396,0.1439,0.9722,0.5612,0.1732,0.936,0.8779,0.7696,0.3976,0.2295,0.5701,0.8994,0.6218,0.9975,0.309,0.6939,0.8942,0.7081,0.3943,0.7465,0.3138,0.9152,0.7274,0.1529,0.4752,0.1403,0.3801,0.4701,0.6977,0.0463,0.5046,0.4301,0.8414,0.8755,0.24,0.0974,0.7276,0.8722,0.6237,0.6719,0.9209,0.9456,0.9008,0.9374,0.9065,0.1394,0.0368,0.4369,0.5026,0.5709,0.6893,0.8143,0.682,0.3786,0.3679,0.4039,0.8484,0.8728,0.0226,0.073,0.011961161816435998,0.5242,0.8408,0.5261]]

Actual:   [[0.0338, 0.1439, 0.9722, 0.5612, 0.1732, 0.936, 0.8779, 0.7696, 0.3976, 0.2295, 0.5701, 0.8994, 0.6218, 0.9975, 0.309, 0.6939, 0.8942, 0.7081, 0.3943, 0.7465, 0.3138, 0.9152, 0.7274, 0.1529, 0.4752, 0.1403, 0.3801, 0.4701, 0.6977, 0.0463, 0.5046, 0.4301, 0.8414, 0.8755, 0.24, 0.0974, 0.7276, 0.8722, 0.6237, 0.6719, 0.9209, 0.9456, 0.9008, 0.9374, 0.9065, 0.1394, 0.0368, 0.4369, 0.5026, 0.5709, 0.6893, 0.8143, 0.682, 0.3786, 0.3679, 0.4039, 0.8484, 0.8728, 0.0226, 0.073, 0.012, 0.5242, 0.8408, 0.5261]]

Expected: [[0.0338, 0.1439, 0.9722, 0.5612, 0.1732, 0.936, 0.8779, 0.7696, 0.3976, 0.2295, 0.5701, 0.8994, 0.6218, 0.9975, 0.309, 0.6939, 0.8942, 0.7081, 0.3943, 0.7465, 0.3138, 0.9152, 0.7274, 0.1529, 0.4752, 0.1403, 0.3801, 0.4701, 0.6977, 0.0463, 0.5046, 0.4301, 0.8414, 0.8755, 0.24, 0.0974, 0.7276, 0.8722, 0.6237, 0.6719, 0.9209, 0.9456, 0.9008, 0.9374, 0.9065, 0.1394, 0.0368, 0.4369, 0.5026, 0.5709, 0.6893, 0.8143, 0.682, 0.3786, 0.3679, 0.4039, 0.8484, 0.8728, 0.0226, 0.073, 0.012, 0.5242, 0.8408, 0.5261]]