import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Max21909 = tf.keras.layers.Input(shape=([2, 2]))
in1Max21909 = tf.keras.layers.Input(shape=([2, 2]))
in0Con41099 = tf.keras.layers.Input(shape=([2, 1]))
in0Glo71526 = tf.keras.layers.Input(shape=([2, 1]))

Max21909 = keras.layers.Maximum(name = 'Max21909', )([in0Max21909,in1Max21909])
ELU91765 = keras.layers.ELU(alpha=6.90644719228435, name = 'ELU91765', )(Max21909)
Max91385 = keras.layers.MaxPool1D(pool_size=(1), strides=(1), padding='valid', name = 'Max91385', )(ELU91765)
Con41099 = keras.layers.Concatenate(axis=2, name = 'Con41099', )([Max91385,in0Con41099])
Glo71526 = keras.layers.GlobalMaxPool1D(name = 'Glo71526', )(in0Glo71526)
Res1166 = keras.layers.Reshape((1, 1), name = 'Res1166', )(Glo71526)
Per82445 = keras.layers.Permute((1,2), name = 'Per82445',)(Res1166)
Sof30301 = keras.layers.Softmax(axis=1, name = 'Sof30301', )(Per82445)
Den91784 = keras.layers.Dense(3,name = 'Den91784', )(Sof30301)
Zer3338 = keras.layers.ZeroPadding1D(padding=((1, 0)), name = 'Zer3338', )(Den91784)
Max98201 = keras.layers.Maximum(name = 'Max98201', )([Con41099,Zer3338])
model = tf.keras.models.Model(inputs=[in0Max21909,in1Max21909,in0Con41099,in0Glo71526], outputs=Max98201)
w = model.get_layer('Den91784').get_weights() 
w[0] = np.array([[0.045, 0.4611, 0.2131]])
w[1] = np.array([0.4217, 0.1908, 0.4058])
model.get_layer('Den91784').set_weights(w) 
in0Max21909 = tf.constant([[[0.1079, 0.9822], [0.2558, 0.7194]]])
in1Max21909 = tf.constant([[[0.9357, 0.8614], [0.4488, 0.8289]]])
in0Con41099 = tf.constant([[[0.8639], [0.5007]]])
in0Glo71526 = tf.constant([[[1.7901], [1.3121]]])
print (np.array2string(model.predict([in0Max21909,in1Max21909,in0Con41099,in0Glo71526],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Max98201.png')

LMax21909 = maximum_layer([[[[0.1079, 0.9822], [0.2558, 0.7194]]], [[[0.9357, 0.8614], [0.4488, 0.8289]]]], Max21909), 
LELU91765 = elu_layer(Max21909, 6.90644719228435, ELU91765), 
LMax91385 = max_pool1D_layer(ELU91765, 1, 1, false, Max91385), 
LCon41099 = concatenate_layer([Max91385,[[[0.8639], [0.5007]]]], 2, Con41099), 
LGlo71526 = global_max_pool1D_layer([[[1.7901], [1.3121]]], Glo71526), 
LRes1166 = reshape_layer(Glo71526, [1, 1], Res1166), 
LPer82445 = permute_layer(Res1166, 1,2, Per82445), 
LSof30301 = softmax_layer(Per82445, 1, Sof30301), 
LDen91784 = dense_layer(Sof30301, [[0.045, 0.4611, 0.2131]],[0.4217, 0.1908, 0.4058], Den91784), 
LZer3338 = zero_padding1D_layer(Den91784, 1, 0, Zer3338), 
LMax98201 = maximum_layer([Con41099,Zer3338], Max98201), 
exec_layers([LMax21909,LELU91765,LMax91385,LCon41099,LGlo71526,LRes1166,LPer82445,LSof30301,LDen91784,LZer3338,LMax98201],["Max21909","ELU91765","Max91385","Con41099","Glo71526","Res1166","Per82445","Sof30301","Den91784","Zer3338","Max98201"],Max98201,"Max98201")

Actual (Unparsed): [[[0.9357000, 0.9822000, 0.8639000], [0.4667000, 0.8289000, 0.6189000]]]

Expected (Unparsed): [[[0.9357,0.9822,0.8639],[0.4667,0.8289,0.6189]]]

Actual:   [[[0.9357, 0.9822, 0.8639], [0.4667, 0.8289, 0.6189]]]

Expected: [[[0.9357, 0.9822, 0.8639], [0.4667, 0.8289, 0.6189]]]