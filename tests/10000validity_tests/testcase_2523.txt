import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Min5296 = tf.keras.layers.Input(shape=([1, 1]))
in1Min5296 = tf.keras.layers.Input(shape=([1, 1]))
in0Con31880 = tf.keras.layers.Input(shape=([1, 3]))
in0Loc48011 = tf.keras.layers.Input(shape=([2, 1, 1]))
in0Cro73858 = tf.keras.layers.Input(shape=([2, 2]))
in0Con29680 = tf.keras.layers.Input(shape=([1, 2]))
in0Add39597 = tf.keras.layers.Input(shape=([2, 1]))
in1Add39597 = tf.keras.layers.Input(shape=([2, 1]))
in0Con51617 = tf.keras.layers.Input(shape=([3]))

Min5296 = keras.layers.Minimum(name = 'Min5296', )([in0Min5296,in1Min5296])
Con31880 = keras.layers.Concatenate(axis=2, name = 'Con31880', )([Min5296,in0Con31880])
Loc48011 = keras.layers.LocallyConnected2D(4, (2, 1),strides=(1, 7), name = 'Loc48011', )(in0Loc48011)
Res98686 = keras.layers.Reshape((1, 4), name = 'Res98686', )(Loc48011)
Cro73858 = keras.layers.Cropping1D(cropping=((0, 1)), name = 'Cro73858', )(in0Cro73858)
Mas14651 = keras.layers.Masking(mask_value=1, name = 'Mas14651', )(Cro73858)
Con29680 = keras.layers.Concatenate(axis=2, name = 'Con29680', )([Mas14651,in0Con29680])
Max37899 = keras.layers.Maximum(name = 'Max37899', )([Res98686,Con29680])
Max10799 = keras.layers.Maximum(name = 'Max10799', )([Con31880,Max37899])
Fla63818 = keras.layers.Flatten(name = 'Fla63818', )(Max10799)
Add39597 = keras.layers.Add(name = 'Add39597', )([in0Add39597,in1Add39597])
Glo89711 = keras.layers.GlobalMaxPool1D(name = 'Glo89711', )(Add39597)
Con51617 = keras.layers.Concatenate(axis=1, name = 'Con51617', )([Glo89711,in0Con51617])
Min62412 = keras.layers.Minimum(name = 'Min62412', )([Fla63818,Con51617])
model = tf.keras.models.Model(inputs=[in0Min5296,in1Min5296,in0Con31880,in0Loc48011,in0Cro73858,in0Con29680,in0Add39597,in1Add39597,in0Con51617], outputs=Min62412)
w = model.get_layer('Loc48011').get_weights() 
w[0] = np.array([[[0.5706, 0.1637, 0.3618, 0.9887], [0.581, 0.6009, 0.9905, 0.0081]]])
w[1] = np.array([[[0, 0, 0, 0]]])
model.get_layer('Loc48011').set_weights(w) 
in0Min5296 = tf.constant([[[0.1331]]])
in1Min5296 = tf.constant([[[0.3464]]])
in0Con31880 = tf.constant([[[0.074, 0.5014, 0.8364]]])
in0Loc48011 = tf.constant([[[[0.4764]], [[0.2352]]]])
in0Cro73858 = tf.constant([[[1.3847, 1.0139], [1.2431, 1.3864]]])
in0Con29680 = tf.constant([[[0.9356, 0.0296]]])
in0Add39597 = tf.constant([[[0.1326], [0.9961]]])
in1Add39597 = tf.constant([[[0.7686], [0.039]]])
in0Con51617 = tf.constant([[0.6981, 0.365, 0.5315]])
print (np.array2string(model.predict([in0Min5296,in1Min5296,in0Con31880,in0Loc48011,in0Cro73858,in0Con29680,in0Add39597,in1Add39597,in0Con51617],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Min62412.png')

LMin5296 = minimum_layer([[[[0.1331]]], [[[0.3464]]]], Min5296), 
LCon31880 = concatenate_layer([Min5296,[[[0.074, 0.5014, 0.8364]]]], 2, Con31880), 
LLoc48011 = locally_connected2D_layer([[[[0.4764]], [[0.2352]]]], 2, 1,[[[0.5706, 0.1637, 0.3618, 0.9887], [0.581, 0.6009, 0.9905, 0.0081]]],[[[0, 0, 0, 0]]], 1, 7, Loc48011), 
LRes98686 = reshape_layer(Loc48011, [1, 4], Res98686), 
LCro73858 = cropping1D_layer([[[1.3847, 1.0139], [1.2431, 1.3864]]], 0, 1, Cro73858), 
LMas14651 = masking_layer(Cro73858, 1, Mas14651), 
LCon29680 = concatenate_layer([Mas14651,[[[0.9356, 0.0296]]]], 2, Con29680), 
LMax37899 = maximum_layer([Res98686,Con29680], Max37899), 
LMax10799 = maximum_layer([Con31880,Max37899], Max10799), 
LFla63818 = flatten_layer(Max10799, Fla63818), 
LAdd39597 = add_layer([[[[0.1326], [0.9961]]], [[[0.7686], [0.039]]]], Add39597), 
LGlo89711 = global_max_pool1D_layer(Add39597, Glo89711), 
LCon51617 = concatenate_layer([Glo89711,[[0.6981, 0.365, 0.5315]]], 1, Con51617), 
LMin62412 = minimum_layer([Fla63818,Con51617], Min62412), 
exec_layers([LMin5296,LCon31880,LLoc48011,LRes98686,LCro73858,LMas14651,LCon29680,LMax37899,LMax10799,LFla63818,LAdd39597,LGlo89711,LCon51617,LMin62412],["Min5296","Con31880","Loc48011","Res98686","Cro73858","Mas14651","Con29680","Max37899","Max10799","Fla63818","Add39597","Glo89711","Con51617","Min62412"],Min62412,"Min62412")

Actual (Unparsed): [[1.0351000, 0.6981000, 0.3650000, 0.5315000]]

Expected (Unparsed): [[1.0351,0.6981,0.365,0.5315]]

Actual:   [[1.0351, 0.6981, 0.365, 0.5315]]

Expected: [[1.0351, 0.6981, 0.365, 0.5315]]