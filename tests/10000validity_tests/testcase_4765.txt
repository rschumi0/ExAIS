import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Ave8365 = tf.keras.layers.Input(shape=([2, 1]))
in1Ave8365 = tf.keras.layers.Input(shape=([2, 1]))

Ave8365 = keras.layers.Average(name = 'Ave8365', )([in0Ave8365,in1Ave8365])
Zer14046 = keras.layers.ZeroPadding1D(padding=((1, 1)), name = 'Zer14046', )(Ave8365)
Con70114 = keras.layers.Conv1D(3, (1),strides=(1), padding='valid', dilation_rate=(1), name = 'Con70114', )(Zer14046)
Res12278 = keras.layers.Reshape((4, 3, 1), name = 'Res12278', )(Con70114)
Up_68980 = keras.layers.UpSampling2D(size=(1, 2), name = 'Up_68980', )(Res12278)
model = tf.keras.models.Model(inputs=[in0Ave8365,in1Ave8365], outputs=Up_68980)
w = model.get_layer('Con70114').get_weights() 
w[0] = np.array([[[0.9037, 0.8358, 0.3452]]])
w[1] = np.array([0, 0, 0])
model.get_layer('Con70114').set_weights(w) 
in0Ave8365 = tf.constant([[[0.0969], [0.1872]]])
in1Ave8365 = tf.constant([[[0.6488], [0.8844]]])
print (np.array2string(model.predict([in0Ave8365,in1Ave8365],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Up_68980.png')

LAve8365 = average_layer([[[[0.0969], [0.1872]]], [[[0.6488], [0.8844]]]], Ave8365), 
LZer14046 = zero_padding1D_layer(Ave8365, 1, 1, Zer14046), 
LCon70114 = conv1D_layer(Zer14046, 1,[[[0.9037, 0.8358, 0.3452]]],[0, 0, 0], 1, false, 1, Con70114), 
LRes12278 = reshape_layer(Con70114, [4, 3, 1], Res12278), 
LUp_68980 = up_sampling2D_layer(Res12278, 1, 2, Up_68980), 
exec_layers([LAve8365,LZer14046,LCon70114,LRes12278,LUp_68980],["Ave8365","Zer14046","Con70114","Res12278","Up_68980"],Up_68980,"Up_68980")

Actual (Unparsed): [[[[0.0000000], [0.0000000], [0.0000000], [0.0000000], [0.0000000], [0.0000000]], [[0.3369446], [0.3369446], [0.3116280], [0.3116280], [0.1287078], [0.1287078]], [[0.4842025], [0.4842025], [0.4478216], [0.4478216], [0.1849582], [0.1849582]], [[0.0000000], [0.0000000], [0.0000000], [0.0000000], [0.0000000], [0.0000000]]]]

Expected (Unparsed): [[[[0.0],[0.0],[0.0],[0.0],[0.0],[0.0]],[[0.336944545],[0.336944545],[0.31162803],[0.31162803],[0.12870782],[0.12870782]],[[0.48420245999999995],[0.48420245999999995],[0.44782163999999997],[0.44782163999999997],[0.18495815999999998],[0.18495815999999998]],[[0.0],[0.0],[0.0],[0.0],[0.0],[0.0]]]]

Actual:   [[[[0], [0], [0], [0], [0], [0]], [[0.337], [0.337], [0.3117], [0.3117], [0.1288], [0.1288]], [[0.4843], [0.4843], [0.4479], [0.4479], [0.185], [0.185]], [[0], [0], [0], [0], [0], [0]]]]

Expected: [[[[0], [0], [0], [0], [0], [0]], [[0.337], [0.337], [0.3117], [0.3117], [0.1288], [0.1288]], [[0.4843], [0.4843], [0.4479], [0.4479], [0.185], [0.185]], [[0], [0], [0], [0], [0], [0]]]]