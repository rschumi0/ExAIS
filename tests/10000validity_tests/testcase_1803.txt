import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Con21050 = tf.keras.layers.Input(shape=([2, 1, 2, 2]))
in0Con23176 = tf.keras.layers.Input(shape=([1, 2]))
in0Max56394 = tf.keras.layers.Input(shape=([1, 1, 2, 2]))
in1Max56394 = tf.keras.layers.Input(shape=([1, 1, 2, 2]))
in0Con17903 = tf.keras.layers.Input(shape=([4, 4, 3]))
in0Loc22024 = tf.keras.layers.Input(shape=([1, 1, 1]))
in0Ave40690 = tf.keras.layers.Input(shape=([2, 1, 2, 1]))
in1Ave40690 = tf.keras.layers.Input(shape=([2, 1, 2, 1]))
in0Con90927 = tf.keras.layers.Input(shape=([4, 14]))

Con21050 = keras.layers.Conv3D(2, (2, 1, 2),strides=(1, 1, 1), padding='valid', dilation_rate=(1, 1, 1), name = 'Con21050', )(in0Con21050)
Res77275 = keras.layers.Reshape((1, 1, 2), name = 'Res77275', )(Con21050)
Res13944 = keras.layers.Reshape((1, 2), name = 'Res13944', )(Res77275)
Con23176 = keras.layers.Concatenate(axis=2, name = 'Con23176', )([Res13944,in0Con23176])
Max56394 = keras.layers.Maximum(name = 'Max56394', )([in0Max56394,in1Max56394])
Res9196 = keras.layers.Reshape((1, 1, 4), name = 'Res9196', )(Max56394)
Res20883 = keras.layers.Reshape((1, 4), name = 'Res20883', )(Res9196)
Dot44537 = keras.layers.Dot(axes=(1, 1), name = 'Dot44537', )([Con23176,Res20883])
Res49217 = keras.layers.Reshape((4, 4, 1), name = 'Res49217', )(Dot44537)
Con17903 = keras.layers.Concatenate(axis=3, name = 'Con17903', )([Res49217,in0Con17903])
Loc22024 = keras.layers.LocallyConnected2D(4, (1, 1),strides=(1, 1), name = 'Loc22024', )(in0Loc22024)
Zer55684 = keras.layers.ZeroPadding2D(padding=((3, 0), (3, 0)), name = 'Zer55684', )(Loc22024)
Max21890 = keras.layers.Maximum(name = 'Max21890', )([Con17903,Zer55684])
Res6547 = keras.layers.Reshape((4, 16), name = 'Res6547', )(Max21890)
Ave40690 = keras.layers.Average(name = 'Ave40690', )([in0Ave40690,in1Ave40690])
Lay97794 = keras.layers.LayerNormalization(axis=3, epsilon=2.3400603643250726, name = 'Lay97794', )(Ave40690)
Res75564 = keras.layers.Reshape((2, 1, 2), name = 'Res75564', )(Lay97794)
Res37500 = keras.layers.Reshape((2, 2), name = 'Res37500', )(Res75564)
Per81973 = keras.layers.Permute((1,2), name = 'Per81973',)(Res37500)
Zer78370 = keras.layers.ZeroPadding1D(padding=((2, 0)), name = 'Zer78370', )(Per81973)
Con90927 = keras.layers.Concatenate(axis=2, name = 'Con90927', )([Zer78370,in0Con90927])
Ave96464 = keras.layers.Average(name = 'Ave96464', )([Res6547,Con90927])
model = tf.keras.models.Model(inputs=[in0Con21050,in0Con23176,in0Max56394,in1Max56394,in0Con17903,in0Loc22024,in0Ave40690,in1Ave40690,in0Con90927], outputs=Ave96464)
w = model.get_layer('Con21050').get_weights() 
w[0] = np.array([[[[[0.1191, 0.5564], [0.3513, 0.9861]], [[0.7593, 0.8034], [0.6739, 0.8053]]]], [[[[0.5132, 0.0743], [0.6238, 0.427]], [[0.7348, 0.6812], [0.5287, 0.1088]]]]])
w[1] = np.array([0, 0])
model.get_layer('Con21050').set_weights(w) 
w = model.get_layer('Loc22024').get_weights() 
w[0] = np.array([[[0.6131, 0.0371, 0.7787, 0.6616]]])
w[1] = np.array([[[0, 0, 0, 0]]])
model.get_layer('Loc22024').set_weights(w) 
in0Con21050 = tf.constant([[[[[0.4699, 0.8582], [0.1393, 0.8151]]], [[[0.1844, 0.0475], [0.6549, 0.7256]]]]])
in0Con23176 = tf.constant([[[0.2729, 0.977]]])
in0Max56394 = tf.constant([[[[[0.1636, 0.7192], [0.8636, 0.7813]]]]])
in1Max56394 = tf.constant([[[[[0.8336, 0.4565], [0.6082, 0.5583]]]]])
in0Con17903 = tf.constant([[[[0.2161, 0.2454, 0.8912], [0.6201, 0.4385, 0.6058], [0.7123, 0.2374, 0.2915], [0.9483, 0.7653, 0.2602]], [[0.7527, 0.4647, 0.8496], [0.6583, 0.2851, 0.3697], [0.0189, 0.5677, 0.3572], [0.911, 0.8543, 0.5927]], [[0.481, 0.2954, 0.396], [0.4144, 0.4781, 0.4777], [0.3493, 0.3159, 0.4097], [0.0607, 0.3669, 0.1114]], [[0.5007, 0.2615, 0.0474], [0.7549, 0.4264, 0.015], [0.791, 0.5948, 0.5332], [0.8046, 0.8027, 0.842]]]])
in0Loc22024 = tf.constant([[[[0.5524]]]])
in0Ave40690 = tf.constant([[[[[0.8871], [0.82]]], [[[0.6513], [0.4204]]]]])
in1Ave40690 = tf.constant([[[[[0.9401], [0.6422]]], [[[0.8894], [0.6906]]]]])
in0Con90927 = tf.constant([[[0.6469, 0.8857, 0.9186, 0.3726, 0.4596, 0.6718, 0.1018, 0.2913, 0.1951, 0.7792, 0.0399, 0.7754, 0.9431, 0.8391], [0.0663, 0.319, 0.177, 0.8418, 0.2713, 0.7422, 0.8045, 0.7247, 0.5704, 0.2935, 0.6468, 0.5553, 0.9254, 0.2426], [0.6396, 0.5492, 0.6737, 0.2315, 0.8837, 0.5408, 0.9007, 0.7944, 0.0431, 0.6782, 0.7981, 0.8797, 0.4862, 0.0565], [0.9904, 0.9088, 0.9988, 0.7214, 0.8847, 0.897, 0.8566, 0.9736, 0.2001, 0.4229, 0.5392, 0.1925, 0.9674, 0.7837]]])
print (np.array2string(model.predict([in0Con21050,in0Con23176,in0Max56394,in1Max56394,in0Con17903,in0Loc22024,in0Ave40690,in1Ave40690,in0Con90927],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Ave96464.png')

LCon21050 = conv3D_layer([[[[[0.4699, 0.8582], [0.1393, 0.8151]]], [[[0.1844, 0.0475], [0.6549, 0.7256]]]]], 2, 1, 2,[[[[[0.1191, 0.5564], [0.3513, 0.9861]], [[0.7593, 0.8034], [0.6739, 0.8053]]]], [[[[0.5132, 0.0743], [0.6238, 0.427]], [[0.7348, 0.6812], [0.5287, 0.1088]]]]],[0, 0], 1, 1, 1, false, 1, 1, 1, Con21050), 
LRes77275 = reshape_layer(Con21050, [1, 1, 2], Res77275), 
LRes13944 = reshape_layer(Res77275, [1, 2], Res13944), 
LCon23176 = concatenate_layer([Res13944,[[[0.2729, 0.977]]]], 2, Con23176), 
LMax56394 = maximum_layer([[[[[[0.1636, 0.7192], [0.8636, 0.7813]]]]], [[[[[0.8336, 0.4565], [0.6082, 0.5583]]]]]], Max56394), 
LRes9196 = reshape_layer(Max56394, [1, 1, 4], Res9196), 
LRes20883 = reshape_layer(Res9196, [1, 4], Res20883), 
LDot44537 = dot_layer(Con23176,Res20883, 1, 1, Dot44537), 
LRes49217 = reshape_layer(Dot44537, [4, 4, 1], Res49217), 
LCon17903 = concatenate_layer([Res49217,[[[[0.2161, 0.2454, 0.8912], [0.6201, 0.4385, 0.6058], [0.7123, 0.2374, 0.2915], [0.9483, 0.7653, 0.2602]], [[0.7527, 0.4647, 0.8496], [0.6583, 0.2851, 0.3697], [0.0189, 0.5677, 0.3572], [0.911, 0.8543, 0.5927]], [[0.481, 0.2954, 0.396], [0.4144, 0.4781, 0.4777], [0.3493, 0.3159, 0.4097], [0.0607, 0.3669, 0.1114]], [[0.5007, 0.2615, 0.0474], [0.7549, 0.4264, 0.015], [0.791, 0.5948, 0.5332], [0.8046, 0.8027, 0.842]]]]], 3, Con17903), 
LLoc22024 = locally_connected2D_layer([[[[0.5524]]]], 1, 1,[[[0.6131, 0.0371, 0.7787, 0.6616]]],[[[0, 0, 0, 0]]], 1, 1, Loc22024), 
LZer55684 = zero_padding2D_layer(Loc22024, 3, 0, 3, 0, Zer55684), 
LMax21890 = maximum_layer([Con17903,Zer55684], Max21890), 
LRes6547 = reshape_layer(Max21890, [4, 16], Res6547), 
LAve40690 = average_layer([[[[[[0.8871], [0.82]]], [[[0.6513], [0.4204]]]]], [[[[[0.9401], [0.6422]]], [[[0.8894], [0.6906]]]]]], Ave40690), 
LLay97794 = layer_normalization_layer(Ave40690, 3, 2.3400603643250726, Lay97794), 
LRes75564 = reshape_layer(Lay97794, [2, 1, 2], Res75564), 
LRes37500 = reshape_layer(Res75564, [2, 2], Res37500), 
LPer81973 = permute_layer(Res37500, 1,2, Per81973), 
LZer78370 = zero_padding1D_layer(Per81973, 2, 0, Zer78370), 
LCon90927 = concatenate_layer([Zer78370,[[[0.6469, 0.8857, 0.9186, 0.3726, 0.4596, 0.6718, 0.1018, 0.2913, 0.1951, 0.7792, 0.0399, 0.7754, 0.9431, 0.8391], [0.0663, 0.319, 0.177, 0.8418, 0.2713, 0.7422, 0.8045, 0.7247, 0.5704, 0.2935, 0.6468, 0.5553, 0.9254, 0.2426], [0.6396, 0.5492, 0.6737, 0.2315, 0.8837, 0.5408, 0.9007, 0.7944, 0.0431, 0.6782, 0.7981, 0.8797, 0.4862, 0.0565], [0.9904, 0.9088, 0.9988, 0.7214, 0.8847, 0.897, 0.8566, 0.9736, 0.2001, 0.4229, 0.5392, 0.1925, 0.9674, 0.7837]]]], 2, Con90927), 
LAve96464 = average_layer([Res6547,Con90927], Ave96464), 
exec_layers([LCon21050,LRes77275,LRes13944,LCon23176,LMax56394,LRes9196,LRes20883,LDot44537,LRes49217,LCon17903,LLoc22024,LZer55684,LMax21890,LRes6547,LAve40690,LLay97794,LRes75564,LRes37500,LPer81973,LZer78370,LCon90927,LAve96464],["Con21050","Res77275","Res13944","Con23176","Max56394","Res9196","Res20883","Dot44537","Res49217","Con17903","Loc22024","Zer55684","Max21890","Res6547","Ave40690","Lay97794","Res75564","Res37500","Per81973","Zer78370","Con90927","Ave96464"],Ave96464,"Ave96464")

Actual (Unparsed): [[[0.8342781, 0.1080500, 0.4461500, 0.8884500, 1.1790851, 0.4963500, 0.4490500, 0.6388000, 0.9152025, 0.5018000, 0.2162500, 0.5353500, 0.8018856, 0.8618500, 0.8542000, 0.5496500], [1.0149428, 0.3763500, 0.2655000, 0.5843000, 0.9641561, 0.7500500, 0.2782000, 0.5559500, 1.4537191, 0.3718000, 0.5690500, 0.3253500, 1.2746654, 0.7331500, 0.8898500, 0.4176500], [0.1435174, 0.2107273, 0.4675000, 0.4726000, 0.4349848, 0.3229500, 0.6809000, 0.5092500, 0.5681882, 0.5718500, 0.1795000, 0.5439500, 0.5056584, 0.4702000, 0.4265500, 0.0839500], [0.4422398, 0.2153237, 0.6259500, 0.4781000, 0.8507292, 0.7381500, 0.6555500, 0.4560000, 0.8501686, 0.8823000, 0.3974500, 0.4780500, 0.6512651, 0.4985500, 0.8850500, 0.8128500]]]

Expected (Unparsed): [[[0.83427811276,0.10805,0.44615000000000005,0.88845,1.17908505122,0.49634999999999996,0.44905,0.6388,0.91520251701,0.5018,0.21625,0.53535,0.8018855680175,0.86185,0.8542000000000001,0.54965],[1.0149428486479999,0.37635,0.2655,0.5843,0.9641560661559999,0.75005,0.2782,0.5559499999999999,1.453719102798,0.3718,0.5690500000000001,0.32535000000000003,1.2746654122465,0.73315,0.88985,0.41765],[0.1435174082839134,0.2107273117160866,0.46749999999999997,0.4726,0.43498484,0.32295,0.6809000000000001,0.50925,0.5681882199999999,0.57185,0.1795,0.54395,0.505658385,0.4702,0.42655,0.08395],[0.4422398461370009,0.2153237538629991,0.62595,0.4781,0.8507292,0.7381500000000001,0.6555500000000001,0.456,0.8501685999999999,0.8823000000000001,0.39744999999999997,0.47805,0.65126505,0.49855,0.88505,0.81285]]]

Actual:   [[[0.8343, 0.1081, 0.4462, 0.8885, 1.1791, 0.4964, 0.4491, 0.6388, 0.9153, 0.5018, 0.2163, 0.5354, 0.8019, 0.8619, 0.8542, 0.5497], [1.015, 0.3764, 0.2655, 0.5843, 0.9642, 0.7501, 0.2782, 0.556, 1.4538, 0.3718, 0.5691, 0.3254, 1.2747, 0.7332, 0.8899, 0.4177], [0.1436, 0.2108, 0.4675, 0.4726, 0.435, 0.323, 0.6809, 0.5093, 0.5682, 0.5719, 0.1795, 0.544, 0.5057, 0.4702, 0.4266, 0.084], [0.4423, 0.2154, 0.626, 0.4781, 0.8508, 0.7382, 0.6556, 0.456, 0.8502, 0.8823, 0.3975, 0.4781, 0.6513, 0.4986, 0.8851, 0.8129]]]

Expected: [[[0.8343, 0.1081, 0.4462, 0.8885, 1.1791, 0.4964, 0.4491, 0.6388, 0.9153, 0.5018, 0.2163, 0.5354, 0.8019, 0.8619, 0.8543, 0.5497], [1.015, 0.3764, 0.2655, 0.5843, 0.9642, 0.7501, 0.2782, 0.556, 1.4538, 0.3718, 0.5691, 0.3254, 1.2747, 0.7332, 0.8899, 0.4177], [0.1436, 0.2108, 0.4675, 0.4726, 0.435, 0.323, 0.681, 0.5093, 0.5682, 0.5719, 0.1795, 0.544, 0.5057, 0.4702, 0.4266, 0.084], [0.4423, 0.2154, 0.626, 0.4781, 0.8508, 0.7382, 0.6556, 0.456, 0.8502, 0.8824, 0.3975, 0.4781, 0.6513, 0.4986, 0.8851, 0.8129]]]