import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Con44731 = tf.keras.layers.Input(shape=([2, 2, 1]))
in0Max223 = tf.keras.layers.Input(shape=([2, 1, 2, 1]))
in1Max223 = tf.keras.layers.Input(shape=([2, 1, 2, 1]))
in0Ave67673 = tf.keras.layers.Input(shape=([2, 2]))
in1Ave67673 = tf.keras.layers.Input(shape=([2, 2]))
in0Con15027 = tf.keras.layers.Input(shape=([2, 3, 3, 1]))
in0Fla83266 = tf.keras.layers.Input(shape=([2, 1]))
in0Con74253 = tf.keras.layers.Input(shape=([2, 3, 3, 1]))
in0Ave94678 = tf.keras.layers.Input(shape=([1, 2, 2, 2]))
in1Ave94678 = tf.keras.layers.Input(shape=([1, 2, 2, 2]))

Con44731 = keras.layers.Conv2D(2, (2, 1),strides=(1, 1), padding='valid', dilation_rate=(1, 1), name = 'Con44731', )(in0Con44731)
Zer73840 = keras.layers.ZeroPadding2D(padding=((1, 0), (1, 0)), name = 'Zer73840', )(Con44731)
Max223 = keras.layers.Maximum(name = 'Max223', )([in0Max223,in1Max223])
Res86563 = keras.layers.Reshape((2, 1, 2), name = 'Res86563', )(Max223)
Ave67673 = keras.layers.Average(name = 'Ave67673', )([in0Ave67673,in1Ave67673])
Per8079 = keras.layers.Permute((1,2), name = 'Per8079',)(Ave67673)
Res47532 = keras.layers.Reshape((2, 1, 2), name = 'Res47532', )(Per8079)
Max15141 = keras.layers.Maximum(name = 'Max15141', )([Res86563,Res47532])
Zer90321 = keras.layers.ZeroPadding2D(padding=((0, 0), (2, 0)), name = 'Zer90321', )(Max15141)
Add60095 = keras.layers.Add(name = 'Add60095', )([Zer73840,Zer90321])
Res93711 = keras.layers.Reshape((2, 3, 2, 1), name = 'Res93711', )(Add60095)
Zer20495 = keras.layers.ZeroPadding3D(padding=((0, 0), (0, 0), (1, 0)), name = 'Zer20495', )(Res93711)
Con15027 = keras.layers.Concatenate(axis=4, name = 'Con15027', )([Zer20495,in0Con15027])
Fla83266 = keras.layers.Flatten(name = 'Fla83266', )(in0Fla83266)
Res8056 = keras.layers.Reshape((2, 1), name = 'Res8056', )(Fla83266)
Res41396 = keras.layers.Reshape((2, 1, 1), name = 'Res41396', )(Res8056)
Res58764 = keras.layers.Reshape((2, 1, 1, 1), name = 'Res58764', )(Res41396)
Zer91684 = keras.layers.ZeroPadding3D(padding=((0, 0), (2, 0), (2, 0)), name = 'Zer91684', )(Res58764)
Con74253 = keras.layers.Concatenate(axis=4, name = 'Con74253', )([Zer91684,in0Con74253])
Ave94678 = keras.layers.Average(name = 'Ave94678', )([in0Ave94678,in1Ave94678])
Mas76485 = keras.layers.Masking(mask_value=2, name = 'Mas76485', )(Ave94678)
Zer3854 = keras.layers.ZeroPadding3D(padding=((1, 0), (1, 0), (1, 0)), name = 'Zer3854', )(Mas76485)
Min29934 = keras.layers.Minimum(name = 'Min29934', )([Con74253,Zer3854])
Min69548 = keras.layers.Minimum(name = 'Min69548', )([Con15027,Min29934])
model = tf.keras.models.Model(inputs=[in0Con44731,in0Max223,in1Max223,in0Ave67673,in1Ave67673,in0Con15027,in0Fla83266,in0Con74253,in0Ave94678,in1Ave94678], outputs=Min69548)
w = model.get_layer('Con44731').get_weights() 
w[0] = np.array([[[[0.2427, 0.8045]]], [[[0.1272, 0.5368]]]])
w[1] = np.array([0, 0])
model.get_layer('Con44731').set_weights(w) 
in0Con44731 = tf.constant([[[[0.104], [0.7691]], [[0.3169], [0.7187]]]])
in0Max223 = tf.constant([[[[[0.4583], [0.1311]]], [[[0.1474], [0.9432]]]]])
in1Max223 = tf.constant([[[[[0.0074], [0.9614]]], [[[0.0697], [0.7637]]]]])
in0Ave67673 = tf.constant([[[0.9331, 0.1316], [0.0789, 0.2314]]])
in1Ave67673 = tf.constant([[[0.0147, 0.4247], [0.0088, 0.0303]]])
in0Con15027 = tf.constant([[[[[0.9527], [0.3671], [0.1085]], [[0.5178], [0.578], [0.6911]], [[0.5733], [0.9937], [0.0749]]], [[[0.3764], [0.0457], [0.821]], [[0.2201], [0.9026], [0.4928]], [[0.3397], [0.5858], [0.8014]]]]])
in0Fla83266 = tf.constant([[[1.4387], [1.7339]]])
in0Con74253 = tf.constant([[[[[0.3723], [0.4675], [0.7355]], [[0.0296], [0.853], [0.8281]], [[0.9569], [0.8878], [0.0677]]], [[[0.5385], [0.4783], [0.6682]], [[0.8801], [0.8701], [0.4694]], [[0.3599], [0.2713], [0.7039]]]]])
in0Ave94678 = tf.constant([[[[[0.2424, 0.071], [0.5001, 0.4343]], [[0.8556, 0.0829], [0.72, 0.3699]]]]])
in1Ave94678 = tf.constant([[[[[0.0695, 0.8587], [0.1102, 0.6441]], [[0.2376, 0.3232], [0.0671, 0.9389]]]]])
print (np.array2string(model.predict([in0Con44731,in0Max223,in1Max223,in0Ave67673,in1Ave67673,in0Con15027,in0Fla83266,in0Con74253,in0Ave94678,in1Ave94678],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Min69548.png')

LCon44731 = conv2D_layer([[[[0.104], [0.7691]], [[0.3169], [0.7187]]]], 2, 1,[[[[0.2427, 0.8045]]], [[[0.1272, 0.5368]]]],[0, 0], 1, 1, false, 1, 1, Con44731), 
LZer73840 = zero_padding2D_layer(Con44731, 1, 0, 1, 0, Zer73840), 
LMax223 = maximum_layer([[[[[[0.4583], [0.1311]]], [[[0.1474], [0.9432]]]]], [[[[[0.0074], [0.9614]]], [[[0.0697], [0.7637]]]]]], Max223), 
LRes86563 = reshape_layer(Max223, [2, 1, 2], Res86563), 
LAve67673 = average_layer([[[[0.9331, 0.1316], [0.0789, 0.2314]]], [[[0.0147, 0.4247], [0.0088, 0.0303]]]], Ave67673), 
LPer8079 = permute_layer(Ave67673, 1,2, Per8079), 
LRes47532 = reshape_layer(Per8079, [2, 1, 2], Res47532), 
LMax15141 = maximum_layer([Res86563,Res47532], Max15141), 
LZer90321 = zero_padding2D_layer(Max15141, 0, 0, 2, 0, Zer90321), 
LAdd60095 = add_layer([Zer73840,Zer90321], Add60095), 
LRes93711 = reshape_layer(Add60095, [2, 3, 2, 1], Res93711), 
LZer20495 = zero_padding3D_layer(Res93711, 0, 0, 0, 0, 1, 0, Zer20495), 
LCon15027 = concatenate_layer([Zer20495,[[[[[0.9527], [0.3671], [0.1085]], [[0.5178], [0.578], [0.6911]], [[0.5733], [0.9937], [0.0749]]], [[[0.3764], [0.0457], [0.821]], [[0.2201], [0.9026], [0.4928]], [[0.3397], [0.5858], [0.8014]]]]]], 4, Con15027), 
LFla83266 = flatten_layer([[[1.4387], [1.7339]]], Fla83266), 
LRes8056 = reshape_layer(Fla83266, [2, 1], Res8056), 
LRes41396 = reshape_layer(Res8056, [2, 1, 1], Res41396), 
LRes58764 = reshape_layer(Res41396, [2, 1, 1, 1], Res58764), 
LZer91684 = zero_padding3D_layer(Res58764, 0, 0, 2, 0, 2, 0, Zer91684), 
LCon74253 = concatenate_layer([Zer91684,[[[[[0.3723], [0.4675], [0.7355]], [[0.0296], [0.853], [0.8281]], [[0.9569], [0.8878], [0.0677]]], [[[0.5385], [0.4783], [0.6682]], [[0.8801], [0.8701], [0.4694]], [[0.3599], [0.2713], [0.7039]]]]]], 4, Con74253), 
LAve94678 = average_layer([[[[[[0.2424, 0.071], [0.5001, 0.4343]], [[0.8556, 0.0829], [0.72, 0.3699]]]]], [[[[[0.0695, 0.8587], [0.1102, 0.6441]], [[0.2376, 0.3232], [0.0671, 0.9389]]]]]], Ave94678), 
LMas76485 = masking_layer(Ave94678, 2, Mas76485), 
LZer3854 = zero_padding3D_layer(Mas76485, 1, 0, 1, 0, 1, 0, Zer3854), 
LMin29934 = minimum_layer([Con74253,Zer3854], Min29934), 
LMin69548 = minimum_layer([Con15027,Min29934], Min69548), 
exec_layers([LCon44731,LZer73840,LMax223,LRes86563,LAve67673,LPer8079,LRes47532,LMax15141,LZer90321,LAdd60095,LRes93711,LZer20495,LCon15027,LFla83266,LRes8056,LRes41396,LRes58764,LZer91684,LCon74253,LAve94678,LMas76485,LZer3854,LMin29934,LMin69548],["Con44731","Zer73840","Max223","Res86563","Ave67673","Per8079","Res47532","Max15141","Zer90321","Add60095","Res93711","Zer20495","Con15027","Fla83266","Res8056","Res41396","Res58764","Zer91684","Con74253","Ave94678","Mas76485","Zer3854","Min29934","Min69548"],Min69548,"Min69548")

Actual (Unparsed): [[[[[0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000]], [[0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000]], [[0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000]]], [[[0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000]], [[0.0000000, 0.0000000], [0.0000000, 0.4648500], [0.0000000, 0.4694000]], [[0.0000000, 0.0000000], [0.0000000, 0.2030500], [0.3935500, 0.6544000]]]]]

Expected (Unparsed): [[[[[0,0],[0,0],[0,0]],[[0,0],[0,0],[0,0]],[[0,0],[0,0],[0,0]]],[[[0,0],[0,0],[0,0]],[[0,0],[0,0.46485],[0,0.4694]],[[0,0],[0,0.20305],[0.39355,0.6544]]]]]

Actual:   [[[[[0, 0], [0, 0], [0, 0]], [[0, 0], [0, 0], [0, 0]], [[0, 0], [0, 0], [0, 0]]], [[[0, 0], [0, 0], [0, 0]], [[0, 0], [0, 0.4649], [0, 0.4694]], [[0, 0], [0, 0.2031], [0.3936, 0.6544]]]]]

Expected: [[[[[0, 0], [0, 0], [0, 0]], [[0, 0], [0, 0], [0, 0]], [[0, 0], [0, 0], [0, 0]]], [[[0, 0], [0, 0], [0, 0]], [[0, 0], [0, 0.4649], [0, 0.4694]], [[0, 0], [0, 0.2031], [0.3936, 0.6544]]]]]