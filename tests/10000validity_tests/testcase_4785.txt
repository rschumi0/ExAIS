import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Min69714 = tf.keras.layers.Input(shape=([1, 2]))
in1Min69714 = tf.keras.layers.Input(shape=([1, 2]))
in0Con74217 = tf.keras.layers.Input(shape=([3, 3, 1, 1]))
in0Sub18281 = tf.keras.layers.Input(shape=([3]))
in1Sub18281 = tf.keras.layers.Input(shape=([3]))
in0Con34158 = tf.keras.layers.Input(shape=([3, 30]))
in0Zer31568 = tf.keras.layers.Input(shape=([1, 4, 1, 2]))
in0Dot19912 = tf.keras.layers.Input(shape=([3, 2]))
in1Dot19912 = tf.keras.layers.Input(shape=([3, 2]))
in0Con25485 = tf.keras.layers.Input(shape=([3, 34]))

Min69714 = keras.layers.Minimum(name = 'Min69714', )([in0Min69714,in1Min69714])
Lay47010 = keras.layers.LayerNormalization(axis=1, epsilon=2.7705544249327057, name = 'Lay47010', )(Min69714)
Res9352 = keras.layers.Reshape((1, 2, 1), name = 'Res9352', )(Lay47010)
Res74120 = keras.layers.Reshape((1, 2, 1, 1), name = 'Res74120', )(Res9352)
Zer70016 = keras.layers.ZeroPadding3D(padding=((2, 0), (1, 0), (0, 0)), name = 'Zer70016', )(Res74120)
Con74217 = keras.layers.Concatenate(axis=4, name = 'Con74217', )([Zer70016,in0Con74217])
Sub18281 = keras.layers.Subtract(name = 'Sub18281', )([in0Sub18281,in1Sub18281])
Res29885 = keras.layers.Reshape((3, 1), name = 'Res29885', )(Sub18281)
Res58304 = keras.layers.Reshape((3, 1, 1), name = 'Res58304', )(Res29885)
Res10186 = keras.layers.Reshape((3, 1, 1, 1), name = 'Res10186', )(Res58304)
Con88824 = keras.layers.Conv3DTranspose(2, (2, 1, 1),strides=(1, 1, 1), padding='same', name = 'Con88824', )(Res10186)
Zer71542 = keras.layers.ZeroPadding3D(padding=((0, 0), (2, 0), (0, 0)), name = 'Zer71542', )(Con88824)
Ave15178 = keras.layers.Average(name = 'Ave15178', )([Con74217,Zer71542])
Res72181 = keras.layers.Reshape((3, 3, 2), name = 'Res72181', )(Ave15178)
Res27191 = keras.layers.Reshape((3, 6), name = 'Res27191', )(Res72181)
Con34158 = keras.layers.Concatenate(axis=2, name = 'Con34158', )([Res27191,in0Con34158])
Zer31568 = keras.layers.ZeroPadding3D(padding=((1, 1), (1, 1), (1, 1)), name = 'Zer31568', )(in0Zer31568)
Res41635 = keras.layers.Reshape((3, 6, 6), name = 'Res41635', )(Zer31568)
Res44834 = keras.layers.Reshape((3, 36), name = 'Res44834', )(Res41635)
Dot19912 = keras.layers.Dot(axes=(1, 1), name = 'Dot19912', )([in0Dot19912,in1Dot19912])
Zer88805 = keras.layers.ZeroPadding1D(padding=((1, 0)), name = 'Zer88805', )(Dot19912)
Con25485 = keras.layers.Concatenate(axis=2, name = 'Con25485', )([Zer88805,in0Con25485])
Mul33619 = keras.layers.Multiply(name = 'Mul33619', )([Res44834,Con25485])
Min77850 = keras.layers.Minimum(name = 'Min77850', )([Con34158,Mul33619])
model = tf.keras.models.Model(inputs=[in0Min69714,in1Min69714,in0Con74217,in0Sub18281,in1Sub18281,in0Con34158,in0Zer31568,in0Dot19912,in1Dot19912,in0Con25485], outputs=Min77850)
w = model.get_layer('Con88824').get_weights() 
w[0] = np.array([[[[[0.6163], [0.5179]]]], [[[[0.4762], [0.2027]]]]])
w[1] = np.array([0, 0])
model.get_layer('Con88824').set_weights(w) 
in0Min69714 = tf.constant([[[0.5113, 0.7077]]])
in1Min69714 = tf.constant([[[0.5617, 0.2624]]])
in0Con74217 = tf.constant([[[[[0.1707]], [[0.4015]], [[0.7552]]], [[[0.6987]], [[0.635]], [[0.3965]]], [[[0.4615]], [[0.6065]], [[0.0347]]]]])
in0Sub18281 = tf.constant([[0.0526, 0.0895, 0.3606]])
in1Sub18281 = tf.constant([[0.687, 0.6918, 0.423]])
in0Con34158 = tf.constant([[[0.8093, 0.4039, 0.792, 0.2322, 0.9507, 0.5394, 0.3336, 0.6882, 0.75, 0.3886, 0.8156, 0.2592, 0.579, 0.3471, 0.9739, 0.4553, 0.1301, 0.4981, 0.8574, 0.3889, 0.4261, 0.5087, 0.8165, 0.2129, 0.4729, 0.2401, 0.0141, 0.1773, 0.4271, 0.2197], [0.7783, 0.5115, 0.0505, 0.0629, 0.1545, 0.0435, 0.6538, 0.6514, 0.085, 0.4546, 0.6925, 0.375, 0.7495, 0.3321, 0.6735, 0.0285, 0.7314, 0.733, 0.0535, 0.0163, 0.8397, 0.798, 0.3662, 0.363, 0.6146, 0.0686, 0.9037, 0.6551, 0.7706, 0.5485], [0.8931, 0.444, 0.0906, 0.2261, 0.2608, 0.832, 0.5737, 0.7271, 0.7574, 0.9293, 0.9619, 0.0029, 0.4271, 0.624, 0.1225, 0.4752, 0.1489, 0.6375, 0.1471, 0.8584, 0.2522, 0.1517, 0.4428, 0.956, 0.0139, 0.3887, 0.5384, 0.0918, 0.1826, 0.4017]]])
in0Zer31568 = tf.constant([[[[[1.732, 1.2979]], [[1.2099, 1.5628]], [[1.6803, 1.4849]], [[1.3845, 1.1227]]]]])
in0Dot19912 = tf.constant([[[0.9562, 0.078], [0.6842, 0.3253], [0.9367, 0.7876]]])
in1Dot19912 = tf.constant([[[0.6325, 0.8693], [0.5186, 0.603], [0.7004, 0.9848]]])
in0Con25485 = tf.constant([[[0.0403, 0.0747, 0.6037, 0.5978, 0.1608, 0.5004, 0.4279, 0.7159, 0.0993, 0.2191, 0.9436, 0.3846, 0.8577, 0.5973, 0.8533, 0.8318, 0.9118, 0.1251, 0.9569, 0.5517, 0.2019, 0.1665, 0.4403, 0.9886, 0.5936, 0.2012, 0.9003, 0.4384, 0.4258, 0.0937, 0.2778, 0.6579, 0.7031, 0.9673], [0.5842, 0.102, 0.2076, 0.33, 0.2838, 0.6726, 0.3063, 0.2037, 0.4662, 0.3548, 0.5138, 0.1405, 0.4896, 0.1409, 0.9322, 0.1756, 0.6032, 0.1979, 0.5352, 0.9624, 0.1696, 0.3225, 0.8898, 0.5629, 0.4987, 0.3433, 0.3157, 0.6257, 0.9767, 0.2823, 0.6709, 0.9729, 0.1296, 0.7658], [0.9221, 0.9402, 0.4943, 0.3885, 0.4101, 0.1655, 0.688, 0.4765, 0.2503, 0.9045, 0.8644, 0.9712, 0.6252, 0.3706, 0.8231, 0.9586, 0.8177, 0.0376, 0.4017, 0.7089, 0.7109, 0.3246, 0.4179, 0.9574, 0.1387, 0.5909, 0.355, 0.5573, 0.9074, 0.907, 0.187, 0.566, 0.5305, 0.6415]]])
print (np.array2string(model.predict([in0Min69714,in1Min69714,in0Con74217,in0Sub18281,in1Sub18281,in0Con34158,in0Zer31568,in0Dot19912,in1Dot19912,in0Con25485],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Min77850.png')

LMin69714 = minimum_layer([[[[0.5113, 0.7077]]], [[[0.5617, 0.2624]]]], Min69714), 
LLay47010 = layer_normalization_layer(Min69714, 1, 2.7705544249327057, Lay47010), 
LRes9352 = reshape_layer(Lay47010, [1, 2, 1], Res9352), 
LRes74120 = reshape_layer(Res9352, [1, 2, 1, 1], Res74120), 
LZer70016 = zero_padding3D_layer(Res74120, 2, 0, 1, 0, 0, 0, Zer70016), 
LCon74217 = concatenate_layer([Zer70016,[[[[[0.1707]], [[0.4015]], [[0.7552]]], [[[0.6987]], [[0.635]], [[0.3965]]], [[[0.4615]], [[0.6065]], [[0.0347]]]]]], 4, Con74217), 
LSub18281 = subtract_layer([[0.0526, 0.0895, 0.3606]], [[0.687, 0.6918, 0.423]], Sub18281), 
LRes29885 = reshape_layer(Sub18281, [3, 1], Res29885), 
LRes58304 = reshape_layer(Res29885, [3, 1, 1], Res58304), 
LRes10186 = reshape_layer(Res58304, [3, 1, 1, 1], Res10186), 
LCon88824 = conv3D_transpose_layer(Res10186, 2, 1, 1,[[[[[0.6163], [0.5179]]]], [[[[0.4762], [0.2027]]]]],[0, 0], 1, 1, 1, true, Con88824), 
LZer71542 = zero_padding3D_layer(Con88824, 0, 0, 2, 0, 0, 0, Zer71542), 
LAve15178 = average_layer([Con74217,Zer71542], Ave15178), 
LRes72181 = reshape_layer(Ave15178, [3, 3, 2], Res72181), 
LRes27191 = reshape_layer(Res72181, [3, 6], Res27191), 
LCon34158 = concatenate_layer([Res27191,[[[0.8093, 0.4039, 0.792, 0.2322, 0.9507, 0.5394, 0.3336, 0.6882, 0.75, 0.3886, 0.8156, 0.2592, 0.579, 0.3471, 0.9739, 0.4553, 0.1301, 0.4981, 0.8574, 0.3889, 0.4261, 0.5087, 0.8165, 0.2129, 0.4729, 0.2401, 0.0141, 0.1773, 0.4271, 0.2197], [0.7783, 0.5115, 0.0505, 0.0629, 0.1545, 0.0435, 0.6538, 0.6514, 0.085, 0.4546, 0.6925, 0.375, 0.7495, 0.3321, 0.6735, 0.0285, 0.7314, 0.733, 0.0535, 0.0163, 0.8397, 0.798, 0.3662, 0.363, 0.6146, 0.0686, 0.9037, 0.6551, 0.7706, 0.5485], [0.8931, 0.444, 0.0906, 0.2261, 0.2608, 0.832, 0.5737, 0.7271, 0.7574, 0.9293, 0.9619, 0.0029, 0.4271, 0.624, 0.1225, 0.4752, 0.1489, 0.6375, 0.1471, 0.8584, 0.2522, 0.1517, 0.4428, 0.956, 0.0139, 0.3887, 0.5384, 0.0918, 0.1826, 0.4017]]]], 2, Con34158), 
LZer31568 = zero_padding3D_layer([[[[[1.732, 1.2979]], [[1.2099, 1.5628]], [[1.6803, 1.4849]], [[1.3845, 1.1227]]]]], 1, 1, 1, 1, 1, 1, Zer31568), 
LRes41635 = reshape_layer(Zer31568, [3, 6, 6], Res41635), 
LRes44834 = reshape_layer(Res41635, [3, 36], Res44834), 
LDot19912 = dot_layer([[[0.9562, 0.078], [0.6842, 0.3253], [0.9367, 0.7876]]], [[[0.6325, 0.8693], [0.5186, 0.603], [0.7004, 0.9848]]], 1, 1, Dot19912), 
LZer88805 = zero_padding1D_layer(Dot19912, 1, 0, Zer88805), 
LCon25485 = concatenate_layer([Zer88805,[[[0.0403, 0.0747, 0.6037, 0.5978, 0.1608, 0.5004, 0.4279, 0.7159, 0.0993, 0.2191, 0.9436, 0.3846, 0.8577, 0.5973, 0.8533, 0.8318, 0.9118, 0.1251, 0.9569, 0.5517, 0.2019, 0.1665, 0.4403, 0.9886, 0.5936, 0.2012, 0.9003, 0.4384, 0.4258, 0.0937, 0.2778, 0.6579, 0.7031, 0.9673], [0.5842, 0.102, 0.2076, 0.33, 0.2838, 0.6726, 0.3063, 0.2037, 0.4662, 0.3548, 0.5138, 0.1405, 0.4896, 0.1409, 0.9322, 0.1756, 0.6032, 0.1979, 0.5352, 0.9624, 0.1696, 0.3225, 0.8898, 0.5629, 0.4987, 0.3433, 0.3157, 0.6257, 0.9767, 0.2823, 0.6709, 0.9729, 0.1296, 0.7658], [0.9221, 0.9402, 0.4943, 0.3885, 0.4101, 0.1655, 0.688, 0.4765, 0.2503, 0.9045, 0.8644, 0.9712, 0.6252, 0.3706, 0.8231, 0.9586, 0.8177, 0.0376, 0.4017, 0.7089, 0.7109, 0.3246, 0.4179, 0.9574, 0.1387, 0.5909, 0.355, 0.5573, 0.9074, 0.907, 0.187, 0.566, 0.5305, 0.6415]]]], 2, Con25485), 
LMul33619 = multiply_layer([Res44834,Con25485], Mul33619), 
LMin77850 = minimum_layer([Con34158,Mul33619], Min77850), 
exec_layers([LMin69714,LLay47010,LRes9352,LRes74120,LZer70016,LCon74217,LSub18281,LRes29885,LRes58304,LRes10186,LCon88824,LZer71542,LAve15178,LRes72181,LRes27191,LCon34158,LZer31568,LRes41635,LRes44834,LDot19912,LZer88805,LCon25485,LMul33619,LMin77850],["Min69714","Lay47010","Res9352","Res74120","Zer70016","Con74217","Sub18281","Res29885","Res58304","Res10186","Con88824","Zer71542","Ave15178","Res72181","Res27191","Con34158","Zer31568","Res41635","Res44834","Dot19912","Zer88805","Con25485","Mul33619","Min77850"],Min77850,"Min77850")

Actual (Unparsed): [[[0.0000000, 0.0000000, 0.0000000, 0.0000000, -0.1954904, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000, 0.0000000, -0.3366494, -0.0220120, 0.0000000, 0.0000000, 0.0505000, 0.0629000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0850000, 0.2201985, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.6735000, 0.0285000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.6904502, 0.3854229, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000, 0.0000000, -0.1626362, -0.0598516, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000]]]

Expected (Unparsed): [[[0,0,0,0.0,-0.19549036,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0],[0,0.0,0,0.0,-0.33664938499999997,-0.02201202499999999,0.0,0.0,0.0505,0.0629,0.0,0.0,0.0,0.0,0.085,0.22019851999999998,0.0,0.0,0.0,0.0,0.6735,0.0285,0.0,0.0,0.0,0.0,0.69045015,0.38542291,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0],[0,0.0,0.0,0.0,-0.16263618999999999,-0.059851584999999985,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0]]]

Actual:   [[[0, 0, 0, 0, -0.1954, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, -0.3366, -0.022, 0, 0, 0.0505, 0.0629, 0, 0, 0, 0, 0.085, 0.2202, 0, 0, 0, 0, 0.6735, 0.0285, 0, 0, 0, 0, 0.6905, 0.3855, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, -0.1626, -0.0598, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]]]

Expected: [[[0, 0, 0, 0, -0.1954, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, -0.3366, -0.022, 0, 0, 0.0505, 0.0629, 0, 0, 0, 0, 0.085, 0.2202, 0, 0, 0, 0, 0.6735, 0.0285, 0, 0, 0, 0, 0.6905, 0.3855, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, -0.1626, -0.0598, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]]]