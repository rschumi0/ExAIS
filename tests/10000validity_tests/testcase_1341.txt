import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Mul14143 = tf.keras.layers.Input(shape=([1, 2, 1]))
in1Mul14143 = tf.keras.layers.Input(shape=([1, 2, 1]))

Mul14143 = keras.layers.Multiply(name = 'Mul14143', )([in0Mul14143,in1Mul14143])
Thr30296 = keras.layers.ThresholdedReLU(theta=6.599796318962828, name = 'Thr30296', )(Mul14143)
Res45491 = keras.layers.Reshape((1, 2), name = 'Res45491', )(Thr30296)
Sim36520 = keras.layers.SimpleRNN(3,name = 'Sim36520', )(Res45491)
model = tf.keras.models.Model(inputs=[in0Mul14143,in1Mul14143], outputs=Sim36520)
w = model.get_layer('Sim36520').get_weights() 
w[0] = np.array([[2, 2, 1], [6, 7, 2]])
w[1] = np.array([[3, 8, 3], [2, 5, 6], [6, 7, 3]])
w[2] = np.array([4, 5, 7])
model.get_layer('Sim36520').set_weights(w) 
in0Mul14143 = tf.constant([[[[0.5195], [0.7076]]]])
in1Mul14143 = tf.constant([[[[0.3309], [0.4061]]]])
print (np.array2string(model.predict([in0Mul14143,in1Mul14143],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Sim36520.png')

LMul14143 = multiply_layer([[[[[0.5195], [0.7076]]]], [[[[0.3309], [0.4061]]]]], Mul14143), 
LThr30296 = thresholded_relu_layer(Mul14143, 6.599796318962828, Thr30296), 
LRes45491 = reshape_layer(Thr30296, [1, 2], Res45491), 
LSim36520 = simple_rnn_layer(Res45491,[[2, 2, 1], [6, 7, 2]],[[3, 8, 3], [2, 5, 6], [6, 7, 3]],[4, 5, 7], Sim36520), 
exec_layers([LMul14143,LThr30296,LRes45491,LSim36520],["Mul14143","Thr30296","Res45491","Sim36520"],Sim36520,"Sim36520")

Actual (Unparsed): [[0.9993293, 0.9999092, 0.9999983]]

Expected (Unparsed): [[0.999329299739067,0.9999092042625951,0.9999983369439447]]

Actual:   [[0.9994, 1, 1]]

Expected: [[0.9994, 1, 1]]