import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Min85911 = tf.keras.layers.Input(shape=([1, 2]))
in1Min85911 = tf.keras.layers.Input(shape=([1, 2]))
in0Max83209 = tf.keras.layers.Input(shape=([1, 1]))

Min85911 = keras.layers.Minimum(name = 'Min85911', )([in0Min85911,in1Min85911])
Den50296 = keras.layers.Dense(1,name = 'Den50296', )(Min85911)
Max83209 = keras.layers.MaxPool1D(pool_size=(1), name = 'Max83209', )(in0Max83209)
Dot69169 = keras.layers.Dot(axes=(1, 1), name = 'Dot69169', )([Den50296,Max83209])
model = tf.keras.models.Model(inputs=[in0Min85911,in1Min85911,in0Max83209], outputs=Dot69169)
w = model.get_layer('Den50296').get_weights() 
w[0] = np.array([[0.6549], [0.5472]])
w[1] = np.array([0.9501])
model.get_layer('Den50296').set_weights(w) 
in0Min85911 = tf.constant([[[0.4113, 0.0075]]])
in1Min85911 = tf.constant([[[0.2028, 0.7536]]])
in0Max83209 = tf.constant([[[1.581]]])
print (np.array2string(model.predict([in0Min85911,in1Min85911,in0Max83209],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Dot69169.png')

LMin85911 = minimum_layer([[[[0.4113, 0.0075]]], [[[0.2028, 0.7536]]]], Min85911), 
LDen50296 = dense_layer(Min85911, [[0.6549], [0.5472]],[0.9501], Den50296), 
LMax83209 = max_pool1D_layer([[[1.581]]], 1, Max83209), 
LDot69169 = dot_layer(Den50296,Max83209, 1, 1, Dot69169), 
exec_layers([LMin85911,LDen50296,LMax83209,LDot69169],["Min85911","Den50296","Max83209","Dot69169"],Dot69169,"Dot69169")

Actual (Unparsed): [[[1.7185750]]]

Expected (Unparsed): [[[1.7185750153200003]]]

Actual:   [[[1.7186]]]

Expected: [[[1.7186]]]