import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Sub10088 = tf.keras.layers.Input(shape=([3, 3, 2]))
in1Sub10088 = tf.keras.layers.Input(shape=([3, 3, 2]))

Sub10088 = keras.layers.Subtract(name = 'Sub10088', )([in0Sub10088,in1Sub10088])
Con47705 = keras.layers.Conv2DTranspose(3, (1, 1),strides=(1, 1), padding='same', name = 'Con47705', )(Sub10088)
model = tf.keras.models.Model(inputs=[in0Sub10088,in1Sub10088], outputs=Con47705)
w = model.get_layer('Con47705').get_weights() 
w[0] = np.array([[[[0.021, 0.5498], [0.8428, 0.4072], [0.9104, 0.53]]]])
w[1] = np.array([0, 0, 0])
model.get_layer('Con47705').set_weights(w) 
in0Sub10088 = tf.constant([[[[0.3651, 0.9756], [0.8423, 0.9288], [0.6738, 0.6301]], [[0.4431, 0.9756], [0.8464, 0.9761], [0.0895, 0.6808]], [[0.7336, 0.3061], [0.9818, 0.1978], [0.663, 0.3094]]]])
in1Sub10088 = tf.constant([[[[0.8183, 0.6268], [0.8191, 0.2202], [0.328, 0.2912]], [[0.3151, 0.9288], [0.3828, 0.1174], [0.1628, 0.5027]], [[0.8076, 0.2273], [0.0795, 0.8653], [0.1863, 0.7326]]]])
print (np.array2string(model.predict([in0Sub10088,in1Sub10088],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Con47705.png')

LSub10088 = subtract_layer([[[[0.3651, 0.9756], [0.8423, 0.9288], [0.6738, 0.6301]], [[0.4431, 0.9756], [0.8464, 0.9761], [0.0895, 0.6808]], [[0.7336, 0.3061], [0.9818, 0.1978], [0.663, 0.3094]]]], [[[[0.8183, 0.6268], [0.8191, 0.2202], [0.328, 0.2912]], [[0.3151, 0.9288], [0.3828, 0.1174], [0.1628, 0.5027]], [[0.8076, 0.2273], [0.0795, 0.8653], [0.1863, 0.7326]]]], Sub10088), 
LCon47705 = conv2D_transpose_layer(Sub10088, 1, 1,[[[[0.021, 0.5498], [0.8428, 0.4072], [0.9104, 0.53]]]],[0, 0, 0], 1, 1, true, Con47705), 
exec_layers([LSub10088,LCon47705],["Sub10088","Con47705"],Con47705,"Con47705")

Actual (Unparsed): [[[[0.1822530, -0.2399256, -0.2277293], [0.3900755, 0.3080949, 0.3966792], [0.1935890, 0.4294403, 0.4944333]], [[0.0284186, 0.1269354, 0.1413352], [0.4818489, 0.7403847, 0.8771725], [0.0963801, 0.0107451, 0.0276607]], [[0.0417702, -0.0302798, -0.0256056], [-0.3480432, 0.4886525, 0.4676789], [-0.2226646, 0.2294357, 0.2096917]]]]

Expected (Unparsed): [[[[0.18225303999999998,-0.23992560000000002,-0.22772928000000006],[0.3900754799999999,0.30809487999999996,0.39667927999999997],[0.19358901999999995,0.42944032,0.49443331999999995]],[[0.028418640000000033,0.12693536000000002,0.14133520000000005],[0.48184886,0.74038472,0.87717244],[0.09638007999999995,0.01074507999999997,0.027660679999999965]],[[0.041770239999999986,-0.030279839999999968,-0.025605599999999965],[-0.3480432,0.48865243999999997,0.46767891999999994],[-0.22266466,0.22943571999999998,0.20969167999999996]]]]

Actual:   [[[[0.1823, -0.2399, -0.2277], [0.3901, 0.3081, 0.3967], [0.1936, 0.4295, 0.4945]], [[0.0285, 0.127, 0.1414], [0.4819, 0.7404, 0.8772], [0.0964, 0.0108, 0.0277]], [[0.0418, -0.0302, -0.0256], [-0.348, 0.4887, 0.4677], [-0.2226, 0.2295, 0.2097]]]]

Expected: [[[[0.1823, -0.2399, -0.2277], [0.3901, 0.3081, 0.3967], [0.1936, 0.4295, 0.4945]], [[0.0285, 0.127, 0.1414], [0.4819, 0.7404, 0.8772], [0.0964, 0.0108, 0.0277]], [[0.0418, -0.0302, -0.0256], [-0.348, 0.4887, 0.4677], [-0.2226, 0.2295, 0.2097]]]]