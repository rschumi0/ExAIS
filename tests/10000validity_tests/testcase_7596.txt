import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Dot82326 = tf.keras.layers.Input(shape=([2, 2]))
in1Dot82326 = tf.keras.layers.Input(shape=([2, 2]))
in0Con19002 = tf.keras.layers.Input(shape=([4, 4, 3, 1]))
in0Con10010 = tf.keras.layers.Input(shape=([2, 2]))
in0Con19687 = tf.keras.layers.Input(shape=([4, 2]))
in0Dot3839 = tf.keras.layers.Input(shape=([3, 2]))
in1Dot3839 = tf.keras.layers.Input(shape=([3, 2]))
in0Con48671 = tf.keras.layers.Input(shape=([4, 1]))
in0Lay65853 = tf.keras.layers.Input(shape=([4, 1]))
in0Con35806 = tf.keras.layers.Input(shape=([4, 4, 3, 1]))
in0ELU37818 = tf.keras.layers.Input(shape=([1, 1, 2, 2]))

Dot82326 = keras.layers.Dot(axes=(2, 1), name = 'Dot82326', )([in0Dot82326,in1Dot82326])
Res49890 = keras.layers.Reshape((2, 2, 1), name = 'Res49890', )(Dot82326)
Res96762 = keras.layers.Reshape((2, 2, 1, 1), name = 'Res96762', )(Res49890)
Zer20093 = keras.layers.ZeroPadding3D(padding=((1, 1), (1, 1), (1, 1)), name = 'Zer20093', )(Res96762)
Con19002 = keras.layers.Concatenate(axis=4, name = 'Con19002', )([Zer20093,in0Con19002])
Con10010 = keras.layers.Conv1D(2, (2),strides=(1), padding='same', dilation_rate=(1), name = 'Con10010', )(in0Con10010)
Fla32394 = keras.layers.Flatten(name = 'Fla32394', )(Con10010)
Res85445 = keras.layers.Reshape((4, 1), name = 'Res85445', )(Fla32394)
Con19687 = keras.layers.Concatenate(axis=2, name = 'Con19687', )([Res85445,in0Con19687])
Dot3839 = keras.layers.Dot(axes=(2, 2), name = 'Dot3839', )([in0Dot3839,in1Dot3839])
Zer28427 = keras.layers.ZeroPadding1D(padding=((1, 0)), name = 'Zer28427', )(Dot3839)
Min93865 = keras.layers.Minimum(name = 'Min93865', )([Con19687,Zer28427])
Con48671 = keras.layers.Concatenate(axis=2, name = 'Con48671', )([Min93865,in0Con48671])
Lay65853 = keras.layers.LayerNormalization(axis=2, epsilon=2.5502665272419565, name = 'Lay65853', )(in0Lay65853)
Per90040 = keras.layers.Permute((2,1), name = 'Per90040',)(Lay65853)
Zer25456 = keras.layers.ZeroPadding1D(padding=((3, 0)), name = 'Zer25456', )(Per90040)
Ave74470 = keras.layers.Average(name = 'Ave74470', )([Con48671,Zer25456])
Res14964 = keras.layers.Reshape((4, 4, 1), name = 'Res14964', )(Ave74470)
Res67061 = keras.layers.Reshape((4, 4, 1, 1), name = 'Res67061', )(Res14964)
Zer87200 = keras.layers.ZeroPadding3D(padding=((0, 0), (0, 0), (2, 0)), name = 'Zer87200', )(Res67061)
Con35806 = keras.layers.Concatenate(axis=4, name = 'Con35806', )([Zer87200,in0Con35806])
ELU37818 = keras.layers.ELU(alpha=-4.03758817753598, name = 'ELU37818', input_shape=(1, 1, 2, 2))(in0ELU37818)
Zer54998 = keras.layers.ZeroPadding3D(padding=((3, 0), (3, 0), (1, 0)), name = 'Zer54998', )(ELU37818)
Max2460 = keras.layers.Maximum(name = 'Max2460', )([Con35806,Zer54998])
Add82587 = keras.layers.Add(name = 'Add82587', )([Con19002,Max2460])
model = tf.keras.models.Model(inputs=[in0Dot82326,in1Dot82326,in0Con19002,in0Con10010,in0Con19687,in0Dot3839,in1Dot3839,in0Con48671,in0Lay65853,in0Con35806,in0ELU37818], outputs=Add82587)
w = model.get_layer('Con10010').get_weights() 
w[0] = np.array([[[0.8259, 0.6402], [0.2502, 0.276]], [[0.9635, 0.7072], [0.6104, 0.72]]])
w[1] = np.array([0, 0])
model.get_layer('Con10010').set_weights(w) 
in0Dot82326 = tf.constant([[[0.0322, 0.8039], [0.4737, 0.6716]]])
in1Dot82326 = tf.constant([[[0.3724, 0.0412], [0.6361, 0.2915]]])
in0Con19002 = tf.constant([[[[[0.5593], [0.2544], [0.122]], [[0.6557], [0.5201], [0.6632]], [[0.734], [0.7259], [0.5347]], [[0.2509], [0.5795], [0.505]]], [[[0.5812], [0.4753], [0.94]], [[0.4915], [0.9969], [0.3391]], [[0.5522], [0.738], [0.417]], [[0.8288], [0.9624], [0.2386]]], [[[0.1144], [0.3153], [0.2176]], [[0.8038], [0.1601], [0.0424]], [[0.1002], [0.2926], [0.842]], [[0.0702], [0.1451], [0.9514]]], [[[0.0775], [0.8172], [0.4898]], [[0.5276], [0.133], [0.6477]], [[0.207], [0.7705], [0.8268]], [[0.7922], [0.139], [0.9088]]]]])
in0Con10010 = tf.constant([[[0.8794, 0.5626], [0.3984, 0.716]]])
in0Con19687 = tf.constant([[[0.6731, 0.5463], [0.2227, 0.3899], [0.5278, 0.1297], [0.6352, 0.6428]]])
in0Dot3839 = tf.constant([[[0.6348, 0.8975], [0.8104, 0.4769], [0.2746, 0.528]]])
in1Dot3839 = tf.constant([[[0.6877, 0.3411], [0.3301, 0.3724], [0.0925, 0.4631]]])
in0Con48671 = tf.constant([[[0.5595], [0.817], [0.7868], [0.8459]]])
in0Lay65853 = tf.constant([[[1.4599], [1.5404], [1.5997], [1.5462]]])
in0Con35806 = tf.constant([[[[[0.0022], [0.5426], [0.4666]], [[0.9545], [0.4872], [0.6163]], [[0.6038], [0.4575], [0.2866]], [[0.2503], [0.3918], [0.8331]]], [[[0.8072], [0.492], [0.8066]], [[0.126], [0.2561], [0.2817]], [[0.8896], [0.2989], [0.9609]], [[0.9071], [0.9453], [0.7508]]], [[[0.8209], [0.639], [0.2284]], [[0.3255], [0.3601], [0.376]], [[0.3371], [0.0769], [0.6321]], [[0.3549], [0.5077], [0.6116]]], [[[0.6582], [0.1088], [0.1471]], [[0.7824], [0.1765], [0.8943]], [[0.2297], [0.8751], [0.2212]], [[0.7494], [0.6397], [0.1984]]]]])
in0ELU37818 = tf.constant([[[[[0.4242, 0.25], [0.7982, 0.3688]]]]])
print (np.array2string(model.predict([in0Dot82326,in1Dot82326,in0Con19002,in0Con10010,in0Con19687,in0Dot3839,in1Dot3839,in0Con48671,in0Lay65853,in0Con35806,in0ELU37818],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Add82587.png')

LDot82326 = dot_layer([[[0.0322, 0.8039], [0.4737, 0.6716]]], [[[0.3724, 0.0412], [0.6361, 0.2915]]], 2, 1, Dot82326), 
LRes49890 = reshape_layer(Dot82326, [2, 2, 1], Res49890), 
LRes96762 = reshape_layer(Res49890, [2, 2, 1, 1], Res96762), 
LZer20093 = zero_padding3D_layer(Res96762, 1, 1, 1, 1, 1, 1, Zer20093), 
LCon19002 = concatenate_layer([Zer20093,[[[[[0.5593], [0.2544], [0.122]], [[0.6557], [0.5201], [0.6632]], [[0.734], [0.7259], [0.5347]], [[0.2509], [0.5795], [0.505]]], [[[0.5812], [0.4753], [0.94]], [[0.4915], [0.9969], [0.3391]], [[0.5522], [0.738], [0.417]], [[0.8288], [0.9624], [0.2386]]], [[[0.1144], [0.3153], [0.2176]], [[0.8038], [0.1601], [0.0424]], [[0.1002], [0.2926], [0.842]], [[0.0702], [0.1451], [0.9514]]], [[[0.0775], [0.8172], [0.4898]], [[0.5276], [0.133], [0.6477]], [[0.207], [0.7705], [0.8268]], [[0.7922], [0.139], [0.9088]]]]]], 4, Con19002), 
LCon10010 = conv1D_layer([[[0.8794, 0.5626], [0.3984, 0.716]]], 2,[[[0.8259, 0.6402], [0.2502, 0.276]], [[0.9635, 0.7072], [0.6104, 0.72]]],[0, 0], 1, true, 1, Con10010), 
LFla32394 = flatten_layer(Con10010, Fla32394), 
LRes85445 = reshape_layer(Fla32394, [4, 1], Res85445), 
LCon19687 = concatenate_layer([Res85445,[[[0.6731, 0.5463], [0.2227, 0.3899], [0.5278, 0.1297], [0.6352, 0.6428]]]], 2, Con19687), 
LDot3839 = dot_layer([[[0.6348, 0.8975], [0.8104, 0.4769], [0.2746, 0.528]]], [[[0.6877, 0.3411], [0.3301, 0.3724], [0.0925, 0.4631]]], 2, 2, Dot3839), 
LZer28427 = zero_padding1D_layer(Dot3839, 1, 0, Zer28427), 
LMin93865 = minimum_layer([Con19687,Zer28427], Min93865), 
LCon48671 = concatenate_layer([Min93865,[[[0.5595], [0.817], [0.7868], [0.8459]]]], 2, Con48671), 
LLay65853 = layer_normalization_layer([[[1.4599], [1.5404], [1.5997], [1.5462]]], 2, 2.5502665272419565, Lay65853), 
LPer90040 = permute_layer(Lay65853, 2,1, Per90040), 
LZer25456 = zero_padding1D_layer(Per90040, 3, 0, Zer25456), 
LAve74470 = average_layer([Con48671,Zer25456], Ave74470), 
LRes14964 = reshape_layer(Ave74470, [4, 4, 1], Res14964), 
LRes67061 = reshape_layer(Res14964, [4, 4, 1, 1], Res67061), 
LZer87200 = zero_padding3D_layer(Res67061, 0, 0, 0, 0, 2, 0, Zer87200), 
LCon35806 = concatenate_layer([Zer87200,[[[[[0.0022], [0.5426], [0.4666]], [[0.9545], [0.4872], [0.6163]], [[0.6038], [0.4575], [0.2866]], [[0.2503], [0.3918], [0.8331]]], [[[0.8072], [0.492], [0.8066]], [[0.126], [0.2561], [0.2817]], [[0.8896], [0.2989], [0.9609]], [[0.9071], [0.9453], [0.7508]]], [[[0.8209], [0.639], [0.2284]], [[0.3255], [0.3601], [0.376]], [[0.3371], [0.0769], [0.6321]], [[0.3549], [0.5077], [0.6116]]], [[[0.6582], [0.1088], [0.1471]], [[0.7824], [0.1765], [0.8943]], [[0.2297], [0.8751], [0.2212]], [[0.7494], [0.6397], [0.1984]]]]]], 4, Con35806), 
LELU37818 = elu_layer([[[[[0.4242, 0.25], [0.7982, 0.3688]]]]], -4.03758817753598, ELU37818), 
LZer54998 = zero_padding3D_layer(ELU37818, 3, 0, 3, 0, 1, 0, Zer54998), 
LMax2460 = maximum_layer([Con35806,Zer54998], Max2460), 
LAdd82587 = add_layer([Con19002,Max2460], Add82587), 
exec_layers([LDot82326,LRes49890,LRes96762,LZer20093,LCon19002,LCon10010,LFla32394,LRes85445,LCon19687,LDot3839,LZer28427,LMin93865,LCon48671,LLay65853,LPer90040,LZer25456,LAve74470,LRes14964,LRes67061,LZer87200,LCon35806,LELU37818,LZer54998,LMax2460,LAdd82587],["Dot82326","Res49890","Res96762","Zer20093","Con19002","Con10010","Fla32394","Res85445","Con19687","Dot3839","Zer28427","Min93865","Con48671","Lay65853","Per90040","Zer25456","Ave74470","Res14964","Res67061","Zer87200","Con35806","ELU37818","Zer54998","Max2460","Add82587"],Add82587,"Add82587")

Actual (Unparsed): [[[[[0.0000000, 0.5615000], [0.0000000, 0.7970000], [0.0000000, 0.5886000]], [[0.0000000, 1.6102000], [0.0000000, 1.0073000], [0.0000000, 1.2795000]], [[0.0000000, 1.3378000], [0.0000000, 1.1834000], [0.0000000, 0.8213000]], [[0.0000000, 0.5012000], [0.0000000, 0.9713000], [0.2797500, 1.3381000]]], [[[0.0000000, 1.3884000], [0.0000000, 0.9673000], [0.3713446, 1.7466000]], [[0.0000000, 0.6175000], [0.5233521, 1.2530000], [0.1113500, 0.6208000]], [[0.0000000, 1.4418000], [0.2356635, 1.0369000], [0.1949500, 1.3779000]], [[0.0000000, 1.7359000], [0.0000000, 1.9077000], [0.4085000, 0.9894000]]], [[[0.0000000, 0.9353000], [0.0000000, 0.9543000], [0.2540909, 0.4460000]], [[0.0000000, 1.1293000], [0.6036106, 0.5202000], [0.2225553, 0.4184000]], [[0.0000000, 0.4373000], [0.2152878, 0.3695000], [0.0648500, 1.4741000]], [[0.0000000, 0.4251000], [0.0000000, 0.6528000], [0.3934000, 1.5630000]]], [[[0.0000000, 0.7357000], [0.0000000, 0.9260000], [0.1844716, 0.6369000]], [[0.0000000, 1.3100000], [0.0000000, 0.3095000], [0.1436363, 1.5420000]], [[0.0000000, 0.4367000], [0.0000000, 1.6456000], [0.1349586, 1.0480000]], [[0.0000000, 1.5416000], [0.4242000, 0.7787000], [0.7982000, 1.2776000]]]]]

Expected (Unparsed): [[[[[0,0.5615],[0,0.7969999999999999],[0,0.5886]],[[0,1.6101999999999999],[0,1.0073],[0,1.2795]],[[0,1.3378],[0,1.1834],[0,0.8212999999999999]],[[0,0.5012000000000001],[0,0.9713],[0.27975,1.3380999999999998]]],[[[0,1.3884],[0,0.9673],[0.371344605,1.7466]],[[0,0.6174999999999999],[0.5233520700000001,1.2530000000000001],[0.11135,0.6208]],[[0,1.4418],[0.23566348999999995,1.0369],[0.19495,1.3779]],[[0,1.7359],[0,1.9077000000000002],[0.4085,0.9894000000000001]]],[[[0,0.9353],[0,0.9543],[0.25409087999999996,0.44599999999999995]],[[0,1.1293],[0.60361064,0.5202],[0.22255529999999998,0.4184]],[[0,0.4373],[0.21528783999999998,0.36950000000000005],[0.06485,1.4741]],[[0,0.4251],[0,0.6528],[0.3934,1.5630000000000002]]],[[[0,0.7357],[0,0.926],[0.18447161,0.6369]],[[0,1.31],[0,0.3095],[0.14363633,1.542]],[[0,0.4367],[0,1.6456],[0.13495865,1.048]],[[0,1.5415999999999999],[0.4242,0.7787000000000001],[0.7982,1.2776]]]]]

Actual:   [[[[[0, 0.5615], [0, 0.797], [0, 0.5886]], [[0, 1.6102], [0, 1.0073], [0, 1.2795]], [[0, 1.3378], [0, 1.1834], [0, 0.8213]], [[0, 0.5012], [0, 0.9713], [0.2798, 1.3381]]], [[[0, 1.3884], [0, 0.9673], [0.3714, 1.7466]], [[0, 0.6175], [0.5234, 1.253], [0.1114, 0.6208]], [[0, 1.4418], [0.2357, 1.0369], [0.195, 1.3779]], [[0, 1.7359], [0, 1.9077], [0.4085, 0.9894]]], [[[0, 0.9353], [0, 0.9543], [0.2541, 0.446]], [[0, 1.1293], [0.6037, 0.5202], [0.2226, 0.4184]], [[0, 0.4373], [0.2153, 0.3695], [0.0649, 1.4741]], [[0, 0.4251], [0, 0.6528], [0.3934, 1.563]]], [[[0, 0.7357], [0, 0.926], [0.1845, 0.6369]], [[0, 1.31], [0, 0.3095], [0.1437, 1.542]], [[0, 0.4367], [0, 1.6456], [0.135, 1.048]], [[0, 1.5416], [0.4242, 0.7787], [0.7982, 1.2776]]]]]

Expected: [[[[[0, 0.5615], [0, 0.797], [0, 0.5886]], [[0, 1.6102], [0, 1.0073], [0, 1.2795]], [[0, 1.3378], [0, 1.1834], [0, 0.8213]], [[0, 0.5013], [0, 0.9713], [0.2798, 1.3381]]], [[[0, 1.3884], [0, 0.9673], [0.3714, 1.7466]], [[0, 0.6175], [0.5234, 1.2531], [0.1114, 0.6208]], [[0, 1.4418], [0.2357, 1.0369], [0.195, 1.3779]], [[0, 1.7359], [0, 1.9078], [0.4085, 0.9895]]], [[[0, 0.9353], [0, 0.9543], [0.2541, 0.446]], [[0, 1.1293], [0.6037, 0.5202], [0.2226, 0.4184]], [[0, 0.4373], [0.2153, 0.3696], [0.0649, 1.4741]], [[0, 0.4251], [0, 0.6528], [0.3934, 1.5631]]], [[[0, 0.7357], [0, 0.926], [0.1845, 0.6369]], [[0, 1.31], [0, 0.3095], [0.1437, 1.542]], [[0, 0.4367], [0, 1.6456], [0.135, 1.048]], [[0, 1.5416], [0.4242, 0.7788], [0.7982, 1.2776]]]]]