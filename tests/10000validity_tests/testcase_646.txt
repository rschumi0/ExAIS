import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Ave88883 = tf.keras.layers.Input(shape=([2, 1, 1]))
in1Ave88883 = tf.keras.layers.Input(shape=([2, 1, 1]))

Ave88883 = keras.layers.Average(name = 'Ave88883', )([in0Ave88883,in1Ave88883])
Res62176 = keras.layers.Reshape((2, 1), name = 'Res62176', )(Ave88883)
GRU55599 = keras.layers.GRU(2,reset_after=True, recurrent_activation='sigmoid', name = 'GRU55599', )(Res62176)
model = tf.keras.models.Model(inputs=[in0Ave88883,in1Ave88883], outputs=GRU55599)
w = model.get_layer('GRU55599').get_weights() 
w[0] = np.array([[3, 7, 3, 7, 5, 2]])
w[1] = np.array([[8, 10, 2, 1, 9, 10], [9, 3, 1, 2, 6, 10]])
w[2] = np.array([[9, 7, 8, 5, 3, 3], [4, 1, 9, 1, 10, 2]])
model.get_layer('GRU55599').set_weights(w) 
in0Ave88883 = tf.constant([[[[0.5434]], [[0.1478]]]])
in1Ave88883 = tf.constant([[[[0.7317]], [[0.6306]]]])
print (np.array2string(model.predict([in0Ave88883,in1Ave88883],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='GRU55599.png')

LAve88883 = average_layer([[[[[0.5434]], [[0.1478]]]], [[[[0.7317]], [[0.6306]]]]], Ave88883), 
LRes62176 = reshape_layer(Ave88883, [2, 1], Res62176), 
LGRU55599 = gru_layer(Res62176,[[3, 7, 3, 7, 5, 2]],[[8, 10, 2, 1, 9, 10], [9, 3, 1, 2, 6, 10]],[[9, 7, 8, 5, 3, 3], [4, 1, 9, 1, 10, 2]], true, GRU55599), 
exec_layers([LAve88883,LRes62176,LGRU55599],["Ave88883","Res62176","GRU55599"],GRU55599,"GRU55599")

Actual (Unparsed): [[0.0000010, 0.0000259]]

Expected (Unparsed): [[1.0370146694281694e-6,2.5867839132097444e-5]]

Actual:   [[0, 0.0001]]

Expected: [[0, 0.0001]]