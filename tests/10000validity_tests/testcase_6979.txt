import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Glo33401 = tf.keras.layers.Input(shape=([2, 2]))

Glo33401 = keras.layers.GlobalAveragePooling1D(name = 'Glo33401', )(in0Glo33401)
Res57273 = keras.layers.Reshape((2, 1), name = 'Res57273', )(Glo33401)
Res91519 = keras.layers.Reshape((2, 1, 1), name = 'Res91519', )(Res57273)
Dep3924 = keras.layers.DepthwiseConv2D((2, 1),strides=(1, 1), padding='valid', name = 'Dep3924', )(Res91519)
Res70309 = keras.layers.Reshape((1, 1), name = 'Res70309', )(Dep3924)
Zer38359 = keras.layers.ZeroPadding1D(padding=((1, 1)), name = 'Zer38359', )(Res70309)
model = tf.keras.models.Model(inputs=[in0Glo33401], outputs=Zer38359)
w = model.get_layer('Dep3924').get_weights() 
w[0] = np.array([[[[0.8045]]], [[[0.2639]]]])
w[1] = np.array([0])
model.get_layer('Dep3924').set_weights(w) 
in0Glo33401 = tf.constant([[[1.8838, 1.3844], [1.834, 1.2626]]])
print (np.array2string(model.predict([in0Glo33401],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Zer38359.png')

LGlo33401 = global_average_pooling1D_layer([[[1.8838, 1.3844], [1.834, 1.2626]]], Glo33401), 
LRes57273 = reshape_layer(Glo33401, [2, 1], Res57273), 
LRes91519 = reshape_layer(Res57273, [2, 1, 1], Res91519), 
LDep3924 = depthwise_conv2D_layer(Res91519, 2, 1,[[[[0.8045]]], [[[0.2639]]]],[0], 1, 1, false, Dep3924), 
LRes70309 = reshape_layer(Dep3924, [1, 1], Res70309), 
LZer38359 = zero_padding1D_layer(Res70309, 1, 1, Zer38359), 
exec_layers([LGlo33401,LRes57273,LRes91519,LDep3924,LRes70309,LZer38359],["Glo33401","Res57273","Res91519","Dep3924","Res70309","Zer38359"],Zer38359,"Zer38359")

Actual (Unparsed): [[[0.0000000], [1.8447567], [0.0000000]]]

Expected (Unparsed): [[[0],[1.8447567],[0]]]

Actual:   [[[0], [1.8448], [0]]]

Expected: [[[0], [1.8448], [0]]]