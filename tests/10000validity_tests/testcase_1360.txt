import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Glo67614 = tf.keras.layers.Input(shape=([1, 2, 1]))
in0Con62275 = tf.keras.layers.Input(shape=([1, 2, 1]))
in0Max51319 = tf.keras.layers.Input(shape=([1, 2, 2]))
in0Glo94336 = tf.keras.layers.Input(shape=([2, 1, 2]))
in0Con45329 = tf.keras.layers.Input(shape=([2, 3]))

Glo67614 = keras.layers.GlobalAveragePooling2D(name = 'Glo67614', )(in0Glo67614)
Res67068 = keras.layers.Reshape((1, 1), name = 'Res67068', )(Glo67614)
Up_51592 = keras.layers.UpSampling1D(size=(1), name = 'Up_51592', )(Res67068)
Res7267 = keras.layers.Reshape((1, 1, 1), name = 'Res7267', )(Up_51592)
Zer72804 = keras.layers.ZeroPadding2D(padding=((0, 0), (1, 0)), name = 'Zer72804', )(Res7267)
Con62275 = keras.layers.Concatenate(axis=3, name = 'Con62275', )([Zer72804,in0Con62275])
Max51319 = keras.layers.MaxPool2D(pool_size=(1, 1), name = 'Max51319', )(in0Max51319)
Ave86537 = keras.layers.Average(name = 'Ave86537', )([Con62275,Max51319])
Res66922 = keras.layers.Reshape((1, 4), name = 'Res66922', )(Ave86537)
Zer77376 = keras.layers.ZeroPadding1D(padding=((1, 0)), name = 'Zer77376', )(Res66922)
Glo94336 = keras.layers.GlobalMaxPool2D(name = 'Glo94336', )(in0Glo94336)
Lea98767 = keras.layers.LeakyReLU(alpha=9.810753786121277, name = 'Lea98767', )(Glo94336)
Res82800 = keras.layers.Reshape((2, 1), name = 'Res82800', )(Lea98767)
Max7744 = keras.layers.MaxPool1D(pool_size=(2), strides=(1), padding='same', name = 'Max7744', )(Res82800)
Con45329 = keras.layers.Concatenate(axis=2, name = 'Con45329', )([Max7744,in0Con45329])
Ave20026 = keras.layers.Average(name = 'Ave20026', )([Zer77376,Con45329])
model = tf.keras.models.Model(inputs=[in0Glo67614,in0Con62275,in0Max51319,in0Glo94336,in0Con45329], outputs=Ave20026)
in0Glo67614 = tf.constant([[[[1.1418], [1.867]]]])
in0Con62275 = tf.constant([[[[0.5186], [0.4992]]]])
in0Max51319 = tf.constant([[[[1.818, 1.338], [1.0021, 1.6414]]]])
in0Glo94336 = tf.constant([[[[1.8669, 1.4169]], [[1.9399, 1.1937]]]])
in0Con45329 = tf.constant([[[0.104, 0.1609, 0.5569], [0.3128, 0.3259, 0.5771]]])
print (np.array2string(model.predict([in0Glo67614,in0Con62275,in0Max51319,in0Glo94336,in0Con45329],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Ave20026.png')

LGlo67614 = global_average_pooling2D_layer([[[[1.1418], [1.867]]]], Glo67614), 
LRes67068 = reshape_layer(Glo67614, [1, 1], Res67068), 
LUp_51592 = up_sampling1D_layer(Res67068, 1, Up_51592), 
LRes7267 = reshape_layer(Up_51592, [1, 1, 1], Res7267), 
LZer72804 = zero_padding2D_layer(Res7267, 0, 0, 1, 0, Zer72804), 
LCon62275 = concatenate_layer([Zer72804,[[[[0.5186], [0.4992]]]]], 3, Con62275), 
LMax51319 = max_pool2D_layer([[[[1.818, 1.338], [1.0021, 1.6414]]]], 1, 1, Max51319), 
LAve86537 = average_layer([Con62275,Max51319], Ave86537), 
LRes66922 = reshape_layer(Ave86537, [1, 4], Res66922), 
LZer77376 = zero_padding1D_layer(Res66922, 1, 0, Zer77376), 
LGlo94336 = global_max_pool2D_layer([[[[1.8669, 1.4169]], [[1.9399, 1.1937]]]], Glo94336), 
LLea98767 = leaky_relu_layer(Glo94336, 9.810753786121277, Lea98767), 
LRes82800 = reshape_layer(Lea98767, [2, 1], Res82800), 
LMax7744 = max_pool1D_layer(Res82800, 2, 1, true, Max7744), 
LCon45329 = concatenate_layer([Max7744,[[[0.104, 0.1609, 0.5569], [0.3128, 0.3259, 0.5771]]]], 2, Con45329), 
LAve20026 = average_layer([Zer77376,Con45329], Ave20026), 
exec_layers([LGlo67614,LRes67068,LUp_51592,LRes7267,LZer72804,LCon62275,LMax51319,LAve86537,LRes66922,LZer77376,LGlo94336,LLea98767,LRes82800,LMax7744,LCon45329,LAve20026],["Glo67614","Res67068","Up_51592","Res7267","Zer72804","Con62275","Max51319","Ave86537","Res66922","Zer77376","Glo94336","Lea98767","Res82800","Max7744","Con45329","Ave20026"],Ave20026,"Ave20026")

Actual (Unparsed): [[[0.9699500, 0.0520000, 0.0804500, 0.2784500], [1.1629500, 0.6205500, 0.7895750, 0.8237000]]]

Expected (Unparsed): [[[0.96995,0.052,0.08045,0.27845],[1.16295,0.62055,0.789575,0.8237]]]

Actual:   [[[0.97, 0.052, 0.0805, 0.2785], [1.163, 0.6206, 0.7896, 0.8237]]]

Expected: [[[0.97, 0.052, 0.0805, 0.2785], [1.163, 0.6206, 0.7896, 0.8237]]]