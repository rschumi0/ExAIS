import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Up_26561 = tf.keras.layers.Input(shape=([2, 2]))
in0Mul49213 = tf.keras.layers.Input(shape=([1, 1]))
in1Mul49213 = tf.keras.layers.Input(shape=([1, 1]))

Up_26561 = keras.layers.UpSampling1D(size=(2), name = 'Up_26561', )(in0Up_26561)
Glo61507 = keras.layers.GlobalMaxPool1D(name = 'Glo61507', )(Up_26561)
Res52089 = keras.layers.Reshape((2, 1), name = 'Res52089', )(Glo61507)
Mul49213 = keras.layers.Multiply(name = 'Mul49213', )([in0Mul49213,in1Mul49213])
Zer51772 = keras.layers.ZeroPadding1D(padding=((1, 0)), name = 'Zer51772', )(Mul49213)
Mul84277 = keras.layers.Multiply(name = 'Mul84277', )([Res52089,Zer51772])
Thr67556 = keras.layers.ThresholdedReLU(theta=2.7041993541554765, name = 'Thr67556', )(Mul84277)
model = tf.keras.models.Model(inputs=[in0Up_26561,in0Mul49213,in1Mul49213], outputs=Thr67556)
in0Up_26561 = tf.constant([[[1.8898, 1.5876], [1.9092, 1.21]]])
in0Mul49213 = tf.constant([[[0.7333]]])
in1Mul49213 = tf.constant([[[0.7619]]])
print (np.array2string(model.predict([in0Up_26561,in0Mul49213,in1Mul49213],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Thr67556.png')

LUp_26561 = up_sampling1D_layer([[[1.8898, 1.5876], [1.9092, 1.21]]], 2, Up_26561), 
LGlo61507 = global_max_pool1D_layer(Up_26561, Glo61507), 
LRes52089 = reshape_layer(Glo61507, [2, 1], Res52089), 
LMul49213 = multiply_layer([[[[0.7333]]], [[[0.7619]]]], Mul49213), 
LZer51772 = zero_padding1D_layer(Mul49213, 1, 0, Zer51772), 
LMul84277 = multiply_layer([Res52089,Zer51772], Mul84277), 
LThr67556 = thresholded_relu_layer(Mul84277, 2.7041993541554765, Thr67556), 
exec_layers([LUp_26561,LGlo61507,LRes52089,LMul49213,LZer51772,LMul84277,LThr67556],["Up_26561","Glo61507","Res52089","Mul49213","Zer51772","Mul84277","Thr67556"],Thr67556,"Thr67556")

Actual (Unparsed): [[[0.0000000], [0.0000000]]]

Expected (Unparsed): [[[0],[0]]]

Actual:   [[[0], [0]]]

Expected: [[[0], [0]]]