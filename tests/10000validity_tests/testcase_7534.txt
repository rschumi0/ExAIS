import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Sub93768 = tf.keras.layers.Input(shape=([2, 3]))
in1Sub93768 = tf.keras.layers.Input(shape=([2, 3]))
in0Con82721 = tf.keras.layers.Input(shape=([2, 4, 2]))
in0Con51763 = tf.keras.layers.Input(shape=([2, 1, 2]))
in0Dot96238 = tf.keras.layers.Input(shape=([2]))
in1Dot96238 = tf.keras.layers.Input(shape=([2]))
in0Con85468 = tf.keras.layers.Input(shape=([23]))

Sub93768 = keras.layers.Subtract(name = 'Sub93768', )([in0Sub93768,in1Sub93768])
Den27572 = keras.layers.Dense(4,name = 'Den27572', )(Sub93768)
Res44509 = keras.layers.Reshape((2, 4, 1), name = 'Res44509', )(Den27572)
Con82721 = keras.layers.Concatenate(axis=3, name = 'Con82721', )([Res44509,in0Con82721])
Con51763 = keras.layers.Conv2D(3, (1, 1),strides=(1, 1), padding='same', dilation_rate=(1, 1), name = 'Con51763', )(in0Con51763)
Zer66823 = keras.layers.ZeroPadding2D(padding=((0, 0), (3, 0)), name = 'Zer66823', )(Con51763)
Max11307 = keras.layers.Maximum(name = 'Max11307', )([Con82721,Zer66823])
Res34175 = keras.layers.Reshape((2, 12), name = 'Res34175', )(Max11307)
Fla74026 = keras.layers.Flatten(name = 'Fla74026', )(Res34175)
Dot96238 = keras.layers.Dot(axes=(1, 1), name = 'Dot96238', )([in0Dot96238,in1Dot96238])
Con85468 = keras.layers.Concatenate(axis=1, name = 'Con85468', )([Dot96238,in0Con85468])
Sub41508 = keras.layers.Subtract(name = 'Sub41508', )([Fla74026,Con85468])
model = tf.keras.models.Model(inputs=[in0Sub93768,in1Sub93768,in0Con82721,in0Con51763,in0Dot96238,in1Dot96238,in0Con85468], outputs=Sub41508)
w = model.get_layer('Den27572').get_weights() 
w[0] = np.array([[0.2342, 0.8685, 0.6441, 0.1504], [0.9827, 0.1791, 0.3954, 0.65], [0.8659, 0.927, 0.7851, 0.3458]])
w[1] = np.array([0.6466, 0.8806, 0.2704, 0.5513])
model.get_layer('Den27572').set_weights(w) 
w = model.get_layer('Con51763').get_weights() 
w[0] = np.array([[[[0.2814, 0.5295, 0.8735], [0.1184, 0.3803, 0.7969]]]])
w[1] = np.array([0, 0, 0])
model.get_layer('Con51763').set_weights(w) 
in0Sub93768 = tf.constant([[[0.8992, 0.1592, 0.5555], [0.179, 0.1935, 0.8251]]])
in1Sub93768 = tf.constant([[[0.4005, 0.5995, 0.3011], [0.306, 0.6668, 0.8568]]])
in0Con82721 = tf.constant([[[[0.2934, 0.2228], [0.663, 0.9455], [0.4852, 0.9106], [0.4636, 0.4561]], [[0.0361, 0.3218], [0.0222, 0.6007], [0.5812, 0.8885], [0.2675, 0.3867]]]])
in0Con51763 = tf.constant([[[[0.3005, 0.1081]], [[0.0655, 0.4572]]]])
in0Dot96238 = tf.constant([[0.5878, 0.3774]])
in1Dot96238 = tf.constant([[0.4133, 0.1248]])
in0Con85468 = tf.constant([[0.4961, 0.9664, 0.0061, 0.0295, 0.9746, 0.0441, 0.8138, 0.8818, 0.7942, 0.5874, 0.6077, 0.8825, 0.2083, 0.9779, 0.3622, 0.8619, 0.1439, 0.1575, 0.0312, 0.9729, 0.0528, 0.3253, 0.4849]])
print (np.array2string(model.predict([in0Sub93768,in1Sub93768,in0Con82721,in0Con51763,in0Dot96238,in1Dot96238,in0Con85468],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Sub41508.png')

LSub93768 = subtract_layer([[[0.8992, 0.1592, 0.5555], [0.179, 0.1935, 0.8251]]], [[[0.4005, 0.5995, 0.3011], [0.306, 0.6668, 0.8568]]], Sub93768), 
LDen27572 = dense_layer(Sub93768, [[0.2342, 0.8685, 0.6441, 0.1504], [0.9827, 0.1791, 0.3954, 0.65], [0.8659, 0.927, 0.7851, 0.3458]],[0.6466, 0.8806, 0.2704, 0.5513], Den27572), 
LRes44509 = reshape_layer(Den27572, [2, 4, 1], Res44509), 
LCon82721 = concatenate_layer([Res44509,[[[[0.2934, 0.2228], [0.663, 0.9455], [0.4852, 0.9106], [0.4636, 0.4561]], [[0.0361, 0.3218], [0.0222, 0.6007], [0.5812, 0.8885], [0.2675, 0.3867]]]]], 3, Con82721), 
LCon51763 = conv2D_layer([[[[0.3005, 0.1081]], [[0.0655, 0.4572]]]], 1, 1,[[[[0.2814, 0.5295, 0.8735], [0.1184, 0.3803, 0.7969]]]],[0, 0, 0], 1, 1, true, 1, 1, Con51763), 
LZer66823 = zero_padding2D_layer(Con51763, 0, 0, 3, 0, Zer66823), 
LMax11307 = maximum_layer([Con82721,Zer66823], Max11307), 
LRes34175 = reshape_layer(Max11307, [2, 12], Res34175), 
LFla74026 = flatten_layer(Res34175, Fla74026), 
LDot96238 = dot_layer([[0.5878, 0.3774]], [[0.4133, 0.1248]], 1, 1, Dot96238), 
LCon85468 = concatenate_layer([Dot96238,[[0.4961, 0.9664, 0.0061, 0.0295, 0.9746, 0.0441, 0.8138, 0.8818, 0.7942, 0.5874, 0.6077, 0.8825, 0.2083, 0.9779, 0.3622, 0.8619, 0.1439, 0.1575, 0.0312, 0.9729, 0.0528, 0.3253, 0.4849]]], 1, Con85468), 
LSub41508 = subtract_layer(Fla74026,Con85468, Sub41508), 
exec_layers([LSub93768,LDen27572,LRes44509,LCon82721,LCon51763,LZer66823,LMax11307,LRes34175,LFla74026,LDot96238,LCon85468,LSub41508],["Sub93768","Den27572","Res44509","Con82721","Con51763","Zer66823","Max11307","Res34175","Fla74026","Dot96238","Con85468","Sub41508"],Sub41508,"Sub41508")

Actual (Unparsed): [[0.2609604, -0.2027000, -0.7436000, 1.4645920, 0.6335000, -0.0291000, 0.5731475, -0.3286000, 0.0288000, -0.3661190, -0.1238000, -0.1516000, -0.7582044, -0.1722000, -0.6561000, 0.2939466, -0.8397000, 0.4568000, -0.1575000, 0.5500000, -0.0844000, 0.1607923, -0.0578000, -0.0633431]]

Expected (Unparsed): [[0.26096043,-0.2027,-0.7436,1.46459202,0.6335000000000001,-0.029100000000000015,0.57314749,-0.32859999999999995,0.028799999999999937,-0.36611899999999997,-0.12380000000000002,-0.1516,-0.75820434,-0.17220000000000002,-0.6561,0.29394656999999996,-0.8397,0.4568,-0.1575,0.55,-0.08440000000000003,0.16079234000000003,-0.05779999999999996,-0.06334306999999995]]

Actual:   [[0.261, -0.2027, -0.7436, 1.4646, 0.6335, -0.0291, 0.5732, -0.3286, 0.0288, -0.3661, -0.1238, -0.1516, -0.7582, -0.1722, -0.6561, 0.294, -0.8397, 0.4568, -0.1575, 0.55, -0.0844, 0.1608, -0.0578, -0.0633]]

Expected: [[0.261, -0.2027, -0.7436, 1.4646, 0.6336, -0.0291, 0.5732, -0.3285, 0.0288, -0.3661, -0.1238, -0.1516, -0.7582, -0.1722, -0.6561, 0.294, -0.8397, 0.4568, -0.1575, 0.55, -0.0844, 0.1608, -0.0577, -0.0633]]