import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Min43208 = tf.keras.layers.Input(shape=([1, 2]))
in1Min43208 = tf.keras.layers.Input(shape=([1, 2]))
in0Max37308 = tf.keras.layers.Input(shape=([1, 1]))
in1Max37308 = tf.keras.layers.Input(shape=([1, 1]))
in0Con448 = tf.keras.layers.Input(shape=([1, 1]))
in0Con61653 = tf.keras.layers.Input(shape=([2, 2, 3]))
in0Con92248 = tf.keras.layers.Input(shape=([2, 2, 2]))

Min43208 = keras.layers.Minimum(name = 'Min43208', )([in0Min43208,in1Min43208])
Max37308 = keras.layers.Maximum(name = 'Max37308', )([in0Max37308,in1Max37308])
Cro53898 = keras.layers.Cropping1D(cropping=((0, 0)), name = 'Cro53898', )(Max37308)
Con448 = keras.layers.Concatenate(axis=2, name = 'Con448', )([Cro53898,in0Con448])
Ave83028 = keras.layers.Average(name = 'Ave83028', )([Min43208,Con448])
Res79727 = keras.layers.Reshape((1, 2, 1), name = 'Res79727', )(Ave83028)
Zer47695 = keras.layers.ZeroPadding2D(padding=((1, 0), (0, 0)), name = 'Zer47695', )(Res79727)
Con61653 = keras.layers.Concatenate(axis=3, name = 'Con61653', )([Zer47695,in0Con61653])
Con92248 = keras.layers.Conv2D(4, (2, 2),strides=(1, 1), padding='same', dilation_rate=(1, 1), name = 'Con92248', )(in0Con92248)
Ave97415 = keras.layers.Average(name = 'Ave97415', )([Con61653,Con92248])
model = tf.keras.models.Model(inputs=[in0Min43208,in1Min43208,in0Max37308,in1Max37308,in0Con448,in0Con61653,in0Con92248], outputs=Ave97415)
w = model.get_layer('Con92248').get_weights() 
w[0] = np.array([[[[0.4703, 0.311, 0.2007, 0.1469], [0.9139, 0.7057, 0.9128, 0.9161]], [[0.5498, 0.6646, 0.1843, 0.7572], [0.8726, 0.2271, 0.9568, 0.5764]]], [[[0.4785, 0.7075, 0.2461, 0.4417], [0.6743, 0.1912, 0.6564, 0.0277]], [[0.7357, 0.6679, 0.4785, 0.7635], [0.9935, 0.9881, 0.0456, 0.2645]]]])
w[1] = np.array([0, 0, 0, 0])
model.get_layer('Con92248').set_weights(w) 
in0Min43208 = tf.constant([[[0.7486, 0.5979]]])
in1Min43208 = tf.constant([[[0.9339, 0.5144]]])
in0Max37308 = tf.constant([[[0.1567]]])
in1Max37308 = tf.constant([[[0.7677]]])
in0Con448 = tf.constant([[[0.9356]]])
in0Con61653 = tf.constant([[[[0.8346, 0.6767, 0.9008], [0.377, 0.7958, 0.7177]], [[0.4858, 0.467, 0.3042], [0.6852, 0.8136, 0.8455]]]])
in0Con92248 = tf.constant([[[[0.4557, 0.802], [0.9014, 0.94]], [[0.2707, 0.1422], [0.0675, 0.1637]]]])
print (np.array2string(model.predict([in0Min43208,in1Min43208,in0Max37308,in1Max37308,in0Con448,in0Con61653,in0Con92248],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Ave97415.png')

LMin43208 = minimum_layer([[[[0.7486, 0.5979]]], [[[0.9339, 0.5144]]]], Min43208), 
LMax37308 = maximum_layer([[[[0.1567]]], [[[0.7677]]]], Max37308), 
LCro53898 = cropping1D_layer(Max37308, 0, 0, Cro53898), 
LCon448 = concatenate_layer([Cro53898,[[[0.9356]]]], 2, Con448), 
LAve83028 = average_layer([Min43208,Con448], Ave83028), 
LRes79727 = reshape_layer(Ave83028, [1, 2, 1], Res79727), 
LZer47695 = zero_padding2D_layer(Res79727, 1, 0, 0, 0, Zer47695), 
LCon61653 = concatenate_layer([Zer47695,[[[[0.8346, 0.6767, 0.9008], [0.377, 0.7958, 0.7177]], [[0.4858, 0.467, 0.3042], [0.6852, 0.8136, 0.8455]]]]], 3, Con61653), 
LCon92248 = conv2D_layer([[[[0.4557, 0.802], [0.9014, 0.94]], [[0.2707, 0.1422], [0.0675, 0.1637]]]], 2, 2,[[[[0.4703, 0.311, 0.2007, 0.1469], [0.9139, 0.7057, 0.9128, 0.9161]], [[0.5498, 0.6646, 0.1843, 0.7572], [0.8726, 0.2271, 0.9568, 0.5764]]], [[[0.4785, 0.7075, 0.2461, 0.4417], [0.6743, 0.1912, 0.6564, 0.0277]], [[0.7357, 0.6679, 0.4785, 0.7635], [0.9935, 0.9881, 0.0456, 0.2645]]]],[0, 0, 0, 0], 1, 1, true, 1, 1, Con92248), 
LAve97415 = average_layer([Con61653,Con92248], Ave97415), 
exec_layers([LMin43208,LMax37308,LCro53898,LCon448,LAve83028,LRes79727,LZer47695,LCon61653,LCon92248,LAve97415],["Min43208","Max37308","Cro53898","Con448","Ave83028","Res79727","Zer47695","Con61653","Con92248","Ave97415"],Ave97415,"Ave97415")

Actual (Unparsed): [[[[1.3504042, 1.3901913, 1.3827337, 1.5725763], [0.7128380, 0.6998746, 0.9794037, 0.8727995]], [[0.5976865, 0.3761875, 0.4100990, 0.3098515], [0.4531753, 0.4108578, 0.4882863, 0.5026907]]]]

Expected (Unparsed): [[[[1.35040417,1.390191325,1.382733715,1.57257632],[0.71283804,0.699874545,0.979403705,0.8727994499999999]],[[0.5976864550000001,0.376187505,0.41009903000000003,0.30985146500000005],[0.45317534,0.410857795,0.48828630500000003,0.5026906600000001]]]]

Actual:   [[[[1.3505, 1.3902, 1.3828, 1.5726], [0.7129, 0.6999, 0.9795, 0.8728]], [[0.5977, 0.3762, 0.4101, 0.3099], [0.4532, 0.4109, 0.4883, 0.5027]]]]

Expected: [[[[1.3505, 1.3902, 1.3828, 1.5726], [0.7129, 0.6999, 0.9795, 0.8728]], [[0.5977, 0.3762, 0.4101, 0.3099], [0.4532, 0.4109, 0.4883, 0.5027]]]]