import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Sub51218 = tf.keras.layers.Input(shape=([2]))
in1Sub51218 = tf.keras.layers.Input(shape=([2]))

Sub51218 = keras.layers.Subtract(name = 'Sub51218', )([in0Sub51218,in1Sub51218])
Den8097 = keras.layers.Dense(2,name = 'Den8097', )(Sub51218)
Den82821 = keras.layers.Dense(4,name = 'Den82821', )(Den8097)
model = tf.keras.models.Model(inputs=[in0Sub51218,in1Sub51218], outputs=Den82821)
w = model.get_layer('Den8097').get_weights() 
w[0] = np.array([[0.084, 0.9641], [0.3604, 0.7841]])
w[1] = np.array([0.6131, 0.2083])
model.get_layer('Den8097').set_weights(w) 
w = model.get_layer('Den82821').get_weights() 
w[0] = np.array([[0.5057, 0.4449, 0.5308, 0.9013], [0.7182, 0.8225, 0.2982, 0.472]])
w[1] = np.array([0.6994, 0.5634, 0.3537, 0.7841])
model.get_layer('Den82821').set_weights(w) 
in0Sub51218 = tf.constant([[0.7631, 0.8071]])
in1Sub51218 = tf.constant([[0.4473, 0.3613]])
print (np.array2string(model.predict([in0Sub51218,in1Sub51218],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Den82821.png')

LSub51218 = subtract_layer([[0.7631, 0.8071]], [[0.4473, 0.3613]], Sub51218), 
LDen8097 = dense_layer(Sub51218, [[0.084, 0.9641], [0.3604, 0.7841]],[0.6131, 0.2083], Den8097), 
LDen82821 = dense_layer(Den8097, [[0.5057, 0.4449, 0.5308, 0.9013], [0.7182, 0.8225, 0.2982, 0.472]],[0.6994, 0.5634, 0.3537, 0.7841], Den82821), 
exec_layers([LSub51218,LDen8097,LDen82821],["Sub51218","Den8097","Den82821"],Den82821,"Den82821")

Actual (Unparsed): [[1.7234228, 1.6287044, 1.0356380, 1.9124170]]

Expected (Unparsed): [[1.723422750056,1.628704312648,1.035638002208,1.912417021896]]

Actual:   [[1.7235, 1.6288, 1.0357, 1.9125]]

Expected: [[1.7235, 1.6288, 1.0357, 1.9125]]