import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Up_20888 = tf.keras.layers.Input(shape=([2, 3]))

Up_20888 = keras.layers.UpSampling1D(size=(1), name = 'Up_20888', )(in0Up_20888)
Res51435 = keras.layers.Reshape((2, 3, 1), name = 'Res51435', )(Up_20888)
Res24026 = keras.layers.Reshape((2, 3, 1, 1), name = 'Res24026', )(Res51435)
Zer28902 = keras.layers.ZeroPadding3D(padding=((1, 1), (1, 1), (1, 1)), name = 'Zer28902', )(Res24026)
ELU77051 = keras.layers.ELU(alpha=-9.714650714009325, name = 'ELU77051', )(Zer28902)
Res44122 = keras.layers.Reshape((4, 5, 3), name = 'Res44122', )(ELU77051)
Res69577 = keras.layers.Reshape((4, 15), name = 'Res69577', )(Res44122)
Sim49167 = keras.layers.SimpleRNN(3,name = 'Sim49167', )(Res69577)
Res25358 = keras.layers.Reshape((3, 1), name = 'Res25358', )(Sim49167)
Res60525 = keras.layers.Reshape((3, 1, 1), name = 'Res60525', )(Res25358)
Res13821 = keras.layers.Reshape((3, 1, 1, 1), name = 'Res13821', )(Res60525)
Con29074 = keras.layers.Conv3D(4, (1, 1, 1),strides=(1, 1, 1), padding='same', dilation_rate=(1, 1, 1), name = 'Con29074', )(Res13821)
model = tf.keras.models.Model(inputs=[in0Up_20888], outputs=Con29074)
w = model.get_layer('Sim49167').get_weights() 
w[0] = np.array([[10, 4, 4], [7, 2, 4], [7, 5, 1], [1, 8, 10], [8, 4, 3], [1, 6, 10], [10, 9, 3], [5, 2, 4], [5, 4, 3], [4, 2, 3], [4, 8, 1], [6, 4, 3], [2, 4, 5], [9, 7, 2], [3, 3, 8]])
w[1] = np.array([[8, 5, 9], [7, 9, 8], [6, 8, 8]])
w[2] = np.array([8, 10, 8])
model.get_layer('Sim49167').set_weights(w) 
w = model.get_layer('Con29074').get_weights() 
w[0] = np.array([[[[[0.4158, 0.0281, 0.1796, 0.0444]]]]])
w[1] = np.array([0, 0, 0, 0])
model.get_layer('Con29074').set_weights(w) 
in0Up_20888 = tf.constant([[[1.1479, 1.2028, 1.8765], [1.8404, 1.749, 1.1653]]])
print (np.array2string(model.predict([in0Up_20888],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Con29074.png')

LUp_20888 = up_sampling1D_layer([[[1.1479, 1.2028, 1.8765], [1.8404, 1.749, 1.1653]]], 1, Up_20888), 
LRes51435 = reshape_layer(Up_20888, [2, 3, 1], Res51435), 
LRes24026 = reshape_layer(Res51435, [2, 3, 1, 1], Res24026), 
LZer28902 = zero_padding3D_layer(Res24026, 1, 1, 1, 1, 1, 1, Zer28902), 
LELU77051 = elu_layer(Zer28902, -9.714650714009325, ELU77051), 
LRes44122 = reshape_layer(ELU77051, [4, 5, 3], Res44122), 
LRes69577 = reshape_layer(Res44122, [4, 15], Res69577), 
LSim49167 = simple_rnn_layer(Res69577,[[10, 4, 4], [7, 2, 4], [7, 5, 1], [1, 8, 10], [8, 4, 3], [1, 6, 10], [10, 9, 3], [5, 2, 4], [5, 4, 3], [4, 2, 3], [4, 8, 1], [6, 4, 3], [2, 4, 5], [9, 7, 2], [3, 3, 8]],[[8, 5, 9], [7, 9, 8], [6, 8, 8]],[8, 10, 8], Sim49167), 
LRes25358 = reshape_layer(Sim49167, [3, 1], Res25358), 
LRes60525 = reshape_layer(Res25358, [3, 1, 1], Res60525), 
LRes13821 = reshape_layer(Res60525, [3, 1, 1, 1], Res13821), 
LCon29074 = conv3D_layer(Res13821, 1, 1, 1,[[[[[0.4158, 0.0281, 0.1796, 0.0444]]]]],[0, 0, 0, 0], 1, 1, 1, true, 1, 1, 1, Con29074), 
exec_layers([LUp_20888,LRes51435,LRes24026,LZer28902,LELU77051,LRes44122,LRes69577,LSim49167,LRes25358,LRes60525,LRes13821,LCon29074],["Up_20888","Res51435","Res24026","Zer28902","ELU77051","Res44122","Res69577","Sim49167","Res25358","Res60525","Res13821","Con29074"],Con29074,"Con29074")

Actual (Unparsed): [[[[[0.4158000, 0.0281000, 0.1796000, 0.0444000]]], [[[0.4158000, 0.0281000, 0.1796000, 0.0444000]]], [[[0.4158000, 0.0281000, 0.1796000, 0.0444000]]]]]

Expected (Unparsed): [[[[[0.4158,0.0281,0.1796,0.0444]]],[[[0.4158,0.0281,0.1796,0.0444]]],[[[0.4158,0.0281,0.1796,0.0444]]]]]

Actual:   [[[[[0.4158, 0.0281, 0.1796, 0.0444]]], [[[0.4158, 0.0281, 0.1796, 0.0444]]], [[[0.4158, 0.0281, 0.1796, 0.0444]]]]]

Expected: [[[[[0.4158, 0.0281, 0.1796, 0.0444]]], [[[0.4158, 0.0281, 0.1796, 0.0444]]], [[[0.4158, 0.0281, 0.1796, 0.0444]]]]]