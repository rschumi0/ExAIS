import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Ave47304 = tf.keras.layers.Input(shape=([2, 2, 1, 2]))
in1Ave47304 = tf.keras.layers.Input(shape=([2, 2, 1, 2]))
in0Glo99847 = tf.keras.layers.Input(shape=([1, 2, 1, 1]))
in0Con22941 = tf.keras.layers.Input(shape=([7]))
in0Mul1547 = tf.keras.layers.Input(shape=([2, 1, 1, 1]))
in1Mul1547 = tf.keras.layers.Input(shape=([2, 1, 1, 1]))
in0Con66613 = tf.keras.layers.Input(shape=([8, 3]))
in0Mul5536 = tf.keras.layers.Input(shape=([1, 2, 2]))
in1Mul5536 = tf.keras.layers.Input(shape=([1, 2, 2]))

Ave47304 = keras.layers.Average(name = 'Ave47304', )([in0Ave47304,in1Ave47304])
Res81639 = keras.layers.Reshape((2, 2, 2), name = 'Res81639', )(Ave47304)
Dep87293 = keras.layers.DepthwiseConv2D((1, 1),strides=(1, 1), padding='same', name = 'Dep87293', )(Res81639)
Res60171 = keras.layers.Reshape((2, 4), name = 'Res60171', )(Dep87293)
Fla71044 = keras.layers.Flatten(name = 'Fla71044', )(Res60171)
Glo99847 = keras.layers.GlobalMaxPool3D(name = 'Glo99847', )(in0Glo99847)
Con22941 = keras.layers.Concatenate(axis=1, name = 'Con22941', )([Glo99847,in0Con22941])
Max47690 = keras.layers.Maximum(name = 'Max47690', )([Fla71044,Con22941])
Res12401 = keras.layers.Reshape((8, 1), name = 'Res12401', )(Max47690)
Mul1547 = keras.layers.Multiply(name = 'Mul1547', )([in0Mul1547,in1Mul1547])
Res85399 = keras.layers.Reshape((2, 1, 1), name = 'Res85399', )(Mul1547)
Res48034 = keras.layers.Reshape((2, 1), name = 'Res48034', )(Res85399)
Max45901 = keras.layers.MaxPool1D(pool_size=(1), name = 'Max45901', )(Res48034)
Zer10646 = keras.layers.ZeroPadding1D(padding=((6, 0)), name = 'Zer10646', )(Max45901)
Sub92371 = keras.layers.Subtract(name = 'Sub92371', )([Res12401,Zer10646])
Con66613 = keras.layers.Concatenate(axis=2, name = 'Con66613', )([Sub92371,in0Con66613])
Mul5536 = keras.layers.Multiply(name = 'Mul5536', )([in0Mul5536,in1Mul5536])
Res31068 = keras.layers.Reshape((1, 4), name = 'Res31068', )(Mul5536)
GRU56355 = keras.layers.GRU(3,reset_after=True, recurrent_activation='sigmoid', name = 'GRU56355', )(Res31068)
Lay58453 = keras.layers.LayerNormalization(axis=1, epsilon=2.9581659552749175, name = 'Lay58453', )(GRU56355)
Res6438 = keras.layers.Reshape((3, 1), name = 'Res6438', )(Lay58453)
Con82472 = keras.layers.Conv1D(4, (2),strides=(7), padding='same', dilation_rate=(1), name = 'Con82472', )(Res6438)
Zer65467 = keras.layers.ZeroPadding1D(padding=((7, 0)), name = 'Zer65467', )(Con82472)
Max29097 = keras.layers.Maximum(name = 'Max29097', )([Con66613,Zer65467])
model = tf.keras.models.Model(inputs=[in0Ave47304,in1Ave47304,in0Glo99847,in0Con22941,in0Mul1547,in1Mul1547,in0Con66613,in0Mul5536,in1Mul5536], outputs=Max29097)
w = model.get_layer('Dep87293').get_weights() 
w[0] = np.array([[[[0.594], [0.2054]]]])
w[1] = np.array([0, 0])
model.get_layer('Dep87293').set_weights(w) 
w = model.get_layer('GRU56355').get_weights() 
w[0] = np.array([[10, 8, 4, 9, 3, 7, 8, 7, 3], [10, 2, 6, 7, 10, 9, 5, 10, 10], [1, 8, 9, 4, 10, 5, 8, 10, 2], [4, 9, 6, 2, 4, 7, 1, 6, 6]])
w[1] = np.array([[9, 5, 7, 1, 3, 8, 9, 5, 6], [3, 2, 10, 1, 5, 3, 3, 1, 5], [1, 2, 10, 10, 6, 1, 5, 4, 6]])
w[2] = np.array([[9, 10, 9, 9, 3, 3, 1, 3, 3], [8, 5, 5, 6, 1, 7, 6, 8, 10]])
model.get_layer('GRU56355').set_weights(w) 
w = model.get_layer('Con82472').get_weights() 
w[0] = np.array([[[0.1486, 0.5261, 0.0083, 0.5539]], [[0.5655, 0.9577, 0.6686, 0.9548]]])
w[1] = np.array([0, 0, 0, 0])
model.get_layer('Con82472').set_weights(w) 
in0Ave47304 = tf.constant([[[[[0.117, 0.0618]], [[0.0606, 0.2549]]], [[[0.9751, 0.2978]], [[0.4847, 0.4216]]]]])
in1Ave47304 = tf.constant([[[[[0.1144, 0.147]], [[0.3655, 0.9287]]], [[[0.6769, 0.1611]], [[0.6178, 0.7049]]]]])
in0Glo99847 = tf.constant([[[[[1.8906]], [[1.798]]]]])
in0Con22941 = tf.constant([[0.9997, 0.2881, 0.9631, 0.5558, 0.3682, 0.0624, 0.4982]])
in0Mul1547 = tf.constant([[[[[0.6644]]], [[[0.4439]]]]])
in1Mul1547 = tf.constant([[[[[0.2354]]], [[[0.2169]]]]])
in0Con66613 = tf.constant([[[0.9581, 0.9073, 0.3619], [0.0002, 0.4688, 0.6136], [0.3927, 0.3644, 0.2051], [0.5102, 0.9831, 0.4793], [0.2641, 0.0168, 0.4783], [0.8027, 0.2083, 0.7376], [0.4678, 0.548, 0.3116], [0.0166, 0.9803, 0.9529]]])
in0Mul5536 = tf.constant([[[[0.4387, 0.2483], [0.9817, 0.8342]]]])
in1Mul5536 = tf.constant([[[[0.3868, 0.2783], [0.4049, 0.9086]]]])
print (np.array2string(model.predict([in0Ave47304,in1Ave47304,in0Glo99847,in0Con22941,in0Mul1547,in1Mul1547,in0Con66613,in0Mul5536,in1Mul5536],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Max29097.png')

LAve47304 = average_layer([[[[[[0.117, 0.0618]], [[0.0606, 0.2549]]], [[[0.9751, 0.2978]], [[0.4847, 0.4216]]]]], [[[[[0.1144, 0.147]], [[0.3655, 0.9287]]], [[[0.6769, 0.1611]], [[0.6178, 0.7049]]]]]], Ave47304), 
LRes81639 = reshape_layer(Ave47304, [2, 2, 2], Res81639), 
LDep87293 = depthwise_conv2D_layer(Res81639, 1, 1,[[[[0.594], [0.2054]]]],[0, 0], 1, 1, true, Dep87293), 
LRes60171 = reshape_layer(Dep87293, [2, 4], Res60171), 
LFla71044 = flatten_layer(Res60171, Fla71044), 
LGlo99847 = global_max_pool3D_layer([[[[[1.8906]], [[1.798]]]]], Glo99847), 
LCon22941 = concatenate_layer([Glo99847,[[0.9997, 0.2881, 0.9631, 0.5558, 0.3682, 0.0624, 0.4982]]], 1, Con22941), 
LMax47690 = maximum_layer([Fla71044,Con22941], Max47690), 
LRes12401 = reshape_layer(Max47690, [8, 1], Res12401), 
LMul1547 = multiply_layer([[[[[[0.6644]]], [[[0.4439]]]]], [[[[[0.2354]]], [[[0.2169]]]]]], Mul1547), 
LRes85399 = reshape_layer(Mul1547, [2, 1, 1], Res85399), 
LRes48034 = reshape_layer(Res85399, [2, 1], Res48034), 
LMax45901 = max_pool1D_layer(Res48034, 1, Max45901), 
LZer10646 = zero_padding1D_layer(Max45901, 6, 0, Zer10646), 
LSub92371 = subtract_layer(Res12401,Zer10646, Sub92371), 
LCon66613 = concatenate_layer([Sub92371,[[[0.9581, 0.9073, 0.3619], [0.0002, 0.4688, 0.6136], [0.3927, 0.3644, 0.2051], [0.5102, 0.9831, 0.4793], [0.2641, 0.0168, 0.4783], [0.8027, 0.2083, 0.7376], [0.4678, 0.548, 0.3116], [0.0166, 0.9803, 0.9529]]]], 2, Con66613), 
LMul5536 = multiply_layer([[[[[0.4387, 0.2483], [0.9817, 0.8342]]]], [[[[0.3868, 0.2783], [0.4049, 0.9086]]]]], Mul5536), 
LRes31068 = reshape_layer(Mul5536, [1, 4], Res31068), 
LGRU56355 = gru_layer(Res31068,[[10, 8, 4, 9, 3, 7, 8, 7, 3], [10, 2, 6, 7, 10, 9, 5, 10, 10], [1, 8, 9, 4, 10, 5, 8, 10, 2], [4, 9, 6, 2, 4, 7, 1, 6, 6]],[[9, 5, 7, 1, 3, 8, 9, 5, 6], [3, 2, 10, 1, 5, 3, 3, 1, 5], [1, 2, 10, 10, 6, 1, 5, 4, 6]],[[9, 10, 9, 9, 3, 3, 1, 3, 3], [8, 5, 5, 6, 1, 7, 6, 8, 10]], true, GRU56355), 
LLay58453 = layer_normalization_layer(GRU56355, 1, 2.9581659552749175, Lay58453), 
LRes6438 = reshape_layer(Lay58453, [3, 1], Res6438), 
LCon82472 = conv1D_layer(Res6438, 2,[[[0.1486, 0.5261, 0.0083, 0.5539]], [[0.5655, 0.9577, 0.6686, 0.9548]]],[0, 0, 0, 0], 7, true, 1, Con82472), 
LZer65467 = zero_padding1D_layer(Con82472, 7, 0, Zer65467), 
LMax29097 = maximum_layer([Con66613,Zer65467], Max29097), 
exec_layers([LAve47304,LRes81639,LDep87293,LRes60171,LFla71044,LGlo99847,LCon22941,LMax47690,LRes12401,LMul1547,LRes85399,LRes48034,LMax45901,LZer10646,LSub92371,LCon66613,LMul5536,LRes31068,LGRU56355,LLay58453,LRes6438,LCon82472,LZer65467,LMax29097],["Ave47304","Res81639","Dep87293","Res60171","Fla71044","Glo99847","Con22941","Max47690","Res12401","Mul1547","Res85399","Res48034","Max45901","Zer10646","Sub92371","Con66613","Mul5536","Res31068","GRU56355","Lay58453","Res6438","Con82472","Zer65467","Max29097"],Max29097,"Max29097")

Actual (Unparsed): [[[1.8906000, 0.9581000, 0.9073000, 0.3619000], [0.9997000, 0.0002000, 0.4688000, 0.6136000], [0.2881000, 0.3927000, 0.3644000, 0.2051000], [0.9631000, 0.5102000, 0.9831000, 0.4793000], [0.5558000, 0.2641000, 0.0168000, 0.4783000], [0.3682000, 0.8027000, 0.2083000, 0.7376000], [0.1710427, 0.4678000, 0.5480000, 0.3116000], [0.4019181, 0.0166000, 0.9803000, 0.9529000]]]

Expected (Unparsed): [[[1.8906,0.9581,0.9073,0.3619],[0.9997,0.0002,0.4688,0.6136],[0.2881,0.3927,0.3644,0.2051],[0.9631,0.5102,0.9831,0.4793],[0.5558,0.2641,0.0168,0.4783],[0.3682,0.8027,0.2083,0.7376],[0.17104273999999997,0.4678,0.548,0.3116],[0.40191808999999995,0.0166,0.9803,0.9529]]]

Actual:   [[[1.8906, 0.9581, 0.9073, 0.3619], [0.9997, 0.0002, 0.4688, 0.6136], [0.2881, 0.3927, 0.3644, 0.2051], [0.9631, 0.5102, 0.9831, 0.4793], [0.5558, 0.2641, 0.0168, 0.4783], [0.3682, 0.8027, 0.2083, 0.7376], [0.1711, 0.4678, 0.548, 0.3116], [0.402, 0.0166, 0.9803, 0.9529]]]

Expected: [[[1.8906, 0.9581, 0.9073, 0.3619], [0.9997, 0.0002, 0.4688, 0.6136], [0.2881, 0.3927, 0.3644, 0.2051], [0.9631, 0.5102, 0.9831, 0.4793], [0.5558, 0.2641, 0.0168, 0.4783], [0.3682, 0.8027, 0.2083, 0.7376], [0.1711, 0.4678, 0.548, 0.3116], [0.402, 0.0166, 0.9803, 0.9529]]]