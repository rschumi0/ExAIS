import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Max96717 = tf.keras.layers.Input(shape=([2, 1]))
in1Max96717 = tf.keras.layers.Input(shape=([2, 1]))

Max96717 = keras.layers.Maximum(name = 'Max96717', )([in0Max96717,in1Max96717])
Lay75751 = keras.layers.LayerNormalization(axis=1, epsilon=2.0855186088858093, name = 'Lay75751', )(Max96717)
Cro57544 = keras.layers.Cropping1D(cropping=((0, 1)), name = 'Cro57544', )(Lay75751)
Loc51308 = keras.layers.LocallyConnected1D(4, (1),strides=(1), name = 'Loc51308', )(Cro57544)
model = tf.keras.models.Model(inputs=[in0Max96717,in1Max96717], outputs=Loc51308)
w = model.get_layer('Loc51308').get_weights() 
w[0] = np.array([[[0.3355, 0.4871, 0.6945, 0.7812]]])
w[1] = np.array([[0, 0, 0, 0]])
model.get_layer('Loc51308').set_weights(w) 
in0Max96717 = tf.constant([[[0.4695], [0.8138]]])
in1Max96717 = tf.constant([[[0.5449], [0.4258]]])
print (np.array2string(model.predict([in0Max96717,in1Max96717],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Loc51308.png')

LMax96717 = maximum_layer([[[[0.4695], [0.8138]]], [[[0.5449], [0.4258]]]], Max96717), 
LLay75751 = layer_normalization_layer(Max96717, 1, 2.0855186088858093, Lay75751), 
LCro57544 = cropping1D_layer(Lay75751, 0, 1, Cro57544), 
LLoc51308 = locally_connected1D_layer(Cro57544, 1,[[[0.3355, 0.4871, 0.6945, 0.7812]]],[[0, 0, 0, 0]], 1, Loc51308), 
exec_layers([LMax96717,LLay75751,LCro57544,LLoc51308],["Max96717","Lay75751","Cro57544","Loc51308"],Loc51308,"Loc51308")

Actual (Unparsed): [[[-0.0311008, -0.0451542, -0.0643801, -0.0724172]]]

Expected (Unparsed): [[[-0.03110084749436687,-0.04515416636216424,-0.0643801448132274,-0.072417234165721]]]

Actual:   [[[-0.0311, -0.0451, -0.0643, -0.0724]]]

Expected: [[[-0.0311, -0.0451, -0.0643, -0.0724]]]