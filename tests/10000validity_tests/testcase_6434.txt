import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Mul69276 = tf.keras.layers.Input(shape=([1, 2, 1]))
in1Mul69276 = tf.keras.layers.Input(shape=([1, 2, 1]))
in0Con85617 = tf.keras.layers.Input(shape=([3, 3, 1, 2]))
in0Mul54170 = tf.keras.layers.Input(shape=([1, 2]))
in1Mul54170 = tf.keras.layers.Input(shape=([1, 2]))
in0Con82685 = tf.keras.layers.Input(shape=([3, 3, 1, 2]))
in0Max75817 = tf.keras.layers.Input(shape=([1, 1]))
in1Max75817 = tf.keras.layers.Input(shape=([1, 1]))
in0Con58440 = tf.keras.layers.Input(shape=([3, 3, 1, 2]))
in0Mul71236 = tf.keras.layers.Input(shape=([2, 2]))
in1Mul71236 = tf.keras.layers.Input(shape=([2, 2]))

Mul69276 = keras.layers.Multiply(name = 'Mul69276', )([in0Mul69276,in1Mul69276])
Res40784 = keras.layers.Reshape((1, 2, 1, 1), name = 'Res40784', )(Mul69276)
Zer42133 = keras.layers.ZeroPadding3D(padding=((2, 0), (1, 0), (0, 0)), name = 'Zer42133', )(Res40784)
Con85617 = keras.layers.Concatenate(axis=4, name = 'Con85617', )([Zer42133,in0Con85617])
Mul54170 = keras.layers.Multiply(name = 'Mul54170', )([in0Mul54170,in1Mul54170])
Res12041 = keras.layers.Reshape((1, 2, 1), name = 'Res12041', )(Mul54170)
Res76434 = keras.layers.Reshape((1, 2, 1, 1), name = 'Res76434', )(Res12041)
Zer48336 = keras.layers.ZeroPadding3D(padding=((2, 0), (1, 0), (0, 0)), name = 'Zer48336', )(Res76434)
Con82685 = keras.layers.Concatenate(axis=4, name = 'Con82685', )([Zer48336,in0Con82685])
Max75817 = keras.layers.Maximum(name = 'Max75817', )([in0Max75817,in1Max75817])
Zer6566 = keras.layers.ZeroPadding1D(padding=((1, 1)), name = 'Zer6566', )(Max75817)
Res48617 = keras.layers.Reshape((3, 1, 1), name = 'Res48617', )(Zer6566)
Res9889 = keras.layers.Reshape((3, 1, 1, 1), name = 'Res9889', )(Res48617)
Zer99866 = keras.layers.ZeroPadding3D(padding=((0, 0), (2, 0), (0, 0)), name = 'Zer99866', )(Res9889)
Con58440 = keras.layers.Concatenate(axis=4, name = 'Con58440', )([Zer99866,in0Con58440])
Mul71236 = keras.layers.Multiply(name = 'Mul71236', )([in0Mul71236,in1Mul71236])
Res54550 = keras.layers.Reshape((2, 2, 1), name = 'Res54550', )(Mul71236)
Res16658 = keras.layers.Reshape((2, 2, 1, 1), name = 'Res16658', )(Res54550)
Con74983 = keras.layers.Conv3D(3, (2, 1, 1),strides=(4, 1, 11), padding='same', dilation_rate=(1, 1, 1), name = 'Con74983', )(Res16658)
Zer10091 = keras.layers.ZeroPadding3D(padding=((2, 0), (1, 0), (0, 0)), name = 'Zer10091', )(Con74983)
Min78545 = keras.layers.Minimum(name = 'Min78545', )([Con58440,Zer10091])
Sub92753 = keras.layers.Subtract(name = 'Sub92753', )([Con82685,Min78545])
Ave52471 = keras.layers.Average(name = 'Ave52471', )([Con85617,Sub92753])
model = tf.keras.models.Model(inputs=[in0Mul69276,in1Mul69276,in0Con85617,in0Mul54170,in1Mul54170,in0Con82685,in0Max75817,in1Max75817,in0Con58440,in0Mul71236,in1Mul71236], outputs=Ave52471)
w = model.get_layer('Con74983').get_weights() 
w[0] = np.array([[[[[0.1285, 0.5923, 0.7993]]]], [[[[0.3767, 0.4669, 0.7092]]]]])
w[1] = np.array([0, 0, 0])
model.get_layer('Con74983').set_weights(w) 
in0Mul69276 = tf.constant([[[[0.9935], [0.8392]]]])
in1Mul69276 = tf.constant([[[[0.8575], [0.165]]]])
in0Con85617 = tf.constant([[[[[0.0551, 0.1519]], [[0.1509, 0.6319]], [[0.8101, 0.4596]]], [[[0.8319, 0.6213]], [[0.7539, 0.0031]], [[0.8803, 0.0088]]], [[[0.6187, 0.7226]], [[0.885, 0.5359]], [[0.503, 0.4273]]]]])
in0Mul54170 = tf.constant([[[0.3425, 0.108]]])
in1Mul54170 = tf.constant([[[0.2958, 0.3134]]])
in0Con82685 = tf.constant([[[[[0.8257, 0.3856]], [[0.7611, 0.8766]], [[0.3403, 0.6248]]], [[[0.9232, 0.8646]], [[0.3568, 0.9191]], [[0.9731, 0.3242]]], [[[0.8884, 0.7627]], [[0.7055, 0.6634]], [[0.0629, 0.4924]]]]])
in0Max75817 = tf.constant([[[0.8095]]])
in1Max75817 = tf.constant([[[0.5211]]])
in0Con58440 = tf.constant([[[[[0.5376, 0.4353]], [[0.5155, 0.3372]], [[0.3447, 0.8757]]], [[[0.6626, 0.6788]], [[0.7533, 0.2502]], [[0.1682, 0.2313]]], [[[0.7938, 0.8388]], [[0.1696, 0.8511]], [[0.5723, 0.7349]]]]])
in0Mul71236 = tf.constant([[[0.379, 0.536], [0.1742, 0.5913]]])
in1Mul71236 = tf.constant([[[0.7199, 0.3209], [0.9024, 0.9974]]])
print (np.array2string(model.predict([in0Mul69276,in1Mul69276,in0Con85617,in0Mul54170,in1Mul54170,in0Con82685,in0Max75817,in1Max75817,in0Con58440,in0Mul71236,in1Mul71236],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Ave52471.png')

LMul69276 = multiply_layer([[[[[0.9935], [0.8392]]]], [[[[0.8575], [0.165]]]]], Mul69276), 
LRes40784 = reshape_layer(Mul69276, [1, 2, 1, 1], Res40784), 
LZer42133 = zero_padding3D_layer(Res40784, 2, 0, 1, 0, 0, 0, Zer42133), 
LCon85617 = concatenate_layer([Zer42133,[[[[[0.0551, 0.1519]], [[0.1509, 0.6319]], [[0.8101, 0.4596]]], [[[0.8319, 0.6213]], [[0.7539, 0.0031]], [[0.8803, 0.0088]]], [[[0.6187, 0.7226]], [[0.885, 0.5359]], [[0.503, 0.4273]]]]]], 4, Con85617), 
LMul54170 = multiply_layer([[[[0.3425, 0.108]]], [[[0.2958, 0.3134]]]], Mul54170), 
LRes12041 = reshape_layer(Mul54170, [1, 2, 1], Res12041), 
LRes76434 = reshape_layer(Res12041, [1, 2, 1, 1], Res76434), 
LZer48336 = zero_padding3D_layer(Res76434, 2, 0, 1, 0, 0, 0, Zer48336), 
LCon82685 = concatenate_layer([Zer48336,[[[[[0.8257, 0.3856]], [[0.7611, 0.8766]], [[0.3403, 0.6248]]], [[[0.9232, 0.8646]], [[0.3568, 0.9191]], [[0.9731, 0.3242]]], [[[0.8884, 0.7627]], [[0.7055, 0.6634]], [[0.0629, 0.4924]]]]]], 4, Con82685), 
LMax75817 = maximum_layer([[[[0.8095]]], [[[0.5211]]]], Max75817), 
LZer6566 = zero_padding1D_layer(Max75817, 1, 1, Zer6566), 
LRes48617 = reshape_layer(Zer6566, [3, 1, 1], Res48617), 
LRes9889 = reshape_layer(Res48617, [3, 1, 1, 1], Res9889), 
LZer99866 = zero_padding3D_layer(Res9889, 0, 0, 2, 0, 0, 0, Zer99866), 
LCon58440 = concatenate_layer([Zer99866,[[[[[0.5376, 0.4353]], [[0.5155, 0.3372]], [[0.3447, 0.8757]]], [[[0.6626, 0.6788]], [[0.7533, 0.2502]], [[0.1682, 0.2313]]], [[[0.7938, 0.8388]], [[0.1696, 0.8511]], [[0.5723, 0.7349]]]]]], 4, Con58440), 
LMul71236 = multiply_layer([[[[0.379, 0.536], [0.1742, 0.5913]]], [[[0.7199, 0.3209], [0.9024, 0.9974]]]], Mul71236), 
LRes54550 = reshape_layer(Mul71236, [2, 2, 1], Res54550), 
LRes16658 = reshape_layer(Res54550, [2, 2, 1, 1], Res16658), 
LCon74983 = conv3D_layer(Res16658, 2, 1, 1,[[[[[0.1285, 0.5923, 0.7993]]]], [[[[0.3767, 0.4669, 0.7092]]]]],[0, 0, 0], 4, 1, 11, true, 1, 1, 1, Con74983), 
LZer10091 = zero_padding3D_layer(Con74983, 2, 0, 1, 0, 0, 0, Zer10091), 
LMin78545 = minimum_layer([Con58440,Zer10091], Min78545), 
LSub92753 = subtract_layer(Con82685,Min78545, Sub92753), 
LAve52471 = average_layer([Con85617,Sub92753], Ave52471), 
exec_layers([LMul69276,LRes40784,LZer42133,LCon85617,LMul54170,LRes12041,LRes76434,LZer48336,LCon82685,LMax75817,LZer6566,LRes48617,LRes9889,LZer99866,LCon58440,LMul71236,LRes54550,LRes16658,LCon74983,LZer10091,LMin78545,LSub92753,LAve52471],["Mul69276","Res40784","Zer42133","Con85617","Mul54170","Res12041","Res76434","Zer48336","Con82685","Max75817","Zer6566","Res48617","Res9889","Zer99866","Con58440","Mul71236","Res54550","Res16658","Con74983","Zer10091","Min78545","Sub92753","Ave52471"],Ave52471,"Ave52471")

Actual (Unparsed): [[[[[0.0000000, 0.4404000, 0.2687500]], [[0.0000000, 0.4560000, 0.7542500]], [[0.0000000, 0.5752000, 0.5422000]]], [[[0.0000000, 0.8775500, 0.7429500]], [[0.0000000, 0.5553500, 0.4611000]], [[0.0000000, 0.9267000, 0.1665000]]], [[[0.0000000, 0.7535500, 0.7426500]], [[0.4766189, 0.7104500, 0.4348662]], [[0.0861576, 0.0943314, 0.1819794]]]]]

Expected (Unparsed): [[[[[0,0.4404,0.26875]],[[0,0.456,0.7542500000000001]],[[0,0.5752,0.5422]]],[[[0,0.87755,0.74295]],[[0,0.55535,0.4611]],[[0,0.9267,0.16649999999999998]]],[[[0,0.7535499999999999,0.74265]],[[0.47661887500000005,0.71045,0.434866215567]],[[0.0861576,0.09433140560099998,0.18197941578799995]]]]]

Actual:   [[[[[0, 0.4404, 0.2688]], [[0, 0.456, 0.7543]], [[0, 0.5752, 0.5422]]], [[[0, 0.8776, 0.743]], [[0, 0.5554, 0.4611]], [[0, 0.9267, 0.1665]]], [[[0, 0.7536, 0.7427]], [[0.4767, 0.7105, 0.4349]], [[0.0862, 0.0944, 0.182]]]]]

Expected: [[[[[0, 0.4404, 0.2688]], [[0, 0.456, 0.7543]], [[0, 0.5752, 0.5422]]], [[[0, 0.8776, 0.743]], [[0, 0.5554, 0.4611]], [[0, 0.9267, 0.1665]]], [[[0, 0.7536, 0.7427]], [[0.4767, 0.7105, 0.4349]], [[0.0862, 0.0944, 0.182]]]]]