import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Sub28161 = tf.keras.layers.Input(shape=([3, 2, 3]))
in1Sub28161 = tf.keras.layers.Input(shape=([3, 2, 3]))
in0Ave81804 = tf.keras.layers.Input(shape=([2, 1, 2]))
in1Ave81804 = tf.keras.layers.Input(shape=([2, 1, 2]))
in0Con86914 = tf.keras.layers.Input(shape=([3, 2, 1]))
in0Dot28210 = tf.keras.layers.Input(shape=([2]))
in1Dot28210 = tf.keras.layers.Input(shape=([2]))
in0Con21902 = tf.keras.layers.Input(shape=([17]))

Sub28161 = keras.layers.Subtract(name = 'Sub28161', )([in0Sub28161,in1Sub28161])
Ave81804 = keras.layers.Average(name = 'Ave81804', )([in0Ave81804,in1Ave81804])
Zer70456 = keras.layers.ZeroPadding2D(padding=((1, 0), (1, 0)), name = 'Zer70456', )(Ave81804)
Con86914 = keras.layers.Concatenate(axis=3, name = 'Con86914', )([Zer70456,in0Con86914])
Ave95954 = keras.layers.Average(name = 'Ave95954', )([Sub28161,Con86914])
Res64925 = keras.layers.Reshape((3, 6), name = 'Res64925', )(Ave95954)
Fla20120 = keras.layers.Flatten(name = 'Fla20120', )(Res64925)
Dot28210 = keras.layers.Dot(axes=(1, 1), name = 'Dot28210', )([in0Dot28210,in1Dot28210])
Con21902 = keras.layers.Concatenate(axis=1, name = 'Con21902', )([Dot28210,in0Con21902])
Max79588 = keras.layers.Maximum(name = 'Max79588', )([Fla20120,Con21902])
model = tf.keras.models.Model(inputs=[in0Sub28161,in1Sub28161,in0Ave81804,in1Ave81804,in0Con86914,in0Dot28210,in1Dot28210,in0Con21902], outputs=Max79588)
in0Sub28161 = tf.constant([[[[0.8046, 0.6835, 0.6926], [0.983, 0.2776, 0.2107]], [[0.9672, 0.1339, 0.3199], [0.282, 0.4858, 0.4133]], [[0.4891, 0.7511, 0.9585], [0.8927, 0.9073, 0.9326]]]])
in1Sub28161 = tf.constant([[[[0.2076, 0.0277, 0.39], [0.0739, 0.1638, 0.1544]], [[0.6483, 0.058, 0.2129], [0.1671, 0.2667, 0.873]], [[0.4426, 0.0143, 0.768], [0.5619, 0.3999, 0.4037]]]])
in0Ave81804 = tf.constant([[[[0.8368, 0.9476]], [[0.6839, 0.7683]]]])
in1Ave81804 = tf.constant([[[[0.6947, 0.418]], [[0.0702, 0.1133]]]])
in0Con86914 = tf.constant([[[[0.7338], [0.9869]], [[0.0621], [0.9117]], [[0.9463], [0.264]]]])
in0Dot28210 = tf.constant([[0.6944, 0.4535]])
in1Dot28210 = tf.constant([[0.8957, 0.8373]])
in0Con21902 = tf.constant([[0.241, 0.8937, 0.4388, 0.2299, 0.8944, 0.7871, 0.2023, 0.7912, 0.2767, 0.3469, 0.7316, 0.0059, 0.7266, 0.3556, 0.0993, 0.9197, 0.2011]])
print (np.array2string(model.predict([in0Sub28161,in1Sub28161,in0Ave81804,in1Ave81804,in0Con86914,in0Dot28210,in1Dot28210,in0Con21902],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Max79588.png')

LSub28161 = subtract_layer([[[[0.8046, 0.6835, 0.6926], [0.983, 0.2776, 0.2107]], [[0.9672, 0.1339, 0.3199], [0.282, 0.4858, 0.4133]], [[0.4891, 0.7511, 0.9585], [0.8927, 0.9073, 0.9326]]]], [[[[0.2076, 0.0277, 0.39], [0.0739, 0.1638, 0.1544]], [[0.6483, 0.058, 0.2129], [0.1671, 0.2667, 0.873]], [[0.4426, 0.0143, 0.768], [0.5619, 0.3999, 0.4037]]]], Sub28161), 
LAve81804 = average_layer([[[[[0.8368, 0.9476]], [[0.6839, 0.7683]]]], [[[[0.6947, 0.418]], [[0.0702, 0.1133]]]]], Ave81804), 
LZer70456 = zero_padding2D_layer(Ave81804, 1, 0, 1, 0, Zer70456), 
LCon86914 = concatenate_layer([Zer70456,[[[[0.7338], [0.9869]], [[0.0621], [0.9117]], [[0.9463], [0.264]]]]], 3, Con86914), 
LAve95954 = average_layer([Sub28161,Con86914], Ave95954), 
LRes64925 = reshape_layer(Ave95954, [3, 6], Res64925), 
LFla20120 = flatten_layer(Res64925, Fla20120), 
LDot28210 = dot_layer([[0.6944, 0.4535]], [[0.8957, 0.8373]], 1, 1, Dot28210), 
LCon21902 = concatenate_layer([Dot28210,[[0.241, 0.8937, 0.4388, 0.2299, 0.8944, 0.7871, 0.2023, 0.7912, 0.2767, 0.3469, 0.7316, 0.0059, 0.7266, 0.3556, 0.0993, 0.9197, 0.2011]]], 1, Con21902), 
LMax79588 = maximum_layer([Fla20120,Con21902], Max79588), 
exec_layers([LSub28161,LAve81804,LZer70456,LCon86914,LAve95954,LRes64925,LFla20120,LDot28210,LCon21902,LMax79588],["Sub28161","Ave81804","Zer70456","Con86914","Ave95954","Res64925","Fla20120","Dot28210","Con21902","Max79588"],Max79588,"Max79588")

Actual (Unparsed): [[1.0016896, 0.3279000, 0.8937000, 0.4545500, 0.2299000, 0.8944000, 0.7871000, 0.2023000, 0.7912000, 0.4403250, 0.4509500, 0.7316000, 0.0232500, 0.7266000, 0.5684000, 0.3539250, 0.9197000, 0.3964500]]

Expected (Unparsed): [[1.00168963,0.3279,0.8937,0.45455,0.2299,0.8944,0.7871,0.2023,0.7912,0.44032499999999997,0.45094999999999996,0.7316,0.023249999999999993,0.7266,0.5684,0.35392500000000005,0.9197,0.39644999999999997]]

Actual:   [[1.0017, 0.3279, 0.8937, 0.4546, 0.2299, 0.8944, 0.7871, 0.2023, 0.7912, 0.4404, 0.451, 0.7316, 0.0233, 0.7266, 0.5684, 0.354, 0.9197, 0.3965]]

Expected: [[1.0017, 0.3279, 0.8937, 0.4546, 0.2299, 0.8944, 0.7871, 0.2023, 0.7912, 0.4404, 0.451, 0.7316, 0.0233, 0.7266, 0.5684, 0.354, 0.9197, 0.3965]]