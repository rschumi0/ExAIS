import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Sub93170 = tf.keras.layers.Input(shape=([2, 2, 2, 2]))
in1Sub93170 = tf.keras.layers.Input(shape=([2, 2, 2, 2]))
in0Max43572 = tf.keras.layers.Input(shape=([2, 1, 1]))
in0Con36547 = tf.keras.layers.Input(shape=([5, 15]))
in0Sub91525 = tf.keras.layers.Input(shape=([3, 3, 3, 2]))
in1Sub91525 = tf.keras.layers.Input(shape=([3, 3, 3, 2]))

Sub93170 = keras.layers.Subtract(name = 'Sub93170', )([in0Sub93170,in1Sub93170])
Res49022 = keras.layers.Reshape((2, 2, 4), name = 'Res49022', )(Sub93170)
Res68441 = keras.layers.Reshape((2, 8), name = 'Res68441', )(Res49022)
Con33440 = keras.layers.Conv1D(3, (1),strides=(1), padding='same', dilation_rate=(1), name = 'Con33440', )(Res68441)
Res83149 = keras.layers.Reshape((2, 3, 1), name = 'Res83149', )(Con33440)
Max43572 = keras.layers.MaxPool2D(pool_size=(2, 1), strides=(2, 1), padding='same', name = 'Max43572', )(in0Max43572)
Zer23545 = keras.layers.ZeroPadding2D(padding=((1, 0), (2, 0)), name = 'Zer23545', )(Max43572)
Ave26241 = keras.layers.Average(name = 'Ave26241', )([Res83149,Zer23545])
Res56049 = keras.layers.Reshape((2, 3), name = 'Res56049', )(Ave26241)
Zer76005 = keras.layers.ZeroPadding1D(padding=((3, 0)), name = 'Zer76005', )(Res56049)
Con36547 = keras.layers.Concatenate(axis=2, name = 'Con36547', )([Zer76005,in0Con36547])
Sub91525 = keras.layers.Subtract(name = 'Sub91525', )([in0Sub91525,in1Sub91525])
Res58683 = keras.layers.Reshape((3, 3, 6), name = 'Res58683', )(Sub91525)
Res80723 = keras.layers.Reshape((3, 18), name = 'Res80723', )(Res58683)
Zer72430 = keras.layers.ZeroPadding1D(padding=((1, 1)), name = 'Zer72430', )(Res80723)
Max92915 = keras.layers.Maximum(name = 'Max92915', )([Con36547,Zer72430])
model = tf.keras.models.Model(inputs=[in0Sub93170,in1Sub93170,in0Max43572,in0Con36547,in0Sub91525,in1Sub91525], outputs=Max92915)
w = model.get_layer('Con33440').get_weights() 
w[0] = np.array([[[0.2204, 0.8007, 0.878], [0.5899, 0.528, 0.0577], [0.1159, 0.5627, 0.0954], [0.4322, 0.0563, 0.8869], [0.9761, 0.7912, 0.6029], [0.2461, 0.4456, 0.9522], [0.1773, 0.9276, 0.6608], [0.4237, 0.0576, 0.7712]]])
w[1] = np.array([0, 0, 0])
model.get_layer('Con33440').set_weights(w) 
in0Sub93170 = tf.constant([[[[[0.5512, 0.5882], [0.4225, 0.8871]], [[0.767, 0.1047], [0.3473, 0.3209]]], [[[0.8047, 0.3548], [0.8393, 0.5636]], [[0.2524, 0.9589], [0.6134, 0.9403]]]]])
in1Sub93170 = tf.constant([[[[[0.7796, 0.6549], [0.5348, 0.4419]], [[0.9492, 0.9122], [0.8121, 0.8385]]], [[[0.4144, 0.3838], [0.7085, 0.9429]], [[0.2326, 0.4823], [0.3469, 0.2037]]]]])
in0Max43572 = tf.constant([[[[1.4171]], [[1.778]]]])
in0Con36547 = tf.constant([[[0.6244, 0.2455, 0.913, 0.0625, 0.0253, 0.584, 0.0695, 0.9937, 0.2439, 0.1511, 0.4783, 0.5635, 0.2372, 0.2642, 0.3107], [0.7784, 0.375, 0.3119, 0.806, 0.5188, 0.2218, 0.3003, 0.5205, 0.2475, 0.4542, 0.5994, 0.7028, 0.0238, 0.8335, 0.5865], [0.7656, 0.9498, 0.4145, 0.9671, 0.0361, 0.3334, 0.5926, 0.043, 0.8451, 0.9237, 0.1666, 0.0915, 0.537, 0.5451, 0.3226], [0.3237, 0.1719, 0.3386, 0.3374, 0.5957, 0.5304, 0.6028, 0.8383, 0.162, 0.5275, 0.9212, 0.661, 0.2808, 0.2981, 0.8604], [0.7007, 0.407, 0.0232, 0.0287, 0.6654, 0.0421, 0.0334, 0.6944, 0.31, 0.0502, 0.8491, 0.4843, 0.5519, 0.3934, 0.5922]]])
in0Sub91525 = tf.constant([[[[[0.9339, 0.7894], [0.2168, 0.1138], [0.7563, 0.575]], [[0.1741, 0.1514], [0.0557, 0.504], [0.0873, 0.9517]], [[0.8571, 0.1582], [0.4657, 0.0582], [0.3165, 0.0055]]], [[[0.1119, 0.1831], [0.0853, 0.9199], [0.8753, 0.4095]], [[0.64, 0.149], [0.0778, 0.1923], [0.9381, 0.5412]], [[0.4628, 0.9512], [0.5002, 0.3845], [0.9038, 0.8531]]], [[[0.298, 0.5147], [0.5238, 0.456], [0.6283, 0.4522]], [[0.3217, 0.2491], [0.4952, 0.1972], [0.8818, 0.7636]], [[0.8855, 0.9738], [0.2484, 0.8541], [0.7266, 0.651]]]]])
in1Sub91525 = tf.constant([[[[[0.5912, 0.9524], [0.2439, 0.7869], [0.8532, 0.5809]], [[0.8967, 0.2461], [0.1822, 0.1811], [0.0671, 0.1201]], [[0.5737, 0.3597], [0.1975, 0.2451], [0.8242, 0.9819]]], [[[0.1312, 0.9567], [0.5847, 0.1563], [0.9942, 0.8451]], [[0.0378, 0.0426], [0.0783, 0.185], [0.4732, 0.5896]], [[0.8313, 0.3981], [0.8344, 0.7629], [0.2431, 0.3819]]], [[[0.1242, 0.5592], [0.6279, 0.7824], [0.412, 0.118]], [[0.0452, 0.3281], [0.0711, 0.5425], [0.3773, 0.1487]], [[0.7854, 0.6171], [0.3873, 0.603], [0.8143, 0.4728]]]]])
print (np.array2string(model.predict([in0Sub93170,in1Sub93170,in0Max43572,in0Con36547,in0Sub91525,in1Sub91525],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Max92915.png')

LSub93170 = subtract_layer([[[[[0.5512, 0.5882], [0.4225, 0.8871]], [[0.767, 0.1047], [0.3473, 0.3209]]], [[[0.8047, 0.3548], [0.8393, 0.5636]], [[0.2524, 0.9589], [0.6134, 0.9403]]]]], [[[[[0.7796, 0.6549], [0.5348, 0.4419]], [[0.9492, 0.9122], [0.8121, 0.8385]]], [[[0.4144, 0.3838], [0.7085, 0.9429]], [[0.2326, 0.4823], [0.3469, 0.2037]]]]], Sub93170), 
LRes49022 = reshape_layer(Sub93170, [2, 2, 4], Res49022), 
LRes68441 = reshape_layer(Res49022, [2, 8], Res68441), 
LCon33440 = conv1D_layer(Res68441, 1,[[[0.2204, 0.8007, 0.878], [0.5899, 0.528, 0.0577], [0.1159, 0.5627, 0.0954], [0.4322, 0.0563, 0.8869], [0.9761, 0.7912, 0.6029], [0.2461, 0.4456, 0.9522], [0.1773, 0.9276, 0.6608], [0.4237, 0.0576, 0.7712]]],[0, 0, 0], 1, true, 1, Con33440), 
LRes83149 = reshape_layer(Con33440, [2, 3, 1], Res83149), 
LMax43572 = max_pool2D_layer([[[[1.4171]], [[1.778]]]], 2, 1, 2, 1, true, Max43572), 
LZer23545 = zero_padding2D_layer(Max43572, 1, 0, 2, 0, Zer23545), 
LAve26241 = average_layer([Res83149,Zer23545], Ave26241), 
LRes56049 = reshape_layer(Ave26241, [2, 3], Res56049), 
LZer76005 = zero_padding1D_layer(Res56049, 3, 0, Zer76005), 
LCon36547 = concatenate_layer([Zer76005,[[[0.6244, 0.2455, 0.913, 0.0625, 0.0253, 0.584, 0.0695, 0.9937, 0.2439, 0.1511, 0.4783, 0.5635, 0.2372, 0.2642, 0.3107], [0.7784, 0.375, 0.3119, 0.806, 0.5188, 0.2218, 0.3003, 0.5205, 0.2475, 0.4542, 0.5994, 0.7028, 0.0238, 0.8335, 0.5865], [0.7656, 0.9498, 0.4145, 0.9671, 0.0361, 0.3334, 0.5926, 0.043, 0.8451, 0.9237, 0.1666, 0.0915, 0.537, 0.5451, 0.3226], [0.3237, 0.1719, 0.3386, 0.3374, 0.5957, 0.5304, 0.6028, 0.8383, 0.162, 0.5275, 0.9212, 0.661, 0.2808, 0.2981, 0.8604], [0.7007, 0.407, 0.0232, 0.0287, 0.6654, 0.0421, 0.0334, 0.6944, 0.31, 0.0502, 0.8491, 0.4843, 0.5519, 0.3934, 0.5922]]]], 2, Con36547), 
LSub91525 = subtract_layer([[[[[0.9339, 0.7894], [0.2168, 0.1138], [0.7563, 0.575]], [[0.1741, 0.1514], [0.0557, 0.504], [0.0873, 0.9517]], [[0.8571, 0.1582], [0.4657, 0.0582], [0.3165, 0.0055]]], [[[0.1119, 0.1831], [0.0853, 0.9199], [0.8753, 0.4095]], [[0.64, 0.149], [0.0778, 0.1923], [0.9381, 0.5412]], [[0.4628, 0.9512], [0.5002, 0.3845], [0.9038, 0.8531]]], [[[0.298, 0.5147], [0.5238, 0.456], [0.6283, 0.4522]], [[0.3217, 0.2491], [0.4952, 0.1972], [0.8818, 0.7636]], [[0.8855, 0.9738], [0.2484, 0.8541], [0.7266, 0.651]]]]], [[[[[0.5912, 0.9524], [0.2439, 0.7869], [0.8532, 0.5809]], [[0.8967, 0.2461], [0.1822, 0.1811], [0.0671, 0.1201]], [[0.5737, 0.3597], [0.1975, 0.2451], [0.8242, 0.9819]]], [[[0.1312, 0.9567], [0.5847, 0.1563], [0.9942, 0.8451]], [[0.0378, 0.0426], [0.0783, 0.185], [0.4732, 0.5896]], [[0.8313, 0.3981], [0.8344, 0.7629], [0.2431, 0.3819]]], [[[0.1242, 0.5592], [0.6279, 0.7824], [0.412, 0.118]], [[0.0452, 0.3281], [0.0711, 0.5425], [0.3773, 0.1487]], [[0.7854, 0.6171], [0.3873, 0.603], [0.8143, 0.4728]]]]], Sub91525), 
LRes58683 = reshape_layer(Sub91525, [3, 3, 6], Res58683), 
LRes80723 = reshape_layer(Res58683, [3, 18], Res80723), 
LZer72430 = zero_padding1D_layer(Res80723, 1, 1, Zer72430), 
LMax92915 = maximum_layer([Con36547,Zer72430], Max92915), 
exec_layers([LSub93170,LRes49022,LRes68441,LCon33440,LRes83149,LMax43572,LZer23545,LAve26241,LRes56049,LZer76005,LCon36547,LSub91525,LRes58683,LRes80723,LZer72430,LMax92915],["Sub93170","Res49022","Res68441","Con33440","Res83149","Max43572","Zer23545","Ave26241","Res56049","Zer76005","Con36547","Sub91525","Res58683","Res80723","Zer72430","Max92915"],Max92915,"Max92915")

Actual (Unparsed): [[[0.0000000, 0.0000000, 0.0000000, 0.6244000, 0.2455000, 0.9130000, 0.0625000, 0.0253000, 0.5840000, 0.0695000, 0.9937000, 0.2439000, 0.1511000, 0.4783000, 0.5635000, 0.2372000, 0.2642000, 0.3107000], [0.3427000, 0.0000000, 0.0000000, 0.7784000, 0.3750000, 0.3119000, 0.8060000, 0.5188000, 0.2218000, 0.3229000, 0.5205000, 0.8316000, 0.4542000, 0.5994000, 0.7028000, 0.0238000, 0.8335000, 0.5865000], [0.0000000, 0.0000000, 0.0000000, 0.7656000, 0.9498000, 0.4145000, 0.9671000, 0.1064000, 0.3334000, 0.5926000, 0.4649000, 0.8451000, 0.9237000, 0.5531000, 0.0915000, 0.5370000, 0.6607000, 0.4712000], [0.1738000, -0.0445000, -0.1041000, 0.3237000, 0.2163000, 0.3386000, 0.3374000, 0.5957000, 0.5304000, 0.6028000, 0.8383000, 0.6149000, 0.5275000, 0.9212000, 0.6610000, 0.2808000, 0.2981000, 0.8604000], [0.2080536, 0.4335600, 1.5025061, 0.7007000, 0.4070000, 0.0232000, 0.0287000, 0.6654000, 0.0421000, 0.0334000, 0.6944000, 0.3100000, 0.0502000, 0.8491000, 0.4843000, 0.5519000, 0.3934000, 0.5922000]]]

Expected (Unparsed): [[[0,0,0,0.6244,0.2455,0.913,0.0625,0.0253,0.584,0.0695,0.9937,0.2439,0.1511,0.4783,0.5635,0.2372,0.2642,0.3107],[0.3427,0,0,0.7784,0.375,0.3119,0.806,0.5188,0.2218,0.32289999999999996,0.5205,0.8316,0.4542,0.5994,0.7028,0.0238,0.8335,0.5865],[0,0,0,0.7656,0.9498,0.4145,0.9671,0.1064,0.3334,0.5926,0.46490000000000004,0.8451,0.9237,0.5531,0.0915,0.537,0.6607000000000001,0.47119999999999995],[0.17379999999999998,-0.044499999999999984,-0.10409999999999997,0.3237,0.2163,0.3386,0.3374,0.5957,0.5304,0.6028,0.8383,0.6149,0.5275,0.9212,0.661,0.2808,0.2981,0.8604],[0.20805359500000004,0.43356003,1.502506155,0.7007,0.407,0.0232,0.0287,0.6654,0.0421,0.0334,0.6944,0.31,0.0502,0.8491,0.4843,0.5519,0.3934,0.5922]]]

Actual:   [[[0, 0, 0, 0.6244, 0.2455, 0.913, 0.0625, 0.0253, 0.584, 0.0695, 0.9937, 0.2439, 0.1511, 0.4783, 0.5635, 0.2372, 0.2642, 0.3107], [0.3427, 0, 0, 0.7784, 0.375, 0.3119, 0.806, 0.5188, 0.2218, 0.3229, 0.5205, 0.8316, 0.4542, 0.5994, 0.7028, 0.0238, 0.8335, 0.5865], [0, 0, 0, 0.7656, 0.9498, 0.4145, 0.9671, 0.1064, 0.3334, 0.5926, 0.4649, 0.8451, 0.9237, 0.5531, 0.0915, 0.537, 0.6607, 0.4712], [0.1738, -0.0445, -0.1041, 0.3237, 0.2163, 0.3386, 0.3374, 0.5957, 0.5304, 0.6028, 0.8383, 0.6149, 0.5275, 0.9212, 0.661, 0.2808, 0.2981, 0.8604], [0.2081, 0.4336, 1.5026, 0.7007, 0.407, 0.0232, 0.0287, 0.6654, 0.0421, 0.0334, 0.6944, 0.31, 0.0502, 0.8491, 0.4843, 0.5519, 0.3934, 0.5922]]]

Expected: [[[0, 0, 0, 0.6244, 0.2455, 0.913, 0.0625, 0.0253, 0.584, 0.0695, 0.9937, 0.2439, 0.1511, 0.4783, 0.5635, 0.2372, 0.2642, 0.3107], [0.3427, 0, 0, 0.7784, 0.375, 0.3119, 0.806, 0.5188, 0.2218, 0.3229, 0.5205, 0.8316, 0.4542, 0.5994, 0.7028, 0.0238, 0.8335, 0.5865], [0, 0, 0, 0.7656, 0.9498, 0.4145, 0.9671, 0.1064, 0.3334, 0.5926, 0.465, 0.8451, 0.9237, 0.5531, 0.0915, 0.537, 0.6608, 0.4712], [0.1738, -0.0444, -0.104, 0.3237, 0.2163, 0.3386, 0.3374, 0.5957, 0.5304, 0.6028, 0.8383, 0.6149, 0.5275, 0.9212, 0.661, 0.2808, 0.2981, 0.8604], [0.2081, 0.4336, 1.5026, 0.7007, 0.407, 0.0232, 0.0287, 0.6654, 0.0421, 0.0334, 0.6944, 0.31, 0.0502, 0.8491, 0.4843, 0.5519, 0.3934, 0.5922]]]