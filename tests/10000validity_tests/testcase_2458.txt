import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Dot1457 = tf.keras.layers.Input(shape=([3, 2]))
in1Dot1457 = tf.keras.layers.Input(shape=([3, 2]))

Dot1457 = keras.layers.Dot(axes=(2, 2), name = 'Dot1457', )([in0Dot1457,in1Dot1457])
Thr47962 = keras.layers.ThresholdedReLU(theta=5.404989604642596, name = 'Thr47962', )(Dot1457)
Res53229 = keras.layers.Reshape((3, 3, 1), name = 'Res53229', )(Thr47962)
Res70131 = keras.layers.Reshape((3, 3, 1, 1), name = 'Res70131', )(Res53229)
Cro12898 = keras.layers.Cropping3D(cropping=((0, 2), (0, 1), (0, 0)), name = 'Cro12898', )(Res70131)
model = tf.keras.models.Model(inputs=[in0Dot1457,in1Dot1457], outputs=Cro12898)
in0Dot1457 = tf.constant([[[0.2169, 0.9225], [0.4738, 0.9683], [0.8543, 0.144]]])
in1Dot1457 = tf.constant([[[0.7052, 0.4187], [0.3668, 0.8746], [0.5179, 0.4894]]])
print (np.array2string(model.predict([in0Dot1457,in1Dot1457],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Cro12898.png')

LDot1457 = dot_layer([[[0.2169, 0.9225], [0.4738, 0.9683], [0.8543, 0.144]]], [[[0.7052, 0.4187], [0.3668, 0.8746], [0.5179, 0.4894]]], 2, 2, Dot1457), 
LThr47962 = thresholded_relu_layer(Dot1457, 5.404989604642596, Thr47962), 
LRes53229 = reshape_layer(Thr47962, [3, 3, 1], Res53229), 
LRes70131 = reshape_layer(Res53229, [3, 3, 1, 1], Res70131), 
LCro12898 = cropping3D_layer(Res70131, 0, 2, 0, 1, 0, 0, Cro12898), 
exec_layers([LDot1457,LThr47962,LRes53229,LRes70131,LCro12898],["Dot1457","Thr47962","Res53229","Res70131","Cro12898"],Cro12898,"Cro12898")

Actual (Unparsed): [[[[[0.0000000]], [[0.0000000]]]]]

Expected (Unparsed): [[[[[0]],[[0]]]]]

Actual:   [[[[[0]], [[0]]]]]

Expected: [[[[[0]], [[0]]]]]