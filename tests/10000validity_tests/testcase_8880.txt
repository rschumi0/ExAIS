import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Sep77034 = tf.keras.layers.Input(shape=([2, 2, 2]))
in0Glo89477 = tf.keras.layers.Input(shape=([1, 1, 1]))
in0Con84368 = tf.keras.layers.Input(shape=([1, 1]))
in0Min83318 = tf.keras.layers.Input(shape=([1, 2]))
in1Min83318 = tf.keras.layers.Input(shape=([1, 2]))
in0Con96455 = tf.keras.layers.Input(shape=([1, 1]))

Sep77034 = keras.layers.SeparableConv2D(3, (1, 1),strides=(2, 2), padding='valid', name = 'Sep77034', )(in0Sep77034)
Res27776 = keras.layers.Reshape((1, 3), name = 'Res27776', )(Sep77034)
Glo89477 = keras.layers.GlobalMaxPool2D(name = 'Glo89477', )(in0Glo89477)
Res84453 = keras.layers.Reshape((1, 1), name = 'Res84453', )(Glo89477)
Con84368 = keras.layers.Concatenate(axis=2, name = 'Con84368', )([Res84453,in0Con84368])
Min83318 = keras.layers.Minimum(name = 'Min83318', )([in0Min83318,in1Min83318])
Mul54602 = keras.layers.Multiply(name = 'Mul54602', )([Con84368,Min83318])
Con96455 = keras.layers.Concatenate(axis=2, name = 'Con96455', )([Mul54602,in0Con96455])
Max27728 = keras.layers.Maximum(name = 'Max27728', )([Res27776,Con96455])
Fla75916 = keras.layers.Flatten(name = 'Fla75916', )(Max27728)
model = tf.keras.models.Model(inputs=[in0Sep77034,in0Glo89477,in0Con84368,in0Min83318,in1Min83318,in0Con96455], outputs=Fla75916)
w = model.get_layer('Sep77034').get_weights() 
w[0] = np.array([[[[0.7164], [0.9104]]]])
w[1] = np.array([[[[0.4539, 0.4363, 0.6137], [0.4262, 0.9457, 0.0806]]]])
w[2] = np.array([0, 0, 0])
model.get_layer('Sep77034').set_weights(w) 
in0Sep77034 = tf.constant([[[[0.5662, 0.1538], [0.0819, 0.26]], [[0.4032, 0.5797], [0.5967, 0.2992]]]])
in0Glo89477 = tf.constant([[[[1.1511]]]])
in0Con84368 = tf.constant([[[0.97]]])
in0Min83318 = tf.constant([[[0.1447, 0.9694]]])
in1Min83318 = tf.constant([[[0.624, 0.7903]]])
in0Con96455 = tf.constant([[[0.6919]]])
print (np.array2string(model.predict([in0Sep77034,in0Glo89477,in0Con84368,in0Min83318,in1Min83318,in0Con96455],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Fla75916.png')

LSep77034 = separable_conv2D_layer([[[[0.5662, 0.1538], [0.0819, 0.26]], [[0.4032, 0.5797], [0.5967, 0.2992]]]], 1, 1,[[[[[0.7164], [0.9104]]]],[[[[0.4539, 0.4363, 0.6137], [0.4262, 0.9457, 0.0806]]]]],[0, 0, 0], 2, 2, false, Sep77034), 
LRes27776 = reshape_layer(Sep77034, [1, 3], Res27776), 
LGlo89477 = global_max_pool2D_layer([[[[1.1511]]]], Glo89477), 
LRes84453 = reshape_layer(Glo89477, [1, 1], Res84453), 
LCon84368 = concatenate_layer([Res84453,[[[0.97]]]], 2, Con84368), 
LMin83318 = minimum_layer([[[[0.1447, 0.9694]]], [[[0.624, 0.7903]]]], Min83318), 
LMul54602 = multiply_layer([Con84368,Min83318], Mul54602), 
LCon96455 = concatenate_layer([Mul54602,[[[0.6919]]]], 2, Con96455), 
LMax27728 = maximum_layer([Res27776,Con96455], Max27728), 
LFla75916 = flatten_layer(Max27728, Fla75916), 
exec_layers([LSep77034,LRes27776,LGlo89477,LRes84453,LCon84368,LMin83318,LMul54602,LCon96455,LMax27728,LFla75916],["Sep77034","Res27776","Glo89477","Res84453","Con84368","Min83318","Mul54602","Con96455","Max27728","Fla75916"],Fla75916,"Fla75916")

Actual (Unparsed): [[0.2437898, 0.7665910, 0.6919000]]

Expected (Unparsed): [[0.24378981557600005,0.766591,0.6919]]

Actual:   [[0.2438, 0.7666, 0.6919]]

Expected: [[0.2438, 0.7666, 0.6919]]