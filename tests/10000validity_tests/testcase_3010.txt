import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Sep7990 = tf.keras.layers.Input(shape=([2, 1]))
in0Con3148 = tf.keras.layers.Input(shape=([3, 6, 7]))
in0Add61477 = tf.keras.layers.Input(shape=([1, 2, 1]))
in1Add61477 = tf.keras.layers.Input(shape=([1, 2, 1]))
in0Con54344 = tf.keras.layers.Input(shape=([3, 3, 3, 2]))
in0Sub56749 = tf.keras.layers.Input(shape=([3, 3, 3, 3]))
in1Sub56749 = tf.keras.layers.Input(shape=([3, 3, 3, 3]))
in0Max40459 = tf.keras.layers.Input(shape=([2, 1, 2]))
in1Max40459 = tf.keras.layers.Input(shape=([2, 1, 2]))
in0Con52024 = tf.keras.layers.Input(shape=([3, 3, 7]))

Sep7990 = keras.layers.SeparableConv1D(3, (2),strides=(2), padding='same', name = 'Sep7990', )(in0Sep7990)
Res28162 = keras.layers.Reshape((1, 3, 1), name = 'Res28162', )(Sep7990)
Zer12785 = keras.layers.ZeroPadding2D(padding=((1, 1), (1, 1)), name = 'Zer12785', )(Res28162)
Res77246 = keras.layers.Reshape((3, 5, 1, 1), name = 'Res77246', )(Zer12785)
Con30217 = keras.layers.Conv3DTranspose(2, (1, 2, 1),strides=(1, 1, 1), padding='valid', name = 'Con30217', )(Res77246)
Res58225 = keras.layers.Reshape((3, 6, 2), name = 'Res58225', )(Con30217)
Con3148 = keras.layers.Concatenate(axis=3, name = 'Con3148', )([Res58225,in0Con3148])
Add61477 = keras.layers.Add(name = 'Add61477', )([in0Add61477,in1Add61477])
Res76369 = keras.layers.Reshape((1, 2, 1, 1), name = 'Res76369', )(Add61477)
Zer57727 = keras.layers.ZeroPadding3D(padding=((2, 0), (1, 0), (2, 0)), name = 'Zer57727', )(Res76369)
Con54344 = keras.layers.Concatenate(axis=4, name = 'Con54344', )([Zer57727,in0Con54344])
Sub56749 = keras.layers.Subtract(name = 'Sub56749', )([in0Sub56749,in1Sub56749])
Sub39097 = keras.layers.Subtract(name = 'Sub39097', )([Con54344,Sub56749])
Res68868 = keras.layers.Reshape((3, 3, 9), name = 'Res68868', )(Sub39097)
Max40459 = keras.layers.Maximum(name = 'Max40459', )([in0Max40459,in1Max40459])
Zer84249 = keras.layers.ZeroPadding2D(padding=((1, 0), (2, 0)), name = 'Zer84249', )(Max40459)
Con52024 = keras.layers.Concatenate(axis=3, name = 'Con52024', )([Zer84249,in0Con52024])
Max6039 = keras.layers.Maximum(name = 'Max6039', )([Res68868,Con52024])
Zer26262 = keras.layers.ZeroPadding2D(padding=((0, 0), (3, 0)), name = 'Zer26262', )(Max6039)
Ave66905 = keras.layers.Average(name = 'Ave66905', )([Con3148,Zer26262])
model = tf.keras.models.Model(inputs=[in0Sep7990,in0Con3148,in0Add61477,in1Add61477,in0Con54344,in0Sub56749,in1Sub56749,in0Max40459,in1Max40459,in0Con52024], outputs=Ave66905)
w = model.get_layer('Sep7990').get_weights() 
w[0] = np.array([[[0.2425]], [[0.0966]]])
w[1] = np.array([[[0.0629, 0.295, 0.1432]]])
w[2] = np.array([0, 0, 0])
model.get_layer('Sep7990').set_weights(w) 
w = model.get_layer('Con30217').get_weights() 
w[0] = np.array([[[[[0.7626], [0.4353]]], [[[0.0156], [0.3361]]]]])
w[1] = np.array([0, 0])
model.get_layer('Con30217').set_weights(w) 
in0Sep7990 = tf.constant([[[0.4895], [0.0711]]])
in0Con3148 = tf.constant([[[[0.8542, 0.2055, 0.004, 0.7931, 0.0406, 0.6013, 0.7687], [0.2606, 0.0775, 0.6161, 0.9702, 0.554, 0.9779, 0.6245], [0.7968, 0.2599, 0.1044, 0.8134, 0.4599, 0.9203, 0.1579], [0.3282, 0.0483, 0.958, 0.0094, 0.4682, 0.7764, 0.5067], [0.7002, 0.4783, 0.1993, 0.4481, 0.8497, 0.472, 0.3449], [0.5248, 0.7909, 0.4151, 0.736, 0.872, 0.9793, 0.9034]], [[0.9653, 0.692, 0.6131, 0.6756, 0.8219, 0.0803, 0.9443], [0.4131, 0.9702, 0.2042, 0.4609, 0.4057, 0.8298, 0.1348], [0.9769, 0.0813, 0.6202, 0.6382, 0.6807, 0.2371, 0.4953], [0.1395, 0.3582, 0.0457, 0.3178, 0.8967, 0.3362, 0.5549], [0.8999, 0.1393, 0.17, 0.4534, 0.4731, 0.5587, 0.7389], [0.3325, 0.7392, 0.0757, 0.2045, 0.5349, 0.1022, 0.2483]], [[0.2415, 0.9586, 0.5849, 0.0354, 0.0511, 0.8529, 0.4914], [0.8859, 0.9364, 0.7329, 0.0963, 0.2819, 0.6311, 0.0257], [0.5081, 0.9355, 0.1555, 0.955, 0.3889, 0.8087, 0.6981], [0.4769, 0.3911, 0.0095, 0.9145, 0.784, 0.0173, 0.4001], [0.0753, 0.0107, 0.1031, 0.4468, 0.6973, 0.2934, 0.2791], [0.4411, 0.6479, 0.2651, 0.575, 0.7245, 0.2244, 0.3975]]]])
in0Add61477 = tf.constant([[[[0.4947], [0.1122]]]])
in1Add61477 = tf.constant([[[[0.8039], [0.6931]]]])
in0Con54344 = tf.constant([[[[[0.8373, 0.4977], [0.519, 0.3906], [0.0679, 0.9989]], [[0.0846, 0.7146], [0.0558, 0.8497], [0.5254, 0.0145]], [[0.0433, 0.7041], [0.8824, 0.908], [0.904, 0.19]]], [[[0.5793, 0.5015], [0.3382, 0.7652], [0.9283, 0.9098]], [[0.9116, 0.8588], [0.3898, 0.9206], [0.3987, 0.9349]], [[0.5225, 0.3723], [0.2878, 0.7348], [0.9677, 0.0713]]], [[[0.9754, 0.0998], [0.0003, 0.3628], [0.1309, 0.462]], [[0.1494, 0.7934], [0.9516, 0.2977], [0.1404, 0.6552]], [[0.5398, 0.5854], [0.9457, 0.5837], [0.4352, 0.5818]]]]])
in0Sub56749 = tf.constant([[[[[0.9427, 0.601, 0.536], [0.8911, 0.3835, 0.2505], [0.7709, 0.6837, 0.1253]], [[0.7375, 0.0269, 0.469], [0.64, 0.6935, 0.4593], [0.9685, 0.2598, 0.8782]], [[0.7107, 0.7545, 0.9305], [0.1388, 0.5131, 0.3608], [0.1986, 0.2508, 0.3625]]], [[[0.545, 0.0959, 0.1916], [0.5909, 0.8757, 0.3499], [0.3988, 0.9397, 0.4509]], [[0.3984, 0.0813, 0.3066], [0.2179, 0.0142, 0.7147], [0.6762, 0.0635, 0.9568]], [[0.4334, 0.3772, 0.5681], [0.9595, 0.1545, 0.7127], [0.0793, 0.5328, 0.9133]]], [[[0.6976, 0.5468, 0.5201], [0.0769, 0.1112, 0.3855], [0.0758, 0.8076, 0.3185]], [[0.4838, 0.7535, 0.3967], [0.351, 0.3587, 0.6888], [0.8602, 0.5475, 0.3737]], [[0.442, 0.4948, 0.653], [0.8833, 0.9238, 0.9294], [0.6469, 0.1442, 0.9723]]]]])
in1Sub56749 = tf.constant([[[[[0.5761, 0.732, 0.8413], [0.5675, 0.2821, 0.8516], [0.1189, 0.3799, 0.417]], [[0.8231, 0.078, 0.3279], [0.5913, 0.6782, 0.8002], [0.0927, 0.6925, 0.0794]], [[0.0987, 0.0808, 0.9544], [0.7493, 0.3545, 0.1585], [0.3263, 0.6908, 0.9987]]], [[[0.588, 0.4977, 0.6051], [0.4257, 0.9928, 0.554], [0.3194, 0.3809, 0.8454]], [[0.3834, 0.2252, 0.1587], [0.9311, 0.6413, 0.7001], [0.2659, 0.4729, 0.2863]], [[0.2323, 0.5589, 0.1207], [0.4478, 0.5044, 0.2471], [0.8054, 0.6565, 0.0024]]], [[[0.5691, 0.5383, 0.2795], [0.8139, 0.3959, 0.595], [0.3332, 0.152, 0.4914]], [[0.1671, 0.7195, 0.8024], [0.6701, 0.4846, 0.3282], [0.1264, 0.6328, 0.6197]], [[0.3797, 0.4738, 0.8294], [0.664, 0.8438, 0.8614], [0.3048, 0.7417, 0.764]]]]])
in0Max40459 = tf.constant([[[[0.5528, 0.1131]], [[0.3666, 0.8413]]]])
in1Max40459 = tf.constant([[[[0.7408, 0.5543]], [[0.9801, 0.6851]]]])
in0Con52024 = tf.constant([[[[0.1714, 0.5917, 0.2748, 0.5267, 0.9289, 0.5745, 0.803], [0.2435, 0.5206, 0.5984, 0.8862, 0.2705, 0.7881, 0.4567], [0.3392, 0.9367, 0.5869, 0.7002, 0.6258, 0.4281, 0.3806]], [[0.7965, 0.2726, 0.8019, 0.5455, 0.1766, 0.1779, 0.5744], [0.0836, 0.8377, 0.0603, 0.0697, 0.6306, 0.8714, 0.3077], [0.3666, 0.749, 0.1381, 0.9161, 0.9933, 0.4973, 0.3281]], [[0.0421, 0.4846, 0.1804, 0.8136, 0.9289, 0.5368, 0.0002], [0.0222, 0.6145, 0.7764, 0.0539, 0.546, 0.8794, 0.0909], [0.7523, 0.8357, 0.3526, 0.0632, 0.2696, 0.1231, 0.5548]]]])
print (np.array2string(model.predict([in0Sep7990,in0Con3148,in0Add61477,in1Add61477,in0Con54344,in0Sub56749,in1Sub56749,in0Max40459,in1Max40459,in0Con52024],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Ave66905.png')

LSep7990 = separable_conv1D_layer([[[0.4895], [0.0711]]], 2,[[[[0.2425]], [[0.0966]]],[[[0.0629, 0.295, 0.1432]]]],[0, 0, 0], 2, true, Sep7990), 
LRes28162 = reshape_layer(Sep7990, [1, 3, 1], Res28162), 
LZer12785 = zero_padding2D_layer(Res28162, 1, 1, 1, 1, Zer12785), 
LRes77246 = reshape_layer(Zer12785, [3, 5, 1, 1], Res77246), 
LCon30217 = conv3D_transpose_layer(Res77246, 1, 2, 1,[[[[[0.7626], [0.4353]]], [[[0.0156], [0.3361]]]]],[0, 0], 1, 1, 1, false, Con30217), 
LRes58225 = reshape_layer(Con30217, [3, 6, 2], Res58225), 
LCon3148 = concatenate_layer([Res58225,[[[[0.8542, 0.2055, 0.004, 0.7931, 0.0406, 0.6013, 0.7687], [0.2606, 0.0775, 0.6161, 0.9702, 0.554, 0.9779, 0.6245], [0.7968, 0.2599, 0.1044, 0.8134, 0.4599, 0.9203, 0.1579], [0.3282, 0.0483, 0.958, 0.0094, 0.4682, 0.7764, 0.5067], [0.7002, 0.4783, 0.1993, 0.4481, 0.8497, 0.472, 0.3449], [0.5248, 0.7909, 0.4151, 0.736, 0.872, 0.9793, 0.9034]], [[0.9653, 0.692, 0.6131, 0.6756, 0.8219, 0.0803, 0.9443], [0.4131, 0.9702, 0.2042, 0.4609, 0.4057, 0.8298, 0.1348], [0.9769, 0.0813, 0.6202, 0.6382, 0.6807, 0.2371, 0.4953], [0.1395, 0.3582, 0.0457, 0.3178, 0.8967, 0.3362, 0.5549], [0.8999, 0.1393, 0.17, 0.4534, 0.4731, 0.5587, 0.7389], [0.3325, 0.7392, 0.0757, 0.2045, 0.5349, 0.1022, 0.2483]], [[0.2415, 0.9586, 0.5849, 0.0354, 0.0511, 0.8529, 0.4914], [0.8859, 0.9364, 0.7329, 0.0963, 0.2819, 0.6311, 0.0257], [0.5081, 0.9355, 0.1555, 0.955, 0.3889, 0.8087, 0.6981], [0.4769, 0.3911, 0.0095, 0.9145, 0.784, 0.0173, 0.4001], [0.0753, 0.0107, 0.1031, 0.4468, 0.6973, 0.2934, 0.2791], [0.4411, 0.6479, 0.2651, 0.575, 0.7245, 0.2244, 0.3975]]]]], 3, Con3148), 
LAdd61477 = add_layer([[[[[0.4947], [0.1122]]]], [[[[0.8039], [0.6931]]]]], Add61477), 
LRes76369 = reshape_layer(Add61477, [1, 2, 1, 1], Res76369), 
LZer57727 = zero_padding3D_layer(Res76369, 2, 0, 1, 0, 2, 0, Zer57727), 
LCon54344 = concatenate_layer([Zer57727,[[[[[0.8373, 0.4977], [0.519, 0.3906], [0.0679, 0.9989]], [[0.0846, 0.7146], [0.0558, 0.8497], [0.5254, 0.0145]], [[0.0433, 0.7041], [0.8824, 0.908], [0.904, 0.19]]], [[[0.5793, 0.5015], [0.3382, 0.7652], [0.9283, 0.9098]], [[0.9116, 0.8588], [0.3898, 0.9206], [0.3987, 0.9349]], [[0.5225, 0.3723], [0.2878, 0.7348], [0.9677, 0.0713]]], [[[0.9754, 0.0998], [0.0003, 0.3628], [0.1309, 0.462]], [[0.1494, 0.7934], [0.9516, 0.2977], [0.1404, 0.6552]], [[0.5398, 0.5854], [0.9457, 0.5837], [0.4352, 0.5818]]]]]], 4, Con54344), 
LSub56749 = subtract_layer([[[[[0.9427, 0.601, 0.536], [0.8911, 0.3835, 0.2505], [0.7709, 0.6837, 0.1253]], [[0.7375, 0.0269, 0.469], [0.64, 0.6935, 0.4593], [0.9685, 0.2598, 0.8782]], [[0.7107, 0.7545, 0.9305], [0.1388, 0.5131, 0.3608], [0.1986, 0.2508, 0.3625]]], [[[0.545, 0.0959, 0.1916], [0.5909, 0.8757, 0.3499], [0.3988, 0.9397, 0.4509]], [[0.3984, 0.0813, 0.3066], [0.2179, 0.0142, 0.7147], [0.6762, 0.0635, 0.9568]], [[0.4334, 0.3772, 0.5681], [0.9595, 0.1545, 0.7127], [0.0793, 0.5328, 0.9133]]], [[[0.6976, 0.5468, 0.5201], [0.0769, 0.1112, 0.3855], [0.0758, 0.8076, 0.3185]], [[0.4838, 0.7535, 0.3967], [0.351, 0.3587, 0.6888], [0.8602, 0.5475, 0.3737]], [[0.442, 0.4948, 0.653], [0.8833, 0.9238, 0.9294], [0.6469, 0.1442, 0.9723]]]]], [[[[[0.5761, 0.732, 0.8413], [0.5675, 0.2821, 0.8516], [0.1189, 0.3799, 0.417]], [[0.8231, 0.078, 0.3279], [0.5913, 0.6782, 0.8002], [0.0927, 0.6925, 0.0794]], [[0.0987, 0.0808, 0.9544], [0.7493, 0.3545, 0.1585], [0.3263, 0.6908, 0.9987]]], [[[0.588, 0.4977, 0.6051], [0.4257, 0.9928, 0.554], [0.3194, 0.3809, 0.8454]], [[0.3834, 0.2252, 0.1587], [0.9311, 0.6413, 0.7001], [0.2659, 0.4729, 0.2863]], [[0.2323, 0.5589, 0.1207], [0.4478, 0.5044, 0.2471], [0.8054, 0.6565, 0.0024]]], [[[0.5691, 0.5383, 0.2795], [0.8139, 0.3959, 0.595], [0.3332, 0.152, 0.4914]], [[0.1671, 0.7195, 0.8024], [0.6701, 0.4846, 0.3282], [0.1264, 0.6328, 0.6197]], [[0.3797, 0.4738, 0.8294], [0.664, 0.8438, 0.8614], [0.3048, 0.7417, 0.764]]]]], Sub56749), 
LSub39097 = subtract_layer(Con54344,Sub56749, Sub39097), 
LRes68868 = reshape_layer(Sub39097, [3, 3, 9], Res68868), 
LMax40459 = maximum_layer([[[[[0.5528, 0.1131]], [[0.3666, 0.8413]]]], [[[[0.7408, 0.5543]], [[0.9801, 0.6851]]]]], Max40459), 
LZer84249 = zero_padding2D_layer(Max40459, 1, 0, 2, 0, Zer84249), 
LCon52024 = concatenate_layer([Zer84249,[[[[0.1714, 0.5917, 0.2748, 0.5267, 0.9289, 0.5745, 0.803], [0.2435, 0.5206, 0.5984, 0.8862, 0.2705, 0.7881, 0.4567], [0.3392, 0.9367, 0.5869, 0.7002, 0.6258, 0.4281, 0.3806]], [[0.7965, 0.2726, 0.8019, 0.5455, 0.1766, 0.1779, 0.5744], [0.0836, 0.8377, 0.0603, 0.0697, 0.6306, 0.8714, 0.3077], [0.3666, 0.749, 0.1381, 0.9161, 0.9933, 0.4973, 0.3281]], [[0.0421, 0.4846, 0.1804, 0.8136, 0.9289, 0.5368, 0.0002], [0.0222, 0.6145, 0.7764, 0.0539, 0.546, 0.8794, 0.0909], [0.7523, 0.8357, 0.3526, 0.0632, 0.2696, 0.1231, 0.5548]]]]], 3, Con52024), 
LMax6039 = maximum_layer([Res68868,Con52024], Max6039), 
LZer26262 = zero_padding2D_layer(Max6039, 0, 0, 3, 0, Zer26262), 
LAve66905 = average_layer([Con3148,Zer26262], Ave66905), 
exec_layers([LSep7990,LRes28162,LZer12785,LRes77246,LCon30217,LRes58225,LCon3148,LAdd61477,LRes76369,LZer57727,LCon54344,LSub56749,LSub39097,LRes68868,LMax40459,LZer84249,LCon52024,LMax6039,LZer26262,LAve66905],["Sep7990","Res28162","Zer12785","Res77246","Con30217","Res58225","Con3148","Add61477","Res76369","Zer57727","Con54344","Sub56749","Sub39097","Res68868","Max40459","Zer84249","Con52024","Max6039","Zer26262","Ave66905"],Ave66905,"Ave66905")

Actual (Unparsed): [[[[0.0000000, 0.0000000, 0.4271000, 0.1027500, 0.0020000, 0.3965500, 0.0203000, 0.3006500, 0.3843500], [0.0000000, 0.0000000, 0.1303000, 0.0387500, 0.3080500, 0.4851000, 0.2770000, 0.4889500, 0.3122500], [0.0000000, 0.0000000, 0.3984000, 0.1299500, 0.0522000, 0.4067000, 0.2299500, 0.4601500, 0.0789500], [0.0000000, 0.4841500, 0.5656000, 0.3200000, 0.6878000, 0.5005500, 0.6985500, 0.6754500, 0.8986500], [0.0428000, 0.0678500, 0.6368500, 0.4994500, 0.3988500, 0.8193500, 0.5601000, 0.7150500, 0.4008000], [0.0000000, 0.0000000, 0.6264000, 0.8638000, 0.5694500, 0.7208500, 0.7489000, 1.1616500, 0.8648000]], [[0.0000000, 0.0000000, 0.4826500, 0.3460000, 0.3065500, 0.3378000, 0.4109500, 0.0401500, 0.4721500], [0.0030117, 0.0017191, 0.2065500, 0.4851000, 0.1021000, 0.2304500, 0.2028500, 0.4149000, 0.0674000], [0.0141864, 0.0093899, 0.4884500, 0.0406500, 0.3101000, 0.3191000, 0.3403500, 0.1185500, 0.2476500], [0.0286454, 0.5006890, 0.5272500, 0.3154000, 0.4238000, 0.6435500, 0.5366500, 0.3528500, 0.9296000], [0.0001403, 0.5307719, 0.8054000, 0.4885000, 0.5934500, 0.6797000, 0.5518500, 0.7150500, 0.5233000], [0.3704000, 0.3521000, 0.3495500, 0.7441000, 0.3567000, 0.5603000, 0.7641000, 0.5968000, 0.2882000]], [[0.0000000, 0.0000000, 0.1207500, 0.4793000, 0.2924500, 0.0177000, 0.0255500, 0.4264500, 0.2457000], [0.0000000, 0.0000000, 0.4429500, 0.4682000, 0.3664500, 0.0481500, 0.1409500, 0.3155500, 0.0128500], [0.0000000, 0.0000000, 0.2540500, 0.4677500, 0.0777500, 0.4775000, 0.1944500, 0.4043500, 0.3490500], [0.0000000, 0.4834500, 0.2595000, 0.5640500, 0.1472500, 0.8640500, 0.8564500, 0.2770500, 0.5175000], [0.0000000, 0.0577000, 0.6372000, 0.3126000, 0.5903000, 0.2503500, 0.6310500, 0.5864000, 0.5901500], [0.4900500, 0.4206500, 0.6014500, 0.7418000, 0.5654000, 0.5453500, 0.5938500, 0.6285500, 0.4761500]]]]

Expected (Unparsed): [[[[0.0,0.0,0.4271,0.10275,0.002,0.39655,0.0203,0.30065,0.38435],[0.0,0.0,0.1303,0.03875,0.30805,0.4851,0.277,0.48895,0.31225],[0.0,0.0,0.3984,0.12995,0.0522,0.4067,0.22995,0.46015,0.07895],[0.0,0.48415,0.5656,0.32,0.6878,0.50055,0.69855,0.67545,0.89865],[0.042800000000000005,0.06785,0.6368500000000001,0.49944999999999995,0.39885000000000004,0.81935,0.5601,0.71505,0.4008],[0.0,0.0,0.6264000000000001,0.8638,0.56945,0.72085,0.7489,1.1616499999999998,0.8648]],[[0.0,0.0,0.48265,0.346,0.30655,0.3378,0.41095,0.04015,0.47215],[0.0030116902062777,0.00171910404772185,0.20655,0.4851,0.1021,0.23045,0.20285,0.4149,0.0674],[0.0141863873263812,0.00938991012111095,0.48845,0.04065,0.3101,0.3191,0.34035,0.11855,0.24765],[0.028645444176551564,0.5006889641129824,0.52725,0.3154,0.42379999999999995,0.6435500000000001,0.5366500000000001,0.35285,0.9296],[0.0001402589122896,0.5307718602833675,0.8054000000000001,0.4885,0.5934499999999999,0.6797,0.5518500000000001,0.71505,0.5233],[0.3704,0.35209999999999997,0.34955,0.7441,0.35669999999999996,0.5603,0.7641,0.5968,0.2882]],[[0.0,0.0,0.12075,0.4793,0.29245,0.0177,0.02555,0.42645,0.2457],[0.0,0.0,0.44295,0.4682,0.36645,0.04815,0.14095,0.31555,0.01285],[0.0,0.0,0.25405,0.46775,0.07775,0.4775,0.19445,0.40435,0.34905],[0.0,0.48345000000000005,0.2595,0.5640499999999999,0.14725,0.86405,0.8564499999999999,0.27705,0.5175000000000001],[0.0,0.05770000000000004,0.6372,0.31260000000000004,0.5902999999999999,0.25034999999999996,0.63105,0.5864,0.59015],[0.49005,0.42065,0.60145,0.7418,0.5654,0.54535,0.59385,0.6285499999999999,0.47614999999999996]]]]

Actual:   [[[[0, 0, 0.4271, 0.1028, 0.002, 0.3966, 0.0203, 0.3007, 0.3844], [0, 0, 0.1303, 0.0388, 0.3081, 0.4851, 0.277, 0.489, 0.3123], [0, 0, 0.3984, 0.13, 0.0522, 0.4067, 0.23, 0.4602, 0.079], [0, 0.4842, 0.5656, 0.32, 0.6878, 0.5006, 0.6986, 0.6755, 0.8987], [0.0428, 0.0679, 0.6369, 0.4995, 0.3989, 0.8194, 0.5601, 0.7151, 0.4008], [0, 0, 0.6264, 0.8638, 0.5695, 0.7209, 0.7489, 1.1617, 0.8648]], [[0, 0, 0.4827, 0.346, 0.3066, 0.3378, 0.411, 0.0402, 0.4722], [0.0031, 0.0018, 0.2066, 0.4851, 0.1021, 0.2305, 0.2029, 0.4149, 0.0674], [0.0142, 0.0094, 0.4885, 0.0407, 0.3101, 0.3191, 0.3404, 0.1186, 0.2477], [0.0287, 0.5007, 0.5273, 0.3154, 0.4238, 0.6436, 0.5367, 0.3529, 0.9296], [0.0002, 0.5308, 0.8054, 0.4885, 0.5935, 0.6797, 0.5519, 0.7151, 0.5233], [0.3704, 0.3521, 0.3496, 0.7441, 0.3567, 0.5603, 0.7641, 0.5968, 0.2882]], [[0, 0, 0.1208, 0.4793, 0.2925, 0.0177, 0.0256, 0.4265, 0.2457], [0, 0, 0.443, 0.4682, 0.3665, 0.0482, 0.141, 0.3156, 0.0129], [0, 0, 0.2541, 0.4678, 0.0778, 0.4775, 0.1945, 0.4044, 0.3491], [0, 0.4835, 0.2595, 0.5641, 0.1473, 0.8641, 0.8565, 0.2771, 0.5175], [0, 0.0577, 0.6372, 0.3126, 0.5903, 0.2504, 0.6311, 0.5864, 0.5902], [0.4901, 0.4207, 0.6015, 0.7418, 0.5654, 0.5454, 0.5939, 0.6286, 0.4762]]]]

Expected: [[[[0, 0, 0.4271, 0.1028, 0.002, 0.3966, 0.0203, 0.3007, 0.3844], [0, 0, 0.1303, 0.0388, 0.3081, 0.4851, 0.277, 0.489, 0.3123], [0, 0, 0.3984, 0.13, 0.0522, 0.4067, 0.23, 0.4602, 0.079], [0, 0.4842, 0.5656, 0.32, 0.6878, 0.5006, 0.6986, 0.6755, 0.8987], [0.0429, 0.0679, 0.6369, 0.4995, 0.3989, 0.8194, 0.5601, 0.7151, 0.4008], [0, 0, 0.6265, 0.8638, 0.5695, 0.7209, 0.7489, 1.1617, 0.8648]], [[0, 0, 0.4827, 0.346, 0.3066, 0.3378, 0.411, 0.0402, 0.4722], [0.0031, 0.0018, 0.2066, 0.4851, 0.1021, 0.2305, 0.2029, 0.4149, 0.0674], [0.0142, 0.0094, 0.4885, 0.0407, 0.3101, 0.3191, 0.3404, 0.1186, 0.2477], [0.0287, 0.5007, 0.5273, 0.3154, 0.4238, 0.6436, 0.5367, 0.3529, 0.9296], [0.0002, 0.5308, 0.8055, 0.4885, 0.5935, 0.6797, 0.5519, 0.7151, 0.5233], [0.3704, 0.3521, 0.3496, 0.7441, 0.3567, 0.5603, 0.7641, 0.5968, 0.2882]], [[0, 0, 0.1208, 0.4793, 0.2925, 0.0177, 0.0256, 0.4265, 0.2457], [0, 0, 0.443, 0.4682, 0.3665, 0.0482, 0.141, 0.3156, 0.0129], [0, 0, 0.2541, 0.4678, 0.0778, 0.4775, 0.1945, 0.4044, 0.3491], [0, 0.4835, 0.2595, 0.5641, 0.1473, 0.8641, 0.8565, 0.2771, 0.5176], [0, 0.0578, 0.6372, 0.3127, 0.5903, 0.2504, 0.6311, 0.5864, 0.5902], [0.4901, 0.4207, 0.6015, 0.7418, 0.5654, 0.5454, 0.5939, 0.6286, 0.4762]]]]