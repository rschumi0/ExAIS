import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0LST20233 = tf.keras.layers.Input(shape=([3, 1]))
in0Con71448 = tf.keras.layers.Input(shape=([2, 3, 1, 3]))
in0PRe27917 = tf.keras.layers.Input(shape=([2, 1, 2, 1]))
in0Con37801 = tf.keras.layers.Input(shape=([2, 1]))
in0Con15830 = tf.keras.layers.Input(shape=([1, 1, 1, 2]))

LST20233 = keras.layers.LSTM(3,recurrent_activation='sigmoid', name = 'LST20233', )(in0LST20233)
Res2248 = keras.layers.Reshape((3, 1), name = 'Res2248', )(LST20233)
Per35965 = keras.layers.Permute((2,1), name = 'Per35965',)(Res2248)
Res97299 = keras.layers.Reshape((1, 3, 1), name = 'Res97299', )(Per35965)
Res32366 = keras.layers.Reshape((1, 3, 1, 1), name = 'Res32366', )(Res97299)
Zer12907 = keras.layers.ZeroPadding3D(padding=((1, 0), (0, 0), (0, 0)), name = 'Zer12907', )(Res32366)
Con71448 = keras.layers.Concatenate(axis=4, name = 'Con71448', )([Zer12907,in0Con71448])
PRe27917 = keras.layers.PReLU(name = 'PRe27917', input_shape=(2, 1, 2, 1))(in0PRe27917)
Lea23596 = keras.layers.LeakyReLU(alpha=4.29076473473076, name = 'Lea23596', )(PRe27917)
Res63061 = keras.layers.Reshape((2, 1, 2), name = 'Res63061', )(Lea23596)
Res83153 = keras.layers.Reshape((2, 2), name = 'Res83153', )(Res63061)
Con37801 = keras.layers.Concatenate(axis=2, name = 'Con37801', )([Res83153,in0Con37801])
Con15830 = keras.layers.Conv3DTranspose(3, (1, 1, 1),strides=(1, 1, 1), padding='same', name = 'Con15830', )(in0Con15830)
Res39422 = keras.layers.Reshape((1, 1, 3), name = 'Res39422', )(Con15830)
Res94980 = keras.layers.Reshape((1, 3), name = 'Res94980', )(Res39422)
Sep63518 = keras.layers.SeparableConv1D(3, (1),strides=(1), padding='valid', name = 'Sep63518', )(Res94980)
Zer66568 = keras.layers.ZeroPadding1D(padding=((1, 0)), name = 'Zer66568', )(Sep63518)
Add72283 = keras.layers.Add(name = 'Add72283', )([Con37801,Zer66568])
Res50000 = keras.layers.Reshape((2, 3, 1), name = 'Res50000', )(Add72283)
Res77721 = keras.layers.Reshape((2, 3, 1, 1), name = 'Res77721', )(Res50000)
Con38239 = keras.layers.Conv3D(4, (2, 2, 1),strides=(1, 1, 1), padding='same', dilation_rate=(1, 1, 1), name = 'Con38239', )(Res77721)
Mul46004 = keras.layers.Multiply(name = 'Mul46004', )([Con71448,Con38239])
model = tf.keras.models.Model(inputs=[in0LST20233,in0Con71448,in0PRe27917,in0Con37801,in0Con15830], outputs=Mul46004)
w = model.get_layer('LST20233').get_weights() 
w[0] = np.array([[10, 2, 2, 7, 3, 4, 4, 8, 5, 2, 1, 2]])
w[1] = np.array([[5, 8, 2, 6, 1, 9, 1, 1, 6, 3, 7, 8], [10, 1, 4, 9, 9, 3, 9, 4, 4, 4, 4, 6], [6, 3, 10, 7, 10, 10, 9, 9, 5, 5, 2, 1]])
w[2] = np.array([7, 2, 8, 10, 4, 7, 1, 1, 9, 6, 2, 9])
model.get_layer('LST20233').set_weights(w) 
w = model.get_layer('PRe27917').get_weights() 
w[0] = np.array([[[[0.2732], [0.6199]]], [[[0.8815], [0.9074]]]])
model.get_layer('PRe27917').set_weights(w) 
w = model.get_layer('Con15830').get_weights() 
w[0] = np.array([[[[[0.0405, 0.3278], [0.051, 0.0597], [0.2173, 0.3442]]]]])
w[1] = np.array([0, 0, 0])
model.get_layer('Con15830').set_weights(w) 
w = model.get_layer('Sep63518').get_weights() 
w[0] = np.array([[[0.2618], [0.4943], [0.3759]]])
w[1] = np.array([[[0.183, 0.184, 0.8357], [0.2857, 0.1873, 0.4177], [0.4728, 0.2264, 0.0731]]])
w[2] = np.array([0, 0, 0])
model.get_layer('Sep63518').set_weights(w) 
w = model.get_layer('Con38239').get_weights() 
w[0] = np.array([[[[[0.9103, 0.6886, 0.1844, 0.076]]], [[[0.3325, 0.5875, 0.6981, 0.3589]]]], [[[[0.0026, 0.4304, 0.6347, 0.0324]]], [[[0.7892, 0.9441, 0.9547, 0.9861]]]]])
w[1] = np.array([0, 0, 0, 0])
model.get_layer('Con38239').set_weights(w) 
in0LST20233 = tf.constant([[[3], [4], [5]]])
in0Con71448 = tf.constant([[[[[0.6311, 0.8268, 0.8509]], [[0.1744, 0.8405, 0.0935]], [[0.5655, 0.7256, 0.6129]]], [[[0.2993, 0.159, 0.4193]], [[0.3939, 0.0701, 0.4108]], [[0.775, 0.8197, 0.2713]]]]])
in0PRe27917 = tf.constant([[[[[0.199], [0.9623]]], [[[0.3559], [0.3836]]]]])
in0Con37801 = tf.constant([[[0.6896], [0.5283]]])
in0Con15830 = tf.constant([[[[[0.5708, 0.8735]]]]])
print (np.array2string(model.predict([in0LST20233,in0Con71448,in0PRe27917,in0Con37801,in0Con15830],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Mul46004.png')

LLST20233 = lstm_layer([[[3], [4], [5]]],[[10, 2, 2, 7, 3, 4, 4, 8, 5, 2, 1, 2]],[[5, 8, 2, 6, 1, 9, 1, 1, 6, 3, 7, 8], [10, 1, 4, 9, 9, 3, 9, 4, 4, 4, 4, 6], [6, 3, 10, 7, 10, 10, 9, 9, 5, 5, 2, 1]],[7, 2, 8, 10, 4, 7, 1, 1, 9, 6, 2, 9], LST20233), 
LRes2248 = reshape_layer(LST20233, [3, 1], Res2248), 
LPer35965 = permute_layer(Res2248, 2,1, Per35965), 
LRes97299 = reshape_layer(Per35965, [1, 3, 1], Res97299), 
LRes32366 = reshape_layer(Res97299, [1, 3, 1, 1], Res32366), 
LZer12907 = zero_padding3D_layer(Res32366, 1, 0, 0, 0, 0, 0, Zer12907), 
LCon71448 = concatenate_layer([Zer12907,[[[[[0.6311, 0.8268, 0.8509]], [[0.1744, 0.8405, 0.0935]], [[0.5655, 0.7256, 0.6129]]], [[[0.2993, 0.159, 0.4193]], [[0.3939, 0.0701, 0.4108]], [[0.775, 0.8197, 0.2713]]]]]], 4, Con71448), 
LPRe27917 = prelu_layer([[[[[0.199], [0.9623]]], [[[0.3559], [0.3836]]]]], [[[[0.2732], [0.6199]]], [[[0.8815], [0.9074]]]], PRe27917), 
LLea23596 = leaky_relu_layer(PRe27917, 4.29076473473076, Lea23596), 
LRes63061 = reshape_layer(Lea23596, [2, 1, 2], Res63061), 
LRes83153 = reshape_layer(Res63061, [2, 2], Res83153), 
LCon37801 = concatenate_layer([Res83153,[[[0.6896], [0.5283]]]], 2, Con37801), 
LCon15830 = conv3D_transpose_layer([[[[[0.5708, 0.8735]]]]], 1, 1, 1,[[[[[0.0405, 0.3278], [0.051, 0.0597], [0.2173, 0.3442]]]]],[0, 0, 0], 1, 1, 1, true, Con15830), 
LRes39422 = reshape_layer(Con15830, [1, 1, 3], Res39422), 
LRes94980 = reshape_layer(Res39422, [1, 3], Res94980), 
LSep63518 = separable_conv1D_layer(Res94980, 1,[[[[0.2618], [0.4943], [0.3759]]],[[[0.183, 0.184, 0.8357], [0.2857, 0.1873, 0.4177], [0.4728, 0.2264, 0.0731]]]],[0, 0, 0], 1, false, Sep63518), 
LZer66568 = zero_padding1D_layer(Sep63518, 1, 0, Zer66568), 
LAdd72283 = add_layer([Con37801,Zer66568], Add72283), 
LRes50000 = reshape_layer(Add72283, [2, 3, 1], Res50000), 
LRes77721 = reshape_layer(Res50000, [2, 3, 1, 1], Res77721), 
LCon38239 = conv3D_layer(Res77721, 2, 2, 1,[[[[[0.9103, 0.6886, 0.1844, 0.076]]], [[[0.3325, 0.5875, 0.6981, 0.3589]]]], [[[[0.0026, 0.4304, 0.6347, 0.0324]]], [[[0.7892, 0.9441, 0.9547, 0.9861]]]]],[0, 0, 0, 0], 1, 1, 1, true, 1, 1, 1, Con38239), 
LMul46004 = multiply_layer([Con71448,Con38239], Mul46004), 
exec_layers([LLST20233,LRes2248,LPer35965,LRes97299,LRes32366,LZer12907,LCon71448,LPRe27917,LLea23596,LRes63061,LRes83153,LCon37801,LCon15830,LRes39422,LRes94980,LSep63518,LZer66568,LAdd72283,LRes50000,LRes77721,LCon38239,LMul46004],["LST20233","Res2248","Per35965","Res97299","Res32366","Zer12907","Con71448","PRe27917","Lea23596","Res63061","Res83153","Con37801","Con15830","Res39422","Res94980","Sep63518","Zer66568","Add72283","Res50000","Res77721","Con38239","Mul46004"],Mul46004,"Mul46004")

Actual (Unparsed): [[[[[0.0000000, 0.8310472, 1.1749729, 0.6903767]], [[0.0000000, 0.3222275, 1.2907291, 0.0888932]], [[0.0000000, 0.4205184, 0.3798525, 0.0445222]]], [[[0.5608611, 0.1720780, 0.0624992, 0.0811259]], [[0.6071204, 0.2644428, 0.0362744, 0.1058716]], [[0.5656265, 0.3332475, 0.0943874, 0.0128754]]]]]

Expected (Unparsed): [[[[[0.0,0.8310472515148538,1.1749729486858933,0.6903767427150831]],[[0.0,0.32222753853711694,1.290729073333371,0.08889321817024277]],[[0.0,0.4205183538375304,0.37985245997999406,0.0445221635504033]]],[[[0.5608611297771127,0.17207802048543488,0.0624992409530318,0.08112594590566871]],[[0.6071204514964772,0.264442806092245,0.036274351509213355,0.10587159553642983]],[[0.5656265268352021,0.33324755504857395,0.09438741729182067,0.01287542688397316]]]]]

Actual:   [[[[[0, 0.8311, 1.175, 0.6904]], [[0, 0.3223, 1.2908, 0.0889]], [[0, 0.4206, 0.3799, 0.0446]]], [[[0.5609, 0.1721, 0.0625, 0.0812]], [[0.6072, 0.2645, 0.0363, 0.1059]], [[0.5657, 0.3333, 0.0944, 0.0129]]]]]

Expected: [[[[[0, 0.8311, 1.175, 0.6904]], [[0, 0.3223, 1.2908, 0.0889]], [[0, 0.4206, 0.3799, 0.0446]]], [[[0.5609, 0.1721, 0.0625, 0.0812]], [[0.6072, 0.2645, 0.0363, 0.1059]], [[0.5657, 0.3333, 0.0944, 0.0129]]]]]