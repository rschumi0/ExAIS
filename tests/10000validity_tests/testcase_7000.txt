import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Dot49687 = tf.keras.layers.Input(shape=([2]))
in1Dot49687 = tf.keras.layers.Input(shape=([2]))

Dot49687 = keras.layers.Dot(axes=(1, 1), name = 'Dot49687', )([in0Dot49687,in1Dot49687])
Sof43819 = keras.layers.Softmax(axis=1, name = 'Sof43819', )(Dot49687)
Res77841 = keras.layers.Reshape((1, 1), name = 'Res77841', )(Sof43819)
Up_42852 = keras.layers.UpSampling1D(size=(1), name = 'Up_42852', )(Res77841)
model = tf.keras.models.Model(inputs=[in0Dot49687,in1Dot49687], outputs=Up_42852)
in0Dot49687 = tf.constant([[0.2369, 0.4881]])
in1Dot49687 = tf.constant([[0.0427, 0.9585]])
print (np.array2string(model.predict([in0Dot49687,in1Dot49687],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Up_42852.png')

LDot49687 = dot_layer([[0.2369, 0.4881]], [[0.0427, 0.9585]], 1, 1, Dot49687), 
LSof43819 = softmax_layer(Dot49687, 1, Sof43819), 
LRes77841 = reshape_layer(Sof43819, [1, 1], Res77841), 
LUp_42852 = up_sampling1D_layer(Res77841, 1, Up_42852), 
exec_layers([LDot49687,LSof43819,LRes77841,LUp_42852],["Dot49687","Sof43819","Res77841","Up_42852"],Up_42852,"Up_42852")

Actual (Unparsed): [[[1.0000000]]]

Expected (Unparsed): [[[1.0]]]

Actual:   [[[1]]]

Expected: [[[1]]]