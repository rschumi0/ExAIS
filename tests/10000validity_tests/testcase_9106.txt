import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Sof49289 = tf.keras.layers.Input(shape=([2, 1, 2, 2]))

Sof49289 = keras.layers.Softmax(axis=1, name = 'Sof49289', input_shape=(2, 1, 2, 2))(in0Sof49289)
Res85415 = keras.layers.Reshape((2, 1, 4), name = 'Res85415', )(Sof49289)
Res36389 = keras.layers.Reshape((2, 4), name = 'Res36389', )(Res85415)
Max32469 = keras.layers.MaxPool1D(pool_size=(1), strides=(1), padding='same', name = 'Max32469', )(Res36389)
model = tf.keras.models.Model(inputs=[in0Sof49289], outputs=Max32469)
in0Sof49289 = tf.constant([[[[[0.9242, 0.1631], [0.4438, 0.4151]]], [[[0.5066, 0.361], [0.3061, 0.5953]]]]])
print (np.array2string(model.predict([in0Sof49289],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Max32469.png')

LSof49289 = softmax_layer([[[[[0.9242, 0.1631], [0.4438, 0.4151]]], [[[0.5066, 0.361], [0.3061, 0.5953]]]]], 1, Sof49289), 
LRes85415 = reshape_layer(Sof49289, [2, 1, 4], Res85415), 
LRes36389 = reshape_layer(Res85415, [2, 4], Res36389), 
LMax32469 = max_pool1D_layer(Res36389, 1, 1, true, Max32469), 
exec_layers([LSof49289,LRes85415,LRes36389,LMax32469],["Sof49289","Res85415","Res36389","Max32469"],Max32469,"Max32469")

Actual (Unparsed): [[[0.6029088, 0.4506858, 0.5343707, 0.4550715], [0.3970912, 0.5493142, 0.4656293, 0.5449285]]]

Expected (Unparsed): [[[0.6029088085515347,0.45068584170105375,0.5343707077421139,0.4550715108947507],[0.39709119144846516,0.5493141582989461,0.46562929225788613,0.5449284891052494]]]

Actual:   [[[0.603, 0.4507, 0.5344, 0.4551], [0.3971, 0.5494, 0.4657, 0.545]]]

Expected: [[[0.603, 0.4507, 0.5344, 0.4551], [0.3971, 0.5494, 0.4657, 0.545]]]