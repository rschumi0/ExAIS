import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Ave85391 = tf.keras.layers.Input(shape=([2, 2, 1, 2]))
in1Ave85391 = tf.keras.layers.Input(shape=([2, 2, 1, 2]))
in0Dep37874 = tf.keras.layers.Input(shape=([2, 2, 1]))
in0Con38198 = tf.keras.layers.Input(shape=([2, 2, 1]))
in0Zer29652 = tf.keras.layers.Input(shape=([1, 2]))
in0Con53070 = tf.keras.layers.Input(shape=([3, 2]))
in0Add75552 = tf.keras.layers.Input(shape=([2, 2, 1, 1]))
in1Add75552 = tf.keras.layers.Input(shape=([2, 2, 1, 1]))

Ave85391 = keras.layers.Average(name = 'Ave85391', )([in0Ave85391,in1Ave85391])
Bat69636 = keras.layers.BatchNormalization(axis=3, epsilon=0.43139510814188964,  name = 'Bat69636', )(Ave85391)
Res48786 = keras.layers.Reshape((2, 2, 2), name = 'Res48786', )(Bat69636)
Dep37874 = keras.layers.DepthwiseConv2D((2, 2),strides=(2, 2), padding='valid', name = 'Dep37874', )(in0Dep37874)
Mas97001 = keras.layers.Masking(mask_value=2, name = 'Mas97001', )(Dep37874)
Zer25135 = keras.layers.ZeroPadding2D(padding=((1, 0), (1, 0)), name = 'Zer25135', )(Mas97001)
Con38198 = keras.layers.Concatenate(axis=3, name = 'Con38198', )([Zer25135,in0Con38198])
Ave91682 = keras.layers.Average(name = 'Ave91682', )([Res48786,Con38198])
Res69699 = keras.layers.Reshape((2, 4), name = 'Res69699', )(Ave91682)
Zer24297 = keras.layers.ZeroPadding1D(padding=((1, 0)), name = 'Zer24297', )(Res69699)
Zer29652 = keras.layers.ZeroPadding1D(padding=((1, 1)), name = 'Zer29652', )(in0Zer29652)
Con53070 = keras.layers.Concatenate(axis=2, name = 'Con53070', )([Zer29652,in0Con53070])
Add27585 = keras.layers.Add(name = 'Add27585', )([Zer24297,Con53070])
Res84565 = keras.layers.Reshape((3, 4, 1), name = 'Res84565', )(Add27585)
Res27169 = keras.layers.Reshape((3, 4, 1, 1), name = 'Res27169', )(Res84565)
Add75552 = keras.layers.Add(name = 'Add75552', )([in0Add75552,in1Add75552])
Zer32993 = keras.layers.ZeroPadding3D(padding=((1, 0), (2, 0), (0, 0)), name = 'Zer32993', )(Add75552)
Max87219 = keras.layers.Maximum(name = 'Max87219', )([Res27169,Zer32993])
model = tf.keras.models.Model(inputs=[in0Ave85391,in1Ave85391,in0Dep37874,in0Con38198,in0Zer29652,in0Con53070,in0Add75552,in1Add75552], outputs=Max87219)
w = model.get_layer('Bat69636').get_weights() 
w[0] = np.array([0.2327])
w[1] = np.array([0.7868])
w[2] = np.array([0.6177])
w[3] = np.array([0.7782])
model.get_layer('Bat69636').set_weights(w) 
w = model.get_layer('Dep37874').get_weights() 
w[0] = np.array([[[[0.1994]], [[0.4788]]], [[[0.375]], [[0.3945]]]])
w[1] = np.array([0])
model.get_layer('Dep37874').set_weights(w) 
in0Ave85391 = tf.constant([[[[[0.7574, 0.4397]], [[0.2603, 0.995]]], [[[0.3118, 0.2145]], [[0.3283, 0.836]]]]])
in1Ave85391 = tf.constant([[[[[0.9977, 0.8367]], [[0.7474, 0.2107]]], [[[0.0704, 0.6532]], [[0.3569, 0.5347]]]]])
in0Dep37874 = tf.constant([[[[0.6074], [0.458]], [[0.4182], [0.8605]]]])
in0Con38198 = tf.constant([[[[0.9568], [0.2556]], [[0.9586], [0.4583]]]])
in0Zer29652 = tf.constant([[[1.3362, 1.4049]]])
in0Con53070 = tf.constant([[[0.7609, 0.1392], [0.1872, 0.1127], [0.5594, 0.5614]]])
in0Add75552 = tf.constant([[[[[0.6821]], [[0.468]]], [[[0.3039]], [[0.6427]]]]])
in1Add75552 = tf.constant([[[[[0.2022]], [[0.4049]]], [[[0.2849]], [[0.6084]]]]])
print (np.array2string(model.predict([in0Ave85391,in1Ave85391,in0Dep37874,in0Con38198,in0Zer29652,in0Con53070,in0Add75552,in1Add75552],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Max87219.png')

LAve85391 = average_layer([[[[[[0.7574, 0.4397]], [[0.2603, 0.995]]], [[[0.3118, 0.2145]], [[0.3283, 0.836]]]]], [[[[[0.9977, 0.8367]], [[0.7474, 0.2107]]], [[[0.0704, 0.6532]], [[0.3569, 0.5347]]]]]], Ave85391), 
LBat69636 = batch_normalization_layer(Ave85391, 3, 0.43139510814188964, [0.2327], [0.7868], [0.6177], [0.7782], Bat69636), 
LRes48786 = reshape_layer(Bat69636, [2, 2, 2], Res48786), 
LDep37874 = depthwise_conv2D_layer([[[[0.6074], [0.458]], [[0.4182], [0.8605]]]], 2, 2,[[[[0.1994]], [[0.4788]]], [[[0.375]], [[0.3945]]]],[0], 2, 2, false, Dep37874), 
LMas97001 = masking_layer(Dep37874, 2, Mas97001), 
LZer25135 = zero_padding2D_layer(Mas97001, 1, 0, 1, 0, Zer25135), 
LCon38198 = concatenate_layer([Zer25135,[[[[0.9568], [0.2556]], [[0.9586], [0.4583]]]]], 3, Con38198), 
LAve91682 = average_layer([Res48786,Con38198], Ave91682), 
LRes69699 = reshape_layer(Ave91682, [2, 4], Res69699), 
LZer24297 = zero_padding1D_layer(Res69699, 1, 0, Zer24297), 
LZer29652 = zero_padding1D_layer([[[1.3362, 1.4049]]], 1, 1, Zer29652), 
LCon53070 = concatenate_layer([Zer29652,[[[0.7609, 0.1392], [0.1872, 0.1127], [0.5594, 0.5614]]]], 2, Con53070), 
LAdd27585 = add_layer([Zer24297,Con53070], Add27585), 
LRes84565 = reshape_layer(Add27585, [3, 4, 1], Res84565), 
LRes27169 = reshape_layer(Res84565, [3, 4, 1, 1], Res27169), 
LAdd75552 = add_layer([[[[[[0.6821]], [[0.468]]], [[[0.3039]], [[0.6427]]]]], [[[[[0.2022]], [[0.4049]]], [[[0.2849]], [[0.6084]]]]]], Add75552), 
LZer32993 = zero_padding3D_layer(Add75552, 1, 0, 2, 0, 0, 0, Zer32993), 
LMax87219 = maximum_layer([Res27169,Zer32993], Max87219), 
exec_layers([LAve85391,LBat69636,LRes48786,LDep37874,LMas97001,LZer25135,LCon38198,LAve91682,LRes69699,LZer24297,LZer29652,LCon53070,LAdd27585,LRes84565,LRes27169,LAdd75552,LZer32993,LMax87219],["Ave85391","Bat69636","Res48786","Dep37874","Mas97001","Zer25135","Con38198","Ave91682","Res69699","Zer24297","Zer29652","Con53070","Add27585","Res84565","Res27169","Add75552","Zer32993","Max87219"],Max87219,"Max87219")

Actual (Unparsed): [[[[[0.0000000]], [[0.0000000]], [[0.7609000]], [[0.1392000]]], [[[1.7570896]], [[2.2788687]], [[0.8843000]], [[0.8729000]]], [[[0.3482698]], [[0.8532504]], [[1.3420462]], [[1.2511000]]]]]

Expected (Unparsed): [[[[[0]],[[0]],[[0.7609]],[[0.1392]]],[[[1.7570896428776246]],[[2.2788687037867668]],[[0.8843000000000001]],[[0.8729]]],[[[0.3482698031495302]],[[0.8532504296977055]],[[1.3420461580858785]],[[1.2511]]]]]

Actual:   [[[[[0]], [[0]], [[0.7609]], [[0.1392]]], [[[1.7571]], [[2.2789]], [[0.8843]], [[0.8729]]], [[[0.3483]], [[0.8533]], [[1.3421]], [[1.2511]]]]]

Expected: [[[[[0]], [[0]], [[0.7609]], [[0.1392]]], [[[1.7571]], [[2.2789]], [[0.8844]], [[0.8729]]], [[[0.3483]], [[0.8533]], [[1.3421]], [[1.2511]]]]]