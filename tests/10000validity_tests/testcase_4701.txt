import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Fla38645 = tf.keras.layers.Input(shape=([4, 1]))

Fla38645 = keras.layers.Flatten(name = 'Fla38645', )(in0Fla38645)
Lay65728 = keras.layers.LayerNormalization(axis=1, epsilon=2.4173134420798696, name = 'Lay65728', )(Fla38645)
Mas40685 = keras.layers.Masking(mask_value=2, name = 'Mas40685', )(Lay65728)
model = tf.keras.models.Model(inputs=[in0Fla38645], outputs=Mas40685)
in0Fla38645 = tf.constant([[[1.562], [1.6365], [1.23], [1.2004]]])
print (np.array2string(model.predict([in0Fla38645],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Mas40685.png')

LFla38645 = flatten_layer([[[1.562], [1.6365], [1.23], [1.2004]]], Fla38645), 
LLay65728 = layer_normalization_layer(Fla38645, 1, 2.4173134420798696, Lay65728), 
LMas40685 = masking_layer(Lay65728, 2, Mas40685), 
exec_layers([LFla38645,LLay65728,LMas40685],["Fla38645","Lay65728","Mas40685"],Mas40685,"Mas40685")

Actual (Unparsed): [[0.0987816, 0.1463295, -0.1131098, -0.1320013]]

Expected (Unparsed): [[0.09878156866665337,0.14632947282214148,-0.1131097626034413,-0.1320012788853534]]

Actual:   [[0.0988, 0.1464, -0.1131, -0.132]]

Expected: [[0.0988, 0.1464, -0.1131, -0.132]]