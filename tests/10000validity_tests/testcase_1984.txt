import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Max39200 = tf.keras.layers.Input(shape=([1, 2, 1, 2]))
in1Max39200 = tf.keras.layers.Input(shape=([1, 2, 1, 2]))

Max39200 = keras.layers.Maximum(name = 'Max39200', )([in0Max39200,in1Max39200])
Zer89929 = keras.layers.ZeroPadding3D(padding=((1, 1), (1, 1), (1, 1)), name = 'Zer89929', )(Max39200)
Con15951 = keras.layers.Conv3D(4, (2, 1, 1),strides=(1, 1, 1), padding='valid', dilation_rate=(1, 1, 1), name = 'Con15951', )(Zer89929)
model = tf.keras.models.Model(inputs=[in0Max39200,in1Max39200], outputs=Con15951)
w = model.get_layer('Con15951').get_weights() 
w[0] = np.array([[[[[0.0336, 0.0964, 0.5994, 0.867], [0.2314, 0.3204, 0.0342, 0.2981]]]], [[[[0.614, 0.7402, 0.1122, 0.031], [0.4621, 0.8808, 0.6961, 0.7098]]]]])
w[1] = np.array([0, 0, 0, 0])
model.get_layer('Con15951').set_weights(w) 
in0Max39200 = tf.constant([[[[[0.0555, 0.388]], [[0.7932, 0.7781]]]]])
in1Max39200 = tf.constant([[[[[0.8561, 0.9616]], [[0.7509, 0.2128]]]]])
print (np.array2string(model.predict([in0Max39200,in1Max39200],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Con15951.png')

LMax39200 = maximum_layer([[[[[[0.0555, 0.388]], [[0.7932, 0.7781]]]]], [[[[[0.8561, 0.9616]], [[0.7509, 0.2128]]]]]], Max39200), 
LZer89929 = zero_padding3D_layer(Max39200, 1, 1, 1, 1, 1, 1, Zer89929), 
LCon15951 = conv3D_layer(Zer89929, 2, 1, 1,[[[[[0.0336, 0.0964, 0.5994, 0.867], [0.2314, 0.3204, 0.0342, 0.2981]]]], [[[[0.614, 0.7402, 0.1122, 0.031], [0.4621, 0.8808, 0.6961, 0.7098]]]]],[0, 0, 0, 0], 1, 1, 1, false, 1, 1, 1, Con15951), 
exec_layers([LMax39200,LZer89929,LCon15951],["Max39200","Zer89929","Con15951"],Con15951,"Con15951")

Actual (Unparsed): [[[[[0.0000000, 0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000, 0.0000000]], [[0.0000000, 0.0000000, 0.0000000, 0.0000000], [0.9700008, 1.4806625, 0.7654242, 0.7090828], [0.0000000, 0.0000000, 0.0000000, 0.0000000]], [[0.0000000, 0.0000000, 0.0000000, 0.0000000], [0.8465848, 1.2724771, 0.6306325, 0.5768846], [0.0000000, 0.0000000, 0.0000000, 0.0000000]], [[0.0000000, 0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000, 0.0000000]]], [[[0.0000000, 0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000, 0.0000000]], [[0.0000000, 0.0000000, 0.0000000, 0.0000000], [0.2512792, 0.3906247, 0.5460331, 1.0288917], [0.0000000, 0.0000000, 0.0000000, 0.0000000]], [[0.0000000, 0.0000000, 0.0000000, 0.0000000], [0.2067039, 0.3257677, 0.5020551, 0.9196560], [0.0000000, 0.0000000, 0.0000000, 0.0000000]], [[0.0000000, 0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000, 0.0000000]]]]]

Expected (Unparsed): [[[[[0.0,0.0,0.0,0.0],[0.0,0.0,0.0,0.0],[0.0,0.0,0.0,0.0]],[[0.0,0.0,0.0,0.0],[0.97000076,1.4806625,0.76542418,0.70908278],[0.0,0.0,0.0,0.0]],[[0.0,0.0,0.0,0.0],[0.84658481,1.27247712,0.63063245,0.57688458],[0.0,0.0,0.0,0.0]],[[0.0,0.0,0.0,0.0],[0.0,0.0,0.0,0.0],[0.0,0.0,0.0,0.0]]],[[[0.0,0.0,0.0,0.0],[0.0,0.0,0.0,0.0],[0.0,0.0,0.0,0.0]],[[0.0,0.0,0.0,0.0],[0.2512792,0.39062468000000006,0.5460330600000001,1.0288916599999998],[0.0,0.0,0.0,0.0]],[[0.0,0.0,0.0,0.0],[0.20670386000000002,0.32576772,0.5020551000000001,0.91965601],[0.0,0.0,0.0,0.0]],[[0.0,0.0,0.0,0.0],[0.0,0.0,0.0,0.0],[0.0,0.0,0.0,0.0]]]]]

Actual:   [[[[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]], [[0, 0, 0, 0], [0.9701, 1.4807, 0.7655, 0.7091], [0, 0, 0, 0]], [[0, 0, 0, 0], [0.8466, 1.2725, 0.6307, 0.5769], [0, 0, 0, 0]], [[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]], [[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]], [[0, 0, 0, 0], [0.2513, 0.3907, 0.5461, 1.0289], [0, 0, 0, 0]], [[0, 0, 0, 0], [0.2068, 0.3258, 0.5021, 0.9197], [0, 0, 0, 0]], [[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]]]]

Expected: [[[[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]], [[0, 0, 0, 0], [0.9701, 1.4807, 0.7655, 0.7091], [0, 0, 0, 0]], [[0, 0, 0, 0], [0.8466, 1.2725, 0.6307, 0.5769], [0, 0, 0, 0]], [[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]], [[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]], [[0, 0, 0, 0], [0.2513, 0.3907, 0.5461, 1.0289], [0, 0, 0, 0]], [[0, 0, 0, 0], [0.2068, 0.3258, 0.5021, 0.9197], [0, 0, 0, 0]], [[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]]]]