import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Max91768 = tf.keras.layers.Input(shape=([2, 2, 2, 1]))
in1Max91768 = tf.keras.layers.Input(shape=([2, 2, 2, 1]))
in0Max98709 = tf.keras.layers.Input(shape=([1, 1, 1]))
in1Max98709 = tf.keras.layers.Input(shape=([1, 1, 1]))
in0Zer37702 = tf.keras.layers.Input(shape=([2, 1, 2, 1]))
in0Mul31149 = tf.keras.layers.Input(shape=([2, 2, 2]))
in1Mul31149 = tf.keras.layers.Input(shape=([2, 2, 2]))
in0Con65370 = tf.keras.layers.Input(shape=([4, 5, 2]))

Max91768 = keras.layers.Maximum(name = 'Max91768', )([in0Max91768,in1Max91768])
Res64476 = keras.layers.Reshape((2, 2, 2), name = 'Res64476', )(Max91768)
Res38768 = keras.layers.Reshape((2, 4), name = 'Res38768', )(Res64476)
Loc44732 = keras.layers.LocallyConnected1D(3, (2),strides=(1), name = 'Loc44732', )(Res38768)
Res20903 = keras.layers.Reshape((1, 3, 1), name = 'Res20903', )(Loc44732)
Res92892 = keras.layers.Reshape((1, 3, 1, 1), name = 'Res92892', )(Res20903)
Zer26197 = keras.layers.ZeroPadding3D(padding=((3, 0), (0, 0), (3, 0)), name = 'Zer26197', )(Res92892)
Max98709 = keras.layers.Maximum(name = 'Max98709', )([in0Max98709,in1Max98709])
Res95641 = keras.layers.Reshape((1, 1, 1, 1), name = 'Res95641', )(Max98709)
Zer80081 = keras.layers.ZeroPadding3D(padding=((3, 0), (2, 0), (3, 0)), name = 'Zer80081', )(Res95641)
Zer37702 = keras.layers.ZeroPadding3D(padding=((1, 1), (1, 1), (1, 1)), name = 'Zer37702', )(in0Zer37702)
Max43772 = keras.layers.Maximum(name = 'Max43772', )([Zer80081,Zer37702])
Max59752 = keras.layers.Maximum(name = 'Max59752', )([Zer26197,Max43772])
Res23205 = keras.layers.Reshape((4, 3, 4), name = 'Res23205', )(Max59752)
Zer52838 = keras.layers.ZeroPadding2D(padding=((0, 0), (2, 0)), name = 'Zer52838', )(Res23205)
Mul31149 = keras.layers.Multiply(name = 'Mul31149', )([in0Mul31149,in1Mul31149])
Res26796 = keras.layers.Reshape((2, 4), name = 'Res26796', )(Mul31149)
Loc99919 = keras.layers.LocallyConnected1D(2, (2),strides=(1), name = 'Loc99919', )(Res26796)
Res98544 = keras.layers.Reshape((1, 2, 1), name = 'Res98544', )(Loc99919)
Con57909 = keras.layers.Conv2DTranspose(2, (1, 1),strides=(1, 2), padding='same', name = 'Con57909', )(Res98544)
Zer71334 = keras.layers.ZeroPadding2D(padding=((3, 0), (1, 0)), name = 'Zer71334', )(Con57909)
Con65370 = keras.layers.Concatenate(axis=3, name = 'Con65370', )([Zer71334,in0Con65370])
Min79369 = keras.layers.Minimum(name = 'Min79369', )([Zer52838,Con65370])
model = tf.keras.models.Model(inputs=[in0Max91768,in1Max91768,in0Max98709,in1Max98709,in0Zer37702,in0Mul31149,in1Mul31149,in0Con65370], outputs=Min79369)
w = model.get_layer('Loc44732').get_weights() 
w[0] = np.array([[[0.0679, 0.7364, 0.125], [0.1009, 0.5336, 0.3753], [0.0412, 0.8391, 0.756], [0.9597, 0.7632, 0.6471], [0.8345, 0.6773, 0.1041], [0.8189, 0.219, 0.1042], [0.2111, 0.7411, 0.0031], [0.086, 0.7723, 0.1529]]])
w[1] = np.array([[0, 0, 0]])
model.get_layer('Loc44732').set_weights(w) 
w = model.get_layer('Loc99919').get_weights() 
w[0] = np.array([[[0.2828, 0.4946], [0.3959, 0.2963], [0.6817, 0.9808], [0.1375, 0.5806], [0.1538, 0.7141], [0.0288, 0.5101], [0.4952, 0.7753], [0.0275, 0.5945]]])
w[1] = np.array([[0, 0]])
model.get_layer('Loc99919').set_weights(w) 
w = model.get_layer('Con57909').get_weights() 
w[0] = np.array([[[[0.5388], [0.1077]]]])
w[1] = np.array([0, 0])
model.get_layer('Con57909').set_weights(w) 
in0Max91768 = tf.constant([[[[[0.8743], [0.8782]], [[0.1317], [0.543]]], [[[0.5274], [0.2035]], [[0.6853], [0.0777]]]]])
in1Max91768 = tf.constant([[[[[0.4729], [0.1862]], [[0.0347], [0.1851]]], [[[0.1722], [0.7165]], [[0.5378], [0.2949]]]]])
in0Max98709 = tf.constant([[[[0.2887]]]])
in1Max98709 = tf.constant([[[[0.1702]]]])
in0Zer37702 = tf.constant([[[[[1.8749], [1.4318]]], [[[1.7692], [1.047]]]]])
in0Mul31149 = tf.constant([[[[0.9152, 0.9209], [0.0104, 0.1614]], [[0.9692, 0.9176], [0.8358, 0.7088]]]])
in1Mul31149 = tf.constant([[[[0.3449, 0.4869], [0.3423, 0.5851]], [[0.4735, 0.6457], [0.2796, 0.9236]]]])
in0Con65370 = tf.constant([[[[0.1326, 0.3668], [0.9579, 0.2485], [0.0453, 0.5619], [0.8434, 0.5444], [0.0236, 0.3634]], [[0.308, 0.9193], [0.5243, 0.7538], [0.7152, 0.0119], [0.2053, 0.7135], [0.6227, 0.7608]], [[0.7259, 0.2696], [0.8183, 0.7758], [0.6831, 0.4343], [0.5695, 0.451], [0.357, 0.1299]], [[0.7477, 0.1923], [0.1404, 0.5404], [0.775, 0.6787], [0.1461, 0.3239], [0.5294, 0.7732]]]])
print (np.array2string(model.predict([in0Max91768,in1Max91768,in0Max98709,in1Max98709,in0Zer37702,in0Mul31149,in1Mul31149,in0Con65370],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Min79369.png')

LMax91768 = maximum_layer([[[[[[0.8743], [0.8782]], [[0.1317], [0.543]]], [[[0.5274], [0.2035]], [[0.6853], [0.0777]]]]], [[[[[0.4729], [0.1862]], [[0.0347], [0.1851]]], [[[0.1722], [0.7165]], [[0.5378], [0.2949]]]]]], Max91768), 
LRes64476 = reshape_layer(Max91768, [2, 2, 2], Res64476), 
LRes38768 = reshape_layer(Res64476, [2, 4], Res38768), 
LLoc44732 = locally_connected1D_layer(Res38768, 2,[[[0.0679, 0.7364, 0.125], [0.1009, 0.5336, 0.3753], [0.0412, 0.8391, 0.756], [0.9597, 0.7632, 0.6471], [0.8345, 0.6773, 0.1041], [0.8189, 0.219, 0.1042], [0.2111, 0.7411, 0.0031], [0.086, 0.7723, 0.1529]]],[[0, 0, 0]], 1, Loc44732), 
LRes20903 = reshape_layer(Loc44732, [1, 3, 1], Res20903), 
LRes92892 = reshape_layer(Res20903, [1, 3, 1, 1], Res92892), 
LZer26197 = zero_padding3D_layer(Res92892, 3, 0, 0, 0, 3, 0, Zer26197), 
LMax98709 = maximum_layer([[[[[0.2887]]]], [[[[0.1702]]]]], Max98709), 
LRes95641 = reshape_layer(Max98709, [1, 1, 1, 1], Res95641), 
LZer80081 = zero_padding3D_layer(Res95641, 3, 0, 2, 0, 3, 0, Zer80081), 
LZer37702 = zero_padding3D_layer([[[[[1.8749], [1.4318]]], [[[1.7692], [1.047]]]]], 1, 1, 1, 1, 1, 1, Zer37702), 
LMax43772 = maximum_layer([Zer80081,Zer37702], Max43772), 
LMax59752 = maximum_layer([Zer26197,Max43772], Max59752), 
LRes23205 = reshape_layer(Max59752, [4, 3, 4], Res23205), 
LZer52838 = zero_padding2D_layer(Res23205, 0, 0, 2, 0, Zer52838), 
LMul31149 = multiply_layer([[[[[0.9152, 0.9209], [0.0104, 0.1614]], [[0.9692, 0.9176], [0.8358, 0.7088]]]], [[[[0.3449, 0.4869], [0.3423, 0.5851]], [[0.4735, 0.6457], [0.2796, 0.9236]]]]], Mul31149), 
LRes26796 = reshape_layer(Mul31149, [2, 4], Res26796), 
LLoc99919 = locally_connected1D_layer(Res26796, 2,[[[0.2828, 0.4946], [0.3959, 0.2963], [0.6817, 0.9808], [0.1375, 0.5806], [0.1538, 0.7141], [0.0288, 0.5101], [0.4952, 0.7753], [0.0275, 0.5945]]],[[0, 0]], 1, Loc99919), 
LRes98544 = reshape_layer(Loc99919, [1, 2, 1], Res98544), 
LCon57909 = conv2D_transpose_layer(Res98544, 1, 1,[[[[0.5388], [0.1077]]]],[0, 0], 1, 2, true, Con57909), 
LZer71334 = zero_padding2D_layer(Con57909, 3, 0, 1, 0, Zer71334), 
LCon65370 = concatenate_layer([Zer71334,[[[[0.1326, 0.3668], [0.9579, 0.2485], [0.0453, 0.5619], [0.8434, 0.5444], [0.0236, 0.3634]], [[0.308, 0.9193], [0.5243, 0.7538], [0.7152, 0.0119], [0.2053, 0.7135], [0.6227, 0.7608]], [[0.7259, 0.2696], [0.8183, 0.7758], [0.6831, 0.4343], [0.5695, 0.451], [0.357, 0.1299]], [[0.7477, 0.1923], [0.1404, 0.5404], [0.775, 0.6787], [0.1461, 0.3239], [0.5294, 0.7732]]]]], 3, Con65370), 
LMin79369 = minimum_layer([Zer52838,Con65370], Min79369), 
exec_layers([LMax91768,LRes64476,LRes38768,LLoc44732,LRes20903,LRes92892,LZer26197,LMax98709,LRes95641,LZer80081,LZer37702,LMax43772,LMax59752,LRes23205,LZer52838,LMul31149,LRes26796,LLoc99919,LRes98544,LCon57909,LZer71334,LCon65370,LMin79369],["Max91768","Res64476","Res38768","Loc44732","Res20903","Res92892","Zer26197","Max98709","Res95641","Zer80081","Zer37702","Max43772","Max59752","Res23205","Zer52838","Mul31149","Res26796","Loc99919","Res98544","Con57909","Zer71334","Con65370","Min79369"],Min79369,"Min79369")

Actual (Unparsed): [[[[0.0000000, 0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000, 0.0000000]], [[0.0000000, 0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.2053000, 0.0000000], [0.0000000, 0.0000000, 0.0000000, 0.0000000]], [[0.0000000, 0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.5695000, 0.0000000], [0.0000000, 0.0000000, 0.0000000, 0.0000000]], [[0.0000000, 0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000, 0.6787000], [0.0000000, 0.0000000, 0.0000000, 0.3239000], [0.0000000, 0.0000000, 0.0000000, 0.7732000]]]]

Expected (Unparsed): [[[[0,0,0,0],[0,0,0,0],[0,0,0,0],[0,0,0,0],[0,0,0,0]],[[0,0,0,0],[0,0,0,0],[0,0,0,0],[0,0,0.2053,0],[0,0,0,0]],[[0,0,0,0],[0,0,0,0],[0,0,0,0],[0,0,0.5695,0],[0,0,0,0]],[[0,0,0,0],[0,0,0,0],[0,0,0,0.6787],[0,0,0,0.3239],[0,0,0,0.7732]]]]

Actual:   [[[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]], [[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0.2053, 0], [0, 0, 0, 0]], [[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0.5695, 0], [0, 0, 0, 0]], [[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0.6787], [0, 0, 0, 0.3239], [0, 0, 0, 0.7732]]]]

Expected: [[[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]], [[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0.2053, 0], [0, 0, 0, 0]], [[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0.5695, 0], [0, 0, 0, 0]], [[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0.6787], [0, 0, 0, 0.3239], [0, 0, 0, 0.7732]]]]