import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Ave95810 = tf.keras.layers.Input(shape=([2, 2, 1, 2]))
in1Ave95810 = tf.keras.layers.Input(shape=([2, 2, 1, 2]))

Ave95810 = keras.layers.Average(name = 'Ave95810', )([in0Ave95810,in1Ave95810])
Res32770 = keras.layers.Reshape((2, 2, 2), name = 'Res32770', )(Ave95810)
Res36642 = keras.layers.Reshape((2, 4), name = 'Res36642', )(Res32770)
Sim62568 = keras.layers.SimpleRNN(1,name = 'Sim62568', )(Res36642)
model = tf.keras.models.Model(inputs=[in0Ave95810,in1Ave95810], outputs=Sim62568)
w = model.get_layer('Sim62568').get_weights() 
w[0] = np.array([[4], [9], [6], [4]])
w[1] = np.array([[4]])
w[2] = np.array([5])
model.get_layer('Sim62568').set_weights(w) 
in0Ave95810 = tf.constant([[[[[0.4054, 0.9254]], [[0.3554, 0.5475]]], [[[0.0074, 0.9301]], [[0.7051, 0.6267]]]]])
in1Ave95810 = tf.constant([[[[[0.4755, 0.0641]], [[0.6496, 0.6594]]], [[[0.9502, 0.6629]], [[0.3183, 0.008]]]]])
print (np.array2string(model.predict([in0Ave95810,in1Ave95810],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Sim62568.png')

LAve95810 = average_layer([[[[[[0.4054, 0.9254]], [[0.3554, 0.5475]]], [[[0.0074, 0.9301]], [[0.7051, 0.6267]]]]], [[[[[0.4755, 0.0641]], [[0.6496, 0.6594]]], [[[0.9502, 0.6629]], [[0.3183, 0.008]]]]]], Ave95810), 
LRes32770 = reshape_layer(Ave95810, [2, 2, 2], Res32770), 
LRes36642 = reshape_layer(Res32770, [2, 4], Res36642), 
LSim62568 = simple_rnn_layer(Res36642,[[4], [9], [6], [4]],[[4]],[5], Sim62568), 
exec_layers([LAve95810,LRes32770,LRes36642,LSim62568],["Ave95810","Res32770","Res36642","Sim62568"],Sim62568,"Sim62568")

Actual (Unparsed): [[1.0000000]]

Expected (Unparsed): [[1.0]]

Actual:   [[1]]

Expected: [[1]]