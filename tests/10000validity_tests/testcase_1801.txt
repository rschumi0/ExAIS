import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Mul16791 = tf.keras.layers.Input(shape=([1, 2, 2]))
in1Mul16791 = tf.keras.layers.Input(shape=([1, 2, 2]))

Mul16791 = keras.layers.Multiply(name = 'Mul16791', )([in0Mul16791,in1Mul16791])
Res52698 = keras.layers.Reshape((1, 4), name = 'Res52698', )(Mul16791)
Sep37941 = keras.layers.SeparableConv1D(2, (1),strides=(1), padding='valid', name = 'Sep37941', )(Res52698)
model = tf.keras.models.Model(inputs=[in0Mul16791,in1Mul16791], outputs=Sep37941)
w = model.get_layer('Sep37941').get_weights() 
w[0] = np.array([[[0.7905], [0.8699], [0.9368], [0.5438]]])
w[1] = np.array([[[0.1176, 0.3326], [0.2363, 0.8744], [0.7967, 0.3412], [0.9918, 0.5336]]])
w[2] = np.array([0, 0])
model.get_layer('Sep37941').set_weights(w) 
in0Mul16791 = tf.constant([[[[0.4752, 0.7121], [0.7942, 0.0069]]]])
in1Mul16791 = tf.constant([[[[0.0968, 0.9452], [0.0578, 0.7487]]]])
print (np.array2string(model.predict([in0Mul16791,in1Mul16791],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Sep37941.png')

LMul16791 = multiply_layer([[[[[0.4752, 0.7121], [0.7942, 0.0069]]]], [[[[0.0968, 0.9452], [0.0578, 0.7487]]]]], Mul16791), 
LRes52698 = reshape_layer(Mul16791, [1, 4], Res52698), 
LSep37941 = separable_conv1D_layer(Res52698, 1,[[[[0.7905], [0.8699], [0.9368], [0.5438]]],[[[0.1176, 0.3326], [0.2363, 0.8744], [0.7967, 0.3412], [0.9918, 0.5336]]]],[0, 0], 1, false, Sep37941), 
exec_layers([LMul16791,LRes52698,LSep37941],["Mul16791","Res52698","Sep37941"],Sep37941,"Sep37941")

Actual (Unparsed): [[[0.1796794, 0.5402357]]]

Expected (Unparsed): [[[0.1796793532695192,0.540235627699035]]]

Actual:   [[[0.1797, 0.5403]]]

Expected: [[[0.1797, 0.5403]]]