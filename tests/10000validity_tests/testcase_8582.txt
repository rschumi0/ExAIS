import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Ave21581 = tf.keras.layers.Input(shape=([2, 2, 1, 1]))
in1Ave21581 = tf.keras.layers.Input(shape=([2, 2, 1, 1]))
in0Min35735 = tf.keras.layers.Input(shape=([1, 2, 1]))
in1Min35735 = tf.keras.layers.Input(shape=([1, 2, 1]))
in0Mas56896 = tf.keras.layers.Input(shape=([4, 4]))
in0Con16033 = tf.keras.layers.Input(shape=([1]))
in0Con38497 = tf.keras.layers.Input(shape=([2]))

Ave21581 = keras.layers.Average(name = 'Ave21581', )([in0Ave21581,in1Ave21581])
Bat46928 = keras.layers.BatchNormalization(axis=2, epsilon=0.2554397775684149,  name = 'Bat46928', )(Ave21581)
Res93728 = keras.layers.Reshape((2, 2, 1), name = 'Res93728', )(Bat46928)
Res24355 = keras.layers.Reshape((2, 2), name = 'Res24355', )(Res93728)
Fla93695 = keras.layers.Flatten(name = 'Fla93695', )(Res24355)
Min35735 = keras.layers.Minimum(name = 'Min35735', )([in0Min35735,in1Min35735])
Res45788 = keras.layers.Reshape((1, 2), name = 'Res45788', )(Min35735)
Fla25473 = keras.layers.Flatten(name = 'Fla25473', )(Res45788)
Mas56896 = keras.layers.Masking(mask_value=2, name = 'Mas56896', )(in0Mas56896)
Res41080 = keras.layers.Reshape((4, 4, 1), name = 'Res41080', )(Mas56896)
Glo31933 = keras.layers.GlobalMaxPool2D(name = 'Glo31933', )(Res41080)
Mas15985 = keras.layers.Masking(mask_value=1, name = 'Mas15985', )(Glo31933)
Res95898 = keras.layers.Reshape((1, 1), name = 'Res95898', )(Mas15985)
Glo19382 = keras.layers.GlobalMaxPool1D(name = 'Glo19382', )(Res95898)
Con16033 = keras.layers.Concatenate(axis=1, name = 'Con16033', )([Glo19382,in0Con16033])
Mul72331 = keras.layers.Multiply(name = 'Mul72331', )([Fla25473,Con16033])
Con38497 = keras.layers.Concatenate(axis=1, name = 'Con38497', )([Mul72331,in0Con38497])
Max84255 = keras.layers.Maximum(name = 'Max84255', )([Fla93695,Con38497])
model = tf.keras.models.Model(inputs=[in0Ave21581,in1Ave21581,in0Min35735,in1Min35735,in0Mas56896,in0Con16033,in0Con38497], outputs=Max84255)
w = model.get_layer('Bat46928').get_weights() 
w[0] = np.array([0.9455, 0.7317])
w[1] = np.array([0.2532, 0.3068])
w[2] = np.array([0.0071, 0.0903])
w[3] = np.array([0.3915, 0.0416])
model.get_layer('Bat46928').set_weights(w) 
in0Ave21581 = tf.constant([[[[[0.7829]], [[0.2047]]], [[[0.8228]], [[0.228]]]]])
in1Ave21581 = tf.constant([[[[[0.7175]], [[0.1842]]], [[[0.6131]], [[0.7151]]]]])
in0Min35735 = tf.constant([[[[0.9173], [0.2789]]]])
in1Min35735 = tf.constant([[[[0.5389], [0.6445]]]])
in0Mas56896 = tf.constant([[[1.3002, 1.284, 1.1423, 1.8929], [1.1443, 1.6875, 1.7945, 1.3478], [1.1235, 1.2168, 1.477, 1.4667], [1.8987, 1.6626, 1.3326, 1.3638]]])
in0Con16033 = tf.constant([[0.5698]])
in0Con38497 = tf.constant([[0.5121, 0.7615]])
print (np.array2string(model.predict([in0Ave21581,in1Ave21581,in0Min35735,in1Min35735,in0Mas56896,in0Con16033,in0Con38497],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Max84255.png')

LAve21581 = average_layer([[[[[[0.7829]], [[0.2047]]], [[[0.8228]], [[0.228]]]]], [[[[[0.7175]], [[0.1842]]], [[[0.6131]], [[0.7151]]]]]], Ave21581), 
LBat46928 = batch_normalization_layer(Ave21581, 2, 0.2554397775684149, [0.9455, 0.7317], [0.2532, 0.3068], [0.0071, 0.0903], [0.3915, 0.0416], Bat46928), 
LRes93728 = reshape_layer(Bat46928, [2, 2, 1], Res93728), 
LRes24355 = reshape_layer(Res93728, [2, 2], Res24355), 
LFla93695 = flatten_layer(Res24355, Fla93695), 
LMin35735 = minimum_layer([[[[[0.9173], [0.2789]]]], [[[[0.5389], [0.6445]]]]], Min35735), 
LRes45788 = reshape_layer(Min35735, [1, 2], Res45788), 
LFla25473 = flatten_layer(Res45788, Fla25473), 
LMas56896 = masking_layer([[[1.3002, 1.284, 1.1423, 1.8929], [1.1443, 1.6875, 1.7945, 1.3478], [1.1235, 1.2168, 1.477, 1.4667], [1.8987, 1.6626, 1.3326, 1.3638]]], 2, Mas56896), 
LRes41080 = reshape_layer(Mas56896, [4, 4, 1], Res41080), 
LGlo31933 = global_max_pool2D_layer(Res41080, Glo31933), 
LMas15985 = masking_layer(Glo31933, 1, Mas15985), 
LRes95898 = reshape_layer(Mas15985, [1, 1], Res95898), 
LGlo19382 = global_max_pool1D_layer(Res95898, Glo19382), 
LCon16033 = concatenate_layer([Glo19382,[[0.5698]]], 1, Con16033), 
LMul72331 = multiply_layer([Fla25473,Con16033], Mul72331), 
LCon38497 = concatenate_layer([Mul72331,[[0.5121, 0.7615]]], 1, Con38497), 
LMax84255 = maximum_layer([Fla93695,Con38497], Max84255), 
exec_layers([LAve21581,LBat46928,LRes93728,LRes24355,LFla93695,LMin35735,LRes45788,LFla25473,LMas56896,LRes41080,LGlo31933,LMas15985,LRes95898,LGlo19382,LCon16033,LMul72331,LCon38497,LMax84255],["Ave21581","Bat46928","Res93728","Res24355","Fla93695","Min35735","Res45788","Fla25473","Mas56896","Res41080","Glo31933","Mas15985","Res95898","Glo19382","Con16033","Mul72331","Con38497","Max84255"],Max84255,"Max84255")

Actual (Unparsed): [[1.1267280, 0.4466251, 1.0888176, 0.8186416]]

Expected (Unparsed): [[1.126728073744105,0.44662506304396,1.0888175901238015,0.8186416254009574]]

Actual:   [[1.1268, 0.4467, 1.0889, 0.8187]]

Expected: [[1.1268, 0.4467, 1.0889, 0.8187]]