import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Max76655 = tf.keras.layers.Input(shape=([2, 1, 1]))
in1Max76655 = tf.keras.layers.Input(shape=([2, 1, 1]))

Max76655 = keras.layers.Maximum(name = 'Max76655', )([in0Max76655,in1Max76655])
Res38857 = keras.layers.Reshape((2, 1), name = 'Res38857', )(Max76655)
Max15317 = keras.layers.MaxPool1D(pool_size=(2), strides=(1), padding='same', name = 'Max15317', )(Res38857)
Res50707 = keras.layers.Reshape((2, 1, 1), name = 'Res50707', )(Max15317)
Res36603 = keras.layers.Reshape((2, 1, 1, 1), name = 'Res36603', )(Res50707)
Up_96313 = keras.layers.UpSampling3D(size=(2, 1, 2), name = 'Up_96313', )(Res36603)
Res93033 = keras.layers.Reshape((4, 1, 2), name = 'Res93033', )(Up_96313)
Sep74809 = keras.layers.SeparableConv2D(4, (4, 1),strides=(2, 2), padding='same', name = 'Sep74809', )(Res93033)
Res4540 = keras.layers.Reshape((2, 4), name = 'Res4540', )(Sep74809)
Fla64779 = keras.layers.Flatten(name = 'Fla64779', )(Res4540)
Bat71327 = keras.layers.BatchNormalization(axis=1, epsilon=0.19981150216456456,  name = 'Bat71327', )(Fla64779)
Res91723 = keras.layers.Reshape((8, 1), name = 'Res91723', )(Bat71327)
Ave37044 = keras.layers.AveragePooling1D(pool_size=(7), name = 'Ave37044', )(Res91723)
model = tf.keras.models.Model(inputs=[in0Max76655,in1Max76655], outputs=Ave37044)
w = model.get_layer('Sep74809').get_weights() 
w[0] = np.array([[[[0.8013], [0.555]]], [[[0.5664], [0.2362]]], [[[0.1211], [0.9735]]], [[[0.0916], [0.0994]]]])
w[1] = np.array([[[[0.5858, 0.9699, 0.2545, 0.4488], [0.5497, 0.0031, 0.784, 0.7543]]]])
w[2] = np.array([0, 0, 0, 0])
model.get_layer('Sep74809').set_weights(w) 
w = model.get_layer('Bat71327').get_weights() 
w[0] = np.array([0.3521, 0.5296, 0.768, 0.2595, 0.6191, 0.2167, 0.6979, 0.8444])
w[1] = np.array([0.3133, 0.6338, 0.8724, 0.8407, 0.1319, 0.0519, 0.8859, 0.3429])
w[2] = np.array([0.2445, 0.059, 0.6764, 0.0008, 0.7249, 0.2312, 0.9279, 0.2456])
w[3] = np.array([0.4529, 0.7539, 0.3842, 0.3646, 0.3479, 0.5832, 0.2225, 0.4655])
model.get_layer('Bat71327').set_weights(w) 
in0Max76655 = tf.constant([[[[0.8173]], [[0.597]]]])
in1Max76655 = tf.constant([[[[0.9325]], [[0.1585]]]])
print (np.array2string(model.predict([in0Max76655,in1Max76655],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Ave37044.png')

LMax76655 = maximum_layer([[[[[0.8173]], [[0.597]]]], [[[[0.9325]], [[0.1585]]]]], Max76655), 
LRes38857 = reshape_layer(Max76655, [2, 1], Res38857), 
LMax15317 = max_pool1D_layer(Res38857, 2, 1, true, Max15317), 
LRes50707 = reshape_layer(Max15317, [2, 1, 1], Res50707), 
LRes36603 = reshape_layer(Res50707, [2, 1, 1, 1], Res36603), 
LUp_96313 = up_sampling3D_layer(Res36603, 2, 1, 2, Up_96313), 
LRes93033 = reshape_layer(Up_96313, [4, 1, 2], Res93033), 
LSep74809 = separable_conv2D_layer(Res93033, 4, 1,[[[[[0.8013], [0.555]]], [[[0.5664], [0.2362]]], [[[0.1211], [0.9735]]], [[[0.0916], [0.0994]]]],[[[[0.5858, 0.9699, 0.2545, 0.4488], [0.5497, 0.0031, 0.784, 0.7543]]]]],[0, 0, 0, 0], 2, 2, true, Sep74809), 
LRes4540 = reshape_layer(Sep74809, [2, 4], Res4540), 
LFla64779 = flatten_layer(Res4540, Fla64779), 
LBat71327 = batch_normalization_layer(Fla64779, 1, 0.19981150216456456, [0.3521, 0.5296, 0.768, 0.2595, 0.6191, 0.2167, 0.6979, 0.8444], [0.3133, 0.6338, 0.8724, 0.8407, 0.1319, 0.0519, 0.8859, 0.3429], [0.2445, 0.059, 0.6764, 0.0008, 0.7249, 0.2312, 0.9279, 0.2456], [0.4529, 0.7539, 0.3842, 0.3646, 0.3479, 0.5832, 0.2225, 0.4655], Bat71327), 
LRes91723 = reshape_layer(Bat71327, [8, 1], Res91723), 
LAve37044 = average_pooling1D_layer(Res91723, 7, Ave37044), 
exec_layers([LMax76655,LRes38857,LMax15317,LRes50707,LRes36603,LUp_96313,LRes93033,LSep74809,LRes4540,LFla64779,LBat71327,LRes91723,LAve37044],["Max76655","Res38857","Max15317","Res50707","Res36603","Up_96313","Res93033","Sep74809","Res4540","Fla64779","Bat71327","Res91723","Ave37044"],Ave37044,"Ave37044")

Actual (Unparsed): [[[0.9122935]]]

Expected (Unparsed): [[[0.9122934791237771]]]

Actual:   [[[0.9123]]]

Expected: [[[0.9123]]]