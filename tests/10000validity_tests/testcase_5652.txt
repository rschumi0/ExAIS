import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Sub14182 = tf.keras.layers.Input(shape=([3, 3, 3]))
in1Sub14182 = tf.keras.layers.Input(shape=([3, 3, 3]))
in0Ave61220 = tf.keras.layers.Input(shape=([1, 1, 2]))
in1Ave61220 = tf.keras.layers.Input(shape=([1, 1, 2]))
in0Con10536 = tf.keras.layers.Input(shape=([3, 3, 1]))

Sub14182 = keras.layers.Subtract(name = 'Sub14182', )([in0Sub14182,in1Sub14182])
Ave61220 = keras.layers.Average(name = 'Ave61220', )([in0Ave61220,in1Ave61220])
Up_74567 = keras.layers.UpSampling2D(size=(1, 2), name = 'Up_74567', )(Ave61220)
Zer14705 = keras.layers.ZeroPadding2D(padding=((2, 0), (1, 0)), name = 'Zer14705', )(Up_74567)
Con10536 = keras.layers.Concatenate(axis=3, name = 'Con10536', )([Zer14705,in0Con10536])
Add15752 = keras.layers.Add(name = 'Add15752', )([Sub14182,Con10536])
model = tf.keras.models.Model(inputs=[in0Sub14182,in1Sub14182,in0Ave61220,in1Ave61220,in0Con10536], outputs=Add15752)
in0Sub14182 = tf.constant([[[[0.8695, 0.0311, 0.1207], [0.5795, 0.6639, 0.9438], [0.4613, 0.2935, 0.6191]], [[0.5387, 0.1956, 0.4893], [0.7322, 0.4242, 0.9824], [0.0484, 0.628, 0.4568]], [[0.7279, 0.2151, 0.8802], [0.2419, 0.9837, 0.4408], [0.4572, 0.2596, 0.5014]]]])
in1Sub14182 = tf.constant([[[[0.6792, 0.6458, 0.8601], [0.3736, 0.4752, 0.0237], [0.9516, 0.6735, 0.6534]], [[0.0559, 0.8017, 0.272], [0.4022, 0.6704, 0.0088], [0.5605, 0.0775, 0.7312]], [[0.3641, 0.1359, 0.1031], [0.6747, 0.0234, 0.1127], [0.9326, 0.6974, 0.1316]]]])
in0Ave61220 = tf.constant([[[[0.6241, 0.1564]]]])
in1Ave61220 = tf.constant([[[[0.793, 0.8051]]]])
in0Con10536 = tf.constant([[[[0.7819], [0.3159], [0.7899]], [[0.4067], [0.1542], [0.5018]], [[0.8606], [0.5006], [0.9321]]]])
print (np.array2string(model.predict([in0Sub14182,in1Sub14182,in0Ave61220,in1Ave61220,in0Con10536],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Add15752.png')

LSub14182 = subtract_layer([[[[0.8695, 0.0311, 0.1207], [0.5795, 0.6639, 0.9438], [0.4613, 0.2935, 0.6191]], [[0.5387, 0.1956, 0.4893], [0.7322, 0.4242, 0.9824], [0.0484, 0.628, 0.4568]], [[0.7279, 0.2151, 0.8802], [0.2419, 0.9837, 0.4408], [0.4572, 0.2596, 0.5014]]]], [[[[0.6792, 0.6458, 0.8601], [0.3736, 0.4752, 0.0237], [0.9516, 0.6735, 0.6534]], [[0.0559, 0.8017, 0.272], [0.4022, 0.6704, 0.0088], [0.5605, 0.0775, 0.7312]], [[0.3641, 0.1359, 0.1031], [0.6747, 0.0234, 0.1127], [0.9326, 0.6974, 0.1316]]]], Sub14182), 
LAve61220 = average_layer([[[[[0.6241, 0.1564]]]], [[[[0.793, 0.8051]]]]], Ave61220), 
LUp_74567 = up_sampling2D_layer(Ave61220, 1, 2, Up_74567), 
LZer14705 = zero_padding2D_layer(Up_74567, 2, 0, 1, 0, Zer14705), 
LCon10536 = concatenate_layer([Zer14705,[[[[0.7819], [0.3159], [0.7899]], [[0.4067], [0.1542], [0.5018]], [[0.8606], [0.5006], [0.9321]]]]], 3, Con10536), 
LAdd15752 = add_layer([Sub14182,Con10536], Add15752), 
exec_layers([LSub14182,LAve61220,LUp_74567,LZer14705,LCon10536,LAdd15752],["Sub14182","Ave61220","Up_74567","Zer14705","Con10536","Add15752"],Add15752,"Add15752")

Actual (Unparsed): [[[[0.1903000, -0.6147000, 0.0425000], [0.2059000, 0.1887000, 1.2360000], [-0.4903000, -0.3800000, 0.7556000]], [[0.4828000, -0.6061000, 0.6240000], [0.3300000, -0.2462000, 1.1278000], [-0.5121000, 0.5505000, 0.2274000]], [[0.3638000, 0.0792000, 1.6377000], [0.2757500, 1.4410500, 0.8287000], [0.2331500, 0.0429500, 1.3019000]]]]

Expected (Unparsed): [[[[0.19030000000000002,-0.6147,0.04250000000000009],[0.20590000000000003,0.18870000000000003,1.236],[-0.4903,-0.38,0.7556]],[[0.48279999999999995,-0.6061,0.624],[0.32999999999999996,-0.24619999999999997,1.1278000000000001],[-0.5121,0.5505,0.22740000000000005]],[[0.3638,0.07920000000000002,1.6377000000000002],[0.27575000000000005,1.4410500000000002,0.8287000000000001],[0.23315000000000002,0.04294999999999999,1.3019]]]]

Actual:   [[[[0.1903, -0.6147, 0.0425], [0.2059, 0.1887, 1.236], [-0.4903, -0.38, 0.7556]], [[0.4828, -0.6061, 0.624], [0.33, -0.2462, 1.1278], [-0.5121, 0.5505, 0.2274]], [[0.3638, 0.0792, 1.6377], [0.2758, 1.4411, 0.8287], [0.2332, 0.043, 1.3019]]]]

Expected: [[[[0.1904, -0.6147, 0.0426], [0.206, 0.1888, 1.236], [-0.4903, -0.38, 0.7556]], [[0.4828, -0.6061, 0.624], [0.33, -0.2461, 1.1279], [-0.5121, 0.5505, 0.2275]], [[0.3638, 0.0793, 1.6378], [0.2758, 1.4411, 0.8288], [0.2332, 0.043, 1.3019]]]]