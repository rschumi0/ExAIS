import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Dot35059 = tf.keras.layers.Input(shape=([2]))
in1Dot35059 = tf.keras.layers.Input(shape=([2]))

Dot35059 = keras.layers.Dot(axes=(1, 1), name = 'Dot35059', )([in0Dot35059,in1Dot35059])
Res85910 = keras.layers.Reshape((1, 1), name = 'Res85910', )(Dot35059)
Up_49340 = keras.layers.UpSampling1D(size=(1), name = 'Up_49340', )(Res85910)
model = tf.keras.models.Model(inputs=[in0Dot35059,in1Dot35059], outputs=Up_49340)
in0Dot35059 = tf.constant([[0.852, 0.4824]])
in1Dot35059 = tf.constant([[0.6571, 0.4885]])
print (np.array2string(model.predict([in0Dot35059,in1Dot35059],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Up_49340.png')

LDot35059 = dot_layer([[0.852, 0.4824]], [[0.6571, 0.4885]], 1, 1, Dot35059), 
LRes85910 = reshape_layer(Dot35059, [1, 1], Res85910), 
LUp_49340 = up_sampling1D_layer(Res85910, 1, Up_49340), 
exec_layers([LDot35059,LRes85910,LUp_49340],["Dot35059","Res85910","Up_49340"],Up_49340,"Up_49340")

Actual (Unparsed): [[[0.7955016]]]

Expected (Unparsed): [[[0.7955016]]]

Actual:   [[[0.7956]]]

Expected: [[[0.7956]]]