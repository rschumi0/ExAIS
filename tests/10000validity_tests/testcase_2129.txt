import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Loc67206 = tf.keras.layers.Input(shape=([1, 1]))

Loc67206 = keras.layers.LocallyConnected1D(2, (1),strides=(1), name = 'Loc67206', )(in0Loc67206)
Sim33746 = keras.layers.SimpleRNN(3,name = 'Sim33746', )(Loc67206)
model = tf.keras.models.Model(inputs=[in0Loc67206], outputs=Sim33746)
w = model.get_layer('Loc67206').get_weights() 
w[0] = np.array([[[0.699, 0.117]]])
w[1] = np.array([[0, 0]])
model.get_layer('Loc67206').set_weights(w) 
w = model.get_layer('Sim33746').get_weights() 
w[0] = np.array([[4, 10, 8], [9, 1, 3]])
w[1] = np.array([[1, 6, 9], [1, 9, 8], [8, 7, 3]])
w[2] = np.array([8, 6, 10])
model.get_layer('Sim33746').set_weights(w) 
in0Loc67206 = tf.constant([[[0.4679]]])
print (np.array2string(model.predict([in0Loc67206],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Sim33746.png')

LLoc67206 = locally_connected1D_layer([[[0.4679]]], 1,[[[0.699, 0.117]]],[[0, 0]], 1, Loc67206), 
LSim33746 = simple_rnn_layer(Loc67206,[[4, 10, 8], [9, 1, 3]],[[1, 6, 9], [1, 9, 8], [8, 7, 3]],[8, 6, 10], Sim33746), 
exec_layers([LLoc67206,LSim33746],["Loc67206","Sim33746"],Sim33746,"Sim33746")

Actual (Unparsed): [[1.0000000, 1.0000000, 1.0000000]]

Expected (Unparsed): [[0.9999999938618781,0.9999999841101203,0.9999999999841573]]

Actual:   [[1, 1, 1]]

Expected: [[1, 1, 1]]