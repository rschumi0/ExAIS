import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Sub49303 = tf.keras.layers.Input(shape=([2]))
in1Sub49303 = tf.keras.layers.Input(shape=([2]))
in0Con62497 = tf.keras.layers.Input(shape=([2, 3, 3]))
in0Sep5270 = tf.keras.layers.Input(shape=([1, 2, 1]))

Sub49303 = keras.layers.Subtract(name = 'Sub49303', )([in0Sub49303,in1Sub49303])
ReL52481 = keras.layers.ReLU(max_value=3.414812012478637, negative_slope=8.237011409810924, threshold=4.7421437881685735, name = 'ReL52481', )(Sub49303)
Res52633 = keras.layers.Reshape((2, 1), name = 'Res52633', )(ReL52481)
Res58831 = keras.layers.Reshape((2, 1, 1), name = 'Res58831', )(Res52633)
Zer8580 = keras.layers.ZeroPadding2D(padding=((0, 0), (2, 0)), name = 'Zer8580', )(Res58831)
Con62497 = keras.layers.Concatenate(axis=3, name = 'Con62497', )([Zer8580,in0Con62497])
Sep5270 = keras.layers.SeparableConv2D(4, (1, 1),strides=(1, 1), padding='valid', name = 'Sep5270', )(in0Sep5270)
Lay58162 = keras.layers.LayerNormalization(axis=1, epsilon=2.9492916098876423, name = 'Lay58162', )(Sep5270)
Zer96651 = keras.layers.ZeroPadding2D(padding=((1, 0), (1, 0)), name = 'Zer96651', )(Lay58162)
Sub86141 = keras.layers.Subtract(name = 'Sub86141', )([Con62497,Zer96651])
model = tf.keras.models.Model(inputs=[in0Sub49303,in1Sub49303,in0Con62497,in0Sep5270], outputs=Sub86141)
w = model.get_layer('Sep5270').get_weights() 
w[0] = np.array([[[[0.7859]]]])
w[1] = np.array([[[[0.3379, 0.6842, 0.8393, 0.7955]]]])
w[2] = np.array([0, 0, 0, 0])
model.get_layer('Sep5270').set_weights(w) 
in0Sub49303 = tf.constant([[0.6799, 0.9014]])
in1Sub49303 = tf.constant([[0.1375, 0.9426]])
in0Con62497 = tf.constant([[[[0.5045, 0.9362, 0.2867], [0.7293, 0.5715, 0.0245], [0.8733, 0.6931, 0.9425]], [[0.3938, 0.1683, 0.1388], [0.7687, 0.6857, 0.824], [0.8803, 0.208, 0.9569]]]])
in0Sep5270 = tf.constant([[[[0.4474], [0.001]]]])
print (np.array2string(model.predict([in0Sub49303,in1Sub49303,in0Con62497,in0Sep5270],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Sub86141.png')

LSub49303 = subtract_layer([[0.6799, 0.9014]], [[0.1375, 0.9426]], Sub49303), 
LReL52481 = relu_layer(Sub49303, 3.414812012478637, 8.237011409810924, 4.7421437881685735, ReL52481), 
LRes52633 = reshape_layer(ReL52481, [2, 1], Res52633), 
LRes58831 = reshape_layer(Res52633, [2, 1, 1], Res58831), 
LZer8580 = zero_padding2D_layer(Res58831, 0, 0, 2, 0, Zer8580), 
LCon62497 = concatenate_layer([Zer8580,[[[[0.5045, 0.9362, 0.2867], [0.7293, 0.5715, 0.0245], [0.8733, 0.6931, 0.9425]], [[0.3938, 0.1683, 0.1388], [0.7687, 0.6857, 0.824], [0.8803, 0.208, 0.9569]]]]], 3, Con62497), 
LSep5270 = separable_conv2D_layer([[[[0.4474], [0.001]]]], 1, 1,[[[[[0.7859]]]],[[[[0.3379, 0.6842, 0.8393, 0.7955]]]]],[0, 0, 0, 0], 1, 1, false, Sep5270), 
LLay58162 = layer_normalization_layer(Sep5270, 1, 2.9492916098876423, Lay58162), 
LZer96651 = zero_padding2D_layer(Lay58162, 1, 0, 1, 0, Zer96651), 
LSub86141 = subtract_layer(Con62497,Zer96651, Sub86141), 
exec_layers([LSub49303,LReL52481,LRes52633,LRes58831,LZer8580,LCon62497,LSep5270,LLay58162,LZer96651,LSub86141],["Sub49303","ReL52481","Res52633","Res58831","Zer8580","Con62497","Sep5270","Lay58162","Zer96651","Sub86141"],Sub86141,"Sub86141")

Actual (Unparsed): [[[[0.0000000, 0.5045000, 0.9362000, 0.2867000], [0.0000000, 0.7293000, 0.5715000, 0.0245000], [-34.5933376, 0.8733000, 0.6931000, 0.9425000]], [[0.0000000, 0.3938000, 0.1683000, 0.1388000], [0.0000000, 0.7687000, 0.6857000, 0.8240000], [-39.4004572, 0.8803000, 0.2080000, 0.9569000]]]]

Expected (Unparsed): [[[[0,0.5045,0.9362,0.2867],[0,0.7293,0.5715,0.0245],[-34.59333750142709,0.8733,0.6931,0.9425]],[[0,0.3938,0.1683,0.1388],[0.0,0.7687,0.6857,0.824],[-39.400457360192746,0.8803,0.208,0.9569]]]]

Actual:   [[[[0, 0.5045, 0.9362, 0.2867], [0, 0.7293, 0.5715, 0.0245], [-34.5933, 0.8733, 0.6931, 0.9425]], [[0, 0.3938, 0.1683, 0.1388], [0, 0.7687, 0.6857, 0.824], [-39.4004, 0.8803, 0.208, 0.9569]]]]

Expected: [[[[0, 0.5045, 0.9362, 0.2867], [0, 0.7293, 0.5715, 0.0245], [-34.5933, 0.8733, 0.6931, 0.9425]], [[0, 0.3938, 0.1683, 0.1388], [0, 0.7687, 0.6857, 0.824], [-39.4004, 0.8803, 0.208, 0.9569]]]]