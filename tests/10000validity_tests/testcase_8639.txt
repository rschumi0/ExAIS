import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Max13597 = tf.keras.layers.Input(shape=([1, 1, 2]))
in1Max13597 = tf.keras.layers.Input(shape=([1, 1, 2]))
in0Con52870 = tf.keras.layers.Input(shape=([3, 2, 4, 1]))
in0Ave52016 = tf.keras.layers.Input(shape=([2, 2, 2]))
in0Con34914 = tf.keras.layers.Input(shape=([3, 2, 4, 1]))
in0Bat76555 = tf.keras.layers.Input(shape=([3, 2, 4]))
in0Con47561 = tf.keras.layers.Input(shape=([3, 2, 4, 1]))
in0Min46848 = tf.keras.layers.Input(shape=([1, 1, 1, 2]))
in1Min46848 = tf.keras.layers.Input(shape=([1, 1, 1, 2]))
in0Min24163 = tf.keras.layers.Input(shape=([1, 2, 2]))
in1Min24163 = tf.keras.layers.Input(shape=([1, 2, 2]))
in0Loc2786 = tf.keras.layers.Input(shape=([1, 2, 2]))
in0Con17830 = tf.keras.layers.Input(shape=([3, 2, 6]))

Max13597 = keras.layers.Maximum(name = 'Max13597', )([in0Max13597,in1Max13597])
Res58947 = keras.layers.Reshape((1, 1, 2, 1), name = 'Res58947', )(Max13597)
Zer39331 = keras.layers.ZeroPadding3D(padding=((2, 0), (1, 0), (2, 0)), name = 'Zer39331', )(Res58947)
Con52870 = keras.layers.Concatenate(axis=4, name = 'Con52870', )([Zer39331,in0Con52870])
Ave52016 = keras.layers.AveragePooling2D(pool_size=(1, 1), strides=(3, 1), padding='valid', name = 'Ave52016', )(in0Ave52016)
Res59507 = keras.layers.Reshape((1, 2, 2, 1), name = 'Res59507', )(Ave52016)
Zer24348 = keras.layers.ZeroPadding3D(padding=((2, 0), (0, 0), (2, 0)), name = 'Zer24348', )(Res59507)
Con34914 = keras.layers.Concatenate(axis=4, name = 'Con34914', )([Zer24348,in0Con34914])
Bat76555 = keras.layers.BatchNormalization(axis=2, epsilon=0.7625124596745038,  name = 'Bat76555', )(in0Bat76555)
Res18821 = keras.layers.Reshape((3, 2, 4, 1), name = 'Res18821', )(Bat76555)
Con47561 = keras.layers.Concatenate(axis=4, name = 'Con47561', )([Res18821,in0Con47561])
Min46848 = keras.layers.Minimum(name = 'Min46848', )([in0Min46848,in1Min46848])
Zer72092 = keras.layers.ZeroPadding3D(padding=((2, 0), (1, 0), (3, 0)), name = 'Zer72092', )(Min46848)
Sub3434 = keras.layers.Subtract(name = 'Sub3434', )([Con47561,Zer72092])
Min32207 = keras.layers.Minimum(name = 'Min32207', )([Con34914,Sub3434])
Mul13813 = keras.layers.Multiply(name = 'Mul13813', )([Con52870,Min32207])
Res19465 = keras.layers.Reshape((3, 2, 8), name = 'Res19465', )(Mul13813)
Min24163 = keras.layers.Minimum(name = 'Min24163', )([in0Min24163,in1Min24163])
Loc2786 = keras.layers.LocallyConnected2D(2, (1, 1),strides=(1, 1), name = 'Loc2786', )(in0Loc2786)
ReL98610 = keras.layers.ReLU(max_value=2.906297335117921, negative_slope=4.463383189271039, threshold=0.3386091763665666, name = 'ReL98610', )(Loc2786)
Min42951 = keras.layers.Minimum(name = 'Min42951', )([Min24163,ReL98610])
Zer60880 = keras.layers.ZeroPadding2D(padding=((2, 0), (0, 0)), name = 'Zer60880', )(Min42951)
Con17830 = keras.layers.Concatenate(axis=3, name = 'Con17830', )([Zer60880,in0Con17830])
Mul72213 = keras.layers.Multiply(name = 'Mul72213', )([Res19465,Con17830])
model = tf.keras.models.Model(inputs=[in0Max13597,in1Max13597,in0Con52870,in0Ave52016,in0Con34914,in0Bat76555,in0Con47561,in0Min46848,in1Min46848,in0Min24163,in1Min24163,in0Loc2786,in0Con17830], outputs=Mul72213)
w = model.get_layer('Bat76555').get_weights() 
w[0] = np.array([0.4365, 0.7541])
w[1] = np.array([0.2733, 0.3845])
w[2] = np.array([0.9253, 0.2686])
w[3] = np.array([0.5433, 0.3629])
model.get_layer('Bat76555').set_weights(w) 
w = model.get_layer('Loc2786').get_weights() 
w[0] = np.array([[[0.21, 0.8988], [0.4273, 0.1099]], [[0.8776, 0.0171], [0.3809, 0.0064]]])
w[1] = np.array([[[0, 0], [0, 0]]])
model.get_layer('Loc2786').set_weights(w) 
in0Max13597 = tf.constant([[[[0.8005, 0.6375]]]])
in1Max13597 = tf.constant([[[[0.8723, 0.0121]]]])
in0Con52870 = tf.constant([[[[[0.7908], [0.2099], [0.4502], [0.3472]], [[0.6463], [0.7874], [0.1323], [0.8005]]], [[[0.6093], [0.6662], [0.0529], [0.0663]], [[0.8902], [0.5788], [0.7102], [0.4881]]], [[[0.2308], [0.8707], [0.2151], [0.7124]], [[0.4946], [0.7918], [0.9681], [0.1187]]]]])
in0Ave52016 = tf.constant([[[[1.8082, 1.0175], [1.6788, 1.0373]], [[1.522, 1.8134], [1.6561, 1.9518]]]])
in0Con34914 = tf.constant([[[[[0.2383], [0.8345], [0.8325], [0.9136]], [[0.9538], [0.0259], [0.2614], [0.1619]]], [[[0.7164], [0.112], [0.0161], [0.837]], [[0.4789], [0.3582], [0.9755], [0.344]]], [[[0.6639], [0.8276], [0.0266], [0.7458]], [[0.7815], [0.7561], [0.028], [0.8762]]]]])
in0Bat76555 = tf.constant([[[[1.5357, 1.7677, 1.1652, 1.4691], [1.9247, 1.3946, 1.8581, 1.0913]], [[1.6793, 1.6994, 1.6742, 1.9039], [1.388, 1.5338, 1.0989, 1.3924]], [[1.0628, 1.6669, 1.896, 1.0885], [1.1159, 1.1478, 1.2189, 1.0556]]]])
in0Con47561 = tf.constant([[[[[0.2779], [0.7587], [0.8405], [0.2645]], [[0.0599], [0.8109], [0.0609], [0.1538]]], [[[0.0392], [0.0112], [0.1834], [0.4689]], [[0.0924], [0.2988], [0.3194], [0.3426]]], [[[0.7042], [0.5019], [0.8058], [0.7882]], [[0.9681], [0.5888], [0.2434], [0.1501]]]]])
in0Min46848 = tf.constant([[[[[0.0145, 0.6892]]]]])
in1Min46848 = tf.constant([[[[[0.6047, 0.5767]]]]])
in0Min24163 = tf.constant([[[[0.07, 0.6121], [0.8581, 0.9246]]]])
in1Min24163 = tf.constant([[[[0.1486, 0.3558], [0.2458, 0.7586]]]])
in0Loc2786 = tf.constant([[[[0.8312, 0.6805], [0.7363, 0.5208]]]])
in0Con17830 = tf.constant([[[[0.6354, 0.4459, 0.0641, 0.0601, 0.2475, 0.6593], [0.8649, 0.5496, 0.8542, 0.2708, 0.1433, 0.0011]], [[0.9684, 0.3155, 0.4225, 0.6718, 0.0679, 0.5158], [0.9543, 0.9708, 0.9536, 0.008, 0.1271, 0.6574]], [[0.7748, 0.9361, 0.7229, 0.5068, 0.3162, 0.7712], [0.0109, 0.8253, 0.5963, 0.9868, 0.0729, 0.0438]]]])
print (np.array2string(model.predict([in0Max13597,in1Max13597,in0Con52870,in0Ave52016,in0Con34914,in0Bat76555,in0Con47561,in0Min46848,in1Min46848,in0Min24163,in1Min24163,in0Loc2786,in0Con17830],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Mul72213.png')

LMax13597 = maximum_layer([[[[[0.8005, 0.6375]]]], [[[[0.8723, 0.0121]]]]], Max13597), 
LRes58947 = reshape_layer(Max13597, [1, 1, 2, 1], Res58947), 
LZer39331 = zero_padding3D_layer(Res58947, 2, 0, 1, 0, 2, 0, Zer39331), 
LCon52870 = concatenate_layer([Zer39331,[[[[[0.7908], [0.2099], [0.4502], [0.3472]], [[0.6463], [0.7874], [0.1323], [0.8005]]], [[[0.6093], [0.6662], [0.0529], [0.0663]], [[0.8902], [0.5788], [0.7102], [0.4881]]], [[[0.2308], [0.8707], [0.2151], [0.7124]], [[0.4946], [0.7918], [0.9681], [0.1187]]]]]], 4, Con52870), 
LAve52016 = average_pooling2D_layer([[[[1.8082, 1.0175], [1.6788, 1.0373]], [[1.522, 1.8134], [1.6561, 1.9518]]]], 1, 1, 3, 1, false, Ave52016), 
LRes59507 = reshape_layer(Ave52016, [1, 2, 2, 1], Res59507), 
LZer24348 = zero_padding3D_layer(Res59507, 2, 0, 0, 0, 2, 0, Zer24348), 
LCon34914 = concatenate_layer([Zer24348,[[[[[0.2383], [0.8345], [0.8325], [0.9136]], [[0.9538], [0.0259], [0.2614], [0.1619]]], [[[0.7164], [0.112], [0.0161], [0.837]], [[0.4789], [0.3582], [0.9755], [0.344]]], [[[0.6639], [0.8276], [0.0266], [0.7458]], [[0.7815], [0.7561], [0.028], [0.8762]]]]]], 4, Con34914), 
LBat76555 = batch_normalization_layer([[[[1.5357, 1.7677, 1.1652, 1.4691], [1.9247, 1.3946, 1.8581, 1.0913]], [[1.6793, 1.6994, 1.6742, 1.9039], [1.388, 1.5338, 1.0989, 1.3924]], [[1.0628, 1.6669, 1.896, 1.0885], [1.1159, 1.1478, 1.2189, 1.0556]]]], 2, 0.7625124596745038, [0.4365, 0.7541], [0.2733, 0.3845], [0.9253, 0.2686], [0.5433, 0.3629], Bat76555), 
LRes18821 = reshape_layer(Bat76555, [3, 2, 4, 1], Res18821), 
LCon47561 = concatenate_layer([Res18821,[[[[[0.2779], [0.7587], [0.8405], [0.2645]], [[0.0599], [0.8109], [0.0609], [0.1538]]], [[[0.0392], [0.0112], [0.1834], [0.4689]], [[0.0924], [0.2988], [0.3194], [0.3426]]], [[[0.7042], [0.5019], [0.8058], [0.7882]], [[0.9681], [0.5888], [0.2434], [0.1501]]]]]], 4, Con47561), 
LMin46848 = minimum_layer([[[[[[0.0145, 0.6892]]]]], [[[[[0.6047, 0.5767]]]]]], Min46848), 
LZer72092 = zero_padding3D_layer(Min46848, 2, 0, 1, 0, 3, 0, Zer72092), 
LSub3434 = subtract_layer(Con47561,Zer72092, Sub3434), 
LMin32207 = minimum_layer([Con34914,Sub3434], Min32207), 
LMul13813 = multiply_layer([Con52870,Min32207], Mul13813), 
LRes19465 = reshape_layer(Mul13813, [3, 2, 8], Res19465), 
LMin24163 = minimum_layer([[[[[0.07, 0.6121], [0.8581, 0.9246]]]], [[[[0.1486, 0.3558], [0.2458, 0.7586]]]]], Min24163), 
LLoc2786 = locally_connected2D_layer([[[[0.8312, 0.6805], [0.7363, 0.5208]]]], 1, 1,[[[0.21, 0.8988], [0.4273, 0.1099]], [[0.8776, 0.0171], [0.3809, 0.0064]]],[[[0, 0], [0, 0]]], 1, 1, Loc2786), 
LReL98610 = relu_layer(Loc2786, 2.906297335117921, 4.463383189271039, 0.3386091763665666, ReL98610), 
LMin42951 = minimum_layer([Min24163,ReL98610], Min42951), 
LZer60880 = zero_padding2D_layer(Min42951, 2, 0, 0, 0, Zer60880), 
LCon17830 = concatenate_layer([Zer60880,[[[[0.6354, 0.4459, 0.0641, 0.0601, 0.2475, 0.6593], [0.8649, 0.5496, 0.8542, 0.2708, 0.1433, 0.0011]], [[0.9684, 0.3155, 0.4225, 0.6718, 0.0679, 0.5158], [0.9543, 0.9708, 0.9536, 0.008, 0.1271, 0.6574]], [[0.7748, 0.9361, 0.7229, 0.5068, 0.3162, 0.7712], [0.0109, 0.8253, 0.5963, 0.9868, 0.0729, 0.0438]]]]], 3, Con17830), 
LMul72213 = multiply_layer([Res19465,Con17830], Mul72213), 
exec_layers([LMax13597,LRes58947,LZer39331,LCon52870,LAve52016,LRes59507,LZer24348,LCon34914,LBat76555,LRes18821,LCon47561,LMin46848,LZer72092,LSub3434,LMin32207,LMul13813,LRes19465,LMin24163,LLoc2786,LReL98610,LMin42951,LZer60880,LCon17830,LMul72213],["Max13597","Res58947","Zer39331","Con52870","Ave52016","Res59507","Zer24348","Con34914","Bat76555","Res18821","Con47561","Min46848","Zer72092","Sub3434","Min32207","Mul13813","Res19465","Min24163","Loc2786","ReL98610","Min42951","Zer60880","Con17830","Mul72213"],Mul72213,"Mul72213")

Actual (Unparsed): [[[[0.0000000, 0.0000000, 0.0000000, 0.0710101, 0.0000000, 0.0225250, 0.0000000, 0.0605464], [0.0000000, 0.0000000, 0.0000000, 0.0112084, 0.0000000, 0.0021819, 0.0000000, 0.0001354]], [[0.0000000, 0.0000000, 0.0000000, 0.0023541, 0.0000000, 0.0005722, 0.0000000, 0.0160352], [0.0000000, 0.0000000, 0.0000000, 0.1678954, 0.0000000, 0.0018147, 0.0000000, 0.1099324]], [[0.0000000, 0.0545186, 0.0000000, 0.4090798, 0.0000000, 0.0028997, 0.0000000, 0.4097447], [0.0000000, -0.5567067, 0.0000000, 0.3847646, 0.5513685, 0.0267490, 0.0431942, -0.0022179]]]]

Expected (Unparsed): [[[[0,0.0,0.0,0.07101007886700002,0.0,0.02252496915,0.0,0.060546419920000004],[0,0.0,0.0,0.011208355536,0.0,0.0021818545560000004,0.0,0.00013542859]],[[0,0.0,0.0,0.00235408432,0.0,0.000572165342,0.0,0.016035226506000002],[0,0.0,0.0,0.167895433152,0.0,0.0018147030400000002,0.0,0.109932439644]],[[0.0,0.05451856509600001,0.0,0.40907975331300006,0.0,0.002899737288,0.0,0.40974466790400005],[0.0,-0.5567067469473556,0.0,0.384764631552,0.551368481699257,0.02674899024,0.04319422087350563,-0.0022179189959999996]]]]

Actual:   [[[[0, 0, 0, 0.0711, 0, 0.0226, 0, 0.0606], [0, 0, 0, 0.0113, 0, 0.0022, 0, 0.0002]], [[0, 0, 0, 0.0024, 0, 0.0006, 0, 0.0161], [0, 0, 0, 0.1679, 0, 0.0019, 0, 0.11]], [[0, 0.0546, 0, 0.4091, 0, 0.0029, 0, 0.4098], [0, -0.5567, 0, 0.3848, 0.5514, 0.0268, 0.0432, -0.0022]]]]

Expected: [[[[0, 0, 0, 0.0711, 0, 0.0226, 0, 0.0606], [0, 0, 0, 0.0113, 0, 0.0022, 0, 0.0002]], [[0, 0, 0, 0.0024, 0, 0.0006, 0, 0.0161], [0, 0, 0, 0.1679, 0, 0.0019, 0, 0.11]], [[0, 0.0546, 0, 0.4091, 0, 0.0029, 0, 0.4098], [0, -0.5567, 0, 0.3848, 0.5514, 0.0268, 0.0432, -0.0022]]]]