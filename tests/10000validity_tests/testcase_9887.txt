import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Min39409 = tf.keras.layers.Input(shape=([2, 1, 2]))
in1Min39409 = tf.keras.layers.Input(shape=([2, 1, 2]))
in0Mul86134 = tf.keras.layers.Input(shape=([2, 2]))
in1Mul86134 = tf.keras.layers.Input(shape=([2, 2]))
in0Loc9145 = tf.keras.layers.Input(shape=([2, 1, 2]))
in0Con86983 = tf.keras.layers.Input(shape=([2, 2, 2, 1]))

Min39409 = keras.layers.Minimum(name = 'Min39409', )([in0Min39409,in1Min39409])
Res65249 = keras.layers.Reshape((2, 1, 2, 1), name = 'Res65249', )(Min39409)
Con67197 = keras.layers.Conv3D(2, (1, 1, 2),strides=(1, 1, 3), padding='valid', dilation_rate=(1, 1, 1), name = 'Con67197', )(Res65249)
Zer43078 = keras.layers.ZeroPadding3D(padding=((0, 0), (1, 0), (1, 0)), name = 'Zer43078', )(Con67197)
Mul86134 = keras.layers.Multiply(name = 'Mul86134', )([in0Mul86134,in1Mul86134])
Loc79003 = keras.layers.LocallyConnected1D(2, (2),strides=(2), name = 'Loc79003', )(Mul86134)
Res77564 = keras.layers.Reshape((1, 2, 1), name = 'Res77564', )(Loc79003)
Res2628 = keras.layers.Reshape((1, 2, 1, 1), name = 'Res2628', )(Res77564)
Zer98205 = keras.layers.ZeroPadding3D(padding=((1, 0), (0, 0), (1, 0)), name = 'Zer98205', )(Res2628)
Loc9145 = keras.layers.LocallyConnected2D(2, (2, 1),strides=(1, 1), name = 'Loc9145', )(in0Loc9145)
Res9265 = keras.layers.Reshape((1, 1, 2, 1), name = 'Res9265', )(Loc9145)
Up_25302 = keras.layers.UpSampling3D(size=(2, 2, 1), name = 'Up_25302', )(Res9265)
Min67721 = keras.layers.Minimum(name = 'Min67721', )([Zer98205,Up_25302])
Con86983 = keras.layers.Concatenate(axis=4, name = 'Con86983', )([Min67721,in0Con86983])
Sub26479 = keras.layers.Subtract(name = 'Sub26479', )([Zer43078,Con86983])
model = tf.keras.models.Model(inputs=[in0Min39409,in1Min39409,in0Mul86134,in1Mul86134,in0Loc9145,in0Con86983], outputs=Sub26479)
w = model.get_layer('Con67197').get_weights() 
w[0] = np.array([[[[[0.0475, 0.566]], [[0.2612, 0.3791]]]]])
w[1] = np.array([0, 0])
model.get_layer('Con67197').set_weights(w) 
w = model.get_layer('Loc79003').get_weights() 
w[0] = np.array([[[0.501, 0.0061], [0.3381, 0.4666], [0.4871, 0.9868], [0.4392, 0.7344]]])
w[1] = np.array([[0, 0]])
model.get_layer('Loc79003').set_weights(w) 
w = model.get_layer('Loc9145').get_weights() 
w[0] = np.array([[[0.7124, 0.6952], [0.6061, 0.9975], [0.8023, 0.0446], [0.0009, 0.6906]]])
w[1] = np.array([[[0, 0]]])
model.get_layer('Loc9145').set_weights(w) 
in0Min39409 = tf.constant([[[[0.2243, 0.5602]], [[0.5745, 0.284]]]])
in1Min39409 = tf.constant([[[[0.7597, 0.479]], [[0.4384, 0.5932]]]])
in0Mul86134 = tf.constant([[[0.7953, 0.8272], [0.5812, 0.0623]]])
in1Mul86134 = tf.constant([[[0.1143, 0.1788], [0.659, 0.5197]]])
in0Loc9145 = tf.constant([[[[0.3238, 0.6278]], [[0.4542, 0.6187]]]])
in0Con86983 = tf.constant([[[[[0.0527], [0.9927]], [[0.4326], [0.0069]]], [[[0.4087], [0.1026]], [[0.8689], [0.8434]]]]])
print (np.array2string(model.predict([in0Min39409,in1Min39409,in0Mul86134,in1Mul86134,in0Loc9145,in0Con86983],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Sub26479.png')

LMin39409 = minimum_layer([[[[[0.2243, 0.5602]], [[0.5745, 0.284]]]], [[[[0.7597, 0.479]], [[0.4384, 0.5932]]]]], Min39409), 
LRes65249 = reshape_layer(Min39409, [2, 1, 2, 1], Res65249), 
LCon67197 = conv3D_layer(Res65249, 1, 1, 2,[[[[[0.0475, 0.566]], [[0.2612, 0.3791]]]]],[0, 0], 1, 1, 3, false, 1, 1, 1, Con67197), 
LZer43078 = zero_padding3D_layer(Con67197, 0, 0, 1, 0, 1, 0, Zer43078), 
LMul86134 = multiply_layer([[[[0.7953, 0.8272], [0.5812, 0.0623]]], [[[0.1143, 0.1788], [0.659, 0.5197]]]], Mul86134), 
LLoc79003 = locally_connected1D_layer(Mul86134, 2,[[[0.501, 0.0061], [0.3381, 0.4666], [0.4871, 0.9868], [0.4392, 0.7344]]],[[0, 0]], 2, Loc79003), 
LRes77564 = reshape_layer(Loc79003, [1, 2, 1], Res77564), 
LRes2628 = reshape_layer(Res77564, [1, 2, 1, 1], Res2628), 
LZer98205 = zero_padding3D_layer(Res2628, 1, 0, 0, 0, 1, 0, Zer98205), 
LLoc9145 = locally_connected2D_layer([[[[0.3238, 0.6278]], [[0.4542, 0.6187]]]], 2, 1,[[[0.7124, 0.6952], [0.6061, 0.9975], [0.8023, 0.0446], [0.0009, 0.6906]]],[[[0, 0]]], 1, 1, Loc9145), 
LRes9265 = reshape_layer(Loc9145, [1, 1, 2, 1], Res9265), 
LUp_25302 = up_sampling3D_layer(Res9265, 2, 2, 1, Up_25302), 
LMin67721 = minimum_layer([Zer98205,Up_25302], Min67721), 
LCon86983 = concatenate_layer([Min67721,[[[[[0.0527], [0.9927]], [[0.4326], [0.0069]]], [[[0.4087], [0.1026]], [[0.8689], [0.8434]]]]]], 4, Con86983), 
LSub26479 = subtract_layer(Zer43078,Con86983, Sub26479), 
exec_layers([LMin39409,LRes65249,LCon67197,LZer43078,LMul86134,LLoc79003,LRes77564,LRes2628,LZer98205,LLoc9145,LRes9265,LUp_25302,LMin67721,LCon86983,LSub26479],["Min39409","Res65249","Con67197","Zer43078","Mul86134","Loc79003","Res77564","Res2628","Zer98205","Loc9145","Res9265","Up_25302","Min67721","Con86983","Sub26479"],Sub26479,"Sub26479")

Actual (Unparsed): [[[[[0.0000000, -0.0527000], [0.0000000, -0.9927000]], [[0.0000000, -0.4326000], [0.1357691, 0.3016427]]], [[[0.0000000, -0.4087000], [-0.2963331, -0.1026000]], [[0.0000000, -0.8689000], [-0.3762944, -0.4876012]]]]]

Expected (Unparsed): [[[[[0,-0.0527],[0,-0.9927]],[[0,-0.4326],[0.13576905,0.30164269999999993]]],[[[0,-0.4087],[-0.29633309903800004,-0.1026]],[[0,-0.8689],[-0.37629436869900007,-0.48760120000000007]]]]]

Actual:   [[[[[0, -0.0527], [0, -0.9927]], [[0, -0.4326], [0.1358, 0.3017]]], [[[0, -0.4087], [-0.2963, -0.1026]], [[0, -0.8689], [-0.3762, -0.4876]]]]]

Expected: [[[[[0, -0.0527], [0, -0.9927]], [[0, -0.4326], [0.1358, 0.3017]]], [[[0, -0.4087], [-0.2963, -0.1026]], [[0, -0.8689], [-0.3762, -0.4876]]]]]