import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Ave35075 = tf.keras.layers.Input(shape=([2, 1, 1]))
in0Con9057 = tf.keras.layers.Input(shape=([6, 1, 1]))
in0Sub18875 = tf.keras.layers.Input(shape=([2, 3, 3]))
in1Sub18875 = tf.keras.layers.Input(shape=([2, 3, 3]))
in0Glo27401 = tf.keras.layers.Input(shape=([2, 2, 2]))
in0Con41162 = tf.keras.layers.Input(shape=([16]))

Ave35075 = keras.layers.AveragePooling2D(pool_size=(1, 1), strides=(1, 1), padding='same', name = 'Ave35075', )(in0Ave35075)
Con54657 = keras.layers.Conv2DTranspose(2, (1, 1),strides=(11, 1), padding='valid', name = 'Con54657', )(Ave35075)
Max14347 = keras.layers.MaxPool2D(pool_size=(1, 2), strides=(4, 1), padding='same', name = 'Max14347', )(Con54657)
Con9057 = keras.layers.Concatenate(axis=3, name = 'Con9057', )([Max14347,in0Con9057])
Sub18875 = keras.layers.Subtract(name = 'Sub18875', )([in0Sub18875,in1Sub18875])
Cro15017 = keras.layers.Cropping2D(cropping=((0, 0), (2, 0)), name = 'Cro15017', )(Sub18875)
Zer17230 = keras.layers.ZeroPadding2D(padding=((4, 0), (0, 0)), name = 'Zer17230', )(Cro15017)
Min80092 = keras.layers.Minimum(name = 'Min80092', )([Con9057,Zer17230])
Res45209 = keras.layers.Reshape((6, 3), name = 'Res45209', )(Min80092)
Fla24813 = keras.layers.Flatten(name = 'Fla24813', )(Res45209)
Glo27401 = keras.layers.GlobalAveragePooling2D(name = 'Glo27401', )(in0Glo27401)
ReL4852 = keras.layers.ReLU(max_value=3.740210716332797, negative_slope=9.70617071183316, threshold=1.048775353641509, name = 'ReL4852', )(Glo27401)
Con41162 = keras.layers.Concatenate(axis=1, name = 'Con41162', )([ReL4852,in0Con41162])
Sub46502 = keras.layers.Subtract(name = 'Sub46502', )([Fla24813,Con41162])
Res87191 = keras.layers.Reshape((18, 1), name = 'Res87191', )(Sub46502)
Res8537 = keras.layers.Reshape((18, 1, 1), name = 'Res8537', )(Res87191)
Zer2975 = keras.layers.ZeroPadding2D(padding=((1, 1), (1, 1)), name = 'Zer2975', )(Res8537)
model = tf.keras.models.Model(inputs=[in0Ave35075,in0Con9057,in0Sub18875,in1Sub18875,in0Glo27401,in0Con41162], outputs=Zer2975)
w = model.get_layer('Con54657').get_weights() 
w[0] = np.array([[[[0.2546], [0.9444]]]])
w[1] = np.array([0, 0])
model.get_layer('Con54657').set_weights(w) 
in0Ave35075 = tf.constant([[[[1.0656]], [[1.5738]]]])
in0Con9057 = tf.constant([[[[0.3006]], [[0.333]], [[0.4718]], [[0.2997]], [[0.7826]], [[0.5051]]]])
in0Sub18875 = tf.constant([[[[0.4618, 0.5004, 0.6497], [0.5924, 0.7985, 0.1097], [0.1779, 0.7736, 0.8656]], [[0.1824, 0.4715, 0.4954], [0.058, 0.5171, 0.7059], [0.8087, 0.978, 0.4177]]]])
in1Sub18875 = tf.constant([[[[0.7668, 0.2502, 0.069], [0.564, 0.1715, 0.9475], [0.5937, 0.9297, 0.1429]], [[0.8523, 0.2799, 0.1936], [0.0616, 0.3916, 0.5499], [0.6328, 0.3151, 0.6952]]]])
in0Glo27401 = tf.constant([[[[1.495, 1.9245], [1.5137, 1.8237]], [[1.6617, 1.6332], [1.1487, 1.1028]]]])
in0Con41162 = tf.constant([[0.5205, 0.688, 0.4106, 0.6303, 0.0586, 0.6483, 0.8134, 0.2859, 0.9246, 0.2636, 0.1796, 0.3926, 0.5006, 0.2775, 0.5364, 0.9213]])
print (np.array2string(model.predict([in0Ave35075,in0Con9057,in0Sub18875,in1Sub18875,in0Glo27401,in0Con41162],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Zer2975.png')

LAve35075 = average_pooling2D_layer([[[[1.0656]], [[1.5738]]]], 1, 1, 1, 1, true, Ave35075), 
LCon54657 = conv2D_transpose_layer(Ave35075, 1, 1,[[[[0.2546], [0.9444]]]],[0, 0], 11, 1, false, Con54657), 
LMax14347 = max_pool2D_layer(Con54657, 1, 2, 4, 1, true, Max14347), 
LCon9057 = concatenate_layer([Max14347,[[[[0.3006]], [[0.333]], [[0.4718]], [[0.2997]], [[0.7826]], [[0.5051]]]]], 3, Con9057), 
LSub18875 = subtract_layer([[[[0.4618, 0.5004, 0.6497], [0.5924, 0.7985, 0.1097], [0.1779, 0.7736, 0.8656]], [[0.1824, 0.4715, 0.4954], [0.058, 0.5171, 0.7059], [0.8087, 0.978, 0.4177]]]], [[[[0.7668, 0.2502, 0.069], [0.564, 0.1715, 0.9475], [0.5937, 0.9297, 0.1429]], [[0.8523, 0.2799, 0.1936], [0.0616, 0.3916, 0.5499], [0.6328, 0.3151, 0.6952]]]], Sub18875), 
LCro15017 = cropping2D_layer(Sub18875, 0, 0, 2, 0, Cro15017), 
LZer17230 = zero_padding2D_layer(Cro15017, 4, 0, 0, 0, Zer17230), 
LMin80092 = minimum_layer([Con9057,Zer17230], Min80092), 
LRes45209 = reshape_layer(Min80092, [6, 3], Res45209), 
LFla24813 = flatten_layer(Res45209, Fla24813), 
LGlo27401 = global_average_pooling2D_layer([[[[1.495, 1.9245], [1.5137, 1.8237]], [[1.6617, 1.6332], [1.1487, 1.1028]]]], Glo27401), 
LReL4852 = relu_layer(Glo27401, 3.740210716332797, 9.70617071183316, 1.048775353641509, ReL4852), 
LCon41162 = concatenate_layer([ReL4852,[[0.5205, 0.688, 0.4106, 0.6303, 0.0586, 0.6483, 0.8134, 0.2859, 0.9246, 0.2636, 0.1796, 0.3926, 0.5006, 0.2775, 0.5364, 0.9213]]], 1, Con41162), 
LSub46502 = subtract_layer(Fla24813,Con41162, Sub46502), 
LRes87191 = reshape_layer(Sub46502, [18, 1], Res87191), 
LRes8537 = reshape_layer(Res87191, [18, 1, 1], Res8537), 
LZer2975 = zero_padding2D_layer(Res8537, 1, 1, 1, 1, Zer2975), 
exec_layers([LAve35075,LCon54657,LMax14347,LCon9057,LSub18875,LCro15017,LZer17230,LMin80092,LRes45209,LFla24813,LGlo27401,LReL4852,LCon41162,LSub46502,LRes87191,LRes8537,LZer2975],["Ave35075","Con54657","Max14347","Con9057","Sub18875","Cro15017","Zer17230","Min80092","Res45209","Fla24813","Glo27401","ReL4852","Con41162","Sub46502","Res87191","Res8537","Zer2975"],Zer2975,"Zer2975")

Actual (Unparsed): [[[[0.0000000], [0.0000000], [0.0000000]], [[0.0000000], [-1.4547750], [0.0000000]], [[0.0000000], [-1.6210500], [0.0000000]], [[0.0000000], [-0.5205000], [0.0000000]], [[0.0000000], [-0.6880000], [0.0000000]], [[0.0000000], [-0.4106000], [0.0000000]], [[0.0000000], [-0.6303000], [0.0000000]], [[0.0000000], [-0.0586000], [0.0000000]], [[0.0000000], [-0.6483000], [0.0000000]], [[0.0000000], [-0.8134000], [0.0000000]], [[0.0000000], [-0.2859000], [0.0000000]], [[0.0000000], [-0.9246000], [0.0000000]], [[0.0000000], [-0.2636000], [0.0000000]], [[0.0000000], [-0.5954000], [0.0000000]], [[0.0000000], [-0.5487000], [0.0000000]], [[0.0000000], [0.2221000], [0.0000000]], [[0.0000000], [-0.2775000], [0.0000000]], [[0.0000000], [-0.5364000], [0.0000000]], [[0.0000000], [-1.1988000], [0.0000000]], [[0.0000000], [0.0000000], [0.0000000]]]]

Expected (Unparsed): [[[[0],[0],[0]],[[0],[-1.454775],[0]],[[0],[-1.62105],[0]],[[0],[-0.5205],[0]],[[0],[-0.688],[0]],[[0],[-0.4106],[0]],[[0],[-0.6303],[0]],[[0],[-0.0586],[0]],[[0],[-0.6483],[0]],[[0],[-0.8134],[0]],[[0],[-0.2859],[0]],[[0],[-0.9246],[0]],[[0],[-0.2636],[0]],[[0],[-0.5954],[0]],[[0],[-0.5487],[0]],[[0],[0.22209999999999996],[0]],[[0],[-0.2775],[0]],[[0],[-0.5364],[0]],[[0],[-1.1988],[0]],[[0],[0],[0]]]]

Actual:   [[[[0], [0], [0]], [[0], [-1.4547], [0]], [[0], [-1.621], [0]], [[0], [-0.5205], [0]], [[0], [-0.688], [0]], [[0], [-0.4106], [0]], [[0], [-0.6303], [0]], [[0], [-0.0586], [0]], [[0], [-0.6483], [0]], [[0], [-0.8134], [0]], [[0], [-0.2859], [0]], [[0], [-0.9246], [0]], [[0], [-0.2636], [0]], [[0], [-0.5954], [0]], [[0], [-0.5487], [0]], [[0], [0.2221], [0]], [[0], [-0.2775], [0]], [[0], [-0.5364], [0]], [[0], [-1.1988], [0]], [[0], [0], [0]]]]

Expected: [[[[0], [0], [0]], [[0], [-1.4547], [0]], [[0], [-1.621], [0]], [[0], [-0.5205], [0]], [[0], [-0.688], [0]], [[0], [-0.4106], [0]], [[0], [-0.6303], [0]], [[0], [-0.0586], [0]], [[0], [-0.6483], [0]], [[0], [-0.8134], [0]], [[0], [-0.2859], [0]], [[0], [-0.9246], [0]], [[0], [-0.2636], [0]], [[0], [-0.5954], [0]], [[0], [-0.5487], [0]], [[0], [0.2221], [0]], [[0], [-0.2775], [0]], [[0], [-0.5364], [0]], [[0], [-1.1988], [0]], [[0], [0], [0]]]]