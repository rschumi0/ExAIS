import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Sub13084 = tf.keras.layers.Input(shape=([3, 3]))
in1Sub13084 = tf.keras.layers.Input(shape=([3, 3]))
in0Con84350 = tf.keras.layers.Input(shape=([3, 2, 2]))
in0Sof26024 = tf.keras.layers.Input(shape=([2, 1, 2]))
in0Ave55113 = tf.keras.layers.Input(shape=([1, 2]))
in0Con53111 = tf.keras.layers.Input(shape=([2, 2, 2]))
in0Max42523 = tf.keras.layers.Input(shape=([1, 2]))
in1Max42523 = tf.keras.layers.Input(shape=([1, 2]))

Sub13084 = keras.layers.Subtract(name = 'Sub13084', )([in0Sub13084,in1Sub13084])
Sep24619 = keras.layers.SeparableConv1D(2, (3),strides=(1), padding='same', name = 'Sep24619', )(Sub13084)
Res98120 = keras.layers.Reshape((3, 2, 1), name = 'Res98120', )(Sep24619)
Con84350 = keras.layers.Concatenate(axis=3, name = 'Con84350', )([Res98120,in0Con84350])
Sof26024 = keras.layers.Softmax(axis=1, name = 'Sof26024', input_shape=(2, 1, 2))(in0Sof26024)
Res44286 = keras.layers.Reshape((2, 2), name = 'Res44286', )(Sof26024)
Ave55113 = keras.layers.AveragePooling1D(pool_size=(1), name = 'Ave55113', )(in0Ave55113)
Zer55367 = keras.layers.ZeroPadding1D(padding=((1, 0)), name = 'Zer55367', )(Ave55113)
Min21255 = keras.layers.Minimum(name = 'Min21255', )([Res44286,Zer55367])
Res1711 = keras.layers.Reshape((2, 2, 1), name = 'Res1711', )(Min21255)
Con53111 = keras.layers.Concatenate(axis=3, name = 'Con53111', )([Res1711,in0Con53111])
Max42523 = keras.layers.Maximum(name = 'Max42523', )([in0Max42523,in1Max42523])
Res26283 = keras.layers.Reshape((1, 2, 1), name = 'Res26283', )(Max42523)
Loc54198 = keras.layers.LocallyConnected2D(3, (1, 1),strides=(4, 12), name = 'Loc54198', )(Res26283)
Zer35706 = keras.layers.ZeroPadding2D(padding=((1, 0), (1, 0)), name = 'Zer35706', )(Loc54198)
Add41781 = keras.layers.Add(name = 'Add41781', )([Con53111,Zer35706])
Zer43455 = keras.layers.ZeroPadding2D(padding=((1, 0), (0, 0)), name = 'Zer43455', )(Add41781)
Add35266 = keras.layers.Add(name = 'Add35266', )([Con84350,Zer43455])
model = tf.keras.models.Model(inputs=[in0Sub13084,in1Sub13084,in0Con84350,in0Sof26024,in0Ave55113,in0Con53111,in0Max42523,in1Max42523], outputs=Add35266)
w = model.get_layer('Sep24619').get_weights() 
w[0] = np.array([[[0.062], [0.8461], [0.2275]], [[0.5358], [0.2348], [0.5139]], [[0.5663], [0.0646], [0.8419]]])
w[1] = np.array([[[0.3154, 0.7097], [0.9504, 0.1321], [0.254, 0.0201]]])
w[2] = np.array([0, 0])
model.get_layer('Sep24619').set_weights(w) 
w = model.get_layer('Loc54198').get_weights() 
w[0] = np.array([[[0.1164, 0.0735, 0.776]]])
w[1] = np.array([[[0, 0, 0]]])
model.get_layer('Loc54198').set_weights(w) 
in0Sub13084 = tf.constant([[[0.9761, 0.0278, 0.2252], [0.1639, 0.2482, 0.9285], [0.8983, 0.4927, 0.0662]]])
in1Sub13084 = tf.constant([[[0.0076, 0.2694, 0.9867], [0.7948, 0.3981, 0.9928], [0.9958, 0.7602, 0.545]]])
in0Con84350 = tf.constant([[[[0.6427, 0.7307], [0.2758, 0.5015]], [[0.0996, 0.7072], [0.8882, 0.9273]], [[0.9644, 0.9621], [0.1109, 0.3621]]]])
in0Sof26024 = tf.constant([[[[0.5801, 0.0983]], [[0.7264, 0.401]]]])
in0Ave55113 = tf.constant([[[1.5517, 1.6853]]])
in0Con53111 = tf.constant([[[[0.342, 0.128], [0.2978, 0.3534]], [[0.782, 0.7789], [0.442, 0.3867]]]])
in0Max42523 = tf.constant([[[0.7227, 0.3972]]])
in1Max42523 = tf.constant([[[0.0385, 0.8928]]])
print (np.array2string(model.predict([in0Sub13084,in1Sub13084,in0Con84350,in0Sof26024,in0Ave55113,in0Con53111,in0Max42523,in1Max42523],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Add35266.png')

LSub13084 = subtract_layer([[[0.9761, 0.0278, 0.2252], [0.1639, 0.2482, 0.9285], [0.8983, 0.4927, 0.0662]]], [[[0.0076, 0.2694, 0.9867], [0.7948, 0.3981, 0.9928], [0.9958, 0.7602, 0.545]]], Sub13084), 
LSep24619 = separable_conv1D_layer(Sub13084, 3,[[[[0.062], [0.8461], [0.2275]], [[0.5358], [0.2348], [0.5139]], [[0.5663], [0.0646], [0.8419]]],[[[0.3154, 0.7097], [0.9504, 0.1321], [0.254, 0.0201]]]],[0, 0], 1, true, Sep24619), 
LRes98120 = reshape_layer(Sep24619, [3, 2, 1], Res98120), 
LCon84350 = concatenate_layer([Res98120,[[[[0.6427, 0.7307], [0.2758, 0.5015]], [[0.0996, 0.7072], [0.8882, 0.9273]], [[0.9644, 0.9621], [0.1109, 0.3621]]]]], 3, Con84350), 
LSof26024 = softmax_layer([[[[0.5801, 0.0983]], [[0.7264, 0.401]]]], 1, Sof26024), 
LRes44286 = reshape_layer(Sof26024, [2, 2], Res44286), 
LAve55113 = average_pooling1D_layer([[[1.5517, 1.6853]]], 1, Ave55113), 
LZer55367 = zero_padding1D_layer(Ave55113, 1, 0, Zer55367), 
LMin21255 = minimum_layer([Res44286,Zer55367], Min21255), 
LRes1711 = reshape_layer(Min21255, [2, 2, 1], Res1711), 
LCon53111 = concatenate_layer([Res1711,[[[[0.342, 0.128], [0.2978, 0.3534]], [[0.782, 0.7789], [0.442, 0.3867]]]]], 3, Con53111), 
LMax42523 = maximum_layer([[[[0.7227, 0.3972]]], [[[0.0385, 0.8928]]]], Max42523), 
LRes26283 = reshape_layer(Max42523, [1, 2, 1], Res26283), 
LLoc54198 = locally_connected2D_layer(Res26283, 1, 1,[[[0.1164, 0.0735, 0.776]]],[[[0, 0, 0]]], 4, 12, Loc54198), 
LZer35706 = zero_padding2D_layer(Loc54198, 1, 0, 1, 0, Zer35706), 
LAdd41781 = add_layer([Con53111,Zer35706], Add41781), 
LZer43455 = zero_padding2D_layer(Add41781, 1, 0, 0, 0, Zer43455), 
LAdd35266 = add_layer([Con84350,Zer43455], Add35266), 
exec_layers([LSub13084,LSep24619,LRes98120,LCon84350,LSof26024,LRes44286,LAve55113,LZer55367,LMin21255,LRes1711,LCon53111,LMax42523,LRes26283,LLoc54198,LZer35706,LAdd41781,LZer43455,LAdd35266],["Sub13084","Sep24619","Res98120","Con84350","Sof26024","Res44286","Ave55113","Zer55367","Min21255","Res1711","Con53111","Max42523","Res26283","Loc54198","Zer35706","Add41781","Zer43455","Add35266"],Add35266,"Add35266")

Actual (Unparsed): [[[[-0.1252839, 0.6427000, 0.7307000], [0.0969917, 0.2758000, 0.5015000]], [[-0.5040294, 0.4416000, 0.8352000], [-0.2826590, 1.1860000, 1.2807000]], [[0.2612492, 1.7464000, 1.7410001], [0.5640980, 0.6060185, 1.3096152]]]]

Expected (Unparsed): [[[[-0.125283953666,0.6427,0.7307],[0.096991634747,0.2758,0.5015]],[[-0.50402940531,0.4416,0.8352],[-0.28265897657100003,1.186,1.2807]],[[0.2612492226092886,1.7464,1.741],[0.5640980319289817,0.60601845,1.3096152]]]]

Actual:   [[[[-0.1252, 0.6427, 0.7307], [0.097, 0.2758, 0.5015]], [[-0.504, 0.4416, 0.8352], [-0.2826, 1.186, 1.2807]], [[0.2613, 1.7464, 1.7411], [0.5641, 0.6061, 1.3097]]]]

Expected: [[[[-0.1252, 0.6427, 0.7307], [0.097, 0.2758, 0.5015]], [[-0.504, 0.4416, 0.8352], [-0.2826, 1.186, 1.2807]], [[0.2613, 1.7464, 1.741], [0.5641, 0.6061, 1.3097]]]]