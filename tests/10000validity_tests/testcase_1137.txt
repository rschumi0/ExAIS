import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Add94466 = tf.keras.layers.Input(shape=([1, 2, 1]))
in1Add94466 = tf.keras.layers.Input(shape=([1, 2, 1]))
in0Max52034 = tf.keras.layers.Input(shape=([1, 2, 1]))
in0Ave34930 = tf.keras.layers.Input(shape=([2, 1]))
in1Ave34930 = tf.keras.layers.Input(shape=([2, 1]))
in0Con37348 = tf.keras.layers.Input(shape=([2, 1]))

Add94466 = keras.layers.Add(name = 'Add94466', )([in0Add94466,in1Add94466])
Bat54057 = keras.layers.BatchNormalization(axis=1, epsilon=0.21857573067472816,  name = 'Bat54057', )(Add94466)
Max52034 = keras.layers.MaxPool2D(pool_size=(1, 2), strides=(1, 6), padding='valid', name = 'Max52034', )(in0Max52034)
Zer58991 = keras.layers.ZeroPadding2D(padding=((0, 0), (1, 0)), name = 'Zer58991', )(Max52034)
Min82504 = keras.layers.Minimum(name = 'Min82504', )([Bat54057,Zer58991])
Res95169 = keras.layers.Reshape((1, 2), name = 'Res95169', )(Min82504)
Zer73038 = keras.layers.ZeroPadding1D(padding=((1, 0)), name = 'Zer73038', )(Res95169)
Ave34930 = keras.layers.Average(name = 'Ave34930', )([in0Ave34930,in1Ave34930])
Lay50893 = keras.layers.LayerNormalization(axis=1, epsilon=1.355323029547688, name = 'Lay50893', )(Ave34930)
Con37348 = keras.layers.Concatenate(axis=2, name = 'Con37348', )([Lay50893,in0Con37348])
Mul70440 = keras.layers.Multiply(name = 'Mul70440', )([Zer73038,Con37348])
model = tf.keras.models.Model(inputs=[in0Add94466,in1Add94466,in0Max52034,in0Ave34930,in1Ave34930,in0Con37348], outputs=Mul70440)
w = model.get_layer('Bat54057').get_weights() 
w[0] = np.array([0.9374])
w[1] = np.array([0.3793])
w[2] = np.array([0.6245])
w[3] = np.array([0.7462])
model.get_layer('Bat54057').set_weights(w) 
in0Add94466 = tf.constant([[[[0.6823], [0.2931]]]])
in1Add94466 = tf.constant([[[[0.6688], [0.567]]]])
in0Max52034 = tf.constant([[[[1.3092], [1.1207]]]])
in0Ave34930 = tf.constant([[[0.7851], [0.8864]]])
in1Ave34930 = tf.constant([[[0.6356], [0.6561]]])
in0Con37348 = tf.constant([[[0.5308], [0.2457]]])
print (np.array2string(model.predict([in0Add94466,in1Add94466,in0Max52034,in0Ave34930,in1Ave34930,in0Con37348],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Mul70440.png')

LAdd94466 = add_layer([[[[[0.6823], [0.2931]]]], [[[[0.6688], [0.567]]]]], Add94466), 
LBat54057 = batch_normalization_layer(Add94466, 1, 0.21857573067472816, [0.9374], [0.3793], [0.6245], [0.7462], Bat54057), 
LMax52034 = max_pool2D_layer([[[[1.3092], [1.1207]]]], 1, 2, 1, 6, false, Max52034), 
LZer58991 = zero_padding2D_layer(Max52034, 0, 0, 1, 0, Zer58991), 
LMin82504 = minimum_layer([Bat54057,Zer58991], Min82504), 
LRes95169 = reshape_layer(Min82504, [1, 2], Res95169), 
LZer73038 = zero_padding1D_layer(Res95169, 1, 0, Zer73038), 
LAve34930 = average_layer([[[[0.7851], [0.8864]]], [[[0.6356], [0.6561]]]], Ave34930), 
LLay50893 = layer_normalization_layer(Ave34930, 1, 1.355323029547688, Lay50893), 
LCon37348 = concatenate_layer([Lay50893,[[[0.5308], [0.2457]]]], 2, Con37348), 
LMul70440 = multiply_layer([Zer73038,Con37348], Mul70440), 
exec_layers([LAdd94466,LBat54057,LMax52034,LZer58991,LMin82504,LRes95169,LZer73038,LAve34930,LLay50893,LCon37348,LMul70440],["Add94466","Bat54057","Max52034","Zer58991","Min82504","Res95169","Zer73038","Ave34930","Lay50893","Con37348","Mul70440"],Mul70440,"Mul70440")

Actual (Unparsed): [[[-0.0000000, 0.0000000], [0.0000000, 0.1484389]]]

Expected (Unparsed): [[[-0.0,0.0],[0.0,0.14843891190227013]]]

Actual:   [[[-0, 0], [0, 0.1485]]]

Expected: [[[-0, 0], [0, 0.1485]]]