import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Ave50458 = tf.keras.layers.Input(shape=([1, 1]))
in1Ave50458 = tf.keras.layers.Input(shape=([1, 1]))
in0Con99561 = tf.keras.layers.Input(shape=([2, 3]))
in0Up_94281 = tf.keras.layers.Input(shape=([1, 4]))
in0Ave29460 = tf.keras.layers.Input(shape=([2, 2, 1]))
in0Min35296 = tf.keras.layers.Input(shape=([2, 2, 1, 1]))
in1Min35296 = tf.keras.layers.Input(shape=([2, 2, 1, 1]))

Ave50458 = keras.layers.Average(name = 'Ave50458', )([in0Ave50458,in1Ave50458])
Zer31609 = keras.layers.ZeroPadding1D(padding=((1, 0)), name = 'Zer31609', )(Ave50458)
Con99561 = keras.layers.Concatenate(axis=2, name = 'Con99561', )([Zer31609,in0Con99561])
Up_94281 = keras.layers.UpSampling1D(size=(2), name = 'Up_94281', )(in0Up_94281)
Mul3898 = keras.layers.Multiply(name = 'Mul3898', )([Con99561,Up_94281])
Res80720 = keras.layers.Reshape((2, 4, 1), name = 'Res80720', )(Mul3898)
Ave29460 = keras.layers.AveragePooling2D(pool_size=(1, 1), strides=(2, 1), padding='same', name = 'Ave29460', )(in0Ave29460)
Zer4121 = keras.layers.ZeroPadding2D(padding=((1, 0), (2, 0)), name = 'Zer4121', )(Ave29460)
Ave2201 = keras.layers.Average(name = 'Ave2201', )([Res80720,Zer4121])
Res69292 = keras.layers.Reshape((2, 4, 1, 1), name = 'Res69292', )(Ave2201)
Min35296 = keras.layers.Minimum(name = 'Min35296', )([in0Min35296,in1Min35296])
Zer72200 = keras.layers.ZeroPadding3D(padding=((0, 0), (2, 0), (0, 0)), name = 'Zer72200', )(Min35296)
Add1621 = keras.layers.Add(name = 'Add1621', )([Res69292,Zer72200])
model = tf.keras.models.Model(inputs=[in0Ave50458,in1Ave50458,in0Con99561,in0Up_94281,in0Ave29460,in0Min35296,in1Min35296], outputs=Add1621)
in0Ave50458 = tf.constant([[[0.3973]]])
in1Ave50458 = tf.constant([[[0.0448]]])
in0Con99561 = tf.constant([[[0.9826, 0.3027, 0.1095], [0.0511, 0.2702, 0.8001]]])
in0Up_94281 = tf.constant([[[1.5856, 1.9242, 1.0319, 1.4563]]])
in0Ave29460 = tf.constant([[[[1.6532], [1.3938]], [[1.3735], [1.3635]]]])
in0Min35296 = tf.constant([[[[[0.2583]], [[0.3364]]], [[[0.1552]], [[0.1958]]]]])
in1Min35296 = tf.constant([[[[[0.3554]], [[0.2856]]], [[[0.5121]], [[0.106]]]]])
print (np.array2string(model.predict([in0Ave50458,in1Ave50458,in0Con99561,in0Up_94281,in0Ave29460,in0Min35296,in1Min35296],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Add1621.png')

LAve50458 = average_layer([[[[0.3973]]], [[[0.0448]]]], Ave50458), 
LZer31609 = zero_padding1D_layer(Ave50458, 1, 0, Zer31609), 
LCon99561 = concatenate_layer([Zer31609,[[[0.9826, 0.3027, 0.1095], [0.0511, 0.2702, 0.8001]]]], 2, Con99561), 
LUp_94281 = up_sampling1D_layer([[[1.5856, 1.9242, 1.0319, 1.4563]]], 2, Up_94281), 
LMul3898 = multiply_layer([Con99561,Up_94281], Mul3898), 
LRes80720 = reshape_layer(Mul3898, [2, 4, 1], Res80720), 
LAve29460 = average_pooling2D_layer([[[[1.6532], [1.3938]], [[1.3735], [1.3635]]]], 1, 1, 2, 1, true, Ave29460), 
LZer4121 = zero_padding2D_layer(Ave29460, 1, 0, 2, 0, Zer4121), 
LAve2201 = average_layer([Res80720,Zer4121], Ave2201), 
LRes69292 = reshape_layer(Ave2201, [2, 4, 1, 1], Res69292), 
LMin35296 = minimum_layer([[[[[[0.2583]], [[0.3364]]], [[[0.1552]], [[0.1958]]]]], [[[[[0.3554]], [[0.2856]]], [[[0.5121]], [[0.106]]]]]], Min35296), 
LZer72200 = zero_padding3D_layer(Min35296, 0, 0, 2, 0, 0, 0, Zer72200), 
LAdd1621 = add_layer([Res69292,Zer72200], Add1621), 
exec_layers([LAve50458,LZer31609,LCon99561,LUp_94281,LMul3898,LRes80720,LAve29460,LZer4121,LAve2201,LRes69292,LMin35296,LZer72200,LAdd1621],["Ave50458","Zer31609","Con99561","Up_94281","Mul3898","Res80720","Ave29460","Zer4121","Ave2201","Res69292","Min35296","Zer72200","Add1621"],Add1621,"Add1621")

Actual (Unparsed): [[[[[0.0000000]], [[0.9453595]], [[0.4144781]], [[0.3653324]]], [[[0.1752484]], [[0.0491633]], [[1.1212097]], [[1.3854929]]]]]

Expected (Unparsed): [[[[[0.0]],[[0.9453594599999999]],[[0.41447806499999995]],[[0.365332425]]],[[[0.17524843999999998]],[[0.049163309999999995]],[[1.1212096900000001]],[[1.385492815]]]]]

Actual:   [[[[[0]], [[0.9454]], [[0.4145]], [[0.3654]]], [[[0.1753]], [[0.0492]], [[1.1213]], [[1.3855]]]]]

Expected: [[[[[0]], [[0.9454]], [[0.4145]], [[0.3654]]], [[[0.1753]], [[0.0492]], [[1.1213]], [[1.3855]]]]]