import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Loc27400 = tf.keras.layers.Input(shape=([2, 1]))
in0Loc52135 = tf.keras.layers.Input(shape=([2, 2]))
in0Con75617 = tf.keras.layers.Input(shape=([2, 1]))
in0Zer69390 = tf.keras.layers.Input(shape=([1, 2]))

Loc27400 = keras.layers.LocallyConnected1D(4, (2),strides=(1), name = 'Loc27400', )(in0Loc27400)
Zer99771 = keras.layers.ZeroPadding1D(padding=((1, 0)), name = 'Zer99771', )(Loc27400)
Loc52135 = keras.layers.LocallyConnected1D(3, (1),strides=(1), name = 'Loc52135', )(in0Loc52135)
Max34193 = keras.layers.MaxPool1D(pool_size=(1), name = 'Max34193', )(Loc52135)
Con75617 = keras.layers.Concatenate(axis=2, name = 'Con75617', )([Max34193,in0Con75617])
Max21062 = keras.layers.Maximum(name = 'Max21062', )([Zer99771,Con75617])
Sep88431 = keras.layers.SeparableConv1D(2, (1),strides=(1), padding='same', name = 'Sep88431', )(Max21062)
Zer28611 = keras.layers.ZeroPadding1D(padding=((1, 0)), name = 'Zer28611', )(Sep88431)
Zer69390 = keras.layers.ZeroPadding1D(padding=((1, 1)), name = 'Zer69390', )(in0Zer69390)
Add10373 = keras.layers.Add(name = 'Add10373', )([Zer28611,Zer69390])
model = tf.keras.models.Model(inputs=[in0Loc27400,in0Loc52135,in0Con75617,in0Zer69390], outputs=Add10373)
w = model.get_layer('Loc27400').get_weights() 
w[0] = np.array([[[0.2879, 0.1278, 0.7024, 0.7922], [0.179, 0.8203, 0.3709, 0.0024]]])
w[1] = np.array([[0, 0, 0, 0]])
model.get_layer('Loc27400').set_weights(w) 
w = model.get_layer('Loc52135').get_weights() 
w[0] = np.array([[[0.3348, 0.2366, 0.9477], [0.2451, 0.8665, 0.8986]], [[0.7153, 0.0559, 0.3839], [0.6769, 0.9673, 0.3644]]])
w[1] = np.array([[0, 0, 0], [0, 0, 0]])
model.get_layer('Loc52135').set_weights(w) 
w = model.get_layer('Sep88431').get_weights() 
w[0] = np.array([[[0.079], [0.4939], [0.7197], [0.2102]]])
w[1] = np.array([[[0.572, 0.8822], [0.3212, 0.3087], [0.5806, 0.6232], [0.8414, 0.9543]]])
w[2] = np.array([0, 0])
model.get_layer('Sep88431').set_weights(w) 
in0Loc27400 = tf.constant([[[0.5346], [0.9655]]])
in0Loc52135 = tf.constant([[[0.2206, 0.6003], [0.6281, 0.2745]]])
in0Con75617 = tf.constant([[[0.6481], [0.8248]]])
in0Zer69390 = tf.constant([[[1.3499, 1.1374]]])
print (np.array2string(model.predict([in0Loc27400,in0Loc52135,in0Con75617,in0Zer69390],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Add10373.png')

LLoc27400 = locally_connected1D_layer([[[0.5346], [0.9655]]], 2,[[[0.2879, 0.1278, 0.7024, 0.7922], [0.179, 0.8203, 0.3709, 0.0024]]],[[0, 0, 0, 0]], 1, Loc27400), 
LZer99771 = zero_padding1D_layer(Loc27400, 1, 0, Zer99771), 
LLoc52135 = locally_connected1D_layer([[[0.2206, 0.6003], [0.6281, 0.2745]]], 1,[[[0.3348, 0.2366, 0.9477], [0.2451, 0.8665, 0.8986]], [[0.7153, 0.0559, 0.3839], [0.6769, 0.9673, 0.3644]]],[[0, 0, 0], [0, 0, 0]], 1, Loc52135), 
LMax34193 = max_pool1D_layer(Loc52135, 1, Max34193), 
LCon75617 = concatenate_layer([Max34193,[[[0.6481], [0.8248]]]], 2, Con75617), 
LMax21062 = maximum_layer([Zer99771,Con75617], Max21062), 
LSep88431 = separable_conv1D_layer(Max21062, 1,[[[[0.079], [0.4939], [0.7197], [0.2102]]],[[[0.572, 0.8822], [0.3212, 0.3087], [0.5806, 0.6232], [0.8414, 0.9543]]]],[0, 0], 1, true, Sep88431), 
LZer28611 = zero_padding1D_layer(Sep88431, 1, 0, Zer28611), 
LZer69390 = zero_padding1D_layer([[[1.3499, 1.1374]]], 1, 1, Zer69390), 
LAdd10373 = add_layer([Zer28611,Zer69390], Add10373), 
exec_layers([LLoc27400,LZer99771,LLoc52135,LMax34193,LCon75617,LMax21062,LSep88431,LZer28611,LZer69390,LAdd10373],["Loc27400","Zer99771","Loc52135","Max34193","Con75617","Max21062","Sep88431","Zer28611","Zer69390","Add10373"],Add10373,"Add10373")

Actual (Unparsed): [[[0.0000000, 0.0000000], [1.8780725, 1.7057831], [0.6175998, 0.6699174]]]

Expected (Unparsed): [[[0,0],[1.8780724907771429,1.7057830916407424],[0.6175998194882422,0.6699173982524365]]]

Actual:   [[[0, 0], [1.8781, 1.7058], [0.6176, 0.67]]]

Expected: [[[0, 0], [1.8781, 1.7058], [0.6176, 0.67]]]