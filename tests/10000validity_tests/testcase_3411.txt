import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Sof11075 = tf.keras.layers.Input(shape=([1, 2]))

Sof11075 = keras.layers.Softmax(axis=1, name = 'Sof11075', input_shape=(1, 2))(in0Sof11075)
Res80555 = keras.layers.Reshape((1, 2, 1), name = 'Res80555', )(Sof11075)
Res71015 = keras.layers.Reshape((1, 2, 1, 1), name = 'Res71015', )(Res80555)
Up_13410 = keras.layers.UpSampling3D(size=(2, 1, 1), name = 'Up_13410', )(Res71015)
model = tf.keras.models.Model(inputs=[in0Sof11075], outputs=Up_13410)
in0Sof11075 = tf.constant([[[0.4665, 0.1994]]])
print (np.array2string(model.predict([in0Sof11075],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Up_13410.png')

LSof11075 = softmax_layer([[[0.4665, 0.1994]]], 1, Sof11075), 
LRes80555 = reshape_layer(Sof11075, [1, 2, 1], Res80555), 
LRes71015 = reshape_layer(Res80555, [1, 2, 1, 1], Res71015), 
LUp_13410 = up_sampling3D_layer(Res71015, 2, 1, 1, Up_13410), 
exec_layers([LSof11075,LRes80555,LRes71015,LUp_13410],["Sof11075","Res80555","Res71015","Up_13410"],Up_13410,"Up_13410")

Actual (Unparsed): [[[[[1.0000000]], [[1.0000000]]], [[[1.0000000]], [[1.0000000]]]]]

Expected (Unparsed): [[[[[1.0]],[[1.0]]],[[[1.0]],[[1.0]]]]]

Actual:   [[[[[1]], [[1]]], [[[1]], [[1]]]]]

Expected: [[[[[1]], [[1]]], [[[1]], [[1]]]]]