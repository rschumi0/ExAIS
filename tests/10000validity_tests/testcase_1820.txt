import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Sep31958 = tf.keras.layers.Input(shape=([1, 1]))
in0Sub82627 = tf.keras.layers.Input(shape=([3, 2, 3]))
in1Sub82627 = tf.keras.layers.Input(shape=([3, 2, 3]))
in0PRe51175 = tf.keras.layers.Input(shape=([1, 1]))
in0Con1550 = tf.keras.layers.Input(shape=([35]))

Sep31958 = keras.layers.SeparableConv1D(3, (1),strides=(1), padding='valid', name = 'Sep31958', )(in0Sep31958)
Res18851 = keras.layers.Reshape((1, 3, 1), name = 'Res18851', )(Sep31958)
Res14214 = keras.layers.Reshape((1, 3, 1, 1), name = 'Res14214', )(Res18851)
Zer66565 = keras.layers.ZeroPadding3D(padding=((2, 0), (1, 0), (2, 0)), name = 'Zer66565', )(Res14214)
Sub82627 = keras.layers.Subtract(name = 'Sub82627', )([in0Sub82627,in1Sub82627])
Res28617 = keras.layers.Reshape((3, 2, 3, 1), name = 'Res28617', )(Sub82627)
PRe79484 = keras.layers.PReLU(name = 'PRe79484', )(Res28617)
Zer42370 = keras.layers.ZeroPadding3D(padding=((0, 0), (2, 0), (0, 0)), name = 'Zer42370', )(PRe79484)
Add15406 = keras.layers.Add(name = 'Add15406', )([Zer66565,Zer42370])
Res81650 = keras.layers.Reshape((3, 4, 3), name = 'Res81650', )(Add15406)
Res23426 = keras.layers.Reshape((3, 12), name = 'Res23426', )(Res81650)
Fla86007 = keras.layers.Flatten(name = 'Fla86007', )(Res23426)
PRe51175 = keras.layers.PReLU(name = 'PRe51175', input_shape=(1, 1))(in0PRe51175)
Res18876 = keras.layers.Reshape((1, 1, 1), name = 'Res18876', )(PRe51175)
Glo29650 = keras.layers.GlobalMaxPool2D(name = 'Glo29650', )(Res18876)
Con1550 = keras.layers.Concatenate(axis=1, name = 'Con1550', )([Glo29650,in0Con1550])
Ave83850 = keras.layers.Average(name = 'Ave83850', )([Fla86007,Con1550])
model = tf.keras.models.Model(inputs=[in0Sep31958,in0Sub82627,in1Sub82627,in0PRe51175,in0Con1550], outputs=Ave83850)
w = model.get_layer('Sep31958').get_weights() 
w[0] = np.array([[[0.336]]])
w[1] = np.array([[[0.2983, 0.5081, 0.3593]]])
w[2] = np.array([0, 0, 0])
model.get_layer('Sep31958').set_weights(w) 
w = model.get_layer('PRe79484').get_weights() 
w[0] = np.array([[[[0.813], [0.1567], [0.2978]], [[0.3633], [0.0403], [0.1558]]], [[[0.3332], [0.2574], [0.2956]], [[0.1236], [0.6745], [0.8576]]], [[[0.277], [0.792], [0.7107]], [[0.5371], [0.2566], [0.7075]]]])
model.get_layer('PRe79484').set_weights(w) 
w = model.get_layer('PRe51175').get_weights() 
w[0] = np.array([[0.9282]])
model.get_layer('PRe51175').set_weights(w) 
in0Sep31958 = tf.constant([[[0.2231]]])
in0Sub82627 = tf.constant([[[[0.2503, 0.1855, 0.4727], [0.8898, 0.9241, 0.5496]], [[0.4558, 0.934, 0.591], [0.7465, 0.5072, 0.8994]], [[0.7811, 0.4643, 0.6312], [0.6149, 0.6585, 0.526]]]])
in1Sub82627 = tf.constant([[[[0.664, 0.9626, 0.0203], [0.0141, 0.264, 0.013]], [[0.2202, 0.3656, 0.7003], [0.6302, 0.9415, 0.3517]], [[0.7737, 0.6243, 0.4798], [0.1595, 0.3909, 0.4092]]]])
in0PRe51175 = tf.constant([[[0.0792]]])
in0Con1550 = tf.constant([[0.4423, 0.1162, 0.9296, 0.5036, 0.9045, 0.0192, 0.0413, 0.264, 0.911, 0.8429, 0.1285, 0.0486, 0.5336, 0.252, 0.0164, 0.1651, 0.0322, 0.2083, 0.017, 0.9739, 0.6226, 0.5789, 0.5922, 0.7974, 0.9104, 0.7635, 0.6436, 0.648, 0.2622, 0.6968, 0.6677, 0.9482, 0.1691, 0.6306, 0.1261]])
print (np.array2string(model.predict([in0Sep31958,in0Sub82627,in1Sub82627,in0PRe51175,in0Con1550],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Ave83850.png')

LSep31958 = separable_conv1D_layer([[[0.2231]]], 1,[[[[0.336]]],[[[0.2983, 0.5081, 0.3593]]]],[0, 0, 0], 1, false, Sep31958), 
LRes18851 = reshape_layer(Sep31958, [1, 3, 1], Res18851), 
LRes14214 = reshape_layer(Res18851, [1, 3, 1, 1], Res14214), 
LZer66565 = zero_padding3D_layer(Res14214, 2, 0, 1, 0, 2, 0, Zer66565), 
LSub82627 = subtract_layer([[[[0.2503, 0.1855, 0.4727], [0.8898, 0.9241, 0.5496]], [[0.4558, 0.934, 0.591], [0.7465, 0.5072, 0.8994]], [[0.7811, 0.4643, 0.6312], [0.6149, 0.6585, 0.526]]]], [[[[0.664, 0.9626, 0.0203], [0.0141, 0.264, 0.013]], [[0.2202, 0.3656, 0.7003], [0.6302, 0.9415, 0.3517]], [[0.7737, 0.6243, 0.4798], [0.1595, 0.3909, 0.4092]]]], Sub82627), 
LRes28617 = reshape_layer(Sub82627, [3, 2, 3, 1], Res28617), 
LPRe79484 = prelu_layer(Res28617, [[[[0.813], [0.1567], [0.2978]], [[0.3633], [0.0403], [0.1558]]], [[[0.3332], [0.2574], [0.2956]], [[0.1236], [0.6745], [0.8576]]], [[[0.277], [0.792], [0.7107]], [[0.5371], [0.2566], [0.7075]]]], PRe79484), 
LZer42370 = zero_padding3D_layer(PRe79484, 0, 0, 2, 0, 0, 0, Zer42370), 
LAdd15406 = add_layer([Zer66565,Zer42370], Add15406), 
LRes81650 = reshape_layer(Add15406, [3, 4, 3], Res81650), 
LRes23426 = reshape_layer(Res81650, [3, 12], Res23426), 
LFla86007 = flatten_layer(Res23426, Fla86007), 
LPRe51175 = prelu_layer([[[0.0792]]], [[0.9282]], PRe51175), 
LRes18876 = reshape_layer(PRe51175, [1, 1, 1], Res18876), 
LGlo29650 = global_max_pool2D_layer(Res18876, Glo29650), 
LCon1550 = concatenate_layer([Glo29650,[[0.4423, 0.1162, 0.9296, 0.5036, 0.9045, 0.0192, 0.0413, 0.264, 0.911, 0.8429, 0.1285, 0.0486, 0.5336, 0.252, 0.0164, 0.1651, 0.0322, 0.2083, 0.017, 0.9739, 0.6226, 0.5789, 0.5922, 0.7974, 0.9104, 0.7635, 0.6436, 0.648, 0.2622, 0.6968, 0.6677, 0.9482, 0.1691, 0.6306, 0.1261]]], 1, Con1550), 
LAve83850 = average_layer([Fla86007,Con1550], Ave83850), 
exec_layers([LSep31958,LRes18851,LRes14214,LZer66565,LSub82627,LRes28617,LPRe79484,LZer42370,LAdd15406,LRes81650,LRes23426,LFla86007,LPRe51175,LRes18876,LGlo29650,LCon1550,LAve83850],["Sep31958","Res18851","Res14214","Zer66565","Sub82627","Res28617","PRe79484","Zer42370","Add15406","Res81650","Res23426","Fla86007","PRe51175","Res18876","Glo29650","Con1550","Ave83850"],Ave83850,"Ave83850")

Actual (Unparsed): [[0.0396000, 0.2211500, 0.0581000, 0.4648000, 0.2518000, 0.4522500, -0.1585690, -0.0402358, 0.3582000, 0.8933500, 0.7515000, 0.3325500, 0.0243000, 0.2668000, 0.1260000, 0.0082000, 0.0825500, 0.0161000, 0.2219500, 0.2927000, 0.4707955, 0.3694500, 0.1429823, 0.5699500, 0.3987000, 0.4552000, 0.3817500, 0.3218000, 0.3240000, 0.1422805, 0.3521000, 0.2704900, 0.5688440, 0.3122500, 0.4491000, 0.1349169]]

Expected (Unparsed): [[0.0396,0.22115,0.0581,0.4648,0.2518,0.45225,-0.15856905,-0.040235785,0.3582,0.8933500000000001,0.7515000000000001,0.33255,0.0243,0.2668,0.126,0.0082,0.08255,0.0161,0.22194999999999998,0.2927,0.47079546,0.36945000000000006,0.142982325,0.56995,0.3987,0.4552,0.38175,0.3218,0.324,0.14228052264,0.35209999999999997,0.27049,0.56884399448,0.31225,0.4491,0.13491685143999999]]

Actual:   [[0.0396, 0.2212, 0.0581, 0.4648, 0.2518, 0.4523, -0.1585, -0.0402, 0.3582, 0.8934, 0.7515, 0.3326, 0.0243, 0.2668, 0.126, 0.0082, 0.0826, 0.0161, 0.222, 0.2927, 0.4708, 0.3695, 0.143, 0.57, 0.3987, 0.4552, 0.3818, 0.3218, 0.324, 0.1423, 0.3521, 0.2705, 0.5689, 0.3123, 0.4491, 0.135]]

Expected: [[0.0396, 0.2212, 0.0581, 0.4648, 0.2518, 0.4523, -0.1585, -0.0402, 0.3582, 0.8934, 0.7516, 0.3326, 0.0243, 0.2668, 0.126, 0.0082, 0.0826, 0.0161, 0.222, 0.2927, 0.4708, 0.3695, 0.143, 0.57, 0.3987, 0.4552, 0.3818, 0.3218, 0.324, 0.1423, 0.3521, 0.2705, 0.5689, 0.3123, 0.4491, 0.135]]