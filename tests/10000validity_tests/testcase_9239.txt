import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Max76968 = tf.keras.layers.Input(shape=([2, 2]))

Max76968 = keras.layers.MaxPool1D(pool_size=(1), name = 'Max76968', )(in0Max76968)
Sim73245 = keras.layers.SimpleRNN(2,name = 'Sim73245', )(Max76968)
Res44074 = keras.layers.Reshape((2, 1), name = 'Res44074', )(Sim73245)
Ave79227 = keras.layers.AveragePooling1D(pool_size=(1), strides=(5), padding='valid', name = 'Ave79227', )(Res44074)
Den31441 = keras.layers.Dense(2,name = 'Den31441', )(Ave79227)
model = tf.keras.models.Model(inputs=[in0Max76968], outputs=Den31441)
w = model.get_layer('Sim73245').get_weights() 
w[0] = np.array([[10, 2], [7, 7]])
w[1] = np.array([[8, 2], [1, 6]])
w[2] = np.array([1, 9])
model.get_layer('Sim73245').set_weights(w) 
w = model.get_layer('Den31441').get_weights() 
w[0] = np.array([[0.652, 0.1947]])
w[1] = np.array([0.9505, 0.2973])
model.get_layer('Den31441').set_weights(w) 
in0Max76968 = tf.constant([[[1.5491, 1.0048], [1.4925, 1.7571]]])
print (np.array2string(model.predict([in0Max76968],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Den31441.png')

LMax76968 = max_pool1D_layer([[[1.5491, 1.0048], [1.4925, 1.7571]]], 1, Max76968), 
LSim73245 = simple_rnn_layer(Max76968,[[10, 2], [7, 7]],[[8, 2], [1, 6]],[1, 9], Sim73245), 
LRes44074 = reshape_layer(Sim73245, [2, 1], Res44074), 
LAve79227 = average_pooling1D_layer(Res44074, 1, 5, false, Ave79227), 
LDen31441 = dense_layer(Ave79227, [[0.652, 0.1947]],[0.9505, 0.2973], Den31441), 
exec_layers([LMax76968,LSim73245,LRes44074,LAve79227,LDen31441],["Max76968","Sim73245","Res44074","Ave79227","Den31441"],Den31441,"Den31441")

Actual (Unparsed): [[[1.6025000, 0.4920000]]]

Expected (Unparsed): [[[1.6025,0.492]]]

Actual:   [[[1.6025, 0.492]]]

Expected: [[[1.6025, 0.492]]]