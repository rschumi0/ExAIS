import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Min18863 = tf.keras.layers.Input(shape=([1, 1]))
in1Min18863 = tf.keras.layers.Input(shape=([1, 1]))
in0Add119 = tf.keras.layers.Input(shape=([2, 1]))
in1Add119 = tf.keras.layers.Input(shape=([2, 1]))

Min18863 = keras.layers.Minimum(name = 'Min18863', )([in0Min18863,in1Min18863])
Zer44171 = keras.layers.ZeroPadding1D(padding=((1, 0)), name = 'Zer44171', )(Min18863)
Add119 = keras.layers.Add(name = 'Add119', )([in0Add119,in1Add119])
Mul46121 = keras.layers.Multiply(name = 'Mul46121', )([Zer44171,Add119])
Glo51617 = keras.layers.GlobalMaxPool1D(name = 'Glo51617', )(Mul46121)
model = tf.keras.models.Model(inputs=[in0Min18863,in1Min18863,in0Add119,in1Add119], outputs=Glo51617)
in0Min18863 = tf.constant([[[0.615]]])
in1Min18863 = tf.constant([[[0.8608]]])
in0Add119 = tf.constant([[[0.3194], [0.7409]]])
in1Add119 = tf.constant([[[0.0754], [0.8279]]])
print (np.array2string(model.predict([in0Min18863,in1Min18863,in0Add119,in1Add119],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Glo51617.png')

LMin18863 = minimum_layer([[[[0.615]]], [[[0.8608]]]], Min18863), 
LZer44171 = zero_padding1D_layer(Min18863, 1, 0, Zer44171), 
LAdd119 = add_layer([[[[0.3194], [0.7409]]], [[[0.0754], [0.8279]]]], Add119), 
LMul46121 = multiply_layer([Zer44171,Add119], Mul46121), 
LGlo51617 = global_max_pool1D_layer(Mul46121, Glo51617), 
exec_layers([LMin18863,LZer44171,LAdd119,LMul46121,LGlo51617],["Min18863","Zer44171","Add119","Mul46121","Glo51617"],Glo51617,"Glo51617")

Actual (Unparsed): [[0.9648120]]

Expected (Unparsed): [[0.964812]]

Actual:   [[0.9649]]

Expected: [[0.9649]]