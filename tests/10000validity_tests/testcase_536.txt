import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Ave23886 = tf.keras.layers.Input(shape=([1, 1, 2]))
in1Ave23886 = tf.keras.layers.Input(shape=([1, 1, 2]))

Ave23886 = keras.layers.Average(name = 'Ave23886', )([in0Ave23886,in1Ave23886])
Res69935 = keras.layers.Reshape((1, 2), name = 'Res69935', )(Ave23886)
Sim33757 = keras.layers.SimpleRNN(1,name = 'Sim33757', )(Res69935)
model = tf.keras.models.Model(inputs=[in0Ave23886,in1Ave23886], outputs=Sim33757)
w = model.get_layer('Sim33757').get_weights() 
w[0] = np.array([[10], [7]])
w[1] = np.array([[3]])
w[2] = np.array([7])
model.get_layer('Sim33757').set_weights(w) 
in0Ave23886 = tf.constant([[[[0.6142, 0.5009]]]])
in1Ave23886 = tf.constant([[[[0.8382, 0.1706]]]])
print (np.array2string(model.predict([in0Ave23886,in1Ave23886],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Sim33757.png')

LAve23886 = average_layer([[[[[0.6142, 0.5009]]]], [[[[0.8382, 0.1706]]]]], Ave23886), 
LRes69935 = reshape_layer(Ave23886, [1, 2], Res69935), 
LSim33757 = simple_rnn_layer(Res69935,[[10], [7]],[[3]],[7], Sim33757), 
exec_layers([LAve23886,LRes69935,LSim33757],["Ave23886","Res69935","Sim33757"],Sim33757,"Sim33757")

Actual (Unparsed): [[1.0000000]]

Expected (Unparsed): [[0.9999999999999926]]

Actual:   [[1]]

Expected: [[1]]