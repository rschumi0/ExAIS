import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Mul18876 = tf.keras.layers.Input(shape=([1, 1, 1]))
in1Mul18876 = tf.keras.layers.Input(shape=([1, 1, 1]))

Mul18876 = keras.layers.Multiply(name = 'Mul18876', )([in0Mul18876,in1Mul18876])
Res63867 = keras.layers.Reshape((1, 1), name = 'Res63867', )(Mul18876)
Glo6490 = keras.layers.GlobalMaxPool1D(name = 'Glo6490', )(Res63867)
Res74232 = keras.layers.Reshape((1, 1), name = 'Res74232', )(Glo6490)
Up_61147 = keras.layers.UpSampling1D(size=(2), name = 'Up_61147', )(Res74232)
model = tf.keras.models.Model(inputs=[in0Mul18876,in1Mul18876], outputs=Up_61147)
in0Mul18876 = tf.constant([[[[0.0395]]]])
in1Mul18876 = tf.constant([[[[0.0529]]]])
print (np.array2string(model.predict([in0Mul18876,in1Mul18876],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Up_61147.png')

LMul18876 = multiply_layer([[[[[0.0395]]]], [[[[0.0529]]]]], Mul18876), 
LRes63867 = reshape_layer(Mul18876, [1, 1], Res63867), 
LGlo6490 = global_max_pool1D_layer(Res63867, Glo6490), 
LRes74232 = reshape_layer(Glo6490, [1, 1], Res74232), 
LUp_61147 = up_sampling1D_layer(Res74232, 2, Up_61147), 
exec_layers([LMul18876,LRes63867,LGlo6490,LRes74232,LUp_61147],["Mul18876","Res63867","Glo6490","Res74232","Up_61147"],Up_61147,"Up_61147")

Actual (Unparsed): [[[0.0020896], [0.0020896]]]

Expected (Unparsed): [[[0.00208955],[0.00208955]]]

Actual:   [[[0.0021], [0.0021]]]

Expected: [[[0.0021], [0.0021]]]