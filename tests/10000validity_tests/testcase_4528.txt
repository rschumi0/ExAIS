import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Add79216 = tf.keras.layers.Input(shape=([1, 1, 1, 2]))
in1Add79216 = tf.keras.layers.Input(shape=([1, 1, 1, 2]))
in0Thr42518 = tf.keras.layers.Input(shape=([1, 1, 1, 1]))
in0Con55379 = tf.keras.layers.Input(shape=([1, 1, 1, 1]))
in0Con48574 = tf.keras.layers.Input(shape=([2, 2, 3, 2]))
in0Ave4159 = tf.keras.layers.Input(shape=([2, 2, 1, 1]))
in1Ave4159 = tf.keras.layers.Input(shape=([2, 2, 1, 1]))
in0Con86103 = tf.keras.layers.Input(shape=([2, 2, 3, 3]))
in0Up_5940 = tf.keras.layers.Input(shape=([1, 1, 2, 4]))

Add79216 = keras.layers.Add(name = 'Add79216', )([in0Add79216,in1Add79216])
Thr42518 = keras.layers.ThresholdedReLU(theta=5.527806214831377, name = 'Thr42518', input_shape=(1, 1, 1, 1))(in0Thr42518)
Con55379 = keras.layers.Concatenate(axis=4, name = 'Con55379', )([Thr42518,in0Con55379])
Ave57262 = keras.layers.Average(name = 'Ave57262', )([Add79216,Con55379])
Zer86490 = keras.layers.ZeroPadding3D(padding=((1, 0), (1, 0), (2, 0)), name = 'Zer86490', )(Ave57262)
Con48574 = keras.layers.Concatenate(axis=4, name = 'Con48574', )([Zer86490,in0Con48574])
Ave4159 = keras.layers.Average(name = 'Ave4159', )([in0Ave4159,in1Ave4159])
Zer7251 = keras.layers.ZeroPadding3D(padding=((0, 0), (0, 0), (2, 0)), name = 'Zer7251', )(Ave4159)
Con86103 = keras.layers.Concatenate(axis=4, name = 'Con86103', )([Zer7251,in0Con86103])
Up_5940 = keras.layers.UpSampling3D(size=(1, 1, 1), name = 'Up_5940', )(in0Up_5940)
Zer7279 = keras.layers.ZeroPadding3D(padding=((1, 0), (1, 0), (1, 0)), name = 'Zer7279', )(Up_5940)
Add95225 = keras.layers.Add(name = 'Add95225', )([Con86103,Zer7279])
Ave69119 = keras.layers.Average(name = 'Ave69119', )([Con48574,Add95225])
Fla29043 = keras.layers.Flatten(name = 'Fla29043', )(Ave69119)
model = tf.keras.models.Model(inputs=[in0Add79216,in1Add79216,in0Thr42518,in0Con55379,in0Con48574,in0Ave4159,in1Ave4159,in0Con86103,in0Up_5940], outputs=Fla29043)
in0Add79216 = tf.constant([[[[[0.8669, 0.6464]]]]])
in1Add79216 = tf.constant([[[[[0.0265, 0.7896]]]]])
in0Thr42518 = tf.constant([[[[[0.7532]]]]])
in0Con55379 = tf.constant([[[[[0.9171]]]]])
in0Con48574 = tf.constant([[[[[0.6186, 0.7779], [0.5852, 0.1862], [0.9579, 0.5229]], [[0.4397, 0.5677], [0.5094, 0.0296], [0.7832, 0.5014]]], [[[0.1061, 0.0482], [0.9052, 0.4332], [0.8613, 0.4921]], [[0.1285, 0.8547], [0.0024, 0.5207], [0.4232, 0.7194]]]]])
in0Ave4159 = tf.constant([[[[[0.815]], [[0.5128]]], [[[0.5685]], [[0.0159]]]]])
in1Ave4159 = tf.constant([[[[[0.5429]], [[0.5063]]], [[[0.8968]], [[0.9606]]]]])
in0Con86103 = tf.constant([[[[[0.3504, 0.9049, 0.9512], [0.0817, 0.4643, 0.2339], [0.8188, 0.6062, 0.6295]], [[0.2035, 0.2226, 0.9574], [0.3422, 0.6652, 0.8249], [0.1875, 0.2197, 0.559]]], [[[0.0216, 0.0209, 0.1985], [0.9176, 0.1008, 0.7421], [0.7438, 0.7849, 0.2056]], [[0.2051, 0.3665, 0.3515], [0.068, 0.7025, 0.6495], [0.3661, 0.6492, 0.0851]]]]])
in0Up_5940 = tf.constant([[[[[1.5916, 1.2459, 1.7347, 1.4377], [1.5685, 1.2404, 1.395, 1.9385]]]]])
print (np.array2string(model.predict([in0Add79216,in1Add79216,in0Thr42518,in0Con55379,in0Con48574,in0Ave4159,in1Ave4159,in0Con86103,in0Up_5940],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Fla29043.png')

LAdd79216 = add_layer([[[[[[0.8669, 0.6464]]]]], [[[[[0.0265, 0.7896]]]]]], Add79216), 
LThr42518 = thresholded_relu_layer([[[[[0.7532]]]]], 5.527806214831377, Thr42518), 
LCon55379 = concatenate_layer([Thr42518,[[[[[0.9171]]]]]], 4, Con55379), 
LAve57262 = average_layer([Add79216,Con55379], Ave57262), 
LZer86490 = zero_padding3D_layer(Ave57262, 1, 0, 1, 0, 2, 0, Zer86490), 
LCon48574 = concatenate_layer([Zer86490,[[[[[0.6186, 0.7779], [0.5852, 0.1862], [0.9579, 0.5229]], [[0.4397, 0.5677], [0.5094, 0.0296], [0.7832, 0.5014]]], [[[0.1061, 0.0482], [0.9052, 0.4332], [0.8613, 0.4921]], [[0.1285, 0.8547], [0.0024, 0.5207], [0.4232, 0.7194]]]]]], 4, Con48574), 
LAve4159 = average_layer([[[[[[0.815]], [[0.5128]]], [[[0.5685]], [[0.0159]]]]], [[[[[0.5429]], [[0.5063]]], [[[0.8968]], [[0.9606]]]]]], Ave4159), 
LZer7251 = zero_padding3D_layer(Ave4159, 0, 0, 0, 0, 2, 0, Zer7251), 
LCon86103 = concatenate_layer([Zer7251,[[[[[0.3504, 0.9049, 0.9512], [0.0817, 0.4643, 0.2339], [0.8188, 0.6062, 0.6295]], [[0.2035, 0.2226, 0.9574], [0.3422, 0.6652, 0.8249], [0.1875, 0.2197, 0.559]]], [[[0.0216, 0.0209, 0.1985], [0.9176, 0.1008, 0.7421], [0.7438, 0.7849, 0.2056]], [[0.2051, 0.3665, 0.3515], [0.068, 0.7025, 0.6495], [0.3661, 0.6492, 0.0851]]]]]], 4, Con86103), 
LUp_5940 = up_sampling3D_layer([[[[[1.5916, 1.2459, 1.7347, 1.4377], [1.5685, 1.2404, 1.395, 1.9385]]]]], 1, 1, 1, Up_5940), 
LZer7279 = zero_padding3D_layer(Up_5940, 1, 0, 1, 0, 1, 0, Zer7279), 
LAdd95225 = add_layer([Con86103,Zer7279], Add95225), 
LAve69119 = average_layer([Con48574,Add95225], Ave69119), 
LFla29043 = flatten_layer(Ave69119, Fla29043), 
exec_layers([LAdd79216,LThr42518,LCon55379,LAve57262,LZer86490,LCon48574,LAve4159,LZer7251,LCon86103,LUp_5940,LZer7279,LAdd95225,LAve69119,LFla29043],["Add79216","Thr42518","Con55379","Ave57262","Zer86490","Con48574","Ave4159","Zer7251","Con86103","Up_5940","Zer7279","Add95225","Ave69119","Fla29043"],Fla29043,"Fla29043")

Actual (Unparsed): [[0.0000000, 0.1752000, 0.7617500, 0.8645500, 0.0000000, 0.0408500, 0.5247500, 0.2100500, 0.3394750, 0.4094000, 0.7820500, 0.5762000, 0.0000000, 0.1017500, 0.3311500, 0.7625500, 0.0000000, 0.1711000, 0.5873000, 0.4272500, 0.2547750, 0.0937500, 0.5014500, 0.5302000, 0.0000000, 0.0108000, 0.0635000, 0.1233500, 0.0000000, 0.4588000, 0.5030000, 0.5876500, 0.3663250, 0.3719000, 0.8231000, 0.3488500, 0.0000000, 0.1025500, 0.2475000, 0.6031000, 0.7958000, 0.6569500, 1.2198000, 1.3039500, 1.2517250, 1.3915250, 1.2337000, 1.3715000]]

Expected (Unparsed): [[0,0.1752,0.76175,0.86455,0,0.04085,0.52475,0.21005000000000001,0.33947499999999997,0.4094,0.7820499999999999,0.5762,0,0.10175,0.33115,0.7625500000000001,0,0.1711,0.5872999999999999,0.42724999999999996,0.254775,0.09375,0.50145,0.5302,0,0.0108,0.0635,0.12335,0,0.4588,0.503,0.58765,0.366325,0.3719,0.8230999999999999,0.34885,0,0.10255,0.2475,0.6031,0.7958,0.65695,1.2198,1.3039500000000002,1.251725,1.3915250000000001,1.2337,1.3715000000000002]]

Actual:   [[0, 0.1752, 0.7618, 0.8646, 0, 0.0409, 0.5248, 0.2101, 0.3395, 0.4094, 0.7821, 0.5762, 0, 0.1018, 0.3312, 0.7626, 0, 0.1711, 0.5873, 0.4273, 0.2548, 0.0938, 0.5015, 0.5302, 0, 0.0108, 0.0635, 0.1234, 0, 0.4588, 0.503, 0.5877, 0.3664, 0.3719, 0.8231, 0.3489, 0, 0.1026, 0.2475, 0.6031, 0.7958, 0.657, 1.2198, 1.304, 1.2518, 1.3916, 1.2337, 1.3715]]

Expected: [[0, 0.1752, 0.7618, 0.8646, 0, 0.0409, 0.5248, 0.2101, 0.3395, 0.4094, 0.7821, 0.5762, 0, 0.1018, 0.3312, 0.7626, 0, 0.1711, 0.5873, 0.4273, 0.2548, 0.0938, 0.5015, 0.5302, 0, 0.0108, 0.0635, 0.1234, 0, 0.4588, 0.503, 0.5877, 0.3664, 0.3719, 0.8231, 0.3489, 0, 0.1026, 0.2475, 0.6031, 0.7958, 0.657, 1.2198, 1.304, 1.2518, 1.3916, 1.2337, 1.3716]]