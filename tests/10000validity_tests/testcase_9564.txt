import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Dep89039 = tf.keras.layers.Input(shape=([1, 2, 2]))
in0Glo27956 = tf.keras.layers.Input(shape=([1, 1, 1]))
in0Con29118 = tf.keras.layers.Input(shape=([1]))
in0Con38779 = tf.keras.layers.Input(shape=([2, 3, 2]))
in0Up_21736 = tf.keras.layers.Input(shape=([1, 2, 3, 1]))

Dep89039 = keras.layers.DepthwiseConv2D((1, 1),strides=(1, 1), padding='valid', name = 'Dep89039', )(in0Dep89039)
Res46215 = keras.layers.Reshape((1, 4), name = 'Res46215', )(Dep89039)
Sim71506 = keras.layers.SimpleRNN(2,name = 'Sim71506', )(Res46215)
Glo27956 = keras.layers.GlobalAveragePooling2D(name = 'Glo27956', )(in0Glo27956)
Res1441 = keras.layers.Reshape((1, 1), name = 'Res1441', )(Glo27956)
Res86430 = keras.layers.Reshape((1, 1, 1), name = 'Res86430', )(Res1441)
Glo89489 = keras.layers.GlobalMaxPool2D(name = 'Glo89489', )(Res86430)
Con29118 = keras.layers.Concatenate(axis=1, name = 'Con29118', )([Glo89489,in0Con29118])
Mul58517 = keras.layers.Multiply(name = 'Mul58517', )([Sim71506,Con29118])
Res50874 = keras.layers.Reshape((2, 1), name = 'Res50874', )(Mul58517)
Res50717 = keras.layers.Reshape((2, 1, 1), name = 'Res50717', )(Res50874)
Zer16406 = keras.layers.ZeroPadding2D(padding=((0, 0), (2, 0)), name = 'Zer16406', )(Res50717)
Con38779 = keras.layers.Concatenate(axis=3, name = 'Con38779', )([Zer16406,in0Con38779])
Up_21736 = keras.layers.UpSampling3D(size=(2, 1, 1), name = 'Up_21736', )(in0Up_21736)
Res22480 = keras.layers.Reshape((2, 2, 3), name = 'Res22480', )(Up_21736)
Cro95420 = keras.layers.Cropping2D(cropping=((1, 0), (0, 0)), name = 'Cro95420', )(Res22480)
Zer56083 = keras.layers.ZeroPadding2D(padding=((1, 0), (1, 0)), name = 'Zer56083', )(Cro95420)
Max36732 = keras.layers.Maximum(name = 'Max36732', )([Con38779,Zer56083])
model = tf.keras.models.Model(inputs=[in0Dep89039,in0Glo27956,in0Con29118,in0Con38779,in0Up_21736], outputs=Max36732)
w = model.get_layer('Dep89039').get_weights() 
w[0] = np.array([[[[0.1845], [0.4432]]]])
w[1] = np.array([0, 0])
model.get_layer('Dep89039').set_weights(w) 
w = model.get_layer('Sim71506').get_weights() 
w[0] = np.array([[10, 1], [3, 5], [8, 3], [2, 9]])
w[1] = np.array([[7, 9], [5, 2]])
w[2] = np.array([1, 8])
model.get_layer('Sim71506').set_weights(w) 
in0Dep89039 = tf.constant([[[[0.9926, 0.7131], [0.4404, 0.9421]]]])
in0Glo27956 = tf.constant([[[[1.5188]]]])
in0Con29118 = tf.constant([[0.1136]])
in0Con38779 = tf.constant([[[[0.0096, 0.7536], [0.2707, 0.5504], [0.4253, 0.4251]], [[0.6801, 0.0072], [0.0729, 0.6426], [0.2444, 0.2459]]]])
in0Up_21736 = tf.constant([[[[[1.1127], [1.1232], [1.1765]], [[1.1448], [1.5768], [1.2214]]]]])
print (np.array2string(model.predict([in0Dep89039,in0Glo27956,in0Con29118,in0Con38779,in0Up_21736],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Max36732.png')

LDep89039 = depthwise_conv2D_layer([[[[0.9926, 0.7131], [0.4404, 0.9421]]]], 1, 1,[[[[0.1845], [0.4432]]]],[0, 0], 1, 1, false, Dep89039), 
LRes46215 = reshape_layer(Dep89039, [1, 4], Res46215), 
LSim71506 = simple_rnn_layer(Res46215,[[10, 1], [3, 5], [8, 3], [2, 9]],[[7, 9], [5, 2]],[1, 8], Sim71506), 
LGlo27956 = global_average_pooling2D_layer([[[[1.5188]]]], Glo27956), 
LRes1441 = reshape_layer(Glo27956, [1, 1], Res1441), 
LRes86430 = reshape_layer(Res1441, [1, 1, 1], Res86430), 
LGlo89489 = global_max_pool2D_layer(Res86430, Glo89489), 
LCon29118 = concatenate_layer([Glo89489,[[0.1136]]], 1, Con29118), 
LMul58517 = multiply_layer([Sim71506,Con29118], Mul58517), 
LRes50874 = reshape_layer(Mul58517, [2, 1], Res50874), 
LRes50717 = reshape_layer(Res50874, [2, 1, 1], Res50717), 
LZer16406 = zero_padding2D_layer(Res50717, 0, 0, 2, 0, Zer16406), 
LCon38779 = concatenate_layer([Zer16406,[[[[0.0096, 0.7536], [0.2707, 0.5504], [0.4253, 0.4251]], [[0.6801, 0.0072], [0.0729, 0.6426], [0.2444, 0.2459]]]]], 3, Con38779), 
LUp_21736 = up_sampling3D_layer([[[[[1.1127], [1.1232], [1.1765]], [[1.1448], [1.5768], [1.2214]]]]], 2, 1, 1, Up_21736), 
LRes22480 = reshape_layer(Up_21736, [2, 2, 3], Res22480), 
LCro95420 = cropping2D_layer(Res22480, 1, 0, 0, 0, Cro95420), 
LZer56083 = zero_padding2D_layer(Cro95420, 1, 0, 1, 0, Zer56083), 
LMax36732 = maximum_layer([Con38779,Zer56083], Max36732), 
exec_layers([LDep89039,LRes46215,LSim71506,LGlo27956,LRes1441,LRes86430,LGlo89489,LCon29118,LMul58517,LRes50874,LRes50717,LZer16406,LCon38779,LUp_21736,LRes22480,LCro95420,LZer56083,LMax36732],["Dep89039","Res46215","Sim71506","Glo27956","Res1441","Res86430","Glo89489","Con29118","Mul58517","Res50874","Res50717","Zer16406","Con38779","Up_21736","Res22480","Cro95420","Zer56083","Max36732"],Max36732,"Max36732")

Actual (Unparsed): [[[[0.0000000, 0.0096000, 0.7536000], [0.0000000, 0.2707000, 0.5504000], [1.5187188, 0.4253000, 0.4251000]], [[0.0000000, 0.6801000, 0.0072000], [1.1127000, 1.1232001, 1.1765000], [1.1447999, 1.5768000, 1.2214000]]]]

Expected (Unparsed): [[[[0,0.0096,0.7536],[0,0.2707,0.5504],[1.5187187633626864,0.4253,0.4251]],[[0,0.6801,0.0072],[1.1127,1.1232,1.1765],[1.1448,1.5768,1.2214]]]]

Actual:   [[[[0, 0.0096, 0.7536], [0, 0.2707, 0.5504], [1.5188, 0.4253, 0.4251]], [[0, 0.6801, 0.0072], [1.1127, 1.1233, 1.1765], [1.1448, 1.5768, 1.2214]]]]

Expected: [[[[0, 0.0096, 0.7536], [0, 0.2707, 0.5504], [1.5188, 0.4253, 0.4251]], [[0, 0.6801, 0.0072], [1.1127, 1.1232, 1.1765], [1.1448, 1.5768, 1.2214]]]]