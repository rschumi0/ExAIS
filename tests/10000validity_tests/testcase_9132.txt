import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Add27527 = tf.keras.layers.Input(shape=([1, 2, 1]))
in1Add27527 = tf.keras.layers.Input(shape=([1, 2, 1]))
in0Con57527 = tf.keras.layers.Input(shape=([2, 2, 3]))
in0Con20864 = tf.keras.layers.Input(shape=([2, 1]))
in0Con52413 = tf.keras.layers.Input(shape=([2, 2, 3]))
in0Loc56937 = tf.keras.layers.Input(shape=([1, 1, 2]))
in0Lay22863 = tf.keras.layers.Input(shape=([3]))
in0Con20858 = tf.keras.layers.Input(shape=([6, 7]))

Add27527 = keras.layers.Add(name = 'Add27527', )([in0Add27527,in1Add27527])
Cro54242 = keras.layers.Cropping2D(cropping=((0, 0), (0, 0)), name = 'Cro54242', )(Add27527)
Zer27672 = keras.layers.ZeroPadding2D(padding=((1, 0), (0, 0)), name = 'Zer27672', )(Cro54242)
Con57527 = keras.layers.Concatenate(axis=3, name = 'Con57527', )([Zer27672,in0Con57527])
Con20864 = keras.layers.Conv1D(2, (2),strides=(1), padding='same', dilation_rate=(1), name = 'Con20864', )(in0Con20864)
Res49301 = keras.layers.Reshape((2, 2, 1), name = 'Res49301', )(Con20864)
Con52413 = keras.layers.Concatenate(axis=3, name = 'Con52413', )([Res49301,in0Con52413])
Loc56937 = keras.layers.LocallyConnected2D(3, (1, 1),strides=(1, 1), name = 'Loc56937', )(in0Loc56937)
Con5640 = keras.layers.Conv2D(4, (1, 1),strides=(1, 1), padding='valid', dilation_rate=(1, 1), name = 'Con5640', )(Loc56937)
Zer12638 = keras.layers.ZeroPadding2D(padding=((1, 0), (1, 0)), name = 'Zer12638', )(Con5640)
Add12441 = keras.layers.Add(name = 'Add12441', )([Con52413,Zer12638])
Max47141 = keras.layers.Maximum(name = 'Max47141', )([Con57527,Add12441])
Res63600 = keras.layers.Reshape((2, 8), name = 'Res63600', )(Max47141)
Zer37325 = keras.layers.ZeroPadding1D(padding=((4, 0)), name = 'Zer37325', )(Res63600)
Lay22863 = keras.layers.LayerNormalization(axis=1, epsilon=1.8448518365215465, name = 'Lay22863', )(in0Lay22863)
Res52423 = keras.layers.Reshape((3, 1), name = 'Res52423', )(Lay22863)
Up_81946 = keras.layers.UpSampling1D(size=(2), name = 'Up_81946', )(Res52423)
Con20858 = keras.layers.Concatenate(axis=2, name = 'Con20858', )([Up_81946,in0Con20858])
Min65653 = keras.layers.Minimum(name = 'Min65653', )([Zer37325,Con20858])
model = tf.keras.models.Model(inputs=[in0Add27527,in1Add27527,in0Con57527,in0Con20864,in0Con52413,in0Loc56937,in0Lay22863,in0Con20858], outputs=Min65653)
w = model.get_layer('Con20864').get_weights() 
w[0] = np.array([[[0.3815, 0.3225]], [[0.675, 0.6687]]])
w[1] = np.array([0, 0])
model.get_layer('Con20864').set_weights(w) 
w = model.get_layer('Loc56937').get_weights() 
w[0] = np.array([[[0.6222, 0.5952, 0.55], [0.9244, 0.6458, 0.5798]]])
w[1] = np.array([[[0, 0, 0]]])
model.get_layer('Loc56937').set_weights(w) 
w = model.get_layer('Con5640').get_weights() 
w[0] = np.array([[[[0.112, 0.7921, 0.1692, 0.9665], [0.5656, 0.6253, 0.1728, 0.3171], [0.5461, 0.15, 0.4813, 0.3784]]]])
w[1] = np.array([0, 0, 0, 0])
model.get_layer('Con5640').set_weights(w) 
in0Add27527 = tf.constant([[[[0.2148], [0.8147]]]])
in1Add27527 = tf.constant([[[[0.7413], [0.1621]]]])
in0Con57527 = tf.constant([[[[0.763, 0.1503, 0.9866], [0.1505, 0.0666, 0.7725]], [[0.9078, 0.5819, 0.1132], [0.7065, 0.7843, 0.8447]]]])
in0Con20864 = tf.constant([[[0.9387], [0.8656]]])
in0Con52413 = tf.constant([[[[0.1798, 0.081, 0.7854], [0.2885, 0.9561, 0.1805]], [[0.6924, 0.5757, 0.0058], [0.0721, 0.8605, 0.9614]]]])
in0Loc56937 = tf.constant([[[[0.6566, 0.1761]]]])
in0Lay22863 = tf.constant([[1.1056, 1.0841, 1.6085]])
in0Con20858 = tf.constant([[[0.6051, 0.9274, 0.3057, 0.7284, 0.2034, 0.1139, 0.8046], [0.5012, 0.9066, 0.1858, 0.9469, 0.227, 0.9949, 0.4413], [0.0289, 0.076, 0.5109, 0.6328, 0.2546, 0.1047, 0.5316], [0.5249, 0.0948, 0.694, 0.818, 0.5945, 0.4331, 0.7244], [0.052, 0.1267, 0.9163, 0.5763, 0.9476, 0.3548, 0.9527], [0.5172, 0.7523, 0.0974, 0.4875, 0.4178, 0.0442, 0.5499]]])
print (np.array2string(model.predict([in0Add27527,in1Add27527,in0Con57527,in0Con20864,in0Con52413,in0Loc56937,in0Lay22863,in0Con20858],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Min65653.png')

LAdd27527 = add_layer([[[[[0.2148], [0.8147]]]], [[[[0.7413], [0.1621]]]]], Add27527), 
LCro54242 = cropping2D_layer(Add27527, 0, 0, 0, 0, Cro54242), 
LZer27672 = zero_padding2D_layer(Cro54242, 1, 0, 0, 0, Zer27672), 
LCon57527 = concatenate_layer([Zer27672,[[[[0.763, 0.1503, 0.9866], [0.1505, 0.0666, 0.7725]], [[0.9078, 0.5819, 0.1132], [0.7065, 0.7843, 0.8447]]]]], 3, Con57527), 
LCon20864 = conv1D_layer([[[0.9387], [0.8656]]], 2,[[[0.3815, 0.3225]], [[0.675, 0.6687]]],[0, 0], 1, true, 1, Con20864), 
LRes49301 = reshape_layer(Con20864, [2, 2, 1], Res49301), 
LCon52413 = concatenate_layer([Res49301,[[[[0.1798, 0.081, 0.7854], [0.2885, 0.9561, 0.1805]], [[0.6924, 0.5757, 0.0058], [0.0721, 0.8605, 0.9614]]]]], 3, Con52413), 
LLoc56937 = locally_connected2D_layer([[[[0.6566, 0.1761]]]], 1, 1,[[[0.6222, 0.5952, 0.55], [0.9244, 0.6458, 0.5798]]],[[[0, 0, 0]]], 1, 1, Loc56937), 
LCon5640 = conv2D_layer(Loc56937, 1, 1,[[[[0.112, 0.7921, 0.1692, 0.9665], [0.5656, 0.6253, 0.1728, 0.3171], [0.5461, 0.15, 0.4813, 0.3784]]]],[0, 0, 0, 0], 1, 1, false, 1, 1, Con5640), 
LZer12638 = zero_padding2D_layer(Con5640, 1, 0, 1, 0, Zer12638), 
LAdd12441 = add_layer([Con52413,Zer12638], Add12441), 
LMax47141 = maximum_layer([Con57527,Add12441], Max47141), 
LRes63600 = reshape_layer(Max47141, [2, 8], Res63600), 
LZer37325 = zero_padding1D_layer(Res63600, 4, 0, Zer37325), 
LLay22863 = layer_normalization_layer([[1.1056, 1.0841, 1.6085]], 1, 1.8448518365215465, Lay22863), 
LRes52423 = reshape_layer(Lay22863, [3, 1], Res52423), 
LUp_81946 = up_sampling1D_layer(Res52423, 2, Up_81946), 
LCon20858 = concatenate_layer([Up_81946,[[[0.6051, 0.9274, 0.3057, 0.7284, 0.2034, 0.1139, 0.8046], [0.5012, 0.9066, 0.1858, 0.9469, 0.227, 0.9949, 0.4413], [0.0289, 0.076, 0.5109, 0.6328, 0.2546, 0.1047, 0.5316], [0.5249, 0.0948, 0.694, 0.818, 0.5945, 0.4331, 0.7244], [0.052, 0.1267, 0.9163, 0.5763, 0.9476, 0.3548, 0.9527], [0.5172, 0.7523, 0.0974, 0.4875, 0.4178, 0.0442, 0.5499]]]], 2, Con20858), 
LMin65653 = minimum_layer([Zer37325,Con20858], Min65653), 
exec_layers([LAdd27527,LCro54242,LZer27672,LCon57527,LCon20864,LRes49301,LCon52413,LLoc56937,LCon5640,LZer12638,LAdd12441,LMax47141,LRes63600,LZer37325,LLay22863,LRes52423,LUp_81946,LCon20858,LMin65653],["Add27527","Cro54242","Zer27672","Con57527","Con20864","Res49301","Con52413","Loc56937","Con5640","Zer12638","Add12441","Max47141","Res63600","Zer37325","Lay22863","Res52423","Up_81946","Con20858","Min65653"],Min65653,"Min65653")

Actual (Unparsed): [[[-0.1163059, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000], [-0.1163059, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000], [-0.1318890, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000], [-0.1318890, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000], [0.2481949, 0.0520000, 0.1267000, 0.9163000, 0.5763000, 0.2885000, 0.3548000, 0.7725000], [0.2481949, 0.5172000, 0.5819000, 0.0974000, 0.4875000, 0.4178000, 0.0442000, 0.5499000]]]

Expected (Unparsed): [[[-0.11630587167119912,0,0,0,0,0,0,0],[-0.11630587167119912,0,0,0,0,0,0,0],[-0.13188902232095456,0,0,0,0,0,0,0],[-0.13188902232095456,0,0,0,0,0,0,0],[0.2481948939921532,0.052,0.1267,0.9163,0.5763,0.2885,0.3548,0.7725],[0.2481948939921532,0.5172,0.5819,0.0974,0.4875,0.4178,0.0442,0.5499]]]

Actual:   [[[-0.1163, 0, 0, 0, 0, 0, 0, 0], [-0.1163, 0, 0, 0, 0, 0, 0, 0], [-0.1318, 0, 0, 0, 0, 0, 0, 0], [-0.1318, 0, 0, 0, 0, 0, 0, 0], [0.2482, 0.052, 0.1267, 0.9163, 0.5763, 0.2885, 0.3548, 0.7725], [0.2482, 0.5172, 0.5819, 0.0974, 0.4875, 0.4178, 0.0442, 0.5499]]]

Expected: [[[-0.1163, 0, 0, 0, 0, 0, 0, 0], [-0.1163, 0, 0, 0, 0, 0, 0, 0], [-0.1318, 0, 0, 0, 0, 0, 0, 0], [-0.1318, 0, 0, 0, 0, 0, 0, 0], [0.2482, 0.052, 0.1267, 0.9163, 0.5763, 0.2885, 0.3548, 0.7725], [0.2482, 0.5172, 0.5819, 0.0974, 0.4875, 0.4178, 0.0442, 0.5499]]]