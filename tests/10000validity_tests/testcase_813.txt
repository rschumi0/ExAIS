import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Sep86184 = tf.keras.layers.Input(shape=([1, 1, 1]))
in0Con6239 = tf.keras.layers.Input(shape=([1, 22]))
in0Glo21006 = tf.keras.layers.Input(shape=([1, 1]))
in0Add76101 = tf.keras.layers.Input(shape=([1, 2]))
in1Add76101 = tf.keras.layers.Input(shape=([1, 2]))
in0Con83107 = tf.keras.layers.Input(shape=([1, 22]))

Sep86184 = keras.layers.SeparableConv2D(2, (1, 1),strides=(1, 1), padding='valid', name = 'Sep86184', )(in0Sep86184)
Res42373 = keras.layers.Reshape((1, 2), name = 'Res42373', )(Sep86184)
Con6239 = keras.layers.Concatenate(axis=2, name = 'Con6239', )([Res42373,in0Con6239])
Glo21006 = keras.layers.GlobalMaxPool1D(name = 'Glo21006', )(in0Glo21006)
Res80044 = keras.layers.Reshape((1, 1), name = 'Res80044', )(Glo21006)
Res46908 = keras.layers.Reshape((1, 1, 1), name = 'Res46908', )(Res80044)
Dep78422 = keras.layers.DepthwiseConv2D((1, 1),strides=(1, 1), padding='same', name = 'Dep78422', )(Res46908)
Res62450 = keras.layers.Reshape((1, 1, 1, 1), name = 'Res62450', )(Dep78422)
Con64441 = keras.layers.Conv3DTranspose(2, (1, 1, 1),strides=(1, 1, 12), padding='same', name = 'Con64441', )(Res62450)
Res34065 = keras.layers.Reshape((1, 1, 24), name = 'Res34065', )(Con64441)
Res98051 = keras.layers.Reshape((1, 24), name = 'Res98051', )(Res34065)
Add76101 = keras.layers.Add(name = 'Add76101', )([in0Add76101,in1Add76101])
Con83107 = keras.layers.Concatenate(axis=2, name = 'Con83107', )([Add76101,in0Con83107])
Sub902 = keras.layers.Subtract(name = 'Sub902', )([Res98051,Con83107])
Mul22311 = keras.layers.Multiply(name = 'Mul22311', )([Con6239,Sub902])
Res37567 = keras.layers.Reshape((1, 24, 1), name = 'Res37567', )(Mul22311)
Res50498 = keras.layers.Reshape((1, 24, 1, 1), name = 'Res50498', )(Res37567)
Con29310 = keras.layers.Conv3DTranspose(3, (1, 20, 1),strides=(1, 1, 1), padding='valid', name = 'Con29310', )(Res50498)
model = tf.keras.models.Model(inputs=[in0Sep86184,in0Con6239,in0Glo21006,in0Add76101,in1Add76101,in0Con83107], outputs=Con29310)
w = model.get_layer('Sep86184').get_weights() 
w[0] = np.array([[[[0.7514]]]])
w[1] = np.array([[[[0.2642, 0.1182]]]])
w[2] = np.array([0, 0])
model.get_layer('Sep86184').set_weights(w) 
w = model.get_layer('Dep78422').get_weights() 
w[0] = np.array([[[[0.7535]]]])
w[1] = np.array([0])
model.get_layer('Dep78422').set_weights(w) 
w = model.get_layer('Con64441').get_weights() 
w[0] = np.array([[[[[0.9947], [0.8724]]]]])
w[1] = np.array([0, 0])
model.get_layer('Con64441').set_weights(w) 
w = model.get_layer('Con29310').get_weights() 
w[0] = np.array([[[[[0.5422], [0.7687], [0.1708]]], [[[0.8636], [0.3346], [0.9369]]], [[[0.9887], [0.8236], [0.5829]]], [[[0.3429], [0.4972], [0.1115]]], [[[0.2386], [0.8865], [0.2763]]], [[[0.5681], [0.3729], [0.5866]]], [[[0.4917], [0.9005], [0.0676]]], [[[0.2443], [0.5085], [0.9165]]], [[[0.0138], [0.0741], [0.0806]]], [[[0.7987], [0.7118], [0.7097]]], [[[0.2983], [0.4769], [0.2529]]], [[[0.6136], [0.7042], [0.5475]]], [[[0.2813], [0.3281], [0.2495]]], [[[0.8606], [0.885], [0.1955]]], [[[0.0461], [0.8527], [0.8436]]], [[[0.1416], [0.1991], [0.9348]]], [[[0.8738], [0.8714], [0.3508]]], [[[0.7644], [0.2575], [0.3538]]], [[[0.954], [0.0272], [0.5086]]], [[[0.7904], [0.7071], [0.433]]]]])
w[1] = np.array([0, 0, 0])
model.get_layer('Con29310').set_weights(w) 
in0Sep86184 = tf.constant([[[[0.3814]]]])
in0Con6239 = tf.constant([[[0.4288, 0.8259, 0.4541, 0.0751, 0.286, 0.4427, 0.2559, 0.173, 0.8077, 0.7512, 0.1877, 0.0504, 0.5045, 0.1084, 0.9473, 0.3249, 0.7785, 0.4727, 0.6728, 0.7679, 0.1969, 0.3156]]])
in0Glo21006 = tf.constant([[[1.7516]]])
in0Add76101 = tf.constant([[[0.1897, 0.2183]]])
in1Add76101 = tf.constant([[[0.1343, 0.3744]]])
in0Con83107 = tf.constant([[[0.3405, 0.1324, 0.957, 0.8037, 0.4409, 0.339, 0.42, 0.3317, 0.6878, 0.6215, 0.7805, 0.0126, 0.6663, 0.6695, 0.5702, 0.822, 0.2154, 0.0677, 0.4715, 0.4735, 0.381, 0.6291]]])
print (np.array2string(model.predict([in0Sep86184,in0Con6239,in0Glo21006,in0Add76101,in1Add76101,in0Con83107],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Con29310.png')

LSep86184 = separable_conv2D_layer([[[[0.3814]]]], 1, 1,[[[[[0.7514]]]],[[[[0.2642, 0.1182]]]]],[0, 0], 1, 1, false, Sep86184), 
LRes42373 = reshape_layer(Sep86184, [1, 2], Res42373), 
LCon6239 = concatenate_layer([Res42373,[[[0.4288, 0.8259, 0.4541, 0.0751, 0.286, 0.4427, 0.2559, 0.173, 0.8077, 0.7512, 0.1877, 0.0504, 0.5045, 0.1084, 0.9473, 0.3249, 0.7785, 0.4727, 0.6728, 0.7679, 0.1969, 0.3156]]]], 2, Con6239), 
LGlo21006 = global_max_pool1D_layer([[[1.7516]]], Glo21006), 
LRes80044 = reshape_layer(Glo21006, [1, 1], Res80044), 
LRes46908 = reshape_layer(Res80044, [1, 1, 1], Res46908), 
LDep78422 = depthwise_conv2D_layer(Res46908, 1, 1,[[[[0.7535]]]],[0], 1, 1, true, Dep78422), 
LRes62450 = reshape_layer(Dep78422, [1, 1, 1, 1], Res62450), 
LCon64441 = conv3D_transpose_layer(Res62450, 1, 1, 1,[[[[[0.9947], [0.8724]]]]],[0, 0], 1, 1, 12, true, Con64441), 
LRes34065 = reshape_layer(Con64441, [1, 1, 24], Res34065), 
LRes98051 = reshape_layer(Res34065, [1, 24], Res98051), 
LAdd76101 = add_layer([[[[0.1897, 0.2183]]], [[[0.1343, 0.3744]]]], Add76101), 
LCon83107 = concatenate_layer([Add76101,[[[0.3405, 0.1324, 0.957, 0.8037, 0.4409, 0.339, 0.42, 0.3317, 0.6878, 0.6215, 0.7805, 0.0126, 0.6663, 0.6695, 0.5702, 0.822, 0.2154, 0.0677, 0.4715, 0.4735, 0.381, 0.6291]]]], 2, Con83107), 
LSub902 = subtract_layer(Res98051,Con83107, Sub902), 
LMul22311 = multiply_layer([Con6239,Sub902], Mul22311), 
LRes37567 = reshape_layer(Mul22311, [1, 24, 1], Res37567), 
LRes50498 = reshape_layer(Res37567, [1, 24, 1, 1], Res50498), 
LCon29310 = conv3D_transpose_layer(Res50498, 1, 20, 1,[[[[[0.5422], [0.7687], [0.1708]]], [[[0.8636], [0.3346], [0.9369]]], [[[0.9887], [0.8236], [0.5829]]], [[[0.3429], [0.4972], [0.1115]]], [[[0.2386], [0.8865], [0.2763]]], [[[0.5681], [0.3729], [0.5866]]], [[[0.4917], [0.9005], [0.0676]]], [[[0.2443], [0.5085], [0.9165]]], [[[0.0138], [0.0741], [0.0806]]], [[[0.7987], [0.7118], [0.7097]]], [[[0.2983], [0.4769], [0.2529]]], [[[0.6136], [0.7042], [0.5475]]], [[[0.2813], [0.3281], [0.2495]]], [[[0.8606], [0.885], [0.1955]]], [[[0.0461], [0.8527], [0.8436]]], [[[0.1416], [0.1991], [0.9348]]], [[[0.8738], [0.8714], [0.3508]]], [[[0.7644], [0.2575], [0.3538]]], [[[0.954], [0.0272], [0.5086]]], [[[0.7904], [0.7071], [0.433]]]]],[0, 0, 0], 1, 1, 1, false, Con29310), 
exec_layers([LSep86184,LRes42373,LCon6239,LGlo21006,LRes80044,LRes46908,LDep78422,LRes62450,LCon64441,LRes34065,LRes98051,LAdd76101,LCon83107,LSub902,LMul22311,LRes37567,LRes50498,LCon29310],["Sep86184","Res42373","Con6239","Glo21006","Res80044","Res46908","Dep78422","Res62450","Con64441","Res34065","Res98051","Add76101","Con83107","Sub902","Mul22311","Res37567","Res50498","Con29310"],Con29310,"Con29310")

Actual (Unparsed): [[[[[0.0405946, 0.0575527, 0.0127878]], [[0.0749197, 0.0396001, 0.0733784]], [[0.0112041, -0.0442393, 0.0364359]], [[-0.1409949, -0.0800974, -0.1360901]], [[-0.4500625, -0.4151134, -0.2389847]], [[-0.5191535, -0.3097626, -0.4483324]], [[-0.5749254, -0.5843666, -0.3677704]], [[-0.4803998, -0.5196052, -0.2733737]], [[-0.5651938, -0.8090301, -0.4099014]], [[-0.6062090, -0.5999489, -0.5701800]], [[-0.7778277, -1.1522499, -0.4072749]], [[-1.1363147, -1.1511427, -1.2301142]], [[-1.3434208, -1.1921596, -1.0947408]], [[-1.3586759, -1.3967458, -1.0775761]], [[-1.0104137, -1.6022453, -0.7197654]], [[-1.3943610, -1.5387291, -1.2259476]], [[-1.6264518, -2.0623475, -1.1498802]], [[-1.7986483, -2.1030995, -1.7418060]], [[-1.4894152, -2.2131664, -1.8462239]], [[-1.7340122, -1.7453146, -1.8024967]], [[-2.1297908, -2.6679578, -1.4180222]], [[-2.3838538, -2.4257566, -2.2001114]], [[-2.3788640, -2.2212051, -1.8829234]], [[-2.6223285, -2.7764205, -1.9867026]], [[-1.6313322, -2.2661892, -1.6443980]], [[-1.8102906, -2.2406221, -2.3048099]], [[-1.7960317, -2.0506089, -1.6651613]], [[-2.1945252, -2.3006388, -1.5564005]], [[-1.7725523, -1.4725851, -1.6487734]], [[-2.0747305, -1.7412923, -1.5142598]], [[-1.5693862, -1.9327517, -1.5561802]], [[-1.0446474, -1.2124852, -1.3140233]], [[-1.4150304, -1.2606796, -1.2218731]], [[-1.4869441, -1.2197065, -0.8950287]], [[-1.3983388, -1.0439875, -0.9554893]], [[-1.0199550, -0.9650067, -1.1077490]], [[-0.8985303, -0.7901482, -0.7655270]], [[-0.7430478, -0.7022051, -0.5662902]], [[-0.6995287, -0.2297857, -0.5157550]], [[-0.8284420, -0.4265285, -0.4184767]], [[-0.5107250, -0.3102676, -0.2658386]], [[-0.2487059, -0.0584463, -0.1334626]], [[-0.1569292, -0.1403904, -0.0859695]]]]]

Expected (Unparsed): [[[[[0.04059459888984722,0.0575526893519468,0.012787822741397833]],[[0.07491966031685574,0.03960013491288937,0.07337844699842429]],[[0.011204131929325942,-0.04423934760470327,0.03643589082446273]],[[-0.14099491734991493,-0.08009736922550215,-0.13609012022360797]],[[-0.45006250433725414,-0.41511339588350465,-0.23898464942942765]],[[-0.5191534629352558,-0.3097626350533822,-0.4483324159836121]],[[-0.5749253999791979,-0.5843666288513681,-0.36777039413088203]],[[-0.4803998369546505,-0.519605145307293,-0.2733737018777186]],[[-0.5651938209940494,-0.80903007729375,-0.4099014216003546]],[[-0.6062089838350414,-0.599948888411175,-0.5701799727224488]],[[-0.7778276668042994,-1.1522498862864223,-0.4072748892410278]],[[-1.136314686606372,-1.1511426709659651,-1.2301142186295753]],[[-1.3434208003729946,-1.1921596471870402,-1.0947407894280672]],[[-1.3586759155617913,-1.3967458311820915,-1.0775761131484758]],[[-1.0104137351506859,-1.6022452797358828,-0.7197654581469896]],[[-1.3943610593534563,-1.538729037891949,-1.2259475895999854]],[[-1.6264517752059868,-2.0623474619658904,-1.1498802130123238]],[[-1.7986482309428613,-2.1030994804939955,-1.7418059626481077]],[[-1.4894151697966191,-2.2131663921192892,-1.8462238865904448]],[[-1.7340121725396929,-1.7453146396939103,-1.8024967319559926]],[[-2.1297908214961088,-2.6679577191572634,-1.4180222024239966]],[[-2.3838537388930003,-2.4257566007939997,-2.2001113515930006]],[[-2.3788639672359997,-2.2212050538369996,-1.8829233612649998]],[[-2.622328463932,-2.776420438987,-1.986702555048]],[[-1.631332177196,-2.2661892290500005,-1.6443980113349999]],[[-1.8102906124050002,-2.240622102104,-2.3048098325729995]],[[-1.7960316944360002,-2.0506088859,-1.665161249862]],[[-2.1945252239970006,-2.3006387114490003,-1.5564004696790004]],[[-1.772552293591,-1.4725851269380004,-1.648773418052]],[[-2.074730426481,-1.741292266228,-1.514259843929]],[[-1.5693861774689999,-1.9327516107200005,-1.5561801272779998]],[[-1.044647355056,-1.212485156194,-1.3140232221980002]],[[-1.4150303517500002,-1.2606795143960001,-1.2218730718600002]],[[-1.486944077336,-1.219706515507,-0.895028684991]],[[-1.3983387025000003,-1.043987509853,-0.9554892458530002]],[[-1.019954923619,-0.965006697333,-1.107748931282]],[[-0.898530303062,-0.79014818971,-0.7655269412419999]],[[-0.743047757866,-0.70220506297,-0.56629014025]],[[-0.699528732032,-0.22978573042,-0.515754945688]],[[-0.8284419775879999,-0.426528450094,-0.41847671017800003]],[[-0.510724987384,-0.3102676033949999,-0.265838547038]],[[-0.24870587639999997,-0.05844625990199999,-0.133462641756]],[[-0.15692914598399998,-0.140390434116,-0.08596953468]]]]]

Actual:   [[[[[0.0406, 0.0576, 0.0128]], [[0.075, 0.0397, 0.0734]], [[0.0113, -0.0442, 0.0365]], [[-0.1409, -0.08, -0.136]], [[-0.45, -0.4151, -0.2389]], [[-0.5191, -0.3097, -0.4483]], [[-0.5749, -0.5843, -0.3677]], [[-0.4803, -0.5196, -0.2733]], [[-0.5651, -0.809, -0.4099]], [[-0.6062, -0.5999, -0.5701]], [[-0.7778, -1.1522, -0.4072]], [[-1.1363, -1.1511, -1.2301]], [[-1.3434, -1.1921, -1.0947]], [[-1.3586, -1.3967, -1.0775]], [[-1.0104, -1.6022, -0.7197]], [[-1.3943, -1.5387, -1.2259]], [[-1.6264, -2.0623, -1.1498]], [[-1.7986, -2.103, -1.7418]], [[-1.4894, -2.2131, -1.8462]], [[-1.734, -1.7453, -1.8024]], [[-2.1297, -2.6679, -1.418]], [[-2.3838, -2.4257, -2.2001]], [[-2.3788, -2.2212, -1.8829]], [[-2.6223, -2.7764, -1.9867]], [[-1.6313, -2.2661, -1.6443]], [[-1.8102, -2.2406, -2.3048]], [[-1.796, -2.0506, -1.6651]], [[-2.1945, -2.3006, -1.5564]], [[-1.7725, -1.4725, -1.6487]], [[-2.0747, -1.7412, -1.5142]], [[-1.5693, -1.9327, -1.5561]], [[-1.0446, -1.2124, -1.314]], [[-1.415, -1.2606, -1.2218]], [[-1.4869, -1.2197, -0.895]], [[-1.3983, -1.0439, -0.9554]], [[-1.0199, -0.965, -1.1077]], [[-0.8985, -0.7901, -0.7655]], [[-0.743, -0.7022, -0.5662]], [[-0.6995, -0.2297, -0.5157]], [[-0.8284, -0.4265, -0.4184]], [[-0.5107, -0.3102, -0.2658]], [[-0.2487, -0.0584, -0.1334]], [[-0.1569, -0.1403, -0.0859]]]]]

Expected: [[[[[0.0406, 0.0576, 0.0128]], [[0.075, 0.0397, 0.0734]], [[0.0113, -0.0442, 0.0365]], [[-0.1409, -0.08, -0.136]], [[-0.45, -0.4151, -0.2389]], [[-0.5191, -0.3097, -0.4483]], [[-0.5749, -0.5843, -0.3677]], [[-0.4803, -0.5196, -0.2733]], [[-0.5651, -0.809, -0.4099]], [[-0.6062, -0.5999, -0.5701]], [[-0.7778, -1.1522, -0.4072]], [[-1.1363, -1.1511, -1.2301]], [[-1.3434, -1.1921, -1.0947]], [[-1.3586, -1.3967, -1.0775]], [[-1.0104, -1.6022, -0.7197]], [[-1.3943, -1.5387, -1.2259]], [[-1.6264, -2.0623, -1.1498]], [[-1.7986, -2.103, -1.7418]], [[-1.4894, -2.2131, -1.8462]], [[-1.734, -1.7453, -1.8024]], [[-2.1297, -2.6679, -1.418]], [[-2.3838, -2.4257, -2.2001]], [[-2.3788, -2.2212, -1.8829]], [[-2.6223, -2.7764, -1.9867]], [[-1.6313, -2.2661, -1.6443]], [[-1.8102, -2.2406, -2.3048]], [[-1.796, -2.0506, -1.6651]], [[-2.1945, -2.3006, -1.5564]], [[-1.7725, -1.4725, -1.6487]], [[-2.0747, -1.7412, -1.5142]], [[-1.5693, -1.9327, -1.5561]], [[-1.0446, -1.2124, -1.314]], [[-1.415, -1.2606, -1.2218]], [[-1.4869, -1.2197, -0.895]], [[-1.3983, -1.0439, -0.9554]], [[-1.0199, -0.965, -1.1077]], [[-0.8985, -0.7901, -0.7655]], [[-0.743, -0.7022, -0.5662]], [[-0.6995, -0.2297, -0.5157]], [[-0.8284, -0.4265, -0.4184]], [[-0.5107, -0.3102, -0.2658]], [[-0.2487, -0.0584, -0.1334]], [[-0.1569, -0.1403, -0.0859]]]]]