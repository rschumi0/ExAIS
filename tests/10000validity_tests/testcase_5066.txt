import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Sub50518 = tf.keras.layers.Input(shape=([3, 2, 2, 3]))
in1Sub50518 = tf.keras.layers.Input(shape=([3, 2, 2, 3]))
in0Ave2321 = tf.keras.layers.Input(shape=([1, 1, 1]))
in1Ave2321 = tf.keras.layers.Input(shape=([1, 1, 1]))
in0Dot32851 = tf.keras.layers.Input(shape=([2, 3]))
in1Dot32851 = tf.keras.layers.Input(shape=([2, 3]))
in0Dot87058 = tf.keras.layers.Input(shape=([3, 2]))
in1Dot87058 = tf.keras.layers.Input(shape=([3, 2]))
in0Con86683 = tf.keras.layers.Input(shape=([5, 1]))

Sub50518 = keras.layers.Subtract(name = 'Sub50518', )([in0Sub50518,in1Sub50518])
Res55591 = keras.layers.Reshape((3, 2, 6), name = 'Res55591', )(Sub50518)
Zer42228 = keras.layers.ZeroPadding2D(padding=((1, 1), (1, 1)), name = 'Zer42228', )(Res55591)
Res38242 = keras.layers.Reshape((5, 24), name = 'Res38242', )(Zer42228)
Con55195 = keras.layers.Conv1D(4, (1),strides=(1), padding='same', dilation_rate=(1), name = 'Con55195', )(Res38242)
Res96167 = keras.layers.Reshape((5, 4, 1), name = 'Res96167', )(Con55195)
Ave2321 = keras.layers.Average(name = 'Ave2321', )([in0Ave2321,in1Ave2321])
Zer65345 = keras.layers.ZeroPadding2D(padding=((4, 0), (3, 0)), name = 'Zer65345', )(Ave2321)
Add11624 = keras.layers.Add(name = 'Add11624', )([Res96167,Zer65345])
Res88669 = keras.layers.Reshape((5, 4), name = 'Res88669', )(Add11624)
Dot32851 = keras.layers.Dot(axes=(1, 1), name = 'Dot32851', )([in0Dot32851,in1Dot32851])
Dot87058 = keras.layers.Dot(axes=(2, 2), name = 'Dot87058', )([in0Dot87058,in1Dot87058])
Mul10151 = keras.layers.Multiply(name = 'Mul10151', )([Dot32851,Dot87058])
Lay81852 = keras.layers.LayerNormalization(axis=1, epsilon=2.0222292361267034, name = 'Lay81852', )(Mul10151)
Zer99985 = keras.layers.ZeroPadding1D(padding=((2, 0)), name = 'Zer99985', )(Lay81852)
Con86683 = keras.layers.Concatenate(axis=2, name = 'Con86683', )([Zer99985,in0Con86683])
Sub97942 = keras.layers.Subtract(name = 'Sub97942', )([Res88669,Con86683])
model = tf.keras.models.Model(inputs=[in0Sub50518,in1Sub50518,in0Ave2321,in1Ave2321,in0Dot32851,in1Dot32851,in0Dot87058,in1Dot87058,in0Con86683], outputs=Sub97942)
w = model.get_layer('Con55195').get_weights() 
w[0] = np.array([[[0.6744, 0.2478, 0.8203, 0.1717], [0.5945, 0.1444, 0.048, 0.4369], [0.6848, 0.0661, 0.5567, 0.1234], [0.8373, 0.6519, 0.2996, 0.5947], [0.5054, 0.623, 0.5714, 0.5261], [0.4779, 0.7269, 0.5961, 0.5871], [0.3403, 0.7043, 0.1897, 0.8657], [0.218, 0.7053, 0.3319, 0.191], [0.6379, 0.6116, 0.3679, 0.8074], [0.1196, 0.5356, 0.4763, 0.4336], [0.4142, 0.3613, 0.9832, 0.6001], [0.1432, 0.5701, 0.0833, 0.2997], [0.9611, 0.7478, 0.534, 0.4084], [0.2617, 0.1127, 0.9324, 0.0403], [0.8816, 0.119, 0.2531, 0.9815], [0.2147, 0.6959, 0.4287, 0.6184], [0.6434, 0.9607, 0.8893, 0.3216], [0.2212, 0.3104, 0.1408, 0.0764], [0.0911, 0.6396, 0.6595, 0.2601], [0.2157, 0.0595, 0.6066, 0.8609], [0.6108, 0.8996, 0.1268, 0.1015], [0.4248, 0.9608, 0.2841, 0.3893], [0.8856, 0.962, 0.0078, 0.7469], [0.3506, 0.8683, 0.7786, 0.3946]]])
w[1] = np.array([0, 0, 0, 0])
model.get_layer('Con55195').set_weights(w) 
in0Sub50518 = tf.constant([[[[[0.155, 0.9332, 0.7961], [0.8544, 0.7429, 0.1164]], [[0.802, 0.0634, 0.8182], [0.7771, 0.1101, 0.0099]]], [[[0.4694, 0.3415, 0.6671], [0.8774, 0.2726, 0.9469]], [[0.816, 0.5064, 0.6782], [0.2911, 0.3547, 0.8297]]], [[[0.9609, 0.7571, 0.5907], [0.1033, 0.7313, 0.4499]], [[0.7262, 0.7334, 0.8754], [0.6167, 0.2836, 0.4771]]]]])
in1Sub50518 = tf.constant([[[[[0.9213, 0.2933, 0.4393], [0.8038, 0.2637, 0.915]], [[0.072, 0.2438, 0.3733], [0.0642, 0.0499, 0.6223]]], [[[0.11, 0.4868, 0.785], [0.1785, 0.5204, 0.0045]], [[0.362, 0.7057, 0.0517], [0.9715, 0.6157, 0.01]]], [[[0.9395, 0.4843, 0.3718], [0.1844, 0.6423, 0.6347]], [[0.6968, 0.4209, 0.5809], [0.7197, 0.4047, 0.3432]]]]])
in0Ave2321 = tf.constant([[[[0.1198]]]])
in1Ave2321 = tf.constant([[[[0.4672]]]])
in0Dot32851 = tf.constant([[[0.261, 0.1309, 0.6777], [0.0198, 0.2921, 0.0295]]])
in1Dot32851 = tf.constant([[[0.0911, 0.6286, 0.3585], [0.192, 0.8711, 0.7553]]])
in0Dot87058 = tf.constant([[[0.6858, 0.181], [0.7931, 0.5511], [0.3556, 0.8763]]])
in1Dot87058 = tf.constant([[[0.3344, 0.4902], [0.8587, 0.9794], [0.8399, 0.271]]])
in0Con86683 = tf.constant([[[0.3996], [0.2406], [0.5376], [0.6987], [0.6047]]])
print (np.array2string(model.predict([in0Sub50518,in1Sub50518,in0Ave2321,in1Ave2321,in0Dot32851,in1Dot32851,in0Dot87058,in1Dot87058,in0Con86683],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Sub97942.png')

LSub50518 = subtract_layer([[[[[0.155, 0.9332, 0.7961], [0.8544, 0.7429, 0.1164]], [[0.802, 0.0634, 0.8182], [0.7771, 0.1101, 0.0099]]], [[[0.4694, 0.3415, 0.6671], [0.8774, 0.2726, 0.9469]], [[0.816, 0.5064, 0.6782], [0.2911, 0.3547, 0.8297]]], [[[0.9609, 0.7571, 0.5907], [0.1033, 0.7313, 0.4499]], [[0.7262, 0.7334, 0.8754], [0.6167, 0.2836, 0.4771]]]]], [[[[[0.9213, 0.2933, 0.4393], [0.8038, 0.2637, 0.915]], [[0.072, 0.2438, 0.3733], [0.0642, 0.0499, 0.6223]]], [[[0.11, 0.4868, 0.785], [0.1785, 0.5204, 0.0045]], [[0.362, 0.7057, 0.0517], [0.9715, 0.6157, 0.01]]], [[[0.9395, 0.4843, 0.3718], [0.1844, 0.6423, 0.6347]], [[0.6968, 0.4209, 0.5809], [0.7197, 0.4047, 0.3432]]]]], Sub50518), 
LRes55591 = reshape_layer(Sub50518, [3, 2, 6], Res55591), 
LZer42228 = zero_padding2D_layer(Res55591, 1, 1, 1, 1, Zer42228), 
LRes38242 = reshape_layer(Zer42228, [5, 24], Res38242), 
LCon55195 = conv1D_layer(Res38242, 1,[[[0.6744, 0.2478, 0.8203, 0.1717], [0.5945, 0.1444, 0.048, 0.4369], [0.6848, 0.0661, 0.5567, 0.1234], [0.8373, 0.6519, 0.2996, 0.5947], [0.5054, 0.623, 0.5714, 0.5261], [0.4779, 0.7269, 0.5961, 0.5871], [0.3403, 0.7043, 0.1897, 0.8657], [0.218, 0.7053, 0.3319, 0.191], [0.6379, 0.6116, 0.3679, 0.8074], [0.1196, 0.5356, 0.4763, 0.4336], [0.4142, 0.3613, 0.9832, 0.6001], [0.1432, 0.5701, 0.0833, 0.2997], [0.9611, 0.7478, 0.534, 0.4084], [0.2617, 0.1127, 0.9324, 0.0403], [0.8816, 0.119, 0.2531, 0.9815], [0.2147, 0.6959, 0.4287, 0.6184], [0.6434, 0.9607, 0.8893, 0.3216], [0.2212, 0.3104, 0.1408, 0.0764], [0.0911, 0.6396, 0.6595, 0.2601], [0.2157, 0.0595, 0.6066, 0.8609], [0.6108, 0.8996, 0.1268, 0.1015], [0.4248, 0.9608, 0.2841, 0.3893], [0.8856, 0.962, 0.0078, 0.7469], [0.3506, 0.8683, 0.7786, 0.3946]]],[0, 0, 0, 0], 1, true, 1, Con55195), 
LRes96167 = reshape_layer(Con55195, [5, 4, 1], Res96167), 
LAve2321 = average_layer([[[[[0.1198]]]], [[[[0.4672]]]]], Ave2321), 
LZer65345 = zero_padding2D_layer(Ave2321, 4, 0, 3, 0, Zer65345), 
LAdd11624 = add_layer([Res96167,Zer65345], Add11624), 
LRes88669 = reshape_layer(Add11624, [5, 4], Res88669), 
LDot32851 = dot_layer([[[0.261, 0.1309, 0.6777], [0.0198, 0.2921, 0.0295]]], [[[0.0911, 0.6286, 0.3585], [0.192, 0.8711, 0.7553]]], 1, 1, Dot32851), 
LDot87058 = dot_layer([[[0.6858, 0.181], [0.7931, 0.5511], [0.3556, 0.8763]]], [[[0.3344, 0.4902], [0.8587, 0.9794], [0.8399, 0.271]]], 2, 2, Dot87058), 
LMul10151 = multiply_layer([Dot32851,Dot87058], Mul10151), 
LLay81852 = layer_normalization_layer(Mul10151, 1, 2.0222292361267034, Lay81852), 
LZer99985 = zero_padding1D_layer(Lay81852, 2, 0, Zer99985), 
LCon86683 = concatenate_layer([Zer99985,[[[0.3996], [0.2406], [0.5376], [0.6987], [0.6047]]]], 2, Con86683), 
LSub97942 = subtract_layer(Res88669,Con86683, Sub97942), 
exec_layers([LSub50518,LRes55591,LZer42228,LRes38242,LCon55195,LRes96167,LAve2321,LZer65345,LAdd11624,LRes88669,LDot32851,LDot87058,LMul10151,LLay81852,LZer99985,LCon86683,LSub97942],["Sub50518","Res55591","Zer42228","Res38242","Con55195","Res96167","Ave2321","Zer65345","Add11624","Res88669","Dot32851","Dot87058","Mul10151","Lay81852","Zer99985","Con86683","Sub97942"],Sub97942,"Sub97942")

Actual (Unparsed): [[[0.0000000, 0.0000000, 0.0000000, -0.3996000], [1.2994515, 0.8171480, 1.2341587, 0.7174445], [0.9482219, 0.9758365, 0.0037496, 0.4375831], [0.5000008, 0.1338018, 0.4042323, -0.2672285], [-0.0067403, -0.1167274, 0.0003752, -0.3112000]]]

Expected (Unparsed): [[[0.0,0.0,0.0,-0.3996],[1.2994515000000004,0.8171480300000002,1.2341586600000003,0.71744452],[0.9482219025429225,0.9758365170173651,0.003749594034531005,0.43758304000000003],[0.5000007884746301,0.133801770161471,0.40423229669037014,-0.26722852],[-0.006740331017552627,-0.11672742717883629,0.0003752292750987373,-0.31120000000000003]]]

Actual:   [[[0, 0, 0, -0.3996], [1.2995, 0.8172, 1.2342, 0.7175], [0.9483, 0.9759, 0.0038, 0.4376], [0.5001, 0.1339, 0.4043, -0.2672], [-0.0067, -0.1167, 0.0004, -0.3112]]]

Expected: [[[0, 0, 0, -0.3996], [1.2995, 0.8172, 1.2342, 0.7175], [0.9483, 0.9759, 0.0038, 0.4376], [0.5001, 0.1339, 0.4043, -0.2672], [-0.0067, -0.1167, 0.0004, -0.3112]]]