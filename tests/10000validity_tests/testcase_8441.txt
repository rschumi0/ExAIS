import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Ave97514 = tf.keras.layers.Input(shape=([2, 1, 1]))
in1Ave97514 = tf.keras.layers.Input(shape=([2, 1, 1]))

Ave97514 = keras.layers.Average(name = 'Ave97514', )([in0Ave97514,in1Ave97514])
Res76805 = keras.layers.Reshape((2, 1), name = 'Res76805', )(Ave97514)
Up_21401 = keras.layers.UpSampling1D(size=(2), name = 'Up_21401', )(Res76805)
Res21761 = keras.layers.Reshape((4, 1, 1), name = 'Res21761', )(Up_21401)
Up_47736 = keras.layers.UpSampling2D(size=(2, 2), name = 'Up_47736', )(Res21761)
Res86950 = keras.layers.Reshape((8, 2), name = 'Res86950', )(Up_47736)
Glo74260 = keras.layers.GlobalMaxPool1D(name = 'Glo74260', )(Res86950)
model = tf.keras.models.Model(inputs=[in0Ave97514,in1Ave97514], outputs=Glo74260)
in0Ave97514 = tf.constant([[[[0.0454]], [[0.2132]]]])
in1Ave97514 = tf.constant([[[[0.5878]], [[0.5269]]]])
print (np.array2string(model.predict([in0Ave97514,in1Ave97514],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Glo74260.png')

LAve97514 = average_layer([[[[[0.0454]], [[0.2132]]]], [[[[0.5878]], [[0.5269]]]]], Ave97514), 
LRes76805 = reshape_layer(Ave97514, [2, 1], Res76805), 
LUp_21401 = up_sampling1D_layer(Res76805, 2, Up_21401), 
LRes21761 = reshape_layer(Up_21401, [4, 1, 1], Res21761), 
LUp_47736 = up_sampling2D_layer(Res21761, 2, 2, Up_47736), 
LRes86950 = reshape_layer(Up_47736, [8, 2], Res86950), 
LGlo74260 = global_max_pool1D_layer(Res86950, Glo74260), 
exec_layers([LAve97514,LRes76805,LUp_21401,LRes21761,LUp_47736,LRes86950,LGlo74260],["Ave97514","Res76805","Up_21401","Res21761","Up_47736","Res86950","Glo74260"],Glo74260,"Glo74260")

Actual (Unparsed): [[0.3700500, 0.3700500]]

Expected (Unparsed): [[0.37005,0.37005]]

Actual:   [[0.3701, 0.3701]]

Expected: [[0.3701, 0.3701]]