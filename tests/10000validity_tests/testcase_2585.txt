import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Min94481 = tf.keras.layers.Input(shape=([2, 2, 2, 2]))
in1Min94481 = tf.keras.layers.Input(shape=([2, 2, 2, 2]))
in0Sub30966 = tf.keras.layers.Input(shape=([2]))
in1Sub30966 = tf.keras.layers.Input(shape=([2]))
in0Con21505 = tf.keras.layers.Input(shape=([2, 2, 3]))

Min94481 = keras.layers.Minimum(name = 'Min94481', )([in0Min94481,in1Min94481])
Mas41926 = keras.layers.Masking(mask_value=1, name = 'Mas41926', )(Min94481)
Res35009 = keras.layers.Reshape((2, 2, 4), name = 'Res35009', )(Mas41926)
Sub30966 = keras.layers.Subtract(name = 'Sub30966', )([in0Sub30966,in1Sub30966])
Res89758 = keras.layers.Reshape((2, 1), name = 'Res89758', )(Sub30966)
Res94781 = keras.layers.Reshape((2, 1, 1), name = 'Res94781', )(Res89758)
Up_51072 = keras.layers.UpSampling2D(size=(1, 1), name = 'Up_51072', )(Res94781)
Zer90770 = keras.layers.ZeroPadding2D(padding=((0, 0), (1, 0)), name = 'Zer90770', )(Up_51072)
Con21505 = keras.layers.Concatenate(axis=3, name = 'Con21505', )([Zer90770,in0Con21505])
Max78034 = keras.layers.Maximum(name = 'Max78034', )([Res35009,Con21505])
Res20241 = keras.layers.Reshape((2, 8), name = 'Res20241', )(Max78034)
Glo92013 = keras.layers.GlobalAveragePooling1D(name = 'Glo92013', )(Res20241)
model = tf.keras.models.Model(inputs=[in0Min94481,in1Min94481,in0Sub30966,in1Sub30966,in0Con21505], outputs=Glo92013)
in0Min94481 = tf.constant([[[[[0.0478, 0.3877], [0.4453, 0.4944]], [[0.5836, 0.1543], [0.7624, 0.4643]]], [[[0.4042, 0.4191], [0.9129, 0.0779]], [[0.8012, 0.1934], [0.0669, 0.5197]]]]])
in1Min94481 = tf.constant([[[[[0.1406, 0.4626], [0.9175, 0.3936]], [[0.651, 0.8105], [0.367, 0.0078]]], [[[0.0955, 0.1835], [0.564, 0.0171]], [[0.0875, 0.0257], [0.5969, 0.1717]]]]])
in0Sub30966 = tf.constant([[0.002, 0.7146]])
in1Sub30966 = tf.constant([[0.1677, 0.5719]])
in0Con21505 = tf.constant([[[[0.1126, 0.8836, 0.7404], [0.8656, 0.076, 0.1177]], [[0.1987, 0.4427, 0.2915], [0.0932, 0.3519, 0.1923]]]])
print (np.array2string(model.predict([in0Min94481,in1Min94481,in0Sub30966,in1Sub30966,in0Con21505],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Glo92013.png')

LMin94481 = minimum_layer([[[[[[0.0478, 0.3877], [0.4453, 0.4944]], [[0.5836, 0.1543], [0.7624, 0.4643]]], [[[0.4042, 0.4191], [0.9129, 0.0779]], [[0.8012, 0.1934], [0.0669, 0.5197]]]]], [[[[[0.1406, 0.4626], [0.9175, 0.3936]], [[0.651, 0.8105], [0.367, 0.0078]]], [[[0.0955, 0.1835], [0.564, 0.0171]], [[0.0875, 0.0257], [0.5969, 0.1717]]]]]], Min94481), 
LMas41926 = masking_layer(Min94481, 1, Mas41926), 
LRes35009 = reshape_layer(Mas41926, [2, 2, 4], Res35009), 
LSub30966 = subtract_layer([[0.002, 0.7146]], [[0.1677, 0.5719]], Sub30966), 
LRes89758 = reshape_layer(Sub30966, [2, 1], Res89758), 
LRes94781 = reshape_layer(Res89758, [2, 1, 1], Res94781), 
LUp_51072 = up_sampling2D_layer(Res94781, 1, 1, Up_51072), 
LZer90770 = zero_padding2D_layer(Up_51072, 0, 0, 1, 0, Zer90770), 
LCon21505 = concatenate_layer([Zer90770,[[[[0.1126, 0.8836, 0.7404], [0.8656, 0.076, 0.1177]], [[0.1987, 0.4427, 0.2915], [0.0932, 0.3519, 0.1923]]]]], 3, Con21505), 
LMax78034 = maximum_layer([Res35009,Con21505], Max78034), 
LRes20241 = reshape_layer(Max78034, [2, 8], Res20241), 
LGlo92013 = global_average_pooling1D_layer(Res20241, Glo92013), 
exec_layers([LMin94481,LMas41926,LRes35009,LSub30966,LRes89758,LRes94781,LUp_51072,LZer90770,LCon21505,LMax78034,LRes20241,LGlo92013],["Min94481","Mas41926","Res35009","Sub30966","Res89758","Res94781","Up_51072","Zer90770","Con21505","Max78034","Res20241","Glo92013"],Glo92013,"Glo92013")

Actual (Unparsed): [[0.0716500, 0.2932000, 0.7238000, 0.5159500, 0.3631500, 0.4794000, 0.3594500, 0.1550000]]

Expected (Unparsed): [[0.07165,0.2932,0.7238,0.5159499999999999,0.36315000000000003,0.47940000000000005,0.35945,0.155]]

Actual:   [[0.0717, 0.2932, 0.7238, 0.516, 0.3632, 0.4794, 0.3595, 0.155]]

Expected: [[0.0717, 0.2932, 0.7238, 0.516, 0.3632, 0.4795, 0.3595, 0.155]]