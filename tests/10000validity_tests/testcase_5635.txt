import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Mul32150 = tf.keras.layers.Input(shape=([1, 2, 2]))
in1Mul32150 = tf.keras.layers.Input(shape=([1, 2, 2]))
in0Zer51119 = tf.keras.layers.Input(shape=([3, 3, 2]))
in0Con34124 = tf.keras.layers.Input(shape=([2]))

Mul32150 = keras.layers.Multiply(name = 'Mul32150', )([in0Mul32150,in1Mul32150])
Res60943 = keras.layers.Reshape((1, 4), name = 'Res60943', )(Mul32150)
Fla46507 = keras.layers.Flatten(name = 'Fla46507', )(Res60943)
Zer51119 = keras.layers.ZeroPadding2D(padding=((1, 1), (1, 1)), name = 'Zer51119', )(in0Zer51119)
Res64920 = keras.layers.Reshape((5, 10), name = 'Res64920', )(Zer51119)
LST72924 = keras.layers.LSTM(2,recurrent_activation='sigmoid', name = 'LST72924', )(Res64920)
Con34124 = keras.layers.Concatenate(axis=1, name = 'Con34124', )([LST72924,in0Con34124])
Ave40553 = keras.layers.Average(name = 'Ave40553', )([Fla46507,Con34124])
model = tf.keras.models.Model(inputs=[in0Mul32150,in1Mul32150,in0Zer51119,in0Con34124], outputs=Ave40553)
w = model.get_layer('LST72924').get_weights() 
w[0] = np.array([[7, 5, 3, 9, 2, 7, 8, 9], [10, 10, 8, 8, 6, 5, 5, 3], [2, 3, 1, 1, 2, 9, 4, 4], [10, 8, 2, 6, 6, 8, 3, 9], [6, 9, 2, 4, 7, 7, 4, 9], [9, 2, 4, 4, 8, 2, 10, 4], [8, 3, 10, 5, 10, 8, 1, 1], [2, 4, 1, 3, 4, 2, 8, 3], [2, 9, 3, 10, 7, 9, 6, 5], [8, 3, 1, 3, 10, 1, 9, 7]])
w[1] = np.array([[4, 1, 4, 6, 8, 3, 7, 8], [6, 10, 1, 6, 8, 8, 9, 7]])
w[2] = np.array([1, 5, 5, 3, 8, 7, 4, 3])
model.get_layer('LST72924').set_weights(w) 
in0Mul32150 = tf.constant([[[[0.3924, 0.8923], [0.6511, 0.8316]]]])
in1Mul32150 = tf.constant([[[[0.0406, 0.5352], [0.5602, 0.014]]]])
in0Zer51119 = tf.constant([[[[1.9708, 1.0114], [1.3786, 1.9665], [1.5431, 1.9087]], [[1.7995, 1.1129], [1.6947, 1.8103], [1.8056, 1.0326]], [[1.0023, 1.4908], [1.1377, 1.3028], [1.7062, 1.0187]]]])
in0Con34124 = tf.constant([[0.7158, 0.9882]])
print (np.array2string(model.predict([in0Mul32150,in1Mul32150,in0Zer51119,in0Con34124],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Ave40553.png')

LMul32150 = multiply_layer([[[[[0.3924, 0.8923], [0.6511, 0.8316]]]], [[[[0.0406, 0.5352], [0.5602, 0.014]]]]], Mul32150), 
LRes60943 = reshape_layer(Mul32150, [1, 4], Res60943), 
LFla46507 = flatten_layer(Res60943, Fla46507), 
LZer51119 = zero_padding2D_layer([[[[1.9708, 1.0114], [1.3786, 1.9665], [1.5431, 1.9087]], [[1.7995, 1.1129], [1.6947, 1.8103], [1.8056, 1.0326]], [[1.0023, 1.4908], [1.1377, 1.3028], [1.7062, 1.0187]]]], 1, 1, 1, 1, Zer51119), 
LRes64920 = reshape_layer(Zer51119, [5, 10], Res64920), 
LLST72924 = lstm_layer(Res64920,[[7, 5, 3, 9, 2, 7, 8, 9], [10, 10, 8, 8, 6, 5, 5, 3], [2, 3, 1, 1, 2, 9, 4, 4], [10, 8, 2, 6, 6, 8, 3, 9], [6, 9, 2, 4, 7, 7, 4, 9], [9, 2, 4, 4, 8, 2, 10, 4], [8, 3, 10, 5, 10, 8, 1, 1], [2, 4, 1, 3, 4, 2, 8, 3], [2, 9, 3, 10, 7, 9, 6, 5], [8, 3, 1, 3, 10, 1, 9, 7]],[[4, 1, 4, 6, 8, 3, 7, 8], [6, 10, 1, 6, 8, 8, 9, 7]],[1, 5, 5, 3, 8, 7, 4, 3], LST72924), 
LCon34124 = concatenate_layer([LST72924,[[0.7158, 0.9882]]], 1, Con34124), 
LAve40553 = average_layer([Fla46507,Con34124], Ave40553), 
exec_layers([LMul32150,LRes60943,LFla46507,LZer51119,LRes64920,LLST72924,LCon34124,LAve40553],["Mul32150","Res60943","Fla46507","Zer51119","Res64920","LST72924","Con34124","Ave40553"],Ave40553,"Ave40553")

Actual (Unparsed): [[0.5078880, 0.7387335, 0.5402731, 0.4999212]]

Expected (Unparsed): [[0.507887954051936,0.738733462394487,0.54027311,0.4999212]]

Actual:   [[0.5079, 0.7388, 0.5403, 0.5]]

Expected: [[0.5079, 0.7388, 0.5403, 0.5]]