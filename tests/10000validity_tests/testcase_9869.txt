import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Sub60147 = tf.keras.layers.Input(shape=([3, 2]))
in1Sub60147 = tf.keras.layers.Input(shape=([3, 2]))
in0Con29754 = tf.keras.layers.Input(shape=([5, 2, 7, 1]))
in0Sim47173 = tf.keras.layers.Input(shape=([1, 1]))
in0Con82018 = tf.keras.layers.Input(shape=([2, 2, 3]))
in0Bat49673 = tf.keras.layers.Input(shape=([2, 2, 4]))
in0Con86917 = tf.keras.layers.Input(shape=([2, 2, 1]))
in0Con67672 = tf.keras.layers.Input(shape=([2, 2, 2]))
in0Con25513 = tf.keras.layers.Input(shape=([2, 2, 4, 1]))
in0Cro30083 = tf.keras.layers.Input(shape=([3, 4, 3, 2]))

Sub60147 = keras.layers.Subtract(name = 'Sub60147', )([in0Sub60147,in1Sub60147])
Zer69578 = keras.layers.ZeroPadding1D(padding=((1, 1)), name = 'Zer69578', )(Sub60147)
Res70078 = keras.layers.Reshape((5, 2, 1), name = 'Res70078', )(Zer69578)
Res19004 = keras.layers.Reshape((5, 2, 1, 1), name = 'Res19004', )(Res70078)
Zer60171 = keras.layers.ZeroPadding3D(padding=((0, 0), (0, 0), (6, 0)), name = 'Zer60171', )(Res19004)
Con29754 = keras.layers.Concatenate(axis=4, name = 'Con29754', )([Zer60171,in0Con29754])
Sim47173 = keras.layers.SimpleRNN(1,name = 'Sim47173', )(in0Sim47173)
Res57303 = keras.layers.Reshape((1, 1), name = 'Res57303', )(Sim47173)
Res61416 = keras.layers.Reshape((1, 1, 1), name = 'Res61416', )(Res57303)
Zer75710 = keras.layers.ZeroPadding2D(padding=((1, 0), (1, 0)), name = 'Zer75710', )(Res61416)
Con82018 = keras.layers.Concatenate(axis=3, name = 'Con82018', )([Zer75710,in0Con82018])
Bat49673 = keras.layers.BatchNormalization(axis=2, epsilon=0.315785340676645,  name = 'Bat49673', )(in0Bat49673)
Ave84293 = keras.layers.Average(name = 'Ave84293', )([Con82018,Bat49673])
Con86917 = keras.layers.Conv2D(2, (1, 1),strides=(1, 1), padding='same', dilation_rate=(1, 1), name = 'Con86917', )(in0Con86917)
Con67672 = keras.layers.Concatenate(axis=3, name = 'Con67672', )([Con86917,in0Con67672])
Max61078 = keras.layers.Maximum(name = 'Max61078', )([Ave84293,Con67672])
Res24587 = keras.layers.Reshape((2, 2, 4, 1), name = 'Res24587', )(Max61078)
Con25513 = keras.layers.Concatenate(axis=4, name = 'Con25513', )([Res24587,in0Con25513])
Cro30083 = keras.layers.Cropping3D(cropping=((0, 1), (3, 0), (1, 0)), name = 'Cro30083', )(in0Cro30083)
Zer44952 = keras.layers.ZeroPadding3D(padding=((0, 0), (1, 0), (2, 0)), name = 'Zer44952', )(Cro30083)
Ave31220 = keras.layers.Average(name = 'Ave31220', )([Con25513,Zer44952])
Zer16797 = keras.layers.ZeroPadding3D(padding=((3, 0), (0, 0), (3, 0)), name = 'Zer16797', )(Ave31220)
Add41504 = keras.layers.Add(name = 'Add41504', )([Con29754,Zer16797])
model = tf.keras.models.Model(inputs=[in0Sub60147,in1Sub60147,in0Con29754,in0Sim47173,in0Con82018,in0Bat49673,in0Con86917,in0Con67672,in0Con25513,in0Cro30083], outputs=Add41504)
w = model.get_layer('Sim47173').get_weights() 
w[0] = np.array([[9]])
w[1] = np.array([[3]])
w[2] = np.array([6])
model.get_layer('Sim47173').set_weights(w) 
w = model.get_layer('Bat49673').get_weights() 
w[0] = np.array([0.1048, 0.1828])
w[1] = np.array([0.8339, 0.1089])
w[2] = np.array([0.3489, 0.1268])
w[3] = np.array([0.483, 0.7334])
model.get_layer('Bat49673').set_weights(w) 
w = model.get_layer('Con86917').get_weights() 
w[0] = np.array([[[[0.7263, 0.396]]]])
w[1] = np.array([0, 0])
model.get_layer('Con86917').set_weights(w) 
in0Sub60147 = tf.constant([[[0.0289, 0.9397], [0.1281, 0.7618], [0.7228, 0.9931]]])
in1Sub60147 = tf.constant([[[0.7256, 0.9529], [0.6952, 0.4451], [0.1584, 0.4366]]])
in0Con29754 = tf.constant([[[[[0.0898], [0.9565], [0.0409], [0.3999], [0.3807], [0.1973], [0.176]], [[0.3323], [0.5695], [0.0211], [0.157], [0.0845], [0.1263], [0.7657]]], [[[0.0302], [0.7019], [0.3777], [0.4274], [0.0752], [0.3857], [0.6095]], [[0.3481], [0.4001], [0.1411], [0.0806], [0.9663], [0.4282], [0.5227]]], [[[0.0172], [0.8183], [0.4209], [0.55], [0.3408], [0.3564], [0.5659]], [[0.0807], [0.2256], [0.4371], [0.7039], [0.5363], [0.5775], [0.5249]]], [[[0.4691], [0.9024], [0.1784], [0.7551], [0.4737], [0.3461], [0.5528]], [[0.0052], [0.1784], [0.632], [0.5753], [0.0336], [0.2631], [0.7526]]], [[[0.4634], [0.5646], [0.6333], [0.8375], [0.0758], [0.9192], [0.6826]], [[0.456], [0.3716], [0.4239], [0.0659], [0.8871], [0.4775], [0.3629]]]]])
in0Sim47173 = tf.constant([[[2]]])
in0Con82018 = tf.constant([[[[0.6125, 0.1078, 0.7962], [0.7524, 0.8001, 0.7753]], [[0.5869, 0.1801, 0.0402], [0.0774, 0.6834, 0.9919]]]])
in0Bat49673 = tf.constant([[[[1.3111, 1.3268, 1.6813, 1.4224], [1.5465, 1.0527, 1.5684, 1.7159]], [[1.5153, 1.3789, 1.4011, 1.3318], [1.0402, 1.7689, 1.8484, 1.647]]]])
in0Con86917 = tf.constant([[[[0.1741], [0.8012]], [[0.5231], [0.6486]]]])
in0Con67672 = tf.constant([[[[0.0644, 0.5081], [0.2918, 0.8151]], [[0.3614, 0.2706], [0.2969, 0.3213]]]])
in0Con25513 = tf.constant([[[[[0.077], [0.5487], [0.9065], [0.2128]], [[0.8432], [0.9295], [0.2895], [0.4892]]], [[[0.1629], [0.1073], [0.2931], [0.3081]], [[0.3038], [0.1324], [0.2698], [0.5747]]]]])
in0Cro30083 = tf.constant([[[[[1.0891, 1.314], [1.2151, 1.4317], [1.1514, 1.714]], [[1.4846, 1.1757], [1.2677, 1.4565], [1.4658, 1.3021]], [[1.2569, 1.0355], [1.7931, 1.8577], [1.696, 1.4314]], [[1.1442, 1.2943], [1.4154, 1.8556], [1.0149, 1.7246]]], [[[1.5796, 1.8051], [1.9896, 1.419], [1.078, 1.894]], [[1.9512, 1.7824], [1.7721, 1.662], [1.3871, 1.2962]], [[1.9994, 1.5811], [1.191, 1.9472], [1.6142, 1.7743]], [[1.1338, 1.4757], [1.7655, 1.544], [1.4833, 1.371]]], [[[1.5545, 1.6642], [1.0892, 1.918], [1.6949, 1.5348]], [[1.6188, 1.7571], [1.3041, 1.7186], [1.525, 1.3558]], [[1.9981, 1.0844], [1.7647, 1.5123], [1.5304, 1.7671]], [[1.241, 1.5113], [1.3196, 1.4198], [1.4413, 1.834]]]]])
print (np.array2string(model.predict([in0Sub60147,in1Sub60147,in0Con29754,in0Sim47173,in0Con82018,in0Bat49673,in0Con86917,in0Con67672,in0Con25513,in0Cro30083],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Add41504.png')

LSub60147 = subtract_layer([[[0.0289, 0.9397], [0.1281, 0.7618], [0.7228, 0.9931]]], [[[0.7256, 0.9529], [0.6952, 0.4451], [0.1584, 0.4366]]], Sub60147), 
LZer69578 = zero_padding1D_layer(Sub60147, 1, 1, Zer69578), 
LRes70078 = reshape_layer(Zer69578, [5, 2, 1], Res70078), 
LRes19004 = reshape_layer(Res70078, [5, 2, 1, 1], Res19004), 
LZer60171 = zero_padding3D_layer(Res19004, 0, 0, 0, 0, 6, 0, Zer60171), 
LCon29754 = concatenate_layer([Zer60171,[[[[[0.0898], [0.9565], [0.0409], [0.3999], [0.3807], [0.1973], [0.176]], [[0.3323], [0.5695], [0.0211], [0.157], [0.0845], [0.1263], [0.7657]]], [[[0.0302], [0.7019], [0.3777], [0.4274], [0.0752], [0.3857], [0.6095]], [[0.3481], [0.4001], [0.1411], [0.0806], [0.9663], [0.4282], [0.5227]]], [[[0.0172], [0.8183], [0.4209], [0.55], [0.3408], [0.3564], [0.5659]], [[0.0807], [0.2256], [0.4371], [0.7039], [0.5363], [0.5775], [0.5249]]], [[[0.4691], [0.9024], [0.1784], [0.7551], [0.4737], [0.3461], [0.5528]], [[0.0052], [0.1784], [0.632], [0.5753], [0.0336], [0.2631], [0.7526]]], [[[0.4634], [0.5646], [0.6333], [0.8375], [0.0758], [0.9192], [0.6826]], [[0.456], [0.3716], [0.4239], [0.0659], [0.8871], [0.4775], [0.3629]]]]]], 4, Con29754), 
LSim47173 = simple_rnn_layer([[[2]]],[[9]],[[3]],[6], Sim47173), 
LRes57303 = reshape_layer(Sim47173, [1, 1], Res57303), 
LRes61416 = reshape_layer(Res57303, [1, 1, 1], Res61416), 
LZer75710 = zero_padding2D_layer(Res61416, 1, 0, 1, 0, Zer75710), 
LCon82018 = concatenate_layer([Zer75710,[[[[0.6125, 0.1078, 0.7962], [0.7524, 0.8001, 0.7753]], [[0.5869, 0.1801, 0.0402], [0.0774, 0.6834, 0.9919]]]]], 3, Con82018), 
LBat49673 = batch_normalization_layer([[[[1.3111, 1.3268, 1.6813, 1.4224], [1.5465, 1.0527, 1.5684, 1.7159]], [[1.5153, 1.3789, 1.4011, 1.3318], [1.0402, 1.7689, 1.8484, 1.647]]]], 2, 0.315785340676645, [0.1048, 0.1828], [0.8339, 0.1089], [0.3489, 0.1268], [0.483, 0.7334], Bat49673), 
LAve84293 = average_layer([Con82018,Bat49673], Ave84293), 
LCon86917 = conv2D_layer([[[[0.1741], [0.8012]], [[0.5231], [0.6486]]]], 1, 1,[[[[0.7263, 0.396]]]],[0, 0], 1, 1, true, 1, 1, Con86917), 
LCon67672 = concatenate_layer([Con86917,[[[[0.0644, 0.5081], [0.2918, 0.8151]], [[0.3614, 0.2706], [0.2969, 0.3213]]]]], 3, Con67672), 
LMax61078 = maximum_layer([Ave84293,Con67672], Max61078), 
LRes24587 = reshape_layer(Max61078, [2, 2, 4, 1], Res24587), 
LCon25513 = concatenate_layer([Res24587,[[[[[0.077], [0.5487], [0.9065], [0.2128]], [[0.8432], [0.9295], [0.2895], [0.4892]]], [[[0.1629], [0.1073], [0.2931], [0.3081]], [[0.3038], [0.1324], [0.2698], [0.5747]]]]]], 4, Con25513), 
LCro30083 = cropping3D_layer([[[[[1.0891, 1.314], [1.2151, 1.4317], [1.1514, 1.714]], [[1.4846, 1.1757], [1.2677, 1.4565], [1.4658, 1.3021]], [[1.2569, 1.0355], [1.7931, 1.8577], [1.696, 1.4314]], [[1.1442, 1.2943], [1.4154, 1.8556], [1.0149, 1.7246]]], [[[1.5796, 1.8051], [1.9896, 1.419], [1.078, 1.894]], [[1.9512, 1.7824], [1.7721, 1.662], [1.3871, 1.2962]], [[1.9994, 1.5811], [1.191, 1.9472], [1.6142, 1.7743]], [[1.1338, 1.4757], [1.7655, 1.544], [1.4833, 1.371]]], [[[1.5545, 1.6642], [1.0892, 1.918], [1.6949, 1.5348]], [[1.6188, 1.7571], [1.3041, 1.7186], [1.525, 1.3558]], [[1.9981, 1.0844], [1.7647, 1.5123], [1.5304, 1.7671]], [[1.241, 1.5113], [1.3196, 1.4198], [1.4413, 1.834]]]]], 0, 1, 3, 0, 1, 0, Cro30083), 
LZer44952 = zero_padding3D_layer(Cro30083, 0, 0, 1, 0, 2, 0, Zer44952), 
LAve31220 = average_layer([Con25513,Zer44952], Ave31220), 
LZer16797 = zero_padding3D_layer(Ave31220, 3, 0, 0, 0, 3, 0, Zer16797), 
LAdd41504 = add_layer([Con29754,Zer16797], Add41504), 
exec_layers([LSub60147,LZer69578,LRes70078,LRes19004,LZer60171,LCon29754,LSim47173,LRes57303,LRes61416,LZer75710,LCon82018,LBat49673,LAve84293,LCon86917,LCon67672,LMax61078,LRes24587,LCon25513,LCro30083,LZer44952,LAve31220,LZer16797,LAdd41504],["Sub60147","Zer69578","Res70078","Res19004","Zer60171","Con29754","Sim47173","Res57303","Res61416","Zer75710","Con82018","Bat49673","Ave84293","Con86917","Con67672","Max61078","Res24587","Con25513","Cro30083","Zer44952","Ave31220","Zer16797","Add41504"],Add41504,"Add41504")

Actual (Unparsed): [[[[[0.0000000, 0.0898000], [0.0000000, 0.9565000], [0.0000000, 0.0409000], [0.0000000, 0.3999000], [0.0000000, 0.3807000], [0.0000000, 0.1973000], [0.0000000, 0.1760000]], [[0.0000000, 0.3323000], [0.0000000, 0.5695000], [0.0000000, 0.0211000], [0.0000000, 0.1570000], [0.0000000, 0.0845000], [0.0000000, 0.1263000], [0.0000000, 0.7657000]]], [[[0.0000000, 0.0302000], [0.0000000, 0.7019000], [0.0000000, 0.3777000], [0.0000000, 0.4274000], [0.0000000, 0.0752000], [0.0000000, 0.3857000], [-0.6967000, 0.6095000]], [[0.0000000, 0.3481000], [0.0000000, 0.4001000], [0.0000000, 0.1411000], [0.0000000, 0.0806000], [0.0000000, 0.9663000], [0.0000000, 0.4282000], [-0.0132000, 0.5227000]]], [[[0.0000000, 0.0172000], [0.0000000, 0.8183000], [0.0000000, 0.4209000], [0.0000000, 0.5500000], [0.0000000, 0.3408000], [0.0000000, 0.3564000], [-0.5671000, 0.5659000]], [[0.0000000, 0.0807000], [0.0000000, 0.2256000], [0.0000000, 0.4371000], [0.0000000, 0.7039000], [0.0000000, 0.5363000], [0.0000000, 0.5775000], [0.3167000, 0.5249000]]], [[[0.0000000, 0.4691000], [0.0000000, 0.9024000], [0.0000000, 0.1784000], [0.2366817, 0.7936000], [0.3902669, 0.7480500], [0.2744840, 0.7993500], [1.0033944, 0.6592000]], [[0.0000000, 0.0052000], [0.0000000, 0.1784000], [0.0000000, 0.6320000], [0.2909558, 0.9969000], [0.2566349, 0.4983500], [0.9992684, 1.3356500], [1.4715000, 1.8595000]]], [[[0.0000000, 0.4634000], [0.0000000, 0.5646000], [0.0000000, 0.6333000], [0.2426677, 0.9189500], [0.3853942, 0.1294500], [0.2843450, 1.0657500], [0.2473385, 0.8366500]], [[0.0000000, 0.4560000], [0.0000000, 0.3716000], [0.0000000, 0.4239000], [0.3179772, 0.2178000], [0.1284228, 0.9533000], [1.1576358, 1.3844000], [1.0846751, 1.3357500]]]]]

Expected (Unparsed): [[[[[0,0.0898],[0,0.9565],[0,0.0409],[0,0.3999],[0,0.3807],[0,0.1973],[0,0.176]],[[0,0.3323],[0,0.5695],[0,0.0211],[0,0.157],[0,0.0845],[0,0.1263],[0,0.7657]]],[[[0,0.0302],[0,0.7019],[0,0.3777],[0,0.4274],[0,0.0752],[0,0.3857],[-0.6967,0.6095]],[[0,0.3481],[0,0.4001],[0,0.1411],[0,0.0806],[0,0.9663],[0,0.4282],[-0.01319999999999999,0.5227]]],[[[0,0.0172],[0,0.8183],[0,0.4209],[0,0.55],[0,0.3408],[0,0.3564],[-0.5671,0.5659]],[[0,0.0807],[0,0.2256],[0,0.4371],[0,0.7039],[0,0.5363],[0,0.5775],[0.31670000000000004,0.5249]]],[[[0,0.4691],[0,0.9024],[0,0.1784],[0.23668165592195253,0.7936],[0.3902668975536036,0.74805],[0.274483977707763,0.79935],[1.0033943879985616,0.6592]],[[0,0.0052],[0,0.1784],[0,0.632],[0.29095578,0.9969],[0.2566349031884621,0.49835],[0.9992683458650902,1.3356499999999998],[1.4715,1.8595000000000002]]],[[[0,0.4634],[0,0.5646],[0,0.6333],[0.2426677286087772,0.91895],[0.38539419621659854,0.12945],[0.28434498374670386,1.06575],[0.24733847132164533,0.83665]],[[0,0.456],[0,0.3716],[0,0.4239],[0.31797720387983724,0.2178],[0.1284228,0.9533],[1.1576358103782876,1.3844],[1.0846751591177235,1.33575]]]]]

Actual:   [[[[[0, 0.0898], [0, 0.9565], [0, 0.0409], [0, 0.3999], [0, 0.3807], [0, 0.1973], [0, 0.176]], [[0, 0.3323], [0, 0.5695], [0, 0.0211], [0, 0.157], [0, 0.0845], [0, 0.1263], [0, 0.7657]]], [[[0, 0.0302], [0, 0.7019], [0, 0.3777], [0, 0.4274], [0, 0.0752], [0, 0.3857], [-0.6967, 0.6095]], [[0, 0.3481], [0, 0.4001], [0, 0.1411], [0, 0.0806], [0, 0.9663], [0, 0.4282], [-0.0132, 0.5227]]], [[[0, 0.0172], [0, 0.8183], [0, 0.4209], [0, 0.55], [0, 0.3408], [0, 0.3564], [-0.5671, 0.5659]], [[0, 0.0807], [0, 0.2256], [0, 0.4371], [0, 0.7039], [0, 0.5363], [0, 0.5775], [0.3167, 0.5249]]], [[[0, 0.4691], [0, 0.9024], [0, 0.1784], [0.2367, 0.7936], [0.3903, 0.7481], [0.2745, 0.7994], [1.0034, 0.6592]], [[0, 0.0052], [0, 0.1784], [0, 0.632], [0.291, 0.9969], [0.2567, 0.4984], [0.9993, 1.3357], [1.4715, 1.8595]]], [[[0, 0.4634], [0, 0.5646], [0, 0.6333], [0.2427, 0.919], [0.3854, 0.1295], [0.2844, 1.0658], [0.2474, 0.8367]], [[0, 0.456], [0, 0.3716], [0, 0.4239], [0.318, 0.2178], [0.1285, 0.9533], [1.1577, 1.3844], [1.0847, 1.3358]]]]]

Expected: [[[[[0, 0.0898], [0, 0.9565], [0, 0.0409], [0, 0.3999], [0, 0.3807], [0, 0.1973], [0, 0.176]], [[0, 0.3323], [0, 0.5695], [0, 0.0211], [0, 0.157], [0, 0.0845], [0, 0.1263], [0, 0.7657]]], [[[0, 0.0302], [0, 0.7019], [0, 0.3777], [0, 0.4274], [0, 0.0752], [0, 0.3857], [-0.6967, 0.6095]], [[0, 0.3481], [0, 0.4001], [0, 0.1411], [0, 0.0806], [0, 0.9663], [0, 0.4282], [-0.0131, 0.5227]]], [[[0, 0.0172], [0, 0.8183], [0, 0.4209], [0, 0.55], [0, 0.3408], [0, 0.3564], [-0.5671, 0.5659]], [[0, 0.0807], [0, 0.2256], [0, 0.4371], [0, 0.7039], [0, 0.5363], [0, 0.5775], [0.3168, 0.5249]]], [[[0, 0.4691], [0, 0.9024], [0, 0.1784], [0.2367, 0.7936], [0.3903, 0.7481], [0.2745, 0.7994], [1.0034, 0.6592]], [[0, 0.0052], [0, 0.1784], [0, 0.632], [0.291, 0.9969], [0.2567, 0.4984], [0.9993, 1.3357], [1.4715, 1.8596]]], [[[0, 0.4634], [0, 0.5646], [0, 0.6333], [0.2427, 0.919], [0.3854, 0.1295], [0.2844, 1.0658], [0.2474, 0.8367]], [[0, 0.456], [0, 0.3716], [0, 0.4239], [0.318, 0.2178], [0.1285, 0.9533], [1.1577, 1.3844], [1.0847, 1.3358]]]]]