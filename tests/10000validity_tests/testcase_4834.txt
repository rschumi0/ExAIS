import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Lay4111 = tf.keras.layers.Input(shape=([1, 3, 3]))
in0Con80875 = tf.keras.layers.Input(shape=([4, 1]))
in0Mas28819 = tf.keras.layers.Input(shape=([4, 2]))

Lay4111 = keras.layers.LayerNormalization(axis=1, epsilon=1.4210970914958063, name = 'Lay4111', )(in0Lay4111)
Res28868 = keras.layers.Reshape((1, 9), name = 'Res28868', )(Lay4111)
Fla41145 = keras.layers.Flatten(name = 'Fla41145', )(Res28868)
Res47718 = keras.layers.Reshape((9, 1), name = 'Res47718', )(Fla41145)
Res74932 = keras.layers.Reshape((9, 1, 1), name = 'Res74932', )(Res47718)
Glo69267 = keras.layers.GlobalMaxPool2D(name = 'Glo69267', )(Res74932)
Res38119 = keras.layers.Reshape((1, 1), name = 'Res38119', )(Glo69267)
Up_61066 = keras.layers.UpSampling1D(size=(1), name = 'Up_61066', )(Res38119)
Zer62350 = keras.layers.ZeroPadding1D(padding=((3, 0)), name = 'Zer62350', )(Up_61066)
Con80875 = keras.layers.Concatenate(axis=2, name = 'Con80875', )([Zer62350,in0Con80875])
Mas28819 = keras.layers.Masking(mask_value=1, name = 'Mas28819', )(in0Mas28819)
Mul66102 = keras.layers.Multiply(name = 'Mul66102', )([Con80875,Mas28819])
model = tf.keras.models.Model(inputs=[in0Lay4111,in0Con80875,in0Mas28819], outputs=Mul66102)
in0Lay4111 = tf.constant([[[[1.4419, 1.0377, 1.8413], [1.2514, 1.8811, 1.4321], [1.9531, 1.7548, 1.7022]]]])
in0Con80875 = tf.constant([[[0.3022], [0.8885], [0.1632], [0.4805]]])
in0Mas28819 = tf.constant([[[1.9811, 1.4847], [1.6285, 1.1791], [1.2752, 1.8064], [1.2575, 1.8727]]])
print (np.array2string(model.predict([in0Lay4111,in0Con80875,in0Mas28819],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Mul66102.png')

LLay4111 = layer_normalization_layer([[[[1.4419, 1.0377, 1.8413], [1.2514, 1.8811, 1.4321], [1.9531, 1.7548, 1.7022]]]], 1, 1.4210970914958063, Lay4111), 
LRes28868 = reshape_layer(Lay4111, [1, 9], Res28868), 
LFla41145 = flatten_layer(Res28868, Fla41145), 
LRes47718 = reshape_layer(Fla41145, [9, 1], Res47718), 
LRes74932 = reshape_layer(Res47718, [9, 1, 1], Res74932), 
LGlo69267 = global_max_pool2D_layer(Res74932, Glo69267), 
LRes38119 = reshape_layer(Glo69267, [1, 1], Res38119), 
LUp_61066 = up_sampling1D_layer(Res38119, 1, Up_61066), 
LZer62350 = zero_padding1D_layer(Up_61066, 3, 0, Zer62350), 
LCon80875 = concatenate_layer([Zer62350,[[[0.3022], [0.8885], [0.1632], [0.4805]]]], 2, Con80875), 
LMas28819 = masking_layer([[[1.9811, 1.4847], [1.6285, 1.1791], [1.2752, 1.8064], [1.2575, 1.8727]]], 1, Mas28819), 
LMul66102 = multiply_layer([Con80875,Mas28819], Mul66102), 
exec_layers([LLay4111,LRes28868,LFla41145,LRes47718,LRes74932,LGlo69267,LRes38119,LUp_61066,LZer62350,LCon80875,LMas28819,LMul66102],["Lay4111","Res28868","Fla41145","Res47718","Res74932","Glo69267","Res38119","Up_61066","Zer62350","Con80875","Mas28819","Mul66102"],Mul66102,"Mul66102")

Actual (Unparsed): [[[0.0000000, 0.4486763], [0.0000000, 1.0476304], [0.0000000, 0.2948045], [0.0000000, 0.8998324]]]

Expected (Unparsed): [[[0.0,0.44867634],[0.0,1.04763035],[0.0,0.29480448000000004],[0.0,0.89983235]]]

Actual:   [[[0, 0.4487], [0, 1.0477], [0, 0.2949], [0, 0.8999]]]

Expected: [[[0, 0.4487], [0, 1.0477], [0, 0.2949], [0, 0.8999]]]