import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Mul64286 = tf.keras.layers.Input(shape=([2, 1, 1]))
in1Mul64286 = tf.keras.layers.Input(shape=([2, 1, 1]))

Mul64286 = keras.layers.Multiply(name = 'Mul64286', )([in0Mul64286,in1Mul64286])
Res82515 = keras.layers.Reshape((2, 1), name = 'Res82515', )(Mul64286)
LST31053 = keras.layers.LSTM(3,recurrent_activation='sigmoid', name = 'LST31053', )(Res82515)
model = tf.keras.models.Model(inputs=[in0Mul64286,in1Mul64286], outputs=LST31053)
w = model.get_layer('LST31053').get_weights() 
w[0] = np.array([[8, 8, 2, 7, 10, 5, 7, 8, 9, 2, 1, 2]])
w[1] = np.array([[5, 5, 5, 9, 6, 6, 7, 1, 1, 9, 1, 9], [9, 1, 1, 10, 7, 5, 5, 7, 2, 2, 6, 5], [4, 4, 7, 5, 5, 3, 5, 2, 3, 1, 3, 2]])
w[2] = np.array([8, 7, 1, 6, 7, 1, 4, 4, 9, 6, 10, 9])
model.get_layer('LST31053').set_weights(w) 
in0Mul64286 = tf.constant([[[[0.9463]], [[0.0099]]]])
in1Mul64286 = tf.constant([[[[0.0237]], [[0.2499]]]])
print (np.array2string(model.predict([in0Mul64286,in1Mul64286],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='LST31053.png')

LMul64286 = multiply_layer([[[[[0.9463]], [[0.0099]]]], [[[[0.0237]], [[0.2499]]]]], Mul64286), 
LRes82515 = reshape_layer(Mul64286, [2, 1], Res82515), 
LLST31053 = lstm_layer(Res82515,[[8, 8, 2, 7, 10, 5, 7, 8, 9, 2, 1, 2]],[[5, 5, 5, 9, 6, 6, 7, 1, 1, 9, 1, 9], [9, 1, 1, 10, 7, 5, 5, 7, 2, 2, 6, 5], [4, 4, 7, 5, 5, 3, 5, 2, 3, 1, 3, 2]],[8, 7, 1, 6, 7, 1, 4, 4, 9, 6, 10, 9], LST31053), 
exec_layers([LMul64286,LRes82515,LLST31053],["Mul64286","Res82515","LST31053"],LST31053,"LST31053")

Actual (Unparsed): [[0.9639728, 0.9639405, 0.9401952]]

Expected (Unparsed): [[0.9639728295974878,0.9639405119248965,0.9401952166716009]]

Actual:   [[0.964, 0.964, 0.9402]]

Expected: [[0.964, 0.964, 0.9402]]