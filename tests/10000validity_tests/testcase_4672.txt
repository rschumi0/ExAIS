import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Max92027 = tf.keras.layers.Input(shape=([2, 1]))
in1Max92027 = tf.keras.layers.Input(shape=([2, 1]))
in0Con66246 = tf.keras.layers.Input(shape=([4, 3, 3, 2]))
in0Sub29702 = tf.keras.layers.Input(shape=([2, 3, 3, 3]))
in1Sub29702 = tf.keras.layers.Input(shape=([2, 3, 3, 3]))

Max92027 = keras.layers.Maximum(name = 'Max92027', )([in0Max92027,in1Max92027])
Res14171 = keras.layers.Reshape((2, 1, 1), name = 'Res14171', )(Max92027)
Res10801 = keras.layers.Reshape((2, 1, 1, 1), name = 'Res10801', )(Res14171)
Zer36473 = keras.layers.ZeroPadding3D(padding=((1, 1), (1, 1), (1, 1)), name = 'Zer36473', )(Res10801)
Con66246 = keras.layers.Concatenate(axis=4, name = 'Con66246', )([Zer36473,in0Con66246])
Sub29702 = keras.layers.Subtract(name = 'Sub29702', )([in0Sub29702,in1Sub29702])
Zer98500 = keras.layers.ZeroPadding3D(padding=((2, 0), (0, 0), (0, 0)), name = 'Zer98500', )(Sub29702)
Min46736 = keras.layers.Minimum(name = 'Min46736', )([Con66246,Zer98500])
model = tf.keras.models.Model(inputs=[in0Max92027,in1Max92027,in0Con66246,in0Sub29702,in1Sub29702], outputs=Min46736)
in0Max92027 = tf.constant([[[0.0817], [0.7031]]])
in1Max92027 = tf.constant([[[0.7431], [0.0746]]])
in0Con66246 = tf.constant([[[[[0.8814, 0.3999], [0.3843, 0.2136], [0.7786, 0.652]], [[0.3285, 0.5828], [0.0737, 0.939], [0.0654, 0.884]], [[0.9522, 0.689], [0.7452, 0.2528], [0.1235, 0.4719]]], [[[0.8982, 0.9484], [0.1061, 0.8536], [0.2263, 0.0608]], [[0.7354, 0.8812], [0.3706, 0.1892], [0.2344, 0.2912]], [[0.1489, 0.2748], [0.279, 0.5659], [0.0452, 0.1339]]], [[[0.2347, 0.9062], [0.1878, 0.0089], [0.1465, 0.0409]], [[0.657, 0.6313], [0.1221, 0.5409], [0.727, 0.8737]], [[0.4667, 0.9752], [0.5639, 0.0572], [0.2954, 0.8071]]], [[[0.9796, 0.3763], [0.3828, 0.4066], [0.0704, 0.7035]], [[0.6896, 0.932], [0.9579, 0.2475], [0.3495, 0.1224]], [[0.3938, 0.1487], [0.8957, 0.2328], [0.6898, 0.1198]]]]])
in0Sub29702 = tf.constant([[[[[0.9694, 0.6244, 0.3548], [0.4371, 0.28, 0.907], [0.5396, 0.4137, 0.7175]], [[0.3653, 0.4295, 0.6796], [0.5352, 0.6695, 0.4908], [0.6746, 0.2486, 0.5656]], [[0.1205, 0.0844, 0.2783], [0.459, 0.5966, 0.6432], [0.2177, 0.1224, 0.977]]], [[[0.4514, 0.9425, 0.4473], [0.1356, 0.3629, 0.7025], [0.9647, 0.6323, 0.5057]], [[0.6731, 0.3279, 0.5242], [0.6702, 0.1804, 0.0724], [0.5412, 0.1249, 0.9593]], [[0.7446, 0.2747, 0.3995], [0.3591, 0.9285, 0.1561], [0.7143, 0.3635, 0.7871]]]]])
in1Sub29702 = tf.constant([[[[[0.0407, 0.0278, 0.6617], [0.4851, 0.1512, 0.1256], [0.7746, 0.2608, 0.9875]], [[0.7782, 0.4171, 0.9763], [0.5613, 0.7621, 0.8617], [0.6885, 0.977, 0.451]], [[0.0571, 0.1597, 0.9471], [0.7666, 0.6512, 0.2493], [0.3041, 0.5035, 0.8694]]], [[[0.8181, 0.9503, 0.4348], [0.407, 0.1137, 0.9739], [0.1466, 0.1098, 0.6042]], [[0.8518, 0.2503, 0.2362], [0.8809, 0.7571, 0.4789], [0.5215, 0.5594, 0.9967]], [[0.1849, 0.0981, 0.0749], [0.5124, 0.9268, 0.5645], [0.8897, 0.1989, 0.1583]]]]])
print (np.array2string(model.predict([in0Max92027,in1Max92027,in0Con66246,in0Sub29702,in1Sub29702],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Min46736.png')

LMax92027 = maximum_layer([[[[0.0817], [0.7031]]], [[[0.7431], [0.0746]]]], Max92027), 
LRes14171 = reshape_layer(Max92027, [2, 1, 1], Res14171), 
LRes10801 = reshape_layer(Res14171, [2, 1, 1, 1], Res10801), 
LZer36473 = zero_padding3D_layer(Res10801, 1, 1, 1, 1, 1, 1, Zer36473), 
LCon66246 = concatenate_layer([Zer36473,[[[[[0.8814, 0.3999], [0.3843, 0.2136], [0.7786, 0.652]], [[0.3285, 0.5828], [0.0737, 0.939], [0.0654, 0.884]], [[0.9522, 0.689], [0.7452, 0.2528], [0.1235, 0.4719]]], [[[0.8982, 0.9484], [0.1061, 0.8536], [0.2263, 0.0608]], [[0.7354, 0.8812], [0.3706, 0.1892], [0.2344, 0.2912]], [[0.1489, 0.2748], [0.279, 0.5659], [0.0452, 0.1339]]], [[[0.2347, 0.9062], [0.1878, 0.0089], [0.1465, 0.0409]], [[0.657, 0.6313], [0.1221, 0.5409], [0.727, 0.8737]], [[0.4667, 0.9752], [0.5639, 0.0572], [0.2954, 0.8071]]], [[[0.9796, 0.3763], [0.3828, 0.4066], [0.0704, 0.7035]], [[0.6896, 0.932], [0.9579, 0.2475], [0.3495, 0.1224]], [[0.3938, 0.1487], [0.8957, 0.2328], [0.6898, 0.1198]]]]]], 4, Con66246), 
LSub29702 = subtract_layer([[[[[0.9694, 0.6244, 0.3548], [0.4371, 0.28, 0.907], [0.5396, 0.4137, 0.7175]], [[0.3653, 0.4295, 0.6796], [0.5352, 0.6695, 0.4908], [0.6746, 0.2486, 0.5656]], [[0.1205, 0.0844, 0.2783], [0.459, 0.5966, 0.6432], [0.2177, 0.1224, 0.977]]], [[[0.4514, 0.9425, 0.4473], [0.1356, 0.3629, 0.7025], [0.9647, 0.6323, 0.5057]], [[0.6731, 0.3279, 0.5242], [0.6702, 0.1804, 0.0724], [0.5412, 0.1249, 0.9593]], [[0.7446, 0.2747, 0.3995], [0.3591, 0.9285, 0.1561], [0.7143, 0.3635, 0.7871]]]]], [[[[[0.0407, 0.0278, 0.6617], [0.4851, 0.1512, 0.1256], [0.7746, 0.2608, 0.9875]], [[0.7782, 0.4171, 0.9763], [0.5613, 0.7621, 0.8617], [0.6885, 0.977, 0.451]], [[0.0571, 0.1597, 0.9471], [0.7666, 0.6512, 0.2493], [0.3041, 0.5035, 0.8694]]], [[[0.8181, 0.9503, 0.4348], [0.407, 0.1137, 0.9739], [0.1466, 0.1098, 0.6042]], [[0.8518, 0.2503, 0.2362], [0.8809, 0.7571, 0.4789], [0.5215, 0.5594, 0.9967]], [[0.1849, 0.0981, 0.0749], [0.5124, 0.9268, 0.5645], [0.8897, 0.1989, 0.1583]]]]], Sub29702), 
LZer98500 = zero_padding3D_layer(Sub29702, 2, 0, 0, 0, 0, 0, Zer98500), 
LMin46736 = minimum_layer([Con66246,Zer98500], Min46736), 
exec_layers([LMax92027,LRes14171,LRes10801,LZer36473,LCon66246,LSub29702,LZer98500,LMin46736],["Max92027","Res14171","Res10801","Zer36473","Con66246","Sub29702","Zer98500","Min46736"],Min46736,"Min46736")

Actual (Unparsed): [[[[[0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000]], [[0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000]], [[0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000]]], [[[0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000]], [[0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000]], [[0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000]]], [[[0.0000000, 0.2347000, -0.3069000], [-0.0480000, 0.1288000, 0.0089000], [-0.2350000, 0.1465000, -0.2700000]], [[-0.4129000, 0.0124000, -0.2967000], [-0.0261000, -0.0926000, -0.3709000], [-0.0139000, -0.7284000, 0.1146000]], [[0.0000000, -0.0753000, -0.6688000], [-0.3076000, -0.0546000, 0.0572000], [-0.0864000, -0.3811000, 0.1076000]]], [[[-0.3667000, -0.0078000, 0.0125000], [-0.2714000, 0.2492000, -0.2714000], [0.0000000, 0.0704000, -0.0985000]], [[-0.1787000, 0.0776000, 0.2880000], [-0.2107000, -0.5767000, -0.4065000], [0.0000000, -0.4345000, -0.0374000]], [[0.0000000, 0.1766000, 0.1487000], [-0.1533000, 0.0017000, -0.4084000], [-0.1754000, 0.1646000, 0.1198000]]]]]

Expected (Unparsed): [[[[[0,0,0],[0,0,0],[0,0,0]],[[0,0,0],[0,0,0],[0,0,0]],[[0,0,0],[0,0,0],[0,0,0]]],[[[0,0,0],[0,0,0],[0,0,0]],[[0,0,0],[0,0,0],[0,0,0]],[[0,0,0],[0,0,0],[0,0,0]]],[[[0,0.2347,-0.30689999999999995],[-0.04799999999999999,0.12880000000000003,0.0089],[-0.235,0.1465,-0.27]],[[-0.4129,0.012399999999999967,-0.29669999999999996],[-0.026100000000000012,-0.09260000000000002,-0.3709],[-0.013900000000000023,-0.7283999999999999,0.11459999999999998]],[[0,-0.0753,-0.6688000000000001],[-0.30759999999999993,-0.05459999999999998,0.0572],[-0.08639999999999998,-0.38109999999999994,0.10760000000000003]]],[[[-0.3667,-0.007800000000000029,0.012499999999999956],[-0.2714,0.2492,-0.2714],[0,0.0704,-0.09849999999999992]],[[-0.17869999999999997,0.0776,0.28800000000000003],[-0.2107,-0.5767,-0.4065],[0,-0.4345,-0.03739999999999999]],[[0,0.17659999999999998,0.1487],[-0.1533,0.0017000000000000348,-0.4084],[-0.1754,0.1646,0.1198]]]]]

Actual:   [[[[[0, 0, 0], [0, 0, 0], [0, 0, 0]], [[0, 0, 0], [0, 0, 0], [0, 0, 0]], [[0, 0, 0], [0, 0, 0], [0, 0, 0]]], [[[0, 0, 0], [0, 0, 0], [0, 0, 0]], [[0, 0, 0], [0, 0, 0], [0, 0, 0]], [[0, 0, 0], [0, 0, 0], [0, 0, 0]]], [[[0, 0.2347, -0.3069], [-0.048, 0.1288, 0.0089], [-0.235, 0.1465, -0.27]], [[-0.4129, 0.0124, -0.2967], [-0.0261, -0.0926, -0.3709], [-0.0139, -0.7284, 0.1146]], [[0, -0.0753, -0.6688], [-0.3076, -0.0546, 0.0572], [-0.0864, -0.3811, 0.1076]]], [[[-0.3667, -0.0078, 0.0125], [-0.2714, 0.2492, -0.2714], [0, 0.0704, -0.0985]], [[-0.1787, 0.0776, 0.288], [-0.2107, -0.5767, -0.4065], [0, -0.4345, -0.0374]], [[0, 0.1766, 0.1487], [-0.1533, 0.0017, -0.4084], [-0.1754, 0.1646, 0.1198]]]]]

Expected: [[[[[0, 0, 0], [0, 0, 0], [0, 0, 0]], [[0, 0, 0], [0, 0, 0], [0, 0, 0]], [[0, 0, 0], [0, 0, 0], [0, 0, 0]]], [[[0, 0, 0], [0, 0, 0], [0, 0, 0]], [[0, 0, 0], [0, 0, 0], [0, 0, 0]], [[0, 0, 0], [0, 0, 0], [0, 0, 0]]], [[[0, 0.2347, -0.3068], [-0.0479, 0.1289, 0.0089], [-0.235, 0.1465, -0.27]], [[-0.4129, 0.0124, -0.2966], [-0.0261, -0.0926, -0.3709], [-0.0139, -0.7283, 0.1146]], [[0, -0.0753, -0.6688], [-0.3075, -0.0545, 0.0572], [-0.0863, -0.381, 0.1077]]], [[[-0.3667, -0.0078, 0.0125], [-0.2714, 0.2492, -0.2714], [0, 0.0704, -0.0984]], [[-0.1786, 0.0776, 0.2881], [-0.2107, -0.5767, -0.4065], [0, -0.4345, -0.0373]], [[0, 0.1766, 0.1487], [-0.1533, 0.0018, -0.4084], [-0.1754, 0.1646, 0.1198]]]]]