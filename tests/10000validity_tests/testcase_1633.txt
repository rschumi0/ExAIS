import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Con96836 = tf.keras.layers.Input(shape=([1, 1, 2]))

Con96836 = keras.layers.Conv2D(4, (1, 1),strides=(1, 1), padding='same', dilation_rate=(1, 1), name = 'Con96836', )(in0Con96836)
Res10268 = keras.layers.Reshape((1, 1, 4, 1), name = 'Res10268', )(Con96836)
Zer89158 = keras.layers.ZeroPadding3D(padding=((1, 1), (1, 1), (1, 1)), name = 'Zer89158', )(Res10268)
Res58173 = keras.layers.Reshape((3, 3, 6), name = 'Res58173', )(Zer89158)
Res78732 = keras.layers.Reshape((3, 18), name = 'Res78732', )(Res58173)
Ave88433 = keras.layers.AveragePooling1D(pool_size=(2), strides=(1), padding='valid', name = 'Ave88433', )(Res78732)
model = tf.keras.models.Model(inputs=[in0Con96836], outputs=Ave88433)
w = model.get_layer('Con96836').get_weights() 
w[0] = np.array([[[[0.3877, 0.6872, 0.0924, 0.7835], [0.609, 0.5549, 0.1072, 0.2704]]]])
w[1] = np.array([0, 0, 0, 0])
model.get_layer('Con96836').set_weights(w) 
in0Con96836 = tf.constant([[[[0.3683, 0.3651]]]])
print (np.array2string(model.predict([in0Con96836],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Ave88433.png')

LCon96836 = conv2D_layer([[[[0.3683, 0.3651]]]], 1, 1,[[[[0.3877, 0.6872, 0.0924, 0.7835], [0.609, 0.5549, 0.1072, 0.2704]]]],[0, 0, 0, 0], 1, 1, true, 1, 1, Con96836), 
LRes10268 = reshape_layer(Con96836, [1, 1, 4, 1], Res10268), 
LZer89158 = zero_padding3D_layer(Res10268, 1, 1, 1, 1, 1, 1, Zer89158), 
LRes58173 = reshape_layer(Zer89158, [3, 3, 6], Res58173), 
LRes78732 = reshape_layer(Res58173, [3, 18], Res78732), 
LAve88433 = average_pooling1D_layer(Res78732, 2, 1, false, Ave88433), 
exec_layers([LCon96836,LRes10268,LZer89158,LRes58173,LRes78732,LAve88433],["Con96836","Res10268","Zer89158","Res58173","Res78732","Ave88433"],Ave88433,"Ave88433")

Actual (Unparsed): [[[0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.1825679, 0.2278449, 0.0365848, 0.1936430, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.1825679, 0.2278449, 0.0365848, 0.1936430, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000]]]

Expected (Unparsed): [[[0,0,0,0,0,0,0,0.18256790499999997,0.227844875,0.036584820000000004,0.19364304499999999,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0.18256790499999997,0.227844875,0.036584820000000004,0.19364304499999999,0,0,0,0,0,0,0]]]

Actual:   [[[0, 0, 0, 0, 0, 0, 0, 0.1826, 0.2279, 0.0366, 0.1937, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0.1826, 0.2279, 0.0366, 0.1937, 0, 0, 0, 0, 0, 0, 0]]]

Expected: [[[0, 0, 0, 0, 0, 0, 0, 0.1826, 0.2279, 0.0366, 0.1937, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0.1826, 0.2279, 0.0366, 0.1937, 0, 0, 0, 0, 0, 0, 0]]]