import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Ave99122 = tf.keras.layers.Input(shape=([2, 2, 1]))
in0Dot68781 = tf.keras.layers.Input(shape=([2]))
in1Dot68781 = tf.keras.layers.Input(shape=([2]))
in0Con38482 = tf.keras.layers.Input(shape=([1, 1]))
in0Zer51110 = tf.keras.layers.Input(shape=([1, 2, 1]))
in0Den14862 = tf.keras.layers.Input(shape=([4, 4]))
in0Con21638 = tf.keras.layers.Input(shape=([6, 14]))

Ave99122 = keras.layers.AveragePooling2D(pool_size=(2, 1), name = 'Ave99122', )(in0Ave99122)
Res34263 = keras.layers.Reshape((1, 2), name = 'Res34263', )(Ave99122)
Dot68781 = keras.layers.Dot(axes=(1, 1), name = 'Dot68781', )([in0Dot68781,in1Dot68781])
Res43914 = keras.layers.Reshape((1, 1), name = 'Res43914', )(Dot68781)
Up_16090 = keras.layers.UpSampling1D(size=(1), name = 'Up_16090', )(Res43914)
Con38482 = keras.layers.Concatenate(axis=2, name = 'Con38482', )([Up_16090,in0Con38482])
Sub90317 = keras.layers.Subtract(name = 'Sub90317', )([Res34263,Con38482])
Res39800 = keras.layers.Reshape((1, 2, 1), name = 'Res39800', )(Sub90317)
Sep71504 = keras.layers.SeparableConv2D(3, (1, 2),strides=(1, 1), padding='valid', name = 'Sep71504', )(Res39800)
Res16254 = keras.layers.Reshape((1, 1, 3, 1), name = 'Res16254', )(Sep71504)
Zer8379 = keras.layers.ZeroPadding3D(padding=((5, 0), (4, 0), (0, 0)), name = 'Zer8379', )(Res16254)
Zer51110 = keras.layers.ZeroPadding2D(padding=((1, 1), (1, 1)), name = 'Zer51110', )(in0Zer51110)
Res87746 = keras.layers.Reshape((3, 4), name = 'Res87746', )(Zer51110)
Per73697 = keras.layers.Permute((2,1), name = 'Per73697',)(Res87746)
Res57687 = keras.layers.Reshape((4, 3, 1), name = 'Res57687', )(Per73697)
Res18334 = keras.layers.Reshape((4, 3, 1, 1), name = 'Res18334', )(Res57687)
Zer74530 = keras.layers.ZeroPadding3D(padding=((1, 1), (1, 1), (1, 1)), name = 'Zer74530', )(Res18334)
Mul43846 = keras.layers.Multiply(name = 'Mul43846', )([Zer8379,Zer74530])
Res57213 = keras.layers.Reshape((6, 5, 3), name = 'Res57213', )(Mul43846)
Res81191 = keras.layers.Reshape((6, 15), name = 'Res81191', )(Res57213)
Den14862 = keras.layers.Dense(1,name = 'Den14862', )(in0Den14862)
Zer10706 = keras.layers.ZeroPadding1D(padding=((2, 0)), name = 'Zer10706', )(Den14862)
Con21638 = keras.layers.Concatenate(axis=2, name = 'Con21638', )([Zer10706,in0Con21638])
Mul62270 = keras.layers.Multiply(name = 'Mul62270', )([Res81191,Con21638])
model = tf.keras.models.Model(inputs=[in0Ave99122,in0Dot68781,in1Dot68781,in0Con38482,in0Zer51110,in0Den14862,in0Con21638], outputs=Mul62270)
w = model.get_layer('Sep71504').get_weights() 
w[0] = np.array([[[[0.517]], [[0.3883]]]])
w[1] = np.array([[[[0.4939, 0.3549, 0.0816]]]])
w[2] = np.array([0, 0, 0])
model.get_layer('Sep71504').set_weights(w) 
w = model.get_layer('Den14862').get_weights() 
w[0] = np.array([[0.526], [0.1244], [0.5894], [0.2391]])
w[1] = np.array([0.8566])
model.get_layer('Den14862').set_weights(w) 
in0Ave99122 = tf.constant([[[[1.7244], [1.8489]], [[1.736], [1.5779]]]])
in0Dot68781 = tf.constant([[0.772, 0.5672]])
in1Dot68781 = tf.constant([[0.5877, 0.1374]])
in0Con38482 = tf.constant([[[0.7736]]])
in0Zer51110 = tf.constant([[[[1.4783], [1.2284]]]])
in0Den14862 = tf.constant([[[0.9738, 0.6649, 0.152, 0.074], [0.1218, 0.9855, 0.4653, 0.547], [0.4213, 0.948, 0.6354, 0.5583], [0.6445, 0.0848, 0.486, 0.7572]]])
in0Con21638 = tf.constant([[[0.1117, 0.5743, 0.5525, 0.4337, 0.5292, 0.8759, 0.0445, 0.9513, 0.7077, 0.051, 0.6948, 0.9815, 0.9288, 0.6733], [0.1343, 0.6618, 0.1418, 0.9626, 0.9284, 0.1977, 0.5512, 0.404, 0.6996, 0.8011, 0.8845, 0.4187, 0.7992, 0.2161], [0.6031, 0.574, 0.4553, 0.5525, 0.6903, 0.3923, 0.4037, 0.5469, 0.6808, 0.2872, 0.2363, 0.1694, 0.2785, 0.5391], [0.091, 0.7054, 0.2521, 0.5058, 0.8513, 0.0538, 0.2936, 0.4582, 0.7228, 0.0041, 0.1787, 0.5271, 0.9107, 0.682], [0.8785, 0.2564, 0.1368, 0.1861, 0.2354, 0.1637, 0.8989, 0.6764, 0.4414, 0.5306, 0.7077, 0.8235, 0.8325, 0.3679], [0.0097, 0.575, 0.4487, 0.1295, 0.1498, 0.6582, 0.4002, 0.2857, 0.515, 0.0992, 0.3265, 0.3101, 0.956, 0.3096]]])
print (np.array2string(model.predict([in0Ave99122,in0Dot68781,in1Dot68781,in0Con38482,in0Zer51110,in0Den14862,in0Con21638],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Mul62270.png')

LAve99122 = average_pooling2D_layer([[[[1.7244], [1.8489]], [[1.736], [1.5779]]]], 2, 1, Ave99122), 
LRes34263 = reshape_layer(Ave99122, [1, 2], Res34263), 
LDot68781 = dot_layer([[0.772, 0.5672]], [[0.5877, 0.1374]], 1, 1, Dot68781), 
LRes43914 = reshape_layer(Dot68781, [1, 1], Res43914), 
LUp_16090 = up_sampling1D_layer(Res43914, 1, Up_16090), 
LCon38482 = concatenate_layer([Up_16090,[[[0.7736]]]], 2, Con38482), 
LSub90317 = subtract_layer(Res34263,Con38482, Sub90317), 
LRes39800 = reshape_layer(Sub90317, [1, 2, 1], Res39800), 
LSep71504 = separable_conv2D_layer(Res39800, 1, 2,[[[[[0.517]], [[0.3883]]]],[[[[0.4939, 0.3549, 0.0816]]]]],[0, 0, 0], 1, 1, false, Sep71504), 
LRes16254 = reshape_layer(Sep71504, [1, 1, 3, 1], Res16254), 
LZer8379 = zero_padding3D_layer(Res16254, 5, 0, 4, 0, 0, 0, Zer8379), 
LZer51110 = zero_padding2D_layer([[[[1.4783], [1.2284]]]], 1, 1, 1, 1, Zer51110), 
LRes87746 = reshape_layer(Zer51110, [3, 4], Res87746), 
LPer73697 = permute_layer(Res87746, 2,1, Per73697), 
LRes57687 = reshape_layer(Per73697, [4, 3, 1], Res57687), 
LRes18334 = reshape_layer(Res57687, [4, 3, 1, 1], Res18334), 
LZer74530 = zero_padding3D_layer(Res18334, 1, 1, 1, 1, 1, 1, Zer74530), 
LMul43846 = multiply_layer([Zer8379,Zer74530], Mul43846), 
LRes57213 = reshape_layer(Mul43846, [6, 5, 3], Res57213), 
LRes81191 = reshape_layer(Res57213, [6, 15], Res81191), 
LDen14862 = dense_layer([[[0.9738, 0.6649, 0.152, 0.074], [0.1218, 0.9855, 0.4653, 0.547], [0.4213, 0.948, 0.6354, 0.5583], [0.6445, 0.0848, 0.486, 0.7572]]], [[0.526], [0.1244], [0.5894], [0.2391]],[0.8566], Den14862), 
LZer10706 = zero_padding1D_layer(Den14862, 2, 0, Zer10706), 
LCon21638 = concatenate_layer([Zer10706,[[[0.1117, 0.5743, 0.5525, 0.4337, 0.5292, 0.8759, 0.0445, 0.9513, 0.7077, 0.051, 0.6948, 0.9815, 0.9288, 0.6733], [0.1343, 0.6618, 0.1418, 0.9626, 0.9284, 0.1977, 0.5512, 0.404, 0.6996, 0.8011, 0.8845, 0.4187, 0.7992, 0.2161], [0.6031, 0.574, 0.4553, 0.5525, 0.6903, 0.3923, 0.4037, 0.5469, 0.6808, 0.2872, 0.2363, 0.1694, 0.2785, 0.5391], [0.091, 0.7054, 0.2521, 0.5058, 0.8513, 0.0538, 0.2936, 0.4582, 0.7228, 0.0041, 0.1787, 0.5271, 0.9107, 0.682], [0.8785, 0.2564, 0.1368, 0.1861, 0.2354, 0.1637, 0.8989, 0.6764, 0.4414, 0.5306, 0.7077, 0.8235, 0.8325, 0.3679], [0.0097, 0.575, 0.4487, 0.1295, 0.1498, 0.6582, 0.4002, 0.2857, 0.515, 0.0992, 0.3265, 0.3101, 0.956, 0.3096]]]], 2, Con21638), 
LMul62270 = multiply_layer([Res81191,Con21638], Mul62270), 
exec_layers([LAve99122,LRes34263,LDot68781,LRes43914,LUp_16090,LCon38482,LSub90317,LRes39800,LSep71504,LRes16254,LZer8379,LZer51110,LRes87746,LPer73697,LRes57687,LRes18334,LZer74530,LMul43846,LRes57213,LRes81191,LDen14862,LZer10706,LCon21638,LMul62270],["Ave99122","Res34263","Dot68781","Res43914","Up_16090","Con38482","Sub90317","Res39800","Sep71504","Res16254","Zer8379","Zer51110","Res87746","Per73697","Res57687","Res18334","Zer74530","Mul43846","Res57213","Res81191","Den14862","Zer10706","Con21638","Mul62270"],Mul62270,"Mul62270")

Actual (Unparsed): [[[0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000]]]

Expected (Unparsed): [[[0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0],[0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0],[0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0],[0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0],[0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0],[0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0]]]

Actual:   [[[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]]]

Expected: [[[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]]]