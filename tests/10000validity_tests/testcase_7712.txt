import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Sub15041 = tf.keras.layers.Input(shape=([3, 3, 2, 3]))
in1Sub15041 = tf.keras.layers.Input(shape=([3, 3, 2, 3]))
in0Dot25630 = tf.keras.layers.Input(shape=([3, 2]))
in1Dot25630 = tf.keras.layers.Input(shape=([3, 2]))
in0Con3483 = tf.keras.layers.Input(shape=([3, 16]))
in0Con86188 = tf.keras.layers.Input(shape=([3, 18, 3]))
in0Con87909 = tf.keras.layers.Input(shape=([1, 1, 1]))

Sub15041 = keras.layers.Subtract(name = 'Sub15041', )([in0Sub15041,in1Sub15041])
Res2175 = keras.layers.Reshape((3, 3, 6), name = 'Res2175', )(Sub15041)
Res83349 = keras.layers.Reshape((3, 18), name = 'Res83349', )(Res2175)
Dot25630 = keras.layers.Dot(axes=(1, 1), name = 'Dot25630', )([in0Dot25630,in1Dot25630])
Zer41034 = keras.layers.ZeroPadding1D(padding=((1, 0)), name = 'Zer41034', )(Dot25630)
Con3483 = keras.layers.Concatenate(axis=2, name = 'Con3483', )([Zer41034,in0Con3483])
Max15976 = keras.layers.Maximum(name = 'Max15976', )([Res83349,Con3483])
Res67942 = keras.layers.Reshape((3, 18, 1), name = 'Res67942', )(Max15976)
Con86188 = keras.layers.Concatenate(axis=3, name = 'Con86188', )([Res67942,in0Con86188])
Con87909 = keras.layers.Conv2DTranspose(4, (1, 1),strides=(1, 1), padding='same', name = 'Con87909', )(in0Con87909)
Zer75636 = keras.layers.ZeroPadding2D(padding=((2, 0), (17, 0)), name = 'Zer75636', )(Con87909)
Max37077 = keras.layers.Maximum(name = 'Max37077', )([Con86188,Zer75636])
model = tf.keras.models.Model(inputs=[in0Sub15041,in1Sub15041,in0Dot25630,in1Dot25630,in0Con3483,in0Con86188,in0Con87909], outputs=Max37077)
w = model.get_layer('Con87909').get_weights() 
w[0] = np.array([[[[0.509], [0.4807], [0.6657], [0.0462]]]])
w[1] = np.array([0, 0, 0, 0])
model.get_layer('Con87909').set_weights(w) 
in0Sub15041 = tf.constant([[[[[0.9444, 0.5035, 0.014], [0.4783, 0.3932, 0.8171]], [[0.6413, 0.9331, 0.5249], [0.9419, 0.3277, 0.2339]], [[0.4083, 0.2659, 0.7338], [0.676, 0.4722, 0.3674]]], [[[0.7191, 0.4104, 0.6804], [0.4866, 0.3151, 0.8358]], [[0.6004, 0.9252, 0.2908], [0.1922, 0.749, 0.5331]], [[0.125, 0.7252, 0.6852], [0.6516, 0.3578, 0.2102]]], [[[0.8044, 0.7597, 0.363], [0.2, 0.6887, 0.5952]], [[0.5582, 0.092, 0.1663], [0.7076, 0.9445, 0.9968]], [[0.9422, 0.2408, 0.6599], [0.4366, 0.7771, 0.2415]]]]])
in1Sub15041 = tf.constant([[[[[0.9173, 0.099, 0.7114], [0.9406, 0.3017, 0.2318]], [[0.7584, 0.2661, 0.9007], [0.7732, 0.8215, 0.3117]], [[0.1588, 0.9841, 0.3349], [0.6059, 0.6602, 0.1726]]], [[[0.2659, 0.8067, 0.2684], [0.0816, 0.6736, 0.8801]], [[0.1827, 0.6513, 0.9761], [0.9128, 0.506, 0.1577]], [[0.4398, 0.454, 0.8625], [0.183, 0.1779, 0.6888]]], [[[0.4493, 0.4768, 0.1218], [0.7999, 0.6653, 0.5308]], [[0.0089, 0.5953, 0.1181], [0.6106, 0.424, 0.8485]], [[0.3792, 0.0598, 0.3243], [0.8258, 0.3296, 0.9251]]]]])
in0Dot25630 = tf.constant([[[0.2791, 0.1639], [0.3202, 0.3402], [0.8667, 0.5955]]])
in1Dot25630 = tf.constant([[[0.6555, 0.6465], [0.2809, 0.0236], [0.1019, 0.9324]]])
in0Con3483 = tf.constant([[[0.2166, 0.0426, 0.035, 0.4126, 0.4908, 0.9201, 0.6049, 0.0411, 0.3176, 0.0078, 0.0574, 0.0689, 0.5505, 0.0377, 0.3753, 0.3586], [0.3631, 0.1492, 0.4445, 0.3786, 0.9584, 0.425, 0.0851, 0.4738, 0.7478, 0.5019, 0.6221, 0.2371, 0.4027, 0.4404, 0.0555, 0.9633], [0.8117, 0.2631, 0.2754, 0.783, 0.3783, 0.8318, 0.4471, 0.225, 0.2877, 0.0223, 0.6398, 0.6362, 0.3378, 0.4784, 0.0122, 0.0989]]])
in0Con86188 = tf.constant([[[[0.6886, 0.7695, 0.2605], [0.8255, 0.7922, 0.149], [0.1358, 0.839, 0.3885], [0.6842, 0.2079, 0.9401], [0.7627, 0.8676, 0.6931], [0.2854, 0.6795, 0.879], [0.4781, 0.9928, 0.7301], [0.5235, 0.9803, 0.2109], [0.221, 0.6567, 0.7982], [0.3216, 0.6578, 0.2935], [0.9676, 0.9576, 0.0096], [0.7345, 0.6026, 0.612], [0.973, 0.3397, 0.059], [0.3585, 0.3979, 0.0272], [0.5337, 0.6099, 0.8879], [0.183, 0.1863, 0.8984], [0.3392, 0.4292, 0.4544], [0.3771, 0.847, 0.6178]], [[0.222, 0.117, 0.9722], [0.4916, 0.898, 0.2985], [0.8387, 0.6868, 0.2605], [0.0839, 0.9069, 0.1373], [0.1327, 0.2966, 0.5601], [0.4861, 0.5711, 0.0296], [0.8276, 0.8102, 0.2642], [0.9613, 0.6727, 0.8191], [0.2706, 0.463, 0.2734], [0.7025, 0.0545, 0.5512], [0.6377, 0.9704, 0.0189], [0.3582, 0.7127, 0.9537], [0.381, 0.0737, 0.8689], [0.1167, 0.2859, 0.2431], [0.2719, 0.967, 0.5127], [0.902, 0.1911, 0.1472], [0.993, 0.2701, 0.7333], [0.2377, 0.6288, 0.6335]], [[0.8438, 0.9108, 0.5779], [0.6028, 0.6659, 0.3366], [0.2549, 0.1499, 0.5166], [0.1601, 0.7847, 0.7002], [0.8003, 0.9453, 0.5447], [0.083, 0.1556, 0.7129], [0.7292, 0.3293, 0.0137], [0.0855, 0.58, 0.1455], [0.5288, 0.599, 0.0416], [0.3899, 0.5358, 0.9385], [0.1175, 0.032, 0.7892], [0.2132, 0.1355, 0.8822], [0.2404, 0.8988, 0.4562], [0.8493, 0.5234, 0.7431], [0.9056, 0.6004, 0.1356], [0.7567, 0.3522, 0.2808], [0.0239, 0.3924, 0.4038], [0.3829, 0.416, 0.1536]]]])
in0Con87909 = tf.constant([[[[0.2241]]]])
print (np.array2string(model.predict([in0Sub15041,in1Sub15041,in0Dot25630,in1Dot25630,in0Con3483,in0Con86188,in0Con87909],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Max37077.png')

LSub15041 = subtract_layer([[[[[0.9444, 0.5035, 0.014], [0.4783, 0.3932, 0.8171]], [[0.6413, 0.9331, 0.5249], [0.9419, 0.3277, 0.2339]], [[0.4083, 0.2659, 0.7338], [0.676, 0.4722, 0.3674]]], [[[0.7191, 0.4104, 0.6804], [0.4866, 0.3151, 0.8358]], [[0.6004, 0.9252, 0.2908], [0.1922, 0.749, 0.5331]], [[0.125, 0.7252, 0.6852], [0.6516, 0.3578, 0.2102]]], [[[0.8044, 0.7597, 0.363], [0.2, 0.6887, 0.5952]], [[0.5582, 0.092, 0.1663], [0.7076, 0.9445, 0.9968]], [[0.9422, 0.2408, 0.6599], [0.4366, 0.7771, 0.2415]]]]], [[[[[0.9173, 0.099, 0.7114], [0.9406, 0.3017, 0.2318]], [[0.7584, 0.2661, 0.9007], [0.7732, 0.8215, 0.3117]], [[0.1588, 0.9841, 0.3349], [0.6059, 0.6602, 0.1726]]], [[[0.2659, 0.8067, 0.2684], [0.0816, 0.6736, 0.8801]], [[0.1827, 0.6513, 0.9761], [0.9128, 0.506, 0.1577]], [[0.4398, 0.454, 0.8625], [0.183, 0.1779, 0.6888]]], [[[0.4493, 0.4768, 0.1218], [0.7999, 0.6653, 0.5308]], [[0.0089, 0.5953, 0.1181], [0.6106, 0.424, 0.8485]], [[0.3792, 0.0598, 0.3243], [0.8258, 0.3296, 0.9251]]]]], Sub15041), 
LRes2175 = reshape_layer(Sub15041, [3, 3, 6], Res2175), 
LRes83349 = reshape_layer(Res2175, [3, 18], Res83349), 
LDot25630 = dot_layer([[[0.2791, 0.1639], [0.3202, 0.3402], [0.8667, 0.5955]]], [[[0.6555, 0.6465], [0.2809, 0.0236], [0.1019, 0.9324]]], 1, 1, Dot25630), 
LZer41034 = zero_padding1D_layer(Dot25630, 1, 0, Zer41034), 
LCon3483 = concatenate_layer([Zer41034,[[[0.2166, 0.0426, 0.035, 0.4126, 0.4908, 0.9201, 0.6049, 0.0411, 0.3176, 0.0078, 0.0574, 0.0689, 0.5505, 0.0377, 0.3753, 0.3586], [0.3631, 0.1492, 0.4445, 0.3786, 0.9584, 0.425, 0.0851, 0.4738, 0.7478, 0.5019, 0.6221, 0.2371, 0.4027, 0.4404, 0.0555, 0.9633], [0.8117, 0.2631, 0.2754, 0.783, 0.3783, 0.8318, 0.4471, 0.225, 0.2877, 0.0223, 0.6398, 0.6362, 0.3378, 0.4784, 0.0122, 0.0989]]]], 2, Con3483), 
LMax15976 = maximum_layer([Res83349,Con3483], Max15976), 
LRes67942 = reshape_layer(Max15976, [3, 18, 1], Res67942), 
LCon86188 = concatenate_layer([Res67942,[[[[0.6886, 0.7695, 0.2605], [0.8255, 0.7922, 0.149], [0.1358, 0.839, 0.3885], [0.6842, 0.2079, 0.9401], [0.7627, 0.8676, 0.6931], [0.2854, 0.6795, 0.879], [0.4781, 0.9928, 0.7301], [0.5235, 0.9803, 0.2109], [0.221, 0.6567, 0.7982], [0.3216, 0.6578, 0.2935], [0.9676, 0.9576, 0.0096], [0.7345, 0.6026, 0.612], [0.973, 0.3397, 0.059], [0.3585, 0.3979, 0.0272], [0.5337, 0.6099, 0.8879], [0.183, 0.1863, 0.8984], [0.3392, 0.4292, 0.4544], [0.3771, 0.847, 0.6178]], [[0.222, 0.117, 0.9722], [0.4916, 0.898, 0.2985], [0.8387, 0.6868, 0.2605], [0.0839, 0.9069, 0.1373], [0.1327, 0.2966, 0.5601], [0.4861, 0.5711, 0.0296], [0.8276, 0.8102, 0.2642], [0.9613, 0.6727, 0.8191], [0.2706, 0.463, 0.2734], [0.7025, 0.0545, 0.5512], [0.6377, 0.9704, 0.0189], [0.3582, 0.7127, 0.9537], [0.381, 0.0737, 0.8689], [0.1167, 0.2859, 0.2431], [0.2719, 0.967, 0.5127], [0.902, 0.1911, 0.1472], [0.993, 0.2701, 0.7333], [0.2377, 0.6288, 0.6335]], [[0.8438, 0.9108, 0.5779], [0.6028, 0.6659, 0.3366], [0.2549, 0.1499, 0.5166], [0.1601, 0.7847, 0.7002], [0.8003, 0.9453, 0.5447], [0.083, 0.1556, 0.7129], [0.7292, 0.3293, 0.0137], [0.0855, 0.58, 0.1455], [0.5288, 0.599, 0.0416], [0.3899, 0.5358, 0.9385], [0.1175, 0.032, 0.7892], [0.2132, 0.1355, 0.8822], [0.2404, 0.8988, 0.4562], [0.8493, 0.5234, 0.7431], [0.9056, 0.6004, 0.1356], [0.7567, 0.3522, 0.2808], [0.0239, 0.3924, 0.4038], [0.3829, 0.416, 0.1536]]]]], 3, Con86188), 
LCon87909 = conv2D_transpose_layer([[[[0.2241]]]], 1, 1,[[[[0.509], [0.4807], [0.6657], [0.0462]]]],[0, 0, 0, 0], 1, 1, true, Con87909), 
LZer75636 = zero_padding2D_layer(Con87909, 2, 0, 17, 0, Zer75636), 
LMax37077 = maximum_layer([Con86188,Zer75636], Max37077), 
exec_layers([LSub15041,LRes2175,LRes83349,LDot25630,LZer41034,LCon3483,LMax15976,LRes67942,LCon86188,LCon87909,LZer75636,LMax37077],["Sub15041","Res2175","Res83349","Dot25630","Zer41034","Con3483","Max15976","Res67942","Con86188","Con87909","Zer75636","Max37077"],Max37077,"Max37077")

Actual (Unparsed): [[[[0.0271000, 0.6886000, 0.7695000, 0.2605000], [0.4045000, 0.8255000, 0.7922000, 0.1490000], [0.2166000, 0.1358000, 0.8390000, 0.3885000], [0.0426000, 0.6842000, 0.2079000, 0.9401000], [0.0915000, 0.7627000, 0.8676000, 0.6931000], [0.5853000, 0.2854000, 0.6795000, 0.8790000], [0.4908000, 0.4781000, 0.9928000, 0.7301000], [0.9201000, 0.5235000, 0.9803000, 0.2109000], [0.6049000, 0.2210000, 0.6567000, 0.7982000], [0.1687000, 0.3216000, 0.6578000, 0.2935000], [0.3176000, 0.9676000, 0.9576000, 0.0096000], [0.0078000, 0.7345000, 0.6026000, 0.6120000], [0.2495000, 0.9730000, 0.3397000, 0.0590000], [0.0689000, 0.3585000, 0.3979000, 0.0272000], [0.5505000, 0.5337000, 0.6099000, 0.8879000], [0.0701000, 0.1830000, 0.1863000, 0.8984000], [0.3753000, 0.3392000, 0.4292000, 0.4544000], [0.3586000, 0.3771000, 0.8470000, 0.6178000]], [[0.4532000, 0.2220000, 0.1170000, 0.9722000], [0.9961059, 0.4916000, 0.8980000, 0.2985000], [0.4120000, 0.8387000, 0.6868000, 0.2605000], [0.4050000, 0.0839000, 0.9069000, 0.1373000], [0.4445000, 0.1327000, 0.2966000, 0.5601000], [0.3786000, 0.4861000, 0.5711000, 0.0296000], [0.9584000, 0.8276000, 0.8102000, 0.2642000], [0.4250000, 0.9613000, 0.6727000, 0.8191000], [0.0851000, 0.2706000, 0.4630000, 0.2734000], [0.4738000, 0.7025000, 0.0545000, 0.5512000], [0.7478000, 0.6377000, 0.9704000, 0.0189000], [0.5019000, 0.3582000, 0.7127000, 0.9537000], [0.6221000, 0.3810000, 0.0737000, 0.8689000], [0.2712000, 0.1167000, 0.2859000, 0.2431000], [0.4027000, 0.2719000, 0.9670000, 0.5127000], [0.4686000, 0.9020000, 0.1911000, 0.1472000], [0.1799000, 0.9930000, 0.2701000, 0.7333000], [0.9633000, 0.2377000, 0.6288000, 0.6335000]], [[0.3551000, 0.8438000, 0.9108000, 0.5779000], [0.6692343, 0.6028000, 0.6659000, 0.3366000], [0.8117000, 0.2549000, 0.1499000, 0.5166000], [0.2631000, 0.1601000, 0.7847000, 0.7002000], [0.2754000, 0.8003000, 0.9453000, 0.5447000], [0.7830000, 0.0830000, 0.1556000, 0.7129000], [0.5493000, 0.7292000, 0.3293000, 0.0137000], [0.8318000, 0.0855000, 0.5800000, 0.1455000], [0.4471000, 0.5288000, 0.5990000, 0.0416000], [0.2250000, 0.3899000, 0.5358000, 0.9385000], [0.5205000, 0.1175000, 0.0320000, 0.7892000], [0.1483000, 0.2132000, 0.1355000, 0.8822000], [0.6398000, 0.2404000, 0.8988000, 0.4562000], [0.6362000, 0.8493000, 0.5234000, 0.7431000], [0.3378000, 0.9056000, 0.6004000, 0.1356000], [0.4784000, 0.7567000, 0.3522000, 0.2808000], [0.4475000, 0.0239000, 0.3924000, 0.4038000], [0.1140669, 0.3829000, 0.4160000, 0.1536000]]]]

Expected (Unparsed): [[[[0.027100000000000013,0.6886,0.7695,0.2605],[0.40449999999999997,0.8255,0.7922,0.149],[0.2166,0.1358,0.839,0.3885],[0.0426,0.6842,0.2079,0.9401],[0.09149999999999997,0.7627,0.8676,0.6931],[0.5853,0.2854,0.6795,0.879],[0.4908,0.4781,0.9928,0.7301],[0.9201,0.5235,0.9803,0.2109],[0.6049,0.221,0.6567,0.7982],[0.16869999999999996,0.3216,0.6578,0.2935],[0.3176,0.9676,0.9576,0.0096],[0.0078,0.7345,0.6026,0.612],[0.2495,0.973,0.3397,0.059],[0.0689,0.3585,0.3979,0.0272],[0.5505,0.5337,0.6099,0.8879],[0.07010000000000005,0.183,0.1863,0.8984],[0.3753,0.3392,0.4292,0.4544],[0.3586,0.3771,0.847,0.6178]],[[0.45319999999999994,0.222,0.117,0.9722],[0.99610595,0.4916,0.898,0.2985],[0.412,0.8387,0.6868,0.2605],[0.40499999999999997,0.0839,0.9069,0.1373],[0.4445,0.1327,0.2966,0.5601],[0.3786,0.4861,0.5711,0.0296],[0.9584,0.8276,0.8102,0.2642],[0.425,0.9613,0.6727,0.8191],[0.0851,0.2706,0.463,0.2734],[0.4738,0.7025,0.0545,0.5512],[0.7478,0.6377,0.9704,0.0189],[0.5019,0.3582,0.7127,0.9537],[0.6221,0.381,0.0737,0.8689],[0.27119999999999994,0.1167,0.2859,0.2431],[0.4027,0.2719,0.967,0.5127],[0.46859999999999996,0.902,0.1911,0.1472],[0.1799,0.993,0.2701,0.7333],[0.9633,0.2377,0.6288,0.6335]],[[0.3551,0.8438,0.9108,0.5779],[0.66923427,0.6028,0.6659,0.3366],[0.8117,0.2549,0.1499,0.5166],[0.2631,0.1601,0.7847,0.7002],[0.2754,0.8003,0.9453,0.5447],[0.783,0.083,0.1556,0.7129],[0.5493,0.7292,0.3293,0.0137],[0.8318,0.0855,0.58,0.1455],[0.4471,0.5288,0.599,0.0416],[0.225,0.3899,0.5358,0.9385],[0.5205,0.1175,0.032,0.7892],[0.1483,0.2132,0.1355,0.8822],[0.6398,0.2404,0.8988,0.4562],[0.6362,0.8493,0.5234,0.7431],[0.3378,0.9056,0.6004,0.1356],[0.4784,0.7567,0.3522,0.2808],[0.4475,0.0239,0.3924,0.4038],[0.1140669,0.3829,0.416,0.1536]]]]

Actual:   [[[[0.0271, 0.6886, 0.7695, 0.2605], [0.4045, 0.8255, 0.7922, 0.149], [0.2166, 0.1358, 0.839, 0.3885], [0.0426, 0.6842, 0.2079, 0.9401], [0.0915, 0.7627, 0.8676, 0.6931], [0.5853, 0.2854, 0.6795, 0.879], [0.4908, 0.4781, 0.9928, 0.7301], [0.9201, 0.5235, 0.9803, 0.2109], [0.6049, 0.221, 0.6567, 0.7982], [0.1687, 0.3216, 0.6578, 0.2935], [0.3176, 0.9676, 0.9576, 0.0096], [0.0078, 0.7345, 0.6026, 0.612], [0.2495, 0.973, 0.3397, 0.059], [0.0689, 0.3585, 0.3979, 0.0272], [0.5505, 0.5337, 0.6099, 0.8879], [0.0701, 0.183, 0.1863, 0.8984], [0.3753, 0.3392, 0.4292, 0.4544], [0.3586, 0.3771, 0.847, 0.6178]], [[0.4532, 0.222, 0.117, 0.9722], [0.9962, 0.4916, 0.898, 0.2985], [0.412, 0.8387, 0.6868, 0.2605], [0.405, 0.0839, 0.9069, 0.1373], [0.4445, 0.1327, 0.2966, 0.5601], [0.3786, 0.4861, 0.5711, 0.0296], [0.9584, 0.8276, 0.8102, 0.2642], [0.425, 0.9613, 0.6727, 0.8191], [0.0851, 0.2706, 0.463, 0.2734], [0.4738, 0.7025, 0.0545, 0.5512], [0.7478, 0.6377, 0.9704, 0.0189], [0.5019, 0.3582, 0.7127, 0.9537], [0.6221, 0.381, 0.0737, 0.8689], [0.2712, 0.1167, 0.2859, 0.2431], [0.4027, 0.2719, 0.967, 0.5127], [0.4686, 0.902, 0.1911, 0.1472], [0.1799, 0.993, 0.2701, 0.7333], [0.9633, 0.2377, 0.6288, 0.6335]], [[0.3551, 0.8438, 0.9108, 0.5779], [0.6693, 0.6028, 0.6659, 0.3366], [0.8117, 0.2549, 0.1499, 0.5166], [0.2631, 0.1601, 0.7847, 0.7002], [0.2754, 0.8003, 0.9453, 0.5447], [0.783, 0.083, 0.1556, 0.7129], [0.5493, 0.7292, 0.3293, 0.0137], [0.8318, 0.0855, 0.58, 0.1455], [0.4471, 0.5288, 0.599, 0.0416], [0.225, 0.3899, 0.5358, 0.9385], [0.5205, 0.1175, 0.032, 0.7892], [0.1483, 0.2132, 0.1355, 0.8822], [0.6398, 0.2404, 0.8988, 0.4562], [0.6362, 0.8493, 0.5234, 0.7431], [0.3378, 0.9056, 0.6004, 0.1356], [0.4784, 0.7567, 0.3522, 0.2808], [0.4475, 0.0239, 0.3924, 0.4038], [0.1141, 0.3829, 0.416, 0.1536]]]]

Expected: [[[[0.0272, 0.6886, 0.7695, 0.2605], [0.4045, 0.8255, 0.7922, 0.149], [0.2166, 0.1358, 0.839, 0.3885], [0.0426, 0.6842, 0.2079, 0.9401], [0.0915, 0.7627, 0.8676, 0.6931], [0.5853, 0.2854, 0.6795, 0.879], [0.4908, 0.4781, 0.9928, 0.7301], [0.9201, 0.5235, 0.9803, 0.2109], [0.6049, 0.221, 0.6567, 0.7982], [0.1687, 0.3216, 0.6578, 0.2935], [0.3176, 0.9676, 0.9576, 0.0096], [0.0078, 0.7345, 0.6026, 0.612], [0.2495, 0.973, 0.3397, 0.059], [0.0689, 0.3585, 0.3979, 0.0272], [0.5505, 0.5337, 0.6099, 0.8879], [0.0702, 0.183, 0.1863, 0.8984], [0.3753, 0.3392, 0.4292, 0.4544], [0.3586, 0.3771, 0.847, 0.6178]], [[0.4532, 0.222, 0.117, 0.9722], [0.9962, 0.4916, 0.898, 0.2985], [0.412, 0.8387, 0.6868, 0.2605], [0.405, 0.0839, 0.9069, 0.1373], [0.4445, 0.1327, 0.2966, 0.5601], [0.3786, 0.4861, 0.5711, 0.0296], [0.9584, 0.8276, 0.8102, 0.2642], [0.425, 0.9613, 0.6727, 0.8191], [0.0851, 0.2706, 0.463, 0.2734], [0.4738, 0.7025, 0.0545, 0.5512], [0.7478, 0.6377, 0.9704, 0.0189], [0.5019, 0.3582, 0.7127, 0.9537], [0.6221, 0.381, 0.0737, 0.8689], [0.2712, 0.1167, 0.2859, 0.2431], [0.4027, 0.2719, 0.967, 0.5127], [0.4686, 0.902, 0.1911, 0.1472], [0.1799, 0.993, 0.2701, 0.7333], [0.9633, 0.2377, 0.6288, 0.6335]], [[0.3551, 0.8438, 0.9108, 0.5779], [0.6693, 0.6028, 0.6659, 0.3366], [0.8117, 0.2549, 0.1499, 0.5166], [0.2631, 0.1601, 0.7847, 0.7002], [0.2754, 0.8003, 0.9453, 0.5447], [0.783, 0.083, 0.1556, 0.7129], [0.5493, 0.7292, 0.3293, 0.0137], [0.8318, 0.0855, 0.58, 0.1455], [0.4471, 0.5288, 0.599, 0.0416], [0.225, 0.3899, 0.5358, 0.9385], [0.5205, 0.1175, 0.032, 0.7892], [0.1483, 0.2132, 0.1355, 0.8822], [0.6398, 0.2404, 0.8988, 0.4562], [0.6362, 0.8493, 0.5234, 0.7431], [0.3378, 0.9056, 0.6004, 0.1356], [0.4784, 0.7567, 0.3522, 0.2808], [0.4475, 0.0239, 0.3924, 0.4038], [0.1141, 0.3829, 0.416, 0.1536]]]]