import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Thr9096 = tf.keras.layers.Input(shape=([1, 1, 1]))

Thr9096 = keras.layers.ThresholdedReLU(theta=7.017504154840678, name = 'Thr9096', input_shape=(1, 1, 1))(in0Thr9096)
Res62411 = keras.layers.Reshape((1, 1), name = 'Res62411', )(Thr9096)
Zer2465 = keras.layers.ZeroPadding1D(padding=((1, 1)), name = 'Zer2465', )(Res62411)
Res13224 = keras.layers.Reshape((3, 1, 1), name = 'Res13224', )(Zer2465)
Con11209 = keras.layers.Conv2D(3, (3, 1),strides=(1, 1), padding='valid', dilation_rate=(1, 1), name = 'Con11209', )(Res13224)
model = tf.keras.models.Model(inputs=[in0Thr9096], outputs=Con11209)
w = model.get_layer('Con11209').get_weights() 
w[0] = np.array([[[[0.5208, 0.9174, 0.0306]]], [[[0.2731, 0.8404, 0.5771]]], [[[0.8116, 0.921, 0.5828]]]])
w[1] = np.array([0, 0, 0])
model.get_layer('Con11209').set_weights(w) 
in0Thr9096 = tf.constant([[[[0.1961]]]])
print (np.array2string(model.predict([in0Thr9096],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Con11209.png')

LThr9096 = thresholded_relu_layer([[[[0.1961]]]], 7.017504154840678, Thr9096), 
LRes62411 = reshape_layer(Thr9096, [1, 1], Res62411), 
LZer2465 = zero_padding1D_layer(Res62411, 1, 1, Zer2465), 
LRes13224 = reshape_layer(Zer2465, [3, 1, 1], Res13224), 
LCon11209 = conv2D_layer(Res13224, 3, 1,[[[[0.5208, 0.9174, 0.0306]]], [[[0.2731, 0.8404, 0.5771]]], [[[0.8116, 0.921, 0.5828]]]],[0, 0, 0], 1, 1, false, 1, 1, Con11209), 
exec_layers([LThr9096,LRes62411,LZer2465,LRes13224,LCon11209],["Thr9096","Res62411","Zer2465","Res13224","Con11209"],Con11209,"Con11209")

Actual (Unparsed): [[[[0.0000000, 0.0000000, 0.0000000]]]]

Expected (Unparsed): [[[[0.0,0.0,0.0]]]]

Actual:   [[[[0, 0, 0]]]]

Expected: [[[[0, 0, 0]]]]