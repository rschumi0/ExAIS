import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Dot79721 = tf.keras.layers.Input(shape=([3]))
in1Dot79721 = tf.keras.layers.Input(shape=([3]))
in0Lea68349 = tf.keras.layers.Input(shape=([1, 1, 2, 1]))
in0Dot27196 = tf.keras.layers.Input(shape=([3, 2]))
in1Dot27196 = tf.keras.layers.Input(shape=([3, 2]))
in0Dot36823 = tf.keras.layers.Input(shape=([3]))
in1Dot36823 = tf.keras.layers.Input(shape=([3]))
in0Con17249 = tf.keras.layers.Input(shape=([2, 2]))

Dot79721 = keras.layers.Dot(axes=(1, 1), name = 'Dot79721', )([in0Dot79721,in1Dot79721])
Res51813 = keras.layers.Reshape((1, 1), name = 'Res51813', )(Dot79721)
Res9238 = keras.layers.Reshape((1, 1, 1), name = 'Res9238', )(Res51813)
Loc62213 = keras.layers.LocallyConnected2D(4, (1, 1),strides=(1, 1), name = 'Loc62213', )(Res9238)
Res84513 = keras.layers.Reshape((1, 1, 4, 1), name = 'Res84513', )(Loc62213)
Lea68349 = keras.layers.LeakyReLU(alpha=0.16808806162436593, name = 'Lea68349', input_shape=(1, 1, 2, 1))(in0Lea68349)
Zer9005 = keras.layers.ZeroPadding3D(padding=((0, 0), (0, 0), (2, 0)), name = 'Zer9005', )(Lea68349)
Max74359 = keras.layers.Maximum(name = 'Max74359', )([Res84513,Zer9005])
Res71809 = keras.layers.Reshape((1, 1, 4), name = 'Res71809', )(Max74359)
Res32763 = keras.layers.Reshape((1, 4), name = 'Res32763', )(Res71809)
Zer50582 = keras.layers.ZeroPadding1D(padding=((1, 0)), name = 'Zer50582', )(Res32763)
Dot27196 = keras.layers.Dot(axes=(1, 1), name = 'Dot27196', )([in0Dot27196,in1Dot27196])
Dot36823 = keras.layers.Dot(axes=(1, 1), name = 'Dot36823', )([in0Dot36823,in1Dot36823])
Res82648 = keras.layers.Reshape((1, 1), name = 'Res82648', )(Dot36823)
Res3465 = keras.layers.Reshape((1, 1, 1), name = 'Res3465', )(Res82648)
Glo50498 = keras.layers.GlobalMaxPool2D(name = 'Glo50498', )(Res3465)
Res88327 = keras.layers.Reshape((1, 1), name = 'Res88327', )(Glo50498)
Sep78979 = keras.layers.SeparableConv1D(2, (1),strides=(1), padding='same', name = 'Sep78979', )(Res88327)
Zer84379 = keras.layers.ZeroPadding1D(padding=((1, 0)), name = 'Zer84379', )(Sep78979)
Mul553 = keras.layers.Multiply(name = 'Mul553', )([Dot27196,Zer84379])
Con17249 = keras.layers.Concatenate(axis=2, name = 'Con17249', )([Mul553,in0Con17249])
Mul85625 = keras.layers.Multiply(name = 'Mul85625', )([Zer50582,Con17249])
model = tf.keras.models.Model(inputs=[in0Dot79721,in1Dot79721,in0Lea68349,in0Dot27196,in1Dot27196,in0Dot36823,in1Dot36823,in0Con17249], outputs=Mul85625)
w = model.get_layer('Loc62213').get_weights() 
w[0] = np.array([[[0.2241, 0.6985, 0.738, 0.5121]]])
w[1] = np.array([[[0, 0, 0, 0]]])
model.get_layer('Loc62213').set_weights(w) 
w = model.get_layer('Sep78979').get_weights() 
w[0] = np.array([[[0.0057]]])
w[1] = np.array([[[0.5892, 0.7798]]])
w[2] = np.array([0, 0])
model.get_layer('Sep78979').set_weights(w) 
in0Dot79721 = tf.constant([[0.4419, 0.8167, 0.8949]])
in1Dot79721 = tf.constant([[0.8078, 0.8156, 0.276]])
in0Lea68349 = tf.constant([[[[[0.0888], [0.3702]]]]])
in0Dot27196 = tf.constant([[[0.3123, 0.6127], [0.9242, 0.7438], [0.8305, 0.3237]]])
in1Dot27196 = tf.constant([[[0.6985, 0.5011], [0.9075, 0.2585], [0.1839, 0.4432]]])
in0Dot36823 = tf.constant([[0.5232, 0.0595, 0.454]])
in1Dot36823 = tf.constant([[0.3206, 0.6545, 0.4254]])
in0Con17249 = tf.constant([[[0.2254, 0.9305], [0.5701, 0.6206]]])
print (np.array2string(model.predict([in0Dot79721,in1Dot79721,in0Lea68349,in0Dot27196,in1Dot27196,in0Dot36823,in1Dot36823,in0Con17249],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Mul85625.png')

LDot79721 = dot_layer([[0.4419, 0.8167, 0.8949]], [[0.8078, 0.8156, 0.276]], 1, 1, Dot79721), 
LRes51813 = reshape_layer(Dot79721, [1, 1], Res51813), 
LRes9238 = reshape_layer(Res51813, [1, 1, 1], Res9238), 
LLoc62213 = locally_connected2D_layer(Res9238, 1, 1,[[[0.2241, 0.6985, 0.738, 0.5121]]],[[[0, 0, 0, 0]]], 1, 1, Loc62213), 
LRes84513 = reshape_layer(Loc62213, [1, 1, 4, 1], Res84513), 
LLea68349 = leaky_relu_layer([[[[[0.0888], [0.3702]]]]], 0.16808806162436593, Lea68349), 
LZer9005 = zero_padding3D_layer(Lea68349, 0, 0, 0, 0, 2, 0, Zer9005), 
LMax74359 = maximum_layer([Res84513,Zer9005], Max74359), 
LRes71809 = reshape_layer(Max74359, [1, 1, 4], Res71809), 
LRes32763 = reshape_layer(Res71809, [1, 4], Res32763), 
LZer50582 = zero_padding1D_layer(Res32763, 1, 0, Zer50582), 
LDot27196 = dot_layer([[[0.3123, 0.6127], [0.9242, 0.7438], [0.8305, 0.3237]]], [[[0.6985, 0.5011], [0.9075, 0.2585], [0.1839, 0.4432]]], 1, 1, Dot27196), 
LDot36823 = dot_layer([[0.5232, 0.0595, 0.454]], [[0.3206, 0.6545, 0.4254]], 1, 1, Dot36823), 
LRes82648 = reshape_layer(Dot36823, [1, 1], Res82648), 
LRes3465 = reshape_layer(Res82648, [1, 1, 1], Res3465), 
LGlo50498 = global_max_pool2D_layer(Res3465, Glo50498), 
LRes88327 = reshape_layer(Glo50498, [1, 1], Res88327), 
LSep78979 = separable_conv1D_layer(Res88327, 1,[[[[0.0057]]],[[[0.5892, 0.7798]]]],[0, 0], 1, true, Sep78979), 
LZer84379 = zero_padding1D_layer(Sep78979, 1, 0, Zer84379), 
LMul553 = multiply_layer([Dot27196,Zer84379], Mul553), 
LCon17249 = concatenate_layer([Mul553,[[[0.2254, 0.9305], [0.5701, 0.6206]]]], 2, Con17249), 
LMul85625 = multiply_layer([Zer50582,Con17249], Mul85625), 
exec_layers([LDot79721,LRes51813,LRes9238,LLoc62213,LRes84513,LLea68349,LZer9005,LMax74359,LRes71809,LRes32763,LZer50582,LDot27196,LDot36823,LRes82648,LRes3465,LGlo50498,LRes88327,LSep78979,LZer84379,LMul553,LCon17249,LMul85625],["Dot79721","Res51813","Res9238","Loc62213","Res84513","Lea68349","Zer9005","Max74359","Res71809","Res32763","Zer50582","Dot27196","Dot36823","Res82648","Res3465","Glo50498","Res88327","Sep78979","Zer84379","Mul553","Con17249","Mul85625"],Mul85625,"Mul85625")

Actual (Unparsed): [[[0.0000000, 0.0000000, 0.0000000, 0.0000000], [0.0004443, 0.0010133, 0.5343571, 0.4036367]]]

Expected (Unparsed): [[[0.0,0.0,0.0,0.0],[0.00044427501230492037,0.0010133364882429024,0.534357060637212,0.4036367461251924]]]

Actual:   [[[0, 0, 0, 0], [0.0005, 0.0011, 0.5344, 0.4037]]]

Expected: [[[0, 0, 0, 0], [0.0005, 0.0011, 0.5344, 0.4037]]]