import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Max10577 = tf.keras.layers.Input(shape=([1, 1]))
in0Dot95369 = tf.keras.layers.Input(shape=([3]))
in1Dot95369 = tf.keras.layers.Input(shape=([3]))
in0Con55360 = tf.keras.layers.Input(shape=([2, 1]))
in0Max74363 = tf.keras.layers.Input(shape=([2, 2]))

Max10577 = keras.layers.MaxPool1D(pool_size=(1), name = 'Max10577', )(in0Max10577)
Con82986 = keras.layers.Conv1D(2, (1),strides=(1), padding='valid', dilation_rate=(1), name = 'Con82986', )(Max10577)
Zer93864 = keras.layers.ZeroPadding1D(padding=((1, 0)), name = 'Zer93864', )(Con82986)
Dot95369 = keras.layers.Dot(axes=(1, 1), name = 'Dot95369', )([in0Dot95369,in1Dot95369])
Res28575 = keras.layers.Reshape((1, 1), name = 'Res28575', )(Dot95369)
Cro13118 = keras.layers.Cropping1D(cropping=((0, 0)), name = 'Cro13118', )(Res28575)
Glo4125 = keras.layers.GlobalAveragePooling1D(name = 'Glo4125', )(Cro13118)
Res1545 = keras.layers.Reshape((1, 1), name = 'Res1545', )(Glo4125)
Zer97242 = keras.layers.ZeroPadding1D(padding=((1, 0)), name = 'Zer97242', )(Res1545)
Con55360 = keras.layers.Concatenate(axis=2, name = 'Con55360', )([Zer97242,in0Con55360])
Max74363 = keras.layers.MaxPool1D(pool_size=(2), strides=(1), padding='same', name = 'Max74363', )(in0Max74363)
Bat68824 = keras.layers.BatchNormalization(axis=1, epsilon=0.5334590311062426,  name = 'Bat68824', )(Max74363)
Sub29245 = keras.layers.Subtract(name = 'Sub29245', )([Con55360,Bat68824])
Mul52189 = keras.layers.Multiply(name = 'Mul52189', )([Zer93864,Sub29245])
model = tf.keras.models.Model(inputs=[in0Max10577,in0Dot95369,in1Dot95369,in0Con55360,in0Max74363], outputs=Mul52189)
w = model.get_layer('Con82986').get_weights() 
w[0] = np.array([[[0.8599, 0.8527]]])
w[1] = np.array([0, 0])
model.get_layer('Con82986').set_weights(w) 
w = model.get_layer('Bat68824').get_weights() 
w[0] = np.array([0.286, 0.32])
w[1] = np.array([0.127, 0.514])
w[2] = np.array([0.3423, 0.3102])
w[3] = np.array([0.5144, 0.7692])
model.get_layer('Bat68824').set_weights(w) 
in0Max10577 = tf.constant([[[1.9768]]])
in0Dot95369 = tf.constant([[0.3948, 0.9681, 0.1628]])
in1Dot95369 = tf.constant([[0.4676, 0.8008, 0.8163]])
in0Con55360 = tf.constant([[[0.1273], [0.1158]]])
in0Max74363 = tf.constant([[[1.9744, 1.1442], [1.8407, 1.4393]]])
print (np.array2string(model.predict([in0Max10577,in0Dot95369,in1Dot95369,in0Con55360,in0Max74363],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Mul52189.png')

LMax10577 = max_pool1D_layer([[[1.9768]]], 1, Max10577), 
LCon82986 = conv1D_layer(Max10577, 1,[[[0.8599, 0.8527]]],[0, 0], 1, false, 1, Con82986), 
LZer93864 = zero_padding1D_layer(Con82986, 1, 0, Zer93864), 
LDot95369 = dot_layer([[0.3948, 0.9681, 0.1628]], [[0.4676, 0.8008, 0.8163]], 1, 1, Dot95369), 
LRes28575 = reshape_layer(Dot95369, [1, 1], Res28575), 
LCro13118 = cropping1D_layer(Res28575, 0, 0, Cro13118), 
LGlo4125 = global_average_pooling1D_layer(Cro13118, Glo4125), 
LRes1545 = reshape_layer(Glo4125, [1, 1], Res1545), 
LZer97242 = zero_padding1D_layer(Res1545, 1, 0, Zer97242), 
LCon55360 = concatenate_layer([Zer97242,[[[0.1273], [0.1158]]]], 2, Con55360), 
LMax74363 = max_pool1D_layer([[[1.9744, 1.1442], [1.8407, 1.4393]]], 2, 1, true, Max74363), 
LBat68824 = batch_normalization_layer(Max74363, 1, 0.5334590311062426, [0.286, 0.32], [0.127, 0.514], [0.3423, 0.3102], [0.5144, 0.7692], Bat68824), 
LSub29245 = subtract_layer(Con55360,Bat68824, Sub29245), 
LMul52189 = multiply_layer([Zer93864,Sub29245], Mul52189), 
exec_layers([LMax10577,LCon82986,LZer93864,LDot95369,LRes28575,LCro13118,LGlo4125,LRes1545,LZer97242,LCon55360,LMax74363,LBat68824,LSub29245,LMul52189],["Max10577","Con82986","Zer93864","Dot95369","Res28575","Cro13118","Glo4125","Res1545","Zer97242","Con55360","Max74363","Bat68824","Sub29245","Mul52189"],Mul52189,"Mul52189")

Actual (Unparsed): [[[-0.0000000, -0.0000000], [0.2543780, -1.2048253]]]

Expected (Unparsed): [[[-0.0,-0.0],[0.25437799754623575,-1.2048253441375338]]]

Actual:   [[[-0, -0], [0.2544, -1.2048]]]

Expected: [[[-0, -0], [0.2544, -1.2048]]]