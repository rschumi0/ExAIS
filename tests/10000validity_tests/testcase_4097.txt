import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Max33023 = tf.keras.layers.Input(shape=([2, 1]))
in1Max33023 = tf.keras.layers.Input(shape=([2, 1]))

Max33023 = keras.layers.Maximum(name = 'Max33023', )([in0Max33023,in1Max33023])
Thr52697 = keras.layers.ThresholdedReLU(theta=7.4680850941520225, name = 'Thr52697', )(Max33023)
Res10700 = keras.layers.Reshape((2, 1, 1), name = 'Res10700', )(Thr52697)
Zer94917 = keras.layers.ZeroPadding2D(padding=((1, 1), (1, 1)), name = 'Zer94917', )(Res10700)
model = tf.keras.models.Model(inputs=[in0Max33023,in1Max33023], outputs=Zer94917)
in0Max33023 = tf.constant([[[0.968], [0.6945]]])
in1Max33023 = tf.constant([[[0.4926], [0.7189]]])
print (np.array2string(model.predict([in0Max33023,in1Max33023],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Zer94917.png')

LMax33023 = maximum_layer([[[[0.968], [0.6945]]], [[[0.4926], [0.7189]]]], Max33023), 
LThr52697 = thresholded_relu_layer(Max33023, 7.4680850941520225, Thr52697), 
LRes10700 = reshape_layer(Thr52697, [2, 1, 1], Res10700), 
LZer94917 = zero_padding2D_layer(Res10700, 1, 1, 1, 1, Zer94917), 
exec_layers([LMax33023,LThr52697,LRes10700,LZer94917],["Max33023","Thr52697","Res10700","Zer94917"],Zer94917,"Zer94917")

Actual (Unparsed): [[[[0.0000000], [0.0000000], [0.0000000]], [[0.0000000], [0.0000000], [0.0000000]], [[0.0000000], [0.0000000], [0.0000000]], [[0.0000000], [0.0000000], [0.0000000]]]]

Expected (Unparsed): [[[[0],[0],[0]],[[0],[0],[0]],[[0],[0],[0]],[[0],[0],[0]]]]

Actual:   [[[[0], [0], [0]], [[0], [0], [0]], [[0], [0], [0]], [[0], [0], [0]]]]

Expected: [[[[0], [0], [0]], [[0], [0], [0]], [[0], [0], [0]], [[0], [0], [0]]]]