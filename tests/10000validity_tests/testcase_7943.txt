import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Ave80096 = tf.keras.layers.Input(shape=([2, 2, 2]))
in1Ave80096 = tf.keras.layers.Input(shape=([2, 2, 2]))
in0Con97488 = tf.keras.layers.Input(shape=([4, 4, 4, 1]))
in0Max48287 = tf.keras.layers.Input(shape=([2, 2, 2, 2]))
in1Max48287 = tf.keras.layers.Input(shape=([2, 2, 2, 2]))

Ave80096 = keras.layers.Average(name = 'Ave80096', )([in0Ave80096,in1Ave80096])
Res51226 = keras.layers.Reshape((2, 2, 2, 1), name = 'Res51226', )(Ave80096)
Zer84886 = keras.layers.ZeroPadding3D(padding=((1, 1), (1, 1), (1, 1)), name = 'Zer84886', )(Res51226)
Con97488 = keras.layers.Concatenate(axis=4, name = 'Con97488', )([Zer84886,in0Con97488])
Max48287 = keras.layers.Maximum(name = 'Max48287', )([in0Max48287,in1Max48287])
Zer1935 = keras.layers.ZeroPadding3D(padding=((2, 0), (2, 0), (2, 0)), name = 'Zer1935', )(Max48287)
Ave40858 = keras.layers.Average(name = 'Ave40858', )([Con97488,Zer1935])
model = tf.keras.models.Model(inputs=[in0Ave80096,in1Ave80096,in0Con97488,in0Max48287,in1Max48287], outputs=Ave40858)
in0Ave80096 = tf.constant([[[[0.1271, 0.6942], [0.8344, 0.985]], [[0.5626, 0.7167], [0.1027, 0.0709]]]])
in1Ave80096 = tf.constant([[[[0.0619, 0.6437], [0.5509, 0.3432]], [[0.082, 0.4247], [0.5249, 0.3273]]]])
in0Con97488 = tf.constant([[[[[0.5145], [0.2273], [0.3773], [0.9056]], [[0.5124], [0.3752], [0.9818], [0.6267]], [[0.0951], [0.4673], [0.9433], [0.3942]], [[0.695], [0.6964], [0.8056], [0.2494]]], [[[0.5955], [0.962], [0.0606], [0.6916]], [[0.1517], [0.7453], [0.6827], [0.7065]], [[0.0218], [0.2638], [0.5219], [0.257]], [[0.436], [0.1804], [0.7338], [0.605]]], [[[0.6214], [0.1839], [0.7179], [0.199]], [[0.2487], [0.6949], [0.4888], [0.633]], [[0.1684], [0.8032], [0.0061], [0.3565]], [[0.7661], [0.296], [0.7583], [0.4028]]], [[[0.9801], [0.2979], [0.8079], [0.3861]], [[0.3973], [0.611], [0.5864], [0.4202]], [[0.8727], [0.3167], [0.9539], [0.4065]], [[0.8013], [0.5823], [0.4304], [0.3539]]]]])
in0Max48287 = tf.constant([[[[[0.3865, 0.6656], [0.5741, 0.5011]], [[0.2626, 0.1312], [0.01, 0.3835]]], [[[0.992, 0.3215], [0.1698, 0.4337]], [[0.5385, 0.6065], [0.8805, 0.3318]]]]])
in1Max48287 = tf.constant([[[[[0.8625, 0.7666], [0.9547, 0.0851]], [[0.7498, 0.4275], [0.4192, 0.0603]]], [[[0.5502, 0.7985], [0.5753, 0.485]], [[0.7622, 0.3319], [0.922, 0.1748]]]]])
print (np.array2string(model.predict([in0Ave80096,in1Ave80096,in0Con97488,in0Max48287,in1Max48287],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Ave40858.png')

LAve80096 = average_layer([[[[[0.1271, 0.6942], [0.8344, 0.985]], [[0.5626, 0.7167], [0.1027, 0.0709]]]], [[[[0.0619, 0.6437], [0.5509, 0.3432]], [[0.082, 0.4247], [0.5249, 0.3273]]]]], Ave80096), 
LRes51226 = reshape_layer(Ave80096, [2, 2, 2, 1], Res51226), 
LZer84886 = zero_padding3D_layer(Res51226, 1, 1, 1, 1, 1, 1, Zer84886), 
LCon97488 = concatenate_layer([Zer84886,[[[[[0.5145], [0.2273], [0.3773], [0.9056]], [[0.5124], [0.3752], [0.9818], [0.6267]], [[0.0951], [0.4673], [0.9433], [0.3942]], [[0.695], [0.6964], [0.8056], [0.2494]]], [[[0.5955], [0.962], [0.0606], [0.6916]], [[0.1517], [0.7453], [0.6827], [0.7065]], [[0.0218], [0.2638], [0.5219], [0.257]], [[0.436], [0.1804], [0.7338], [0.605]]], [[[0.6214], [0.1839], [0.7179], [0.199]], [[0.2487], [0.6949], [0.4888], [0.633]], [[0.1684], [0.8032], [0.0061], [0.3565]], [[0.7661], [0.296], [0.7583], [0.4028]]], [[[0.9801], [0.2979], [0.8079], [0.3861]], [[0.3973], [0.611], [0.5864], [0.4202]], [[0.8727], [0.3167], [0.9539], [0.4065]], [[0.8013], [0.5823], [0.4304], [0.3539]]]]]], 4, Con97488), 
LMax48287 = maximum_layer([[[[[[0.3865, 0.6656], [0.5741, 0.5011]], [[0.2626, 0.1312], [0.01, 0.3835]]], [[[0.992, 0.3215], [0.1698, 0.4337]], [[0.5385, 0.6065], [0.8805, 0.3318]]]]], [[[[[0.8625, 0.7666], [0.9547, 0.0851]], [[0.7498, 0.4275], [0.4192, 0.0603]]], [[[0.5502, 0.7985], [0.5753, 0.485]], [[0.7622, 0.3319], [0.922, 0.1748]]]]]], Max48287), 
LZer1935 = zero_padding3D_layer(Max48287, 2, 0, 2, 0, 2, 0, Zer1935), 
LAve40858 = average_layer([Con97488,Zer1935], Ave40858), 
exec_layers([LAve80096,LRes51226,LZer84886,LCon97488,LMax48287,LZer1935,LAve40858],["Ave80096","Res51226","Zer84886","Con97488","Max48287","Zer1935","Ave40858"],Ave40858,"Ave40858")

Actual (Unparsed): [[[[[0.0000000, 0.2572500], [0.0000000, 0.1136500], [0.0000000, 0.1886500], [0.0000000, 0.4528000]], [[0.0000000, 0.2562000], [0.0000000, 0.1876000], [0.0000000, 0.4909000], [0.0000000, 0.3133500]], [[0.0000000, 0.0475500], [0.0000000, 0.2336500], [0.0000000, 0.4716500], [0.0000000, 0.1971000]], [[0.0000000, 0.3475000], [0.0000000, 0.3482000], [0.0000000, 0.4028000], [0.0000000, 0.1247000]]], [[[0.0000000, 0.2977500], [0.0000000, 0.4810000], [0.0000000, 0.0303000], [0.0000000, 0.3458000]], [[0.0000000, 0.0758500], [0.0472500, 0.3726500], [0.3344750, 0.3413500], [0.0000000, 0.3532500]], [[0.0000000, 0.0109000], [0.3463250, 0.1319000], [0.3320500, 0.2609500], [0.0000000, 0.1285000]], [[0.0000000, 0.2180000], [0.0000000, 0.0902000], [0.0000000, 0.3669000], [0.0000000, 0.3025000]]], [[[0.0000000, 0.3107000], [0.0000000, 0.0919500], [0.0000000, 0.3589500], [0.0000000, 0.0995000]], [[0.0000000, 0.1243500], [0.1611500, 0.3474500], [0.2853500, 0.2444000], [0.0000000, 0.3165000]], [[0.0000000, 0.0842000], [0.1569000, 0.4016000], [0.5308000, 0.3863500], [0.4773500, 0.4288000]], [[0.0000000, 0.3830500], [0.0000000, 0.1480000], [0.3749000, 0.5929000], [0.2096000, 0.3931500]]], [[[0.0000000, 0.4900500], [0.0000000, 0.1489500], [0.0000000, 0.4039500], [0.0000000, 0.1930500]], [[0.0000000, 0.1986500], [0.0000000, 0.3055000], [0.0000000, 0.2932000], [0.0000000, 0.2101000]], [[0.0000000, 0.4363500], [0.0000000, 0.1583500], [0.4960000, 0.8762000], [0.2876500, 0.4457500]], [[0.0000000, 0.4006500], [0.0000000, 0.2911500], [0.3811000, 0.5184500], [0.4610000, 0.3428500]]]]]

Expected (Unparsed): [[[[[0,0.25725],[0,0.11365],[0,0.18865],[0,0.4528]],[[0,0.2562],[0,0.1876],[0,0.4909],[0,0.31335]],[[0,0.04755],[0,0.23365],[0,0.47165],[0,0.1971]],[[0,0.3475],[0,0.3482],[0,0.4028],[0,0.1247]]],[[[0,0.29775],[0,0.481],[0,0.0303],[0,0.3458]],[[0,0.07585],[0.04725,0.37265],[0.334475,0.34135],[0,0.35325]],[[0,0.0109],[0.346325,0.1319],[0.33205,0.26095],[0,0.1285]],[[0,0.218],[0,0.0902],[0,0.3669],[0,0.3025]]],[[[0,0.3107],[0,0.09195],[0,0.35895],[0,0.0995]],[[0,0.12435],[0.16115,0.34745],[0.28535,0.2444],[0,0.3165]],[[0,0.0842],[0.1569,0.4016],[0.5308,0.38634999999999997],[0.47735,0.42879999999999996]],[[0,0.38305],[0,0.148],[0.3749,0.5929],[0.2096,0.39315]]],[[[0,0.49005],[0,0.14895],[0,0.40395],[0,0.19305]],[[0,0.19865],[0,0.3055],[0,0.2932],[0,0.2101]],[[0,0.43635],[0,0.15835],[0.496,0.8762],[0.28765,0.44575]],[[0,0.40065],[0,0.29115],[0.3811,0.5184500000000001],[0.461,0.34285]]]]]

Actual:   [[[[[0, 0.2573], [0, 0.1137], [0, 0.1887], [0, 0.4528]], [[0, 0.2562], [0, 0.1876], [0, 0.4909], [0, 0.3134]], [[0, 0.0476], [0, 0.2337], [0, 0.4717], [0, 0.1971]], [[0, 0.3475], [0, 0.3482], [0, 0.4028], [0, 0.1247]]], [[[0, 0.2978], [0, 0.481], [0, 0.0303], [0, 0.3458]], [[0, 0.0759], [0.0473, 0.3727], [0.3345, 0.3414], [0, 0.3533]], [[0, 0.0109], [0.3464, 0.1319], [0.3321, 0.261], [0, 0.1285]], [[0, 0.218], [0, 0.0902], [0, 0.3669], [0, 0.3025]]], [[[0, 0.3107], [0, 0.092], [0, 0.359], [0, 0.0995]], [[0, 0.1244], [0.1612, 0.3475], [0.2854, 0.2444], [0, 0.3165]], [[0, 0.0842], [0.1569, 0.4016], [0.5308, 0.3864], [0.4774, 0.4288]], [[0, 0.3831], [0, 0.148], [0.3749, 0.5929], [0.2096, 0.3932]]], [[[0, 0.4901], [0, 0.149], [0, 0.404], [0, 0.1931]], [[0, 0.1987], [0, 0.3055], [0, 0.2932], [0, 0.2101]], [[0, 0.4364], [0, 0.1584], [0.496, 0.8762], [0.2877, 0.4458]], [[0, 0.4007], [0, 0.2912], [0.3811, 0.5185], [0.461, 0.3429]]]]]

Expected: [[[[[0, 0.2573], [0, 0.1137], [0, 0.1887], [0, 0.4528]], [[0, 0.2562], [0, 0.1876], [0, 0.4909], [0, 0.3134]], [[0, 0.0476], [0, 0.2337], [0, 0.4717], [0, 0.1971]], [[0, 0.3475], [0, 0.3482], [0, 0.4028], [0, 0.1247]]], [[[0, 0.2978], [0, 0.481], [0, 0.0303], [0, 0.3458]], [[0, 0.0759], [0.0473, 0.3727], [0.3345, 0.3414], [0, 0.3533]], [[0, 0.0109], [0.3464, 0.1319], [0.3321, 0.261], [0, 0.1285]], [[0, 0.218], [0, 0.0902], [0, 0.3669], [0, 0.3025]]], [[[0, 0.3107], [0, 0.092], [0, 0.359], [0, 0.0995]], [[0, 0.1244], [0.1612, 0.3475], [0.2854, 0.2444], [0, 0.3165]], [[0, 0.0842], [0.1569, 0.4016], [0.5308, 0.3864], [0.4774, 0.4288]], [[0, 0.3831], [0, 0.148], [0.3749, 0.5929], [0.2096, 0.3932]]], [[[0, 0.4901], [0, 0.149], [0, 0.404], [0, 0.1931]], [[0, 0.1987], [0, 0.3055], [0, 0.2932], [0, 0.2101]], [[0, 0.4364], [0, 0.1584], [0.496, 0.8762], [0.2877, 0.4458]], [[0, 0.4007], [0, 0.2912], [0.3811, 0.5185], [0.461, 0.3429]]]]]