import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Max44851 = tf.keras.layers.Input(shape=([2, 2]))
in0Con47371 = tf.keras.layers.Input(shape=([60]))
in0Up_29369 = tf.keras.layers.Input(shape=([4, 1, 4, 1]))
in0Glo88417 = tf.keras.layers.Input(shape=([1, 1, 2]))
in0Con57918 = tf.keras.layers.Input(shape=([62]))
in0Con87080 = tf.keras.layers.Input(shape=([64, 1]))
in0Per72825 = tf.keras.layers.Input(shape=([2, 3]))

Max44851 = keras.layers.MaxPool1D(pool_size=(1), strides=(1), padding='valid', name = 'Max44851', )(in0Max44851)
Fla55152 = keras.layers.Flatten(name = 'Fla55152', )(Max44851)
Con47371 = keras.layers.Concatenate(axis=1, name = 'Con47371', )([Fla55152,in0Con47371])
Up_29369 = keras.layers.UpSampling3D(size=(2, 1, 2), name = 'Up_29369', )(in0Up_29369)
Res35991 = keras.layers.Reshape((8, 1, 8), name = 'Res35991', )(Up_29369)
Res50810 = keras.layers.Reshape((8, 8), name = 'Res50810', )(Res35991)
Fla80299 = keras.layers.Flatten(name = 'Fla80299', )(Res50810)
Glo88417 = keras.layers.GlobalMaxPool2D(name = 'Glo88417', )(in0Glo88417)
Con57918 = keras.layers.Concatenate(axis=1, name = 'Con57918', )([Glo88417,in0Con57918])
Max77247 = keras.layers.Maximum(name = 'Max77247', )([Fla80299,Con57918])
Mul11449 = keras.layers.Multiply(name = 'Mul11449', )([Con47371,Max77247])
Res54987 = keras.layers.Reshape((64, 1), name = 'Res54987', )(Mul11449)
Con87080 = keras.layers.Concatenate(axis=2, name = 'Con87080', )([Res54987,in0Con87080])
Per72825 = keras.layers.Permute((2,1), name = 'Per72825',)(in0Per72825)
Zer95921 = keras.layers.ZeroPadding1D(padding=((61, 0)), name = 'Zer95921', )(Per72825)
Max33704 = keras.layers.Maximum(name = 'Max33704', )([Con87080,Zer95921])
model = tf.keras.models.Model(inputs=[in0Max44851,in0Con47371,in0Up_29369,in0Glo88417,in0Con57918,in0Con87080,in0Per72825], outputs=Max33704)
in0Max44851 = tf.constant([[[1.3556, 1.3541], [1.0275, 1.4458]]])
in0Con47371 = tf.constant([[0.526, 0.9011, 0.2771, 0.0763, 0.9859, 0.2797, 0.6031, 0.9609, 0.422, 0.532, 0.4399, 0.7939, 0.2048, 0.5017, 0.9242, 0.903, 0.565, 0.2345, 0.1075, 0.5191, 0.1327, 0.6525, 0.1542, 0.9281, 0.9415, 0.445, 0.9295, 0.533, 0.3399, 0.5588, 0.0478, 0.5439, 0.4561, 0.598, 0.6731, 0.5865, 0.3478, 0.9084, 0.3636, 0.1165, 0.7357, 0.1116, 0.0348, 0.1693, 0.2654, 0.3805, 0.6793, 0.6309, 0.575, 0.8032, 0.8267, 0.919, 0.052, 0.768, 0.8501, 0.6872, 0.0575, 0.4229, 0.138, 0.9243]])
in0Up_29369 = tf.constant([[[[[1.3597], [1.3374], [1.7578], [1.4465]]], [[[1.4709], [1.7711], [1.5222], [1.0232]]], [[[1.4868], [1.2799], [1.6576], [1.8589]]], [[[1.1574], [1.1371], [1.4518], [1.3924]]]]])
in0Glo88417 = tf.constant([[[[1.6902, 1.5687]]]])
in0Con57918 = tf.constant([[0.3862, 0.7095, 0.6254, 0.7886, 0.8734, 0.3883, 0.3479, 0.4557, 0.1581, 0.6862, 0.3444, 0.0937, 0.6812, 0.3426, 0.3864, 0.3098, 0.0026, 0.4912, 0.5072, 0.9834, 0.9556, 0.2744, 0.5035, 0.5595, 0.6672, 0.8254, 0.9287, 0.2862, 0.8452, 0.6095, 0.356, 0.6766, 0.9655, 0.7343, 0.5085, 0.8017, 0.6442, 0.1197, 0.575, 0.5016, 0.5272, 0.3511, 0.6613, 0.2403, 0.4887, 0.6318, 0.8637, 0.1236, 0.7966, 0.4968, 0.891, 0.5487, 0.1696, 0.8529, 0.5139, 0.0629, 0.33, 0.4712, 0.3719, 0.2674, 0.7398, 0.2719]])
in0Con87080 = tf.constant([[[0.931], [0.0572], [0.2192], [0.8557], [0.7722], [0.8856], [0.134], [0.1712], [0.9758], [0.6951], [0.3751], [0.9734], [0.8609], [0.9888], [0.847], [0.0113], [0.5875], [0.218], [0.8088], [0.534], [0.5905], [0.5816], [0.2349], [0.0362], [0.9405], [0.3928], [0.2254], [0.1833], [0.6595], [0.9186], [0.4992], [0.5317], [0.9733], [0.2771], [0.9719], [0.9805], [0.7191], [0.1884], [0.1715], [0.246], [0.641], [0.1207], [0.7772], [0.0305], [0.1067], [0.6446], [0.8809], [0.975], [0.8558], [0.617], [0.6641], [0.9297], [0.7515], [0.1508], [0.0607], [0.5554], [0.1491], [0.1959], [0.6321], [0.7762], [0.4156], [0.9565], [0.3194], [0.1446]]])
in0Per72825 = tf.constant([[[1.4426, 1.7802, 1.9239], [1.7545, 1.3391, 1.6991]]])
print (np.array2string(model.predict([in0Max44851,in0Con47371,in0Up_29369,in0Glo88417,in0Con57918,in0Con87080,in0Per72825],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Max33704.png')

LMax44851 = max_pool1D_layer([[[1.3556, 1.3541], [1.0275, 1.4458]]], 1, 1, false, Max44851), 
LFla55152 = flatten_layer(Max44851, Fla55152), 
LCon47371 = concatenate_layer([Fla55152,[[0.526, 0.9011, 0.2771, 0.0763, 0.9859, 0.2797, 0.6031, 0.9609, 0.422, 0.532, 0.4399, 0.7939, 0.2048, 0.5017, 0.9242, 0.903, 0.565, 0.2345, 0.1075, 0.5191, 0.1327, 0.6525, 0.1542, 0.9281, 0.9415, 0.445, 0.9295, 0.533, 0.3399, 0.5588, 0.0478, 0.5439, 0.4561, 0.598, 0.6731, 0.5865, 0.3478, 0.9084, 0.3636, 0.1165, 0.7357, 0.1116, 0.0348, 0.1693, 0.2654, 0.3805, 0.6793, 0.6309, 0.575, 0.8032, 0.8267, 0.919, 0.052, 0.768, 0.8501, 0.6872, 0.0575, 0.4229, 0.138, 0.9243]]], 1, Con47371), 
LUp_29369 = up_sampling3D_layer([[[[[1.3597], [1.3374], [1.7578], [1.4465]]], [[[1.4709], [1.7711], [1.5222], [1.0232]]], [[[1.4868], [1.2799], [1.6576], [1.8589]]], [[[1.1574], [1.1371], [1.4518], [1.3924]]]]], 2, 1, 2, Up_29369), 
LRes35991 = reshape_layer(Up_29369, [8, 1, 8], Res35991), 
LRes50810 = reshape_layer(Res35991, [8, 8], Res50810), 
LFla80299 = flatten_layer(Res50810, Fla80299), 
LGlo88417 = global_max_pool2D_layer([[[[1.6902, 1.5687]]]], Glo88417), 
LCon57918 = concatenate_layer([Glo88417,[[0.3862, 0.7095, 0.6254, 0.7886, 0.8734, 0.3883, 0.3479, 0.4557, 0.1581, 0.6862, 0.3444, 0.0937, 0.6812, 0.3426, 0.3864, 0.3098, 0.0026, 0.4912, 0.5072, 0.9834, 0.9556, 0.2744, 0.5035, 0.5595, 0.6672, 0.8254, 0.9287, 0.2862, 0.8452, 0.6095, 0.356, 0.6766, 0.9655, 0.7343, 0.5085, 0.8017, 0.6442, 0.1197, 0.575, 0.5016, 0.5272, 0.3511, 0.6613, 0.2403, 0.4887, 0.6318, 0.8637, 0.1236, 0.7966, 0.4968, 0.891, 0.5487, 0.1696, 0.8529, 0.5139, 0.0629, 0.33, 0.4712, 0.3719, 0.2674, 0.7398, 0.2719]]], 1, Con57918), 
LMax77247 = maximum_layer([Fla80299,Con57918], Max77247), 
LMul11449 = multiply_layer([Con47371,Max77247], Mul11449), 
LRes54987 = reshape_layer(Mul11449, [64, 1], Res54987), 
LCon87080 = concatenate_layer([Res54987,[[[0.931], [0.0572], [0.2192], [0.8557], [0.7722], [0.8856], [0.134], [0.1712], [0.9758], [0.6951], [0.3751], [0.9734], [0.8609], [0.9888], [0.847], [0.0113], [0.5875], [0.218], [0.8088], [0.534], [0.5905], [0.5816], [0.2349], [0.0362], [0.9405], [0.3928], [0.2254], [0.1833], [0.6595], [0.9186], [0.4992], [0.5317], [0.9733], [0.2771], [0.9719], [0.9805], [0.7191], [0.1884], [0.1715], [0.246], [0.641], [0.1207], [0.7772], [0.0305], [0.1067], [0.6446], [0.8809], [0.975], [0.8558], [0.617], [0.6641], [0.9297], [0.7515], [0.1508], [0.0607], [0.5554], [0.1491], [0.1959], [0.6321], [0.7762], [0.4156], [0.9565], [0.3194], [0.1446]]]], 2, Con87080), 
LPer72825 = permute_layer([[[1.4426, 1.7802, 1.9239], [1.7545, 1.3391, 1.6991]]], 2,1, Per72825), 
LZer95921 = zero_padding1D_layer(Per72825, 61, 0, Zer95921), 
LMax33704 = maximum_layer([Con87080,Zer95921], Max33704), 
exec_layers([LMax44851,LFla55152,LCon47371,LUp_29369,LRes35991,LRes50810,LFla80299,LGlo88417,LCon57918,LMax77247,LMul11449,LRes54987,LCon87080,LPer72825,LZer95921,LMax33704],["Max44851","Fla55152","Con47371","Up_29369","Res35991","Res50810","Fla80299","Glo88417","Con57918","Max77247","Mul11449","Res54987","Con87080","Per72825","Zer95921","Max33704"],Max33704,"Max33704")

Actual (Unparsed): [[[2.2912351, 0.9310000], [2.1241766, 0.0572000], [1.3741785, 0.2192000], [1.9336128, 0.8557000], [0.9246028, 0.7722000], [1.5839535, 0.8856000], [0.4008251, 0.1340000], [0.1103679, 0.1712000], [1.3405282, 0.9758000], [0.3803081, 0.6951000], [0.8065859, 0.3751000], [1.2851076, 0.9734000], [0.7417916, 0.8609000], [0.9351496, 0.9888000], [0.6363153, 0.8470000], [1.1483763, 0.0113000], [0.3012403, 0.5875000], [0.7379505, 0.2180000], [1.6368507, 0.8088000], [1.5993033, 0.5340000], [0.8600430, 0.5905000], [0.3569559, 0.5816000], [0.1099940, 0.2349000], [0.5311431, 0.0362000], [0.1951884, 0.9405000], [0.9597622, 0.3928000], [0.2731036, 0.2254000], [1.6437579, 0.1833000], [1.4331513, 0.6595000], [0.6773790, 0.9186000], [0.9510644, 0.4992000], [0.5453656, 0.5317000], [0.5053633, 0.9733000], [0.8308238, 0.2771000], [0.0611792, 0.9719000], [0.6961376, 0.9805000], [0.7560314, 0.7191000], [0.9912448, 0.1884000], [1.2512255, 0.1715000], [1.0902448, 0.2460000], [0.5171090, 0.6410000], [1.3506091, 0.1207000], [0.4653716, 0.7772000], [0.1491083, 0.0305000], [1.2194964, 0.1067000], [0.1849882, 0.6446000], [0.0646897, 0.8809000], [0.3147118, 0.9750000], [0.3071740, 0.8558000], [0.4403907, 0.6170000], [0.7724320, 0.6641000], [0.7173964, 0.9297000], [0.8347850, 0.7515000], [1.1660858, 0.1508000], [1.1510971, 0.0607000], [1.2796157, 0.5554000], [0.0601848, 0.1491000], [0.8888832, 0.1959000], [0.9666487, 0.6321000], [0.7814151, 0.7762000], [0.0834785, 0.4156000], [1.4426000, 1.7545000], [1.7802000, 1.3391000], [1.9239000, 1.6991000]]]

Expected (Unparsed): [[[2.2912351199999996,0.931],[2.12417667,0.0572],[1.3741785,0.2192],[1.9336129199999998,0.8557],[0.9246028000000001,0.7722],[1.58395358,0.8856],[0.40082514999999996,0.134],[0.11036795,0.1712],[1.3405282299999999,0.9758],[0.38030809,0.6951],[0.80658594,0.3751],[1.28510766,0.9734],[0.7417916,0.8609],[0.9351496,0.9888],[0.63631535,0.847],[1.14837635,0.0113],[0.30124032000000006,0.5875],[0.7379505300000001,0.218],[1.63685062,0.8088],[1.5993032999999999,0.534],[0.8600429999999999,0.5905],[0.3569559,0.5816],[0.10999400000000001,0.2349],[0.5311431200000001,0.0362],[0.19518843000000002,0.9405],[0.95976225,0.3928],[0.27310362,0.2254],[1.64375791,0.1833],[1.4331513,0.6595],[0.6773790000000001,0.9186],[0.9510644000000001,0.4992],[0.5453656000000001,0.5317],[0.50536332,0.9733],[0.8308238399999999,0.2771],[0.061179220000000006,0.9719],[0.6961376100000001,0.9805],[0.75603136,0.7191],[0.9912447999999999,0.1884],[1.25122559,0.1715],[1.09024485,0.246],[0.5171090399999999,0.641],[1.3506091199999999,0.1207],[0.46537164,0.7772],[0.14910835,0.0305],[1.21949632,0.1067],[0.18498816,0.6446],[0.06468971999999999,0.8809],[0.31471177,0.975],[0.30717396,0.8558],[0.4403907,0.617],[0.77243203,0.6641],[0.71739639,0.9297],[0.8347849999999999,0.7515],[1.16608576,0.1508],[1.15109708,0.0607],[1.2796156,0.5554],[0.0601848,0.1491],[0.8888832,0.1959],[0.96664871,0.6321],[0.78141512,0.7762],[0.0834785,0.4156],[1.4426,1.7545],[1.7802,1.3391],[1.9239,1.6991]]]

Actual:   [[[2.2913, 0.931], [2.1242, 0.0572], [1.3742, 0.2192], [1.9337, 0.8557], [0.9247, 0.7722], [1.584, 0.8856], [0.4009, 0.134], [0.1104, 0.1712], [1.3406, 0.9758], [0.3804, 0.6951], [0.8066, 0.3751], [1.2852, 0.9734], [0.7418, 0.8609], [0.9352, 0.9888], [0.6364, 0.847], [1.1484, 0.0113], [0.3013, 0.5875], [0.738, 0.218], [1.6369, 0.8088], [1.5994, 0.534], [0.8601, 0.5905], [0.357, 0.5816], [0.11, 0.2349], [0.5312, 0.0362], [0.1952, 0.9405], [0.9598, 0.3928], [0.2732, 0.2254], [1.6438, 0.1833], [1.4332, 0.6595], [0.6774, 0.9186], [0.9511, 0.4992], [0.5454, 0.5317], [0.5054, 0.9733], [0.8309, 0.2771], [0.0612, 0.9719], [0.6962, 0.9805], [0.7561, 0.7191], [0.9913, 0.1884], [1.2513, 0.1715], [1.0903, 0.246], [0.5172, 0.641], [1.3507, 0.1207], [0.4654, 0.7772], [0.1492, 0.0305], [1.2195, 0.1067], [0.185, 0.6446], [0.0647, 0.8809], [0.3148, 0.975], [0.3072, 0.8558], [0.4404, 0.617], [0.7725, 0.6641], [0.7174, 0.9297], [0.8348, 0.7515], [1.1661, 0.1508], [1.1511, 0.0607], [1.2797, 0.5554], [0.0602, 0.1491], [0.8889, 0.1959], [0.9667, 0.6321], [0.7815, 0.7762], [0.0835, 0.4156], [1.4426, 1.7545], [1.7802, 1.3391], [1.9239, 1.6991]]]

Expected: [[[2.2913, 0.931], [2.1242, 0.0572], [1.3742, 0.2192], [1.9337, 0.8557], [0.9247, 0.7722], [1.584, 0.8856], [0.4009, 0.134], [0.1104, 0.1712], [1.3406, 0.9758], [0.3804, 0.6951], [0.8066, 0.3751], [1.2852, 0.9734], [0.7418, 0.8609], [0.9352, 0.9888], [0.6364, 0.847], [1.1484, 0.0113], [0.3013, 0.5875], [0.738, 0.218], [1.6369, 0.8088], [1.5994, 0.534], [0.8601, 0.5905], [0.357, 0.5816], [0.11, 0.2349], [0.5312, 0.0362], [0.1952, 0.9405], [0.9598, 0.3928], [0.2732, 0.2254], [1.6438, 0.1833], [1.4332, 0.6595], [0.6774, 0.9186], [0.9511, 0.4992], [0.5454, 0.5317], [0.5054, 0.9733], [0.8309, 0.2771], [0.0612, 0.9719], [0.6962, 0.9805], [0.7561, 0.7191], [0.9913, 0.1884], [1.2513, 0.1715], [1.0903, 0.246], [0.5172, 0.641], [1.3507, 0.1207], [0.4654, 0.7772], [0.1492, 0.0305], [1.2195, 0.1067], [0.185, 0.6446], [0.0647, 0.8809], [0.3148, 0.975], [0.3072, 0.8558], [0.4404, 0.617], [0.7725, 0.6641], [0.7174, 0.9297], [0.8348, 0.7515], [1.1661, 0.1508], [1.1511, 0.0607], [1.2797, 0.5554], [0.0602, 0.1491], [0.8889, 0.1959], [0.9667, 0.6321], [0.7815, 0.7762], [0.0835, 0.4156], [1.4426, 1.7545], [1.7802, 1.3391], [1.9239, 1.6991]]]