import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Add68952 = tf.keras.layers.Input(shape=([1, 1, 1, 2]))
in1Add68952 = tf.keras.layers.Input(shape=([1, 1, 1, 2]))
in0Con31834 = tf.keras.layers.Input(shape=([3, 3]))
in0Mul23705 = tf.keras.layers.Input(shape=([2, 1]))
in1Mul23705 = tf.keras.layers.Input(shape=([2, 1]))
in0Con59375 = tf.keras.layers.Input(shape=([2, 3]))
in0Mul4843 = tf.keras.layers.Input(shape=([2, 2, 1, 2]))
in1Mul4843 = tf.keras.layers.Input(shape=([2, 2, 1, 2]))
in0Ave87266 = tf.keras.layers.Input(shape=([1, 2]))
in1Ave87266 = tf.keras.layers.Input(shape=([1, 2]))
in0Con18982 = tf.keras.layers.Input(shape=([2, 2]))
in0Dot82410 = tf.keras.layers.Input(shape=([2, 3]))
in1Dot82410 = tf.keras.layers.Input(shape=([2, 3]))
in0Con5752 = tf.keras.layers.Input(shape=([3, 1]))

Add68952 = keras.layers.Add(name = 'Add68952', )([in0Add68952,in1Add68952])
Res85218 = keras.layers.Reshape((1, 1, 2), name = 'Res85218', )(Add68952)
Glo95769 = keras.layers.GlobalAveragePooling2D(name = 'Glo95769', )(Res85218)
Res69745 = keras.layers.Reshape((2, 1), name = 'Res69745', )(Glo95769)
Res47105 = keras.layers.Reshape((2, 1, 1), name = 'Res47105', )(Res69745)
Res79750 = keras.layers.Reshape((2, 1, 1, 1), name = 'Res79750', )(Res47105)
Glo73310 = keras.layers.GlobalMaxPool3D(name = 'Glo73310', )(Res79750)
Res51923 = keras.layers.Reshape((1, 1), name = 'Res51923', )(Glo73310)
Cro43167 = keras.layers.Cropping1D(cropping=((0, 0)), name = 'Cro43167', )(Res51923)
Zer2163 = keras.layers.ZeroPadding1D(padding=((2, 0)), name = 'Zer2163', )(Cro43167)
Con31834 = keras.layers.Concatenate(axis=2, name = 'Con31834', )([Zer2163,in0Con31834])
Mul23705 = keras.layers.Multiply(name = 'Mul23705', )([in0Mul23705,in1Mul23705])
Con59375 = keras.layers.Concatenate(axis=2, name = 'Con59375', )([Mul23705,in0Con59375])
Mul4843 = keras.layers.Multiply(name = 'Mul4843', )([in0Mul4843,in1Mul4843])
Res66367 = keras.layers.Reshape((2, 2, 2), name = 'Res66367', )(Mul4843)
Res20568 = keras.layers.Reshape((2, 4), name = 'Res20568', )(Res66367)
Ave87266 = keras.layers.Average(name = 'Ave87266', )([in0Ave87266,in1Ave87266])
Zer10355 = keras.layers.ZeroPadding1D(padding=((1, 0)), name = 'Zer10355', )(Ave87266)
Con18982 = keras.layers.Concatenate(axis=2, name = 'Con18982', )([Zer10355,in0Con18982])
Min53027 = keras.layers.Minimum(name = 'Min53027', )([Res20568,Con18982])
Ave5625 = keras.layers.Average(name = 'Ave5625', )([Con59375,Min53027])
Zer66297 = keras.layers.ZeroPadding1D(padding=((1, 0)), name = 'Zer66297', )(Ave5625)
Dot82410 = keras.layers.Dot(axes=(1, 1), name = 'Dot82410', )([in0Dot82410,in1Dot82410])
Con5752 = keras.layers.Concatenate(axis=2, name = 'Con5752', )([Dot82410,in0Con5752])
Min93896 = keras.layers.Minimum(name = 'Min93896', )([Zer66297,Con5752])
Min19350 = keras.layers.Minimum(name = 'Min19350', )([Con31834,Min93896])
model = tf.keras.models.Model(inputs=[in0Add68952,in1Add68952,in0Con31834,in0Mul23705,in1Mul23705,in0Con59375,in0Mul4843,in1Mul4843,in0Ave87266,in1Ave87266,in0Con18982,in0Dot82410,in1Dot82410,in0Con5752], outputs=Min19350)
in0Add68952 = tf.constant([[[[[0.7386, 0.2748]]]]])
in1Add68952 = tf.constant([[[[[0.2026, 0.5713]]]]])
in0Con31834 = tf.constant([[[0.7379, 0.1552, 0.8412], [0.5862, 0.0831, 0.7395], [0.3652, 0.4466, 0.5792]]])
in0Mul23705 = tf.constant([[[0.5507], [0.9284]]])
in1Mul23705 = tf.constant([[[0.5194], [0.501]]])
in0Con59375 = tf.constant([[[0.7022, 0.5781, 0.7623], [0.9217, 0.4093, 0.8799]]])
in0Mul4843 = tf.constant([[[[[0.8393, 0.3555]], [[0.4344, 0.7852]]], [[[0.6242, 0.5856]], [[0.7071, 0.4823]]]]])
in1Mul4843 = tf.constant([[[[[0.0633, 0.7386]], [[0.2764, 0.279]]], [[[0.3704, 0.8971]], [[0.6837, 0.8199]]]]])
in0Ave87266 = tf.constant([[[0.9485, 0.9274]]])
in1Ave87266 = tf.constant([[[0.063, 0.7312]]])
in0Con18982 = tf.constant([[[0.0559, 0.1238], [0.3209, 0.2767]]])
in0Dot82410 = tf.constant([[[0.7751, 0.0581, 0.9571], [0.6199, 0.438, 0.9534]]])
in1Dot82410 = tf.constant([[[0.0316, 0.8405, 0.7301], [0.3486, 0.2227, 0.2281]]])
in0Con5752 = tf.constant([[[0.6545], [0.2996], [0.8676]]])
print (np.array2string(model.predict([in0Add68952,in1Add68952,in0Con31834,in0Mul23705,in1Mul23705,in0Con59375,in0Mul4843,in1Mul4843,in0Ave87266,in1Ave87266,in0Con18982,in0Dot82410,in1Dot82410,in0Con5752],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Min19350.png')

LAdd68952 = add_layer([[[[[[0.7386, 0.2748]]]]], [[[[[0.2026, 0.5713]]]]]], Add68952), 
LRes85218 = reshape_layer(Add68952, [1, 1, 2], Res85218), 
LGlo95769 = global_average_pooling2D_layer(Res85218, Glo95769), 
LRes69745 = reshape_layer(Glo95769, [2, 1], Res69745), 
LRes47105 = reshape_layer(Res69745, [2, 1, 1], Res47105), 
LRes79750 = reshape_layer(Res47105, [2, 1, 1, 1], Res79750), 
LGlo73310 = global_max_pool3D_layer(Res79750, Glo73310), 
LRes51923 = reshape_layer(Glo73310, [1, 1], Res51923), 
LCro43167 = cropping1D_layer(Res51923, 0, 0, Cro43167), 
LZer2163 = zero_padding1D_layer(Cro43167, 2, 0, Zer2163), 
LCon31834 = concatenate_layer([Zer2163,[[[0.7379, 0.1552, 0.8412], [0.5862, 0.0831, 0.7395], [0.3652, 0.4466, 0.5792]]]], 2, Con31834), 
LMul23705 = multiply_layer([[[[0.5507], [0.9284]]], [[[0.5194], [0.501]]]], Mul23705), 
LCon59375 = concatenate_layer([Mul23705,[[[0.7022, 0.5781, 0.7623], [0.9217, 0.4093, 0.8799]]]], 2, Con59375), 
LMul4843 = multiply_layer([[[[[[0.8393, 0.3555]], [[0.4344, 0.7852]]], [[[0.6242, 0.5856]], [[0.7071, 0.4823]]]]], [[[[[0.0633, 0.7386]], [[0.2764, 0.279]]], [[[0.3704, 0.8971]], [[0.6837, 0.8199]]]]]], Mul4843), 
LRes66367 = reshape_layer(Mul4843, [2, 2, 2], Res66367), 
LRes20568 = reshape_layer(Res66367, [2, 4], Res20568), 
LAve87266 = average_layer([[[[0.9485, 0.9274]]], [[[0.063, 0.7312]]]], Ave87266), 
LZer10355 = zero_padding1D_layer(Ave87266, 1, 0, Zer10355), 
LCon18982 = concatenate_layer([Zer10355,[[[0.0559, 0.1238], [0.3209, 0.2767]]]], 2, Con18982), 
LMin53027 = minimum_layer([Res20568,Con18982], Min53027), 
LAve5625 = average_layer([Con59375,Min53027], Ave5625), 
LZer66297 = zero_padding1D_layer(Ave5625, 1, 0, Zer66297), 
LDot82410 = dot_layer([[[0.7751, 0.0581, 0.9571], [0.6199, 0.438, 0.9534]]], [[[0.0316, 0.8405, 0.7301], [0.3486, 0.2227, 0.2281]]], 1, 1, Dot82410), 
LCon5752 = concatenate_layer([Dot82410,[[[0.6545], [0.2996], [0.8676]]]], 2, Con5752), 
LMin93896 = minimum_layer([Zer66297,Con5752], Min93896), 
LMin19350 = minimum_layer([Con31834,Min93896], Min19350), 
exec_layers([LAdd68952,LRes85218,LGlo95769,LRes69745,LRes47105,LRes79750,LGlo73310,LRes51923,LCro43167,LZer2163,LCon31834,LMul23705,LCon59375,LMul4843,LRes66367,LRes20568,LAve87266,LZer10355,LCon18982,LMin53027,LAve5625,LZer66297,LDot82410,LCon5752,LMin93896,LMin19350],["Add68952","Res85218","Glo95769","Res69745","Res47105","Res79750","Glo73310","Res51923","Cro43167","Zer2163","Con31834","Mul23705","Con59375","Mul4843","Res66367","Res20568","Ave87266","Zer10355","Con18982","Min53027","Ave5625","Zer66297","Dot82410","Con5752","Min93896","Min19350"],Min19350,"Min19350")

Actual (Unparsed): [[[0.0000000, 0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.1463756, 0.0831000, 0.2996000], [0.3481660, 0.3652000, 0.3651000, 0.5783000]]]

Expected (Unparsed): [[[0,0,0,0],[0,0.14637565000000002,0.0831,0.2996],[0.34816604,0.3652,0.3651,0.5783]]]

Actual:   [[[0, 0, 0, 0], [0, 0.1464, 0.0831, 0.2996], [0.3482, 0.3652, 0.3651, 0.5783]]]

Expected: [[[0, 0, 0, 0], [0, 0.1464, 0.0831, 0.2996], [0.3482, 0.3652, 0.3651, 0.5783]]]