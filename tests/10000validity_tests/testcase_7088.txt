import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Dot64829 = tf.keras.layers.Input(shape=([2, 2]))
in1Dot64829 = tf.keras.layers.Input(shape=([2, 2]))

Dot64829 = keras.layers.Dot(axes=(2, 2), name = 'Dot64829', )([in0Dot64829,in1Dot64829])
Den28601 = keras.layers.Dense(4,name = 'Den28601', )(Dot64829)
model = tf.keras.models.Model(inputs=[in0Dot64829,in1Dot64829], outputs=Den28601)
w = model.get_layer('Den28601').get_weights() 
w[0] = np.array([[0.2805, 0.0272, 0.259, 0.606], [0.6303, 0.6418, 0.6297, 0.5234]])
w[1] = np.array([0.2242, 0.4544, 0.7614, 0.3944])
model.get_layer('Den28601').set_weights(w) 
in0Dot64829 = tf.constant([[[0.8336, 0.9589], [0.6392, 0.5976]]])
in1Dot64829 = tf.constant([[[0.546, 0.154], [0.7649, 0.7888]]])
print (np.array2string(model.predict([in0Dot64829,in1Dot64829],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Den28601.png')

LDot64829 = dot_layer([[[0.8336, 0.9589], [0.6392, 0.5976]]], [[[0.546, 0.154], [0.7649, 0.7888]]], 2, 2, Dot64829), 
LDen28601 = dense_layer(Dot64829, [[0.2805, 0.0272, 0.259, 0.606], [0.6303, 0.6418, 0.6297, 0.5234]],[0.2242, 0.4544, 0.7614, 0.3944], Den28601), 
exec_layers([LDot64829,LDen28601],["Dot64829","Den28601"],Den28601,"Den28601")

Actual (Unparsed): [[[1.2719287, 1.3654664, 1.7953318, 1.4893267], [0.9531939, 1.0827237, 1.4803355, 1.1642931]]]

Expected (Unparsed): [[[1.271928749188,1.3654664167680002,1.795331800312,1.489326719664],[0.953193922888,1.082723688048,1.480335513912,1.164293118064]]]

Actual:   [[[1.272, 1.3655, 1.7954, 1.4894], [0.9532, 1.0828, 1.4804, 1.1643]]]

Expected: [[[1.272, 1.3655, 1.7954, 1.4894], [0.9532, 1.0828, 1.4804, 1.1643]]]