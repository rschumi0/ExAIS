import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Mas39121 = tf.keras.layers.Input(shape=([4, 1, 3]))
in0Min11940 = tf.keras.layers.Input(shape=([2, 1]))
in1Min11940 = tf.keras.layers.Input(shape=([2, 1]))
in0Con51919 = tf.keras.layers.Input(shape=([4, 2]))
in0Ave58532 = tf.keras.layers.Input(shape=([1, 1]))
in1Ave58532 = tf.keras.layers.Input(shape=([1, 1]))

Mas39121 = keras.layers.Masking(mask_value=2, name = 'Mas39121', )(in0Mas39121)
Res29362 = keras.layers.Reshape((4, 3), name = 'Res29362', )(Mas39121)
Min11940 = keras.layers.Minimum(name = 'Min11940', )([in0Min11940,in1Min11940])
Zer51321 = keras.layers.ZeroPadding1D(padding=((2, 0)), name = 'Zer51321', )(Min11940)
Con51919 = keras.layers.Concatenate(axis=2, name = 'Con51919', )([Zer51321,in0Con51919])
Mul69273 = keras.layers.Multiply(name = 'Mul69273', )([Res29362,Con51919])
Res61514 = keras.layers.Reshape((4, 3, 1), name = 'Res61514', )(Mul69273)
Max72834 = keras.layers.MaxPool2D(pool_size=(2, 3), name = 'Max72834', )(Res61514)
Res85623 = keras.layers.Reshape((2, 1), name = 'Res85623', )(Max72834)
Ave58532 = keras.layers.Average(name = 'Ave58532', )([in0Ave58532,in1Ave58532])
Zer73064 = keras.layers.ZeroPadding1D(padding=((1, 0)), name = 'Zer73064', )(Ave58532)
Min29396 = keras.layers.Minimum(name = 'Min29396', )([Res85623,Zer73064])
model = tf.keras.models.Model(inputs=[in0Mas39121,in0Min11940,in1Min11940,in0Con51919,in0Ave58532,in1Ave58532], outputs=Min29396)
in0Mas39121 = tf.constant([[[[1.609, 1.0104, 1.8528]], [[1.5318, 1.5095, 1.5623]], [[1.449, 1.6842, 1.963]], [[1.5182, 1.6772, 1.3612]]]])
in0Min11940 = tf.constant([[[0.8686], [0.1917]]])
in1Min11940 = tf.constant([[[0.2406], [0.0959]]])
in0Con51919 = tf.constant([[[0.4788, 0.761], [0.5754, 0.3273], [0.7726, 0.0984], [0.7671, 0.4491]]])
in0Ave58532 = tf.constant([[[0.3345]]])
in1Ave58532 = tf.constant([[[0.6319]]])
print (np.array2string(model.predict([in0Mas39121,in0Min11940,in1Min11940,in0Con51919,in0Ave58532,in1Ave58532],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Min29396.png')

LMas39121 = masking_layer([[[[1.609, 1.0104, 1.8528]], [[1.5318, 1.5095, 1.5623]], [[1.449, 1.6842, 1.963]], [[1.5182, 1.6772, 1.3612]]]], 2, Mas39121), 
LRes29362 = reshape_layer(Mas39121, [4, 3], Res29362), 
LMin11940 = minimum_layer([[[[0.8686], [0.1917]]], [[[0.2406], [0.0959]]]], Min11940), 
LZer51321 = zero_padding1D_layer(Min11940, 2, 0, Zer51321), 
LCon51919 = concatenate_layer([Zer51321,[[[0.4788, 0.761], [0.5754, 0.3273], [0.7726, 0.0984], [0.7671, 0.4491]]]], 2, Con51919), 
LMul69273 = multiply_layer([Res29362,Con51919], Mul69273), 
LRes61514 = reshape_layer(Mul69273, [4, 3, 1], Res61514), 
LMax72834 = max_pool2D_layer(Res61514, 2, 3, Max72834), 
LRes85623 = reshape_layer(Max72834, [2, 1], Res85623), 
LAve58532 = average_layer([[[[0.3345]]], [[[0.6319]]]], Ave58532), 
LZer73064 = zero_padding1D_layer(Ave58532, 1, 0, Zer73064), 
LMin29396 = minimum_layer([Res85623,Zer73064], Min29396), 
exec_layers([LMas39121,LRes29362,LMin11940,LZer51321,LCon51919,LMul69273,LRes61514,LMax72834,LRes85623,LAve58532,LZer73064,LMin29396],["Mas39121","Res29362","Min11940","Zer51321","Con51919","Mul69273","Res61514","Max72834","Res85623","Ave58532","Zer73064","Min29396"],Min29396,"Min29396")

Actual (Unparsed): [[[0.0000000], [0.4832000]]]

Expected (Unparsed): [[[0],[0.4832]]]

Actual:   [[[0], [0.4832]]]

Expected: [[[0], [0.4832]]]