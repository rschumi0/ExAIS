import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Min86595 = tf.keras.layers.Input(shape=([2, 1, 2]))
in1Min86595 = tf.keras.layers.Input(shape=([2, 1, 2]))
in0Mul35782 = tf.keras.layers.Input(shape=([1, 1, 2]))
in1Mul35782 = tf.keras.layers.Input(shape=([1, 1, 2]))

Min86595 = keras.layers.Minimum(name = 'Min86595', )([in0Min86595,in1Min86595])
Mul35782 = keras.layers.Multiply(name = 'Mul35782', )([in0Mul35782,in1Mul35782])
Zer35438 = keras.layers.ZeroPadding2D(padding=((1, 0), (0, 0)), name = 'Zer35438', )(Mul35782)
Mul63247 = keras.layers.Multiply(name = 'Mul63247', )([Min86595,Zer35438])
model = tf.keras.models.Model(inputs=[in0Min86595,in1Min86595,in0Mul35782,in1Mul35782], outputs=Mul63247)
in0Min86595 = tf.constant([[[[0.5272, 0.2314]], [[0.8675, 0.3893]]]])
in1Min86595 = tf.constant([[[[0.7283, 0.3857]], [[0.0532, 0.1734]]]])
in0Mul35782 = tf.constant([[[[0.2168, 0.9706]]]])
in1Mul35782 = tf.constant([[[[0.5756, 0.8635]]]])
print (np.array2string(model.predict([in0Min86595,in1Min86595,in0Mul35782,in1Mul35782],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Mul63247.png')

LMin86595 = minimum_layer([[[[[0.5272, 0.2314]], [[0.8675, 0.3893]]]], [[[[0.7283, 0.3857]], [[0.0532, 0.1734]]]]], Min86595), 
LMul35782 = multiply_layer([[[[[0.2168, 0.9706]]]], [[[[0.5756, 0.8635]]]]], Mul35782), 
LZer35438 = zero_padding2D_layer(Mul35782, 1, 0, 0, 0, Zer35438), 
LMul63247 = multiply_layer([Min86595,Zer35438], Mul63247), 
exec_layers([LMin86595,LMul35782,LZer35438,LMul63247],["Min86595","Mul35782","Zer35438","Mul63247"],Mul63247,"Mul63247")

Actual (Unparsed): [[[[0.0000000, 0.0000000]], [[0.0066388, 0.1453288]]]]

Expected (Unparsed): [[[[0.0,0.0]],[[0.006638832256,0.14532881154000002]]]]

Actual:   [[[[0, 0]], [[0.0067, 0.1454]]]]

Expected: [[[[0, 0]], [[0.0067, 0.1454]]]]