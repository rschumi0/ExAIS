import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Bat33106 = tf.keras.layers.Input(shape=([3]))
in0Con89413 = tf.keras.layers.Input(shape=([1]))
in0Mul46618 = tf.keras.layers.Input(shape=([2, 2, 2, 1]))
in1Mul46618 = tf.keras.layers.Input(shape=([2, 2, 2, 1]))
in0Con55367 = tf.keras.layers.Input(shape=([4, 1]))
in0Max29550 = tf.keras.layers.Input(shape=([2, 2]))
in1Max29550 = tf.keras.layers.Input(shape=([2, 2]))
in0Sof38744 = tf.keras.layers.Input(shape=([2, 1]))
in0Con72484 = tf.keras.layers.Input(shape=([2, 1]))

Bat33106 = keras.layers.BatchNormalization(axis=1, epsilon=0.7964585106097729,  name = 'Bat33106', )(in0Bat33106)
Res97209 = keras.layers.Reshape((3, 1), name = 'Res97209', )(Bat33106)
Res80868 = keras.layers.Reshape((3, 1, 1), name = 'Res80868', )(Res97209)
Con94166 = keras.layers.Conv2D(3, (2, 1),strides=(11, 1), padding='valid', dilation_rate=(1, 1), name = 'Con94166', )(Res80868)
Res89417 = keras.layers.Reshape((1, 3), name = 'Res89417', )(Con94166)
Con94932 = keras.layers.Conv1D(3, (1),strides=(1), padding='valid', dilation_rate=(1), name = 'Con94932', )(Res89417)
Fla43646 = keras.layers.Flatten(name = 'Fla43646', )(Con94932)
Con89413 = keras.layers.Concatenate(axis=1, name = 'Con89413', )([Fla43646,in0Con89413])
Mul46618 = keras.layers.Multiply(name = 'Mul46618', )([in0Mul46618,in1Mul46618])
Res40064 = keras.layers.Reshape((2, 2, 2), name = 'Res40064', )(Mul46618)
Res46948 = keras.layers.Reshape((2, 4), name = 'Res46948', )(Res40064)
Glo34382 = keras.layers.GlobalAveragePooling1D(name = 'Glo34382', )(Res46948)
Ave68119 = keras.layers.Average(name = 'Ave68119', )([Con89413,Glo34382])
Res92946 = keras.layers.Reshape((4, 1), name = 'Res92946', )(Ave68119)
Con55367 = keras.layers.Concatenate(axis=2, name = 'Con55367', )([Res92946,in0Con55367])
Max29550 = keras.layers.Maximum(name = 'Max29550', )([in0Max29550,in1Max29550])
Sof38744 = keras.layers.Softmax(axis=1, name = 'Sof38744', input_shape=(2, 1))(in0Sof38744)
Con72484 = keras.layers.Concatenate(axis=2, name = 'Con72484', )([Sof38744,in0Con72484])
Sub13608 = keras.layers.Subtract(name = 'Sub13608', )([Max29550,Con72484])
Zer89844 = keras.layers.ZeroPadding1D(padding=((2, 0)), name = 'Zer89844', )(Sub13608)
Mul64250 = keras.layers.Multiply(name = 'Mul64250', )([Con55367,Zer89844])
model = tf.keras.models.Model(inputs=[in0Bat33106,in0Con89413,in0Mul46618,in1Mul46618,in0Con55367,in0Max29550,in1Max29550,in0Sof38744,in0Con72484], outputs=Mul64250)
w = model.get_layer('Bat33106').get_weights() 
w[0] = np.array([0.3497, 0.6727, 0.7341])
w[1] = np.array([0.9926, 0.2321, 0.9749])
w[2] = np.array([0.6545, 0.4352, 0.8608])
w[3] = np.array([0.0227, 0.604, 0.7265])
model.get_layer('Bat33106').set_weights(w) 
w = model.get_layer('Con94166').get_weights() 
w[0] = np.array([[[[0.368, 0.4903, 0.4076]]], [[[0.4624, 0.343, 0.8041]]]])
w[1] = np.array([0, 0, 0])
model.get_layer('Con94166').set_weights(w) 
w = model.get_layer('Con94932').get_weights() 
w[0] = np.array([[[0.4937, 0.1335, 0.7646], [0.3656, 0.485, 0.6018], [0.9857, 0.4833, 0.2293]]])
w[1] = np.array([0, 0, 0])
model.get_layer('Con94932').set_weights(w) 
in0Bat33106 = tf.constant([[1.5105, 1.0156, 1.1237]])
in0Con89413 = tf.constant([[0.9493]])
in0Mul46618 = tf.constant([[[[[0.6032], [0.2224]], [[0.3929], [0.528]]], [[[0.5551], [0.0484]], [[0.7945], [0.3786]]]]])
in1Mul46618 = tf.constant([[[[[0.7689], [0.0136]], [[0.5857], [0.2859]]], [[[0.6267], [0.038]], [[0.7328], [0.3706]]]]])
in0Con55367 = tf.constant([[[0.8705], [0.5202], [0.874], [0.3585]]])
in0Max29550 = tf.constant([[[0.1755, 0.0688], [0.2247, 0.3443]]])
in1Max29550 = tf.constant([[[0.4382, 0.7913], [0.8019, 0.3436]]])
in0Sof38744 = tf.constant([[[0.4141], [0.1457]]])
in0Con72484 = tf.constant([[[0.6507], [0.5472]]])
print (np.array2string(model.predict([in0Bat33106,in0Con89413,in0Mul46618,in1Mul46618,in0Con55367,in0Max29550,in1Max29550,in0Sof38744,in0Con72484],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Mul64250.png')

LBat33106 = batch_normalization_layer([[1.5105, 1.0156, 1.1237]], 1, 0.7964585106097729, [0.3497, 0.6727, 0.7341], [0.9926, 0.2321, 0.9749], [0.6545, 0.4352, 0.8608], [0.0227, 0.604, 0.7265], Bat33106), 
LRes97209 = reshape_layer(Bat33106, [3, 1], Res97209), 
LRes80868 = reshape_layer(Res97209, [3, 1, 1], Res80868), 
LCon94166 = conv2D_layer(Res80868, 2, 1,[[[[0.368, 0.4903, 0.4076]]], [[[0.4624, 0.343, 0.8041]]]],[0, 0, 0], 11, 1, false, 1, 1, Con94166), 
LRes89417 = reshape_layer(Con94166, [1, 3], Res89417), 
LCon94932 = conv1D_layer(Res89417, 1,[[[0.4937, 0.1335, 0.7646], [0.3656, 0.485, 0.6018], [0.9857, 0.4833, 0.2293]]],[0, 0, 0], 1, false, 1, Con94932), 
LFla43646 = flatten_layer(Con94932, Fla43646), 
LCon89413 = concatenate_layer([Fla43646,[[0.9493]]], 1, Con89413), 
LMul46618 = multiply_layer([[[[[[0.6032], [0.2224]], [[0.3929], [0.528]]], [[[0.5551], [0.0484]], [[0.7945], [0.3786]]]]], [[[[[0.7689], [0.0136]], [[0.5857], [0.2859]]], [[[0.6267], [0.038]], [[0.7328], [0.3706]]]]]], Mul46618), 
LRes40064 = reshape_layer(Mul46618, [2, 2, 2], Res40064), 
LRes46948 = reshape_layer(Res40064, [2, 4], Res46948), 
LGlo34382 = global_average_pooling1D_layer(Res46948, Glo34382), 
LAve68119 = average_layer([Con89413,Glo34382], Ave68119), 
LRes92946 = reshape_layer(Ave68119, [4, 1], Res92946), 
LCon55367 = concatenate_layer([Res92946,[[[0.8705], [0.5202], [0.874], [0.3585]]]], 2, Con55367), 
LMax29550 = maximum_layer([[[[0.1755, 0.0688], [0.2247, 0.3443]]], [[[0.4382, 0.7913], [0.8019, 0.3436]]]], Max29550), 
LSof38744 = softmax_layer([[[0.4141], [0.1457]]], 1, Sof38744), 
LCon72484 = concatenate_layer([Sof38744,[[[0.6507], [0.5472]]]], 2, Con72484), 
LSub13608 = subtract_layer(Max29550,Con72484, Sub13608), 
LZer89844 = zero_padding1D_layer(Sub13608, 2, 0, Zer89844), 
LMul64250 = multiply_layer([Con55367,Zer89844], Mul64250), 
exec_layers([LBat33106,LRes97209,LRes80868,LCon94166,LRes89417,LCon94932,LFla43646,LCon89413,LMul46618,LRes40064,LRes46948,LGlo34382,LAve68119,LRes92946,LCon55367,LMax29550,LSof38744,LCon72484,LSub13608,LZer89844,LMul64250],["Bat33106","Res97209","Res80868","Con94166","Res89417","Con94932","Fla43646","Con89413","Mul46618","Res40064","Res46948","Glo34382","Ave68119","Res92946","Con55367","Max29550","Sof38744","Con72484","Sub13608","Zer89844","Mul64250"],Mul64250,"Mul64250")

Actual (Unparsed): [[[0.0000000, 0.0000000], [0.0000000, 0.0000000], [-0.1099324, 0.1228844], [0.2017960, -0.0727397]]]

Expected (Unparsed): [[[0.0,0.0],[0.0,0.0],[-0.10993240942287383,0.12288440000000005],[0.20179603647485408,-0.07273965]]]

Actual:   [[[0, 0], [0, 0], [-0.1099, 0.1229], [0.2018, -0.0727]]]

Expected: [[[0, 0], [0, 0], [-0.1099, 0.1229], [0.2018, -0.0727]]]