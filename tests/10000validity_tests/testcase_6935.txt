import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Den54482 = tf.keras.layers.Input(shape=([5, 2, 2]))
in0Con3263 = tf.keras.layers.Input(shape=([5, 4, 3]))
in0Dot54584 = tf.keras.layers.Input(shape=([3, 3]))
in1Dot54584 = tf.keras.layers.Input(shape=([3, 3]))
in0Con18176 = tf.keras.layers.Input(shape=([3, 3, 3]))
in0Sep50125 = tf.keras.layers.Input(shape=([1, 2]))

Den54482 = keras.layers.Dense(1,name = 'Den54482', )(in0Den54482)
Zer74089 = keras.layers.ZeroPadding2D(padding=((0, 0), (2, 0)), name = 'Zer74089', )(Den54482)
Con3263 = keras.layers.Concatenate(axis=3, name = 'Con3263', )([Zer74089,in0Con3263])
Dot54584 = keras.layers.Dot(axes=(2, 2), name = 'Dot54584', )([in0Dot54584,in1Dot54584])
Sof91959 = keras.layers.Softmax(axis=1, name = 'Sof91959', )(Dot54584)
Res7575 = keras.layers.Reshape((3, 3, 1), name = 'Res7575', )(Sof91959)
Con18176 = keras.layers.Concatenate(axis=3, name = 'Con18176', )([Res7575,in0Con18176])
Sep50125 = keras.layers.SeparableConv1D(3, (1),strides=(1), padding='valid', name = 'Sep50125', )(in0Sep50125)
Res60791 = keras.layers.Reshape((1, 3, 1), name = 'Res60791', )(Sep50125)
Con97235 = keras.layers.Conv2D(4, (1, 2),strides=(8, 1), padding='valid', dilation_rate=(1, 1), name = 'Con97235', )(Res60791)
Zer63750 = keras.layers.ZeroPadding2D(padding=((2, 0), (1, 0)), name = 'Zer63750', )(Con97235)
Sub57319 = keras.layers.Subtract(name = 'Sub57319', )([Con18176,Zer63750])
Zer66420 = keras.layers.ZeroPadding2D(padding=((2, 0), (1, 0)), name = 'Zer66420', )(Sub57319)
Add30368 = keras.layers.Add(name = 'Add30368', )([Con3263,Zer66420])
model = tf.keras.models.Model(inputs=[in0Den54482,in0Con3263,in0Dot54584,in1Dot54584,in0Con18176,in0Sep50125], outputs=Add30368)
w = model.get_layer('Den54482').get_weights() 
w[0] = np.array([[0.8732], [0.2354]])
w[1] = np.array([0.7377])
model.get_layer('Den54482').set_weights(w) 
w = model.get_layer('Sep50125').get_weights() 
w[0] = np.array([[[0.8289], [0.4684]]])
w[1] = np.array([[[0.343, 0.1037, 0.6802], [0.0522, 0.6427, 0.7789]]])
w[2] = np.array([0, 0, 0])
model.get_layer('Sep50125').set_weights(w) 
w = model.get_layer('Con97235').get_weights() 
w[0] = np.array([[[[0.8619, 0.5945, 0.5666, 0.8957]], [[0.2807, 0.1868, 0.3409, 0.7796]]]])
w[1] = np.array([0, 0, 0, 0])
model.get_layer('Con97235').set_weights(w) 
in0Den54482 = tf.constant([[[[0.4477, 0.8876], [0.7189, 0.2929]], [[0.4784, 0.3506], [0.6461, 0.0931]], [[0.5544, 0.8084], [0.8847, 0.3451]], [[0.4191, 0.2963], [0.2416, 0.943]], [[0.3188, 0.7945], [0.3558, 0.0976]]]])
in0Con3263 = tf.constant([[[[0.5066, 0.1133, 0.5602], [0.2532, 0.9934, 0.7879], [0.4855, 0.0425, 0.9004], [0.7193, 0.7244, 0.4962]], [[0.3413, 0.0483, 0.7824], [0.8077, 0.7415, 0.2833], [0.265, 0.5356, 0.4181], [0.547, 0.8314, 0.0961]], [[0.7015, 0.2226, 0.0035], [0.085, 0.275, 0.6388], [0.8278, 0.0063, 0.0577], [0.1249, 0.1774, 0.4344]], [[0.1399, 0.2337, 0.3031], [0.3758, 0.9876, 0.1819], [0.0957, 0.6106, 0.3784], [0.5929, 0.4036, 0.0931]], [[0.3069, 0.4337, 0.6673], [0.0689, 0.3988, 0.6409], [0.0758, 0.4276, 0.2152], [0.2982, 0.4309, 0.9506]]]])
in0Dot54584 = tf.constant([[[0.0092, 0.5953, 0.8043], [0.3387, 0.8888, 0.4506], [0.3348, 0.3106, 0.4175]]])
in1Dot54584 = tf.constant([[[0.7711, 0.8408, 0.3043], [0.485, 0.6624, 0.0197], [0.9379, 0.8059, 0.2487]]])
in0Con18176 = tf.constant([[[[0.5126, 0.0811, 0.4913], [0.5944, 0.4373, 0.8568], [0.4461, 0.4902, 0.3253]], [[0.4991, 0.3101, 0.9588], [0.3914, 0.4429, 0.3752], [0.2523, 0.129, 0.4379]], [[0.4133, 0.3186, 0.5922], [0.7995, 0.0392, 0.852], [0.4691, 0.2812, 0.8024]]]])
in0Sep50125 = tf.constant([[[0.3997, 0.5199]]])
print (np.array2string(model.predict([in0Den54482,in0Con3263,in0Dot54584,in1Dot54584,in0Con18176,in0Sep50125],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Add30368.png')

LDen54482 = dense_layer([[[[0.4477, 0.8876], [0.7189, 0.2929]], [[0.4784, 0.3506], [0.6461, 0.0931]], [[0.5544, 0.8084], [0.8847, 0.3451]], [[0.4191, 0.2963], [0.2416, 0.943]], [[0.3188, 0.7945], [0.3558, 0.0976]]]], [[0.8732], [0.2354]],[0.7377], Den54482), 
LZer74089 = zero_padding2D_layer(Den54482, 0, 0, 2, 0, Zer74089), 
LCon3263 = concatenate_layer([Zer74089,[[[[0.5066, 0.1133, 0.5602], [0.2532, 0.9934, 0.7879], [0.4855, 0.0425, 0.9004], [0.7193, 0.7244, 0.4962]], [[0.3413, 0.0483, 0.7824], [0.8077, 0.7415, 0.2833], [0.265, 0.5356, 0.4181], [0.547, 0.8314, 0.0961]], [[0.7015, 0.2226, 0.0035], [0.085, 0.275, 0.6388], [0.8278, 0.0063, 0.0577], [0.1249, 0.1774, 0.4344]], [[0.1399, 0.2337, 0.3031], [0.3758, 0.9876, 0.1819], [0.0957, 0.6106, 0.3784], [0.5929, 0.4036, 0.0931]], [[0.3069, 0.4337, 0.6673], [0.0689, 0.3988, 0.6409], [0.0758, 0.4276, 0.2152], [0.2982, 0.4309, 0.9506]]]]], 3, Con3263), 
LDot54584 = dot_layer([[[0.0092, 0.5953, 0.8043], [0.3387, 0.8888, 0.4506], [0.3348, 0.3106, 0.4175]]], [[[0.7711, 0.8408, 0.3043], [0.485, 0.6624, 0.0197], [0.9379, 0.8059, 0.2487]]], 2, 2, Dot54584), 
LSof91959 = softmax_layer(Dot54584, 1, Sof91959), 
LRes7575 = reshape_layer(Sof91959, [3, 3, 1], Res7575), 
LCon18176 = concatenate_layer([Res7575,[[[[0.5126, 0.0811, 0.4913], [0.5944, 0.4373, 0.8568], [0.4461, 0.4902, 0.3253]], [[0.4991, 0.3101, 0.9588], [0.3914, 0.4429, 0.3752], [0.2523, 0.129, 0.4379]], [[0.4133, 0.3186, 0.5922], [0.7995, 0.0392, 0.852], [0.4691, 0.2812, 0.8024]]]]], 3, Con18176), 
LSep50125 = separable_conv1D_layer([[[0.3997, 0.5199]]], 1,[[[[0.8289], [0.4684]]],[[[0.343, 0.1037, 0.6802], [0.0522, 0.6427, 0.7789]]]],[0, 0, 0], 1, false, Sep50125), 
LRes60791 = reshape_layer(Sep50125, [1, 3, 1], Res60791), 
LCon97235 = conv2D_layer(Res60791, 1, 2,[[[[0.8619, 0.5945, 0.5666, 0.8957]], [[0.2807, 0.1868, 0.3409, 0.7796]]]],[0, 0, 0, 0], 8, 1, false, 1, 1, Con97235), 
LZer63750 = zero_padding2D_layer(Con97235, 2, 0, 1, 0, Zer63750), 
LSub57319 = subtract_layer(Con18176,Zer63750, Sub57319), 
LZer66420 = zero_padding2D_layer(Sub57319, 2, 0, 1, 0, Zer66420), 
LAdd30368 = add_layer([Con3263,Zer66420], Add30368), 
exec_layers([LDen54482,LZer74089,LCon3263,LDot54584,LSof91959,LRes7575,LCon18176,LSep50125,LRes60791,LCon97235,LZer63750,LSub57319,LZer66420,LAdd30368],["Den54482","Zer74089","Con3263","Dot54584","Sof91959","Res7575","Con18176","Sep50125","Res60791","Con97235","Zer63750","Sub57319","Zer66420","Add30368"],Add30368,"Add30368")

Actual (Unparsed): [[[[0.0000000, 0.5066000, 0.1133000, 0.5602000], [0.0000000, 0.2532000, 0.9934000, 0.7879000], [1.3375727, 0.4855000, 0.0425000, 0.9004000], [1.4343922, 0.7193000, 0.7244000, 0.4962000]], [[0.0000000, 0.3413000, 0.0483000, 0.7824000], [0.0000000, 0.8077000, 0.7415000, 0.2833000], [1.2379701, 0.2650000, 0.5356000, 0.4181000], [1.3237902, 0.5470000, 0.8314000, 0.0961000]], [[0.0000000, 0.7015000, 0.2226000, 0.0035000], [0.2957562, 0.5976000, 0.3561000, 1.1301000], [1.7081667, 1.4222000, 0.4436000, 0.9145000], [1.8723372, 0.5710000, 0.6676000, 0.7597000]], [[0.0000000, 0.1399000, 0.2337000, 0.3031000], [0.4382357, 0.8749000, 1.2977000, 1.1407000], [1.5923945, 0.4871000, 1.0535000, 0.7536000], [1.6145185, 0.8452000, 0.5326000, 0.5310000]], [[0.0000000, 0.3069000, 0.4337000, 0.6673000], [0.2660081, 0.4822000, 0.7174000, 1.2331000], [1.3255677, 0.7645298, 0.3301423, 0.8052262], [1.0655979, 0.5763001, 0.4624682, 1.2584770]]]]

Expected (Unparsed): [[[[0,0.5066,0.1133,0.5602],[0,0.2532,0.9934,0.7879],[1.33757268,0.4855,0.0425,0.9004],[1.4343921400000001,0.7193,0.7244,0.4962]],[[0,0.3413,0.0483,0.7824],[0,0.8077,0.7415,0.2833],[1.23797012,0.265,0.5356,0.4181],[1.3237902600000002,0.547,0.8314,0.0961]],[[0,0.7015,0.2226,0.0035],[0.295756221778005,0.5975999999999999,0.3561,1.1301],[1.7081667184156106,1.4222000000000001,0.4436,0.9145],[1.8723372283094581,0.571,0.6676,0.7597]],[[0,0.1399,0.2337,0.3031],[0.4382356940549057,0.8749,1.2977,1.1407],[1.5923944907986716,0.48710000000000003,1.0535,0.7536],[1.6145184843733122,0.8452,0.5326,0.531]],[[0,0.3069,0.4337,0.6673],[0.26600808416708926,0.4822,0.7174,1.2330999999999999],[1.3255677374542305,0.7645298304680606,0.3301422757405551,0.8052261605128317],[1.0655978553102559,0.5763001169757995,0.4624681953559592,1.2584769695915239]]]]

Actual:   [[[[0, 0.5066, 0.1133, 0.5602], [0, 0.2532, 0.9934, 0.7879], [1.3376, 0.4855, 0.0425, 0.9004], [1.4344, 0.7193, 0.7244, 0.4962]], [[0, 0.3413, 0.0483, 0.7824], [0, 0.8077, 0.7415, 0.2833], [1.238, 0.265, 0.5356, 0.4181], [1.3238, 0.547, 0.8314, 0.0961]], [[0, 0.7015, 0.2226, 0.0035], [0.2958, 0.5976, 0.3561, 1.1301], [1.7082, 1.4222, 0.4436, 0.9145], [1.8724, 0.571, 0.6676, 0.7597]], [[0, 0.1399, 0.2337, 0.3031], [0.4383, 0.8749, 1.2977, 1.1407], [1.5924, 0.4871, 1.0535, 0.7536], [1.6146, 0.8452, 0.5326, 0.531]], [[0, 0.3069, 0.4337, 0.6673], [0.2661, 0.4822, 0.7174, 1.2331], [1.3256, 0.7646, 0.3302, 0.8053], [1.0656, 0.5764, 0.4625, 1.2585]]]]

Expected: [[[[0, 0.5066, 0.1133, 0.5602], [0, 0.2532, 0.9934, 0.7879], [1.3376, 0.4855, 0.0425, 0.9004], [1.4344, 0.7193, 0.7244, 0.4962]], [[0, 0.3413, 0.0483, 0.7824], [0, 0.8077, 0.7415, 0.2833], [1.238, 0.265, 0.5356, 0.4181], [1.3238, 0.547, 0.8314, 0.0961]], [[0, 0.7015, 0.2226, 0.0035], [0.2958, 0.5976, 0.3561, 1.1301], [1.7082, 1.4223, 0.4436, 0.9145], [1.8724, 0.571, 0.6676, 0.7597]], [[0, 0.1399, 0.2337, 0.3031], [0.4383, 0.8749, 1.2977, 1.1407], [1.5924, 0.4872, 1.0535, 0.7536], [1.6146, 0.8452, 0.5326, 0.531]], [[0, 0.3069, 0.4337, 0.6673], [0.2661, 0.4822, 0.7174, 1.2331], [1.3256, 0.7646, 0.3302, 0.8053], [1.0656, 0.5764, 0.4625, 1.2585]]]]