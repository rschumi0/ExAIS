import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Ave67075 = tf.keras.layers.Input(shape=([1, 2]))
in1Ave67075 = tf.keras.layers.Input(shape=([1, 2]))
in0Mas44806 = tf.keras.layers.Input(shape=([2, 4]))
in0Ave92670 = tf.keras.layers.Input(shape=([1, 2]))
in1Ave92670 = tf.keras.layers.Input(shape=([1, 2]))
in0Ave730 = tf.keras.layers.Input(shape=([1, 2]))
in1Ave730 = tf.keras.layers.Input(shape=([1, 2]))
in0Con86198 = tf.keras.layers.Input(shape=([4, 4, 1]))
in0Max9512 = tf.keras.layers.Input(shape=([2, 1]))
in1Max9512 = tf.keras.layers.Input(shape=([2, 1]))
in0Con95078 = tf.keras.layers.Input(shape=([4, 4, 1]))
in0Mas91680 = tf.keras.layers.Input(shape=([4, 4, 2]))

Ave67075 = keras.layers.Average(name = 'Ave67075', )([in0Ave67075,in1Ave67075])
Zer50035 = keras.layers.ZeroPadding1D(padding=((2, 0)), name = 'Zer50035', )(Ave67075)
Mas44806 = keras.layers.Masking(mask_value=1, name = 'Mas44806', )(in0Mas44806)
Ave92670 = keras.layers.Average(name = 'Ave92670', )([in0Ave92670,in1Ave92670])
Dot49787 = keras.layers.Dot(axes=(1, 2), name = 'Dot49787', )([Mas44806,Ave92670])
Res91209 = keras.layers.Reshape((4, 1, 1), name = 'Res91209', )(Dot49787)
Sep84838 = keras.layers.SeparableConv2D(3, (2, 1),strides=(3, 3), padding='valid', name = 'Sep84838', )(Res91209)
Res33858 = keras.layers.Reshape((1, 3), name = 'Res33858', )(Sep84838)
Ave730 = keras.layers.Average(name = 'Ave730', )([in0Ave730,in1Ave730])
Dot38094 = keras.layers.Dot(axes=(1, 1), name = 'Dot38094', )([Res33858,Ave730])
Min15551 = keras.layers.Minimum(name = 'Min15551', )([Zer50035,Dot38094])
Res38604 = keras.layers.Reshape((3, 2, 1), name = 'Res38604', )(Min15551)
Zer1956 = keras.layers.ZeroPadding2D(padding=((1, 0), (2, 0)), name = 'Zer1956', )(Res38604)
Con86198 = keras.layers.Concatenate(axis=3, name = 'Con86198', )([Zer1956,in0Con86198])
Max9512 = keras.layers.Maximum(name = 'Max9512', )([in0Max9512,in1Max9512])
Res46914 = keras.layers.Reshape((2, 1, 1), name = 'Res46914', )(Max9512)
Zer43323 = keras.layers.ZeroPadding2D(padding=((2, 0), (3, 0)), name = 'Zer43323', )(Res46914)
Con95078 = keras.layers.Concatenate(axis=3, name = 'Con95078', )([Zer43323,in0Con95078])
Mas91680 = keras.layers.Masking(mask_value=2, name = 'Mas91680', )(in0Mas91680)
Ave4738 = keras.layers.Average(name = 'Ave4738', )([Con95078,Mas91680])
Ave87140 = keras.layers.Average(name = 'Ave87140', )([Con86198,Ave4738])
model = tf.keras.models.Model(inputs=[in0Ave67075,in1Ave67075,in0Mas44806,in0Ave92670,in1Ave92670,in0Ave730,in1Ave730,in0Con86198,in0Max9512,in1Max9512,in0Con95078,in0Mas91680], outputs=Ave87140)
w = model.get_layer('Sep84838').get_weights() 
w[0] = np.array([[[[0.3774]]], [[[0.0671]]]])
w[1] = np.array([[[[0.5999, 0.0633, 0.5763]]]])
w[2] = np.array([0, 0, 0])
model.get_layer('Sep84838').set_weights(w) 
in0Ave67075 = tf.constant([[[0.1795, 0.3837]]])
in1Ave67075 = tf.constant([[[0.0991, 0.8271]]])
in0Mas44806 = tf.constant([[[1.7195, 1.5423, 1.6701, 1.5918], [1.3172, 1.3402, 1.0313, 1.9553]]])
in0Ave92670 = tf.constant([[[0.5576, 0.1227]]])
in1Ave92670 = tf.constant([[[0.9462, 0.7423]]])
in0Ave730 = tf.constant([[[0.3342, 0.2243]]])
in1Ave730 = tf.constant([[[0.0831, 0.9132]]])
in0Con86198 = tf.constant([[[[0.8395], [0.4757], [0.0786], [0.0447]], [[0.065], [0.5829], [0.3981], [0.7841]], [[0.1956], [0.8308], [0.3519], [0.044]], [[0.2598], [0.5631], [0.6382], [0.392]]]])
in0Max9512 = tf.constant([[[0.0982], [0.0236]]])
in1Max9512 = tf.constant([[[0.7102], [0.1876]]])
in0Con95078 = tf.constant([[[[0.3541], [0.3753], [0.4842], [0.2611]], [[0.6371], [0.1636], [0.3061], [0.0927]], [[0.2387], [0.5707], [0.2128], [0.7902]], [[0.2264], [0.2097], [0.4223], [0.9178]]]])
in0Mas91680 = tf.constant([[[[1.035, 1.4496], [1.9041, 1.0088], [1.0585, 1.6326], [1.5065, 1.9376]], [[1.5831, 1.3791], [1.0238, 1.0637], [1.1364, 1.4139], [1.1579, 1.3082]], [[1.0098, 1.8846], [1.6821, 1.5491], [1.308, 1.4488], [1.9286, 1.3521]], [[1.9568, 1.3771], [1.2464, 1.7105], [1.4539, 1.4961], [1.3994, 1.6071]]]])
print (np.array2string(model.predict([in0Ave67075,in1Ave67075,in0Mas44806,in0Ave92670,in1Ave92670,in0Ave730,in1Ave730,in0Con86198,in0Max9512,in1Max9512,in0Con95078,in0Mas91680],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Ave87140.png')

LAve67075 = average_layer([[[[0.1795, 0.3837]]], [[[0.0991, 0.8271]]]], Ave67075), 
LZer50035 = zero_padding1D_layer(Ave67075, 2, 0, Zer50035), 
LMas44806 = masking_layer([[[1.7195, 1.5423, 1.6701, 1.5918], [1.3172, 1.3402, 1.0313, 1.9553]]], 1, Mas44806), 
LAve92670 = average_layer([[[[0.5576, 0.1227]]], [[[0.9462, 0.7423]]]], Ave92670), 
LDot49787 = dot_layer(Mas44806,Ave92670, 1, 2, Dot49787), 
LRes91209 = reshape_layer(Dot49787, [4, 1, 1], Res91209), 
LSep84838 = separable_conv2D_layer(Res91209, 2, 1,[[[[[0.3774]]], [[[0.0671]]]],[[[[0.5999, 0.0633, 0.5763]]]]],[0, 0, 0], 3, 3, false, Sep84838), 
LRes33858 = reshape_layer(Sep84838, [1, 3], Res33858), 
LAve730 = average_layer([[[[0.3342, 0.2243]]], [[[0.0831, 0.9132]]]], Ave730), 
LDot38094 = dot_layer(Res33858,Ave730, 1, 1, Dot38094), 
LMin15551 = minimum_layer([Zer50035,Dot38094], Min15551), 
LRes38604 = reshape_layer(Min15551, [3, 2, 1], Res38604), 
LZer1956 = zero_padding2D_layer(Res38604, 1, 0, 2, 0, Zer1956), 
LCon86198 = concatenate_layer([Zer1956,[[[[0.8395], [0.4757], [0.0786], [0.0447]], [[0.065], [0.5829], [0.3981], [0.7841]], [[0.1956], [0.8308], [0.3519], [0.044]], [[0.2598], [0.5631], [0.6382], [0.392]]]]], 3, Con86198), 
LMax9512 = maximum_layer([[[[0.0982], [0.0236]]], [[[0.7102], [0.1876]]]], Max9512), 
LRes46914 = reshape_layer(Max9512, [2, 1, 1], Res46914), 
LZer43323 = zero_padding2D_layer(Res46914, 2, 0, 3, 0, Zer43323), 
LCon95078 = concatenate_layer([Zer43323,[[[[0.3541], [0.3753], [0.4842], [0.2611]], [[0.6371], [0.1636], [0.3061], [0.0927]], [[0.2387], [0.5707], [0.2128], [0.7902]], [[0.2264], [0.2097], [0.4223], [0.9178]]]]], 3, Con95078), 
LMas91680 = masking_layer([[[[1.035, 1.4496], [1.9041, 1.0088], [1.0585, 1.6326], [1.5065, 1.9376]], [[1.5831, 1.3791], [1.0238, 1.0637], [1.1364, 1.4139], [1.1579, 1.3082]], [[1.0098, 1.8846], [1.6821, 1.5491], [1.308, 1.4488], [1.9286, 1.3521]], [[1.9568, 1.3771], [1.2464, 1.7105], [1.4539, 1.4961], [1.3994, 1.6071]]]], 2, Mas91680), 
LAve4738 = average_layer([Con95078,Mas91680], Ave4738), 
LAve87140 = average_layer([Con86198,Ave4738], Ave87140), 
exec_layers([LAve67075,LZer50035,LMas44806,LAve92670,LDot49787,LRes91209,LSep84838,LRes33858,LAve730,LDot38094,LMin15551,LRes38604,LZer1956,LCon86198,LMax9512,LRes46914,LZer43323,LCon95078,LMas91680,LAve4738,LAve87140],["Ave67075","Zer50035","Mas44806","Ave92670","Dot49787","Res91209","Sep84838","Res33858","Ave730","Dot38094","Min15551","Res38604","Zer1956","Con86198","Max9512","Res46914","Zer43323","Con95078","Mas91680","Ave4738","Ave87140"],Ave87140,"Ave87140")

Actual (Unparsed): [[[[0.2587500, 0.8706750], [0.4760250, 0.5838750], [0.2646250, 0.5685000], [0.3766250, 0.5720250]], [[0.3957750, 0.5365500], [0.2559500, 0.5982750], [0.2841000, 0.6290500], [0.2894750, 0.7422750]], [[0.2524500, 0.6286250], [0.4205250, 0.9453500], [0.3270000, 0.5913500], [0.6597000, 0.5575750]], [[0.4892000, 0.5307750], [0.3116000, 0.7616000], [0.4127541, 0.7987000], [0.5310777, 0.8272250]]]]

Expected (Unparsed): [[[[0.25875,0.8706750000000001],[0.476025,0.5838749999999999],[0.264625,0.5685],[0.376625,0.572025]],[[0.395775,0.53655],[0.25595,0.598275],[0.2841,0.62905],[0.289475,0.742275]],[[0.25245,0.628625],[0.420525,0.9453499999999999],[0.327,0.59135],[0.6597000000000001,0.557575]],[[0.4892,0.530775],[0.3116,0.7616],[0.41275407877587006,0.7987],[0.531077706943571,0.8272249999999999]]]]

Actual:   [[[[0.2588, 0.8707], [0.4761, 0.5839], [0.2647, 0.5685], [0.3767, 0.5721]], [[0.3958, 0.5366], [0.256, 0.5983], [0.2841, 0.6291], [0.2895, 0.7423]], [[0.2525, 0.6287], [0.4206, 0.9454], [0.327, 0.5914], [0.6597, 0.5576]], [[0.4892, 0.5308], [0.3116, 0.7616], [0.4128, 0.7987], [0.5311, 0.8273]]]]

Expected: [[[[0.2588, 0.8707], [0.4761, 0.5839], [0.2647, 0.5685], [0.3767, 0.5721]], [[0.3958, 0.5366], [0.256, 0.5983], [0.2841, 0.6291], [0.2895, 0.7423]], [[0.2525, 0.6287], [0.4206, 0.9454], [0.327, 0.5914], [0.6598, 0.5576]], [[0.4892, 0.5308], [0.3116, 0.7616], [0.4128, 0.7987], [0.5311, 0.8273]]]]