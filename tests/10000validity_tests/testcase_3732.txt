import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Con35573 = tf.keras.layers.Input(shape=([1, 2]))
in0Con40431 = tf.keras.layers.Input(shape=([3, 7, 1]))
in0Cro22206 = tf.keras.layers.Input(shape=([3, 3, 2]))

Con35573 = keras.layers.Conv1D(4, (1),strides=(1), padding='same', dilation_rate=(1), name = 'Con35573', )(in0Con35573)
Res65264 = keras.layers.Reshape((1, 4, 1), name = 'Res65264', )(Con35573)
Zer87461 = keras.layers.ZeroPadding2D(padding=((2, 0), (3, 0)), name = 'Zer87461', )(Res65264)
Con40431 = keras.layers.Concatenate(axis=3, name = 'Con40431', )([Zer87461,in0Con40431])
Cro22206 = keras.layers.Cropping2D(cropping=((0, 0), (2, 0)), name = 'Cro22206', )(in0Cro22206)
Bat54012 = keras.layers.BatchNormalization(axis=2, epsilon=0.6034576112543341,  name = 'Bat54012', )(Cro22206)
Zer15833 = keras.layers.ZeroPadding2D(padding=((0, 0), (6, 0)), name = 'Zer15833', )(Bat54012)
Min71855 = keras.layers.Minimum(name = 'Min71855', )([Con40431,Zer15833])
model = tf.keras.models.Model(inputs=[in0Con35573,in0Con40431,in0Cro22206], outputs=Min71855)
w = model.get_layer('Con35573').get_weights() 
w[0] = np.array([[[0.0437, 0.7571, 0.3413, 0.608], [0.7201, 0.0966, 0.8447, 0.8501]]])
w[1] = np.array([0, 0, 0, 0])
model.get_layer('Con35573').set_weights(w) 
w = model.get_layer('Bat54012').get_weights() 
w[0] = np.array([0.0781])
w[1] = np.array([0.6524])
w[2] = np.array([0.4182])
w[3] = np.array([0.2398])
model.get_layer('Bat54012').set_weights(w) 
in0Con35573 = tf.constant([[[0.4396, 0.4061]]])
in0Con40431 = tf.constant([[[[0.5902], [0.9429], [0.796], [0.9035], [0.8256], [0.7863], [0.4782]], [[0.5817], [0.9756], [0.5762], [0.8823], [0.3053], [0.6752], [0.0324]], [[0.9361], [0.7595], [0.9583], [0.253], [0.3723], [0.3367], [0.3856]]]])
in0Cro22206 = tf.constant([[[[1.486, 1.7819], [1.8366, 1.5707], [1.2544, 1.2532]], [[1.0566, 1.1114], [1.9148, 1.9271], [1.4604, 1.9694]], [[1.417, 1.074], [1.0756, 1.1259], [1.3594, 1.3653]]]])
print (np.array2string(model.predict([in0Con35573,in0Con40431,in0Cro22206],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Min71855.png')

LCon35573 = conv1D_layer([[[0.4396, 0.4061]]], 1,[[[0.0437, 0.7571, 0.3413, 0.608], [0.7201, 0.0966, 0.8447, 0.8501]]],[0, 0, 0, 0], 1, true, 1, Con35573), 
LRes65264 = reshape_layer(Con35573, [1, 4, 1], Res65264), 
LZer87461 = zero_padding2D_layer(Res65264, 2, 0, 3, 0, Zer87461), 
LCon40431 = concatenate_layer([Zer87461,[[[[0.5902], [0.9429], [0.796], [0.9035], [0.8256], [0.7863], [0.4782]], [[0.5817], [0.9756], [0.5762], [0.8823], [0.3053], [0.6752], [0.0324]], [[0.9361], [0.7595], [0.9583], [0.253], [0.3723], [0.3367], [0.3856]]]]], 3, Con40431), 
LCro22206 = cropping2D_layer([[[[1.486, 1.7819], [1.8366, 1.5707], [1.2544, 1.2532]], [[1.0566, 1.1114], [1.9148, 1.9271], [1.4604, 1.9694]], [[1.417, 1.074], [1.0756, 1.1259], [1.3594, 1.3653]]]], 0, 0, 2, 0, Cro22206), 
LBat54012 = batch_normalization_layer(Cro22206, 2, 0.6034576112543341, [0.0781], [0.6524], [0.4182], [0.2398], Bat54012), 
LZer15833 = zero_padding2D_layer(Bat54012, 0, 0, 6, 0, Zer15833), 
LMin71855 = minimum_layer([Con40431,Zer15833], Min71855), 
exec_layers([LCon35573,LRes65264,LZer87461,LCon40431,LCro22206,LBat54012,LZer15833,LMin71855],["Con35573","Res65264","Zer87461","Con40431","Cro22206","Bat54012","Zer15833","Min71855"],Min71855,"Min71855")

Actual (Unparsed): [[[[0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.4782000]], [[0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0324000]], [[0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.6125024, 0.3856000]]]]

Expected (Unparsed): [[[[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0.4782]],[[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0.0324]],[[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0.61250241,0.3856]]]]

Actual:   [[[[0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0.4782]], [[0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0.0324]], [[0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0.6126, 0.3856]]]]

Expected: [[[[0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0.4782]], [[0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0.0324]], [[0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0.6126, 0.3856]]]]