import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Ave10232 = tf.keras.layers.Input(shape=([2, 1, 2]))
in1Ave10232 = tf.keras.layers.Input(shape=([2, 1, 2]))

Ave10232 = keras.layers.Average(name = 'Ave10232', )([in0Ave10232,in1Ave10232])
Mas14268 = keras.layers.Masking(mask_value=1, name = 'Mas14268', )(Ave10232)
Res74048 = keras.layers.Reshape((2, 1, 2, 1), name = 'Res74048', )(Mas14268)
Zer83388 = keras.layers.ZeroPadding3D(padding=((1, 1), (1, 1), (1, 1)), name = 'Zer83388', )(Res74048)
model = tf.keras.models.Model(inputs=[in0Ave10232,in1Ave10232], outputs=Zer83388)
in0Ave10232 = tf.constant([[[[0.4404, 0.7611]], [[0.1665, 0.9658]]]])
in1Ave10232 = tf.constant([[[[0.6409, 0.1204]], [[0.9244, 0.9944]]]])
print (np.array2string(model.predict([in0Ave10232,in1Ave10232],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Zer83388.png')

LAve10232 = average_layer([[[[[0.4404, 0.7611]], [[0.1665, 0.9658]]]], [[[[0.6409, 0.1204]], [[0.9244, 0.9944]]]]], Ave10232), 
LMas14268 = masking_layer(Ave10232, 1, Mas14268), 
LRes74048 = reshape_layer(Mas14268, [2, 1, 2, 1], Res74048), 
LZer83388 = zero_padding3D_layer(Res74048, 1, 1, 1, 1, 1, 1, Zer83388), 
exec_layers([LAve10232,LMas14268,LRes74048,LZer83388],["Ave10232","Mas14268","Res74048","Zer83388"],Zer83388,"Zer83388")

Actual (Unparsed): [[[[[0.0000000], [0.0000000], [0.0000000], [0.0000000]], [[0.0000000], [0.0000000], [0.0000000], [0.0000000]], [[0.0000000], [0.0000000], [0.0000000], [0.0000000]]], [[[0.0000000], [0.0000000], [0.0000000], [0.0000000]], [[0.0000000], [0.5406500], [0.4407500], [0.0000000]], [[0.0000000], [0.0000000], [0.0000000], [0.0000000]]], [[[0.0000000], [0.0000000], [0.0000000], [0.0000000]], [[0.0000000], [0.5454500], [0.9801000], [0.0000000]], [[0.0000000], [0.0000000], [0.0000000], [0.0000000]]], [[[0.0000000], [0.0000000], [0.0000000], [0.0000000]], [[0.0000000], [0.0000000], [0.0000000], [0.0000000]], [[0.0000000], [0.0000000], [0.0000000], [0.0000000]]]]]

Expected (Unparsed): [[[[[0],[0],[0],[0]],[[0],[0],[0],[0]],[[0],[0],[0],[0]]],[[[0],[0],[0],[0]],[[0],[0.5406500000000001],[0.44075],[0]],[[0],[0],[0],[0]]],[[[0],[0],[0],[0]],[[0],[0.54545],[0.9801],[0]],[[0],[0],[0],[0]]],[[[0],[0],[0],[0]],[[0],[0],[0],[0]],[[0],[0],[0],[0]]]]]

Actual:   [[[[[0], [0], [0], [0]], [[0], [0], [0], [0]], [[0], [0], [0], [0]]], [[[0], [0], [0], [0]], [[0], [0.5407], [0.4408], [0]], [[0], [0], [0], [0]]], [[[0], [0], [0], [0]], [[0], [0.5455], [0.9801], [0]], [[0], [0], [0], [0]]], [[[0], [0], [0], [0]], [[0], [0], [0], [0]], [[0], [0], [0], [0]]]]]

Expected: [[[[[0], [0], [0], [0]], [[0], [0], [0], [0]], [[0], [0], [0], [0]]], [[[0], [0], [0], [0]], [[0], [0.5407], [0.4408], [0]], [[0], [0], [0], [0]]], [[[0], [0], [0], [0]], [[0], [0.5455], [0.9801], [0]], [[0], [0], [0], [0]]], [[[0], [0], [0], [0]], [[0], [0], [0], [0]], [[0], [0], [0], [0]]]]]