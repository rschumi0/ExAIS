import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Bat1934 = tf.keras.layers.Input(shape=([2, 2, 3]))
in0Glo56122 = tf.keras.layers.Input(shape=([1, 1]))
in0Con42834 = tf.keras.layers.Input(shape=([95]))
in0Mul44010 = tf.keras.layers.Input(shape=([1, 2, 1, 1]))
in1Mul44010 = tf.keras.layers.Input(shape=([1, 2, 1, 1]))

Bat1934 = keras.layers.BatchNormalization(axis=3, epsilon=0.37130493992422353,  name = 'Bat1934', )(in0Bat1934)
Res78274 = keras.layers.Reshape((2, 2, 3, 1), name = 'Res78274', )(Bat1934)
Con28832 = keras.layers.Conv3DTranspose(4, (2, 1, 2),strides=(1, 1, 2), padding='same', name = 'Con28832', )(Res78274)
Res91407 = keras.layers.Reshape((2, 2, 24), name = 'Res91407', )(Con28832)
Res26752 = keras.layers.Reshape((2, 48), name = 'Res26752', )(Res91407)
Fla79875 = keras.layers.Flatten(name = 'Fla79875', )(Res26752)
Glo56122 = keras.layers.GlobalMaxPool1D(name = 'Glo56122', )(in0Glo56122)
Con42834 = keras.layers.Concatenate(axis=1, name = 'Con42834', )([Glo56122,in0Con42834])
Sub2890 = keras.layers.Subtract(name = 'Sub2890', )([Fla79875,Con42834])
Res59452 = keras.layers.Reshape((96, 1), name = 'Res59452', )(Sub2890)
Res33331 = keras.layers.Reshape((96, 1, 1), name = 'Res33331', )(Res59452)
Res80065 = keras.layers.Reshape((96, 1, 1, 1), name = 'Res80065', )(Res33331)
Zer21711 = keras.layers.ZeroPadding3D(padding=((0, 0), (2, 0), (0, 0)), name = 'Zer21711', )(Res80065)
Mul44010 = keras.layers.Multiply(name = 'Mul44010', )([in0Mul44010,in1Mul44010])
Zer92172 = keras.layers.ZeroPadding3D(padding=((95, 0), (1, 0), (0, 0)), name = 'Zer92172', )(Mul44010)
Mul97614 = keras.layers.Multiply(name = 'Mul97614', )([Zer21711,Zer92172])
model = tf.keras.models.Model(inputs=[in0Bat1934,in0Glo56122,in0Con42834,in0Mul44010,in1Mul44010], outputs=Mul97614)
w = model.get_layer('Bat1934').get_weights() 
w[0] = np.array([0.8984, 0.7884, 0.0896])
w[1] = np.array([0.0373, 0.2219, 0.7236])
w[2] = np.array([0.8673, 0.0016, 0.8319])
w[3] = np.array([0.407, 0.3476, 0.8531])
model.get_layer('Bat1934').set_weights(w) 
w = model.get_layer('Con28832').get_weights() 
w[0] = np.array([[[[[0.0559], [0.6081], [0.5283], [0.9581]], [[0.6748], [0.7601], [0.5087], [0.8589]]]], [[[[0.1541], [0.0562], [0.5264], [0.3386]], [[0.787], [0.7893], [0.9769], [0.203]]]]])
w[1] = np.array([0, 0, 0, 0])
model.get_layer('Con28832').set_weights(w) 
in0Bat1934 = tf.constant([[[[1.2428, 1.4698, 1.4292], [1.8301, 1.8668, 1.5309]], [[1.6919, 1.7107, 1.8432], [1.6187, 1.4513, 1.0027]]]])
in0Glo56122 = tf.constant([[[1.616]]])
in0Con42834 = tf.constant([[0.7727, 0.0253, 0.2708, 0.7817, 0.143, 0.3011, 0.8522, 0.4932, 0.2383, 0.7772, 0.9174, 0.126, 0.7379, 0.9899, 0.2811, 0.5446, 0.0913, 0.3939, 0.1352, 0.0122, 0.2839, 0.1711, 0.2559, 0.8339, 0.1017, 0.3935, 0.6053, 0.1758, 0.8437, 0.242, 0.0332, 0.2236, 0.8873, 0.1633, 0.2521, 0.6653, 0.2457, 0.5583, 0.5113, 0.3333, 0.2729, 0.8389, 0.4263, 0.7266, 0.9708, 0.4648, 0.2364, 0.0489, 0.9313, 0.8773, 0.3533, 0.343, 0.8062, 0.0837, 0.444, 0.2822, 0.3405, 0.0151, 0.4466, 0.1851, 0.4269, 0.6783, 0.8557, 0.8623, 0.3425, 0.5543, 0.3335, 0.9748, 0.316, 0.6579, 0.2072, 0.6849, 0.8387, 0.1651, 0.6895, 0.5159, 0.6816, 0.5399, 0.7278, 0.5008, 0.4078, 0.6488, 0.2306, 0.8971, 0.2837, 0.436, 0.044, 0.9715, 0.8801, 0.3521, 0.4608, 0.6195, 0.3285, 0.879, 0.2322]])
in0Mul44010 = tf.constant([[[[[0.5664]], [[0.4446]]]]])
in1Mul44010 = tf.constant([[[[[0.0435]], [[0.9492]]]]])
print (np.array2string(model.predict([in0Bat1934,in0Glo56122,in0Con42834,in0Mul44010,in1Mul44010],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Mul97614.png')

LBat1934 = batch_normalization_layer([[[[1.2428, 1.4698, 1.4292], [1.8301, 1.8668, 1.5309]], [[1.6919, 1.7107, 1.8432], [1.6187, 1.4513, 1.0027]]]], 3, 0.37130493992422353, [0.8984, 0.7884, 0.0896], [0.0373, 0.2219, 0.7236], [0.8673, 0.0016, 0.8319], [0.407, 0.3476, 0.8531], Bat1934), 
LRes78274 = reshape_layer(Bat1934, [2, 2, 3, 1], Res78274), 
LCon28832 = conv3D_transpose_layer(Res78274, 2, 1, 2,[[[[[0.0559], [0.6081], [0.5283], [0.9581]], [[0.6748], [0.7601], [0.5087], [0.8589]]]], [[[[0.1541], [0.0562], [0.5264], [0.3386]], [[0.787], [0.7893], [0.9769], [0.203]]]]],[0, 0, 0, 0], 1, 1, 2, true, Con28832), 
LRes91407 = reshape_layer(Con28832, [2, 2, 24], Res91407), 
LRes26752 = reshape_layer(Res91407, [2, 48], Res26752), 
LFla79875 = flatten_layer(Res26752, Fla79875), 
LGlo56122 = global_max_pool1D_layer([[[1.616]]], Glo56122), 
LCon42834 = concatenate_layer([Glo56122,[[0.7727, 0.0253, 0.2708, 0.7817, 0.143, 0.3011, 0.8522, 0.4932, 0.2383, 0.7772, 0.9174, 0.126, 0.7379, 0.9899, 0.2811, 0.5446, 0.0913, 0.3939, 0.1352, 0.0122, 0.2839, 0.1711, 0.2559, 0.8339, 0.1017, 0.3935, 0.6053, 0.1758, 0.8437, 0.242, 0.0332, 0.2236, 0.8873, 0.1633, 0.2521, 0.6653, 0.2457, 0.5583, 0.5113, 0.3333, 0.2729, 0.8389, 0.4263, 0.7266, 0.9708, 0.4648, 0.2364, 0.0489, 0.9313, 0.8773, 0.3533, 0.343, 0.8062, 0.0837, 0.444, 0.2822, 0.3405, 0.0151, 0.4466, 0.1851, 0.4269, 0.6783, 0.8557, 0.8623, 0.3425, 0.5543, 0.3335, 0.9748, 0.316, 0.6579, 0.2072, 0.6849, 0.8387, 0.1651, 0.6895, 0.5159, 0.6816, 0.5399, 0.7278, 0.5008, 0.4078, 0.6488, 0.2306, 0.8971, 0.2837, 0.436, 0.044, 0.9715, 0.8801, 0.3521, 0.4608, 0.6195, 0.3285, 0.879, 0.2322]]], 1, Con42834), 
LSub2890 = subtract_layer(Fla79875,Con42834, Sub2890), 
LRes59452 = reshape_layer(Sub2890, [96, 1], Res59452), 
LRes33331 = reshape_layer(Res59452, [96, 1, 1], Res33331), 
LRes80065 = reshape_layer(Res33331, [96, 1, 1, 1], Res80065), 
LZer21711 = zero_padding3D_layer(Res80065, 0, 0, 2, 0, 0, 0, Zer21711), 
LMul44010 = multiply_layer([[[[[[0.5664]], [[0.4446]]]]], [[[[[0.0435]], [[0.9492]]]]]], Mul44010), 
LZer92172 = zero_padding3D_layer(Mul44010, 95, 0, 1, 0, 0, 0, Zer92172), 
LMul97614 = multiply_layer([Zer21711,Zer92172], Mul97614), 
exec_layers([LBat1934,LRes78274,LCon28832,LRes91407,LRes26752,LFla79875,LGlo56122,LCon42834,LSub2890,LRes59452,LRes33331,LRes80065,LZer21711,LMul44010,LZer92172,LMul97614],["Bat1934","Res78274","Con28832","Res91407","Res26752","Fla79875","Glo56122","Con42834","Sub2890","Res59452","Res33331","Res80065","Zer21711","Mul44010","Zer92172","Mul97614"],Mul97614,"Mul97614")

Actual (Unparsed

Expected (Unparsed): [[[[[0]],[[0]],[[-0.0]]],[[[0]],[[0]],[[-0.0]]],[[[0]],[[0]],[[0.0]]],[[[0]],[[0]],[[0.0]]],[[[0]],[[0]],[[-0.0]]],[[[0]],[[0]],[[0.0]]],[[[0]],[[0]],[[-0.0]]],[[[0]],[[0]],[[-0.0]]],[[[0]],[[0]],[[-0.0]]],[[[0]],[[0]],[[0.0]]],[[[0]],[[0]],[[0.0]]],[[[0]],[[0]],[[0.0]]],[[[0]],[[0]],[[0.0]]],[[[0]],[[0]],[[0.0]]],[[[0]],[[0]],[[-0.0]]],[[[0]],[[0]],[[0.0]]],[[[0]],[[0]],[[-0.0]]],[[[0]],[[0]],[[0.0]]],[[[0]],[[0]],[[0.0]]],[[[0]],[[0]],[[0.0]]],[[[0]],[[0]],[[0.0]]],[[[0]],[[0]],[[0.0]]],[[[0]],[[0]],[[0.0]]],[[[0]],[[0]],[[0.0]]],[[[0]],[[0]],[[-0.0]]],[[[0]],[[0]],[[0.0]]],[[[0]],[[0]],[[0.0]]],[[[0]],[[0]],[[0.0]]],[[[0]],[[0]],[[0.0]]],[[[0]],[[0]],[[-0.0]]],[[[0]],[[0]],[[0.0]]],[[[0]],[[0]],[[0.0]]],[[[0]],[[0]],[[-0.0]]],[[[0]],[[0]],[[0.0]]],[[[0]],[[0]],[[0.0]]],[[[0]],[[0]],[[0.0]]],[[[0]],[[0]],[[0.0]]],[[[0]],[[0]],[[0.0]]],[[[0]],[[0]],[[0.0]]],[[[0]],[[0]],[[0.0]]],[[[0]],[[0]],[[-0.0]]],[[[0]],[[0]],[[0.0]]],[[[0]],[[0]],[[-0.0]]],[[[0]],[[0]],[[0.0]]],[[[0]],[[0]],[[-0.0]]],[[[0]],[[0]],[[-0.0]]],[[[0]],[[0]],[[-0.0]]],[[[0]],[[0]],[[0.0]]],[[[0]],[[0]],[[0.0]]],[[[0]],[[0]],[[-0.0]]],[[[0]],[[0]],[[-0.0]]],[[[0]],[[0]],[[0.0]]],[[[0]],[[0]],[[0.0]]],[[[0]],[[0]],[[0.0]]],[[[0]],[[0]],[[0.0]]],[[[0]],[[0]],[[0.0]]],[[[0]],[[0]],[[0.0]]],[[[0]],[[0]],[[0.0]]],[[[0]],[[0]],[[0.0]]],[[[0]],[[0]],[[0.0]]],[[[0]],[[0]],[[0.0]]],[[[0]],[[0]],[[0.0]]],[[[0]],[[0]],[[0.0]]],[[[0]],[[0]],[[0.0]]],[[[0]],[[0]],[[-0.0]]],[[[0]],[[0]],[[0.0]]],[[[0]],[[0]],[[0.0]]],[[[0]],[[0]],[[0.0]]],[[[0]],[[0]],[[0.0]]],[[[0]],[[0]],[[0.0]]],[[[0]],[[0]],[[0.0]]],[[[0]],[[0]],[[0.0]]],[[[0]],[[0]],[[-0.0]]],[[[0]],[[0]],[[-0.0]]],[[[0]],[[0]],[[0.0]]],[[[0]],[[0]],[[0.0]]],[[[0]],[[0]],[[0.0]]],[[[0]],[[0]],[[0.0]]],[[[0]],[[0]],[[0.0]]],[[[0]],[[0]],[[0.0]]],[[[0]],[[0]],[[-0.0]]],[[[0]],[[0]],[[0.0]]],[[[0]],[[0]],[[0.0]]],[[[0]],[[0]],[[0.0]]],[[[0]],[[0]],[[0.0]]],[[[0]],[[0]],[[0.0]]],[[[0]],[[0]],[[0.0]]],[[[0]],[[0]],[[0.0]]],[[[0]],[[0]],[[-0.0]]],[[[0]],[[0]],[[-0.0]]],[[[0]],[[0]],[[0.0]]],[[[0]],[[0]],[[0.0]]],[[[0]],[[0]],[[0.0]]],[[[0]],[[0]],[[0.0]]],[[[0]],[[0]],[[0.0]]],[[[0]],[[0.0]],[[0.23614220491305582]]]]]

Actual

Expected