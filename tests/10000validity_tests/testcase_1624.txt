import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Ave11472 = tf.keras.layers.Input(shape=([2, 2]))
in1Ave11472 = tf.keras.layers.Input(shape=([2, 2]))
in0Con68745 = tf.keras.layers.Input(shape=([2, 2, 1]))
in0Max63728 = tf.keras.layers.Input(shape=([2, 1, 2]))
in1Max63728 = tf.keras.layers.Input(shape=([2, 1, 2]))
in0Sub83604 = tf.keras.layers.Input(shape=([3, 3]))
in1Sub83604 = tf.keras.layers.Input(shape=([3, 3]))
in0Max8418 = tf.keras.layers.Input(shape=([1, 1]))
in0Con43545 = tf.keras.layers.Input(shape=([3, 2]))

Ave11472 = keras.layers.Average(name = 'Ave11472', )([in0Ave11472,in1Ave11472])
Res63815 = keras.layers.Reshape((2, 2, 1), name = 'Res63815', )(Ave11472)
Con68745 = keras.layers.Concatenate(axis=3, name = 'Con68745', )([Res63815,in0Con68745])
Max63728 = keras.layers.Maximum(name = 'Max63728', )([in0Max63728,in1Max63728])
Zer62020 = keras.layers.ZeroPadding2D(padding=((0, 0), (1, 0)), name = 'Zer62020', )(Max63728)
Min42689 = keras.layers.Minimum(name = 'Min42689', )([Con68745,Zer62020])
Res17834 = keras.layers.Reshape((2, 4), name = 'Res17834', )(Min42689)
Sep38890 = keras.layers.SeparableConv1D(3, (2),strides=(1), padding='valid', name = 'Sep38890', )(Res17834)
Zer99124 = keras.layers.ZeroPadding1D(padding=((2, 0)), name = 'Zer99124', )(Sep38890)
Sub83604 = keras.layers.Subtract(name = 'Sub83604', )([in0Sub83604,in1Sub83604])
Max8418 = keras.layers.MaxPool1D(pool_size=(1), name = 'Max8418', )(in0Max8418)
Zer5644 = keras.layers.ZeroPadding1D(padding=((2, 0)), name = 'Zer5644', )(Max8418)
Con43545 = keras.layers.Concatenate(axis=2, name = 'Con43545', )([Zer5644,in0Con43545])
Min81325 = keras.layers.Minimum(name = 'Min81325', )([Sub83604,Con43545])
Min65812 = keras.layers.Minimum(name = 'Min65812', )([Zer99124,Min81325])
model = tf.keras.models.Model(inputs=[in0Ave11472,in1Ave11472,in0Con68745,in0Max63728,in1Max63728,in0Sub83604,in1Sub83604,in0Max8418,in0Con43545], outputs=Min65812)
w = model.get_layer('Sep38890').get_weights() 
w[0] = np.array([[[0.366], [0.7949], [0.7445], [0.2033]], [[0.7588], [0.2852], [0.4057], [0.0164]]])
w[1] = np.array([[[0.1519, 0.7499, 0.641], [0.9763, 0.9579, 0.6184], [0.2186, 0.8451, 0.7468], [0.8356, 0.7126, 0.9217]]])
w[2] = np.array([0, 0, 0])
model.get_layer('Sep38890').set_weights(w) 
in0Ave11472 = tf.constant([[[0.9455, 0.0626], [0.5682, 0.4617]]])
in1Ave11472 = tf.constant([[[0.2303, 0.8364], [0.1954, 0.4141]]])
in0Con68745 = tf.constant([[[[0.4667], [0.5806]], [[0.8637], [0.5679]]]])
in0Max63728 = tf.constant([[[[0.6239, 0.7123]], [[0.3882, 0.1285]]]])
in1Max63728 = tf.constant([[[[0.3926, 0.4369]], [[0.6088, 0.6149]]]])
in0Sub83604 = tf.constant([[[0.3233, 0.8831, 0.8994], [0.6857, 0.2569, 0.6217], [0.6615, 0.1159, 0.7612]]])
in1Sub83604 = tf.constant([[[0.0934, 0.9229, 0.8087], [0.1746, 0.6348, 0.6642], [0.4126, 0.789, 0.412]]])
in0Max8418 = tf.constant([[[1.6449]]])
in0Con43545 = tf.constant([[[0.8709, 0.7694], [0.1191, 0.0042], [0.5455, 0.8808]]])
print (np.array2string(model.predict([in0Ave11472,in1Ave11472,in0Con68745,in0Max63728,in1Max63728,in0Sub83604,in1Sub83604,in0Max8418,in0Con43545],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Min65812.png')

LAve11472 = average_layer([[[[0.9455, 0.0626], [0.5682, 0.4617]]], [[[0.2303, 0.8364], [0.1954, 0.4141]]]], Ave11472), 
LRes63815 = reshape_layer(Ave11472, [2, 2, 1], Res63815), 
LCon68745 = concatenate_layer([Res63815,[[[[0.4667], [0.5806]], [[0.8637], [0.5679]]]]], 3, Con68745), 
LMax63728 = maximum_layer([[[[[0.6239, 0.7123]], [[0.3882, 0.1285]]]], [[[[0.3926, 0.4369]], [[0.6088, 0.6149]]]]], Max63728), 
LZer62020 = zero_padding2D_layer(Max63728, 0, 0, 1, 0, Zer62020), 
LMin42689 = minimum_layer([Con68745,Zer62020], Min42689), 
LRes17834 = reshape_layer(Min42689, [2, 4], Res17834), 
LSep38890 = separable_conv1D_layer(Res17834, 2,[[[[0.366], [0.7949], [0.7445], [0.2033]], [[0.7588], [0.2852], [0.4057], [0.0164]]],[[[0.1519, 0.7499, 0.641], [0.9763, 0.9579, 0.6184], [0.2186, 0.8451, 0.7468], [0.8356, 0.7126, 0.9217]]]],[0, 0, 0], 1, false, Sep38890), 
LZer99124 = zero_padding1D_layer(Sep38890, 2, 0, Zer99124), 
LSub83604 = subtract_layer([[[0.3233, 0.8831, 0.8994], [0.6857, 0.2569, 0.6217], [0.6615, 0.1159, 0.7612]]], [[[0.0934, 0.9229, 0.8087], [0.1746, 0.6348, 0.6642], [0.4126, 0.789, 0.412]]], Sub83604), 
LMax8418 = max_pool1D_layer([[[1.6449]]], 1, Max8418), 
LZer5644 = zero_padding1D_layer(Max8418, 2, 0, Zer5644), 
LCon43545 = concatenate_layer([Zer5644,[[[0.8709, 0.7694], [0.1191, 0.0042], [0.5455, 0.8808]]]], 2, Con43545), 
LMin81325 = minimum_layer([Sub83604,Con43545], Min81325), 
LMin65812 = minimum_layer([Zer99124,Min81325], Min65812), 
exec_layers([LAve11472,LRes63815,LCon68745,LMax63728,LZer62020,LMin42689,LRes17834,LSep38890,LZer99124,LSub83604,LMax8418,LZer5644,LCon43545,LMin81325,LMin65812],["Ave11472","Res63815","Con68745","Max63728","Zer62020","Min42689","Res17834","Sep38890","Zer99124","Sub83604","Max8418","Zer5644","Con43545","Min81325","Min65812"],Min65812,"Min65812")

Actual (Unparsed): [[[0.0000000, -0.0398000, 0.0000000], [0.0000000, -0.3779000, -0.0425000], [0.2184040, -0.6731000, 0.3492000]]]

Expected (Unparsed): [[[0,-0.03980000000000006,0],[0,-0.3779,-0.04249999999999998],[0.21840397493200003,-0.6731,0.3492]]]

Actual:   [[[0, -0.0398, 0], [0, -0.3779, -0.0425], [0.2185, -0.6731, 0.3492]]]

Expected: [[[0, -0.0398, 0], [0, -0.3779, -0.0424], [0.2185, -0.6731, 0.3492]]]