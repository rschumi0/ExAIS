import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Up_20933 = tf.keras.layers.Input(shape=([4, 4]))
in0Dot18363 = tf.keras.layers.Input(shape=([2, 2]))
in1Dot18363 = tf.keras.layers.Input(shape=([2, 2]))
in0Con74551 = tf.keras.layers.Input(shape=([14]))

Up_20933 = keras.layers.UpSampling1D(size=(1), name = 'Up_20933', )(in0Up_20933)
ELU96877 = keras.layers.ELU(alpha=3.4500738842243432, name = 'ELU96877', )(Up_20933)
Ave85219 = keras.layers.AveragePooling1D(pool_size=(1), name = 'Ave85219', )(ELU96877)
Fla95581 = keras.layers.Flatten(name = 'Fla95581', )(Ave85219)
Dot18363 = keras.layers.Dot(axes=(1, 2), name = 'Dot18363', )([in0Dot18363,in1Dot18363])
Glo39060 = keras.layers.GlobalMaxPool1D(name = 'Glo39060', )(Dot18363)
Con74551 = keras.layers.Concatenate(axis=1, name = 'Con74551', )([Glo39060,in0Con74551])
Ave76549 = keras.layers.Average(name = 'Ave76549', )([Fla95581,Con74551])
model = tf.keras.models.Model(inputs=[in0Up_20933,in0Dot18363,in1Dot18363,in0Con74551], outputs=Ave76549)
in0Up_20933 = tf.constant([[[1.4044, 1.6667, 1.2422, 1.2985], [1.5146, 1.6842, 1.8785, 1.0684], [1.6588, 1.9844, 1.9055, 1.1414], [1.9043, 1.574, 1.568, 1.4549]]])
in0Dot18363 = tf.constant([[[0.0814, 0.3156], [0.5968, 0.9699]]])
in1Dot18363 = tf.constant([[[0.623, 0.2484], [0.7224, 0.144]]])
in0Con74551 = tf.constant([[0.4644, 0.882, 0.2597, 0.0145, 0.4649, 0.3338, 0.2472, 0.626, 0.3339, 0.6435, 0.5465, 0.3272, 0.5828, 0.4577]])
print (np.array2string(model.predict([in0Up_20933,in0Dot18363,in1Dot18363,in0Con74551],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Ave76549.png')

LUp_20933 = up_sampling1D_layer([[[1.4044, 1.6667, 1.2422, 1.2985], [1.5146, 1.6842, 1.8785, 1.0684], [1.6588, 1.9844, 1.9055, 1.1414], [1.9043, 1.574, 1.568, 1.4549]]], 1, Up_20933), 
LELU96877 = elu_layer(Up_20933, 3.4500738842243432, ELU96877), 
LAve85219 = average_pooling1D_layer(ELU96877, 1, Ave85219), 
LFla95581 = flatten_layer(Ave85219, Fla95581), 
LDot18363 = dot_layer([[[0.0814, 0.3156], [0.5968, 0.9699]]], [[[0.623, 0.2484], [0.7224, 0.144]]], 1, 2, Dot18363), 
LGlo39060 = global_max_pool1D_layer(Dot18363, Glo39060), 
LCon74551 = concatenate_layer([Glo39060,[[0.4644, 0.882, 0.2597, 0.0145, 0.4649, 0.3338, 0.2472, 0.626, 0.3339, 0.6435, 0.5465, 0.3272, 0.5828, 0.4577]]], 1, Con74551), 
LAve76549 = average_layer([Fla95581,Con74551], Ave76549), 
exec_layers([LUp_20933,LELU96877,LAve85219,LFla95581,LDot18363,LGlo39060,LCon74551,LAve76549],["Up_20933","ELU96877","Ave85219","Fla95581","Dot18363","Glo39060","Con74551","Ave76549"],Ave76549,"Ave76549")

Actual (Unparsed): [[0.9209710, 1.0171775, 0.8533000, 1.0902500, 0.8871500, 0.8493500, 1.1717000, 0.7011000, 0.9530000, 1.3052000, 1.1197000, 0.8924500, 1.2254000, 0.9506000, 1.0754000, 0.9563000]]

Expected (Unparsed): [[0.9209709800000001,1.0171775200000002,0.8533,1.09025,0.88715,0.8493499999999999,1.1717,0.7011000000000001,0.9530000000000001,1.3052,1.1197,0.89245,1.2254,0.9506,1.0754000000000001,0.9563]]

Actual:   [[0.921, 1.0172, 0.8533, 1.0903, 0.8872, 0.8494, 1.1717, 0.7011, 0.953, 1.3052, 1.1197, 0.8925, 1.2254, 0.9506, 1.0754, 0.9563]]

Expected: [[0.921, 1.0172, 0.8533, 1.0903, 0.8872, 0.8494, 1.1717, 0.7012, 0.9531, 1.3052, 1.1197, 0.8925, 1.2254, 0.9506, 1.0755, 0.9563]]