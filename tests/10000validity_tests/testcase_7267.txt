import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Mul35754 = tf.keras.layers.Input(shape=([2, 1, 1, 2]))
in1Mul35754 = tf.keras.layers.Input(shape=([2, 1, 1, 2]))
in0Min41843 = tf.keras.layers.Input(shape=([1, 2]))
in1Min41843 = tf.keras.layers.Input(shape=([1, 2]))
in0Con37188 = tf.keras.layers.Input(shape=([3]))
in0Con72468 = tf.keras.layers.Input(shape=([14]))
in0Ave79393 = tf.keras.layers.Input(shape=([2, 1]))
in0Con53386 = tf.keras.layers.Input(shape=([3, 2, 2]))
in0Mul84445 = tf.keras.layers.Input(shape=([1, 1]))
in1Mul84445 = tf.keras.layers.Input(shape=([1, 1]))
in0Con82827 = tf.keras.layers.Input(shape=([3, 2, 2]))
in0Sub81398 = tf.keras.layers.Input(shape=([3, 2, 3]))
in1Sub81398 = tf.keras.layers.Input(shape=([3, 2, 3]))
in0Dot48892 = tf.keras.layers.Input(shape=([2, 2]))
in1Dot48892 = tf.keras.layers.Input(shape=([2, 2]))
in0Con69403 = tf.keras.layers.Input(shape=([17]))

Mul35754 = keras.layers.Multiply(name = 'Mul35754', )([in0Mul35754,in1Mul35754])
Res42003 = keras.layers.Reshape((2, 1, 2), name = 'Res42003', )(Mul35754)
Res70825 = keras.layers.Reshape((2, 2), name = 'Res70825', )(Res42003)
Fla51932 = keras.layers.Flatten(name = 'Fla51932', )(Res70825)
Min41843 = keras.layers.Minimum(name = 'Min41843', )([in0Min41843,in1Min41843])
Sim81760 = keras.layers.SimpleRNN(1,name = 'Sim81760', )(Min41843)
ELU33353 = keras.layers.ELU(alpha=-2.7993359347151685, name = 'ELU33353', )(Sim81760)
Con37188 = keras.layers.Concatenate(axis=1, name = 'Con37188', )([ELU33353,in0Con37188])
Max35805 = keras.layers.Maximum(name = 'Max35805', )([Fla51932,Con37188])
Con72468 = keras.layers.Concatenate(axis=1, name = 'Con72468', )([Max35805,in0Con72468])
Ave79393 = keras.layers.AveragePooling1D(pool_size=(1), strides=(1), padding='valid', name = 'Ave79393', )(in0Ave79393)
Res88362 = keras.layers.Reshape((2, 1, 1), name = 'Res88362', )(Ave79393)
Zer33384 = keras.layers.ZeroPadding2D(padding=((1, 0), (1, 0)), name = 'Zer33384', )(Res88362)
Con53386 = keras.layers.Concatenate(axis=3, name = 'Con53386', )([Zer33384,in0Con53386])
Mul84445 = keras.layers.Multiply(name = 'Mul84445', )([in0Mul84445,in1Mul84445])
Res73914 = keras.layers.Reshape((1, 1, 1), name = 'Res73914', )(Mul84445)
Zer76970 = keras.layers.ZeroPadding2D(padding=((2, 0), (1, 0)), name = 'Zer76970', )(Res73914)
Con82827 = keras.layers.Concatenate(axis=3, name = 'Con82827', )([Zer76970,in0Con82827])
Sub81398 = keras.layers.Subtract(name = 'Sub81398', )([in0Sub81398,in1Sub81398])
Mul20087 = keras.layers.Multiply(name = 'Mul20087', )([Con82827,Sub81398])
Mul14217 = keras.layers.Multiply(name = 'Mul14217', )([Con53386,Mul20087])
Res65793 = keras.layers.Reshape((3, 6), name = 'Res65793', )(Mul14217)
Fla73032 = keras.layers.Flatten(name = 'Fla73032', )(Res65793)
Dot48892 = keras.layers.Dot(axes=(1, 2), name = 'Dot48892', )([in0Dot48892,in1Dot48892])
Res32020 = keras.layers.Reshape((2, 2, 1), name = 'Res32020', )(Dot48892)
Res53635 = keras.layers.Reshape((2, 2, 1, 1), name = 'Res53635', )(Res32020)
Glo76837 = keras.layers.GlobalAveragePooling3D(name = 'Glo76837', )(Res53635)
Con69403 = keras.layers.Concatenate(axis=1, name = 'Con69403', )([Glo76837,in0Con69403])
Max11504 = keras.layers.Maximum(name = 'Max11504', )([Fla73032,Con69403])
Max29473 = keras.layers.Maximum(name = 'Max29473', )([Con72468,Max11504])
model = tf.keras.models.Model(inputs=[in0Mul35754,in1Mul35754,in0Min41843,in1Min41843,in0Con37188,in0Con72468,in0Ave79393,in0Con53386,in0Mul84445,in1Mul84445,in0Con82827,in0Sub81398,in1Sub81398,in0Dot48892,in1Dot48892,in0Con69403], outputs=Max29473)
w = model.get_layer('Sim81760').get_weights() 
w[0] = np.array([[3], [5]])
w[1] = np.array([[3]])
w[2] = np.array([9])
model.get_layer('Sim81760').set_weights(w) 
in0Mul35754 = tf.constant([[[[[0.033, 0.3722]]], [[[0.5283, 0.0886]]]]])
in1Mul35754 = tf.constant([[[[[0.6702, 0.3791]]], [[[0.194, 0.2326]]]]])
in0Min41843 = tf.constant([[[0.8923, 0.3249]]])
in1Min41843 = tf.constant([[[0.856, 0.2924]]])
in0Con37188 = tf.constant([[0.197, 0.3146, 0.0517]])
in0Con72468 = tf.constant([[0.6833, 0.3159, 0.4965, 0.5824, 0.3467, 0.3524, 0.1389, 0.8013, 0.6096, 0.7782, 0.0481, 0.348, 0.7864, 0.6862]])
in0Ave79393 = tf.constant([[[1.9387], [1.331]]])
in0Con53386 = tf.constant([[[[0.1876, 0.9115], [0.5008, 0.383]], [[0.1042, 0.8694], [0.2369, 0.3851]], [[0.0845, 0.0162], [0.4042, 0.2881]]]])
in0Mul84445 = tf.constant([[[0.9489]]])
in1Mul84445 = tf.constant([[[0.5033]]])
in0Con82827 = tf.constant([[[[0.0743, 0.6897], [0.5716, 0.3325]], [[0.1037, 0.3016], [0.4121, 0.4376]], [[0.0362, 0.4249], [0.6873, 0.4688]]]])
in0Sub81398 = tf.constant([[[[0.0028, 0.4453, 0.8437], [0.2588, 0.6792, 0.4257]], [[0.4296, 0.2167, 0.0438], [0.6012, 0.3713, 0.3891]], [[0.697, 0.7178, 0.5056], [0.9875, 0.9749, 0.565]]]])
in1Sub81398 = tf.constant([[[[0.5556, 0.6322, 0.3242], [0.2225, 0.4476, 0.0343]], [[0.5249, 0.9668, 0.044], [0.4107, 0.0466, 0.2336]], [[0.0255, 0.7034, 0.3278], [0.5448, 0.993, 0.1378]]]])
in0Dot48892 = tf.constant([[[0.1778, 0.9789], [0.5981, 0.7804]]])
in1Dot48892 = tf.constant([[[0.8203, 0.5859], [0.6553, 0.5309]]])
in0Con69403 = tf.constant([[0.2142, 0.2886, 0.6588, 0.0342, 0.9503, 0.7122, 0.2175, 0.6865, 0.0377, 0.8457, 0.4078, 0.4401, 0.9866, 0.5334, 0.8693, 0.955, 0.9119]])
print (np.array2string(model.predict([in0Mul35754,in1Mul35754,in0Min41843,in1Min41843,in0Con37188,in0Con72468,in0Ave79393,in0Con53386,in0Mul84445,in1Mul84445,in0Con82827,in0Sub81398,in1Sub81398,in0Dot48892,in1Dot48892,in0Con69403],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Max29473.png')

LMul35754 = multiply_layer([[[[[[0.033, 0.3722]]], [[[0.5283, 0.0886]]]]], [[[[[0.6702, 0.3791]]], [[[0.194, 0.2326]]]]]], Mul35754), 
LRes42003 = reshape_layer(Mul35754, [2, 1, 2], Res42003), 
LRes70825 = reshape_layer(Res42003, [2, 2], Res70825), 
LFla51932 = flatten_layer(Res70825, Fla51932), 
LMin41843 = minimum_layer([[[[0.8923, 0.3249]]], [[[0.856, 0.2924]]]], Min41843), 
LSim81760 = simple_rnn_layer(Min41843,[[3], [5]],[[3]],[9], Sim81760), 
LELU33353 = elu_layer(Sim81760, -2.7993359347151685, ELU33353), 
LCon37188 = concatenate_layer([ELU33353,[[0.197, 0.3146, 0.0517]]], 1, Con37188), 
LMax35805 = maximum_layer([Fla51932,Con37188], Max35805), 
LCon72468 = concatenate_layer([Max35805,[[0.6833, 0.3159, 0.4965, 0.5824, 0.3467, 0.3524, 0.1389, 0.8013, 0.6096, 0.7782, 0.0481, 0.348, 0.7864, 0.6862]]], 1, Con72468), 
LAve79393 = average_pooling1D_layer([[[1.9387], [1.331]]], 1, 1, false, Ave79393), 
LRes88362 = reshape_layer(Ave79393, [2, 1, 1], Res88362), 
LZer33384 = zero_padding2D_layer(Res88362, 1, 0, 1, 0, Zer33384), 
LCon53386 = concatenate_layer([Zer33384,[[[[0.1876, 0.9115], [0.5008, 0.383]], [[0.1042, 0.8694], [0.2369, 0.3851]], [[0.0845, 0.0162], [0.4042, 0.2881]]]]], 3, Con53386), 
LMul84445 = multiply_layer([[[[0.9489]]], [[[0.5033]]]], Mul84445), 
LRes73914 = reshape_layer(Mul84445, [1, 1, 1], Res73914), 
LZer76970 = zero_padding2D_layer(Res73914, 2, 0, 1, 0, Zer76970), 
LCon82827 = concatenate_layer([Zer76970,[[[[0.0743, 0.6897], [0.5716, 0.3325]], [[0.1037, 0.3016], [0.4121, 0.4376]], [[0.0362, 0.4249], [0.6873, 0.4688]]]]], 3, Con82827), 
LSub81398 = subtract_layer([[[[0.0028, 0.4453, 0.8437], [0.2588, 0.6792, 0.4257]], [[0.4296, 0.2167, 0.0438], [0.6012, 0.3713, 0.3891]], [[0.697, 0.7178, 0.5056], [0.9875, 0.9749, 0.565]]]], [[[[0.5556, 0.6322, 0.3242], [0.2225, 0.4476, 0.0343]], [[0.5249, 0.9668, 0.044], [0.4107, 0.0466, 0.2336]], [[0.0255, 0.7034, 0.3278], [0.5448, 0.993, 0.1378]]]], Sub81398), 
LMul20087 = multiply_layer([Con82827,Sub81398], Mul20087), 
LMul14217 = multiply_layer([Con53386,Mul20087], Mul14217), 
LRes65793 = reshape_layer(Mul14217, [3, 6], Res65793), 
LFla73032 = flatten_layer(Res65793, Fla73032), 
LDot48892 = dot_layer([[[0.1778, 0.9789], [0.5981, 0.7804]]], [[[0.8203, 0.5859], [0.6553, 0.5309]]], 1, 2, Dot48892), 
LRes32020 = reshape_layer(Dot48892, [2, 2, 1], Res32020), 
LRes53635 = reshape_layer(Res32020, [2, 2, 1, 1], Res53635), 
LGlo76837 = global_average_pooling3D_layer(Res53635, Glo76837), 
LCon69403 = concatenate_layer([Glo76837,[[0.2142, 0.2886, 0.6588, 0.0342, 0.9503, 0.7122, 0.2175, 0.6865, 0.0377, 0.8457, 0.4078, 0.4401, 0.9866, 0.5334, 0.8693, 0.955, 0.9119]]], 1, Con69403), 
LMax11504 = maximum_layer([Fla73032,Con69403], Max11504), 
LMax29473 = maximum_layer([Con72468,Max11504], Max29473), 
exec_layers([LMul35754,LRes42003,LRes70825,LFla51932,LMin41843,LSim81760,LELU33353,LCon37188,LMax35805,LCon72468,LAve79393,LRes88362,LZer33384,LCon53386,LMul84445,LRes73914,LZer76970,LCon82827,LSub81398,LMul20087,LMul14217,LRes65793,LFla73032,LDot48892,LRes32020,LRes53635,LGlo76837,LCon69403,LMax11504,LMax29473],["Mul35754","Res42003","Res70825","Fla51932","Min41843","Sim81760","ELU33353","Con37188","Max35805","Con72468","Ave79393","Res88362","Zer33384","Con53386","Mul84445","Res73914","Zer76970","Con82827","Sub81398","Mul20087","Mul14217","Res65793","Fla73032","Dot48892","Res32020","Res53635","Glo76837","Con69403","Max11504","Max29473"],Max29473,"Max29473")

Actual (Unparsed): [[1.0000000, 0.2142000, 0.3265897, 0.6588000, 0.6833000, 0.9503000, 0.7122000, 0.5824000, 0.6865000, 0.3524000, 0.8457000, 0.8013000, 0.6096000, 0.9866000, 0.5334000, 0.8693000, 0.9550000, 0.9119000]]

Expected (Unparsed): [[0.9999999999903769,0.2142,0.32658967522500004,0.6588,0.6833,0.9503,0.7122,0.5824,0.6865,0.3524,0.8457,0.8013,0.6096,0.9866,0.5334,0.8693,0.955,0.9119]]

Actual:   [[1, 0.2142, 0.3266, 0.6588, 0.6833, 0.9503, 0.7122, 0.5824, 0.6865, 0.3524, 0.8457, 0.8013, 0.6096, 0.9866, 0.5334, 0.8693, 0.955, 0.9119]]

Expected: [[1, 0.2142, 0.3266, 0.6588, 0.6833, 0.9503, 0.7122, 0.5824, 0.6865, 0.3524, 0.8457, 0.8013, 0.6096, 0.9866, 0.5334, 0.8693, 0.955, 0.9119]]