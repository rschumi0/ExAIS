import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Min23640 = tf.keras.layers.Input(shape=([1, 2]))
in1Min23640 = tf.keras.layers.Input(shape=([1, 2]))

Min23640 = keras.layers.Minimum(name = 'Min23640', )([in0Min23640,in1Min23640])
Res57817 = keras.layers.Reshape((1, 2, 1), name = 'Res57817', )(Min23640)
Loc71475 = keras.layers.LocallyConnected2D(4, (1, 2),strides=(1, 1), name = 'Loc71475', )(Res57817)
Res16105 = keras.layers.Reshape((1, 4), name = 'Res16105', )(Loc71475)
Per86037 = keras.layers.Permute((2,1), name = 'Per86037',)(Res16105)
model = tf.keras.models.Model(inputs=[in0Min23640,in1Min23640], outputs=Per86037)
w = model.get_layer('Loc71475').get_weights() 
w[0] = np.array([[[0.2275, 0.1914, 0.9646, 0.6189], [0.6722, 0.345, 0.7746, 0.2031]]])
w[1] = np.array([[[0, 0, 0, 0]]])
model.get_layer('Loc71475').set_weights(w) 
in0Min23640 = tf.constant([[[0.4599, 0.8442]]])
in1Min23640 = tf.constant([[[0.542, 0.3497]]])
print (np.array2string(model.predict([in0Min23640,in1Min23640],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Per86037.png')

LMin23640 = minimum_layer([[[[0.4599, 0.8442]]], [[[0.542, 0.3497]]]], Min23640), 
LRes57817 = reshape_layer(Min23640, [1, 2, 1], Res57817), 
LLoc71475 = locally_connected2D_layer(Res57817, 1, 2,[[[0.2275, 0.1914, 0.9646, 0.6189], [0.6722, 0.345, 0.7746, 0.2031]]],[[[0, 0, 0, 0]]], 1, 1, Loc71475), 
LRes16105 = reshape_layer(Loc71475, [1, 4], Res16105), 
LPer86037 = permute_layer(Res16105, 2,1, Per86037), 
exec_layers([LMin23640,LRes57817,LLoc71475,LRes16105,LPer86037],["Min23640","Res57817","Loc71475","Res16105","Per86037"],Per86037,"Per86037")

Actual (Unparsed): [[[0.3396956], [0.2086714], [0.7144972], [0.3556562]]]

Expected (Unparsed): [[[0.33969559],[0.20867135999999997],[0.71449716],[0.35565618]]]

Actual:   [[[0.3397], [0.2087], [0.7145], [0.3557]]]

Expected: [[[0.3397], [0.2087], [0.7145], [0.3557]]]