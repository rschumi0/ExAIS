import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Ave85605 = tf.keras.layers.Input(shape=([2, 2, 2]))
in1Ave85605 = tf.keras.layers.Input(shape=([2, 2, 2]))
in0Glo43260 = tf.keras.layers.Input(shape=([1, 1, 2]))
in0Cro72061 = tf.keras.layers.Input(shape=([3, 4]))
in0Con26734 = tf.keras.layers.Input(shape=([2, 2, 1]))

Ave85605 = keras.layers.Average(name = 'Ave85605', )([in0Ave85605,in1Ave85605])
Glo43260 = keras.layers.GlobalMaxPool2D(name = 'Glo43260', )(in0Glo43260)
Res5054 = keras.layers.Reshape((2, 1), name = 'Res5054', )(Glo43260)
Res3044 = keras.layers.Reshape((2, 1, 1), name = 'Res3044', )(Res5054)
Res70578 = keras.layers.Reshape((2, 1, 1, 1), name = 'Res70578', )(Res3044)
Cro57821 = keras.layers.Cropping3D(cropping=((1, 0), (0, 0), (0, 0)), name = 'Cro57821', )(Res70578)
ReL1065 = keras.layers.ReLU(max_value=9.039339554016681, negative_slope=6.209689665512521, threshold=7.573462096269946, name = 'ReL1065', )(Cro57821)
Res96180 = keras.layers.Reshape((1, 1, 1), name = 'Res96180', )(ReL1065)
Cro72061 = keras.layers.Cropping1D(cropping=((2, 0)), name = 'Cro72061', )(in0Cro72061)
Res10064 = keras.layers.Reshape((1, 4, 1), name = 'Res10064', )(Cro72061)
Res21273 = keras.layers.Reshape((1, 4, 1, 1), name = 'Res21273', )(Res10064)
Glo44314 = keras.layers.GlobalMaxPool3D(name = 'Glo44314', )(Res21273)
Res54898 = keras.layers.Reshape((1, 1, 1), name = 'Res54898', )(Glo44314)
Mul84306 = keras.layers.Multiply(name = 'Mul84306', )([Res96180,Res54898])
Zer11984 = keras.layers.ZeroPadding2D(padding=((1, 0), (1, 0)), name = 'Zer11984', )(Mul84306)
Con26734 = keras.layers.Concatenate(axis=3, name = 'Con26734', )([Zer11984,in0Con26734])
Max92726 = keras.layers.Maximum(name = 'Max92726', )([Ave85605,Con26734])
model = tf.keras.models.Model(inputs=[in0Ave85605,in1Ave85605,in0Glo43260,in0Cro72061,in0Con26734], outputs=Max92726)
in0Ave85605 = tf.constant([[[[0.3075, 0.7113], [0.1771, 0.2231]], [[0.9669, 0.0321], [0.9809, 0.8482]]]])
in1Ave85605 = tf.constant([[[[0.5581, 0.5201], [0.2666, 0.0277]], [[0.9479, 0.4881], [0.3845, 0.1595]]]])
in0Glo43260 = tf.constant([[[[1.2617, 1.6529]]]])
in0Cro72061 = tf.constant([[[1.0247, 1.4238, 1.8769, 1.9052], [1.9824, 1.5379, 1.3918, 1.2778], [1.0444, 1.6255, 1.6605, 1.6771]]])
in0Con26734 = tf.constant([[[[0.3603], [0.4699]], [[0.4999], [0.0855]]]])
print (np.array2string(model.predict([in0Ave85605,in1Ave85605,in0Glo43260,in0Cro72061,in0Con26734],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Max92726.png')

LAve85605 = average_layer([[[[[0.3075, 0.7113], [0.1771, 0.2231]], [[0.9669, 0.0321], [0.9809, 0.8482]]]], [[[[0.5581, 0.5201], [0.2666, 0.0277]], [[0.9479, 0.4881], [0.3845, 0.1595]]]]], Ave85605), 
LGlo43260 = global_max_pool2D_layer([[[[1.2617, 1.6529]]]], Glo43260), 
LRes5054 = reshape_layer(Glo43260, [2, 1], Res5054), 
LRes3044 = reshape_layer(Res5054, [2, 1, 1], Res3044), 
LRes70578 = reshape_layer(Res3044, [2, 1, 1, 1], Res70578), 
LCro57821 = cropping3D_layer(Res70578, 1, 0, 0, 0, 0, 0, Cro57821), 
LReL1065 = relu_layer(Cro57821, 9.039339554016681, 6.209689665512521, 7.573462096269946, ReL1065), 
LRes96180 = reshape_layer(ReL1065, [1, 1, 1], Res96180), 
LCro72061 = cropping1D_layer([[[1.0247, 1.4238, 1.8769, 1.9052], [1.9824, 1.5379, 1.3918, 1.2778], [1.0444, 1.6255, 1.6605, 1.6771]]], 2, 0, Cro72061), 
LRes10064 = reshape_layer(Cro72061, [1, 4, 1], Res10064), 
LRes21273 = reshape_layer(Res10064, [1, 4, 1, 1], Res21273), 
LGlo44314 = global_max_pool3D_layer(Res21273, Glo44314), 
LRes54898 = reshape_layer(Glo44314, [1, 1, 1], Res54898), 
LMul84306 = multiply_layer([Res96180,Res54898], Mul84306), 
LZer11984 = zero_padding2D_layer(Mul84306, 1, 0, 1, 0, Zer11984), 
LCon26734 = concatenate_layer([Zer11984,[[[[0.3603], [0.4699]], [[0.4999], [0.0855]]]]], 3, Con26734), 
LMax92726 = maximum_layer([Ave85605,Con26734], Max92726), 
exec_layers([LAve85605,LGlo43260,LRes5054,LRes3044,LRes70578,LCro57821,LReL1065,LRes96180,LCro72061,LRes10064,LRes21273,LGlo44314,LRes54898,LMul84306,LZer11984,LCon26734,LMax92726],["Ave85605","Glo43260","Res5054","Res3044","Res70578","Cro57821","ReL1065","Res96180","Cro72061","Res10064","Res21273","Glo44314","Res54898","Mul84306","Zer11984","Con26734","Max92726"],Max92726,"Max92726")

Actual (Unparsed): [[[[0.4328000, 0.6157000], [0.2218500, 0.4699000]], [[0.9574000, 0.4999000], [0.6827000, 0.5038500]]]]

Expected (Unparsed): [[[[0.4328,0.6157],[0.22185,0.4699]],[[0.9574,0.4999],[0.6827,0.50385]]]]

Actual:   [[[[0.4328, 0.6157], [0.2219, 0.4699]], [[0.9574, 0.4999], [0.6827, 0.5039]]]]

Expected: [[[[0.4328, 0.6157], [0.2219, 0.4699]], [[0.9574, 0.4999], [0.6827, 0.5039]]]]