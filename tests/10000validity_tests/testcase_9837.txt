import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Bat74679 = tf.keras.layers.Input(shape=([4, 2, 2]))
in0Ave76884 = tf.keras.layers.Input(shape=([2, 2]))
in1Ave76884 = tf.keras.layers.Input(shape=([2, 2]))
in0Max11994 = tf.keras.layers.Input(shape=([2, 2]))
in1Max11994 = tf.keras.layers.Input(shape=([2, 2]))
in0Con52735 = tf.keras.layers.Input(shape=([12, 10]))

Bat74679 = keras.layers.BatchNormalization(axis=1, epsilon=0.8658482668619344,  name = 'Bat74679', )(in0Bat74679)
Con78925 = keras.layers.Conv2DTranspose(3, (2, 1),strides=(3, 2), padding='valid', name = 'Con78925', )(Bat74679)
Res79054 = keras.layers.Reshape((12, 12), name = 'Res79054', )(Con78925)
Ave76884 = keras.layers.Average(name = 'Ave76884', )([in0Ave76884,in1Ave76884])
Max11994 = keras.layers.Maximum(name = 'Max11994', )([in0Max11994,in1Max11994])
Loc63720 = keras.layers.LocallyConnected1D(4, (1),strides=(1), name = 'Loc63720', )(Max11994)
Con97550 = keras.layers.Conv1D(2, (1),strides=(1), padding='valid', dilation_rate=(1), name = 'Con97550', )(Loc63720)
ReL87300 = keras.layers.ReLU(max_value=8.29177601546935, negative_slope=1.2103464655091771, threshold=0.4585827022827671, name = 'ReL87300', )(Con97550)
Mul81379 = keras.layers.Multiply(name = 'Mul81379', )([Ave76884,ReL87300])
Zer9975 = keras.layers.ZeroPadding1D(padding=((10, 0)), name = 'Zer9975', )(Mul81379)
Con52735 = keras.layers.Concatenate(axis=2, name = 'Con52735', )([Zer9975,in0Con52735])
Ave22393 = keras.layers.Average(name = 'Ave22393', )([Res79054,Con52735])
model = tf.keras.models.Model(inputs=[in0Bat74679,in0Ave76884,in1Ave76884,in0Max11994,in1Max11994,in0Con52735], outputs=Ave22393)
w = model.get_layer('Bat74679').get_weights() 
w[0] = np.array([0.0479, 0.2939, 0.8813, 0.9155])
w[1] = np.array([0.1155, 0.6598, 0.1091, 0.2426])
w[2] = np.array([0.6028, 0.2468, 0.5541, 0.1045])
w[3] = np.array([0.4422, 0.668, 0.2718, 0.2161])
model.get_layer('Bat74679').set_weights(w) 
w = model.get_layer('Con78925').get_weights() 
w[0] = np.array([[[[0.0847, 0.1861], [0.3318, 0.3938], [0.939, 0.3091]]], [[[0.0674, 0.8579], [0.8722, 0.3848], [0.6366, 0.7546]]]])
w[1] = np.array([0, 0, 0])
model.get_layer('Con78925').set_weights(w) 
w = model.get_layer('Loc63720').get_weights() 
w[0] = np.array([[[0.2272, 0.7936, 0.294, 0.4822], [0.0599, 0.9448, 0.5207, 0.2524]], [[0.0819, 0.9439, 0.9502, 0.2556], [0.5703, 0.5503, 0.9367, 0.5513]]])
w[1] = np.array([[0, 0, 0, 0], [0, 0, 0, 0]])
model.get_layer('Loc63720').set_weights(w) 
w = model.get_layer('Con97550').get_weights() 
w[0] = np.array([[[0.4194, 0.4261], [0.8831, 0.3612], [0.2982, 0.3614], [0.7474, 0.3012]]])
w[1] = np.array([0, 0])
model.get_layer('Con97550').set_weights(w) 
in0Bat74679 = tf.constant([[[[1.9657, 1.2112], [1.8302, 1.3159]], [[1.7045, 1.519], [1.548, 1.365]], [[1.7459, 1.6592], [1.6934, 1.2137]], [[1.8212, 1.1424], [1.8978, 1.7037]]]])
in0Ave76884 = tf.constant([[[0.7466, 0.4962], [0.9325, 0.8035]]])
in1Ave76884 = tf.constant([[[0.3252, 0.2421], [0.5133, 0.7743]]])
in0Max11994 = tf.constant([[[0.8036, 0.198], [0.4386, 0.5095]]])
in1Max11994 = tf.constant([[[0.8212, 0.0459], [0.0613, 0.0568]]])
in0Con52735 = tf.constant([[[0.4811, 0.7652, 0.4377, 0.9306, 0.9049, 0.553, 0.0598, 0.1308, 0.8082, 0.6823], [0.7234, 0.1119, 0.1207, 0.3357, 0.5531, 0.5288, 0.0412, 0.2968, 0.3064, 0.1354], [0.7414, 0.7555, 0.6319, 0.5766, 0.4761, 0.3852, 0.0923, 0.0667, 0.4512, 0.823], [0.9414, 0.0334, 0.6167, 0.1838, 0.1576, 0.1404, 0.0135, 0.655, 0.9064, 0.8421], [0.4258, 0.5309, 0.4276, 0.7653, 0.8698, 0.2746, 0.3256, 0.771, 0.8847, 0.321], [0.3789, 0.5015, 0.6798, 0.3729, 0.279, 0.5844, 0.9422, 0.8843, 0.1578, 0.4377], [0.5112, 0.272, 0.3706, 0.7933, 0.1842, 0.1547, 0.7633, 0.6414, 0.6364, 0.5761], [0.5731, 0.288, 0.8082, 0.739, 0.1845, 0.6106, 0.1414, 0.2498, 0.1963, 0.4023], [0.7319, 0.2514, 0.6417, 0.9007, 0.8055, 0.1122, 0.7477, 0.2104, 0.9209, 0.5262], [0.3214, 0.3542, 0.959, 0.9839, 0.7046, 0.1072, 0.2645, 0.5719, 0.2536, 0.6075], [0.2739, 0.9766, 0.4684, 0.9731, 0.5842, 0.3802, 0.222, 0.8007, 0.6972, 0.6625], [0.0193, 0.4741, 0.6056, 0.9532, 0.8561, 0.6678, 0.9823, 0.1121, 0.0415, 0.2968]]])
print (np.array2string(model.predict([in0Bat74679,in0Ave76884,in1Ave76884,in0Max11994,in1Max11994,in0Con52735],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Ave22393.png')

LBat74679 = batch_normalization_layer([[[[1.9657, 1.2112], [1.8302, 1.3159]], [[1.7045, 1.519], [1.548, 1.365]], [[1.7459, 1.6592], [1.6934, 1.2137]], [[1.8212, 1.1424], [1.8978, 1.7037]]]], 1, 0.8658482668619344, [0.0479, 0.2939, 0.8813, 0.9155], [0.1155, 0.6598, 0.1091, 0.2426], [0.6028, 0.2468, 0.5541, 0.1045], [0.4422, 0.668, 0.2718, 0.2161], Bat74679), 
LCon78925 = conv2D_transpose_layer(Bat74679, 2, 1,[[[[0.0847, 0.1861], [0.3318, 0.3938], [0.939, 0.3091]]], [[[0.0674, 0.8579], [0.8722, 0.3848], [0.6366, 0.7546]]]],[0, 0, 0], 3, 2, false, Con78925), 
LRes79054 = reshape_layer(Con78925, [12, 12], Res79054), 
LAve76884 = average_layer([[[[0.7466, 0.4962], [0.9325, 0.8035]]], [[[0.3252, 0.2421], [0.5133, 0.7743]]]], Ave76884), 
LMax11994 = maximum_layer([[[[0.8036, 0.198], [0.4386, 0.5095]]], [[[0.8212, 0.0459], [0.0613, 0.0568]]]], Max11994), 
LLoc63720 = locally_connected1D_layer(Max11994, 1,[[[0.2272, 0.7936, 0.294, 0.4822], [0.0599, 0.9448, 0.5207, 0.2524]], [[0.0819, 0.9439, 0.9502, 0.2556], [0.5703, 0.5503, 0.9367, 0.5513]]],[[0, 0, 0, 0], [0, 0, 0, 0]], 1, Loc63720), 
LCon97550 = conv1D_layer(Loc63720, 1,[[[0.4194, 0.4261], [0.8831, 0.3612], [0.2982, 0.3614], [0.7474, 0.3012]]],[0, 0], 1, false, 1, Con97550), 
LReL87300 = relu_layer(Con97550, 8.29177601546935, 1.2103464655091771, 0.4585827022827671, ReL87300), 
LMul81379 = multiply_layer([Ave76884,ReL87300], Mul81379), 
LZer9975 = zero_padding1D_layer(Mul81379, 10, 0, Zer9975), 
LCon52735 = concatenate_layer([Zer9975,[[[0.4811, 0.7652, 0.4377, 0.9306, 0.9049, 0.553, 0.0598, 0.1308, 0.8082, 0.6823], [0.7234, 0.1119, 0.1207, 0.3357, 0.5531, 0.5288, 0.0412, 0.2968, 0.3064, 0.1354], [0.7414, 0.7555, 0.6319, 0.5766, 0.4761, 0.3852, 0.0923, 0.0667, 0.4512, 0.823], [0.9414, 0.0334, 0.6167, 0.1838, 0.1576, 0.1404, 0.0135, 0.655, 0.9064, 0.8421], [0.4258, 0.5309, 0.4276, 0.7653, 0.8698, 0.2746, 0.3256, 0.771, 0.8847, 0.321], [0.3789, 0.5015, 0.6798, 0.3729, 0.279, 0.5844, 0.9422, 0.8843, 0.1578, 0.4377], [0.5112, 0.272, 0.3706, 0.7933, 0.1842, 0.1547, 0.7633, 0.6414, 0.6364, 0.5761], [0.5731, 0.288, 0.8082, 0.739, 0.1845, 0.6106, 0.1414, 0.2498, 0.1963, 0.4023], [0.7319, 0.2514, 0.6417, 0.9007, 0.8055, 0.1122, 0.7477, 0.2104, 0.9209, 0.5262], [0.3214, 0.3542, 0.959, 0.9839, 0.7046, 0.1072, 0.2645, 0.5719, 0.2536, 0.6075], [0.2739, 0.9766, 0.4684, 0.9731, 0.5842, 0.3802, 0.222, 0.8007, 0.6972, 0.6625], [0.0193, 0.4741, 0.6056, 0.9532, 0.8561, 0.6678, 0.9823, 0.1121, 0.0415, 0.2968]]]], 2, Con52735), 
LAve22393 = average_layer([Res79054,Con52735], Ave22393), 
exec_layers([LBat74679,LCon78925,LRes79054,LAve76884,LMax11994,LLoc63720,LCon97550,LReL87300,LMul81379,LZer9975,LCon52735,LAve22393],["Bat74679","Con78925","Res79054","Ave76884","Max11994","Loc63720","Con97550","ReL87300","Mul81379","Zer9975","Con52735","Ave22393"],Ave22393,"Ave22393")

Actual (Unparsed): [[[0.0204270, 0.0563902, 0.3433651, 0.3826000, 0.2188500, 0.4653000, 0.4730447, 0.3328121, 0.1307284, 0.0654000, 0.4041000, 0.3411500], [0.0662897, 0.1023871, 0.4698244, 0.0559500, 0.0603500, 0.1678500, 0.3445294, 0.3651559, 0.1285725, 0.1484000, 0.1532000, 0.0677000], [0.0000000, 0.0000000, 0.3707000, 0.3777500, 0.3159500, 0.2883000, 0.2380500, 0.1926000, 0.0461500, 0.0333500, 0.2256000, 0.4115000], [0.1320785, 0.3562079, 1.0915167, 0.0167000, 0.3083500, 0.0919000, 0.2059052, 0.4130509, 0.6044822, 0.3275000, 0.4532000, 0.4210500], [0.4464142, 0.6236260, 0.8958705, 0.2654500, 0.2138000, 0.3826500, 0.8643866, 0.7376986, 0.8201609, 0.3855000, 0.4423500, 0.1605000], [0.0000000, 0.0000000, 0.1894500, 0.2507500, 0.3399000, 0.1864500, 0.1395000, 0.2922000, 0.4711000, 0.4421500, 0.0789000, 0.2188500], [0.1414406, 0.3827411, 0.9271415, 0.1360000, 0.1853000, 0.3966500, 0.1974516, 0.3804153, 0.9759351, 0.3207000, 0.3182000, 0.2880500], [0.4753379, 0.6736977, 1.0203988, 0.1440000, 0.4041000, 0.3695000, 0.4082290, 0.8892574, 0.6518567, 0.1249000, 0.0981500, 0.2011500], [0.0000000, 0.0000000, 0.3659500, 0.1257000, 0.3208500, 0.4503500, 0.4027500, 0.0561000, 0.3738500, 0.1052000, 0.4604500, 0.2631000], [0.1818383, 0.5185506, 1.1626667, 0.1771000, 0.4795000, 0.4919500, 0.5829626, 0.6806092, 1.2422218, 0.2859500, 0.1268000, 0.3037500], [0.8926211, 1.1064578, 1.1313025, 0.4883000, 0.2342000, 0.4865500, 1.0612902, 1.3017089, 1.3132082, 0.4003500, 0.3486000, 0.3312500], [0.4736607, 0.3279410, 0.0096500, 0.2370500, 0.3028000, 0.4766000, 0.4280500, 0.3339000, 0.4911500, 0.0560500, 0.0207500, 0.1484000]]]

Expected (Unparsed): [[[0.02042704555883301,0.056390218629168765,0.34336511617922016,0.3826,0.21885,0.4653,0.4730447358564031,0.3328121504237205,0.13072842459091166,0.0654,0.4041,0.34115],[0.06628967068597309,0.10238705091157678,0.469824417789937,0.05595,0.06035,0.16785,0.34452937331758327,0.3651558755615209,0.12857254074132943,0.1484,0.1532,0.0677],[0,0,0.3707,0.37775,0.31595,0.2883,0.23805,0.1926,0.04615,0.03335,0.2256,0.4115],[0.13207849923677809,0.35620788357496624,1.091516670823218,0.0167,0.30835,0.0919,0.20590516848638502,0.41305090016212254,0.604482165967322,0.3275,0.4532,0.42105],[0.4464142003775482,0.6236259622209619,0.8958704802009477,0.26545,0.2138,0.38265,0.8643866187030955,0.7376986467237272,0.8201608753262895,0.3855,0.44235,0.1605],[0,0,0.18945,0.25075,0.3399,0.18645,0.1395,0.2922,0.4711,0.44215,0.0789,0.21885],[0.14144057169417631,0.3827410680885476,0.927141533681642,0.136,0.1853,0.39665,0.19745163739439536,0.380415333318461,0.975935043137877,0.3207,0.3182,0.28805],[0.47533792469191266,0.6736976678509728,1.0203988440794696,0.144,0.4041,0.3695,0.40822895678980947,0.8892573962127056,0.6518566635723281,0.1249,0.09815,0.20115],[0,0,0.36595,0.1257,0.32085,0.45035,0.40275,0.0561,0.37385,0.1052,0.46045,0.2631],[0.18183826471330466,0.5185505509827362,1.1626666944628445,0.1771,0.4795,0.49195,0.5829626246319191,0.6806091982764609,1.242221806525328,0.28595,0.1268,0.30375],[0.8926210524488984,1.1064578108569638,1.1313024829080287,0.4883,0.2342,0.48655,1.0612901667691088,1.301708949505837,1.3132081823897521,0.40035,0.3486,0.33125],[0.4736606607246443,0.3279409565463636,0.00965,0.23705,0.3028,0.4766,0.42805,0.3339,0.49115,0.05605,0.02075,0.1484]]]

Actual:   [[[0.0205, 0.0564, 0.3434, 0.3826, 0.2189, 0.4653, 0.4731, 0.3329, 0.1308, 0.0654, 0.4041, 0.3412], [0.0663, 0.1024, 0.4699, 0.056, 0.0604, 0.1679, 0.3446, 0.3652, 0.1286, 0.1484, 0.1532, 0.0677], [0, 0, 0.3707, 0.3778, 0.316, 0.2883, 0.2381, 0.1926, 0.0462, 0.0334, 0.2256, 0.4115], [0.1321, 0.3563, 1.0916, 0.0167, 0.3084, 0.0919, 0.206, 0.4131, 0.6045, 0.3275, 0.4532, 0.4211], [0.4465, 0.6237, 0.8959, 0.2655, 0.2138, 0.3827, 0.8644, 0.7377, 0.8202, 0.3855, 0.4424, 0.1605], [0, 0, 0.1895, 0.2508, 0.3399, 0.1865, 0.1395, 0.2922, 0.4711, 0.4422, 0.0789, 0.2189], [0.1415, 0.3828, 0.9272, 0.136, 0.1853, 0.3967, 0.1975, 0.3805, 0.976, 0.3207, 0.3182, 0.2881], [0.4754, 0.6737, 1.0204, 0.144, 0.4041, 0.3695, 0.4083, 0.8893, 0.6519, 0.1249, 0.0982, 0.2012], [0, 0, 0.366, 0.1257, 0.3209, 0.4504, 0.4028, 0.0561, 0.3739, 0.1052, 0.4605, 0.2631], [0.1819, 0.5186, 1.1627, 0.1771, 0.4795, 0.492, 0.583, 0.6807, 1.2423, 0.286, 0.1268, 0.3038], [0.8927, 1.1065, 1.1314, 0.4883, 0.2342, 0.4866, 1.0613, 1.3018, 1.3133, 0.4004, 0.3486, 0.3313], [0.4737, 0.328, 0.0097, 0.2371, 0.3028, 0.4766, 0.4281, 0.3339, 0.4912, 0.0561, 0.0208, 0.1484]]]

Expected: [[[0.0205, 0.0564, 0.3434, 0.3826, 0.2189, 0.4653, 0.4731, 0.3329, 0.1308, 0.0654, 0.4041, 0.3412], [0.0663, 0.1024, 0.4699, 0.056, 0.0604, 0.1679, 0.3446, 0.3652, 0.1286, 0.1484, 0.1532, 0.0677], [0, 0, 0.3707, 0.3778, 0.316, 0.2883, 0.2381, 0.1926, 0.0462, 0.0334, 0.2256, 0.4115], [0.1321, 0.3563, 1.0916, 0.0167, 0.3084, 0.0919, 0.206, 0.4131, 0.6045, 0.3275, 0.4532, 0.4211], [0.4465, 0.6237, 0.8959, 0.2655, 0.2138, 0.3827, 0.8644, 0.7377, 0.8202, 0.3855, 0.4424, 0.1605], [0, 0, 0.1895, 0.2508, 0.3399, 0.1865, 0.1395, 0.2922, 0.4711, 0.4422, 0.0789, 0.2189], [0.1415, 0.3828, 0.9272, 0.136, 0.1853, 0.3967, 0.1975, 0.3805, 0.976, 0.3207, 0.3182, 0.2881], [0.4754, 0.6737, 1.0204, 0.144, 0.4041, 0.3695, 0.4083, 0.8893, 0.6519, 0.1249, 0.0982, 0.2012], [0, 0, 0.366, 0.1257, 0.3209, 0.4504, 0.4028, 0.0561, 0.3739, 0.1052, 0.4605, 0.2631], [0.1819, 0.5186, 1.1627, 0.1771, 0.4795, 0.492, 0.583, 0.6807, 1.2423, 0.286, 0.1268, 0.3038], [0.8927, 1.1065, 1.1314, 0.4883, 0.2342, 0.4866, 1.0613, 1.3018, 1.3133, 0.4004, 0.3486, 0.3313], [0.4737, 0.328, 0.0097, 0.2371, 0.3028, 0.4766, 0.4281, 0.3339, 0.4912, 0.0561, 0.0208, 0.1484]]]