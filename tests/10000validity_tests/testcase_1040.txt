import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Ave55806 = tf.keras.layers.Input(shape=([1, 2]))
in0Con75542 = tf.keras.layers.Input(shape=([1, 2, 1]))
in0Zer80190 = tf.keras.layers.Input(shape=([4, 3, 1, 3]))

Ave55806 = keras.layers.AveragePooling1D(pool_size=(1), name = 'Ave55806', )(in0Ave55806)
Res95739 = keras.layers.Reshape((1, 2, 1), name = 'Res95739', )(Ave55806)
Con75542 = keras.layers.Concatenate(axis=3, name = 'Con75542', )([Res95739,in0Con75542])
Zer80190 = keras.layers.ZeroPadding3D(padding=((1, 1), (1, 1), (1, 1)), name = 'Zer80190', )(in0Zer80190)
Res79949 = keras.layers.Reshape((6, 5, 9), name = 'Res79949', )(Zer80190)
Loc6584 = keras.layers.LocallyConnected2D(2, (3, 5),strides=(12, 1), name = 'Loc6584', )(Res79949)
Zer17734 = keras.layers.ZeroPadding2D(padding=((0, 0), (1, 0)), name = 'Zer17734', )(Loc6584)
Add46894 = keras.layers.Add(name = 'Add46894', )([Con75542,Zer17734])
model = tf.keras.models.Model(inputs=[in0Ave55806,in0Con75542,in0Zer80190], outputs=Add46894)
w = model.get_layer('Loc6584').get_weights() 
w[0] = np.array([[[0.904, 0.5385], [0.5417, 0.5152], [0.7957, 0.8888], [0.9805, 0.6563], [0.9316, 0.4284], [0.4218, 0.1786], [0.4914, 0.058], [0.3217, 0.9877], [0.9046, 0.3823], [0.6044, 0.5369], [0.8265, 0.4623], [0.9531, 0.9302], [0.8239, 0.2569], [0.6557, 0.6026], [0.0379, 0.8839], [0.6206, 0.5111], [0.234, 0.1963], [0.337, 0.7817], [0.0729, 0.0718], [0.4916, 0.7923], [0.1375, 0.2413], [0.6733, 0.7486], [0.2397, 0.4461], [0.0999, 0.9073], [0.7955, 0.207], [0.5806, 0.7392], [0.6049, 0.5094], [0.9936, 0.486], [0.2017, 0.27], [0.4018, 0.7646], [0.0511, 0.5319], [0.5569, 0.0965], [0.2614, 0.9562], [0.9463, 0.5015], [0.1509, 0.3278], [0.7304, 0.584], [0.9647, 0.4713], [0.8827, 0.8606], [0.2712, 0.1879], [0.6006, 0.433], [0.0857, 0.5648], [0.5821, 0.4889], [0.5647, 0.2851], [0.0832, 0.5351], [0.1951, 0.3693], [0.7587, 0.7084], [0.7619, 0.1202], [0.1713, 0.9882], [0.0203, 0.9064], [0.5063, 0.6468], [0.9206, 0.8236], [0.4715, 0.8082], [0.4381, 0.2004], [0.5781, 0.5623], [0.5459, 0.3788], [0.0019, 0.6809], [0.6357, 0.1916], [0.0069, 0.6171], [0.7383, 0.0853], [0.4722, 0.1337], [0.2249, 0.89], [0.4148, 0.6042], [0.2826, 0.8269], [0.5208, 0.7553], [0.3447, 0.4618], [0.608, 0.3805], [0.8355, 0.9611], [0.6305, 0.3432], [0.0368, 0.1891], [0.3059, 0.0102], [0.6236, 0.8967], [0.6954, 0.1069], [0.4308, 0.4942], [0.102, 0.8728], [0.3109, 0.6762], [0.4622, 0.3066], [0.5223, 0.4714], [0.0038, 0.2399], [0.947, 0.1286], [0.3178, 0.9556], [0.5802, 0.6155], [0.1489, 0.0731], [0.1548, 0.4099], [0.1472, 0.4663], [0.4687, 0.6902], [0.5466, 0.0491], [0.9699, 0.9969], [0.2319, 0.3669], [0.4176, 0.927], [0.9411, 0.0646], [0.9891, 0.4512], [0.4148, 0.4701], [0.0278, 0.9958], [0.1441, 0.7245], [0.7411, 0.5201], [0.001, 0.1206], [0.5461, 0.4393], [0.4357, 0.5689], [0.4366, 0.3893], [0.1198, 0.4012], [0.6948, 0.5124], [0.8798, 0.0412], [0.5114, 0.1563], [0.5182, 0.427], [0.591, 0.6173], [0.6522, 0.452], [0.6185, 0.8387], [0.0108, 0.1054], [0.5414, 0.7765], [0.7298, 0.4428], [0.9837, 0.4842], [0.0569, 0.9912], [0.7471, 0.8351], [0.5371, 0.7032], [0.2812, 0.2006], [0.1888, 0.1167], [0.2035, 0.3336], [0.3985, 0.9447], [0.4416, 0.1687], [0.2633, 0.9242], [0.3309, 0.2417], [0.8949, 0.3872], [0.052, 0.9585], [0.7587, 0.6806], [0.1213, 0.9967], [0.4698, 0.2592], [0.2571, 0.7118], [0.5908, 0.0029], [0.8353, 0.5358], [0.8856, 0.0682], [0.3238, 0.0094], [0.1705, 0.374], [0.5352, 0.2642], [0.3752, 0.6436], [0.2769, 0.489]]])
w[1] = np.array([[[0, 0]]])
model.get_layer('Loc6584').set_weights(w) 
in0Ave55806 = tf.constant([[[1.5537, 1.9739]]])
in0Con75542 = tf.constant([[[[0.3145], [0.4239]]]])
in0Zer80190 = tf.constant([[[[[1.9394, 1.3571, 1.9865]], [[1.4829, 1.6548, 1.0102]], [[1.8731, 1.874, 1.7961]]], [[[1.6899, 1.726, 1.0881]], [[1.4975, 1.3832, 1.6047]], [[1.7755, 1.3846, 1.4328]]], [[[1.3461, 1.1823, 1.1362]], [[1.8767, 1.5103, 1.5575]], [[1.0508, 1.4429, 1.7809]]], [[[1.2152, 1.4156, 1.5802]], [[1.9642, 1.2295, 1.0828]], [[1.081, 1.7902, 1.4972]]]]])
print (np.array2string(model.predict([in0Ave55806,in0Con75542,in0Zer80190],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Add46894.png')

LAve55806 = average_pooling1D_layer([[[1.5537, 1.9739]]], 1, Ave55806), 
LRes95739 = reshape_layer(Ave55806, [1, 2, 1], Res95739), 
LCon75542 = concatenate_layer([Res95739,[[[[0.3145], [0.4239]]]]], 3, Con75542), 
LZer80190 = zero_padding3D_layer([[[[[1.9394, 1.3571, 1.9865]], [[1.4829, 1.6548, 1.0102]], [[1.8731, 1.874, 1.7961]]], [[[1.6899, 1.726, 1.0881]], [[1.4975, 1.3832, 1.6047]], [[1.7755, 1.3846, 1.4328]]], [[[1.3461, 1.1823, 1.1362]], [[1.8767, 1.5103, 1.5575]], [[1.0508, 1.4429, 1.7809]]], [[[1.2152, 1.4156, 1.5802]], [[1.9642, 1.2295, 1.0828]], [[1.081, 1.7902, 1.4972]]]]], 1, 1, 1, 1, 1, 1, Zer80190), 
LRes79949 = reshape_layer(Zer80190, [6, 5, 9], Res79949), 
LLoc6584 = locally_connected2D_layer(Res79949, 3, 5,[[[0.904, 0.5385], [0.5417, 0.5152], [0.7957, 0.8888], [0.9805, 0.6563], [0.9316, 0.4284], [0.4218, 0.1786], [0.4914, 0.058], [0.3217, 0.9877], [0.9046, 0.3823], [0.6044, 0.5369], [0.8265, 0.4623], [0.9531, 0.9302], [0.8239, 0.2569], [0.6557, 0.6026], [0.0379, 0.8839], [0.6206, 0.5111], [0.234, 0.1963], [0.337, 0.7817], [0.0729, 0.0718], [0.4916, 0.7923], [0.1375, 0.2413], [0.6733, 0.7486], [0.2397, 0.4461], [0.0999, 0.9073], [0.7955, 0.207], [0.5806, 0.7392], [0.6049, 0.5094], [0.9936, 0.486], [0.2017, 0.27], [0.4018, 0.7646], [0.0511, 0.5319], [0.5569, 0.0965], [0.2614, 0.9562], [0.9463, 0.5015], [0.1509, 0.3278], [0.7304, 0.584], [0.9647, 0.4713], [0.8827, 0.8606], [0.2712, 0.1879], [0.6006, 0.433], [0.0857, 0.5648], [0.5821, 0.4889], [0.5647, 0.2851], [0.0832, 0.5351], [0.1951, 0.3693], [0.7587, 0.7084], [0.7619, 0.1202], [0.1713, 0.9882], [0.0203, 0.9064], [0.5063, 0.6468], [0.9206, 0.8236], [0.4715, 0.8082], [0.4381, 0.2004], [0.5781, 0.5623], [0.5459, 0.3788], [0.0019, 0.6809], [0.6357, 0.1916], [0.0069, 0.6171], [0.7383, 0.0853], [0.4722, 0.1337], [0.2249, 0.89], [0.4148, 0.6042], [0.2826, 0.8269], [0.5208, 0.7553], [0.3447, 0.4618], [0.608, 0.3805], [0.8355, 0.9611], [0.6305, 0.3432], [0.0368, 0.1891], [0.3059, 0.0102], [0.6236, 0.8967], [0.6954, 0.1069], [0.4308, 0.4942], [0.102, 0.8728], [0.3109, 0.6762], [0.4622, 0.3066], [0.5223, 0.4714], [0.0038, 0.2399], [0.947, 0.1286], [0.3178, 0.9556], [0.5802, 0.6155], [0.1489, 0.0731], [0.1548, 0.4099], [0.1472, 0.4663], [0.4687, 0.6902], [0.5466, 0.0491], [0.9699, 0.9969], [0.2319, 0.3669], [0.4176, 0.927], [0.9411, 0.0646], [0.9891, 0.4512], [0.4148, 0.4701], [0.0278, 0.9958], [0.1441, 0.7245], [0.7411, 0.5201], [0.001, 0.1206], [0.5461, 0.4393], [0.4357, 0.5689], [0.4366, 0.3893], [0.1198, 0.4012], [0.6948, 0.5124], [0.8798, 0.0412], [0.5114, 0.1563], [0.5182, 0.427], [0.591, 0.6173], [0.6522, 0.452], [0.6185, 0.8387], [0.0108, 0.1054], [0.5414, 0.7765], [0.7298, 0.4428], [0.9837, 0.4842], [0.0569, 0.9912], [0.7471, 0.8351], [0.5371, 0.7032], [0.2812, 0.2006], [0.1888, 0.1167], [0.2035, 0.3336], [0.3985, 0.9447], [0.4416, 0.1687], [0.2633, 0.9242], [0.3309, 0.2417], [0.8949, 0.3872], [0.052, 0.9585], [0.7587, 0.6806], [0.1213, 0.9967], [0.4698, 0.2592], [0.2571, 0.7118], [0.5908, 0.0029], [0.8353, 0.5358], [0.8856, 0.0682], [0.3238, 0.0094], [0.1705, 0.374], [0.5352, 0.2642], [0.3752, 0.6436], [0.2769, 0.489]]],[[[0, 0]]], 12, 1, Loc6584), 
LZer17734 = zero_padding2D_layer(Loc6584, 0, 0, 1, 0, Zer17734), 
LAdd46894 = add_layer([Con75542,Zer17734], Add46894), 
exec_layers([LAve55806,LRes95739,LCon75542,LZer80190,LRes79949,LLoc6584,LZer17734,LAdd46894],["Ave55806","Res95739","Con75542","Zer80190","Res79949","Loc6584","Zer17734","Add46894"],Add46894,"Add46894")

Actual (Unparsed): [[[[1.5537000, 0.3145000], [14.3813792, 13.8540804]]]]

Expected (Unparsed): [[[[1.5537,0.3145],[14.381379090000001,13.854080369999997]]]]

Actual:   [[[[1.5537, 0.3145], [14.3814, 13.8541]]]]

Expected: [[[[1.5537, 0.3145], [14.3814, 13.8541]]]]