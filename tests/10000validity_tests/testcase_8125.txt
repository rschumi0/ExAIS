import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Min85137 = tf.keras.layers.Input(shape=([2, 1]))
in1Min85137 = tf.keras.layers.Input(shape=([2, 1]))

Min85137 = keras.layers.Minimum(name = 'Min85137', )([in0Min85137,in1Min85137])
Sof52438 = keras.layers.Softmax(axis=1, name = 'Sof52438', )(Min85137)
Zer72335 = keras.layers.ZeroPadding1D(padding=((1, 1)), name = 'Zer72335', )(Sof52438)
model = tf.keras.models.Model(inputs=[in0Min85137,in1Min85137], outputs=Zer72335)
in0Min85137 = tf.constant([[[0.6874], [0.4975]]])
in1Min85137 = tf.constant([[[0.9447], [0.8468]]])
print (np.array2string(model.predict([in0Min85137,in1Min85137],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Zer72335.png')

LMin85137 = minimum_layer([[[[0.6874], [0.4975]]], [[[0.9447], [0.8468]]]], Min85137), 
LSof52438 = softmax_layer(Min85137, 1, Sof52438), 
LZer72335 = zero_padding1D_layer(Sof52438, 1, 1, Zer72335), 
exec_layers([LMin85137,LSof52438,LZer72335],["Min85137","Sof52438","Zer72335"],Zer72335,"Zer72335")

Actual (Unparsed): [[[0.0000000], [0.5473328], [0.4526672], [0.0000000]]]

Expected (Unparsed): [[[0],[0.5473328423001771],[0.45266715769982296],[0]]]

Actual:   [[[0], [0.5474], [0.4527], [0]]]

Expected: [[[0], [0.5474], [0.4527], [0]]]