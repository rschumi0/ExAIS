import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Max74365 = tf.keras.layers.Input(shape=([1, 2, 1, 1]))
in1Max74365 = tf.keras.layers.Input(shape=([1, 2, 1, 1]))
in0Con52674 = tf.keras.layers.Input(shape=([1, 2, 5]))
in0Cro26109 = tf.keras.layers.Input(shape=([3, 4, 3, 3]))

Max74365 = keras.layers.Maximum(name = 'Max74365', )([in0Max74365,in1Max74365])
Res80232 = keras.layers.Reshape((1, 2, 1), name = 'Res80232', )(Max74365)
Con52674 = keras.layers.Concatenate(axis=3, name = 'Con52674', )([Res80232,in0Con52674])
Cro26109 = keras.layers.Cropping3D(cropping=((0, 1), (0, 3), (0, 1)), name = 'Cro26109', )(in0Cro26109)
Res97072 = keras.layers.Reshape((2, 1, 6), name = 'Res97072', )(Cro26109)
Cro38929 = keras.layers.Cropping2D(cropping=((1, 0), (0, 0)), name = 'Cro38929', )(Res97072)
Zer3870 = keras.layers.ZeroPadding2D(padding=((0, 0), (1, 0)), name = 'Zer3870', )(Cro38929)
Mul53746 = keras.layers.Multiply(name = 'Mul53746', )([Con52674,Zer3870])
Res71468 = keras.layers.Reshape((1, 2, 6, 1), name = 'Res71468', )(Mul53746)
Glo39667 = keras.layers.GlobalMaxPool3D(name = 'Glo39667', )(Res71468)
model = tf.keras.models.Model(inputs=[in0Max74365,in1Max74365,in0Con52674,in0Cro26109], outputs=Glo39667)
in0Max74365 = tf.constant([[[[[0.9187]], [[0.6661]]]]])
in1Max74365 = tf.constant([[[[[0.9957]], [[0.3834]]]]])
in0Con52674 = tf.constant([[[[0.9687, 0.3676, 0.0253, 0.8944, 0.0823], [0.9141, 0.2054, 0.5576, 0.6457, 0.7086]]]])
in0Cro26109 = tf.constant([[[[[1.4649, 1.7627, 1.72], [1.1587, 1.2617, 1.0202], [1.5734, 1.9254, 1.4427]], [[1.8277, 1.811, 1.2515], [1.1885, 1.1586, 1.69], [1.9463, 1.6477, 1.5008]], [[1.4676, 1.5949, 1.1394], [1.7947, 1.4139, 1.7623], [1.7719, 1.6835, 1.6381]], [[1.9946, 1.9119, 1.5627], [1.4024, 1.6306, 1.648], [1.7598, 1.3871, 1.4832]]], [[[1.5068, 1.6699, 1.0612], [1.6472, 1.1987, 1.8258], [1.9113, 1.0511, 1.0999]], [[1.6934, 1.7888, 1.878], [1.5072, 1.447, 1.0415], [1.6532, 1.4433, 1.1006]], [[1.4203, 1.6202, 1.9358], [1.1519, 1.968, 1.009], [1.2441, 1.3286, 1.2322]], [[1.9353, 1.4664, 1.1169], [1.1785, 1.9684, 1.3241], [1.5021, 1.1223, 1.8506]]], [[[1.6905, 1.7504, 1.8466], [1.4603, 1.6084, 1.1237], [1.8288, 1.8734, 1.1231]], [[1.1341, 1.1588, 1.2952], [1.2468, 1.3164, 1.3003], [1.7117, 1.7677, 1.526]], [[1.3186, 1.34, 1.4156], [1.4531, 1.5808, 1.3455], [1.1067, 1.3858, 1.2163]], [[1.8359, 1.6031, 1.2527], [1.8235, 1.8457, 1.9435], [1.6256, 1.0018, 1.8776]]]]])
print (np.array2string(model.predict([in0Max74365,in1Max74365,in0Con52674,in0Cro26109],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Glo39667.png')

LMax74365 = maximum_layer([[[[[[0.9187]], [[0.6661]]]]], [[[[[0.9957]], [[0.3834]]]]]], Max74365), 
LRes80232 = reshape_layer(Max74365, [1, 2, 1], Res80232), 
LCon52674 = concatenate_layer([Res80232,[[[[0.9687, 0.3676, 0.0253, 0.8944, 0.0823], [0.9141, 0.2054, 0.5576, 0.6457, 0.7086]]]]], 3, Con52674), 
LCro26109 = cropping3D_layer([[[[[1.4649, 1.7627, 1.72], [1.1587, 1.2617, 1.0202], [1.5734, 1.9254, 1.4427]], [[1.8277, 1.811, 1.2515], [1.1885, 1.1586, 1.69], [1.9463, 1.6477, 1.5008]], [[1.4676, 1.5949, 1.1394], [1.7947, 1.4139, 1.7623], [1.7719, 1.6835, 1.6381]], [[1.9946, 1.9119, 1.5627], [1.4024, 1.6306, 1.648], [1.7598, 1.3871, 1.4832]]], [[[1.5068, 1.6699, 1.0612], [1.6472, 1.1987, 1.8258], [1.9113, 1.0511, 1.0999]], [[1.6934, 1.7888, 1.878], [1.5072, 1.447, 1.0415], [1.6532, 1.4433, 1.1006]], [[1.4203, 1.6202, 1.9358], [1.1519, 1.968, 1.009], [1.2441, 1.3286, 1.2322]], [[1.9353, 1.4664, 1.1169], [1.1785, 1.9684, 1.3241], [1.5021, 1.1223, 1.8506]]], [[[1.6905, 1.7504, 1.8466], [1.4603, 1.6084, 1.1237], [1.8288, 1.8734, 1.1231]], [[1.1341, 1.1588, 1.2952], [1.2468, 1.3164, 1.3003], [1.7117, 1.7677, 1.526]], [[1.3186, 1.34, 1.4156], [1.4531, 1.5808, 1.3455], [1.1067, 1.3858, 1.2163]], [[1.8359, 1.6031, 1.2527], [1.8235, 1.8457, 1.9435], [1.6256, 1.0018, 1.8776]]]]], 0, 1, 0, 3, 0, 1, Cro26109), 
LRes97072 = reshape_layer(Cro26109, [2, 1, 6], Res97072), 
LCro38929 = cropping2D_layer(Res97072, 1, 0, 0, 0, Cro38929), 
LZer3870 = zero_padding2D_layer(Cro38929, 0, 0, 1, 0, Zer3870), 
LMul53746 = multiply_layer([Con52674,Zer3870], Mul53746), 
LRes71468 = reshape_layer(Mul53746, [1, 2, 6, 1], Res71468), 
LGlo39667 = global_max_pool3D_layer(Res71468, Glo39667), 
exec_layers([LMax74365,LRes80232,LCon52674,LCro26109,LRes97072,LCro38929,LZer3870,LMul53746,LRes71468,LGlo39667],["Max74365","Res80232","Con52674","Cro26109","Res97072","Cro38929","Zer3870","Mul53746","Res71468","Glo39667"],Glo39667,"Glo39667")

Actual (Unparsed): [[1.5264555]]

Expected (Unparsed): [[1.52645559]]

Actual:   [[1.5265]]

Expected: [[1.5265]]