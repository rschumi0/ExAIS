import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Sim38614 = tf.keras.layers.Input(shape=([2, 3]))
in0Con80511 = tf.keras.layers.Input(shape=([3, 3, 1, 1]))
in0Min10142 = tf.keras.layers.Input(shape=([2, 2, 1, 2]))
in1Min10142 = tf.keras.layers.Input(shape=([2, 2, 1, 2]))

Sim38614 = keras.layers.SimpleRNN(3,name = 'Sim38614', )(in0Sim38614)
Res7236 = keras.layers.Reshape((3, 1), name = 'Res7236', )(Sim38614)
Res98196 = keras.layers.Reshape((3, 1, 1), name = 'Res98196', )(Res7236)
Res37565 = keras.layers.Reshape((3, 1, 1, 1), name = 'Res37565', )(Res98196)
Zer60708 = keras.layers.ZeroPadding3D(padding=((0, 0), (2, 0), (0, 0)), name = 'Zer60708', )(Res37565)
Con80511 = keras.layers.Concatenate(axis=4, name = 'Con80511', )([Zer60708,in0Con80511])
Min10142 = keras.layers.Minimum(name = 'Min10142', )([in0Min10142,in1Min10142])
Zer27961 = keras.layers.ZeroPadding3D(padding=((1, 0), (1, 0), (0, 0)), name = 'Zer27961', )(Min10142)
Max71253 = keras.layers.Maximum(name = 'Max71253', )([Con80511,Zer27961])
Res97737 = keras.layers.Reshape((3, 3, 2), name = 'Res97737', )(Max71253)
Res98729 = keras.layers.Reshape((3, 6), name = 'Res98729', )(Res97737)
Up_11034 = keras.layers.UpSampling1D(size=(1), name = 'Up_11034', )(Res98729)
Res93402 = keras.layers.Reshape((3, 6, 1), name = 'Res93402', )(Up_11034)
Con46818 = keras.layers.Conv2DTranspose(3, (2, 5),strides=(1, 1), padding='same', name = 'Con46818', )(Res93402)
model = tf.keras.models.Model(inputs=[in0Sim38614,in0Con80511,in0Min10142,in1Min10142], outputs=Con46818)
w = model.get_layer('Sim38614').get_weights() 
w[0] = np.array([[7, 5, 5], [4, 7, 4], [10, 10, 7]])
w[1] = np.array([[6, 1, 10], [10, 6, 6], [3, 10, 8]])
w[2] = np.array([1, 9, 1])
model.get_layer('Sim38614').set_weights(w) 
w = model.get_layer('Con46818').get_weights() 
w[0] = np.array([[[[0.1001], [0.309], [0.1561]], [[0.7673], [0.424], [0.8125]], [[0.2702], [0.0431], [0.5958]], [[0.1572], [0.5586], [0.8829]], [[0.8146], [0.783], [0.4938]]], [[[0.0738], [0.8379], [0.6714]], [[0.4759], [0.9417], [0.8523]], [[0.6681], [0.7026], [0.5005]], [[0.5068], [0.1133], [0.0549]], [[0.8043], [0.0915], [0.7379]]]])
w[1] = np.array([0, 0, 0])
model.get_layer('Con46818').set_weights(w) 
in0Sim38614 = tf.constant([[[8, 3, 9], [9, 2, 9]]])
in0Con80511 = tf.constant([[[[[0.2784]], [[0.7637]], [[0.411]]], [[[0.7798]], [[0.164]], [[0.9]]], [[[0.9949]], [[0.5015]], [[0.9055]]]]])
in0Min10142 = tf.constant([[[[[0.5145, 0.2964]], [[0.8354, 0.6663]]], [[[0.0692, 0.7572]], [[0.9067, 0.9257]]]]])
in1Min10142 = tf.constant([[[[[0.3383, 0.7823]], [[0.723, 0.0253]]], [[[0.466, 0.1572]], [[0.8123, 0.3693]]]]])
print (np.array2string(model.predict([in0Sim38614,in0Con80511,in0Min10142,in1Min10142],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Con46818.png')

LSim38614 = simple_rnn_layer([[[8, 3, 9], [9, 2, 9]]],[[7, 5, 5], [4, 7, 4], [10, 10, 7]],[[6, 1, 10], [10, 6, 6], [3, 10, 8]],[1, 9, 1], Sim38614), 
LRes7236 = reshape_layer(Sim38614, [3, 1], Res7236), 
LRes98196 = reshape_layer(Res7236, [3, 1, 1], Res98196), 
LRes37565 = reshape_layer(Res98196, [3, 1, 1, 1], Res37565), 
LZer60708 = zero_padding3D_layer(Res37565, 0, 0, 2, 0, 0, 0, Zer60708), 
LCon80511 = concatenate_layer([Zer60708,[[[[[0.2784]], [[0.7637]], [[0.411]]], [[[0.7798]], [[0.164]], [[0.9]]], [[[0.9949]], [[0.5015]], [[0.9055]]]]]], 4, Con80511), 
LMin10142 = minimum_layer([[[[[[0.5145, 0.2964]], [[0.8354, 0.6663]]], [[[0.0692, 0.7572]], [[0.9067, 0.9257]]]]], [[[[[0.3383, 0.7823]], [[0.723, 0.0253]]], [[[0.466, 0.1572]], [[0.8123, 0.3693]]]]]], Min10142), 
LZer27961 = zero_padding3D_layer(Min10142, 1, 0, 1, 0, 0, 0, Zer27961), 
LMax71253 = maximum_layer([Con80511,Zer27961], Max71253), 
LRes97737 = reshape_layer(Max71253, [3, 3, 2], Res97737), 
LRes98729 = reshape_layer(Res97737, [3, 6], Res98729), 
LUp_11034 = up_sampling1D_layer(Res98729, 1, Up_11034), 
LRes93402 = reshape_layer(Up_11034, [3, 6, 1], Res93402), 
LCon46818 = conv2D_transpose_layer(Res93402, 2, 5,[[[[0.1001], [0.309], [0.1561]], [[0.7673], [0.424], [0.8125]], [[0.2702], [0.0431], [0.5958]], [[0.1572], [0.5586], [0.8829]], [[0.8146], [0.783], [0.4938]]], [[[0.0738], [0.8379], [0.6714]], [[0.4759], [0.9417], [0.8523]], [[0.6681], [0.7026], [0.5005]], [[0.5068], [0.1133], [0.0549]], [[0.8043], [0.0915], [0.7379]]]],[0, 0, 0], 1, 1, true, Con46818), 
exec_layers([LSim38614,LRes7236,LRes98196,LRes37565,LZer60708,LCon80511,LMin10142,LZer27961,LMax71253,LRes97737,LRes98729,LUp_11034,LRes93402,LCon46818],["Sim38614","Res7236","Res98196","Res37565","Zer60708","Con80511","Min10142","Zer27961","Max71253","Res97737","Res98729","Up_11034","Res93402","Con46818"],Con46818,"Con46818")

Actual (Unparsed): [[[[0.2136163, 0.1180416, 0.2262000], [0.1516701, 0.2479823, 0.2850843], [0.7298515, 0.7883230, 1.0224056], [1.2415775, 0.8019017, 1.4691435], [0.7056140, 0.6439668, 1.6040082], [0.8903622, 1.1742912, 1.5048889]], [[0.7646949, 0.6973392, 0.9236764], [0.7423093, 1.1041443, 1.4378290], [1.1198589, 2.4734696, 2.6245552], [2.8662600, 3.3625587, 3.5292440], [2.5336813, 2.0313239, 2.6485165], [2.0374605, 1.3014184, 2.3896221]], [[1.1663870, 1.4610196, 1.7109165], [1.0759750, 1.3420026, 1.6048965], [1.4960747, 2.5234305, 2.6193472], [3.3537580, 3.5568177, 4.0039158], [2.6189165, 2.3760201, 3.3419380], [2.1568725, 1.7630621, 2.3941012]]]]

Expected (Unparsed): [[[[0.21361631999999997,0.11804159999999998,0.22619999999999998],[0.15167005,0.24798234,0.28508429],[0.7298514899999999,0.7883230400000001,1.02240561],[1.24157748,0.80190167,1.46914348],[0.70561394,0.6439668199999999,1.60400823],[0.8903622200000001,1.1742912,1.50488886]],[[0.7646949300000001,0.6973391800000001,0.9236764500000001],[0.7423092899999999,1.10414425,1.43782901],[1.1198588900000002,2.4734696200000004,2.62455523],[2.86626001,3.36255874,3.52924404],[2.53368132,2.0313238499999997,2.64851653],[2.03746045,1.30141835,2.38962205]],[[1.16638705,1.46101963,1.71091653],[1.0759749600000001,1.34200264,1.60489652],[1.4960747,2.52343046,2.6193472100000004],[3.35375805,3.5568177,4.0039158399999994],[2.61891648,2.37602007,3.34193799],[2.15687252,1.76306215,2.39410116]]]]

Actual:   [[[[0.2137, 0.1181, 0.2262], [0.1517, 0.248, 0.2851], [0.7299, 0.7884, 1.0225], [1.2416, 0.802, 1.4692], [0.7057, 0.644, 1.6041], [0.8904, 1.1743, 1.5049]], [[0.7647, 0.6974, 0.9237], [0.7424, 1.1042, 1.4379], [1.1199, 2.4735, 2.6246], [2.8663, 3.3626, 3.5293], [2.5337, 2.0314, 2.6486], [2.0375, 1.3015, 2.3897]], [[1.1664, 1.4611, 1.711], [1.076, 1.3421, 1.6049], [1.4961, 2.5235, 2.6194], [3.3538, 3.5569, 4.004], [2.619, 2.3761, 3.342], [2.1569, 1.7631, 2.3942]]]]

Expected: [[[[0.2137, 0.1181, 0.2262], [0.1517, 0.248, 0.2851], [0.7299, 0.7884, 1.0225], [1.2416, 0.802, 1.4692], [0.7057, 0.644, 1.6041], [0.8904, 1.1743, 1.5049]], [[0.7647, 0.6974, 0.9237], [0.7424, 1.1042, 1.4379], [1.1199, 2.4735, 2.6246], [2.8663, 3.3626, 3.5293], [2.5337, 2.0314, 2.6486], [2.0375, 1.3015, 2.3897]], [[1.1664, 1.4611, 1.711], [1.076, 1.3421, 1.6049], [1.4961, 2.5235, 2.6194], [3.3538, 3.5569, 4.004], [2.619, 2.3761, 3.342], [2.1569, 1.7631, 2.3942]]]]