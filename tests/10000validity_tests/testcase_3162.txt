import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Add82789 = tf.keras.layers.Input(shape=([1, 2, 2, 2]))
in1Add82789 = tf.keras.layers.Input(shape=([1, 2, 2, 2]))

Add82789 = keras.layers.Add(name = 'Add82789', )([in0Add82789,in1Add82789])
Res67015 = keras.layers.Reshape((1, 2, 4), name = 'Res67015', )(Add82789)
Max39976 = keras.layers.MaxPool2D(pool_size=(1, 1), strides=(1, 10), padding='valid', name = 'Max39976', )(Res67015)
Res47838 = keras.layers.Reshape((1, 1, 4, 1), name = 'Res47838', )(Max39976)
Up_67635 = keras.layers.UpSampling3D(size=(1, 2, 1), name = 'Up_67635', )(Res47838)
model = tf.keras.models.Model(inputs=[in0Add82789,in1Add82789], outputs=Up_67635)
in0Add82789 = tf.constant([[[[[0.9069, 0.0476], [0.8844, 0.442]], [[0.6819, 0.4139], [0.2245, 0.5215]]]]])
in1Add82789 = tf.constant([[[[[0.7213, 0.5287], [0.0167, 0.5042]], [[0.2125, 0.4861], [0.6427, 0.7536]]]]])
print (np.array2string(model.predict([in0Add82789,in1Add82789],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Up_67635.png')

LAdd82789 = add_layer([[[[[[0.9069, 0.0476], [0.8844, 0.442]], [[0.6819, 0.4139], [0.2245, 0.5215]]]]], [[[[[0.7213, 0.5287], [0.0167, 0.5042]], [[0.2125, 0.4861], [0.6427, 0.7536]]]]]], Add82789), 
LRes67015 = reshape_layer(Add82789, [1, 2, 4], Res67015), 
LMax39976 = max_pool2D_layer(Res67015, 1, 1, 1, 10, false, Max39976), 
LRes47838 = reshape_layer(Max39976, [1, 1, 4, 1], Res47838), 
LUp_67635 = up_sampling3D_layer(Res47838, 1, 2, 1, Up_67635), 
exec_layers([LAdd82789,LRes67015,LMax39976,LRes47838,LUp_67635],["Add82789","Res67015","Max39976","Res47838","Up_67635"],Up_67635,"Up_67635")

Actual (Unparsed): [[[[[1.6282000], [0.5763000], [0.9011000], [0.9462000]], [[1.6282000], [0.5763000], [0.9011000], [0.9462000]]]]]

Expected (Unparsed): [[[[[1.6282],[0.5762999999999999],[0.9011],[0.9461999999999999]],[[1.6282],[0.5762999999999999],[0.9011],[0.9461999999999999]]]]]

Actual:   [[[[[1.6282], [0.5763], [0.9011], [0.9462]], [[1.6282], [0.5763], [0.9011], [0.9462]]]]]

Expected: [[[[[1.6282], [0.5763], [0.9011], [0.9462]], [[1.6282], [0.5763], [0.9011], [0.9462]]]]]