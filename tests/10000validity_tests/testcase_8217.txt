import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Max24383 = tf.keras.layers.Input(shape=([2, 2, 2, 2]))
in1Max24383 = tf.keras.layers.Input(shape=([2, 2, 2, 2]))
in0Sub54025 = tf.keras.layers.Input(shape=([3, 3]))
in1Sub54025 = tf.keras.layers.Input(shape=([3, 3]))
in0Con82261 = tf.keras.layers.Input(shape=([5, 5, 3]))

Max24383 = keras.layers.Maximum(name = 'Max24383', )([in0Max24383,in1Max24383])
Res90842 = keras.layers.Reshape((2, 2, 4), name = 'Res90842', )(Max24383)
Zer42899 = keras.layers.ZeroPadding2D(padding=((3, 0), (3, 0)), name = 'Zer42899', )(Res90842)
Sub54025 = keras.layers.Subtract(name = 'Sub54025', )([in0Sub54025,in1Sub54025])
Res17909 = keras.layers.Reshape((3, 3, 1), name = 'Res17909', )(Sub54025)
Zer60208 = keras.layers.ZeroPadding2D(padding=((1, 1), (1, 1)), name = 'Zer60208', )(Res17909)
Con82261 = keras.layers.Concatenate(axis=3, name = 'Con82261', )([Zer60208,in0Con82261])
Ave62623 = keras.layers.Average(name = 'Ave62623', )([Zer42899,Con82261])
Res62660 = keras.layers.Reshape((5, 20), name = 'Res62660', )(Ave62623)
Cro1458 = keras.layers.Cropping1D(cropping=((4, 0)), name = 'Cro1458', )(Res62660)
model = tf.keras.models.Model(inputs=[in0Max24383,in1Max24383,in0Sub54025,in1Sub54025,in0Con82261], outputs=Cro1458)
in0Max24383 = tf.constant([[[[[0.3941, 0.1339], [0.929, 0.8671]], [[0.0124, 0.0141], [0.5356, 0.7951]]], [[[0.9851, 0.399], [0.594, 0.5979]], [[0.0833, 0.0624], [0.6374, 0.7096]]]]])
in1Max24383 = tf.constant([[[[[0.1548, 0.2579], [0.877, 0.9346]], [[0.513, 0.5434], [0.5519, 0.8308]]], [[[0.7858, 0.0091], [0.1781, 0.0339]], [[0.1923, 0.6733], [0.9855, 0.8367]]]]])
in0Sub54025 = tf.constant([[[0.4627, 0.0703, 0.919], [0.552, 0.7855, 0.4768], [0.065, 0.0585, 0.2264]]])
in1Sub54025 = tf.constant([[[0.7974, 0.2644, 0.4593], [0.0415, 0.8579, 0.9693], [0.967, 0.1875, 0.7502]]])
in0Con82261 = tf.constant([[[[0.079, 0.8617, 0.5419], [0.1883, 0.8169, 0.0482], [0.1469, 0.4946, 0.5169], [0.3375, 0.7257, 0.9353], [0.0187, 0.8547, 0.293]], [[0.0956, 0.9414, 0.5007], [0.393, 0.1795, 0.0982], [0.0868, 0.0271, 0.8854], [0.9898, 0.4838, 0.2075], [0.0363, 0.3884, 0.0994]], [[0.0802, 0.1953, 0.6421], [0.4002, 0.8161, 0.1699], [0.4792, 0.3887, 0.7633], [0.2613, 0.7722, 0.9103], [0.67, 0.3521, 0.9335]], [[0.4192, 0.1453, 0.4415], [0.3578, 0.3642, 0.9037], [0.0343, 0.601, 0.6674], [0.759, 0.871, 0.7902], [0.8654, 0.7758, 0.8441]], [[0.0972, 0.3565, 0.4659], [0.5897, 0.976, 0.8568], [0.4266, 0.1653, 0.2629], [0.6045, 0.3564, 0.4276], [0.1712, 0.0737, 0.9546]]]])
print (np.array2string(model.predict([in0Max24383,in1Max24383,in0Sub54025,in1Sub54025,in0Con82261],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Cro1458.png')

LMax24383 = maximum_layer([[[[[[0.3941, 0.1339], [0.929, 0.8671]], [[0.0124, 0.0141], [0.5356, 0.7951]]], [[[0.9851, 0.399], [0.594, 0.5979]], [[0.0833, 0.0624], [0.6374, 0.7096]]]]], [[[[[0.1548, 0.2579], [0.877, 0.9346]], [[0.513, 0.5434], [0.5519, 0.8308]]], [[[0.7858, 0.0091], [0.1781, 0.0339]], [[0.1923, 0.6733], [0.9855, 0.8367]]]]]], Max24383), 
LRes90842 = reshape_layer(Max24383, [2, 2, 4], Res90842), 
LZer42899 = zero_padding2D_layer(Res90842, 3, 0, 3, 0, Zer42899), 
LSub54025 = subtract_layer([[[0.4627, 0.0703, 0.919], [0.552, 0.7855, 0.4768], [0.065, 0.0585, 0.2264]]], [[[0.7974, 0.2644, 0.4593], [0.0415, 0.8579, 0.9693], [0.967, 0.1875, 0.7502]]], Sub54025), 
LRes17909 = reshape_layer(Sub54025, [3, 3, 1], Res17909), 
LZer60208 = zero_padding2D_layer(Res17909, 1, 1, 1, 1, Zer60208), 
LCon82261 = concatenate_layer([Zer60208,[[[[0.079, 0.8617, 0.5419], [0.1883, 0.8169, 0.0482], [0.1469, 0.4946, 0.5169], [0.3375, 0.7257, 0.9353], [0.0187, 0.8547, 0.293]], [[0.0956, 0.9414, 0.5007], [0.393, 0.1795, 0.0982], [0.0868, 0.0271, 0.8854], [0.9898, 0.4838, 0.2075], [0.0363, 0.3884, 0.0994]], [[0.0802, 0.1953, 0.6421], [0.4002, 0.8161, 0.1699], [0.4792, 0.3887, 0.7633], [0.2613, 0.7722, 0.9103], [0.67, 0.3521, 0.9335]], [[0.4192, 0.1453, 0.4415], [0.3578, 0.3642, 0.9037], [0.0343, 0.601, 0.6674], [0.759, 0.871, 0.7902], [0.8654, 0.7758, 0.8441]], [[0.0972, 0.3565, 0.4659], [0.5897, 0.976, 0.8568], [0.4266, 0.1653, 0.2629], [0.6045, 0.3564, 0.4276], [0.1712, 0.0737, 0.9546]]]]], 3, Con82261), 
LAve62623 = average_layer([Zer42899,Con82261], Ave62623), 
LRes62660 = reshape_layer(Ave62623, [5, 20], Res62660), 
LCro1458 = cropping1D_layer(Res62660, 4, 0, Cro1458), 
exec_layers([LMax24383,LRes90842,LZer42899,LSub54025,LRes17909,LZer60208,LCon82261,LAve62623,LRes62660,LCro1458],["Max24383","Res90842","Zer42899","Sub54025","Res17909","Zer60208","Con82261","Ave62623","Res62660","Cro1458"],Cro1458,"Cro1458")

Actual (Unparsed): [[[0.0000000, 0.0486000, 0.1782500, 0.2329500, 0.0000000, 0.2948500, 0.4880000, 0.4284000, 0.0000000, 0.2133000, 0.0826500, 0.1314500, 0.4925500, 0.5017500, 0.4752000, 0.5127500, 0.0961500, 0.4222500, 0.5296000, 0.8956500]]]

Expected (Unparsed): [[[0,0.0486,0.17825,0.23295,0,0.29485,0.488,0.4284,0,0.2133,0.08265,0.13145,0.49255,0.50175,0.47519999999999996,0.51275,0.09615,0.42225,0.5296000000000001,0.8956500000000001]]]

Actual:   [[[0, 0.0486, 0.1783, 0.233, 0, 0.2949, 0.488, 0.4284, 0, 0.2133, 0.0827, 0.1315, 0.4926, 0.5018, 0.4752, 0.5128, 0.0962, 0.4223, 0.5296, 0.8957]]]

Expected: [[[0, 0.0486, 0.1783, 0.233, 0, 0.2949, 0.488, 0.4284, 0, 0.2133, 0.0827, 0.1315, 0.4926, 0.5018, 0.4752, 0.5128, 0.0962, 0.4223, 0.5297, 0.8957]]]