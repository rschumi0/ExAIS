import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Mul89088 = tf.keras.layers.Input(shape=([2, 2, 2]))
in1Mul89088 = tf.keras.layers.Input(shape=([2, 2, 2]))

Mul89088 = keras.layers.Multiply(name = 'Mul89088', )([in0Mul89088,in1Mul89088])
Res77837 = keras.layers.Reshape((2, 4), name = 'Res77837', )(Mul89088)
Glo34284 = keras.layers.GlobalMaxPool1D(name = 'Glo34284', )(Res77837)
model = tf.keras.models.Model(inputs=[in0Mul89088,in1Mul89088], outputs=Glo34284)
in0Mul89088 = tf.constant([[[[0.3822, 0.9098], [0.0654, 0.2195]], [[0.7956, 0.9768], [0.5387, 0.8142]]]])
in1Mul89088 = tf.constant([[[[0.1212, 0.2326], [0.1071, 0.5047]], [[0.013, 0.6229], [0.9857, 0.2659]]]])
print (np.array2string(model.predict([in0Mul89088,in1Mul89088],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Glo34284.png')

LMul89088 = multiply_layer([[[[[0.3822, 0.9098], [0.0654, 0.2195]], [[0.7956, 0.9768], [0.5387, 0.8142]]]], [[[[0.1212, 0.2326], [0.1071, 0.5047]], [[0.013, 0.6229], [0.9857, 0.2659]]]]], Mul89088), 
LRes77837 = reshape_layer(Mul89088, [2, 4], Res77837), 
LGlo34284 = global_max_pool1D_layer(Res77837, Glo34284), 
exec_layers([LMul89088,LRes77837,LGlo34284],["Mul89088","Res77837","Glo34284"],Glo34284,"Glo34284")

Actual (Unparsed): [[0.0463226, 0.6084487, 0.5309966, 0.2164958]]

Expected (Unparsed): [[0.04632264,0.60844872,0.53099659,0.21649578000000003]]

Actual:   [[0.0464, 0.6085, 0.531, 0.2165]]

Expected: [[0.0464, 0.6085, 0.531, 0.2165]]