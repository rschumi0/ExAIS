import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Dot65562 = tf.keras.layers.Input(shape=([3, 3]))
in1Dot65562 = tf.keras.layers.Input(shape=([3, 3]))
in0Min8253 = tf.keras.layers.Input(shape=([1, 1]))
in1Min8253 = tf.keras.layers.Input(shape=([1, 1]))
in0Con53215 = tf.keras.layers.Input(shape=([3, 2]))
in0Thr75440 = tf.keras.layers.Input(shape=([2, 1, 2]))
in0Con121 = tf.keras.layers.Input(shape=([3, 1]))
in0Max57585 = tf.keras.layers.Input(shape=([2, 1]))
in1Max57585 = tf.keras.layers.Input(shape=([2, 1]))
in0Con47242 = tf.keras.layers.Input(shape=([2, 2, 1, 1]))
in0Add64350 = tf.keras.layers.Input(shape=([2, 2, 1, 2]))
in1Add64350 = tf.keras.layers.Input(shape=([2, 2, 1, 2]))

Dot65562 = keras.layers.Dot(axes=(1, 1), name = 'Dot65562', )([in0Dot65562,in1Dot65562])
Min8253 = keras.layers.Minimum(name = 'Min8253', )([in0Min8253,in1Min8253])
Zer36729 = keras.layers.ZeroPadding1D(padding=((2, 0)), name = 'Zer36729', )(Min8253)
Con53215 = keras.layers.Concatenate(axis=2, name = 'Con53215', )([Zer36729,in0Con53215])
Max70105 = keras.layers.Maximum(name = 'Max70105', )([Dot65562,Con53215])
Thr75440 = keras.layers.ThresholdedReLU(theta=7.962563856734825, name = 'Thr75440', input_shape=(2, 1, 2))(in0Thr75440)
Res24719 = keras.layers.Reshape((2, 2), name = 'Res24719', )(Thr75440)
Max12991 = keras.layers.MaxPool1D(pool_size=(2), name = 'Max12991', )(Res24719)
Zer4921 = keras.layers.ZeroPadding1D(padding=((2, 0)), name = 'Zer4921', )(Max12991)
Con121 = keras.layers.Concatenate(axis=2, name = 'Con121', )([Zer4921,in0Con121])
Sub29302 = keras.layers.Subtract(name = 'Sub29302', )([Max70105,Con121])
Max57585 = keras.layers.Maximum(name = 'Max57585', )([in0Max57585,in1Max57585])
Res54186 = keras.layers.Reshape((2, 1, 1), name = 'Res54186', )(Max57585)
Res5490 = keras.layers.Reshape((2, 1, 1, 1), name = 'Res5490', )(Res54186)
Zer96407 = keras.layers.ZeroPadding3D(padding=((0, 0), (1, 0), (0, 0)), name = 'Zer96407', )(Res5490)
Con47242 = keras.layers.Concatenate(axis=4, name = 'Con47242', )([Zer96407,in0Con47242])
Add64350 = keras.layers.Add(name = 'Add64350', )([in0Add64350,in1Add64350])
Sub53940 = keras.layers.Subtract(name = 'Sub53940', )([Con47242,Add64350])
Res48621 = keras.layers.Reshape((2, 2, 2), name = 'Res48621', )(Sub53940)
Res83602 = keras.layers.Reshape((2, 4), name = 'Res83602', )(Res48621)
Zer90313 = keras.layers.ZeroPadding1D(padding=((1, 0)), name = 'Zer90313', )(Res83602)
Dot40388 = keras.layers.Dot(axes=(1, 1), name = 'Dot40388', )([Sub29302,Zer90313])
Lea89303 = keras.layers.LeakyReLU(alpha=1.5247444228393525, name = 'Lea89303', )(Dot40388)
model = tf.keras.models.Model(inputs=[in0Dot65562,in1Dot65562,in0Min8253,in1Min8253,in0Con53215,in0Thr75440,in0Con121,in0Max57585,in1Max57585,in0Con47242,in0Add64350,in1Add64350], outputs=Lea89303)
in0Dot65562 = tf.constant([[[0.918, 0.8649, 0.1712], [0.89, 0.4321, 0.6127], [0.0794, 0.7411, 0.1272]]])
in1Dot65562 = tf.constant([[[0.3816, 0.0531, 0.2073], [0.7699, 0.8397, 0.5548], [0.2999, 0.1355, 0.1367]]])
in0Min8253 = tf.constant([[[0.8416]]])
in1Min8253 = tf.constant([[[0.5078]]])
in0Con53215 = tf.constant([[[0.4983, 0.5551], [0.786, 0.0672], [0.3211, 0.0182]]])
in0Thr75440 = tf.constant([[[[0.393, 0.4814]], [[0.7569, 0.8143]]]])
in0Con121 = tf.constant([[[0.9761], [0.5481], [0.9192]]])
in0Max57585 = tf.constant([[[0.7268], [0.6388]]])
in1Max57585 = tf.constant([[[0.7432], [0.8041]]])
in0Con47242 = tf.constant([[[[[0.0448]], [[0.8684]]], [[[0.8191]], [[0.1768]]]]])
in0Add64350 = tf.constant([[[[[0.662, 0.0422]], [[0.0179, 0.8973]]], [[[0.0244, 0.2213]], [[0.4604, 0.5162]]]]])
in1Add64350 = tf.constant([[[[[0.4564, 0.0248]], [[0.3926, 0.0349]]], [[[0.938, 0.6829]], [[0.0975, 0.6959]]]]])
print (np.array2string(model.predict([in0Dot65562,in1Dot65562,in0Min8253,in1Min8253,in0Con53215,in0Thr75440,in0Con121,in0Max57585,in1Max57585,in0Con47242,in0Add64350,in1Add64350],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Lea89303.png')

LDot65562 = dot_layer([[[0.918, 0.8649, 0.1712], [0.89, 0.4321, 0.6127], [0.0794, 0.7411, 0.1272]]], [[[0.3816, 0.0531, 0.2073], [0.7699, 0.8397, 0.5548], [0.2999, 0.1355, 0.1367]]], 1, 1, Dot65562), 
LMin8253 = minimum_layer([[[[0.8416]]], [[[0.5078]]]], Min8253), 
LZer36729 = zero_padding1D_layer(Min8253, 2, 0, Zer36729), 
LCon53215 = concatenate_layer([Zer36729,[[[0.4983, 0.5551], [0.786, 0.0672], [0.3211, 0.0182]]]], 2, Con53215), 
LMax70105 = maximum_layer([Dot65562,Con53215], Max70105), 
LThr75440 = thresholded_relu_layer([[[[0.393, 0.4814]], [[0.7569, 0.8143]]]], 7.962563856734825, Thr75440), 
LRes24719 = reshape_layer(Thr75440, [2, 2], Res24719), 
LMax12991 = max_pool1D_layer(Res24719, 2, Max12991), 
LZer4921 = zero_padding1D_layer(Max12991, 2, 0, Zer4921), 
LCon121 = concatenate_layer([Zer4921,[[[0.9761], [0.5481], [0.9192]]]], 2, Con121), 
LSub29302 = subtract_layer(Max70105,Con121, Sub29302), 
LMax57585 = maximum_layer([[[[0.7268], [0.6388]]], [[[0.7432], [0.8041]]]], Max57585), 
LRes54186 = reshape_layer(Max57585, [2, 1, 1], Res54186), 
LRes5490 = reshape_layer(Res54186, [2, 1, 1, 1], Res5490), 
LZer96407 = zero_padding3D_layer(Res5490, 0, 0, 1, 0, 0, 0, Zer96407), 
LCon47242 = concatenate_layer([Zer96407,[[[[[0.0448]], [[0.8684]]], [[[0.8191]], [[0.1768]]]]]], 4, Con47242), 
LAdd64350 = add_layer([[[[[[0.662, 0.0422]], [[0.0179, 0.8973]]], [[[0.0244, 0.2213]], [[0.4604, 0.5162]]]]], [[[[[0.4564, 0.0248]], [[0.3926, 0.0349]]], [[[0.938, 0.6829]], [[0.0975, 0.6959]]]]]], Add64350), 
LSub53940 = subtract_layer(Con47242,Add64350, Sub53940), 
LRes48621 = reshape_layer(Sub53940, [2, 2, 2], Res48621), 
LRes83602 = reshape_layer(Res48621, [2, 4], Res83602), 
LZer90313 = zero_padding1D_layer(Res83602, 1, 0, Zer90313), 
LDot40388 = dot_layer(Sub29302,Zer90313, 1, 1, Dot40388), 
LLea89303 = leaky_relu_layer(Dot40388, 1.5247444228393525, Lea89303), 
exec_layers([LDot65562,LMin8253,LZer36729,LCon53215,LMax70105,LThr75440,LRes24719,LMax12991,LZer4921,LCon121,LSub29302,LMax57585,LRes54186,LRes5490,LZer96407,LCon47242,LAdd64350,LSub53940,LRes48621,LRes83602,LZer90313,LDot40388,LLea89303],["Dot65562","Min8253","Zer36729","Con53215","Max70105","Thr75440","Res24719","Max12991","Zer4921","Con121","Sub29302","Max57585","Res54186","Res5490","Zer96407","Con47242","Add64350","Sub53940","Res48621","Res83602","Zer90313","Dot40388","Lea89303"],Lea89303,"Lea89303")

Actual (Unparsed): [[[-2.3531750, -0.1045907, 0.4360444, -0.9940736], [-2.1339384, -0.0967788, 0.3946497, -0.9301672], [0.5376602, 0.0454128, -0.2116915, 0.5467495]]]

Expected (Unparsed): [[[-2.3531750004323317,-0.10459067480302847,0.4360443472700001,-0.9940735162604896],[-2.1339384230472107,-0.09677884392341135,0.3946497475620001,-0.9301671652140662],[0.537660152448,0.04541276991999992,-0.21169151802194977,0.546749468376]]]

Actual:   [[[-2.3531, -0.1045, 0.4361, -0.994], [-2.1339, -0.0967, 0.3947, -0.9301], [0.5377, 0.0455, -0.2116, 0.5468]]]

Expected: [[[-2.3531, -0.1045, 0.4361, -0.994], [-2.1339, -0.0967, 0.3947, -0.9301], [0.5377, 0.0455, -0.2116, 0.5468]]]