import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Min71427 = tf.keras.layers.Input(shape=([2, 2, 2]))
in1Min71427 = tf.keras.layers.Input(shape=([2, 2, 2]))
in0Sub12967 = tf.keras.layers.Input(shape=([2, 2]))
in1Sub12967 = tf.keras.layers.Input(shape=([2, 2]))
in0Con24749 = tf.keras.layers.Input(shape=([6]))
in0Con10505 = tf.keras.layers.Input(shape=([8, 3, 7, 1]))
in0Min86141 = tf.keras.layers.Input(shape=([1, 1, 2, 2]))
in1Min86141 = tf.keras.layers.Input(shape=([1, 1, 2, 2]))

Min71427 = keras.layers.Minimum(name = 'Min71427', )([in0Min71427,in1Min71427])
Res91863 = keras.layers.Reshape((2, 4), name = 'Res91863', )(Min71427)
Fla66613 = keras.layers.Flatten(name = 'Fla66613', )(Res91863)
Sub12967 = keras.layers.Subtract(name = 'Sub12967', )([in0Sub12967,in1Sub12967])
Glo93201 = keras.layers.GlobalAveragePooling1D(name = 'Glo93201', )(Sub12967)
Con24749 = keras.layers.Concatenate(axis=1, name = 'Con24749', )([Glo93201,in0Con24749])
Ave42068 = keras.layers.Average(name = 'Ave42068', )([Fla66613,Con24749])
Res19153 = keras.layers.Reshape((8, 1), name = 'Res19153', )(Ave42068)
Res13704 = keras.layers.Reshape((8, 1, 1), name = 'Res13704', )(Res19153)
Res32362 = keras.layers.Reshape((8, 1, 1, 1), name = 'Res32362', )(Res13704)
Zer23915 = keras.layers.ZeroPadding3D(padding=((0, 0), (2, 0), (6, 0)), name = 'Zer23915', )(Res32362)
Con10505 = keras.layers.Concatenate(axis=4, name = 'Con10505', )([Zer23915,in0Con10505])
Min86141 = keras.layers.Minimum(name = 'Min86141', )([in0Min86141,in1Min86141])
Up_75431 = keras.layers.UpSampling3D(size=(1, 2, 2), name = 'Up_75431', )(Min86141)
Zer30622 = keras.layers.ZeroPadding3D(padding=((7, 0), (1, 0), (3, 0)), name = 'Zer30622', )(Up_75431)
Mul8160 = keras.layers.Multiply(name = 'Mul8160', )([Con10505,Zer30622])
model = tf.keras.models.Model(inputs=[in0Min71427,in1Min71427,in0Sub12967,in1Sub12967,in0Con24749,in0Con10505,in0Min86141,in1Min86141], outputs=Mul8160)
in0Min71427 = tf.constant([[[[0.7984, 0.4089], [0.026, 0.6268]], [[0.063, 0.2474], [0.8616, 0.9461]]]])
in1Min71427 = tf.constant([[[[0.5598, 0.4469], [0.912, 0.2073]], [[0.6172, 0.6981], [0.4449, 0.9916]]]])
in0Sub12967 = tf.constant([[[0.9143, 0.6525], [0.0038, 0.5724]]])
in1Sub12967 = tf.constant([[[0.8402, 0.097], [0.3856, 0.3696]]])
in0Con24749 = tf.constant([[0.7542, 0.3319, 0.158, 0.5856, 0.2076, 0.5948]])
in0Con10505 = tf.constant([[[[[0.0766], [0.5329], [0.4818], [0.7851], [0.5423], [0.5013], [0.064]], [[0.5686], [0.5361], [0.6084], [0.9117], [0.7142], [0.298], [0.5353]], [[0.1302], [0.8742], [0.4954], [0.5294], [0.3282], [0.1633], [0.9792]]], [[[0.8596], [0.6728], [0.4979], [0.1582], [0.5021], [0.2067], [0.183]], [[0.8475], [0.215], [0.4224], [0.563], [0.7931], [0.8574], [0.6969]], [[0.1386], [0.1994], [0.5353], [0.0844], [0.6703], [0.4951], [0.9155]]], [[[0.1329], [0.438], [0.2599], [0.8387], [0.8505], [0.0083], [0.7054]], [[0.1859], [0.678], [0.5714], [0.3533], [0.8002], [0.3425], [0.153]], [[0.5883], [0.1573], [0.7654], [0.7822], [0.573], [0.3844], [0.7759]]], [[[0], [0.6119], [0.1807], [0.2426], [0.9326], [0.4224], [0.167]], [[0.3766], [0.5185], [0.9309], [0.1993], [0.3824], [0.3817], [0.1513]], [[0.2251], [0.3379], [0.2699], [0.4186], [0.3299], [0.1686], [0.9423]]], [[[0.7583], [0.723], [0.8501], [0.882], [0.4461], [0.5495], [0.5173]], [[0.2331], [0.8837], [0.5748], [0.9916], [0.9204], [0.7562], [0.9905]], [[0.3448], [0.992], [0.0641], [0.8113], [0.5126], [0.8483], [0.0304]]], [[[0.5987], [0.6402], [0.167], [0.0725], [0.5302], [0.8], [0.0154]], [[0.995], [0.1589], [0.9548], [0.8527], [0.3159], [0.5594], [0.5563]], [[0.8697], [0.1653], [0.9395], [0.968], [0.3857], [0.5133], [0.2111]]], [[[0.9793], [0.8298], [0.5761], [0.4636], [0.0388], [0.1686], [0.1268]], [[0.7562], [0.4762], [0.5134], [0.0936], [0.1573], [0.9043], [0.0366]], [[0.2676], [0.4984], [0.1987], [0.2596], [0.1596], [0.8806], [0.9351]]], [[[0.2348], [0.0516], [0.5756], [0.9337], [0.1393], [0.0631], [0.595]], [[0.6069], [0.3208], [0.6248], [0.8692], [0.1339], [0.8927], [0.0883]], [[0.671], [0.0999], [0.5612], [0.3333], [0.6486], [0.1251], [0.4878]]]]])
in0Min86141 = tf.constant([[[[[0.843, 0.3475], [0.3407, 0.1533]]]]])
in1Min86141 = tf.constant([[[[[0.6316, 0.8056], [0.2021, 0.5388]]]]])
print (np.array2string(model.predict([in0Min71427,in1Min71427,in0Sub12967,in1Sub12967,in0Con24749,in0Con10505,in0Min86141,in1Min86141],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Mul8160.png')

LMin71427 = minimum_layer([[[[[0.7984, 0.4089], [0.026, 0.6268]], [[0.063, 0.2474], [0.8616, 0.9461]]]], [[[[0.5598, 0.4469], [0.912, 0.2073]], [[0.6172, 0.6981], [0.4449, 0.9916]]]]], Min71427), 
LRes91863 = reshape_layer(Min71427, [2, 4], Res91863), 
LFla66613 = flatten_layer(Res91863, Fla66613), 
LSub12967 = subtract_layer([[[0.9143, 0.6525], [0.0038, 0.5724]]], [[[0.8402, 0.097], [0.3856, 0.3696]]], Sub12967), 
LGlo93201 = global_average_pooling1D_layer(Sub12967, Glo93201), 
LCon24749 = concatenate_layer([Glo93201,[[0.7542, 0.3319, 0.158, 0.5856, 0.2076, 0.5948]]], 1, Con24749), 
LAve42068 = average_layer([Fla66613,Con24749], Ave42068), 
LRes19153 = reshape_layer(Ave42068, [8, 1], Res19153), 
LRes13704 = reshape_layer(Res19153, [8, 1, 1], Res13704), 
LRes32362 = reshape_layer(Res13704, [8, 1, 1, 1], Res32362), 
LZer23915 = zero_padding3D_layer(Res32362, 0, 0, 2, 0, 6, 0, Zer23915), 
LCon10505 = concatenate_layer([Zer23915,[[[[[0.0766], [0.5329], [0.4818], [0.7851], [0.5423], [0.5013], [0.064]], [[0.5686], [0.5361], [0.6084], [0.9117], [0.7142], [0.298], [0.5353]], [[0.1302], [0.8742], [0.4954], [0.5294], [0.3282], [0.1633], [0.9792]]], [[[0.8596], [0.6728], [0.4979], [0.1582], [0.5021], [0.2067], [0.183]], [[0.8475], [0.215], [0.4224], [0.563], [0.7931], [0.8574], [0.6969]], [[0.1386], [0.1994], [0.5353], [0.0844], [0.6703], [0.4951], [0.9155]]], [[[0.1329], [0.438], [0.2599], [0.8387], [0.8505], [0.0083], [0.7054]], [[0.1859], [0.678], [0.5714], [0.3533], [0.8002], [0.3425], [0.153]], [[0.5883], [0.1573], [0.7654], [0.7822], [0.573], [0.3844], [0.7759]]], [[[0], [0.6119], [0.1807], [0.2426], [0.9326], [0.4224], [0.167]], [[0.3766], [0.5185], [0.9309], [0.1993], [0.3824], [0.3817], [0.1513]], [[0.2251], [0.3379], [0.2699], [0.4186], [0.3299], [0.1686], [0.9423]]], [[[0.7583], [0.723], [0.8501], [0.882], [0.4461], [0.5495], [0.5173]], [[0.2331], [0.8837], [0.5748], [0.9916], [0.9204], [0.7562], [0.9905]], [[0.3448], [0.992], [0.0641], [0.8113], [0.5126], [0.8483], [0.0304]]], [[[0.5987], [0.6402], [0.167], [0.0725], [0.5302], [0.8], [0.0154]], [[0.995], [0.1589], [0.9548], [0.8527], [0.3159], [0.5594], [0.5563]], [[0.8697], [0.1653], [0.9395], [0.968], [0.3857], [0.5133], [0.2111]]], [[[0.9793], [0.8298], [0.5761], [0.4636], [0.0388], [0.1686], [0.1268]], [[0.7562], [0.4762], [0.5134], [0.0936], [0.1573], [0.9043], [0.0366]], [[0.2676], [0.4984], [0.1987], [0.2596], [0.1596], [0.8806], [0.9351]]], [[[0.2348], [0.0516], [0.5756], [0.9337], [0.1393], [0.0631], [0.595]], [[0.6069], [0.3208], [0.6248], [0.8692], [0.1339], [0.8927], [0.0883]], [[0.671], [0.0999], [0.5612], [0.3333], [0.6486], [0.1251], [0.4878]]]]]], 4, Con10505), 
LMin86141 = minimum_layer([[[[[[0.843, 0.3475], [0.3407, 0.1533]]]]], [[[[[0.6316, 0.8056], [0.2021, 0.5388]]]]]], Min86141), 
LUp_75431 = up_sampling3D_layer(Min86141, 1, 2, 2, Up_75431), 
LZer30622 = zero_padding3D_layer(Up_75431, 7, 0, 1, 0, 3, 0, Zer30622), 
LMul8160 = multiply_layer([Con10505,Zer30622], Mul8160), 
exec_layers([LMin71427,LRes91863,LFla66613,LSub12967,LGlo93201,LCon24749,LAve42068,LRes19153,LRes13704,LRes32362,LZer23915,LCon10505,LMin86141,LUp_75431,LZer30622,LMul8160],["Min71427","Res91863","Fla66613","Sub12967","Glo93201","Con24749","Ave42068","Res19153","Res13704","Res32362","Zer23915","Con10505","Min86141","Up_75431","Zer30622","Mul8160"],Mul8160,"Mul8160")

Actual (Unparsed): [[[[[0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000]], [[0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000]], [[0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000]]], [[[0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000]], [[0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000]], [[0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000]]], [[[0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000]], [[0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000]], [[0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000]]], [[[0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000]], [[0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000]], [[0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000]]], [[[0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000]], [[0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000]], [[0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000]]], [[[0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000]], [[0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000]], [[0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000]]], [[[0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000]], [[0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000]], [[0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000]]], [[[0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000]], [[0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.3020470], [0.0000000, 0.0465303], [0.0000000, 0.1368509], [0.0000000, 0.0135364]], [[0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.1158217], [0.0000000, 0.2253885], [0.0000000, 0.0191778], [0.1557079, 0.0747797]]]]]

Expected (Unparsed): [[[[[0,0.0],[0,0.0],[0,0.0],[0,0.0],[0,0.0],[0,0.0],[0,0.0]],[[0,0.0],[0,0.0],[0,0.0],[0,0.0],[0,0.0],[0,0.0],[0,0.0]],[[0,0.0],[0,0.0],[0,0.0],[0,0.0],[0,0.0],[0,0.0],[0.0,0.0]]],[[[0,0.0],[0,0.0],[0,0.0],[0,0.0],[0,0.0],[0,0.0],[0,0.0]],[[0,0.0],[0,0.0],[0,0.0],[0,0.0],[0,0.0],[0,0.0],[0,0.0]],[[0,0.0],[0,0.0],[0,0.0],[0,0.0],[0,0.0],[0,0.0],[0.0,0.0]]],[[[0,0.0],[0,0.0],[0,0.0],[0,0.0],[0,0.0],[0,0.0],[0,0.0]],[[0,0.0],[0,0.0],[0,0.0],[0,0.0],[0,0.0],[0,0.0],[0,0.0]],[[0,0.0],[0,0.0],[0,0.0],[0,0.0],[0,0.0],[0,0.0],[0.0,0.0]]],[[[0,0],[0,0.0],[0,0.0],[0,0.0],[0,0.0],[0,0.0],[0,0.0]],[[0,0.0],[0,0.0],[0,0.0],[0,0.0],[0,0.0],[0,0.0],[0,0.0]],[[0,0.0],[0,0.0],[0,0.0],[0,0.0],[0,0.0],[0,0.0],[0.0,0.0]]],[[[0,0.0],[0,0.0],[0,0.0],[0,0.0],[0,0.0],[0,0.0],[0,0.0]],[[0,0.0],[0,0.0],[0,0.0],[0,0.0],[0,0.0],[0,0.0],[0,0.0]],[[0,0.0],[0,0.0],[0,0.0],[0,0.0],[0,0.0],[0,0.0],[0.0,0.0]]],[[[0,0.0],[0,0.0],[0,0.0],[0,0.0],[0,0.0],[0,0.0],[0,0.0]],[[0,0.0],[0,0.0],[0,0.0],[0,0.0],[0,0.0],[0,0.0],[0,0.0]],[[0,0.0],[0,0.0],[0,0.0],[0,0.0],[0,0.0],[0,0.0],[0.0,0.0]]],[[[0,0.0],[0,0.0],[0,0.0],[0,0.0],[0,0.0],[0,0.0],[0,0.0]],[[0,0.0],[0,0.0],[0,0.0],[0,0.0],[0,0.0],[0,0.0],[0,0.0]],[[0,0.0],[0,0.0],[0,0.0],[0,0.0],[0,0.0],[0,0.0],[0.0,0.0]]],[[[0,0.0],[0,0.0],[0,0.0],[0,0.0],[0,0.0],[0,0.0],[0,0.0]],[[0,0.0],[0,0.0],[0,0.0],[0.0,0.30204699999999995],[0.0,0.046530249999999995],[0.0,0.13685091],[0.0,0.01353639]],[[0,0.0],[0,0.0],[0,0.0],[0.0,0.11582174999999999],[0.0,0.22538849999999996],[0.0,0.019177829999999996],[0.15570794500000001,0.07477974]]]]]

Actual:   [[[[[0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0]], [[0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0]], [[0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0]]], [[[0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0]], [[0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0]], [[0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0]]], [[[0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0]], [[0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0]], [[0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0]]], [[[0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0]], [[0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0]], [[0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0]]], [[[0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0]], [[0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0]], [[0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0]]], [[[0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0]], [[0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0]], [[0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0]]], [[[0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0]], [[0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0]], [[0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0]]], [[[0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0]], [[0, 0], [0, 0], [0, 0], [0, 0.3021], [0, 0.0466], [0, 0.1369], [0, 0.0136]], [[0, 0], [0, 0], [0, 0], [0, 0.1159], [0, 0.2254], [0, 0.0192], [0.1558, 0.0748]]]]]

Expected: [[[[[0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0]], [[0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0]], [[0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0]]], [[[0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0]], [[0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0]], [[0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0]]], [[[0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0]], [[0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0]], [[0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0]]], [[[0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0]], [[0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0]], [[0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0]]], [[[0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0]], [[0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0]], [[0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0]]], [[[0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0]], [[0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0]], [[0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0]]], [[[0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0]], [[0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0]], [[0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0]]], [[[0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0]], [[0, 0], [0, 0], [0, 0], [0, 0.3021], [0, 0.0466], [0, 0.1369], [0, 0.0136]], [[0, 0], [0, 0], [0, 0], [0, 0.1159], [0, 0.2254], [0, 0.0192], [0.1558, 0.0748]]]]]