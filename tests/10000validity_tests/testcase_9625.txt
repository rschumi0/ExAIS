import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Add36711 = tf.keras.layers.Input(shape=([2, 2]))
in1Add36711 = tf.keras.layers.Input(shape=([2, 2]))

Add36711 = keras.layers.Add(name = 'Add36711', )([in0Add36711,in1Add36711])
Res88210 = keras.layers.Reshape((2, 2, 1), name = 'Res88210', )(Add36711)
Res93619 = keras.layers.Reshape((2, 2, 1, 1), name = 'Res93619', )(Res88210)
Con55247 = keras.layers.Conv3DTranspose(2, (1, 2, 1),strides=(1, 1, 5), padding='valid', name = 'Con55247', )(Res93619)
model = tf.keras.models.Model(inputs=[in0Add36711,in1Add36711], outputs=Con55247)
w = model.get_layer('Con55247').get_weights() 
w[0] = np.array([[[[[0.2445], [0.3459]]], [[[0.8363], [0.4228]]]]])
w[1] = np.array([0, 0])
model.get_layer('Con55247').set_weights(w) 
in0Add36711 = tf.constant([[[0.2936, 0.3923], [0.0434, 0.7147]]])
in1Add36711 = tf.constant([[[0.1296, 0.2665], [0.3683, 0.855]]])
print (np.array2string(model.predict([in0Add36711,in1Add36711],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Con55247.png')

LAdd36711 = add_layer([[[[0.2936, 0.3923], [0.0434, 0.7147]]], [[[0.1296, 0.2665], [0.3683, 0.855]]]], Add36711), 
LRes88210 = reshape_layer(Add36711, [2, 2, 1], Res88210), 
LRes93619 = reshape_layer(Res88210, [2, 2, 1, 1], Res93619), 
LCon55247 = conv3D_transpose_layer(Res93619, 1, 2, 1,[[[[[0.2445], [0.3459]]], [[[0.8363], [0.4228]]]]],[0, 0], 1, 1, 5, false, Con55247), 
exec_layers([LAdd36711,LRes88210,LRes93619,LCon55247],["Add36711","Res88210","Res93619","Con55247"],Con55247,"Con55247")

Actual (Unparsed): [[[[[0.1034724, 0.1463849], [0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000]], [[0.5149988, 0.4068079], [0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000]], [[0.5509544, 0.2785406], [0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000]]], [[[0.1006606, 0.1424070], [0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000]], [[0.7280964, 0.7170260], [0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000]], [[1.3127401, 0.6636692], [0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000]]]]]

Expected (Unparsed): [[[[[0.1034724,0.14638488],[0,0],[0,0],[0,0],[0,0]],[[0.5149987600000001,0.40680788],[0,0],[0,0],[0,0],[0,0]],[[0.55095444,0.27854064],[0,0],[0,0],[0,0],[0,0]]],[[[0.10066065,0.14240703],[0,0],[0,0],[0,0],[0,0]],[[0.7280963600000001,0.71702599],[0,0],[0,0],[0,0],[0,0]],[[1.3127401100000002,0.6636691600000001],[0,0],[0,0],[0,0],[0,0]]]]]

Actual:   [[[[[0.1035, 0.1464], [0, 0], [0, 0], [0, 0], [0, 0]], [[0.515, 0.4069], [0, 0], [0, 0], [0, 0], [0, 0]], [[0.551, 0.2786], [0, 0], [0, 0], [0, 0], [0, 0]]], [[[0.1007, 0.1425], [0, 0], [0, 0], [0, 0], [0, 0]], [[0.7281, 0.7171], [0, 0], [0, 0], [0, 0], [0, 0]], [[1.3128, 0.6637], [0, 0], [0, 0], [0, 0], [0, 0]]]]]

Expected: [[[[[0.1035, 0.1464], [0, 0], [0, 0], [0, 0], [0, 0]], [[0.515, 0.4069], [0, 0], [0, 0], [0, 0], [0, 0]], [[0.551, 0.2786], [0, 0], [0, 0], [0, 0], [0, 0]]], [[[0.1007, 0.1425], [0, 0], [0, 0], [0, 0], [0, 0]], [[0.7281, 0.7171], [0, 0], [0, 0], [0, 0], [0, 0]], [[1.3128, 0.6637], [0, 0], [0, 0], [0, 0], [0, 0]]]]]