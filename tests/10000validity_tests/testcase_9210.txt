import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Max33772 = tf.keras.layers.Input(shape=([2, 1]))
in1Max33772 = tf.keras.layers.Input(shape=([2, 1]))
in0Con97227 = tf.keras.layers.Input(shape=([4, 3]))
in0Sub37429 = tf.keras.layers.Input(shape=([3, 2, 3]))
in1Sub37429 = tf.keras.layers.Input(shape=([3, 2, 3]))
in0Mul5320 = tf.keras.layers.Input(shape=([2, 2, 2]))
in1Mul5320 = tf.keras.layers.Input(shape=([2, 2, 2]))

Max33772 = keras.layers.Maximum(name = 'Max33772', )([in0Max33772,in1Max33772])
Zer16926 = keras.layers.ZeroPadding1D(padding=((2, 0)), name = 'Zer16926', )(Max33772)
Con97227 = keras.layers.Concatenate(axis=2, name = 'Con97227', )([Zer16926,in0Con97227])
Sub37429 = keras.layers.Subtract(name = 'Sub37429', )([in0Sub37429,in1Sub37429])
Cro27569 = keras.layers.Cropping2D(cropping=((1, 0), (0, 0)), name = 'Cro27569', )(Sub37429)
Res33708 = keras.layers.Reshape((2, 6), name = 'Res33708', )(Cro27569)
Con30051 = keras.layers.Conv1D(4, (1),strides=(10), padding='valid', dilation_rate=(1), name = 'Con30051', )(Res33708)
Zer60283 = keras.layers.ZeroPadding1D(padding=((3, 0)), name = 'Zer60283', )(Con30051)
Mul5320 = keras.layers.Multiply(name = 'Mul5320', )([in0Mul5320,in1Mul5320])
Res64674 = keras.layers.Reshape((2, 4), name = 'Res64674', )(Mul5320)
Up_23124 = keras.layers.UpSampling1D(size=(2), name = 'Up_23124', )(Res64674)
Max1855 = keras.layers.Maximum(name = 'Max1855', )([Zer60283,Up_23124])
Mul25915 = keras.layers.Multiply(name = 'Mul25915', )([Con97227,Max1855])
model = tf.keras.models.Model(inputs=[in0Max33772,in1Max33772,in0Con97227,in0Sub37429,in1Sub37429,in0Mul5320,in1Mul5320], outputs=Mul25915)
w = model.get_layer('Con30051').get_weights() 
w[0] = np.array([[[0.4334, 0.1987, 0.3452, 0.1356], [0.251, 0.5847, 0.664, 0.4128], [0.9454, 0.164, 0.5304, 0.6326], [0.9042, 0.329, 0.8354, 0.1298], [0.8189, 0.9681, 0.2902, 0.2915], [0.7083, 0.34, 0.7115, 0.7879]]])
w[1] = np.array([0, 0, 0, 0])
model.get_layer('Con30051').set_weights(w) 
in0Max33772 = tf.constant([[[0.6472], [0.4602]]])
in1Max33772 = tf.constant([[[0.2928], [0.0159]]])
in0Con97227 = tf.constant([[[0.851, 0.135, 0.6848], [0.2165, 0.5401, 0.9214], [0.6652, 0.0154, 0.5121], [0.6696, 0.1655, 0.9952]]])
in0Sub37429 = tf.constant([[[[0.8362, 0.0963, 0.949], [0.0991, 0.9701, 0.614]], [[0.8744, 0.8608, 0.5136], [0.6238, 0.1803, 0.6936]], [[0.7242, 0.7413, 0.6174], [0.9537, 0.4051, 0.3496]]]])
in1Sub37429 = tf.constant([[[[0.7452, 0.2786, 0.7609], [0.2715, 0.2177, 0.8735]], [[0.279, 0.8555, 0.4525], [0.8743, 0.165, 0.1587]], [[0.0122, 0.6435, 0.6236], [0.4891, 0.742, 0.5232]]]])
in0Mul5320 = tf.constant([[[[0.1966, 0.563], [0.0798, 0.1309]], [[0.4432, 0.9261], [0.9832, 0.7613]]]])
in1Mul5320 = tf.constant([[[[0.4792, 0.0885], [0.6026, 0.8363]], [[0.2818, 0.0344], [0.1696, 0.6293]]]])
print (np.array2string(model.predict([in0Max33772,in1Max33772,in0Con97227,in0Sub37429,in1Sub37429,in0Mul5320,in1Mul5320],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Mul25915.png')

LMax33772 = maximum_layer([[[[0.6472], [0.4602]]], [[[0.2928], [0.0159]]]], Max33772), 
LZer16926 = zero_padding1D_layer(Max33772, 2, 0, Zer16926), 
LCon97227 = concatenate_layer([Zer16926,[[[0.851, 0.135, 0.6848], [0.2165, 0.5401, 0.9214], [0.6652, 0.0154, 0.5121], [0.6696, 0.1655, 0.9952]]]], 2, Con97227), 
LSub37429 = subtract_layer([[[[0.8362, 0.0963, 0.949], [0.0991, 0.9701, 0.614]], [[0.8744, 0.8608, 0.5136], [0.6238, 0.1803, 0.6936]], [[0.7242, 0.7413, 0.6174], [0.9537, 0.4051, 0.3496]]]], [[[[0.7452, 0.2786, 0.7609], [0.2715, 0.2177, 0.8735]], [[0.279, 0.8555, 0.4525], [0.8743, 0.165, 0.1587]], [[0.0122, 0.6435, 0.6236], [0.4891, 0.742, 0.5232]]]], Sub37429), 
LCro27569 = cropping2D_layer(Sub37429, 1, 0, 0, 0, Cro27569), 
LRes33708 = reshape_layer(Cro27569, [2, 6], Res33708), 
LCon30051 = conv1D_layer(Res33708, 1,[[[0.4334, 0.1987, 0.3452, 0.1356], [0.251, 0.5847, 0.664, 0.4128], [0.9454, 0.164, 0.5304, 0.6326], [0.9042, 0.329, 0.8354, 0.1298], [0.8189, 0.9681, 0.2902, 0.2915], [0.7083, 0.34, 0.7115, 0.7879]]],[0, 0, 0, 0], 10, false, 1, Con30051), 
LZer60283 = zero_padding1D_layer(Con30051, 3, 0, Zer60283), 
LMul5320 = multiply_layer([[[[[0.1966, 0.563], [0.0798, 0.1309]], [[0.4432, 0.9261], [0.9832, 0.7613]]]], [[[[0.4792, 0.0885], [0.6026, 0.8363]], [[0.2818, 0.0344], [0.1696, 0.6293]]]]], Mul5320), 
LRes64674 = reshape_layer(Mul5320, [2, 4], Res64674), 
LUp_23124 = up_sampling1D_layer(Res64674, 2, Up_23124), 
LMax1855 = maximum_layer([Zer60283,Up_23124], Max1855), 
LMul25915 = multiply_layer([Con97227,Max1855], Mul25915), 
exec_layers([LMax33772,LZer16926,LCon97227,LSub37429,LCro27569,LRes33708,LCon30051,LZer60283,LMul5320,LRes64674,LUp_23124,LMax1855,LMul25915],["Max33772","Zer16926","Con97227","Sub37429","Cro27569","Res33708","Con30051","Zer60283","Mul5320","Res64674","Up_23124","Max1855","Mul25915"],Mul25915,"Mul25915")

Actual (Unparsed): [[[0.0000000, 0.0424015, 0.0064918, 0.0749662], [0.0000000, 0.0107872, 0.0259720, 0.1008672], [0.0808312, 0.0211918, 0.0025680, 0.2453400], [0.2218336, 0.1645132, 0.0690487, 0.5124969]]]

Expected (Unparsed): [[[0.0,0.042401500499999994,0.006491809800000001,0.074966199616],[0.0,0.010787220749999998,0.025972047948000003,0.10086719673799999],[0.08083124147199999,0.021191835168,0.0025679610879999998,0.24533998668899998],[0.22183358386799998,0.16451316691199996,0.06904865716499999,0.5124968502399999]]]

Actual:   [[[0, 0.0425, 0.0065, 0.075], [0, 0.0108, 0.026, 0.1009], [0.0809, 0.0212, 0.0026, 0.2454], [0.2219, 0.1646, 0.0691, 0.5125]]]

Expected: [[[0, 0.0425, 0.0065, 0.075], [0, 0.0108, 0.026, 0.1009], [0.0809, 0.0212, 0.0026, 0.2454], [0.2219, 0.1646, 0.0691, 0.5125]]]