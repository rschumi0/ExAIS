import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Dot37174 = tf.keras.layers.Input(shape=([2, 2]))
in1Dot37174 = tf.keras.layers.Input(shape=([2, 2]))
in0Con53216 = tf.keras.layers.Input(shape=([2, 2]))
in0Max92935 = tf.keras.layers.Input(shape=([2, 2, 2]))

Dot37174 = keras.layers.Dot(axes=(1, 2), name = 'Dot37174', )([in0Dot37174,in1Dot37174])
Con53216 = keras.layers.Concatenate(axis=2, name = 'Con53216', )([Dot37174,in0Con53216])
Max92935 = keras.layers.MaxPool2D(pool_size=(2, 1), name = 'Max92935', )(in0Max92935)
Res43597 = keras.layers.Reshape((1, 4), name = 'Res43597', )(Max92935)
Cro26584 = keras.layers.Cropping1D(cropping=((0, 0)), name = 'Cro26584', )(Res43597)
Zer82713 = keras.layers.ZeroPadding1D(padding=((1, 0)), name = 'Zer82713', )(Cro26584)
Min41475 = keras.layers.Minimum(name = 'Min41475', )([Con53216,Zer82713])
Sim26030 = keras.layers.SimpleRNN(2,name = 'Sim26030', )(Min41475)
model = tf.keras.models.Model(inputs=[in0Dot37174,in1Dot37174,in0Con53216,in0Max92935], outputs=Sim26030)
w = model.get_layer('Sim26030').get_weights() 
w[0] = np.array([[4, 1], [3, 6], [10, 7], [8, 5]])
w[1] = np.array([[7, 5], [1, 5]])
w[2] = np.array([8, 1])
model.get_layer('Sim26030').set_weights(w) 
in0Dot37174 = tf.constant([[[0.0947, 0.5989], [0.2991, 0.7073]]])
in1Dot37174 = tf.constant([[[0.5904, 0.4213], [0.7701, 0.8118]]])
in0Con53216 = tf.constant([[[0.7558, 0.1241], [0.751, 0.6802]]])
in0Max92935 = tf.constant([[[[1.0606, 1.2769], [1.3978, 1.3811]], [[1.8896, 1.0705], [1.4122, 1.1719]]]])
print (np.array2string(model.predict([in0Dot37174,in1Dot37174,in0Con53216,in0Max92935],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Sim26030.png')

LDot37174 = dot_layer([[[0.0947, 0.5989], [0.2991, 0.7073]]], [[[0.5904, 0.4213], [0.7701, 0.8118]]], 1, 2, Dot37174), 
LCon53216 = concatenate_layer([Dot37174,[[[0.7558, 0.1241], [0.751, 0.6802]]]], 2, Con53216), 
LMax92935 = max_pool2D_layer([[[[1.0606, 1.2769], [1.3978, 1.3811]], [[1.8896, 1.0705], [1.4122, 1.1719]]]], 2, 1, Max92935), 
LRes43597 = reshape_layer(Max92935, [1, 4], Res43597), 
LCro26584 = cropping1D_layer(Res43597, 0, 0, Cro26584), 
LZer82713 = zero_padding1D_layer(Cro26584, 1, 0, Zer82713), 
LMin41475 = minimum_layer([Con53216,Zer82713], Min41475), 
LSim26030 = simple_rnn_layer(Min41475,[[4, 1], [3, 6], [10, 7], [8, 5]],[[7, 5], [1, 5]],[8, 1], Sim26030), 
exec_layers([LDot37174,LCon53216,LMax92935,LRes43597,LCro26584,LZer82713,LMin41475,LSim26030],["Dot37174","Con53216","Max92935","Res43597","Cro26584","Zer82713","Min41475","Sim26030"],Sim26030,"Sim26030")

Actual (Unparsed): [[1.0000000, 1.0000000]]

Expected (Unparsed): [[1.0,1.0]]

Actual:   [[1, 1]]

Expected: [[1, 1]]