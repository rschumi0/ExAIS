import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Max18671 = tf.keras.layers.Input(shape=([1, 2]))
in1Max18671 = tf.keras.layers.Input(shape=([1, 2]))

Max18671 = keras.layers.Maximum(name = 'Max18671', )([in0Max18671,in1Max18671])
Sim21891 = keras.layers.SimpleRNN(3,name = 'Sim21891', )(Max18671)
Res18917 = keras.layers.Reshape((3, 1), name = 'Res18917', )(Sim21891)
Res47751 = keras.layers.Reshape((3, 1, 1), name = 'Res47751', )(Res18917)
Res82707 = keras.layers.Reshape((3, 1, 1, 1), name = 'Res82707', )(Res47751)
Up_15941 = keras.layers.UpSampling3D(size=(2, 1, 2), name = 'Up_15941', )(Res82707)
model = tf.keras.models.Model(inputs=[in0Max18671,in1Max18671], outputs=Up_15941)
w = model.get_layer('Sim21891').get_weights() 
w[0] = np.array([[7, 4, 4], [2, 8, 5]])
w[1] = np.array([[6, 3, 4], [7, 4, 8], [4, 9, 6]])
w[2] = np.array([9, 8, 6])
model.get_layer('Sim21891').set_weights(w) 
in0Max18671 = tf.constant([[[0.9254, 0.1302]]])
in1Max18671 = tf.constant([[[0.4392, 0.7758]]])
print (np.array2string(model.predict([in0Max18671,in1Max18671],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Up_15941.png')

LMax18671 = maximum_layer([[[[0.9254, 0.1302]]], [[[0.4392, 0.7758]]]], Max18671), 
LSim21891 = simple_rnn_layer(Max18671,[[7, 4, 4], [2, 8, 5]],[[6, 3, 4], [7, 4, 8], [4, 9, 6]],[9, 8, 6], Sim21891), 
LRes18917 = reshape_layer(Sim21891, [3, 1], Res18917), 
LRes47751 = reshape_layer(Res18917, [3, 1, 1], Res47751), 
LRes82707 = reshape_layer(Res47751, [3, 1, 1, 1], Res82707), 
LUp_15941 = up_sampling3D_layer(Res82707, 2, 1, 2, Up_15941), 
exec_layers([LMax18671,LSim21891,LRes18917,LRes47751,LRes82707,LUp_15941],["Max18671","Sim21891","Res18917","Res47751","Res82707","Up_15941"],Up_15941,"Up_15941")

Actual (Unparsed): [[[[[1.0000000], [1.0000000]]], [[[1.0000000], [1.0000000]]], [[[1.0000000], [1.0000000]]], [[[1.0000000], [1.0000000]]], [[[1.0000000], [1.0000000]]], [[[1.0000000], [1.0000000]]]]]

Expected (Unparsed): [[[[[0.9999999999999968],[0.9999999999999968]]],[[[0.9999999999999968],[0.9999999999999968]]],[[[0.9999999999999994],[0.9999999999999994]]],[[[0.9999999999999994],[0.9999999999999994]]],[[[0.9999999999968006],[0.9999999999968006]]],[[[0.9999999999968006],[0.9999999999968006]]]]]

Actual:   [[[[[1], [1]]], [[[1], [1]]], [[[1], [1]]], [[[1], [1]]], [[[1], [1]]], [[[1], [1]]]]]

Expected: [[[[[1], [1]]], [[[1], [1]]], [[[1], [1]]], [[[1], [1]]], [[[1], [1]]], [[[1], [1]]]]]