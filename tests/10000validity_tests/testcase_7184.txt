import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Max46932 = tf.keras.layers.Input(shape=([1, 2]))
in0Con95458 = tf.keras.layers.Input(shape=([1, 1]))
in0Cro98439 = tf.keras.layers.Input(shape=([1, 1, 2]))
in0Con8398 = tf.keras.layers.Input(shape=([1, 22]))
in0Dot75531 = tf.keras.layers.Input(shape=([2, 2]))
in1Dot75531 = tf.keras.layers.Input(shape=([2, 2]))
in0Con12926 = tf.keras.layers.Input(shape=([3, 8, 2]))
in0Up_64826 = tf.keras.layers.Input(shape=([3, 4, 3]))

Max46932 = keras.layers.MaxPool1D(pool_size=(1), name = 'Max46932', )(in0Max46932)
Con95458 = keras.layers.Concatenate(axis=2, name = 'Con95458', )([Max46932,in0Con95458])
Cro98439 = keras.layers.Cropping2D(cropping=((0, 0), (0, 0)), name = 'Cro98439', )(in0Cro98439)
Res60239 = keras.layers.Reshape((1, 2), name = 'Res60239', )(Cro98439)
Con8398 = keras.layers.Concatenate(axis=2, name = 'Con8398', )([Res60239,in0Con8398])
Dot75531 = keras.layers.Dot(axes=(2, 1), name = 'Dot75531', )([in0Dot75531,in1Dot75531])
Res81539 = keras.layers.Reshape((2, 2, 1), name = 'Res81539', )(Dot75531)
Zer47737 = keras.layers.ZeroPadding2D(padding=((1, 0), (6, 0)), name = 'Zer47737', )(Res81539)
Con12926 = keras.layers.Concatenate(axis=3, name = 'Con12926', )([Zer47737,in0Con12926])
Up_64826 = keras.layers.UpSampling2D(size=(1, 2), name = 'Up_64826', )(in0Up_64826)
Lay93918 = keras.layers.LayerNormalization(axis=1, epsilon=1.7345721240404115, name = 'Lay93918', )(Up_64826)
Max53436 = keras.layers.Maximum(name = 'Max53436', )([Con12926,Lay93918])
Res71476 = keras.layers.Reshape((3, 24), name = 'Res71476', )(Max53436)
Dot73907 = keras.layers.Dot(axes=(2, 2), name = 'Dot73907', )([Con8398,Res71476])
Ave22557 = keras.layers.Average(name = 'Ave22557', )([Con95458,Dot73907])
model = tf.keras.models.Model(inputs=[in0Max46932,in0Con95458,in0Cro98439,in0Con8398,in0Dot75531,in1Dot75531,in0Con12926,in0Up_64826], outputs=Ave22557)
in0Max46932 = tf.constant([[[1.2446, 1.6301]]])
in0Con95458 = tf.constant([[[0.2674]]])
in0Cro98439 = tf.constant([[[[1.0957, 1.8166]]]])
in0Con8398 = tf.constant([[[0.6048, 0.7082, 0.0506, 0.7244, 0.5206, 0.3619, 0.445, 0.1138, 0.428, 0.196, 0.7197, 0.0872, 0.5648, 0.2216, 0.9396, 0.6337, 0.4932, 0.0314, 0.6847, 0.6587, 0.5087, 0.7532]]])
in0Dot75531 = tf.constant([[[0.7635, 0.1026], [0.8051, 0.3102]]])
in1Dot75531 = tf.constant([[[0.8334, 0.2702], [0.8537, 0.4633]]])
in0Con12926 = tf.constant([[[[0.5098, 0.2854], [0.7539, 0.7568], [0.4745, 0.6725], [0.9963, 0.7306], [0.1425, 0.5687], [0.1921, 0.7671], [0.5888, 0.0293], [0.8951, 0.1162]], [[0.317, 0.1718], [0.8712, 0.9686], [0.1562, 0.7307], [0.3338, 0.95], [0.5941, 0.6851], [0.2099, 0.3995], [0.5759, 0.4194], [0.0592, 0.5335]], [[0.3711, 0.3584], [0.7358, 0.6019], [0.7109, 0.7909], [0.8669, 0.9221], [0.0345, 0.6374], [0.7563, 0.2429], [0.3456, 0.2514], [0.3695, 0.2312]]]])
in0Up_64826 = tf.constant([[[[1.4528, 1.4895, 1.9652], [1.905, 1.4665, 1.4756], [1.9075, 1.7684, 1.6416], [1.3976, 1.6831, 1.8576]], [[1.0386, 1.1584, 1.5695], [1.908, 1.8856, 1.7855], [1.4527, 1.7784, 1.2709], [1.1307, 1.3954, 1.6973]], [[1.0986, 1.6191, 1.3996], [1.7482, 1.9217, 1.6211], [1.8853, 1.6221, 1.4582], [1.1288, 1.4877, 1.2946]]]])
print (np.array2string(model.predict([in0Max46932,in0Con95458,in0Cro98439,in0Con8398,in0Dot75531,in1Dot75531,in0Con12926,in0Up_64826],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Ave22557.png')

LMax46932 = max_pool1D_layer([[[1.2446, 1.6301]]], 1, Max46932), 
LCon95458 = concatenate_layer([Max46932,[[[0.2674]]]], 2, Con95458), 
LCro98439 = cropping2D_layer([[[[1.0957, 1.8166]]]], 0, 0, 0, 0, Cro98439), 
LRes60239 = reshape_layer(Cro98439, [1, 2], Res60239), 
LCon8398 = concatenate_layer([Res60239,[[[0.6048, 0.7082, 0.0506, 0.7244, 0.5206, 0.3619, 0.445, 0.1138, 0.428, 0.196, 0.7197, 0.0872, 0.5648, 0.2216, 0.9396, 0.6337, 0.4932, 0.0314, 0.6847, 0.6587, 0.5087, 0.7532]]]], 2, Con8398), 
LDot75531 = dot_layer([[[0.7635, 0.1026], [0.8051, 0.3102]]], [[[0.8334, 0.2702], [0.8537, 0.4633]]], 2, 1, Dot75531), 
LRes81539 = reshape_layer(Dot75531, [2, 2, 1], Res81539), 
LZer47737 = zero_padding2D_layer(Res81539, 1, 0, 6, 0, Zer47737), 
LCon12926 = concatenate_layer([Zer47737,[[[[0.5098, 0.2854], [0.7539, 0.7568], [0.4745, 0.6725], [0.9963, 0.7306], [0.1425, 0.5687], [0.1921, 0.7671], [0.5888, 0.0293], [0.8951, 0.1162]], [[0.317, 0.1718], [0.8712, 0.9686], [0.1562, 0.7307], [0.3338, 0.95], [0.5941, 0.6851], [0.2099, 0.3995], [0.5759, 0.4194], [0.0592, 0.5335]], [[0.3711, 0.3584], [0.7358, 0.6019], [0.7109, 0.7909], [0.8669, 0.9221], [0.0345, 0.6374], [0.7563, 0.2429], [0.3456, 0.2514], [0.3695, 0.2312]]]]], 3, Con12926), 
LUp_64826 = up_sampling2D_layer([[[[1.4528, 1.4895, 1.9652], [1.905, 1.4665, 1.4756], [1.9075, 1.7684, 1.6416], [1.3976, 1.6831, 1.8576]], [[1.0386, 1.1584, 1.5695], [1.908, 1.8856, 1.7855], [1.4527, 1.7784, 1.2709], [1.1307, 1.3954, 1.6973]], [[1.0986, 1.6191, 1.3996], [1.7482, 1.9217, 1.6211], [1.8853, 1.6221, 1.4582], [1.1288, 1.4877, 1.2946]]]], 1, 2, Up_64826), 
LLay93918 = layer_normalization_layer(Up_64826, 1, 1.7345721240404115, Lay93918), 
LMax53436 = maximum_layer([Con12926,Lay93918], Max53436), 
LRes71476 = reshape_layer(Max53436, [3, 24], Res71476), 
LDot73907 = dot_layer(Con8398,Res71476, 2, 2, Dot73907), 
LAve22557 = average_layer([Con95458,Dot73907], Ave22557), 
exec_layers([LMax46932,LCon95458,LCro98439,LRes60239,LCon8398,LDot75531,LRes81539,LZer47737,LCon12926,LUp_64826,LLay93918,LMax53436,LRes71476,LDot73907,LAve22557],["Max46932","Con95458","Cro98439","Res60239","Con8398","Dot75531","Res81539","Zer47737","Con12926","Up_64826","Lay93918","Max53436","Res71476","Dot73907","Ave22557"],Ave22557,"Ave22557")

Actual (Unparsed): [[[3.1716278, 2.9715044, 2.6806172]]]

Expected (Unparsed): [[[3.171627781459592,2.9715044399627013,2.6806171748699477]]]

Actual:   [[[3.1717, 2.9716, 2.6807]]]

Expected: [[[3.1717, 2.9716, 2.6807]]]