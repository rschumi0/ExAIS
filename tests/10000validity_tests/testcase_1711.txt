import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Sim66513 = tf.keras.layers.Input(shape=([3, 2]))

Sim66513 = keras.layers.SimpleRNN(3,name = 'Sim66513', )(in0Sim66513)
Mas10658 = keras.layers.Masking(mask_value=2, name = 'Mas10658', )(Sim66513)
ReL42576 = keras.layers.ReLU(max_value=7.281353197156964, negative_slope=7.8057389931173145, threshold=9.96672965867405, name = 'ReL42576', )(Mas10658)
model = tf.keras.models.Model(inputs=[in0Sim66513], outputs=ReL42576)
w = model.get_layer('Sim66513').get_weights() 
w[0] = np.array([[5, 8, 4], [10, 5, 4]])
w[1] = np.array([[4, 8, 9], [7, 9, 5], [10, 6, 4]])
w[2] = np.array([2, 9, 2])
model.get_layer('Sim66513').set_weights(w) 
in0Sim66513 = tf.constant([[[5, 8], [7, 6], [8, 10]]])
print (np.array2string(model.predict([in0Sim66513],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='ReL42576.png')

LSim66513 = simple_rnn_layer([[[5, 8], [7, 6], [8, 10]]],[[5, 8, 4], [10, 5, 4]],[[4, 8, 9], [7, 9, 5], [10, 6, 4]],[2, 9, 2], Sim66513), 
LMas10658 = masking_layer(Sim66513, 2, Mas10658), 
LReL42576 = relu_layer(Mas10658, 7.281353197156964, 7.8057389931173145, 9.96672965867405, ReL42576), 
exec_layers([LSim66513,LMas10658,LReL42576],["Sim66513","Mas10658","ReL42576"],ReL42576,"ReL42576")

Actual (Unparsed): [[-69.9919513, -69.9919513, -69.9919513]]

Expected (Unparsed): [[-69.99195133745353,-69.99195133745353,-69.99195133745353]]

Actual:   [[-69.9919, -69.9919, -69.9919]]

Expected: [[-69.9919, -69.9919, -69.9919]]