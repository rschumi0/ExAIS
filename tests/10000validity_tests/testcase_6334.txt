import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Add66810 = tf.keras.layers.Input(shape=([2, 2, 1, 2]))
in1Add66810 = tf.keras.layers.Input(shape=([2, 2, 1, 2]))
in0Dep83430 = tf.keras.layers.Input(shape=([1, 1, 1]))
in0Con98703 = tf.keras.layers.Input(shape=([2, 2, 1]))
in0Dot18859 = tf.keras.layers.Input(shape=([3]))
in1Dot18859 = tf.keras.layers.Input(shape=([3]))
in0Dot35881 = tf.keras.layers.Input(shape=([2]))
in1Dot35881 = tf.keras.layers.Input(shape=([2]))
in0Con73971 = tf.keras.layers.Input(shape=([15]))

Add66810 = keras.layers.Add(name = 'Add66810', )([in0Add66810,in1Add66810])
Res89600 = keras.layers.Reshape((2, 2, 2), name = 'Res89600', )(Add66810)
Dep83430 = keras.layers.DepthwiseConv2D((1, 1),strides=(1, 1), padding='valid', name = 'Dep83430', )(in0Dep83430)
Zer74662 = keras.layers.ZeroPadding2D(padding=((1, 0), (1, 0)), name = 'Zer74662', )(Dep83430)
Con98703 = keras.layers.Concatenate(axis=3, name = 'Con98703', )([Zer74662,in0Con98703])
Sub97652 = keras.layers.Subtract(name = 'Sub97652', )([Res89600,Con98703])
Res57974 = keras.layers.Reshape((2, 2, 2, 1), name = 'Res57974', )(Sub97652)
Up_53648 = keras.layers.UpSampling3D(size=(1, 1, 2), name = 'Up_53648', )(Res57974)
Res67936 = keras.layers.Reshape((2, 2, 4), name = 'Res67936', )(Up_53648)
Res91148 = keras.layers.Reshape((2, 8), name = 'Res91148', )(Res67936)
Fla57204 = keras.layers.Flatten(name = 'Fla57204', )(Res91148)
Dot18859 = keras.layers.Dot(axes=(1, 1), name = 'Dot18859', )([in0Dot18859,in1Dot18859])
Dot35881 = keras.layers.Dot(axes=(1, 1), name = 'Dot35881', )([in0Dot35881,in1Dot35881])
Mul49894 = keras.layers.Multiply(name = 'Mul49894', )([Dot18859,Dot35881])
Res72695 = keras.layers.Reshape((1, 1), name = 'Res72695', )(Mul49894)
Glo11160 = keras.layers.GlobalMaxPool1D(name = 'Glo11160', )(Res72695)
Con73971 = keras.layers.Concatenate(axis=1, name = 'Con73971', )([Glo11160,in0Con73971])
Mul8180 = keras.layers.Multiply(name = 'Mul8180', )([Fla57204,Con73971])
model = tf.keras.models.Model(inputs=[in0Add66810,in1Add66810,in0Dep83430,in0Con98703,in0Dot18859,in1Dot18859,in0Dot35881,in1Dot35881,in0Con73971], outputs=Mul8180)
w = model.get_layer('Dep83430').get_weights() 
w[0] = np.array([[[[0.8693]]]])
w[1] = np.array([0])
model.get_layer('Dep83430').set_weights(w) 
in0Add66810 = tf.constant([[[[[0.43, 0.1255]], [[0.1282, 0.6326]]], [[[0.6283, 0.1792]], [[0.9998, 0.2242]]]]])
in1Add66810 = tf.constant([[[[[0.1369, 0.479]], [[0.0772, 0.8888]]], [[[0.5666, 0.4269]], [[0.6163, 0.8414]]]]])
in0Dep83430 = tf.constant([[[[0.0214]]]])
in0Con98703 = tf.constant([[[[0.4514], [0.0064]], [[0.1421], [0.1221]]]])
in0Dot18859 = tf.constant([[0.7119, 0.0792, 0.2669]])
in1Dot18859 = tf.constant([[0.9234, 0.838, 0.633]])
in0Dot35881 = tf.constant([[0.4751, 0.2243]])
in1Dot35881 = tf.constant([[0.6123, 0.7314]])
in0Con73971 = tf.constant([[0.828, 0.3809, 0.2176, 0.1639, 0.4107, 0.923, 0.1336, 0.8264, 0.8429, 0.4942, 0.809, 0.6155, 0.8798, 0.4073, 0.3354]])
print (np.array2string(model.predict([in0Add66810,in1Add66810,in0Dep83430,in0Con98703,in0Dot18859,in1Dot18859,in0Dot35881,in1Dot35881,in0Con73971],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Mul8180.png')

LAdd66810 = add_layer([[[[[[0.43, 0.1255]], [[0.1282, 0.6326]]], [[[0.6283, 0.1792]], [[0.9998, 0.2242]]]]], [[[[[0.1369, 0.479]], [[0.0772, 0.8888]]], [[[0.5666, 0.4269]], [[0.6163, 0.8414]]]]]], Add66810), 
LRes89600 = reshape_layer(Add66810, [2, 2, 2], Res89600), 
LDep83430 = depthwise_conv2D_layer([[[[0.0214]]]], 1, 1,[[[[0.8693]]]],[0], 1, 1, false, Dep83430), 
LZer74662 = zero_padding2D_layer(Dep83430, 1, 0, 1, 0, Zer74662), 
LCon98703 = concatenate_layer([Zer74662,[[[[0.4514], [0.0064]], [[0.1421], [0.1221]]]]], 3, Con98703), 
LSub97652 = subtract_layer(Res89600,Con98703, Sub97652), 
LRes57974 = reshape_layer(Sub97652, [2, 2, 2, 1], Res57974), 
LUp_53648 = up_sampling3D_layer(Res57974, 1, 1, 2, Up_53648), 
LRes67936 = reshape_layer(Up_53648, [2, 2, 4], Res67936), 
LRes91148 = reshape_layer(Res67936, [2, 8], Res91148), 
LFla57204 = flatten_layer(Res91148, Fla57204), 
LDot18859 = dot_layer([[0.7119, 0.0792, 0.2669]], [[0.9234, 0.838, 0.633]], 1, 1, Dot18859), 
LDot35881 = dot_layer([[0.4751, 0.2243]], [[0.6123, 0.7314]], 1, 1, Dot35881), 
LMul49894 = multiply_layer([Dot18859,Dot35881], Mul49894), 
LRes72695 = reshape_layer(Mul49894, [1, 1], Res72695), 
LGlo11160 = global_max_pool1D_layer(Res72695, Glo11160), 
LCon73971 = concatenate_layer([Glo11160,[[0.828, 0.3809, 0.2176, 0.1639, 0.4107, 0.923, 0.1336, 0.8264, 0.8429, 0.4942, 0.809, 0.6155, 0.8798, 0.4073, 0.3354]]], 1, Con73971), 
LMul8180 = multiply_layer([Fla57204,Con73971], Mul8180), 
exec_layers([LAdd66810,LRes89600,LDep83430,LZer74662,LCon98703,LSub97652,LRes57974,LUp_53648,LRes67936,LRes91148,LFla57204,LDot18859,LDot35881,LMul49894,LRes72695,LGlo11160,LCon73971,LMul8180],["Add66810","Res89600","Dep83430","Zer74662","Con98703","Sub97652","Res57974","Up_53648","Res67936","Res91148","Fla57204","Dot18859","Dot35881","Mul49894","Res72695","Glo11160","Con73971","Mul8180"],Mul8180,"Mul8180")

Actual (Unparsed): [[0.2302370, 0.4693932, 0.0583158, 0.0333146, 0.0336651, 0.0843578, 1.3983450, 0.2024040, 0.9874654, 1.0071812, 0.2293088, 0.3753760, 0.9832594, 1.4054779, 0.3842876, 0.3164499]]

Expected (Unparsed): [[0.23023703134266485,0.46939319999999995,0.058315790000000006,0.03331456,0.033665060000000004,0.08435778000000001,1.3983450000000002,0.202404,0.9874653600000001,1.00718121,0.22930879999999998,0.375376,0.9832593911899999,1.4054778430039998,0.38428755000000003,0.3164499]]

Actual:   [[0.2303, 0.4694, 0.0584, 0.0334, 0.0337, 0.0844, 1.3984, 0.2025, 0.9875, 1.0072, 0.2294, 0.3754, 0.9833, 1.4055, 0.3843, 0.3165]]

Expected: [[0.2303, 0.4694, 0.0584, 0.0334, 0.0337, 0.0844, 1.3984, 0.2025, 0.9875, 1.0072, 0.2294, 0.3754, 0.9833, 1.4055, 0.3843, 0.3165]]