import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Up_22265 = tf.keras.layers.Input(shape=([2, 1]))

Up_22265 = keras.layers.UpSampling1D(size=(1), name = 'Up_22265', )(in0Up_22265)
Res68437 = keras.layers.Reshape((2, 1, 1), name = 'Res68437', )(Up_22265)
Res27737 = keras.layers.Reshape((2, 1, 1, 1), name = 'Res27737', )(Res68437)
Up_97904 = keras.layers.UpSampling3D(size=(1, 2, 2), name = 'Up_97904', )(Res27737)
model = tf.keras.models.Model(inputs=[in0Up_22265], outputs=Up_97904)
in0Up_22265 = tf.constant([[[1.9835], [1.3484]]])
print (np.array2string(model.predict([in0Up_22265],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Up_97904.png')

LUp_22265 = up_sampling1D_layer([[[1.9835], [1.3484]]], 1, Up_22265), 
LRes68437 = reshape_layer(Up_22265, [2, 1, 1], Res68437), 
LRes27737 = reshape_layer(Res68437, [2, 1, 1, 1], Res27737), 
LUp_97904 = up_sampling3D_layer(Res27737, 1, 2, 2, Up_97904), 
exec_layers([LUp_22265,LRes68437,LRes27737,LUp_97904],["Up_22265","Res68437","Res27737","Up_97904"],Up_97904,"Up_97904")

Actual (Unparsed): [[[[[1.9835000], [1.9835000]], [[1.9835000], [1.9835000]]], [[[1.3484000], [1.3484000]], [[1.3484000], [1.3484000]]]]]

Expected (Unparsed): [[[[[1.9835],[1.9835]],[[1.9835],[1.9835]]],[[[1.3484],[1.3484]],[[1.3484],[1.3484]]]]]

Actual:   [[[[[1.9835], [1.9835]], [[1.9835], [1.9835]]], [[[1.3484], [1.3484]], [[1.3484], [1.3484]]]]]

Expected: [[[[[1.9835], [1.9835]], [[1.9835], [1.9835]]], [[[1.3484], [1.3484]], [[1.3484], [1.3484]]]]]