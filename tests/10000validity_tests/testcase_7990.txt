import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Mas18084 = tf.keras.layers.Input(shape=([2]))
in0Con45522 = tf.keras.layers.Input(shape=([4, 3, 2]))
in0Lay35009 = tf.keras.layers.Input(shape=([4, 3, 3]))

Mas18084 = keras.layers.Masking(mask_value=2, name = 'Mas18084', )(in0Mas18084)
Res38328 = keras.layers.Reshape((2, 1), name = 'Res38328', )(Mas18084)
Glo23948 = keras.layers.GlobalMaxPool1D(name = 'Glo23948', )(Res38328)
Res92408 = keras.layers.Reshape((1, 1), name = 'Res92408', )(Glo23948)
Res76834 = keras.layers.Reshape((1, 1, 1), name = 'Res76834', )(Res92408)
Zer85310 = keras.layers.ZeroPadding2D(padding=((3, 0), (2, 0)), name = 'Zer85310', )(Res76834)
Con45522 = keras.layers.Concatenate(axis=3, name = 'Con45522', )([Zer85310,in0Con45522])
Lay35009 = keras.layers.LayerNormalization(axis=2, epsilon=2.1028011043887473, name = 'Lay35009', )(in0Lay35009)
Max42333 = keras.layers.Maximum(name = 'Max42333', )([Con45522,Lay35009])
model = tf.keras.models.Model(inputs=[in0Mas18084,in0Con45522,in0Lay35009], outputs=Max42333)
in0Mas18084 = tf.constant([[1.9614, 1.5958]])
in0Con45522 = tf.constant([[[[0.7192, 0.0235], [0.9223, 0.6174], [0.1087, 0.0836]], [[0.6168, 0.7242], [0.746, 0.3839], [0.4577, 0.7263]], [[0.032, 0.2528], [0.579, 0.3215], [0.1472, 0.2724]], [[0.6027, 0.9458], [0.611, 0.4674], [0.5382, 0.4081]]]])
in0Lay35009 = tf.constant([[[[1.4325, 1.2867, 1.9077], [1.0666, 1.4698, 1.6418], [1.47, 1.1309, 1.8682]], [[1.5435, 1.9664, 1.7308], [1.5517, 1.2976, 1.371], [1.1222, 1.199, 1.9375]], [[1.6193, 1.2907, 1.0404], [1.5809, 1.6375, 1.5819], [1.5498, 1.2762, 1.1356]], [[1.151, 1.7619, 1.6355], [1.9944, 1.7014, 1.1884], [1.996, 1.029, 1.249]]]])
print (np.array2string(model.predict([in0Mas18084,in0Con45522,in0Lay35009],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Max42333.png')

LMas18084 = masking_layer([[1.9614, 1.5958]], 2, Mas18084), 
LRes38328 = reshape_layer(Mas18084, [2, 1], Res38328), 
LGlo23948 = global_max_pool1D_layer(Res38328, Glo23948), 
LRes92408 = reshape_layer(Glo23948, [1, 1], Res92408), 
LRes76834 = reshape_layer(Res92408, [1, 1, 1], Res76834), 
LZer85310 = zero_padding2D_layer(Res76834, 3, 0, 2, 0, Zer85310), 
LCon45522 = concatenate_layer([Zer85310,[[[[0.7192, 0.0235], [0.9223, 0.6174], [0.1087, 0.0836]], [[0.6168, 0.7242], [0.746, 0.3839], [0.4577, 0.7263]], [[0.032, 0.2528], [0.579, 0.3215], [0.1472, 0.2724]], [[0.6027, 0.9458], [0.611, 0.4674], [0.5382, 0.4081]]]]], 3, Con45522), 
LLay35009 = layer_normalization_layer([[[[1.4325, 1.2867, 1.9077], [1.0666, 1.4698, 1.6418], [1.47, 1.1309, 1.8682]], [[1.5435, 1.9664, 1.7308], [1.5517, 1.2976, 1.371], [1.1222, 1.199, 1.9375]], [[1.6193, 1.2907, 1.0404], [1.5809, 1.6375, 1.5819], [1.5498, 1.2762, 1.1356]], [[1.151, 1.7619, 1.6355], [1.9944, 1.7014, 1.1884], [1.996, 1.029, 1.249]]]], 2, 2.1028011043887473, Lay35009), 
LMax42333 = maximum_layer([Con45522,Lay35009], Max42333), 
exec_layers([LMas18084,LRes38328,LGlo23948,LRes92408,LRes76834,LZer85310,LCon45522,LLay35009,LMax42333],["Mas18084","Res38328","Glo23948","Res92408","Res76834","Zer85310","Con45522","Lay35009","Max42333"],Max42333,"Max42333")

Actual (Unparsed): [[[[0.0749014, 0.7192000, 0.0699739], [0.0000000, 0.9223000, 0.6174000], [0.1005604, 0.1087000, 0.0836000]], [[0.0940633, 0.6168000, 0.7242000], [0.0996647, 0.7460000, 0.3839000], [0.0000000, 0.4577000, 0.7263000]], [[0.0247981, 0.0320000, 0.2528000], [0.0000000, 0.5790000, 0.3215000], [0.0000000, 0.1472000, 0.2724000]], [[0.0000000, 0.6027000, 0.9458000], [0.1866039, 0.6110000, 0.4674000], [1.9614000, 0.5382000, 0.4081000]]]]

Expected (Unparsed): [[[[0.07490140444329052,0.7192,0.06997389035254319],[0,0.9223,0.6174],[0.10056038130038596,0.1087,0.0836]],[[0.09406328464962353,0.6168,0.7242],[0.09966472934190321,0.746,0.3839],[0,0.4577,0.7263]],[[0.024798057852472435,0.032,0.2528],[0,0.579,0.3215],[0,0.1472,0.2724]],[[0,0.6027,0.9458],[0.18660390500474475,0.611,0.4674],[1.9614,0.5382,0.4081]]]]

Actual:   [[[[0.075, 0.7192, 0.07], [0, 0.9223, 0.6174], [0.1006, 0.1087, 0.0836]], [[0.0941, 0.6168, 0.7242], [0.0997, 0.746, 0.3839], [0, 0.4577, 0.7263]], [[0.0248, 0.032, 0.2528], [0, 0.579, 0.3215], [0, 0.1472, 0.2724]], [[0, 0.6027, 0.9458], [0.1867, 0.611, 0.4674], [1.9614, 0.5382, 0.4081]]]]

Expected: [[[[0.075, 0.7192, 0.07], [0, 0.9223, 0.6174], [0.1006, 0.1087, 0.0836]], [[0.0941, 0.6168, 0.7242], [0.0997, 0.746, 0.3839], [0, 0.4577, 0.7263]], [[0.0248, 0.032, 0.2528], [0, 0.579, 0.3215], [0, 0.1472, 0.2724]], [[0, 0.6027, 0.9458], [0.1867, 0.611, 0.4674], [1.9614, 0.5382, 0.4081]]]]