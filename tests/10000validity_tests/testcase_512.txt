import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Max32889 = tf.keras.layers.Input(shape=([1, 1, 2, 1]))
in1Max32889 = tf.keras.layers.Input(shape=([1, 1, 2, 1]))
in0Con36514 = tf.keras.layers.Input(shape=([3, 3, 1]))
in0Sub71410 = tf.keras.layers.Input(shape=([3, 3, 3]))
in1Sub71410 = tf.keras.layers.Input(shape=([3, 3, 3]))
in0Dot49681 = tf.keras.layers.Input(shape=([3]))
in1Dot49681 = tf.keras.layers.Input(shape=([3]))
in0Glo51039 = tf.keras.layers.Input(shape=([1, 2, 1]))
in0Con29344 = tf.keras.layers.Input(shape=([26]))

Max32889 = keras.layers.Maximum(name = 'Max32889', )([in0Max32889,in1Max32889])
Res72244 = keras.layers.Reshape((1, 1, 2), name = 'Res72244', )(Max32889)
Zer17586 = keras.layers.ZeroPadding2D(padding=((2, 0), (2, 0)), name = 'Zer17586', )(Res72244)
Con36514 = keras.layers.Concatenate(axis=3, name = 'Con36514', )([Zer17586,in0Con36514])
Sub71410 = keras.layers.Subtract(name = 'Sub71410', )([in0Sub71410,in1Sub71410])
Max19503 = keras.layers.Maximum(name = 'Max19503', )([Con36514,Sub71410])
Res43827 = keras.layers.Reshape((3, 9), name = 'Res43827', )(Max19503)
Fla22578 = keras.layers.Flatten(name = 'Fla22578', )(Res43827)
Dot49681 = keras.layers.Dot(axes=(1, 1), name = 'Dot49681', )([in0Dot49681,in1Dot49681])
Res27987 = keras.layers.Reshape((1, 1), name = 'Res27987', )(Dot49681)
Res75508 = keras.layers.Reshape((1, 1, 1), name = 'Res75508', )(Res27987)
Res35679 = keras.layers.Reshape((1, 1, 1, 1), name = 'Res35679', )(Res75508)
Glo20837 = keras.layers.GlobalAveragePooling3D(name = 'Glo20837', )(Res35679)
Glo51039 = keras.layers.GlobalMaxPool2D(name = 'Glo51039', )(in0Glo51039)
Mul9638 = keras.layers.Multiply(name = 'Mul9638', )([Glo20837,Glo51039])
Con29344 = keras.layers.Concatenate(axis=1, name = 'Con29344', )([Mul9638,in0Con29344])
Min14804 = keras.layers.Minimum(name = 'Min14804', )([Fla22578,Con29344])
model = tf.keras.models.Model(inputs=[in0Max32889,in1Max32889,in0Con36514,in0Sub71410,in1Sub71410,in0Dot49681,in1Dot49681,in0Glo51039,in0Con29344], outputs=Min14804)
in0Max32889 = tf.constant([[[[[0.7673], [0.9572]]]]])
in1Max32889 = tf.constant([[[[[0.4701], [0.3364]]]]])
in0Con36514 = tf.constant([[[[0.4592], [0.3043], [0.7915]], [[0.6268], [0.4129], [0.0254]], [[0.5535], [0.8684], [0.4021]]]])
in0Sub71410 = tf.constant([[[[0.9275, 0.7855, 0.1452], [0.6506, 0.7927, 0.158], [0.0219, 0.1552, 0.8731]], [[0.7852, 0.2483, 0.9031], [0.2869, 0.733, 0.0908], [0.1712, 0.8916, 0.9107]], [[0.9807, 0.701, 0.6007], [0.2455, 0.8446, 0.5241], [0.7835, 0.4093, 0.1442]]]])
in1Sub71410 = tf.constant([[[[0.9084, 0.0186, 0.9366], [0.1906, 0.3283, 0.6342], [0.5825, 0.7228, 0.2611]], [[0.4006, 0.8118, 0.4443], [0.0447, 0.4651, 0.377], [0.1938, 0.989, 0.1173]], [[0.0503, 0.6985, 0.4335], [0.257, 0.7059, 0.3998], [0.4593, 0.4987, 0.1138]]]])
in0Dot49681 = tf.constant([[0.6759, 0.5289, 0.6933]])
in1Dot49681 = tf.constant([[0.0039, 0.8916, 0.4055]])
in0Glo51039 = tf.constant([[[[1.2712], [1.1861]]]])
in0Con29344 = tf.constant([[0.8069, 0.6164, 0.5951, 0.0993, 0.1942, 0.7491, 0.9112, 0.0406, 0.1533, 0.39, 0.7946, 0.3114, 0.537, 0.9808, 0.8319, 0.6448, 0.2786, 0.402, 0.9694, 0.4588, 0.7478, 0.7458, 0.0258, 0.6122, 0.6962, 0.4549]])
print (np.array2string(model.predict([in0Max32889,in1Max32889,in0Con36514,in0Sub71410,in1Sub71410,in0Dot49681,in1Dot49681,in0Glo51039,in0Con29344],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Min14804.png')

LMax32889 = maximum_layer([[[[[[0.7673], [0.9572]]]]], [[[[[0.4701], [0.3364]]]]]], Max32889), 
LRes72244 = reshape_layer(Max32889, [1, 1, 2], Res72244), 
LZer17586 = zero_padding2D_layer(Res72244, 2, 0, 2, 0, Zer17586), 
LCon36514 = concatenate_layer([Zer17586,[[[[0.4592], [0.3043], [0.7915]], [[0.6268], [0.4129], [0.0254]], [[0.5535], [0.8684], [0.4021]]]]], 3, Con36514), 
LSub71410 = subtract_layer([[[[0.9275, 0.7855, 0.1452], [0.6506, 0.7927, 0.158], [0.0219, 0.1552, 0.8731]], [[0.7852, 0.2483, 0.9031], [0.2869, 0.733, 0.0908], [0.1712, 0.8916, 0.9107]], [[0.9807, 0.701, 0.6007], [0.2455, 0.8446, 0.5241], [0.7835, 0.4093, 0.1442]]]], [[[[0.9084, 0.0186, 0.9366], [0.1906, 0.3283, 0.6342], [0.5825, 0.7228, 0.2611]], [[0.4006, 0.8118, 0.4443], [0.0447, 0.4651, 0.377], [0.1938, 0.989, 0.1173]], [[0.0503, 0.6985, 0.4335], [0.257, 0.7059, 0.3998], [0.4593, 0.4987, 0.1138]]]], Sub71410), 
LMax19503 = maximum_layer([Con36514,Sub71410], Max19503), 
LRes43827 = reshape_layer(Max19503, [3, 9], Res43827), 
LFla22578 = flatten_layer(Res43827, Fla22578), 
LDot49681 = dot_layer([[0.6759, 0.5289, 0.6933]], [[0.0039, 0.8916, 0.4055]], 1, 1, Dot49681), 
LRes27987 = reshape_layer(Dot49681, [1, 1], Res27987), 
LRes75508 = reshape_layer(Res27987, [1, 1, 1], Res75508), 
LRes35679 = reshape_layer(Res75508, [1, 1, 1, 1], Res35679), 
LGlo20837 = global_average_pooling3D_layer(Res35679, Glo20837), 
LGlo51039 = global_max_pool2D_layer([[[[1.2712], [1.1861]]]], Glo51039), 
LMul9638 = multiply_layer([Glo20837,Glo51039], Mul9638), 
LCon29344 = concatenate_layer([Mul9638,[[0.8069, 0.6164, 0.5951, 0.0993, 0.1942, 0.7491, 0.9112, 0.0406, 0.1533, 0.39, 0.7946, 0.3114, 0.537, 0.9808, 0.8319, 0.6448, 0.2786, 0.402, 0.9694, 0.4588, 0.7478, 0.7458, 0.0258, 0.6122, 0.6962, 0.4549]]], 1, Con29344), 
LMin14804 = minimum_layer([Fla22578,Con29344], Min14804), 
exec_layers([LMax32889,LRes72244,LZer17586,LCon36514,LSub71410,LMax19503,LRes43827,LFla22578,LDot49681,LRes27987,LRes75508,LRes35679,LGlo20837,LGlo51039,LMul9638,LCon29344,LMin14804],["Max32889","Res72244","Zer17586","Con36514","Sub71410","Max19503","Res43827","Fla22578","Dot49681","Res27987","Res75508","Res35679","Glo20837","Glo51039","Mul9638","Con29344","Min14804"],Min14804,"Min14804")

Actual (Unparsed): [[0.0191000, 0.7669000, 0.4592000, 0.4600000, 0.0993000, 0.1942000, 0.0000000, 0.0000000, 0.0406000, 0.1533000, 0.0000000, 0.6268000, 0.2422000, 0.2679000, 0.4129000, 0.0000000, 0.0000000, 0.2786000, 0.4020000, 0.0025000, 0.4588000, 0.0000000, 0.1387000, 0.0258000, 0.6122000, 0.6962000, 0.4021000]]

Expected (Unparsed): [[0.019100000000000006,0.7669,0.4592,0.45999999999999996,0.0993,0.1942,0,0,0.0406,0.1533,0,0.6268,0.2422,0.26789999999999997,0.4129,0,0,0.2786,0.402,0.0024999999999999467,0.4588,0,0.13870000000000005,0.0258,0.6122,0.6962,0.4021]]

Actual:   [[0.0191, 0.7669, 0.4592, 0.46, 0.0993, 0.1942, 0, 0, 0.0406, 0.1533, 0, 0.6268, 0.2422, 0.2679, 0.4129, 0, 0, 0.2786, 0.402, 0.0025, 0.4588, 0, 0.1387, 0.0258, 0.6122, 0.6962, 0.4021]]

Expected: [[0.0192, 0.7669, 0.4592, 0.46, 0.0993, 0.1942, 0, 0, 0.0406, 0.1533, 0, 0.6268, 0.2422, 0.2679, 0.4129, 0, 0, 0.2786, 0.402, 0.0025, 0.4588, 0, 0.1388, 0.0258, 0.6122, 0.6962, 0.4021]]