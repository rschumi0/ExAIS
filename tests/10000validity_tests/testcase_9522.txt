import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Glo85286 = tf.keras.layers.Input(shape=([2, 1, 2, 1]))

Glo85286 = keras.layers.GlobalMaxPool3D(name = 'Glo85286', )(in0Glo85286)
Res79724 = keras.layers.Reshape((1, 1), name = 'Res79724', )(Glo85286)
Res90361 = keras.layers.Reshape((1, 1, 1), name = 'Res90361', )(Res79724)
Zer81550 = keras.layers.ZeroPadding2D(padding=((1, 1), (1, 1)), name = 'Zer81550', )(Res90361)
Zer28451 = keras.layers.ZeroPadding2D(padding=((1, 1), (1, 1)), name = 'Zer28451', )(Zer81550)
Res61194 = keras.layers.Reshape((5, 5), name = 'Res61194', )(Zer28451)
Up_75420 = keras.layers.UpSampling1D(size=(2), name = 'Up_75420', )(Res61194)
model = tf.keras.models.Model(inputs=[in0Glo85286], outputs=Up_75420)
in0Glo85286 = tf.constant([[[[[1.7585], [1.367]]], [[[1.7792], [1.1761]]]]])
print (np.array2string(model.predict([in0Glo85286],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Up_75420.png')

LGlo85286 = global_max_pool3D_layer([[[[[1.7585], [1.367]]], [[[1.7792], [1.1761]]]]], Glo85286), 
LRes79724 = reshape_layer(Glo85286, [1, 1], Res79724), 
LRes90361 = reshape_layer(Res79724, [1, 1, 1], Res90361), 
LZer81550 = zero_padding2D_layer(Res90361, 1, 1, 1, 1, Zer81550), 
LZer28451 = zero_padding2D_layer(Zer81550, 1, 1, 1, 1, Zer28451), 
LRes61194 = reshape_layer(Zer28451, [5, 5], Res61194), 
LUp_75420 = up_sampling1D_layer(Res61194, 2, Up_75420), 
exec_layers([LGlo85286,LRes79724,LRes90361,LZer81550,LZer28451,LRes61194,LUp_75420],["Glo85286","Res79724","Res90361","Zer81550","Zer28451","Res61194","Up_75420"],Up_75420,"Up_75420")

Actual (Unparsed): [[[0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 1.7792000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 1.7792000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000]]]

Expected (Unparsed): [[[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,1.7792,0,0],[0,0,1.7792,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0]]]

Actual:   [[[0, 0, 0, 0, 0], [0, 0, 0, 0, 0], [0, 0, 0, 0, 0], [0, 0, 0, 0, 0], [0, 0, 1.7792, 0, 0], [0, 0, 1.7792, 0, 0], [0, 0, 0, 0, 0], [0, 0, 0, 0, 0], [0, 0, 0, 0, 0], [0, 0, 0, 0, 0]]]

Expected: [[[0, 0, 0, 0, 0], [0, 0, 0, 0, 0], [0, 0, 0, 0, 0], [0, 0, 0, 0, 0], [0, 0, 1.7792, 0, 0], [0, 0, 1.7792, 0, 0], [0, 0, 0, 0, 0], [0, 0, 0, 0, 0], [0, 0, 0, 0, 0], [0, 0, 0, 0, 0]]]