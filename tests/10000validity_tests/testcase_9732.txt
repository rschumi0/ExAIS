import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Sub75991 = tf.keras.layers.Input(shape=([2, 2]))
in1Sub75991 = tf.keras.layers.Input(shape=([2, 2]))

Sub75991 = keras.layers.Subtract(name = 'Sub75991', )([in0Sub75991,in1Sub75991])
Res83531 = keras.layers.Reshape((2, 2, 1), name = 'Res83531', )(Sub75991)
Res72728 = keras.layers.Reshape((2, 2, 1, 1), name = 'Res72728', )(Res83531)
Zer38994 = keras.layers.ZeroPadding3D(padding=((1, 1), (1, 1), (1, 1)), name = 'Zer38994', )(Res72728)
model = tf.keras.models.Model(inputs=[in0Sub75991,in1Sub75991], outputs=Zer38994)
in0Sub75991 = tf.constant([[[0.5069, 0.876], [0.3422, 0.5039]]])
in1Sub75991 = tf.constant([[[0.3285, 0.2524], [0.8365, 0.8869]]])
print (np.array2string(model.predict([in0Sub75991,in1Sub75991],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Zer38994.png')

LSub75991 = subtract_layer([[[0.5069, 0.876], [0.3422, 0.5039]]], [[[0.3285, 0.2524], [0.8365, 0.8869]]], Sub75991), 
LRes83531 = reshape_layer(Sub75991, [2, 2, 1], Res83531), 
LRes72728 = reshape_layer(Res83531, [2, 2, 1, 1], Res72728), 
LZer38994 = zero_padding3D_layer(Res72728, 1, 1, 1, 1, 1, 1, Zer38994), 
exec_layers([LSub75991,LRes83531,LRes72728,LZer38994],["Sub75991","Res83531","Res72728","Zer38994"],Zer38994,"Zer38994")

Actual (Unparsed): [[[[[0.0000000], [0.0000000], [0.0000000]], [[0.0000000], [0.0000000], [0.0000000]], [[0.0000000], [0.0000000], [0.0000000]], [[0.0000000], [0.0000000], [0.0000000]]], [[[0.0000000], [0.0000000], [0.0000000]], [[0.0000000], [0.1784000], [0.0000000]], [[0.0000000], [0.6236000], [0.0000000]], [[0.0000000], [0.0000000], [0.0000000]]], [[[0.0000000], [0.0000000], [0.0000000]], [[0.0000000], [-0.4943000], [0.0000000]], [[0.0000000], [-0.3830000], [0.0000000]], [[0.0000000], [0.0000000], [0.0000000]]], [[[0.0000000], [0.0000000], [0.0000000]], [[0.0000000], [0.0000000], [0.0000000]], [[0.0000000], [0.0000000], [0.0000000]], [[0.0000000], [0.0000000], [0.0000000]]]]]

Expected (Unparsed): [[[[[0],[0],[0]],[[0],[0],[0]],[[0],[0],[0]],[[0],[0],[0]]],[[[0],[0],[0]],[[0],[0.1784],[0]],[[0],[0.6235999999999999],[0]],[[0],[0],[0]]],[[[0],[0],[0]],[[0],[-0.4943],[0]],[[0],[-0.383],[0]],[[0],[0],[0]]],[[[0],[0],[0]],[[0],[0],[0]],[[0],[0],[0]],[[0],[0],[0]]]]]

Actual:   [[[[[0], [0], [0]], [[0], [0], [0]], [[0], [0], [0]], [[0], [0], [0]]], [[[0], [0], [0]], [[0], [0.1784], [0]], [[0], [0.6236], [0]], [[0], [0], [0]]], [[[0], [0], [0]], [[0], [-0.4943], [0]], [[0], [-0.383], [0]], [[0], [0], [0]]], [[[0], [0], [0]], [[0], [0], [0]], [[0], [0], [0]], [[0], [0], [0]]]]]

Expected: [[[[[0], [0], [0]], [[0], [0], [0]], [[0], [0], [0]], [[0], [0], [0]]], [[[0], [0], [0]], [[0], [0.1784], [0]], [[0], [0.6236], [0]], [[0], [0], [0]]], [[[0], [0], [0]], [[0], [-0.4943], [0]], [[0], [-0.383], [0]], [[0], [0], [0]]], [[[0], [0], [0]], [[0], [0], [0]], [[0], [0], [0]], [[0], [0], [0]]]]]