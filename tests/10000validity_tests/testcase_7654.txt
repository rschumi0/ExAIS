import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Sub24540 = tf.keras.layers.Input(shape=([2, 2, 3]))
in1Sub24540 = tf.keras.layers.Input(shape=([2, 2, 3]))
in0Max49593 = tf.keras.layers.Input(shape=([2, 1, 1]))
in1Max49593 = tf.keras.layers.Input(shape=([2, 1, 1]))
in0Con24070 = tf.keras.layers.Input(shape=([2, 2, 2]))
in0Mul5688 = tf.keras.layers.Input(shape=([1, 2, 2, 1]))
in1Mul5688 = tf.keras.layers.Input(shape=([1, 2, 2, 1]))

Sub24540 = keras.layers.Subtract(name = 'Sub24540', )([in0Sub24540,in1Sub24540])
Max49593 = keras.layers.Maximum(name = 'Max49593', )([in0Max49593,in1Max49593])
Zer81915 = keras.layers.ZeroPadding2D(padding=((0, 0), (1, 0)), name = 'Zer81915', )(Max49593)
Con24070 = keras.layers.Concatenate(axis=3, name = 'Con24070', )([Zer81915,in0Con24070])
Ave58227 = keras.layers.Average(name = 'Ave58227', )([Sub24540,Con24070])
Res50265 = keras.layers.Reshape((2, 2, 3, 1), name = 'Res50265', )(Ave58227)
Mul5688 = keras.layers.Multiply(name = 'Mul5688', )([in0Mul5688,in1Mul5688])
Zer42019 = keras.layers.ZeroPadding3D(padding=((1, 0), (0, 0), (1, 0)), name = 'Zer42019', )(Mul5688)
Add75562 = keras.layers.Add(name = 'Add75562', )([Res50265,Zer42019])
model = tf.keras.models.Model(inputs=[in0Sub24540,in1Sub24540,in0Max49593,in1Max49593,in0Con24070,in0Mul5688,in1Mul5688], outputs=Add75562)
in0Sub24540 = tf.constant([[[[0.3925, 0.6858, 0.2268], [0.7002, 0.6934, 0.2241]], [[0.0912, 0.3342, 0.8877], [0.364, 0.1662, 0.4161]]]])
in1Sub24540 = tf.constant([[[[0.8654, 0.7387, 0.4105], [0.1735, 0.4464, 0.0585]], [[0.8439, 0.9278, 0.1928], [0.4647, 0.2286, 0.8675]]]])
in0Max49593 = tf.constant([[[[0.3363]], [[0.7211]]]])
in1Max49593 = tf.constant([[[[0.5697]], [[0.8542]]]])
in0Con24070 = tf.constant([[[[0.2349, 0.4351], [0.6982, 0.4243]], [[0.3882, 0.3037], [0.927, 0.8806]]]])
in0Mul5688 = tf.constant([[[[[0.8189], [0.4212]], [[0.5263], [0.5826]]]]])
in1Mul5688 = tf.constant([[[[[0.0175], [0.8732]], [[0.2883], [0.4191]]]]])
print (np.array2string(model.predict([in0Sub24540,in1Sub24540,in0Max49593,in1Max49593,in0Con24070,in0Mul5688,in1Mul5688],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Add75562.png')

LSub24540 = subtract_layer([[[[0.3925, 0.6858, 0.2268], [0.7002, 0.6934, 0.2241]], [[0.0912, 0.3342, 0.8877], [0.364, 0.1662, 0.4161]]]], [[[[0.8654, 0.7387, 0.4105], [0.1735, 0.4464, 0.0585]], [[0.8439, 0.9278, 0.1928], [0.4647, 0.2286, 0.8675]]]], Sub24540), 
LMax49593 = maximum_layer([[[[[0.3363]], [[0.7211]]]], [[[[0.5697]], [[0.8542]]]]], Max49593), 
LZer81915 = zero_padding2D_layer(Max49593, 0, 0, 1, 0, Zer81915), 
LCon24070 = concatenate_layer([Zer81915,[[[[0.2349, 0.4351], [0.6982, 0.4243]], [[0.3882, 0.3037], [0.927, 0.8806]]]]], 3, Con24070), 
LAve58227 = average_layer([Sub24540,Con24070], Ave58227), 
LRes50265 = reshape_layer(Ave58227, [2, 2, 3, 1], Res50265), 
LMul5688 = multiply_layer([[[[[[0.8189], [0.4212]], [[0.5263], [0.5826]]]]], [[[[[0.0175], [0.8732]], [[0.2883], [0.4191]]]]]], Mul5688), 
LZer42019 = zero_padding3D_layer(Mul5688, 1, 0, 0, 0, 1, 0, Zer42019), 
LAdd75562 = add_layer([Res50265,Zer42019], Add75562), 
exec_layers([LSub24540,LMax49593,LZer81915,LCon24070,LAve58227,LRes50265,LMul5688,LZer42019,LAdd75562],["Sub24540","Max49593","Zer81915","Con24070","Ave58227","Res50265","Mul5688","Zer42019","Add75562"],Add75562,"Add75562")

Actual (Unparsed): [[[[[-0.2364500], [0.0910000], [0.1257000]], [[0.5482000], [0.4726000], [0.2949500]]], [[[-0.3763500], [-0.0883692], [0.8670919]], [[0.3767500], [0.5840323], [0.4587676]]]]]

Expected (Unparsed): [[[[[-0.23644999999999997],[0.09099999999999997],[0.1257]],[[0.5482],[0.4726],[0.29495]]],[[[-0.37634999999999996],[-0.08836924999999995],[0.8670918400000001]],[[0.37675],[0.58403229],[0.45876766]]]]]

Actual:   [[[[[-0.2364], [0.091], [0.1257]], [[0.5482], [0.4726], [0.295]]], [[[-0.3763], [-0.0883], [0.8671]], [[0.3768], [0.5841], [0.4588]]]]]

Expected: [[[[[-0.2364], [0.091], [0.1257]], [[0.5482], [0.4726], [0.295]]], [[[-0.3763], [-0.0883], [0.8671]], [[0.3768], [0.5841], [0.4588]]]]]