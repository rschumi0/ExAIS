import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Sub34794 = tf.keras.layers.Input(shape=([3, 3, 3, 2]))
in1Sub34794 = tf.keras.layers.Input(shape=([3, 3, 3, 2]))
in0Sub30642 = tf.keras.layers.Input(shape=([2, 3, 2]))
in1Sub30642 = tf.keras.layers.Input(shape=([2, 3, 2]))

Sub34794 = keras.layers.Subtract(name = 'Sub34794', )([in0Sub34794,in1Sub34794])
Res89214 = keras.layers.Reshape((3, 3, 6), name = 'Res89214', )(Sub34794)
Glo15508 = keras.layers.GlobalAveragePooling2D(name = 'Glo15508', )(Res89214)
Lea32314 = keras.layers.LeakyReLU(alpha=8.59902808273708, name = 'Lea32314', )(Glo15508)
Res39396 = keras.layers.Reshape((6, 1), name = 'Res39396', )(Lea32314)
Sub30642 = keras.layers.Subtract(name = 'Sub30642', )([in0Sub30642,in1Sub30642])
Res18842 = keras.layers.Reshape((2, 3, 2, 1), name = 'Res18842', )(Sub30642)
Glo9554 = keras.layers.GlobalMaxPool3D(name = 'Glo9554', )(Res18842)
Res21276 = keras.layers.Reshape((1, 1), name = 'Res21276', )(Glo9554)
Res79972 = keras.layers.Reshape((1, 1, 1), name = 'Res79972', )(Res21276)
Ave37604 = keras.layers.AveragePooling2D(pool_size=(1, 1), name = 'Ave37604', )(Res79972)
Res78415 = keras.layers.Reshape((1, 1), name = 'Res78415', )(Ave37604)
Dot18914 = keras.layers.Dot(axes=(2, 2), name = 'Dot18914', )([Res39396,Res78415])
model = tf.keras.models.Model(inputs=[in0Sub34794,in1Sub34794,in0Sub30642,in1Sub30642], outputs=Dot18914)
in0Sub34794 = tf.constant([[[[[0.3333, 0.4648], [0.2715, 0.4169], [0.5302, 0.3481]], [[0.8383, 0.3083], [0.5965, 0.139], [0.2332, 0.4706]], [[0.4159, 0.8982], [0.2237, 0.1097], [0.7223, 0.2366]]], [[[0.8468, 0.8871], [0.6396, 0.2371], [0.7693, 0.3566]], [[0.7115, 0.1932], [0.8335, 0.5177], [0.0159, 0.7477]], [[0.9838, 0.1275], [0.6028, 0.8806], [0.4238, 0.9129]]], [[[0.417, 0.5962], [0.2967, 0.3723], [0.0693, 0.0901]], [[0.3972, 0.4226], [0.308, 0.6376], [0.4272, 0.7518]], [[0.8075, 0.4397], [0.0873, 0.3706], [0.9368, 0.1855]]]]])
in1Sub34794 = tf.constant([[[[[0.8623, 0.5225], [0.5055, 0.1474], [0.7006, 0.8062]], [[0.0881, 0.2112], [0.9163, 0.0942], [0.4239, 0.3611]], [[0.5471, 0.5877], [0.5625, 0.7903], [0.0932, 0.1402]]], [[[0.8748, 0.9877], [0.0282, 0.8016], [0.7906, 0.8622]], [[0.7265, 0.3887], [0.1356, 0.2121], [0.4832, 0.7707]], [[0.2414, 0.6183], [0.117, 0.474], [0.5803, 0.1474]]], [[[0.2381, 0.1562], [0.5362, 0.0875], [0.6437, 0.4775]], [[0.0661, 0.308], [0.4573, 0.9063], [0.4282, 0.7324]], [[0.5678, 0.0355], [0.8579, 0.8468], [0.6444, 0.0566]]]]])
in0Sub30642 = tf.constant([[[[0.0568, 0.1252], [0.5043, 0.1447], [0.6279, 0.7486]], [[0.8903, 0.635], [0.1378, 0.0183], [0.7835, 0.0436]]]])
in1Sub30642 = tf.constant([[[[0.3142, 0.4195], [0.2157, 0.1759], [0.9999, 0.3768]], [[0.1749, 0.7973], [0.8742, 0.3658], [0.6066, 0.597]]]])
print (np.array2string(model.predict([in0Sub34794,in1Sub34794,in0Sub30642,in1Sub30642],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Dot18914.png')

LSub34794 = subtract_layer([[[[[0.3333, 0.4648], [0.2715, 0.4169], [0.5302, 0.3481]], [[0.8383, 0.3083], [0.5965, 0.139], [0.2332, 0.4706]], [[0.4159, 0.8982], [0.2237, 0.1097], [0.7223, 0.2366]]], [[[0.8468, 0.8871], [0.6396, 0.2371], [0.7693, 0.3566]], [[0.7115, 0.1932], [0.8335, 0.5177], [0.0159, 0.7477]], [[0.9838, 0.1275], [0.6028, 0.8806], [0.4238, 0.9129]]], [[[0.417, 0.5962], [0.2967, 0.3723], [0.0693, 0.0901]], [[0.3972, 0.4226], [0.308, 0.6376], [0.4272, 0.7518]], [[0.8075, 0.4397], [0.0873, 0.3706], [0.9368, 0.1855]]]]], [[[[[0.8623, 0.5225], [0.5055, 0.1474], [0.7006, 0.8062]], [[0.0881, 0.2112], [0.9163, 0.0942], [0.4239, 0.3611]], [[0.5471, 0.5877], [0.5625, 0.7903], [0.0932, 0.1402]]], [[[0.8748, 0.9877], [0.0282, 0.8016], [0.7906, 0.8622]], [[0.7265, 0.3887], [0.1356, 0.2121], [0.4832, 0.7707]], [[0.2414, 0.6183], [0.117, 0.474], [0.5803, 0.1474]]], [[[0.2381, 0.1562], [0.5362, 0.0875], [0.6437, 0.4775]], [[0.0661, 0.308], [0.4573, 0.9063], [0.4282, 0.7324]], [[0.5678, 0.0355], [0.8579, 0.8468], [0.6444, 0.0566]]]]], Sub34794), 
LRes89214 = reshape_layer(Sub34794, [3, 3, 6], Res89214), 
LGlo15508 = global_average_pooling2D_layer(Res89214, Glo15508), 
LLea32314 = leaky_relu_layer(Glo15508, 8.59902808273708, Lea32314), 
LRes39396 = reshape_layer(Lea32314, [6, 1], Res39396), 
LSub30642 = subtract_layer([[[[0.0568, 0.1252], [0.5043, 0.1447], [0.6279, 0.7486]], [[0.8903, 0.635], [0.1378, 0.0183], [0.7835, 0.0436]]]], [[[[0.3142, 0.4195], [0.2157, 0.1759], [0.9999, 0.3768]], [[0.1749, 0.7973], [0.8742, 0.3658], [0.6066, 0.597]]]], Sub30642), 
LRes18842 = reshape_layer(Sub30642, [2, 3, 2, 1], Res18842), 
LGlo9554 = global_max_pool3D_layer(Res18842, Glo9554), 
LRes21276 = reshape_layer(Glo9554, [1, 1], Res21276), 
LRes79972 = reshape_layer(Res21276, [1, 1, 1], Res79972), 
LAve37604 = average_pooling2D_layer(Res79972, 1, 1, Ave37604), 
LRes78415 = reshape_layer(Ave37604, [1, 1], Res78415), 
LDot18914 = dot_layer(Res39396,Res78415, 2, 2, Dot18914), 
exec_layers([LSub34794,LRes89214,LGlo15508,LLea32314,LRes39396,LSub30642,LRes18842,LGlo9554,LRes21276,LRes79972,LAve37604,LRes78415,LDot18914],["Sub34794","Res89214","Glo15508","Lea32314","Res39396","Sub30642","Res18842","Glo9554","Res21276","Res79972","Ave37604","Res78415","Dot18914"],Dot18914,"Dot18914")

Actual (Unparsed): [[[0.1223413], [0.0414773], [-0.1755981], [-0.4639099], [-0.4511963], [-0.1738894]]]

Expected (Unparsed): [[[0.1223413488888889],[0.04147730222222223],[-0.17559813455124645],[-0.46390990237419616],[-0.4511962966807234],[-0.17388931658169368]]]

Actual:   [[[0.1224], [0.0415], [-0.1755], [-0.4639], [-0.4511], [-0.1738]]]

Expected: [[[0.1224], [0.0415], [-0.1755], [-0.4639], [-0.4511], [-0.1738]]]