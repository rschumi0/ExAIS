import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Sub22179 = tf.keras.layers.Input(shape=([3, 3, 3]))
in1Sub22179 = tf.keras.layers.Input(shape=([3, 3, 3]))
in0Bat99790 = tf.keras.layers.Input(shape=([4]))
in0Con83924 = tf.keras.layers.Input(shape=([23]))
in0Ave79011 = tf.keras.layers.Input(shape=([1, 1]))
in1Ave79011 = tf.keras.layers.Input(shape=([1, 1]))

Sub22179 = keras.layers.Subtract(name = 'Sub22179', )([in0Sub22179,in1Sub22179])
Res77962 = keras.layers.Reshape((3, 9), name = 'Res77962', )(Sub22179)
Fla51006 = keras.layers.Flatten(name = 'Fla51006', )(Res77962)
Bat99790 = keras.layers.BatchNormalization(axis=1, epsilon=0.2281426492176459,  name = 'Bat99790', )(in0Bat99790)
Con83924 = keras.layers.Concatenate(axis=1, name = 'Con83924', )([Bat99790,in0Con83924])
Max30503 = keras.layers.Maximum(name = 'Max30503', )([Fla51006,Con83924])
Res44770 = keras.layers.Reshape((27, 1), name = 'Res44770', )(Max30503)
Ave79011 = keras.layers.Average(name = 'Ave79011', )([in0Ave79011,in1Ave79011])
Zer3676 = keras.layers.ZeroPadding1D(padding=((26, 0)), name = 'Zer3676', )(Ave79011)
Min71174 = keras.layers.Minimum(name = 'Min71174', )([Res44770,Zer3676])
model = tf.keras.models.Model(inputs=[in0Sub22179,in1Sub22179,in0Bat99790,in0Con83924,in0Ave79011,in1Ave79011], outputs=Min71174)
w = model.get_layer('Bat99790').get_weights() 
w[0] = np.array([0.9484, 0.5159, 0.9905, 0.9095])
w[1] = np.array([0.6857, 0.518, 0.2976, 0.483])
w[2] = np.array([0.2574, 0.3188, 0.0013, 0.4726])
w[3] = np.array([0.3021, 0.6467, 0.9686, 0.265])
model.get_layer('Bat99790').set_weights(w) 
in0Sub22179 = tf.constant([[[[0.4134, 0.6569, 0.0548], [0.6142, 0.8473, 0.8355], [0.1873, 0.9876, 0.5871]], [[0.1548, 0.3086, 0.8261], [0.0225, 0.5242, 0.3991], [0.7614, 0.4303, 0.238]], [[0.4651, 0.3542, 0.7584], [0.8584, 0.391, 0.4097], [0.8476, 0.7053, 0.2284]]]])
in1Sub22179 = tf.constant([[[[0.737, 0.9284, 0.4595], [0.8154, 0.3095, 0.1658], [0.4234, 0.3282, 0.217]], [[0.749, 0.0566, 0.3475], [0.7619, 0.5185, 0.5063], [0.2917, 0.5419, 0.4102]], [[0.9839, 0.6171, 0.3907], [0.0578, 0.0079, 0.0118], [0.6005, 0.737, 0.7254]]]])
in0Bat99790 = tf.constant([[1.9232, 1.9382, 1.4665, 1.7564]])
in0Con83924 = tf.constant([[0.5358, 0.0265, 0.5542, 0.1352, 0.377, 0.9266, 0.6103, 0.1235, 0.6104, 0.2768, 0.5038, 0.8714, 0.6846, 0.4219, 0.4074, 0.1776, 0.9267, 0.2417, 0.297, 0.6254, 0.2448, 0.2677, 0.7585]])
in0Ave79011 = tf.constant([[[0.1486]]])
in1Ave79011 = tf.constant([[[0.5848]]])
print (np.array2string(model.predict([in0Sub22179,in1Sub22179,in0Bat99790,in0Con83924,in0Ave79011,in1Ave79011],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Min71174.png')

LSub22179 = subtract_layer([[[[0.4134, 0.6569, 0.0548], [0.6142, 0.8473, 0.8355], [0.1873, 0.9876, 0.5871]], [[0.1548, 0.3086, 0.8261], [0.0225, 0.5242, 0.3991], [0.7614, 0.4303, 0.238]], [[0.4651, 0.3542, 0.7584], [0.8584, 0.391, 0.4097], [0.8476, 0.7053, 0.2284]]]], [[[[0.737, 0.9284, 0.4595], [0.8154, 0.3095, 0.1658], [0.4234, 0.3282, 0.217]], [[0.749, 0.0566, 0.3475], [0.7619, 0.5185, 0.5063], [0.2917, 0.5419, 0.4102]], [[0.9839, 0.6171, 0.3907], [0.0578, 0.0079, 0.0118], [0.6005, 0.737, 0.7254]]]], Sub22179), 
LRes77962 = reshape_layer(Sub22179, [3, 9], Res77962), 
LFla51006 = flatten_layer(Res77962, Fla51006), 
LBat99790 = batch_normalization_layer([[1.9232, 1.9382, 1.4665, 1.7564]], 1, 0.2281426492176459, [0.9484, 0.5159, 0.9905, 0.9095], [0.6857, 0.518, 0.2976, 0.483], [0.2574, 0.3188, 0.0013, 0.4726], [0.3021, 0.6467, 0.9686, 0.265], Bat99790), 
LCon83924 = concatenate_layer([Bat99790,[[0.5358, 0.0265, 0.5542, 0.1352, 0.377, 0.9266, 0.6103, 0.1235, 0.6104, 0.2768, 0.5038, 0.8714, 0.6846, 0.4219, 0.4074, 0.1776, 0.9267, 0.2417, 0.297, 0.6254, 0.2448, 0.2677, 0.7585]]], 1, Con83924), 
LMax30503 = maximum_layer([Fla51006,Con83924], Max30503), 
LRes44770 = reshape_layer(Max30503, [27, 1], Res44770), 
LAve79011 = average_layer([[[[0.1486]]], [[[0.5848]]]], Ave79011), 
LZer3676 = zero_padding1D_layer(Ave79011, 26, 0, Zer3676), 
LMin71174 = minimum_layer([Res44770,Zer3676], Min71174), 
exec_layers([LSub22179,LRes77962,LFla51006,LBat99790,LCon83924,LMax30503,LRes44770,LAve79011,LZer3676,LMin71174],["Sub22179","Res77962","Fla51006","Bat99790","Con83924","Max30503","Res44770","Ave79011","Zer3676","Min71174"],Min71174,"Min71174")

Actual (Unparsed): [[[0.0000000], [0.0000000], [0.0000000], [0.0000000], [0.0000000], [0.0000000], [0.0000000], [0.0000000], [0.0000000], [0.0000000], [0.0000000], [0.0000000], [0.0000000], [0.0000000], [0.0000000], [0.0000000], [0.0000000], [0.0000000], [0.0000000], [0.0000000], [0.0000000], [0.0000000], [0.0000000], [0.0000000], [0.0000000], [0.0000000], [0.3667000]]]

Expected (Unparsed): [[[0],[0],[0],[0],[0],[0],[0],[0],[0],[0],[0],[0],[0],[0],[0],[0],[0],[0],[0],[0],[0],[0],[0],[0],[0],[0],[0.3667]]]

Actual:   [[[0], [0], [0], [0], [0], [0], [0], [0], [0], [0], [0], [0], [0], [0], [0], [0], [0], [0], [0], [0], [0], [0], [0], [0], [0], [0], [0.3667]]]

Expected: [[[0], [0], [0], [0], [0], [0], [0], [0], [0], [0], [0], [0], [0], [0], [0], [0], [0], [0], [0], [0], [0], [0], [0], [0], [0], [0], [0.3667]]]