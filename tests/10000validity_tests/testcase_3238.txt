import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Ave59240 = tf.keras.layers.Input(shape=([1, 2]))
in1Ave59240 = tf.keras.layers.Input(shape=([1, 2]))

Ave59240 = keras.layers.Average(name = 'Ave59240', )([in0Ave59240,in1Ave59240])
Sof39958 = keras.layers.Softmax(axis=1, name = 'Sof39958', )(Ave59240)
Res88915 = keras.layers.Reshape((1, 2, 1), name = 'Res88915', )(Sof39958)
Res66858 = keras.layers.Reshape((1, 2, 1, 1), name = 'Res66858', )(Res88915)
Glo24239 = keras.layers.GlobalMaxPool3D(name = 'Glo24239', )(Res66858)
model = tf.keras.models.Model(inputs=[in0Ave59240,in1Ave59240], outputs=Glo24239)
in0Ave59240 = tf.constant([[[0.567, 0.2341]]])
in1Ave59240 = tf.constant([[[0.8608, 0.0389]]])
print (np.array2string(model.predict([in0Ave59240,in1Ave59240],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Glo24239.png')

LAve59240 = average_layer([[[[0.567, 0.2341]]], [[[0.8608, 0.0389]]]], Ave59240), 
LSof39958 = softmax_layer(Ave59240, 1, Sof39958), 
LRes88915 = reshape_layer(Sof39958, [1, 2, 1], Res88915), 
LRes66858 = reshape_layer(Res88915, [1, 2, 1, 1], Res66858), 
LGlo24239 = global_max_pool3D_layer(Res66858, Glo24239), 
exec_layers([LAve59240,LSof39958,LRes88915,LRes66858,LGlo24239],["Ave59240","Sof39958","Res88915","Res66858","Glo24239"],Glo24239,"Glo24239")

Actual (Unparsed): [[1.0000000]]

Expected (Unparsed): [[1.0]]

Actual:   [[1]]

Expected: [[1]]