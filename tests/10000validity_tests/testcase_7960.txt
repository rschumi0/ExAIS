import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Ave87413 = tf.keras.layers.Input(shape=([1, 1, 2, 1]))
in1Ave87413 = tf.keras.layers.Input(shape=([1, 1, 2, 1]))
in0Sub43546 = tf.keras.layers.Input(shape=([3, 2]))
in1Sub43546 = tf.keras.layers.Input(shape=([3, 2]))
in0Con70685 = tf.keras.layers.Input(shape=([2, 2]))
in0Sep56430 = tf.keras.layers.Input(shape=([2, 1]))

Ave87413 = keras.layers.Average(name = 'Ave87413', )([in0Ave87413,in1Ave87413])
Res8188 = keras.layers.Reshape((1, 1, 2), name = 'Res8188', )(Ave87413)
Dep85847 = keras.layers.DepthwiseConv2D((1, 1),strides=(1, 1), padding='valid', name = 'Dep85847', )(Res8188)
Res61986 = keras.layers.Reshape((1, 2), name = 'Res61986', )(Dep85847)
Ave17162 = keras.layers.AveragePooling1D(pool_size=(1), name = 'Ave17162', )(Res61986)
Fla50771 = keras.layers.Flatten(name = 'Fla50771', )(Ave17162)
Sub43546 = keras.layers.Subtract(name = 'Sub43546', )([in0Sub43546,in1Sub43546])
Glo87634 = keras.layers.GlobalAveragePooling1D(name = 'Glo87634', )(Sub43546)
Max87199 = keras.layers.Maximum(name = 'Max87199', )([Fla50771,Glo87634])
Res20712 = keras.layers.Reshape((2, 1), name = 'Res20712', )(Max87199)
Con70685 = keras.layers.Concatenate(axis=2, name = 'Con70685', )([Res20712,in0Con70685])
Sep56430 = keras.layers.SeparableConv1D(3, (1),strides=(2), padding='valid', name = 'Sep56430', )(in0Sep56430)
Dot89616 = keras.layers.Dot(axes=(2, 2), name = 'Dot89616', )([Con70685,Sep56430])
model = tf.keras.models.Model(inputs=[in0Ave87413,in1Ave87413,in0Sub43546,in1Sub43546,in0Con70685,in0Sep56430], outputs=Dot89616)
w = model.get_layer('Dep85847').get_weights() 
w[0] = np.array([[[[0.3455], [0.6885]]]])
w[1] = np.array([0, 0])
model.get_layer('Dep85847').set_weights(w) 
w = model.get_layer('Sep56430').get_weights() 
w[0] = np.array([[[0.2761]]])
w[1] = np.array([[[0.7547, 0.1958, 0.1791]]])
w[2] = np.array([0, 0, 0])
model.get_layer('Sep56430').set_weights(w) 
in0Ave87413 = tf.constant([[[[[0.682], [0.6723]]]]])
in1Ave87413 = tf.constant([[[[[0.2455], [0.5529]]]]])
in0Sub43546 = tf.constant([[[0.998, 0.2496], [0.856, 0.9195], [0.5552, 0.4847]]])
in1Sub43546 = tf.constant([[[0.4434, 0.0432], [0.8058, 0.9786], [0.9011, 0.4175]]])
in0Con70685 = tf.constant([[[0.544, 0.919], [0.3534, 0.4817]]])
in0Sep56430 = tf.constant([[[0.9294], [0.7012]]])
print (np.array2string(model.predict([in0Ave87413,in1Ave87413,in0Sub43546,in1Sub43546,in0Con70685,in0Sep56430],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Dot89616.png')

LAve87413 = average_layer([[[[[[0.682], [0.6723]]]]], [[[[[0.2455], [0.5529]]]]]], Ave87413), 
LRes8188 = reshape_layer(Ave87413, [1, 1, 2], Res8188), 
LDep85847 = depthwise_conv2D_layer(Res8188, 1, 1,[[[[0.3455], [0.6885]]]],[0, 0], 1, 1, false, Dep85847), 
LRes61986 = reshape_layer(Dep85847, [1, 2], Res61986), 
LAve17162 = average_pooling1D_layer(Res61986, 1, Ave17162), 
LFla50771 = flatten_layer(Ave17162, Fla50771), 
LSub43546 = subtract_layer([[[0.998, 0.2496], [0.856, 0.9195], [0.5552, 0.4847]]], [[[0.4434, 0.0432], [0.8058, 0.9786], [0.9011, 0.4175]]], Sub43546), 
LGlo87634 = global_average_pooling1D_layer(Sub43546, Glo87634), 
LMax87199 = maximum_layer([Fla50771,Glo87634], Max87199), 
LRes20712 = reshape_layer(Max87199, [2, 1], Res20712), 
LCon70685 = concatenate_layer([Res20712,[[[0.544, 0.919], [0.3534, 0.4817]]]], 2, Con70685), 
LSep56430 = separable_conv1D_layer([[[0.9294], [0.7012]]], 1,[[[[0.2761]]],[[[0.7547, 0.1958, 0.1791]]]],[0, 0, 0], 2, false, Sep56430), 
LDot89616 = dot_layer(Con70685,Sep56430, 2, 2, Dot89616), 
exec_layers([LAve87413,LRes8188,LDep85847,LRes61986,LAve17162,LFla50771,LSub43546,LGlo87634,LMax87199,LRes20712,LCon70685,LSep56430,LDot89616],["Ave87413","Res8188","Dep85847","Res61986","Ave17162","Fla50771","Sub43546","Glo87634","Max87199","Res20712","Con70685","Sep56430","Dot89616"],Dot89616,"Dot89616")

Actual (Unparsed): [[[0.1005979], [0.1215759]]]

Expected (Unparsed): [[[0.10059787280249574],[0.12157590231393951]]]

Actual:   [[[0.1006], [0.1216]]]

Expected: [[[0.1006], [0.1216]]]