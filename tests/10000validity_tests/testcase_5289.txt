import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Min56043 = tf.keras.layers.Input(shape=([2, 1, 1]))
in1Min56043 = tf.keras.layers.Input(shape=([2, 1, 1]))
in0Con90878 = tf.keras.layers.Input(shape=([2, 2, 1, 1]))
in0Ave27432 = tf.keras.layers.Input(shape=([2, 2, 1, 2]))
in1Ave27432 = tf.keras.layers.Input(shape=([2, 2, 1, 2]))
in0Add95590 = tf.keras.layers.Input(shape=([1, 2, 1, 1]))
in1Add95590 = tf.keras.layers.Input(shape=([1, 2, 1, 1]))
in0Con90235 = tf.keras.layers.Input(shape=([2, 2, 1, 1]))

Min56043 = keras.layers.Minimum(name = 'Min56043', )([in0Min56043,in1Min56043])
Res17570 = keras.layers.Reshape((2, 1, 1, 1), name = 'Res17570', )(Min56043)
Zer20009 = keras.layers.ZeroPadding3D(padding=((0, 0), (1, 0), (0, 0)), name = 'Zer20009', )(Res17570)
Con90878 = keras.layers.Concatenate(axis=4, name = 'Con90878', )([Zer20009,in0Con90878])
Ave27432 = keras.layers.Average(name = 'Ave27432', )([in0Ave27432,in1Ave27432])
Add95590 = keras.layers.Add(name = 'Add95590', )([in0Add95590,in1Add95590])
Zer38884 = keras.layers.ZeroPadding3D(padding=((1, 0), (0, 0), (0, 0)), name = 'Zer38884', )(Add95590)
Con90235 = keras.layers.Concatenate(axis=4, name = 'Con90235', )([Zer38884,in0Con90235])
Max92143 = keras.layers.Maximum(name = 'Max92143', )([Ave27432,Con90235])
Add11831 = keras.layers.Add(name = 'Add11831', )([Con90878,Max92143])
model = tf.keras.models.Model(inputs=[in0Min56043,in1Min56043,in0Con90878,in0Ave27432,in1Ave27432,in0Add95590,in1Add95590,in0Con90235], outputs=Add11831)
in0Min56043 = tf.constant([[[[0.2329]], [[0.1177]]]])
in1Min56043 = tf.constant([[[[0.1687]], [[0.6733]]]])
in0Con90878 = tf.constant([[[[[0.8774]], [[0.9874]]], [[[0.5868]], [[0.6993]]]]])
in0Ave27432 = tf.constant([[[[[0.2286, 0.4051]], [[0.0357, 0.3562]]], [[[0.9961, 0.8081]], [[0.2092, 0.1506]]]]])
in1Ave27432 = tf.constant([[[[[0.4408, 0.6877]], [[0.7593, 0.2253]]], [[[0.6204, 0.3049]], [[0.7606, 0.5958]]]]])
in0Add95590 = tf.constant([[[[[0.3705]], [[0.0039]]]]])
in1Add95590 = tf.constant([[[[[0.8839]], [[0.4847]]]]])
in0Con90235 = tf.constant([[[[[0.1189]], [[0.8151]]], [[[0.3479]], [[0.7494]]]]])
print (np.array2string(model.predict([in0Min56043,in1Min56043,in0Con90878,in0Ave27432,in1Ave27432,in0Add95590,in1Add95590,in0Con90235],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Add11831.png')

LMin56043 = minimum_layer([[[[[0.2329]], [[0.1177]]]], [[[[0.1687]], [[0.6733]]]]], Min56043), 
LRes17570 = reshape_layer(Min56043, [2, 1, 1, 1], Res17570), 
LZer20009 = zero_padding3D_layer(Res17570, 0, 0, 1, 0, 0, 0, Zer20009), 
LCon90878 = concatenate_layer([Zer20009,[[[[[0.8774]], [[0.9874]]], [[[0.5868]], [[0.6993]]]]]], 4, Con90878), 
LAve27432 = average_layer([[[[[[0.2286, 0.4051]], [[0.0357, 0.3562]]], [[[0.9961, 0.8081]], [[0.2092, 0.1506]]]]], [[[[[0.4408, 0.6877]], [[0.7593, 0.2253]]], [[[0.6204, 0.3049]], [[0.7606, 0.5958]]]]]], Ave27432), 
LAdd95590 = add_layer([[[[[[0.3705]], [[0.0039]]]]], [[[[[0.8839]], [[0.4847]]]]]], Add95590), 
LZer38884 = zero_padding3D_layer(Add95590, 1, 0, 0, 0, 0, 0, Zer38884), 
LCon90235 = concatenate_layer([Zer38884,[[[[[0.1189]], [[0.8151]]], [[[0.3479]], [[0.7494]]]]]], 4, Con90235), 
LMax92143 = maximum_layer([Ave27432,Con90235], Max92143), 
LAdd11831 = add_layer([Con90878,Max92143], Add11831), 
exec_layers([LMin56043,LRes17570,LZer20009,LCon90878,LAve27432,LAdd95590,LZer38884,LCon90235,LMax92143,LAdd11831],["Min56043","Res17570","Zer20009","Con90878","Ave27432","Add95590","Zer38884","Con90235","Max92143","Add11831"],Add11831,"Add11831")

Actual (Unparsed): [[[[[0.3347000, 1.4238000]], [[0.5662000, 1.8025000]]], [[[1.2544000, 1.1433000]], [[0.6063000, 1.4487000]]]]]

Expected (Unparsed): [[[[[0.3347,1.4238]],[[0.5661999999999999,1.8025000000000002]]],[[[1.2544,1.1433]],[[0.6063000000000001,1.4487]]]]]

Actual:   [[[[[0.3347, 1.4238]], [[0.5662, 1.8025]]], [[[1.2544, 1.1433]], [[0.6063, 1.4487]]]]]

Expected: [[[[[0.3347, 1.4238]], [[0.5662, 1.8026]]], [[[1.2544, 1.1433]], [[0.6064, 1.4487]]]]]