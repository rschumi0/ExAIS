import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Dot58205 = tf.keras.layers.Input(shape=([2, 3]))
in1Dot58205 = tf.keras.layers.Input(shape=([2, 3]))
in0Min77744 = tf.keras.layers.Input(shape=([1, 2]))
in1Min77744 = tf.keras.layers.Input(shape=([1, 2]))

Dot58205 = keras.layers.Dot(axes=(2, 2), name = 'Dot58205', )([in0Dot58205,in1Dot58205])
Cro33686 = keras.layers.Cropping1D(cropping=((0, 1)), name = 'Cro33686', )(Dot58205)
Min77744 = keras.layers.Minimum(name = 'Min77744', )([in0Min77744,in1Min77744])
Mul74520 = keras.layers.Multiply(name = 'Mul74520', )([Cro33686,Min77744])
model = tf.keras.models.Model(inputs=[in0Dot58205,in1Dot58205,in0Min77744,in1Min77744], outputs=Mul74520)
in0Dot58205 = tf.constant([[[0.8187, 0.695, 0.1948], [0.8804, 0.3393, 0.7555]]])
in1Dot58205 = tf.constant([[[0.5016, 0.6876, 0.2097], [0.0429, 0.1063, 0.4594]]])
in0Min77744 = tf.constant([[[0.8795, 0.9401]]])
in1Min77744 = tf.constant([[[0.784, 0.2423]]])
print (np.array2string(model.predict([in0Dot58205,in1Dot58205,in0Min77744,in1Min77744],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Mul74520.png')

LDot58205 = dot_layer([[[0.8187, 0.695, 0.1948], [0.8804, 0.3393, 0.7555]]], [[[0.5016, 0.6876, 0.2097], [0.0429, 0.1063, 0.4594]]], 2, 2, Dot58205), 
LCro33686 = cropping1D_layer(Dot58205, 0, 1, Cro33686), 
LMin77744 = minimum_layer([[[[0.8795, 0.9401]]], [[[0.784, 0.2423]]]], Min77744), 
LMul74520 = multiply_layer([Cro33686,Min77744], Mul74520), 
exec_layers([LDot58205,LCro33686,LMin77744,LMul74520],["Dot58205","Cro33686","Min77744","Mul74520"],Mul74520,"Mul74520")

Actual (Unparsed): [[[0.7286429, 0.0480946]]]

Expected (Unparsed): [[[0.72864292032,0.04809457525499999]]]

Actual:   [[[0.7287, 0.0481]]]

Expected: [[[0.7287, 0.0481]]]