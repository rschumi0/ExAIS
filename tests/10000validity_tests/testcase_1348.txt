import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Dot57317 = tf.keras.layers.Input(shape=([2, 3]))
in1Dot57317 = tf.keras.layers.Input(shape=([2, 3]))

Dot57317 = keras.layers.Dot(axes=(2, 2), name = 'Dot57317', )([in0Dot57317,in1Dot57317])
Fla99189 = keras.layers.Flatten(name = 'Fla99189', )(Dot57317)
Res65827 = keras.layers.Reshape((4, 1), name = 'Res65827', )(Fla99189)
Res66773 = keras.layers.Reshape((4, 1, 1), name = 'Res66773', )(Res65827)
Dep60467 = keras.layers.DepthwiseConv2D((1, 1),strides=(3, 3), padding='valid', name = 'Dep60467', )(Res66773)
model = tf.keras.models.Model(inputs=[in0Dot57317,in1Dot57317], outputs=Dep60467)
w = model.get_layer('Dep60467').get_weights() 
w[0] = np.array([[[[0.4485]]]])
w[1] = np.array([0])
model.get_layer('Dep60467').set_weights(w) 
in0Dot57317 = tf.constant([[[0.2932, 0.2515, 0.8101], [0.8079, 0.0869, 0.6129]]])
in1Dot57317 = tf.constant([[[0.3637, 0.9295, 0.0209], [0.3861, 0.4136, 0.5095]]])
print (np.array2string(model.predict([in0Dot57317,in1Dot57317],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Dep60467.png')

LDot57317 = dot_layer([[[0.2932, 0.2515, 0.8101], [0.8079, 0.0869, 0.6129]]], [[[0.3637, 0.9295, 0.0209], [0.3861, 0.4136, 0.5095]]], 2, 2, Dot57317), 
LFla99189 = flatten_layer(Dot57317, Fla99189), 
LRes65827 = reshape_layer(Fla99189, [4, 1], Res65827), 
LRes66773 = reshape_layer(Res65827, [4, 1, 1], Res66773), 
LDep60467 = depthwise_conv2D_layer(Res66773, 1, 1,[[[[0.4485]]]],[0], 3, 3, false, Dep60467), 
exec_layers([LDot57317,LFla99189,LRes65827,LRes66773,LDep60467],["Dot57317","Fla99189","Res65827","Res66773","Dep60467"],Dep60467,"Dep60467")

Actual (Unparsed): [[[[0.1602657]], [[0.2960749]]]]

Expected (Unparsed): [[[[0.16026572523]],[[0.29607484413]]]]

Actual:   [[[[0.1603]], [[0.2961]]]]

Expected: [[[[0.1603]], [[0.2961]]]]