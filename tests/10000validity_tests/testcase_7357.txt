import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Dot88535 = tf.keras.layers.Input(shape=([3]))
in1Dot88535 = tf.keras.layers.Input(shape=([3]))

Dot88535 = keras.layers.Dot(axes=(1, 1), name = 'Dot88535', )([in0Dot88535,in1Dot88535])
Den21254 = keras.layers.Dense(2,name = 'Den21254', )(Dot88535)
Res31427 = keras.layers.Reshape((2, 1), name = 'Res31427', )(Den21254)
Zer47273 = keras.layers.ZeroPadding1D(padding=((1, 1)), name = 'Zer47273', )(Res31427)
model = tf.keras.models.Model(inputs=[in0Dot88535,in1Dot88535], outputs=Zer47273)
w = model.get_layer('Den21254').get_weights() 
w[0] = np.array([[0.9468, 0.536]])
w[1] = np.array([0.2952, 0.8429])
model.get_layer('Den21254').set_weights(w) 
in0Dot88535 = tf.constant([[0.3694, 0.1564, 0.8841]])
in1Dot88535 = tf.constant([[0.0458, 0.9536, 0.7462]])
print (np.array2string(model.predict([in0Dot88535,in1Dot88535],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Zer47273.png')

LDot88535 = dot_layer([[0.3694, 0.1564, 0.8841]], [[0.0458, 0.9536, 0.7462]], 1, 1, Dot88535), 
LDen21254 = dense_layer(Dot88535, [[0.9468, 0.536]],[0.2952, 0.8429], Den21254), 
LRes31427 = reshape_layer(Den21254, [2, 1], Res31427), 
LZer47273 = zero_padding1D_layer(Res31427, 1, 1, Zer47273), 
exec_layers([LDot88535,LDen21254,LRes31427,LZer47273],["Dot88535","Den21254","Res31427","Zer47273"],Zer47273,"Zer47273")

Actual (Unparsed): [[[0.0000000], [1.0770457], [1.2855165], [0.0000000]]]

Expected (Unparsed): [[[0],[1.077045644664],[1.2855164612799999],[0]]]

Actual:   [[[0], [1.0771], [1.2856], [0]]]

Expected: [[[0], [1.0771], [1.2856], [0]]]