import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Glo75679 = tf.keras.layers.Input(shape=([1, 1, 1]))
in0Con30331 = tf.keras.layers.Input(shape=([2]))
in0Sub21719 = tf.keras.layers.Input(shape=([3]))
in1Sub21719 = tf.keras.layers.Input(shape=([3]))
in0Con59809 = tf.keras.layers.Input(shape=([3, 1]))
in0Glo21580 = tf.keras.layers.Input(shape=([1, 2, 1]))
in0Mul51277 = tf.keras.layers.Input(shape=([1, 1]))
in1Mul51277 = tf.keras.layers.Input(shape=([1, 1]))

Glo75679 = keras.layers.GlobalMaxPool2D(name = 'Glo75679', )(in0Glo75679)
Con30331 = keras.layers.Concatenate(axis=1, name = 'Con30331', )([Glo75679,in0Con30331])
Sub21719 = keras.layers.Subtract(name = 'Sub21719', )([in0Sub21719,in1Sub21719])
Mul87632 = keras.layers.Multiply(name = 'Mul87632', )([Con30331,Sub21719])
Res95009 = keras.layers.Reshape((3, 1), name = 'Res95009', )(Mul87632)
Con59809 = keras.layers.Concatenate(axis=2, name = 'Con59809', )([Res95009,in0Con59809])
Glo21580 = keras.layers.GlobalAveragePooling2D(name = 'Glo21580', )(in0Glo21580)
Res80926 = keras.layers.Reshape((1, 1), name = 'Res80926', )(Glo21580)
Mul51277 = keras.layers.Multiply(name = 'Mul51277', )([in0Mul51277,in1Mul51277])
Mul42132 = keras.layers.Multiply(name = 'Mul42132', )([Res80926,Mul51277])
Loc95952 = keras.layers.LocallyConnected1D(2, (1),strides=(1), name = 'Loc95952', )(Mul42132)
Zer93173 = keras.layers.ZeroPadding1D(padding=((2, 0)), name = 'Zer93173', )(Loc95952)
Sub36332 = keras.layers.Subtract(name = 'Sub36332', )([Con59809,Zer93173])
model = tf.keras.models.Model(inputs=[in0Glo75679,in0Con30331,in0Sub21719,in1Sub21719,in0Con59809,in0Glo21580,in0Mul51277,in1Mul51277], outputs=Sub36332)
w = model.get_layer('Loc95952').get_weights() 
w[0] = np.array([[[0.1503, 0.437]]])
w[1] = np.array([[0, 0]])
model.get_layer('Loc95952').set_weights(w) 
in0Glo75679 = tf.constant([[[[1.8152]]]])
in0Con30331 = tf.constant([[0.8476, 0.366]])
in0Sub21719 = tf.constant([[0.2541, 0.0764, 0.0219]])
in1Sub21719 = tf.constant([[0.6639, 0.7354, 0.6364]])
in0Con59809 = tf.constant([[[0.8581], [0.6045], [0.7999]]])
in0Glo21580 = tf.constant([[[[1.8178], [1.7277]]]])
in0Mul51277 = tf.constant([[[0.1565]]])
in1Mul51277 = tf.constant([[[0.756]]])
print (np.array2string(model.predict([in0Glo75679,in0Con30331,in0Sub21719,in1Sub21719,in0Con59809,in0Glo21580,in0Mul51277,in1Mul51277],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Sub36332.png')

LGlo75679 = global_max_pool2D_layer([[[[1.8152]]]], Glo75679), 
LCon30331 = concatenate_layer([Glo75679,[[0.8476, 0.366]]], 1, Con30331), 
LSub21719 = subtract_layer([[0.2541, 0.0764, 0.0219]], [[0.6639, 0.7354, 0.6364]], Sub21719), 
LMul87632 = multiply_layer([Con30331,Sub21719], Mul87632), 
LRes95009 = reshape_layer(Mul87632, [3, 1], Res95009), 
LCon59809 = concatenate_layer([Res95009,[[[0.8581], [0.6045], [0.7999]]]], 2, Con59809), 
LGlo21580 = global_average_pooling2D_layer([[[[1.8178], [1.7277]]]], Glo21580), 
LRes80926 = reshape_layer(Glo21580, [1, 1], Res80926), 
LMul51277 = multiply_layer([[[[0.1565]]], [[[0.756]]]], Mul51277), 
LMul42132 = multiply_layer([Res80926,Mul51277], Mul42132), 
LLoc95952 = locally_connected1D_layer(Mul42132, 1,[[[0.1503, 0.437]]],[[0, 0]], 1, Loc95952), 
LZer93173 = zero_padding1D_layer(Loc95952, 2, 0, Zer93173), 
LSub36332 = subtract_layer(Con59809,Zer93173, Sub36332), 
exec_layers([LGlo75679,LCon30331,LSub21719,LMul87632,LRes95009,LCon59809,LGlo21580,LRes80926,LMul51277,LMul42132,LLoc95952,LZer93173,LSub36332],["Glo75679","Con30331","Sub21719","Mul87632","Res95009","Con59809","Glo21580","Res80926","Mul51277","Mul42132","Loc95952","Zer93173","Sub36332"],Sub36332,"Sub36332")

Actual (Unparsed): [[[-0.7438690, 0.8581000], [-0.5585684, 0.6045000], [-0.2564311, 0.7082431]]]

Expected (Unparsed): [[[-0.74386896,0.8581],[-0.5585684000000001,0.6045],[-0.25643109386804996,0.7082431202905001]]]

Actual:   [[[-0.7438, 0.8581], [-0.5585, 0.6045], [-0.2564, 0.7083]]]

Expected: [[[-0.7438, 0.8581], [-0.5585, 0.6045], [-0.2564, 0.7083]]]