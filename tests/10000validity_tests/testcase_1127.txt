import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Ave52676 = tf.keras.layers.Input(shape=([1, 1]))
in1Ave52676 = tf.keras.layers.Input(shape=([1, 1]))

Ave52676 = keras.layers.Average(name = 'Ave52676', )([in0Ave52676,in1Ave52676])
Res52562 = keras.layers.Reshape((1, 1, 1), name = 'Res52562', )(Ave52676)
Res39129 = keras.layers.Reshape((1, 1, 1, 1), name = 'Res39129', )(Res52562)
Glo14356 = keras.layers.GlobalMaxPool3D(name = 'Glo14356', )(Res39129)
Res2337 = keras.layers.Reshape((1, 1), name = 'Res2337', )(Glo14356)
Zer83312 = keras.layers.ZeroPadding1D(padding=((1, 1)), name = 'Zer83312', )(Res2337)
model = tf.keras.models.Model(inputs=[in0Ave52676,in1Ave52676], outputs=Zer83312)
in0Ave52676 = tf.constant([[[0.4455]]])
in1Ave52676 = tf.constant([[[0.8071]]])
print (np.array2string(model.predict([in0Ave52676,in1Ave52676],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Zer83312.png')

LAve52676 = average_layer([[[[0.4455]]], [[[0.8071]]]], Ave52676), 
LRes52562 = reshape_layer(Ave52676, [1, 1, 1], Res52562), 
LRes39129 = reshape_layer(Res52562, [1, 1, 1, 1], Res39129), 
LGlo14356 = global_max_pool3D_layer(Res39129, Glo14356), 
LRes2337 = reshape_layer(Glo14356, [1, 1], Res2337), 
LZer83312 = zero_padding1D_layer(Res2337, 1, 1, Zer83312), 
exec_layers([LAve52676,LRes52562,LRes39129,LGlo14356,LRes2337,LZer83312],["Ave52676","Res52562","Res39129","Glo14356","Res2337","Zer83312"],Zer83312,"Zer83312")

Actual (Unparsed): [[[0.0000000], [0.6263000], [0.0000000]]]

Expected (Unparsed): [[[0],[0.6263000000000001],[0]]]

Actual:   [[[0], [0.6263], [0]]]

Expected: [[[0], [0.6264], [0]]]