import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Sub90143 = tf.keras.layers.Input(shape=([2, 3, 3]))
in1Sub90143 = tf.keras.layers.Input(shape=([2, 3, 3]))
in0Ave29298 = tf.keras.layers.Input(shape=([2, 2, 1]))
in1Ave29298 = tf.keras.layers.Input(shape=([2, 2, 1]))
in0Max47663 = tf.keras.layers.Input(shape=([1, 2, 1, 1]))
in1Max47663 = tf.keras.layers.Input(shape=([1, 2, 1, 1]))
in0Con51199 = tf.keras.layers.Input(shape=([3, 7]))
in0Con88830 = tf.keras.layers.Input(shape=([3, 9, 1]))
in0Min67387 = tf.keras.layers.Input(shape=([1, 1, 2]))
in1Min67387 = tf.keras.layers.Input(shape=([1, 1, 2]))

Sub90143 = keras.layers.Subtract(name = 'Sub90143', )([in0Sub90143,in1Sub90143])
Res58795 = keras.layers.Reshape((2, 9), name = 'Res58795', )(Sub90143)
Zer24057 = keras.layers.ZeroPadding1D(padding=((1, 0)), name = 'Zer24057', )(Res58795)
Ave29298 = keras.layers.Average(name = 'Ave29298', )([in0Ave29298,in1Ave29298])
Res41880 = keras.layers.Reshape((2, 2), name = 'Res41880', )(Ave29298)
Ave67634 = keras.layers.AveragePooling1D(pool_size=(2), name = 'Ave67634', )(Res41880)
Zer10897 = keras.layers.ZeroPadding1D(padding=((2, 0)), name = 'Zer10897', )(Ave67634)
Max47663 = keras.layers.Maximum(name = 'Max47663', )([in0Max47663,in1Max47663])
Res65356 = keras.layers.Reshape((1, 2, 1), name = 'Res65356', )(Max47663)
Res99681 = keras.layers.Reshape((1, 2), name = 'Res99681', )(Res65356)
Zer8692 = keras.layers.ZeroPadding1D(padding=((1, 1)), name = 'Zer8692', )(Res99681)
Min57815 = keras.layers.Minimum(name = 'Min57815', )([Zer10897,Zer8692])
Con51199 = keras.layers.Concatenate(axis=2, name = 'Con51199', )([Min57815,in0Con51199])
Max77519 = keras.layers.Maximum(name = 'Max77519', )([Zer24057,Con51199])
Res66448 = keras.layers.Reshape((3, 9, 1), name = 'Res66448', )(Max77519)
Con88830 = keras.layers.Concatenate(axis=3, name = 'Con88830', )([Res66448,in0Con88830])
Min67387 = keras.layers.Minimum(name = 'Min67387', )([in0Min67387,in1Min67387])
Zer3905 = keras.layers.ZeroPadding2D(padding=((2, 0), (8, 0)), name = 'Zer3905', )(Min67387)
Min83773 = keras.layers.Minimum(name = 'Min83773', )([Con88830,Zer3905])
model = tf.keras.models.Model(inputs=[in0Sub90143,in1Sub90143,in0Ave29298,in1Ave29298,in0Max47663,in1Max47663,in0Con51199,in0Con88830,in0Min67387,in1Min67387], outputs=Min83773)
in0Sub90143 = tf.constant([[[[0.3086, 0.0665, 0.8282], [0.1817, 0.4003, 0.2791], [0.1405, 0.472, 0.5252]], [[0.4717, 0.5411, 0.6447], [0.234, 0.2366, 0.2945], [0.1321, 0.9971, 0.014]]]])
in1Sub90143 = tf.constant([[[[0.8018, 0.6811, 0.4514], [0.192, 0.286, 0.7542], [0.3813, 0.1525, 0.7355]], [[0.4865, 0.1224, 0.9983], [0.0308, 0.4602, 0.7792], [0.544, 0.9676, 0.6066]]]])
in0Ave29298 = tf.constant([[[[0.7651], [0.6444]], [[0.5808], [0.7438]]]])
in1Ave29298 = tf.constant([[[[0.6938], [0.0922]], [[0.7723], [0.6137]]]])
in0Max47663 = tf.constant([[[[[0.5757]], [[0.1217]]]]])
in1Max47663 = tf.constant([[[[[0.7516]], [[0.7979]]]]])
in0Con51199 = tf.constant([[[0.7619, 0.3924, 0.1597, 0.9257, 0.0197, 0.7111, 0.0556], [0.4499, 0.6099, 0.9214, 0.3511, 0.776, 0.0218, 0.312], [0.67, 0.5787, 0.5675, 0.0759, 0.9501, 0.9043, 0.4706]]])
in0Con88830 = tf.constant([[[[0.6738], [0.651], [0.8027], [0.7978], [0.4925], [0.7625], [0.0367], [0.1267], [0.4194]], [[0.4595], [0.993], [0.3143], [0.3155], [0.8982], [0.0679], [0.8632], [0.6476], [0.3835]], [[0.5861], [0.5803], [0.3711], [0.2695], [0.5413], [0.8446], [0.2285], [0.1134], [0.2686]]]])
in0Min67387 = tf.constant([[[[0.6083, 0.0265]]]])
in1Min67387 = tf.constant([[[[0.2075, 0.5578]]]])
print (np.array2string(model.predict([in0Sub90143,in1Sub90143,in0Ave29298,in1Ave29298,in0Max47663,in1Max47663,in0Con51199,in0Con88830,in0Min67387,in1Min67387],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Min83773.png')

LSub90143 = subtract_layer([[[[0.3086, 0.0665, 0.8282], [0.1817, 0.4003, 0.2791], [0.1405, 0.472, 0.5252]], [[0.4717, 0.5411, 0.6447], [0.234, 0.2366, 0.2945], [0.1321, 0.9971, 0.014]]]], [[[[0.8018, 0.6811, 0.4514], [0.192, 0.286, 0.7542], [0.3813, 0.1525, 0.7355]], [[0.4865, 0.1224, 0.9983], [0.0308, 0.4602, 0.7792], [0.544, 0.9676, 0.6066]]]], Sub90143), 
LRes58795 = reshape_layer(Sub90143, [2, 9], Res58795), 
LZer24057 = zero_padding1D_layer(Res58795, 1, 0, Zer24057), 
LAve29298 = average_layer([[[[[0.7651], [0.6444]], [[0.5808], [0.7438]]]], [[[[0.6938], [0.0922]], [[0.7723], [0.6137]]]]], Ave29298), 
LRes41880 = reshape_layer(Ave29298, [2, 2], Res41880), 
LAve67634 = average_pooling1D_layer(Res41880, 2, Ave67634), 
LZer10897 = zero_padding1D_layer(Ave67634, 2, 0, Zer10897), 
LMax47663 = maximum_layer([[[[[[0.5757]], [[0.1217]]]]], [[[[[0.7516]], [[0.7979]]]]]], Max47663), 
LRes65356 = reshape_layer(Max47663, [1, 2, 1], Res65356), 
LRes99681 = reshape_layer(Res65356, [1, 2], Res99681), 
LZer8692 = zero_padding1D_layer(Res99681, 1, 1, Zer8692), 
LMin57815 = minimum_layer([Zer10897,Zer8692], Min57815), 
LCon51199 = concatenate_layer([Min57815,[[[0.7619, 0.3924, 0.1597, 0.9257, 0.0197, 0.7111, 0.0556], [0.4499, 0.6099, 0.9214, 0.3511, 0.776, 0.0218, 0.312], [0.67, 0.5787, 0.5675, 0.0759, 0.9501, 0.9043, 0.4706]]]], 2, Con51199), 
LMax77519 = maximum_layer([Zer24057,Con51199], Max77519), 
LRes66448 = reshape_layer(Max77519, [3, 9, 1], Res66448), 
LCon88830 = concatenate_layer([Res66448,[[[[0.6738], [0.651], [0.8027], [0.7978], [0.4925], [0.7625], [0.0367], [0.1267], [0.4194]], [[0.4595], [0.993], [0.3143], [0.3155], [0.8982], [0.0679], [0.8632], [0.6476], [0.3835]], [[0.5861], [0.5803], [0.3711], [0.2695], [0.5413], [0.8446], [0.2285], [0.1134], [0.2686]]]]], 3, Con88830), 
LMin67387 = minimum_layer([[[[[0.6083, 0.0265]]]], [[[[0.2075, 0.5578]]]]], Min67387), 
LZer3905 = zero_padding2D_layer(Min67387, 2, 0, 8, 0, Zer3905), 
LMin83773 = minimum_layer([Con88830,Zer3905], Min83773), 
exec_layers([LSub90143,LRes58795,LZer24057,LAve29298,LRes41880,LAve67634,LZer10897,LMax47663,LRes65356,LRes99681,LZer8692,LMin57815,LCon51199,LMax77519,LRes66448,LCon88830,LMin67387,LZer3905,LMin83773],["Sub90143","Res58795","Zer24057","Ave29298","Res41880","Ave67634","Zer10897","Max47663","Res65356","Res99681","Zer8692","Min57815","Con51199","Max77519","Res66448","Con88830","Min67387","Zer3905","Min83773"],Min83773,"Min83773")

Actual (Unparsed): [[[[0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000]], [[0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000]], [[0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.2075000, 0.0265000]]]]

Expected (Unparsed): [[[[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0]],[[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0]],[[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0.2075,0.0265]]]]

Actual:   [[[[0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0]], [[0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0]], [[0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0.2075, 0.0265]]]]

Expected: [[[[0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0]], [[0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0]], [[0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0.2075, 0.0265]]]]