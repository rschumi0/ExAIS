import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Min73703 = tf.keras.layers.Input(shape=([1, 1]))
in1Min73703 = tf.keras.layers.Input(shape=([1, 1]))

Min73703 = keras.layers.Minimum(name = 'Min73703', )([in0Min73703,in1Min73703])
Res59694 = keras.layers.Reshape((1, 1, 1), name = 'Res59694', )(Min73703)
Loc37813 = keras.layers.LocallyConnected2D(4, (1, 1),strides=(11, 10), name = 'Loc37813', )(Res59694)
model = tf.keras.models.Model(inputs=[in0Min73703,in1Min73703], outputs=Loc37813)
w = model.get_layer('Loc37813').get_weights() 
w[0] = np.array([[[0.7951, 0.0265, 0.0445, 0.3632]]])
w[1] = np.array([[[0, 0, 0, 0]]])
model.get_layer('Loc37813').set_weights(w) 
in0Min73703 = tf.constant([[[0.031]]])
in1Min73703 = tf.constant([[[0.9253]]])
print (np.array2string(model.predict([in0Min73703,in1Min73703],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Loc37813.png')

LMin73703 = minimum_layer([[[[0.031]]], [[[0.9253]]]], Min73703), 
LRes59694 = reshape_layer(Min73703, [1, 1, 1], Res59694), 
LLoc37813 = locally_connected2D_layer(Res59694, 1, 1,[[[0.7951, 0.0265, 0.0445, 0.3632]]],[[[0, 0, 0, 0]]], 11, 10, Loc37813), 
exec_layers([LMin73703,LRes59694,LLoc37813],["Min73703","Res59694","Loc37813"],Loc37813,"Loc37813")

Actual (Unparsed): [[[[0.0246481, 0.0008215, 0.0013795, 0.0112592]]]]

Expected (Unparsed): [[[[0.0246481,0.0008215,0.0013794999999999999,0.0112592]]]]

Actual:   [[[[0.0247, 0.0009, 0.0014, 0.0113]]]]

Expected: [[[[0.0247, 0.0009, 0.0014, 0.0113]]]]