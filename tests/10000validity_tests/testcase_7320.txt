import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Sof98240 = tf.keras.layers.Input(shape=([1, 1, 2, 1]))

Sof98240 = keras.layers.Softmax(axis=1, name = 'Sof98240', input_shape=(1, 1, 2, 1))(in0Sof98240)
Res4658 = keras.layers.Reshape((1, 1, 2), name = 'Res4658', )(Sof98240)
Up_35173 = keras.layers.UpSampling2D(size=(1, 2), name = 'Up_35173', )(Res4658)
Loc8905 = keras.layers.LocallyConnected2D(4, (1, 2),strides=(1, 1), name = 'Loc8905', )(Up_35173)
Lay31980 = keras.layers.LayerNormalization(axis=2, epsilon=1.3176018841338974, name = 'Lay31980', )(Loc8905)
model = tf.keras.models.Model(inputs=[in0Sof98240], outputs=Lay31980)
w = model.get_layer('Loc8905').get_weights() 
w[0] = np.array([[[0.8431, 0.2555, 0.2324, 0.6278], [0.8927, 0.6187, 0.5633, 0.704], [0.5763, 0.5986, 0.4559, 0.7567], [0.251, 0.7047, 0.212, 0.5274]]])
w[1] = np.array([[[0, 0, 0, 0]]])
model.get_layer('Loc8905').set_weights(w) 
in0Sof98240 = tf.constant([[[[[0.3279], [0.1069]]]]])
print (np.array2string(model.predict([in0Sof98240],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Lay31980.png')

LSof98240 = softmax_layer([[[[[0.3279], [0.1069]]]]], 1, Sof98240), 
LRes4658 = reshape_layer(Sof98240, [1, 1, 2], Res4658), 
LUp_35173 = up_sampling2D_layer(Res4658, 1, 2, Up_35173), 
LLoc8905 = locally_connected2D_layer(Up_35173, 1, 2,[[[0.8431, 0.2555, 0.2324, 0.6278], [0.8927, 0.6187, 0.5633, 0.704], [0.5763, 0.5986, 0.4559, 0.7567], [0.251, 0.7047, 0.212, 0.5274]]],[[[0, 0, 0, 0]]], 1, 1, Loc8905), 
LLay31980 = layer_normalization_layer(Loc8905, 2, 1.3176018841338974, Lay31980), 
exec_layers([LSof98240,LRes4658,LUp_35173,LLoc8905,LLay31980],["Sof98240","Res4658","Up_35173","Loc8905","Lay31980"],Lay31980,"Lay31980")

Actual (Unparsed): [[[[0.0000000, 0.0000000, 0.0000000, 0.0000000]]]]

Expected (Unparsed): [[[[0.0,0.0,0.0,0.0]]]]

Actual:   [[[[0, 0, 0, 0]]]]

Expected: [[[[0, 0, 0, 0]]]]