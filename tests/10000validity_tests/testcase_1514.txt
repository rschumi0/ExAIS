import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Bat20372 = tf.keras.layers.Input(shape=([4, 3, 3]))
in0Max73210 = tf.keras.layers.Input(shape=([1, 2, 1, 2]))
in1Max73210 = tf.keras.layers.Input(shape=([1, 2, 1, 2]))
in0Glo80513 = tf.keras.layers.Input(shape=([2, 2, 2, 2]))
in0Con94611 = tf.keras.layers.Input(shape=([2]))
in0Con75563 = tf.keras.layers.Input(shape=([32]))

Bat20372 = keras.layers.BatchNormalization(axis=1, epsilon=0.6786813108054719,  name = 'Bat20372', )(in0Bat20372)
Res80370 = keras.layers.Reshape((4, 9), name = 'Res80370', )(Bat20372)
Fla7447 = keras.layers.Flatten(name = 'Fla7447', )(Res80370)
Max73210 = keras.layers.Maximum(name = 'Max73210', )([in0Max73210,in1Max73210])
Res14976 = keras.layers.Reshape((1, 2, 2), name = 'Res14976', )(Max73210)
Res45294 = keras.layers.Reshape((1, 4), name = 'Res45294', )(Res14976)
Fla70103 = keras.layers.Flatten(name = 'Fla70103', )(Res45294)
Glo80513 = keras.layers.GlobalAveragePooling3D(name = 'Glo80513', )(in0Glo80513)
Con94611 = keras.layers.Concatenate(axis=1, name = 'Con94611', )([Glo80513,in0Con94611])
Add96227 = keras.layers.Add(name = 'Add96227', )([Fla70103,Con94611])
Con75563 = keras.layers.Concatenate(axis=1, name = 'Con75563', )([Add96227,in0Con75563])
Min26371 = keras.layers.Minimum(name = 'Min26371', )([Fla7447,Con75563])
Res64825 = keras.layers.Reshape((36, 1), name = 'Res64825', )(Min26371)
Res10916 = keras.layers.Reshape((36, 1, 1), name = 'Res10916', )(Res64825)
Zer27964 = keras.layers.ZeroPadding2D(padding=((1, 1), (1, 1)), name = 'Zer27964', )(Res10916)
model = tf.keras.models.Model(inputs=[in0Bat20372,in0Max73210,in1Max73210,in0Glo80513,in0Con94611,in0Con75563], outputs=Zer27964)
w = model.get_layer('Bat20372').get_weights() 
w[0] = np.array([0.6027, 0.0822, 0.8029, 0.4016])
w[1] = np.array([0.5513, 0.0587, 0.7707, 0.5311])
w[2] = np.array([0.313, 0.5036, 0.3597, 0.0314])
w[3] = np.array([0.9598, 0.6883, 0.7403, 0.574])
model.get_layer('Bat20372').set_weights(w) 
in0Bat20372 = tf.constant([[[[1.6997, 1.5195, 1.7315], [1.658, 1.0932, 1.5101], [1.2562, 1.2705, 1.0692]], [[1.7189, 1.6262, 1.3789], [1.4621, 1.4218, 1.6346], [1.295, 1.2415, 1.3024]], [[1.6309, 1.9185, 1.5894], [1.1985, 1.7904, 1.1628], [1.7457, 1.8737, 1.9912]], [[1.1429, 1.6555, 1.452], [1.3707, 1.9598, 1.5009], [1.0918, 1.2586, 1.5599]]]])
in0Max73210 = tf.constant([[[[[0.6592, 0.0625]], [[0.7252, 0.9353]]]]])
in1Max73210 = tf.constant([[[[[0.4948, 0.6382]], [[0.4195, 0.8875]]]]])
in0Glo80513 = tf.constant([[[[[1.6603, 1.1215], [1.7277, 1.6775]], [[1.2605, 1.8753], [1.5309, 1.1531]]], [[[1.3163, 1.4506], [1.0055, 1.3599]], [[1.4536, 1.7767], [1.9775, 1.2182]]]]])
in0Con94611 = tf.constant([[0.203, 0.6157]])
in0Con75563 = tf.constant([[0.4916, 0.7398, 0.4688, 0.0617, 0.7906, 0.3199, 0.2865, 0.1403, 0.8351, 0.0068, 0.9436, 0.552, 0.5453, 0.3016, 0.5981, 0.7167, 0.8198, 0.6687, 0.9226, 0.5913, 0.8549, 0.8938, 0.1454, 0.8115, 0.4759, 0.5361, 0.0547, 0.1231, 0.3951, 0.555, 0.3327, 0.271]])
print (np.array2string(model.predict([in0Bat20372,in0Max73210,in1Max73210,in0Glo80513,in0Con94611,in0Con75563],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Zer27964.png')

LBat20372 = batch_normalization_layer([[[[1.6997, 1.5195, 1.7315], [1.658, 1.0932, 1.5101], [1.2562, 1.2705, 1.0692]], [[1.7189, 1.6262, 1.3789], [1.4621, 1.4218, 1.6346], [1.295, 1.2415, 1.3024]], [[1.6309, 1.9185, 1.5894], [1.1985, 1.7904, 1.1628], [1.7457, 1.8737, 1.9912]], [[1.1429, 1.6555, 1.452], [1.3707, 1.9598, 1.5009], [1.0918, 1.2586, 1.5599]]]], 1, 0.6786813108054719, [0.6027, 0.0822, 0.8029, 0.4016], [0.5513, 0.0587, 0.7707, 0.5311], [0.313, 0.5036, 0.3597, 0.0314], [0.9598, 0.6883, 0.7403, 0.574], Bat20372), 
LRes80370 = reshape_layer(Bat20372, [4, 9], Res80370), 
LFla7447 = flatten_layer(Res80370, Fla7447), 
LMax73210 = maximum_layer([[[[[[0.6592, 0.0625]], [[0.7252, 0.9353]]]]], [[[[[0.4948, 0.6382]], [[0.4195, 0.8875]]]]]], Max73210), 
LRes14976 = reshape_layer(Max73210, [1, 2, 2], Res14976), 
LRes45294 = reshape_layer(Res14976, [1, 4], Res45294), 
LFla70103 = flatten_layer(Res45294, Fla70103), 
LGlo80513 = global_average_pooling3D_layer([[[[[1.6603, 1.1215], [1.7277, 1.6775]], [[1.2605, 1.8753], [1.5309, 1.1531]]], [[[1.3163, 1.4506], [1.0055, 1.3599]], [[1.4536, 1.7767], [1.9775, 1.2182]]]]], Glo80513), 
LCon94611 = concatenate_layer([Glo80513,[[0.203, 0.6157]]], 1, Con94611), 
LAdd96227 = add_layer([Fla70103,Con94611], Add96227), 
LCon75563 = concatenate_layer([Add96227,[[0.4916, 0.7398, 0.4688, 0.0617, 0.7906, 0.3199, 0.2865, 0.1403, 0.8351, 0.0068, 0.9436, 0.552, 0.5453, 0.3016, 0.5981, 0.7167, 0.8198, 0.6687, 0.9226, 0.5913, 0.8549, 0.8938, 0.1454, 0.8115, 0.4759, 0.5361, 0.0547, 0.1231, 0.3951, 0.555, 0.3327, 0.271]]], 1, Con75563), 
LMin26371 = minimum_layer([Fla7447,Con75563], Min26371), 
LRes64825 = reshape_layer(Min26371, [36, 1], Res64825), 
LRes10916 = reshape_layer(Res64825, [36, 1, 1], Res10916), 
LZer27964 = zero_padding2D_layer(Res10916, 1, 1, 1, 1, Zer27964), 
exec_layers([LBat20372,LRes80370,LFla7447,LMax73210,LRes14976,LRes45294,LFla70103,LGlo80513,LCon94611,LAdd96227,LCon75563,LMin26371,LRes64825,LRes10916,LZer27964],["Bat20372","Res80370","Fla7447","Max73210","Res14976","Res45294","Fla70103","Glo80513","Con94611","Add96227","Con75563","Min26371","Res64825","Res10916","Zer27964"],Zer27964,"Zer27964")

Actual (Unparsed): [[[[0.0000000], [0.0000000], [0.0000000]], [[0.0000000], [1.2042245], [0.0000000]], [[0.0000000], [1.1193777], [0.0000000]], [[0.0000000], [0.9282000], [0.0000000]], [[0.0000000], [1.1845901], [0.0000000]], [[0.0000000], [0.4916000], [0.0000000]], [[0.0000000], [0.7398000], [0.0000000]], [[0.0000000], [0.4688000], [0.0000000]], [[0.0000000], [0.0617000], [0.0000000]], [[0.0000000], [0.7906000], [0.0000000]], [[0.0000000], [0.1441425], [0.0000000]], [[0.0000000], [0.1376252], [0.0000000]], [[0.0000000], [0.1202386], [0.0000000]], [[0.0000000], [0.1260880], [0.0000000]], [[0.0000000], [0.0068000], [0.0000000]], [[0.0000000], [0.1382157], [0.0000000]], [[0.0000000], [0.1143399], [0.0000000]], [[0.0000000], [0.1105786], [0.0000000]], [[0.0000000], [0.1148602], [0.0000000]], [[0.0000000], [0.5981000], [0.0000000]], [[0.0000000], [0.7167000], [0.0000000]], [[0.0000000], [0.8198000], [0.0000000]], [[0.0000000], [0.6687000], [0.0000000]], [[0.0000000], [0.9226000], [0.0000000]], [[0.0000000], [0.5913000], [0.0000000]], [[0.0000000], [0.8549000], [0.0000000]], [[0.0000000], [0.8938000], [0.0000000]], [[0.0000000], [0.1454000], [0.0000000]], [[0.0000000], [0.8115000], [0.0000000]], [[0.0000000], [0.4759000], [0.0000000]], [[0.0000000], [0.5361000], [0.0000000]], [[0.0000000], [0.0547000], [0.0000000]], [[0.0000000], [0.1231000], [0.0000000]], [[0.0000000], [0.3951000], [0.0000000]], [[0.0000000], [0.5550000], [0.0000000]], [[0.0000000], [0.3327000], [0.0000000]], [[0.0000000], [0.2710000], [0.0000000]], [[0.0000000], [0.0000000], [0.0000000]]]]

Expected (Unparsed): [[[[0],[0],[0]],[[0],[1.2042244937872832],[0]],[[0],[1.119377739781032],[0]],[[0],[0.9281999999999999],[0]],[[0],[1.1845901450522072],[0]],[[0],[0.4916],[0]],[[0],[0.7398],[0]],[[0],[0.4688],[0]],[[0],[0.0617],[0]],[[0],[0.7906],[0]],[[0],[0.14414251571219822],[0]],[[0],[0.1376251774364467],[0]],[[0],[0.12023857813123268],[0]],[[0],[0.12608801226869248],[0]],[[0],[0.0068],[0]],[[0],[0.1382157453060941],[0]],[[0],[0.1143399300046356],[0]],[[0],[0.11057857512057191],[0]],[[0],[0.11486019217551544],[0]],[[0],[0.5981],[0]],[[0],[0.7167],[0]],[[0],[0.8198],[0]],[[0],[0.6687],[0]],[[0],[0.9226],[0]],[[0],[0.5913],[0]],[[0],[0.8549],[0]],[[0],[0.8938],[0]],[[0],[0.1454],[0]],[[0],[0.8115],[0]],[[0],[0.4759],[0]],[[0],[0.5361],[0]],[[0],[0.0547],[0]],[[0],[0.1231],[0]],[[0],[0.3951],[0]],[[0],[0.555],[0]],[[0],[0.3327],[0]],[[0],[0.271],[0]],[[0],[0],[0]]]]

Actual:   [[[[0], [0], [0]], [[0], [1.2043], [0]], [[0], [1.1194], [0]], [[0], [0.9282], [0]], [[0], [1.1846], [0]], [[0], [0.4916], [0]], [[0], [0.7398], [0]], [[0], [0.4688], [0]], [[0], [0.0617], [0]], [[0], [0.7906], [0]], [[0], [0.1442], [0]], [[0], [0.1377], [0]], [[0], [0.1203], [0]], [[0], [0.1261], [0]], [[0], [0.0068], [0]], [[0], [0.1383], [0]], [[0], [0.1144], [0]], [[0], [0.1106], [0]], [[0], [0.1149], [0]], [[0], [0.5981], [0]], [[0], [0.7167], [0]], [[0], [0.8198], [0]], [[0], [0.6687], [0]], [[0], [0.9226], [0]], [[0], [0.5913], [0]], [[0], [0.8549], [0]], [[0], [0.8938], [0]], [[0], [0.1454], [0]], [[0], [0.8115], [0]], [[0], [0.4759], [0]], [[0], [0.5361], [0]], [[0], [0.0547], [0]], [[0], [0.1231], [0]], [[0], [0.3951], [0]], [[0], [0.555], [0]], [[0], [0.3327], [0]], [[0], [0.271], [0]], [[0], [0], [0]]]]

Expected: [[[[0], [0], [0]], [[0], [1.2043], [0]], [[0], [1.1194], [0]], [[0], [0.9282], [0]], [[0], [1.1846], [0]], [[0], [0.4916], [0]], [[0], [0.7398], [0]], [[0], [0.4688], [0]], [[0], [0.0617], [0]], [[0], [0.7906], [0]], [[0], [0.1442], [0]], [[0], [0.1377], [0]], [[0], [0.1203], [0]], [[0], [0.1261], [0]], [[0], [0.0068], [0]], [[0], [0.1383], [0]], [[0], [0.1144], [0]], [[0], [0.1106], [0]], [[0], [0.1149], [0]], [[0], [0.5981], [0]], [[0], [0.7167], [0]], [[0], [0.8198], [0]], [[0], [0.6687], [0]], [[0], [0.9226], [0]], [[0], [0.5913], [0]], [[0], [0.8549], [0]], [[0], [0.8938], [0]], [[0], [0.1454], [0]], [[0], [0.8115], [0]], [[0], [0.4759], [0]], [[0], [0.5361], [0]], [[0], [0.0547], [0]], [[0], [0.1231], [0]], [[0], [0.3951], [0]], [[0], [0.555], [0]], [[0], [0.3327], [0]], [[0], [0.271], [0]], [[0], [0], [0]]]]