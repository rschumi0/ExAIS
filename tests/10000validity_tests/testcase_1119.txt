import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Dot90122 = tf.keras.layers.Input(shape=([3, 3]))
in1Dot90122 = tf.keras.layers.Input(shape=([3, 3]))
in0Sub98251 = tf.keras.layers.Input(shape=([3, 2]))
in1Sub98251 = tf.keras.layers.Input(shape=([3, 2]))
in0Add35140 = tf.keras.layers.Input(shape=([1, 1, 2]))
in1Add35140 = tf.keras.layers.Input(shape=([1, 1, 2]))
in0Con20984 = tf.keras.layers.Input(shape=([3, 1]))

Dot90122 = keras.layers.Dot(axes=(2, 1), name = 'Dot90122', )([in0Dot90122,in1Dot90122])
Sub98251 = keras.layers.Subtract(name = 'Sub98251', )([in0Sub98251,in1Sub98251])
Add35140 = keras.layers.Add(name = 'Add35140', )([in0Add35140,in1Add35140])
Res1212 = keras.layers.Reshape((1, 2), name = 'Res1212', )(Add35140)
Cro45258 = keras.layers.Cropping1D(cropping=((0, 0)), name = 'Cro45258', )(Res1212)
Zer62670 = keras.layers.ZeroPadding1D(padding=((2, 0)), name = 'Zer62670', )(Cro45258)
Min74149 = keras.layers.Minimum(name = 'Min74149', )([Sub98251,Zer62670])
Con20984 = keras.layers.Concatenate(axis=2, name = 'Con20984', )([Min74149,in0Con20984])
Ave89383 = keras.layers.Average(name = 'Ave89383', )([Dot90122,Con20984])
model = tf.keras.models.Model(inputs=[in0Dot90122,in1Dot90122,in0Sub98251,in1Sub98251,in0Add35140,in1Add35140,in0Con20984], outputs=Ave89383)
in0Dot90122 = tf.constant([[[0.4471, 0.6311, 0.027], [0.7222, 0.5665, 0.9601], [0.1859, 0.7949, 0.3193]]])
in1Dot90122 = tf.constant([[[0.4229, 0.6222, 0.6359], [0.4473, 0.3482, 0.8208], [0.279, 0.2124, 0.1327]]])
in0Sub98251 = tf.constant([[[0.2577, 0.0469], [0.0929, 0.6211], [0.1234, 0.5635]]])
in1Sub98251 = tf.constant([[[0.0306, 0.7157], [0.1894, 0.8014], [0.6096, 0.7813]]])
in0Add35140 = tf.constant([[[[0.121, 0.8293]]]])
in1Add35140 = tf.constant([[[[0.0207, 0.0531]]]])
in0Con20984 = tf.constant([[[0.3589], [0.0636], [0.6601]]])
print (np.array2string(model.predict([in0Dot90122,in1Dot90122,in0Sub98251,in1Sub98251,in0Add35140,in1Add35140,in0Con20984],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Ave89383.png')

LDot90122 = dot_layer([[[0.4471, 0.6311, 0.027], [0.7222, 0.5665, 0.9601], [0.1859, 0.7949, 0.3193]]], [[[0.4229, 0.6222, 0.6359], [0.4473, 0.3482, 0.8208], [0.279, 0.2124, 0.1327]]], 2, 1, Dot90122), 
LSub98251 = subtract_layer([[[0.2577, 0.0469], [0.0929, 0.6211], [0.1234, 0.5635]]], [[[0.0306, 0.7157], [0.1894, 0.8014], [0.6096, 0.7813]]], Sub98251), 
LAdd35140 = add_layer([[[[[0.121, 0.8293]]]], [[[[0.0207, 0.0531]]]]], Add35140), 
LRes1212 = reshape_layer(Add35140, [1, 2], Res1212), 
LCro45258 = cropping1D_layer(Res1212, 0, 0, Cro45258), 
LZer62670 = zero_padding1D_layer(Cro45258, 2, 0, Zer62670), 
LMin74149 = minimum_layer([Sub98251,Zer62670], Min74149), 
LCon20984 = concatenate_layer([Min74149,[[[0.3589], [0.0636], [0.6601]]]], 2, Con20984), 
LAve89383 = average_layer([Dot90122,Con20984], Ave89383), 
exec_layers([LDot90122,LSub98251,LAdd35140,LRes1212,LCro45258,LZer62670,LMin74149,LCon20984,LAve89383],["Dot90122","Sub98251","Add35140","Res1212","Cro45258","Zer62670","Min74149","Con20984","Ave89383"],Ave89383,"Ave89383")

Actual (Unparsed): [[[0.2394513, -0.0825653, 0.5824004], [0.3650909, 0.3351167, 0.5576177], [0.0185303, 0.1212352, 0.7365694]]]

Expected (Unparsed): [[[0.23945131,-0.08256528000000002,0.582400335],[0.365090865,0.33511669,0.5576177250000001],[0.018530289999999977,0.12123524000000002,0.73656942]]]

Actual:   [[[0.2395, -0.0825, 0.5825], [0.3651, 0.3352, 0.5577], [0.0186, 0.1213, 0.7366]]]

Expected: [[[0.2395, -0.0825, 0.5825], [0.3651, 0.3352, 0.5577], [0.0186, 0.1213, 0.7366]]]