import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Lea20300 = tf.keras.layers.Input(shape=([1, 2, 1, 2]))
in0Con39844 = tf.keras.layers.Input(shape=([2, 7, 2]))
in0Glo83276 = tf.keras.layers.Input(shape=([1, 2, 2]))

Lea20300 = keras.layers.LeakyReLU(alpha=7.583111141566732, name = 'Lea20300', input_shape=(1, 2, 1, 2))(in0Lea20300)
Res14274 = keras.layers.Reshape((1, 2, 2), name = 'Res14274', )(Lea20300)
Res58012 = keras.layers.Reshape((1, 4), name = 'Res58012', )(Res14274)
Cro50358 = keras.layers.Cropping1D(cropping=((0, 0)), name = 'Cro50358', )(Res58012)
Res53214 = keras.layers.Reshape((1, 4, 1), name = 'Res53214', )(Cro50358)
Zer70095 = keras.layers.ZeroPadding2D(padding=((1, 0), (3, 0)), name = 'Zer70095', )(Res53214)
Con39844 = keras.layers.Concatenate(axis=3, name = 'Con39844', )([Zer70095,in0Con39844])
Glo83276 = keras.layers.GlobalMaxPool2D(name = 'Glo83276', )(in0Glo83276)
Res25868 = keras.layers.Reshape((2, 1), name = 'Res25868', )(Glo83276)
Res27538 = keras.layers.Reshape((2, 1, 1), name = 'Res27538', )(Res25868)
Con98588 = keras.layers.Conv2DTranspose(3, (2, 1),strides=(1, 1), padding='same', name = 'Con98588', )(Res27538)
Zer61889 = keras.layers.ZeroPadding2D(padding=((0, 0), (6, 0)), name = 'Zer61889', )(Con98588)
Add75694 = keras.layers.Add(name = 'Add75694', )([Con39844,Zer61889])
Res15649 = keras.layers.Reshape((2, 21), name = 'Res15649', )(Add75694)
Up_36079 = keras.layers.UpSampling1D(size=(1), name = 'Up_36079', )(Res15649)
model = tf.keras.models.Model(inputs=[in0Lea20300,in0Con39844,in0Glo83276], outputs=Up_36079)
w = model.get_layer('Con98588').get_weights() 
w[0] = np.array([[[[0.8157], [0.3812], [0.5809]]], [[[0.897], [0.6703], [0.0454]]]])
w[1] = np.array([0, 0, 0])
model.get_layer('Con98588').set_weights(w) 
in0Lea20300 = tf.constant([[[[[0.2975, 0.8756]], [[0.9745, 0.7805]]]]])
in0Con39844 = tf.constant([[[[0.5664, 0.3306], [0.1197, 0.071], [0.1016, 0.4209], [0.8977, 0.4134], [0.0781, 0.4303], [0.0369, 0.8401], [0.8777, 0.5552]], [[0.1586, 0.4163], [0.9617, 0.6445], [0.5258, 0.5989], [0.2284, 0.837], [0.6155, 0.8693], [0.9723, 0.0137], [0.3436, 0.6931]]]])
in0Glo83276 = tf.constant([[[[1.042, 1.9645], [1.9263, 1.9938]]]])
print (np.array2string(model.predict([in0Lea20300,in0Con39844,in0Glo83276],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Up_36079.png')

LLea20300 = leaky_relu_layer([[[[[0.2975, 0.8756]], [[0.9745, 0.7805]]]]], 7.583111141566732, Lea20300), 
LRes14274 = reshape_layer(Lea20300, [1, 2, 2], Res14274), 
LRes58012 = reshape_layer(Res14274, [1, 4], Res58012), 
LCro50358 = cropping1D_layer(Res58012, 0, 0, Cro50358), 
LRes53214 = reshape_layer(Cro50358, [1, 4, 1], Res53214), 
LZer70095 = zero_padding2D_layer(Res53214, 1, 0, 3, 0, Zer70095), 
LCon39844 = concatenate_layer([Zer70095,[[[[0.5664, 0.3306], [0.1197, 0.071], [0.1016, 0.4209], [0.8977, 0.4134], [0.0781, 0.4303], [0.0369, 0.8401], [0.8777, 0.5552]], [[0.1586, 0.4163], [0.9617, 0.6445], [0.5258, 0.5989], [0.2284, 0.837], [0.6155, 0.8693], [0.9723, 0.0137], [0.3436, 0.6931]]]]], 3, Con39844), 
LGlo83276 = global_max_pool2D_layer([[[[1.042, 1.9645], [1.9263, 1.9938]]]], Glo83276), 
LRes25868 = reshape_layer(Glo83276, [2, 1], Res25868), 
LRes27538 = reshape_layer(Res25868, [2, 1, 1], Res27538), 
LCon98588 = conv2D_transpose_layer(Res27538, 2, 1,[[[[0.8157], [0.3812], [0.5809]]], [[[0.897], [0.6703], [0.0454]]]],[0, 0, 0], 1, 1, true, Con98588), 
LZer61889 = zero_padding2D_layer(Con98588, 0, 0, 6, 0, Zer61889), 
LAdd75694 = add_layer([Con39844,Zer61889], Add75694), 
LRes15649 = reshape_layer(Add75694, [2, 21], Res15649), 
LUp_36079 = up_sampling1D_layer(Res15649, 1, Up_36079), 
exec_layers([LLea20300,LRes14274,LRes58012,LCro50358,LRes53214,LZer70095,LCon39844,LGlo83276,LRes25868,LRes27538,LCon98588,LZer61889,LAdd75694,LRes15649,LUp_36079],["Lea20300","Res14274","Res58012","Cro50358","Res53214","Zer70095","Con39844","Glo83276","Res25868","Res27538","Con98588","Zer61889","Add75694","Res15649","Up_36079"],Up_36079,"Up_36079")

Actual (Unparsed): [[[0.0000000, 0.5664000, 0.3306000, 0.0000000, 0.1197000, 0.0710000, 0.0000000, 0.1016000, 0.4209000, 0.0000000, 0.8977000, 0.4134000, 0.0000000, 0.0781000, 0.4303000, 0.0000000, 0.0369000, 0.8401000, 1.5712829, 1.6120055, 1.6741877], [0.0000000, 0.1586000, 0.4163000, 0.0000000, 0.9617000, 0.6445000, 0.0000000, 0.5258000, 0.5989000, 0.2975000, 0.2284000, 0.8370000, 0.8756000, 0.6155000, 0.8693000, 0.9745000, 0.9723000, 0.0137000, 4.1347338, 2.3948355, 1.9387524]]]

Expected (Unparsed): [[[0,0.5664,0.3306,0,0.1197,0.071,0,0.1016,0.4209,0,0.8977,0.4134,0,0.0781,0.4303,0,0.0369,0.8401,1.5712829099999999,1.61200556,1.6741876699999998],[0,0.1586,0.4163,0,0.9617,0.6445,0,0.5258,0.5989,0.2975,0.2284,0.837,0.8756,0.6155,0.8693,0.9745,0.9723,0.0137,4.13473376,2.39483545,1.93875244]]]

Actual:   [[[0, 0.5664, 0.3306, 0, 0.1197, 0.071, 0, 0.1016, 0.4209, 0, 0.8977, 0.4134, 0, 0.0781, 0.4303, 0, 0.0369, 0.8401, 1.5713, 1.6121, 1.6742], [0, 0.1586, 0.4163, 0, 0.9617, 0.6445, 0, 0.5258, 0.5989, 0.2975, 0.2284, 0.837, 0.8756, 0.6155, 0.8693, 0.9745, 0.9723, 0.0137, 4.1348, 2.3949, 1.9388]]]

Expected: [[[0, 0.5664, 0.3306, 0, 0.1197, 0.071, 0, 0.1016, 0.4209, 0, 0.8977, 0.4134, 0, 0.0781, 0.4303, 0, 0.0369, 0.8401, 1.5713, 1.6121, 1.6742], [0, 0.1586, 0.4163, 0, 0.9617, 0.6445, 0, 0.5258, 0.5989, 0.2975, 0.2284, 0.837, 0.8756, 0.6155, 0.8693, 0.9745, 0.9723, 0.0137, 4.1348, 2.3949, 1.9388]]]