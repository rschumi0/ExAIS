import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Mul18877 = tf.keras.layers.Input(shape=([1, 2]))
in1Mul18877 = tf.keras.layers.Input(shape=([1, 2]))
in0Con53565 = tf.keras.layers.Input(shape=([1, 2, 1]))
in0Loc53179 = tf.keras.layers.Input(shape=([2, 2, 1]))
in0Min29710 = tf.keras.layers.Input(shape=([1, 1, 2, 1]))
in1Min29710 = tf.keras.layers.Input(shape=([1, 1, 2, 1]))
in0Glo61763 = tf.keras.layers.Input(shape=([1, 1, 2]))
in0Con16059 = tf.keras.layers.Input(shape=([6]))

Mul18877 = keras.layers.Multiply(name = 'Mul18877', )([in0Mul18877,in1Mul18877])
Res71220 = keras.layers.Reshape((1, 2, 1), name = 'Res71220', )(Mul18877)
Con53565 = keras.layers.Concatenate(axis=3, name = 'Con53565', )([Res71220,in0Con53565])
Loc53179 = keras.layers.LocallyConnected2D(2, (2, 2),strides=(1, 1), name = 'Loc53179', )(in0Loc53179)
Zer7671 = keras.layers.ZeroPadding2D(padding=((0, 0), (1, 0)), name = 'Zer7671', )(Loc53179)
Mul14 = keras.layers.Multiply(name = 'Mul14', )([Con53565,Zer7671])
ReL48874 = keras.layers.ReLU(max_value=8.993043277497268, negative_slope=4.306899026610494, threshold=5.329378018867711, name = 'ReL48874', )(Mul14)
Res8684 = keras.layers.Reshape((1, 4), name = 'Res8684', )(ReL48874)
Min29710 = keras.layers.Minimum(name = 'Min29710', )([in0Min29710,in1Min29710])
Res21712 = keras.layers.Reshape((1, 1, 2), name = 'Res21712', )(Min29710)
Res91008 = keras.layers.Reshape((1, 2), name = 'Res91008', )(Res21712)
Dot93192 = keras.layers.Dot(axes=(1, 1), name = 'Dot93192', )([Res8684,Res91008])
Fla53633 = keras.layers.Flatten(name = 'Fla53633', )(Dot93192)
Glo61763 = keras.layers.GlobalAveragePooling2D(name = 'Glo61763', )(in0Glo61763)
Con16059 = keras.layers.Concatenate(axis=1, name = 'Con16059', )([Glo61763,in0Con16059])
Sub3364 = keras.layers.Subtract(name = 'Sub3364', )([Fla53633,Con16059])
model = tf.keras.models.Model(inputs=[in0Mul18877,in1Mul18877,in0Con53565,in0Loc53179,in0Min29710,in1Min29710,in0Glo61763,in0Con16059], outputs=Sub3364)
w = model.get_layer('Loc53179').get_weights() 
w[0] = np.array([[[0.1207, 0.7955], [0.3131, 0.9672], [0.7566, 0.9421], [0.8109, 0.1619]]])
w[1] = np.array([[[0, 0]]])
model.get_layer('Loc53179').set_weights(w) 
in0Mul18877 = tf.constant([[[0.4164, 0.7183]]])
in1Mul18877 = tf.constant([[[0.9153, 0.3088]]])
in0Con53565 = tf.constant([[[[0.2436], [0.6086]]]])
in0Loc53179 = tf.constant([[[[0.1147], [0.9717]], [[0.0816], [0.6197]]]])
in0Min29710 = tf.constant([[[[[0.7858], [0.7749]]]]])
in1Min29710 = tf.constant([[[[[0.1273], [0.0148]]]]])
in0Glo61763 = tf.constant([[[[1.8802, 1.2478]]]])
in0Con16059 = tf.constant([[0.1627, 0.2725, 0.135, 0.3567, 0.0748, 0.3061]])
print (np.array2string(model.predict([in0Mul18877,in1Mul18877,in0Con53565,in0Loc53179,in0Min29710,in1Min29710,in0Glo61763,in0Con16059],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Sub3364.png')

LMul18877 = multiply_layer([[[[0.4164, 0.7183]]], [[[0.9153, 0.3088]]]], Mul18877), 
LRes71220 = reshape_layer(Mul18877, [1, 2, 1], Res71220), 
LCon53565 = concatenate_layer([Res71220,[[[[0.2436], [0.6086]]]]], 3, Con53565), 
LLoc53179 = locally_connected2D_layer([[[[0.1147], [0.9717]], [[0.0816], [0.6197]]]], 2, 2,[[[0.1207, 0.7955], [0.3131, 0.9672], [0.7566, 0.9421], [0.8109, 0.1619]]],[[[0, 0]]], 1, 1, Loc53179), 
LZer7671 = zero_padding2D_layer(Loc53179, 0, 0, 1, 0, Zer7671), 
LMul14 = multiply_layer([Con53565,Zer7671], Mul14), 
LReL48874 = relu_layer(Mul14, 8.993043277497268, 4.306899026610494, 5.329378018867711, ReL48874), 
LRes8684 = reshape_layer(ReL48874, [1, 4], Res8684), 
LMin29710 = minimum_layer([[[[[[0.7858], [0.7749]]]]], [[[[[0.1273], [0.0148]]]]]], Min29710), 
LRes21712 = reshape_layer(Min29710, [1, 1, 2], Res21712), 
LRes91008 = reshape_layer(Res21712, [1, 2], Res91008), 
LDot93192 = dot_layer(Res8684,Res91008, 1, 1, Dot93192), 
LFla53633 = flatten_layer(Dot93192, Fla53633), 
LGlo61763 = global_average_pooling2D_layer([[[[1.8802, 1.2478]]]], Glo61763), 
LCon16059 = concatenate_layer([Glo61763,[[0.1627, 0.2725, 0.135, 0.3567, 0.0748, 0.3061]]], 1, Con16059), 
LSub3364 = subtract_layer(Fla53633,Con16059, Sub3364), 
exec_layers([LMul18877,LRes71220,LCon53565,LLoc53179,LZer7671,LMul14,LReL48874,LRes8684,LMin29710,LRes21712,LRes91008,LDot93192,LFla53633,LGlo61763,LCon16059,LSub3364],["Mul18877","Res71220","Con53565","Loc53179","Zer7671","Mul14","ReL48874","Res8684","Min29710","Res21712","Res91008","Dot93192","Fla53633","Glo61763","Con16059","Sub3364"],Sub3364,"Sub3364")

Actual (Unparsed): [[-4.8021286, -1.5875058, -3.0846286, -0.6122058, -2.9496259, -0.6839307, -2.5935555, -0.5989326]]

Expected (Unparsed): [[-4.80212873914196,-1.5875057764281304,-3.08462873914196,-0.6122057764281306,-2.9496260343769114,-0.6839306779951162,-2.593555676996786,-0.5989325531779452]]

Actual:   [[-4.8021, -1.5875, -3.0846, -0.6122, -2.9496, -0.6839, -2.5935, -0.5989]]

Expected: [[-4.8021, -1.5875, -3.0846, -0.6122, -2.9496, -0.6839, -2.5935, -0.5989]]