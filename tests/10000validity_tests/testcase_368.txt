import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Sep24118 = tf.keras.layers.Input(shape=([2, 1]))
in0Glo10836 = tf.keras.layers.Input(shape=([1, 2]))
in0Con62076 = tf.keras.layers.Input(shape=([4, 3]))
in0Ave39001 = tf.keras.layers.Input(shape=([2, 1]))
in1Ave39001 = tf.keras.layers.Input(shape=([2, 1]))
in0Con73292 = tf.keras.layers.Input(shape=([4, 3]))

Sep24118 = keras.layers.SeparableConv1D(4, (2),strides=(2), padding='valid', name = 'Sep24118', )(in0Sep24118)
Zer98997 = keras.layers.ZeroPadding1D(padding=((3, 0)), name = 'Zer98997', )(Sep24118)
Glo10836 = keras.layers.GlobalAveragePooling1D(name = 'Glo10836', )(in0Glo10836)
Res97584 = keras.layers.Reshape((2, 1), name = 'Res97584', )(Glo10836)
Zer73382 = keras.layers.ZeroPadding1D(padding=((1, 1)), name = 'Zer73382', )(Res97584)
Con62076 = keras.layers.Concatenate(axis=2, name = 'Con62076', )([Zer73382,in0Con62076])
Add4872 = keras.layers.Add(name = 'Add4872', )([Zer98997,Con62076])
Ave39001 = keras.layers.Average(name = 'Ave39001', )([in0Ave39001,in1Ave39001])
Zer99545 = keras.layers.ZeroPadding1D(padding=((2, 0)), name = 'Zer99545', )(Ave39001)
Con73292 = keras.layers.Concatenate(axis=2, name = 'Con73292', )([Zer99545,in0Con73292])
Mul38079 = keras.layers.Multiply(name = 'Mul38079', )([Add4872,Con73292])
model = tf.keras.models.Model(inputs=[in0Sep24118,in0Glo10836,in0Con62076,in0Ave39001,in1Ave39001,in0Con73292], outputs=Mul38079)
w = model.get_layer('Sep24118').get_weights() 
w[0] = np.array([[[0.8373]], [[0.4531]]])
w[1] = np.array([[[0.7482, 0.969, 0.986, 0.0107]]])
w[2] = np.array([0, 0, 0, 0])
model.get_layer('Sep24118').set_weights(w) 
in0Sep24118 = tf.constant([[[0.5564], [0.1804]]])
in0Glo10836 = tf.constant([[[1.4727, 1.3559]]])
in0Con62076 = tf.constant([[[0.9965, 0.5267, 0.0119], [0.888, 0.4416, 0.778], [0.5416, 0.8025, 0.221], [0.1612, 0.2348, 0.5424]]])
in0Ave39001 = tf.constant([[[0.1614], [0.524]]])
in1Ave39001 = tf.constant([[[0.756], [0.3772]]])
in0Con73292 = tf.constant([[[0.9953, 0.5497, 0.8524], [0.1352, 0.9042, 0.8097], [0.7918, 0.5059, 0.0674], [0.3686, 0.2842, 0.4894]]])
print (np.array2string(model.predict([in0Sep24118,in0Glo10836,in0Con62076,in0Ave39001,in1Ave39001,in0Con73292],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Mul38079.png')

LSep24118 = separable_conv1D_layer([[[0.5564], [0.1804]]], 2,[[[[0.8373]], [[0.4531]]],[[[0.7482, 0.969, 0.986, 0.0107]]]],[0, 0, 0, 0], 2, false, Sep24118), 
LZer98997 = zero_padding1D_layer(Sep24118, 3, 0, Zer98997), 
LGlo10836 = global_average_pooling1D_layer([[[1.4727, 1.3559]]], Glo10836), 
LRes97584 = reshape_layer(Glo10836, [2, 1], Res97584), 
LZer73382 = zero_padding1D_layer(Res97584, 1, 1, Zer73382), 
LCon62076 = concatenate_layer([Zer73382,[[[0.9965, 0.5267, 0.0119], [0.888, 0.4416, 0.778], [0.5416, 0.8025, 0.221], [0.1612, 0.2348, 0.5424]]]], 2, Con62076), 
LAdd4872 = add_layer([Zer98997,Con62076], Add4872), 
LAve39001 = average_layer([[[[0.1614], [0.524]]], [[[0.756], [0.3772]]]], Ave39001), 
LZer99545 = zero_padding1D_layer(Ave39001, 2, 0, Zer99545), 
LCon73292 = concatenate_layer([Zer99545,[[[0.9953, 0.5497, 0.8524], [0.1352, 0.9042, 0.8097], [0.7918, 0.5059, 0.0674], [0.3686, 0.2842, 0.4894]]]], 2, Con73292), 
LMul38079 = multiply_layer([Add4872,Con73292], Mul38079), 
exec_layers([LSep24118,LZer98997,LGlo10836,LRes97584,LZer73382,LCon62076,LAdd4872,LAve39001,LZer99545,LCon73292,LMul38079],["Sep24118","Zer98997","Glo10836","Res97584","Zer73382","Con62076","Add4872","Ave39001","Zer99545","Con73292","Mul38079"],Mul38079,"Mul38079")

Actual (Unparsed): [[[0.0000000, 0.9918165, 0.2895270, 0.0101436], [0.0000000, 0.1200576, 0.3992947, 0.6299466], [0.6219513, 0.4288389, 0.4059848, 0.0148954], [0.1846216, 0.2550111, 0.2201829, 0.2683182]]]

Expected (Unparsed): [[[0,0.99181645,0.28952698999999993,0.010143560000000001],[0.0,0.12005759999999999,0.39929472,0.6299466],[0.62195133,0.4288388799999999,0.40598475,0.014895400000000001],[0.1846216419124032,0.255011102807264,0.22018292078675203,0.2683181790740768]]]

Actual:   [[[0, 0.9919, 0.2896, 0.0102], [0, 0.1201, 0.3993, 0.63], [0.622, 0.4289, 0.406, 0.0149], [0.1847, 0.2551, 0.2202, 0.2684]]]

Expected: [[[0, 0.9919, 0.2896, 0.0102], [0, 0.1201, 0.3993, 0.63], [0.622, 0.4289, 0.406, 0.0149], [0.1847, 0.2551, 0.2202, 0.2684]]]