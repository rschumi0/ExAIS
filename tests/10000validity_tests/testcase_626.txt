import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Thr44258 = tf.keras.layers.Input(shape=([1, 1, 2]))
in0Max611 = tf.keras.layers.Input(shape=([2, 2, 2]))
in1Max611 = tf.keras.layers.Input(shape=([2, 2, 2]))
in0Mas86427 = tf.keras.layers.Input(shape=([2, 1]))
in0Con77537 = tf.keras.layers.Input(shape=([2, 3]))
in0Con89307 = tf.keras.layers.Input(shape=([11]))
in0Den67194 = tf.keras.layers.Input(shape=([3, 5]))
in0Sub69562 = tf.keras.layers.Input(shape=([2, 3, 2, 3]))
in1Sub69562 = tf.keras.layers.Input(shape=([2, 3, 2, 3]))
in0Con23981 = tf.keras.layers.Input(shape=([6]))

Thr44258 = keras.layers.ThresholdedReLU(theta=9.198842827098652, name = 'Thr44258', input_shape=(1, 1, 2))(in0Thr44258)
ELU87887 = keras.layers.ELU(alpha=3.9218016061663086, name = 'ELU87887', )(Thr44258)
Zer97426 = keras.layers.ZeroPadding2D(padding=((1, 0), (1, 0)), name = 'Zer97426', )(ELU87887)
Max611 = keras.layers.Maximum(name = 'Max611', )([in0Max611,in1Max611])
Add64006 = keras.layers.Add(name = 'Add64006', )([Zer97426,Max611])
Res84047 = keras.layers.Reshape((2, 4), name = 'Res84047', )(Add64006)
Mas86427 = keras.layers.Masking(mask_value=2, name = 'Mas86427', )(in0Mas86427)
Con77537 = keras.layers.Concatenate(axis=2, name = 'Con77537', )([Mas86427,in0Con77537])
Add71136 = keras.layers.Add(name = 'Add71136', )([Res84047,Con77537])
Res46687 = keras.layers.Reshape((2, 4, 1), name = 'Res46687', )(Add71136)
Glo95283 = keras.layers.GlobalMaxPool2D(name = 'Glo95283', )(Res46687)
Con89307 = keras.layers.Concatenate(axis=1, name = 'Con89307', )([Glo95283,in0Con89307])
Den67194 = keras.layers.Dense(4,name = 'Den67194', )(in0Den67194)
Fla95666 = keras.layers.Flatten(name = 'Fla95666', )(Den67194)
Sub69562 = keras.layers.Subtract(name = 'Sub69562', )([in0Sub69562,in1Sub69562])
Res34782 = keras.layers.Reshape((2, 3, 6), name = 'Res34782', )(Sub69562)
Glo14111 = keras.layers.GlobalMaxPool2D(name = 'Glo14111', )(Res34782)
Con23981 = keras.layers.Concatenate(axis=1, name = 'Con23981', )([Glo14111,in0Con23981])
Mul57510 = keras.layers.Multiply(name = 'Mul57510', )([Fla95666,Con23981])
Mul40905 = keras.layers.Multiply(name = 'Mul40905', )([Con89307,Mul57510])
model = tf.keras.models.Model(inputs=[in0Thr44258,in0Max611,in1Max611,in0Mas86427,in0Con77537,in0Con89307,in0Den67194,in0Sub69562,in1Sub69562,in0Con23981], outputs=Mul40905)
w = model.get_layer('Den67194').get_weights() 
w[0] = np.array([[0.3353, 0.1675, 0.1867, 0.7697], [0.0064, 0.0588, 0.5329, 0.9952], [0.1114, 0.8146, 0.9418, 0.8277], [0.0732, 0.8709, 0.0843, 0.2427], [0.1225, 0.5244, 0.9237, 0.348]])
w[1] = np.array([0.0939, 0.3652, 0.9418, 0.1193])
model.get_layer('Den67194').set_weights(w) 
in0Thr44258 = tf.constant([[[[0.3215, 0.6661]]]])
in0Max611 = tf.constant([[[[0.8816, 0.7264], [0.5834, 0.4602]], [[0.7571, 0.3095], [0.8232, 0.1154]]]])
in1Max611 = tf.constant([[[[0.5193, 0.0606], [0.4196, 0.4702]], [[0.9716, 0.6149], [0.9122, 0.8213]]]])
in0Mas86427 = tf.constant([[[1.6917], [1.0337]]])
in0Con77537 = tf.constant([[[0.3207, 0.3157, 0.1017], [0.4524, 0.1616, 0.9302]]])
in0Con89307 = tf.constant([[0.1805, 0.5996, 0.8596, 0.7617, 0.5026, 0.1981, 0.8843, 0.1481, 0.4975, 0.6425, 0.9471]])
in0Den67194 = tf.constant([[[0.4748, 0.9531, 0.627, 0.8172, 0.014], [0.1531, 0.3373, 0.6362, 0.4337, 0.8194], [0.5291, 0.566, 0.8513, 0.7165, 0.4763]]])
in0Sub69562 = tf.constant([[[[[0.8723, 0.4576, 0.2799], [0.0276, 0.0776, 0.2702]], [[0.6261, 0.1647, 0.1211], [0.2453, 0.0862, 0.4934]], [[0.9109, 0.0884, 0.1485], [0.6251, 0.4661, 0.6267]]], [[[0.6675, 0.1383, 0.1452], [0.7979, 0.0799, 0.6968]], [[0.1695, 0.1447, 0.151], [0.9449, 0.758, 0.2039]], [[0.4692, 0.0013, 0.7179], [0.3342, 0.5048, 0.728]]]]])
in1Sub69562 = tf.constant([[[[[0.256, 0.3319, 0.5526], [0.4662, 0.113, 0.6537]], [[0.2918, 0.5955, 0.8588], [0.1857, 0.011, 0.1035]], [[0.3361, 0.2766, 0.7721], [0.3295, 0.7868, 0.1872]]], [[[0.9151, 0.186, 0.1592], [0.2004, 0.3431, 0.4566]], [[0.4527, 0.3812, 0.9692], [0.216, 0.731, 0.3804]], [[0.5542, 0.027, 0.61], [0.7365, 0.9201, 0.3319]]]]])
in0Con23981 = tf.constant([[0.7641, 0.1287, 0.1877, 0.6145, 0.8738, 0.2272]])
print (np.array2string(model.predict([in0Thr44258,in0Max611,in1Max611,in0Mas86427,in0Con77537,in0Con89307,in0Den67194,in0Sub69562,in1Sub69562,in0Con23981],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Mul40905.png')

LThr44258 = thresholded_relu_layer([[[[0.3215, 0.6661]]]], 9.198842827098652, Thr44258), 
LELU87887 = elu_layer(Thr44258, 3.9218016061663086, ELU87887), 
LZer97426 = zero_padding2D_layer(ELU87887, 1, 0, 1, 0, Zer97426), 
LMax611 = maximum_layer([[[[[0.8816, 0.7264], [0.5834, 0.4602]], [[0.7571, 0.3095], [0.8232, 0.1154]]]], [[[[0.5193, 0.0606], [0.4196, 0.4702]], [[0.9716, 0.6149], [0.9122, 0.8213]]]]], Max611), 
LAdd64006 = add_layer([Zer97426,Max611], Add64006), 
LRes84047 = reshape_layer(Add64006, [2, 4], Res84047), 
LMas86427 = masking_layer([[[1.6917], [1.0337]]], 2, Mas86427), 
LCon77537 = concatenate_layer([Mas86427,[[[0.3207, 0.3157, 0.1017], [0.4524, 0.1616, 0.9302]]]], 2, Con77537), 
LAdd71136 = add_layer([Res84047,Con77537], Add71136), 
LRes46687 = reshape_layer(Add71136, [2, 4, 1], Res46687), 
LGlo95283 = global_max_pool2D_layer(Res46687, Glo95283), 
LCon89307 = concatenate_layer([Glo95283,[[0.1805, 0.5996, 0.8596, 0.7617, 0.5026, 0.1981, 0.8843, 0.1481, 0.4975, 0.6425, 0.9471]]], 1, Con89307), 
LDen67194 = dense_layer([[[0.4748, 0.9531, 0.627, 0.8172, 0.014], [0.1531, 0.3373, 0.6362, 0.4337, 0.8194], [0.5291, 0.566, 0.8513, 0.7165, 0.4763]]], [[0.3353, 0.1675, 0.1867, 0.7697], [0.0064, 0.0588, 0.5329, 0.9952], [0.1114, 0.8146, 0.9418, 0.8277], [0.0732, 0.8709, 0.0843, 0.2427], [0.1225, 0.5244, 0.9237, 0.348]],[0.0939, 0.3652, 0.9418, 0.1193], Den67194), 
LFla95666 = flatten_layer(Den67194, Fla95666), 
LSub69562 = subtract_layer([[[[[0.8723, 0.4576, 0.2799], [0.0276, 0.0776, 0.2702]], [[0.6261, 0.1647, 0.1211], [0.2453, 0.0862, 0.4934]], [[0.9109, 0.0884, 0.1485], [0.6251, 0.4661, 0.6267]]], [[[0.6675, 0.1383, 0.1452], [0.7979, 0.0799, 0.6968]], [[0.1695, 0.1447, 0.151], [0.9449, 0.758, 0.2039]], [[0.4692, 0.0013, 0.7179], [0.3342, 0.5048, 0.728]]]]], [[[[[0.256, 0.3319, 0.5526], [0.4662, 0.113, 0.6537]], [[0.2918, 0.5955, 0.8588], [0.1857, 0.011, 0.1035]], [[0.3361, 0.2766, 0.7721], [0.3295, 0.7868, 0.1872]]], [[[0.9151, 0.186, 0.1592], [0.2004, 0.3431, 0.4566]], [[0.4527, 0.3812, 0.9692], [0.216, 0.731, 0.3804]], [[0.5542, 0.027, 0.61], [0.7365, 0.9201, 0.3319]]]]], Sub69562), 
LRes34782 = reshape_layer(Sub69562, [2, 3, 6], Res34782), 
LGlo14111 = global_max_pool2D_layer(Res34782, Glo14111), 
LCon23981 = concatenate_layer([Glo14111,[[0.7641, 0.1287, 0.1877, 0.6145, 0.8738, 0.2272]]], 1, Con23981), 
LMul57510 = multiply_layer([Fla95666,Con23981], Mul57510), 
LMul40905 = multiply_layer([Con89307,Mul57510], Mul40905), 
exec_layers([LThr44258,LELU87887,LZer97426,LMax611,LAdd64006,LRes84047,LMas86427,LCon77537,LAdd71136,LRes46687,LGlo95283,LCon89307,LDen67194,LFla95666,LSub69562,LRes34782,LGlo14111,LCon23981,LMul57510,LMul40905],["Thr44258","ELU87887","Zer97426","Max611","Add64006","Res84047","Mas86427","Con77537","Add71136","Res46687","Glo95283","Con89307","Den67194","Fla95666","Sub69562","Res34782","Glo14111","Con23981","Mul57510","Mul40905"],Mul40905,"Mul40905")

Actual (Unparsed): [[0.6194339, 0.0392646, 0.1430241, 1.3505259, 0.0200702, 0.3835423, 0.3848907, 0.1695550, 0.0133588, 0.6280417, 1.4845637, 0.4592179]]

Expected (Unparsed): [[0.6194338666387548,0.039264565094856006,0.14302417264026843,1.3505259035165689,0.0200702355953328,0.38354233463049003,0.3848907273491258,0.1695549616067736,0.01335875688883,0.628041697172,1.4845637396045046,0.45921790553876163]]

Actual:   [[0.6195, 0.0393, 0.1431, 1.3506, 0.0201, 0.3836, 0.3849, 0.1696, 0.0134, 0.6281, 1.4846, 0.4593]]

Expected: [[0.6195, 0.0393, 0.1431, 1.3506, 0.0201, 0.3836, 0.3849, 0.1696, 0.0134, 0.6281, 1.4846, 0.4593]]