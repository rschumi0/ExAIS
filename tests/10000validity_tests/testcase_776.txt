import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0GRU29968 = tf.keras.layers.Input(shape=([2, 1]))
in0Con89233 = tf.keras.layers.Input(shape=([6, 6, 2]))
in0Zer43186 = tf.keras.layers.Input(shape=([4, 4, 3]))
in0Max43478 = tf.keras.layers.Input(shape=([2, 2, 2]))
in0Con27910 = tf.keras.layers.Input(shape=([6, 6, 1]))
in0Add41425 = tf.keras.layers.Input(shape=([2, 1, 1]))
in1Add41425 = tf.keras.layers.Input(shape=([2, 1, 1]))
in0Add40536 = tf.keras.layers.Input(shape=([1, 1, 1, 1]))
in1Add40536 = tf.keras.layers.Input(shape=([1, 1, 1, 1]))
in0Con45334 = tf.keras.layers.Input(shape=([6, 17]))

GRU29968 = keras.layers.GRU(1,reset_after=False, recurrent_activation='sigmoid', name = 'GRU29968', )(in0GRU29968)
Res97925 = keras.layers.Reshape((1, 1), name = 'Res97925', )(GRU29968)
Res93594 = keras.layers.Reshape((1, 1, 1), name = 'Res93594', )(Res97925)
Zer6535 = keras.layers.ZeroPadding2D(padding=((5, 0), (5, 0)), name = 'Zer6535', )(Res93594)
Con89233 = keras.layers.Concatenate(axis=3, name = 'Con89233', )([Zer6535,in0Con89233])
Zer43186 = keras.layers.ZeroPadding2D(padding=((1, 1), (1, 1)), name = 'Zer43186', )(in0Zer43186)
Add17440 = keras.layers.Add(name = 'Add17440', )([Con89233,Zer43186])
Max43478 = keras.layers.MaxPool2D(pool_size=(1, 2), strides=(1, 1), padding='same', name = 'Max43478', )(in0Max43478)
Zer17858 = keras.layers.ZeroPadding2D(padding=((4, 0), (4, 0)), name = 'Zer17858', )(Max43478)
Con27910 = keras.layers.Concatenate(axis=3, name = 'Con27910', )([Zer17858,in0Con27910])
Add88677 = keras.layers.Add(name = 'Add88677', )([Add17440,Con27910])
Res40418 = keras.layers.Reshape((6, 18), name = 'Res40418', )(Add88677)
Add41425 = keras.layers.Add(name = 'Add41425', )([in0Add41425,in1Add41425])
Res59651 = keras.layers.Reshape((2, 1), name = 'Res59651', )(Add41425)
Add40536 = keras.layers.Add(name = 'Add40536', )([in0Add40536,in1Add40536])
Res78412 = keras.layers.Reshape((1, 1, 1), name = 'Res78412', )(Add40536)
Res82453 = keras.layers.Reshape((1, 1), name = 'Res82453', )(Res78412)
Dot97888 = keras.layers.Dot(axes=(2, 1), name = 'Dot97888', )([Res59651,Res82453])
Zer54200 = keras.layers.ZeroPadding1D(padding=((4, 0)), name = 'Zer54200', )(Dot97888)
Con45334 = keras.layers.Concatenate(axis=2, name = 'Con45334', )([Zer54200,in0Con45334])
Min93054 = keras.layers.Minimum(name = 'Min93054', )([Res40418,Con45334])
model = tf.keras.models.Model(inputs=[in0GRU29968,in0Con89233,in0Zer43186,in0Max43478,in0Con27910,in0Add41425,in1Add41425,in0Add40536,in1Add40536,in0Con45334], outputs=Min93054)
w = model.get_layer('GRU29968').get_weights() 
w[0] = np.array([[3, 6, 10]])
w[1] = np.array([[2, 4, 1]])
w[2] = np.array([2, 6, 8])
model.get_layer('GRU29968').set_weights(w) 
in0GRU29968 = tf.constant([[[7], [10]]])
in0Con89233 = tf.constant([[[[0.6121, 0.3974], [0.622, 0.159], [0.9136, 0.1722], [0.9396, 0.7756], [0.4403, 0.3681], [0.7125, 0.5186]], [[0.7122, 0.7661], [0.7174, 0.3679], [0.0618, 0.7748], [0.1184, 0.1682], [0.9071, 0.8144], [0.7327, 0.9062]], [[0.4137, 0.7145], [0.4206, 0.2912], [0.5356, 0.3045], [0.1145, 0.2841], [0.264, 0.1577], [0.0455, 0.3313]], [[0.4089, 0.1435], [0.9253, 0.5821], [0.3951, 0.0424], [0.199, 0.2941], [0.3609, 0.9805], [0.996, 0.9664]], [[0.3139, 0.8538], [0.0757, 0.4749], [0.2229, 0.2285], [0.8896, 0.6353], [0.6985, 0.4282], [0.8631, 0.1666]], [[0.3556, 0.6474], [0.1379, 0.9882], [0.036, 0.9689], [0.3096, 0.1471], [0.8205, 0.1023], [0.1461, 0.4432]]]])
in0Zer43186 = tf.constant([[[[1.6884, 1.3781, 1.0651], [1.0809, 1.3779, 1.6143], [1.4712, 1.1899, 1.5981], [1.8273, 1.4233, 1.2985]], [[1.917, 1.7227, 1.4356], [1.2371, 1.473, 1.6332], [1.5447, 1.006, 1.1628], [1.1519, 1.6369, 1.7142]], [[1.6346, 1.409, 1.7189], [1.2746, 1.9975, 1.9167], [1.1443, 1.541, 1.3349], [1.9676, 1.5595, 1.3355]], [[1.6924, 1.2859, 1.9984], [1.7318, 1.2006, 1.0049], [1.1196, 1.0379, 1.3888], [1.0706, 1.0536, 1.151]]]])
in0Max43478 = tf.constant([[[[1.5458, 1.857], [1.7095, 1.3455]], [[1.1939, 1.12], [1.6741, 1.0998]]]])
in0Con27910 = tf.constant([[[[0.6469], [0.3351], [0.7456], [0.5444], [0.9066], [0.0384]], [[0.9395], [0.5317], [0.2668], [0.0327], [0.1923], [0.0043]], [[0.0399], [0.0678], [0.0336], [0.8047], [0.9677], [0.2709]], [[0.1119], [0.5828], [0.1608], [0.2846], [0.8023], [0.9483]], [[0.0763], [0.4348], [0.6993], [0.6288], [0.0286], [0.0131]], [[0.077], [0.7535], [0.6885], [0.6731], [0.5636], [0.6137]]]])
in0Add41425 = tf.constant([[[[0.3559]], [[0.4117]]]])
in1Add41425 = tf.constant([[[[0.0304]], [[0.2672]]]])
in0Add40536 = tf.constant([[[[[0.3146]]]]])
in1Add40536 = tf.constant([[[[[0.7325]]]]])
in0Con45334 = tf.constant([[[0.1589, 0.6513, 0.3179, 0.7171, 0.7291, 0.4828, 0.456, 0.6502, 0.6518, 0.2843, 0.3333, 0.4474, 0.8516, 0.9323, 0.706, 0.817, 0.0448], [0.2207, 0.8909, 0.4275, 0.9751, 0.4121, 0.1323, 0.7951, 0.8235, 0.7323, 0.2218, 0.1474, 0.909, 0.8211, 0.9588, 0.0017, 0.6548, 0.5768], [0.351, 0.1983, 0.8067, 0.6699, 0.4187, 0.0452, 0.0604, 0.2338, 0.0904, 0.0433, 0.5776, 0.8935, 0.9535, 0.3877, 0.3544, 0.3381, 0.5594], [0.0695, 0.0417, 0.1059, 0.5743, 0.9388, 0.6128, 0.1123, 0.312, 0.5325, 0.2204, 0.7224, 0.0895, 0.8181, 0.6967, 0.8473, 0.4056, 0.2598], [0.4081, 0.6244, 0.1585, 0.7762, 0.597, 0.7335, 0.9909, 0.2228, 0.9202, 0.2941, 0.3773, 0.0102, 0.6206, 0.5925, 0.2572, 0.344, 0.6606], [0.5938, 0.8529, 0.3645, 0.188, 0.3102, 0.8132, 0.1503, 0.9038, 0.6152, 0.9738, 0.1535, 0.2616, 0.0222, 0.8365, 0.1369, 0.9364, 0.2765]]])
print (np.array2string(model.predict([in0GRU29968,in0Con89233,in0Zer43186,in0Max43478,in0Con27910,in0Add41425,in1Add41425,in0Add40536,in1Add40536,in0Con45334],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Min93054.png')

LGRU29968 = gru_layer([[[7], [10]]],[[3, 6, 10]],[[2, 4, 1]],[2, 6, 8], false, GRU29968), 
LRes97925 = reshape_layer(GRU29968, [1, 1], Res97925), 
LRes93594 = reshape_layer(Res97925, [1, 1, 1], Res93594), 
LZer6535 = zero_padding2D_layer(Res93594, 5, 0, 5, 0, Zer6535), 
LCon89233 = concatenate_layer([Zer6535,[[[[0.6121, 0.3974], [0.622, 0.159], [0.9136, 0.1722], [0.9396, 0.7756], [0.4403, 0.3681], [0.7125, 0.5186]], [[0.7122, 0.7661], [0.7174, 0.3679], [0.0618, 0.7748], [0.1184, 0.1682], [0.9071, 0.8144], [0.7327, 0.9062]], [[0.4137, 0.7145], [0.4206, 0.2912], [0.5356, 0.3045], [0.1145, 0.2841], [0.264, 0.1577], [0.0455, 0.3313]], [[0.4089, 0.1435], [0.9253, 0.5821], [0.3951, 0.0424], [0.199, 0.2941], [0.3609, 0.9805], [0.996, 0.9664]], [[0.3139, 0.8538], [0.0757, 0.4749], [0.2229, 0.2285], [0.8896, 0.6353], [0.6985, 0.4282], [0.8631, 0.1666]], [[0.3556, 0.6474], [0.1379, 0.9882], [0.036, 0.9689], [0.3096, 0.1471], [0.8205, 0.1023], [0.1461, 0.4432]]]]], 3, Con89233), 
LZer43186 = zero_padding2D_layer([[[[1.6884, 1.3781, 1.0651], [1.0809, 1.3779, 1.6143], [1.4712, 1.1899, 1.5981], [1.8273, 1.4233, 1.2985]], [[1.917, 1.7227, 1.4356], [1.2371, 1.473, 1.6332], [1.5447, 1.006, 1.1628], [1.1519, 1.6369, 1.7142]], [[1.6346, 1.409, 1.7189], [1.2746, 1.9975, 1.9167], [1.1443, 1.541, 1.3349], [1.9676, 1.5595, 1.3355]], [[1.6924, 1.2859, 1.9984], [1.7318, 1.2006, 1.0049], [1.1196, 1.0379, 1.3888], [1.0706, 1.0536, 1.151]]]], 1, 1, 1, 1, Zer43186), 
LAdd17440 = add_layer([Con89233,Zer43186], Add17440), 
LMax43478 = max_pool2D_layer([[[[1.5458, 1.857], [1.7095, 1.3455]], [[1.1939, 1.12], [1.6741, 1.0998]]]], 1, 2, 1, 1, true, Max43478), 
LZer17858 = zero_padding2D_layer(Max43478, 4, 0, 4, 0, Zer17858), 
LCon27910 = concatenate_layer([Zer17858,[[[[0.6469], [0.3351], [0.7456], [0.5444], [0.9066], [0.0384]], [[0.9395], [0.5317], [0.2668], [0.0327], [0.1923], [0.0043]], [[0.0399], [0.0678], [0.0336], [0.8047], [0.9677], [0.2709]], [[0.1119], [0.5828], [0.1608], [0.2846], [0.8023], [0.9483]], [[0.0763], [0.4348], [0.6993], [0.6288], [0.0286], [0.0131]], [[0.077], [0.7535], [0.6885], [0.6731], [0.5636], [0.6137]]]]], 3, Con27910), 
LAdd88677 = add_layer([Add17440,Con27910], Add88677), 
LRes40418 = reshape_layer(Add88677, [6, 18], Res40418), 
LAdd41425 = add_layer([[[[[0.3559]], [[0.4117]]]], [[[[0.0304]], [[0.2672]]]]], Add41425), 
LRes59651 = reshape_layer(Add41425, [2, 1], Res59651), 
LAdd40536 = add_layer([[[[[[0.3146]]]]], [[[[[0.7325]]]]]], Add40536), 
LRes78412 = reshape_layer(Add40536, [1, 1, 1], Res78412), 
LRes82453 = reshape_layer(Res78412, [1, 1], Res82453), 
LDot97888 = dot_layer(Res59651,Res82453, 2, 1, Dot97888), 
LZer54200 = zero_padding1D_layer(Dot97888, 4, 0, Zer54200), 
LCon45334 = concatenate_layer([Zer54200,[[[0.1589, 0.6513, 0.3179, 0.7171, 0.7291, 0.4828, 0.456, 0.6502, 0.6518, 0.2843, 0.3333, 0.4474, 0.8516, 0.9323, 0.706, 0.817, 0.0448], [0.2207, 0.8909, 0.4275, 0.9751, 0.4121, 0.1323, 0.7951, 0.8235, 0.7323, 0.2218, 0.1474, 0.909, 0.8211, 0.9588, 0.0017, 0.6548, 0.5768], [0.351, 0.1983, 0.8067, 0.6699, 0.4187, 0.0452, 0.0604, 0.2338, 0.0904, 0.0433, 0.5776, 0.8935, 0.9535, 0.3877, 0.3544, 0.3381, 0.5594], [0.0695, 0.0417, 0.1059, 0.5743, 0.9388, 0.6128, 0.1123, 0.312, 0.5325, 0.2204, 0.7224, 0.0895, 0.8181, 0.6967, 0.8473, 0.4056, 0.2598], [0.4081, 0.6244, 0.1585, 0.7762, 0.597, 0.7335, 0.9909, 0.2228, 0.9202, 0.2941, 0.3773, 0.0102, 0.6206, 0.5925, 0.2572, 0.344, 0.6606], [0.5938, 0.8529, 0.3645, 0.188, 0.3102, 0.8132, 0.1503, 0.9038, 0.6152, 0.9738, 0.1535, 0.2616, 0.0222, 0.8365, 0.1369, 0.9364, 0.2765]]]], 2, Con45334), 
LMin93054 = minimum_layer([Res40418,Con45334], Min93054), 
exec_layers([LGRU29968,LRes97925,LRes93594,LZer6535,LCon89233,LZer43186,LAdd17440,LMax43478,LZer17858,LCon27910,LAdd88677,LRes40418,LAdd41425,LRes59651,LAdd40536,LRes78412,LRes82453,LDot97888,LZer54200,LCon45334,LMin93054],["GRU29968","Res97925","Res93594","Zer6535","Con89233","Zer43186","Add17440","Max43478","Zer17858","Con27910","Add88677","Res40418","Add41425","Res59651","Add40536","Res78412","Res82453","Dot97888","Zer54200","Con45334","Min93054"],Min93054,"Min93054")

Actual (Unparsed): [[[0.0000000, 0.1589000, 0.6513000, 0.0000000, 0.6220000, 0.4941000, 0.0000000, 0.4560000, 0.6502000, 0.0000000, 0.2843000, 0.3333000, 0.0000000, 0.4403000, 0.9323000, 0.0000000, 0.7125000, 0.0448000], [0.0000000, 0.2207000, 0.8909000, 0.4275000, 0.9751000, 0.4121000, 0.1323000, 0.7951000, 0.8235000, 0.7323000, 0.2218000, 0.1474000, 0.9090000, 0.8211000, 0.9588000, 0.0000000, 0.6548000, 0.5768000], [0.0000000, 0.3510000, 0.1983000, 0.8067000, 0.6699000, 0.4187000, 0.0452000, 0.0604000, 0.2338000, 0.0904000, 0.0433000, 0.5776000, 0.8935000, 0.9535000, 0.3877000, 0.0000000, 0.0455000, 0.5594000], [0.0000000, 0.0695000, 0.0417000, 0.1059000, 0.5743000, 0.9388000, 0.6128000, 0.1123000, 0.3120000, 0.5325000, 0.2204000, 0.7224000, 0.0895000, 0.8181000, 0.6967000, 0.0000000, 0.4056000, 0.2598000], [0.0000000, 0.3139000, 0.6244000, 0.1585000, 0.7762000, 0.5970000, 0.7335000, 0.9909000, 0.2228000, 0.9202000, 0.2941000, 0.3773000, 0.0102000, 0.6206000, 0.5925000, 0.2572000, 0.3440000, 0.1797000], [0.0000000, 0.3556000, 0.7244000, 0.0000000, 0.1379000, 0.3102000, 0.0000000, 0.0360000, 0.9038000, 0.0000000, 0.3096000, 0.1535000, 0.2616000, 0.0222000, 0.6659000, 0.1369000, 0.9364000, 0.2765000]]]

Expected (Unparsed): [[[0,0.1589,0.6513,0,0.622,0.4941,0,0.456,0.6502,0,0.2843,0.3333,0,0.4403,0.9323,0,0.7125,0.0448],[0,0.2207,0.8909,0.4275,0.9751,0.4121,0.1323,0.7951,0.8235,0.7323,0.2218,0.1474,0.909,0.8211,0.9588,0,0.6548,0.5768],[0,0.351,0.1983,0.8067,0.6699,0.4187,0.0452,0.0604,0.2338,0.0904,0.0433,0.5776,0.8935,0.9535,0.3877,0,0.0455,0.5594],[0,0.0695,0.0417,0.1059,0.5743,0.9388,0.6128,0.1123,0.312,0.5325,0.2204,0.7224,0.0895,0.8181,0.6967,0,0.4056,0.2598],[0,0.3139,0.6244,0.1585,0.7762,0.597,0.7335,0.9909,0.2228,0.9202,0.2941,0.3773,0.0102,0.6206,0.5925,0.2572,0.344,0.1797],[0,0.3556,0.7243999999999999,0,0.1379,0.3102,0,0.036,0.9038,0,0.3096,0.1535,0.2616,0.0222,0.6658999999999999,0.1369,0.9364,0.2765]]]

Actual:   [[[0, 0.1589, 0.6513, 0, 0.622, 0.4941, 0, 0.456, 0.6502, 0, 0.2843, 0.3333, 0, 0.4403, 0.9323, 0, 0.7125, 0.0448], [0, 0.2207, 0.8909, 0.4275, 0.9751, 0.4121, 0.1323, 0.7951, 0.8235, 0.7323, 0.2218, 0.1474, 0.909, 0.8211, 0.9588, 0, 0.6548, 0.5768], [0, 0.351, 0.1983, 0.8067, 0.6699, 0.4187, 0.0452, 0.0604, 0.2338, 0.0904, 0.0433, 0.5776, 0.8935, 0.9535, 0.3877, 0, 0.0455, 0.5594], [0, 0.0695, 0.0417, 0.1059, 0.5743, 0.9388, 0.6128, 0.1123, 0.312, 0.5325, 0.2204, 0.7224, 0.0895, 0.8181, 0.6967, 0, 0.4056, 0.2598], [0, 0.3139, 0.6244, 0.1585, 0.7762, 0.597, 0.7335, 0.9909, 0.2228, 0.9202, 0.2941, 0.3773, 0.0102, 0.6206, 0.5925, 0.2572, 0.344, 0.1797], [0, 0.3556, 0.7244, 0, 0.1379, 0.3102, 0, 0.036, 0.9038, 0, 0.3096, 0.1535, 0.2616, 0.0222, 0.6659, 0.1369, 0.9364, 0.2765]]]

Expected: [[[0, 0.1589, 0.6513, 0, 0.622, 0.4941, 0, 0.456, 0.6502, 0, 0.2843, 0.3333, 0, 0.4403, 0.9323, 0, 0.7125, 0.0448], [0, 0.2207, 0.8909, 0.4275, 0.9751, 0.4121, 0.1323, 0.7951, 0.8235, 0.7323, 0.2218, 0.1474, 0.909, 0.8211, 0.9588, 0, 0.6548, 0.5768], [0, 0.351, 0.1983, 0.8067, 0.6699, 0.4187, 0.0452, 0.0604, 0.2338, 0.0904, 0.0433, 0.5776, 0.8935, 0.9535, 0.3877, 0, 0.0455, 0.5594], [0, 0.0695, 0.0417, 0.1059, 0.5743, 0.9388, 0.6128, 0.1123, 0.312, 0.5325, 0.2204, 0.7224, 0.0895, 0.8181, 0.6967, 0, 0.4056, 0.2598], [0, 0.3139, 0.6244, 0.1585, 0.7762, 0.597, 0.7335, 0.9909, 0.2228, 0.9202, 0.2941, 0.3773, 0.0102, 0.6206, 0.5925, 0.2572, 0.344, 0.1797], [0, 0.3556, 0.7244, 0, 0.1379, 0.3102, 0, 0.036, 0.9038, 0, 0.3096, 0.1535, 0.2616, 0.0222, 0.6659, 0.1369, 0.9364, 0.2765]]]