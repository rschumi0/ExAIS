import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Loc24752 = tf.keras.layers.Input(shape=([2, 2, 1]))

Loc24752 = keras.layers.LocallyConnected2D(4, (1, 1),strides=(1, 1), name = 'Loc24752', )(in0Loc24752)
Res27344 = keras.layers.Reshape((2, 2, 4, 1), name = 'Res27344', )(Loc24752)
Con28837 = keras.layers.Conv3D(3, (1, 2, 1),strides=(2, 1, 1), padding='valid', dilation_rate=(1, 1, 1), name = 'Con28837', )(Res27344)
Res59610 = keras.layers.Reshape((1, 1, 12), name = 'Res59610', )(Con28837)
Res62363 = keras.layers.Reshape((1, 12), name = 'Res62363', )(Res59610)
Ave82188 = keras.layers.AveragePooling1D(pool_size=(1), name = 'Ave82188', )(Res62363)
Res2826 = keras.layers.Reshape((1, 12, 1), name = 'Res2826', )(Ave82188)
Sep94867 = keras.layers.SeparableConv2D(4, (1, 7),strides=(1, 1), padding='same', name = 'Sep94867', )(Res2826)
model = tf.keras.models.Model(inputs=[in0Loc24752], outputs=Sep94867)
w = model.get_layer('Loc24752').get_weights() 
w[0] = np.array([[[0.0399, 0.092, 0.6171, 0.8445]], [[0.1664, 0.5816, 0.7375, 0.501]], [[0.602, 0.701, 0.5327, 0.3002]], [[0.2635, 0.8999, 0.3074, 0.5901]]])
w[1] = np.array([[[0, 0, 0, 0], [0, 0, 0, 0]], [[0, 0, 0, 0], [0, 0, 0, 0]]])
model.get_layer('Loc24752').set_weights(w) 
w = model.get_layer('Con28837').get_weights() 
w[0] = np.array([[[[[0.5174, 0.198, 0.8605]]], [[[0.3898, 0.8296, 0.6025]]]]])
w[1] = np.array([0, 0, 0])
model.get_layer('Con28837').set_weights(w) 
w = model.get_layer('Sep94867').get_weights() 
w[0] = np.array([[[[0.09]], [[0.0289]], [[0.6387]], [[0.8551]], [[0.926]], [[0.8746]], [[0.0113]]]])
w[1] = np.array([[[[0.2518, 0.9251, 0.8962, 0.5947]]]])
w[2] = np.array([0, 0, 0, 0])
model.get_layer('Sep94867').set_weights(w) 
in0Loc24752 = tf.constant([[[[0.5346], [0.3511]], [[0.1342], [0.4138]]]])
print (np.array2string(model.predict([in0Loc24752],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Sep94867.png')

LLoc24752 = locally_connected2D_layer([[[[0.5346], [0.3511]], [[0.1342], [0.4138]]]], 1, 1,[[[0.0399, 0.092, 0.6171, 0.8445]], [[0.1664, 0.5816, 0.7375, 0.501]], [[0.602, 0.701, 0.5327, 0.3002]], [[0.2635, 0.8999, 0.3074, 0.5901]]],[[[0, 0, 0, 0], [0, 0, 0, 0]], [[0, 0, 0, 0], [0, 0, 0, 0]]], 1, 1, Loc24752), 
LRes27344 = reshape_layer(Loc24752, [2, 2, 4, 1], Res27344), 
LCon28837 = conv3D_layer(Res27344, 1, 2, 1,[[[[[0.5174, 0.198, 0.8605]]], [[[0.3898, 0.8296, 0.6025]]]]],[0, 0, 0], 2, 1, 1, false, 1, 1, 1, Con28837), 
LRes59610 = reshape_layer(Con28837, [1, 1, 12], Res59610), 
LRes62363 = reshape_layer(Res59610, [1, 12], Res62363), 
LAve82188 = average_pooling1D_layer(Res62363, 1, Ave82188), 
LRes2826 = reshape_layer(Ave82188, [1, 12, 1], Res2826), 
LSep94867 = separable_conv2D_layer(Res2826, 1, 7,[[[[[0.09]], [[0.0289]], [[0.6387]], [[0.8551]], [[0.926]], [[0.8746]], [[0.0113]]]],[[[[0.2518, 0.9251, 0.8962, 0.5947]]]]],[0, 0, 0, 0], 1, 1, true, Sep94867), 
exec_layers([LLoc24752,LRes27344,LCon28837,LRes59610,LRes62363,LAve82188,LRes2826,LSep94867],["Loc24752","Res27344","Con28837","Res59610","Res62363","Ave82188","Res2826","Sep94867"],Sep94867,"Sep94867")

Actual (Unparsed): [[[[0.0316585, 0.1163117, 0.1126781, 0.0747709], [0.0529129, 0.1943991, 0.1883261, 0.1249693], [0.0846661, 0.3110587, 0.3013412, 0.1999639], [0.1113377, 0.4090488, 0.3962702, 0.2629568], [0.1562195, 0.5739424, 0.5560125, 0.3689585], [0.1926691, 0.7078561, 0.6857428, 0.4550449], [0.2518135, 0.9251497, 0.8962482, 0.5947320], [0.2790432, 1.0251900, 0.9931632, 0.6590428], [0.2691734, 0.9889291, 0.9580351, 0.6357325], [0.3077606, 1.1306963, 1.0953735, 0.7268674], [0.2241052, 0.8233506, 0.7976293, 0.5292905], [0.1564790, 0.5748957, 0.5569361, 0.3695714]]]]

Expected (Unparsed): [[[[0.03165850829452285,0.1163116998541028,0.11267813794103008,0.07477090898630953],[0.05291286409112142,0.19439908884311527,0.1883260873648253,0.12496934183872084],[0.08466605692167901,0.3110586547190041,0.3013412240397487,0.1999638762959591],[0.11133768354399054,0.40904881273449417,0.3962701826533928,0.2629567927069546],[0.15621953662516277,0.5739423881331933,0.5560125048588994,0.3689585322914388],[0.19266908315014272,0.707856111287518,0.6857427812516199,0.4550448917767667],[0.25181353761406033,0.9251497364843813,0.8962481827232758,0.5947319730702212],[0.27904315934371154,1.0251899392727069,0.9931631429858392,0.6590427595778604],[0.26917343602588145,0.9889290931991379,0.9580350808832208,0.6357324956496889],[0.3077605784949652,1.1306962317938534,1.0953734330706424,0.7268674187091173],[0.2241051558872006,0.8233505945641351,0.7976292323515056,0.529290453558849],[0.15647902347019943,0.574895729198894,0.5569360636774929,0.36957138704419223]]]]

Actual:   [[[[0.0317, 0.1164, 0.1127, 0.0748], [0.053, 0.1944, 0.1884, 0.125], [0.0847, 0.3111, 0.3014, 0.2], [0.1114, 0.4091, 0.3963, 0.263], [0.1563, 0.574, 0.5561, 0.369], [0.1927, 0.7079, 0.6858, 0.4551], [0.2519, 0.9252, 0.8963, 0.5948], [0.2791, 1.0252, 0.9932, 0.6591], [0.2692, 0.989, 0.9581, 0.6358], [0.3078, 1.1307, 1.0954, 0.7269], [0.2242, 0.8234, 0.7977, 0.5293], [0.1565, 0.5749, 0.557, 0.3696]]]]

Expected: [[[[0.0317, 0.1164, 0.1127, 0.0748], [0.053, 0.1944, 0.1884, 0.125], [0.0847, 0.3111, 0.3014, 0.2], [0.1114, 0.4091, 0.3963, 0.263], [0.1563, 0.574, 0.5561, 0.369], [0.1927, 0.7079, 0.6858, 0.4551], [0.2519, 0.9252, 0.8963, 0.5948], [0.2791, 1.0252, 0.9932, 0.6591], [0.2692, 0.989, 0.9581, 0.6358], [0.3078, 1.1307, 1.0954, 0.7269], [0.2242, 0.8234, 0.7977, 0.5293], [0.1565, 0.5749, 0.557, 0.3696]]]]