import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Min89826 = tf.keras.layers.Input(shape=([2, 2, 1, 2]))
in1Min89826 = tf.keras.layers.Input(shape=([2, 2, 1, 2]))

Min89826 = keras.layers.Minimum(name = 'Min89826', )([in0Min89826,in1Min89826])
Con81319 = keras.layers.Conv3DTranspose(2, (2, 1, 1),strides=(1, 1, 1), padding='same', name = 'Con81319', )(Min89826)
model = tf.keras.models.Model(inputs=[in0Min89826,in1Min89826], outputs=Con81319)
w = model.get_layer('Con81319').get_weights() 
w[0] = np.array([[[[[0.1288, 0.8463], [0.3629, 0.0934]]]], [[[[0.3285, 0.3098], [0.5901, 0.8164]]]]])
w[1] = np.array([0, 0])
model.get_layer('Con81319').set_weights(w) 
in0Min89826 = tf.constant([[[[[0.3097, 0.8743]], [[0.9966, 0.4797]]], [[[0.9189, 0.0718]], [[0.2131, 0.4794]]]]])
in1Min89826 = tf.constant([[[[[0.9955, 0.4837]], [[0.9749, 0.9984]]], [[[0.1186, 0.7789]], [[0.1807, 0.6495]]]]])
print (np.array2string(model.predict([in0Min89826,in1Min89826],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Con81319.png')

LMin89826 = minimum_layer([[[[[[0.3097, 0.8743]], [[0.9966, 0.4797]]], [[[0.9189, 0.0718]], [[0.2131, 0.4794]]]]], [[[[[0.9955, 0.4837]], [[0.9749, 0.9984]]], [[[0.1186, 0.7789]], [[0.1807, 0.6495]]]]]], Min89826), 
LCon81319 = conv3D_transpose_layer(Min89826, 2, 1, 1,[[[[[0.1288, 0.8463], [0.3629, 0.0934]]]], [[[[0.3285, 0.3098], [0.5901, 0.8164]]]]],[0, 0], 1, 1, 1, true, Con81319), 
exec_layers([LMin89826,LCon81319],["Min89826","Con81319"],Con81319,"Con81319")

Actual (Unparsed): [[[[[0.4492447, 0.1575677]], [[0.5315372, 0.3985952]]], [[[0.3276267, 0.6273927]], [[0.8978561, 1.0772676]]]]]

Expected (Unparsed): [[[[[0.44924467,0.15756771]],[[0.5315372300000001,0.39859519000000004]]],[[[0.32762673000000003,0.62739271]],[[0.8978560900000001,1.07726756]]]]]

Actual:   [[[[[0.4493, 0.1576]], [[0.5316, 0.3986]]], [[[0.3277, 0.6274]], [[0.8979, 1.0773]]]]]

Expected: [[[[[0.4493, 0.1576]], [[0.5316, 0.3986]]], [[[0.3277, 0.6274]], [[0.8979, 1.0773]]]]]