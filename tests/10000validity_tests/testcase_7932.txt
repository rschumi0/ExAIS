import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Ave94918 = tf.keras.layers.Input(shape=([2, 2]))
in1Ave94918 = tf.keras.layers.Input(shape=([2, 2]))
in0Con10893 = tf.keras.layers.Input(shape=([2, 2, 1]))
in0Ave77226 = tf.keras.layers.Input(shape=([1, 2, 2]))
in0Max17812 = tf.keras.layers.Input(shape=([2, 2]))
in1Max17812 = tf.keras.layers.Input(shape=([2, 2]))
in0Con26829 = tf.keras.layers.Input(shape=([2, 3]))

Ave94918 = keras.layers.Average(name = 'Ave94918', )([in0Ave94918,in1Ave94918])
Bat57871 = keras.layers.BatchNormalization(axis=2, epsilon=0.1542863987412884,  name = 'Bat57871', )(Ave94918)
Bat46429 = keras.layers.BatchNormalization(axis=2, epsilon=0.27219462077294365,  name = 'Bat46429', )(Bat57871)
Res72585 = keras.layers.Reshape((2, 2, 1), name = 'Res72585', )(Bat46429)
Con10893 = keras.layers.Concatenate(axis=3, name = 'Con10893', )([Res72585,in0Con10893])
Ave77226 = keras.layers.AveragePooling2D(pool_size=(1, 2), name = 'Ave77226', )(in0Ave77226)
Zer64115 = keras.layers.ZeroPadding2D(padding=((1, 0), (1, 0)), name = 'Zer64115', )(Ave77226)
Add46756 = keras.layers.Add(name = 'Add46756', )([Con10893,Zer64115])
Res45755 = keras.layers.Reshape((2, 4), name = 'Res45755', )(Add46756)
Max17812 = keras.layers.Maximum(name = 'Max17812', )([in0Max17812,in1Max17812])
Glo75822 = keras.layers.GlobalMaxPool1D(name = 'Glo75822', )(Max17812)
Res2925 = keras.layers.Reshape((2, 1), name = 'Res2925', )(Glo75822)
Up_89088 = keras.layers.UpSampling1D(size=(1), name = 'Up_89088', )(Res2925)
Cro11596 = keras.layers.Cropping1D(cropping=((1, 0)), name = 'Cro11596', )(Up_89088)
Zer72236 = keras.layers.ZeroPadding1D(padding=((1, 0)), name = 'Zer72236', )(Cro11596)
Con26829 = keras.layers.Concatenate(axis=2, name = 'Con26829', )([Zer72236,in0Con26829])
Add67560 = keras.layers.Add(name = 'Add67560', )([Res45755,Con26829])
model = tf.keras.models.Model(inputs=[in0Ave94918,in1Ave94918,in0Con10893,in0Ave77226,in0Max17812,in1Max17812,in0Con26829], outputs=Add67560)
w = model.get_layer('Bat57871').get_weights() 
w[0] = np.array([0.7173, 0.9244])
w[1] = np.array([0.5998, 0.7134])
w[2] = np.array([0.1872, 0.0933])
w[3] = np.array([0.7598, 0.9404])
model.get_layer('Bat57871').set_weights(w) 
w = model.get_layer('Bat46429').get_weights() 
w[0] = np.array([0.1809, 0.9511])
w[1] = np.array([0.1383, 0.781])
w[2] = np.array([0.5792, 0.7897])
w[3] = np.array([0.8575, 0.6257])
model.get_layer('Bat46429').set_weights(w) 
in0Ave94918 = tf.constant([[[0.6307, 0.9687], [0.1767, 0.9721]]])
in1Ave94918 = tf.constant([[[0.7787, 0.088], [0.2745, 0.9265]]])
in0Con10893 = tf.constant([[[[0.2903], [0.2793]], [[0.3705], [0.0022]]]])
in0Ave77226 = tf.constant([[[[1.2466, 1.0964], [1.9722, 1.6124]]]])
in0Max17812 = tf.constant([[[0.1512, 0.5841], [0.3258, 0.348]]])
in1Max17812 = tf.constant([[[0.347, 0.9617], [0.071, 0.3068]]])
in0Con26829 = tf.constant([[[0.9711, 0.0566, 0.0623], [0.5476, 0.162, 0.6711]]])
print (np.array2string(model.predict([in0Ave94918,in1Ave94918,in0Con10893,in0Ave77226,in0Max17812,in1Max17812,in0Con26829],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Add67560.png')

LAve94918 = average_layer([[[[0.6307, 0.9687], [0.1767, 0.9721]]], [[[0.7787, 0.088], [0.2745, 0.9265]]]], Ave94918), 
LBat57871 = batch_normalization_layer(Ave94918, 2, 0.1542863987412884, [0.7173, 0.9244], [0.5998, 0.7134], [0.1872, 0.0933], [0.7598, 0.9404], Bat57871), 
LBat46429 = batch_normalization_layer(Bat57871, 2, 0.27219462077294365, [0.1809, 0.9511], [0.1383, 0.781], [0.5792, 0.7897], [0.8575, 0.6257], Bat46429), 
LRes72585 = reshape_layer(Bat46429, [2, 2, 1], Res72585), 
LCon10893 = concatenate_layer([Res72585,[[[[0.2903], [0.2793]], [[0.3705], [0.0022]]]]], 3, Con10893), 
LAve77226 = average_pooling2D_layer([[[[1.2466, 1.0964], [1.9722, 1.6124]]]], 1, 2, Ave77226), 
LZer64115 = zero_padding2D_layer(Ave77226, 1, 0, 1, 0, Zer64115), 
LAdd46756 = add_layer([Con10893,Zer64115], Add46756), 
LRes45755 = reshape_layer(Add46756, [2, 4], Res45755), 
LMax17812 = maximum_layer([[[[0.1512, 0.5841], [0.3258, 0.348]]], [[[0.347, 0.9617], [0.071, 0.3068]]]], Max17812), 
LGlo75822 = global_max_pool1D_layer(Max17812, Glo75822), 
LRes2925 = reshape_layer(Glo75822, [2, 1], Res2925), 
LUp_89088 = up_sampling1D_layer(Res2925, 1, Up_89088), 
LCro11596 = cropping1D_layer(Up_89088, 1, 0, Cro11596), 
LZer72236 = zero_padding1D_layer(Cro11596, 1, 0, Zer72236), 
LCon26829 = concatenate_layer([Zer72236,[[[0.9711, 0.0566, 0.0623], [0.5476, 0.162, 0.6711]]]], 2, Con26829), 
LAdd67560 = add_layer([Res45755,Con26829], Add67560), 
exec_layers([LAve94918,LBat57871,LBat46429,LRes72585,LCon10893,LAve77226,LZer64115,LAdd46756,LRes45755,LMax17812,LGlo75822,LRes2925,LUp_89088,LCro11596,LZer72236,LCon26829,LAdd67560],["Ave94918","Bat57871","Bat46429","Res72585","Con10893","Ave77226","Zer64115","Add46756","Res45755","Max17812","Glo75822","Res2925","Up_89088","Cro11596","Zer72236","Con26829","Add67560"],Add67560,"Add67560")

Actual (Unparsed): [[[0.2078870, 1.2614000, 1.1468209, 0.3416000], [1.1084095, 0.9181000, 3.2349219, 2.0277001]]]

Expected (Unparsed): [[[0.2078869542818963,1.2614,1.1468209076159495,0.3416],[1.1084094980871029,0.9180999999999999,3.234921850113695,2.0277000000000003]]]

Actual:   [[[0.2079, 1.2614, 1.1469, 0.3416], [1.1085, 0.9181, 3.235, 2.0278]]]

Expected: [[[0.2079, 1.2614, 1.1469, 0.3416], [1.1085, 0.9181, 3.235, 2.0278]]]