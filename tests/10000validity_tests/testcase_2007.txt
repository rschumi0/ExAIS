import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Den28973 = tf.keras.layers.Input(shape=([3, 5]))

Den28973 = keras.layers.Dense(3,name = 'Den28973', )(in0Den28973)
Up_13425 = keras.layers.UpSampling1D(size=(2), name = 'Up_13425', )(Den28973)
Bat80728 = keras.layers.BatchNormalization(axis=2, epsilon=0.7668721061420827,  name = 'Bat80728', )(Up_13425)
model = tf.keras.models.Model(inputs=[in0Den28973], outputs=Bat80728)
w = model.get_layer('Den28973').get_weights() 
w[0] = np.array([[0.8439, 0.6628, 0.9489], [0.4791, 0.9506, 0.1786], [0.5898, 0.9536, 0.1187], [0.0004, 0.3009, 0.1772], [0.0657, 0.3169, 0.1647]])
w[1] = np.array([0.3682, 0.4988, 0.8358])
model.get_layer('Den28973').set_weights(w) 
w = model.get_layer('Bat80728').get_weights() 
w[0] = np.array([0.536, 0.4232, 0.9156])
w[1] = np.array([0.9614, 0.5491, 0.426])
w[2] = np.array([0.752, 0.9645, 0.1703])
w[3] = np.array([0.9792, 0.5259, 0.4838])
model.get_layer('Bat80728').set_weights(w) 
in0Den28973 = tf.constant([[[0.8059, 0.0746, 0.2573, 0.7432, 0.6004], [0.868, 0.0795, 0.8743, 0.0658, 0.948], [0.5228, 0.2456, 0.32, 0.8639, 0.2914]]])
print (np.array2string(model.predict([in0Den28973],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Bat80728.png')

LDen28973 = dense_layer([[[0.8059, 0.0746, 0.2573, 0.7432, 0.6004], [0.868, 0.0795, 0.8743, 0.0658, 0.948], [0.5228, 0.2456, 0.32, 0.8639, 0.2914]]], [[0.8439, 0.6628, 0.9489], [0.4791, 0.9506, 0.1786], [0.5898, 0.9536, 0.1187], [0.0004, 0.3009, 0.1772], [0.0657, 0.3169, 0.1647]],[0.3682, 0.4988, 0.8358], Den28973), 
LUp_13425 = up_sampling1D_layer(Den28973, 2, Up_13425), 
LBat80728 = batch_normalization_layer(Up_13425, 2, 0.7668721061420827, [0.536, 0.4232, 0.9156], [0.9614, 0.5491, 0.426], [0.752, 0.9645, 0.1703], [0.9792, 0.5259, 0.4838], Bat80728), 
exec_layers([LDen28973,LUp_13425,LBat80728],["Den28973","Up_13425","Bat80728"],Bat80728,"Bat80728")

Actual (Unparsed): [[[1.1737649, 0.8463529, 1.8216386], [1.1737649, 0.8463529, 1.8216386], [1.3527412, 1.0475359, 1.8791569], [1.3527412, 1.0475359, 1.8791569], [1.1168730, 0.8363409, 1.6086454], [1.1168730, 0.8363409, 1.6086454]]]

Expected (Unparsed): [[[1.1737648898447224,0.8463528663248723,1.8216385889873359],[1.1737648898447224,0.8463528663248723,1.8216385889873359],[1.3527411903799926,1.0475359493122332,1.8791569045792174],[1.3527411903799926,1.0475359493122332,1.8791569045792174],[1.1168729605563046,0.8363409303703176,1.6086453447655322],[1.1168729605563046,0.8363409303703176,1.6086453447655322]]]

Actual:   [[[1.1738, 0.8464, 1.8217], [1.1738, 0.8464, 1.8217], [1.3528, 1.0476, 1.8792], [1.3528, 1.0476, 1.8792], [1.1169, 0.8364, 1.6087], [1.1169, 0.8364, 1.6087]]]

Expected: [[[1.1738, 0.8464, 1.8217], [1.1738, 0.8464, 1.8217], [1.3528, 1.0476, 1.8792], [1.3528, 1.0476, 1.8792], [1.1169, 0.8364, 1.6087], [1.1169, 0.8364, 1.6087]]]