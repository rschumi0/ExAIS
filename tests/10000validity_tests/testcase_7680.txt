import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Min76611 = tf.keras.layers.Input(shape=([2, 1, 1]))
in1Min76611 = tf.keras.layers.Input(shape=([2, 1, 1]))

Min76611 = keras.layers.Minimum(name = 'Min76611', )([in0Min76611,in1Min76611])
Zer84679 = keras.layers.ZeroPadding2D(padding=((1, 1), (1, 1)), name = 'Zer84679', )(Min76611)
Res15229 = keras.layers.Reshape((4, 3), name = 'Res15229', )(Zer84679)
Con57049 = keras.layers.Conv1D(2, (1),strides=(1), padding='valid', dilation_rate=(1), name = 'Con57049', )(Res15229)
Cro14909 = keras.layers.Cropping1D(cropping=((0, 1)), name = 'Cro14909', )(Con57049)
model = tf.keras.models.Model(inputs=[in0Min76611,in1Min76611], outputs=Cro14909)
w = model.get_layer('Con57049').get_weights() 
w[0] = np.array([[[0.1159, 0.1378], [0.6243, 0.0293], [0.8735, 0.4215]]])
w[1] = np.array([0, 0])
model.get_layer('Con57049').set_weights(w) 
in0Min76611 = tf.constant([[[[0.0374]], [[0.1015]]]])
in1Min76611 = tf.constant([[[[0.4203]], [[0.4337]]]])
print (np.array2string(model.predict([in0Min76611,in1Min76611],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Cro14909.png')

LMin76611 = minimum_layer([[[[[0.0374]], [[0.1015]]]], [[[[0.4203]], [[0.4337]]]]], Min76611), 
LZer84679 = zero_padding2D_layer(Min76611, 1, 1, 1, 1, Zer84679), 
LRes15229 = reshape_layer(Zer84679, [4, 3], Res15229), 
LCon57049 = conv1D_layer(Res15229, 1,[[[0.1159, 0.1378], [0.6243, 0.0293], [0.8735, 0.4215]]],[0, 0], 1, false, 1, Con57049), 
LCro14909 = cropping1D_layer(Con57049, 0, 1, Cro14909), 
exec_layers([LMin76611,LZer84679,LRes15229,LCon57049,LCro14909],["Min76611","Zer84679","Res15229","Con57049","Cro14909"],Cro14909,"Cro14909")

Actual (Unparsed): [[[0.0000000, 0.0000000], [0.0233488, 0.0010958], [0.0633664, 0.0029739]]]

Expected (Unparsed): [[[0.0,0.0],[0.02334882,0.0010958200000000002],[0.06336645,0.0029739500000000004]]]

Actual:   [[[0, 0], [0.0234, 0.0011], [0.0634, 0.003]]]

Expected: [[[0, 0], [0.0234, 0.0011], [0.0634, 0.003]]]