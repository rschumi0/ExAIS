import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0ELU61940 = tf.keras.layers.Input(shape=([1, 2, 1, 2]))

ELU61940 = keras.layers.ELU(alpha=-4.392677565402003, name = 'ELU61940', input_shape=(1, 2, 1, 2))(in0ELU61940)
Res21421 = keras.layers.Reshape((1, 2, 2), name = 'Res21421', )(ELU61940)
Cro97333 = keras.layers.Cropping2D(cropping=((0, 0), (0, 0)), name = 'Cro97333', )(Res21421)
Res29317 = keras.layers.Reshape((1, 4), name = 'Res29317', )(Cro97333)
Res36016 = keras.layers.Reshape((1, 4, 1), name = 'Res36016', )(Res29317)
Res1739 = keras.layers.Reshape((1, 4, 1, 1), name = 'Res1739', )(Res36016)
Con69291 = keras.layers.Conv3DTranspose(3, (1, 1, 1),strides=(1, 8, 1), padding='valid', name = 'Con69291', )(Res1739)
model = tf.keras.models.Model(inputs=[in0ELU61940], outputs=Con69291)
w = model.get_layer('Con69291').get_weights() 
w[0] = np.array([[[[[0.5708], [0.939], [0.9756]]]]])
w[1] = np.array([0, 0, 0])
model.get_layer('Con69291').set_weights(w) 
in0ELU61940 = tf.constant([[[[[0.5621, 0.6737]], [[0.8239, 0.3572]]]]])
print (np.array2string(model.predict([in0ELU61940],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Con69291.png')

LELU61940 = elu_layer([[[[[0.5621, 0.6737]], [[0.8239, 0.3572]]]]], -4.392677565402003, ELU61940), 
LRes21421 = reshape_layer(ELU61940, [1, 2, 2], Res21421), 
LCro97333 = cropping2D_layer(Res21421, 0, 0, 0, 0, Cro97333), 
LRes29317 = reshape_layer(Cro97333, [1, 4], Res29317), 
LRes36016 = reshape_layer(Res29317, [1, 4, 1], Res36016), 
LRes1739 = reshape_layer(Res36016, [1, 4, 1, 1], Res1739), 
LCon69291 = conv3D_transpose_layer(Res1739, 1, 1, 1,[[[[[0.5708], [0.939], [0.9756]]]]],[0, 0, 0], 1, 8, 1, false, Con69291), 
exec_layers([LELU61940,LRes21421,LCro97333,LRes29317,LRes36016,LRes1739,LCon69291],["ELU61940","Res21421","Cro97333","Res29317","Res36016","Res1739","Con69291"],Con69291,"Con69291")

Actual (Unparsed): [[[[[0.3208467, 0.5278119, 0.5483848]], [[0.0000000, 0.0000000, 0.0000000]], [[0.0000000, 0.0000000, 0.0000000]], [[0.0000000, 0.0000000, 0.0000000]], [[0.0000000, 0.0000000, 0.0000000]], [[0.0000000, 0.0000000, 0.0000000]], [[0.0000000, 0.0000000, 0.0000000]], [[0.0000000, 0.0000000, 0.0000000]], [[0.3845479, 0.6326043, 0.6572617]], [[0.0000000, 0.0000000, 0.0000000]], [[0.0000000, 0.0000000, 0.0000000]], [[0.0000000, 0.0000000, 0.0000000]], [[0.0000000, 0.0000000, 0.0000000]], [[0.0000000, 0.0000000, 0.0000000]], [[0.0000000, 0.0000000, 0.0000000]], [[0.0000000, 0.0000000, 0.0000000]], [[0.4702821, 0.7736421, 0.8037968]], [[0.0000000, 0.0000000, 0.0000000]], [[0.0000000, 0.0000000, 0.0000000]], [[0.0000000, 0.0000000, 0.0000000]], [[0.0000000, 0.0000000, 0.0000000]], [[0.0000000, 0.0000000, 0.0000000]], [[0.0000000, 0.0000000, 0.0000000]], [[0.0000000, 0.0000000, 0.0000000]], [[0.2038898, 0.3354108, 0.3484843]], [[0.0000000, 0.0000000, 0.0000000]], [[0.0000000, 0.0000000, 0.0000000]], [[0.0000000, 0.0000000, 0.0000000]], [[0.0000000, 0.0000000, 0.0000000]], [[0.0000000, 0.0000000, 0.0000000]], [[0.0000000, 0.0000000, 0.0000000]], [[0.0000000, 0.0000000, 0.0000000]]]]]

Expected (Unparsed): [[[[[0.32084668,0.5278119,0.54838476]],[[0,0,0]],[[0,0,0]],[[0,0,0]],[[0,0,0]],[[0,0,0]],[[0,0,0]],[[0,0,0]],[[0.38454795999999997,0.6326042999999999,0.6572617199999999]],[[0,0,0]],[[0,0,0]],[[0,0,0]],[[0,0,0]],[[0,0,0]],[[0,0,0]],[[0,0,0]],[[0.47028211999999997,0.7736420999999999,0.80379684]],[[0,0,0]],[[0,0,0]],[[0,0,0]],[[0,0,0]],[[0,0,0]],[[0,0,0]],[[0,0,0]],[[0.20388976,0.3354108,0.34848432]],[[0,0,0]],[[0,0,0]],[[0,0,0]],[[0,0,0]],[[0,0,0]],[[0,0,0]],[[0,0,0]]]]]

Actual:   [[[[[0.3209, 0.5279, 0.5484]], [[0, 0, 0]], [[0, 0, 0]], [[0, 0, 0]], [[0, 0, 0]], [[0, 0, 0]], [[0, 0, 0]], [[0, 0, 0]], [[0.3846, 0.6327, 0.6573]], [[0, 0, 0]], [[0, 0, 0]], [[0, 0, 0]], [[0, 0, 0]], [[0, 0, 0]], [[0, 0, 0]], [[0, 0, 0]], [[0.4703, 0.7737, 0.8038]], [[0, 0, 0]], [[0, 0, 0]], [[0, 0, 0]], [[0, 0, 0]], [[0, 0, 0]], [[0, 0, 0]], [[0, 0, 0]], [[0.2039, 0.3355, 0.3485]], [[0, 0, 0]], [[0, 0, 0]], [[0, 0, 0]], [[0, 0, 0]], [[0, 0, 0]], [[0, 0, 0]], [[0, 0, 0]]]]]

Expected: [[[[[0.3209, 0.5279, 0.5484]], [[0, 0, 0]], [[0, 0, 0]], [[0, 0, 0]], [[0, 0, 0]], [[0, 0, 0]], [[0, 0, 0]], [[0, 0, 0]], [[0.3846, 0.6327, 0.6573]], [[0, 0, 0]], [[0, 0, 0]], [[0, 0, 0]], [[0, 0, 0]], [[0, 0, 0]], [[0, 0, 0]], [[0, 0, 0]], [[0.4703, 0.7737, 0.8038]], [[0, 0, 0]], [[0, 0, 0]], [[0, 0, 0]], [[0, 0, 0]], [[0, 0, 0]], [[0, 0, 0]], [[0, 0, 0]], [[0.2039, 0.3355, 0.3485]], [[0, 0, 0]], [[0, 0, 0]], [[0, 0, 0]], [[0, 0, 0]], [[0, 0, 0]], [[0, 0, 0]], [[0, 0, 0]]]]]