import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Thr536 = tf.keras.layers.Input(shape=([1, 1, 2]))
in0Con86140 = tf.keras.layers.Input(shape=([2, 4, 3]))
in0Dot26706 = tf.keras.layers.Input(shape=([2, 2]))
in1Dot26706 = tf.keras.layers.Input(shape=([2, 2]))
in0Con63909 = tf.keras.layers.Input(shape=([2, 4, 3]))
in0Min7571 = tf.keras.layers.Input(shape=([2, 2]))
in1Min7571 = tf.keras.layers.Input(shape=([2, 2]))

Thr536 = keras.layers.ThresholdedReLU(theta=7.665415612107223, name = 'Thr536', input_shape=(1, 1, 2))(in0Thr536)
Res75482 = keras.layers.Reshape((1, 2), name = 'Res75482', )(Thr536)
Glo55902 = keras.layers.GlobalMaxPool1D(name = 'Glo55902', )(Res75482)
Bat57474 = keras.layers.BatchNormalization(axis=1, epsilon=0.5633015064913517,  name = 'Bat57474', )(Glo55902)
Res19002 = keras.layers.Reshape((2, 1), name = 'Res19002', )(Bat57474)
LST33887 = keras.layers.LSTM(2,recurrent_activation='sigmoid', name = 'LST33887', )(Res19002)
Res28903 = keras.layers.Reshape((2, 1), name = 'Res28903', )(LST33887)
Res95647 = keras.layers.Reshape((2, 1, 1), name = 'Res95647', )(Res28903)
Zer17679 = keras.layers.ZeroPadding2D(padding=((0, 0), (3, 0)), name = 'Zer17679', )(Res95647)
Con86140 = keras.layers.Concatenate(axis=3, name = 'Con86140', )([Zer17679,in0Con86140])
Dot26706 = keras.layers.Dot(axes=(2, 1), name = 'Dot26706', )([in0Dot26706,in1Dot26706])
Con86376 = keras.layers.Conv1D(4, (1),strides=(1), padding='valid', dilation_rate=(1), name = 'Con86376', )(Dot26706)
Res72824 = keras.layers.Reshape((2, 4, 1), name = 'Res72824', )(Con86376)
Con63909 = keras.layers.Concatenate(axis=3, name = 'Con63909', )([Res72824,in0Con63909])
Min7571 = keras.layers.Minimum(name = 'Min7571', )([in0Min7571,in1Min7571])
Res12443 = keras.layers.Reshape((2, 2, 1), name = 'Res12443', )(Min7571)
Loc87584 = keras.layers.LocallyConnected2D(4, (2, 2),strides=(3, 2), name = 'Loc87584', )(Res12443)
Zer61303 = keras.layers.ZeroPadding2D(padding=((1, 0), (3, 0)), name = 'Zer61303', )(Loc87584)
Min72104 = keras.layers.Minimum(name = 'Min72104', )([Con63909,Zer61303])
Sub48091 = keras.layers.Subtract(name = 'Sub48091', )([Con86140,Min72104])
model = tf.keras.models.Model(inputs=[in0Thr536,in0Con86140,in0Dot26706,in1Dot26706,in0Con63909,in0Min7571,in1Min7571], outputs=Sub48091)
w = model.get_layer('Bat57474').get_weights() 
w[0] = np.array([0.3882, 0.648])
w[1] = np.array([0.5296, 0.5226])
w[2] = np.array([0.6441, 0.1306])
w[3] = np.array([0.7123, 0.9833])
model.get_layer('Bat57474').set_weights(w) 
w = model.get_layer('LST33887').get_weights() 
w[0] = np.array([[2, 5, 6, 2, 9, 1, 3, 6]])
w[1] = np.array([[2, 1, 5, 2, 8, 10, 2, 2], [9, 6, 3, 3, 6, 9, 4, 3]])
w[2] = np.array([5, 9, 5, 3, 5, 4, 4, 8])
model.get_layer('LST33887').set_weights(w) 
w = model.get_layer('Con86376').get_weights() 
w[0] = np.array([[[0.444, 0.1669, 0.1725, 0.7009], [0.3721, 0.0422, 0.23, 0.0228]]])
w[1] = np.array([0, 0, 0, 0])
model.get_layer('Con86376').set_weights(w) 
w = model.get_layer('Loc87584').get_weights() 
w[0] = np.array([[[0.0143, 0.7643, 0.7156, 0.7872], [0.8952, 0.5682, 0.5346, 0.0983], [0.9377, 0.9078, 0.499, 0.4979], [0.1725, 0.3369, 0.145, 0.3107]]])
w[1] = np.array([[[0, 0, 0, 0]]])
model.get_layer('Loc87584').set_weights(w) 
in0Thr536 = tf.constant([[[[0.2473, 0.1463]]]])
in0Con86140 = tf.constant([[[[0.9222, 0.2107, 0.2721], [0.2168, 0.7677, 0.7336], [0.8867, 0.0864, 0.9277], [0.0519, 0.5791, 0.5172]], [[0.4455, 0.5294, 0.5451], [0.9191, 0.9166, 0.5249], [0.09, 0.9978, 0.3593], [0.777, 0.4261, 0.6482]]]])
in0Dot26706 = tf.constant([[[0.6905, 0.76], [0.6533, 0.3752]]])
in1Dot26706 = tf.constant([[[0.1788, 0.8111], [0.881, 0.0206]]])
in0Con63909 = tf.constant([[[[0.527, 0.2628, 0.2212], [0.8813, 0.8102, 0.3795], [0.8333, 0.193, 0.7225], [0.5022, 0.8815, 0.6017]], [[0.6737, 0.303, 0.439], [0.792, 0.8902, 0.2044], [0.9062, 0.0793, 0.1589], [0.8045, 0.184, 0.0055]]]])
in0Min7571 = tf.constant([[[0.8305, 0.9158], [0.9946, 0.9203]]])
in1Min7571 = tf.constant([[[0.4343, 0.4561], [0.7743, 0.762]]])
print (np.array2string(model.predict([in0Thr536,in0Con86140,in0Dot26706,in1Dot26706,in0Con63909,in0Min7571,in1Min7571],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Sub48091.png')

LThr536 = thresholded_relu_layer([[[[0.2473, 0.1463]]]], 7.665415612107223, Thr536), 
LRes75482 = reshape_layer(Thr536, [1, 2], Res75482), 
LGlo55902 = global_max_pool1D_layer(Res75482, Glo55902), 
LBat57474 = batch_normalization_layer(Glo55902, 1, 0.5633015064913517, [0.3882, 0.648], [0.5296, 0.5226], [0.6441, 0.1306], [0.7123, 0.9833], Bat57474), 
LRes19002 = reshape_layer(Bat57474, [2, 1], Res19002), 
LLST33887 = lstm_layer(Res19002,[[2, 5, 6, 2, 9, 1, 3, 6]],[[2, 1, 5, 2, 8, 10, 2, 2], [9, 6, 3, 3, 6, 9, 4, 3]],[5, 9, 5, 3, 5, 4, 4, 8], LST33887), 
LRes28903 = reshape_layer(LST33887, [2, 1], Res28903), 
LRes95647 = reshape_layer(Res28903, [2, 1, 1], Res95647), 
LZer17679 = zero_padding2D_layer(Res95647, 0, 0, 3, 0, Zer17679), 
LCon86140 = concatenate_layer([Zer17679,[[[[0.9222, 0.2107, 0.2721], [0.2168, 0.7677, 0.7336], [0.8867, 0.0864, 0.9277], [0.0519, 0.5791, 0.5172]], [[0.4455, 0.5294, 0.5451], [0.9191, 0.9166, 0.5249], [0.09, 0.9978, 0.3593], [0.777, 0.4261, 0.6482]]]]], 3, Con86140), 
LDot26706 = dot_layer([[[0.6905, 0.76], [0.6533, 0.3752]]], [[[0.1788, 0.8111], [0.881, 0.0206]]], 2, 1, Dot26706), 
LCon86376 = conv1D_layer(Dot26706, 1,[[[0.444, 0.1669, 0.1725, 0.7009], [0.3721, 0.0422, 0.23, 0.0228]]],[0, 0, 0, 0], 1, false, 1, Con86376), 
LRes72824 = reshape_layer(Con86376, [2, 4, 1], Res72824), 
LCon63909 = concatenate_layer([Res72824,[[[[0.527, 0.2628, 0.2212], [0.8813, 0.8102, 0.3795], [0.8333, 0.193, 0.7225], [0.5022, 0.8815, 0.6017]], [[0.6737, 0.303, 0.439], [0.792, 0.8902, 0.2044], [0.9062, 0.0793, 0.1589], [0.8045, 0.184, 0.0055]]]]], 3, Con63909), 
LMin7571 = minimum_layer([[[[0.8305, 0.9158], [0.9946, 0.9203]]], [[[0.4343, 0.4561], [0.7743, 0.762]]]], Min7571), 
LRes12443 = reshape_layer(Min7571, [2, 2, 1], Res12443), 
LLoc87584 = locally_connected2D_layer(Res12443, 2, 2,[[[0.0143, 0.7643, 0.7156, 0.7872], [0.8952, 0.5682, 0.5346, 0.0983], [0.9377, 0.9078, 0.499, 0.4979], [0.1725, 0.3369, 0.145, 0.3107]]],[[[0, 0, 0, 0]]], 3, 2, Loc87584), 
LZer61303 = zero_padding2D_layer(Loc87584, 1, 0, 3, 0, Zer61303), 
LMin72104 = minimum_layer([Con63909,Zer61303], Min72104), 
LSub48091 = subtract_layer(Con86140,Min72104, Sub48091), 
exec_layers([LThr536,LRes75482,LGlo55902,LBat57474,LRes19002,LLST33887,LRes28903,LRes95647,LZer17679,LCon86140,LDot26706,LCon86376,LRes72824,LCon63909,LMin7571,LRes12443,LLoc87584,LZer61303,LMin72104,LSub48091],["Thr536","Res75482","Glo55902","Bat57474","Res19002","LST33887","Res28903","Res95647","Zer17679","Con86140","Dot26706","Con86376","Res72824","Con63909","Min7571","Res12443","Loc87584","Zer61303","Min72104","Sub48091"],Sub48091,"Sub48091")

Actual (Unparsed): [[[[0.0000000, 0.9222000, 0.2107000, 0.2721000], [0.0000000, 0.2168000, 0.7677000, 0.7336000], [0.0000000, 0.8867000, 0.0864000, 0.9277000], [0.9637230, 0.0519000, 0.5791000, 0.5172000]], [[0.0000000, 0.4455000, 0.5294000, 0.5451000], [0.0000000, 0.9191000, 0.9166000, 0.5249000], [0.0000000, 0.0900000, 0.9978000, 0.3593000], [0.6381545, -0.0275000, 0.2421000, 0.6427000]]]]

Expected (Unparsed): [[[[0,0.9222,0.2107,0.2721],[0,0.2168,0.7677,0.7336],[0,0.8867,0.0864,0.9277],[0.9637229972348583,0.0519,0.5791,0.5172]],[[0,0.4455,0.5294,0.5451],[0,0.9191,0.9166,0.5249],[0,0.09,0.9978,0.3593],[0.638154464949926,-0.02749999999999997,0.24209999999999998,0.6427]]]]

Actual:   [[[[0, 0.9222, 0.2107, 0.2721], [0, 0.2168, 0.7677, 0.7336], [0, 0.8867, 0.0864, 0.9277], [0.9638, 0.0519, 0.5791, 0.5172]], [[0, 0.4455, 0.5294, 0.5451], [0, 0.9191, 0.9166, 0.5249], [0, 0.09, 0.9978, 0.3593], [0.6382, -0.0275, 0.2421, 0.6427]]]]

Expected: [[[[0, 0.9222, 0.2107, 0.2721], [0, 0.2168, 0.7677, 0.7336], [0, 0.8867, 0.0864, 0.9277], [0.9638, 0.0519, 0.5791, 0.5172]], [[0, 0.4455, 0.5294, 0.5451], [0, 0.9191, 0.9166, 0.5249], [0, 0.09, 0.9978, 0.3593], [0.6382, -0.0274, 0.2421, 0.6427]]]]