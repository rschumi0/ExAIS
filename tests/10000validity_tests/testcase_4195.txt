import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Glo36653 = tf.keras.layers.Input(shape=([1, 2]))
in0Con96061 = tf.keras.layers.Input(shape=([2, 3]))
in0Sep22845 = tf.keras.layers.Input(shape=([2, 1]))

Glo36653 = keras.layers.GlobalAveragePooling1D(name = 'Glo36653', )(in0Glo36653)
Lay26505 = keras.layers.LayerNormalization(axis=1, epsilon=2.489052693723815, name = 'Lay26505', )(Glo36653)
Res89259 = keras.layers.Reshape((2, 1), name = 'Res89259', )(Lay26505)
Con96061 = keras.layers.Concatenate(axis=2, name = 'Con96061', )([Res89259,in0Con96061])
Sep22845 = keras.layers.SeparableConv1D(4, (2),strides=(1), padding='valid', name = 'Sep22845', )(in0Sep22845)
Zer70059 = keras.layers.ZeroPadding1D(padding=((1, 0)), name = 'Zer70059', )(Sep22845)
Ave67282 = keras.layers.Average(name = 'Ave67282', )([Con96061,Zer70059])
Res20603 = keras.layers.Reshape((2, 4, 1), name = 'Res20603', )(Ave67282)
Sep18778 = keras.layers.SeparableConv2D(3, (2, 4),strides=(2, 2), padding='valid', name = 'Sep18778', )(Res20603)
Zer53778 = keras.layers.ZeroPadding2D(padding=((1, 1), (1, 1)), name = 'Zer53778', )(Sep18778)
model = tf.keras.models.Model(inputs=[in0Glo36653,in0Con96061,in0Sep22845], outputs=Zer53778)
w = model.get_layer('Sep22845').get_weights() 
w[0] = np.array([[[0]], [[0.7072]]])
w[1] = np.array([[[0.2944, 0.1669, 0.0876, 0.8107]]])
w[2] = np.array([0, 0, 0, 0])
model.get_layer('Sep22845').set_weights(w) 
w = model.get_layer('Sep18778').get_weights() 
w[0] = np.array([[[[0.3468]], [[0.9028]], [[0.495]], [[0.8294]]], [[[0.6231]], [[0.8586]], [[0.472]], [[0.2756]]]])
w[1] = np.array([[[[0.3074, 0.0314, 0.3372]]]])
w[2] = np.array([0, 0, 0])
model.get_layer('Sep18778').set_weights(w) 
in0Glo36653 = tf.constant([[[1.1437, 1.01]]])
in0Con96061 = tf.constant([[[0.8756, 0.5088, 0.0457], [0.9195, 0.2226, 0.0961]]])
in0Sep22845 = tf.constant([[[0.5169], [0.6262]]])
print (np.array2string(model.predict([in0Glo36653,in0Con96061,in0Sep22845],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Zer53778.png')

LGlo36653 = global_average_pooling1D_layer([[[1.1437, 1.01]]], Glo36653), 
LLay26505 = layer_normalization_layer(Glo36653, 1, 2.489052693723815, Lay26505), 
LRes89259 = reshape_layer(Lay26505, [2, 1], Res89259), 
LCon96061 = concatenate_layer([Res89259,[[[0.8756, 0.5088, 0.0457], [0.9195, 0.2226, 0.0961]]]], 2, Con96061), 
LSep22845 = separable_conv1D_layer([[[0.5169], [0.6262]]], 2,[[[[0]], [[0.7072]]],[[[0.2944, 0.1669, 0.0876, 0.8107]]]],[0, 0, 0, 0], 1, false, Sep22845), 
LZer70059 = zero_padding1D_layer(Sep22845, 1, 0, Zer70059), 
LAve67282 = average_layer([Con96061,Zer70059], Ave67282), 
LRes20603 = reshape_layer(Ave67282, [2, 4, 1], Res20603), 
LSep18778 = separable_conv2D_layer(Res20603, 2, 4,[[[[[0.3468]], [[0.9028]], [[0.495]], [[0.8294]]], [[[0.6231]], [[0.8586]], [[0.472]], [[0.2756]]]],[[[[0.3074, 0.0314, 0.3372]]]]],[0, 0, 0], 2, 2, false, Sep18778), 
LZer53778 = zero_padding2D_layer(Sep18778, 1, 1, 1, 1, Zer53778), 
exec_layers([LGlo36653,LLay26505,LRes89259,LCon96061,LSep22845,LZer70059,LAve67282,LRes20603,LSep18778,LZer53778],["Glo36653","Lay26505","Res89259","Con96061","Sep22845","Zer70059","Ave67282","Res20603","Sep18778","Zer53778"],Zer53778,"Zer53778")

Actual (Unparsed): [[[[0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000]], [[0.0000000, 0.0000000, 0.0000000], [0.3460620, 0.0353492, 0.3796100], [0.0000000, 0.0000000, 0.0000000]], [[0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000]]]]

Expected (Unparsed): [[[[0,0,0],[0,0,0],[0,0,0]],[[0,0,0],[0.3460619792604561,0.03534920672992296,0.3796099525264339],[0,0,0]],[[0,0,0],[0,0,0],[0,0,0]]]]

Actual:   [[[[0, 0, 0], [0, 0, 0], [0, 0, 0]], [[0, 0, 0], [0.3461, 0.0354, 0.3797], [0, 0, 0]], [[0, 0, 0], [0, 0, 0], [0, 0, 0]]]]

Expected: [[[[0, 0, 0], [0, 0, 0], [0, 0, 0]], [[0, 0, 0], [0.3461, 0.0354, 0.3797], [0, 0, 0]], [[0, 0, 0], [0, 0, 0], [0, 0, 0]]]]