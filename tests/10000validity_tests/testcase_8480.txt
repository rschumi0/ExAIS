import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Mul52838 = tf.keras.layers.Input(shape=([2, 2, 2, 1]))
in1Mul52838 = tf.keras.layers.Input(shape=([2, 2, 2, 1]))
in0Max62295 = tf.keras.layers.Input(shape=([2, 2, 1]))
in1Max62295 = tf.keras.layers.Input(shape=([2, 2, 1]))
in0Con86477 = tf.keras.layers.Input(shape=([2, 21]))
in0Sub62634 = tf.keras.layers.Input(shape=([3, 3, 3, 3]))
in1Sub62634 = tf.keras.layers.Input(shape=([3, 3, 3, 3]))

Mul52838 = keras.layers.Multiply(name = 'Mul52838', )([in0Mul52838,in1Mul52838])
Res65598 = keras.layers.Reshape((2, 2, 2), name = 'Res65598', )(Mul52838)
Res11376 = keras.layers.Reshape((2, 4), name = 'Res11376', )(Res65598)
Cro33350 = keras.layers.Cropping1D(cropping=((0, 1)), name = 'Cro33350', )(Res11376)
Res14683 = keras.layers.Reshape((1, 4, 1), name = 'Res14683', )(Cro33350)
Zer49898 = keras.layers.ZeroPadding2D(padding=((1, 0), (2, 0)), name = 'Zer49898', )(Res14683)
Max62295 = keras.layers.Maximum(name = 'Max62295', )([in0Max62295,in1Max62295])
Zer18989 = keras.layers.ZeroPadding2D(padding=((0, 0), (4, 0)), name = 'Zer18989', )(Max62295)
Mul8946 = keras.layers.Multiply(name = 'Mul8946', )([Zer49898,Zer18989])
Res99277 = keras.layers.Reshape((2, 6), name = 'Res99277', )(Mul8946)
Con86477 = keras.layers.Concatenate(axis=2, name = 'Con86477', )([Res99277,in0Con86477])
Sub62634 = keras.layers.Subtract(name = 'Sub62634', )([in0Sub62634,in1Sub62634])
Res69542 = keras.layers.Reshape((3, 3, 9), name = 'Res69542', )(Sub62634)
Res60839 = keras.layers.Reshape((3, 27), name = 'Res60839', )(Res69542)
Ave88730 = keras.layers.AveragePooling1D(pool_size=(2), strides=(2), padding='valid', name = 'Ave88730', )(Res60839)
Zer72077 = keras.layers.ZeroPadding1D(padding=((1, 0)), name = 'Zer72077', )(Ave88730)
Ave16063 = keras.layers.Average(name = 'Ave16063', )([Con86477,Zer72077])
Mas10966 = keras.layers.Masking(mask_value=1, name = 'Mas10966', )(Ave16063)
model = tf.keras.models.Model(inputs=[in0Mul52838,in1Mul52838,in0Max62295,in1Max62295,in0Con86477,in0Sub62634,in1Sub62634], outputs=Mas10966)
in0Mul52838 = tf.constant([[[[[0.2122], [0.1479]], [[0.1162], [0.3088]]], [[[0.9115], [0.7085]], [[0.4179], [0.0414]]]]])
in1Mul52838 = tf.constant([[[[[0.1637], [0.0797]], [[0.8748], [0.3995]]], [[[0.1027], [0.7226]], [[0.4045], [0.1388]]]]])
in0Max62295 = tf.constant([[[[0.4065], [0.0522]], [[0.3556], [0.5633]]]])
in1Max62295 = tf.constant([[[[0.0271], [0.012]], [[0.7777], [0.0839]]]])
in0Con86477 = tf.constant([[[0.7899, 0.4433, 0.4012, 0.0185, 0.8241, 0.2507, 0.8615, 0.1104, 0.6451, 0.7826, 0.9293, 0.8361, 0.6462, 0.9693, 0.7024, 0.9068, 0.7816, 0.2688, 0.8262, 0.1648, 0.6189], [0.9532, 0.469, 0.0132, 0.9166, 0.6039, 0.8739, 0.4259, 0.0131, 0.4895, 0.0182, 0.3559, 0.6249, 0.9153, 0.9936, 0.1586, 0.7484, 0.0778, 0.0753, 0.9898, 0.2344, 0.4371]]])
in0Sub62634 = tf.constant([[[[[0.0255, 0.6096, 0.9485], [0.5228, 0.9155, 0.2977], [0.3306, 0.1479, 0.6551]], [[0.7919, 0.3827, 0.2724], [0.443, 0.1644, 0.6836], [0.1418, 0.7721, 0.8221]], [[0.6393, 0.7424, 0.7754], [0.2902, 0.6387, 0.1125], [0.7554, 0.5507, 0.8988]]], [[[0.7166, 0.9332, 0.0615], [0.3997, 0.4492, 0.8748], [0.4757, 0.2447, 0.8781]], [[0.7564, 0.514, 0.5036], [0.4031, 0.6162, 0.4037], [0.0971, 0.1163, 0.0063]], [[0.7926, 0.5615, 0.2749], [0.0061, 0.0681, 0.5985], [0.4711, 0.3893, 0.5703]]], [[[0.1574, 0.7734, 0.8438], [0.2719, 0.4244, 0.3445], [0.5383, 0.1184, 0.5012]], [[0.2998, 0.0019, 0.3703], [0.7412, 0.8583, 0.2349], [0.9688, 0.685, 0.1613]], [[0.2062, 0.1609, 0.2847], [0.4867, 0.4107, 0.3602], [0.6395, 0.9674, 0.9532]]]]])
in1Sub62634 = tf.constant([[[[[0.4962, 0.7811, 0.3429], [0.7103, 0.9093, 0.1375], [0.7136, 0.4772, 0.1862]], [[0.1838, 0.7486, 0.6517], [0.1987, 0.4442, 0.3062], [0.9266, 0.0071, 0.4478]], [[0.9644, 0.6705, 0.2227], [0.4602, 0.5319, 0.1584], [0.882, 0.8157, 0.2119]]], [[[0.5813, 0.8826, 0.4548], [0.7256, 0.8136, 0.5512], [0.8364, 0.3645, 0.2428]], [[0.9728, 0.739, 0.642], [0.5805, 0.2964, 0.5903], [0.9369, 0.4608, 0.3485]], [[0.8734, 0.2832, 0.8091], [0.5385, 0.8433, 0.2518], [0.4153, 0.2181, 0.2613]]], [[[0.6864, 0.884, 0.3711], [0.102, 0.9133, 0.1457], [0.7495, 0.2222, 0.9266]], [[0.0184, 0.3509, 0.7934], [0.9642, 0.8799, 0.4337], [0.895, 0.8379, 0.3778]], [[0.1067, 0.0407, 0.3588], [0.2428, 0.8952, 0.5678], [0.206, 0.6936, 0.5873]]]]])
print (np.array2string(model.predict([in0Mul52838,in1Mul52838,in0Max62295,in1Max62295,in0Con86477,in0Sub62634,in1Sub62634],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Mas10966.png')

LMul52838 = multiply_layer([[[[[[0.2122], [0.1479]], [[0.1162], [0.3088]]], [[[0.9115], [0.7085]], [[0.4179], [0.0414]]]]], [[[[[0.1637], [0.0797]], [[0.8748], [0.3995]]], [[[0.1027], [0.7226]], [[0.4045], [0.1388]]]]]], Mul52838), 
LRes65598 = reshape_layer(Mul52838, [2, 2, 2], Res65598), 
LRes11376 = reshape_layer(Res65598, [2, 4], Res11376), 
LCro33350 = cropping1D_layer(Res11376, 0, 1, Cro33350), 
LRes14683 = reshape_layer(Cro33350, [1, 4, 1], Res14683), 
LZer49898 = zero_padding2D_layer(Res14683, 1, 0, 2, 0, Zer49898), 
LMax62295 = maximum_layer([[[[[0.4065], [0.0522]], [[0.3556], [0.5633]]]], [[[[0.0271], [0.012]], [[0.7777], [0.0839]]]]], Max62295), 
LZer18989 = zero_padding2D_layer(Max62295, 0, 0, 4, 0, Zer18989), 
LMul8946 = multiply_layer([Zer49898,Zer18989], Mul8946), 
LRes99277 = reshape_layer(Mul8946, [2, 6], Res99277), 
LCon86477 = concatenate_layer([Res99277,[[[0.7899, 0.4433, 0.4012, 0.0185, 0.8241, 0.2507, 0.8615, 0.1104, 0.6451, 0.7826, 0.9293, 0.8361, 0.6462, 0.9693, 0.7024, 0.9068, 0.7816, 0.2688, 0.8262, 0.1648, 0.6189], [0.9532, 0.469, 0.0132, 0.9166, 0.6039, 0.8739, 0.4259, 0.0131, 0.4895, 0.0182, 0.3559, 0.6249, 0.9153, 0.9936, 0.1586, 0.7484, 0.0778, 0.0753, 0.9898, 0.2344, 0.4371]]]], 2, Con86477), 
LSub62634 = subtract_layer([[[[[0.0255, 0.6096, 0.9485], [0.5228, 0.9155, 0.2977], [0.3306, 0.1479, 0.6551]], [[0.7919, 0.3827, 0.2724], [0.443, 0.1644, 0.6836], [0.1418, 0.7721, 0.8221]], [[0.6393, 0.7424, 0.7754], [0.2902, 0.6387, 0.1125], [0.7554, 0.5507, 0.8988]]], [[[0.7166, 0.9332, 0.0615], [0.3997, 0.4492, 0.8748], [0.4757, 0.2447, 0.8781]], [[0.7564, 0.514, 0.5036], [0.4031, 0.6162, 0.4037], [0.0971, 0.1163, 0.0063]], [[0.7926, 0.5615, 0.2749], [0.0061, 0.0681, 0.5985], [0.4711, 0.3893, 0.5703]]], [[[0.1574, 0.7734, 0.8438], [0.2719, 0.4244, 0.3445], [0.5383, 0.1184, 0.5012]], [[0.2998, 0.0019, 0.3703], [0.7412, 0.8583, 0.2349], [0.9688, 0.685, 0.1613]], [[0.2062, 0.1609, 0.2847], [0.4867, 0.4107, 0.3602], [0.6395, 0.9674, 0.9532]]]]], [[[[[0.4962, 0.7811, 0.3429], [0.7103, 0.9093, 0.1375], [0.7136, 0.4772, 0.1862]], [[0.1838, 0.7486, 0.6517], [0.1987, 0.4442, 0.3062], [0.9266, 0.0071, 0.4478]], [[0.9644, 0.6705, 0.2227], [0.4602, 0.5319, 0.1584], [0.882, 0.8157, 0.2119]]], [[[0.5813, 0.8826, 0.4548], [0.7256, 0.8136, 0.5512], [0.8364, 0.3645, 0.2428]], [[0.9728, 0.739, 0.642], [0.5805, 0.2964, 0.5903], [0.9369, 0.4608, 0.3485]], [[0.8734, 0.2832, 0.8091], [0.5385, 0.8433, 0.2518], [0.4153, 0.2181, 0.2613]]], [[[0.6864, 0.884, 0.3711], [0.102, 0.9133, 0.1457], [0.7495, 0.2222, 0.9266]], [[0.0184, 0.3509, 0.7934], [0.9642, 0.8799, 0.4337], [0.895, 0.8379, 0.3778]], [[0.1067, 0.0407, 0.3588], [0.2428, 0.8952, 0.5678], [0.206, 0.6936, 0.5873]]]]], Sub62634), 
LRes69542 = reshape_layer(Sub62634, [3, 3, 9], Res69542), 
LRes60839 = reshape_layer(Res69542, [3, 27], Res60839), 
LAve88730 = average_pooling1D_layer(Res60839, 2, 2, false, Ave88730), 
LZer72077 = zero_padding1D_layer(Ave88730, 1, 0, Zer72077), 
LAve16063 = average_layer([Con86477,Zer72077], Ave16063), 
LMas10966 = masking_layer(Ave16063, 1, Mas10966), 
exec_layers([LMul52838,LRes65598,LRes11376,LCro33350,LRes14683,LZer49898,LMax62295,LZer18989,LMul8946,LRes99277,LCon86477,LSub62634,LRes69542,LRes60839,LAve88730,LZer72077,LAve16063,LMas10966],["Mul52838","Res65598","Res11376","Cro33350","Res14683","Zer49898","Max62295","Zer18989","Mul8946","Res99277","Con86477","Sub62634","Res69542","Res60839","Ave88730","Zer72077","Ave16063","Mas10966"],Mas10966,"Mas10966")

Actual (Unparsed): [[[0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.3949500, 0.2216500, 0.2006000, 0.0092500, 0.4120500, 0.1253500, 0.4307500, 0.0552000, 0.3225500, 0.3913000, 0.4646500, 0.4180500, 0.3231000, 0.4846500, 0.3512000, 0.4534000, 0.3908000, 0.1344000, 0.4131000, 0.0824000, 0.3094500], [-0.0838500, -0.0302250, 0.0530750, -0.1283500, -0.0500227, 0.1556959, 0.2906750, 0.1222250, 0.2826500, 0.5562250, 0.1542250, 0.3075250, 0.2296750, 0.0165500, 0.2924500, -0.3970500, 0.2830750, 0.3204750, 0.3561750, 0.5843500, 0.0839250, 0.1986000, -0.1282000, 0.1128500, 0.4772000, 0.0937500, 0.4675250]]]

Expected (Unparsed): [[[0,0,0,0,0.0,0.0,0.39495,0.22165,0.2006,0.00925,0.41205,0.12535,0.43075,0.0552,0.32255,0.3913,0.46465,0.41805,0.3231,0.48465,0.3512,0.4534,0.3908,0.1344,0.4131,0.0824,0.30945],[-0.08385,-0.030225000000000002,0.05307500000000001,-0.12835000000000002,-0.05002271312400001,0.15569592124,0.290675,0.12222499999999997,0.28265,0.556225,0.154225,0.30752500000000005,0.22967500000000002,0.016549999999999995,0.29245,-0.39705,0.283075,0.32047500000000007,0.356175,0.58435,0.08392499999999999,0.1986,-0.12820000000000004,0.11285,0.4772,0.09375,0.467525]]]

Actual:   [[[0, 0, 0, 0, 0, 0, 0.395, 0.2217, 0.2006, 0.0093, 0.4121, 0.1254, 0.4308, 0.0552, 0.3226, 0.3913, 0.4647, 0.4181, 0.3231, 0.4847, 0.3512, 0.4534, 0.3908, 0.1344, 0.4131, 0.0824, 0.3095], [-0.0838, -0.0302, 0.0531, -0.1283, -0.05, 0.1557, 0.2907, 0.1223, 0.2827, 0.5563, 0.1543, 0.3076, 0.2297, 0.0166, 0.2925, -0.397, 0.2831, 0.3205, 0.3562, 0.5844, 0.084, 0.1986, -0.1282, 0.1129, 0.4772, 0.0938, 0.4676]]]

Expected: [[[0, 0, 0, 0, 0, 0, 0.395, 0.2217, 0.2006, 0.0093, 0.4121, 0.1254, 0.4308, 0.0552, 0.3226, 0.3913, 0.4647, 0.4181, 0.3231, 0.4847, 0.3512, 0.4534, 0.3908, 0.1344, 0.4131, 0.0824, 0.3095], [-0.0838, -0.0302, 0.0531, -0.1283, -0.05, 0.1557, 0.2907, 0.1223, 0.2827, 0.5563, 0.1543, 0.3076, 0.2297, 0.0166, 0.2925, -0.397, 0.2831, 0.3205, 0.3562, 0.5844, 0.084, 0.1986, -0.1282, 0.1129, 0.4772, 0.0938, 0.4676]]]