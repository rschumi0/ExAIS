import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Min17138 = tf.keras.layers.Input(shape=([2, 2, 2, 1]))
in1Min17138 = tf.keras.layers.Input(shape=([2, 2, 2, 1]))
in0Sub21934 = tf.keras.layers.Input(shape=([2, 2]))
in1Sub21934 = tf.keras.layers.Input(shape=([2, 2]))
in0Con35491 = tf.keras.layers.Input(shape=([2, 2]))
in0Up_36970 = tf.keras.layers.Input(shape=([3, 1]))
in0Con1048 = tf.keras.layers.Input(shape=([8, 3]))

Min17138 = keras.layers.Minimum(name = 'Min17138', )([in0Min17138,in1Min17138])
Res22246 = keras.layers.Reshape((2, 2, 2), name = 'Res22246', )(Min17138)
Res94536 = keras.layers.Reshape((2, 4), name = 'Res94536', )(Res22246)
Sub21934 = keras.layers.Subtract(name = 'Sub21934', )([in0Sub21934,in1Sub21934])
Con35491 = keras.layers.Concatenate(axis=2, name = 'Con35491', )([Sub21934,in0Con35491])
Min74977 = keras.layers.Minimum(name = 'Min74977', )([Res94536,Con35491])
Bat76011 = keras.layers.BatchNormalization(axis=1, epsilon=0.434375949199696,  name = 'Bat76011', )(Min74977)
Zer20847 = keras.layers.ZeroPadding1D(padding=((6, 0)), name = 'Zer20847', )(Bat76011)
Up_36970 = keras.layers.UpSampling1D(size=(2), name = 'Up_36970', )(in0Up_36970)
Zer75179 = keras.layers.ZeroPadding1D(padding=((1, 1)), name = 'Zer75179', )(Up_36970)
Con1048 = keras.layers.Concatenate(axis=2, name = 'Con1048', )([Zer75179,in0Con1048])
Add8513 = keras.layers.Add(name = 'Add8513', )([Zer20847,Con1048])
model = tf.keras.models.Model(inputs=[in0Min17138,in1Min17138,in0Sub21934,in1Sub21934,in0Con35491,in0Up_36970,in0Con1048], outputs=Add8513)
w = model.get_layer('Bat76011').get_weights() 
w[0] = np.array([0.9141, 0.8497])
w[1] = np.array([0.8306, 0.0176])
w[2] = np.array([0.0254, 0.2026])
w[3] = np.array([0.3638, 0.0189])
model.get_layer('Bat76011').set_weights(w) 
in0Min17138 = tf.constant([[[[[0.4008], [0.066]], [[0.3434], [0.6782]]], [[[0.3955], [0.3112]], [[0.1278], [0.8336]]]]])
in1Min17138 = tf.constant([[[[[0.0122], [0.2769]], [[0.6085], [0.9551]]], [[[0.5926], [0.6888]], [[0.1767], [0.4839]]]]])
in0Sub21934 = tf.constant([[[0.648, 0.828], [0.0874, 0.6035]]])
in1Sub21934 = tf.constant([[[0.0497, 0.4583], [0.6402, 0.7679]]])
in0Con35491 = tf.constant([[[0.5052, 0.7354], [0.842, 0.4104]]])
in0Up_36970 = tf.constant([[[1.1399], [1.1875], [1.0758]]])
in0Con1048 = tf.constant([[[0.4624, 0.5054, 0.5772], [0.4259, 0.2381, 0.5425], [0.9839, 0.9974, 0.2391], [0.3341, 0.0448, 0.3185], [0.1851, 0.949, 0.1557], [0.757, 0.1368, 0.4659], [0.8701, 0.213, 0.5542], [0.6276, 0.965, 0.9457]]])
print (np.array2string(model.predict([in0Min17138,in1Min17138,in0Sub21934,in1Sub21934,in0Con35491,in0Up_36970,in0Con1048],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Add8513.png')

LMin17138 = minimum_layer([[[[[[0.4008], [0.066]], [[0.3434], [0.6782]]], [[[0.3955], [0.3112]], [[0.1278], [0.8336]]]]], [[[[[0.0122], [0.2769]], [[0.6085], [0.9551]]], [[[0.5926], [0.6888]], [[0.1767], [0.4839]]]]]], Min17138), 
LRes22246 = reshape_layer(Min17138, [2, 2, 2], Res22246), 
LRes94536 = reshape_layer(Res22246, [2, 4], Res94536), 
LSub21934 = subtract_layer([[[0.648, 0.828], [0.0874, 0.6035]]], [[[0.0497, 0.4583], [0.6402, 0.7679]]], Sub21934), 
LCon35491 = concatenate_layer([Sub21934,[[[0.5052, 0.7354], [0.842, 0.4104]]]], 2, Con35491), 
LMin74977 = minimum_layer([Res94536,Con35491], Min74977), 
LBat76011 = batch_normalization_layer(Min74977, 1, 0.434375949199696, [0.9141, 0.8497], [0.8306, 0.0176], [0.0254, 0.2026], [0.3638, 0.0189], Bat76011), 
LZer20847 = zero_padding1D_layer(Bat76011, 6, 0, Zer20847), 
LUp_36970 = up_sampling1D_layer([[[1.1399], [1.1875], [1.0758]]], 2, Up_36970), 
LZer75179 = zero_padding1D_layer(Up_36970, 1, 1, Zer75179), 
LCon1048 = concatenate_layer([Zer75179,[[[0.4624, 0.5054, 0.5772], [0.4259, 0.2381, 0.5425], [0.9839, 0.9974, 0.2391], [0.3341, 0.0448, 0.3185], [0.1851, 0.949, 0.1557], [0.757, 0.1368, 0.4659], [0.8701, 0.213, 0.5542], [0.6276, 0.965, 0.9457]]]], 2, Con1048), 
LAdd8513 = add_layer([Zer20847,Con1048], Add8513), 
exec_layers([LMin17138,LRes22246,LRes94536,LSub21934,LCon35491,LMin74977,LBat76011,LZer20847,LUp_36970,LZer75179,LCon1048,LAdd8513],["Min17138","Res22246","Res94536","Sub21934","Con35491","Min74977","Bat76011","Zer20847","Up_36970","Zer75179","Con1048","Add8513"],Add8513,"Add8513")

Actual (Unparsed): [[[0.0000000, 0.4624000, 0.5054000, 0.5772000], [1.1399000, 0.4259000, 0.2381000, 0.5425000], [1.1399000, 0.9839000, 0.9974000, 0.2391000], [1.1875000, 0.3341000, 0.0448000, 0.3185000], [1.1875000, 0.1851000, 0.9490000, 0.1557000], [1.0757999, 0.7570000, 0.1368000, 0.4659000], [1.8928942, 1.7422404, 1.3689655, 2.0527201], [-0.9357695, 0.1820195, 0.8881970, 1.2255586]]]

Expected (Unparsed): [[[0,0.4624,0.5054,0.5772],[1.1399,0.4259,0.2381,0.5425],[1.1399,0.9839,0.9974,0.2391],[1.1875,0.3341,0.0448,0.3185],[1.1875,0.1851,0.949,0.1557],[1.0758,0.757,0.1368,0.4659],[1.892894261970965,1.7422403760590015,1.3689655070631146,2.0527201352540914],[-0.9357695148789048,0.18201941757935136,0.8881969821115407,1.225558651299757]]]

Actual:   [[[0, 0.4624, 0.5054, 0.5772], [1.1399, 0.4259, 0.2381, 0.5425], [1.1399, 0.9839, 0.9974, 0.2391], [1.1875, 0.3341, 0.0448, 0.3185], [1.1875, 0.1851, 0.949, 0.1557], [1.0758, 0.757, 0.1368, 0.4659], [1.8929, 1.7423, 1.369, 2.0528], [-0.9357, 0.1821, 0.8882, 1.2256]]]

Expected: [[[0, 0.4624, 0.5054, 0.5772], [1.1399, 0.4259, 0.2381, 0.5425], [1.1399, 0.9839, 0.9974, 0.2391], [1.1875, 0.3341, 0.0448, 0.3185], [1.1875, 0.1851, 0.949, 0.1557], [1.0758, 0.757, 0.1368, 0.4659], [1.8929, 1.7423, 1.369, 2.0528], [-0.9357, 0.1821, 0.8882, 1.2256]]]