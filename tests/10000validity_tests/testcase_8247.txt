import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Dot57851 = tf.keras.layers.Input(shape=([3]))
in1Dot57851 = tf.keras.layers.Input(shape=([3]))
in0Mul5205 = tf.keras.layers.Input(shape=([2, 2, 2, 1]))
in1Mul5205 = tf.keras.layers.Input(shape=([2, 2, 2, 1]))

Dot57851 = keras.layers.Dot(axes=(1, 1), name = 'Dot57851', )([in0Dot57851,in1Dot57851])
Res64249 = keras.layers.Reshape((1, 1), name = 'Res64249', )(Dot57851)
Res52042 = keras.layers.Reshape((1, 1, 1), name = 'Res52042', )(Res64249)
Res22445 = keras.layers.Reshape((1, 1, 1, 1), name = 'Res22445', )(Res52042)
Zer94274 = keras.layers.ZeroPadding3D(padding=((1, 0), (1, 0), (1, 0)), name = 'Zer94274', )(Res22445)
Mul5205 = keras.layers.Multiply(name = 'Mul5205', )([in0Mul5205,in1Mul5205])
Min77711 = keras.layers.Minimum(name = 'Min77711', )([Zer94274,Mul5205])
Res61775 = keras.layers.Reshape((2, 2, 2), name = 'Res61775', )(Min77711)
Res5043 = keras.layers.Reshape((2, 4), name = 'Res5043', )(Res61775)
Zer42320 = keras.layers.ZeroPadding1D(padding=((1, 0)), name = 'Zer42320', )(Res5043)
Res26835 = keras.layers.Reshape((3, 4, 1), name = 'Res26835', )(Zer42320)
Res23361 = keras.layers.Reshape((3, 4, 1, 1), name = 'Res23361', )(Res26835)
Cro60778 = keras.layers.Cropping3D(cropping=((2, 0), (0, 2), (0, 0)), name = 'Cro60778', )(Res23361)
model = tf.keras.models.Model(inputs=[in0Dot57851,in1Dot57851,in0Mul5205,in1Mul5205], outputs=Cro60778)
in0Dot57851 = tf.constant([[0.351, 0.9389, 0.5633]])
in1Dot57851 = tf.constant([[0.0511, 0.2126, 0.6848]])
in0Mul5205 = tf.constant([[[[[0.3013], [0.0296]], [[0.3484], [0.4446]]], [[[0.7975], [0.8493]], [[0.5273], [0.767]]]]])
in1Mul5205 = tf.constant([[[[[0.6433], [0.1793]], [[0.0913], [0.2671]]], [[[0.7657], [0.0695]], [[0.1699], [0.6946]]]]])
print (np.array2string(model.predict([in0Dot57851,in1Dot57851,in0Mul5205,in1Mul5205],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Cro60778.png')

LDot57851 = dot_layer([[0.351, 0.9389, 0.5633]], [[0.0511, 0.2126, 0.6848]], 1, 1, Dot57851), 
LRes64249 = reshape_layer(Dot57851, [1, 1], Res64249), 
LRes52042 = reshape_layer(Res64249, [1, 1, 1], Res52042), 
LRes22445 = reshape_layer(Res52042, [1, 1, 1, 1], Res22445), 
LZer94274 = zero_padding3D_layer(Res22445, 1, 0, 1, 0, 1, 0, Zer94274), 
LMul5205 = multiply_layer([[[[[[0.3013], [0.0296]], [[0.3484], [0.4446]]], [[[0.7975], [0.8493]], [[0.5273], [0.767]]]]], [[[[[0.6433], [0.1793]], [[0.0913], [0.2671]]], [[[0.7657], [0.0695]], [[0.1699], [0.6946]]]]]], Mul5205), 
LMin77711 = minimum_layer([Zer94274,Mul5205], Min77711), 
LRes61775 = reshape_layer(Min77711, [2, 2, 2], Res61775), 
LRes5043 = reshape_layer(Res61775, [2, 4], Res5043), 
LZer42320 = zero_padding1D_layer(Res5043, 1, 0, Zer42320), 
LRes26835 = reshape_layer(Zer42320, [3, 4, 1], Res26835), 
LRes23361 = reshape_layer(Res26835, [3, 4, 1, 1], Res23361), 
LCro60778 = cropping3D_layer(Res23361, 2, 0, 0, 2, 0, 0, Cro60778), 
exec_layers([LDot57851,LRes64249,LRes52042,LRes22445,LZer94274,LMul5205,LMin77711,LRes61775,LRes5043,LZer42320,LRes26835,LRes23361,LCro60778],["Dot57851","Res64249","Res52042","Res22445","Zer94274","Mul5205","Min77711","Res61775","Res5043","Zer42320","Res26835","Res23361","Cro60778"],Cro60778,"Cro60778")

Actual (Unparsed): [[[[[0.0000000]], [[0.0000000]]]]]

Expected (Unparsed): [[[[[0]],[[0]]]]]

Actual:   [[[[[0]], [[0]]]]]

Expected: [[[[[0]], [[0]]]]]