import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Max77998 = tf.keras.layers.Input(shape=([2, 2, 2, 1]))
in1Max77998 = tf.keras.layers.Input(shape=([2, 2, 2, 1]))
in0Con16741 = tf.keras.layers.Input(shape=([2, 2, 2, 1]))
in0Thr41621 = tf.keras.layers.Input(shape=([2, 1, 2, 2]))
in0Min34203 = tf.keras.layers.Input(shape=([1, 1, 2]))
in1Min34203 = tf.keras.layers.Input(shape=([1, 1, 2]))
in0Con10063 = tf.keras.layers.Input(shape=([2, 2, 2]))

Max77998 = keras.layers.Maximum(name = 'Max77998', )([in0Max77998,in1Max77998])
Con16741 = keras.layers.Concatenate(axis=4, name = 'Con16741', )([Max77998,in0Con16741])
Thr41621 = keras.layers.ThresholdedReLU(theta=2.1242125095746753, name = 'Thr41621', input_shape=(2, 1, 2, 2))(in0Thr41621)
Zer45423 = keras.layers.ZeroPadding3D(padding=((0, 0), (1, 0), (0, 0)), name = 'Zer45423', )(Thr41621)
Min59204 = keras.layers.Minimum(name = 'Min59204', )([Con16741,Zer45423])
Res70568 = keras.layers.Reshape((2, 2, 4), name = 'Res70568', )(Min59204)
Min34203 = keras.layers.Minimum(name = 'Min34203', )([in0Min34203,in1Min34203])
Zer76590 = keras.layers.ZeroPadding2D(padding=((1, 0), (1, 0)), name = 'Zer76590', )(Min34203)
Con10063 = keras.layers.Concatenate(axis=3, name = 'Con10063', )([Zer76590,in0Con10063])
Add44177 = keras.layers.Add(name = 'Add44177', )([Res70568,Con10063])
model = tf.keras.models.Model(inputs=[in0Max77998,in1Max77998,in0Con16741,in0Thr41621,in0Min34203,in1Min34203,in0Con10063], outputs=Add44177)
in0Max77998 = tf.constant([[[[[0.0856], [0.2033]], [[0.0098], [0.562]]], [[[0.2053], [0.6516]], [[0.057], [0.3943]]]]])
in1Max77998 = tf.constant([[[[[0.207], [0.3322]], [[0.4607], [0.2287]]], [[[0.4686], [0.1368]], [[0.739], [0.6027]]]]])
in0Con16741 = tf.constant([[[[[0.8721], [0.7329]], [[0.9317], [0.6379]]], [[[0.6235], [0.2323]], [[0.4481], [0.858]]]]])
in0Thr41621 = tf.constant([[[[[0.5512, 0.9478], [0.5553, 0.1276]]], [[[0.6258, 0.462], [0.0374, 0.9548]]]]])
in0Min34203 = tf.constant([[[[0.4002, 0.9643]]]])
in1Min34203 = tf.constant([[[[0.4563, 0.5644]]]])
in0Con10063 = tf.constant([[[[0.038, 0.4086], [0.5175, 0.7072]], [[0.494, 0.4453], [0.9124, 0.2995]]]])
print (np.array2string(model.predict([in0Max77998,in1Max77998,in0Con16741,in0Thr41621,in0Min34203,in1Min34203,in0Con10063],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Add44177.png')

LMax77998 = maximum_layer([[[[[[0.0856], [0.2033]], [[0.0098], [0.562]]], [[[0.2053], [0.6516]], [[0.057], [0.3943]]]]], [[[[[0.207], [0.3322]], [[0.4607], [0.2287]]], [[[0.4686], [0.1368]], [[0.739], [0.6027]]]]]], Max77998), 
LCon16741 = concatenate_layer([Max77998,[[[[[0.8721], [0.7329]], [[0.9317], [0.6379]]], [[[0.6235], [0.2323]], [[0.4481], [0.858]]]]]], 4, Con16741), 
LThr41621 = thresholded_relu_layer([[[[[0.5512, 0.9478], [0.5553, 0.1276]]], [[[0.6258, 0.462], [0.0374, 0.9548]]]]], 2.1242125095746753, Thr41621), 
LZer45423 = zero_padding3D_layer(Thr41621, 0, 0, 1, 0, 0, 0, Zer45423), 
LMin59204 = minimum_layer([Con16741,Zer45423], Min59204), 
LRes70568 = reshape_layer(Min59204, [2, 2, 4], Res70568), 
LMin34203 = minimum_layer([[[[[0.4002, 0.9643]]]], [[[[0.4563, 0.5644]]]]], Min34203), 
LZer76590 = zero_padding2D_layer(Min34203, 1, 0, 1, 0, Zer76590), 
LCon10063 = concatenate_layer([Zer76590,[[[[0.038, 0.4086], [0.5175, 0.7072]], [[0.494, 0.4453], [0.9124, 0.2995]]]]], 3, Con10063), 
LAdd44177 = add_layer([Res70568,Con10063], Add44177), 
exec_layers([LMax77998,LCon16741,LThr41621,LZer45423,LMin59204,LRes70568,LMin34203,LZer76590,LCon10063,LAdd44177],["Max77998","Con16741","Thr41621","Zer45423","Min59204","Res70568","Min34203","Zer76590","Con10063","Add44177"],Add44177,"Add44177")

Actual (Unparsed): [[[[0.0000000, 0.0000000, 0.0380000, 0.4086000], [0.0000000, 0.0000000, 0.5175000, 0.7072000]], [[0.0000000, 0.0000000, 0.4940000, 0.4453000], [0.4002000, 0.5644000, 0.9124000, 0.2995000]]]]

Expected (Unparsed): [[[[0,0,0.038,0.4086],[0,0,0.5175,0.7072]],[[0,0,0.494,0.4453],[0.4002,0.5644,0.9124,0.2995]]]]

Actual:   [[[[0, 0, 0.038, 0.4086], [0, 0, 0.5175, 0.7072]], [[0, 0, 0.494, 0.4453], [0.4002, 0.5644, 0.9124, 0.2995]]]]

Expected: [[[[0, 0, 0.038, 0.4086], [0, 0, 0.5175, 0.7072]], [[0, 0, 0.494, 0.4453], [0.4002, 0.5644, 0.9124, 0.2995]]]]