import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Sub16278 = tf.keras.layers.Input(shape=([2, 3, 2, 2]))
in1Sub16278 = tf.keras.layers.Input(shape=([2, 3, 2, 2]))
in0Dot27145 = tf.keras.layers.Input(shape=([2, 2]))
in1Dot27145 = tf.keras.layers.Input(shape=([2, 2]))
in0Mas32855 = tf.keras.layers.Input(shape=([1]))
in0Con28852 = tf.keras.layers.Input(shape=([23]))

Sub16278 = keras.layers.Subtract(name = 'Sub16278', )([in0Sub16278,in1Sub16278])
Res94174 = keras.layers.Reshape((2, 3, 4), name = 'Res94174', )(Sub16278)
Res98742 = keras.layers.Reshape((2, 12), name = 'Res98742', )(Res94174)
Fla42414 = keras.layers.Flatten(name = 'Fla42414', )(Res98742)
Dot27145 = keras.layers.Dot(axes=(1, 1), name = 'Dot27145', )([in0Dot27145,in1Dot27145])
LST39127 = keras.layers.LSTM(1,recurrent_activation='sigmoid', name = 'LST39127', )(Dot27145)
Mas32855 = keras.layers.Masking(mask_value=2, name = 'Mas32855', )(in0Mas32855)
Min44446 = keras.layers.Minimum(name = 'Min44446', )([LST39127,Mas32855])
Con28852 = keras.layers.Concatenate(axis=1, name = 'Con28852', )([Min44446,in0Con28852])
Max93930 = keras.layers.Maximum(name = 'Max93930', )([Fla42414,Con28852])
model = tf.keras.models.Model(inputs=[in0Sub16278,in1Sub16278,in0Dot27145,in1Dot27145,in0Mas32855,in0Con28852], outputs=Max93930)
w = model.get_layer('LST39127').get_weights() 
w[0] = np.array([[6, 10, 7, 6], [9, 4, 9, 10]])
w[1] = np.array([[7, 2, 6, 4]])
w[2] = np.array([6, 1, 3, 1])
model.get_layer('LST39127').set_weights(w) 
in0Sub16278 = tf.constant([[[[[0.8724, 0.7627], [0.2982, 0.2402]], [[0.2251, 0.7671], [0.2335, 0.3692]], [[0.387, 0.043], [0.7079, 0.7342]]], [[[0.4001, 0.0788], [0.8301, 0.9889]], [[0.5687, 0.1943], [0.2583, 0.4103]], [[0.3248, 0.3551], [0.2037, 0.9171]]]]])
in1Sub16278 = tf.constant([[[[[0.581, 0.2484], [0.4141, 0.86]], [[0.1429, 0.2119], [0.4321, 0.1491]], [[0.1082, 0.5323], [0.2269, 0.7898]]], [[[0.6925, 0.9648], [0.7699, 0.3082]], [[0.5905, 0.0628], [0.2415, 0.8654]], [[0.8076, 0.0535], [0.3386, 0.0846]]]]])
in0Dot27145 = tf.constant([[[0.8775, 0.5454], [0.5844, 0.7418]]])
in1Dot27145 = tf.constant([[[0.5178, 0.3145], [0.6341, 0.511]]])
in0Mas32855 = tf.constant([[1.0729]])
in0Con28852 = tf.constant([[0.0725, 0.0414, 0.1941, 0.8423, 0.9142, 0.9632, 0.882, 0.8729, 0.5369, 0.2643, 0.6515, 0.6974, 0.7144, 0.0237, 0.2367, 0.8099, 0.6751, 0.1831, 0.777, 0.7991, 0.3168, 0.009, 0.4732]])
print (np.array2string(model.predict([in0Sub16278,in1Sub16278,in0Dot27145,in1Dot27145,in0Mas32855,in0Con28852],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Max93930.png')

LSub16278 = subtract_layer([[[[[0.8724, 0.7627], [0.2982, 0.2402]], [[0.2251, 0.7671], [0.2335, 0.3692]], [[0.387, 0.043], [0.7079, 0.7342]]], [[[0.4001, 0.0788], [0.8301, 0.9889]], [[0.5687, 0.1943], [0.2583, 0.4103]], [[0.3248, 0.3551], [0.2037, 0.9171]]]]], [[[[[0.581, 0.2484], [0.4141, 0.86]], [[0.1429, 0.2119], [0.4321, 0.1491]], [[0.1082, 0.5323], [0.2269, 0.7898]]], [[[0.6925, 0.9648], [0.7699, 0.3082]], [[0.5905, 0.0628], [0.2415, 0.8654]], [[0.8076, 0.0535], [0.3386, 0.0846]]]]], Sub16278), 
LRes94174 = reshape_layer(Sub16278, [2, 3, 4], Res94174), 
LRes98742 = reshape_layer(Res94174, [2, 12], Res98742), 
LFla42414 = flatten_layer(Res98742, Fla42414), 
LDot27145 = dot_layer([[[0.8775, 0.5454], [0.5844, 0.7418]]], [[[0.5178, 0.3145], [0.6341, 0.511]]], 1, 1, Dot27145), 
LLST39127 = lstm_layer(Dot27145,[[6, 10, 7, 6], [9, 4, 9, 10]],[[7, 2, 6, 4]],[6, 1, 3, 1], LST39127), 
LMas32855 = masking_layer([[1.0729]], 2, Mas32855), 
LMin44446 = minimum_layer([LST39127,Mas32855], Min44446), 
LCon28852 = concatenate_layer([Min44446,[[0.0725, 0.0414, 0.1941, 0.8423, 0.9142, 0.9632, 0.882, 0.8729, 0.5369, 0.2643, 0.6515, 0.6974, 0.7144, 0.0237, 0.2367, 0.8099, 0.6751, 0.1831, 0.777, 0.7991, 0.3168, 0.009, 0.4732]]], 1, Con28852), 
LMax93930 = maximum_layer([Fla42414,Con28852], Max93930), 
exec_layers([LSub16278,LRes94174,LRes98742,LFla42414,LDot27145,LLST39127,LMas32855,LMin44446,LCon28852,LMax93930],["Sub16278","Res94174","Res98742","Fla42414","Dot27145","LST39127","Mas32855","Min44446","Con28852","Max93930"],Max93930,"Max93930")

Actual (Unparsed): [[0.9640265, 0.5143000, 0.0414000, 0.1941000, 0.8423000, 0.9142000, 0.9632000, 0.8820000, 0.8729000, 0.5369000, 0.4810000, 0.6515000, 0.6974000, 0.7144000, 0.0602000, 0.6807000, 0.8099000, 0.6751000, 0.1831000, 0.7770000, 0.7991000, 0.3168000, 0.0090000, 0.8325000]]

Expected (Unparsed): [[0.9640264878093445,0.5143,0.0414,0.1941,0.8423,0.9142,0.9632,0.882,0.8729,0.5369,0.481,0.6515,0.6974,0.7144,0.06019999999999992,0.6807000000000001,0.8099,0.6751,0.1831,0.777,0.7991,0.3168,0.009,0.8325]]

Actual:   [[0.9641, 0.5143, 0.0414, 0.1941, 0.8423, 0.9142, 0.9632, 0.882, 0.8729, 0.5369, 0.481, 0.6515, 0.6974, 0.7144, 0.0602, 0.6807, 0.8099, 0.6751, 0.1831, 0.777, 0.7991, 0.3168, 0.009, 0.8325]]

Expected: [[0.9641, 0.5143, 0.0414, 0.1941, 0.8423, 0.9142, 0.9632, 0.882, 0.8729, 0.5369, 0.481, 0.6515, 0.6974, 0.7144, 0.0602, 0.6808, 0.8099, 0.6751, 0.1831, 0.777, 0.7991, 0.3168, 0.009, 0.8325]]