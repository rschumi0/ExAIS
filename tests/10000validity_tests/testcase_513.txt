import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Ave73132 = tf.keras.layers.Input(shape=([2, 2]))
in1Ave73132 = tf.keras.layers.Input(shape=([2, 2]))
in0Con46102 = tf.keras.layers.Input(shape=([5, 6, 2]))
in0Zer96783 = tf.keras.layers.Input(shape=([3, 4, 3]))
in0Con65194 = tf.keras.layers.Input(shape=([2, 9, 5, 1]))
in0Ave33294 = tf.keras.layers.Input(shape=([2, 1, 1, 2]))
in1Ave33294 = tf.keras.layers.Input(shape=([2, 1, 1, 2]))
in0Sep90596 = tf.keras.layers.Input(shape=([2, 2]))
in0Con51267 = tf.keras.layers.Input(shape=([2, 87]))

Ave73132 = keras.layers.Average(name = 'Ave73132', )([in0Ave73132,in1Ave73132])
Res15788 = keras.layers.Reshape((2, 2, 1), name = 'Res15788', )(Ave73132)
Zer64522 = keras.layers.ZeroPadding2D(padding=((3, 0), (4, 0)), name = 'Zer64522', )(Res15788)
Con46102 = keras.layers.Concatenate(axis=3, name = 'Con46102', )([Zer64522,in0Con46102])
Zer96783 = keras.layers.ZeroPadding2D(padding=((1, 1), (1, 1)), name = 'Zer96783', )(in0Zer96783)
Ave80781 = keras.layers.Average(name = 'Ave80781', )([Con46102,Zer96783])
Max73411 = keras.layers.MaxPool2D(pool_size=(1, 2), strides=(10, 1), padding='valid', name = 'Max73411', )(Ave80781)
Res36806 = keras.layers.Reshape((1, 5, 3, 1), name = 'Res36806', )(Max73411)
Zer92522 = keras.layers.ZeroPadding3D(padding=((1, 0), (4, 0), (2, 0)), name = 'Zer92522', )(Res36806)
Con65194 = keras.layers.Concatenate(axis=4, name = 'Con65194', )([Zer92522,in0Con65194])
Ave33294 = keras.layers.Average(name = 'Ave33294', )([in0Ave33294,in1Ave33294])
Zer22041 = keras.layers.ZeroPadding3D(padding=((0, 0), (8, 0), (4, 0)), name = 'Zer22041', )(Ave33294)
Min85322 = keras.layers.Minimum(name = 'Min85322', )([Con65194,Zer22041])
Res84695 = keras.layers.Reshape((2, 9, 10), name = 'Res84695', )(Min85322)
Res5556 = keras.layers.Reshape((2, 90), name = 'Res5556', )(Res84695)
Sep90596 = keras.layers.SeparableConv1D(3, (2),strides=(2), padding='valid', name = 'Sep90596', )(in0Sep90596)
Zer21423 = keras.layers.ZeroPadding1D(padding=((1, 0)), name = 'Zer21423', )(Sep90596)
Con51267 = keras.layers.Concatenate(axis=2, name = 'Con51267', )([Zer21423,in0Con51267])
Sub78112 = keras.layers.Subtract(name = 'Sub78112', )([Res5556,Con51267])
model = tf.keras.models.Model(inputs=[in0Ave73132,in1Ave73132,in0Con46102,in0Zer96783,in0Con65194,in0Ave33294,in1Ave33294,in0Sep90596,in0Con51267], outputs=Sub78112)
w = model.get_layer('Sep90596').get_weights() 
w[0] = np.array([[[0.2387], [0.8072]], [[0.933], [0.5258]]])
w[1] = np.array([[[0.4042, 0.2556, 0.7629], [0.7974, 0.1952, 0.5349]]])
w[2] = np.array([0, 0, 0])
model.get_layer('Sep90596').set_weights(w) 
in0Ave73132 = tf.constant([[[0.7324, 0.1117], [0.9372, 0.5156]]])
in1Ave73132 = tf.constant([[[0.1375, 0.2729], [0.0535, 0.1057]]])
in0Con46102 = tf.constant([[[[0.3858, 0.0115], [0.9269, 0.2928], [0.8376, 0.8326], [0.6432, 0.9775], [0.7217, 0.6474], [0.8237, 0.4892]], [[0.6609, 0.1728], [0.3792, 0.489], [0.1256, 0.2724], [0.1026, 0.6564], [0.7693, 0.7229], [0.8805, 0.224]], [[0.1694, 0.9364], [0.8889, 0.1373], [0.4901, 0.1597], [0.1653, 0.5419], [0.2152, 0.7228], [0.4728, 0.8578]], [[0.7686, 0.2369], [0.4279, 0.0512], [0.5314, 0.2507], [0.4512, 0.8359], [0.496, 0.77], [0.2172, 0.4458]], [[0.5534, 0.2129], [0.9291, 0.3077], [0.2029, 0.8312], [0.9271, 0.4132], [0.2914, 0.362], [0.8464, 0.4413]]]])
in0Zer96783 = tf.constant([[[[1.8131, 1.6601, 1.7383], [1.9699, 1.0185, 1.5962], [1.4647, 1.588, 1.6309], [1.6002, 1.8168, 1.0905]], [[1.6601, 1.1906, 1.5368], [1.9883, 1.0453, 1.9172], [1.7298, 1.2553, 1.5153], [1.4078, 1.2765, 1.3604]], [[1.5637, 1.1206, 1.8593], [1.9494, 1.2683, 1.0522], [1.2551, 1.1387, 1.7643], [1.8678, 1.715, 1.8056]]]])
in0Con65194 = tf.constant([[[[[0.7259], [0.8584], [0.6935], [0.7709], [0.9403]], [[0.9062], [0.7568], [0.6234], [0.6271], [0.7702]], [[0.2215], [0.9484], [0.5214], [0.2757], [0.1408]], [[0.7479], [0.0355], [0.418], [0.9222], [0.894]], [[0.1756], [0.5337], [0.8216], [0.9897], [0.5796]], [[0.8712], [0.1012], [0.5839], [0.4698], [0.3624]], [[0.3168], [0.9825], [0.2268], [0.1551], [0.3724]], [[0.5424], [0.9743], [0.2564], [0.4326], [0.5191]], [[0.037], [0.4586], [0.5206], [0.2485], [0.3852]]], [[[0.5712], [0.6449], [0.6871], [0.2095], [0.8678]], [[0.5965], [0.1102], [0.5843], [0.5687], [0.1365]], [[0.0723], [0.7733], [0.131], [0.1552], [0.5709]], [[0.1068], [0.0898], [0.5258], [0.7235], [0.5146]], [[0.2084], [0.7965], [0.167], [0.7424], [0.7317]], [[0.5722], [0.8184], [0.993], [0.6097], [0.4187]], [[0.6002], [0.2401], [0.6604], [0.3929], [0.2226]], [[0.7412], [0.7755], [0.8455], [0.1439], [0.3404]], [[0.4361], [0.9774], [0.3834], [0.9978], [0.0042]]]]])
in0Ave33294 = tf.constant([[[[[0.6742, 0.7912]]], [[[0.3144, 0.8312]]]]])
in1Ave33294 = tf.constant([[[[[0.6886, 0.1202]]], [[[0.1336, 0.9857]]]]])
in0Sep90596 = tf.constant([[[0.7979, 0.4207], [0.0061, 0.0326]]])
in0Con51267 = tf.constant([[[0.4329, 0.6091, 0.7687, 0.3242, 0.9488, 0.3971, 0.1898, 0.6244, 0.2335, 0.9447, 0.2589, 0.1904, 0.7084, 0.3541, 0.8924, 0.1033, 0.9631, 0.9216, 0.9042, 0.6452, 0.9887, 0.4356, 0.8587, 0.3305, 0.0659, 0.4946, 0.8749, 0.5005, 0.1208, 0.3605, 0.374, 0.3707, 0.0118, 0.959, 0.6196, 0.8437, 0.5208, 0.6445, 0.9126, 0.2355, 0.7884, 0.2598, 0.4724, 0.3019, 0.5548, 0.835, 0.3588, 0.5979, 0.846, 0.9951, 0.2741, 0.252, 0.6794, 0.7784, 0.7196, 0.6997, 0.9546, 0.0985, 0.7755, 0.7803, 0.941, 0.5297, 0.7244, 0.8755, 0.6784, 0.4424, 0.8437, 0.4412, 0.165, 0.7698, 0.9553, 0.3709, 0.4249, 0.8485, 0.7406, 0.1151, 0.4171, 0.8437, 0.4033, 0.3785, 0.2772, 0.243, 0.9932, 0.5176, 0.5695, 0.7812, 0.5947], [0.4699, 0.0639, 0.9475, 0.624, 0.16, 0.0531, 0.9159, 0.6817, 0.8479, 0.3764, 0.3412, 0.7633, 0.8124, 0.1276, 0.9639, 0.1426, 0.0948, 0.4884, 0.3841, 0.9114, 0.7686, 0.2531, 0.6756, 0.9859, 0.3433, 0.3864, 0.7393, 0.3697, 0.4669, 0.3931, 0.4249, 0.6018, 0.0453, 0.3666, 0.4819, 0.6122, 0.2635, 0.3327, 0.3489, 0.6576, 0.7639, 0.9066, 0.6344, 0.6154, 0.4122, 0.3424, 0.8997, 0.6795, 0.666, 0.7679, 0.0146, 0.4161, 0.5505, 0.7718, 0.924, 0.2171, 0.6393, 0.5374, 0.1372, 0.4177, 0.2423, 0.4023, 0.6325, 0.7331, 0.2103, 0.0632, 0.154, 0.2133, 0.3779, 0.6437, 0.0718, 0.6151, 0.6902, 0.494, 0.0739, 0.9465, 0.4834, 0.9046, 0.9639, 0.9524, 0.2224, 0.8766, 0.7495, 0.4779, 0.2389, 0.7197, 0.0244]]])
print (np.array2string(model.predict([in0Ave73132,in1Ave73132,in0Con46102,in0Zer96783,in0Con65194,in0Ave33294,in1Ave33294,in0Sep90596,in0Con51267],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Sub78112.png')

LAve73132 = average_layer([[[[0.7324, 0.1117], [0.9372, 0.5156]]], [[[0.1375, 0.2729], [0.0535, 0.1057]]]], Ave73132), 
LRes15788 = reshape_layer(Ave73132, [2, 2, 1], Res15788), 
LZer64522 = zero_padding2D_layer(Res15788, 3, 0, 4, 0, Zer64522), 
LCon46102 = concatenate_layer([Zer64522,[[[[0.3858, 0.0115], [0.9269, 0.2928], [0.8376, 0.8326], [0.6432, 0.9775], [0.7217, 0.6474], [0.8237, 0.4892]], [[0.6609, 0.1728], [0.3792, 0.489], [0.1256, 0.2724], [0.1026, 0.6564], [0.7693, 0.7229], [0.8805, 0.224]], [[0.1694, 0.9364], [0.8889, 0.1373], [0.4901, 0.1597], [0.1653, 0.5419], [0.2152, 0.7228], [0.4728, 0.8578]], [[0.7686, 0.2369], [0.4279, 0.0512], [0.5314, 0.2507], [0.4512, 0.8359], [0.496, 0.77], [0.2172, 0.4458]], [[0.5534, 0.2129], [0.9291, 0.3077], [0.2029, 0.8312], [0.9271, 0.4132], [0.2914, 0.362], [0.8464, 0.4413]]]]], 3, Con46102), 
LZer96783 = zero_padding2D_layer([[[[1.8131, 1.6601, 1.7383], [1.9699, 1.0185, 1.5962], [1.4647, 1.588, 1.6309], [1.6002, 1.8168, 1.0905]], [[1.6601, 1.1906, 1.5368], [1.9883, 1.0453, 1.9172], [1.7298, 1.2553, 1.5153], [1.4078, 1.2765, 1.3604]], [[1.5637, 1.1206, 1.8593], [1.9494, 1.2683, 1.0522], [1.2551, 1.1387, 1.7643], [1.8678, 1.715, 1.8056]]]], 1, 1, 1, 1, Zer96783), 
LAve80781 = average_layer([Con46102,Zer96783], Ave80781), 
LMax73411 = max_pool2D_layer(Ave80781, 1, 2, 10, 1, false, Max73411), 
LRes36806 = reshape_layer(Max73411, [1, 5, 3, 1], Res36806), 
LZer92522 = zero_padding3D_layer(Res36806, 1, 0, 4, 0, 2, 0, Zer92522), 
LCon65194 = concatenate_layer([Zer92522,[[[[[0.7259], [0.8584], [0.6935], [0.7709], [0.9403]], [[0.9062], [0.7568], [0.6234], [0.6271], [0.7702]], [[0.2215], [0.9484], [0.5214], [0.2757], [0.1408]], [[0.7479], [0.0355], [0.418], [0.9222], [0.894]], [[0.1756], [0.5337], [0.8216], [0.9897], [0.5796]], [[0.8712], [0.1012], [0.5839], [0.4698], [0.3624]], [[0.3168], [0.9825], [0.2268], [0.1551], [0.3724]], [[0.5424], [0.9743], [0.2564], [0.4326], [0.5191]], [[0.037], [0.4586], [0.5206], [0.2485], [0.3852]]], [[[0.5712], [0.6449], [0.6871], [0.2095], [0.8678]], [[0.5965], [0.1102], [0.5843], [0.5687], [0.1365]], [[0.0723], [0.7733], [0.131], [0.1552], [0.5709]], [[0.1068], [0.0898], [0.5258], [0.7235], [0.5146]], [[0.2084], [0.7965], [0.167], [0.7424], [0.7317]], [[0.5722], [0.8184], [0.993], [0.6097], [0.4187]], [[0.6002], [0.2401], [0.6604], [0.3929], [0.2226]], [[0.7412], [0.7755], [0.8455], [0.1439], [0.3404]], [[0.4361], [0.9774], [0.3834], [0.9978], [0.0042]]]]]], 4, Con65194), 
LAve33294 = average_layer([[[[[[0.6742, 0.7912]]], [[[0.3144, 0.8312]]]]], [[[[[0.6886, 0.1202]]], [[[0.1336, 0.9857]]]]]], Ave33294), 
LZer22041 = zero_padding3D_layer(Ave33294, 0, 0, 8, 0, 4, 0, Zer22041), 
LMin85322 = minimum_layer([Con65194,Zer22041], Min85322), 
LRes84695 = reshape_layer(Min85322, [2, 9, 10], Res84695), 
LRes5556 = reshape_layer(Res84695, [2, 90], Res5556), 
LSep90596 = separable_conv1D_layer([[[0.7979, 0.4207], [0.0061, 0.0326]]], 2,[[[[0.2387], [0.8072]], [[0.933], [0.5258]]],[[[0.4042, 0.2556, 0.7629], [0.7974, 0.1952, 0.5349]]]],[0, 0, 0], 2, false, Sep90596), 
LZer21423 = zero_padding1D_layer(Sep90596, 1, 0, Zer21423), 
LCon51267 = concatenate_layer([Zer21423,[[[0.4329, 0.6091, 0.7687, 0.3242, 0.9488, 0.3971, 0.1898, 0.6244, 0.2335, 0.9447, 0.2589, 0.1904, 0.7084, 0.3541, 0.8924, 0.1033, 0.9631, 0.9216, 0.9042, 0.6452, 0.9887, 0.4356, 0.8587, 0.3305, 0.0659, 0.4946, 0.8749, 0.5005, 0.1208, 0.3605, 0.374, 0.3707, 0.0118, 0.959, 0.6196, 0.8437, 0.5208, 0.6445, 0.9126, 0.2355, 0.7884, 0.2598, 0.4724, 0.3019, 0.5548, 0.835, 0.3588, 0.5979, 0.846, 0.9951, 0.2741, 0.252, 0.6794, 0.7784, 0.7196, 0.6997, 0.9546, 0.0985, 0.7755, 0.7803, 0.941, 0.5297, 0.7244, 0.8755, 0.6784, 0.4424, 0.8437, 0.4412, 0.165, 0.7698, 0.9553, 0.3709, 0.4249, 0.8485, 0.7406, 0.1151, 0.4171, 0.8437, 0.4033, 0.3785, 0.2772, 0.243, 0.9932, 0.5176, 0.5695, 0.7812, 0.5947], [0.4699, 0.0639, 0.9475, 0.624, 0.16, 0.0531, 0.9159, 0.6817, 0.8479, 0.3764, 0.3412, 0.7633, 0.8124, 0.1276, 0.9639, 0.1426, 0.0948, 0.4884, 0.3841, 0.9114, 0.7686, 0.2531, 0.6756, 0.9859, 0.3433, 0.3864, 0.7393, 0.3697, 0.4669, 0.3931, 0.4249, 0.6018, 0.0453, 0.3666, 0.4819, 0.6122, 0.2635, 0.3327, 0.3489, 0.6576, 0.7639, 0.9066, 0.6344, 0.6154, 0.4122, 0.3424, 0.8997, 0.6795, 0.666, 0.7679, 0.0146, 0.4161, 0.5505, 0.7718, 0.924, 0.2171, 0.6393, 0.5374, 0.1372, 0.4177, 0.2423, 0.4023, 0.6325, 0.7331, 0.2103, 0.0632, 0.154, 0.2133, 0.3779, 0.6437, 0.0718, 0.6151, 0.6902, 0.494, 0.0739, 0.9465, 0.4834, 0.9046, 0.9639, 0.9524, 0.2224, 0.8766, 0.7495, 0.4779, 0.2389, 0.7197, 0.0244]]]], 2, Con51267), 
LSub78112 = subtract_layer(Res5556,Con51267, Sub78112), 
exec_layers([LAve73132,LRes15788,LZer64522,LCon46102,LZer96783,LAve80781,LMax73411,LRes36806,LZer92522,LCon65194,LAve33294,LZer22041,LMin85322,LRes84695,LRes5556,LSep90596,LZer21423,LCon51267,LSub78112],["Ave73132","Res15788","Zer64522","Con46102","Zer96783","Ave80781","Max73411","Res36806","Zer92522","Con65194","Ave33294","Zer22041","Min85322","Res84695","Res5556","Sep90596","Zer21423","Con51267","Sub78112"],Sub78112,"Sub78112")

Actual (Unparsed): [[[0.0000000, 0.0000000, 0.0000000, -0.4329000, -0.6091000, -0.7687000, -0.3242000, -0.9488000, -0.3971000, -0.1898000, -0.6244000, -0.2335000, -0.9447000, -0.2589000, -0.1904000, -0.7084000, -0.3541000, -0.8924000, -0.1033000, -0.9631000, -0.9216000, -0.9042000, -0.6452000, -0.9887000, -0.4356000, -0.8587000, -0.3305000, -0.0659000, -0.4946000, -0.8749000, -0.5005000, -0.1208000, -0.3605000, -0.3740000, -0.3707000, -0.0118000, -0.9590000, -0.6196000, -0.8437000, -0.5208000, -0.6445000, -0.9126000, -0.2355000, -0.7884000, -0.2598000, -0.4724000, -0.3019000, -0.5548000, -0.8350000, -0.3588000, -0.5979000, -0.8460000, -0.9951000, -0.2741000, -0.2520000, -0.6794000, -0.7784000, -0.7196000, -0.6997000, -0.9546000, -0.0985000, -0.7755000, -0.7803000, -0.9410000, -0.5297000, -0.7244000, -0.8755000, -0.6784000, -0.4424000, -0.8437000, -0.4412000, -0.1650000, -0.7698000, -0.9553000, -0.3709000, -0.4249000, -0.8485000, -0.7406000, -0.1151000, -0.4171000, -0.8437000, -0.4033000, -0.3785000, -0.2772000, -0.2430000, -0.9932000, -0.5176000, -0.5695000, -0.7812000, -0.2095000], [-0.3637405, -0.1197697, -0.3404578, -0.4699000, -0.0639000, -0.9475000, -0.6240000, -0.1600000, -0.0531000, -0.9159000, -0.6817000, -0.8479000, -0.3764000, -0.3412000, -0.7633000, -0.8124000, -0.1276000, -0.9639000, -0.1426000, -0.0948000, -0.4884000, -0.3841000, -0.9114000, -0.7686000, -0.2531000, -0.6756000, -0.9859000, -0.3433000, -0.3864000, -0.7393000, -0.3697000, -0.4669000, -0.3931000, -0.4249000, -0.6018000, -0.0453000, -0.3666000, -0.4819000, -0.6122000, -0.2635000, -0.3327000, -0.3489000, -0.6576000, -0.7639000, -0.9066000, -0.6344000, -0.6154000, -0.4122000, -0.3424000, -0.8997000, -0.6795000, -0.6660000, -0.7679000, -0.0146000, -0.4161000, -0.5505000, -0.7718000, -0.9240000, -0.2171000, -0.6393000, -0.5374000, -0.1372000, -0.4177000, -0.2423000, -0.4023000, -0.6325000, -0.7331000, -0.2103000, -0.0632000, -0.1540000, -0.2133000, -0.3779000, -0.6437000, -0.0718000, -0.6151000, -0.6902000, -0.4940000, -0.0739000, -0.9465000, -0.4834000, -0.9046000, -0.9639000, -0.9524000, -0.2224000, -0.8766000, -0.7495000, -0.4779000, -0.2389000, -0.4957000, -0.0202000]]]

Expected (Unparsed): [[[0,0,0,-0.4329,-0.6091,-0.7687,-0.3242,-0.9488,-0.3971,-0.1898,-0.6244,-0.2335,-0.9447,-0.2589,-0.1904,-0.7084,-0.3541,-0.8924,-0.1033,-0.9631,-0.9216,-0.9042,-0.6452,-0.9887,-0.4356,-0.8587,-0.3305,-0.0659,-0.4946,-0.8749,-0.5005,-0.1208,-0.3605,-0.374,-0.3707,-0.0118,-0.959,-0.6196,-0.8437,-0.5208,-0.6445,-0.9126,-0.2355,-0.7884,-0.2598,-0.4724,-0.3019,-0.5548,-0.835,-0.3588,-0.5979,-0.846,-0.9951,-0.2741,-0.252,-0.6794,-0.7784,-0.7196,-0.6997,-0.9546,-0.0985,-0.7755,-0.7803,-0.941,-0.5297,-0.7244,-0.8755,-0.6784,-0.4424,-0.8437,-0.4412,-0.165,-0.7698,-0.9553,-0.3709,-0.4249,-0.8485,-0.7406,-0.1151,-0.4171,-0.8437,-0.4033,-0.3785,-0.2772,-0.243,-0.9932,-0.5176,-0.5695,-0.7812,-0.20950000000000002],[-0.36374043981400006,-0.119769667092,-0.340457799075,-0.4699,-0.0639,-0.9475,-0.624,-0.16,-0.0531,-0.9159,-0.6817,-0.8479,-0.3764,-0.3412,-0.7633,-0.8124,-0.1276,-0.9639,-0.1426,-0.0948,-0.4884,-0.3841,-0.9114,-0.7686,-0.2531,-0.6756,-0.9859,-0.3433,-0.3864,-0.7393,-0.3697,-0.4669,-0.3931,-0.4249,-0.6018,-0.0453,-0.3666,-0.4819,-0.6122,-0.2635,-0.3327,-0.3489,-0.6576,-0.7639,-0.9066,-0.6344,-0.6154,-0.4122,-0.3424,-0.8997,-0.6795,-0.666,-0.7679,-0.0146,-0.4161,-0.5505,-0.7718,-0.924,-0.2171,-0.6393,-0.5374,-0.1372,-0.4177,-0.2423,-0.4023,-0.6325,-0.7331,-0.2103,-0.0632,-0.154,-0.2133,-0.3779,-0.6437,-0.0718,-0.6151,-0.6902,-0.494,-0.0739,-0.9465,-0.4834,-0.9046,-0.9639,-0.9524,-0.2224,-0.8766,-0.7495,-0.4779,-0.2389,-0.49570000000000003,-0.020200000000000003]]]

Actual:   [[[0, 0, 0, -0.4329, -0.6091, -0.7687, -0.3242, -0.9488, -0.3971, -0.1898, -0.6244, -0.2335, -0.9447, -0.2589, -0.1904, -0.7084, -0.3541, -0.8924, -0.1033, -0.9631, -0.9216, -0.9042, -0.6452, -0.9887, -0.4356, -0.8587, -0.3305, -0.0659, -0.4946, -0.8749, -0.5005, -0.1208, -0.3605, -0.374, -0.3707, -0.0118, -0.959, -0.6196, -0.8437, -0.5208, -0.6445, -0.9126, -0.2355, -0.7884, -0.2598, -0.4724, -0.3019, -0.5548, -0.835, -0.3588, -0.5979, -0.846, -0.9951, -0.2741, -0.252, -0.6794, -0.7784, -0.7196, -0.6997, -0.9546, -0.0985, -0.7755, -0.7803, -0.941, -0.5297, -0.7244, -0.8755, -0.6784, -0.4424, -0.8437, -0.4412, -0.165, -0.7698, -0.9553, -0.3709, -0.4249, -0.8485, -0.7406, -0.1151, -0.4171, -0.8437, -0.4033, -0.3785, -0.2772, -0.243, -0.9932, -0.5176, -0.5695, -0.7812, -0.2095], [-0.3637, -0.1197, -0.3404, -0.4699, -0.0639, -0.9475, -0.624, -0.16, -0.0531, -0.9159, -0.6817, -0.8479, -0.3764, -0.3412, -0.7633, -0.8124, -0.1276, -0.9639, -0.1426, -0.0948, -0.4884, -0.3841, -0.9114, -0.7686, -0.2531, -0.6756, -0.9859, -0.3433, -0.3864, -0.7393, -0.3697, -0.4669, -0.3931, -0.4249, -0.6018, -0.0453, -0.3666, -0.4819, -0.6122, -0.2635, -0.3327, -0.3489, -0.6576, -0.7639, -0.9066, -0.6344, -0.6154, -0.4122, -0.3424, -0.8997, -0.6795, -0.666, -0.7679, -0.0146, -0.4161, -0.5505, -0.7718, -0.924, -0.2171, -0.6393, -0.5374, -0.1372, -0.4177, -0.2423, -0.4023, -0.6325, -0.7331, -0.2103, -0.0632, -0.154, -0.2133, -0.3779, -0.6437, -0.0718, -0.6151, -0.6902, -0.494, -0.0739, -0.9465, -0.4834, -0.9046, -0.9639, -0.9524, -0.2224, -0.8766, -0.7495, -0.4779, -0.2389, -0.4957, -0.0202]]]

Expected: [[[0, 0, 0, -0.4329, -0.6091, -0.7687, -0.3242, -0.9488, -0.3971, -0.1898, -0.6244, -0.2335, -0.9447, -0.2589, -0.1904, -0.7084, -0.3541, -0.8924, -0.1033, -0.9631, -0.9216, -0.9042, -0.6452, -0.9887, -0.4356, -0.8587, -0.3305, -0.0659, -0.4946, -0.8749, -0.5005, -0.1208, -0.3605, -0.374, -0.3707, -0.0118, -0.959, -0.6196, -0.8437, -0.5208, -0.6445, -0.9126, -0.2355, -0.7884, -0.2598, -0.4724, -0.3019, -0.5548, -0.835, -0.3588, -0.5979, -0.846, -0.9951, -0.2741, -0.252, -0.6794, -0.7784, -0.7196, -0.6997, -0.9546, -0.0985, -0.7755, -0.7803, -0.941, -0.5297, -0.7244, -0.8755, -0.6784, -0.4424, -0.8437, -0.4412, -0.165, -0.7698, -0.9553, -0.3709, -0.4249, -0.8485, -0.7406, -0.1151, -0.4171, -0.8437, -0.4033, -0.3785, -0.2772, -0.243, -0.9932, -0.5176, -0.5695, -0.7812, -0.2095], [-0.3637, -0.1197, -0.3404, -0.4699, -0.0639, -0.9475, -0.624, -0.16, -0.0531, -0.9159, -0.6817, -0.8479, -0.3764, -0.3412, -0.7633, -0.8124, -0.1276, -0.9639, -0.1426, -0.0948, -0.4884, -0.3841, -0.9114, -0.7686, -0.2531, -0.6756, -0.9859, -0.3433, -0.3864, -0.7393, -0.3697, -0.4669, -0.3931, -0.4249, -0.6018, -0.0453, -0.3666, -0.4819, -0.6122, -0.2635, -0.3327, -0.3489, -0.6576, -0.7639, -0.9066, -0.6344, -0.6154, -0.4122, -0.3424, -0.8997, -0.6795, -0.666, -0.7679, -0.0146, -0.4161, -0.5505, -0.7718, -0.924, -0.2171, -0.6393, -0.5374, -0.1372, -0.4177, -0.2423, -0.4023, -0.6325, -0.7331, -0.2103, -0.0632, -0.154, -0.2133, -0.3779, -0.6437, -0.0718, -0.6151, -0.6902, -0.494, -0.0739, -0.9465, -0.4834, -0.9046, -0.9639, -0.9524, -0.2224, -0.8766, -0.7495, -0.4779, -0.2389, -0.4957, -0.0202]]]