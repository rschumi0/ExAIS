import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Cro83128 = tf.keras.layers.Input(shape=([1, 2]))
in0Sub68518 = tf.keras.layers.Input(shape=([3, 2]))
in1Sub68518 = tf.keras.layers.Input(shape=([3, 2]))
in0Zer32603 = tf.keras.layers.Input(shape=([1, 4, 4]))
in0Add69552 = tf.keras.layers.Input(shape=([1, 1, 2, 1]))
in1Add69552 = tf.keras.layers.Input(shape=([1, 1, 2, 1]))

Cro83128 = keras.layers.Cropping1D(cropping=((0, 0)), name = 'Cro83128', )(in0Cro83128)
Lea29476 = keras.layers.LeakyReLU(alpha=5.357053769430205, name = 'Lea29476', )(Cro83128)
Zer8710 = keras.layers.ZeroPadding1D(padding=((1, 0)), name = 'Zer8710', )(Lea29476)
Sub68518 = keras.layers.Subtract(name = 'Sub68518', )([in0Sub68518,in1Sub68518])
Dot68461 = keras.layers.Dot(axes=(2, 2), name = 'Dot68461', )([Zer8710,Sub68518])
Res81192 = keras.layers.Reshape((2, 3, 1), name = 'Res81192', )(Dot68461)
Res2953 = keras.layers.Reshape((2, 3, 1, 1), name = 'Res2953', )(Res81192)
Zer18093 = keras.layers.ZeroPadding3D(padding=((1, 0), (3, 0), (3, 0)), name = 'Zer18093', )(Res2953)
Zer32603 = keras.layers.ZeroPadding2D(padding=((1, 1), (1, 1)), name = 'Zer32603', )(in0Zer32603)
Res38272 = keras.layers.Reshape((3, 6, 4, 1), name = 'Res38272', )(Zer32603)
Add69552 = keras.layers.Add(name = 'Add69552', )([in0Add69552,in1Add69552])
Zer59756 = keras.layers.ZeroPadding3D(padding=((2, 0), (5, 0), (2, 0)), name = 'Zer59756', )(Add69552)
Sub8548 = keras.layers.Subtract(name = 'Sub8548', )([Res38272,Zer59756])
Mul44389 = keras.layers.Multiply(name = 'Mul44389', )([Zer18093,Sub8548])
model = tf.keras.models.Model(inputs=[in0Cro83128,in0Sub68518,in1Sub68518,in0Zer32603,in0Add69552,in1Add69552], outputs=Mul44389)
in0Cro83128 = tf.constant([[[1.5846, 1.6004]]])
in0Sub68518 = tf.constant([[[0.1417, 0.1112], [0.7759, 0.6184], [0.1693, 0.4771]]])
in1Sub68518 = tf.constant([[[0.0292, 0.563], [0.9672, 0.6187], [0.3048, 0.2273]]])
in0Zer32603 = tf.constant([[[[1.7765, 1.6185, 1.329, 1.7617], [1.9216, 1.9522, 1.4094, 1.1311], [1.8696, 1.5516, 1.6408, 1.6689], [1.5463, 1.6232, 1.3259, 1.7473]]]])
in0Add69552 = tf.constant([[[[[0.8932], [0.7736]]]]])
in1Add69552 = tf.constant([[[[[0.2699], [0.9636]]]]])
print (np.array2string(model.predict([in0Cro83128,in0Sub68518,in1Sub68518,in0Zer32603,in0Add69552,in1Add69552],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Mul44389.png')

LCro83128 = cropping1D_layer([[[1.5846, 1.6004]]], 0, 0, Cro83128), 
LLea29476 = leaky_relu_layer(Cro83128, 5.357053769430205, Lea29476), 
LZer8710 = zero_padding1D_layer(Lea29476, 1, 0, Zer8710), 
LSub68518 = subtract_layer([[[0.1417, 0.1112], [0.7759, 0.6184], [0.1693, 0.4771]]], [[[0.0292, 0.563], [0.9672, 0.6187], [0.3048, 0.2273]]], Sub68518), 
LDot68461 = dot_layer(Zer8710,Sub68518, 2, 2, Dot68461), 
LRes81192 = reshape_layer(Dot68461, [2, 3, 1], Res81192), 
LRes2953 = reshape_layer(Res81192, [2, 3, 1, 1], Res2953), 
LZer18093 = zero_padding3D_layer(Res2953, 1, 0, 3, 0, 3, 0, Zer18093), 
LZer32603 = zero_padding2D_layer([[[[1.7765, 1.6185, 1.329, 1.7617], [1.9216, 1.9522, 1.4094, 1.1311], [1.8696, 1.5516, 1.6408, 1.6689], [1.5463, 1.6232, 1.3259, 1.7473]]]], 1, 1, 1, 1, Zer32603), 
LRes38272 = reshape_layer(Zer32603, [3, 6, 4, 1], Res38272), 
LAdd69552 = add_layer([[[[[[0.8932], [0.7736]]]]], [[[[[0.2699], [0.9636]]]]]], Add69552), 
LZer59756 = zero_padding3D_layer(Add69552, 2, 0, 5, 0, 2, 0, Zer59756), 
LSub8548 = subtract_layer(Res38272,Zer59756, Sub8548), 
LMul44389 = multiply_layer([Zer18093,Sub8548], Mul44389), 
exec_layers([LCro83128,LLea29476,LZer8710,LSub68518,LDot68461,LRes81192,LRes2953,LZer18093,LZer32603,LRes38272,LAdd69552,LZer59756,LSub8548,LMul44389],["Cro83128","Lea29476","Zer8710","Sub68518","Dot68461","Res81192","Res2953","Zer18093","Zer32603","Res38272","Add69552","Zer59756","Sub8548","Mul44389"],Mul44389,"Mul44389")

Actual (Unparsed): [[[[[0.0000000], [0.0000000], [0.0000000], [0.0000000]], [[0.0000000], [0.0000000], [0.0000000], [0.0000000]], [[0.0000000], [0.0000000], [0.0000000], [0.0000000]], [[0.0000000], [0.0000000], [0.0000000], [0.0000000]], [[0.0000000], [0.0000000], [0.0000000], [0.0000000]], [[0.0000000], [0.0000000], [0.0000000], [0.0000000]]], [[[0.0000000], [0.0000000], [0.0000000], [0.0000000]], [[0.0000000], [0.0000000], [0.0000000], [0.0000000]], [[0.0000000], [0.0000000], [0.0000000], [0.0000000]], [[0.0000000], [0.0000000], [0.0000000], [0.0000000]], [[0.0000000], [0.0000000], [0.0000000], [0.0000000]], [[0.0000000], [0.0000000], [0.0000000], [0.0000000]]], [[[0.0000000], [0.0000000], [0.0000000], [0.0000000]], [[0.0000000], [0.0000000], [0.0000000], [0.0000000]], [[0.0000000], [0.0000000], [0.0000000], [0.0000000]], [[0.0000000], [0.0000000], [0.0000000], [-0.0000000]], [[0.0000000], [0.0000000], [0.0000000], [-0.0000000]], [[0.0000000], [0.0000000], [-0.0000000], [-0.3214978]]]]]

Expected (Unparsed): [[[[[0],[0],[0],[0]],[[0],[0],[0],[0]],[[0],[0],[0],[0]],[[0],[0],[0],[0]],[[0],[0],[0],[0]],[[0],[0],[0],[0]]],[[[0],[0],[0],[0]],[[0.0],[0.0],[0.0],[0.0]],[[0.0],[0.0],[0.0],[0.0]],[[0.0],[0.0],[0.0],[0.0]],[[0.0],[0.0],[0.0],[0.0]],[[0],[0],[0],[0.0]]],[[[0],[0],[0],[0]],[[0],[0],[0],[0]],[[0],[0],[0],[0]],[[0],[0],[0],[-0.0]],[[0],[0],[0],[-0.0]],[[0],[0],[-0.0],[-0.3214977322640001]]]]]

Actual:   [[[[[0], [0], [0], [0]], [[0], [0], [0], [0]], [[0], [0], [0], [0]], [[0], [0], [0], [0]], [[0], [0], [0], [0]], [[0], [0], [0], [0]]], [[[0], [0], [0], [0]], [[0], [0], [0], [0]], [[0], [0], [0], [0]], [[0], [0], [0], [0]], [[0], [0], [0], [0]], [[0], [0], [0], [0]]], [[[0], [0], [0], [0]], [[0], [0], [0], [0]], [[0], [0], [0], [0]], [[0], [0], [0], [-0]], [[0], [0], [0], [-0]], [[0], [0], [-0], [-0.3214]]]]]

Expected: [[[[[0], [0], [0], [0]], [[0], [0], [0], [0]], [[0], [0], [0], [0]], [[0], [0], [0], [0]], [[0], [0], [0], [0]], [[0], [0], [0], [0]]], [[[0], [0], [0], [0]], [[0], [0], [0], [0]], [[0], [0], [0], [0]], [[0], [0], [0], [0]], [[0], [0], [0], [0]], [[0], [0], [0], [0]]], [[[0], [0], [0], [0]], [[0], [0], [0], [0]], [[0], [0], [0], [0]], [[0], [0], [0], [-0]], [[0], [0], [0], [-0]], [[0], [0], [-0], [-0.3214]]]]]