import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Ave67210 = tf.keras.layers.Input(shape=([1, 1, 1, 1]))
in1Ave67210 = tf.keras.layers.Input(shape=([1, 1, 1, 1]))

Ave67210 = keras.layers.Average(name = 'Ave67210', )([in0Ave67210,in1Ave67210])
Res2358 = keras.layers.Reshape((1, 1, 1), name = 'Res2358', )(Ave67210)
Res67345 = keras.layers.Reshape((1, 1), name = 'Res67345', )(Res2358)
GRU87346 = keras.layers.GRU(2,reset_after=True, recurrent_activation='sigmoid', name = 'GRU87346', )(Res67345)
model = tf.keras.models.Model(inputs=[in0Ave67210,in1Ave67210], outputs=GRU87346)
w = model.get_layer('GRU87346').get_weights() 
w[0] = np.array([[8, 6, 3, 7, 3, 8]])
w[1] = np.array([[1, 8, 4, 5, 2, 6], [6, 2, 7, 6, 5, 2]])
w[2] = np.array([[8, 6, 3, 6, 6, 4], [3, 7, 9, 2, 9, 2]])
model.get_layer('GRU87346').set_weights(w) 
in0Ave67210 = tf.constant([[[[[0.3963]]]]])
in1Ave67210 = tf.constant([[[[[0.2081]]]]])
print (np.array2string(model.predict([in0Ave67210,in1Ave67210],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='GRU87346.png')

LAve67210 = average_layer([[[[[[0.3963]]]]], [[[[[0.2081]]]]]], Ave67210), 
LRes2358 = reshape_layer(Ave67210, [1, 1, 1], Res2358), 
LRes67345 = reshape_layer(Res2358, [1, 1], Res67345), 
LGRU87346 = gru_layer(Res67345,[[8, 6, 3, 7, 3, 8]],[[1, 8, 4, 5, 2, 6], [6, 2, 7, 6, 5, 2]],[[8, 6, 3, 6, 6, 4], [3, 7, 9, 2, 9, 2]], true, GRU87346), 
exec_layers([LAve67210,LRes2358,LRes67345,LGRU87346],["Ave67210","Res2358","Res67345","GRU87346"],GRU87346,"GRU87346")

Actual (Unparsed): [[0.0000015, 0.0000004]]

Expected (Unparsed): [[1.4887086543513106e-6,3.6873025863076265e-7]]

Actual:   [[0, 0]]

Expected: [[0, 0]]