import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Sub96584 = tf.keras.layers.Input(shape=([2, 2, 3]))
in1Sub96584 = tf.keras.layers.Input(shape=([2, 2, 3]))
in0Thr43526 = tf.keras.layers.Input(shape=([2, 1, 2]))
in0Con48953 = tf.keras.layers.Input(shape=([2, 2, 1]))
in0Min50747 = tf.keras.layers.Input(shape=([1, 2]))
in1Min50747 = tf.keras.layers.Input(shape=([1, 2]))
in0Con56345 = tf.keras.layers.Input(shape=([2, 2]))
in0Mul32760 = tf.keras.layers.Input(shape=([2, 2]))
in1Mul32760 = tf.keras.layers.Input(shape=([2, 2]))

Sub96584 = keras.layers.Subtract(name = 'Sub96584', )([in0Sub96584,in1Sub96584])
Thr43526 = keras.layers.ThresholdedReLU(theta=0.12216622583137092, name = 'Thr43526', input_shape=(2, 1, 2))(in0Thr43526)
Zer48772 = keras.layers.ZeroPadding2D(padding=((0, 0), (1, 0)), name = 'Zer48772', )(Thr43526)
Con48953 = keras.layers.Concatenate(axis=3, name = 'Con48953', )([Zer48772,in0Con48953])
Mul78711 = keras.layers.Multiply(name = 'Mul78711', )([Sub96584,Con48953])
Sof73009 = keras.layers.Softmax(axis=1, name = 'Sof73009', )(Mul78711)
Res56960 = keras.layers.Reshape((2, 2, 3, 1), name = 'Res56960', )(Sof73009)
Zer29447 = keras.layers.ZeroPadding3D(padding=((0, 0), (2, 0), (2, 0)), name = 'Zer29447', )(Res56960)
Min50747 = keras.layers.Minimum(name = 'Min50747', )([in0Min50747,in1Min50747])
ReL76732 = keras.layers.ReLU(max_value=0.49063366039678163, negative_slope=6.36456509327606, threshold=1.7508264624651004, name = 'ReL76732', )(Min50747)
Zer84882 = keras.layers.ZeroPadding1D(padding=((1, 0)), name = 'Zer84882', )(ReL76732)
Con56345 = keras.layers.Concatenate(axis=2, name = 'Con56345', )([Zer84882,in0Con56345])
Mul32760 = keras.layers.Multiply(name = 'Mul32760', )([in0Mul32760,in1Mul32760])
Con63137 = keras.layers.Conv1D(4, (1),strides=(1), padding='valid', dilation_rate=(1), name = 'Con63137', )(Mul32760)
Max6369 = keras.layers.Maximum(name = 'Max6369', )([Con56345,Con63137])
Res23145 = keras.layers.Reshape((2, 4, 1), name = 'Res23145', )(Max6369)
Res31116 = keras.layers.Reshape((2, 4, 1, 1), name = 'Res31116', )(Res23145)
Up_18834 = keras.layers.UpSampling3D(size=(1, 1, 1), name = 'Up_18834', )(Res31116)
Zer1877 = keras.layers.ZeroPadding3D(padding=((0, 0), (0, 0), (4, 0)), name = 'Zer1877', )(Up_18834)
Sub43854 = keras.layers.Subtract(name = 'Sub43854', )([Zer29447,Zer1877])
model = tf.keras.models.Model(inputs=[in0Sub96584,in1Sub96584,in0Thr43526,in0Con48953,in0Min50747,in1Min50747,in0Con56345,in0Mul32760,in1Mul32760], outputs=Sub43854)
w = model.get_layer('Con63137').get_weights() 
w[0] = np.array([[[0.8791, 0.6799, 0.5101, 0.1239], [0.7948, 0.8417, 0.3525, 0.5948]]])
w[1] = np.array([0, 0, 0, 0])
model.get_layer('Con63137').set_weights(w) 
in0Sub96584 = tf.constant([[[[0.7428, 0.968, 0.175], [0.81, 0.3114, 0.4656]], [[0.8033, 0.7474, 0.6288], [0.292, 0.1005, 0.3414]]]])
in1Sub96584 = tf.constant([[[[0.8595, 0.1869, 0.8439], [0.4452, 0.571, 0.8659]], [[0.2313, 0.6035, 0.426], [0.5966, 0.8267, 0.3094]]]])
in0Thr43526 = tf.constant([[[[0.372, 0.0249]], [[0.683, 0.7328]]]])
in0Con48953 = tf.constant([[[[0.5107], [0.8431]], [[0.2154], [0.6862]]]])
in0Min50747 = tf.constant([[[0.469, 0.0695]]])
in1Min50747 = tf.constant([[[0.4205, 0.2798]]])
in0Con56345 = tf.constant([[[0.764, 0.2732], [0.4484, 0.6938]]])
in0Mul32760 = tf.constant([[[0.5119, 0.0802], [0.4602, 0.2349]]])
in1Mul32760 = tf.constant([[[0.9216, 0.3197], [0.1427, 0.9218]]])
print (np.array2string(model.predict([in0Sub96584,in1Sub96584,in0Thr43526,in0Con48953,in0Min50747,in1Min50747,in0Con56345,in0Mul32760,in1Mul32760],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Sub43854.png')

LSub96584 = subtract_layer([[[[0.7428, 0.968, 0.175], [0.81, 0.3114, 0.4656]], [[0.8033, 0.7474, 0.6288], [0.292, 0.1005, 0.3414]]]], [[[[0.8595, 0.1869, 0.8439], [0.4452, 0.571, 0.8659]], [[0.2313, 0.6035, 0.426], [0.5966, 0.8267, 0.3094]]]], Sub96584), 
LThr43526 = thresholded_relu_layer([[[[0.372, 0.0249]], [[0.683, 0.7328]]]], 0.12216622583137092, Thr43526), 
LZer48772 = zero_padding2D_layer(Thr43526, 0, 0, 1, 0, Zer48772), 
LCon48953 = concatenate_layer([Zer48772,[[[[0.5107], [0.8431]], [[0.2154], [0.6862]]]]], 3, Con48953), 
LMul78711 = multiply_layer([Sub96584,Con48953], Mul78711), 
LSof73009 = softmax_layer(Mul78711, 1, Sof73009), 
LRes56960 = reshape_layer(Sof73009, [2, 2, 3, 1], Res56960), 
LZer29447 = zero_padding3D_layer(Res56960, 0, 0, 2, 0, 2, 0, Zer29447), 
LMin50747 = minimum_layer([[[[0.469, 0.0695]]], [[[0.4205, 0.2798]]]], Min50747), 
LReL76732 = relu_layer(Min50747, 0.49063366039678163, 6.36456509327606, 1.7508264624651004, ReL76732), 
LZer84882 = zero_padding1D_layer(ReL76732, 1, 0, Zer84882), 
LCon56345 = concatenate_layer([Zer84882,[[[0.764, 0.2732], [0.4484, 0.6938]]]], 2, Con56345), 
LMul32760 = multiply_layer([[[[0.5119, 0.0802], [0.4602, 0.2349]]], [[[0.9216, 0.3197], [0.1427, 0.9218]]]], Mul32760), 
LCon63137 = conv1D_layer(Mul32760, 1,[[[0.8791, 0.6799, 0.5101, 0.1239], [0.7948, 0.8417, 0.3525, 0.5948]]],[0, 0, 0, 0], 1, false, 1, Con63137), 
LMax6369 = maximum_layer([Con56345,Con63137], Max6369), 
LRes23145 = reshape_layer(Max6369, [2, 4, 1], Res23145), 
LRes31116 = reshape_layer(Res23145, [2, 4, 1, 1], Res31116), 
LUp_18834 = up_sampling3D_layer(Res31116, 1, 1, 1, Up_18834), 
LZer1877 = zero_padding3D_layer(Up_18834, 0, 0, 0, 0, 4, 0, Zer1877), 
LSub43854 = subtract_layer(Zer29447,Zer1877, Sub43854), 
exec_layers([LSub96584,LThr43526,LZer48772,LCon48953,LMul78711,LSof73009,LRes56960,LZer29447,LMin50747,LReL76732,LZer84882,LCon56345,LMul32760,LCon63137,LMax6369,LRes23145,LRes31116,LUp_18834,LZer1877,LSub43854],["Sub96584","Thr43526","Zer48772","Con48953","Mul78711","Sof73009","Res56960","Zer29447","Min50747","ReL76732","Zer84882","Con56345","Mul32760","Con63137","Max6369","Res23145","Res31116","Up_18834","Zer1877","Sub43854"],Sub43854,"Sub43854")

Actual (Unparsed): [[[[[0.0000000], [0.0000000], [0.0000000], [0.0000000], [-0.4351090]], [[0.0000000], [0.0000000], [0.0000000], [0.0000000], [-0.3423355]], [[0.0000000], [0.0000000], [0.5000000], [0.5000000], [-0.3591484]], [[0.0000000], [0.0000000], [0.5851005], [0.6299866], [0.1378924]]], [[[0.0000000], [0.0000000], [0.0000000], [0.0000000], [-0.2298297]], [[0.0000000], [0.0000000], [0.0000000], [0.0000000], [-0.2269034]], [[0.0000000], [0.0000000], [0.5000000], [0.5000000], [0.1467484]], [[0.0000000], [0.0000000], [0.4148995], [0.3700134], [-0.1048924]]]]]

Expected (Unparsed): [[[[[0],[0],[0],[0],[-0.43510902917600003]],[[0],[0],[0],[0],[-0.342335547994]],[[0],[0],[0.5],[0.5],[-0.359148434694635]],[[0],[0],[0.5851005230328283],[0.6299866074314773],[0.13789238996207392]]],[[[0],[0],[0],[0],[-0.22982966744999997]],[[0],[0],[0],[0],[-0.22690339133999998]],[[0],[0],[0.5],[0.5],[0.14674843469463483]],[[0],[0],[0.41489947696717167],[0.3700133925685228],[-0.10489238996207395]]]]]

Actual:   [[[[[0], [0], [0], [0], [-0.4351]], [[0], [0], [0], [0], [-0.3423]], [[0], [0], [0.5], [0.5], [-0.3591]], [[0], [0], [0.5852], [0.63], [0.1379]]], [[[0], [0], [0], [0], [-0.2298]], [[0], [0], [0], [0], [-0.2269]], [[0], [0], [0.5], [0.5], [0.1468]], [[0], [0], [0.4149], [0.3701], [-0.1048]]]]]

Expected: [[[[[0], [0], [0], [0], [-0.4351]], [[0], [0], [0], [0], [-0.3423]], [[0], [0], [0.5], [0.5], [-0.3591]], [[0], [0], [0.5852], [0.63], [0.1379]]], [[[0], [0], [0], [0], [-0.2298]], [[0], [0], [0], [0], [-0.2269]], [[0], [0], [0.5], [0.5], [0.1468]], [[0], [0], [0.4149], [0.3701], [-0.1048]]]]]