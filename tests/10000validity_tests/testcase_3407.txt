import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Sub84125 = tf.keras.layers.Input(shape=([3, 2, 2]))
in1Sub84125 = tf.keras.layers.Input(shape=([3, 2, 2]))
in0GRU49589 = tf.keras.layers.Input(shape=([1, 3]))
in0Con50144 = tf.keras.layers.Input(shape=([10]))
in0Con32857 = tf.keras.layers.Input(shape=([12, 2]))
in0Loc60601 = tf.keras.layers.Input(shape=([1, 2]))

Sub84125 = keras.layers.Subtract(name = 'Sub84125', )([in0Sub84125,in1Sub84125])
Res22574 = keras.layers.Reshape((3, 4), name = 'Res22574', )(Sub84125)
Fla27213 = keras.layers.Flatten(name = 'Fla27213', )(Res22574)
GRU49589 = keras.layers.GRU(2,reset_after=False, recurrent_activation='sigmoid', name = 'GRU49589', )(in0GRU49589)
Con50144 = keras.layers.Concatenate(axis=1, name = 'Con50144', )([GRU49589,in0Con50144])
Mul11322 = keras.layers.Multiply(name = 'Mul11322', )([Fla27213,Con50144])
Res55745 = keras.layers.Reshape((12, 1), name = 'Res55745', )(Mul11322)
Con32857 = keras.layers.Concatenate(axis=2, name = 'Con32857', )([Res55745,in0Con32857])
Loc60601 = keras.layers.LocallyConnected1D(3, (1),strides=(1), name = 'Loc60601', )(in0Loc60601)
Zer69016 = keras.layers.ZeroPadding1D(padding=((11, 0)), name = 'Zer69016', )(Loc60601)
Min76251 = keras.layers.Minimum(name = 'Min76251', )([Con32857,Zer69016])
Max10215 = keras.layers.MaxPool1D(pool_size=(1), name = 'Max10215', )(Min76251)
model = tf.keras.models.Model(inputs=[in0Sub84125,in1Sub84125,in0GRU49589,in0Con50144,in0Con32857,in0Loc60601], outputs=Max10215)
w = model.get_layer('GRU49589').get_weights() 
w[0] = np.array([[7, 2, 10, 1, 3, 10], [3, 5, 4, 7, 8, 5], [4, 1, 6, 6, 2, 6]])
w[1] = np.array([[9, 5, 5, 9, 8, 7], [4, 3, 7, 7, 10, 9]])
w[2] = np.array([9, 10, 9, 5, 8, 2])
model.get_layer('GRU49589').set_weights(w) 
w = model.get_layer('Loc60601').get_weights() 
w[0] = np.array([[[0.146, 0.1773, 0.7827], [0.0634, 0.6609, 0.127]]])
w[1] = np.array([[0, 0, 0]])
model.get_layer('Loc60601').set_weights(w) 
in0Sub84125 = tf.constant([[[[0.2538, 0.6349], [0.2451, 0.5454]], [[0.3801, 0.9097], [0.9441, 0.5027]], [[0.7963, 0.7615], [0.9269, 0.0446]]]])
in1Sub84125 = tf.constant([[[[0.5524, 0.3982], [0.4463, 0.2422]], [[0.5415, 0.4261], [0.0895, 0.9402]], [[0.883, 0.1209], [0.8603, 0.1069]]]])
in0GRU49589 = tf.constant([[[3, 4, 6]]])
in0Con50144 = tf.constant([[0.5915, 0.9316, 0.4825, 0.3762, 0.4919, 0.9871, 0.0408, 0.437, 0.218, 0.4995]])
in0Con32857 = tf.constant([[[0.9767, 0.5217], [0.8987, 0.1033], [0.2155, 0.5323], [0.4036, 0.8672], [0.1347, 0.0698], [0.3844, 0.2219], [0.1278, 0.2936], [0.8555, 0.6257], [0.6306, 0.6428], [0.4213, 0.4781], [0.114, 0.3555], [0.2528, 0.689]]])
in0Loc60601 = tf.constant([[[0.4585, 0.265]]])
print (np.array2string(model.predict([in0Sub84125,in1Sub84125,in0GRU49589,in0Con50144,in0Con32857,in0Loc60601],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Max10215.png')

LSub84125 = subtract_layer([[[[0.2538, 0.6349], [0.2451, 0.5454]], [[0.3801, 0.9097], [0.9441, 0.5027]], [[0.7963, 0.7615], [0.9269, 0.0446]]]], [[[[0.5524, 0.3982], [0.4463, 0.2422]], [[0.5415, 0.4261], [0.0895, 0.9402]], [[0.883, 0.1209], [0.8603, 0.1069]]]], Sub84125), 
LRes22574 = reshape_layer(Sub84125, [3, 4], Res22574), 
LFla27213 = flatten_layer(Res22574, Fla27213), 
LGRU49589 = gru_layer([[[3, 4, 6]]],[[7, 2, 10, 1, 3, 10], [3, 5, 4, 7, 8, 5], [4, 1, 6, 6, 2, 6]],[[9, 5, 5, 9, 8, 7], [4, 3, 7, 7, 10, 9]],[9, 10, 9, 5, 8, 2], false, GRU49589), 
LCon50144 = concatenate_layer([GRU49589,[[0.5915, 0.9316, 0.4825, 0.3762, 0.4919, 0.9871, 0.0408, 0.437, 0.218, 0.4995]]], 1, Con50144), 
LMul11322 = multiply_layer([Fla27213,Con50144], Mul11322), 
LRes55745 = reshape_layer(Mul11322, [12, 1], Res55745), 
LCon32857 = concatenate_layer([Res55745,[[[0.9767, 0.5217], [0.8987, 0.1033], [0.2155, 0.5323], [0.4036, 0.8672], [0.1347, 0.0698], [0.3844, 0.2219], [0.1278, 0.2936], [0.8555, 0.6257], [0.6306, 0.6428], [0.4213, 0.4781], [0.114, 0.3555], [0.2528, 0.689]]]], 2, Con32857), 
LLoc60601 = locally_connected1D_layer([[[0.4585, 0.265]]], 1,[[[0.146, 0.1773, 0.7827], [0.0634, 0.6609, 0.127]]],[[0, 0, 0]], 1, Loc60601), 
LZer69016 = zero_padding1D_layer(Loc60601, 11, 0, Zer69016), 
LMin76251 = minimum_layer([Con32857,Zer69016], Min76251), 
LMax10215 = max_pool1D_layer(Min76251, 1, Max10215), 
exec_layers([LSub84125,LRes22574,LFla27213,LGRU49589,LCon50144,LMul11322,LRes55745,LCon32857,LLoc60601,LZer69016,LMin76251,LMax10215],["Sub84125","Res22574","Fla27213","GRU49589","Con50144","Mul11322","Res55745","Con32857","Loc60601","Zer69016","Min76251","Max10215"],Max10215,"Max10215")

Actual (Unparsed): [[[0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000], [-0.1190098, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000], [-0.0778755, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000], [-0.4318563, 0.0000000, 0.0000000], [-0.0035374, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000], [-0.0311189, 0.2528000, 0.3925229]]]

Expected (Unparsed): [[[-0.0,0,0],[0.0,0,0],[-0.11900979999999999,0,0],[0,0,0],[-0.07787549999999999,0,0],[0,0,0],[0,0,0],[-0.43185625,0,0],[-0.0035373600000000002,0,0],[0,0,0],[0,0,0],[-0.031118849999999997,0.2528,0.39252295]]]

Actual:   [[[0, 0, 0], [0, 0, 0], [-0.119, 0, 0], [0, 0, 0], [-0.0778, 0, 0], [0, 0, 0], [0, 0, 0], [-0.4318, 0, 0], [-0.0035, 0, 0], [0, 0, 0], [0, 0, 0], [-0.0311, 0.2528, 0.3926]]]

Expected: [[[-0, 0, 0], [0, 0, 0], [-0.119, 0, 0], [0, 0, 0], [-0.0778, 0, 0], [0, 0, 0], [0, 0, 0], [-0.4318, 0, 0], [-0.0035, 0, 0], [0, 0, 0], [0, 0, 0], [-0.0311, 0.2528, 0.3926]]]