import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Dot62924 = tf.keras.layers.Input(shape=([3]))
in1Dot62924 = tf.keras.layers.Input(shape=([3]))
in0Con83713 = tf.keras.layers.Input(shape=([11]))
in0Ave50203 = tf.keras.layers.Input(shape=([1, 2]))
in1Ave50203 = tf.keras.layers.Input(shape=([1, 2]))
in0Con30445 = tf.keras.layers.Input(shape=([8]))
in0Min54671 = tf.keras.layers.Input(shape=([1, 2]))
in1Min54671 = tf.keras.layers.Input(shape=([1, 2]))
in0Con46707 = tf.keras.layers.Input(shape=([10]))
in0Cro66212 = tf.keras.layers.Input(shape=([2, 4, 4, 3]))

Dot62924 = keras.layers.Dot(axes=(1, 1), name = 'Dot62924', )([in0Dot62924,in1Dot62924])
Con83713 = keras.layers.Concatenate(axis=1, name = 'Con83713', )([Dot62924,in0Con83713])
Ave50203 = keras.layers.Average(name = 'Ave50203', )([in0Ave50203,in1Ave50203])
Res33750 = keras.layers.Reshape((1, 2, 1), name = 'Res33750', )(Ave50203)
Sep75457 = keras.layers.SeparableConv2D(4, (1, 2),strides=(1, 1), padding='valid', name = 'Sep75457', )(Res33750)
Res19943 = keras.layers.Reshape((1, 4), name = 'Res19943', )(Sep75457)
Fla31080 = keras.layers.Flatten(name = 'Fla31080', )(Res19943)
Con30445 = keras.layers.Concatenate(axis=1, name = 'Con30445', )([Fla31080,in0Con30445])
Min54671 = keras.layers.Minimum(name = 'Min54671', )([in0Min54671,in1Min54671])
Fla97982 = keras.layers.Flatten(name = 'Fla97982', )(Min54671)
Con46707 = keras.layers.Concatenate(axis=1, name = 'Con46707', )([Fla97982,in0Con46707])
Cro66212 = keras.layers.Cropping3D(cropping=((1, 0), (1, 1), (2, 0)), name = 'Cro66212', )(in0Cro66212)
Res79470 = keras.layers.Reshape((1, 2, 6), name = 'Res79470', )(Cro66212)
Res46299 = keras.layers.Reshape((1, 12), name = 'Res46299', )(Res79470)
Glo5129 = keras.layers.GlobalAveragePooling1D(name = 'Glo5129', )(Res46299)
Sub6448 = keras.layers.Subtract(name = 'Sub6448', )([Con46707,Glo5129])
Ave23620 = keras.layers.Average(name = 'Ave23620', )([Con30445,Sub6448])
Sub84381 = keras.layers.Subtract(name = 'Sub84381', )([Con83713,Ave23620])
model = tf.keras.models.Model(inputs=[in0Dot62924,in1Dot62924,in0Con83713,in0Ave50203,in1Ave50203,in0Con30445,in0Min54671,in1Min54671,in0Con46707,in0Cro66212], outputs=Sub84381)
w = model.get_layer('Sep75457').get_weights() 
w[0] = np.array([[[[0.4418]], [[0.2803]]]])
w[1] = np.array([[[[0.9902, 0.1672, 0.4925, 0.9637]]]])
w[2] = np.array([0, 0, 0, 0])
model.get_layer('Sep75457').set_weights(w) 
in0Dot62924 = tf.constant([[0.403, 0.624, 0.4596]])
in1Dot62924 = tf.constant([[0.4719, 0.3894, 0.8915]])
in0Con83713 = tf.constant([[0.8001, 0.3939, 0.7986, 0.7937, 0.2186, 0.3022, 0.5959, 0.86, 0.6508, 0.5406, 0.5404]])
in0Ave50203 = tf.constant([[[0.7014, 0.9814]]])
in1Ave50203 = tf.constant([[[0.9503, 0.6161]]])
in0Con30445 = tf.constant([[0.8954, 0.0381, 0.1391, 0.381, 0.4876, 0.9503, 0.9747, 0.7872]])
in0Min54671 = tf.constant([[[0.2713, 0.8936]]])
in1Min54671 = tf.constant([[[0.7362, 0.8994]]])
in0Con46707 = tf.constant([[0.8318, 0.5853, 0.0268, 0.6078, 0.455, 0.1243, 0.2689, 0.0472, 0.4442, 0.024]])
in0Cro66212 = tf.constant([[[[[1.3757, 1.462, 1.4247], [1.3351, 1.3196, 1.1277], [1.8049, 1.3886, 1.5618], [1.5719, 1.544, 1.3882]], [[1.4879, 1.9725, 1.244], [1.7585, 1.8491, 1.2865], [1.9287, 1.9208, 1.6798], [1.6267, 1.5467, 1.2379]], [[1.7761, 1.704, 1.4216], [1.4835, 1.4962, 1.8679], [1.8404, 1.5825, 1.7232], [1.4906, 1.1255, 1.7845]], [[1.3252, 1.316, 1.6091], [1.0111, 1.337, 1.9199], [1.9002, 1.8455, 1.3952], [1.6134, 1.7117, 1.5241]]], [[[1.6623, 1.9642, 1.3065], [1.3314, 1.5917, 1.6036], [1.3099, 1.9996, 1.4065], [1.1444, 1.234, 1.0735]], [[1.0889, 1.8415, 1.5693], [1.7103, 1.0139, 1.095], [1.7027, 1.0551, 1.0971], [1.0158, 1.246, 1.1579]], [[1.4737, 1.0528, 1.5761], [1.379, 1.2764, 1.1168], [1.5228, 1.3669, 1.0393], [1.7238, 1.1736, 1.9877]], [[1.6172, 1.4309, 1.7079], [1.0348, 1.2829, 1.2386], [1.0216, 1.1539, 1.8386], [1.6947, 1.6593, 1.1814]]]]])
print (np.array2string(model.predict([in0Dot62924,in1Dot62924,in0Con83713,in0Ave50203,in1Ave50203,in0Con30445,in0Min54671,in1Min54671,in0Con46707,in0Cro66212],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Sub84381.png')

LDot62924 = dot_layer([[0.403, 0.624, 0.4596]], [[0.4719, 0.3894, 0.8915]], 1, 1, Dot62924), 
LCon83713 = concatenate_layer([Dot62924,[[0.8001, 0.3939, 0.7986, 0.7937, 0.2186, 0.3022, 0.5959, 0.86, 0.6508, 0.5406, 0.5404]]], 1, Con83713), 
LAve50203 = average_layer([[[[0.7014, 0.9814]]], [[[0.9503, 0.6161]]]], Ave50203), 
LRes33750 = reshape_layer(Ave50203, [1, 2, 1], Res33750), 
LSep75457 = separable_conv2D_layer(Res33750, 1, 2,[[[[[0.4418]], [[0.2803]]]],[[[[0.9902, 0.1672, 0.4925, 0.9637]]]]],[0, 0, 0, 0], 1, 1, false, Sep75457), 
LRes19943 = reshape_layer(Sep75457, [1, 4], Res19943), 
LFla31080 = flatten_layer(Res19943, Fla31080), 
LCon30445 = concatenate_layer([Fla31080,[[0.8954, 0.0381, 0.1391, 0.381, 0.4876, 0.9503, 0.9747, 0.7872]]], 1, Con30445), 
LMin54671 = minimum_layer([[[[0.2713, 0.8936]]], [[[0.7362, 0.8994]]]], Min54671), 
LFla97982 = flatten_layer(Min54671, Fla97982), 
LCon46707 = concatenate_layer([Fla97982,[[0.8318, 0.5853, 0.0268, 0.6078, 0.455, 0.1243, 0.2689, 0.0472, 0.4442, 0.024]]], 1, Con46707), 
LCro66212 = cropping3D_layer([[[[[1.3757, 1.462, 1.4247], [1.3351, 1.3196, 1.1277], [1.8049, 1.3886, 1.5618], [1.5719, 1.544, 1.3882]], [[1.4879, 1.9725, 1.244], [1.7585, 1.8491, 1.2865], [1.9287, 1.9208, 1.6798], [1.6267, 1.5467, 1.2379]], [[1.7761, 1.704, 1.4216], [1.4835, 1.4962, 1.8679], [1.8404, 1.5825, 1.7232], [1.4906, 1.1255, 1.7845]], [[1.3252, 1.316, 1.6091], [1.0111, 1.337, 1.9199], [1.9002, 1.8455, 1.3952], [1.6134, 1.7117, 1.5241]]], [[[1.6623, 1.9642, 1.3065], [1.3314, 1.5917, 1.6036], [1.3099, 1.9996, 1.4065], [1.1444, 1.234, 1.0735]], [[1.0889, 1.8415, 1.5693], [1.7103, 1.0139, 1.095], [1.7027, 1.0551, 1.0971], [1.0158, 1.246, 1.1579]], [[1.4737, 1.0528, 1.5761], [1.379, 1.2764, 1.1168], [1.5228, 1.3669, 1.0393], [1.7238, 1.1736, 1.9877]], [[1.6172, 1.4309, 1.7079], [1.0348, 1.2829, 1.2386], [1.0216, 1.1539, 1.8386], [1.6947, 1.6593, 1.1814]]]]], 1, 0, 1, 1, 2, 0, Cro66212), 
LRes79470 = reshape_layer(Cro66212, [1, 2, 6], Res79470), 
LRes46299 = reshape_layer(Res79470, [1, 12], Res46299), 
LGlo5129 = global_average_pooling1D_layer(Res46299, Glo5129), 
LSub6448 = subtract_layer(Con46707,Glo5129, Sub6448), 
LAve23620 = average_layer([Con30445,Sub6448], Ave23620), 
LSub84381 = subtract_layer(Con83713,Ave23620, Sub84381), 
exec_layers([LDot62924,LCon83713,LAve50203,LRes33750,LSep75457,LRes19943,LFla31080,LCon30445,LMin54671,LFla97982,LCon46707,LCro66212,LRes79470,LRes46299,LGlo5129,LSub6448,LAve23620,LSub84381],["Dot62924","Con83713","Ave50203","Res33750","Sep75457","Res19943","Fla31080","Con30445","Min54671","Fla97982","Con46707","Cro66212","Res79470","Res46299","Glo5129","Sub6448","Ave23620","Sub84381"],Sub84381,"Sub84381")

Actual (Unparsed): [[1.2671045, 0.8316305, 0.3815703, 0.7301607, 0.9556000, 0.4746000, 0.7665500, 1.0267000, 1.0014000, 1.0139500, 0.4179500, 1.1286500]]

Expected (Unparsed): [[1.2671044982595001,0.831630487042,0.38157027433124996,0.73016073781325,0.9556,0.4745999999999999,0.76655,1.0267,1.0014,1.0139500000000001,0.41795,1.12865]]

Actual:   [[1.2672, 0.8317, 0.3816, 0.7302, 0.9556, 0.4746, 0.7666, 1.0267, 1.0014, 1.014, 0.418, 1.1287]]

Expected: [[1.2672, 0.8317, 0.3816, 0.7302, 0.9556, 0.4746, 0.7666, 1.0267, 1.0014, 1.014, 0.418, 1.1287]]