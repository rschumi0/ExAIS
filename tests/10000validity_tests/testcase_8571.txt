import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Max85863 = tf.keras.layers.Input(shape=([2, 2, 1]))
in1Max85863 = tf.keras.layers.Input(shape=([2, 2, 1]))

Max85863 = keras.layers.Maximum(name = 'Max85863', )([in0Max85863,in1Max85863])
Res44208 = keras.layers.Reshape((2, 2, 1, 1), name = 'Res44208', )(Max85863)
Con16432 = keras.layers.Conv3DTranspose(2, (1, 2, 1),strides=(1, 3, 1), padding='valid', name = 'Con16432', )(Res44208)
model = tf.keras.models.Model(inputs=[in0Max85863,in1Max85863], outputs=Con16432)
w = model.get_layer('Con16432').get_weights() 
w[0] = np.array([[[[[0.5135], [0.7027]]], [[[0.2426], [0.508]]]]])
w[1] = np.array([0, 0])
model.get_layer('Con16432').set_weights(w) 
in0Max85863 = tf.constant([[[[0.3034], [0.0218]], [[0.8894], [0.542]]]])
in1Max85863 = tf.constant([[[[0.0323], [0.2203]], [[0.8838], [0.4417]]]])
print (np.array2string(model.predict([in0Max85863,in1Max85863],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Con16432.png')

LMax85863 = maximum_layer([[[[[0.3034], [0.0218]], [[0.8894], [0.542]]]], [[[[0.0323], [0.2203]], [[0.8838], [0.4417]]]]], Max85863), 
LRes44208 = reshape_layer(Max85863, [2, 2, 1, 1], Res44208), 
LCon16432 = conv3D_transpose_layer(Res44208, 1, 2, 1,[[[[[0.5135], [0.7027]]], [[[0.2426], [0.508]]]]],[0, 0], 1, 3, 1, false, Con16432), 
exec_layers([LMax85863,LRes44208,LCon16432],["Max85863","Res44208","Con16432"],Con16432,"Con16432")

Actual (Unparsed): [[[[[0.1557959, 0.2131992]], [[0.0736048, 0.1541272]], [[0.0000000, 0.0000000]], [[0.1131241, 0.1548048]], [[0.0534448, 0.1119124]], [[0.0000000, 0.0000000]]], [[[0.4567069, 0.6249814]], [[0.2157684, 0.4518152]], [[0.0000000, 0.0000000]], [[0.2783170, 0.3808634]], [[0.1314892, 0.2753360]], [[0.0000000, 0.0000000]]]]]

Expected (Unparsed): [[[[[0.1557959,0.21319918]],[[0.07360484,0.1541272]],[[0,0]],[[0.11312404999999999,0.15480481]],[[0.053444780000000004,0.1119124]],[[0,0]]],[[[0.45670689999999997,0.6249813799999999]],[[0.21576844,0.4518152]],[[0,0]],[[0.278317,0.3808634]],[[0.13148920000000003,0.275336]],[[0,0]]]]]

Actual:   [[[[[0.1558, 0.2132]], [[0.0737, 0.1542]], [[0, 0]], [[0.1132, 0.1549]], [[0.0535, 0.112]], [[0, 0]]], [[[0.4568, 0.625]], [[0.2158, 0.4519]], [[0, 0]], [[0.2784, 0.3809]], [[0.1315, 0.2754]], [[0, 0]]]]]

Expected: [[[[[0.1558, 0.2132]], [[0.0737, 0.1542]], [[0, 0]], [[0.1132, 0.1549]], [[0.0535, 0.112]], [[0, 0]]], [[[0.4568, 0.625]], [[0.2158, 0.4519]], [[0, 0]], [[0.2784, 0.3809]], [[0.1315, 0.2754]], [[0, 0]]]]]