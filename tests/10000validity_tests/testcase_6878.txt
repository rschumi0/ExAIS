import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Den30430 = tf.keras.layers.Input(shape=([5, 5, 3]))

Den30430 = keras.layers.Dense(3,name = 'Den30430', )(in0Den30430)
Lea14831 = keras.layers.LeakyReLU(alpha=8.70595695284712, name = 'Lea14831', )(Den30430)
Max91634 = keras.layers.MaxPool2D(pool_size=(1, 1), strides=(1, 1), padding='valid', name = 'Max91634', )(Lea14831)
model = tf.keras.models.Model(inputs=[in0Den30430], outputs=Max91634)
w = model.get_layer('Den30430').get_weights() 
w[0] = np.array([[0.5953, 0.3767, 0.5123], [0.3581, 0.4759, 0.3924], [0.9129, 0.556, 0.8819]])
w[1] = np.array([0.5753, 0.0595, 0.6052])
model.get_layer('Den30430').set_weights(w) 
in0Den30430 = tf.constant([[[[0.4939, 0.013, 0.8985], [0.0272, 0.1778, 0.8893], [0.1186, 0.7939, 0.9338], [0.6835, 0.7851, 0.6314], [0.2869, 0.4893, 0.0162]], [[0.3598, 0.2085, 0.1687], [0.3274, 0.7858, 0.5627], [0.5192, 0.0731, 0.7764], [0.7454, 0.5132, 0.7008], [0.2012, 0.8259, 0.2335]], [[0.3314, 0.409, 0.1046], [0.7244, 0.306, 0.6352], [0.8979, 0.0875, 0.246], [0.4938, 0.5297, 0.807], [0.8615, 0.4962, 0.9655]], [[0.4667, 0.2151, 0.3643], [0.2597, 0.7343, 0.3955], [0.7538, 0.0036, 0.7306], [0.591, 0.8905, 0.2591], [0.6761, 0.3635, 0.5346]], [[0.0419, 0.0142, 0.5212], [0.6379, 0.2798, 0.0454], [0.3617, 0.0319, 0.3108], [0.4757, 0.2155, 0.4979], [0.412, 0.1833, 0.1598]]]])
print (np.array2string(model.predict([in0Den30430],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Max91634.png')

LDen30430 = dense_layer([[[[0.4939, 0.013, 0.8985], [0.0272, 0.1778, 0.8893], [0.1186, 0.7939, 0.9338], [0.6835, 0.7851, 0.6314], [0.2869, 0.4893, 0.0162]], [[0.3598, 0.2085, 0.1687], [0.3274, 0.7858, 0.5627], [0.5192, 0.0731, 0.7764], [0.7454, 0.5132, 0.7008], [0.2012, 0.8259, 0.2335]], [[0.3314, 0.409, 0.1046], [0.7244, 0.306, 0.6352], [0.8979, 0.0875, 0.246], [0.4938, 0.5297, 0.807], [0.8615, 0.4962, 0.9655]], [[0.4667, 0.2151, 0.3643], [0.2597, 0.7343, 0.3955], [0.7538, 0.0036, 0.7306], [0.591, 0.8905, 0.2591], [0.6761, 0.3635, 0.5346]], [[0.0419, 0.0142, 0.5212], [0.6379, 0.2798, 0.0454], [0.3617, 0.0319, 0.3108], [0.4757, 0.2155, 0.4979], [0.412, 0.1833, 0.1598]]]], [[0.5953, 0.3767, 0.5123], [0.3581, 0.4759, 0.3924], [0.9129, 0.556, 0.8819]],[0.5753, 0.0595, 0.6052], Den30430), 
LLea14831 = leaky_relu_layer(Den30430, 8.70595695284712, Lea14831), 
LMax91634 = max_pool2D_layer(Lea14831, 1, 1, 1, 1, false, Max91634), 
exec_layers([LDen30430,LLea14831,LMax91634],["Den30430","Lea14831","Max91634"],Max91634,"Max91634")

Actual (Unparsed): [[[[1.6942146, 0.7513048, 1.6557133], [1.4670043, 0.6488121, 1.4731769], [1.7826642, 1.0011864, 1.8010034], [1.8397369, 1.0416619, 1.8202619], [0.9360989, 0.4094403, 0.9584670]], [[1.0181590, 0.3880590, 1.0201175], [1.5652850, 0.8696550, 1.5775200], [1.6193325, 0.7215494, 1.5845778], [1.8425739, 0.9741689, 1.8064836], [1.2039913, 0.6581639, 1.2382816]], [[1.0145347, 0.4371391, 1.0277146], [1.6959880, 0.8311781, 1.6565674], [1.3657270, 0.5761562, 1.3164766], [1.7956550, 0.9462907, 1.7777213], [2.1472451, 1.1569866, 2.0927298]], [[1.2627233, 0.5402228, 1.2499718], [1.3539042, 0.7266804, 1.3751751], [1.6922910, 0.7513833, 1.6371005], [1.4825427, 0.8499783, 1.4859018], [1.5959880, 0.7844141, 1.5656672]], [[1.0811316, 0.3718287, 1.0918837], [1.0966839, 0.4581961, 1.0818279], [1.0857727, 0.3837384, 1.0771110], [1.3901877, 0.6180850, 1.3725613], [1.0320847, 0.3907817, 1.0291221]]]]

Expected (Unparsed): [[[[1.6942146200000001,0.75130483,1.65571332],[1.46700431,0.64881206,1.47317695],[1.78266419,1.00118643,1.80100336],[1.83973692,1.04166194,1.82026195],[0.93609888,0.4094403,0.9584669699999999]],[[1.01815902,0.38805901,1.02011747],[1.56528503,0.8696550000000001,1.57752007],[1.61933243,0.72154933,1.58457776],[1.84257386,0.9741688599999999,1.8064836199999998],[1.2039913,0.65816385,1.2382815699999998]],[[1.01453466,0.43713908,1.02771456],[1.6959880000000003,0.83117808,1.6565674000000001],[1.36572702,0.57615618,1.3164765699999998],[1.79565501,0.9462906900000001,1.7777213200000002],[2.14724512,1.15698663,2.09272978]],[[1.26272329,0.54022278,1.24997182],[1.35390419,0.72668036,1.37517508],[1.6922910400000002,0.7513833000000001,1.63710052],[1.4825427400000002,0.8499782499999999,1.48590179],[1.5959880200000003,0.78441412,1.5656671699999998]],[[1.08113157,0.37182871,1.09188373],[1.09668391,0.4581961499999999,1.0818279499999999],[1.08577272,0.38373840000000004,1.07711099],[1.39018767,0.61808504,1.37256132],[1.03208475,0.39078166999999997,1.02912214]]]]

Actual:   [[[[1.6943, 0.7514, 1.6558], [1.4671, 0.6489, 1.4732], [1.7827, 1.0012, 1.8011], [1.8398, 1.0417, 1.8203], [0.9361, 0.4095, 0.9585]], [[1.0182, 0.3881, 1.0202], [1.5653, 0.8697, 1.5776], [1.6194, 0.7216, 1.5846], [1.8426, 0.9742, 1.8065], [1.204, 0.6582, 1.2383]], [[1.0146, 0.4372, 1.0278], [1.696, 0.8312, 1.6566], [1.3658, 0.5762, 1.3165], [1.7957, 0.9463, 1.7778], [2.1473, 1.157, 2.0928]], [[1.2628, 0.5403, 1.25], [1.354, 0.7267, 1.3752], [1.6923, 0.7514, 1.6372], [1.4826, 0.85, 1.486], [1.596, 0.7845, 1.5657]], [[1.0812, 0.3719, 1.0919], [1.0967, 0.4582, 1.0819], [1.0858, 0.3838, 1.0772], [1.3902, 0.6181, 1.3726], [1.0321, 0.3908, 1.0292]]]]

Expected: [[[[1.6943, 0.7514, 1.6558], [1.4671, 0.6489, 1.4732], [1.7827, 1.0012, 1.8011], [1.8398, 1.0417, 1.8203], [0.9361, 0.4095, 0.9585]], [[1.0182, 0.3881, 1.0202], [1.5653, 0.8697, 1.5776], [1.6194, 0.7216, 1.5846], [1.8426, 0.9742, 1.8065], [1.204, 0.6582, 1.2383]], [[1.0146, 0.4372, 1.0278], [1.696, 0.8312, 1.6566], [1.3658, 0.5762, 1.3165], [1.7957, 0.9463, 1.7778], [2.1473, 1.157, 2.0928]], [[1.2628, 0.5403, 1.25], [1.354, 0.7267, 1.3752], [1.6923, 0.7514, 1.6372], [1.4826, 0.85, 1.486], [1.596, 0.7845, 1.5657]], [[1.0812, 0.3719, 1.0919], [1.0967, 0.4582, 1.0819], [1.0858, 0.3838, 1.0772], [1.3902, 0.6181, 1.3726], [1.0321, 0.3908, 1.0292]]]]