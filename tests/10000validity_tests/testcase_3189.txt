import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Up_79904 = tf.keras.layers.Input(shape=([1, 4]))
in0Glo33969 = tf.keras.layers.Input(shape=([1, 1, 1]))
in0Con48393 = tf.keras.layers.Input(shape=([31]))

Up_79904 = keras.layers.UpSampling1D(size=(2), name = 'Up_79904', )(in0Up_79904)
Res90029 = keras.layers.Reshape((2, 4, 1), name = 'Res90029', )(Up_79904)
Up_69625 = keras.layers.UpSampling2D(size=(2, 2), name = 'Up_69625', )(Res90029)
Res96948 = keras.layers.Reshape((4, 8), name = 'Res96948', )(Up_69625)
Fla61565 = keras.layers.Flatten(name = 'Fla61565', )(Res96948)
Glo33969 = keras.layers.GlobalMaxPool2D(name = 'Glo33969', )(in0Glo33969)
Con48393 = keras.layers.Concatenate(axis=1, name = 'Con48393', )([Glo33969,in0Con48393])
Mul73642 = keras.layers.Multiply(name = 'Mul73642', )([Fla61565,Con48393])
Res2757 = keras.layers.Reshape((32, 1), name = 'Res2757', )(Mul73642)
Sep82074 = keras.layers.SeparableConv1D(2, (21),strides=(29), padding='valid', name = 'Sep82074', )(Res2757)
model = tf.keras.models.Model(inputs=[in0Up_79904,in0Glo33969,in0Con48393], outputs=Sep82074)
w = model.get_layer('Sep82074').get_weights() 
w[0] = np.array([[[0.129]], [[0.3617]], [[0.5823]], [[0.279]], [[0.7582]], [[0.7239]], [[0.8022]], [[0.7825]], [[0.3747]], [[0.8252]], [[0.9519]], [[0.6734]], [[0.9988]], [[0.4619]], [[0.2958]], [[0.2416]], [[0.9533]], [[0.9924]], [[0.3648]], [[0.4083]], [[0.9671]]])
w[1] = np.array([[[0.6639, 0.3315]]])
w[2] = np.array([0, 0])
model.get_layer('Sep82074').set_weights(w) 
in0Up_79904 = tf.constant([[[1.1343, 1.817, 1.8961, 1.7937]]])
in0Glo33969 = tf.constant([[[[1.6308]]]])
in0Con48393 = tf.constant([[0.2394, 0.9134, 0.2826, 0.5068, 0.5319, 0.5176, 0.9767, 0.9795, 0.7477, 0.7325, 0.1611, 0.2612, 0.9222, 0.1102, 0.2636, 0.5363, 0.8485, 0.0522, 0.1639, 0.0698, 0.1579, 0.1106, 0.5777, 0.0232, 0.9073, 0.514, 0.8212, 0.6049, 0.4927, 0.5776, 0.0513]])
print (np.array2string(model.predict([in0Up_79904,in0Glo33969,in0Con48393],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Sep82074.png')

LUp_79904 = up_sampling1D_layer([[[1.1343, 1.817, 1.8961, 1.7937]]], 2, Up_79904), 
LRes90029 = reshape_layer(Up_79904, [2, 4, 1], Res90029), 
LUp_69625 = up_sampling2D_layer(Res90029, 2, 2, Up_69625), 
LRes96948 = reshape_layer(Up_69625, [4, 8], Res96948), 
LFla61565 = flatten_layer(Res96948, Fla61565), 
LGlo33969 = global_max_pool2D_layer([[[[1.6308]]]], Glo33969), 
LCon48393 = concatenate_layer([Glo33969,[[0.2394, 0.9134, 0.2826, 0.5068, 0.5319, 0.5176, 0.9767, 0.9795, 0.7477, 0.7325, 0.1611, 0.2612, 0.9222, 0.1102, 0.2636, 0.5363, 0.8485, 0.0522, 0.1639, 0.0698, 0.1579, 0.1106, 0.5777, 0.0232, 0.9073, 0.514, 0.8212, 0.6049, 0.4927, 0.5776, 0.0513]]], 1, Con48393), 
LMul73642 = multiply_layer([Fla61565,Con48393], Mul73642), 
LRes2757 = reshape_layer(Mul73642, [32, 1], Res2757), 
LSep82074 = separable_conv1D_layer(Res2757, 21,[[[[0.129]], [[0.3617]], [[0.5823]], [[0.279]], [[0.7582]], [[0.7239]], [[0.8022]], [[0.7825]], [[0.3747]], [[0.8252]], [[0.9519]], [[0.6734]], [[0.9988]], [[0.4619]], [[0.2958]], [[0.2416]], [[0.9533]], [[0.9924]], [[0.3648]], [[0.4083]], [[0.9671]]],[[[0.6639, 0.3315]]]],[0, 0], 29, false, Sep82074), 
exec_layers([LUp_79904,LRes90029,LUp_69625,LRes96948,LFla61565,LGlo33969,LCon48393,LMul73642,LRes2757,LSep82074],["Up_79904","Res90029","Up_69625","Res96948","Fla61565","Glo33969","Con48393","Mul73642","Res2757","Sep82074"],Sep82074,"Sep82074")

Actual (Unparsed): [[[7.2334173, 3.6118057]]]

Expected (Unparsed): [[[7.233417220103944,3.6118057063781546]]]

Actual:   [[[7.2335, 3.6119]]]

Expected: [[[7.2335, 3.6119]]]