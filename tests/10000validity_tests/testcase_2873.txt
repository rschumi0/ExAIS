import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Min27470 = tf.keras.layers.Input(shape=([2, 2, 1]))
in1Min27470 = tf.keras.layers.Input(shape=([2, 2, 1]))
in0Con98456 = tf.keras.layers.Input(shape=([3, 3, 1]))
in0Lay10056 = tf.keras.layers.Input(shape=([2]))
in0Con18667 = tf.keras.layers.Input(shape=([2, 2, 2]))
in0Con17847 = tf.keras.layers.Input(shape=([2, 2, 2]))
in0Sim23064 = tf.keras.layers.Input(shape=([3, 3]))
in0Max4157 = tf.keras.layers.Input(shape=([1, 1, 1]))
in1Max4157 = tf.keras.layers.Input(shape=([1, 1, 1]))
in0Con43594 = tf.keras.layers.Input(shape=([3, 3, 2]))

Min27470 = keras.layers.Minimum(name = 'Min27470', )([in0Min27470,in1Min27470])
Res7596 = keras.layers.Reshape((2, 2, 1, 1), name = 'Res7596', )(Min27470)
Con10049 = keras.layers.Conv3D(2, (1, 1, 1),strides=(1, 1, 1), padding='valid', dilation_rate=(1, 1, 1), name = 'Con10049', )(Res7596)
Sof40217 = keras.layers.Softmax(axis=1, name = 'Sof40217', )(Con10049)
Res86910 = keras.layers.Reshape((2, 2, 2), name = 'Res86910', )(Sof40217)
Zer92162 = keras.layers.ZeroPadding2D(padding=((1, 0), (1, 0)), name = 'Zer92162', )(Res86910)
Con98456 = keras.layers.Concatenate(axis=3, name = 'Con98456', )([Zer92162,in0Con98456])
Lay10056 = keras.layers.LayerNormalization(axis=1, epsilon=2.6998709442957964, name = 'Lay10056', )(in0Lay10056)
Res5103 = keras.layers.Reshape((2, 1), name = 'Res5103', )(Lay10056)
Res29901 = keras.layers.Reshape((2, 1, 1), name = 'Res29901', )(Res5103)
Zer71304 = keras.layers.ZeroPadding2D(padding=((0, 0), (1, 0)), name = 'Zer71304', )(Res29901)
Con18667 = keras.layers.Concatenate(axis=3, name = 'Con18667', )([Zer71304,in0Con18667])
Con17847 = keras.layers.Conv2D(3, (2, 1),strides=(1, 1), padding='same', dilation_rate=(1, 1), name = 'Con17847', )(in0Con17847)
Ave30548 = keras.layers.Average(name = 'Ave30548', )([Con18667,Con17847])
Zer10086 = keras.layers.ZeroPadding2D(padding=((1, 0), (1, 0)), name = 'Zer10086', )(Ave30548)
Sim23064 = keras.layers.SimpleRNN(3,name = 'Sim23064', )(in0Sim23064)
Res56155 = keras.layers.Reshape((3, 1), name = 'Res56155', )(Sim23064)
Res73327 = keras.layers.Reshape((3, 1, 1), name = 'Res73327', )(Res56155)
Max4157 = keras.layers.Maximum(name = 'Max4157', )([in0Max4157,in1Max4157])
Zer92568 = keras.layers.ZeroPadding2D(padding=((2, 0), (0, 0)), name = 'Zer92568', )(Max4157)
Max32366 = keras.layers.Maximum(name = 'Max32366', )([Res73327,Zer92568])
Zer31898 = keras.layers.ZeroPadding2D(padding=((0, 0), (2, 0)), name = 'Zer31898', )(Max32366)
Con43594 = keras.layers.Concatenate(axis=3, name = 'Con43594', )([Zer31898,in0Con43594])
Max31823 = keras.layers.Maximum(name = 'Max31823', )([Zer10086,Con43594])
Ave8073 = keras.layers.Average(name = 'Ave8073', )([Con98456,Max31823])
model = tf.keras.models.Model(inputs=[in0Min27470,in1Min27470,in0Con98456,in0Lay10056,in0Con18667,in0Con17847,in0Sim23064,in0Max4157,in1Max4157,in0Con43594], outputs=Ave8073)
w = model.get_layer('Con10049').get_weights() 
w[0] = np.array([[[[[0.7365, 0.4929]]]]])
w[1] = np.array([0, 0])
model.get_layer('Con10049').set_weights(w) 
w = model.get_layer('Con17847').get_weights() 
w[0] = np.array([[[[0.1512, 0.9971, 0.7579], [0.7923, 0.9602, 0.6011]]], [[[0.7176, 0.7153, 0.6512], [0.0109, 0.1607, 0.029]]]])
w[1] = np.array([0, 0, 0])
model.get_layer('Con17847').set_weights(w) 
w = model.get_layer('Sim23064').get_weights() 
w[0] = np.array([[3, 4, 10], [9, 7, 10], [1, 2, 9]])
w[1] = np.array([[5, 9, 8], [10, 3, 9], [10, 6, 8]])
w[2] = np.array([7, 5, 8])
model.get_layer('Sim23064').set_weights(w) 
in0Min27470 = tf.constant([[[[0.7486], [0.527]], [[0.9535], [0.8003]]]])
in1Min27470 = tf.constant([[[[0.8099], [0.7587]], [[0.7824], [0.3493]]]])
in0Con98456 = tf.constant([[[[0.7335], [0.959], [0.7998]], [[0.1692], [0.9809], [0.2435]], [[0.5802], [0.9149], [0.6117]]]])
in0Lay10056 = tf.constant([[1.0768, 1.0839]])
in0Con18667 = tf.constant([[[[0.8669, 0.919], [0.1475, 0.6899]], [[0.7783, 0.8646], [0.3378, 0.9588]]]])
in0Con17847 = tf.constant([[[[0.0299, 0.7896], [0.158, 0.9794]], [[0.25, 0.2626], [0.457, 0.4057]]]])
in0Sim23064 = tf.constant([[[1, 7, 7], [3, 4, 9], [10, 2, 6]]])
in0Max4157 = tf.constant([[[[0.4482]]]])
in1Max4157 = tf.constant([[[[0.5329]]]])
in0Con43594 = tf.constant([[[[0.9872, 0.7608], [0.9702, 0.5778], [0.0138, 0.1235]], [[0.836, 0.1411], [0.4818, 0.849], [0.1832, 0.1497]], [[0.3552, 0.1774], [0.3252, 0.9991], [0.7219, 0.283]]]])
print (np.array2string(model.predict([in0Min27470,in1Min27470,in0Con98456,in0Lay10056,in0Con18667,in0Con17847,in0Sim23064,in0Max4157,in1Max4157,in0Con43594],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Ave8073.png')

LMin27470 = minimum_layer([[[[[0.7486], [0.527]], [[0.9535], [0.8003]]]], [[[[0.8099], [0.7587]], [[0.7824], [0.3493]]]]], Min27470), 
LRes7596 = reshape_layer(Min27470, [2, 2, 1, 1], Res7596), 
LCon10049 = conv3D_layer(Res7596, 1, 1, 1,[[[[[0.7365, 0.4929]]]]],[0, 0], 1, 1, 1, false, 1, 1, 1, Con10049), 
LSof40217 = softmax_layer(Con10049, 1, Sof40217), 
LRes86910 = reshape_layer(Sof40217, [2, 2, 2], Res86910), 
LZer92162 = zero_padding2D_layer(Res86910, 1, 0, 1, 0, Zer92162), 
LCon98456 = concatenate_layer([Zer92162,[[[[0.7335], [0.959], [0.7998]], [[0.1692], [0.9809], [0.2435]], [[0.5802], [0.9149], [0.6117]]]]], 3, Con98456), 
LLay10056 = layer_normalization_layer([[1.0768, 1.0839]], 1, 2.6998709442957964, Lay10056), 
LRes5103 = reshape_layer(Lay10056, [2, 1], Res5103), 
LRes29901 = reshape_layer(Res5103, [2, 1, 1], Res29901), 
LZer71304 = zero_padding2D_layer(Res29901, 0, 0, 1, 0, Zer71304), 
LCon18667 = concatenate_layer([Zer71304,[[[[0.8669, 0.919], [0.1475, 0.6899]], [[0.7783, 0.8646], [0.3378, 0.9588]]]]], 3, Con18667), 
LCon17847 = conv2D_layer([[[[0.0299, 0.7896], [0.158, 0.9794]], [[0.25, 0.2626], [0.457, 0.4057]]]], 2, 1,[[[[0.1512, 0.9971, 0.7579], [0.7923, 0.9602, 0.6011]]], [[[0.7176, 0.7153, 0.6512], [0.0109, 0.1607, 0.029]]]],[0, 0, 0], 1, 1, true, 1, 1, Con17847), 
LAve30548 = average_layer([Con18667,Con17847], Ave30548), 
LZer10086 = zero_padding2D_layer(Ave30548, 1, 0, 1, 0, Zer10086), 
LSim23064 = simple_rnn_layer([[[1, 7, 7], [3, 4, 9], [10, 2, 6]]],[[3, 4, 10], [9, 7, 10], [1, 2, 9]],[[5, 9, 8], [10, 3, 9], [10, 6, 8]],[7, 5, 8], Sim23064), 
LRes56155 = reshape_layer(Sim23064, [3, 1], Res56155), 
LRes73327 = reshape_layer(Res56155, [3, 1, 1], Res73327), 
LMax4157 = maximum_layer([[[[[0.4482]]]], [[[[0.5329]]]]], Max4157), 
LZer92568 = zero_padding2D_layer(Max4157, 2, 0, 0, 0, Zer92568), 
LMax32366 = maximum_layer([Res73327,Zer92568], Max32366), 
LZer31898 = zero_padding2D_layer(Max32366, 0, 0, 2, 0, Zer31898), 
LCon43594 = concatenate_layer([Zer31898,[[[[0.9872, 0.7608], [0.9702, 0.5778], [0.0138, 0.1235]], [[0.836, 0.1411], [0.4818, 0.849], [0.1832, 0.1497]], [[0.3552, 0.1774], [0.3252, 0.9991], [0.7219, 0.283]]]]], 3, Con43594), 
LMax31823 = maximum_layer([Zer10086,Con43594], Max31823), 
LAve8073 = average_layer([Con98456,Max31823], Ave8073), 
exec_layers([LMin27470,LRes7596,LCon10049,LSof40217,LRes86910,LZer92162,LCon98456,LLay10056,LRes5103,LRes29901,LZer71304,LCon18667,LCon17847,LAve30548,LZer10086,LSim23064,LRes56155,LRes73327,LMax4157,LZer92568,LMax32366,LZer31898,LCon43594,LMax31823,LAve8073],["Min27470","Res7596","Con10049","Sof40217","Res86910","Zer92162","Con98456","Lay10056","Res5103","Res29901","Zer71304","Con18667","Con17847","Ave30548","Zer10086","Sim23064","Res56155","Res73327","Max4157","Zer92568","Max32366","Zer31898","Con43594","Max31823","Ave8073"],Ave8073,"Ave8073")

Actual (Unparsed): [[[[0.0000000, 0.4936000, 0.7471500], [0.0000000, 0.4851000, 0.7684000], [0.5000000, 0.0069000, 0.4616500]], [[0.0000000, 0.4180000, 0.1551500], [0.4499843, 0.7168956, 0.9149500], [0.7663362, 0.6703290, 0.5486823]], [[0.0000000, 0.1776000, 0.3788000], [0.3145760, 0.5720133, 0.9570000], [0.7336638, 0.6000084, 0.6931066]]]]

Expected (Unparsed): [[[[0,0.4936,0.74715],[0,0.4851,0.7684],[0.5,0.0069,0.46165]],[[0,0.418,0.15515],[0.44998427318310263,0.716895553166298,0.9149499999999999],[0.7663361949726044,0.6703289896078095,0.54868231]],[[0,0.1776,0.3788],[0.31457604681689727,0.5720133343337019,0.9570000000000001],[0.7336638050273955,0.6000084528921905,0.6931066425000001]]]]

Actual:   [[[[0, 0.4936, 0.7472], [0, 0.4851, 0.7684], [0.5, 0.0069, 0.4617]], [[0, 0.418, 0.1552], [0.45, 0.7169, 0.915], [0.7664, 0.6704, 0.5487]], [[0, 0.1776, 0.3788], [0.3146, 0.5721, 0.957], [0.7337, 0.6001, 0.6932]]]]

Expected: [[[[0, 0.4936, 0.7472], [0, 0.4851, 0.7684], [0.5, 0.0069, 0.4617]], [[0, 0.418, 0.1552], [0.45, 0.7169, 0.915], [0.7664, 0.6704, 0.5487]], [[0, 0.1776, 0.3788], [0.3146, 0.5721, 0.9571], [0.7337, 0.6001, 0.6932]]]]