import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Dep48081 = tf.keras.layers.Input(shape=([2, 1, 1]))

Dep48081 = keras.layers.DepthwiseConv2D((1, 1),strides=(1, 1), padding='valid', name = 'Dep48081', )(in0Dep48081)
Loc23293 = keras.layers.LocallyConnected2D(3, (1, 1),strides=(6, 1), name = 'Loc23293', )(Dep48081)
model = tf.keras.models.Model(inputs=[in0Dep48081], outputs=Loc23293)
w = model.get_layer('Dep48081').get_weights() 
w[0] = np.array([[[[0.1035]]]])
w[1] = np.array([0])
model.get_layer('Dep48081').set_weights(w) 
w = model.get_layer('Loc23293').get_weights() 
w[0] = np.array([[[0.8478, 0.3466, 0.5366]]])
w[1] = np.array([[[0, 0, 0]]])
model.get_layer('Loc23293').set_weights(w) 
in0Dep48081 = tf.constant([[[[0.0731]], [[0.0351]]]])
print (np.array2string(model.predict([in0Dep48081],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Loc23293.png')

LDep48081 = depthwise_conv2D_layer([[[[0.0731]], [[0.0351]]]], 1, 1,[[[[0.1035]]]],[0], 1, 1, false, Dep48081), 
LLoc23293 = locally_connected2D_layer(Dep48081, 1, 1,[[[0.8478, 0.3466, 0.5366]]],[[[0, 0, 0]]], 6, 1, Loc23293), 
exec_layers([LDep48081,LLoc23293],["Dep48081","Loc23293"],Loc23293,"Loc23293")

Actual (Unparsed): [[[[0.0064143, 0.0026223, 0.0040598]]]]

Expected (Unparsed): [[[[0.00641432763,0.00262232361,0.00405983511]]]]

Actual:   [[[[0.0065, 0.0027, 0.0041]]]]

Expected: [[[[0.0065, 0.0027, 0.0041]]]]