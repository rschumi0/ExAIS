import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Dot70902 = tf.keras.layers.Input(shape=([2]))
in1Dot70902 = tf.keras.layers.Input(shape=([2]))
in0Con48706 = tf.keras.layers.Input(shape=([1, 3, 1, 2]))
in0Loc63942 = tf.keras.layers.Input(shape=([2, 1]))

Dot70902 = keras.layers.Dot(axes=(1, 1), name = 'Dot70902', )([in0Dot70902,in1Dot70902])
Res12884 = keras.layers.Reshape((1, 1), name = 'Res12884', )(Dot70902)
Res43685 = keras.layers.Reshape((1, 1, 1), name = 'Res43685', )(Res12884)
Res60650 = keras.layers.Reshape((1, 1, 1, 1), name = 'Res60650', )(Res43685)
Zer20684 = keras.layers.ZeroPadding3D(padding=((0, 0), (2, 0), (0, 0)), name = 'Zer20684', )(Res60650)
Con48706 = keras.layers.Concatenate(axis=4, name = 'Con48706', )([Zer20684,in0Con48706])
Loc63942 = keras.layers.LocallyConnected1D(4, (2),strides=(1), name = 'Loc63942', )(in0Loc63942)
Res84968 = keras.layers.Reshape((1, 4, 1), name = 'Res84968', )(Loc63942)
Res37915 = keras.layers.Reshape((1, 4, 1, 1), name = 'Res37915', )(Res84968)
Con7654 = keras.layers.Conv3D(3, (1, 2, 1),strides=(1, 1, 1), padding='valid', dilation_rate=(1, 1, 1), name = 'Con7654', )(Res37915)
Mul25590 = keras.layers.Multiply(name = 'Mul25590', )([Con48706,Con7654])
model = tf.keras.models.Model(inputs=[in0Dot70902,in1Dot70902,in0Con48706,in0Loc63942], outputs=Mul25590)
w = model.get_layer('Loc63942').get_weights() 
w[0] = np.array([[[0.1298, 0.4372, 0.4376, 0.3793], [0.1752, 0.9806, 0.6113, 0.4989]]])
w[1] = np.array([[0, 0, 0, 0]])
model.get_layer('Loc63942').set_weights(w) 
w = model.get_layer('Con7654').get_weights() 
w[0] = np.array([[[[[0.2843, 0.2118, 0.7886]]], [[[0.7179, 0.252, 0.9537]]]]])
w[1] = np.array([0, 0, 0])
model.get_layer('Con7654').set_weights(w) 
in0Dot70902 = tf.constant([[0.2653, 0.7124]])
in1Dot70902 = tf.constant([[0.4513, 0.3486]])
in0Con48706 = tf.constant([[[[[0.2094, 0.7304]], [[0.2256, 0.8589]], [[0.1949, 0.4119]]]]])
in0Loc63942 = tf.constant([[[0.3093], [0.6066]]])
print (np.array2string(model.predict([in0Dot70902,in1Dot70902,in0Con48706,in0Loc63942],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Mul25590.png')

LDot70902 = dot_layer([[0.2653, 0.7124]], [[0.4513, 0.3486]], 1, 1, Dot70902), 
LRes12884 = reshape_layer(Dot70902, [1, 1], Res12884), 
LRes43685 = reshape_layer(Res12884, [1, 1, 1], Res43685), 
LRes60650 = reshape_layer(Res43685, [1, 1, 1, 1], Res60650), 
LZer20684 = zero_padding3D_layer(Res60650, 0, 0, 2, 0, 0, 0, Zer20684), 
LCon48706 = concatenate_layer([Zer20684,[[[[[0.2094, 0.7304]], [[0.2256, 0.8589]], [[0.1949, 0.4119]]]]]], 4, Con48706), 
LLoc63942 = locally_connected1D_layer([[[0.3093], [0.6066]]], 2,[[[0.1298, 0.4372, 0.4376, 0.3793], [0.1752, 0.9806, 0.6113, 0.4989]]],[[0, 0, 0, 0]], 1, Loc63942), 
LRes84968 = reshape_layer(Loc63942, [1, 4, 1], Res84968), 
LRes37915 = reshape_layer(Res84968, [1, 4, 1, 1], Res37915), 
LCon7654 = conv3D_layer(Res37915, 1, 2, 1,[[[[[0.2843, 0.2118, 0.7886]]], [[[0.7179, 0.252, 0.9537]]]]],[0, 0, 0], 1, 1, 1, false, 1, 1, 1, Con7654), 
LMul25590 = multiply_layer([Con48706,Con7654], Mul25590), 
exec_layers([LDot70902,LRes12884,LRes43685,LRes60650,LZer20684,LCon48706,LLoc63942,LRes84968,LRes37915,LCon7654,LMul25590],["Dot70902","Res12884","Res43685","Res60650","Zer20684","Con48706","Loc63942","Res84968","Res37915","Con7654","Mul25590"],Mul25590,"Mul25590")

Actual (Unparsed): [[[[[0.0000000, 0.0450183, 0.5928845]], [[0.0000000, 0.0636597, 0.9091049]], [[0.1639339, 0.0415201, 0.3293831]]]]]

Expected (Unparsed): [[[[[0.0,0.0450182955294792,0.5928845088793441]],[[0.0,0.0636597315161856,0.9091048784241186]],[[0.16393389883579262,0.0415201410996372,0.3293831131852653]]]]]

Actual:   [[[[[0, 0.0451, 0.5929]], [[0, 0.0637, 0.9092]], [[0.164, 0.0416, 0.3294]]]]]

Expected: [[[[[0, 0.0451, 0.5929]], [[0, 0.0637, 0.9092]], [[0.164, 0.0416, 0.3294]]]]]