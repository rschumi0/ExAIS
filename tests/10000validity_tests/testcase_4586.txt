import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Cro27570 = tf.keras.layers.Input(shape=([2, 1]))
in0Up_87245 = tf.keras.layers.Input(shape=([4, 3, 1]))
in0Con24915 = tf.keras.layers.Input(shape=([8, 6, 1]))
in0Con5241 = tf.keras.layers.Input(shape=([2, 1, 1]))
in0Con46244 = tf.keras.layers.Input(shape=([8, 6, 2, 1]))
in0Min85367 = tf.keras.layers.Input(shape=([1, 2, 2, 2]))
in1Min85367 = tf.keras.layers.Input(shape=([1, 2, 2, 2]))

Cro27570 = keras.layers.Cropping1D(cropping=((0, 0)), name = 'Cro27570', )(in0Cro27570)
Res11100 = keras.layers.Reshape((2, 1, 1), name = 'Res11100', )(Cro27570)
Zer60380 = keras.layers.ZeroPadding2D(padding=((6, 0), (5, 0)), name = 'Zer60380', )(Res11100)
Up_87245 = keras.layers.UpSampling2D(size=(2, 2), name = 'Up_87245', )(in0Up_87245)
Min84795 = keras.layers.Minimum(name = 'Min84795', )([Zer60380,Up_87245])
Con24915 = keras.layers.Concatenate(axis=3, name = 'Con24915', )([Min84795,in0Con24915])
Con5241 = keras.layers.Conv2DTranspose(2, (2, 1),strides=(1, 1), padding='valid', name = 'Con5241', )(in0Con5241)
Zer35055 = keras.layers.ZeroPadding2D(padding=((5, 0), (5, 0)), name = 'Zer35055', )(Con5241)
Max73792 = keras.layers.Maximum(name = 'Max73792', )([Con24915,Zer35055])
Res4223 = keras.layers.Reshape((8, 6, 2, 1), name = 'Res4223', )(Max73792)
Con46244 = keras.layers.Concatenate(axis=4, name = 'Con46244', )([Res4223,in0Con46244])
Min85367 = keras.layers.Minimum(name = 'Min85367', )([in0Min85367,in1Min85367])
Zer85305 = keras.layers.ZeroPadding3D(padding=((7, 0), (4, 0), (0, 0)), name = 'Zer85305', )(Min85367)
Min11273 = keras.layers.Minimum(name = 'Min11273', )([Con46244,Zer85305])
Glo34513 = keras.layers.GlobalMaxPool3D(name = 'Glo34513', )(Min11273)
model = tf.keras.models.Model(inputs=[in0Cro27570,in0Up_87245,in0Con24915,in0Con5241,in0Con46244,in0Min85367,in1Min85367], outputs=Glo34513)
w = model.get_layer('Con5241').get_weights() 
w[0] = np.array([[[[0.0791], [0.1808]]], [[[0.8311], [0.4067]]]])
w[1] = np.array([0, 0])
model.get_layer('Con5241').set_weights(w) 
in0Cro27570 = tf.constant([[[1.7386], [1.1462]]])
in0Up_87245 = tf.constant([[[[1.295], [1.1336], [1.3595]], [[1.9783], [1.0901], [1.7143]], [[1.2213], [1.0008], [1.8676]], [[1.7591], [1.6678], [1.3288]]]])
in0Con24915 = tf.constant([[[[0.0195], [0.5671], [0.632], [0.8802], [0.9993], [0.6834]], [[0.4461], [0.6075], [0.7422], [0.762], [0.3261], [0.8066]], [[0.2932], [0.4741], [0.7469], [0.4671], [0.8483], [0.242]], [[0.1995], [0.4938], [0.1259], [0.1722], [0.9461], [0.0685]], [[0.538], [0.7027], [0.9167], [0.6808], [0.2737], [0.4343]], [[0.0011], [0.3619], [0.8208], [0.6958], [0.7922], [0.7564]], [[0.8972], [0.7507], [0.1767], [0.5349], [0.2415], [0.1961]], [[0.0346], [0.3152], [0.2228], [0.0282], [0.7103], [0.6933]]]])
in0Con5241 = tf.constant([[[[0.2734]], [[0.7394]]]])
in0Con46244 = tf.constant([[[[[0.171], [0.2484]], [[0.5029], [0.6736]], [[0.482], [0.6337]], [[0.572], [0.2061]], [[0.0081], [0.4162]], [[0.4861], [0.5832]]], [[[0.1929], [0.5382]], [[0.4282], [0.7384]], [[0.2341], [0.9335]], [[0.7925], [0.5821]], [[0.2139], [0.1807]], [[0.4731], [0.5882]]], [[[0.0322], [0.1095]], [[0.3959], [0.8437]], [[0.8971], [0.6982]], [[0.2032], [0.6045]], [[0.8195], [0.209]], [[0.587], [0.5295]]], [[[0.2891], [0.4036]], [[0.8852], [0.6715]], [[0.0674], [0.8478]], [[0.2044], [0.991]], [[0.8216], [0.7756]], [[0.5136], [0.6303]]], [[[0.1462], [0.7112]], [[0.8656], [0.4352]], [[0.372], [0.0702]], [[0.1445], [0.2441]], [[0.4448], [0.2547]], [[0.5148], [0.2774]]], [[[0.0705], [0.3383]], [[0.0491], [0.5559]], [[0.2731], [0.2975]], [[0.8543], [0.652]], [[0.4842], [0.8853]], [[0.377], [0.2344]]], [[[0.2977], [0.6689]], [[0.4757], [0.8064]], [[0.0566], [0.456]], [[0.2716], [0.7578]], [[0.5171], [0.3169]], [[0.757], [0.3489]]], [[[0.9314], [0.683]], [[0.6286], [0.532]], [[0.0291], [0.541]], [[0.8426], [0.5737]], [[0.5396], [0.5808]], [[0.9387], [0.2909]]]]])
in0Min85367 = tf.constant([[[[[0.8359, 0.9923], [0.9934, 0.2546]], [[0.6857, 0.6453], [0.0436, 0.3274]]]]])
in1Min85367 = tf.constant([[[[[0.3132, 0.1128], [0.7885, 0.8956]], [[0.6503, 0.3052], [0.3678, 0.8276]]]]])
print (np.array2string(model.predict([in0Cro27570,in0Up_87245,in0Con24915,in0Con5241,in0Con46244,in0Min85367,in1Min85367],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Glo34513.png')

LCro27570 = cropping1D_layer([[[1.7386], [1.1462]]], 0, 0, Cro27570), 
LRes11100 = reshape_layer(Cro27570, [2, 1, 1], Res11100), 
LZer60380 = zero_padding2D_layer(Res11100, 6, 0, 5, 0, Zer60380), 
LUp_87245 = up_sampling2D_layer([[[[1.295], [1.1336], [1.3595]], [[1.9783], [1.0901], [1.7143]], [[1.2213], [1.0008], [1.8676]], [[1.7591], [1.6678], [1.3288]]]], 2, 2, Up_87245), 
LMin84795 = minimum_layer([Zer60380,Up_87245], Min84795), 
LCon24915 = concatenate_layer([Min84795,[[[[0.0195], [0.5671], [0.632], [0.8802], [0.9993], [0.6834]], [[0.4461], [0.6075], [0.7422], [0.762], [0.3261], [0.8066]], [[0.2932], [0.4741], [0.7469], [0.4671], [0.8483], [0.242]], [[0.1995], [0.4938], [0.1259], [0.1722], [0.9461], [0.0685]], [[0.538], [0.7027], [0.9167], [0.6808], [0.2737], [0.4343]], [[0.0011], [0.3619], [0.8208], [0.6958], [0.7922], [0.7564]], [[0.8972], [0.7507], [0.1767], [0.5349], [0.2415], [0.1961]], [[0.0346], [0.3152], [0.2228], [0.0282], [0.7103], [0.6933]]]]], 3, Con24915), 
LCon5241 = conv2D_transpose_layer([[[[0.2734]], [[0.7394]]]], 2, 1,[[[[0.0791], [0.1808]]], [[[0.8311], [0.4067]]]],[0, 0], 1, 1, false, Con5241), 
LZer35055 = zero_padding2D_layer(Con5241, 5, 0, 5, 0, Zer35055), 
LMax73792 = maximum_layer([Con24915,Zer35055], Max73792), 
LRes4223 = reshape_layer(Max73792, [8, 6, 2, 1], Res4223), 
LCon46244 = concatenate_layer([Res4223,[[[[[0.171], [0.2484]], [[0.5029], [0.6736]], [[0.482], [0.6337]], [[0.572], [0.2061]], [[0.0081], [0.4162]], [[0.4861], [0.5832]]], [[[0.1929], [0.5382]], [[0.4282], [0.7384]], [[0.2341], [0.9335]], [[0.7925], [0.5821]], [[0.2139], [0.1807]], [[0.4731], [0.5882]]], [[[0.0322], [0.1095]], [[0.3959], [0.8437]], [[0.8971], [0.6982]], [[0.2032], [0.6045]], [[0.8195], [0.209]], [[0.587], [0.5295]]], [[[0.2891], [0.4036]], [[0.8852], [0.6715]], [[0.0674], [0.8478]], [[0.2044], [0.991]], [[0.8216], [0.7756]], [[0.5136], [0.6303]]], [[[0.1462], [0.7112]], [[0.8656], [0.4352]], [[0.372], [0.0702]], [[0.1445], [0.2441]], [[0.4448], [0.2547]], [[0.5148], [0.2774]]], [[[0.0705], [0.3383]], [[0.0491], [0.5559]], [[0.2731], [0.2975]], [[0.8543], [0.652]], [[0.4842], [0.8853]], [[0.377], [0.2344]]], [[[0.2977], [0.6689]], [[0.4757], [0.8064]], [[0.0566], [0.456]], [[0.2716], [0.7578]], [[0.5171], [0.3169]], [[0.757], [0.3489]]], [[[0.9314], [0.683]], [[0.6286], [0.532]], [[0.0291], [0.541]], [[0.8426], [0.5737]], [[0.5396], [0.5808]], [[0.9387], [0.2909]]]]]], 4, Con46244), 
LMin85367 = minimum_layer([[[[[[0.8359, 0.9923], [0.9934, 0.2546]], [[0.6857, 0.6453], [0.0436, 0.3274]]]]], [[[[[0.3132, 0.1128], [0.7885, 0.8956]], [[0.6503, 0.3052], [0.3678, 0.8276]]]]]], Min85367), 
LZer85305 = zero_padding3D_layer(Min85367, 7, 0, 4, 0, 0, 0, Zer85305), 
LMin11273 = minimum_layer([Con46244,Zer85305], Min11273), 
LGlo34513 = global_max_pool3D_layer(Min11273, Glo34513), 
exec_layers([LCro27570,LRes11100,LZer60380,LUp_87245,LMin84795,LCon24915,LCon5241,LZer35055,LMax73792,LRes4223,LCon46244,LMin85367,LZer85305,LMin11273,LGlo34513],["Cro27570","Res11100","Zer60380","Up_87245","Min84795","Con24915","Con5241","Zer35055","Max73792","Res4223","Con46244","Min85367","Zer85305","Min11273","Glo34513"],Glo34513,"Glo34513")

Actual (Unparsed): [[0.7103000, 0.3052000]]

Expected (Unparsed): [[0.7103,0.3052]]

Actual:   [[0.7103, 0.3052]]

Expected: [[0.7103, 0.3052]]