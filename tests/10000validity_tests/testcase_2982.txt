import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Add56232 = tf.keras.layers.Input(shape=([2, 2]))
in1Add56232 = tf.keras.layers.Input(shape=([2, 2]))

Add56232 = keras.layers.Add(name = 'Add56232', )([in0Add56232,in1Add56232])
Res65072 = keras.layers.Reshape((2, 2, 1), name = 'Res65072', )(Add56232)
Con82404 = keras.layers.Conv2D(4, (1, 1),strides=(1, 1), padding='valid', dilation_rate=(1, 1), name = 'Con82404', )(Res65072)
model = tf.keras.models.Model(inputs=[in0Add56232,in1Add56232], outputs=Con82404)
w = model.get_layer('Con82404').get_weights() 
w[0] = np.array([[[[0.6407, 0.3363, 0.8355, 0.0638]]]])
w[1] = np.array([0, 0, 0, 0])
model.get_layer('Con82404').set_weights(w) 
in0Add56232 = tf.constant([[[0.1574, 0.263], [0.3596, 0.9865]]])
in1Add56232 = tf.constant([[[0.7334, 0.8497], [0.3692, 0.6722]]])
print (np.array2string(model.predict([in0Add56232,in1Add56232],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Con82404.png')

LAdd56232 = add_layer([[[[0.1574, 0.263], [0.3596, 0.9865]]], [[[0.7334, 0.8497], [0.3692, 0.6722]]]], Add56232), 
LRes65072 = reshape_layer(Add56232, [2, 2, 1], Res65072), 
LCon82404 = conv2D_layer(Res65072, 1, 1,[[[[0.6407, 0.3363, 0.8355, 0.0638]]]],[0, 0, 0, 0], 1, 1, false, 1, 1, Con82404), 
exec_layers([LAdd56232,LRes65072,LCon82404],["Add56232","Res65072","Con82404"],Con82404,"Con82404")

Actual (Unparsed): [[[[0.5707355, 0.2995760, 0.7442634, 0.0568330], [0.7129069, 0.3742010, 0.9296608, 0.0709903]], [[0.4669422, 0.2450954, 0.6089124, 0.0464974], [1.0627291, 0.5578208, 1.3858439, 0.1058251]]]]

Expected (Unparsed): [[[[0.57073556,0.29957604,0.7442634,0.05683304],[0.7129068900000001,0.37420101,0.9296608500000001,0.07099026]],[[0.46694215999999994,0.24509543999999994,0.6089123999999999,0.04649743999999999],[1.0627290900000002,0.5578208100000001,1.38584385,0.10582506]]]]

Actual:   [[[[0.5708, 0.2996, 0.7443, 0.0569], [0.713, 0.3743, 0.9297, 0.071]], [[0.467, 0.2451, 0.609, 0.0465], [1.0628, 0.5579, 1.3859, 0.1059]]]]

Expected: [[[[0.5708, 0.2996, 0.7443, 0.0569], [0.713, 0.3743, 0.9297, 0.071]], [[0.467, 0.2451, 0.609, 0.0465], [1.0628, 0.5579, 1.3859, 0.1059]]]]