import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Dot47373 = tf.keras.layers.Input(shape=([2]))
in1Dot47373 = tf.keras.layers.Input(shape=([2]))
in0Con14271 = tf.keras.layers.Input(shape=([2]))
in0Sub43723 = tf.keras.layers.Input(shape=([3]))
in1Sub43723 = tf.keras.layers.Input(shape=([3]))
in0Con92196 = tf.keras.layers.Input(shape=([1, 17]))
in0Sub59375 = tf.keras.layers.Input(shape=([3]))
in1Sub59375 = tf.keras.layers.Input(shape=([3]))
in0Sub50561 = tf.keras.layers.Input(shape=([3, 3, 3, 2]))
in1Sub50561 = tf.keras.layers.Input(shape=([3, 3, 3, 2]))

Dot47373 = keras.layers.Dot(axes=(1, 1), name = 'Dot47373', )([in0Dot47373,in1Dot47373])
Res61073 = keras.layers.Reshape((1, 1), name = 'Res61073', )(Dot47373)
Glo23093 = keras.layers.GlobalMaxPool1D(name = 'Glo23093', )(Res61073)
Con14271 = keras.layers.Concatenate(axis=1, name = 'Con14271', )([Glo23093,in0Con14271])
Sub43723 = keras.layers.Subtract(name = 'Sub43723', )([in0Sub43723,in1Sub43723])
Add64156 = keras.layers.Add(name = 'Add64156', )([Con14271,Sub43723])
Res21044 = keras.layers.Reshape((3, 1), name = 'Res21044', )(Add64156)
Glo49987 = keras.layers.GlobalAveragePooling1D(name = 'Glo49987', )(Res21044)
Res33919 = keras.layers.Reshape((1, 1), name = 'Res33919', )(Glo49987)
Con92196 = keras.layers.Concatenate(axis=2, name = 'Con92196', )([Res33919,in0Con92196])
Sub59375 = keras.layers.Subtract(name = 'Sub59375', )([in0Sub59375,in1Sub59375])
Res28678 = keras.layers.Reshape((3, 1), name = 'Res28678', )(Sub59375)
Cro39927 = keras.layers.Cropping1D(cropping=((1, 1)), name = 'Cro39927', )(Res28678)
Zer75917 = keras.layers.ZeroPadding1D(padding=((2, 0)), name = 'Zer75917', )(Cro39927)
Sub50561 = keras.layers.Subtract(name = 'Sub50561', )([in0Sub50561,in1Sub50561])
Res33110 = keras.layers.Reshape((3, 3, 6), name = 'Res33110', )(Sub50561)
Res62203 = keras.layers.Reshape((3, 18), name = 'Res62203', )(Res33110)
Dot18966 = keras.layers.Dot(axes=(1, 1), name = 'Dot18966', )([Zer75917,Res62203])
Min16998 = keras.layers.Minimum(name = 'Min16998', )([Con92196,Dot18966])
model = tf.keras.models.Model(inputs=[in0Dot47373,in1Dot47373,in0Con14271,in0Sub43723,in1Sub43723,in0Con92196,in0Sub59375,in1Sub59375,in0Sub50561,in1Sub50561], outputs=Min16998)
in0Dot47373 = tf.constant([[0.8299, 0.2039]])
in1Dot47373 = tf.constant([[0.7726, 0.3821]])
in0Con14271 = tf.constant([[0.6628, 0.5654]])
in0Sub43723 = tf.constant([[0.3634, 0.9246, 0.1967]])
in1Sub43723 = tf.constant([[0.5338, 0.9689, 0.9296]])
in0Con92196 = tf.constant([[[0.4596, 0.1451, 0.4099, 0.8056, 0.1029, 0.7475, 0.7629, 0.1812, 0.5141, 0.8404, 0.653, 0.6421, 0.2941, 0.1883, 0.1936, 0.4577, 0.3406]]])
in0Sub59375 = tf.constant([[0.9914, 0.4715, 0.8492]])
in1Sub59375 = tf.constant([[0.2553, 0.3366, 0.9849]])
in0Sub50561 = tf.constant([[[[[0.6103, 0.4158], [0.3761, 0.072], [0.6249, 0.0671]], [[0.8833, 0.7984], [0.4458, 0.6097], [0.5565, 0.1161]], [[0.8418, 0.105], [0.4461, 0.935], [0.651, 0.2862]]], [[[0.279, 0.4132], [0.7917, 0.6347], [0.7314, 0.3856]], [[0.4534, 0.4602], [0.0264, 0.085], [0.7034, 0.6772]], [[0.582, 0.8288], [0.4851, 0.499], [0.8209, 0.1398]]], [[[0.2615, 0.5865], [0.6693, 0.8498], [0.3602, 0.2831]], [[0.7137, 0.0956], [0.4153, 0.442], [0.4694, 0.7574]], [[0.1689, 0.0116], [0.7159, 0.8127], [0.2937, 0.9797]]]]])
in1Sub50561 = tf.constant([[[[[0.4, 0.2844], [0.8299, 0.5018], [0.1748, 0.9446]], [[0.292, 0.0341], [0.2483, 0.7051], [0.4913, 0.0793]], [[0.8476, 0.6695], [0.6486, 0.7133], [0.2684, 0.1568]]], [[[0.4234, 0.4064], [0.1796, 0.6098], [0.0756, 0.7805]], [[0.5766, 0.1991], [0.0925, 0.8471], [0.5373, 0.1027]], [[0.2624, 0.9642], [0.725, 0.8969], [0.3599, 0.2156]]], [[[0.4034, 0.2297], [0.3162, 0.1697], [0.5805, 0.9624]], [[0.9938, 0.0066], [0.785, 0.2667], [0.4574, 0.8147]], [[0.8888, 0.7399], [0.9396, 0.4545], [0.3413, 0.4634]]]]])
print (np.array2string(model.predict([in0Dot47373,in1Dot47373,in0Con14271,in0Sub43723,in1Sub43723,in0Con92196,in0Sub59375,in1Sub59375,in0Sub50561,in1Sub50561],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Min16998.png')

LDot47373 = dot_layer([[0.8299, 0.2039]], [[0.7726, 0.3821]], 1, 1, Dot47373), 
LRes61073 = reshape_layer(Dot47373, [1, 1], Res61073), 
LGlo23093 = global_max_pool1D_layer(Res61073, Glo23093), 
LCon14271 = concatenate_layer([Glo23093,[[0.6628, 0.5654]]], 1, Con14271), 
LSub43723 = subtract_layer([[0.3634, 0.9246, 0.1967]], [[0.5338, 0.9689, 0.9296]], Sub43723), 
LAdd64156 = add_layer([Con14271,Sub43723], Add64156), 
LRes21044 = reshape_layer(Add64156, [3, 1], Res21044), 
LGlo49987 = global_average_pooling1D_layer(Res21044, Glo49987), 
LRes33919 = reshape_layer(Glo49987, [1, 1], Res33919), 
LCon92196 = concatenate_layer([Res33919,[[[0.4596, 0.1451, 0.4099, 0.8056, 0.1029, 0.7475, 0.7629, 0.1812, 0.5141, 0.8404, 0.653, 0.6421, 0.2941, 0.1883, 0.1936, 0.4577, 0.3406]]]], 2, Con92196), 
LSub59375 = subtract_layer([[0.9914, 0.4715, 0.8492]], [[0.2553, 0.3366, 0.9849]], Sub59375), 
LRes28678 = reshape_layer(Sub59375, [3, 1], Res28678), 
LCro39927 = cropping1D_layer(Res28678, 1, 1, Cro39927), 
LZer75917 = zero_padding1D_layer(Cro39927, 2, 0, Zer75917), 
LSub50561 = subtract_layer([[[[[0.6103, 0.4158], [0.3761, 0.072], [0.6249, 0.0671]], [[0.8833, 0.7984], [0.4458, 0.6097], [0.5565, 0.1161]], [[0.8418, 0.105], [0.4461, 0.935], [0.651, 0.2862]]], [[[0.279, 0.4132], [0.7917, 0.6347], [0.7314, 0.3856]], [[0.4534, 0.4602], [0.0264, 0.085], [0.7034, 0.6772]], [[0.582, 0.8288], [0.4851, 0.499], [0.8209, 0.1398]]], [[[0.2615, 0.5865], [0.6693, 0.8498], [0.3602, 0.2831]], [[0.7137, 0.0956], [0.4153, 0.442], [0.4694, 0.7574]], [[0.1689, 0.0116], [0.7159, 0.8127], [0.2937, 0.9797]]]]], [[[[[0.4, 0.2844], [0.8299, 0.5018], [0.1748, 0.9446]], [[0.292, 0.0341], [0.2483, 0.7051], [0.4913, 0.0793]], [[0.8476, 0.6695], [0.6486, 0.7133], [0.2684, 0.1568]]], [[[0.4234, 0.4064], [0.1796, 0.6098], [0.0756, 0.7805]], [[0.5766, 0.1991], [0.0925, 0.8471], [0.5373, 0.1027]], [[0.2624, 0.9642], [0.725, 0.8969], [0.3599, 0.2156]]], [[[0.4034, 0.2297], [0.3162, 0.1697], [0.5805, 0.9624]], [[0.9938, 0.0066], [0.785, 0.2667], [0.4574, 0.8147]], [[0.8888, 0.7399], [0.9396, 0.4545], [0.3413, 0.4634]]]]], Sub50561), 
LRes33110 = reshape_layer(Sub50561, [3, 3, 6], Res33110), 
LRes62203 = reshape_layer(Res33110, [3, 18], Res62203), 
LDot18966 = dot_layer(Zer75917,Res62203, 1, 1, Dot18966), 
LMin16998 = minimum_layer([Con92196,Dot18966], Min16998), 
exec_layers([LDot47373,LRes61073,LGlo23093,LCon14271,LSub43723,LAdd64156,LRes21044,LGlo49987,LRes33919,LCon92196,LSub59375,LRes28678,LCro39927,LZer75917,LSub50561,LRes33110,LRes62203,LDot18966,LMin16998],["Dot47373","Res61073","Glo23093","Con14271","Sub43723","Add64156","Res21044","Glo49987","Res33919","Con92196","Sub59375","Res28678","Cro39927","Zer75917","Sub50561","Res33110","Res62203","Dot18966","Min16998"],Min16998,"Min16998")

Actual (Unparsed): [[[-0.0191423, 0.0481323, 0.0476332, 0.0917455, -0.0297185, -0.0916376, -0.0377855, 0.0120061, -0.0498725, 0.0236480, 0.0016188, -0.0077298, -0.0971145, -0.0982477, -0.0301771, 0.0483212, -0.0064212, 0.0696489]]]

Expected (Unparsed): [[[-0.019142309999999992,0.048132319999999985,0.04763318999999999,0.09174548999999999,-0.02971846999999999,-0.09163756999999997,-0.03778548999999999,0.012006099999999999,-0.04987252999999999,0.023647969999999994,0.001618800000000001,-0.00772977,-0.09711450999999997,-0.09824766999999997,-0.030177129999999993,0.048321179999999984,-0.006421239999999995,0.06964886999999997]]]

Actual:   [[[-0.0191, 0.0482, 0.0477, 0.0918, -0.0297, -0.0916, -0.0377, 0.0121, -0.0498, 0.0237, 0.0017, -0.0077, -0.0971, -0.0982, -0.0301, 0.0484, -0.0064, 0.0697]]]

Expected: [[[-0.0191, 0.0482, 0.0477, 0.0918, -0.0297, -0.0916, -0.0377, 0.0121, -0.0498, 0.0237, 0.0017, -0.0077, -0.0971, -0.0982, -0.0301, 0.0484, -0.0064, 0.0697]]]