import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Mul48087 = tf.keras.layers.Input(shape=([1, 2]))
in1Mul48087 = tf.keras.layers.Input(shape=([1, 2]))
in0Max29654 = tf.keras.layers.Input(shape=([1, 2]))
in1Max29654 = tf.keras.layers.Input(shape=([1, 2]))

Mul48087 = keras.layers.Multiply(name = 'Mul48087', )([in0Mul48087,in1Mul48087])
Res3841 = keras.layers.Reshape((1, 2, 1), name = 'Res3841', )(Mul48087)
Cro82841 = keras.layers.Cropping2D(cropping=((0, 0), (0, 0)), name = 'Cro82841', )(Res3841)
Res6532 = keras.layers.Reshape((1, 2), name = 'Res6532', )(Cro82841)
Max29654 = keras.layers.Maximum(name = 'Max29654', )([in0Max29654,in1Max29654])
Min44650 = keras.layers.Minimum(name = 'Min44650', )([Res6532,Max29654])
Sim20006 = keras.layers.SimpleRNN(3,name = 'Sim20006', )(Min44650)
model = tf.keras.models.Model(inputs=[in0Mul48087,in1Mul48087,in0Max29654,in1Max29654], outputs=Sim20006)
w = model.get_layer('Sim20006').get_weights() 
w[0] = np.array([[2, 6, 8], [2, 4, 2]])
w[1] = np.array([[8, 10, 10], [7, 8, 9], [7, 5, 6]])
w[2] = np.array([7, 8, 9])
model.get_layer('Sim20006').set_weights(w) 
in0Mul48087 = tf.constant([[[0.3845, 0.8259]]])
in1Mul48087 = tf.constant([[[0.0636, 0.7965]]])
in0Max29654 = tf.constant([[[0.4576, 0.8628]]])
in1Max29654 = tf.constant([[[0.7965, 0.0418]]])
print (np.array2string(model.predict([in0Mul48087,in1Mul48087,in0Max29654,in1Max29654],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Sim20006.png')

LMul48087 = multiply_layer([[[[0.3845, 0.8259]]], [[[0.0636, 0.7965]]]], Mul48087), 
LRes3841 = reshape_layer(Mul48087, [1, 2, 1], Res3841), 
LCro82841 = cropping2D_layer(Res3841, 0, 0, 0, 0, Cro82841), 
LRes6532 = reshape_layer(Cro82841, [1, 2], Res6532), 
LMax29654 = maximum_layer([[[[0.4576, 0.8628]]], [[[0.7965, 0.0418]]]], Max29654), 
LMin44650 = minimum_layer([Res6532,Max29654], Min44650), 
LSim20006 = simple_rnn_layer(Min44650,[[2, 6, 8], [2, 4, 2]],[[8, 10, 10], [7, 8, 9], [7, 5, 6]],[7, 8, 9], Sim20006), 
exec_layers([LMul48087,LRes3841,LCro82841,LRes6532,LMax29654,LMin44650,LSim20006],["Mul48087","Res3841","Cro82841","Res6532","Max29654","Min44650","Sim20006"],Sim20006,"Sim20006")

Actual (Unparsed): [[0.9999999, 1.0000000, 1.0000000]]

Expected (Unparsed): [[0.9999998914426328,0.9999999991303568,0.9999999985173539]]

Actual:   [[1, 1, 1]]

Expected: [[1, 1, 1]]