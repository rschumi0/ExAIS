import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Mul47245 = tf.keras.layers.Input(shape=([2, 1, 2]))
in1Mul47245 = tf.keras.layers.Input(shape=([2, 1, 2]))

Mul47245 = keras.layers.Multiply(name = 'Mul47245', )([in0Mul47245,in1Mul47245])
Ave84427 = keras.layers.AveragePooling2D(pool_size=(1, 1), strides=(1, 1), padding='valid', name = 'Ave84427', )(Mul47245)
Res4174 = keras.layers.Reshape((2, 2), name = 'Res4174', )(Ave84427)
Cro34224 = keras.layers.Cropping1D(cropping=((0, 1)), name = 'Cro34224', )(Res4174)
model = tf.keras.models.Model(inputs=[in0Mul47245,in1Mul47245], outputs=Cro34224)
in0Mul47245 = tf.constant([[[[0.4364, 0.0573]], [[0.098, 0.2302]]]])
in1Mul47245 = tf.constant([[[[0.3761, 0.499]], [[0.7328, 0.4851]]]])
print (np.array2string(model.predict([in0Mul47245,in1Mul47245],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Cro34224.png')

LMul47245 = multiply_layer([[[[[0.4364, 0.0573]], [[0.098, 0.2302]]]], [[[[0.3761, 0.499]], [[0.7328, 0.4851]]]]], Mul47245), 
LAve84427 = average_pooling2D_layer(Mul47245, 1, 1, 1, 1, false, Ave84427), 
LRes4174 = reshape_layer(Ave84427, [2, 2], Res4174), 
LCro34224 = cropping1D_layer(Res4174, 0, 1, Cro34224), 
exec_layers([LMul47245,LAve84427,LRes4174,LCro34224],["Mul47245","Ave84427","Res4174","Cro34224"],Cro34224,"Cro34224")

Actual (Unparsed): [[[0.1641300, 0.0285927]]]

Expected (Unparsed): [[[0.16413004,0.0285927]]]

Actual:   [[[0.1642, 0.0286]]]

Expected: [[[0.1642, 0.0286]]]