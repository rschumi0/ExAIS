import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0ReL37949 = tf.keras.layers.Input(shape=([1, 1, 2]))

ReL37949 = keras.layers.ReLU(max_value=1.2398170575561887, negative_slope=2.6353692975673098, threshold=6.4313914461386155, name = 'ReL37949', input_shape=(1, 1, 2))(in0ReL37949)
Res92194 = keras.layers.Reshape((1, 2), name = 'Res92194', )(ReL37949)
Sim38976 = keras.layers.SimpleRNN(2,name = 'Sim38976', )(Res92194)
Res13845 = keras.layers.Reshape((2, 1), name = 'Res13845', )(Sim38976)
Cro41471 = keras.layers.Cropping1D(cropping=((0, 1)), name = 'Cro41471', )(Res13845)
model = tf.keras.models.Model(inputs=[in0ReL37949], outputs=Cro41471)
w = model.get_layer('Sim38976').get_weights() 
w[0] = np.array([[2, 7], [10, 4]])
w[1] = np.array([[6, 3], [7, 8]])
w[2] = np.array([1, 4])
model.get_layer('Sim38976').set_weights(w) 
in0ReL37949 = tf.constant([[[[0.0778, 0.0431]]]])
print (np.array2string(model.predict([in0ReL37949],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Cro41471.png')

LReL37949 = relu_layer([[[[0.0778, 0.0431]]]], 1.2398170575561887, 2.6353692975673098, 6.4313914461386155, ReL37949), 
LRes92194 = reshape_layer(ReL37949, [1, 2], Res92194), 
LSim38976 = simple_rnn_layer(Res92194,[[2, 7], [10, 4]],[[6, 3], [7, 8]],[1, 4], Sim38976), 
LRes13845 = reshape_layer(Sim38976, [2, 1], Res13845), 
LCro41471 = cropping1D_layer(Res13845, 0, 1, Cro41471), 
exec_layers([LReL37949,LRes92194,LSim38976,LRes13845,LCro41471],["ReL37949","Res92194","Sim38976","Res13845","Cro41471"],Cro41471,"Cro41471")

Actual (Unparsed): [[[-1.0000000]]]

Expected (Unparsed): [[[-1.0]]]

Actual:   [[[-1]]]

Expected: [[[-1]]]