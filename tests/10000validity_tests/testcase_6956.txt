import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Dot7667 = tf.keras.layers.Input(shape=([2, 2]))
in1Dot7667 = tf.keras.layers.Input(shape=([2, 2]))
in0Con73475 = tf.keras.layers.Input(shape=([8, 2]))
in0Add58461 = tf.keras.layers.Input(shape=([2, 1]))
in1Add58461 = tf.keras.layers.Input(shape=([2, 1]))
in0Con86759 = tf.keras.layers.Input(shape=([2, 1]))
in0Add94401 = tf.keras.layers.Input(shape=([2, 2]))
in1Add94401 = tf.keras.layers.Input(shape=([2, 2]))
in0Con43319 = tf.keras.layers.Input(shape=([8, 2]))
in0Up_13261 = tf.keras.layers.Input(shape=([4, 4]))

Dot7667 = keras.layers.Dot(axes=(1, 1), name = 'Dot7667', )([in0Dot7667,in1Dot7667])
Zer19556 = keras.layers.ZeroPadding1D(padding=((6, 0)), name = 'Zer19556', )(Dot7667)
Con73475 = keras.layers.Concatenate(axis=2, name = 'Con73475', )([Zer19556,in0Con73475])
Add58461 = keras.layers.Add(name = 'Add58461', )([in0Add58461,in1Add58461])
Con86759 = keras.layers.Concatenate(axis=2, name = 'Con86759', )([Add58461,in0Con86759])
Add94401 = keras.layers.Add(name = 'Add94401', )([in0Add94401,in1Add94401])
Mul36362 = keras.layers.Multiply(name = 'Mul36362', )([Con86759,Add94401])
Zer25413 = keras.layers.ZeroPadding1D(padding=((6, 0)), name = 'Zer25413', )(Mul36362)
Con43319 = keras.layers.Concatenate(axis=2, name = 'Con43319', )([Zer25413,in0Con43319])
Up_13261 = keras.layers.UpSampling1D(size=(2), name = 'Up_13261', )(in0Up_13261)
Max15620 = keras.layers.Maximum(name = 'Max15620', )([Con43319,Up_13261])
Max81647 = keras.layers.Maximum(name = 'Max81647', )([Con73475,Max15620])
model = tf.keras.models.Model(inputs=[in0Dot7667,in1Dot7667,in0Con73475,in0Add58461,in1Add58461,in0Con86759,in0Add94401,in1Add94401,in0Con43319,in0Up_13261], outputs=Max81647)
in0Dot7667 = tf.constant([[[0.3839, 0.4154], [0.3179, 0.6493]]])
in1Dot7667 = tf.constant([[[0.5397, 0.1123], [0.1393, 0.424]]])
in0Con73475 = tf.constant([[[0.243, 0.4271], [0.32, 0.2755], [0.9805, 0.2982], [0.5034, 0.4842], [0.1653, 0.1568], [0.2369, 0.601], [0.0286, 0.8668], [0.4154, 0.7128]]])
in0Add58461 = tf.constant([[[0.1909], [0.8609]]])
in1Add58461 = tf.constant([[[0.7101], [0.6078]]])
in0Con86759 = tf.constant([[[0.5123], [0.3138]]])
in0Add94401 = tf.constant([[[0.8825, 0.3744], [0.4575, 0.1029]]])
in1Add94401 = tf.constant([[[0.2519, 0.2011], [0.3636, 0.1128]]])
in0Con43319 = tf.constant([[[0.0833, 0.0603], [0.22, 0.1476], [0.9634, 0.8178], [0.7727, 0.168], [0.0639, 0.4009], [0.2357, 0.4873], [0.0216, 0.4706], [0.2941, 0.334]]])
in0Up_13261 = tf.constant([[[1.2795, 1.3616, 1.1356, 1.0918], [1.9318, 1.7749, 1.2336, 1.1722], [1.4493, 1.9393, 1.0185, 1.8579], [1.0929, 1.5857, 1.5456, 1.8596]]])
print (np.array2string(model.predict([in0Dot7667,in1Dot7667,in0Con73475,in0Add58461,in1Add58461,in0Con86759,in0Add94401,in1Add94401,in0Con43319,in0Up_13261],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Max81647.png')

LDot7667 = dot_layer([[[0.3839, 0.4154], [0.3179, 0.6493]]], [[[0.5397, 0.1123], [0.1393, 0.424]]], 1, 1, Dot7667), 
LZer19556 = zero_padding1D_layer(Dot7667, 6, 0, Zer19556), 
LCon73475 = concatenate_layer([Zer19556,[[[0.243, 0.4271], [0.32, 0.2755], [0.9805, 0.2982], [0.5034, 0.4842], [0.1653, 0.1568], [0.2369, 0.601], [0.0286, 0.8668], [0.4154, 0.7128]]]], 2, Con73475), 
LAdd58461 = add_layer([[[[0.1909], [0.8609]]], [[[0.7101], [0.6078]]]], Add58461), 
LCon86759 = concatenate_layer([Add58461,[[[0.5123], [0.3138]]]], 2, Con86759), 
LAdd94401 = add_layer([[[[0.8825, 0.3744], [0.4575, 0.1029]]], [[[0.2519, 0.2011], [0.3636, 0.1128]]]], Add94401), 
LMul36362 = multiply_layer([Con86759,Add94401], Mul36362), 
LZer25413 = zero_padding1D_layer(Mul36362, 6, 0, Zer25413), 
LCon43319 = concatenate_layer([Zer25413,[[[0.0833, 0.0603], [0.22, 0.1476], [0.9634, 0.8178], [0.7727, 0.168], [0.0639, 0.4009], [0.2357, 0.4873], [0.0216, 0.4706], [0.2941, 0.334]]]], 2, Con43319), 
LUp_13261 = up_sampling1D_layer([[[1.2795, 1.3616, 1.1356, 1.0918], [1.9318, 1.7749, 1.2336, 1.1722], [1.4493, 1.9393, 1.0185, 1.8579], [1.0929, 1.5857, 1.5456, 1.8596]]], 2, Up_13261), 
LMax15620 = maximum_layer([Con43319,Up_13261], Max15620), 
LMax81647 = maximum_layer([Con73475,Max15620], Max81647), 
exec_layers([LDot7667,LZer19556,LCon73475,LAdd58461,LCon86759,LAdd94401,LMul36362,LZer25413,LCon43319,LUp_13261,LMax15620,LMax81647],["Dot7667","Zer19556","Con73475","Add58461","Con86759","Add94401","Mul36362","Zer25413","Con43319","Up_13261","Max15620","Max81647"],Max81647,"Max81647")

Actual (Unparsed): [[[1.2795000, 1.3616000, 1.1356000, 1.0918000], [1.2795000, 1.3616000, 1.1356000, 1.0918000], [1.9318000, 1.7749000, 1.2336000, 1.1722000], [1.9318000, 1.7749000, 1.2336000, 1.1722000], [1.4493001, 1.9392999, 1.0185000, 1.8579000], [1.4493001, 1.9392999, 1.0185000, 1.8579000], [1.0929000, 1.5857000, 1.5456001, 1.8595999], [1.2059496, 1.5857000, 1.5456001, 1.8595999]]]

Expected (Unparsed): [[[1.2795,1.3616,1.1356,1.0918],[1.2795,1.3616,1.1356,1.0918],[1.9318,1.7749,1.2336,1.1722],[1.9318,1.7749,1.2336,1.1722],[1.4493,1.9393,1.0185,1.8579],[1.4493,1.9393,1.0185,1.8579],[1.0929,1.5857,1.5456,1.8596],[1.20594957,1.5857,1.5456,1.8596]]]

Actual:   [[[1.2795, 1.3616, 1.1356, 1.0918], [1.2795, 1.3616, 1.1356, 1.0918], [1.9318, 1.7749, 1.2336, 1.1722], [1.9318, 1.7749, 1.2336, 1.1722], [1.4494, 1.9393, 1.0185, 1.8579], [1.4494, 1.9393, 1.0185, 1.8579], [1.0929, 1.5857, 1.5457, 1.8596], [1.206, 1.5857, 1.5457, 1.8596]]]

Expected: [[[1.2795, 1.3616, 1.1356, 1.0918], [1.2795, 1.3616, 1.1356, 1.0918], [1.9318, 1.7749, 1.2336, 1.1722], [1.9318, 1.7749, 1.2336, 1.1722], [1.4493, 1.9393, 1.0185, 1.8579], [1.4493, 1.9393, 1.0185, 1.8579], [1.0929, 1.5857, 1.5456, 1.8596], [1.206, 1.5857, 1.5456, 1.8596]]]