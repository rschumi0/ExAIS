import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Con61437 = tf.keras.layers.Input(shape=([2, 2, 1, 1]))

Con61437 = keras.layers.Conv3D(4, (2, 2, 1),strides=(1, 1, 1), padding='same', dilation_rate=(1, 1, 1), name = 'Con61437', )(in0Con61437)
Res72133 = keras.layers.Reshape((2, 2, 4), name = 'Res72133', )(Con61437)
Max23520 = keras.layers.MaxPool2D(pool_size=(2, 1), name = 'Max23520', )(Res72133)
model = tf.keras.models.Model(inputs=[in0Con61437], outputs=Max23520)
w = model.get_layer('Con61437').get_weights() 
w[0] = np.array([[[[[0.519, 0.2041, 0.9635, 0.1996]]], [[[0.871, 0.5702, 0.3973, 0.7731]]]], [[[[0.184, 0.6989, 0.658, 0.4971]]], [[[0.9184, 0.9804, 0.8109, 0.6203]]]]])
w[1] = np.array([0, 0, 0, 0])
model.get_layer('Con61437').set_weights(w) 
in0Con61437 = tf.constant([[[[[0.01]], [[0.8275]]], [[[0.7159]], [[0.7798]]]]])
print (np.array2string(model.predict([in0Con61437],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Max23520.png')

LCon61437 = conv3D_layer([[[[[0.01]], [[0.8275]]], [[[0.7159]], [[0.7798]]]]], 2, 2, 1,[[[[[0.519, 0.2041, 0.9635, 0.1996]]], [[[0.871, 0.5702, 0.3973, 0.7731]]]], [[[[0.184, 0.6989, 0.658, 0.4971]]], [[[0.9184, 0.9804, 0.8109, 0.6203]]]]],[0, 0, 0, 0], 1, 1, 1, true, 1, 1, 1, Con61437), 
LRes72133 = reshape_layer(Con61437, [2, 2, 4], Res72133), 
LMax23520 = max_pool2D_layer(Res72133, 2, 1, Max23520), 
exec_layers([LCon61437,LRes72133,LMax23520],["Con61437","Res72133","Max23520"],Max23520,"Max23520")

Actual (Unparsed): [[[[1.5738364, 1.7387399, 1.4418028, 1.4813201], [0.5729557, 0.7138950, 1.3104046, 0.5528076]]]]

Expected (Unparsed): [[[[1.5738364200000001,1.73873993,1.4418027699999998,1.48132008],[0.5729557000000001,0.71389497,1.3104046500000002,0.5528075800000001]]]]

Actual:   [[[[1.5739, 1.7388, 1.4419, 1.4814], [0.573, 0.7139, 1.3105, 0.5529]]]]

Expected: [[[[1.5739, 1.7388, 1.4419, 1.4814], [0.573, 0.7139, 1.3105, 0.5529]]]]