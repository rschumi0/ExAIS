import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Add58985 = tf.keras.layers.Input(shape=([1, 2, 1, 1]))
in1Add58985 = tf.keras.layers.Input(shape=([1, 2, 1, 1]))
in0Dot97078 = tf.keras.layers.Input(shape=([3, 2]))
in1Dot97078 = tf.keras.layers.Input(shape=([3, 2]))
in0Mul77542 = tf.keras.layers.Input(shape=([1, 1, 2, 1]))
in1Mul77542 = tf.keras.layers.Input(shape=([1, 1, 2, 1]))

Add58985 = keras.layers.Add(name = 'Add58985', )([in0Add58985,in1Add58985])
Mas31727 = keras.layers.Masking(mask_value=2, name = 'Mas31727', )(Add58985)
Res23812 = keras.layers.Reshape((1, 2, 1), name = 'Res23812', )(Mas31727)
Res9794 = keras.layers.Reshape((1, 2), name = 'Res9794', )(Res23812)
Zer89826 = keras.layers.ZeroPadding1D(padding=((1, 0)), name = 'Zer89826', )(Res9794)
Dot97078 = keras.layers.Dot(axes=(1, 1), name = 'Dot97078', )([in0Dot97078,in1Dot97078])
Ave66867 = keras.layers.Average(name = 'Ave66867', )([Zer89826,Dot97078])
Res31607 = keras.layers.Reshape((2, 2, 1), name = 'Res31607', )(Ave66867)
Res12802 = keras.layers.Reshape((2, 2, 1, 1), name = 'Res12802', )(Res31607)
Zer37229 = keras.layers.ZeroPadding3D(padding=((0, 0), (0, 0), (2, 0)), name = 'Zer37229', )(Res12802)
Mul77542 = keras.layers.Multiply(name = 'Mul77542', )([in0Mul77542,in1Mul77542])
Zer22710 = keras.layers.ZeroPadding3D(padding=((1, 0), (1, 0), (1, 0)), name = 'Zer22710', )(Mul77542)
Ave94031 = keras.layers.Average(name = 'Ave94031', )([Zer37229,Zer22710])
model = tf.keras.models.Model(inputs=[in0Add58985,in1Add58985,in0Dot97078,in1Dot97078,in0Mul77542,in1Mul77542], outputs=Ave94031)
in0Add58985 = tf.constant([[[[[0.205]], [[0.5495]]]]])
in1Add58985 = tf.constant([[[[[0.0645]], [[0.032]]]]])
in0Dot97078 = tf.constant([[[0.2011, 0.9986], [0.3171, 0.7936], [0.6964, 0.8949]]])
in1Dot97078 = tf.constant([[[0.1097, 0.1589], [0.8281, 0.1725], [0.2462, 0.0128]]])
in0Mul77542 = tf.constant([[[[[0.9012], [0.4958]]]]])
in1Mul77542 = tf.constant([[[[[0.0043], [0.6478]]]]])
print (np.array2string(model.predict([in0Add58985,in1Add58985,in0Dot97078,in1Dot97078,in0Mul77542,in1Mul77542],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Ave94031.png')

LAdd58985 = add_layer([[[[[[0.205]], [[0.5495]]]]], [[[[[0.0645]], [[0.032]]]]]], Add58985), 
LMas31727 = masking_layer(Add58985, 2, Mas31727), 
LRes23812 = reshape_layer(Mas31727, [1, 2, 1], Res23812), 
LRes9794 = reshape_layer(Res23812, [1, 2], Res9794), 
LZer89826 = zero_padding1D_layer(Res9794, 1, 0, Zer89826), 
LDot97078 = dot_layer([[[0.2011, 0.9986], [0.3171, 0.7936], [0.6964, 0.8949]]], [[[0.1097, 0.1589], [0.8281, 0.1725], [0.2462, 0.0128]]], 1, 1, Dot97078), 
LAve66867 = average_layer([Zer89826,Dot97078], Ave66867), 
LRes31607 = reshape_layer(Ave66867, [2, 2, 1], Res31607), 
LRes12802 = reshape_layer(Res31607, [2, 2, 1, 1], Res12802), 
LZer37229 = zero_padding3D_layer(Res12802, 0, 0, 0, 0, 2, 0, Zer37229), 
LMul77542 = multiply_layer([[[[[[0.9012], [0.4958]]]]], [[[[[0.0043], [0.6478]]]]]], Mul77542), 
LZer22710 = zero_padding3D_layer(Mul77542, 1, 0, 1, 0, 1, 0, Zer22710), 
LAve94031 = average_layer([Zer37229,Zer22710], Ave94031), 
exec_layers([LAdd58985,LMas31727,LRes23812,LRes9794,LZer89826,LDot97078,LAve66867,LRes31607,LRes12802,LZer37229,LMul77542,LZer22710,LAve94031],["Add58985","Mas31727","Res23812","Res9794","Zer89826","Dot97078","Ave66867","Res31607","Res12802","Zer37229","Mul77542","Zer22710","Ave94031"],Ave94031,"Ave94031")

Actual (Unparsed): [[[[[0.0000000], [0.0000000], [0.1140262]], [[0.0000000], [0.0000000], [0.0238921]]], [[[0.0000000], [0.0000000], [0.3141377]], [[0.0000000], [0.0019376], [0.3827217]]]]]

Expected (Unparsed): [[[[[0],[0],[0.114026215]],[[0],[0],[0.023892115000000002]]],[[[0],[0],[0.31413773999999994]],[[0],[0.00193758],[0.38272168500000003]]]]]

Actual:   [[[[[0], [0], [0.1141]], [[0], [0], [0.0239]]], [[[0], [0], [0.3142]], [[0], [0.002], [0.3828]]]]]

Expected: [[[[[0], [0], [0.1141]], [[0], [0], [0.0239]]], [[[0], [0], [0.3142]], [[0], [0.002], [0.3828]]]]]