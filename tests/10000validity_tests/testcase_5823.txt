import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Dot14051 = tf.keras.layers.Input(shape=([2]))
in1Dot14051 = tf.keras.layers.Input(shape=([2]))
in0Con40266 = tf.keras.layers.Input(shape=([3, 2]))
in0Zer21219 = tf.keras.layers.Input(shape=([1, 3]))

Dot14051 = keras.layers.Dot(axes=(1, 1), name = 'Dot14051', )([in0Dot14051,in1Dot14051])
Res10826 = keras.layers.Reshape((1, 1), name = 'Res10826', )(Dot14051)
Zer9564 = keras.layers.ZeroPadding1D(padding=((2, 0)), name = 'Zer9564', )(Res10826)
Con40266 = keras.layers.Concatenate(axis=2, name = 'Con40266', )([Zer9564,in0Con40266])
Zer21219 = keras.layers.ZeroPadding1D(padding=((1, 1)), name = 'Zer21219', )(in0Zer21219)
Max11620 = keras.layers.Maximum(name = 'Max11620', )([Con40266,Zer21219])
Res8106 = keras.layers.Reshape((3, 3, 1), name = 'Res8106', )(Max11620)
Zer55254 = keras.layers.ZeroPadding2D(padding=((1, 1), (1, 1)), name = 'Zer55254', )(Res8106)
Res9980 = keras.layers.Reshape((5, 5, 1, 1), name = 'Res9980', )(Zer55254)
Con77867 = keras.layers.Conv3D(3, (4, 5, 1),strides=(1, 1, 1), padding='same', dilation_rate=(1, 1, 1), name = 'Con77867', )(Res9980)
model = tf.keras.models.Model(inputs=[in0Dot14051,in1Dot14051,in0Con40266,in0Zer21219], outputs=Con77867)
w = model.get_layer('Con77867').get_weights() 
w[0] = np.array([[[[[0.0335, 0.8737, 0.3363]]], [[[0.5872, 0.6155, 0.645]]], [[[0.0734, 0.3675, 0.8057]]], [[[0.4729, 0.891, 0.1558]]], [[[0.371, 0.7329, 0.7932]]]], [[[[0.2207, 0.3096, 0.1279]]], [[[0.6577, 0.6602, 0.1377]]], [[[0.9883, 0.136, 0.1485]]], [[[0.0666, 0.097, 0.2713]]], [[[0.9003, 0.4632, 0.5952]]]], [[[[0.4584, 0.909, 0.0199]]], [[[0.409, 0.6688, 0.2889]]], [[[0.8746, 0.5486, 0.4423]]], [[[0.8572, 0.5135, 0.5824]]], [[[0.0078, 0.9282, 0.6681]]]], [[[[0.5628, 0.0357, 0.6607]]], [[[0.5734, 0.691, 0.9506]]], [[[0.199, 0.8931, 0.0467]]], [[[0.4322, 0.2786, 0.3381]]], [[[0.7817, 0.7233, 0.9284]]]]])
w[1] = np.array([0, 0, 0])
model.get_layer('Con77867').set_weights(w) 
in0Dot14051 = tf.constant([[0.6582, 0.668]])
in1Dot14051 = tf.constant([[0.8494, 0.147]])
in0Con40266 = tf.constant([[[0.9565, 0.4234], [0.6353, 0.5241], [0.3855, 0.117]]])
in0Zer21219 = tf.constant([[[1.7642, 1.975, 1.1497]]])
print (np.array2string(model.predict([in0Dot14051,in1Dot14051,in0Con40266,in0Zer21219],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Con77867.png')

LDot14051 = dot_layer([[0.6582, 0.668]], [[0.8494, 0.147]], 1, 1, Dot14051), 
LRes10826 = reshape_layer(Dot14051, [1, 1], Res10826), 
LZer9564 = zero_padding1D_layer(Res10826, 2, 0, Zer9564), 
LCon40266 = concatenate_layer([Zer9564,[[[0.9565, 0.4234], [0.6353, 0.5241], [0.3855, 0.117]]]], 2, Con40266), 
LZer21219 = zero_padding1D_layer([[[1.7642, 1.975, 1.1497]]], 1, 1, Zer21219), 
LMax11620 = maximum_layer([Con40266,Zer21219], Max11620), 
LRes8106 = reshape_layer(Max11620, [3, 3, 1], Res8106), 
LZer55254 = zero_padding2D_layer(Res8106, 1, 1, 1, 1, Zer55254), 
LRes9980 = reshape_layer(Zer55254, [5, 5, 1, 1], Res9980), 
LCon77867 = conv3D_layer(Res9980, 4, 5, 1,[[[[[0.0335, 0.8737, 0.3363]]], [[[0.5872, 0.6155, 0.645]]], [[[0.0734, 0.3675, 0.8057]]], [[[0.4729, 0.891, 0.1558]]], [[[0.371, 0.7329, 0.7932]]]], [[[[0.2207, 0.3096, 0.1279]]], [[[0.6577, 0.6602, 0.1377]]], [[[0.9883, 0.136, 0.1485]]], [[[0.0666, 0.097, 0.2713]]], [[[0.9003, 0.4632, 0.5952]]]], [[[[0.4584, 0.909, 0.0199]]], [[[0.409, 0.6688, 0.2889]]], [[[0.8746, 0.5486, 0.4423]]], [[[0.8572, 0.5135, 0.5824]]], [[[0.0078, 0.9282, 0.6681]]]], [[[[0.5628, 0.0357, 0.6607]]], [[[0.5734, 0.691, 0.9506]]], [[[0.199, 0.8931, 0.0467]]], [[[0.4322, 0.2786, 0.3381]]], [[[0.7817, 0.7233, 0.9284]]]]],[0, 0, 0], 1, 1, 1, true, 1, 1, 1, Con77867), 
exec_layers([LDot14051,LRes10826,LZer9564,LCon40266,LZer21219,LMax11620,LRes8106,LZer55254,LRes9980,LCon77867],["Dot14051","Res10826","Zer9564","Con40266","Zer21219","Max11620","Res8106","Zer55254","Res9980","Con77867"],Con77867,"Con77867")

Actual (Unparsed): [[[[[2.3138054, 2.8078469, 3.0691037]], [[2.9266056, 3.8415827, 2.6574563]], [[3.1010110, 4.0453929, 2.8276427]], [[3.1156612, 3.3264885, 3.5603356]], [[2.3823982, 2.0175787, 2.5391420]]], [[[2.9742321, 3.6441104, 3.4963979]], [[4.0786659, 4.1170888, 3.4798213]], [[4.9120842, 3.8559673, 2.9920763]], [[4.2837891, 4.6386647, 2.1149616]], [[2.1491843, 3.2344648, 0.9180094]]], [[[2.8168694, 2.4822961, 3.0531905]], [[4.4257915, 2.7937312, 2.5603602]], [[4.1654844, 2.9847566, 2.1132823]], [[3.9785901, 3.6702438, 1.8026048]], [[1.6972697, 2.8954578, 1.0471529]]], [[[1.9578551, 3.2616986, 2.2491996]], [[2.2705989, 3.4316604, 2.9128923]], [[2.5456654, 3.3337677, 3.0877848]], [[1.8174429, 3.6534190, 2.9480116]], [[0.9032971, 2.6297921, 1.4711654]]], [[[0.4538440, 0.8681615, 0.4081814]], [[0.2739537, 0.6707769, 0.6824286]], [[0.4695746, 0.6504686, 0.7527658]], [[0.2569720, 0.8545305, 0.5639547]], [[0.0816166, 0.4088249, 0.2051087]]]]]

Expected (Unparsed): [[[[[2.31380544,2.8078469200000002,3.06910367]],[[2.92660561,3.8415826600000003,2.65745626]],[[3.101011,4.045392919999999,2.8276427]],[[3.1156612,3.3264884500000003,3.5603356]],[[2.38239818,2.01757862,2.53914193]]],[[[2.9742321007759998,3.644110372888,3.4963979321480005]],[[4.078665844920001,4.117088741548001,3.479821269436]],[[4.912084167272001,3.85596727628,2.9920762686480002]],[[4.283789033823999,4.638664697556,2.114961542556]],[[2.14918423,3.2344647899999996,0.91800941]]],[[[2.816869389776,2.4822960495800004,3.0531904869919995]],[[4.425791506568,2.7937311644880003,2.5603601186839997]],[[4.16548439172,2.9847565883040006,2.113282285012]],[[3.978590073072,3.67024378172,1.802604754492]],[[1.69726962,2.89545779,1.04715289]]],[[[1.9578550839280002,3.26169859476,2.249199604004]],[[2.2705988883640003,3.43166039688,2.9128922853800003]],[[2.5456654093160003,3.333767667016,3.087784837716]],[[1.8174428573560002,3.6534190163680003,2.948011571132]],[[0.90329709,2.6297920500000003,1.47116535]]],[[[0.453843993732,0.8681614822800001,0.408181434264]],[[0.273953647272,0.6707769219000002,0.682428609156]],[[0.4695745781760001,0.65046859974,0.7527657966000001]],[[0.25697198118000003,0.8545304925960002,0.5639546642040001]],[[0.08161665000000001,0.40882485,0.20510865]]]]]

Actual:   [[[[[2.3139, 2.8079, 3.0692]], [[2.9267, 3.8416, 2.6575]], [[3.1011, 4.0454, 2.8277]], [[3.1157, 3.3265, 3.5604]], [[2.3824, 2.0176, 2.5392]]], [[[2.9743, 3.6442, 3.4964]], [[4.0787, 4.1171, 3.4799]], [[4.9121, 3.856, 2.9921]], [[4.2838, 4.6387, 2.115]], [[2.1492, 3.2345, 0.9181]]], [[[2.8169, 2.4823, 3.0532]], [[4.4258, 2.7938, 2.5604]], [[4.1655, 2.9848, 2.1133]], [[3.9786, 3.6703, 1.8027]], [[1.6973, 2.8955, 1.0472]]], [[[1.9579, 3.2617, 2.2492]], [[2.2706, 3.4317, 2.9129]], [[2.5457, 3.3338, 3.0878]], [[1.8175, 3.6535, 2.9481]], [[0.9033, 2.6298, 1.4712]]], [[[0.4539, 0.8682, 0.4082]], [[0.274, 0.6708, 0.6825]], [[0.4696, 0.6505, 0.7528]], [[0.257, 0.8546, 0.564]], [[0.0817, 0.4089, 0.2052]]]]]

Expected: [[[[[2.3139, 2.8079, 3.0692]], [[2.9267, 3.8416, 2.6575]], [[3.1011, 4.0454, 2.8277]], [[3.1157, 3.3265, 3.5604]], [[2.3824, 2.0176, 2.5392]]], [[[2.9743, 3.6442, 3.4964]], [[4.0787, 4.1171, 3.4799]], [[4.9121, 3.856, 2.9921]], [[4.2838, 4.6387, 2.115]], [[2.1492, 3.2345, 0.9181]]], [[[2.8169, 2.4823, 3.0532]], [[4.4258, 2.7938, 2.5604]], [[4.1655, 2.9848, 2.1133]], [[3.9786, 3.6703, 1.8027]], [[1.6973, 2.8955, 1.0472]]], [[[1.9579, 3.2617, 2.2492]], [[2.2706, 3.4317, 2.9129]], [[2.5457, 3.3338, 3.0878]], [[1.8175, 3.6535, 2.9481]], [[0.9033, 2.6298, 1.4712]]], [[[0.4539, 0.8682, 0.4082]], [[0.274, 0.6708, 0.6825]], [[0.4696, 0.6505, 0.7528]], [[0.257, 0.8546, 0.564]], [[0.0817, 0.4089, 0.2052]]]]]