import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Max88883 = tf.keras.layers.Input(shape=([1, 2]))
in1Max88883 = tf.keras.layers.Input(shape=([1, 2]))

Max88883 = keras.layers.Maximum(name = 'Max88883', )([in0Max88883,in1Max88883])
Res59853 = keras.layers.Reshape((1, 2, 1), name = 'Res59853', )(Max88883)
Res16700 = keras.layers.Reshape((1, 2, 1, 1), name = 'Res16700', )(Res59853)
Up_79884 = keras.layers.UpSampling3D(size=(1, 2, 1), name = 'Up_79884', )(Res16700)
model = tf.keras.models.Model(inputs=[in0Max88883,in1Max88883], outputs=Up_79884)
in0Max88883 = tf.constant([[[0.2617, 0.2413]]])
in1Max88883 = tf.constant([[[0.6154, 0.2427]]])
print (np.array2string(model.predict([in0Max88883,in1Max88883],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Up_79884.png')

LMax88883 = maximum_layer([[[[0.2617, 0.2413]]], [[[0.6154, 0.2427]]]], Max88883), 
LRes59853 = reshape_layer(Max88883, [1, 2, 1], Res59853), 
LRes16700 = reshape_layer(Res59853, [1, 2, 1, 1], Res16700), 
LUp_79884 = up_sampling3D_layer(Res16700, 1, 2, 1, Up_79884), 
exec_layers([LMax88883,LRes59853,LRes16700,LUp_79884],["Max88883","Res59853","Res16700","Up_79884"],Up_79884,"Up_79884")

Actual (Unparsed): [[[[[0.6154000]], [[0.6154000]], [[0.2427000]], [[0.2427000]]]]]

Expected (Unparsed): [[[[[0.6154]],[[0.6154]],[[0.2427]],[[0.2427]]]]]

Actual:   [[[[[0.6154]], [[0.6154]], [[0.2427]], [[0.2427]]]]]

Expected: [[[[[0.6154]], [[0.6154]], [[0.2427]], [[0.2427]]]]]