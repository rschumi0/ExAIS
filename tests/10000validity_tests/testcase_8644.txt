import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0GRU62228 = tf.keras.layers.Input(shape=([1, 1]))
in0Con47548 = tf.keras.layers.Input(shape=([4, 12, 2]))
in0Ave96443 = tf.keras.layers.Input(shape=([2, 2]))
in1Ave96443 = tf.keras.layers.Input(shape=([2, 2]))
in0Sub25835 = tf.keras.layers.Input(shape=([2, 2, 3, 2]))
in1Sub25835 = tf.keras.layers.Input(shape=([2, 2, 3, 2]))
in0Con24360 = tf.keras.layers.Input(shape=([4, 12, 2]))
in0Min71020 = tf.keras.layers.Input(shape=([2, 1]))
in1Min71020 = tf.keras.layers.Input(shape=([2, 1]))
in0Con98239 = tf.keras.layers.Input(shape=([3, 2, 2]))
in0Sub17881 = tf.keras.layers.Input(shape=([3, 2, 3]))
in1Sub17881 = tf.keras.layers.Input(shape=([3, 2, 3]))

GRU62228 = keras.layers.GRU(2,reset_after=False, recurrent_activation='sigmoid', name = 'GRU62228', )(in0GRU62228)
Res72470 = keras.layers.Reshape((2, 1), name = 'Res72470', )(GRU62228)
Res5850 = keras.layers.Reshape((2, 1, 1), name = 'Res5850', )(Res72470)
Zer79504 = keras.layers.ZeroPadding2D(padding=((2, 0), (11, 0)), name = 'Zer79504', )(Res5850)
Con47548 = keras.layers.Concatenate(axis=3, name = 'Con47548', )([Zer79504,in0Con47548])
Ave96443 = keras.layers.Average(name = 'Ave96443', )([in0Ave96443,in1Ave96443])
Res96172 = keras.layers.Reshape((2, 2, 1), name = 'Res96172', )(Ave96443)
Res47947 = keras.layers.Reshape((2, 2, 1, 1), name = 'Res47947', )(Res96172)
Zer49528 = keras.layers.ZeroPadding3D(padding=((1, 1), (1, 1), (1, 1)), name = 'Zer49528', )(Res47947)
Res98725 = keras.layers.Reshape((4, 4, 3), name = 'Res98725', )(Zer49528)
Zer79452 = keras.layers.ZeroPadding2D(padding=((0, 0), (8, 0)), name = 'Zer79452', )(Res98725)
Sub25835 = keras.layers.Subtract(name = 'Sub25835', )([in0Sub25835,in1Sub25835])
Res47984 = keras.layers.Reshape((2, 2, 6), name = 'Res47984', )(Sub25835)
Res91267 = keras.layers.Reshape((2, 12), name = 'Res91267', )(Res47984)
Zer45688 = keras.layers.ZeroPadding1D(padding=((1, 1)), name = 'Zer45688', )(Res91267)
Res51615 = keras.layers.Reshape((4, 12, 1), name = 'Res51615', )(Zer45688)
Con24360 = keras.layers.Concatenate(axis=3, name = 'Con24360', )([Res51615,in0Con24360])
Min71020 = keras.layers.Minimum(name = 'Min71020', )([in0Min71020,in1Min71020])
Res910 = keras.layers.Reshape((2, 1, 1), name = 'Res910', )(Min71020)
Zer55602 = keras.layers.ZeroPadding2D(padding=((1, 0), (1, 0)), name = 'Zer55602', )(Res910)
Con98239 = keras.layers.Concatenate(axis=3, name = 'Con98239', )([Zer55602,in0Con98239])
Sub17881 = keras.layers.Subtract(name = 'Sub17881', )([in0Sub17881,in1Sub17881])
Add48828 = keras.layers.Add(name = 'Add48828', )([Con98239,Sub17881])
Zer98766 = keras.layers.ZeroPadding2D(padding=((1, 0), (10, 0)), name = 'Zer98766', )(Add48828)
Sub15028 = keras.layers.Subtract(name = 'Sub15028', )([Con24360,Zer98766])
Mul67544 = keras.layers.Multiply(name = 'Mul67544', )([Zer79452,Sub15028])
Min50445 = keras.layers.Minimum(name = 'Min50445', )([Con47548,Mul67544])
model = tf.keras.models.Model(inputs=[in0GRU62228,in0Con47548,in0Ave96443,in1Ave96443,in0Sub25835,in1Sub25835,in0Con24360,in0Min71020,in1Min71020,in0Con98239,in0Sub17881,in1Sub17881], outputs=Min50445)
w = model.get_layer('GRU62228').get_weights() 
w[0] = np.array([[5, 7, 9, 1, 6, 3]])
w[1] = np.array([[10, 1, 2, 8, 1, 1], [4, 2, 2, 4, 3, 2]])
w[2] = np.array([10, 8, 3, 7, 3, 9])
model.get_layer('GRU62228').set_weights(w) 
in0GRU62228 = tf.constant([[[10]]])
in0Con47548 = tf.constant([[[[0.0344, 0.4371], [0.1758, 0.8389], [0.6614, 0.937], [0.7625, 0.3187], [0.7173, 0.8781], [0.6489, 0.9702], [0.9567, 0.5792], [0.7092, 0.3328], [0.4868, 0.9121], [0.9853, 0.7901], [0.8248, 0.1244], [0.5424, 0.7898]], [[0.9237, 0.9621], [0.182, 0.78], [0.1677, 0.5582], [0.733, 0.8945], [0.6315, 0.0989], [0.2588, 0.4163], [0.0823, 0.9799], [0.5342, 0.7031], [0.3094, 0.0199], [0.5774, 0.5656], [0.3653, 0.3115], [0.8518, 0.0587]], [[0.2174, 0.4609], [0.9939, 0.2631], [0.1235, 0.2901], [0.5675, 0.9193], [0.7717, 0.5575], [0.3972, 0.7036], [0.8508, 0.8919], [0.4919, 0.5332], [0.258, 0.9276], [0.4329, 0.5287], [0.5882, 0.5782], [0.3723, 0.1707]], [[0.9027, 0.4941], [0.4637, 0.7419], [0.0269, 0.0113], [0.6308, 0.3676], [0.7876, 0.3168], [0.0676, 0.8328], [0.6706, 0.1331], [0.7603, 0.8891], [0.3493, 0.9537], [0.6239, 0.9439], [0.4183, 0.751], [0.5509, 0.8693]]]])
in0Ave96443 = tf.constant([[[0.8642, 0.3298], [0.0862, 0.8798]]])
in1Ave96443 = tf.constant([[[0.4647, 0.5558], [0.993, 0.32]]])
in0Sub25835 = tf.constant([[[[[0.2928, 0.696], [0.0143, 0.3984], [0.9188, 0.2732]], [[0.9638, 0.0566], [0.3511, 0.3214], [0.2909, 0.7929]]], [[[0.5616, 0.6021], [0.2317, 0.2601], [0.8086, 0.3329]], [[0.7964, 0.2642], [0.1217, 0.2073], [0.1001, 0.4208]]]]])
in1Sub25835 = tf.constant([[[[[0.798, 0.9498], [0.5499, 0.3306], [0.5285, 0.6398]], [[0.1812, 0.7653], [0.8178, 0.5654], [0.9993, 0.0251]]], [[[0.6921, 0.4223], [0.528, 0.321], [0.299, 0.2593]], [[0.8934, 0.7654], [0.8963, 0.6924], [0.6762, 0.312]]]]])
in0Con24360 = tf.constant([[[[0.5471, 0.6828], [0.4236, 0.2793], [0.6646, 0.6835], [0.4949, 0.9832], [0.5314, 0.1331], [0.3209, 0.6646], [0.0117, 0.5391], [0.6889, 0.8419], [0.5834, 0.2352], [0.0054, 0.676], [0.2036, 0.3857], [0.7823, 0.2311]], [[0.1108, 0.8561], [0.7326, 0.1664], [0.943, 0.2157], [0.8936, 0.5242], [0.1364, 0.2599], [0.9232, 0.1744], [0.6877, 0.3516], [0.4715, 0.646], [0.0119, 0.5657], [0.3231, 0.5301], [0.8099, 0.0927], [0.825, 0.3767]], [[0.5698, 0.6079], [0.9673, 0.0209], [0.5703, 0.3439], [0.3683, 0.5749], [0.0297, 0.4202], [0.3312, 0.8997], [0.3478, 0.5737], [0.084, 0.2307], [0.2258, 0.8166], [0.2944, 0.7735], [0.8185, 0.6984], [0.9579, 0.5097]], [[0.971, 0.7918], [0.7981, 0.1547], [0.0228, 0.7415], [0.3909, 0.1969], [0.6256, 0.7129], [0.3241, 0.213], [0.5131, 0.3646], [0.8403, 0.2018], [0.185, 0.527], [0.5747, 0.5106], [0.0244, 0.6188], [0.1952, 0.0333]]]])
in0Min71020 = tf.constant([[[0.8964], [0.5561]]])
in1Min71020 = tf.constant([[[0.4569], [0.7766]]])
in0Con98239 = tf.constant([[[[0.0881, 0.9462], [0.2182, 0.0695]], [[0.7374, 0.2069], [0.1074, 0.288]], [[0.9396, 0.6889], [0.9027, 0.3805]]]])
in0Sub17881 = tf.constant([[[[0.0914, 0.3437, 0.4458], [0.8908, 0.9153, 0.4976]], [[0.8424, 0.1951, 0.6194], [0.8574, 0.5993, 0.459]], [[0.5324, 0.3436, 0.0815], [0.2327, 0.1582, 0.2647]]]])
in1Sub17881 = tf.constant([[[[0.7035, 0.0815, 0.7223], [0.4691, 0.0069, 0.0292]], [[0.9207, 0.933, 0.7932], [0.7482, 0.0493, 0.2743]], [[0.87, 0.0735, 0.3917], [0.1151, 0.685, 0.4864]]]])
print (np.array2string(model.predict([in0GRU62228,in0Con47548,in0Ave96443,in1Ave96443,in0Sub25835,in1Sub25835,in0Con24360,in0Min71020,in1Min71020,in0Con98239,in0Sub17881,in1Sub17881],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Min50445.png')

LGRU62228 = gru_layer([[[10]]],[[5, 7, 9, 1, 6, 3]],[[10, 1, 2, 8, 1, 1], [4, 2, 2, 4, 3, 2]],[10, 8, 3, 7, 3, 9], false, GRU62228), 
LRes72470 = reshape_layer(GRU62228, [2, 1], Res72470), 
LRes5850 = reshape_layer(Res72470, [2, 1, 1], Res5850), 
LZer79504 = zero_padding2D_layer(Res5850, 2, 0, 11, 0, Zer79504), 
LCon47548 = concatenate_layer([Zer79504,[[[[0.0344, 0.4371], [0.1758, 0.8389], [0.6614, 0.937], [0.7625, 0.3187], [0.7173, 0.8781], [0.6489, 0.9702], [0.9567, 0.5792], [0.7092, 0.3328], [0.4868, 0.9121], [0.9853, 0.7901], [0.8248, 0.1244], [0.5424, 0.7898]], [[0.9237, 0.9621], [0.182, 0.78], [0.1677, 0.5582], [0.733, 0.8945], [0.6315, 0.0989], [0.2588, 0.4163], [0.0823, 0.9799], [0.5342, 0.7031], [0.3094, 0.0199], [0.5774, 0.5656], [0.3653, 0.3115], [0.8518, 0.0587]], [[0.2174, 0.4609], [0.9939, 0.2631], [0.1235, 0.2901], [0.5675, 0.9193], [0.7717, 0.5575], [0.3972, 0.7036], [0.8508, 0.8919], [0.4919, 0.5332], [0.258, 0.9276], [0.4329, 0.5287], [0.5882, 0.5782], [0.3723, 0.1707]], [[0.9027, 0.4941], [0.4637, 0.7419], [0.0269, 0.0113], [0.6308, 0.3676], [0.7876, 0.3168], [0.0676, 0.8328], [0.6706, 0.1331], [0.7603, 0.8891], [0.3493, 0.9537], [0.6239, 0.9439], [0.4183, 0.751], [0.5509, 0.8693]]]]], 3, Con47548), 
LAve96443 = average_layer([[[[0.8642, 0.3298], [0.0862, 0.8798]]], [[[0.4647, 0.5558], [0.993, 0.32]]]], Ave96443), 
LRes96172 = reshape_layer(Ave96443, [2, 2, 1], Res96172), 
LRes47947 = reshape_layer(Res96172, [2, 2, 1, 1], Res47947), 
LZer49528 = zero_padding3D_layer(Res47947, 1, 1, 1, 1, 1, 1, Zer49528), 
LRes98725 = reshape_layer(Zer49528, [4, 4, 3], Res98725), 
LZer79452 = zero_padding2D_layer(Res98725, 0, 0, 8, 0, Zer79452), 
LSub25835 = subtract_layer([[[[[0.2928, 0.696], [0.0143, 0.3984], [0.9188, 0.2732]], [[0.9638, 0.0566], [0.3511, 0.3214], [0.2909, 0.7929]]], [[[0.5616, 0.6021], [0.2317, 0.2601], [0.8086, 0.3329]], [[0.7964, 0.2642], [0.1217, 0.2073], [0.1001, 0.4208]]]]], [[[[[0.798, 0.9498], [0.5499, 0.3306], [0.5285, 0.6398]], [[0.1812, 0.7653], [0.8178, 0.5654], [0.9993, 0.0251]]], [[[0.6921, 0.4223], [0.528, 0.321], [0.299, 0.2593]], [[0.8934, 0.7654], [0.8963, 0.6924], [0.6762, 0.312]]]]], Sub25835), 
LRes47984 = reshape_layer(Sub25835, [2, 2, 6], Res47984), 
LRes91267 = reshape_layer(Res47984, [2, 12], Res91267), 
LZer45688 = zero_padding1D_layer(Res91267, 1, 1, Zer45688), 
LRes51615 = reshape_layer(Zer45688, [4, 12, 1], Res51615), 
LCon24360 = concatenate_layer([Res51615,[[[[0.5471, 0.6828], [0.4236, 0.2793], [0.6646, 0.6835], [0.4949, 0.9832], [0.5314, 0.1331], [0.3209, 0.6646], [0.0117, 0.5391], [0.6889, 0.8419], [0.5834, 0.2352], [0.0054, 0.676], [0.2036, 0.3857], [0.7823, 0.2311]], [[0.1108, 0.8561], [0.7326, 0.1664], [0.943, 0.2157], [0.8936, 0.5242], [0.1364, 0.2599], [0.9232, 0.1744], [0.6877, 0.3516], [0.4715, 0.646], [0.0119, 0.5657], [0.3231, 0.5301], [0.8099, 0.0927], [0.825, 0.3767]], [[0.5698, 0.6079], [0.9673, 0.0209], [0.5703, 0.3439], [0.3683, 0.5749], [0.0297, 0.4202], [0.3312, 0.8997], [0.3478, 0.5737], [0.084, 0.2307], [0.2258, 0.8166], [0.2944, 0.7735], [0.8185, 0.6984], [0.9579, 0.5097]], [[0.971, 0.7918], [0.7981, 0.1547], [0.0228, 0.7415], [0.3909, 0.1969], [0.6256, 0.7129], [0.3241, 0.213], [0.5131, 0.3646], [0.8403, 0.2018], [0.185, 0.527], [0.5747, 0.5106], [0.0244, 0.6188], [0.1952, 0.0333]]]]], 3, Con24360), 
LMin71020 = minimum_layer([[[[0.8964], [0.5561]]], [[[0.4569], [0.7766]]]], Min71020), 
LRes910 = reshape_layer(Min71020, [2, 1, 1], Res910), 
LZer55602 = zero_padding2D_layer(Res910, 1, 0, 1, 0, Zer55602), 
LCon98239 = concatenate_layer([Zer55602,[[[[0.0881, 0.9462], [0.2182, 0.0695]], [[0.7374, 0.2069], [0.1074, 0.288]], [[0.9396, 0.6889], [0.9027, 0.3805]]]]], 3, Con98239), 
LSub17881 = subtract_layer([[[[0.0914, 0.3437, 0.4458], [0.8908, 0.9153, 0.4976]], [[0.8424, 0.1951, 0.6194], [0.8574, 0.5993, 0.459]], [[0.5324, 0.3436, 0.0815], [0.2327, 0.1582, 0.2647]]]], [[[[0.7035, 0.0815, 0.7223], [0.4691, 0.0069, 0.0292]], [[0.9207, 0.933, 0.7932], [0.7482, 0.0493, 0.2743]], [[0.87, 0.0735, 0.3917], [0.1151, 0.685, 0.4864]]]], Sub17881), 
LAdd48828 = add_layer([Con98239,Sub17881], Add48828), 
LZer98766 = zero_padding2D_layer(Add48828, 1, 0, 10, 0, Zer98766), 
LSub15028 = subtract_layer(Con24360,Zer98766, Sub15028), 
LMul67544 = multiply_layer([Zer79452,Sub15028], Mul67544), 
LMin50445 = minimum_layer([Con47548,Mul67544], Min50445), 
exec_layers([LGRU62228,LRes72470,LRes5850,LZer79504,LCon47548,LAve96443,LRes96172,LRes47947,LZer49528,LRes98725,LZer79452,LSub25835,LRes47984,LRes91267,LZer45688,LRes51615,LCon24360,LMin71020,LRes910,LZer55602,LCon98239,LSub17881,LAdd48828,LZer98766,LSub15028,LMul67544,LMin50445],["GRU62228","Res72470","Res5850","Zer79504","Con47548","Ave96443","Res96172","Res47947","Zer49528","Res98725","Zer79452","Sub25835","Res47984","Res91267","Zer45688","Res51615","Con24360","Min71020","Res910","Zer55602","Con98239","Sub17881","Add48828","Zer98766","Sub15028","Mul67544","Min50445"],Min50445,"Min50445")

Actual (Unparsed): [[[[0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000]], [[-0.0000000, 0.0000000, 0.0000000], [-0.0000000, 0.0000000, 0.0000000], [-0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000], [-0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000], [-0.0000000, 0.0000000, 0.0000000], [-0.0000000, 0.0000000, 0.0000000], [-0.0000000, 0.2146838, 0.0000000], [-0.0000000, 0.2035109, -0.0000000], [0.0000000, -0.0000000, -0.0000000]], [[-0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000], [-0.0000000, 0.0000000, 0.0000000], [-0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000], [-0.0000000, 0.0000000, 0.0000000], [-0.0000000, 0.0000000, 0.0000000], [-0.0000000, 0.0000000, 0.0000000], [-0.0000000, 0.1588582, 0.0000000], [-0.0000000, 0.4913181, 0.0000000], [-0.0000000, 0.0000000, 0.0000000]], [[0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000], [0.0000000, -0.0000000, 0.0000000], [-0.0000000, -0.0000000, -0.0000000]]]]

Expected (Unparsed): [[[[0,0.0,0.0],[0,0.0,0.0],[0,0.0,0.0],[0,0.0,0.0],[0,0.0,0.0],[0,0.0,0.0],[0,0.0,0.0],[0,0.0,0.0],[0,0.0,0.0],[0,0.0,0.0],[0,0.0,0.0],[0,0.0,0.0]],[[0,0.0,0.0],[0,0.0,0.0],[0,0.0,0.0],[0,0.0,0.0],[0,0.0,0.0],[0,0.0,0.0],[0,0.0,0.0],[0,0.0,0.0],[0,0.0,0.0],[0,0.21468379499999998,0.0],[0,0.20351087999999998,-0.0],[0,-0.0,-0.0]],[[0,0.0,0.0],[0,0.0,0.0],[0,0.0,0.0],[0,0.0,0.0],[0,0.0,0.0],[0,0.0,0.0],[0,0.0,0.0],[0,0.0,0.0],[0,0.0,0.0],[0,0.15885823999999998,0.0],[0,0.4913181,0.0],[0.0,0.0,0.0]],[[0,0.0,0.0],[0,0.0,0.0],[0,0.0,0.0],[0,0.0,0.0],[0,0.0,0.0],[0,0.0,0.0],[0,0.0,0.0],[0,0.0,0.0],[0,0.0,0.0],[0,0.0,0.0],[0,-0.0,0.0],[0.0,-0.0,-0.0]]]]

Actual:   [[[[0, 0, 0], [0, 0, 0], [0, 0, 0], [0, 0, 0], [0, 0, 0], [0, 0, 0], [0, 0, 0], [0, 0, 0], [0, 0, 0], [0, 0, 0], [0, 0, 0], [0, 0, 0]], [[-0, 0, 0], [-0, 0, 0], [-0, 0, 0], [0, 0, 0], [0, 0, 0], [-0, 0, 0], [0, 0, 0], [-0, 0, 0], [-0, 0, 0], [-0, 0.2147, 0], [-0, 0.2036, -0], [0, -0, -0]], [[-0, 0, 0], [0, 0, 0], [-0, 0, 0], [-0, 0, 0], [0, 0, 0], [0, 0, 0], [-0, 0, 0], [-0, 0, 0], [-0, 0, 0], [-0, 0.1589, 0], [-0, 0.4914, 0], [-0, 0, 0]], [[0, 0, 0], [0, 0, 0], [0, 0, 0], [0, 0, 0], [0, 0, 0], [0, 0, 0], [0, 0, 0], [0, 0, 0], [0, 0, 0], [0, 0, 0], [0, -0, 0], [-0, -0, -0]]]]

Expected: [[[[0, 0, 0], [0, 0, 0], [0, 0, 0], [0, 0, 0], [0, 0, 0], [0, 0, 0], [0, 0, 0], [0, 0, 0], [0, 0, 0], [0, 0, 0], [0, 0, 0], [0, 0, 0]], [[0, 0, 0], [0, 0, 0], [0, 0, 0], [0, 0, 0], [0, 0, 0], [0, 0, 0], [0, 0, 0], [0, 0, 0], [0, 0, 0], [0, 0.2147, 0], [0, 0.2036, -0], [0, -0, -0]], [[0, 0, 0], [0, 0, 0], [0, 0, 0], [0, 0, 0], [0, 0, 0], [0, 0, 0], [0, 0, 0], [0, 0, 0], [0, 0, 0], [0, 0.1589, 0], [0, 0.4914, 0], [0, 0, 0]], [[0, 0, 0], [0, 0, 0], [0, 0, 0], [0, 0, 0], [0, 0, 0], [0, 0, 0], [0, 0, 0], [0, 0, 0], [0, 0, 0], [0, 0, 0], [0, -0, 0], [0, -0, -0]]]]