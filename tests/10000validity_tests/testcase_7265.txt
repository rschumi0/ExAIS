import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0ReL75573 = tf.keras.layers.Input(shape=([1, 2, 1, 1]))

ReL75573 = keras.layers.ReLU(max_value=0.6208781216682436, negative_slope=2.5526273655779876, threshold=4.5828864819682416, name = 'ReL75573', input_shape=(1, 2, 1, 1))(in0ReL75573)
Res24508 = keras.layers.Reshape((1, 2, 1), name = 'Res24508', )(ReL75573)
Res43351 = keras.layers.Reshape((1, 2), name = 'Res43351', )(Res24508)
Sim91263 = keras.layers.SimpleRNN(1,name = 'Sim91263', )(Res43351)
ReL63261 = keras.layers.ReLU(max_value=3.7532622698998264, negative_slope=4.756445949630958, threshold=1.5131684016399916, name = 'ReL63261', )(Sim91263)
model = tf.keras.models.Model(inputs=[in0ReL75573], outputs=ReL63261)
w = model.get_layer('Sim91263').get_weights() 
w[0] = np.array([[6], [7]])
w[1] = np.array([[6]])
w[2] = np.array([10])
model.get_layer('Sim91263').set_weights(w) 
in0ReL75573 = tf.constant([[[[[0.1069]], [[0.4513]]]]])
print (np.array2string(model.predict([in0ReL75573],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='ReL63261.png')

LReL75573 = relu_layer([[[[[0.1069]], [[0.4513]]]]], 0.6208781216682436, 2.5526273655779876, 4.5828864819682416, ReL75573), 
LRes24508 = reshape_layer(ReL75573, [1, 2, 1], Res24508), 
LRes43351 = reshape_layer(Res24508, [1, 2], Res43351), 
LSim91263 = simple_rnn_layer(Res43351,[[6], [7]],[[6]],[10], Sim91263), 
LReL63261 = relu_layer(Sim91263, 3.7532622698998264, 4.756445949630958, 1.5131684016399916, ReL63261), 
exec_layers([LReL75573,LRes24508,LRes43351,LSim91263,LReL63261],["ReL75573","Res24508","Res43351","Sim91263","ReL63261"],ReL63261,"ReL63261")

Actual (Unparsed): [[-11.9537497]]

Expected (Unparsed): [[-11.953749664721046]]

Actual:   [[-11.9537]]

Expected: [[-11.9537]]