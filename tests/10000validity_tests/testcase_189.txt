import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Glo41573 = tf.keras.layers.Input(shape=([2, 2, 2, 1]))
in0Con17945 = tf.keras.layers.Input(shape=([2, 2, 2, 2]))
in0Add86894 = tf.keras.layers.Input(shape=([1, 2]))
in1Add86894 = tf.keras.layers.Input(shape=([1, 2]))
in0Con13349 = tf.keras.layers.Input(shape=([2, 2, 2, 2]))
in0Sub43369 = tf.keras.layers.Input(shape=([2, 2, 2, 3]))
in1Sub43369 = tf.keras.layers.Input(shape=([2, 2, 2, 3]))

Glo41573 = keras.layers.GlobalAveragePooling3D(name = 'Glo41573', )(in0Glo41573)
Res64843 = keras.layers.Reshape((1, 1), name = 'Res64843', )(Glo41573)
Res51833 = keras.layers.Reshape((1, 1, 1), name = 'Res51833', )(Res64843)
Res32615 = keras.layers.Reshape((1, 1, 1, 1), name = 'Res32615', )(Res51833)
Zer29455 = keras.layers.ZeroPadding3D(padding=((1, 0), (1, 0), (1, 0)), name = 'Zer29455', )(Res32615)
Con17945 = keras.layers.Concatenate(axis=4, name = 'Con17945', )([Zer29455,in0Con17945])
Add86894 = keras.layers.Add(name = 'Add86894', )([in0Add86894,in1Add86894])
Res97187 = keras.layers.Reshape((1, 2, 1), name = 'Res97187', )(Add86894)
Res8960 = keras.layers.Reshape((1, 2, 1, 1), name = 'Res8960', )(Res97187)
Zer68614 = keras.layers.ZeroPadding3D(padding=((1, 0), (0, 0), (1, 0)), name = 'Zer68614', )(Res8960)
Con13349 = keras.layers.Concatenate(axis=4, name = 'Con13349', )([Zer68614,in0Con13349])
Sub43369 = keras.layers.Subtract(name = 'Sub43369', )([in0Sub43369,in1Sub43369])
Add27029 = keras.layers.Add(name = 'Add27029', )([Con13349,Sub43369])
Ave60989 = keras.layers.Average(name = 'Ave60989', )([Con17945,Add27029])
model = tf.keras.models.Model(inputs=[in0Glo41573,in0Con17945,in0Add86894,in1Add86894,in0Con13349,in0Sub43369,in1Sub43369], outputs=Ave60989)
in0Glo41573 = tf.constant([[[[[1.6544], [1.3404]], [[1.4555], [1.762]]], [[[1.7777], [1.068]], [[1.2711], [1.4405]]]]])
in0Con17945 = tf.constant([[[[[0.8727, 0.4859], [0.618, 0.269]], [[0.9884, 0.5356], [0.5636, 0.9043]]], [[[0.5845, 0.4648], [0.0524, 0.8893]], [[0.1874, 0.5771], [0.2791, 0.677]]]]])
in0Add86894 = tf.constant([[[0.5467, 0.6417]]])
in1Add86894 = tf.constant([[[0.0296, 0.102]]])
in0Con13349 = tf.constant([[[[[0.7641, 0.525], [0.4004, 0.6539]], [[0.5067, 0.2498], [0.1683, 0.9486]]], [[[0.6599, 0.3264], [0.5966, 0.7088]], [[0.6043, 0.5299], [0.2527, 0.5368]]]]])
in0Sub43369 = tf.constant([[[[[0.2003, 0.0159, 0.2659], [0.0467, 0.1974, 0.3262]], [[0.5737, 0.8079, 0.5402], [0.2797, 0.1497, 0.1253]]], [[[0.3154, 0.2306, 0.9413], [0.8339, 0.5906, 0.0021]], [[0.3189, 0.2675, 0.2848], [0.5709, 0.1282, 0.4081]]]]])
in1Sub43369 = tf.constant([[[[[0.2692, 0.1881, 0.5689], [0.5486, 0.7494, 0.3716]], [[0.5931, 0.6778, 0.9288], [0.4808, 0.4212, 0.1462]]], [[[0.0616, 0.2561, 0.3302], [0.4248, 0.2628, 0.792]], [[0.0882, 0.9308, 0.867], [0.9002, 0.2777, 0.9634]]]]])
print (np.array2string(model.predict([in0Glo41573,in0Con17945,in0Add86894,in1Add86894,in0Con13349,in0Sub43369,in1Sub43369],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Ave60989.png')

LGlo41573 = global_average_pooling3D_layer([[[[[1.6544], [1.3404]], [[1.4555], [1.762]]], [[[1.7777], [1.068]], [[1.2711], [1.4405]]]]], Glo41573), 
LRes64843 = reshape_layer(Glo41573, [1, 1], Res64843), 
LRes51833 = reshape_layer(Res64843, [1, 1, 1], Res51833), 
LRes32615 = reshape_layer(Res51833, [1, 1, 1, 1], Res32615), 
LZer29455 = zero_padding3D_layer(Res32615, 1, 0, 1, 0, 1, 0, Zer29455), 
LCon17945 = concatenate_layer([Zer29455,[[[[[0.8727, 0.4859], [0.618, 0.269]], [[0.9884, 0.5356], [0.5636, 0.9043]]], [[[0.5845, 0.4648], [0.0524, 0.8893]], [[0.1874, 0.5771], [0.2791, 0.677]]]]]], 4, Con17945), 
LAdd86894 = add_layer([[[[0.5467, 0.6417]]], [[[0.0296, 0.102]]]], Add86894), 
LRes97187 = reshape_layer(Add86894, [1, 2, 1], Res97187), 
LRes8960 = reshape_layer(Res97187, [1, 2, 1, 1], Res8960), 
LZer68614 = zero_padding3D_layer(Res8960, 1, 0, 0, 0, 1, 0, Zer68614), 
LCon13349 = concatenate_layer([Zer68614,[[[[[0.7641, 0.525], [0.4004, 0.6539]], [[0.5067, 0.2498], [0.1683, 0.9486]]], [[[0.6599, 0.3264], [0.5966, 0.7088]], [[0.6043, 0.5299], [0.2527, 0.5368]]]]]], 4, Con13349), 
LSub43369 = subtract_layer([[[[[0.2003, 0.0159, 0.2659], [0.0467, 0.1974, 0.3262]], [[0.5737, 0.8079, 0.5402], [0.2797, 0.1497, 0.1253]]], [[[0.3154, 0.2306, 0.9413], [0.8339, 0.5906, 0.0021]], [[0.3189, 0.2675, 0.2848], [0.5709, 0.1282, 0.4081]]]]], [[[[[0.2692, 0.1881, 0.5689], [0.5486, 0.7494, 0.3716]], [[0.5931, 0.6778, 0.9288], [0.4808, 0.4212, 0.1462]]], [[[0.0616, 0.2561, 0.3302], [0.4248, 0.2628, 0.792]], [[0.0882, 0.9308, 0.867], [0.9002, 0.2777, 0.9634]]]]], Sub43369), 
LAdd27029 = add_layer([Con13349,Sub43369], Add27029), 
LAve60989 = average_layer([Con17945,Add27029], Ave60989), 
exec_layers([LGlo41573,LRes64843,LRes51833,LRes32615,LZer29455,LCon17945,LAdd86894,LRes97187,LRes8960,LZer68614,LCon13349,LSub43369,LAdd27029,LAve60989],["Glo41573","Res64843","Res51833","Res32615","Zer29455","Con17945","Add86894","Res97187","Res8960","Zer68614","Con13349","Sub43369","Add27029","Ave60989"],Ave60989,"Ave60989")

Actual (Unparsed): [[[[[-0.0344500, 0.7323000, 0.3539500], [-0.2509500, 0.2332000, 0.4387500]], [[-0.0097000, 0.8126000, 0.1984000], [-0.1005500, 0.2302000, 0.9160000]]], [[[0.1269000, 0.6094500, 0.7011500], [0.4927000, 0.4884000, 0.4041000]], [[0.1153500, 0.0642000, 0.2624000], [0.9428000, 0.1911500, 0.3292500]]]]]

Expected (Unparsed): [[[[[-0.034449999999999995,0.7323,0.35395000000000004],[-0.25095,0.23320000000000002,0.43875000000000003]],[[-0.009699999999999986,0.8126,0.19840000000000002],[-0.10055,0.2302,0.9159999999999999]]],[[[0.1269,0.60945,0.7011499999999999],[0.4926999999999999,0.48840000000000006,0.40409999999999996]],[[0.11535000000000001,0.06419999999999998,0.26239999999999997],[0.9428000000000001,0.19115,0.32925000000000004]]]]]

Actual:   [[[[[-0.0344, 0.7323, 0.354], [-0.2509, 0.2332, 0.4388]], [[-0.0097, 0.8126, 0.1984], [-0.1005, 0.2302, 0.916]]], [[[0.1269, 0.6095, 0.7012], [0.4927, 0.4884, 0.4041]], [[0.1154, 0.0642, 0.2624], [0.9428, 0.1912, 0.3293]]]]]

Expected: [[[[[-0.0344, 0.7323, 0.354], [-0.2509, 0.2333, 0.4388]], [[-0.0096, 0.8126, 0.1985], [-0.1005, 0.2302, 0.916]]], [[[0.1269, 0.6095, 0.7012], [0.4927, 0.4885, 0.4041]], [[0.1154, 0.0642, 0.2624], [0.9429, 0.1912, 0.3293]]]]]