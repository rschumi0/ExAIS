import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Add98572 = tf.keras.layers.Input(shape=([1, 1]))
in1Add98572 = tf.keras.layers.Input(shape=([1, 1]))

Add98572 = keras.layers.Add(name = 'Add98572', )([in0Add98572,in1Add98572])
Sim58406 = keras.layers.SimpleRNN(2,name = 'Sim58406', )(Add98572)
model = tf.keras.models.Model(inputs=[in0Add98572,in1Add98572], outputs=Sim58406)
w = model.get_layer('Sim58406').get_weights() 
w[0] = np.array([[2, 9]])
w[1] = np.array([[4, 4], [9, 9]])
w[2] = np.array([1, 7])
model.get_layer('Sim58406').set_weights(w) 
in0Add98572 = tf.constant([[[0.0643]]])
in1Add98572 = tf.constant([[[0.1121]]])
print (np.array2string(model.predict([in0Add98572,in1Add98572],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Sim58406.png')

LAdd98572 = add_layer([[[[0.0643]]], [[[0.1121]]]], Add98572), 
LSim58406 = simple_rnn_layer(Add98572,[[2, 9]],[[4, 4], [9, 9]],[1, 7], Sim58406), 
exec_layers([LAdd98572,LSim58406],["Add98572","Sim58406"],Sim58406,"Sim58406")

Actual (Unparsed): [[0.8747126, 0.9999999]]

Expected (Unparsed): [[0.8747125590761087,0.9999999305079066]]

Actual:   [[0.8748, 1]]

Expected: [[0.8748, 1]]