import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Max31239 = tf.keras.layers.Input(shape=([2, 1, 1]))
in1Max31239 = tf.keras.layers.Input(shape=([2, 1, 1]))
in0Con71980 = tf.keras.layers.Input(shape=([2, 1]))
in0Sep44744 = tf.keras.layers.Input(shape=([1, 1, 2]))
in0Sub57722 = tf.keras.layers.Input(shape=([3]))
in1Sub57722 = tf.keras.layers.Input(shape=([3]))
in0Con70400 = tf.keras.layers.Input(shape=([3]))
in0Con67644 = tf.keras.layers.Input(shape=([4, 3, 1, 1]))
in0Add88444 = tf.keras.layers.Input(shape=([1, 2, 1, 2]))
in1Add88444 = tf.keras.layers.Input(shape=([1, 2, 1, 2]))

Max31239 = keras.layers.Maximum(name = 'Max31239', )([in0Max31239,in1Max31239])
Res21490 = keras.layers.Reshape((2, 1), name = 'Res21490', )(Max31239)
Con71980 = keras.layers.Concatenate(axis=2, name = 'Con71980', )([Res21490,in0Con71980])
Sep44744 = keras.layers.SeparableConv2D(2, (1, 1),strides=(1, 1), padding='valid', name = 'Sep44744', )(in0Sep44744)
Thr23915 = keras.layers.ThresholdedReLU(theta=3.017105459124838, name = 'Thr23915', )(Sep44744)
Res34930 = keras.layers.Reshape((1, 2), name = 'Res34930', )(Thr23915)
Max10785 = keras.layers.MaxPool1D(pool_size=(1), strides=(1), padding='same', name = 'Max10785', )(Res34930)
Zer18981 = keras.layers.ZeroPadding1D(padding=((1, 0)), name = 'Zer18981', )(Max10785)
Sub95776 = keras.layers.Subtract(name = 'Sub95776', )([Con71980,Zer18981])
Fla98257 = keras.layers.Flatten(name = 'Fla98257', )(Sub95776)
Sub57722 = keras.layers.Subtract(name = 'Sub57722', )([in0Sub57722,in1Sub57722])
Res96165 = keras.layers.Reshape((3, 1), name = 'Res96165', )(Sub57722)
Res21704 = keras.layers.Reshape((3, 1, 1), name = 'Res21704', )(Res96165)
Res76876 = keras.layers.Reshape((3, 1, 1, 1), name = 'Res76876', )(Res21704)
Zer58229 = keras.layers.ZeroPadding3D(padding=((1, 1), (1, 1), (1, 1)), name = 'Zer58229', )(Res76876)
Res16072 = keras.layers.Reshape((5, 3, 3), name = 'Res16072', )(Zer58229)
Res53940 = keras.layers.Reshape((5, 9), name = 'Res53940', )(Res16072)
LST41474 = keras.layers.LSTM(1,recurrent_activation='sigmoid', name = 'LST41474', )(Res53940)
Con70400 = keras.layers.Concatenate(axis=1, name = 'Con70400', )([LST41474,in0Con70400])
Min21317 = keras.layers.Minimum(name = 'Min21317', )([Fla98257,Con70400])
Res56840 = keras.layers.Reshape((4, 1), name = 'Res56840', )(Min21317)
Res2746 = keras.layers.Reshape((4, 1, 1), name = 'Res2746', )(Res56840)
Res70216 = keras.layers.Reshape((4, 1, 1, 1), name = 'Res70216', )(Res2746)
Zer17277 = keras.layers.ZeroPadding3D(padding=((0, 0), (2, 0), (0, 0)), name = 'Zer17277', )(Res70216)
Con67644 = keras.layers.Concatenate(axis=4, name = 'Con67644', )([Zer17277,in0Con67644])
Add88444 = keras.layers.Add(name = 'Add88444', )([in0Add88444,in1Add88444])
Zer15044 = keras.layers.ZeroPadding3D(padding=((3, 0), (1, 0), (0, 0)), name = 'Zer15044', )(Add88444)
Add80026 = keras.layers.Add(name = 'Add80026', )([Con67644,Zer15044])
model = tf.keras.models.Model(inputs=[in0Max31239,in1Max31239,in0Con71980,in0Sep44744,in0Sub57722,in1Sub57722,in0Con70400,in0Con67644,in0Add88444,in1Add88444], outputs=Add80026)
w = model.get_layer('Sep44744').get_weights() 
w[0] = np.array([[[[0.3909], [0.387]]]])
w[1] = np.array([[[[0.9065, 0.0176], [0.1077, 0.1635]]]])
w[2] = np.array([0, 0])
model.get_layer('Sep44744').set_weights(w) 
w = model.get_layer('LST41474').get_weights() 
w[0] = np.array([[2, 6, 8, 8], [4, 3, 2, 10], [4, 5, 8, 6], [7, 5, 8, 8], [1, 2, 3, 6], [1, 6, 1, 3], [3, 10, 7, 7], [9, 10, 5, 10], [8, 6, 6, 2]])
w[1] = np.array([[10, 4, 1, 10]])
w[2] = np.array([3, 1, 5, 1])
model.get_layer('LST41474').set_weights(w) 
in0Max31239 = tf.constant([[[[0.0638]], [[0.1669]]]])
in1Max31239 = tf.constant([[[[0.9552]], [[0.0689]]]])
in0Con71980 = tf.constant([[[0.908], [0.9262]]])
in0Sep44744 = tf.constant([[[[0.2341, 0.6085]]]])
in0Sub57722 = tf.constant([[0.5366, 0.6, 0.8973]])
in1Sub57722 = tf.constant([[0.1333, 0.988, 0.7338]])
in0Con70400 = tf.constant([[0.0234, 0.767, 0.6628]])
in0Con67644 = tf.constant([[[[[0.5379]], [[0.473]], [[0.2286]]], [[[0.5572]], [[0.5504]], [[0.7715]]], [[[0.0298]], [[0.0748]], [[0.1875]]], [[[0.5994]], [[0.9942]], [[0.123]]]]])
in0Add88444 = tf.constant([[[[[0.4774, 0.9668]], [[0.3146, 0.9465]]]]])
in1Add88444 = tf.constant([[[[[0.3876, 0.6462]], [[0.3794, 0.4329]]]]])
print (np.array2string(model.predict([in0Max31239,in1Max31239,in0Con71980,in0Sep44744,in0Sub57722,in1Sub57722,in0Con70400,in0Con67644,in0Add88444,in1Add88444],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Add80026.png')

LMax31239 = maximum_layer([[[[[0.0638]], [[0.1669]]]], [[[[0.9552]], [[0.0689]]]]], Max31239), 
LRes21490 = reshape_layer(Max31239, [2, 1], Res21490), 
LCon71980 = concatenate_layer([Res21490,[[[0.908], [0.9262]]]], 2, Con71980), 
LSep44744 = separable_conv2D_layer([[[[0.2341, 0.6085]]]], 1, 1,[[[[[0.3909], [0.387]]]],[[[[0.9065, 0.0176], [0.1077, 0.1635]]]]],[0, 0], 1, 1, false, Sep44744), 
LThr23915 = thresholded_relu_layer(Sep44744, 3.017105459124838, Thr23915), 
LRes34930 = reshape_layer(Thr23915, [1, 2], Res34930), 
LMax10785 = max_pool1D_layer(Res34930, 1, 1, true, Max10785), 
LZer18981 = zero_padding1D_layer(Max10785, 1, 0, Zer18981), 
LSub95776 = subtract_layer(Con71980,Zer18981, Sub95776), 
LFla98257 = flatten_layer(Sub95776, Fla98257), 
LSub57722 = subtract_layer([[0.5366, 0.6, 0.8973]], [[0.1333, 0.988, 0.7338]], Sub57722), 
LRes96165 = reshape_layer(Sub57722, [3, 1], Res96165), 
LRes21704 = reshape_layer(Res96165, [3, 1, 1], Res21704), 
LRes76876 = reshape_layer(Res21704, [3, 1, 1, 1], Res76876), 
LZer58229 = zero_padding3D_layer(Res76876, 1, 1, 1, 1, 1, 1, Zer58229), 
LRes16072 = reshape_layer(Zer58229, [5, 3, 3], Res16072), 
LRes53940 = reshape_layer(Res16072, [5, 9], Res53940), 
LLST41474 = lstm_layer(Res53940,[[2, 6, 8, 8], [4, 3, 2, 10], [4, 5, 8, 6], [7, 5, 8, 8], [1, 2, 3, 6], [1, 6, 1, 3], [3, 10, 7, 7], [9, 10, 5, 10], [8, 6, 6, 2]],[[10, 4, 1, 10]],[3, 1, 5, 1], LST41474), 
LCon70400 = concatenate_layer([LST41474,[[0.0234, 0.767, 0.6628]]], 1, Con70400), 
LMin21317 = minimum_layer([Fla98257,Con70400], Min21317), 
LRes56840 = reshape_layer(Min21317, [4, 1], Res56840), 
LRes2746 = reshape_layer(Res56840, [4, 1, 1], Res2746), 
LRes70216 = reshape_layer(Res2746, [4, 1, 1, 1], Res70216), 
LZer17277 = zero_padding3D_layer(Res70216, 0, 0, 2, 0, 0, 0, Zer17277), 
LCon67644 = concatenate_layer([Zer17277,[[[[[0.5379]], [[0.473]], [[0.2286]]], [[[0.5572]], [[0.5504]], [[0.7715]]], [[[0.0298]], [[0.0748]], [[0.1875]]], [[[0.5994]], [[0.9942]], [[0.123]]]]]], 4, Con67644), 
LAdd88444 = add_layer([[[[[[0.4774, 0.9668]], [[0.3146, 0.9465]]]]], [[[[[0.3876, 0.6462]], [[0.3794, 0.4329]]]]]], Add88444), 
LZer15044 = zero_padding3D_layer(Add88444, 3, 0, 1, 0, 0, 0, Zer15044), 
LAdd80026 = add_layer([Con67644,Zer15044], Add80026), 
exec_layers([LMax31239,LRes21490,LCon71980,LSep44744,LThr23915,LRes34930,LMax10785,LZer18981,LSub95776,LFla98257,LSub57722,LRes96165,LRes21704,LRes76876,LZer58229,LRes16072,LRes53940,LLST41474,LCon70400,LMin21317,LRes56840,LRes2746,LRes70216,LZer17277,LCon67644,LAdd88444,LZer15044,LAdd80026],["Max31239","Res21490","Con71980","Sep44744","Thr23915","Res34930","Max10785","Zer18981","Sub95776","Fla98257","Sub57722","Res96165","Res21704","Res76876","Zer58229","Res16072","Res53940","LST41474","Con70400","Min21317","Res56840","Res2746","Res70216","Zer17277","Con67644","Add88444","Zer15044","Add80026"],Add80026,"Add80026")

Actual (Unparsed): [[[[[0.0000000, 0.5379000]], [[0.0000000, 0.4730000]], [[0.9552000, 0.2286000]]], [[[0.0000000, 0.5572000]], [[0.0000000, 0.5504000]], [[0.0234000, 0.7715000]]], [[[0.0000000, 0.0298000]], [[0.0000000, 0.0748000]], [[0.1669000, 0.1875000]]], [[[0.0000000, 0.5994000]], [[0.8650000, 2.6072000]], [[1.3568000, 1.5024000]]]]]

Expected (Unparsed): [[[[[0,0.5379]],[[0,0.473]],[[0.9552,0.2286]]],[[[0,0.5572]],[[0,0.5504]],[[0.0234,0.7715]]],[[[0,0.0298]],[[0,0.0748]],[[0.1669,0.1875]]],[[[0,0.5994]],[[0.865,2.6071999999999997]],[[1.3567999999999998,1.5024]]]]]

Actual:   [[[[[0, 0.5379]], [[0, 0.473]], [[0.9552, 0.2286]]], [[[0, 0.5572]], [[0, 0.5504]], [[0.0234, 0.7715]]], [[[0, 0.0298]], [[0, 0.0748]], [[0.1669, 0.1875]]], [[[0, 0.5994]], [[0.865, 2.6072]], [[1.3568, 1.5024]]]]]

Expected: [[[[[0, 0.5379]], [[0, 0.473]], [[0.9552, 0.2286]]], [[[0, 0.5572]], [[0, 0.5504]], [[0.0234, 0.7715]]], [[[0, 0.0298]], [[0, 0.0748]], [[0.1669, 0.1875]]], [[[0, 0.5994]], [[0.865, 2.6072]], [[1.3568, 1.5024]]]]]