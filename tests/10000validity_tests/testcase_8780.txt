import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Dot22752 = tf.keras.layers.Input(shape=([2, 2]))
in1Dot22752 = tf.keras.layers.Input(shape=([2, 2]))
in0ReL54632 = tf.keras.layers.Input(shape=([2, 2]))

Dot22752 = keras.layers.Dot(axes=(2, 2), name = 'Dot22752', )([in0Dot22752,in1Dot22752])
ReL54632 = keras.layers.ReLU(max_value=0.37179246942317457, negative_slope=8.505046226582769, threshold=8.797072482686835, name = 'ReL54632', input_shape=(2, 2))(in0ReL54632)
Mul26849 = keras.layers.Multiply(name = 'Mul26849', )([Dot22752,ReL54632])
Max87800 = keras.layers.MaxPool1D(pool_size=(1), strides=(1), padding='valid', name = 'Max87800', )(Mul26849)
model = tf.keras.models.Model(inputs=[in0Dot22752,in1Dot22752,in0ReL54632], outputs=Max87800)
in0Dot22752 = tf.constant([[[0.4483, 0.0145], [0.516, 0.2822]]])
in1Dot22752 = tf.constant([[[0.4438, 0.5373], [0.4542, 0.6255]]])
in0ReL54632 = tf.constant([[[0.5839, 0.0564], [0.1421, 0.3151]]])
print (np.array2string(model.predict([in0Dot22752,in1Dot22752,in0ReL54632],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Max87800.png')

LDot22752 = dot_layer([[[0.4483, 0.0145], [0.516, 0.2822]]], [[[0.4438, 0.5373], [0.4542, 0.6255]]], 2, 2, Dot22752), 
LReL54632 = relu_layer([[[0.5839, 0.0564], [0.1421, 0.3151]]], 0.37179246942317457, 8.505046226582769, 8.797072482686835, ReL54632), 
LMul26849 = multiply_layer([Dot22752,ReL54632], Mul26849), 
LMax87800 = max_pool1D_layer(Mul26849, 1, 1, false, Max87800), 
exec_layers([LDot22752,LReL54632,LMul26849,LMax87800],["Dot22752","ReL54632","Mul26849","Max87800"],Max87800,"Max87800")

Actual (Unparsed): [[[-14.4419409, -15.8111595], [-28.0183007, -29.6409437]]]

Expected (Unparsed): [[[-14.44194068413083,-15.811159391582654],[-28.018301355430047,-29.640943784185858]]]

Actual:   [[[-14.4419, -15.8111], [-28.0183, -29.6409]]]

Expected: [[[-14.4419, -15.8111], [-28.0183, -29.6409]]]