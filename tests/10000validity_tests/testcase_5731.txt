import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Mul20835 = tf.keras.layers.Input(shape=([2, 1, 2]))
in1Mul20835 = tf.keras.layers.Input(shape=([2, 1, 2]))

Mul20835 = keras.layers.Multiply(name = 'Mul20835', )([in0Mul20835,in1Mul20835])
ReL1694 = keras.layers.ReLU(max_value=3.3479010304892505, negative_slope=0.3375642455128169, threshold=1.7978904079033708, name = 'ReL1694', )(Mul20835)
model = tf.keras.models.Model(inputs=[in0Mul20835,in1Mul20835], outputs=ReL1694)
in0Mul20835 = tf.constant([[[[0.5304, 0.1193]], [[0.7716, 0.545]]]])
in1Mul20835 = tf.constant([[[[0.2779, 0.6166]], [[0.9759, 0.3682]]]])
print (np.array2string(model.predict([in0Mul20835,in1Mul20835],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='ReL1694.png')

LMul20835 = multiply_layer([[[[[0.5304, 0.1193]], [[0.7716, 0.545]]]], [[[[0.2779, 0.6166]], [[0.9759, 0.3682]]]]], Mul20835), 
LReL1694 = relu_layer(Mul20835, 3.3479010304892505, 0.3375642455128169, 1.7978904079033708, ReL1694), 
exec_layers([LMul20835,LReL1694],["Mul20835","ReL1694"],ReL1694,"ReL1694")

Actual (Unparsed): [[[[-0.5571472, -0.5820722]], [[-0.3527161, -0.5391648]]]]

Expected (Unparsed): [[[[-0.5571471703882545,-0.5820721648842958]],[[-0.35271614340223073,-0.5391648394758205]]]]

Actual:   [[[[-0.5571, -0.582]], [[-0.3527, -0.5391]]]]

Expected: [[[[-0.5571, -0.582]], [[-0.3527, -0.5391]]]]