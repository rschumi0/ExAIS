import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Mas52389 = tf.keras.layers.Input(shape=([2, 4, 2]))
in0Max30375 = tf.keras.layers.Input(shape=([2, 1]))
in0Cro63119 = tf.keras.layers.Input(shape=([1, 3, 3]))
in0Con17029 = tf.keras.layers.Input(shape=([1]))

Mas52389 = keras.layers.Masking(mask_value=2, name = 'Mas52389', )(in0Mas52389)
Glo73260 = keras.layers.GlobalAveragePooling2D(name = 'Glo73260', )(Mas52389)
Res51807 = keras.layers.Reshape((2, 1), name = 'Res51807', )(Glo73260)
Max30375 = keras.layers.MaxPool1D(pool_size=(1), name = 'Max30375', )(in0Max30375)
Min20285 = keras.layers.Minimum(name = 'Min20285', )([Res51807,Max30375])
Fla16071 = keras.layers.Flatten(name = 'Fla16071', )(Min20285)
Cro63119 = keras.layers.Cropping2D(cropping=((0, 0), (1, 1)), name = 'Cro63119', )(in0Cro63119)
Res52520 = keras.layers.Reshape((1, 1, 3, 1), name = 'Res52520', )(Cro63119)
Glo19270 = keras.layers.GlobalMaxPool3D(name = 'Glo19270', )(Res52520)
Con17029 = keras.layers.Concatenate(axis=1, name = 'Con17029', )([Glo19270,in0Con17029])
Ave71499 = keras.layers.Average(name = 'Ave71499', )([Fla16071,Con17029])
Fla60776 = keras.layers.Flatten(name = 'Fla60776', )(Ave71499)
model = tf.keras.models.Model(inputs=[in0Mas52389,in0Max30375,in0Cro63119,in0Con17029], outputs=Fla60776)
in0Mas52389 = tf.constant([[[[1.0681, 1.3], [1.8482, 1.1021], [1.9167, 1.4216], [1.9312, 1.6515]], [[1.0591, 1.2288], [1.8292, 1.9541], [1.4878, 1.2829], [1.5571, 1.3901]]]])
in0Max30375 = tf.constant([[[1.3192], [1.9352]]])
in0Cro63119 = tf.constant([[[[1.8618, 1.7622, 1.445], [1.477, 1.492, 1.7132], [1.8241, 1.4408, 1.5972]]]])
in0Con17029 = tf.constant([[0.6594]])
print (np.array2string(model.predict([in0Mas52389,in0Max30375,in0Cro63119,in0Con17029],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Fla60776.png')

LMas52389 = masking_layer([[[[1.0681, 1.3], [1.8482, 1.1021], [1.9167, 1.4216], [1.9312, 1.6515]], [[1.0591, 1.2288], [1.8292, 1.9541], [1.4878, 1.2829], [1.5571, 1.3901]]]], 2, Mas52389), 
LGlo73260 = global_average_pooling2D_layer(Mas52389, Glo73260), 
LRes51807 = reshape_layer(Glo73260, [2, 1], Res51807), 
LMax30375 = max_pool1D_layer([[[1.3192], [1.9352]]], 1, Max30375), 
LMin20285 = minimum_layer([Res51807,Max30375], Min20285), 
LFla16071 = flatten_layer(Min20285, Fla16071), 
LCro63119 = cropping2D_layer([[[[1.8618, 1.7622, 1.445], [1.477, 1.492, 1.7132], [1.8241, 1.4408, 1.5972]]]], 0, 0, 1, 1, Cro63119), 
LRes52520 = reshape_layer(Cro63119, [1, 1, 3, 1], Res52520), 
LGlo19270 = global_max_pool3D_layer(Res52520, Glo19270), 
LCon17029 = concatenate_layer([Glo19270,[[0.6594]]], 1, Con17029), 
LAve71499 = average_layer([Fla16071,Con17029], Ave71499), 
LFla60776 = flatten_layer(Ave71499, Fla60776), 
exec_layers([LMas52389,LGlo73260,LRes51807,LMax30375,LMin20285,LFla16071,LCro63119,LRes52520,LGlo19270,LCon17029,LAve71499,LFla60776],["Mas52389","Glo73260","Res51807","Max30375","Min20285","Fla16071","Cro63119","Res52520","Glo19270","Con17029","Ave71499","Fla60776"],Fla60776,"Fla60776")

Actual (Unparsed): [[1.5162000, 1.0378937]]

Expected (Unparsed): [[1.5162,1.03789375]]

Actual:   [[1.5162, 1.0379]]

Expected: [[1.5162, 1.0379]]