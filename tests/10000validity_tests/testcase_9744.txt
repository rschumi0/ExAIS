import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Ave42868 = tf.keras.layers.Input(shape=([2, 1]))
in1Ave42868 = tf.keras.layers.Input(shape=([2, 1]))
in0Con88770 = tf.keras.layers.Input(shape=([2, 11]))
in0Ave50666 = tf.keras.layers.Input(shape=([1, 1]))
in1Ave50666 = tf.keras.layers.Input(shape=([1, 1]))
in0Con14729 = tf.keras.layers.Input(shape=([2, 3, 2, 1]))
in0Sub70652 = tf.keras.layers.Input(shape=([2, 3, 2, 2]))
in1Sub70652 = tf.keras.layers.Input(shape=([2, 3, 2, 2]))
in0Sub37354 = tf.keras.layers.Input(shape=([2, 3]))
in1Sub37354 = tf.keras.layers.Input(shape=([2, 3]))
in0Con73796 = tf.keras.layers.Input(shape=([2, 9]))

Ave42868 = keras.layers.Average(name = 'Ave42868', )([in0Ave42868,in1Ave42868])
Con88770 = keras.layers.Concatenate(axis=2, name = 'Con88770', )([Ave42868,in0Con88770])
Ave50666 = keras.layers.Average(name = 'Ave50666', )([in0Ave50666,in1Ave50666])
Res82098 = keras.layers.Reshape((1, 1, 1), name = 'Res82098', )(Ave50666)
Res17279 = keras.layers.Reshape((1, 1, 1, 1), name = 'Res17279', )(Res82098)
Zer47762 = keras.layers.ZeroPadding3D(padding=((1, 0), (2, 0), (1, 0)), name = 'Zer47762', )(Res17279)
Con14729 = keras.layers.Concatenate(axis=4, name = 'Con14729', )([Zer47762,in0Con14729])
Sub70652 = keras.layers.Subtract(name = 'Sub70652', )([in0Sub70652,in1Sub70652])
Sub54967 = keras.layers.Subtract(name = 'Sub54967', )([Con14729,Sub70652])
Res1015 = keras.layers.Reshape((2, 3, 4), name = 'Res1015', )(Sub54967)
Res57231 = keras.layers.Reshape((2, 12), name = 'Res57231', )(Res1015)
Sub37354 = keras.layers.Subtract(name = 'Sub37354', )([in0Sub37354,in1Sub37354])
Con73796 = keras.layers.Concatenate(axis=2, name = 'Con73796', )([Sub37354,in0Con73796])
Add19119 = keras.layers.Add(name = 'Add19119', )([Res57231,Con73796])
Min91060 = keras.layers.Minimum(name = 'Min91060', )([Con88770,Add19119])
model = tf.keras.models.Model(inputs=[in0Ave42868,in1Ave42868,in0Con88770,in0Ave50666,in1Ave50666,in0Con14729,in0Sub70652,in1Sub70652,in0Sub37354,in1Sub37354,in0Con73796], outputs=Min91060)
in0Ave42868 = tf.constant([[[0.3], [0.9606]]])
in1Ave42868 = tf.constant([[[0.3725], [0.938]]])
in0Con88770 = tf.constant([[[0.9894, 0.5662, 0.7593, 0.5961, 0.6518, 0.5712, 0.1511, 0.5804, 0.9247, 0.9121, 0.195], [0.3909, 0.4637, 0.042, 0.4925, 0.4547, 0.393, 0.4035, 0.3611, 0.1583, 0.1403, 0.88]]])
in0Ave50666 = tf.constant([[[0.1038]]])
in1Ave50666 = tf.constant([[[0.5109]]])
in0Con14729 = tf.constant([[[[[0.6035], [0.4811]], [[0.0651], [0.6123]], [[0.1473], [0.7872]]], [[[0.8199], [0.8856]], [[0.3791], [0.0321]], [[0.3215], [0.7526]]]]])
in0Sub70652 = tf.constant([[[[[0.0564, 0.2042], [0.2234, 0.2133]], [[0.2611, 0.4253], [0.8435, 0.5897]], [[0.837, 0.101], [0.5041, 0.5459]]], [[[0.5309, 0.3758], [0.4321, 0.8354]], [[0.1142, 0.9689], [0.8126, 0.0852]], [[0.7222, 0.2544], [0.805, 0.0888]]]]])
in1Sub70652 = tf.constant([[[[[0.0988, 0.3996], [0.4245, 0.0779]], [[0.4523, 0.3025], [0.3696, 0.5955]], [[0.7959, 0.3087], [0.502, 0.4104]]], [[[0.9748, 0.3343], [0.9623, 0.6359]], [[0.0584, 0.0712], [0.8393, 0.8471]], [[0.4193, 0.412], [0.9027, 0.5246]]]]])
in0Sub37354 = tf.constant([[[0.6106, 0.0932, 0.1536], [0.5993, 0.1044, 0.8269]]])
in1Sub37354 = tf.constant([[[0.8542, 0.2155, 0.0625], [0.8703, 0.2537, 0.0899]]])
in0Con73796 = tf.constant([[[0.4127, 0.0686, 0.2242, 0.6581, 0.9598, 0.189, 0.7931, 0.6784, 0.2773], [0.7227, 0.4099, 0.9955, 0.7119, 0.45, 0.0746, 0.6624, 0.0684, 0.4768]]])
print (np.array2string(model.predict([in0Ave42868,in1Ave42868,in0Con88770,in0Ave50666,in1Ave50666,in0Con14729,in0Sub70652,in1Sub70652,in0Sub37354,in1Sub37354,in0Con73796],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Min91060.png')

LAve42868 = average_layer([[[[0.3], [0.9606]]], [[[0.3725], [0.938]]]], Ave42868), 
LCon88770 = concatenate_layer([Ave42868,[[[0.9894, 0.5662, 0.7593, 0.5961, 0.6518, 0.5712, 0.1511, 0.5804, 0.9247, 0.9121, 0.195], [0.3909, 0.4637, 0.042, 0.4925, 0.4547, 0.393, 0.4035, 0.3611, 0.1583, 0.1403, 0.88]]]], 2, Con88770), 
LAve50666 = average_layer([[[[0.1038]]], [[[0.5109]]]], Ave50666), 
LRes82098 = reshape_layer(Ave50666, [1, 1, 1], Res82098), 
LRes17279 = reshape_layer(Res82098, [1, 1, 1, 1], Res17279), 
LZer47762 = zero_padding3D_layer(Res17279, 1, 0, 2, 0, 1, 0, Zer47762), 
LCon14729 = concatenate_layer([Zer47762,[[[[[0.6035], [0.4811]], [[0.0651], [0.6123]], [[0.1473], [0.7872]]], [[[0.8199], [0.8856]], [[0.3791], [0.0321]], [[0.3215], [0.7526]]]]]], 4, Con14729), 
LSub70652 = subtract_layer([[[[[0.0564, 0.2042], [0.2234, 0.2133]], [[0.2611, 0.4253], [0.8435, 0.5897]], [[0.837, 0.101], [0.5041, 0.5459]]], [[[0.5309, 0.3758], [0.4321, 0.8354]], [[0.1142, 0.9689], [0.8126, 0.0852]], [[0.7222, 0.2544], [0.805, 0.0888]]]]], [[[[[0.0988, 0.3996], [0.4245, 0.0779]], [[0.4523, 0.3025], [0.3696, 0.5955]], [[0.7959, 0.3087], [0.502, 0.4104]]], [[[0.9748, 0.3343], [0.9623, 0.6359]], [[0.0584, 0.0712], [0.8393, 0.8471]], [[0.4193, 0.412], [0.9027, 0.5246]]]]], Sub70652), 
LSub54967 = subtract_layer(Con14729,Sub70652, Sub54967), 
LRes1015 = reshape_layer(Sub54967, [2, 3, 4], Res1015), 
LRes57231 = reshape_layer(Res1015, [2, 12], Res57231), 
LSub37354 = subtract_layer([[[0.6106, 0.0932, 0.1536], [0.5993, 0.1044, 0.8269]]], [[[0.8542, 0.2155, 0.0625], [0.8703, 0.2537, 0.0899]]], Sub37354), 
LCon73796 = concatenate_layer([Sub37354,[[[0.4127, 0.0686, 0.2242, 0.6581, 0.9598, 0.189, 0.7931, 0.6784, 0.2773], [0.7227, 0.4099, 0.9955, 0.7119, 0.45, 0.0746, 0.6624, 0.0684, 0.4768]]]], 2, Con73796), 
LAdd19119 = add_layer([Res57231,Con73796], Add19119), 
LMin91060 = minimum_layer([Con88770,Add19119], Min91060), 
exec_layers([LAve42868,LCon88770,LAve50666,LRes82098,LRes17279,LZer47762,LCon14729,LSub70652,LSub54967,LRes1015,LRes57231,LSub37354,LCon73796,LAdd19119,LMin91060],["Ave42868","Con88770","Ave50666","Res82098","Res17279","Zer47762","Con14729","Sub70652","Sub54967","Res1015","Res57231","Sub37354","Con73796","Add19119","Min91060"],Min91060,"Min91060")

Actual (Unparsed): [[[-0.2012000, 0.6766000, 0.2922000, 0.7584000, 0.2598000, 0.1665000, 0.1842000, 0.1511000, 0.1479000, 0.9247000, 0.6762999, 0.1950000], [0.1729000, 0.3909000, 0.4637000, 0.0420000, 0.3541000, 0.4547000, 0.3930000, 0.4035000, -0.2283000, 0.1583000, 0.1403000, 0.8800000]]]

Expected (Unparsed): [[[-0.20119999999999993,0.6766000000000001,0.2922,0.7584,0.2598,0.16649999999999998,0.18419999999999997,0.1511,0.1479000000000001,0.9247,0.6763,0.195],[0.17290000000000005,0.3909,0.4637,0.042,0.35409999999999997,0.4547,0.393,0.4035,-0.22829999999999995,0.1583,0.1403,0.88]]]

Actual:   [[[-0.2012, 0.6766, 0.2922, 0.7584, 0.2598, 0.1665, 0.1842, 0.1511, 0.1479, 0.9247, 0.6763, 0.195], [0.1729, 0.3909, 0.4637, 0.042, 0.3541, 0.4547, 0.393, 0.4035, -0.2283, 0.1583, 0.1403, 0.88]]]

Expected: [[[-0.2011, 0.6767, 0.2922, 0.7584, 0.2598, 0.1665, 0.1842, 0.1511, 0.148, 0.9247, 0.6763, 0.195], [0.173, 0.3909, 0.4637, 0.042, 0.3541, 0.4547, 0.393, 0.4035, -0.2282, 0.1583, 0.1403, 0.88]]]