import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Con49130 = tf.keras.layers.Input(shape=([1, 1, 2, 1]))

Con49130 = keras.layers.Conv3DTranspose(2, (1, 1, 1),strides=(1, 8, 1), padding='valid', name = 'Con49130', )(in0Con49130)
ELU91772 = keras.layers.ELU(alpha=-9.255088712011894, name = 'ELU91772', )(Con49130)
Res35023 = keras.layers.Reshape((1, 8, 4), name = 'Res35023', )(ELU91772)
Res76059 = keras.layers.Reshape((1, 32), name = 'Res76059', )(Res35023)
Per81449 = keras.layers.Permute((1,2), name = 'Per81449',)(Res76059)
Res86086 = keras.layers.Reshape((1, 32, 1), name = 'Res86086', )(Per81449)
Sep98192 = keras.layers.SeparableConv2D(4, (1, 9),strides=(1, 1), padding='same', name = 'Sep98192', )(Res86086)
Res52082 = keras.layers.Reshape((1, 128), name = 'Res52082', )(Sep98192)
Con27498 = keras.layers.Conv1D(2, (1),strides=(1), padding='same', dilation_rate=(1), name = 'Con27498', )(Res52082)
Sim80114 = keras.layers.SimpleRNN(2,name = 'Sim80114', )(Con27498)
model = tf.keras.models.Model(inputs=[in0Con49130], outputs=Sim80114)
w = model.get_layer('Con49130').get_weights() 
w[0] = np.array([[[[[0.8146], [0.6652]]]]])
w[1] = np.array([0, 0])
model.get_layer('Con49130').set_weights(w) 
w = model.get_layer('Sep98192').get_weights() 
w[0] = np.array([[[[0.8711]], [[0.9452]], [[0.0557]], [[0.935]], [[0.0096]], [[0.1455]], [[0.2562]], [[0.8503]], [[0.4546]]]])
w[1] = np.array([[[[0.9246, 0.4834, 0.5407, 0.3044]]]])
w[2] = np.array([0, 0, 0, 0])
model.get_layer('Sep98192').set_weights(w) 
w = model.get_layer('Con27498').get_weights() 
w[0] = np.array([[[0.165, 0.9782], [0.5153, 0.4229], [0.084, 0.4775], [0.1881, 0.3453], [0.0762, 0.1788], [0.021, 0.7417], [0.1845, 0.3902], [0.4178, 0.4629], [0.6313, 0.9962], [0.1951, 0.8095], [0.4892, 0.246], [0.9409, 0.9252], [0.9211, 0.6108], [0.7392, 0.9729], [0.7022, 0.503], [0.0951, 0.9004], [0.805, 0.8115], [0.7285, 0.1578], [0.6693, 0.4052], [0.0108, 0.8158], [0.4055, 0.9847], [0.2134, 0.1535], [0.5907, 0.9194], [0.408, 0.9301], [0.4993, 0.9993], [0.814, 0.2406], [0.5852, 0.3506], [0.6219, 0.0631], [0.7798, 0.1166], [0.8414, 0.3515], [0.705, 0.8912], [0.5164, 0.799], [0.2115, 0.3041], [0.7322, 0.207], [0.7488, 0.6068], [0.198, 0.7278], [0.95, 0.5823], [0.8305, 0.1185], [0.4695, 0.6135], [0.6873, 0.5445], [0.5511, 0.283], [0.8022, 0.3991], [0.0264, 0.4495], [0.9604, 0.0697], [0.439, 0.3481], [0.2183, 0.5734], [0.7774, 0.8958], [0.0197, 0.5089], [0.8597, 0.048], [0.0907, 0.8283], [0.7598, 0.7495], [0.9038, 0.5178], [0.7891, 0.7486], [0.3965, 0.3964], [0.4574, 0.3042], [0.7977, 0.8887], [0.5212, 0.6051], [0.876, 0.8121], [0.7021, 0.5399], [0.6519, 0.9251], [0.9061, 0.3126], [0.6391, 0.2337], [0.8058, 0.2782], [0.9727, 0.8205], [0.4642, 0.2914], [0.3657, 0.2711], [0.2721, 0.8054], [0.6914, 0.6085], [0.8448, 0.9365], [0.1347, 0.0119], [0.6853, 0.7181], [0.2746, 0.5001], [0.356, 0.8098], [0.1677, 0.1862], [0.6228, 0.9947], [0.4849, 0.6743], [0.5355, 0.905], [0.0218, 0.6625], [0.6907, 0.5469], [0.4517, 0.8389], [0.987, 0.3616], [0.0163, 0.7153], [0.0282, 0.7554], [0.9633, 0.1283], [0.9529, 0.2603], [0.9295, 0.7566], [0.8804, 0.7434], [0.1398, 0.1535], [0.3479, 0.3759], [0.2505, 0.4714], [0.0854, 0.3915], [0.8965, 0.2716], [0.225, 0.0179], [0.5203, 0.5503], [0.5745, 0.3489], [0.8597, 0.3916], [0.8968, 0.3379], [0.5481, 0.4595], [0.2332, 0.5435], [0.6428, 0.8811], [0.1847, 0.7312], [0.5383, 0.9394], [0.7195, 0.9462], [0.6444, 0.393], [0.5189, 0.2139], [0.4123, 0.1745], [0.0881, 0.5917], [0.7782, 0.6755], [0.8619, 0.9024], [0.8608, 0.8246], [0.3188, 0.1114], [0.7945, 0.6852], [0.6773, 0.9745], [0.9127, 0.3592], [0.095, 0.281], [0.1038, 0.5662], [0.4178, 0.7424], [0.0535, 0.3873], [0.4308, 0.3377], [0.2626, 0.3146], [0.2544, 0.7148], [0.1806, 0.9223], [0.9958, 0.0698], [0.5319, 0.1933], [0.0196, 0.7777], [0.9297, 0.7751], [0.232, 0.9333], [0.1671, 0.213]]])
w[1] = np.array([0, 0])
model.get_layer('Con27498').set_weights(w) 
w = model.get_layer('Sim80114').get_weights() 
w[0] = np.array([[8, 10], [9, 8]])
w[1] = np.array([[5, 4], [5, 5]])
w[2] = np.array([4, 8])
model.get_layer('Sim80114').set_weights(w) 
in0Con49130 = tf.constant([[[[[0.2576], [0.2958]]]]])
print (np.array2string(model.predict([in0Con49130],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Sim80114.png')

LCon49130 = conv3D_transpose_layer([[[[[0.2576], [0.2958]]]]], 1, 1, 1,[[[[[0.8146], [0.6652]]]]],[0, 0], 1, 8, 1, false, Con49130), 
LELU91772 = elu_layer(Con49130, -9.255088712011894, ELU91772), 
LRes35023 = reshape_layer(ELU91772, [1, 8, 4], Res35023), 
LRes76059 = reshape_layer(Res35023, [1, 32], Res76059), 
LPer81449 = permute_layer(Res76059, 1,2, Per81449), 
LRes86086 = reshape_layer(Per81449, [1, 32, 1], Res86086), 
LSep98192 = separable_conv2D_layer(Res86086, 1, 9,[[[[[0.8711]], [[0.9452]], [[0.0557]], [[0.935]], [[0.0096]], [[0.1455]], [[0.2562]], [[0.8503]], [[0.4546]]]],[[[[0.9246, 0.4834, 0.5407, 0.3044]]]]],[0, 0, 0, 0], 1, 1, true, Sep98192), 
LRes52082 = reshape_layer(Sep98192, [1, 128], Res52082), 
LCon27498 = conv1D_layer(Res52082, 1,[[[0.165, 0.9782], [0.5153, 0.4229], [0.084, 0.4775], [0.1881, 0.3453], [0.0762, 0.1788], [0.021, 0.7417], [0.1845, 0.3902], [0.4178, 0.4629], [0.6313, 0.9962], [0.1951, 0.8095], [0.4892, 0.246], [0.9409, 0.9252], [0.9211, 0.6108], [0.7392, 0.9729], [0.7022, 0.503], [0.0951, 0.9004], [0.805, 0.8115], [0.7285, 0.1578], [0.6693, 0.4052], [0.0108, 0.8158], [0.4055, 0.9847], [0.2134, 0.1535], [0.5907, 0.9194], [0.408, 0.9301], [0.4993, 0.9993], [0.814, 0.2406], [0.5852, 0.3506], [0.6219, 0.0631], [0.7798, 0.1166], [0.8414, 0.3515], [0.705, 0.8912], [0.5164, 0.799], [0.2115, 0.3041], [0.7322, 0.207], [0.7488, 0.6068], [0.198, 0.7278], [0.95, 0.5823], [0.8305, 0.1185], [0.4695, 0.6135], [0.6873, 0.5445], [0.5511, 0.283], [0.8022, 0.3991], [0.0264, 0.4495], [0.9604, 0.0697], [0.439, 0.3481], [0.2183, 0.5734], [0.7774, 0.8958], [0.0197, 0.5089], [0.8597, 0.048], [0.0907, 0.8283], [0.7598, 0.7495], [0.9038, 0.5178], [0.7891, 0.7486], [0.3965, 0.3964], [0.4574, 0.3042], [0.7977, 0.8887], [0.5212, 0.6051], [0.876, 0.8121], [0.7021, 0.5399], [0.6519, 0.9251], [0.9061, 0.3126], [0.6391, 0.2337], [0.8058, 0.2782], [0.9727, 0.8205], [0.4642, 0.2914], [0.3657, 0.2711], [0.2721, 0.8054], [0.6914, 0.6085], [0.8448, 0.9365], [0.1347, 0.0119], [0.6853, 0.7181], [0.2746, 0.5001], [0.356, 0.8098], [0.1677, 0.1862], [0.6228, 0.9947], [0.4849, 0.6743], [0.5355, 0.905], [0.0218, 0.6625], [0.6907, 0.5469], [0.4517, 0.8389], [0.987, 0.3616], [0.0163, 0.7153], [0.0282, 0.7554], [0.9633, 0.1283], [0.9529, 0.2603], [0.9295, 0.7566], [0.8804, 0.7434], [0.1398, 0.1535], [0.3479, 0.3759], [0.2505, 0.4714], [0.0854, 0.3915], [0.8965, 0.2716], [0.225, 0.0179], [0.5203, 0.5503], [0.5745, 0.3489], [0.8597, 0.3916], [0.8968, 0.3379], [0.5481, 0.4595], [0.2332, 0.5435], [0.6428, 0.8811], [0.1847, 0.7312], [0.5383, 0.9394], [0.7195, 0.9462], [0.6444, 0.393], [0.5189, 0.2139], [0.4123, 0.1745], [0.0881, 0.5917], [0.7782, 0.6755], [0.8619, 0.9024], [0.8608, 0.8246], [0.3188, 0.1114], [0.7945, 0.6852], [0.6773, 0.9745], [0.9127, 0.3592], [0.095, 0.281], [0.1038, 0.5662], [0.4178, 0.7424], [0.0535, 0.3873], [0.4308, 0.3377], [0.2626, 0.3146], [0.2544, 0.7148], [0.1806, 0.9223], [0.9958, 0.0698], [0.5319, 0.1933], [0.0196, 0.7777], [0.9297, 0.7751], [0.232, 0.9333], [0.1671, 0.213]]],[0, 0], 1, true, 1, Con27498), 
LSim80114 = simple_rnn_layer(Con27498,[[8, 10], [9, 8]],[[5, 4], [5, 5]],[4, 8], Sim80114), 
exec_layers([LCon49130,LELU91772,LRes35023,LRes76059,LPer81449,LRes86086,LSep98192,LRes52082,LCon27498,LSim80114],["Con49130","ELU91772","Res35023","Res76059","Per81449","Res86086","Sep98192","Res52082","Con27498","Sim80114"],Sim80114,"Sim80114")

Actual (Unparsed): [[1.0000000, 1.0000000]]

Expected (Unparsed): [[1.0,1.0]]

Actual:   [[1, 1]]

Expected: [[1, 1]]