import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Up_87925 = tf.keras.layers.Input(shape=([1, 3]))
in0Ave79418 = tf.keras.layers.Input(shape=([1, 2]))
in1Ave79418 = tf.keras.layers.Input(shape=([1, 2]))
in0Con33119 = tf.keras.layers.Input(shape=([2, 1]))

Up_87925 = keras.layers.UpSampling1D(size=(2), name = 'Up_87925', )(in0Up_87925)
Ave79418 = keras.layers.Average(name = 'Ave79418', )([in0Ave79418,in1Ave79418])
Lea76231 = keras.layers.LeakyReLU(alpha=3.763355023293326, name = 'Lea76231', )(Ave79418)
Zer46282 = keras.layers.ZeroPadding1D(padding=((1, 0)), name = 'Zer46282', )(Lea76231)
Con33119 = keras.layers.Concatenate(axis=2, name = 'Con33119', )([Zer46282,in0Con33119])
Mul73030 = keras.layers.Multiply(name = 'Mul73030', )([Up_87925,Con33119])
model = tf.keras.models.Model(inputs=[in0Up_87925,in0Ave79418,in1Ave79418,in0Con33119], outputs=Mul73030)
in0Up_87925 = tf.constant([[[1.7965, 1.3445, 1.6266]]])
in0Ave79418 = tf.constant([[[0.8355, 0.6054]]])
in1Ave79418 = tf.constant([[[0.4618, 0.1617]]])
in0Con33119 = tf.constant([[[0.9421], [0.203]]])
print (np.array2string(model.predict([in0Up_87925,in0Ave79418,in1Ave79418,in0Con33119],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Mul73030.png')

LUp_87925 = up_sampling1D_layer([[[1.7965, 1.3445, 1.6266]]], 2, Up_87925), 
LAve79418 = average_layer([[[[0.8355, 0.6054]]], [[[0.4618, 0.1617]]]], Ave79418), 
LLea76231 = leaky_relu_layer(Ave79418, 3.763355023293326, Lea76231), 
LZer46282 = zero_padding1D_layer(Lea76231, 1, 0, Zer46282), 
LCon33119 = concatenate_layer([Zer46282,[[[0.9421], [0.203]]]], 2, Con33119), 
LMul73030 = multiply_layer([Up_87925,Con33119], Mul73030), 
exec_layers([LUp_87925,LAve79418,LLea76231,LZer46282,LCon33119,LMul73030],["Up_87925","Ave79418","Lea76231","Zer46282","Con33119","Mul73030"],Mul73030,"Mul73030")

Actual (Unparsed): [[[0.0000000, 0.0000000, 1.5324199], [1.1652997, 0.5156830, 0.3301998]]]

Expected (Unparsed): [[[0.0,0.0,1.53241986],[1.165299725,0.515682975,0.33019980000000004]]]

Actual:   [[[0, 0, 1.5325], [1.1653, 0.5157, 0.3302]]]

Expected: [[[0, 0, 1.5325], [1.1653, 0.5157, 0.3302]]]