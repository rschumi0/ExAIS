import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Max4958 = tf.keras.layers.Input(shape=([2, 2]))
in1Max4958 = tf.keras.layers.Input(shape=([2, 2]))

Max4958 = keras.layers.Maximum(name = 'Max4958', )([in0Max4958,in1Max4958])
Res47183 = keras.layers.Reshape((2, 2, 1), name = 'Res47183', )(Max4958)
Res18924 = keras.layers.Reshape((2, 2, 1, 1), name = 'Res18924', )(Res47183)
Up_73394 = keras.layers.UpSampling3D(size=(1, 1, 2), name = 'Up_73394', )(Res18924)
Mas35416 = keras.layers.Masking(mask_value=1, name = 'Mas35416', )(Up_73394)
model = tf.keras.models.Model(inputs=[in0Max4958,in1Max4958], outputs=Mas35416)
in0Max4958 = tf.constant([[[0.49, 0.5855], [0.3317, 0.8196]]])
in1Max4958 = tf.constant([[[0.2603, 0.3081], [0.9248, 0.9635]]])
print (np.array2string(model.predict([in0Max4958,in1Max4958],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Mas35416.png')

LMax4958 = maximum_layer([[[[0.49, 0.5855], [0.3317, 0.8196]]], [[[0.2603, 0.3081], [0.9248, 0.9635]]]], Max4958), 
LRes47183 = reshape_layer(Max4958, [2, 2, 1], Res47183), 
LRes18924 = reshape_layer(Res47183, [2, 2, 1, 1], Res18924), 
LUp_73394 = up_sampling3D_layer(Res18924, 1, 1, 2, Up_73394), 
LMas35416 = masking_layer(Up_73394, 1, Mas35416), 
exec_layers([LMax4958,LRes47183,LRes18924,LUp_73394,LMas35416],["Max4958","Res47183","Res18924","Up_73394","Mas35416"],Mas35416,"Mas35416")

Actual (Unparsed): [[[[[0.4900000], [0.4900000]], [[0.5855000], [0.5855000]]], [[[0.9248000], [0.9248000]], [[0.9635000], [0.9635000]]]]]

Expected (Unparsed): [[[[[0.49],[0.49]],[[0.5855],[0.5855]]],[[[0.9248],[0.9248]],[[0.9635],[0.9635]]]]]

Actual:   [[[[[0.49], [0.49]], [[0.5855], [0.5855]]], [[[0.9248], [0.9248]], [[0.9635], [0.9635]]]]]

Expected: [[[[[0.49], [0.49]], [[0.5855], [0.5855]]], [[[0.9248], [0.9248]], [[0.9635], [0.9635]]]]]