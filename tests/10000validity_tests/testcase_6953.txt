import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Dot81396 = tf.keras.layers.Input(shape=([3]))
in1Dot81396 = tf.keras.layers.Input(shape=([3]))
in0Ave16377 = tf.keras.layers.Input(shape=([2, 1, 1, 1]))
in1Ave16377 = tf.keras.layers.Input(shape=([2, 1, 1, 1]))
in0Con9809 = tf.keras.layers.Input(shape=([2, 2, 2, 1]))
in0Glo41368 = tf.keras.layers.Input(shape=([2, 1]))
in0Con9217 = tf.keras.layers.Input(shape=([1]))
in0Glo17138 = tf.keras.layers.Input(shape=([1, 2]))
in0Con81390 = tf.keras.layers.Input(shape=([2, 2, 2, 1]))
in0Mul20209 = tf.keras.layers.Input(shape=([1, 1, 2, 1]))
in1Mul20209 = tf.keras.layers.Input(shape=([1, 1, 2, 1]))
in0Con40831 = tf.keras.layers.Input(shape=([2, 2, 2, 1]))
in0Sub86226 = tf.keras.layers.Input(shape=([2, 2, 2, 2]))
in1Sub86226 = tf.keras.layers.Input(shape=([2, 2, 2, 2]))

Dot81396 = keras.layers.Dot(axes=(1, 1), name = 'Dot81396', )([in0Dot81396,in1Dot81396])
Res8641 = keras.layers.Reshape((1, 1), name = 'Res8641', )(Dot81396)
Res32793 = keras.layers.Reshape((1, 1, 1), name = 'Res32793', )(Res8641)
Res93192 = keras.layers.Reshape((1, 1, 1, 1), name = 'Res93192', )(Res32793)
Zer95660 = keras.layers.ZeroPadding3D(padding=((1, 0), (0, 0), (0, 0)), name = 'Zer95660', )(Res93192)
Ave16377 = keras.layers.Average(name = 'Ave16377', )([in0Ave16377,in1Ave16377])
Mul32572 = keras.layers.Multiply(name = 'Mul32572', )([Zer95660,Ave16377])
Zer90292 = keras.layers.ZeroPadding3D(padding=((0, 0), (1, 0), (1, 0)), name = 'Zer90292', )(Mul32572)
Con9809 = keras.layers.Concatenate(axis=4, name = 'Con9809', )([Zer90292,in0Con9809])
Glo41368 = keras.layers.GlobalMaxPool1D(name = 'Glo41368', )(in0Glo41368)
Con9217 = keras.layers.Concatenate(axis=1, name = 'Con9217', )([Glo41368,in0Con9217])
Glo17138 = keras.layers.GlobalAveragePooling1D(name = 'Glo17138', )(in0Glo17138)
Mul41678 = keras.layers.Multiply(name = 'Mul41678', )([Con9217,Glo17138])
Res29855 = keras.layers.Reshape((2, 1), name = 'Res29855', )(Mul41678)
Res58829 = keras.layers.Reshape((2, 1, 1), name = 'Res58829', )(Res29855)
Res42628 = keras.layers.Reshape((2, 1, 1, 1), name = 'Res42628', )(Res58829)
Zer95460 = keras.layers.ZeroPadding3D(padding=((0, 0), (1, 0), (1, 0)), name = 'Zer95460', )(Res42628)
Con81390 = keras.layers.Concatenate(axis=4, name = 'Con81390', )([Zer95460,in0Con81390])
Mul20209 = keras.layers.Multiply(name = 'Mul20209', )([in0Mul20209,in1Mul20209])
Zer12153 = keras.layers.ZeroPadding3D(padding=((1, 0), (1, 0), (0, 0)), name = 'Zer12153', )(Mul20209)
Con40831 = keras.layers.Concatenate(axis=4, name = 'Con40831', )([Zer12153,in0Con40831])
Sub86226 = keras.layers.Subtract(name = 'Sub86226', )([in0Sub86226,in1Sub86226])
Min70049 = keras.layers.Minimum(name = 'Min70049', )([Con40831,Sub86226])
Mul226 = keras.layers.Multiply(name = 'Mul226', )([Con81390,Min70049])
Sub37587 = keras.layers.Subtract(name = 'Sub37587', )([Con9809,Mul226])
model = tf.keras.models.Model(inputs=[in0Dot81396,in1Dot81396,in0Ave16377,in1Ave16377,in0Con9809,in0Glo41368,in0Con9217,in0Glo17138,in0Con81390,in0Mul20209,in1Mul20209,in0Con40831,in0Sub86226,in1Sub86226], outputs=Sub37587)
in0Dot81396 = tf.constant([[0.0751, 0.3803, 0.183]])
in1Dot81396 = tf.constant([[0.8847, 0.0228, 0.2692]])
in0Ave16377 = tf.constant([[[[[0.5033]]], [[[0.3237]]]]])
in1Ave16377 = tf.constant([[[[[0.3665]]], [[[0.1401]]]]])
in0Con9809 = tf.constant([[[[[0.9328], [0.0875]], [[0.5513], [0.7588]]], [[[0.8761], [0.705]], [[0.5138], [0.6966]]]]])
in0Glo41368 = tf.constant([[[1.1151], [1.7689]]])
in0Con9217 = tf.constant([[0.374]])
in0Glo17138 = tf.constant([[[1.6064, 1.7789]]])
in0Con81390 = tf.constant([[[[[0.3491], [0.3824]], [[0.3127], [0.761]]], [[[0.996], [0.4335]], [[0.1653], [0.4601]]]]])
in0Mul20209 = tf.constant([[[[[0.9005], [0.02]]]]])
in1Mul20209 = tf.constant([[[[[0.4612], [0.8406]]]]])
in0Con40831 = tf.constant([[[[[0.4064], [0.8803]], [[0.0683], [0.5309]]], [[[0.7885], [0.8085]], [[0.013], [0.7831]]]]])
in0Sub86226 = tf.constant([[[[[0.7067, 0.4133], [0.4813, 0.5689]], [[0.6041, 0.7401], [0.931, 0.8278]]], [[[0.5918, 0.298], [0.3231, 0.7962]], [[0.2656, 0.461], [0.7252, 0.7955]]]]])
in1Sub86226 = tf.constant([[[[[0.2761, 0.9884], [0.1045, 0.4998]], [[0.634, 0.2651], [0.5304, 0.2111]]], [[[0.0439, 0.8121], [0.0096, 0.9767]], [[0.4888, 0.6923], [0.0959, 0.0675]]]]])
print (np.array2string(model.predict([in0Dot81396,in1Dot81396,in0Ave16377,in1Ave16377,in0Con9809,in0Glo41368,in0Con9217,in0Glo17138,in0Con81390,in0Mul20209,in1Mul20209,in0Con40831,in0Sub86226,in1Sub86226],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Sub37587.png')

LDot81396 = dot_layer([[0.0751, 0.3803, 0.183]], [[0.8847, 0.0228, 0.2692]], 1, 1, Dot81396), 
LRes8641 = reshape_layer(Dot81396, [1, 1], Res8641), 
LRes32793 = reshape_layer(Res8641, [1, 1, 1], Res32793), 
LRes93192 = reshape_layer(Res32793, [1, 1, 1, 1], Res93192), 
LZer95660 = zero_padding3D_layer(Res93192, 1, 0, 0, 0, 0, 0, Zer95660), 
LAve16377 = average_layer([[[[[[0.5033]]], [[[0.3237]]]]], [[[[[0.3665]]], [[[0.1401]]]]]], Ave16377), 
LMul32572 = multiply_layer([Zer95660,Ave16377], Mul32572), 
LZer90292 = zero_padding3D_layer(Mul32572, 0, 0, 1, 0, 1, 0, Zer90292), 
LCon9809 = concatenate_layer([Zer90292,[[[[[0.9328], [0.0875]], [[0.5513], [0.7588]]], [[[0.8761], [0.705]], [[0.5138], [0.6966]]]]]], 4, Con9809), 
LGlo41368 = global_max_pool1D_layer([[[1.1151], [1.7689]]], Glo41368), 
LCon9217 = concatenate_layer([Glo41368,[[0.374]]], 1, Con9217), 
LGlo17138 = global_average_pooling1D_layer([[[1.6064, 1.7789]]], Glo17138), 
LMul41678 = multiply_layer([Con9217,Glo17138], Mul41678), 
LRes29855 = reshape_layer(Mul41678, [2, 1], Res29855), 
LRes58829 = reshape_layer(Res29855, [2, 1, 1], Res58829), 
LRes42628 = reshape_layer(Res58829, [2, 1, 1, 1], Res42628), 
LZer95460 = zero_padding3D_layer(Res42628, 0, 0, 1, 0, 1, 0, Zer95460), 
LCon81390 = concatenate_layer([Zer95460,[[[[[0.3491], [0.3824]], [[0.3127], [0.761]]], [[[0.996], [0.4335]], [[0.1653], [0.4601]]]]]], 4, Con81390), 
LMul20209 = multiply_layer([[[[[[0.9005], [0.02]]]]], [[[[[0.4612], [0.8406]]]]]], Mul20209), 
LZer12153 = zero_padding3D_layer(Mul20209, 1, 0, 1, 0, 0, 0, Zer12153), 
LCon40831 = concatenate_layer([Zer12153,[[[[[0.4064], [0.8803]], [[0.0683], [0.5309]]], [[[0.7885], [0.8085]], [[0.013], [0.7831]]]]]], 4, Con40831), 
LSub86226 = subtract_layer([[[[[0.7067, 0.4133], [0.4813, 0.5689]], [[0.6041, 0.7401], [0.931, 0.8278]]], [[[0.5918, 0.298], [0.3231, 0.7962]], [[0.2656, 0.461], [0.7252, 0.7955]]]]], [[[[[0.2761, 0.9884], [0.1045, 0.4998]], [[0.634, 0.2651], [0.5304, 0.2111]]], [[[0.0439, 0.8121], [0.0096, 0.9767]], [[0.4888, 0.6923], [0.0959, 0.0675]]]]], Sub86226), 
LMin70049 = minimum_layer([Con40831,Sub86226], Min70049), 
LMul226 = multiply_layer([Con81390,Min70049], Mul226), 
LSub37587 = subtract_layer(Con9809,Mul226, Sub37587), 
exec_layers([LDot81396,LRes8641,LRes32793,LRes93192,LZer95660,LAve16377,LMul32572,LZer90292,LCon9809,LGlo41368,LCon9217,LGlo17138,LMul41678,LRes29855,LRes58829,LRes42628,LZer95460,LCon81390,LMul20209,LZer12153,LCon40831,LSub86226,LMin70049,LMul226,LSub37587],["Dot81396","Res8641","Res32793","Res93192","Zer95660","Ave16377","Mul32572","Zer90292","Con9809","Glo41368","Con9217","Glo17138","Mul41678","Res29855","Res58829","Res42628","Zer95460","Con81390","Mul20209","Zer12153","Con40831","Sub86226","Min70049","Mul226","Sub37587"],Sub37587,"Sub37587")

Actual (Unparsed): [[[[[0.0000000, 1.1335674], [0.0000000, 0.0610762]], [[0.0000000, 0.5299426], [0.0000000, 0.3547851]]], [[[0.0000000, 1.3881436], [0.0000000, 0.7832467]], [[0.0000000, 0.5520339], [0.0176575, 0.3616472]]]]]

Expected (Unparsed): [[[[[0,1.13356741],[0,0.06107616000000002]],[[0.0,0.52994259],[0.0,0.3547851]]],[[[0,1.3881436],[0,0.78324675]],[[0.0,0.55203389],[0.0176574893958,0.3616472]]]]]

Actual:   [[[[[0, 1.1336], [0, 0.0611]], [[0, 0.53], [0, 0.3548]]], [[[0, 1.3882], [0, 0.7833]], [[0, 0.5521], [0.0177, 0.3617]]]]]

Expected: [[[[[0, 1.1336], [0, 0.0611]], [[0, 0.53], [0, 0.3548]]], [[[0, 1.3882], [0, 0.7833]], [[0, 0.5521], [0.0177, 0.3617]]]]]