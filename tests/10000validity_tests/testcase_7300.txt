import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Dep80329 = tf.keras.layers.Input(shape=([1, 2, 1]))
in0Con25094 = tf.keras.layers.Input(shape=([1, 2, 1, 3]))
in0Cro53007 = tf.keras.layers.Input(shape=([1, 4, 2, 4]))
in0Con7313 = tf.keras.layers.Input(shape=([8, 1]))
in0Max73854 = tf.keras.layers.Input(shape=([2, 1, 2]))
in1Max73854 = tf.keras.layers.Input(shape=([2, 1, 2]))

Dep80329 = keras.layers.DepthwiseConv2D((1, 1),strides=(1, 1), padding='valid', name = 'Dep80329', )(in0Dep80329)
ReL9096 = keras.layers.ReLU(max_value=4.2077866898322736, negative_slope=4.592881476446475, threshold=4.431654346992375, name = 'ReL9096', )(Dep80329)
Res48910 = keras.layers.Reshape((1, 2, 1, 1), name = 'Res48910', )(ReL9096)
Con25094 = keras.layers.Concatenate(axis=4, name = 'Con25094', )([Res48910,in0Con25094])
Cro53007 = keras.layers.Cropping3D(cropping=((0, 0), (2, 1), (1, 0)), name = 'Cro53007', )(in0Cro53007)
Zer66112 = keras.layers.ZeroPadding3D(padding=((0, 0), (1, 0), (0, 0)), name = 'Zer66112', )(Cro53007)
Mul8169 = keras.layers.Multiply(name = 'Mul8169', )([Con25094,Zer66112])
Res5896 = keras.layers.Reshape((1, 2, 4), name = 'Res5896', )(Mul8169)
Res14780 = keras.layers.Reshape((1, 8), name = 'Res14780', )(Res5896)
Glo7364 = keras.layers.GlobalAveragePooling1D(name = 'Glo7364', )(Res14780)
Res24841 = keras.layers.Reshape((8, 1), name = 'Res24841', )(Glo7364)
Con7313 = keras.layers.Concatenate(axis=2, name = 'Con7313', )([Res24841,in0Con7313])
Max73854 = keras.layers.Maximum(name = 'Max73854', )([in0Max73854,in1Max73854])
Res78036 = keras.layers.Reshape((2, 2), name = 'Res78036', )(Max73854)
Ave63780 = keras.layers.AveragePooling1D(pool_size=(2), name = 'Ave63780', )(Res78036)
Zer82593 = keras.layers.ZeroPadding1D(padding=((7, 0)), name = 'Zer82593', )(Ave63780)
Add42807 = keras.layers.Add(name = 'Add42807', )([Con7313,Zer82593])
model = tf.keras.models.Model(inputs=[in0Dep80329,in0Con25094,in0Cro53007,in0Con7313,in0Max73854,in1Max73854], outputs=Add42807)
w = model.get_layer('Dep80329').get_weights() 
w[0] = np.array([[[[0.2915]]]])
w[1] = np.array([0])
model.get_layer('Dep80329').set_weights(w) 
in0Dep80329 = tf.constant([[[[0.9525], [0.115]]]])
in0Con25094 = tf.constant([[[[[0.5069, 0.4821, 0.4001]], [[0.0064, 0.6548, 0.7536]]]]])
in0Cro53007 = tf.constant([[[[[1.1632, 1.9109, 1.4626, 1.8597], [1.6899, 1.5974, 1.8759, 1.9348]], [[1.0323, 1.498, 1.7887, 1.782], [1.7387, 1.8309, 1.3239, 1.5592]], [[1.0356, 1.2647, 1.4164, 1.139], [1.5873, 1.1871, 1.8436, 1.4552]], [[1.8385, 1.4985, 1.3115, 1.6452], [1.5885, 1.5422, 1.7753, 1.2742]]]]])
in0Con7313 = tf.constant([[[0.0919], [0.6798], [0.3552], [0.2122], [0.8123], [0.2038], [0.5319], [0.1081]]])
in0Max73854 = tf.constant([[[[0.818, 0.7618]], [[0.3065, 0.295]]]])
in1Max73854 = tf.constant([[[[0.9506, 0.6857]], [[0.249, 0.2939]]]])
print (np.array2string(model.predict([in0Dep80329,in0Con25094,in0Cro53007,in0Con7313,in0Max73854,in1Max73854],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Add42807.png')

LDep80329 = depthwise_conv2D_layer([[[[0.9525], [0.115]]]], 1, 1,[[[[0.2915]]]],[0], 1, 1, false, Dep80329), 
LReL9096 = relu_layer(Dep80329, 4.2077866898322736, 4.592881476446475, 4.431654346992375, ReL9096), 
LRes48910 = reshape_layer(ReL9096, [1, 2, 1, 1], Res48910), 
LCon25094 = concatenate_layer([Res48910,[[[[[0.5069, 0.4821, 0.4001]], [[0.0064, 0.6548, 0.7536]]]]]], 4, Con25094), 
LCro53007 = cropping3D_layer([[[[[1.1632, 1.9109, 1.4626, 1.8597], [1.6899, 1.5974, 1.8759, 1.9348]], [[1.0323, 1.498, 1.7887, 1.782], [1.7387, 1.8309, 1.3239, 1.5592]], [[1.0356, 1.2647, 1.4164, 1.139], [1.5873, 1.1871, 1.8436, 1.4552]], [[1.8385, 1.4985, 1.3115, 1.6452], [1.5885, 1.5422, 1.7753, 1.2742]]]]], 0, 0, 2, 1, 1, 0, Cro53007), 
LZer66112 = zero_padding3D_layer(Cro53007, 0, 0, 1, 0, 0, 0, Zer66112), 
LMul8169 = multiply_layer([Con25094,Zer66112], Mul8169), 
LRes5896 = reshape_layer(Mul8169, [1, 2, 4], Res5896), 
LRes14780 = reshape_layer(Res5896, [1, 8], Res14780), 
LGlo7364 = global_average_pooling1D_layer(Res14780, Glo7364), 
LRes24841 = reshape_layer(Glo7364, [8, 1], Res24841), 
LCon7313 = concatenate_layer([Res24841,[[[0.0919], [0.6798], [0.3552], [0.2122], [0.8123], [0.2038], [0.5319], [0.1081]]]], 2, Con7313), 
LMax73854 = maximum_layer([[[[[0.818, 0.7618]], [[0.3065, 0.295]]]], [[[[0.9506, 0.6857]], [[0.249, 0.2939]]]]], Max73854), 
LRes78036 = reshape_layer(Max73854, [2, 2], Res78036), 
LAve63780 = average_pooling1D_layer(Res78036, 2, Ave63780), 
LZer82593 = zero_padding1D_layer(Ave63780, 7, 0, Zer82593), 
LAdd42807 = add_layer([Con7313,Zer82593], Add42807), 
exec_layers([LDep80329,LReL9096,LRes48910,LCon25094,LCro53007,LZer66112,LMul8169,LRes5896,LRes14780,LGlo7364,LRes24841,LCon7313,LMax73854,LRes78036,LAve63780,LZer82593,LAdd42807],["Dep80329","ReL9096","Res48910","Con25094","Cro53007","Zer66112","Mul8169","Res5896","Res14780","Glo7364","Res24841","Con7313","Max73854","Res78036","Ave63780","Zer82593","Add42807"],Add42807,"Add42807")

Actual (Unparsed): [[[0.0000000, 0.0919000], [0.0000000, 0.6798000], [0.0000000, 0.3552000], [0.0000000, 0.2122000], [-32.0636149, 0.8123000], [0.0075974, 0.2038000], [1.2071893, 0.5319000], [1.7251887, 0.6365000]]]

Expected (Unparsed): [[[0.0,0.0919],[0.0,0.6798],[0.0,0.3552],[0.0,0.2122],[-32.063616017337,0.8123],[0.0075974400000000004,0.2038],[1.20718928,0.5319],[1.72518872,0.6365]]]

Actual:   [[[0, 0.0919], [0, 0.6798], [0, 0.3552], [0, 0.2122], [-32.0636, 0.8123], [0.0076, 0.2038], [1.2072, 0.5319], [1.7252, 0.6365]]]

Expected: [[[0, 0.0919], [0, 0.6798], [0, 0.3552], [0, 0.2122], [-32.0636, 0.8123], [0.0076, 0.2038], [1.2072, 0.5319], [1.7252, 0.6365]]]