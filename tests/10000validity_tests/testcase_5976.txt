import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0LST30000 = tf.keras.layers.Input(shape=([3, 3]))

LST30000 = keras.layers.LSTM(1,recurrent_activation='sigmoid', name = 'LST30000', )(in0LST30000)
Res73333 = keras.layers.Reshape((1, 1), name = 'Res73333', )(LST30000)
Zer41518 = keras.layers.ZeroPadding1D(padding=((1, 1)), name = 'Zer41518', )(Res73333)
model = tf.keras.models.Model(inputs=[in0LST30000], outputs=Zer41518)
w = model.get_layer('LST30000').get_weights() 
w[0] = np.array([[2, 5, 9, 6], [3, 3, 4, 3], [7, 6, 9, 1]])
w[1] = np.array([[3, 9, 10, 9]])
w[2] = np.array([3, 7, 8, 5])
model.get_layer('LST30000').set_weights(w) 
in0LST30000 = tf.constant([[[5, 10, 5], [2, 3, 8], [1, 1, 1]]])
print (np.array2string(model.predict([in0LST30000],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Zer41518.png')

LLST30000 = lstm_layer([[[5, 10, 5], [2, 3, 8], [1, 1, 1]]],[[2, 5, 9, 6], [3, 3, 4, 3], [7, 6, 9, 1]],[[3, 9, 10, 9]],[3, 7, 8, 5], LST30000), 
LRes73333 = reshape_layer(LST30000, [1, 1], Res73333), 
LZer41518 = zero_padding1D_layer(Res73333, 1, 1, Zer41518), 
exec_layers([LLST30000,LRes73333,LZer41518],["LST30000","Res73333","Zer41518"],Zer41518,"Zer41518")

Actual (Unparsed): [[[0.0000000], [0.9950548], [0.0000000]]]

Expected (Unparsed): [[[0],[0.9950547534674197],[0]]]

Actual:   [[[0], [0.9951], [0]]]

Expected: [[[0], [0.9951], [0]]]