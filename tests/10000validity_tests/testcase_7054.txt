import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Max35893 = tf.keras.layers.Input(shape=([1, 1, 1]))
in0Min97495 = tf.keras.layers.Input(shape=([1, 2, 2, 1]))
in1Min97495 = tf.keras.layers.Input(shape=([1, 2, 2, 1]))

Max35893 = keras.layers.MaxPool2D(pool_size=(1, 1), name = 'Max35893', )(in0Max35893)
Res30657 = keras.layers.Reshape((1, 1), name = 'Res30657', )(Max35893)
LST36838 = keras.layers.LSTM(3,recurrent_activation='sigmoid', name = 'LST36838', )(Res30657)
Res86229 = keras.layers.Reshape((3, 1), name = 'Res86229', )(LST36838)
PRe61683 = keras.layers.PReLU(name = 'PRe61683', )(Res86229)
Res66 = keras.layers.Reshape((3, 1, 1), name = 'Res66', )(PRe61683)
Res3457 = keras.layers.Reshape((3, 1, 1, 1), name = 'Res3457', )(Res66)
Zer86294 = keras.layers.ZeroPadding3D(padding=((0, 0), (2, 0), (2, 0)), name = 'Zer86294', )(Res3457)
Min97495 = keras.layers.Minimum(name = 'Min97495', )([in0Min97495,in1Min97495])
Zer20863 = keras.layers.ZeroPadding3D(padding=((2, 0), (1, 0), (1, 0)), name = 'Zer20863', )(Min97495)
Sub59208 = keras.layers.Subtract(name = 'Sub59208', )([Zer86294,Zer20863])
model = tf.keras.models.Model(inputs=[in0Max35893,in0Min97495,in1Min97495], outputs=Sub59208)
w = model.get_layer('LST36838').get_weights() 
w[0] = np.array([[6, 10, 4, 6, 7, 9, 9, 9, 5, 10, 8, 5]])
w[1] = np.array([[9, 3, 7, 7, 2, 5, 7, 9, 10, 4, 2, 7], [9, 9, 7, 1, 5, 8, 8, 8, 9, 2, 2, 3], [1, 1, 4, 7, 2, 4, 5, 1, 2, 5, 8, 3]])
w[2] = np.array([5, 2, 1, 3, 7, 9, 6, 1, 9, 9, 4, 4])
model.get_layer('LST36838').set_weights(w) 
w = model.get_layer('PRe61683').get_weights() 
w[0] = np.array([[0.4138], [0.9171], [0.3077]])
model.get_layer('PRe61683').set_weights(w) 
in0Max35893 = tf.constant([[[[1.155]]]])
in0Min97495 = tf.constant([[[[[0.6733], [0.8702]], [[0.8276], [0.7074]]]]])
in1Min97495 = tf.constant([[[[[0.8736], [0.988]], [[0.4531], [0.62]]]]])
print (np.array2string(model.predict([in0Max35893,in0Min97495,in1Min97495],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Sub59208.png')

LMax35893 = max_pool2D_layer([[[[1.155]]]], 1, 1, Max35893), 
LRes30657 = reshape_layer(Max35893, [1, 1], Res30657), 
LLST36838 = lstm_layer(Res30657,[[6, 10, 4, 6, 7, 9, 9, 9, 5, 10, 8, 5]],[[9, 3, 7, 7, 2, 5, 7, 9, 10, 4, 2, 7], [9, 9, 7, 1, 5, 8, 8, 8, 9, 2, 2, 3], [1, 1, 4, 7, 2, 4, 5, 1, 2, 5, 8, 3]],[5, 2, 1, 3, 7, 9, 6, 1, 9, 9, 4, 4], LST36838), 
LRes86229 = reshape_layer(LST36838, [3, 1], Res86229), 
LPRe61683 = prelu_layer(Res86229, [[0.4138], [0.9171], [0.3077]], PRe61683), 
LRes66 = reshape_layer(PRe61683, [3, 1, 1], Res66), 
LRes3457 = reshape_layer(Res66, [3, 1, 1, 1], Res3457), 
LZer86294 = zero_padding3D_layer(Res3457, 0, 0, 2, 0, 2, 0, Zer86294), 
LMin97495 = minimum_layer([[[[[[0.6733], [0.8702]], [[0.8276], [0.7074]]]]], [[[[[0.8736], [0.988]], [[0.4531], [0.62]]]]]], Min97495), 
LZer20863 = zero_padding3D_layer(Min97495, 2, 0, 1, 0, 1, 0, Zer20863), 
LSub59208 = subtract_layer(Zer86294,Zer20863, Sub59208), 
exec_layers([LMax35893,LRes30657,LLST36838,LRes86229,LPRe61683,LRes66,LRes3457,LZer86294,LMin97495,LZer20863,LSub59208],["Max35893","Res30657","LST36838","Res86229","PRe61683","Res66","Res3457","Zer86294","Min97495","Zer20863","Sub59208"],Sub59208,"Sub59208")

Actual (Unparsed): [[[[[0.0000000], [0.0000000], [0.0000000]], [[0.0000000], [0.0000000], [0.0000000]], [[0.0000000], [0.0000000], [0.7615914]]], [[[0.0000000], [0.0000000], [0.0000000]], [[0.0000000], [0.0000000], [0.0000000]], [[0.0000000], [0.0000000], [0.7615923]]], [[[0.0000000], [0.0000000], [0.0000000]], [[0.0000000], [-0.6733000], [-0.8702000]], [[0.0000000], [-0.4531000], [0.1400300]]]]]

Expected (Unparsed): [[[[[0],[0],[0]],[[0],[0],[0]],[[0],[0],[0.7615913875419517]]],[[[0],[0],[0]],[[0],[0],[0]],[[0],[0],[0.7615922540224439]]],[[[0],[0],[0]],[[0],[-0.6733],[-0.8702]],[[0],[-0.4531],[0.14003000884103722]]]]]

Actual:   [[[[[0], [0], [0]], [[0], [0], [0]], [[0], [0], [0.7616]]], [[[0], [0], [0]], [[0], [0], [0]], [[0], [0], [0.7616]]], [[[0], [0], [0]], [[0], [-0.6733], [-0.8702]], [[0], [-0.4531], [0.1401]]]]]

Expected: [[[[[0], [0], [0]], [[0], [0], [0]], [[0], [0], [0.7616]]], [[[0], [0], [0]], [[0], [0], [0]], [[0], [0], [0.7616]]], [[[0], [0], [0]], [[0], [-0.6733], [-0.8702]], [[0], [-0.4531], [0.1401]]]]]