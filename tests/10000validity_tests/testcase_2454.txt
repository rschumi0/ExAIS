import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Max98511 = tf.keras.layers.Input(shape=([2, 1, 2]))
in0Con91127 = tf.keras.layers.Input(shape=([4, 2]))
in0Per85905 = tf.keras.layers.Input(shape=([4, 1]))
in0LST20852 = tf.keras.layers.Input(shape=([2, 3]))
in0Add95611 = tf.keras.layers.Input(shape=([2, 1]))
in1Add95611 = tf.keras.layers.Input(shape=([2, 1]))
in0Sub88274 = tf.keras.layers.Input(shape=([3]))
in1Sub88274 = tf.keras.layers.Input(shape=([3]))
in0Con96163 = tf.keras.layers.Input(shape=([13]))
in0Con87114 = tf.keras.layers.Input(shape=([16, 23]))
in0Zer95404 = tf.keras.layers.Input(shape=([1, 4, 4]))

Max98511 = keras.layers.MaxPool2D(pool_size=(1, 1), name = 'Max98511', )(in0Max98511)
Res3878 = keras.layers.Reshape((2, 2), name = 'Res3878', )(Max98511)
Up_68293 = keras.layers.UpSampling1D(size=(2), name = 'Up_68293', )(Res3878)
Con91127 = keras.layers.Concatenate(axis=2, name = 'Con91127', )([Up_68293,in0Con91127])
Per85905 = keras.layers.Permute((2,1), name = 'Per85905',)(in0Per85905)
Zer41535 = keras.layers.ZeroPadding1D(padding=((3, 0)), name = 'Zer41535', )(Per85905)
Add63588 = keras.layers.Add(name = 'Add63588', )([Con91127,Zer41535])
Fla13321 = keras.layers.Flatten(name = 'Fla13321', )(Add63588)
LST20852 = keras.layers.LSTM(3,recurrent_activation='sigmoid', name = 'LST20852', )(in0LST20852)
Res81307 = keras.layers.Reshape((3, 1), name = 'Res81307', )(LST20852)
Add95611 = keras.layers.Add(name = 'Add95611', )([in0Add95611,in1Add95611])
Zer61853 = keras.layers.ZeroPadding1D(padding=((1, 0)), name = 'Zer61853', )(Add95611)
Add91586 = keras.layers.Add(name = 'Add91586', )([Res81307,Zer61853])
Fla62977 = keras.layers.Flatten(name = 'Fla62977', )(Add91586)
Sub88274 = keras.layers.Subtract(name = 'Sub88274', )([in0Sub88274,in1Sub88274])
Min43197 = keras.layers.Minimum(name = 'Min43197', )([Fla62977,Sub88274])
Con96163 = keras.layers.Concatenate(axis=1, name = 'Con96163', )([Min43197,in0Con96163])
Ave61883 = keras.layers.Average(name = 'Ave61883', )([Fla13321,Con96163])
Res59698 = keras.layers.Reshape((16, 1), name = 'Res59698', )(Ave61883)
Con87114 = keras.layers.Concatenate(axis=2, name = 'Con87114', )([Res59698,in0Con87114])
Zer95404 = keras.layers.ZeroPadding2D(padding=((1, 1), (1, 1)), name = 'Zer95404', )(in0Zer95404)
Res78072 = keras.layers.Reshape((3, 24), name = 'Res78072', )(Zer95404)
Dot40254 = keras.layers.Dot(axes=(2, 2), name = 'Dot40254', )([Con87114,Res78072])
model = tf.keras.models.Model(inputs=[in0Max98511,in0Con91127,in0Per85905,in0LST20852,in0Add95611,in1Add95611,in0Sub88274,in1Sub88274,in0Con96163,in0Con87114,in0Zer95404], outputs=Dot40254)
w = model.get_layer('LST20852').get_weights() 
w[0] = np.array([[5, 7, 10, 9, 4, 7, 5, 6, 5, 9, 9, 9], [6, 1, 5, 3, 4, 7, 3, 4, 2, 10, 4, 10], [5, 8, 6, 9, 5, 6, 7, 2, 6, 10, 8, 1]])
w[1] = np.array([[3, 2, 3, 9, 7, 7, 6, 1, 3, 8, 5, 10], [3, 10, 5, 10, 2, 1, 7, 7, 4, 10, 2, 1], [1, 6, 3, 5, 2, 8, 8, 7, 8, 7, 8, 9]])
w[2] = np.array([10, 7, 6, 1, 3, 7, 2, 5, 4, 5, 3, 3])
model.get_layer('LST20852').set_weights(w) 
in0Max98511 = tf.constant([[[[1.1491, 1.0099]], [[1.1316, 1.5156]]]])
in0Con91127 = tf.constant([[[0.5344, 0.0342], [0.7306, 0.2791], [0.2924, 0.4175], [0.481, 0.5666]]])
in0Per85905 = tf.constant([[[1.9276], [1.7648], [1.1048], [1.6573]]])
in0LST20852 = tf.constant([[[10, 10, 6], [8, 10, 1]]])
in0Add95611 = tf.constant([[[0.453], [0.6882]]])
in1Add95611 = tf.constant([[[0.5209], [0.9694]]])
in0Sub88274 = tf.constant([[0.6677, 0.9198, 0.1876]])
in1Sub88274 = tf.constant([[0.1013, 0.8057, 0.045]])
in0Con96163 = tf.constant([[0.2918, 0.2058, 0.3986, 0.4628, 0.2961, 0.2006, 0.7779, 0.5313, 0.8549, 0.3435, 0.7746, 0.9948, 0.1912]])
in0Con87114 = tf.constant([[[0.4774, 0.0539, 0.2746, 0.6264, 0.1834, 0.8724, 0.1421, 0.5069, 0.6052, 0.0098, 0.5917, 0.3826, 0.2497, 0.8439, 0.15, 0.9682, 0.0964, 0.3521, 0.5344, 0.6147, 0.8941, 0.8125, 0.0248], [0.5661, 0.5313, 0.0359, 0.4579, 0.5362, 0.6677, 0.995, 0.1212, 0.6128, 0.3821, 0.1992, 0.2919, 0.5033, 0.1987, 0.9336, 0.1544, 0.913, 0.484, 0.5257, 0.3567, 0.4139, 0.8736, 0.1352], [0.5207, 0.5045, 0.0842, 0.1699, 0.6098, 0.6892, 0.1922, 0.3243, 0.1737, 0.3104, 0.2221, 0.4089, 0.1393, 0.5582, 0.6742, 0.5944, 0.0009, 0.5493, 0.4453, 0.4274, 0.9695, 0.619, 0.4476], [0.9931, 0.8889, 0.0032, 0.1146, 0.8984, 0.4973, 0.899, 0.8972, 0.3256, 0.9212, 0.4885, 0.8028, 0.2696, 0.1234, 0.8868, 0.0017, 0.2129, 0.3972, 0.1295, 0.5407, 0.9136, 0.8957, 0.2589], [0.2389, 0.6884, 0.6176, 0.2811, 0.9137, 0.5553, 0.2327, 0.2732, 0.1883, 0.8695, 0.6232, 0.1984, 0.2641, 0.6332, 0.0402, 0.0517, 0.2084, 0.4876, 0.3325, 0.802, 0.5019, 0.5081, 0.7907], [0.2265, 0.8198, 0.3139, 0.7666, 0.1344, 0.2786, 0.6763, 0.3804, 0.6705, 0.6706, 0.7642, 0.3046, 0.3575, 0.5281, 0.4001, 0.8302, 0.2849, 0.2156, 0.2186, 0.1596, 0.3876, 0.6274, 0.4133], [0.1479, 0.0687, 0.486, 0.8417, 0.5185, 0.5159, 0.6829, 0.6142, 0.9171, 0.9395, 0.5793, 0.9376, 0.0345, 0.6116, 0.6944, 0.9045, 0.4298, 0.0313, 0.7489, 0.1255, 0.6158, 0.756, 0.6018], [0.5851, 0.4288, 0.4398, 0.2218, 0.8706, 0.7013, 0.4057, 0.4684, 0.9687, 0.7767, 0.6386, 0.1227, 0.1562, 0.4643, 0.4306, 0.3036, 0.1195, 0.6173, 0.0397, 0.1343, 0.3308, 0.6358, 0.6261], [0.2803, 0.88, 0.8465, 0.4199, 0.7729, 0.4173, 0.8894, 0.5472, 0.3505, 0.5952, 0.9583, 0.1857, 0.4067, 0.4169, 0.9779, 0.7609, 0.5121, 0.1939, 0.5832, 0.7006, 0.398, 0.3962, 0.0646], [0.8654, 0.2321, 0.5386, 0.2848, 0.1457, 0.9955, 0.3887, 0.9393, 0.8737, 0.7793, 0.2021, 0.4308, 0.6384, 0.8582, 0.3997, 0.0616, 0.8096, 0.4708, 0.0823, 0.2061, 0.5796, 0.3381, 0.0468], [0.6221, 0.6122, 0.0858, 0.5161, 0.0822, 0.4532, 0.9011, 0.6231, 0.0625, 0.6992, 0.9509, 0.8001, 0.312, 0.5515, 0.3154, 0.6166, 0.7477, 0.7838, 0.4511, 0.2805, 0.2636, 0.3465, 0.4856], [0.9729, 0.7296, 0.7948, 0.9695, 0.4217, 0.662, 0.483, 0.062, 0.6349, 0.7949, 0.9973, 0.5108, 0.5136, 0.0535, 0.6133, 0.2035, 0.1442, 0.2378, 0.6604, 0.5109, 0.9269, 0.0598, 0.5481], [0.1237, 0.3421, 0.0494, 0.8714, 0.589, 0.0788, 0.2379, 0.4453, 0.2982, 0.4513, 0.4653, 0.3427, 0.2429, 0.5171, 0.6129, 0.0093, 0.4631, 0.0773, 0.0621, 0.3095, 0.7441, 0.7836, 0.1992], [0.9247, 0.782, 0.9122, 0.8455, 0.8665, 0.7359, 0.9674, 0.0773, 0.995, 0.8126, 0.1771, 0.0191, 0.3403, 0.2867, 0.1078, 0.8417, 0.7108, 0.1498, 0.0878, 0.3787, 0.5462, 0.4054, 0.8565], [0.4875, 0.2191, 0.8752, 0.8792, 0.5202, 0.0258, 0.2702, 0.0608, 0.051, 0.9168, 0.1917, 0.174, 0.3042, 0.6145, 0.6761, 0.1759, 0.5714, 0.1409, 0.8726, 0.7293, 0.2689, 0.9351, 0.4545], [0.6679, 0.1897, 0.6783, 0.4025, 0.8485, 0.9319, 0.6665, 0.8693, 0.8179, 0.4509, 0.0673, 0.9414, 0.9917, 0.1721, 0.6844, 0.2421, 0.5852, 0.1273, 0.9138, 0.4887, 0.3708, 0.1348, 0.4211]]])
in0Zer95404 = tf.constant([[[[1.0755, 1.5397, 1.51, 1.5589], [1.2136, 1.6199, 1.2124, 1.6122], [1.0659, 1.364, 1.7068, 1.9071], [1.0338, 1.3574, 1.2514, 1.9257]]]])
print (np.array2string(model.predict([in0Max98511,in0Con91127,in0Per85905,in0LST20852,in0Add95611,in1Add95611,in0Sub88274,in1Sub88274,in0Con96163,in0Con87114,in0Zer95404],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Dot40254.png')

LMax98511 = max_pool2D_layer([[[[1.1491, 1.0099]], [[1.1316, 1.5156]]]], 1, 1, Max98511), 
LRes3878 = reshape_layer(Max98511, [2, 2], Res3878), 
LUp_68293 = up_sampling1D_layer(Res3878, 2, Up_68293), 
LCon91127 = concatenate_layer([Up_68293,[[[0.5344, 0.0342], [0.7306, 0.2791], [0.2924, 0.4175], [0.481, 0.5666]]]], 2, Con91127), 
LPer85905 = permute_layer([[[1.9276], [1.7648], [1.1048], [1.6573]]], 2,1, Per85905), 
LZer41535 = zero_padding1D_layer(Per85905, 3, 0, Zer41535), 
LAdd63588 = add_layer([Con91127,Zer41535], Add63588), 
LFla13321 = flatten_layer(Add63588, Fla13321), 
LLST20852 = lstm_layer([[[10, 10, 6], [8, 10, 1]]],[[5, 7, 10, 9, 4, 7, 5, 6, 5, 9, 9, 9], [6, 1, 5, 3, 4, 7, 3, 4, 2, 10, 4, 10], [5, 8, 6, 9, 5, 6, 7, 2, 6, 10, 8, 1]],[[3, 2, 3, 9, 7, 7, 6, 1, 3, 8, 5, 10], [3, 10, 5, 10, 2, 1, 7, 7, 4, 10, 2, 1], [1, 6, 3, 5, 2, 8, 8, 7, 8, 7, 8, 9]],[10, 7, 6, 1, 3, 7, 2, 5, 4, 5, 3, 3], LST20852), 
LRes81307 = reshape_layer(LST20852, [3, 1], Res81307), 
LAdd95611 = add_layer([[[[0.453], [0.6882]]], [[[0.5209], [0.9694]]]], Add95611), 
LZer61853 = zero_padding1D_layer(Add95611, 1, 0, Zer61853), 
LAdd91586 = add_layer([Res81307,Zer61853], Add91586), 
LFla62977 = flatten_layer(Add91586, Fla62977), 
LSub88274 = subtract_layer([[0.6677, 0.9198, 0.1876]], [[0.1013, 0.8057, 0.045]], Sub88274), 
LMin43197 = minimum_layer([Fla62977,Sub88274], Min43197), 
LCon96163 = concatenate_layer([Min43197,[[0.2918, 0.2058, 0.3986, 0.4628, 0.2961, 0.2006, 0.7779, 0.5313, 0.8549, 0.3435, 0.7746, 0.9948, 0.1912]]], 1, Con96163), 
LAve61883 = average_layer([Fla13321,Con96163], Ave61883), 
LRes59698 = reshape_layer(Ave61883, [16, 1], Res59698), 
LCon87114 = concatenate_layer([Res59698,[[[0.4774, 0.0539, 0.2746, 0.6264, 0.1834, 0.8724, 0.1421, 0.5069, 0.6052, 0.0098, 0.5917, 0.3826, 0.2497, 0.8439, 0.15, 0.9682, 0.0964, 0.3521, 0.5344, 0.6147, 0.8941, 0.8125, 0.0248], [0.5661, 0.5313, 0.0359, 0.4579, 0.5362, 0.6677, 0.995, 0.1212, 0.6128, 0.3821, 0.1992, 0.2919, 0.5033, 0.1987, 0.9336, 0.1544, 0.913, 0.484, 0.5257, 0.3567, 0.4139, 0.8736, 0.1352], [0.5207, 0.5045, 0.0842, 0.1699, 0.6098, 0.6892, 0.1922, 0.3243, 0.1737, 0.3104, 0.2221, 0.4089, 0.1393, 0.5582, 0.6742, 0.5944, 0.0009, 0.5493, 0.4453, 0.4274, 0.9695, 0.619, 0.4476], [0.9931, 0.8889, 0.0032, 0.1146, 0.8984, 0.4973, 0.899, 0.8972, 0.3256, 0.9212, 0.4885, 0.8028, 0.2696, 0.1234, 0.8868, 0.0017, 0.2129, 0.3972, 0.1295, 0.5407, 0.9136, 0.8957, 0.2589], [0.2389, 0.6884, 0.6176, 0.2811, 0.9137, 0.5553, 0.2327, 0.2732, 0.1883, 0.8695, 0.6232, 0.1984, 0.2641, 0.6332, 0.0402, 0.0517, 0.2084, 0.4876, 0.3325, 0.802, 0.5019, 0.5081, 0.7907], [0.2265, 0.8198, 0.3139, 0.7666, 0.1344, 0.2786, 0.6763, 0.3804, 0.6705, 0.6706, 0.7642, 0.3046, 0.3575, 0.5281, 0.4001, 0.8302, 0.2849, 0.2156, 0.2186, 0.1596, 0.3876, 0.6274, 0.4133], [0.1479, 0.0687, 0.486, 0.8417, 0.5185, 0.5159, 0.6829, 0.6142, 0.9171, 0.9395, 0.5793, 0.9376, 0.0345, 0.6116, 0.6944, 0.9045, 0.4298, 0.0313, 0.7489, 0.1255, 0.6158, 0.756, 0.6018], [0.5851, 0.4288, 0.4398, 0.2218, 0.8706, 0.7013, 0.4057, 0.4684, 0.9687, 0.7767, 0.6386, 0.1227, 0.1562, 0.4643, 0.4306, 0.3036, 0.1195, 0.6173, 0.0397, 0.1343, 0.3308, 0.6358, 0.6261], [0.2803, 0.88, 0.8465, 0.4199, 0.7729, 0.4173, 0.8894, 0.5472, 0.3505, 0.5952, 0.9583, 0.1857, 0.4067, 0.4169, 0.9779, 0.7609, 0.5121, 0.1939, 0.5832, 0.7006, 0.398, 0.3962, 0.0646], [0.8654, 0.2321, 0.5386, 0.2848, 0.1457, 0.9955, 0.3887, 0.9393, 0.8737, 0.7793, 0.2021, 0.4308, 0.6384, 0.8582, 0.3997, 0.0616, 0.8096, 0.4708, 0.0823, 0.2061, 0.5796, 0.3381, 0.0468], [0.6221, 0.6122, 0.0858, 0.5161, 0.0822, 0.4532, 0.9011, 0.6231, 0.0625, 0.6992, 0.9509, 0.8001, 0.312, 0.5515, 0.3154, 0.6166, 0.7477, 0.7838, 0.4511, 0.2805, 0.2636, 0.3465, 0.4856], [0.9729, 0.7296, 0.7948, 0.9695, 0.4217, 0.662, 0.483, 0.062, 0.6349, 0.7949, 0.9973, 0.5108, 0.5136, 0.0535, 0.6133, 0.2035, 0.1442, 0.2378, 0.6604, 0.5109, 0.9269, 0.0598, 0.5481], [0.1237, 0.3421, 0.0494, 0.8714, 0.589, 0.0788, 0.2379, 0.4453, 0.2982, 0.4513, 0.4653, 0.3427, 0.2429, 0.5171, 0.6129, 0.0093, 0.4631, 0.0773, 0.0621, 0.3095, 0.7441, 0.7836, 0.1992], [0.9247, 0.782, 0.9122, 0.8455, 0.8665, 0.7359, 0.9674, 0.0773, 0.995, 0.8126, 0.1771, 0.0191, 0.3403, 0.2867, 0.1078, 0.8417, 0.7108, 0.1498, 0.0878, 0.3787, 0.5462, 0.4054, 0.8565], [0.4875, 0.2191, 0.8752, 0.8792, 0.5202, 0.0258, 0.2702, 0.0608, 0.051, 0.9168, 0.1917, 0.174, 0.3042, 0.6145, 0.6761, 0.1759, 0.5714, 0.1409, 0.8726, 0.7293, 0.2689, 0.9351, 0.4545], [0.6679, 0.1897, 0.6783, 0.4025, 0.8485, 0.9319, 0.6665, 0.8693, 0.8179, 0.4509, 0.0673, 0.9414, 0.9917, 0.1721, 0.6844, 0.2421, 0.5852, 0.1273, 0.9138, 0.4887, 0.3708, 0.1348, 0.4211]]]], 2, Con87114), 
LZer95404 = zero_padding2D_layer([[[[1.0755, 1.5397, 1.51, 1.5589], [1.2136, 1.6199, 1.2124, 1.6122], [1.0659, 1.364, 1.7068, 1.9071], [1.0338, 1.3574, 1.2514, 1.9257]]]], 1, 1, 1, 1, Zer95404), 
LRes78072 = reshape_layer(Zer95404, [3, 24], Res78072), 
LDot40254 = dot_layer(Con87114,Res78072, 2, 2, Dot40254), 
exec_layers([LMax98511,LRes3878,LUp_68293,LCon91127,LPer85905,LZer41535,LAdd63588,LFla13321,LLST20852,LRes81307,LAdd95611,LZer61853,LAdd91586,LFla62977,LSub88274,LMin43197,LCon96163,LAve61883,LRes59698,LCon87114,LZer95404,LRes78072,LDot40254],["Max98511","Res3878","Up_68293","Con91127","Per85905","Zer41535","Add63588","Fla13321","LST20852","Res81307","Add95611","Zer61853","Add91586","Fla62977","Sub88274","Min43197","Con96163","Ave61883","Res59698","Con87114","Zer95404","Res78072","Dot40254"],Dot40254,"Dot40254")

Actual (Unparsed): [[[0.0000000, 10.1326037, 0.0000000], [0.0000000, 11.9357523, 0.0000000], [0.0000000, 8.8962696, 0.0000000], [0.0000000, 11.3420532, 0.0000000], [0.0000000, 8.9218190, 0.0000000], [0.0000000, 10.5116978, 0.0000000], [0.0000000, 14.2655883, 0.0000000], [0.0000000, 10.6618045, 0.0000000], [0.0000000, 13.3333458, 0.0000000], [0.0000000, 11.9329644, 0.0000000], [0.0000000, 12.3319683, 0.0000000], [0.0000000, 11.6012398, 0.0000000], [0.0000000, 8.2573002, 0.0000000], [0.0000000, 11.2100812, 0.0000000], [0.0000000, 9.5364592, 0.0000000], [0.0000000, 14.1392888, 0.0000000]]]

Expected (Unparsed): [[[0.0,10.132603649999998,0.0],[0.0,11.935752549999998,0.0],[0.0,8.89626968,0.0],[0.0,11.342053290000003,0.0],[0.0,8.921819150000001,0.0],[0.0,10.51169793,0.0],[0.0,14.265588409999998,0.0],[0.0,10.661804540000004,0.0],[0.0,13.33334595,0.0],[0.0,11.932964469999998,0.0],[0.0,12.33196843,0.0],[0.0,11.601239900000003,0.0],[0.0,8.25730022,0.0],[0.0,11.210081189999999,0.0],[0.0,9.536459330000001,0.0],[0.0,14.139288879999999,0.0]]]

Actual:   [[[0, 10.1327, 0], [0, 11.9358, 0], [0, 8.8963, 0], [0, 11.3421, 0], [0, 8.9219, 0], [0, 10.5117, 0], [0, 14.2656, 0], [0, 10.6619, 0], [0, 13.3334, 0], [0, 11.933, 0], [0, 12.332, 0], [0, 11.6013, 0], [0, 8.2574, 0], [0, 11.2101, 0], [0, 9.5365, 0], [0, 14.1393, 0]]]

Expected: [[[0, 10.1327, 0], [0, 11.9358, 0], [0, 8.8963, 0], [0, 11.3421, 0], [0, 8.9219, 0], [0, 10.5117, 0], [0, 14.2656, 0], [0, 10.6619, 0], [0, 13.3334, 0], [0, 11.933, 0], [0, 12.332, 0], [0, 11.6013, 0], [0, 8.2574, 0], [0, 11.2101, 0], [0, 9.5365, 0], [0, 14.1393, 0]]]