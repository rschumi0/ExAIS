import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Ave24928 = tf.keras.layers.Input(shape=([1, 2, 1]))
in1Ave24928 = tf.keras.layers.Input(shape=([1, 2, 1]))
in0Con66926 = tf.keras.layers.Input(shape=([16, 3, 1, 2]))
in0Min82059 = tf.keras.layers.Input(shape=([1, 1, 1, 2]))
in1Min82059 = tf.keras.layers.Input(shape=([1, 1, 1, 2]))

Ave24928 = keras.layers.Average(name = 'Ave24928', )([in0Ave24928,in1Ave24928])
Res74374 = keras.layers.Reshape((1, 2, 1, 1), name = 'Res74374', )(Ave24928)
Zer46653 = keras.layers.ZeroPadding3D(padding=((15, 0), (1, 0), (0, 0)), name = 'Zer46653', )(Res74374)
Con66926 = keras.layers.Concatenate(axis=4, name = 'Con66926', )([Zer46653,in0Con66926])
Min82059 = keras.layers.Minimum(name = 'Min82059', )([in0Min82059,in1Min82059])
Res25270 = keras.layers.Reshape((1, 1, 2), name = 'Res25270', )(Min82059)
Res47892 = keras.layers.Reshape((1, 2), name = 'Res47892', )(Res25270)
Glo27796 = keras.layers.GlobalMaxPool1D(name = 'Glo27796', )(Res47892)
Res99331 = keras.layers.Reshape((2, 1), name = 'Res99331', )(Glo27796)
Res55562 = keras.layers.Reshape((2, 1, 1), name = 'Res55562', )(Res99331)
Res20259 = keras.layers.Reshape((2, 1, 1, 1), name = 'Res20259', )(Res55562)
Con71311 = keras.layers.Conv3DTranspose(3, (1, 1, 1),strides=(8, 1, 1), padding='same', name = 'Con71311', )(Res20259)
Zer77719 = keras.layers.ZeroPadding3D(padding=((0, 0), (2, 0), (0, 0)), name = 'Zer77719', )(Con71311)
Sub81579 = keras.layers.Subtract(name = 'Sub81579', )([Con66926,Zer77719])
model = tf.keras.models.Model(inputs=[in0Ave24928,in1Ave24928,in0Con66926,in0Min82059,in1Min82059], outputs=Sub81579)
w = model.get_layer('Con71311').get_weights() 
w[0] = np.array([[[[[0.3852], [0.9809], [0.4273]]]]])
w[1] = np.array([0, 0, 0])
model.get_layer('Con71311').set_weights(w) 
in0Ave24928 = tf.constant([[[[0.5877], [0.9297]]]])
in1Ave24928 = tf.constant([[[[0.8185], [0.6167]]]])
in0Con66926 = tf.constant([[[[[0.0821, 0.0255]], [[0.5164, 0.0441]], [[0.2044, 0.4593]]], [[[0.4546, 0.3132]], [[0.8707, 0.7124]], [[0.849, 0.3981]]], [[[0.5444, 0.2319]], [[0.8524, 0.8053]], [[0.5141, 0.0486]]], [[[0.8407, 0.0716]], [[0.9371, 0.0985]], [[0.0299, 0.2057]]], [[[0.3809, 0.1252]], [[0.8191, 0.9796]], [[0.5966, 0.8718]]], [[[0.7595, 0.5132]], [[0.6264, 0.8381]], [[0.1201, 0.9874]]], [[[0.3781, 0.3528]], [[0.258, 0.124]], [[0.482, 0.0895]]], [[[0.3824, 0.2809]], [[0.5886, 0.442]], [[0.8517, 0.6208]]], [[[0.2615, 0.3676]], [[0.8381, 0.8375]], [[0.2726, 0.4035]]], [[[0.0538, 0.3455]], [[0.4175, 0.5683]], [[0.244, 0.6755]]], [[[0.9339, 0.7719]], [[0.3225, 0.056]], [[0.229, 0.1713]]], [[[0.3473, 0.8061]], [[0.8981, 0.6389]], [[0.0209, 0.2183]]], [[[0.9535, 0.1339]], [[0.0312, 0.0657]], [[0.7732, 0.3081]]], [[[0.3474, 0.7345]], [[0.5236, 0.1171]], [[0.5347, 0.2519]]], [[[0.7169, 0.5574]], [[0.2552, 0.1567]], [[0.1224, 0.9057]]], [[[0.3903, 0.2417]], [[0.4649, 0.9955]], [[0.6325, 0.6896]]]]])
in0Min82059 = tf.constant([[[[[0.9986, 0.4164]]]]])
in1Min82059 = tf.constant([[[[[0.3543, 0.847]]]]])
print (np.array2string(model.predict([in0Ave24928,in1Ave24928,in0Con66926,in0Min82059,in1Min82059],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Sub81579.png')

LAve24928 = average_layer([[[[[0.5877], [0.9297]]]], [[[[0.8185], [0.6167]]]]], Ave24928), 
LRes74374 = reshape_layer(Ave24928, [1, 2, 1, 1], Res74374), 
LZer46653 = zero_padding3D_layer(Res74374, 15, 0, 1, 0, 0, 0, Zer46653), 
LCon66926 = concatenate_layer([Zer46653,[[[[[0.0821, 0.0255]], [[0.5164, 0.0441]], [[0.2044, 0.4593]]], [[[0.4546, 0.3132]], [[0.8707, 0.7124]], [[0.849, 0.3981]]], [[[0.5444, 0.2319]], [[0.8524, 0.8053]], [[0.5141, 0.0486]]], [[[0.8407, 0.0716]], [[0.9371, 0.0985]], [[0.0299, 0.2057]]], [[[0.3809, 0.1252]], [[0.8191, 0.9796]], [[0.5966, 0.8718]]], [[[0.7595, 0.5132]], [[0.6264, 0.8381]], [[0.1201, 0.9874]]], [[[0.3781, 0.3528]], [[0.258, 0.124]], [[0.482, 0.0895]]], [[[0.3824, 0.2809]], [[0.5886, 0.442]], [[0.8517, 0.6208]]], [[[0.2615, 0.3676]], [[0.8381, 0.8375]], [[0.2726, 0.4035]]], [[[0.0538, 0.3455]], [[0.4175, 0.5683]], [[0.244, 0.6755]]], [[[0.9339, 0.7719]], [[0.3225, 0.056]], [[0.229, 0.1713]]], [[[0.3473, 0.8061]], [[0.8981, 0.6389]], [[0.0209, 0.2183]]], [[[0.9535, 0.1339]], [[0.0312, 0.0657]], [[0.7732, 0.3081]]], [[[0.3474, 0.7345]], [[0.5236, 0.1171]], [[0.5347, 0.2519]]], [[[0.7169, 0.5574]], [[0.2552, 0.1567]], [[0.1224, 0.9057]]], [[[0.3903, 0.2417]], [[0.4649, 0.9955]], [[0.6325, 0.6896]]]]]], 4, Con66926), 
LMin82059 = minimum_layer([[[[[[0.9986, 0.4164]]]]], [[[[[0.3543, 0.847]]]]]], Min82059), 
LRes25270 = reshape_layer(Min82059, [1, 1, 2], Res25270), 
LRes47892 = reshape_layer(Res25270, [1, 2], Res47892), 
LGlo27796 = global_max_pool1D_layer(Res47892, Glo27796), 
LRes99331 = reshape_layer(Glo27796, [2, 1], Res99331), 
LRes55562 = reshape_layer(Res99331, [2, 1, 1], Res55562), 
LRes20259 = reshape_layer(Res55562, [2, 1, 1, 1], Res20259), 
LCon71311 = conv3D_transpose_layer(Res20259, 1, 1, 1,[[[[[0.3852], [0.9809], [0.4273]]]]],[0, 0, 0], 8, 1, 1, true, Con71311), 
LZer77719 = zero_padding3D_layer(Con71311, 0, 0, 2, 0, 0, 0, Zer77719), 
LSub81579 = subtract_layer(Con66926,Zer77719, Sub81579), 
exec_layers([LAve24928,LRes74374,LZer46653,LCon66926,LMin82059,LRes25270,LRes47892,LGlo27796,LRes99331,LRes55562,LRes20259,LCon71311,LZer77719,LSub81579],["Ave24928","Res74374","Zer46653","Con66926","Min82059","Res25270","Res47892","Glo27796","Res99331","Res55562","Res20259","Con71311","Zer77719","Sub81579"],Sub81579,"Sub81579")

Actual (Unparsed): [[[[[0.0000000, 0.0821000, 0.0255000]], [[0.0000000, 0.5164000, 0.0441000]], [[-0.1364764, -0.1431329, 0.3079076]]], [[[0.0000000, 0.4546000, 0.3132000]], [[0.0000000, 0.8707000, 0.7124000]], [[0.0000000, 0.8490000, 0.3981000]]], [[[0.0000000, 0.5444000, 0.2319000]], [[0.0000000, 0.8524000, 0.8053000]], [[0.0000000, 0.5141000, 0.0486000]]], [[[0.0000000, 0.8407000, 0.0716000]], [[0.0000000, 0.9371000, 0.0985000]], [[0.0000000, 0.0299000, 0.2057000]]], [[[0.0000000, 0.3809000, 0.1252000]], [[0.0000000, 0.8191000, 0.9796000]], [[0.0000000, 0.5966000, 0.8718000]]], [[[0.0000000, 0.7595000, 0.5132000]], [[0.0000000, 0.6264000, 0.8381000]], [[0.0000000, 0.1201000, 0.9874000]]], [[[0.0000000, 0.3781000, 0.3528000]], [[0.0000000, 0.2580000, 0.1240000]], [[0.0000000, 0.4820000, 0.0895000]]], [[[0.0000000, 0.3824000, 0.2809000]], [[0.0000000, 0.5886000, 0.4420000]], [[0.0000000, 0.8517000, 0.6208000]]], [[[0.0000000, 0.2615000, 0.3676000]], [[0.0000000, 0.8381000, 0.8375000]], [[-0.1603973, -0.1358468, 0.2255723]]], [[[0.0000000, 0.0538000, 0.3455000]], [[0.0000000, 0.4175000, 0.5683000]], [[0.0000000, 0.2440000, 0.6755000]]], [[[0.0000000, 0.9339000, 0.7719000]], [[0.0000000, 0.3225000, 0.0560000]], [[0.0000000, 0.2290000, 0.1713000]]], [[[0.0000000, 0.3473000, 0.8061000]], [[0.0000000, 0.8981000, 0.6389000]], [[0.0000000, 0.0209000, 0.2183000]]], [[[0.0000000, 0.9535000, 0.1339000]], [[0.0000000, 0.0312000, 0.0657000]], [[0.0000000, 0.7732000, 0.3081000]]], [[[0.0000000, 0.3474000, 0.7345000]], [[0.0000000, 0.5236000, 0.1171000]], [[0.0000000, 0.5347000, 0.2519000]]], [[[0.0000000, 0.7169000, 0.5574000]], [[0.0000000, 0.2552000, 0.1567000]], [[0.0000000, 0.1224000, 0.9057000]]], [[[0.0000000, 0.3903000, 0.2417000]], [[0.7031000, 0.4649000, 0.9955000]], [[0.7732000, 0.6325000, 0.6896000]]]]]

Expected (Unparsed): [[[[[0,0.0821,0.0255]],[[0,0.5164,0.0441]],[[-0.13647636,-0.14313287,0.30790761]]],[[[0,0.4546,0.3132]],[[0,0.8707,0.7124]],[[0,0.849,0.3981]]],[[[0,0.5444,0.2319]],[[0,0.8524,0.8053]],[[0,0.5141,0.0486]]],[[[0,0.8407,0.0716]],[[0,0.9371,0.0985]],[[0,0.0299,0.2057]]],[[[0,0.3809,0.1252]],[[0,0.8191,0.9796]],[[0,0.5966,0.8718]]],[[[0,0.7595,0.5132]],[[0,0.6264,0.8381]],[[0,0.1201,0.9874]]],[[[0,0.3781,0.3528]],[[0,0.258,0.124]],[[0,0.482,0.0895]]],[[[0,0.3824,0.2809]],[[0,0.5886,0.442]],[[0,0.8517,0.6208]]],[[[0,0.2615,0.3676]],[[0,0.8381,0.8375]],[[-0.16039728,-0.13584675999999996,0.22557228000000001]]],[[[0,0.0538,0.3455]],[[0,0.4175,0.5683]],[[0,0.244,0.6755]]],[[[0,0.9339,0.7719]],[[0,0.3225,0.056]],[[0,0.229,0.1713]]],[[[0,0.3473,0.8061]],[[0,0.8981,0.6389]],[[0,0.0209,0.2183]]],[[[0,0.9535,0.1339]],[[0,0.0312,0.0657]],[[0,0.7732,0.3081]]],[[[0,0.3474,0.7345]],[[0,0.5236,0.1171]],[[0,0.5347,0.2519]]],[[[0,0.7169,0.5574]],[[0,0.2552,0.1567]],[[0,0.1224,0.9057]]],[[[0,0.3903,0.2417]],[[0.7031000000000001,0.4649,0.9955]],[[0.7732,0.6325,0.6896]]]]]

Actual:   [[[[[0, 0.0821, 0.0255]], [[0, 0.5164, 0.0441]], [[-0.1364, -0.1431, 0.308]]], [[[0, 0.4546, 0.3132]], [[0, 0.8707, 0.7124]], [[0, 0.849, 0.3981]]], [[[0, 0.5444, 0.2319]], [[0, 0.8524, 0.8053]], [[0, 0.5141, 0.0486]]], [[[0, 0.8407, 0.0716]], [[0, 0.9371, 0.0985]], [[0, 0.0299, 0.2057]]], [[[0, 0.3809, 0.1252]], [[0, 0.8191, 0.9796]], [[0, 0.5966, 0.8718]]], [[[0, 0.7595, 0.5132]], [[0, 0.6264, 0.8381]], [[0, 0.1201, 0.9874]]], [[[0, 0.3781, 0.3528]], [[0, 0.258, 0.124]], [[0, 0.482, 0.0895]]], [[[0, 0.3824, 0.2809]], [[0, 0.5886, 0.442]], [[0, 0.8517, 0.6208]]], [[[0, 0.2615, 0.3676]], [[0, 0.8381, 0.8375]], [[-0.1603, -0.1358, 0.2256]]], [[[0, 0.0538, 0.3455]], [[0, 0.4175, 0.5683]], [[0, 0.244, 0.6755]]], [[[0, 0.9339, 0.7719]], [[0, 0.3225, 0.056]], [[0, 0.229, 0.1713]]], [[[0, 0.3473, 0.8061]], [[0, 0.8981, 0.6389]], [[0, 0.0209, 0.2183]]], [[[0, 0.9535, 0.1339]], [[0, 0.0312, 0.0657]], [[0, 0.7732, 0.3081]]], [[[0, 0.3474, 0.7345]], [[0, 0.5236, 0.1171]], [[0, 0.5347, 0.2519]]], [[[0, 0.7169, 0.5574]], [[0, 0.2552, 0.1567]], [[0, 0.1224, 0.9057]]], [[[0, 0.3903, 0.2417]], [[0.7031, 0.4649, 0.9955]], [[0.7732, 0.6325, 0.6896]]]]]

Expected: [[[[[0, 0.0821, 0.0255]], [[0, 0.5164, 0.0441]], [[-0.1364, -0.1431, 0.308]]], [[[0, 0.4546, 0.3132]], [[0, 0.8707, 0.7124]], [[0, 0.849, 0.3981]]], [[[0, 0.5444, 0.2319]], [[0, 0.8524, 0.8053]], [[0, 0.5141, 0.0486]]], [[[0, 0.8407, 0.0716]], [[0, 0.9371, 0.0985]], [[0, 0.0299, 0.2057]]], [[[0, 0.3809, 0.1252]], [[0, 0.8191, 0.9796]], [[0, 0.5966, 0.8718]]], [[[0, 0.7595, 0.5132]], [[0, 0.6264, 0.8381]], [[0, 0.1201, 0.9874]]], [[[0, 0.3781, 0.3528]], [[0, 0.258, 0.124]], [[0, 0.482, 0.0895]]], [[[0, 0.3824, 0.2809]], [[0, 0.5886, 0.442]], [[0, 0.8517, 0.6208]]], [[[0, 0.2615, 0.3676]], [[0, 0.8381, 0.8375]], [[-0.1603, -0.1358, 0.2256]]], [[[0, 0.0538, 0.3455]], [[0, 0.4175, 0.5683]], [[0, 0.244, 0.6755]]], [[[0, 0.9339, 0.7719]], [[0, 0.3225, 0.056]], [[0, 0.229, 0.1713]]], [[[0, 0.3473, 0.8061]], [[0, 0.8981, 0.6389]], [[0, 0.0209, 0.2183]]], [[[0, 0.9535, 0.1339]], [[0, 0.0312, 0.0657]], [[0, 0.7732, 0.3081]]], [[[0, 0.3474, 0.7345]], [[0, 0.5236, 0.1171]], [[0, 0.5347, 0.2519]]], [[[0, 0.7169, 0.5574]], [[0, 0.2552, 0.1567]], [[0, 0.1224, 0.9057]]], [[[0, 0.3903, 0.2417]], [[0.7032, 0.4649, 0.9955]], [[0.7732, 0.6325, 0.6896]]]]]