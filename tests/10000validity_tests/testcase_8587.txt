import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Max30074 = tf.keras.layers.Input(shape=([1, 1, 1]))
in0Mul52684 = tf.keras.layers.Input(shape=([2, 1, 1]))
in1Mul52684 = tf.keras.layers.Input(shape=([2, 1, 1]))
in0Con66391 = tf.keras.layers.Input(shape=([1, 3]))
in0Glo39304 = tf.keras.layers.Input(shape=([1, 1, 1, 2]))
in0Add80614 = tf.keras.layers.Input(shape=([1, 2]))
in1Add80614 = tf.keras.layers.Input(shape=([1, 2]))
in0Con49274 = tf.keras.layers.Input(shape=([1, 2]))

Max30074 = keras.layers.MaxPool2D(pool_size=(1, 1), name = 'Max30074', )(in0Max30074)
Res70524 = keras.layers.Reshape((1, 1), name = 'Res70524', )(Max30074)
Mul52684 = keras.layers.Multiply(name = 'Mul52684', )([in0Mul52684,in1Mul52684])
Res30115 = keras.layers.Reshape((2, 1), name = 'Res30115', )(Mul52684)
Sim6682 = keras.layers.SimpleRNN(1,name = 'Sim6682', )(Res30115)
Bat24834 = keras.layers.BatchNormalization(axis=1, epsilon=0.10863126804444603,  name = 'Bat24834', )(Sim6682)
Res55372 = keras.layers.Reshape((1, 1), name = 'Res55372', )(Bat24834)
Sub88610 = keras.layers.Subtract(name = 'Sub88610', )([Res70524,Res55372])
Con66391 = keras.layers.Concatenate(axis=2, name = 'Con66391', )([Sub88610,in0Con66391])
Glo39304 = keras.layers.GlobalMaxPool3D(name = 'Glo39304', )(in0Glo39304)
Res80034 = keras.layers.Reshape((2, 1), name = 'Res80034', )(Glo39304)
Res41358 = keras.layers.Reshape((2, 1, 1), name = 'Res41358', )(Res80034)
Sep20978 = keras.layers.SeparableConv2D(4, (2, 1),strides=(2, 2), padding='same', name = 'Sep20978', )(Res41358)
Res72164 = keras.layers.Reshape((1, 4), name = 'Res72164', )(Sep20978)
Add80614 = keras.layers.Add(name = 'Add80614', )([in0Add80614,in1Add80614])
Con49274 = keras.layers.Concatenate(axis=2, name = 'Con49274', )([Add80614,in0Con49274])
Mul29450 = keras.layers.Multiply(name = 'Mul29450', )([Res72164,Con49274])
Ave74138 = keras.layers.Average(name = 'Ave74138', )([Con66391,Mul29450])
model = tf.keras.models.Model(inputs=[in0Max30074,in0Mul52684,in1Mul52684,in0Con66391,in0Glo39304,in0Add80614,in1Add80614,in0Con49274], outputs=Ave74138)
w = model.get_layer('Sim6682').get_weights() 
w[0] = np.array([[9]])
w[1] = np.array([[6]])
w[2] = np.array([2])
model.get_layer('Sim6682').set_weights(w) 
w = model.get_layer('Bat24834').get_weights() 
w[0] = np.array([0.283])
w[1] = np.array([0.2481])
w[2] = np.array([0.9074])
w[3] = np.array([0.0506])
model.get_layer('Bat24834').set_weights(w) 
w = model.get_layer('Sep20978').get_weights() 
w[0] = np.array([[[[0.8408]]], [[[0.0302]]]])
w[1] = np.array([[[[0.4632, 0.767, 0.4715, 0.5453]]]])
w[2] = np.array([0, 0, 0, 0])
model.get_layer('Sep20978').set_weights(w) 
in0Max30074 = tf.constant([[[[1.9268]]]])
in0Mul52684 = tf.constant([[[[0.3207]], [[0.6644]]]])
in1Mul52684 = tf.constant([[[[0.6371]], [[0.0983]]]])
in0Con66391 = tf.constant([[[0.8485, 0.4755, 0.3182]]])
in0Glo39304 = tf.constant([[[[[1.8566, 1.6203]]]]])
in0Add80614 = tf.constant([[[0.4839, 0.8559]]])
in1Add80614 = tf.constant([[[0.7238, 0.3424]]])
in0Con49274 = tf.constant([[[0.0488, 0.194]]])
print (np.array2string(model.predict([in0Max30074,in0Mul52684,in1Mul52684,in0Con66391,in0Glo39304,in0Add80614,in1Add80614,in0Con49274],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Ave74138.png')

LMax30074 = max_pool2D_layer([[[[1.9268]]]], 1, 1, Max30074), 
LRes70524 = reshape_layer(Max30074, [1, 1], Res70524), 
LMul52684 = multiply_layer([[[[[0.3207]], [[0.6644]]]], [[[[0.6371]], [[0.0983]]]]], Mul52684), 
LRes30115 = reshape_layer(Mul52684, [2, 1], Res30115), 
LSim6682 = simple_rnn_layer(Res30115,[[9]],[[6]],[2], Sim6682), 
LBat24834 = batch_normalization_layer(Sim6682, 1, 0.10863126804444603, [0.283], [0.2481], [0.9074], [0.0506], Bat24834), 
LRes55372 = reshape_layer(Bat24834, [1, 1], Res55372), 
LSub88610 = subtract_layer(Res70524,Res55372, Sub88610), 
LCon66391 = concatenate_layer([Sub88610,[[[0.8485, 0.4755, 0.3182]]]], 2, Con66391), 
LGlo39304 = global_max_pool3D_layer([[[[[1.8566, 1.6203]]]]], Glo39304), 
LRes80034 = reshape_layer(Glo39304, [2, 1], Res80034), 
LRes41358 = reshape_layer(Res80034, [2, 1, 1], Res41358), 
LSep20978 = separable_conv2D_layer(Res41358, 2, 1,[[[[[0.8408]]], [[[0.0302]]]],[[[[0.4632, 0.767, 0.4715, 0.5453]]]]],[0, 0, 0, 0], 2, 2, true, Sep20978), 
LRes72164 = reshape_layer(Sep20978, [1, 4], Res72164), 
LAdd80614 = add_layer([[[[0.4839, 0.8559]]], [[[0.7238, 0.3424]]]], Add80614), 
LCon49274 = concatenate_layer([Add80614,[[[0.0488, 0.194]]]], 2, Con49274), 
LMul29450 = multiply_layer([Res72164,Con49274], Mul29450), 
LAve74138 = average_layer([Con66391,Mul29450], Ave74138), 
exec_layers([LMax30074,LRes70524,LMul52684,LRes30115,LSim6682,LBat24834,LRes55372,LSub88610,LCon66391,LGlo39304,LRes80034,LRes41358,LSep20978,LRes72164,LAdd80614,LCon49274,LMul29450,LAve74138],["Max30074","Res70524","Mul52684","Res30115","Sim6682","Bat24834","Res55372","Sub88610","Con66391","Glo39304","Res80034","Res41358","Sep20978","Res72164","Add80614","Con49274","Mul29450","Ave74138"],Ave74138,"Ave74138")

Actual (Unparsed): [[[1.2568256, 1.1641051, 0.2562720, 0.2442575]]]

Expected (Unparsed): [[[1.256825609450444,1.164105053920437,0.256271972736764,0.24425750900819398]]]

Actual:   [[[1.2569, 1.1642, 0.2563, 0.2443]]]

Expected: [[[1.2569, 1.1642, 0.2563, 0.2443]]]