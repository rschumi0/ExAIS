import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Add26442 = tf.keras.layers.Input(shape=([1, 1]))
in1Add26442 = tf.keras.layers.Input(shape=([1, 1]))

Add26442 = keras.layers.Add(name = 'Add26442', )([in0Add26442,in1Add26442])
Thr98468 = keras.layers.ThresholdedReLU(theta=6.324943933867076, name = 'Thr98468', )(Add26442)
Sim98982 = keras.layers.SimpleRNN(3,name = 'Sim98982', )(Thr98468)
model = tf.keras.models.Model(inputs=[in0Add26442,in1Add26442], outputs=Sim98982)
w = model.get_layer('Sim98982').get_weights() 
w[0] = np.array([[6, 6, 2]])
w[1] = np.array([[2, 5, 7], [8, 10, 4], [9, 6, 1]])
w[2] = np.array([6, 5, 5])
model.get_layer('Sim98982').set_weights(w) 
in0Add26442 = tf.constant([[[0.1908]]])
in1Add26442 = tf.constant([[[0.3026]]])
print (np.array2string(model.predict([in0Add26442,in1Add26442],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Sim98982.png')

LAdd26442 = add_layer([[[[0.1908]]], [[[0.3026]]]], Add26442), 
LThr98468 = thresholded_relu_layer(Add26442, 6.324943933867076, Thr98468), 
LSim98982 = simple_rnn_layer(Thr98468,[[6, 6, 2]],[[2, 5, 7], [8, 10, 4], [9, 6, 1]],[6, 5, 5], Sim98982), 
exec_layers([LAdd26442,LThr98468,LSim98982],["Add26442","Thr98468","Sim98982"],Sim98982,"Sim98982")

Actual (Unparsed): [[0.9999877, 0.9999092, 0.9999092]]

Expected (Unparsed): [[0.9999877116507956,0.9999092042625951,0.9999092042625951]]

Actual:   [[1, 1, 1]]

Expected: [[1, 1, 1]]