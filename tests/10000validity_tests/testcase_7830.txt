import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Glo96847 = tf.keras.layers.Input(shape=([2, 2, 2, 1]))

Glo96847 = keras.layers.GlobalAveragePooling3D(name = 'Glo96847', )(in0Glo96847)
Res61248 = keras.layers.Reshape((1, 1), name = 'Res61248', )(Glo96847)
Sim49262 = keras.layers.SimpleRNN(3,name = 'Sim49262', )(Res61248)
Sof84441 = keras.layers.Softmax(axis=1, name = 'Sof84441', )(Sim49262)
model = tf.keras.models.Model(inputs=[in0Glo96847], outputs=Sof84441)
w = model.get_layer('Sim49262').get_weights() 
w[0] = np.array([[1, 3, 1]])
w[1] = np.array([[2, 8, 9], [2, 7, 10], [2, 2, 4]])
w[2] = np.array([3, 7, 6])
model.get_layer('Sim49262').set_weights(w) 
in0Glo96847 = tf.constant([[[[[1.9665], [1.5922]], [[1.5696], [1.059]]], [[[1.4146], [1.8921]], [[1.1189], [1.7189]]]]])
print (np.array2string(model.predict([in0Glo96847],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Sof84441.png')

LGlo96847 = global_average_pooling3D_layer([[[[[1.9665], [1.5922]], [[1.5696], [1.059]]], [[[1.4146], [1.8921]], [[1.1189], [1.7189]]]]], Glo96847), 
LRes61248 = reshape_layer(Glo96847, [1, 1], Res61248), 
LSim49262 = simple_rnn_layer(Res61248,[[1, 3, 1]],[[2, 8, 9], [2, 7, 10], [2, 2, 4]],[3, 7, 6], Sim49262), 
LSof84441 = softmax_layer(Sim49262, 1, Sof84441), 
exec_layers([LGlo96847,LRes61248,LSim49262,LSof84441],["Glo96847","Res61248","Sim49262","Sof84441"],Sof84441,"Sof84441")

Actual (Unparsed): [[0.3332829, 0.3333586, 0.3333584]]

Expected (Unparsed): [[0.33328292087619615,0.3333586333928428,0.333358445730961]]

Actual:   [[0.3333, 0.3334, 0.3334]]

Expected: [[0.3333, 0.3334, 0.3334]]