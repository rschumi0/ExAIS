import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Dot73777 = tf.keras.layers.Input(shape=([3, 2]))
in1Dot73777 = tf.keras.layers.Input(shape=([3, 2]))
in0Mas54339 = tf.keras.layers.Input(shape=([1]))
in0Con65918 = tf.keras.layers.Input(shape=([2]))

Dot73777 = keras.layers.Dot(axes=(1, 1), name = 'Dot73777', )([in0Dot73777,in1Dot73777])
Res12935 = keras.layers.Reshape((2, 2, 1), name = 'Res12935', )(Dot73777)
Cro35359 = keras.layers.Cropping2D(cropping=((0, 0), (0, 0)), name = 'Cro35359', )(Res12935)
Res70417 = keras.layers.Reshape((2, 2), name = 'Res70417', )(Cro35359)
Fla79280 = keras.layers.Flatten(name = 'Fla79280', )(Res70417)
Mas54339 = keras.layers.Masking(mask_value=1, name = 'Mas54339', )(in0Mas54339)
Res44868 = keras.layers.Reshape((1, 1), name = 'Res44868', )(Mas54339)
Sim43379 = keras.layers.SimpleRNN(2,name = 'Sim43379', )(Res44868)
Con65918 = keras.layers.Concatenate(axis=1, name = 'Con65918', )([Sim43379,in0Con65918])
Max21790 = keras.layers.Maximum(name = 'Max21790', )([Fla79280,Con65918])
Res68316 = keras.layers.Reshape((4, 1), name = 'Res68316', )(Max21790)
PRe18620 = keras.layers.PReLU(name = 'PRe18620', )(Res68316)
model = tf.keras.models.Model(inputs=[in0Dot73777,in1Dot73777,in0Mas54339,in0Con65918], outputs=PRe18620)
w = model.get_layer('Sim43379').get_weights() 
w[0] = np.array([[1, 1]])
w[1] = np.array([[10, 7], [7, 3]])
w[2] = np.array([5, 9])
model.get_layer('Sim43379').set_weights(w) 
w = model.get_layer('PRe18620').get_weights() 
w[0] = np.array([[0.6361], [0.7308], [0.4126], [0.8267]])
model.get_layer('PRe18620').set_weights(w) 
in0Dot73777 = tf.constant([[[0.8942, 0.37], [0.0821, 0.6682], [0.7188, 0.2639]]])
in1Dot73777 = tf.constant([[[0.7524, 0.8177], [0.3386, 0.5909], [0.8374, 0.2363]]])
in0Mas54339 = tf.constant([[1.6897]])
in0Con65918 = tf.constant([[0.416, 0.3936]])
print (np.array2string(model.predict([in0Dot73777,in1Dot73777,in0Mas54339,in0Con65918],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='PRe18620.png')

LDot73777 = dot_layer([[[0.8942, 0.37], [0.0821, 0.6682], [0.7188, 0.2639]]], [[[0.7524, 0.8177], [0.3386, 0.5909], [0.8374, 0.2363]]], 1, 1, Dot73777), 
LRes12935 = reshape_layer(Dot73777, [2, 2, 1], Res12935), 
LCro35359 = cropping2D_layer(Res12935, 0, 0, 0, 0, Cro35359), 
LRes70417 = reshape_layer(Cro35359, [2, 2], Res70417), 
LFla79280 = flatten_layer(Res70417, Fla79280), 
LMas54339 = masking_layer([[1.6897]], 1, Mas54339), 
LRes44868 = reshape_layer(Mas54339, [1, 1], Res44868), 
LSim43379 = simple_rnn_layer(Res44868,[[1, 1]],[[10, 7], [7, 3]],[5, 9], Sim43379), 
LCon65918 = concatenate_layer([Sim43379,[[0.416, 0.3936]]], 1, Con65918), 
LMax21790 = maximum_layer([Fla79280,Con65918], Max21790), 
LRes68316 = reshape_layer(Max21790, [4, 1], Res68316), 
LPRe18620 = prelu_layer(Res68316, [[0.6361], [0.7308], [0.4126], [0.8267]], PRe18620), 
exec_layers([LDot73777,LRes12935,LCro35359,LRes70417,LFla79280,LMas54339,LRes44868,LSim43379,LCon65918,LMax21790,LRes68316,LPRe18620],["Dot73777","Res12935","Cro35359","Res70417","Fla79280","Mas54339","Res44868","Sim43379","Con65918","Max21790","Res68316","PRe18620"],PRe18620,"PRe18620")

Actual (Unparsed): [[[1.3025183], [1.0000000], [0.7256304], [0.7597480]]]

Expected (Unparsed): [[[1.3025182599999998],[0.9999999989622935],[0.7256303799999999],[0.7597479500000001]]]

Actual:   [[[1.3026], [1], [0.7257], [0.7598]]]

Expected: [[[1.3026], [1], [0.7257], [0.7598]]]