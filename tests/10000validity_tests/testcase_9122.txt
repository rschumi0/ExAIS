import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Max13178 = tf.keras.layers.Input(shape=([2, 2, 2]))
in0Zer26821 = tf.keras.layers.Input(shape=([4, 1, 4]))
in0Con33212 = tf.keras.layers.Input(shape=([1, 1, 4]))

Max13178 = keras.layers.MaxPool2D(pool_size=(2, 1), strides=(2, 1), padding='same', name = 'Max13178', )(in0Max13178)
Res30797 = keras.layers.Reshape((1, 2, 2, 1), name = 'Res30797', )(Max13178)
Con77094 = keras.layers.Conv3D(4, (1, 1, 2),strides=(1, 6, 1), padding='same', dilation_rate=(1, 1, 1), name = 'Con77094', )(Res30797)
Res92805 = keras.layers.Reshape((1, 1, 8), name = 'Res92805', )(Con77094)
Zer26821 = keras.layers.ZeroPadding2D(padding=((1, 1), (1, 1)), name = 'Zer26821', )(in0Zer26821)
Dep33281 = keras.layers.DepthwiseConv2D((5, 2),strides=(2, 2), padding='valid', name = 'Dep33281', )(Zer26821)
Con33212 = keras.layers.Concatenate(axis=3, name = 'Con33212', )([Dep33281,in0Con33212])
Add12694 = keras.layers.Add(name = 'Add12694', )([Res92805,Con33212])
model = tf.keras.models.Model(inputs=[in0Max13178,in0Zer26821,in0Con33212], outputs=Add12694)
w = model.get_layer('Con77094').get_weights() 
w[0] = np.array([[[[[0.2007, 0.1937, 0.5757, 0.2068]], [[0.6545, 0.0282, 0.1355, 0.4049]]]]])
w[1] = np.array([0, 0, 0, 0])
model.get_layer('Con77094').set_weights(w) 
w = model.get_layer('Dep33281').get_weights() 
w[0] = np.array([[[[0.5401], [0.5298], [0.4853], [0.2428]], [[0.3984], [0.3346], [0.6261], [0.6654]]], [[[0.3394], [0.9701], [0.5037], [0.7671]], [[0.2871], [0.2117], [0.9475], [0.5834]]], [[[0.3268], [0.8414], [0.2649], [0.1717]], [[0.9597], [0.4458], [0.9622], [0.8708]]], [[[0.6992], [0.0039], [0.2331], [0.4904]], [[0.1499], [0.9451], [0.7363], [0.9913]]], [[[0.8838], [0.5937], [0.8042], [0.032]], [[0.7489], [0.5637], [0.5041], [0.4843]]]])
w[1] = np.array([0, 0, 0, 0])
model.get_layer('Dep33281').set_weights(w) 
in0Max13178 = tf.constant([[[[1.5239, 1.8901], [1.7353, 1.7474]], [[1.2729, 1.5609], [1.0818, 1.4498]]]])
in0Zer26821 = tf.constant([[[[1.6616, 1.4279, 1.6179, 1.8025]], [[1.5274, 1.8184, 1.153, 1.9372]], [[1.4795, 1.9081, 1.8066, 1.112]], [[1.947, 1.8402, 1.6376, 1.0837]]]])
in0Con33212 = tf.constant([[[[0.7591, 0.4819, 0.068, 0.6715]]]])
print (np.array2string(model.predict([in0Max13178,in0Zer26821,in0Con33212],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Add12694.png')

LMax13178 = max_pool2D_layer([[[[1.5239, 1.8901], [1.7353, 1.7474]], [[1.2729, 1.5609], [1.0818, 1.4498]]]], 2, 1, 2, 1, true, Max13178), 
LRes30797 = reshape_layer(Max13178, [1, 2, 2, 1], Res30797), 
LCon77094 = conv3D_layer(Res30797, 1, 1, 2,[[[[[0.2007, 0.1937, 0.5757, 0.2068]], [[0.6545, 0.0282, 0.1355, 0.4049]]]]],[0, 0, 0, 0], 1, 6, 1, true, 1, 1, 1, Con77094), 
LRes92805 = reshape_layer(Con77094, [1, 1, 8], Res92805), 
LZer26821 = zero_padding2D_layer([[[[1.6616, 1.4279, 1.6179, 1.8025]], [[1.5274, 1.8184, 1.153, 1.9372]], [[1.4795, 1.9081, 1.8066, 1.112]], [[1.947, 1.8402, 1.6376, 1.0837]]]], 1, 1, 1, 1, Zer26821), 
LDep33281 = depthwise_conv2D_layer(Zer26821, 5, 2,[[[[0.5401], [0.5298], [0.4853], [0.2428]], [[0.3984], [0.3346], [0.6261], [0.6654]]], [[[0.3394], [0.9701], [0.5037], [0.7671]], [[0.2871], [0.2117], [0.9475], [0.5834]]], [[[0.3268], [0.8414], [0.2649], [0.1717]], [[0.9597], [0.4458], [0.9622], [0.8708]]], [[[0.6992], [0.0039], [0.2331], [0.4904]], [[0.1499], [0.9451], [0.7363], [0.9913]]], [[[0.8838], [0.5937], [0.8042], [0.032]], [[0.7489], [0.5637], [0.5041], [0.4843]]]],[0, 0, 0, 0], 2, 2, false, Dep33281), 
LCon33212 = concatenate_layer([Dep33281,[[[[0.7591, 0.4819, 0.068, 0.6715]]]]], 3, Con33212), 
LAdd12694 = add_layer([Res92805,Con33212], Add12694), 
exec_layers([LMax13178,LRes30797,LCon77094,LRes92805,LZer26821,LDep33281,LCon33212,LAdd12694],["Max13178","Res30797","Con77094","Res92805","Zer26821","Dep33281","Con33212","Add12694"],Add12694,"Add12694")

Actual (Unparsed): [[[[5.1656937, 4.3020754, 5.9315084, 5.4460977, 1.1384431, 0.8480124, 1.1561306, 1.0623727]]]]

Expected (Unparsed): [[[[5.16569367,4.302075449999999,5.9315083699999995,5.4460977800000006,1.13844307,0.84801237,1.15613057,1.06237268]]]]

Actual:   [[[[5.1657, 4.3021, 5.9316, 5.4461, 1.1385, 0.8481, 1.1562, 1.0624]]]]

Expected: [[[[5.1657, 4.3021, 5.9316, 5.4461, 1.1385, 0.8481, 1.1562, 1.0624]]]]