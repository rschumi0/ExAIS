import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Ave57792 = tf.keras.layers.Input(shape=([1, 1]))
in0Con94716 = tf.keras.layers.Input(shape=([1, 3]))
in0Con31180 = tf.keras.layers.Input(shape=([1, 1]))
in0Con60123 = tf.keras.layers.Input(shape=([3, 3]))
in0Lay19426 = tf.keras.layers.Input(shape=([3, 4, 1]))
in0Dot83011 = tf.keras.layers.Input(shape=([2, 3]))
in1Dot83011 = tf.keras.layers.Input(shape=([2, 3]))
in0Con90094 = tf.keras.layers.Input(shape=([3, 1]))

Ave57792 = keras.layers.AveragePooling1D(pool_size=(1), strides=(1), padding='valid', name = 'Ave57792', )(in0Ave57792)
Con94716 = keras.layers.Concatenate(axis=2, name = 'Con94716', )([Ave57792,in0Con94716])
Con31180 = keras.layers.Conv1D(4, (1),strides=(1), padding='same', dilation_rate=(1), name = 'Con31180', )(in0Con31180)
Ave98817 = keras.layers.Average(name = 'Ave98817', )([Con94716,Con31180])
Sim72401 = keras.layers.SimpleRNN(3,name = 'Sim72401', )(Ave98817)
Res93264 = keras.layers.Reshape((3, 1), name = 'Res93264', )(Sim72401)
Con60123 = keras.layers.Concatenate(axis=2, name = 'Con60123', )([Res93264,in0Con60123])
Lay19426 = keras.layers.LayerNormalization(axis=1, epsilon=1.137886192640619, name = 'Lay19426', )(in0Lay19426)
Res55366 = keras.layers.Reshape((3, 4), name = 'Res55366', )(Lay19426)
Dot83011 = keras.layers.Dot(axes=(1, 1), name = 'Dot83011', )([in0Dot83011,in1Dot83011])
Con90094 = keras.layers.Concatenate(axis=2, name = 'Con90094', )([Dot83011,in0Con90094])
Sub8864 = keras.layers.Subtract(name = 'Sub8864', )([Res55366,Con90094])
Min11661 = keras.layers.Minimum(name = 'Min11661', )([Con60123,Sub8864])
model = tf.keras.models.Model(inputs=[in0Ave57792,in0Con94716,in0Con31180,in0Con60123,in0Lay19426,in0Dot83011,in1Dot83011,in0Con90094], outputs=Min11661)
w = model.get_layer('Con31180').get_weights() 
w[0] = np.array([[[0.8991, 0.0059, 0.149, 0.851]]])
w[1] = np.array([0, 0, 0, 0])
model.get_layer('Con31180').set_weights(w) 
w = model.get_layer('Sim72401').get_weights() 
w[0] = np.array([[7, 10, 6], [10, 5, 10], [4, 10, 4], [1, 9, 5]])
w[1] = np.array([[3, 6, 4], [2, 6, 1], [7, 10, 6]])
w[2] = np.array([3, 8, 9])
model.get_layer('Sim72401').set_weights(w) 
in0Ave57792 = tf.constant([[[1.547]]])
in0Con94716 = tf.constant([[[0.3004, 0.9276, 0.2243]]])
in0Con31180 = tf.constant([[[0.3792]]])
in0Con60123 = tf.constant([[[0.8491, 0.8098, 0.0364], [0.224, 0.1121, 0.4413], [0.5979, 0.0025, 0.1164]]])
in0Lay19426 = tf.constant([[[[1.4847], [1.0527], [1.5935], [1.8122]], [[1.4148], [1.7423], [1.1176], [1.8327]], [[1.1942], [1.6391], [1.6956], [1.0084]]]])
in0Dot83011 = tf.constant([[[0.4427, 0.6252, 0.446], [0.0209, 0.9429, 0.5104]]])
in1Dot83011 = tf.constant([[[0.7251, 0.35, 0.7762], [0.2056, 0.1654, 0.8908]]])
in0Con90094 = tf.constant([[[0.4404], [0.8167], [0.4312]]])
print (np.array2string(model.predict([in0Ave57792,in0Con94716,in0Con31180,in0Con60123,in0Lay19426,in0Dot83011,in1Dot83011,in0Con90094],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Min11661.png')

LAve57792 = average_pooling1D_layer([[[1.547]]], 1, 1, false, Ave57792), 
LCon94716 = concatenate_layer([Ave57792,[[[0.3004, 0.9276, 0.2243]]]], 2, Con94716), 
LCon31180 = conv1D_layer([[[0.3792]]], 1,[[[0.8991, 0.0059, 0.149, 0.851]]],[0, 0, 0, 0], 1, true, 1, Con31180), 
LAve98817 = average_layer([Con94716,Con31180], Ave98817), 
LSim72401 = simple_rnn_layer(Ave98817,[[7, 10, 6], [10, 5, 10], [4, 10, 4], [1, 9, 5]],[[3, 6, 4], [2, 6, 1], [7, 10, 6]],[3, 8, 9], Sim72401), 
LRes93264 = reshape_layer(Sim72401, [3, 1], Res93264), 
LCon60123 = concatenate_layer([Res93264,[[[0.8491, 0.8098, 0.0364], [0.224, 0.1121, 0.4413], [0.5979, 0.0025, 0.1164]]]], 2, Con60123), 
LLay19426 = layer_normalization_layer([[[[1.4847], [1.0527], [1.5935], [1.8122]], [[1.4148], [1.7423], [1.1176], [1.8327]], [[1.1942], [1.6391], [1.6956], [1.0084]]]], 1, 1.137886192640619, Lay19426), 
LRes55366 = reshape_layer(Lay19426, [3, 4], Res55366), 
LDot83011 = dot_layer([[[0.4427, 0.6252, 0.446], [0.0209, 0.9429, 0.5104]]], [[[0.7251, 0.35, 0.7762], [0.2056, 0.1654, 0.8908]]], 1, 1, Dot83011), 
LCon90094 = concatenate_layer([Dot83011,[[[0.4404], [0.8167], [0.4312]]]], 2, Con90094), 
LSub8864 = subtract_layer(Res55366,Con90094, Sub8864), 
LMin11661 = minimum_layer([Con60123,Sub8864], Min11661), 
exec_layers([LAve57792,LCon94716,LCon31180,LAve98817,LSim72401,LRes93264,LCon60123,LLay19426,LRes55366,LDot83011,LCon90094,LSub8864,LMin11661],["Ave57792","Con94716","Con31180","Ave98817","Sim72401","Res93264","Con60123","Lay19426","Res55366","Dot83011","Con90094","Sub8864","Min11661"],Min11661,"Min11661")

Actual (Unparsed): [[[-0.2134301, -0.5418940, -0.2485607, -0.2100870], [-0.6004152, -0.1365056, -1.6457296, -0.5683041], [-0.5869791, -0.0952981, -0.5940162, -0.9099088]]]

Expected (Unparsed): [[[-0.2134300623227955,-0.5418940133130968,-0.24856069632495545,-0.21008697871153817],[-0.6004152342648315,-0.13650561364684702,-1.645729623234696,-0.5683041869213679],[-0.5869791134123732,-0.09529805304005606,-0.5940162204403483,-0.9099088343670938]]]

Actual:   [[[-0.2134, -0.5418, -0.2485, -0.21], [-0.6004, -0.1365, -1.6457, -0.5683], [-0.5869, -0.0952, -0.594, -0.9099]]]

Expected: [[[-0.2134, -0.5418, -0.2485, -0.21], [-0.6004, -0.1365, -1.6457, -0.5683], [-0.5869, -0.0952, -0.594, -0.9099]]]