import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Ave80765 = tf.keras.layers.Input(shape=([1, 1, 2]))
in1Ave80765 = tf.keras.layers.Input(shape=([1, 1, 2]))
in0Mul47659 = tf.keras.layers.Input(shape=([2, 2]))
in1Mul47659 = tf.keras.layers.Input(shape=([2, 2]))
in0Con94094 = tf.keras.layers.Input(shape=([2, 2, 1]))
in0Dep42525 = tf.keras.layers.Input(shape=([1, 1, 2]))
in0Ave93783 = tf.keras.layers.Input(shape=([1, 2, 1]))
in0Con31759 = tf.keras.layers.Input(shape=([1, 2, 1]))
in0Mul56103 = tf.keras.layers.Input(shape=([2, 2, 2, 1]))
in1Mul56103 = tf.keras.layers.Input(shape=([2, 2, 2, 1]))
in0Add41691 = tf.keras.layers.Input(shape=([2, 1, 2, 1]))
in1Add41691 = tf.keras.layers.Input(shape=([2, 1, 2, 1]))

Ave80765 = keras.layers.Average(name = 'Ave80765', )([in0Ave80765,in1Ave80765])
Res17714 = keras.layers.Reshape((1, 2), name = 'Res17714', )(Ave80765)
Zer87592 = keras.layers.ZeroPadding1D(padding=((1, 0)), name = 'Zer87592', )(Res17714)
Mul47659 = keras.layers.Multiply(name = 'Mul47659', )([in0Mul47659,in1Mul47659])
Mul37489 = keras.layers.Multiply(name = 'Mul37489', )([Zer87592,Mul47659])
Res50028 = keras.layers.Reshape((2, 2, 1), name = 'Res50028', )(Mul37489)
Con94094 = keras.layers.Concatenate(axis=3, name = 'Con94094', )([Res50028,in0Con94094])
Dep42525 = keras.layers.DepthwiseConv2D((1, 1),strides=(1, 1), padding='valid', name = 'Dep42525', )(in0Dep42525)
Zer26053 = keras.layers.ZeroPadding2D(padding=((0, 0), (1, 0)), name = 'Zer26053', )(Dep42525)
Ave93783 = keras.layers.AveragePooling2D(pool_size=(1, 1), strides=(1, 1), padding='same', name = 'Ave93783', )(in0Ave93783)
Con31759 = keras.layers.Concatenate(axis=3, name = 'Con31759', )([Ave93783,in0Con31759])
Add21080 = keras.layers.Add(name = 'Add21080', )([Zer26053,Con31759])
Zer81864 = keras.layers.ZeroPadding2D(padding=((1, 0), (0, 0)), name = 'Zer81864', )(Add21080)
Min90546 = keras.layers.Minimum(name = 'Min90546', )([Con94094,Zer81864])
Res16271 = keras.layers.Reshape((2, 2, 2, 1), name = 'Res16271', )(Min90546)
Zer36020 = keras.layers.ZeroPadding3D(padding=((0, 0), (5, 0), (0, 0)), name = 'Zer36020', )(Res16271)
Mul56103 = keras.layers.Multiply(name = 'Mul56103', )([in0Mul56103,in1Mul56103])
Thr51090 = keras.layers.ThresholdedReLU(theta=5.172576390258599, name = 'Thr51090', )(Mul56103)
Res6327 = keras.layers.Reshape((2, 2, 2), name = 'Res6327', )(Thr51090)
Res21915 = keras.layers.Reshape((2, 4), name = 'Res21915', )(Res6327)
Cro77563 = keras.layers.Cropping1D(cropping=((1, 0)), name = 'Cro77563', )(Res21915)
Res60083 = keras.layers.Reshape((1, 4, 1), name = 'Res60083', )(Cro77563)
Res40477 = keras.layers.Reshape((1, 4, 1, 1), name = 'Res40477', )(Res60083)
Zer81532 = keras.layers.ZeroPadding3D(padding=((1, 0), (3, 0), (1, 0)), name = 'Zer81532', )(Res40477)
Add41691 = keras.layers.Add(name = 'Add41691', )([in0Add41691,in1Add41691])
Zer46436 = keras.layers.ZeroPadding3D(padding=((0, 0), (6, 0), (0, 0)), name = 'Zer46436', )(Add41691)
Min75700 = keras.layers.Minimum(name = 'Min75700', )([Zer81532,Zer46436])
Max55846 = keras.layers.Maximum(name = 'Max55846', )([Zer36020,Min75700])
model = tf.keras.models.Model(inputs=[in0Ave80765,in1Ave80765,in0Mul47659,in1Mul47659,in0Con94094,in0Dep42525,in0Ave93783,in0Con31759,in0Mul56103,in1Mul56103,in0Add41691,in1Add41691], outputs=Max55846)
w = model.get_layer('Dep42525').get_weights() 
w[0] = np.array([[[[0.5218], [0.435]]]])
w[1] = np.array([0, 0])
model.get_layer('Dep42525').set_weights(w) 
in0Ave80765 = tf.constant([[[[0.2683, 0.781]]]])
in1Ave80765 = tf.constant([[[[0.0647, 0.1789]]]])
in0Mul47659 = tf.constant([[[0.8405, 0.3793], [0.4886, 0.241]]])
in1Mul47659 = tf.constant([[[0.6977, 0.1221], [0.8088, 0.043]]])
in0Con94094 = tf.constant([[[[0.4056], [0.3524]], [[0.0915], [0.7612]]]])
in0Dep42525 = tf.constant([[[[0.1493, 0.1632]]]])
in0Ave93783 = tf.constant([[[[1.9553], [1.4663]]]])
in0Con31759 = tf.constant([[[[0.1557], [0.8494]]]])
in0Mul56103 = tf.constant([[[[[0.3377], [0.9944]], [[0.1699], [0.8985]]], [[[0.8602], [0.163]], [[0.796], [0.867]]]]])
in1Mul56103 = tf.constant([[[[[0.5642], [0.8528]], [[0.5765], [0.3355]]], [[[0.3898], [0.3052]], [[0.1669], [0.1046]]]]])
in0Add41691 = tf.constant([[[[[0.461], [0.7103]]], [[[0.8473], [0.4799]]]]])
in1Add41691 = tf.constant([[[[[0.1052], [0.2422]]], [[[0.3493], [0.0002]]]]])
print (np.array2string(model.predict([in0Ave80765,in1Ave80765,in0Mul47659,in1Mul47659,in0Con94094,in0Dep42525,in0Ave93783,in0Con31759,in0Mul56103,in1Mul56103,in0Add41691,in1Add41691],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Max55846.png')

LAve80765 = average_layer([[[[[0.2683, 0.781]]]], [[[[0.0647, 0.1789]]]]], Ave80765), 
LRes17714 = reshape_layer(Ave80765, [1, 2], Res17714), 
LZer87592 = zero_padding1D_layer(Res17714, 1, 0, Zer87592), 
LMul47659 = multiply_layer([[[[0.8405, 0.3793], [0.4886, 0.241]]], [[[0.6977, 0.1221], [0.8088, 0.043]]]], Mul47659), 
LMul37489 = multiply_layer([Zer87592,Mul47659], Mul37489), 
LRes50028 = reshape_layer(Mul37489, [2, 2, 1], Res50028), 
LCon94094 = concatenate_layer([Res50028,[[[[0.4056], [0.3524]], [[0.0915], [0.7612]]]]], 3, Con94094), 
LDep42525 = depthwise_conv2D_layer([[[[0.1493, 0.1632]]]], 1, 1,[[[[0.5218], [0.435]]]],[0, 0], 1, 1, false, Dep42525), 
LZer26053 = zero_padding2D_layer(Dep42525, 0, 0, 1, 0, Zer26053), 
LAve93783 = average_pooling2D_layer([[[[1.9553], [1.4663]]]], 1, 1, 1, 1, true, Ave93783), 
LCon31759 = concatenate_layer([Ave93783,[[[[0.1557], [0.8494]]]]], 3, Con31759), 
LAdd21080 = add_layer([Zer26053,Con31759], Add21080), 
LZer81864 = zero_padding2D_layer(Add21080, 1, 0, 0, 0, Zer81864), 
LMin90546 = minimum_layer([Con94094,Zer81864], Min90546), 
LRes16271 = reshape_layer(Min90546, [2, 2, 2, 1], Res16271), 
LZer36020 = zero_padding3D_layer(Res16271, 0, 0, 5, 0, 0, 0, Zer36020), 
LMul56103 = multiply_layer([[[[[[0.3377], [0.9944]], [[0.1699], [0.8985]]], [[[0.8602], [0.163]], [[0.796], [0.867]]]]], [[[[[0.5642], [0.8528]], [[0.5765], [0.3355]]], [[[0.3898], [0.3052]], [[0.1669], [0.1046]]]]]], Mul56103), 
LThr51090 = thresholded_relu_layer(Mul56103, 5.172576390258599, Thr51090), 
LRes6327 = reshape_layer(Thr51090, [2, 2, 2], Res6327), 
LRes21915 = reshape_layer(Res6327, [2, 4], Res21915), 
LCro77563 = cropping1D_layer(Res21915, 1, 0, Cro77563), 
LRes60083 = reshape_layer(Cro77563, [1, 4, 1], Res60083), 
LRes40477 = reshape_layer(Res60083, [1, 4, 1, 1], Res40477), 
LZer81532 = zero_padding3D_layer(Res40477, 1, 0, 3, 0, 1, 0, Zer81532), 
LAdd41691 = add_layer([[[[[[0.461], [0.7103]]], [[[0.8473], [0.4799]]]]], [[[[[0.1052], [0.2422]]], [[[0.3493], [0.0002]]]]]], Add41691), 
LZer46436 = zero_padding3D_layer(Add41691, 0, 0, 6, 0, 0, 0, Zer46436), 
LMin75700 = minimum_layer([Zer81532,Zer46436], Min75700), 
LMax55846 = maximum_layer([Zer36020,Min75700], Max55846), 
exec_layers([LAve80765,LRes17714,LZer87592,LMul47659,LMul37489,LRes50028,LCon94094,LDep42525,LZer26053,LAve93783,LCon31759,LAdd21080,LZer81864,LMin90546,LRes16271,LZer36020,LMul56103,LThr51090,LRes6327,LRes21915,LCro77563,LRes60083,LRes40477,LZer81532,LAdd41691,LZer46436,LMin75700,LMax55846],["Ave80765","Res17714","Zer87592","Mul47659","Mul37489","Res50028","Con94094","Dep42525","Zer26053","Ave93783","Con31759","Add21080","Zer81864","Min90546","Res16271","Zer36020","Mul56103","Thr51090","Res6327","Res21915","Cro77563","Res60083","Res40477","Zer81532","Add41691","Zer46436","Min75700","Max55846"],Max55846,"Max55846")

Actual (Unparsed): [[[[[0.0000000], [0.0000000]], [[0.0000000], [0.0000000]], [[0.0000000], [0.0000000]], [[0.0000000], [0.0000000]], [[0.0000000], [0.0000000]], [[0.0000000], [0.0000000]], [[0.0000000], [0.0000000]]], [[[0.0000000], [0.0000000]], [[0.0000000], [0.0000000]], [[0.0000000], [0.0000000]], [[0.0000000], [0.0000000]], [[0.0000000], [0.0000000]], [[0.0657974], [0.0915000]], [[0.0049737], [0.7612000]]]]]

Expected (Unparsed): [[[[[0],[0]],[[0],[0]],[[0],[0]],[[0],[0]],[[0],[0]],[[0.0],[0]],[[0.0],[0]]],[[[0],[0]],[[0],[0]],[[0],[0]],[[0],[0]],[[0],[0]],[[0.06579741671999999],[0.0915]],[[0.00497372185],[0.7612]]]]]

Actual:   [[[[[0], [0]], [[0], [0]], [[0], [0]], [[0], [0]], [[0], [0]], [[0], [0]], [[0], [0]]], [[[0], [0]], [[0], [0]], [[0], [0]], [[0], [0]], [[0], [0]], [[0.0658], [0.0915]], [[0.005], [0.7612]]]]]

Expected: [[[[[0], [0]], [[0], [0]], [[0], [0]], [[0], [0]], [[0], [0]], [[0], [0]], [[0], [0]]], [[[0], [0]], [[0], [0]], [[0], [0]], [[0], [0]], [[0], [0]], [[0.0658], [0.0915]], [[0.005], [0.7612]]]]]