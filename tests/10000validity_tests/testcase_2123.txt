import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Max68619 = tf.keras.layers.Input(shape=([1, 1]))
in1Max68619 = tf.keras.layers.Input(shape=([1, 1]))
in0Con602 = tf.keras.layers.Input(shape=([12, 1, 1]))
in0Sub75695 = tf.keras.layers.Input(shape=([3, 2, 2]))
in1Sub75695 = tf.keras.layers.Input(shape=([3, 2, 2]))
in0Glo67091 = tf.keras.layers.Input(shape=([1, 2]))
in0Con29425 = tf.keras.layers.Input(shape=([10]))
in0Con67771 = tf.keras.layers.Input(shape=([12, 1, 1]))
in0Max76857 = tf.keras.layers.Input(shape=([1, 1, 2]))
in0Add11678 = tf.keras.layers.Input(shape=([1, 1, 1]))
in1Add11678 = tf.keras.layers.Input(shape=([1, 1, 1]))
in0Con18185 = tf.keras.layers.Input(shape=([1, 1, 1]))

Max68619 = keras.layers.Maximum(name = 'Max68619', )([in0Max68619,in1Max68619])
LST10377 = keras.layers.LSTM(2,recurrent_activation='sigmoid', name = 'LST10377', )(Max68619)
Res69176 = keras.layers.Reshape((2, 1), name = 'Res69176', )(LST10377)
Res55050 = keras.layers.Reshape((2, 1, 1), name = 'Res55050', )(Res69176)
Zer34502 = keras.layers.ZeroPadding2D(padding=((10, 0), (0, 0)), name = 'Zer34502', )(Res55050)
Con602 = keras.layers.Concatenate(axis=3, name = 'Con602', )([Zer34502,in0Con602])
Sub75695 = keras.layers.Subtract(name = 'Sub75695', )([in0Sub75695,in1Sub75695])
Res79157 = keras.layers.Reshape((3, 4), name = 'Res79157', )(Sub75695)
Fla30822 = keras.layers.Flatten(name = 'Fla30822', )(Res79157)
Glo67091 = keras.layers.GlobalAveragePooling1D(name = 'Glo67091', )(in0Glo67091)
Con29425 = keras.layers.Concatenate(axis=1, name = 'Con29425', )([Glo67091,in0Con29425])
Add46018 = keras.layers.Add(name = 'Add46018', )([Fla30822,Con29425])
Res15673 = keras.layers.Reshape((12, 1), name = 'Res15673', )(Add46018)
Res92696 = keras.layers.Reshape((12, 1, 1), name = 'Res92696', )(Res15673)
Con67771 = keras.layers.Concatenate(axis=3, name = 'Con67771', )([Res92696,in0Con67771])
Max76857 = keras.layers.MaxPool2D(pool_size=(1, 1), strides=(4, 1), padding='valid', name = 'Max76857', )(in0Max76857)
Add11678 = keras.layers.Add(name = 'Add11678', )([in0Add11678,in1Add11678])
Con18185 = keras.layers.Concatenate(axis=3, name = 'Con18185', )([Add11678,in0Con18185])
Sub99235 = keras.layers.Subtract(name = 'Sub99235', )([Max76857,Con18185])
Zer28882 = keras.layers.ZeroPadding2D(padding=((11, 0), (0, 0)), name = 'Zer28882', )(Sub99235)
Max25325 = keras.layers.Maximum(name = 'Max25325', )([Con67771,Zer28882])
Sub94865 = keras.layers.Subtract(name = 'Sub94865', )([Con602,Max25325])
model = tf.keras.models.Model(inputs=[in0Max68619,in1Max68619,in0Con602,in0Sub75695,in1Sub75695,in0Glo67091,in0Con29425,in0Con67771,in0Max76857,in0Add11678,in1Add11678,in0Con18185], outputs=Sub94865)
w = model.get_layer('LST10377').get_weights() 
w[0] = np.array([[9, 5, 5, 7, 6, 10, 9, 3]])
w[1] = np.array([[3, 1, 1, 1, 2, 3, 7, 5], [7, 5, 9, 3, 1, 7, 1, 2]])
w[2] = np.array([10, 9, 1, 1, 7, 1, 10, 4])
model.get_layer('LST10377').set_weights(w) 
in0Max68619 = tf.constant([[[0.9796]]])
in1Max68619 = tf.constant([[[0.8261]]])
in0Con602 = tf.constant([[[[0.6107]], [[0.3317]], [[0.8748]], [[0.3263]], [[0.2886]], [[0.3021]], [[0.0562]], [[0.8592]], [[0.0366]], [[0.0967]], [[0.1643]], [[0.9673]]]])
in0Sub75695 = tf.constant([[[[0.8034, 0.007], [0.0712, 0.7112]], [[0.7983, 0.5184], [0.6086, 0.538]], [[0.6336, 0.2437], [0.1483, 0.859]]]])
in1Sub75695 = tf.constant([[[[0.454, 0.9691], [0.553, 0.7967]], [[0.63, 0.9522], [0.1713, 0.3839]], [[0.7406, 0.42], [0.4356, 0.9262]]]])
in0Glo67091 = tf.constant([[[1.9307, 1.6926]]])
in0Con29425 = tf.constant([[0.653, 0.5337, 0.8326, 0.0937, 0.6139, 0.5858, 0.3096, 0.8072, 0.1087, 0.6592]])
in0Con67771 = tf.constant([[[[0.3128]], [[0.4847]], [[0.2972]], [[0.8454]], [[0.0318]], [[0.3846]], [[0.6348]], [[0.1504]], [[0.5416]], [[0.1342]], [[0.7034]], [[0.0463]]]])
in0Max76857 = tf.constant([[[[1.7387, 1.7061]]]])
in0Add11678 = tf.constant([[[[0.9961]]]])
in1Add11678 = tf.constant([[[[0.2288]]]])
in0Con18185 = tf.constant([[[[0.6551]]]])
print (np.array2string(model.predict([in0Max68619,in1Max68619,in0Con602,in0Sub75695,in1Sub75695,in0Glo67091,in0Con29425,in0Con67771,in0Max76857,in0Add11678,in1Add11678,in0Con18185],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Sub94865.png')

LMax68619 = maximum_layer([[[[0.9796]]], [[[0.8261]]]], Max68619), 
LLST10377 = lstm_layer(Max68619,[[9, 5, 5, 7, 6, 10, 9, 3]],[[3, 1, 1, 1, 2, 3, 7, 5], [7, 5, 9, 3, 1, 7, 1, 2]],[10, 9, 1, 1, 7, 1, 10, 4], LST10377), 
LRes69176 = reshape_layer(LST10377, [2, 1], Res69176), 
LRes55050 = reshape_layer(Res69176, [2, 1, 1], Res55050), 
LZer34502 = zero_padding2D_layer(Res55050, 10, 0, 0, 0, Zer34502), 
LCon602 = concatenate_layer([Zer34502,[[[[0.6107]], [[0.3317]], [[0.8748]], [[0.3263]], [[0.2886]], [[0.3021]], [[0.0562]], [[0.8592]], [[0.0366]], [[0.0967]], [[0.1643]], [[0.9673]]]]], 3, Con602), 
LSub75695 = subtract_layer([[[[0.8034, 0.007], [0.0712, 0.7112]], [[0.7983, 0.5184], [0.6086, 0.538]], [[0.6336, 0.2437], [0.1483, 0.859]]]], [[[[0.454, 0.9691], [0.553, 0.7967]], [[0.63, 0.9522], [0.1713, 0.3839]], [[0.7406, 0.42], [0.4356, 0.9262]]]], Sub75695), 
LRes79157 = reshape_layer(Sub75695, [3, 4], Res79157), 
LFla30822 = flatten_layer(Res79157, Fla30822), 
LGlo67091 = global_average_pooling1D_layer([[[1.9307, 1.6926]]], Glo67091), 
LCon29425 = concatenate_layer([Glo67091,[[0.653, 0.5337, 0.8326, 0.0937, 0.6139, 0.5858, 0.3096, 0.8072, 0.1087, 0.6592]]], 1, Con29425), 
LAdd46018 = add_layer([Fla30822,Con29425], Add46018), 
LRes15673 = reshape_layer(Add46018, [12, 1], Res15673), 
LRes92696 = reshape_layer(Res15673, [12, 1, 1], Res92696), 
LCon67771 = concatenate_layer([Res92696,[[[[0.3128]], [[0.4847]], [[0.2972]], [[0.8454]], [[0.0318]], [[0.3846]], [[0.6348]], [[0.1504]], [[0.5416]], [[0.1342]], [[0.7034]], [[0.0463]]]]], 3, Con67771), 
LMax76857 = max_pool2D_layer([[[[1.7387, 1.7061]]]], 1, 1, 4, 1, false, Max76857), 
LAdd11678 = add_layer([[[[[0.9961]]]], [[[[0.2288]]]]], Add11678), 
LCon18185 = concatenate_layer([Add11678,[[[[0.6551]]]]], 3, Con18185), 
LSub99235 = subtract_layer(Max76857,Con18185, Sub99235), 
LZer28882 = zero_padding2D_layer(Sub99235, 11, 0, 0, 0, Zer28882), 
LMax25325 = maximum_layer([Con67771,Zer28882], Max25325), 
LSub94865 = subtract_layer(Con602,Max25325, Sub94865), 
exec_layers([LMax68619,LLST10377,LRes69176,LRes55050,LZer34502,LCon602,LSub75695,LRes79157,LFla30822,LGlo67091,LCon29425,LAdd46018,LRes15673,LRes92696,LCon67771,LMax76857,LAdd11678,LCon18185,LSub99235,LZer28882,LMax25325,LSub94865],["Max68619","LST10377","Res69176","Res55050","Zer34502","Con602","Sub75695","Res79157","Fla30822","Glo67091","Con29425","Add46018","Res15673","Res92696","Con67771","Max76857","Add11678","Con18185","Sub99235","Zer28882","Max25325","Sub94865"],Sub94865,"Sub94865")

Actual (Unparsed): [[[[-2.2800999, 0.2979000]], [[-0.7305000, -0.1530000]], [[-0.1712000, 0.5776000]], [[-0.4482000, -0.5191000]], [[-1.0009000, 0.2568000]], [[0.0000000, -0.0825000]], [[-1.0512000, -0.5786000]], [[-0.7399000, 0.7088000]], [[-0.2026000, -0.5050000]], [[-0.6309000, -0.0375000]], [[0.7615941, -0.5391000]], [[0.1688561, -0.0837000]]]]

Expected (Unparsed): [[[[-2.2801,0.2979]],[[-0.7305000000000001,-0.15300000000000002]],[[-0.17119999999999996,0.5776]],[[-0.44820000000000004,-0.5191000000000001]],[[-1.0009000000000001,0.25680000000000003]],[[0,-0.08250000000000002]],[[-1.0512000000000001,-0.5786]],[[-0.7399,0.7088]],[[-0.2026,-0.505]],[[-0.6309,-0.03750000000000002]],[[0.7615941479960155,-0.5391]],[[0.16885617039731393,-0.08369999999999989]]]]

Actual:   [[[[-2.28, 0.2979]], [[-0.7305, -0.153]], [[-0.1712, 0.5776]], [[-0.4482, -0.5191]], [[-1.0009, 0.2568]], [[0, -0.0825]], [[-1.0512, -0.5786]], [[-0.7399, 0.7088]], [[-0.2026, -0.505]], [[-0.6309, -0.0375]], [[0.7616, -0.5391]], [[0.1689, -0.0837]]]]

Expected: [[[[-2.2801, 0.2979]], [[-0.7305, -0.153]], [[-0.1711, 0.5776]], [[-0.4482, -0.5191]], [[-1.0009, 0.2569]], [[0, -0.0825]], [[-1.0512, -0.5786]], [[-0.7399, 0.7088]], [[-0.2026, -0.505]], [[-0.6309, -0.0375]], [[0.7616, -0.5391]], [[0.1689, -0.0836]]]]