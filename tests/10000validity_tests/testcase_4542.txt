import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Ave65201 = tf.keras.layers.Input(shape=([2, 1, 1, 2]))
in1Ave65201 = tf.keras.layers.Input(shape=([2, 1, 1, 2]))

Ave65201 = keras.layers.Average(name = 'Ave65201', )([in0Ave65201,in1Ave65201])
Res9994 = keras.layers.Reshape((2, 1, 2), name = 'Res9994', )(Ave65201)
Res79597 = keras.layers.Reshape((2, 2), name = 'Res79597', )(Res9994)
Zer7417 = keras.layers.ZeroPadding1D(padding=((1, 1)), name = 'Zer7417', )(Res79597)
model = tf.keras.models.Model(inputs=[in0Ave65201,in1Ave65201], outputs=Zer7417)
in0Ave65201 = tf.constant([[[[[0.7339, 0.124]]], [[[0.5525, 0.0002]]]]])
in1Ave65201 = tf.constant([[[[[0.8459, 0.8846]]], [[[0.6316, 0.251]]]]])
print (np.array2string(model.predict([in0Ave65201,in1Ave65201],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Zer7417.png')

LAve65201 = average_layer([[[[[[0.7339, 0.124]]], [[[0.5525, 0.0002]]]]], [[[[[0.8459, 0.8846]]], [[[0.6316, 0.251]]]]]], Ave65201), 
LRes9994 = reshape_layer(Ave65201, [2, 1, 2], Res9994), 
LRes79597 = reshape_layer(Res9994, [2, 2], Res79597), 
LZer7417 = zero_padding1D_layer(Res79597, 1, 1, Zer7417), 
exec_layers([LAve65201,LRes9994,LRes79597,LZer7417],["Ave65201","Res9994","Res79597","Zer7417"],Zer7417,"Zer7417")

Actual (Unparsed): [[[0.0000000, 0.0000000], [0.7899000, 0.5043000], [0.5920500, 0.1256000], [0.0000000, 0.0000000]]]

Expected (Unparsed): [[[0,0],[0.7899,0.5043],[0.59205,0.1256],[0,0]]]

Actual:   [[[0, 0], [0.7899, 0.5043], [0.5921, 0.1256], [0, 0]]]

Expected: [[[0, 0], [0.7899, 0.5043], [0.5921, 0.1256], [0, 0]]]