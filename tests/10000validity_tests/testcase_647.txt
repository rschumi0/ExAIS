import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Min8394 = tf.keras.layers.Input(shape=([2, 2, 2, 1]))
in1Min8394 = tf.keras.layers.Input(shape=([2, 2, 2, 1]))
in0Con23701 = tf.keras.layers.Input(shape=([2, 2, 2]))
in0Con35675 = tf.keras.layers.Input(shape=([3, 5, 4]))

Min8394 = keras.layers.Minimum(name = 'Min8394', )([in0Min8394,in1Min8394])
Res42743 = keras.layers.Reshape((2, 2, 2), name = 'Res42743', )(Min8394)
Res20735 = keras.layers.Reshape((2, 4), name = 'Res20735', )(Res42743)
Zer62439 = keras.layers.ZeroPadding1D(padding=((1, 0)), name = 'Zer62439', )(Res20735)
Res26973 = keras.layers.Reshape((3, 4, 1), name = 'Res26973', )(Zer62439)
Loc30960 = keras.layers.LocallyConnected2D(2, (1, 2),strides=(1, 1), name = 'Loc30960', )(Res26973)
Res18046 = keras.layers.Reshape((3, 3, 2, 1), name = 'Res18046', )(Loc30960)
Con47984 = keras.layers.Conv3D(3, (3, 1, 2),strides=(1, 1, 1), padding='same', dilation_rate=(1, 1, 1), name = 'Con47984', )(Res18046)
Res61667 = keras.layers.Reshape((3, 3, 6), name = 'Res61667', )(Con47984)
Zer29854 = keras.layers.ZeroPadding2D(padding=((0, 0), (2, 0)), name = 'Zer29854', )(Res61667)
Con23701 = keras.layers.Conv2DTranspose(2, (1, 1),strides=(1, 1), padding='valid', name = 'Con23701', )(in0Con23701)
Up_58347 = keras.layers.UpSampling2D(size=(1, 2), name = 'Up_58347', )(Con23701)
Zer85176 = keras.layers.ZeroPadding2D(padding=((1, 0), (1, 0)), name = 'Zer85176', )(Up_58347)
Con35675 = keras.layers.Concatenate(axis=3, name = 'Con35675', )([Zer85176,in0Con35675])
Max47433 = keras.layers.Maximum(name = 'Max47433', )([Zer29854,Con35675])
model = tf.keras.models.Model(inputs=[in0Min8394,in1Min8394,in0Con23701,in0Con35675], outputs=Max47433)
w = model.get_layer('Loc30960').get_weights() 
w[0] = np.array([[[0.0619, 0.8653], [0.8569, 0.384]], [[0.9547, 0.6343], [0.3227, 0.0918]], [[0.9567, 0.8358], [0.4415, 0.1041]], [[0.3213, 0.4263], [0.3461, 0.9318]], [[0.5274, 0.8115], [0.8138, 0.5097]], [[0.5638, 0.9202], [0.9244, 0.2259]], [[0.6072, 0.5885], [0.3718, 0.3905]], [[0.071, 0.3423], [0.2733, 0.3831]], [[0.9563, 0.7599], [0.3486, 0.0147]]])
w[1] = np.array([[[0, 0], [0, 0], [0, 0]], [[0, 0], [0, 0], [0, 0]], [[0, 0], [0, 0], [0, 0]]])
model.get_layer('Loc30960').set_weights(w) 
w = model.get_layer('Con47984').get_weights() 
w[0] = np.array([[[[[0.5193, 0.4716, 0.7093]], [[0.0261, 0.7302, 0.4059]]]], [[[[0.7548, 0.8341, 0.5303]], [[0.2365, 0.3779, 0.1506]]]], [[[[0.2442, 0.2571, 0.606]], [[0.6736, 0.1279, 0.0431]]]]])
w[1] = np.array([0, 0, 0])
model.get_layer('Con47984').set_weights(w) 
w = model.get_layer('Con23701').get_weights() 
w[0] = np.array([[[[0.0945, 0.8012], [0.1297, 0.0778]]]])
w[1] = np.array([0, 0])
model.get_layer('Con23701').set_weights(w) 
in0Min8394 = tf.constant([[[[[0.1858], [0.1309]], [[0.9767], [0.3661]]], [[[0.8502], [0.5793]], [[0.393], [0.6595]]]]])
in1Min8394 = tf.constant([[[[[0.7909], [0.9086]], [[0.5823], [0.5638]]], [[[0.0706], [0.4976]], [[0.5066], [0.5309]]]]])
in0Con23701 = tf.constant([[[[0.5834, 0.0609], [0.3822, 0.338]], [[0.441, 0.2867], [0.797, 0.9296]]]])
in0Con35675 = tf.constant([[[[0.0237, 0.4755, 0.2386, 0.7759], [0.2917, 0.3966, 0.0687, 0.8158], [0.4732, 0.1057, 0.391, 0.0829], [0.3977, 0.8878, 0.7348, 0.455], [0.9213, 0.641, 0.0478, 0.4323]], [[0.2423, 0.0575, 0.4436, 0.5099], [0.6665, 0.8945, 0.617, 0.6975], [0.3052, 0.0215, 0.1943, 0.6159], [0.2048, 0.1749, 0.3223, 0.4842], [0.7065, 0.1254, 0.6071, 0.2269]], [[0.4127, 0.2686, 0.1157, 0.8767], [0.9964, 0.4863, 0.522, 0.4247], [0.2338, 0.4951, 0.6426, 0.2814], [0.0601, 0.7966, 0.5415, 0.5477], [0.1549, 0.7761, 0.1054, 0.3716]]]])
print (np.array2string(model.predict([in0Min8394,in1Min8394,in0Con23701,in0Con35675],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Max47433.png')

LMin8394 = minimum_layer([[[[[[0.1858], [0.1309]], [[0.9767], [0.3661]]], [[[0.8502], [0.5793]], [[0.393], [0.6595]]]]], [[[[[0.7909], [0.9086]], [[0.5823], [0.5638]]], [[[0.0706], [0.4976]], [[0.5066], [0.5309]]]]]], Min8394), 
LRes42743 = reshape_layer(Min8394, [2, 2, 2], Res42743), 
LRes20735 = reshape_layer(Res42743, [2, 4], Res20735), 
LZer62439 = zero_padding1D_layer(Res20735, 1, 0, Zer62439), 
LRes26973 = reshape_layer(Zer62439, [3, 4, 1], Res26973), 
LLoc30960 = locally_connected2D_layer(Res26973, 1, 2,[[[0.0619, 0.8653], [0.8569, 0.384]], [[0.9547, 0.6343], [0.3227, 0.0918]], [[0.9567, 0.8358], [0.4415, 0.1041]], [[0.3213, 0.4263], [0.3461, 0.9318]], [[0.5274, 0.8115], [0.8138, 0.5097]], [[0.5638, 0.9202], [0.9244, 0.2259]], [[0.6072, 0.5885], [0.3718, 0.3905]], [[0.071, 0.3423], [0.2733, 0.3831]], [[0.9563, 0.7599], [0.3486, 0.0147]]],[[[0, 0], [0, 0], [0, 0]], [[0, 0], [0, 0], [0, 0]], [[0, 0], [0, 0], [0, 0]]], 1, 1, Loc30960), 
LRes18046 = reshape_layer(Loc30960, [3, 3, 2, 1], Res18046), 
LCon47984 = conv3D_layer(Res18046, 3, 1, 2,[[[[[0.5193, 0.4716, 0.7093]], [[0.0261, 0.7302, 0.4059]]]], [[[[0.7548, 0.8341, 0.5303]], [[0.2365, 0.3779, 0.1506]]]], [[[[0.2442, 0.2571, 0.606]], [[0.6736, 0.1279, 0.0431]]]]],[0, 0, 0], 1, 1, 1, true, 1, 1, 1, Con47984), 
LRes61667 = reshape_layer(Con47984, [3, 3, 6], Res61667), 
LZer29854 = zero_padding2D_layer(Res61667, 0, 0, 2, 0, Zer29854), 
LCon23701 = conv2D_transpose_layer([[[[0.5834, 0.0609], [0.3822, 0.338]], [[0.441, 0.2867], [0.797, 0.9296]]]], 1, 1,[[[[0.0945, 0.8012], [0.1297, 0.0778]]]],[0, 0], 1, 1, false, Con23701), 
LUp_58347 = up_sampling2D_layer(Con23701, 1, 2, Up_58347), 
LZer85176 = zero_padding2D_layer(Up_58347, 1, 0, 1, 0, Zer85176), 
LCon35675 = concatenate_layer([Zer85176,[[[[0.0237, 0.4755, 0.2386, 0.7759], [0.2917, 0.3966, 0.0687, 0.8158], [0.4732, 0.1057, 0.391, 0.0829], [0.3977, 0.8878, 0.7348, 0.455], [0.9213, 0.641, 0.0478, 0.4323]], [[0.2423, 0.0575, 0.4436, 0.5099], [0.6665, 0.8945, 0.617, 0.6975], [0.3052, 0.0215, 0.1943, 0.6159], [0.2048, 0.1749, 0.3223, 0.4842], [0.7065, 0.1254, 0.6071, 0.2269]], [[0.4127, 0.2686, 0.1157, 0.8767], [0.9964, 0.4863, 0.522, 0.4247], [0.2338, 0.4951, 0.6426, 0.2814], [0.0601, 0.7966, 0.5415, 0.5477], [0.1549, 0.7761, 0.1054, 0.3716]]]]], 3, Con35675), 
LMax47433 = maximum_layer([Zer29854,Con35675], Max47433), 
exec_layers([LMin8394,LRes42743,LRes20735,LZer62439,LRes26973,LLoc30960,LRes18046,LCon47984,LRes61667,LZer29854,LCon23701,LUp_58347,LZer85176,LCon35675,LMax47433],["Min8394","Res42743","Res20735","Zer62439","Res26973","Loc30960","Res18046","Con47984","Res61667","Zer29854","Con23701","Up_58347","Zer85176","Con35675","Max47433"],Max47433,"Max47433")

Actual (Unparsed): [[[[0.0000000, 0.0000000, 0.0237000, 0.4755000, 0.2386000, 0.7759000], [0.0000000, 0.0000000, 0.2917000, 0.3966000, 0.0687000, 0.8158000], [0.1611558, 0.0527268, 0.4732000, 0.1057000, 0.3910000, 0.1219146], [0.4040559, 0.1911295, 0.3977000, 0.8878000, 0.7348000, 0.4550000], [0.5794587, 0.2505252, 0.9213000, 0.6410000, 0.1590252, 0.4323000]], [[0.0000000, 0.0000000, 0.2423000, 0.0575000, 0.4436000, 0.5099000], [0.1039244, 0.0804050, 0.6665000, 0.8945000, 0.6170000, 0.6975000], [0.3413576, 0.2523613, 0.3052000, 0.2094473, 0.2284434, 0.6159000], [0.7561110, 0.6828849, 0.4489304, 0.3825628, 0.4186620, 0.4842000], [0.9929189, 0.9732594, 0.7998266, 0.5417037, 0.6071000, 0.5137145]], [[0.0000000, 0.0000000, 0.4127000, 0.2686000, 0.1157000, 0.8767000], [0.2713785, 0.0795030, 0.9964000, 0.4863000, 0.5220000, 0.4247000], [0.2875602, 0.4756232, 0.3124999, 0.4951000, 0.6426000, 0.2814000], [0.8201120, 0.7906450, 0.6726938, 0.7966000, 0.5415000, 0.5477000], [0.8582131, 1.3497310, 1.0675648, 0.7761000, 0.5473066, 0.6012342]]]]

Expected (Unparsed): [[[[0,0,0.0237,0.4755,0.2386,0.7759],[0,0,0.2917,0.3966,0.0687,0.8158],[0.161155777902,0.052726836476999994,0.4732,0.1057,0.391,0.12191457096],[0.404055945456,0.191129504154,0.3977,0.8878,0.7348,0.455],[0.5794587037560001,0.250525188573,0.9213,0.641,0.159025207095,0.4323]],[[0,0,0.2423,0.0575,0.4436,0.5099],[0.10392438000000001,0.080405,0.6665,0.8945,0.617,0.6975],[0.341357625024,0.252361326497,0.3052,0.20944726174800002,0.228443374746,0.6159],[0.756110963418,0.682884847266,0.44893034813399996,0.3825628102440001,0.41866202594400004,0.4842],[0.9929188641450001,0.973259396524,0.7998265489670001,0.5417036547660001,0.6071,0.5137144464150001]],[[0,0,0.4127,0.2686,0.1157,0.8767],[0.27137854000000006,0.07950296000000001,0.9964,0.4863,0.522,0.4247],[0.28756023790499996,0.47562318568999995,0.312499855263,0.4951,0.6426,0.2814],[0.82011202,0.790644993184,0.672693783932,0.7966,0.5415,0.5477],[0.8582130688560001,1.349730956289,1.067564793499,0.7761,0.547306562733,0.6012342317640001]]]]

Actual:   [[[[0, 0, 0.0237, 0.4755, 0.2386, 0.7759], [0, 0, 0.2917, 0.3966, 0.0687, 0.8158], [0.1612, 0.0528, 0.4732, 0.1057, 0.391, 0.122], [0.4041, 0.1912, 0.3977, 0.8878, 0.7348, 0.455], [0.5795, 0.2506, 0.9213, 0.641, 0.1591, 0.4323]], [[0, 0, 0.2423, 0.0575, 0.4436, 0.5099], [0.104, 0.0805, 0.6665, 0.8945, 0.617, 0.6975], [0.3414, 0.2524, 0.3052, 0.2095, 0.2285, 0.6159], [0.7562, 0.6829, 0.449, 0.3826, 0.4187, 0.4842], [0.993, 0.9733, 0.7999, 0.5418, 0.6071, 0.5138]], [[0, 0, 0.4127, 0.2686, 0.1157, 0.8767], [0.2714, 0.0796, 0.9964, 0.4863, 0.522, 0.4247], [0.2876, 0.4757, 0.3125, 0.4951, 0.6426, 0.2814], [0.8202, 0.7907, 0.6727, 0.7966, 0.5415, 0.5477], [0.8583, 1.3498, 1.0676, 0.7761, 0.5474, 0.6013]]]]

Expected: [[[[0, 0, 0.0237, 0.4755, 0.2386, 0.7759], [0, 0, 0.2917, 0.3966, 0.0687, 0.8158], [0.1612, 0.0528, 0.4732, 0.1057, 0.391, 0.122], [0.4041, 0.1912, 0.3977, 0.8878, 0.7348, 0.455], [0.5795, 0.2506, 0.9213, 0.641, 0.1591, 0.4323]], [[0, 0, 0.2423, 0.0575, 0.4436, 0.5099], [0.104, 0.0805, 0.6665, 0.8945, 0.617, 0.6975], [0.3414, 0.2524, 0.3052, 0.2095, 0.2285, 0.6159], [0.7562, 0.6829, 0.449, 0.3826, 0.4187, 0.4842], [0.993, 0.9733, 0.7999, 0.5418, 0.6071, 0.5138]], [[0, 0, 0.4127, 0.2686, 0.1157, 0.8767], [0.2714, 0.0796, 0.9964, 0.4863, 0.522, 0.4247], [0.2876, 0.4757, 0.3125, 0.4951, 0.6426, 0.2814], [0.8202, 0.7907, 0.6727, 0.7966, 0.5415, 0.5477], [0.8583, 1.3498, 1.0676, 0.7761, 0.5474, 0.6013]]]]