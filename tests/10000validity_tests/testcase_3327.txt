import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Max93186 = tf.keras.layers.Input(shape=([2, 2, 1, 1]))
in1Max93186 = tf.keras.layers.Input(shape=([2, 2, 1, 1]))
in0Thr62286 = tf.keras.layers.Input(shape=([1, 1]))
in0Sub1242 = tf.keras.layers.Input(shape=([3]))
in1Sub1242 = tf.keras.layers.Input(shape=([3]))
in0Con15126 = tf.keras.layers.Input(shape=([5, 1]))

Max93186 = keras.layers.Maximum(name = 'Max93186', )([in0Max93186,in1Max93186])
Sof60939 = keras.layers.Softmax(axis=1, name = 'Sof60939', )(Max93186)
Res16134 = keras.layers.Reshape((2, 2, 1), name = 'Res16134', )(Sof60939)
Thr62286 = keras.layers.ThresholdedReLU(theta=4.359931906047084, name = 'Thr62286', input_shape=(1, 1))(in0Thr62286)
Res47669 = keras.layers.Reshape((1, 1, 1), name = 'Res47669', )(Thr62286)
Cro77103 = keras.layers.Cropping2D(cropping=((0, 0), (0, 0)), name = 'Cro77103', )(Res47669)
Zer62642 = keras.layers.ZeroPadding2D(padding=((1, 0), (1, 0)), name = 'Zer62642', )(Cro77103)
Min81914 = keras.layers.Minimum(name = 'Min81914', )([Res16134,Zer62642])
Res25735 = keras.layers.Reshape((2, 2), name = 'Res25735', )(Min81914)
Zer70379 = keras.layers.ZeroPadding1D(padding=((3, 0)), name = 'Zer70379', )(Res25735)
Sub1242 = keras.layers.Subtract(name = 'Sub1242', )([in0Sub1242,in1Sub1242])
Res95739 = keras.layers.Reshape((3, 1), name = 'Res95739', )(Sub1242)
Zer34854 = keras.layers.ZeroPadding1D(padding=((1, 1)), name = 'Zer34854', )(Res95739)
Con15126 = keras.layers.Concatenate(axis=2, name = 'Con15126', )([Zer34854,in0Con15126])
Add48414 = keras.layers.Add(name = 'Add48414', )([Zer70379,Con15126])
model = tf.keras.models.Model(inputs=[in0Max93186,in1Max93186,in0Thr62286,in0Sub1242,in1Sub1242,in0Con15126], outputs=Add48414)
in0Max93186 = tf.constant([[[[[0.7702]], [[0.0199]]], [[[0.1257]], [[0.1077]]]]])
in1Max93186 = tf.constant([[[[[0.3719]], [[0.4293]]], [[[0.1396]], [[0.6248]]]]])
in0Thr62286 = tf.constant([[[0.7906]]])
in0Sub1242 = tf.constant([[0.4724, 0.2115, 0.7678]])
in1Sub1242 = tf.constant([[0.1183, 0.8722, 0.6511]])
in0Con15126 = tf.constant([[[0.4238], [0.9844], [0.0728], [0.0928], [0.2019]]])
print (np.array2string(model.predict([in0Max93186,in1Max93186,in0Thr62286,in0Sub1242,in1Sub1242,in0Con15126],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Add48414.png')

LMax93186 = maximum_layer([[[[[[0.7702]], [[0.0199]]], [[[0.1257]], [[0.1077]]]]], [[[[[0.3719]], [[0.4293]]], [[[0.1396]], [[0.6248]]]]]], Max93186), 
LSof60939 = softmax_layer(Max93186, 1, Sof60939), 
LRes16134 = reshape_layer(Sof60939, [2, 2, 1], Res16134), 
LThr62286 = thresholded_relu_layer([[[0.7906]]], 4.359931906047084, Thr62286), 
LRes47669 = reshape_layer(Thr62286, [1, 1, 1], Res47669), 
LCro77103 = cropping2D_layer(Res47669, 0, 0, 0, 0, Cro77103), 
LZer62642 = zero_padding2D_layer(Cro77103, 1, 0, 1, 0, Zer62642), 
LMin81914 = minimum_layer([Res16134,Zer62642], Min81914), 
LRes25735 = reshape_layer(Min81914, [2, 2], Res25735), 
LZer70379 = zero_padding1D_layer(Res25735, 3, 0, Zer70379), 
LSub1242 = subtract_layer([[0.4724, 0.2115, 0.7678]], [[0.1183, 0.8722, 0.6511]], Sub1242), 
LRes95739 = reshape_layer(Sub1242, [3, 1], Res95739), 
LZer34854 = zero_padding1D_layer(Res95739, 1, 1, Zer34854), 
LCon15126 = concatenate_layer([Zer34854,[[[0.4238], [0.9844], [0.0728], [0.0928], [0.2019]]]], 2, Con15126), 
LAdd48414 = add_layer([Zer70379,Con15126], Add48414), 
exec_layers([LMax93186,LSof60939,LRes16134,LThr62286,LRes47669,LCro77103,LZer62642,LMin81914,LRes25735,LZer70379,LSub1242,LRes95739,LZer34854,LCon15126,LAdd48414],["Max93186","Sof60939","Res16134","Thr62286","Res47669","Cro77103","Zer62642","Min81914","Res25735","Zer70379","Sub1242","Res95739","Zer34854","Con15126","Add48414"],Add48414,"Add48414")

Actual (Unparsed): [[[0.0000000, 0.4238000], [0.3541000, 0.9844000], [-0.6607000, 0.0728000], [0.1167000, 0.0928000], [0.0000000, 0.2019000]]]

Expected (Unparsed): [[[0,0.4238],[0.35409999999999997,0.9844],[-0.6607,0.0728],[0.11670000000000003,0.0928],[0,0.2019]]]

Actual:   [[[0, 0.4238], [0.3541, 0.9844], [-0.6607, 0.0728], [0.1167, 0.0928], [0, 0.2019]]]

Expected: [[[0, 0.4238], [0.3541, 0.9844], [-0.6607, 0.0728], [0.1168, 0.0928], [0, 0.2019]]]