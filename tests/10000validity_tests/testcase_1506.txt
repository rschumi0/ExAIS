import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Lea40709 = tf.keras.layers.Input(shape=([2, 2]))
in0GRU40121 = tf.keras.layers.Input(shape=([3, 3]))
in0Con11195 = tf.keras.layers.Input(shape=([2, 1]))
in0Max20442 = tf.keras.layers.Input(shape=([1, 2]))
in0Cro57332 = tf.keras.layers.Input(shape=([4, 2]))
in0Con9347 = tf.keras.layers.Input(shape=([2, 1]))

Lea40709 = keras.layers.LeakyReLU(alpha=1.052184178331471, name = 'Lea40709', input_shape=(2, 2))(in0Lea40709)
GRU40121 = keras.layers.GRU(2,reset_after=True, recurrent_activation='sigmoid', name = 'GRU40121', )(in0GRU40121)
Res27313 = keras.layers.Reshape((2, 1), name = 'Res27313', )(GRU40121)
Con11195 = keras.layers.Concatenate(axis=2, name = 'Con11195', )([Res27313,in0Con11195])
Max20442 = keras.layers.MaxPool1D(pool_size=(1), name = 'Max20442', )(in0Max20442)
Cro57332 = keras.layers.Cropping1D(cropping=((3, 0)), name = 'Cro57332', )(in0Cro57332)
Mul73834 = keras.layers.Multiply(name = 'Mul73834', )([Max20442,Cro57332])
Dot24918 = keras.layers.Dot(axes=(2, 2), name = 'Dot24918', )([Con11195,Mul73834])
Con9347 = keras.layers.Concatenate(axis=2, name = 'Con9347', )([Dot24918,in0Con9347])
Min76017 = keras.layers.Minimum(name = 'Min76017', )([Lea40709,Con9347])
Lay11704 = keras.layers.LayerNormalization(axis=2, epsilon=1.7500493423810586, name = 'Lay11704', )(Min76017)
model = tf.keras.models.Model(inputs=[in0Lea40709,in0GRU40121,in0Con11195,in0Max20442,in0Cro57332,in0Con9347], outputs=Lay11704)
w = model.get_layer('GRU40121').get_weights() 
w[0] = np.array([[7, 7, 6, 3, 8, 9], [2, 4, 10, 2, 5, 9], [3, 9, 7, 2, 4, 1]])
w[1] = np.array([[9, 8, 4, 4, 7, 8], [1, 9, 2, 8, 10, 5]])
w[2] = np.array([[4, 9, 1, 5, 2, 6], [9, 7, 3, 3, 10, 5]])
model.get_layer('GRU40121').set_weights(w) 
in0Lea40709 = tf.constant([[[0.5236, 0.1564], [0.3656, 0.0172]]])
in0GRU40121 = tf.constant([[[2, 8, 7], [3, 7, 7], [4, 1, 7]]])
in0Con11195 = tf.constant([[[0.0606], [0.9133]]])
in0Max20442 = tf.constant([[[1.626, 1.8429]]])
in0Cro57332 = tf.constant([[[1.0675, 1.4171], [1.6354, 1.8571], [1.8604, 1.1299], [1.5339, 1.648]]])
in0Con9347 = tf.constant([[[0.3352], [0.1651]]])
print (np.array2string(model.predict([in0Lea40709,in0GRU40121,in0Con11195,in0Max20442,in0Cro57332,in0Con9347],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Lay11704.png')

LLea40709 = leaky_relu_layer([[[0.5236, 0.1564], [0.3656, 0.0172]]], 1.052184178331471, Lea40709), 
LGRU40121 = gru_layer([[[2, 8, 7], [3, 7, 7], [4, 1, 7]]],[[7, 7, 6, 3, 8, 9], [2, 4, 10, 2, 5, 9], [3, 9, 7, 2, 4, 1]],[[9, 8, 4, 4, 7, 8], [1, 9, 2, 8, 10, 5]],[[4, 9, 1, 5, 2, 6], [9, 7, 3, 3, 10, 5]], true, GRU40121), 
LRes27313 = reshape_layer(GRU40121, [2, 1], Res27313), 
LCon11195 = concatenate_layer([Res27313,[[[0.0606], [0.9133]]]], 2, Con11195), 
LMax20442 = max_pool1D_layer([[[1.626, 1.8429]]], 1, Max20442), 
LCro57332 = cropping1D_layer([[[1.0675, 1.4171], [1.6354, 1.8571], [1.8604, 1.1299], [1.5339, 1.648]]], 3, 0, Cro57332), 
LMul73834 = multiply_layer([Max20442,Cro57332], Mul73834), 
LDot24918 = dot_layer(Con11195,Mul73834, 2, 2, Dot24918), 
LCon9347 = concatenate_layer([Dot24918,[[[0.3352], [0.1651]]]], 2, Con9347), 
LMin76017 = minimum_layer([Lea40709,Con9347], Min76017), 
LLay11704 = layer_normalization_layer(Min76017, 2, 1.7500493423810586, Lay11704), 
exec_layers([LLea40709,LGRU40121,LRes27313,LCon11195,LMax20442,LCro57332,LMul73834,LDot24918,LCon9347,LMin76017,LLay11704],["Lea40709","GRU40121","Res27313","Con11195","Max20442","Cro57332","Mul73834","Dot24918","Con9347","Min76017","Lay11704"],Lay11704,"Lay11704")

Actual (Unparsed): [[[0.0104493, -0.0104493], [0.1305539, -0.1305539]]]

Expected (Unparsed): [[[0.01044932385804387,-0.01044932385804387],[0.1305539360533651,-0.1305539360533651]]]

Actual:   [[[0.0105, -0.0104], [0.1306, -0.1305]]]

Expected: [[[0.0105, -0.0104], [0.1306, -0.1305]]]