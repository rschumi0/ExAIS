import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Max91389 = tf.keras.layers.Input(shape=([1, 2, 2, 2]))
in1Max91389 = tf.keras.layers.Input(shape=([1, 2, 2, 2]))
in0Thr62886 = tf.keras.layers.Input(shape=([1, 1, 1, 2]))

Max91389 = keras.layers.Maximum(name = 'Max91389', )([in0Max91389,in1Max91389])
Res17731 = keras.layers.Reshape((1, 2, 4), name = 'Res17731', )(Max91389)
PRe85455 = keras.layers.PReLU(name = 'PRe85455', )(Res17731)
Res85253 = keras.layers.Reshape((1, 2, 4, 1), name = 'Res85253', )(PRe85455)
Zer83299 = keras.layers.ZeroPadding3D(padding=((2, 0), (1, 0), (1, 0)), name = 'Zer83299', )(Res85253)
Thr62886 = keras.layers.ThresholdedReLU(theta=9.017791704615343, name = 'Thr62886', input_shape=(1, 1, 1, 2))(in0Thr62886)
Res28761 = keras.layers.Reshape((1, 1, 2), name = 'Res28761', )(Thr62886)
Res66814 = keras.layers.Reshape((1, 2), name = 'Res66814', )(Res28761)
Max5333 = keras.layers.MaxPool1D(pool_size=(1), strides=(3), padding='same', name = 'Max5333', )(Res66814)
Res55446 = keras.layers.Reshape((1, 2, 1), name = 'Res55446', )(Max5333)
Glo74650 = keras.layers.GlobalMaxPool2D(name = 'Glo74650', )(Res55446)
Res93751 = keras.layers.Reshape((1, 1), name = 'Res93751', )(Glo74650)
Res37934 = keras.layers.Reshape((1, 1, 1), name = 'Res37934', )(Res93751)
Res64284 = keras.layers.Reshape((1, 1, 1, 1), name = 'Res64284', )(Res37934)
Zer67560 = keras.layers.ZeroPadding3D(padding=((1, 1), (1, 1), (1, 1)), name = 'Zer67560', )(Res64284)
Zer51434 = keras.layers.ZeroPadding3D(padding=((0, 0), (0, 0), (2, 0)), name = 'Zer51434', )(Zer67560)
Add33526 = keras.layers.Add(name = 'Add33526', )([Zer83299,Zer51434])
model = tf.keras.models.Model(inputs=[in0Max91389,in1Max91389,in0Thr62886], outputs=Add33526)
w = model.get_layer('PRe85455').get_weights() 
w[0] = np.array([[[0.5964, 0.0038, 0.2194, 0.7811], [0.6695, 0.297, 0.9581, 0.6315]]])
model.get_layer('PRe85455').set_weights(w) 
in0Max91389 = tf.constant([[[[[0.2858, 0.9227], [0.4065, 0.6616]], [[0.8507, 0.8176], [0.2869, 0.009]]]]])
in1Max91389 = tf.constant([[[[[0.7232, 0.6295], [0.4401, 0.34]], [[0.1384, 0.1646], [0.5919, 0.8968]]]]])
in0Thr62886 = tf.constant([[[[[0.8557, 0.507]]]]])
print (np.array2string(model.predict([in0Max91389,in1Max91389,in0Thr62886],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Add33526.png')

LMax91389 = maximum_layer([[[[[[0.2858, 0.9227], [0.4065, 0.6616]], [[0.8507, 0.8176], [0.2869, 0.009]]]]], [[[[[0.7232, 0.6295], [0.4401, 0.34]], [[0.1384, 0.1646], [0.5919, 0.8968]]]]]], Max91389), 
LRes17731 = reshape_layer(Max91389, [1, 2, 4], Res17731), 
LPRe85455 = prelu_layer(Res17731, [[[0.5964, 0.0038, 0.2194, 0.7811], [0.6695, 0.297, 0.9581, 0.6315]]], PRe85455), 
LRes85253 = reshape_layer(PRe85455, [1, 2, 4, 1], Res85253), 
LZer83299 = zero_padding3D_layer(Res85253, 2, 0, 1, 0, 1, 0, Zer83299), 
LThr62886 = thresholded_relu_layer([[[[[0.8557, 0.507]]]]], 9.017791704615343, Thr62886), 
LRes28761 = reshape_layer(Thr62886, [1, 1, 2], Res28761), 
LRes66814 = reshape_layer(Res28761, [1, 2], Res66814), 
LMax5333 = max_pool1D_layer(Res66814, 1, 3, true, Max5333), 
LRes55446 = reshape_layer(Max5333, [1, 2, 1], Res55446), 
LGlo74650 = global_max_pool2D_layer(Res55446, Glo74650), 
LRes93751 = reshape_layer(Glo74650, [1, 1], Res93751), 
LRes37934 = reshape_layer(Res93751, [1, 1, 1], Res37934), 
LRes64284 = reshape_layer(Res37934, [1, 1, 1, 1], Res64284), 
LZer67560 = zero_padding3D_layer(Res64284, 1, 1, 1, 1, 1, 1, Zer67560), 
LZer51434 = zero_padding3D_layer(Zer67560, 0, 0, 0, 0, 2, 0, Zer51434), 
LAdd33526 = add_layer([Zer83299,Zer51434], Add33526), 
exec_layers([LMax91389,LRes17731,LPRe85455,LRes85253,LZer83299,LThr62886,LRes28761,LRes66814,LMax5333,LRes55446,LGlo74650,LRes93751,LRes37934,LRes64284,LZer67560,LZer51434,LAdd33526],["Max91389","Res17731","PRe85455","Res85253","Zer83299","Thr62886","Res28761","Res66814","Max5333","Res55446","Glo74650","Res93751","Res37934","Res64284","Zer67560","Zer51434","Add33526"],Add33526,"Add33526")

Actual (Unparsed

Expected (Unparsed): [[[[[0],[0],[0],[0],[0]],[[0],[0],[0],[0],[0]],[[0],[0],[0],[0],[0]]],[[[0],[0],[0],[0],[0]],[[0],[0],[0],[0],[0]],[[0],[0],[0],[0],[0]]],[[[0],[0],[0],[0],[0]],[[0],[0.7232],[0.9227],[0.4401],[0.6616]],[[0],[0.8507],[0.8176],[0.5919],[0.8968]]]]]

Actual:   [[[[[0], [0], [0], [0], [0]], [[0], [0], [0], [0], [0]], [[0], [0], [0], [0], [0]]], [[[0], [0], [0], [0], [0]], [[0], [0], [0], [0], [0]], [[0], [0], [0], [0], [0]]], [[[0], [0], [0], [0], [0]], [[0], [0.7232], [0.9227], [0.4401], [0.6616]], [[0], [0.8507], [0.8176], [0.5919], [0.8968]]]]]

Expected: [[[[[0], [0], [0], [0], [0]], [[0], [0], [0], [0], [0]], [[0], [0], [0], [0], [0]]], [[[0], [0], [0], [0], [0]], [[0], [0], [0], [0], [0]], [[0], [0], [0], [0], [0]]], [[[0], [0], [0], [0], [0]], [[0], [0.7232], [0.9227], [0.4401], [0.6616]], [[0], [0.8507], [0.8176], [0.5919], [0.8968]]]]]