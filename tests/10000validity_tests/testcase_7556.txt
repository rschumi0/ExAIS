import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Sep58626 = tf.keras.layers.Input(shape=([1, 2, 1]))
in0Glo76791 = tf.keras.layers.Input(shape=([2, 2, 2, 2]))
in0Con29194 = tf.keras.layers.Input(shape=([1, 7]))

Sep58626 = keras.layers.SeparableConv2D(4, (1, 1),strides=(1, 1), padding='valid', name = 'Sep58626', )(in0Sep58626)
Res76349 = keras.layers.Reshape((1, 8), name = 'Res76349', )(Sep58626)
Glo76791 = keras.layers.GlobalMaxPool3D(name = 'Glo76791', )(in0Glo76791)
Res86612 = keras.layers.Reshape((2, 1), name = 'Res86612', )(Glo76791)
Cro72352 = keras.layers.Cropping1D(cropping=((1, 0)), name = 'Cro72352', )(Res86612)
Con29194 = keras.layers.Concatenate(axis=2, name = 'Con29194', )([Cro72352,in0Con29194])
Min66722 = keras.layers.Minimum(name = 'Min66722', )([Res76349,Con29194])
model = tf.keras.models.Model(inputs=[in0Sep58626,in0Glo76791,in0Con29194], outputs=Min66722)
w = model.get_layer('Sep58626').get_weights() 
w[0] = np.array([[[[0.5367]]]])
w[1] = np.array([[[[0.7324, 0.0967, 0.7395, 0.97]]]])
w[2] = np.array([0, 0, 0, 0])
model.get_layer('Sep58626').set_weights(w) 
in0Sep58626 = tf.constant([[[[0.6022], [0.8188]]]])
in0Glo76791 = tf.constant([[[[[1.1312, 1.183], [1.4945, 1.47]], [[1.119, 1.6349], [1.4966, 1.7235]]], [[[1.1967, 1.3952], [1.5358, 1.5998]], [[1.8868, 1.1987], [1.9863, 1.8292]]]]])
in0Con29194 = tf.constant([[[0.2592, 0.8705, 0.4065, 0.8938, 0.0411, 0.7855, 0.2074]]])
print (np.array2string(model.predict([in0Sep58626,in0Glo76791,in0Con29194],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Min66722.png')

LSep58626 = separable_conv2D_layer([[[[0.6022], [0.8188]]]], 1, 1,[[[[[0.5367]]]],[[[[0.7324, 0.0967, 0.7395, 0.97]]]]],[0, 0, 0, 0], 1, 1, false, Sep58626), 
LRes76349 = reshape_layer(Sep58626, [1, 8], Res76349), 
LGlo76791 = global_max_pool3D_layer([[[[[1.1312, 1.183], [1.4945, 1.47]], [[1.119, 1.6349], [1.4966, 1.7235]]], [[[1.1967, 1.3952], [1.5358, 1.5998]], [[1.8868, 1.1987], [1.9863, 1.8292]]]]], Glo76791), 
LRes86612 = reshape_layer(Glo76791, [2, 1], Res86612), 
LCro72352 = cropping1D_layer(Res86612, 1, 0, Cro72352), 
LCon29194 = concatenate_layer([Cro72352,[[[0.2592, 0.8705, 0.4065, 0.8938, 0.0411, 0.7855, 0.2074]]]], 2, Con29194), 
LMin66722 = minimum_layer([Res76349,Con29194], Min66722), 
exec_layers([LSep58626,LRes76349,LGlo76791,LRes86612,LCro72352,LCon29194,LMin66722],["Sep58626","Res76349","Glo76791","Res86612","Cro72352","Con29194","Min66722"],Min66722,"Min66722")

Actual (Unparsed): [[[0.2367122, 0.0312535, 0.2390069, 0.3135047, 0.3218531, 0.0411000, 0.3249732, 0.2074000]]]

Expected (Unparsed): [[[0.23671222197599998,0.03125351155799999,0.23900694722999996,0.31350471779999994,0.321853150704,0.0411,0.32497324542,0.2074]]]

Actual:   [[[0.2368, 0.0313, 0.2391, 0.3136, 0.3219, 0.0411, 0.325, 0.2074]]]

Expected: [[[0.2368, 0.0313, 0.2391, 0.3136, 0.3219, 0.0411, 0.325, 0.2074]]]