import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Max60747 = tf.keras.layers.Input(shape=([1, 1]))
in1Max60747 = tf.keras.layers.Input(shape=([1, 1]))

Max60747 = keras.layers.Maximum(name = 'Max60747', )([in0Max60747,in1Max60747])
Res44495 = keras.layers.Reshape((1, 1, 1), name = 'Res44495', )(Max60747)
Res16732 = keras.layers.Reshape((1, 1, 1, 1), name = 'Res16732', )(Res44495)
Up_64983 = keras.layers.UpSampling3D(size=(2, 1, 1), name = 'Up_64983', )(Res16732)
Mas80152 = keras.layers.Masking(mask_value=2, name = 'Mas80152', )(Up_64983)
model = tf.keras.models.Model(inputs=[in0Max60747,in1Max60747], outputs=Mas80152)
in0Max60747 = tf.constant([[[0.84]]])
in1Max60747 = tf.constant([[[0.3942]]])
print (np.array2string(model.predict([in0Max60747,in1Max60747],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Mas80152.png')

LMax60747 = maximum_layer([[[[0.84]]], [[[0.3942]]]], Max60747), 
LRes44495 = reshape_layer(Max60747, [1, 1, 1], Res44495), 
LRes16732 = reshape_layer(Res44495, [1, 1, 1, 1], Res16732), 
LUp_64983 = up_sampling3D_layer(Res16732, 2, 1, 1, Up_64983), 
LMas80152 = masking_layer(Up_64983, 2, Mas80152), 
exec_layers([LMax60747,LRes44495,LRes16732,LUp_64983,LMas80152],["Max60747","Res44495","Res16732","Up_64983","Mas80152"],Mas80152,"Mas80152")

Actual (Unparsed): [[[[[0.8400000]]], [[[0.8400000]]]]]

Expected (Unparsed): [[[[[0.84]]],[[[0.84]]]]]

Actual:   [[[[[0.84]]], [[[0.84]]]]]

Expected: [[[[[0.84]]], [[[0.84]]]]]