import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Max7759 = tf.keras.layers.Input(shape=([1, 2]))
in1Max7759 = tf.keras.layers.Input(shape=([1, 2]))

Max7759 = keras.layers.Maximum(name = 'Max7759', )([in0Max7759,in1Max7759])
Thr67015 = keras.layers.ThresholdedReLU(theta=1.5359251227058597, name = 'Thr67015', )(Max7759)
model = tf.keras.models.Model(inputs=[in0Max7759,in1Max7759], outputs=Thr67015)
in0Max7759 = tf.constant([[[0.4615, 0.4254]]])
in1Max7759 = tf.constant([[[0.0446, 0.0584]]])
print (np.array2string(model.predict([in0Max7759,in1Max7759],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Thr67015.png')

LMax7759 = maximum_layer([[[[0.4615, 0.4254]]], [[[0.0446, 0.0584]]]], Max7759), 
LThr67015 = thresholded_relu_layer(Max7759, 1.5359251227058597, Thr67015), 
exec_layers([LMax7759,LThr67015],["Max7759","Thr67015"],Thr67015,"Thr67015")

Actual (Unparsed): [[[0.0000000, 0.0000000]]]

Expected (Unparsed): [[[0,0]]]

Actual:   [[[0, 0]]]

Expected: [[[0, 0]]]