import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Sub71622 = tf.keras.layers.Input(shape=([3, 3, 3, 3]))
in1Sub71622 = tf.keras.layers.Input(shape=([3, 3, 3, 3]))
in0Max10225 = tf.keras.layers.Input(shape=([2, 2, 1]))
in1Max10225 = tf.keras.layers.Input(shape=([2, 2, 1]))
in0Con19268 = tf.keras.layers.Input(shape=([12]))
in0Fla56658 = tf.keras.layers.Input(shape=([4, 4]))
in0Con60661 = tf.keras.layers.Input(shape=([65]))

Sub71622 = keras.layers.Subtract(name = 'Sub71622', )([in0Sub71622,in1Sub71622])
Res76722 = keras.layers.Reshape((3, 3, 9), name = 'Res76722', )(Sub71622)
Res21285 = keras.layers.Reshape((3, 27), name = 'Res21285', )(Res76722)
Fla79406 = keras.layers.Flatten(name = 'Fla79406', )(Res21285)
Max10225 = keras.layers.Maximum(name = 'Max10225', )([in0Max10225,in1Max10225])
Res13144 = keras.layers.Reshape((2, 2), name = 'Res13144', )(Max10225)
Fla95649 = keras.layers.Flatten(name = 'Fla95649', )(Res13144)
Con19268 = keras.layers.Concatenate(axis=1, name = 'Con19268', )([Fla95649,in0Con19268])
Fla56658 = keras.layers.Flatten(name = 'Fla56658', )(in0Fla56658)
ELU20667 = keras.layers.ELU(alpha=9.575487894249544, name = 'ELU20667', )(Fla56658)
Add51185 = keras.layers.Add(name = 'Add51185', )([Con19268,ELU20667])
Con60661 = keras.layers.Concatenate(axis=1, name = 'Con60661', )([Add51185,in0Con60661])
Sub77466 = keras.layers.Subtract(name = 'Sub77466', )([Fla79406,Con60661])
model = tf.keras.models.Model(inputs=[in0Sub71622,in1Sub71622,in0Max10225,in1Max10225,in0Con19268,in0Fla56658,in0Con60661], outputs=Sub77466)
in0Sub71622 = tf.constant([[[[[0.7587, 0.0052, 0.2441], [0.814, 0.5521, 0.8403], [0.9621, 0.2096, 0.1148]], [[0.4072, 0.7055, 0.0059], [0.2481, 0.2189, 0.5406], [0.846, 0.7509, 0.2451]], [[0.5206, 0.7678, 0.4499], [0.2382, 0.7295, 0.39], [0.3601, 0.091, 0.3263]]], [[[0.8032, 0.6376, 0.2254], [0.3187, 0.8513, 0.1337], [0.2012, 0.0911, 0.4389]], [[0.044, 0.7038, 0.0288], [0.7421, 0.3528, 0.82], [0.9337, 0.7103, 0.5216]], [[0.0431, 0.3132, 0.0486], [0.141, 0.7639, 0.0339], [0.9475, 0.0724, 0.0953]]], [[[0.2845, 0.1889, 0.9441], [0.7588, 0.2631, 0.8956], [0.7314, 0.4138, 0.5192]], [[0.1184, 0.5533, 0.2529], [0.4146, 0.6561, 0.7461], [0.9034, 0.7453, 0.9904]], [[0.7383, 0.6779, 0.1616], [0.9835, 0.2425, 0.9982], [0.6656, 0.0349, 0.8065]]]]])
in1Sub71622 = tf.constant([[[[[0.3808, 0.122, 0.7226], [0.8192, 0.716, 0.4218], [0.5636, 0.6556, 0.7]], [[0.6599, 0.4219, 0.7622], [0.186, 0.452, 0.2626], [0.1348, 0.9071, 0.3009]], [[0.4077, 0.8194, 0.4982], [0.7472, 0.1818, 0.7815], [0.9879, 0.8918, 0.8545]]], [[[0.7286, 0.9717, 0.7585], [0.0826, 0.2502, 0.4846], [0.883, 0.6365, 0.9389]], [[0.1896, 0.4609, 0.0523], [0.9998, 0.8733, 0.3615], [0.9961, 0.2179, 0.398]], [[0.3271, 0.5473, 0.0557], [0.1967, 0.7155, 0.3135], [0.0849, 0.1176, 0.214]]], [[[0.2734, 0.9126, 0.9279], [0.0577, 0.5129, 0.2632], [0.0643, 0.4174, 0.5645]], [[0.8951, 0.2859, 0.787], [0.8916, 0.5908, 0.7272], [0.3983, 0.1698, 0.5432]], [[0.4752, 0.9171, 0.4053], [0.0831, 0.2021, 0.9337], [0.6093, 0.8366, 0.5744]]]]])
in0Max10225 = tf.constant([[[[0.0514], [0.6957]], [[0.0873], [0.127]]]])
in1Max10225 = tf.constant([[[[0.6976], [0.5077]], [[0.3267], [0.0437]]]])
in0Con19268 = tf.constant([[0.0785, 0.6947, 0.4938, 0.5253, 0.4418, 0.6917, 0.6606, 0.7575, 0.7768, 0.7349, 0.0528, 0.676]])
in0Fla56658 = tf.constant([[[1.1333, 1.396, 1.7204, 1.8176], [1.5247, 1.5668, 1.4922, 1.0757], [1.3493, 1.4987, 1.0334, 1.9518], [1.8614, 1.0878, 1.8833, 1.262]]])
in0Con60661 = tf.constant([[0.0072, 0.446, 0.9892, 0.0938, 0.6862, 0.263, 0.7372, 0.3166, 0.9097, 0.8379, 0.0342, 0.3142, 0.547, 0.9534, 0.6895, 0.3139, 0.4305, 0.5615, 0.2225, 0.6172, 0.9055, 0.4002, 0.7436, 0.7702, 0.378, 0.5901, 0.7456, 0.8045, 0.9474, 0.3175, 0.0092, 0.2578, 0.201, 0.488, 0.462, 0.7344, 0.7766, 0.8042, 0.4912, 0.0922, 0.3503, 0.0606, 0.9097, 0.9544, 0.2967, 0.5777, 0.5026, 0.1356, 0.3856, 0.6034, 0.8378, 0.7452, 0.5282, 0.1989, 0.8167, 0.1844, 0.7685, 0.596, 0.2615, 0.9879, 0.4249, 0.2617, 0.6874, 0.4803, 0.5322]])
print (np.array2string(model.predict([in0Sub71622,in1Sub71622,in0Max10225,in1Max10225,in0Con19268,in0Fla56658,in0Con60661],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Sub77466.png')

LSub71622 = subtract_layer([[[[[0.7587, 0.0052, 0.2441], [0.814, 0.5521, 0.8403], [0.9621, 0.2096, 0.1148]], [[0.4072, 0.7055, 0.0059], [0.2481, 0.2189, 0.5406], [0.846, 0.7509, 0.2451]], [[0.5206, 0.7678, 0.4499], [0.2382, 0.7295, 0.39], [0.3601, 0.091, 0.3263]]], [[[0.8032, 0.6376, 0.2254], [0.3187, 0.8513, 0.1337], [0.2012, 0.0911, 0.4389]], [[0.044, 0.7038, 0.0288], [0.7421, 0.3528, 0.82], [0.9337, 0.7103, 0.5216]], [[0.0431, 0.3132, 0.0486], [0.141, 0.7639, 0.0339], [0.9475, 0.0724, 0.0953]]], [[[0.2845, 0.1889, 0.9441], [0.7588, 0.2631, 0.8956], [0.7314, 0.4138, 0.5192]], [[0.1184, 0.5533, 0.2529], [0.4146, 0.6561, 0.7461], [0.9034, 0.7453, 0.9904]], [[0.7383, 0.6779, 0.1616], [0.9835, 0.2425, 0.9982], [0.6656, 0.0349, 0.8065]]]]], [[[[[0.3808, 0.122, 0.7226], [0.8192, 0.716, 0.4218], [0.5636, 0.6556, 0.7]], [[0.6599, 0.4219, 0.7622], [0.186, 0.452, 0.2626], [0.1348, 0.9071, 0.3009]], [[0.4077, 0.8194, 0.4982], [0.7472, 0.1818, 0.7815], [0.9879, 0.8918, 0.8545]]], [[[0.7286, 0.9717, 0.7585], [0.0826, 0.2502, 0.4846], [0.883, 0.6365, 0.9389]], [[0.1896, 0.4609, 0.0523], [0.9998, 0.8733, 0.3615], [0.9961, 0.2179, 0.398]], [[0.3271, 0.5473, 0.0557], [0.1967, 0.7155, 0.3135], [0.0849, 0.1176, 0.214]]], [[[0.2734, 0.9126, 0.9279], [0.0577, 0.5129, 0.2632], [0.0643, 0.4174, 0.5645]], [[0.8951, 0.2859, 0.787], [0.8916, 0.5908, 0.7272], [0.3983, 0.1698, 0.5432]], [[0.4752, 0.9171, 0.4053], [0.0831, 0.2021, 0.9337], [0.6093, 0.8366, 0.5744]]]]], Sub71622), 
LRes76722 = reshape_layer(Sub71622, [3, 3, 9], Res76722), 
LRes21285 = reshape_layer(Res76722, [3, 27], Res21285), 
LFla79406 = flatten_layer(Res21285, Fla79406), 
LMax10225 = maximum_layer([[[[[0.0514], [0.6957]], [[0.0873], [0.127]]]], [[[[0.6976], [0.5077]], [[0.3267], [0.0437]]]]], Max10225), 
LRes13144 = reshape_layer(Max10225, [2, 2], Res13144), 
LFla95649 = flatten_layer(Res13144, Fla95649), 
LCon19268 = concatenate_layer([Fla95649,[[0.0785, 0.6947, 0.4938, 0.5253, 0.4418, 0.6917, 0.6606, 0.7575, 0.7768, 0.7349, 0.0528, 0.676]]], 1, Con19268), 
LFla56658 = flatten_layer([[[1.1333, 1.396, 1.7204, 1.8176], [1.5247, 1.5668, 1.4922, 1.0757], [1.3493, 1.4987, 1.0334, 1.9518], [1.8614, 1.0878, 1.8833, 1.262]]], Fla56658), 
LELU20667 = elu_layer(Fla56658, 9.575487894249544, ELU20667), 
LAdd51185 = add_layer([Con19268,ELU20667], Add51185), 
LCon60661 = concatenate_layer([Add51185,[[0.0072, 0.446, 0.9892, 0.0938, 0.6862, 0.263, 0.7372, 0.3166, 0.9097, 0.8379, 0.0342, 0.3142, 0.547, 0.9534, 0.6895, 0.3139, 0.4305, 0.5615, 0.2225, 0.6172, 0.9055, 0.4002, 0.7436, 0.7702, 0.378, 0.5901, 0.7456, 0.8045, 0.9474, 0.3175, 0.0092, 0.2578, 0.201, 0.488, 0.462, 0.7344, 0.7766, 0.8042, 0.4912, 0.0922, 0.3503, 0.0606, 0.9097, 0.9544, 0.2967, 0.5777, 0.5026, 0.1356, 0.3856, 0.6034, 0.8378, 0.7452, 0.5282, 0.1989, 0.8167, 0.1844, 0.7685, 0.596, 0.2615, 0.9879, 0.4249, 0.2617, 0.6874, 0.4803, 0.5322]]], 1, Con60661), 
LSub77466 = subtract_layer(Fla79406,Con60661, Sub77466), 
exec_layers([LSub71622,LRes76722,LRes21285,LFla79406,LMax10225,LRes13144,LFla95649,LCon19268,LFla56658,LELU20667,LAdd51185,LCon60661,LSub77466],["Sub71622","Res76722","Res21285","Fla79406","Max10225","Res13144","Fla95649","Con19268","Fla56658","ELU20667","Add51185","Con60661","Sub77466"],Sub77466,"Sub77466")

Actual (Unparsed): [[-1.4529999, -2.2085000, -2.5256000, -1.9498000, -1.7671001, -1.8430000, -1.5875000, -2.0470001, -2.3763000, -2.4431000, -1.4104001, -3.4656000, -2.5761000, -2.0558000, -1.6580999, -1.2268000, -0.1634001, -0.5018000, -0.8763000, -0.1454000, -0.7345000, -0.7720000, -0.1895000, -0.7081000, -1.5375000, -1.6387000, -0.5624000, -0.2396000, -0.8811000, -1.4865000, -0.4534000, 0.2872000, -0.7814000, -1.2433000, -0.7679000, -1.1172000, -1.0511000, -0.1573000, -0.7671000, -1.0279000, -0.8985000, -0.1316000, -0.8080000, -0.3120999, -0.8238000, -0.6015000, -0.2433000, -0.2649000, -0.2567000, -0.4396000, -0.7416000, 0.1282000, -0.8218000, -0.9229000, -0.4801000, -0.8159000, -0.3341000, 0.6405000, -1.1595000, -0.3220000, 0.3704000, -0.5813000, -0.5479000, -0.9123000, -0.1182000, -1.1375000, -1.3148000, -0.6799000, -0.5092999, 0.3062000, -0.2412000, 0.2628000, -0.5053999, -0.8352000, -0.5052000, -0.0875000, -0.3845000, -0.1972000, -0.6311000, -1.2820000, -0.3001000]]

Expected (Unparsed): [[-1.4529999999999998,-2.2085,-2.5256,-1.9498000000000002,-1.7671,-1.8429999999999997,-1.5875,-2.0469999999999997,-2.3762999999999996,-2.4431,-1.4103999999999999,-3.4656,-2.5761,-2.0558,-1.6581,-1.2268000000000003,-0.16340000000000002,-0.5018,-0.8763000000000001,-0.14539999999999997,-0.7344999999999999,-0.772,-0.1894999999999999,-0.7081,-1.5375,-1.6387,-0.5624,-0.23959999999999998,-0.8811000000000001,-1.4865,-0.4534,0.28719999999999996,-0.7814,-1.2433,-0.7679,-1.1172,-1.0511,-0.1573,-0.7671,-1.0279,-0.8985,-0.1316,-0.808,-0.31209999999999993,-0.8238000000000001,-0.6015,-0.24330000000000002,-0.26489999999999997,-0.25670000000000004,-0.4396,-0.7416,0.12819999999999998,-0.8218,-0.9229,-0.4801,-0.8159000000000001,-0.3340999999999999,0.6405000000000001,-1.1595,-0.32200000000000006,0.3704,-0.5812999999999999,-0.5479,-0.9122999999999999,-0.11819999999999997,-1.1375000000000002,-1.3148,-0.6799,-0.5093,0.3062,-0.24120000000000008,0.2627999999999999,-0.5054000000000001,-0.8352,-0.5052,-0.08749999999999991,-0.3845,-0.1972,-0.6311,-1.282,-0.30010000000000003]]

Actual:   [[-1.4529, -2.2085, -2.5256, -1.9498, -1.7671, -1.843, -1.5875, -2.047, -2.3763, -2.4431, -1.4104, -3.4656, -2.5761, -2.0558, -1.658, -1.2268, -0.1634, -0.5018, -0.8763, -0.1454, -0.7345, -0.772, -0.1895, -0.7081, -1.5375, -1.6387, -0.5624, -0.2396, -0.8811, -1.4865, -0.4534, 0.2872, -0.7814, -1.2433, -0.7679, -1.1172, -1.0511, -0.1573, -0.7671, -1.0279, -0.8985, -0.1316, -0.808, -0.312, -0.8238, -0.6015, -0.2433, -0.2649, -0.2567, -0.4396, -0.7416, 0.1282, -0.8218, -0.9229, -0.4801, -0.8159, -0.3341, 0.6405, -1.1595, -0.322, 0.3704, -0.5813, -0.5479, -0.9123, -0.1182, -1.1375, -1.3148, -0.6799, -0.5092, 0.3062, -0.2412, 0.2628, -0.5053, -0.8352, -0.5052, -0.0875, -0.3845, -0.1972, -0.6311, -1.282, -0.3001]]

Expected: [[-1.4529, -2.2085, -2.5256, -1.9498, -1.7671, -1.8429, -1.5875, -2.0469, -2.3762, -2.4431, -1.4103, -3.4656, -2.5761, -2.0558, -1.6581, -1.2268, -0.1634, -0.5018, -0.8763, -0.1453, -0.7344, -0.772, -0.1894, -0.7081, -1.5375, -1.6387, -0.5624, -0.2395, -0.8811, -1.4865, -0.4534, 0.2872, -0.7814, -1.2433, -0.7679, -1.1172, -1.0511, -0.1573, -0.7671, -1.0279, -0.8985, -0.1316, -0.808, -0.312, -0.8238, -0.6015, -0.2433, -0.2648, -0.2567, -0.4396, -0.7416, 0.1282, -0.8218, -0.9229, -0.4801, -0.8159, -0.334, 0.6406, -1.1595, -0.322, 0.3704, -0.5812, -0.5479, -0.9122, -0.1181, -1.1375, -1.3148, -0.6799, -0.5093, 0.3062, -0.2412, 0.2628, -0.5054, -0.8352, -0.5052, -0.0874, -0.3845, -0.1972, -0.6311, -1.282, -0.3001]]