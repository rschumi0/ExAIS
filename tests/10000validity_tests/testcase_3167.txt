import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Dot79399 = tf.keras.layers.Input(shape=([3]))
in1Dot79399 = tf.keras.layers.Input(shape=([3]))
in0Max43075 = tf.keras.layers.Input(shape=([2, 1, 2, 1]))
in1Max43075 = tf.keras.layers.Input(shape=([2, 1, 2, 1]))
in0Lay58023 = tf.keras.layers.Input(shape=([1, 1, 4]))
in0Con70562 = tf.keras.layers.Input(shape=([3]))
in0Con17680 = tf.keras.layers.Input(shape=([4, 62]))
in0Min29006 = tf.keras.layers.Input(shape=([2, 1]))
in1Min29006 = tf.keras.layers.Input(shape=([2, 1]))
in0Con33644 = tf.keras.layers.Input(shape=([2, 7, 3, 2]))
in0Con79834 = tf.keras.layers.Input(shape=([1, 2, 2, 2]))

Dot79399 = keras.layers.Dot(axes=(1, 1), name = 'Dot79399', )([in0Dot79399,in1Dot79399])
Res62087 = keras.layers.Reshape((1, 1), name = 'Res62087', )(Dot79399)
Res63748 = keras.layers.Reshape((1, 1, 1), name = 'Res63748', )(Res62087)
Res62902 = keras.layers.Reshape((1, 1, 1, 1), name = 'Res62902', )(Res63748)
Zer21720 = keras.layers.ZeroPadding3D(padding=((1, 0), (0, 0), (1, 0)), name = 'Zer21720', )(Res62902)
Max43075 = keras.layers.Maximum(name = 'Max43075', )([in0Max43075,in1Max43075])
Sub4463 = keras.layers.Subtract(name = 'Sub4463', )([Zer21720,Max43075])
Res49014 = keras.layers.Reshape((2, 1, 2), name = 'Res49014', )(Sub4463)
Res85748 = keras.layers.Reshape((2, 2), name = 'Res85748', )(Res49014)
Fla8046 = keras.layers.Flatten(name = 'Fla8046', )(Res85748)
Lay58023 = keras.layers.LayerNormalization(axis=1, epsilon=1.1817098624568125, name = 'Lay58023', )(in0Lay58023)
Res29125 = keras.layers.Reshape((1, 4), name = 'Res29125', )(Lay58023)
LST44436 = keras.layers.LSTM(1,recurrent_activation='sigmoid', name = 'LST44436', )(Res29125)
Lea27484 = keras.layers.LeakyReLU(alpha=7.260658872497777, name = 'Lea27484', )(LST44436)
Con70562 = keras.layers.Concatenate(axis=1, name = 'Con70562', )([Lea27484,in0Con70562])
Max6006 = keras.layers.Maximum(name = 'Max6006', )([Fla8046,Con70562])
Res53257 = keras.layers.Reshape((4, 1), name = 'Res53257', )(Max6006)
Con17680 = keras.layers.Concatenate(axis=2, name = 'Con17680', )([Res53257,in0Con17680])
Min29006 = keras.layers.Minimum(name = 'Min29006', )([in0Min29006,in1Min29006])
Res27180 = keras.layers.Reshape((2, 1, 1), name = 'Res27180', )(Min29006)
Res71852 = keras.layers.Reshape((2, 1, 1, 1), name = 'Res71852', )(Res27180)
Zer65752 = keras.layers.ZeroPadding3D(padding=((0, 0), (6, 0), (2, 0)), name = 'Zer65752', )(Res71852)
Con33644 = keras.layers.Concatenate(axis=4, name = 'Con33644', )([Zer65752,in0Con33644])
Con79834 = keras.layers.Conv3DTranspose(3, (1, 2, 2),strides=(1, 2, 1), padding='same', name = 'Con79834', )(in0Con79834)
Zer89016 = keras.layers.ZeroPadding3D(padding=((1, 0), (3, 0), (1, 0)), name = 'Zer89016', )(Con79834)
Ave34798 = keras.layers.Average(name = 'Ave34798', )([Con33644,Zer89016])
Res31149 = keras.layers.Reshape((2, 7, 9), name = 'Res31149', )(Ave34798)
Res35379 = keras.layers.Reshape((2, 63), name = 'Res35379', )(Res31149)
Dot11105 = keras.layers.Dot(axes=(2, 2), name = 'Dot11105', )([Con17680,Res35379])
model = tf.keras.models.Model(inputs=[in0Dot79399,in1Dot79399,in0Max43075,in1Max43075,in0Lay58023,in0Con70562,in0Con17680,in0Min29006,in1Min29006,in0Con33644,in0Con79834], outputs=Dot11105)
w = model.get_layer('LST44436').get_weights() 
w[0] = np.array([[8, 1, 3, 1], [3, 3, 4, 1], [1, 7, 9, 2], [5, 6, 10, 4]])
w[1] = np.array([[1, 5, 4, 4]])
w[2] = np.array([3, 5, 9, 3])
model.get_layer('LST44436').set_weights(w) 
w = model.get_layer('Con79834').get_weights() 
w[0] = np.array([[[[[0.3163, 0.0632], [0.3705, 0.0596], [0.8122, 0.3045]], [[0.1977, 0.7443], [0.9972, 0.2861], [0.9156, 0.9139]]], [[[0.5223, 0.9498], [0.1057, 0.7507], [0.3136, 0.1444]], [[0.0328, 0.9091], [0.5262, 0.5169], [0.0154, 0.2103]]]]])
w[1] = np.array([0, 0, 0])
model.get_layer('Con79834').set_weights(w) 
in0Dot79399 = tf.constant([[0.7055, 0.1185, 0.4865]])
in1Dot79399 = tf.constant([[0.4002, 0.7266, 0.7646]])
in0Max43075 = tf.constant([[[[[0.4572], [0.2612]]], [[[0.1884], [0.3931]]]]])
in1Max43075 = tf.constant([[[[[0.9049], [0.9071]]], [[[0.2398], [0.6109]]]]])
in0Lay58023 = tf.constant([[[[1.8333, 1.1061, 1.9683, 1.3703]]]])
in0Con70562 = tf.constant([[0.1287, 0.551, 0.7848]])
in0Con17680 = tf.constant([[[0.011, 0.0826, 0.1735, 0.8676, 0.1528, 0.3951, 0.1077, 0.0095, 0.2718, 0.3413, 0.0794, 0.6254, 0.6664, 0.3877, 0.9641, 0.5672, 0.0528, 0.401, 0.6849, 0.718, 0.533, 0.5931, 0.6236, 0.4684, 0.9551, 0.8033, 0.6128, 0.4625, 0.9464, 0.379, 0.9746, 0.4549, 0.0896, 0.2096, 0.0256, 0.8015, 0.6815, 0.7866, 0.7033, 0.3179, 0.2655, 0.5186, 0.4853, 0.9839, 0.66, 0.911, 0.5712, 0.2452, 0.5204, 0.6366, 0.3758, 0.4703, 0.5639, 0.9695, 0.7417, 0.4577, 0.4664, 0.5315, 0.9233, 0.7552, 0.0942, 0.8105], [0.3149, 0.9533, 0.1742, 0.4481, 0.0993, 0.0474, 0.724, 0.8677, 0.4827, 0.421, 0.5679, 0.4142, 0.9416, 0.9996, 0.041, 0.8124, 0.9626, 0.6463, 0.5539, 0.4154, 0.0786, 0.9286, 0.0297, 0.4092, 0.6208, 0.9697, 0.3546, 0.8699, 0.492, 0.2181, 0.8888, 0.3276, 0.4457, 0.6181, 0.7725, 0.2789, 0.803, 0.8443, 0.2339, 0.9152, 0.2808, 0.9741, 0.3543, 0.1841, 0.6168, 0.218, 0.7797, 0.1839, 0.9773, 0.0992, 0.6801, 0.8103, 0.7115, 0.7813, 0.8535, 0.5154, 0.8775, 0.0785, 0.2486, 0.0219, 0.1056, 0.0532], [0.3337, 0.839, 0.7881, 0.002, 0.6825, 0.4723, 0.2893, 0.0645, 0.8639, 0.2848, 0.8536, 0.6505, 0.2249, 0.075, 0.1562, 0.3729, 0.4387, 0.5673, 0.9914, 0.2007, 0.7515, 0.176, 0.418, 0.0999, 0.7094, 0.6035, 0.7964, 0.5173, 0.7693, 0.0551, 0.5398, 0.6821, 0.6073, 0.1179, 0.0774, 0.8476, 0.126, 0.6361, 0.4798, 0.2763, 0.1315, 0.2398, 0.434, 0.9857, 0.4016, 0.5348, 0.7691, 0.0115, 0.4002, 0.3463, 0.5355, 0.2227, 0.2053, 0.8229, 0.7161, 0.5281, 0.312, 0.6548, 0.0101, 0.6481, 0.851, 0.1372], [0.7716, 0.4971, 0.4154, 0.3186, 0.1067, 0.6204, 0.1327, 0.0134, 0.3391, 0.0581, 0.8337, 0.0307, 0.5375, 0.4728, 0.1738, 0.5724, 0.5656, 0.371, 0.3441, 0.3879, 0.1635, 0.7697, 0.5719, 0.9389, 0.8981, 0.7199, 0.9568, 0.5211, 0.4307, 0.681, 0.3125, 0.0213, 0.441, 0.8617, 0.5935, 0.7437, 0.72, 0.2908, 0.1736, 0.5306, 0.3993, 0.5614, 0.712, 0.2241, 0.0177, 0.9067, 0.5953, 0.3684, 0.1435, 0.5045, 0.975, 0.934, 0.5702, 0.6859, 0.2342, 0.7629, 0.6797, 0.0279, 0.3101, 0.3784, 0.4299, 0.1443]]])
in0Min29006 = tf.constant([[[0.7346], [0.633]]])
in1Min29006 = tf.constant([[[0.2988], [0.5898]]])
in0Con33644 = tf.constant([[[[[0.5139, 0.6399], [0.6397, 0.7595], [0.3333, 0.7022]], [[0.8529, 0.3638], [0.8409, 0.8957], [0.4989, 0.4726]], [[0.4683, 0.3052], [0.7189, 0.0455], [0.0981, 0.6776]], [[0.3504, 0.1967], [0.5054, 0.5645], [0.4445, 0.7282]], [[0.0989, 0.6413], [0.2784, 0.894], [0.2655, 0.5288]], [[0.4964, 0.0656], [0.3465, 0.5159], [0.9926, 0.9332]], [[0.7699, 0.6835], [0.421, 0.3669], [0.1489, 0.0639]]], [[[0.7605, 0.0896], [0.2189, 0.636], [0.1961, 0.8668]], [[0.3289, 0.1499], [0.6858, 0.0071], [0.8325, 0.0064]], [[0.9753, 0.5835], [0.1265, 0.6719], [0.4926, 0.9378]], [[0.2768, 0.4011], [0.5143, 0.7068], [0.1414, 0.3604]], [[0.2251, 0.8262], [0.6469, 0.5992], [0.8108, 0.7069]], [[0.4136, 0.6967], [0.5249, 0.054], [0.2313, 0.3305]], [[0.7443, 0.6069], [0.9884, 0.457], [0.393, 0.4117]]]]])
in0Con79834 = tf.constant([[[[[0.5744, 0.0761], [0.3098, 0.2854]], [[0.6061, 0.1441], [0.2884, 0.7246]]]]])
print (np.array2string(model.predict([in0Dot79399,in1Dot79399,in0Max43075,in1Max43075,in0Lay58023,in0Con70562,in0Con17680,in0Min29006,in1Min29006,in0Con33644,in0Con79834],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Dot11105.png')

LDot79399 = dot_layer([[0.7055, 0.1185, 0.4865]], [[0.4002, 0.7266, 0.7646]], 1, 1, Dot79399), 
LRes62087 = reshape_layer(Dot79399, [1, 1], Res62087), 
LRes63748 = reshape_layer(Res62087, [1, 1, 1], Res63748), 
LRes62902 = reshape_layer(Res63748, [1, 1, 1, 1], Res62902), 
LZer21720 = zero_padding3D_layer(Res62902, 1, 0, 0, 0, 1, 0, Zer21720), 
LMax43075 = maximum_layer([[[[[[0.4572], [0.2612]]], [[[0.1884], [0.3931]]]]], [[[[[0.9049], [0.9071]]], [[[0.2398], [0.6109]]]]]], Max43075), 
LSub4463 = subtract_layer(Zer21720,Max43075, Sub4463), 
LRes49014 = reshape_layer(Sub4463, [2, 1, 2], Res49014), 
LRes85748 = reshape_layer(Res49014, [2, 2], Res85748), 
LFla8046 = flatten_layer(Res85748, Fla8046), 
LLay58023 = layer_normalization_layer([[[[1.8333, 1.1061, 1.9683, 1.3703]]]], 1, 1.1817098624568125, Lay58023), 
LRes29125 = reshape_layer(Lay58023, [1, 4], Res29125), 
LLST44436 = lstm_layer(Res29125,[[8, 1, 3, 1], [3, 3, 4, 1], [1, 7, 9, 2], [5, 6, 10, 4]],[[1, 5, 4, 4]],[3, 5, 9, 3], LST44436), 
LLea27484 = leaky_relu_layer(LST44436, 7.260658872497777, Lea27484), 
LCon70562 = concatenate_layer([Lea27484,[[0.1287, 0.551, 0.7848]]], 1, Con70562), 
LMax6006 = maximum_layer([Fla8046,Con70562], Max6006), 
LRes53257 = reshape_layer(Max6006, [4, 1], Res53257), 
LCon17680 = concatenate_layer([Res53257,[[[0.011, 0.0826, 0.1735, 0.8676, 0.1528, 0.3951, 0.1077, 0.0095, 0.2718, 0.3413, 0.0794, 0.6254, 0.6664, 0.3877, 0.9641, 0.5672, 0.0528, 0.401, 0.6849, 0.718, 0.533, 0.5931, 0.6236, 0.4684, 0.9551, 0.8033, 0.6128, 0.4625, 0.9464, 0.379, 0.9746, 0.4549, 0.0896, 0.2096, 0.0256, 0.8015, 0.6815, 0.7866, 0.7033, 0.3179, 0.2655, 0.5186, 0.4853, 0.9839, 0.66, 0.911, 0.5712, 0.2452, 0.5204, 0.6366, 0.3758, 0.4703, 0.5639, 0.9695, 0.7417, 0.4577, 0.4664, 0.5315, 0.9233, 0.7552, 0.0942, 0.8105], [0.3149, 0.9533, 0.1742, 0.4481, 0.0993, 0.0474, 0.724, 0.8677, 0.4827, 0.421, 0.5679, 0.4142, 0.9416, 0.9996, 0.041, 0.8124, 0.9626, 0.6463, 0.5539, 0.4154, 0.0786, 0.9286, 0.0297, 0.4092, 0.6208, 0.9697, 0.3546, 0.8699, 0.492, 0.2181, 0.8888, 0.3276, 0.4457, 0.6181, 0.7725, 0.2789, 0.803, 0.8443, 0.2339, 0.9152, 0.2808, 0.9741, 0.3543, 0.1841, 0.6168, 0.218, 0.7797, 0.1839, 0.9773, 0.0992, 0.6801, 0.8103, 0.7115, 0.7813, 0.8535, 0.5154, 0.8775, 0.0785, 0.2486, 0.0219, 0.1056, 0.0532], [0.3337, 0.839, 0.7881, 0.002, 0.6825, 0.4723, 0.2893, 0.0645, 0.8639, 0.2848, 0.8536, 0.6505, 0.2249, 0.075, 0.1562, 0.3729, 0.4387, 0.5673, 0.9914, 0.2007, 0.7515, 0.176, 0.418, 0.0999, 0.7094, 0.6035, 0.7964, 0.5173, 0.7693, 0.0551, 0.5398, 0.6821, 0.6073, 0.1179, 0.0774, 0.8476, 0.126, 0.6361, 0.4798, 0.2763, 0.1315, 0.2398, 0.434, 0.9857, 0.4016, 0.5348, 0.7691, 0.0115, 0.4002, 0.3463, 0.5355, 0.2227, 0.2053, 0.8229, 0.7161, 0.5281, 0.312, 0.6548, 0.0101, 0.6481, 0.851, 0.1372], [0.7716, 0.4971, 0.4154, 0.3186, 0.1067, 0.6204, 0.1327, 0.0134, 0.3391, 0.0581, 0.8337, 0.0307, 0.5375, 0.4728, 0.1738, 0.5724, 0.5656, 0.371, 0.3441, 0.3879, 0.1635, 0.7697, 0.5719, 0.9389, 0.8981, 0.7199, 0.9568, 0.5211, 0.4307, 0.681, 0.3125, 0.0213, 0.441, 0.8617, 0.5935, 0.7437, 0.72, 0.2908, 0.1736, 0.5306, 0.3993, 0.5614, 0.712, 0.2241, 0.0177, 0.9067, 0.5953, 0.3684, 0.1435, 0.5045, 0.975, 0.934, 0.5702, 0.6859, 0.2342, 0.7629, 0.6797, 0.0279, 0.3101, 0.3784, 0.4299, 0.1443]]]], 2, Con17680), 
LMin29006 = minimum_layer([[[[0.7346], [0.633]]], [[[0.2988], [0.5898]]]], Min29006), 
LRes27180 = reshape_layer(Min29006, [2, 1, 1], Res27180), 
LRes71852 = reshape_layer(Res27180, [2, 1, 1, 1], Res71852), 
LZer65752 = zero_padding3D_layer(Res71852, 0, 0, 6, 0, 2, 0, Zer65752), 
LCon33644 = concatenate_layer([Zer65752,[[[[[0.5139, 0.6399], [0.6397, 0.7595], [0.3333, 0.7022]], [[0.8529, 0.3638], [0.8409, 0.8957], [0.4989, 0.4726]], [[0.4683, 0.3052], [0.7189, 0.0455], [0.0981, 0.6776]], [[0.3504, 0.1967], [0.5054, 0.5645], [0.4445, 0.7282]], [[0.0989, 0.6413], [0.2784, 0.894], [0.2655, 0.5288]], [[0.4964, 0.0656], [0.3465, 0.5159], [0.9926, 0.9332]], [[0.7699, 0.6835], [0.421, 0.3669], [0.1489, 0.0639]]], [[[0.7605, 0.0896], [0.2189, 0.636], [0.1961, 0.8668]], [[0.3289, 0.1499], [0.6858, 0.0071], [0.8325, 0.0064]], [[0.9753, 0.5835], [0.1265, 0.6719], [0.4926, 0.9378]], [[0.2768, 0.4011], [0.5143, 0.7068], [0.1414, 0.3604]], [[0.2251, 0.8262], [0.6469, 0.5992], [0.8108, 0.7069]], [[0.4136, 0.6967], [0.5249, 0.054], [0.2313, 0.3305]], [[0.7443, 0.6069], [0.9884, 0.457], [0.393, 0.4117]]]]]], 4, Con33644), 
LCon79834 = conv3D_transpose_layer([[[[[0.5744, 0.0761], [0.3098, 0.2854]], [[0.6061, 0.1441], [0.2884, 0.7246]]]]], 1, 2, 2,[[[[[0.3163, 0.0632], [0.3705, 0.0596], [0.8122, 0.3045]], [[0.1977, 0.7443], [0.9972, 0.2861], [0.9156, 0.9139]]], [[[0.5223, 0.9498], [0.1057, 0.7507], [0.3136, 0.1444]], [[0.0328, 0.9091], [0.5262, 0.5169], [0.0154, 0.2103]]]]],[0, 0, 0], 1, 2, 1, true, Con79834), 
LZer89016 = zero_padding3D_layer(Con79834, 1, 0, 3, 0, 1, 0, Zer89016), 
LAve34798 = average_layer([Con33644,Zer89016], Ave34798), 
LRes31149 = reshape_layer(Ave34798, [2, 7, 9], Res31149), 
LRes35379 = reshape_layer(Res31149, [2, 63], Res35379), 
LDot11105 = dot_layer(Con17680,Res35379, 2, 2, Dot11105), 
exec_layers([LDot79399,LRes62087,LRes63748,LRes62902,LZer21720,LMax43075,LSub4463,LRes49014,LRes85748,LFla8046,LLay58023,LRes29125,LLST44436,LLea27484,LCon70562,LMax6006,LRes53257,LCon17680,LMin29006,LRes27180,LRes71852,LZer65752,LCon33644,LCon79834,LZer89016,LAve34798,LRes31149,LRes35379,LDot11105],["Dot79399","Res62087","Res63748","Res62902","Zer21720","Max43075","Sub4463","Res49014","Res85748","Fla8046","Lay58023","Res29125","LST44436","Lea27484","Con70562","Max6006","Res53257","Con17680","Min29006","Res27180","Res71852","Zer65752","Con33644","Con79834","Zer89016","Ave34798","Res31149","Res35379","Dot11105"],Dot11105,"Dot11105")

Actual (Unparsed): [[[5.2129424, 8.3785355], [6.6192469, 8.3612482], [4.3198303, 7.2902663], [4.9317096, 7.4305366]]]

Expected (Unparsed): [[[5.2129422650000015,8.378535464071499],[6.619246884999999,8.361248173498998],[4.319830235000001,7.2902662974779995],[4.931709560000002,7.4305365282535005]]]

Actual:   [[[5.213, 8.3786], [6.6193, 8.3613], [4.3199, 7.2903], [4.9318, 7.4306]]]

Expected: [[[5.213, 8.3786], [6.6193, 8.3613], [4.3199, 7.2903], [4.9318, 7.4306]]]