import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0GRU86243 = tf.keras.layers.Input(shape=([3, 3]))
in0Ave25108 = tf.keras.layers.Input(shape=([1, 1]))
in1Ave25108 = tf.keras.layers.Input(shape=([1, 1]))
in0Min33600 = tf.keras.layers.Input(shape=([1, 1]))
in1Min33600 = tf.keras.layers.Input(shape=([1, 1]))
in0Lea62681 = tf.keras.layers.Input(shape=([1, 2, 2, 1]))

GRU86243 = keras.layers.GRU(1,reset_after=False, recurrent_activation='sigmoid', name = 'GRU86243', )(in0GRU86243)
Res6456 = keras.layers.Reshape((1, 1), name = 'Res6456', )(GRU86243)
Res13826 = keras.layers.Reshape((1, 1, 1), name = 'Res13826', )(Res6456)
Res24272 = keras.layers.Reshape((1, 1, 1, 1), name = 'Res24272', )(Res13826)
Zer80142 = keras.layers.ZeroPadding3D(padding=((0, 0), (1, 0), (1, 0)), name = 'Zer80142', )(Res24272)
Ave25108 = keras.layers.Average(name = 'Ave25108', )([in0Ave25108,in1Ave25108])
Min33600 = keras.layers.Minimum(name = 'Min33600', )([in0Min33600,in1Min33600])
Max39043 = keras.layers.Maximum(name = 'Max39043', )([Ave25108,Min33600])
Glo6811 = keras.layers.GlobalAveragePooling1D(name = 'Glo6811', )(Max39043)
Res67622 = keras.layers.Reshape((1, 1), name = 'Res67622', )(Glo6811)
Res91851 = keras.layers.Reshape((1, 1, 1), name = 'Res91851', )(Res67622)
Res61799 = keras.layers.Reshape((1, 1, 1, 1), name = 'Res61799', )(Res91851)
Zer81890 = keras.layers.ZeroPadding3D(padding=((0, 0), (1, 0), (1, 0)), name = 'Zer81890', )(Res61799)
Lea62681 = keras.layers.LeakyReLU(alpha=3.320786607939078, name = 'Lea62681', input_shape=(1, 2, 2, 1))(in0Lea62681)
Min62265 = keras.layers.Minimum(name = 'Min62265', )([Zer81890,Lea62681])
Min74105 = keras.layers.Minimum(name = 'Min74105', )([Zer80142,Min62265])
model = tf.keras.models.Model(inputs=[in0GRU86243,in0Ave25108,in1Ave25108,in0Min33600,in1Min33600,in0Lea62681], outputs=Min74105)
w = model.get_layer('GRU86243').get_weights() 
w[0] = np.array([[2, 9, 6], [9, 6, 5], [7, 4, 10]])
w[1] = np.array([[5, 9, 6]])
w[2] = np.array([6, 6, 3])
model.get_layer('GRU86243').set_weights(w) 
in0GRU86243 = tf.constant([[[3, 9, 9], [4, 4, 7], [8, 6, 4]]])
in0Ave25108 = tf.constant([[[0.7613]]])
in1Ave25108 = tf.constant([[[0.3434]]])
in0Min33600 = tf.constant([[[0.6875]]])
in1Min33600 = tf.constant([[[0.3063]]])
in0Lea62681 = tf.constant([[[[[0.1544], [0.9118]], [[0.9508], [0.7625]]]]])
print (np.array2string(model.predict([in0GRU86243,in0Ave25108,in1Ave25108,in0Min33600,in1Min33600,in0Lea62681],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Min74105.png')

LGRU86243 = gru_layer([[[3, 9, 9], [4, 4, 7], [8, 6, 4]]],[[2, 9, 6], [9, 6, 5], [7, 4, 10]],[[5, 9, 6]],[6, 6, 3], false, GRU86243), 
LRes6456 = reshape_layer(GRU86243, [1, 1], Res6456), 
LRes13826 = reshape_layer(Res6456, [1, 1, 1], Res13826), 
LRes24272 = reshape_layer(Res13826, [1, 1, 1, 1], Res24272), 
LZer80142 = zero_padding3D_layer(Res24272, 0, 0, 1, 0, 1, 0, Zer80142), 
LAve25108 = average_layer([[[[0.7613]]], [[[0.3434]]]], Ave25108), 
LMin33600 = minimum_layer([[[[0.6875]]], [[[0.3063]]]], Min33600), 
LMax39043 = maximum_layer([Ave25108,Min33600], Max39043), 
LGlo6811 = global_average_pooling1D_layer(Max39043, Glo6811), 
LRes67622 = reshape_layer(Glo6811, [1, 1], Res67622), 
LRes91851 = reshape_layer(Res67622, [1, 1, 1], Res91851), 
LRes61799 = reshape_layer(Res91851, [1, 1, 1, 1], Res61799), 
LZer81890 = zero_padding3D_layer(Res61799, 0, 0, 1, 0, 1, 0, Zer81890), 
LLea62681 = leaky_relu_layer([[[[[0.1544], [0.9118]], [[0.9508], [0.7625]]]]], 3.320786607939078, Lea62681), 
LMin62265 = minimum_layer([Zer81890,Lea62681], Min62265), 
LMin74105 = minimum_layer([Zer80142,Min62265], Min74105), 
exec_layers([LGRU86243,LRes6456,LRes13826,LRes24272,LZer80142,LAve25108,LMin33600,LMax39043,LGlo6811,LRes67622,LRes91851,LRes61799,LZer81890,LLea62681,LMin62265,LMin74105],["GRU86243","Res6456","Res13826","Res24272","Zer80142","Ave25108","Min33600","Max39043","Glo6811","Res67622","Res91851","Res61799","Zer81890","Lea62681","Min62265","Min74105"],Min74105,"Min74105")

Actual (Unparsed): [[[[[0.0000000], [0.0000000]], [[0.0000000], [0.0000000]]]]]

Expected (Unparsed): [[[[[0],[0]],[[0],[0.0]]]]]

Actual:   [[[[[0], [0]], [[0], [0]]]]]

Expected: [[[[[0], [0]], [[0], [0]]]]]