import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Sub64758 = tf.keras.layers.Input(shape=([2, 3, 3, 2]))
in1Sub64758 = tf.keras.layers.Input(shape=([2, 3, 3, 2]))
in0Dep31755 = tf.keras.layers.Input(shape=([1, 2, 2]))
in0Con7085 = tf.keras.layers.Input(shape=([1, 3, 1]))

Sub64758 = keras.layers.Subtract(name = 'Sub64758', )([in0Sub64758,in1Sub64758])
Res84166 = keras.layers.Reshape((2, 3, 6), name = 'Res84166', )(Sub64758)
Con54689 = keras.layers.Conv2D(2, (2, 1),strides=(1, 1), padding='valid', dilation_rate=(1, 1), name = 'Con54689', )(Res84166)
Dep31755 = keras.layers.DepthwiseConv2D((1, 2),strides=(1, 1), padding='same', name = 'Dep31755', )(in0Dep31755)
Res4001 = keras.layers.Reshape((1, 4), name = 'Res4001', )(Dep31755)
Cro70744 = keras.layers.Cropping1D(cropping=((0, 0)), name = 'Cro70744', )(Res4001)
Res75975 = keras.layers.Reshape((1, 4, 1), name = 'Res75975', )(Cro70744)
Ave77380 = keras.layers.AveragePooling2D(pool_size=(1, 2), name = 'Ave77380', )(Res75975)
Zer8672 = keras.layers.ZeroPadding2D(padding=((0, 0), (1, 0)), name = 'Zer8672', )(Ave77380)
Con7085 = keras.layers.Concatenate(axis=3, name = 'Con7085', )([Zer8672,in0Con7085])
Min72231 = keras.layers.Minimum(name = 'Min72231', )([Con54689,Con7085])
model = tf.keras.models.Model(inputs=[in0Sub64758,in1Sub64758,in0Dep31755,in0Con7085], outputs=Min72231)
w = model.get_layer('Con54689').get_weights() 
w[0] = np.array([[[[0.4734, 0.1615], [0.6487, 0.677], [0.6607, 0.7803], [0.507, 0.8286], [0.1667, 0.6615], [0.4348, 0.794]]], [[[0.9375, 0.2406], [0.1266, 0.6196], [0.7612, 0.6719], [0.9189, 0.8817], [0.5068, 0.7614], [0.8162, 0.6449]]]])
w[1] = np.array([0, 0])
model.get_layer('Con54689').set_weights(w) 
w = model.get_layer('Dep31755').get_weights() 
w[0] = np.array([[[[0.4136], [0.3169]], [[0.0223], [0.9034]]]])
w[1] = np.array([0, 0])
model.get_layer('Dep31755').set_weights(w) 
in0Sub64758 = tf.constant([[[[[0.4147, 0.4432], [0.9728, 0.8912], [0.9771, 0.0385]], [[0.0617, 0.5251], [0.1901, 0.786], [0.3396, 0.506]], [[0.2892, 0.7757], [0.4896, 0.9511], [0.2919, 0.0882]]], [[[0.2974, 0.44], [0.728, 0.4742], [0.3807, 0.8784]], [[0.4271, 0.9729], [0.4504, 0.2957], [0.2145, 0.0603]], [[0.6707, 0.9373], [0.186, 0.655], [0.4014, 0.265]]]]])
in1Sub64758 = tf.constant([[[[[0.086, 0.3243], [0.8447, 0.5098], [0.1973, 0.3329]], [[0.8975, 0.2356], [0.0634, 0.754], [0.8124, 0.9663]], [[0.3152, 0.7235], [0.1088, 0.3064], [0.8457, 0.0609]]], [[[0.5449, 0.1403], [0.5907, 0.9001], [0.8576, 0.435]], [[0.2094, 0.6821], [0.4125, 0.8915], [0.0318, 0.8422]], [[0.863, 0.1892], [0.7428, 0.7943], [0.4156, 0.8521]]]]])
in0Dep31755 = tf.constant([[[[0.4057, 0.3602], [0.3186, 0.8263]]]])
in0Con7085 = tf.constant([[[[0.9798], [0.6346], [0.3456]]]])
print (np.array2string(model.predict([in0Sub64758,in1Sub64758,in0Dep31755,in0Con7085],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Min72231.png')

LSub64758 = subtract_layer([[[[[0.4147, 0.4432], [0.9728, 0.8912], [0.9771, 0.0385]], [[0.0617, 0.5251], [0.1901, 0.786], [0.3396, 0.506]], [[0.2892, 0.7757], [0.4896, 0.9511], [0.2919, 0.0882]]], [[[0.2974, 0.44], [0.728, 0.4742], [0.3807, 0.8784]], [[0.4271, 0.9729], [0.4504, 0.2957], [0.2145, 0.0603]], [[0.6707, 0.9373], [0.186, 0.655], [0.4014, 0.265]]]]], [[[[[0.086, 0.3243], [0.8447, 0.5098], [0.1973, 0.3329]], [[0.8975, 0.2356], [0.0634, 0.754], [0.8124, 0.9663]], [[0.3152, 0.7235], [0.1088, 0.3064], [0.8457, 0.0609]]], [[[0.5449, 0.1403], [0.5907, 0.9001], [0.8576, 0.435]], [[0.2094, 0.6821], [0.4125, 0.8915], [0.0318, 0.8422]], [[0.863, 0.1892], [0.7428, 0.7943], [0.4156, 0.8521]]]]], Sub64758), 
LRes84166 = reshape_layer(Sub64758, [2, 3, 6], Res84166), 
LCon54689 = conv2D_layer(Res84166, 2, 1,[[[[0.4734, 0.1615], [0.6487, 0.677], [0.6607, 0.7803], [0.507, 0.8286], [0.1667, 0.6615], [0.4348, 0.794]]], [[[0.9375, 0.2406], [0.1266, 0.6196], [0.7612, 0.6719], [0.9189, 0.8817], [0.5068, 0.7614], [0.8162, 0.6449]]]],[0, 0], 1, 1, false, 1, 1, Con54689), 
LDep31755 = depthwise_conv2D_layer([[[[0.4057, 0.3602], [0.3186, 0.8263]]]], 1, 2,[[[[0.4136], [0.3169]], [[0.0223], [0.9034]]]],[0, 0], 1, 1, true, Dep31755), 
LRes4001 = reshape_layer(Dep31755, [1, 4], Res4001), 
LCro70744 = cropping1D_layer(Res4001, 0, 0, Cro70744), 
LRes75975 = reshape_layer(Cro70744, [1, 4, 1], Res75975), 
LAve77380 = average_pooling2D_layer(Res75975, 1, 2, Ave77380), 
LZer8672 = zero_padding2D_layer(Ave77380, 0, 0, 1, 0, Zer8672), 
LCon7085 = concatenate_layer([Zer8672,[[[[0.9798], [0.6346], [0.3456]]]]], 3, Con7085), 
LMin72231 = minimum_layer([Con54689,Con7085], Min72231), 
exec_layers([LSub64758,LRes84166,LCon54689,LDep31755,LRes4001,LCro70744,LRes75975,LAve77380,LZer8672,LCon7085,LMin72231],["Sub64758","Res84166","Con54689","Dep31755","Res4001","Cro70744","Res75975","Ave77380","Zer8672","Con7085","Min72231"],Min72231,"Min72231")

Actual (Unparsed): [[[[0.0000000, 0.5973675], [-1.2102051, -1.1242795], [-0.6042356, 0.0487025]]]]

Expected (Unparsed): [[[[0,0.5973673799999998],[-1.21020511,-1.1242794699999998],[-0.6042355200000001,0.048702539999999905]]]]

Actual:   [[[[0, 0.5974], [-1.2102, -1.1242], [-0.6042, 0.0488]]]]

Expected: [[[[0, 0.5974], [-1.2102, -1.1242], [-0.6042, 0.0488]]]]