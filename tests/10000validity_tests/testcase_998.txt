import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Glo13377 = tf.keras.layers.Input(shape=([1, 2, 1]))

Glo13377 = keras.layers.GlobalMaxPool2D(name = 'Glo13377', )(in0Glo13377)
Res77381 = keras.layers.Reshape((1, 1), name = 'Res77381', )(Glo13377)
Max68511 = keras.layers.MaxPool1D(pool_size=(1), strides=(1), padding='valid', name = 'Max68511', )(Res77381)
Lay39667 = keras.layers.LayerNormalization(axis=2, epsilon=1.691734480837445, name = 'Lay39667', )(Max68511)
model = tf.keras.models.Model(inputs=[in0Glo13377], outputs=Lay39667)
in0Glo13377 = tf.constant([[[[1.3909], [1.8418]]]])
print (np.array2string(model.predict([in0Glo13377],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Lay39667.png')

LGlo13377 = global_max_pool2D_layer([[[[1.3909], [1.8418]]]], Glo13377), 
LRes77381 = reshape_layer(Glo13377, [1, 1], Res77381), 
LMax68511 = max_pool1D_layer(Res77381, 1, 1, false, Max68511), 
LLay39667 = layer_normalization_layer(Max68511, 2, 1.691734480837445, Lay39667), 
exec_layers([LGlo13377,LRes77381,LMax68511,LLay39667],["Glo13377","Res77381","Max68511","Lay39667"],Lay39667,"Lay39667")

Actual (Unparsed): [[[0.0000000]]]

Expected (Unparsed): [[[0.0]]]

Actual:   [[[0]]]

Expected: [[[0]]]