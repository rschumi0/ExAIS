import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Con87169 = tf.keras.layers.Input(shape=([2, 2, 1, 2]))

Con87169 = keras.layers.Conv3D(3, (2, 2, 1),strides=(2, 1, 1), padding='same', dilation_rate=(1, 1, 1), name = 'Con87169', )(in0Con87169)
Lea10208 = keras.layers.LeakyReLU(alpha=7.233066776036488, name = 'Lea10208', )(Con87169)
Res83111 = keras.layers.Reshape((1, 2, 3), name = 'Res83111', )(Lea10208)
Res57840 = keras.layers.Reshape((1, 6), name = 'Res57840', )(Res83111)
Den16558 = keras.layers.Dense(1,name = 'Den16558', )(Res57840)
Glo57689 = keras.layers.GlobalMaxPool1D(name = 'Glo57689', )(Den16558)
Res91375 = keras.layers.Reshape((1, 1), name = 'Res91375', )(Glo57689)
Zer90398 = keras.layers.ZeroPadding1D(padding=((1, 1)), name = 'Zer90398', )(Res91375)
model = tf.keras.models.Model(inputs=[in0Con87169], outputs=Zer90398)
w = model.get_layer('Con87169').get_weights() 
w[0] = np.array([[[[[0.7105, 0.0843, 0.6607], [0.3433, 0.458, 0.7028]]], [[[0.3238, 0.4929, 0.7487], [0.1059, 0.4031, 0.8904]]]], [[[[0.083, 0.1557, 0.5135], [0.5312, 0.767, 0.8157]]], [[[0.8146, 0.1107, 0.9975], [0.0139, 0.2334, 0.224]]]]])
w[1] = np.array([0, 0, 0])
model.get_layer('Con87169').set_weights(w) 
w = model.get_layer('Den16558').get_weights() 
w[0] = np.array([[0.7418], [0.3589], [0.0066], [0.3148], [0.4346], [0.6423]])
w[1] = np.array([0.7286])
model.get_layer('Den16558').set_weights(w) 
in0Con87169 = tf.constant([[[[[0.7482, 0.8957]], [[0.249, 0.606]]], [[[0.3491, 0.3124]], [[0.3075, 0.8991]]]]])
print (np.array2string(model.predict([in0Con87169],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Zer90398.png')

LCon87169 = conv3D_layer([[[[[0.7482, 0.8957]], [[0.249, 0.606]]], [[[0.3491, 0.3124]], [[0.3075, 0.8991]]]]], 2, 2, 1,[[[[[0.7105, 0.0843, 0.6607], [0.3433, 0.458, 0.7028]]], [[[0.3238, 0.4929, 0.7487], [0.1059, 0.4031, 0.8904]]]], [[[[0.083, 0.1557, 0.5135], [0.5312, 0.767, 0.8157]]], [[[0.8146, 0.1107, 0.9975], [0.0139, 0.2334, 0.224]]]]],[0, 0, 0], 2, 1, 1, true, 1, 1, 1, Con87169), 
LLea10208 = leaky_relu_layer(Con87169, 7.233066776036488, Lea10208), 
LRes83111 = reshape_layer(Lea10208, [1, 2, 3], Res83111), 
LRes57840 = reshape_layer(Res83111, [1, 6], Res57840), 
LDen16558 = dense_layer(Res57840, [[0.7418], [0.3589], [0.0066], [0.3148], [0.4346], [0.6423]],[0.7286], Den16558), 
LGlo57689 = global_max_pool1D_layer(Den16558, Glo57689), 
LRes91375 = reshape_layer(Glo57689, [1, 1], Res91375), 
LZer90398 = zero_padding1D_layer(Res91375, 1, 1, Zer90398), 
exec_layers([LCon87169,LLea10208,LRes83111,LRes57840,LDen16558,LGlo57689,LRes91375,LZer90398],["Con87169","Lea10208","Res83111","Res57840","Den16558","Glo57689","Res91375","Zer90398"],Zer90398,"Zer90398")

Actual (Unparsed): [[[0.0000000], [3.9927061], [0.0000000]]]

Expected (Unparsed): [[[0],[3.9927060369419993],[0]]]

Actual:   [[[0], [3.9928], [0]]]

Expected: [[[0], [3.9928], [0]]]