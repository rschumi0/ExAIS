import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Glo80120 = tf.keras.layers.Input(shape=([2, 2]))
in0Con15738 = tf.keras.layers.Input(shape=([2, 3, 1]))
in0Max38521 = tf.keras.layers.Input(shape=([1, 2, 2]))

Glo80120 = keras.layers.GlobalMaxPool1D(name = 'Glo80120', )(in0Glo80120)
Res8876 = keras.layers.Reshape((2, 1), name = 'Res8876', )(Glo80120)
Res9089 = keras.layers.Reshape((2, 1, 1), name = 'Res9089', )(Res8876)
Zer22361 = keras.layers.ZeroPadding2D(padding=((0, 0), (2, 0)), name = 'Zer22361', )(Res9089)
Con15738 = keras.layers.Concatenate(axis=3, name = 'Con15738', )([Zer22361,in0Con15738])
Max38521 = keras.layers.MaxPool2D(pool_size=(1, 1), strides=(1, 1), padding='same', name = 'Max38521', )(in0Max38521)
Zer40690 = keras.layers.ZeroPadding2D(padding=((1, 0), (1, 0)), name = 'Zer40690', )(Max38521)
Ave47900 = keras.layers.Average(name = 'Ave47900', )([Con15738,Zer40690])
Sep90968 = keras.layers.SeparableConv2D(4, (2, 3),strides=(1, 1), padding='valid', name = 'Sep90968', )(Ave47900)
Res99485 = keras.layers.Reshape((1, 1, 4, 1), name = 'Res99485', )(Sep90968)
Con93856 = keras.layers.Conv3DTranspose(3, (1, 1, 4),strides=(1, 1, 1), padding='same', name = 'Con93856', )(Res99485)
model = tf.keras.models.Model(inputs=[in0Glo80120,in0Con15738,in0Max38521], outputs=Con93856)
w = model.get_layer('Sep90968').get_weights() 
w[0] = np.array([[[[0.2946], [0.9661]], [[0.4449], [0.3745]], [[0.6021], [0.8424]]], [[[0.649], [0.4089]], [[0.6599], [0.9388]], [[0.0064], [0.945]]]])
w[1] = np.array([[[[0.2225, 0.0993, 0.7918, 0.2173], [0.4794, 0.3798, 0.1015, 0.8551]]]])
w[2] = np.array([0, 0, 0, 0])
model.get_layer('Sep90968').set_weights(w) 
w = model.get_layer('Con93856').get_weights() 
w[0] = np.array([[[[[0.2545], [0.4044], [0.8271]], [[0.3819], [0.2371], [0.2885]], [[0.8729], [0.3015], [0.8947]], [[0.1067], [0.6334], [0.9981]]]]])
w[1] = np.array([0, 0, 0])
model.get_layer('Con93856').set_weights(w) 
in0Glo80120 = tf.constant([[[1.3944, 1.9407], [1.574, 1.9412]]])
in0Con15738 = tf.constant([[[[0.8065], [0.9995], [0.4157]], [[0.9155], [0.5482], [0.7687]]]])
in0Max38521 = tf.constant([[[[1.8041, 1.3863], [1.8643, 1.3853]]]])
print (np.array2string(model.predict([in0Glo80120,in0Con15738,in0Max38521],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Con93856.png')

LGlo80120 = global_max_pool1D_layer([[[1.3944, 1.9407], [1.574, 1.9412]]], Glo80120), 
LRes8876 = reshape_layer(Glo80120, [2, 1], Res8876), 
LRes9089 = reshape_layer(Res8876, [2, 1, 1], Res9089), 
LZer22361 = zero_padding2D_layer(Res9089, 0, 0, 2, 0, Zer22361), 
LCon15738 = concatenate_layer([Zer22361,[[[[0.8065], [0.9995], [0.4157]], [[0.9155], [0.5482], [0.7687]]]]], 3, Con15738), 
LMax38521 = max_pool2D_layer([[[[1.8041, 1.3863], [1.8643, 1.3853]]]], 1, 1, 1, 1, true, Max38521), 
LZer40690 = zero_padding2D_layer(Max38521, 1, 0, 1, 0, Zer40690), 
LAve47900 = average_layer([Con15738,Zer40690], Ave47900), 
LSep90968 = separable_conv2D_layer(Ave47900, 2, 3,[[[[[0.2946], [0.9661]], [[0.4449], [0.3745]], [[0.6021], [0.8424]]], [[[0.649], [0.4089]], [[0.6599], [0.9388]], [[0.0064], [0.945]]]],[[[[0.2225, 0.0993, 0.7918, 0.2173], [0.4794, 0.3798, 0.1015, 0.8551]]]]],[0, 0, 0, 0], 1, 1, false, Sep90968), 
LRes99485 = reshape_layer(Sep90968, [1, 1, 4, 1], Res99485), 
LCon93856 = conv3D_transpose_layer(Res99485, 1, 1, 4,[[[[[0.2545], [0.4044], [0.8271]], [[0.3819], [0.2371], [0.2885]], [[0.8729], [0.3015], [0.8947]], [[0.1067], [0.6334], [0.9981]]]]],[0, 0, 0], 1, 1, 1, true, Con93856), 
exec_layers([LGlo80120,LRes8876,LRes9089,LZer22361,LCon15738,LMax38521,LZer40690,LAve47900,LSep90968,LRes99485,LCon93856],["Glo80120","Res8876","Res9089","Zer22361","Con15738","Max38521","Zer40690","Ave47900","Sep90968","Res99485","Con93856"],Con93856,"Con93856")

Actual (Unparsed): [[[[[0.9206177, 0.8661082, 1.4543760], [2.1572798, 1.2338785, 2.7375533], [2.3369734, 2.7403435, 5.2318585], [2.1540001, 1.7395275, 2.9938630]]]]]

Expected (Unparsed): [[[[[0.9206177341908743,0.8661081635807495,1.4543759894996526],[2.1572797721029153,1.2338784461846997,2.737553317306646],[2.3369734268805518,2.7403434947782443,5.231858529289008],[2.1540001278686285,1.7395275362062046,2.9938629898605704]]]]]

Actual:   [[[[[0.9207, 0.8662, 1.4544], [2.1573, 1.2339, 2.7376], [2.337, 2.7404, 5.2319], [2.1541, 1.7396, 2.9939]]]]]

Expected: [[[[[0.9207, 0.8662, 1.4544], [2.1573, 1.2339, 2.7376], [2.337, 2.7404, 5.2319], [2.1541, 1.7396, 2.9939]]]]]