import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Sep29026 = tf.keras.layers.Input(shape=([2, 1, 2]))

Sep29026 = keras.layers.SeparableConv2D(4, (2, 1),strides=(2, 2), padding='same', name = 'Sep29026', )(in0Sep29026)
Res68831 = keras.layers.Reshape((1, 4), name = 'Res68831', )(Sep29026)
Fla4097 = keras.layers.Flatten(name = 'Fla4097', )(Res68831)
Lay96064 = keras.layers.LayerNormalization(axis=1, epsilon=1.0518949511067226, name = 'Lay96064', )(Fla4097)
model = tf.keras.models.Model(inputs=[in0Sep29026], outputs=Lay96064)
w = model.get_layer('Sep29026').get_weights() 
w[0] = np.array([[[[0.9912], [0.5752]]], [[[0.5102], [0.3593]]]])
w[1] = np.array([[[[0.7953, 0.6898, 0.6625, 0.9266], [0.6073, 0.6445, 0.9178, 0.6328]]]])
w[2] = np.array([0, 0, 0, 0])
model.get_layer('Sep29026').set_weights(w) 
in0Sep29026 = tf.constant([[[[0.7268, 0.2504]], [[0.6937, 0.9524]]]])
print (np.array2string(model.predict([in0Sep29026],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Lay96064.png')

LSep29026 = separable_conv2D_layer([[[[0.7268, 0.2504]], [[0.6937, 0.9524]]]], 2, 1,[[[[[0.9912], [0.5752]]], [[[0.5102], [0.3593]]]],[[[[0.7953, 0.6898, 0.6625, 0.9266], [0.6073, 0.6445, 0.9178, 0.6328]]]]],[0, 0, 0, 0], 2, 2, true, Sep29026), 
LRes68831 = reshape_layer(Sep29026, [1, 4], Res68831), 
LFla4097 = flatten_layer(Res68831, Fla4097), 
LLay96064 = layer_normalization_layer(Fla4097, 1, 1.0518949511067226, Lay96064), 
exec_layers([LSep29026,LRes68831,LFla4097,LLay96064],["Sep29026","Res68831","Fla4097","Lay96064"],Lay96064,"Lay96064")

Actual (Unparsed): [[-0.0161509, -0.1086790, -0.0080859, 0.1329157]]

Expected (Unparsed): [[-0.01615085944765467,-0.10867896713865238,-0.00808587092553464,0.13291569751184212]]

Actual:   [[-0.0161, -0.1086, -0.008, 0.133]]

Expected: [[-0.0161, -0.1086, -0.008, 0.133]]