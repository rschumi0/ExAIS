import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Min84911 = tf.keras.layers.Input(shape=([2, 2, 1, 1]))
in1Min84911 = tf.keras.layers.Input(shape=([2, 2, 1, 1]))
in0Con5243 = tf.keras.layers.Input(shape=([5, 2]))
in0Den22197 = tf.keras.layers.Input(shape=([5, 4]))
in0Fla94293 = tf.keras.layers.Input(shape=([2]))
in0Min35699 = tf.keras.layers.Input(shape=([1, 2]))
in1Min35699 = tf.keras.layers.Input(shape=([1, 2]))
in0Con73546 = tf.keras.layers.Input(shape=([5, 2]))

Min84911 = keras.layers.Minimum(name = 'Min84911', )([in0Min84911,in1Min84911])
Res14975 = keras.layers.Reshape((2, 2, 1), name = 'Res14975', )(Min84911)
Res66778 = keras.layers.Reshape((2, 2), name = 'Res66778', )(Res14975)
Zer89042 = keras.layers.ZeroPadding1D(padding=((3, 0)), name = 'Zer89042', )(Res66778)
Con5243 = keras.layers.Concatenate(axis=2, name = 'Con5243', )([Zer89042,in0Con5243])
Den22197 = keras.layers.Dense(4,name = 'Den22197', )(in0Den22197)
Fla94293 = keras.layers.Flatten(name = 'Fla94293', )(in0Fla94293)
Res63964 = keras.layers.Reshape((2, 1), name = 'Res63964', )(Fla94293)
Sep60094 = keras.layers.SeparableConv1D(4, (1),strides=(1), padding='valid', name = 'Sep60094', )(Res63964)
Zer11406 = keras.layers.ZeroPadding1D(padding=((3, 0)), name = 'Zer11406', )(Sep60094)
Max29454 = keras.layers.Maximum(name = 'Max29454', )([Den22197,Zer11406])
Min35699 = keras.layers.Minimum(name = 'Min35699', )([in0Min35699,in1Min35699])
ReL13781 = keras.layers.ReLU(max_value=5.235300198655602, negative_slope=1.485401433110438, threshold=7.64622050802639, name = 'ReL13781', )(Min35699)
Zer81952 = keras.layers.ZeroPadding1D(padding=((4, 0)), name = 'Zer81952', )(ReL13781)
Con73546 = keras.layers.Concatenate(axis=2, name = 'Con73546', )([Zer81952,in0Con73546])
Mul13793 = keras.layers.Multiply(name = 'Mul13793', )([Max29454,Con73546])
Sub57647 = keras.layers.Subtract(name = 'Sub57647', )([Con5243,Mul13793])
model = tf.keras.models.Model(inputs=[in0Min84911,in1Min84911,in0Con5243,in0Den22197,in0Fla94293,in0Min35699,in1Min35699,in0Con73546], outputs=Sub57647)
w = model.get_layer('Den22197').get_weights() 
w[0] = np.array([[0.6358, 0.4498, 0.4953, 0.9655], [0.7624, 0.8718, 0.8237, 0.7171], [0.5112, 0.5673, 0.9172, 0.0684], [0.4733, 0.132, 0.3856, 0.6912]])
w[1] = np.array([0.3836, 0.8441, 0.8436, 0.9043])
model.get_layer('Den22197').set_weights(w) 
w = model.get_layer('Sep60094').get_weights() 
w[0] = np.array([[[0.7911]]])
w[1] = np.array([[[0.4995, 0.7242, 0.1853, 0.9365]]])
w[2] = np.array([0, 0, 0, 0])
model.get_layer('Sep60094').set_weights(w) 
in0Min84911 = tf.constant([[[[[0.9854]], [[0.0225]]], [[[0.143]], [[0.9736]]]]])
in1Min84911 = tf.constant([[[[[0.5895]], [[0.7867]]], [[[0.298]], [[0.7705]]]]])
in0Con5243 = tf.constant([[[0.8234, 0.2625], [0.671, 0.377], [0.2448, 0.063], [0.4761, 0.3703], [0.2043, 0.3977]]])
in0Den22197 = tf.constant([[[0.5033, 0.7532, 0.9242, 0.734], [0.7782, 0.5845, 0.3732, 0.3963], [0.1942, 0.9759, 0.2226, 0.5545], [0.9408, 0.1249, 0.1593, 0.5597], [0.6988, 0.1985, 0.6705, 0.328]]])
in0Fla94293 = tf.constant([[1.8941, 1.5864]])
in0Min35699 = tf.constant([[[0.0158, 0.9851]]])
in1Min35699 = tf.constant([[[0.4342, 0.9296]]])
in0Con73546 = tf.constant([[[0.2522, 0.0681], [0.655, 0.1234], [0.7883, 0.9748], [0.8844, 0.541], [0.5802, 0.5556]]])
print (np.array2string(model.predict([in0Min84911,in1Min84911,in0Con5243,in0Den22197,in0Fla94293,in0Min35699,in1Min35699,in0Con73546],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Sub57647.png')

LMin84911 = minimum_layer([[[[[[0.9854]], [[0.0225]]], [[[0.143]], [[0.9736]]]]], [[[[[0.5895]], [[0.7867]]], [[[0.298]], [[0.7705]]]]]], Min84911), 
LRes14975 = reshape_layer(Min84911, [2, 2, 1], Res14975), 
LRes66778 = reshape_layer(Res14975, [2, 2], Res66778), 
LZer89042 = zero_padding1D_layer(Res66778, 3, 0, Zer89042), 
LCon5243 = concatenate_layer([Zer89042,[[[0.8234, 0.2625], [0.671, 0.377], [0.2448, 0.063], [0.4761, 0.3703], [0.2043, 0.3977]]]], 2, Con5243), 
LDen22197 = dense_layer([[[0.5033, 0.7532, 0.9242, 0.734], [0.7782, 0.5845, 0.3732, 0.3963], [0.1942, 0.9759, 0.2226, 0.5545], [0.9408, 0.1249, 0.1593, 0.5597], [0.6988, 0.1985, 0.6705, 0.328]]], [[0.6358, 0.4498, 0.4953, 0.9655], [0.7624, 0.8718, 0.8237, 0.7171], [0.5112, 0.5673, 0.9172, 0.0684], [0.4733, 0.132, 0.3856, 0.6912]],[0.3836, 0.8441, 0.8436, 0.9043], Den22197), 
LFla94293 = flatten_layer([[1.8941, 1.5864]], Fla94293), 
LRes63964 = reshape_layer(Fla94293, [2, 1], Res63964), 
LSep60094 = separable_conv1D_layer(Res63964, 1,[[[[0.7911]]],[[[0.4995, 0.7242, 0.1853, 0.9365]]]],[0, 0, 0, 0], 1, false, Sep60094), 
LZer11406 = zero_padding1D_layer(Sep60094, 3, 0, Zer11406), 
LMax29454 = maximum_layer([Den22197,Zer11406], Max29454), 
LMin35699 = minimum_layer([[[[0.0158, 0.9851]]], [[[0.4342, 0.9296]]]], Min35699), 
LReL13781 = relu_layer(Min35699, 5.235300198655602, 1.485401433110438, 7.64622050802639, ReL13781), 
LZer81952 = zero_padding1D_layer(ReL13781, 4, 0, Zer81952), 
LCon73546 = concatenate_layer([Zer81952,[[[0.2522, 0.0681], [0.655, 0.1234], [0.7883, 0.9748], [0.8844, 0.541], [0.5802, 0.5556]]]], 2, Con73546), 
LMul13793 = multiply_layer([Max29454,Con73546], Mul13793), 
LSub57647 = subtract_layer(Con5243,Mul13793, Sub57647), 
exec_layers([LMin84911,LRes14975,LRes66778,LZer89042,LCon5243,LDen22197,LFla94293,LRes63964,LSep60094,LZer11406,LMax29454,LMin35699,LReL13781,LZer81952,LCon73546,LMul13793,LSub57647],["Min84911","Res14975","Res66778","Zer89042","Con5243","Den22197","Fla94293","Res63964","Sep60094","Zer11406","Max29454","Min35699","ReL13781","Zer81952","Con73546","Mul13793","Sub57647"],Sub57647,"Sub57647")

Actual (Unparsed): [[[0.0000000, 0.0000000, 0.1061427, 0.0921879], [0.0000000, 0.0000000, -0.7736728, 0.0840180], [0.0000000, 0.0000000, -1.4592050, -2.0719233], [0.5895000, 0.0225000, -1.0931693, -0.8739832], [16.8863376, 18.2813491, -1.0110331, -0.7101172]]]

Expected (Unparsed): [[[0.0,0.0,0.10614270316600005,0.09218789620500001],[0.0,0.0,-0.7736728666500001,0.084017983134],[0.0,0.0,-1.4592050538830001,-2.0719233514039996],[0.5895,0.0225,-1.0931693220599998,-0.8739832019500002],[16.886337405846415,18.281349002255695,-1.011033040098,-0.7101172571800001]]]

Actual:   [[[0, 0, 0.1062, 0.0922], [0, 0, -0.7736, 0.0841], [0, 0, -1.4592, -2.0719], [0.5895, 0.0225, -1.0931, -0.8739], [16.8864, 18.2814, -1.011, -0.7101]]]

Expected: [[[0, 0, 0.1062, 0.0922], [0, 0, -0.7736, 0.0841], [0, 0, -1.4592, -2.0719], [0.5895, 0.0225, -1.0931, -0.8739], [16.8864, 18.2814, -1.011, -0.7101]]]