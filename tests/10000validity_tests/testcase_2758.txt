import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Glo11748 = tf.keras.layers.Input(shape=([2, 2]))
in0Con39470 = tf.keras.layers.Input(shape=([2, 2, 1]))
in0Min96480 = tf.keras.layers.Input(shape=([2, 2, 2]))
in1Min96480 = tf.keras.layers.Input(shape=([2, 2, 2]))

Glo11748 = keras.layers.GlobalAveragePooling1D(name = 'Glo11748', )(in0Glo11748)
Res22652 = keras.layers.Reshape((2, 1), name = 'Res22652', )(Glo11748)
Res3721 = keras.layers.Reshape((2, 1, 1), name = 'Res3721', )(Res22652)
Zer85252 = keras.layers.ZeroPadding2D(padding=((0, 0), (1, 0)), name = 'Zer85252', )(Res3721)
Con39470 = keras.layers.Concatenate(axis=3, name = 'Con39470', )([Zer85252,in0Con39470])
Min96480 = keras.layers.Minimum(name = 'Min96480', )([in0Min96480,in1Min96480])
Min45110 = keras.layers.Minimum(name = 'Min45110', )([Con39470,Min96480])
Res29854 = keras.layers.Reshape((2, 4), name = 'Res29854', )(Min45110)
LST43014 = keras.layers.LSTM(3,recurrent_activation='sigmoid', name = 'LST43014', )(Res29854)
Lea78124 = keras.layers.LeakyReLU(alpha=9.923855511635992, name = 'Lea78124', )(LST43014)
model = tf.keras.models.Model(inputs=[in0Glo11748,in0Con39470,in0Min96480,in1Min96480], outputs=Lea78124)
w = model.get_layer('LST43014').get_weights() 
w[0] = np.array([[7, 6, 4, 5, 2, 8, 6, 2, 3, 3, 7, 2], [2, 6, 1, 3, 5, 10, 1, 10, 6, 8, 10, 9], [10, 10, 3, 5, 9, 5, 2, 3, 8, 5, 5, 6], [5, 9, 1, 10, 7, 5, 3, 7, 6, 4, 1, 7]])
w[1] = np.array([[8, 6, 10, 5, 8, 5, 10, 1, 6, 8, 4, 6], [7, 5, 9, 9, 1, 3, 7, 4, 6, 3, 5, 5], [2, 8, 7, 10, 2, 7, 1, 9, 1, 2, 7, 9]])
w[2] = np.array([5, 8, 4, 8, 9, 9, 6, 1, 7, 1, 10, 10])
model.get_layer('LST43014').set_weights(w) 
in0Glo11748 = tf.constant([[[1.8748, 1.1723], [1.5912, 1.416]]])
in0Con39470 = tf.constant([[[[0.329], [0.6312]], [[0.8739], [0.0427]]]])
in0Min96480 = tf.constant([[[[0.8372, 0.9112], [0.9665, 0.4434]], [[0.0085, 0.3802], [0.3148, 0.1934]]]])
in1Min96480 = tf.constant([[[[0.5667, 0.7026], [0.3785, 0.9631]], [[0.346, 0.7881], [0.4531, 0.2139]]]])
print (np.array2string(model.predict([in0Glo11748,in0Con39470,in0Min96480,in1Min96480],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Lea78124.png')

LGlo11748 = global_average_pooling1D_layer([[[1.8748, 1.1723], [1.5912, 1.416]]], Glo11748), 
LRes22652 = reshape_layer(Glo11748, [2, 1], Res22652), 
LRes3721 = reshape_layer(Res22652, [2, 1, 1], Res3721), 
LZer85252 = zero_padding2D_layer(Res3721, 0, 0, 1, 0, Zer85252), 
LCon39470 = concatenate_layer([Zer85252,[[[[0.329], [0.6312]], [[0.8739], [0.0427]]]]], 3, Con39470), 
LMin96480 = minimum_layer([[[[[0.8372, 0.9112], [0.9665, 0.4434]], [[0.0085, 0.3802], [0.3148, 0.1934]]]], [[[[0.5667, 0.7026], [0.3785, 0.9631]], [[0.346, 0.7881], [0.4531, 0.2139]]]]], Min96480), 
LMin45110 = minimum_layer([Con39470,Min96480], Min45110), 
LRes29854 = reshape_layer(Min45110, [2, 4], Res29854), 
LLST43014 = lstm_layer(Res29854,[[7, 6, 4, 5, 2, 8, 6, 2, 3, 3, 7, 2], [2, 6, 1, 3, 5, 10, 1, 10, 6, 8, 10, 9], [10, 10, 3, 5, 9, 5, 2, 3, 8, 5, 5, 6], [5, 9, 1, 10, 7, 5, 3, 7, 6, 4, 1, 7]],[[8, 6, 10, 5, 8, 5, 10, 1, 6, 8, 4, 6], [7, 5, 9, 9, 1, 3, 7, 4, 6, 3, 5, 5], [2, 8, 7, 10, 2, 7, 1, 9, 1, 2, 7, 9]],[5, 8, 4, 8, 9, 9, 6, 1, 7, 1, 10, 10], LST43014), 
LLea78124 = leaky_relu_layer(LST43014, 9.923855511635992, Lea78124), 
exec_layers([LGlo11748,LRes22652,LRes3721,LZer85252,LCon39470,LMin96480,LMin45110,LRes29854,LLST43014,LLea78124],["Glo11748","Res22652","Res3721","Zer85252","Con39470","Min96480","Min45110","Res29854","LST43014","Lea78124"],Lea78124,"Lea78124")

Actual (Unparsed): [[0.9640268, 0.9640276, 0.9638356]]

Expected (Unparsed): [[0.9640268139643655,0.964027573162593,0.963835578255993]]

Actual:   [[0.9641, 0.9641, 0.9639]]

Expected: [[0.9641, 0.9641, 0.9639]]