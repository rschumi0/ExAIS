import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Up_78413 = tf.keras.layers.Input(shape=([3, 2]))
in0Den40164 = tf.keras.layers.Input(shape=([4, 2, 2]))
in0Con53628 = tf.keras.layers.Input(shape=([7, 8]))

Up_78413 = keras.layers.UpSampling1D(size=(2), name = 'Up_78413', )(in0Up_78413)
Res85325 = keras.layers.Reshape((6, 2, 1), name = 'Res85325', )(Up_78413)
Res33373 = keras.layers.Reshape((6, 2, 1, 1), name = 'Res33373', )(Res85325)
Con70380 = keras.layers.Conv3DTranspose(3, (2, 2, 1),strides=(1, 1, 1), padding='valid', name = 'Con70380', )(Res33373)
Res7320 = keras.layers.Reshape((7, 3, 3), name = 'Res7320', )(Con70380)
Res27014 = keras.layers.Reshape((7, 9), name = 'Res27014', )(Res7320)
Den40164 = keras.layers.Dense(2,name = 'Den40164', )(in0Den40164)
Res28602 = keras.layers.Reshape((4, 2, 2, 1), name = 'Res28602', )(Den40164)
Glo53337 = keras.layers.GlobalMaxPool3D(name = 'Glo53337', )(Res28602)
Res48609 = keras.layers.Reshape((1, 1), name = 'Res48609', )(Glo53337)
PRe18028 = keras.layers.PReLU(name = 'PRe18028', )(Res48609)
Zer53543 = keras.layers.ZeroPadding1D(padding=((6, 0)), name = 'Zer53543', )(PRe18028)
Con53628 = keras.layers.Concatenate(axis=2, name = 'Con53628', )([Zer53543,in0Con53628])
Add99522 = keras.layers.Add(name = 'Add99522', )([Res27014,Con53628])
model = tf.keras.models.Model(inputs=[in0Up_78413,in0Den40164,in0Con53628], outputs=Add99522)
w = model.get_layer('Con70380').get_weights() 
w[0] = np.array([[[[[0.1228], [0.9403], [0.4869]]], [[[0.4854], [0.925], [0.3554]]]], [[[[0.0765], [0.0993], [0.9024]]], [[[0.5735], [0.5877], [0.253]]]]])
w[1] = np.array([0, 0, 0])
model.get_layer('Con70380').set_weights(w) 
w = model.get_layer('Den40164').get_weights() 
w[0] = np.array([[0.7726, 0.0958], [0.3263, 0.2393]])
w[1] = np.array([0.9277, 0.8153])
model.get_layer('Den40164').set_weights(w) 
w = model.get_layer('PRe18028').get_weights() 
w[0] = np.array([[0.3481]])
model.get_layer('PRe18028').set_weights(w) 
in0Up_78413 = tf.constant([[[1.3878, 1.7716], [1.3716, 1.8885], [1.8996, 1.3935]]])
in0Den40164 = tf.constant([[[[0.4714, 0.6954], [0.8133, 0.1203]], [[0.4186, 0.1258], [0.8027, 0.3115]], [[0.4793, 0.7404], [0.537, 0.9023]], [[0.8861, 0.7422], [0.2746, 0.7254]]]])
in0Con53628 = tf.constant([[[0.4939, 0.3579, 0.2059, 0.1344, 0.5775, 0.597, 0.233, 0.9909], [0.0794, 0.3849, 0.9959, 0.6972, 0.1093, 0.8599, 0.6565, 0.2677], [0.1389, 0.6844, 0.1817, 0.1768, 0.4096, 0.0079, 0.0723, 0.6856], [0.9196, 0.0217, 0.4464, 0.4516, 0.5684, 0.4076, 0.7197, 0.9574], [0.4027, 0.5511, 0.199, 0.6881, 0.942, 0.8597, 0.1382, 0.7898], [0.2438, 0.9122, 0.1921, 0.1508, 0.7076, 0.4469, 0.7494, 0.4573], [0.619, 0.3899, 0.3234, 0.8022, 0.0826, 0.2241, 0.039, 0.8461]]])
print (np.array2string(model.predict([in0Up_78413,in0Den40164,in0Con53628],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Add99522.png')

LUp_78413 = up_sampling1D_layer([[[1.3878, 1.7716], [1.3716, 1.8885], [1.8996, 1.3935]]], 2, Up_78413), 
LRes85325 = reshape_layer(Up_78413, [6, 2, 1], Res85325), 
LRes33373 = reshape_layer(Res85325, [6, 2, 1, 1], Res33373), 
LCon70380 = conv3D_transpose_layer(Res33373, 2, 2, 1,[[[[[0.1228], [0.9403], [0.4869]]], [[[0.4854], [0.925], [0.3554]]]], [[[[0.0765], [0.0993], [0.9024]]], [[[0.5735], [0.5877], [0.253]]]]],[0, 0, 0], 1, 1, 1, false, Con70380), 
LRes7320 = reshape_layer(Con70380, [7, 3, 3], Res7320), 
LRes27014 = reshape_layer(Res7320, [7, 9], Res27014), 
LDen40164 = dense_layer([[[[0.4714, 0.6954], [0.8133, 0.1203]], [[0.4186, 0.1258], [0.8027, 0.3115]], [[0.4793, 0.7404], [0.537, 0.9023]], [[0.8861, 0.7422], [0.2746, 0.7254]]]], [[0.7726, 0.0958], [0.3263, 0.2393]],[0.9277, 0.8153], Den40164), 
LRes28602 = reshape_layer(Den40164, [4, 2, 2, 1], Res28602), 
LGlo53337 = global_max_pool3D_layer(Res28602, Glo53337), 
LRes48609 = reshape_layer(Glo53337, [1, 1], Res48609), 
LPRe18028 = prelu_layer(Res48609, [[0.3481]], PRe18028), 
LZer53543 = zero_padding1D_layer(PRe18028, 6, 0, Zer53543), 
LCon53628 = concatenate_layer([Zer53543,[[[0.4939, 0.3579, 0.2059, 0.1344, 0.5775, 0.597, 0.233, 0.9909], [0.0794, 0.3849, 0.9959, 0.6972, 0.1093, 0.8599, 0.6565, 0.2677], [0.1389, 0.6844, 0.1817, 0.1768, 0.4096, 0.0079, 0.0723, 0.6856], [0.9196, 0.0217, 0.4464, 0.4516, 0.5684, 0.4076, 0.7197, 0.9574], [0.4027, 0.5511, 0.199, 0.6881, 0.942, 0.8597, 0.1382, 0.7898], [0.2438, 0.9122, 0.1921, 0.1508, 0.7076, 0.4469, 0.7494, 0.4573], [0.619, 0.3899, 0.3234, 0.8022, 0.0826, 0.2241, 0.039, 0.8461]]]], 2, Con53628), 
LAdd99522 = add_layer([Res27014,Con53628], Add99522), 
exec_layers([LUp_78413,LRes85325,LRes33373,LCon70380,LRes7320,LRes27014,LDen40164,LRes28602,LGlo53337,LRes48609,LPRe18028,LZer53543,LCon53628,LAdd99522],["Up_78413","Res85325","Res33373","Con70380","Res7320","Res27014","Den40164","Res28602","Glo53337","Res48609","PRe18028","Zer53543","Con53628","Add99522"],Add99522,"Add99522")

Actual (Unparsed): [[[0.1704218, 1.7988483, 1.0336198, 1.0970906, 3.0839505, 1.9333161, 1.4569346, 1.8717300, 1.6205266], [0.2765885, 1.5221569, 2.3129705, 2.8185213, 4.6382804, 3.4149214, 2.7358472, 3.3363993, 1.3455414], [0.2745992, 1.5664240, 2.6045828, 2.0108131, 4.2128165, 3.7663825, 1.9405905, 2.8603318, 1.8049877], [0.2733599, 2.3455154, 1.9272639, 2.2751653, 4.4897039, 4.0265745, 2.4073326, 3.5764339, 2.1063634], [0.3381983, 2.3250938, 2.7137471, 2.2232705, 4.7491554, 4.3468101, 2.6191596, 2.5370589, 1.7628404], [0.3785903, 2.2186242, 3.5513143, 2.4813110, 4.4730075, 3.7993062, 1.9224771, 2.8573474, 1.3051054], [1.9998001, 0.8076303, 2.1040991, 1.5194234, 2.0569695, 1.8206932, 1.0232722, 0.8579599, 1.1986555]]]

Expected (Unparsed): [[[0.17042184,1.79884834,1.03361982,1.0970906,3.08395048,1.93331616,1.45693464,1.8717300000000003,1.62052664],[0.27658854,1.5221568799999998,2.31297054,2.8185213,4.63828042,3.4149214000000003,2.73584724,3.3363993200000004,1.34554144],[0.27459918,1.56642402,2.60458276,2.01081314,4.21281649,3.76638253,1.9405905,2.8603318200000003,1.8049876999999999],[0.27335988,2.34551536,1.92726388,2.27516529,4.48970392,4.02657449,2.4073326500000003,3.57643395,2.1063634],[0.33819828,2.3250937599999997,2.71374708,2.2232704899999995,4.74915542,4.34681019,2.6191596500000003,2.53705895,1.7628404],[0.37859028,2.2186241599999996,3.55131428,2.48131099,4.47300752,3.7993061900000002,1.92247715,2.8573474500000002,1.3051054],[1.99980012,0.8076302799999999,2.10409904,1.5194233499999998,2.0569694700000003,1.8206931999999998,1.02327225,0.85795995,1.1986554999999999]]]

Actual:   [[[0.1705, 1.7989, 1.0337, 1.0971, 3.084, 1.9334, 1.457, 1.8718, 1.6206], [0.2766, 1.5222, 2.313, 2.8186, 4.6383, 3.415, 2.7359, 3.3364, 1.3456], [0.2746, 1.5665, 2.6046, 2.0109, 4.2129, 3.7664, 1.9406, 2.8604, 1.805], [0.2734, 2.3456, 1.9273, 2.2752, 4.4898, 4.0266, 2.4074, 3.5765, 2.1064], [0.3382, 2.3251, 2.7138, 2.2233, 4.7492, 4.3469, 2.6192, 2.5371, 1.7629], [0.3786, 2.2187, 3.5514, 2.4814, 4.4731, 3.7994, 1.9225, 2.8574, 1.3052], [1.9999, 0.8077, 2.1041, 1.5195, 2.057, 1.8207, 1.0233, 0.858, 1.1987]]]

Expected: [[[0.1705, 1.7989, 1.0337, 1.0971, 3.084, 1.9334, 1.457, 1.8718, 1.6206], [0.2766, 1.5222, 2.313, 2.8186, 4.6383, 3.415, 2.7359, 3.3364, 1.3456], [0.2746, 1.5665, 2.6046, 2.0109, 4.2129, 3.7664, 1.9406, 2.8604, 1.805], [0.2734, 2.3456, 1.9273, 2.2752, 4.4898, 4.0266, 2.4074, 3.5765, 2.1064], [0.3382, 2.3251, 2.7138, 2.2233, 4.7492, 4.3469, 2.6192, 2.5371, 1.7629], [0.3786, 2.2187, 3.5514, 2.4814, 4.4731, 3.7994, 1.9225, 2.8574, 1.3052], [1.9999, 0.8077, 2.1041, 1.5195, 2.057, 1.8207, 1.0233, 0.858, 1.1987]]]