import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Sim19012 = tf.keras.layers.Input(shape=([3, 3]))

Sim19012 = keras.layers.SimpleRNN(1,name = 'Sim19012', )(in0Sim19012)
Fla38424 = keras.layers.Flatten(name = 'Fla38424', )(Sim19012)
Res33196 = keras.layers.Reshape((1, 1), name = 'Res33196', )(Fla38424)
Loc6066 = keras.layers.LocallyConnected1D(2, (1),strides=(1), name = 'Loc6066', )(Res33196)
Cro84898 = keras.layers.Cropping1D(cropping=((0, 0)), name = 'Cro84898', )(Loc6066)
model = tf.keras.models.Model(inputs=[in0Sim19012], outputs=Cro84898)
w = model.get_layer('Sim19012').get_weights() 
w[0] = np.array([[3], [4], [10]])
w[1] = np.array([[4]])
w[2] = np.array([4])
model.get_layer('Sim19012').set_weights(w) 
w = model.get_layer('Loc6066').get_weights() 
w[0] = np.array([[[0.1491, 0.5669]]])
w[1] = np.array([[0, 0]])
model.get_layer('Loc6066').set_weights(w) 
in0Sim19012 = tf.constant([[[8, 9, 9], [6, 3, 1], [3, 9, 7]]])
print (np.array2string(model.predict([in0Sim19012],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Cro84898.png')

LSim19012 = simple_rnn_layer([[[8, 9, 9], [6, 3, 1], [3, 9, 7]]],[[3], [4], [10]],[[4]],[4], Sim19012), 
LFla38424 = flatten_layer(Sim19012, Fla38424), 
LRes33196 = reshape_layer(Fla38424, [1, 1], Res33196), 
LLoc6066 = locally_connected1D_layer(Res33196, 1,[[[0.1491, 0.5669]]],[[0, 0]], 1, Loc6066), 
LCro84898 = cropping1D_layer(Loc6066, 0, 0, Cro84898), 
exec_layers([LSim19012,LFla38424,LRes33196,LLoc6066,LCro84898],["Sim19012","Fla38424","Res33196","Loc6066","Cro84898"],Cro84898,"Cro84898")

Actual (Unparsed): [[[0.1491000, 0.5669000]]]

Expected (Unparsed): [[[0.1491,0.5669]]]

Actual:   [[[0.1491, 0.5669]]]

Expected: [[[0.1491, 0.5669]]]