import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Mul88659 = tf.keras.layers.Input(shape=([1, 2]))
in1Mul88659 = tf.keras.layers.Input(shape=([1, 2]))

Mul88659 = keras.layers.Multiply(name = 'Mul88659', )([in0Mul88659,in1Mul88659])
Res2450 = keras.layers.Reshape((1, 2, 1), name = 'Res2450', )(Mul88659)
Con18158 = keras.layers.Conv2D(2, (1, 2),strides=(1, 1), padding='valid', dilation_rate=(1, 1), name = 'Con18158', )(Res2450)
Res74953 = keras.layers.Reshape((1, 2), name = 'Res74953', )(Con18158)
Glo42181 = keras.layers.GlobalMaxPool1D(name = 'Glo42181', )(Res74953)
model = tf.keras.models.Model(inputs=[in0Mul88659,in1Mul88659], outputs=Glo42181)
w = model.get_layer('Con18158').get_weights() 
w[0] = np.array([[[[0.0756, 0.311]], [[0.4803, 0.2816]]]])
w[1] = np.array([0, 0])
model.get_layer('Con18158').set_weights(w) 
in0Mul88659 = tf.constant([[[0.7109, 0.1738]]])
in1Mul88659 = tf.constant([[[0.9142, 0.7085]]])
print (np.array2string(model.predict([in0Mul88659,in1Mul88659],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Glo42181.png')

LMul88659 = multiply_layer([[[[0.7109, 0.1738]]], [[[0.9142, 0.7085]]]], Mul88659), 
LRes2450 = reshape_layer(Mul88659, [1, 2, 1], Res2450), 
LCon18158 = conv2D_layer(Res2450, 1, 2,[[[[0.0756, 0.311]], [[0.4803, 0.2816]]]],[0, 0], 1, 1, false, 1, 1, Con18158), 
LRes74953 = reshape_layer(Con18158, [1, 2], Res74953), 
LGlo42181 = global_max_pool1D_layer(Res74953, Glo42181), 
exec_layers([LMul88659,LRes2450,LCon18158,LRes74953,LGlo42181],["Mul88659","Res2450","Con18158","Res74953","Glo42181"],Glo42181,"Glo42181")

Actual (Unparsed): [[0.1082757, 0.2367959]]

Expected (Unparsed): [[0.108275646558,0.23679585026]]

Actual:   [[0.1083, 0.2368]]

Expected: [[0.1083, 0.2368]]