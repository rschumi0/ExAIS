import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Con44132 = tf.keras.layers.Input(shape=([2, 2, 1, 1]))
in0Max82153 = tf.keras.layers.Input(shape=([2, 1, 1]))
in1Max82153 = tf.keras.layers.Input(shape=([2, 1, 1]))
in0Con95193 = tf.keras.layers.Input(shape=([2, 2, 3]))
in0Cro62415 = tf.keras.layers.Input(shape=([2, 2, 1]))
in0Con8123 = tf.keras.layers.Input(shape=([2, 2, 3]))
in0Con39499 = tf.keras.layers.Input(shape=([3, 3, 8]))
in0Dot92478 = tf.keras.layers.Input(shape=([2, 3]))
in1Dot92478 = tf.keras.layers.Input(shape=([2, 3]))
in0Con67702 = tf.keras.layers.Input(shape=([3, 3, 11]))
in0Zer61329 = tf.keras.layers.Input(shape=([4, 4, 4, 2]))

Con44132 = keras.layers.Conv3DTranspose(4, (2, 2, 1),strides=(1, 1, 1), padding='same', name = 'Con44132', )(in0Con44132)
Res60390 = keras.layers.Reshape((2, 2, 4), name = 'Res60390', )(Con44132)
Max82153 = keras.layers.Maximum(name = 'Max82153', )([in0Max82153,in1Max82153])
Zer70225 = keras.layers.ZeroPadding2D(padding=((0, 0), (1, 0)), name = 'Zer70225', )(Max82153)
Con95193 = keras.layers.Concatenate(axis=3, name = 'Con95193', )([Zer70225,in0Con95193])
Ave33246 = keras.layers.Average(name = 'Ave33246', )([Res60390,Con95193])
Cro62415 = keras.layers.Cropping2D(cropping=((0, 1), (1, 0)), name = 'Cro62415', )(in0Cro62415)
Zer88240 = keras.layers.ZeroPadding2D(padding=((1, 0), (1, 0)), name = 'Zer88240', )(Cro62415)
Con8123 = keras.layers.Concatenate(axis=3, name = 'Con8123', )([Zer88240,in0Con8123])
Mul89067 = keras.layers.Multiply(name = 'Mul89067', )([Ave33246,Con8123])
Zer28677 = keras.layers.ZeroPadding2D(padding=((1, 0), (1, 0)), name = 'Zer28677', )(Mul89067)
Con39499 = keras.layers.Concatenate(axis=3, name = 'Con39499', )([Zer28677,in0Con39499])
Dot92478 = keras.layers.Dot(axes=(1, 1), name = 'Dot92478', )([in0Dot92478,in1Dot92478])
Res36186 = keras.layers.Reshape((3, 3, 1), name = 'Res36186', )(Dot92478)
Con67702 = keras.layers.Concatenate(axis=3, name = 'Con67702', )([Res36186,in0Con67702])
Zer61329 = keras.layers.ZeroPadding3D(padding=((1, 1), (1, 1), (1, 1)), name = 'Zer61329', )(in0Zer61329)
Res54436 = keras.layers.Reshape((6, 6, 12), name = 'Res54436', )(Zer61329)
Dep25835 = keras.layers.DepthwiseConv2D((4, 5),strides=(6, 6), padding='same', name = 'Dep25835', )(Res54436)
Zer60117 = keras.layers.ZeroPadding2D(padding=((1, 1), (1, 1)), name = 'Zer60117', )(Dep25835)
Max26893 = keras.layers.Maximum(name = 'Max26893', )([Con67702,Zer60117])
Min32563 = keras.layers.Minimum(name = 'Min32563', )([Con39499,Max26893])
model = tf.keras.models.Model(inputs=[in0Con44132,in0Max82153,in1Max82153,in0Con95193,in0Cro62415,in0Con8123,in0Con39499,in0Dot92478,in1Dot92478,in0Con67702,in0Zer61329], outputs=Min32563)
w = model.get_layer('Con44132').get_weights() 
w[0] = np.array([[[[[0.4249], [0.0192], [0.6366], [0.3695]]], [[[0.2779], [0.0363], [0.4854], [0.191]]]], [[[[0.1677], [0.0757], [0.3034], [0.8605]]], [[[0.0425], [0.6794], [0.5198], [0.327]]]]])
w[1] = np.array([0, 0, 0, 0])
model.get_layer('Con44132').set_weights(w) 
w = model.get_layer('Dep25835').get_weights() 
w[0] = np.array([[[[0.6018], [0.1615], [0.382], [0.6724], [0.6129], [0.6826], [0.0979], [0.0727], [0.3944], [0.5729], [0.6885], [0.4351]], [[0.6592], [0.8798], [0.4021], [0.7769], [0.1752], [0.4336], [0.1997], [0.2091], [0.8605], [0.2078], [0.8476], [0.461]], [[0.3299], [0.7062], [0.5087], [0.208], [0.533], [0.6048], [0.0255], [0.7679], [0.4617], [0.3395], [0.5045], [0.3988]], [[0.64], [0.4546], [0.124], [0.2586], [0.2575], [0.3065], [0.3142], [0.0669], [0.3577], [0.1473], [0.5877], [0.6467]], [[0.452], [0.7096], [0.3328], [0.8196], [0.2937], [0.1554], [0.8276], [0.5759], [0.3153], [0.6597], [0.5783], [0.049]]], [[[0.4129], [0.9558], [0.8431], [0.5855], [0.3403], [0.887], [0.8606], [0.1227], [0.9679], [0.3807], [0.8725], [0.1569]], [[0.0552], [0.2896], [0.5025], [0.8228], [0.9874], [0.2286], [0.4319], [0.9865], [0.1372], [0.8778], [0.6012], [0.8022]], [[0.1218], [0.2182], [0.3579], [0.8808], [0.2531], [0.8207], [0.0681], [0.0775], [0.8975], [0.6174], [0.7174], [0.9147]], [[0.3025], [0.5522], [0.9354], [0.8288], [0.6805], [0.1275], [0.6959], [0.7523], [0.9894], [0.143], [0.6689], [0.0255]], [[0.8999], [0.8579], [0.8304], [0.2698], [0.8978], [0.3969], [0.4727], [0.6467], [0.3328], [0.4701], [0.1973], [0.8794]]], [[[0.4981], [0.3767], [0.8269], [0.5183], [0.4997], [0.8254], [0.4208], [0.1956], [0.7579], [0.3181], [0.7451], [0.033]], [[0.4736], [0.7164], [0.6138], [0.9401], [0.286], [0.138], [0.4895], [0.2757], [0.6517], [0.5163], [0.6153], [0.2288]], [[0.1822], [0.9946], [0.7333], [0.3216], [0.2908], [0.8266], [0.1373], [0.6369], [0.0214], [0.6057], [0.4083], [0.7283]], [[0.8579], [0.4556], [0.6838], [0.6847], [0.6457], [0.2829], [0.7242], [0.4896], [0.4963], [0.3097], [0.3567], [0.6401]], [[0.692], [0.8884], [0.1011], [0.9729], [0.1579], [0.0301], [0.9109], [0.7821], [0.0292], [0.1719], [0.0006], [0.607]]], [[[0.2023], [0.456], [0.6712], [0.5189], [0.5325], [0.1931], [0.895], [0.342], [0.5147], [0.2471], [0.1761], [0.0064]], [[0.8691], [0.7894], [0.8634], [0.15], [0.4413], [0.247], [0.6605], [0.161], [0.2221], [0.2935], [0.5516], [0.0856]], [[0.0952], [0.4195], [0.7401], [0.2107], [0.1274], [0.9586], [0.4854], [0.6774], [0.8315], [0.4404], [0.9129], [0.1806]], [[0.8509], [0.7998], [0.9747], [0.6672], [0.9445], [0.2761], [0.7383], [0.9553], [0.98], [0.8056], [0.0972], [0.3702]], [[0.8859], [0.331], [0.8096], [0.8145], [0.1564], [0.7296], [0.4997], [0.1721], [0.5556], [0.9976], [0.8815], [0.5854]]]])
w[1] = np.array([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0])
model.get_layer('Dep25835').set_weights(w) 
in0Con44132 = tf.constant([[[[[0.3645]], [[0.3165]]], [[[0.5769]], [[0.3479]]]]])
in0Max82153 = tf.constant([[[[0.1465]], [[0.3705]]]])
in1Max82153 = tf.constant([[[[0.6]], [[0.1416]]]])
in0Con95193 = tf.constant([[[[0.5116, 0.224, 0.855], [0.0392, 0.1902, 0.6992]], [[0.0621, 0.5984, 0.8157], [0.6713, 0.7433, 0.796]]]])
in0Cro62415 = tf.constant([[[[1.7496], [1.8538]], [[1.7128], [1.4039]]]])
in0Con8123 = tf.constant([[[[0.8084, 0.4865, 0.8607], [0.6051, 0.7895, 0.8764]], [[0.9948, 0.9821, 0.2734], [0.104, 0.6858, 0.7955]]]])
in0Con39499 = tf.constant([[[[0.9647, 0.6541, 0.9051, 0.7155, 0.2264, 0.5022, 0.4606, 0.8832], [0.3054, 0.4204, 0.5283, 0.7907, 0.5156, 0.4335, 0.5079, 0.5404], [0.1002, 0.0963, 0.8795, 0.2125, 0.2732, 0.8301, 0.9365, 0.0252]], [[0.7468, 0.5133, 0.6304, 0.5721, 0.7275, 0.9107, 0.5328, 0.0715], [0.5971, 0.7382, 0.6662, 0.92, 0.0146, 0.9032, 0.489, 0.2215], [0.9699, 0.7353, 0.6342, 0.3819, 0.3998, 0.8271, 0.096, 0.302]], [[0.3396, 0.4426, 0.4317, 0.1836, 0.2214, 0.3178, 0.2084, 0.4667], [0.857, 0.0791, 0.3579, 0.9618, 0.8431, 0.4337, 0.3262, 0.8079], [0.6161, 0.7499, 0.9019, 0.4909, 0.1482, 0.6377, 0.3937, 0.7929]]]])
in0Dot92478 = tf.constant([[[0.5209, 0.9622, 0.2774], [0.4208, 0.1488, 0.2122]]])
in1Dot92478 = tf.constant([[[1, 0.0543, 0.7311], [0.9155, 0.6617, 0.3564]]])
in0Con67702 = tf.constant([[[[0.1135, 0.5536, 0.9418, 0.3694, 0.8829, 0.3639, 0.4318, 0.7797, 0.2871, 0.4936, 0.1656], [0.6507, 0.9497, 0.7182, 0.975, 0.4428, 0.1914, 0.4012, 0.247, 0.0925, 0.135, 0.0901], [0.3438, 0.5986, 0.7228, 0.7432, 0.8887, 0.1715, 0.6031, 0.6276, 0.4273, 0.3217, 0.1724]], [[0.3904, 0.3827, 0.9372, 0.8012, 0.9333, 0.5414, 0.2173, 0.4154, 0.494, 0.531, 0.3204], [0.1594, 0.7755, 0.8789, 0.7129, 0.8216, 0.0533, 0.279, 0.5064, 0.07, 0.9395, 0.6352], [0.5175, 0.3157, 0.8832, 0.2988, 0.3912, 0.1969, 0.5503, 0.6722, 0.8932, 0.262, 0.9372]], [[0.0121, 0.3924, 0.4169, 0.4484, 0.8336, 0.634, 0.0992, 0.1945, 0.7892, 0.1315, 0.9422], [0.4518, 0.2761, 0.8953, 0.9009, 0.567, 0.3144, 0.7597, 0.4257, 0.5849, 0.4271, 0.2696], [0.2892, 0.5336, 0.354, 0.9448, 0.1009, 0.6078, 0.436, 0.7531, 0.3744, 0.4595, 0.417]]]])
in0Zer61329 = tf.constant([[[[[1.0542, 1.0738], [1.814, 1.0651], [1.8597, 1.1699], [1.7741, 1.6139]], [[1.3476, 1.5579], [1.0598, 1.9704], [1.5452, 1.5462], [1.611, 1.9634]], [[1.4579, 1.8084], [1.757, 1.7507], [1.1085, 1.4598], [1.9125, 1.7376]], [[1.6728, 1.9923], [1.4098, 1.5612], [1.9216, 1.2729], [1.7081, 1.7255]]], [[[1.0924, 1.9807], [1.4608, 1.0915], [1.1303, 1.1828], [1.5662, 1.7062]], [[1.9619, 1.2297], [1.3796, 1.3887], [1.0952, 1.7894], [1.7225, 1.0822]], [[1.3747, 1.633], [1.1879, 1.2273], [1.1646, 1.7361], [1.5139, 1.3177]], [[1.5801, 1.3634], [1.4705, 1.3551], [1.6412, 1.0706], [1.7924, 1.1396]]], [[[1.3879, 1.9746], [1.1742, 1.2009], [1.0575, 1.2172], [1.2462, 1.7077]], [[1.4051, 1.282], [1.7447, 1.8721], [1.1216, 1.7081], [1.8031, 1.212]], [[1.0947, 1.792], [1.4026, 1.5275], [1.9483, 1.0659], [1.5414, 1.6031]], [[1.8943, 1.6996], [1.6092, 1.4554], [1.4375, 1.4837], [1.7857, 1.4136]]], [[[1.8828, 1.7236], [1.0226, 1.4397], [1.9138, 1.1953], [1.3114, 1.877]], [[1.7335, 1.2991], [1.4951, 1.2459], [1.3899, 1.6822], [1.8351, 1.8013]], [[1.9421, 1.8968], [1.9132, 1.309], [1.0689, 1.1102], [1.2165, 1.9044]], [[1.5675, 1.4885], [1.9301, 1.9557], [1.946, 1.6412], [1.0469, 1.5683]]]]])
print (np.array2string(model.predict([in0Con44132,in0Max82153,in1Max82153,in0Con95193,in0Cro62415,in0Con8123,in0Con39499,in0Dot92478,in1Dot92478,in0Con67702,in0Zer61329],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Min32563.png')

LCon44132 = conv3D_transpose_layer([[[[[0.3645]], [[0.3165]]], [[[0.5769]], [[0.3479]]]]], 2, 2, 1,[[[[[0.4249], [0.0192], [0.6366], [0.3695]]], [[[0.2779], [0.0363], [0.4854], [0.191]]]], [[[[0.1677], [0.0757], [0.3034], [0.8605]]], [[[0.0425], [0.6794], [0.5198], [0.327]]]]],[0, 0, 0, 0], 1, 1, 1, true, Con44132), 
LRes60390 = reshape_layer(Con44132, [2, 2, 4], Res60390), 
LMax82153 = maximum_layer([[[[[0.1465]], [[0.3705]]]], [[[[0.6]], [[0.1416]]]]], Max82153), 
LZer70225 = zero_padding2D_layer(Max82153, 0, 0, 1, 0, Zer70225), 
LCon95193 = concatenate_layer([Zer70225,[[[[0.5116, 0.224, 0.855], [0.0392, 0.1902, 0.6992]], [[0.0621, 0.5984, 0.8157], [0.6713, 0.7433, 0.796]]]]], 3, Con95193), 
LAve33246 = average_layer([Res60390,Con95193], Ave33246), 
LCro62415 = cropping2D_layer([[[[1.7496], [1.8538]], [[1.7128], [1.4039]]]], 0, 1, 1, 0, Cro62415), 
LZer88240 = zero_padding2D_layer(Cro62415, 1, 0, 1, 0, Zer88240), 
LCon8123 = concatenate_layer([Zer88240,[[[[0.8084, 0.4865, 0.8607], [0.6051, 0.7895, 0.8764]], [[0.9948, 0.9821, 0.2734], [0.104, 0.6858, 0.7955]]]]], 3, Con8123), 
LMul89067 = multiply_layer([Ave33246,Con8123], Mul89067), 
LZer28677 = zero_padding2D_layer(Mul89067, 1, 0, 1, 0, Zer28677), 
LCon39499 = concatenate_layer([Zer28677,[[[[0.9647, 0.6541, 0.9051, 0.7155, 0.2264, 0.5022, 0.4606, 0.8832], [0.3054, 0.4204, 0.5283, 0.7907, 0.5156, 0.4335, 0.5079, 0.5404], [0.1002, 0.0963, 0.8795, 0.2125, 0.2732, 0.8301, 0.9365, 0.0252]], [[0.7468, 0.5133, 0.6304, 0.5721, 0.7275, 0.9107, 0.5328, 0.0715], [0.5971, 0.7382, 0.6662, 0.92, 0.0146, 0.9032, 0.489, 0.2215], [0.9699, 0.7353, 0.6342, 0.3819, 0.3998, 0.8271, 0.096, 0.302]], [[0.3396, 0.4426, 0.4317, 0.1836, 0.2214, 0.3178, 0.2084, 0.4667], [0.857, 0.0791, 0.3579, 0.9618, 0.8431, 0.4337, 0.3262, 0.8079], [0.6161, 0.7499, 0.9019, 0.4909, 0.1482, 0.6377, 0.3937, 0.7929]]]]], 3, Con39499), 
LDot92478 = dot_layer([[[0.5209, 0.9622, 0.2774], [0.4208, 0.1488, 0.2122]]], [[[1, 0.0543, 0.7311], [0.9155, 0.6617, 0.3564]]], 1, 1, Dot92478), 
LRes36186 = reshape_layer(Dot92478, [3, 3, 1], Res36186), 
LCon67702 = concatenate_layer([Res36186,[[[[0.1135, 0.5536, 0.9418, 0.3694, 0.8829, 0.3639, 0.4318, 0.7797, 0.2871, 0.4936, 0.1656], [0.6507, 0.9497, 0.7182, 0.975, 0.4428, 0.1914, 0.4012, 0.247, 0.0925, 0.135, 0.0901], [0.3438, 0.5986, 0.7228, 0.7432, 0.8887, 0.1715, 0.6031, 0.6276, 0.4273, 0.3217, 0.1724]], [[0.3904, 0.3827, 0.9372, 0.8012, 0.9333, 0.5414, 0.2173, 0.4154, 0.494, 0.531, 0.3204], [0.1594, 0.7755, 0.8789, 0.7129, 0.8216, 0.0533, 0.279, 0.5064, 0.07, 0.9395, 0.6352], [0.5175, 0.3157, 0.8832, 0.2988, 0.3912, 0.1969, 0.5503, 0.6722, 0.8932, 0.262, 0.9372]], [[0.0121, 0.3924, 0.4169, 0.4484, 0.8336, 0.634, 0.0992, 0.1945, 0.7892, 0.1315, 0.9422], [0.4518, 0.2761, 0.8953, 0.9009, 0.567, 0.3144, 0.7597, 0.4257, 0.5849, 0.4271, 0.2696], [0.2892, 0.5336, 0.354, 0.9448, 0.1009, 0.6078, 0.436, 0.7531, 0.3744, 0.4595, 0.417]]]]], 3, Con67702), 
LZer61329 = zero_padding3D_layer([[[[[1.0542, 1.0738], [1.814, 1.0651], [1.8597, 1.1699], [1.7741, 1.6139]], [[1.3476, 1.5579], [1.0598, 1.9704], [1.5452, 1.5462], [1.611, 1.9634]], [[1.4579, 1.8084], [1.757, 1.7507], [1.1085, 1.4598], [1.9125, 1.7376]], [[1.6728, 1.9923], [1.4098, 1.5612], [1.9216, 1.2729], [1.7081, 1.7255]]], [[[1.0924, 1.9807], [1.4608, 1.0915], [1.1303, 1.1828], [1.5662, 1.7062]], [[1.9619, 1.2297], [1.3796, 1.3887], [1.0952, 1.7894], [1.7225, 1.0822]], [[1.3747, 1.633], [1.1879, 1.2273], [1.1646, 1.7361], [1.5139, 1.3177]], [[1.5801, 1.3634], [1.4705, 1.3551], [1.6412, 1.0706], [1.7924, 1.1396]]], [[[1.3879, 1.9746], [1.1742, 1.2009], [1.0575, 1.2172], [1.2462, 1.7077]], [[1.4051, 1.282], [1.7447, 1.8721], [1.1216, 1.7081], [1.8031, 1.212]], [[1.0947, 1.792], [1.4026, 1.5275], [1.9483, 1.0659], [1.5414, 1.6031]], [[1.8943, 1.6996], [1.6092, 1.4554], [1.4375, 1.4837], [1.7857, 1.4136]]], [[[1.8828, 1.7236], [1.0226, 1.4397], [1.9138, 1.1953], [1.3114, 1.877]], [[1.7335, 1.2991], [1.4951, 1.2459], [1.3899, 1.6822], [1.8351, 1.8013]], [[1.9421, 1.8968], [1.9132, 1.309], [1.0689, 1.1102], [1.2165, 1.9044]], [[1.5675, 1.4885], [1.9301, 1.9557], [1.946, 1.6412], [1.0469, 1.5683]]]]], 1, 1, 1, 1, 1, 1, Zer61329), 
LRes54436 = reshape_layer(Zer61329, [6, 6, 12], Res54436), 
LDep25835 = depthwise_conv2D_layer(Res54436, 4, 5,[[[[0.6018], [0.1615], [0.382], [0.6724], [0.6129], [0.6826], [0.0979], [0.0727], [0.3944], [0.5729], [0.6885], [0.4351]], [[0.6592], [0.8798], [0.4021], [0.7769], [0.1752], [0.4336], [0.1997], [0.2091], [0.8605], [0.2078], [0.8476], [0.461]], [[0.3299], [0.7062], [0.5087], [0.208], [0.533], [0.6048], [0.0255], [0.7679], [0.4617], [0.3395], [0.5045], [0.3988]], [[0.64], [0.4546], [0.124], [0.2586], [0.2575], [0.3065], [0.3142], [0.0669], [0.3577], [0.1473], [0.5877], [0.6467]], [[0.452], [0.7096], [0.3328], [0.8196], [0.2937], [0.1554], [0.8276], [0.5759], [0.3153], [0.6597], [0.5783], [0.049]]], [[[0.4129], [0.9558], [0.8431], [0.5855], [0.3403], [0.887], [0.8606], [0.1227], [0.9679], [0.3807], [0.8725], [0.1569]], [[0.0552], [0.2896], [0.5025], [0.8228], [0.9874], [0.2286], [0.4319], [0.9865], [0.1372], [0.8778], [0.6012], [0.8022]], [[0.1218], [0.2182], [0.3579], [0.8808], [0.2531], [0.8207], [0.0681], [0.0775], [0.8975], [0.6174], [0.7174], [0.9147]], [[0.3025], [0.5522], [0.9354], [0.8288], [0.6805], [0.1275], [0.6959], [0.7523], [0.9894], [0.143], [0.6689], [0.0255]], [[0.8999], [0.8579], [0.8304], [0.2698], [0.8978], [0.3969], [0.4727], [0.6467], [0.3328], [0.4701], [0.1973], [0.8794]]], [[[0.4981], [0.3767], [0.8269], [0.5183], [0.4997], [0.8254], [0.4208], [0.1956], [0.7579], [0.3181], [0.7451], [0.033]], [[0.4736], [0.7164], [0.6138], [0.9401], [0.286], [0.138], [0.4895], [0.2757], [0.6517], [0.5163], [0.6153], [0.2288]], [[0.1822], [0.9946], [0.7333], [0.3216], [0.2908], [0.8266], [0.1373], [0.6369], [0.0214], [0.6057], [0.4083], [0.7283]], [[0.8579], [0.4556], [0.6838], [0.6847], [0.6457], [0.2829], [0.7242], [0.4896], [0.4963], [0.3097], [0.3567], [0.6401]], [[0.692], [0.8884], [0.1011], [0.9729], [0.1579], [0.0301], [0.9109], [0.7821], [0.0292], [0.1719], [0.0006], [0.607]]], [[[0.2023], [0.456], [0.6712], [0.5189], [0.5325], [0.1931], [0.895], [0.342], [0.5147], [0.2471], [0.1761], [0.0064]], [[0.8691], [0.7894], [0.8634], [0.15], [0.4413], [0.247], [0.6605], [0.161], [0.2221], [0.2935], [0.5516], [0.0856]], [[0.0952], [0.4195], [0.7401], [0.2107], [0.1274], [0.9586], [0.4854], [0.6774], [0.8315], [0.4404], [0.9129], [0.1806]], [[0.8509], [0.7998], [0.9747], [0.6672], [0.9445], [0.2761], [0.7383], [0.9553], [0.98], [0.8056], [0.0972], [0.3702]], [[0.8859], [0.331], [0.8096], [0.8145], [0.1564], [0.7296], [0.4997], [0.1721], [0.5556], [0.9976], [0.8815], [0.5854]]]],[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 6, 6, true, Dep25835), 
LZer60117 = zero_padding2D_layer(Dep25835, 1, 1, 1, 1, Zer60117), 
LMax26893 = maximum_layer([Con67702,Zer60117], Max26893), 
LMin32563 = minimum_layer([Con39499,Max26893], Min32563), 
exec_layers([LCon44132,LRes60390,LMax82153,LZer70225,LCon95193,LAve33246,LCro62415,LZer88240,LCon8123,LMul89067,LZer28677,LCon39499,LDot92478,LRes36186,LCon67702,LZer61329,LRes54436,LDep25835,LZer60117,LMax26893,LMin32563],["Con44132","Res60390","Max82153","Zer70225","Con95193","Ave33246","Cro62415","Zer88240","Con8123","Mul89067","Zer28677","Con39499","Dot92478","Res36186","Con67702","Zer61329","Res54436","Dep25835","Zer60117","Max26893","Min32563"],Min32563,"Min32563")

Actual (Unparsed): [[[[0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.3694000, 0.6541000, 0.3639000, 0.4318000, 0.2264000, 0.2871000, 0.4606000, 0.1656000], [0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.3054000, 0.4204000, 0.1914000, 0.4012000, 0.2470000, 0.0925000, 0.1350000, 0.0901000], [0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.1002000, 0.0963000, 0.1715000, 0.2125000, 0.2732000, 0.4273000, 0.3217000, 0.0252000]], [[0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.7468000, 0.5133000, 0.5414000, 0.2173000, 0.4154000, 0.4940000, 0.5310000, 0.0715000], [0.0000000, 0.1594000, 0.1109319, 0.4259100, 0.5971000, 0.7382000, 0.6662000, 0.9200000, 0.0146000, 0.9032000, 0.4890000, 0.2215000], [0.0000000, 0.0177016, 0.2244597, 0.3881428, 0.2988000, 0.3912000, 0.1969000, 0.3819000, 0.3998000, 0.8271000, 0.0960000, 0.3020000]], [[0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.3396000, 0.4426000, 0.4317000, 0.0992000, 0.1945000, 0.3178000, 0.1315000, 0.4667000], [0.0000000, 0.0501226, 0.2761000, 0.1835221, 0.8570000, 0.0791000, 0.3144000, 0.7597000, 0.4257000, 0.4337000, 0.3262000, 0.2696000], [0.2784352, 0.0504671, 0.5247377, 0.3540000, 0.6161000, 0.1009000, 0.6078000, 0.4360000, 0.1482000, 0.3744000, 0.3937000, 0.4170000]]]]

Expected (Unparsed): [[[[0,0,0,0,0.3694,0.6541,0.3639,0.4318,0.2264,0.2871,0.4606,0.1656],[0,0,0,0,0.3054,0.4204,0.1914,0.4012,0.247,0.0925,0.135,0.0901],[0,0,0,0,0.1002,0.0963,0.1715,0.2125,0.2732,0.4273,0.3217,0.0252]],[[0,0,0,0,0.7468,0.5133,0.5414,0.2173,0.4154,0.494,0.531,0.0715],[0.0,0.1594,0.11093190027500001,0.4259099714625,0.5971,0.7382,0.6662,0.92,0.0146,0.9032,0.489,0.2215],[0.0,0.017701640782499996,0.22445966595,0.38814277075000003,0.2988,0.3912,0.1969,0.3819,0.3998,0.8271,0.096,0.302]],[[0,0,0,0,0.3396,0.4426,0.4317,0.0992,0.1945,0.3178,0.1315,0.4667],[0.0,0.050122565262,0.2761,0.18352204655999996,0.857,0.0791,0.3144,0.7597,0.4257,0.4337,0.3262,0.2696],[0.27843522,0.050467118,0.5247376754399999,0.354,0.6161,0.1009,0.6078,0.436,0.1482,0.3744,0.3937,0.417]]]]

Actual:   [[[[0, 0, 0, 0, 0.3694, 0.6541, 0.3639, 0.4318, 0.2264, 0.2871, 0.4606, 0.1656], [0, 0, 0, 0, 0.3054, 0.4204, 0.1914, 0.4012, 0.247, 0.0925, 0.135, 0.0901], [0, 0, 0, 0, 0.1002, 0.0963, 0.1715, 0.2125, 0.2732, 0.4273, 0.3217, 0.0252]], [[0, 0, 0, 0, 0.7468, 0.5133, 0.5414, 0.2173, 0.4154, 0.494, 0.531, 0.0715], [0, 0.1594, 0.111, 0.426, 0.5971, 0.7382, 0.6662, 0.92, 0.0146, 0.9032, 0.489, 0.2215], [0, 0.0178, 0.2245, 0.3882, 0.2988, 0.3912, 0.1969, 0.3819, 0.3998, 0.8271, 0.096, 0.302]], [[0, 0, 0, 0, 0.3396, 0.4426, 0.4317, 0.0992, 0.1945, 0.3178, 0.1315, 0.4667], [0, 0.0502, 0.2761, 0.1836, 0.857, 0.0791, 0.3144, 0.7597, 0.4257, 0.4337, 0.3262, 0.2696], [0.2785, 0.0505, 0.5248, 0.354, 0.6161, 0.1009, 0.6078, 0.436, 0.1482, 0.3744, 0.3937, 0.417]]]]

Expected: [[[[0, 0, 0, 0, 0.3694, 0.6541, 0.3639, 0.4318, 0.2264, 0.2871, 0.4606, 0.1656], [0, 0, 0, 0, 0.3054, 0.4204, 0.1914, 0.4012, 0.247, 0.0925, 0.135, 0.0901], [0, 0, 0, 0, 0.1002, 0.0963, 0.1715, 0.2125, 0.2732, 0.4273, 0.3217, 0.0252]], [[0, 0, 0, 0, 0.7468, 0.5133, 0.5414, 0.2173, 0.4154, 0.494, 0.531, 0.0715], [0, 0.1594, 0.111, 0.426, 0.5971, 0.7382, 0.6662, 0.92, 0.0146, 0.9032, 0.489, 0.2215], [0, 0.0178, 0.2245, 0.3882, 0.2988, 0.3912, 0.1969, 0.3819, 0.3998, 0.8271, 0.096, 0.302]], [[0, 0, 0, 0, 0.3396, 0.4426, 0.4317, 0.0992, 0.1945, 0.3178, 0.1315, 0.4667], [0, 0.0502, 0.2761, 0.1836, 0.857, 0.0791, 0.3144, 0.7597, 0.4257, 0.4337, 0.3262, 0.2696], [0.2785, 0.0505, 0.5248, 0.354, 0.6161, 0.1009, 0.6078, 0.436, 0.1482, 0.3744, 0.3937, 0.417]]]]