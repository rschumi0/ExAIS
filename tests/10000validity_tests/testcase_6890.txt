import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Sim60072 = tf.keras.layers.Input(shape=([3, 2]))

Sim60072 = keras.layers.SimpleRNN(2,name = 'Sim60072', )(in0Sim60072)
Thr93082 = keras.layers.ThresholdedReLU(theta=4.691252400431897, name = 'Thr93082', )(Sim60072)
model = tf.keras.models.Model(inputs=[in0Sim60072], outputs=Thr93082)
w = model.get_layer('Sim60072').get_weights() 
w[0] = np.array([[4, 7], [2, 1]])
w[1] = np.array([[4, 10], [7, 10]])
w[2] = np.array([2, 1])
model.get_layer('Sim60072').set_weights(w) 
in0Sim60072 = tf.constant([[[4, 1], [4, 10], [2, 3]]])
print (np.array2string(model.predict([in0Sim60072],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Thr93082.png')

LSim60072 = simple_rnn_layer([[[4, 1], [4, 10], [2, 3]]],[[4, 7], [2, 1]],[[4, 10], [7, 10]],[2, 1], Sim60072), 
LThr93082 = thresholded_relu_layer(Sim60072, 4.691252400431897, Thr93082), 
exec_layers([LSim60072,LThr93082],["Sim60072","Thr93082"],Thr93082,"Thr93082")

Actual (Unparsed): [[0.0000000, 0.0000000]]

Expected (Unparsed): [[0,0]]

Actual:   [[0, 0]]

Expected: [[0, 0]]