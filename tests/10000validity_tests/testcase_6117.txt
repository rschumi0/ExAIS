import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Min90089 = tf.keras.layers.Input(shape=([2, 2, 1, 2]))
in1Min90089 = tf.keras.layers.Input(shape=([2, 2, 1, 2]))
in0Con45368 = tf.keras.layers.Input(shape=([3, 1, 1]))
in0Con7169 = tf.keras.layers.Input(shape=([2, 1, 1]))
in0Max56778 = tf.keras.layers.Input(shape=([1, 1, 2]))
in0Con12366 = tf.keras.layers.Input(shape=([3, 3, 2]))

Min90089 = keras.layers.Minimum(name = 'Min90089', )([in0Min90089,in1Min90089])
Con96609 = keras.layers.Conv3DTranspose(2, (1, 1, 1),strides=(6, 1, 1), padding='valid', name = 'Con96609', )(Min90089)
Res78561 = keras.layers.Reshape((12, 2, 2), name = 'Res78561', )(Con96609)
Sep93294 = keras.layers.SeparableConv2D(3, (8, 2),strides=(4, 4), padding='same', name = 'Sep93294', )(Res78561)
Con45368 = keras.layers.Concatenate(axis=3, name = 'Con45368', )([Sep93294,in0Con45368])
Con7169 = keras.layers.Conv2DTranspose(4, (1, 1),strides=(1, 1), padding='same', name = 'Con7169', )(in0Con7169)
Zer86014 = keras.layers.ZeroPadding2D(padding=((1, 0), (0, 0)), name = 'Zer86014', )(Con7169)
Max24081 = keras.layers.Maximum(name = 'Max24081', )([Con45368,Zer86014])
Zer27104 = keras.layers.ZeroPadding2D(padding=((0, 0), (2, 0)), name = 'Zer27104', )(Max24081)
Max56778 = keras.layers.MaxPool2D(pool_size=(1, 1), name = 'Max56778', )(in0Max56778)
Up_59927 = keras.layers.UpSampling2D(size=(1, 2), name = 'Up_59927', )(Max56778)
Zer86114 = keras.layers.ZeroPadding2D(padding=((2, 0), (1, 0)), name = 'Zer86114', )(Up_59927)
Con12366 = keras.layers.Concatenate(axis=3, name = 'Con12366', )([Zer86114,in0Con12366])
Add29557 = keras.layers.Add(name = 'Add29557', )([Zer27104,Con12366])
model = tf.keras.models.Model(inputs=[in0Min90089,in1Min90089,in0Con45368,in0Con7169,in0Max56778,in0Con12366], outputs=Add29557)
w = model.get_layer('Con96609').get_weights() 
w[0] = np.array([[[[[0.3158, 0.9131], [0.4163, 0.875]]]]])
w[1] = np.array([0, 0])
model.get_layer('Con96609').set_weights(w) 
w = model.get_layer('Sep93294').get_weights() 
w[0] = np.array([[[[0.8012], [0.6738]], [[0.5705], [0.226]]], [[[0.467], [0.6204]], [[0.882], [0.6174]]], [[[0.2794], [0.5356]], [[0.6783], [0.2235]]], [[[0.8112], [0.0666]], [[0.6881], [0.4153]]], [[[0.6994], [0.4645]], [[0.9858], [0.6391]]], [[[0.9834], [0.4281]], [[0.7126], [0.4432]]], [[[0.0819], [0.1315]], [[0.7531], [0.0397]]], [[[0.6975], [0.0955]], [[0.6453], [0.9309]]]])
w[1] = np.array([[[[0.6101, 0.6189, 0.7637], [0.8786, 0.7518, 0.8661]]]])
w[2] = np.array([0, 0, 0])
model.get_layer('Sep93294').set_weights(w) 
w = model.get_layer('Con7169').get_weights() 
w[0] = np.array([[[[0.8355], [0.5844], [0.8951], [0.529]]]])
w[1] = np.array([0, 0, 0, 0])
model.get_layer('Con7169').set_weights(w) 
in0Min90089 = tf.constant([[[[[0.2395, 0.0766]], [[0.4487, 0.9241]]], [[[0.4212, 0.2689]], [[0.6877, 0.9254]]]]])
in1Min90089 = tf.constant([[[[[0.2225, 0.0471]], [[0.4235, 0.5165]]], [[[0.8685, 0.0548]], [[0.2381, 0.7791]]]]])
in0Con45368 = tf.constant([[[[0.4936]], [[0.9276]], [[0.4386]]]])
in0Con7169 = tf.constant([[[[0.7893]], [[0.8934]]]])
in0Max56778 = tf.constant([[[[1.0969, 1.4299]]]])
in0Con12366 = tf.constant([[[[0.0204, 0.8714], [0.6928, 0.5497], [0.016, 0.8875]], [[0.3486, 0.0122], [0.5707, 0.2225], [0.5574, 0.1423]], [[0.8859, 0.2408], [0.0039, 0.7792], [0.298, 0.4727]]]])
print (np.array2string(model.predict([in0Min90089,in1Min90089,in0Con45368,in0Con7169,in0Max56778,in0Con12366],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Add29557.png')

LMin90089 = minimum_layer([[[[[[0.2395, 0.0766]], [[0.4487, 0.9241]]], [[[0.4212, 0.2689]], [[0.6877, 0.9254]]]]], [[[[[0.2225, 0.0471]], [[0.4235, 0.5165]]], [[[0.8685, 0.0548]], [[0.2381, 0.7791]]]]]], Min90089), 
LCon96609 = conv3D_transpose_layer(Min90089, 1, 1, 1,[[[[[0.3158, 0.9131], [0.4163, 0.875]]]]],[0, 0], 6, 1, 1, false, Con96609), 
LRes78561 = reshape_layer(Con96609, [12, 2, 2], Res78561), 
LSep93294 = separable_conv2D_layer(Res78561, 8, 2,[[[[[0.8012], [0.6738]], [[0.5705], [0.226]]], [[[0.467], [0.6204]], [[0.882], [0.6174]]], [[[0.2794], [0.5356]], [[0.6783], [0.2235]]], [[[0.8112], [0.0666]], [[0.6881], [0.4153]]], [[[0.6994], [0.4645]], [[0.9858], [0.6391]]], [[[0.9834], [0.4281]], [[0.7126], [0.4432]]], [[[0.0819], [0.1315]], [[0.7531], [0.0397]]], [[[0.6975], [0.0955]], [[0.6453], [0.9309]]]],[[[[0.6101, 0.6189, 0.7637], [0.8786, 0.7518, 0.8661]]]]],[0, 0, 0], 4, 4, true, Sep93294), 
LCon45368 = concatenate_layer([Sep93294,[[[[0.4936]], [[0.9276]], [[0.4386]]]]], 3, Con45368), 
LCon7169 = conv2D_transpose_layer([[[[0.7893]], [[0.8934]]]], 1, 1,[[[[0.8355], [0.5844], [0.8951], [0.529]]]],[0, 0, 0, 0], 1, 1, true, Con7169), 
LZer86014 = zero_padding2D_layer(Con7169, 1, 0, 0, 0, Zer86014), 
LMax24081 = maximum_layer([Con45368,Zer86014], Max24081), 
LZer27104 = zero_padding2D_layer(Max24081, 0, 0, 2, 0, Zer27104), 
LMax56778 = max_pool2D_layer([[[[1.0969, 1.4299]]]], 1, 1, Max56778), 
LUp_59927 = up_sampling2D_layer(Max56778, 1, 2, Up_59927), 
LZer86114 = zero_padding2D_layer(Up_59927, 2, 0, 1, 0, Zer86114), 
LCon12366 = concatenate_layer([Zer86114,[[[[0.0204, 0.8714], [0.6928, 0.5497], [0.016, 0.8875]], [[0.3486, 0.0122], [0.5707, 0.2225], [0.5574, 0.1423]], [[0.8859, 0.2408], [0.0039, 0.7792], [0.298, 0.4727]]]]], 3, Con12366), 
LAdd29557 = add_layer([Zer27104,Con12366], Add29557), 
exec_layers([LMin90089,LCon96609,LRes78561,LSep93294,LCon45368,LCon7169,LZer86014,LMax24081,LZer27104,LMax56778,LUp_59927,LZer86114,LCon12366,LAdd29557],["Min90089","Con96609","Res78561","Sep93294","Con45368","Con7169","Zer86014","Max24081","Zer27104","Max56778","Up_59927","Zer86114","Con12366","Add29557"],Add29557,"Add29557")

Actual (Unparsed): [[[[0.0000000, 0.0000000, 0.0204000, 0.8714000], [0.0000000, 0.0000000, 0.6928000, 0.5497000], [0.4561718, 0.4331700, 0.5374521, 1.3811000]], [[0.0000000, 0.0000000, 0.3486000, 0.0122000], [0.0000000, 0.0000000, 0.5707000, 0.2225000], [1.0807698, 1.0122912, 1.7694046, 1.0699000]], [[0.0000000, 0.0000000, 0.8859000, 0.2408000], [1.0969000, 1.4299001, 0.0039000, 0.7792000], [1.8433357, 2.0441818, 1.0976824, 0.9453086]]]]

Expected (Unparsed): [[[[0,0,0.0204,0.8714],[0,0,0.6928,0.5497],[0.4561718306901379,0.43316995783874307,0.5374521187906398,1.3811]],[[0,0,0.3486,0.0122],[0,0,0.5707,0.2225],[1.0807697438687198,1.0122911770815697,1.769404624118775,1.0699]],[[0,0,0.8859,0.2408],[1.0969,1.4299,0.0039,0.7792],[1.8433357,2.0441817165382714,1.09768234,0.9453085999999999]]]]

Actual:   [[[[0, 0, 0.0204, 0.8714], [0, 0, 0.6928, 0.5497], [0.4562, 0.4332, 0.5375, 1.3811]], [[0, 0, 0.3486, 0.0122], [0, 0, 0.5707, 0.2225], [1.0808, 1.0123, 1.7695, 1.0699]], [[0, 0, 0.8859, 0.2408], [1.0969, 1.43, 0.0039, 0.7792], [1.8434, 2.0442, 1.0977, 0.9454]]]]

Expected: [[[[0, 0, 0.0204, 0.8714], [0, 0, 0.6928, 0.5497], [0.4562, 0.4332, 0.5375, 1.3811]], [[0, 0, 0.3486, 0.0122], [0, 0, 0.5707, 0.2225], [1.0808, 1.0123, 1.7695, 1.0699]], [[0, 0, 0.8859, 0.2408], [1.0969, 1.4299, 0.0039, 0.7792], [1.8434, 2.0442, 1.0977, 0.9454]]]]