import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Glo52314 = tf.keras.layers.Input(shape=([2, 2]))

Glo52314 = keras.layers.GlobalAveragePooling1D(name = 'Glo52314', )(in0Glo52314)
Res24781 = keras.layers.Reshape((2, 1), name = 'Res24781', )(Glo52314)
Res46085 = keras.layers.Reshape((2, 1, 1), name = 'Res46085', )(Res24781)
Sep3347 = keras.layers.SeparableConv2D(2, (1, 1),strides=(1, 1), padding='valid', name = 'Sep3347', )(Res46085)
Lea45514 = keras.layers.LeakyReLU(alpha=9.24722250362328, name = 'Lea45514', )(Sep3347)
model = tf.keras.models.Model(inputs=[in0Glo52314], outputs=Lea45514)
w = model.get_layer('Sep3347').get_weights() 
w[0] = np.array([[[[0.1942]]]])
w[1] = np.array([[[[0.5605, 0.697]]]])
w[2] = np.array([0, 0])
model.get_layer('Sep3347').set_weights(w) 
in0Glo52314 = tf.constant([[[1.2015, 1.6773], [1.0418, 1.9353]]])
print (np.array2string(model.predict([in0Glo52314],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Lea45514.png')

LGlo52314 = global_average_pooling1D_layer([[[1.2015, 1.6773], [1.0418, 1.9353]]], Glo52314), 
LRes24781 = reshape_layer(Glo52314, [2, 1], Res24781), 
LRes46085 = reshape_layer(Res24781, [2, 1, 1], Res46085), 
LSep3347 = separable_conv2D_layer(Res46085, 1, 1,[[[[[0.1942]]]],[[[[0.5605, 0.697]]]]],[0, 0], 1, 1, false, Sep3347), 
LLea45514 = leaky_relu_layer(Sep3347, 9.24722250362328, Lea45514), 
exec_layers([LGlo52314,LRes24781,LRes46085,LSep3347,LLea45514],["Glo52314","Res24781","Res46085","Sep3347","Lea45514"],Lea45514,"Lea45514")

Actual (Unparsed): [[[[0.1220906, 0.1518236]], [[0.1966141, 0.2444961]]]]

Expected (Unparsed): [[[[0.12209059301500001,0.15182362771]],[[0.19661412933000003,0.24449607162]]]]

Actual:   [[[[0.1221, 0.1519]], [[0.1967, 0.2445]]]]

Expected: [[[[0.1221, 0.1519]], [[0.1967, 0.2445]]]]