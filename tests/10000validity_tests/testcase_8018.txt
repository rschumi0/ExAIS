import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Con33246 = tf.keras.layers.Input(shape=([1, 2, 2, 2]))
in0Mul3597 = tf.keras.layers.Input(shape=([2, 1]))
in1Mul3597 = tf.keras.layers.Input(shape=([2, 1]))
in0Con79658 = tf.keras.layers.Input(shape=([2, 11]))

Con33246 = keras.layers.Conv3DTranspose(2, (1, 1, 2),strides=(1, 1, 1), padding='valid', name = 'Con33246', )(in0Con33246)
Res50205 = keras.layers.Reshape((1, 2, 6), name = 'Res50205', )(Con33246)
Res31577 = keras.layers.Reshape((1, 12), name = 'Res31577', )(Res50205)
Up_55053 = keras.layers.UpSampling1D(size=(2), name = 'Up_55053', )(Res31577)
Mul3597 = keras.layers.Multiply(name = 'Mul3597', )([in0Mul3597,in1Mul3597])
Con79658 = keras.layers.Concatenate(axis=2, name = 'Con79658', )([Mul3597,in0Con79658])
Max81451 = keras.layers.Maximum(name = 'Max81451', )([Up_55053,Con79658])
model = tf.keras.models.Model(inputs=[in0Con33246,in0Mul3597,in1Mul3597,in0Con79658], outputs=Max81451)
w = model.get_layer('Con33246').get_weights() 
w[0] = np.array([[[[[0.6563, 0.0555], [0.982, 0.0025]], [[0.281, 0.6749], [0.7491, 0.7893]]]]])
w[1] = np.array([0, 0])
model.get_layer('Con33246').set_weights(w) 
in0Con33246 = tf.constant([[[[[0.0833, 0.6627], [0.6193, 0.0141]], [[0.9502, 0.4617], [0.9216, 0.2041]]]]])
in0Mul3597 = tf.constant([[[0.676], [0.8614]]])
in1Mul3597 = tf.constant([[[0.0479], [0.9557]]])
in0Con79658 = tf.constant([[[0.1702, 0.5735, 0.4662, 0.4697, 0.6771, 0.396, 0.818, 0.8276, 0.1456, 0.811, 0.8934], [0.1377, 0.8066, 0.8731, 0.9946, 0.4437, 0.1479, 0.6317, 0.5096, 0.289, 0.4333, 0.5243]]])
print (np.array2string(model.predict([in0Con33246,in0Mul3597,in1Mul3597,in0Con79658],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Max81451.png')

LCon33246 = conv3D_transpose_layer([[[[[0.0833, 0.6627], [0.6193, 0.0141]], [[0.9502, 0.4617], [0.9216, 0.2041]]]]], 1, 1, 2,[[[[[0.6563, 0.0555], [0.982, 0.0025]], [[0.281, 0.6749], [0.7491, 0.7893]]]]],[0, 0], 1, 1, 1, false, Con33246), 
LRes50205 = reshape_layer(Con33246, [1, 2, 6], Res50205), 
LRes31577 = reshape_layer(Res50205, [1, 12], Res31577), 
LUp_55053 = up_sampling1D_layer(Res31577, 2, Up_55053), 
LMul3597 = multiply_layer([[[[0.676], [0.8614]]], [[[0.0479], [0.9557]]]], Mul3597), 
LCon79658 = concatenate_layer([Mul3597,[[[0.1702, 0.5735, 0.4662, 0.4697, 0.6771, 0.396, 0.818, 0.8276, 0.1456, 0.811, 0.8934], [0.1377, 0.8066, 0.8731, 0.9946, 0.4437, 0.1479, 0.6317, 0.5096, 0.289, 0.4333, 0.5243]]]], 2, Con79658), 
LMax81451 = maximum_layer([Up_55053,Con79658], Max81451), 
exec_layers([LCon33246,LRes50205,LRes31577,LUp_55053,LMul3597,LCon79658,LMax81451],["Con33246","Res50205","Res31577","Up_55053","Mul3597","Con79658","Max81451"],Max81451,"Max81451")

Actual (Unparsed): [[[0.0914496, 0.1702000, 0.8778927, 1.1936570, 0.4697000, 0.6771000, 0.6492406, 0.9342507, 1.1947812, 1.9817361, 0.8110000, 0.8934000], [0.8232400, 0.1377000, 0.8778927, 1.1936570, 0.9946000, 0.4750468, 0.6492406, 0.9342507, 1.1947812, 1.9817361, 0.4333000, 0.8514667]]]

Expected (Unparsed): [[[0.09144964,0.1702,0.87789267,1.19365699,0.4697,0.6771,0.64924061,0.9342506500000001,1.19478116,1.9817360800000001,0.811,0.8934],[0.8232399800000001,0.1377,0.87789267,1.19365699,0.9946,0.47504675999999996,0.64924061,0.9342506500000001,1.19478116,1.9817360800000001,0.4333,0.85146669]]]

Actual:   [[[0.0915, 0.1702, 0.8779, 1.1937, 0.4697, 0.6771, 0.6493, 0.9343, 1.1948, 1.9818, 0.811, 0.8934], [0.8233, 0.1377, 0.8779, 1.1937, 0.9946, 0.4751, 0.6493, 0.9343, 1.1948, 1.9818, 0.4333, 0.8515]]]

Expected: [[[0.0915, 0.1702, 0.8779, 1.1937, 0.4697, 0.6771, 0.6493, 0.9343, 1.1948, 1.9818, 0.811, 0.8934], [0.8233, 0.1377, 0.8779, 1.1937, 0.9946, 0.4751, 0.6493, 0.9343, 1.1948, 1.9818, 0.4333, 0.8515]]]