import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Dot11095 = tf.keras.layers.Input(shape=([3, 3]))
in1Dot11095 = tf.keras.layers.Input(shape=([3, 3]))

Dot11095 = keras.layers.Dot(axes=(1, 2), name = 'Dot11095', )([in0Dot11095,in1Dot11095])
Thr11626 = keras.layers.ThresholdedReLU(theta=1.534403315896968, name = 'Thr11626', )(Dot11095)
Lea24869 = keras.layers.LeakyReLU(alpha=7.7696788140195245, name = 'Lea24869', )(Thr11626)
model = tf.keras.models.Model(inputs=[in0Dot11095,in1Dot11095], outputs=Lea24869)
in0Dot11095 = tf.constant([[[0.8132, 0.1881, 0.6429], [0.5519, 0.3223, 0.1165], [0.8378, 0.506, 0.6617]]])
in1Dot11095 = tf.constant([[[0.3801, 0.7733, 0.0703], [0.2235, 0.9874, 0.2829], [0.7377, 0.5314, 0.5142]]])
print (np.array2string(model.predict([in0Dot11095,in1Dot11095],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Lea24869.png')

LDot11095 = dot_layer([[[0.8132, 0.1881, 0.6429], [0.5519, 0.3223, 0.1165], [0.8378, 0.506, 0.6617]]], [[[0.3801, 0.7733, 0.0703], [0.2235, 0.9874, 0.2829], [0.7377, 0.5314, 0.5142]]], 1, 2, Dot11095), 
LThr11626 = thresholded_relu_layer(Dot11095, 1.534403315896968, Thr11626), 
LLea24869 = leaky_relu_layer(Thr11626, 7.7696788140195245, Lea24869), 
exec_layers([LDot11095,LThr11626,LLea24869],["Dot11095","Thr11626","Lea24869"],Lea24869,"Lea24869")

Actual (Unparsed): [[[0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000]]]

Expected (Unparsed): [[[0,0,0],[0,0,0],[0,0,0]]]

Actual:   [[[0, 0, 0], [0, 0, 0], [0, 0, 0]]]

Expected: [[[0, 0, 0], [0, 0, 0], [0, 0, 0]]]