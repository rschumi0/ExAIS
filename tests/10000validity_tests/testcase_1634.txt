import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Mul19520 = tf.keras.layers.Input(shape=([2, 1, 1]))
in1Mul19520 = tf.keras.layers.Input(shape=([2, 1, 1]))
in0Con37672 = tf.keras.layers.Input(shape=([3, 2, 3, 1]))
in0Sub63281 = tf.keras.layers.Input(shape=([3, 2, 3, 2]))
in1Sub63281 = tf.keras.layers.Input(shape=([3, 2, 3, 2]))

Mul19520 = keras.layers.Multiply(name = 'Mul19520', )([in0Mul19520,in1Mul19520])
Res34522 = keras.layers.Reshape((2, 1, 1, 1), name = 'Res34522', )(Mul19520)
Zer5986 = keras.layers.ZeroPadding3D(padding=((1, 0), (1, 0), (2, 0)), name = 'Zer5986', )(Res34522)
Con37672 = keras.layers.Concatenate(axis=4, name = 'Con37672', )([Zer5986,in0Con37672])
Sub63281 = keras.layers.Subtract(name = 'Sub63281', )([in0Sub63281,in1Sub63281])
Ave10883 = keras.layers.Average(name = 'Ave10883', )([Con37672,Sub63281])
model = tf.keras.models.Model(inputs=[in0Mul19520,in1Mul19520,in0Con37672,in0Sub63281,in1Sub63281], outputs=Ave10883)
in0Mul19520 = tf.constant([[[[0.7644]], [[0.7506]]]])
in1Mul19520 = tf.constant([[[[0.2174]], [[0.7056]]]])
in0Con37672 = tf.constant([[[[[0.5701], [0.0322], [0.8724]], [[0.8242], [0.0277], [0.4739]]], [[[0.0351], [0.8975], [0.8563]], [[0.1136], [0.9187], [0.2379]]], [[[0.5111], [0.3398], [0.6685]], [[0.5744], [0.6284], [0.539]]]]])
in0Sub63281 = tf.constant([[[[[0.5356, 0.1499], [0.6216, 0.6102], [0.3685, 0.2698]], [[0.7247, 0.6522], [0.0052, 0.6309], [0.9232, 0.2453]]], [[[0.4833, 0.882], [0.5436, 0.919], [0.0589, 0.1206]], [[0.6798, 0.1339], [0.0926, 0.8679], [0.6877, 0.3187]]], [[[0.4532, 0.324], [0.3898, 0.5536], [0.8796, 0.8251]], [[0.8216, 0.1419], [0.6534, 0.0051], [0.6557, 0.9008]]]]])
in1Sub63281 = tf.constant([[[[[0.8833, 0.0238], [0.2747, 0.3852], [0.679, 0.3645]], [[0.8364, 0.4091], [0.5017, 0.1286], [0.5682, 0.1723]]], [[[0.0166, 0.4571], [0.9648, 0.0174], [0.847, 0.6952]], [[0.5201, 0.3432], [0.7297, 0.1831], [0.1198, 0.485]]], [[[0.7055, 0.1026], [0.2458, 0.4323], [0.1451, 0.6394]], [[0.6967, 0.1019], [0.6058, 0.8317], [0.62, 0.5097]]]]])
print (np.array2string(model.predict([in0Mul19520,in1Mul19520,in0Con37672,in0Sub63281,in1Sub63281],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Ave10883.png')

LMul19520 = multiply_layer([[[[[0.7644]], [[0.7506]]]], [[[[0.2174]], [[0.7056]]]]], Mul19520), 
LRes34522 = reshape_layer(Mul19520, [2, 1, 1, 1], Res34522), 
LZer5986 = zero_padding3D_layer(Res34522, 1, 0, 1, 0, 2, 0, Zer5986), 
LCon37672 = concatenate_layer([Zer5986,[[[[[0.5701], [0.0322], [0.8724]], [[0.8242], [0.0277], [0.4739]]], [[[0.0351], [0.8975], [0.8563]], [[0.1136], [0.9187], [0.2379]]], [[[0.5111], [0.3398], [0.6685]], [[0.5744], [0.6284], [0.539]]]]]], 4, Con37672), 
LSub63281 = subtract_layer([[[[[0.5356, 0.1499], [0.6216, 0.6102], [0.3685, 0.2698]], [[0.7247, 0.6522], [0.0052, 0.6309], [0.9232, 0.2453]]], [[[0.4833, 0.882], [0.5436, 0.919], [0.0589, 0.1206]], [[0.6798, 0.1339], [0.0926, 0.8679], [0.6877, 0.3187]]], [[[0.4532, 0.324], [0.3898, 0.5536], [0.8796, 0.8251]], [[0.8216, 0.1419], [0.6534, 0.0051], [0.6557, 0.9008]]]]], [[[[[0.8833, 0.0238], [0.2747, 0.3852], [0.679, 0.3645]], [[0.8364, 0.4091], [0.5017, 0.1286], [0.5682, 0.1723]]], [[[0.0166, 0.4571], [0.9648, 0.0174], [0.847, 0.6952]], [[0.5201, 0.3432], [0.7297, 0.1831], [0.1198, 0.485]]], [[[0.7055, 0.1026], [0.2458, 0.4323], [0.1451, 0.6394]], [[0.6967, 0.1019], [0.6058, 0.8317], [0.62, 0.5097]]]]], Sub63281), 
LAve10883 = average_layer([Con37672,Sub63281], Ave10883), 
exec_layers([LMul19520,LRes34522,LZer5986,LCon37672,LSub63281,LAve10883],["Mul19520","Res34522","Zer5986","Con37672","Sub63281","Ave10883"],Ave10883,"Ave10883")

Actual (Unparsed): [[[[[-0.1738500, 0.3481000], [0.1734500, 0.1286000], [-0.1552500, 0.3888500]], [[-0.0558500, 0.5336500], [-0.2482500, 0.2650000], [0.1775000, 0.2734500]]], [[[0.2333500, 0.2300000], [-0.2106000, 0.8995500], [-0.3940500, 0.1408500]], [[0.0798500, -0.0478500], [-0.3185500, 0.8017500], [0.3670403, 0.0358000]]], [[[-0.1261500, 0.3662500], [0.0720000, 0.2305500], [0.3672500, 0.4271000]], [[0.0624500, 0.3072000], [0.0238000, -0.0991000], [0.2826617, 0.4650500]]]]]

Expected (Unparsed): [[[[[-0.17385,0.3481],[0.17345000000000002,0.1286],[-0.15525000000000003,0.38885]],[[-0.05585000000000001,0.53365],[-0.24825000000000003,0.26499999999999996],[0.1775,0.27344999999999997]]],[[[0.23335,0.23],[-0.2106,0.8995500000000001],[-0.39405,0.14084999999999998]],[[0.07984999999999998,-0.047850000000000004],[-0.31855,0.80175],[0.36704028,0.0358]]],[[[-0.12615,0.36625],[0.072,0.23054999999999998],[0.36725,0.4271]],[[0.062450000000000006,0.30720000000000003],[0.023799999999999988,-0.09910000000000002],[0.28266167999999997,0.46505]]]]]

Actual:   [[[[[-0.1738, 0.3481], [0.1735, 0.1286], [-0.1552, 0.3889]], [[-0.0558, 0.5337], [-0.2482, 0.265], [0.1775, 0.2735]]], [[[0.2334, 0.23], [-0.2106, 0.8996], [-0.394, 0.1409]], [[0.0799, -0.0478], [-0.3185, 0.8018], [0.3671, 0.0358]]], [[[-0.1261, 0.3663], [0.072, 0.2306], [0.3673, 0.4271]], [[0.0625, 0.3072], [0.0238, -0.0991], [0.2827, 0.4651]]]]]

Expected: [[[[[-0.1738, 0.3481], [0.1735, 0.1286], [-0.1552, 0.3889]], [[-0.0558, 0.5337], [-0.2482, 0.265], [0.1775, 0.2735]]], [[[0.2334, 0.23], [-0.2106, 0.8996], [-0.394, 0.1409]], [[0.0799, -0.0478], [-0.3185, 0.8018], [0.3671, 0.0358]]], [[[-0.1261, 0.3663], [0.072, 0.2306], [0.3673, 0.4271]], [[0.0625, 0.3073], [0.0238, -0.0991], [0.2827, 0.4651]]]]]