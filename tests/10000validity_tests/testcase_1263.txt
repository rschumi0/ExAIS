import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Sub1733 = tf.keras.layers.Input(shape=([2, 3]))
in1Sub1733 = tf.keras.layers.Input(shape=([2, 3]))
in0Con76012 = tf.keras.layers.Input(shape=([2, 1]))
in0Mas61032 = tf.keras.layers.Input(shape=([2, 3]))
in0Con1060 = tf.keras.layers.Input(shape=([2, 1]))
in0Mas76359 = tf.keras.layers.Input(shape=([1, 4]))

Sub1733 = keras.layers.Subtract(name = 'Sub1733', )([in0Sub1733,in1Sub1733])
Con39259 = keras.layers.Conv1D(3, (2),strides=(1), padding='valid', dilation_rate=(1), name = 'Con39259', )(Sub1733)
Zer72512 = keras.layers.ZeroPadding1D(padding=((1, 0)), name = 'Zer72512', )(Con39259)
Con76012 = keras.layers.Concatenate(axis=2, name = 'Con76012', )([Zer72512,in0Con76012])
Mas61032 = keras.layers.Masking(mask_value=1, name = 'Mas61032', )(in0Mas61032)
Con1060 = keras.layers.Concatenate(axis=2, name = 'Con1060', )([Mas61032,in0Con1060])
Mas76359 = keras.layers.Masking(mask_value=1, name = 'Mas76359', )(in0Mas76359)
Sof9302 = keras.layers.Softmax(axis=1, name = 'Sof9302', )(Mas76359)
Zer74043 = keras.layers.ZeroPadding1D(padding=((1, 0)), name = 'Zer74043', )(Sof9302)
Max31578 = keras.layers.Maximum(name = 'Max31578', )([Con1060,Zer74043])
Up_19563 = keras.layers.UpSampling1D(size=(1), name = 'Up_19563', )(Max31578)
Min54820 = keras.layers.Minimum(name = 'Min54820', )([Con76012,Up_19563])
model = tf.keras.models.Model(inputs=[in0Sub1733,in1Sub1733,in0Con76012,in0Mas61032,in0Con1060,in0Mas76359], outputs=Min54820)
w = model.get_layer('Con39259').get_weights() 
w[0] = np.array([[[0.0877, 0.0858, 0.1308], [0.1916, 0.9194, 0.1118], [0.7763, 0.2843, 0.8515]], [[0.8204, 0.2601, 0.9781], [0.8811, 0.4342, 0.7359], [0.9637, 0.9654, 0.4706]]])
w[1] = np.array([0, 0, 0])
model.get_layer('Con39259').set_weights(w) 
in0Sub1733 = tf.constant([[[0.3045, 0.7523, 0.1282], [0.7381, 0.8283, 0.5671]]])
in1Sub1733 = tf.constant([[[0.042, 0.196, 0.9035], [0.0809, 0.1506, 0.9525]]])
in0Con76012 = tf.constant([[[0.5655], [0.5194]]])
in0Mas61032 = tf.constant([[[1.3238, 1.299, 1.6397], [1.4295, 1.8004, 1.084]]])
in0Con1060 = tf.constant([[[0.2607], [0.3423]]])
in0Mas76359 = tf.constant([[[1.4023, 1.0328, 1.0059, 1.6831]]])
print (np.array2string(model.predict([in0Sub1733,in1Sub1733,in0Con76012,in0Mas61032,in0Con1060,in0Mas76359],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Min54820.png')

LSub1733 = subtract_layer([[[0.3045, 0.7523, 0.1282], [0.7381, 0.8283, 0.5671]]], [[[0.042, 0.196, 0.9035], [0.0809, 0.1506, 0.9525]]], Sub1733), 
LCon39259 = conv1D_layer(Sub1733, 2,[[[0.0877, 0.0858, 0.1308], [0.1916, 0.9194, 0.1118], [0.7763, 0.2843, 0.8515]], [[0.8204, 0.2601, 0.9781], [0.8811, 0.4342, 0.7359], [0.9637, 0.9654, 0.4706]]],[0, 0, 0], 1, false, 1, Con39259), 
LZer72512 = zero_padding1D_layer(Con39259, 1, 0, Zer72512), 
LCon76012 = concatenate_layer([Zer72512,[[[0.5655], [0.5194]]]], 2, Con76012), 
LMas61032 = masking_layer([[[1.3238, 1.299, 1.6397], [1.4295, 1.8004, 1.084]]], 1, Mas61032), 
LCon1060 = concatenate_layer([Mas61032,[[[0.2607], [0.3423]]]], 2, Con1060), 
LMas76359 = masking_layer([[[1.4023, 1.0328, 1.0059, 1.6831]]], 1, Mas76359), 
LSof9302 = softmax_layer(Mas76359, 1, Sof9302), 
LZer74043 = zero_padding1D_layer(Sof9302, 1, 0, Zer74043), 
LMax31578 = maximum_layer([Con1060,Zer74043], Max31578), 
LUp_19563 = up_sampling1D_layer(Max31578, 1, Up_19563), 
LMin54820 = minimum_layer([Con76012,Up_19563], Min54820), 
exec_layers([LSub1733,LCon39259,LZer72512,LCon76012,LMas61032,LCon1060,LMas76359,LSof9302,LZer74043,LMax31578,LUp_19563,LMin54820],["Sub1733","Con39259","Zer72512","Con76012","Mas61032","Con1060","Mas76359","Sof9302","Zer74043","Max31578","Up_19563","Min54820"],Min54820,"Min54820")

Actual (Unparsed): [[[0.0000000, 0.0000000, 0.0000000, 0.2607000], [0.2926213, 0.4066969, 0.3965189, 0.5194000]]]

Expected (Unparsed): [[[0,0,0,0.2607],[0.2926213100000001,0.40669683,0.3965188999999999,0.5194]]]

Actual:   [[[0, 0, 0, 0.2607], [0.2927, 0.4067, 0.3966, 0.5194]]]

Expected: [[[0, 0, 0, 0.2607], [0.2927, 0.4067, 0.3966, 0.5194]]]