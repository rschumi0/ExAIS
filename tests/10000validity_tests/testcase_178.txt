import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0LST79455 = tf.keras.layers.Input(shape=([1, 2]))
in0Con75180 = tf.keras.layers.Input(shape=([2, 3, 3, 1]))
in0Ave63357 = tf.keras.layers.Input(shape=([1, 2, 2, 2]))
in1Ave63357 = tf.keras.layers.Input(shape=([1, 2, 2, 2]))

LST79455 = keras.layers.LSTM(2,recurrent_activation='sigmoid', name = 'LST79455', )(in0LST79455)
Res24182 = keras.layers.Reshape((2, 1), name = 'Res24182', )(LST79455)
Res644 = keras.layers.Reshape((2, 1, 1), name = 'Res644', )(Res24182)
Res61620 = keras.layers.Reshape((2, 1, 1, 1), name = 'Res61620', )(Res644)
Zer47273 = keras.layers.ZeroPadding3D(padding=((0, 0), (2, 0), (2, 0)), name = 'Zer47273', )(Res61620)
Con75180 = keras.layers.Concatenate(axis=4, name = 'Con75180', )([Zer47273,in0Con75180])
Ave63357 = keras.layers.Average(name = 'Ave63357', )([in0Ave63357,in1Ave63357])
Zer70206 = keras.layers.ZeroPadding3D(padding=((1, 0), (1, 0), (1, 0)), name = 'Zer70206', )(Ave63357)
Ave74210 = keras.layers.Average(name = 'Ave74210', )([Con75180,Zer70206])
Res27491 = keras.layers.Reshape((2, 3, 6), name = 'Res27491', )(Ave74210)
Loc76009 = keras.layers.LocallyConnected2D(3, (2, 3),strides=(1, 3), name = 'Loc76009', )(Res27491)
model = tf.keras.models.Model(inputs=[in0LST79455,in0Con75180,in0Ave63357,in1Ave63357], outputs=Loc76009)
w = model.get_layer('LST79455').get_weights() 
w[0] = np.array([[1, 10, 7, 8, 10, 4, 10, 6], [7, 8, 6, 3, 5, 6, 10, 9]])
w[1] = np.array([[9, 8, 3, 9, 6, 6, 9, 1], [5, 7, 6, 7, 4, 5, 9, 2]])
w[2] = np.array([6, 10, 3, 4, 8, 3, 10, 4])
model.get_layer('LST79455').set_weights(w) 
w = model.get_layer('Loc76009').get_weights() 
w[0] = np.array([[[0.6904, 0.1855, 0.4415], [0.0996, 0.7614, 0.6307], [0.8735, 0.7091, 0.3049], [0.662, 0.1057, 0.5485], [0.9687, 0.9102, 0.4621], [0.0798, 0.6561, 0.8025], [0.8529, 0.532, 0.5073], [0.4865, 0.4655, 0.2888], [0.4902, 0.6662, 0.4251], [0.4322, 0.9363, 0.4981], [0.3423, 0.4155, 0.7866], [0.4182, 0.7425, 0.8265], [0.2735, 0.2686, 0.4689], [0.4675, 0.2582, 0.3779], [0.2884, 0.5242, 0.4685], [0.3112, 0.0939, 0.43], [0.4365, 0.8488, 0.2903], [0.1367, 0.0229, 0.3837], [0.1845, 0.8973, 0.0327], [0.3284, 0.4511, 0.3414], [0.577, 0.3159, 0.0436], [0.5709, 0.5159, 0.946], [0.2347, 0.2488, 0.5283], [0.5813, 0.8276, 0.1605], [0.1007, 0.2257, 0.9603], [0.5334, 0.9975, 0.8382], [0.3424, 0.4728, 0.5841], [0.5218, 0.2081, 0.2385], [0.7098, 0.91, 0.7479], [0.7225, 0.7247, 0.7257], [0.291, 0.4153, 0.6069], [0.9293, 0.0479, 0.3512], [0.104, 0.09, 0.7967], [0.0057, 0.2564, 0.6173], [0.4974, 0.8899, 0.6633], [0.2694, 0.4533, 0.6297]]])
w[1] = np.array([[[0, 0, 0]]])
model.get_layer('Loc76009').set_weights(w) 
in0LST79455 = tf.constant([[[8, 9]]])
in0Con75180 = tf.constant([[[[[0.5901], [0.5034], [0.6283]], [[0.9026], [0.6884], [0.5099]], [[0.3774], [0.5359], [0.7046]]], [[[0.5457], [0.4891], [0.3278]], [[0.0091], [0.6569], [0.1773]], [[0.7724], [0.7322], [0.331]]]]])
in0Ave63357 = tf.constant([[[[[0.4114, 0.8244], [0.9642, 0.5044]], [[0.4112, 0.6059], [0.7667, 0.6224]]]]])
in1Ave63357 = tf.constant([[[[[0.6643, 0.0476], [0.6298, 0.864]], [[0.6791, 0.7342], [0.7672, 0.0465]]]]])
print (np.array2string(model.predict([in0LST79455,in0Con75180,in0Ave63357,in1Ave63357],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Loc76009.png')

LLST79455 = lstm_layer([[[8, 9]]],[[1, 10, 7, 8, 10, 4, 10, 6], [7, 8, 6, 3, 5, 6, 10, 9]],[[9, 8, 3, 9, 6, 6, 9, 1], [5, 7, 6, 7, 4, 5, 9, 2]],[6, 10, 3, 4, 8, 3, 10, 4], LST79455), 
LRes24182 = reshape_layer(LST79455, [2, 1], Res24182), 
LRes644 = reshape_layer(Res24182, [2, 1, 1], Res644), 
LRes61620 = reshape_layer(Res644, [2, 1, 1, 1], Res61620), 
LZer47273 = zero_padding3D_layer(Res61620, 0, 0, 2, 0, 2, 0, Zer47273), 
LCon75180 = concatenate_layer([Zer47273,[[[[[0.5901], [0.5034], [0.6283]], [[0.9026], [0.6884], [0.5099]], [[0.3774], [0.5359], [0.7046]]], [[[0.5457], [0.4891], [0.3278]], [[0.0091], [0.6569], [0.1773]], [[0.7724], [0.7322], [0.331]]]]]], 4, Con75180), 
LAve63357 = average_layer([[[[[[0.4114, 0.8244], [0.9642, 0.5044]], [[0.4112, 0.6059], [0.7667, 0.6224]]]]], [[[[[0.6643, 0.0476], [0.6298, 0.864]], [[0.6791, 0.7342], [0.7672, 0.0465]]]]]], Ave63357), 
LZer70206 = zero_padding3D_layer(Ave63357, 1, 0, 1, 0, 1, 0, Zer70206), 
LAve74210 = average_layer([Con75180,Zer70206], Ave74210), 
LRes27491 = reshape_layer(Ave74210, [2, 3, 6], Res27491), 
LLoc76009 = locally_connected2D_layer(Res27491, 2, 3,[[[0.6904, 0.1855, 0.4415], [0.0996, 0.7614, 0.6307], [0.8735, 0.7091, 0.3049], [0.662, 0.1057, 0.5485], [0.9687, 0.9102, 0.4621], [0.0798, 0.6561, 0.8025], [0.8529, 0.532, 0.5073], [0.4865, 0.4655, 0.2888], [0.4902, 0.6662, 0.4251], [0.4322, 0.9363, 0.4981], [0.3423, 0.4155, 0.7866], [0.4182, 0.7425, 0.8265], [0.2735, 0.2686, 0.4689], [0.4675, 0.2582, 0.3779], [0.2884, 0.5242, 0.4685], [0.3112, 0.0939, 0.43], [0.4365, 0.8488, 0.2903], [0.1367, 0.0229, 0.3837], [0.1845, 0.8973, 0.0327], [0.3284, 0.4511, 0.3414], [0.577, 0.3159, 0.0436], [0.5709, 0.5159, 0.946], [0.2347, 0.2488, 0.5283], [0.5813, 0.8276, 0.1605], [0.1007, 0.2257, 0.9603], [0.5334, 0.9975, 0.8382], [0.3424, 0.4728, 0.5841], [0.5218, 0.2081, 0.2385], [0.7098, 0.91, 0.7479], [0.7225, 0.7247, 0.7257], [0.291, 0.4153, 0.6069], [0.9293, 0.0479, 0.3512], [0.104, 0.09, 0.7967], [0.0057, 0.2564, 0.6173], [0.4974, 0.8899, 0.6633], [0.2694, 0.4533, 0.6297]]],[[[0, 0, 0]]], 1, 3, Loc76009), 
exec_layers([LLST79455,LRes24182,LRes644,LRes61620,LZer47273,LCon75180,LAve63357,LZer70206,LAve74210,LRes27491,LLoc76009],["LST79455","Res24182","Res644","Res61620","Zer47273","Con75180","Ave63357","Zer70206","Ave74210","Res27491","Loc76009"],Loc76009,"Loc76009")

Actual (Unparsed): [[[[3.2412372, 3.9430365, 4.2757125]]]]

Expected (Unparsed): [[[[3.2412371536235436,3.943036534480145,4.275712526059708]]]]

Actual:   [[[[3.2413, 3.9431, 4.2758]]]]

Expected: [[[[3.2413, 3.9431, 4.2758]]]]