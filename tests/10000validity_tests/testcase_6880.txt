import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Add78416 = tf.keras.layers.Input(shape=([1, 2]))
in1Add78416 = tf.keras.layers.Input(shape=([1, 2]))
in0Ave66963 = tf.keras.layers.Input(shape=([1, 2]))
in1Ave66963 = tf.keras.layers.Input(shape=([1, 2]))
in0Con56474 = tf.keras.layers.Input(shape=([2, 7, 1]))
in0Min90399 = tf.keras.layers.Input(shape=([2, 1, 1, 1]))
in1Min90399 = tf.keras.layers.Input(shape=([2, 1, 1, 1]))
in0Con17404 = tf.keras.layers.Input(shape=([2, 1, 1]))
in0Ave66310 = tf.keras.layers.Input(shape=([1, 1, 2]))

Add78416 = keras.layers.Add(name = 'Add78416', )([in0Add78416,in1Add78416])
Ave66963 = keras.layers.Average(name = 'Ave66963', )([in0Ave66963,in1Ave66963])
Mul9594 = keras.layers.Multiply(name = 'Mul9594', )([Add78416,Ave66963])
Sep19797 = keras.layers.SeparableConv1D(4, (1),strides=(1), padding='valid', name = 'Sep19797', )(Mul9594)
Res54397 = keras.layers.Reshape((1, 4, 1), name = 'Res54397', )(Sep19797)
Zer70583 = keras.layers.ZeroPadding2D(padding=((1, 0), (3, 0)), name = 'Zer70583', )(Res54397)
Con56474 = keras.layers.Concatenate(axis=3, name = 'Con56474', )([Zer70583,in0Con56474])
Min90399 = keras.layers.Minimum(name = 'Min90399', )([in0Min90399,in1Min90399])
Res70826 = keras.layers.Reshape((2, 1, 1), name = 'Res70826', )(Min90399)
Con17404 = keras.layers.Concatenate(axis=3, name = 'Con17404', )([Res70826,in0Con17404])
Ave66310 = keras.layers.AveragePooling2D(pool_size=(1, 1), strides=(7, 1), padding='valid', name = 'Ave66310', )(in0Ave66310)
Zer28963 = keras.layers.ZeroPadding2D(padding=((1, 0), (0, 0)), name = 'Zer28963', )(Ave66310)
Sub94476 = keras.layers.Subtract(name = 'Sub94476', )([Con17404,Zer28963])
Zer59528 = keras.layers.ZeroPadding2D(padding=((0, 0), (6, 0)), name = 'Zer59528', )(Sub94476)
Sub78498 = keras.layers.Subtract(name = 'Sub78498', )([Con56474,Zer59528])
model = tf.keras.models.Model(inputs=[in0Add78416,in1Add78416,in0Ave66963,in1Ave66963,in0Con56474,in0Min90399,in1Min90399,in0Con17404,in0Ave66310], outputs=Sub78498)
w = model.get_layer('Sep19797').get_weights() 
w[0] = np.array([[[0.9861], [0.6175]]])
w[1] = np.array([[[0.6066, 0.8349, 0.1014, 0.5156], [0.5073, 0.104, 0.0871, 0.7269]]])
w[2] = np.array([0, 0, 0, 0])
model.get_layer('Sep19797').set_weights(w) 
in0Add78416 = tf.constant([[[0.5386, 0.4061]]])
in1Add78416 = tf.constant([[[0.5559, 0.7161]]])
in0Ave66963 = tf.constant([[[0.0681, 0.8748]]])
in1Ave66963 = tf.constant([[[0.704, 0.5028]]])
in0Con56474 = tf.constant([[[[1], [0.4434], [0.4198], [0.3198], [0.6606], [0.5274], [0.4698]], [[0.4218], [0.8729], [0.6677], [0.8152], [0.468], [0.2452], [0.824]]]])
in0Min90399 = tf.constant([[[[[0.0386]]], [[[0.574]]]]])
in1Min90399 = tf.constant([[[[[0.098]]], [[[0.4069]]]]])
in0Con17404 = tf.constant([[[[0.7884]], [[0.1124]]]])
in0Ave66310 = tf.constant([[[[1.0759, 1.7183]]]])
print (np.array2string(model.predict([in0Add78416,in1Add78416,in0Ave66963,in1Ave66963,in0Con56474,in0Min90399,in1Min90399,in0Con17404,in0Ave66310],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Sub78498.png')

LAdd78416 = add_layer([[[[0.5386, 0.4061]]], [[[0.5559, 0.7161]]]], Add78416), 
LAve66963 = average_layer([[[[0.0681, 0.8748]]], [[[0.704, 0.5028]]]], Ave66963), 
LMul9594 = multiply_layer([Add78416,Ave66963], Mul9594), 
LSep19797 = separable_conv1D_layer(Mul9594, 1,[[[[0.9861], [0.6175]]],[[[0.6066, 0.8349, 0.1014, 0.5156], [0.5073, 0.104, 0.0871, 0.7269]]]],[0, 0, 0, 0], 1, false, Sep19797), 
LRes54397 = reshape_layer(Sep19797, [1, 4, 1], Res54397), 
LZer70583 = zero_padding2D_layer(Res54397, 1, 0, 3, 0, Zer70583), 
LCon56474 = concatenate_layer([Zer70583,[[[[1], [0.4434], [0.4198], [0.3198], [0.6606], [0.5274], [0.4698]], [[0.4218], [0.8729], [0.6677], [0.8152], [0.468], [0.2452], [0.824]]]]], 3, Con56474), 
LMin90399 = minimum_layer([[[[[[0.0386]]], [[[0.574]]]]], [[[[[0.098]]], [[[0.4069]]]]]], Min90399), 
LRes70826 = reshape_layer(Min90399, [2, 1, 1], Res70826), 
LCon17404 = concatenate_layer([Res70826,[[[[0.7884]], [[0.1124]]]]], 3, Con17404), 
LAve66310 = average_pooling2D_layer([[[[1.0759, 1.7183]]]], 1, 1, 7, 1, false, Ave66310), 
LZer28963 = zero_padding2D_layer(Ave66310, 1, 0, 0, 0, Zer28963), 
LSub94476 = subtract_layer(Con17404,Zer28963, Sub94476), 
LZer59528 = zero_padding2D_layer(Sub94476, 0, 0, 6, 0, Zer59528), 
LSub78498 = subtract_layer(Con56474,Zer59528, Sub78498), 
exec_layers([LAdd78416,LAve66963,LMul9594,LSep19797,LRes54397,LZer70583,LCon56474,LMin90399,LRes70826,LCon17404,LAve66310,LZer28963,LSub94476,LZer59528,LSub78498],["Add78416","Ave66963","Mul9594","Sep19797","Res54397","Zer70583","Con56474","Min90399","Res70826","Con17404","Ave66310","Zer28963","Sub94476","Zer59528","Sub78498"],Sub78498,"Sub78498")

Actual (Unparsed): [[[[0.0000000, 1.0000000], [0.0000000, 0.4434000], [0.0000000, 0.4198000], [0.0000000, 0.3198000], [0.0000000, 0.6606000], [0.0000000, 0.5274000], [-0.0386000, -0.3186000]], [[0.0000000, 0.4218000], [0.0000000, 0.8729000], [0.0000000, 0.6677000], [0.4948843, 0.8152000], [0.3975084, 0.4680000], [0.0838229, 0.2452000], [1.2307856, 2.4299000]]]]

Expected (Unparsed): [[[[0,1],[0,0.4434],[0,0.4198],[0,0.3198],[0,0.6606],[0,0.5274],[-0.0386,-0.3186]],[[0,0.4218],[0,0.8729],[0,0.6677],[0.4948843357860885,0.8152],[0.39750843079458525,0.468],[0.08382286021896151,0.2452],[1.230785644520121,2.4299]]]]

Actual:   [[[[0, 1], [0, 0.4434], [0, 0.4198], [0, 0.3198], [0, 0.6606], [0, 0.5274], [-0.0386, -0.3186]], [[0, 0.4218], [0, 0.8729], [0, 0.6677], [0.4949, 0.8152], [0.3976, 0.468], [0.0839, 0.2452], [1.2308, 2.4299]]]]

Expected: [[[[0, 1], [0, 0.4434], [0, 0.4198], [0, 0.3198], [0, 0.6606], [0, 0.5274], [-0.0386, -0.3186]], [[0, 0.4218], [0, 0.8729], [0, 0.6677], [0.4949, 0.8152], [0.3976, 0.468], [0.0839, 0.2452], [1.2308, 2.4299]]]]