import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Sub53167 = tf.keras.layers.Input(shape=([3, 2, 2, 3]))
in1Sub53167 = tf.keras.layers.Input(shape=([3, 2, 2, 3]))
in0Zer63629 = tf.keras.layers.Input(shape=([2, 2]))
in0Con75243 = tf.keras.layers.Input(shape=([4, 10]))
in0Mul22085 = tf.keras.layers.Input(shape=([2, 2, 1]))
in1Mul22085 = tf.keras.layers.Input(shape=([2, 2, 1]))

Sub53167 = keras.layers.Subtract(name = 'Sub53167', )([in0Sub53167,in1Sub53167])
Res36004 = keras.layers.Reshape((3, 2, 6), name = 'Res36004', )(Sub53167)
Res77156 = keras.layers.Reshape((3, 12), name = 'Res77156', )(Res36004)
Zer59162 = keras.layers.ZeroPadding1D(padding=((1, 0)), name = 'Zer59162', )(Res77156)
Zer63629 = keras.layers.ZeroPadding1D(padding=((1, 1)), name = 'Zer63629', )(in0Zer63629)
Con75243 = keras.layers.Concatenate(axis=2, name = 'Con75243', )([Zer63629,in0Con75243])
Add24939 = keras.layers.Add(name = 'Add24939', )([Zer59162,Con75243])
Con94430 = keras.layers.Conv1D(4, (2),strides=(1), padding='same', dilation_rate=(1), name = 'Con94430', )(Add24939)
Res70119 = keras.layers.Reshape((4, 4, 1), name = 'Res70119', )(Con94430)
Mul22085 = keras.layers.Multiply(name = 'Mul22085', )([in0Mul22085,in1Mul22085])
Zer4190 = keras.layers.ZeroPadding2D(padding=((2, 0), (2, 0)), name = 'Zer4190', )(Mul22085)
Ave33712 = keras.layers.Average(name = 'Ave33712', )([Res70119,Zer4190])
model = tf.keras.models.Model(inputs=[in0Sub53167,in1Sub53167,in0Zer63629,in0Con75243,in0Mul22085,in1Mul22085], outputs=Ave33712)
w = model.get_layer('Con94430').get_weights() 
w[0] = np.array([[[0.6063, 0.7048, 0.2889, 0.3562], [0.1471, 0.5082, 0.2256, 0.6759], [0.9313, 0.2049, 0.3519, 0.161], [0.2915, 0.2693, 0.7389, 0.0436], [0.6802, 0.4573, 0.8905, 0.7062], [0.7609, 0.2293, 0.8138, 0.0443], [0.4073, 0.2137, 0.1198, 0.3909], [0.4163, 0.6594, 0.7231, 0.4363], [0.867, 0.9602, 0.6675, 0.6696], [0.098, 0.6315, 0.968, 0.61], [0.2126, 0.5664, 0.1289, 0.5072], [0.8766, 0.0083, 0.1775, 0.2416]], [[0.9208, 0.4354, 0.6338, 0.877], [0.9296, 0.4762, 0.8249, 0.6876], [0.5557, 0.0473, 0.3518, 0.5095], [0.7832, 0.1365, 0.3146, 0.9528], [0.7346, 0.0425, 0.1109, 0.3498], [0.9065, 0.4278, 0.2393, 0.313], [0.9109, 0.2375, 0.5551, 0.4291], [0.897, 0.3979, 0.8577, 0.9248], [0.8341, 0.219, 0.5177, 0.108], [0.7454, 0.5933, 0.0941, 0.0048], [0.8036, 0.4108, 0.5352, 0.8996], [0.9182, 0.089, 0.6108, 0.4099]]])
w[1] = np.array([0, 0, 0, 0])
model.get_layer('Con94430').set_weights(w) 
in0Sub53167 = tf.constant([[[[[0.3161, 0.2962, 0.4969], [0.0099, 0.6397, 0.6731]], [[0.0644, 0.105, 0.3727], [0.9999, 0.0994, 0.9774]]], [[[0.8094, 0.2994, 0.0416], [0.483, 0.1874, 0.397]], [[0.0142, 0.0701, 0.0341], [0.2102, 0.1213, 0.7121]]], [[[0.6741, 0.3676, 0.5602], [0.7301, 0.1014, 0.0591]], [[0.3266, 0.413, 0.7033], [0.9758, 0.9746, 0.3116]]]]])
in1Sub53167 = tf.constant([[[[[0.6516, 0.4326, 0.1002], [0.8361, 0.1234, 0.2802]], [[0.9673, 0.3163, 0.9004], [0.0167, 0.9622, 0.9992]]], [[[0.3109, 0.5826, 0.3742], [0.5522, 0.9233, 0.6865]], [[0.3327, 0.5163, 0.8785], [0.1498, 0.6024, 0.8122]]], [[[0.2573, 0.6804, 0.335], [0.8385, 0.4194, 0.6923]], [[0.8087, 0.922, 0.8205], [0.2684, 0.6469, 0.8821]]]]])
in0Zer63629 = tf.constant([[[1.4179, 1.1371], [1.0022, 1.2523]]])
in0Con75243 = tf.constant([[[0.5216, 0.199, 0.8114, 0.374, 0.7085, 0.2026, 0.2624, 0.7182, 0.7883, 0.2367], [0.2462, 0.483, 0.964, 0.3853, 0.0006, 0.1373, 0.1119, 0.883, 0.9463, 0.5451], [0.9563, 0.6065, 0.5877, 0.7058, 0.6919, 0.5912, 0.2346, 0.5903, 0.2438, 0.3178], [0.3878, 0.8228, 0.5113, 0.9333, 0.1199, 0.8266, 0.0148, 0.1446, 0.6798, 0.5806]]])
in0Mul22085 = tf.constant([[[[0.4077], [0.5744]], [[0.7151], [0.2639]]]])
in1Mul22085 = tf.constant([[[[0.7039], [0.4777]], [[0.5126], [0.0463]]]])
print (np.array2string(model.predict([in0Sub53167,in1Sub53167,in0Zer63629,in0Con75243,in0Mul22085,in1Mul22085],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Ave33712.png')

LSub53167 = subtract_layer([[[[[0.3161, 0.2962, 0.4969], [0.0099, 0.6397, 0.6731]], [[0.0644, 0.105, 0.3727], [0.9999, 0.0994, 0.9774]]], [[[0.8094, 0.2994, 0.0416], [0.483, 0.1874, 0.397]], [[0.0142, 0.0701, 0.0341], [0.2102, 0.1213, 0.7121]]], [[[0.6741, 0.3676, 0.5602], [0.7301, 0.1014, 0.0591]], [[0.3266, 0.413, 0.7033], [0.9758, 0.9746, 0.3116]]]]], [[[[[0.6516, 0.4326, 0.1002], [0.8361, 0.1234, 0.2802]], [[0.9673, 0.3163, 0.9004], [0.0167, 0.9622, 0.9992]]], [[[0.3109, 0.5826, 0.3742], [0.5522, 0.9233, 0.6865]], [[0.3327, 0.5163, 0.8785], [0.1498, 0.6024, 0.8122]]], [[[0.2573, 0.6804, 0.335], [0.8385, 0.4194, 0.6923]], [[0.8087, 0.922, 0.8205], [0.2684, 0.6469, 0.8821]]]]], Sub53167), 
LRes36004 = reshape_layer(Sub53167, [3, 2, 6], Res36004), 
LRes77156 = reshape_layer(Res36004, [3, 12], Res77156), 
LZer59162 = zero_padding1D_layer(Res77156, 1, 0, Zer59162), 
LZer63629 = zero_padding1D_layer([[[1.4179, 1.1371], [1.0022, 1.2523]]], 1, 1, Zer63629), 
LCon75243 = concatenate_layer([Zer63629,[[[0.5216, 0.199, 0.8114, 0.374, 0.7085, 0.2026, 0.2624, 0.7182, 0.7883, 0.2367], [0.2462, 0.483, 0.964, 0.3853, 0.0006, 0.1373, 0.1119, 0.883, 0.9463, 0.5451], [0.9563, 0.6065, 0.5877, 0.7058, 0.6919, 0.5912, 0.2346, 0.5903, 0.2438, 0.3178], [0.3878, 0.8228, 0.5113, 0.9333, 0.1199, 0.8266, 0.0148, 0.1446, 0.6798, 0.5806]]]], 2, Con75243), 
LAdd24939 = add_layer([Zer59162,Con75243], Add24939), 
LCon94430 = conv1D_layer(Add24939, 2,[[[0.6063, 0.7048, 0.2889, 0.3562], [0.1471, 0.5082, 0.2256, 0.6759], [0.9313, 0.2049, 0.3519, 0.161], [0.2915, 0.2693, 0.7389, 0.0436], [0.6802, 0.4573, 0.8905, 0.7062], [0.7609, 0.2293, 0.8138, 0.0443], [0.4073, 0.2137, 0.1198, 0.3909], [0.4163, 0.6594, 0.7231, 0.4363], [0.867, 0.9602, 0.6675, 0.6696], [0.098, 0.6315, 0.968, 0.61], [0.2126, 0.5664, 0.1289, 0.5072], [0.8766, 0.0083, 0.1775, 0.2416]], [[0.9208, 0.4354, 0.6338, 0.877], [0.9296, 0.4762, 0.8249, 0.6876], [0.5557, 0.0473, 0.3518, 0.5095], [0.7832, 0.1365, 0.3146, 0.9528], [0.7346, 0.0425, 0.1109, 0.3498], [0.9065, 0.4278, 0.2393, 0.313], [0.9109, 0.2375, 0.5551, 0.4291], [0.897, 0.3979, 0.8577, 0.9248], [0.8341, 0.219, 0.5177, 0.108], [0.7454, 0.5933, 0.0941, 0.0048], [0.8036, 0.4108, 0.5352, 0.8996], [0.9182, 0.089, 0.6108, 0.4099]]],[0, 0, 0, 0], 1, true, 1, Con94430), 
LRes70119 = reshape_layer(Con94430, [4, 4, 1], Res70119), 
LMul22085 = multiply_layer([[[[[0.4077], [0.5744]], [[0.7151], [0.2639]]]], [[[[0.7039], [0.4777]], [[0.5126], [0.0463]]]]], Mul22085), 
LZer4190 = zero_padding2D_layer(Mul22085, 2, 0, 2, 0, Zer4190), 
LAve33712 = average_layer([Res70119,Zer4190], Ave33712), 
exec_layers([LSub53167,LRes36004,LRes77156,LZer59162,LZer63629,LCon75243,LAdd24939,LCon94430,LRes70119,LMul22085,LZer4190,LAve33712],["Sub53167","Res36004","Res77156","Zer59162","Zer63629","Con75243","Add24939","Con94430","Res70119","Mul22085","Zer4190","Ave33712"],Ave33712,"Ave33712")

Actual (Unparsed): [[[[3.4689815], [2.1183633], [2.1716529], [2.1578711]], [[3.2880798], [2.2328534], [3.1194664], [2.9360337]], [[2.3122542], [1.4761935], [1.6633117], [1.9892330]], [[0.7740562], [0.8762325], [1.3253272], [0.5952435]]]]

Expected (Unparsed): [[[[3.4689814949999995],[2.118363325],[2.1716528850000003],[2.15787109]],[[3.288079755000001],[2.2328534250000005],[3.1194664149999993],[2.93603364]],[[2.31225427],[1.4761934600000002],[1.6633117599999996],[1.9892330050000002]],[[0.774056195],[0.8762324849999998],[1.325327245],[0.5952434799999999]]]]

Actual:   [[[[3.469], [2.1184], [2.1717], [2.1579]], [[3.2881], [2.2329], [3.1195], [2.9361]], [[2.3123], [1.4762], [1.6634], [1.9893]], [[0.7741], [0.8763], [1.3254], [0.5953]]]]

Expected: [[[[3.469], [2.1184], [2.1717], [2.1579]], [[3.2881], [2.2329], [3.1195], [2.9361]], [[2.3123], [1.4762], [1.6634], [1.9893]], [[0.7741], [0.8763], [1.3254], [0.5953]]]]