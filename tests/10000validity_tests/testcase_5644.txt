import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Sub36292 = tf.keras.layers.Input(shape=([3, 3]))
in1Sub36292 = tf.keras.layers.Input(shape=([3, 3]))
in0Sub28197 = tf.keras.layers.Input(shape=([2, 2]))
in1Sub28197 = tf.keras.layers.Input(shape=([2, 2]))
in0Min99500 = tf.keras.layers.Input(shape=([1, 2, 1, 1]))
in1Min99500 = tf.keras.layers.Input(shape=([1, 2, 1, 1]))
in0Con25781 = tf.keras.layers.Input(shape=([3, 2, 1]))
in0Add9732 = tf.keras.layers.Input(shape=([2, 2, 2]))
in1Add9732 = tf.keras.layers.Input(shape=([2, 2, 2]))

Sub36292 = keras.layers.Subtract(name = 'Sub36292', )([in0Sub36292,in1Sub36292])
Sub28197 = keras.layers.Subtract(name = 'Sub28197', )([in0Sub28197,in1Sub28197])
Zer92159 = keras.layers.ZeroPadding1D(padding=((1, 0)), name = 'Zer92159', )(Sub28197)
Dot86144 = keras.layers.Dot(axes=(1, 1), name = 'Dot86144', )([Sub36292,Zer92159])
Res23591 = keras.layers.Reshape((3, 2, 1), name = 'Res23591', )(Dot86144)
Res39021 = keras.layers.Reshape((3, 2, 1, 1), name = 'Res39021', )(Res23591)
Min99500 = keras.layers.Minimum(name = 'Min99500', )([in0Min99500,in1Min99500])
Zer29304 = keras.layers.ZeroPadding3D(padding=((2, 0), (0, 0), (0, 0)), name = 'Zer29304', )(Min99500)
Mul1711 = keras.layers.Multiply(name = 'Mul1711', )([Res39021,Zer29304])
Res66139 = keras.layers.Reshape((3, 2, 1), name = 'Res66139', )(Mul1711)
Con25781 = keras.layers.Concatenate(axis=3, name = 'Con25781', )([Res66139,in0Con25781])
Add9732 = keras.layers.Add(name = 'Add9732', )([in0Add9732,in1Add9732])
Sep76032 = keras.layers.SeparableConv2D(4, (1, 2),strides=(2, 2), padding='same', name = 'Sep76032', )(Add9732)
Sep34853 = keras.layers.SeparableConv2D(2, (1, 1),strides=(1, 1), padding='valid', name = 'Sep34853', )(Sep76032)
Zer93659 = keras.layers.ZeroPadding2D(padding=((2, 0), (1, 0)), name = 'Zer93659', )(Sep34853)
Mul10784 = keras.layers.Multiply(name = 'Mul10784', )([Con25781,Zer93659])
model = tf.keras.models.Model(inputs=[in0Sub36292,in1Sub36292,in0Sub28197,in1Sub28197,in0Min99500,in1Min99500,in0Con25781,in0Add9732,in1Add9732], outputs=Mul10784)
w = model.get_layer('Sep76032').get_weights() 
w[0] = np.array([[[[0.7685], [0.7376]], [[0.9995], [0.9889]]]])
w[1] = np.array([[[[0.4223, 0.6357, 0.6892, 0.5648], [0.2815, 0.1035, 0.6605, 0.9419]]]])
w[2] = np.array([0, 0, 0, 0])
model.get_layer('Sep76032').set_weights(w) 
w = model.get_layer('Sep34853').get_weights() 
w[0] = np.array([[[[0.4671], [0.0869], [0.238], [0.1319]]]])
w[1] = np.array([[[[0.8687, 0.0776], [0.4751, 0.3701], [0.4064, 0.1998], [0.0499, 0.3193]]]])
w[2] = np.array([0, 0])
model.get_layer('Sep34853').set_weights(w) 
in0Sub36292 = tf.constant([[[0.5869, 0.5376, 0.5937], [0.6322, 0.2682, 0.0957], [0.8608, 0.6285, 0.7476]]])
in1Sub36292 = tf.constant([[[0.0668, 0.717, 0.4649], [0.3892, 0.0189, 0.65], [0.3325, 0.9092, 0.7105]]])
in0Sub28197 = tf.constant([[[0.6085, 0.705], [0.1962, 0.4879]]])
in1Sub28197 = tf.constant([[[0.7456, 0.3881], [0.2995, 0.1032]]])
in0Min99500 = tf.constant([[[[[0.6509]], [[0.3118]]]]])
in1Min99500 = tf.constant([[[[[0.6631]], [[0.1867]]]]])
in0Con25781 = tf.constant([[[[0.6798], [0.1443]], [[0.8787], [0.4921]], [[0.4266], [0.9075]]]])
in0Add9732 = tf.constant([[[[0.9667, 0.3269], [0.2649, 0.9177]], [[0.8776, 0.2114], [0.1783, 0.2719]]]])
in1Add9732 = tf.constant([[[[0.3416, 0.0713], [0.2162, 0.5925]], [[0.0863, 0.3288], [0.7406, 0.1311]]]])
print (np.array2string(model.predict([in0Sub36292,in1Sub36292,in0Sub28197,in1Sub28197,in0Min99500,in1Min99500,in0Con25781,in0Add9732,in1Add9732],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Mul10784.png')

LSub36292 = subtract_layer([[[0.5869, 0.5376, 0.5937], [0.6322, 0.2682, 0.0957], [0.8608, 0.6285, 0.7476]]], [[[0.0668, 0.717, 0.4649], [0.3892, 0.0189, 0.65], [0.3325, 0.9092, 0.7105]]], Sub36292), 
LSub28197 = subtract_layer([[[0.6085, 0.705], [0.1962, 0.4879]]], [[[0.7456, 0.3881], [0.2995, 0.1032]]], Sub28197), 
LZer92159 = zero_padding1D_layer(Sub28197, 1, 0, Zer92159), 
LDot86144 = dot_layer(Sub36292,Zer92159, 1, 1, Dot86144), 
LRes23591 = reshape_layer(Dot86144, [3, 2, 1], Res23591), 
LRes39021 = reshape_layer(Res23591, [3, 2, 1, 1], Res39021), 
LMin99500 = minimum_layer([[[[[[0.6509]], [[0.3118]]]]], [[[[[0.6631]], [[0.1867]]]]]], Min99500), 
LZer29304 = zero_padding3D_layer(Min99500, 2, 0, 0, 0, 0, 0, Zer29304), 
LMul1711 = multiply_layer([Res39021,Zer29304], Mul1711), 
LRes66139 = reshape_layer(Mul1711, [3, 2, 1], Res66139), 
LCon25781 = concatenate_layer([Res66139,[[[[0.6798], [0.1443]], [[0.8787], [0.4921]], [[0.4266], [0.9075]]]]], 3, Con25781), 
LAdd9732 = add_layer([[[[[0.9667, 0.3269], [0.2649, 0.9177]], [[0.8776, 0.2114], [0.1783, 0.2719]]]], [[[[0.3416, 0.0713], [0.2162, 0.5925]], [[0.0863, 0.3288], [0.7406, 0.1311]]]]], Add9732), 
LSep76032 = separable_conv2D_layer(Add9732, 1, 2,[[[[[0.7685], [0.7376]], [[0.9995], [0.9889]]]],[[[[0.4223, 0.6357, 0.6892, 0.5648], [0.2815, 0.1035, 0.6605, 0.9419]]]]],[0, 0, 0, 0], 2, 2, true, Sep76032), 
LSep34853 = separable_conv2D_layer(Sep76032, 1, 1,[[[[[0.4671], [0.0869], [0.238], [0.1319]]]],[[[[0.8687, 0.0776], [0.4751, 0.3701], [0.4064, 0.1998], [0.0499, 0.3193]]]]],[0, 0], 1, 1, false, Sep34853), 
LZer93659 = zero_padding2D_layer(Sep34853, 2, 0, 1, 0, Zer93659), 
LMul10784 = multiply_layer([Con25781,Zer93659], Mul10784), 
exec_layers([LSub36292,LSub28197,LZer92159,LDot86144,LRes23591,LRes39021,LMin99500,LZer29304,LMul1711,LRes66139,LCon25781,LAdd9732,LSep76032,LSep34853,LZer93659,LMul10784],["Sub36292","Sub28197","Zer92159","Dot86144","Res23591","Res39021","Min99500","Zer29304","Mul1711","Res66139","Con25781","Add9732","Sep76032","Sep34853","Zer93659","Mul10784"],Mul10784,"Mul10784")

Actual (Unparsed): [[[[-0.0000000, 0.0000000], [0.0000000, 0.0000000]], [[-0.0000000, 0.0000000], [-0.0000000, 0.0000000]], [[0.0000000, 0.0000000], [-0.0221557, 0.2617341]]]]

Expected (Unparsed): [[[[-0.0,0.0],[0.0,0.0]],[[-0.0,0.0],[-0.0,0.0]],[[0.0,0.0],[-0.022155723777340618,0.2617341124202879]]]]

Actual:   [[[[-0, 0], [0, 0]], [[-0, 0], [-0, 0]], [[0, 0], [-0.0221, 0.2618]]]]

Expected: [[[[-0, 0], [0, 0]], [[-0, 0], [-0, 0]], [[0, 0], [-0.0221, 0.2618]]]]