import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Min43971 = tf.keras.layers.Input(shape=([2, 2, 2, 2]))
in1Min43971 = tf.keras.layers.Input(shape=([2, 2, 2, 2]))
in0Con87183 = tf.keras.layers.Input(shape=([2, 2]))
in0Glo10527 = tf.keras.layers.Input(shape=([1, 2]))

Min43971 = keras.layers.Minimum(name = 'Min43971', )([in0Min43971,in1Min43971])
Res73473 = keras.layers.Reshape((2, 2, 4), name = 'Res73473', )(Min43971)
Res91606 = keras.layers.Reshape((2, 8), name = 'Res91606', )(Res73473)
Con20205 = keras.layers.Conv1D(2, (1),strides=(1), padding='valid', dilation_rate=(1), name = 'Con20205', )(Res91606)
Con87183 = keras.layers.Concatenate(axis=2, name = 'Con87183', )([Con20205,in0Con87183])
Glo10527 = keras.layers.GlobalMaxPool1D(name = 'Glo10527', )(in0Glo10527)
Res93845 = keras.layers.Reshape((2, 1), name = 'Res93845', )(Glo10527)
Sep18980 = keras.layers.SeparableConv1D(4, (1),strides=(1), padding='same', name = 'Sep18980', )(Res93845)
Sub12015 = keras.layers.Subtract(name = 'Sub12015', )([Con87183,Sep18980])
model = tf.keras.models.Model(inputs=[in0Min43971,in1Min43971,in0Con87183,in0Glo10527], outputs=Sub12015)
w = model.get_layer('Con20205').get_weights() 
w[0] = np.array([[[0.4247, 0.2456], [0.003, 0.8443], [0.695, 0.1308], [0.3473, 0.1554], [0.4903, 0.9255], [0.933, 0.2151], [0.3619, 0.9457], [0.7973, 0.3762]]])
w[1] = np.array([0, 0])
model.get_layer('Con20205').set_weights(w) 
w = model.get_layer('Sep18980').get_weights() 
w[0] = np.array([[[0.8101]]])
w[1] = np.array([[[0.1191, 0.6238, 0.5864, 0.5146]]])
w[2] = np.array([0, 0, 0, 0])
model.get_layer('Sep18980').set_weights(w) 
in0Min43971 = tf.constant([[[[[0.1603, 0.4953], [0.8441, 0.8245]], [[0.3368, 0.867], [0.1312, 0.5654]]], [[[0.0163, 0.3539], [0.3245, 0.537]], [[0.8869, 0.0277], [0.6103, 0.4936]]]]])
in1Min43971 = tf.constant([[[[[0.5243, 0.0391], [0.1929, 0.9136]], [[0.0449, 0.5161], [0.057, 0.533]]], [[[0.2502, 0.2019], [0.1394, 0.9563]], [[0.9326, 0.5346], [0.3355, 0.712]]]]])
in0Con87183 = tf.constant([[[0.2378, 0.9003], [0.5363, 0.5789]]])
in0Glo10527 = tf.constant([[[1.0048, 1.239]]])
print (np.array2string(model.predict([in0Min43971,in1Min43971,in0Con87183,in0Glo10527],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Sub12015.png')

LMin43971 = minimum_layer([[[[[[0.1603, 0.4953], [0.8441, 0.8245]], [[0.3368, 0.867], [0.1312, 0.5654]]], [[[0.0163, 0.3539], [0.3245, 0.537]], [[0.8869, 0.0277], [0.6103, 0.4936]]]]], [[[[[0.5243, 0.0391], [0.1929, 0.9136]], [[0.0449, 0.5161], [0.057, 0.533]]], [[[0.2502, 0.2019], [0.1394, 0.9563]], [[0.9326, 0.5346], [0.3355, 0.712]]]]]], Min43971), 
LRes73473 = reshape_layer(Min43971, [2, 2, 4], Res73473), 
LRes91606 = reshape_layer(Res73473, [2, 8], Res91606), 
LCon20205 = conv1D_layer(Res91606, 1,[[[0.4247, 0.2456], [0.003, 0.8443], [0.695, 0.1308], [0.3473, 0.1554], [0.4903, 0.9255], [0.933, 0.2151], [0.3619, 0.9457], [0.7973, 0.3762]]],[0, 0], 1, false, 1, Con20205), 
LCon87183 = concatenate_layer([Con20205,[[[0.2378, 0.9003], [0.5363, 0.5789]]]], 2, Con87183), 
LGlo10527 = global_max_pool1D_layer([[[1.0048, 1.239]]], Glo10527), 
LRes93845 = reshape_layer(Glo10527, [2, 1], Res93845), 
LSep18980 = separable_conv1D_layer(Res93845, 1,[[[[0.8101]]],[[[0.1191, 0.6238, 0.5864, 0.5146]]]],[0, 0, 0, 0], 1, true, Sep18980), 
LSub12015 = subtract_layer(Con87183,Sep18980, Sub12015), 
exec_layers([LMin43971,LRes73473,LRes91606,LCon20205,LCon87183,LGlo10527,LRes93845,LSep18980,LSub12015],["Min43971","Res73473","Res91606","Con20205","Con87183","Glo10527","Res93845","Sep18980","Sub12015"],Sub12015,"Sub12015")

Actual (Unparsed): [[[1.3407900, 0.1249620, -0.2395228, 0.4814216], [1.1470250, 0.9797930, -0.0522778, 0.0623888]]]

Expected (Unparsed): [[[1.340790002032,0.12496197617600002,-0.23952284467200002,0.481421528192],[1.14702498451,0.9797929291799999,-0.05227783096000016,0.06238882705999993]]]

Actual:   [[[1.3408, 0.125, -0.2395, 0.4815], [1.1471, 0.9798, -0.0522, 0.0624]]]

Expected: [[[1.3408, 0.125, -0.2395, 0.4815], [1.1471, 0.9798, -0.0522, 0.0624]]]