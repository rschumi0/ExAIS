import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Con55231 = tf.keras.layers.Input(shape=([1, 2]))

Con55231 = keras.layers.Conv1D(4, (1),strides=(5), padding='valid', dilation_rate=(1), name = 'Con55231', )(in0Con55231)
Res8365 = keras.layers.Reshape((1, 4, 1), name = 'Res8365', )(Con55231)
Con12217 = keras.layers.Conv2D(3, (1, 2),strides=(1, 1), padding='same', dilation_rate=(1, 1), name = 'Con12217', )(Res8365)
Sof7192 = keras.layers.Softmax(axis=1, name = 'Sof7192', )(Con12217)
model = tf.keras.models.Model(inputs=[in0Con55231], outputs=Sof7192)
w = model.get_layer('Con55231').get_weights() 
w[0] = np.array([[[0.3572, 0.2928, 0.4884, 0.5658], [0.9847, 0.8752, 0.6918, 0.136]]])
w[1] = np.array([0, 0, 0, 0])
model.get_layer('Con55231').set_weights(w) 
w = model.get_layer('Con12217').get_weights() 
w[0] = np.array([[[[0.7058, 0.8863, 0.6693]], [[0.9034, 0.7962, 0.3834]]]])
w[1] = np.array([0, 0, 0])
model.get_layer('Con12217').set_weights(w) 
in0Con55231 = tf.constant([[[0.0895, 0.3604]]])
print (np.array2string(model.predict([in0Con55231],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Sof7192.png')

LCon55231 = conv1D_layer([[[0.0895, 0.3604]]], 1,[[[0.3572, 0.2928, 0.4884, 0.5658], [0.9847, 0.8752, 0.6918, 0.136]]],[0, 0, 0, 0], 5, false, 1, Con55231), 
LRes8365 = reshape_layer(Con55231, [1, 4, 1], Res8365), 
LCon12217 = conv2D_layer(Res8365, 1, 2,[[[[0.7058, 0.8863, 0.6693]], [[0.9034, 0.7962, 0.3834]]]],[0, 0, 0], 1, 1, true, 1, 1, Con12217), 
LSof7192 = softmax_layer(Con12217, 1, Sof7192), 
exec_layers([LCon55231,LRes8365,LCon12217,LSof7192],["Con55231","Res8365","Con12217","Sof7192"],Sof7192,"Sof7192")

Actual (Unparsed): [[[[1.0000000, 1.0000000, 1.0000000], [1.0000000, 1.0000000, 1.0000000], [1.0000000, 1.0000000, 1.0000000], [1.0000000, 1.0000000, 1.0000000]]]]

Expected (Unparsed): [[[[1.0,1.0,1.0],[1.0,1.0,1.0],[1.0,1.0,1.0],[1.0,1.0,1.0]]]]

Actual:   [[[[1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1]]]]

Expected: [[[[1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1]]]]