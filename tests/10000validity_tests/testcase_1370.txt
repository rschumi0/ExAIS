import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Cro80442 = tf.keras.layers.Input(shape=([4, 2, 1, 4]))
in0Up_14411 = tf.keras.layers.Input(shape=([3, 2, 2]))

Cro80442 = keras.layers.Cropping3D(cropping=((3, 0), (0, 0), (0, 0)), name = 'Cro80442', )(in0Cro80442)
Res73806 = keras.layers.Reshape((1, 2, 4), name = 'Res73806', )(Cro80442)
Zer48070 = keras.layers.ZeroPadding2D(padding=((5, 0), (0, 0)), name = 'Zer48070', )(Res73806)
Up_14411 = keras.layers.UpSampling2D(size=(2, 1), name = 'Up_14411', )(in0Up_14411)
Con78180 = keras.layers.Conv2D(4, (3, 2),strides=(1, 1), padding='same', dilation_rate=(1, 1), name = 'Con78180', )(Up_14411)
ELU77482 = keras.layers.ELU(alpha=7.2425182829296695, name = 'ELU77482', )(Con78180)
Sub21875 = keras.layers.Subtract(name = 'Sub21875', )([Zer48070,ELU77482])
Lea58774 = keras.layers.LeakyReLU(alpha=5.473267043933111, name = 'Lea58774', )(Sub21875)
model = tf.keras.models.Model(inputs=[in0Cro80442,in0Up_14411], outputs=Lea58774)
w = model.get_layer('Con78180').get_weights() 
w[0] = np.array([[[[0.7658, 0.8654, 0.929, 0.4332], [0.9829, 0.8225, 0.9295, 0.2074]], [[0.6058, 0.4232, 0.7594, 0.3353], [0.9186, 0.2232, 0.957, 0.4885]]], [[[0.5581, 0.8652, 0.7819, 0.3629], [0.0805, 0.9489, 0.5916, 0.4068]], [[0.5839, 0.4603, 0.0241, 0.5979], [0.3765, 0.6601, 0.7056, 0.1697]]], [[[0.7079, 0.2139, 0.4996, 0.9595], [0.3992, 0.2608, 0.8926, 0.3587]], [[0.7975, 0.0665, 0.9729, 0.6822], [0.8603, 0.8799, 0.5989, 0.1395]]]])
w[1] = np.array([0, 0, 0, 0])
model.get_layer('Con78180').set_weights(w) 
in0Cro80442 = tf.constant([[[[[1.1554, 1.9108, 1.4262, 1.8663]], [[1.0563, 1.2203, 1.1504, 1.5685]]], [[[1.8677, 1.9045, 1.0514, 1.3133]], [[1.5806, 1.2062, 1.641, 1.7376]]], [[[1.1676, 1.8949, 1.1145, 1.9121]], [[1.1141, 1.5403, 1.9875, 1.1848]]], [[[1.5264, 1.5654, 1.8868, 1.9058]], [[1.7789, 1.4342, 1.7178, 1.3695]]]]])
in0Up_14411 = tf.constant([[[[1.7891, 1.4635], [1.393, 1.4082]], [[1.0477, 1.044], [1.6664, 1.8137]], [[1.4719, 1.5066], [1.3931, 1.1674]]]])
print (np.array2string(model.predict([in0Cro80442,in0Up_14411],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Lea58774.png')

LCro80442 = cropping3D_layer([[[[[1.1554, 1.9108, 1.4262, 1.8663]], [[1.0563, 1.2203, 1.1504, 1.5685]]], [[[1.8677, 1.9045, 1.0514, 1.3133]], [[1.5806, 1.2062, 1.641, 1.7376]]], [[[1.1676, 1.8949, 1.1145, 1.9121]], [[1.1141, 1.5403, 1.9875, 1.1848]]], [[[1.5264, 1.5654, 1.8868, 1.9058]], [[1.7789, 1.4342, 1.7178, 1.3695]]]]], 3, 0, 0, 0, 0, 0, Cro80442), 
LRes73806 = reshape_layer(Cro80442, [1, 2, 4], Res73806), 
LZer48070 = zero_padding2D_layer(Res73806, 5, 0, 0, 0, Zer48070), 
LUp_14411 = up_sampling2D_layer([[[[1.7891, 1.4635], [1.393, 1.4082]], [[1.0477, 1.044], [1.6664, 1.8137]], [[1.4719, 1.5066], [1.3931, 1.1674]]]], 2, 1, Up_14411), 
LCon78180 = conv2D_layer(Up_14411, 3, 2,[[[[0.7658, 0.8654, 0.929, 0.4332], [0.9829, 0.8225, 0.9295, 0.2074]], [[0.6058, 0.4232, 0.7594, 0.3353], [0.9186, 0.2232, 0.957, 0.4885]]], [[[0.5581, 0.8652, 0.7819, 0.3629], [0.0805, 0.9489, 0.5916, 0.4068]], [[0.5839, 0.4603, 0.0241, 0.5979], [0.3765, 0.6601, 0.7056, 0.1697]]], [[[0.7079, 0.2139, 0.4996, 0.9595], [0.3992, 0.2608, 0.8926, 0.3587]], [[0.7975, 0.0665, 0.9729, 0.6822], [0.8603, 0.8799, 0.5989, 0.1395]]]],[0, 0, 0, 0], 1, 1, true, 1, 1, Con78180), 
LELU77482 = elu_layer(Con78180, 7.2425182829296695, ELU77482), 
LSub21875 = subtract_layer(Zer48070,ELU77482, Sub21875), 
LLea58774 = leaky_relu_layer(Sub21875, 5.473267043933111, Lea58774), 
exec_layers([LCro80442,LRes73806,LZer48070,LUp_14411,LCon78180,LELU77482,LSub21875,LLea58774],["Cro80442","Res73806","Zer48070","Up_14411","Con78180","ELU77482","Sub21875","Lea58774"],Lea58774,"Lea58774")

Actual (Unparsed): [[[[-36.3041456, -36.1425784, -42.0931259, -31.2239484], [-13.3495806, -17.5510482, -21.2098950, -15.9823795]], [[-62.6886072, -56.7375697, -70.5096960, -40.0620673], [-28.7091805, -31.3873654, -38.1855546, -23.1156248]], [[-61.9484237, -53.2018045, -67.5805832, -38.9267612], [-29.7229787, -34.7880405, -40.6685853, -24.5615209]], [[-57.9475737, -46.8752157, -64.7830979, -39.9006161], [-30.5793458, -36.6659738, -40.2168917, -22.9659456]], [[-57.2419246, -48.2629974, -65.5643538, -40.2785161], [-29.4597571, -32.0151574, -36.9545822, -20.9841010]], [[-28.4261664, -32.3614014, -32.5964583, -12.3682533], [-7.1526748, -16.6640798, -13.3623628, -2.4988965]]]]

Expected (Unparsed): [[[[-36.30414478090521,-36.14257749539188,-42.09312486468408,-31.223947634444656],[-13.349580412336302,-17.55104792831896,-21.20989465491269,-15.982379271628313]],[[-62.688606214788585,-56.7375685502346,-70.50969475657985,-40.06206650768674],[-28.709180381014438,-31.38736499368417,-38.1855544387041,-23.115624884286643]],[[-61.94842303497389,-53.20180377720211,-67.58058219568727,-38.92676068159466],[-29.72297880300848,-34.7880406146471,-40.668585555239446,-24.561521155400058]],[[-57.947573251278925,-46.87521504832977,-64.78309716438962,-39.90061580276144],[-30.579346087394295,-36.6659743647444,-40.216892096518706,-22.965945698990748]],[[-57.241924087739285,-48.26299671729741,-65.56435310841876,-40.27851577436435],[-29.459757130747555,-32.01515748085057,-36.954582198941175,-20.984100824678297]],[[-28.426165842607876,-32.361401006326766,-32.59645817683501,-12.368253022803122],[-7.15267472547622,-16.664079717355857,-13.362362625458037,-2.4988966399136054]]]]

Actual:   [[[[-36.3041, -36.1425, -42.0931, -31.2239], [-13.3495, -17.551, -21.2098, -15.9823]], [[-62.6886, -56.7375, -70.5096, -40.062], [-28.7091, -31.3873, -38.1855, -23.1156]], [[-61.9484, -53.2018, -67.5805, -38.9267], [-29.7229, -34.788, -40.6685, -24.5615]], [[-57.9475, -46.8752, -64.783, -39.9006], [-30.5793, -36.6659, -40.2168, -22.9659]], [[-57.2419, -48.2629, -65.5643, -40.2785], [-29.4597, -32.0151, -36.9545, -20.9841]], [[-28.4261, -32.3614, -32.5964, -12.3682], [-7.1526, -16.664, -13.3623, -2.4988]]]]

Expected: [[[[-36.3041, -36.1425, -42.0931, -31.2239], [-13.3495, -17.551, -21.2098, -15.9823]], [[-62.6886, -56.7375, -70.5096, -40.062], [-28.7091, -31.3873, -38.1855, -23.1156]], [[-61.9484, -53.2018, -67.5805, -38.9267], [-29.7229, -34.788, -40.6685, -24.5615]], [[-57.9475, -46.8752, -64.783, -39.9006], [-30.5793, -36.6659, -40.2168, -22.9659]], [[-57.2419, -48.2629, -65.5643, -40.2785], [-29.4597, -32.0151, -36.9545, -20.9841]], [[-28.4261, -32.3614, -32.5964, -12.3682], [-7.1526, -16.664, -13.3623, -2.4988]]]]