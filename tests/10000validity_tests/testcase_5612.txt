import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Mul72408 = tf.keras.layers.Input(shape=([2, 2, 1]))
in1Mul72408 = tf.keras.layers.Input(shape=([2, 2, 1]))

Mul72408 = keras.layers.Multiply(name = 'Mul72408', )([in0Mul72408,in1Mul72408])
Res18165 = keras.layers.Reshape((2, 2, 1, 1), name = 'Res18165', )(Mul72408)
Zer3871 = keras.layers.ZeroPadding3D(padding=((1, 1), (1, 1), (1, 1)), name = 'Zer3871', )(Res18165)
model = tf.keras.models.Model(inputs=[in0Mul72408,in1Mul72408], outputs=Zer3871)
in0Mul72408 = tf.constant([[[[0.6232], [0.6999]], [[0.1479], [0.1654]]]])
in1Mul72408 = tf.constant([[[[0.5816], [0.0661]], [[0.2591], [0.4125]]]])
print (np.array2string(model.predict([in0Mul72408,in1Mul72408],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Zer3871.png')

LMul72408 = multiply_layer([[[[[0.6232], [0.6999]], [[0.1479], [0.1654]]]], [[[[0.5816], [0.0661]], [[0.2591], [0.4125]]]]], Mul72408), 
LRes18165 = reshape_layer(Mul72408, [2, 2, 1, 1], Res18165), 
LZer3871 = zero_padding3D_layer(Res18165, 1, 1, 1, 1, 1, 1, Zer3871), 
exec_layers([LMul72408,LRes18165,LZer3871],["Mul72408","Res18165","Zer3871"],Zer3871,"Zer3871")

Actual (Unparsed): [[[[[0.0000000], [0.0000000], [0.0000000]], [[0.0000000], [0.0000000], [0.0000000]], [[0.0000000], [0.0000000], [0.0000000]], [[0.0000000], [0.0000000], [0.0000000]]], [[[0.0000000], [0.0000000], [0.0000000]], [[0.0000000], [0.3624531], [0.0000000]], [[0.0000000], [0.0462634], [0.0000000]], [[0.0000000], [0.0000000], [0.0000000]]], [[[0.0000000], [0.0000000], [0.0000000]], [[0.0000000], [0.0383209], [0.0000000]], [[0.0000000], [0.0682275], [0.0000000]], [[0.0000000], [0.0000000], [0.0000000]]], [[[0.0000000], [0.0000000], [0.0000000]], [[0.0000000], [0.0000000], [0.0000000]], [[0.0000000], [0.0000000], [0.0000000]], [[0.0000000], [0.0000000], [0.0000000]]]]]

Expected (Unparsed): [[[[[0],[0],[0]],[[0],[0],[0]],[[0],[0],[0]],[[0],[0],[0]]],[[[0],[0],[0]],[[0],[0.36245312],[0]],[[0],[0.04626339],[0]],[[0],[0],[0]]],[[[0],[0],[0]],[[0],[0.03832089],[0]],[[0],[0.0682275],[0]],[[0],[0],[0]]],[[[0],[0],[0]],[[0],[0],[0]],[[0],[0],[0]],[[0],[0],[0]]]]]

Actual:   [[[[[0], [0], [0]], [[0], [0], [0]], [[0], [0], [0]], [[0], [0], [0]]], [[[0], [0], [0]], [[0], [0.3625], [0]], [[0], [0.0463], [0]], [[0], [0], [0]]], [[[0], [0], [0]], [[0], [0.0384], [0]], [[0], [0.0683], [0]], [[0], [0], [0]]], [[[0], [0], [0]], [[0], [0], [0]], [[0], [0], [0]], [[0], [0], [0]]]]]

Expected: [[[[[0], [0], [0]], [[0], [0], [0]], [[0], [0], [0]], [[0], [0], [0]]], [[[0], [0], [0]], [[0], [0.3625], [0]], [[0], [0.0463], [0]], [[0], [0], [0]]], [[[0], [0], [0]], [[0], [0.0384], [0]], [[0], [0.0683], [0]], [[0], [0], [0]]], [[[0], [0], [0]], [[0], [0], [0]], [[0], [0], [0]], [[0], [0], [0]]]]]