import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Cro52505 = tf.keras.layers.Input(shape=([3, 2]))
in0Con52871 = tf.keras.layers.Input(shape=([2, 2, 6, 1]))
in0Loc60991 = tf.keras.layers.Input(shape=([1, 1, 2]))
in0Con2550 = tf.keras.layers.Input(shape=([2, 2, 6, 1]))
in0Min94067 = tf.keras.layers.Input(shape=([2, 2, 2, 2]))
in1Min94067 = tf.keras.layers.Input(shape=([2, 2, 2, 2]))

Cro52505 = keras.layers.Cropping1D(cropping=((2, 0)), name = 'Cro52505', )(in0Cro52505)
Res57453 = keras.layers.Reshape((1, 2, 1), name = 'Res57453', )(Cro52505)
Res98437 = keras.layers.Reshape((1, 2, 1, 1), name = 'Res98437', )(Res57453)
Zer24141 = keras.layers.ZeroPadding3D(padding=((1, 0), (0, 0), (5, 0)), name = 'Zer24141', )(Res98437)
Con52871 = keras.layers.Concatenate(axis=4, name = 'Con52871', )([Zer24141,in0Con52871])
Loc60991 = keras.layers.LocallyConnected2D(4, (1, 1),strides=(1, 1), name = 'Loc60991', )(in0Loc60991)
Res41891 = keras.layers.Reshape((1, 1, 4, 1), name = 'Res41891', )(Loc60991)
Zer91688 = keras.layers.ZeroPadding3D(padding=((1, 0), (1, 0), (2, 0)), name = 'Zer91688', )(Res41891)
Con2550 = keras.layers.Concatenate(axis=4, name = 'Con2550', )([Zer91688,in0Con2550])
Min94067 = keras.layers.Minimum(name = 'Min94067', )([in0Min94067,in1Min94067])
Zer29288 = keras.layers.ZeroPadding3D(padding=((0, 0), (0, 0), (4, 0)), name = 'Zer29288', )(Min94067)
Ave79483 = keras.layers.Average(name = 'Ave79483', )([Con2550,Zer29288])
Mul33462 = keras.layers.Multiply(name = 'Mul33462', )([Con52871,Ave79483])
model = tf.keras.models.Model(inputs=[in0Cro52505,in0Con52871,in0Loc60991,in0Con2550,in0Min94067,in1Min94067], outputs=Mul33462)
w = model.get_layer('Loc60991').get_weights() 
w[0] = np.array([[[0.091, 0.7157, 0.6481, 0.6307], [0.875, 0.0644, 0.1202, 0.3549]]])
w[1] = np.array([[[0, 0, 0, 0]]])
model.get_layer('Loc60991').set_weights(w) 
in0Cro52505 = tf.constant([[[1.1547, 1.1825], [1.1501, 1.821], [1.2895, 1.1344]]])
in0Con52871 = tf.constant([[[[[0.0404], [0.4566], [0.2779], [0.8336], [0.3283], [0.5347]], [[0.1835], [0.465], [0.3997], [0.9246], [0.5438], [0.0172]]], [[[0.5247], [0.0832], [0.4169], [0.2843], [0.2571], [0.2458]], [[0.4354], [0.3852], [0.2559], [0.073], [0.2114], [0.1781]]]]])
in0Loc60991 = tf.constant([[[[0.6517, 0.0117]]]])
in0Con2550 = tf.constant([[[[[0.0206], [0.1224], [0.4321], [0.4267], [0.8525], [0.8367]], [[0.2378], [0.3941], [0.02], [0.5336], [0.1737], [0.361]]], [[[0.1002], [0.0724], [0.4135], [0.2104], [0.6815], [0.6403]], [[0.9855], [0.2372], [0.8198], [0.1973], [0.6863], [0.3814]]]]])
in0Min94067 = tf.constant([[[[[0.5631, 0.4559], [0.2524, 0.799]], [[0.0055, 0.0286], [0.8317, 0.5913]]], [[[0.5798, 0.9759], [0.4779, 0.571]], [[0.2143, 0.3318], [0.7064, 0.6781]]]]])
in1Min94067 = tf.constant([[[[[0.3851, 0.4131], [0.2189, 0.8183]], [[0.3624, 0.1237], [0.5833, 0.3071]]], [[[0.83, 0.367], [0.0682, 0.3971]], [[0.9643, 0.7188], [0.0136, 0.1054]]]]])
print (np.array2string(model.predict([in0Cro52505,in0Con52871,in0Loc60991,in0Con2550,in0Min94067,in1Min94067],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Mul33462.png')

LCro52505 = cropping1D_layer([[[1.1547, 1.1825], [1.1501, 1.821], [1.2895, 1.1344]]], 2, 0, Cro52505), 
LRes57453 = reshape_layer(Cro52505, [1, 2, 1], Res57453), 
LRes98437 = reshape_layer(Res57453, [1, 2, 1, 1], Res98437), 
LZer24141 = zero_padding3D_layer(Res98437, 1, 0, 0, 0, 5, 0, Zer24141), 
LCon52871 = concatenate_layer([Zer24141,[[[[[0.0404], [0.4566], [0.2779], [0.8336], [0.3283], [0.5347]], [[0.1835], [0.465], [0.3997], [0.9246], [0.5438], [0.0172]]], [[[0.5247], [0.0832], [0.4169], [0.2843], [0.2571], [0.2458]], [[0.4354], [0.3852], [0.2559], [0.073], [0.2114], [0.1781]]]]]], 4, Con52871), 
LLoc60991 = locally_connected2D_layer([[[[0.6517, 0.0117]]]], 1, 1,[[[0.091, 0.7157, 0.6481, 0.6307], [0.875, 0.0644, 0.1202, 0.3549]]],[[[0, 0, 0, 0]]], 1, 1, Loc60991), 
LRes41891 = reshape_layer(Loc60991, [1, 1, 4, 1], Res41891), 
LZer91688 = zero_padding3D_layer(Res41891, 1, 0, 1, 0, 2, 0, Zer91688), 
LCon2550 = concatenate_layer([Zer91688,[[[[[0.0206], [0.1224], [0.4321], [0.4267], [0.8525], [0.8367]], [[0.2378], [0.3941], [0.02], [0.5336], [0.1737], [0.361]]], [[[0.1002], [0.0724], [0.4135], [0.2104], [0.6815], [0.6403]], [[0.9855], [0.2372], [0.8198], [0.1973], [0.6863], [0.3814]]]]]], 4, Con2550), 
LMin94067 = minimum_layer([[[[[[0.5631, 0.4559], [0.2524, 0.799]], [[0.0055, 0.0286], [0.8317, 0.5913]]], [[[0.5798, 0.9759], [0.4779, 0.571]], [[0.2143, 0.3318], [0.7064, 0.6781]]]]], [[[[[0.3851, 0.4131], [0.2189, 0.8183]], [[0.3624, 0.1237], [0.5833, 0.3071]]], [[[0.83, 0.367], [0.0682, 0.3971]], [[0.9643, 0.7188], [0.0136, 0.1054]]]]]], Min94067), 
LZer29288 = zero_padding3D_layer(Min94067, 0, 0, 0, 0, 4, 0, Zer29288), 
LAve79483 = average_layer([Con2550,Zer29288], Ave79483), 
LMul33462 = multiply_layer([Con52871,Ave79483], Mul33462), 
exec_layers([LCro52505,LRes57453,LRes98437,LZer24141,LCon52871,LLoc60991,LRes41891,LZer91688,LCon2550,LMin94067,LZer29288,LAve79483,LMul33462],["Cro52505","Res57453","Res98437","Zer24141","Con52871","Loc60991","Res41891","Zer91688","Con2550","Min94067","Zer29288","Ave79483","Mul33462"],Mul33462,"Mul33462")

Actual (Unparsed): [[[[[0.0000000, 0.0004161], [0.0000000, 0.0279439], [0.0000000, 0.0600403], [0.0000000, 0.1778486], [0.0000000, 0.2077482], [0.0000000, 0.4373044]], [[0.0000000, 0.0218182], [0.0000000, 0.0916283], [0.0000000, 0.0039970], [0.0000000, 0.2466833], [0.0000000, 0.0550054], [0.0000000, 0.0057457]]], [[[0.0000000, 0.0262875], [0.0000000, 0.0030118], [0.0000000, 0.0861941], [0.0000000, 0.0299084], [0.0000000, 0.1347847], [0.0439719, 0.1274965]], [[0.0000000, 0.2145433], [0.0000000, 0.0456847], [0.0000000, 0.1048934], [0.0000000, 0.0072014], [0.0000000, 0.1076132], [0.2432038, 0.0433495]]]]]

Expected (Unparsed): [[[[[0,0.00041611999999999997],[0,0.02794392],[0,0.060040294999999994],[0,0.17784856000000002],[0.0,0.20774824],[0.0,0.43730439499999996]],[[0,0.02181815],[0,0.09162825000000001],[0,0.003997],[0,0.24668327999999998],[0.0,0.05500536999999999],[0.0,0.00574566]]],[[[0,0.026287470000000004],[0,0.00301184],[0,0.086194075],[0,0.029908360000000002],[0.0,0.134784675],[0.04397195,0.12749645999999998]],[[0,0.21454335000000002],[0,0.04568472],[0.0,0.10489341],[0.0,0.00720145],[0.0,0.10761317000000001],[0.243203743744,0.043349540000000006]]]]]

Actual:   [[[[[0, 0.0005], [0, 0.028], [0, 0.0601], [0, 0.1779], [0, 0.2078], [0, 0.4374]], [[0, 0.0219], [0, 0.0917], [0, 0.004], [0, 0.2467], [0, 0.0551], [0, 0.0058]]], [[[0, 0.0263], [0, 0.0031], [0, 0.0862], [0, 0.03], [0, 0.1348], [0.044, 0.1275]], [[0, 0.2146], [0, 0.0457], [0, 0.1049], [0, 0.0073], [0, 0.1077], [0.2433, 0.0434]]]]]

Expected: [[[[[0, 0.0005], [0, 0.028], [0, 0.0601], [0, 0.1779], [0, 0.2078], [0, 0.4374]], [[0, 0.0219], [0, 0.0917], [0, 0.004], [0, 0.2467], [0, 0.0551], [0, 0.0058]]], [[[0, 0.0263], [0, 0.0031], [0, 0.0862], [0, 0.03], [0, 0.1348], [0.044, 0.1275]], [[0, 0.2146], [0, 0.0457], [0, 0.1049], [0, 0.0073], [0, 0.1077], [0.2433, 0.0434]]]]]