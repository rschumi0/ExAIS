import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Ave80696 = tf.keras.layers.Input(shape=([2, 1, 2]))
in1Ave80696 = tf.keras.layers.Input(shape=([2, 1, 2]))
in0Con46389 = tf.keras.layers.Input(shape=([8, 3, 1]))
in0Up_74059 = tf.keras.layers.Input(shape=([4, 3, 2]))

Ave80696 = keras.layers.Average(name = 'Ave80696', )([in0Ave80696,in1Ave80696])
Res25496 = keras.layers.Reshape((2, 2), name = 'Res25496', )(Ave80696)
Zer15139 = keras.layers.ZeroPadding1D(padding=((1, 1)), name = 'Zer15139', )(Res25496)
Res53171 = keras.layers.Reshape((4, 2, 1), name = 'Res53171', )(Zer15139)
Zer47907 = keras.layers.ZeroPadding2D(padding=((4, 0), (1, 0)), name = 'Zer47907', )(Res53171)
Con46389 = keras.layers.Concatenate(axis=3, name = 'Con46389', )([Zer47907,in0Con46389])
Up_74059 = keras.layers.UpSampling2D(size=(2, 1), name = 'Up_74059', )(in0Up_74059)
Min58009 = keras.layers.Minimum(name = 'Min58009', )([Con46389,Up_74059])
model = tf.keras.models.Model(inputs=[in0Ave80696,in1Ave80696,in0Con46389,in0Up_74059], outputs=Min58009)
in0Ave80696 = tf.constant([[[[0.7522, 0.5447]], [[0.6027, 0.7069]]]])
in1Ave80696 = tf.constant([[[[0.8888, 0.6234]], [[0.0767, 0.8485]]]])
in0Con46389 = tf.constant([[[[0.9199], [0.472], [0.3672]], [[0.5605], [0.6464], [0.7012]], [[0.7558], [0.393], [0.5571]], [[0.9319], [0.0668], [0.1073]], [[0.7283], [0.399], [0.4485]], [[0.0356], [0.3415], [0.4401]], [[0.1954], [0.5387], [0.8784]], [[0.1103], [0.7908], [0.2509]]]])
in0Up_74059 = tf.constant([[[[1.4057, 1.7664], [1.1966, 1.312], [1.0204, 1.5337]], [[1.732, 1.3953], [1.6818, 1.3878], [1.0119, 1.397]], [[1.7981, 1.7977], [1.4263, 1.0326], [1.2508, 1.4707]], [[1.5576, 1.2632], [1.696, 1.2456], [1.0109, 1.8448]]]])
print (np.array2string(model.predict([in0Ave80696,in1Ave80696,in0Con46389,in0Up_74059],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Min58009.png')

LAve80696 = average_layer([[[[[0.7522, 0.5447]], [[0.6027, 0.7069]]]], [[[[0.8888, 0.6234]], [[0.0767, 0.8485]]]]], Ave80696), 
LRes25496 = reshape_layer(Ave80696, [2, 2], Res25496), 
LZer15139 = zero_padding1D_layer(Res25496, 1, 1, Zer15139), 
LRes53171 = reshape_layer(Zer15139, [4, 2, 1], Res53171), 
LZer47907 = zero_padding2D_layer(Res53171, 4, 0, 1, 0, Zer47907), 
LCon46389 = concatenate_layer([Zer47907,[[[[0.9199], [0.472], [0.3672]], [[0.5605], [0.6464], [0.7012]], [[0.7558], [0.393], [0.5571]], [[0.9319], [0.0668], [0.1073]], [[0.7283], [0.399], [0.4485]], [[0.0356], [0.3415], [0.4401]], [[0.1954], [0.5387], [0.8784]], [[0.1103], [0.7908], [0.2509]]]]], 3, Con46389), 
LUp_74059 = up_sampling2D_layer([[[[1.4057, 1.7664], [1.1966, 1.312], [1.0204, 1.5337]], [[1.732, 1.3953], [1.6818, 1.3878], [1.0119, 1.397]], [[1.7981, 1.7977], [1.4263, 1.0326], [1.2508, 1.4707]], [[1.5576, 1.2632], [1.696, 1.2456], [1.0109, 1.8448]]]], 2, 1, Up_74059), 
LMin58009 = minimum_layer([Con46389,Up_74059], Min58009), 
exec_layers([LAve80696,LRes25496,LZer15139,LRes53171,LZer47907,LCon46389,LUp_74059,LMin58009],["Ave80696","Res25496","Zer15139","Res53171","Zer47907","Con46389","Up_74059","Min58009"],Min58009,"Min58009")

Actual (Unparsed): [[[[0.0000000, 0.9199000], [0.0000000, 0.4720000], [0.0000000, 0.3672000]], [[0.0000000, 0.5605000], [0.0000000, 0.6464000], [0.0000000, 0.7012000]], [[0.0000000, 0.7558000], [0.0000000, 0.3930000], [0.0000000, 0.5571000]], [[0.0000000, 0.9319000], [0.0000000, 0.0668000], [0.0000000, 0.1073000]], [[0.0000000, 0.7283000], [0.0000000, 0.3990000], [0.0000000, 0.4485000]], [[0.0000000, 0.0356000], [0.8205000, 0.3415000], [0.5840500, 0.4401000]], [[0.0000000, 0.1954000], [0.3397000, 0.5387000], [0.7777000, 0.8784000]], [[0.0000000, 0.1103000], [0.0000000, 0.7908000], [0.0000000, 0.2509000]]]]

Expected (Unparsed): [[[[0,0.9199],[0,0.472],[0,0.3672]],[[0,0.5605],[0,0.6464],[0,0.7012]],[[0,0.7558],[0,0.393],[0,0.5571]],[[0,0.9319],[0,0.0668],[0,0.1073]],[[0,0.7283],[0,0.399],[0,0.4485]],[[0,0.0356],[0.8205,0.3415],[0.58405,0.4401]],[[0,0.1954],[0.3397,0.5387],[0.7777000000000001,0.8784]],[[0,0.1103],[0,0.7908],[0,0.2509]]]]

Actual:   [[[[0, 0.9199], [0, 0.472], [0, 0.3672]], [[0, 0.5605], [0, 0.6464], [0, 0.7012]], [[0, 0.7558], [0, 0.393], [0, 0.5571]], [[0, 0.9319], [0, 0.0668], [0, 0.1073]], [[0, 0.7283], [0, 0.399], [0, 0.4485]], [[0, 0.0356], [0.8205, 0.3415], [0.5841, 0.4401]], [[0, 0.1954], [0.3397, 0.5387], [0.7777, 0.8784]], [[0, 0.1103], [0, 0.7908], [0, 0.2509]]]]

Expected: [[[[0, 0.9199], [0, 0.472], [0, 0.3672]], [[0, 0.5605], [0, 0.6464], [0, 0.7012]], [[0, 0.7558], [0, 0.393], [0, 0.5571]], [[0, 0.9319], [0, 0.0668], [0, 0.1073]], [[0, 0.7283], [0, 0.399], [0, 0.4485]], [[0, 0.0356], [0.8205, 0.3415], [0.5841, 0.4401]], [[0, 0.1954], [0.3397, 0.5387], [0.7778, 0.8784]], [[0, 0.1103], [0, 0.7908], [0, 0.2509]]]]