import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Mul43799 = tf.keras.layers.Input(shape=([1, 2, 2, 1]))
in1Mul43799 = tf.keras.layers.Input(shape=([1, 2, 2, 1]))
in0Con61583 = tf.keras.layers.Input(shape=([4, 4, 7]))
in0Con11299 = tf.keras.layers.Input(shape=([2, 2, 2, 2]))

Mul43799 = keras.layers.Multiply(name = 'Mul43799', )([in0Mul43799,in1Mul43799])
Res89734 = keras.layers.Reshape((1, 2, 2), name = 'Res89734', )(Mul43799)
Glo83806 = keras.layers.GlobalAveragePooling2D(name = 'Glo83806', )(Res89734)
Res23778 = keras.layers.Reshape((2, 1), name = 'Res23778', )(Glo83806)
Res92230 = keras.layers.Reshape((2, 1, 1), name = 'Res92230', )(Res23778)
Zer40779 = keras.layers.ZeroPadding2D(padding=((2, 0), (3, 0)), name = 'Zer40779', )(Res92230)
Con61583 = keras.layers.Concatenate(axis=3, name = 'Con61583', )([Zer40779,in0Con61583])
Con11299 = keras.layers.Conv3DTranspose(4, (2, 2, 2),strides=(1, 1, 1), padding='same', name = 'Con11299', )(in0Con11299)
Res934 = keras.layers.Reshape((2, 2, 8), name = 'Res934', )(Con11299)
Ave82059 = keras.layers.AveragePooling2D(pool_size=(1, 1), name = 'Ave82059', )(Res934)
Zer30641 = keras.layers.ZeroPadding2D(padding=((1, 1), (1, 1)), name = 'Zer30641', )(Ave82059)
Mul72325 = keras.layers.Multiply(name = 'Mul72325', )([Con61583,Zer30641])
model = tf.keras.models.Model(inputs=[in0Mul43799,in1Mul43799,in0Con61583,in0Con11299], outputs=Mul72325)
w = model.get_layer('Con11299').get_weights() 
w[0] = np.array([[[[[0.7875, 0.7852], [0.342, 0.7018], [0.522, 0.7255], [0.1296, 0.7747]], [[0.4317, 0.3897], [0.8711, 0.4937], [0.0145, 0.7742], [0.5679, 0.6948]]], [[[0.1118, 0.5455], [0.9545, 0.1012], [0.7062, 0.7731], [0.6325, 0.8774]], [[0.8775, 0.2259], [0.3154, 0.4679], [0.2106, 0.9324], [0.3834, 0.4679]]]], [[[[0.0765, 0.4288], [0.836, 0.39], [0.1154, 0.8824], [0.9069, 0.8393]], [[0.9388, 0.0631], [0.0558, 0.7938], [0.5363, 0.9621], [0.7913, 0.3934]]], [[[0.1255, 0.7038], [0.7907, 0.8899], [0.2153, 0.2859], [0.0859, 0.1792]], [[0.4637, 0.5949], [0.6586, 0.6471], [0.5113, 0.0901], [0.652, 0.8946]]]]])
w[1] = np.array([0, 0, 0, 0])
model.get_layer('Con11299').set_weights(w) 
in0Mul43799 = tf.constant([[[[[0.5291], [0.5462]], [[0.2763], [0.8788]]]]])
in1Mul43799 = tf.constant([[[[[0.1144], [0.0668]], [[0.0879], [0.4815]]]]])
in0Con61583 = tf.constant([[[[0.9564, 0.1206, 0.0066, 0.8772, 0.6668, 0.1567, 0.6151], [0.7716, 0.6692, 0.3298, 0.3162, 0.3953, 0.765, 0.124], [0.4955, 0.1934, 0.0732, 0.5164, 0.8004, 0.101, 0.5723], [0.806, 0.3098, 0.8732, 0.33, 0.3247, 0.4782, 0.3613]], [[0.3386, 0.1477, 0.1432, 0.1194, 0.4387, 0.588, 0.2156], [0.7806, 0.1567, 0.9543, 0.2805, 0.233, 0.4087, 0.7809], [0.2325, 0.7377, 0.931, 0.4942, 0.2356, 0.7864, 0.985], [0.2743, 0.7583, 0.6723, 0.3541, 0.6875, 0.1659, 0.464]], [[0.9017, 0.521, 0.3701, 0.3103, 0.9913, 0.1339, 0.3325], [0.7837, 0.8832, 0.5519, 0.801, 0.2716, 0.8176, 0.484], [0.514, 0.2635, 0.8679, 0.4107, 0.2517, 0.7501, 0.8082], [0.908, 0.5373, 0.85, 0.1756, 0.4073, 0.4912, 0.208]], [[0.4269, 0.665, 0.3325, 0.6764, 0.5928, 0.317, 0.282], [0.2759, 0.1128, 0.0276, 0.1745, 0.4654, 0.5974, 0.9066], [0.9145, 0.2995, 0.1114, 0.066, 0.0191, 0.1428, 0.1949], [0.4142, 0.8863, 0.2258, 0.2478, 0.0441, 0.0963, 0.4802]]]])
in0Con11299 = tf.constant([[[[[0.4818, 0.3027], [0.6656, 0.6845]], [[0.0223, 0.4907], [0.6251, 0.0767]]], [[[0.1311, 0.1954], [0.9595, 0.4581]], [[0.1137, 0.1571], [0.7404, 0.4936]]]]])
print (np.array2string(model.predict([in0Mul43799,in1Mul43799,in0Con61583,in0Con11299],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Mul72325.png')

LMul43799 = multiply_layer([[[[[[0.5291], [0.5462]], [[0.2763], [0.8788]]]]], [[[[[0.1144], [0.0668]], [[0.0879], [0.4815]]]]]], Mul43799), 
LRes89734 = reshape_layer(Mul43799, [1, 2, 2], Res89734), 
LGlo83806 = global_average_pooling2D_layer(Res89734, Glo83806), 
LRes23778 = reshape_layer(Glo83806, [2, 1], Res23778), 
LRes92230 = reshape_layer(Res23778, [2, 1, 1], Res92230), 
LZer40779 = zero_padding2D_layer(Res92230, 2, 0, 3, 0, Zer40779), 
LCon61583 = concatenate_layer([Zer40779,[[[[0.9564, 0.1206, 0.0066, 0.8772, 0.6668, 0.1567, 0.6151], [0.7716, 0.6692, 0.3298, 0.3162, 0.3953, 0.765, 0.124], [0.4955, 0.1934, 0.0732, 0.5164, 0.8004, 0.101, 0.5723], [0.806, 0.3098, 0.8732, 0.33, 0.3247, 0.4782, 0.3613]], [[0.3386, 0.1477, 0.1432, 0.1194, 0.4387, 0.588, 0.2156], [0.7806, 0.1567, 0.9543, 0.2805, 0.233, 0.4087, 0.7809], [0.2325, 0.7377, 0.931, 0.4942, 0.2356, 0.7864, 0.985], [0.2743, 0.7583, 0.6723, 0.3541, 0.6875, 0.1659, 0.464]], [[0.9017, 0.521, 0.3701, 0.3103, 0.9913, 0.1339, 0.3325], [0.7837, 0.8832, 0.5519, 0.801, 0.2716, 0.8176, 0.484], [0.514, 0.2635, 0.8679, 0.4107, 0.2517, 0.7501, 0.8082], [0.908, 0.5373, 0.85, 0.1756, 0.4073, 0.4912, 0.208]], [[0.4269, 0.665, 0.3325, 0.6764, 0.5928, 0.317, 0.282], [0.2759, 0.1128, 0.0276, 0.1745, 0.4654, 0.5974, 0.9066], [0.9145, 0.2995, 0.1114, 0.066, 0.0191, 0.1428, 0.1949], [0.4142, 0.8863, 0.2258, 0.2478, 0.0441, 0.0963, 0.4802]]]]], 3, Con61583), 
LCon11299 = conv3D_transpose_layer([[[[[0.4818, 0.3027], [0.6656, 0.6845]], [[0.0223, 0.4907], [0.6251, 0.0767]]], [[[0.1311, 0.1954], [0.9595, 0.4581]], [[0.1137, 0.1571], [0.7404, 0.4936]]]]], 2, 2, 2,[[[[[0.7875, 0.7852], [0.342, 0.7018], [0.522, 0.7255], [0.1296, 0.7747]], [[0.4317, 0.3897], [0.8711, 0.4937], [0.0145, 0.7742], [0.5679, 0.6948]]], [[[0.1118, 0.5455], [0.9545, 0.1012], [0.7062, 0.7731], [0.6325, 0.8774]], [[0.8775, 0.2259], [0.3154, 0.4679], [0.2106, 0.9324], [0.3834, 0.4679]]]], [[[[0.0765, 0.4288], [0.836, 0.39], [0.1154, 0.8824], [0.9069, 0.8393]], [[0.9388, 0.0631], [0.0558, 0.7938], [0.5363, 0.9621], [0.7913, 0.3934]]], [[[0.1255, 0.7038], [0.7907, 0.8899], [0.2153, 0.2859], [0.0859, 0.1792]], [[0.4637, 0.5949], [0.6586, 0.6471], [0.5113, 0.0901], [0.652, 0.8946]]]]],[0, 0, 0, 0], 1, 1, 1, true, Con11299), 
LRes934 = reshape_layer(Con11299, [2, 2, 8], Res934), 
LAve82059 = average_pooling2D_layer(Res934, 1, 1, Ave82059), 
LZer30641 = zero_padding2D_layer(Ave82059, 1, 1, 1, 1, Zer30641), 
LMul72325 = multiply_layer([Con61583,Zer30641], Mul72325), 
exec_layers([LMul43799,LRes89734,LGlo83806,LRes23778,LRes92230,LZer40779,LCon61583,LCon11299,LRes934,LAve82059,LZer30641,LMul72325],["Mul43799","Res89734","Glo83806","Res23778","Res92230","Zer40779","Con61583","Con11299","Res934","Ave82059","Zer30641","Mul72325"],Mul72325,"Mul72325")

Actual (Unparsed): [[[[0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000]], [[0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.2944505, 0.0738227, 0.2833727, 0.3892175, 0.2975774, 0.4435966, 0.8593602], [0.0000000, 0.1958839, 0.6948455, 0.8875808, 0.8363406, 0.3598733, 1.6869142, 1.8143333], [0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000]], [[0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.5507888, 0.4706565, 0.4742849, 1.6531805, 0.5298585, 1.8124722, 1.1460737], [0.0000000, 0.5933592, 0.2747817, 0.7971700, 1.1083441, 1.1233584, 2.5097793, 2.7554080], [0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000]], [[0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000]]]]

Expected (Unparsed): [[[[0,0.0,0.0,0.0,0.0,0.0,0.0,0.0],[0,0.0,0.0,0.0,0.0,0.0,0.0,0.0],[0,0.0,0.0,0.0,0.0,0.0,0.0,0.0],[0,0.0,0.0,0.0,0.0,0.0,0.0,0.0]],[[0,0.0,0.0,0.0,0.0,0.0,0.0,0.0],[0.0,0.294450485076,0.073822694115,0.28337267627100005,0.389217494325,0.29757741091000006,0.44359660019300007,0.8593602168810001],[0.0,0.19588385400000002,0.694845516846,0.88758081335,0.8363406151099998,0.3598733526680001,1.6869141658480002,1.8143332890499997],[0,0.0,0.0,0.0,0.0,0.0,0.0,0.0]],[[0,0.0,0.0,0.0,0.0,0.0,0.0,0.0],[0.0,0.550788842764,0.4706564851200001,0.47428490669299994,1.65318055983,0.529858483812,1.8124722200479997,1.14607371076],[0.0,0.5933592355999999,0.27478164183,0.797170003476,1.1083441591649998,1.1233583459969998,2.5097791826119997,2.755407970818],[0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0]],[[0,0.0,0.0,0.0,0.0,0.0,0.0,0.0],[0,0.0,0.0,0.0,0.0,0.0,0.0,0.0],[0,0.0,0.0,0.0,0.0,0.0,0.0,0.0],[0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0]]]]

Actual:   [[[[0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0]], [[0, 0, 0, 0, 0, 0, 0, 0], [0, 0.2945, 0.0739, 0.2834, 0.3893, 0.2976, 0.4436, 0.8594], [0, 0.1959, 0.6949, 0.8876, 0.8364, 0.3599, 1.687, 1.8144], [0, 0, 0, 0, 0, 0, 0, 0]], [[0, 0, 0, 0, 0, 0, 0, 0], [0, 0.5508, 0.4707, 0.4743, 1.6532, 0.5299, 1.8125, 1.1461], [0, 0.5934, 0.2748, 0.7972, 1.1084, 1.1234, 2.5098, 2.7555], [0, 0, 0, 0, 0, 0, 0, 0]], [[0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0]]]]

Expected: [[[[0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0]], [[0, 0, 0, 0, 0, 0, 0, 0], [0, 0.2945, 0.0739, 0.2834, 0.3893, 0.2976, 0.4436, 0.8594], [0, 0.1959, 0.6949, 0.8876, 0.8364, 0.3599, 1.687, 1.8144], [0, 0, 0, 0, 0, 0, 0, 0]], [[0, 0, 0, 0, 0, 0, 0, 0], [0, 0.5508, 0.4707, 0.4743, 1.6532, 0.5299, 1.8125, 1.1461], [0, 0.5934, 0.2748, 0.7972, 1.1084, 1.1234, 2.5098, 2.7555], [0, 0, 0, 0, 0, 0, 0, 0]], [[0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0]]]]