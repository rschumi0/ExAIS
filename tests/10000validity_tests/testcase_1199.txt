import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Sub6962 = tf.keras.layers.Input(shape=([3, 2, 2]))
in1Sub6962 = tf.keras.layers.Input(shape=([3, 2, 2]))
in0Add4356 = tf.keras.layers.Input(shape=([2, 2, 1, 1]))
in1Add4356 = tf.keras.layers.Input(shape=([2, 2, 1, 1]))
in0Mas5224 = tf.keras.layers.Input(shape=([4, 1]))
in0Con26537 = tf.keras.layers.Input(shape=([4, 3, 1]))
in0Mul69437 = tf.keras.layers.Input(shape=([2, 2, 2]))
in1Mul69437 = tf.keras.layers.Input(shape=([2, 2, 2]))

Sub6962 = keras.layers.Subtract(name = 'Sub6962', )([in0Sub6962,in1Sub6962])
Res30547 = keras.layers.Reshape((3, 2, 2, 1), name = 'Res30547', )(Sub6962)
Add4356 = keras.layers.Add(name = 'Add4356', )([in0Add4356,in1Add4356])
Zer50978 = keras.layers.ZeroPadding3D(padding=((1, 0), (0, 0), (1, 0)), name = 'Zer50978', )(Add4356)
Min94737 = keras.layers.Minimum(name = 'Min94737', )([Res30547,Zer50978])
Res33936 = keras.layers.Reshape((3, 2, 2), name = 'Res33936', )(Min94737)
Zer13842 = keras.layers.ZeroPadding2D(padding=((1, 0), (1, 0)), name = 'Zer13842', )(Res33936)
Mas5224 = keras.layers.Masking(mask_value=2, name = 'Mas5224', )(in0Mas5224)
Res76579 = keras.layers.Reshape((4, 1, 1), name = 'Res76579', )(Mas5224)
Zer33599 = keras.layers.ZeroPadding2D(padding=((0, 0), (2, 0)), name = 'Zer33599', )(Res76579)
Con26537 = keras.layers.Concatenate(axis=3, name = 'Con26537', )([Zer33599,in0Con26537])
Mul69437 = keras.layers.Multiply(name = 'Mul69437', )([in0Mul69437,in1Mul69437])
Zer35199 = keras.layers.ZeroPadding2D(padding=((2, 0), (1, 0)), name = 'Zer35199', )(Mul69437)
Ave10177 = keras.layers.Average(name = 'Ave10177', )([Con26537,Zer35199])
Sub20152 = keras.layers.Subtract(name = 'Sub20152', )([Zer13842,Ave10177])
model = tf.keras.models.Model(inputs=[in0Sub6962,in1Sub6962,in0Add4356,in1Add4356,in0Mas5224,in0Con26537,in0Mul69437,in1Mul69437], outputs=Sub20152)
in0Sub6962 = tf.constant([[[[0.23, 0.9412], [0.2162, 0.2156]], [[0.4399, 0.4829], [0.8307, 0.5695]], [[0.273, 0.4562], [0.4467, 0.0951]]]])
in1Sub6962 = tf.constant([[[[0.5922, 0.894], [0.2219, 0.3617]], [[0.244, 0.6403], [0.6439, 0.1529]], [[0.4333, 0.0719], [0.8173, 0.2057]]]])
in0Add4356 = tf.constant([[[[[0.6317]], [[0.6899]]], [[[0.8761]], [[0.275]]]]])
in1Add4356 = tf.constant([[[[[0.3379]], [[0.2973]]], [[[0.7105]], [[0.5967]]]]])
in0Mas5224 = tf.constant([[[1.506], [1.756], [1.3277], [1.3652]]])
in0Con26537 = tf.constant([[[[0.344], [0.9824], [0.4401]], [[0.4279], [0.642], [0.4187]], [[0.1952], [0.1596], [0.6999]], [[0.8317], [0.4017], [0.3337]]]])
in0Mul69437 = tf.constant([[[[0.4768, 0.386], [0.336, 0.6734]], [[0.8089, 0.9098], [0.2335, 0.4726]]]])
in1Mul69437 = tf.constant([[[[0.4872, 0.4725], [0.4126, 0.5007]], [[0.6094, 0.6764], [0.0506, 0.8009]]]])
print (np.array2string(model.predict([in0Sub6962,in1Sub6962,in0Add4356,in1Add4356,in0Mas5224,in0Con26537,in0Mul69437,in1Mul69437],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Sub20152.png')

LSub6962 = subtract_layer([[[[0.23, 0.9412], [0.2162, 0.2156]], [[0.4399, 0.4829], [0.8307, 0.5695]], [[0.273, 0.4562], [0.4467, 0.0951]]]], [[[[0.5922, 0.894], [0.2219, 0.3617]], [[0.244, 0.6403], [0.6439, 0.1529]], [[0.4333, 0.0719], [0.8173, 0.2057]]]], Sub6962), 
LRes30547 = reshape_layer(Sub6962, [3, 2, 2, 1], Res30547), 
LAdd4356 = add_layer([[[[[[0.6317]], [[0.6899]]], [[[0.8761]], [[0.275]]]]], [[[[[0.3379]], [[0.2973]]], [[[0.7105]], [[0.5967]]]]]], Add4356), 
LZer50978 = zero_padding3D_layer(Add4356, 1, 0, 0, 0, 1, 0, Zer50978), 
LMin94737 = minimum_layer([Res30547,Zer50978], Min94737), 
LRes33936 = reshape_layer(Min94737, [3, 2, 2], Res33936), 
LZer13842 = zero_padding2D_layer(Res33936, 1, 0, 1, 0, Zer13842), 
LMas5224 = masking_layer([[[1.506], [1.756], [1.3277], [1.3652]]], 2, Mas5224), 
LRes76579 = reshape_layer(Mas5224, [4, 1, 1], Res76579), 
LZer33599 = zero_padding2D_layer(Res76579, 0, 0, 2, 0, Zer33599), 
LCon26537 = concatenate_layer([Zer33599,[[[[0.344], [0.9824], [0.4401]], [[0.4279], [0.642], [0.4187]], [[0.1952], [0.1596], [0.6999]], [[0.8317], [0.4017], [0.3337]]]]], 3, Con26537), 
LMul69437 = multiply_layer([[[[[0.4768, 0.386], [0.336, 0.6734]], [[0.8089, 0.9098], [0.2335, 0.4726]]]], [[[[0.4872, 0.4725], [0.4126, 0.5007]], [[0.6094, 0.6764], [0.0506, 0.8009]]]]], Mul69437), 
LZer35199 = zero_padding2D_layer(Mul69437, 2, 0, 1, 0, Zer35199), 
LAve10177 = average_layer([Con26537,Zer35199], Ave10177), 
LSub20152 = subtract_layer(Zer13842,Ave10177, Sub20152), 
exec_layers([LSub6962,LRes30547,LAdd4356,LZer50978,LMin94737,LRes33936,LZer13842,LMas5224,LRes76579,LZer33599,LCon26537,LMul69437,LZer35199,LAve10177,LSub20152],["Sub6962","Res30547","Add4356","Zer50978","Min94737","Res33936","Zer13842","Mas5224","Res76579","Zer33599","Con26537","Mul69437","Zer35199","Ave10177","Sub20152"],Sub20152,"Sub20152")

Actual (Unparsed): [[[[0.0000000, -0.1720000], [0.0000000, -0.4912000], [-0.7530000, -0.2200500]], [[0.0000000, -0.2139500], [-0.3622000, -0.3210000], [-0.8837000, -0.3554500]], [[0.0000000, -0.0976000], [-0.1161485, -0.3283925], [-0.7331668, -0.1019356]], [[0.0000000, -0.4158500], [-0.4067718, -0.1242444], [-1.0591076, -0.4667027]]]]

Expected (Unparsed): [[[[0,-0.172],[0,-0.4912],[-0.753,-0.22005]],[[0,-0.21395],[-0.36219999999999997,-0.321],[-0.8836999999999999,-0.35545000000000004]],[[0,-0.0976],[-0.11614848000000001,-0.3283925],[-0.7331668,-0.10193569000000002]],[[0,-0.41585],[-0.40677183,-0.12424436000000005],[-1.05910755,-0.46670266999999993]]]]

Actual:   [[[[0, -0.172], [0, -0.4912], [-0.753, -0.22]], [[0, -0.2139], [-0.3622, -0.321], [-0.8837, -0.3554]], [[0, -0.0976], [-0.1161, -0.3283], [-0.7331, -0.1019]], [[0, -0.4158], [-0.4067, -0.1242], [-1.0591, -0.4667]]]]

Expected: [[[[0, -0.172], [0, -0.4912], [-0.753, -0.22]], [[0, -0.2139], [-0.3621, -0.321], [-0.8836, -0.3554]], [[0, -0.0976], [-0.1161, -0.3283], [-0.7331, -0.1019]], [[0, -0.4158], [-0.4067, -0.1242], [-1.0591, -0.4667]]]]