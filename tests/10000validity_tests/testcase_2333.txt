import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Glo85410 = tf.keras.layers.Input(shape=([1, 1, 1]))
in0Con43178 = tf.keras.layers.Input(shape=([2, 2, 1]))
in0Mul58603 = tf.keras.layers.Input(shape=([2, 2, 2]))
in1Mul58603 = tf.keras.layers.Input(shape=([2, 2, 2]))
in0Con9988 = tf.keras.layers.Input(shape=([2, 2]))
in0Con4226 = tf.keras.layers.Input(shape=([2, 1]))
in0Sub56316 = tf.keras.layers.Input(shape=([2, 2, 2]))
in1Sub56316 = tf.keras.layers.Input(shape=([2, 2, 2]))
in0Max93100 = tf.keras.layers.Input(shape=([1, 1]))
in1Max93100 = tf.keras.layers.Input(shape=([1, 1]))
in0Con46350 = tf.keras.layers.Input(shape=([1, 3]))

Glo85410 = keras.layers.GlobalAveragePooling2D(name = 'Glo85410', )(in0Glo85410)
Res18586 = keras.layers.Reshape((1, 1), name = 'Res18586', )(Glo85410)
Res44450 = keras.layers.Reshape((1, 1, 1), name = 'Res44450', )(Res18586)
Zer816 = keras.layers.ZeroPadding2D(padding=((1, 0), (1, 0)), name = 'Zer816', )(Res44450)
Con43178 = keras.layers.Concatenate(axis=3, name = 'Con43178', )([Zer816,in0Con43178])
Mul58603 = keras.layers.Multiply(name = 'Mul58603', )([in0Mul58603,in1Mul58603])
Sub68181 = keras.layers.Subtract(name = 'Sub68181', )([Con43178,Mul58603])
Res43663 = keras.layers.Reshape((2, 4), name = 'Res43663', )(Sub68181)
Con9988 = keras.layers.Conv1D(3, (1),strides=(1), padding='valid', dilation_rate=(1), name = 'Con9988', )(in0Con9988)
Con4226 = keras.layers.Concatenate(axis=2, name = 'Con4226', )([Con9988,in0Con4226])
Min36607 = keras.layers.Minimum(name = 'Min36607', )([Res43663,Con4226])
Sub56316 = keras.layers.Subtract(name = 'Sub56316', )([in0Sub56316,in1Sub56316])
Res46645 = keras.layers.Reshape((2, 4), name = 'Res46645', )(Sub56316)
Max15516 = keras.layers.MaxPool1D(pool_size=(2), name = 'Max15516', )(Res46645)
Max93100 = keras.layers.Maximum(name = 'Max93100', )([in0Max93100,in1Max93100])
Con46350 = keras.layers.Concatenate(axis=2, name = 'Con46350', )([Max93100,in0Con46350])
Add7933 = keras.layers.Add(name = 'Add7933', )([Max15516,Con46350])
Zer96076 = keras.layers.ZeroPadding1D(padding=((1, 0)), name = 'Zer96076', )(Add7933)
Ave81274 = keras.layers.Average(name = 'Ave81274', )([Min36607,Zer96076])
model = tf.keras.models.Model(inputs=[in0Glo85410,in0Con43178,in0Mul58603,in1Mul58603,in0Con9988,in0Con4226,in0Sub56316,in1Sub56316,in0Max93100,in1Max93100,in0Con46350], outputs=Ave81274)
w = model.get_layer('Con9988').get_weights() 
w[0] = np.array([[[0.3633, 0.301, 0.2866], [0.8736, 0.5253, 0.6971]]])
w[1] = np.array([0, 0, 0])
model.get_layer('Con9988').set_weights(w) 
in0Glo85410 = tf.constant([[[[1.0009]]]])
in0Con43178 = tf.constant([[[[0.0502], [0.2628]], [[0.2206], [0.9974]]]])
in0Mul58603 = tf.constant([[[[0.4984, 0.3959], [0.1296, 0.3396]], [[0.3912, 0.5921], [0.4892, 0.4722]]]])
in1Mul58603 = tf.constant([[[[0.9571, 0.4946], [0.4333, 0.0822]], [[0.8392, 0.0498], [0.2213, 0.0158]]]])
in0Con9988 = tf.constant([[[0.7836, 0.626], [0.6016, 0.1432]]])
in0Con4226 = tf.constant([[[0.7456], [0.4542]]])
in0Sub56316 = tf.constant([[[[0.7414, 0.8249], [0.2614, 0.6566]], [[0.0737, 0.6024], [0.3011, 0.0503]]]])
in1Sub56316 = tf.constant([[[[0.4567, 0.6531], [0.0751, 0.1751]], [[0.8601, 0.2386], [0.7187, 0.3098]]]])
in0Max93100 = tf.constant([[[0.4084]]])
in1Max93100 = tf.constant([[[0.7679]]])
in0Con46350 = tf.constant([[[0.3453, 0.3791, 0.7429]]])
print (np.array2string(model.predict([in0Glo85410,in0Con43178,in0Mul58603,in1Mul58603,in0Con9988,in0Con4226,in0Sub56316,in1Sub56316,in0Max93100,in1Max93100,in0Con46350],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Ave81274.png')

LGlo85410 = global_average_pooling2D_layer([[[[1.0009]]]], Glo85410), 
LRes18586 = reshape_layer(Glo85410, [1, 1], Res18586), 
LRes44450 = reshape_layer(Res18586, [1, 1, 1], Res44450), 
LZer816 = zero_padding2D_layer(Res44450, 1, 0, 1, 0, Zer816), 
LCon43178 = concatenate_layer([Zer816,[[[[0.0502], [0.2628]], [[0.2206], [0.9974]]]]], 3, Con43178), 
LMul58603 = multiply_layer([[[[[0.4984, 0.3959], [0.1296, 0.3396]], [[0.3912, 0.5921], [0.4892, 0.4722]]]], [[[[0.9571, 0.4946], [0.4333, 0.0822]], [[0.8392, 0.0498], [0.2213, 0.0158]]]]], Mul58603), 
LSub68181 = subtract_layer(Con43178,Mul58603, Sub68181), 
LRes43663 = reshape_layer(Sub68181, [2, 4], Res43663), 
LCon9988 = conv1D_layer([[[0.7836, 0.626], [0.6016, 0.1432]]], 1,[[[0.3633, 0.301, 0.2866], [0.8736, 0.5253, 0.6971]]],[0, 0, 0], 1, false, 1, Con9988), 
LCon4226 = concatenate_layer([Con9988,[[[0.7456], [0.4542]]]], 2, Con4226), 
LMin36607 = minimum_layer([Res43663,Con4226], Min36607), 
LSub56316 = subtract_layer([[[[0.7414, 0.8249], [0.2614, 0.6566]], [[0.0737, 0.6024], [0.3011, 0.0503]]]], [[[[0.4567, 0.6531], [0.0751, 0.1751]], [[0.8601, 0.2386], [0.7187, 0.3098]]]], Sub56316), 
LRes46645 = reshape_layer(Sub56316, [2, 4], Res46645), 
LMax15516 = max_pool1D_layer(Res46645, 2, Max15516), 
LMax93100 = maximum_layer([[[[0.4084]]], [[[0.7679]]]], Max93100), 
LCon46350 = concatenate_layer([Max93100,[[[0.3453, 0.3791, 0.7429]]]], 2, Con46350), 
LAdd7933 = add_layer([Max15516,Con46350], Add7933), 
LZer96076 = zero_padding1D_layer(Add7933, 1, 0, Zer96076), 
LAve81274 = average_layer([Min36607,Zer96076], Ave81274), 
exec_layers([LGlo85410,LRes18586,LRes44450,LZer816,LCon43178,LMul58603,LSub68181,LRes43663,LCon9988,LCon4226,LMin36607,LSub56316,LRes46645,LMax15516,LMax93100,LCon46350,LAdd7933,LZer96076,LAve81274],["Glo85410","Res18586","Res44450","Zer816","Con43178","Mul58603","Sub68181","Res43663","Con9988","Con4226","Min36607","Sub56316","Res46645","Max15516","Max93100","Con46350","Add7933","Zer96076","Ave81274"],Ave81274,"Ave81274")

Actual (Unparsed): [[[-0.2385093, -0.0728061, -0.0280778, 0.1174424], [0.3621525, 0.4501067, 0.4188216, 0.8393000]]]

Expected (Unparsed): [[[-0.23850932,-0.07280606999999999,-0.02807784,0.11744244],[0.36215248,0.45010671,0.41882164,0.8392999999999999]]]

Actual:   [[[-0.2385, -0.0728, -0.028, 0.1175], [0.3622, 0.4502, 0.4189, 0.8393]]]

Expected: [[[-0.2385, -0.0728, -0.028, 0.1175], [0.3622, 0.4502, 0.4189, 0.8393]]]