import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Max68815 = tf.keras.layers.Input(shape=([1, 1, 1, 2]))
in1Max68815 = tf.keras.layers.Input(shape=([1, 1, 1, 2]))

Max68815 = keras.layers.Maximum(name = 'Max68815', )([in0Max68815,in1Max68815])
Res36692 = keras.layers.Reshape((1, 1, 2), name = 'Res36692', )(Max68815)
Zer5228 = keras.layers.ZeroPadding2D(padding=((1, 1), (1, 1)), name = 'Zer5228', )(Res36692)
Res96583 = keras.layers.Reshape((3, 3, 2, 1), name = 'Res96583', )(Zer5228)
Up_26053 = keras.layers.UpSampling3D(size=(2, 1, 2), name = 'Up_26053', )(Res96583)
Res39157 = keras.layers.Reshape((6, 3, 4), name = 'Res39157', )(Up_26053)
Res31442 = keras.layers.Reshape((6, 12), name = 'Res31442', )(Res39157)
Ave5195 = keras.layers.AveragePooling1D(pool_size=(1), name = 'Ave5195', )(Res31442)
model = tf.keras.models.Model(inputs=[in0Max68815,in1Max68815], outputs=Ave5195)
in0Max68815 = tf.constant([[[[[0.5537, 0.8392]]]]])
in1Max68815 = tf.constant([[[[[0.7287, 0.3654]]]]])
print (np.array2string(model.predict([in0Max68815,in1Max68815],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Ave5195.png')

LMax68815 = maximum_layer([[[[[[0.5537, 0.8392]]]]], [[[[[0.7287, 0.3654]]]]]], Max68815), 
LRes36692 = reshape_layer(Max68815, [1, 1, 2], Res36692), 
LZer5228 = zero_padding2D_layer(Res36692, 1, 1, 1, 1, Zer5228), 
LRes96583 = reshape_layer(Zer5228, [3, 3, 2, 1], Res96583), 
LUp_26053 = up_sampling3D_layer(Res96583, 2, 1, 2, Up_26053), 
LRes39157 = reshape_layer(Up_26053, [6, 3, 4], Res39157), 
LRes31442 = reshape_layer(Res39157, [6, 12], Res31442), 
LAve5195 = average_pooling1D_layer(Res31442, 1, Ave5195), 
exec_layers([LMax68815,LRes36692,LZer5228,LRes96583,LUp_26053,LRes39157,LRes31442,LAve5195],["Max68815","Res36692","Zer5228","Res96583","Up_26053","Res39157","Res31442","Ave5195"],Ave5195,"Ave5195")

Actual (Unparsed): [[[0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.7287000, 0.7287000, 0.8392000, 0.8392000, 0.0000000, 0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.7287000, 0.7287000, 0.8392000, 0.8392000, 0.0000000, 0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000]]]

Expected (Unparsed): [[[0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0.7287,0.7287,0.8392,0.8392,0,0,0,0],[0,0,0,0,0.7287,0.7287,0.8392,0.8392,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0]]]

Actual:   [[[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0.7287, 0.7287, 0.8392, 0.8392, 0, 0, 0, 0], [0, 0, 0, 0, 0.7287, 0.7287, 0.8392, 0.8392, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]]]

Expected: [[[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0.7287, 0.7287, 0.8392, 0.8392, 0, 0, 0, 0], [0, 0, 0, 0, 0.7287, 0.7287, 0.8392, 0.8392, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]]]