import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Ave66329 = tf.keras.layers.Input(shape=([2, 1, 2, 2]))
in1Ave66329 = tf.keras.layers.Input(shape=([2, 1, 2, 2]))
in0Min61886 = tf.keras.layers.Input(shape=([2, 1, 2]))
in1Min61886 = tf.keras.layers.Input(shape=([2, 1, 2]))
in0Con67193 = tf.keras.layers.Input(shape=([2, 1, 2]))
in0Max67591 = tf.keras.layers.Input(shape=([2, 2, 2]))
in1Max67591 = tf.keras.layers.Input(shape=([2, 2, 2]))
in0Con67854 = tf.keras.layers.Input(shape=([2, 2, 2]))
in0Con73866 = tf.keras.layers.Input(shape=([2, 2, 4, 1]))
in0ELU96299 = tf.keras.layers.Input(shape=([1, 2, 1, 2]))

Ave66329 = keras.layers.Average(name = 'Ave66329', )([in0Ave66329,in1Ave66329])
Res3369 = keras.layers.Reshape((2, 1, 4), name = 'Res3369', )(Ave66329)
Min61886 = keras.layers.Minimum(name = 'Min61886', )([in0Min61886,in1Min61886])
Con67193 = keras.layers.Concatenate(axis=3, name = 'Con67193', )([Min61886,in0Con67193])
Min22296 = keras.layers.Minimum(name = 'Min22296', )([Res3369,Con67193])
Zer45632 = keras.layers.ZeroPadding2D(padding=((0, 0), (1, 0)), name = 'Zer45632', )(Min22296)
Max67591 = keras.layers.Maximum(name = 'Max67591', )([in0Max67591,in1Max67591])
Con67854 = keras.layers.Concatenate(axis=3, name = 'Con67854', )([Max67591,in0Con67854])
Mul2118 = keras.layers.Multiply(name = 'Mul2118', )([Zer45632,Con67854])
ReL85811 = keras.layers.ReLU(max_value=4.751613619491442, negative_slope=5.481786201033893, threshold=5.354545657402517, name = 'ReL85811', )(Mul2118)
Res54477 = keras.layers.Reshape((2, 2, 4, 1), name = 'Res54477', )(ReL85811)
Con73866 = keras.layers.Concatenate(axis=4, name = 'Con73866', )([Res54477,in0Con73866])
ELU96299 = keras.layers.ELU(alpha=-4.661672441832709, name = 'ELU96299', input_shape=(1, 2, 1, 2))(in0ELU96299)
Zer78299 = keras.layers.ZeroPadding3D(padding=((1, 0), (0, 0), (3, 0)), name = 'Zer78299', )(ELU96299)
Add60790 = keras.layers.Add(name = 'Add60790', )([Con73866,Zer78299])
model = tf.keras.models.Model(inputs=[in0Ave66329,in1Ave66329,in0Min61886,in1Min61886,in0Con67193,in0Max67591,in1Max67591,in0Con67854,in0Con73866,in0ELU96299], outputs=Add60790)
in0Ave66329 = tf.constant([[[[[0.3366, 0.4907], [0.311, 0.01]]], [[[0.9063, 0.5493], [0.3714, 0.2875]]]]])
in1Ave66329 = tf.constant([[[[[0.8128, 0.9053], [0.4462, 0.7954]]], [[[0.8896, 0.3668], [0.0644, 0.6473]]]]])
in0Min61886 = tf.constant([[[[0.9721, 0.9008]], [[0.8143, 0.3659]]]])
in1Min61886 = tf.constant([[[[0.6463, 0.7197]], [[0.0264, 0.3604]]]])
in0Con67193 = tf.constant([[[[0.2467, 0.6321]], [[0.8899, 0.8453]]]])
in0Max67591 = tf.constant([[[[0.2424, 0.8656], [0.4814, 0.9274]], [[0.3311, 0.0003], [0.8615, 0.7697]]]])
in1Max67591 = tf.constant([[[[0.0934, 0.1924], [0.2866, 0.2557]], [[0.3248, 0.1138], [0.6878, 0.9034]]]])
in0Con67854 = tf.constant([[[[0.1766, 0.2914], [0.3028, 0.0179]], [[0.0125, 0.95], [0.0935, 0.2492]]]])
in0Con73866 = tf.constant([[[[[0.5851], [0.7407], [0.4357], [0.332]], [[0.5177], [0.7123], [0.8191], [0.3502]]], [[[0.6182], [0.7464], [0.5677], [0.2526]], [[0.7808], [0.9897], [0.9187], [0.4581]]]]])
in0ELU96299 = tf.constant([[[[[0.5088, 0.2055]], [[0.9549, 0.8581]]]]])
print (np.array2string(model.predict([in0Ave66329,in1Ave66329,in0Min61886,in1Min61886,in0Con67193,in0Max67591,in1Max67591,in0Con67854,in0Con73866,in0ELU96299],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Add60790.png')

LAve66329 = average_layer([[[[[[0.3366, 0.4907], [0.311, 0.01]]], [[[0.9063, 0.5493], [0.3714, 0.2875]]]]], [[[[[0.8128, 0.9053], [0.4462, 0.7954]]], [[[0.8896, 0.3668], [0.0644, 0.6473]]]]]], Ave66329), 
LRes3369 = reshape_layer(Ave66329, [2, 1, 4], Res3369), 
LMin61886 = minimum_layer([[[[[0.9721, 0.9008]], [[0.8143, 0.3659]]]], [[[[0.6463, 0.7197]], [[0.0264, 0.3604]]]]], Min61886), 
LCon67193 = concatenate_layer([Min61886,[[[[0.2467, 0.6321]], [[0.8899, 0.8453]]]]], 3, Con67193), 
LMin22296 = minimum_layer([Res3369,Con67193], Min22296), 
LZer45632 = zero_padding2D_layer(Min22296, 0, 0, 1, 0, Zer45632), 
LMax67591 = maximum_layer([[[[[0.2424, 0.8656], [0.4814, 0.9274]], [[0.3311, 0.0003], [0.8615, 0.7697]]]], [[[[0.0934, 0.1924], [0.2866, 0.2557]], [[0.3248, 0.1138], [0.6878, 0.9034]]]]], Max67591), 
LCon67854 = concatenate_layer([Max67591,[[[[0.1766, 0.2914], [0.3028, 0.0179]], [[0.0125, 0.95], [0.0935, 0.2492]]]]], 3, Con67854), 
LMul2118 = multiply_layer([Zer45632,Con67854], Mul2118), 
LReL85811 = relu_layer(Mul2118, 4.751613619491442, 5.481786201033893, 5.354545657402517, ReL85811), 
LRes54477 = reshape_layer(ReL85811, [2, 2, 4, 1], Res54477), 
LCon73866 = concatenate_layer([Res54477,[[[[[0.5851], [0.7407], [0.4357], [0.332]], [[0.5177], [0.7123], [0.8191], [0.3502]]], [[[0.6182], [0.7464], [0.5677], [0.2526]], [[0.7808], [0.9897], [0.9187], [0.4581]]]]]], 4, Con73866), 
LELU96299 = elu_layer([[[[[0.5088, 0.2055]], [[0.9549, 0.8581]]]]], -4.661672441832709, ELU96299), 
LZer78299 = zero_padding3D_layer(ELU96299, 1, 0, 0, 0, 3, 0, Zer78299), 
LAdd60790 = add_layer([Con73866,Zer78299], Add60790), 
exec_layers([LAve66329,LRes3369,LMin61886,LCon67193,LMin22296,LZer45632,LMax67591,LCon67854,LMul2118,LReL85811,LRes54477,LCon73866,LELU96299,LZer78299,LAdd60790],["Ave66329","Res3369","Min61886","Con67193","Min22296","Zer45632","Max67591","Con67854","Mul2118","ReL85811","Res54477","Con73866","ELU96299","Zer78299","Add60790"],Add60790,"Add60790")

Actual (Unparsed): [[[[[-29.3524745, 0.5851000], [-29.3524745, 0.7407000], [-29.3524745, 0.4357000], [-29.3524745, 0.3320000]], [[-27.8358803, 0.5177000], [-25.8039761, 0.7123000], [-28.9429809, 0.8191000], [-29.3129600, 0.3502000]]], [[[-29.3524745, 0.6182000], [-29.3524745, 0.7464000], [-29.3524745, 0.5677000], [-28.8436745, 0.4581000]], [[-29.2277989, 0.7808000], [-27.5676852, 0.9897000], [-29.2407905, 0.9187000], [-27.7590775, 1.3162000]]]]]

Expected (Unparsed): [[[[[-29.352474497555075,0.5851],[-29.352474497555075,0.7407],[-29.352474497555075,0.4357],[-29.352474497555075,0.332]],[[-27.835880347741043,0.5177],[-25.80397614861357,0.7123],[-28.94298090218033,0.8191],[-29.312959973628576,0.3502]]],[[[-29.352474497555075,0.6182],[-29.352474497555075,0.7464],[-29.352474497555075,0.5677],[-28.843674497555075,0.45809999999999995]],[[-29.22779894491324,0.7808],[-27.567685163848424,0.9897],[-29.24079050412038,0.9187],[-27.75907752946056,1.3162]]]]]

Actual:   [[[[[-29.3524, 0.5851], [-29.3524, 0.7407], [-29.3524, 0.4357], [-29.3524, 0.332]], [[-27.8358, 0.5177], [-25.8039, 0.7123], [-28.9429, 0.8191], [-29.3129, 0.3502]]], [[[-29.3524, 0.6182], [-29.3524, 0.7464], [-29.3524, 0.5677], [-28.8436, 0.4581]], [[-29.2277, 0.7808], [-27.5676, 0.9897], [-29.2407, 0.9187], [-27.759, 1.3162]]]]]

Expected: [[[[[-29.3524, 0.5851], [-29.3524, 0.7407], [-29.3524, 0.4357], [-29.3524, 0.332]], [[-27.8358, 0.5177], [-25.8039, 0.7123], [-28.9429, 0.8191], [-29.3129, 0.3502]]], [[[-29.3524, 0.6182], [-29.3524, 0.7464], [-29.3524, 0.5677], [-28.8436, 0.4581]], [[-29.2277, 0.7808], [-27.5676, 0.9897], [-29.2407, 0.9187], [-27.759, 1.3162]]]]]