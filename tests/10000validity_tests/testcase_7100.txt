import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Glo11915 = tf.keras.layers.Input(shape=([2, 2, 2]))
in0Ave82101 = tf.keras.layers.Input(shape=([2, 1]))
in1Ave82101 = tf.keras.layers.Input(shape=([2, 1]))
in0Sim38839 = tf.keras.layers.Input(shape=([2, 1]))
in0Con11810 = tf.keras.layers.Input(shape=([1]))
in0Glo67015 = tf.keras.layers.Input(shape=([1, 1, 1, 2]))
in0Con32105 = tf.keras.layers.Input(shape=([1]))

Glo11915 = keras.layers.GlobalMaxPool2D(name = 'Glo11915', )(in0Glo11915)
Ave82101 = keras.layers.Average(name = 'Ave82101', )([in0Ave82101,in1Ave82101])
Fla85744 = keras.layers.Flatten(name = 'Fla85744', )(Ave82101)
Sim38839 = keras.layers.SimpleRNN(1,name = 'Sim38839', )(in0Sim38839)
Con11810 = keras.layers.Concatenate(axis=1, name = 'Con11810', )([Sim38839,in0Con11810])
Glo67015 = keras.layers.GlobalMaxPool3D(name = 'Glo67015', )(in0Glo67015)
Max89927 = keras.layers.Maximum(name = 'Max89927', )([Con11810,Glo67015])
Dot50161 = keras.layers.Dot(axes=(1, 1), name = 'Dot50161', )([Fla85744,Max89927])
Con32105 = keras.layers.Concatenate(axis=1, name = 'Con32105', )([Dot50161,in0Con32105])
Add84864 = keras.layers.Add(name = 'Add84864', )([Glo11915,Con32105])
Sof62692 = keras.layers.Softmax(axis=1, name = 'Sof62692', )(Add84864)
model = tf.keras.models.Model(inputs=[in0Glo11915,in0Ave82101,in1Ave82101,in0Sim38839,in0Con11810,in0Glo67015,in0Con32105], outputs=Sof62692)
w = model.get_layer('Sim38839').get_weights() 
w[0] = np.array([[4]])
w[1] = np.array([[7]])
w[2] = np.array([3])
model.get_layer('Sim38839').set_weights(w) 
in0Glo11915 = tf.constant([[[[1.1627, 1.1397], [1.1105, 1.9234]], [[1.5278, 1.0802], [1.3493, 1.3484]]]])
in0Ave82101 = tf.constant([[[0.2759], [0.9843]]])
in1Ave82101 = tf.constant([[[0.1737], [0.7609]]])
in0Sim38839 = tf.constant([[[1], [3]]])
in0Con11810 = tf.constant([[0.4738]])
in0Glo67015 = tf.constant([[[[[1.6288, 1.7414]]]]])
in0Con32105 = tf.constant([[0.0492]])
print (np.array2string(model.predict([in0Glo11915,in0Ave82101,in1Ave82101,in0Sim38839,in0Con11810,in0Glo67015,in0Con32105],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Sof62692.png')

LGlo11915 = global_max_pool2D_layer([[[[1.1627, 1.1397], [1.1105, 1.9234]], [[1.5278, 1.0802], [1.3493, 1.3484]]]], Glo11915), 
LAve82101 = average_layer([[[[0.2759], [0.9843]]], [[[0.1737], [0.7609]]]], Ave82101), 
LFla85744 = flatten_layer(Ave82101, Fla85744), 
LSim38839 = simple_rnn_layer([[[1], [3]]],[[4]],[[7]],[3], Sim38839), 
LCon11810 = concatenate_layer([Sim38839,[[0.4738]]], 1, Con11810), 
LGlo67015 = global_max_pool3D_layer([[[[[1.6288, 1.7414]]]]], Glo67015), 
LMax89927 = maximum_layer([Con11810,Glo67015], Max89927), 
LDot50161 = dot_layer(Fla85744,Max89927, 1, 1, Dot50161), 
LCon32105 = concatenate_layer([Dot50161,[[0.0492]]], 1, Con32105), 
LAdd84864 = add_layer([Glo11915,Con32105], Add84864), 
LSof62692 = softmax_layer(Add84864, 1, Sof62692), 
exec_layers([LGlo11915,LAve82101,LFla85744,LSim38839,LCon11810,LGlo67015,LMax89927,LDot50161,LCon32105,LAdd84864,LSof62692],["Glo11915","Ave82101","Fla85744","Sim38839","Con11810","Glo67015","Max89927","Dot50161","Con32105","Add84864","Sof62692"],Sof62692,"Sof62692")

Actual (Unparsed): [[0.8085940, 0.1914060]]

Expected (Unparsed): [[0.8085939643322669,0.19140603566773312]]

Actual:   [[0.8086, 0.1915]]

Expected: [[0.8086, 0.1915]]