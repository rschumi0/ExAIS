import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Add6824 = tf.keras.layers.Input(shape=([2, 1, 2]))
in1Add6824 = tf.keras.layers.Input(shape=([2, 1, 2]))

Add6824 = keras.layers.Add(name = 'Add6824', )([in0Add6824,in1Add6824])
Res7985 = keras.layers.Reshape((2, 1, 2, 1), name = 'Res7985', )(Add6824)
Con53456 = keras.layers.Conv3D(4, (1, 1, 2),strides=(1, 4, 1), padding='valid', dilation_rate=(1, 1, 1), name = 'Con53456', )(Res7985)
model = tf.keras.models.Model(inputs=[in0Add6824,in1Add6824], outputs=Con53456)
w = model.get_layer('Con53456').get_weights() 
w[0] = np.array([[[[[0.771, 0.1524, 0.3528, 0.3434]], [[0.8256, 0.5227, 0.7015, 0.6197]]]]])
w[1] = np.array([0, 0, 0, 0])
model.get_layer('Con53456').set_weights(w) 
in0Add6824 = tf.constant([[[[0.9619, 0.9317]], [[0.7268, 0.2218]]]])
in1Add6824 = tf.constant([[[[0.5232, 0.4569]], [[0.347, 0.0418]]]])
print (np.array2string(model.predict([in0Add6824,in1Add6824],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Con53456.png')

LAdd6824 = add_layer([[[[[0.9619, 0.9317]], [[0.7268, 0.2218]]]], [[[[0.5232, 0.4569]], [[0.347, 0.0418]]]]], Add6824), 
LRes7985 = reshape_layer(Add6824, [2, 1, 2, 1], Res7985), 
LCon53456 = conv3D_layer(Res7985, 1, 1, 2,[[[[[0.771, 0.1524, 0.3528, 0.3434]], [[0.8256, 0.5227, 0.7015, 0.6197]]]]],[0, 0, 0, 0], 1, 4, 1, false, 1, 1, 1, Con53456), 
exec_layers([LAdd6824,LRes7985,LCon53456],["Add6824","Res7985","Con53456"],Con53456,"Con53456")

Actual (Unparsed): [[[[[2.2914402, 0.9521505, 1.4980462, 1.3704987]]], [[[1.0455280, 0.3014308, 0.5637520, 0.5320958]]]]]

Expected (Unparsed): [[[[[2.29144026,0.9521504599999999,1.4980461799999998,1.3704987599999998]]],[[[1.04552796,0.30143084,0.56375204,0.53209584]]]]]

Actual:   [[[[[2.2915, 0.9522, 1.4981, 1.3705]]], [[[1.0456, 0.3015, 0.5638, 0.5321]]]]]

Expected: [[[[[2.2915, 0.9522, 1.4981, 1.3705]]], [[[1.0456, 0.3015, 0.5638, 0.5321]]]]]