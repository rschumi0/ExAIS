import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Max42558 = tf.keras.layers.Input(shape=([1, 1]))
in0Lea22682 = tf.keras.layers.Input(shape=([2, 1]))

Max42558 = keras.layers.MaxPool1D(pool_size=(1), strides=(1), padding='same', name = 'Max42558', )(in0Max42558)
Cro25880 = keras.layers.Cropping1D(cropping=((0, 0)), name = 'Cro25880', )(Max42558)
Zer788 = keras.layers.ZeroPadding1D(padding=((1, 0)), name = 'Zer788', )(Cro25880)
Lea22682 = keras.layers.LeakyReLU(alpha=3.5604478615031905, name = 'Lea22682', input_shape=(2, 1))(in0Lea22682)
Min21680 = keras.layers.Minimum(name = 'Min21680', )([Zer788,Lea22682])
model = tf.keras.models.Model(inputs=[in0Max42558,in0Lea22682], outputs=Min21680)
in0Max42558 = tf.constant([[[1.938]]])
in0Lea22682 = tf.constant([[[0.3451], [0.5961]]])
print (np.array2string(model.predict([in0Max42558,in0Lea22682],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Min21680.png')

LMax42558 = max_pool1D_layer([[[1.938]]], 1, 1, true, Max42558), 
LCro25880 = cropping1D_layer(Max42558, 0, 0, Cro25880), 
LZer788 = zero_padding1D_layer(Cro25880, 1, 0, Zer788), 
LLea22682 = leaky_relu_layer([[[0.3451], [0.5961]]], 3.5604478615031905, Lea22682), 
LMin21680 = minimum_layer([Zer788,Lea22682], Min21680), 
exec_layers([LMax42558,LCro25880,LZer788,LLea22682,LMin21680],["Max42558","Cro25880","Zer788","Lea22682","Min21680"],Min21680,"Min21680")

Actual (Unparsed): [[[0.0000000], [0.5961000]]]

Expected (Unparsed): [[[0],[0.5961]]]

Actual:   [[[0], [0.5961]]]

Expected: [[[0], [0.5961]]]