import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Fla32678 = tf.keras.layers.Input(shape=([3, 3]))

Fla32678 = keras.layers.Flatten(name = 'Fla32678', )(in0Fla32678)
Res80605 = keras.layers.Reshape((9, 1), name = 'Res80605', )(Fla32678)
PRe19187 = keras.layers.PReLU(name = 'PRe19187', )(Res80605)
model = tf.keras.models.Model(inputs=[in0Fla32678], outputs=PRe19187)
w = model.get_layer('PRe19187').get_weights() 
w[0] = np.array([[0.4224], [0.8053], [0.4852], [0.2991], [0.8722], [0.3848], [0.2773], [0.1143], [0.6935]])
model.get_layer('PRe19187').set_weights(w) 
in0Fla32678 = tf.constant([[[1.5641, 1.4334, 1.5253], [1.1093, 1.463, 1.5313], [1.1391, 1.4387, 1.0792]]])
print (np.array2string(model.predict([in0Fla32678],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='PRe19187.png')

LFla32678 = flatten_layer([[[1.5641, 1.4334, 1.5253], [1.1093, 1.463, 1.5313], [1.1391, 1.4387, 1.0792]]], Fla32678), 
LRes80605 = reshape_layer(Fla32678, [9, 1], Res80605), 
LPRe19187 = prelu_layer(Res80605, [[0.4224], [0.8053], [0.4852], [0.2991], [0.8722], [0.3848], [0.2773], [0.1143], [0.6935]], PRe19187), 
exec_layers([LFla32678,LRes80605,LPRe19187],["Fla32678","Res80605","PRe19187"],PRe19187,"PRe19187")

Actual (Unparsed): [[[1.5641000], [1.4334000], [1.5253000], [1.1093000], [1.4630001], [1.5312999], [1.1391000], [1.4387000], [1.0792000]]]

Expected (Unparsed): [[[1.5641],[1.4334],[1.5253],[1.1093],[1.463],[1.5313],[1.1391],[1.4387],[1.0792]]]

Actual:   [[[1.5641], [1.4334], [1.5253], [1.1093], [1.4631], [1.5313], [1.1391], [1.4387], [1.0792]]]

Expected: [[[1.5641], [1.4334], [1.5253], [1.1093], [1.463], [1.5313], [1.1391], [1.4387], [1.0792]]]