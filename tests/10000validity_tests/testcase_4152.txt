import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Dot7072 = tf.keras.layers.Input(shape=([2, 2]))
in1Dot7072 = tf.keras.layers.Input(shape=([2, 2]))
in0Max60434 = tf.keras.layers.Input(shape=([2, 1, 2, 1]))
in1Max60434 = tf.keras.layers.Input(shape=([2, 1, 2, 1]))
in0Ave26171 = tf.keras.layers.Input(shape=([2, 1]))
in1Ave26171 = tf.keras.layers.Input(shape=([2, 1]))
in0Con34337 = tf.keras.layers.Input(shape=([2, 5, 1, 1]))
in0Up_12794 = tf.keras.layers.Input(shape=([1, 3, 1, 2]))

Dot7072 = keras.layers.Dot(axes=(2, 1), name = 'Dot7072', )([in0Dot7072,in1Dot7072])
Res56873 = keras.layers.Reshape((2, 2, 1), name = 'Res56873', )(Dot7072)
Max60434 = keras.layers.Maximum(name = 'Max60434', )([in0Max60434,in1Max60434])
Res14901 = keras.layers.Reshape((2, 2, 1), name = 'Res14901', )(Max60434)
Min21122 = keras.layers.Minimum(name = 'Min21122', )([Res56873,Res14901])
Res20993 = keras.layers.Reshape((2, 2), name = 'Res20993', )(Min21122)
Ave26171 = keras.layers.Average(name = 'Ave26171', )([in0Ave26171,in1Ave26171])
Res23938 = keras.layers.Reshape((2, 1, 1), name = 'Res23938', )(Ave26171)
Res37363 = keras.layers.Reshape((2, 1, 1, 1), name = 'Res37363', )(Res23938)
Zer97915 = keras.layers.ZeroPadding3D(padding=((0, 0), (4, 0), (0, 0)), name = 'Zer97915', )(Res37363)
Con34337 = keras.layers.Concatenate(axis=4, name = 'Con34337', )([Zer97915,in0Con34337])
Up_12794 = keras.layers.UpSampling3D(size=(1, 1, 1), name = 'Up_12794', )(in0Up_12794)
Zer34802 = keras.layers.ZeroPadding3D(padding=((1, 0), (2, 0), (0, 0)), name = 'Zer34802', )(Up_12794)
Sub39788 = keras.layers.Subtract(name = 'Sub39788', )([Con34337,Zer34802])
Res23184 = keras.layers.Reshape((2, 5, 2), name = 'Res23184', )(Sub39788)
Res7104 = keras.layers.Reshape((2, 10), name = 'Res7104', )(Res23184)
Loc10562 = keras.layers.LocallyConnected1D(2, (2),strides=(1), name = 'Loc10562', )(Res7104)
Zer53605 = keras.layers.ZeroPadding1D(padding=((1, 0)), name = 'Zer53605', )(Loc10562)
Ave14414 = keras.layers.Average(name = 'Ave14414', )([Res20993,Zer53605])
model = tf.keras.models.Model(inputs=[in0Dot7072,in1Dot7072,in0Max60434,in1Max60434,in0Ave26171,in1Ave26171,in0Con34337,in0Up_12794], outputs=Ave14414)
w = model.get_layer('Loc10562').get_weights() 
w[0] = np.array([[[0.5614, 0.6392], [0.6041, 0.8819], [0.0946, 0.1404], [0.6194, 0.5227], [0.4567, 0.9453], [0.721, 0.4484], [0.4417, 0.9928], [0.1258, 0.2248], [0.2216, 0.7917], [0.3042, 0.9415], [0.9037, 0.1734], [0.2583, 0.465], [0.0802, 0.1985], [0.7741, 0.9673], [0.6606, 0.3595], [0.2545, 0.9875], [0.7929, 0.1481], [0.1399, 0.7242], [0.2124, 0.258], [0.8521, 0.4741]]])
w[1] = np.array([[0, 0]])
model.get_layer('Loc10562').set_weights(w) 
in0Dot7072 = tf.constant([[[0.3587, 0.2279], [0.4612, 0.6995]]])
in1Dot7072 = tf.constant([[[0.4641, 0.4247], [0.9782, 0.9863]]])
in0Max60434 = tf.constant([[[[[0.7251], [0.2424]]], [[[0.5442], [0.9679]]]]])
in1Max60434 = tf.constant([[[[[0.9667], [0.5591]]], [[[0.1154], [0.101]]]]])
in0Ave26171 = tf.constant([[[0.5159], [0.0218]]])
in1Ave26171 = tf.constant([[[0.6536], [0.9608]]])
in0Con34337 = tf.constant([[[[[0.4173]], [[0.5127]], [[0.225]], [[0.7606]], [[0.8648]]], [[[0.6345]], [[0.8171]], [[0.1601]], [[0.593]], [[0.0741]]]]])
in0Up_12794 = tf.constant([[[[[1.8507, 1.5083]], [[1.0996, 1.7078]], [[1.7125, 1.8289]]]]])
print (np.array2string(model.predict([in0Dot7072,in1Dot7072,in0Max60434,in1Max60434,in0Ave26171,in1Ave26171,in0Con34337,in0Up_12794],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Ave14414.png')

LDot7072 = dot_layer([[[0.3587, 0.2279], [0.4612, 0.6995]]], [[[0.4641, 0.4247], [0.9782, 0.9863]]], 2, 1, Dot7072), 
LRes56873 = reshape_layer(Dot7072, [2, 2, 1], Res56873), 
LMax60434 = maximum_layer([[[[[[0.7251], [0.2424]]], [[[0.5442], [0.9679]]]]], [[[[[0.9667], [0.5591]]], [[[0.1154], [0.101]]]]]], Max60434), 
LRes14901 = reshape_layer(Max60434, [2, 2, 1], Res14901), 
LMin21122 = minimum_layer([Res56873,Res14901], Min21122), 
LRes20993 = reshape_layer(Min21122, [2, 2], Res20993), 
LAve26171 = average_layer([[[[0.5159], [0.0218]]], [[[0.6536], [0.9608]]]], Ave26171), 
LRes23938 = reshape_layer(Ave26171, [2, 1, 1], Res23938), 
LRes37363 = reshape_layer(Res23938, [2, 1, 1, 1], Res37363), 
LZer97915 = zero_padding3D_layer(Res37363, 0, 0, 4, 0, 0, 0, Zer97915), 
LCon34337 = concatenate_layer([Zer97915,[[[[[0.4173]], [[0.5127]], [[0.225]], [[0.7606]], [[0.8648]]], [[[0.6345]], [[0.8171]], [[0.1601]], [[0.593]], [[0.0741]]]]]], 4, Con34337), 
LUp_12794 = up_sampling3D_layer([[[[[1.8507, 1.5083]], [[1.0996, 1.7078]], [[1.7125, 1.8289]]]]], 1, 1, 1, Up_12794), 
LZer34802 = zero_padding3D_layer(Up_12794, 1, 0, 2, 0, 0, 0, Zer34802), 
LSub39788 = subtract_layer(Con34337,Zer34802, Sub39788), 
LRes23184 = reshape_layer(Sub39788, [2, 5, 2], Res23184), 
LRes7104 = reshape_layer(Res23184, [2, 10], Res7104), 
LLoc10562 = locally_connected1D_layer(Res7104, 2,[[[0.5614, 0.6392], [0.6041, 0.8819], [0.0946, 0.1404], [0.6194, 0.5227], [0.4567, 0.9453], [0.721, 0.4484], [0.4417, 0.9928], [0.1258, 0.2248], [0.2216, 0.7917], [0.3042, 0.9415], [0.9037, 0.1734], [0.2583, 0.465], [0.0802, 0.1985], [0.7741, 0.9673], [0.6606, 0.3595], [0.2545, 0.9875], [0.7929, 0.1481], [0.1399, 0.7242], [0.2124, 0.258], [0.8521, 0.4741]]],[[0, 0]], 1, Loc10562), 
LZer53605 = zero_padding1D_layer(Loc10562, 1, 0, Zer53605), 
LAve14414 = average_layer([Res20993,Zer53605], Ave14414), 
exec_layers([LDot7072,LRes56873,LMax60434,LRes14901,LMin21122,LRes20993,LAve26171,LRes23938,LRes37363,LZer97915,LCon34337,LUp_12794,LZer34802,LSub39788,LRes23184,LRes7104,LLoc10562,LZer53605,LAve14414],["Dot7072","Res56873","Max60434","Res14901","Min21122","Res20993","Ave26171","Res23938","Res37363","Zer97915","Con34337","Up_12794","Zer34802","Sub39788","Res23184","Res7104","Loc10562","Zer53605","Ave14414"],Ave14414,"Ave14414")

Actual (Unparsed): [[[0.1947022, 0.1885588], [-0.8936718, 0.0211812]]]

Expected (Unparsed): [[[0.194702225,0.18855883],[-0.8936718149999998,0.021181142500000083]]]

Actual:   [[[0.1948, 0.1886], [-0.8936, 0.0212]]]

Expected: [[[0.1948, 0.1886], [-0.8936, 0.0212]]]