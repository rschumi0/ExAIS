import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Zer74011 = tf.keras.layers.Input(shape=([2, 4]))
in0Con17090 = tf.keras.layers.Input(shape=([4, 4, 1]))
in0Sub30615 = tf.keras.layers.Input(shape=([3, 2, 2]))
in1Sub30615 = tf.keras.layers.Input(shape=([3, 2, 2]))
in0PRe66197 = tf.keras.layers.Input(shape=([1, 2, 2]))
in0Con83863 = tf.keras.layers.Input(shape=([46]))

Zer74011 = keras.layers.ZeroPadding1D(padding=((1, 1)), name = 'Zer74011', )(in0Zer74011)
Res72206 = keras.layers.Reshape((4, 4, 1), name = 'Res72206', )(Zer74011)
Con17090 = keras.layers.Concatenate(axis=3, name = 'Con17090', )([Res72206,in0Con17090])
Sub30615 = keras.layers.Subtract(name = 'Sub30615', )([in0Sub30615,in1Sub30615])
Zer85882 = keras.layers.ZeroPadding2D(padding=((1, 0), (2, 0)), name = 'Zer85882', )(Sub30615)
Min52509 = keras.layers.Minimum(name = 'Min52509', )([Con17090,Zer85882])
Res34017 = keras.layers.Reshape((4, 8), name = 'Res34017', )(Min52509)
Zer56872 = keras.layers.ZeroPadding1D(padding=((1, 1)), name = 'Zer56872', )(Res34017)
Fla14872 = keras.layers.Flatten(name = 'Fla14872', )(Zer56872)
PRe66197 = keras.layers.PReLU(name = 'PRe66197', input_shape=(1, 2, 2))(in0PRe66197)
Thr12996 = keras.layers.ThresholdedReLU(theta=3.962681023116882, name = 'Thr12996', )(PRe66197)
Glo97961 = keras.layers.GlobalAveragePooling2D(name = 'Glo97961', )(Thr12996)
Con83863 = keras.layers.Concatenate(axis=1, name = 'Con83863', )([Glo97961,in0Con83863])
Mul23019 = keras.layers.Multiply(name = 'Mul23019', )([Fla14872,Con83863])
model = tf.keras.models.Model(inputs=[in0Zer74011,in0Con17090,in0Sub30615,in1Sub30615,in0PRe66197,in0Con83863], outputs=Mul23019)
w = model.get_layer('PRe66197').get_weights() 
w[0] = np.array([[[0.514, 0.0154], [0.7803, 0.9106]]])
model.get_layer('PRe66197').set_weights(w) 
in0Zer74011 = tf.constant([[[1.8551, 1.7532, 1.5837, 1.0227], [1.2471, 1.5531, 1.9981, 1.046]]])
in0Con17090 = tf.constant([[[[0.9796], [0.3939], [0.7411], [0.2755]], [[0.7387], [0.7105], [0.1468], [0.7409]], [[0.0443], [0.6781], [0.7456], [0.1061]], [[0.5665], [0.4468], [0.8656], [0.5931]]]])
in0Sub30615 = tf.constant([[[[0.7558, 0.8833], [0.9849, 0.1078]], [[0.6193, 0.0352], [0.7893, 0.9366]], [[0.5448, 0.4357], [0.0831, 0.078]]]])
in1Sub30615 = tf.constant([[[[0.1425, 0.469], [0.7686, 0.1101]], [[0.9355, 0.6453], [0.8444, 0.3595]], [[0.7484, 0.0268], [0.9833, 0.3333]]]])
in0PRe66197 = tf.constant([[[[0.4117, 0.1895], [0.6239, 0.0905]]]])
in0Con83863 = tf.constant([[0.3507, 0.4553, 0.7848, 0.9333, 0.4371, 0.9562, 0.3543, 0.8546, 0.3189, 0.7434, 0.9036, 0.1217, 0.475, 0.8814, 0.9132, 0.6372, 0.4575, 0.9594, 0.8543, 0.5885, 0.12, 0.4828, 0.6835, 0.861, 0.3511, 0.6091, 0.5423, 0.1865, 0.1364, 0.7677, 0.3202, 0.8478, 0.233, 0.1134, 0.4084, 0.497, 0.8663, 0.0826, 0.7974, 0.7925, 0.6353, 0.543, 0.6536, 0.1087, 0.2474, 0.1584]])
print (np.array2string(model.predict([in0Zer74011,in0Con17090,in0Sub30615,in1Sub30615,in0PRe66197,in0Con83863],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Mul23019.png')

LZer74011 = zero_padding1D_layer([[[1.8551, 1.7532, 1.5837, 1.0227], [1.2471, 1.5531, 1.9981, 1.046]]], 1, 1, Zer74011), 
LRes72206 = reshape_layer(Zer74011, [4, 4, 1], Res72206), 
LCon17090 = concatenate_layer([Res72206,[[[[0.9796], [0.3939], [0.7411], [0.2755]], [[0.7387], [0.7105], [0.1468], [0.7409]], [[0.0443], [0.6781], [0.7456], [0.1061]], [[0.5665], [0.4468], [0.8656], [0.5931]]]]], 3, Con17090), 
LSub30615 = subtract_layer([[[[0.7558, 0.8833], [0.9849, 0.1078]], [[0.6193, 0.0352], [0.7893, 0.9366]], [[0.5448, 0.4357], [0.0831, 0.078]]]], [[[[0.1425, 0.469], [0.7686, 0.1101]], [[0.9355, 0.6453], [0.8444, 0.3595]], [[0.7484, 0.0268], [0.9833, 0.3333]]]], Sub30615), 
LZer85882 = zero_padding2D_layer(Sub30615, 1, 0, 2, 0, Zer85882), 
LMin52509 = minimum_layer([Con17090,Zer85882], Min52509), 
LRes34017 = reshape_layer(Min52509, [4, 8], Res34017), 
LZer56872 = zero_padding1D_layer(Res34017, 1, 1, Zer56872), 
LFla14872 = flatten_layer(Zer56872, Fla14872), 
LPRe66197 = prelu_layer([[[[0.4117, 0.1895], [0.6239, 0.0905]]]], [[[0.514, 0.0154], [0.7803, 0.9106]]], PRe66197), 
LThr12996 = thresholded_relu_layer(PRe66197, 3.962681023116882, Thr12996), 
LGlo97961 = global_average_pooling2D_layer(Thr12996, Glo97961), 
LCon83863 = concatenate_layer([Glo97961,[[0.3507, 0.4553, 0.7848, 0.9333, 0.4371, 0.9562, 0.3543, 0.8546, 0.3189, 0.7434, 0.9036, 0.1217, 0.475, 0.8814, 0.9132, 0.6372, 0.4575, 0.9594, 0.8543, 0.5885, 0.12, 0.4828, 0.6835, 0.861, 0.3511, 0.6091, 0.5423, 0.1865, 0.1364, 0.7677, 0.3202, 0.8478, 0.233, 0.1134, 0.4084, 0.497, 0.8663, 0.0826, 0.7974, 0.7925, 0.6353, 0.543, 0.6536, 0.1087, 0.2474, 0.1584]]], 1, Con83863), 
LMul23019 = multiply_layer([Fla14872,Con83863], Mul23019), 
exec_layers([LZer74011,LRes72206,LCon17090,LSub30615,LZer85882,LMin52509,LRes34017,LZer56872,LFla14872,LPRe66197,LThr12996,LGlo97961,LCon83863,LMul23019],["Zer74011","Res72206","Con17090","Sub30615","Zer85882","Min52509","Res34017","Zer56872","Fla14872","PRe66197","Thr12996","Glo97961","Con83863","Mul23019"],Mul23019,"Mul23019")

Actual (Unparsed): [[0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.5239422, 0.0863918, 0.0259560, -0.0011104, 0.0000000, 0.0000000, 0.0000000, 0.0000000, -0.1714753, -0.1137836, -0.0075156, 0.0814530, 0.0000000, 0.0000000, 0.0000000, 0.0000000, -0.0831502, 0.2032233, -0.7798432, -0.0210878, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000]]

Expected (Unparsed): [[0,0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.52394219,0.0863918,0.025956000000000003,-0.0011104399999999983,0.0,0.0,0.0,0.0,-0.17147526000000002,-0.11378365,-0.007515640000000005,0.08145297,0.0,0.0,0.0,0.0,-0.08315024,0.2032233,-0.7798432599999999,-0.02108778,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0]]

Actual:   [[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.524, 0.0864, 0.026, -0.0011, 0, 0, 0, 0, -0.1714, -0.1137, -0.0075, 0.0815, 0, 0, 0, 0, -0.0831, 0.2033, -0.7798, -0.021, 0, 0, 0, 0, 0, 0, 0, 0]]

Expected: [[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.524, 0.0864, 0.026, -0.0011, 0, 0, 0, 0, -0.1714, -0.1137, -0.0075, 0.0815, 0, 0, 0, 0, -0.0831, 0.2033, -0.7798, -0.021, 0, 0, 0, 0, 0, 0, 0, 0]]