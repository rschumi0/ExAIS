import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Sim53756 = tf.keras.layers.Input(shape=([1, 2]))
in0Sub26005 = tf.keras.layers.Input(shape=([2]))
in1Sub26005 = tf.keras.layers.Input(shape=([2]))
in0Con7389 = tf.keras.layers.Input(shape=([1]))

Sim53756 = keras.layers.SimpleRNN(3,name = 'Sim53756', )(in0Sim53756)
Res17019 = keras.layers.Reshape((3, 1), name = 'Res17019', )(Sim53756)
Res99271 = keras.layers.Reshape((3, 1, 1), name = 'Res99271', )(Res17019)
Ave61079 = keras.layers.AveragePooling2D(pool_size=(1, 1), name = 'Ave61079', )(Res99271)
Res65525 = keras.layers.Reshape((3, 1), name = 'Res65525', )(Ave61079)
Fla72625 = keras.layers.Flatten(name = 'Fla72625', )(Res65525)
Sub26005 = keras.layers.Subtract(name = 'Sub26005', )([in0Sub26005,in1Sub26005])
Lea99113 = keras.layers.LeakyReLU(alpha=1.3730656463704485, name = 'Lea99113', )(Sub26005)
Con7389 = keras.layers.Concatenate(axis=1, name = 'Con7389', )([Lea99113,in0Con7389])
Mul64345 = keras.layers.Multiply(name = 'Mul64345', )([Fla72625,Con7389])
model = tf.keras.models.Model(inputs=[in0Sim53756,in0Sub26005,in1Sub26005,in0Con7389], outputs=Mul64345)
w = model.get_layer('Sim53756').get_weights() 
w[0] = np.array([[6, 7, 3], [1, 3, 1]])
w[1] = np.array([[9, 1, 8], [5, 6, 5], [9, 4, 4]])
w[2] = np.array([2, 2, 3])
model.get_layer('Sim53756').set_weights(w) 
in0Sim53756 = tf.constant([[[9, 1]]])
in0Sub26005 = tf.constant([[0.974, 0.8622]])
in1Sub26005 = tf.constant([[0.0592, 0.3819]])
in0Con7389 = tf.constant([[0.1605]])
print (np.array2string(model.predict([in0Sim53756,in0Sub26005,in1Sub26005,in0Con7389],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Mul64345.png')

LSim53756 = simple_rnn_layer([[[9, 1]]],[[6, 7, 3], [1, 3, 1]],[[9, 1, 8], [5, 6, 5], [9, 4, 4]],[2, 2, 3], Sim53756), 
LRes17019 = reshape_layer(Sim53756, [3, 1], Res17019), 
LRes99271 = reshape_layer(Res17019, [3, 1, 1], Res99271), 
LAve61079 = average_pooling2D_layer(Res99271, 1, 1, Ave61079), 
LRes65525 = reshape_layer(Ave61079, [3, 1], Res65525), 
LFla72625 = flatten_layer(Res65525, Fla72625), 
LSub26005 = subtract_layer([[0.974, 0.8622]], [[0.0592, 0.3819]], Sub26005), 
LLea99113 = leaky_relu_layer(Sub26005, 1.3730656463704485, Lea99113), 
LCon7389 = concatenate_layer([Lea99113,[[0.1605]]], 1, Con7389), 
LMul64345 = multiply_layer([Fla72625,Con7389], Mul64345), 
exec_layers([LSim53756,LRes17019,LRes99271,LAve61079,LRes65525,LFla72625,LSub26005,LLea99113,LCon7389,LMul64345],["Sim53756","Res17019","Res99271","Ave61079","Res65525","Fla72625","Sub26005","Lea99113","Con7389","Mul64345"],Mul64345,"Mul64345")

Actual (Unparsed): [[0.9148000, 0.4803000, 0.1605000]]

Expected (Unparsed): [[0.9148,0.48029999999999995,0.1605]]

Actual:   [[0.9148, 0.4803, 0.1605]]

Expected: [[0.9148, 0.4803, 0.1605]]