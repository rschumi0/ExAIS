import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Den2194 = tf.keras.layers.Input(shape=([4, 3]))
in0Con23434 = tf.keras.layers.Input(shape=([4, 2, 2]))
in0Up_8556 = tf.keras.layers.Input(shape=([4, 2, 3]))
in0Lay13373 = tf.keras.layers.Input(shape=([4, 2, 2]))
in0Con88909 = tf.keras.layers.Input(shape=([22]))

Den2194 = keras.layers.Dense(2,name = 'Den2194', )(in0Den2194)
Res15172 = keras.layers.Reshape((4, 2, 1), name = 'Res15172', )(Den2194)
Con23434 = keras.layers.Concatenate(axis=3, name = 'Con23434', )([Res15172,in0Con23434])
Up_8556 = keras.layers.UpSampling2D(size=(1, 1), name = 'Up_8556', )(in0Up_8556)
Ave10037 = keras.layers.Average(name = 'Ave10037', )([Con23434,Up_8556])
Res25951 = keras.layers.Reshape((4, 6), name = 'Res25951', )(Ave10037)
Fla26752 = keras.layers.Flatten(name = 'Fla26752', )(Res25951)
Lay13373 = keras.layers.LayerNormalization(axis=1, epsilon=2.099620619178533, name = 'Lay13373', )(in0Lay13373)
Glo33950 = keras.layers.GlobalAveragePooling2D(name = 'Glo33950', )(Lay13373)
Con88909 = keras.layers.Concatenate(axis=1, name = 'Con88909', )([Glo33950,in0Con88909])
Ave31456 = keras.layers.Average(name = 'Ave31456', )([Fla26752,Con88909])
model = tf.keras.models.Model(inputs=[in0Den2194,in0Con23434,in0Up_8556,in0Lay13373,in0Con88909], outputs=Ave31456)
w = model.get_layer('Den2194').get_weights() 
w[0] = np.array([[0.4157, 0.9508], [0.5833, 0.6303], [0.0155, 0.6637]])
w[1] = np.array([0.1162, 0.589])
model.get_layer('Den2194').set_weights(w) 
in0Den2194 = tf.constant([[[0.2482, 0.6037, 0.3797], [0.0008, 0.9195, 0.5993], [0.9741, 0.2655, 0.1021], [0.1313, 0.8932, 0.8563]]])
in0Con23434 = tf.constant([[[[0.0294, 0.8426], [0.733, 0.4322]], [[0.8914, 0.8198], [0.0136, 0.2151]], [[0.999, 0.8609], [0.2683, 0.4571]], [[0.3819, 0.6141], [0.9306, 0.6468]]]])
in0Up_8556 = tf.constant([[[[1.2347, 1.4749, 1.8328], [1.184, 1.1616, 1.9598]], [[1.9049, 1.2739, 1.6294], [1.7224, 1.3692, 1.5128]], [[1.6606, 1.2055, 1.4824], [1.1968, 1.3386, 1.3033]], [[1.16, 1.6938, 1.7741], [1.855, 1.8289, 1.4106]]]])
in0Lay13373 = tf.constant([[[[1.4053, 1.3946], [1.1919, 1.0431]], [[1.3321, 1.6806], [1.6197, 1.7814]], [[1.083, 1.5498], [1.5414, 1.2358]], [[1.0705, 1.0652], [1.5136, 1.8607]]]])
in0Con88909 = tf.constant([[0.5095, 0.7528, 0.393, 0.2946, 0.0605, 0.6686, 0.5056, 0.4896, 0.1212, 0.0256, 0.9642, 0.6901, 0.0196, 0.0575, 0.3981, 0.689, 0.3834, 0.5789, 0.722, 0.2122, 0.0152, 0.5317]])
print (np.array2string(model.predict([in0Den2194,in0Con23434,in0Up_8556,in0Lay13373,in0Con88909],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Ave31456.png')

LDen2194 = dense_layer([[[0.2482, 0.6037, 0.3797], [0.0008, 0.9195, 0.5993], [0.9741, 0.2655, 0.1021], [0.1313, 0.8932, 0.8563]]], [[0.4157, 0.9508], [0.5833, 0.6303], [0.0155, 0.6637]],[0.1162, 0.589], Den2194), 
LRes15172 = reshape_layer(Den2194, [4, 2, 1], Res15172), 
LCon23434 = concatenate_layer([Res15172,[[[[0.0294, 0.8426], [0.733, 0.4322]], [[0.8914, 0.8198], [0.0136, 0.2151]], [[0.999, 0.8609], [0.2683, 0.4571]], [[0.3819, 0.6141], [0.9306, 0.6468]]]]], 3, Con23434), 
LUp_8556 = up_sampling2D_layer([[[[1.2347, 1.4749, 1.8328], [1.184, 1.1616, 1.9598]], [[1.9049, 1.2739, 1.6294], [1.7224, 1.3692, 1.5128]], [[1.6606, 1.2055, 1.4824], [1.1968, 1.3386, 1.3033]], [[1.16, 1.6938, 1.7741], [1.855, 1.8289, 1.4106]]]], 1, 1, Up_8556), 
LAve10037 = average_layer([Con23434,Up_8556], Ave10037), 
LRes25951 = reshape_layer(Ave10037, [4, 6], Res25951), 
LFla26752 = flatten_layer(Res25951, Fla26752), 
LLay13373 = layer_normalization_layer([[[[1.4053, 1.3946], [1.1919, 1.0431]], [[1.3321, 1.6806], [1.6197, 1.7814]], [[1.083, 1.5498], [1.5414, 1.2358]], [[1.0705, 1.0652], [1.5136, 1.8607]]]], 1, 2.099620619178533, Lay13373), 
LGlo33950 = global_average_pooling2D_layer(Lay13373, Glo33950), 
LCon88909 = concatenate_layer([Glo33950,[[0.5095, 0.7528, 0.393, 0.2946, 0.0605, 0.6686, 0.5056, 0.4896, 0.1212, 0.0256, 0.9642, 0.6901, 0.0196, 0.0575, 0.3981, 0.689, 0.3834, 0.5789, 0.722, 0.2122, 0.0152, 0.5317]]], 1, Con88909), 
LAve31456 = average_layer([Fla26752,Con88909], Ave31456), 
exec_layers([LDen2194,LRes15172,LCon23434,LUp_8556,LAve10037,LRes25951,LFla26752,LLay13373,LGlo33950,LCon88909,LAve31456],["Den2194","Res15172","Con23434","Up_8556","Ave10037","Res25951","Fla26752","Lay13373","Glo33950","Con88909","Ave31456"],Ave31456,"Ave31456")

Actual (Unparsed): [[0.4530251, 0.3760750, 0.9236000, 1.0367769, 0.6701500, 0.7453000, 0.6720165, 0.8756250, 0.8651000, 1.0671692, 0.4063000, 0.4447750, 1.0666455, 0.8961750, 0.5956250, 0.7655207, 0.6007750, 0.7846000, 0.6579644, 0.8083750, 0.9580500, 1.0311376, 0.6974750, 0.7802000]]

Expected (Unparsed): [[0.453025075,0.3760750000000001,0.9236,1.03677689,0.67015,0.7453,0.672016515,0.8756250000000001,0.8651,1.067169225,0.4063,0.444775,1.0666455175,0.8961749999999999,0.5956250000000001,0.7655206750000001,0.6007750000000001,0.7846,0.657964405,0.808375,0.95805,1.0311375775,0.6974750000000001,0.7802]]

Actual:   [[0.4531, 0.3761, 0.9236, 1.0368, 0.6702, 0.7453, 0.6721, 0.8757, 0.8651, 1.0672, 0.4063, 0.4448, 1.0667, 0.8962, 0.5957, 0.7656, 0.6008, 0.7846, 0.658, 0.8084, 0.9581, 1.0312, 0.6975, 0.7802]]

Expected: [[0.4531, 0.3761, 0.9236, 1.0368, 0.6702, 0.7453, 0.6721, 0.8757, 0.8651, 1.0672, 0.4063, 0.4448, 1.0667, 0.8962, 0.5957, 0.7656, 0.6008, 0.7846, 0.658, 0.8084, 0.9581, 1.0312, 0.6975, 0.7802]]