import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Dot93275 = tf.keras.layers.Input(shape=([3]))
in1Dot93275 = tf.keras.layers.Input(shape=([3]))
in0Con33040 = tf.keras.layers.Input(shape=([6, 6, 3]))
in0Zer42598 = tf.keras.layers.Input(shape=([4, 4, 4]))
in0Dot82325 = tf.keras.layers.Input(shape=([3, 3]))
in1Dot82325 = tf.keras.layers.Input(shape=([3, 3]))
in0Con60483 = tf.keras.layers.Input(shape=([141]))

Dot93275 = keras.layers.Dot(axes=(1, 1), name = 'Dot93275', )([in0Dot93275,in1Dot93275])
Res33768 = keras.layers.Reshape((1, 1), name = 'Res33768', )(Dot93275)
Res53134 = keras.layers.Reshape((1, 1, 1), name = 'Res53134', )(Res33768)
Zer40403 = keras.layers.ZeroPadding2D(padding=((5, 0), (5, 0)), name = 'Zer40403', )(Res53134)
Con33040 = keras.layers.Concatenate(axis=3, name = 'Con33040', )([Zer40403,in0Con33040])
Zer42598 = keras.layers.ZeroPadding2D(padding=((1, 1), (1, 1)), name = 'Zer42598', )(in0Zer42598)
Sub8118 = keras.layers.Subtract(name = 'Sub8118', )([Con33040,Zer42598])
Res70002 = keras.layers.Reshape((6, 24), name = 'Res70002', )(Sub8118)
Fla18901 = keras.layers.Flatten(name = 'Fla18901', )(Res70002)
Dot82325 = keras.layers.Dot(axes=(2, 2), name = 'Dot82325', )([in0Dot82325,in1Dot82325])
Glo30904 = keras.layers.GlobalAveragePooling1D(name = 'Glo30904', )(Dot82325)
Mas5070 = keras.layers.Masking(mask_value=2, name = 'Mas5070', )(Glo30904)
Con60483 = keras.layers.Concatenate(axis=1, name = 'Con60483', )([Mas5070,in0Con60483])
Ave28728 = keras.layers.Average(name = 'Ave28728', )([Fla18901,Con60483])
model = tf.keras.models.Model(inputs=[in0Dot93275,in1Dot93275,in0Con33040,in0Zer42598,in0Dot82325,in1Dot82325,in0Con60483], outputs=Ave28728)
in0Dot93275 = tf.constant([[0.7939, 0.5282, 0.3459]])
in1Dot93275 = tf.constant([[0.4255, 0.2968, 0.1683]])
in0Con33040 = tf.constant([[[[0.3912, 0.1411, 0.148], [0.2241, 0.052, 0.4936], [0.1471, 0.6113, 0.8179], [0.2379, 0.2759, 0.2964], [0.049, 0.4613, 0.66], [0.9692, 0.7337, 0.3354]], [[0.2844, 0.2525, 0.8736], [0.5697, 0.0036, 0.9853], [0.3931, 0.826, 0.3857], [0.8681, 0.4541, 0.6274], [0.6866, 0.3962, 0.9914], [0.7491, 0.022, 0.4141]], [[0.1382, 0.6794, 0.9807], [0.6804, 0.9623, 0.508], [0.5073, 0.5505, 0.5983], [0.5127, 0.8692, 0.2551], [0.4251, 0.7937, 0.9208], [0.283, 0.4137, 0.5348]], [[0.6781, 0.0576, 0.1493], [0.8598, 0.4253, 0.4411], [0.3185, 0.794, 0.1891], [0.5955, 0.645, 0.5439], [0.4376, 0.3824, 0.3528], [0.1623, 0.2863, 0.7953]], [[0.2468, 0.6791, 0.3274], [0.8815, 0.4055, 0.9492], [0.4379, 0.2338, 0.3014], [0.7901, 0.5682, 0.4113], [0.8883, 0.4672, 0.5618], [0.5821, 0.8234, 0.2198]], [[0.519, 0.2713, 0.5274], [0.3168, 0.0779, 0.3462], [0.2328, 0.0789, 0.2595], [0.2724, 0.5117, 0.4127], [0.197, 0.2349, 0.0371], [0.6644, 0.1573, 0.9339]]]])
in0Zer42598 = tf.constant([[[[1.5062, 1.9165, 1.7502, 1.5416], [1.8482, 1.0898, 1.9248, 1.831], [1.6226, 1.6177, 1.6789, 1.8427], [1.1214, 1.6729, 1.9904, 1.4683]], [[1.0081, 1.5465, 1.8236, 1.2639], [1.21, 1.9659, 1.9893, 1.7898], [1.1291, 1.81, 1.7994, 1.2234], [1.5884, 1.4335, 1.239, 1.1579]], [[1.3637, 1.3458, 1.5826, 1.4293], [1.3744, 1.5663, 1.8699, 1.2766], [1.6081, 1.5773, 1.4172, 1.1327], [1.6326, 1.4319, 1.5949, 1.869]], [[1.1159, 1.2368, 1.4253, 1.371], [1.1179, 1.9288, 1.1687, 1.9101], [1.0435, 1.9884, 1.9557, 1.8945], [1.054, 1.4966, 1.697, 1.2316]]]])
in0Dot82325 = tf.constant([[[0.9561, 0.7156, 0.7961], [0.2874, 0.2054, 0.5641], [0.5433, 0.6839, 0.9034]]])
in1Dot82325 = tf.constant([[[0.4734, 0.475, 0.0505], [0.1279, 0.3341, 0.9397], [0.7192, 0.0788, 0.055]]])
in0Con60483 = tf.constant([[0.2488, 0.6542, 0.7963, 0.7529, 0.6884, 0.6216, 0.4063, 0.2586, 0.081, 0.3255, 0.6329, 0.6829, 0.1942, 0.2683, 0.7673, 0.265, 0.4528, 0.0396, 0.1223, 0.1888, 0.0524, 0.8776, 0.415, 0.9145, 0.2265, 0.2434, 0.185, 0.5915, 0.0257, 0.3465, 0.5363, 0.6119, 0.1189, 0.1542, 0.8486, 0.2913, 0.937, 0.9263, 0.6181, 0.9952, 0.9458, 0.7232, 0.255, 0.7708, 0.9568, 0.6586, 0.4898, 0.687, 0.1616, 0.8852, 0.0249, 0.6393, 0.0116, 0.4367, 0.2016, 0.3324, 0.1556, 0.0838, 0.7491, 0.5195, 0.3934, 0.3032, 0.1334, 0.3467, 0.0089, 0.309, 0.6256, 0.8266, 0.9038, 0.8498, 0.9785, 0.0516, 0.6705, 0.1362, 0.513, 0.7418, 0.1137, 0.8305, 0.496, 0.1233, 0.7589, 0.5048, 0.9191, 0.9295, 0.5713, 0.3525, 0.178, 0.5294, 0.4472, 0.2248, 0.6946, 0.8, 0.0405, 0.2577, 0.2248, 0.38, 0.1369, 0.4493, 0.451, 0.3688, 0.1003, 0.5585, 0.4725, 0.3695, 0.8799, 0.6012, 0.9723, 0.0114, 0.69, 0.0408, 0.1693, 0.7338, 0.7532, 0.4934, 0.1407, 0.6669, 0.429, 0.397, 0.7425, 0.8993, 0.6457, 0.6292, 0.1448, 0.2896, 0.7959, 0.5039, 0.953, 0.2494, 0.162, 0.9218, 0.9906, 0.599, 0.4972, 0.7069, 0.0805, 0.6847, 0.6018, 0.3225, 0.5848, 0.4311, 0.6089]])
print (np.array2string(model.predict([in0Dot93275,in1Dot93275,in0Con33040,in0Zer42598,in0Dot82325,in1Dot82325,in0Con60483],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Ave28728.png')

LDot93275 = dot_layer([[0.7939, 0.5282, 0.3459]], [[0.4255, 0.2968, 0.1683]], 1, 1, Dot93275), 
LRes33768 = reshape_layer(Dot93275, [1, 1], Res33768), 
LRes53134 = reshape_layer(Res33768, [1, 1, 1], Res53134), 
LZer40403 = zero_padding2D_layer(Res53134, 5, 0, 5, 0, Zer40403), 
LCon33040 = concatenate_layer([Zer40403,[[[[0.3912, 0.1411, 0.148], [0.2241, 0.052, 0.4936], [0.1471, 0.6113, 0.8179], [0.2379, 0.2759, 0.2964], [0.049, 0.4613, 0.66], [0.9692, 0.7337, 0.3354]], [[0.2844, 0.2525, 0.8736], [0.5697, 0.0036, 0.9853], [0.3931, 0.826, 0.3857], [0.8681, 0.4541, 0.6274], [0.6866, 0.3962, 0.9914], [0.7491, 0.022, 0.4141]], [[0.1382, 0.6794, 0.9807], [0.6804, 0.9623, 0.508], [0.5073, 0.5505, 0.5983], [0.5127, 0.8692, 0.2551], [0.4251, 0.7937, 0.9208], [0.283, 0.4137, 0.5348]], [[0.6781, 0.0576, 0.1493], [0.8598, 0.4253, 0.4411], [0.3185, 0.794, 0.1891], [0.5955, 0.645, 0.5439], [0.4376, 0.3824, 0.3528], [0.1623, 0.2863, 0.7953]], [[0.2468, 0.6791, 0.3274], [0.8815, 0.4055, 0.9492], [0.4379, 0.2338, 0.3014], [0.7901, 0.5682, 0.4113], [0.8883, 0.4672, 0.5618], [0.5821, 0.8234, 0.2198]], [[0.519, 0.2713, 0.5274], [0.3168, 0.0779, 0.3462], [0.2328, 0.0789, 0.2595], [0.2724, 0.5117, 0.4127], [0.197, 0.2349, 0.0371], [0.6644, 0.1573, 0.9339]]]]], 3, Con33040), 
LZer42598 = zero_padding2D_layer([[[[1.5062, 1.9165, 1.7502, 1.5416], [1.8482, 1.0898, 1.9248, 1.831], [1.6226, 1.6177, 1.6789, 1.8427], [1.1214, 1.6729, 1.9904, 1.4683]], [[1.0081, 1.5465, 1.8236, 1.2639], [1.21, 1.9659, 1.9893, 1.7898], [1.1291, 1.81, 1.7994, 1.2234], [1.5884, 1.4335, 1.239, 1.1579]], [[1.3637, 1.3458, 1.5826, 1.4293], [1.3744, 1.5663, 1.8699, 1.2766], [1.6081, 1.5773, 1.4172, 1.1327], [1.6326, 1.4319, 1.5949, 1.869]], [[1.1159, 1.2368, 1.4253, 1.371], [1.1179, 1.9288, 1.1687, 1.9101], [1.0435, 1.9884, 1.9557, 1.8945], [1.054, 1.4966, 1.697, 1.2316]]]], 1, 1, 1, 1, Zer42598), 
LSub8118 = subtract_layer(Con33040,Zer42598, Sub8118), 
LRes70002 = reshape_layer(Sub8118, [6, 24], Res70002), 
LFla18901 = flatten_layer(Res70002, Fla18901), 
LDot82325 = dot_layer([[[0.9561, 0.7156, 0.7961], [0.2874, 0.2054, 0.5641], [0.5433, 0.6839, 0.9034]]], [[[0.4734, 0.475, 0.0505], [0.1279, 0.3341, 0.9397], [0.7192, 0.0788, 0.055]]], 2, 2, Dot82325), 
LGlo30904 = global_average_pooling1D_layer(Dot82325, Glo30904), 
LMas5070 = masking_layer(Glo30904, 2, Mas5070), 
LCon60483 = concatenate_layer([Mas5070,[[0.2488, 0.6542, 0.7963, 0.7529, 0.6884, 0.6216, 0.4063, 0.2586, 0.081, 0.3255, 0.6329, 0.6829, 0.1942, 0.2683, 0.7673, 0.265, 0.4528, 0.0396, 0.1223, 0.1888, 0.0524, 0.8776, 0.415, 0.9145, 0.2265, 0.2434, 0.185, 0.5915, 0.0257, 0.3465, 0.5363, 0.6119, 0.1189, 0.1542, 0.8486, 0.2913, 0.937, 0.9263, 0.6181, 0.9952, 0.9458, 0.7232, 0.255, 0.7708, 0.9568, 0.6586, 0.4898, 0.687, 0.1616, 0.8852, 0.0249, 0.6393, 0.0116, 0.4367, 0.2016, 0.3324, 0.1556, 0.0838, 0.7491, 0.5195, 0.3934, 0.3032, 0.1334, 0.3467, 0.0089, 0.309, 0.6256, 0.8266, 0.9038, 0.8498, 0.9785, 0.0516, 0.6705, 0.1362, 0.513, 0.7418, 0.1137, 0.8305, 0.496, 0.1233, 0.7589, 0.5048, 0.9191, 0.9295, 0.5713, 0.3525, 0.178, 0.5294, 0.4472, 0.2248, 0.6946, 0.8, 0.0405, 0.2577, 0.2248, 0.38, 0.1369, 0.4493, 0.451, 0.3688, 0.1003, 0.5585, 0.4725, 0.3695, 0.8799, 0.6012, 0.9723, 0.0114, 0.69, 0.0408, 0.1693, 0.7338, 0.7532, 0.4934, 0.1407, 0.6669, 0.429, 0.397, 0.7425, 0.8993, 0.6457, 0.6292, 0.1448, 0.2896, 0.7959, 0.5039, 0.953, 0.2494, 0.162, 0.9218, 0.9906, 0.599, 0.4972, 0.7069, 0.0805, 0.6847, 0.6018, 0.3225, 0.5848, 0.4311, 0.6089]]], 1, Con60483), 
LAve28728 = average_layer([Fla18901,Con60483], Ave28728), 
exec_layers([LDot93275,LRes33768,LRes53134,LZer40403,LCon33040,LZer42598,LSub8118,LRes70002,LFla18901,LDot82325,LGlo30904,LMas5070,LCon60483,LAve28728],["Dot93275","Res33768","Res53134","Zer40403","Con33040","Zer42598","Sub8118","Res70002","Fla18901","Dot82325","Glo30904","Mas5070","Con60483","Ave28728"],Ave28728,"Ave28728")

Actual (Unparsed): [[0.2870851, 0.6775723, 0.3265551, 0.1984000, 0.3271000, 0.5102000, 0.4024500, 0.5910000, 0.3108000, 0.2767000, 0.4349500, 0.4494500, 0.1627500, 0.4354000, 0.4794000, 0.2453000, 0.1341500, 0.4081500, 0.3631500, 0.5564000, 0.0198000, 0.5457500, 0.4612500, 0.1939000, 0.4388000, 0.3497000, 0.5835000, 0.5500500, -0.6314000, -0.5809000, -0.5775500, -0.2653000, -0.7508500, -0.0802000, -0.2434500, -0.6632000, -0.7342000, 0.0495000, -0.4667500, -0.1391500, -0.0975500, -0.1841000, -0.2995000, 0.2344500, 0.3616000, 0.5020500, 0.3964000, 0.6854500, 0.3293000, 0.3140000, 0.6832000, 0.5711500, -0.0614500, -0.4206000, -0.1110000, -0.3721500, -0.3866500, -0.6285000, -0.5532000, -0.5179500, -0.5226500, -0.2740999, -0.2053500, -0.2874500, -0.6426000, -0.4375000, -0.0493000, -0.1141000, 0.1545000, 0.4543000, 0.6201500, 0.7193000, 0.4249000, 0.8283000, 0.0546000, 0.4099000, -0.6137500, 0.0135000, -0.2077500, -0.4372500, -0.2719500, -0.3759000, -0.4763000, -0.1643000, -0.5516500, -0.0313500, 0.0786500, -0.0087500, -0.6400500, -0.4081500, -0.3415500, -0.5345000, 0.1124000, 0.4284500, 0.5431500, 0.4179000, 0.1288500, 0.2358000, 0.5295500, 0.2321500, -0.3333000, 0.0478500, -0.3255000, -0.1607500, -0.2797000, -0.5092000, -0.2827000, -0.3644000, -0.2211500, -0.1130000, -0.6880500, -0.3966000, -0.5066000, -0.2195000, -0.2480000, 0.0417000, 0.2467000, 0.3614000, 0.7451500, 0.3244000, 0.1985000, 0.6307500, 0.5853000, 0.5865500, 0.3146000, 0.2308000, 0.1837500, 0.5710500, 0.2519500, 0.5929000, 0.1641500, 0.2107500, 0.4609000, 0.6315000, 0.5553500, 0.4549500, 0.3534500, 0.1387500, 0.4598000, 0.3194500, 0.4376446, 0.6246000, 0.2942000, 0.7714000]]

Expected (Unparsed): [[0.28708507,0.6775722883333333,0.3265551133333333,0.1984,0.3271,0.5102,0.40245000000000003,0.591,0.3108,0.2767,0.43494999999999995,0.44944999999999996,0.16275,0.4354,0.47939999999999994,0.24530000000000002,0.13415,0.40815,0.36315,0.5564,0.0198,0.54575,0.46125,0.1939,0.4388,0.3497,0.5835,0.55005,-0.6314,-0.5809,-0.57755,-0.2653000000000001,-0.75085,-0.08020000000000005,-0.2434500000000001,-0.6632,-0.7342,0.049500000000000044,-0.46675000000000005,-0.13915,-0.09754999999999997,-0.18410000000000004,-0.29949999999999993,0.23445,0.3616,0.50205,0.39640000000000003,0.68545,0.3293,0.314,0.6832,0.57115,-0.061450000000000005,-0.4206,-0.11100000000000004,-0.37215,-0.38665,-0.6285000000000001,-0.5532,-0.51795,-0.52265,-0.27409999999999995,-0.2053500000000001,-0.28745,-0.6426000000000001,-0.4375,-0.049300000000000066,-0.1141,0.1545,0.45430000000000004,0.62015,0.7193,0.4249,0.8283,0.054599999999999996,0.4099,-0.61375,0.013499999999999956,-0.20775,-0.43724999999999997,-0.27195,-0.3759,-0.47629999999999995,-0.16429999999999995,-0.55165,-0.031349999999999933,0.07865,-0.00874999999999998,-0.64005,-0.40815,-0.34154999999999996,-0.5345,0.1124,0.42845,0.54315,0.4179,0.12885,0.2358,0.52955,0.23215000000000002,-0.33329999999999993,0.04785000000000003,-0.3255,-0.16074999999999998,-0.27969999999999995,-0.5092000000000001,-0.28270000000000006,-0.3643999999999999,-0.22115000000000007,-0.11299999999999993,-0.6880499999999999,-0.39660000000000006,-0.5066,-0.21949999999999997,-0.248,0.04169999999999996,0.2467,0.36139999999999994,0.74515,0.3244,0.1985,0.63075,0.5852999999999999,0.58655,0.3146,0.2308,0.18375000000000002,0.5710500000000001,0.25195,0.5929,0.16415000000000002,0.21075,0.4609,0.6315,0.55535,0.45494999999999997,0.35345,0.13875,0.4598,0.31945,0.43764459,0.6246,0.2942,0.7714]]

Actual:   [[0.2871, 0.6776, 0.3266, 0.1984, 0.3271, 0.5102, 0.4025, 0.591, 0.3108, 0.2767, 0.435, 0.4495, 0.1628, 0.4354, 0.4794, 0.2453, 0.1342, 0.4082, 0.3632, 0.5564, 0.0198, 0.5458, 0.4613, 0.1939, 0.4388, 0.3497, 0.5835, 0.5501, -0.6314, -0.5809, -0.5775, -0.2653, -0.7508, -0.0802, -0.2434, -0.6632, -0.7342, 0.0495, -0.4667, -0.1391, -0.0975, -0.1841, -0.2995, 0.2345, 0.3616, 0.5021, 0.3964, 0.6855, 0.3293, 0.314, 0.6832, 0.5712, -0.0614, -0.4206, -0.111, -0.3721, -0.3866, -0.6285, -0.5532, -0.5179, -0.5226, -0.274, -0.2053, -0.2874, -0.6426, -0.4375, -0.0493, -0.1141, 0.1545, 0.4543, 0.6202, 0.7193, 0.4249, 0.8283, 0.0546, 0.4099, -0.6137, 0.0135, -0.2077, -0.4372, -0.2719, -0.3759, -0.4763, -0.1643, -0.5516, -0.0313, 0.0787, -0.0087, -0.64, -0.4081, -0.3415, -0.5345, 0.1124, 0.4285, 0.5432, 0.4179, 0.1289, 0.2358, 0.5296, 0.2322, -0.3333, 0.0479, -0.3255, -0.1607, -0.2797, -0.5092, -0.2827, -0.3644, -0.2211, -0.113, -0.688, -0.3966, -0.5066, -0.2195, -0.248, 0.0417, 0.2467, 0.3614, 0.7452, 0.3244, 0.1985, 0.6308, 0.5853, 0.5866, 0.3146, 0.2308, 0.1838, 0.5711, 0.252, 0.5929, 0.1642, 0.2108, 0.4609, 0.6315, 0.5554, 0.455, 0.3535, 0.1388, 0.4598, 0.3195, 0.4377, 0.6246, 0.2942, 0.7714]]

Expected: [[0.2871, 0.6776, 0.3266, 0.1984, 0.3271, 0.5102, 0.4025, 0.591, 0.3108, 0.2767, 0.435, 0.4495, 0.1628, 0.4354, 0.4794, 0.2454, 0.1342, 0.4082, 0.3632, 0.5564, 0.0198, 0.5458, 0.4613, 0.1939, 0.4388, 0.3497, 0.5835, 0.5501, -0.6314, -0.5809, -0.5775, -0.2653, -0.7508, -0.0802, -0.2434, -0.6632, -0.7342, 0.0496, -0.4667, -0.1391, -0.0975, -0.1841, -0.2994, 0.2345, 0.3616, 0.5021, 0.3965, 0.6855, 0.3293, 0.314, 0.6832, 0.5712, -0.0614, -0.4206, -0.111, -0.3721, -0.3866, -0.6285, -0.5532, -0.5179, -0.5226, -0.274, -0.2053, -0.2874, -0.6426, -0.4375, -0.0493, -0.1141, 0.1545, 0.4544, 0.6202, 0.7193, 0.4249, 0.8283, 0.0546, 0.4099, -0.6137, 0.0135, -0.2077, -0.4372, -0.2719, -0.3759, -0.4762, -0.1642, -0.5516, -0.0313, 0.0787, -0.0087, -0.64, -0.4081, -0.3415, -0.5345, 0.1124, 0.4285, 0.5432, 0.4179, 0.1289, 0.2358, 0.5296, 0.2322, -0.3332, 0.0479, -0.3255, -0.1607, -0.2796, -0.5092, -0.2827, -0.3643, -0.2211, -0.1129, -0.688, -0.3966, -0.5066, -0.2194, -0.248, 0.0417, 0.2467, 0.3614, 0.7452, 0.3244, 0.1985, 0.6308, 0.5853, 0.5866, 0.3146, 0.2308, 0.1838, 0.5711, 0.252, 0.5929, 0.1642, 0.2108, 0.4609, 0.6315, 0.5554, 0.455, 0.3535, 0.1388, 0.4598, 0.3195, 0.4377, 0.6246, 0.2942, 0.7714]]