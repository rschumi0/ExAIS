import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Ave84098 = tf.keras.layers.Input(shape=([2, 2, 2, 1]))
in1Ave84098 = tf.keras.layers.Input(shape=([2, 2, 2, 1]))

Ave84098 = keras.layers.Average(name = 'Ave84098', )([in0Ave84098,in1Ave84098])
Res13628 = keras.layers.Reshape((2, 2, 2), name = 'Res13628', )(Ave84098)
Up_8545 = keras.layers.UpSampling2D(size=(2, 1), name = 'Up_8545', )(Res13628)
Fla13640 = keras.layers.Flatten(name = 'Fla13640', )(Up_8545)
model = tf.keras.models.Model(inputs=[in0Ave84098,in1Ave84098], outputs=Fla13640)
in0Ave84098 = tf.constant([[[[[0.6034], [0.5221]], [[0.5767], [0.0754]]], [[[0.2988], [0.6677]], [[0.3345], [0.7843]]]]])
in1Ave84098 = tf.constant([[[[[0.6024], [0.4053]], [[0.3215], [0.3699]]], [[[0.7608], [0.1862]], [[0.7504], [0.1085]]]]])
print (np.array2string(model.predict([in0Ave84098,in1Ave84098],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Fla13640.png')

LAve84098 = average_layer([[[[[[0.6034], [0.5221]], [[0.5767], [0.0754]]], [[[0.2988], [0.6677]], [[0.3345], [0.7843]]]]], [[[[[0.6024], [0.4053]], [[0.3215], [0.3699]]], [[[0.7608], [0.1862]], [[0.7504], [0.1085]]]]]], Ave84098), 
LRes13628 = reshape_layer(Ave84098, [2, 2, 2], Res13628), 
LUp_8545 = up_sampling2D_layer(Res13628, 2, 1, Up_8545), 
LFla13640 = flatten_layer(Up_8545, Fla13640), 
exec_layers([LAve84098,LRes13628,LUp_8545,LFla13640],["Ave84098","Res13628","Up_8545","Fla13640"],Fla13640,"Fla13640")

Actual (Unparsed): [[0.6029000, 0.4637000, 0.4491000, 0.2226500, 0.6029000, 0.4637000, 0.4491000, 0.2226500, 0.5298000, 0.4269500, 0.5424500, 0.4464000, 0.5298000, 0.4269500, 0.5424500, 0.4464000]]

Expected (Unparsed): [[0.6029,0.4637,0.4491,0.22265000000000001,0.6029,0.4637,0.4491,0.22265000000000001,0.5298,0.42695,0.54245,0.4464,0.5298,0.42695,0.54245,0.4464]]

Actual:   [[0.6029, 0.4637, 0.4491, 0.2227, 0.6029, 0.4637, 0.4491, 0.2227, 0.5298, 0.427, 0.5425, 0.4464, 0.5298, 0.427, 0.5425, 0.4464]]

Expected: [[0.6029, 0.4637, 0.4491, 0.2227, 0.6029, 0.4637, 0.4491, 0.2227, 0.5298, 0.427, 0.5425, 0.4464, 0.5298, 0.427, 0.5425, 0.4464]]