import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Zer96894 = tf.keras.layers.Input(shape=([1, 3]))
in0Ave97000 = tf.keras.layers.Input(shape=([1, 2, 1, 1]))
in1Ave97000 = tf.keras.layers.Input(shape=([1, 2, 1, 1]))

Zer96894 = keras.layers.ZeroPadding1D(padding=((1, 1)), name = 'Zer96894', )(in0Zer96894)
Res22426 = keras.layers.Reshape((3, 3, 1), name = 'Res22426', )(Zer96894)
Res78363 = keras.layers.Reshape((3, 3, 1, 1), name = 'Res78363', )(Res22426)
Ave97000 = keras.layers.Average(name = 'Ave97000', )([in0Ave97000,in1Ave97000])
Zer40487 = keras.layers.ZeroPadding3D(padding=((2, 0), (1, 0), (0, 0)), name = 'Zer40487', )(Ave97000)
Min65380 = keras.layers.Minimum(name = 'Min65380', )([Res78363,Zer40487])
Res15231 = keras.layers.Reshape((3, 3, 1), name = 'Res15231', )(Min65380)
Res73904 = keras.layers.Reshape((3, 3), name = 'Res73904', )(Res15231)
Res23723 = keras.layers.Reshape((3, 3, 1), name = 'Res23723', )(Res73904)
Con40944 = keras.layers.Conv2D(2, (2, 1),strides=(1, 1), padding='same', dilation_rate=(1, 1), name = 'Con40944', )(Res23723)
Res44193 = keras.layers.Reshape((3, 3, 2, 1), name = 'Res44193', )(Con40944)
Con53016 = keras.layers.Conv3D(4, (1, 3, 2),strides=(1, 1, 1), padding='valid', dilation_rate=(1, 1, 1), name = 'Con53016', )(Res44193)
model = tf.keras.models.Model(inputs=[in0Zer96894,in0Ave97000,in1Ave97000], outputs=Con53016)
w = model.get_layer('Con40944').get_weights() 
w[0] = np.array([[[[0.2278, 0.4302]]], [[[0.527, 0.7213]]]])
w[1] = np.array([0, 0])
model.get_layer('Con40944').set_weights(w) 
w = model.get_layer('Con53016').get_weights() 
w[0] = np.array([[[[[0.2315, 0.5938, 0.6181, 0.9971]], [[0.976, 0.4355, 0.3999, 0.983]]], [[[0.1967, 0.9303, 0.3124, 0.9022]], [[0.795, 0.2827, 0.8006, 0.7172]]], [[[0.0052, 0.2187, 0.7406, 0.5894]], [[0.6085, 0.9596, 0.3814, 0.1147]]]]])
w[1] = np.array([0, 0, 0, 0])
model.get_layer('Con53016').set_weights(w) 
in0Zer96894 = tf.constant([[[1.5152, 1.9694, 1.6996]]])
in0Ave97000 = tf.constant([[[[[0.7371]], [[0.0314]]]]])
in1Ave97000 = tf.constant([[[[[0.2322]], [[0.4438]]]]])
print (np.array2string(model.predict([in0Zer96894,in0Ave97000,in1Ave97000],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Con53016.png')

LZer96894 = zero_padding1D_layer([[[1.5152, 1.9694, 1.6996]]], 1, 1, Zer96894), 
LRes22426 = reshape_layer(Zer96894, [3, 3, 1], Res22426), 
LRes78363 = reshape_layer(Res22426, [3, 3, 1, 1], Res78363), 
LAve97000 = average_layer([[[[[[0.7371]], [[0.0314]]]]], [[[[[0.2322]], [[0.4438]]]]]], Ave97000), 
LZer40487 = zero_padding3D_layer(Ave97000, 2, 0, 1, 0, 0, 0, Zer40487), 
LMin65380 = minimum_layer([Res78363,Zer40487], Min65380), 
LRes15231 = reshape_layer(Min65380, [3, 3, 1], Res15231), 
LRes73904 = reshape_layer(Res15231, [3, 3], Res73904), 
LRes23723 = reshape_layer(Res73904, [3, 3, 1], Res23723), 
LCon40944 = conv2D_layer(Res23723, 2, 1,[[[[0.2278, 0.4302]]], [[[0.527, 0.7213]]]],[0, 0], 1, 1, true, 1, 1, Con40944), 
LRes44193 = reshape_layer(Con40944, [3, 3, 2, 1], Res44193), 
LCon53016 = conv3D_layer(Res44193, 1, 3, 2,[[[[[0.2315, 0.5938, 0.6181, 0.9971]], [[0.976, 0.4355, 0.3999, 0.983]]], [[[0.1967, 0.9303, 0.3124, 0.9022]], [[0.795, 0.2827, 0.8006, 0.7172]]], [[[0.0052, 0.2187, 0.7406, 0.5894]], [[0.6085, 0.9596, 0.3814, 0.1147]]]]],[0, 0, 0, 0], 1, 1, 1, false, 1, 1, 1, Con53016), 
exec_layers([LZer96894,LRes22426,LRes78363,LAve97000,LZer40487,LMin65380,LRes15231,LRes73904,LRes23723,LCon40944,LRes44193,LCon53016],["Zer96894","Res22426","Res78363","Ave97000","Zer40487","Min65380","Res15231","Res73904","Res23723","Con40944","Res44193","Con53016"],Con53016,"Con53016")

Actual (Unparsed): [[[[[0.0000000, 0.0000000, 0.0000000, 0.0000000]]], [[[0.0000000, 0.0000000, 0.0000000, 0.0000000]]], [[[0.0000000, 0.0000000, 0.0000000, 0.0000000]]]]]

Expected (Unparsed): [[[[[0.0,0.0,0.0,0.0]]],[[[0.0,0.0,0.0,0.0]]],[[[0.0,0.0,0.0,0.0]]]]]

Actual:   [[[[[0, 0, 0, 0]]], [[[0, 0, 0, 0]]], [[[0, 0, 0, 0]]]]]

Expected: [[[[[0, 0, 0, 0]]], [[[0, 0, 0, 0]]], [[[0, 0, 0, 0]]]]]