import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Min76686 = tf.keras.layers.Input(shape=([1, 1, 2, 1]))
in1Min76686 = tf.keras.layers.Input(shape=([1, 1, 2, 1]))
in0Ave92692 = tf.keras.layers.Input(shape=([2, 1]))
in0Con33508 = tf.keras.layers.Input(shape=([1, 1]))
in0Max63820 = tf.keras.layers.Input(shape=([2, 2, 1]))
in1Max63820 = tf.keras.layers.Input(shape=([2, 2, 1]))
in0Con61703 = tf.keras.layers.Input(shape=([2, 2]))
in0Con69123 = tf.keras.layers.Input(shape=([1, 1]))

Min76686 = keras.layers.Minimum(name = 'Min76686', )([in0Min76686,in1Min76686])
Res89293 = keras.layers.Reshape((1, 1, 2), name = 'Res89293', )(Min76686)
Res1836 = keras.layers.Reshape((1, 2), name = 'Res1836', )(Res89293)
Ave92692 = keras.layers.AveragePooling1D(pool_size=(1), strides=(2), padding='valid', name = 'Ave92692', )(in0Ave92692)
Con33508 = keras.layers.Concatenate(axis=2, name = 'Con33508', )([Ave92692,in0Con33508])
Max86922 = keras.layers.Maximum(name = 'Max86922', )([Res1836,Con33508])
Res83216 = keras.layers.Reshape((1, 2, 1), name = 'Res83216', )(Max86922)
Zer74807 = keras.layers.ZeroPadding2D(padding=((1, 0), (0, 0)), name = 'Zer74807', )(Res83216)
Max63820 = keras.layers.Maximum(name = 'Max63820', )([in0Max63820,in1Max63820])
Min3462 = keras.layers.Minimum(name = 'Min3462', )([Zer74807,Max63820])
Res52706 = keras.layers.Reshape((2, 2), name = 'Res52706', )(Min3462)
Con61703 = keras.layers.Concatenate(axis=2, name = 'Con61703', )([Res52706,in0Con61703])
Con69123 = keras.layers.Conv1D(4, (1),strides=(1), padding='valid', dilation_rate=(1), name = 'Con69123', )(in0Con69123)
Max13464 = keras.layers.MaxPool1D(pool_size=(1), strides=(1), padding='valid', name = 'Max13464', )(Con69123)
Zer99339 = keras.layers.ZeroPadding1D(padding=((1, 0)), name = 'Zer99339', )(Max13464)
Ave39668 = keras.layers.Average(name = 'Ave39668', )([Con61703,Zer99339])
Res74649 = keras.layers.Reshape((2, 4, 1), name = 'Res74649', )(Ave39668)
Res72870 = keras.layers.Reshape((2, 4, 1, 1), name = 'Res72870', )(Res74649)
Con65069 = keras.layers.Conv3D(2, (1, 3, 1),strides=(1, 1, 1), padding='same', dilation_rate=(1, 1, 1), name = 'Con65069', )(Res72870)
model = tf.keras.models.Model(inputs=[in0Min76686,in1Min76686,in0Ave92692,in0Con33508,in0Max63820,in1Max63820,in0Con61703,in0Con69123], outputs=Con65069)
w = model.get_layer('Con69123').get_weights() 
w[0] = np.array([[[0.4909, 0.2571, 0.0271, 0.2166]]])
w[1] = np.array([0, 0, 0, 0])
model.get_layer('Con69123').set_weights(w) 
w = model.get_layer('Con65069').get_weights() 
w[0] = np.array([[[[[0.0594, 0.9197]]], [[[0.3007, 0.5461]]], [[[0.9239, 0.6211]]]]])
w[1] = np.array([0, 0])
model.get_layer('Con65069').set_weights(w) 
in0Min76686 = tf.constant([[[[[0.3837], [0.5751]]]]])
in1Min76686 = tf.constant([[[[[0.5855], [0.1101]]]]])
in0Ave92692 = tf.constant([[[1.7423], [1.4922]]])
in0Con33508 = tf.constant([[[0.9612]]])
in0Max63820 = tf.constant([[[[0.5103], [0.9316]], [[0.1695], [0.7336]]]])
in1Max63820 = tf.constant([[[[0.5482], [0.7777]], [[0.3446], [0.8987]]]])
in0Con61703 = tf.constant([[[0.4278, 0.3975], [0.7517, 0.3253]]])
in0Con69123 = tf.constant([[[0.7395]]])
print (np.array2string(model.predict([in0Min76686,in1Min76686,in0Ave92692,in0Con33508,in0Max63820,in1Max63820,in0Con61703,in0Con69123],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Con65069.png')

LMin76686 = minimum_layer([[[[[[0.3837], [0.5751]]]]], [[[[[0.5855], [0.1101]]]]]], Min76686), 
LRes89293 = reshape_layer(Min76686, [1, 1, 2], Res89293), 
LRes1836 = reshape_layer(Res89293, [1, 2], Res1836), 
LAve92692 = average_pooling1D_layer([[[1.7423], [1.4922]]], 1, 2, false, Ave92692), 
LCon33508 = concatenate_layer([Ave92692,[[[0.9612]]]], 2, Con33508), 
LMax86922 = maximum_layer([Res1836,Con33508], Max86922), 
LRes83216 = reshape_layer(Max86922, [1, 2, 1], Res83216), 
LZer74807 = zero_padding2D_layer(Res83216, 1, 0, 0, 0, Zer74807), 
LMax63820 = maximum_layer([[[[[0.5103], [0.9316]], [[0.1695], [0.7336]]]], [[[[0.5482], [0.7777]], [[0.3446], [0.8987]]]]], Max63820), 
LMin3462 = minimum_layer([Zer74807,Max63820], Min3462), 
LRes52706 = reshape_layer(Min3462, [2, 2], Res52706), 
LCon61703 = concatenate_layer([Res52706,[[[0.4278, 0.3975], [0.7517, 0.3253]]]], 2, Con61703), 
LCon69123 = conv1D_layer([[[0.7395]]], 1,[[[0.4909, 0.2571, 0.0271, 0.2166]]],[0, 0, 0, 0], 1, false, 1, Con69123), 
LMax13464 = max_pool1D_layer(Con69123, 1, 1, false, Max13464), 
LZer99339 = zero_padding1D_layer(Max13464, 1, 0, Zer99339), 
LAve39668 = average_layer([Con61703,Zer99339], Ave39668), 
LRes74649 = reshape_layer(Ave39668, [2, 4, 1], Res74649), 
LRes72870 = reshape_layer(Res74649, [2, 4, 1, 1], Res72870), 
LCon65069 = conv3D_layer(Res72870, 1, 3, 1,[[[[[0.0594, 0.9197]]], [[[0.3007, 0.5461]]], [[[0.9239, 0.6211]]]]],[0, 0], 1, 1, 1, true, 1, 1, 1, Con65069), 
exec_layers([LMin76686,LRes89293,LRes1836,LAve92692,LCon33508,LMax86922,LRes83216,LZer74807,LMax63820,LMin3462,LRes52706,LCon61703,LCon69123,LMax13464,LZer99339,LAve39668,LRes74649,LRes72870,LCon65069],["Min76686","Res89293","Res1836","Ave92692","Con33508","Max86922","Res83216","Zer74807","Max63820","Min3462","Res52706","Con61703","Con69123","Max13464","Zer99339","Ave39668","Res74649","Res72870","Con65069"],Con65069,"Con65069")

Actual (Unparsed): [[[[[0.0000000, 0.0000000]], [[0.1976222, 0.1328533]], [[0.2479449, 0.2402544]], [[0.0724698, 0.3052612]]], [[[0.6093737, 0.5313505]], [[0.5412267, 0.8623671]], [[0.3726348, 0.8621846]], [[0.0959120, 0.4874440]]]]]

Expected (Unparsed): [[[[[0.0,0.0]],[[0.19762221000000002,0.13285329]],[[0.24794485500000002,0.240254415]],[[0.07246978500000001,0.305261205]]],[[[0.60937366632,0.531350534675]],[[0.5412267376200001,0.8623670957875]],[[0.37263479213750006,0.86218459169]],[[0.09591196286,0.4874439858174999]]]]]

Actual:   [[[[[0, 0]], [[0.1977, 0.1329]], [[0.248, 0.2403]], [[0.0725, 0.3053]]], [[[0.6094, 0.5314]], [[0.5413, 0.8624]], [[0.3727, 0.8622]], [[0.096, 0.4875]]]]]

Expected: [[[[[0, 0]], [[0.1977, 0.1329]], [[0.248, 0.2403]], [[0.0725, 0.3053]]], [[[0.6094, 0.5314]], [[0.5413, 0.8624]], [[0.3727, 0.8622]], [[0.096, 0.4875]]]]]