import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Mul86398 = tf.keras.layers.Input(shape=([1, 1, 2, 2]))
in1Mul86398 = tf.keras.layers.Input(shape=([1, 1, 2, 2]))

Mul86398 = keras.layers.Multiply(name = 'Mul86398', )([in0Mul86398,in1Mul86398])
Lea36768 = keras.layers.LeakyReLU(alpha=9.995094367843086, name = 'Lea36768', )(Mul86398)
Den59249 = keras.layers.Dense(1,name = 'Den59249', )(Lea36768)
ELU92575 = keras.layers.ELU(alpha=-2.6002331177305793, name = 'ELU92575', )(Den59249)
model = tf.keras.models.Model(inputs=[in0Mul86398,in1Mul86398], outputs=ELU92575)
w = model.get_layer('Den59249').get_weights() 
w[0] = np.array([[0.1203], [0.2496]])
w[1] = np.array([0.8637])
model.get_layer('Den59249').set_weights(w) 
in0Mul86398 = tf.constant([[[[[0.1779, 0.7881], [0.2574, 0.875]]]]])
in1Mul86398 = tf.constant([[[[[0.1847, 0.2093], [0.5772, 0.3514]]]]])
print (np.array2string(model.predict([in0Mul86398,in1Mul86398],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='ELU92575.png')

LMul86398 = multiply_layer([[[[[[0.1779, 0.7881], [0.2574, 0.875]]]]], [[[[[0.1847, 0.2093], [0.5772, 0.3514]]]]]], Mul86398), 
LLea36768 = leaky_relu_layer(Mul86398, 9.995094367843086, Lea36768), 
LDen59249 = dense_layer(Lea36768, [[0.1203], [0.2496]],[0.8637], Den59249), 
LELU92575 = elu_layer(Den59249, -2.6002331177305793, ELU92575), 
exec_layers([LMul86398,LLea36768,LDen59249,LELU92575],["Mul86398","Lea36768","Den59249","ELU92575"],ELU92575,"ELU92575")

Actual (Unparsed): [[[[[0.9088242], [0.9583189]]]]]

Expected (Unparsed): [[[[[0.908824185807],[0.958318884984]]]]]

Actual:   [[[[[0.9089], [0.9584]]]]]

Expected: [[[[[0.9089], [0.9584]]]]]