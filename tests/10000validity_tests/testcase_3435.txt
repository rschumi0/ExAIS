import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Den3974 = tf.keras.layers.Input(shape=([4, 5, 5]))
in0Con8223 = tf.keras.layers.Input(shape=([4, 5, 1]))
in0Con15084 = tf.keras.layers.Input(shape=([1, 1, 1]))
in0Con57484 = tf.keras.layers.Input(shape=([4, 5, 4, 2]))
in0Add38176 = tf.keras.layers.Input(shape=([2, 1, 2, 1]))
in1Add38176 = tf.keras.layers.Input(shape=([2, 1, 2, 1]))
in0Con79830 = tf.keras.layers.Input(shape=([3, 3, 3, 2]))
in0Sub44084 = tf.keras.layers.Input(shape=([3, 3, 3, 3]))
in1Sub44084 = tf.keras.layers.Input(shape=([3, 3, 3, 3]))

Den3974 = keras.layers.Dense(3,name = 'Den3974', )(in0Den3974)
Con8223 = keras.layers.Concatenate(axis=3, name = 'Con8223', )([Den3974,in0Con8223])
Con15084 = keras.layers.Conv2DTranspose(4, (1, 1),strides=(1, 1), padding='valid', name = 'Con15084', )(in0Con15084)
Zer6650 = keras.layers.ZeroPadding2D(padding=((3, 0), (4, 0)), name = 'Zer6650', )(Con15084)
Mul78836 = keras.layers.Multiply(name = 'Mul78836', )([Con8223,Zer6650])
Res86435 = keras.layers.Reshape((4, 5, 4, 1), name = 'Res86435', )(Mul78836)
Con57484 = keras.layers.Concatenate(axis=4, name = 'Con57484', )([Res86435,in0Con57484])
Add38176 = keras.layers.Add(name = 'Add38176', )([in0Add38176,in1Add38176])
Zer63129 = keras.layers.ZeroPadding3D(padding=((1, 0), (2, 0), (1, 0)), name = 'Zer63129', )(Add38176)
Con79830 = keras.layers.Concatenate(axis=4, name = 'Con79830', )([Zer63129,in0Con79830])
Sub44084 = keras.layers.Subtract(name = 'Sub44084', )([in0Sub44084,in1Sub44084])
Max66243 = keras.layers.Maximum(name = 'Max66243', )([Con79830,Sub44084])
Zer64897 = keras.layers.ZeroPadding3D(padding=((1, 0), (2, 0), (1, 0)), name = 'Zer64897', )(Max66243)
Max67863 = keras.layers.Maximum(name = 'Max67863', )([Con57484,Zer64897])
model = tf.keras.models.Model(inputs=[in0Den3974,in0Con8223,in0Con15084,in0Con57484,in0Add38176,in1Add38176,in0Con79830,in0Sub44084,in1Sub44084], outputs=Max67863)
w = model.get_layer('Den3974').get_weights() 
w[0] = np.array([[0.2907, 0.6518, 0.1042], [0.0312, 0.5547, 0.275], [0.7516, 0.2717, 0.6035], [0.4908, 0.8165, 0.0095], [0.3232, 0.6485, 0.7498]])
w[1] = np.array([0.1232, 0.4614, 0.7741])
model.get_layer('Den3974').set_weights(w) 
w = model.get_layer('Con15084').get_weights() 
w[0] = np.array([[[[0.5599], [0.2722], [0.559], [0.0867]]]])
w[1] = np.array([0, 0, 0, 0])
model.get_layer('Con15084').set_weights(w) 
in0Den3974 = tf.constant([[[[0.3811, 0.1156, 0.331, 0.5569, 0.3728], [0.1683, 0.1275, 0.7835, 0.012, 0.3538], [0.0081, 0.3577, 0.1706, 0.2078, 0.6256], [0.1321, 0.9622, 0.9275, 0.0568, 0.1651], [0.0185, 0.8598, 0.8337, 0.5883, 0.6062]], [[0.435, 0.9239, 0.6791, 0.6721, 0.5787], [0.602, 0.0919, 0.6521, 0.5778, 0.6029], [0.9717, 0.2789, 0.2228, 0.5557, 0.8496], [0.6876, 0.8061, 0.4568, 0.8053, 0.8315], [0.215, 0.8635, 0.3664, 0.592, 0.9278]], [[0.5612, 0.0154, 0.9973, 0.192, 0.691], [0.9719, 0.6468, 0.0463, 0.7109, 0.1302], [0.7801, 0.1325, 0.1089, 0.6416, 0.4261], [0.4373, 0.4848, 0.6564, 0.7218, 0.2002], [0.4761, 0.1641, 0.7987, 0.2313, 0.0139]], [[0.7036, 0.6014, 0.7923, 0.5661, 0.9557], [0.6253, 0.012, 0.3468, 0.8755, 0.8376], [0.5302, 0.9575, 0.0717, 0.9811, 0.6962], [0.557, 0.6025, 0.0518, 0.181, 0.4572], [0.2164, 0.9865, 0.3073, 0.987, 0.3419]]]])
in0Con8223 = tf.constant([[[[0.9543], [0.5282], [0.0982], [0.9817], [0.0158]], [[0.8814], [0.0109], [0.7123], [0.3548], [0.3531]], [[0.9508], [0.5231], [0.8163], [0.2319], [0.3041]], [[0.7439], [0.3158], [0.4738], [0.159], [0.1552]]]])
in0Con15084 = tf.constant([[[[0.5008]]]])
in0Con57484 = tf.constant([[[[[0.824, 0.7255], [0.4805, 0.9119], [0.4463, 0.3011], [0.7538, 0.9491]], [[0.408, 0.8214], [0.2123, 0.5734], [0.9528, 0.9856], [0.6303, 0.5912]], [[0.7897, 0.7948], [0.3567, 0.9366], [0.11, 0.0654], [0.9417, 0.0942]], [[0.1509, 0.9236], [0.0385, 0.6437], [0.184, 0.1145], [0.7588, 0.8533]], [[0.6377, 0.9301], [0.5744, 0.412], [0.3031, 0.1784], [0.6725, 0.7231]]], [[[0.2179, 0.8972], [0.3986, 0.6561], [0.8743, 0.4483], [0.0463, 0.2954]], [[0.8559, 0.221], [0.7958, 0.0191], [0.8722, 0.4183], [0.038, 0.1874]], [[0.4293, 0.3057], [0.6772, 0.8307], [0.0531, 0.8578], [0.2531, 0.9873]], [[0.0643, 0.9591], [0.89, 0.7621], [0.3927, 0.1813], [0.1442, 0.7494]], [[0.8149, 0.6945], [0.7969, 0.1986], [0.3008, 0.0473], [0.5184, 0.1852]]], [[[0.8623, 0.3975], [0.1154, 0.0972], [0.4117, 0.2689], [0.7673, 0.9434]], [[0.6591, 0.0632], [0.2538, 0.3506], [0.0018, 0.3677], [0.682, 0.6248]], [[0.696, 0.5619], [0.6334, 0.9259], [0.3359, 0.3525], [0.9664, 0.425]], [[0.8148, 0.6397], [0.7346, 0.2988], [0.4915, 0.5566], [0.8129, 0.5518]], [[0.2449, 0.6117], [0.8548, 0.951], [0.4635, 0.6131], [0.1528, 0.8085]]], [[[0.7879, 0.4541], [0.8171, 0.9524], [0.5985, 0.9031], [0.4452, 0.9915]], [[0.8276, 0.2525], [0.1177, 0.896], [0.6609, 0.0565], [0.1175, 0.9929]], [[0.0899, 0.214], [0.2508, 0.7058], [0.0806, 0.3387], [0.0209, 0.756]], [[0.3281, 0.6989], [0.1978, 0.0875], [0.1838, 0.0052], [0.5142, 0.4758]], [[0.3616, 0.9806], [0.3214, 0.6405], [0.4565, 0.9546], [0.0393, 0.6902]]]]])
in0Add38176 = tf.constant([[[[[0.7488], [0.5764]]], [[[0.8027], [0.5792]]]]])
in1Add38176 = tf.constant([[[[[0.5056], [0.2735]]], [[[0.3214], [0.332]]]]])
in0Con79830 = tf.constant([[[[[0.3862, 0.9234], [0.5396, 0.0177], [0.5022, 0.2408]], [[0.5266, 0.689], [0.1449, 0.763], [0.5137, 0.1768]], [[0.6967, 0.1746], [0.3276, 0.5569], [0.0418, 0.7052]]], [[[0.7207, 0.2831], [0.1626, 0.4451], [0.6507, 0.7031]], [[0.7481, 0.6385], [0.9221, 0.1804], [0.5409, 0.5262]], [[0.8177, 0.0344], [0.2088, 0.6624], [0.0432, 0.1218]]], [[[0.1096, 0.7475], [0.0377, 0.7735], [0.4415, 0.9335]], [[0.458, 0.9752], [0.9157, 0.2423], [0.4387, 0.1327]], [[0.2703, 0.2084], [0.0485, 0.4994], [0.6591, 0.1095]]]]])
in0Sub44084 = tf.constant([[[[[0.2231, 0.328, 0.361], [0.8071, 0.9897, 0.0475], [0.7515, 0.8732, 0.723]], [[0.8667, 0.8488, 0.4764], [0.1309, 0.4558, 0.6827], [0.4095, 0.0257, 0.7393]], [[0.6625, 0.236, 0.455], [0.8958, 0.9338, 0.1575], [0.7175, 0.7661, 0.4005]]], [[[0.4298, 0.8342, 0.6105], [0.7658, 0.392, 0.4551], [0.8227, 0.6797, 0.3002]], [[0.503, 0.0367, 0.229], [0.9333, 0.0757, 0.0407], [0.5567, 0.3729, 0.2599]], [[0.0518, 0.3567, 0.4512], [0.5452, 0.199, 0.3517], [0.1071, 0.4704, 0.5127]]], [[[0.6343, 0.2939, 0.9809], [0.3225, 0.9297, 0.1422], [0.7326, 0.733, 0.4164]], [[0.7975, 0.2384, 0.7602], [0.7369, 0.7224, 0.3197], [0.7916, 0.2201, 0.2843]], [[0.8009, 0.2606, 0.1438], [0.132, 0.7626, 0.817], [0.0692, 0.2058, 0.958]]]]])
in1Sub44084 = tf.constant([[[[[0.8147, 0.8971, 0.224], [0.1855, 0.6438, 0.315], [0.1392, 0.5141, 0.2856]], [[0.7288, 0.3723, 0.2582], [0.4838, 0.6102, 0.5917], [0.5131, 0.0954, 0.4255]], [[0.4317, 0.878, 0.507], [0.9609, 0.8226, 0.718], [0.4869, 0.9078, 0.5351]]], [[[0.9449, 0.4778, 0.0329], [0.1382, 0.8351, 0.132], [0.1195, 0.8128, 0.8431]], [[0.8393, 0.1379, 0.3675], [0.7188, 0.104, 0.78], [0.3641, 0.4919, 0.892]], [[0.5758, 0.4745, 0.0468], [0.4856, 0.2978, 0.0631], [0.08, 0.9604, 0.2579]]], [[[0.5168, 0.2041, 0.1302], [0.3979, 0.0321, 0.8454], [0.6916, 0.7886, 0.4038]], [[0.3629, 0.3471, 0.2627], [0.8637, 0.5155, 0.882], [0.4285, 0.165, 0.9974]], [[0.5303, 0.2383, 0.923], [0.2692, 0.475, 0.6182], [0.6831, 0.3227, 0.999]]]]])
print (np.array2string(model.predict([in0Den3974,in0Con8223,in0Con15084,in0Con57484,in0Add38176,in1Add38176,in0Con79830,in0Sub44084,in1Sub44084],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Max67863.png')

LDen3974 = dense_layer([[[[0.3811, 0.1156, 0.331, 0.5569, 0.3728], [0.1683, 0.1275, 0.7835, 0.012, 0.3538], [0.0081, 0.3577, 0.1706, 0.2078, 0.6256], [0.1321, 0.9622, 0.9275, 0.0568, 0.1651], [0.0185, 0.8598, 0.8337, 0.5883, 0.6062]], [[0.435, 0.9239, 0.6791, 0.6721, 0.5787], [0.602, 0.0919, 0.6521, 0.5778, 0.6029], [0.9717, 0.2789, 0.2228, 0.5557, 0.8496], [0.6876, 0.8061, 0.4568, 0.8053, 0.8315], [0.215, 0.8635, 0.3664, 0.592, 0.9278]], [[0.5612, 0.0154, 0.9973, 0.192, 0.691], [0.9719, 0.6468, 0.0463, 0.7109, 0.1302], [0.7801, 0.1325, 0.1089, 0.6416, 0.4261], [0.4373, 0.4848, 0.6564, 0.7218, 0.2002], [0.4761, 0.1641, 0.7987, 0.2313, 0.0139]], [[0.7036, 0.6014, 0.7923, 0.5661, 0.9557], [0.6253, 0.012, 0.3468, 0.8755, 0.8376], [0.5302, 0.9575, 0.0717, 0.9811, 0.6962], [0.557, 0.6025, 0.0518, 0.181, 0.4572], [0.2164, 0.9865, 0.3073, 0.987, 0.3419]]]], [[0.2907, 0.6518, 0.1042], [0.0312, 0.5547, 0.275], [0.7516, 0.2717, 0.6035], [0.4908, 0.8165, 0.0095], [0.3232, 0.6485, 0.7498]],[0.1232, 0.4614, 0.7741], Den3974), 
LCon8223 = concatenate_layer([Den3974,[[[[0.9543], [0.5282], [0.0982], [0.9817], [0.0158]], [[0.8814], [0.0109], [0.7123], [0.3548], [0.3531]], [[0.9508], [0.5231], [0.8163], [0.2319], [0.3041]], [[0.7439], [0.3158], [0.4738], [0.159], [0.1552]]]]], 3, Con8223), 
LCon15084 = conv2D_transpose_layer([[[[0.5008]]]], 1, 1,[[[[0.5599], [0.2722], [0.559], [0.0867]]]],[0, 0, 0, 0], 1, 1, false, Con15084), 
LZer6650 = zero_padding2D_layer(Con15084, 3, 0, 4, 0, Zer6650), 
LMul78836 = multiply_layer([Con8223,Zer6650], Mul78836), 
LRes86435 = reshape_layer(Mul78836, [4, 5, 4, 1], Res86435), 
LCon57484 = concatenate_layer([Res86435,[[[[[0.824, 0.7255], [0.4805, 0.9119], [0.4463, 0.3011], [0.7538, 0.9491]], [[0.408, 0.8214], [0.2123, 0.5734], [0.9528, 0.9856], [0.6303, 0.5912]], [[0.7897, 0.7948], [0.3567, 0.9366], [0.11, 0.0654], [0.9417, 0.0942]], [[0.1509, 0.9236], [0.0385, 0.6437], [0.184, 0.1145], [0.7588, 0.8533]], [[0.6377, 0.9301], [0.5744, 0.412], [0.3031, 0.1784], [0.6725, 0.7231]]], [[[0.2179, 0.8972], [0.3986, 0.6561], [0.8743, 0.4483], [0.0463, 0.2954]], [[0.8559, 0.221], [0.7958, 0.0191], [0.8722, 0.4183], [0.038, 0.1874]], [[0.4293, 0.3057], [0.6772, 0.8307], [0.0531, 0.8578], [0.2531, 0.9873]], [[0.0643, 0.9591], [0.89, 0.7621], [0.3927, 0.1813], [0.1442, 0.7494]], [[0.8149, 0.6945], [0.7969, 0.1986], [0.3008, 0.0473], [0.5184, 0.1852]]], [[[0.8623, 0.3975], [0.1154, 0.0972], [0.4117, 0.2689], [0.7673, 0.9434]], [[0.6591, 0.0632], [0.2538, 0.3506], [0.0018, 0.3677], [0.682, 0.6248]], [[0.696, 0.5619], [0.6334, 0.9259], [0.3359, 0.3525], [0.9664, 0.425]], [[0.8148, 0.6397], [0.7346, 0.2988], [0.4915, 0.5566], [0.8129, 0.5518]], [[0.2449, 0.6117], [0.8548, 0.951], [0.4635, 0.6131], [0.1528, 0.8085]]], [[[0.7879, 0.4541], [0.8171, 0.9524], [0.5985, 0.9031], [0.4452, 0.9915]], [[0.8276, 0.2525], [0.1177, 0.896], [0.6609, 0.0565], [0.1175, 0.9929]], [[0.0899, 0.214], [0.2508, 0.7058], [0.0806, 0.3387], [0.0209, 0.756]], [[0.3281, 0.6989], [0.1978, 0.0875], [0.1838, 0.0052], [0.5142, 0.4758]], [[0.3616, 0.9806], [0.3214, 0.6405], [0.4565, 0.9546], [0.0393, 0.6902]]]]]], 4, Con57484), 
LAdd38176 = add_layer([[[[[[0.7488], [0.5764]]], [[[0.8027], [0.5792]]]]], [[[[[0.5056], [0.2735]]], [[[0.3214], [0.332]]]]]], Add38176), 
LZer63129 = zero_padding3D_layer(Add38176, 1, 0, 2, 0, 1, 0, Zer63129), 
LCon79830 = concatenate_layer([Zer63129,[[[[[0.3862, 0.9234], [0.5396, 0.0177], [0.5022, 0.2408]], [[0.5266, 0.689], [0.1449, 0.763], [0.5137, 0.1768]], [[0.6967, 0.1746], [0.3276, 0.5569], [0.0418, 0.7052]]], [[[0.7207, 0.2831], [0.1626, 0.4451], [0.6507, 0.7031]], [[0.7481, 0.6385], [0.9221, 0.1804], [0.5409, 0.5262]], [[0.8177, 0.0344], [0.2088, 0.6624], [0.0432, 0.1218]]], [[[0.1096, 0.7475], [0.0377, 0.7735], [0.4415, 0.9335]], [[0.458, 0.9752], [0.9157, 0.2423], [0.4387, 0.1327]], [[0.2703, 0.2084], [0.0485, 0.4994], [0.6591, 0.1095]]]]]], 4, Con79830), 
LSub44084 = subtract_layer([[[[[0.2231, 0.328, 0.361], [0.8071, 0.9897, 0.0475], [0.7515, 0.8732, 0.723]], [[0.8667, 0.8488, 0.4764], [0.1309, 0.4558, 0.6827], [0.4095, 0.0257, 0.7393]], [[0.6625, 0.236, 0.455], [0.8958, 0.9338, 0.1575], [0.7175, 0.7661, 0.4005]]], [[[0.4298, 0.8342, 0.6105], [0.7658, 0.392, 0.4551], [0.8227, 0.6797, 0.3002]], [[0.503, 0.0367, 0.229], [0.9333, 0.0757, 0.0407], [0.5567, 0.3729, 0.2599]], [[0.0518, 0.3567, 0.4512], [0.5452, 0.199, 0.3517], [0.1071, 0.4704, 0.5127]]], [[[0.6343, 0.2939, 0.9809], [0.3225, 0.9297, 0.1422], [0.7326, 0.733, 0.4164]], [[0.7975, 0.2384, 0.7602], [0.7369, 0.7224, 0.3197], [0.7916, 0.2201, 0.2843]], [[0.8009, 0.2606, 0.1438], [0.132, 0.7626, 0.817], [0.0692, 0.2058, 0.958]]]]], [[[[[0.8147, 0.8971, 0.224], [0.1855, 0.6438, 0.315], [0.1392, 0.5141, 0.2856]], [[0.7288, 0.3723, 0.2582], [0.4838, 0.6102, 0.5917], [0.5131, 0.0954, 0.4255]], [[0.4317, 0.878, 0.507], [0.9609, 0.8226, 0.718], [0.4869, 0.9078, 0.5351]]], [[[0.9449, 0.4778, 0.0329], [0.1382, 0.8351, 0.132], [0.1195, 0.8128, 0.8431]], [[0.8393, 0.1379, 0.3675], [0.7188, 0.104, 0.78], [0.3641, 0.4919, 0.892]], [[0.5758, 0.4745, 0.0468], [0.4856, 0.2978, 0.0631], [0.08, 0.9604, 0.2579]]], [[[0.5168, 0.2041, 0.1302], [0.3979, 0.0321, 0.8454], [0.6916, 0.7886, 0.4038]], [[0.3629, 0.3471, 0.2627], [0.8637, 0.5155, 0.882], [0.4285, 0.165, 0.9974]], [[0.5303, 0.2383, 0.923], [0.2692, 0.475, 0.6182], [0.6831, 0.3227, 0.999]]]]], Sub44084), 
LMax66243 = maximum_layer([Con79830,Sub44084], Max66243), 
LZer64897 = zero_padding3D_layer(Max66243, 1, 0, 2, 0, 1, 0, Zer64897), 
LMax67863 = maximum_layer([Con57484,Zer64897], Max67863), 
exec_layers([LDen3974,LCon8223,LCon15084,LZer6650,LMul78836,LRes86435,LCon57484,LAdd38176,LZer63129,LCon79830,LSub44084,LMax66243,LZer64897,LMax67863],["Den3974","Con8223","Con15084","Zer6650","Mul78836","Res86435","Con57484","Add38176","Zer63129","Con79830","Sub44084","Max66243","Zer64897","Max67863"],Max67863,"Max67863")

Actual (Unparsed): [[[[[0.0000000, 0.8240000, 0.7255000], [0.0000000, 0.4805000, 0.9119000], [0.0000000, 0.4463000, 0.3011000], [0.0000000, 0.7538000, 0.9491000]], [[0.0000000, 0.4080000, 0.8214000], [0.0000000, 0.2123000, 0.5734000], [0.0000000, 0.9528000, 0.9856000], [0.0000000, 0.6303000, 0.5912000]], [[0.0000000, 0.7897000, 0.7948000], [0.0000000, 0.3567000, 0.9366000], [0.0000000, 0.1100000, 0.0654000], [0.0000000, 0.9417000, 0.0942000]], [[0.0000000, 0.1509000, 0.9236000], [0.0000000, 0.0385000, 0.6437000], [0.0000000, 0.1840000, 0.1145000], [0.0000000, 0.7588000, 0.8533000]], [[0.0000000, 0.6377000, 0.9301000], [0.0000000, 0.5744000, 0.4120000], [0.0000000, 0.3031000, 0.1784000], [0.0000000, 0.6725000, 0.7231000]]], [[[0.0000000, 0.2179000, 0.8972000], [0.0000000, 0.3986000, 0.6561000], [0.0000000, 0.8743000, 0.4483000], [0.0000000, 0.0463000, 0.2954000]], [[0.0000000, 0.8559000, 0.2210000], [0.0000000, 0.7958000, 0.0191000], [0.0000000, 0.8722000, 0.4183000], [0.0000000, 0.0380000, 0.1874000]], [[0.0000000, 0.4293000, 0.3057000], [0.0000000, 0.6772000, 0.9234000], [0.6216000, 0.5396000, 0.8578000], [0.6123000, 0.5022000, 0.9873000]], [[0.0000000, 0.0643000, 0.9591000], [0.1379000, 0.8900000, 0.7621000], [0.0000000, 0.3927000, 0.7630000], [0.0000000, 0.5137000, 0.7494000]], [[0.0000000, 0.8149000, 0.6945000], [0.2308000, 0.7969000, 0.1986000], [0.0000000, 0.3276000, 0.5569000], [0.2306000, 0.5184000, 0.7052000]]], [[[0.0000000, 0.8623000, 0.3975000], [0.0000000, 0.1154000, 0.0972000], [0.0000000, 0.4117000, 0.2689000], [0.0000000, 0.7673000, 0.9434000]], [[0.0000000, 0.6591000, 0.0632000], [0.0000000, 0.2538000, 0.3506000], [0.0000000, 0.0018000, 0.3677000], [0.0000000, 0.6820000, 0.6248000]], [[0.0000000, 0.6960000, 0.5619000], [0.0000000, 0.7207000, 0.9259000], [0.6276000, 0.3359000, 0.4451000], [0.7032000, 0.9664000, 0.7031000]], [[0.0000000, 0.8148000, 0.6397000], [0.0000000, 0.7481000, 0.6385000], [0.2145000, 0.9221000, 0.5566000], [0.1926000, 0.8129000, 0.5518000]], [[0.0000000, 0.2449000, 0.6117000], [0.0000000, 0.8548000, 0.9510000], [1.2544000, 0.4635000, 0.6624000], [0.8499000, 0.1528000, 0.8085000]]], [[[0.0000000, 0.7879000, 0.4541000], [0.0000000, 0.8171000, 0.9524000], [0.0000000, 0.5985000, 0.9031000], [0.0000000, 0.4452000, 0.9915000]], [[0.0000000, 0.8276000, 0.2525000], [0.0000000, 0.1177000, 0.8960000], [0.0000000, 0.6609000, 0.0565000], [0.0000000, 0.1175000, 0.9929000]], [[0.0000000, 0.0899000, 0.2140000], [0.1175000, 0.2508000, 0.8507000], [0.0000000, 0.8976000, 0.7735000], [0.0409999, 0.4415000, 0.9335000]], [[0.0000000, 0.3281000, 0.6989000], [0.4346000, 0.4580000, 0.9752000], [0.0000000, 0.9157000, 0.2423000], [0.3631000, 0.5142000, 0.4758000]], [[0.2923918, 0.3616000, 0.9806000], [0.3081820, 0.3214000, 0.6405000], [1.1241000, 0.4565000, 0.9546000], [0.9112000, 0.6591000, 0.6902000]]]]]

Expected (Unparsed): [[[[[0.0,0.824,0.7255],[0.0,0.4805,0.9119],[0.0,0.4463,0.3011],[0.0,0.7538,0.9491]],[[0.0,0.408,0.8214],[0.0,0.2123,0.5734],[0.0,0.9528,0.9856],[0.0,0.6303,0.5912]],[[0.0,0.7897,0.7948],[0.0,0.3567,0.9366],[0.0,0.11,0.0654],[0.0,0.9417,0.0942]],[[0.0,0.1509,0.9236],[0.0,0.0385,0.6437],[0.0,0.184,0.1145],[0.0,0.7588,0.8533]],[[0.0,0.6377,0.9301],[0.0,0.5744,0.412],[0.0,0.3031,0.1784],[0.0,0.6725,0.7231]]],[[[0.0,0.2179,0.8972],[0.0,0.3986,0.6561],[0.0,0.8743,0.4483],[0.0,0.0463,0.2954]],[[0.0,0.8559,0.221],[0.0,0.7958,0.0191],[0.0,0.8722,0.4183],[0.0,0.038,0.1874]],[[0.0,0.4293,0.3057],[0.0,0.6772,0.9234],[0.6216,0.5396,0.8578],[0.6123,0.5022,0.9873]],[[0.0,0.0643,0.9591],[0.13790000000000002,0.89,0.7621],[0.0,0.3927,0.763],[0.0,0.5137,0.7494]],[[0.0,0.8149,0.6945],[0.2308,0.7969,0.1986],[0.0,0.3276,0.5569],[0.23060000000000003,0.5184,0.7052]]],[[[0.0,0.8623,0.3975],[0.0,0.1154,0.0972],[0.0,0.4117,0.2689],[0.0,0.7673,0.9434]],[[0.0,0.6591,0.0632],[0.0,0.2538,0.3506],[0.0,0.0018,0.3677],[0.0,0.682,0.6248]],[[0.0,0.696,0.5619],[0.0,0.7207,0.9259],[0.6276,0.3359,0.4451],[0.7032,0.9664,0.7031]],[[0.0,0.8148,0.6397],[0.0,0.7481,0.6385],[0.21450000000000002,0.9221,0.5566],[0.1926,0.8129,0.5518]],[[0.0,0.2449,0.6117],[0.0,0.8548,0.951],[1.2544,0.4635,0.6624],[0.8499000000000001,0.1528,0.8085]]],[[[0.0,0.7879,0.4541],[0.0,0.8171,0.9524],[0.0,0.5985,0.9031],[0.0,0.4452,0.9915]],[[0.0,0.8276,0.2525],[0.0,0.1177,0.896],[0.0,0.6609,0.0565],[0.0,0.1175,0.9929]],[[0.0,0.0899,0.214],[0.11749999999999994,0.2508,0.8507],[0.0,0.8976,0.7735],[0.041000000000000036,0.4415,0.9335]],[[0.0,0.3281,0.6989],[0.4346,0.458,0.9752],[0.0,0.9157,0.2423],[0.3631,0.5142,0.4758]],[[0.2923918400847488,0.3616,0.9806],[0.30818202945442885,0.3214,0.6405],[1.1240999999999999,0.4565,0.9546],[0.9112,0.6591,0.6902]]]]]

Actual:   [[[[[0, 0.824, 0.7255], [0, 0.4805, 0.9119], [0, 0.4463, 0.3011], [0, 0.7538, 0.9491]], [[0, 0.408, 0.8214], [0, 0.2123, 0.5734], [0, 0.9528, 0.9856], [0, 0.6303, 0.5912]], [[0, 0.7897, 0.7948], [0, 0.3567, 0.9366], [0, 0.11, 0.0654], [0, 0.9417, 0.0942]], [[0, 0.1509, 0.9236], [0, 0.0385, 0.6437], [0, 0.184, 0.1145], [0, 0.7588, 0.8533]], [[0, 0.6377, 0.9301], [0, 0.5744, 0.412], [0, 0.3031, 0.1784], [0, 0.6725, 0.7231]]], [[[0, 0.2179, 0.8972], [0, 0.3986, 0.6561], [0, 0.8743, 0.4483], [0, 0.0463, 0.2954]], [[0, 0.8559, 0.221], [0, 0.7958, 0.0191], [0, 0.8722, 0.4183], [0, 0.038, 0.1874]], [[0, 0.4293, 0.3057], [0, 0.6772, 0.9234], [0.6216, 0.5396, 0.8578], [0.6123, 0.5022, 0.9873]], [[0, 0.0643, 0.9591], [0.1379, 0.89, 0.7621], [0, 0.3927, 0.763], [0, 0.5137, 0.7494]], [[0, 0.8149, 0.6945], [0.2308, 0.7969, 0.1986], [0, 0.3276, 0.5569], [0.2306, 0.5184, 0.7052]]], [[[0, 0.8623, 0.3975], [0, 0.1154, 0.0972], [0, 0.4117, 0.2689], [0, 0.7673, 0.9434]], [[0, 0.6591, 0.0632], [0, 0.2538, 0.3506], [0, 0.0018, 0.3677], [0, 0.682, 0.6248]], [[0, 0.696, 0.5619], [0, 0.7207, 0.9259], [0.6276, 0.3359, 0.4451], [0.7032, 0.9664, 0.7031]], [[0, 0.8148, 0.6397], [0, 0.7481, 0.6385], [0.2145, 0.9221, 0.5566], [0.1926, 0.8129, 0.5518]], [[0, 0.2449, 0.6117], [0, 0.8548, 0.951], [1.2544, 0.4635, 0.6624], [0.8499, 0.1528, 0.8085]]], [[[0, 0.7879, 0.4541], [0, 0.8171, 0.9524], [0, 0.5985, 0.9031], [0, 0.4452, 0.9915]], [[0, 0.8276, 0.2525], [0, 0.1177, 0.896], [0, 0.6609, 0.0565], [0, 0.1175, 0.9929]], [[0, 0.0899, 0.214], [0.1175, 0.2508, 0.8507], [0, 0.8976, 0.7735], [0.041, 0.4415, 0.9335]], [[0, 0.3281, 0.6989], [0.4346, 0.458, 0.9752], [0, 0.9157, 0.2423], [0.3631, 0.5142, 0.4758]], [[0.2924, 0.3616, 0.9806], [0.3082, 0.3214, 0.6405], [1.1241, 0.4565, 0.9546], [0.9112, 0.6591, 0.6902]]]]]

Expected: [[[[[0, 0.824, 0.7255], [0, 0.4805, 0.9119], [0, 0.4463, 0.3011], [0, 0.7538, 0.9491]], [[0, 0.408, 0.8214], [0, 0.2123, 0.5734], [0, 0.9528, 0.9856], [0, 0.6303, 0.5912]], [[0, 0.7897, 0.7948], [0, 0.3567, 0.9366], [0, 0.11, 0.0654], [0, 0.9417, 0.0942]], [[0, 0.1509, 0.9236], [0, 0.0385, 0.6437], [0, 0.184, 0.1145], [0, 0.7588, 0.8533]], [[0, 0.6377, 0.9301], [0, 0.5744, 0.412], [0, 0.3031, 0.1784], [0, 0.6725, 0.7231]]], [[[0, 0.2179, 0.8972], [0, 0.3986, 0.6561], [0, 0.8743, 0.4483], [0, 0.0463, 0.2954]], [[0, 0.8559, 0.221], [0, 0.7958, 0.0191], [0, 0.8722, 0.4183], [0, 0.038, 0.1874]], [[0, 0.4293, 0.3057], [0, 0.6772, 0.9234], [0.6216, 0.5396, 0.8578], [0.6123, 0.5022, 0.9873]], [[0, 0.0643, 0.9591], [0.138, 0.89, 0.7621], [0, 0.3927, 0.763], [0, 0.5137, 0.7494]], [[0, 0.8149, 0.6945], [0.2308, 0.7969, 0.1986], [0, 0.3276, 0.5569], [0.2307, 0.5184, 0.7052]]], [[[0, 0.8623, 0.3975], [0, 0.1154, 0.0972], [0, 0.4117, 0.2689], [0, 0.7673, 0.9434]], [[0, 0.6591, 0.0632], [0, 0.2538, 0.3506], [0, 0.0018, 0.3677], [0, 0.682, 0.6248]], [[0, 0.696, 0.5619], [0, 0.7207, 0.9259], [0.6276, 0.3359, 0.4451], [0.7032, 0.9664, 0.7031]], [[0, 0.8148, 0.6397], [0, 0.7481, 0.6385], [0.2146, 0.9221, 0.5566], [0.1926, 0.8129, 0.5518]], [[0, 0.2449, 0.6117], [0, 0.8548, 0.951], [1.2544, 0.4635, 0.6624], [0.85, 0.1528, 0.8085]]], [[[0, 0.7879, 0.4541], [0, 0.8171, 0.9524], [0, 0.5985, 0.9031], [0, 0.4452, 0.9915]], [[0, 0.8276, 0.2525], [0, 0.1177, 0.896], [0, 0.6609, 0.0565], [0, 0.1175, 0.9929]], [[0, 0.0899, 0.214], [0.1175, 0.2508, 0.8507], [0, 0.8976, 0.7735], [0.0411, 0.4415, 0.9335]], [[0, 0.3281, 0.6989], [0.4346, 0.458, 0.9752], [0, 0.9157, 0.2423], [0.3631, 0.5142, 0.4758]], [[0.2924, 0.3616, 0.9806], [0.3082, 0.3214, 0.6405], [1.1241, 0.4565, 0.9546], [0.9112, 0.6591, 0.6902]]]]]