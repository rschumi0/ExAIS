import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Min86752 = tf.keras.layers.Input(shape=([2, 1, 2, 2]))
in1Min86752 = tf.keras.layers.Input(shape=([2, 1, 2, 2]))

Min86752 = keras.layers.Minimum(name = 'Min86752', )([in0Min86752,in1Min86752])
Sof30413 = keras.layers.Softmax(axis=1, name = 'Sof30413', )(Min86752)
Glo98048 = keras.layers.GlobalMaxPool3D(name = 'Glo98048', )(Sof30413)
model = tf.keras.models.Model(inputs=[in0Min86752,in1Min86752], outputs=Glo98048)
in0Min86752 = tf.constant([[[[[0.5657, 0.0279], [0.5762, 0.8441]]], [[[0.8792, 0.2429], [0.6285, 0.8639]]]]])
in1Min86752 = tf.constant([[[[[0.106, 0.9492], [0.8283, 0.4894]]], [[[0.8018, 0.7711], [0.2119, 0.005]]]]])
print (np.array2string(model.predict([in0Min86752,in1Min86752],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Glo98048.png')

LMin86752 = minimum_layer([[[[[[0.5657, 0.0279], [0.5762, 0.8441]]], [[[0.8792, 0.2429], [0.6285, 0.8639]]]]], [[[[[0.106, 0.9492], [0.8283, 0.4894]]], [[[0.8018, 0.7711], [0.2119, 0.005]]]]]], Min86752), 
LSof30413 = softmax_layer(Min86752, 1, Sof30413), 
LGlo98048 = global_max_pool3D_layer(Sof30413, Glo98048), 
exec_layers([LMin86752,LSof30413,LGlo98048],["Min86752","Sof30413","Glo98048"],Glo98048,"Glo98048")

Actual (Unparsed): [[0.6672559, 0.6187863]]

Expected (Unparsed): [[0.6672559212212296,0.6187863310065518]]

Actual:   [[0.6673, 0.6188]]

Expected: [[0.6673, 0.6188]]