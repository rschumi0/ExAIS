import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Thr96580 = tf.keras.layers.Input(shape=([2, 2, 2, 2]))

Thr96580 = keras.layers.ThresholdedReLU(theta=4.504048121481244, name = 'Thr96580', input_shape=(2, 2, 2, 2))(in0Thr96580)
Res41968 = keras.layers.Reshape((2, 2, 4), name = 'Res41968', )(Thr96580)
Res84509 = keras.layers.Reshape((2, 8), name = 'Res84509', )(Res41968)
Max31934 = keras.layers.MaxPool1D(pool_size=(2), strides=(1), padding='same', name = 'Max31934', )(Res84509)
Mas53315 = keras.layers.Masking(mask_value=1, name = 'Mas53315', )(Max31934)
model = tf.keras.models.Model(inputs=[in0Thr96580], outputs=Mas53315)
in0Thr96580 = tf.constant([[[[[0.4711, 0.1543], [0.6193, 0.4706]], [[0.4542, 0.8722], [0.3007, 0.7945]]], [[[0.501, 0.8967], [0.7448, 0.4063]], [[0.4014, 0.2573], [0.6964, 0.2408]]]]])
print (np.array2string(model.predict([in0Thr96580],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Mas53315.png')

LThr96580 = thresholded_relu_layer([[[[[0.4711, 0.1543], [0.6193, 0.4706]], [[0.4542, 0.8722], [0.3007, 0.7945]]], [[[0.501, 0.8967], [0.7448, 0.4063]], [[0.4014, 0.2573], [0.6964, 0.2408]]]]], 4.504048121481244, Thr96580), 
LRes41968 = reshape_layer(Thr96580, [2, 2, 4], Res41968), 
LRes84509 = reshape_layer(Res41968, [2, 8], Res84509), 
LMax31934 = max_pool1D_layer(Res84509, 2, 1, true, Max31934), 
LMas53315 = masking_layer(Max31934, 1, Mas53315), 
exec_layers([LThr96580,LRes41968,LRes84509,LMax31934,LMas53315],["Thr96580","Res41968","Res84509","Max31934","Mas53315"],Mas53315,"Mas53315")

Actual (Unparsed): [[[0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000]]]

Expected (Unparsed): [[[0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0]]]

Actual:   [[[0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0]]]

Expected: [[[0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0]]]