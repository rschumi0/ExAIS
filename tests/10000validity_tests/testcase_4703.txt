import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Sub547 = tf.keras.layers.Input(shape=([3, 3, 2, 2]))
in1Sub547 = tf.keras.layers.Input(shape=([3, 3, 2, 2]))
in0Dot68804 = tf.keras.layers.Input(shape=([3]))
in1Dot68804 = tf.keras.layers.Input(shape=([3]))
in0Lea30957 = tf.keras.layers.Input(shape=([1, 2, 2, 1]))

Sub547 = keras.layers.Subtract(name = 'Sub547', )([in0Sub547,in1Sub547])
Res17625 = keras.layers.Reshape((3, 3, 4), name = 'Res17625', )(Sub547)
Dot68804 = keras.layers.Dot(axes=(1, 1), name = 'Dot68804', )([in0Dot68804,in1Dot68804])
Res66514 = keras.layers.Reshape((1, 1), name = 'Res66514', )(Dot68804)
Res10509 = keras.layers.Reshape((1, 1, 1), name = 'Res10509', )(Res66514)
Con56702 = keras.layers.Conv2D(4, (1, 1),strides=(1, 1), padding='valid', dilation_rate=(1, 1), name = 'Con56702', )(Res10509)
Zer33364 = keras.layers.ZeroPadding2D(padding=((2, 0), (2, 0)), name = 'Zer33364', )(Con56702)
Max60335 = keras.layers.Maximum(name = 'Max60335', )([Res17625,Zer33364])
Res96799 = keras.layers.Reshape((3, 3, 4, 1), name = 'Res96799', )(Max60335)
Lea30957 = keras.layers.LeakyReLU(alpha=5.887884382908354, name = 'Lea30957', input_shape=(1, 2, 2, 1))(in0Lea30957)
Zer64766 = keras.layers.ZeroPadding3D(padding=((2, 0), (1, 0), (2, 0)), name = 'Zer64766', )(Lea30957)
Max73217 = keras.layers.Maximum(name = 'Max73217', )([Res96799,Zer64766])
Res19678 = keras.layers.Reshape((3, 3, 4), name = 'Res19678', )(Max73217)
Res84215 = keras.layers.Reshape((3, 12), name = 'Res84215', )(Res19678)
Max87733 = keras.layers.MaxPool1D(pool_size=(1), name = 'Max87733', )(Res84215)
model = tf.keras.models.Model(inputs=[in0Sub547,in1Sub547,in0Dot68804,in1Dot68804,in0Lea30957], outputs=Max87733)
w = model.get_layer('Con56702').get_weights() 
w[0] = np.array([[[[0.3993, 0.0503, 0.3671, 0.231]]]])
w[1] = np.array([0, 0, 0, 0])
model.get_layer('Con56702').set_weights(w) 
in0Sub547 = tf.constant([[[[[0.9405, 0.8491], [0.5741, 0.9611]], [[0.5303, 0.0838], [0.7937, 0.4501]], [[0.4358, 0.6828], [0.016, 0.411]]], [[[0.2321, 0.5655], [0.6326, 0.9953]], [[0.5132, 0.4959], [0.4736, 0.8415]], [[0.4098, 0.6669], [0.795, 0.8458]]], [[[0.0087, 0.4673], [0.6937, 0.3199]], [[0.8764, 0.4704], [0.0018, 0.6686]], [[0.4969, 0.854], [0.7687, 0.48]]]]])
in1Sub547 = tf.constant([[[[[0.1974, 0.05], [0.157, 0.5802]], [[0.0535, 0.4077], [0.949, 0.1721]], [[0.3401, 0.0505], [0.8901, 0.6501]]], [[[0.328, 0.9106], [0.7791, 0.0666]], [[0.6113, 0.1297], [0.5562, 0.5063]], [[0.6959, 0.6316], [0.638, 0.8224]]], [[[0.2797, 0.6914], [0.3998, 0.2831]], [[0.5109, 0.7533], [0.0172, 0.6847]], [[0.5248, 0.582], [0.8425, 0.3971]]]]])
in0Dot68804 = tf.constant([[0.7257, 0.071, 0.1177]])
in1Dot68804 = tf.constant([[0.625, 0.6096, 0.679]])
in0Lea30957 = tf.constant([[[[[0.0977], [0.8921]], [[0.4014], [0.514]]]]])
print (np.array2string(model.predict([in0Sub547,in1Sub547,in0Dot68804,in1Dot68804,in0Lea30957],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Max87733.png')

LSub547 = subtract_layer([[[[[0.9405, 0.8491], [0.5741, 0.9611]], [[0.5303, 0.0838], [0.7937, 0.4501]], [[0.4358, 0.6828], [0.016, 0.411]]], [[[0.2321, 0.5655], [0.6326, 0.9953]], [[0.5132, 0.4959], [0.4736, 0.8415]], [[0.4098, 0.6669], [0.795, 0.8458]]], [[[0.0087, 0.4673], [0.6937, 0.3199]], [[0.8764, 0.4704], [0.0018, 0.6686]], [[0.4969, 0.854], [0.7687, 0.48]]]]], [[[[[0.1974, 0.05], [0.157, 0.5802]], [[0.0535, 0.4077], [0.949, 0.1721]], [[0.3401, 0.0505], [0.8901, 0.6501]]], [[[0.328, 0.9106], [0.7791, 0.0666]], [[0.6113, 0.1297], [0.5562, 0.5063]], [[0.6959, 0.6316], [0.638, 0.8224]]], [[[0.2797, 0.6914], [0.3998, 0.2831]], [[0.5109, 0.7533], [0.0172, 0.6847]], [[0.5248, 0.582], [0.8425, 0.3971]]]]], Sub547), 
LRes17625 = reshape_layer(Sub547, [3, 3, 4], Res17625), 
LDot68804 = dot_layer([[0.7257, 0.071, 0.1177]], [[0.625, 0.6096, 0.679]], 1, 1, Dot68804), 
LRes66514 = reshape_layer(Dot68804, [1, 1], Res66514), 
LRes10509 = reshape_layer(Res66514, [1, 1, 1], Res10509), 
LCon56702 = conv2D_layer(Res10509, 1, 1,[[[[0.3993, 0.0503, 0.3671, 0.231]]]],[0, 0, 0, 0], 1, 1, false, 1, 1, Con56702), 
LZer33364 = zero_padding2D_layer(Con56702, 2, 0, 2, 0, Zer33364), 
LMax60335 = maximum_layer([Res17625,Zer33364], Max60335), 
LRes96799 = reshape_layer(Max60335, [3, 3, 4, 1], Res96799), 
LLea30957 = leaky_relu_layer([[[[[0.0977], [0.8921]], [[0.4014], [0.514]]]]], 5.887884382908354, Lea30957), 
LZer64766 = zero_padding3D_layer(Lea30957, 2, 0, 1, 0, 2, 0, Zer64766), 
LMax73217 = maximum_layer([Res96799,Zer64766], Max73217), 
LRes19678 = reshape_layer(Max73217, [3, 3, 4], Res19678), 
LRes84215 = reshape_layer(Res19678, [3, 12], Res84215), 
LMax87733 = max_pool1D_layer(Res84215, 1, Max87733), 
exec_layers([LSub547,LRes17625,LDot68804,LRes66514,LRes10509,LCon56702,LZer33364,LMax60335,LRes96799,LLea30957,LZer64766,LMax73217,LRes19678,LRes84215,LMax87733],["Sub547","Res17625","Dot68804","Res66514","Res10509","Con56702","Zer33364","Max60335","Res96799","Lea30957","Zer64766","Max73217","Res19678","Res84215","Max87733"],Max87733,"Max87733")

Actual (Unparsed): [[[0.7431000, 0.7991000, 0.4171000, 0.3809000, 0.4768000, 0.0000000, 0.0000000, 0.2780000, 0.0957000, 0.6323000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000, 0.9287000, 0.0000000, 0.3662000, 0.0000000, 0.3352000, 0.0000000, 0.0353000, 0.1570000, 0.0234000], [0.0000000, 0.0000000, 0.2939000, 0.0368000, 0.3655000, 0.0000000, 0.0977000, 0.8921000, 0.2303012, 0.2720000, 0.4014000, 0.5140000]]]

Expected (Unparsed): [[[0.7431,0.7990999999999999,0.4171,0.3808999999999999,0.4768,0,0,0.278,0.09570000000000001,0.6323,0,0],[0,0,0,0.9287,0,0.36619999999999997,0,0.33520000000000005,0,0.0353,0.15700000000000003,0.023399999999999976],[0,0,0.2939,0.0368,0.36549999999999994,0,0.0977,0.8921,0.23030122632,0.272,0.4014,0.514]]]

Actual:   [[[0.7431, 0.7991, 0.4171, 0.3809, 0.4768, 0, 0, 0.278, 0.0957, 0.6323, 0, 0], [0, 0, 0, 0.9287, 0, 0.3662, 0, 0.3352, 0, 0.0353, 0.157, 0.0234], [0, 0, 0.2939, 0.0368, 0.3655, 0, 0.0977, 0.8921, 0.2304, 0.272, 0.4014, 0.514]]]

Expected: [[[0.7431, 0.7991, 0.4171, 0.3809, 0.4768, 0, 0, 0.278, 0.0958, 0.6323, 0, 0], [0, 0, 0, 0.9287, 0, 0.3662, 0, 0.3353, 0, 0.0353, 0.1571, 0.0234], [0, 0, 0.2939, 0.0368, 0.3655, 0, 0.0977, 0.8921, 0.2304, 0.272, 0.4014, 0.514]]]