import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Sim76855 = tf.keras.layers.Input(shape=([1, 1]))
in0Con76117 = tf.keras.layers.Input(shape=([4, 1]))
in0Ave34018 = tf.keras.layers.Input(shape=([2, 1, 1, 2]))
in1Ave34018 = tf.keras.layers.Input(shape=([2, 1, 1, 2]))

Sim76855 = keras.layers.SimpleRNN(2,name = 'Sim76855', )(in0Sim76855)
Res6425 = keras.layers.Reshape((2, 1), name = 'Res6425', )(Sim76855)
Res89420 = keras.layers.Reshape((2, 1, 1), name = 'Res89420', )(Res6425)
Res77495 = keras.layers.Reshape((2, 1, 1, 1), name = 'Res77495', )(Res89420)
Cro23914 = keras.layers.Cropping3D(cropping=((1, 0), (0, 0), (0, 0)), name = 'Cro23914', )(Res77495)
Glo60759 = keras.layers.GlobalAveragePooling3D(name = 'Glo60759', )(Cro23914)
Res14838 = keras.layers.Reshape((1, 1), name = 'Res14838', )(Glo60759)
Zer33191 = keras.layers.ZeroPadding1D(padding=((3, 0)), name = 'Zer33191', )(Res14838)
Con76117 = keras.layers.Concatenate(axis=2, name = 'Con76117', )([Zer33191,in0Con76117])
Ave34018 = keras.layers.Average(name = 'Ave34018', )([in0Ave34018,in1Ave34018])
Res69336 = keras.layers.Reshape((2, 1, 2), name = 'Res69336', )(Ave34018)
Res88766 = keras.layers.Reshape((2, 2), name = 'Res88766', )(Res69336)
Zer51685 = keras.layers.ZeroPadding1D(padding=((1, 1)), name = 'Zer51685', )(Res88766)
Sub59108 = keras.layers.Subtract(name = 'Sub59108', )([Con76117,Zer51685])
model = tf.keras.models.Model(inputs=[in0Sim76855,in0Con76117,in0Ave34018,in1Ave34018], outputs=Sub59108)
w = model.get_layer('Sim76855').get_weights() 
w[0] = np.array([[6, 5]])
w[1] = np.array([[9, 5], [6, 7]])
w[2] = np.array([5, 8])
model.get_layer('Sim76855').set_weights(w) 
in0Sim76855 = tf.constant([[[8]]])
in0Con76117 = tf.constant([[[0.2343], [0.1545], [0.7181], [0.8157]]])
in0Ave34018 = tf.constant([[[[[0.3602, 0.8549]]], [[[0.1263, 0.5747]]]]])
in1Ave34018 = tf.constant([[[[[0.2701, 0.9007]]], [[[0.2417, 0.6327]]]]])
print (np.array2string(model.predict([in0Sim76855,in0Con76117,in0Ave34018,in1Ave34018],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Sub59108.png')

LSim76855 = simple_rnn_layer([[[8]]],[[6, 5]],[[9, 5], [6, 7]],[5, 8], Sim76855), 
LRes6425 = reshape_layer(Sim76855, [2, 1], Res6425), 
LRes89420 = reshape_layer(Res6425, [2, 1, 1], Res89420), 
LRes77495 = reshape_layer(Res89420, [2, 1, 1, 1], Res77495), 
LCro23914 = cropping3D_layer(Res77495, 1, 0, 0, 0, 0, 0, Cro23914), 
LGlo60759 = global_average_pooling3D_layer(Cro23914, Glo60759), 
LRes14838 = reshape_layer(Glo60759, [1, 1], Res14838), 
LZer33191 = zero_padding1D_layer(Res14838, 3, 0, Zer33191), 
LCon76117 = concatenate_layer([Zer33191,[[[0.2343], [0.1545], [0.7181], [0.8157]]]], 2, Con76117), 
LAve34018 = average_layer([[[[[[0.3602, 0.8549]]], [[[0.1263, 0.5747]]]]], [[[[[0.2701, 0.9007]]], [[[0.2417, 0.6327]]]]]], Ave34018), 
LRes69336 = reshape_layer(Ave34018, [2, 1, 2], Res69336), 
LRes88766 = reshape_layer(Res69336, [2, 2], Res88766), 
LZer51685 = zero_padding1D_layer(Res88766, 1, 1, Zer51685), 
LSub59108 = subtract_layer(Con76117,Zer51685, Sub59108), 
exec_layers([LSim76855,LRes6425,LRes89420,LRes77495,LCro23914,LGlo60759,LRes14838,LZer33191,LCon76117,LAve34018,LRes69336,LRes88766,LZer51685,LSub59108],["Sim76855","Res6425","Res89420","Res77495","Cro23914","Glo60759","Res14838","Zer33191","Con76117","Ave34018","Res69336","Res88766","Zer51685","Sub59108"],Sub59108,"Sub59108")

Actual (Unparsed): [[[0.0000000, 0.2343000], [-0.3151500, -0.7233000], [-0.1840000, 0.1144000], [1.0000000, 0.8157000]]]

Expected (Unparsed): [[[0,0.2343],[-0.31515000000000004,-0.7232999999999999],[-0.184,0.11439999999999995],[1.0,0.8157]]]

Actual:   [[[0, 0.2343], [-0.3151, -0.7233], [-0.184, 0.1144], [1, 0.8157]]]

Expected: [[[0, 0.2343], [-0.3151, -0.7232], [-0.184, 0.1144], [1, 0.8157]]]