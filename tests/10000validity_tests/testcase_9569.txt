import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Con82487 = tf.keras.layers.Input(shape=([1, 2, 1]))
in0Min75116 = tf.keras.layers.Input(shape=([2, 1, 1, 1]))
in1Min75116 = tf.keras.layers.Input(shape=([2, 1, 1, 1]))
in0Ave77889 = tf.keras.layers.Input(shape=([1, 2, 1]))
in1Ave77889 = tf.keras.layers.Input(shape=([1, 2, 1]))
in0Con61158 = tf.keras.layers.Input(shape=([2, 35, 4]))

Con82487 = keras.layers.Conv2DTranspose(3, (1, 2),strides=(1, 9), padding='valid', name = 'Con82487', )(in0Con82487)
Res35796 = keras.layers.Reshape((1, 18, 3, 1), name = 'Res35796', )(Con82487)
Zer49809 = keras.layers.ZeroPadding3D(padding=((1, 0), (17, 0), (2, 0)), name = 'Zer49809', )(Res35796)
Min75116 = keras.layers.Minimum(name = 'Min75116', )([in0Min75116,in1Min75116])
Zer93444 = keras.layers.ZeroPadding3D(padding=((0, 0), (34, 0), (4, 0)), name = 'Zer93444', )(Min75116)
Max53664 = keras.layers.Maximum(name = 'Max53664', )([Zer49809,Zer93444])
Res49088 = keras.layers.Reshape((2, 35, 5), name = 'Res49088', )(Max53664)
Ave77889 = keras.layers.Average(name = 'Ave77889', )([in0Ave77889,in1Ave77889])
PRe75961 = keras.layers.PReLU(name = 'PRe75961', )(Ave77889)
Zer14818 = keras.layers.ZeroPadding2D(padding=((1, 0), (33, 0)), name = 'Zer14818', )(PRe75961)
Con61158 = keras.layers.Concatenate(axis=3, name = 'Con61158', )([Zer14818,in0Con61158])
Ave74121 = keras.layers.Average(name = 'Ave74121', )([Res49088,Con61158])
Res15741 = keras.layers.Reshape((2, 175), name = 'Res15741', )(Ave74121)
Loc3299 = keras.layers.LocallyConnected1D(3, (1),strides=(11), name = 'Loc3299', )(Res15741)
model = tf.keras.models.Model(inputs=[in0Con82487,in0Min75116,in1Min75116,in0Ave77889,in1Ave77889,in0Con61158], outputs=Loc3299)
w = model.get_layer('Con82487').get_weights() 
w[0] = np.array([[[[0.6198], [0.2346], [0.2941]], [[0.6381], [0.9646], [0.4876]]]])
w[1] = np.array([0, 0, 0])
model.get_layer('Con82487').set_weights(w) 
w = model.get_layer('PRe75961').get_weights() 
w[0] = np.array([[[0.7641], [0.6521]]])
model.get_layer('PRe75961').set_weights(w) 
w = model.get_layer('Loc3299').get_weights() 
w[0] = np.array([[[0.6321, 0.1102, 0.728], [0.2505, 0.7056, 0.9897], [0.8201, 0.7254, 0.7843], [0.2311, 0.6771, 0.5699], [0.6228, 0.281, 0.7161], [0.5061, 0.8402, 0.8444], [0.0501, 0.4014, 0.3453], [0.8816, 0.4823, 0.6727], [0.0497, 0.8619, 0.1625], [0.5538, 0.6892, 0.9328], [0.9994, 0.3097, 0.446], [0.1427, 0.5694, 0.3473], [0.7252, 0.362, 0.1807], [0.5713, 0.8757, 0.09], [0.9591, 0.2683, 0.8642], [0.9043, 0.3049, 0.258], [0.9156, 0.9123, 0.8391], [0.0489, 0.9103, 0.1992], [0.0023, 0.2584, 0.8977], [0.9304, 0.8011, 0.6113], [0.4257, 0.4641, 0.8063], [0.4207, 0.5146, 0.5563], [0.3984, 0.5704, 0.0085], [0.4994, 0.429, 0.6705], [0.7299, 0.8259, 0.9222], [0.2344, 0.3277, 0.0299], [0.1719, 0.4424, 0.9641], [0.6117, 0.6122, 0.2955], [0.0159, 0.6345, 0.1317], [0.7405, 0.7798, 0.8965], [0.0849, 0.6523, 0.7657], [0.7703, 0.111, 0.3951], [0.539, 0.7355, 0.0165], [0.0548, 0.228, 0.6432], [0.3945, 0.3312, 0.7542], [0.7869, 0.365, 0.513], [0.5594, 0.9299, 0.8001], [0.9161, 0.1072, 0.5384], [0.6663, 0.6628, 0.7176], [0.6048, 0.6666, 0.7021], [0.357, 0.6109, 0.1896], [0.5269, 0.8507, 0.3763], [0.6865, 0.1305, 0.6105], [0.7654, 0.988, 0.3655], [0.3792, 0.4851, 0.7445], [0.0132, 0.6781, 0.4944], [0.1284, 0.5567, 0.6187], [0.8703, 0.1727, 0.8595], [0.4866, 0.3253, 0.6359], [0.6974, 0.0393, 0.9554], [0.0815, 0.3626, 0.7734], [0.2153, 0.9395, 0.3679], [0.5113, 0.5589, 0.6777], [0.6137, 0.5326, 0.6667], [0.8518, 0.2494, 0.1336], [0.6841, 0.7276, 0.8598], [0.9372, 0.4412, 0.3695], [0.5384, 0.4928, 0.1902], [0.5789, 0.8711, 0.71], [0.0024, 0.8297, 0.8465], [0.4506, 0.6007, 0.3973], [0.2346, 0.1648, 0.0653], [0.2063, 0.0295, 0.8077], [0.5515, 0.5319, 0.141], [0.3914, 0.8813, 0.5831], [0.6357, 0.441, 0.6329], [0.1666, 0.4801, 0.3073], [0.1391, 0.0868, 0.9157], [0.7619, 0.6303, 0.6696], [0.3123, 0.5478, 0.6076], [0.8174, 0.5841, 0.5944], [0.4159, 0.2994, 0.0317], [0.4177, 0.9033, 0.5585], [0.7758, 0.8191, 0.9973], [0.1799, 0.7876, 0.3778], [0.0079, 0.3054, 0.8871], [0.3819, 0.4748, 0.7018], [0.9811, 0.7878, 0.4167], [0.8941, 0.2437, 0.5144], [0.9127, 0.7629, 0.9021], [0.8787, 0.0464, 0.2671], [0.7868, 0.2647, 0.3789], [0.5062, 0.8251, 0.1778], [0.2814, 0.1612, 0.219], [0.6841, 0.6544, 0.4662], [0.1277, 0.8581, 0.7868], [0.2529, 0.3006, 0.2703], [0.3698, 0.2839, 0.2502], [0.7357, 0.9676, 0.045], [0.2387, 0.5118, 0.5697], [0.4, 0.5621, 0.8871], [0.2028, 0.0316, 0.3598], [0.6337, 0.9613, 0.3869], [0.4513, 0.1093, 0.234], [0.9252, 0.5079, 0.8908], [0.3491, 0.83, 0.2036], [0.6956, 0.3356, 0.9816], [0.8586, 0.0061, 0.0118], [0.9177, 0.4871, 0.2492], [0.1478, 0.7073, 0.0918], [0.6034, 0.0229, 0.1505], [0.5106, 0.5082, 0.2995], [0.4859, 0.1131, 0.7296], [0.7705, 0.8297, 0.1691], [0.4032, 0.2008, 0.9066], [0.7667, 0.8164, 0.1804], [0.2355, 0.7461, 0.8219], [0.6346, 0.8317, 0.2302], [0.6779, 0.3948, 0.6547], [0.9865, 0.8019, 0.0241], [0.4875, 0.0324, 0.3922], [0.9121, 0.6686, 0.608], [0.1251, 0.508, 0.1135], [0.8872, 0.1642, 0.4413], [0.3604, 0.5667, 0.5363], [0.1998, 0.9559, 0.7833], [0.5179, 0.9741, 0.3529], [0.6439, 0.0581, 0.2618], [0.6397, 0.0214, 0.415], [0.8295, 0.8366, 0.1698], [0.126, 0.6713, 0.2053], [0.1413, 0.1491, 0.675], [0.9983, 0.9512, 0.5148], [0.8093, 0.3439, 0.9293], [0.1103, 0.7773, 0.51], [0.7193, 0.2799, 0.2499], [0.6178, 0.9474, 0.7715], [0.9866, 0.9889, 0.6631], [0.1861, 0.3787, 0.6997], [0.2767, 0.4905, 0.2101], [0.5883, 0.8674, 0.3467], [0.7205, 0.9177, 0.4146], [0.9782, 0.3757, 0.1291], [0.7184, 0.0445, 0.1042], [0.6392, 0.5189, 0.5293], [0.1423, 0.4331, 0.5959], [0.9587, 0.0439, 0.2804], [0.4398, 0.3632, 0.8596], [0.7676, 0.4176, 0.27], [0.9654, 0.9759, 0.2302], [0.6734, 0.5309, 0.5613], [0.8515, 0.3655, 0.157], [0.1938, 0.077, 0.2321], [0.784, 0.8019, 0.2637], [0.1178, 0.5734, 0.831], [0.8444, 0.6485, 0.1025], [0.7761, 0.7171, 0.9597], [0.8713, 0.5748, 0.67], [0.6283, 0.8234, 0.0606], [0.5882, 0.2272, 0.3059], [0.5642, 0.3057, 0.8315], [0.6526, 0.9264, 0.6176], [0.4942, 0.3678, 0.6388], [0.1453, 0.1766, 0.7045], [0.5647, 0.462, 0.8714], [0.2881, 0.7075, 0.1286], [0.6892, 0.3176, 0.7953], [0.0616, 0.4906, 0.7911], [0.0241, 0.9653, 0.2419], [0.1517, 0.1683, 0.3923], [0.6497, 0.7235, 0.4042], [0.3688, 0.7836, 0.3193], [0.6175, 0.4171, 0.3388], [0.4397, 0.6689, 0.2417], [0.9059, 0.5559, 0.0778], [0.3036, 0.1206, 0.0703], [0.8502, 0.0045, 0.8436], [0.6826, 0.7252, 0.2239], [0.5888, 0.0549, 0.9434], [0.5089, 0.2586, 0.8654], [0.7502, 0.3043, 0.8757], [0.5665, 0.241, 0.227], [0.4025, 0.4249, 0.8241], [0.5395, 0.9329, 0.7071], [0.5351, 0.6577, 0.5076]]])
w[1] = np.array([[0, 0, 0]])
model.get_layer('Loc3299').set_weights(w) 
in0Con82487 = tf.constant([[[[0.5046], [0.2558]]]])
in0Min75116 = tf.constant([[[[[0.5484]]], [[[0.8509]]]]])
in1Min75116 = tf.constant([[[[[0.9567]]], [[[0.1048]]]]])
in0Ave77889 = tf.constant([[[[0.3542], [0.946]]]])
in1Ave77889 = tf.constant([[[[0.6204], [0.6956]]]])
in0Con61158 = tf.constant([[[[0.5311, 0.3962, 0.4105, 0.5787], [0.0044, 0.3193, 0.9491, 0.571], [0.0858, 0.8529, 0.0116, 0.281], [0.4874, 0.1356, 0.8588, 0.8491], [0.8468, 0.1154, 0.2669, 0.8417], [0.2602, 0.8417, 0.3827, 0.6849], [0.6444, 0.5835, 0.1259, 0.9479], [0.7775, 0.5486, 0.1519, 0.5697], [0.1751, 0.1587, 0.2715, 0.0134], [0.6621, 0.6803, 0.0075, 0.3742], [0.6187, 0.5052, 0.6619, 0.6692], [0.3952, 0.53, 0.8667, 0.8912], [0.3214, 0.8917, 0.0939, 0.9253], [0.066, 0.7833, 0.0132, 0.0904], [0.8431, 0.1963, 0.9037, 0.8991], [0.106, 0.2126, 0.5476, 0.6061], [0.9227, 0.9061, 0.1657, 0.2546], [0.1837, 0.0023, 0.9891, 0.2263], [0.1585, 0.1938, 0.0051, 0.7461], [0.6853, 0.4102, 0.2639, 0.4034], [0.4585, 0.4035, 0.8854, 0.5127], [0.4581, 0.7228, 0.5707, 0.055], [0.5577, 0.5273, 0.9855, 0.0167], [0.7406, 0.7115, 0.8604, 0.176], [0.156, 0.5051, 0.0296, 0.7708], [0.4574, 0.0464, 0.9187, 0.0303], [0.4755, 0.4294, 0.182, 0.249], [0.3028, 0.375, 0.29, 0.9412], [0.2897, 0.9874, 0.8718, 0.6249], [0.2893, 0.0232, 0.5301, 0.9522], [0.7232, 0.7217, 0.6593, 0.2333], [0.688, 0.5243, 0.5277, 0.8746], [0.3756, 0.9432, 0.5081, 0.8981], [0.5344, 0.4351, 0.8808, 0.4947], [0.5672, 0.3761, 0.0761, 0.522]], [[0.128, 0.1441, 0.5678, 0.9571], [0.7601, 0.869, 0.8892, 0.5822], [0.1991, 0.6302, 0.4011, 0.5966], [0.4532, 0.7526, 0.509, 0.427], [0.6705, 0.3779, 0.0016, 0.7354], [0.1034, 0.6773, 0.0609, 0.5168], [0.1884, 0.9074, 0.2821, 0.2169], [0.8736, 0.0121, 0.7328, 0.0057], [0.8491, 0.6251, 0.6785, 0.6956], [0.2571, 0.1361, 0.1101, 0.3068], [0.7976, 0.9523, 0.6156, 0.9517], [0.8807, 0.2062, 0.4585, 0.5357], [0.6226, 0.9399, 0.9484, 0.7504], [0.0365, 0.2323, 0.319, 0.9785], [0.7247, 0.8237, 0.3643, 0.016], [0.7433, 0.5411, 0.0279, 0.9765], [0.0838, 0.2307, 0.9864, 0.3392], [0.388, 0.9626, 0.0255, 0.8738], [0.1005, 0.9905, 0.6657, 0.0879], [0.2488, 0.3189, 0.0656, 0.9213], [0.4381, 0.7603, 0.6995, 0.6413], [0.45, 0.0494, 0.6911, 0.2826], [0.0404, 0.9204, 0.9667, 0.516], [0.1492, 0.0534, 0.5872, 0.5354], [0.7515, 0.4467, 0.715, 0.4035], [0.009, 0.0822, 0.676, 0.3135], [0.2136, 0.7181, 0.4912, 0.3906], [0.2518, 0.2628, 0.066, 0.9839], [0.9676, 0.4648, 0.9513, 0.8794], [0.8504, 0.5855, 0.2202, 0.5031], [0.9336, 0.3153, 0.539, 0.9782], [0.6545, 0.4371, 0.955, 0.8476], [0.6954, 0.6489, 0.2711, 0.3831], [0.5031, 0.5118, 0.1334, 0.663], [0.2671, 0.7107, 0.1174, 0.0184]]]])
print (np.array2string(model.predict([in0Con82487,in0Min75116,in1Min75116,in0Ave77889,in1Ave77889,in0Con61158],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Loc3299.png')

LCon82487 = conv2D_transpose_layer([[[[0.5046], [0.2558]]]], 1, 2,[[[[0.6198], [0.2346], [0.2941]], [[0.6381], [0.9646], [0.4876]]]],[0, 0, 0], 1, 9, false, Con82487), 
LRes35796 = reshape_layer(Con82487, [1, 18, 3, 1], Res35796), 
LZer49809 = zero_padding3D_layer(Res35796, 1, 0, 17, 0, 2, 0, Zer49809), 
LMin75116 = minimum_layer([[[[[[0.5484]]], [[[0.8509]]]]], [[[[[0.9567]]], [[[0.1048]]]]]], Min75116), 
LZer93444 = zero_padding3D_layer(Min75116, 0, 0, 34, 0, 4, 0, Zer93444), 
LMax53664 = maximum_layer([Zer49809,Zer93444], Max53664), 
LRes49088 = reshape_layer(Max53664, [2, 35, 5], Res49088), 
LAve77889 = average_layer([[[[[0.3542], [0.946]]]], [[[[0.6204], [0.6956]]]]], Ave77889), 
LPRe75961 = prelu_layer(Ave77889, [[[0.7641], [0.6521]]], PRe75961), 
LZer14818 = zero_padding2D_layer(PRe75961, 1, 0, 33, 0, Zer14818), 
LCon61158 = concatenate_layer([Zer14818,[[[[0.5311, 0.3962, 0.4105, 0.5787], [0.0044, 0.3193, 0.9491, 0.571], [0.0858, 0.8529, 0.0116, 0.281], [0.4874, 0.1356, 0.8588, 0.8491], [0.8468, 0.1154, 0.2669, 0.8417], [0.2602, 0.8417, 0.3827, 0.6849], [0.6444, 0.5835, 0.1259, 0.9479], [0.7775, 0.5486, 0.1519, 0.5697], [0.1751, 0.1587, 0.2715, 0.0134], [0.6621, 0.6803, 0.0075, 0.3742], [0.6187, 0.5052, 0.6619, 0.6692], [0.3952, 0.53, 0.8667, 0.8912], [0.3214, 0.8917, 0.0939, 0.9253], [0.066, 0.7833, 0.0132, 0.0904], [0.8431, 0.1963, 0.9037, 0.8991], [0.106, 0.2126, 0.5476, 0.6061], [0.9227, 0.9061, 0.1657, 0.2546], [0.1837, 0.0023, 0.9891, 0.2263], [0.1585, 0.1938, 0.0051, 0.7461], [0.6853, 0.4102, 0.2639, 0.4034], [0.4585, 0.4035, 0.8854, 0.5127], [0.4581, 0.7228, 0.5707, 0.055], [0.5577, 0.5273, 0.9855, 0.0167], [0.7406, 0.7115, 0.8604, 0.176], [0.156, 0.5051, 0.0296, 0.7708], [0.4574, 0.0464, 0.9187, 0.0303], [0.4755, 0.4294, 0.182, 0.249], [0.3028, 0.375, 0.29, 0.9412], [0.2897, 0.9874, 0.8718, 0.6249], [0.2893, 0.0232, 0.5301, 0.9522], [0.7232, 0.7217, 0.6593, 0.2333], [0.688, 0.5243, 0.5277, 0.8746], [0.3756, 0.9432, 0.5081, 0.8981], [0.5344, 0.4351, 0.8808, 0.4947], [0.5672, 0.3761, 0.0761, 0.522]], [[0.128, 0.1441, 0.5678, 0.9571], [0.7601, 0.869, 0.8892, 0.5822], [0.1991, 0.6302, 0.4011, 0.5966], [0.4532, 0.7526, 0.509, 0.427], [0.6705, 0.3779, 0.0016, 0.7354], [0.1034, 0.6773, 0.0609, 0.5168], [0.1884, 0.9074, 0.2821, 0.2169], [0.8736, 0.0121, 0.7328, 0.0057], [0.8491, 0.6251, 0.6785, 0.6956], [0.2571, 0.1361, 0.1101, 0.3068], [0.7976, 0.9523, 0.6156, 0.9517], [0.8807, 0.2062, 0.4585, 0.5357], [0.6226, 0.9399, 0.9484, 0.7504], [0.0365, 0.2323, 0.319, 0.9785], [0.7247, 0.8237, 0.3643, 0.016], [0.7433, 0.5411, 0.0279, 0.9765], [0.0838, 0.2307, 0.9864, 0.3392], [0.388, 0.9626, 0.0255, 0.8738], [0.1005, 0.9905, 0.6657, 0.0879], [0.2488, 0.3189, 0.0656, 0.9213], [0.4381, 0.7603, 0.6995, 0.6413], [0.45, 0.0494, 0.6911, 0.2826], [0.0404, 0.9204, 0.9667, 0.516], [0.1492, 0.0534, 0.5872, 0.5354], [0.7515, 0.4467, 0.715, 0.4035], [0.009, 0.0822, 0.676, 0.3135], [0.2136, 0.7181, 0.4912, 0.3906], [0.2518, 0.2628, 0.066, 0.9839], [0.9676, 0.4648, 0.9513, 0.8794], [0.8504, 0.5855, 0.2202, 0.5031], [0.9336, 0.3153, 0.539, 0.9782], [0.6545, 0.4371, 0.955, 0.8476], [0.6954, 0.6489, 0.2711, 0.3831], [0.5031, 0.5118, 0.1334, 0.663], [0.2671, 0.7107, 0.1174, 0.0184]]]]], 3, Con61158), 
LAve74121 = average_layer([Res49088,Con61158], Ave74121), 
LRes15741 = reshape_layer(Ave74121, [2, 175], Res15741), 
LLoc3299 = locally_connected1D_layer(Res15741, 1,[[[0.6321, 0.1102, 0.728], [0.2505, 0.7056, 0.9897], [0.8201, 0.7254, 0.7843], [0.2311, 0.6771, 0.5699], [0.6228, 0.281, 0.7161], [0.5061, 0.8402, 0.8444], [0.0501, 0.4014, 0.3453], [0.8816, 0.4823, 0.6727], [0.0497, 0.8619, 0.1625], [0.5538, 0.6892, 0.9328], [0.9994, 0.3097, 0.446], [0.1427, 0.5694, 0.3473], [0.7252, 0.362, 0.1807], [0.5713, 0.8757, 0.09], [0.9591, 0.2683, 0.8642], [0.9043, 0.3049, 0.258], [0.9156, 0.9123, 0.8391], [0.0489, 0.9103, 0.1992], [0.0023, 0.2584, 0.8977], [0.9304, 0.8011, 0.6113], [0.4257, 0.4641, 0.8063], [0.4207, 0.5146, 0.5563], [0.3984, 0.5704, 0.0085], [0.4994, 0.429, 0.6705], [0.7299, 0.8259, 0.9222], [0.2344, 0.3277, 0.0299], [0.1719, 0.4424, 0.9641], [0.6117, 0.6122, 0.2955], [0.0159, 0.6345, 0.1317], [0.7405, 0.7798, 0.8965], [0.0849, 0.6523, 0.7657], [0.7703, 0.111, 0.3951], [0.539, 0.7355, 0.0165], [0.0548, 0.228, 0.6432], [0.3945, 0.3312, 0.7542], [0.7869, 0.365, 0.513], [0.5594, 0.9299, 0.8001], [0.9161, 0.1072, 0.5384], [0.6663, 0.6628, 0.7176], [0.6048, 0.6666, 0.7021], [0.357, 0.6109, 0.1896], [0.5269, 0.8507, 0.3763], [0.6865, 0.1305, 0.6105], [0.7654, 0.988, 0.3655], [0.3792, 0.4851, 0.7445], [0.0132, 0.6781, 0.4944], [0.1284, 0.5567, 0.6187], [0.8703, 0.1727, 0.8595], [0.4866, 0.3253, 0.6359], [0.6974, 0.0393, 0.9554], [0.0815, 0.3626, 0.7734], [0.2153, 0.9395, 0.3679], [0.5113, 0.5589, 0.6777], [0.6137, 0.5326, 0.6667], [0.8518, 0.2494, 0.1336], [0.6841, 0.7276, 0.8598], [0.9372, 0.4412, 0.3695], [0.5384, 0.4928, 0.1902], [0.5789, 0.8711, 0.71], [0.0024, 0.8297, 0.8465], [0.4506, 0.6007, 0.3973], [0.2346, 0.1648, 0.0653], [0.2063, 0.0295, 0.8077], [0.5515, 0.5319, 0.141], [0.3914, 0.8813, 0.5831], [0.6357, 0.441, 0.6329], [0.1666, 0.4801, 0.3073], [0.1391, 0.0868, 0.9157], [0.7619, 0.6303, 0.6696], [0.3123, 0.5478, 0.6076], [0.8174, 0.5841, 0.5944], [0.4159, 0.2994, 0.0317], [0.4177, 0.9033, 0.5585], [0.7758, 0.8191, 0.9973], [0.1799, 0.7876, 0.3778], [0.0079, 0.3054, 0.8871], [0.3819, 0.4748, 0.7018], [0.9811, 0.7878, 0.4167], [0.8941, 0.2437, 0.5144], [0.9127, 0.7629, 0.9021], [0.8787, 0.0464, 0.2671], [0.7868, 0.2647, 0.3789], [0.5062, 0.8251, 0.1778], [0.2814, 0.1612, 0.219], [0.6841, 0.6544, 0.4662], [0.1277, 0.8581, 0.7868], [0.2529, 0.3006, 0.2703], [0.3698, 0.2839, 0.2502], [0.7357, 0.9676, 0.045], [0.2387, 0.5118, 0.5697], [0.4, 0.5621, 0.8871], [0.2028, 0.0316, 0.3598], [0.6337, 0.9613, 0.3869], [0.4513, 0.1093, 0.234], [0.9252, 0.5079, 0.8908], [0.3491, 0.83, 0.2036], [0.6956, 0.3356, 0.9816], [0.8586, 0.0061, 0.0118], [0.9177, 0.4871, 0.2492], [0.1478, 0.7073, 0.0918], [0.6034, 0.0229, 0.1505], [0.5106, 0.5082, 0.2995], [0.4859, 0.1131, 0.7296], [0.7705, 0.8297, 0.1691], [0.4032, 0.2008, 0.9066], [0.7667, 0.8164, 0.1804], [0.2355, 0.7461, 0.8219], [0.6346, 0.8317, 0.2302], [0.6779, 0.3948, 0.6547], [0.9865, 0.8019, 0.0241], [0.4875, 0.0324, 0.3922], [0.9121, 0.6686, 0.608], [0.1251, 0.508, 0.1135], [0.8872, 0.1642, 0.4413], [0.3604, 0.5667, 0.5363], [0.1998, 0.9559, 0.7833], [0.5179, 0.9741, 0.3529], [0.6439, 0.0581, 0.2618], [0.6397, 0.0214, 0.415], [0.8295, 0.8366, 0.1698], [0.126, 0.6713, 0.2053], [0.1413, 0.1491, 0.675], [0.9983, 0.9512, 0.5148], [0.8093, 0.3439, 0.9293], [0.1103, 0.7773, 0.51], [0.7193, 0.2799, 0.2499], [0.6178, 0.9474, 0.7715], [0.9866, 0.9889, 0.6631], [0.1861, 0.3787, 0.6997], [0.2767, 0.4905, 0.2101], [0.5883, 0.8674, 0.3467], [0.7205, 0.9177, 0.4146], [0.9782, 0.3757, 0.1291], [0.7184, 0.0445, 0.1042], [0.6392, 0.5189, 0.5293], [0.1423, 0.4331, 0.5959], [0.9587, 0.0439, 0.2804], [0.4398, 0.3632, 0.8596], [0.7676, 0.4176, 0.27], [0.9654, 0.9759, 0.2302], [0.6734, 0.5309, 0.5613], [0.8515, 0.3655, 0.157], [0.1938, 0.077, 0.2321], [0.784, 0.8019, 0.2637], [0.1178, 0.5734, 0.831], [0.8444, 0.6485, 0.1025], [0.7761, 0.7171, 0.9597], [0.8713, 0.5748, 0.67], [0.6283, 0.8234, 0.0606], [0.5882, 0.2272, 0.3059], [0.5642, 0.3057, 0.8315], [0.6526, 0.9264, 0.6176], [0.4942, 0.3678, 0.6388], [0.1453, 0.1766, 0.7045], [0.5647, 0.462, 0.8714], [0.2881, 0.7075, 0.1286], [0.6892, 0.3176, 0.7953], [0.0616, 0.4906, 0.7911], [0.0241, 0.9653, 0.2419], [0.1517, 0.1683, 0.3923], [0.6497, 0.7235, 0.4042], [0.3688, 0.7836, 0.3193], [0.6175, 0.4171, 0.3388], [0.4397, 0.6689, 0.2417], [0.9059, 0.5559, 0.0778], [0.3036, 0.1206, 0.0703], [0.8502, 0.0045, 0.8436], [0.6826, 0.7252, 0.2239], [0.5888, 0.0549, 0.9434], [0.5089, 0.2586, 0.8654], [0.7502, 0.3043, 0.8757], [0.5665, 0.241, 0.227], [0.4025, 0.4249, 0.8241], [0.5395, 0.9329, 0.7071], [0.5351, 0.6577, 0.5076]]],[[0, 0, 0]], 11, Loc3299), 
exec_layers([LCon82487,LRes35796,LZer49809,LMin75116,LZer93444,LMax53664,LRes49088,LAve77889,LPRe75961,LZer14818,LCon61158,LAve74121,LRes15741,LLoc3299],["Con82487","Res35796","Zer49809","Min75116","Zer93444","Max53664","Res49088","Ave77889","PRe75961","Zer14818","Con61158","Ave74121","Res15741","Loc3299"],Loc3299,"Loc3299")

Actual (Unparsed): [[[18.7658369, 18.1194375, 17.7933014]]]

Expected (Unparsed): [[[18.765836889999996,18.119437494999996,17.793301460000002]]]

Actual:   [[[18.7659, 18.1195, 17.7934]]]

Expected: [[[18.7659, 18.1195, 17.7934]]]