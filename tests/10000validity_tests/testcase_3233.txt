import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Dot93122 = tf.keras.layers.Input(shape=([3, 2]))
in1Dot93122 = tf.keras.layers.Input(shape=([3, 2]))

Dot93122 = keras.layers.Dot(axes=(2, 2), name = 'Dot93122', )([in0Dot93122,in1Dot93122])
PRe8947 = keras.layers.PReLU(name = 'PRe8947', )(Dot93122)
Zer68494 = keras.layers.ZeroPadding1D(padding=((1, 1)), name = 'Zer68494', )(PRe8947)
model = tf.keras.models.Model(inputs=[in0Dot93122,in1Dot93122], outputs=Zer68494)
w = model.get_layer('PRe8947').get_weights() 
w[0] = np.array([[0.5705, 0.7627, 0.2073], [0.2773, 0.4686, 0.0338], [0.2906, 0.2682, 0.2189]])
model.get_layer('PRe8947').set_weights(w) 
in0Dot93122 = tf.constant([[[0.6743, 0.438], [0.8069, 0.3061], [0.0308, 0.4358]]])
in1Dot93122 = tf.constant([[[0.051, 0.8605], [0.2974, 0.9071], [0.2454, 0.3971]]])
print (np.array2string(model.predict([in0Dot93122,in1Dot93122],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Zer68494.png')

LDot93122 = dot_layer([[[0.6743, 0.438], [0.8069, 0.3061], [0.0308, 0.4358]]], [[[0.051, 0.8605], [0.2974, 0.9071], [0.2454, 0.3971]]], 2, 2, Dot93122), 
LPRe8947 = prelu_layer(Dot93122, [[0.5705, 0.7627, 0.2073], [0.2773, 0.4686, 0.0338], [0.2906, 0.2682, 0.2189]], PRe8947), 
LZer68494 = zero_padding1D_layer(PRe8947, 1, 1, Zer68494), 
exec_layers([LDot93122,LPRe8947,LZer68494],["Dot93122","PRe8947","Zer68494"],Zer68494,"Zer68494")

Actual (Unparsed): [[[0.0000000, 0.0000000, 0.0000000], [0.4112883, 0.5978466, 0.3394030], [0.3045510, 0.5176354, 0.3195656], [0.3765767, 0.4044741, 0.1806145], [0.0000000, 0.0000000, 0.0000000]]]

Expected (Unparsed): [[[0,0,0],[0.41128830000000005,0.59784662,0.33940302],[0.30455095000000004,0.51763537,0.31956556999999997],[0.37657670000000004,0.4044741,0.1806145],[0,0,0]]]

Actual:   [[[0, 0, 0], [0.4113, 0.5979, 0.3395], [0.3046, 0.5177, 0.3196], [0.3766, 0.4045, 0.1807], [0, 0, 0]]]

Expected: [[[0, 0, 0], [0.4113, 0.5979, 0.3395], [0.3046, 0.5177, 0.3196], [0.3766, 0.4045, 0.1807], [0, 0, 0]]]