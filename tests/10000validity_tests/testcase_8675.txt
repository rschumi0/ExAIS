import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Ave70089 = tf.keras.layers.Input(shape=([2, 1, 1]))
in1Ave70089 = tf.keras.layers.Input(shape=([2, 1, 1]))
in0Glo61237 = tf.keras.layers.Input(shape=([1, 1]))
in0Con36705 = tf.keras.layers.Input(shape=([1]))

Ave70089 = keras.layers.Average(name = 'Ave70089', )([in0Ave70089,in1Ave70089])
Bat16692 = keras.layers.BatchNormalization(axis=3, epsilon=0.9598313216924022,  name = 'Bat16692', )(Ave70089)
Res58281 = keras.layers.Reshape((2, 1), name = 'Res58281', )(Bat16692)
Fla34612 = keras.layers.Flatten(name = 'Fla34612', )(Res58281)
Glo61237 = keras.layers.GlobalMaxPool1D(name = 'Glo61237', )(in0Glo61237)
Con36705 = keras.layers.Concatenate(axis=1, name = 'Con36705', )([Glo61237,in0Con36705])
Min73191 = keras.layers.Minimum(name = 'Min73191', )([Fla34612,Con36705])
Res61837 = keras.layers.Reshape((2, 1), name = 'Res61837', )(Min73191)
Res69040 = keras.layers.Reshape((2, 1, 1), name = 'Res69040', )(Res61837)
Glo71043 = keras.layers.GlobalAveragePooling2D(name = 'Glo71043', )(Res69040)
Res1239 = keras.layers.Reshape((1, 1), name = 'Res1239', )(Glo71043)
Res96211 = keras.layers.Reshape((1, 1, 1), name = 'Res96211', )(Res1239)
Ave22701 = keras.layers.AveragePooling2D(pool_size=(1, 1), strides=(1, 1), padding='same', name = 'Ave22701', )(Res96211)
model = tf.keras.models.Model(inputs=[in0Ave70089,in1Ave70089,in0Glo61237,in0Con36705], outputs=Ave22701)
w = model.get_layer('Bat16692').get_weights() 
w[0] = np.array([0.5796])
w[1] = np.array([0.3621])
w[2] = np.array([0.5334])
w[3] = np.array([0.4447])
model.get_layer('Bat16692').set_weights(w) 
in0Ave70089 = tf.constant([[[[0.2475]], [[0.8535]]]])
in1Ave70089 = tf.constant([[[[0.1239]], [[0.8389]]]])
in0Glo61237 = tf.constant([[[1.6126]]])
in0Con36705 = tf.constant([[0.3448]])
print (np.array2string(model.predict([in0Ave70089,in1Ave70089,in0Glo61237,in0Con36705],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Ave22701.png')

LAve70089 = average_layer([[[[[0.2475]], [[0.8535]]]], [[[[0.1239]], [[0.8389]]]]], Ave70089), 
LBat16692 = batch_normalization_layer(Ave70089, 3, 0.9598313216924022, [0.5796], [0.3621], [0.5334], [0.4447], Bat16692), 
LRes58281 = reshape_layer(Bat16692, [2, 1], Res58281), 
LFla34612 = flatten_layer(Res58281, Fla34612), 
LGlo61237 = global_max_pool1D_layer([[[1.6126]]], Glo61237), 
LCon36705 = concatenate_layer([Glo61237,[[0.3448]]], 1, Con36705), 
LMin73191 = minimum_layer([Fla34612,Con36705], Min73191), 
LRes61837 = reshape_layer(Min73191, [2, 1], Res61837), 
LRes69040 = reshape_layer(Res61837, [2, 1, 1], Res69040), 
LGlo71043 = global_average_pooling2D_layer(Res69040, Glo71043), 
LRes1239 = reshape_layer(Glo71043, [1, 1], Res1239), 
LRes96211 = reshape_layer(Res1239, [1, 1, 1], Res96211), 
LAve22701 = average_pooling2D_layer(Res96211, 1, 1, 1, 1, true, Ave22701), 
exec_layers([LAve70089,LBat16692,LRes58281,LFla34612,LGlo61237,LCon36705,LMin73191,LRes61837,LRes69040,LGlo71043,LRes1239,LRes96211,LAve22701],["Ave70089","Bat16692","Res58281","Fla34612","Glo61237","Con36705","Min73191","Res61837","Res69040","Glo71043","Res1239","Res96211","Ave22701"],Ave22701,"Ave22701")

Actual (Unparsed): [[[[0.2684268]]]]

Expected (Unparsed): [[[[0.2684268173992736]]]]

Actual:   [[[[0.2685]]]]

Expected: [[[[0.2685]]]]