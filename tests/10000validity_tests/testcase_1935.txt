import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Ave14721 = tf.keras.layers.Input(shape=([1, 1]))
in1Ave14721 = tf.keras.layers.Input(shape=([1, 1]))
in0Con31446 = tf.keras.layers.Input(shape=([1, 1, 3]))
in0Add13298 = tf.keras.layers.Input(shape=([1, 1]))
in1Add13298 = tf.keras.layers.Input(shape=([1, 1]))
in0Mul14135 = tf.keras.layers.Input(shape=([2, 2]))
in1Mul14135 = tf.keras.layers.Input(shape=([2, 2]))
in0Con63697 = tf.keras.layers.Input(shape=([2, 2]))

Ave14721 = keras.layers.Average(name = 'Ave14721', )([in0Ave14721,in1Ave14721])
Res58078 = keras.layers.Reshape((1, 1, 1), name = 'Res58078', )(Ave14721)
Con31446 = keras.layers.Concatenate(axis=3, name = 'Con31446', )([Res58078,in0Con31446])
Add13298 = keras.layers.Add(name = 'Add13298', )([in0Add13298,in1Add13298])
Res72427 = keras.layers.Reshape((1, 1, 1), name = 'Res72427', )(Add13298)
Con39843 = keras.layers.Conv2D(4, (1, 1),strides=(1, 1), padding='same', dilation_rate=(1, 1), name = 'Con39843', )(Res72427)
Sub52417 = keras.layers.Subtract(name = 'Sub52417', )([Con31446,Con39843])
Res75566 = keras.layers.Reshape((1, 4), name = 'Res75566', )(Sub52417)
Zer2824 = keras.layers.ZeroPadding1D(padding=((1, 0)), name = 'Zer2824', )(Res75566)
Mul14135 = keras.layers.Multiply(name = 'Mul14135', )([in0Mul14135,in1Mul14135])
Con63697 = keras.layers.Concatenate(axis=2, name = 'Con63697', )([Mul14135,in0Con63697])
Mul30499 = keras.layers.Multiply(name = 'Mul30499', )([Zer2824,Con63697])
model = tf.keras.models.Model(inputs=[in0Ave14721,in1Ave14721,in0Con31446,in0Add13298,in1Add13298,in0Mul14135,in1Mul14135,in0Con63697], outputs=Mul30499)
w = model.get_layer('Con39843').get_weights() 
w[0] = np.array([[[[0.2054, 0.1672, 0.284, 0.297]]]])
w[1] = np.array([0, 0, 0, 0])
model.get_layer('Con39843').set_weights(w) 
in0Ave14721 = tf.constant([[[0.057]]])
in1Ave14721 = tf.constant([[[0.9114]]])
in0Con31446 = tf.constant([[[[0.9102, 0.9919, 0.4483]]]])
in0Add13298 = tf.constant([[[0.0106]]])
in1Add13298 = tf.constant([[[0.6689]]])
in0Mul14135 = tf.constant([[[0.2388, 0.7329], [0.7115, 0.7961]]])
in1Mul14135 = tf.constant([[[0.9439, 0.8626], [0.1155, 0.3241]]])
in0Con63697 = tf.constant([[[0.2406, 0.196], [0.3179, 0.565]]])
print (np.array2string(model.predict([in0Ave14721,in1Ave14721,in0Con31446,in0Add13298,in1Add13298,in0Mul14135,in1Mul14135,in0Con63697],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Mul30499.png')

LAve14721 = average_layer([[[[0.057]]], [[[0.9114]]]], Ave14721), 
LRes58078 = reshape_layer(Ave14721, [1, 1, 1], Res58078), 
LCon31446 = concatenate_layer([Res58078,[[[[0.9102, 0.9919, 0.4483]]]]], 3, Con31446), 
LAdd13298 = add_layer([[[[0.0106]]], [[[0.6689]]]], Add13298), 
LRes72427 = reshape_layer(Add13298, [1, 1, 1], Res72427), 
LCon39843 = conv2D_layer(Res72427, 1, 1,[[[[0.2054, 0.1672, 0.284, 0.297]]]],[0, 0, 0, 0], 1, 1, true, 1, 1, Con39843), 
LSub52417 = subtract_layer(Con31446,Con39843, Sub52417), 
LRes75566 = reshape_layer(Sub52417, [1, 4], Res75566), 
LZer2824 = zero_padding1D_layer(Res75566, 1, 0, Zer2824), 
LMul14135 = multiply_layer([[[[0.2388, 0.7329], [0.7115, 0.7961]]], [[[0.9439, 0.8626], [0.1155, 0.3241]]]], Mul14135), 
LCon63697 = concatenate_layer([Mul14135,[[[0.2406, 0.196], [0.3179, 0.565]]]], 2, Con63697), 
LMul30499 = multiply_layer([Zer2824,Con63697], Mul30499), 
exec_layers([LAve14721,LRes58078,LCon31446,LAdd13298,LRes72427,LCon39843,LSub52417,LRes75566,LZer2824,LMul14135,LCon63697,LMul30499],["Ave14721","Res58078","Con31446","Add13298","Res72427","Con39843","Sub52417","Res75566","Zer2824","Mul14135","Con63697","Mul30499"],Mul30499,"Mul30499")

Actual (Unparsed): [[[0.0000000, 0.0000000, 0.0000000, 0.0000000], [0.0283211, 0.2055324, 0.2539773, 0.1392660]]]

Expected (Unparsed): [[[0.0,0.0,0.0,0.0],[0.028321147822275003,0.20553235416747603,0.2539773038,0.13926600249999996]]]

Actual:   [[[0, 0, 0, 0], [0.0284, 0.2056, 0.254, 0.1393]]]

Expected: [[[0, 0, 0, 0], [0.0284, 0.2056, 0.254, 0.1393]]]