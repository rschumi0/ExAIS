import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Mul40671 = tf.keras.layers.Input(shape=([1, 1, 1]))
in1Mul40671 = tf.keras.layers.Input(shape=([1, 1, 1]))
in0Con94003 = tf.keras.layers.Input(shape=([1, 2, 3]))
in0Ave23284 = tf.keras.layers.Input(shape=([1, 1, 2, 1]))
in1Ave23284 = tf.keras.layers.Input(shape=([1, 1, 2, 1]))
in0Con50117 = tf.keras.layers.Input(shape=([1, 2, 2]))
in0Max44542 = tf.keras.layers.Input(shape=([1, 1, 1, 1]))
in1Max44542 = tf.keras.layers.Input(shape=([1, 1, 1, 1]))
in0Con39792 = tf.keras.layers.Input(shape=([1, 2, 3]))
in0Lay50153 = tf.keras.layers.Input(shape=([1, 2, 4]))

Mul40671 = keras.layers.Multiply(name = 'Mul40671', )([in0Mul40671,in1Mul40671])
Res98388 = keras.layers.Reshape((1, 1), name = 'Res98388', )(Mul40671)
Cro40181 = keras.layers.Cropping1D(cropping=((0, 0)), name = 'Cro40181', )(Res98388)
Res50300 = keras.layers.Reshape((1, 1, 1), name = 'Res50300', )(Cro40181)
Zer31613 = keras.layers.ZeroPadding2D(padding=((0, 0), (1, 0)), name = 'Zer31613', )(Res50300)
Con94003 = keras.layers.Concatenate(axis=3, name = 'Con94003', )([Zer31613,in0Con94003])
Ave23284 = keras.layers.Average(name = 'Ave23284', )([in0Ave23284,in1Ave23284])
Res56052 = keras.layers.Reshape((1, 1, 2), name = 'Res56052', )(Ave23284)
Zer75395 = keras.layers.ZeroPadding2D(padding=((0, 0), (1, 0)), name = 'Zer75395', )(Res56052)
Con50117 = keras.layers.Concatenate(axis=3, name = 'Con50117', )([Zer75395,in0Con50117])
Max44542 = keras.layers.Maximum(name = 'Max44542', )([in0Max44542,in1Max44542])
Res86080 = keras.layers.Reshape((1, 1, 1), name = 'Res86080', )(Max44542)
Zer56565 = keras.layers.ZeroPadding2D(padding=((0, 0), (1, 0)), name = 'Zer56565', )(Res86080)
Con39792 = keras.layers.Concatenate(axis=3, name = 'Con39792', )([Zer56565,in0Con39792])
Lay50153 = keras.layers.LayerNormalization(axis=2, epsilon=1.6103323101180238, name = 'Lay50153', )(in0Lay50153)
Add36871 = keras.layers.Add(name = 'Add36871', )([Con39792,Lay50153])
Min50652 = keras.layers.Minimum(name = 'Min50652', )([Con50117,Add36871])
Ave69472 = keras.layers.Average(name = 'Ave69472', )([Con94003,Min50652])
model = tf.keras.models.Model(inputs=[in0Mul40671,in1Mul40671,in0Con94003,in0Ave23284,in1Ave23284,in0Con50117,in0Max44542,in1Max44542,in0Con39792,in0Lay50153], outputs=Ave69472)
in0Mul40671 = tf.constant([[[[0.6468]]]])
in1Mul40671 = tf.constant([[[[0.5714]]]])
in0Con94003 = tf.constant([[[[0.6308, 0.241, 0.831], [0.0794, 0.5198, 0.0616]]]])
in0Ave23284 = tf.constant([[[[[0.6755], [0.198]]]]])
in1Ave23284 = tf.constant([[[[[0.7635], [0.0472]]]]])
in0Con50117 = tf.constant([[[[0.219, 0.6954], [0.0756, 0.6255]]]])
in0Max44542 = tf.constant([[[[[0.1797]]]]])
in1Max44542 = tf.constant([[[[[0.6525]]]]])
in0Con39792 = tf.constant([[[[0.3421, 0.7526, 0.7274], [0.6672, 0.9579, 0.2004]]]])
in0Lay50153 = tf.constant([[[[1.1788, 1.8166, 1.5251, 1.4096], [1.0261, 1.9542, 1.0012, 1.4073]]]])
print (np.array2string(model.predict([in0Mul40671,in1Mul40671,in0Con94003,in0Ave23284,in1Ave23284,in0Con50117,in0Max44542,in1Max44542,in0Con39792,in0Lay50153],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Ave69472.png')

LMul40671 = multiply_layer([[[[[0.6468]]]], [[[[0.5714]]]]], Mul40671), 
LRes98388 = reshape_layer(Mul40671, [1, 1], Res98388), 
LCro40181 = cropping1D_layer(Res98388, 0, 0, Cro40181), 
LRes50300 = reshape_layer(Cro40181, [1, 1, 1], Res50300), 
LZer31613 = zero_padding2D_layer(Res50300, 0, 0, 1, 0, Zer31613), 
LCon94003 = concatenate_layer([Zer31613,[[[[0.6308, 0.241, 0.831], [0.0794, 0.5198, 0.0616]]]]], 3, Con94003), 
LAve23284 = average_layer([[[[[[0.6755], [0.198]]]]], [[[[[0.7635], [0.0472]]]]]], Ave23284), 
LRes56052 = reshape_layer(Ave23284, [1, 1, 2], Res56052), 
LZer75395 = zero_padding2D_layer(Res56052, 0, 0, 1, 0, Zer75395), 
LCon50117 = concatenate_layer([Zer75395,[[[[0.219, 0.6954], [0.0756, 0.6255]]]]], 3, Con50117), 
LMax44542 = maximum_layer([[[[[[0.1797]]]]], [[[[[0.6525]]]]]], Max44542), 
LRes86080 = reshape_layer(Max44542, [1, 1, 1], Res86080), 
LZer56565 = zero_padding2D_layer(Res86080, 0, 0, 1, 0, Zer56565), 
LCon39792 = concatenate_layer([Zer56565,[[[[0.3421, 0.7526, 0.7274], [0.6672, 0.9579, 0.2004]]]]], 3, Con39792), 
LLay50153 = layer_normalization_layer([[[[1.1788, 1.8166, 1.5251, 1.4096], [1.0261, 1.9542, 1.0012, 1.4073]]]], 2, 1.6103323101180238, Lay50153), 
LAdd36871 = add_layer([Con39792,Lay50153], Add36871), 
LMin50652 = minimum_layer([Con50117,Add36871], Min50652), 
LAve69472 = average_layer([Con94003,Min50652], Ave69472), 
exec_layers([LMul40671,LRes98388,LCro40181,LRes50300,LZer31613,LCon94003,LAve23284,LRes56052,LZer75395,LCon50117,LMax44542,LRes86080,LZer56565,LCon39792,LLay50153,LAdd36871,LMin50652,LAve69472],["Mul40671","Res98388","Cro40181","Res50300","Zer31613","Con94003","Ave23284","Res56052","Zer75395","Con50117","Max44542","Res86080","Zer56565","Con39792","Lay50153","Add36871","Min50652","Ave69472"],Ave69472,"Ave69472")

Actual (Unparsed): [[[[0.0000000, 0.3154000, 0.2300000, 0.7632000], [0.4810120, 0.1010000, 0.2977000, 0.1305469]]]]

Expected (Unparsed): [[[[0,0.3154,0.22999999999999998,0.7632],[0.48101205181871054,0.101,0.2977,0.13054688346256957]]]]

Actual:   [[[[0, 0.3154, 0.23, 0.7632], [0.4811, 0.101, 0.2977, 0.1306]]]]

Expected: [[[[0, 0.3154, 0.23, 0.7632], [0.4811, 0.101, 0.2977, 0.1306]]]]