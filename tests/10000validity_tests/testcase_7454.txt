import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Mul91020 = tf.keras.layers.Input(shape=([2, 2, 1]))
in1Mul91020 = tf.keras.layers.Input(shape=([2, 2, 1]))

Mul91020 = keras.layers.Multiply(name = 'Mul91020', )([in0Mul91020,in1Mul91020])
Res18369 = keras.layers.Reshape((2, 2), name = 'Res18369', )(Mul91020)
Zer66787 = keras.layers.ZeroPadding1D(padding=((1, 1)), name = 'Zer66787', )(Res18369)
Zer93544 = keras.layers.ZeroPadding1D(padding=((1, 1)), name = 'Zer93544', )(Zer66787)
model = tf.keras.models.Model(inputs=[in0Mul91020,in1Mul91020], outputs=Zer93544)
in0Mul91020 = tf.constant([[[[0.5524], [0.7257]], [[0.9413], [0.4294]]]])
in1Mul91020 = tf.constant([[[[0.3509], [0.1559]], [[0.3672], [0.7752]]]])
print (np.array2string(model.predict([in0Mul91020,in1Mul91020],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Zer93544.png')

LMul91020 = multiply_layer([[[[[0.5524], [0.7257]], [[0.9413], [0.4294]]]], [[[[0.3509], [0.1559]], [[0.3672], [0.7752]]]]], Mul91020), 
LRes18369 = reshape_layer(Mul91020, [2, 2], Res18369), 
LZer66787 = zero_padding1D_layer(Res18369, 1, 1, Zer66787), 
LZer93544 = zero_padding1D_layer(Zer66787, 1, 1, Zer93544), 
exec_layers([LMul91020,LRes18369,LZer66787,LZer93544],["Mul91020","Res18369","Zer66787","Zer93544"],Zer93544,"Zer93544")

Actual (Unparsed): [[[0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.1938372, 0.1131366], [0.3456453, 0.3328709], [0.0000000, 0.0000000], [0.0000000, 0.0000000]]]

Expected (Unparsed): [[[0,0],[0,0],[0.19383716,0.11313663000000002],[0.34564536,0.33287088],[0,0],[0,0]]]

Actual:   [[[0, 0], [0, 0], [0.1939, 0.1132], [0.3457, 0.3329], [0, 0], [0, 0]]]

Expected: [[[0, 0], [0, 0], [0.1939, 0.1132], [0.3457, 0.3329], [0, 0], [0, 0]]]