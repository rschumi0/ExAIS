import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Ave55577 = tf.keras.layers.Input(shape=([1, 1]))
in1Ave55577 = tf.keras.layers.Input(shape=([1, 1]))
in0Con51720 = tf.keras.layers.Input(shape=([8, 4, 1]))
in0Con25780 = tf.keras.layers.Input(shape=([2, 2, 1]))
in0Den91455 = tf.keras.layers.Input(shape=([5, 4, 5]))
in0Con80875 = tf.keras.layers.Input(shape=([8, 4, 3]))

Ave55577 = keras.layers.Average(name = 'Ave55577', )([in0Ave55577,in1Ave55577])
Res55820 = keras.layers.Reshape((1, 1, 1), name = 'Res55820', )(Ave55577)
Con80994 = keras.layers.Conv2D(3, (1, 1),strides=(1, 1), padding='same', dilation_rate=(1, 1), name = 'Con80994', )(Res55820)
Zer49035 = keras.layers.ZeroPadding2D(padding=((7, 0), (3, 0)), name = 'Zer49035', )(Con80994)
Con51720 = keras.layers.Concatenate(axis=3, name = 'Con51720', )([Zer49035,in0Con51720])
Con25780 = keras.layers.Conv2DTranspose(4, (2, 2),strides=(4, 2), padding='same', name = 'Con25780', )(in0Con25780)
Sub17965 = keras.layers.Subtract(name = 'Sub17965', )([Con51720,Con25780])
Den91455 = keras.layers.Dense(1,name = 'Den91455', )(in0Den91455)
Zer72510 = keras.layers.ZeroPadding2D(padding=((3, 0), (0, 0)), name = 'Zer72510', )(Den91455)
Con80875 = keras.layers.Concatenate(axis=3, name = 'Con80875', )([Zer72510,in0Con80875])
Ave86336 = keras.layers.Average(name = 'Ave86336', )([Sub17965,Con80875])
Res16002 = keras.layers.Reshape((8, 16), name = 'Res16002', )(Ave86336)
Sim5067 = keras.layers.SimpleRNN(3,name = 'Sim5067', )(Res16002)
Res20014 = keras.layers.Reshape((3, 1), name = 'Res20014', )(Sim5067)
Res46634 = keras.layers.Reshape((3, 1, 1), name = 'Res46634', )(Res20014)
Glo34463 = keras.layers.GlobalAveragePooling2D(name = 'Glo34463', )(Res46634)
model = tf.keras.models.Model(inputs=[in0Ave55577,in1Ave55577,in0Con51720,in0Con25780,in0Den91455,in0Con80875], outputs=Glo34463)
w = model.get_layer('Con80994').get_weights() 
w[0] = np.array([[[[0.4512, 0.7075, 0.406]]]])
w[1] = np.array([0, 0, 0])
model.get_layer('Con80994').set_weights(w) 
w = model.get_layer('Con25780').get_weights() 
w[0] = np.array([[[[0.3155], [0.2238], [0.0789], [0.5744]], [[0.2843], [0.7403], [0.9916], [0.5739]]], [[[0.9752], [0.1845], [0.6255], [0.9255]], [[0.7818], [0.0807], [0.6902], [0.0895]]]])
w[1] = np.array([0, 0, 0, 0])
model.get_layer('Con25780').set_weights(w) 
w = model.get_layer('Den91455').get_weights() 
w[0] = np.array([[0.2622], [0.7899], [0.6375], [0.1518], [0.2276]])
w[1] = np.array([0.9072])
model.get_layer('Den91455').set_weights(w) 
w = model.get_layer('Sim5067').get_weights() 
w[0] = np.array([[9, 7, 6], [3, 3, 6], [10, 3, 9], [1, 2, 10], [3, 8, 1], [8, 2, 7], [9, 6, 10], [2, 10, 4], [7, 6, 4], [9, 7, 1], [4, 4, 10], [6, 10, 7], [3, 3, 6], [1, 2, 9], [9, 6, 7], [5, 9, 6]])
w[1] = np.array([[4, 8, 3], [8, 2, 6], [5, 2, 10]])
w[2] = np.array([8, 6, 6])
model.get_layer('Sim5067').set_weights(w) 
in0Ave55577 = tf.constant([[[0.2736]]])
in1Ave55577 = tf.constant([[[0.4162]]])
in0Con51720 = tf.constant([[[[0.4203], [0.5082], [0.9696], [0.7239]], [[0.3996], [0.117], [0.53], [0.3112]], [[0.8702], [0.8526], [0.4006], [0.4842]], [[0.9307], [0.2405], [0.0297], [0.8082]], [[0.3743], [0.8999], [0.1353], [0.165]], [[0.2136], [0.0639], [0.5949], [0.8061]], [[0.3362], [0.8304], [0.1274], [0.8209]], [[0.5187], [0.112], [0.7119], [0.7544]]]])
in0Con25780 = tf.constant([[[[0.3158], [0.4205]], [[0.6899], [0.9929]]]])
in0Den91455 = tf.constant([[[[0.7537, 0.3995, 0.582, 0.1104, 0.09], [0.2205, 0.986, 0.4242, 0.1497, 0.7598], [0.1109, 0.23, 0.1067, 0.4349, 0.1208], [0.9597, 0.8901, 0.643, 0.0426, 0.2413]], [[0.8667, 0.8718, 0.1755, 0.9782, 0.9205], [0.1703, 0.6197, 0.9378, 0.9271, 0.9651], [0.3174, 0.1505, 0.5426, 0.7851, 0.3046], [0.0155, 0.1687, 0.3206, 0.7072, 0.3877]], [[0.933, 0.3829, 0.3879, 0.0739, 0.5365], [0.7516, 0.0429, 0.108, 0.855, 0.6058], [0.9852, 0.8928, 0.2556, 0.2149, 0.8076], [0.7971, 0.6925, 0.8357, 0.6149, 0.0808]], [[0.7769, 0.3083, 0.5379, 0.0815, 0.1845], [0.6724, 0.798, 0.4429, 0.9579, 0.2378], [0.6778, 0.7905, 0.4896, 0.9309, 0.3712], [0.6667, 0.2304, 0.4164, 0.8364, 0.7279]], [[0.4579, 0.4436, 0.4552, 0.1728, 0.7599], [0.1038, 0.5144, 0.1259, 0.2421, 0.2028], [0.2686, 0.2283, 0.8514, 0.7473, 0.6164], [0.0051, 0.6233, 0.6275, 0.2303, 0.6708]]]])
in0Con80875 = tf.constant([[[[0.8907, 0.3944, 0.8252], [0.6659, 0.3451, 0.4133], [0.8475, 0.5444, 0.156], [0.6176, 0.4433, 0.9746]], [[0.1834, 0.1809, 0.7664], [0.8397, 0.4685, 0.2921], [0.0334, 0.1661, 0.7246], [0.8198, 0.3538, 0.6196]], [[0.1783, 0.735, 0.3406], [0.804, 0.5553, 0.8652], [0.3424, 0.362, 0.2677], [0.634, 0.3593, 0.04]], [[0.2796, 0.9313, 0.5718], [0.9455, 0.7026, 0.1539], [0.9454, 0.1996, 0.903], [0.7582, 0.5533, 0.0681]], [[0.7927, 0.3746, 0.1045], [0.4377, 0.0166, 0.6479], [0.6586, 0.2007, 0.9532], [0.4878, 0.664, 0.7052]], [[0.7977, 0.3406, 0.2644], [0.938, 0.5129, 0.4274], [0.2856, 0.5133, 0.0996], [0.6307, 0.435, 0.8613]], [[0.4646, 0.8596, 0.0261], [0.2342, 0.1474, 0.2744], [0.9745, 0.2742, 0.2999], [0.7082, 0.9019, 0.9271]], [[0.612, 0.9901, 0.9317], [0.4273, 0.3251, 0.6418], [0.166, 0.926, 0.0786], [0.6004, 0.8879, 0.0931]]]])
print (np.array2string(model.predict([in0Ave55577,in1Ave55577,in0Con51720,in0Con25780,in0Den91455,in0Con80875],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Glo34463.png')

LAve55577 = average_layer([[[[0.2736]]], [[[0.4162]]]], Ave55577), 
LRes55820 = reshape_layer(Ave55577, [1, 1, 1], Res55820), 
LCon80994 = conv2D_layer(Res55820, 1, 1,[[[[0.4512, 0.7075, 0.406]]]],[0, 0, 0], 1, 1, true, 1, 1, Con80994), 
LZer49035 = zero_padding2D_layer(Con80994, 7, 0, 3, 0, Zer49035), 
LCon51720 = concatenate_layer([Zer49035,[[[[0.4203], [0.5082], [0.9696], [0.7239]], [[0.3996], [0.117], [0.53], [0.3112]], [[0.8702], [0.8526], [0.4006], [0.4842]], [[0.9307], [0.2405], [0.0297], [0.8082]], [[0.3743], [0.8999], [0.1353], [0.165]], [[0.2136], [0.0639], [0.5949], [0.8061]], [[0.3362], [0.8304], [0.1274], [0.8209]], [[0.5187], [0.112], [0.7119], [0.7544]]]]], 3, Con51720), 
LCon25780 = conv2D_transpose_layer([[[[0.3158], [0.4205]], [[0.6899], [0.9929]]]], 2, 2,[[[[0.3155], [0.2238], [0.0789], [0.5744]], [[0.2843], [0.7403], [0.9916], [0.5739]]], [[[0.9752], [0.1845], [0.6255], [0.9255]], [[0.7818], [0.0807], [0.6902], [0.0895]]]],[0, 0, 0, 0], 4, 2, true, Con25780), 
LSub17965 = subtract_layer(Con51720,Con25780, Sub17965), 
LDen91455 = dense_layer([[[[0.7537, 0.3995, 0.582, 0.1104, 0.09], [0.2205, 0.986, 0.4242, 0.1497, 0.7598], [0.1109, 0.23, 0.1067, 0.4349, 0.1208], [0.9597, 0.8901, 0.643, 0.0426, 0.2413]], [[0.8667, 0.8718, 0.1755, 0.9782, 0.9205], [0.1703, 0.6197, 0.9378, 0.9271, 0.9651], [0.3174, 0.1505, 0.5426, 0.7851, 0.3046], [0.0155, 0.1687, 0.3206, 0.7072, 0.3877]], [[0.933, 0.3829, 0.3879, 0.0739, 0.5365], [0.7516, 0.0429, 0.108, 0.855, 0.6058], [0.9852, 0.8928, 0.2556, 0.2149, 0.8076], [0.7971, 0.6925, 0.8357, 0.6149, 0.0808]], [[0.7769, 0.3083, 0.5379, 0.0815, 0.1845], [0.6724, 0.798, 0.4429, 0.9579, 0.2378], [0.6778, 0.7905, 0.4896, 0.9309, 0.3712], [0.6667, 0.2304, 0.4164, 0.8364, 0.7279]], [[0.4579, 0.4436, 0.4552, 0.1728, 0.7599], [0.1038, 0.5144, 0.1259, 0.2421, 0.2028], [0.2686, 0.2283, 0.8514, 0.7473, 0.6164], [0.0051, 0.6233, 0.6275, 0.2303, 0.6708]]]], [[0.2622], [0.7899], [0.6375], [0.1518], [0.2276]],[0.9072], Den91455), 
LZer72510 = zero_padding2D_layer(Den91455, 3, 0, 0, 0, Zer72510), 
LCon80875 = concatenate_layer([Zer72510,[[[[0.8907, 0.3944, 0.8252], [0.6659, 0.3451, 0.4133], [0.8475, 0.5444, 0.156], [0.6176, 0.4433, 0.9746]], [[0.1834, 0.1809, 0.7664], [0.8397, 0.4685, 0.2921], [0.0334, 0.1661, 0.7246], [0.8198, 0.3538, 0.6196]], [[0.1783, 0.735, 0.3406], [0.804, 0.5553, 0.8652], [0.3424, 0.362, 0.2677], [0.634, 0.3593, 0.04]], [[0.2796, 0.9313, 0.5718], [0.9455, 0.7026, 0.1539], [0.9454, 0.1996, 0.903], [0.7582, 0.5533, 0.0681]], [[0.7927, 0.3746, 0.1045], [0.4377, 0.0166, 0.6479], [0.6586, 0.2007, 0.9532], [0.4878, 0.664, 0.7052]], [[0.7977, 0.3406, 0.2644], [0.938, 0.5129, 0.4274], [0.2856, 0.5133, 0.0996], [0.6307, 0.435, 0.8613]], [[0.4646, 0.8596, 0.0261], [0.2342, 0.1474, 0.2744], [0.9745, 0.2742, 0.2999], [0.7082, 0.9019, 0.9271]], [[0.612, 0.9901, 0.9317], [0.4273, 0.3251, 0.6418], [0.166, 0.926, 0.0786], [0.6004, 0.8879, 0.0931]]]]], 3, Con80875), 
LAve86336 = average_layer([Sub17965,Con80875], Ave86336), 
LRes16002 = reshape_layer(Ave86336, [8, 16], Res16002), 
LSim5067 = simple_rnn_layer(Res16002,[[9, 7, 6], [3, 3, 6], [10, 3, 9], [1, 2, 10], [3, 8, 1], [8, 2, 7], [9, 6, 10], [2, 10, 4], [7, 6, 4], [9, 7, 1], [4, 4, 10], [6, 10, 7], [3, 3, 6], [1, 2, 9], [9, 6, 7], [5, 9, 6]],[[4, 8, 3], [8, 2, 6], [5, 2, 10]],[8, 6, 6], Sim5067), 
LRes20014 = reshape_layer(Sim5067, [3, 1], Res20014), 
LRes46634 = reshape_layer(Res20014, [3, 1, 1], Res46634), 
LGlo34463 = global_average_pooling2D_layer(Res46634, Glo34463), 
exec_layers([LAve55577,LRes55820,LCon80994,LZer49035,LCon51720,LCon25780,LSub17965,LDen91455,LZer72510,LCon80875,LAve86336,LRes16002,LSim5067,LRes20014,LRes46634,LGlo34463],["Ave55577","Res55820","Con80994","Zer49035","Con51720","Con25780","Sub17965","Den91455","Zer72510","Con80875","Ave86336","Res16002","Sim5067","Res20014","Res46634","Glo34463"],Glo34463,"Glo34463")

Actual (Unparsed): [[1.0000000]]

Expected (Unparsed): [[1.0]]

Actual:   [[1]]

Expected: [[1]]