import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Glo22860 = tf.keras.layers.Input(shape=([1, 2]))

Glo22860 = keras.layers.GlobalAveragePooling1D(name = 'Glo22860', )(in0Glo22860)
Sof13419 = keras.layers.Softmax(axis=1, name = 'Sof13419', )(Glo22860)
Res64139 = keras.layers.Reshape((2, 1), name = 'Res64139', )(Sof13419)
Res63727 = keras.layers.Reshape((2, 1, 1), name = 'Res63727', )(Res64139)
Up_87172 = keras.layers.UpSampling2D(size=(1, 2), name = 'Up_87172', )(Res63727)
model = tf.keras.models.Model(inputs=[in0Glo22860], outputs=Up_87172)
in0Glo22860 = tf.constant([[[1.1876, 1.4426]]])
print (np.array2string(model.predict([in0Glo22860],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Up_87172.png')

LGlo22860 = global_average_pooling1D_layer([[[1.1876, 1.4426]]], Glo22860), 
LSof13419 = softmax_layer(Glo22860, 1, Sof13419), 
LRes64139 = reshape_layer(Sof13419, [2, 1], Res64139), 
LRes63727 = reshape_layer(Res64139, [2, 1, 1], Res63727), 
LUp_87172 = up_sampling2D_layer(Res63727, 1, 2, Up_87172), 
exec_layers([LGlo22860,LSof13419,LRes64139,LRes63727,LUp_87172],["Glo22860","Sof13419","Res64139","Res63727","Up_87172"],Up_87172,"Up_87172")

Actual (Unparsed): [[[[0.4365932], [0.4365932]], [[0.5634068], [0.5634068]]]]

Expected (Unparsed): [[[[0.4365932137378063],[0.4365932137378063]],[[0.5634067862621936],[0.5634067862621936]]]]

Actual:   [[[[0.4366], [0.4366]], [[0.5635], [0.5635]]]]

Expected: [[[[0.4366], [0.4366]], [[0.5635], [0.5635]]]]