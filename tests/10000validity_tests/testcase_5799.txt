import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Add12086 = tf.keras.layers.Input(shape=([1, 2]))
in1Add12086 = tf.keras.layers.Input(shape=([1, 2]))
in0Sep72062 = tf.keras.layers.Input(shape=([1, 1, 2]))
in0Mul51687 = tf.keras.layers.Input(shape=([1, 1, 1]))
in1Mul51687 = tf.keras.layers.Input(shape=([1, 1, 1]))
in0Con96668 = tf.keras.layers.Input(shape=([3, 5]))

Add12086 = keras.layers.Add(name = 'Add12086', )([in0Add12086,in1Add12086])
Res30324 = keras.layers.Reshape((1, 2, 1), name = 'Res30324', )(Add12086)
Con15786 = keras.layers.Conv2DTranspose(3, (1, 2),strides=(1, 1), padding='same', name = 'Con15786', )(Res30324)
Res5044 = keras.layers.Reshape((1, 6), name = 'Res5044', )(Con15786)
Cro61231 = keras.layers.Cropping1D(cropping=((0, 0)), name = 'Cro61231', )(Res5044)
Zer37827 = keras.layers.ZeroPadding1D(padding=((2, 0)), name = 'Zer37827', )(Cro61231)
Sep72062 = keras.layers.SeparableConv2D(3, (1, 1),strides=(1, 1), padding='same', name = 'Sep72062', )(in0Sep72062)
Res96615 = keras.layers.Reshape((1, 3), name = 'Res96615', )(Sep72062)
Mul51687 = keras.layers.Multiply(name = 'Mul51687', )([in0Mul51687,in1Mul51687])
Res17260 = keras.layers.Reshape((1, 1), name = 'Res17260', )(Mul51687)
Dot35637 = keras.layers.Dot(axes=(1, 1), name = 'Dot35637', )([Res96615,Res17260])
Con96668 = keras.layers.Concatenate(axis=2, name = 'Con96668', )([Dot35637,in0Con96668])
Add44227 = keras.layers.Add(name = 'Add44227', )([Zer37827,Con96668])
model = tf.keras.models.Model(inputs=[in0Add12086,in1Add12086,in0Sep72062,in0Mul51687,in1Mul51687,in0Con96668], outputs=Add44227)
w = model.get_layer('Con15786').get_weights() 
w[0] = np.array([[[[0.9245], [0.041], [0.2173]], [[0.5359], [0.702], [0.0729]]]])
w[1] = np.array([0, 0, 0])
model.get_layer('Con15786').set_weights(w) 
w = model.get_layer('Sep72062').get_weights() 
w[0] = np.array([[[[0.2899], [0.6772]]]])
w[1] = np.array([[[[0.7931, 0.1216, 0.8235], [0.4048, 0.6514, 0.7921]]]])
w[2] = np.array([0, 0, 0])
model.get_layer('Sep72062').set_weights(w) 
in0Add12086 = tf.constant([[[0.8618, 0.4697]]])
in1Add12086 = tf.constant([[[0.0828, 0.9577]]])
in0Sep72062 = tf.constant([[[[0.426, 0.6345]]]])
in0Mul51687 = tf.constant([[[[0.366]]]])
in1Mul51687 = tf.constant([[[[0.5079]]]])
in0Con96668 = tf.constant([[[0.605, 0.3825, 0.814, 0.6276, 0.7839], [0.7171, 0.0482, 0.9348, 0.5046, 0.3071], [0.2223, 0.693, 0.56, 0.7837, 0.3649]]])
print (np.array2string(model.predict([in0Add12086,in1Add12086,in0Sep72062,in0Mul51687,in1Mul51687,in0Con96668],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Add44227.png')

LAdd12086 = add_layer([[[[0.8618, 0.4697]]], [[[0.0828, 0.9577]]]], Add12086), 
LRes30324 = reshape_layer(Add12086, [1, 2, 1], Res30324), 
LCon15786 = conv2D_transpose_layer(Res30324, 1, 2,[[[[0.9245], [0.041], [0.2173]], [[0.5359], [0.702], [0.0729]]]],[0, 0, 0], 1, 1, true, Con15786), 
LRes5044 = reshape_layer(Con15786, [1, 6], Res5044), 
LCro61231 = cropping1D_layer(Res5044, 0, 0, Cro61231), 
LZer37827 = zero_padding1D_layer(Cro61231, 2, 0, Zer37827), 
LSep72062 = separable_conv2D_layer([[[[0.426, 0.6345]]]], 1, 1,[[[[[0.2899], [0.6772]]]],[[[[0.7931, 0.1216, 0.8235], [0.4048, 0.6514, 0.7921]]]]],[0, 0, 0], 1, 1, true, Sep72062), 
LRes96615 = reshape_layer(Sep72062, [1, 3], Res96615), 
LMul51687 = multiply_layer([[[[[0.366]]]], [[[[0.5079]]]]], Mul51687), 
LRes17260 = reshape_layer(Mul51687, [1, 1], Res17260), 
LDot35637 = dot_layer(Res96615,Res17260, 1, 1, Dot35637), 
LCon96668 = concatenate_layer([Dot35637,[[[0.605, 0.3825, 0.814, 0.6276, 0.7839], [0.7171, 0.0482, 0.9348, 0.5046, 0.3071], [0.2223, 0.693, 0.56, 0.7837, 0.3649]]]], 2, Con96668), 
LAdd44227 = add_layer([Zer37827,Con96668], Add44227), 
exec_layers([LAdd12086,LRes30324,LCon15786,LRes5044,LCro61231,LZer37827,LSep72062,LRes96615,LMul51687,LRes17260,LDot35637,LCon96668,LAdd44227],["Add12086","Res30324","Con15786","Res5044","Cro61231","Zer37827","Sep72062","Res96615","Mul51687","Res17260","Dot35637","Con96668","Add44227"],Add44227,"Add44227")

Actual (Unparsed): [[[0.0505405, 0.6050000, 0.3825000, 0.8140000, 0.6276000, 0.7839000], [0.0548218, 0.7171000, 0.0482000, 0.9348000, 0.5046000, 0.3071000], [0.9554564, 0.2610286, 0.8982616, 2.3858425, 1.5053326, 0.7439354]]]

Expected (Unparsed): [[[0.05054045651153097,0.605,0.3825,0.814,0.6276,0.7839],[0.05482179985430485,0.7171,0.0482,0.9348,0.5046,0.3071],[0.9554564265043977,0.2610286,0.89826158,2.3858424400000002,1.5053326,0.74393536]]]

Actual:   [[[0.0506, 0.605, 0.3825, 0.814, 0.6276, 0.7839], [0.0549, 0.7171, 0.0482, 0.9348, 0.5046, 0.3071], [0.9555, 0.2611, 0.8983, 2.3859, 1.5054, 0.744]]]

Expected: [[[0.0506, 0.605, 0.3825, 0.814, 0.6276, 0.7839], [0.0549, 0.7171, 0.0482, 0.9348, 0.5046, 0.3071], [0.9555, 0.2611, 0.8983, 2.3859, 1.5054, 0.744]]]