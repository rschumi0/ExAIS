import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Mul57828 = tf.keras.layers.Input(shape=([1, 2, 1, 1]))
in1Mul57828 = tf.keras.layers.Input(shape=([1, 2, 1, 1]))

Mul57828 = keras.layers.Multiply(name = 'Mul57828', )([in0Mul57828,in1Mul57828])
Con50659 = keras.layers.Conv3DTranspose(4, (1, 2, 1),strides=(1, 1, 1), padding='same', name = 'Con50659', )(Mul57828)
model = tf.keras.models.Model(inputs=[in0Mul57828,in1Mul57828], outputs=Con50659)
w = model.get_layer('Con50659').get_weights() 
w[0] = np.array([[[[[0.3667], [0.7743], [0.7717], [0.1943]]], [[[0.1171], [0.2732], [0.6674], [0.2713]]]]])
w[1] = np.array([0, 0, 0, 0])
model.get_layer('Con50659').set_weights(w) 
in0Mul57828 = tf.constant([[[[[0.8304]], [[0.3271]]]]])
in1Mul57828 = tf.constant([[[[[0.9451]], [[0.7144]]]]])
print (np.array2string(model.predict([in0Mul57828,in1Mul57828],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Con50659.png')

LMul57828 = multiply_layer([[[[[[0.8304]], [[0.3271]]]]], [[[[[0.9451]], [[0.7144]]]]]], Mul57828), 
LCon50659 = conv3D_transpose_layer(Mul57828, 1, 2, 1,[[[[[0.3667], [0.7743], [0.7717], [0.1943]]], [[[0.1171], [0.2732], [0.6674], [0.2713]]]]],[0, 0, 0, 0], 1, 1, 1, true, Con50659), 
exec_layers([LMul57828,LCon50659],["Mul57828","Con50659"],Con50659,"Con50659")

Actual (Unparsed): [[[[[0.2877902, 0.6076792, 0.6056387, 0.1524888]], [[0.1775919, 0.3953490, 0.7041139, 0.2583233]]]]]

Expected (Unparsed): [[[[[0.287790208368,0.607679188272,0.6056386795680001,0.152488785072]],[[0.177591916792,0.39534898596,0.7041139293040001,0.258323305784]]]]]

Actual:   [[[[[0.2878, 0.6077, 0.6057, 0.1525]], [[0.1776, 0.3954, 0.7042, 0.2584]]]]]

Expected: [[[[[0.2878, 0.6077, 0.6057, 0.1525]], [[0.1776, 0.3954, 0.7042, 0.2584]]]]]