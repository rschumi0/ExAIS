import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0ELU46262 = tf.keras.layers.Input(shape=([2, 2]))
in0Max75232 = tf.keras.layers.Input(shape=([2, 2, 1]))
in1Max75232 = tf.keras.layers.Input(shape=([2, 2, 1]))
in0Con27083 = tf.keras.layers.Input(shape=([2, 2, 1]))
in0Con57228 = tf.keras.layers.Input(shape=([1, 1, 2]))
in0Con89159 = tf.keras.layers.Input(shape=([4, 4, 2]))
in0Ave12166 = tf.keras.layers.Input(shape=([1, 1]))
in1Ave12166 = tf.keras.layers.Input(shape=([1, 1]))
in0Con8878 = tf.keras.layers.Input(shape=([4, 15]))

ELU46262 = keras.layers.ELU(alpha=4.440509270646674, name = 'ELU46262', input_shape=(2, 2))(in0ELU46262)
Res31535 = keras.layers.Reshape((2, 2, 1), name = 'Res31535', )(ELU46262)
Sep32016 = keras.layers.SeparableConv2D(4, (2, 1),strides=(1, 1), padding='valid', name = 'Sep32016', )(Res31535)
Zer7334 = keras.layers.ZeroPadding2D(padding=((3, 0), (2, 0)), name = 'Zer7334', )(Sep32016)
Max75232 = keras.layers.Maximum(name = 'Max75232', )([in0Max75232,in1Max75232])
Con27083 = keras.layers.Concatenate(axis=3, name = 'Con27083', )([Max75232,in0Con27083])
Con57228 = keras.layers.Conv2D(2, (1, 1),strides=(1, 1), padding='valid', dilation_rate=(1, 1), name = 'Con57228', )(in0Con57228)
Zer68415 = keras.layers.ZeroPadding2D(padding=((1, 0), (1, 0)), name = 'Zer68415', )(Con57228)
Ave76250 = keras.layers.Average(name = 'Ave76250', )([Con27083,Zer68415])
Zer78548 = keras.layers.ZeroPadding2D(padding=((1, 1), (1, 1)), name = 'Zer78548', )(Ave76250)
Con89159 = keras.layers.Concatenate(axis=3, name = 'Con89159', )([Zer78548,in0Con89159])
Mul76215 = keras.layers.Multiply(name = 'Mul76215', )([Zer7334,Con89159])
Res66585 = keras.layers.Reshape((4, 16), name = 'Res66585', )(Mul76215)
Ave12166 = keras.layers.Average(name = 'Ave12166', )([in0Ave12166,in1Ave12166])
Zer5326 = keras.layers.ZeroPadding1D(padding=((1, 1)), name = 'Zer5326', )(Ave12166)
Zer80943 = keras.layers.ZeroPadding1D(padding=((1, 0)), name = 'Zer80943', )(Zer5326)
Con8878 = keras.layers.Concatenate(axis=2, name = 'Con8878', )([Zer80943,in0Con8878])
Min30399 = keras.layers.Minimum(name = 'Min30399', )([Res66585,Con8878])
model = tf.keras.models.Model(inputs=[in0ELU46262,in0Max75232,in1Max75232,in0Con27083,in0Con57228,in0Con89159,in0Ave12166,in1Ave12166,in0Con8878], outputs=Min30399)
w = model.get_layer('Sep32016').get_weights() 
w[0] = np.array([[[[0.1593]]], [[[0.1586]]]])
w[1] = np.array([[[[0.2743, 0.4017, 0.8581, 0.3938]]]])
w[2] = np.array([0, 0, 0, 0])
model.get_layer('Sep32016').set_weights(w) 
w = model.get_layer('Con57228').get_weights() 
w[0] = np.array([[[[0.0867, 0.8401], [0.4776, 0.9922]]]])
w[1] = np.array([0, 0])
model.get_layer('Con57228').set_weights(w) 
in0ELU46262 = tf.constant([[[0.7679, 0.4054], [0.7174, 0.0188]]])
in0Max75232 = tf.constant([[[[0.0275], [0.4867]], [[0.2012], [0.3435]]]])
in1Max75232 = tf.constant([[[[0.6661], [0.2551]], [[0.2921], [0.3725]]]])
in0Con27083 = tf.constant([[[[0.9311], [0.2639]], [[0.5675], [0.4056]]]])
in0Con57228 = tf.constant([[[[0.9628, 0.1013]]]])
in0Con89159 = tf.constant([[[[0.2245, 0.2111], [0.1845, 0.4805], [0.9301, 0.5095], [0.4402, 0.4161]], [[0.3376, 0.6719], [0.2733, 0.7826], [0.2444, 0.417], [0.8282, 0.6973]], [[0.2377, 0.2012], [0.436, 0.9937], [0.4539, 0.5354], [0.0932, 0.435]], [[0.562, 0.8581], [0.3664, 0.5759], [0.2019, 0.5473], [0.2667, 0.9683]]]])
in0Ave12166 = tf.constant([[[0.4213]]])
in1Ave12166 = tf.constant([[[0.3917]]])
in0Con8878 = tf.constant([[[0.616, 0.8598, 0.0729, 0.8994, 0.6628, 0.0001, 0.3031, 0.1425, 0.792, 0.3653, 0.0995, 0.5637, 0.1382, 0.3457, 0.0169], [0.2025, 0.2438, 0.0787, 0.9146, 0.1685, 0.383, 0.8232, 0.1042, 0.4325, 0.4468, 0.1082, 0.0419, 0.7023, 0.2568, 0.8636], [0.3147, 0.3806, 0.4121, 0.3625, 0.4829, 0.9314, 0.4211, 0.0859, 0.0698, 0.4608, 0.9199, 0.5497, 0.615, 0.9554, 0.2383], [0.7309, 0.2469, 0.4181, 0.4389, 0.9723, 0.6711, 0.087, 0.2239, 0.1502, 0.8199, 0.0342, 0.7821, 0.4499, 0.6637, 0.7003]]])
print (np.array2string(model.predict([in0ELU46262,in0Max75232,in1Max75232,in0Con27083,in0Con57228,in0Con89159,in0Ave12166,in1Ave12166,in0Con8878],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Min30399.png')

LELU46262 = elu_layer([[[0.7679, 0.4054], [0.7174, 0.0188]]], 4.440509270646674, ELU46262), 
LRes31535 = reshape_layer(ELU46262, [2, 2, 1], Res31535), 
LSep32016 = separable_conv2D_layer(Res31535, 2, 1,[[[[[0.1593]]], [[[0.1586]]]],[[[[0.2743, 0.4017, 0.8581, 0.3938]]]]],[0, 0, 0, 0], 1, 1, false, Sep32016), 
LZer7334 = zero_padding2D_layer(Sep32016, 3, 0, 2, 0, Zer7334), 
LMax75232 = maximum_layer([[[[[0.0275], [0.4867]], [[0.2012], [0.3435]]]], [[[[0.6661], [0.2551]], [[0.2921], [0.3725]]]]], Max75232), 
LCon27083 = concatenate_layer([Max75232,[[[[0.9311], [0.2639]], [[0.5675], [0.4056]]]]], 3, Con27083), 
LCon57228 = conv2D_layer([[[[0.9628, 0.1013]]]], 1, 1,[[[[0.0867, 0.8401], [0.4776, 0.9922]]]],[0, 0], 1, 1, false, 1, 1, Con57228), 
LZer68415 = zero_padding2D_layer(Con57228, 1, 0, 1, 0, Zer68415), 
LAve76250 = average_layer([Con27083,Zer68415], Ave76250), 
LZer78548 = zero_padding2D_layer(Ave76250, 1, 1, 1, 1, Zer78548), 
LCon89159 = concatenate_layer([Zer78548,[[[[0.2245, 0.2111], [0.1845, 0.4805], [0.9301, 0.5095], [0.4402, 0.4161]], [[0.3376, 0.6719], [0.2733, 0.7826], [0.2444, 0.417], [0.8282, 0.6973]], [[0.2377, 0.2012], [0.436, 0.9937], [0.4539, 0.5354], [0.0932, 0.435]], [[0.562, 0.8581], [0.3664, 0.5759], [0.2019, 0.5473], [0.2667, 0.9683]]]]], 3, Con89159), 
LMul76215 = multiply_layer([Zer7334,Con89159], Mul76215), 
LRes66585 = reshape_layer(Mul76215, [4, 16], Res66585), 
LAve12166 = average_layer([[[[0.4213]]], [[[0.3917]]]], Ave12166), 
LZer5326 = zero_padding1D_layer(Ave12166, 1, 1, Zer5326), 
LZer80943 = zero_padding1D_layer(Zer5326, 1, 0, Zer80943), 
LCon8878 = concatenate_layer([Zer80943,[[[0.616, 0.8598, 0.0729, 0.8994, 0.6628, 0.0001, 0.3031, 0.1425, 0.792, 0.3653, 0.0995, 0.5637, 0.1382, 0.3457, 0.0169], [0.2025, 0.2438, 0.0787, 0.9146, 0.1685, 0.383, 0.8232, 0.1042, 0.4325, 0.4468, 0.1082, 0.0419, 0.7023, 0.2568, 0.8636], [0.3147, 0.3806, 0.4121, 0.3625, 0.4829, 0.9314, 0.4211, 0.0859, 0.0698, 0.4608, 0.9199, 0.5497, 0.615, 0.9554, 0.2383], [0.7309, 0.2469, 0.4181, 0.4389, 0.9723, 0.6711, 0.087, 0.2239, 0.1502, 0.8199, 0.0342, 0.7821, 0.4499, 0.6637, 0.7003]]]], 2, Con8878), 
LMin30399 = minimum_layer([Res66585,Con8878], Min30399), 
exec_layers([LELU46262,LRes31535,LSep32016,LZer7334,LMax75232,LCon27083,LCon57228,LZer68415,LAve76250,LZer78548,LCon89159,LMul76215,LRes66585,LAve12166,LZer5326,LZer80943,LCon8878,LMin30399],["ELU46262","Res31535","Sep32016","Zer7334","Max75232","Con27083","Con57228","Zer68415","Ave76250","Zer78548","Con89159","Mul76215","Res66585","Ave12166","Zer5326","Zer80943","Con8878","Min30399"],Min30399,"Min30399")

Actual (Unparsed

Expected (Unparsed): [[[0,0,0.0,0.0,0,0,0.0,0.0,0,0,0.0,0.0,0,0,0.0,0.0],[0,0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0,0,0.0,0.0],[0,0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0,0,0.0,0.0],[0,0,0.0,0.0,0,0,0.0,0.0,0.0,0.0,0.0409054756388829,0.0342,0.0,0.0,0.015461896866212998,0.025762469943825996]]]

Actual:   [[[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.041, 0.0342, 0, 0, 0.0155, 0.0258]]]

Expected: [[[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.041, 0.0342, 0, 0, 0.0155, 0.0258]]]