import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Sub57370 = tf.keras.layers.Input(shape=([3]))
in1Sub57370 = tf.keras.layers.Input(shape=([3]))
in0Con35374 = tf.keras.layers.Input(shape=([5, 3, 2]))
in0Max32952 = tf.keras.layers.Input(shape=([2, 1]))
in1Max32952 = tf.keras.layers.Input(shape=([2, 1]))
in0Con1723 = tf.keras.layers.Input(shape=([2, 2, 3]))
in0Lay47541 = tf.keras.layers.Input(shape=([2, 2, 4]))
in0Min20446 = tf.keras.layers.Input(shape=([1, 2]))
in1Min20446 = tf.keras.layers.Input(shape=([1, 2]))
in0Con19145 = tf.keras.layers.Input(shape=([2, 2]))
in0Sub2740 = tf.keras.layers.Input(shape=([2, 3]))
in1Sub2740 = tf.keras.layers.Input(shape=([2, 3]))
in0Con96627 = tf.keras.layers.Input(shape=([5, 9]))

Sub57370 = keras.layers.Subtract(name = 'Sub57370', )([in0Sub57370,in1Sub57370])
Res62731 = keras.layers.Reshape((3, 1), name = 'Res62731', )(Sub57370)
Res50737 = keras.layers.Reshape((3, 1, 1), name = 'Res50737', )(Res62731)
Res37772 = keras.layers.Reshape((3, 1, 1, 1), name = 'Res37772', )(Res50737)
Con50489 = keras.layers.Conv3DTranspose(2, (3, 1, 1),strides=(1, 1, 1), padding='valid', name = 'Con50489', )(Res37772)
Res30022 = keras.layers.Reshape((5, 1, 2), name = 'Res30022', )(Con50489)
Zer26565 = keras.layers.ZeroPadding2D(padding=((0, 0), (2, 0)), name = 'Zer26565', )(Res30022)
Con35374 = keras.layers.Concatenate(axis=3, name = 'Con35374', )([Zer26565,in0Con35374])
Max32952 = keras.layers.Maximum(name = 'Max32952', )([in0Max32952,in1Max32952])
Res12020 = keras.layers.Reshape((2, 1, 1), name = 'Res12020', )(Max32952)
Zer50970 = keras.layers.ZeroPadding2D(padding=((0, 0), (1, 0)), name = 'Zer50970', )(Res12020)
Con1723 = keras.layers.Concatenate(axis=3, name = 'Con1723', )([Zer50970,in0Con1723])
Lay47541 = keras.layers.LayerNormalization(axis=3, epsilon=2.914732763207079, name = 'Lay47541', )(in0Lay47541)
Sub31014 = keras.layers.Subtract(name = 'Sub31014', )([Con1723,Lay47541])
Zer18853 = keras.layers.ZeroPadding2D(padding=((3, 0), (1, 0)), name = 'Zer18853', )(Sub31014)
Mul44430 = keras.layers.Multiply(name = 'Mul44430', )([Con35374,Zer18853])
Res40307 = keras.layers.Reshape((5, 12), name = 'Res40307', )(Mul44430)
Min20446 = keras.layers.Minimum(name = 'Min20446', )([in0Min20446,in1Min20446])
Glo88263 = keras.layers.GlobalMaxPool1D(name = 'Glo88263', )(Min20446)
Res96286 = keras.layers.Reshape((2, 1), name = 'Res96286', )(Glo88263)
Con19145 = keras.layers.Concatenate(axis=2, name = 'Con19145', )([Res96286,in0Con19145])
Sub2740 = keras.layers.Subtract(name = 'Sub2740', )([in0Sub2740,in1Sub2740])
Max50077 = keras.layers.Maximum(name = 'Max50077', )([Con19145,Sub2740])
Sof95186 = keras.layers.Softmax(axis=1, name = 'Sof95186', )(Max50077)
Zer1298 = keras.layers.ZeroPadding1D(padding=((3, 0)), name = 'Zer1298', )(Sof95186)
Con96627 = keras.layers.Concatenate(axis=2, name = 'Con96627', )([Zer1298,in0Con96627])
Min12582 = keras.layers.Minimum(name = 'Min12582', )([Res40307,Con96627])
model = tf.keras.models.Model(inputs=[in0Sub57370,in1Sub57370,in0Con35374,in0Max32952,in1Max32952,in0Con1723,in0Lay47541,in0Min20446,in1Min20446,in0Con19145,in0Sub2740,in1Sub2740,in0Con96627], outputs=Min12582)
w = model.get_layer('Con50489').get_weights() 
w[0] = np.array([[[[[0.5569], [0.9495]]]], [[[[0.7552], [0.3031]]]], [[[[0.2753], [0.7078]]]]])
w[1] = np.array([0, 0])
model.get_layer('Con50489').set_weights(w) 
in0Sub57370 = tf.constant([[0.3057, 0.6563, 0.5895]])
in1Sub57370 = tf.constant([[0.4194, 0.9316, 0.9889]])
in0Con35374 = tf.constant([[[[0.2099, 0.8154], [0.5222, 0.074], [0.0479, 0.0112]], [[0.6473, 0.4954], [0.2579, 0.3505], [0.6963, 0.6883]], [[0.7646, 0.8705], [0.4302, 0.6038], [0.2601, 0.8999]], [[0.3924, 0.3698], [0.1269, 0.3721], [0.6762, 0.8359]], [[0.9153, 0.3488], [0.7168, 0.1727], [0.9899, 0.8565]]]])
in0Max32952 = tf.constant([[[0.2385], [0.4156]]])
in1Max32952 = tf.constant([[[0.6442], [0.1955]]])
in0Con1723 = tf.constant([[[[0.5639, 0.8783, 0.7056], [0.7395, 0.0422, 0.3111]], [[0.5714, 0.49, 0.1315], [0.4581, 0.6344, 0.899]]]])
in0Lay47541 = tf.constant([[[[1.3208, 1.1114, 1.0068, 1.6538], [1.5487, 1.1714, 1.8195, 1.9279]], [[1.2878, 1.1378, 1.2808, 1.6153], [1.2179, 1.9396, 1.3435, 1.5764]]]])
in0Min20446 = tf.constant([[[0.3939, 0.5393]]])
in1Min20446 = tf.constant([[[0.275, 0.2567]]])
in0Con19145 = tf.constant([[[0.9643, 0.854], [0.4543, 0.2894]]])
in0Sub2740 = tf.constant([[[0.8838, 0.9545, 0.2697], [0.1857, 0.1359, 0.0337]]])
in1Sub2740 = tf.constant([[[0.3295, 0.8967, 0.2371], [0.7859, 0.5279, 0.4461]]])
in0Con96627 = tf.constant([[[0.0531, 0.5848, 0.4286, 0.5186, 0.3897, 0.8347, 0.7566, 0.1343, 0.1324], [0.2535, 0.8651, 0.9738, 0.803, 0.4715, 0.1991, 0.8876, 0.3511, 0.8097], [0.7514, 0.8367, 0.1877, 0.6558, 0.764, 0.6551, 0.759, 0.2144, 0.5211], [0.6845, 0.7998, 0.1755, 0.4827, 0.6124, 0.2596, 0.8637, 0.2527, 0.8782], [0.7775, 0.7289, 0.6493, 0.8225, 0.4984, 0.6175, 0.4501, 0.353, 0.9669]]])
print (np.array2string(model.predict([in0Sub57370,in1Sub57370,in0Con35374,in0Max32952,in1Max32952,in0Con1723,in0Lay47541,in0Min20446,in1Min20446,in0Con19145,in0Sub2740,in1Sub2740,in0Con96627],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Min12582.png')

LSub57370 = subtract_layer([[0.3057, 0.6563, 0.5895]], [[0.4194, 0.9316, 0.9889]], Sub57370), 
LRes62731 = reshape_layer(Sub57370, [3, 1], Res62731), 
LRes50737 = reshape_layer(Res62731, [3, 1, 1], Res50737), 
LRes37772 = reshape_layer(Res50737, [3, 1, 1, 1], Res37772), 
LCon50489 = conv3D_transpose_layer(Res37772, 3, 1, 1,[[[[[0.5569], [0.9495]]]], [[[[0.7552], [0.3031]]]], [[[[0.2753], [0.7078]]]]],[0, 0], 1, 1, 1, false, Con50489), 
LRes30022 = reshape_layer(Con50489, [5, 1, 2], Res30022), 
LZer26565 = zero_padding2D_layer(Res30022, 0, 0, 2, 0, Zer26565), 
LCon35374 = concatenate_layer([Zer26565,[[[[0.2099, 0.8154], [0.5222, 0.074], [0.0479, 0.0112]], [[0.6473, 0.4954], [0.2579, 0.3505], [0.6963, 0.6883]], [[0.7646, 0.8705], [0.4302, 0.6038], [0.2601, 0.8999]], [[0.3924, 0.3698], [0.1269, 0.3721], [0.6762, 0.8359]], [[0.9153, 0.3488], [0.7168, 0.1727], [0.9899, 0.8565]]]]], 3, Con35374), 
LMax32952 = maximum_layer([[[[0.2385], [0.4156]]], [[[0.6442], [0.1955]]]], Max32952), 
LRes12020 = reshape_layer(Max32952, [2, 1, 1], Res12020), 
LZer50970 = zero_padding2D_layer(Res12020, 0, 0, 1, 0, Zer50970), 
LCon1723 = concatenate_layer([Zer50970,[[[[0.5639, 0.8783, 0.7056], [0.7395, 0.0422, 0.3111]], [[0.5714, 0.49, 0.1315], [0.4581, 0.6344, 0.899]]]]], 3, Con1723), 
LLay47541 = layer_normalization_layer([[[[1.3208, 1.1114, 1.0068, 1.6538], [1.5487, 1.1714, 1.8195, 1.9279]], [[1.2878, 1.1378, 1.2808, 1.6153], [1.2179, 1.9396, 1.3435, 1.5764]]]], 3, 2.914732763207079, Lay47541), 
LSub31014 = subtract_layer(Con1723,Lay47541, Sub31014), 
LZer18853 = zero_padding2D_layer(Sub31014, 3, 0, 1, 0, Zer18853), 
LMul44430 = multiply_layer([Con35374,Zer18853], Mul44430), 
LRes40307 = reshape_layer(Mul44430, [5, 12], Res40307), 
LMin20446 = minimum_layer([[[[0.3939, 0.5393]]], [[[0.275, 0.2567]]]], Min20446), 
LGlo88263 = global_max_pool1D_layer(Min20446, Glo88263), 
LRes96286 = reshape_layer(Glo88263, [2, 1], Res96286), 
LCon19145 = concatenate_layer([Res96286,[[[0.9643, 0.854], [0.4543, 0.2894]]]], 2, Con19145), 
LSub2740 = subtract_layer([[[0.8838, 0.9545, 0.2697], [0.1857, 0.1359, 0.0337]]], [[[0.3295, 0.8967, 0.2371], [0.7859, 0.5279, 0.4461]]], Sub2740), 
LMax50077 = maximum_layer([Con19145,Sub2740], Max50077), 
LSof95186 = softmax_layer(Max50077, 1, Sof95186), 
LZer1298 = zero_padding1D_layer(Sof95186, 3, 0, Zer1298), 
LCon96627 = concatenate_layer([Zer1298,[[[0.0531, 0.5848, 0.4286, 0.5186, 0.3897, 0.8347, 0.7566, 0.1343, 0.1324], [0.2535, 0.8651, 0.9738, 0.803, 0.4715, 0.1991, 0.8876, 0.3511, 0.8097], [0.7514, 0.8367, 0.1877, 0.6558, 0.764, 0.6551, 0.759, 0.2144, 0.5211], [0.6845, 0.7998, 0.1755, 0.4827, 0.6124, 0.2596, 0.8637, 0.2527, 0.8782], [0.7775, 0.7289, 0.6493, 0.8225, 0.4984, 0.6175, 0.4501, 0.353, 0.9669]]]], 2, Con96627), 
LMin12582 = minimum_layer([Res40307,Con96627], Min12582), 
exec_layers([LSub57370,LRes62731,LRes50737,LRes37772,LCon50489,LRes30022,LZer26565,LCon35374,LMax32952,LRes12020,LZer50970,LCon1723,LLay47541,LSub31014,LZer18853,LMul44430,LRes40307,LMin20446,LGlo88263,LRes96286,LCon19145,LSub2740,LMax50077,LSof95186,LZer1298,LCon96627,LMin12582],["Sub57370","Res62731","Res50737","Res37772","Con50489","Res30022","Zer26565","Con35374","Max32952","Res12020","Zer50970","Con1723","Lay47541","Sub31014","Zer18853","Mul44430","Res40307","Min20446","Glo88263","Res96286","Con19145","Sub2740","Max50077","Sof95186","Zer1298","Con96627","Min12582"],Min12582,"Min12582")

Actual (Unparsed): [[[0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, -0.0000000, -0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, -0.0000000, -0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, -0.0000000, -0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000, 0.0000000, -0.0000000, 0.0000000, 0.1310535, 0.1804569, -0.2579876, -0.3148720, -0.0505706, 0.1099445], [0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.3719586, -0.0059566, -0.0648655, -0.0607990, 0.3530000, 0.7417358]]]

Expected (Unparsed): [[[0,0,0.0,0.0,0,0,0.0,0.0,-0.0,-0.0,0.0,0.0],[0,0,0.0,0.0,0,0,0.0,0.0,-0.0,-0.0,0.0,0.0],[0,0,0.0,0.0,0,0,0.0,0.0,-0.0,-0.0,0.0,0.0],[0,0,0.0,0.0,-0.0,0.0,0.13105346652431532,0.180456897645886,-0.25798757778575987,-0.31487202283750454,-0.05057061387598443,0.10994449592208562],[0,0,0.0,0.0,0.0,0.0,0.3719586347608122,-0.0059566006438325665,-0.06486550710570486,-0.06079904384028169,0.353,0.7417358078599927]]]

Actual:   [[[0, 0, 0, 0, 0, 0, 0, 0, -0, -0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, -0, -0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, -0, -0, 0, 0], [0, 0, 0, 0, -0, 0, 0.1311, 0.1805, -0.2579, -0.3148, -0.0505, 0.11], [0, 0, 0, 0, 0, 0, 0.372, -0.0059, -0.0648, -0.0607, 0.353, 0.7418]]]

Expected: [[[0, 0, 0, 0, 0, 0, 0, 0, -0, -0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, -0, -0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, -0, -0, 0, 0], [0, 0, 0, 0, -0, 0, 0.1311, 0.1805, -0.2579, -0.3148, -0.0505, 0.11], [0, 0, 0, 0, 0, 0, 0.372, -0.0059, -0.0648, -0.0607, 0.353, 0.7418]]]