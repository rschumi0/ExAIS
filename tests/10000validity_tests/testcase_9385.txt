import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Mul73837 = tf.keras.layers.Input(shape=([2, 2, 2]))
in1Mul73837 = tf.keras.layers.Input(shape=([2, 2, 2]))

Mul73837 = keras.layers.Multiply(name = 'Mul73837', )([in0Mul73837,in1Mul73837])
Res30601 = keras.layers.Reshape((2, 4), name = 'Res30601', )(Mul73837)
Glo89178 = keras.layers.GlobalAveragePooling1D(name = 'Glo89178', )(Res30601)
model = tf.keras.models.Model(inputs=[in0Mul73837,in1Mul73837], outputs=Glo89178)
in0Mul73837 = tf.constant([[[[0.8127, 0.4965], [0.6987, 0.5684]], [[0.5718, 0.1662], [0.9133, 0.0689]]]])
in1Mul73837 = tf.constant([[[[0.9485, 0.9176], [0.8172, 0.4131]], [[0.4314, 0.6214], [0.8498, 0.9477]]]])
print (np.array2string(model.predict([in0Mul73837,in1Mul73837],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Glo89178.png')

LMul73837 = multiply_layer([[[[[0.8127, 0.4965], [0.6987, 0.5684]], [[0.5718, 0.1662], [0.9133, 0.0689]]]], [[[[0.9485, 0.9176], [0.8172, 0.4131]], [[0.4314, 0.6214], [0.8498, 0.9477]]]]], Mul73837), 
LRes30601 = reshape_layer(Mul73837, [2, 4], Res30601), 
LGlo89178 = global_average_pooling1D_layer(Res30601, Glo89178), 
exec_layers([LMul73837,LRes30601,LGlo89178],["Mul73837","Res30601","Glo89178"],Glo89178,"Glo89178")

Actual (Unparsed): [[0.5087602, 0.2794325, 0.6735500, 0.1500513]]

Expected (Unparsed): [[0.508760235,0.27943254,0.67354999,0.150051285]]

Actual:   [[0.5088, 0.2795, 0.6736, 0.1501]]

Expected: [[0.5088, 0.2795, 0.6736, 0.1501]]