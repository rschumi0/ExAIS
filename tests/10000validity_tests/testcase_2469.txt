import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Min81283 = tf.keras.layers.Input(shape=([1, 2, 2]))
in1Min81283 = tf.keras.layers.Input(shape=([1, 2, 2]))
in0Con16702 = tf.keras.layers.Input(shape=([4, 5, 1, 1]))
in0Mas46234 = tf.keras.layers.Input(shape=([1, 3, 1]))
in0Con50887 = tf.keras.layers.Input(shape=([1, 3, 1, 1]))
in0Min3138 = tf.keras.layers.Input(shape=([1, 2, 1, 2]))
in1Min3138 = tf.keras.layers.Input(shape=([1, 2, 1, 2]))

Min81283 = keras.layers.Minimum(name = 'Min81283', )([in0Min81283,in1Min81283])
Res14652 = keras.layers.Reshape((1, 4), name = 'Res14652', )(Min81283)
Glo15501 = keras.layers.GlobalMaxPool1D(name = 'Glo15501', )(Res14652)
Res12662 = keras.layers.Reshape((4, 1), name = 'Res12662', )(Glo15501)
Res95382 = keras.layers.Reshape((4, 1, 1), name = 'Res95382', )(Res12662)
Res27223 = keras.layers.Reshape((4, 1, 1, 1), name = 'Res27223', )(Res95382)
Zer2351 = keras.layers.ZeroPadding3D(padding=((0, 0), (4, 0), (0, 0)), name = 'Zer2351', )(Res27223)
Con16702 = keras.layers.Concatenate(axis=4, name = 'Con16702', )([Zer2351,in0Con16702])
Mas46234 = keras.layers.Masking(mask_value=2, name = 'Mas46234', )(in0Mas46234)
Res59194 = keras.layers.Reshape((1, 3, 1, 1), name = 'Res59194', )(Mas46234)
Con50887 = keras.layers.Concatenate(axis=4, name = 'Con50887', )([Res59194,in0Con50887])
Min3138 = keras.layers.Minimum(name = 'Min3138', )([in0Min3138,in1Min3138])
Zer10183 = keras.layers.ZeroPadding3D(padding=((0, 0), (1, 0), (0, 0)), name = 'Zer10183', )(Min3138)
Max1912 = keras.layers.Maximum(name = 'Max1912', )([Con50887,Zer10183])
Zer76491 = keras.layers.ZeroPadding3D(padding=((3, 0), (2, 0), (0, 0)), name = 'Zer76491', )(Max1912)
Ave51333 = keras.layers.Average(name = 'Ave51333', )([Con16702,Zer76491])
model = tf.keras.models.Model(inputs=[in0Min81283,in1Min81283,in0Con16702,in0Mas46234,in0Con50887,in0Min3138,in1Min3138], outputs=Ave51333)
in0Min81283 = tf.constant([[[[0.5276, 0.0647], [0.4916, 0.7982]]]])
in1Min81283 = tf.constant([[[[0.9084, 0.6009], [0.7162, 0.4225]]]])
in0Con16702 = tf.constant([[[[[0.5107]], [[0.1232]], [[0.1653]], [[0.1821]], [[0.6724]]], [[[0.6227]], [[0.1519]], [[0.4756]], [[0.039]], [[0.3487]]], [[[0.5423]], [[0.9036]], [[0.1167]], [[0.2899]], [[0.7597]]], [[[0.4889]], [[0.4544]], [[0.5928]], [[0.0046]], [[0.3899]]]]])
in0Mas46234 = tf.constant([[[[1.862], [1.1247], [1.4805]]]])
in0Con50887 = tf.constant([[[[[0.7806]], [[0.2037]], [[0.8075]]]]])
in0Min3138 = tf.constant([[[[[0.7587, 0.5693]], [[0.4971, 0.4222]]]]])
in1Min3138 = tf.constant([[[[[0.1538, 0.3038]], [[0.0669, 0.9407]]]]])
print (np.array2string(model.predict([in0Min81283,in1Min81283,in0Con16702,in0Mas46234,in0Con50887,in0Min3138,in1Min3138],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Ave51333.png')

LMin81283 = minimum_layer([[[[[0.5276, 0.0647], [0.4916, 0.7982]]]], [[[[0.9084, 0.6009], [0.7162, 0.4225]]]]], Min81283), 
LRes14652 = reshape_layer(Min81283, [1, 4], Res14652), 
LGlo15501 = global_max_pool1D_layer(Res14652, Glo15501), 
LRes12662 = reshape_layer(Glo15501, [4, 1], Res12662), 
LRes95382 = reshape_layer(Res12662, [4, 1, 1], Res95382), 
LRes27223 = reshape_layer(Res95382, [4, 1, 1, 1], Res27223), 
LZer2351 = zero_padding3D_layer(Res27223, 0, 0, 4, 0, 0, 0, Zer2351), 
LCon16702 = concatenate_layer([Zer2351,[[[[[0.5107]], [[0.1232]], [[0.1653]], [[0.1821]], [[0.6724]]], [[[0.6227]], [[0.1519]], [[0.4756]], [[0.039]], [[0.3487]]], [[[0.5423]], [[0.9036]], [[0.1167]], [[0.2899]], [[0.7597]]], [[[0.4889]], [[0.4544]], [[0.5928]], [[0.0046]], [[0.3899]]]]]], 4, Con16702), 
LMas46234 = masking_layer([[[[1.862], [1.1247], [1.4805]]]], 2, Mas46234), 
LRes59194 = reshape_layer(Mas46234, [1, 3, 1, 1], Res59194), 
LCon50887 = concatenate_layer([Res59194,[[[[[0.7806]], [[0.2037]], [[0.8075]]]]]], 4, Con50887), 
LMin3138 = minimum_layer([[[[[[0.7587, 0.5693]], [[0.4971, 0.4222]]]]], [[[[[0.1538, 0.3038]], [[0.0669, 0.9407]]]]]], Min3138), 
LZer10183 = zero_padding3D_layer(Min3138, 0, 0, 1, 0, 0, 0, Zer10183), 
LMax1912 = maximum_layer([Con50887,Zer10183], Max1912), 
LZer76491 = zero_padding3D_layer(Max1912, 3, 0, 2, 0, 0, 0, Zer76491), 
LAve51333 = average_layer([Con16702,Zer76491], Ave51333), 
exec_layers([LMin81283,LRes14652,LGlo15501,LRes12662,LRes95382,LRes27223,LZer2351,LCon16702,LMas46234,LRes59194,LCon50887,LMin3138,LZer10183,LMax1912,LZer76491,LAve51333],["Min81283","Res14652","Glo15501","Res12662","Res95382","Res27223","Zer2351","Con16702","Mas46234","Res59194","Con50887","Min3138","Zer10183","Max1912","Zer76491","Ave51333"],Ave51333,"Ave51333")

Actual (Unparsed): [[[[[0.0000000, 0.2553500]], [[0.0000000, 0.0616000]], [[0.0000000, 0.0826500]], [[0.0000000, 0.0910500]], [[0.2638000, 0.3362000]]], [[[0.0000000, 0.3113500]], [[0.0000000, 0.0759500]], [[0.0000000, 0.2378000]], [[0.0000000, 0.0195000]], [[0.0323500, 0.1743500]]], [[[0.0000000, 0.2711500]], [[0.0000000, 0.4518000]], [[0.0000000, 0.0583500]], [[0.0000000, 0.1449500]], [[0.2458000, 0.3798500]]], [[[0.0000000, 0.2444500]], [[0.0000000, 0.2272000]], [[0.9310000, 0.6867000]], [[0.5623500, 0.1542000]], [[0.9515000, 0.5987000]]]]]

Expected (Unparsed): [[[[[0,0.25535]],[[0,0.0616]],[[0,0.08265]],[[0,0.09105]],[[0.2638,0.3362]]],[[[0,0.31135]],[[0,0.07595]],[[0,0.2378]],[[0,0.0195]],[[0.03235,0.17435]]],[[[0,0.27115]],[[0,0.4518]],[[0,0.05835]],[[0,0.14495]],[[0.2458,0.37985]]],[[[0,0.24445]],[[0,0.2272]],[[0.931,0.6867]],[[0.56235,0.1542]],[[0.9515,0.5987]]]]]

Actual:   [[[[[0, 0.2554]], [[0, 0.0616]], [[0, 0.0827]], [[0, 0.0911]], [[0.2638, 0.3362]]], [[[0, 0.3114]], [[0, 0.076]], [[0, 0.2378]], [[0, 0.0195]], [[0.0324, 0.1744]]], [[[0, 0.2712]], [[0, 0.4518]], [[0, 0.0584]], [[0, 0.145]], [[0.2458, 0.3799]]], [[[0, 0.2445]], [[0, 0.2272]], [[0.931, 0.6867]], [[0.5624, 0.1542]], [[0.9515, 0.5987]]]]]

Expected: [[[[[0, 0.2554]], [[0, 0.0616]], [[0, 0.0827]], [[0, 0.0911]], [[0.2638, 0.3362]]], [[[0, 0.3114]], [[0, 0.076]], [[0, 0.2378]], [[0, 0.0195]], [[0.0324, 0.1744]]], [[[0, 0.2712]], [[0, 0.4518]], [[0, 0.0584]], [[0, 0.145]], [[0.2458, 0.3799]]], [[[0, 0.2445]], [[0, 0.2272]], [[0.931, 0.6867]], [[0.5624, 0.1542]], [[0.9515, 0.5987]]]]]