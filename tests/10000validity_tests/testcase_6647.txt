import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Ave72952 = tf.keras.layers.Input(shape=([2, 2, 1]))
in1Ave72952 = tf.keras.layers.Input(shape=([2, 2, 1]))

Ave72952 = keras.layers.Average(name = 'Ave72952', )([in0Ave72952,in1Ave72952])
Res42648 = keras.layers.Reshape((2, 2), name = 'Res42648', )(Ave72952)
Loc22676 = keras.layers.LocallyConnected1D(4, (2),strides=(1), name = 'Loc22676', )(Res42648)
model = tf.keras.models.Model(inputs=[in0Ave72952,in1Ave72952], outputs=Loc22676)
w = model.get_layer('Loc22676').get_weights() 
w[0] = np.array([[[0.3745, 0.5695, 0.432, 0.0287], [0.3032, 0.2317, 0.8003, 0.0717], [0.3352, 0.9024, 0.6575, 0.0067], [0.6386, 0.076, 0.3132, 0.0423]]])
w[1] = np.array([[0, 0, 0, 0]])
model.get_layer('Loc22676').set_weights(w) 
in0Ave72952 = tf.constant([[[[0.4517], [0.9964]], [[0.6853], [0.6077]]]])
in1Ave72952 = tf.constant([[[[0.7072], [0.7313]], [[0.1345], [0.229]]]])
print (np.array2string(model.predict([in0Ave72952,in1Ave72952],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Loc22676.png')

LAve72952 = average_layer([[[[[0.4517], [0.9964]], [[0.6853], [0.6077]]]], [[[[0.7072], [0.7313]], [[0.1345], [0.229]]]]], Ave72952), 
LRes42648 = reshape_layer(Ave72952, [2, 2], Res42648), 
LLoc22676 = locally_connected1D_layer(Res42648, 2,[[[0.3745, 0.5695, 0.432, 0.0287], [0.3032, 0.2317, 0.8003, 0.0717], [0.3352, 0.9024, 0.6575, 0.0067], [0.6386, 0.076, 0.3132, 0.0423]]],[[0, 0, 0, 0]], 1, Loc22676), 
exec_layers([LAve72952,LRes42648,LLoc22676],["Ave72952","Res42648","Loc22676"],Loc22676,"Loc22676")

Actual (Unparsed): [[[0.8834801, 0.9318392, 1.3421980, 0.0990108]]]

Expected (Unparsed): [[[0.8834801349999999,0.93183918,1.342198025,0.09901079499999998]]]

Actual:   [[[0.8835, 0.9319, 1.3422, 0.0991]]]

Expected: [[[0.8835, 0.9319, 1.3422, 0.0991]]]