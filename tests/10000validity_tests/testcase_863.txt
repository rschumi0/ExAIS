import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Mul3607 = tf.keras.layers.Input(shape=([1, 2, 2]))
in1Mul3607 = tf.keras.layers.Input(shape=([1, 2, 2]))
in0Max50220 = tf.keras.layers.Input(shape=([2, 1, 2]))
in1Max50220 = tf.keras.layers.Input(shape=([2, 1, 2]))
in0Thr24776 = tf.keras.layers.Input(shape=([2, 1, 2]))
in0Con66488 = tf.keras.layers.Input(shape=([2, 1, 4]))

Mul3607 = keras.layers.Multiply(name = 'Mul3607', )([in0Mul3607,in1Mul3607])
Zer50806 = keras.layers.ZeroPadding2D(padding=((1, 0), (1, 0)), name = 'Zer50806', )(Mul3607)
Max50220 = keras.layers.Maximum(name = 'Max50220', )([in0Max50220,in1Max50220])
Zer73944 = keras.layers.ZeroPadding2D(padding=((0, 0), (2, 0)), name = 'Zer73944', )(Max50220)
Max25990 = keras.layers.Maximum(name = 'Max25990', )([Zer50806,Zer73944])
Res33710 = keras.layers.Reshape((2, 3, 2, 1), name = 'Res33710', )(Max25990)
Con23635 = keras.layers.Conv3D(3, (1, 3, 1),strides=(1, 2, 1), padding='valid', dilation_rate=(1, 1, 1), name = 'Con23635', )(Res33710)
Res2014 = keras.layers.Reshape((2, 1, 6), name = 'Res2014', )(Con23635)
Thr24776 = keras.layers.ThresholdedReLU(theta=8.885525290082553, name = 'Thr24776', input_shape=(2, 1, 2))(in0Thr24776)
Con66488 = keras.layers.Concatenate(axis=3, name = 'Con66488', )([Thr24776,in0Con66488])
Add96027 = keras.layers.Add(name = 'Add96027', )([Res2014,Con66488])
model = tf.keras.models.Model(inputs=[in0Mul3607,in1Mul3607,in0Max50220,in1Max50220,in0Thr24776,in0Con66488], outputs=Add96027)
w = model.get_layer('Con23635').get_weights() 
w[0] = np.array([[[[[0.8062, 0.231, 0.8915]]], [[[0.8875, 0.8168, 0.1644]]], [[[0.583, 0.6729, 0.152]]]]])
w[1] = np.array([0, 0, 0])
model.get_layer('Con23635').set_weights(w) 
in0Mul3607 = tf.constant([[[[0.9271, 0.2062], [0.914, 0.8974]]]])
in1Mul3607 = tf.constant([[[[0.0908, 0.3445], [0.4954, 0.707]]]])
in0Max50220 = tf.constant([[[[0.8959, 0.0738]], [[0.1383, 0.9519]]]])
in1Max50220 = tf.constant([[[[0.1383, 0.7936]], [[0.0796, 0.3372]]]])
in0Thr24776 = tf.constant([[[[0.6067, 0.2798]], [[0.8917, 0.4254]]]])
in0Con66488 = tf.constant([[[[0.8149, 0.7798, 0.8847, 0.4122]], [[0.1749, 0.4703, 0.236, 0.2126]]]])
print (np.array2string(model.predict([in0Mul3607,in1Mul3607,in0Max50220,in1Max50220,in0Thr24776,in0Con66488],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Add96027.png')

LMul3607 = multiply_layer([[[[[0.9271, 0.2062], [0.914, 0.8974]]]], [[[[0.0908, 0.3445], [0.4954, 0.707]]]]], Mul3607), 
LZer50806 = zero_padding2D_layer(Mul3607, 1, 0, 1, 0, Zer50806), 
LMax50220 = maximum_layer([[[[[0.8959, 0.0738]], [[0.1383, 0.9519]]]], [[[[0.1383, 0.7936]], [[0.0796, 0.3372]]]]], Max50220), 
LZer73944 = zero_padding2D_layer(Max50220, 0, 0, 2, 0, Zer73944), 
LMax25990 = maximum_layer([Zer50806,Zer73944], Max25990), 
LRes33710 = reshape_layer(Max25990, [2, 3, 2, 1], Res33710), 
LCon23635 = conv3D_layer(Res33710, 1, 3, 1,[[[[[0.8062, 0.231, 0.8915]]], [[[0.8875, 0.8168, 0.1644]]], [[[0.583, 0.6729, 0.152]]]]],[0, 0, 0], 1, 2, 1, false, 1, 1, 1, Con23635), 
LRes2014 = reshape_layer(Con23635, [2, 1, 6], Res2014), 
LThr24776 = thresholded_relu_layer([[[[0.6067, 0.2798]], [[0.8917, 0.4254]]]], 8.885525290082553, Thr24776), 
LCon66488 = concatenate_layer([Thr24776,[[[[0.8149, 0.7798, 0.8847, 0.4122]], [[0.1749, 0.4703, 0.236, 0.2126]]]]], 3, Con66488), 
LAdd96027 = add_layer([Res2014,Con66488], Add96027), 
exec_layers([LMul3607,LZer50806,LMax50220,LZer73944,LMax25990,LRes33710,LCon23635,LRes2014,LThr24776,LCon66488,LAdd96027],["Mul3607","Zer50806","Max50220","Zer73944","Max25990","Res33710","Con23635","Res2014","Thr24776","Con66488","Add96027"],Add96027,"Add96027")

Actual (Unparsed): [[[[0.5223097, 0.6028511, 0.9510768, 1.2424688, 1.4187135, 0.5328272]], [[0.3386902, 0.3734449, 0.2575642, 1.0883021, 0.9345556, 0.3689671]]]]

Expected (Unparsed): [[[[0.5223097,0.60285111,0.9510767999999999,1.2424688,1.41871344,0.5328272000000001]],[[0.3386901883,0.373444938664,0.257564234992,1.08830206125,0.93455563312,0.36896710196]]]]

Actual:   [[[[0.5224, 0.6029, 0.9511, 1.2425, 1.4188, 0.5329]], [[0.3387, 0.3735, 0.2576, 1.0884, 0.9346, 0.369]]]]

Expected: [[[[0.5224, 0.6029, 0.9511, 1.2425, 1.4188, 0.5329]], [[0.3387, 0.3735, 0.2576, 1.0884, 0.9346, 0.369]]]]