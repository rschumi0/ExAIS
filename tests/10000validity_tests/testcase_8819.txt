import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Min25714 = tf.keras.layers.Input(shape=([1, 1, 1, 1]))
in1Min25714 = tf.keras.layers.Input(shape=([1, 1, 1, 1]))

Min25714 = keras.layers.Minimum(name = 'Min25714', )([in0Min25714,in1Min25714])
Res25172 = keras.layers.Reshape((1, 1, 1), name = 'Res25172', )(Min25714)
Zer4475 = keras.layers.ZeroPadding2D(padding=((1, 1), (1, 1)), name = 'Zer4475', )(Res25172)
model = tf.keras.models.Model(inputs=[in0Min25714,in1Min25714], outputs=Zer4475)
in0Min25714 = tf.constant([[[[[0.7744]]]]])
in1Min25714 = tf.constant([[[[[0.8843]]]]])
print (np.array2string(model.predict([in0Min25714,in1Min25714],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Zer4475.png')

LMin25714 = minimum_layer([[[[[[0.7744]]]]], [[[[[0.8843]]]]]], Min25714), 
LRes25172 = reshape_layer(Min25714, [1, 1, 1], Res25172), 
LZer4475 = zero_padding2D_layer(Res25172, 1, 1, 1, 1, Zer4475), 
exec_layers([LMin25714,LRes25172,LZer4475],["Min25714","Res25172","Zer4475"],Zer4475,"Zer4475")

Actual (Unparsed): [[[[0.0000000], [0.0000000], [0.0000000]], [[0.0000000], [0.7744000], [0.0000000]], [[0.0000000], [0.0000000], [0.0000000]]]]

Expected (Unparsed): [[[[0],[0],[0]],[[0],[0.7744],[0]],[[0],[0],[0]]]]

Actual:   [[[[0], [0], [0]], [[0], [0.7744], [0]], [[0], [0], [0]]]]

Expected: [[[[0], [0], [0]], [[0], [0.7744], [0]], [[0], [0], [0]]]]