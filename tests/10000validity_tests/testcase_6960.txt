import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0GRU99400 = tf.keras.layers.Input(shape=([1, 2]))

GRU99400 = keras.layers.GRU(1,reset_after=True, recurrent_activation='sigmoid', name = 'GRU99400', )(in0GRU99400)
Res2307 = keras.layers.Reshape((1, 1), name = 'Res2307', )(GRU99400)
Res57945 = keras.layers.Reshape((1, 1, 1), name = 'Res57945', )(Res2307)
Ave57722 = keras.layers.AveragePooling2D(pool_size=(1, 1), name = 'Ave57722', )(Res57945)
Res59431 = keras.layers.Reshape((1, 1), name = 'Res59431', )(Ave57722)
Cro22858 = keras.layers.Cropping1D(cropping=((0, 0)), name = 'Cro22858', )(Res59431)
Zer55463 = keras.layers.ZeroPadding1D(padding=((1, 1)), name = 'Zer55463', )(Cro22858)
model = tf.keras.models.Model(inputs=[in0GRU99400], outputs=Zer55463)
w = model.get_layer('GRU99400').get_weights() 
w[0] = np.array([[6, 8, 10], [3, 8, 2]])
w[1] = np.array([[8, 5, 9]])
w[2] = np.array([[7, 6, 8], [5, 7, 9]])
model.get_layer('GRU99400').set_weights(w) 
in0GRU99400 = tf.constant([[[8, 5]]])
print (np.array2string(model.predict([in0GRU99400],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Zer55463.png')

LGRU99400 = gru_layer([[[8, 5]]],[[6, 8, 10], [3, 8, 2]],[[8, 5, 9]],[[7, 6, 8], [5, 7, 9]], true, GRU99400), 
LRes2307 = reshape_layer(GRU99400, [1, 1], Res2307), 
LRes57945 = reshape_layer(Res2307, [1, 1, 1], Res57945), 
LAve57722 = average_pooling2D_layer(Res57945, 1, 1, Ave57722), 
LRes59431 = reshape_layer(Ave57722, [1, 1], Res59431), 
LCro22858 = cropping1D_layer(Res59431, 0, 0, Cro22858), 
LZer55463 = zero_padding1D_layer(Cro22858, 1, 1, Zer55463), 
exec_layers([LGRU99400,LRes2307,LRes57945,LAve57722,LRes59431,LCro22858,LZer55463],["GRU99400","Res2307","Res57945","Ave57722","Res59431","Cro22858","Zer55463"],Zer55463,"Zer55463")

Actual (Unparsed): [[[0.0000000], [0.0000000], [0.0000000]]]

Expected (Unparsed): [[[0],[0.0],[0]]]

Actual:   [[[0], [0], [0]]]

Expected: [[[0], [0], [0]]]