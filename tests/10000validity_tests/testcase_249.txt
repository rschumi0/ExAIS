import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Mul27028 = tf.keras.layers.Input(shape=([1, 2]))
in1Mul27028 = tf.keras.layers.Input(shape=([1, 2]))

Mul27028 = keras.layers.Multiply(name = 'Mul27028', )([in0Mul27028,in1Mul27028])
Res4554 = keras.layers.Reshape((1, 2, 1), name = 'Res4554', )(Mul27028)
Sep14131 = keras.layers.SeparableConv2D(3, (1, 1),strides=(1, 1), padding='valid', name = 'Sep14131', )(Res4554)
Res1339 = keras.layers.Reshape((1, 2, 3, 1), name = 'Res1339', )(Sep14131)
Con4652 = keras.layers.Conv3DTranspose(4, (1, 2, 3),strides=(1, 1, 1), padding='valid', name = 'Con4652', )(Res1339)
model = tf.keras.models.Model(inputs=[in0Mul27028,in1Mul27028], outputs=Con4652)
w = model.get_layer('Sep14131').get_weights() 
w[0] = np.array([[[[0.9917]]]])
w[1] = np.array([[[[0.0492, 0.0029, 0.4881]]]])
w[2] = np.array([0, 0, 0])
model.get_layer('Sep14131').set_weights(w) 
w = model.get_layer('Con4652').get_weights() 
w[0] = np.array([[[[[0.8248], [0.7226], [0.6504], [0.5882]], [[0.1447], [0.4793], [0.3587], [0.309]], [[0.7321], [0.2816], [0.048], [0.908]]], [[[0.202], [0.8381], [0.1204], [0.8978]], [[0.2825], [0.3337], [0.5005], [0.1256]], [[0.5984], [0.221], [0.5387], [0.5837]]]]])
w[1] = np.array([0, 0, 0, 0])
model.get_layer('Con4652').set_weights(w) 
in0Mul27028 = tf.constant([[[0.6603, 0.0846]]])
in1Mul27028 = tf.constant([[[0.1987, 0.4856]]])
print (np.array2string(model.predict([in0Mul27028,in1Mul27028],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Con4652.png')

LMul27028 = multiply_layer([[[[0.6603, 0.0846]]], [[[0.1987, 0.4856]]]], Mul27028), 
LRes4554 = reshape_layer(Mul27028, [1, 2, 1], Res4554), 
LSep14131 = separable_conv2D_layer(Res4554, 1, 1,[[[[[0.9917]]]],[[[[0.0492, 0.0029, 0.4881]]]]],[0, 0, 0], 1, 1, false, Sep14131), 
LRes1339 = reshape_layer(Sep14131, [1, 2, 3, 1], Res1339), 
LCon4652 = conv3D_transpose_layer(Res1339, 1, 2, 3,[[[[[0.8248], [0.7226], [0.6504], [0.5882]], [[0.1447], [0.4793], [0.3587], [0.309]], [[0.7321], [0.2816], [0.048], [0.908]]], [[[0.202], [0.8381], [0.1204], [0.8978]], [[0.2825], [0.3337], [0.5005], [0.1256]], [[0.5984], [0.221], [0.5387], [0.5837]]]]],[0, 0, 0, 0], 1, 1, 1, false, Con4652), 
exec_layers([LMul27028,LRes4554,LSep14131,LRes1339,LCon4652],["Mul27028","Res4554","Sep14131","Res1339","Con4652"],Con4652,"Con4652")

Actual (Unparsed): [[[[[0.0052800, 0.0046258, 0.0041636, 0.0037654], [0.0012375, 0.0033409, 0.0025416, 0.0022000], [0.0571225, 0.0478744, 0.0417482, 0.0432846], [0.0094658, 0.0305456, 0.0227984, 0.0199666], [0.0464942, 0.0178838, 0.0030484, 0.0576652]], [[0.0029464, 0.0068135, 0.0020744, 0.0069263], [0.0022721, 0.0034985, 0.0040452, 0.0018317], [0.0346521, 0.0697571, 0.0243559, 0.0743547], [0.0211307, 0.0308404, 0.0391276, 0.0144488], [0.0525614, 0.0196350, 0.0351663, 0.0551257]], [[0.0004049, 0.0016799, 0.0002413, 0.0017996], [0.0005901, 0.0007679, 0.0010175, 0.0003578], [0.0052497, 0.0171485, 0.0035332, 0.0190381], [0.0056884, 0.0066619, 0.0100164, 0.0025666], [0.0118995, 0.0043947, 0.0107124, 0.0116072]]]]]

Expected (Unparsed): [[[[[0.005279991612751322,0.004625754048707694,0.004163562736340277,0.0037653868411982633],[0.001237522105076369,0.0033409151821919133,0.002541646266594486,0.0022000199255876457],[0.057122548067774066,0.04787439167187845,0.04174820992450566,0.043284586443547185],[0.009465845246000248,0.030545629011432936,0.02279842336700169,0.019966577779031137],[0.04649419065171868,0.017883846588613552,0.003048382941240946,0.057665243971807896]],[[0.0029463788553655435,0.006813545118446982,0.002074437590887819,0.006926319557143673],[0.002272147609503952,0.003498537052912117,0.004045240332207252,0.0018316662647810435],[0.034652062772630596,0.0697570883010254,0.02435589450751326,0.0743546753615801],[0.021130735139450612,0.030840428267946134,0.0391276358363943,0.014448769016363914],[0.0525614037492661,0.01963504115721461,0.03516625533671225,0.05512570918591991]],[[0.0004048981817862528,0.0016799265651240517,0.00024133535191616254,0.00179959201785989],[0.0005901220703068415,0.0007679038402905537,0.0010174504966962738,0.0003578319866753308],[0.005249723867817968,0.017148509481198414,0.00353315178464744,0.019038104403678258],[0.005688374972171864,0.006661927276918258,0.010016376957330339,0.002566591412803541],[0.011899528317825224,0.004394712162833179,0.010712359466598341,0.011607210359482926]]]]]

Actual:   [[[[[0.0053, 0.0047, 0.0042, 0.0038], [0.0013, 0.0034, 0.0026, 0.0022], [0.0572, 0.0479, 0.0418, 0.0433], [0.0095, 0.0306, 0.0228, 0.02], [0.0465, 0.0179, 0.0031, 0.0577]], [[0.003, 0.0069, 0.0021, 0.007], [0.0023, 0.0035, 0.0041, 0.0019], [0.0347, 0.0698, 0.0244, 0.0744], [0.0212, 0.0309, 0.0392, 0.0145], [0.0526, 0.0197, 0.0352, 0.0552]], [[0.0005, 0.0017, 0.0003, 0.0018], [0.0006, 0.0008, 0.0011, 0.0004], [0.0053, 0.0172, 0.0036, 0.0191], [0.0057, 0.0067, 0.0101, 0.0026], [0.0119, 0.0044, 0.0108, 0.0117]]]]]

Expected: [[[[[0.0053, 0.0047, 0.0042, 0.0038], [0.0013, 0.0034, 0.0026, 0.0023], [0.0572, 0.0479, 0.0418, 0.0433], [0.0095, 0.0306, 0.0228, 0.02], [0.0465, 0.0179, 0.0031, 0.0577]], [[0.003, 0.0069, 0.0021, 0.007], [0.0023, 0.0035, 0.0041, 0.0019], [0.0347, 0.0698, 0.0244, 0.0744], [0.0212, 0.0309, 0.0392, 0.0145], [0.0526, 0.0197, 0.0352, 0.0552]], [[0.0005, 0.0017, 0.0003, 0.0018], [0.0006, 0.0008, 0.0011, 0.0004], [0.0053, 0.0172, 0.0036, 0.0191], [0.0057, 0.0067, 0.0101, 0.0026], [0.0119, 0.0044, 0.0108, 0.0117]]]]]