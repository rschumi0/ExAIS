import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0LST69076 = tf.keras.layers.Input(shape=([3, 1]))
in0Mul61230 = tf.keras.layers.Input(shape=([2, 1]))
in1Mul61230 = tf.keras.layers.Input(shape=([2, 1]))
in0Con85010 = tf.keras.layers.Input(shape=([2, 1]))

LST69076 = keras.layers.LSTM(3,recurrent_activation='sigmoid', name = 'LST69076', )(in0LST69076)
Res89472 = keras.layers.Reshape((3, 1), name = 'Res89472', )(LST69076)
Res72085 = keras.layers.Reshape((3, 1, 1), name = 'Res72085', )(Res89472)
Cro96088 = keras.layers.Cropping2D(cropping=((0, 1), (0, 0)), name = 'Cro96088', )(Res72085)
Res90287 = keras.layers.Reshape((2, 1), name = 'Res90287', )(Cro96088)
Sep20117 = keras.layers.SeparableConv1D(2, (2),strides=(2), padding='same', name = 'Sep20117', )(Res90287)
Zer21087 = keras.layers.ZeroPadding1D(padding=((1, 0)), name = 'Zer21087', )(Sep20117)
Mul61230 = keras.layers.Multiply(name = 'Mul61230', )([in0Mul61230,in1Mul61230])
Con85010 = keras.layers.Concatenate(axis=2, name = 'Con85010', )([Mul61230,in0Con85010])
Min86284 = keras.layers.Minimum(name = 'Min86284', )([Zer21087,Con85010])
model = tf.keras.models.Model(inputs=[in0LST69076,in0Mul61230,in1Mul61230,in0Con85010], outputs=Min86284)
w = model.get_layer('LST69076').get_weights() 
w[0] = np.array([[3, 2, 6, 3, 5, 9, 10, 2, 2, 9, 2, 10]])
w[1] = np.array([[9, 10, 5, 5, 3, 7, 1, 5, 10, 4, 2, 10], [10, 4, 2, 9, 6, 2, 2, 1, 4, 5, 3, 10], [3, 5, 3, 8, 1, 3, 2, 4, 8, 10, 8, 6]])
w[2] = np.array([6, 10, 7, 4, 2, 1, 5, 8, 7, 1, 5, 4])
model.get_layer('LST69076').set_weights(w) 
w = model.get_layer('Sep20117').get_weights() 
w[0] = np.array([[[0.8331]], [[0.2658]]])
w[1] = np.array([[[0.4629, 0.7788]]])
w[2] = np.array([0, 0])
model.get_layer('Sep20117').set_weights(w) 
in0LST69076 = tf.constant([[[1], [5], [9]]])
in0Mul61230 = tf.constant([[[0.9686], [0.7438]]])
in1Mul61230 = tf.constant([[[0.0302], [0.6321]]])
in0Con85010 = tf.constant([[[0.5999], [0.1288]]])
print (np.array2string(model.predict([in0LST69076,in0Mul61230,in1Mul61230,in0Con85010],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Min86284.png')

LLST69076 = lstm_layer([[[1], [5], [9]]],[[3, 2, 6, 3, 5, 9, 10, 2, 2, 9, 2, 10]],[[9, 10, 5, 5, 3, 7, 1, 5, 10, 4, 2, 10], [10, 4, 2, 9, 6, 2, 2, 1, 4, 5, 3, 10], [3, 5, 3, 8, 1, 3, 2, 4, 8, 10, 8, 6]],[6, 10, 7, 4, 2, 1, 5, 8, 7, 1, 5, 4], LST69076), 
LRes89472 = reshape_layer(LST69076, [3, 1], Res89472), 
LRes72085 = reshape_layer(Res89472, [3, 1, 1], Res72085), 
LCro96088 = cropping2D_layer(Res72085, 0, 1, 0, 0, Cro96088), 
LRes90287 = reshape_layer(Cro96088, [2, 1], Res90287), 
LSep20117 = separable_conv1D_layer(Res90287, 2,[[[[0.8331]], [[0.2658]]],[[[0.4629, 0.7788]]]],[0, 0], 2, true, Sep20117), 
LZer21087 = zero_padding1D_layer(Sep20117, 1, 0, Zer21087), 
LMul61230 = multiply_layer([[[[0.9686], [0.7438]]], [[[0.0302], [0.6321]]]], Mul61230), 
LCon85010 = concatenate_layer([Mul61230,[[[0.5999], [0.1288]]]], 2, Con85010), 
LMin86284 = minimum_layer([Zer21087,Con85010], Min86284), 
exec_layers([LLST69076,LRes89472,LRes72085,LCro96088,LRes90287,LSep20117,LZer21087,LMul61230,LCon85010,LMin86284],["LST69076","Res89472","Res72085","Cro96088","Res90287","Sep20117","Zer21087","Mul61230","Con85010","Min86284"],Min86284,"Min86284")

Actual (Unparsed): [[[0.0000000, 0.0000000], [0.4701560, 0.1288000]]]

Expected (Unparsed): [[[0,0],[0.47015598000000003,0.1288]]]

Actual:   [[[0, 0], [0.4702, 0.1288]]]

Expected: [[[0, 0], [0.4702, 0.1288]]]