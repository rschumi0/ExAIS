import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Mul95057 = tf.keras.layers.Input(shape=([1, 2, 2]))
in1Mul95057 = tf.keras.layers.Input(shape=([1, 2, 2]))

Mul95057 = keras.layers.Multiply(name = 'Mul95057', )([in0Mul95057,in1Mul95057])
Res84280 = keras.layers.Reshape((1, 4), name = 'Res84280', )(Mul95057)
Glo80465 = keras.layers.GlobalMaxPool1D(name = 'Glo80465', )(Res84280)
model = tf.keras.models.Model(inputs=[in0Mul95057,in1Mul95057], outputs=Glo80465)
in0Mul95057 = tf.constant([[[[0.2096, 0.1688], [0.7957, 0.1901]]]])
in1Mul95057 = tf.constant([[[[0.2529, 0.5252], [0.9693, 0.8868]]]])
print (np.array2string(model.predict([in0Mul95057,in1Mul95057],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Glo80465.png')

LMul95057 = multiply_layer([[[[[0.2096, 0.1688], [0.7957, 0.1901]]]], [[[[0.2529, 0.5252], [0.9693, 0.8868]]]]], Mul95057), 
LRes84280 = reshape_layer(Mul95057, [1, 4], Res84280), 
LGlo80465 = global_max_pool1D_layer(Res84280, Glo80465), 
exec_layers([LMul95057,LRes84280,LGlo80465],["Mul95057","Res84280","Glo80465"],Glo80465,"Glo80465")

Actual (Unparsed): [[0.0530078, 0.0886538, 0.7712720, 0.1685807]]

Expected (Unparsed): [[0.05300784000000001,0.08865376,0.77127201,0.16858068]]

Actual:   [[0.0531, 0.0887, 0.7713, 0.1686]]

Expected: [[0.0531, 0.0887, 0.7713, 0.1686]]