import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Sub84078 = tf.keras.layers.Input(shape=([2, 2]))
in1Sub84078 = tf.keras.layers.Input(shape=([2, 2]))

Sub84078 = keras.layers.Subtract(name = 'Sub84078', )([in0Sub84078,in1Sub84078])
Lea9147 = keras.layers.LeakyReLU(alpha=1.4266565595812228, name = 'Lea9147', )(Sub84078)
model = tf.keras.models.Model(inputs=[in0Sub84078,in1Sub84078], outputs=Lea9147)
in0Sub84078 = tf.constant([[[0.9856, 0.8388], [0.1254, 0.6369]]])
in1Sub84078 = tf.constant([[[0.5372, 0.9458], [0.428, 0.4673]]])
print (np.array2string(model.predict([in0Sub84078,in1Sub84078],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Lea9147.png')

LSub84078 = subtract_layer([[[0.9856, 0.8388], [0.1254, 0.6369]]], [[[0.5372, 0.9458], [0.428, 0.4673]]], Sub84078), 
LLea9147 = leaky_relu_layer(Sub84078, 1.4266565595812228, Lea9147), 
exec_layers([LSub84078,LLea9147],["Sub84078","Lea9147"],Lea9147,"Lea9147")

Actual (Unparsed): [[[0.4484000, -0.1526522], [-0.4317063, 0.1696000]]]

Expected (Unparsed): [[[0.4484,-0.15265225187519083],[-0.431706274929278,0.16960000000000003]]]

Actual:   [[[0.4484, -0.1526], [-0.4317, 0.1696]]]

Expected: [[[0.4484, -0.1526], [-0.4317, 0.1697]]]