import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Sep12598 = tf.keras.layers.Input(shape=([1, 2]))

Sep12598 = keras.layers.SeparableConv1D(3, (1),strides=(1), padding='same', name = 'Sep12598', )(in0Sep12598)
Res66019 = keras.layers.Reshape((1, 3, 1), name = 'Res66019', )(Sep12598)
Cro27614 = keras.layers.Cropping2D(cropping=((0, 0), (0, 0)), name = 'Cro27614', )(Res66019)
Res80629 = keras.layers.Reshape((1, 3, 1, 1), name = 'Res80629', )(Cro27614)
Zer43722 = keras.layers.ZeroPadding3D(padding=((1, 1), (1, 1), (1, 1)), name = 'Zer43722', )(Res80629)
model = tf.keras.models.Model(inputs=[in0Sep12598], outputs=Zer43722)
w = model.get_layer('Sep12598').get_weights() 
w[0] = np.array([[[0.6512], [0.5005]]])
w[1] = np.array([[[0.4753, 0.9996, 0.1957], [0.0504, 0.9009, 0.2709]]])
w[2] = np.array([0, 0, 0])
model.get_layer('Sep12598').set_weights(w) 
in0Sep12598 = tf.constant([[[0.8521, 0.1823]]])
print (np.array2string(model.predict([in0Sep12598],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Zer43722.png')

LSep12598 = separable_conv1D_layer([[[0.8521, 0.1823]]], 1,[[[[0.6512], [0.5005]]],[[[0.4753, 0.9996, 0.1957], [0.0504, 0.9009, 0.2709]]]],[0, 0, 0], 1, true, Sep12598), 
LRes66019 = reshape_layer(Sep12598, [1, 3, 1], Res66019), 
LCro27614 = cropping2D_layer(Res66019, 0, 0, 0, 0, Cro27614), 
LRes80629 = reshape_layer(Cro27614, [1, 3, 1, 1], Res80629), 
LZer43722 = zero_padding3D_layer(Res80629, 1, 1, 1, 1, 1, 1, Zer43722), 
exec_layers([LSep12598,LRes66019,LCro27614,LRes80629,LZer43722],["Sep12598","Res66019","Cro27614","Res80629","Zer43722"],Zer43722,"Zer43722")

Actual (Unparsed): [[[[[0.0000000], [0.0000000], [0.0000000]], [[0.0000000], [0.0000000], [0.0000000]], [[0.0000000], [0.0000000], [0.0000000]], [[0.0000000], [0.0000000], [0.0000000]], [[0.0000000], [0.0000000], [0.0000000]]], [[[0.0000000], [0.0000000], [0.0000000]], [[0.0000000], [0.2683366], [0.0000000]], [[0.0000000], [0.6368647], [0.0000000]], [[0.0000000], [0.1333087], [0.0000000]], [[0.0000000], [0.0000000], [0.0000000]]], [[[0.0000000], [0.0000000], [0.0000000]], [[0.0000000], [0.0000000], [0.0000000]], [[0.0000000], [0.0000000], [0.0000000]], [[0.0000000], [0.0000000], [0.0000000]], [[0.0000000], [0.0000000], [0.0000000]]]]]

Expected (Unparsed): [[[[[0],[0],[0]],[[0],[0],[0]],[[0],[0],[0]],[[0],[0],[0]],[[0],[0],[0]]],[[[0],[0],[0]],[[0],[0.268336592216],[0]],[[0],[0.636864717027],[0]],[[0],[0.13330871519899998],[0]],[[0],[0],[0]]],[[[0],[0],[0]],[[0],[0],[0]],[[0],[0],[0]],[[0],[0],[0]],[[0],[0],[0]]]]]

Actual:   [[[[[0], [0], [0]], [[0], [0], [0]], [[0], [0], [0]], [[0], [0], [0]], [[0], [0], [0]]], [[[0], [0], [0]], [[0], [0.2684], [0]], [[0], [0.6369], [0]], [[0], [0.1334], [0]], [[0], [0], [0]]], [[[0], [0], [0]], [[0], [0], [0]], [[0], [0], [0]], [[0], [0], [0]], [[0], [0], [0]]]]]

Expected: [[[[[0], [0], [0]], [[0], [0], [0]], [[0], [0], [0]], [[0], [0], [0]], [[0], [0], [0]]], [[[0], [0], [0]], [[0], [0.2684], [0]], [[0], [0.6369], [0]], [[0], [0.1334], [0]], [[0], [0], [0]]], [[[0], [0], [0]], [[0], [0], [0]], [[0], [0], [0]], [[0], [0], [0]], [[0], [0], [0]]]]]