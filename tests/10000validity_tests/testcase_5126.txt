import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Dep90703 = tf.keras.layers.Input(shape=([1, 2, 2]))
in0Mul17221 = tf.keras.layers.Input(shape=([2, 1, 1]))
in1Mul17221 = tf.keras.layers.Input(shape=([2, 1, 1]))
in0Con16690 = tf.keras.layers.Input(shape=([3]))
in0Mul98577 = tf.keras.layers.Input(shape=([1, 1]))
in1Mul98577 = tf.keras.layers.Input(shape=([1, 1]))

Dep90703 = keras.layers.DepthwiseConv2D((1, 1),strides=(1, 1), padding='valid', name = 'Dep90703', )(in0Dep90703)
Res91077 = keras.layers.Reshape((1, 4), name = 'Res91077', )(Dep90703)
Fla9798 = keras.layers.Flatten(name = 'Fla9798', )(Res91077)
Mul17221 = keras.layers.Multiply(name = 'Mul17221', )([in0Mul17221,in1Mul17221])
Res96801 = keras.layers.Reshape((2, 1), name = 'Res96801', )(Mul17221)
Res55306 = keras.layers.Reshape((2, 1, 1), name = 'Res55306', )(Res96801)
Glo23259 = keras.layers.GlobalAveragePooling2D(name = 'Glo23259', )(Res55306)
Con16690 = keras.layers.Concatenate(axis=1, name = 'Con16690', )([Glo23259,in0Con16690])
Add63145 = keras.layers.Add(name = 'Add63145', )([Fla9798,Con16690])
Res51569 = keras.layers.Reshape((4, 1), name = 'Res51569', )(Add63145)
Mul98577 = keras.layers.Multiply(name = 'Mul98577', )([in0Mul98577,in1Mul98577])
Zer67673 = keras.layers.ZeroPadding1D(padding=((3, 0)), name = 'Zer67673', )(Mul98577)
Mul63327 = keras.layers.Multiply(name = 'Mul63327', )([Res51569,Zer67673])
model = tf.keras.models.Model(inputs=[in0Dep90703,in0Mul17221,in1Mul17221,in0Con16690,in0Mul98577,in1Mul98577], outputs=Mul63327)
w = model.get_layer('Dep90703').get_weights() 
w[0] = np.array([[[[0.5727], [0.6206]]]])
w[1] = np.array([0, 0])
model.get_layer('Dep90703').set_weights(w) 
in0Dep90703 = tf.constant([[[[0.0592, 0.9364], [0.3618, 0.7901]]]])
in0Mul17221 = tf.constant([[[[0.6193]], [[0.0857]]]])
in1Mul17221 = tf.constant([[[[0.4328]], [[0.1464]]]])
in0Con16690 = tf.constant([[0.2514, 0.8597, 0.439]])
in0Mul98577 = tf.constant([[[0.8618]]])
in1Mul98577 = tf.constant([[[0.0614]]])
print (np.array2string(model.predict([in0Dep90703,in0Mul17221,in1Mul17221,in0Con16690,in0Mul98577,in1Mul98577],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Mul63327.png')

LDep90703 = depthwise_conv2D_layer([[[[0.0592, 0.9364], [0.3618, 0.7901]]]], 1, 1,[[[[0.5727], [0.6206]]]],[0, 0], 1, 1, false, Dep90703), 
LRes91077 = reshape_layer(Dep90703, [1, 4], Res91077), 
LFla9798 = flatten_layer(Res91077, Fla9798), 
LMul17221 = multiply_layer([[[[[0.6193]], [[0.0857]]]], [[[[0.4328]], [[0.1464]]]]], Mul17221), 
LRes96801 = reshape_layer(Mul17221, [2, 1], Res96801), 
LRes55306 = reshape_layer(Res96801, [2, 1, 1], Res55306), 
LGlo23259 = global_average_pooling2D_layer(Res55306, Glo23259), 
LCon16690 = concatenate_layer([Glo23259,[[0.2514, 0.8597, 0.439]]], 1, Con16690), 
LAdd63145 = add_layer([Fla9798,Con16690], Add63145), 
LRes51569 = reshape_layer(Add63145, [4, 1], Res51569), 
LMul98577 = multiply_layer([[[[0.8618]]], [[[0.0614]]]], Mul98577), 
LZer67673 = zero_padding1D_layer(Mul98577, 3, 0, Zer67673), 
LMul63327 = multiply_layer([Res51569,Zer67673], Mul63327), 
exec_layers([LDep90703,LRes91077,LFla9798,LMul17221,LRes96801,LRes55306,LGlo23259,LCon16690,LAdd63145,LRes51569,LMul98577,LZer67673,LMul63327],["Dep90703","Res91077","Fla9798","Mul17221","Res96801","Res55306","Glo23259","Con16690","Add63145","Res51569","Mul98577","Zer67673","Mul63327"],Mul63327,"Mul63327")

Actual (Unparsed): [[[0.0000000], [0.0000000], [0.0000000], [0.0491754]]]

Expected (Unparsed): [[[0.0],[0.0],[0.0],[0.04917537153359121]]]

Actual:   [[[0], [0], [0], [0.0492]]]

Expected: [[[0], [0], [0], [0.0492]]]