import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Sof54561 = tf.keras.layers.Input(shape=([1, 1]))
in0Con21886 = tf.keras.layers.Input(shape=([1, 2, 2, 1]))
in0Mul11951 = tf.keras.layers.Input(shape=([1, 2, 2, 2]))
in1Mul11951 = tf.keras.layers.Input(shape=([1, 2, 2, 2]))

Sof54561 = keras.layers.Softmax(axis=1, name = 'Sof54561', input_shape=(1, 1))(in0Sof54561)
Res91115 = keras.layers.Reshape((1, 1, 1), name = 'Res91115', )(Sof54561)
Res38345 = keras.layers.Reshape((1, 1, 1, 1), name = 'Res38345', )(Res91115)
Zer27931 = keras.layers.ZeroPadding3D(padding=((0, 0), (1, 0), (1, 0)), name = 'Zer27931', )(Res38345)
Con21886 = keras.layers.Concatenate(axis=4, name = 'Con21886', )([Zer27931,in0Con21886])
Mul11951 = keras.layers.Multiply(name = 'Mul11951', )([in0Mul11951,in1Mul11951])
Lay8989 = keras.layers.LayerNormalization(axis=3, epsilon=1.929662270562827, name = 'Lay8989', )(Mul11951)
Ave38081 = keras.layers.Average(name = 'Ave38081', )([Con21886,Lay8989])
Res60706 = keras.layers.Reshape((1, 2, 4), name = 'Res60706', )(Ave38081)
Res63984 = keras.layers.Reshape((1, 8), name = 'Res63984', )(Res60706)
Up_92376 = keras.layers.UpSampling1D(size=(1), name = 'Up_92376', )(Res63984)
Den1922 = keras.layers.Dense(2,name = 'Den1922', )(Up_92376)
model = tf.keras.models.Model(inputs=[in0Sof54561,in0Con21886,in0Mul11951,in1Mul11951], outputs=Den1922)
w = model.get_layer('Den1922').get_weights() 
w[0] = np.array([[0.7379, 0.6767], [0.339, 0.3993], [0.641, 0.6034], [0.7727, 0.9893], [0.4755, 0.9558], [0.2305, 0.3661], [0.4893, 0.7326], [0.5029, 0.8398]])
w[1] = np.array([0.8712, 0.7705])
model.get_layer('Den1922').set_weights(w) 
in0Sof54561 = tf.constant([[[0.6843]]])
in0Con21886 = tf.constant([[[[[0.9556], [0.9096]], [[0.7062], [0.4453]]]]])
in0Mul11951 = tf.constant([[[[[0.0806, 0.0432], [0.4048, 0.1315]], [[0.4291, 0.9033], [0.3358, 0.261]]]]])
in1Mul11951 = tf.constant([[[[[0.5568, 0.8239], [0.4481, 0.7277]], [[0.467, 0.6387], [0.2352, 0.9808]]]]])
print (np.array2string(model.predict([in0Sof54561,in0Con21886,in0Mul11951,in1Mul11951],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Den1922.png')

LSof54561 = softmax_layer([[[0.6843]]], 1, Sof54561), 
LRes91115 = reshape_layer(Sof54561, [1, 1, 1], Res91115), 
LRes38345 = reshape_layer(Res91115, [1, 1, 1, 1], Res38345), 
LZer27931 = zero_padding3D_layer(Res38345, 0, 0, 1, 0, 1, 0, Zer27931), 
LCon21886 = concatenate_layer([Zer27931,[[[[[0.9556], [0.9096]], [[0.7062], [0.4453]]]]]], 4, Con21886), 
LMul11951 = multiply_layer([[[[[[0.0806, 0.0432], [0.4048, 0.1315]], [[0.4291, 0.9033], [0.3358, 0.261]]]]], [[[[[0.5568, 0.8239], [0.4481, 0.7277]], [[0.467, 0.6387], [0.2352, 0.9808]]]]]], Mul11951), 
LLay8989 = layer_normalization_layer(Mul11951, 3, 1.929662270562827, Lay8989), 
LAve38081 = average_layer([Con21886,Lay8989], Ave38081), 
LRes60706 = reshape_layer(Ave38081, [1, 2, 4], Res60706), 
LRes63984 = reshape_layer(Res60706, [1, 8], Res63984), 
LUp_92376 = up_sampling1D_layer(Res63984, 1, Up_92376), 
LDen1922 = dense_layer(Up_92376, [[0.7379, 0.6767], [0.339, 0.3993], [0.641, 0.6034], [0.7727, 0.9893], [0.4755, 0.9558], [0.2305, 0.3661], [0.4893, 0.7326], [0.5029, 0.8398]],[0.8712, 0.7705], Den1922), 
exec_layers([LSof54561,LRes91115,LRes38345,LZer27931,LCon21886,LMul11951,LLay8989,LAve38081,LRes60706,LRes63984,LUp_92376,LDen1922],["Sof54561","Res91115","Res38345","Zer27931","Con21886","Mul11951","Lay8989","Ave38081","Res60706","Res63984","Up_92376","Den1922"],Den1922,"Den1922")

Actual (Unparsed): [[[1.8089891, 2.0760436]]]

Expected (Unparsed): [[[1.8089890830311315,2.0760435674303443]]]

Actual:   [[[1.809, 2.0761]]]

Expected: [[[1.809, 2.0761]]]