import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Sim38841 = tf.keras.layers.Input(shape=([1, 1]))

Sim38841 = keras.layers.SimpleRNN(3,name = 'Sim38841', )(in0Sim38841)
Res18657 = keras.layers.Reshape((3, 1), name = 'Res18657', )(Sim38841)
ELU39734 = keras.layers.ELU(alpha=-2.8462617284968488, name = 'ELU39734', )(Res18657)
model = tf.keras.models.Model(inputs=[in0Sim38841], outputs=ELU39734)
w = model.get_layer('Sim38841').get_weights() 
w[0] = np.array([[10, 2, 1]])
w[1] = np.array([[6, 4, 3], [2, 4, 7], [4, 4, 2]])
w[2] = np.array([10, 6, 10])
model.get_layer('Sim38841').set_weights(w) 
in0Sim38841 = tf.constant([[[5]]])
print (np.array2string(model.predict([in0Sim38841],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='ELU39734.png')

LSim38841 = simple_rnn_layer([[[5]]],[[10, 2, 1]],[[6, 4, 3], [2, 4, 7], [4, 4, 2]],[10, 6, 10], Sim38841), 
LRes18657 = reshape_layer(Sim38841, [3, 1], Res18657), 
LELU39734 = elu_layer(Res18657, -2.8462617284968488, ELU39734), 
exec_layers([LSim38841,LRes18657,LELU39734],["Sim38841","Res18657","ELU39734"],ELU39734,"ELU39734")

Actual (Unparsed): [[[1.0000000], [1.0000000], [1.0000000]]]

Expected (Unparsed): [[[1.0],[0.9999999999999747],[0.9999999999998128]]]

Actual:   [[[1], [1], [1]]]

Expected: [[[1], [1], [1]]]