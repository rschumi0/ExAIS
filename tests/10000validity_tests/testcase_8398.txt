import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Dot67520 = tf.keras.layers.Input(shape=([3, 3]))
in1Dot67520 = tf.keras.layers.Input(shape=([3, 3]))
in0Con26558 = tf.keras.layers.Input(shape=([2, 2, 1, 1]))
in0Ave47777 = tf.keras.layers.Input(shape=([2, 2, 1, 2]))
in1Ave47777 = tf.keras.layers.Input(shape=([2, 2, 1, 2]))
in0Con28718 = tf.keras.layers.Input(shape=([4, 3, 4, 1]))
in0Max6603 = tf.keras.layers.Input(shape=([2, 2, 2, 1]))
in1Max6603 = tf.keras.layers.Input(shape=([2, 2, 2, 1]))

Dot67520 = keras.layers.Dot(axes=(1, 2), name = 'Dot67520', )([in0Dot67520,in1Dot67520])
LST96042 = keras.layers.LSTM(2,recurrent_activation='sigmoid', name = 'LST96042', )(Dot67520)
Res61205 = keras.layers.Reshape((2, 1), name = 'Res61205', )(LST96042)
Res10831 = keras.layers.Reshape((2, 1, 1), name = 'Res10831', )(Res61205)
Res70429 = keras.layers.Reshape((2, 1, 1, 1), name = 'Res70429', )(Res10831)
Zer12913 = keras.layers.ZeroPadding3D(padding=((0, 0), (1, 0), (0, 0)), name = 'Zer12913', )(Res70429)
Con26558 = keras.layers.Concatenate(axis=4, name = 'Con26558', )([Zer12913,in0Con26558])
Ave47777 = keras.layers.Average(name = 'Ave47777', )([in0Ave47777,in1Ave47777])
Add26123 = keras.layers.Add(name = 'Add26123', )([Con26558,Ave47777])
Zer25070 = keras.layers.ZeroPadding3D(padding=((2, 0), (1, 0), (3, 0)), name = 'Zer25070', )(Add26123)
Con28718 = keras.layers.Concatenate(axis=4, name = 'Con28718', )([Zer25070,in0Con28718])
Max6603 = keras.layers.Maximum(name = 'Max6603', )([in0Max6603,in1Max6603])
Up_14606 = keras.layers.UpSampling3D(size=(2, 2, 2), name = 'Up_14606', )(Max6603)
Con60602 = keras.layers.Conv3D(3, (1, 2, 1),strides=(1, 1, 1), padding='valid', dilation_rate=(1, 1, 1), name = 'Con60602', )(Up_14606)
Add3080 = keras.layers.Add(name = 'Add3080', )([Con28718,Con60602])
model = tf.keras.models.Model(inputs=[in0Dot67520,in1Dot67520,in0Con26558,in0Ave47777,in1Ave47777,in0Con28718,in0Max6603,in1Max6603], outputs=Add3080)
w = model.get_layer('LST96042').get_weights() 
w[0] = np.array([[3, 3, 2, 2, 6, 8, 9, 10], [5, 9, 7, 5, 8, 2, 1, 4], [7, 10, 7, 5, 1, 3, 6, 9]])
w[1] = np.array([[2, 7, 10, 7, 8, 3, 4, 9], [5, 10, 1, 2, 8, 7, 10, 2]])
w[2] = np.array([8, 10, 6, 5, 9, 5, 3, 4])
model.get_layer('LST96042').set_weights(w) 
w = model.get_layer('Con60602').get_weights() 
w[0] = np.array([[[[[0.9585, 0.2288, 0.296]]], [[[0.1061, 0.1618, 0.7872]]]]])
w[1] = np.array([0, 0, 0])
model.get_layer('Con60602').set_weights(w) 
in0Dot67520 = tf.constant([[[0.5589, 0.5558, 0.4144], [0.533, 0.7035, 0.9362], [0.1207, 0.9068, 0.3024]]])
in1Dot67520 = tf.constant([[[0.545, 0.0471, 0.0366], [0.1322, 0.6614, 0.8832], [0.3549, 0.1588, 0.4743]]])
in0Con26558 = tf.constant([[[[[0.471]], [[0.8838]]], [[[0.9005]], [[0.759]]]]])
in0Ave47777 = tf.constant([[[[[0.6373, 0.3376]], [[0.7664, 0.2231]]], [[[0.7444, 0.9136]], [[0.6524, 0.7115]]]]])
in1Ave47777 = tf.constant([[[[[0.7612, 0.6187]], [[0.9839, 0.1471]]], [[[0.9902, 0.8863]], [[0.191, 0.487]]]]])
in0Con28718 = tf.constant([[[[[0.8736], [0.9327], [0.7001], [0.3732]], [[0.4153], [0.893], [0.0484], [0.9898]], [[0.9148], [0.9256], [0.6956], [0.7234]]], [[[0.5648], [0.7128], [0.0521], [0.1975]], [[0.1936], [0.5027], [0.4118], [0.3995]], [[0.9091], [0.6522], [0.434], [0.0897]]], [[[0.4327], [0.2769], [0.5055], [0.1112]], [[0.0082], [0.7581], [0.646], [0.4797]], [[0.1784], [0.531], [0.3572], [0.2558]]], [[[0.0424], [0.3987], [0.967], [0.9811]], [[0.8275], [0.601], [0.5637], [0.8911]], [[0.7429], [0.0044], [0.5821], [0.2128]]]]])
in0Max6603 = tf.constant([[[[[0.3521], [0.4175]], [[0.2047], [0.5988]]], [[[0.9697], [0.5324]], [[0.0392], [0.5807]]]]])
in1Max6603 = tf.constant([[[[[0.2132], [0.7683]], [[0.3658], [0.5305]]], [[[0.4133], [0.7594]], [[0.1278], [0.8968]]]]])
print (np.array2string(model.predict([in0Dot67520,in1Dot67520,in0Con26558,in0Ave47777,in1Ave47777,in0Con28718,in0Max6603,in1Max6603],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Add3080.png')

LDot67520 = dot_layer([[[0.5589, 0.5558, 0.4144], [0.533, 0.7035, 0.9362], [0.1207, 0.9068, 0.3024]]], [[[0.545, 0.0471, 0.0366], [0.1322, 0.6614, 0.8832], [0.3549, 0.1588, 0.4743]]], 1, 2, Dot67520), 
LLST96042 = lstm_layer(Dot67520,[[3, 3, 2, 2, 6, 8, 9, 10], [5, 9, 7, 5, 8, 2, 1, 4], [7, 10, 7, 5, 1, 3, 6, 9]],[[2, 7, 10, 7, 8, 3, 4, 9], [5, 10, 1, 2, 8, 7, 10, 2]],[8, 10, 6, 5, 9, 5, 3, 4], LST96042), 
LRes61205 = reshape_layer(LST96042, [2, 1], Res61205), 
LRes10831 = reshape_layer(Res61205, [2, 1, 1], Res10831), 
LRes70429 = reshape_layer(Res10831, [2, 1, 1, 1], Res70429), 
LZer12913 = zero_padding3D_layer(Res70429, 0, 0, 1, 0, 0, 0, Zer12913), 
LCon26558 = concatenate_layer([Zer12913,[[[[[0.471]], [[0.8838]]], [[[0.9005]], [[0.759]]]]]], 4, Con26558), 
LAve47777 = average_layer([[[[[[0.6373, 0.3376]], [[0.7664, 0.2231]]], [[[0.7444, 0.9136]], [[0.6524, 0.7115]]]]], [[[[[0.7612, 0.6187]], [[0.9839, 0.1471]]], [[[0.9902, 0.8863]], [[0.191, 0.487]]]]]], Ave47777), 
LAdd26123 = add_layer([Con26558,Ave47777], Add26123), 
LZer25070 = zero_padding3D_layer(Add26123, 2, 0, 1, 0, 3, 0, Zer25070), 
LCon28718 = concatenate_layer([Zer25070,[[[[[0.8736], [0.9327], [0.7001], [0.3732]], [[0.4153], [0.893], [0.0484], [0.9898]], [[0.9148], [0.9256], [0.6956], [0.7234]]], [[[0.5648], [0.7128], [0.0521], [0.1975]], [[0.1936], [0.5027], [0.4118], [0.3995]], [[0.9091], [0.6522], [0.434], [0.0897]]], [[[0.4327], [0.2769], [0.5055], [0.1112]], [[0.0082], [0.7581], [0.646], [0.4797]], [[0.1784], [0.531], [0.3572], [0.2558]]], [[[0.0424], [0.3987], [0.967], [0.9811]], [[0.8275], [0.601], [0.5637], [0.8911]], [[0.7429], [0.0044], [0.5821], [0.2128]]]]]], 4, Con28718), 
LMax6603 = maximum_layer([[[[[[0.3521], [0.4175]], [[0.2047], [0.5988]]], [[[0.9697], [0.5324]], [[0.0392], [0.5807]]]]], [[[[[0.2132], [0.7683]], [[0.3658], [0.5305]]], [[[0.4133], [0.7594]], [[0.1278], [0.8968]]]]]], Max6603), 
LUp_14606 = up_sampling3D_layer(Max6603, 2, 2, 2, Up_14606), 
LCon60602 = conv3D_layer(Up_14606, 1, 2, 1,[[[[[0.9585, 0.2288, 0.296]]], [[[0.1061, 0.1618, 0.7872]]]]],[0, 0, 0], 1, 1, 1, false, 1, 1, 1, Con60602), 
LAdd3080 = add_layer([Con28718,Con60602], Add3080), 
exec_layers([LDot67520,LLST96042,LRes61205,LRes10831,LRes70429,LZer12913,LCon26558,LAve47777,LAdd26123,LZer25070,LCon28718,LMax6603,LUp_14606,LCon60602,LAdd3080],["Dot67520","LST96042","Res61205","Res10831","Res70429","Zer12913","Con26558","Ave47777","Add26123","Zer25070","Con28718","Max6603","Up_14606","Con60602","Add3080"],Add3080,"Add3080")

Actual (Unparsed): [[[[[0.3748457, 0.1375303, 1.2549947], [0.3748457, 0.1375303, 1.3140947], [0.8179322, 0.3000980, 1.5323226], [0.8179322, 0.3000980, 1.2054226]], [[0.3762992, 0.1397469, 0.8074794], [0.3762992, 0.1397469, 1.2851794], [0.7999482, 0.2726729, 0.7471922], [0.7999482, 0.2726729, 1.6885921]], [[0.3894307, 0.1428815, 1.3110345], [0.3894307, 0.1428815, 1.3218345], [0.6374825, 0.2338913, 1.3442201], [0.6374825, 0.2338913, 1.3720202]]], [[[0.3748457, 0.1375303, 0.9461948], [0.3748457, 0.1375303, 1.0941948], [0.8179322, 0.3000980, 0.8843226], [0.8179322, 0.3000980, 1.0297226]], [[0.3762992, 0.1397469, 0.5857794], [0.3762992, 0.1397469, 0.8948793], [0.7999482, 0.2726729, 1.1105922], [0.7999482, 0.2726729, 1.0982922]], [[0.3894307, 0.1428815, 1.3053345], [0.3894307, 0.1428815, 1.0484345], [0.6374825, 0.2338913, 1.0826201], [0.6374825, 0.2338913, 0.7383202]]], [[[1.0323426, 0.3787648, 1.4830790], [1.0323426, 0.3787648, 1.3272790], [0.8084573, 0.2966216, 1.3280821], [0.8084573, 0.2966216, 0.9337821]], [[0.9430170, 0.2425454, 0.3958354], [0.9430170, 0.2425454, 1.1457353], [0.8230354, 0.3188530, 1.5767434], [1.5222854, 1.2680030, 1.4104433]], [[0.1360559, 0.0499187, 0.3168330], [0.1360559, 0.0499187, 0.6694330], [0.9547333, 0.3502901, 1.3286137], [2.8249380, 1.4191901, 1.2272137]]], [[[1.0323426, 0.3787648, 1.0927790], [1.0323426, 0.3787648, 1.4490790], [0.8084573, 0.2966216, 1.7895821], [0.8084573, 0.2966216, 1.8036821]], [[0.9430170, 0.2425454, 1.2151353], [0.9430170, 0.2425454, 0.9886354], [0.8230354, 0.3188530, 1.4944434], [1.6903354, 2.1193030, 1.8218433]], [[0.1360559, 0.0499187, 0.8813330], [0.1360559, 0.0499187, 0.1428330], [0.9547333, 0.3502901, 1.5535137], [2.3714880, 1.7085401, 1.1842137]]]]]

Expected (Unparsed): [[[[[0.37484566,0.13753026000000002,1.25499472],[0.37484566,0.13753026000000002,1.31409472],[0.81793218,0.30009798,1.53232256],[0.81793218,0.30009798,1.20542256]],[[0.37629923000000004,0.13974692,0.80747936],[0.37629923000000004,0.13974692,1.2851793599999999],[0.79994823,0.27267288,0.74719216],[0.79994823,0.27267288,1.68859216]],[[0.38943068000000003,0.14288148,1.31103456],[0.38943068000000003,0.14288148,1.32183456],[0.6374824800000001,0.23389128,1.3442201599999999],[0.6374824800000001,0.23389128,1.37202016]]],[[[0.37484566,0.13753026000000002,0.9461947199999999],[0.37484566,0.13753026000000002,1.09419472],[0.81793218,0.30009798,0.88432256],[0.81793218,0.30009798,1.02972256]],[[0.37629923000000004,0.13974692,0.58577936],[0.37629923000000004,0.13974692,0.89487936],[0.79994823,0.27267288,1.11059216],[0.79994823,0.27267288,1.09829216]],[[0.38943068000000003,0.14288148,1.30533456],[0.38943068000000003,0.14288148,1.04843456],[0.6374824800000001,0.23389128,1.08262016],[0.6374824800000001,0.23389128,0.73832016]]],[[[1.03234262,0.37876482,1.4830790399999998],[1.03234262,0.37876482,1.3272790399999999],[0.80845724,0.29662164,1.3280820799999997],[0.80845724,0.29662164,0.9337820799999998]],[[0.94301703,0.24254540000000002,0.39583535999999997],[0.94301703,0.24254540000000002,1.14573536],[0.82303538,0.31885295999999996,1.57674336],[1.52228538,1.26800296,1.41044336]],[[0.13605588,0.04991867999999999,0.31683296],[0.13605588,0.04991867999999999,0.66943296],[0.9547332800000001,0.35029008,1.32861376],[2.824938025723327,1.41919008,1.2272137600000002]]],[[[1.03234262,0.37876482,1.09277904],[1.03234262,0.37876482,1.44907904],[0.80845724,0.29662164,1.7895820799999997],[0.80845724,0.29662164,1.8036820799999997]],[[0.94301703,0.24254540000000002,1.21513536],[0.94301703,0.24254540000000002,0.98863536],[0.82303538,0.31885295999999996,1.49444336],[1.69033538,2.11930296,1.82184336]],[[0.13605588,0.04991867999999999,0.8813329599999999],[0.13605588,0.04991867999999999,0.14283295999999998],[0.9547332800000001,0.35029008,1.55351376],[2.371488033549636,1.70854008,1.18421376]]]]]

Actual:   [[[[[0.3749, 0.1376, 1.255], [0.3749, 0.1376, 1.3141], [0.818, 0.3001, 1.5324], [0.818, 0.3001, 1.2055]], [[0.3763, 0.1398, 0.8075], [0.3763, 0.1398, 1.2852], [0.8, 0.2727, 0.7472], [0.8, 0.2727, 1.6886]], [[0.3895, 0.1429, 1.3111], [0.3895, 0.1429, 1.3219], [0.6375, 0.2339, 1.3443], [0.6375, 0.2339, 1.3721]]], [[[0.3749, 0.1376, 0.9462], [0.3749, 0.1376, 1.0942], [0.818, 0.3001, 0.8844], [0.818, 0.3001, 1.0298]], [[0.3763, 0.1398, 0.5858], [0.3763, 0.1398, 0.8949], [0.8, 0.2727, 1.1106], [0.8, 0.2727, 1.0983]], [[0.3895, 0.1429, 1.3054], [0.3895, 0.1429, 1.0485], [0.6375, 0.2339, 1.0827], [0.6375, 0.2339, 0.7384]]], [[[1.0324, 0.3788, 1.4831], [1.0324, 0.3788, 1.3273], [0.8085, 0.2967, 1.3281], [0.8085, 0.2967, 0.9338]], [[0.9431, 0.2426, 0.3959], [0.9431, 0.2426, 1.1458], [0.8231, 0.3189, 1.5768], [1.5223, 1.2681, 1.4105]], [[0.1361, 0.05, 0.3169], [0.1361, 0.05, 0.6695], [0.9548, 0.3503, 1.3287], [2.825, 1.4192, 1.2273]]], [[[1.0324, 0.3788, 1.0928], [1.0324, 0.3788, 1.4491], [0.8085, 0.2967, 1.7896], [0.8085, 0.2967, 1.8037]], [[0.9431, 0.2426, 1.2152], [0.9431, 0.2426, 0.9887], [0.8231, 0.3189, 1.4945], [1.6904, 2.1194, 1.8219]], [[0.1361, 0.05, 0.8814], [0.1361, 0.05, 0.1429], [0.9548, 0.3503, 1.5536], [2.3715, 1.7086, 1.1843]]]]]

Expected: [[[[[0.3749, 0.1376, 1.255], [0.3749, 0.1376, 1.3141], [0.818, 0.3001, 1.5324], [0.818, 0.3001, 1.2055]], [[0.3763, 0.1398, 0.8075], [0.3763, 0.1398, 1.2852], [0.8, 0.2727, 0.7472], [0.8, 0.2727, 1.6886]], [[0.3895, 0.1429, 1.3111], [0.3895, 0.1429, 1.3219], [0.6375, 0.2339, 1.3443], [0.6375, 0.2339, 1.3721]]], [[[0.3749, 0.1376, 0.9462], [0.3749, 0.1376, 1.0942], [0.818, 0.3001, 0.8844], [0.818, 0.3001, 1.0298]], [[0.3763, 0.1398, 0.5858], [0.3763, 0.1398, 0.8949], [0.8, 0.2727, 1.1106], [0.8, 0.2727, 1.0983]], [[0.3895, 0.1429, 1.3054], [0.3895, 0.1429, 1.0485], [0.6375, 0.2339, 1.0827], [0.6375, 0.2339, 0.7384]]], [[[1.0324, 0.3788, 1.4831], [1.0324, 0.3788, 1.3273], [0.8085, 0.2967, 1.3281], [0.8085, 0.2967, 0.9338]], [[0.9431, 0.2426, 0.3959], [0.9431, 0.2426, 1.1458], [0.8231, 0.3189, 1.5768], [1.5223, 1.2681, 1.4105]], [[0.1361, 0.05, 0.3169], [0.1361, 0.05, 0.6695], [0.9548, 0.3503, 1.3287], [2.825, 1.4192, 1.2273]]], [[[1.0324, 0.3788, 1.0928], [1.0324, 0.3788, 1.4491], [0.8085, 0.2967, 1.7896], [0.8085, 0.2967, 1.8037]], [[0.9431, 0.2426, 1.2152], [0.9431, 0.2426, 0.9887], [0.8231, 0.3189, 1.4945], [1.6904, 2.1194, 1.8219]], [[0.1361, 0.05, 0.8814], [0.1361, 0.05, 0.1429], [0.9548, 0.3503, 1.5536], [2.3715, 1.7086, 1.1843]]]]]