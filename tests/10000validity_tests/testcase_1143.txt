import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Sim95174 = tf.keras.layers.Input(shape=([3, 3]))

Sim95174 = keras.layers.SimpleRNN(2,name = 'Sim95174', )(in0Sim95174)
Fla81472 = keras.layers.Flatten(name = 'Fla81472', )(Sim95174)
model = tf.keras.models.Model(inputs=[in0Sim95174], outputs=Fla81472)
w = model.get_layer('Sim95174').get_weights() 
w[0] = np.array([[10, 2], [2, 6], [2, 10]])
w[1] = np.array([[3, 6], [3, 8]])
w[2] = np.array([3, 4])
model.get_layer('Sim95174').set_weights(w) 
in0Sim95174 = tf.constant([[[5, 5, 5], [2, 5, 7], [2, 10, 2]]])
print (np.array2string(model.predict([in0Sim95174],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Fla81472.png')

LSim95174 = simple_rnn_layer([[[5, 5, 5], [2, 5, 7], [2, 10, 2]]],[[10, 2], [2, 6], [2, 10]],[[3, 6], [3, 8]],[3, 4], Sim95174), 
LFla81472 = flatten_layer(Sim95174, Fla81472), 
exec_layers([LSim95174,LFla81472],["Sim95174","Fla81472"],Fla81472,"Fla81472")

Actual (Unparsed): [[1.0000000, 1.0000000]]

Expected (Unparsed): [[1.0,1.0]]

Actual:   [[1, 1]]

Expected: [[1, 1]]