import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Sub71147 = tf.keras.layers.Input(shape=([2, 2]))
in1Sub71147 = tf.keras.layers.Input(shape=([2, 2]))
in0Add60684 = tf.keras.layers.Input(shape=([1, 1]))
in1Add60684 = tf.keras.layers.Input(shape=([1, 1]))
in0Con13898 = tf.keras.layers.Input(shape=([2, 1]))
in0Con67159 = tf.keras.layers.Input(shape=([2, 6, 2]))
in0Max67695 = tf.keras.layers.Input(shape=([2, 2, 2, 2]))
in1Max67695 = tf.keras.layers.Input(shape=([2, 2, 2, 2]))

Sub71147 = keras.layers.Subtract(name = 'Sub71147', )([in0Sub71147,in1Sub71147])
Add60684 = keras.layers.Add(name = 'Add60684', )([in0Add60684,in1Add60684])
ReL69963 = keras.layers.ReLU(max_value=9.057358442832522, negative_slope=7.126257240726775, threshold=6.17350033719293, name = 'ReL69963', )(Add60684)
Zer95910 = keras.layers.ZeroPadding1D(padding=((1, 0)), name = 'Zer95910', )(ReL69963)
Con13898 = keras.layers.Concatenate(axis=2, name = 'Con13898', )([Zer95910,in0Con13898])
Max99119 = keras.layers.Maximum(name = 'Max99119', )([Sub71147,Con13898])
Res24362 = keras.layers.Reshape((2, 2, 1), name = 'Res24362', )(Max99119)
Zer81992 = keras.layers.ZeroPadding2D(padding=((0, 0), (4, 0)), name = 'Zer81992', )(Res24362)
Con67159 = keras.layers.Concatenate(axis=3, name = 'Con67159', )([Zer81992,in0Con67159])
Max67695 = keras.layers.Maximum(name = 'Max67695', )([in0Max67695,in1Max67695])
Res72863 = keras.layers.Reshape((2, 2, 4), name = 'Res72863', )(Max67695)
Res70275 = keras.layers.Reshape((2, 8), name = 'Res70275', )(Res72863)
Up_37836 = keras.layers.UpSampling1D(size=(2), name = 'Up_37836', )(Res70275)
Res26547 = keras.layers.Reshape((4, 8, 1), name = 'Res26547', )(Up_37836)
Loc24994 = keras.layers.LocallyConnected2D(3, (3, 5),strides=(3, 1), name = 'Loc24994', )(Res26547)
Zer68071 = keras.layers.ZeroPadding2D(padding=((1, 0), (2, 0)), name = 'Zer68071', )(Loc24994)
Min44771 = keras.layers.Minimum(name = 'Min44771', )([Con67159,Zer68071])
model = tf.keras.models.Model(inputs=[in0Sub71147,in1Sub71147,in0Add60684,in1Add60684,in0Con13898,in0Con67159,in0Max67695,in1Max67695], outputs=Min44771)
w = model.get_layer('Loc24994').get_weights() 
w[0] = np.array([[[0.4988, 0.4106, 0.7166], [0.4459, 0.8178, 0.634], [0.2361, 0.9643, 0.8072], [0.3652, 0.1838, 0.0417], [0.4397, 0.6831, 0.8534], [0.0654, 0.4933, 0.8352], [0.15, 0.9586, 0.9713], [0.5736, 0.5675, 0.6814], [0.5064, 0.1732, 0.7432], [0.2692, 0.3032, 0.2527], [0.2284, 0.8516, 0.6008], [0.2351, 0.1848, 0.0809], [0.603, 0.7878, 0.8201], [0.6642, 0.312, 0.8635], [0.5101, 0.2435, 0.7313]], [[0.0262, 0.7181, 0.6948], [0.4545, 0.5925, 0.021], [0.0284, 0.7452, 0.7433], [0.7769, 0.4656, 0.834], [0.169, 0.2282, 0.9374], [0.3031, 0.9994, 0.1266], [0.2076, 0.1136, 0.7392], [0.2837, 0.054, 0.0408], [0.6805, 0.8063, 0.4645], [0.0266, 0.7982, 0.1598], [0.5947, 0.2316, 0.4435], [0.614, 0.3204, 0.3767], [0.2501, 0.0779, 0.5725], [0.2992, 0.5398, 0.802], [0.2882, 0.5178, 0.175]], [[0.9396, 0.7317, 0.9995], [0.2395, 0.4961, 0.1437], [0.2536, 0.1538, 0.7669], [0.1643, 0.3367, 0.8288], [0.9688, 0.2393, 0.3498], [0.2442, 0.4017, 0.2684], [0.5306, 0.4035, 0.1428], [0.0842, 0.0988, 0.9592], [0.9724, 0.9583, 0.6027], [0.931, 0.9575, 0.2254], [0.6297, 0.8439, 0.8784], [0.2874, 0.3953, 0.3039], [0.4735, 0.7142, 0.9042], [0.4983, 0.298, 0.8929], [0.0913, 0.3568, 0.8468]], [[0.6942, 0.5898, 0.1446], [0.473, 0.9229, 0.5521], [0.0703, 0.5505, 0.8958], [0.2523, 0.0859, 0.2747], [0.3567, 0.037, 0.4343], [0.4727, 0.0716, 0.5583], [0.6541, 0.8038, 0.8776], [0.1241, 0.6926, 0.77], [0.6587, 0.4295, 0.4953], [0.0296, 0.7081, 0.8963], [0.9429, 0.6058, 0.2034], [0.3403, 0.2891, 0.7215], [0.0694, 0.7103, 0.3131], [0.1507, 0.3314, 0.1996], [0.2507, 0.1769, 0.1729]]])
w[1] = np.array([[[0, 0, 0], [0, 0, 0], [0, 0, 0], [0, 0, 0]]])
model.get_layer('Loc24994').set_weights(w) 
in0Sub71147 = tf.constant([[[0.1632, 0.9635], [0.4116, 0.8776]]])
in1Sub71147 = tf.constant([[[0.9886, 0.391], [0.1121, 0.4982]]])
in0Add60684 = tf.constant([[[0.8663]]])
in1Add60684 = tf.constant([[[0.0785]]])
in0Con13898 = tf.constant([[[0.8972], [0.37]]])
in0Con67159 = tf.constant([[[[0.2842, 0.2554], [0.609, 0.2913], [0.6515, 0.2134], [0.3407, 0.5767], [0.4543, 0.5937], [0.0942, 0.3731]], [[0.9952, 0.2932], [0.2012, 0.468], [0.9936, 0.1807], [0.314, 0.2912], [0.1081, 0.2416], [0.3289, 0.8064]]]])
in0Max67695 = tf.constant([[[[[0.4817, 0.3204], [0.5448, 0.5888]], [[0.5936, 0.2551], [0.8744, 0.6079]]], [[[0.1704, 0.3585], [0.5953, 0.5227]], [[0.2478, 0.4159], [0.1807, 0.9987]]]]])
in1Max67695 = tf.constant([[[[[0.474, 0.956], [0.3772, 0.3147]], [[0.746, 0.4973], [0.9568, 0.8689]]], [[[0.39, 0.7495], [0.5917, 0.7088]], [[0.6362, 0.6965], [0.6948, 0.1582]]]]])
print (np.array2string(model.predict([in0Sub71147,in1Sub71147,in0Add60684,in1Add60684,in0Con13898,in0Con67159,in0Max67695,in1Max67695],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Min44771.png')

LSub71147 = subtract_layer([[[0.1632, 0.9635], [0.4116, 0.8776]]], [[[0.9886, 0.391], [0.1121, 0.4982]]], Sub71147), 
LAdd60684 = add_layer([[[[0.8663]]], [[[0.0785]]]], Add60684), 
LReL69963 = relu_layer(Add60684, 9.057358442832522, 7.126257240726775, 6.17350033719293, ReL69963), 
LZer95910 = zero_padding1D_layer(ReL69963, 1, 0, Zer95910), 
LCon13898 = concatenate_layer([Zer95910,[[[0.8972], [0.37]]]], 2, Con13898), 
LMax99119 = maximum_layer([Sub71147,Con13898], Max99119), 
LRes24362 = reshape_layer(Max99119, [2, 2, 1], Res24362), 
LZer81992 = zero_padding2D_layer(Res24362, 0, 0, 4, 0, Zer81992), 
LCon67159 = concatenate_layer([Zer81992,[[[[0.2842, 0.2554], [0.609, 0.2913], [0.6515, 0.2134], [0.3407, 0.5767], [0.4543, 0.5937], [0.0942, 0.3731]], [[0.9952, 0.2932], [0.2012, 0.468], [0.9936, 0.1807], [0.314, 0.2912], [0.1081, 0.2416], [0.3289, 0.8064]]]]], 3, Con67159), 
LMax67695 = maximum_layer([[[[[[0.4817, 0.3204], [0.5448, 0.5888]], [[0.5936, 0.2551], [0.8744, 0.6079]]], [[[0.1704, 0.3585], [0.5953, 0.5227]], [[0.2478, 0.4159], [0.1807, 0.9987]]]]], [[[[[0.474, 0.956], [0.3772, 0.3147]], [[0.746, 0.4973], [0.9568, 0.8689]]], [[[0.39, 0.7495], [0.5917, 0.7088]], [[0.6362, 0.6965], [0.6948, 0.1582]]]]]], Max67695), 
LRes72863 = reshape_layer(Max67695, [2, 2, 4], Res72863), 
LRes70275 = reshape_layer(Res72863, [2, 8], Res70275), 
LUp_37836 = up_sampling1D_layer(Res70275, 2, Up_37836), 
LRes26547 = reshape_layer(Up_37836, [4, 8, 1], Res26547), 
LLoc24994 = locally_connected2D_layer(Res26547, 3, 5,[[[0.4988, 0.4106, 0.7166], [0.4459, 0.8178, 0.634], [0.2361, 0.9643, 0.8072], [0.3652, 0.1838, 0.0417], [0.4397, 0.6831, 0.8534], [0.0654, 0.4933, 0.8352], [0.15, 0.9586, 0.9713], [0.5736, 0.5675, 0.6814], [0.5064, 0.1732, 0.7432], [0.2692, 0.3032, 0.2527], [0.2284, 0.8516, 0.6008], [0.2351, 0.1848, 0.0809], [0.603, 0.7878, 0.8201], [0.6642, 0.312, 0.8635], [0.5101, 0.2435, 0.7313]], [[0.0262, 0.7181, 0.6948], [0.4545, 0.5925, 0.021], [0.0284, 0.7452, 0.7433], [0.7769, 0.4656, 0.834], [0.169, 0.2282, 0.9374], [0.3031, 0.9994, 0.1266], [0.2076, 0.1136, 0.7392], [0.2837, 0.054, 0.0408], [0.6805, 0.8063, 0.4645], [0.0266, 0.7982, 0.1598], [0.5947, 0.2316, 0.4435], [0.614, 0.3204, 0.3767], [0.2501, 0.0779, 0.5725], [0.2992, 0.5398, 0.802], [0.2882, 0.5178, 0.175]], [[0.9396, 0.7317, 0.9995], [0.2395, 0.4961, 0.1437], [0.2536, 0.1538, 0.7669], [0.1643, 0.3367, 0.8288], [0.9688, 0.2393, 0.3498], [0.2442, 0.4017, 0.2684], [0.5306, 0.4035, 0.1428], [0.0842, 0.0988, 0.9592], [0.9724, 0.9583, 0.6027], [0.931, 0.9575, 0.2254], [0.6297, 0.8439, 0.8784], [0.2874, 0.3953, 0.3039], [0.4735, 0.7142, 0.9042], [0.4983, 0.298, 0.8929], [0.0913, 0.3568, 0.8468]], [[0.6942, 0.5898, 0.1446], [0.473, 0.9229, 0.5521], [0.0703, 0.5505, 0.8958], [0.2523, 0.0859, 0.2747], [0.3567, 0.037, 0.4343], [0.4727, 0.0716, 0.5583], [0.6541, 0.8038, 0.8776], [0.1241, 0.6926, 0.77], [0.6587, 0.4295, 0.4953], [0.0296, 0.7081, 0.8963], [0.9429, 0.6058, 0.2034], [0.3403, 0.2891, 0.7215], [0.0694, 0.7103, 0.3131], [0.1507, 0.3314, 0.1996], [0.2507, 0.1769, 0.1729]]],[[[0, 0, 0], [0, 0, 0], [0, 0, 0], [0, 0, 0]]], 3, 1, Loc24994), 
LZer68071 = zero_padding2D_layer(Loc24994, 1, 0, 2, 0, Zer68071), 
LMin44771 = minimum_layer([Con67159,Zer68071], Min44771), 
exec_layers([LSub71147,LAdd60684,LReL69963,LZer95910,LCon13898,LMax99119,LRes24362,LZer81992,LCon67159,LMax67695,LRes72863,LRes70275,LUp_37836,LRes26547,LLoc24994,LZer68071,LMin44771],["Sub71147","Add60684","ReL69963","Zer95910","Con13898","Max99119","Res24362","Zer81992","Con67159","Max67695","Res72863","Res70275","Up_37836","Res26547","Loc24994","Zer68071","Min44771"],Min44771,"Min44771")

Actual (Unparsed): [[[[0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000]], [[0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.9936000, 0.1807000], [0.0000000, 0.3140000, 0.2912000], [0.2995000, 0.1081000, 0.2416000], [0.3794000, 0.3289000, 0.8064000]]]]

Expected (Unparsed): [[[[0,0,0],[0,0,0],[0,0,0],[0,0,0],[0,0,0],[0,0,0]],[[0,0,0],[0,0,0],[0,0.9936,0.1807],[0,0.314,0.2912],[0.2995,0.1081,0.2416],[0.37940000000000007,0.3289,0.8064]]]]

Actual:   [[[[0, 0, 0], [0, 0, 0], [0, 0, 0], [0, 0, 0], [0, 0, 0], [0, 0, 0]], [[0, 0, 0], [0, 0, 0], [0, 0.9936, 0.1807], [0, 0.314, 0.2912], [0.2995, 0.1081, 0.2416], [0.3794, 0.3289, 0.8064]]]]

Expected: [[[[0, 0, 0], [0, 0, 0], [0, 0, 0], [0, 0, 0], [0, 0, 0], [0, 0, 0]], [[0, 0, 0], [0, 0, 0], [0, 0.9936, 0.1807], [0, 0.314, 0.2912], [0.2995, 0.1081, 0.2416], [0.3795, 0.3289, 0.8064]]]]