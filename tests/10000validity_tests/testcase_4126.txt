import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Add28345 = tf.keras.layers.Input(shape=([2, 2, 2]))
in1Add28345 = tf.keras.layers.Input(shape=([2, 2, 2]))
in0Max5591 = tf.keras.layers.Input(shape=([1, 1, 2]))
in1Max5591 = tf.keras.layers.Input(shape=([1, 1, 2]))
in0Add85660 = tf.keras.layers.Input(shape=([2, 1, 2]))
in1Add85660 = tf.keras.layers.Input(shape=([2, 1, 2]))
in0Sof96232 = tf.keras.layers.Input(shape=([2, 1, 2, 1]))

Add28345 = keras.layers.Add(name = 'Add28345', )([in0Add28345,in1Add28345])
Max5591 = keras.layers.Maximum(name = 'Max5591', )([in0Max5591,in1Max5591])
Zer49570 = keras.layers.ZeroPadding2D(padding=((1, 0), (1, 0)), name = 'Zer49570', )(Max5591)
Max56428 = keras.layers.Maximum(name = 'Max56428', )([Add28345,Zer49570])
Res24030 = keras.layers.Reshape((2, 2, 2, 1), name = 'Res24030', )(Max56428)
Add85660 = keras.layers.Add(name = 'Add85660', )([in0Add85660,in1Add85660])
Res43942 = keras.layers.Reshape((2, 1, 2, 1), name = 'Res43942', )(Add85660)
Sof96232 = keras.layers.Softmax(axis=1, name = 'Sof96232', input_shape=(2, 1, 2, 1))(in0Sof96232)
Mul14999 = keras.layers.Multiply(name = 'Mul14999', )([Res43942,Sof96232])
Zer13527 = keras.layers.ZeroPadding3D(padding=((0, 0), (1, 0), (0, 0)), name = 'Zer13527', )(Mul14999)
Ave64813 = keras.layers.Average(name = 'Ave64813', )([Res24030,Zer13527])
model = tf.keras.models.Model(inputs=[in0Add28345,in1Add28345,in0Max5591,in1Max5591,in0Add85660,in1Add85660,in0Sof96232], outputs=Ave64813)
in0Add28345 = tf.constant([[[[0.0421, 0.9887], [0.6903, 0.925]], [[0.6003, 0.3444], [0.4945, 0.6006]]]])
in1Add28345 = tf.constant([[[[0.4168, 0.6602], [0.5843, 0.4051]], [[0.3102, 0.386], [0.5715, 0.0105]]]])
in0Max5591 = tf.constant([[[[0.7619, 0.4585]]]])
in1Max5591 = tf.constant([[[[0.4152, 0.9919]]]])
in0Add85660 = tf.constant([[[[0.7556, 0.4275]], [[0.1709, 0.4344]]]])
in1Add85660 = tf.constant([[[[0.4514, 0.6924]], [[0.4977, 0.3897]]]])
in0Sof96232 = tf.constant([[[[[0.3128], [0.7806]]], [[[0.3351], [0.681]]]]])
print (np.array2string(model.predict([in0Add28345,in1Add28345,in0Max5591,in1Max5591,in0Add85660,in1Add85660,in0Sof96232],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Ave64813.png')

LAdd28345 = add_layer([[[[[0.0421, 0.9887], [0.6903, 0.925]], [[0.6003, 0.3444], [0.4945, 0.6006]]]], [[[[0.4168, 0.6602], [0.5843, 0.4051]], [[0.3102, 0.386], [0.5715, 0.0105]]]]], Add28345), 
LMax5591 = maximum_layer([[[[[0.7619, 0.4585]]]], [[[[0.4152, 0.9919]]]]], Max5591), 
LZer49570 = zero_padding2D_layer(Max5591, 1, 0, 1, 0, Zer49570), 
LMax56428 = maximum_layer([Add28345,Zer49570], Max56428), 
LRes24030 = reshape_layer(Max56428, [2, 2, 2, 1], Res24030), 
LAdd85660 = add_layer([[[[[0.7556, 0.4275]], [[0.1709, 0.4344]]]], [[[[0.4514, 0.6924]], [[0.4977, 0.3897]]]]], Add85660), 
LRes43942 = reshape_layer(Add85660, [2, 1, 2, 1], Res43942), 
LSof96232 = softmax_layer([[[[[0.3128], [0.7806]]], [[[0.3351], [0.681]]]]], 1, Sof96232), 
LMul14999 = multiply_layer([Res43942,Sof96232], Mul14999), 
LZer13527 = zero_padding3D_layer(Mul14999, 0, 0, 1, 0, 0, 0, Zer13527), 
LAve64813 = average_layer([Res24030,Zer13527], Ave64813), 
exec_layers([LAdd28345,LMax5591,LZer49570,LMax56428,LRes24030,LAdd85660,LRes43942,LSof96232,LMul14999,LZer13527,LAve64813],["Add28345","Max5591","Zer49570","Max56428","Res24030","Add85660","Res43942","Sof96232","Mul14999","Zer13527","Ave64813"],Ave64813,"Ave64813")

Actual (Unparsed): [[[[[0.2294500], [0.8244500]], [[0.9356856], [0.9589562]]], [[[0.4552500], [0.3652000]], [[0.7020137], [0.6917234]]]]]

Expected (Unparsed): [[[[[0.22945],[0.82445]],[[0.9356856269212686],[0.9589562402260017]]],[[[0.45524999999999993],[0.36519999999999997]],[[0.7020136452696271],[0.6917234283683829]]]]]

Actual:   [[[[[0.2295], [0.8245]], [[0.9357], [0.959]]], [[[0.4553], [0.3652]], [[0.7021], [0.6918]]]]]

Expected: [[[[[0.2295], [0.8245]], [[0.9357], [0.959]]], [[[0.4553], [0.3652]], [[0.7021], [0.6918]]]]]