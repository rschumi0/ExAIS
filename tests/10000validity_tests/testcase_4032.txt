import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Up_74000 = tf.keras.layers.Input(shape=([2, 3, 3, 2]))
in0Con74644 = tf.keras.layers.Input(shape=([18, 1]))
in0Max39252 = tf.keras.layers.Input(shape=([1, 2]))

Up_74000 = keras.layers.UpSampling3D(size=(2, 1, 1), name = 'Up_74000', )(in0Up_74000)
Res37154 = keras.layers.Reshape((4, 3, 6), name = 'Res37154', )(Up_74000)
Res97200 = keras.layers.Reshape((4, 18), name = 'Res97200', )(Res37154)
Glo133 = keras.layers.GlobalMaxPool1D(name = 'Glo133', )(Res97200)
Res36333 = keras.layers.Reshape((18, 1), name = 'Res36333', )(Glo133)
Con74644 = keras.layers.Concatenate(axis=2, name = 'Con74644', )([Res36333,in0Con74644])
Max39252 = keras.layers.MaxPool1D(pool_size=(1), strides=(3), padding='valid', name = 'Max39252', )(in0Max39252)
Zer62607 = keras.layers.ZeroPadding1D(padding=((17, 0)), name = 'Zer62607', )(Max39252)
Mul15670 = keras.layers.Multiply(name = 'Mul15670', )([Con74644,Zer62607])
model = tf.keras.models.Model(inputs=[in0Up_74000,in0Con74644,in0Max39252], outputs=Mul15670)
in0Up_74000 = tf.constant([[[[[1.8838, 1.4754], [1.8032, 1.7378], [1.2221, 1.4828]], [[1.3468, 1.1659], [1.9744, 1.5391], [1.5645, 1.551]], [[1.818, 1.52], [1.7396, 1.7084], [1.3178, 1.0151]]], [[[1.1184, 1.4441], [1.7645, 1.9781], [1.6591, 1.0218]], [[1.557, 1.2671], [1.0566, 1.6037], [1.5818, 1.0622]], [[1.4614, 1.0562], [1.7588, 1.8042], [1.2282, 1.4993]]]]])
in0Con74644 = tf.constant([[[0.247], [0.5874], [0.2779], [0.922], [0.8563], [0.6217], [0.6534], [0.3835], [0.0863], [0.974], [0.1589], [0.8652], [0.9189], [0.7019], [0.9187], [0.9551], [0.5309], [0.5526]]])
in0Max39252 = tf.constant([[[1.2951, 1.8686]]])
print (np.array2string(model.predict([in0Up_74000,in0Con74644,in0Max39252],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Mul15670.png')

LUp_74000 = up_sampling3D_layer([[[[[1.8838, 1.4754], [1.8032, 1.7378], [1.2221, 1.4828]], [[1.3468, 1.1659], [1.9744, 1.5391], [1.5645, 1.551]], [[1.818, 1.52], [1.7396, 1.7084], [1.3178, 1.0151]]], [[[1.1184, 1.4441], [1.7645, 1.9781], [1.6591, 1.0218]], [[1.557, 1.2671], [1.0566, 1.6037], [1.5818, 1.0622]], [[1.4614, 1.0562], [1.7588, 1.8042], [1.2282, 1.4993]]]]], 2, 1, 1, Up_74000), 
LRes37154 = reshape_layer(Up_74000, [4, 3, 6], Res37154), 
LRes97200 = reshape_layer(Res37154, [4, 18], Res97200), 
LGlo133 = global_max_pool1D_layer(Res97200, Glo133), 
LRes36333 = reshape_layer(Glo133, [18, 1], Res36333), 
LCon74644 = concatenate_layer([Res36333,[[[0.247], [0.5874], [0.2779], [0.922], [0.8563], [0.6217], [0.6534], [0.3835], [0.0863], [0.974], [0.1589], [0.8652], [0.9189], [0.7019], [0.9187], [0.9551], [0.5309], [0.5526]]]], 2, Con74644), 
LMax39252 = max_pool1D_layer([[[1.2951, 1.8686]]], 1, 3, false, Max39252), 
LZer62607 = zero_padding1D_layer(Max39252, 17, 0, Zer62607), 
LMul15670 = multiply_layer([Con74644,Zer62607], Mul15670), 
exec_layers([LUp_74000,LRes37154,LRes97200,LGlo133,LRes36333,LCon74644,LMax39252,LZer62607,LMul15670],["Up_74000","Res37154","Res97200","Glo133","Res36333","Con74644","Max39252","Zer62607","Mul15670"],Mul15670,"Mul15670")

Actual (Unparsed): [[[0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000], [1.9417434, 1.0325884]]]

Expected (Unparsed): [[[0.0,0.0],[0.0,0.0],[0.0,0.0],[0.0,0.0],[0.0,0.0],[0.0,0.0],[0.0,0.0],[0.0,0.0],[0.0,0.0],[0.0,0.0],[0.0,0.0],[0.0,0.0],[0.0,0.0],[0.0,0.0],[0.0,0.0],[0.0,0.0],[0.0,0.0],[1.94174343,1.03258836]]]

Actual:   [[[0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [1.9418, 1.0326]]]

Expected: [[[0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [1.9418, 1.0326]]]