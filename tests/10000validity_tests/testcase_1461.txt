import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Max80403 = tf.keras.layers.Input(shape=([1, 2, 1, 2]))
in1Max80403 = tf.keras.layers.Input(shape=([1, 2, 1, 2]))
in0Up_81740 = tf.keras.layers.Input(shape=([4, 1, 2]))
in0Con59254 = tf.keras.layers.Input(shape=([3, 1]))
in0Con65785 = tf.keras.layers.Input(shape=([3, 4]))
in0Min74115 = tf.keras.layers.Input(shape=([2, 2, 2, 2]))
in1Min74115 = tf.keras.layers.Input(shape=([2, 2, 2, 2]))

Max80403 = keras.layers.Maximum(name = 'Max80403', )([in0Max80403,in1Max80403])
Thr39888 = keras.layers.ThresholdedReLU(theta=1.51736973162051, name = 'Thr39888', )(Max80403)
Res91918 = keras.layers.Reshape((1, 2, 2), name = 'Res91918', )(Thr39888)
Res66606 = keras.layers.Reshape((1, 4), name = 'Res66606', )(Res91918)
Zer16382 = keras.layers.ZeroPadding1D(padding=((2, 0)), name = 'Zer16382', )(Res66606)
Up_81740 = keras.layers.UpSampling2D(size=(2, 1), name = 'Up_81740', )(in0Up_81740)
Res98147 = keras.layers.Reshape((8, 2), name = 'Res98147', )(Up_81740)
Sep25074 = keras.layers.SeparableConv1D(3, (6),strides=(1), padding='valid', name = 'Sep25074', )(Res98147)
Con59254 = keras.layers.Concatenate(axis=2, name = 'Con59254', )([Sep25074,in0Con59254])
Mul36798 = keras.layers.Multiply(name = 'Mul36798', )([Zer16382,Con59254])
Con65785 = keras.layers.Concatenate(axis=2, name = 'Con65785', )([Mul36798,in0Con65785])
Min74115 = keras.layers.Minimum(name = 'Min74115', )([in0Min74115,in1Min74115])
Res13588 = keras.layers.Reshape((2, 2, 4), name = 'Res13588', )(Min74115)
Res1694 = keras.layers.Reshape((2, 8), name = 'Res1694', )(Res13588)
ELU67006 = keras.layers.ELU(alpha=1.0745688965795637, name = 'ELU67006', )(Res1694)
Zer24981 = keras.layers.ZeroPadding1D(padding=((1, 0)), name = 'Zer24981', )(ELU67006)
Max41989 = keras.layers.Maximum(name = 'Max41989', )([Con65785,Zer24981])
model = tf.keras.models.Model(inputs=[in0Max80403,in1Max80403,in0Up_81740,in0Con59254,in0Con65785,in0Min74115,in1Min74115], outputs=Max41989)
w = model.get_layer('Sep25074').get_weights() 
w[0] = np.array([[[0.5997], [0.0984]], [[0.2977], [0.7386]], [[0.0889], [0.2555]], [[0.0148], [0.5613]], [[0.633], [0.8177]], [[0.8125], [0.2761]]])
w[1] = np.array([[[0.117, 0.548, 0.3157], [0.7066, 0.6594, 0.1168]]])
w[2] = np.array([0, 0, 0])
model.get_layer('Sep25074').set_weights(w) 
in0Max80403 = tf.constant([[[[[0.3649, 0.8407]], [[0.577, 0.0931]]]]])
in1Max80403 = tf.constant([[[[[0.0087, 0.4195]], [[0.8129, 0.9919]]]]])
in0Up_81740 = tf.constant([[[[1.9506, 1.4756]], [[1.2858, 1.0635]], [[1.6139, 1.8268]], [[1.8548, 1.3481]]]])
in0Con59254 = tf.constant([[[0.893], [0.5934], [0.8541]]])
in0Con65785 = tf.constant([[[0.3156, 0.8723, 0.8283, 0.4168], [0.8232, 0.8096, 0.3273, 0.1517], [0.031, 0.9893, 0.5973, 0.3622]]])
in0Min74115 = tf.constant([[[[[0.224, 0.4562], [0.7002, 0.6577]], [[0.3181, 0.1], [0.1564, 0.7495]]], [[[0.4457, 0.2084], [0.54, 0.856]], [[0.5727, 0.684], [0.6875, 0.9383]]]]])
in1Min74115 = tf.constant([[[[[0.2878, 0.8117], [0.2811, 0.1414]], [[0.2304, 0.008], [0.3825, 0.441]]], [[[0.0666, 0.9262], [0.0634, 0.8721]], [[0.4824, 0.5889], [0.9906, 0.1263]]]]])
print (np.array2string(model.predict([in0Max80403,in1Max80403,in0Up_81740,in0Con59254,in0Con65785,in0Min74115,in1Min74115],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Max41989.png')

LMax80403 = maximum_layer([[[[[[0.3649, 0.8407]], [[0.577, 0.0931]]]]], [[[[[0.0087, 0.4195]], [[0.8129, 0.9919]]]]]], Max80403), 
LThr39888 = thresholded_relu_layer(Max80403, 1.51736973162051, Thr39888), 
LRes91918 = reshape_layer(Thr39888, [1, 2, 2], Res91918), 
LRes66606 = reshape_layer(Res91918, [1, 4], Res66606), 
LZer16382 = zero_padding1D_layer(Res66606, 2, 0, Zer16382), 
LUp_81740 = up_sampling2D_layer([[[[1.9506, 1.4756]], [[1.2858, 1.0635]], [[1.6139, 1.8268]], [[1.8548, 1.3481]]]], 2, 1, Up_81740), 
LRes98147 = reshape_layer(Up_81740, [8, 2], Res98147), 
LSep25074 = separable_conv1D_layer(Res98147, 6,[[[[0.5997], [0.0984]], [[0.2977], [0.7386]], [[0.0889], [0.2555]], [[0.0148], [0.5613]], [[0.633], [0.8177]], [[0.8125], [0.2761]]],[[[0.117, 0.548, 0.3157], [0.7066, 0.6594, 0.1168]]]],[0, 0, 0], 1, false, Sep25074), 
LCon59254 = concatenate_layer([Sep25074,[[[0.893], [0.5934], [0.8541]]]], 2, Con59254), 
LMul36798 = multiply_layer([Zer16382,Con59254], Mul36798), 
LCon65785 = concatenate_layer([Mul36798,[[[0.3156, 0.8723, 0.8283, 0.4168], [0.8232, 0.8096, 0.3273, 0.1517], [0.031, 0.9893, 0.5973, 0.3622]]]], 2, Con65785), 
LMin74115 = minimum_layer([[[[[[0.224, 0.4562], [0.7002, 0.6577]], [[0.3181, 0.1], [0.1564, 0.7495]]], [[[0.4457, 0.2084], [0.54, 0.856]], [[0.5727, 0.684], [0.6875, 0.9383]]]]], [[[[[0.2878, 0.8117], [0.2811, 0.1414]], [[0.2304, 0.008], [0.3825, 0.441]]], [[[0.0666, 0.9262], [0.0634, 0.8721]], [[0.4824, 0.5889], [0.9906, 0.1263]]]]]], Min74115), 
LRes13588 = reshape_layer(Min74115, [2, 2, 4], Res13588), 
LRes1694 = reshape_layer(Res13588, [2, 8], Res1694), 
LELU67006 = elu_layer(Res1694, 1.0745688965795637, ELU67006), 
LZer24981 = zero_padding1D_layer(ELU67006, 1, 0, Zer24981), 
LMax41989 = maximum_layer([Con65785,Zer24981], Max41989), 
exec_layers([LMax80403,LThr39888,LRes91918,LRes66606,LZer16382,LUp_81740,LRes98147,LSep25074,LCon59254,LMul36798,LCon65785,LMin74115,LRes13588,LRes1694,LELU67006,LZer24981,LMax41989],["Max80403","Thr39888","Res91918","Res66606","Zer16382","Up_81740","Res98147","Sep25074","Con59254","Mul36798","Con65785","Min74115","Res13588","Res1694","ELU67006","Zer24981","Max41989"],Max41989,"Max41989")

Actual (Unparsed): [[[0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.3156000, 0.8723000, 0.8283000, 0.4168000], [0.2240000, 0.4562000, 0.2811000, 0.1414000, 0.8232000, 0.8096000, 0.3273000, 0.4410000], [0.0666000, 0.2084000, 0.0634000, 0.8560000, 0.4824000, 0.9893000, 0.6875000, 0.3622000]]]

Expected (Unparsed): [[[0.0,0.0,0.0,0.0,0.3156,0.8723,0.8283,0.4168],[0.224,0.4562,0.2811,0.1414,0.8232,0.8096,0.3273,0.441],[0.0666,0.2084,0.0634,0.856,0.4824,0.9893,0.6875,0.3622]]]

Actual:   [[[0, 0, 0, 0, 0.3156, 0.8723, 0.8283, 0.4168], [0.224, 0.4562, 0.2811, 0.1414, 0.8232, 0.8096, 0.3273, 0.441], [0.0666, 0.2084, 0.0634, 0.856, 0.4824, 0.9893, 0.6875, 0.3622]]]

Expected: [[[0, 0, 0, 0, 0.3156, 0.8723, 0.8283, 0.4168], [0.224, 0.4562, 0.2811, 0.1414, 0.8232, 0.8096, 0.3273, 0.441], [0.0666, 0.2084, 0.0634, 0.856, 0.4824, 0.9893, 0.6875, 0.3622]]]