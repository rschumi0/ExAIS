import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Add19772 = tf.keras.layers.Input(shape=([1, 2]))
in1Add19772 = tf.keras.layers.Input(shape=([1, 2]))
in0Dot10673 = tf.keras.layers.Input(shape=([2, 2]))
in1Dot10673 = tf.keras.layers.Input(shape=([2, 2]))

Add19772 = keras.layers.Add(name = 'Add19772', )([in0Add19772,in1Add19772])
Zer19922 = keras.layers.ZeroPadding1D(padding=((1, 0)), name = 'Zer19922', )(Add19772)
Dot10673 = keras.layers.Dot(axes=(2, 2), name = 'Dot10673', )([in0Dot10673,in1Dot10673])
Min38521 = keras.layers.Minimum(name = 'Min38521', )([Zer19922,Dot10673])
model = tf.keras.models.Model(inputs=[in0Add19772,in1Add19772,in0Dot10673,in1Dot10673], outputs=Min38521)
in0Add19772 = tf.constant([[[0.7788, 0.364]]])
in1Add19772 = tf.constant([[[0.6851, 0.9092]]])
in0Dot10673 = tf.constant([[[0.7144, 0.4391], [0.1831, 0.4413]]])
in1Dot10673 = tf.constant([[[0.5435, 0.9314], [0.2281, 0.09]]])
print (np.array2string(model.predict([in0Add19772,in1Add19772,in0Dot10673,in1Dot10673],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Min38521.png')

LAdd19772 = add_layer([[[[0.7788, 0.364]]], [[[0.6851, 0.9092]]]], Add19772), 
LZer19922 = zero_padding1D_layer(Add19772, 1, 0, Zer19922), 
LDot10673 = dot_layer([[[0.7144, 0.4391], [0.1831, 0.4413]]], [[[0.5435, 0.9314], [0.2281, 0.09]]], 2, 2, Dot10673), 
LMin38521 = minimum_layer([Zer19922,Dot10673], Min38521), 
exec_layers([LAdd19772,LZer19922,LDot10673,LMin38521],["Add19772","Zer19922","Dot10673","Min38521"],Min38521,"Min38521")

Actual (Unparsed): [[[0.0000000, 0.0000000], [0.5105417, 0.0814821]]]

Expected (Unparsed): [[[0,0],[0.5105416700000001,0.08148211]]]

Actual:   [[[0, 0], [0.5106, 0.0815]]]

Expected: [[[0, 0], [0.5106, 0.0815]]]