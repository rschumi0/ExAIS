import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Con82948 = tf.keras.layers.Input(shape=([1, 1]))

Con82948 = keras.layers.Conv1D(2, (1),strides=(1), padding='same', dilation_rate=(1), name = 'Con82948', )(in0Con82948)
Sep69114 = keras.layers.SeparableConv1D(3, (1),strides=(1), padding='same', name = 'Sep69114', )(Con82948)
Res68537 = keras.layers.Reshape((1, 3, 1), name = 'Res68537', )(Sep69114)
Up_13251 = keras.layers.UpSampling2D(size=(1, 2), name = 'Up_13251', )(Res68537)
model = tf.keras.models.Model(inputs=[in0Con82948], outputs=Up_13251)
w = model.get_layer('Con82948').get_weights() 
w[0] = np.array([[[0.4002, 0.5098]]])
w[1] = np.array([0, 0])
model.get_layer('Con82948').set_weights(w) 
w = model.get_layer('Sep69114').get_weights() 
w[0] = np.array([[[0.0178], [0.0992]]])
w[1] = np.array([[[0.7818, 0.3439, 0.0694], [0.6056, 0.437, 0.4258]]])
w[2] = np.array([0, 0, 0])
model.get_layer('Sep69114').set_weights(w) 
in0Con82948 = tf.constant([[[0.0654]]])
print (np.array2string(model.predict([in0Con82948],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Up_13251.png')

LCon82948 = conv1D_layer([[[0.0654]]], 1,[[[0.4002, 0.5098]]],[0, 0], 1, true, 1, Con82948), 
LSep69114 = separable_conv1D_layer(Con82948, 1,[[[[0.0178], [0.0992]]],[[[0.7818, 0.3439, 0.0694], [0.6056, 0.437, 0.4258]]]],[0, 0, 0], 1, true, Sep69114), 
LRes68537 = reshape_layer(Sep69114, [1, 3, 1], Res68537), 
LUp_13251 = up_sampling2D_layer(Res68537, 1, 2, Up_13251), 
exec_layers([LCon82948,LSep69114,LRes68537,LUp_13251],["Con82948","Sep69114","Res68537","Up_13251"],Up_13251,"Up_13251")

Actual (Unparsed): [[[[0.0023672], [0.0023672], [0.0016056], [0.0016056], [0.0014406], [0.0014406]]]]

Expected (Unparsed): [[[[0.0023671987344816],[0.0023671987344816],[0.0016055586337416],[0.0016055586337416],[0.0014406312517968001],[0.0014406312517968001]]]]

Actual:   [[[[0.0024], [0.0024], [0.0017], [0.0017], [0.0015], [0.0015]]]]

Expected: [[[[0.0024], [0.0024], [0.0017], [0.0017], [0.0015], [0.0015]]]]