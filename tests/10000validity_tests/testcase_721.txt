import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Fla77975 = tf.keras.layers.Input(shape=([3, 1, 3]))
in0Con27058 = tf.keras.layers.Input(shape=([9, 1, 3]))
in0Dot62887 = tf.keras.layers.Input(shape=([2]))
in1Dot62887 = tf.keras.layers.Input(shape=([2]))
in0Mul26222 = tf.keras.layers.Input(shape=([1, 1, 2, 1]))
in1Mul26222 = tf.keras.layers.Input(shape=([1, 1, 2, 1]))
in0Ave21025 = tf.keras.layers.Input(shape=([2, 2, 2]))
in1Ave21025 = tf.keras.layers.Input(shape=([2, 2, 2]))
in0Con65401 = tf.keras.layers.Input(shape=([9, 3, 2]))

Fla77975 = keras.layers.Flatten(name = 'Fla77975', )(in0Fla77975)
Res3988 = keras.layers.Reshape((9, 1), name = 'Res3988', )(Fla77975)
Res83294 = keras.layers.Reshape((9, 1, 1), name = 'Res83294', )(Res3988)
Con27058 = keras.layers.Concatenate(axis=3, name = 'Con27058', )([Res83294,in0Con27058])
Dot62887 = keras.layers.Dot(axes=(1, 1), name = 'Dot62887', )([in0Dot62887,in1Dot62887])
Res3700 = keras.layers.Reshape((1, 1), name = 'Res3700', )(Dot62887)
Sim21275 = keras.layers.SimpleRNN(1,name = 'Sim21275', )(Res3700)
Res8603 = keras.layers.Reshape((1, 1), name = 'Res8603', )(Sim21275)
Res43588 = keras.layers.Reshape((1, 1, 1), name = 'Res43588', )(Res8603)
Con25537 = keras.layers.Conv2D(4, (1, 1),strides=(1, 1), padding='valid', dilation_rate=(1, 1), name = 'Con25537', )(Res43588)
Zer20929 = keras.layers.ZeroPadding2D(padding=((8, 0), (0, 0)), name = 'Zer20929', )(Con25537)
Max6115 = keras.layers.Maximum(name = 'Max6115', )([Con27058,Zer20929])
Zer79989 = keras.layers.ZeroPadding2D(padding=((0, 0), (2, 0)), name = 'Zer79989', )(Max6115)
Mul26222 = keras.layers.Multiply(name = 'Mul26222', )([in0Mul26222,in1Mul26222])
Res63477 = keras.layers.Reshape((1, 1, 2), name = 'Res63477', )(Mul26222)
Zer28998 = keras.layers.ZeroPadding2D(padding=((1, 0), (1, 0)), name = 'Zer28998', )(Res63477)
Ave21025 = keras.layers.Average(name = 'Ave21025', )([in0Ave21025,in1Ave21025])
Sof5746 = keras.layers.Softmax(axis=1, name = 'Sof5746', )(Ave21025)
Add63441 = keras.layers.Add(name = 'Add63441', )([Zer28998,Sof5746])
Zer47529 = keras.layers.ZeroPadding2D(padding=((7, 0), (1, 0)), name = 'Zer47529', )(Add63441)
Con65401 = keras.layers.Concatenate(axis=3, name = 'Con65401', )([Zer47529,in0Con65401])
Ave1181 = keras.layers.Average(name = 'Ave1181', )([Zer79989,Con65401])
model = tf.keras.models.Model(inputs=[in0Fla77975,in0Con27058,in0Dot62887,in1Dot62887,in0Mul26222,in1Mul26222,in0Ave21025,in1Ave21025,in0Con65401], outputs=Ave1181)
w = model.get_layer('Sim21275').get_weights() 
w[0] = np.array([[5]])
w[1] = np.array([[1]])
w[2] = np.array([8])
model.get_layer('Sim21275').set_weights(w) 
w = model.get_layer('Con25537').get_weights() 
w[0] = np.array([[[[0.896, 0.945, 0.2224, 0.1521]]]])
w[1] = np.array([0, 0, 0, 0])
model.get_layer('Con25537').set_weights(w) 
in0Fla77975 = tf.constant([[[[1.4116, 1.0664, 1.2471]], [[1.2573, 1.5428, 1.0682]], [[1.3325, 1.3219, 1.7824]]]])
in0Con27058 = tf.constant([[[[0.6443, 0.7615, 0.4429]], [[0.7817, 0.9882, 0.2053]], [[0.7132, 0.1176, 0.3162]], [[0.2736, 0.071, 0.624]], [[0.9281, 0.2547, 0.4999]], [[0.4044, 0.5141, 0.2758]], [[0.7658, 0.818, 0.9304]], [[0.5231, 0.1802, 0.1058]], [[0.452, 0.1298, 0.4806]]]])
in0Dot62887 = tf.constant([[0.6933, 0.3314]])
in1Dot62887 = tf.constant([[0.4815, 0.1294]])
in0Mul26222 = tf.constant([[[[[0.6835], [0.3775]]]]])
in1Mul26222 = tf.constant([[[[[0.31], [0.6099]]]]])
in0Ave21025 = tf.constant([[[[0.7924, 0.8882], [0.7593, 0.2731]], [[0.495, 0.829], [0.3356, 0.1668]]]])
in1Ave21025 = tf.constant([[[[0.8453, 0.0846], [0.3073, 0.9933]], [[0.2596, 0.3626], [0.1057, 0.573]]]])
in0Con65401 = tf.constant([[[[0.2716, 0.5689], [0.6035, 0.2646], [0.5665, 0.9936]], [[0.1861, 0.0669], [0.119, 0.135], [0.2088, 0.859]], [[0.1775, 0.3485], [0.9107, 0.8294], [0.3937, 0.6228]], [[0.1734, 0.2597], [0.582, 0.7828], [0.5832, 0.941]], [[0.4569, 0.8372], [0.0234, 0.4919], [0.3242, 0.9069]], [[0.6923, 0.3206], [0.7117, 0.0101], [0.4143, 0.884]], [[0.0952, 0.2122], [0.728, 0.7159], [0.2029, 0.3008]], [[0.5179, 0.4182], [0.8576, 0.1923], [0.8885, 0.4412]], [[0.9595, 0.7382], [0.5703, 0.0111], [0.0032, 0.4623]]]])
print (np.array2string(model.predict([in0Fla77975,in0Con27058,in0Dot62887,in1Dot62887,in0Mul26222,in1Mul26222,in0Ave21025,in1Ave21025,in0Con65401],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Ave1181.png')

LFla77975 = flatten_layer([[[[1.4116, 1.0664, 1.2471]], [[1.2573, 1.5428, 1.0682]], [[1.3325, 1.3219, 1.7824]]]], Fla77975), 
LRes3988 = reshape_layer(Fla77975, [9, 1], Res3988), 
LRes83294 = reshape_layer(Res3988, [9, 1, 1], Res83294), 
LCon27058 = concatenate_layer([Res83294,[[[[0.6443, 0.7615, 0.4429]], [[0.7817, 0.9882, 0.2053]], [[0.7132, 0.1176, 0.3162]], [[0.2736, 0.071, 0.624]], [[0.9281, 0.2547, 0.4999]], [[0.4044, 0.5141, 0.2758]], [[0.7658, 0.818, 0.9304]], [[0.5231, 0.1802, 0.1058]], [[0.452, 0.1298, 0.4806]]]]], 3, Con27058), 
LDot62887 = dot_layer([[0.6933, 0.3314]], [[0.4815, 0.1294]], 1, 1, Dot62887), 
LRes3700 = reshape_layer(Dot62887, [1, 1], Res3700), 
LSim21275 = simple_rnn_layer(Res3700,[[5]],[[1]],[8], Sim21275), 
LRes8603 = reshape_layer(Sim21275, [1, 1], Res8603), 
LRes43588 = reshape_layer(Res8603, [1, 1, 1], Res43588), 
LCon25537 = conv2D_layer(Res43588, 1, 1,[[[[0.896, 0.945, 0.2224, 0.1521]]]],[0, 0, 0, 0], 1, 1, false, 1, 1, Con25537), 
LZer20929 = zero_padding2D_layer(Con25537, 8, 0, 0, 0, Zer20929), 
LMax6115 = maximum_layer([Con27058,Zer20929], Max6115), 
LZer79989 = zero_padding2D_layer(Max6115, 0, 0, 2, 0, Zer79989), 
LMul26222 = multiply_layer([[[[[[0.6835], [0.3775]]]]], [[[[[0.31], [0.6099]]]]]], Mul26222), 
LRes63477 = reshape_layer(Mul26222, [1, 1, 2], Res63477), 
LZer28998 = zero_padding2D_layer(Res63477, 1, 0, 1, 0, Zer28998), 
LAve21025 = average_layer([[[[[0.7924, 0.8882], [0.7593, 0.2731]], [[0.495, 0.829], [0.3356, 0.1668]]]], [[[[0.8453, 0.0846], [0.3073, 0.9933]], [[0.2596, 0.3626], [0.1057, 0.573]]]]], Ave21025), 
LSof5746 = softmax_layer(Ave21025, 1, Sof5746), 
LAdd63441 = add_layer([Zer28998,Sof5746], Add63441), 
LZer47529 = zero_padding2D_layer(Add63441, 7, 0, 1, 0, Zer47529), 
LCon65401 = concatenate_layer([Zer47529,[[[[0.2716, 0.5689], [0.6035, 0.2646], [0.5665, 0.9936]], [[0.1861, 0.0669], [0.119, 0.135], [0.2088, 0.859]], [[0.1775, 0.3485], [0.9107, 0.8294], [0.3937, 0.6228]], [[0.1734, 0.2597], [0.582, 0.7828], [0.5832, 0.941]], [[0.4569, 0.8372], [0.0234, 0.4919], [0.3242, 0.9069]], [[0.6923, 0.3206], [0.7117, 0.0101], [0.4143, 0.884]], [[0.0952, 0.2122], [0.728, 0.7159], [0.2029, 0.3008]], [[0.5179, 0.4182], [0.8576, 0.1923], [0.8885, 0.4412]], [[0.9595, 0.7382], [0.5703, 0.0111], [0.0032, 0.4623]]]]], 3, Con65401), 
LAve1181 = average_layer([Zer79989,Con65401], Ave1181), 
exec_layers([LFla77975,LRes3988,LRes83294,LCon27058,LDot62887,LRes3700,LSim21275,LRes8603,LRes43588,LCon25537,LZer20929,LMax6115,LZer79989,LMul26222,LRes63477,LZer28998,LAve21025,LSof5746,LAdd63441,LZer47529,LCon65401,LAve1181],["Fla77975","Res3988","Res83294","Con27058","Dot62887","Res3700","Sim21275","Res8603","Res43588","Con25537","Zer20929","Max6115","Zer79989","Mul26222","Res63477","Zer28998","Ave21025","Sof5746","Add63441","Zer47529","Con65401","Ave1181"],Ave1181,"Ave1181")

Actual (Unparsed): [[[[0.0000000, 0.0000000, 0.1358000, 0.2844500], [0.0000000, 0.0000000, 0.3017500, 0.1323000], [0.7058000, 0.3221500, 0.6640000, 0.7182500]], [[0.0000000, 0.0000000, 0.0930500, 0.0334500], [0.0000000, 0.0000000, 0.0595000, 0.0675000], [0.5332000, 0.3908500, 0.5985000, 0.5321500]], [[0.0000000, 0.0000000, 0.0887500, 0.1742500], [0.0000000, 0.0000000, 0.4553500, 0.4147000], [0.6235500, 0.3566000, 0.2556500, 0.4695000]], [[0.0000000, 0.0000000, 0.0867000, 0.1298500], [0.0000000, 0.0000000, 0.2910000, 0.3914000], [0.6286500, 0.1368000, 0.3271000, 0.7825000]], [[0.0000000, 0.0000000, 0.2284500, 0.4186000], [0.0000000, 0.0000000, 0.0117000, 0.2459500], [0.7714000, 0.4640500, 0.2894500, 0.7034000]], [[0.0000000, 0.0000000, 0.3461500, 0.1603000], [0.0000000, 0.0000000, 0.3558500, 0.0050500], [0.5341000, 0.2022000, 0.4642000, 0.5799000]], [[0.0000000, 0.0000000, 0.0476000, 0.1061000], [0.0000000, 0.0000000, 0.3640000, 0.3579500], [0.6662500, 0.3829000, 0.5104500, 0.6156000]], [[0.0000000, 0.0000000, 0.2589500, 0.2091000], [0.3043142, 0.2363386, 0.4288000, 0.0961500], [0.9497160, 0.5442737, 0.5343500, 0.2735000]], [[0.0000000, 0.0000000, 0.4797500, 0.3691000], [0.1956858, 0.2636614, 0.2851500, 0.0055500], [1.2083765, 0.8048950, 0.1128000, 0.4714500]]]]

Expected (Unparsed): [[[[0,0,0.1358,0.28445],[0,0,0.30175,0.1323],[0.7058,0.32215,0.6639999999999999,0.71825]],[[0,0,0.09305,0.03345],[0,0,0.0595,0.0675],[0.5332,0.39085,0.5985,0.53215]],[[0,0,0.08875,0.17425],[0,0,0.45535,0.4147],[0.62355,0.3566,0.25565,0.46950000000000003]],[[0,0,0.0867,0.12985],[0,0,0.291,0.3914],[0.62865,0.1368,0.3271,0.7825]],[[0,0,0.22845,0.4186],[0,0,0.0117,0.24595],[0.7714,0.46405,0.28945,0.7034]],[[0,0,0.34615,0.1603],[0,0,0.35585,0.00505],[0.5341,0.2022,0.4642,0.5799]],[[0,0,0.0476,0.1061],[0,0,0.364,0.35795],[0.66625,0.3829,0.51045,0.6156]],[[0,0,0.25895,0.2091],[0.30431415134035267,0.23633862263974992,0.4288,0.09615],[0.9497159819652823,0.5442736655833937,0.53435,0.27349999999999997]],[[0,0,0.47975,0.3691],[0.1956858486596473,0.2636613773602501,0.28515,0.00555],[1.2083765180347177,0.8048949569579269,0.11279999942136475,0.47145000000000004]]]]

Actual:   [[[[0, 0, 0.1358, 0.2845], [0, 0, 0.3018, 0.1323], [0.7058, 0.3222, 0.664, 0.7183]], [[0, 0, 0.0931, 0.0335], [0, 0, 0.0595, 0.0675], [0.5332, 0.3909, 0.5985, 0.5322]], [[0, 0, 0.0888, 0.1743], [0, 0, 0.4554, 0.4147], [0.6236, 0.3566, 0.2557, 0.4695]], [[0, 0, 0.0867, 0.1299], [0, 0, 0.291, 0.3914], [0.6287, 0.1368, 0.3271, 0.7825]], [[0, 0, 0.2285, 0.4186], [0, 0, 0.0117, 0.246], [0.7714, 0.4641, 0.2895, 0.7034]], [[0, 0, 0.3462, 0.1603], [0, 0, 0.3559, 0.0051], [0.5341, 0.2022, 0.4642, 0.5799]], [[0, 0, 0.0476, 0.1061], [0, 0, 0.364, 0.358], [0.6663, 0.3829, 0.5105, 0.6156]], [[0, 0, 0.259, 0.2091], [0.3044, 0.2364, 0.4288, 0.0962], [0.9498, 0.5443, 0.5344, 0.2735]], [[0, 0, 0.4798, 0.3691], [0.1957, 0.2637, 0.2852, 0.0056], [1.2084, 0.8049, 0.1128, 0.4715]]]]

Expected: [[[[0, 0, 0.1358, 0.2845], [0, 0, 0.3018, 0.1323], [0.7058, 0.3222, 0.664, 0.7183]], [[0, 0, 0.0931, 0.0335], [0, 0, 0.0595, 0.0675], [0.5332, 0.3909, 0.5985, 0.5322]], [[0, 0, 0.0888, 0.1743], [0, 0, 0.4554, 0.4147], [0.6236, 0.3566, 0.2557, 0.4696]], [[0, 0, 0.0867, 0.1299], [0, 0, 0.291, 0.3914], [0.6287, 0.1368, 0.3271, 0.7825]], [[0, 0, 0.2285, 0.4186], [0, 0, 0.0117, 0.246], [0.7714, 0.4641, 0.2895, 0.7034]], [[0, 0, 0.3462, 0.1603], [0, 0, 0.3559, 0.0051], [0.5341, 0.2022, 0.4642, 0.5799]], [[0, 0, 0.0476, 0.1061], [0, 0, 0.364, 0.358], [0.6663, 0.3829, 0.5105, 0.6156]], [[0, 0, 0.259, 0.2091], [0.3044, 0.2364, 0.4288, 0.0962], [0.9498, 0.5443, 0.5344, 0.2735]], [[0, 0, 0.4798, 0.3691], [0.1957, 0.2637, 0.2852, 0.0056], [1.2084, 0.8049, 0.1128, 0.4715]]]]