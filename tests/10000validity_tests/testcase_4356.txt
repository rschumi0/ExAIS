import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Ave76255 = tf.keras.layers.Input(shape=([1, 2]))
in0Con54409 = tf.keras.layers.Input(shape=([3, 6, 3, 1]))
in0Max21155 = tf.keras.layers.Input(shape=([2, 1, 2, 2]))
in1Max21155 = tf.keras.layers.Input(shape=([2, 1, 2, 2]))
in0Zer30760 = tf.keras.layers.Input(shape=([1, 4, 1, 2]))
in0Mul45223 = tf.keras.layers.Input(shape=([1, 2, 1, 1]))
in1Mul45223 = tf.keras.layers.Input(shape=([1, 2, 1, 1]))
in0Con62014 = tf.keras.layers.Input(shape=([3, 6, 3, 1]))
in0Ave47650 = tf.keras.layers.Input(shape=([1, 2, 2]))
in1Ave47650 = tf.keras.layers.Input(shape=([1, 2, 2]))
in0Con87591 = tf.keras.layers.Input(shape=([1, 2, 3, 1]))
in0Ave42389 = tf.keras.layers.Input(shape=([1, 1, 1, 2]))
in1Ave42389 = tf.keras.layers.Input(shape=([1, 1, 1, 2]))

Ave76255 = keras.layers.AveragePooling1D(pool_size=(1), strides=(8), padding='same', name = 'Ave76255', )(in0Ave76255)
Res95155 = keras.layers.Reshape((1, 2, 1), name = 'Res95155', )(Ave76255)
Ave57589 = keras.layers.AveragePooling2D(pool_size=(1, 1), name = 'Ave57589', )(Res95155)
Res86012 = keras.layers.Reshape((1, 2, 1, 1), name = 'Res86012', )(Ave57589)
Zer88203 = keras.layers.ZeroPadding3D(padding=((2, 0), (4, 0), (2, 0)), name = 'Zer88203', )(Res86012)
Con54409 = keras.layers.Concatenate(axis=4, name = 'Con54409', )([Zer88203,in0Con54409])
Max21155 = keras.layers.Maximum(name = 'Max21155', )([in0Max21155,in1Max21155])
Zer40574 = keras.layers.ZeroPadding3D(padding=((1, 0), (5, 0), (1, 0)), name = 'Zer40574', )(Max21155)
Zer30760 = keras.layers.ZeroPadding3D(padding=((1, 1), (1, 1), (1, 1)), name = 'Zer30760', )(in0Zer30760)
Ave16009 = keras.layers.Average(name = 'Ave16009', )([Zer40574,Zer30760])
Mul45223 = keras.layers.Multiply(name = 'Mul45223', )([in0Mul45223,in1Mul45223])
Zer49918 = keras.layers.ZeroPadding3D(padding=((2, 0), (4, 0), (2, 0)), name = 'Zer49918', )(Mul45223)
Con62014 = keras.layers.Concatenate(axis=4, name = 'Con62014', )([Zer49918,in0Con62014])
Add30513 = keras.layers.Add(name = 'Add30513', )([Ave16009,Con62014])
Ave47650 = keras.layers.Average(name = 'Ave47650', )([in0Ave47650,in1Ave47650])
Con80025 = keras.layers.Conv2DTranspose(3, (1, 1),strides=(1, 1), padding='same', name = 'Con80025', )(Ave47650)
Res29856 = keras.layers.Reshape((1, 2, 3, 1), name = 'Res29856', )(Con80025)
Con87591 = keras.layers.Concatenate(axis=4, name = 'Con87591', )([Res29856,in0Con87591])
Ave42389 = keras.layers.Average(name = 'Ave42389', )([in0Ave42389,in1Ave42389])
Zer4426 = keras.layers.ZeroPadding3D(padding=((0, 0), (1, 0), (2, 0)), name = 'Zer4426', )(Ave42389)
Max12979 = keras.layers.Maximum(name = 'Max12979', )([Con87591,Zer4426])
Zer31484 = keras.layers.ZeroPadding3D(padding=((2, 0), (4, 0), (0, 0)), name = 'Zer31484', )(Max12979)
Add99201 = keras.layers.Add(name = 'Add99201', )([Add30513,Zer31484])
Ave4456 = keras.layers.Average(name = 'Ave4456', )([Con54409,Add99201])
model = tf.keras.models.Model(inputs=[in0Ave76255,in0Con54409,in0Max21155,in1Max21155,in0Zer30760,in0Mul45223,in1Mul45223,in0Con62014,in0Ave47650,in1Ave47650,in0Con87591,in0Ave42389,in1Ave42389], outputs=Ave4456)
w = model.get_layer('Con80025').get_weights() 
w[0] = np.array([[[[0.2954, 0.5831], [0.1484, 0.9733], [0.523, 0.8524]]]])
w[1] = np.array([0, 0, 0])
model.get_layer('Con80025').set_weights(w) 
in0Ave76255 = tf.constant([[[1.9432, 1.3244]]])
in0Con54409 = tf.constant([[[[[0.4084], [0.506], [0.8123]], [[0.4196], [0.3078], [0.7726]], [[0.0162], [0.527], [0.3403]], [[0.7727], [0.6731], [0.5871]], [[0.7569], [0.085], [0.8699]], [[0.3098], [0.5136], [0.7463]]], [[[0.0112], [0.5728], [0.3731]], [[0.9958], [0.9011], [0.4459]], [[0.5251], [0.2701], [0.5453]], [[0.1851], [0.8124], [0.9056]], [[0.9377], [0.4095], [0.6943]], [[0.5248], [0.657], [0.3391]]], [[[0.4118], [0.1423], [0.442]], [[0.6652], [0.4265], [0.6101]], [[0.0432], [0.3568], [0.0978]], [[0.1427], [0.5531], [0.462]], [[0.7375], [0.3103], [0.1085]], [[0.7549], [0.6302], [0.0689]]]]])
in0Max21155 = tf.constant([[[[[0.8892, 0.5947], [0.668, 0.6076]]], [[[0.8275, 0.6829], [0.9608, 0.3002]]]]])
in1Max21155 = tf.constant([[[[[0.5318, 0.4096], [0.5147, 0.5201]]], [[[0.5841, 0.941], [0.6403, 0.0212]]]]])
in0Zer30760 = tf.constant([[[[[1.3283, 1.1071]], [[1.698, 1.6767]], [[1.4341, 1.1671]], [[1.9824, 1.14]]]]])
in0Mul45223 = tf.constant([[[[[0.1256]], [[0.8713]]]]])
in1Mul45223 = tf.constant([[[[[0.9664]], [[0.222]]]]])
in0Con62014 = tf.constant([[[[[0.5385], [0.8987], [0.5508]], [[0.4508], [0.1904], [0.5904]], [[0.1649], [0.8941], [0.7343]], [[0.5121], [0.4942], [0.9751]], [[0.4249], [0.0693], [0.2784]], [[0.9994], [0.0268], [0.7673]]], [[[0.0125], [0.6744], [0.3903]], [[0.1702], [0.5698], [0.3973]], [[0.3262], [0.9415], [0.5825]], [[0.6227], [0.1662], [0.0253]], [[0.0461], [0.6708], [0.1488]], [[0.7922], [0.1903], [0.0496]]], [[[0.4347], [0.8905], [0.653]], [[0.7405], [0.1189], [0.6209]], [[0.3877], [0.9216], [0.0852]], [[0.8821], [0.537], [0.2894]], [[0.9236], [0.125], [0.7112]], [[0.4808], [0.4221], [0.2935]]]]])
in0Ave47650 = tf.constant([[[[0.1064, 0.7813], [0.9449, 0.0724]]]])
in1Ave47650 = tf.constant([[[[0.2391, 0.8793], [0.2846, 0.0794]]]])
in0Con87591 = tf.constant([[[[[0.4943], [0.9329], [0.6875]], [[0.7802], [0.0339], [0.6038]]]]])
in0Ave42389 = tf.constant([[[[[0.5894, 0.3394]]]]])
in1Ave42389 = tf.constant([[[[[0.6805, 0.5148]]]]])
print (np.array2string(model.predict([in0Ave76255,in0Con54409,in0Max21155,in1Max21155,in0Zer30760,in0Mul45223,in1Mul45223,in0Con62014,in0Ave47650,in1Ave47650,in0Con87591,in0Ave42389,in1Ave42389],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Ave4456.png')

LAve76255 = average_pooling1D_layer([[[1.9432, 1.3244]]], 1, 8, true, Ave76255), 
LRes95155 = reshape_layer(Ave76255, [1, 2, 1], Res95155), 
LAve57589 = average_pooling2D_layer(Res95155, 1, 1, Ave57589), 
LRes86012 = reshape_layer(Ave57589, [1, 2, 1, 1], Res86012), 
LZer88203 = zero_padding3D_layer(Res86012, 2, 0, 4, 0, 2, 0, Zer88203), 
LCon54409 = concatenate_layer([Zer88203,[[[[[0.4084], [0.506], [0.8123]], [[0.4196], [0.3078], [0.7726]], [[0.0162], [0.527], [0.3403]], [[0.7727], [0.6731], [0.5871]], [[0.7569], [0.085], [0.8699]], [[0.3098], [0.5136], [0.7463]]], [[[0.0112], [0.5728], [0.3731]], [[0.9958], [0.9011], [0.4459]], [[0.5251], [0.2701], [0.5453]], [[0.1851], [0.8124], [0.9056]], [[0.9377], [0.4095], [0.6943]], [[0.5248], [0.657], [0.3391]]], [[[0.4118], [0.1423], [0.442]], [[0.6652], [0.4265], [0.6101]], [[0.0432], [0.3568], [0.0978]], [[0.1427], [0.5531], [0.462]], [[0.7375], [0.3103], [0.1085]], [[0.7549], [0.6302], [0.0689]]]]]], 4, Con54409), 
LMax21155 = maximum_layer([[[[[[0.8892, 0.5947], [0.668, 0.6076]]], [[[0.8275, 0.6829], [0.9608, 0.3002]]]]], [[[[[0.5318, 0.4096], [0.5147, 0.5201]]], [[[0.5841, 0.941], [0.6403, 0.0212]]]]]], Max21155), 
LZer40574 = zero_padding3D_layer(Max21155, 1, 0, 5, 0, 1, 0, Zer40574), 
LZer30760 = zero_padding3D_layer([[[[[1.3283, 1.1071]], [[1.698, 1.6767]], [[1.4341, 1.1671]], [[1.9824, 1.14]]]]], 1, 1, 1, 1, 1, 1, Zer30760), 
LAve16009 = average_layer([Zer40574,Zer30760], Ave16009), 
LMul45223 = multiply_layer([[[[[[0.1256]], [[0.8713]]]]], [[[[[0.9664]], [[0.222]]]]]], Mul45223), 
LZer49918 = zero_padding3D_layer(Mul45223, 2, 0, 4, 0, 2, 0, Zer49918), 
LCon62014 = concatenate_layer([Zer49918,[[[[[0.5385], [0.8987], [0.5508]], [[0.4508], [0.1904], [0.5904]], [[0.1649], [0.8941], [0.7343]], [[0.5121], [0.4942], [0.9751]], [[0.4249], [0.0693], [0.2784]], [[0.9994], [0.0268], [0.7673]]], [[[0.0125], [0.6744], [0.3903]], [[0.1702], [0.5698], [0.3973]], [[0.3262], [0.9415], [0.5825]], [[0.6227], [0.1662], [0.0253]], [[0.0461], [0.6708], [0.1488]], [[0.7922], [0.1903], [0.0496]]], [[[0.4347], [0.8905], [0.653]], [[0.7405], [0.1189], [0.6209]], [[0.3877], [0.9216], [0.0852]], [[0.8821], [0.537], [0.2894]], [[0.9236], [0.125], [0.7112]], [[0.4808], [0.4221], [0.2935]]]]]], 4, Con62014), 
LAdd30513 = add_layer([Ave16009,Con62014], Add30513), 
LAve47650 = average_layer([[[[[0.1064, 0.7813], [0.9449, 0.0724]]]], [[[[0.2391, 0.8793], [0.2846, 0.0794]]]]], Ave47650), 
LCon80025 = conv2D_transpose_layer(Ave47650, 1, 1,[[[[0.2954, 0.5831], [0.1484, 0.9733], [0.523, 0.8524]]]],[0, 0, 0], 1, 1, true, Con80025), 
LRes29856 = reshape_layer(Con80025, [1, 2, 3, 1], Res29856), 
LCon87591 = concatenate_layer([Res29856,[[[[[0.4943], [0.9329], [0.6875]], [[0.7802], [0.0339], [0.6038]]]]]], 4, Con87591), 
LAve42389 = average_layer([[[[[[0.5894, 0.3394]]]]], [[[[[0.6805, 0.5148]]]]]], Ave42389), 
LZer4426 = zero_padding3D_layer(Ave42389, 0, 0, 1, 0, 2, 0, Zer4426), 
LMax12979 = maximum_layer([Con87591,Zer4426], Max12979), 
LZer31484 = zero_padding3D_layer(Max12979, 2, 0, 4, 0, 0, 0, Zer31484), 
LAdd99201 = add_layer([Add30513,Zer31484], Add99201), 
LAve4456 = average_layer([Con54409,Add99201], Ave4456), 
exec_layers([LAve76255,LRes95155,LAve57589,LRes86012,LZer88203,LCon54409,LMax21155,LZer40574,LZer30760,LAve16009,LMul45223,LZer49918,LCon62014,LAdd30513,LAve47650,LCon80025,LRes29856,LCon87591,LAve42389,LZer4426,LMax12979,LZer31484,LAdd99201,LAve4456],["Ave76255","Res95155","Ave57589","Res86012","Zer88203","Con54409","Max21155","Zer40574","Zer30760","Ave16009","Mul45223","Zer49918","Con62014","Add30513","Ave47650","Con80025","Res29856","Con87591","Ave42389","Zer4426","Max12979","Zer31484","Add99201","Ave4456"],Ave4456,"Ave4456")

Actual (Unparsed): [[[[[0.0000000, 0.4734500], [0.0000000, 0.7023500], [0.0000000, 0.6815500]], [[0.0000000, 0.4352000], [0.0000000, 0.2491000], [0.0000000, 0.6815000]], [[0.0000000, 0.0905500], [0.0000000, 0.7105500], [0.0000000, 0.5373000]], [[0.0000000, 0.6424000], [0.0000000, 0.5836500], [0.0000000, 0.7811000]], [[0.0000000, 0.5909000], [0.0000000, 0.0771500], [0.0000000, 0.5741500]], [[0.0000000, 0.6546000], [0.0000000, 0.2702000], [0.0000000, 0.7568000]]], [[[0.0000000, 0.0118500], [0.0000000, 0.6236000], [0.0000000, 0.3817000]], [[0.0000000, 0.5830000], [0.3320750, 1.0122250], [0.0000000, 0.4216000]], [[0.0000000, 0.4256500], [0.4245000, 1.0249750], [0.0000000, 0.5639000]], [[0.0000000, 0.4039000], [0.3585250, 0.7810750], [0.0000000, 0.4654500]], [[0.0000000, 0.4919000], [0.4956000, 0.8251500], [0.0000000, 0.4215500]], [[0.0000000, 0.6585000], [0.2223000, 0.5723250], [0.1670000, 0.3462500]]], [[[0.0000000, 0.4232500], [0.0000000, 0.5164000], [0.0000000, 0.5475000]], [[0.0000000, 0.7028500], [0.0000000, 0.2727000], [0.0000000, 0.6155000]], [[0.0000000, 0.2154500], [0.0000000, 0.6392000], [0.0000000, 0.0915000]], [[0.0000000, 0.5124000], [0.0000000, 0.5450500], [0.0000000, 0.3757000]], [[0.2675891, 1.0777000], [0.4168835, 0.6841000], [1.4313379, 0.7536000]], [[0.1129272, 1.0079500], [0.2894262, 0.7783500], [1.3165893, 0.5581500]]]]]

Expected (Unparsed): [[[[[0,0.47345],[0,0.70235],[0,0.68155]],[[0,0.4352],[0,0.24910000000000002],[0,0.6815]],[[0,0.09054999999999999],[0,0.71055],[0,0.5373]],[[0,0.6424000000000001],[0,0.58365],[0,0.7810999999999999]],[[0,0.5909],[0,0.07715],[0,0.5741499999999999]],[[0,0.6546],[0,0.2702],[0,0.7567999999999999]]],[[[0,0.01185],[0,0.6235999999999999],[0,0.3817]],[[0,0.583],[0.332075,1.012225],[0,0.4216]],[[0,0.42565],[0.4245,1.024975],[0,0.5639000000000001]],[[0,0.40390000000000004],[0.358525,0.781075],[0,0.46545]],[[0,0.4919],[0.4956,0.8251499999999999],[0,0.42155]],[[0,0.6585000000000001],[0.2223,0.572325],[0.167,0.34625]]],[[[0,0.42325],[0,0.5164],[0,0.5475]],[[0,0.70285],[0,0.2727],[0,0.6154999999999999]],[[0,0.21545],[0,0.6392],[0,0.0915]],[[0,0.5124],[0,0.54505],[0,0.37570000000000003]],[[0.26758914,1.0777],[0.4168835450000001,0.6841],[1.4313379050000001,0.7536]],[[0.11292722,1.0079500000000001],[0.289426185,0.77835],[1.3165893,0.55815]]]]]

Actual:   [[[[[0, 0.4735], [0, 0.7024], [0, 0.6816]], [[0, 0.4352], [0, 0.2491], [0, 0.6815]], [[0, 0.0906], [0, 0.7106], [0, 0.5373]], [[0, 0.6424], [0, 0.5837], [0, 0.7811]], [[0, 0.5909], [0, 0.0772], [0, 0.5742]], [[0, 0.6546], [0, 0.2702], [0, 0.7568]]], [[[0, 0.0119], [0, 0.6236], [0, 0.3817]], [[0, 0.583], [0.3321, 1.0123], [0, 0.4216]], [[0, 0.4257], [0.4245, 1.025], [0, 0.5639]], [[0, 0.4039], [0.3586, 0.7811], [0, 0.4655]], [[0, 0.4919], [0.4956, 0.8252], [0, 0.4216]], [[0, 0.6585], [0.2223, 0.5724], [0.167, 0.3463]]], [[[0, 0.4233], [0, 0.5164], [0, 0.5475]], [[0, 0.7029], [0, 0.2727], [0, 0.6155]], [[0, 0.2155], [0, 0.6392], [0, 0.0915]], [[0, 0.5124], [0, 0.5451], [0, 0.3757]], [[0.2676, 1.0777], [0.4169, 0.6841], [1.4314, 0.7536]], [[0.113, 1.008], [0.2895, 0.7784], [1.3166, 0.5582]]]]]

Expected: [[[[[0, 0.4735], [0, 0.7024], [0, 0.6816]], [[0, 0.4352], [0, 0.2492], [0, 0.6815]], [[0, 0.0906], [0, 0.7106], [0, 0.5373]], [[0, 0.6425], [0, 0.5837], [0, 0.7811]], [[0, 0.5909], [0, 0.0772], [0, 0.5742]], [[0, 0.6546], [0, 0.2702], [0, 0.7568]]], [[[0, 0.0119], [0, 0.6236], [0, 0.3817]], [[0, 0.583], [0.3321, 1.0123], [0, 0.4216]], [[0, 0.4257], [0.4245, 1.025], [0, 0.564]], [[0, 0.404], [0.3586, 0.7811], [0, 0.4655]], [[0, 0.4919], [0.4956, 0.8252], [0, 0.4216]], [[0, 0.6586], [0.2223, 0.5724], [0.167, 0.3463]]], [[[0, 0.4233], [0, 0.5164], [0, 0.5475]], [[0, 0.7029], [0, 0.2727], [0, 0.6155]], [[0, 0.2155], [0, 0.6392], [0, 0.0915]], [[0, 0.5124], [0, 0.5451], [0, 0.3758]], [[0.2676, 1.0777], [0.4169, 0.6841], [1.4314, 0.7536]], [[0.113, 1.008], [0.2895, 0.7784], [1.3166, 0.5582]]]]]