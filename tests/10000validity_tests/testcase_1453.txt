import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Mul22786 = tf.keras.layers.Input(shape=([2, 1]))
in1Mul22786 = tf.keras.layers.Input(shape=([2, 1]))
in0Con63240 = tf.keras.layers.Input(shape=([4]))
in0Min13745 = tf.keras.layers.Input(shape=([1, 1, 1]))
in1Min13745 = tf.keras.layers.Input(shape=([1, 1, 1]))
in0Con37848 = tf.keras.layers.Input(shape=([5]))
in0Cro63978 = tf.keras.layers.Input(shape=([2, 3]))
in0Con97148 = tf.keras.layers.Input(shape=([1, 3, 1]))
in0Con96828 = tf.keras.layers.Input(shape=([1, 2, 2]))
in0Sub17957 = tf.keras.layers.Input(shape=([3, 3, 3]))
in1Sub17957 = tf.keras.layers.Input(shape=([3, 3, 3]))
in0Con15198 = tf.keras.layers.Input(shape=([3]))

Mul22786 = keras.layers.Multiply(name = 'Mul22786', )([in0Mul22786,in1Mul22786])
Bat94594 = keras.layers.BatchNormalization(axis=2, epsilon=0.7668565470837531,  name = 'Bat94594', )(Mul22786)
Fla51970 = keras.layers.Flatten(name = 'Fla51970', )(Bat94594)
Con63240 = keras.layers.Concatenate(axis=1, name = 'Con63240', )([Fla51970,in0Con63240])
Min13745 = keras.layers.Minimum(name = 'Min13745', )([in0Min13745,in1Min13745])
Res58929 = keras.layers.Reshape((1, 1), name = 'Res58929', )(Min13745)
Fla10813 = keras.layers.Flatten(name = 'Fla10813', )(Res58929)
Con37848 = keras.layers.Concatenate(axis=1, name = 'Con37848', )([Fla10813,in0Con37848])
Cro63978 = keras.layers.Cropping1D(cropping=((1, 0)), name = 'Cro63978', )(in0Cro63978)
Res73540 = keras.layers.Reshape((1, 3, 1), name = 'Res73540', )(Cro63978)
Con97148 = keras.layers.Concatenate(axis=3, name = 'Con97148', )([Res73540,in0Con97148])
Con96828 = keras.layers.Conv2DTranspose(2, (1, 2),strides=(1, 1), padding='valid', name = 'Con96828', )(in0Con96828)
Max20851 = keras.layers.Maximum(name = 'Max20851', )([Con97148,Con96828])
Res67032 = keras.layers.Reshape((1, 6), name = 'Res67032', )(Max20851)
Cro19436 = keras.layers.Cropping1D(cropping=((0, 0)), name = 'Cro19436', )(Res67032)
Fla5596 = keras.layers.Flatten(name = 'Fla5596', )(Cro19436)
Sub17957 = keras.layers.Subtract(name = 'Sub17957', )([in0Sub17957,in1Sub17957])
Glo65858 = keras.layers.GlobalAveragePooling2D(name = 'Glo65858', )(Sub17957)
Con15198 = keras.layers.Concatenate(axis=1, name = 'Con15198', )([Glo65858,in0Con15198])
Mul6523 = keras.layers.Multiply(name = 'Mul6523', )([Fla5596,Con15198])
Max84021 = keras.layers.Maximum(name = 'Max84021', )([Con37848,Mul6523])
Mul1650 = keras.layers.Multiply(name = 'Mul1650', )([Con63240,Max84021])
model = tf.keras.models.Model(inputs=[in0Mul22786,in1Mul22786,in0Con63240,in0Min13745,in1Min13745,in0Con37848,in0Cro63978,in0Con97148,in0Con96828,in0Sub17957,in1Sub17957,in0Con15198], outputs=Mul1650)
w = model.get_layer('Bat94594').get_weights() 
w[0] = np.array([0.015])
w[1] = np.array([0.4513])
w[2] = np.array([0.8296])
w[3] = np.array([0.3186])
model.get_layer('Bat94594').set_weights(w) 
w = model.get_layer('Con96828').get_weights() 
w[0] = np.array([[[[0.5905, 0.9914], [0.2568, 0.8058]], [[0.7164, 0.3903], [0.3562, 0.9631]]]])
w[1] = np.array([0, 0])
model.get_layer('Con96828').set_weights(w) 
in0Mul22786 = tf.constant([[[0.7739], [0.4045]]])
in1Mul22786 = tf.constant([[[0.2285], [0.7566]]])
in0Con63240 = tf.constant([[0.6635, 0.798, 0.0149, 0.5222]])
in0Min13745 = tf.constant([[[[0.8186]]]])
in1Min13745 = tf.constant([[[[0.5774]]]])
in0Con37848 = tf.constant([[0.302, 0.5184, 0.3173, 0.3433, 0.479]])
in0Cro63978 = tf.constant([[[1.3676, 1.5125, 1.9583], [1.039, 1.1789, 1.3635]]])
in0Con97148 = tf.constant([[[[0.4684], [0.438], [0.4278]]]])
in0Con96828 = tf.constant([[[[0.0199, 0.5202], [0.8253, 0.9343]]]])
in0Sub17957 = tf.constant([[[[0.0815, 0.8637, 0.0984], [0.0986, 0.0531, 0.1757], [0.6591, 0.3026, 0.293]], [[0.6871, 0.6433, 0.0855], [0.4116, 0.0253, 0.8197], [0.2863, 0.3976, 0.1546]], [[0.922, 0.5605, 0.3383], [0.197, 0.8653, 0.8631], [0.3004, 0.7133, 0.3084]]]])
in1Sub17957 = tf.constant([[[[0.4985, 0.3876, 0.7916], [0.4223, 0.1852, 0.5972], [0.4693, 0.7886, 0.3404]], [[0.8618, 0.5967, 0.0643], [0.4466, 0.5804, 0.2393], [0.424, 0.935, 0.0173]], [[0.1129, 0.817, 0.4896], [0.1815, 0.3457, 0.7624], [0.0578, 0.1843, 0.0692]]]])
in0Con15198 = tf.constant([[0.9717, 0.8474, 0.3703]])
print (np.array2string(model.predict([in0Mul22786,in1Mul22786,in0Con63240,in0Min13745,in1Min13745,in0Con37848,in0Cro63978,in0Con97148,in0Con96828,in0Sub17957,in1Sub17957,in0Con15198],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Mul1650.png')

LMul22786 = multiply_layer([[[[0.7739], [0.4045]]], [[[0.2285], [0.7566]]]], Mul22786), 
LBat94594 = batch_normalization_layer(Mul22786, 2, 0.7668565470837531, [0.015], [0.4513], [0.8296], [0.3186], Bat94594), 
LFla51970 = flatten_layer(Bat94594, Fla51970), 
LCon63240 = concatenate_layer([Fla51970,[[0.6635, 0.798, 0.0149, 0.5222]]], 1, Con63240), 
LMin13745 = minimum_layer([[[[[0.8186]]]], [[[[0.5774]]]]], Min13745), 
LRes58929 = reshape_layer(Min13745, [1, 1], Res58929), 
LFla10813 = flatten_layer(Res58929, Fla10813), 
LCon37848 = concatenate_layer([Fla10813,[[0.302, 0.5184, 0.3173, 0.3433, 0.479]]], 1, Con37848), 
LCro63978 = cropping1D_layer([[[1.3676, 1.5125, 1.9583], [1.039, 1.1789, 1.3635]]], 1, 0, Cro63978), 
LRes73540 = reshape_layer(Cro63978, [1, 3, 1], Res73540), 
LCon97148 = concatenate_layer([Res73540,[[[[0.4684], [0.438], [0.4278]]]]], 3, Con97148), 
LCon96828 = conv2D_transpose_layer([[[[0.0199, 0.5202], [0.8253, 0.9343]]]], 1, 2,[[[[0.5905, 0.9914], [0.2568, 0.8058]], [[0.7164, 0.3903], [0.3562, 0.9631]]]],[0, 0], 1, 1, false, Con96828), 
LMax20851 = maximum_layer([Con97148,Con96828], Max20851), 
LRes67032 = reshape_layer(Max20851, [1, 6], Res67032), 
LCro19436 = cropping1D_layer(Res67032, 0, 0, Cro19436), 
LFla5596 = flatten_layer(Cro19436, Fla5596), 
LSub17957 = subtract_layer([[[[0.0815, 0.8637, 0.0984], [0.0986, 0.0531, 0.1757], [0.6591, 0.3026, 0.293]], [[0.6871, 0.6433, 0.0855], [0.4116, 0.0253, 0.8197], [0.2863, 0.3976, 0.1546]], [[0.922, 0.5605, 0.3383], [0.197, 0.8653, 0.8631], [0.3004, 0.7133, 0.3084]]]], [[[[0.4985, 0.3876, 0.7916], [0.4223, 0.1852, 0.5972], [0.4693, 0.7886, 0.3404]], [[0.8618, 0.5967, 0.0643], [0.4466, 0.5804, 0.2393], [0.424, 0.935, 0.0173]], [[0.1129, 0.817, 0.4896], [0.1815, 0.3457, 0.7624], [0.0578, 0.1843, 0.0692]]]], Sub17957), 
LGlo65858 = global_average_pooling2D_layer(Sub17957, Glo65858), 
LCon15198 = concatenate_layer([Glo65858,[[0.9717, 0.8474, 0.3703]]], 1, Con15198), 
LMul6523 = multiply_layer([Fla5596,Con15198], Mul6523), 
LMax84021 = maximum_layer([Con37848,Mul6523], Max84021), 
LMul1650 = multiply_layer([Con63240,Max84021], Mul1650), 
exec_layers([LMul22786,LBat94594,LFla51970,LCon63240,LMin13745,LRes58929,LFla10813,LCon37848,LCro63978,LRes73540,LCon97148,LCon96828,LMax20851,LRes67032,LCro19436,LFla5596,LSub17957,LGlo65858,LCon15198,LMul6523,LMax84021,LMul1650],["Mul22786","Bat94594","Fla51970","Con63240","Min13745","Res58929","Fla10813","Con37848","Cro63978","Res73540","Con97148","Con96828","Max20851","Res67032","Cro19436","Fla5596","Sub17957","Glo65858","Con15198","Mul6523","Max84021","Mul1650"],Mul1650,"Mul1650")

Actual (Unparsed): [[0.2551542, 0.1340162, 0.3439584, 1.1421026, 0.0172159, 0.2501338]]

Expected (Unparsed): [[0.25515414367503286,0.13401616873789327,0.3439584,1.1421025650490682,0.017215905509999997,0.25013379999999996]]

Actual:   [[0.2552, 0.1341, 0.344, 1.1422, 0.0173, 0.2502]]

Expected: [[0.2552, 0.1341, 0.344, 1.1422, 0.0173, 0.2502]]