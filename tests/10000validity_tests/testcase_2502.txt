import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Bat16320 = tf.keras.layers.Input(shape=([1]))

Bat16320 = keras.layers.BatchNormalization(axis=1, epsilon=0.7125213554703116,  name = 'Bat16320', )(in0Bat16320)
Res71899 = keras.layers.Reshape((1, 1), name = 'Res71899', )(Bat16320)
Res38552 = keras.layers.Reshape((1, 1, 1), name = 'Res38552', )(Res71899)
Ave34685 = keras.layers.AveragePooling2D(pool_size=(1, 1), strides=(4, 1), padding='valid', name = 'Ave34685', )(Res38552)
model = tf.keras.models.Model(inputs=[in0Bat16320], outputs=Ave34685)
w = model.get_layer('Bat16320').get_weights() 
w[0] = np.array([0.3205])
w[1] = np.array([0.2832])
w[2] = np.array([0.4667])
w[3] = np.array([0.1176])
model.get_layer('Bat16320').set_weights(w) 
in0Bat16320 = tf.constant([[1.8018]])
print (np.array2string(model.predict([in0Bat16320],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Ave34685.png')

LBat16320 = batch_normalization_layer([[1.8018]], 1, 0.7125213554703116, [0.3205], [0.2832], [0.4667], [0.1176], Bat16320), 
LRes71899 = reshape_layer(Bat16320, [1, 1], Res71899), 
LRes38552 = reshape_layer(Res71899, [1, 1, 1], Res38552), 
LAve34685 = average_pooling2D_layer(Res38552, 1, 1, 4, 1, false, Ave34685), 
exec_layers([LBat16320,LRes71899,LRes38552,LAve34685],["Bat16320","Res71899","Res38552","Ave34685"],Ave34685,"Ave34685")

Actual (Unparsed): [[[[0.7528464]]]]

Expected (Unparsed): [[[[0.7528464419773782]]]]

Actual:   [[[[0.7529]]]]

Expected: [[[[0.7529]]]]