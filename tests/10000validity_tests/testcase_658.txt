import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Bat84161 = tf.keras.layers.Input(shape=([1]))
in0Con19602 = tf.keras.layers.Input(shape=([3]))
in0Min69487 = tf.keras.layers.Input(shape=([1, 1, 2, 2]))
in1Min69487 = tf.keras.layers.Input(shape=([1, 1, 2, 2]))

Bat84161 = keras.layers.BatchNormalization(axis=1, epsilon=0.19568164339441196,  name = 'Bat84161', )(in0Bat84161)
Res48746 = keras.layers.Reshape((1, 1), name = 'Res48746', )(Bat84161)
Res16878 = keras.layers.Reshape((1, 1, 1), name = 'Res16878', )(Res48746)
Max94605 = keras.layers.MaxPool2D(pool_size=(1, 1), strides=(1, 1), padding='valid', name = 'Max94605', )(Res16878)
Res84953 = keras.layers.Reshape((1, 1), name = 'Res84953', )(Max94605)
Fla10744 = keras.layers.Flatten(name = 'Fla10744', )(Res84953)
Con19602 = keras.layers.Concatenate(axis=1, name = 'Con19602', )([Fla10744,in0Con19602])
Min69487 = keras.layers.Minimum(name = 'Min69487', )([in0Min69487,in1Min69487])
Fla68153 = keras.layers.Flatten(name = 'Fla68153', )(Min69487)
Ave39010 = keras.layers.Average(name = 'Ave39010', )([Con19602,Fla68153])
model = tf.keras.models.Model(inputs=[in0Bat84161,in0Con19602,in0Min69487,in1Min69487], outputs=Ave39010)
w = model.get_layer('Bat84161').get_weights() 
w[0] = np.array([0.426])
w[1] = np.array([0.3241])
w[2] = np.array([0.7722])
w[3] = np.array([0.1471])
model.get_layer('Bat84161').set_weights(w) 
in0Bat84161 = tf.constant([[1.5002]])
in0Con19602 = tf.constant([[0.5585, 0.4475, 0.106]])
in0Min69487 = tf.constant([[[[[0.0088, 0.6221], [0.5268, 0.5735]]]]])
in1Min69487 = tf.constant([[[[[0.0537, 0.5148], [0.5465, 0.5947]]]]])
print (np.array2string(model.predict([in0Bat84161,in0Con19602,in0Min69487,in1Min69487],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Ave39010.png')

LBat84161 = batch_normalization_layer([[1.5002]], 1, 0.19568164339441196, [0.426], [0.3241], [0.7722], [0.1471], Bat84161), 
LRes48746 = reshape_layer(Bat84161, [1, 1], Res48746), 
LRes16878 = reshape_layer(Res48746, [1, 1, 1], Res16878), 
LMax94605 = max_pool2D_layer(Res16878, 1, 1, 1, 1, false, Max94605), 
LRes84953 = reshape_layer(Max94605, [1, 1], Res84953), 
LFla10744 = flatten_layer(Res84953, Fla10744), 
LCon19602 = concatenate_layer([Fla10744,[[0.5585, 0.4475, 0.106]]], 1, Con19602), 
LMin69487 = minimum_layer([[[[[[0.0088, 0.6221], [0.5268, 0.5735]]]]], [[[[[0.0537, 0.5148], [0.5465, 0.5947]]]]]], Min69487), 
LFla68153 = flatten_layer(Min69487, Fla68153), 
LAve39010 = average_layer([Con19602,Fla68153], Ave39010), 
exec_layers([LBat84161,LRes48746,LRes16878,LMax94605,LRes84953,LFla10744,LCon19602,LMin69487,LFla68153,LAve39010],["Bat84161","Res48746","Res16878","Max94605","Res84953","Fla10744","Con19602","Min69487","Fla68153","Ave39010"],Ave39010,"Ave39010")

Actual (Unparsed): [[0.4313014, 0.5366500, 0.4871500, 0.3397500]]

Expected (Unparsed): [[0.43130135823157373,0.5366500000000001,0.48715,0.33975]]

Actual:   [[0.4314, 0.5367, 0.4872, 0.3398]]

Expected: [[0.4314, 0.5367, 0.4872, 0.3398]]