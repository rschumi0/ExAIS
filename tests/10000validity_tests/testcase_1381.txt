import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Dot29198 = tf.keras.layers.Input(shape=([3]))
in1Dot29198 = tf.keras.layers.Input(shape=([3]))

Dot29198 = keras.layers.Dot(axes=(1, 1), name = 'Dot29198', )([in0Dot29198,in1Dot29198])
Bat42621 = keras.layers.BatchNormalization(axis=1, epsilon=0.8562613369401112,  name = 'Bat42621', )(Dot29198)
Res21229 = keras.layers.Reshape((1, 1), name = 'Res21229', )(Bat42621)
Glo77289 = keras.layers.GlobalAveragePooling1D(name = 'Glo77289', )(Res21229)
model = tf.keras.models.Model(inputs=[in0Dot29198,in1Dot29198], outputs=Glo77289)
w = model.get_layer('Bat42621').get_weights() 
w[0] = np.array([0.7535])
w[1] = np.array([0.2628])
w[2] = np.array([0.2244])
w[3] = np.array([0.2436])
model.get_layer('Bat42621').set_weights(w) 
in0Dot29198 = tf.constant([[0.4233, 0.2893, 0.0411]])
in1Dot29198 = tf.constant([[0.1071, 0.3857, 0.6875]])
print (np.array2string(model.predict([in0Dot29198,in1Dot29198],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Glo77289.png')

LDot29198 = dot_layer([[0.4233, 0.2893, 0.0411]], [[0.1071, 0.3857, 0.6875]], 1, 1, Dot29198), 
LBat42621 = batch_normalization_layer(Dot29198, 1, 0.8562613369401112, [0.7535], [0.2628], [0.2244], [0.2436], Bat42621), 
LRes21229 = reshape_layer(Bat42621, [1, 1], Res21229), 
LGlo77289 = global_average_pooling1D_layer(Res21229, Glo77289), 
exec_layers([LDot29198,LBat42621,LRes21229,LGlo77289],["Dot29198","Bat42621","Res21229","Glo77289"],Glo77289,"Glo77289")

Actual (Unparsed): [[0.2346174]]

Expected (Unparsed): [[0.23461742487682208]]

Actual:   [[0.2347]]

Expected: [[0.2347]]