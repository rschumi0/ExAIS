import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Up_19569 = tf.keras.layers.Input(shape=([4, 1]))

Up_19569 = keras.layers.UpSampling1D(size=(1), name = 'Up_19569', )(in0Up_19569)
Res95909 = keras.layers.Reshape((4, 1, 1), name = 'Res95909', )(Up_19569)
Zer99650 = keras.layers.ZeroPadding2D(padding=((1, 1), (1, 1)), name = 'Zer99650', )(Res95909)
Con27257 = keras.layers.Conv2DTranspose(3, (1, 1),strides=(1, 1), padding='same', name = 'Con27257', )(Zer99650)
model = tf.keras.models.Model(inputs=[in0Up_19569], outputs=Con27257)
w = model.get_layer('Con27257').get_weights() 
w[0] = np.array([[[[0.7757], [0.8259], [0.4278]]]])
w[1] = np.array([0, 0, 0])
model.get_layer('Con27257').set_weights(w) 
in0Up_19569 = tf.constant([[[1.5971], [1.9524], [1.9324], [1.5663]]])
print (np.array2string(model.predict([in0Up_19569],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Con27257.png')

LUp_19569 = up_sampling1D_layer([[[1.5971], [1.9524], [1.9324], [1.5663]]], 1, Up_19569), 
LRes95909 = reshape_layer(Up_19569, [4, 1, 1], Res95909), 
LZer99650 = zero_padding2D_layer(Res95909, 1, 1, 1, 1, Zer99650), 
LCon27257 = conv2D_transpose_layer(Zer99650, 1, 1,[[[[0.7757], [0.8259], [0.4278]]]],[0, 0, 0], 1, 1, true, Con27257), 
exec_layers([LUp_19569,LRes95909,LZer99650,LCon27257],["Up_19569","Res95909","Zer99650","Con27257"],Con27257,"Con27257")

Actual (Unparsed): [[[[0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000]], [[0.0000000, 0.0000000, 0.0000000], [1.2388705, 1.3190449, 0.6832394], [0.0000000, 0.0000000, 0.0000000]], [[0.0000000, 0.0000000, 0.0000000], [1.5144767, 1.6124871, 0.8352367], [0.0000000, 0.0000000, 0.0000000]], [[0.0000000, 0.0000000, 0.0000000], [1.4989627, 1.5959692, 0.8266807], [0.0000000, 0.0000000, 0.0000000]], [[0.0000000, 0.0000000, 0.0000000], [1.2149789, 1.2936072, 0.6700632], [0.0000000, 0.0000000, 0.0000000]], [[0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000]]]]

Expected (Unparsed): [[[[0.0,0.0,0.0],[0.0,0.0,0.0],[0.0,0.0,0.0]],[[0.0,0.0,0.0],[1.23887047,1.31904489,0.68323938],[0.0,0.0,0.0]],[[0.0,0.0,0.0],[1.5144766799999998,1.61248716,0.83523672],[0.0,0.0,0.0]],[[0.0,0.0,0.0],[1.4989626799999998,1.5959691599999999,0.82668072],[0.0,0.0,0.0]],[[0.0,0.0,0.0],[1.21497891,1.29360717,0.67006314],[0.0,0.0,0.0]],[[0.0,0.0,0.0],[0.0,0.0,0.0],[0.0,0.0,0.0]]]]

Actual:   [[[[0, 0, 0], [0, 0, 0], [0, 0, 0]], [[0, 0, 0], [1.2389, 1.3191, 0.6833], [0, 0, 0]], [[0, 0, 0], [1.5145, 1.6125, 0.8353], [0, 0, 0]], [[0, 0, 0], [1.499, 1.596, 0.8267], [0, 0, 0]], [[0, 0, 0], [1.215, 1.2937, 0.6701], [0, 0, 0]], [[0, 0, 0], [0, 0, 0], [0, 0, 0]]]]

Expected: [[[[0, 0, 0], [0, 0, 0], [0, 0, 0]], [[0, 0, 0], [1.2389, 1.3191, 0.6833], [0, 0, 0]], [[0, 0, 0], [1.5145, 1.6125, 0.8353], [0, 0, 0]], [[0, 0, 0], [1.499, 1.596, 0.8267], [0, 0, 0]], [[0, 0, 0], [1.215, 1.2937, 0.6701], [0, 0, 0]], [[0, 0, 0], [0, 0, 0], [0, 0, 0]]]]