import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Add48595 = tf.keras.layers.Input(shape=([1, 1, 1]))
in1Add48595 = tf.keras.layers.Input(shape=([1, 1, 1]))
in0Con46245 = tf.keras.layers.Input(shape=([2, 2, 3, 1]))
in0Min42589 = tf.keras.layers.Input(shape=([2, 2, 1]))
in1Min42589 = tf.keras.layers.Input(shape=([2, 2, 1]))
in0Con39165 = tf.keras.layers.Input(shape=([2, 2, 3, 1]))
in0Sub80163 = tf.keras.layers.Input(shape=([2, 2, 3, 2]))
in1Sub80163 = tf.keras.layers.Input(shape=([2, 2, 3, 2]))
in0Dot20659 = tf.keras.layers.Input(shape=([2, 2]))
in1Dot20659 = tf.keras.layers.Input(shape=([2, 2]))
in0Con59732 = tf.keras.layers.Input(shape=([2, 10]))

Add48595 = keras.layers.Add(name = 'Add48595', )([in0Add48595,in1Add48595])
Res27572 = keras.layers.Reshape((1, 1, 1, 1), name = 'Res27572', )(Add48595)
Zer2274 = keras.layers.ZeroPadding3D(padding=((1, 0), (1, 0), (2, 0)), name = 'Zer2274', )(Res27572)
Con46245 = keras.layers.Concatenate(axis=4, name = 'Con46245', )([Zer2274,in0Con46245])
Min42589 = keras.layers.Minimum(name = 'Min42589', )([in0Min42589,in1Min42589])
Res49615 = keras.layers.Reshape((2, 2, 1, 1), name = 'Res49615', )(Min42589)
Zer72365 = keras.layers.ZeroPadding3D(padding=((0, 0), (0, 0), (2, 0)), name = 'Zer72365', )(Res49615)
Con39165 = keras.layers.Concatenate(axis=4, name = 'Con39165', )([Zer72365,in0Con39165])
Sub80163 = keras.layers.Subtract(name = 'Sub80163', )([in0Sub80163,in1Sub80163])
Min38541 = keras.layers.Minimum(name = 'Min38541', )([Con39165,Sub80163])
Sub37157 = keras.layers.Subtract(name = 'Sub37157', )([Con46245,Min38541])
Res6053 = keras.layers.Reshape((2, 2, 6), name = 'Res6053', )(Sub37157)
Res6995 = keras.layers.Reshape((2, 12), name = 'Res6995', )(Res6053)
Dot20659 = keras.layers.Dot(axes=(2, 1), name = 'Dot20659', )([in0Dot20659,in1Dot20659])
Con59732 = keras.layers.Concatenate(axis=2, name = 'Con59732', )([Dot20659,in0Con59732])
Max95628 = keras.layers.Maximum(name = 'Max95628', )([Res6995,Con59732])
model = tf.keras.models.Model(inputs=[in0Add48595,in1Add48595,in0Con46245,in0Min42589,in1Min42589,in0Con39165,in0Sub80163,in1Sub80163,in0Dot20659,in1Dot20659,in0Con59732], outputs=Max95628)
in0Add48595 = tf.constant([[[[0.1111]]]])
in1Add48595 = tf.constant([[[[0.0526]]]])
in0Con46245 = tf.constant([[[[[0.0096], [0.4408], [0.7281]], [[0.4206], [0.3594], [0.0797]]], [[[0.9185], [0.7153], [0.925]], [[0.4275], [0.9477], [0.9274]]]]])
in0Min42589 = tf.constant([[[[0.4818], [0.064]], [[0.0141], [0.4953]]]])
in1Min42589 = tf.constant([[[[0.8043], [0.4081]], [[0.7571], [0.2647]]]])
in0Con39165 = tf.constant([[[[[0.4511], [0.4863], [0.1584]], [[0.924], [0.2594], [0.2705]]], [[[0.7672], [0.332], [0.2483]], [[0.4421], [0.0645], [0.3576]]]]])
in0Sub80163 = tf.constant([[[[[0.0697, 0.0612], [0.2543, 0.4994], [0.1225, 0.4808]], [[0.7948, 0.352], [0.8663, 0.4437], [0.9969, 0.2115]]], [[[0.199, 0.1617], [0.1432, 0.1989], [0.7168, 0.7987]], [[0.5584, 0.7412], [0.2191, 0.051], [0.1879, 0.3171]]]]])
in1Sub80163 = tf.constant([[[[[0.1796, 0.0043], [0.5593, 0.5245], [0.5144, 0.3076]], [[0.8635, 0.4712], [0.1741, 0.8138], [0.9798, 0.1111]]], [[[0.3135, 0.2324], [0.8879, 0.5583], [0.0538, 0.0075]], [[0.0575, 0.5989], [0.1385, 0.5923], [0.0893, 0.5904]]]]])
in0Dot20659 = tf.constant([[[0.1091, 0.524], [0.0908, 0.689]]])
in1Dot20659 = tf.constant([[[0.977, 0.2225], [0.0155, 0.8778]]])
in0Con59732 = tf.constant([[[0.153, 0.2059, 0.4773, 0.1976, 0.9672, 0.4343, 0.2038, 0.5441, 0.609, 0.2142], [0.7093, 0.5631, 0.0302, 0.981, 0.971, 0.4822, 0.1863, 0.5036, 0.5263, 0.6716]]])
print (np.array2string(model.predict([in0Add48595,in1Add48595,in0Con46245,in0Min42589,in1Min42589,in0Con39165,in0Sub80163,in1Sub80163,in0Dot20659,in1Dot20659,in0Con59732],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Max95628.png')

LAdd48595 = add_layer([[[[[0.1111]]]], [[[[0.0526]]]]], Add48595), 
LRes27572 = reshape_layer(Add48595, [1, 1, 1, 1], Res27572), 
LZer2274 = zero_padding3D_layer(Res27572, 1, 0, 1, 0, 2, 0, Zer2274), 
LCon46245 = concatenate_layer([Zer2274,[[[[[0.0096], [0.4408], [0.7281]], [[0.4206], [0.3594], [0.0797]]], [[[0.9185], [0.7153], [0.925]], [[0.4275], [0.9477], [0.9274]]]]]], 4, Con46245), 
LMin42589 = minimum_layer([[[[[0.4818], [0.064]], [[0.0141], [0.4953]]]], [[[[0.8043], [0.4081]], [[0.7571], [0.2647]]]]], Min42589), 
LRes49615 = reshape_layer(Min42589, [2, 2, 1, 1], Res49615), 
LZer72365 = zero_padding3D_layer(Res49615, 0, 0, 0, 0, 2, 0, Zer72365), 
LCon39165 = concatenate_layer([Zer72365,[[[[[0.4511], [0.4863], [0.1584]], [[0.924], [0.2594], [0.2705]]], [[[0.7672], [0.332], [0.2483]], [[0.4421], [0.0645], [0.3576]]]]]], 4, Con39165), 
LSub80163 = subtract_layer([[[[[0.0697, 0.0612], [0.2543, 0.4994], [0.1225, 0.4808]], [[0.7948, 0.352], [0.8663, 0.4437], [0.9969, 0.2115]]], [[[0.199, 0.1617], [0.1432, 0.1989], [0.7168, 0.7987]], [[0.5584, 0.7412], [0.2191, 0.051], [0.1879, 0.3171]]]]], [[[[[0.1796, 0.0043], [0.5593, 0.5245], [0.5144, 0.3076]], [[0.8635, 0.4712], [0.1741, 0.8138], [0.9798, 0.1111]]], [[[0.3135, 0.2324], [0.8879, 0.5583], [0.0538, 0.0075]], [[0.0575, 0.5989], [0.1385, 0.5923], [0.0893, 0.5904]]]]], Sub80163), 
LMin38541 = minimum_layer([Con39165,Sub80163], Min38541), 
LSub37157 = subtract_layer(Con46245,Min38541, Sub37157), 
LRes6053 = reshape_layer(Sub37157, [2, 2, 6], Res6053), 
LRes6995 = reshape_layer(Res6053, [2, 12], Res6995), 
LDot20659 = dot_layer([[[0.1091, 0.524], [0.0908, 0.689]]], [[[0.977, 0.2225], [0.0155, 0.8778]]], 2, 1, Dot20659), 
LCon59732 = concatenate_layer([Dot20659,[[[0.153, 0.2059, 0.4773, 0.1976, 0.9672, 0.4343, 0.2038, 0.5441, 0.609, 0.2142], [0.7093, 0.5631, 0.0302, 0.981, 0.971, 0.4822, 0.1863, 0.5036, 0.5263, 0.6716]]]], 2, Con59732), 
LMax95628 = maximum_layer([Res6995,Con59732], Max95628), 
exec_layers([LAdd48595,LRes27572,LZer2274,LCon46245,LMin42589,LRes49615,LZer72365,LCon39165,LSub80163,LMin38541,LSub37157,LRes6053,LRes6995,LDot20659,LCon59732,LMax95628],["Add48595","Res27572","Zer2274","Con46245","Min42589","Res49615","Zer72365","Con39165","Sub80163","Min38541","Sub37157","Res6053","Res6995","Dot20659","Con59732","Max95628"],Max95628,"Max95628")

Actual (Unparsed): [[[0.1147127, 0.4842419, 0.3050000, 0.4659000, 0.4773000, 0.5697000, 0.9672000, 0.5398000, 0.2038000, 0.7295000, 0.6090000, 0.2142000], [0.1145000, 0.9892000, 0.7447000, 1.0747000, 0.0302000, 0.9810000, 0.9710000, 0.4822000, 0.1863000, 1.4890000, 0.5263000, 1.2007000]]]

Expected (Unparsed): [[[0.1147127,0.48424195000000003,0.305,0.4659,0.4773,0.5697,0.9672,0.5398000000000001,0.2038,0.7295,0.609,0.2142],[0.11449999999999999,0.9892,0.7447,1.0747,0.0302,0.981,0.971,0.4822,0.1863,1.4889999999999999,0.5263,1.2007]]]

Actual:   [[[0.1148, 0.4843, 0.305, 0.4659, 0.4773, 0.5697, 0.9672, 0.5398, 0.2038, 0.7295, 0.609, 0.2142], [0.1145, 0.9892, 0.7447, 1.0747, 0.0302, 0.981, 0.971, 0.4822, 0.1863, 1.489, 0.5263, 1.2007]]]

Expected: [[[0.1148, 0.4843, 0.305, 0.4659, 0.4773, 0.5697, 0.9672, 0.5399, 0.2038, 0.7295, 0.609, 0.2142], [0.1145, 0.9892, 0.7447, 1.0747, 0.0302, 0.981, 0.971, 0.4822, 0.1863, 1.489, 0.5263, 1.2007]]]