import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Zer32362 = tf.keras.layers.Input(shape=([1, 4, 2]))
in0Min21185 = tf.keras.layers.Input(shape=([2, 1, 2, 1]))
in1Min21185 = tf.keras.layers.Input(shape=([2, 1, 2, 1]))

Zer32362 = keras.layers.ZeroPadding2D(padding=((1, 1), (1, 1)), name = 'Zer32362', )(in0Zer32362)
Res48637 = keras.layers.Reshape((3, 6, 2, 1), name = 'Res48637', )(Zer32362)
Min21185 = keras.layers.Minimum(name = 'Min21185', )([in0Min21185,in1Min21185])
Zer36499 = keras.layers.ZeroPadding3D(padding=((1, 0), (5, 0), (0, 0)), name = 'Zer36499', )(Min21185)
Min38449 = keras.layers.Minimum(name = 'Min38449', )([Res48637,Zer36499])
Res91990 = keras.layers.Reshape((3, 6, 2), name = 'Res91990', )(Min38449)
Res61646 = keras.layers.Reshape((3, 12), name = 'Res61646', )(Res91990)
Sim2085 = keras.layers.SimpleRNN(3,name = 'Sim2085', )(Res61646)
Den18105 = keras.layers.Dense(4,name = 'Den18105', )(Sim2085)
model = tf.keras.models.Model(inputs=[in0Zer32362,in0Min21185,in1Min21185], outputs=Den18105)
w = model.get_layer('Sim2085').get_weights() 
w[0] = np.array([[6, 9, 1], [3, 4, 2], [10, 9, 9], [10, 9, 3], [7, 7, 10], [9, 5, 8], [7, 9, 5], [9, 3, 6], [6, 1, 8], [6, 10, 2], [8, 5, 5], [7, 1, 5]])
w[1] = np.array([[3, 4, 7], [7, 9, 7], [3, 2, 8]])
w[2] = np.array([6, 5, 5])
model.get_layer('Sim2085').set_weights(w) 
w = model.get_layer('Den18105').get_weights() 
w[0] = np.array([[0.3892, 0.9211, 0.6378, 0.4788], [0.5751, 0.2186, 0.1188, 0.8203], [0.2788, 0.7954, 0.2972, 0.1382]])
w[1] = np.array([0.7157, 0.8859, 0.4417, 0.8616])
model.get_layer('Den18105').set_weights(w) 
in0Zer32362 = tf.constant([[[[1.3075, 1.0057], [1.1825, 1.0355], [1.9244, 1.5649], [1.7211, 1.0554]]]])
in0Min21185 = tf.constant([[[[[0.0573], [0.7127]]], [[[0.6758], [0.2925]]]]])
in1Min21185 = tf.constant([[[[[0.286], [0.5]]], [[[0.4487], [0.5191]]]]])
print (np.array2string(model.predict([in0Zer32362,in0Min21185,in1Min21185],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Den18105.png')

LZer32362 = zero_padding2D_layer([[[[1.3075, 1.0057], [1.1825, 1.0355], [1.9244, 1.5649], [1.7211, 1.0554]]]], 1, 1, 1, 1, Zer32362), 
LRes48637 = reshape_layer(Zer32362, [3, 6, 2, 1], Res48637), 
LMin21185 = minimum_layer([[[[[[0.0573], [0.7127]]], [[[0.6758], [0.2925]]]]], [[[[[0.286], [0.5]]], [[[0.4487], [0.5191]]]]]], Min21185), 
LZer36499 = zero_padding3D_layer(Min21185, 1, 0, 5, 0, 0, 0, Zer36499), 
LMin38449 = minimum_layer([Res48637,Zer36499], Min38449), 
LRes91990 = reshape_layer(Min38449, [3, 6, 2], Res91990), 
LRes61646 = reshape_layer(Res91990, [3, 12], Res61646), 
LSim2085 = simple_rnn_layer(Res61646,[[6, 9, 1], [3, 4, 2], [10, 9, 9], [10, 9, 3], [7, 7, 10], [9, 5, 8], [7, 9, 5], [9, 3, 6], [6, 1, 8], [6, 10, 2], [8, 5, 5], [7, 1, 5]],[[3, 4, 7], [7, 9, 7], [3, 2, 8]],[6, 5, 5], Sim2085), 
LDen18105 = dense_layer(Sim2085, [[0.3892, 0.9211, 0.6378, 0.4788], [0.5751, 0.2186, 0.1188, 0.8203], [0.2788, 0.7954, 0.2972, 0.1382]],[0.7157, 0.8859, 0.4417, 0.8616], Den18105), 
exec_layers([LZer32362,LRes48637,LMin21185,LZer36499,LMin38449,LRes91990,LRes61646,LSim2085,LDen18105],["Zer32362","Res48637","Min21185","Zer36499","Min38449","Res91990","Res61646","Sim2085","Den18105"],Den18105,"Den18105")

Actual (Unparsed): [[1.9588000, 2.8210000, 1.4955000, 2.2989000]]

Expected (Unparsed): [[1.9587999999999999,2.8209999999999997,1.4954999999999998,2.2989]]

Actual:   [[1.9588, 2.821, 1.4955, 2.2989]]

Expected: [[1.9588, 2.821, 1.4955, 2.2989]]