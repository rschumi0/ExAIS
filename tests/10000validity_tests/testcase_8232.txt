import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Sub5949 = tf.keras.layers.Input(shape=([2, 3, 3]))
in1Sub5949 = tf.keras.layers.Input(shape=([2, 3, 3]))
in0Con58180 = tf.keras.layers.Input(shape=([3, 3, 4, 2]))
in0Con49484 = tf.keras.layers.Input(shape=([1, 1, 2, 1]))

Sub5949 = keras.layers.Subtract(name = 'Sub5949', )([in0Sub5949,in1Sub5949])
Res962 = keras.layers.Reshape((2, 3, 3, 1), name = 'Res962', )(Sub5949)
Zer37640 = keras.layers.ZeroPadding3D(padding=((1, 0), (0, 0), (1, 0)), name = 'Zer37640', )(Res962)
Con58180 = keras.layers.Concatenate(axis=4, name = 'Con58180', )([Zer37640,in0Con58180])
Con49484 = keras.layers.Conv3D(3, (1, 1, 2),strides=(1, 1, 1), padding='same', dilation_rate=(1, 1, 1), name = 'Con49484', )(in0Con49484)
Zer42248 = keras.layers.ZeroPadding3D(padding=((1, 1), (1, 1), (1, 1)), name = 'Zer42248', )(Con49484)
Mul67266 = keras.layers.Multiply(name = 'Mul67266', )([Con58180,Zer42248])
Res33612 = keras.layers.Reshape((3, 3, 12), name = 'Res33612', )(Mul67266)
Con14851 = keras.layers.Conv2DTranspose(3, (3, 1),strides=(1, 1), padding='valid', name = 'Con14851', )(Res33612)
model = tf.keras.models.Model(inputs=[in0Sub5949,in1Sub5949,in0Con58180,in0Con49484], outputs=Con14851)
w = model.get_layer('Con49484').get_weights() 
w[0] = np.array([[[[[0.0147, 0.8086, 0.562]], [[0.3447, 0.5781, 0.6866]]]]])
w[1] = np.array([0, 0, 0])
model.get_layer('Con49484').set_weights(w) 
w = model.get_layer('Con14851').get_weights() 
w[0] = np.array([[[[0.1125, 0.0392, 0.1719, 0.4276, 0.082, 0.2427, 0.4728, 0.7048, 0.6586, 0.0841, 0.5696, 0.9685], [0.1862, 0.7113, 0.1632, 0.4642, 0.5877, 0.2866, 0.7375, 0.8644, 0.2507, 0.8386, 0.0451, 0.0138], [0.4889, 0.42, 0.8966, 0.3789, 0.1671, 0.1553, 0.8701, 0.1583, 0.9846, 0.9247, 0.7975, 0.6357]]], [[[0.7345, 0.7618, 0.5258, 0.6334, 0.5758, 0.5198, 0.5089, 0.8593, 0.987, 0.0007, 0.2388, 0.5318], [0.6061, 0.5357, 0.3914, 0.9128, 0.6032, 0.9541, 0.8327, 0.2845, 0.582, 0.9866, 0.3076, 0.4622], [0.2599, 0.4089, 0.7161, 0.1544, 0.3385, 0.6527, 0.3709, 0.3511, 0.0437, 0.1854, 0.5281, 0.4502]]], [[[0.7877, 0.6911, 0.7808, 0.0176, 0.2845, 0.9735, 0.6159, 0.916, 0.2396, 0.5457, 0.5489, 0.0342], [0.4223, 0.071, 0.7699, 0.0049, 0.5321, 0.1757, 0.1631, 0.1038, 0.7726, 0.6689, 0.8934, 0.9936], [0.4593, 0.8705, 0.4936, 0.0944, 0.303, 0.5772, 0.5318, 0.1439, 0.2369, 0.1735, 0.4892, 0.9424]]]])
w[1] = np.array([0, 0, 0])
model.get_layer('Con14851').set_weights(w) 
in0Sub5949 = tf.constant([[[[0.2528, 0.1182, 0.3299], [0.6348, 0.4109, 0.455], [0.1142, 0.3968, 0.7057]], [[0.6016, 0.7986, 0.3432], [0.3278, 0.218, 0.3584], [0.9696, 0.1393, 0.5716]]]])
in1Sub5949 = tf.constant([[[[0.1731, 0.0226, 0.0505], [0.6372, 0.6751, 0.8027], [0.0293, 0.1631, 0.2639]], [[0.7578, 0.0212, 0.6285], [0.1481, 0.9926, 0.3634], [0.0236, 0.7891, 0.1543]]]])
in0Con58180 = tf.constant([[[[[0.7475, 0.0449], [0.9009, 0.5555], [0.979, 0.836], [0.9114, 0.2186]], [[0.6073, 0.7997], [0.065, 0.5806], [0.3048, 0.503], [0.7293, 0.1064]], [[0.2579, 0.4088], [0.1875, 0.3364], [0.8406, 0.8677], [0.3931, 0.5046]]], [[[0.888, 0.6606], [0.9643, 0.7177], [0.7146, 0.4196], [0.8787, 0.7533]], [[0.1353, 0.7566], [0.0232, 0.7354], [0.2658, 0.0749], [0.3531, 0.3029]], [[0.8091, 0.8576], [0.9184, 0.3979], [0.8651, 0.6843], [0.4258, 0.4704]]], [[[0.0406, 0.355], [0.3244, 0.7219], [0.7833, 0.2762], [0.6245, 0.9901]], [[0.4126, 0.6994], [0.7904, 0.016], [0.282, 0.4918], [0.0829, 0.1286]], [[0.868, 0.8691], [0.6709, 0.8318], [0.3536, 0.9192], [0.679, 0.3843]]]]])
in0Con49484 = tf.constant([[[[[0.2483], [0.2911]]]]])
print (np.array2string(model.predict([in0Sub5949,in1Sub5949,in0Con58180,in0Con49484],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Con14851.png')

LSub5949 = subtract_layer([[[[0.2528, 0.1182, 0.3299], [0.6348, 0.4109, 0.455], [0.1142, 0.3968, 0.7057]], [[0.6016, 0.7986, 0.3432], [0.3278, 0.218, 0.3584], [0.9696, 0.1393, 0.5716]]]], [[[[0.1731, 0.0226, 0.0505], [0.6372, 0.6751, 0.8027], [0.0293, 0.1631, 0.2639]], [[0.7578, 0.0212, 0.6285], [0.1481, 0.9926, 0.3634], [0.0236, 0.7891, 0.1543]]]], Sub5949), 
LRes962 = reshape_layer(Sub5949, [2, 3, 3, 1], Res962), 
LZer37640 = zero_padding3D_layer(Res962, 1, 0, 0, 0, 1, 0, Zer37640), 
LCon58180 = concatenate_layer([Zer37640,[[[[[0.7475, 0.0449], [0.9009, 0.5555], [0.979, 0.836], [0.9114, 0.2186]], [[0.6073, 0.7997], [0.065, 0.5806], [0.3048, 0.503], [0.7293, 0.1064]], [[0.2579, 0.4088], [0.1875, 0.3364], [0.8406, 0.8677], [0.3931, 0.5046]]], [[[0.888, 0.6606], [0.9643, 0.7177], [0.7146, 0.4196], [0.8787, 0.7533]], [[0.1353, 0.7566], [0.0232, 0.7354], [0.2658, 0.0749], [0.3531, 0.3029]], [[0.8091, 0.8576], [0.9184, 0.3979], [0.8651, 0.6843], [0.4258, 0.4704]]], [[[0.0406, 0.355], [0.3244, 0.7219], [0.7833, 0.2762], [0.6245, 0.9901]], [[0.4126, 0.6994], [0.7904, 0.016], [0.282, 0.4918], [0.0829, 0.1286]], [[0.868, 0.8691], [0.6709, 0.8318], [0.3536, 0.9192], [0.679, 0.3843]]]]]], 4, Con58180), 
LCon49484 = conv3D_layer([[[[[0.2483], [0.2911]]]]], 1, 1, 2,[[[[[0.0147, 0.8086, 0.562]], [[0.3447, 0.5781, 0.6866]]]]],[0, 0, 0], 1, 1, 1, true, 1, 1, 1, Con49484), 
LZer42248 = zero_padding3D_layer(Con49484, 1, 1, 1, 1, 1, 1, Zer42248), 
LMul67266 = multiply_layer([Con58180,Zer42248], Mul67266), 
LRes33612 = reshape_layer(Mul67266, [3, 3, 12], Res33612), 
LCon14851 = conv2D_transpose_layer(Res33612, 3, 1,[[[[0.1125, 0.0392, 0.1719, 0.4276, 0.082, 0.2427, 0.4728, 0.7048, 0.6586, 0.0841, 0.5696, 0.9685], [0.1862, 0.7113, 0.1632, 0.4642, 0.5877, 0.2866, 0.7375, 0.8644, 0.2507, 0.8386, 0.0451, 0.0138], [0.4889, 0.42, 0.8966, 0.3789, 0.1671, 0.1553, 0.8701, 0.1583, 0.9846, 0.9247, 0.7975, 0.6357]]], [[[0.7345, 0.7618, 0.5258, 0.6334, 0.5758, 0.5198, 0.5089, 0.8593, 0.987, 0.0007, 0.2388, 0.5318], [0.6061, 0.5357, 0.3914, 0.9128, 0.6032, 0.9541, 0.8327, 0.2845, 0.582, 0.9866, 0.3076, 0.4622], [0.2599, 0.4089, 0.7161, 0.1544, 0.3385, 0.6527, 0.3709, 0.3511, 0.0437, 0.1854, 0.5281, 0.4502]]], [[[0.7877, 0.6911, 0.7808, 0.0176, 0.2845, 0.9735, 0.6159, 0.916, 0.2396, 0.5457, 0.5489, 0.0342], [0.4223, 0.071, 0.7699, 0.0049, 0.5321, 0.1757, 0.1631, 0.1038, 0.7726, 0.6689, 0.8934, 0.9936], [0.4593, 0.8705, 0.4936, 0.0944, 0.303, 0.5772, 0.5318, 0.1439, 0.2369, 0.1735, 0.4892, 0.9424]]]],[0, 0, 0], 1, 1, false, Con14851), 
exec_layers([LSub5949,LRes962,LZer37640,LCon58180,LCon49484,LZer42248,LMul67266,LRes33612,LCon14851],["Sub5949","Res962","Zer37640","Con58180","Con49484","Zer42248","Mul67266","Res33612","Con14851"],Con14851,"Con14851")

Actual (Unparsed): [[[[0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000]], [[0.0000000, 0.0000000, 0.0000000], [0.1128059, 0.1327722, 0.0610850], [0.0000000, 0.0000000, 0.0000000]], [[0.0000000, 0.0000000, 0.0000000], [0.1997976, 0.2670748, 0.1878596], [0.0000000, 0.0000000, 0.0000000]], [[0.0000000, 0.0000000, 0.0000000], [0.3049711, 0.0641872, 0.1579475], [0.0000000, 0.0000000, 0.0000000]], [[0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000]]]]

Expected (Unparsed): [[[[0.0,0.0,0.0],[0.0,0.0,0.0],[0.0,0.0,0.0]],[[0.0,0.0,0.0],[0.11280589086596682,0.13277221620299182,0.06108495744427821],[0.0,0.0,0.0]],[[0.0,0.0,0.0],[0.19979759186840262,0.26707483206435867,0.18785962090892425],[0.0,0.0,0.0]],[[0.0,0.0,0.0],[0.3049710743482303,0.06418721655343582,0.15794748224486205],[0.0,0.0,0.0]],[[0.0,0.0,0.0],[0.0,0.0,0.0],[0.0,0.0,0.0]]]]

Actual:   [[[[0, 0, 0], [0, 0, 0], [0, 0, 0]], [[0, 0, 0], [0.1129, 0.1328, 0.0611], [0, 0, 0]], [[0, 0, 0], [0.1998, 0.2671, 0.1879], [0, 0, 0]], [[0, 0, 0], [0.305, 0.0642, 0.158], [0, 0, 0]], [[0, 0, 0], [0, 0, 0], [0, 0, 0]]]]

Expected: [[[[0, 0, 0], [0, 0, 0], [0, 0, 0]], [[0, 0, 0], [0.1129, 0.1328, 0.0611], [0, 0, 0]], [[0, 0, 0], [0.1998, 0.2671, 0.1879], [0, 0, 0]], [[0, 0, 0], [0.305, 0.0642, 0.158], [0, 0, 0]], [[0, 0, 0], [0, 0, 0], [0, 0, 0]]]]