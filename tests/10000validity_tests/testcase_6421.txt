import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Ave85857 = tf.keras.layers.Input(shape=([2, 2]))
in1Ave85857 = tf.keras.layers.Input(shape=([2, 2]))
in0Con83427 = tf.keras.layers.Input(shape=([2, 4, 1]))
in0Sub15293 = tf.keras.layers.Input(shape=([2, 2, 2]))
in1Sub15293 = tf.keras.layers.Input(shape=([2, 2, 2]))
in0Con30419 = tf.keras.layers.Input(shape=([5, 6, 2]))
in0Min68710 = tf.keras.layers.Input(shape=([1, 2, 2, 2]))
in1Min68710 = tf.keras.layers.Input(shape=([1, 2, 2, 2]))
in0Zer5827 = tf.keras.layers.Input(shape=([3, 4, 3]))
in0Con3861 = tf.keras.layers.Input(shape=([5, 6, 1]))

Ave85857 = keras.layers.Average(name = 'Ave85857', )([in0Ave85857,in1Ave85857])
Res89835 = keras.layers.Reshape((2, 2, 1), name = 'Res89835', )(Ave85857)
Zer16195 = keras.layers.ZeroPadding2D(padding=((0, 0), (2, 0)), name = 'Zer16195', )(Res89835)
Con83427 = keras.layers.Concatenate(axis=3, name = 'Con83427', )([Zer16195,in0Con83427])
Sub15293 = keras.layers.Subtract(name = 'Sub15293', )([in0Sub15293,in1Sub15293])
Up_73049 = keras.layers.UpSampling2D(size=(1, 2), name = 'Up_73049', )(Sub15293)
Min82767 = keras.layers.Minimum(name = 'Min82767', )([Con83427,Up_73049])
Zer11538 = keras.layers.ZeroPadding2D(padding=((3, 0), (2, 0)), name = 'Zer11538', )(Min82767)
Con30419 = keras.layers.Concatenate(axis=3, name = 'Con30419', )([Zer11538,in0Con30419])
Min68710 = keras.layers.Minimum(name = 'Min68710', )([in0Min68710,in1Min68710])
Res41193 = keras.layers.Reshape((1, 2, 4), name = 'Res41193', )(Min68710)
Zer47287 = keras.layers.ZeroPadding2D(padding=((4, 0), (4, 0)), name = 'Zer47287', )(Res41193)
Zer5827 = keras.layers.ZeroPadding2D(padding=((1, 1), (1, 1)), name = 'Zer5827', )(in0Zer5827)
Con3861 = keras.layers.Concatenate(axis=3, name = 'Con3861', )([Zer5827,in0Con3861])
Add87296 = keras.layers.Add(name = 'Add87296', )([Zer47287,Con3861])
Sub73925 = keras.layers.Subtract(name = 'Sub73925', )([Con30419,Add87296])
model = tf.keras.models.Model(inputs=[in0Ave85857,in1Ave85857,in0Con83427,in0Sub15293,in1Sub15293,in0Con30419,in0Min68710,in1Min68710,in0Zer5827,in0Con3861], outputs=Sub73925)
in0Ave85857 = tf.constant([[[0.0554, 0.8733], [0.546, 0.6774]]])
in1Ave85857 = tf.constant([[[0.9654, 0.6048], [0.4401, 0.7954]]])
in0Con83427 = tf.constant([[[[0.5289], [0.2871], [0.2714], [0.0022]], [[0.1071], [0.9423], [0.794], [0.427]]]])
in0Sub15293 = tf.constant([[[[0.3852, 0.4333], [0.3674, 0.0339]], [[0.7944, 0.4779], [0.2007, 0.3808]]]])
in1Sub15293 = tf.constant([[[[0.5692, 0.3265], [0.234, 0.3921]], [[0.258, 0.3076], [0.8613, 0.0212]]]])
in0Con30419 = tf.constant([[[[0.7901, 0.6297], [0.1755, 0.907], [0.5524, 0.7262], [0.7078, 0.0047], [0.5448, 0.1338], [0.9074, 0.6026]], [[0.0302, 0.9828], [0.8875, 0.7356], [0.7198, 0.9655], [0.7241, 0.8646], [0.7038, 0.3702], [0.7182, 0.7917]], [[0.9966, 0.455], [0.5886, 0.9667], [0.1025, 0.5235], [0.0994, 0.8995], [0.1158, 0.7453], [0.1835, 0.6471]], [[0.1317, 0.8439], [0.8424, 0.5056], [0.1614, 0.2656], [0.9714, 0.1052], [0.3234, 0.3384], [0.7891, 0.079]], [[0.8115, 0.2306], [0.7359, 0.357], [0.0297, 0.2287], [0.5444, 0.923], [0.3255, 0.966], [0.6834, 0.5627]]]])
in0Min68710 = tf.constant([[[[[0.2047, 0.5728], [0.1114, 0.1782]], [[0.7529, 0.6434], [0.8451, 0.4747]]]]])
in1Min68710 = tf.constant([[[[[0.0117, 0.8387], [0.0043, 0.3229]], [[0.8321, 0.92], [0.2913, 0.929]]]]])
in0Zer5827 = tf.constant([[[[1.2058, 1.3633, 1.0544], [1.7518, 1.7735, 1.9003], [1.953, 1.6795, 1.51], [1.3605, 1.1893, 1.5207]], [[1.9386, 1.3854, 1.7029], [1.3996, 1.4202, 1.2918], [1.748, 1.3037, 1.1608], [1.2118, 1.6984, 1.3353]], [[1.5871, 1.6551, 1.7595], [1.1907, 1.6492, 1.8046], [1.5045, 1.0071, 1.428], [1.1828, 1.7991, 1.0007]]]])
in0Con3861 = tf.constant([[[[0.9576], [0.1865], [0.8177], [0.2753], [0.5317], [0.348]], [[0.624], [0.2762], [0.3899], [0.1768], [0.9191], [0.1547]], [[0.6007], [0.354], [0.4371], [0.9019], [0.8739], [0.9773]], [[0.1496], [0.6558], [0.7688], [0.7264], [0.4568], [0.8091]], [[0.5237], [0.6998], [0.5985], [0.438], [0.1108], [0.5317]]]])
print (np.array2string(model.predict([in0Ave85857,in1Ave85857,in0Con83427,in0Sub15293,in1Sub15293,in0Con30419,in0Min68710,in1Min68710,in0Zer5827,in0Con3861],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Sub73925.png')

LAve85857 = average_layer([[[[0.0554, 0.8733], [0.546, 0.6774]]], [[[0.9654, 0.6048], [0.4401, 0.7954]]]], Ave85857), 
LRes89835 = reshape_layer(Ave85857, [2, 2, 1], Res89835), 
LZer16195 = zero_padding2D_layer(Res89835, 0, 0, 2, 0, Zer16195), 
LCon83427 = concatenate_layer([Zer16195,[[[[0.5289], [0.2871], [0.2714], [0.0022]], [[0.1071], [0.9423], [0.794], [0.427]]]]], 3, Con83427), 
LSub15293 = subtract_layer([[[[0.3852, 0.4333], [0.3674, 0.0339]], [[0.7944, 0.4779], [0.2007, 0.3808]]]], [[[[0.5692, 0.3265], [0.234, 0.3921]], [[0.258, 0.3076], [0.8613, 0.0212]]]], Sub15293), 
LUp_73049 = up_sampling2D_layer(Sub15293, 1, 2, Up_73049), 
LMin82767 = minimum_layer([Con83427,Up_73049], Min82767), 
LZer11538 = zero_padding2D_layer(Min82767, 3, 0, 2, 0, Zer11538), 
LCon30419 = concatenate_layer([Zer11538,[[[[0.7901, 0.6297], [0.1755, 0.907], [0.5524, 0.7262], [0.7078, 0.0047], [0.5448, 0.1338], [0.9074, 0.6026]], [[0.0302, 0.9828], [0.8875, 0.7356], [0.7198, 0.9655], [0.7241, 0.8646], [0.7038, 0.3702], [0.7182, 0.7917]], [[0.9966, 0.455], [0.5886, 0.9667], [0.1025, 0.5235], [0.0994, 0.8995], [0.1158, 0.7453], [0.1835, 0.6471]], [[0.1317, 0.8439], [0.8424, 0.5056], [0.1614, 0.2656], [0.9714, 0.1052], [0.3234, 0.3384], [0.7891, 0.079]], [[0.8115, 0.2306], [0.7359, 0.357], [0.0297, 0.2287], [0.5444, 0.923], [0.3255, 0.966], [0.6834, 0.5627]]]]], 3, Con30419), 
LMin68710 = minimum_layer([[[[[[0.2047, 0.5728], [0.1114, 0.1782]], [[0.7529, 0.6434], [0.8451, 0.4747]]]]], [[[[[0.0117, 0.8387], [0.0043, 0.3229]], [[0.8321, 0.92], [0.2913, 0.929]]]]]], Min68710), 
LRes41193 = reshape_layer(Min68710, [1, 2, 4], Res41193), 
LZer47287 = zero_padding2D_layer(Res41193, 4, 0, 4, 0, Zer47287), 
LZer5827 = zero_padding2D_layer([[[[1.2058, 1.3633, 1.0544], [1.7518, 1.7735, 1.9003], [1.953, 1.6795, 1.51], [1.3605, 1.1893, 1.5207]], [[1.9386, 1.3854, 1.7029], [1.3996, 1.4202, 1.2918], [1.748, 1.3037, 1.1608], [1.2118, 1.6984, 1.3353]], [[1.5871, 1.6551, 1.7595], [1.1907, 1.6492, 1.8046], [1.5045, 1.0071, 1.428], [1.1828, 1.7991, 1.0007]]]], 1, 1, 1, 1, Zer5827), 
LCon3861 = concatenate_layer([Zer5827,[[[[0.9576], [0.1865], [0.8177], [0.2753], [0.5317], [0.348]], [[0.624], [0.2762], [0.3899], [0.1768], [0.9191], [0.1547]], [[0.6007], [0.354], [0.4371], [0.9019], [0.8739], [0.9773]], [[0.1496], [0.6558], [0.7688], [0.7264], [0.4568], [0.8091]], [[0.5237], [0.6998], [0.5985], [0.438], [0.1108], [0.5317]]]]], 3, Con3861), 
LAdd87296 = add_layer([Zer47287,Con3861], Add87296), 
LSub73925 = subtract_layer(Con30419,Add87296, Sub73925), 
exec_layers([LAve85857,LRes89835,LZer16195,LCon83427,LSub15293,LUp_73049,LMin82767,LZer11538,LCon30419,LMin68710,LRes41193,LZer47287,LZer5827,LCon3861,LAdd87296,LSub73925],["Ave85857","Res89835","Zer16195","Con83427","Sub15293","Up_73049","Min82767","Zer11538","Con30419","Min68710","Res41193","Zer47287","Zer5827","Con3861","Add87296","Sub73925"],Sub73925,"Sub73925")

Actual (Unparsed): [[[[0.0000000, 0.0000000, 0.7901000, -0.3279000], [0.0000000, 0.0000000, 0.1755000, 0.7205000], [0.0000000, 0.0000000, 0.5524000, -0.0915000], [0.0000000, 0.0000000, 0.7078000, -0.2706000], [0.0000000, 0.0000000, 0.5448000, -0.3979000], [0.0000000, 0.0000000, 0.9074000, 0.2546000]], [[0.0000000, 0.0000000, 0.0302000, 0.3588000], [-1.2058001, -1.3633000, -0.1669000, 0.4594000], [-1.7517999, -1.7735000, -1.1805000, 0.5756000], [-1.9529999, -1.6795000, -0.7859000, 0.6878000], [-1.3605000, -1.1892999, -0.8169000, -0.5489000], [0.0000000, 0.0000000, 0.7182000, 0.6370000]], [[0.0000000, 0.0000000, 0.9966000, -0.1457000], [-1.9385999, -1.3854001, -1.1143001, 0.6127000], [-1.3996000, -1.4202000, -1.1893000, 0.0864000], [-1.7480000, -1.3037000, -1.0614000, -0.0024000], [-1.2118000, -1.6984000, -1.2195000, -0.1286000], [0.0000000, 0.0000000, 0.1835000, -0.3302000]], [[0.0000000, 0.0000000, 0.1317000, 0.6943000], [-1.5871000, -1.6551000, -0.9171000, -0.1502000], [-1.3747000, -1.5424000, -1.6432000, -0.5032000], [-1.6885000, -0.9003000, -0.4566000, -0.6212000], [-1.0494001, -2.1573000, -0.6773000, -0.1184000], [0.1334000, -0.3582000, 0.7891000, -0.7301000]], [[0.0000000, 0.0000000, 0.8115000, -0.2931000], [0.0000000, 0.0000000, 0.7359000, -0.3428000], [0.0000000, 0.1071000, 0.0297000, -0.3698000], [0.0000000, 0.1703000, 0.5444000, 0.4850000], [-0.6723000, -0.2132000, 0.3212000, 0.6770000], [-1.4135000, -0.2838000, 0.3921000, -0.4437000]]]]

Expected (Unparsed): [[[[0,0,0.7901,-0.32789999999999997],[0,0,0.1755,0.7205],[0,0,0.5524,-0.09150000000000003],[0,0,0.7078,-0.2706],[0,0,0.5448,-0.3978999999999999],[0,0,0.9074,0.25460000000000005]],[[0,0,0.0302,0.3588],[-1.2058,-1.3633,-0.16690000000000005,0.45940000000000003],[-1.7518,-1.7735,-1.1805,0.5756],[-1.953,-1.6795,-0.7859,0.6878],[-1.3605,-1.1893,-0.8169,-0.5489],[0,0,0.7182,0.637]],[[0,0,0.9966,-0.1457],[-1.9386,-1.3854,-1.1143,0.6127],[-1.3996,-1.4202,-1.1893,0.08639999999999998],[-1.748,-1.3037,-1.0614000000000001,-0.0024000000000000687],[-1.2118,-1.6984,-1.2195,-0.12860000000000005],[0,0,0.1835,-0.33019999999999994]],[[0,0,0.1317,0.6942999999999999],[-1.5871,-1.6551,-0.9171,-0.1502],[-1.3747000000000003,-1.5424,-1.6432,-0.5032000000000001],[-1.6885,-0.9003000000000001,-0.4565999999999999,-0.6212000000000001],[-1.0494,-2.1572999999999998,-0.6772999999999999,-0.1184],[0.1334,-0.3582,0.7891,-0.7301000000000001]],[[0,0,0.8115,-0.2931],[0,0,0.7359,-0.3428],[0,0.1071,0.0297,-0.3698],[0,0.1703,0.5444,0.48500000000000004],[-0.6723,-0.21319999999999995,0.3212,0.677],[-1.4135,-0.28379999999999994,0.3921,-0.4437]]]]

Actual:   [[[[0, 0, 0.7901, -0.3279], [0, 0, 0.1755, 0.7205], [0, 0, 0.5524, -0.0915], [0, 0, 0.7078, -0.2706], [0, 0, 0.5448, -0.3979], [0, 0, 0.9074, 0.2546]], [[0, 0, 0.0302, 0.3588], [-1.2058, -1.3633, -0.1669, 0.4594], [-1.7517, -1.7735, -1.1805, 0.5756], [-1.9529, -1.6795, -0.7859, 0.6878], [-1.3605, -1.1892, -0.8169, -0.5489], [0, 0, 0.7182, 0.637]], [[0, 0, 0.9966, -0.1457], [-1.9385, -1.3854, -1.1143, 0.6127], [-1.3996, -1.4202, -1.1893, 0.0864], [-1.748, -1.3037, -1.0614, -0.0024], [-1.2118, -1.6984, -1.2195, -0.1286], [0, 0, 0.1835, -0.3302]], [[0, 0, 0.1317, 0.6943], [-1.5871, -1.6551, -0.9171, -0.1502], [-1.3747, -1.5424, -1.6432, -0.5032], [-1.6885, -0.9003, -0.4566, -0.6212], [-1.0494, -2.1573, -0.6773, -0.1184], [0.1334, -0.3582, 0.7891, -0.7301]], [[0, 0, 0.8115, -0.2931], [0, 0, 0.7359, -0.3428], [0, 0.1071, 0.0297, -0.3698], [0, 0.1703, 0.5444, 0.485], [-0.6723, -0.2132, 0.3212, 0.677], [-1.4135, -0.2838, 0.3921, -0.4437]]]]

Expected: [[[[0, 0, 0.7901, -0.3278], [0, 0, 0.1755, 0.7205], [0, 0, 0.5524, -0.0915], [0, 0, 0.7078, -0.2706], [0, 0, 0.5448, -0.3978], [0, 0, 0.9074, 0.2547]], [[0, 0, 0.0302, 0.3588], [-1.2058, -1.3633, -0.1669, 0.4595], [-1.7518, -1.7735, -1.1805, 0.5756], [-1.953, -1.6795, -0.7859, 0.6878], [-1.3605, -1.1893, -0.8169, -0.5489], [0, 0, 0.7182, 0.637]], [[0, 0, 0.9966, -0.1457], [-1.9386, -1.3854, -1.1143, 0.6127], [-1.3996, -1.4202, -1.1893, 0.0864], [-1.748, -1.3037, -1.0614, -0.0024], [-1.2118, -1.6984, -1.2195, -0.1286], [0, 0, 0.1835, -0.3301]], [[0, 0, 0.1317, 0.6943], [-1.5871, -1.6551, -0.9171, -0.1502], [-1.3747, -1.5424, -1.6432, -0.5032], [-1.6885, -0.9003, -0.4565, -0.6212], [-1.0494, -2.1572, -0.6772, -0.1184], [0.1334, -0.3582, 0.7891, -0.7301]], [[0, 0, 0.8115, -0.2931], [0, 0, 0.7359, -0.3428], [0, 0.1071, 0.0297, -0.3698], [0, 0.1703, 0.5444, 0.4851], [-0.6723, -0.2131, 0.3212, 0.677], [-1.4135, -0.2837, 0.3921, -0.4437]]]]