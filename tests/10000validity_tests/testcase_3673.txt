import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Sub85986 = tf.keras.layers.Input(shape=([2, 2, 2, 3]))
in1Sub85986 = tf.keras.layers.Input(shape=([2, 2, 2, 3]))
in0Ave54529 = tf.keras.layers.Input(shape=([1, 1, 1]))
in1Ave54529 = tf.keras.layers.Input(shape=([1, 1, 1]))
in0Con50982 = tf.keras.layers.Input(shape=([2, 2, 5]))

Sub85986 = keras.layers.Subtract(name = 'Sub85986', )([in0Sub85986,in1Sub85986])
Res70984 = keras.layers.Reshape((2, 2, 6), name = 'Res70984', )(Sub85986)
Ave54529 = keras.layers.Average(name = 'Ave54529', )([in0Ave54529,in1Ave54529])
Zer97684 = keras.layers.ZeroPadding2D(padding=((1, 0), (1, 0)), name = 'Zer97684', )(Ave54529)
Con50982 = keras.layers.Concatenate(axis=3, name = 'Con50982', )([Zer97684,in0Con50982])
Max91873 = keras.layers.Maximum(name = 'Max91873', )([Res70984,Con50982])
Con24811 = keras.layers.Conv2D(2, (2, 2),strides=(1, 1), padding='same', dilation_rate=(1, 1), name = 'Con24811', )(Max91873)
model = tf.keras.models.Model(inputs=[in0Sub85986,in1Sub85986,in0Ave54529,in1Ave54529,in0Con50982], outputs=Con24811)
w = model.get_layer('Con24811').get_weights() 
w[0] = np.array([[[[0.5563, 0.8967], [0.4765, 0.237], [0.8849, 0.6167], [0.097, 0.4932], [0.0869, 0.7416], [0.1638, 0.3122]], [[0.5421, 0.6953], [0.4551, 0.2283], [0.1597, 0.2852], [0.3579, 0.0884], [0.7456, 0.8613], [0.2453, 0.6207]]], [[[0.0582, 0.4263], [0.6644, 0.987], [0.9008, 0.2833], [0.9886, 0.1978], [0.9666, 0.9619], [0.1946, 0.6927]], [[0.0512, 0.1053], [0.4667, 0.0903], [0.6792, 0.7173], [0.4013, 0.0992], [0.1516, 0.6727], [0.6868, 0.8485]]]])
w[1] = np.array([0, 0])
model.get_layer('Con24811').set_weights(w) 
in0Sub85986 = tf.constant([[[[[0.2658, 0.6857, 0.1169], [0.5051, 0.8106, 0.875]], [[0.1496, 0.9282, 0.024], [0.7382, 0.662, 0.6252]]], [[[0.8367, 0.2814, 0.1496], [0.983, 0.8628, 0.9059]], [[0.7318, 0.1894, 0.7241], [0.2849, 0.3872, 0.4182]]]]])
in1Sub85986 = tf.constant([[[[[0.3092, 0.8434, 0.611], [0.3986, 0.6229, 0.6268]], [[0.8593, 0.1005, 0.5597], [0.3074, 0.4681, 0.5056]]], [[[0.149, 0.8347, 0.0856], [0.9452, 0.5618, 0.763]], [[0.0428, 0.2896, 0.4438], [0.6064, 0.4985, 0.3486]]]]])
in0Ave54529 = tf.constant([[[[0.9444]]]])
in1Ave54529 = tf.constant([[[[0.6638]]]])
in0Con50982 = tf.constant([[[[0.974, 0.5003, 0.7608, 0.8932, 0.2665], [0.7635, 0.9368, 0.3871, 0.8709, 0.4227]], [[0.4098, 0.3736, 0.0199, 0.5998, 0.7465], [0.4888, 0.52, 0.4623, 0.2835, 0.0622]]]])
print (np.array2string(model.predict([in0Sub85986,in1Sub85986,in0Ave54529,in1Ave54529,in0Con50982],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Con24811.png')

LSub85986 = subtract_layer([[[[[0.2658, 0.6857, 0.1169], [0.5051, 0.8106, 0.875]], [[0.1496, 0.9282, 0.024], [0.7382, 0.662, 0.6252]]], [[[0.8367, 0.2814, 0.1496], [0.983, 0.8628, 0.9059]], [[0.7318, 0.1894, 0.7241], [0.2849, 0.3872, 0.4182]]]]], [[[[[0.3092, 0.8434, 0.611], [0.3986, 0.6229, 0.6268]], [[0.8593, 0.1005, 0.5597], [0.3074, 0.4681, 0.5056]]], [[[0.149, 0.8347, 0.0856], [0.9452, 0.5618, 0.763]], [[0.0428, 0.2896, 0.4438], [0.6064, 0.4985, 0.3486]]]]], Sub85986), 
LRes70984 = reshape_layer(Sub85986, [2, 2, 6], Res70984), 
LAve54529 = average_layer([[[[[0.9444]]]], [[[[0.6638]]]]], Ave54529), 
LZer97684 = zero_padding2D_layer(Ave54529, 1, 0, 1, 0, Zer97684), 
LCon50982 = concatenate_layer([Zer97684,[[[[0.974, 0.5003, 0.7608, 0.8932, 0.2665], [0.7635, 0.9368, 0.3871, 0.8709, 0.4227]], [[0.4098, 0.3736, 0.0199, 0.5998, 0.7465], [0.4888, 0.52, 0.4623, 0.2835, 0.0622]]]]], 3, Con50982), 
LMax91873 = maximum_layer([Res70984,Con50982], Max91873), 
LCon24811 = conv2D_layer(Max91873, 2, 2,[[[[0.5563, 0.8967], [0.4765, 0.237], [0.8849, 0.6167], [0.097, 0.4932], [0.0869, 0.7416], [0.1638, 0.3122]], [[0.5421, 0.6953], [0.4551, 0.2283], [0.1597, 0.2852], [0.3579, 0.0884], [0.7456, 0.8613], [0.2453, 0.6207]]], [[[0.0582, 0.4263], [0.6644, 0.987], [0.9008, 0.2833], [0.9886, 0.1978], [0.9666, 0.9619], [0.1946, 0.6927]], [[0.0512, 0.1053], [0.4667, 0.0903], [0.6792, 0.7173], [0.4013, 0.0992], [0.1516, 0.6727], [0.6868, 0.8485]]]],[0, 0], 1, 1, true, 1, 1, Con24811), 
exec_layers([LSub85986,LRes70984,LAve54529,LZer97684,LCon50982,LMax91873,LCon24811],["Sub85986","Res70984","Ave54529","Zer97684","Con50982","Max91873","Con24811"],Con24811,"Con24811")

Actual (Unparsed): [[[[4.8454202, 5.8693335], [2.9946588, 3.1490893]], [[2.2218089, 2.7879286], [1.2212617, 1.6175451]]]]

Expected (Unparsed): [[[[4.845420299999999,5.86933362],[2.9946588199999997,3.14908934]],[[2.2218089100000005,2.7879286100000007],[1.2212617600000002,1.6175451500000002]]]]

Actual:   [[[[4.8455, 5.8694], [2.9947, 3.1491]], [[2.2219, 2.788], [1.2213, 1.6176]]]]

Expected: [[[[4.8455, 5.8694], [2.9947, 3.1491]], [[2.2219, 2.788], [1.2213, 1.6176]]]]