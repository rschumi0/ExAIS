import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Con32177 = tf.keras.layers.Input(shape=([2, 2, 1, 1]))

Con32177 = keras.layers.Conv3D(4, (2, 1, 1),strides=(1, 2, 1), padding='same', dilation_rate=(1, 1, 1), name = 'Con32177', )(in0Con32177)
Lay47501 = keras.layers.LayerNormalization(axis=1, epsilon=2.049603586993433, name = 'Lay47501', )(Con32177)
model = tf.keras.models.Model(inputs=[in0Con32177], outputs=Lay47501)
w = model.get_layer('Con32177').get_weights() 
w[0] = np.array([[[[[0.9729, 0.985, 0.7821, 0.5502]]]], [[[[0.3845, 0.4918, 0.4138, 0.7198]]]]])
w[1] = np.array([0, 0, 0, 0])
model.get_layer('Con32177').set_weights(w) 
in0Con32177 = tf.constant([[[[[0.8293]], [[0.8314]]], [[[0.3227]], [[0.6286]]]]])
print (np.array2string(model.predict([in0Con32177],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Lay47501.png')

LCon32177 = conv3D_layer([[[[[0.8293]], [[0.8314]]], [[[0.3227]], [[0.6286]]]]], 2, 1, 1,[[[[[0.9729, 0.985, 0.7821, 0.5502]]]], [[[[0.3845, 0.4918, 0.4138, 0.7198]]]]],[0, 0, 0, 0], 1, 2, 1, true, 1, 1, 1, Con32177), 
LLay47501 = layer_normalization_layer(Con32177, 1, 2.049603586993433, Lay47501), 
exec_layers([LCon32177,LLay47501],["Con32177","Lay47501"],Lay47501,"Lay47501")

Actual (Unparsed): [[[[[0.2106348, 0.2238725, 0.1819255, 0.1756938]]], [[[-0.2106348, -0.2238725, -0.1819255, -0.1756938]]]]]

Expected (Unparsed): [[[[[0.21063478938602262,0.22387249713367946,0.18192547355502642,0.1756938357004737]]],[[[-0.21063478938602267,-0.22387249713367938,-0.1819254735550264,-0.1756938357004737]]]]]

Actual:   [[[[[0.2107, 0.2239, 0.182, 0.1757]]], [[[-0.2106, -0.2238, -0.1819, -0.1756]]]]]

Expected: [[[[[0.2107, 0.2239, 0.182, 0.1757]]], [[[-0.2106, -0.2238, -0.1819, -0.1756]]]]]