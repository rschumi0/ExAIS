import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Sub83978 = tf.keras.layers.Input(shape=([2, 2]))
in1Sub83978 = tf.keras.layers.Input(shape=([2, 2]))
in0Con15681 = tf.keras.layers.Input(shape=([2, 8, 3]))
in0Up_66646 = tf.keras.layers.Input(shape=([1, 4, 4]))
in0Dot15682 = tf.keras.layers.Input(shape=([3]))
in1Dot15682 = tf.keras.layers.Input(shape=([3]))

Sub83978 = keras.layers.Subtract(name = 'Sub83978', )([in0Sub83978,in1Sub83978])
Res39324 = keras.layers.Reshape((2, 2, 1), name = 'Res39324', )(Sub83978)
Zer15162 = keras.layers.ZeroPadding2D(padding=((0, 0), (6, 0)), name = 'Zer15162', )(Res39324)
Con15681 = keras.layers.Concatenate(axis=3, name = 'Con15681', )([Zer15162,in0Con15681])
Up_66646 = keras.layers.UpSampling2D(size=(2, 2), name = 'Up_66646', )(in0Up_66646)
Max5168 = keras.layers.MaxPool2D(pool_size=(1, 1), strides=(1, 1), padding='same', name = 'Max5168', )(Up_66646)
Add65543 = keras.layers.Add(name = 'Add65543', )([Con15681,Max5168])
Res94693 = keras.layers.Reshape((2, 8, 4, 1), name = 'Res94693', )(Add65543)
Dot15682 = keras.layers.Dot(axes=(1, 1), name = 'Dot15682', )([in0Dot15682,in1Dot15682])
Res37482 = keras.layers.Reshape((1, 1), name = 'Res37482', )(Dot15682)
Res18327 = keras.layers.Reshape((1, 1, 1), name = 'Res18327', )(Res37482)
Res79332 = keras.layers.Reshape((1, 1, 1, 1), name = 'Res79332', )(Res18327)
Cro44918 = keras.layers.Cropping3D(cropping=((0, 0), (0, 0), (0, 0)), name = 'Cro44918', )(Res79332)
Zer21243 = keras.layers.ZeroPadding3D(padding=((1, 0), (7, 0), (3, 0)), name = 'Zer21243', )(Cro44918)
Max11298 = keras.layers.Maximum(name = 'Max11298', )([Res94693,Zer21243])
model = tf.keras.models.Model(inputs=[in0Sub83978,in1Sub83978,in0Con15681,in0Up_66646,in0Dot15682,in1Dot15682], outputs=Max11298)
in0Sub83978 = tf.constant([[[0.2879, 0.0914], [0.4105, 0.1872]]])
in1Sub83978 = tf.constant([[[0.6259, 0.551], [0.2898, 0.0995]]])
in0Con15681 = tf.constant([[[[0.2304, 0.6271, 0.6975], [0.3323, 0.9095, 0.0512], [0.5642, 0.3088, 0.093], [0.2517, 0.1155, 0.6662], [0.2951, 0.508, 0.6233], [0.0947, 0.2815, 0.7321], [0.6758, 0.6953, 0.4021], [0.9442, 0.0506, 0.0476]], [[0.3089, 0.5948, 0.5852], [0.9793, 0.7901, 0.2126], [0.3218, 0.2432, 0.1764], [0.7486, 0.3227, 0.2079], [0.5364, 0.1615, 0.2007], [0.3632, 0.668, 0.2406], [0.5897, 0.9054, 0.7131], [0.4006, 0.4949, 0.9242]]]])
in0Up_66646 = tf.constant([[[[1.1945, 1.4509, 1.3085, 1.6361], [1.5018, 1.9589, 1.2885, 1.7267], [1.1554, 1.7262, 1.9338, 1.3354], [1.4903, 1.3599, 1.3505, 1.0034]]]])
in0Dot15682 = tf.constant([[0.5949, 0.6618, 0.8514]])
in1Dot15682 = tf.constant([[0.4489, 0.5922, 0.8889]])
print (np.array2string(model.predict([in0Sub83978,in1Sub83978,in0Con15681,in0Up_66646,in0Dot15682,in1Dot15682],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Max11298.png')

LSub83978 = subtract_layer([[[0.2879, 0.0914], [0.4105, 0.1872]]], [[[0.6259, 0.551], [0.2898, 0.0995]]], Sub83978), 
LRes39324 = reshape_layer(Sub83978, [2, 2, 1], Res39324), 
LZer15162 = zero_padding2D_layer(Res39324, 0, 0, 6, 0, Zer15162), 
LCon15681 = concatenate_layer([Zer15162,[[[[0.2304, 0.6271, 0.6975], [0.3323, 0.9095, 0.0512], [0.5642, 0.3088, 0.093], [0.2517, 0.1155, 0.6662], [0.2951, 0.508, 0.6233], [0.0947, 0.2815, 0.7321], [0.6758, 0.6953, 0.4021], [0.9442, 0.0506, 0.0476]], [[0.3089, 0.5948, 0.5852], [0.9793, 0.7901, 0.2126], [0.3218, 0.2432, 0.1764], [0.7486, 0.3227, 0.2079], [0.5364, 0.1615, 0.2007], [0.3632, 0.668, 0.2406], [0.5897, 0.9054, 0.7131], [0.4006, 0.4949, 0.9242]]]]], 3, Con15681), 
LUp_66646 = up_sampling2D_layer([[[[1.1945, 1.4509, 1.3085, 1.6361], [1.5018, 1.9589, 1.2885, 1.7267], [1.1554, 1.7262, 1.9338, 1.3354], [1.4903, 1.3599, 1.3505, 1.0034]]]], 2, 2, Up_66646), 
LMax5168 = max_pool2D_layer(Up_66646, 1, 1, 1, 1, true, Max5168), 
LAdd65543 = add_layer([Con15681,Max5168], Add65543), 
LRes94693 = reshape_layer(Add65543, [2, 8, 4, 1], Res94693), 
LDot15682 = dot_layer([[0.5949, 0.6618, 0.8514]], [[0.4489, 0.5922, 0.8889]], 1, 1, Dot15682), 
LRes37482 = reshape_layer(Dot15682, [1, 1], Res37482), 
LRes18327 = reshape_layer(Res37482, [1, 1, 1], Res18327), 
LRes79332 = reshape_layer(Res18327, [1, 1, 1, 1], Res79332), 
LCro44918 = cropping3D_layer(Res79332, 0, 0, 0, 0, 0, 0, Cro44918), 
LZer21243 = zero_padding3D_layer(Cro44918, 1, 0, 7, 0, 3, 0, Zer21243), 
LMax11298 = maximum_layer([Res94693,Zer21243], Max11298), 
exec_layers([LSub83978,LRes39324,LZer15162,LCon15681,LUp_66646,LMax5168,LAdd65543,LRes94693,LDot15682,LRes37482,LRes18327,LRes79332,LCro44918,LZer21243,LMax11298],["Sub83978","Res39324","Zer15162","Con15681","Up_66646","Max5168","Add65543","Res94693","Dot15682","Res37482","Res18327","Res79332","Cro44918","Zer21243","Max11298"],Max11298,"Max11298")

Actual (Unparsed): [[[[[1.1945000], [1.6813000], [1.9356000], [2.3336000]], [[1.1945000], [1.7832000], [2.2180001], [1.6873001]], [[1.5017999], [2.5231000], [1.5973000], [1.8197000]], [[1.5017999], [2.2106000], [1.4040000], [2.3928999]], [[1.1554000], [2.0213000], [2.4418000], [1.9587000]], [[1.1554000], [1.8209000], [2.2153000], [2.0675000]], [[1.1523001], [2.0357000], [2.0458000], [1.4055000]], [[1.0307001], [2.3041000], [1.4011000], [1.0510000]]], [[[1.1945000], [1.7598000], [1.9033000], [2.2213001]], [[1.1945000], [2.4302000], [2.0986000], [1.8487000]], [[1.5017999], [2.2807000], [1.5317000], [1.9031000]], [[1.5017999], [2.7075000], [1.6111999], [1.9346000]], [[1.1554000], [2.2626000], [2.0953000], [1.5361000]], [[1.1554000], [2.0894000], [2.6018000], [1.5760000]], [[1.6110001], [1.9496000], [2.2559000], [1.7165000]], [[1.5780001], [1.7605000], [1.8454000], [1.9276000]]]]]

Expected (Unparsed): [[[[[1.1945],[1.6813],[1.9356],[2.3336]],[[1.1945],[1.7832000000000001],[2.218],[1.6873]],[[1.5018],[2.5231000000000003],[1.5973],[1.8196999999999999]],[[1.5018],[2.2106],[1.404],[2.3929]],[[1.1554],[2.0213],[2.4417999999999997],[1.9586999999999999]],[[1.1554],[1.8209],[2.2153],[2.0675]],[[1.1522999999999999],[2.0357000000000003],[2.0458],[1.4055]],[[1.0307],[2.3041],[1.4011],[1.0510000000000002]]],[[[1.1945],[1.7598],[1.9033],[2.2213000000000003]],[[1.1945],[2.4302],[2.0986000000000002],[1.8487]],[[1.5018],[2.2807],[1.5317],[1.9030999999999998]],[[1.5018],[2.7075],[1.6112],[1.9345999999999999]],[[1.1554],[2.2626],[2.0953],[1.5360999999999998]],[[1.1554],[2.0894],[2.6018],[1.5759999999999998]],[[1.611],[1.9496000000000002],[2.2559],[1.7165]],[[1.5779999999999998],[1.7605000000000002],[1.8454000000000002],[1.9276]]]]]

Actual:   [[[[[1.1945], [1.6813], [1.9356], [2.3336]], [[1.1945], [1.7832], [2.2181], [1.6874]], [[1.5018], [2.5231], [1.5973], [1.8197]], [[1.5018], [2.2106], [1.404], [2.3929]], [[1.1554], [2.0213], [2.4418], [1.9587]], [[1.1554], [1.8209], [2.2153], [2.0675]], [[1.1524], [2.0357], [2.0458], [1.4055]], [[1.0308], [2.3041], [1.4011], [1.051]]], [[[1.1945], [1.7598], [1.9033], [2.2214]], [[1.1945], [2.4302], [2.0986], [1.8487]], [[1.5018], [2.2807], [1.5317], [1.9031]], [[1.5018], [2.7075], [1.6112], [1.9346]], [[1.1554], [2.2626], [2.0953], [1.5361]], [[1.1554], [2.0894], [2.6018], [1.576]], [[1.6111], [1.9496], [2.2559], [1.7165]], [[1.5781], [1.7605], [1.8454], [1.9276]]]]]

Expected: [[[[[1.1945], [1.6813], [1.9356], [2.3336]], [[1.1945], [1.7833], [2.218], [1.6873]], [[1.5018], [2.5232], [1.5973], [1.8197]], [[1.5018], [2.2106], [1.404], [2.3929]], [[1.1554], [2.0213], [2.4418], [1.9587]], [[1.1554], [1.8209], [2.2153], [2.0675]], [[1.1523], [2.0358], [2.0458], [1.4055]], [[1.0307], [2.3041], [1.4011], [1.0511]]], [[[1.1945], [1.7598], [1.9033], [2.2214]], [[1.1945], [2.4302], [2.0987], [1.8487]], [[1.5018], [2.2807], [1.5317], [1.9031]], [[1.5018], [2.7075], [1.6112], [1.9346]], [[1.1554], [2.2626], [2.0953], [1.5361]], [[1.1554], [2.0894], [2.6018], [1.576]], [[1.611], [1.9497], [2.2559], [1.7165]], [[1.578], [1.7606], [1.8455], [1.9276]]]]]