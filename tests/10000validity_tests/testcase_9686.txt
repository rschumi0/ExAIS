import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Den41406 = tf.keras.layers.Input(shape=([4, 3, 4]))
in0Add28339 = tf.keras.layers.Input(shape=([2, 1, 1, 2]))
in1Add28339 = tf.keras.layers.Input(shape=([2, 1, 1, 2]))
in0Glo61465 = tf.keras.layers.Input(shape=([2, 2, 1, 1]))
in0LST75369 = tf.keras.layers.Input(shape=([2, 2]))
in0Max22214 = tf.keras.layers.Input(shape=([2, 1]))
in1Max22214 = tf.keras.layers.Input(shape=([2, 1]))
in0Con14297 = tf.keras.layers.Input(shape=([3, 1]))

Den41406 = keras.layers.Dense(3,name = 'Den41406', )(in0Den41406)
Loc69865 = keras.layers.LocallyConnected2D(4, (2, 1),strides=(1, 1), name = 'Loc69865', )(Den41406)
Res1621 = keras.layers.Reshape((3, 12), name = 'Res1621', )(Loc69865)
Add28339 = keras.layers.Add(name = 'Add28339', )([in0Add28339,in1Add28339])
Res67576 = keras.layers.Reshape((2, 1, 2), name = 'Res67576', )(Add28339)
Res5215 = keras.layers.Reshape((2, 2), name = 'Res5215', )(Res67576)
Cro99204 = keras.layers.Cropping1D(cropping=((1, 0)), name = 'Cro99204', )(Res5215)
Zer13800 = keras.layers.ZeroPadding1D(padding=((2, 0)), name = 'Zer13800', )(Cro99204)
Glo61465 = keras.layers.GlobalAveragePooling3D(name = 'Glo61465', )(in0Glo61465)
Res19407 = keras.layers.Reshape((1, 1), name = 'Res19407', )(Glo61465)
Zer39166 = keras.layers.ZeroPadding1D(padding=((2, 0)), name = 'Zer39166', )(Res19407)
LST75369 = keras.layers.LSTM(3,recurrent_activation='sigmoid', name = 'LST75369', )(in0LST75369)
Res81680 = keras.layers.Reshape((3, 1), name = 'Res81680', )(LST75369)
Max22214 = keras.layers.Maximum(name = 'Max22214', )([in0Max22214,in1Max22214])
Zer22732 = keras.layers.ZeroPadding1D(padding=((1, 0)), name = 'Zer22732', )(Max22214)
Sub34639 = keras.layers.Subtract(name = 'Sub34639', )([Res81680,Zer22732])
Sub1512 = keras.layers.Subtract(name = 'Sub1512', )([Zer39166,Sub34639])
Con14297 = keras.layers.Concatenate(axis=2, name = 'Con14297', )([Sub1512,in0Con14297])
Min52816 = keras.layers.Minimum(name = 'Min52816', )([Zer13800,Con14297])
Dot79934 = keras.layers.Dot(axes=(1, 1), name = 'Dot79934', )([Res1621,Min52816])
model = tf.keras.models.Model(inputs=[in0Den41406,in0Add28339,in1Add28339,in0Glo61465,in0LST75369,in0Max22214,in1Max22214,in0Con14297], outputs=Dot79934)
w = model.get_layer('Den41406').get_weights() 
w[0] = np.array([[0.4938, 0.6067, 0.5811], [0.605, 0.521, 0.3871], [0.6911, 0.9887, 0.8471], [0.1338, 0.9073, 0.1849]])
w[1] = np.array([0.8452, 0.6497, 0.2269])
model.get_layer('Den41406').set_weights(w) 
w = model.get_layer('Loc69865').get_weights() 
w[0] = np.array([[[0.2793, 0.5089, 0.4219, 0.4504], [0.8493, 0.9509, 0.3567, 0.2209], [0.7954, 0.4704, 0.7129, 0.5076], [0.4625, 0.7564, 0.6547, 0.8378], [0.5435, 0.2869, 0.596, 0.2967], [0.4558, 0.7643, 0.7907, 0.7749]], [[0.003, 0.9471, 0.5321, 0.4648], [0.9069, 0.8772, 0.8957, 0.8244], [0.006, 0.2593, 0.3167, 0.7428], [0.661, 0.2748, 0.6752, 0.4377], [0.1814, 0.4309, 0.9773, 0.6985], [0.8944, 0.1386, 0.1668, 0.4444]], [[0.8116, 0.5878, 0.0797, 0.2116], [0.72, 0.1478, 0.0632, 0.1054], [0.9216, 0.9577, 0.3194, 0.9569], [0.776, 0.5923, 0.606, 0.91], [0.665, 0.6888, 0.5302, 0.4305], [0.9881, 0.203, 0.3027, 0.7772]], [[0.3239, 0.527, 0.4866, 0.304], [0.9487, 0.0441, 0.9714, 0.572], [0.4887, 0.8241, 0.1289, 0.1425], [0.6022, 0.0679, 0.8676, 0.0957], [0.2354, 0.6002, 0.0921, 0.7706], [0.1796, 0.1777, 0.8956, 0.962]], [[0.3648, 0.632, 0.6646, 0.8223], [0.5727, 0.8975, 0.1606, 0.017], [0.0223, 0.7905, 0.558, 0.2597], [0.5902, 0.9959, 0.3628, 0.2148], [0.2627, 0.1004, 0.1155, 0.8955], [0.7857, 0.6613, 0.7896, 0.1089]], [[0.3777, 0.2439, 0.838, 0.205], [0.8012, 0.0775, 0.9087, 0.3682], [0.052, 0.4814, 0.3576, 0.9619], [0.415, 0.4955, 0.8159, 0.979], [0.6643, 0.2119, 0.2366, 0.4841], [0.7372, 0.1507, 0.0425, 0.0429]], [[0.3002, 0.6464, 0.221, 0.5234], [0.2441, 0.6224, 0.4753, 0.3304], [0.2925, 0.3152, 0.8275, 0.0854], [0.5913, 0.4832, 0.3926, 0.0008], [0.356, 0.3839, 0.3935, 0.7146], [0.3992, 0.3364, 0.8723, 0.1478]], [[0.6333, 0.9992, 0.9678, 0.0284], [0.4504, 0.5886, 0.0735, 0.0824], [0.2172, 0.1378, 0.6722, 0.5382], [0.9915, 0.5556, 0.1468, 0.5112], [0.9668, 0.6808, 0.4116, 0.0386], [0.0803, 0.7488, 0.777, 0.0226]], [[0.684, 0.6871, 0.0629, 0.1042], [0.1699, 0.4403, 0.6125, 0.539], [0.9655, 0.0865, 0.5202, 0.4757], [0.371, 0.8535, 0.0845, 0.6463], [0.298, 0.2678, 0.2265, 0.3725], [0.0841, 0.578, 0.3698, 0.9606]]])
w[1] = np.array([[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]], [[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]], [[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]])
model.get_layer('Loc69865').set_weights(w) 
w = model.get_layer('LST75369').get_weights() 
w[0] = np.array([[9, 7, 9, 7, 2, 6, 5, 8, 10, 9, 2, 7], [9, 9, 10, 6, 10, 9, 10, 7, 6, 2, 5, 8]])
w[1] = np.array([[9, 8, 1, 3, 3, 5, 8, 10, 1, 8, 2, 10], [4, 3, 4, 10, 9, 3, 2, 4, 10, 4, 7, 9], [2, 9, 5, 8, 1, 10, 7, 9, 6, 7, 8, 9]])
w[2] = np.array([9, 10, 8, 1, 1, 8, 5, 8, 3, 2, 3, 9])
model.get_layer('LST75369').set_weights(w) 
in0Den41406 = tf.constant([[[[0.0878, 0.0052, 0.1848, 0.8412], [0.0605, 0.0688, 0.4485, 0.7193], [0.0888, 0.7288, 0.5883, 0.3094]], [[0.3434, 0.8188, 0.9996, 0.3968], [0.995, 0.6471, 0.3942, 0.2543], [0.8122, 0.5189, 0.2254, 0.005]], [[0.7406, 0.4836, 0.4482, 0.0438], [0.7283, 0.0744, 0.3398, 0.9855], [0.2403, 0.2772, 0.9272, 0.3415]], [[0.6196, 0.2145, 0.4196, 0.1426], [0.6931, 0.067, 0.9295, 0.0258], [0.7975, 0.5633, 0.6806, 0.8796]]]])
in0Add28339 = tf.constant([[[[[0.7036, 0.9679]]], [[[0.8445, 0.0028]]]]])
in1Add28339 = tf.constant([[[[[0.7565, 0.8702]]], [[[0.1306, 0.8771]]]]])
in0Glo61465 = tf.constant([[[[[1.9149]], [[1.2359]]], [[[1.2576]], [[1.0704]]]]])
in0LST75369 = tf.constant([[[10, 3], [4, 2]]])
in0Max22214 = tf.constant([[[0.4775], [0.4974]]])
in1Max22214 = tf.constant([[[0.0919], [0.1704]]])
in0Con14297 = tf.constant([[[0.0667], [0.2171], [0.6837]]])
print (np.array2string(model.predict([in0Den41406,in0Add28339,in1Add28339,in0Glo61465,in0LST75369,in0Max22214,in1Max22214,in0Con14297],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Dot79934.png')

LDen41406 = dense_layer([[[[0.0878, 0.0052, 0.1848, 0.8412], [0.0605, 0.0688, 0.4485, 0.7193], [0.0888, 0.7288, 0.5883, 0.3094]], [[0.3434, 0.8188, 0.9996, 0.3968], [0.995, 0.6471, 0.3942, 0.2543], [0.8122, 0.5189, 0.2254, 0.005]], [[0.7406, 0.4836, 0.4482, 0.0438], [0.7283, 0.0744, 0.3398, 0.9855], [0.2403, 0.2772, 0.9272, 0.3415]], [[0.6196, 0.2145, 0.4196, 0.1426], [0.6931, 0.067, 0.9295, 0.0258], [0.7975, 0.5633, 0.6806, 0.8796]]]], [[0.4938, 0.6067, 0.5811], [0.605, 0.521, 0.3871], [0.6911, 0.9887, 0.8471], [0.1338, 0.9073, 0.1849]],[0.8452, 0.6497, 0.2269], Den41406), 
LLoc69865 = locally_connected2D_layer(Den41406, 2, 1,[[[0.2793, 0.5089, 0.4219, 0.4504], [0.8493, 0.9509, 0.3567, 0.2209], [0.7954, 0.4704, 0.7129, 0.5076], [0.4625, 0.7564, 0.6547, 0.8378], [0.5435, 0.2869, 0.596, 0.2967], [0.4558, 0.7643, 0.7907, 0.7749]], [[0.003, 0.9471, 0.5321, 0.4648], [0.9069, 0.8772, 0.8957, 0.8244], [0.006, 0.2593, 0.3167, 0.7428], [0.661, 0.2748, 0.6752, 0.4377], [0.1814, 0.4309, 0.9773, 0.6985], [0.8944, 0.1386, 0.1668, 0.4444]], [[0.8116, 0.5878, 0.0797, 0.2116], [0.72, 0.1478, 0.0632, 0.1054], [0.9216, 0.9577, 0.3194, 0.9569], [0.776, 0.5923, 0.606, 0.91], [0.665, 0.6888, 0.5302, 0.4305], [0.9881, 0.203, 0.3027, 0.7772]], [[0.3239, 0.527, 0.4866, 0.304], [0.9487, 0.0441, 0.9714, 0.572], [0.4887, 0.8241, 0.1289, 0.1425], [0.6022, 0.0679, 0.8676, 0.0957], [0.2354, 0.6002, 0.0921, 0.7706], [0.1796, 0.1777, 0.8956, 0.962]], [[0.3648, 0.632, 0.6646, 0.8223], [0.5727, 0.8975, 0.1606, 0.017], [0.0223, 0.7905, 0.558, 0.2597], [0.5902, 0.9959, 0.3628, 0.2148], [0.2627, 0.1004, 0.1155, 0.8955], [0.7857, 0.6613, 0.7896, 0.1089]], [[0.3777, 0.2439, 0.838, 0.205], [0.8012, 0.0775, 0.9087, 0.3682], [0.052, 0.4814, 0.3576, 0.9619], [0.415, 0.4955, 0.8159, 0.979], [0.6643, 0.2119, 0.2366, 0.4841], [0.7372, 0.1507, 0.0425, 0.0429]], [[0.3002, 0.6464, 0.221, 0.5234], [0.2441, 0.6224, 0.4753, 0.3304], [0.2925, 0.3152, 0.8275, 0.0854], [0.5913, 0.4832, 0.3926, 0.0008], [0.356, 0.3839, 0.3935, 0.7146], [0.3992, 0.3364, 0.8723, 0.1478]], [[0.6333, 0.9992, 0.9678, 0.0284], [0.4504, 0.5886, 0.0735, 0.0824], [0.2172, 0.1378, 0.6722, 0.5382], [0.9915, 0.5556, 0.1468, 0.5112], [0.9668, 0.6808, 0.4116, 0.0386], [0.0803, 0.7488, 0.777, 0.0226]], [[0.684, 0.6871, 0.0629, 0.1042], [0.1699, 0.4403, 0.6125, 0.539], [0.9655, 0.0865, 0.5202, 0.4757], [0.371, 0.8535, 0.0845, 0.6463], [0.298, 0.2678, 0.2265, 0.3725], [0.0841, 0.578, 0.3698, 0.9606]]],[[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]], [[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]], [[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]], 1, 1, Loc69865), 
LRes1621 = reshape_layer(Loc69865, [3, 12], Res1621), 
LAdd28339 = add_layer([[[[[[0.7036, 0.9679]]], [[[0.8445, 0.0028]]]]], [[[[[0.7565, 0.8702]]], [[[0.1306, 0.8771]]]]]], Add28339), 
LRes67576 = reshape_layer(Add28339, [2, 1, 2], Res67576), 
LRes5215 = reshape_layer(Res67576, [2, 2], Res5215), 
LCro99204 = cropping1D_layer(Res5215, 1, 0, Cro99204), 
LZer13800 = zero_padding1D_layer(Cro99204, 2, 0, Zer13800), 
LGlo61465 = global_average_pooling3D_layer([[[[[1.9149]], [[1.2359]]], [[[1.2576]], [[1.0704]]]]], Glo61465), 
LRes19407 = reshape_layer(Glo61465, [1, 1], Res19407), 
LZer39166 = zero_padding1D_layer(Res19407, 2, 0, Zer39166), 
LLST75369 = lstm_layer([[[10, 3], [4, 2]]],[[9, 7, 9, 7, 2, 6, 5, 8, 10, 9, 2, 7], [9, 9, 10, 6, 10, 9, 10, 7, 6, 2, 5, 8]],[[9, 8, 1, 3, 3, 5, 8, 10, 1, 8, 2, 10], [4, 3, 4, 10, 9, 3, 2, 4, 10, 4, 7, 9], [2, 9, 5, 8, 1, 10, 7, 9, 6, 7, 8, 9]],[9, 10, 8, 1, 1, 8, 5, 8, 3, 2, 3, 9], LST75369), 
LRes81680 = reshape_layer(LST75369, [3, 1], Res81680), 
LMax22214 = maximum_layer([[[[0.4775], [0.4974]]], [[[0.0919], [0.1704]]]], Max22214), 
LZer22732 = zero_padding1D_layer(Max22214, 1, 0, Zer22732), 
LSub34639 = subtract_layer(Res81680,Zer22732, Sub34639), 
LSub1512 = subtract_layer(Zer39166,Sub34639, Sub1512), 
LCon14297 = concatenate_layer([Sub1512,[[[0.0667], [0.2171], [0.6837]]]], 2, Con14297), 
LMin52816 = minimum_layer([Zer13800,Con14297], Min52816), 
LDot79934 = dot_layer(Res1621,Min52816, 1, 1, Dot79934), 
exec_layers([LDen41406,LLoc69865,LRes1621,LAdd28339,LRes67576,LRes5215,LCro99204,LZer13800,LGlo61465,LRes19407,LZer39166,LLST75369,LRes81680,LMax22214,LZer22732,LSub34639,LSub1512,LCon14297,LMin52816,LDot79934],["Den41406","Loc69865","Res1621","Add28339","Res67576","Res5215","Cro99204","Zer13800","Glo61465","Res19407","Zer39166","LST75369","Res81680","Max22214","Zer22732","Sub34639","Sub1512","Con14297","Min52816","Dot79934"],Dot79934,"Dot79934")

Actual (Unparsed): [[[-5.0514464, 2.2650002], [-3.8992096, 3.0584172], [-4.8470881, 3.0744256], [-4.7508896, 2.0659059], [-1.0372172, 4.3005637], [-1.9725962, 4.5685102], [-3.9193360, 3.2496652], [-6.1050062, 1.3184730], [-5.3929371, 3.2098742], [-0.5533631, 4.0311654], [-2.1406852, 2.4463392], [-1.5111542, 4.1360253]]]

Expected (Unparsed): [[[-5.051446243125305,2.265000100360462],[-3.899209423326738,3.058417142647492],[-4.847087924558337,3.074425550022073],[-4.750889476993281,2.0659058445149263],[-1.0372169954985004,4.300563608532822],[-1.9725959415212673,4.5685101079884305],[-3.9193357855618007,3.249665076012709],[-6.1050061596670755,1.3184730168049126],[-5.392937009333582,3.209874023850409],[-0.5533629308332131,4.0311651787980605],[-2.1406850544841807,2.446339062631414],[-1.511154028460977,4.136025116613254]]]

Actual:   [[[-5.0514, 2.2651], [-3.8992, 3.0585], [-4.847, 3.0745], [-4.7508, 2.066], [-1.0372, 4.3006], [-1.9725, 4.5686], [-3.9193, 3.2497], [-6.105, 1.3185], [-5.3929, 3.2099], [-0.5533, 4.0312], [-2.1406, 2.4464], [-1.5111, 4.1361]]]

Expected: [[[-5.0514, 2.2651], [-3.8992, 3.0585], [-4.847, 3.0745], [-4.7508, 2.066], [-1.0372, 4.3006], [-1.9725, 4.5686], [-3.9193, 3.2497], [-6.105, 1.3185], [-5.3929, 3.2099], [-0.5533, 4.0312], [-2.1406, 2.4464], [-1.5111, 4.1361]]]