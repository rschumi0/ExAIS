import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Sub65332 = tf.keras.layers.Input(shape=([3, 2, 3]))
in1Sub65332 = tf.keras.layers.Input(shape=([3, 2, 3]))
in0Ave86054 = tf.keras.layers.Input(shape=([2, 1]))
in0Mul39891 = tf.keras.layers.Input(shape=([2, 2, 1, 1]))
in1Mul39891 = tf.keras.layers.Input(shape=([2, 2, 1, 1]))

Sub65332 = keras.layers.Subtract(name = 'Sub65332', )([in0Sub65332,in1Sub65332])
Res99945 = keras.layers.Reshape((3, 2, 3, 1), name = 'Res99945', )(Sub65332)
Ave86054 = keras.layers.AveragePooling1D(pool_size=(1), name = 'Ave86054', )(in0Ave86054)
Res98497 = keras.layers.Reshape((2, 1, 1), name = 'Res98497', )(Ave86054)
Res2246 = keras.layers.Reshape((2, 1, 1, 1), name = 'Res2246', )(Res98497)
Zer15384 = keras.layers.ZeroPadding3D(padding=((0, 0), (1, 0), (0, 0)), name = 'Zer15384', )(Res2246)
Mul39891 = keras.layers.Multiply(name = 'Mul39891', )([in0Mul39891,in1Mul39891])
Min91730 = keras.layers.Minimum(name = 'Min91730', )([Zer15384,Mul39891])
Zer32922 = keras.layers.ZeroPadding3D(padding=((1, 0), (0, 0), (2, 0)), name = 'Zer32922', )(Min91730)
Ave45805 = keras.layers.Average(name = 'Ave45805', )([Res99945,Zer32922])
model = tf.keras.models.Model(inputs=[in0Sub65332,in1Sub65332,in0Ave86054,in0Mul39891,in1Mul39891], outputs=Ave45805)
in0Sub65332 = tf.constant([[[[0.92, 0.4278, 0.4325], [0.6815, 0.3395, 0.5401]], [[0.564, 0.8524, 0.6167], [0.569, 0.5921, 0.6292]], [[0.7363, 0.2031, 0.3643], [0.4096, 0.7778, 0.5782]]]])
in1Sub65332 = tf.constant([[[[0.5842, 0.6123, 0.3464], [0.9905, 0.8343, 0.0998]], [[0.743, 0.6642, 0.6534], [0.9907, 0.1996, 0.1073]], [[0.9871, 0.8768, 0.2524], [0.1244, 0.7184, 0.2595]]]])
in0Ave86054 = tf.constant([[[1.5989], [1.8636]]])
in0Mul39891 = tf.constant([[[[[0.3955]], [[0.0968]]], [[[0.5889]], [[0.3753]]]]])
in1Mul39891 = tf.constant([[[[[0.7249]], [[0.7139]]], [[[0.839]], [[0.0315]]]]])
print (np.array2string(model.predict([in0Sub65332,in1Sub65332,in0Ave86054,in0Mul39891,in1Mul39891],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Ave45805.png')

LSub65332 = subtract_layer([[[[0.92, 0.4278, 0.4325], [0.6815, 0.3395, 0.5401]], [[0.564, 0.8524, 0.6167], [0.569, 0.5921, 0.6292]], [[0.7363, 0.2031, 0.3643], [0.4096, 0.7778, 0.5782]]]], [[[[0.5842, 0.6123, 0.3464], [0.9905, 0.8343, 0.0998]], [[0.743, 0.6642, 0.6534], [0.9907, 0.1996, 0.1073]], [[0.9871, 0.8768, 0.2524], [0.1244, 0.7184, 0.2595]]]], Sub65332), 
LRes99945 = reshape_layer(Sub65332, [3, 2, 3, 1], Res99945), 
LAve86054 = average_pooling1D_layer([[[1.5989], [1.8636]]], 1, Ave86054), 
LRes98497 = reshape_layer(Ave86054, [2, 1, 1], Res98497), 
LRes2246 = reshape_layer(Res98497, [2, 1, 1, 1], Res2246), 
LZer15384 = zero_padding3D_layer(Res2246, 0, 0, 1, 0, 0, 0, Zer15384), 
LMul39891 = multiply_layer([[[[[[0.3955]], [[0.0968]]], [[[0.5889]], [[0.3753]]]]], [[[[[0.7249]], [[0.7139]]], [[[0.839]], [[0.0315]]]]]], Mul39891), 
LMin91730 = minimum_layer([Zer15384,Mul39891], Min91730), 
LZer32922 = zero_padding3D_layer(Min91730, 1, 0, 0, 0, 2, 0, Zer32922), 
LAve45805 = average_layer([Res99945,Zer32922], Ave45805), 
exec_layers([LSub65332,LRes99945,LAve86054,LRes98497,LRes2246,LZer15384,LMul39891,LMin91730,LZer32922,LAve45805],["Sub65332","Res99945","Ave86054","Res98497","Res2246","Zer15384","Mul39891","Min91730","Zer32922","Ave45805"],Ave45805,"Ave45805")

Actual (Unparsed): [[[[[0.1679000], [-0.0922500], [0.0430500]], [[-0.1545000], [-0.2474000], [0.2201500]]], [[[-0.0895000], [0.0941000], [-0.0183500]], [[-0.2108500], [0.1962500], [0.2955028]]], [[[-0.1254000], [-0.3368500], [0.0559500]], [[0.1426000], [0.0297000], [0.1652610]]]]]

Expected (Unparsed): [[[[[0.1679],[-0.09224999999999997],[0.043050000000000005]],[[-0.15450000000000003],[-0.2474],[0.22015]]],[[[-0.08950000000000002],[0.09410000000000002],[-0.018349999999999977]],[[-0.21085000000000004],[0.19624999999999998],[0.29550276000000003]]],[[[-0.1254],[-0.33685],[0.05595]],[[0.1426],[0.029700000000000004],[0.16526097500000003]]]]]

Actual:   [[[[[0.1679], [-0.0922], [0.0431]], [[-0.1545], [-0.2474], [0.2202]]], [[[-0.0895], [0.0941], [-0.0183]], [[-0.2108], [0.1963], [0.2956]]], [[[-0.1254], [-0.3368], [0.056]], [[0.1426], [0.0297], [0.1653]]]]]

Expected: [[[[[0.1679], [-0.0922], [0.0431]], [[-0.1545], [-0.2474], [0.2202]]], [[[-0.0895], [0.0942], [-0.0183]], [[-0.2108], [0.1963], [0.2956]]], [[[-0.1254], [-0.3368], [0.056]], [[0.1426], [0.0298], [0.1653]]]]]