import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Loc9898 = tf.keras.layers.Input(shape=([1, 1]))
in0Lay43822 = tf.keras.layers.Input(shape=([2]))

Loc9898 = keras.layers.LocallyConnected1D(2, (1),strides=(1), name = 'Loc9898', )(in0Loc9898)
Fla78201 = keras.layers.Flatten(name = 'Fla78201', )(Loc9898)
Lay43822 = keras.layers.LayerNormalization(axis=1, epsilon=1.0414481746951103, name = 'Lay43822', )(in0Lay43822)
Dot37670 = keras.layers.Dot(axes=(1, 1), name = 'Dot37670', )([Fla78201,Lay43822])
model = tf.keras.models.Model(inputs=[in0Loc9898,in0Lay43822], outputs=Dot37670)
w = model.get_layer('Loc9898').get_weights() 
w[0] = np.array([[[0.8601, 0.5446]]])
w[1] = np.array([[0, 0]])
model.get_layer('Loc9898').set_weights(w) 
in0Loc9898 = tf.constant([[[0.4991]]])
in0Lay43822 = tf.constant([[1.4615, 1.8736]])
print (np.array2string(model.predict([in0Loc9898,in0Lay43822],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Dot37670.png')

LLoc9898 = locally_connected1D_layer([[[0.4991]]], 1,[[[0.8601, 0.5446]]],[[0, 0]], 1, Loc9898), 
LFla78201 = flatten_layer(Loc9898, Fla78201), 
LLay43822 = layer_normalization_layer([[1.4615, 1.8736]], 1, 1.0414481746951103, Lay43822), 
LDot37670 = dot_layer(Fla78201,Lay43822, 1, 1, Dot37670), 
exec_layers([LLoc9898,LFla78201,LLay43822,LDot37670],["Loc9898","Fla78201","Lay43822","Dot37670"],Dot37670,"Dot37670")

Actual (Unparsed): [[-0.0311648]]

Expected (Unparsed): [[-0.03116477437852895]]

Actual:   [[-0.0311]]

Expected: [[-0.0311]]