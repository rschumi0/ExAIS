import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Cro47319 = tf.keras.layers.Input(shape=([2, 4, 4, 1]))
in0Con42975 = tf.keras.layers.Input(shape=([3, 4, 1]))
in0Add30392 = tf.keras.layers.Input(shape=([1, 1, 1]))
in1Add30392 = tf.keras.layers.Input(shape=([1, 1, 1]))

Cro47319 = keras.layers.Cropping3D(cropping=((1, 0), (2, 0), (2, 0)), name = 'Cro47319', )(in0Cro47319)
Res39730 = keras.layers.Reshape((1, 2, 2), name = 'Res39730', )(Cro47319)
Res68139 = keras.layers.Reshape((1, 4), name = 'Res68139', )(Res39730)
Zer42364 = keras.layers.ZeroPadding1D(padding=((1, 1)), name = 'Zer42364', )(Res68139)
Res81348 = keras.layers.Reshape((3, 4, 1), name = 'Res81348', )(Zer42364)
Con42975 = keras.layers.Concatenate(axis=3, name = 'Con42975', )([Res81348,in0Con42975])
Add30392 = keras.layers.Add(name = 'Add30392', )([in0Add30392,in1Add30392])
Con21118 = keras.layers.Conv2DTranspose(2, (1, 1),strides=(1, 1), padding='same', name = 'Con21118', )(Add30392)
Zer53719 = keras.layers.ZeroPadding2D(padding=((2, 0), (3, 0)), name = 'Zer53719', )(Con21118)
Add51077 = keras.layers.Add(name = 'Add51077', )([Con42975,Zer53719])
model = tf.keras.models.Model(inputs=[in0Cro47319,in0Con42975,in0Add30392,in1Add30392], outputs=Add51077)
w = model.get_layer('Con21118').get_weights() 
w[0] = np.array([[[[0.1041], [0.6719]]]])
w[1] = np.array([0, 0])
model.get_layer('Con21118').set_weights(w) 
in0Cro47319 = tf.constant([[[[[1.8194], [1.8026], [1.0437], [1.4434]], [[1.6787], [1.186], [1.1387], [1.4516]], [[1.9097], [1.2621], [1.4871], [1.0551]], [[1.0424], [1.0926], [1.9546], [1.0308]]], [[[1.2083], [1.8651], [1.6215], [1.9887]], [[1.2222], [1.041], [1.4433], [1.5815]], [[1.3523], [1.0948], [1.8958], [1.078]], [[1.2098], [1.8249], [1.8618], [1.33]]]]])
in0Con42975 = tf.constant([[[[0.5631], [0.4524], [0.9364], [0.7028]], [[0.0979], [0.6058], [0.0327], [0.09]], [[0.6288], [0.8176], [0.4439], [0.7696]]]])
in0Add30392 = tf.constant([[[[0.4476]]]])
in1Add30392 = tf.constant([[[[0.4816]]]])
print (np.array2string(model.predict([in0Cro47319,in0Con42975,in0Add30392,in1Add30392],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Add51077.png')

LCro47319 = cropping3D_layer([[[[[1.8194], [1.8026], [1.0437], [1.4434]], [[1.6787], [1.186], [1.1387], [1.4516]], [[1.9097], [1.2621], [1.4871], [1.0551]], [[1.0424], [1.0926], [1.9546], [1.0308]]], [[[1.2083], [1.8651], [1.6215], [1.9887]], [[1.2222], [1.041], [1.4433], [1.5815]], [[1.3523], [1.0948], [1.8958], [1.078]], [[1.2098], [1.8249], [1.8618], [1.33]]]]], 1, 0, 2, 0, 2, 0, Cro47319), 
LRes39730 = reshape_layer(Cro47319, [1, 2, 2], Res39730), 
LRes68139 = reshape_layer(Res39730, [1, 4], Res68139), 
LZer42364 = zero_padding1D_layer(Res68139, 1, 1, Zer42364), 
LRes81348 = reshape_layer(Zer42364, [3, 4, 1], Res81348), 
LCon42975 = concatenate_layer([Res81348,[[[[0.5631], [0.4524], [0.9364], [0.7028]], [[0.0979], [0.6058], [0.0327], [0.09]], [[0.6288], [0.8176], [0.4439], [0.7696]]]]], 3, Con42975), 
LAdd30392 = add_layer([[[[[0.4476]]]], [[[[0.4816]]]]], Add30392), 
LCon21118 = conv2D_transpose_layer(Add30392, 1, 1,[[[[0.1041], [0.6719]]]],[0, 0], 1, 1, true, Con21118), 
LZer53719 = zero_padding2D_layer(Con21118, 2, 0, 3, 0, Zer53719), 
LAdd51077 = add_layer([Con42975,Zer53719], Add51077), 
exec_layers([LCro47319,LRes39730,LRes68139,LZer42364,LRes81348,LCon42975,LAdd30392,LCon21118,LZer53719,LAdd51077],["Cro47319","Res39730","Res68139","Zer42364","Res81348","Con42975","Add30392","Con21118","Zer53719","Add51077"],Add51077,"Add51077")

Actual (Unparsed): [[[[0.0000000, 0.5631000], [0.0000000, 0.4524000], [0.0000000, 0.9364000], [0.0000000, 0.7028000]], [[1.8958000, 0.0979000], [1.0779999, 0.6058000], [1.8618000, 0.0327000], [1.3300000, 0.0900000]], [[0.0000000, 0.6288000], [0.0000000, 0.8176000], [0.0000000, 0.4439000], [0.0967297, 1.3939294]]]]

Expected (Unparsed): [[[[0,0.5631],[0,0.4524],[0,0.9364],[0,0.7028]],[[1.8958,0.0979],[1.078,0.6058],[1.8618,0.0327],[1.33,0.09]],[[0,0.6288],[0,0.8176],[0,0.4439],[0.09672972,1.3939294800000002]]]]

Actual:   [[[[0, 0.5631], [0, 0.4524], [0, 0.9364], [0, 0.7028]], [[1.8958, 0.0979], [1.078, 0.6058], [1.8618, 0.0327], [1.33, 0.09]], [[0, 0.6288], [0, 0.8176], [0, 0.4439], [0.0968, 1.394]]]]

Expected: [[[[0, 0.5631], [0, 0.4524], [0, 0.9364], [0, 0.7028]], [[1.8958, 0.0979], [1.078, 0.6058], [1.8618, 0.0327], [1.33, 0.09]], [[0, 0.6288], [0, 0.8176], [0, 0.4439], [0.0968, 1.394]]]]