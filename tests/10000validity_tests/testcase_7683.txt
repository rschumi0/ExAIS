import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Thr70922 = tf.keras.layers.Input(shape=([2, 2]))
in0Min14414 = tf.keras.layers.Input(shape=([2, 2, 1]))
in1Min14414 = tf.keras.layers.Input(shape=([2, 2, 1]))

Thr70922 = keras.layers.ThresholdedReLU(theta=9.365564281882369, name = 'Thr70922', input_shape=(2, 2))(in0Thr70922)
Min14414 = keras.layers.Minimum(name = 'Min14414', )([in0Min14414,in1Min14414])
Res73247 = keras.layers.Reshape((2, 2), name = 'Res73247', )(Min14414)
Dot45997 = keras.layers.Dot(axes=(1, 2), name = 'Dot45997', )([Thr70922,Res73247])
model = tf.keras.models.Model(inputs=[in0Thr70922,in0Min14414,in1Min14414], outputs=Dot45997)
in0Thr70922 = tf.constant([[[0.3742, 0.0957], [0.3579, 0.0869]]])
in0Min14414 = tf.constant([[[[0.9281], [0.8987]], [[0.131], [0.8697]]]])
in1Min14414 = tf.constant([[[[0.8168], [0.1028]], [[0.491], [0.5844]]]])
print (np.array2string(model.predict([in0Thr70922,in0Min14414,in1Min14414],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Dot45997.png')

LThr70922 = thresholded_relu_layer([[[0.3742, 0.0957], [0.3579, 0.0869]]], 9.365564281882369, Thr70922), 
LMin14414 = minimum_layer([[[[[0.9281], [0.8987]], [[0.131], [0.8697]]]], [[[[0.8168], [0.1028]], [[0.491], [0.5844]]]]], Min14414), 
LRes73247 = reshape_layer(Min14414, [2, 2], Res73247), 
LDot45997 = dot_layer(Thr70922,Res73247, 1, 2, Dot45997), 
exec_layers([LThr70922,LMin14414,LRes73247,LDot45997],["Thr70922","Min14414","Res73247","Dot45997"],Dot45997,"Dot45997")

Actual (Unparsed): [[[0.0000000, 0.0000000], [0.0000000, 0.0000000]]]

Expected (Unparsed): [[[0.0,0.0],[0.0,0.0]]]

Actual:   [[[0, 0], [0, 0]]]

Expected: [[[0, 0], [0, 0]]]