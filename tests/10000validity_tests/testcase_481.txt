import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Mul69878 = tf.keras.layers.Input(shape=([1, 1, 2, 2]))
in1Mul69878 = tf.keras.layers.Input(shape=([1, 1, 2, 2]))
in0Con22496 = tf.keras.layers.Input(shape=([1, 1, 2, 2]))
in0Cro30432 = tf.keras.layers.Input(shape=([3, 2, 2, 4]))

Mul69878 = keras.layers.Multiply(name = 'Mul69878', )([in0Mul69878,in1Mul69878])
Con22496 = keras.layers.Concatenate(axis=4, name = 'Con22496', )([Mul69878,in0Con22496])
Cro30432 = keras.layers.Cropping3D(cropping=((1, 1), (1, 0), (0, 1)), name = 'Cro30432', )(in0Cro30432)
Zer30244 = keras.layers.ZeroPadding3D(padding=((0, 0), (0, 0), (1, 0)), name = 'Zer30244', )(Cro30432)
Mul86697 = keras.layers.Multiply(name = 'Mul86697', )([Con22496,Zer30244])
PRe85878 = keras.layers.PReLU(name = 'PRe85878', )(Mul86697)
model = tf.keras.models.Model(inputs=[in0Mul69878,in1Mul69878,in0Con22496,in0Cro30432], outputs=PRe85878)
w = model.get_layer('PRe85878').get_weights() 
w[0] = np.array([[[[0.0565, 0.7254, 0.0085, 0.8919], [0.3082, 0.2707, 0.0027, 0.1965]]]])
model.get_layer('PRe85878').set_weights(w) 
in0Mul69878 = tf.constant([[[[[0.3646, 0.3206], [0.7919, 0.8389]]]]])
in1Mul69878 = tf.constant([[[[[0.5295, 0.8661], [0.4342, 0.2698]]]]])
in0Con22496 = tf.constant([[[[[0.4705, 0.0886], [0.3073, 0.7406]]]]])
in0Cro30432 = tf.constant([[[[[1.3203, 1.3156, 1.9767, 1.7882], [1.189, 1.2402, 1.585, 1.3481]], [[1.1965, 1.7592, 1.0737, 1.9948], [1.4682, 1.6845, 1.9614, 1.0847]]], [[[1.2195, 1.9012, 1.6631, 1.4778], [1.4139, 1.5067, 1.1918, 1.3146]], [[1.9523, 1.1992, 1.6448, 1.1582], [1.5296, 1.0259, 1.5719, 1.6079]]], [[[1.9401, 1.8814, 1.046, 1.9721], [1.667, 1.0804, 1.8847, 1.2249]], [[1.0465, 1.92, 1.0089, 1.2667], [1.164, 1.3939, 1.3665, 1.4574]]]]])
print (np.array2string(model.predict([in0Mul69878,in1Mul69878,in0Con22496,in0Cro30432],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='PRe85878.png')

LMul69878 = multiply_layer([[[[[[0.3646, 0.3206], [0.7919, 0.8389]]]]], [[[[[0.5295, 0.8661], [0.4342, 0.2698]]]]]], Mul69878), 
LCon22496 = concatenate_layer([Mul69878,[[[[[0.4705, 0.0886], [0.3073, 0.7406]]]]]], 4, Con22496), 
LCro30432 = cropping3D_layer([[[[[1.3203, 1.3156, 1.9767, 1.7882], [1.189, 1.2402, 1.585, 1.3481]], [[1.1965, 1.7592, 1.0737, 1.9948], [1.4682, 1.6845, 1.9614, 1.0847]]], [[[1.2195, 1.9012, 1.6631, 1.4778], [1.4139, 1.5067, 1.1918, 1.3146]], [[1.9523, 1.1992, 1.6448, 1.1582], [1.5296, 1.0259, 1.5719, 1.6079]]], [[[1.9401, 1.8814, 1.046, 1.9721], [1.667, 1.0804, 1.8847, 1.2249]], [[1.0465, 1.92, 1.0089, 1.2667], [1.164, 1.3939, 1.3665, 1.4574]]]]], 1, 1, 1, 0, 0, 1, Cro30432), 
LZer30244 = zero_padding3D_layer(Cro30432, 0, 0, 0, 0, 1, 0, Zer30244), 
LMul86697 = multiply_layer([Con22496,Zer30244], Mul86697), 
LPRe85878 = prelu_layer(Mul86697, [[[[0.0565, 0.7254, 0.0085, 0.8919], [0.3082, 0.2707, 0.0027, 0.1965]]]], PRe85878), 
exec_layers([LMul69878,LCon22496,LCro30432,LZer30244,LMul86697,LPRe85878],["Mul69878","Con22496","Cro30432","Zer30244","Mul86697","PRe85878"],PRe85878,"PRe85878")

Actual (Unparsed): [[[[[0.0000000, 0.0000000, 0.0000000, 0.0000000], [0.6712846, 0.2714212, 0.5054470, 0.8577629]]]]]

Expected (Unparsed): [[[[[0.0,0.0,0.0,0.0],[0.671284649854,0.271421195824,0.5054470400000001,0.85776292]]]]]

Actual:   [[[[[0, 0, 0, 0], [0.6713, 0.2715, 0.5055, 0.8578]]]]]

Expected: [[[[[0, 0, 0, 0], [0.6713, 0.2715, 0.5055, 0.8578]]]]]