import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Min25364 = tf.keras.layers.Input(shape=([2, 1, 2]))
in1Min25364 = tf.keras.layers.Input(shape=([2, 1, 2]))
in0Con54835 = tf.keras.layers.Input(shape=([2, 2, 2]))
in0Add21648 = tf.keras.layers.Input(shape=([2, 2, 1]))
in1Add21648 = tf.keras.layers.Input(shape=([2, 2, 1]))

Min25364 = keras.layers.Minimum(name = 'Min25364', )([in0Min25364,in1Min25364])
Sep61931 = keras.layers.SeparableConv2D(4, (1, 2),strides=(1, 1), padding='same', name = 'Sep61931', )(Min25364)
Res4947 = keras.layers.Reshape((2, 1, 4, 1), name = 'Res4947', )(Sep61931)
Glo26857 = keras.layers.GlobalAveragePooling3D(name = 'Glo26857', )(Res4947)
Res77665 = keras.layers.Reshape((1, 1), name = 'Res77665', )(Glo26857)
Res98284 = keras.layers.Reshape((1, 1, 1), name = 'Res98284', )(Res77665)
Zer53466 = keras.layers.ZeroPadding2D(padding=((1, 0), (1, 0)), name = 'Zer53466', )(Res98284)
Con54835 = keras.layers.Concatenate(axis=3, name = 'Con54835', )([Zer53466,in0Con54835])
Add21648 = keras.layers.Add(name = 'Add21648', )([in0Add21648,in1Add21648])
Den51481 = keras.layers.Dense(3,name = 'Den51481', )(Add21648)
Min12924 = keras.layers.Minimum(name = 'Min12924', )([Con54835,Den51481])
model = tf.keras.models.Model(inputs=[in0Min25364,in1Min25364,in0Con54835,in0Add21648,in1Add21648], outputs=Min12924)
w = model.get_layer('Sep61931').get_weights() 
w[0] = np.array([[[[0.7618], [0.9624]], [[0.6916], [0.0938]]]])
w[1] = np.array([[[[0.0925, 0.8961, 0.1733, 0.5146], [0.1675, 0.387, 0.0256, 0.193]]]])
w[2] = np.array([0, 0, 0, 0])
model.get_layer('Sep61931').set_weights(w) 
w = model.get_layer('Den51481').get_weights() 
w[0] = np.array([[0.4134, 0.1093, 0.2975]])
w[1] = np.array([0.4611, 0.124, 0.336])
model.get_layer('Den51481').set_weights(w) 
in0Min25364 = tf.constant([[[[0.1113, 0.1231]], [[0.4965, 0.6565]]]])
in1Min25364 = tf.constant([[[[0.1499, 0.7959]], [[0.2754, 0.8414]]]])
in0Con54835 = tf.constant([[[[0.9212, 0.8707], [0.5963, 0.9228]], [[0.0928, 0.4055], [0.9613, 0.1616]]]])
in0Add21648 = tf.constant([[[[0.0753], [0.864]], [[0.607], [0.9317]]]])
in1Add21648 = tf.constant([[[[0.427], [0.5819]], [[0.4313], [0.4275]]]])
print (np.array2string(model.predict([in0Min25364,in1Min25364,in0Con54835,in0Add21648,in1Add21648],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Min12924.png')

LMin25364 = minimum_layer([[[[[0.1113, 0.1231]], [[0.4965, 0.6565]]]], [[[[0.1499, 0.7959]], [[0.2754, 0.8414]]]]], Min25364), 
LSep61931 = separable_conv2D_layer(Min25364, 1, 2,[[[[[0.7618], [0.9624]], [[0.6916], [0.0938]]]],[[[[0.0925, 0.8961, 0.1733, 0.5146], [0.1675, 0.387, 0.0256, 0.193]]]]],[0, 0, 0, 0], 1, 1, true, Sep61931), 
LRes4947 = reshape_layer(Sep61931, [2, 1, 4, 1], Res4947), 
LGlo26857 = global_average_pooling3D_layer(Res4947, Glo26857), 
LRes77665 = reshape_layer(Glo26857, [1, 1], Res77665), 
LRes98284 = reshape_layer(Res77665, [1, 1, 1], Res98284), 
LZer53466 = zero_padding2D_layer(Res98284, 1, 0, 1, 0, Zer53466), 
LCon54835 = concatenate_layer([Zer53466,[[[[0.9212, 0.8707], [0.5963, 0.9228]], [[0.0928, 0.4055], [0.9613, 0.1616]]]]], 3, Con54835), 
LAdd21648 = add_layer([[[[[0.0753], [0.864]], [[0.607], [0.9317]]]], [[[[0.427], [0.5819]], [[0.4313], [0.4275]]]]], Add21648), 
LDen51481 = dense_layer(Add21648, [[0.4134, 0.1093, 0.2975]],[0.4611, 0.124, 0.336], Den51481), 
LMin12924 = minimum_layer([Con54835,Den51481], Min12924), 
exec_layers([LMin25364,LSep61931,LRes4947,LGlo26857,LRes77665,LRes98284,LZer53466,LCon54835,LAdd21648,LDen51481,LMin12924],["Min25364","Sep61931","Res4947","Glo26857","Res77665","Res98284","Zer53466","Con54835","Add21648","Den51481","Min12924"],Min12924,"Min12924")

Actual (Unparsed): [[[[0.0000000, 0.1789014, 0.4854342], [0.0000000, 0.2820369, 0.7661553]], [[0.0000000, 0.0928000, 0.4055000], [0.1342405, 0.2725606, 0.1616000]]]]

Expected (Unparsed): [[[[0,0.17890139,0.48543425],[0,0.28203687,0.76615525]],[[0,0.0928,0.4055],[0.13424047415175,0.27256055999999995,0.1616]]]]

Actual:   [[[[0, 0.179, 0.4855], [0, 0.2821, 0.7662]], [[0, 0.0928, 0.4055], [0.1343, 0.2726, 0.1616]]]]

Expected: [[[[0, 0.179, 0.4855], [0, 0.2821, 0.7662]], [[0, 0.0928, 0.4055], [0.1343, 0.2726, 0.1616]]]]