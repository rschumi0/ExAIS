import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Cro31450 = tf.keras.layers.Input(shape=([4, 3, 3, 1]))
in0Max88672 = tf.keras.layers.Input(shape=([1, 2, 2]))
in1Max88672 = tf.keras.layers.Input(shape=([1, 2, 2]))
in0Thr12754 = tf.keras.layers.Input(shape=([2, 1, 2]))
in0Con81237 = tf.keras.layers.Input(shape=([2, 3, 1]))
in0Sub74196 = tf.keras.layers.Input(shape=([3, 3, 3]))
in1Sub74196 = tf.keras.layers.Input(shape=([3, 3, 3]))
in0Con95465 = tf.keras.layers.Input(shape=([3, 3, 3, 1]))
in0Min75697 = tf.keras.layers.Input(shape=([1, 2, 1, 2]))
in1Min75697 = tf.keras.layers.Input(shape=([1, 2, 1, 2]))

Cro31450 = keras.layers.Cropping3D(cropping=((2, 0), (2, 0), (0, 0)), name = 'Cro31450', )(in0Cro31450)
Res72804 = keras.layers.Reshape((2, 1, 3), name = 'Res72804', )(Cro31450)
Zer18680 = keras.layers.ZeroPadding2D(padding=((0, 0), (2, 0)), name = 'Zer18680', )(Res72804)
Max88672 = keras.layers.Maximum(name = 'Max88672', )([in0Max88672,in1Max88672])
Zer98036 = keras.layers.ZeroPadding2D(padding=((1, 0), (1, 0)), name = 'Zer98036', )(Max88672)
Thr12754 = keras.layers.ThresholdedReLU(theta=4.255898516934442, name = 'Thr12754', input_shape=(2, 1, 2))(in0Thr12754)
Zer74327 = keras.layers.ZeroPadding2D(padding=((0, 0), (2, 0)), name = 'Zer74327', )(Thr12754)
Mul41374 = keras.layers.Multiply(name = 'Mul41374', )([Zer98036,Zer74327])
Con81237 = keras.layers.Concatenate(axis=3, name = 'Con81237', )([Mul41374,in0Con81237])
Ave94074 = keras.layers.Average(name = 'Ave94074', )([Zer18680,Con81237])
Zer12809 = keras.layers.ZeroPadding2D(padding=((1, 0), (0, 0)), name = 'Zer12809', )(Ave94074)
Sub74196 = keras.layers.Subtract(name = 'Sub74196', )([in0Sub74196,in1Sub74196])
ReL42185 = keras.layers.ReLU(max_value=3.782803023635072, negative_slope=5.829872396418241, threshold=9.251381737920942, name = 'ReL42185', )(Sub74196)
Ave2325 = keras.layers.Average(name = 'Ave2325', )([Zer12809,ReL42185])
Res13383 = keras.layers.Reshape((3, 3, 3, 1), name = 'Res13383', )(Ave2325)
Con95465 = keras.layers.Concatenate(axis=4, name = 'Con95465', )([Res13383,in0Con95465])
Min75697 = keras.layers.Minimum(name = 'Min75697', )([in0Min75697,in1Min75697])
Zer55279 = keras.layers.ZeroPadding3D(padding=((2, 0), (1, 0), (2, 0)), name = 'Zer55279', )(Min75697)
Min27094 = keras.layers.Minimum(name = 'Min27094', )([Con95465,Zer55279])
model = tf.keras.models.Model(inputs=[in0Cro31450,in0Max88672,in1Max88672,in0Thr12754,in0Con81237,in0Sub74196,in1Sub74196,in0Con95465,in0Min75697,in1Min75697], outputs=Min27094)
in0Cro31450 = tf.constant([[[[[1.6953], [1.5204], [1.4437]], [[1.883], [1.1358], [1.4607]], [[1.2933], [1.4071], [1.3737]]], [[[1.1034], [1.7207], [1.234]], [[1.4338], [1.2893], [1.6818]], [[1.2556], [1.3869], [1.7662]]], [[[1.3312], [1.635], [1.1423]], [[1.9472], [1.7762], [1.745]], [[1.6227], [1.5933], [1.2185]]], [[[1.711], [1.3834], [1.9672]], [[1.9371], [1.4231], [1.6573]], [[1.5868], [1.875], [1.4754]]]]])
in0Max88672 = tf.constant([[[[0.7491, 0.564], [0.4262, 0.8699]]]])
in1Max88672 = tf.constant([[[[0.6823, 0.6578], [0.3893, 0.4746]]]])
in0Thr12754 = tf.constant([[[[0.0115, 0.594]], [[0.9528, 0.17]]]])
in0Con81237 = tf.constant([[[[0.7384], [0.5608], [0.5671]], [[0.5515], [0.2393], [0.564]]]])
in0Sub74196 = tf.constant([[[[0.7497, 0.9064, 0.008], [0.3316, 0.4354, 0.5404], [0.0479, 0.8022, 0.4641]], [[0.7271, 0.4025, 0.787], [0.9442, 0.1835, 0.5851], [0.1686, 0.5004, 0.5225]], [[0.0836, 0.5849, 0.6466], [0.868, 0.0111, 0.2366], [0.5759, 0.0625, 0.6543]]]])
in1Sub74196 = tf.constant([[[[0.8011, 0.4745, 0.5248], [0.1053, 0.0152, 0.7566], [0.7728, 0.8415, 0.4611]], [[0.939, 0.8596, 0.3335], [0.8395, 0.2254, 0.4881], [0.5008, 0.5466, 0.2562]], [[0.3679, 0.1123, 0.6854], [0.8919, 0.4561, 0.0321], [0.7364, 0.3478, 0.0859]]]])
in0Con95465 = tf.constant([[[[[0.4692], [0.4338], [0.3377]], [[0.3244], [0.1093], [0.9163]], [[0.5735], [0.4906], [0.2685]]], [[[0.5472], [0.689], [0.3032]], [[0.9635], [0.5399], [0.4217]], [[0.3356], [0.8235], [0.7318]]], [[[0.9288], [0.339], [0.2495]], [[0.1174], [0.029], [0.1338]], [[0.8591], [0.4738], [0.5563]]]]])
in0Min75697 = tf.constant([[[[[0.5497, 0.9873]], [[0.4721, 0.6258]]]]])
in1Min75697 = tf.constant([[[[[0.9003, 0.4815]], [[0.4704, 0.2381]]]]])
print (np.array2string(model.predict([in0Cro31450,in0Max88672,in1Max88672,in0Thr12754,in0Con81237,in0Sub74196,in1Sub74196,in0Con95465,in0Min75697,in1Min75697],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Min27094.png')

LCro31450 = cropping3D_layer([[[[[1.6953], [1.5204], [1.4437]], [[1.883], [1.1358], [1.4607]], [[1.2933], [1.4071], [1.3737]]], [[[1.1034], [1.7207], [1.234]], [[1.4338], [1.2893], [1.6818]], [[1.2556], [1.3869], [1.7662]]], [[[1.3312], [1.635], [1.1423]], [[1.9472], [1.7762], [1.745]], [[1.6227], [1.5933], [1.2185]]], [[[1.711], [1.3834], [1.9672]], [[1.9371], [1.4231], [1.6573]], [[1.5868], [1.875], [1.4754]]]]], 2, 0, 2, 0, 0, 0, Cro31450), 
LRes72804 = reshape_layer(Cro31450, [2, 1, 3], Res72804), 
LZer18680 = zero_padding2D_layer(Res72804, 0, 0, 2, 0, Zer18680), 
LMax88672 = maximum_layer([[[[[0.7491, 0.564], [0.4262, 0.8699]]]], [[[[0.6823, 0.6578], [0.3893, 0.4746]]]]], Max88672), 
LZer98036 = zero_padding2D_layer(Max88672, 1, 0, 1, 0, Zer98036), 
LThr12754 = thresholded_relu_layer([[[[0.0115, 0.594]], [[0.9528, 0.17]]]], 4.255898516934442, Thr12754), 
LZer74327 = zero_padding2D_layer(Thr12754, 0, 0, 2, 0, Zer74327), 
LMul41374 = multiply_layer([Zer98036,Zer74327], Mul41374), 
LCon81237 = concatenate_layer([Mul41374,[[[[0.7384], [0.5608], [0.5671]], [[0.5515], [0.2393], [0.564]]]]], 3, Con81237), 
LAve94074 = average_layer([Zer18680,Con81237], Ave94074), 
LZer12809 = zero_padding2D_layer(Ave94074, 1, 0, 0, 0, Zer12809), 
LSub74196 = subtract_layer([[[[0.7497, 0.9064, 0.008], [0.3316, 0.4354, 0.5404], [0.0479, 0.8022, 0.4641]], [[0.7271, 0.4025, 0.787], [0.9442, 0.1835, 0.5851], [0.1686, 0.5004, 0.5225]], [[0.0836, 0.5849, 0.6466], [0.868, 0.0111, 0.2366], [0.5759, 0.0625, 0.6543]]]], [[[[0.8011, 0.4745, 0.5248], [0.1053, 0.0152, 0.7566], [0.7728, 0.8415, 0.4611]], [[0.939, 0.8596, 0.3335], [0.8395, 0.2254, 0.4881], [0.5008, 0.5466, 0.2562]], [[0.3679, 0.1123, 0.6854], [0.8919, 0.4561, 0.0321], [0.7364, 0.3478, 0.0859]]]], Sub74196), 
LReL42185 = relu_layer(Sub74196, 3.782803023635072, 5.829872396418241, 9.251381737920942, ReL42185), 
LAve2325 = average_layer([Zer12809,ReL42185], Ave2325), 
LRes13383 = reshape_layer(Ave2325, [3, 3, 3, 1], Res13383), 
LCon95465 = concatenate_layer([Res13383,[[[[[0.4692], [0.4338], [0.3377]], [[0.3244], [0.1093], [0.9163]], [[0.5735], [0.4906], [0.2685]]], [[[0.5472], [0.689], [0.3032]], [[0.9635], [0.5399], [0.4217]], [[0.3356], [0.8235], [0.7318]]], [[[0.9288], [0.339], [0.2495]], [[0.1174], [0.029], [0.1338]], [[0.8591], [0.4738], [0.5563]]]]]], 4, Con95465), 
LMin75697 = minimum_layer([[[[[[0.5497, 0.9873]], [[0.4721, 0.6258]]]]], [[[[[0.9003, 0.4815]], [[0.4704, 0.2381]]]]]], Min75697), 
LZer55279 = zero_padding3D_layer(Min75697, 2, 0, 1, 0, 2, 0, Zer55279), 
LMin27094 = minimum_layer([Con95465,Zer55279], Min27094), 
exec_layers([LCro31450,LRes72804,LZer18680,LMax88672,LZer98036,LThr12754,LZer74327,LMul41374,LCon81237,LAve94074,LZer12809,LSub74196,LReL42185,LAve2325,LRes13383,LCon95465,LMin75697,LZer55279,LMin27094],["Cro31450","Res72804","Zer18680","Max88672","Zer98036","Thr12754","Zer74327","Mul41374","Con81237","Ave94074","Zer12809","Sub74196","ReL42185","Ave2325","Res13383","Con95465","Min75697","Zer55279","Min27094"],Min27094,"Min27094")

Actual (Unparsed): [[[[[-27.1170152, 0.0000000], [-25.7082265, 0.0000000], [-28.4736265, 0.0000000]], [[-26.3075374, 0.0000000], [-25.7423313, 0.0000000], [-27.5973967, 0.0000000]], [[-29.0802248, 0.0000000], [-27.0817444, 0.0000000], [-26.9584427, 0.0000000]]], [[[-27.5848625, 0.0000000], [-28.2996049, 0.0000000], [-25.4606639, 0.0000000]], [[-26.6619938, 0.0000000], [-27.0893233, 0.0000000], [-26.5442387, 0.0000000]], [[-27.5298544, 0.0000000], [-26.7035325, 0.0000000], [-25.7445400, 0.0000000]]], [[[-27.7959039, 0.0000000], [-25.5895886, 0.0000000], [-26.9424120, 0.0000000]], [[-27.0368546, 0.0000000], [-28.2643341, 0.0000000], [-26.3112581, 0.1338000]], [[-27.0383347, 0.0000000], [-27.3300688, 0.0000000], [-24.8004879, 0.2381000]]]]]

Expected (Unparsed): [[[[[-27.11701523190451,0],[-25.708226567310042,0],[-28.473626538551034,0]],[[-26.307537449661837,0],[-25.742331320829088,0],[-27.59739671736937,0]],[[-29.08022476139835,0],[-27.08174450390618,0],[-26.958442702721932,0]]],[[[-27.58486249171707,0],[-28.299604847517948,0],[-25.460663945428724,0]],[[-26.661993691364064,0],[-27.089323338021522,0],[-26.544238700090276,0]],[[-27.529854316361632,0],[-26.70353256367382,0],[-25.74454000173347,0]]],[[[-27.795903872467413,0],[-25.589588664042928,0],[-26.942412035807074,0]],[[-27.03685448645376,0],[-28.264334119519617,0],[-26.311258058782794,0.1338]],[[-27.038334771129126,0],[-27.330068808665622,0],[-24.800487776254496,0.2381]]]]]

Actual:   [[[[[-27.117, 0], [-25.7082, 0], [-28.4736, 0]], [[-26.3075, 0], [-25.7423, 0], [-27.5973, 0]], [[-29.0802, 0], [-27.0817, 0], [-26.9584, 0]]], [[[-27.5848, 0], [-28.2996, 0], [-25.4606, 0]], [[-26.6619, 0], [-27.0893, 0], [-26.5442, 0]], [[-27.5298, 0], [-26.7035, 0], [-25.7445, 0]]], [[[-27.7959, 0], [-25.5895, 0], [-26.9424, 0]], [[-27.0368, 0], [-28.2643, 0], [-26.3112, 0.1338]], [[-27.0383, 0], [-27.33, 0], [-24.8004, 0.2381]]]]]

Expected: [[[[[-27.117, 0], [-25.7082, 0], [-28.4736, 0]], [[-26.3075, 0], [-25.7423, 0], [-27.5973, 0]], [[-29.0802, 0], [-27.0817, 0], [-26.9584, 0]]], [[[-27.5848, 0], [-28.2996, 0], [-25.4606, 0]], [[-26.6619, 0], [-27.0893, 0], [-26.5442, 0]], [[-27.5298, 0], [-26.7035, 0], [-25.7445, 0]]], [[[-27.7959, 0], [-25.5895, 0], [-26.9424, 0]], [[-27.0368, 0], [-28.2643, 0], [-26.3112, 0.1338]], [[-27.0383, 0], [-27.33, 0], [-24.8004, 0.2381]]]]]