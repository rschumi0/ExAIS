import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Loc45674 = tf.keras.layers.Input(shape=([1, 2]))
in0Con92232 = tf.keras.layers.Input(shape=([1, 4, 1]))
in0Max92720 = tf.keras.layers.Input(shape=([1, 1, 2]))
in1Max92720 = tf.keras.layers.Input(shape=([1, 1, 2]))
in0Ave76902 = tf.keras.layers.Input(shape=([1, 1, 1]))
in1Ave76902 = tf.keras.layers.Input(shape=([1, 1, 1]))
in0Con63428 = tf.keras.layers.Input(shape=([1, 4, 1]))

Loc45674 = keras.layers.LocallyConnected1D(4, (1),strides=(1), name = 'Loc45674', )(in0Loc45674)
Res57143 = keras.layers.Reshape((1, 4, 1), name = 'Res57143', )(Loc45674)
Con92232 = keras.layers.Concatenate(axis=3, name = 'Con92232', )([Res57143,in0Con92232])
Max92720 = keras.layers.Maximum(name = 'Max92720', )([in0Max92720,in1Max92720])
Zer44749 = keras.layers.ZeroPadding2D(padding=((0, 0), (3, 0)), name = 'Zer44749', )(Max92720)
Max68721 = keras.layers.Maximum(name = 'Max68721', )([Con92232,Zer44749])
Ave76902 = keras.layers.Average(name = 'Ave76902', )([in0Ave76902,in1Ave76902])
Zer65350 = keras.layers.ZeroPadding2D(padding=((0, 0), (3, 0)), name = 'Zer65350', )(Ave76902)
Con63428 = keras.layers.Concatenate(axis=3, name = 'Con63428', )([Zer65350,in0Con63428])
Max1364 = keras.layers.Maximum(name = 'Max1364', )([Max68721,Con63428])
Res23962 = keras.layers.Reshape((1, 8), name = 'Res23962', )(Max1364)
Cro34131 = keras.layers.Cropping1D(cropping=((0, 0)), name = 'Cro34131', )(Res23962)
model = tf.keras.models.Model(inputs=[in0Loc45674,in0Con92232,in0Max92720,in1Max92720,in0Ave76902,in1Ave76902,in0Con63428], outputs=Cro34131)
w = model.get_layer('Loc45674').get_weights() 
w[0] = np.array([[[0.6769, 0.3296, 0.2798, 0.5929], [0.0028, 0.6366, 0.0256, 0.8475]]])
w[1] = np.array([[0, 0, 0, 0]])
model.get_layer('Loc45674').set_weights(w) 
in0Loc45674 = tf.constant([[[0.9053, 0.3224]]])
in0Con92232 = tf.constant([[[[0.9113], [0.4242], [0.8117], [0.8425]]]])
in0Max92720 = tf.constant([[[[0.2756, 0.4473]]]])
in1Max92720 = tf.constant([[[[0.1934, 0.7316]]]])
in0Ave76902 = tf.constant([[[[0.1153]]]])
in1Ave76902 = tf.constant([[[[0.9216]]]])
in0Con63428 = tf.constant([[[[0.8149], [0.8332], [0.655], [0.094]]]])
print (np.array2string(model.predict([in0Loc45674,in0Con92232,in0Max92720,in1Max92720,in0Ave76902,in1Ave76902,in0Con63428],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Cro34131.png')

LLoc45674 = locally_connected1D_layer([[[0.9053, 0.3224]]], 1,[[[0.6769, 0.3296, 0.2798, 0.5929], [0.0028, 0.6366, 0.0256, 0.8475]]],[[0, 0, 0, 0]], 1, Loc45674), 
LRes57143 = reshape_layer(Loc45674, [1, 4, 1], Res57143), 
LCon92232 = concatenate_layer([Res57143,[[[[0.9113], [0.4242], [0.8117], [0.8425]]]]], 3, Con92232), 
LMax92720 = maximum_layer([[[[[0.2756, 0.4473]]]], [[[[0.1934, 0.7316]]]]], Max92720), 
LZer44749 = zero_padding2D_layer(Max92720, 0, 0, 3, 0, Zer44749), 
LMax68721 = maximum_layer([Con92232,Zer44749], Max68721), 
LAve76902 = average_layer([[[[[0.1153]]]], [[[[0.9216]]]]], Ave76902), 
LZer65350 = zero_padding2D_layer(Ave76902, 0, 0, 3, 0, Zer65350), 
LCon63428 = concatenate_layer([Zer65350,[[[[0.8149], [0.8332], [0.655], [0.094]]]]], 3, Con63428), 
LMax1364 = maximum_layer([Max68721,Con63428], Max1364), 
LRes23962 = reshape_layer(Max1364, [1, 8], Res23962), 
LCro34131 = cropping1D_layer(Res23962, 0, 0, Cro34131), 
exec_layers([LLoc45674,LRes57143,LCon92232,LMax92720,LZer44749,LMax68721,LAve76902,LZer65350,LCon63428,LMax1364,LRes23962,LCro34131],["Loc45674","Res57143","Con92232","Max92720","Zer44749","Max68721","Ave76902","Zer65350","Con63428","Max1364","Res23962","Cro34131"],Cro34131,"Cro34131")

Actual (Unparsed): [[[0.6137003, 0.9113000, 0.5036267, 0.8332000, 0.2615564, 0.8117000, 0.8099864, 0.8425000]]]

Expected (Unparsed): [[[0.6137002899999999,0.9113,0.5036267200000001,0.8332,0.26155638,0.8117,0.8099863700000001,0.8425]]]

Actual:   [[[0.6138, 0.9113, 0.5037, 0.8332, 0.2616, 0.8117, 0.81, 0.8425]]]

Expected: [[[0.6138, 0.9113, 0.5037, 0.8332, 0.2616, 0.8117, 0.81, 0.8425]]]