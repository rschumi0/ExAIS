import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Glo88965 = tf.keras.layers.Input(shape=([2, 1, 1, 1]))
in0Con85490 = tf.keras.layers.Input(shape=([3, 3, 3, 1]))
in0Sub46952 = tf.keras.layers.Input(shape=([2, 3, 2]))
in1Sub46952 = tf.keras.layers.Input(shape=([2, 3, 2]))

Glo88965 = keras.layers.GlobalMaxPool3D(name = 'Glo88965', )(in0Glo88965)
Res83847 = keras.layers.Reshape((1, 1), name = 'Res83847', )(Glo88965)
Res57459 = keras.layers.Reshape((1, 1, 1), name = 'Res57459', )(Res83847)
Res78397 = keras.layers.Reshape((1, 1, 1, 1), name = 'Res78397', )(Res57459)
Zer24615 = keras.layers.ZeroPadding3D(padding=((1, 1), (1, 1), (1, 1)), name = 'Zer24615', )(Res78397)
Con85490 = keras.layers.Concatenate(axis=4, name = 'Con85490', )([Zer24615,in0Con85490])
Sub46952 = keras.layers.Subtract(name = 'Sub46952', )([in0Sub46952,in1Sub46952])
Res22033 = keras.layers.Reshape((2, 3, 2, 1), name = 'Res22033', )(Sub46952)
Con32646 = keras.layers.Conv3DTranspose(2, (1, 1, 2),strides=(1, 1, 1), padding='valid', name = 'Con32646', )(Res22033)
Zer10760 = keras.layers.ZeroPadding3D(padding=((1, 0), (0, 0), (0, 0)), name = 'Zer10760', )(Con32646)
Max14782 = keras.layers.Maximum(name = 'Max14782', )([Con85490,Zer10760])
model = tf.keras.models.Model(inputs=[in0Glo88965,in0Con85490,in0Sub46952,in1Sub46952], outputs=Max14782)
w = model.get_layer('Con32646').get_weights() 
w[0] = np.array([[[[[0.2854], [0.083]], [[0.2476], [0.9608]]]]])
w[1] = np.array([0, 0])
model.get_layer('Con32646').set_weights(w) 
in0Glo88965 = tf.constant([[[[[1.8369]]], [[[1.4868]]]]])
in0Con85490 = tf.constant([[[[[0.1979], [0.602], [0.3989]], [[0.9941], [0.843], [0.2136]], [[0.6251], [0.2307], [0.4558]]], [[[0.7103], [0.436], [0.9704]], [[0.8582], [0.3484], [0.9091]], [[0.047], [0.7018], [0.8468]]], [[[0.3694], [0.8069], [0.9108]], [[0.1682], [0.1262], [0.8246]], [[0.7522], [0.6649], [0.8719]]]]])
in0Sub46952 = tf.constant([[[[0.6732, 0.4985], [0.1322, 0.7876], [0.7615, 0.5537]], [[0.269, 0.2217], [0.0364, 0.8125], [0.6116, 0.7679]]]])
in1Sub46952 = tf.constant([[[[0.6403, 0.0387], [0.1887, 0.2767], [0.446, 0.8865]], [[0.4989, 0.4006], [0.0009, 0.319], [0.7588, 0.88]]]])
print (np.array2string(model.predict([in0Glo88965,in0Con85490,in0Sub46952,in1Sub46952],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Max14782.png')

LGlo88965 = global_max_pool3D_layer([[[[[1.8369]]], [[[1.4868]]]]], Glo88965), 
LRes83847 = reshape_layer(Glo88965, [1, 1], Res83847), 
LRes57459 = reshape_layer(Res83847, [1, 1, 1], Res57459), 
LRes78397 = reshape_layer(Res57459, [1, 1, 1, 1], Res78397), 
LZer24615 = zero_padding3D_layer(Res78397, 1, 1, 1, 1, 1, 1, Zer24615), 
LCon85490 = concatenate_layer([Zer24615,[[[[[0.1979], [0.602], [0.3989]], [[0.9941], [0.843], [0.2136]], [[0.6251], [0.2307], [0.4558]]], [[[0.7103], [0.436], [0.9704]], [[0.8582], [0.3484], [0.9091]], [[0.047], [0.7018], [0.8468]]], [[[0.3694], [0.8069], [0.9108]], [[0.1682], [0.1262], [0.8246]], [[0.7522], [0.6649], [0.8719]]]]]], 4, Con85490), 
LSub46952 = subtract_layer([[[[0.6732, 0.4985], [0.1322, 0.7876], [0.7615, 0.5537]], [[0.269, 0.2217], [0.0364, 0.8125], [0.6116, 0.7679]]]], [[[[0.6403, 0.0387], [0.1887, 0.2767], [0.446, 0.8865]], [[0.4989, 0.4006], [0.0009, 0.319], [0.7588, 0.88]]]], Sub46952), 
LRes22033 = reshape_layer(Sub46952, [2, 3, 2, 1], Res22033), 
LCon32646 = conv3D_transpose_layer(Res22033, 1, 1, 2,[[[[[0.2854], [0.083]], [[0.2476], [0.9608]]]]],[0, 0], 1, 1, 1, false, Con32646), 
LZer10760 = zero_padding3D_layer(Con32646, 1, 0, 0, 0, 0, 0, Zer10760), 
LMax14782 = maximum_layer([Con85490,Zer10760], Max14782), 
exec_layers([LGlo88965,LRes83847,LRes57459,LRes78397,LZer24615,LCon85490,LSub46952,LRes22033,LCon32646,LZer10760,LMax14782],["Glo88965","Res83847","Res57459","Res78397","Zer24615","Con85490","Sub46952","Res22033","Con32646","Zer10760","Max14782"],Max14782,"Max14782")

Actual (Unparsed): [[[[[0.0000000, 0.1979000], [0.0000000, 0.6020000], [0.0000000, 0.3989000]], [[0.0000000, 0.9941000], [0.0000000, 0.8430000], [0.0000000, 0.2136000]], [[0.0000000, 0.6251000], [0.0000000, 0.2307000], [0.0000000, 0.4558000]]], [[[0.0093897, 0.7103000], [0.1393730, 0.4360000], [0.1138465, 0.9704000]], [[0.0000000, 0.8582000], [1.8369000, 0.3484000], [0.1264988, 0.9091000]], [[0.0900437, 0.0470000], [0.0000000, 0.7018000], [0.0000000, 0.8468000]]], [[[0.0000000, 0.3694000], [0.0000000, 0.8069000], [0.0000000, 0.9108000]], [[0.0101317, 0.1682000], [0.1496347, 0.1262000], [0.1221906, 0.8246000]], [[0.0000000, 0.7522000], [0.0000000, 0.6649000], [0.0000000, 0.8719000]]]]]

Expected (Unparsed): [[[[[0,0.1979],[0,0.602],[0,0.3989]],[[0,0.9941],[0,0.843],[0,0.2136]],[[0,0.6251],[0,0.2307],[0,0.4558]]],[[[0.009389660000000011,0.7103],[0.13937296000000002,0.436],[0.11384647999999999,0.9704]],[[0,0.8582],[1.8369,0.3484],[0.12649883999999997,0.9091]],[[0.09004369999999998,0.047],[0,0.7018],[0,0.8468]]],[[[0,0.3694],[0,0.8069],[0,0.9108]],[[0.0101317,0.1682],[0.1496347,0.1262],[0.1221906,0.8246]],[[0,0.7522],[0,0.6649],[0,0.8719]]]]]

Actual:   [[[[[0, 0.1979], [0, 0.602], [0, 0.3989]], [[0, 0.9941], [0, 0.843], [0, 0.2136]], [[0, 0.6251], [0, 0.2307], [0, 0.4558]]], [[[0.0094, 0.7103], [0.1394, 0.436], [0.1139, 0.9704]], [[0, 0.8582], [1.8369, 0.3484], [0.1265, 0.9091]], [[0.0901, 0.047], [0, 0.7018], [0, 0.8468]]], [[[0, 0.3694], [0, 0.8069], [0, 0.9108]], [[0.0102, 0.1682], [0.1497, 0.1262], [0.1222, 0.8246]], [[0, 0.7522], [0, 0.6649], [0, 0.8719]]]]]

Expected: [[[[[0, 0.1979], [0, 0.602], [0, 0.3989]], [[0, 0.9941], [0, 0.843], [0, 0.2136]], [[0, 0.6251], [0, 0.2307], [0, 0.4558]]], [[[0.0094, 0.7103], [0.1394, 0.436], [0.1139, 0.9704]], [[0, 0.8582], [1.8369, 0.3484], [0.1265, 0.9091]], [[0.0901, 0.047], [0, 0.7018], [0, 0.8468]]], [[[0, 0.3694], [0, 0.8069], [0, 0.9108]], [[0.0102, 0.1682], [0.1497, 0.1262], [0.1222, 0.8246]], [[0, 0.7522], [0, 0.6649], [0, 0.8719]]]]]