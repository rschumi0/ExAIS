import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Dep58565 = tf.keras.layers.Input(shape=([1, 2, 1]))
in0Con60544 = tf.keras.layers.Input(shape=([1, 2, 1]))
in0PRe24083 = tf.keras.layers.Input(shape=([1, 1, 2]))
in0Con35091 = tf.keras.layers.Input(shape=([3, 32]))
in0Zer13225 = tf.keras.layers.Input(shape=([1, 1, 1, 4]))
in0Ave34573 = tf.keras.layers.Input(shape=([2, 2]))
in1Ave34573 = tf.keras.layers.Input(shape=([2, 2]))
in0Con72869 = tf.keras.layers.Input(shape=([3, 34]))

Dep58565 = keras.layers.DepthwiseConv2D((1, 1),strides=(1, 1), padding='same', name = 'Dep58565', )(in0Dep58565)
Zer13140 = keras.layers.ZeroPadding2D(padding=((1, 1), (1, 1)), name = 'Zer13140', )(Dep58565)
Dep61560 = keras.layers.DepthwiseConv2D((2, 2),strides=(2, 2), padding='valid', name = 'Dep61560', )(Zer13140)
Con60544 = keras.layers.Concatenate(axis=3, name = 'Con60544', )([Dep61560,in0Con60544])
PRe24083 = keras.layers.PReLU(name = 'PRe24083', input_shape=(1, 1, 2))(in0PRe24083)
Zer72448 = keras.layers.ZeroPadding2D(padding=((0, 0), (1, 0)), name = 'Zer72448', )(PRe24083)
Ave30029 = keras.layers.Average(name = 'Ave30029', )([Con60544,Zer72448])
Res55021 = keras.layers.Reshape((1, 4), name = 'Res55021', )(Ave30029)
Zer49606 = keras.layers.ZeroPadding1D(padding=((2, 0)), name = 'Zer49606', )(Res55021)
Con35091 = keras.layers.Concatenate(axis=2, name = 'Con35091', )([Zer49606,in0Con35091])
Zer13225 = keras.layers.ZeroPadding3D(padding=((1, 1), (1, 1), (1, 1)), name = 'Zer13225', )(in0Zer13225)
Res23788 = keras.layers.Reshape((3, 3, 12), name = 'Res23788', )(Zer13225)
Res108 = keras.layers.Reshape((3, 36), name = 'Res108', )(Res23788)
Ave34573 = keras.layers.Average(name = 'Ave34573', )([in0Ave34573,in1Ave34573])
Loc71178 = keras.layers.LocallyConnected1D(2, (1),strides=(1), name = 'Loc71178', )(Ave34573)
Zer35014 = keras.layers.ZeroPadding1D(padding=((1, 0)), name = 'Zer35014', )(Loc71178)
Con72869 = keras.layers.Concatenate(axis=2, name = 'Con72869', )([Zer35014,in0Con72869])
Add101 = keras.layers.Add(name = 'Add101', )([Res108,Con72869])
Max39144 = keras.layers.Maximum(name = 'Max39144', )([Con35091,Add101])
model = tf.keras.models.Model(inputs=[in0Dep58565,in0Con60544,in0PRe24083,in0Con35091,in0Zer13225,in0Ave34573,in1Ave34573,in0Con72869], outputs=Max39144)
w = model.get_layer('Dep58565').get_weights() 
w[0] = np.array([[[[0.424]]]])
w[1] = np.array([0])
model.get_layer('Dep58565').set_weights(w) 
w = model.get_layer('Dep61560').get_weights() 
w[0] = np.array([[[[0.7133]], [[0.8621]]], [[[0.2967]], [[0.9622]]]])
w[1] = np.array([0])
model.get_layer('Dep61560').set_weights(w) 
w = model.get_layer('PRe24083').get_weights() 
w[0] = np.array([[[0.8306, 0.89]]])
model.get_layer('PRe24083').set_weights(w) 
w = model.get_layer('Loc71178').get_weights() 
w[0] = np.array([[[0.712, 0.7516], [0.6362, 0.1124]], [[0.2736, 0.0455], [0.0055, 0.3672]]])
w[1] = np.array([[0, 0], [0, 0]])
model.get_layer('Loc71178').set_weights(w) 
in0Dep58565 = tf.constant([[[[0.8981], [0.8252]]]])
in0Con60544 = tf.constant([[[[0.7254], [0.3701]]]])
in0PRe24083 = tf.constant([[[[0.611, 0.1279]]]])
in0Con35091 = tf.constant([[[0.7541, 0.1817, 0.1734, 0.0928, 0.36, 0.229, 0.9057, 0.31, 0.8197, 0.8179, 0.289, 0.3323, 0.8174, 0.7269, 0.4224, 0.5232, 0.6863, 0.6413, 0.9693, 0.2116, 0.9472, 0.8114, 0.3224, 0.9797, 0.4185, 0.6144, 0.8097, 0.531, 0.9014, 0.1872, 0.7804, 0.1737], [0.84, 0.3253, 0.8827, 0.1873, 0.1563, 0.5255, 0.225, 0.7272, 0.671, 0.3928, 0.398, 0.4658, 0.1316, 0.6292, 0.5299, 0.8701, 0.8924, 0.4735, 0.6405, 0.8697, 0.7179, 0.7724, 0.5715, 0.6857, 0.0117, 0.829, 0.6755, 0.7553, 0.0143, 0.7959, 0.2667, 0.0162], [0.1589, 0.659, 0.5599, 0.2939, 0.8247, 0.7927, 0.4529, 0.1728, 0.1853, 0.6582, 0.0452, 0.5285, 0.7163, 0.463, 0.2255, 0.8442, 0.1928, 0.5035, 0.014, 0.5461, 0.6888, 0.4726, 0.5941, 0.85, 0.1691, 0.2287, 0.1353, 0.0346, 0.7567, 0.3959, 0.5721, 0.6305]]])
in0Zer13225 = tf.constant([[[[[1.4699, 1.5863, 1.4886, 1.2292]]]]])
in0Ave34573 = tf.constant([[[0.6818, 0.7331], [0.8867, 0.7436]]])
in1Ave34573 = tf.constant([[[0.8616, 0.2933], [0.5371, 0.691]]])
in0Con72869 = tf.constant([[[0.4811, 0.6396, 0.2053, 0.6365, 0.7802, 0.6988, 0.4396, 0.2872, 0.609, 0.6425, 0.6064, 0.8422, 0.0242, 0.2649, 0.6129, 0.1362, 0.1916, 0.183, 0.3789, 0.7465, 0.5407, 0.2235, 0.2807, 0.9745, 0.4803, 0.9778, 0.4721, 0.493, 0.4896, 0.8451, 0.3755, 0.526, 0.3945, 0.0805], [0.3339, 0.4493, 0.2944, 0.4584, 0.2759, 0.1258, 0.9112, 0.1692, 0.253, 0.1238, 0.1025, 0.4795, 0.8823, 0.2025, 0.8978, 0.5001, 0.0488, 0.1005, 0.6997, 0.1327, 0.7065, 0.7076, 0.2224, 0.8937, 0.2526, 0.1644, 0.3353, 0.8528, 0.7441, 0.294, 0.221, 0.3626, 0.1764, 0.0443], [0.1657, 0.6066, 0.1497, 0.2925, 0.8557, 0.2482, 0.5116, 0.4497, 0.2721, 0.6218, 0.9838, 0.7898, 0.1452, 0.9774, 0.3543, 0.3259, 0.4615, 0.262, 0.5517, 0.3553, 0.6989, 0.8019, 0.8001, 0.5046, 0.3056, 0.0352, 0.1034, 0.221, 0.4385, 0.1364, 0.5034, 0.1744, 0.1265, 0.9754]]])
print (np.array2string(model.predict([in0Dep58565,in0Con60544,in0PRe24083,in0Con35091,in0Zer13225,in0Ave34573,in1Ave34573,in0Con72869],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Max39144.png')

LDep58565 = depthwise_conv2D_layer([[[[0.8981], [0.8252]]]], 1, 1,[[[[0.424]]]],[0], 1, 1, true, Dep58565), 
LZer13140 = zero_padding2D_layer(Dep58565, 1, 1, 1, 1, Zer13140), 
LDep61560 = depthwise_conv2D_layer(Zer13140, 2, 2,[[[[0.7133]], [[0.8621]]], [[[0.2967]], [[0.9622]]]],[0], 2, 2, false, Dep61560), 
LCon60544 = concatenate_layer([Dep61560,[[[[0.7254], [0.3701]]]]], 3, Con60544), 
LPRe24083 = prelu_layer([[[[0.611, 0.1279]]]], [[[0.8306, 0.89]]], PRe24083), 
LZer72448 = zero_padding2D_layer(PRe24083, 0, 0, 1, 0, Zer72448), 
LAve30029 = average_layer([Con60544,Zer72448], Ave30029), 
LRes55021 = reshape_layer(Ave30029, [1, 4], Res55021), 
LZer49606 = zero_padding1D_layer(Res55021, 2, 0, Zer49606), 
LCon35091 = concatenate_layer([Zer49606,[[[0.7541, 0.1817, 0.1734, 0.0928, 0.36, 0.229, 0.9057, 0.31, 0.8197, 0.8179, 0.289, 0.3323, 0.8174, 0.7269, 0.4224, 0.5232, 0.6863, 0.6413, 0.9693, 0.2116, 0.9472, 0.8114, 0.3224, 0.9797, 0.4185, 0.6144, 0.8097, 0.531, 0.9014, 0.1872, 0.7804, 0.1737], [0.84, 0.3253, 0.8827, 0.1873, 0.1563, 0.5255, 0.225, 0.7272, 0.671, 0.3928, 0.398, 0.4658, 0.1316, 0.6292, 0.5299, 0.8701, 0.8924, 0.4735, 0.6405, 0.8697, 0.7179, 0.7724, 0.5715, 0.6857, 0.0117, 0.829, 0.6755, 0.7553, 0.0143, 0.7959, 0.2667, 0.0162], [0.1589, 0.659, 0.5599, 0.2939, 0.8247, 0.7927, 0.4529, 0.1728, 0.1853, 0.6582, 0.0452, 0.5285, 0.7163, 0.463, 0.2255, 0.8442, 0.1928, 0.5035, 0.014, 0.5461, 0.6888, 0.4726, 0.5941, 0.85, 0.1691, 0.2287, 0.1353, 0.0346, 0.7567, 0.3959, 0.5721, 0.6305]]]], 2, Con35091), 
LZer13225 = zero_padding3D_layer([[[[[1.4699, 1.5863, 1.4886, 1.2292]]]]], 1, 1, 1, 1, 1, 1, Zer13225), 
LRes23788 = reshape_layer(Zer13225, [3, 3, 12], Res23788), 
LRes108 = reshape_layer(Res23788, [3, 36], Res108), 
LAve34573 = average_layer([[[[0.6818, 0.7331], [0.8867, 0.7436]]], [[[0.8616, 0.2933], [0.5371, 0.691]]]], Ave34573), 
LLoc71178 = locally_connected1D_layer(Ave34573, 1,[[[0.712, 0.7516], [0.6362, 0.1124]], [[0.2736, 0.0455], [0.0055, 0.3672]]],[[0, 0], [0, 0]], 1, Loc71178), 
LZer35014 = zero_padding1D_layer(Loc71178, 1, 0, Zer35014), 
LCon72869 = concatenate_layer([Zer35014,[[[0.4811, 0.6396, 0.2053, 0.6365, 0.7802, 0.6988, 0.4396, 0.2872, 0.609, 0.6425, 0.6064, 0.8422, 0.0242, 0.2649, 0.6129, 0.1362, 0.1916, 0.183, 0.3789, 0.7465, 0.5407, 0.2235, 0.2807, 0.9745, 0.4803, 0.9778, 0.4721, 0.493, 0.4896, 0.8451, 0.3755, 0.526, 0.3945, 0.0805], [0.3339, 0.4493, 0.2944, 0.4584, 0.2759, 0.1258, 0.9112, 0.1692, 0.253, 0.1238, 0.1025, 0.4795, 0.8823, 0.2025, 0.8978, 0.5001, 0.0488, 0.1005, 0.6997, 0.1327, 0.7065, 0.7076, 0.2224, 0.8937, 0.2526, 0.1644, 0.3353, 0.8528, 0.7441, 0.294, 0.221, 0.3626, 0.1764, 0.0443], [0.1657, 0.6066, 0.1497, 0.2925, 0.8557, 0.2482, 0.5116, 0.4497, 0.2721, 0.6218, 0.9838, 0.7898, 0.1452, 0.9774, 0.3543, 0.3259, 0.4615, 0.262, 0.5517, 0.3553, 0.6989, 0.8019, 0.8001, 0.5046, 0.3056, 0.0352, 0.1034, 0.221, 0.4385, 0.1364, 0.5034, 0.1744, 0.1265, 0.9754]]]], 2, Con72869), 
LAdd101 = add_layer([Res108,Con72869], Add101), 
LMax39144 = maximum_layer([Con35091,Add101], Max39144), 
exec_layers([LDep58565,LZer13140,LDep61560,LCon60544,LPRe24083,LZer72448,LAve30029,LRes55021,LZer49606,LCon35091,LZer13225,LRes23788,LRes108,LAve34573,LLoc71178,LZer35014,LCon72869,LAdd101,LMax39144],["Dep58565","Zer13140","Dep61560","Con60544","PRe24083","Zer72448","Ave30029","Res55021","Zer49606","Con35091","Zer13225","Res23788","Res108","Ave34573","Loc71178","Zer35014","Con72869","Add101","Max39144"],Max39144,"Max39144")

Actual (Unparsed): [[[0.0000000, 0.0000000, 0.4811000, 0.6396000, 0.7541000, 0.6365000, 0.7802000, 0.6988000, 0.4396000, 0.2872000, 0.9057000, 0.6425000, 0.8197000, 0.8422000, 0.2890000, 0.3323000, 0.8174000, 0.7269000, 0.4224000, 0.5232000, 0.6863000, 0.7465000, 0.9693000, 0.2235000, 0.9472000, 0.9745000, 0.4803000, 0.9797000, 0.4721000, 0.6144000, 0.8097000, 0.8451000, 0.9014000, 0.5260000, 0.7804000, 0.1737000], [0.8759482, 0.6376934, 0.3339000, 0.4493000, 0.8400000, 0.4584000, 0.8827000, 0.1873000, 0.9112000, 0.5255000, 0.2530000, 0.7272000, 0.6710000, 0.4795000, 0.8823000, 0.4658000, 2.3677000, 2.0864000, 1.5374000, 1.3297000, 0.8924000, 0.4735000, 0.7065000, 0.8697000, 0.7179000, 0.8937000, 0.5715000, 0.6857000, 0.3353000, 0.8528000, 0.7441000, 0.7553000, 0.2210000, 0.7959000, 0.2667000, 0.0443000], [0.1987210, 0.3627000, 0.3574054, 0.6066000, 0.1589000, 0.6590000, 0.8557000, 0.2939000, 0.8247000, 0.7927000, 0.4529000, 0.6218000, 0.9838000, 0.7898000, 0.1452000, 0.9774000, 0.7163000, 0.4630000, 0.4615000, 0.8442000, 0.5517000, 0.5035000, 0.6989000, 0.8019000, 0.8001000, 0.5046000, 0.5941000, 0.8500000, 0.1691000, 0.2287000, 0.4385000, 0.1364000, 0.7567000, 0.3959000, 0.5721000, 0.9754000]]]

Expected (Unparsed): [[[0,0,0.4811,0.6396,0.7541,0.6365,0.7802,0.6988,0.4396,0.2872,0.9057,0.6425,0.8197,0.8422,0.289,0.3323,0.8174,0.7269,0.4224,0.5232,0.6863,0.7465,0.9693,0.2235,0.9472,0.9745,0.4803,0.9797,0.4721,0.6144,0.8097,0.8451,0.9014,0.526,0.7804,0.1737],[0.87594824,0.6376934000000001,0.3339,0.4493,0.84,0.4584,0.8827,0.1873,0.9112,0.5255,0.253,0.7272,0.671,0.4795,0.8823,0.4658,2.3677,2.0864000000000003,1.5373999999999999,1.3297,0.8924,0.4735,0.7065,0.8697,0.7179,0.8937,0.5715,0.6857,0.3353,0.8528,0.7441,0.7553,0.221,0.7959,0.2667,0.0443],[0.19872099000000001,0.3627,0.35740541008,0.6066,0.1589,0.659,0.8557,0.2939,0.8247,0.7927,0.4529,0.6218,0.9838,0.7898,0.1452,0.9774,0.7163,0.463,0.4615,0.8442,0.5517,0.5035,0.6989,0.8019,0.8001,0.5046,0.5941,0.85,0.1691,0.2287,0.4385,0.1364,0.7567,0.3959,0.5721,0.9754]]]

Actual:   [[[0, 0, 0.4811, 0.6396, 0.7541, 0.6365, 0.7802, 0.6988, 0.4396, 0.2872, 0.9057, 0.6425, 0.8197, 0.8422, 0.289, 0.3323, 0.8174, 0.7269, 0.4224, 0.5232, 0.6863, 0.7465, 0.9693, 0.2235, 0.9472, 0.9745, 0.4803, 0.9797, 0.4721, 0.6144, 0.8097, 0.8451, 0.9014, 0.526, 0.7804, 0.1737], [0.876, 0.6377, 0.3339, 0.4493, 0.84, 0.4584, 0.8827, 0.1873, 0.9112, 0.5255, 0.253, 0.7272, 0.671, 0.4795, 0.8823, 0.4658, 2.3677, 2.0864, 1.5374, 1.3297, 0.8924, 0.4735, 0.7065, 0.8697, 0.7179, 0.8937, 0.5715, 0.6857, 0.3353, 0.8528, 0.7441, 0.7553, 0.221, 0.7959, 0.2667, 0.0443], [0.1988, 0.3627, 0.3575, 0.6066, 0.1589, 0.659, 0.8557, 0.2939, 0.8247, 0.7927, 0.4529, 0.6218, 0.9838, 0.7898, 0.1452, 0.9774, 0.7163, 0.463, 0.4615, 0.8442, 0.5517, 0.5035, 0.6989, 0.8019, 0.8001, 0.5046, 0.5941, 0.85, 0.1691, 0.2287, 0.4385, 0.1364, 0.7567, 0.3959, 0.5721, 0.9754]]]

Expected: [[[0, 0, 0.4811, 0.6396, 0.7541, 0.6365, 0.7802, 0.6988, 0.4396, 0.2872, 0.9057, 0.6425, 0.8197, 0.8422, 0.289, 0.3323, 0.8174, 0.7269, 0.4224, 0.5232, 0.6863, 0.7465, 0.9693, 0.2235, 0.9472, 0.9745, 0.4803, 0.9797, 0.4721, 0.6144, 0.8097, 0.8451, 0.9014, 0.526, 0.7804, 0.1737], [0.876, 0.6377, 0.3339, 0.4493, 0.84, 0.4584, 0.8827, 0.1873, 0.9112, 0.5255, 0.253, 0.7272, 0.671, 0.4795, 0.8823, 0.4658, 2.3677, 2.0865, 1.5374, 1.3297, 0.8924, 0.4735, 0.7065, 0.8697, 0.7179, 0.8937, 0.5715, 0.6857, 0.3353, 0.8528, 0.7441, 0.7553, 0.221, 0.7959, 0.2667, 0.0443], [0.1988, 0.3627, 0.3575, 0.6066, 0.1589, 0.659, 0.8557, 0.2939, 0.8247, 0.7927, 0.4529, 0.6218, 0.9838, 0.7898, 0.1452, 0.9774, 0.7163, 0.463, 0.4615, 0.8442, 0.5517, 0.5035, 0.6989, 0.8019, 0.8001, 0.5046, 0.5941, 0.85, 0.1691, 0.2287, 0.4385, 0.1364, 0.7567, 0.3959, 0.5721, 0.9754]]]