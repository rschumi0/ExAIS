import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Sub97820 = tf.keras.layers.Input(shape=([2, 3, 2, 3]))
in1Sub97820 = tf.keras.layers.Input(shape=([2, 3, 2, 3]))
in0Sep57254 = tf.keras.layers.Input(shape=([2, 1]))
in0Con19487 = tf.keras.layers.Input(shape=([2, 14]))

Sub97820 = keras.layers.Subtract(name = 'Sub97820', )([in0Sub97820,in1Sub97820])
Res40387 = keras.layers.Reshape((2, 3, 6), name = 'Res40387', )(Sub97820)
Res45014 = keras.layers.Reshape((2, 18), name = 'Res45014', )(Res40387)
Sep57254 = keras.layers.SeparableConv1D(4, (2),strides=(1), padding='same', name = 'Sep57254', )(in0Sep57254)
Con19487 = keras.layers.Concatenate(axis=2, name = 'Con19487', )([Sep57254,in0Con19487])
Min20663 = keras.layers.Minimum(name = 'Min20663', )([Res45014,Con19487])
Res17876 = keras.layers.Reshape((2, 18, 1), name = 'Res17876', )(Min20663)
Max97020 = keras.layers.MaxPool2D(pool_size=(2, 5), name = 'Max97020', )(Res17876)
Bat93437 = keras.layers.BatchNormalization(axis=1, epsilon=0.7558306687687367,  name = 'Bat93437', )(Max97020)
model = tf.keras.models.Model(inputs=[in0Sub97820,in1Sub97820,in0Sep57254,in0Con19487], outputs=Bat93437)
w = model.get_layer('Sep57254').get_weights() 
w[0] = np.array([[[0.6847]], [[0.332]]])
w[1] = np.array([[[0.9269, 0.8226, 0.0065, 0.6089]]])
w[2] = np.array([0, 0, 0, 0])
model.get_layer('Sep57254').set_weights(w) 
w = model.get_layer('Bat93437').get_weights() 
w[0] = np.array([0.8536])
w[1] = np.array([0.6553])
w[2] = np.array([0.6597])
w[3] = np.array([0.6082])
model.get_layer('Bat93437').set_weights(w) 
in0Sub97820 = tf.constant([[[[[0.8131, 0.4692, 0.5217], [0.5143, 0.134, 0.3127]], [[0.5361, 0.3386, 0.6076], [0.7277, 0.3146, 0.0827]], [[0.5446, 0.1745, 0.9406], [0.6358, 0.0934, 0.3144]]], [[[0.5638, 0.2386, 0.7273], [0.9299, 0.6246, 0.4074]], [[0.2842, 0.7264, 0.1645], [0.3926, 0.882, 0.8371]], [[0.5939, 0.2168, 0.7621], [0.7465, 0.406, 0.2479]]]]])
in1Sub97820 = tf.constant([[[[[0.8695, 0.5195, 0.9764], [0.9473, 0.771, 0.6789]], [[0.7674, 0.9053, 0.3325], [0.8053, 0.9676, 0.527]], [[0.4288, 0.9573, 0.8424], [0.7623, 0.8442, 0.2991]]], [[[0.8436, 0.0894, 0.4371], [0.9086, 0.8323, 0.554]], [[0.5866, 0.5966, 0.6075], [0.0435, 0.9182, 0.7079]], [[0.2991, 0.133, 0.3145], [0.3019, 0.085, 0.7761]]]]])
in0Sep57254 = tf.constant([[[0.256], [0.8103]]])
in0Con19487 = tf.constant([[[0.9481, 0.7934, 0.3133, 0.8672, 0.9367, 0.7872, 0.1061, 0.4224, 0.799, 0.9756, 0.1212, 0.989, 0.7522, 0.0065], [0.9106, 0.2135, 0.781, 0.6555, 0.8387, 0.139, 0.3004, 0.9848, 0.292, 0.975, 0.8782, 0.1061, 0.0302, 0.845]]])
print (np.array2string(model.predict([in0Sub97820,in1Sub97820,in0Sep57254,in0Con19487],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Bat93437.png')

LSub97820 = subtract_layer([[[[[0.8131, 0.4692, 0.5217], [0.5143, 0.134, 0.3127]], [[0.5361, 0.3386, 0.6076], [0.7277, 0.3146, 0.0827]], [[0.5446, 0.1745, 0.9406], [0.6358, 0.0934, 0.3144]]], [[[0.5638, 0.2386, 0.7273], [0.9299, 0.6246, 0.4074]], [[0.2842, 0.7264, 0.1645], [0.3926, 0.882, 0.8371]], [[0.5939, 0.2168, 0.7621], [0.7465, 0.406, 0.2479]]]]], [[[[[0.8695, 0.5195, 0.9764], [0.9473, 0.771, 0.6789]], [[0.7674, 0.9053, 0.3325], [0.8053, 0.9676, 0.527]], [[0.4288, 0.9573, 0.8424], [0.7623, 0.8442, 0.2991]]], [[[0.8436, 0.0894, 0.4371], [0.9086, 0.8323, 0.554]], [[0.5866, 0.5966, 0.6075], [0.0435, 0.9182, 0.7079]], [[0.2991, 0.133, 0.3145], [0.3019, 0.085, 0.7761]]]]], Sub97820), 
LRes40387 = reshape_layer(Sub97820, [2, 3, 6], Res40387), 
LRes45014 = reshape_layer(Res40387, [2, 18], Res45014), 
LSep57254 = separable_conv1D_layer([[[0.256], [0.8103]]], 2,[[[[0.6847]], [[0.332]]],[[[0.9269, 0.8226, 0.0065, 0.6089]]]],[0, 0, 0, 0], 1, true, Sep57254), 
LCon19487 = concatenate_layer([Sep57254,[[[0.9481, 0.7934, 0.3133, 0.8672, 0.9367, 0.7872, 0.1061, 0.4224, 0.799, 0.9756, 0.1212, 0.989, 0.7522, 0.0065], [0.9106, 0.2135, 0.781, 0.6555, 0.8387, 0.139, 0.3004, 0.9848, 0.292, 0.975, 0.8782, 0.1061, 0.0302, 0.845]]]], 2, Con19487), 
LMin20663 = minimum_layer([Res45014,Con19487], Min20663), 
LRes17876 = reshape_layer(Min20663, [2, 18, 1], Res17876), 
LMax97020 = max_pool2D_layer(Res17876, 2, 5, Max97020), 
LBat93437 = batch_normalization_layer(Max97020, 1, 0.7558306687687367, [0.8536], [0.6553], [0.6597], [0.6082], Bat93437), 
exec_layers([LSub97820,LRes40387,LRes45014,LSep57254,LCon19487,LMin20663,LRes17876,LMax97020,LBat93437],["Sub97820","Res40387","Res45014","Sep57254","Con19487","Min20663","Res17876","Max97020","Bat93437"],Bat93437,"Bat93437")

Actual (Unparsed): [[[[0.2821890], [0.3742059], [0.5002817]]]]

Expected (Unparsed): [[[[0.2821889722764775],[0.3742059720617693],[0.5002816866206481]]]]

Actual:   [[[[0.2822], [0.3743], [0.5003]]]]

Expected: [[[[0.2822], [0.3743], [0.5003]]]]