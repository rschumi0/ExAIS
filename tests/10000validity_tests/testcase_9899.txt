import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Add78650 = tf.keras.layers.Input(shape=([1, 1, 2, 2]))
in1Add78650 = tf.keras.layers.Input(shape=([1, 1, 2, 2]))

Add78650 = keras.layers.Add(name = 'Add78650', )([in0Add78650,in1Add78650])
Res16799 = keras.layers.Reshape((1, 1, 4), name = 'Res16799', )(Add78650)
Res35915 = keras.layers.Reshape((1, 4), name = 'Res35915', )(Res16799)
Loc97799 = keras.layers.LocallyConnected1D(2, (1),strides=(1), name = 'Loc97799', )(Res35915)
Mas31995 = keras.layers.Masking(mask_value=2, name = 'Mas31995', )(Loc97799)
model = tf.keras.models.Model(inputs=[in0Add78650,in1Add78650], outputs=Mas31995)
w = model.get_layer('Loc97799').get_weights() 
w[0] = np.array([[[0.9229, 0.3446], [0.7721, 0.9437], [0.4741, 0.6332], [0.0079, 0.3084]]])
w[1] = np.array([[0, 0]])
model.get_layer('Loc97799').set_weights(w) 
in0Add78650 = tf.constant([[[[[0.8978, 0.7607], [0.9696, 0.2827]]]]])
in1Add78650 = tf.constant([[[[[0.823, 0.1658], [0.8206, 0.8655]]]]])
print (np.array2string(model.predict([in0Add78650,in1Add78650],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Mas31995.png')

LAdd78650 = add_layer([[[[[[0.8978, 0.7607], [0.9696, 0.2827]]]]], [[[[[0.823, 0.1658], [0.8206, 0.8655]]]]]], Add78650), 
LRes16799 = reshape_layer(Add78650, [1, 1, 4], Res16799), 
LRes35915 = reshape_layer(Res16799, [1, 4], Res35915), 
LLoc97799 = locally_connected1D_layer(Res35915, 1,[[[0.9229, 0.3446], [0.7721, 0.9437], [0.4741, 0.6332], [0.0079, 0.3084]]],[[0, 0]], 1, Loc97799), 
LMas31995 = masking_layer(Loc97799, 2, Mas31995), 
exec_layers([LAdd78650,LRes16799,LRes35915,LLoc97799,LMas31995],["Add78650","Res16799","Res35915","Loc97799","Mas31995"],Mas31995,"Mas31995")

Actual (Unparsed): [[[3.1612816, 2.9549852]]]

Expected (Unparsed): [[[3.1612815700000003,2.9549852500000005]]]

Actual:   [[[3.1613, 2.955]]]

Expected: [[[3.1613, 2.955]]]