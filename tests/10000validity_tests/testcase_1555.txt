import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Ave71672 = tf.keras.layers.Input(shape=([2, 1]))
in1Ave71672 = tf.keras.layers.Input(shape=([2, 1]))

Ave71672 = keras.layers.Average(name = 'Ave71672', )([in0Ave71672,in1Ave71672])
Zer60803 = keras.layers.ZeroPadding1D(padding=((6, 0)), name = 'Zer60803', )(Ave71672)
GRU47399 = keras.layers.GRU(3,reset_after=True, recurrent_activation='sigmoid', name = 'GRU47399', )(Zer60803)
model = tf.keras.models.Model(inputs=[in0Ave71672,in1Ave71672], outputs=GRU47399)
w = model.get_layer('GRU47399').get_weights() 
w[0] = np.array([[10, 3, 10, 6, 5, 4, 5, 3, 7]])
w[1] = np.array([[6, 5, 5, 1, 9, 10, 5, 9, 8], [1, 4, 2, 6, 8, 3, 7, 7, 7], [9, 9, 5, 10, 8, 4, 2, 8, 5]])
w[2] = np.array([[5, 1, 7, 8, 4, 4, 1, 1, 5], [9, 8, 3, 4, 6, 1, 4, 5, 9]])
model.get_layer('GRU47399').set_weights(w) 
in0Ave71672 = tf.constant([[[0.1253], [0.68]]])
in1Ave71672 = tf.constant([[[0.3516], [0.6508]]])
print (np.array2string(model.predict([in0Ave71672,in1Ave71672],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='GRU47399.png')

LAve71672 = average_layer([[[[0.1253], [0.68]]], [[[0.3516], [0.6508]]]], Ave71672), 
LZer60803 = zero_padding1D_layer(Ave71672, 6, 0, Zer60803), 
LGRU47399 = gru_layer(Zer60803,[[10, 3, 10, 6, 5, 4, 5, 3, 7]],[[6, 5, 5, 1, 9, 10, 5, 9, 8], [1, 4, 2, 6, 8, 3, 7, 7, 7], [9, 9, 5, 10, 8, 4, 2, 8, 5]],[[5, 1, 7, 8, 4, 4, 1, 1, 5], [9, 8, 3, 4, 6, 1, 4, 5, 9]], true, GRU47399), 
exec_layers([LAve71672,LZer60803,LGRU47399],["Ave71672","Zer60803","GRU47399"],GRU47399,"GRU47399")

Actual (Unparsed): [[0.0000051, 0.0008151, 0.0002763]]

Expected (Unparsed): [[5.0594564237269275e-6,0.0008150899422179941,0.0002762596955623977]]

Actual:   [[0, 0.0009, 0.0003]]

Expected: [[0, 0.0009, 0.0003]]