import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Mul1896 = tf.keras.layers.Input(shape=([1, 1]))
in1Mul1896 = tf.keras.layers.Input(shape=([1, 1]))
in0Con63583 = tf.keras.layers.Input(shape=([7]))
in0Max28004 = tf.keras.layers.Input(shape=([2, 2, 2]))
in1Max28004 = tf.keras.layers.Input(shape=([2, 2, 2]))
in0Glo94364 = tf.keras.layers.Input(shape=([2, 2, 2]))
in0Con46813 = tf.keras.layers.Input(shape=([5]))

Mul1896 = keras.layers.Multiply(name = 'Mul1896', )([in0Mul1896,in1Mul1896])
Fla86692 = keras.layers.Flatten(name = 'Fla86692', )(Mul1896)
Con63583 = keras.layers.Concatenate(axis=1, name = 'Con63583', )([Fla86692,in0Con63583])
Max28004 = keras.layers.Maximum(name = 'Max28004', )([in0Max28004,in1Max28004])
Res91404 = keras.layers.Reshape((2, 4), name = 'Res91404', )(Max28004)
Fla91261 = keras.layers.Flatten(name = 'Fla91261', )(Res91404)
Glo94364 = keras.layers.GlobalAveragePooling2D(name = 'Glo94364', )(in0Glo94364)
Res98338 = keras.layers.Reshape((2, 1), name = 'Res98338', )(Glo94364)
LST61376 = keras.layers.LSTM(3,recurrent_activation='sigmoid', name = 'LST61376', )(Res98338)
Con46813 = keras.layers.Concatenate(axis=1, name = 'Con46813', )([LST61376,in0Con46813])
Sub46027 = keras.layers.Subtract(name = 'Sub46027', )([Fla91261,Con46813])
Min85811 = keras.layers.Minimum(name = 'Min85811', )([Con63583,Sub46027])
Res53367 = keras.layers.Reshape((8, 1), name = 'Res53367', )(Min85811)
Res3038 = keras.layers.Reshape((8, 1, 1), name = 'Res3038', )(Res53367)
Max22314 = keras.layers.MaxPool2D(pool_size=(2, 1), name = 'Max22314', )(Res3038)
model = tf.keras.models.Model(inputs=[in0Mul1896,in1Mul1896,in0Con63583,in0Max28004,in1Max28004,in0Glo94364,in0Con46813], outputs=Max22314)
w = model.get_layer('LST61376').get_weights() 
w[0] = np.array([[10, 8, 4, 8, 4, 8, 10, 2, 4, 8, 4, 5]])
w[1] = np.array([[6, 7, 6, 8, 9, 3, 6, 1, 8, 4, 7, 1], [1, 7, 7, 7, 5, 8, 6, 1, 8, 1, 2, 8], [10, 1, 3, 9, 8, 2, 2, 10, 9, 3, 5, 5]])
w[2] = np.array([9, 5, 10, 9, 5, 10, 4, 1, 8, 7, 6, 1])
model.get_layer('LST61376').set_weights(w) 
in0Mul1896 = tf.constant([[[0.6116]]])
in1Mul1896 = tf.constant([[[0.913]]])
in0Con63583 = tf.constant([[0.0344, 0.9646, 0.8976, 0.9456, 0.4035, 0.6377, 0.4055]])
in0Max28004 = tf.constant([[[[0.9222, 0.2953], [0.5344, 0.0493]], [[0.2327, 0.755], [0.7381, 0.2035]]]])
in1Max28004 = tf.constant([[[[0.9549, 0.2804], [0.3716, 0.6465]], [[0.58, 0.3321], [0.6618, 0.564]]]])
in0Glo94364 = tf.constant([[[[1.2793, 1.9838], [1.8079, 1.7936]], [[1.5199, 1.4656], [1.3316, 1.1487]]]])
in0Con46813 = tf.constant([[0.3129, 0.0396, 0.5265, 0.0266, 0.7016]])
print (np.array2string(model.predict([in0Mul1896,in1Mul1896,in0Con63583,in0Max28004,in1Max28004,in0Glo94364,in0Con46813],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Max22314.png')

LMul1896 = multiply_layer([[[[0.6116]]], [[[0.913]]]], Mul1896), 
LFla86692 = flatten_layer(Mul1896, Fla86692), 
LCon63583 = concatenate_layer([Fla86692,[[0.0344, 0.9646, 0.8976, 0.9456, 0.4035, 0.6377, 0.4055]]], 1, Con63583), 
LMax28004 = maximum_layer([[[[[0.9222, 0.2953], [0.5344, 0.0493]], [[0.2327, 0.755], [0.7381, 0.2035]]]], [[[[0.9549, 0.2804], [0.3716, 0.6465]], [[0.58, 0.3321], [0.6618, 0.564]]]]], Max28004), 
LRes91404 = reshape_layer(Max28004, [2, 4], Res91404), 
LFla91261 = flatten_layer(Res91404, Fla91261), 
LGlo94364 = global_average_pooling2D_layer([[[[1.2793, 1.9838], [1.8079, 1.7936]], [[1.5199, 1.4656], [1.3316, 1.1487]]]], Glo94364), 
LRes98338 = reshape_layer(Glo94364, [2, 1], Res98338), 
LLST61376 = lstm_layer(Res98338,[[10, 8, 4, 8, 4, 8, 10, 2, 4, 8, 4, 5]],[[6, 7, 6, 8, 9, 3, 6, 1, 8, 4, 7, 1], [1, 7, 7, 7, 5, 8, 6, 1, 8, 1, 2, 8], [10, 1, 3, 9, 8, 2, 2, 10, 9, 3, 5, 5]],[9, 5, 10, 9, 5, 10, 4, 1, 8, 7, 6, 1], LST61376), 
LCon46813 = concatenate_layer([LST61376,[[0.3129, 0.0396, 0.5265, 0.0266, 0.7016]]], 1, Con46813), 
LSub46027 = subtract_layer(Fla91261,Con46813, Sub46027), 
LMin85811 = minimum_layer([Con63583,Sub46027], Min85811), 
LRes53367 = reshape_layer(Min85811, [8, 1], Res53367), 
LRes3038 = reshape_layer(Res53367, [8, 1, 1], Res3038), 
LMax22314 = max_pool2D_layer(Res3038, 2, 1, Max22314), 
exec_layers([LMul1896,LFla86692,LCon63583,LMax28004,LRes91404,LFla91261,LGlo94364,LRes98338,LLST61376,LCon46813,LSub46027,LMin85811,LRes53367,LRes3038,LMax22314],["Mul1896","Fla86692","Con63583","Max28004","Res91404","Fla91261","Glo94364","Res98338","LST61376","Con46813","Sub46027","Min85811","Res53367","Res3038","Max22314"],Max22314,"Max22314")

Actual (Unparsed): [[[[-0.0091276]], [[0.3336000]], [[0.5404000]], [[0.6377000]]]]

Expected (Unparsed): [[[[-0.009127580067128771]],[[0.33359999999999995]],[[0.5404]],[[0.6377]]]]

Actual:   [[[[-0.0091]], [[0.3336]], [[0.5404]], [[0.6377]]]]

Expected: [[[[-0.0091]], [[0.3336]], [[0.5404]], [[0.6377]]]]