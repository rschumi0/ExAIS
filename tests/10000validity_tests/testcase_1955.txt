import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Loc67528 = tf.keras.layers.Input(shape=([2, 1]))

Loc67528 = keras.layers.LocallyConnected1D(4, (2),strides=(8), name = 'Loc67528', )(in0Loc67528)
Up_75006 = keras.layers.UpSampling1D(size=(2), name = 'Up_75006', )(Loc67528)
model = tf.keras.models.Model(inputs=[in0Loc67528], outputs=Up_75006)
w = model.get_layer('Loc67528').get_weights() 
w[0] = np.array([[[0.9444, 0.2398, 0.416, 0.7019], [0.1752, 0.1745, 0.9382, 0.7607]]])
w[1] = np.array([[0, 0, 0, 0]])
model.get_layer('Loc67528').set_weights(w) 
in0Loc67528 = tf.constant([[[0.5151], [0.2573]]])
print (np.array2string(model.predict([in0Loc67528],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Up_75006.png')

LLoc67528 = locally_connected1D_layer([[[0.5151], [0.2573]]], 2,[[[0.9444, 0.2398, 0.416, 0.7019], [0.1752, 0.1745, 0.9382, 0.7607]]],[[0, 0, 0, 0]], 8, Loc67528), 
LUp_75006 = up_sampling1D_layer(Loc67528, 2, Up_75006), 
exec_layers([LLoc67528,LUp_75006],["Loc67528","Up_75006"],Up_75006,"Up_75006")

Actual (Unparsed): [[[0.5315394, 0.1684198, 0.4556805, 0.5572768], [0.5315394, 0.1684198, 0.4556805, 0.5572768]]]

Expected (Unparsed): [[[0.5315394,0.16841983,0.45568045999999995,0.5572768],[0.5315394,0.16841983,0.45568045999999995,0.5572768]]]

Actual:   [[[0.5316, 0.1685, 0.4557, 0.5573], [0.5316, 0.1685, 0.4557, 0.5573]]]

Expected: [[[0.5316, 0.1685, 0.4557, 0.5573], [0.5316, 0.1685, 0.4557, 0.5573]]]