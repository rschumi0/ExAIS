import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Ave19971 = tf.keras.layers.Input(shape=([1, 1]))
in1Ave19971 = tf.keras.layers.Input(shape=([1, 1]))

Ave19971 = keras.layers.Average(name = 'Ave19971', )([in0Ave19971,in1Ave19971])
Thr64629 = keras.layers.ThresholdedReLU(theta=2.51391039623229, name = 'Thr64629', )(Ave19971)
Con48673 = keras.layers.Conv1D(3, (1),strides=(1), padding='valid', dilation_rate=(1), name = 'Con48673', )(Thr64629)
model = tf.keras.models.Model(inputs=[in0Ave19971,in1Ave19971], outputs=Con48673)
w = model.get_layer('Con48673').get_weights() 
w[0] = np.array([[[0.4998, 0.7723, 0.2088]]])
w[1] = np.array([0, 0, 0])
model.get_layer('Con48673').set_weights(w) 
in0Ave19971 = tf.constant([[[0.7577]]])
in1Ave19971 = tf.constant([[[0.2899]]])
print (np.array2string(model.predict([in0Ave19971,in1Ave19971],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Con48673.png')

LAve19971 = average_layer([[[[0.7577]]], [[[0.2899]]]], Ave19971), 
LThr64629 = thresholded_relu_layer(Ave19971, 2.51391039623229, Thr64629), 
LCon48673 = conv1D_layer(Thr64629, 1,[[[0.4998, 0.7723, 0.2088]]],[0, 0, 0], 1, false, 1, Con48673), 
exec_layers([LAve19971,LThr64629,LCon48673],["Ave19971","Thr64629","Con48673"],Con48673,"Con48673")

Actual (Unparsed): [[[0.0000000, 0.0000000, 0.0000000]]]

Expected (Unparsed): [[[0.0,0.0,0.0]]]

Actual:   [[[0, 0, 0]]]

Expected: [[[0, 0, 0]]]