import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Lay74047 = tf.keras.layers.Input(shape=([2]))
in0Con733 = tf.keras.layers.Input(shape=([2, 1]))
in0Ave79893 = tf.keras.layers.Input(shape=([2, 2]))
in1Ave79893 = tf.keras.layers.Input(shape=([2, 2]))

Lay74047 = keras.layers.LayerNormalization(axis=1, epsilon=1.4890221284916372, name = 'Lay74047', )(in0Lay74047)
Res96124 = keras.layers.Reshape((2, 1), name = 'Res96124', )(Lay74047)
Con733 = keras.layers.Concatenate(axis=2, name = 'Con733', )([Res96124,in0Con733])
Ave79893 = keras.layers.Average(name = 'Ave79893', )([in0Ave79893,in1Ave79893])
Mul96281 = keras.layers.Multiply(name = 'Mul96281', )([Con733,Ave79893])
model = tf.keras.models.Model(inputs=[in0Lay74047,in0Con733,in0Ave79893,in1Ave79893], outputs=Mul96281)
in0Lay74047 = tf.constant([[1.8737, 1.0137]])
in0Con733 = tf.constant([[[0.9361], [0.7387]]])
in0Ave79893 = tf.constant([[[0.1683, 0.4035], [0.5324, 0.5702]]])
in1Ave79893 = tf.constant([[[0.987, 0.6456], [0.6006, 0.4253]]])
print (np.array2string(model.predict([in0Lay74047,in0Con733,in0Ave79893,in1Ave79893],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Mul96281.png')

LLay74047 = layer_normalization_layer([[1.8737, 1.0137]], 1, 1.4890221284916372, Lay74047), 
LRes96124 = reshape_layer(Lay74047, [2, 1], Res96124), 
LCon733 = concatenate_layer([Res96124,[[[0.9361], [0.7387]]]], 2, Con733), 
LAve79893 = average_layer([[[[0.1683, 0.4035], [0.5324, 0.5702]]], [[[0.987, 0.6456], [0.6006, 0.4253]]]], Ave79893), 
LMul96281 = multiply_layer([Con733,Ave79893], Mul96281), 
exec_layers([LLay74047,LRes96124,LCon733,LAve79893,LMul96281],["Lay74047","Res96124","Con733","Ave79893","Mul96281"],Mul96281,"Mul96281")

Actual (Unparsed): [[[0.1919843, 0.4910313], [-0.1882785, 0.3676879]]]

Expected (Unparsed): [[[0.19198425284928428,0.491031255],[-0.18827850642970578,0.367687925]]]

Actual:   [[[0.192, 0.4911], [-0.1882, 0.3677]]]

Expected: [[[0.192, 0.4911], [-0.1882, 0.3677]]]