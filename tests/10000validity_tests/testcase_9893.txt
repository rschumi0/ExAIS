import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Add75072 = tf.keras.layers.Input(shape=([1, 1]))
in1Add75072 = tf.keras.layers.Input(shape=([1, 1]))
in0Con53337 = tf.keras.layers.Input(shape=([2, 3, 2, 2]))
in0Sub34352 = tf.keras.layers.Input(shape=([2, 3, 2, 3]))
in1Sub34352 = tf.keras.layers.Input(shape=([2, 3, 2, 3]))
in0Max36211 = tf.keras.layers.Input(shape=([2, 2, 2, 2]))
in1Max36211 = tf.keras.layers.Input(shape=([2, 2, 2, 2]))
in0Con8100 = tf.keras.layers.Input(shape=([2, 3, 2, 1]))
in0Ave18422 = tf.keras.layers.Input(shape=([2, 2, 2, 2]))
in1Ave18422 = tf.keras.layers.Input(shape=([2, 2, 2, 2]))
in0Con77704 = tf.keras.layers.Input(shape=([2, 3, 2, 1]))

Add75072 = keras.layers.Add(name = 'Add75072', )([in0Add75072,in1Add75072])
Res40468 = keras.layers.Reshape((1, 1, 1), name = 'Res40468', )(Add75072)
Max28626 = keras.layers.MaxPool2D(pool_size=(1, 1), strides=(1, 1), padding='valid', name = 'Max28626', )(Res40468)
Res18295 = keras.layers.Reshape((1, 1, 1, 1), name = 'Res18295', )(Max28626)
Zer53592 = keras.layers.ZeroPadding3D(padding=((1, 0), (2, 0), (1, 0)), name = 'Zer53592', )(Res18295)
Con53337 = keras.layers.Concatenate(axis=4, name = 'Con53337', )([Zer53592,in0Con53337])
Sub34352 = keras.layers.Subtract(name = 'Sub34352', )([in0Sub34352,in1Sub34352])
Max36211 = keras.layers.Maximum(name = 'Max36211', )([in0Max36211,in1Max36211])
Zer25400 = keras.layers.ZeroPadding3D(padding=((0, 0), (1, 0), (0, 0)), name = 'Zer25400', )(Max36211)
Con8100 = keras.layers.Concatenate(axis=4, name = 'Con8100', )([Zer25400,in0Con8100])
Max88039 = keras.layers.Maximum(name = 'Max88039', )([Sub34352,Con8100])
Ave18422 = keras.layers.Average(name = 'Ave18422', )([in0Ave18422,in1Ave18422])
Zer62528 = keras.layers.ZeroPadding3D(padding=((0, 0), (1, 0), (0, 0)), name = 'Zer62528', )(Ave18422)
Con77704 = keras.layers.Concatenate(axis=4, name = 'Con77704', )([Zer62528,in0Con77704])
Add48777 = keras.layers.Add(name = 'Add48777', )([Max88039,Con77704])
Sub78781 = keras.layers.Subtract(name = 'Sub78781', )([Con53337,Add48777])
Zer21341 = keras.layers.ZeroPadding3D(padding=((1, 1), (1, 1), (1, 1)), name = 'Zer21341', )(Sub78781)
model = tf.keras.models.Model(inputs=[in0Add75072,in1Add75072,in0Con53337,in0Sub34352,in1Sub34352,in0Max36211,in1Max36211,in0Con8100,in0Ave18422,in1Ave18422,in0Con77704], outputs=Zer21341)
in0Add75072 = tf.constant([[[0.6063]]])
in1Add75072 = tf.constant([[[0.7586]]])
in0Con53337 = tf.constant([[[[[0.3611, 0.5998], [0.0854, 0.6915]], [[0.801, 0.6435], [0.9925, 0.8225]], [[0.9562, 0.6298], [0.312, 0.2099]]], [[[0.6629, 0.278], [0.9457, 0.4464]], [[0.0609, 0.1957], [0.0976, 0.3937]], [[0.48, 0.3648], [0.5773, 0.7662]]]]])
in0Sub34352 = tf.constant([[[[[0.6896, 0.6712, 0.8135], [0.4804, 0.4942, 0.2223]], [[0.6824, 0.0089, 0.4945], [0.548, 0.1158, 0.205]], [[0.7799, 0.5091, 0.3439], [0.8408, 0.8185, 0.4137]]], [[[0.153, 0.0759, 0.2653], [0.7709, 0.3976, 0.2168]], [[0.2936, 0.8925, 0.873], [0.2963, 0.2279, 0.6009]], [[0.0982, 0.831, 0.9935], [0.012, 0.8098, 0.9702]]]]])
in1Sub34352 = tf.constant([[[[[0.9123, 0.6037, 0.9984], [0.1298, 0.6758, 0.5581]], [[0.1333, 0.1225, 0.9014], [0.668, 0.8164, 0.7397]], [[0.5413, 0.9376, 0.4822], [0.7211, 0.5542, 0.374]]], [[[0.9163, 0.0529, 0.6711], [0.3661, 0.3057, 0.5791]], [[0.7948, 0.4782, 0.2524], [0.9786, 0.5519, 0.447]], [[0.6832, 0.2668, 0.7891], [0.6654, 0.8711, 0.1102]]]]])
in0Max36211 = tf.constant([[[[[0.3492, 0.4579], [0.8465, 0.4113]], [[0.2921, 0.0115], [0.3216, 0.8146]]], [[[0.8388, 0.911], [0.8777, 0.0137]], [[0.7034, 0.8457], [0.5712, 0.9972]]]]])
in1Max36211 = tf.constant([[[[[0.1569, 0.2043], [0.3038, 0.6623]], [[0.1145, 0.9564], [0.2722, 0.5454]]], [[[0.7787, 0.4289], [0.5614, 0.7709]], [[0.8836, 0.3303], [0.4809, 0.706]]]]])
in0Con8100 = tf.constant([[[[[0.1392], [0.6657]], [[0.8549], [0.7209]], [[0.2288], [0.8785]]], [[[0.1552], [0.8049]], [[0.2194], [0.6632]], [[0.4876], [0.654]]]]])
in0Ave18422 = tf.constant([[[[[0.3854, 0.6502], [0.5549, 0.2203]], [[0.5227, 0.8662], [0.1725, 0.899]]], [[[0.5304, 0.2281], [0.7797, 0.0334]], [[0.9329, 0.7564], [0.1532, 0.723]]]]])
in1Ave18422 = tf.constant([[[[[0.2649, 0.9937], [0.7336, 0.9618]], [[0.2724, 0.475], [0.2149, 0.155]]], [[[0.1318, 0.3482], [0.5895, 0.1123]], [[0.9919, 0.5666], [0.63, 0.1994]]]]])
in0Con77704 = tf.constant([[[[[0.9818], [0.0173]], [[0.8833], [0.7414]], [[0.4645], [0.6121]]], [[[0.1831], [0.1098]], [[0.2112], [0.3181]], [[0.9876], [0.0507]]]]])
print (np.array2string(model.predict([in0Add75072,in1Add75072,in0Con53337,in0Sub34352,in1Sub34352,in0Max36211,in1Max36211,in0Con8100,in0Ave18422,in1Ave18422,in0Con77704],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Zer21341.png')

LAdd75072 = add_layer([[[[0.6063]]], [[[0.7586]]]], Add75072), 
LRes40468 = reshape_layer(Add75072, [1, 1, 1], Res40468), 
LMax28626 = max_pool2D_layer(Res40468, 1, 1, 1, 1, false, Max28626), 
LRes18295 = reshape_layer(Max28626, [1, 1, 1, 1], Res18295), 
LZer53592 = zero_padding3D_layer(Res18295, 1, 0, 2, 0, 1, 0, Zer53592), 
LCon53337 = concatenate_layer([Zer53592,[[[[[0.3611, 0.5998], [0.0854, 0.6915]], [[0.801, 0.6435], [0.9925, 0.8225]], [[0.9562, 0.6298], [0.312, 0.2099]]], [[[0.6629, 0.278], [0.9457, 0.4464]], [[0.0609, 0.1957], [0.0976, 0.3937]], [[0.48, 0.3648], [0.5773, 0.7662]]]]]], 4, Con53337), 
LSub34352 = subtract_layer([[[[[0.6896, 0.6712, 0.8135], [0.4804, 0.4942, 0.2223]], [[0.6824, 0.0089, 0.4945], [0.548, 0.1158, 0.205]], [[0.7799, 0.5091, 0.3439], [0.8408, 0.8185, 0.4137]]], [[[0.153, 0.0759, 0.2653], [0.7709, 0.3976, 0.2168]], [[0.2936, 0.8925, 0.873], [0.2963, 0.2279, 0.6009]], [[0.0982, 0.831, 0.9935], [0.012, 0.8098, 0.9702]]]]], [[[[[0.9123, 0.6037, 0.9984], [0.1298, 0.6758, 0.5581]], [[0.1333, 0.1225, 0.9014], [0.668, 0.8164, 0.7397]], [[0.5413, 0.9376, 0.4822], [0.7211, 0.5542, 0.374]]], [[[0.9163, 0.0529, 0.6711], [0.3661, 0.3057, 0.5791]], [[0.7948, 0.4782, 0.2524], [0.9786, 0.5519, 0.447]], [[0.6832, 0.2668, 0.7891], [0.6654, 0.8711, 0.1102]]]]], Sub34352), 
LMax36211 = maximum_layer([[[[[[0.3492, 0.4579], [0.8465, 0.4113]], [[0.2921, 0.0115], [0.3216, 0.8146]]], [[[0.8388, 0.911], [0.8777, 0.0137]], [[0.7034, 0.8457], [0.5712, 0.9972]]]]], [[[[[0.1569, 0.2043], [0.3038, 0.6623]], [[0.1145, 0.9564], [0.2722, 0.5454]]], [[[0.7787, 0.4289], [0.5614, 0.7709]], [[0.8836, 0.3303], [0.4809, 0.706]]]]]], Max36211), 
LZer25400 = zero_padding3D_layer(Max36211, 0, 0, 1, 0, 0, 0, Zer25400), 
LCon8100 = concatenate_layer([Zer25400,[[[[[0.1392], [0.6657]], [[0.8549], [0.7209]], [[0.2288], [0.8785]]], [[[0.1552], [0.8049]], [[0.2194], [0.6632]], [[0.4876], [0.654]]]]]], 4, Con8100), 
LMax88039 = maximum_layer([Sub34352,Con8100], Max88039), 
LAve18422 = average_layer([[[[[[0.3854, 0.6502], [0.5549, 0.2203]], [[0.5227, 0.8662], [0.1725, 0.899]]], [[[0.5304, 0.2281], [0.7797, 0.0334]], [[0.9329, 0.7564], [0.1532, 0.723]]]]], [[[[[0.2649, 0.9937], [0.7336, 0.9618]], [[0.2724, 0.475], [0.2149, 0.155]]], [[[0.1318, 0.3482], [0.5895, 0.1123]], [[0.9919, 0.5666], [0.63, 0.1994]]]]]], Ave18422), 
LZer62528 = zero_padding3D_layer(Ave18422, 0, 0, 1, 0, 0, 0, Zer62528), 
LCon77704 = concatenate_layer([Zer62528,[[[[[0.9818], [0.0173]], [[0.8833], [0.7414]], [[0.4645], [0.6121]]], [[[0.1831], [0.1098]], [[0.2112], [0.3181]], [[0.9876], [0.0507]]]]]], 4, Con77704), 
LAdd48777 = add_layer([Max88039,Con77704], Add48777), 
LSub78781 = subtract_layer(Con53337,Add48777, Sub78781), 
LZer21341 = zero_padding3D_layer(Sub78781, 1, 1, 1, 1, 1, 1, Zer21341), 
exec_layers([LAdd75072,LRes40468,LMax28626,LRes18295,LZer53592,LCon53337,LSub34352,LMax36211,LZer25400,LCon8100,LMax88039,LAve18422,LZer62528,LCon77704,LAdd48777,LSub78781,LZer21341],["Add75072","Res40468","Max28626","Res18295","Zer53592","Con53337","Sub34352","Max36211","Zer25400","Con8100","Max88039","Ave18422","Zer62528","Con77704","Add48777","Sub78781","Zer21341"],Zer21341,"Zer21341")

Actual (Unparsed): [[[[[0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000]], [[0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000]], [[0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000]], [[0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000]], [[0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000]]], [[[0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000]], [[0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.2936000, -0.5212000], [-0.3506000, 0.0854000, 0.0085000], [0.0000000, 0.0000000, 0.0000000]], [[0.0000000, 0.0000000, 0.0000000], [-0.8742500, -0.4788500, -1.0947000], [-1.4907500, -0.2608500, -0.6398000], [0.0000000, 0.0000000, 0.0000000]], [[0.0000000, 0.0000000, 0.0000000], [-0.6896500, -0.6708000, -0.0635000], [-0.5153000, -1.0296000, -1.2807000], [0.0000000, 0.0000000, 0.0000000]], [[0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000]]], [[[0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000]], [[0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.6399000, -0.0603000], [-0.4048000, 0.8538000, -0.4683000], [0.0000000, 0.0000000, 0.0000000]], [[0.0000000, 0.0000000, 0.0000000], [-1.1699000, -1.1382500, -0.6361000], [-1.5623000, -0.7461500, -0.5876000], [0.0000000, 0.0000000, 0.0000000]], [[0.0000000, 0.0000000, 0.0000000], [-1.8460000, -1.0272000, -1.1104000], [0.4021000, -0.8811000, -0.1445000], [0.0000000, 0.0000000, 0.0000000]], [[0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000]]], [[[0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000]], [[0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000]], [[0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000]], [[0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000]], [[0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000]]]]]

Expected (Unparsed): [[[[[0,0,0],[0,0,0],[0,0,0],[0,0,0]],[[0,0,0],[0,0,0],[0,0,0],[0,0,0]],[[0,0,0],[0,0,0],[0,0,0],[0,0,0]],[[0,0,0],[0,0,0],[0,0,0],[0,0,0]],[[0,0,0],[0,0,0],[0,0,0],[0,0,0]]],[[[0,0,0],[0,0,0],[0,0,0],[0,0,0]],[[0,0,0],[0,0.29359999999999997,-0.5212],[-0.3506,0.0854,0.008500000000000063],[0,0,0]],[[0,0,0],[-0.8742500000000001,-0.4788499999999999,-1.0947],[-1.49075,-0.2608499999999999,-0.6397999999999999],[0,0,0]],[[0,0,0],[-0.6896500000000001,-0.6708,-0.0635],[-0.5153,-1.0296,-1.2807],[0,0,0]],[[0,0,0],[0,0,0],[0,0,0],[0,0,0]]],[[[0,0,0],[0,0,0],[0,0,0],[0,0,0]],[[0,0,0],[0,0.6399,-0.06030000000000002],[-0.40480000000000005,0.8538,-0.46829999999999994],[0,0,0]],[[0,0,0],[-1.1699,-1.13825,-0.6361000000000001],[-1.5623,-0.74615,-0.5876000000000001],[0,0,0]],[[0,0,0],[-1.846,-1.0272000000000001,-1.1104],[0.4020999999999999,-0.8810999999999999,-0.14449999999999996],[0,0,0]],[[0,0,0],[0,0,0],[0,0,0],[0,0,0]]],[[[0,0,0],[0,0,0],[0,0,0],[0,0,0]],[[0,0,0],[0,0,0],[0,0,0],[0,0,0]],[[0,0,0],[0,0,0],[0,0,0],[0,0,0]],[[0,0,0],[0,0,0],[0,0,0],[0,0,0]],[[0,0,0],[0,0,0],[0,0,0],[0,0,0]]]]]

Actual:   [[[[[0, 0, 0], [0, 0, 0], [0, 0, 0], [0, 0, 0]], [[0, 0, 0], [0, 0, 0], [0, 0, 0], [0, 0, 0]], [[0, 0, 0], [0, 0, 0], [0, 0, 0], [0, 0, 0]], [[0, 0, 0], [0, 0, 0], [0, 0, 0], [0, 0, 0]], [[0, 0, 0], [0, 0, 0], [0, 0, 0], [0, 0, 0]]], [[[0, 0, 0], [0, 0, 0], [0, 0, 0], [0, 0, 0]], [[0, 0, 0], [0, 0.2936, -0.5212], [-0.3506, 0.0854, 0.0085], [0, 0, 0]], [[0, 0, 0], [-0.8742, -0.4788, -1.0947], [-1.4907, -0.2608, -0.6398], [0, 0, 0]], [[0, 0, 0], [-0.6896, -0.6708, -0.0635], [-0.5153, -1.0296, -1.2807], [0, 0, 0]], [[0, 0, 0], [0, 0, 0], [0, 0, 0], [0, 0, 0]]], [[[0, 0, 0], [0, 0, 0], [0, 0, 0], [0, 0, 0]], [[0, 0, 0], [0, 0.6399, -0.0603], [-0.4048, 0.8538, -0.4683], [0, 0, 0]], [[0, 0, 0], [-1.1699, -1.1382, -0.6361], [-1.5623, -0.7461, -0.5876], [0, 0, 0]], [[0, 0, 0], [-1.846, -1.0272, -1.1104], [0.4021, -0.8811, -0.1445], [0, 0, 0]], [[0, 0, 0], [0, 0, 0], [0, 0, 0], [0, 0, 0]]], [[[0, 0, 0], [0, 0, 0], [0, 0, 0], [0, 0, 0]], [[0, 0, 0], [0, 0, 0], [0, 0, 0], [0, 0, 0]], [[0, 0, 0], [0, 0, 0], [0, 0, 0], [0, 0, 0]], [[0, 0, 0], [0, 0, 0], [0, 0, 0], [0, 0, 0]], [[0, 0, 0], [0, 0, 0], [0, 0, 0], [0, 0, 0]]]]]

Expected: [[[[[0, 0, 0], [0, 0, 0], [0, 0, 0], [0, 0, 0]], [[0, 0, 0], [0, 0, 0], [0, 0, 0], [0, 0, 0]], [[0, 0, 0], [0, 0, 0], [0, 0, 0], [0, 0, 0]], [[0, 0, 0], [0, 0, 0], [0, 0, 0], [0, 0, 0]], [[0, 0, 0], [0, 0, 0], [0, 0, 0], [0, 0, 0]]], [[[0, 0, 0], [0, 0, 0], [0, 0, 0], [0, 0, 0]], [[0, 0, 0], [0, 0.2936, -0.5212], [-0.3506, 0.0854, 0.0086], [0, 0, 0]], [[0, 0, 0], [-0.8742, -0.4788, -1.0947], [-1.4907, -0.2608, -0.6397], [0, 0, 0]], [[0, 0, 0], [-0.6896, -0.6708, -0.0635], [-0.5153, -1.0296, -1.2807], [0, 0, 0]], [[0, 0, 0], [0, 0, 0], [0, 0, 0], [0, 0, 0]]], [[[0, 0, 0], [0, 0, 0], [0, 0, 0], [0, 0, 0]], [[0, 0, 0], [0, 0.6399, -0.0603], [-0.4048, 0.8538, -0.4682], [0, 0, 0]], [[0, 0, 0], [-1.1699, -1.1382, -0.6361], [-1.5623, -0.7461, -0.5876], [0, 0, 0]], [[0, 0, 0], [-1.846, -1.0272, -1.1104], [0.4021, -0.881, -0.1444], [0, 0, 0]], [[0, 0, 0], [0, 0, 0], [0, 0, 0], [0, 0, 0]]], [[[0, 0, 0], [0, 0, 0], [0, 0, 0], [0, 0, 0]], [[0, 0, 0], [0, 0, 0], [0, 0, 0], [0, 0, 0]], [[0, 0, 0], [0, 0, 0], [0, 0, 0], [0, 0, 0]], [[0, 0, 0], [0, 0, 0], [0, 0, 0], [0, 0, 0]], [[0, 0, 0], [0, 0, 0], [0, 0, 0], [0, 0, 0]]]]]