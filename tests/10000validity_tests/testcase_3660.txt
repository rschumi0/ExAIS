import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Up_92429 = tf.keras.layers.Input(shape=([3, 4, 1]))
in0Sub95655 = tf.keras.layers.Input(shape=([2, 2, 2]))
in1Sub95655 = tf.keras.layers.Input(shape=([2, 2, 2]))
in0Con95951 = tf.keras.layers.Input(shape=([2, 5]))
in0Zer45405 = tf.keras.layers.Input(shape=([3, 1, 3]))
in0Sub67818 = tf.keras.layers.Input(shape=([2]))
in1Sub67818 = tf.keras.layers.Input(shape=([2]))
in0Con41114 = tf.keras.layers.Input(shape=([8]))
in0Con71544 = tf.keras.layers.Input(shape=([2]))
in0Mul26839 = tf.keras.layers.Input(shape=([1, 1]))
in1Mul26839 = tf.keras.layers.Input(shape=([1, 1]))

Up_92429 = keras.layers.UpSampling2D(size=(1, 1), name = 'Up_92429', )(in0Up_92429)
Fla67241 = keras.layers.Flatten(name = 'Fla67241', )(Up_92429)
Sub95655 = keras.layers.Subtract(name = 'Sub95655', )([in0Sub95655,in1Sub95655])
Res56466 = keras.layers.Reshape((2, 4), name = 'Res56466', )(Sub95655)
Con95951 = keras.layers.Concatenate(axis=2, name = 'Con95951', )([Res56466,in0Con95951])
Zer45405 = keras.layers.ZeroPadding2D(padding=((1, 1), (1, 1)), name = 'Zer45405', )(in0Zer45405)
Res80126 = keras.layers.Reshape((5, 9), name = 'Res80126', )(Zer45405)
Dot60709 = keras.layers.Dot(axes=(2, 2), name = 'Dot60709', )([Con95951,Res80126])
Fla52872 = keras.layers.Flatten(name = 'Fla52872', )(Dot60709)
Sub67818 = keras.layers.Subtract(name = 'Sub67818', )([in0Sub67818,in1Sub67818])
Con41114 = keras.layers.Concatenate(axis=1, name = 'Con41114', )([Sub67818,in0Con41114])
Add9567 = keras.layers.Add(name = 'Add9567', )([Fla52872,Con41114])
Con71544 = keras.layers.Concatenate(axis=1, name = 'Con71544', )([Add9567,in0Con71544])
Ave98275 = keras.layers.Average(name = 'Ave98275', )([Fla67241,Con71544])
Res70875 = keras.layers.Reshape((12, 1), name = 'Res70875', )(Ave98275)
Mul26839 = keras.layers.Multiply(name = 'Mul26839', )([in0Mul26839,in1Mul26839])
ReL76779 = keras.layers.ReLU(max_value=9.099855821664155, negative_slope=4.927465701461878, threshold=8.398060031182853, name = 'ReL76779', )(Mul26839)
Zer20850 = keras.layers.ZeroPadding1D(padding=((11, 0)), name = 'Zer20850', )(ReL76779)
Ave65334 = keras.layers.Average(name = 'Ave65334', )([Res70875,Zer20850])
model = tf.keras.models.Model(inputs=[in0Up_92429,in0Sub95655,in1Sub95655,in0Con95951,in0Zer45405,in0Sub67818,in1Sub67818,in0Con41114,in0Con71544,in0Mul26839,in1Mul26839], outputs=Ave65334)
in0Up_92429 = tf.constant([[[[1.6775], [1.1548], [1.0597], [1.6764]], [[1.8471], [1.7627], [1.4321], [1.3387]], [[1.6151], [1.0739], [1.9192], [1.737]]]])
in0Sub95655 = tf.constant([[[[0.045, 0.4654], [0.1166, 0.9679]], [[0.688, 0.0704], [0.4365, 0.8436]]]])
in1Sub95655 = tf.constant([[[[0.8011, 0.5115], [0.7867, 0.2982]], [[0.7555, 0.5621], [0.311, 0.8801]]]])
in0Con95951 = tf.constant([[[0.8912, 0.9718, 0.7711, 0.8552, 0.4568], [0.6549, 0.0875, 0.9454, 0.3754, 0.1774]]])
in0Zer45405 = tf.constant([[[[1.6278, 1.949, 1.6266]], [[1.1896, 1.7967, 1.0649]], [[1.837, 1.3217, 1.4774]]]])
in0Sub67818 = tf.constant([[0.4463, 0.2264]])
in1Sub67818 = tf.constant([[0.5988, 0.5174]])
in0Con41114 = tf.constant([[0.6629, 0.4398, 0.8784, 0.2745, 0.5932, 0.7938, 0.2929, 0.5777]])
in0Con71544 = tf.constant([[0.9317, 0.1459]])
in0Mul26839 = tf.constant([[[0.4904]]])
in1Mul26839 = tf.constant([[[0.9488]]])
print (np.array2string(model.predict([in0Up_92429,in0Sub95655,in1Sub95655,in0Con95951,in0Zer45405,in0Sub67818,in1Sub67818,in0Con41114,in0Con71544,in0Mul26839,in1Mul26839],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Ave65334.png')

LUp_92429 = up_sampling2D_layer([[[[1.6775], [1.1548], [1.0597], [1.6764]], [[1.8471], [1.7627], [1.4321], [1.3387]], [[1.6151], [1.0739], [1.9192], [1.737]]]], 1, 1, Up_92429), 
LFla67241 = flatten_layer(Up_92429, Fla67241), 
LSub95655 = subtract_layer([[[[0.045, 0.4654], [0.1166, 0.9679]], [[0.688, 0.0704], [0.4365, 0.8436]]]], [[[[0.8011, 0.5115], [0.7867, 0.2982]], [[0.7555, 0.5621], [0.311, 0.8801]]]], Sub95655), 
LRes56466 = reshape_layer(Sub95655, [2, 4], Res56466), 
LCon95951 = concatenate_layer([Res56466,[[[0.8912, 0.9718, 0.7711, 0.8552, 0.4568], [0.6549, 0.0875, 0.9454, 0.3754, 0.1774]]]], 2, Con95951), 
LZer45405 = zero_padding2D_layer([[[[1.6278, 1.949, 1.6266]], [[1.1896, 1.7967, 1.0649]], [[1.837, 1.3217, 1.4774]]]], 1, 1, 1, 1, Zer45405), 
LRes80126 = reshape_layer(Zer45405, [5, 9], Res80126), 
LDot60709 = dot_layer(Con95951,Res80126, 2, 2, Dot60709), 
LFla52872 = flatten_layer(Dot60709, Fla52872), 
LSub67818 = subtract_layer([[0.4463, 0.2264]], [[0.5988, 0.5174]], Sub67818), 
LCon41114 = concatenate_layer([Sub67818,[[0.6629, 0.4398, 0.8784, 0.2745, 0.5932, 0.7938, 0.2929, 0.5777]]], 1, Con41114), 
LAdd9567 = add_layer([Fla52872,Con41114], Add9567), 
LCon71544 = concatenate_layer([Add9567,[[0.9317, 0.1459]]], 1, Con71544), 
LAve98275 = average_layer([Fla67241,Con71544], Ave98275), 
LRes70875 = reshape_layer(Ave98275, [12, 1], Res70875), 
LMul26839 = multiply_layer([[[[0.4904]]], [[[0.9488]]]], Mul26839), 
LReL76779 = relu_layer(Mul26839, 9.099855821664155, 4.927465701461878, 8.398060031182853, ReL76779), 
LZer20850 = zero_padding1D_layer(ReL76779, 11, 0, Zer20850), 
LAve65334 = average_layer([Res70875,Zer20850], Ave65334), 
exec_layers([LUp_92429,LFla67241,LSub95655,LRes56466,LCon95951,LZer45405,LRes80126,LDot60709,LFla52872,LSub67818,LCon41114,LAdd9567,LCon71544,LAve98275,LRes70875,LMul26839,LReL76779,LZer20850,LAve65334],["Up_92429","Fla67241","Sub95655","Res56466","Con95951","Zer45405","Res80126","Dot60709","Fla52872","Sub67818","Con41114","Add9567","Con71544","Ave98275","Res70875","Mul26839","ReL76779","Zer20850","Ave65334"],Ave65334,"Ave65334")

Actual (Unparsed): [[[0.3812500], [1.3179041], [1.2888410], [1.4900188], [0.6813750], [0.5093000], [0.8461532], [0.8397293], [0.7089508], [0.4129000], [0.7127250], [-19.0734974]]]

Expected (Unparsed): [[[0.38125],[1.317904085],[1.288840995],[1.490018815],[0.681375],[0.5093],[0.8461532249999999],[0.8397292949999999],[0.7089508325],[0.41290000000000004],[0.712725],[-19.073497378245154]]]

Actual:   [[[0.3813], [1.318], [1.2889], [1.4901], [0.6814], [0.5093], [0.8462], [0.8398], [0.709], [0.4129], [0.7128], [-19.0734]]]

Expected: [[[0.3813], [1.318], [1.2889], [1.4901], [0.6814], [0.5093], [0.8462], [0.8398], [0.709], [0.413], [0.7128], [-19.0734]]]