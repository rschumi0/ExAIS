import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Con98209 = tf.keras.layers.Input(shape=([2, 2, 2]))
in0Mas61266 = tf.keras.layers.Input(shape=([2]))
in0Up_55703 = tf.keras.layers.Input(shape=([1, 2]))
in0Con71214 = tf.keras.layers.Input(shape=([3]))
in0Con13073 = tf.keras.layers.Input(shape=([2]))

Con98209 = keras.layers.Conv2DTranspose(4, (2, 2),strides=(1, 1), padding='same', name = 'Con98209', )(in0Con98209)
Con70085 = keras.layers.Conv2D(3, (2, 2),strides=(1, 1), padding='same', dilation_rate=(1, 1), name = 'Con70085', )(Con98209)
Res71988 = keras.layers.Reshape((2, 6), name = 'Res71988', )(Con70085)
Cro95183 = keras.layers.Cropping1D(cropping=((1, 0)), name = 'Cro95183', )(Res71988)
Fla24250 = keras.layers.Flatten(name = 'Fla24250', )(Cro95183)
Mas61266 = keras.layers.Masking(mask_value=1, name = 'Mas61266', )(in0Mas61266)
Res30510 = keras.layers.Reshape((2, 1), name = 'Res30510', )(Mas61266)
Zer51512 = keras.layers.ZeroPadding1D(padding=((1, 1)), name = 'Zer51512', )(Res30510)
Fla76149 = keras.layers.Flatten(name = 'Fla76149', )(Zer51512)
Up_55703 = keras.layers.UpSampling1D(size=(2), name = 'Up_55703', )(in0Up_55703)
Res26431 = keras.layers.Reshape((2, 2, 1), name = 'Res26431', )(Up_55703)
Res61715 = keras.layers.Reshape((2, 2, 1, 1), name = 'Res61715', )(Res26431)
Glo86843 = keras.layers.GlobalMaxPool3D(name = 'Glo86843', )(Res61715)
Con71214 = keras.layers.Concatenate(axis=1, name = 'Con71214', )([Glo86843,in0Con71214])
Min71188 = keras.layers.Minimum(name = 'Min71188', )([Fla76149,Con71214])
Con13073 = keras.layers.Concatenate(axis=1, name = 'Con13073', )([Min71188,in0Con13073])
Ave61671 = keras.layers.Average(name = 'Ave61671', )([Fla24250,Con13073])
model = tf.keras.models.Model(inputs=[in0Con98209,in0Mas61266,in0Up_55703,in0Con71214,in0Con13073], outputs=Ave61671)
w = model.get_layer('Con98209').get_weights() 
w[0] = np.array([[[[0.5817, 0.7973], [0.8858, 0.4965], [0.3678, 0.3177], [0.5527, 0.8649]], [[0.6604, 0.5281], [0.6109, 0.1219], [0.3491, 0.815], [0.5273, 0.7764]]], [[[0.8117, 0.0926], [0.1196, 0.7313], [0.0343, 0.4443], [0.5764, 0.9602]], [[0.7967, 0.9566], [0.1674, 0.5966], [0.1336, 0.7337], [0.0965, 0.7441]]]])
w[1] = np.array([0, 0, 0, 0])
model.get_layer('Con98209').set_weights(w) 
w = model.get_layer('Con70085').get_weights() 
w[0] = np.array([[[[0.8127, 0.9147, 0.434], [0.1167, 0.0086, 0.9813], [0.5358, 0.2719, 0.5575], [0.7111, 0.8612, 0.0054]], [[0.5787, 0.8569, 0.2087], [0.723, 0.8456, 0.0124], [0.5755, 0.604, 0.5582], [0.9105, 0.5771, 0.5506]]], [[[0.7929, 0.1905, 0.4466], [0.4166, 0.3315, 0.0385], [0.8931, 0.9251, 0.8589], [0.0573, 0.7791, 0.6508]], [[0.8428, 0.9593, 0.7896], [0.1956, 0.7587, 0.1909], [0.0064, 0.2187, 0.7096], [0.3952, 0.579, 0.2933]]]])
w[1] = np.array([0, 0, 0])
model.get_layer('Con70085').set_weights(w) 
in0Con98209 = tf.constant([[[[0.2901, 0.3359], [0.5333, 0.069]], [[0.9508, 0.9812], [0.9264, 0.9363]]]])
in0Mas61266 = tf.constant([[1.4315, 1.7938]])
in0Up_55703 = tf.constant([[[1.9898, 1.1738]]])
in0Con71214 = tf.constant([[0.2819, 0.9001, 0.996]])
in0Con13073 = tf.constant([[0.5008, 0.6312]])
print (np.array2string(model.predict([in0Con98209,in0Mas61266,in0Up_55703,in0Con71214,in0Con13073],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Ave61671.png')

LCon98209 = conv2D_transpose_layer([[[[0.2901, 0.3359], [0.5333, 0.069]], [[0.9508, 0.9812], [0.9264, 0.9363]]]], 2, 2,[[[[0.5817, 0.7973], [0.8858, 0.4965], [0.3678, 0.3177], [0.5527, 0.8649]], [[0.6604, 0.5281], [0.6109, 0.1219], [0.3491, 0.815], [0.5273, 0.7764]]], [[[0.8117, 0.0926], [0.1196, 0.7313], [0.0343, 0.4443], [0.5764, 0.9602]], [[0.7967, 0.9566], [0.1674, 0.5966], [0.1336, 0.7337], [0.0965, 0.7441]]]],[0, 0, 0, 0], 1, 1, true, Con98209), 
LCon70085 = conv2D_layer(Con98209, 2, 2,[[[[0.8127, 0.9147, 0.434], [0.1167, 0.0086, 0.9813], [0.5358, 0.2719, 0.5575], [0.7111, 0.8612, 0.0054]], [[0.5787, 0.8569, 0.2087], [0.723, 0.8456, 0.0124], [0.5755, 0.604, 0.5582], [0.9105, 0.5771, 0.5506]]], [[[0.7929, 0.1905, 0.4466], [0.4166, 0.3315, 0.0385], [0.8931, 0.9251, 0.8589], [0.0573, 0.7791, 0.6508]], [[0.8428, 0.9593, 0.7896], [0.1956, 0.7587, 0.1909], [0.0064, 0.2187, 0.7096], [0.3952, 0.579, 0.2933]]]],[0, 0, 0], 1, 1, true, 1, 1, Con70085), 
LRes71988 = reshape_layer(Con70085, [2, 6], Res71988), 
LCro95183 = cropping1D_layer(Res71988, 1, 0, Cro95183), 
LFla24250 = flatten_layer(Cro95183, Fla24250), 
LMas61266 = masking_layer([[1.4315, 1.7938]], 1, Mas61266), 
LRes30510 = reshape_layer(Mas61266, [2, 1], Res30510), 
LZer51512 = zero_padding1D_layer(Res30510, 1, 1, Zer51512), 
LFla76149 = flatten_layer(Zer51512, Fla76149), 
LUp_55703 = up_sampling1D_layer([[[1.9898, 1.1738]]], 2, Up_55703), 
LRes26431 = reshape_layer(Up_55703, [2, 2, 1], Res26431), 
LRes61715 = reshape_layer(Res26431, [2, 2, 1, 1], Res61715), 
LGlo86843 = global_max_pool3D_layer(Res61715, Glo86843), 
LCon71214 = concatenate_layer([Glo86843,[[0.2819, 0.9001, 0.996]]], 1, Con71214), 
LMin71188 = minimum_layer([Fla76149,Con71214], Min71188), 
LCon13073 = concatenate_layer([Min71188,[[0.5008, 0.6312]]], 1, Con13073), 
LAve61671 = average_layer([Fla24250,Con13073], Ave61671), 
exec_layers([LCon98209,LCon70085,LRes71988,LCro95183,LFla24250,LMas61266,LRes30510,LZer51512,LFla76149,LUp_55703,LRes26431,LRes61715,LGlo86843,LCon71214,LMin71188,LCon13073,LAve61671],["Con98209","Con70085","Res71988","Cro95183","Fla24250","Mas61266","Res30510","Zer51512","Fla76149","Up_55703","Res26431","Res61715","Glo86843","Con71214","Min71188","Con13073","Ave61671"],Ave61671,"Ave61671")

Actual (Unparsed): [[5.5460135, 5.8238748, 3.6712856, 3.2424983, 3.5057990, 2.8062500]]

Expected (Unparsed): [[5.546013497150501,5.8238747863125,3.6712855899069994,3.2424983023785003,3.505799004913,2.806249980218]]

Actual:   [[5.5461, 5.8239, 3.6713, 3.2425, 3.5058, 2.8063]]

Expected: [[5.5461, 5.8239, 3.6713, 3.2425, 3.5058, 2.8063]]