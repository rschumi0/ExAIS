import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Mul16014 = tf.keras.layers.Input(shape=([1, 1]))
in1Mul16014 = tf.keras.layers.Input(shape=([1, 1]))
in0Con69740 = tf.keras.layers.Input(shape=([2, 1, 35, 2]))
in0Min69430 = tf.keras.layers.Input(shape=([1, 1, 1, 1]))
in1Min69430 = tf.keras.layers.Input(shape=([1, 1, 1, 1]))
in0Ave56272 = tf.keras.layers.Input(shape=([2, 1, 1]))
in1Ave56272 = tf.keras.layers.Input(shape=([2, 1, 1]))
in0Con69360 = tf.keras.layers.Input(shape=([2, 1, 35, 2]))
in0Con72354 = tf.keras.layers.Input(shape=([1, 1, 2, 2]))

Mul16014 = keras.layers.Multiply(name = 'Mul16014', )([in0Mul16014,in1Mul16014])
Res59248 = keras.layers.Reshape((1, 1, 1), name = 'Res59248', )(Mul16014)
Glo46563 = keras.layers.GlobalMaxPool2D(name = 'Glo46563', )(Res59248)
Res90817 = keras.layers.Reshape((1, 1), name = 'Res90817', )(Glo46563)
Res56926 = keras.layers.Reshape((1, 1, 1), name = 'Res56926', )(Res90817)
Res78509 = keras.layers.Reshape((1, 1, 1, 1), name = 'Res78509', )(Res56926)
Zer83832 = keras.layers.ZeroPadding3D(padding=((1, 0), (0, 0), (34, 0)), name = 'Zer83832', )(Res78509)
Con69740 = keras.layers.Concatenate(axis=4, name = 'Con69740', )([Zer83832,in0Con69740])
Min69430 = keras.layers.Minimum(name = 'Min69430', )([in0Min69430,in1Min69430])
Res74984 = keras.layers.Reshape((1, 1, 1), name = 'Res74984', )(Min69430)
Zer65155 = keras.layers.ZeroPadding2D(padding=((1, 0), (0, 0)), name = 'Zer65155', )(Res74984)
Ave56272 = keras.layers.Average(name = 'Ave56272', )([in0Ave56272,in1Ave56272])
Min5578 = keras.layers.Minimum(name = 'Min5578', )([Zer65155,Ave56272])
Res10920 = keras.layers.Reshape((2, 1, 1, 1), name = 'Res10920', )(Min5578)
Zer6747 = keras.layers.ZeroPadding3D(padding=((0, 0), (0, 0), (34, 0)), name = 'Zer6747', )(Res10920)
Con69360 = keras.layers.Concatenate(axis=4, name = 'Con69360', )([Zer6747,in0Con69360])
Con72354 = keras.layers.Conv3DTranspose(3, (1, 1, 1),strides=(1, 1, 9), padding='valid', name = 'Con72354', )(in0Con72354)
Zer68961 = keras.layers.ZeroPadding3D(padding=((1, 0), (0, 0), (17, 0)), name = 'Zer68961', )(Con72354)
Ave16316 = keras.layers.Average(name = 'Ave16316', )([Con69360,Zer68961])
Mul26954 = keras.layers.Multiply(name = 'Mul26954', )([Con69740,Ave16316])
model = tf.keras.models.Model(inputs=[in0Mul16014,in1Mul16014,in0Con69740,in0Min69430,in1Min69430,in0Ave56272,in1Ave56272,in0Con69360,in0Con72354], outputs=Mul26954)
w = model.get_layer('Con72354').get_weights() 
w[0] = np.array([[[[[0.7685, 0.8414], [0.2705, 0.2017], [0.4831, 0.1764]]]]])
w[1] = np.array([0, 0, 0])
model.get_layer('Con72354').set_weights(w) 
in0Mul16014 = tf.constant([[[0.176]]])
in1Mul16014 = tf.constant([[[0.9151]]])
in0Con69740 = tf.constant([[[[[0.7925, 0.8183], [0.4519, 0.288], [0.897, 0.8025], [0.1016, 0.9293], [0.6564, 0.1946], [0.6633, 0.1368], [0.129, 0.0943], [0.6902, 0.081], [0.4487, 0.9866], [0.9073, 0.5357], [0.9218, 0.8875], [0.4854, 0.3686], [0.3959, 0.7095], [0.0873, 0.8565], [0.4103, 0.2221], [0.9782, 0.3333], [0.0467, 0.657], [0.2244, 0.795], [0.717, 0.8275], [0.1556, 0.8693], [0.349, 0.6159], [0.8132, 0.9887], [0.5591, 0.8204], [0.0685, 0.698], [0.4396, 0.6453], [0.4573, 0.7745], [0.5293, 0.5703], [0.5476, 0.2415], [0.3836, 0.9398], [0.8355, 0.4169], [0.9171, 0.3771], [0.7447, 0.852], [0.3534, 0.0456], [0.2985, 0.3909], [0.1798, 0.8562]]], [[[0.4233, 0.6054], [0.9846, 0.95], [0.6486, 0.5497], [0.4294, 0.1744], [0.176, 0.1141], [0.8968, 0.813], [0.9006, 0.2602], [0.5479, 0.5321], [0.9937, 0.0678], [0.6185, 0.3606], [0.0778, 0.8381], [0.7936, 0.5354], [0.862, 0.4588], [0.4037, 0.21], [0.3413, 0.8647], [0.0123, 0.3538], [0.3118, 0.6983], [0.6787, 0.6455], [0.0046, 0.2175], [0.8172, 0.8072], [0.098, 0.0813], [0.1072, 0.6152], [0.2341, 0.8962], [0.349, 0.7768], [0.4344, 0.3071], [0.5129, 0.9672], [0.4867, 0.9766], [0.4816, 0.5843], [0.4587, 0.0123], [0.146, 0.1962], [0.9833, 0.2744], [0.5855, 0.235], [0.8538, 0.5231], [0.0337, 0.2182], [0.7727, 0.5508]]]]])
in0Min69430 = tf.constant([[[[[0.2338]]]]])
in1Min69430 = tf.constant([[[[[0.3803]]]]])
in0Ave56272 = tf.constant([[[[0.6794]], [[0.9693]]]])
in1Ave56272 = tf.constant([[[[0.1781]], [[0.7269]]]])
in0Con69360 = tf.constant([[[[[0.5362, 0.2904], [0.9098, 0.048], [0.9214, 0.7898], [0.6471, 0.7839], [0.7412, 0.01], [0.0091, 0.4317], [0.8186, 0.6677], [0.7015, 0.1262], [0.9162, 0.3401], [0.7092, 0.0186], [0.8424, 0.4959], [0.2086, 0.4243], [0.0278, 0.9149], [0.8991, 0.9074], [0.5416, 0.4327], [0.234, 0.061], [0.081, 0.196], [0.2976, 0.8261], [0.6798, 0.7777], [0.4907, 0.6813], [0.7567, 0.5701], [0.7641, 0.9309], [0.6493, 0.8433], [0.8705, 0.6198], [0.9673, 0.742], [0.9926, 0.3133], [0.9376, 0.2735], [0.1491, 0.0928], [0.4107, 0.038], [0.9822, 0.6396], [0.3524, 0.047], [0.8833, 0.2051], [0.4546, 0.4815], [0.9297, 0.5999], [0.9614, 0.654]]], [[[0.7721, 0.0722], [0.9348, 0.7546], [0.4383, 0.0917], [0.9559, 0.1839], [0.9998, 0.6088], [0.6978, 0.4095], [0.187, 0.3132], [0.8934, 0.313], [0.33, 0.7846], [0.97, 0.9423], [0.4553, 0.1942], [0.0268, 0.43], [0.9722, 0.3977], [0.8869, 0.5924], [0.148, 0.8377], [0.6783, 0.3884], [0.4882, 0.6672], [0.7622, 0.9814], [0.2138, 0.9001], [0.8629, 0.6225], [0.2594, 0.1942], [0.9311, 0.9542], [0.6032, 0.0847], [0.6206, 0.617], [0.2839, 0.0944], [0.2476, 0.2366], [0.1598, 0.1747], [0.7629, 0.9673], [0.3227, 0.3504], [0.5698, 0.7703], [0.0893, 0.2812], [0.9918, 0.5195], [0.6655, 0.6869], [0.8136, 0.8423], [0.901, 0.2322]]]]])
in0Con72354 = tf.constant([[[[[0.5956, 0.3299], [0.0821, 0.6148]]]]])
print (np.array2string(model.predict([in0Mul16014,in1Mul16014,in0Con69740,in0Min69430,in1Min69430,in0Ave56272,in1Ave56272,in0Con69360,in0Con72354],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Mul26954.png')

LMul16014 = multiply_layer([[[[0.176]]], [[[0.9151]]]], Mul16014), 
LRes59248 = reshape_layer(Mul16014, [1, 1, 1], Res59248), 
LGlo46563 = global_max_pool2D_layer(Res59248, Glo46563), 
LRes90817 = reshape_layer(Glo46563, [1, 1], Res90817), 
LRes56926 = reshape_layer(Res90817, [1, 1, 1], Res56926), 
LRes78509 = reshape_layer(Res56926, [1, 1, 1, 1], Res78509), 
LZer83832 = zero_padding3D_layer(Res78509, 1, 0, 0, 0, 34, 0, Zer83832), 
LCon69740 = concatenate_layer([Zer83832,[[[[[0.7925, 0.8183], [0.4519, 0.288], [0.897, 0.8025], [0.1016, 0.9293], [0.6564, 0.1946], [0.6633, 0.1368], [0.129, 0.0943], [0.6902, 0.081], [0.4487, 0.9866], [0.9073, 0.5357], [0.9218, 0.8875], [0.4854, 0.3686], [0.3959, 0.7095], [0.0873, 0.8565], [0.4103, 0.2221], [0.9782, 0.3333], [0.0467, 0.657], [0.2244, 0.795], [0.717, 0.8275], [0.1556, 0.8693], [0.349, 0.6159], [0.8132, 0.9887], [0.5591, 0.8204], [0.0685, 0.698], [0.4396, 0.6453], [0.4573, 0.7745], [0.5293, 0.5703], [0.5476, 0.2415], [0.3836, 0.9398], [0.8355, 0.4169], [0.9171, 0.3771], [0.7447, 0.852], [0.3534, 0.0456], [0.2985, 0.3909], [0.1798, 0.8562]]], [[[0.4233, 0.6054], [0.9846, 0.95], [0.6486, 0.5497], [0.4294, 0.1744], [0.176, 0.1141], [0.8968, 0.813], [0.9006, 0.2602], [0.5479, 0.5321], [0.9937, 0.0678], [0.6185, 0.3606], [0.0778, 0.8381], [0.7936, 0.5354], [0.862, 0.4588], [0.4037, 0.21], [0.3413, 0.8647], [0.0123, 0.3538], [0.3118, 0.6983], [0.6787, 0.6455], [0.0046, 0.2175], [0.8172, 0.8072], [0.098, 0.0813], [0.1072, 0.6152], [0.2341, 0.8962], [0.349, 0.7768], [0.4344, 0.3071], [0.5129, 0.9672], [0.4867, 0.9766], [0.4816, 0.5843], [0.4587, 0.0123], [0.146, 0.1962], [0.9833, 0.2744], [0.5855, 0.235], [0.8538, 0.5231], [0.0337, 0.2182], [0.7727, 0.5508]]]]]], 4, Con69740), 
LMin69430 = minimum_layer([[[[[[0.2338]]]]], [[[[[0.3803]]]]]], Min69430), 
LRes74984 = reshape_layer(Min69430, [1, 1, 1], Res74984), 
LZer65155 = zero_padding2D_layer(Res74984, 1, 0, 0, 0, Zer65155), 
LAve56272 = average_layer([[[[[0.6794]], [[0.9693]]]], [[[[0.1781]], [[0.7269]]]]], Ave56272), 
LMin5578 = minimum_layer([Zer65155,Ave56272], Min5578), 
LRes10920 = reshape_layer(Min5578, [2, 1, 1, 1], Res10920), 
LZer6747 = zero_padding3D_layer(Res10920, 0, 0, 0, 0, 34, 0, Zer6747), 
LCon69360 = concatenate_layer([Zer6747,[[[[[0.5362, 0.2904], [0.9098, 0.048], [0.9214, 0.7898], [0.6471, 0.7839], [0.7412, 0.01], [0.0091, 0.4317], [0.8186, 0.6677], [0.7015, 0.1262], [0.9162, 0.3401], [0.7092, 0.0186], [0.8424, 0.4959], [0.2086, 0.4243], [0.0278, 0.9149], [0.8991, 0.9074], [0.5416, 0.4327], [0.234, 0.061], [0.081, 0.196], [0.2976, 0.8261], [0.6798, 0.7777], [0.4907, 0.6813], [0.7567, 0.5701], [0.7641, 0.9309], [0.6493, 0.8433], [0.8705, 0.6198], [0.9673, 0.742], [0.9926, 0.3133], [0.9376, 0.2735], [0.1491, 0.0928], [0.4107, 0.038], [0.9822, 0.6396], [0.3524, 0.047], [0.8833, 0.2051], [0.4546, 0.4815], [0.9297, 0.5999], [0.9614, 0.654]]], [[[0.7721, 0.0722], [0.9348, 0.7546], [0.4383, 0.0917], [0.9559, 0.1839], [0.9998, 0.6088], [0.6978, 0.4095], [0.187, 0.3132], [0.8934, 0.313], [0.33, 0.7846], [0.97, 0.9423], [0.4553, 0.1942], [0.0268, 0.43], [0.9722, 0.3977], [0.8869, 0.5924], [0.148, 0.8377], [0.6783, 0.3884], [0.4882, 0.6672], [0.7622, 0.9814], [0.2138, 0.9001], [0.8629, 0.6225], [0.2594, 0.1942], [0.9311, 0.9542], [0.6032, 0.0847], [0.6206, 0.617], [0.2839, 0.0944], [0.2476, 0.2366], [0.1598, 0.1747], [0.7629, 0.9673], [0.3227, 0.3504], [0.5698, 0.7703], [0.0893, 0.2812], [0.9918, 0.5195], [0.6655, 0.6869], [0.8136, 0.8423], [0.901, 0.2322]]]]]], 4, Con69360), 
LCon72354 = conv3D_transpose_layer([[[[[0.5956, 0.3299], [0.0821, 0.6148]]]]], 1, 1, 1,[[[[[0.7685, 0.8414], [0.2705, 0.2017], [0.4831, 0.1764]]]]],[0, 0, 0], 1, 1, 9, false, Con72354), 
LZer68961 = zero_padding3D_layer(Con72354, 1, 0, 0, 0, 17, 0, Zer68961), 
LAve16316 = average_layer([Con69360,Zer68961], Ave16316), 
LMul26954 = multiply_layer([Con69740,Ave16316], Mul26954), 
exec_layers([LMul16014,LRes59248,LGlo46563,LRes90817,LRes56926,LRes78509,LZer83832,LCon69740,LMin69430,LRes74984,LZer65155,LAve56272,LMin5578,LRes10920,LZer6747,LCon69360,LCon72354,LZer68961,LAve16316,LMul26954],["Mul16014","Res59248","Glo46563","Res90817","Res56926","Res78509","Zer83832","Con69740","Min69430","Res74984","Zer65155","Ave56272","Min5578","Res10920","Zer6747","Con69360","Con72354","Zer68961","Ave16316","Mul26954"],Mul26954,"Mul26954")

Actual (Unparsed): [[[[[0.0000000, 0.2124692, 0.1188172], [0.0000000, 0.2055693, 0.0069120], [0.0000000, 0.4132479, 0.3169072], [0.0000000, 0.0328727, 0.3642391], [0.0000000, 0.2432618, 0.0009730], [0.0000000, 0.0030180, 0.0295283], [0.0000000, 0.0527997, 0.0314821], [0.0000000, 0.2420876, 0.0051111], [0.0000000, 0.2055495, 0.1677713], [0.0000000, 0.3217286, 0.0049820], [0.0000000, 0.3882622, 0.2200556], [0.0000000, 0.0506272, 0.0781985], [0.0000000, 0.0055030, 0.3245608], [0.0000000, 0.0392457, 0.3885941], [0.0000000, 0.1111092, 0.0480513], [0.0000000, 0.1144494, 0.0101656], [0.0000000, 0.0018914, 0.0643860], [0.0000000, 0.0333907, 0.3283748], [0.0000000, 0.2437083, 0.3217734], [0.0000000, 0.0381765, 0.2961270], [0.0000000, 0.1320441, 0.1755623], [0.0000000, 0.3106831, 0.4601904], [0.0000000, 0.1815118, 0.3459217], [0.0000000, 0.0298146, 0.2163102], [0.0000000, 0.2126125, 0.2394063], [0.0000000, 0.2269580, 0.1213254], [0.0000000, 0.2481358, 0.0779885], [0.0000000, 0.0408236, 0.0112056], [0.0000000, 0.0787723, 0.0178562], [0.0000000, 0.4103141, 0.1333246], [0.0000000, 0.1615930, 0.0088618], [0.0000000, 0.3288968, 0.0873726], [0.0000000, 0.0803278, 0.0109782], [0.0000000, 0.1387577, 0.1172505], [0.0000000, 0.0864299, 0.2799774]]], [[[0.0000000, 0.1634150, 0.0218549], [0.0000000, 0.4602021, 0.3584350], [0.0000000, 0.1421407, 0.0252037], [0.0000000, 0.2052317, 0.0160361], [0.0000000, 0.0879824, 0.0347320], [0.0000000, 0.3128935, 0.1664618], [0.0000000, 0.0842061, 0.0407473], [0.0000000, 0.2447469, 0.0832737], [0.0000000, 0.1639605, 0.0265979], [0.0000000, 0.2999725, 0.1698967], [0.0000000, 0.0177112, 0.0813795], [0.0000000, 0.0106342, 0.1151110], [0.0000000, 0.4190182, 0.0912324], [0.0000000, 0.1790208, 0.0622020], [0.0000000, 0.0252562, 0.3621796], [0.0000000, 0.0041715, 0.0687080], [0.0000000, 0.0761104, 0.2329529], [0.0000000, 0.3359058, 0.4283954], [0.0000000, 0.0004917, 0.0978859], [0.0000000, 0.3525809, 0.2512410], [0.0000000, 0.0127106, 0.0078942], [0.0000000, 0.0499070, 0.2935119], [0.0000000, 0.0706046, 0.0379541], [0.0000000, 0.1082947, 0.2396428], [0.0000000, 0.0616631, 0.0144951], [0.0000000, 0.0634970, 0.1144198], [0.0000000, 0.0744683, 0.1576297], [0.0000000, 0.1837063, 0.2825967], [0.0000000, 0.0740112, 0.0021550], [0.0000000, 0.0415954, 0.0755664], [0.0000000, 0.0439043, 0.0385806], [0.0000000, 0.2903495, 0.0610413], [0.0000000, 0.2841019, 0.1796587], [0.0000000, 0.0137092, 0.0918949], [0.0188276, 0.3481014, 0.0639479]]]]]

Expected (Unparsed): [[[[[0,0.21246925,0.11881716],[0,0.20556931000000003,0.006912],[0,0.4132479,0.31690725],[0,0.03287268,0.36423913500000005],[0,0.24326183999999998,0.000973],[0,0.003018015,0.02952828],[0,0.0527997,0.031482054999999995],[0,0.24208765000000002,0.0051111],[0,0.20554946999999998,0.16777133000000002],[0,0.32172858000000004,0.004982009999999999],[0,0.38826216,0.220055625],[0,0.05062722,0.07819849],[0,0.005503009999999999,0.324560775],[0,0.039245715,0.38859405],[0,0.11110924,0.048051334999999994],[0,0.1144494,0.01016565],[0,0.00189135,0.064386],[0,0.03339072,0.32837475],[0,0.2437083,0.321773375],[0,0.03817646,0.296127045],[0,0.13204415,0.175562295],[0,0.31068306,0.46019041499999996],[0,0.18151181500000002,0.34592166],[0,0.029814625000000004,0.21631019999999998],[0,0.21261254000000002,0.2394063],[0,0.22695799,0.121325425],[0,0.24813584,0.07798852500000002],[0,0.04082358,0.0112056],[0,0.07877226,0.0178562],[0,0.41031405,0.13332461999999998],[0,0.16159302,0.00886185],[0,0.328896755,0.0873726],[0,0.08032782,0.0109782],[0,0.138757725,0.117250455],[0,0.08642986,0.2799774]]],[[[0,0.163414965,0.021854940000000003],[0,0.46020204,0.358435],[0,0.14214069,0.025203745],[0,0.20523173,0.01603608],[0,0.0879824,0.03473204],[0,0.31289352,0.16646175],[0,0.08420609999999999,0.04074732],[0,0.24474693000000003,0.08327365],[0,0.1639605,0.026597939999999997],[0,0.29997250000000003,0.16989669],[0,0.01771117,0.08137951],[0,0.01063424,0.11511099999999999],[0,0.41901819999999995,0.09123238],[0,0.179020765,0.062202],[0,0.0252562,0.362179595],[0,0.0041715450000000005,0.06870796],[0,0.07611038,0.23295288000000003],[0.0,0.3359058112905,0.42839534438000004],[0,0.00049174,0.097885875],[0,0.35258094,0.25124100000000005],[0,0.0127106,0.00789423],[0,0.04990696000000001,0.29351192],[0,0.07060456,0.03795407],[0,0.1082947,0.23964280000000002],[0,0.061663079999999995,0.014495119999999998],[0,0.06349702,0.11441976],[0.0,0.07446831465350001,0.15762970020899997],[0,0.18370632,0.282596695],[0,0.074011245,0.00215496],[0,0.0415954,0.07556643],[0,0.043904345,0.03858064],[0,0.29034945,0.06104124999999999],[0,0.28410195,0.17965869499999998],[0,0.01370916,0.09189493000000001],[0.01882763344,0.34810135000000003,0.06394788]]]]]

Actual:   [[[[[0, 0.2125, 0.1189], [0, 0.2056, 0.007], [0, 0.4133, 0.317], [0, 0.0329, 0.3643], [0, 0.2433, 0.001], [0, 0.0031, 0.0296], [0, 0.0528, 0.0315], [0, 0.2421, 0.0052], [0, 0.2056, 0.1678], [0, 0.3218, 0.005], [0, 0.3883, 0.2201], [0, 0.0507, 0.0782], [0, 0.0056, 0.3246], [0, 0.0393, 0.3886], [0, 0.1112, 0.0481], [0, 0.1145, 0.0102], [0, 0.0019, 0.0644], [0, 0.0334, 0.3284], [0, 0.2438, 0.3218], [0, 0.0382, 0.2962], [0, 0.1321, 0.1756], [0, 0.3107, 0.4602], [0, 0.1816, 0.346], [0, 0.0299, 0.2164], [0, 0.2127, 0.2395], [0, 0.227, 0.1214], [0, 0.2482, 0.078], [0, 0.0409, 0.0113], [0, 0.0788, 0.0179], [0, 0.4104, 0.1334], [0, 0.1616, 0.0089], [0, 0.3289, 0.0874], [0, 0.0804, 0.011], [0, 0.1388, 0.1173], [0, 0.0865, 0.28]]], [[[0, 0.1635, 0.0219], [0, 0.4603, 0.3585], [0, 0.1422, 0.0253], [0, 0.2053, 0.0161], [0, 0.088, 0.0348], [0, 0.3129, 0.1665], [0, 0.0843, 0.0408], [0, 0.2448, 0.0833], [0, 0.164, 0.0266], [0, 0.3, 0.1699], [0, 0.0178, 0.0814], [0, 0.0107, 0.1152], [0, 0.4191, 0.0913], [0, 0.1791, 0.0623], [0, 0.0253, 0.3622], [0, 0.0042, 0.0688], [0, 0.0762, 0.233], [0, 0.336, 0.4284], [0, 0.0005, 0.0979], [0, 0.3526, 0.2513], [0, 0.0128, 0.0079], [0, 0.05, 0.2936], [0, 0.0707, 0.038], [0, 0.1083, 0.2397], [0, 0.0617, 0.0145], [0, 0.0635, 0.1145], [0, 0.0745, 0.1577], [0, 0.1838, 0.2826], [0, 0.0741, 0.0022], [0, 0.0416, 0.0756], [0, 0.044, 0.0386], [0, 0.2904, 0.0611], [0, 0.2842, 0.1797], [0, 0.0138, 0.0919], [0.0189, 0.3482, 0.064]]]]]

Expected: [[[[[0, 0.2125, 0.1189], [0, 0.2056, 0.007], [0, 0.4133, 0.317], [0, 0.0329, 0.3643], [0, 0.2433, 0.001], [0, 0.0031, 0.0296], [0, 0.0528, 0.0315], [0, 0.2421, 0.0052], [0, 0.2056, 0.1678], [0, 0.3218, 0.005], [0, 0.3883, 0.2201], [0, 0.0507, 0.0782], [0, 0.0056, 0.3246], [0, 0.0393, 0.3886], [0, 0.1112, 0.0481], [0, 0.1145, 0.0102], [0, 0.0019, 0.0644], [0, 0.0334, 0.3284], [0, 0.2438, 0.3218], [0, 0.0382, 0.2962], [0, 0.1321, 0.1756], [0, 0.3107, 0.4602], [0, 0.1816, 0.346], [0, 0.0299, 0.2164], [0, 0.2127, 0.2395], [0, 0.227, 0.1214], [0, 0.2482, 0.078], [0, 0.0409, 0.0113], [0, 0.0788, 0.0179], [0, 0.4104, 0.1334], [0, 0.1616, 0.0089], [0, 0.3289, 0.0874], [0, 0.0804, 0.011], [0, 0.1388, 0.1173], [0, 0.0865, 0.28]]], [[[0, 0.1635, 0.0219], [0, 0.4603, 0.3585], [0, 0.1422, 0.0253], [0, 0.2053, 0.0161], [0, 0.088, 0.0348], [0, 0.3129, 0.1665], [0, 0.0843, 0.0408], [0, 0.2448, 0.0833], [0, 0.164, 0.0266], [0, 0.3, 0.1699], [0, 0.0178, 0.0814], [0, 0.0107, 0.1152], [0, 0.4191, 0.0913], [0, 0.1791, 0.0623], [0, 0.0253, 0.3622], [0, 0.0042, 0.0688], [0, 0.0762, 0.233], [0, 0.336, 0.4284], [0, 0.0005, 0.0979], [0, 0.3526, 0.2513], [0, 0.0128, 0.0079], [0, 0.05, 0.2936], [0, 0.0707, 0.038], [0, 0.1083, 0.2397], [0, 0.0617, 0.0145], [0, 0.0635, 0.1145], [0, 0.0745, 0.1577], [0, 0.1838, 0.2826], [0, 0.0741, 0.0022], [0, 0.0416, 0.0756], [0, 0.044, 0.0386], [0, 0.2904, 0.0611], [0, 0.2842, 0.1797], [0, 0.0138, 0.0919], [0.0189, 0.3482, 0.064]]]]]