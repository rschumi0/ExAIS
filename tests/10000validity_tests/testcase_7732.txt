import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Cro98377 = tf.keras.layers.Input(shape=([4, 3, 3]))
in0Mul12318 = tf.keras.layers.Input(shape=([1, 1, 1]))
in1Mul12318 = tf.keras.layers.Input(shape=([1, 1, 1]))
in0Con43777 = tf.keras.layers.Input(shape=([3, 3, 2]))
in0Add96918 = tf.keras.layers.Input(shape=([1, 2, 2, 1]))
in1Add96918 = tf.keras.layers.Input(shape=([1, 2, 2, 1]))
in0Con71827 = tf.keras.layers.Input(shape=([26]))

Cro98377 = keras.layers.Cropping2D(cropping=((3, 0), (0, 0)), name = 'Cro98377', )(in0Cro98377)
Zer87838 = keras.layers.ZeroPadding2D(padding=((2, 0), (0, 0)), name = 'Zer87838', )(Cro98377)
Mul12318 = keras.layers.Multiply(name = 'Mul12318', )([in0Mul12318,in1Mul12318])
Glo14590 = keras.layers.GlobalMaxPool2D(name = 'Glo14590', )(Mul12318)
Res48414 = keras.layers.Reshape((1, 1), name = 'Res48414', )(Glo14590)
Ave6328 = keras.layers.AveragePooling1D(pool_size=(1), strides=(1), padding='valid', name = 'Ave6328', )(Res48414)
Res49157 = keras.layers.Reshape((1, 1, 1), name = 'Res49157', )(Ave6328)
Zer77825 = keras.layers.ZeroPadding2D(padding=((1, 1), (1, 1)), name = 'Zer77825', )(Res49157)
Con43777 = keras.layers.Concatenate(axis=3, name = 'Con43777', )([Zer77825,in0Con43777])
Add52405 = keras.layers.Add(name = 'Add52405', )([Zer87838,Con43777])
Res3575 = keras.layers.Reshape((3, 9), name = 'Res3575', )(Add52405)
Fla22374 = keras.layers.Flatten(name = 'Fla22374', )(Res3575)
Add96918 = keras.layers.Add(name = 'Add96918', )([in0Add96918,in1Add96918])
Res29069 = keras.layers.Reshape((1, 2, 2), name = 'Res29069', )(Add96918)
Zer97876 = keras.layers.ZeroPadding2D(padding=((1, 1), (1, 1)), name = 'Zer97876', )(Res29069)
Res47952 = keras.layers.Reshape((3, 4, 2, 1), name = 'Res47952', )(Zer97876)
Glo49447 = keras.layers.GlobalAveragePooling3D(name = 'Glo49447', )(Res47952)
Con71827 = keras.layers.Concatenate(axis=1, name = 'Con71827', )([Glo49447,in0Con71827])
Mul13695 = keras.layers.Multiply(name = 'Mul13695', )([Fla22374,Con71827])
model = tf.keras.models.Model(inputs=[in0Cro98377,in0Mul12318,in1Mul12318,in0Con43777,in0Add96918,in1Add96918,in0Con71827], outputs=Mul13695)
in0Cro98377 = tf.constant([[[[1.3903, 1.8764, 1.7139], [1.3805, 1.7821, 1.7733], [1.836, 1.6078, 1.7189]], [[1.0896, 1.7727, 1.3929], [1.1792, 1.5536, 1.4234], [1.4725, 1.7435, 1.2669]], [[1.3166, 1.0146, 1.6098], [1.4422, 1.0139, 1.7288], [1.2097, 1.7257, 1.9313]], [[1.2033, 1.0563, 1.4257], [1.5485, 1.3663, 1.3846], [1.1877, 1.5414, 1.4527]]]])
in0Mul12318 = tf.constant([[[[0.6088]]]])
in1Mul12318 = tf.constant([[[[0.66]]]])
in0Con43777 = tf.constant([[[[0.1559, 0.4567], [0.6299, 0.3068], [0.9973, 0.1161]], [[0.796, 0.5363], [0.6719, 0.0735], [0.6818, 0.6322]], [[0.385, 0.3111], [0.1808, 0.0095], [0.8762, 0.8741]]]])
in0Add96918 = tf.constant([[[[[0.9813], [0.6237]], [[0.6128], [0.4726]]]]])
in1Add96918 = tf.constant([[[[[0.3748], [0.4371]], [[0.4148], [0.4181]]]]])
in0Con71827 = tf.constant([[0.3778, 0.3862, 0.5453, 0.3209, 0.1166, 0.199, 0.9475, 0.8309, 0.3206, 0.0067, 0.6159, 0.9869, 0.8727, 0.9704, 0.1508, 0.1186, 0.369, 0.1181, 0.7604, 0.7322, 0.6673, 0.0356, 0.1768, 0.043, 0.0318, 0.7233]])
print (np.array2string(model.predict([in0Cro98377,in0Mul12318,in1Mul12318,in0Con43777,in0Add96918,in1Add96918,in0Con71827],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Mul13695.png')

LCro98377 = cropping2D_layer([[[[1.3903, 1.8764, 1.7139], [1.3805, 1.7821, 1.7733], [1.836, 1.6078, 1.7189]], [[1.0896, 1.7727, 1.3929], [1.1792, 1.5536, 1.4234], [1.4725, 1.7435, 1.2669]], [[1.3166, 1.0146, 1.6098], [1.4422, 1.0139, 1.7288], [1.2097, 1.7257, 1.9313]], [[1.2033, 1.0563, 1.4257], [1.5485, 1.3663, 1.3846], [1.1877, 1.5414, 1.4527]]]], 3, 0, 0, 0, Cro98377), 
LZer87838 = zero_padding2D_layer(Cro98377, 2, 0, 0, 0, Zer87838), 
LMul12318 = multiply_layer([[[[[0.6088]]]], [[[[0.66]]]]], Mul12318), 
LGlo14590 = global_max_pool2D_layer(Mul12318, Glo14590), 
LRes48414 = reshape_layer(Glo14590, [1, 1], Res48414), 
LAve6328 = average_pooling1D_layer(Res48414, 1, 1, false, Ave6328), 
LRes49157 = reshape_layer(Ave6328, [1, 1, 1], Res49157), 
LZer77825 = zero_padding2D_layer(Res49157, 1, 1, 1, 1, Zer77825), 
LCon43777 = concatenate_layer([Zer77825,[[[[0.1559, 0.4567], [0.6299, 0.3068], [0.9973, 0.1161]], [[0.796, 0.5363], [0.6719, 0.0735], [0.6818, 0.6322]], [[0.385, 0.3111], [0.1808, 0.0095], [0.8762, 0.8741]]]]], 3, Con43777), 
LAdd52405 = add_layer([Zer87838,Con43777], Add52405), 
LRes3575 = reshape_layer(Add52405, [3, 9], Res3575), 
LFla22374 = flatten_layer(Res3575, Fla22374), 
LAdd96918 = add_layer([[[[[[0.9813], [0.6237]], [[0.6128], [0.4726]]]]], [[[[[0.3748], [0.4371]], [[0.4148], [0.4181]]]]]], Add96918), 
LRes29069 = reshape_layer(Add96918, [1, 2, 2], Res29069), 
LZer97876 = zero_padding2D_layer(Res29069, 1, 1, 1, 1, Zer97876), 
LRes47952 = reshape_layer(Zer97876, [3, 4, 2, 1], Res47952), 
LGlo49447 = global_average_pooling3D_layer(Res47952, Glo49447), 
LCon71827 = concatenate_layer([Glo49447,[[0.3778, 0.3862, 0.5453, 0.3209, 0.1166, 0.199, 0.9475, 0.8309, 0.3206, 0.0067, 0.6159, 0.9869, 0.8727, 0.9704, 0.1508, 0.1186, 0.369, 0.1181, 0.7604, 0.7322, 0.6673, 0.0356, 0.1768, 0.043, 0.0318, 0.7233]]], 1, Con71827), 
LMul13695 = multiply_layer([Fla22374,Con71827], Mul13695), 
exec_layers([LCro98377,LZer87838,LMul12318,LGlo14590,LRes48414,LAve6328,LRes49157,LZer77825,LCon43777,LAdd52405,LRes3575,LFla22374,LAdd96918,LRes29069,LZer97876,LRes47952,LGlo49447,LCon71827,LMul13695],["Cro98377","Zer87838","Mul12318","Glo14590","Res48414","Ave6328","Res49157","Zer77825","Con43777","Add52405","Res3575","Fla22374","Add96918","Res29069","Zer97876","Res47952","Glo49447","Con71827","Mul13695"],Mul13695,"Mul13695")

Actual (Unparsed): [[0.0000000, 0.0588990, 0.1763775, 0.0000000, 0.2021349, 0.0357729, 0.0000000, 0.9449418, 0.0964675, 0.0000000, 0.0053332, 0.3303072, 0.3965443, 0.5863671, 0.0713244, 0.0000000, 0.0808615, 0.2332818, 0.1421097, 1.0959645, 1.2716850, 1.0333140, 0.0550768, 0.2464769, 0.0510711, 0.0768797, 1.6829744]]

Expected (Unparsed): [[0.0,0.05889902000000001,0.17637754,0.0,0.20213491000000003,0.03577288,0.0,0.94494175,0.09646748999999999,0.0,0.005333200000000001,0.33030717,0.3965443152,0.5863671300000001,0.0713244,0.0,0.08086148,0.23328179999999998,0.14210973,1.0959645199999999,1.2716849599999998,1.03331405,0.05507676,0.24647688000000004,0.051071099999999994,0.07687968,1.6829744400000002]]

Actual:   [[0, 0.0589, 0.1764, 0, 0.2022, 0.0358, 0, 0.945, 0.0965, 0, 0.0054, 0.3304, 0.3966, 0.5864, 0.0714, 0, 0.0809, 0.2333, 0.1422, 1.096, 1.2717, 1.0334, 0.0551, 0.2465, 0.0511, 0.0769, 1.683]]

Expected: [[0, 0.0589, 0.1764, 0, 0.2022, 0.0358, 0, 0.945, 0.0965, 0, 0.0054, 0.3304, 0.3966, 0.5864, 0.0714, 0, 0.0809, 0.2333, 0.1422, 1.096, 1.2717, 1.0334, 0.0551, 0.2465, 0.0511, 0.0769, 1.683]]