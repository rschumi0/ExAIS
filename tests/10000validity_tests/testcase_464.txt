import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Add37021 = tf.keras.layers.Input(shape=([2, 2, 2]))
in1Add37021 = tf.keras.layers.Input(shape=([2, 2, 2]))
in0Con90902 = tf.keras.layers.Input(shape=([4]))
in0ELU8248 = tf.keras.layers.Input(shape=([2, 2, 1, 1]))
in0Con70918 = tf.keras.layers.Input(shape=([12, 1, 1, 2]))
in0Sub29974 = tf.keras.layers.Input(shape=([3, 2, 2]))
in1Sub29974 = tf.keras.layers.Input(shape=([3, 2, 2]))

Add37021 = keras.layers.Add(name = 'Add37021', )([in0Add37021,in1Add37021])
Res16214 = keras.layers.Reshape((2, 4), name = 'Res16214', )(Add37021)
Fla80704 = keras.layers.Flatten(name = 'Fla80704', )(Res16214)
Con90902 = keras.layers.Concatenate(axis=1, name = 'Con90902', )([Fla80704,in0Con90902])
ELU8248 = keras.layers.ELU(alpha=-1.870175055566225, name = 'ELU8248', input_shape=(2, 2, 1, 1))(in0ELU8248)
Con86989 = keras.layers.Conv3DTranspose(3, (1, 2, 1),strides=(1, 1, 1), padding='same', name = 'Con86989', )(ELU8248)
Fla87120 = keras.layers.Flatten(name = 'Fla87120', )(Con86989)
Lea98897 = keras.layers.LeakyReLU(alpha=5.272184093242075, name = 'Lea98897', )(Fla87120)
Max76723 = keras.layers.Maximum(name = 'Max76723', )([Con90902,Lea98897])
Res58098 = keras.layers.Reshape((12, 1), name = 'Res58098', )(Max76723)
Res8914 = keras.layers.Reshape((12, 1, 1), name = 'Res8914', )(Res58098)
Res15956 = keras.layers.Reshape((12, 1, 1, 1), name = 'Res15956', )(Res8914)
Con70918 = keras.layers.Concatenate(axis=4, name = 'Con70918', )([Res15956,in0Con70918])
Sub29974 = keras.layers.Subtract(name = 'Sub29974', )([in0Sub29974,in1Sub29974])
Res52727 = keras.layers.Reshape((3, 2, 2, 1), name = 'Res52727', )(Sub29974)
Cro22416 = keras.layers.Cropping3D(cropping=((1, 1), (0, 0), (0, 1)), name = 'Cro22416', )(Res52727)
Con61701 = keras.layers.Conv3D(3, (1, 2, 1),strides=(1, 1, 1), padding='valid', dilation_rate=(1, 1, 1), name = 'Con61701', )(Cro22416)
Zer48576 = keras.layers.ZeroPadding3D(padding=((11, 0), (0, 0), (0, 0)), name = 'Zer48576', )(Con61701)
Max63488 = keras.layers.Maximum(name = 'Max63488', )([Con70918,Zer48576])
model = tf.keras.models.Model(inputs=[in0Add37021,in1Add37021,in0Con90902,in0ELU8248,in0Con70918,in0Sub29974,in1Sub29974], outputs=Max63488)
w = model.get_layer('Con86989').get_weights() 
w[0] = np.array([[[[[0.8759], [0.6986], [0.9934]]], [[[0.5409], [0.3884], [0.4517]]]]])
w[1] = np.array([0, 0, 0])
model.get_layer('Con86989').set_weights(w) 
w = model.get_layer('Con61701').get_weights() 
w[0] = np.array([[[[[0.3143, 0.1741, 0.4445]]], [[[0.2475, 0.8469, 0.5705]]]]])
w[1] = np.array([0, 0, 0])
model.get_layer('Con61701').set_weights(w) 
in0Add37021 = tf.constant([[[[0.9096, 0.0128], [0.3101, 0.3452]], [[0.232, 0.9543], [0.3214, 0.9835]]]])
in1Add37021 = tf.constant([[[[0.0176, 0.9126], [0.3064, 0.5142]], [[0.1492, 0.7223], [0.6921, 0.3816]]]])
in0Con90902 = tf.constant([[0.9168, 0.9666, 0.7485, 0.9957]])
in0ELU8248 = tf.constant([[[[[0.6511]], [[0.8092]]], [[[0.2737]], [[0.7521]]]]])
in0Con70918 = tf.constant([[[[[0.6715, 0.589]]], [[[0.1299, 0.5786]]], [[[0.81, 0.6126]]], [[[0.5915, 0.3625]]], [[[0.7804, 0.6415]]], [[[0.3147, 0.2172]]], [[[0.0163, 0.3227]]], [[[0.4397, 0.4979]]], [[[0.7732, 0.8191]]], [[[0.6175, 0.3992]]], [[[0.9552, 0.8132]]], [[[0.5101, 0.0899]]]]])
in0Sub29974 = tf.constant([[[[0.8274, 0.6799], [0.9202, 0.4507]], [[0.9938, 0.5184], [0.82, 0.8321]], [[0.6952, 0.991], [0.568, 0.6473]]]])
in1Sub29974 = tf.constant([[[[0.4994, 0.475], [0.4789, 0.593]], [[0.6834, 0.3153], [0.1336, 0.6375]], [[0.3882, 0.387], [0.3116, 0.4059]]]])
print (np.array2string(model.predict([in0Add37021,in1Add37021,in0Con90902,in0ELU8248,in0Con70918,in0Sub29974,in1Sub29974],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Max63488.png')

LAdd37021 = add_layer([[[[[0.9096, 0.0128], [0.3101, 0.3452]], [[0.232, 0.9543], [0.3214, 0.9835]]]], [[[[0.0176, 0.9126], [0.3064, 0.5142]], [[0.1492, 0.7223], [0.6921, 0.3816]]]]], Add37021), 
LRes16214 = reshape_layer(Add37021, [2, 4], Res16214), 
LFla80704 = flatten_layer(Res16214, Fla80704), 
LCon90902 = concatenate_layer([Fla80704,[[0.9168, 0.9666, 0.7485, 0.9957]]], 1, Con90902), 
LELU8248 = elu_layer([[[[[0.6511]], [[0.8092]]], [[[0.2737]], [[0.7521]]]]], -1.870175055566225, ELU8248), 
LCon86989 = conv3D_transpose_layer(ELU8248, 1, 2, 1,[[[[[0.8759], [0.6986], [0.9934]]], [[[0.5409], [0.3884], [0.4517]]]]],[0, 0, 0], 1, 1, 1, true, Con86989), 
LFla87120 = flatten_layer(Con86989, Fla87120), 
LLea98897 = leaky_relu_layer(Fla87120, 5.272184093242075, Lea98897), 
LMax76723 = maximum_layer([Con90902,Lea98897], Max76723), 
LRes58098 = reshape_layer(Max76723, [12, 1], Res58098), 
LRes8914 = reshape_layer(Res58098, [12, 1, 1], Res8914), 
LRes15956 = reshape_layer(Res8914, [12, 1, 1, 1], Res15956), 
LCon70918 = concatenate_layer([Res15956,[[[[[0.6715, 0.589]]], [[[0.1299, 0.5786]]], [[[0.81, 0.6126]]], [[[0.5915, 0.3625]]], [[[0.7804, 0.6415]]], [[[0.3147, 0.2172]]], [[[0.0163, 0.3227]]], [[[0.4397, 0.4979]]], [[[0.7732, 0.8191]]], [[[0.6175, 0.3992]]], [[[0.9552, 0.8132]]], [[[0.5101, 0.0899]]]]]], 4, Con70918), 
LSub29974 = subtract_layer([[[[0.8274, 0.6799], [0.9202, 0.4507]], [[0.9938, 0.5184], [0.82, 0.8321]], [[0.6952, 0.991], [0.568, 0.6473]]]], [[[[0.4994, 0.475], [0.4789, 0.593]], [[0.6834, 0.3153], [0.1336, 0.6375]], [[0.3882, 0.387], [0.3116, 0.4059]]]], Sub29974), 
LRes52727 = reshape_layer(Sub29974, [3, 2, 2, 1], Res52727), 
LCro22416 = cropping3D_layer(Res52727, 1, 1, 0, 0, 0, 1, Cro22416), 
LCon61701 = conv3D_layer(Cro22416, 1, 2, 1,[[[[[0.3143, 0.1741, 0.4445]]], [[[0.2475, 0.8469, 0.5705]]]]],[0, 0, 0], 1, 1, 1, false, 1, 1, 1, Con61701), 
LZer48576 = zero_padding3D_layer(Con61701, 11, 0, 0, 0, 0, 0, Zer48576), 
LMax63488 = maximum_layer([Con70918,Zer48576], Max63488), 
exec_layers([LAdd37021,LRes16214,LFla80704,LCon90902,LELU8248,LCon86989,LFla87120,LLea98897,LMax76723,LRes58098,LRes8914,LRes15956,LCon70918,LSub29974,LRes52727,LCro22416,LCon61701,LZer48576,LMax63488],["Add37021","Res16214","Fla80704","Con90902","ELU8248","Con86989","Fla87120","Lea98897","Max76723","Res58098","Res8914","Res15956","Con70918","Sub29974","Res52727","Cro22416","Con61701","Zer48576","Max63488"],Max63488,"Max63488")

Actual (Unparsed): [[[[[0.9272000, 0.6715000, 0.5890000]]], [[[0.9254000, 0.1299000, 0.5786000]]], [[[0.6468027, 0.8100000, 0.6126000]]], [[[1.0609582, 0.5915000, 0.3625000]]], [[[0.8181943, 0.7804000, 0.6415000]]], [[[1.6766000, 0.3147000, 0.2172000]]], [[[1.0135000, 0.0163000, 0.3227000]]], [[[1.3651000, 0.4397000, 0.4979000]]], [[[0.9168000, 0.7732000, 0.8191000]]], [[[0.9666000, 0.6175000, 0.3992000]]], [[[0.7485000, 0.9552000, 0.8132000]]], [[[0.9957000, 0.6353528, 0.5295640]]]]]

Expected (Unparsed): [[[[[0.9271999999999999,0.6715,0.589]]],[[[0.9254,0.1299,0.5786]]],[[[0.6468027399999999,0.81,0.6126]]],[[[1.06095827,0.5915,0.3625]]],[[[0.8181943600000001,0.7804,0.6415]]],[[[1.6766,0.3147,0.2172]]],[[[1.0135,0.0163,0.3227]]],[[[1.3651,0.4397,0.4979]]],[[[0.9168,0.7732,0.8191]]],[[[0.9666,0.6175,0.3992]]],[[[0.7485,0.9552,0.8132]]],[[[0.9957,0.6353527999999998,0.5295639999999999]]]]]

Actual:   [[[[[0.9272, 0.6715, 0.589]]], [[[0.9254, 0.1299, 0.5786]]], [[[0.6469, 0.81, 0.6126]]], [[[1.061, 0.5915, 0.3625]]], [[[0.8182, 0.7804, 0.6415]]], [[[1.6766, 0.3147, 0.2172]]], [[[1.0135, 0.0163, 0.3227]]], [[[1.3651, 0.4397, 0.4979]]], [[[0.9168, 0.7732, 0.8191]]], [[[0.9666, 0.6175, 0.3992]]], [[[0.7485, 0.9552, 0.8132]]], [[[0.9957, 0.6354, 0.5296]]]]]

Expected: [[[[[0.9272, 0.6715, 0.589]]], [[[0.9254, 0.1299, 0.5786]]], [[[0.6469, 0.81, 0.6126]]], [[[1.061, 0.5915, 0.3625]]], [[[0.8182, 0.7804, 0.6415]]], [[[1.6766, 0.3147, 0.2172]]], [[[1.0135, 0.0163, 0.3227]]], [[[1.3651, 0.4397, 0.4979]]], [[[0.9168, 0.7732, 0.8191]]], [[[0.9666, 0.6175, 0.3992]]], [[[0.7485, 0.9552, 0.8132]]], [[[0.9957, 0.6354, 0.5296]]]]]