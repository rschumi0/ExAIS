import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Glo48829 = tf.keras.layers.Input(shape=([1, 2]))

Glo48829 = keras.layers.GlobalMaxPool1D(name = 'Glo48829', )(in0Glo48829)
Lea43557 = keras.layers.LeakyReLU(alpha=5.5795066131007784, name = 'Lea43557', )(Glo48829)
Res30926 = keras.layers.Reshape((2, 1), name = 'Res30926', )(Lea43557)
Res46562 = keras.layers.Reshape((2, 1, 1), name = 'Res46562', )(Res30926)
Res35549 = keras.layers.Reshape((2, 1, 1, 1), name = 'Res35549', )(Res46562)
Up_68705 = keras.layers.UpSampling3D(size=(1, 2, 2), name = 'Up_68705', )(Res35549)
model = tf.keras.models.Model(inputs=[in0Glo48829], outputs=Up_68705)
in0Glo48829 = tf.constant([[[1.3836, 1.1391]]])
print (np.array2string(model.predict([in0Glo48829],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Up_68705.png')

LGlo48829 = global_max_pool1D_layer([[[1.3836, 1.1391]]], Glo48829), 
LLea43557 = leaky_relu_layer(Glo48829, 5.5795066131007784, Lea43557), 
LRes30926 = reshape_layer(Lea43557, [2, 1], Res30926), 
LRes46562 = reshape_layer(Res30926, [2, 1, 1], Res46562), 
LRes35549 = reshape_layer(Res46562, [2, 1, 1, 1], Res35549), 
LUp_68705 = up_sampling3D_layer(Res35549, 1, 2, 2, Up_68705), 
exec_layers([LGlo48829,LLea43557,LRes30926,LRes46562,LRes35549,LUp_68705],["Glo48829","Lea43557","Res30926","Res46562","Res35549","Up_68705"],Up_68705,"Up_68705")

Actual (Unparsed): [[[[[1.3836000], [1.3836000]], [[1.3836000], [1.3836000]]], [[[1.1391000], [1.1391000]], [[1.1391000], [1.1391000]]]]]

Expected (Unparsed): [[[[[1.3836],[1.3836]],[[1.3836],[1.3836]]],[[[1.1391],[1.1391]],[[1.1391],[1.1391]]]]]

Actual:   [[[[[1.3836], [1.3836]], [[1.3836], [1.3836]]], [[[1.1391], [1.1391]], [[1.1391], [1.1391]]]]]

Expected: [[[[[1.3836], [1.3836]], [[1.3836], [1.3836]]], [[[1.1391], [1.1391]], [[1.1391], [1.1391]]]]]