import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Ave35015 = tf.keras.layers.Input(shape=([2, 2]))
in0Con89999 = tf.keras.layers.Input(shape=([2, 2, 3, 1]))
in0Lea82921 = tf.keras.layers.Input(shape=([2, 1, 2]))

Ave35015 = keras.layers.AveragePooling1D(pool_size=(1), strides=(1), padding='valid', name = 'Ave35015', )(in0Ave35015)
Res32016 = keras.layers.Reshape((2, 2, 1), name = 'Res32016', )(Ave35015)
Res76929 = keras.layers.Reshape((2, 2, 1, 1), name = 'Res76929', )(Res32016)
Zer84227 = keras.layers.ZeroPadding3D(padding=((0, 0), (0, 0), (2, 0)), name = 'Zer84227', )(Res76929)
Con89999 = keras.layers.Concatenate(axis=4, name = 'Con89999', )([Zer84227,in0Con89999])
Lea82921 = keras.layers.LeakyReLU(alpha=2.9032509049540165, name = 'Lea82921', input_shape=(2, 1, 2))(in0Lea82921)
Res61340 = keras.layers.Reshape((2, 1, 2, 1), name = 'Res61340', )(Lea82921)
Con86109 = keras.layers.Conv3DTranspose(2, (2, 1, 1),strides=(1, 1, 1), padding='same', name = 'Con86109', )(Res61340)
Zer27537 = keras.layers.ZeroPadding3D(padding=((0, 0), (1, 0), (1, 0)), name = 'Zer27537', )(Con86109)
Ave24157 = keras.layers.Average(name = 'Ave24157', )([Con89999,Zer27537])
Sof28363 = keras.layers.Softmax(axis=1, name = 'Sof28363', )(Ave24157)
Res54347 = keras.layers.Reshape((2, 2, 6), name = 'Res54347', )(Sof28363)
Res47660 = keras.layers.Reshape((2, 12), name = 'Res47660', )(Res54347)
Ave45678 = keras.layers.AveragePooling1D(pool_size=(1), strides=(11), padding='valid', name = 'Ave45678', )(Res47660)
model = tf.keras.models.Model(inputs=[in0Ave35015,in0Con89999,in0Lea82921], outputs=Ave45678)
w = model.get_layer('Con86109').get_weights() 
w[0] = np.array([[[[[0.7052], [0.2139]]]], [[[[0.4094], [0.7003]]]]])
w[1] = np.array([0, 0])
model.get_layer('Con86109').set_weights(w) 
in0Ave35015 = tf.constant([[[1.4908, 1.5337], [1.8009, 1.8673]]])
in0Con89999 = tf.constant([[[[[0.7961], [0.1327], [0.1691]], [[0.3346], [0.6161], [0.4627]]], [[[0.4302], [0.1288], [0.8239]], [[0.9303], [0.2231], [0.7511]]]]])
in0Lea82921 = tf.constant([[[[0.9716, 0.2895]], [[0.6611, 0.0481]]]])
print (np.array2string(model.predict([in0Ave35015,in0Con89999,in0Lea82921],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Ave45678.png')

LAve35015 = average_pooling1D_layer([[[1.4908, 1.5337], [1.8009, 1.8673]]], 1, 1, false, Ave35015), 
LRes32016 = reshape_layer(Ave35015, [2, 2, 1], Res32016), 
LRes76929 = reshape_layer(Res32016, [2, 2, 1, 1], Res76929), 
LZer84227 = zero_padding3D_layer(Res76929, 0, 0, 0, 0, 2, 0, Zer84227), 
LCon89999 = concatenate_layer([Zer84227,[[[[[0.7961], [0.1327], [0.1691]], [[0.3346], [0.6161], [0.4627]]], [[[0.4302], [0.1288], [0.8239]], [[0.9303], [0.2231], [0.7511]]]]]], 4, Con89999), 
LLea82921 = leaky_relu_layer([[[[0.9716, 0.2895]], [[0.6611, 0.0481]]]], 2.9032509049540165, Lea82921), 
LRes61340 = reshape_layer(Lea82921, [2, 1, 2, 1], Res61340), 
LCon86109 = conv3D_transpose_layer(Res61340, 2, 1, 1,[[[[[0.7052], [0.2139]]]], [[[[0.4094], [0.7003]]]]],[0, 0], 1, 1, 1, true, Con86109), 
LZer27537 = zero_padding3D_layer(Con86109, 0, 0, 1, 0, 1, 0, Zer27537), 
LAve24157 = average_layer([Con89999,Zer27537], Ave24157), 
LSof28363 = softmax_layer(Ave24157, 1, Sof28363), 
LRes54347 = reshape_layer(Sof28363, [2, 2, 6], Res54347), 
LRes47660 = reshape_layer(Res54347, [2, 12], Res47660), 
LAve45678 = average_pooling1D_layer(Res47660, 1, 11, false, Ave45678), 
exec_layers([LAve35015,LRes32016,LRes76929,LZer84227,LCon89999,LLea82921,LRes61340,LCon86109,LZer27537,LAve24157,LSof28363,LRes54347,LRes47660,LAve45678],["Ave35015","Res32016","Res76929","Zer84227","Con89999","Lea82921","Res61340","Con86109","Zer27537","Ave24157","Sof28363","Res54347","Res47660","Ave45678"],Ave45678,"Ave45678")

Actual (Unparsed): [[[0.5000000, 0.5456104, 0.5000000, 0.5004875, 0.4613150, 0.4188734, 0.5000000, 0.4260832, 0.4776638, 0.4724036, 0.4648225, 0.4452823]]]

Expected (Unparsed): [[[0.5,0.5456103533638064,0.5,0.5004874998455234,0.46131496959603996,0.41887337736022023,0.5,0.42608315249009754,0.4776638209881498,0.4724036317814476,0.46482246151347284,0.445282343877816]]]

Actual:   [[[0.5, 0.5457, 0.5, 0.5005, 0.4614, 0.4189, 0.5, 0.4261, 0.4777, 0.4725, 0.4649, 0.4453]]]

Expected: [[[0.5, 0.5457, 0.5, 0.5005, 0.4614, 0.4189, 0.5, 0.4261, 0.4777, 0.4725, 0.4649, 0.4453]]]