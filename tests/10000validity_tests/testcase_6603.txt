import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Min67443 = tf.keras.layers.Input(shape=([1, 1, 2]))
in1Min67443 = tf.keras.layers.Input(shape=([1, 1, 2]))

Min67443 = keras.layers.Minimum(name = 'Min67443', )([in0Min67443,in1Min67443])
Res15286 = keras.layers.Reshape((1, 1, 2, 1), name = 'Res15286', )(Min67443)
Con78966 = keras.layers.Conv3D(3, (1, 1, 2),strides=(1, 1, 1), padding='valid', dilation_rate=(1, 1, 1), name = 'Con78966', )(Res15286)
Res37980 = keras.layers.Reshape((1, 1, 3), name = 'Res37980', )(Con78966)
Glo67091 = keras.layers.GlobalMaxPool2D(name = 'Glo67091', )(Res37980)
model = tf.keras.models.Model(inputs=[in0Min67443,in1Min67443], outputs=Glo67091)
w = model.get_layer('Con78966').get_weights() 
w[0] = np.array([[[[[0.1916, 0.5433, 0.9737]], [[0.2178, 0.1861, 0.7259]]]]])
w[1] = np.array([0, 0, 0])
model.get_layer('Con78966').set_weights(w) 
in0Min67443 = tf.constant([[[[0.7666, 0.5656]]]])
in1Min67443 = tf.constant([[[[0.4232, 0.3373]]]])
print (np.array2string(model.predict([in0Min67443,in1Min67443],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Glo67091.png')

LMin67443 = minimum_layer([[[[[0.7666, 0.5656]]]], [[[[0.4232, 0.3373]]]]], Min67443), 
LRes15286 = reshape_layer(Min67443, [1, 1, 2, 1], Res15286), 
LCon78966 = conv3D_layer(Res15286, 1, 1, 2,[[[[[0.1916, 0.5433, 0.9737]], [[0.2178, 0.1861, 0.7259]]]]],[0, 0, 0], 1, 1, 1, false, 1, 1, 1, Con78966), 
LRes37980 = reshape_layer(Con78966, [1, 1, 3], Res37980), 
LGlo67091 = global_max_pool2D_layer(Res37980, Glo67091), 
exec_layers([LMin67443,LRes15286,LCon78966,LRes37980,LGlo67091],["Min67443","Res15286","Con78966","Res37980","Glo67091"],Glo67091,"Glo67091")

Actual (Unparsed): [[0.1545491, 0.2926961, 0.6569159]]

Expected (Unparsed): [[0.15454906,0.29269608999999996,0.65691591]]

Actual:   [[0.1546, 0.2927, 0.657]]

Expected: [[0.1546, 0.2927, 0.657]]