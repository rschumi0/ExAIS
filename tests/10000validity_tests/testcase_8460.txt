import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Den58526 = tf.keras.layers.Input(shape=([2, 5, 5]))

Den58526 = keras.layers.Dense(1,name = 'Den58526', )(in0Den58526)
Zer23740 = keras.layers.ZeroPadding2D(padding=((1, 1), (1, 1)), name = 'Zer23740', )(Den58526)
Sof78196 = keras.layers.Softmax(axis=1, name = 'Sof78196', )(Zer23740)
model = tf.keras.models.Model(inputs=[in0Den58526], outputs=Sof78196)
w = model.get_layer('Den58526').get_weights() 
w[0] = np.array([[0.855], [0.383], [0.9997], [0.3134], [0.2711]])
w[1] = np.array([0.8147])
model.get_layer('Den58526').set_weights(w) 
in0Den58526 = tf.constant([[[[0.2745, 0.7552, 0.7917, 0.6778, 0.1766], [0.2229, 0.2316, 0.4806, 0.1401, 0.4475], [0.3375, 0.8158, 0.5398, 0.0434, 0.7297], [0.6389, 0.8839, 0.0965, 0.292, 0.5487], [0.1581, 0.3574, 0.1762, 0.745, 0.2663]], [[0.4556, 0.203, 0.9574, 0.4514, 0.0277], [0.847, 0.7434, 0.4787, 0.0079, 0.1004], [0.2253, 0.9269, 0.5796, 0.7743, 0.4239], [0.1455, 0.4513, 0.2105, 0.831, 0.3117], [0.1828, 0.9588, 0.7619, 0.5451, 0.2684]]]])
print (np.array2string(model.predict([in0Den58526],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Sof78196.png')

LDen58526 = dense_layer([[[[0.2745, 0.7552, 0.7917, 0.6778, 0.1766], [0.2229, 0.2316, 0.4806, 0.1401, 0.4475], [0.3375, 0.8158, 0.5398, 0.0434, 0.7297], [0.6389, 0.8839, 0.0965, 0.292, 0.5487], [0.1581, 0.3574, 0.1762, 0.745, 0.2663]], [[0.4556, 0.203, 0.9574, 0.4514, 0.0277], [0.847, 0.7434, 0.4787, 0.0079, 0.1004], [0.2253, 0.9269, 0.5796, 0.7743, 0.4239], [0.1455, 0.4513, 0.2105, 0.831, 0.3117], [0.1828, 0.9588, 0.7619, 0.5451, 0.2684]]]], [[0.855], [0.383], [0.9997], [0.3134], [0.2711]],[0.8147], Den58526), 
LZer23740 = zero_padding2D_layer(Den58526, 1, 1, 1, 1, Zer23740), 
LSof78196 = softmax_layer(Zer23740, 1, Sof78196), 
exec_layers([LDen58526,LZer23740,LSof78196],["Den58526","Zer23740","Sof78196"],Sof78196,"Sof78196")

Actual (Unparsed): [[[[0.2500000], [0.0419984], [0.0555788], [0.0483145], [0.0668465], [0.0580811], [0.2500000]], [[0.2500000], [0.4585334], [0.3165446], [0.4217893], [0.5121558], [0.2787803], [0.2500000]], [[0.2500000], [0.4574697], [0.5722978], [0.4815818], [0.3541512], [0.6050575], [0.2500000]], [[0.2500000], [0.0419984], [0.0555788], [0.0483145], [0.0668465], [0.0580811], [0.2500000]]]]

Expected (Unparsed): [[[[0.25],[0.04199844966831029],[0.055578785459102185],[0.048314454758734665],[0.0668465218265353],[0.05808109107153109],[0.25]],[[0.25],[0.4585333723328784],[0.31654464242526686],[0.421789332057288],[0.5121558087312206],[0.2787802747950337],[0.25]],[[0.25],[0.45746972833050104],[0.5722977866565288],[0.4815817584252426],[0.3541511476157087],[0.6050575430619041],[0.25]],[[0.25],[0.04199844966831029],[0.055578785459102185],[0.048314454758734665],[0.0668465218265353],[0.05808109107153109],[0.25]]]]

Actual:   [[[[0.25], [0.042], [0.0556], [0.0484], [0.0669], [0.0581], [0.25]], [[0.25], [0.4586], [0.3166], [0.4218], [0.5122], [0.2788], [0.25]], [[0.25], [0.4575], [0.5723], [0.4816], [0.3542], [0.6051], [0.25]], [[0.25], [0.042], [0.0556], [0.0484], [0.0669], [0.0581], [0.25]]]]

Expected: [[[[0.25], [0.042], [0.0556], [0.0484], [0.0669], [0.0581], [0.25]], [[0.25], [0.4586], [0.3166], [0.4218], [0.5122], [0.2788], [0.25]], [[0.25], [0.4575], [0.5723], [0.4816], [0.3542], [0.6051], [0.25]], [[0.25], [0.042], [0.0556], [0.0484], [0.0669], [0.0581], [0.25]]]]