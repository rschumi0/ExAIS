import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Ave51180 = tf.keras.layers.Input(shape=([2, 1, 1, 1]))
in1Ave51180 = tf.keras.layers.Input(shape=([2, 1, 1, 1]))
in0Lea21849 = tf.keras.layers.Input(shape=([2, 2, 1, 1]))
in0Con40629 = tf.keras.layers.Input(shape=([8]))
in0Max86228 = tf.keras.layers.Input(shape=([1, 1, 1, 1]))
in1Max86228 = tf.keras.layers.Input(shape=([1, 1, 1, 1]))
in0Con85012 = tf.keras.layers.Input(shape=([11]))
in0Fla34170 = tf.keras.layers.Input(shape=([2, 2, 3]))

Ave51180 = keras.layers.Average(name = 'Ave51180', )([in0Ave51180,in1Ave51180])
Zer88584 = keras.layers.ZeroPadding3D(padding=((0, 0), (1, 0), (0, 0)), name = 'Zer88584', )(Ave51180)
Lea21849 = keras.layers.LeakyReLU(alpha=6.121495320381217, name = 'Lea21849', input_shape=(2, 2, 1, 1))(in0Lea21849)
Add65033 = keras.layers.Add(name = 'Add65033', )([Zer88584,Lea21849])
Res8845 = keras.layers.Reshape((2, 2, 1), name = 'Res8845', )(Add65033)
Res91017 = keras.layers.Reshape((2, 2), name = 'Res91017', )(Res8845)
Fla7793 = keras.layers.Flatten(name = 'Fla7793', )(Res91017)
Con40629 = keras.layers.Concatenate(axis=1, name = 'Con40629', )([Fla7793,in0Con40629])
Max86228 = keras.layers.Maximum(name = 'Max86228', )([in0Max86228,in1Max86228])
Res13825 = keras.layers.Reshape((1, 1, 1), name = 'Res13825', )(Max86228)
Res29884 = keras.layers.Reshape((1, 1), name = 'Res29884', )(Res13825)
Fla15713 = keras.layers.Flatten(name = 'Fla15713', )(Res29884)
Con85012 = keras.layers.Concatenate(axis=1, name = 'Con85012', )([Fla15713,in0Con85012])
Fla34170 = keras.layers.Flatten(name = 'Fla34170', )(in0Fla34170)
Add21812 = keras.layers.Add(name = 'Add21812', )([Con85012,Fla34170])
Mul9594 = keras.layers.Multiply(name = 'Mul9594', )([Con40629,Add21812])
Res65644 = keras.layers.Reshape((12, 1), name = 'Res65644', )(Mul9594)
Res89844 = keras.layers.Reshape((12, 1, 1), name = 'Res89844', )(Res65644)
Res71246 = keras.layers.Reshape((12, 1, 1, 1), name = 'Res71246', )(Res89844)
Con48133 = keras.layers.Conv3DTranspose(3, (4, 1, 1),strides=(1, 1, 1), padding='valid', name = 'Con48133', )(Res71246)
model = tf.keras.models.Model(inputs=[in0Ave51180,in1Ave51180,in0Lea21849,in0Con40629,in0Max86228,in1Max86228,in0Con85012,in0Fla34170], outputs=Con48133)
w = model.get_layer('Con48133').get_weights() 
w[0] = np.array([[[[[0.9658], [0.5948], [0.9075]]]], [[[[0.5801], [0.3884], [0.6365]]]], [[[[0.0877], [0.0812], [0.2021]]]], [[[[0.5903], [0.2401], [0.0651]]]]])
w[1] = np.array([0, 0, 0])
model.get_layer('Con48133').set_weights(w) 
in0Ave51180 = tf.constant([[[[[0.2573]]], [[[0.8459]]]]])
in1Ave51180 = tf.constant([[[[[0.8991]]], [[[0.0139]]]]])
in0Lea21849 = tf.constant([[[[[0.6672]], [[0.5535]]], [[[0.0677]], [[0.3199]]]]])
in0Con40629 = tf.constant([[0.3622, 0.4583, 0.6169, 0.9882, 0.3405, 0.4051, 0.9055, 0.1047]])
in0Max86228 = tf.constant([[[[[0.7413]]]]])
in1Max86228 = tf.constant([[[[[0.6103]]]]])
in0Con85012 = tf.constant([[0.5071, 0.4128, 0.6489, 0.7473, 0.8938, 0.8238, 0.1396, 0.5919, 0.2059, 0.2622, 0.5638]])
in0Fla34170 = tf.constant([[[[1.518, 1.5126, 1.0952], [1.2902, 1.8944, 1.0429]], [[1.3499, 1.8118, 1.604], [1.095, 1.0614, 1.525]]]])
print (np.array2string(model.predict([in0Ave51180,in1Ave51180,in0Lea21849,in0Con40629,in0Max86228,in1Max86228,in0Con85012,in0Fla34170],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Con48133.png')

LAve51180 = average_layer([[[[[[0.2573]]], [[[0.8459]]]]], [[[[[0.8991]]], [[[0.0139]]]]]], Ave51180), 
LZer88584 = zero_padding3D_layer(Ave51180, 0, 0, 1, 0, 0, 0, Zer88584), 
LLea21849 = leaky_relu_layer([[[[[0.6672]], [[0.5535]]], [[[0.0677]], [[0.3199]]]]], 6.121495320381217, Lea21849), 
LAdd65033 = add_layer([Zer88584,Lea21849], Add65033), 
LRes8845 = reshape_layer(Add65033, [2, 2, 1], Res8845), 
LRes91017 = reshape_layer(Res8845, [2, 2], Res91017), 
LFla7793 = flatten_layer(Res91017, Fla7793), 
LCon40629 = concatenate_layer([Fla7793,[[0.3622, 0.4583, 0.6169, 0.9882, 0.3405, 0.4051, 0.9055, 0.1047]]], 1, Con40629), 
LMax86228 = maximum_layer([[[[[[0.7413]]]]], [[[[[0.6103]]]]]], Max86228), 
LRes13825 = reshape_layer(Max86228, [1, 1, 1], Res13825), 
LRes29884 = reshape_layer(Res13825, [1, 1], Res29884), 
LFla15713 = flatten_layer(Res29884, Fla15713), 
LCon85012 = concatenate_layer([Fla15713,[[0.5071, 0.4128, 0.6489, 0.7473, 0.8938, 0.8238, 0.1396, 0.5919, 0.2059, 0.2622, 0.5638]]], 1, Con85012), 
LFla34170 = flatten_layer([[[[1.518, 1.5126, 1.0952], [1.2902, 1.8944, 1.0429]], [[1.3499, 1.8118, 1.604], [1.095, 1.0614, 1.525]]]], Fla34170), 
LAdd21812 = add_layer([Con85012,Fla34170], Add21812), 
LMul9594 = multiply_layer([Con40629,Add21812], Mul9594), 
LRes65644 = reshape_layer(Mul9594, [12, 1], Res65644), 
LRes89844 = reshape_layer(Res65644, [12, 1, 1], Res89844), 
LRes71246 = reshape_layer(Res89844, [12, 1, 1, 1], Res71246), 
LCon48133 = conv3D_transpose_layer(Res71246, 4, 1, 1,[[[[[0.9658], [0.5948], [0.9075]]]], [[[[0.5801], [0.3884], [0.6365]]]], [[[[0.0877], [0.0812], [0.2021]]]], [[[[0.5903], [0.2401], [0.0651]]]]],[0, 0, 0], 1, 1, 1, false, Con48133), 
exec_layers([LAve51180,LZer88584,LLea21849,LAdd65033,LRes8845,LRes91017,LFla7793,LCon40629,LMax86228,LRes13825,LRes29884,LFla15713,LCon85012,LFla34170,LAdd21812,LMul9594,LRes65644,LRes89844,LRes71246,LCon48133],["Ave51180","Zer88584","Lea21849","Add65033","Res8845","Res91017","Fla7793","Con40629","Max86228","Res13825","Res29884","Fla15713","Con85012","Fla34170","Add21812","Mul9594","Res65644","Res89844","Res71246","Con48133"],Con48133,"Con48133")

Actual (Unparsed): [[[[[1.4558518, 0.8966045, 1.3679701]]], [[[3.0819693, 1.9450071, 3.0337310]]], [[[1.5567308, 1.0708891, 1.8521392]]], [[[2.5537124, 1.4519805, 1.9445002]]], [[[3.1257281, 1.6909130, 1.9631800]]], [[[1.6000624, 1.0421405, 1.7149927]]], [[[2.7521582, 1.5691246, 2.0698934]]], [[[3.2829661, 1.9696294, 2.8451883]]], [[[2.4823279, 1.5157104, 2.2347403]]], [[[1.9033989, 1.0824120, 1.4311816]]], [[[2.6671325, 1.4412803, 1.6997369]]], [[[1.3940663, 0.8179020, 1.1165069]]], [[[0.5430614, 0.3087933, 0.4157291]]], [[[0.7266660, 0.3055228, 0.1222224]]], [[[0.1290970, 0.0525092, 0.0142372]]]]]

Expected (Unparsed): [[[[[1.4558517103680002,0.896604470208,1.3679700012]]],[[[3.081969355738,1.9450071691159998,3.0337310067149996]]],[[[1.5567308559209998,1.070889106348,1.8521392123009996]]],[[[2.553712420265,1.451980535588,1.944500213575]]],[[[3.125728216977,1.6909130462330002,1.9631799827789997]]],[[[1.600062459078,1.04214053282,1.7149927488230001]]],[[[2.752158142987,1.5691245583740003,2.0698933185120003]]],[[[3.282966072456,1.969629330062,2.8451882136]]],[[[2.4823278774219997,1.515710423489,2.2347402508689997]]],[[[1.903398839972,1.082411945641,1.431181639911]]],[[[2.6671324861579997,1.441280309084,1.699736856878]]],[[[1.3940663134959999,0.817901959151,1.1165068406839997]]],[[[0.543061431473,0.308793263443,0.415729069029]]],[[[0.726665996412,0.305522829612,0.12222237543600001]]],[[[0.129097051608,0.052509236136000004,0.014237198136000002]]]]]

Actual:   [[[[[1.4559, 0.8967, 1.368]]], [[[3.082, 1.9451, 3.0338]]], [[[1.5568, 1.0709, 1.8522]]], [[[2.5538, 1.452, 1.9446]]], [[[3.1258, 1.691, 1.9632]]], [[[1.6001, 1.0422, 1.715]]], [[[2.7522, 1.5692, 2.0699]]], [[[3.283, 1.9697, 2.8452]]], [[[2.4824, 1.5158, 2.2348]]], [[[1.9034, 1.0825, 1.4312]]], [[[2.6672, 1.4413, 1.6998]]], [[[1.3941, 0.818, 1.1166]]], [[[0.5431, 0.3088, 0.4158]]], [[[0.7267, 0.3056, 0.1223]]], [[[0.1291, 0.0526, 0.0143]]]]]

Expected: [[[[[1.4559, 0.8967, 1.368]]], [[[3.082, 1.9451, 3.0338]]], [[[1.5568, 1.0709, 1.8522]]], [[[2.5538, 1.452, 1.9446]]], [[[3.1258, 1.691, 1.9632]]], [[[1.6001, 1.0422, 1.715]]], [[[2.7522, 1.5692, 2.0699]]], [[[3.283, 1.9697, 2.8452]]], [[[2.4824, 1.5158, 2.2348]]], [[[1.9034, 1.0825, 1.4312]]], [[[2.6672, 1.4413, 1.6998]]], [[[1.3941, 0.818, 1.1166]]], [[[0.5431, 0.3088, 0.4158]]], [[[0.7267, 0.3056, 0.1223]]], [[[0.1291, 0.0526, 0.0143]]]]]