import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Ave33349 = tf.keras.layers.Input(shape=([2, 2]))
in1Ave33349 = tf.keras.layers.Input(shape=([2, 2]))
in0Con63860 = tf.keras.layers.Input(shape=([2, 2, 2]))
in0Sub98822 = tf.keras.layers.Input(shape=([2, 2, 3]))
in1Sub98822 = tf.keras.layers.Input(shape=([2, 2, 3]))
in0Min39305 = tf.keras.layers.Input(shape=([1, 2, 2, 2]))
in1Min39305 = tf.keras.layers.Input(shape=([1, 2, 2, 2]))
in0Con32478 = tf.keras.layers.Input(shape=([2, 2, 1]))

Ave33349 = keras.layers.Average(name = 'Ave33349', )([in0Ave33349,in1Ave33349])
Res10076 = keras.layers.Reshape((2, 2, 1), name = 'Res10076', )(Ave33349)
Con63860 = keras.layers.Concatenate(axis=3, name = 'Con63860', )([Res10076,in0Con63860])
Sub98822 = keras.layers.Subtract(name = 'Sub98822', )([in0Sub98822,in1Sub98822])
ReL26556 = keras.layers.ReLU(max_value=0.03723798317213323, negative_slope=1.2756745500965678, threshold=1.237925448213495, name = 'ReL26556', )(Sub98822)
Min39305 = keras.layers.Minimum(name = 'Min39305', )([in0Min39305,in1Min39305])
Res15238 = keras.layers.Reshape((1, 2, 4), name = 'Res15238', )(Min39305)
Con1365 = keras.layers.Conv2D(2, (1, 2),strides=(1, 1), padding='valid', dilation_rate=(1, 1), name = 'Con1365', )(Res15238)
Zer93993 = keras.layers.ZeroPadding2D(padding=((1, 0), (1, 0)), name = 'Zer93993', )(Con1365)
Con32478 = keras.layers.Concatenate(axis=3, name = 'Con32478', )([Zer93993,in0Con32478])
Sub21519 = keras.layers.Subtract(name = 'Sub21519', )([ReL26556,Con32478])
Max10667 = keras.layers.Maximum(name = 'Max10667', )([Con63860,Sub21519])
model = tf.keras.models.Model(inputs=[in0Ave33349,in1Ave33349,in0Con63860,in0Sub98822,in1Sub98822,in0Min39305,in1Min39305,in0Con32478], outputs=Max10667)
w = model.get_layer('Con1365').get_weights() 
w[0] = np.array([[[[0.5848, 0.6252], [0.0749, 0.8972], [0.4881, 0.8317], [0.4192, 0.5587]], [[0.4103, 0.2897], [0.0588, 0.4787], [0.0141, 0.3512], [0.6716, 0.3048]]]])
w[1] = np.array([0, 0])
model.get_layer('Con1365').set_weights(w) 
in0Ave33349 = tf.constant([[[0.0346, 0.3233], [0.5953, 0.7367]]])
in1Ave33349 = tf.constant([[[0.3266, 0.1765], [0.7041, 0.4642]]])
in0Con63860 = tf.constant([[[[0.7741, 0.3478], [0.2228, 0.4294]], [[0.9055, 0.24], [0.8585, 0.2112]]]])
in0Sub98822 = tf.constant([[[[0.2421, 0.7304, 0.7169], [0.9002, 0.8545, 0.8429]], [[0.4284, 0.6019, 0.2419], [0.6631, 0.2432, 0.8344]]]])
in1Sub98822 = tf.constant([[[[0.1389, 0.9054, 0.1083], [0.0031, 0.2143, 0.1547]], [[0.6541, 0.4501, 0.2694], [0.8524, 0.5695, 0.8585]]]])
in0Min39305 = tf.constant([[[[[0.6165, 0.1148], [0.3348, 0.7698]], [[0.387, 0.819], [0.572, 0.2711]]]]])
in1Min39305 = tf.constant([[[[[0.546, 0.4519], [0.4377, 0.7363]], [[0.9425, 0.0661], [0.6788, 0.6163]]]]])
in0Con32478 = tf.constant([[[[0.625], [0.5444]], [[0.2675], [0.576]]]])
print (np.array2string(model.predict([in0Ave33349,in1Ave33349,in0Con63860,in0Sub98822,in1Sub98822,in0Min39305,in1Min39305,in0Con32478],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Max10667.png')

LAve33349 = average_layer([[[[0.0346, 0.3233], [0.5953, 0.7367]]], [[[0.3266, 0.1765], [0.7041, 0.4642]]]], Ave33349), 
LRes10076 = reshape_layer(Ave33349, [2, 2, 1], Res10076), 
LCon63860 = concatenate_layer([Res10076,[[[[0.7741, 0.3478], [0.2228, 0.4294]], [[0.9055, 0.24], [0.8585, 0.2112]]]]], 3, Con63860), 
LSub98822 = subtract_layer([[[[0.2421, 0.7304, 0.7169], [0.9002, 0.8545, 0.8429]], [[0.4284, 0.6019, 0.2419], [0.6631, 0.2432, 0.8344]]]], [[[[0.1389, 0.9054, 0.1083], [0.0031, 0.2143, 0.1547]], [[0.6541, 0.4501, 0.2694], [0.8524, 0.5695, 0.8585]]]], Sub98822), 
LReL26556 = relu_layer(Sub98822, 0.03723798317213323, 1.2756745500965678, 1.237925448213495, ReL26556), 
LMin39305 = minimum_layer([[[[[[0.6165, 0.1148], [0.3348, 0.7698]], [[0.387, 0.819], [0.572, 0.2711]]]]], [[[[[0.546, 0.4519], [0.4377, 0.7363]], [[0.9425, 0.0661], [0.6788, 0.6163]]]]]], Min39305), 
LRes15238 = reshape_layer(Min39305, [1, 2, 4], Res15238), 
LCon1365 = conv2D_layer(Res15238, 1, 2,[[[[0.5848, 0.6252], [0.0749, 0.8972], [0.4881, 0.8317], [0.4192, 0.5587]], [[0.4103, 0.2897], [0.0588, 0.4787], [0.0141, 0.3512], [0.6716, 0.3048]]]],[0, 0], 1, 1, false, 1, 1, Con1365), 
LZer93993 = zero_padding2D_layer(Con1365, 1, 0, 1, 0, Zer93993), 
LCon32478 = concatenate_layer([Zer93993,[[[[0.625], [0.5444]], [[0.2675], [0.576]]]]], 3, Con32478), 
LSub21519 = subtract_layer(ReL26556,Con32478, Sub21519), 
LMax10667 = maximum_layer([Con63860,Sub21519], Max10667), 
exec_layers([LAve33349,LRes10076,LCon63860,LSub98822,LReL26556,LMin39305,LRes15238,LCon1365,LZer93993,LCon32478,LSub21519,LMax10667],["Ave33349","Res10076","Con63860","Sub98822","ReL26556","Min39305","Res15238","Con1365","Zer93993","Con32478","Sub21519","Max10667"],Max10667,"Max10667")

Actual (Unparsed): [[[[0.1806000, 0.7741000, 0.3478000], [0.2499000, 0.2228000, 0.4294000]], [[0.6497000, 0.9055000, 0.2400000], [0.6004500, 0.8585000, 0.2112000]]]]

Expected (Unparsed): [[[[0.1806,0.7741,0.3478],[0.24989999999999998,0.2228,0.4294]],[[0.6496999999999999,0.9055,0.24],[0.60045,0.8585,0.2112]]]]

Actual:   [[[[0.1806, 0.7741, 0.3478], [0.2499, 0.2228, 0.4294]], [[0.6497, 0.9055, 0.24], [0.6005, 0.8585, 0.2112]]]]

Expected: [[[[0.1806, 0.7741, 0.3478], [0.2499, 0.2228, 0.4294]], [[0.6497, 0.9055, 0.24], [0.6005, 0.8585, 0.2112]]]]