import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Mul95055 = tf.keras.layers.Input(shape=([1, 2, 2]))
in1Mul95055 = tf.keras.layers.Input(shape=([1, 2, 2]))
in0Con71390 = tf.keras.layers.Input(shape=([2, 1]))
in0Sub41676 = tf.keras.layers.Input(shape=([2, 3]))
in1Sub41676 = tf.keras.layers.Input(shape=([2, 3]))

Mul95055 = keras.layers.Multiply(name = 'Mul95055', )([in0Mul95055,in1Mul95055])
Thr65789 = keras.layers.ThresholdedReLU(theta=5.552954535492071, name = 'Thr65789', )(Mul95055)
Res29915 = keras.layers.Reshape((1, 4), name = 'Res29915', )(Thr65789)
Con34301 = keras.layers.Conv1D(2, (1),strides=(1), padding='same', dilation_rate=(1), name = 'Con34301', )(Res29915)
Zer96642 = keras.layers.ZeroPadding1D(padding=((1, 0)), name = 'Zer96642', )(Con34301)
Con71390 = keras.layers.Concatenate(axis=2, name = 'Con71390', )([Zer96642,in0Con71390])
Sub41676 = keras.layers.Subtract(name = 'Sub41676', )([in0Sub41676,in1Sub41676])
Mul18719 = keras.layers.Multiply(name = 'Mul18719', )([Con71390,Sub41676])
model = tf.keras.models.Model(inputs=[in0Mul95055,in1Mul95055,in0Con71390,in0Sub41676,in1Sub41676], outputs=Mul18719)
w = model.get_layer('Con34301').get_weights() 
w[0] = np.array([[[0.2038, 0.9882], [0.9058, 0.7921], [0.3755, 0.897], [0.9994, 0.8201]]])
w[1] = np.array([0, 0])
model.get_layer('Con34301').set_weights(w) 
in0Mul95055 = tf.constant([[[[0.3991, 0.0876], [0.073, 0.949]]]])
in1Mul95055 = tf.constant([[[[0.7041, 0.752], [0.262, 0.4804]]]])
in0Con71390 = tf.constant([[[0.419], [0.3873]]])
in0Sub41676 = tf.constant([[[0.442, 0.4847, 0.1538], [0.0097, 0.2574, 0.1125]]])
in1Sub41676 = tf.constant([[[0.0149, 0.689, 0.4359], [0.243, 0.7428, 0.2275]]])
print (np.array2string(model.predict([in0Mul95055,in1Mul95055,in0Con71390,in0Sub41676,in1Sub41676],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Mul18719.png')

LMul95055 = multiply_layer([[[[[0.3991, 0.0876], [0.073, 0.949]]]], [[[[0.7041, 0.752], [0.262, 0.4804]]]]], Mul95055), 
LThr65789 = thresholded_relu_layer(Mul95055, 5.552954535492071, Thr65789), 
LRes29915 = reshape_layer(Thr65789, [1, 4], Res29915), 
LCon34301 = conv1D_layer(Res29915, 1,[[[0.2038, 0.9882], [0.9058, 0.7921], [0.3755, 0.897], [0.9994, 0.8201]]],[0, 0], 1, true, 1, Con34301), 
LZer96642 = zero_padding1D_layer(Con34301, 1, 0, Zer96642), 
LCon71390 = concatenate_layer([Zer96642,[[[0.419], [0.3873]]]], 2, Con71390), 
LSub41676 = subtract_layer([[[0.442, 0.4847, 0.1538], [0.0097, 0.2574, 0.1125]]], [[[0.0149, 0.689, 0.4359], [0.243, 0.7428, 0.2275]]], Sub41676), 
LMul18719 = multiply_layer([Con71390,Sub41676], Mul18719), 
exec_layers([LMul95055,LThr65789,LRes29915,LCon34301,LZer96642,LCon71390,LSub41676,LMul18719],["Mul95055","Thr65789","Res29915","Con34301","Zer96642","Con71390","Sub41676","Mul18719"],Mul18719,"Mul18719")

Actual (Unparsed): [[[0.0000000, -0.0000000, -0.1181999], [-0.0000000, -0.0000000, -0.0445395]]]

Expected (Unparsed): [[[0.0,-0.0,-0.1181999],[-0.0,-0.0,-0.0445395]]]

Actual:   [[[0, -0, -0.1181], [-0, -0, -0.0445]]]

Expected: [[[0, -0, -0.1181], [-0, -0, -0.0445]]]