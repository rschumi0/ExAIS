import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Ave60431 = tf.keras.layers.Input(shape=([1, 2, 1, 1]))
in1Ave60431 = tf.keras.layers.Input(shape=([1, 2, 1, 1]))
in0Sim53410 = tf.keras.layers.Input(shape=([2, 3]))
in0Con62321 = tf.keras.layers.Input(shape=([1]))

Ave60431 = keras.layers.Average(name = 'Ave60431', )([in0Ave60431,in1Ave60431])
Res40385 = keras.layers.Reshape((1, 2, 1), name = 'Res40385', )(Ave60431)
Res22363 = keras.layers.Reshape((1, 2), name = 'Res22363', )(Res40385)
Fla27816 = keras.layers.Flatten(name = 'Fla27816', )(Res22363)
Sim53410 = keras.layers.SimpleRNN(2,name = 'Sim53410', )(in0Sim53410)
Res48933 = keras.layers.Reshape((2, 1), name = 'Res48933', )(Sim53410)
Res51857 = keras.layers.Reshape((2, 1, 1), name = 'Res51857', )(Res48933)
Res57909 = keras.layers.Reshape((2, 1, 1, 1), name = 'Res57909', )(Res51857)
Glo46772 = keras.layers.GlobalMaxPool3D(name = 'Glo46772', )(Res57909)
Con62321 = keras.layers.Concatenate(axis=1, name = 'Con62321', )([Glo46772,in0Con62321])
Mul18915 = keras.layers.Multiply(name = 'Mul18915', )([Fla27816,Con62321])
ReL86581 = keras.layers.ReLU(max_value=2.899436324017445, negative_slope=7.333440004544137, threshold=4.472679052536888, name = 'ReL86581', )(Mul18915)
Lea17572 = keras.layers.LeakyReLU(alpha=5.02531143534235, name = 'Lea17572', )(ReL86581)
model = tf.keras.models.Model(inputs=[in0Ave60431,in1Ave60431,in0Sim53410,in0Con62321], outputs=Lea17572)
w = model.get_layer('Sim53410').get_weights() 
w[0] = np.array([[9, 9], [6, 4], [4, 3]])
w[1] = np.array([[9, 7], [4, 1]])
w[2] = np.array([3, 10])
model.get_layer('Sim53410').set_weights(w) 
in0Ave60431 = tf.constant([[[[[0.5348]], [[0.6615]]]]])
in1Ave60431 = tf.constant([[[[[0.3923]], [[0.1191]]]]])
in0Sim53410 = tf.constant([[[10, 10, 2], [10, 4, 6]]])
in0Con62321 = tf.constant([[0.3507]])
print (np.array2string(model.predict([in0Ave60431,in1Ave60431,in0Sim53410,in0Con62321],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Lea17572.png')

LAve60431 = average_layer([[[[[[0.5348]], [[0.6615]]]]], [[[[[0.3923]], [[0.1191]]]]]], Ave60431), 
LRes40385 = reshape_layer(Ave60431, [1, 2, 1], Res40385), 
LRes22363 = reshape_layer(Res40385, [1, 2], Res22363), 
LFla27816 = flatten_layer(Res22363, Fla27816), 
LSim53410 = simple_rnn_layer([[[10, 10, 2], [10, 4, 6]]],[[9, 9], [6, 4], [4, 3]],[[9, 7], [4, 1]],[3, 10], Sim53410), 
LRes48933 = reshape_layer(Sim53410, [2, 1], Res48933), 
LRes51857 = reshape_layer(Res48933, [2, 1, 1], Res51857), 
LRes57909 = reshape_layer(Res51857, [2, 1, 1, 1], Res57909), 
LGlo46772 = global_max_pool3D_layer(Res57909, Glo46772), 
LCon62321 = concatenate_layer([Glo46772,[[0.3507]]], 1, Con62321), 
LMul18915 = multiply_layer([Fla27816,Con62321], Mul18915), 
LReL86581 = relu_layer(Mul18915, 2.899436324017445, 7.333440004544137, 4.472679052536888, ReL86581), 
LLea17572 = leaky_relu_layer(ReL86581, 5.02531143534235, Lea17572), 
exec_layers([LAve60431,LRes40385,LRes22363,LFla27816,LSim53410,LRes48933,LRes51857,LRes57909,LGlo46772,LCon62321,LMul18915,LReL86581,LLea17572],["Ave60431","Res40385","Res22363","Fla27816","Sim53410","Res48933","Res51857","Res57909","Glo46772","Con62321","Mul18915","ReL86581","Lea17572"],Lea17572,"Lea17572")

Actual (Unparsed): [[-147.7477120, -159.7864890]]

Expected (Unparsed): [[-147.74771099006944,-159.78648763832618]]

Actual:   [[-147.7477, -159.7864]]

Expected: [[-147.7477, -159.7864]]