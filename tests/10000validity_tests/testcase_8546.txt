import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Max40364 = tf.keras.layers.Input(shape=([2, 2, 1, 2]))
in1Max40364 = tf.keras.layers.Input(shape=([2, 2, 1, 2]))
in0Sof12101 = tf.keras.layers.Input(shape=([2, 1, 2, 2]))
in0Con28890 = tf.keras.layers.Input(shape=([4, 32]))

Max40364 = keras.layers.Maximum(name = 'Max40364', )([in0Max40364,in1Max40364])
Den58671 = keras.layers.Dense(3,name = 'Den58671', )(Max40364)
Zer13511 = keras.layers.ZeroPadding3D(padding=((1, 1), (1, 1), (1, 1)), name = 'Zer13511', )(Den58671)
Res81171 = keras.layers.Reshape((4, 4, 9), name = 'Res81171', )(Zer13511)
Res4092 = keras.layers.Reshape((4, 36), name = 'Res4092', )(Res81171)
Sof12101 = keras.layers.Softmax(axis=1, name = 'Sof12101', input_shape=(2, 1, 2, 2))(in0Sof12101)
Res59255 = keras.layers.Reshape((2, 1, 4), name = 'Res59255', )(Sof12101)
Up_70986 = keras.layers.UpSampling2D(size=(1, 2), name = 'Up_70986', )(Res59255)
Res50071 = keras.layers.Reshape((2, 8), name = 'Res50071', )(Up_70986)
Con45765 = keras.layers.Conv1D(4, (1),strides=(1), padding='valid', dilation_rate=(1), name = 'Con45765', )(Res50071)
Zer14729 = keras.layers.ZeroPadding1D(padding=((2, 0)), name = 'Zer14729', )(Con45765)
Con28890 = keras.layers.Concatenate(axis=2, name = 'Con28890', )([Zer14729,in0Con28890])
Max10216 = keras.layers.Maximum(name = 'Max10216', )([Res4092,Con28890])
model = tf.keras.models.Model(inputs=[in0Max40364,in1Max40364,in0Sof12101,in0Con28890], outputs=Max10216)
w = model.get_layer('Den58671').get_weights() 
w[0] = np.array([[0.1746, 0.3104, 0.4466], [0.2074, 0.4788, 0.2938]])
w[1] = np.array([0.3211, 0.3751, 0.8724])
model.get_layer('Den58671').set_weights(w) 
w = model.get_layer('Con45765').get_weights() 
w[0] = np.array([[[0.8115, 0.0825, 0.9222, 0.5798], [0.0566, 0.744, 0.0987, 0.6026], [0.3318, 0.4935, 0.5611, 0.3666], [0.0748, 0.064, 0.5508, 0.107], [0.1215, 0.3233, 0.7718, 0.4346], [0.2388, 0.1486, 0.2869, 0.1526], [0.1131, 0.8617, 0.1554, 0.6628], [0.4749, 0.4196, 0.4018, 0.0263]]])
w[1] = np.array([0, 0, 0, 0])
model.get_layer('Con45765').set_weights(w) 
in0Max40364 = tf.constant([[[[[0.4759, 0.3259]], [[0.279, 0.5182]]], [[[0.132, 0.8089]], [[0.0398, 0.3948]]]]])
in1Max40364 = tf.constant([[[[[0.5339, 0.8212]], [[0.4564, 0.0769]]], [[[0.7576, 0.0915]], [[0.3047, 0.4852]]]]])
in0Sof12101 = tf.constant([[[[[0.0002, 0.2378], [0.2129, 0.3453]]], [[[0.4104, 0.8026], [0.2866, 0.793]]]]])
in0Con28890 = tf.constant([[[0.2193, 0.9194, 0.6285, 0.5152, 0.3233, 0.5355, 0.6048, 0.3111, 0.7694, 0.7621, 0.7022, 0.7366, 0.6857, 0.056, 0.7651, 0.445, 0.6293, 0.5077, 0.9645, 0.6305, 0.128, 0.8075, 0.955, 0.4464, 0.7247, 0.7959, 0.1128, 0.6852, 0.1657, 0.2709, 0.4567, 0.7978], [0.0894, 0.3855, 0.776, 0.3185, 0.9442, 0.5365, 0.5645, 0.156, 0.8922, 0.1189, 0.5882, 0.0165, 0.141, 0.8998, 0.306, 0.4282, 0.4849, 0.053, 0.9045, 0.4544, 0.836, 0.0861, 0.4076, 0.2011, 0.1773, 0.993, 0.1795, 0.6516, 0.6806, 0.9663, 0.152, 0.1964], [0.6966, 0.9188, 0.2759, 0.4602, 0.9489, 0.8777, 0.0198, 0.6807, 0.5383, 0.0408, 0.2255, 0.9391, 0.3028, 0.9126, 0.2606, 0.0041, 0.6655, 0.4747, 0.2097, 0.4143, 0.3524, 0.7884, 0.7887, 0.6939, 0.2638, 0.773, 0.7806, 0.2748, 0.3441, 0.1628, 0.0467, 0.779], [0.5084, 0.8015, 0.5917, 0.807, 0.559, 0.5058, 0.7328, 0.2712, 0.5511, 0.6985, 0.1569, 0.6166, 0.2526, 0.8943, 0.5351, 0.9783, 0.1838, 0.9072, 0.4096, 0.4396, 0.2187, 0.3401, 0.2686, 0.0757, 0.8852, 0.516, 0.0786, 0.3934, 0.3085, 0.5158, 0.059, 0.1119]]])
print (np.array2string(model.predict([in0Max40364,in1Max40364,in0Sof12101,in0Con28890],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Max10216.png')

LMax40364 = maximum_layer([[[[[[0.4759, 0.3259]], [[0.279, 0.5182]]], [[[0.132, 0.8089]], [[0.0398, 0.3948]]]]], [[[[[0.5339, 0.8212]], [[0.4564, 0.0769]]], [[[0.7576, 0.0915]], [[0.3047, 0.4852]]]]]], Max40364), 
LDen58671 = dense_layer(Max40364, [[0.1746, 0.3104, 0.4466], [0.2074, 0.4788, 0.2938]],[0.3211, 0.3751, 0.8724], Den58671), 
LZer13511 = zero_padding3D_layer(Den58671, 1, 1, 1, 1, 1, 1, Zer13511), 
LRes81171 = reshape_layer(Zer13511, [4, 4, 9], Res81171), 
LRes4092 = reshape_layer(Res81171, [4, 36], Res4092), 
LSof12101 = softmax_layer([[[[[0.0002, 0.2378], [0.2129, 0.3453]]], [[[0.4104, 0.8026], [0.2866, 0.793]]]]], 1, Sof12101), 
LRes59255 = reshape_layer(Sof12101, [2, 1, 4], Res59255), 
LUp_70986 = up_sampling2D_layer(Res59255, 1, 2, Up_70986), 
LRes50071 = reshape_layer(Up_70986, [2, 8], Res50071), 
LCon45765 = conv1D_layer(Res50071, 1,[[[0.8115, 0.0825, 0.9222, 0.5798], [0.0566, 0.744, 0.0987, 0.6026], [0.3318, 0.4935, 0.5611, 0.3666], [0.0748, 0.064, 0.5508, 0.107], [0.1215, 0.3233, 0.7718, 0.4346], [0.2388, 0.1486, 0.2869, 0.1526], [0.1131, 0.8617, 0.1554, 0.6628], [0.4749, 0.4196, 0.4018, 0.0263]]],[0, 0, 0, 0], 1, false, 1, Con45765), 
LZer14729 = zero_padding1D_layer(Con45765, 2, 0, Zer14729), 
LCon28890 = concatenate_layer([Zer14729,[[[0.2193, 0.9194, 0.6285, 0.5152, 0.3233, 0.5355, 0.6048, 0.3111, 0.7694, 0.7621, 0.7022, 0.7366, 0.6857, 0.056, 0.7651, 0.445, 0.6293, 0.5077, 0.9645, 0.6305, 0.128, 0.8075, 0.955, 0.4464, 0.7247, 0.7959, 0.1128, 0.6852, 0.1657, 0.2709, 0.4567, 0.7978], [0.0894, 0.3855, 0.776, 0.3185, 0.9442, 0.5365, 0.5645, 0.156, 0.8922, 0.1189, 0.5882, 0.0165, 0.141, 0.8998, 0.306, 0.4282, 0.4849, 0.053, 0.9045, 0.4544, 0.836, 0.0861, 0.4076, 0.2011, 0.1773, 0.993, 0.1795, 0.6516, 0.6806, 0.9663, 0.152, 0.1964], [0.6966, 0.9188, 0.2759, 0.4602, 0.9489, 0.8777, 0.0198, 0.6807, 0.5383, 0.0408, 0.2255, 0.9391, 0.3028, 0.9126, 0.2606, 0.0041, 0.6655, 0.4747, 0.2097, 0.4143, 0.3524, 0.7884, 0.7887, 0.6939, 0.2638, 0.773, 0.7806, 0.2748, 0.3441, 0.1628, 0.0467, 0.779], [0.5084, 0.8015, 0.5917, 0.807, 0.559, 0.5058, 0.7328, 0.2712, 0.5511, 0.6985, 0.1569, 0.6166, 0.2526, 0.8943, 0.5351, 0.9783, 0.1838, 0.9072, 0.4096, 0.4396, 0.2187, 0.3401, 0.2686, 0.0757, 0.8852, 0.516, 0.0786, 0.3934, 0.3085, 0.5158, 0.059, 0.1119]]]], 2, Con28890), 
LMax10216 = maximum_layer([Res4092,Con28890], Max10216), 
exec_layers([LMax40364,LDen58671,LZer13511,LRes81171,LRes4092,LSof12101,LRes59255,LUp_70986,LRes50071,LCon45765,LZer14729,LCon28890,LMax10216],["Max40364","Den58671","Zer13511","Res81171","Res4092","Sof12101","Res59255","Up_70986","Res50071","Con45765","Zer14729","Con28890","Max10216"],Max10216,"Max10216")

Actual (Unparsed): [[[0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.2193000, 0.9194000, 0.6285000, 0.5152000, 0.3233000, 0.5355000, 0.6048000, 0.3111000, 0.7694000, 0.7621000, 0.7022000, 0.7366000, 0.6857000, 0.0560000, 0.7651000, 0.4450000, 0.6293000, 0.5077000, 0.9645000, 0.6305000, 0.1280000, 0.8075000, 0.9550000, 0.4464000, 0.7247000, 0.7959000, 0.1128000, 0.6852000, 0.1657000, 0.2709000, 0.4567000, 0.7978000], [0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0894000, 0.3855000, 0.7760000, 0.3185000, 0.9442000, 0.5365000, 0.5645000, 0.1560000, 0.8922000, 0.9340131, 1.3521083, 0.0165000, 0.1410000, 0.8998000, 0.3060000, 0.4282000, 0.4849000, 0.5082621, 0.9045000, 1.2284754, 0.8360000, 0.0861000, 0.4076000, 0.2011000, 0.1773000, 0.9930000, 0.1795000, 0.6516000, 0.6806000, 0.9663000, 0.1520000, 0.1964000], [0.9077930, 1.3265720, 1.5319124, 1.2260372, 0.6966000, 0.9188000, 0.2759000, 0.4602000, 0.9489000, 0.8777000, 0.0198000, 0.6807000, 0.6211428, 0.9975604, 1.4483990, 0.9391000, 0.3028000, 0.9126000, 0.2606000, 0.0041000, 0.6655000, 0.4749311, 0.7019926, 1.1510308, 0.3524000, 0.7884000, 0.7887000, 0.6939000, 0.2638000, 0.7730000, 0.7806000, 0.2748000, 0.3441000, 0.1628000, 0.0467000, 0.7790000], [1.3152070, 1.8106280, 2.2167876, 1.7062628, 0.5084000, 0.8015000, 0.5917000, 0.8070000, 0.5590000, 0.5058000, 0.7328000, 0.2712000, 0.5511000, 0.6985000, 0.1569000, 0.6166000, 0.2526000, 0.8943000, 0.5351000, 0.9783000, 0.1838000, 0.9072000, 0.4096000, 0.4396000, 0.2187000, 0.3401000, 0.2686000, 0.0757000, 0.8852000, 0.5160000, 0.0786000, 0.3934000, 0.3085000, 0.5158000, 0.0590000, 0.1119000]]]

Expected (Unparsed): [[[0,0,0,0,0.2193,0.9194,0.6285,0.5152,0.3233,0.5355,0.6048,0.3111,0.7694,0.7621,0.7022,0.7366,0.6857,0.056,0.7651,0.445,0.6293,0.5077,0.9645,0.6305,0.128,0.8075,0.955,0.4464,0.7247,0.7959,0.1128,0.6852,0.1657,0.2709,0.4567,0.7978],[0,0,0,0,0.0894,0.3855,0.776,0.3185,0.9442,0.5365,0.5645,0.156,0.8922,0.9340131200000001,1.3521082999999998,0.0165,0.141,0.8998,0.306,0.4282,0.4849,0.50826212,0.9045,1.2284753999999998,0.836,0.0861,0.4076,0.2011,0.1773,0.993,0.1795,0.6516,0.6806,0.9663,0.152,0.1964],[0.9077930388237273,1.3265719701373926,1.531912403702872,1.2260372448434886,0.6966,0.9188,0.2759,0.4602,0.9489,0.8777,0.0198,0.6807,0.62114282,0.99756036,1.44839898,0.9391,0.3028,0.9126,0.2606,0.0041,0.6655,0.4749311,0.7019926400000001,1.15103078,0.3524,0.7884,0.7887,0.6939,0.2638,0.773,0.7806,0.2748,0.3441,0.1628,0.0467,0.779],[1.3152069611762727,1.8106280298626074,2.2167875962971286,1.7062627551565117,0.5084,0.8015,0.5917,0.807,0.559,0.5058,0.7328,0.2712,0.5511,0.6985,0.1569,0.6166,0.2526,0.8943,0.5351,0.9783,0.1838,0.9072,0.4096,0.4396,0.2187,0.3401,0.2686,0.0757,0.8852,0.516,0.0786,0.3934,0.3085,0.5158,0.059,0.1119]]]

Actual:   [[[0, 0, 0, 0, 0.2193, 0.9194, 0.6285, 0.5152, 0.3233, 0.5355, 0.6048, 0.3111, 0.7694, 0.7621, 0.7022, 0.7366, 0.6857, 0.056, 0.7651, 0.445, 0.6293, 0.5077, 0.9645, 0.6305, 0.128, 0.8075, 0.955, 0.4464, 0.7247, 0.7959, 0.1128, 0.6852, 0.1657, 0.2709, 0.4567, 0.7978], [0, 0, 0, 0, 0.0894, 0.3855, 0.776, 0.3185, 0.9442, 0.5365, 0.5645, 0.156, 0.8922, 0.9341, 1.3522, 0.0165, 0.141, 0.8998, 0.306, 0.4282, 0.4849, 0.5083, 0.9045, 1.2285, 0.836, 0.0861, 0.4076, 0.2011, 0.1773, 0.993, 0.1795, 0.6516, 0.6806, 0.9663, 0.152, 0.1964], [0.9078, 1.3266, 1.532, 1.2261, 0.6966, 0.9188, 0.2759, 0.4602, 0.9489, 0.8777, 0.0198, 0.6807, 0.6212, 0.9976, 1.4484, 0.9391, 0.3028, 0.9126, 0.2606, 0.0041, 0.6655, 0.475, 0.702, 1.1511, 0.3524, 0.7884, 0.7887, 0.6939, 0.2638, 0.773, 0.7806, 0.2748, 0.3441, 0.1628, 0.0467, 0.779], [1.3153, 1.8107, 2.2168, 1.7063, 0.5084, 0.8015, 0.5917, 0.807, 0.559, 0.5058, 0.7328, 0.2712, 0.5511, 0.6985, 0.1569, 0.6166, 0.2526, 0.8943, 0.5351, 0.9783, 0.1838, 0.9072, 0.4096, 0.4396, 0.2187, 0.3401, 0.2686, 0.0757, 0.8852, 0.516, 0.0786, 0.3934, 0.3085, 0.5158, 0.059, 0.1119]]]

Expected: [[[0, 0, 0, 0, 0.2193, 0.9194, 0.6285, 0.5152, 0.3233, 0.5355, 0.6048, 0.3111, 0.7694, 0.7621, 0.7022, 0.7366, 0.6857, 0.056, 0.7651, 0.445, 0.6293, 0.5077, 0.9645, 0.6305, 0.128, 0.8075, 0.955, 0.4464, 0.7247, 0.7959, 0.1128, 0.6852, 0.1657, 0.2709, 0.4567, 0.7978], [0, 0, 0, 0, 0.0894, 0.3855, 0.776, 0.3185, 0.9442, 0.5365, 0.5645, 0.156, 0.8922, 0.9341, 1.3522, 0.0165, 0.141, 0.8998, 0.306, 0.4282, 0.4849, 0.5083, 0.9045, 1.2285, 0.836, 0.0861, 0.4076, 0.2011, 0.1773, 0.993, 0.1795, 0.6516, 0.6806, 0.9663, 0.152, 0.1964], [0.9078, 1.3266, 1.532, 1.2261, 0.6966, 0.9188, 0.2759, 0.4602, 0.9489, 0.8777, 0.0198, 0.6807, 0.6212, 0.9976, 1.4484, 0.9391, 0.3028, 0.9126, 0.2606, 0.0041, 0.6655, 0.475, 0.702, 1.1511, 0.3524, 0.7884, 0.7887, 0.6939, 0.2638, 0.773, 0.7806, 0.2748, 0.3441, 0.1628, 0.0467, 0.779], [1.3153, 1.8107, 2.2168, 1.7063, 0.5084, 0.8015, 0.5917, 0.807, 0.559, 0.5058, 0.7328, 0.2712, 0.5511, 0.6985, 0.1569, 0.6166, 0.2526, 0.8943, 0.5351, 0.9783, 0.1838, 0.9072, 0.4096, 0.4396, 0.2187, 0.3401, 0.2686, 0.0757, 0.8852, 0.516, 0.0786, 0.3934, 0.3085, 0.5158, 0.059, 0.1119]]]