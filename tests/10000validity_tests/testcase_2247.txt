import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Up_73874 = tf.keras.layers.Input(shape=([1, 1]))
in0Con98088 = tf.keras.layers.Input(shape=([4, 5, 2]))
in0Min18732 = tf.keras.layers.Input(shape=([2, 1, 1, 1]))
in1Min18732 = tf.keras.layers.Input(shape=([2, 1, 1, 1]))
in0Con90438 = tf.keras.layers.Input(shape=([3, 2]))
in0Dot80558 = tf.keras.layers.Input(shape=([3, 3]))
in1Dot80558 = tf.keras.layers.Input(shape=([3, 3]))
in0Con89785 = tf.keras.layers.Input(shape=([3, 3, 2]))
in0Ave20359 = tf.keras.layers.Input(shape=([1, 1]))
in1Ave20359 = tf.keras.layers.Input(shape=([1, 1]))

Up_73874 = keras.layers.UpSampling1D(size=(2), name = 'Up_73874', )(in0Up_73874)
Bat69876 = keras.layers.BatchNormalization(axis=1, epsilon=0.37572565239596634,  name = 'Bat69876', )(Up_73874)
Up_89461 = keras.layers.UpSampling1D(size=(2), name = 'Up_89461', )(Bat69876)
Res91416 = keras.layers.Reshape((4, 1, 1), name = 'Res91416', )(Up_89461)
Zer34681 = keras.layers.ZeroPadding2D(padding=((0, 0), (4, 0)), name = 'Zer34681', )(Res91416)
Con98088 = keras.layers.Concatenate(axis=3, name = 'Con98088', )([Zer34681,in0Con98088])
Min18732 = keras.layers.Minimum(name = 'Min18732', )([in0Min18732,in1Min18732])
Res6135 = keras.layers.Reshape((2, 1, 1), name = 'Res6135', )(Min18732)
Res56524 = keras.layers.Reshape((2, 1), name = 'Res56524', )(Res6135)
Zer21692 = keras.layers.ZeroPadding1D(padding=((1, 0)), name = 'Zer21692', )(Res56524)
Con90438 = keras.layers.Concatenate(axis=2, name = 'Con90438', )([Zer21692,in0Con90438])
Dot80558 = keras.layers.Dot(axes=(2, 2), name = 'Dot80558', )([in0Dot80558,in1Dot80558])
Mul31126 = keras.layers.Multiply(name = 'Mul31126', )([Con90438,Dot80558])
Res81457 = keras.layers.Reshape((3, 3, 1), name = 'Res81457', )(Mul31126)
Con89785 = keras.layers.Concatenate(axis=3, name = 'Con89785', )([Res81457,in0Con89785])
Ave20359 = keras.layers.Average(name = 'Ave20359', )([in0Ave20359,in1Ave20359])
Res11030 = keras.layers.Reshape((1, 1, 1), name = 'Res11030', )(Ave20359)
Loc52788 = keras.layers.LocallyConnected2D(3, (1, 1),strides=(9, 1), name = 'Loc52788', )(Res11030)
Zer70631 = keras.layers.ZeroPadding2D(padding=((2, 0), (2, 0)), name = 'Zer70631', )(Loc52788)
Max96154 = keras.layers.Maximum(name = 'Max96154', )([Con89785,Zer70631])
Zer23904 = keras.layers.ZeroPadding2D(padding=((1, 0), (2, 0)), name = 'Zer23904', )(Max96154)
Min41864 = keras.layers.Minimum(name = 'Min41864', )([Con98088,Zer23904])
model = tf.keras.models.Model(inputs=[in0Up_73874,in0Con98088,in0Min18732,in1Min18732,in0Con90438,in0Dot80558,in1Dot80558,in0Con89785,in0Ave20359,in1Ave20359], outputs=Min41864)
w = model.get_layer('Bat69876').get_weights() 
w[0] = np.array([0.273, 0.6099])
w[1] = np.array([0.8786, 0.5932])
w[2] = np.array([0.2379, 0.7803])
w[3] = np.array([0.0026, 0.2998])
model.get_layer('Bat69876').set_weights(w) 
w = model.get_layer('Loc52788').get_weights() 
w[0] = np.array([[[0.7043, 0.4804, 0.4463]]])
w[1] = np.array([[[0, 0, 0]]])
model.get_layer('Loc52788').set_weights(w) 
in0Up_73874 = tf.constant([[[1.134]]])
in0Con98088 = tf.constant([[[[0.1609, 0.8766], [0.7632, 0.6085], [0.3876, 0.9559], [0.4345, 0.1198], [0.8552, 0.2983]], [[0.2226, 0.5765], [0.0021, 0.5458], [0.1959, 0.7941], [0.166, 0.7528], [0.7856, 0.105]], [[0.5725, 0.806], [0.5353, 0.6036], [0.7065, 0.9405], [0.8144, 0.0348], [0.0204, 0.3447]], [[0.8306, 0.1977], [0.1043, 0.0837], [0.897, 0.5542], [0.7687, 0.2169], [0.1846, 0.4569]]]])
in0Min18732 = tf.constant([[[[[0.1061]]], [[[0.2309]]]]])
in1Min18732 = tf.constant([[[[[0.0467]]], [[[0.1093]]]]])
in0Con90438 = tf.constant([[[0.3246, 0.8199], [0.07, 0.0303], [0.6245, 0.4573]]])
in0Dot80558 = tf.constant([[[0.8133, 0.2481, 0.3441], [0.7558, 0.6571, 0.9684], [0.6101, 0.3503, 0.4469]]])
in1Dot80558 = tf.constant([[[0.1184, 0.3265, 0.0411], [0.5808, 0.8735, 0.8377], [0.5116, 0.8415, 0.7714]]])
in0Con89785 = tf.constant([[[[0.7908, 0.6518], [0.2253, 0.1605], [0.7383, 0.3453]], [[0.134, 0.2324], [0.6136, 0.4919], [0.6837, 0.9376]], [[0.3445, 0.4436], [0.1831, 0.8046], [0.8584, 0.6719]]]])
in0Ave20359 = tf.constant([[[0.3424]]])
in1Ave20359 = tf.constant([[[0.5194]]])
print (np.array2string(model.predict([in0Up_73874,in0Con98088,in0Min18732,in1Min18732,in0Con90438,in0Dot80558,in1Dot80558,in0Con89785,in0Ave20359,in1Ave20359],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Min41864.png')

LUp_73874 = up_sampling1D_layer([[[1.134]]], 2, Up_73874), 
LBat69876 = batch_normalization_layer(Up_73874, 1, 0.37572565239596634, [0.273, 0.6099], [0.8786, 0.5932], [0.2379, 0.7803], [0.0026, 0.2998], Bat69876), 
LUp_89461 = up_sampling1D_layer(Bat69876, 2, Up_89461), 
LRes91416 = reshape_layer(Up_89461, [4, 1, 1], Res91416), 
LZer34681 = zero_padding2D_layer(Res91416, 0, 0, 4, 0, Zer34681), 
LCon98088 = concatenate_layer([Zer34681,[[[[0.1609, 0.8766], [0.7632, 0.6085], [0.3876, 0.9559], [0.4345, 0.1198], [0.8552, 0.2983]], [[0.2226, 0.5765], [0.0021, 0.5458], [0.1959, 0.7941], [0.166, 0.7528], [0.7856, 0.105]], [[0.5725, 0.806], [0.5353, 0.6036], [0.7065, 0.9405], [0.8144, 0.0348], [0.0204, 0.3447]], [[0.8306, 0.1977], [0.1043, 0.0837], [0.897, 0.5542], [0.7687, 0.2169], [0.1846, 0.4569]]]]], 3, Con98088), 
LMin18732 = minimum_layer([[[[[[0.1061]]], [[[0.2309]]]]], [[[[[0.0467]]], [[[0.1093]]]]]], Min18732), 
LRes6135 = reshape_layer(Min18732, [2, 1, 1], Res6135), 
LRes56524 = reshape_layer(Res6135, [2, 1], Res56524), 
LZer21692 = zero_padding1D_layer(Res56524, 1, 0, Zer21692), 
LCon90438 = concatenate_layer([Zer21692,[[[0.3246, 0.8199], [0.07, 0.0303], [0.6245, 0.4573]]]], 2, Con90438), 
LDot80558 = dot_layer([[[0.8133, 0.2481, 0.3441], [0.7558, 0.6571, 0.9684], [0.6101, 0.3503, 0.4469]]], [[[0.1184, 0.3265, 0.0411], [0.5808, 0.8735, 0.8377], [0.5116, 0.8415, 0.7714]]], 2, 2, Dot80558), 
LMul31126 = multiply_layer([Con90438,Dot80558], Mul31126), 
LRes81457 = reshape_layer(Mul31126, [3, 3, 1], Res81457), 
LCon89785 = concatenate_layer([Res81457,[[[[0.7908, 0.6518], [0.2253, 0.1605], [0.7383, 0.3453]], [[0.134, 0.2324], [0.6136, 0.4919], [0.6837, 0.9376]], [[0.3445, 0.4436], [0.1831, 0.8046], [0.8584, 0.6719]]]]], 3, Con89785), 
LAve20359 = average_layer([[[[0.3424]]], [[[0.5194]]]], Ave20359), 
LRes11030 = reshape_layer(Ave20359, [1, 1, 1], Res11030), 
LLoc52788 = locally_connected2D_layer(Res11030, 1, 1,[[[0.7043, 0.4804, 0.4463]]],[[[0, 0, 0]]], 9, 1, Loc52788), 
LZer70631 = zero_padding2D_layer(Loc52788, 2, 0, 2, 0, Zer70631), 
LMax96154 = maximum_layer([Con89785,Zer70631], Max96154), 
LZer23904 = zero_padding2D_layer(Max96154, 1, 0, 2, 0, Zer23904), 
LMin41864 = minimum_layer([Con98088,Zer23904], Min41864), 
exec_layers([LUp_73874,LBat69876,LUp_89461,LRes91416,LZer34681,LCon98088,LMin18732,LRes6135,LRes56524,LZer21692,LCon90438,LDot80558,LMul31126,LRes81457,LCon89785,LAve20359,LRes11030,LLoc52788,LZer70631,LMax96154,LZer23904,LMin41864],["Up_73874","Bat69876","Up_89461","Res91416","Zer34681","Con98088","Min18732","Res6135","Res56524","Zer21692","Con90438","Dot80558","Mul31126","Res81457","Con89785","Ave20359","Res11030","Loc52788","Zer70631","Max96154","Zer23904","Min41864"],Min41864,"Min41864")

Actual (Unparsed): [[[[0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000]], [[0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.1959000, 0.6518000], [0.0000000, 0.1660000, 0.1605000], [0.7299563, 0.7383000, 0.1050000]], [[0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.1340000, 0.2324000], [0.0000000, 0.6136000, 0.0348000], [0.0511052, 0.0204000, 0.3447000]], [[0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.3445000, 0.4436000], [0.0000000, 0.1831000, 0.2169000], [0.4351865, 0.1846000, 0.4569000]]]]

Expected (Unparsed): [[[[0,0,0],[0,0,0],[0,0,0],[0,0,0],[0,0,0]],[[0,0,0],[0,0,0],[0,0.1959,0.6518],[0,0.166,0.1605],[0.729956289483,0.7383,0.105]],[[0,0,0],[0,0,0],[0,0.134,0.2324],[0,0.6136,0.0348],[0.05110521290700001,0.0204,0.3447]],[[0,0,0],[0,0,0],[0,0.3445,0.4436],[0,0.1831,0.2169],[0.435186467371,0.1846,0.4569]]]]

Actual:   [[[[0, 0, 0], [0, 0, 0], [0, 0, 0], [0, 0, 0], [0, 0, 0]], [[0, 0, 0], [0, 0, 0], [0, 0.1959, 0.6518], [0, 0.166, 0.1605], [0.73, 0.7383, 0.105]], [[0, 0, 0], [0, 0, 0], [0, 0.134, 0.2324], [0, 0.6136, 0.0348], [0.0512, 0.0204, 0.3447]], [[0, 0, 0], [0, 0, 0], [0, 0.3445, 0.4436], [0, 0.1831, 0.2169], [0.4352, 0.1846, 0.4569]]]]

Expected: [[[[0, 0, 0], [0, 0, 0], [0, 0, 0], [0, 0, 0], [0, 0, 0]], [[0, 0, 0], [0, 0, 0], [0, 0.1959, 0.6518], [0, 0.166, 0.1605], [0.73, 0.7383, 0.105]], [[0, 0, 0], [0, 0, 0], [0, 0.134, 0.2324], [0, 0.6136, 0.0348], [0.0512, 0.0204, 0.3447]], [[0, 0, 0], [0, 0, 0], [0, 0.3445, 0.4436], [0, 0.1831, 0.2169], [0.4352, 0.1846, 0.4569]]]]