import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Glo71829 = tf.keras.layers.Input(shape=([2, 2, 1]))
in0Con90964 = tf.keras.layers.Input(shape=([2, 1, 1, 3]))
in0Con98577 = tf.keras.layers.Input(shape=([2, 1, 1, 2]))

Glo71829 = keras.layers.GlobalMaxPool2D(name = 'Glo71829', )(in0Glo71829)
Res90460 = keras.layers.Reshape((1, 1), name = 'Res90460', )(Glo71829)
Res30333 = keras.layers.Reshape((1, 1, 1), name = 'Res30333', )(Res90460)
Res3711 = keras.layers.Reshape((1, 1, 1, 1), name = 'Res3711', )(Res30333)
Zer16098 = keras.layers.ZeroPadding3D(padding=((1, 0), (0, 0), (0, 0)), name = 'Zer16098', )(Res3711)
Con90964 = keras.layers.Concatenate(axis=4, name = 'Con90964', )([Zer16098,in0Con90964])
Con98577 = keras.layers.Conv3DTranspose(4, (1, 1, 1),strides=(1, 1, 1), padding='same', name = 'Con98577', )(in0Con98577)
Lea61554 = keras.layers.LeakyReLU(alpha=3.82947489200455, name = 'Lea61554', )(Con98577)
Mul4222 = keras.layers.Multiply(name = 'Mul4222', )([Con90964,Lea61554])
model = tf.keras.models.Model(inputs=[in0Glo71829,in0Con90964,in0Con98577], outputs=Mul4222)
w = model.get_layer('Con98577').get_weights() 
w[0] = np.array([[[[[0.7791, 0.4827], [0.7783, 0.0602], [0.5234, 0.0638], [0.4069, 0.7527]]]]])
w[1] = np.array([0, 0, 0, 0])
model.get_layer('Con98577').set_weights(w) 
in0Glo71829 = tf.constant([[[[1.1996], [1.1119]], [[1.9498], [1.1526]]]])
in0Con90964 = tf.constant([[[[[0.3495, 0.0535, 0.1557]]], [[[0.9415, 0.547, 0.0661]]]]])
in0Con98577 = tf.constant([[[[[0.0766, 0.41]]], [[[0.2671, 0.63]]]]])
print (np.array2string(model.predict([in0Glo71829,in0Con90964,in0Con98577],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Mul4222.png')

LGlo71829 = global_max_pool2D_layer([[[[1.1996], [1.1119]], [[1.9498], [1.1526]]]], Glo71829), 
LRes90460 = reshape_layer(Glo71829, [1, 1], Res90460), 
LRes30333 = reshape_layer(Res90460, [1, 1, 1], Res30333), 
LRes3711 = reshape_layer(Res30333, [1, 1, 1, 1], Res3711), 
LZer16098 = zero_padding3D_layer(Res3711, 1, 0, 0, 0, 0, 0, Zer16098), 
LCon90964 = concatenate_layer([Zer16098,[[[[[0.3495, 0.0535, 0.1557]]], [[[0.9415, 0.547, 0.0661]]]]]], 4, Con90964), 
LCon98577 = conv3D_transpose_layer([[[[[0.0766, 0.41]]], [[[0.2671, 0.63]]]]], 1, 1, 1,[[[[[0.7791, 0.4827], [0.7783, 0.0602], [0.5234, 0.0638], [0.4069, 0.7527]]]]],[0, 0, 0, 0], 1, 1, 1, true, Con98577), 
LLea61554 = leaky_relu_layer(Con98577, 3.82947489200455, Lea61554), 
LMul4222 = multiply_layer([Con90964,Lea61554], Mul4222), 
exec_layers([LGlo71829,LRes90460,LRes30333,LRes3711,LZer16098,LCon90964,LCon98577,LLea61554,LMul4222],["Glo71829","Res90460","Res30333","Res3711","Zer16098","Con90964","Con98577","Lea61554","Mul4222"],Mul4222,"Mul4222")

Actual (Unparsed): [[[[[0.0000000, 0.0294628, 0.0035444, 0.0529031]]], [[[0.9986849, 0.2314301, 0.0984568, 0.0385286]]]]]

Expected (Unparsed): [[[[[0.0,0.029462773109999996,0.0035443985399999994,0.05290305157800001]]],[[[0.998684849778,0.231430049095,0.09845679458,0.03852863173900001]]]]]

Actual:   [[[[[0, 0.0295, 0.0036, 0.053]]], [[[0.9987, 0.2315, 0.0985, 0.0386]]]]]

Expected: [[[[[0, 0.0295, 0.0036, 0.053]]], [[[0.9987, 0.2315, 0.0985, 0.0386]]]]]