import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Min21300 = tf.keras.layers.Input(shape=([2, 1, 1]))
in1Min21300 = tf.keras.layers.Input(shape=([2, 1, 1]))

Min21300 = keras.layers.Minimum(name = 'Min21300', )([in0Min21300,in1Min21300])
Res45944 = keras.layers.Reshape((2, 1), name = 'Res45944', )(Min21300)
Zer84277 = keras.layers.ZeroPadding1D(padding=((1, 1)), name = 'Zer84277', )(Res45944)
Con79040 = keras.layers.Conv1D(2, (1),strides=(1), padding='valid', dilation_rate=(1), name = 'Con79040', )(Zer84277)
model = tf.keras.models.Model(inputs=[in0Min21300,in1Min21300], outputs=Con79040)
w = model.get_layer('Con79040').get_weights() 
w[0] = np.array([[[0.2495, 0.714]]])
w[1] = np.array([0, 0])
model.get_layer('Con79040').set_weights(w) 
in0Min21300 = tf.constant([[[[0.3612]], [[0.1751]]]])
in1Min21300 = tf.constant([[[[0.3673]], [[0.9316]]]])
print (np.array2string(model.predict([in0Min21300,in1Min21300],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Con79040.png')

LMin21300 = minimum_layer([[[[[0.3612]], [[0.1751]]]], [[[[0.3673]], [[0.9316]]]]], Min21300), 
LRes45944 = reshape_layer(Min21300, [2, 1], Res45944), 
LZer84277 = zero_padding1D_layer(Res45944, 1, 1, Zer84277), 
LCon79040 = conv1D_layer(Zer84277, 1,[[[0.2495, 0.714]]],[0, 0], 1, false, 1, Con79040), 
exec_layers([LMin21300,LRes45944,LZer84277,LCon79040],["Min21300","Res45944","Zer84277","Con79040"],Con79040,"Con79040")

Actual (Unparsed): [[[0.0000000, 0.0000000], [0.0901194, 0.2578968], [0.0436874, 0.1250214], [0.0000000, 0.0000000]]]

Expected (Unparsed): [[[0.0,0.0],[0.0901194,0.2578968],[0.04368745,0.1250214],[0.0,0.0]]]

Actual:   [[[0, 0], [0.0902, 0.2579], [0.0437, 0.1251], [0, 0]]]

Expected: [[[0, 0], [0.0902, 0.2579], [0.0437, 0.1251], [0, 0]]]