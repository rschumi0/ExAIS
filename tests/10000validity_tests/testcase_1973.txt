import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Add21583 = tf.keras.layers.Input(shape=([1, 1]))
in1Add21583 = tf.keras.layers.Input(shape=([1, 1]))

Add21583 = keras.layers.Add(name = 'Add21583', )([in0Add21583,in1Add21583])
Lea83315 = keras.layers.LeakyReLU(alpha=8.375666031883233, name = 'Lea83315', )(Add21583)
Res14632 = keras.layers.Reshape((1, 1, 1), name = 'Res14632', )(Lea83315)
Res11615 = keras.layers.Reshape((1, 1, 1, 1), name = 'Res11615', )(Res14632)
Up_71560 = keras.layers.UpSampling3D(size=(1, 1, 1), name = 'Up_71560', )(Res11615)
model = tf.keras.models.Model(inputs=[in0Add21583,in1Add21583], outputs=Up_71560)
in0Add21583 = tf.constant([[[0.4718]]])
in1Add21583 = tf.constant([[[0.6154]]])
print (np.array2string(model.predict([in0Add21583,in1Add21583],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Up_71560.png')

LAdd21583 = add_layer([[[[0.4718]]], [[[0.6154]]]], Add21583), 
LLea83315 = leaky_relu_layer(Add21583, 8.375666031883233, Lea83315), 
LRes14632 = reshape_layer(Lea83315, [1, 1, 1], Res14632), 
LRes11615 = reshape_layer(Res14632, [1, 1, 1, 1], Res11615), 
LUp_71560 = up_sampling3D_layer(Res11615, 1, 1, 1, Up_71560), 
exec_layers([LAdd21583,LLea83315,LRes14632,LRes11615,LUp_71560],["Add21583","Lea83315","Res14632","Res11615","Up_71560"],Up_71560,"Up_71560")

Actual (Unparsed): [[[[[1.0872000]]]]]

Expected (Unparsed): [[[[[1.0872]]]]]

Actual:   [[[[[1.0872]]]]]

Expected: [[[[[1.0872]]]]]