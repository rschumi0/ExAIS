import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Bat64002 = tf.keras.layers.Input(shape=([4, 2]))

Bat64002 = keras.layers.BatchNormalization(axis=1, epsilon=0.5903668622150294,  name = 'Bat64002', )(in0Bat64002)
Con44677 = keras.layers.Conv1D(3, (1),strides=(1), padding='same', dilation_rate=(1), name = 'Con44677', )(Bat64002)
model = tf.keras.models.Model(inputs=[in0Bat64002], outputs=Con44677)
w = model.get_layer('Bat64002').get_weights() 
w[0] = np.array([0.6396, 0.1367, 0.7332, 0.5677])
w[1] = np.array([0.4168, 0.8906, 0.8564, 0.8314])
w[2] = np.array([0.5376, 0.8415, 0.1124, 0.4701])
w[3] = np.array([0.3602, 0.2844, 0.0074, 0.5143])
model.get_layer('Bat64002').set_weights(w) 
w = model.get_layer('Con44677').get_weights() 
w[0] = np.array([[[0.0475, 0.3415, 0.7905], [0.497, 0.9021, 0.1693]]])
w[1] = np.array([0, 0, 0])
model.get_layer('Con44677').set_weights(w) 
in0Bat64002 = tf.constant([[[1.0255, 1.9197], [1.6579, 1.4878], [1.0666, 1.8656], [1.027, 1.8174]]])
print (np.array2string(model.predict([in0Bat64002],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Con44677.png')

LBat64002 = batch_normalization_layer([[[1.0255, 1.9197], [1.6579, 1.4878], [1.0666, 1.8656], [1.027, 1.8174]]], 1, 0.5903668622150294, [0.6396, 0.1367, 0.7332, 0.5677], [0.4168, 0.8906, 0.8564, 0.8314], [0.5376, 0.8415, 0.1124, 0.4701], [0.3602, 0.2844, 0.0074, 0.5143], Bat64002), 
LCon44677 = conv1D_layer(Bat64002, 1,[[[0.0475, 0.3415, 0.7905], [0.497, 0.9021, 0.1693]]],[0, 0, 0], 1, true, 1, Con44677), 
exec_layers([LBat64002,LCon44677],["Bat64002","Con44677"],Con44677,"Con44677")

Actual (Unparsed): [[[0.6927736, 1.4455580, 0.8065636], [0.5375471, 1.2335131, 0.9651154], [1.3356047, 2.8738713, 1.8187668], [0.8286649, 1.7931339, 1.1589654]]]

Expected (Unparsed): [[[0.6927736357801353,1.4455579643588454,0.8065635298959992],[0.5375471041521959,1.2335131228288665,0.9651153624612453],[1.335604717564157,2.873871324341901,1.8187668567553263],[0.8286649160635005,1.7931339535424209,1.1589654652091446]]]

Actual:   [[[0.6928, 1.4456, 0.8066], [0.5376, 1.2336, 0.9652], [1.3357, 2.8739, 1.8188], [0.8287, 1.7932, 1.159]]]

Expected: [[[0.6928, 1.4456, 0.8066], [0.5376, 1.2336, 0.9652], [1.3357, 2.8739, 1.8188], [0.8287, 1.7932, 1.159]]]