import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Cro74534 = tf.keras.layers.Input(shape=([2, 4]))
in0Mul60931 = tf.keras.layers.Input(shape=([1, 1, 1]))
in1Mul60931 = tf.keras.layers.Input(shape=([1, 1, 1]))

Cro74534 = keras.layers.Cropping1D(cropping=((1, 0)), name = 'Cro74534', )(in0Cro74534)
Res88126 = keras.layers.Reshape((1, 4, 1), name = 'Res88126', )(Cro74534)
Mul60931 = keras.layers.Multiply(name = 'Mul60931', )([in0Mul60931,in1Mul60931])
Zer2849 = keras.layers.ZeroPadding2D(padding=((0, 0), (3, 0)), name = 'Zer2849', )(Mul60931)
Max2179 = keras.layers.Maximum(name = 'Max2179', )([Res88126,Zer2849])
Zer39559 = keras.layers.ZeroPadding2D(padding=((1, 1), (1, 1)), name = 'Zer39559', )(Max2179)
Con73291 = keras.layers.Conv2DTranspose(3, (2, 1),strides=(1, 1), padding='valid', name = 'Con73291', )(Zer39559)
Thr45088 = keras.layers.ThresholdedReLU(theta=9.139954083049997, name = 'Thr45088', )(Con73291)
model = tf.keras.models.Model(inputs=[in0Cro74534,in0Mul60931,in1Mul60931], outputs=Thr45088)
w = model.get_layer('Con73291').get_weights() 
w[0] = np.array([[[[0.4966], [0.3809], [0.4771]]], [[[0.4809], [0.7666], [0.4595]]]])
w[1] = np.array([0, 0, 0])
model.get_layer('Con73291').set_weights(w) 
in0Cro74534 = tf.constant([[[1.8995, 1.2662, 1.2576, 1.7845], [1.6674, 1.8637, 1.5757, 1.2994]]])
in0Mul60931 = tf.constant([[[[0.8024]]]])
in1Mul60931 = tf.constant([[[[0.3714]]]])
print (np.array2string(model.predict([in0Cro74534,in0Mul60931,in1Mul60931],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Thr45088.png')

LCro74534 = cropping1D_layer([[[1.8995, 1.2662, 1.2576, 1.7845], [1.6674, 1.8637, 1.5757, 1.2994]]], 1, 0, Cro74534), 
LRes88126 = reshape_layer(Cro74534, [1, 4, 1], Res88126), 
LMul60931 = multiply_layer([[[[[0.8024]]]], [[[[0.3714]]]]], Mul60931), 
LZer2849 = zero_padding2D_layer(Mul60931, 0, 0, 3, 0, Zer2849), 
LMax2179 = maximum_layer([Res88126,Zer2849], Max2179), 
LZer39559 = zero_padding2D_layer(Max2179, 1, 1, 1, 1, Zer39559), 
LCon73291 = conv2D_transpose_layer(Zer39559, 2, 1,[[[[0.4966], [0.3809], [0.4771]]], [[[0.4809], [0.7666], [0.4595]]]],[0, 0, 0], 1, 1, false, Con73291), 
LThr45088 = thresholded_relu_layer(Con73291, 9.139954083049997, Thr45088), 
exec_layers([LCro74534,LRes88126,LMul60931,LZer2849,LMax2179,LZer39559,LCon73291,LThr45088],["Cro74534","Res88126","Mul60931","Zer2849","Max2179","Zer39559","Con73291","Thr45088"],Thr45088,"Thr45088")

Actual (Unparsed): [[[[0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000]], [[0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000]], [[0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000]], [[0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000]]]]

Expected (Unparsed): [[[[0,0,0],[0,0,0],[0,0,0],[0,0,0],[0,0,0],[0,0,0]],[[0,0,0],[0,0,0],[0,0,0],[0,0,0],[0,0,0],[0,0,0]],[[0,0,0],[0,0,0],[0,0,0],[0,0,0],[0,0,0],[0,0,0]],[[0,0,0],[0,0,0],[0,0,0],[0,0,0],[0,0,0],[0,0,0]]]]

Actual:   [[[[0, 0, 0], [0, 0, 0], [0, 0, 0], [0, 0, 0], [0, 0, 0], [0, 0, 0]], [[0, 0, 0], [0, 0, 0], [0, 0, 0], [0, 0, 0], [0, 0, 0], [0, 0, 0]], [[0, 0, 0], [0, 0, 0], [0, 0, 0], [0, 0, 0], [0, 0, 0], [0, 0, 0]], [[0, 0, 0], [0, 0, 0], [0, 0, 0], [0, 0, 0], [0, 0, 0], [0, 0, 0]]]]

Expected: [[[[0, 0, 0], [0, 0, 0], [0, 0, 0], [0, 0, 0], [0, 0, 0], [0, 0, 0]], [[0, 0, 0], [0, 0, 0], [0, 0, 0], [0, 0, 0], [0, 0, 0], [0, 0, 0]], [[0, 0, 0], [0, 0, 0], [0, 0, 0], [0, 0, 0], [0, 0, 0], [0, 0, 0]], [[0, 0, 0], [0, 0, 0], [0, 0, 0], [0, 0, 0], [0, 0, 0], [0, 0, 0]]]]