import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Sep19875 = tf.keras.layers.Input(shape=([2, 1, 1]))

Sep19875 = keras.layers.SeparableConv2D(3, (1, 1),strides=(2, 2), padding='valid', name = 'Sep19875', )(in0Sep19875)
Lay71041 = keras.layers.LayerNormalization(axis=1, epsilon=1.9795948043849614, name = 'Lay71041', )(Sep19875)
Res82407 = keras.layers.Reshape((1, 1, 3, 1), name = 'Res82407', )(Lay71041)
Zer60332 = keras.layers.ZeroPadding3D(padding=((1, 1), (1, 1), (1, 1)), name = 'Zer60332', )(Res82407)
model = tf.keras.models.Model(inputs=[in0Sep19875], outputs=Zer60332)
w = model.get_layer('Sep19875').get_weights() 
w[0] = np.array([[[[0.3518]]]])
w[1] = np.array([[[[0.6879, 0.2674, 0.8724]]]])
w[2] = np.array([0, 0, 0])
model.get_layer('Sep19875').set_weights(w) 
in0Sep19875 = tf.constant([[[[0.7744]], [[0.2458]]]])
print (np.array2string(model.predict([in0Sep19875],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Zer60332.png')

LSep19875 = separable_conv2D_layer([[[[0.7744]], [[0.2458]]]], 1, 1,[[[[[0.3518]]]],[[[[0.6879, 0.2674, 0.8724]]]]],[0, 0, 0], 2, 2, false, Sep19875), 
LLay71041 = layer_normalization_layer(Sep19875, 1, 1.9795948043849614, Lay71041), 
LRes82407 = reshape_layer(Lay71041, [1, 1, 3, 1], Res82407), 
LZer60332 = zero_padding3D_layer(Res82407, 1, 1, 1, 1, 1, 1, Zer60332), 
exec_layers([LSep19875,LLay71041,LRes82407,LZer60332],["Sep19875","Lay71041","Res82407","Zer60332"],Zer60332,"Zer60332")

Actual (Unparsed): [[[[[0.0000000], [0.0000000], [0.0000000], [0.0000000], [0.0000000]], [[0.0000000], [0.0000000], [0.0000000], [0.0000000], [0.0000000]], [[0.0000000], [0.0000000], [0.0000000], [0.0000000], [0.0000000]]], [[[0.0000000], [0.0000000], [0.0000000], [0.0000000], [0.0000000]], [[0.0000000], [0.0000000], [0.0000000], [0.0000000], [0.0000000]], [[0.0000000], [0.0000000], [0.0000000], [0.0000000], [0.0000000]]], [[[0.0000000], [0.0000000], [0.0000000], [0.0000000], [0.0000000]], [[0.0000000], [0.0000000], [0.0000000], [0.0000000], [0.0000000]], [[0.0000000], [0.0000000], [0.0000000], [0.0000000], [0.0000000]]]]]

Expected (Unparsed): [[[[[0],[0],[0],[0],[0]],[[0],[0],[0],[0],[0]],[[0],[0],[0],[0],[0]]],[[[0],[0],[0],[0],[0]],[[0],[0.0],[0.0],[0.0],[0]],[[0],[0],[0],[0],[0]]],[[[0],[0],[0],[0],[0]],[[0],[0],[0],[0],[0]],[[0],[0],[0],[0],[0]]]]]

Actual:   [[[[[0], [0], [0], [0], [0]], [[0], [0], [0], [0], [0]], [[0], [0], [0], [0], [0]]], [[[0], [0], [0], [0], [0]], [[0], [0], [0], [0], [0]], [[0], [0], [0], [0], [0]]], [[[0], [0], [0], [0], [0]], [[0], [0], [0], [0], [0]], [[0], [0], [0], [0], [0]]]]]

Expected: [[[[[0], [0], [0], [0], [0]], [[0], [0], [0], [0], [0]], [[0], [0], [0], [0], [0]]], [[[0], [0], [0], [0], [0]], [[0], [0], [0], [0], [0]], [[0], [0], [0], [0], [0]]], [[[0], [0], [0], [0], [0]], [[0], [0], [0], [0], [0]], [[0], [0], [0], [0], [0]]]]]