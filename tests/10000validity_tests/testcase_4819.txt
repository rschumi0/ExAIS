import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Mas58243 = tf.keras.layers.Input(shape=([1, 3, 2]))
in0Con85921 = tf.keras.layers.Input(shape=([1, 6, 2]))
in0Glo50213 = tf.keras.layers.Input(shape=([2, 2, 1, 1]))

Mas58243 = keras.layers.Masking(mask_value=2, name = 'Mas58243', )(in0Mas58243)
Res98990 = keras.layers.Reshape((1, 6), name = 'Res98990', )(Mas58243)
Max40333 = keras.layers.MaxPool1D(pool_size=(1), name = 'Max40333', )(Res98990)
Res49393 = keras.layers.Reshape((1, 6, 1), name = 'Res49393', )(Max40333)
Con85921 = keras.layers.Concatenate(axis=3, name = 'Con85921', )([Res49393,in0Con85921])
Glo50213 = keras.layers.GlobalMaxPool3D(name = 'Glo50213', )(in0Glo50213)
Res61462 = keras.layers.Reshape((1, 1), name = 'Res61462', )(Glo50213)
Res46195 = keras.layers.Reshape((1, 1, 1), name = 'Res46195', )(Res61462)
Sep2736 = keras.layers.SeparableConv2D(3, (1, 1),strides=(1, 1), padding='same', name = 'Sep2736', )(Res46195)
Zer595 = keras.layers.ZeroPadding2D(padding=((0, 0), (5, 0)), name = 'Zer595', )(Sep2736)
Ave46687 = keras.layers.Average(name = 'Ave46687', )([Con85921,Zer595])
Res39131 = keras.layers.Reshape((1, 18), name = 'Res39131', )(Ave46687)
PRe77289 = keras.layers.PReLU(name = 'PRe77289', )(Res39131)
model = tf.keras.models.Model(inputs=[in0Mas58243,in0Con85921,in0Glo50213], outputs=PRe77289)
w = model.get_layer('Sep2736').get_weights() 
w[0] = np.array([[[[0.5549]]]])
w[1] = np.array([[[[0.8862, 0.1173, 0.7529]]]])
w[2] = np.array([0, 0, 0])
model.get_layer('Sep2736').set_weights(w) 
w = model.get_layer('PRe77289').get_weights() 
w[0] = np.array([[0.1678, 0.6842, 0.759, 0.0872, 0.221, 0.5903, 0.8835, 0.2474, 0.7505, 0.8455, 0.5463, 0.7573, 0.1225, 0.2852, 0.2247, 0.9997, 0.053, 0.9042]])
model.get_layer('PRe77289').set_weights(w) 
in0Mas58243 = tf.constant([[[[1.4027, 1.006], [1.6333, 1.285], [1.5643, 1.2918]]]])
in0Con85921 = tf.constant([[[[0.0577, 0.8304], [0.8513, 0.2092], [0.2068, 0.8755], [0.5462, 0.6996], [0.9817, 0.0789], [0.3243, 0.3589]]]])
in0Glo50213 = tf.constant([[[[[1.8251]], [[1.699]]], [[[1.5089]], [[1.9529]]]]])
print (np.array2string(model.predict([in0Mas58243,in0Con85921,in0Glo50213],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='PRe77289.png')

LMas58243 = masking_layer([[[[1.4027, 1.006], [1.6333, 1.285], [1.5643, 1.2918]]]], 2, Mas58243), 
LRes98990 = reshape_layer(Mas58243, [1, 6], Res98990), 
LMax40333 = max_pool1D_layer(Res98990, 1, Max40333), 
LRes49393 = reshape_layer(Max40333, [1, 6, 1], Res49393), 
LCon85921 = concatenate_layer([Res49393,[[[[0.0577, 0.8304], [0.8513, 0.2092], [0.2068, 0.8755], [0.5462, 0.6996], [0.9817, 0.0789], [0.3243, 0.3589]]]]], 3, Con85921), 
LGlo50213 = global_max_pool3D_layer([[[[[1.8251]], [[1.699]]], [[[1.5089]], [[1.9529]]]]], Glo50213), 
LRes61462 = reshape_layer(Glo50213, [1, 1], Res61462), 
LRes46195 = reshape_layer(Res61462, [1, 1, 1], Res46195), 
LSep2736 = separable_conv2D_layer(Res46195, 1, 1,[[[[[0.5549]]]],[[[[0.8862, 0.1173, 0.7529]]]]],[0, 0, 0], 1, 1, true, Sep2736), 
LZer595 = zero_padding2D_layer(Sep2736, 0, 0, 5, 0, Zer595), 
LAve46687 = average_layer([Con85921,Zer595], Ave46687), 
LRes39131 = reshape_layer(Ave46687, [1, 18], Res39131), 
LPRe77289 = prelu_layer(Res39131, [[0.1678, 0.6842, 0.759, 0.0872, 0.221, 0.5903, 0.8835, 0.2474, 0.7505, 0.8455, 0.5463, 0.7573, 0.1225, 0.2852, 0.2247, 0.9997, 0.053, 0.9042]], PRe77289), 
exec_layers([LMas58243,LRes98990,LMax40333,LRes49393,LCon85921,LGlo50213,LRes61462,LRes46195,LSep2736,LZer595,LAve46687,LRes39131,LPRe77289],["Mas58243","Res98990","Max40333","Res49393","Con85921","Glo50213","Res61462","Res46195","Sep2736","Zer595","Ave46687","Res39131","PRe77289"],PRe77289,"PRe77289")

Actual (Unparsed): [[[0.7013500, 0.0288500, 0.4152000, 0.5030000, 0.4256500, 0.1046000, 0.8166500, 0.1034000, 0.4377500, 0.6425000, 0.2731000, 0.3498000, 0.7821500, 0.4908500, 0.0394500, 1.1260716, 0.2257069, 0.5873954]]]

Expected (Unparsed): [[[0.70135,0.02885,0.4152,0.503,0.42565,0.1046,0.81665,0.1034,0.43775,0.6425,0.2731,0.3498,0.78215,0.49085,0.03945,1.126071611451,0.2257069059165,0.5873953918545001]]]

Actual:   [[[0.7014, 0.0289, 0.4152, 0.503, 0.4257, 0.1046, 0.8167, 0.1034, 0.4378, 0.6425, 0.2731, 0.3498, 0.7822, 0.4909, 0.0395, 1.1261, 0.2258, 0.5874]]]

Expected: [[[0.7014, 0.0289, 0.4152, 0.503, 0.4257, 0.1046, 0.8167, 0.1034, 0.4378, 0.6425, 0.2731, 0.3498, 0.7822, 0.4909, 0.0395, 1.1261, 0.2258, 0.5874]]]