import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Cro75360 = tf.keras.layers.Input(shape=([4, 1]))
in0Con26379 = tf.keras.layers.Input(shape=([6, 2]))
in0Fla68308 = tf.keras.layers.Input(shape=([2, 3]))
in0Con28270 = tf.keras.layers.Input(shape=([6, 2]))
in0Mul47716 = tf.keras.layers.Input(shape=([1, 1, 1]))
in1Mul47716 = tf.keras.layers.Input(shape=([1, 1, 1]))
in0Con68970 = tf.keras.layers.Input(shape=([3, 2]))
in0Per9993 = tf.keras.layers.Input(shape=([3, 3]))

Cro75360 = keras.layers.Cropping1D(cropping=((0, 2)), name = 'Cro75360', )(in0Cro75360)
Zer62637 = keras.layers.ZeroPadding1D(padding=((4, 0)), name = 'Zer62637', )(Cro75360)
Con26379 = keras.layers.Concatenate(axis=2, name = 'Con26379', )([Zer62637,in0Con26379])
Fla68308 = keras.layers.Flatten(name = 'Fla68308', )(in0Fla68308)
Res81357 = keras.layers.Reshape((6, 1), name = 'Res81357', )(Fla68308)
Con28270 = keras.layers.Concatenate(axis=2, name = 'Con28270', )([Res81357,in0Con28270])
Mul47716 = keras.layers.Multiply(name = 'Mul47716', )([in0Mul47716,in1Mul47716])
Res15854 = keras.layers.Reshape((1, 1), name = 'Res15854', )(Mul47716)
Zer84523 = keras.layers.ZeroPadding1D(padding=((2, 0)), name = 'Zer84523', )(Res15854)
Con68970 = keras.layers.Concatenate(axis=2, name = 'Con68970', )([Zer84523,in0Con68970])
Per9993 = keras.layers.Permute((1,2), name = 'Per9993',)(in0Per9993)
Mul67332 = keras.layers.Multiply(name = 'Mul67332', )([Con68970,Per9993])
Zer22277 = keras.layers.ZeroPadding1D(padding=((3, 0)), name = 'Zer22277', )(Mul67332)
Min62807 = keras.layers.Minimum(name = 'Min62807', )([Con28270,Zer22277])
Min83584 = keras.layers.Minimum(name = 'Min83584', )([Con26379,Min62807])
model = tf.keras.models.Model(inputs=[in0Cro75360,in0Con26379,in0Fla68308,in0Con28270,in0Mul47716,in1Mul47716,in0Con68970,in0Per9993], outputs=Min83584)
in0Cro75360 = tf.constant([[[1.9302], [1.7794], [1.559], [1.5061]]])
in0Con26379 = tf.constant([[[0.5652, 0.4618], [0.5774, 0.5643], [0.7602, 0.1931], [0.6458, 0.9831], [0.8391, 0.1638], [0.3276, 0.3476]]])
in0Fla68308 = tf.constant([[[1.7003, 1.8684, 1.2988], [1.7481, 1.2536, 1.3648]]])
in0Con28270 = tf.constant([[[0.2715, 0.7641], [0.5118, 0.598], [0.3758, 0.7034], [0.975, 0.0508], [0.5013, 0.8304], [0.8717, 0.8135]]])
in0Mul47716 = tf.constant([[[[0.8509]]]])
in1Mul47716 = tf.constant([[[[0.3506]]]])
in0Con68970 = tf.constant([[[0.565, 0.6817], [0.4138, 0.1798], [0.8395, 0.6299]]])
in0Per9993 = tf.constant([[[1.1769, 1.025, 1.1778], [1.0352, 1.6937, 1.4825], [1.6433, 1.3999, 1.0424]]])
print (np.array2string(model.predict([in0Cro75360,in0Con26379,in0Fla68308,in0Con28270,in0Mul47716,in1Mul47716,in0Con68970,in0Per9993],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Min83584.png')

LCro75360 = cropping1D_layer([[[1.9302], [1.7794], [1.559], [1.5061]]], 0, 2, Cro75360), 
LZer62637 = zero_padding1D_layer(Cro75360, 4, 0, Zer62637), 
LCon26379 = concatenate_layer([Zer62637,[[[0.5652, 0.4618], [0.5774, 0.5643], [0.7602, 0.1931], [0.6458, 0.9831], [0.8391, 0.1638], [0.3276, 0.3476]]]], 2, Con26379), 
LFla68308 = flatten_layer([[[1.7003, 1.8684, 1.2988], [1.7481, 1.2536, 1.3648]]], Fla68308), 
LRes81357 = reshape_layer(Fla68308, [6, 1], Res81357), 
LCon28270 = concatenate_layer([Res81357,[[[0.2715, 0.7641], [0.5118, 0.598], [0.3758, 0.7034], [0.975, 0.0508], [0.5013, 0.8304], [0.8717, 0.8135]]]], 2, Con28270), 
LMul47716 = multiply_layer([[[[[0.8509]]]], [[[[0.3506]]]]], Mul47716), 
LRes15854 = reshape_layer(Mul47716, [1, 1], Res15854), 
LZer84523 = zero_padding1D_layer(Res15854, 2, 0, Zer84523), 
LCon68970 = concatenate_layer([Zer84523,[[[0.565, 0.6817], [0.4138, 0.1798], [0.8395, 0.6299]]]], 2, Con68970), 
LPer9993 = permute_layer([[[1.1769, 1.025, 1.1778], [1.0352, 1.6937, 1.4825], [1.6433, 1.3999, 1.0424]]], 1,2, Per9993), 
LMul67332 = multiply_layer([Con68970,Per9993], Mul67332), 
LZer22277 = zero_padding1D_layer(Mul67332, 3, 0, Zer22277), 
LMin62807 = minimum_layer([Con28270,Zer22277], Min62807), 
LMin83584 = minimum_layer([Con26379,Min62807], Min83584), 
exec_layers([LCro75360,LZer62637,LCon26379,LFla68308,LRes81357,LCon28270,LMul47716,LRes15854,LZer84523,LCon68970,LPer9993,LMul67332,LZer22277,LMin62807,LMin83584],["Cro75360","Zer62637","Con26379","Fla68308","Res81357","Con28270","Mul47716","Res15854","Zer84523","Con68970","Per9993","Mul67332","Zer22277","Min62807","Min83584"],Min83584,"Min83584")

Actual (Unparsed): [[[0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.5791250, 0.0508000], [0.0000000, 0.5013000, 0.1638000], [0.4902384, 0.3276000, 0.3476000]]]

Expected (Unparsed): [[[0,0,0],[0,0,0],[0,0,0],[0,0.5791249999999999,0.0508],[0.0,0.5013,0.1638],[0.490238359882,0.3276,0.3476]]]

Actual:   [[[0, 0, 0], [0, 0, 0], [0, 0, 0], [0, 0.5792, 0.0508], [0, 0.5013, 0.1638], [0.4903, 0.3276, 0.3476]]]

Expected: [[[0, 0, 0], [0, 0, 0], [0, 0, 0], [0, 0.5792, 0.0508], [0, 0.5013, 0.1638], [0.4903, 0.3276, 0.3476]]]