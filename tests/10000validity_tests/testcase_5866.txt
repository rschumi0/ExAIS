import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Add29210 = tf.keras.layers.Input(shape=([1, 2, 1, 2]))
in1Add29210 = tf.keras.layers.Input(shape=([1, 2, 1, 2]))
in0Con97610 = tf.keras.layers.Input(shape=([1, 2]))
in0Min47433 = tf.keras.layers.Input(shape=([1, 2, 1, 1]))
in1Min47433 = tf.keras.layers.Input(shape=([1, 2, 1, 1]))

Add29210 = keras.layers.Add(name = 'Add29210', )([in0Add29210,in1Add29210])
Res15562 = keras.layers.Reshape((1, 2, 2), name = 'Res15562', )(Add29210)
Res14944 = keras.layers.Reshape((1, 4), name = 'Res14944', )(Res15562)
Con97610 = keras.layers.Concatenate(axis=2, name = 'Con97610', )([Res14944,in0Con97610])
Min47433 = keras.layers.Minimum(name = 'Min47433', )([in0Min47433,in1Min47433])
Res71267 = keras.layers.Reshape((1, 2, 1), name = 'Res71267', )(Min47433)
Res87208 = keras.layers.Reshape((1, 2), name = 'Res87208', )(Res71267)
Dot92215 = keras.layers.Dot(axes=(1, 1), name = 'Dot92215', )([Con97610,Res87208])
Den91089 = keras.layers.Dense(2,name = 'Den91089', )(Dot92215)
Res40779 = keras.layers.Reshape((6, 2, 1), name = 'Res40779', )(Den91089)
Sep98916 = keras.layers.SeparableConv2D(4, (3, 2),strides=(4, 4), padding='same', name = 'Sep98916', )(Res40779)
model = tf.keras.models.Model(inputs=[in0Add29210,in1Add29210,in0Con97610,in0Min47433,in1Min47433], outputs=Sep98916)
w = model.get_layer('Den91089').get_weights() 
w[0] = np.array([[0.8062, 0.8335], [0.5842, 0.9325]])
w[1] = np.array([0.102, 0.0843])
model.get_layer('Den91089').set_weights(w) 
w = model.get_layer('Sep98916').get_weights() 
w[0] = np.array([[[[0.758]], [[0.4171]]], [[[0.0638]], [[0.622]]], [[[0.6504]], [[0.3617]]]])
w[1] = np.array([[[[0.3419, 0.1844, 0.1108, 0.4143]]]])
w[2] = np.array([0, 0, 0, 0])
model.get_layer('Sep98916').set_weights(w) 
in0Add29210 = tf.constant([[[[[0.1539, 0.9824]], [[0.438, 0.3608]]]]])
in1Add29210 = tf.constant([[[[[0.8824, 0.0843]], [[0.7279, 0.3457]]]]])
in0Con97610 = tf.constant([[[0.2908, 0.4252]]])
in0Min47433 = tf.constant([[[[[0.5414]], [[0.3625]]]]])
in1Min47433 = tf.constant([[[[[0.0365]], [[0.7074]]]]])
print (np.array2string(model.predict([in0Add29210,in1Add29210,in0Con97610,in0Min47433,in1Min47433],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Sep98916.png')

LAdd29210 = add_layer([[[[[[0.1539, 0.9824]], [[0.438, 0.3608]]]]], [[[[[0.8824, 0.0843]], [[0.7279, 0.3457]]]]]], Add29210), 
LRes15562 = reshape_layer(Add29210, [1, 2, 2], Res15562), 
LRes14944 = reshape_layer(Res15562, [1, 4], Res14944), 
LCon97610 = concatenate_layer([Res14944,[[[0.2908, 0.4252]]]], 2, Con97610), 
LMin47433 = minimum_layer([[[[[[0.5414]], [[0.3625]]]]], [[[[[0.0365]], [[0.7074]]]]]], Min47433), 
LRes71267 = reshape_layer(Min47433, [1, 2, 1], Res71267), 
LRes87208 = reshape_layer(Res71267, [1, 2], Res87208), 
LDot92215 = dot_layer(Con97610,Res87208, 1, 1, Dot92215), 
LDen91089 = dense_layer(Dot92215, [[0.8062, 0.8335], [0.5842, 0.9325]],[0.102, 0.0843], Den91089), 
LRes40779 = reshape_layer(Den91089, [6, 2, 1], Res40779), 
LSep98916 = separable_conv2D_layer(Res40779, 3, 2,[[[[[0.758]], [[0.4171]]], [[[0.0638]], [[0.622]]], [[[0.6504]], [[0.3617]]]],[[[[0.3419, 0.1844, 0.1108, 0.4143]]]]],[0, 0, 0, 0], 4, 4, true, Sep98916), 
exec_layers([LAdd29210,LRes15562,LRes14944,LCon97610,LMin47433,LRes71267,LRes87208,LDot92215,LDen91089,LRes40779,LSep98916],["Add29210","Res15562","Res14944","Con97610","Min47433","Res71267","Res87208","Dot92215","Den91089","Res40779","Sep98916"],Sep98916,"Sep98916")

Actual (Unparsed): [[[[0.4157976, 0.2242559, 0.1347481, 0.5038461]], [[0.1276200, 0.0688304, 0.0413580, 0.1546445]]]]

Expected (Unparsed): [[[[0.41579764073532316,0.22425587877038197,0.13474810936962212,0.5038460443306358]],[[0.12761995995529202,0.06883042005193288,0.04135797473836314,0.15464448496483618]]]]

Actual:   [[[[0.4158, 0.2243, 0.1348, 0.5039]], [[0.1277, 0.0689, 0.0414, 0.1547]]]]

Expected: [[[[0.4158, 0.2243, 0.1348, 0.5039]], [[0.1277, 0.0689, 0.0414, 0.1547]]]]