import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Max19653 = tf.keras.layers.Input(shape=([2, 1, 2, 1]))
in1Max19653 = tf.keras.layers.Input(shape=([2, 1, 2, 1]))

Max19653 = keras.layers.Maximum(name = 'Max19653', )([in0Max19653,in1Max19653])
Up_50909 = keras.layers.UpSampling3D(size=(1, 1, 2), name = 'Up_50909', )(Max19653)
Res61853 = keras.layers.Reshape((2, 1, 4), name = 'Res61853', )(Up_50909)
Res94565 = keras.layers.Reshape((2, 4), name = 'Res94565', )(Res61853)
Sim17828 = keras.layers.SimpleRNN(3,name = 'Sim17828', )(Res94565)
model = tf.keras.models.Model(inputs=[in0Max19653,in1Max19653], outputs=Sim17828)
w = model.get_layer('Sim17828').get_weights() 
w[0] = np.array([[10, 8, 9], [1, 9, 10], [7, 3, 8], [7, 5, 2]])
w[1] = np.array([[6, 5, 3], [2, 10, 2], [8, 2, 2]])
w[2] = np.array([8, 7, 5])
model.get_layer('Sim17828').set_weights(w) 
in0Max19653 = tf.constant([[[[[0.5656], [0.9433]]], [[[0.1931], [0.9794]]]]])
in1Max19653 = tf.constant([[[[[0.8534], [0.4956]]], [[[0.0771], [0.1859]]]]])
print (np.array2string(model.predict([in0Max19653,in1Max19653],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Sim17828.png')

LMax19653 = maximum_layer([[[[[[0.5656], [0.9433]]], [[[0.1931], [0.9794]]]]], [[[[[0.8534], [0.4956]]], [[[0.0771], [0.1859]]]]]], Max19653), 
LUp_50909 = up_sampling3D_layer(Max19653, 1, 1, 2, Up_50909), 
LRes61853 = reshape_layer(Up_50909, [2, 1, 4], Res61853), 
LRes94565 = reshape_layer(Res61853, [2, 4], Res94565), 
LSim17828 = simple_rnn_layer(Res94565,[[10, 8, 9], [1, 9, 10], [7, 3, 8], [7, 5, 2]],[[6, 5, 3], [2, 10, 2], [8, 2, 2]],[8, 7, 5], Sim17828), 
exec_layers([LMax19653,LUp_50909,LRes61853,LRes94565,LSim17828],["Max19653","Up_50909","Res61853","Res94565","Sim17828"],Sim17828,"Sim17828")

Actual (Unparsed): [[1.0000000, 1.0000000, 1.0000000]]

Expected (Unparsed): [[1.0,1.0,1.0]]

Actual:   [[1, 1, 1]]

Expected: [[1, 1, 1]]