import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Min98991 = tf.keras.layers.Input(shape=([1, 2, 1, 1]))
in1Min98991 = tf.keras.layers.Input(shape=([1, 2, 1, 1]))
in0Con63353 = tf.keras.layers.Input(shape=([2, 3, 3]))
in0Mul17944 = tf.keras.layers.Input(shape=([2, 1, 1, 1]))
in1Mul17944 = tf.keras.layers.Input(shape=([2, 1, 1, 1]))
in0Con40402 = tf.keras.layers.Input(shape=([2, 1, 3]))
in0Con3836 = tf.keras.layers.Input(shape=([1, 1, 1]))

Min98991 = keras.layers.Minimum(name = 'Min98991', )([in0Min98991,in1Min98991])
Res6846 = keras.layers.Reshape((1, 2, 1), name = 'Res6846', )(Min98991)
Zer26748 = keras.layers.ZeroPadding2D(padding=((1, 0), (1, 0)), name = 'Zer26748', )(Res6846)
Con63353 = keras.layers.Concatenate(axis=3, name = 'Con63353', )([Zer26748,in0Con63353])
Mul17944 = keras.layers.Multiply(name = 'Mul17944', )([in0Mul17944,in1Mul17944])
Res1872 = keras.layers.Reshape((2, 1, 1), name = 'Res1872', )(Mul17944)
Con40402 = keras.layers.Concatenate(axis=3, name = 'Con40402', )([Res1872,in0Con40402])
Con3836 = keras.layers.Conv2DTranspose(4, (1, 1),strides=(1, 1), padding='valid', name = 'Con3836', )(in0Con3836)
Zer46873 = keras.layers.ZeroPadding2D(padding=((1, 0), (0, 0)), name = 'Zer46873', )(Con3836)
Ave35444 = keras.layers.Average(name = 'Ave35444', )([Con40402,Zer46873])
Zer35771 = keras.layers.ZeroPadding2D(padding=((0, 0), (2, 0)), name = 'Zer35771', )(Ave35444)
Max75715 = keras.layers.Maximum(name = 'Max75715', )([Con63353,Zer35771])
PRe78523 = keras.layers.PReLU(name = 'PRe78523', )(Max75715)
model = tf.keras.models.Model(inputs=[in0Min98991,in1Min98991,in0Con63353,in0Mul17944,in1Mul17944,in0Con40402,in0Con3836], outputs=PRe78523)
w = model.get_layer('Con3836').get_weights() 
w[0] = np.array([[[[0.1803], [0.826], [0.1303], [0.259]]]])
w[1] = np.array([0, 0, 0, 0])
model.get_layer('Con3836').set_weights(w) 
w = model.get_layer('PRe78523').get_weights() 
w[0] = np.array([[[0.5087, 0.4027, 0.2454, 0.3369], [0.9705, 0.9986, 0.6896, 0.8964], [0.0675, 0.5374, 0.366, 0.3633]], [[0.4604, 0.2411, 0.8283, 0.7451], [0.938, 0.817, 0.3033, 0.7184], [0.1162, 0.9546, 0.803, 0.6489]]])
model.get_layer('PRe78523').set_weights(w) 
in0Min98991 = tf.constant([[[[[0.7786]], [[0.717]]]]])
in1Min98991 = tf.constant([[[[[0.7686]], [[0.3846]]]]])
in0Con63353 = tf.constant([[[[0.5649, 0.844, 0.1709], [0.6162, 0.6974, 0.1197], [0.019, 0.3223, 0.9547]], [[0.4261, 0.6126, 0.624], [0.7154, 0.5596, 0.6889], [0.0796, 0.1092, 0.0964]]]])
in0Mul17944 = tf.constant([[[[[0.1714]]], [[[0.1414]]]]])
in1Mul17944 = tf.constant([[[[[0.0572]]], [[[0.6366]]]]])
in0Con40402 = tf.constant([[[[0.0841, 0.2285, 0.1888]], [[0.4695, 0.2149, 0.3432]]]])
in0Con3836 = tf.constant([[[[0.1858]]]])
print (np.array2string(model.predict([in0Min98991,in1Min98991,in0Con63353,in0Mul17944,in1Mul17944,in0Con40402,in0Con3836],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='PRe78523.png')

LMin98991 = minimum_layer([[[[[[0.7786]], [[0.717]]]]], [[[[[0.7686]], [[0.3846]]]]]], Min98991), 
LRes6846 = reshape_layer(Min98991, [1, 2, 1], Res6846), 
LZer26748 = zero_padding2D_layer(Res6846, 1, 0, 1, 0, Zer26748), 
LCon63353 = concatenate_layer([Zer26748,[[[[0.5649, 0.844, 0.1709], [0.6162, 0.6974, 0.1197], [0.019, 0.3223, 0.9547]], [[0.4261, 0.6126, 0.624], [0.7154, 0.5596, 0.6889], [0.0796, 0.1092, 0.0964]]]]], 3, Con63353), 
LMul17944 = multiply_layer([[[[[[0.1714]]], [[[0.1414]]]]], [[[[[0.0572]]], [[[0.6366]]]]]], Mul17944), 
LRes1872 = reshape_layer(Mul17944, [2, 1, 1], Res1872), 
LCon40402 = concatenate_layer([Res1872,[[[[0.0841, 0.2285, 0.1888]], [[0.4695, 0.2149, 0.3432]]]]], 3, Con40402), 
LCon3836 = conv2D_transpose_layer([[[[0.1858]]]], 1, 1,[[[[0.1803], [0.826], [0.1303], [0.259]]]],[0, 0, 0, 0], 1, 1, false, Con3836), 
LZer46873 = zero_padding2D_layer(Con3836, 1, 0, 0, 0, Zer46873), 
LAve35444 = average_layer([Con40402,Zer46873], Ave35444), 
LZer35771 = zero_padding2D_layer(Ave35444, 0, 0, 2, 0, Zer35771), 
LMax75715 = maximum_layer([Con63353,Zer35771], Max75715), 
LPRe78523 = prelu_layer(Max75715, [[[0.5087, 0.4027, 0.2454, 0.3369], [0.9705, 0.9986, 0.6896, 0.8964], [0.0675, 0.5374, 0.366, 0.3633]], [[0.4604, 0.2411, 0.8283, 0.7451], [0.938, 0.817, 0.3033, 0.7184], [0.1162, 0.9546, 0.803, 0.6489]]], PRe78523), 
exec_layers([LMin98991,LRes6846,LZer26748,LCon63353,LMul17944,LRes1872,LCon40402,LCon3836,LZer46873,LAve35444,LZer35771,LMax75715,LPRe78523],["Min98991","Res6846","Zer26748","Con63353","Mul17944","Res1872","Con40402","Con3836","Zer46873","Ave35444","Zer35771","Max75715","PRe78523"],PRe78523,"PRe78523")

Actual (Unparsed): [[[[0.0000000, 0.5649000, 0.8440000, 0.1709000], [0.0000000, 0.6162000, 0.6974000, 0.1197000], [0.0049020, 0.0420500, 0.3223000, 0.9547000]], [[0.0000000, 0.4261000, 0.6126000, 0.6240000], [0.7686000, 0.7154000, 0.5596000, 0.6889000], [0.3846000, 0.3114854, 0.1195549, 0.1956611]]]]

Expected (Unparsed): [[[[0,0.5649,0.844,0.1709],[0,0.6162,0.6974,0.1197],[0.00490204,0.04205,0.3223,0.9547]],[[0,0.4261,0.6126,0.624],[0.7686,0.7154,0.5596,0.6889],[0.3846,0.31148539999999997,0.11955487000000001,0.1956611]]]]

Actual:   [[[[0, 0.5649, 0.844, 0.1709], [0, 0.6162, 0.6974, 0.1197], [0.005, 0.0421, 0.3223, 0.9547]], [[0, 0.4261, 0.6126, 0.624], [0.7686, 0.7154, 0.5596, 0.6889], [0.3846, 0.3115, 0.1196, 0.1957]]]]

Expected: [[[[0, 0.5649, 0.844, 0.1709], [0, 0.6162, 0.6974, 0.1197], [0.005, 0.0421, 0.3223, 0.9547]], [[0, 0.4261, 0.6126, 0.624], [0.7686, 0.7154, 0.5596, 0.6889], [0.3846, 0.3115, 0.1196, 0.1957]]]]