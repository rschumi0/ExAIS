import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Max91772 = tf.keras.layers.Input(shape=([2, 1]))
in1Max91772 = tf.keras.layers.Input(shape=([2, 1]))

Max91772 = keras.layers.Maximum(name = 'Max91772', )([in0Max91772,in1Max91772])
Sep51699 = keras.layers.SeparableConv1D(4, (1),strides=(1), padding='valid', name = 'Sep51699', )(Max91772)
Sim88682 = keras.layers.SimpleRNN(2,name = 'Sim88682', )(Sep51699)
model = tf.keras.models.Model(inputs=[in0Max91772,in1Max91772], outputs=Sim88682)
w = model.get_layer('Sep51699').get_weights() 
w[0] = np.array([[[0.4144]]])
w[1] = np.array([[[0.5645, 0.8391, 0.8317, 0.7765]]])
w[2] = np.array([0, 0, 0, 0])
model.get_layer('Sep51699').set_weights(w) 
w = model.get_layer('Sim88682').get_weights() 
w[0] = np.array([[1, 7], [5, 10], [3, 2], [4, 1]])
w[1] = np.array([[6, 4], [4, 4]])
w[2] = np.array([8, 8])
model.get_layer('Sim88682').set_weights(w) 
in0Max91772 = tf.constant([[[0.52], [0.3429]]])
in1Max91772 = tf.constant([[[0.0483], [0.8131]]])
print (np.array2string(model.predict([in0Max91772,in1Max91772],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Sim88682.png')

LMax91772 = maximum_layer([[[[0.52], [0.3429]]], [[[0.0483], [0.8131]]]], Max91772), 
LSep51699 = separable_conv1D_layer(Max91772, 1,[[[[0.4144]]],[[[0.5645, 0.8391, 0.8317, 0.7765]]]],[0, 0, 0, 0], 1, false, Sep51699), 
LSim88682 = simple_rnn_layer(Sep51699,[[1, 7], [5, 10], [3, 2], [4, 1]],[[6, 4], [4, 4]],[8, 8], Sim88682), 
exec_layers([LMax91772,LSep51699,LSim88682],["Max91772","Sep51699","Sim88682"],Sim88682,"Sim88682")

Actual (Unparsed): [[1.0000000, 1.0000000]]

Expected (Unparsed): [[1.0,1.0]]

Actual:   [[1, 1]]

Expected: [[1, 1]]