import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Dot38328 = tf.keras.layers.Input(shape=([3, 3]))
in1Dot38328 = tf.keras.layers.Input(shape=([3, 3]))
in0Min81181 = tf.keras.layers.Input(shape=([1, 2, 2, 1]))
in1Min81181 = tf.keras.layers.Input(shape=([1, 2, 2, 1]))

Dot38328 = keras.layers.Dot(axes=(1, 2), name = 'Dot38328', )([in0Dot38328,in1Dot38328])
Res92838 = keras.layers.Reshape((3, 3, 1), name = 'Res92838', )(Dot38328)
Res85345 = keras.layers.Reshape((3, 3, 1, 1), name = 'Res85345', )(Res92838)
Zer78221 = keras.layers.ZeroPadding3D(padding=((0, 0), (0, 0), (2, 0)), name = 'Zer78221', )(Res85345)
Min81181 = keras.layers.Minimum(name = 'Min81181', )([in0Min81181,in1Min81181])
Zer10949 = keras.layers.ZeroPadding3D(padding=((2, 0), (1, 0), (1, 0)), name = 'Zer10949', )(Min81181)
Min69571 = keras.layers.Minimum(name = 'Min69571', )([Zer78221,Zer10949])
Res22336 = keras.layers.Reshape((3, 3, 3), name = 'Res22336', )(Min69571)
Res24120 = keras.layers.Reshape((3, 9), name = 'Res24120', )(Res22336)
Zer49144 = keras.layers.ZeroPadding1D(padding=((1, 0)), name = 'Zer49144', )(Res24120)
ReL24246 = keras.layers.ReLU(max_value=6.2662730445044375, negative_slope=4.2373646045218845, threshold=1.5266527348946146, name = 'ReL24246', )(Zer49144)
model = tf.keras.models.Model(inputs=[in0Dot38328,in1Dot38328,in0Min81181,in1Min81181], outputs=ReL24246)
in0Dot38328 = tf.constant([[[0.5588, 0.5423, 0.0124], [0.173, 0.0064, 0.4392], [0.9426, 0.1313, 0.4341]]])
in1Dot38328 = tf.constant([[[0.3308, 0.431, 0.8282], [0.3719, 0.8762, 0.6753], [0.3202, 0.4252, 0.3019]]])
in0Min81181 = tf.constant([[[[[0.1165], [0.8945]], [[0.2308], [0.4585]]]]])
in1Min81181 = tf.constant([[[[[0.874], [0.3569]], [[0.9178], [0.2225]]]]])
print (np.array2string(model.predict([in0Dot38328,in1Dot38328,in0Min81181,in1Min81181],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='ReL24246.png')

LDot38328 = dot_layer([[[0.5588, 0.5423, 0.0124], [0.173, 0.0064, 0.4392], [0.9426, 0.1313, 0.4341]]], [[[0.3308, 0.431, 0.8282], [0.3719, 0.8762, 0.6753], [0.3202, 0.4252, 0.3019]]], 1, 2, Dot38328), 
LRes92838 = reshape_layer(Dot38328, [3, 3, 1], Res92838), 
LRes85345 = reshape_layer(Res92838, [3, 3, 1, 1], Res85345), 
LZer78221 = zero_padding3D_layer(Res85345, 0, 0, 0, 0, 2, 0, Zer78221), 
LMin81181 = minimum_layer([[[[[[0.1165], [0.8945]], [[0.2308], [0.4585]]]]], [[[[[0.874], [0.3569]], [[0.9178], [0.2225]]]]]], Min81181), 
LZer10949 = zero_padding3D_layer(Min81181, 2, 0, 1, 0, 1, 0, Zer10949), 
LMin69571 = minimum_layer([Zer78221,Zer10949], Min69571), 
LRes22336 = reshape_layer(Min69571, [3, 3, 3], Res22336), 
LRes24120 = reshape_layer(Res22336, [3, 9], Res24120), 
LZer49144 = zero_padding1D_layer(Res24120, 1, 0, Zer49144), 
LReL24246 = relu_layer(Zer49144, 6.2662730445044375, 4.2373646045218845, 1.5266527348946146, ReL24246), 
exec_layers([LDot38328,LRes92838,LRes85345,LZer78221,LMin81181,LZer10949,LMin69571,LRes22336,LRes24120,LZer49144,LReL24246],["Dot38328","Res92838","Res85345","Zer78221","Min81181","Zer10949","Min69571","Res22336","Res24120","Zer49144","ReL24246"],ReL24246,"ReL24246")

Actual (Unparsed): [[[-6.4689843, -6.4689843, -6.4689843, -6.4689843, -6.4689843, -6.4689843, -6.4689843, -6.4689843, -6.4689843], [-6.4689843, -6.4689843, -6.4689843, -6.4689843, -6.4689843, -6.4689843, -6.4689843, -6.4689843, -6.4689843], [-6.4689843, -6.4689843, -6.4689843, -6.4689843, -6.4689843, -6.4689843, -6.4689843, -6.4689843, -6.4689843], [-6.4689843, -6.4689843, -6.4689843, -6.4689843, -6.4689843, -4.9566688, -6.4689843, -6.4689843, -5.5261707]]]

Expected (Unparsed): [[[-6.468984262238972,-6.468984262238972,-6.468984262238972,-6.468984262238972,-6.468984262238972,-6.468984262238972,-6.468984262238972,-6.468984262238972,-6.468984262238972],[-6.468984262238972,-6.468984262238972,-6.468984262238972,-6.468984262238972,-6.468984262238972,-6.468984262238972,-6.468984262238972,-6.468984262238972,-6.468984262238972],[-6.468984262238972,-6.468984262238972,-6.468984262238972,-6.468984262238972,-6.468984262238972,-6.468984262238972,-6.468984262238972,-6.468984262238972,-6.468984262238972],[-6.468984262238972,-6.468984262238972,-6.468984262238972,-6.468984262238972,-6.468984262238972,-4.956668834885111,-6.468984262238972,-6.468984262238972,-5.526170637732853]]]

Actual:   [[[-6.4689, -6.4689, -6.4689, -6.4689, -6.4689, -6.4689, -6.4689, -6.4689, -6.4689], [-6.4689, -6.4689, -6.4689, -6.4689, -6.4689, -6.4689, -6.4689, -6.4689, -6.4689], [-6.4689, -6.4689, -6.4689, -6.4689, -6.4689, -6.4689, -6.4689, -6.4689, -6.4689], [-6.4689, -6.4689, -6.4689, -6.4689, -6.4689, -4.9566, -6.4689, -6.4689, -5.5261]]]

Expected: [[[-6.4689, -6.4689, -6.4689, -6.4689, -6.4689, -6.4689, -6.4689, -6.4689, -6.4689], [-6.4689, -6.4689, -6.4689, -6.4689, -6.4689, -6.4689, -6.4689, -6.4689, -6.4689], [-6.4689, -6.4689, -6.4689, -6.4689, -6.4689, -6.4689, -6.4689, -6.4689, -6.4689], [-6.4689, -6.4689, -6.4689, -6.4689, -6.4689, -4.9566, -6.4689, -6.4689, -5.5261]]]