import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Ave86439 = tf.keras.layers.Input(shape=([1, 1, 2, 1]))
in1Ave86439 = tf.keras.layers.Input(shape=([1, 1, 2, 1]))
in0Per9283 = tf.keras.layers.Input(shape=([3, 2]))

Ave86439 = keras.layers.Average(name = 'Ave86439', )([in0Ave86439,in1Ave86439])
Res2001 = keras.layers.Reshape((1, 1, 2), name = 'Res2001', )(Ave86439)
Res90511 = keras.layers.Reshape((1, 2), name = 'Res90511', )(Res2001)
Ave13882 = keras.layers.AveragePooling1D(pool_size=(1), name = 'Ave13882', )(Res90511)
Mas69361 = keras.layers.Masking(mask_value=1, name = 'Mas69361', )(Ave13882)
Glo69894 = keras.layers.GlobalMaxPool1D(name = 'Glo69894', )(Mas69361)
Per9283 = keras.layers.Permute((1,2), name = 'Per9283',)(in0Per9283)
LST71253 = keras.layers.LSTM(2,recurrent_activation='sigmoid', name = 'LST71253', )(Per9283)
Mul60368 = keras.layers.Multiply(name = 'Mul60368', )([Glo69894,LST71253])
model = tf.keras.models.Model(inputs=[in0Ave86439,in1Ave86439,in0Per9283], outputs=Mul60368)
w = model.get_layer('LST71253').get_weights() 
w[0] = np.array([[10, 9, 9, 10, 9, 6, 7, 6], [1, 1, 4, 3, 9, 5, 7, 2]])
w[1] = np.array([[3, 1, 3, 8, 5, 10, 5, 10], [7, 8, 9, 9, 9, 6, 8, 4]])
w[2] = np.array([10, 1, 9, 4, 2, 8, 3, 7])
model.get_layer('LST71253').set_weights(w) 
in0Ave86439 = tf.constant([[[[[0.4058], [0.4988]]]]])
in1Ave86439 = tf.constant([[[[[0.2369], [0.0683]]]]])
in0Per9283 = tf.constant([[[1.2588, 1.8887], [1.2938, 1.4872], [1.1032, 1.5267]]])
print (np.array2string(model.predict([in0Ave86439,in1Ave86439,in0Per9283],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Mul60368.png')

LAve86439 = average_layer([[[[[[0.4058], [0.4988]]]]], [[[[[0.2369], [0.0683]]]]]], Ave86439), 
LRes2001 = reshape_layer(Ave86439, [1, 1, 2], Res2001), 
LRes90511 = reshape_layer(Res2001, [1, 2], Res90511), 
LAve13882 = average_pooling1D_layer(Res90511, 1, Ave13882), 
LMas69361 = masking_layer(Ave13882, 1, Mas69361), 
LGlo69894 = global_max_pool1D_layer(Mas69361, Glo69894), 
LPer9283 = permute_layer([[[1.2588, 1.8887], [1.2938, 1.4872], [1.1032, 1.5267]]], 1,2, Per9283), 
LLST71253 = lstm_layer(Per9283,[[10, 9, 9, 10, 9, 6, 7, 6], [1, 1, 4, 3, 9, 5, 7, 2]],[[3, 1, 3, 8, 5, 10, 5, 10], [7, 8, 9, 9, 9, 6, 8, 4]],[10, 1, 9, 4, 2, 8, 3, 7], LST71253), 
LMul60368 = multiply_layer([Glo69894,LST71253], Mul60368), 
exec_layers([LAve86439,LRes2001,LRes90511,LAve13882,LMas69361,LGlo69894,LPer9283,LLST71253,LMul60368],["Ave86439","Res2001","Res90511","Ave13882","Mas69361","Glo69894","Per9283","LST71253","Mul60368"],Mul60368,"Mul60368")

Actual (Unparsed): [[0.3197609, 0.2821478]]

Expected (Unparsed): [[0.3197608450971559,0.28214777353308423]]

Actual:   [[0.3198, 0.2822]]

Expected: [[0.3198, 0.2822]]