import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Zer89002 = tf.keras.layers.Input(shape=([4, 3]))
in0Glo20581 = tf.keras.layers.Input(shape=([1, 1]))
in0Con86612 = tf.keras.layers.Input(shape=([17]))
in0Con53995 = tf.keras.layers.Input(shape=([18, 1]))
in0Add72799 = tf.keras.layers.Input(shape=([2, 2]))
in1Add72799 = tf.keras.layers.Input(shape=([2, 2]))
in0Con38605 = tf.keras.layers.Input(shape=([18, 4, 3]))
in0Ave50189 = tf.keras.layers.Input(shape=([1, 1]))
in1Ave50189 = tf.keras.layers.Input(shape=([1, 1]))
in0Con93572 = tf.keras.layers.Input(shape=([3, 3, 3]))
in0Mas85062 = tf.keras.layers.Input(shape=([3, 3, 4]))

Zer89002 = keras.layers.ZeroPadding1D(padding=((1, 1)), name = 'Zer89002', )(in0Zer89002)
Fla27719 = keras.layers.Flatten(name = 'Fla27719', )(Zer89002)
Glo20581 = keras.layers.GlobalAveragePooling1D(name = 'Glo20581', )(in0Glo20581)
Res79862 = keras.layers.Reshape((1, 1), name = 'Res79862', )(Glo20581)
Res52463 = keras.layers.Reshape((1, 1, 1), name = 'Res52463', )(Res79862)
Res13615 = keras.layers.Reshape((1, 1, 1, 1), name = 'Res13615', )(Res52463)
Glo92877 = keras.layers.GlobalAveragePooling3D(name = 'Glo92877', )(Res13615)
Lea61998 = keras.layers.LeakyReLU(alpha=1.2834200219640979, name = 'Lea61998', )(Glo92877)
Con86612 = keras.layers.Concatenate(axis=1, name = 'Con86612', )([Lea61998,in0Con86612])
Min75772 = keras.layers.Minimum(name = 'Min75772', )([Fla27719,Con86612])
Res88519 = keras.layers.Reshape((18, 1), name = 'Res88519', )(Min75772)
Con53995 = keras.layers.Concatenate(axis=2, name = 'Con53995', )([Res88519,in0Con53995])
Add72799 = keras.layers.Add(name = 'Add72799', )([in0Add72799,in1Add72799])
Zer26133 = keras.layers.ZeroPadding1D(padding=((16, 0)), name = 'Zer26133', )(Add72799)
Mul92232 = keras.layers.Multiply(name = 'Mul92232', )([Con53995,Zer26133])
Res41138 = keras.layers.Reshape((18, 2, 1), name = 'Res41138', )(Mul92232)
Zer61715 = keras.layers.ZeroPadding2D(padding=((0, 0), (2, 0)), name = 'Zer61715', )(Res41138)
Con38605 = keras.layers.Concatenate(axis=3, name = 'Con38605', )([Zer61715,in0Con38605])
Ave50189 = keras.layers.Average(name = 'Ave50189', )([in0Ave50189,in1Ave50189])
Res84812 = keras.layers.Reshape((1, 1, 1), name = 'Res84812', )(Ave50189)
Zer5770 = keras.layers.ZeroPadding2D(padding=((2, 0), (2, 0)), name = 'Zer5770', )(Res84812)
Con93572 = keras.layers.Concatenate(axis=3, name = 'Con93572', )([Zer5770,in0Con93572])
Mas85062 = keras.layers.Masking(mask_value=1, name = 'Mas85062', )(in0Mas85062)
Thr14859 = keras.layers.ThresholdedReLU(theta=8.96165973940646, name = 'Thr14859', )(Mas85062)
Ave99699 = keras.layers.Average(name = 'Ave99699', )([Con93572,Thr14859])
Zer3293 = keras.layers.ZeroPadding2D(padding=((15, 0), (1, 0)), name = 'Zer3293', )(Ave99699)
Max81074 = keras.layers.Maximum(name = 'Max81074', )([Con38605,Zer3293])
model = tf.keras.models.Model(inputs=[in0Zer89002,in0Glo20581,in0Con86612,in0Con53995,in0Add72799,in1Add72799,in0Con38605,in0Ave50189,in1Ave50189,in0Con93572,in0Mas85062], outputs=Max81074)
in0Zer89002 = tf.constant([[[1.2395, 1.1439, 1.3045], [1.2681, 1.5157, 1.4259], [1.6385, 1.5714, 1.8274], [1.6151, 1.4184, 1.0911]]])
in0Glo20581 = tf.constant([[[1.7331]]])
in0Con86612 = tf.constant([[0.9368, 0.5739, 0.3737, 0.6348, 0.1059, 0.6304, 0.2577, 0.5497, 0.6933, 0.3523, 0.8321, 0.2784, 0.5835, 0.4902, 0.0091, 0.2766, 0.1515]])
in0Con53995 = tf.constant([[[0.6696], [0.325], [0.7096], [0.6552], [0.0174], [0.7847], [0.9226], [0.8374], [0.545], [0.7845], [0.0595], [0.2396], [0.2532], [0.6369], [0.9197], [0.2094], [0.6289], [0.182]]])
in0Add72799 = tf.constant([[[0.1297, 0.6929], [0.8925, 0.3932]]])
in1Add72799 = tf.constant([[[0.3065, 0.9503], [0.2438, 0.755]]])
in0Con38605 = tf.constant([[[[0.5345, 0.3474, 0.3659], [0.3, 0.5821, 0.4055], [0.1982, 0.1956, 0.5574], [0.9144, 0.5561, 0.3109]], [[0.6894, 0.7368, 0.3095], [0.5024, 0.9372, 0.6737], [0.0516, 0.9712, 0.6284], [0.1233, 0.9086, 0.9632]], [[0.7411, 0.107, 0.1023], [0.1491, 0.5107, 0.7374], [0.4197, 0.4865, 0.8973], [0.6302, 0.0487, 0.3684]], [[0.4646, 0.5942, 0.2072], [0.7741, 0.3865, 0.1752], [0.6152, 0.9567, 0.6276], [0.2718, 0.1367, 0.9237]], [[0.821, 0.0947, 0.8532], [0.5986, 0.0058, 0.1999], [0.4219, 0.0863, 0.1831], [0.189, 0.8179, 0.9079]], [[0.5946, 0.9394, 0.4641], [0.4191, 0.7399, 0.9084], [0.3104, 0.882, 0.4059], [0.1312, 0.642, 0.8198]], [[0.4059, 0.0298, 0.2667], [0.352, 0.2958, 0.0386], [0.2589, 0.1827, 0.0719], [0.3589, 0.6268, 0.7911]], [[0.737, 0.8599, 0.1031], [0.1634, 0.67, 0.2592], [0.7642, 0.0949, 0.9314], [0.2362, 0.33, 0.6905]], [[0.9946, 0.0581, 0.8096], [0.1976, 0.9067, 0.6312], [0.6226, 0.7141, 0.5483], [0.6311, 0.4489, 0.6361]], [[0.4916, 0.5073, 0.8362], [0.9269, 0.9326, 0.7146], [0.0304, 0.4262, 0.3145], [0.4755, 0.5864, 0.4482]], [[0.5528, 0.7488, 0.0594], [0.8639, 0.2196, 0.8437], [0.4856, 0.7089, 0.6571], [0.3005, 0.416, 0.1151]], [[0.7458, 0.2393, 0.9862], [0.024, 0.9785, 0.3672], [0.8753, 0.707, 0.5619], [0.2325, 0.0363, 0.5935]], [[0.5001, 0.1131, 0.7639], [0.2842, 0.004, 0.1358], [0.0073, 0.9174, 0.1119], [0.8382, 0.8334, 0.2434]], [[0.1078, 0.4043, 0.5967], [0.8658, 0.1809, 0.2305], [0.6841, 0.1094, 0.782], [0.3154, 0.6676, 0.889]], [[0.3012, 0.2023, 0.32], [0.766, 0.0166, 0.8503], [0.2275, 0.1099, 0.7462], [0.8624, 0.6671, 0.9048]], [[0.2706, 0.9556, 0.0073], [0.283, 0.3908, 0.4231], [0.1387, 0.3056, 0.4335], [0.6095, 0.3443, 0.8616]], [[0.1236, 0.0949, 0.5767], [0.8113, 0.006, 0.3695], [0.3289, 0.659, 0.0189], [0.2676, 0.1542, 0.1108]], [[0.3933, 0.3253, 0.4204], [0.8435, 0.788, 0.5302], [0.0691, 0.6929, 0.4558], [0.6356, 0.9889, 0.2549]]]])
in0Ave50189 = tf.constant([[[0.0241]]])
in1Ave50189 = tf.constant([[[0.7899]]])
in0Con93572 = tf.constant([[[[0.0365, 0.262, 0.4013], [0.4428, 0.3675, 0.9919], [0.6211, 0.6713, 0.5339]], [[0.0809, 0.1987, 0.7149], [0.0981, 0.0263, 0.0181], [0.7055, 0.0753, 0.8503]], [[0.9895, 0.8852, 0.2309], [0.4103, 0.3709, 0.9055], [0.7577, 0.7231, 0.6359]]]])
in0Mas85062 = tf.constant([[[[1.3749, 1.3822, 1.4755, 1.8818], [1.9387, 1.4183, 1.1618, 1.4653], [1.3253, 1.2287, 1.938, 1.3947]], [[1.5623, 1.9872, 1.5986, 1.6633], [1.5237, 1.8385, 1.0606, 1.4087], [1.5655, 1.3031, 1.6756, 1.6361]], [[1.5077, 1.2698, 1.5799, 1.2835], [1.0913, 1.2665, 1.28, 1.7965], [1.651, 1.6935, 1.8635, 1.0792]]]])
print (np.array2string(model.predict([in0Zer89002,in0Glo20581,in0Con86612,in0Con53995,in0Add72799,in1Add72799,in0Con38605,in0Ave50189,in1Ave50189,in0Con93572,in0Mas85062],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Max81074.png')

LZer89002 = zero_padding1D_layer([[[1.2395, 1.1439, 1.3045], [1.2681, 1.5157, 1.4259], [1.6385, 1.5714, 1.8274], [1.6151, 1.4184, 1.0911]]], 1, 1, Zer89002), 
LFla27719 = flatten_layer(Zer89002, Fla27719), 
LGlo20581 = global_average_pooling1D_layer([[[1.7331]]], Glo20581), 
LRes79862 = reshape_layer(Glo20581, [1, 1], Res79862), 
LRes52463 = reshape_layer(Res79862, [1, 1, 1], Res52463), 
LRes13615 = reshape_layer(Res52463, [1, 1, 1, 1], Res13615), 
LGlo92877 = global_average_pooling3D_layer(Res13615, Glo92877), 
LLea61998 = leaky_relu_layer(Glo92877, 1.2834200219640979, Lea61998), 
LCon86612 = concatenate_layer([Lea61998,[[0.9368, 0.5739, 0.3737, 0.6348, 0.1059, 0.6304, 0.2577, 0.5497, 0.6933, 0.3523, 0.8321, 0.2784, 0.5835, 0.4902, 0.0091, 0.2766, 0.1515]]], 1, Con86612), 
LMin75772 = minimum_layer([Fla27719,Con86612], Min75772), 
LRes88519 = reshape_layer(Min75772, [18, 1], Res88519), 
LCon53995 = concatenate_layer([Res88519,[[[0.6696], [0.325], [0.7096], [0.6552], [0.0174], [0.7847], [0.9226], [0.8374], [0.545], [0.7845], [0.0595], [0.2396], [0.2532], [0.6369], [0.9197], [0.2094], [0.6289], [0.182]]]], 2, Con53995), 
LAdd72799 = add_layer([[[[0.1297, 0.6929], [0.8925, 0.3932]]], [[[0.3065, 0.9503], [0.2438, 0.755]]]], Add72799), 
LZer26133 = zero_padding1D_layer(Add72799, 16, 0, Zer26133), 
LMul92232 = multiply_layer([Con53995,Zer26133], Mul92232), 
LRes41138 = reshape_layer(Mul92232, [18, 2, 1], Res41138), 
LZer61715 = zero_padding2D_layer(Res41138, 0, 0, 2, 0, Zer61715), 
LCon38605 = concatenate_layer([Zer61715,[[[[0.5345, 0.3474, 0.3659], [0.3, 0.5821, 0.4055], [0.1982, 0.1956, 0.5574], [0.9144, 0.5561, 0.3109]], [[0.6894, 0.7368, 0.3095], [0.5024, 0.9372, 0.6737], [0.0516, 0.9712, 0.6284], [0.1233, 0.9086, 0.9632]], [[0.7411, 0.107, 0.1023], [0.1491, 0.5107, 0.7374], [0.4197, 0.4865, 0.8973], [0.6302, 0.0487, 0.3684]], [[0.4646, 0.5942, 0.2072], [0.7741, 0.3865, 0.1752], [0.6152, 0.9567, 0.6276], [0.2718, 0.1367, 0.9237]], [[0.821, 0.0947, 0.8532], [0.5986, 0.0058, 0.1999], [0.4219, 0.0863, 0.1831], [0.189, 0.8179, 0.9079]], [[0.5946, 0.9394, 0.4641], [0.4191, 0.7399, 0.9084], [0.3104, 0.882, 0.4059], [0.1312, 0.642, 0.8198]], [[0.4059, 0.0298, 0.2667], [0.352, 0.2958, 0.0386], [0.2589, 0.1827, 0.0719], [0.3589, 0.6268, 0.7911]], [[0.737, 0.8599, 0.1031], [0.1634, 0.67, 0.2592], [0.7642, 0.0949, 0.9314], [0.2362, 0.33, 0.6905]], [[0.9946, 0.0581, 0.8096], [0.1976, 0.9067, 0.6312], [0.6226, 0.7141, 0.5483], [0.6311, 0.4489, 0.6361]], [[0.4916, 0.5073, 0.8362], [0.9269, 0.9326, 0.7146], [0.0304, 0.4262, 0.3145], [0.4755, 0.5864, 0.4482]], [[0.5528, 0.7488, 0.0594], [0.8639, 0.2196, 0.8437], [0.4856, 0.7089, 0.6571], [0.3005, 0.416, 0.1151]], [[0.7458, 0.2393, 0.9862], [0.024, 0.9785, 0.3672], [0.8753, 0.707, 0.5619], [0.2325, 0.0363, 0.5935]], [[0.5001, 0.1131, 0.7639], [0.2842, 0.004, 0.1358], [0.0073, 0.9174, 0.1119], [0.8382, 0.8334, 0.2434]], [[0.1078, 0.4043, 0.5967], [0.8658, 0.1809, 0.2305], [0.6841, 0.1094, 0.782], [0.3154, 0.6676, 0.889]], [[0.3012, 0.2023, 0.32], [0.766, 0.0166, 0.8503], [0.2275, 0.1099, 0.7462], [0.8624, 0.6671, 0.9048]], [[0.2706, 0.9556, 0.0073], [0.283, 0.3908, 0.4231], [0.1387, 0.3056, 0.4335], [0.6095, 0.3443, 0.8616]], [[0.1236, 0.0949, 0.5767], [0.8113, 0.006, 0.3695], [0.3289, 0.659, 0.0189], [0.2676, 0.1542, 0.1108]], [[0.3933, 0.3253, 0.4204], [0.8435, 0.788, 0.5302], [0.0691, 0.6929, 0.4558], [0.6356, 0.9889, 0.2549]]]]], 3, Con38605), 
LAve50189 = average_layer([[[[0.0241]]], [[[0.7899]]]], Ave50189), 
LRes84812 = reshape_layer(Ave50189, [1, 1, 1], Res84812), 
LZer5770 = zero_padding2D_layer(Res84812, 2, 0, 2, 0, Zer5770), 
LCon93572 = concatenate_layer([Zer5770,[[[[0.0365, 0.262, 0.4013], [0.4428, 0.3675, 0.9919], [0.6211, 0.6713, 0.5339]], [[0.0809, 0.1987, 0.7149], [0.0981, 0.0263, 0.0181], [0.7055, 0.0753, 0.8503]], [[0.9895, 0.8852, 0.2309], [0.4103, 0.3709, 0.9055], [0.7577, 0.7231, 0.6359]]]]], 3, Con93572), 
LMas85062 = masking_layer([[[[1.3749, 1.3822, 1.4755, 1.8818], [1.9387, 1.4183, 1.1618, 1.4653], [1.3253, 1.2287, 1.938, 1.3947]], [[1.5623, 1.9872, 1.5986, 1.6633], [1.5237, 1.8385, 1.0606, 1.4087], [1.5655, 1.3031, 1.6756, 1.6361]], [[1.5077, 1.2698, 1.5799, 1.2835], [1.0913, 1.2665, 1.28, 1.7965], [1.651, 1.6935, 1.8635, 1.0792]]]], 1, Mas85062), 
LThr14859 = thresholded_relu_layer(Mas85062, 8.96165973940646, Thr14859), 
LAve99699 = average_layer([Con93572,Thr14859], Ave99699), 
LZer3293 = zero_padding2D_layer(Ave99699, 15, 0, 1, 0, Zer3293), 
LMax81074 = maximum_layer([Con38605,Zer3293], Max81074), 
exec_layers([LZer89002,LFla27719,LGlo20581,LRes79862,LRes52463,LRes13615,LGlo92877,LLea61998,LCon86612,LMin75772,LRes88519,LCon53995,LAdd72799,LZer26133,LMul92232,LRes41138,LZer61715,LCon38605,LAve50189,LRes84812,LZer5770,LCon93572,LMas85062,LThr14859,LAve99699,LZer3293,LMax81074],["Zer89002","Fla27719","Glo20581","Res79862","Res52463","Res13615","Glo92877","Lea61998","Con86612","Min75772","Res88519","Con53995","Add72799","Zer26133","Mul92232","Res41138","Zer61715","Con38605","Ave50189","Res84812","Zer5770","Con93572","Mas85062","Thr14859","Ave99699","Zer3293","Max81074"],Max81074,"Max81074")

Actual (Unparsed): [[[[0.0000000, 0.5345000, 0.3474000, 0.3659000], [0.0000000, 0.3000000, 0.5821000, 0.4055000], [0.0000000, 0.1982000, 0.1956000, 0.5574000], [0.0000000, 0.9144000, 0.5561000, 0.3109000]], [[0.0000000, 0.6894000, 0.7368000, 0.3095000], [0.0000000, 0.5024000, 0.9372000, 0.6737000], [0.0000000, 0.0516000, 0.9712000, 0.6284000], [0.0000000, 0.1233000, 0.9086000, 0.9632000]], [[0.0000000, 0.7411000, 0.1070000, 0.1023000], [0.0000000, 0.1491000, 0.5107000, 0.7374000], [0.0000000, 0.4197000, 0.4865000, 0.8973000], [0.0000000, 0.6302000, 0.0487000, 0.3684000]], [[0.0000000, 0.4646000, 0.5942000, 0.2072000], [0.0000000, 0.7741000, 0.3865000, 0.1752000], [0.0000000, 0.6152000, 0.9567000, 0.6276000], [0.0000000, 0.2718000, 0.1367000, 0.9237000]], [[0.0000000, 0.8210000, 0.0947000, 0.8532000], [0.0000000, 0.5986000, 0.0058000, 0.1999000], [0.0000000, 0.4219000, 0.0863000, 0.1831000], [0.0000000, 0.1890000, 0.8179000, 0.9079000]], [[0.0000000, 0.5946000, 0.9394000, 0.4641000], [0.0000000, 0.4191000, 0.7399000, 0.9084000], [0.0000000, 0.3104000, 0.8820000, 0.4059000], [0.0000000, 0.1312000, 0.6420000, 0.8198000]], [[0.0000000, 0.4059000, 0.0298000, 0.2667000], [0.0000000, 0.3520000, 0.2958000, 0.0386000], [0.0000000, 0.2589000, 0.1827000, 0.0719000], [0.0000000, 0.3589000, 0.6268000, 0.7911000]], [[0.0000000, 0.7370000, 0.8599000, 0.1031000], [0.0000000, 0.1634000, 0.6700000, 0.2592000], [0.0000000, 0.7642000, 0.0949000, 0.9314000], [0.0000000, 0.2362000, 0.3300000, 0.6905000]], [[0.0000000, 0.9946000, 0.0581000, 0.8096000], [0.0000000, 0.1976000, 0.9067000, 0.6312000], [0.0000000, 0.6226000, 0.7141000, 0.5483000], [0.0000000, 0.6311000, 0.4489000, 0.6361000]], [[0.0000000, 0.4916000, 0.5073000, 0.8362000], [0.0000000, 0.9269000, 0.9326000, 0.7146000], [0.0000000, 0.0304000, 0.4262000, 0.3145000], [0.0000000, 0.4755000, 0.5864000, 0.4482000]], [[0.0000000, 0.5528000, 0.7488000, 0.0594000], [0.0000000, 0.8639000, 0.2196000, 0.8437000], [0.0000000, 0.4856000, 0.7089000, 0.6571000], [0.0000000, 0.3005000, 0.4160000, 0.1151000]], [[0.0000000, 0.7458000, 0.2393000, 0.9862000], [0.0000000, 0.0240000, 0.9785000, 0.3672000], [0.0000000, 0.8753000, 0.7070000, 0.5619000], [0.0000000, 0.2325000, 0.0363000, 0.5935000]], [[0.0000000, 0.5001000, 0.1131000, 0.7639000], [0.0000000, 0.2842000, 0.0040000, 0.1358000], [0.0000000, 0.0073000, 0.9174000, 0.1119000], [0.0000000, 0.8382000, 0.8334000, 0.2434000]], [[0.0000000, 0.1078000, 0.4043000, 0.5967000], [0.0000000, 0.8658000, 0.1809000, 0.2305000], [0.0000000, 0.6841000, 0.1094000, 0.7820000], [0.0000000, 0.3154000, 0.6676000, 0.8890000]], [[0.0000000, 0.3012000, 0.2023000, 0.3200000], [0.0000000, 0.7660000, 0.0166000, 0.8503000], [0.0000000, 0.2275000, 0.1099000, 0.7462000], [0.0000000, 0.8624000, 0.6671000, 0.9048000]], [[0.0000000, 0.2706000, 0.9556000, 0.0073000], [0.0000000, 0.2830000, 0.3908000, 0.4231000], [0.0000000, 0.2214000, 0.3056000, 0.4959500], [0.0000000, 0.6095000, 0.3443000, 0.8616000]], [[0.0000000, 0.1236000, 0.0949000, 0.5767000], [0.0000000, 0.8113000, 0.0993500, 0.3695000], [0.0000000, 0.3289000, 0.6590000, 0.0189000], [1.0334085, 0.3527500, 0.1542000, 0.4251500]], [[0.0000000, 0.3933000, 0.3253000, 0.4204000], [0.0000000, 0.8435000, 0.7880000, 0.5302000], [0.0000000, 0.2051500, 0.6929000, 0.4558000], [0.2089724, 0.6356000, 0.9889000, 0.3179500]]]]

Expected (Unparsed): [[[[0,0.5345,0.3474,0.3659],[0,0.3,0.5821,0.4055],[0,0.1982,0.1956,0.5574],[0.0,0.9144,0.5561,0.3109]],[[0,0.6894,0.7368,0.3095],[0,0.5024,0.9372,0.6737],[0,0.0516,0.9712,0.6284],[0.0,0.1233,0.9086,0.9632]],[[0,0.7411,0.107,0.1023],[0,0.1491,0.5107,0.7374],[0,0.4197,0.4865,0.8973],[0.0,0.6302,0.0487,0.3684]],[[0,0.4646,0.5942,0.2072],[0,0.7741,0.3865,0.1752],[0.0,0.6152,0.9567,0.6276],[0.0,0.2718,0.1367,0.9237]],[[0,0.821,0.0947,0.8532],[0,0.5986,0.0058,0.1999],[0.0,0.4219,0.0863,0.1831],[0.0,0.189,0.8179,0.9079]],[[0,0.5946,0.9394,0.4641],[0,0.4191,0.7399,0.9084],[0.0,0.3104,0.882,0.4059],[0.0,0.1312,0.642,0.8198]],[[0,0.4059,0.0298,0.2667],[0,0.352,0.2958,0.0386],[0.0,0.2589,0.1827,0.0719],[0.0,0.3589,0.6268,0.7911]],[[0,0.737,0.8599,0.1031],[0,0.1634,0.67,0.2592],[0.0,0.7642,0.0949,0.9314],[0.0,0.2362,0.33,0.6905]],[[0,0.9946,0.0581,0.8096],[0,0.1976,0.9067,0.6312],[0.0,0.6226,0.7141,0.5483],[0.0,0.6311,0.4489,0.6361]],[[0,0.4916,0.5073,0.8362],[0,0.9269,0.9326,0.7146],[0.0,0.0304,0.4262,0.3145],[0.0,0.4755,0.5864,0.4482]],[[0,0.5528,0.7488,0.0594],[0,0.8639,0.2196,0.8437],[0.0,0.4856,0.7089,0.6571],[0.0,0.3005,0.416,0.1151]],[[0,0.7458,0.2393,0.9862],[0,0.024,0.9785,0.3672],[0.0,0.8753,0.707,0.5619],[0.0,0.2325,0.0363,0.5935]],[[0,0.5001,0.1131,0.7639],[0,0.2842,0.004,0.1358],[0.0,0.0073,0.9174,0.1119],[0.0,0.8382,0.8334,0.2434]],[[0,0.1078,0.4043,0.5967],[0,0.8658,0.1809,0.2305],[0.0,0.6841,0.1094,0.782],[0.0,0.3154,0.6676,0.889]],[[0,0.3012,0.2023,0.32],[0,0.766,0.0166,0.8503],[0.0,0.2275,0.1099,0.7462],[0.0,0.8624,0.6671,0.9048]],[[0,0.2706,0.9556,0.0073],[0,0.283,0.3908,0.4231],[0,0.2214,0.3056,0.49595],[0.0,0.6095,0.3443,0.8616]],[[0,0.1236,0.0949,0.5767],[0,0.8113,0.09935,0.3695],[0.0,0.3289,0.659,0.0189],[1.03340848,0.35275,0.1542,0.42515]],[[0,0.3933,0.3253,0.4204],[0,0.8435,0.788,0.5302],[0.0,0.20515,0.6929,0.4558],[0.2089724,0.6356,0.9889,0.31795]]]]

Actual:   [[[[0, 0.5345, 0.3474, 0.3659], [0, 0.3, 0.5821, 0.4055], [0, 0.1982, 0.1956, 0.5574], [0, 0.9144, 0.5561, 0.3109]], [[0, 0.6894, 0.7368, 0.3095], [0, 0.5024, 0.9372, 0.6737], [0, 0.0516, 0.9712, 0.6284], [0, 0.1233, 0.9086, 0.9632]], [[0, 0.7411, 0.107, 0.1023], [0, 0.1491, 0.5107, 0.7374], [0, 0.4197, 0.4865, 0.8973], [0, 0.6302, 0.0487, 0.3684]], [[0, 0.4646, 0.5942, 0.2072], [0, 0.7741, 0.3865, 0.1752], [0, 0.6152, 0.9567, 0.6276], [0, 0.2718, 0.1367, 0.9237]], [[0, 0.821, 0.0947, 0.8532], [0, 0.5986, 0.0058, 0.1999], [0, 0.4219, 0.0863, 0.1831], [0, 0.189, 0.8179, 0.9079]], [[0, 0.5946, 0.9394, 0.4641], [0, 0.4191, 0.7399, 0.9084], [0, 0.3104, 0.882, 0.4059], [0, 0.1312, 0.642, 0.8198]], [[0, 0.4059, 0.0298, 0.2667], [0, 0.352, 0.2958, 0.0386], [0, 0.2589, 0.1827, 0.0719], [0, 0.3589, 0.6268, 0.7911]], [[0, 0.737, 0.8599, 0.1031], [0, 0.1634, 0.67, 0.2592], [0, 0.7642, 0.0949, 0.9314], [0, 0.2362, 0.33, 0.6905]], [[0, 0.9946, 0.0581, 0.8096], [0, 0.1976, 0.9067, 0.6312], [0, 0.6226, 0.7141, 0.5483], [0, 0.6311, 0.4489, 0.6361]], [[0, 0.4916, 0.5073, 0.8362], [0, 0.9269, 0.9326, 0.7146], [0, 0.0304, 0.4262, 0.3145], [0, 0.4755, 0.5864, 0.4482]], [[0, 0.5528, 0.7488, 0.0594], [0, 0.8639, 0.2196, 0.8437], [0, 0.4856, 0.7089, 0.6571], [0, 0.3005, 0.416, 0.1151]], [[0, 0.7458, 0.2393, 0.9862], [0, 0.024, 0.9785, 0.3672], [0, 0.8753, 0.707, 0.5619], [0, 0.2325, 0.0363, 0.5935]], [[0, 0.5001, 0.1131, 0.7639], [0, 0.2842, 0.004, 0.1358], [0, 0.0073, 0.9174, 0.1119], [0, 0.8382, 0.8334, 0.2434]], [[0, 0.1078, 0.4043, 0.5967], [0, 0.8658, 0.1809, 0.2305], [0, 0.6841, 0.1094, 0.782], [0, 0.3154, 0.6676, 0.889]], [[0, 0.3012, 0.2023, 0.32], [0, 0.766, 0.0166, 0.8503], [0, 0.2275, 0.1099, 0.7462], [0, 0.8624, 0.6671, 0.9048]], [[0, 0.2706, 0.9556, 0.0073], [0, 0.283, 0.3908, 0.4231], [0, 0.2214, 0.3056, 0.496], [0, 0.6095, 0.3443, 0.8616]], [[0, 0.1236, 0.0949, 0.5767], [0, 0.8113, 0.0994, 0.3695], [0, 0.3289, 0.659, 0.0189], [1.0335, 0.3528, 0.1542, 0.4252]], [[0, 0.3933, 0.3253, 0.4204], [0, 0.8435, 0.788, 0.5302], [0, 0.2052, 0.6929, 0.4558], [0.209, 0.6356, 0.9889, 0.318]]]]

Expected: [[[[0, 0.5345, 0.3474, 0.3659], [0, 0.3, 0.5821, 0.4055], [0, 0.1982, 0.1956, 0.5574], [0, 0.9144, 0.5561, 0.3109]], [[0, 0.6894, 0.7368, 0.3095], [0, 0.5024, 0.9372, 0.6737], [0, 0.0516, 0.9712, 0.6284], [0, 0.1233, 0.9086, 0.9632]], [[0, 0.7411, 0.107, 0.1023], [0, 0.1491, 0.5107, 0.7374], [0, 0.4197, 0.4865, 0.8973], [0, 0.6302, 0.0487, 0.3684]], [[0, 0.4646, 0.5942, 0.2072], [0, 0.7741, 0.3865, 0.1752], [0, 0.6152, 0.9567, 0.6276], [0, 0.2718, 0.1367, 0.9237]], [[0, 0.821, 0.0947, 0.8532], [0, 0.5986, 0.0058, 0.1999], [0, 0.4219, 0.0863, 0.1831], [0, 0.189, 0.8179, 0.9079]], [[0, 0.5946, 0.9394, 0.4641], [0, 0.4191, 0.7399, 0.9084], [0, 0.3104, 0.882, 0.4059], [0, 0.1312, 0.642, 0.8198]], [[0, 0.4059, 0.0298, 0.2667], [0, 0.352, 0.2958, 0.0386], [0, 0.2589, 0.1827, 0.0719], [0, 0.3589, 0.6268, 0.7911]], [[0, 0.737, 0.8599, 0.1031], [0, 0.1634, 0.67, 0.2592], [0, 0.7642, 0.0949, 0.9314], [0, 0.2362, 0.33, 0.6905]], [[0, 0.9946, 0.0581, 0.8096], [0, 0.1976, 0.9067, 0.6312], [0, 0.6226, 0.7141, 0.5483], [0, 0.6311, 0.4489, 0.6361]], [[0, 0.4916, 0.5073, 0.8362], [0, 0.9269, 0.9326, 0.7146], [0, 0.0304, 0.4262, 0.3145], [0, 0.4755, 0.5864, 0.4482]], [[0, 0.5528, 0.7488, 0.0594], [0, 0.8639, 0.2196, 0.8437], [0, 0.4856, 0.7089, 0.6571], [0, 0.3005, 0.416, 0.1151]], [[0, 0.7458, 0.2393, 0.9862], [0, 0.024, 0.9785, 0.3672], [0, 0.8753, 0.707, 0.5619], [0, 0.2325, 0.0363, 0.5935]], [[0, 0.5001, 0.1131, 0.7639], [0, 0.2842, 0.004, 0.1358], [0, 0.0073, 0.9174, 0.1119], [0, 0.8382, 0.8334, 0.2434]], [[0, 0.1078, 0.4043, 0.5967], [0, 0.8658, 0.1809, 0.2305], [0, 0.6841, 0.1094, 0.782], [0, 0.3154, 0.6676, 0.889]], [[0, 0.3012, 0.2023, 0.32], [0, 0.766, 0.0166, 0.8503], [0, 0.2275, 0.1099, 0.7462], [0, 0.8624, 0.6671, 0.9048]], [[0, 0.2706, 0.9556, 0.0073], [0, 0.283, 0.3908, 0.4231], [0, 0.2214, 0.3056, 0.496], [0, 0.6095, 0.3443, 0.8616]], [[0, 0.1236, 0.0949, 0.5767], [0, 0.8113, 0.0994, 0.3695], [0, 0.3289, 0.659, 0.0189], [1.0335, 0.3528, 0.1542, 0.4252]], [[0, 0.3933, 0.3253, 0.4204], [0, 0.8435, 0.788, 0.5302], [0, 0.2052, 0.6929, 0.4558], [0.209, 0.6356, 0.9889, 0.318]]]]