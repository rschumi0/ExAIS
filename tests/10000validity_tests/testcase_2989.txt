import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Mul3450 = tf.keras.layers.Input(shape=([1, 2, 1]))
in1Mul3450 = tf.keras.layers.Input(shape=([1, 2, 1]))

Mul3450 = keras.layers.Multiply(name = 'Mul3450', )([in0Mul3450,in1Mul3450])
Res97174 = keras.layers.Reshape((1, 2), name = 'Res97174', )(Mul3450)
Glo75073 = keras.layers.GlobalAveragePooling1D(name = 'Glo75073', )(Res97174)
Res20179 = keras.layers.Reshape((2, 1), name = 'Res20179', )(Glo75073)
Res89710 = keras.layers.Reshape((2, 1, 1), name = 'Res89710', )(Res20179)
Up_58769 = keras.layers.UpSampling2D(size=(2, 1), name = 'Up_58769', )(Res89710)
model = tf.keras.models.Model(inputs=[in0Mul3450,in1Mul3450], outputs=Up_58769)
in0Mul3450 = tf.constant([[[[0.827], [0.1435]]]])
in1Mul3450 = tf.constant([[[[0.4156], [0.5265]]]])
print (np.array2string(model.predict([in0Mul3450,in1Mul3450],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Up_58769.png')

LMul3450 = multiply_layer([[[[[0.827], [0.1435]]]], [[[[0.4156], [0.5265]]]]], Mul3450), 
LRes97174 = reshape_layer(Mul3450, [1, 2], Res97174), 
LGlo75073 = global_average_pooling1D_layer(Res97174, Glo75073), 
LRes20179 = reshape_layer(Glo75073, [2, 1], Res20179), 
LRes89710 = reshape_layer(Res20179, [2, 1, 1], Res89710), 
LUp_58769 = up_sampling2D_layer(Res89710, 2, 1, Up_58769), 
exec_layers([LMul3450,LRes97174,LGlo75073,LRes20179,LRes89710,LUp_58769],["Mul3450","Res97174","Glo75073","Res20179","Res89710","Up_58769"],Up_58769,"Up_58769")

Actual (Unparsed): [[[[0.3437012]], [[0.3437012]], [[0.0755527]], [[0.0755527]]]]

Expected (Unparsed): [[[[0.3437012]],[[0.3437012]],[[0.07555274999999999]],[[0.07555274999999999]]]]

Actual:   [[[[0.3438]], [[0.3438]], [[0.0756]], [[0.0756]]]]

Expected: [[[[0.3438]], [[0.3438]], [[0.0756]], [[0.0756]]]]