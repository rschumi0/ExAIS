import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Lay6888 = tf.keras.layers.Input(shape=([2, 3]))
in0Con15993 = tf.keras.layers.Input(shape=([2, 3]))
in0Mas9279 = tf.keras.layers.Input(shape=([4, 3, 4]))

Lay6888 = keras.layers.LayerNormalization(axis=1, epsilon=2.4002746624076927, name = 'Lay6888', )(in0Lay6888)
Con15993 = keras.layers.Concatenate(axis=2, name = 'Con15993', )([Lay6888,in0Con15993])
Mas9279 = keras.layers.Masking(mask_value=2, name = 'Mas9279', )(in0Mas9279)
Den6309 = keras.layers.Dense(2,name = 'Den6309', )(Mas9279)
Res11010 = keras.layers.Reshape((4, 6), name = 'Res11010', )(Den6309)
Zer2825 = keras.layers.ZeroPadding1D(padding=((2, 0)), name = 'Zer2825', )(Res11010)
Dot34007 = keras.layers.Dot(axes=(2, 2), name = 'Dot34007', )([Con15993,Zer2825])
Fla88031 = keras.layers.Flatten(name = 'Fla88031', )(Dot34007)
model = tf.keras.models.Model(inputs=[in0Lay6888,in0Con15993,in0Mas9279], outputs=Fla88031)
w = model.get_layer('Den6309').get_weights() 
w[0] = np.array([[0.7857, 0.8635], [0.2043, 0.9308], [0.6548, 0.2561], [0.2921, 0.0682]])
w[1] = np.array([0.5634, 0.9048])
model.get_layer('Den6309').set_weights(w) 
in0Lay6888 = tf.constant([[[1.1199, 1.9255, 1.4313], [1.535, 1.1007, 1.507]]])
in0Con15993 = tf.constant([[[0.9288, 0.9302, 0.73], [0.472, 0.7687, 0.6154]]])
in0Mas9279 = tf.constant([[[[1.2638, 1.6028, 1.2202, 1.1797], [1.6446, 1.4809, 1.5966, 1.6036], [1.1019, 1.5422, 1.397, 1.0301]], [[1.3018, 1.675, 1.7267, 1.4155], [1.8671, 1.7772, 1.9572, 1.9788], [1.5337, 1.2077, 1.4351, 1.4569]], [[1.3626, 1.17, 1.8545, 1.5988], [1.2694, 1.6103, 1.5713, 1.6301], [1.8318, 1.2399, 1.7932, 1.5213]], [[1.1931, 1.7121, 1.8876, 1.8941], [1.8941, 1.8221, 1.0151, 1.315], [1.6307, 1.833, 1.9187, 1.5392]]]])
print (np.array2string(model.predict([in0Lay6888,in0Con15993,in0Mas9279],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Fla88031.png')

LLay6888 = layer_normalization_layer([[[1.1199, 1.9255, 1.4313], [1.535, 1.1007, 1.507]]], 1, 2.4002746624076927, Lay6888), 
LCon15993 = concatenate_layer([Lay6888,[[[0.9288, 0.9302, 0.73], [0.472, 0.7687, 0.6154]]]], 2, Con15993), 
LMas9279 = masking_layer([[[[1.2638, 1.6028, 1.2202, 1.1797], [1.6446, 1.4809, 1.5966, 1.6036], [1.1019, 1.5422, 1.397, 1.0301]], [[1.3018, 1.675, 1.7267, 1.4155], [1.8671, 1.7772, 1.9572, 1.9788], [1.5337, 1.2077, 1.4351, 1.4569]], [[1.3626, 1.17, 1.8545, 1.5988], [1.2694, 1.6103, 1.5713, 1.6301], [1.8318, 1.2399, 1.7932, 1.5213]], [[1.1931, 1.7121, 1.8876, 1.8941], [1.8941, 1.8221, 1.0151, 1.315], [1.6307, 1.833, 1.9187, 1.5392]]]], 2, Mas9279), 
LDen6309 = dense_layer(Mas9279, [[0.7857, 0.8635], [0.2043, 0.9308], [0.6548, 0.2561], [0.2921, 0.0682]],[0.5634, 0.9048], Den6309), 
LRes11010 = reshape_layer(Den6309, [4, 6], Res11010), 
LZer2825 = zero_padding1D_layer(Res11010, 2, 0, Zer2825), 
LDot34007 = dot_layer(Con15993,Zer2825, 2, 2, Dot34007), 
LFla88031 = flatten_layer(Dot34007, Fla88031), 
exec_layers([LLay6888,LCon15993,LMas9279,LDen6309,LRes11010,LZer2825,LDot34007,LFla88031],["Lay6888","Con15993","Mas9279","Den6309","Res11010","Zer2825","Dot34007","Fla88031"],Fla88031,"Fla88031")

Actual (Unparsed): [[0.0000000, 0.0000000, 9.8963801, 10.8949239, 10.8112568, 11.7770098, 0.0000000, 0.0000000, 6.0503770, 6.7220111, 7.0486864, 7.5249974]]

Expected (Unparsed): [[0.0,0.0,9.89638003844296,10.894923901114158,10.811256850868888,11.777009759243356,0.0,0.0,6.050377070949038,6.72201116027084,7.048686495891113,7.524997463445645]]

Actual:   [[0, 0, 9.8964, 10.895, 10.8113, 11.7771, 0, 0, 6.0504, 6.7221, 7.0487, 7.525]]

Expected: [[0, 0, 9.8964, 10.895, 10.8113, 11.7771, 0, 0, 6.0504, 6.7221, 7.0487, 7.525]]