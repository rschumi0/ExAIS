import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Mul1026 = tf.keras.layers.Input(shape=([2, 2, 1]))
in1Mul1026 = tf.keras.layers.Input(shape=([2, 2, 1]))

Mul1026 = keras.layers.Multiply(name = 'Mul1026', )([in0Mul1026,in1Mul1026])
Lay90942 = keras.layers.LayerNormalization(axis=1, epsilon=1.0960126609831706, name = 'Lay90942', )(Mul1026)
Den35525 = keras.layers.Dense(4,name = 'Den35525', )(Lay90942)
model = tf.keras.models.Model(inputs=[in0Mul1026,in1Mul1026], outputs=Den35525)
w = model.get_layer('Den35525').get_weights() 
w[0] = np.array([[0.7141, 0.2206, 0.2129, 0.6211]])
w[1] = np.array([0.3073, 0.3052, 0.7506, 0.3792])
model.get_layer('Den35525').set_weights(w) 
in0Mul1026 = tf.constant([[[[0.0748], [0.0335]], [[0.0826], [0.0348]]]])
in1Mul1026 = tf.constant([[[[0.9631], [0.2502]], [[0.0206], [0.7401]]]])
print (np.array2string(model.predict([in0Mul1026,in1Mul1026],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Den35525.png')

LMul1026 = multiply_layer([[[[[0.0748], [0.0335]], [[0.0826], [0.0348]]]], [[[[0.9631], [0.2502]], [[0.0206], [0.7401]]]]], Mul1026), 
LLay90942 = layer_normalization_layer(Mul1026, 1, 1.0960126609831706, Lay90942), 
LDen35525 = dense_layer(Lay90942, [[0.7141, 0.2206, 0.2129, 0.6211]],[0.3073, 0.3052, 0.7506, 0.3792], Den35525), 
exec_layers([LMul1026,LLay90942,LDen35525],["Mul1026","Lay90942","Den35525"],Den35525,"Den35525")

Actual (Unparsed): [[[[0.3312755, 0.3126065, 0.7577480, 0.4000531], [0.3013748, 0.3033696, 0.7488335, 0.3740465]], [[0.2833245, 0.2977935, 0.7434520, 0.3583469], [0.3132252, 0.3070304, 0.7523665, 0.3843535]]]]

Expected (Unparsed): [[[[0.3312755360876414,0.3126065302631756,0.7577480067680421,0.40005310945810674],[0.30137483267335025,0.3033695954176461,0.7488334853328054,0.3740464900902084]],[[0.28332446391235866,0.29779346973682447,0.743451993231958,0.3583468905418932],[0.3132251673266498,0.307030404582354,0.7523665146671947,0.38435350990979156]]]]

Actual:   [[[[0.3313, 0.3127, 0.7578, 0.4001], [0.3014, 0.3034, 0.7489, 0.3741]], [[0.2834, 0.2978, 0.7435, 0.3584], [0.3133, 0.3071, 0.7524, 0.3844]]]]

Expected: [[[[0.3313, 0.3127, 0.7578, 0.4001], [0.3014, 0.3034, 0.7489, 0.3741]], [[0.2834, 0.2978, 0.7435, 0.3584], [0.3133, 0.3071, 0.7524, 0.3844]]]]