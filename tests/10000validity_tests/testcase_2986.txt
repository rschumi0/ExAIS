import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Mul21315 = tf.keras.layers.Input(shape=([2, 1, 2, 1]))
in1Mul21315 = tf.keras.layers.Input(shape=([2, 1, 2, 1]))

Mul21315 = keras.layers.Multiply(name = 'Mul21315', )([in0Mul21315,in1Mul21315])
Res65101 = keras.layers.Reshape((2, 1, 2), name = 'Res65101', )(Mul21315)
Res83847 = keras.layers.Reshape((2, 2), name = 'Res83847', )(Res65101)
Cro89537 = keras.layers.Cropping1D(cropping=((1, 0)), name = 'Cro89537', )(Res83847)
Lay69855 = keras.layers.LayerNormalization(axis=1, epsilon=1.6423856314286112, name = 'Lay69855', )(Cro89537)
Res67872 = keras.layers.Reshape((1, 2, 1), name = 'Res67872', )(Lay69855)
Up_39257 = keras.layers.UpSampling2D(size=(1, 1), name = 'Up_39257', )(Res67872)
model = tf.keras.models.Model(inputs=[in0Mul21315,in1Mul21315], outputs=Up_39257)
in0Mul21315 = tf.constant([[[[[0.6665], [0.8462]]], [[[0.4388], [0.6802]]]]])
in1Mul21315 = tf.constant([[[[[0.242], [0.412]]], [[[0.0337], [0.481]]]]])
print (np.array2string(model.predict([in0Mul21315,in1Mul21315],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Up_39257.png')

LMul21315 = multiply_layer([[[[[[0.6665], [0.8462]]], [[[0.4388], [0.6802]]]]], [[[[[0.242], [0.412]]], [[[0.0337], [0.481]]]]]], Mul21315), 
LRes65101 = reshape_layer(Mul21315, [2, 1, 2], Res65101), 
LRes83847 = reshape_layer(Res65101, [2, 2], Res83847), 
LCro89537 = cropping1D_layer(Res83847, 1, 0, Cro89537), 
LLay69855 = layer_normalization_layer(Cro89537, 1, 1.6423856314286112, Lay69855), 
LRes67872 = reshape_layer(Lay69855, [1, 2, 1], Res67872), 
LUp_39257 = up_sampling2D_layer(Res67872, 1, 1, Up_39257), 
exec_layers([LMul21315,LRes65101,LRes83847,LCro89537,LLay69855,LRes67872,LUp_39257],["Mul21315","Res65101","Res83847","Cro89537","Lay69855","Res67872","Up_39257"],Up_39257,"Up_39257")

Actual (Unparsed): [[[[0.0000000], [0.0000000]]]]

Expected (Unparsed): [[[[0.0],[0.0]]]]

Actual:   [[[[0], [0]]]]

Expected: [[[[0], [0]]]]