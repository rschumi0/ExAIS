import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Dot91772 = tf.keras.layers.Input(shape=([2]))
in1Dot91772 = tf.keras.layers.Input(shape=([2]))
in0Con8618 = tf.keras.layers.Input(shape=([2, 2, 2, 2]))
in0Min81446 = tf.keras.layers.Input(shape=([1, 2, 1, 2]))
in1Min81446 = tf.keras.layers.Input(shape=([1, 2, 1, 2]))
in0Con11257 = tf.keras.layers.Input(shape=([2, 2, 2, 1]))
in0Sub86740 = tf.keras.layers.Input(shape=([2, 2, 2, 3]))
in1Sub86740 = tf.keras.layers.Input(shape=([2, 2, 2, 3]))

Dot91772 = keras.layers.Dot(axes=(1, 1), name = 'Dot91772', )([in0Dot91772,in1Dot91772])
Sof23641 = keras.layers.Softmax(axis=1, name = 'Sof23641', )(Dot91772)
Res74043 = keras.layers.Reshape((1, 1), name = 'Res74043', )(Sof23641)
Ave75614 = keras.layers.AveragePooling1D(pool_size=(1), name = 'Ave75614', )(Res74043)
Res9121 = keras.layers.Reshape((1, 1, 1), name = 'Res9121', )(Ave75614)
Res82200 = keras.layers.Reshape((1, 1, 1, 1), name = 'Res82200', )(Res9121)
Zer46998 = keras.layers.ZeroPadding3D(padding=((1, 0), (1, 0), (1, 0)), name = 'Zer46998', )(Res82200)
Con8618 = keras.layers.Concatenate(axis=4, name = 'Con8618', )([Zer46998,in0Con8618])
Min81446 = keras.layers.Minimum(name = 'Min81446', )([in0Min81446,in1Min81446])
Zer21694 = keras.layers.ZeroPadding3D(padding=((1, 0), (0, 0), (1, 0)), name = 'Zer21694', )(Min81446)
Con11257 = keras.layers.Concatenate(axis=4, name = 'Con11257', )([Zer21694,in0Con11257])
Sub86740 = keras.layers.Subtract(name = 'Sub86740', )([in0Sub86740,in1Sub86740])
Ave72840 = keras.layers.Average(name = 'Ave72840', )([Con11257,Sub86740])
Mul51778 = keras.layers.Multiply(name = 'Mul51778', )([Con8618,Ave72840])
model = tf.keras.models.Model(inputs=[in0Dot91772,in1Dot91772,in0Con8618,in0Min81446,in1Min81446,in0Con11257,in0Sub86740,in1Sub86740], outputs=Mul51778)
in0Dot91772 = tf.constant([[0.6918, 0.2334]])
in1Dot91772 = tf.constant([[0.6918, 0.2802]])
in0Con8618 = tf.constant([[[[[0.3005, 0.4058], [0.0806, 0.0681]], [[0.1732, 0.7936], [0.3909, 0.8556]]], [[[0.4021, 0.2696], [0.3501, 0.9172]], [[0.5581, 0.3529], [0.0265, 0.1928]]]]])
in0Min81446 = tf.constant([[[[[0.1833, 0.4]], [[0.8451, 0.2548]]]]])
in1Min81446 = tf.constant([[[[[0.7002, 0.5124]], [[0.6136, 0.6329]]]]])
in0Con11257 = tf.constant([[[[[0.6682], [0.4307]], [[0.4785], [0.5097]]], [[[0.0535], [0.4805]], [[0.5207], [0.9959]]]]])
in0Sub86740 = tf.constant([[[[[0.5482, 0.8953, 0.7782], [0.8901, 0.2136, 0.6212]], [[0.3542, 0.0444, 0.1279], [0.8564, 0.437, 0.7797]]], [[[0.7479, 0.4138, 0.6265], [0.9886, 0.0255, 0.4082]], [[0.1229, 0.7809, 0.0396], [0.9358, 0.2386, 0.1009]]]]])
in1Sub86740 = tf.constant([[[[[0.4229, 0.1221, 0.3818], [0.1034, 0.225, 0.7173]], [[0.5315, 0.3477, 0.0246], [0.6558, 0.8471, 0.6866]]], [[[0.429, 0.646, 0.3338], [0.4524, 0.5777, 0.9021]], [[0.4197, 0.1699, 0.909], [0.5938, 0.8893, 0.5637]]]]])
print (np.array2string(model.predict([in0Dot91772,in1Dot91772,in0Con8618,in0Min81446,in1Min81446,in0Con11257,in0Sub86740,in1Sub86740],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Mul51778.png')

LDot91772 = dot_layer([[0.6918, 0.2334]], [[0.6918, 0.2802]], 1, 1, Dot91772), 
LSof23641 = softmax_layer(Dot91772, 1, Sof23641), 
LRes74043 = reshape_layer(Sof23641, [1, 1], Res74043), 
LAve75614 = average_pooling1D_layer(Res74043, 1, Ave75614), 
LRes9121 = reshape_layer(Ave75614, [1, 1, 1], Res9121), 
LRes82200 = reshape_layer(Res9121, [1, 1, 1, 1], Res82200), 
LZer46998 = zero_padding3D_layer(Res82200, 1, 0, 1, 0, 1, 0, Zer46998), 
LCon8618 = concatenate_layer([Zer46998,[[[[[0.3005, 0.4058], [0.0806, 0.0681]], [[0.1732, 0.7936], [0.3909, 0.8556]]], [[[0.4021, 0.2696], [0.3501, 0.9172]], [[0.5581, 0.3529], [0.0265, 0.1928]]]]]], 4, Con8618), 
LMin81446 = minimum_layer([[[[[[0.1833, 0.4]], [[0.8451, 0.2548]]]]], [[[[[0.7002, 0.5124]], [[0.6136, 0.6329]]]]]], Min81446), 
LZer21694 = zero_padding3D_layer(Min81446, 1, 0, 0, 0, 1, 0, Zer21694), 
LCon11257 = concatenate_layer([Zer21694,[[[[[0.6682], [0.4307]], [[0.4785], [0.5097]]], [[[0.0535], [0.4805]], [[0.5207], [0.9959]]]]]], 4, Con11257), 
LSub86740 = subtract_layer([[[[[0.5482, 0.8953, 0.7782], [0.8901, 0.2136, 0.6212]], [[0.3542, 0.0444, 0.1279], [0.8564, 0.437, 0.7797]]], [[[0.7479, 0.4138, 0.6265], [0.9886, 0.0255, 0.4082]], [[0.1229, 0.7809, 0.0396], [0.9358, 0.2386, 0.1009]]]]], [[[[[0.4229, 0.1221, 0.3818], [0.1034, 0.225, 0.7173]], [[0.5315, 0.3477, 0.0246], [0.6558, 0.8471, 0.6866]]], [[[0.429, 0.646, 0.3338], [0.4524, 0.5777, 0.9021]], [[0.4197, 0.1699, 0.909], [0.5938, 0.8893, 0.5637]]]]], Sub86740), 
LAve72840 = average_layer([Con11257,Sub86740], Ave72840), 
LMul51778 = multiply_layer([Con8618,Ave72840], Mul51778), 
exec_layers([LDot91772,LSof23641,LRes74043,LAve75614,LRes9121,LRes82200,LZer46998,LCon8618,LMin81446,LZer21694,LCon11257,LSub86740,LAve72840,LMul51778],["Dot91772","Sof23641","Res74043","Ave75614","Res9121","Res82200","Zer46998","Con8618","Min81446","Zer21694","Con11257","Sub86740","Ave72840","Mul51778"],Mul51778,"Mul51778")

Actual (Unparsed): [[[[[0.0000000, 0.1161733, 0.2160073], [0.0000000, -0.0004594, 0.0113931]], [[-0.0000000, -0.0262658, 0.2308583], [0.0000000, -0.0801540, 0.2578778]]], [[[0.0000000, -0.0466838, 0.0466678], [0.0000000, -0.0266426, -0.0061452]], [[-0.0000000, 0.1704995, -0.0615281], [0.4778000, -0.0052457, 0.0513908]]]]]

Expected (Unparsed): [[[[[0.0,0.1161733,0.21600734],[0.0,-0.00045941999999999977,0.011393129999999998]],[[-0.0,-0.02626578,0.23085824],[0.0,-0.080154045,0.25787784]]],[[[0.0,-0.046683810000000006,0.046667759999999996],[0.0,-0.02664261,-0.006145240000000011]],[[-0.0,0.17049955,-0.061528115],[0.4778,-0.005245674999999999,0.05139084]]]]]

Actual:   [[[[[0, 0.1162, 0.2161], [0, -0.0004, 0.0114]], [[-0, -0.0262, 0.2309], [0, -0.0801, 0.2579]]], [[[0, -0.0466, 0.0467], [0, -0.0266, -0.0061]], [[-0, 0.1705, -0.0615], [0.4778, -0.0052, 0.0514]]]]]

Expected: [[[[[0, 0.1162, 0.2161], [0, -0.0004, 0.0114]], [[-0, -0.0262, 0.2309], [0, -0.0801, 0.2579]]], [[[0, -0.0466, 0.0467], [0, -0.0266, -0.0061]], [[-0, 0.1705, -0.0615], [0.4778, -0.0052, 0.0514]]]]]