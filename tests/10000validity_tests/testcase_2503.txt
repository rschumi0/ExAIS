import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Con55448 = tf.keras.layers.Input(shape=([1, 2, 1, 2]))
in0Zer71197 = tf.keras.layers.Input(shape=([4, 4, 3]))
in0Ave49857 = tf.keras.layers.Input(shape=([2, 2, 1]))
in1Ave49857 = tf.keras.layers.Input(shape=([2, 2, 1]))
in0Con29372 = tf.keras.layers.Input(shape=([6, 6, 2]))

Con55448 = keras.layers.Conv3DTranspose(3, (1, 1, 1),strides=(1, 1, 1), padding='valid', name = 'Con55448', )(in0Con55448)
Res12575 = keras.layers.Reshape((1, 2, 3), name = 'Res12575', )(Con55448)
Zer77325 = keras.layers.ZeroPadding2D(padding=((5, 0), (4, 0)), name = 'Zer77325', )(Res12575)
Zer71197 = keras.layers.ZeroPadding2D(padding=((1, 1), (1, 1)), name = 'Zer71197', )(in0Zer71197)
Mul88772 = keras.layers.Multiply(name = 'Mul88772', )([Zer77325,Zer71197])
Ave49857 = keras.layers.Average(name = 'Ave49857', )([in0Ave49857,in1Ave49857])
Max48294 = keras.layers.MaxPool2D(pool_size=(1, 2), strides=(2, 1), padding='same', name = 'Max48294', )(Ave49857)
Zer72285 = keras.layers.ZeroPadding2D(padding=((5, 0), (4, 0)), name = 'Zer72285', )(Max48294)
Con29372 = keras.layers.Concatenate(axis=3, name = 'Con29372', )([Zer72285,in0Con29372])
Sub67690 = keras.layers.Subtract(name = 'Sub67690', )([Mul88772,Con29372])
Res94808 = keras.layers.Reshape((6, 18), name = 'Res94808', )(Sub67690)
Con69767 = keras.layers.Conv1D(3, (4),strides=(1), padding='same', dilation_rate=(1), name = 'Con69767', )(Res94808)
model = tf.keras.models.Model(inputs=[in0Con55448,in0Zer71197,in0Ave49857,in1Ave49857,in0Con29372], outputs=Con69767)
w = model.get_layer('Con55448').get_weights() 
w[0] = np.array([[[[[0.8755, 0.6187], [0.5756, 0.2586], [0.0692, 0.5473]]]]])
w[1] = np.array([0, 0, 0])
model.get_layer('Con55448').set_weights(w) 
w = model.get_layer('Con69767').get_weights() 
w[0] = np.array([[[0.5351, 0.1878, 0.8685], [0.9881, 0.4046, 0.6728], [0.3285, 0.8736, 0.4488], [0.1232, 0.1403, 0.4586], [0.6041, 0.0435, 0.35], [0.749, 0.3122, 0.5276], [0.5782, 0.049, 0.6666], [0.8552, 0.6998, 0.0354], [0.7872, 0.574, 0.8134], [0.4153, 0.5047, 0.4014], [0.7482, 0.4376, 0.3371], [0.036, 0.5255, 0.1777], [0.4314, 0.7611, 0.6489], [0.6973, 0.6148, 0.5425], [0.8301, 0.8904, 0.9476], [0.1758, 0.7762, 0.0725], [0.2055, 0.9221, 0.9606], [0.1417, 0.5289, 0.9869]], [[0.8796, 0.4491, 0.0756], [0.1408, 0.156, 0.3496], [0.8847, 0.7624, 0.994], [0.775, 0.3221, 0.587], [0.9129, 0.0695, 0.4105], [0.491, 0.3875, 0.758], [0.0721, 0.7073, 0.0143], [0.8807, 0.8085, 0.9735], [0.0844, 0.0199, 0.6289], [0.2477, 0.993, 0.1683], [0.0969, 0.7895, 0.7475], [0.1475, 0.2139, 0.6037], [0.9409, 0.3661, 0.4824], [0.469, 0.9548, 0.332], [0.8993, 0.0331, 0.8246], [0.4773, 0.817, 0.7479], [0.1561, 0.538, 0.5827], [0.7357, 0.717, 0.9407]], [[0.6131, 0.035, 0.8442], [0.3942, 0.0983, 0.0532], [0.6045, 0.1555, 0.8384], [0.4717, 0.7267, 0.2464], [0.8137, 0.2949, 0.6819], [0.2354, 0.964, 0.2107], [0.9326, 0.0648, 0.3101], [0.9403, 0.292, 0.8049], [0.9887, 0.7945, 0.5394], [0.1466, 0.993, 0.225], [0.9241, 0.9056, 0.4103], [0.7621, 0.9557, 0.8054], [0.7313, 0.3632, 0.927], [0.3294, 0.3693, 0.8626], [0.9444, 0.4894, 0.8722], [0.9092, 0.8513, 0.944], [0.4351, 0.5043, 0.3222], [0.0186, 0.2305, 0.0143]], [[0.577, 0.8279, 0.7594], [0.3191, 0.6195, 0.8835], [0.8985, 0.5809, 0.6396], [0.2801, 0.5676, 0.9704], [0.2364, 0.7964, 0.9751], [0.569, 0.4132, 0.0232], [0.2124, 0.584, 0.8811], [0.9359, 0.562, 0.9577], [0.0612, 0.1634, 0.2617], [0.4293, 0.3232, 0.5781], [0.6235, 0.1177, 0.4152], [0.7262, 0.343, 0.733], [0.7499, 0.0527, 0.5589], [0.5964, 0.1913, 0.8328], [0.7174, 0.7499, 0.2582], [0.219, 0.5843, 0.5709], [0.2049, 0.8344, 0.8062], [0.4736, 0.2696, 0.9]]])
w[1] = np.array([0, 0, 0])
model.get_layer('Con69767').set_weights(w) 
in0Con55448 = tf.constant([[[[[0.3944, 0.1837]], [[0.9639, 0.4264]]]]])
in0Zer71197 = tf.constant([[[[1.5131, 1.7209, 1.1484], [1.4759, 1.8603, 1.2946], [1.8765, 1.5233, 1.2331], [1.8825, 1.428, 1.9681]], [[1.4677, 1.7122, 1.8221], [1.543, 1.8034, 1.5528], [1.6025, 1.0016, 1.6086], [1.6846, 1.0129, 1.2548]], [[1.9353, 1.41, 1.1191], [1.7635, 1.4013, 1.2676], [1.7989, 1.7394, 1.846], [1.5586, 1.2943, 1.111]], [[1.0511, 1.402, 1.1924], [1.2699, 1.5739, 1.2977], [1.2885, 1.3289, 1.4006], [1.0956, 1.7736, 1.9968]]]])
in0Ave49857 = tf.constant([[[[0.6973], [0.3448]], [[0.5803], [0.1997]]]])
in1Ave49857 = tf.constant([[[[0.4061], [0.2264]], [[0.5287], [0.268]]]])
in0Con29372 = tf.constant([[[[0.3586, 0.9714], [0.4282, 0.3619], [0.5472, 0.513], [0.381, 0.1715], [0.3922, 0.6291], [0.518, 0.0991]], [[0.7452, 0.0812], [0.1926, 0.817], [0.6767, 0.296], [0.8605, 0.4272], [0.5855, 0.9297], [0.06, 0.9322]], [[0.2355, 0.8485], [0.0478, 0.675], [0.6662, 0.7438], [0.4694, 0.181], [0.0071, 0.816], [0.5973, 0.2509]], [[0.7151, 0.8347], [0.7437, 0.7332], [0.6509, 0.4105], [0.423, 0.1332], [0.7104, 0.4968], [0.7232, 0.1041]], [[0.4348, 0.9834], [0.1287, 0.9093], [0.1413, 0.7395], [0.7307, 0.1471], [0.6304, 0.6153], [0.3607, 0.3819]], [[0.4582, 0.7252], [0.6844, 0.8426], [0.093, 0.7966], [0.7094, 0.0143], [0.0131, 0.4942], [0.4718, 0.778]]]])
print (np.array2string(model.predict([in0Con55448,in0Zer71197,in0Ave49857,in1Ave49857,in0Con29372],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Con69767.png')

LCon55448 = conv3D_transpose_layer([[[[[0.3944, 0.1837]], [[0.9639, 0.4264]]]]], 1, 1, 1,[[[[[0.8755, 0.6187], [0.5756, 0.2586], [0.0692, 0.5473]]]]],[0, 0, 0], 1, 1, 1, false, Con55448), 
LRes12575 = reshape_layer(Con55448, [1, 2, 3], Res12575), 
LZer77325 = zero_padding2D_layer(Res12575, 5, 0, 4, 0, Zer77325), 
LZer71197 = zero_padding2D_layer([[[[1.5131, 1.7209, 1.1484], [1.4759, 1.8603, 1.2946], [1.8765, 1.5233, 1.2331], [1.8825, 1.428, 1.9681]], [[1.4677, 1.7122, 1.8221], [1.543, 1.8034, 1.5528], [1.6025, 1.0016, 1.6086], [1.6846, 1.0129, 1.2548]], [[1.9353, 1.41, 1.1191], [1.7635, 1.4013, 1.2676], [1.7989, 1.7394, 1.846], [1.5586, 1.2943, 1.111]], [[1.0511, 1.402, 1.1924], [1.2699, 1.5739, 1.2977], [1.2885, 1.3289, 1.4006], [1.0956, 1.7736, 1.9968]]]], 1, 1, 1, 1, Zer71197), 
LMul88772 = multiply_layer([Zer77325,Zer71197], Mul88772), 
LAve49857 = average_layer([[[[[0.6973], [0.3448]], [[0.5803], [0.1997]]]], [[[[0.4061], [0.2264]], [[0.5287], [0.268]]]]], Ave49857), 
LMax48294 = max_pool2D_layer(Ave49857, 1, 2, 2, 1, true, Max48294), 
LZer72285 = zero_padding2D_layer(Max48294, 5, 0, 4, 0, Zer72285), 
LCon29372 = concatenate_layer([Zer72285,[[[[0.3586, 0.9714], [0.4282, 0.3619], [0.5472, 0.513], [0.381, 0.1715], [0.3922, 0.6291], [0.518, 0.0991]], [[0.7452, 0.0812], [0.1926, 0.817], [0.6767, 0.296], [0.8605, 0.4272], [0.5855, 0.9297], [0.06, 0.9322]], [[0.2355, 0.8485], [0.0478, 0.675], [0.6662, 0.7438], [0.4694, 0.181], [0.0071, 0.816], [0.5973, 0.2509]], [[0.7151, 0.8347], [0.7437, 0.7332], [0.6509, 0.4105], [0.423, 0.1332], [0.7104, 0.4968], [0.7232, 0.1041]], [[0.4348, 0.9834], [0.1287, 0.9093], [0.1413, 0.7395], [0.7307, 0.1471], [0.6304, 0.6153], [0.3607, 0.3819]], [[0.4582, 0.7252], [0.6844, 0.8426], [0.093, 0.7966], [0.7094, 0.0143], [0.0131, 0.4942], [0.4718, 0.778]]]]], 3, Con29372), 
LSub67690 = subtract_layer(Mul88772,Con29372, Sub67690), 
LRes94808 = reshape_layer(Sub67690, [6, 18], Res94808), 
LCon69767 = conv1D_layer(Res94808, 4,[[[0.5351, 0.1878, 0.8685], [0.9881, 0.4046, 0.6728], [0.3285, 0.8736, 0.4488], [0.1232, 0.1403, 0.4586], [0.6041, 0.0435, 0.35], [0.749, 0.3122, 0.5276], [0.5782, 0.049, 0.6666], [0.8552, 0.6998, 0.0354], [0.7872, 0.574, 0.8134], [0.4153, 0.5047, 0.4014], [0.7482, 0.4376, 0.3371], [0.036, 0.5255, 0.1777], [0.4314, 0.7611, 0.6489], [0.6973, 0.6148, 0.5425], [0.8301, 0.8904, 0.9476], [0.1758, 0.7762, 0.0725], [0.2055, 0.9221, 0.9606], [0.1417, 0.5289, 0.9869]], [[0.8796, 0.4491, 0.0756], [0.1408, 0.156, 0.3496], [0.8847, 0.7624, 0.994], [0.775, 0.3221, 0.587], [0.9129, 0.0695, 0.4105], [0.491, 0.3875, 0.758], [0.0721, 0.7073, 0.0143], [0.8807, 0.8085, 0.9735], [0.0844, 0.0199, 0.6289], [0.2477, 0.993, 0.1683], [0.0969, 0.7895, 0.7475], [0.1475, 0.2139, 0.6037], [0.9409, 0.3661, 0.4824], [0.469, 0.9548, 0.332], [0.8993, 0.0331, 0.8246], [0.4773, 0.817, 0.7479], [0.1561, 0.538, 0.5827], [0.7357, 0.717, 0.9407]], [[0.6131, 0.035, 0.8442], [0.3942, 0.0983, 0.0532], [0.6045, 0.1555, 0.8384], [0.4717, 0.7267, 0.2464], [0.8137, 0.2949, 0.6819], [0.2354, 0.964, 0.2107], [0.9326, 0.0648, 0.3101], [0.9403, 0.292, 0.8049], [0.9887, 0.7945, 0.5394], [0.1466, 0.993, 0.225], [0.9241, 0.9056, 0.4103], [0.7621, 0.9557, 0.8054], [0.7313, 0.3632, 0.927], [0.3294, 0.3693, 0.8626], [0.9444, 0.4894, 0.8722], [0.9092, 0.8513, 0.944], [0.4351, 0.5043, 0.3222], [0.0186, 0.2305, 0.0143]], [[0.577, 0.8279, 0.7594], [0.3191, 0.6195, 0.8835], [0.8985, 0.5809, 0.6396], [0.2801, 0.5676, 0.9704], [0.2364, 0.7964, 0.9751], [0.569, 0.4132, 0.0232], [0.2124, 0.584, 0.8811], [0.9359, 0.562, 0.9577], [0.0612, 0.1634, 0.2617], [0.4293, 0.3232, 0.5781], [0.6235, 0.1177, 0.4152], [0.7262, 0.343, 0.733], [0.7499, 0.0527, 0.5589], [0.5964, 0.1913, 0.8328], [0.7174, 0.7499, 0.2582], [0.219, 0.5843, 0.5709], [0.2049, 0.8344, 0.8062], [0.4736, 0.2696, 0.9]]],[0, 0, 0], 1, true, 1, Con69767), 
exec_layers([LCon55448,LRes12575,LZer77325,LZer71197,LMul88772,LAve49857,LMax48294,LZer72285,LCon29372,LSub67690,LRes94808,LCon69767],["Con55448","Res12575","Zer77325","Zer71197","Mul88772","Ave49857","Max48294","Zer72285","Con29372","Sub67690","Res94808","Con69767"],Con69767,"Con69767")

Actual (Unparsed): [[[-9.9821663, -8.7169419, -9.8872176], [-13.9274554, -12.9691401, -15.0733733], [-14.6587379, -11.7512662, -15.0603997], [-13.9355409, -13.1832722, -14.8321743], [-11.4819090, -10.4288907, -11.5452407], [-7.5616478, -6.6433825, -8.6155693]]]

Expected (Unparsed): [[[-9.982166280000003,-8.716941910000001,-9.88721761],[-13.927455380000003,-12.969140020000001,-15.073373250000003],[-14.658737920000002,-11.751266210000004,-15.060399720000001],[-13.935540940000001,-13.18327222,-14.83217424],[-11.481908989999997,-10.428890729999999,-11.545240639999998],[-7.561647739999999,-6.643382519999999,-8.61556928]]]

Actual:   [[[-9.9821, -8.7169, -9.8872], [-13.9274, -12.9691, -15.0733], [-14.6587, -11.7512, -15.0603], [-13.9355, -13.1832, -14.8321], [-11.4819, -10.4288, -11.5452], [-7.5616, -6.6433, -8.6155]]]

Expected: [[[-9.9821, -8.7169, -9.8872], [-13.9274, -12.9691, -15.0733], [-14.6587, -11.7512, -15.0603], [-13.9355, -13.1832, -14.8321], [-11.4819, -10.4288, -11.5452], [-7.5616, -6.6433, -8.6155]]]