import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Sub32759 = tf.keras.layers.Input(shape=([3, 2, 2]))
in1Sub32759 = tf.keras.layers.Input(shape=([3, 2, 2]))
in0Mul76415 = tf.keras.layers.Input(shape=([1, 1, 1, 2]))
in1Mul76415 = tf.keras.layers.Input(shape=([1, 1, 1, 2]))
in0Thr76152 = tf.keras.layers.Input(shape=([2, 2, 1, 2]))
in0Sub70733 = tf.keras.layers.Input(shape=([3]))
in1Sub70733 = tf.keras.layers.Input(shape=([3]))
in0Con41985 = tf.keras.layers.Input(shape=([5]))
in0Con39722 = tf.keras.layers.Input(shape=([4]))

Sub32759 = keras.layers.Subtract(name = 'Sub32759', )([in0Sub32759,in1Sub32759])
Res50170 = keras.layers.Reshape((3, 4), name = 'Res50170', )(Sub32759)
Fla82815 = keras.layers.Flatten(name = 'Fla82815', )(Res50170)
Mul76415 = keras.layers.Multiply(name = 'Mul76415', )([in0Mul76415,in1Mul76415])
Zer67804 = keras.layers.ZeroPadding3D(padding=((1, 0), (1, 0), (0, 0)), name = 'Zer67804', )(Mul76415)
Thr76152 = keras.layers.ThresholdedReLU(theta=2.002498838314943, name = 'Thr76152', input_shape=(2, 2, 1, 2))(in0Thr76152)
Min38937 = keras.layers.Minimum(name = 'Min38937', )([Zer67804,Thr76152])
Res34717 = keras.layers.Reshape((2, 2, 2), name = 'Res34717', )(Min38937)
Res87800 = keras.layers.Reshape((2, 4), name = 'Res87800', )(Res34717)
Fla21310 = keras.layers.Flatten(name = 'Fla21310', )(Res87800)
Sub70733 = keras.layers.Subtract(name = 'Sub70733', )([in0Sub70733,in1Sub70733])
Con41985 = keras.layers.Concatenate(axis=1, name = 'Con41985', )([Sub70733,in0Con41985])
Add84734 = keras.layers.Add(name = 'Add84734', )([Fla21310,Con41985])
Con39722 = keras.layers.Concatenate(axis=1, name = 'Con39722', )([Add84734,in0Con39722])
Mul19470 = keras.layers.Multiply(name = 'Mul19470', )([Fla82815,Con39722])
Res76032 = keras.layers.Reshape((12, 1), name = 'Res76032', )(Mul19470)
Res65425 = keras.layers.Reshape((12, 1, 1), name = 'Res65425', )(Res76032)
Res60173 = keras.layers.Reshape((12, 1, 1, 1), name = 'Res60173', )(Res65425)
Con21933 = keras.layers.Conv3DTranspose(4, (7, 1, 1),strides=(1, 1, 1), padding='valid', name = 'Con21933', )(Res60173)
model = tf.keras.models.Model(inputs=[in0Sub32759,in1Sub32759,in0Mul76415,in1Mul76415,in0Thr76152,in0Sub70733,in1Sub70733,in0Con41985,in0Con39722], outputs=Con21933)
w = model.get_layer('Con21933').get_weights() 
w[0] = np.array([[[[[0.3883], [0.9882], [0.8843], [0.6797]]]], [[[[0.6532], [0.8108], [0.9353], [0.6918]]]], [[[[0.5529], [0.9498], [0.9951], [0.717]]]], [[[[0.8703], [0.8737], [0.3834], [0.4653]]]], [[[[0.4087], [0.5534], [0.5972], [0.1116]]]], [[[[0.8386], [0.9532], [0.4022], [0.5185]]]], [[[[0.5631], [0.9967], [0.3491], [0.1843]]]]])
w[1] = np.array([0, 0, 0, 0])
model.get_layer('Con21933').set_weights(w) 
in0Sub32759 = tf.constant([[[[0.2021, 0.1722], [0.9475, 0.5478]], [[0.1699, 0.3624], [0.4153, 0.3412]], [[0.3993, 0.8227], [0.8124, 0.7141]]]])
in1Sub32759 = tf.constant([[[[0.5247, 0.5922], [0.2495, 0.8215]], [[0.5614, 0.7642], [0.142, 0.3948]], [[0.3323, 0.5112], [0.726, 0.6649]]]])
in0Mul76415 = tf.constant([[[[[0.2668, 0.3015]]]]])
in1Mul76415 = tf.constant([[[[[0.3762, 0.1058]]]]])
in0Thr76152 = tf.constant([[[[[0.1729, 0.3494]], [[0.1597, 0.1127]]], [[[0.5119, 0.5591]], [[0.634, 0.217]]]]])
in0Sub70733 = tf.constant([[0.1692, 0.2216, 0.4992]])
in1Sub70733 = tf.constant([[0.2026, 0.7041, 0.5101]])
in0Con41985 = tf.constant([[0.8337, 0.8219, 0.7865, 0.024, 0.0882]])
in0Con39722 = tf.constant([[0.0985, 0.0095, 0.2292, 0.7263]])
print (np.array2string(model.predict([in0Sub32759,in1Sub32759,in0Mul76415,in1Mul76415,in0Thr76152,in0Sub70733,in1Sub70733,in0Con41985,in0Con39722],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Con21933.png')

LSub32759 = subtract_layer([[[[0.2021, 0.1722], [0.9475, 0.5478]], [[0.1699, 0.3624], [0.4153, 0.3412]], [[0.3993, 0.8227], [0.8124, 0.7141]]]], [[[[0.5247, 0.5922], [0.2495, 0.8215]], [[0.5614, 0.7642], [0.142, 0.3948]], [[0.3323, 0.5112], [0.726, 0.6649]]]], Sub32759), 
LRes50170 = reshape_layer(Sub32759, [3, 4], Res50170), 
LFla82815 = flatten_layer(Res50170, Fla82815), 
LMul76415 = multiply_layer([[[[[[0.2668, 0.3015]]]]], [[[[[0.3762, 0.1058]]]]]], Mul76415), 
LZer67804 = zero_padding3D_layer(Mul76415, 1, 0, 1, 0, 0, 0, Zer67804), 
LThr76152 = thresholded_relu_layer([[[[[0.1729, 0.3494]], [[0.1597, 0.1127]]], [[[0.5119, 0.5591]], [[0.634, 0.217]]]]], 2.002498838314943, Thr76152), 
LMin38937 = minimum_layer([Zer67804,Thr76152], Min38937), 
LRes34717 = reshape_layer(Min38937, [2, 2, 2], Res34717), 
LRes87800 = reshape_layer(Res34717, [2, 4], Res87800), 
LFla21310 = flatten_layer(Res87800, Fla21310), 
LSub70733 = subtract_layer([[0.1692, 0.2216, 0.4992]], [[0.2026, 0.7041, 0.5101]], Sub70733), 
LCon41985 = concatenate_layer([Sub70733,[[0.8337, 0.8219, 0.7865, 0.024, 0.0882]]], 1, Con41985), 
LAdd84734 = add_layer([Fla21310,Con41985], Add84734), 
LCon39722 = concatenate_layer([Add84734,[[0.0985, 0.0095, 0.2292, 0.7263]]], 1, Con39722), 
LMul19470 = multiply_layer([Fla82815,Con39722], Mul19470), 
LRes76032 = reshape_layer(Mul19470, [12, 1], Res76032), 
LRes65425 = reshape_layer(Res76032, [12, 1, 1], Res65425), 
LRes60173 = reshape_layer(Res65425, [12, 1, 1, 1], Res60173), 
LCon21933 = conv3D_transpose_layer(Res60173, 7, 1, 1,[[[[[0.3883], [0.9882], [0.8843], [0.6797]]]], [[[[0.6532], [0.8108], [0.9353], [0.6918]]]], [[[[0.5529], [0.9498], [0.9951], [0.717]]]], [[[[0.8703], [0.8737], [0.3834], [0.4653]]]], [[[[0.4087], [0.5534], [0.5972], [0.1116]]]], [[[[0.8386], [0.9532], [0.4022], [0.5185]]]], [[[[0.5631], [0.9967], [0.3491], [0.1843]]]]],[0, 0, 0, 0], 1, 1, 1, false, Con21933), 
exec_layers([LSub32759,LRes50170,LFla82815,LMul76415,LZer67804,LThr76152,LMin38937,LRes34717,LRes87800,LFla21310,LSub70733,LCon41985,LAdd84734,LCon39722,LMul19470,LRes76032,LRes65425,LRes60173,LCon21933],["Sub32759","Res50170","Fla82815","Mul76415","Zer67804","Thr76152","Min38937","Res34717","Res87800","Fla21310","Sub70733","Con41985","Add84734","Con39722","Mul19470","Res76032","Res65425","Res60173","Con21933"],Con21933,"Con21933")

Actual (Unparsed): [[[[[0.0041839, 0.0106477, 0.0095282, 0.0073237]]], [[[0.0857271, 0.2089950, 0.1892811, 0.1451952]]], [[[0.1353741, 0.1670241, 0.1935326, 0.1427475]]], [[[0.0278491, -0.0297689, -0.0031107, -0.0100462]]], [[[-0.0974310, -0.3271964, -0.4214050, -0.2865267]]], [[[-0.3738169, -0.6741400, -0.6850341, -0.5763443]]], [[[-0.4074714, -0.5550337, -0.6167282, -0.4448363]]], [[[-0.4378428, -0.5121868, -0.5044672, -0.3670420]]], [[[-0.5990753, -0.6703419, -0.3998139, -0.2967494]]], [[[-0.5189309, -0.6995128, -0.3912011, -0.2379220]]], [[[-0.4343639, -0.5942019, -0.2104815, -0.2043857]]], [[[-0.1401896, -0.2513917, -0.0549101, -0.0121878]]], [[[0.0392921, 0.0560508, 0.0585920, 0.0397905]]], [[[0.0410735, 0.0544583, 0.0459225, 0.0377163]]], [[[0.0453905, 0.0515781, 0.0290208, 0.0215877]]], [[[0.0328775, 0.0416008, 0.0303381, 0.0148011]]], [[[0.0411175, 0.0537991, 0.0212854, 0.0221777]]], [[[0.0201218, 0.0356160, 0.0124747, 0.0065858]]]]]

Expected (Unparsed): [[[[[0.004183870372000002,0.010647696888000005,0.009528191012000005,0.007323658748000004]]],[[[0.08572712048799998,0.20899497027199995,0.18928110285199995,0.14519523931199996]]],[[[0.13537412497599996,0.16702413979199993,0.19353265702399994,0.14274753673999996]]],[[[0.02784912518499992,-0.029768903310000094,-0.0031106978710001287,-0.010046223801000065]]],[[[-0.09743097393500007,-0.327196421326,-0.42140499618400007,-0.28652672484300007]]],[[[-0.373816917967,-0.674140017934,-0.685034118566,-0.57634432737]]],[[[-0.40747141388800007,-0.555033735655,-0.616728258927,-0.444836341535]]],[[[-0.437842784384,-0.5121867957950001,-0.5044672460440001,-0.36704202659300006]]],[[[-0.5990753045930001,-0.670341871084,-0.39981391702399993,-0.296749373181]]],[[[-0.5189309069120001,-0.6995128260289999,-0.391201125436,-0.237922047167]]],[[[-0.4343639326170001,-0.5942019634629999,-0.210481506744,-0.20438570115499996]]],[[[-0.14018958091500003,-0.2513916751420002,-0.054910073107000065,-0.012187804946000039]]],[[[0.039292073196999955,0.05605081279299995,0.058592024701999944,0.03979050315299995]]],[[[0.041073472610999966,0.05445826462999994,0.045922493555999935,0.037716340497999955]]],[[[0.045390507943999944,0.051578153393999945,0.029020775999999977,0.02158767197099997]]],[[[0.03287751829499998,0.04160076315499997,0.03033811342299996,0.014801092990999994]]],[[[0.04111750058399995,0.05379914116799994,0.021285384119999976,0.022177729043999964]]],[[[0.020121792875999963,0.03561603793199993,0.012474725435999976,0.006585768827999988]]]]]

Actual:   [[[[[0.0042, 0.0107, 0.0096, 0.0074]]], [[[0.0858, 0.209, 0.1893, 0.1452]]], [[[0.1354, 0.1671, 0.1936, 0.1428]]], [[[0.0279, -0.0297, -0.0031, -0.01]]], [[[-0.0974, -0.3271, -0.4214, -0.2865]]], [[[-0.3738, -0.6741, -0.685, -0.5763]]], [[[-0.4074, -0.555, -0.6167, -0.4448]]], [[[-0.4378, -0.5121, -0.5044, -0.367]]], [[[-0.599, -0.6703, -0.3998, -0.2967]]], [[[-0.5189, -0.6995, -0.3912, -0.2379]]], [[[-0.4343, -0.5942, -0.2104, -0.2043]]], [[[-0.1401, -0.2513, -0.0549, -0.0121]]], [[[0.0393, 0.0561, 0.0586, 0.0398]]], [[[0.0411, 0.0545, 0.046, 0.0378]]], [[[0.0454, 0.0516, 0.0291, 0.0216]]], [[[0.0329, 0.0417, 0.0304, 0.0149]]], [[[0.0412, 0.0538, 0.0213, 0.0222]]], [[[0.0202, 0.0357, 0.0125, 0.0066]]]]]

Expected: [[[[[0.0042, 0.0107, 0.0096, 0.0074]]], [[[0.0858, 0.209, 0.1893, 0.1452]]], [[[0.1354, 0.1671, 0.1936, 0.1428]]], [[[0.0279, -0.0297, -0.0031, -0.01]]], [[[-0.0974, -0.3271, -0.4214, -0.2865]]], [[[-0.3738, -0.6741, -0.685, -0.5763]]], [[[-0.4074, -0.555, -0.6167, -0.4448]]], [[[-0.4378, -0.5121, -0.5044, -0.367]]], [[[-0.599, -0.6703, -0.3998, -0.2967]]], [[[-0.5189, -0.6995, -0.3912, -0.2379]]], [[[-0.4343, -0.5942, -0.2104, -0.2043]]], [[[-0.1401, -0.2513, -0.0549, -0.0121]]], [[[0.0393, 0.0561, 0.0586, 0.0398]]], [[[0.0411, 0.0545, 0.046, 0.0378]]], [[[0.0454, 0.0516, 0.0291, 0.0216]]], [[[0.0329, 0.0417, 0.0304, 0.0149]]], [[[0.0412, 0.0538, 0.0213, 0.0222]]], [[[0.0202, 0.0357, 0.0125, 0.0066]]]]]