import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Ave90310 = tf.keras.layers.Input(shape=([2, 1, 1, 1]))
in1Ave90310 = tf.keras.layers.Input(shape=([2, 1, 1, 1]))

Ave90310 = keras.layers.Average(name = 'Ave90310', )([in0Ave90310,in1Ave90310])
Res65884 = keras.layers.Reshape((2, 1, 1), name = 'Res65884', )(Ave90310)
Res81788 = keras.layers.Reshape((2, 1), name = 'Res81788', )(Res65884)
Ave96649 = keras.layers.AveragePooling1D(pool_size=(2), name = 'Ave96649', )(Res81788)
Cro9198 = keras.layers.Cropping1D(cropping=((0, 0)), name = 'Cro9198', )(Ave96649)
model = tf.keras.models.Model(inputs=[in0Ave90310,in1Ave90310], outputs=Cro9198)
in0Ave90310 = tf.constant([[[[[0.4477]]], [[[0.3549]]]]])
in1Ave90310 = tf.constant([[[[[0.3784]]], [[[0.5286]]]]])
print (np.array2string(model.predict([in0Ave90310,in1Ave90310],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Cro9198.png')

LAve90310 = average_layer([[[[[[0.4477]]], [[[0.3549]]]]], [[[[[0.3784]]], [[[0.5286]]]]]], Ave90310), 
LRes65884 = reshape_layer(Ave90310, [2, 1, 1], Res65884), 
LRes81788 = reshape_layer(Res65884, [2, 1], Res81788), 
LAve96649 = average_pooling1D_layer(Res81788, 2, Ave96649), 
LCro9198 = cropping1D_layer(Ave96649, 0, 0, Cro9198), 
exec_layers([LAve90310,LRes65884,LRes81788,LAve96649,LCro9198],["Ave90310","Res65884","Res81788","Ave96649","Cro9198"],Cro9198,"Cro9198")

Actual (Unparsed): [[[0.4274000]]]

Expected (Unparsed): [[[0.4274]]]

Actual:   [[[0.4274]]]

Expected: [[[0.4274]]]