import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Ave54117 = tf.keras.layers.Input(shape=([1, 1]))
in1Ave54117 = tf.keras.layers.Input(shape=([1, 1]))
in0Fla47111 = tf.keras.layers.Input(shape=([1, 4]))
in0Con78595 = tf.keras.layers.Input(shape=([1, 2, 3]))
in0Sep48657 = tf.keras.layers.Input(shape=([1, 2, 2]))

Ave54117 = keras.layers.Average(name = 'Ave54117', )([in0Ave54117,in1Ave54117])
Fla21398 = keras.layers.Flatten(name = 'Fla21398', )(Ave54117)
Fla47111 = keras.layers.Flatten(name = 'Fla47111', )(in0Fla47111)
Res70315 = keras.layers.Reshape((4, 1), name = 'Res70315', )(Fla47111)
Res59409 = keras.layers.Reshape((4, 1, 1), name = 'Res59409', )(Res70315)
Glo52574 = keras.layers.GlobalMaxPool2D(name = 'Glo52574', )(Res59409)
Sub89455 = keras.layers.Subtract(name = 'Sub89455', )([Fla21398,Glo52574])
Fla1862 = keras.layers.Flatten(name = 'Fla1862', )(Sub89455)
Res83449 = keras.layers.Reshape((1, 1), name = 'Res83449', )(Fla1862)
Res73028 = keras.layers.Reshape((1, 1, 1), name = 'Res73028', )(Res83449)
Zer89321 = keras.layers.ZeroPadding2D(padding=((0, 0), (1, 0)), name = 'Zer89321', )(Res73028)
Con78595 = keras.layers.Concatenate(axis=3, name = 'Con78595', )([Zer89321,in0Con78595])
Sep48657 = keras.layers.SeparableConv2D(4, (1, 1),strides=(1, 1), padding='same', name = 'Sep48657', )(in0Sep48657)
Mul19335 = keras.layers.Multiply(name = 'Mul19335', )([Con78595,Sep48657])
model = tf.keras.models.Model(inputs=[in0Ave54117,in1Ave54117,in0Fla47111,in0Con78595,in0Sep48657], outputs=Mul19335)
w = model.get_layer('Sep48657').get_weights() 
w[0] = np.array([[[[0.2938], [0.2286]]]])
w[1] = np.array([[[[0.31, 0.8203, 0.564, 0.4099], [0.1659, 0.4838, 0.2709, 0.6286]]]])
w[2] = np.array([0, 0, 0, 0])
model.get_layer('Sep48657').set_weights(w) 
in0Ave54117 = tf.constant([[[0.0009]]])
in1Ave54117 = tf.constant([[[0.2011]]])
in0Fla47111 = tf.constant([[[1.6534, 1.8737, 1.6523, 1.9938]]])
in0Con78595 = tf.constant([[[[0.3225, 0.8673, 0.9165], [0.0199, 0.4948, 0.8404]]]])
in0Sep48657 = tf.constant([[[[0.1361, 0.226], [0.801, 0.6049]]]])
print (np.array2string(model.predict([in0Ave54117,in1Ave54117,in0Fla47111,in0Con78595,in0Sep48657],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Mul19335.png')

LAve54117 = average_layer([[[[0.0009]]], [[[0.2011]]]], Ave54117), 
LFla21398 = flatten_layer(Ave54117, Fla21398), 
LFla47111 = flatten_layer([[[1.6534, 1.8737, 1.6523, 1.9938]]], Fla47111), 
LRes70315 = reshape_layer(Fla47111, [4, 1], Res70315), 
LRes59409 = reshape_layer(Res70315, [4, 1, 1], Res59409), 
LGlo52574 = global_max_pool2D_layer(Res59409, Glo52574), 
LSub89455 = subtract_layer(Fla21398,Glo52574, Sub89455), 
LFla1862 = flatten_layer(Sub89455, Fla1862), 
LRes83449 = reshape_layer(Fla1862, [1, 1], Res83449), 
LRes73028 = reshape_layer(Res83449, [1, 1, 1], Res73028), 
LZer89321 = zero_padding2D_layer(Res73028, 0, 0, 1, 0, Zer89321), 
LCon78595 = concatenate_layer([Zer89321,[[[[0.3225, 0.8673, 0.9165], [0.0199, 0.4948, 0.8404]]]]], 3, Con78595), 
LSep48657 = separable_conv2D_layer([[[[0.1361, 0.226], [0.801, 0.6049]]]], 1, 1,[[[[[0.2938], [0.2286]]]],[[[[0.31, 0.8203, 0.564, 0.4099], [0.1659, 0.4838, 0.2709, 0.6286]]]]],[0, 0, 0, 0], 1, 1, true, Sep48657), 
LMul19335 = multiply_layer([Con78595,Sep48657], Mul19335), 
exec_layers([LAve54117,LFla21398,LFla47111,LRes70315,LRes59409,LGlo52574,LSub89455,LFla1862,LRes83449,LRes73028,LZer89321,LCon78595,LSep48657,LMul19335],["Ave54117","Fla21398","Fla47111","Res70315","Res59409","Glo52574","Sub89455","Fla1862","Res83449","Res73028","Zer89321","Con78595","Sep48657","Mul19335"],Mul19335,"Mul19335")

Actual (Unparsed): [[[[0.0000000, 0.0186391, 0.0316980, 0.0447858], [-0.1815085, 0.0051729, 0.0842092, 0.1541178]]]]

Expected (Unparsed): [[[[0.0,0.018639052985715006,0.031697971779348,0.044785756951143],[-0.18150845322617282,0.0051728905326528,0.08420919712674481,0.15411777981240962]]]]

Actual:   [[[[0, 0.0187, 0.0317, 0.0448], [-0.1815, 0.0052, 0.0843, 0.1542]]]]

Expected: [[[[0, 0.0187, 0.0317, 0.0448], [-0.1815, 0.0052, 0.0843, 0.1542]]]]