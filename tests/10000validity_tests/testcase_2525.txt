import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Max45169 = tf.keras.layers.Input(shape=([2, 2, 2]))
in1Max45169 = tf.keras.layers.Input(shape=([2, 2, 2]))
in0Mul17802 = tf.keras.layers.Input(shape=([2, 1, 2]))
in1Mul17802 = tf.keras.layers.Input(shape=([2, 1, 2]))
in0Con55387 = tf.keras.layers.Input(shape=([2, 1]))
in0Ave1098 = tf.keras.layers.Input(shape=([1, 1, 1]))
in1Ave1098 = tf.keras.layers.Input(shape=([1, 1, 1]))
in0Con18337 = tf.keras.layers.Input(shape=([3, 3]))

Max45169 = keras.layers.Maximum(name = 'Max45169', )([in0Max45169,in1Max45169])
Res27831 = keras.layers.Reshape((2, 4), name = 'Res27831', )(Max45169)
Zer55284 = keras.layers.ZeroPadding1D(padding=((1, 0)), name = 'Zer55284', )(Res27831)
Mul17802 = keras.layers.Multiply(name = 'Mul17802', )([in0Mul17802,in1Mul17802])
Res80147 = keras.layers.Reshape((2, 2), name = 'Res80147', )(Mul17802)
Con55387 = keras.layers.Concatenate(axis=2, name = 'Con55387', )([Res80147,in0Con55387])
Ave1098 = keras.layers.Average(name = 'Ave1098', )([in0Ave1098,in1Ave1098])
Res26343 = keras.layers.Reshape((1, 1), name = 'Res26343', )(Ave1098)
Zer45073 = keras.layers.ZeroPadding1D(padding=((1, 0)), name = 'Zer45073', )(Res26343)
Dot65520 = keras.layers.Dot(axes=(1, 1), name = 'Dot65520', )([Con55387,Zer45073])
Up_57616 = keras.layers.UpSampling1D(size=(1), name = 'Up_57616', )(Dot65520)
Con18337 = keras.layers.Concatenate(axis=2, name = 'Con18337', )([Up_57616,in0Con18337])
Sub34895 = keras.layers.Subtract(name = 'Sub34895', )([Zer55284,Con18337])
model = tf.keras.models.Model(inputs=[in0Max45169,in1Max45169,in0Mul17802,in1Mul17802,in0Con55387,in0Ave1098,in1Ave1098,in0Con18337], outputs=Sub34895)
in0Max45169 = tf.constant([[[[0.8826, 0.8696], [0.3358, 0.4801]], [[0.4129, 0.8739], [0.6023, 0.4325]]]])
in1Max45169 = tf.constant([[[[0.3439, 0.9727], [0.9467, 0.841]], [[0.7599, 0.5537], [0.3029, 0.3718]]]])
in0Mul17802 = tf.constant([[[[0.0263, 0.7556]], [[0.6537, 0.6162]]]])
in1Mul17802 = tf.constant([[[[0.3085, 0.4766]], [[0.2139, 0.4024]]]])
in0Con55387 = tf.constant([[[0.6868], [0.0637]]])
in0Ave1098 = tf.constant([[[[0.932]]]])
in1Ave1098 = tf.constant([[[[0.2186]]]])
in0Con18337 = tf.constant([[[0.0691, 0.8628, 0.8527], [0.0385, 0.1994, 0.6125], [0.7982, 0.2035, 0.6155]]])
print (np.array2string(model.predict([in0Max45169,in1Max45169,in0Mul17802,in1Mul17802,in0Con55387,in0Ave1098,in1Ave1098,in0Con18337],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Sub34895.png')

LMax45169 = maximum_layer([[[[[0.8826, 0.8696], [0.3358, 0.4801]], [[0.4129, 0.8739], [0.6023, 0.4325]]]], [[[[0.3439, 0.9727], [0.9467, 0.841]], [[0.7599, 0.5537], [0.3029, 0.3718]]]]], Max45169), 
LRes27831 = reshape_layer(Max45169, [2, 4], Res27831), 
LZer55284 = zero_padding1D_layer(Res27831, 1, 0, Zer55284), 
LMul17802 = multiply_layer([[[[[0.0263, 0.7556]], [[0.6537, 0.6162]]]], [[[[0.3085, 0.4766]], [[0.2139, 0.4024]]]]], Mul17802), 
LRes80147 = reshape_layer(Mul17802, [2, 2], Res80147), 
LCon55387 = concatenate_layer([Res80147,[[[0.6868], [0.0637]]]], 2, Con55387), 
LAve1098 = average_layer([[[[[0.932]]]], [[[[0.2186]]]]], Ave1098), 
LRes26343 = reshape_layer(Ave1098, [1, 1], Res26343), 
LZer45073 = zero_padding1D_layer(Res26343, 1, 0, Zer45073), 
LDot65520 = dot_layer(Con55387,Zer45073, 1, 1, Dot65520), 
LUp_57616 = up_sampling1D_layer(Dot65520, 1, Up_57616), 
LCon18337 = concatenate_layer([Up_57616,[[[0.0691, 0.8628, 0.8527], [0.0385, 0.1994, 0.6125], [0.7982, 0.2035, 0.6155]]]], 2, Con18337), 
LSub34895 = subtract_layer(Zer55284,Con18337, Sub34895), 
exec_layers([LMax45169,LRes27831,LZer55284,LMul17802,LRes80147,LCon55387,LAve1098,LRes26343,LZer45073,LDot65520,LUp_57616,LCon18337,LSub34895],["Max45169","Res27831","Zer55284","Mul17802","Res80147","Con55387","Ave1098","Res26343","Zer45073","Dot65520","Up_57616","Con18337","Sub34895"],Sub34895,"Sub34895")

Actual (Unparsed): [[[-0.0804421, -0.0691000, -0.8628000, -0.8527000], [0.7399493, 0.9342000, 0.7473000, 0.2285000], [0.7232534, 0.0757000, 0.3988000, -0.1830000]]]

Expected (Unparsed): [[[-0.080442145179,-0.0691,-0.8628,-0.8527],[0.7399492563360001,0.9342,0.7473,0.22849999999999993],[0.72325339,0.07569999999999999,0.39879999999999993,-0.18300000000000005]]]

Actual:   [[[-0.0804, -0.0691, -0.8628, -0.8527], [0.74, 0.9342, 0.7473, 0.2285], [0.7233, 0.0757, 0.3988, -0.183]]]

Expected: [[[-0.0804, -0.0691, -0.8628, -0.8527], [0.74, 0.9342, 0.7473, 0.2285], [0.7233, 0.0757, 0.3988, -0.183]]]