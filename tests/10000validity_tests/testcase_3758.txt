import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Sof41101 = tf.keras.layers.Input(shape=([2, 2]))

Sof41101 = keras.layers.Softmax(axis=1, name = 'Sof41101', input_shape=(2, 2))(in0Sof41101)
Bat99534 = keras.layers.BatchNormalization(axis=2, epsilon=0.33460286406072465,  name = 'Bat99534', )(Sof41101)
Res27491 = keras.layers.Reshape((2, 2, 1), name = 'Res27491', )(Bat99534)
Dep47389 = keras.layers.DepthwiseConv2D((1, 2),strides=(2, 2), padding='valid', name = 'Dep47389', )(Res27491)
model = tf.keras.models.Model(inputs=[in0Sof41101], outputs=Dep47389)
w = model.get_layer('Bat99534').get_weights() 
w[0] = np.array([0.9928, 0.0391])
w[1] = np.array([0.4765, 0.1423])
w[2] = np.array([0.5497, 0.0559])
w[3] = np.array([0.793, 0.4156])
model.get_layer('Bat99534').set_weights(w) 
w = model.get_layer('Dep47389').get_weights() 
w[0] = np.array([[[[0.3157]], [[0.1304]]]])
w[1] = np.array([0])
model.get_layer('Dep47389').set_weights(w) 
in0Sof41101 = tf.constant([[[0.7543, 0.5723], [0.0297, 0.9182]]])
print (np.array2string(model.predict([in0Sof41101],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Dep47389.png')

LSof41101 = softmax_layer([[[0.7543, 0.5723], [0.0297, 0.9182]]], 1, Sof41101), 
LBat99534 = batch_normalization_layer(Sof41101, 2, 0.33460286406072465, [0.9928, 0.0391], [0.4765, 0.1423], [0.5497, 0.0559], [0.793, 0.4156], Bat99534), 
LRes27491 = reshape_layer(Bat99534, [2, 2, 1], Res27491), 
LDep47389 = depthwise_conv2D_layer(Res27491, 1, 2,[[[[0.3157]], [[0.1304]]]],[0], 2, 2, false, Dep47389), 
exec_layers([LSof41101,LBat99534,LRes27491,LDep47389],["Sof41101","Bat99534","Res27491","Dep47389"],Dep47389,"Dep47389")

Actual (Unparsed): [[[[0.2076732]]]]

Expected (Unparsed): [[[[0.2076732274941009]]]]

Actual:   [[[[0.2077]]]]

Expected: [[[[0.2077]]]]