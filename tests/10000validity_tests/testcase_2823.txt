import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Dot79027 = tf.keras.layers.Input(shape=([2]))
in1Dot79027 = tf.keras.layers.Input(shape=([2]))
in0PRe89602 = tf.keras.layers.Input(shape=([1, 2, 1, 2]))
in0Add22817 = tf.keras.layers.Input(shape=([1, 2, 2]))
in1Add22817 = tf.keras.layers.Input(shape=([1, 2, 2]))
in0Con7558 = tf.keras.layers.Input(shape=([4, 4, 1]))
in0Ave76665 = tf.keras.layers.Input(shape=([1, 1, 2]))
in1Ave76665 = tf.keras.layers.Input(shape=([1, 1, 2]))
in0Con9457 = tf.keras.layers.Input(shape=([4, 4, 1]))
in0Sub56861 = tf.keras.layers.Input(shape=([2, 2, 3]))
in1Sub56861 = tf.keras.layers.Input(shape=([2, 2, 3]))
in0Con82534 = tf.keras.layers.Input(shape=([4, 4, 1]))

Dot79027 = keras.layers.Dot(axes=(1, 1), name = 'Dot79027', )([in0Dot79027,in1Dot79027])
Res48513 = keras.layers.Reshape((1, 1), name = 'Res48513', )(Dot79027)
Res74529 = keras.layers.Reshape((1, 1, 1), name = 'Res74529', )(Res48513)
Loc33384 = keras.layers.LocallyConnected2D(4, (1, 1),strides=(1, 1), name = 'Loc33384', )(Res74529)
Zer50027 = keras.layers.ZeroPadding2D(padding=((3, 0), (3, 0)), name = 'Zer50027', )(Loc33384)
PRe89602 = keras.layers.PReLU(name = 'PRe89602', input_shape=(1, 2, 1, 2))(in0PRe89602)
Res71513 = keras.layers.Reshape((1, 2, 2), name = 'Res71513', )(PRe89602)
Res24364 = keras.layers.Reshape((1, 4), name = 'Res24364', )(Res71513)
Add22817 = keras.layers.Add(name = 'Add22817', )([in0Add22817,in1Add22817])
Res57559 = keras.layers.Reshape((1, 4), name = 'Res57559', )(Add22817)
Dot94459 = keras.layers.Dot(axes=(1, 1), name = 'Dot94459', )([Res24364,Res57559])
Res21705 = keras.layers.Reshape((4, 4, 1), name = 'Res21705', )(Dot94459)
Con7558 = keras.layers.Concatenate(axis=3, name = 'Con7558', )([Res21705,in0Con7558])
Ave76665 = keras.layers.Average(name = 'Ave76665', )([in0Ave76665,in1Ave76665])
Zer70636 = keras.layers.ZeroPadding2D(padding=((3, 0), (3, 0)), name = 'Zer70636', )(Ave76665)
Min83176 = keras.layers.Minimum(name = 'Min83176', )([Con7558,Zer70636])
Con9457 = keras.layers.Concatenate(axis=3, name = 'Con9457', )([Min83176,in0Con9457])
Sub56861 = keras.layers.Subtract(name = 'Sub56861', )([in0Sub56861,in1Sub56861])
Ave75952 = keras.layers.AveragePooling2D(pool_size=(1, 2), strides=(2, 2), padding='same', name = 'Ave75952', )(Sub56861)
Zer45976 = keras.layers.ZeroPadding2D(padding=((3, 0), (3, 0)), name = 'Zer45976', )(Ave75952)
Ave3490 = keras.layers.Average(name = 'Ave3490', )([Con9457,Zer45976])
Con82534 = keras.layers.Concatenate(axis=3, name = 'Con82534', )([Ave3490,in0Con82534])
Add78987 = keras.layers.Add(name = 'Add78987', )([Zer50027,Con82534])
model = tf.keras.models.Model(inputs=[in0Dot79027,in1Dot79027,in0PRe89602,in0Add22817,in1Add22817,in0Con7558,in0Ave76665,in1Ave76665,in0Con9457,in0Sub56861,in1Sub56861,in0Con82534], outputs=Add78987)
w = model.get_layer('Loc33384').get_weights() 
w[0] = np.array([[[0.3661, 0.6945, 0.7109, 0.9133]]])
w[1] = np.array([[[0, 0, 0, 0]]])
model.get_layer('Loc33384').set_weights(w) 
w = model.get_layer('PRe89602').get_weights() 
w[0] = np.array([[[[0.6138, 0.3128]], [[0.4673, 0.251]]]])
model.get_layer('PRe89602').set_weights(w) 
in0Dot79027 = tf.constant([[0.5266, 0.2264]])
in1Dot79027 = tf.constant([[0.8489, 0.9494]])
in0PRe89602 = tf.constant([[[[[0.2365, 0.076]], [[0.9801, 0.1621]]]]])
in0Add22817 = tf.constant([[[[0.7075, 0.0199], [0.7753, 0.3193]]]])
in1Add22817 = tf.constant([[[[0.2736, 0.9924], [0.6034, 0.1004]]]])
in0Con7558 = tf.constant([[[[0.407], [0.6496], [0.592], [0.3622]], [[0.533], [0.1891], [0.7198], [0.1011]], [[0.6573], [0.0937], [0.4469], [0.8795]], [[0.6034], [0.4672], [0.4658], [0.0767]]]])
in0Ave76665 = tf.constant([[[[0.5235, 0.1452]]]])
in1Ave76665 = tf.constant([[[[0.8038, 0.984]]]])
in0Con9457 = tf.constant([[[[0.3041], [0.2709], [0.3652], [0.1957]], [[0.0854], [0.0066], [0.0375], [0.2826]], [[0.4048], [0.4213], [0.7481], [0.9457]], [[0.4776], [0.3077], [0.7052], [0.7571]]]])
in0Sub56861 = tf.constant([[[[0.6423, 0.1813, 0.6771], [0.454, 0.2507, 0.7686]], [[0.9786, 0.0621, 0.1541], [0.6896, 0.0434, 0.773]]]])
in1Sub56861 = tf.constant([[[[0.2349, 0.1157, 0.3894], [0.265, 0.5761, 0.412]], [[0.8837, 0.8951, 0.784], [0.1775, 0.3346, 0.8488]]]])
in0Con82534 = tf.constant([[[[0.0272], [0.3727], [0.4864], [0.0569]], [[0.618], [0.1883], [0.1599], [0.6166]], [[0.1475], [0.1772], [0.1395], [0.3879]], [[0.1434], [0.6447], [0.3744], [0.7593]]]])
print (np.array2string(model.predict([in0Dot79027,in1Dot79027,in0PRe89602,in0Add22817,in1Add22817,in0Con7558,in0Ave76665,in1Ave76665,in0Con9457,in0Sub56861,in1Sub56861,in0Con82534],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Add78987.png')

LDot79027 = dot_layer([[0.5266, 0.2264]], [[0.8489, 0.9494]], 1, 1, Dot79027), 
LRes48513 = reshape_layer(Dot79027, [1, 1], Res48513), 
LRes74529 = reshape_layer(Res48513, [1, 1, 1], Res74529), 
LLoc33384 = locally_connected2D_layer(Res74529, 1, 1,[[[0.3661, 0.6945, 0.7109, 0.9133]]],[[[0, 0, 0, 0]]], 1, 1, Loc33384), 
LZer50027 = zero_padding2D_layer(Loc33384, 3, 0, 3, 0, Zer50027), 
LPRe89602 = prelu_layer([[[[[0.2365, 0.076]], [[0.9801, 0.1621]]]]], [[[[0.6138, 0.3128]], [[0.4673, 0.251]]]], PRe89602), 
LRes71513 = reshape_layer(PRe89602, [1, 2, 2], Res71513), 
LRes24364 = reshape_layer(Res71513, [1, 4], Res24364), 
LAdd22817 = add_layer([[[[[0.7075, 0.0199], [0.7753, 0.3193]]]], [[[[0.2736, 0.9924], [0.6034, 0.1004]]]]], Add22817), 
LRes57559 = reshape_layer(Add22817, [1, 4], Res57559), 
LDot94459 = dot_layer(Res24364,Res57559, 1, 1, Dot94459), 
LRes21705 = reshape_layer(Dot94459, [4, 4, 1], Res21705), 
LCon7558 = concatenate_layer([Res21705,[[[[0.407], [0.6496], [0.592], [0.3622]], [[0.533], [0.1891], [0.7198], [0.1011]], [[0.6573], [0.0937], [0.4469], [0.8795]], [[0.6034], [0.4672], [0.4658], [0.0767]]]]], 3, Con7558), 
LAve76665 = average_layer([[[[[0.5235, 0.1452]]]], [[[[0.8038, 0.984]]]]], Ave76665), 
LZer70636 = zero_padding2D_layer(Ave76665, 3, 0, 3, 0, Zer70636), 
LMin83176 = minimum_layer([Con7558,Zer70636], Min83176), 
LCon9457 = concatenate_layer([Min83176,[[[[0.3041], [0.2709], [0.3652], [0.1957]], [[0.0854], [0.0066], [0.0375], [0.2826]], [[0.4048], [0.4213], [0.7481], [0.9457]], [[0.4776], [0.3077], [0.7052], [0.7571]]]]], 3, Con9457), 
LSub56861 = subtract_layer([[[[0.6423, 0.1813, 0.6771], [0.454, 0.2507, 0.7686]], [[0.9786, 0.0621, 0.1541], [0.6896, 0.0434, 0.773]]]], [[[[0.2349, 0.1157, 0.3894], [0.265, 0.5761, 0.412]], [[0.8837, 0.8951, 0.784], [0.1775, 0.3346, 0.8488]]]], Sub56861), 
LAve75952 = average_pooling2D_layer(Sub56861, 1, 2, 2, 2, true, Ave75952), 
LZer45976 = zero_padding2D_layer(Ave75952, 3, 0, 3, 0, Zer45976), 
LAve3490 = average_layer([Con9457,Zer45976], Ave3490), 
LCon82534 = concatenate_layer([Ave3490,[[[[0.0272], [0.3727], [0.4864], [0.0569]], [[0.618], [0.1883], [0.1599], [0.6166]], [[0.1475], [0.1772], [0.1395], [0.3879]], [[0.1434], [0.6447], [0.3744], [0.7593]]]]], 3, Con82534), 
LAdd78987 = add_layer([Zer50027,Con82534], Add78987), 
exec_layers([LDot79027,LRes48513,LRes74529,LLoc33384,LZer50027,LPRe89602,LRes71513,LRes24364,LAdd22817,LRes57559,LDot94459,LRes21705,LCon7558,LAve76665,LZer70636,LMin83176,LCon9457,LSub56861,LAve75952,LZer45976,LAve3490,LCon82534,LAdd78987],["Dot79027","Res48513","Res74529","Loc33384","Zer50027","PRe89602","Res71513","Res24364","Add22817","Res57559","Dot94459","Res21705","Con7558","Ave76665","Zer70636","Min83176","Con9457","Sub56861","Ave75952","Zer45976","Ave3490","Con82534","Add78987"],Add78987,"Add78987")

Actual (Unparsed): [[[[0.0000000, 0.0000000, 0.1520500, 0.0272000], [0.0000000, 0.0000000, 0.1354500, 0.3727000], [0.0000000, 0.0000000, 0.1826000, 0.4864000], [0.0000000, 0.0000000, 0.0978500, 0.0569000]], [[0.0000000, 0.0000000, 0.0427000, 0.6180000], [0.0000000, 0.0000000, 0.0033000, 0.1883000], [0.0000000, 0.0000000, 0.0187500, 0.1599000], [0.0000000, 0.0000000, 0.1413000, 0.6166000]], [[0.0000000, 0.0000000, 0.2024000, 0.1475000], [0.0000000, 0.0000000, 0.2106500, 0.1772000], [0.0000000, 0.0000000, 0.3740500, 0.1395000], [0.0000000, 0.0000000, 0.4728500, 0.3879000]], [[0.0000000, 0.0000000, 0.2388000, 0.1434000], [0.0000000, 0.0000000, 0.1538500, 0.6447000], [0.0000000, 0.0000000, 0.3526000, 0.3744000], [0.4254657, 0.4331416, 1.0102230, 1.3638817]]]]

Expected (Unparsed): [[[[0,0,0.15205,0.0272],[0,0,0.13545,0.3727],[0,0,0.1826,0.4864],[0,0,0.09785,0.0569]],[[0,0,0.0427,0.618],[0,0,0.0033,0.1883],[0,0,0.01875,0.1599],[0,0,0.1413,0.6166]],[[0,0,0.2024,0.1475],[0,0,0.21065,0.1772],[0,0,0.37405,0.1395],[0,0,0.47285,0.3879]],[[0,0,0.2388,0.1434],[0,0,0.15385,0.6447],[0,0,0.3526,0.3744],[0.42546569588999994,0.4331415680499999,1.0102229564099998,1.36388167617]]]]

Actual:   [[[[0, 0, 0.1521, 0.0272], [0, 0, 0.1355, 0.3727], [0, 0, 0.1826, 0.4864], [0, 0, 0.0979, 0.0569]], [[0, 0, 0.0427, 0.618], [0, 0, 0.0033, 0.1883], [0, 0, 0.0188, 0.1599], [0, 0, 0.1413, 0.6166]], [[0, 0, 0.2024, 0.1475], [0, 0, 0.2107, 0.1772], [0, 0, 0.3741, 0.1395], [0, 0, 0.4729, 0.3879]], [[0, 0, 0.2388, 0.1434], [0, 0, 0.1539, 0.6447], [0, 0, 0.3526, 0.3744], [0.4255, 0.4332, 1.0103, 1.3639]]]]

Expected: [[[[0, 0, 0.1521, 0.0272], [0, 0, 0.1355, 0.3727], [0, 0, 0.1826, 0.4864], [0, 0, 0.0979, 0.0569]], [[0, 0, 0.0427, 0.618], [0, 0, 0.0033, 0.1883], [0, 0, 0.0188, 0.1599], [0, 0, 0.1413, 0.6166]], [[0, 0, 0.2024, 0.1475], [0, 0, 0.2107, 0.1772], [0, 0, 0.3741, 0.1395], [0, 0, 0.4729, 0.3879]], [[0, 0, 0.2388, 0.1434], [0, 0, 0.1539, 0.6447], [0, 0, 0.3526, 0.3744], [0.4255, 0.4332, 1.0103, 1.3639]]]]