import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Sim78612 = tf.keras.layers.Input(shape=([2, 2]))
in0Con31558 = tf.keras.layers.Input(shape=([2, 1]))
in0Min32861 = tf.keras.layers.Input(shape=([1, 2]))
in1Min32861 = tf.keras.layers.Input(shape=([1, 2]))
in0Ave21006 = tf.keras.layers.Input(shape=([2, 1]))
in1Ave21006 = tf.keras.layers.Input(shape=([2, 1]))
in0Con45536 = tf.keras.layers.Input(shape=([2, 1]))

Sim78612 = keras.layers.SimpleRNN(2,name = 'Sim78612', )(in0Sim78612)
Res12633 = keras.layers.Reshape((2, 1), name = 'Res12633', )(Sim78612)
Con31558 = keras.layers.Concatenate(axis=2, name = 'Con31558', )([Res12633,in0Con31558])
Min32861 = keras.layers.Minimum(name = 'Min32861', )([in0Min32861,in1Min32861])
Zer53556 = keras.layers.ZeroPadding1D(padding=((1, 0)), name = 'Zer53556', )(Min32861)
Ave21006 = keras.layers.Average(name = 'Ave21006', )([in0Ave21006,in1Ave21006])
Con45536 = keras.layers.Concatenate(axis=2, name = 'Con45536', )([Ave21006,in0Con45536])
Min21254 = keras.layers.Minimum(name = 'Min21254', )([Zer53556,Con45536])
Lay22027 = keras.layers.LayerNormalization(axis=1, epsilon=2.4923112679776938, name = 'Lay22027', )(Min21254)
Ave50474 = keras.layers.Average(name = 'Ave50474', )([Con31558,Lay22027])
model = tf.keras.models.Model(inputs=[in0Sim78612,in0Con31558,in0Min32861,in1Min32861,in0Ave21006,in1Ave21006,in0Con45536], outputs=Ave50474)
w = model.get_layer('Sim78612').get_weights() 
w[0] = np.array([[4, 3], [8, 3]])
w[1] = np.array([[6, 4], [1, 1]])
w[2] = np.array([3, 7])
model.get_layer('Sim78612').set_weights(w) 
in0Sim78612 = tf.constant([[[6, 6], [1, 9]]])
in0Con31558 = tf.constant([[[0.3972], [0.1604]]])
in0Min32861 = tf.constant([[[0.9191, 0.2903]]])
in1Min32861 = tf.constant([[[0.4138, 0.2159]]])
in0Ave21006 = tf.constant([[[0.5748], [0.2267]]])
in1Ave21006 = tf.constant([[[0.5927], [0.166]]])
in0Con45536 = tf.constant([[[0.3193], [0.3514]]])
print (np.array2string(model.predict([in0Sim78612,in0Con31558,in0Min32861,in1Min32861,in0Ave21006,in1Ave21006,in0Con45536],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Ave50474.png')

LSim78612 = simple_rnn_layer([[[6, 6], [1, 9]]],[[4, 3], [8, 3]],[[6, 4], [1, 1]],[3, 7], Sim78612), 
LRes12633 = reshape_layer(Sim78612, [2, 1], Res12633), 
LCon31558 = concatenate_layer([Res12633,[[[0.3972], [0.1604]]]], 2, Con31558), 
LMin32861 = minimum_layer([[[[0.9191, 0.2903]]], [[[0.4138, 0.2159]]]], Min32861), 
LZer53556 = zero_padding1D_layer(Min32861, 1, 0, Zer53556), 
LAve21006 = average_layer([[[[0.5748], [0.2267]]], [[[0.5927], [0.166]]]], Ave21006), 
LCon45536 = concatenate_layer([Ave21006,[[[0.3193], [0.3514]]]], 2, Con45536), 
LMin21254 = minimum_layer([Zer53556,Con45536], Min21254), 
LLay22027 = layer_normalization_layer(Min21254, 1, 2.4923112679776938, Lay22027), 
LAve50474 = average_layer([Con31558,Lay22027], Ave50474), 
exec_layers([LSim78612,LRes12633,LCon31558,LMin32861,LZer53556,LAve21006,LCon45536,LMin21254,LLay22027,LAve50474],["Sim78612","Res12633","Con31558","Min32861","Zer53556","Ave21006","Con45536","Min21254","Lay22027","Ave50474"],Ave50474,"Ave50474")

Actual (Unparsed): [[[0.4689664, 0.1644902], [0.5310336, 0.1143098]]]

Expected (Unparsed): [[[0.4689664373111764,0.1644902473663614],[0.5310335626888236,0.1143097526336386]]]

Actual:   [[[0.469, 0.1645], [0.5311, 0.1144]]]

Expected: [[[0.469, 0.1645], [0.5311, 0.1144]]]