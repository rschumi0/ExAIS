import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Con43663 = tf.keras.layers.Input(shape=([2, 1, 2, 2]))

Con43663 = keras.layers.Conv3D(4, (1, 1, 1),strides=(1, 1, 1), padding='same', dilation_rate=(1, 1, 1), name = 'Con43663', )(in0Con43663)
Res86293 = keras.layers.Reshape((2, 1, 8), name = 'Res86293', )(Con43663)
Max44805 = keras.layers.MaxPool2D(pool_size=(1, 1), name = 'Max44805', )(Res86293)
Ave75821 = keras.layers.AveragePooling2D(pool_size=(1, 1), strides=(1, 1), padding='same', name = 'Ave75821', )(Max44805)
model = tf.keras.models.Model(inputs=[in0Con43663], outputs=Ave75821)
w = model.get_layer('Con43663').get_weights() 
w[0] = np.array([[[[[0.7701, 0.6098, 0.0535, 0.6552], [0.7866, 0.6846, 0.532, 0.4453]]]]])
w[1] = np.array([0, 0, 0, 0])
model.get_layer('Con43663').set_weights(w) 
in0Con43663 = tf.constant([[[[[0.7892, 0.6822], [0.6167, 0.3221]]], [[[0.2666, 0.1969], [0.642, 0.8516]]]]])
print (np.array2string(model.predict([in0Con43663],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Ave75821.png')

LCon43663 = conv3D_layer([[[[[0.7892, 0.6822], [0.6167, 0.3221]]], [[[0.2666, 0.1969], [0.642, 0.8516]]]]], 1, 1, 1,[[[[[0.7701, 0.6098, 0.0535, 0.6552], [0.7866, 0.6846, 0.532, 0.4453]]]]],[0, 0, 0, 0], 1, 1, 1, true, 1, 1, 1, Con43663), 
LRes86293 = reshape_layer(Con43663, [2, 1, 8], Res86293), 
LMax44805 = max_pool2D_layer(Res86293, 1, 1, Max44805), 
LAve75821 = average_pooling2D_layer(Max44805, 1, 1, 1, 1, true, Ave75821), 
exec_layers([LCon43663,LRes86293,LMax44805,LAve75821],["Con43663","Res86293","Max44805","Ave75821"],Ave75821,"Ave75821")

Actual (Unparsed): [[[[1.1443815, 0.9482883, 0.4051526, 0.8208675, 0.7282845, 0.5965733, 0.2043507, 0.5474930]], [[0.3601902, 0.2973704, 0.1190139, 0.2623559, 1.1642728, 0.9744970, 0.4873982, 0.7998559]]]]

Expected (Unparsed): [[[[1.14438144,0.9482882800000001,0.40515260000000003,0.8208675,0.72828453,0.5965733200000001,0.20435065000000002,0.54749297]],[[0.3601902,0.29737042,0.1190139,0.26235589,1.16427276,0.97449696,0.48739820000000006,0.79985588]]]]

Actual:   [[[[1.1444, 0.9483, 0.4052, 0.8209, 0.7283, 0.5966, 0.2044, 0.5475]], [[0.3602, 0.2974, 0.1191, 0.2624, 1.1643, 0.9745, 0.4874, 0.7999]]]]

Expected: [[[[1.1444, 0.9483, 0.4052, 0.8209, 0.7283, 0.5966, 0.2044, 0.5475]], [[0.3602, 0.2974, 0.1191, 0.2624, 1.1643, 0.9745, 0.4874, 0.7999]]]]