import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Add44233 = tf.keras.layers.Input(shape=([1, 1]))
in1Add44233 = tf.keras.layers.Input(shape=([1, 1]))
in0Ave62257 = tf.keras.layers.Input(shape=([2, 1]))
in1Ave62257 = tf.keras.layers.Input(shape=([2, 1]))

Add44233 = keras.layers.Add(name = 'Add44233', )([in0Add44233,in1Add44233])
Res9798 = keras.layers.Reshape((1, 1, 1), name = 'Res9798', )(Add44233)
Ave45098 = keras.layers.AveragePooling2D(pool_size=(1, 1), strides=(1, 1), padding='valid', name = 'Ave45098', )(Res9798)
Res10459 = keras.layers.Reshape((1, 1), name = 'Res10459', )(Ave45098)
Zer14668 = keras.layers.ZeroPadding1D(padding=((1, 0)), name = 'Zer14668', )(Res10459)
Ave62257 = keras.layers.Average(name = 'Ave62257', )([in0Ave62257,in1Ave62257])
Max44879 = keras.layers.Maximum(name = 'Max44879', )([Zer14668,Ave62257])
GRU55925 = keras.layers.GRU(3,reset_after=False, recurrent_activation='sigmoid', name = 'GRU55925', )(Max44879)
Res91107 = keras.layers.Reshape((3, 1), name = 'Res91107', )(GRU55925)
LST13650 = keras.layers.LSTM(3,recurrent_activation='sigmoid', name = 'LST13650', )(Res91107)
model = tf.keras.models.Model(inputs=[in0Add44233,in1Add44233,in0Ave62257,in1Ave62257], outputs=LST13650)
w = model.get_layer('GRU55925').get_weights() 
w[0] = np.array([[6, 7, 10, 3, 9, 8, 9, 5, 3]])
w[1] = np.array([[1, 9, 5, 2, 9, 9, 10, 5, 8], [8, 10, 5, 4, 1, 6, 2, 6, 3], [9, 1, 6, 7, 4, 3, 9, 9, 10]])
w[2] = np.array([1, 6, 10, 9, 4, 7, 3, 10, 1])
model.get_layer('GRU55925').set_weights(w) 
w = model.get_layer('LST13650').get_weights() 
w[0] = np.array([[2, 7, 10, 10, 9, 6, 8, 1, 3, 7, 1, 8]])
w[1] = np.array([[4, 6, 7, 5, 4, 2, 4, 6, 9, 5, 8, 8], [2, 1, 1, 4, 7, 5, 3, 9, 5, 1, 3, 5], [9, 3, 3, 10, 2, 9, 7, 2, 4, 7, 4, 10]])
w[2] = np.array([6, 10, 3, 5, 9, 4, 1, 6, 4, 5, 10, 8])
model.get_layer('LST13650').set_weights(w) 
in0Add44233 = tf.constant([[[0.9082]]])
in1Add44233 = tf.constant([[[0.7671]]])
in0Ave62257 = tf.constant([[[0.7351], [0.4563]]])
in1Ave62257 = tf.constant([[[0.6292], [0.2982]]])
print (np.array2string(model.predict([in0Add44233,in1Add44233,in0Ave62257,in1Ave62257],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='LST13650.png')

LAdd44233 = add_layer([[[[0.9082]]], [[[0.7671]]]], Add44233), 
LRes9798 = reshape_layer(Add44233, [1, 1, 1], Res9798), 
LAve45098 = average_pooling2D_layer(Res9798, 1, 1, 1, 1, false, Ave45098), 
LRes10459 = reshape_layer(Ave45098, [1, 1], Res10459), 
LZer14668 = zero_padding1D_layer(Res10459, 1, 0, Zer14668), 
LAve62257 = average_layer([[[[0.7351], [0.4563]]], [[[0.6292], [0.2982]]]], Ave62257), 
LMax44879 = maximum_layer([Zer14668,Ave62257], Max44879), 
LGRU55925 = gru_layer(Max44879,[[6, 7, 10, 3, 9, 8, 9, 5, 3]],[[1, 9, 5, 2, 9, 9, 10, 5, 8], [8, 10, 5, 4, 1, 6, 2, 6, 3], [9, 1, 6, 7, 4, 3, 9, 9, 10]],[1, 6, 10, 9, 4, 7, 3, 10, 1], false, GRU55925), 
LRes91107 = reshape_layer(GRU55925, [3, 1], Res91107), 
LLST13650 = lstm_layer(Res91107,[[2, 7, 10, 10, 9, 6, 8, 1, 3, 7, 1, 8]],[[4, 6, 7, 5, 4, 2, 4, 6, 9, 5, 8, 8], [2, 1, 1, 4, 7, 5, 3, 9, 5, 1, 3, 5], [9, 3, 3, 10, 2, 9, 7, 2, 4, 7, 4, 10]],[6, 10, 3, 5, 9, 4, 1, 6, 4, 5, 10, 8], LST13650), 
exec_layers([LAdd44233,LRes9798,LAve45098,LRes10459,LZer14668,LAve62257,LMax44879,LGRU55925,LRes91107,LLST13650],["Add44233","Res9798","Ave45098","Res10459","Zer14668","Ave62257","Max44879","GRU55925","Res91107","LST13650"],LST13650,"LST13650")

Actual (Unparsed): [[0.9923241, 0.9950542, 0.9945862]]

Expected (Unparsed): [[0.992324105555546,0.9950542041455861,0.9945861626266631]]

Actual:   [[0.9924, 0.9951, 0.9946]]

Expected: [[0.9924, 0.9951, 0.9946]]