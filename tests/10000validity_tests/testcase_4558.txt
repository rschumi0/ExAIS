import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Fla96288 = tf.keras.layers.Input(shape=([1]))
in0Sub86253 = tf.keras.layers.Input(shape=([2, 3]))
in1Sub86253 = tf.keras.layers.Input(shape=([2, 3]))
in0Per83318 = tf.keras.layers.Input(shape=([1, 3]))
in0Con85212 = tf.keras.layers.Input(shape=([3, 2]))
in0Con69968 = tf.keras.layers.Input(shape=([2]))

Fla96288 = keras.layers.Flatten(name = 'Fla96288', )(in0Fla96288)
Res10391 = keras.layers.Reshape((1, 1), name = 'Res10391', )(Fla96288)
Sep92399 = keras.layers.SeparableConv1D(3, (1),strides=(1), padding='same', name = 'Sep92399', )(Res10391)
Fla19912 = keras.layers.Flatten(name = 'Fla19912', )(Sep92399)
Sub86253 = keras.layers.Subtract(name = 'Sub86253', )([in0Sub86253,in1Sub86253])
Zer47064 = keras.layers.ZeroPadding1D(padding=((1, 0)), name = 'Zer47064', )(Sub86253)
Per83318 = keras.layers.Permute((2,1), name = 'Per83318',)(in0Per83318)
Con85212 = keras.layers.Concatenate(axis=2, name = 'Con85212', )([Per83318,in0Con85212])
Max58481 = keras.layers.Maximum(name = 'Max58481', )([Zer47064,Con85212])
Res15260 = keras.layers.Reshape((3, 3, 1), name = 'Res15260', )(Max58481)
Res30080 = keras.layers.Reshape((3, 3, 1, 1), name = 'Res30080', )(Res15260)
Glo8900 = keras.layers.GlobalAveragePooling3D(name = 'Glo8900', )(Res30080)
Con69968 = keras.layers.Concatenate(axis=1, name = 'Con69968', )([Glo8900,in0Con69968])
Add53491 = keras.layers.Add(name = 'Add53491', )([Fla19912,Con69968])
model = tf.keras.models.Model(inputs=[in0Fla96288,in0Sub86253,in1Sub86253,in0Per83318,in0Con85212,in0Con69968], outputs=Add53491)
w = model.get_layer('Sep92399').get_weights() 
w[0] = np.array([[[0.497]]])
w[1] = np.array([[[0.6185, 0.8109, 0.3632]]])
w[2] = np.array([0, 0, 0])
model.get_layer('Sep92399').set_weights(w) 
in0Fla96288 = tf.constant([[1.2184]])
in0Sub86253 = tf.constant([[[0.8632, 0.2658, 0.1167], [0.9955, 0.2998, 0.6825]]])
in1Sub86253 = tf.constant([[[0.6106, 0.2954, 0.1733], [0.5971, 0.5037, 0.6311]]])
in0Per83318 = tf.constant([[[1.8599, 1.2572, 1.8119]]])
in0Con85212 = tf.constant([[[0.8363, 0.5605], [0.777, 0.603], [0.3171, 0.5264]]])
in0Con69968 = tf.constant([[0.5524, 0.636]])
print (np.array2string(model.predict([in0Fla96288,in0Sub86253,in1Sub86253,in0Per83318,in0Con85212,in0Con69968],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Add53491.png')

LFla96288 = flatten_layer([[1.2184]], Fla96288), 
LRes10391 = reshape_layer(Fla96288, [1, 1], Res10391), 
LSep92399 = separable_conv1D_layer(Res10391, 1,[[[[0.497]]],[[[0.6185, 0.8109, 0.3632]]]],[0, 0, 0], 1, true, Sep92399), 
LFla19912 = flatten_layer(Sep92399, Fla19912), 
LSub86253 = subtract_layer([[[0.8632, 0.2658, 0.1167], [0.9955, 0.2998, 0.6825]]], [[[0.6106, 0.2954, 0.1733], [0.5971, 0.5037, 0.6311]]], Sub86253), 
LZer47064 = zero_padding1D_layer(Sub86253, 1, 0, Zer47064), 
LPer83318 = permute_layer([[[1.8599, 1.2572, 1.8119]]], 2,1, Per83318), 
LCon85212 = concatenate_layer([Per83318,[[[0.8363, 0.5605], [0.777, 0.603], [0.3171, 0.5264]]]], 2, Con85212), 
LMax58481 = maximum_layer([Zer47064,Con85212], Max58481), 
LRes15260 = reshape_layer(Max58481, [3, 3, 1], Res15260), 
LRes30080 = reshape_layer(Res15260, [3, 3, 1, 1], Res30080), 
LGlo8900 = global_average_pooling3D_layer(Res30080, Glo8900), 
LCon69968 = concatenate_layer([Glo8900,[[0.5524, 0.636]]], 1, Con69968), 
LAdd53491 = add_layer([Fla19912,Con69968], Add53491), 
exec_layers([LFla96288,LRes10391,LSep92399,LFla19912,LSub86253,LZer47064,LPer83318,LCon85212,LMax58481,LRes15260,LRes30080,LGlo8900,LCon69968,LAdd53491],["Fla96288","Res10391","Sep92399","Fla19912","Sub86253","Zer47064","Per83318","Con85212","Max58481","Res15260","Res30080","Glo8900","Con69968","Add53491"],Add53491,"Add53491")

Actual (Unparsed): [[1.3244517, 1.0434363, 0.8559338]]

Expected (Unparsed): [[1.3244516810222224,1.04343627832,0.85593387136]]

Actual:   [[1.3245, 1.0435, 0.856]]

Expected: [[1.3245, 1.0435, 0.856]]