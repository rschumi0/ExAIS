import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Max29380 = tf.keras.layers.Input(shape=([1, 1, 2]))
in1Max29380 = tf.keras.layers.Input(shape=([1, 1, 2]))

Max29380 = keras.layers.Maximum(name = 'Max29380', )([in0Max29380,in1Max29380])
Res14597 = keras.layers.Reshape((1, 2), name = 'Res14597', )(Max29380)
Sep38577 = keras.layers.SeparableConv1D(3, (1),strides=(1), padding='same', name = 'Sep38577', )(Res14597)
ReL27275 = keras.layers.ReLU(max_value=7.248493347910183, negative_slope=3.6423154816609613, threshold=9.888316680451402, name = 'ReL27275', )(Sep38577)
model = tf.keras.models.Model(inputs=[in0Max29380,in1Max29380], outputs=ReL27275)
w = model.get_layer('Sep38577').get_weights() 
w[0] = np.array([[[0.588], [0.5941]]])
w[1] = np.array([[[0.7891, 0.8646, 0.928], [0.8368, 0.2654, 0.4641]]])
w[2] = np.array([0, 0, 0])
model.get_layer('Sep38577').set_weights(w) 
in0Max29380 = tf.constant([[[[0.231, 0.0515]]]])
in1Max29380 = tf.constant([[[[0.8925, 0.5207]]]])
print (np.array2string(model.predict([in0Max29380,in1Max29380],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='ReL27275.png')

LMax29380 = maximum_layer([[[[[0.231, 0.0515]]]], [[[[0.8925, 0.5207]]]]], Max29380), 
LRes14597 = reshape_layer(Max29380, [1, 2], Res14597), 
LSep38577 = separable_conv1D_layer(Res14597, 1,[[[[0.588], [0.5941]]],[[[0.7891, 0.8646, 0.928], [0.8368, 0.2654, 0.4641]]]],[0, 0, 0], 1, true, Sep38577), 
LReL27275 = relu_layer(Sep38577, 7.248493347910183, 3.6423154816609613, 9.888316680451402, ReL27275), 
exec_layers([LMax29380,LRes14597,LSep38577,LReL27275],["Max29380","Res14597","Sep38577","ReL27275"],ReL27275,"ReL27275")

Actual (Unparsed): [[[-33.5651851, -34.0646912, -33.7196215]]]

Expected (Unparsed): [[[-33.56518499833636,-34.064691152482865,-33.719621433537085]]]

Actual:   [[[-33.5651, -34.0646, -33.7196]]]

Expected: [[[-33.5651, -34.0646, -33.7196]]]