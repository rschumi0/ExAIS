import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Dep58563 = tf.keras.layers.Input(shape=([2, 2, 1]))
in0Con87360 = tf.keras.layers.Input(shape=([1, 1, 1]))
in0Max41275 = tf.keras.layers.Input(shape=([1, 1, 2]))
in1Max41275 = tf.keras.layers.Input(shape=([1, 1, 2]))
in0Add42850 = tf.keras.layers.Input(shape=([1, 2]))
in1Add42850 = tf.keras.layers.Input(shape=([1, 2]))
in0Con12536 = tf.keras.layers.Input(shape=([2, 3, 3]))
in0Ave66181 = tf.keras.layers.Input(shape=([2, 1, 1]))
in1Ave66181 = tf.keras.layers.Input(shape=([2, 1, 1]))
in0Con61909 = tf.keras.layers.Input(shape=([2, 3, 3]))

Dep58563 = keras.layers.DepthwiseConv2D((2, 2),strides=(1, 1), padding='valid', name = 'Dep58563', )(in0Dep58563)
Con87360 = keras.layers.Concatenate(axis=3, name = 'Con87360', )([Dep58563,in0Con87360])
Max41275 = keras.layers.Maximum(name = 'Max41275', )([in0Max41275,in1Max41275])
Min25049 = keras.layers.Minimum(name = 'Min25049', )([Con87360,Max41275])
Res2419 = keras.layers.Reshape((1, 1, 2, 1), name = 'Res2419', )(Min25049)
Up_82995 = keras.layers.UpSampling3D(size=(2, 1, 2), name = 'Up_82995', )(Res2419)
Res79794 = keras.layers.Reshape((2, 1, 4), name = 'Res79794', )(Up_82995)
Zer14447 = keras.layers.ZeroPadding2D(padding=((0, 0), (2, 0)), name = 'Zer14447', )(Res79794)
Add42850 = keras.layers.Add(name = 'Add42850', )([in0Add42850,in1Add42850])
Res64434 = keras.layers.Reshape((1, 2, 1), name = 'Res64434', )(Add42850)
Dep60084 = keras.layers.DepthwiseConv2D((1, 1),strides=(1, 1), padding='same', name = 'Dep60084', )(Res64434)
Zer73928 = keras.layers.ZeroPadding2D(padding=((1, 0), (1, 0)), name = 'Zer73928', )(Dep60084)
Con12536 = keras.layers.Concatenate(axis=3, name = 'Con12536', )([Zer73928,in0Con12536])
Add65351 = keras.layers.Add(name = 'Add65351', )([Zer14447,Con12536])
Ave66181 = keras.layers.Average(name = 'Ave66181', )([in0Ave66181,in1Ave66181])
Sof96083 = keras.layers.Softmax(axis=1, name = 'Sof96083', )(Ave66181)
Dep19619 = keras.layers.DepthwiseConv2D((2, 1),strides=(2, 2), padding='valid', name = 'Dep19619', )(Sof96083)
Lay30263 = keras.layers.LayerNormalization(axis=1, epsilon=1.5543208761739786, name = 'Lay30263', )(Dep19619)
Zer22068 = keras.layers.ZeroPadding2D(padding=((1, 0), (2, 0)), name = 'Zer22068', )(Lay30263)
Con61909 = keras.layers.Concatenate(axis=3, name = 'Con61909', )([Zer22068,in0Con61909])
Mul92665 = keras.layers.Multiply(name = 'Mul92665', )([Add65351,Con61909])
model = tf.keras.models.Model(inputs=[in0Dep58563,in0Con87360,in0Max41275,in1Max41275,in0Add42850,in1Add42850,in0Con12536,in0Ave66181,in1Ave66181,in0Con61909], outputs=Mul92665)
w = model.get_layer('Dep58563').get_weights() 
w[0] = np.array([[[[0.2496]], [[0.6106]]], [[[0.5785]], [[0.9631]]]])
w[1] = np.array([0])
model.get_layer('Dep58563').set_weights(w) 
w = model.get_layer('Dep60084').get_weights() 
w[0] = np.array([[[[0.9557]]]])
w[1] = np.array([0])
model.get_layer('Dep60084').set_weights(w) 
w = model.get_layer('Dep19619').get_weights() 
w[0] = np.array([[[[0.8904]]], [[[0.9417]]]])
w[1] = np.array([0])
model.get_layer('Dep19619').set_weights(w) 
in0Dep58563 = tf.constant([[[[0.6291], [0.398]], [[0.0641], [0.8788]]]])
in0Con87360 = tf.constant([[[[0.142]]]])
in0Max41275 = tf.constant([[[[0.7063, 0.6101]]]])
in1Max41275 = tf.constant([[[[0.7266, 0.4083]]]])
in0Add42850 = tf.constant([[[0.2104, 0.1922]]])
in1Add42850 = tf.constant([[[0.6201, 0.1845]]])
in0Con12536 = tf.constant([[[[0.613, 0.9088, 0.1711], [0.7005, 0.674, 0.6788], [0.2499, 0.5543, 0.5545]], [[0.2498, 0.4446, 0.8384], [0.0861, 0.6338, 0.014], [0.7659, 0.4942, 0.8746]]]])
in0Ave66181 = tf.constant([[[[0.0003]], [[0.2461]]]])
in1Ave66181 = tf.constant([[[[0.4582]], [[0.0361]]]])
in0Con61909 = tf.constant([[[[0.6879, 0.0312, 0.2682], [0.5735, 0.1187, 0.548], [0.7192, 0.5142, 0.5466]], [[0.879, 0.0438, 0.1655], [0.9131, 0.3608, 0.5968], [0.1501, 0.4106, 0.0321]]]])
print (np.array2string(model.predict([in0Dep58563,in0Con87360,in0Max41275,in1Max41275,in0Add42850,in1Add42850,in0Con12536,in0Ave66181,in1Ave66181,in0Con61909],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Mul92665.png')

LDep58563 = depthwise_conv2D_layer([[[[0.6291], [0.398]], [[0.0641], [0.8788]]]], 2, 2,[[[[0.2496]], [[0.6106]]], [[[0.5785]], [[0.9631]]]],[0], 1, 1, false, Dep58563), 
LCon87360 = concatenate_layer([Dep58563,[[[[0.142]]]]], 3, Con87360), 
LMax41275 = maximum_layer([[[[[0.7063, 0.6101]]]], [[[[0.7266, 0.4083]]]]], Max41275), 
LMin25049 = minimum_layer([Con87360,Max41275], Min25049), 
LRes2419 = reshape_layer(Min25049, [1, 1, 2, 1], Res2419), 
LUp_82995 = up_sampling3D_layer(Res2419, 2, 1, 2, Up_82995), 
LRes79794 = reshape_layer(Up_82995, [2, 1, 4], Res79794), 
LZer14447 = zero_padding2D_layer(Res79794, 0, 0, 2, 0, Zer14447), 
LAdd42850 = add_layer([[[[0.2104, 0.1922]]], [[[0.6201, 0.1845]]]], Add42850), 
LRes64434 = reshape_layer(Add42850, [1, 2, 1], Res64434), 
LDep60084 = depthwise_conv2D_layer(Res64434, 1, 1,[[[[0.9557]]]],[0], 1, 1, true, Dep60084), 
LZer73928 = zero_padding2D_layer(Dep60084, 1, 0, 1, 0, Zer73928), 
LCon12536 = concatenate_layer([Zer73928,[[[[0.613, 0.9088, 0.1711], [0.7005, 0.674, 0.6788], [0.2499, 0.5543, 0.5545]], [[0.2498, 0.4446, 0.8384], [0.0861, 0.6338, 0.014], [0.7659, 0.4942, 0.8746]]]]], 3, Con12536), 
LAdd65351 = add_layer([Zer14447,Con12536], Add65351), 
LAve66181 = average_layer([[[[[0.0003]], [[0.2461]]]], [[[[0.4582]], [[0.0361]]]]], Ave66181), 
LSof96083 = softmax_layer(Ave66181, 1, Sof96083), 
LDep19619 = depthwise_conv2D_layer(Sof96083, 2, 1,[[[[0.8904]]], [[[0.9417]]]],[0], 2, 2, false, Dep19619), 
LLay30263 = layer_normalization_layer(Dep19619, 1, 1.5543208761739786, Lay30263), 
LZer22068 = zero_padding2D_layer(Lay30263, 1, 0, 2, 0, Zer22068), 
LCon61909 = concatenate_layer([Zer22068,[[[[0.6879, 0.0312, 0.2682], [0.5735, 0.1187, 0.548], [0.7192, 0.5142, 0.5466]], [[0.879, 0.0438, 0.1655], [0.9131, 0.3608, 0.5968], [0.1501, 0.4106, 0.0321]]]]], 3, Con61909), 
LMul92665 = multiply_layer([Add65351,Con61909], Mul92665), 
exec_layers([LDep58563,LCon87360,LMax41275,LMin25049,LRes2419,LUp_82995,LRes79794,LZer14447,LAdd42850,LRes64434,LDep60084,LZer73928,LCon12536,LAdd65351,LAve66181,LSof96083,LDep19619,LLay30263,LZer22068,LCon61909,LMul92665],["Dep58563","Con87360","Max41275","Min25049","Res2419","Up_82995","Res79794","Zer14447","Add42850","Res64434","Dep60084","Zer73928","Con12536","Add65351","Ave66181","Sof96083","Dep19619","Lay30263","Zer22068","Con61909","Mul92665"],Mul92665,"Mul92665")

Actual (Unparsed): [[[[0.0000000, 0.4216827, 0.0283546, 0.0458890], [0.0000000, 0.4017367, 0.0800038, 0.3719824], [0.0000000, 0.7022988, 0.3580374, 0.3807069]], [[0.0000000, 0.2195742, 0.0194735, 0.1387552], [0.0000000, 0.0786179, 0.2286750, 0.0083552], [0.0000000, 0.2240242, 0.2612237, 0.0326329]]]]

Expected (Unparsed): [[[[0,0.42168269999999997,0.02835456,0.04588902],[0,0.40173675000000003,0.0800038,0.3719824],[0.0,0.7022988,0.35803746000000003,0.38070689999999996]],[[0,0.2195742,0.019473479999999998,0.13875520000000002],[0.0,0.07861791,0.22867504000000002,0.0083552],[0.0,0.22402425000000004,0.26122372,0.03263285999999999]]]]

Actual:   [[[[0, 0.4217, 0.0284, 0.0459], [0, 0.4018, 0.0801, 0.372], [0, 0.7023, 0.3581, 0.3808]], [[0, 0.2196, 0.0195, 0.1388], [0, 0.0787, 0.2287, 0.0084], [0, 0.2241, 0.2613, 0.0327]]]]

Expected: [[[[0, 0.4217, 0.0284, 0.0459], [0, 0.4018, 0.0801, 0.372], [0, 0.7023, 0.3581, 0.3808]], [[0, 0.2196, 0.0195, 0.1388], [0, 0.0787, 0.2287, 0.0084], [0, 0.2241, 0.2613, 0.0327]]]]