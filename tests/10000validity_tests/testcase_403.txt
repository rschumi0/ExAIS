import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Min34028 = tf.keras.layers.Input(shape=([1, 1, 2]))
in1Min34028 = tf.keras.layers.Input(shape=([1, 1, 2]))
in0Dot69597 = tf.keras.layers.Input(shape=([2, 3]))
in1Dot69597 = tf.keras.layers.Input(shape=([2, 3]))
in0Con48122 = tf.keras.layers.Input(shape=([3, 1]))

Min34028 = keras.layers.Minimum(name = 'Min34028', )([in0Min34028,in1Min34028])
Den85848 = keras.layers.Dense(4,name = 'Den85848', )(Min34028)
Res61174 = keras.layers.Reshape((1, 4), name = 'Res61174', )(Den85848)
Zer45288 = keras.layers.ZeroPadding1D(padding=((2, 0)), name = 'Zer45288', )(Res61174)
Dot69597 = keras.layers.Dot(axes=(1, 1), name = 'Dot69597', )([in0Dot69597,in1Dot69597])
Bat46697 = keras.layers.BatchNormalization(axis=2, epsilon=0.31932461609451424,  name = 'Bat46697', )(Dot69597)
Con48122 = keras.layers.Concatenate(axis=2, name = 'Con48122', )([Bat46697,in0Con48122])
Min73832 = keras.layers.Minimum(name = 'Min73832', )([Zer45288,Con48122])
model = tf.keras.models.Model(inputs=[in0Min34028,in1Min34028,in0Dot69597,in1Dot69597,in0Con48122], outputs=Min73832)
w = model.get_layer('Den85848').get_weights() 
w[0] = np.array([[0.8835, 0.2405, 0.8907, 0.5527], [0.479, 0.4513, 0.3458, 0.7349]])
w[1] = np.array([0.5043, 0.4703, 0.1229, 0.5624])
model.get_layer('Den85848').set_weights(w) 
w = model.get_layer('Bat46697').get_weights() 
w[0] = np.array([0.7477, 0.9409, 0.4099])
w[1] = np.array([0.6337, 0.8029, 0.4704])
w[2] = np.array([0.7631, 0.5194, 0.2497])
w[3] = np.array([0.7133, 0.7005, 0.4758])
model.get_layer('Bat46697').set_weights(w) 
in0Min34028 = tf.constant([[[[0.7903, 0.9973]]]])
in1Min34028 = tf.constant([[[[0.8515, 0.6384]]]])
in0Dot69597 = tf.constant([[[0.9379, 0.3917, 0.7203], [0.3148, 0.9862, 0.1201]]])
in1Dot69597 = tf.constant([[[0.8872, 0.331, 0.3532], [0.6076, 0.7922, 0.4673]]])
in0Con48122 = tf.constant([[[0.6844], [0.4038], [0.5095]]])
print (np.array2string(model.predict([in0Min34028,in1Min34028,in0Dot69597,in1Dot69597,in0Con48122],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Min73832.png')

LMin34028 = minimum_layer([[[[[0.7903, 0.9973]]]], [[[[0.8515, 0.6384]]]]], Min34028), 
LDen85848 = dense_layer(Min34028, [[0.8835, 0.2405, 0.8907, 0.5527], [0.479, 0.4513, 0.3458, 0.7349]],[0.5043, 0.4703, 0.1229, 0.5624], Den85848), 
LRes61174 = reshape_layer(Den85848, [1, 4], Res61174), 
LZer45288 = zero_padding1D_layer(Res61174, 2, 0, Zer45288), 
LDot69597 = dot_layer([[[0.9379, 0.3917, 0.7203], [0.3148, 0.9862, 0.1201]]], [[[0.8872, 0.331, 0.3532], [0.6076, 0.7922, 0.4673]]], 1, 1, Dot69597), 
LBat46697 = batch_normalization_layer(Dot69597, 2, 0.31932461609451424, [0.7477, 0.9409, 0.4099], [0.6337, 0.8029, 0.4704], [0.7631, 0.5194, 0.2497], [0.7133, 0.7005, 0.4758], Bat46697), 
LCon48122 = concatenate_layer([Bat46697,[[[0.6844], [0.4038], [0.5095]]]], 2, Con48122), 
LMin73832 = minimum_layer([Zer45288,Con48122], Min73832), 
exec_layers([LMin34028,LDen85848,LRes61174,LZer45288,LDot69597,LBat46697,LCon48122,LMin73832],["Min34028","Den85848","Res61174","Zer45288","Dot69597","Bat46697","Con48122","Min73832"],Min73832,"Min73832")

Actual (Unparsed): [[[0.0000000, 0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000, 0.0000000], [0.5961178, 0.6297534, 0.4983639, 0.5095000]]]

Expected (Unparsed): [[[0,0,0,0],[0,0,0,0],[0.5961177995034783,0.6297533748774925,0.49836387422487033,0.5095]]]

Actual:   [[[0, 0, 0, 0], [0, 0, 0, 0], [0.5962, 0.6298, 0.4984, 0.5095]]]

Expected: [[[0, 0, 0, 0], [0, 0, 0, 0], [0.5962, 0.6298, 0.4984, 0.5095]]]