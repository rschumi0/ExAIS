import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Add17065 = tf.keras.layers.Input(shape=([2, 1]))
in1Add17065 = tf.keras.layers.Input(shape=([2, 1]))

Add17065 = keras.layers.Add(name = 'Add17065', )([in0Add17065,in1Add17065])
Sof27816 = keras.layers.Softmax(axis=1, name = 'Sof27816', )(Add17065)
model = tf.keras.models.Model(inputs=[in0Add17065,in1Add17065], outputs=Sof27816)
in0Add17065 = tf.constant([[[0.1799], [0.0297]]])
in1Add17065 = tf.constant([[[0.6068], [0.6096]]])
print (np.array2string(model.predict([in0Add17065,in1Add17065],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Sof27816.png')

LAdd17065 = add_layer([[[[0.1799], [0.0297]]], [[[0.6068], [0.6096]]]], Add17065), 
LSof27816 = softmax_layer(Add17065, 1, Sof27816), 
exec_layers([LAdd17065,LSof27816],["Add17065","Sof27816"],Sof27816,"Sof27816")

Actual (Unparsed): [[[0.5367834], [0.4632166]]]

Expected (Unparsed): [[[0.5367834253824999],[0.46321657461750004]]]

Actual:   [[[0.5368], [0.4633]]]

Expected: [[[0.5368], [0.4633]]]