import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Zer15947 = tf.keras.layers.Input(shape=([4, 3]))
in0Min11934 = tf.keras.layers.Input(shape=([1, 1, 1, 1]))
in1Min11934 = tf.keras.layers.Input(shape=([1, 1, 1, 1]))
in0Con54583 = tf.keras.layers.Input(shape=([17]))

Zer15947 = keras.layers.ZeroPadding1D(padding=((1, 1)), name = 'Zer15947', )(in0Zer15947)
Fla74990 = keras.layers.Flatten(name = 'Fla74990', )(Zer15947)
Min11934 = keras.layers.Minimum(name = 'Min11934', )([in0Min11934,in1Min11934])
Glo62599 = keras.layers.GlobalAveragePooling3D(name = 'Glo62599', )(Min11934)
Con54583 = keras.layers.Concatenate(axis=1, name = 'Con54583', )([Glo62599,in0Con54583])
Mul78724 = keras.layers.Multiply(name = 'Mul78724', )([Fla74990,Con54583])
Res57546 = keras.layers.Reshape((18, 1), name = 'Res57546', )(Mul78724)
Max72654 = keras.layers.MaxPool1D(pool_size=(3), strides=(1), padding='valid', name = 'Max72654', )(Res57546)
Res11701 = keras.layers.Reshape((16, 1, 1), name = 'Res11701', )(Max72654)
Sep5885 = keras.layers.SeparableConv2D(4, (10, 1),strides=(15, 15), padding='same', name = 'Sep5885', )(Res11701)
model = tf.keras.models.Model(inputs=[in0Zer15947,in0Min11934,in1Min11934,in0Con54583], outputs=Sep5885)
w = model.get_layer('Sep5885').get_weights() 
w[0] = np.array([[[[0.2624]]], [[[0.1301]]], [[[0.8722]]], [[[0.665]]], [[[0.6629]]], [[[0.3505]]], [[[0.4638]]], [[[0.6755]]], [[[0.8704]]], [[[0.6779]]]])
w[1] = np.array([[[[0.7058, 0.5763, 0.4705, 0.7504]]]])
w[2] = np.array([0, 0, 0, 0])
model.get_layer('Sep5885').set_weights(w) 
in0Zer15947 = tf.constant([[[1.3119, 1.605, 1.5192], [1.1314, 1.9091, 1.4401], [1.0974, 1.2781, 1.7929], [1.0174, 1.922, 1.3915]]])
in0Min11934 = tf.constant([[[[[0.4153]]]]])
in1Min11934 = tf.constant([[[[[0.8064]]]]])
in0Con54583 = tf.constant([[0.3508, 0.39, 0.377, 0.0893, 0.3192, 0.2374, 0.9938, 0.0248, 0.577, 0.8711, 0.6124, 0.6048, 0.9149, 0.5015, 0.9278, 0.9957, 0.2088]])
print (np.array2string(model.predict([in0Zer15947,in0Min11934,in1Min11934,in0Con54583],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Sep5885.png')

LZer15947 = zero_padding1D_layer([[[1.3119, 1.605, 1.5192], [1.1314, 1.9091, 1.4401], [1.0974, 1.2781, 1.7929], [1.0174, 1.922, 1.3915]]], 1, 1, Zer15947), 
LFla74990 = flatten_layer(Zer15947, Fla74990), 
LMin11934 = minimum_layer([[[[[[0.4153]]]]], [[[[[0.8064]]]]]], Min11934), 
LGlo62599 = global_average_pooling3D_layer(Min11934, Glo62599), 
LCon54583 = concatenate_layer([Glo62599,[[0.3508, 0.39, 0.377, 0.0893, 0.3192, 0.2374, 0.9938, 0.0248, 0.577, 0.8711, 0.6124, 0.6048, 0.9149, 0.5015, 0.9278, 0.9957, 0.2088]]], 1, Con54583), 
LMul78724 = multiply_layer([Fla74990,Con54583], Mul78724), 
LRes57546 = reshape_layer(Mul78724, [18, 1], Res57546), 
LMax72654 = max_pool1D_layer(Res57546, 3, 1, false, Max72654), 
LRes11701 = reshape_layer(Max72654, [16, 1, 1], Res11701), 
LSep5885 = separable_conv2D_layer(Res11701, 10, 1,[[[[[0.2624]]], [[[0.1301]]], [[[0.8722]]], [[[0.665]]], [[[0.6629]]], [[[0.3505]]], [[[0.4638]]], [[[0.6755]]], [[[0.8704]]], [[[0.6779]]]],[[[[0.7058, 0.5763, 0.4705, 0.7504]]]]],[0, 0, 0, 0], 15, 15, true, Sep5885), 
exec_layers([LZer15947,LFla74990,LMin11934,LGlo62599,LCon54583,LMul78724,LRes57546,LMax72654,LRes11701,LSep5885],["Zer15947","Fla74990","Min11934","Glo62599","Con54583","Mul78724","Res57546","Max72654","Res11701","Sep5885"],Sep5885,"Sep5885")

Actual (Unparsed): [[[[1.7257315, 1.4090948, 1.1504062, 1.8347817]], [[1.8971609, 1.5490703, 1.2646843, 2.0170438]]]]

Expected (Unparsed): [[[[1.7257314921400924,1.4090947278553916,1.1504061590420989,1.834781682774051]],[[1.897160796567078,1.549070228197233,1.264684265776155,2.017043725905264]]]]

Actual:   [[[[1.7258, 1.4091, 1.1505, 1.8348]], [[1.8972, 1.5491, 1.2647, 2.0171]]]]

Expected: [[[[1.7258, 1.4091, 1.1505, 1.8348]], [[1.8972, 1.5491, 1.2647, 2.0171]]]]