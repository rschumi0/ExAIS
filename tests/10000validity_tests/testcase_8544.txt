import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Bat34167 = tf.keras.layers.Input(shape=([4]))
in0Zer19672 = tf.keras.layers.Input(shape=([1, 4]))
in0Con31689 = tf.keras.layers.Input(shape=([4, 3, 3, 1]))
in0Sub85803 = tf.keras.layers.Input(shape=([2, 2, 2, 2]))
in1Sub85803 = tf.keras.layers.Input(shape=([2, 2, 2, 2]))

Bat34167 = keras.layers.BatchNormalization(axis=1, epsilon=0.6841073870964659,  name = 'Bat34167', )(in0Bat34167)
Zer19672 = keras.layers.ZeroPadding1D(padding=((1, 1)), name = 'Zer19672', )(in0Zer19672)
Glo77023 = keras.layers.GlobalMaxPool1D(name = 'Glo77023', )(Zer19672)
Sub62988 = keras.layers.Subtract(name = 'Sub62988', )([Bat34167,Glo77023])
Res59599 = keras.layers.Reshape((4, 1), name = 'Res59599', )(Sub62988)
Res99304 = keras.layers.Reshape((4, 1, 1), name = 'Res99304', )(Res59599)
Res46681 = keras.layers.Reshape((4, 1, 1, 1), name = 'Res46681', )(Res99304)
Zer74944 = keras.layers.ZeroPadding3D(padding=((0, 0), (2, 0), (2, 0)), name = 'Zer74944', )(Res46681)
Con31689 = keras.layers.Concatenate(axis=4, name = 'Con31689', )([Zer74944,in0Con31689])
Sub85803 = keras.layers.Subtract(name = 'Sub85803', )([in0Sub85803,in1Sub85803])
Mas6592 = keras.layers.Masking(mask_value=1, name = 'Mas6592', )(Sub85803)
Zer65795 = keras.layers.ZeroPadding3D(padding=((2, 0), (1, 0), (1, 0)), name = 'Zer65795', )(Mas6592)
Mul94756 = keras.layers.Multiply(name = 'Mul94756', )([Con31689,Zer65795])
model = tf.keras.models.Model(inputs=[in0Bat34167,in0Zer19672,in0Con31689,in0Sub85803,in1Sub85803], outputs=Mul94756)
w = model.get_layer('Bat34167').get_weights() 
w[0] = np.array([0.7312, 0.2449, 0.5438, 0.4088])
w[1] = np.array([0.278, 0.3981, 0.2853, 0.1193])
w[2] = np.array([0.1514, 0.2103, 0.1438, 0.3])
w[3] = np.array([0.0569, 0.8228, 0.5722, 0.2965])
model.get_layer('Bat34167').set_weights(w) 
in0Bat34167 = tf.constant([[1.9577, 1.1183, 1.8372, 1.5897]])
in0Zer19672 = tf.constant([[[1.7011, 1.901, 1.8537, 1.2997]]])
in0Con31689 = tf.constant([[[[[0.8956], [0.8059], [0.5849]], [[0.1483], [0.934], [0.6298]], [[0.8307], [0.1877], [0.2898]]], [[[0.4987], [0.3987], [0.4717]], [[0.6647], [0.1187], [0.0811]], [[0.0734], [0.6119], [0.5883]]], [[[0.2579], [0.9259], [0.4997]], [[0.705], [0.0155], [0.3287]], [[0.8824], [0.0528], [0.4462]]], [[[0.3249], [0.087], [0.5749]], [[0.8218], [0.8532], [0.132]], [[0.3451], [0.3466], [0.4191]]]]])
in0Sub85803 = tf.constant([[[[[0.4876, 0.2548], [0.9996, 0.8303]], [[0.7072, 0.886], [0.5901, 0.3116]]], [[[0.506, 0.5224], [0.9288, 0.8541]], [[0.3264, 0.0811], [0.282, 0.2222]]]]])
in1Sub85803 = tf.constant([[[[[0.8419, 0.921], [0.0803, 0.6975]], [[0.7497, 0.1209], [0.1649, 0.695]]], [[[0.1679, 0.8535], [0.4473, 0.7193]], [[0.4473, 0.0918], [0.1809, 0.8046]]]]])
print (np.array2string(model.predict([in0Bat34167,in0Zer19672,in0Con31689,in0Sub85803,in1Sub85803],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Mul94756.png')

LBat34167 = batch_normalization_layer([[1.9577, 1.1183, 1.8372, 1.5897]], 1, 0.6841073870964659, [0.7312, 0.2449, 0.5438, 0.4088], [0.278, 0.3981, 0.2853, 0.1193], [0.1514, 0.2103, 0.1438, 0.3], [0.0569, 0.8228, 0.5722, 0.2965], Bat34167), 
LZer19672 = zero_padding1D_layer([[[1.7011, 1.901, 1.8537, 1.2997]]], 1, 1, Zer19672), 
LGlo77023 = global_max_pool1D_layer(Zer19672, Glo77023), 
LSub62988 = subtract_layer(Bat34167,Glo77023, Sub62988), 
LRes59599 = reshape_layer(Sub62988, [4, 1], Res59599), 
LRes99304 = reshape_layer(Res59599, [4, 1, 1], Res99304), 
LRes46681 = reshape_layer(Res99304, [4, 1, 1, 1], Res46681), 
LZer74944 = zero_padding3D_layer(Res46681, 0, 0, 2, 0, 2, 0, Zer74944), 
LCon31689 = concatenate_layer([Zer74944,[[[[[0.8956], [0.8059], [0.5849]], [[0.1483], [0.934], [0.6298]], [[0.8307], [0.1877], [0.2898]]], [[[0.4987], [0.3987], [0.4717]], [[0.6647], [0.1187], [0.0811]], [[0.0734], [0.6119], [0.5883]]], [[[0.2579], [0.9259], [0.4997]], [[0.705], [0.0155], [0.3287]], [[0.8824], [0.0528], [0.4462]]], [[[0.3249], [0.087], [0.5749]], [[0.8218], [0.8532], [0.132]], [[0.3451], [0.3466], [0.4191]]]]]], 4, Con31689), 
LSub85803 = subtract_layer([[[[[0.4876, 0.2548], [0.9996, 0.8303]], [[0.7072, 0.886], [0.5901, 0.3116]]], [[[0.506, 0.5224], [0.9288, 0.8541]], [[0.3264, 0.0811], [0.282, 0.2222]]]]], [[[[[0.8419, 0.921], [0.0803, 0.6975]], [[0.7497, 0.1209], [0.1649, 0.695]]], [[[0.1679, 0.8535], [0.4473, 0.7193]], [[0.4473, 0.0918], [0.1809, 0.8046]]]]], Sub85803), 
LMas6592 = masking_layer(Sub85803, 1, Mas6592), 
LZer65795 = zero_padding3D_layer(Mas6592, 2, 0, 1, 0, 1, 0, Zer65795), 
LMul94756 = multiply_layer([Con31689,Zer65795], Mul94756), 
exec_layers([LBat34167,LZer19672,LGlo77023,LSub62988,LRes59599,LRes99304,LRes46681,LZer74944,LCon31689,LSub85803,LMas6592,LZer65795,LMul94756],["Bat34167","Zer19672","Glo77023","Sub62988","Res59599","Res99304","Res46681","Zer74944","Con31689","Sub85803","Mas6592","Zer65795","Mul94756"],Mul94756,"Mul94756")

Actual (Unparsed): [[[[[0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000]], [[0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000]], [[0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000]]], [[[0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000]], [[0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000]], [[0.0000000, 0.0000000], [0.0000000, 0.0000000], [-0.0000000, 0.0000000]]], [[[0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000]], [[0.0000000, 0.0000000], [-0.0000000, -0.0103261], [0.0000000, 0.0436514]], [[0.0000000, 0.0000000], [-0.0000000, 0.0403973], [-0.3175471, -0.1710731]]], [[[0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000]], [[0.0000000, 0.0000000], [0.0000000, -0.2824945], [0.0000000, 0.0177936]], [[0.0000000, 0.0000000], [-0.0000000, -0.0037086], [-0.0655111, -0.2440838]]]]]

Expected (Unparsed): [[[[[0,0.0],[0,0.0],[0,0.0]],[[0,0.0],[0,0.0],[0,0.0]],[[0,0.0],[0,0.0],[0.0,0.0]]],[[[0,0.0],[0,0.0],[0,0.0]],[[0,0.0],[0,0.0],[0,0.0]],[[0,0.0],[0,0.0],[-0.0,0.0]]],[[[0,0.0],[0,0.0],[0,0.0]],[[0,0.0],[-0.0,-0.0103261],[0.0,0.04365136000000001]],[[0,0.0],[-0.0,0.04039728],[-0.31754710512794954,-0.17107308]]],[[[0,0.0],[0,0.0],[0,0.0]],[[0,0.0],[0.0,-0.28249452],[0.0,0.01779359999999999]],[[0,0.0],[-0.0,-0.0037086200000000006],[-0.06551106980982221,-0.24408384]]]]]

Actual:   [[[[[0, 0], [0, 0], [0, 0]], [[0, 0], [0, 0], [0, 0]], [[0, 0], [0, 0], [0, 0]]], [[[0, 0], [0, 0], [0, 0]], [[0, 0], [0, 0], [0, 0]], [[0, 0], [0, 0], [-0, 0]]], [[[0, 0], [0, 0], [0, 0]], [[0, 0], [-0, -0.0103], [0, 0.0437]], [[0, 0], [-0, 0.0404], [-0.3175, -0.171]]], [[[0, 0], [0, 0], [0, 0]], [[0, 0], [0, -0.2824], [0, 0.0178]], [[0, 0], [-0, -0.0037], [-0.0655, -0.244]]]]]

Expected: [[[[[0, 0], [0, 0], [0, 0]], [[0, 0], [0, 0], [0, 0]], [[0, 0], [0, 0], [0, 0]]], [[[0, 0], [0, 0], [0, 0]], [[0, 0], [0, 0], [0, 0]], [[0, 0], [0, 0], [-0, 0]]], [[[0, 0], [0, 0], [0, 0]], [[0, 0], [-0, -0.0103], [0, 0.0437]], [[0, 0], [-0, 0.0404], [-0.3175, -0.171]]], [[[0, 0], [0, 0], [0, 0]], [[0, 0], [0, -0.2824], [0, 0.0178]], [[0, 0], [-0, -0.0037], [-0.0655, -0.244]]]]]