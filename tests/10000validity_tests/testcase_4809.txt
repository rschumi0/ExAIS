import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Min93013 = tf.keras.layers.Input(shape=([2, 1]))
in1Min93013 = tf.keras.layers.Input(shape=([2, 1]))
in0Con28335 = tf.keras.layers.Input(shape=([1]))
in0Sub71138 = tf.keras.layers.Input(shape=([3]))
in1Sub71138 = tf.keras.layers.Input(shape=([3]))
in0Con39750 = tf.keras.layers.Input(shape=([3, 3, 5, 2]))
in0Add71978 = tf.keras.layers.Input(shape=([2, 2, 1, 2]))
in1Add71978 = tf.keras.layers.Input(shape=([2, 2, 1, 2]))
in0Con57627 = tf.keras.layers.Input(shape=([2, 2, 3, 1]))
in0Cro21083 = tf.keras.layers.Input(shape=([2, 2, 2, 3]))

Min93013 = keras.layers.Minimum(name = 'Min93013', )([in0Min93013,in1Min93013])
Fla38207 = keras.layers.Flatten(name = 'Fla38207', )(Min93013)
Con28335 = keras.layers.Concatenate(axis=1, name = 'Con28335', )([Fla38207,in0Con28335])
Sub71138 = keras.layers.Subtract(name = 'Sub71138', )([in0Sub71138,in1Sub71138])
Min25464 = keras.layers.Minimum(name = 'Min25464', )([Con28335,Sub71138])
Res304 = keras.layers.Reshape((3, 1), name = 'Res304', )(Min25464)
Res1124 = keras.layers.Reshape((3, 1, 1), name = 'Res1124', )(Res304)
Res33155 = keras.layers.Reshape((3, 1, 1, 1), name = 'Res33155', )(Res1124)
Zer60786 = keras.layers.ZeroPadding3D(padding=((0, 0), (2, 0), (4, 0)), name = 'Zer60786', )(Res33155)
Con39750 = keras.layers.Concatenate(axis=4, name = 'Con39750', )([Zer60786,in0Con39750])
Add71978 = keras.layers.Add(name = 'Add71978', )([in0Add71978,in1Add71978])
Zer72762 = keras.layers.ZeroPadding3D(padding=((0, 0), (0, 0), (2, 0)), name = 'Zer72762', )(Add71978)
Con57627 = keras.layers.Concatenate(axis=4, name = 'Con57627', )([Zer72762,in0Con57627])
Cro21083 = keras.layers.Cropping3D(cropping=((0, 1), (1, 0), (0, 0)), name = 'Cro21083', )(in0Cro21083)
Zer78 = keras.layers.ZeroPadding3D(padding=((1, 0), (1, 0), (1, 0)), name = 'Zer78', )(Cro21083)
Sub30813 = keras.layers.Subtract(name = 'Sub30813', )([Con57627,Zer78])
Zer35442 = keras.layers.ZeroPadding3D(padding=((1, 0), (1, 0), (2, 0)), name = 'Zer35442', )(Sub30813)
Max6938 = keras.layers.Maximum(name = 'Max6938', )([Con39750,Zer35442])
model = tf.keras.models.Model(inputs=[in0Min93013,in1Min93013,in0Con28335,in0Sub71138,in1Sub71138,in0Con39750,in0Add71978,in1Add71978,in0Con57627,in0Cro21083], outputs=Max6938)
in0Min93013 = tf.constant([[[0.8271], [0.2217]]])
in1Min93013 = tf.constant([[[0.7201], [0.8709]]])
in0Con28335 = tf.constant([[0.3138]])
in0Sub71138 = tf.constant([[0.1177, 0.8921, 0.1079]])
in1Sub71138 = tf.constant([[0.4127, 0.1097, 0.125]])
in0Con39750 = tf.constant([[[[[0.6241, 0.7914], [0.7621, 0.0949], [0.9916, 0.254], [0.6793, 0.567], [0.0304, 0.1029]], [[0.0579, 0.5338], [0.7085, 0.245], [0.019, 0.4157], [0.9126, 0.6742], [0.6067, 0.5156]], [[0.2278, 0.9141], [0.2876, 0.1792], [0.2039, 0.7334], [0.1369, 0.0013], [0.4939, 0.2915]]], [[[0.524, 0.4456], [0.3317, 0.0846], [0.2713, 0.6692], [0.3065, 0.9392], [0.3292, 0.9137]], [[0.2862, 0.8231], [0.9801, 0.5594], [0.6434, 0.4324], [0.4674, 0.8251], [0.6472, 0.3528]], [[0.7319, 0.1414], [0.9965, 0.0889], [0.6255, 0.4231], [0.9926, 0.4115], [0.579, 0.8261]]], [[[0.7734, 0.2796], [0.1961, 0.0837], [0.3677, 0.0619], [0.6659, 0.189], [0.0641, 0.9024]], [[0.1963, 0.0123], [0.7373, 0.8559], [0.8992, 0.4269], [0.324, 0.8504], [0.6859, 0.6517]], [[0.6, 0.6277], [0.7675, 0.8154], [0.7744, 0.5572], [0.2984, 0.1948], [0.1869, 0.6244]]]]])
in0Add71978 = tf.constant([[[[[0.1795, 0.3831]], [[0.6486, 0.2105]]], [[[0.9907, 0.539]], [[0.8277, 0.1289]]]]])
in1Add71978 = tf.constant([[[[[0.0922, 0.9805]], [[0.9171, 0.3173]]], [[[0.4354, 0.0132]], [[0.4624, 0.345]]]]])
in0Con57627 = tf.constant([[[[[0.2611], [0.8322], [0.947]], [[0.6765], [0.123], [0.5212]]], [[[0.8948], [0.6566], [0.3315]], [[0.0083], [0.367], [0.9721]]]]])
in0Cro21083 = tf.constant([[[[[1.8999, 1.3334, 1.5458], [1.4099, 1.9925, 1.4007]], [[1.139, 1.6071, 1.9746], [1.2958, 1.2013, 1.9927]]], [[[1.6582, 1.3182, 1.6719], [1.5694, 1.379, 1.0789]], [[1.7915, 1.4506, 1.2009], [1.8595, 1.2509, 1.6309]]]]])
print (np.array2string(model.predict([in0Min93013,in1Min93013,in0Con28335,in0Sub71138,in1Sub71138,in0Con39750,in0Add71978,in1Add71978,in0Con57627,in0Cro21083],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Max6938.png')

LMin93013 = minimum_layer([[[[0.8271], [0.2217]]], [[[0.7201], [0.8709]]]], Min93013), 
LFla38207 = flatten_layer(Min93013, Fla38207), 
LCon28335 = concatenate_layer([Fla38207,[[0.3138]]], 1, Con28335), 
LSub71138 = subtract_layer([[0.1177, 0.8921, 0.1079]], [[0.4127, 0.1097, 0.125]], Sub71138), 
LMin25464 = minimum_layer([Con28335,Sub71138], Min25464), 
LRes304 = reshape_layer(Min25464, [3, 1], Res304), 
LRes1124 = reshape_layer(Res304, [3, 1, 1], Res1124), 
LRes33155 = reshape_layer(Res1124, [3, 1, 1, 1], Res33155), 
LZer60786 = zero_padding3D_layer(Res33155, 0, 0, 2, 0, 4, 0, Zer60786), 
LCon39750 = concatenate_layer([Zer60786,[[[[[0.6241, 0.7914], [0.7621, 0.0949], [0.9916, 0.254], [0.6793, 0.567], [0.0304, 0.1029]], [[0.0579, 0.5338], [0.7085, 0.245], [0.019, 0.4157], [0.9126, 0.6742], [0.6067, 0.5156]], [[0.2278, 0.9141], [0.2876, 0.1792], [0.2039, 0.7334], [0.1369, 0.0013], [0.4939, 0.2915]]], [[[0.524, 0.4456], [0.3317, 0.0846], [0.2713, 0.6692], [0.3065, 0.9392], [0.3292, 0.9137]], [[0.2862, 0.8231], [0.9801, 0.5594], [0.6434, 0.4324], [0.4674, 0.8251], [0.6472, 0.3528]], [[0.7319, 0.1414], [0.9965, 0.0889], [0.6255, 0.4231], [0.9926, 0.4115], [0.579, 0.8261]]], [[[0.7734, 0.2796], [0.1961, 0.0837], [0.3677, 0.0619], [0.6659, 0.189], [0.0641, 0.9024]], [[0.1963, 0.0123], [0.7373, 0.8559], [0.8992, 0.4269], [0.324, 0.8504], [0.6859, 0.6517]], [[0.6, 0.6277], [0.7675, 0.8154], [0.7744, 0.5572], [0.2984, 0.1948], [0.1869, 0.6244]]]]]], 4, Con39750), 
LAdd71978 = add_layer([[[[[[0.1795, 0.3831]], [[0.6486, 0.2105]]], [[[0.9907, 0.539]], [[0.8277, 0.1289]]]]], [[[[[0.0922, 0.9805]], [[0.9171, 0.3173]]], [[[0.4354, 0.0132]], [[0.4624, 0.345]]]]]], Add71978), 
LZer72762 = zero_padding3D_layer(Add71978, 0, 0, 0, 0, 2, 0, Zer72762), 
LCon57627 = concatenate_layer([Zer72762,[[[[[0.2611], [0.8322], [0.947]], [[0.6765], [0.123], [0.5212]]], [[[0.8948], [0.6566], [0.3315]], [[0.0083], [0.367], [0.9721]]]]]], 4, Con57627), 
LCro21083 = cropping3D_layer([[[[[1.8999, 1.3334, 1.5458], [1.4099, 1.9925, 1.4007]], [[1.139, 1.6071, 1.9746], [1.2958, 1.2013, 1.9927]]], [[[1.6582, 1.3182, 1.6719], [1.5694, 1.379, 1.0789]], [[1.7915, 1.4506, 1.2009], [1.8595, 1.2509, 1.6309]]]]], 0, 1, 1, 0, 0, 0, Cro21083), 
LZer78 = zero_padding3D_layer(Cro21083, 1, 0, 1, 0, 1, 0, Zer78), 
LSub30813 = subtract_layer(Con57627,Zer78, Sub30813), 
LZer35442 = zero_padding3D_layer(Sub30813, 1, 0, 1, 0, 2, 0, Zer35442), 
LMax6938 = maximum_layer([Con39750,Zer35442], Max6938), 
exec_layers([LMin93013,LFla38207,LCon28335,LSub71138,LMin25464,LRes304,LRes1124,LRes33155,LZer60786,LCon39750,LAdd71978,LZer72762,LCon57627,LCro21083,LZer78,LSub30813,LZer35442,LMax6938],["Min93013","Fla38207","Con28335","Sub71138","Min25464","Res304","Res1124","Res33155","Zer60786","Con39750","Add71978","Zer72762","Con57627","Cro21083","Zer78","Sub30813","Zer35442","Max6938"],Max6938,"Max6938")

Actual (Unparsed): [[[[[0.0000000, 0.6241000, 0.7914000], [0.0000000, 0.7621000, 0.0949000], [0.0000000, 0.9916000, 0.2540000], [0.0000000, 0.6793000, 0.5670000], [0.0000000, 0.0304000, 0.1029000]], [[0.0000000, 0.0579000, 0.5338000], [0.0000000, 0.7085000, 0.2450000], [0.0000000, 0.0190000, 0.4157000], [0.0000000, 0.9126000, 0.6742000], [0.0000000, 0.6067000, 0.5156000]], [[0.0000000, 0.2278000, 0.9141000], [0.0000000, 0.2876000, 0.1792000], [0.0000000, 0.2039000, 0.7334000], [0.0000000, 0.1369000, 0.0013000], [0.0000000, 0.4939000, 0.2915000]]], [[[0.0000000, 0.5240000, 0.4456000], [0.0000000, 0.3317000, 0.0846000], [0.0000000, 0.2713000, 0.6692000], [0.0000000, 0.3065000, 0.9392000], [0.0000000, 0.3292000, 0.9137000]], [[0.0000000, 0.2862000, 0.8231000], [0.0000000, 0.9801000, 0.5594000], [0.0000000, 0.6434000, 0.4324000], [0.0000000, 0.4674000, 0.8322000], [0.2717000, 1.3636000, 0.9470000]], [[0.0000000, 0.7319000, 0.1414000], [0.0000000, 0.9965000, 0.0889000], [0.0000000, 0.6255000, 0.6765000], [0.0000000, 0.9926000, 0.4115000], [1.5657000, 0.5790000, 0.8261000]]], [[[0.0000000, 0.7734000, 0.2796000], [0.0000000, 0.1961000, 0.0837000], [0.0000000, 0.3677000, 0.0619000], [0.0000000, 0.6659000, 0.1890000], [0.0000000, 0.0641000, 0.9024000]], [[0.0000000, 0.1963000, 0.0123000], [0.0000000, 0.7373000, 0.8559000], [0.0000000, 0.8992000, 0.8948000], [0.0000000, 0.3240000, 0.8504000], [1.4261000, 0.6859000, 0.6517000]], [[0.0000000, 0.6000000, 0.6277000], [0.0000000, 0.7675000, 0.8154000], [0.0000000, 0.7744000, 0.5572000], [0.0000000, 0.2984000, 0.1948000], [-0.0057000, 0.1869000, 0.6244000]]]]]

Expected (Unparsed): [[[[[0,0.6241,0.7914],[0,0.7621,0.0949],[0,0.9916,0.254],[0,0.6793,0.567],[0,0.0304,0.1029]],[[0,0.0579,0.5338],[0,0.7085,0.245],[0,0.019,0.4157],[0,0.9126,0.6742],[0,0.6067,0.5156]],[[0,0.2278,0.9141],[0,0.2876,0.1792],[0,0.2039,0.7334],[0,0.1369,0.0013],[0,0.4939,0.2915]]],[[[0,0.524,0.4456],[0,0.3317,0.0846],[0,0.2713,0.6692],[0,0.3065,0.9392],[0,0.3292,0.9137]],[[0,0.2862,0.8231],[0,0.9801,0.5594],[0,0.6434,0.4324],[0,0.4674,0.8322],[0.2717,1.3636,0.947]],[[0,0.7319,0.1414],[0,0.9965,0.0889],[0,0.6255,0.6765],[0,0.9926,0.4115],[1.5657,0.579,0.8261]]],[[[0,0.7734,0.2796],[0,0.1961,0.0837],[0,0.3677,0.0619],[0,0.6659,0.189],[0,0.0641,0.9024]],[[0,0.1963,0.0123],[0,0.7373,0.8559],[0,0.8992,0.8948],[0,0.324,0.8504],[1.4261,0.6859,0.6517]],[[0,0.6,0.6277],[0,0.7675,0.8154],[0,0.7744,0.5572],[0,0.2984,0.1948],[-0.005700000000000038,0.1869,0.6244]]]]]

Actual:   [[[[[0, 0.6241, 0.7914], [0, 0.7621, 0.0949], [0, 0.9916, 0.254], [0, 0.6793, 0.567], [0, 0.0304, 0.1029]], [[0, 0.0579, 0.5338], [0, 0.7085, 0.245], [0, 0.019, 0.4157], [0, 0.9126, 0.6742], [0, 0.6067, 0.5156]], [[0, 0.2278, 0.9141], [0, 0.2876, 0.1792], [0, 0.2039, 0.7334], [0, 0.1369, 0.0013], [0, 0.4939, 0.2915]]], [[[0, 0.524, 0.4456], [0, 0.3317, 0.0846], [0, 0.2713, 0.6692], [0, 0.3065, 0.9392], [0, 0.3292, 0.9137]], [[0, 0.2862, 0.8231], [0, 0.9801, 0.5594], [0, 0.6434, 0.4324], [0, 0.4674, 0.8322], [0.2717, 1.3636, 0.947]], [[0, 0.7319, 0.1414], [0, 0.9965, 0.0889], [0, 0.6255, 0.6765], [0, 0.9926, 0.4115], [1.5657, 0.579, 0.8261]]], [[[0, 0.7734, 0.2796], [0, 0.1961, 0.0837], [0, 0.3677, 0.0619], [0, 0.6659, 0.189], [0, 0.0641, 0.9024]], [[0, 0.1963, 0.0123], [0, 0.7373, 0.8559], [0, 0.8992, 0.8948], [0, 0.324, 0.8504], [1.4261, 0.6859, 0.6517]], [[0, 0.6, 0.6277], [0, 0.7675, 0.8154], [0, 0.7744, 0.5572], [0, 0.2984, 0.1948], [-0.0057, 0.1869, 0.6244]]]]]

Expected: [[[[[0, 0.6241, 0.7914], [0, 0.7621, 0.0949], [0, 0.9916, 0.254], [0, 0.6793, 0.567], [0, 0.0304, 0.1029]], [[0, 0.0579, 0.5338], [0, 0.7085, 0.245], [0, 0.019, 0.4157], [0, 0.9126, 0.6742], [0, 0.6067, 0.5156]], [[0, 0.2278, 0.9141], [0, 0.2876, 0.1792], [0, 0.2039, 0.7334], [0, 0.1369, 0.0013], [0, 0.4939, 0.2915]]], [[[0, 0.524, 0.4456], [0, 0.3317, 0.0846], [0, 0.2713, 0.6692], [0, 0.3065, 0.9392], [0, 0.3292, 0.9137]], [[0, 0.2862, 0.8231], [0, 0.9801, 0.5594], [0, 0.6434, 0.4324], [0, 0.4674, 0.8322], [0.2717, 1.3636, 0.947]], [[0, 0.7319, 0.1414], [0, 0.9965, 0.0889], [0, 0.6255, 0.6765], [0, 0.9926, 0.4115], [1.5657, 0.579, 0.8261]]], [[[0, 0.7734, 0.2796], [0, 0.1961, 0.0837], [0, 0.3677, 0.0619], [0, 0.6659, 0.189], [0, 0.0641, 0.9024]], [[0, 0.1963, 0.0123], [0, 0.7373, 0.8559], [0, 0.8992, 0.8948], [0, 0.324, 0.8504], [1.4261, 0.6859, 0.6517]], [[0, 0.6, 0.6277], [0, 0.7675, 0.8154], [0, 0.7744, 0.5572], [0, 0.2984, 0.1948], [-0.0057, 0.1869, 0.6244]]]]]