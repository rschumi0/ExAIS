import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Con83768 = tf.keras.layers.Input(shape=([1, 1, 1, 2]))

Con83768 = keras.layers.Conv3DTranspose(3, (1, 1, 1),strides=(1, 1, 1), padding='valid', name = 'Con83768', )(in0Con83768)
Res76444 = keras.layers.Reshape((1, 1, 3), name = 'Res76444', )(Con83768)
Ave65967 = keras.layers.AveragePooling2D(pool_size=(1, 1), strides=(1, 12), padding='valid', name = 'Ave65967', )(Res76444)
Res42057 = keras.layers.Reshape((1, 1, 3, 1), name = 'Res42057', )(Ave65967)
Up_53718 = keras.layers.UpSampling3D(size=(1, 2, 2), name = 'Up_53718', )(Res42057)
model = tf.keras.models.Model(inputs=[in0Con83768], outputs=Up_53718)
w = model.get_layer('Con83768').get_weights() 
w[0] = np.array([[[[[0.0029, 0.2421], [0.9049, 0.5856], [0.3211, 0.8147]]]]])
w[1] = np.array([0, 0, 0])
model.get_layer('Con83768').set_weights(w) 
in0Con83768 = tf.constant([[[[[0.1507, 0.8191]]]]])
print (np.array2string(model.predict([in0Con83768],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Up_53718.png')

LCon83768 = conv3D_transpose_layer([[[[[0.1507, 0.8191]]]]], 1, 1, 1,[[[[[0.0029, 0.2421], [0.9049, 0.5856], [0.3211, 0.8147]]]]],[0, 0, 0], 1, 1, 1, false, Con83768), 
LRes76444 = reshape_layer(Con83768, [1, 1, 3], Res76444), 
LAve65967 = average_pooling2D_layer(Res76444, 1, 1, 1, 12, false, Ave65967), 
LRes42057 = reshape_layer(Ave65967, [1, 1, 3, 1], Res42057), 
LUp_53718 = up_sampling3D_layer(Res42057, 1, 2, 2, Up_53718), 
exec_layers([LCon83768,LRes76444,LAve65967,LRes42057,LUp_53718],["Con83768","Res76444","Ave65967","Res42057","Up_53718"],Up_53718,"Up_53718")

Actual (Unparsed): [[[[[0.1987411], [0.1987411], [0.6160334], [0.6160334], [0.7157106], [0.7157106]], [[0.1987411], [0.1987411], [0.6160334], [0.6160334], [0.7157106], [0.7157106]]]]]

Expected (Unparsed): [[[[[0.19874114000000004],[0.19874114000000004],[0.61603339],[0.61603339],[0.71571054],[0.71571054]],[[0.19874114000000004],[0.19874114000000004],[0.61603339],[0.61603339],[0.71571054],[0.71571054]]]]]

Actual:   [[[[[0.1988], [0.1988], [0.6161], [0.6161], [0.7158], [0.7158]], [[0.1988], [0.1988], [0.6161], [0.6161], [0.7158], [0.7158]]]]]

Expected: [[[[[0.1988], [0.1988], [0.6161], [0.6161], [0.7158], [0.7158]], [[0.1988], [0.1988], [0.6161], [0.6161], [0.7158], [0.7158]]]]]