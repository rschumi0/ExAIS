import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Zer47818 = tf.keras.layers.Input(shape=([4, 3]))

Zer47818 = keras.layers.ZeroPadding1D(padding=((1, 1)), name = 'Zer47818', )(in0Zer47818)
Lea19187 = keras.layers.LeakyReLU(alpha=9.984598056994665, name = 'Lea19187', )(Zer47818)
model = tf.keras.models.Model(inputs=[in0Zer47818], outputs=Lea19187)
in0Zer47818 = tf.constant([[[1.4341, 1.7147, 1.6865], [1.6591, 1.4182, 1.0781], [1.2579, 1.467, 1.9837], [1.0448, 1.0997, 1.8311]]])
print (np.array2string(model.predict([in0Zer47818],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Lea19187.png')

LZer47818 = zero_padding1D_layer([[[1.4341, 1.7147, 1.6865], [1.6591, 1.4182, 1.0781], [1.2579, 1.467, 1.9837], [1.0448, 1.0997, 1.8311]]], 1, 1, Zer47818), 
LLea19187 = leaky_relu_layer(Zer47818, 9.984598056994665, Lea19187), 
exec_layers([LZer47818,LLea19187],["Zer47818","Lea19187"],Lea19187,"Lea19187")

Actual (Unparsed): [[[0.0000000, 0.0000000, 0.0000000], [1.4341000, 1.7147000, 1.6865000], [1.6591001, 1.4182000, 1.0781000], [1.2579000, 1.4670000, 1.9837000], [1.0448000, 1.0997000, 1.8311000], [0.0000000, 0.0000000, 0.0000000]]]

Expected (Unparsed): [[[0,0,0],[1.4341,1.7147,1.6865],[1.6591,1.4182,1.0781],[1.2579,1.467,1.9837],[1.0448,1.0997,1.8311],[0,0,0]]]

Actual:   [[[0, 0, 0], [1.4341, 1.7147, 1.6865], [1.6592, 1.4182, 1.0781], [1.2579, 1.467, 1.9837], [1.0448, 1.0997, 1.8311], [0, 0, 0]]]

Expected: [[[0, 0, 0], [1.4341, 1.7147, 1.6865], [1.6591, 1.4182, 1.0781], [1.2579, 1.467, 1.9837], [1.0448, 1.0997, 1.8311], [0, 0, 0]]]