import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Cro80691 = tf.keras.layers.Input(shape=([3, 2, 1]))
in0Con96846 = tf.keras.layers.Input(shape=([1, 2, 2]))
in0Con15135 = tf.keras.layers.Input(shape=([2, 1]))
in0Add77591 = tf.keras.layers.Input(shape=([2, 2, 2, 1]))
in1Add77591 = tf.keras.layers.Input(shape=([2, 2, 2, 1]))
in0Con97200 = tf.keras.layers.Input(shape=([3]))

Cro80691 = keras.layers.Cropping2D(cropping=((0, 2), (0, 0)), name = 'Cro80691', )(in0Cro80691)
Res8426 = keras.layers.Reshape((1, 2), name = 'Res8426', )(Cro80691)
Zer45453 = keras.layers.ZeroPadding1D(padding=((1, 0)), name = 'Zer45453', )(Res8426)
Con96846 = keras.layers.Conv2D(3, (1, 1),strides=(1, 1), padding='same', dilation_rate=(1, 1), name = 'Con96846', )(in0Con96846)
Res83363 = keras.layers.Reshape((1, 6), name = 'Res83363', )(Con96846)
LST9281 = keras.layers.LSTM(3,recurrent_activation='sigmoid', name = 'LST9281', )(Res83363)
Res50674 = keras.layers.Reshape((3, 1), name = 'Res50674', )(LST9281)
Ave22388 = keras.layers.AveragePooling1D(pool_size=(2), strides=(1), padding='valid', name = 'Ave22388', )(Res50674)
Con15135 = keras.layers.Concatenate(axis=2, name = 'Con15135', )([Ave22388,in0Con15135])
Min74310 = keras.layers.Minimum(name = 'Min74310', )([Zer45453,Con15135])
Fla37099 = keras.layers.Flatten(name = 'Fla37099', )(Min74310)
Add77591 = keras.layers.Add(name = 'Add77591', )([in0Add77591,in1Add77591])
Glo45749 = keras.layers.GlobalMaxPool3D(name = 'Glo45749', )(Add77591)
Con97200 = keras.layers.Concatenate(axis=1, name = 'Con97200', )([Glo45749,in0Con97200])
Max52986 = keras.layers.Maximum(name = 'Max52986', )([Fla37099,Con97200])
model = tf.keras.models.Model(inputs=[in0Cro80691,in0Con96846,in0Con15135,in0Add77591,in1Add77591,in0Con97200], outputs=Max52986)
w = model.get_layer('Con96846').get_weights() 
w[0] = np.array([[[[0.473, 0.3971, 0.381], [0.2621, 0.3086, 0.9531]]]])
w[1] = np.array([0, 0, 0])
model.get_layer('Con96846').set_weights(w) 
w = model.get_layer('LST9281').get_weights() 
w[0] = np.array([[1, 1, 6, 3, 7, 4, 7, 3, 9, 4, 8, 10], [1, 6, 2, 10, 5, 5, 8, 10, 1, 10, 1, 8], [5, 7, 8, 4, 4, 9, 8, 10, 2, 3, 6, 8], [5, 4, 2, 2, 8, 4, 2, 8, 3, 1, 8, 1], [3, 8, 2, 3, 5, 1, 6, 3, 4, 6, 5, 3], [8, 3, 4, 1, 6, 8, 4, 4, 3, 2, 10, 2]])
w[1] = np.array([[4, 5, 4, 1, 2, 5, 4, 4, 1, 7, 10, 1], [4, 8, 4, 4, 4, 2, 7, 1, 9, 7, 3, 2], [8, 8, 1, 1, 7, 10, 7, 7, 8, 9, 2, 4]])
w[2] = np.array([7, 9, 4, 8, 3, 1, 5, 1, 10, 6, 9, 3])
model.get_layer('LST9281').set_weights(w) 
in0Cro80691 = tf.constant([[[[1.2319], [1.5221]], [[1.4911], [1.0175]], [[1.0076], [1.9534]]]])
in0Con96846 = tf.constant([[[[0.8875, 0.8658], [0.9133, 0.7976]]]])
in0Con15135 = tf.constant([[[0.8591], [0.9498]]])
in0Add77591 = tf.constant([[[[[0.8965], [0.0644]], [[0.3221], [0.9715]]], [[[0.1926], [0.6173]], [[0.1491], [0.7795]]]]])
in1Add77591 = tf.constant([[[[[0.0015], [0.6901]], [[0.0301], [0.1529]]], [[[0.1616], [0.0693]], [[0.0592], [0.5548]]]]])
in0Con97200 = tf.constant([[0.9118, 0.461, 0.7961]])
print (np.array2string(model.predict([in0Cro80691,in0Con96846,in0Con15135,in0Add77591,in1Add77591,in0Con97200],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Max52986.png')

LCro80691 = cropping2D_layer([[[[1.2319], [1.5221]], [[1.4911], [1.0175]], [[1.0076], [1.9534]]]], 0, 2, 0, 0, Cro80691), 
LRes8426 = reshape_layer(Cro80691, [1, 2], Res8426), 
LZer45453 = zero_padding1D_layer(Res8426, 1, 0, Zer45453), 
LCon96846 = conv2D_layer([[[[0.8875, 0.8658], [0.9133, 0.7976]]]], 1, 1,[[[[0.473, 0.3971, 0.381], [0.2621, 0.3086, 0.9531]]]],[0, 0, 0], 1, 1, true, 1, 1, Con96846), 
LRes83363 = reshape_layer(Con96846, [1, 6], Res83363), 
LLST9281 = lstm_layer(Res83363,[[1, 1, 6, 3, 7, 4, 7, 3, 9, 4, 8, 10], [1, 6, 2, 10, 5, 5, 8, 10, 1, 10, 1, 8], [5, 7, 8, 4, 4, 9, 8, 10, 2, 3, 6, 8], [5, 4, 2, 2, 8, 4, 2, 8, 3, 1, 8, 1], [3, 8, 2, 3, 5, 1, 6, 3, 4, 6, 5, 3], [8, 3, 4, 1, 6, 8, 4, 4, 3, 2, 10, 2]],[[4, 5, 4, 1, 2, 5, 4, 4, 1, 7, 10, 1], [4, 8, 4, 4, 4, 2, 7, 1, 9, 7, 3, 2], [8, 8, 1, 1, 7, 10, 7, 7, 8, 9, 2, 4]],[7, 9, 4, 8, 3, 1, 5, 1, 10, 6, 9, 3], LST9281), 
LRes50674 = reshape_layer(LST9281, [3, 1], Res50674), 
LAve22388 = average_pooling1D_layer(Res50674, 2, 1, false, Ave22388), 
LCon15135 = concatenate_layer([Ave22388,[[[0.8591], [0.9498]]]], 2, Con15135), 
LMin74310 = minimum_layer([Zer45453,Con15135], Min74310), 
LFla37099 = flatten_layer(Min74310, Fla37099), 
LAdd77591 = add_layer([[[[[[0.8965], [0.0644]], [[0.3221], [0.9715]]], [[[0.1926], [0.6173]], [[0.1491], [0.7795]]]]], [[[[[0.0015], [0.6901]], [[0.0301], [0.1529]]], [[[0.1616], [0.0693]], [[0.0592], [0.5548]]]]]], Add77591), 
LGlo45749 = global_max_pool3D_layer(Add77591, Glo45749), 
LCon97200 = concatenate_layer([Glo45749,[[0.9118, 0.461, 0.7961]]], 1, Con97200), 
LMax52986 = maximum_layer([Fla37099,Con97200], Max52986), 
exec_layers([LCro80691,LRes8426,LZer45453,LCon96846,LRes83363,LLST9281,LRes50674,LAve22388,LCon15135,LMin74310,LFla37099,LAdd77591,LGlo45749,LCon97200,LMax52986],["Cro80691","Res8426","Zer45453","Con96846","Res83363","LST9281","Res50674","Ave22388","Con15135","Min74310","Fla37099","Add77591","Glo45749","Con97200","Max52986"],Max52986,"Max52986")

Actual (Unparsed): [[1.3343000, 0.9118000, 0.7615942, 0.9498000]]

Expected (Unparsed): [[1.3342999999999998,0.9118,0.7615941559535513,0.9498]]

Actual:   [[1.3343, 0.9118, 0.7616, 0.9498]]

Expected: [[1.3343, 0.9118, 0.7616, 0.9498]]