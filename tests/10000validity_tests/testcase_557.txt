import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Add10607 = tf.keras.layers.Input(shape=([2, 2]))
in1Add10607 = tf.keras.layers.Input(shape=([2, 2]))
in0Con23000 = tf.keras.layers.Input(shape=([8]))
in0Dot10590 = tf.keras.layers.Input(shape=([3, 2]))
in1Dot10590 = tf.keras.layers.Input(shape=([3, 2]))
in0Cro1072 = tf.keras.layers.Input(shape=([4, 3, 2]))
in0Con83046 = tf.keras.layers.Input(shape=([5]))

Add10607 = keras.layers.Add(name = 'Add10607', )([in0Add10607,in1Add10607])
Res20009 = keras.layers.Reshape((2, 2, 1), name = 'Res20009', )(Add10607)
Max71552 = keras.layers.MaxPool2D(pool_size=(2, 2), strides=(1, 8), padding='same', name = 'Max71552', )(Res20009)
Res68791 = keras.layers.Reshape((2, 1, 1, 1), name = 'Res68791', )(Max71552)
Glo88300 = keras.layers.GlobalMaxPool3D(name = 'Glo88300', )(Res68791)
Con23000 = keras.layers.Concatenate(axis=1, name = 'Con23000', )([Glo88300,in0Con23000])
Dot10590 = keras.layers.Dot(axes=(2, 2), name = 'Dot10590', )([in0Dot10590,in1Dot10590])
Fla3408 = keras.layers.Flatten(name = 'Fla3408', )(Dot10590)
Cro1072 = keras.layers.Cropping2D(cropping=((3, 0), (2, 0)), name = 'Cro1072', )(in0Cro1072)
Res34148 = keras.layers.Reshape((1, 2), name = 'Res34148', )(Cro1072)
Sim52089 = keras.layers.SimpleRNN(2,name = 'Sim52089', )(Res34148)
Den26864 = keras.layers.Dense(4,name = 'Den26864', )(Sim52089)
Con83046 = keras.layers.Concatenate(axis=1, name = 'Con83046', )([Den26864,in0Con83046])
Mul57824 = keras.layers.Multiply(name = 'Mul57824', )([Fla3408,Con83046])
Max44925 = keras.layers.Maximum(name = 'Max44925', )([Con23000,Mul57824])
model = tf.keras.models.Model(inputs=[in0Add10607,in1Add10607,in0Con23000,in0Dot10590,in1Dot10590,in0Cro1072,in0Con83046], outputs=Max44925)
w = model.get_layer('Sim52089').get_weights() 
w[0] = np.array([[7, 3], [4, 8]])
w[1] = np.array([[10, 1], [1, 1]])
w[2] = np.array([3, 7])
model.get_layer('Sim52089').set_weights(w) 
w = model.get_layer('Den26864').get_weights() 
w[0] = np.array([[0.5572, 0.135, 0.8542, 0.0584], [0.8695, 0.7478, 0.8404, 0.3059]])
w[1] = np.array([0.4251, 0.7548, 0.7148, 0.8298])
model.get_layer('Den26864').set_weights(w) 
in0Add10607 = tf.constant([[[0.1593, 0.6239], [0.9084, 0.9478]]])
in1Add10607 = tf.constant([[[0.6402, 0.8881], [0.5829, 0.0095]]])
in0Con23000 = tf.constant([[0.2563, 0.5835, 0.2757, 0.5641, 0.7038, 0.8049, 0.525, 0.1849]])
in0Dot10590 = tf.constant([[[0.5516, 0.5739], [0.141, 0.3707], [0.1607, 0.4879]]])
in1Dot10590 = tf.constant([[[0.5404, 0.1953], [0.5873, 0.847], [0.6016, 0.0873]]])
in0Cro1072 = tf.constant([[[[1.981, 1.8307], [1.6593, 1.8205], [1.9634, 1.879]], [[1.2361, 1.7449], [1.1899, 1.1246], [1.3555, 1.925]], [[1.8812, 1.7199], [1.6742, 1.1381], [1.5666, 1.8456]], [[1.0908, 1.0954], [1.0838, 1.8748], [1.8658, 1.6331]]]])
in0Con83046 = tf.constant([[0.0178, 0.5769, 0.3156, 0.8736, 0.7753]])
print (np.array2string(model.predict([in0Add10607,in1Add10607,in0Con23000,in0Dot10590,in1Dot10590,in0Cro1072,in0Con83046],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Max44925.png')

LAdd10607 = add_layer([[[[0.1593, 0.6239], [0.9084, 0.9478]]], [[[0.6402, 0.8881], [0.5829, 0.0095]]]], Add10607), 
LRes20009 = reshape_layer(Add10607, [2, 2, 1], Res20009), 
LMax71552 = max_pool2D_layer(Res20009, 2, 2, 1, 8, true, Max71552), 
LRes68791 = reshape_layer(Max71552, [2, 1, 1, 1], Res68791), 
LGlo88300 = global_max_pool3D_layer(Res68791, Glo88300), 
LCon23000 = concatenate_layer([Glo88300,[[0.2563, 0.5835, 0.2757, 0.5641, 0.7038, 0.8049, 0.525, 0.1849]]], 1, Con23000), 
LDot10590 = dot_layer([[[0.5516, 0.5739], [0.141, 0.3707], [0.1607, 0.4879]]], [[[0.5404, 0.1953], [0.5873, 0.847], [0.6016, 0.0873]]], 2, 2, Dot10590), 
LFla3408 = flatten_layer(Dot10590, Fla3408), 
LCro1072 = cropping2D_layer([[[[1.981, 1.8307], [1.6593, 1.8205], [1.9634, 1.879]], [[1.2361, 1.7449], [1.1899, 1.1246], [1.3555, 1.925]], [[1.8812, 1.7199], [1.6742, 1.1381], [1.5666, 1.8456]], [[1.0908, 1.0954], [1.0838, 1.8748], [1.8658, 1.6331]]]], 3, 0, 2, 0, Cro1072), 
LRes34148 = reshape_layer(Cro1072, [1, 2], Res34148), 
LSim52089 = simple_rnn_layer(Res34148,[[7, 3], [4, 8]],[[10, 1], [1, 1]],[3, 7], Sim52089), 
LDen26864 = dense_layer(Sim52089, [[0.5572, 0.135, 0.8542, 0.0584], [0.8695, 0.7478, 0.8404, 0.3059]],[0.4251, 0.7548, 0.7148, 0.8298], Den26864), 
LCon83046 = concatenate_layer([Den26864,[[0.0178, 0.5769, 0.3156, 0.8736, 0.7753]]], 1, Con83046), 
LMul57824 = multiply_layer([Fla3408,Con83046], Mul57824), 
LMax44925 = maximum_layer([Con23000,Mul57824], Max44925), 
exec_layers([LAdd10607,LRes20009,LMax71552,LRes68791,LGlo88300,LCon23000,LDot10590,LFla3408,LCro1072,LRes34148,LSim52089,LDen26864,LCon83046,LMul57824,LMax44925],["Add10607","Res20009","Max71552","Res68791","Glo88300","Con23000","Dot10590","Fla3408","Cro1072","Res34148","Sim52089","Den26864","Con83046","Mul57824","Max44925"],Max44925,"Max44925")

Actual (Unparsed): [[1.5120000, 1.3265345, 0.9202559, 0.2757000, 0.5641000, 0.7038000, 0.8049000, 0.5250000, 0.1849000]]

Expected (Unparsed): [[1.512,1.326534572048,0.9202559458819999,0.2757,0.5641,0.7038,0.8049,0.525,0.1849]]

Actual:   [[1.512, 1.3266, 0.9203, 0.2757, 0.5641, 0.7038, 0.8049, 0.525, 0.1849]]

Expected: [[1.512, 1.3266, 0.9203, 0.2757, 0.5641, 0.7038, 0.8049, 0.525, 0.1849]]