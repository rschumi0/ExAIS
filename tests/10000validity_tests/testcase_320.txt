import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Glo96692 = tf.keras.layers.Input(shape=([1, 1, 2, 1]))

Glo96692 = keras.layers.GlobalAveragePooling3D(name = 'Glo96692', )(in0Glo96692)
Res38798 = keras.layers.Reshape((1, 1), name = 'Res38798', )(Glo96692)
Sim25780 = keras.layers.SimpleRNN(3,name = 'Sim25780', )(Res38798)
model = tf.keras.models.Model(inputs=[in0Glo96692], outputs=Sim25780)
w = model.get_layer('Sim25780').get_weights() 
w[0] = np.array([[7, 1, 2]])
w[1] = np.array([[3, 7, 4], [2, 9, 8], [7, 5, 10]])
w[2] = np.array([4, 1, 5])
model.get_layer('Sim25780').set_weights(w) 
in0Glo96692 = tf.constant([[[[[1.4318], [1.1284]]]]])
print (np.array2string(model.predict([in0Glo96692],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Sim25780.png')

LGlo96692 = global_average_pooling3D_layer([[[[[1.4318], [1.1284]]]]], Glo96692), 
LRes38798 = reshape_layer(Glo96692, [1, 1], Res38798), 
LSim25780 = simple_rnn_layer(Res38798,[[7, 1, 2]],[[3, 7, 4], [2, 9, 8], [7, 5, 10]],[4, 1, 5], Sim25780), 
exec_layers([LGlo96692,LRes38798,LSim25780],["Glo96692","Res38798","Sim25780"],Sim25780,"Sim25780")

Actual (Unparsed): [[1.0000000, 0.9792966, 0.9999995]]

Expected (Unparsed): [[0.9999999999889463,0.9792966231515279,0.9999994575951131]]

Actual:   [[1, 0.9793, 1]]

Expected: [[1, 0.9793, 1]]