import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Ave48921 = tf.keras.layers.Input(shape=([1, 2]))
in1Ave48921 = tf.keras.layers.Input(shape=([1, 2]))
in0Con4076 = tf.keras.layers.Input(shape=([2, 2, 2, 1]))
in0Glo29575 = tf.keras.layers.Input(shape=([2, 2, 2, 1]))
in0Con54648 = tf.keras.layers.Input(shape=([2, 2, 2, 1]))
in0Ave78969 = tf.keras.layers.Input(shape=([2, 2, 2, 2]))
in1Ave78969 = tf.keras.layers.Input(shape=([2, 2, 2, 2]))

Ave48921 = keras.layers.Average(name = 'Ave48921', )([in0Ave48921,in1Ave48921])
Res62314 = keras.layers.Reshape((1, 2, 1), name = 'Res62314', )(Ave48921)
Res8963 = keras.layers.Reshape((1, 2, 1, 1), name = 'Res8963', )(Res62314)
Zer28504 = keras.layers.ZeroPadding3D(padding=((1, 0), (0, 0), (1, 0)), name = 'Zer28504', )(Res8963)
Con4076 = keras.layers.Concatenate(axis=4, name = 'Con4076', )([Zer28504,in0Con4076])
Glo29575 = keras.layers.GlobalMaxPool3D(name = 'Glo29575', )(in0Glo29575)
Res60114 = keras.layers.Reshape((1, 1), name = 'Res60114', )(Glo29575)
Res52301 = keras.layers.Reshape((1, 1, 1), name = 'Res52301', )(Res60114)
Res19321 = keras.layers.Reshape((1, 1, 1, 1), name = 'Res19321', )(Res52301)
Glo15036 = keras.layers.GlobalMaxPool3D(name = 'Glo15036', )(Res19321)
Res78666 = keras.layers.Reshape((1, 1), name = 'Res78666', )(Glo15036)
Res36882 = keras.layers.Reshape((1, 1, 1), name = 'Res36882', )(Res78666)
Res50648 = keras.layers.Reshape((1, 1, 1, 1), name = 'Res50648', )(Res36882)
Zer58292 = keras.layers.ZeroPadding3D(padding=((1, 0), (1, 0), (1, 0)), name = 'Zer58292', )(Res50648)
Con54648 = keras.layers.Concatenate(axis=4, name = 'Con54648', )([Zer58292,in0Con54648])
Ave78969 = keras.layers.Average(name = 'Ave78969', )([in0Ave78969,in1Ave78969])
Mul56906 = keras.layers.Multiply(name = 'Mul56906', )([Con54648,Ave78969])
Min89475 = keras.layers.Minimum(name = 'Min89475', )([Con4076,Mul56906])
Res87293 = keras.layers.Reshape((2, 2, 4), name = 'Res87293', )(Min89475)
PRe48882 = keras.layers.PReLU(name = 'PRe48882', )(Res87293)
model = tf.keras.models.Model(inputs=[in0Ave48921,in1Ave48921,in0Con4076,in0Glo29575,in0Con54648,in0Ave78969,in1Ave78969], outputs=PRe48882)
w = model.get_layer('PRe48882').get_weights() 
w[0] = np.array([[[0.5723, 0.2434, 0.7342, 0.2773], [0.6781, 0.1871, 0.3741, 0.3711]], [[0.5058, 0.9153, 0.2292, 0.494], [0.6243, 0.5738, 0.9386, 0.5955]]])
model.get_layer('PRe48882').set_weights(w) 
in0Ave48921 = tf.constant([[[0.0989, 0.6635]]])
in1Ave48921 = tf.constant([[[0.7491, 0.2022]]])
in0Con4076 = tf.constant([[[[[0.7065], [0.7949]], [[0.0668], [0.0736]]], [[[0.8657], [0.6401]], [[0.3251], [0.1539]]]]])
in0Glo29575 = tf.constant([[[[[1.1707], [1.9319]], [[1.7549], [1.2463]]], [[[1.5045], [1.5463]], [[1.807], [1.0457]]]]])
in0Con54648 = tf.constant([[[[[0.4278], [0.3496]], [[0.0241], [0.6821]]], [[[0.581], [0.3827]], [[0.2878], [0.2896]]]]])
in0Ave78969 = tf.constant([[[[[0.2439, 0.7611], [0.8219, 0.5085]], [[0.5516, 0.4019], [0.2108, 0.0438]]], [[[0.4858, 0.3201], [0.4469, 0.944]], [[0.5812, 0.9104], [0.8827, 0.1126]]]]])
in1Ave78969 = tf.constant([[[[[0.9013, 0.0679], [0.2234, 0.0787]], [[0.7449, 0.0398], [0.8723, 0.3375]]], [[[0.6339, 0.9858], [0.6969, 0.9286]], [[0.6893, 0.7048], [0.6371, 0.8233]]]]])
print (np.array2string(model.predict([in0Ave48921,in1Ave48921,in0Con4076,in0Glo29575,in0Con54648,in0Ave78969,in1Ave78969],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='PRe48882.png')

LAve48921 = average_layer([[[[0.0989, 0.6635]]], [[[0.7491, 0.2022]]]], Ave48921), 
LRes62314 = reshape_layer(Ave48921, [1, 2, 1], Res62314), 
LRes8963 = reshape_layer(Res62314, [1, 2, 1, 1], Res8963), 
LZer28504 = zero_padding3D_layer(Res8963, 1, 0, 0, 0, 1, 0, Zer28504), 
LCon4076 = concatenate_layer([Zer28504,[[[[[0.7065], [0.7949]], [[0.0668], [0.0736]]], [[[0.8657], [0.6401]], [[0.3251], [0.1539]]]]]], 4, Con4076), 
LGlo29575 = global_max_pool3D_layer([[[[[1.1707], [1.9319]], [[1.7549], [1.2463]]], [[[1.5045], [1.5463]], [[1.807], [1.0457]]]]], Glo29575), 
LRes60114 = reshape_layer(Glo29575, [1, 1], Res60114), 
LRes52301 = reshape_layer(Res60114, [1, 1, 1], Res52301), 
LRes19321 = reshape_layer(Res52301, [1, 1, 1, 1], Res19321), 
LGlo15036 = global_max_pool3D_layer(Res19321, Glo15036), 
LRes78666 = reshape_layer(Glo15036, [1, 1], Res78666), 
LRes36882 = reshape_layer(Res78666, [1, 1, 1], Res36882), 
LRes50648 = reshape_layer(Res36882, [1, 1, 1, 1], Res50648), 
LZer58292 = zero_padding3D_layer(Res50648, 1, 0, 1, 0, 1, 0, Zer58292), 
LCon54648 = concatenate_layer([Zer58292,[[[[[0.4278], [0.3496]], [[0.0241], [0.6821]]], [[[0.581], [0.3827]], [[0.2878], [0.2896]]]]]], 4, Con54648), 
LAve78969 = average_layer([[[[[[0.2439, 0.7611], [0.8219, 0.5085]], [[0.5516, 0.4019], [0.2108, 0.0438]]], [[[0.4858, 0.3201], [0.4469, 0.944]], [[0.5812, 0.9104], [0.8827, 0.1126]]]]], [[[[[0.9013, 0.0679], [0.2234, 0.0787]], [[0.7449, 0.0398], [0.8723, 0.3375]]], [[[0.6339, 0.9858], [0.6969, 0.9286]], [[0.6893, 0.7048], [0.6371, 0.8233]]]]]], Ave78969), 
LMul56906 = multiply_layer([Con54648,Ave78969], Mul56906), 
LMin89475 = minimum_layer([Con4076,Mul56906], Min89475), 
LRes87293 = reshape_layer(Min89475, [2, 2, 4], Res87293), 
LPRe48882 = prelu_layer(Res87293, [[[0.5723, 0.2434, 0.7342, 0.2773], [0.6781, 0.1871, 0.3741, 0.3711]], [[0.5058, 0.9153, 0.2292, 0.494], [0.6243, 0.5738, 0.9386, 0.5955]]], PRe48882), 
exec_layers([LAve48921,LRes62314,LRes8963,LZer28504,LCon4076,LGlo29575,LRes60114,LRes52301,LRes19321,LGlo15036,LRes78666,LRes36882,LRes50648,LZer58292,LCon54648,LAve78969,LMul56906,LMin89475,LRes87293,LPRe48882],["Ave48921","Res62314","Res8963","Zer28504","Con4076","Glo29575","Res60114","Res52301","Res19321","Glo15036","Res78666","Res36882","Res50648","Zer58292","Con54648","Ave78969","Mul56906","Min89475","Res87293","PRe48882"],PRe48882,"PRe48882")

Actual (Unparsed): [[[[0.0000000, 0.1773231, 0.0000000, 0.1026426], [0.0000000, 0.0053225, 0.0000000, 0.0736000]], [[0.0000000, 0.3793639, 0.0000000, 0.3583220], [0.0000000, 0.2324273, 0.4328500, 0.1355183]]]]

Expected (Unparsed): [[[[0,0.17732309999999998,0,0.10264256],[0,0.005322485,0,0.0736]],[[0,0.37936395,0.0,0.35832200999999997],[0,0.23242727999999999,0.43284999999999996,0.13551832000000003]]]]

Actual:   [[[[0, 0.1774, 0, 0.1027], [0, 0.0054, 0, 0.0736]], [[0, 0.3794, 0, 0.3584], [0, 0.2325, 0.4329, 0.1356]]]]

Expected: [[[[0, 0.1774, 0, 0.1027], [0, 0.0054, 0, 0.0736]], [[0, 0.3794, 0, 0.3584], [0, 0.2325, 0.4329, 0.1356]]]]