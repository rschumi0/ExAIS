import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Glo177 = tf.keras.layers.Input(shape=([1, 1, 1]))
in0Con26977 = tf.keras.layers.Input(shape=([1, 1]))
in0Ave39445 = tf.keras.layers.Input(shape=([2, 2]))

Glo177 = keras.layers.GlobalAveragePooling2D(name = 'Glo177', )(in0Glo177)
Res60220 = keras.layers.Reshape((1, 1), name = 'Res60220', )(Glo177)
Con26977 = keras.layers.Concatenate(axis=2, name = 'Con26977', )([Res60220,in0Con26977])
Ave39445 = keras.layers.AveragePooling1D(pool_size=(2), name = 'Ave39445', )(in0Ave39445)
Add42462 = keras.layers.Add(name = 'Add42462', )([Con26977,Ave39445])
Sim32167 = keras.layers.SimpleRNN(1,name = 'Sim32167', )(Add42462)
model = tf.keras.models.Model(inputs=[in0Glo177,in0Con26977,in0Ave39445], outputs=Sim32167)
w = model.get_layer('Sim32167').get_weights() 
w[0] = np.array([[6], [9]])
w[1] = np.array([[1]])
w[2] = np.array([1])
model.get_layer('Sim32167').set_weights(w) 
in0Glo177 = tf.constant([[[[1.4642]]]])
in0Con26977 = tf.constant([[[0.6946]]])
in0Ave39445 = tf.constant([[[1.1535, 1.4088], [1.0358, 1.6552]]])
print (np.array2string(model.predict([in0Glo177,in0Con26977,in0Ave39445],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Sim32167.png')

LGlo177 = global_average_pooling2D_layer([[[[1.4642]]]], Glo177), 
LRes60220 = reshape_layer(Glo177, [1, 1], Res60220), 
LCon26977 = concatenate_layer([Res60220,[[[0.6946]]]], 2, Con26977), 
LAve39445 = average_pooling1D_layer([[[1.1535, 1.4088], [1.0358, 1.6552]]], 2, Ave39445), 
LAdd42462 = add_layer([Con26977,Ave39445], Add42462), 
LSim32167 = simple_rnn_layer(Add42462,[[6], [9]],[[1]],[1], Sim32167), 
exec_layers([LGlo177,LRes60220,LCon26977,LAve39445,LAdd42462,LSim32167],["Glo177","Res60220","Con26977","Ave39445","Add42462","Sim32167"],Sim32167,"Sim32167")

Actual (Unparsed): [[1.0000000]]

Expected (Unparsed): [[1.0]]

Actual:   [[1]]

Expected: [[1]]