import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Per14652 = tf.keras.layers.Input(shape=([4, 4]))
in0LST20283 = tf.keras.layers.Input(shape=([3, 3]))
in0Con18014 = tf.keras.layers.Input(shape=([13]))
in0Mul53058 = tf.keras.layers.Input(shape=([2, 1, 1]))
in1Mul53058 = tf.keras.layers.Input(shape=([2, 1, 1]))
in0Glo45725 = tf.keras.layers.Input(shape=([2, 2]))
in0Con31282 = tf.keras.layers.Input(shape=([2]))
in0Sub50214 = tf.keras.layers.Input(shape=([3]))
in1Sub50214 = tf.keras.layers.Input(shape=([3]))
in0Con96152 = tf.keras.layers.Input(shape=([15]))

Per14652 = keras.layers.Permute((1,2), name = 'Per14652',)(in0Per14652)
Fla52528 = keras.layers.Flatten(name = 'Fla52528', )(Per14652)
ReL86108 = keras.layers.ReLU(max_value=2.638138230304385, negative_slope=8.846202361773004, threshold=6.575487943269468, name = 'ReL86108', )(Fla52528)
Mas31215 = keras.layers.Masking(mask_value=2, name = 'Mas31215', )(ReL86108)
LST20283 = keras.layers.LSTM(3,recurrent_activation='sigmoid', name = 'LST20283', )(in0LST20283)
Con18014 = keras.layers.Concatenate(axis=1, name = 'Con18014', )([LST20283,in0Con18014])
Ave63930 = keras.layers.Average(name = 'Ave63930', )([Mas31215,Con18014])
Mul53058 = keras.layers.Multiply(name = 'Mul53058', )([in0Mul53058,in1Mul53058])
Res88915 = keras.layers.Reshape((2, 1), name = 'Res88915', )(Mul53058)
Fla55647 = keras.layers.Flatten(name = 'Fla55647', )(Res88915)
Glo45725 = keras.layers.GlobalMaxPool1D(name = 'Glo45725', )(in0Glo45725)
Dot51670 = keras.layers.Dot(axes=(1, 1), name = 'Dot51670', )([Fla55647,Glo45725])
Con31282 = keras.layers.Concatenate(axis=1, name = 'Con31282', )([Dot51670,in0Con31282])
Sub50214 = keras.layers.Subtract(name = 'Sub50214', )([in0Sub50214,in1Sub50214])
Dot26945 = keras.layers.Dot(axes=(1, 1), name = 'Dot26945', )([Con31282,Sub50214])
Con96152 = keras.layers.Concatenate(axis=1, name = 'Con96152', )([Dot26945,in0Con96152])
Sub23074 = keras.layers.Subtract(name = 'Sub23074', )([Ave63930,Con96152])
model = tf.keras.models.Model(inputs=[in0Per14652,in0LST20283,in0Con18014,in0Mul53058,in1Mul53058,in0Glo45725,in0Con31282,in0Sub50214,in1Sub50214,in0Con96152], outputs=Sub23074)
w = model.get_layer('LST20283').get_weights() 
w[0] = np.array([[3, 1, 8, 5, 3, 10, 5, 6, 5, 6, 2, 8], [1, 8, 3, 7, 10, 8, 7, 6, 9, 3, 3, 8], [4, 1, 2, 3, 7, 7, 3, 7, 8, 2, 9, 6]])
w[1] = np.array([[2, 4, 7, 8, 7, 8, 6, 3, 1, 3, 8, 10], [1, 9, 4, 6, 10, 4, 3, 1, 7, 5, 7, 6], [3, 9, 8, 10, 6, 5, 9, 7, 1, 2, 8, 5]])
w[2] = np.array([2, 1, 1, 5, 5, 10, 4, 1, 10, 2, 3, 7])
model.get_layer('LST20283').set_weights(w) 
in0Per14652 = tf.constant([[[1.0062, 1.4929, 1.0088, 1.8268], [1.3184, 1.1338, 1.7593, 1.103], [1.3431, 1.4687, 1.7493, 1.1594], [1.8253, 1.8923, 1.5662, 1.9963]]])
in0LST20283 = tf.constant([[[8, 5, 6], [9, 7, 6], [7, 4, 4]]])
in0Con18014 = tf.constant([[0.7494, 0.7464, 0.2429, 0.3024, 0.4388, 0.9779, 0.4552, 0.3821, 0.472, 0.6464, 0.6439, 0.6223, 0.5107]])
in0Mul53058 = tf.constant([[[[0.2201]], [[0.9558]]]])
in1Mul53058 = tf.constant([[[[0.2203]], [[0.808]]]])
in0Glo45725 = tf.constant([[[1.1317, 1.9687], [1.5739, 1.9619]]])
in0Con31282 = tf.constant([[0.9243, 0.2228]])
in0Sub50214 = tf.constant([[0.7183, 0.0479, 0.8482]])
in1Sub50214 = tf.constant([[0.7776, 0.1019, 0.883]])
in0Con96152 = tf.constant([[0.311, 0.08, 0.7621, 0.8946, 0.8913, 0.649, 0.3888, 0.7427, 0.8839, 0.1352, 0.59, 0.51, 0.4549, 0.602, 0.4781]])
print (np.array2string(model.predict([in0Per14652,in0LST20283,in0Con18014,in0Mul53058,in1Mul53058,in0Glo45725,in0Con31282,in0Sub50214,in1Sub50214,in0Con96152],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Sub23074.png')

LPer14652 = permute_layer([[[1.0062, 1.4929, 1.0088, 1.8268], [1.3184, 1.1338, 1.7593, 1.103], [1.3431, 1.4687, 1.7493, 1.1594], [1.8253, 1.8923, 1.5662, 1.9963]]], 1,2, Per14652), 
LFla52528 = flatten_layer(Per14652, Fla52528), 
LReL86108 = relu_layer(Fla52528, 2.638138230304385, 8.846202361773004, 6.575487943269468, ReL86108), 
LMas31215 = masking_layer(ReL86108, 2, Mas31215), 
LLST20283 = lstm_layer([[[8, 5, 6], [9, 7, 6], [7, 4, 4]]],[[3, 1, 8, 5, 3, 10, 5, 6, 5, 6, 2, 8], [1, 8, 3, 7, 10, 8, 7, 6, 9, 3, 3, 8], [4, 1, 2, 3, 7, 7, 3, 7, 8, 2, 9, 6]],[[2, 4, 7, 8, 7, 8, 6, 3, 1, 3, 8, 10], [1, 9, 4, 6, 10, 4, 3, 1, 7, 5, 7, 6], [3, 9, 8, 10, 6, 5, 9, 7, 1, 2, 8, 5]],[2, 1, 1, 5, 5, 10, 4, 1, 10, 2, 3, 7], LST20283), 
LCon18014 = concatenate_layer([LST20283,[[0.7494, 0.7464, 0.2429, 0.3024, 0.4388, 0.9779, 0.4552, 0.3821, 0.472, 0.6464, 0.6439, 0.6223, 0.5107]]], 1, Con18014), 
LAve63930 = average_layer([Mas31215,Con18014], Ave63930), 
LMul53058 = multiply_layer([[[[[0.2201]], [[0.9558]]]], [[[[0.2203]], [[0.808]]]]], Mul53058), 
LRes88915 = reshape_layer(Mul53058, [2, 1], Res88915), 
LFla55647 = flatten_layer(Res88915, Fla55647), 
LGlo45725 = global_max_pool1D_layer([[[1.1317, 1.9687], [1.5739, 1.9619]]], Glo45725), 
LDot51670 = dot_layer(Fla55647,Glo45725, 1, 1, Dot51670), 
LCon31282 = concatenate_layer([Dot51670,[[0.9243, 0.2228]]], 1, Con31282), 
LSub50214 = subtract_layer([[0.7183, 0.0479, 0.8482]], [[0.7776, 0.1019, 0.883]], Sub50214), 
LDot26945 = dot_layer(Con31282,Sub50214, 1, 1, Dot26945), 
LCon96152 = concatenate_layer([Dot26945,[[0.311, 0.08, 0.7621, 0.8946, 0.8913, 0.649, 0.3888, 0.7427, 0.8839, 0.1352, 0.59, 0.51, 0.4549, 0.602, 0.4781]]], 1, Con96152), 
LSub23074 = subtract_layer(Ave63930,Con96152, Sub23074), 
exec_layers([LPer14652,LFla52528,LReL86108,LMas31215,LLST20283,LCon18014,LAve63930,LMul53058,LRes88915,LFla55647,LGlo45725,LDot51670,LCon31282,LSub50214,LDot26945,LCon96152,LSub23074],["Per14652","Fla52528","ReL86108","Mas31215","LST20283","Con18014","Ave63930","Mul53058","Res88915","Fla55647","Glo45725","Dot51670","Con31282","Sub50214","Dot26945","Con96152","Sub23074"],Sub23074,"Sub23074")

Actual (Unparsed): [[-23.9836460, -22.2942733, -24.2044965, -21.3913273, -23.7740318, -24.8389863, -21.8002866, -24.3747677, -23.3971315, -23.2441395, -21.2908676, -24.3099050, -21.1973620, -20.8471641, -22.4474373, -20.4769617]]

Expected (Unparsed): [[-23.983645829845226,-22.29427335699132,-24.20449663865847,-21.39132724953668,-23.774031889899376,-24.838986367891028,-21.80028657924652,-24.37476788426233,-23.39713129073148,-23.244139782412137,-21.29086759105538,-24.30990497766033,-21.19736190130801,-20.847164122188612,-22.4474374172757,-20.47696159937642]]

Actual:   [[-23.9836, -22.2942, -24.2044, -21.3913, -23.774, -24.8389, -21.8002, -24.3747, -23.3971, -23.2441, -21.2908, -24.3099, -21.1973, -20.8471, -22.4474, -20.4769]]

Expected: [[-23.9836, -22.2942, -24.2044, -21.3913, -23.774, -24.8389, -21.8002, -24.3747, -23.3971, -23.2441, -21.2908, -24.3099, -21.1973, -20.8471, -22.4474, -20.4769]]