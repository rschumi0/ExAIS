import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Ave37969 = tf.keras.layers.Input(shape=([2, 2]))
in0Con65509 = tf.keras.layers.Input(shape=([4, 4, 3, 1]))
in0Sub83851 = tf.keras.layers.Input(shape=([3, 2, 3, 2]))
in1Sub83851 = tf.keras.layers.Input(shape=([3, 2, 3, 2]))

Ave37969 = keras.layers.AveragePooling1D(pool_size=(1), name = 'Ave37969', )(in0Ave37969)
Res32063 = keras.layers.Reshape((2, 2, 1), name = 'Res32063', )(Ave37969)
Res3566 = keras.layers.Reshape((2, 2, 1, 1), name = 'Res3566', )(Res32063)
Zer54782 = keras.layers.ZeroPadding3D(padding=((1, 1), (1, 1), (1, 1)), name = 'Zer54782', )(Res3566)
Con65509 = keras.layers.Concatenate(axis=4, name = 'Con65509', )([Zer54782,in0Con65509])
Sub83851 = keras.layers.Subtract(name = 'Sub83851', )([in0Sub83851,in1Sub83851])
Lay10716 = keras.layers.LayerNormalization(axis=1, epsilon=1.3198542703255807, name = 'Lay10716', )(Sub83851)
Zer58437 = keras.layers.ZeroPadding3D(padding=((1, 0), (2, 0), (0, 0)), name = 'Zer58437', )(Lay10716)
Mul70543 = keras.layers.Multiply(name = 'Mul70543', )([Con65509,Zer58437])
model = tf.keras.models.Model(inputs=[in0Ave37969,in0Con65509,in0Sub83851,in1Sub83851], outputs=Mul70543)
in0Ave37969 = tf.constant([[[1.0885, 1.5783], [1.1814, 1.4531]]])
in0Con65509 = tf.constant([[[[[0.2734], [0.1022], [0.5647]], [[0.586], [0.6581], [0.1937]], [[0.3895], [0.7483], [0.8879]], [[0.4879], [0.9591], [0.0227]]], [[[0.5641], [0.0251], [0.0889]], [[0.8386], [0.2397], [0.2785]], [[0.8217], [0.467], [0.3095]], [[0.1975], [0.6276], [0.5385]]], [[[0.5254], [0.6885], [0.1413]], [[0.348], [0.056], [0.5329]], [[0.2864], [0.0674], [0.1641]], [[0.3383], [0.9985], [0.9157]]], [[[0.3856], [0.6257], [0.2646]], [[0.6674], [0.5579], [0.5644]], [[0.8725], [0.6214], [0.1686]], [[0.1874], [0.0839], [0.295]]]]])
in0Sub83851 = tf.constant([[[[[0.2649, 0.9642], [0.7569, 0.3532], [0.5999, 0.0621]], [[0.6449, 0.6351], [0.5943, 0.348], [0.7056, 0.1951]]], [[[0.5425, 0.0041], [0.1242, 0.5328], [0.8431, 0.7991]], [[0.0739, 0.6802], [0.8774, 0.0243], [0.073, 0.3704]]], [[[0.0373, 0.5579], [0.2356, 0.4203], [0.9464, 0.7241]], [[0.1515, 0.096], [0.7792, 0.8585], [0.5735, 0.1812]]]]])
in1Sub83851 = tf.constant([[[[[0.856, 0.3953], [0.4389, 0.5732], [0.3656, 0.8524]], [[0.0065, 0.497], [0.1543, 0.3038], [0.053, 0.8429]]], [[[0.0048, 0.8043], [0.1367, 0.7112], [0.7273, 0.7558]], [[0.9155, 0.9784], [0.6856, 0.3926], [0.3798, 0.5865]]], [[[0.0894, 0.4025], [0.6518, 0.3005], [0.497, 0.1958]], [[0.6933, 0.881], [0.4955, 0.4918], [0.8623, 0.9738]]]]])
print (np.array2string(model.predict([in0Ave37969,in0Con65509,in0Sub83851,in1Sub83851],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Mul70543.png')

LAve37969 = average_pooling1D_layer([[[1.0885, 1.5783], [1.1814, 1.4531]]], 1, Ave37969), 
LRes32063 = reshape_layer(Ave37969, [2, 2, 1], Res32063), 
LRes3566 = reshape_layer(Res32063, [2, 2, 1, 1], Res3566), 
LZer54782 = zero_padding3D_layer(Res3566, 1, 1, 1, 1, 1, 1, Zer54782), 
LCon65509 = concatenate_layer([Zer54782,[[[[[0.2734], [0.1022], [0.5647]], [[0.586], [0.6581], [0.1937]], [[0.3895], [0.7483], [0.8879]], [[0.4879], [0.9591], [0.0227]]], [[[0.5641], [0.0251], [0.0889]], [[0.8386], [0.2397], [0.2785]], [[0.8217], [0.467], [0.3095]], [[0.1975], [0.6276], [0.5385]]], [[[0.5254], [0.6885], [0.1413]], [[0.348], [0.056], [0.5329]], [[0.2864], [0.0674], [0.1641]], [[0.3383], [0.9985], [0.9157]]], [[[0.3856], [0.6257], [0.2646]], [[0.6674], [0.5579], [0.5644]], [[0.8725], [0.6214], [0.1686]], [[0.1874], [0.0839], [0.295]]]]]], 4, Con65509), 
LSub83851 = subtract_layer([[[[[0.2649, 0.9642], [0.7569, 0.3532], [0.5999, 0.0621]], [[0.6449, 0.6351], [0.5943, 0.348], [0.7056, 0.1951]]], [[[0.5425, 0.0041], [0.1242, 0.5328], [0.8431, 0.7991]], [[0.0739, 0.6802], [0.8774, 0.0243], [0.073, 0.3704]]], [[[0.0373, 0.5579], [0.2356, 0.4203], [0.9464, 0.7241]], [[0.1515, 0.096], [0.7792, 0.8585], [0.5735, 0.1812]]]]], [[[[[0.856, 0.3953], [0.4389, 0.5732], [0.3656, 0.8524]], [[0.0065, 0.497], [0.1543, 0.3038], [0.053, 0.8429]]], [[[0.0048, 0.8043], [0.1367, 0.7112], [0.7273, 0.7558]], [[0.9155, 0.9784], [0.6856, 0.3926], [0.3798, 0.5865]]], [[[0.0894, 0.4025], [0.6518, 0.3005], [0.497, 0.1958]], [[0.6933, 0.881], [0.4955, 0.4918], [0.8623, 0.9738]]]]], Sub83851), 
LLay10716 = layer_normalization_layer(Sub83851, 1, 1.3198542703255807, Lay10716), 
LZer58437 = zero_padding3D_layer(Lay10716, 1, 0, 2, 0, 0, 0, Zer58437), 
LMul70543 = multiply_layer([Con65509,Zer58437], Mul70543), 
exec_layers([LAve37969,LRes32063,LRes3566,LZer54782,LCon65509,LSub83851,LLay10716,LZer58437,LMul70543],["Ave37969","Res32063","Res3566","Zer54782","Con65509","Sub83851","Lay10716","Zer58437","Mul70543"],Mul70543,"Mul70543")

Actual (Unparsed): [[[[[0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000]], [[0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000]], [[0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000]], [[0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000]]], [[[0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000]], [[0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000]], [[-0.0000000, 0.3802683], [0.4717229, -0.0512363], [-0.0000000, -0.1746421]], [[0.0000000, 0.0740146], [0.0000000, 0.0158541], [0.0000000, -0.0438413]]], [[[0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000]], [[0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000]], [[0.0000000, -0.1728474], [0.0298591, -0.0049750], [-0.0000000, 0.0149983]], [[-0.0000000, 0.0047097], [-0.0000000, -0.3216009], [-0.0000000, 0.2619797]]], [[[0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000]], [[0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000]], [[-0.0000000, 0.1227913], [-0.0000000, 0.1140439], [0.0000000, 0.0797266]], [[-0.0000000, -0.0728385], [-0.0000000, 0.0249034], [-0.0000000, -0.0603817]]]]]

Expected (Unparsed): [[[[[0,0.0],[0,0.0],[0,0.0]],[[0,0.0],[0,0.0],[0,0.0]],[[0,0.0],[0,0.0],[0,0.0]],[[0,0.0],[0,0.0],[0,0.0]]],[[[0,0.0],[0,0.0],[0,0.0]],[[0,0.0],[0.0,0.0],[0,0.0]],[[-0.0,0.3802682700444522],[0.47172293477648464,-0.051236295635529734],[-0.0,-0.17464211120101147]],[[0.0,0.07401456883942],[0.0,0.015854115044395583],[0.0,-0.04384134936244265]]],[[[0,0.0],[0,0.0],[0,0.0]],[[0,0.0],[0.0,0.0],[0,0.0]],[[0.0,-0.17284739118814746],[0.029859103559442768,-0.0049750414353586575],[-0.0,0.01499828687631017]],[[-0.0,0.004709732313913529],[-0.0,-0.3216009510290309],[-0.0,0.26197965382714955]]],[[[0,0.0],[0,0.0],[0,0.0]],[[0,0.0],[0,0.0],[0,0.0]],[[-0.0,0.12279134111676117],[-0.0,0.11404390541806299],[0.0,0.07972664509216555]],[[-0.0,-0.07283845832839601],[-0.0,0.024903414537350683],[-0.0,-0.06038173736324172]]]]]

Actual:   [[[[[0, 0], [0, 0], [0, 0]], [[0, 0], [0, 0], [0, 0]], [[0, 0], [0, 0], [0, 0]], [[0, 0], [0, 0], [0, 0]]], [[[0, 0], [0, 0], [0, 0]], [[0, 0], [0, 0], [0, 0]], [[-0, 0.3803], [0.4718, -0.0512], [-0, -0.1746]], [[0, 0.0741], [0, 0.0159], [0, -0.0438]]], [[[0, 0], [0, 0], [0, 0]], [[0, 0], [0, 0], [0, 0]], [[0, -0.1728], [0.0299, -0.0049], [-0, 0.015]], [[-0, 0.0048], [-0, -0.3216], [-0, 0.262]]], [[[0, 0], [0, 0], [0, 0]], [[0, 0], [0, 0], [0, 0]], [[-0, 0.1228], [-0, 0.1141], [0, 0.0798]], [[-0, -0.0728], [-0, 0.025], [-0, -0.0603]]]]]

Expected: [[[[[0, 0], [0, 0], [0, 0]], [[0, 0], [0, 0], [0, 0]], [[0, 0], [0, 0], [0, 0]], [[0, 0], [0, 0], [0, 0]]], [[[0, 0], [0, 0], [0, 0]], [[0, 0], [0, 0], [0, 0]], [[-0, 0.3803], [0.4718, -0.0512], [-0, -0.1746]], [[0, 0.0741], [0, 0.0159], [0, -0.0438]]], [[[0, 0], [0, 0], [0, 0]], [[0, 0], [0, 0], [0, 0]], [[0, -0.1728], [0.0299, -0.0049], [-0, 0.015]], [[-0, 0.0048], [-0, -0.3216], [-0, 0.262]]], [[[0, 0], [0, 0], [0, 0]], [[0, 0], [0, 0], [0, 0]], [[-0, 0.1228], [-0, 0.1141], [0, 0.0798]], [[-0, -0.0728], [-0, 0.025], [-0, -0.0603]]]]]