import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Add36105 = tf.keras.layers.Input(shape=([1, 2, 1, 2]))
in1Add36105 = tf.keras.layers.Input(shape=([1, 2, 1, 2]))
in0Con59913 = tf.keras.layers.Input(shape=([2, 2]))
in0Sof93939 = tf.keras.layers.Input(shape=([2, 2]))
in0Con96853 = tf.keras.layers.Input(shape=([2, 25]))
in0Sub95705 = tf.keras.layers.Input(shape=([3, 3, 3, 3]))
in1Sub95705 = tf.keras.layers.Input(shape=([3, 3, 3, 3]))

Add36105 = keras.layers.Add(name = 'Add36105', )([in0Add36105,in1Add36105])
Glo50609 = keras.layers.GlobalAveragePooling3D(name = 'Glo50609', )(Add36105)
Res47949 = keras.layers.Reshape((2, 1), name = 'Res47949', )(Glo50609)
Con59913 = keras.layers.Concatenate(axis=2, name = 'Con59913', )([Res47949,in0Con59913])
Sof93939 = keras.layers.Softmax(axis=1, name = 'Sof93939', input_shape=(2, 2))(in0Sof93939)
Con96853 = keras.layers.Concatenate(axis=2, name = 'Con96853', )([Sof93939,in0Con96853])
Sub95705 = keras.layers.Subtract(name = 'Sub95705', )([in0Sub95705,in1Sub95705])
Res97374 = keras.layers.Reshape((3, 3, 9), name = 'Res97374', )(Sub95705)
Res17763 = keras.layers.Reshape((3, 27), name = 'Res17763', )(Res97374)
Dot18143 = keras.layers.Dot(axes=(2, 2), name = 'Dot18143', )([Con96853,Res17763])
Add32634 = keras.layers.Add(name = 'Add32634', )([Con59913,Dot18143])
model = tf.keras.models.Model(inputs=[in0Add36105,in1Add36105,in0Con59913,in0Sof93939,in0Con96853,in0Sub95705,in1Sub95705], outputs=Add32634)
in0Add36105 = tf.constant([[[[[0.2292, 0.8371]], [[0.9034, 0.5926]]]]])
in1Add36105 = tf.constant([[[[[0.4458, 0.1669]], [[0.4352, 0.0758]]]]])
in0Con59913 = tf.constant([[[0.0733, 0.928], [0.4041, 0.2901]]])
in0Sof93939 = tf.constant([[[0.7774, 0.8656], [0.4559, 0.3319]]])
in0Con96853 = tf.constant([[[0.0165, 0.8484, 0.0143, 0.5552, 0.8307, 0.8714, 0.6115, 0.3662, 0.852, 0.4394, 0.2885, 0.779, 0.4097, 0.2005, 0.985, 0.0633, 0.0998, 0.1225, 0.3027, 0.5557, 0.3991, 0.2762, 0.4888, 0.9092, 0.1178], [0.7951, 0.989, 0.512, 0.9205, 0.04, 0.5235, 0.285, 0.0348, 0.1127, 0.5464, 0.822, 0.4444, 0.5154, 0.6344, 0.6308, 0.3111, 0.9301, 0.8247, 0.0523, 0.111, 0.8057, 0.1704, 0.2874, 0.9842, 0.6842]]])
in0Sub95705 = tf.constant([[[[[0.523, 0.5562, 0.2635], [0.3583, 0.4864, 0.3623], [0.5061, 0.0856, 0.4163]], [[0.7373, 0.0546, 0.7344], [0.6042, 0.165, 0.0603], [0.4445, 0.9608, 0.4705]], [[0.4735, 0.4975, 0.4645], [0.3743, 0.8271, 0.4303], [0.6102, 0.2262, 0.2734]]], [[[0.215, 0.3723, 0.5608], [0.7036, 0.4674, 0.2394], [0.234, 0.276, 0.3402]], [[0.0801, 0.4175, 0.833], [0.3518, 0.9542, 0.6574], [0.4958, 0.911, 0.4974]], [[0.5337, 0.1914, 0.7062], [0.1754, 0.1984, 0.99], [0.4455, 0.5295, 0.2162]]], [[[0.9077, 0.6586, 0.5175], [0.6795, 0.2645, 0.4005], [0.1891, 0.5336, 0.7779]], [[0.7332, 0.2325, 0.4059], [0.3212, 0.8048, 0.376], [0.0088, 0.6768, 0.1923]], [[0.2365, 0.3581, 0.6754], [0.9312, 0.9692, 0.6365], [0.8276, 0.3158, 0.9906]]]]])
in1Sub95705 = tf.constant([[[[[0.5156, 0.9274, 0.1193], [0.1255, 0.151, 0.1332], [0.3594, 0.7539, 0.8622]], [[0.7193, 0.1141, 0.9297], [0.7197, 0.0289, 0.1765], [0.979, 0.8748, 0.1597]], [[0.5329, 0.7909, 0.4889], [0.5624, 0.7449, 0.87], [0.5449, 0.0479, 0.3227]]], [[[0.2286, 0.6571, 0.6575], [0.0851, 0.3714, 0.235], [0.4798, 0.3237, 0.9446]], [[0.0016, 0.7699, 0.3081], [0.1082, 0.9194, 0.667], [0.3, 0.3238, 0.0342]], [[0.3912, 0.7829, 0.0464], [0.6117, 0.0528, 0.0518], [0.759, 0.2127, 0.1081]]], [[[0.6599, 0.8934, 0.0284], [0.0544, 0.4725, 0.4451], [0.882, 0.175, 0.2393]], [[0.5087, 0.7897, 0.0162], [0.6637, 0.5352, 0.8726], [0.8049, 0.9232, 0.8431]], [[0.7092, 0.204, 0.471], [0.8054, 0.931, 0.6379], [0.7394, 0.1761, 0.972]]]]])
print (np.array2string(model.predict([in0Add36105,in1Add36105,in0Con59913,in0Sof93939,in0Con96853,in0Sub95705,in1Sub95705],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Add32634.png')

LAdd36105 = add_layer([[[[[[0.2292, 0.8371]], [[0.9034, 0.5926]]]]], [[[[[0.4458, 0.1669]], [[0.4352, 0.0758]]]]]], Add36105), 
LGlo50609 = global_average_pooling3D_layer(Add36105, Glo50609), 
LRes47949 = reshape_layer(Glo50609, [2, 1], Res47949), 
LCon59913 = concatenate_layer([Res47949,[[[0.0733, 0.928], [0.4041, 0.2901]]]], 2, Con59913), 
LSof93939 = softmax_layer([[[0.7774, 0.8656], [0.4559, 0.3319]]], 1, Sof93939), 
LCon96853 = concatenate_layer([Sof93939,[[[0.0165, 0.8484, 0.0143, 0.5552, 0.8307, 0.8714, 0.6115, 0.3662, 0.852, 0.4394, 0.2885, 0.779, 0.4097, 0.2005, 0.985, 0.0633, 0.0998, 0.1225, 0.3027, 0.5557, 0.3991, 0.2762, 0.4888, 0.9092, 0.1178], [0.7951, 0.989, 0.512, 0.9205, 0.04, 0.5235, 0.285, 0.0348, 0.1127, 0.5464, 0.822, 0.4444, 0.5154, 0.6344, 0.6308, 0.3111, 0.9301, 0.8247, 0.0523, 0.111, 0.8057, 0.1704, 0.2874, 0.9842, 0.6842]]]], 2, Con96853), 
LSub95705 = subtract_layer([[[[[0.523, 0.5562, 0.2635], [0.3583, 0.4864, 0.3623], [0.5061, 0.0856, 0.4163]], [[0.7373, 0.0546, 0.7344], [0.6042, 0.165, 0.0603], [0.4445, 0.9608, 0.4705]], [[0.4735, 0.4975, 0.4645], [0.3743, 0.8271, 0.4303], [0.6102, 0.2262, 0.2734]]], [[[0.215, 0.3723, 0.5608], [0.7036, 0.4674, 0.2394], [0.234, 0.276, 0.3402]], [[0.0801, 0.4175, 0.833], [0.3518, 0.9542, 0.6574], [0.4958, 0.911, 0.4974]], [[0.5337, 0.1914, 0.7062], [0.1754, 0.1984, 0.99], [0.4455, 0.5295, 0.2162]]], [[[0.9077, 0.6586, 0.5175], [0.6795, 0.2645, 0.4005], [0.1891, 0.5336, 0.7779]], [[0.7332, 0.2325, 0.4059], [0.3212, 0.8048, 0.376], [0.0088, 0.6768, 0.1923]], [[0.2365, 0.3581, 0.6754], [0.9312, 0.9692, 0.6365], [0.8276, 0.3158, 0.9906]]]]], [[[[[0.5156, 0.9274, 0.1193], [0.1255, 0.151, 0.1332], [0.3594, 0.7539, 0.8622]], [[0.7193, 0.1141, 0.9297], [0.7197, 0.0289, 0.1765], [0.979, 0.8748, 0.1597]], [[0.5329, 0.7909, 0.4889], [0.5624, 0.7449, 0.87], [0.5449, 0.0479, 0.3227]]], [[[0.2286, 0.6571, 0.6575], [0.0851, 0.3714, 0.235], [0.4798, 0.3237, 0.9446]], [[0.0016, 0.7699, 0.3081], [0.1082, 0.9194, 0.667], [0.3, 0.3238, 0.0342]], [[0.3912, 0.7829, 0.0464], [0.6117, 0.0528, 0.0518], [0.759, 0.2127, 0.1081]]], [[[0.6599, 0.8934, 0.0284], [0.0544, 0.4725, 0.4451], [0.882, 0.175, 0.2393]], [[0.5087, 0.7897, 0.0162], [0.6637, 0.5352, 0.8726], [0.8049, 0.9232, 0.8431]], [[0.7092, 0.204, 0.471], [0.8054, 0.931, 0.6379], [0.7394, 0.1761, 0.972]]]]], Sub95705), 
LRes97374 = reshape_layer(Sub95705, [3, 3, 9], Res97374), 
LRes17763 = reshape_layer(Res97374, [3, 27], Res17763), 
LDot18143 = dot_layer(Con96853,Res17763, 2, 2, Dot18143), 
LAdd32634 = add_layer([Con59913,Dot18143], Add32634), 
exec_layers([LAdd36105,LGlo50609,LRes47949,LCon59913,LSof93939,LCon96853,LSub95705,LRes97374,LRes17763,LDot18143,LAdd32634],["Add36105","Glo50609","Res47949","Con59913","Sof93939","Con96853","Sub95705","Res97374","Res17763","Dot18143","Add32634"],Add32634,"Add32634")

Actual (Unparsed): [[[0.2140158, 0.8608770, 1.0341587], [0.3956957, 1.9770061, 0.2760527]]]

Expected (Unparsed): [[[0.21401582382062612,0.860877004018758,1.034158813118638],[0.395695636179374,1.9770060859812415,0.276052786881362]]]

Actual:   [[[0.2141, 0.8609, 1.0342], [0.3957, 1.9771, 0.2761]]]

Expected: [[[0.2141, 0.8609, 1.0342], [0.3957, 1.9771, 0.2761]]]