import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Sof67850 = tf.keras.layers.Input(shape=([2, 1]))
in0Min53352 = tf.keras.layers.Input(shape=([2, 1]))
in1Min53352 = tf.keras.layers.Input(shape=([2, 1]))

Sof67850 = keras.layers.Softmax(axis=1, name = 'Sof67850', input_shape=(2, 1))(in0Sof67850)
Min53352 = keras.layers.Minimum(name = 'Min53352', )([in0Min53352,in1Min53352])
Max18222 = keras.layers.Maximum(name = 'Max18222', )([Sof67850,Min53352])
Bat72006 = keras.layers.BatchNormalization(axis=2, epsilon=0.3792303398646286,  name = 'Bat72006', )(Max18222)
model = tf.keras.models.Model(inputs=[in0Sof67850,in0Min53352,in1Min53352], outputs=Bat72006)
w = model.get_layer('Bat72006').get_weights() 
w[0] = np.array([0.4669])
w[1] = np.array([0.5337])
w[2] = np.array([0.2976])
w[3] = np.array([0.7844])
model.get_layer('Bat72006').set_weights(w) 
in0Sof67850 = tf.constant([[[0.6514], [0.6035]]])
in0Min53352 = tf.constant([[[0.2412], [0.6194]]])
in1Min53352 = tf.constant([[[0.1395], [0.0809]]])
print (np.array2string(model.predict([in0Sof67850,in0Min53352,in1Min53352],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Bat72006.png')

LSof67850 = softmax_layer([[[0.6514], [0.6035]]], 1, Sof67850), 
LMin53352 = minimum_layer([[[[0.2412], [0.6194]]], [[[0.1395], [0.0809]]]], Min53352), 
LMax18222 = maximum_layer([Sof67850,Min53352], Max18222), 
LBat72006 = batch_normalization_layer(Max18222, 2, 0.3792303398646286, [0.4669], [0.5337], [0.2976], [0.7844], Bat72006), 
exec_layers([LSof67850,LMin53352,LMax18222,LBat72006],["Sof67850","Min53352","Max18222","Bat72006"],Bat72006,"Bat72006")

Actual (Unparsed): [[[0.6264867], [0.6161225]]]

Expected (Unparsed): [[[0.6264867270515252],[0.6161224539753145]]]

Actual:   [[[0.6265], [0.6162]]]

Expected: [[[0.6265], [0.6162]]]