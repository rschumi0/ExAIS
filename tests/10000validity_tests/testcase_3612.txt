import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Add89524 = tf.keras.layers.Input(shape=([2, 2, 1]))
in1Add89524 = tf.keras.layers.Input(shape=([2, 2, 1]))

Add89524 = keras.layers.Add(name = 'Add89524', )([in0Add89524,in1Add89524])
Res76976 = keras.layers.Reshape((2, 2, 1, 1), name = 'Res76976', )(Add89524)
Con43277 = keras.layers.Conv3DTranspose(3, (2, 1, 1),strides=(1, 1, 1), padding='valid', name = 'Con43277', )(Res76976)
model = tf.keras.models.Model(inputs=[in0Add89524,in1Add89524], outputs=Con43277)
w = model.get_layer('Con43277').get_weights() 
w[0] = np.array([[[[[0.0447], [0.9725], [0.336]]]], [[[[0.3935], [0.3709], [0.99]]]]])
w[1] = np.array([0, 0, 0])
model.get_layer('Con43277').set_weights(w) 
in0Add89524 = tf.constant([[[[0.8781], [0.8143]], [[0.6812], [0.3358]]]])
in1Add89524 = tf.constant([[[[0.0787], [0.5245]], [[0.5555], [0.741]]]])
print (np.array2string(model.predict([in0Add89524,in1Add89524],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Con43277.png')

LAdd89524 = add_layer([[[[[0.8781], [0.8143]], [[0.6812], [0.3358]]]], [[[[0.0787], [0.5245]], [[0.5555], [0.741]]]]], Add89524), 
LRes76976 = reshape_layer(Add89524, [2, 2, 1, 1], Res76976), 
LCon43277 = conv3D_transpose_layer(Res76976, 2, 1, 1,[[[[[0.0447], [0.9725], [0.336]]]], [[[[0.3935], [0.3709], [0.99]]]]],[0, 0, 0], 1, 1, 1, false, Con43277), 
exec_layers([LAdd89524,LRes76976,LCon43277],["Add89524","Res76976","Con43277"],Con43277,"Con43277")

Actual (Unparsed): [[[[[0.0427690, 0.9304880, 0.3214848]], [[0.0598444, 1.3019830, 0.4498368]]], [[[0.4317813, 1.5575679, 1.3627632]], [[0.5749508, 1.5437489, 1.6872168]]], [[[0.4866414, 0.4586920, 1.2243330]], [[0.4237208, 0.3993851, 1.0660320]]]]]

Expected (Unparsed): [[[[[0.042768959999999995,0.930488,0.3214848]],[[0.05984435999999999,1.3019830000000001,0.44983680000000004]]],[[[0.43178129000000004,1.55756787,1.3627631999999998]],[[0.57495076,1.54374892,1.6872168]]],[[[0.48664145,0.45869203,1.224333]],[[0.4237208,0.39938512,1.0660319999999999]]]]]

Actual:   [[[[[0.0428, 0.9305, 0.3215]], [[0.0599, 1.302, 0.4499]]], [[[0.4318, 1.5576, 1.3628]], [[0.575, 1.5438, 1.6873]]], [[[0.4867, 0.4587, 1.2244]], [[0.4238, 0.3994, 1.0661]]]]]

Expected: [[[[[0.0428, 0.9305, 0.3215]], [[0.0599, 1.302, 0.4499]]], [[[0.4318, 1.5576, 1.3628]], [[0.575, 1.5438, 1.6873]]], [[[0.4867, 0.4587, 1.2244]], [[0.4238, 0.3994, 1.0661]]]]]