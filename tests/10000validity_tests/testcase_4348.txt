import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0ELU74878 = tf.keras.layers.Input(shape=([1, 2, 2]))
in0Ave68677 = tf.keras.layers.Input(shape=([1, 1, 2]))
in1Ave68677 = tf.keras.layers.Input(shape=([1, 1, 2]))
in0Dot46653 = tf.keras.layers.Input(shape=([2, 2]))
in1Dot46653 = tf.keras.layers.Input(shape=([2, 2]))
in0Con98820 = tf.keras.layers.Input(shape=([3]))

ELU74878 = keras.layers.ELU(alpha=-5.823640007475019, name = 'ELU74878', input_shape=(1, 2, 2))(in0ELU74878)
Res9208 = keras.layers.Reshape((1, 4), name = 'Res9208', )(ELU74878)
Fla47622 = keras.layers.Flatten(name = 'Fla47622', )(Res9208)
Ave68677 = keras.layers.Average(name = 'Ave68677', )([in0Ave68677,in1Ave68677])
Res69144 = keras.layers.Reshape((1, 2), name = 'Res69144', )(Ave68677)
Zer33201 = keras.layers.ZeroPadding1D(padding=((1, 0)), name = 'Zer33201', )(Res69144)
Dot46653 = keras.layers.Dot(axes=(2, 1), name = 'Dot46653', )([in0Dot46653,in1Dot46653])
Dot32591 = keras.layers.Dot(axes=(2, 2), name = 'Dot32591', )([Zer33201,Dot46653])
Res89376 = keras.layers.Reshape((2, 2, 1), name = 'Res89376', )(Dot32591)
Res84462 = keras.layers.Reshape((2, 2, 1, 1), name = 'Res84462', )(Res89376)
Glo60100 = keras.layers.GlobalAveragePooling3D(name = 'Glo60100', )(Res84462)
Con98820 = keras.layers.Concatenate(axis=1, name = 'Con98820', )([Glo60100,in0Con98820])
Mul63554 = keras.layers.Multiply(name = 'Mul63554', )([Fla47622,Con98820])
model = tf.keras.models.Model(inputs=[in0ELU74878,in0Ave68677,in1Ave68677,in0Dot46653,in1Dot46653,in0Con98820], outputs=Mul63554)
in0ELU74878 = tf.constant([[[[0.8496, 0.1386], [0.1681, 0.3681]]]])
in0Ave68677 = tf.constant([[[[0.7445, 0.3928]]]])
in1Ave68677 = tf.constant([[[[0.9557, 0.5227]]]])
in0Dot46653 = tf.constant([[[0.8981, 0.8619], [0.9007, 0.2113]]])
in1Dot46653 = tf.constant([[[0.495, 0.0318], [0.255, 0.1807]]])
in0Con98820 = tf.constant([[0.0513, 0.3777, 0.4749]])
print (np.array2string(model.predict([in0ELU74878,in0Ave68677,in1Ave68677,in0Dot46653,in1Dot46653,in0Con98820],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Mul63554.png')

LELU74878 = elu_layer([[[[0.8496, 0.1386], [0.1681, 0.3681]]]], -5.823640007475019, ELU74878), 
LRes9208 = reshape_layer(ELU74878, [1, 4], Res9208), 
LFla47622 = flatten_layer(Res9208, Fla47622), 
LAve68677 = average_layer([[[[[0.7445, 0.3928]]]], [[[[0.9557, 0.5227]]]]], Ave68677), 
LRes69144 = reshape_layer(Ave68677, [1, 2], Res69144), 
LZer33201 = zero_padding1D_layer(Res69144, 1, 0, Zer33201), 
LDot46653 = dot_layer([[[0.8981, 0.8619], [0.9007, 0.2113]]], [[[0.495, 0.0318], [0.255, 0.1807]]], 2, 1, Dot46653), 
LDot32591 = dot_layer(Zer33201,Dot46653, 2, 2, Dot32591), 
LRes89376 = reshape_layer(Dot32591, [2, 2, 1], Res89376), 
LRes84462 = reshape_layer(Res89376, [2, 2, 1, 1], Res84462), 
LGlo60100 = global_average_pooling3D_layer(Res84462, Glo60100), 
LCon98820 = concatenate_layer([Glo60100,[[0.0513, 0.3777, 0.4749]]], 1, Con98820), 
LMul63554 = multiply_layer([Fla47622,Con98820], Mul63554), 
exec_layers([LELU74878,LRes9208,LFla47622,LAve68677,LRes69144,LZer33201,LDot46653,LDot32591,LRes89376,LRes84462,LGlo60100,LCon98820,LMul63554],["ELU74878","Res9208","Fla47622","Ave68677","Res69144","Zer33201","Dot46653","Dot32591","Res89376","Res84462","Glo60100","Con98820","Mul63554"],Mul63554,"Mul63554")

Actual (Unparsed): [[0.2346026, 0.0071102, 0.0634914, 0.1748107]]

Expected (Unparsed): [[0.23460258481426802,0.00711018,0.06349136999999999,0.17481069]]

Actual:   [[0.2347, 0.0072, 0.0635, 0.1749]]

Expected: [[0.2347, 0.0072, 0.0635, 0.1749]]