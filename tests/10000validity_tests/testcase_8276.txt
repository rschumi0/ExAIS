import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Sim85345 = tf.keras.layers.Input(shape=([1, 1]))
in0Mul9120 = tf.keras.layers.Input(shape=([2, 2, 2, 2]))
in1Mul9120 = tf.keras.layers.Input(shape=([2, 2, 2, 2]))
in0Min6481 = tf.keras.layers.Input(shape=([1, 2, 1, 2]))
in1Min6481 = tf.keras.layers.Input(shape=([1, 2, 1, 2]))
in0Con14038 = tf.keras.layers.Input(shape=([2, 2, 6]))

Sim85345 = keras.layers.SimpleRNN(1,name = 'Sim85345', )(in0Sim85345)
Res81556 = keras.layers.Reshape((1, 1), name = 'Res81556', )(Sim85345)
Res70273 = keras.layers.Reshape((1, 1, 1), name = 'Res70273', )(Res81556)
Glo91565 = keras.layers.GlobalMaxPool2D(name = 'Glo91565', )(Res70273)
Res85981 = keras.layers.Reshape((1, 1), name = 'Res85981', )(Glo91565)
Res91473 = keras.layers.Reshape((1, 1, 1), name = 'Res91473', )(Res85981)
Res7242 = keras.layers.Reshape((1, 1, 1, 1), name = 'Res7242', )(Res91473)
Con32842 = keras.layers.Conv3DTranspose(3, (1, 1, 1),strides=(1, 1, 3), padding='valid', name = 'Con32842', )(Res7242)
Res67451 = keras.layers.Reshape((1, 1, 9), name = 'Res67451', )(Con32842)
Zer41329 = keras.layers.ZeroPadding2D(padding=((1, 0), (1, 0)), name = 'Zer41329', )(Res67451)
Mul9120 = keras.layers.Multiply(name = 'Mul9120', )([in0Mul9120,in1Mul9120])
Min6481 = keras.layers.Minimum(name = 'Min6481', )([in0Min6481,in1Min6481])
Zer33952 = keras.layers.ZeroPadding3D(padding=((1, 0), (0, 0), (1, 0)), name = 'Zer33952', )(Min6481)
Min45980 = keras.layers.Minimum(name = 'Min45980', )([Mul9120,Zer33952])
Res63097 = keras.layers.Reshape((2, 2, 4), name = 'Res63097', )(Min45980)
Con15404 = keras.layers.Conv2D(3, (2, 2),strides=(1, 1), padding='same', dilation_rate=(1, 1), name = 'Con15404', )(Res63097)
Con14038 = keras.layers.Concatenate(axis=3, name = 'Con14038', )([Con15404,in0Con14038])
Add49940 = keras.layers.Add(name = 'Add49940', )([Zer41329,Con14038])
model = tf.keras.models.Model(inputs=[in0Sim85345,in0Mul9120,in1Mul9120,in0Min6481,in1Min6481,in0Con14038], outputs=Add49940)
w = model.get_layer('Sim85345').get_weights() 
w[0] = np.array([[3]])
w[1] = np.array([[5]])
w[2] = np.array([9])
model.get_layer('Sim85345').set_weights(w) 
w = model.get_layer('Con32842').get_weights() 
w[0] = np.array([[[[[0.6741], [0.5178], [0.0592]]]]])
w[1] = np.array([0, 0, 0])
model.get_layer('Con32842').set_weights(w) 
w = model.get_layer('Con15404').get_weights() 
w[0] = np.array([[[[0.3607, 0.7374, 0.4854], [0.5882, 0.8934, 0.252], [0.0661, 0.0748, 0.4375], [0.9308, 0.9877, 0.8451]], [[0.2939, 0.0225, 0.5945], [0.2359, 0.5863, 0.9971], [0.6265, 0.8754, 0.1046], [0.8499, 0.6653, 0.2421]]], [[[0.9422, 0.8353, 0.6083], [0.4658, 0.0024, 0.0835], [0.8541, 0.9041, 0.7679], [0.3763, 0.0295, 0.8067]], [[0.9481, 0.3444, 0.637], [0.8129, 0.753, 0.4806], [0.9637, 0.1199, 0.5745], [0.6611, 0.9526, 0.9062]]]])
w[1] = np.array([0, 0, 0])
model.get_layer('Con15404').set_weights(w) 
in0Sim85345 = tf.constant([[[5]]])
in0Mul9120 = tf.constant([[[[[0.4629, 0.5467], [0.0443, 0.1375]], [[0.5116, 0.8058], [0.7881, 0.6633]]], [[[0.0203, 0.2586], [0.5515, 0.5701]], [[0.3438, 0.9941], [0.894, 0.1828]]]]])
in1Mul9120 = tf.constant([[[[[0.5128, 0.3039], [0.7856, 0.9763]], [[0.0306, 0.6368], [0.4774, 0.7914]]], [[[0.663, 0.6433], [0.5649, 0.1242]], [[0.2657, 0.8066], [0.366, 0.4887]]]]])
in0Min6481 = tf.constant([[[[[0.9842, 0.1113]], [[0.4185, 0.8242]]]]])
in1Min6481 = tf.constant([[[[[0.4818, 0.4357]], [[0.1119, 0.6691]]]]])
in0Con14038 = tf.constant([[[[0.8489, 0.5901, 0.7059, 0.5748, 0.9371, 0.2399], [0.3416, 0.6845, 0.7391, 0.573, 0.3709, 0.9906]], [[0.1804, 0.8477, 0.7475, 0.0047, 0.0863, 0.4789], [0.7965, 0.8216, 0.6292, 0.2267, 0.8735, 0.9442]]]])
print (np.array2string(model.predict([in0Sim85345,in0Mul9120,in1Mul9120,in0Min6481,in1Min6481,in0Con14038],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Add49940.png')

LSim85345 = simple_rnn_layer([[[5]]],[[3]],[[5]],[9], Sim85345), 
LRes81556 = reshape_layer(Sim85345, [1, 1], Res81556), 
LRes70273 = reshape_layer(Res81556, [1, 1, 1], Res70273), 
LGlo91565 = global_max_pool2D_layer(Res70273, Glo91565), 
LRes85981 = reshape_layer(Glo91565, [1, 1], Res85981), 
LRes91473 = reshape_layer(Res85981, [1, 1, 1], Res91473), 
LRes7242 = reshape_layer(Res91473, [1, 1, 1, 1], Res7242), 
LCon32842 = conv3D_transpose_layer(Res7242, 1, 1, 1,[[[[[0.6741], [0.5178], [0.0592]]]]],[0, 0, 0], 1, 1, 3, false, Con32842), 
LRes67451 = reshape_layer(Con32842, [1, 1, 9], Res67451), 
LZer41329 = zero_padding2D_layer(Res67451, 1, 0, 1, 0, Zer41329), 
LMul9120 = multiply_layer([[[[[[0.4629, 0.5467], [0.0443, 0.1375]], [[0.5116, 0.8058], [0.7881, 0.6633]]], [[[0.0203, 0.2586], [0.5515, 0.5701]], [[0.3438, 0.9941], [0.894, 0.1828]]]]], [[[[[0.5128, 0.3039], [0.7856, 0.9763]], [[0.0306, 0.6368], [0.4774, 0.7914]]], [[[0.663, 0.6433], [0.5649, 0.1242]], [[0.2657, 0.8066], [0.366, 0.4887]]]]]], Mul9120), 
LMin6481 = minimum_layer([[[[[[0.9842, 0.1113]], [[0.4185, 0.8242]]]]], [[[[[0.4818, 0.4357]], [[0.1119, 0.6691]]]]]], Min6481), 
LZer33952 = zero_padding3D_layer(Min6481, 1, 0, 0, 0, 1, 0, Zer33952), 
LMin45980 = minimum_layer([Mul9120,Zer33952], Min45980), 
LRes63097 = reshape_layer(Min45980, [2, 2, 4], Res63097), 
LCon15404 = conv2D_layer(Res63097, 2, 2,[[[[0.3607, 0.7374, 0.4854], [0.5882, 0.8934, 0.252], [0.0661, 0.0748, 0.4375], [0.9308, 0.9877, 0.8451]], [[0.2939, 0.0225, 0.5945], [0.2359, 0.5863, 0.9971], [0.6265, 0.8754, 0.1046], [0.8499, 0.6653, 0.2421]]], [[[0.9422, 0.8353, 0.6083], [0.4658, 0.0024, 0.0835], [0.8541, 0.9041, 0.7679], [0.3763, 0.0295, 0.8067]], [[0.9481, 0.3444, 0.637], [0.8129, 0.753, 0.4806], [0.9637, 0.1199, 0.5745], [0.6611, 0.9526, 0.9062]]]],[0, 0, 0], 1, 1, true, 1, 1, Con15404), 
LCon14038 = concatenate_layer([Con15404,[[[[0.8489, 0.5901, 0.7059, 0.5748, 0.9371, 0.2399], [0.3416, 0.6845, 0.7391, 0.573, 0.3709, 0.9906]], [[0.1804, 0.8477, 0.7475, 0.0047, 0.0863, 0.4789], [0.7965, 0.8216, 0.6292, 0.2267, 0.8735, 0.9442]]]]], 3, Con14038), 
LAdd49940 = add_layer([Zer41329,Con14038], Add49940), 
exec_layers([LSim85345,LRes81556,LRes70273,LGlo91565,LRes85981,LRes91473,LRes7242,LCon32842,LRes67451,LZer41329,LMul9120,LMin6481,LZer33952,LMin45980,LRes63097,LCon15404,LCon14038,LAdd49940],["Sim85345","Res81556","Res70273","Glo91565","Res85981","Res91473","Res7242","Con32842","Res67451","Zer41329","Mul9120","Min6481","Zer33952","Min45980","Res63097","Con15404","Con14038","Add49940"],Add49940,"Add49940")

Actual (Unparsed): [[[[0.4596298, 0.3822709, 0.4415943, 0.8489000, 0.5901000, 0.7059000, 0.5748000, 0.9371000, 0.2399000], [0.1291903, 0.1038042, 0.1579940, 0.3416000, 0.6845000, 0.7391000, 0.5730000, 0.3709000, 0.9906000]], [[0.2325302, 0.2506303, 0.2294709, 0.1804000, 0.8477000, 0.7475000, 0.0047000, 0.0863000, 0.4789000], [0.7646490, 0.6144057, 0.1836527, 0.7965000, 0.8216000, 0.6292000, 0.2267000, 0.8735000, 0.9442000]]]]

Expected (Unparsed): [[[[0.45962975237699993,0.38227094936100003,0.44159425661100005,0.8489,0.5901,0.7059,0.5748,0.9371,0.2399],[0.129190309668,0.10380415361999999,0.157994038212,0.3416,0.6845,0.7391,0.573,0.3709,0.9906]],[[0.232530187635,0.250630278522,0.229470872223,0.1804,0.8477,0.7475,0.0047,0.0863,0.4789],[0.7646490122880001,0.614405667372,0.183652717636,0.7965,0.8216,0.6292,0.2267,0.8735,0.9442]]]]

Actual:   [[[[0.4597, 0.3823, 0.4416, 0.8489, 0.5901, 0.7059, 0.5748, 0.9371, 0.2399], [0.1292, 0.1039, 0.158, 0.3416, 0.6845, 0.7391, 0.573, 0.3709, 0.9906]], [[0.2326, 0.2507, 0.2295, 0.1804, 0.8477, 0.7475, 0.0047, 0.0863, 0.4789], [0.7647, 0.6145, 0.1837, 0.7965, 0.8216, 0.6292, 0.2267, 0.8735, 0.9442]]]]

Expected: [[[[0.4597, 0.3823, 0.4416, 0.8489, 0.5901, 0.7059, 0.5748, 0.9371, 0.2399], [0.1292, 0.1039, 0.158, 0.3416, 0.6845, 0.7391, 0.573, 0.3709, 0.9906]], [[0.2326, 0.2507, 0.2295, 0.1804, 0.8477, 0.7475, 0.0047, 0.0863, 0.4789], [0.7647, 0.6145, 0.1837, 0.7965, 0.8216, 0.6292, 0.2267, 0.8735, 0.9442]]]]