import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Dot47939 = tf.keras.layers.Input(shape=([2, 2]))
in1Dot47939 = tf.keras.layers.Input(shape=([2, 2]))

Dot47939 = keras.layers.Dot(axes=(1, 2), name = 'Dot47939', )([in0Dot47939,in1Dot47939])
Zer94627 = keras.layers.ZeroPadding1D(padding=((1, 1)), name = 'Zer94627', )(Dot47939)
Zer65242 = keras.layers.ZeroPadding1D(padding=((1, 1)), name = 'Zer65242', )(Zer94627)
model = tf.keras.models.Model(inputs=[in0Dot47939,in1Dot47939], outputs=Zer65242)
in0Dot47939 = tf.constant([[[0.2649, 0.8085], [0.1307, 0.5872]]])
in1Dot47939 = tf.constant([[[0.6344, 0.6597], [0.5859, 0.6803]]])
print (np.array2string(model.predict([in0Dot47939,in1Dot47939],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Zer65242.png')

LDot47939 = dot_layer([[[0.2649, 0.8085], [0.1307, 0.5872]]], [[[0.6344, 0.6597], [0.5859, 0.6803]]], 1, 2, Dot47939), 
LZer94627 = zero_padding1D_layer(Dot47939, 1, 1, Zer94627), 
LZer65242 = zero_padding1D_layer(Zer94627, 1, 1, Zer65242), 
exec_layers([LDot47939,LZer94627,LZer65242],["Dot47939","Zer94627","Zer65242"],Zer65242,"Zer65242")

Actual (Unparsed): [[[0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.2542754, 0.2441201], [0.9002882, 0.8731723], [0.0000000, 0.0000000], [0.0000000, 0.0000000]]]

Expected (Unparsed): [[[0,0],[0,0],[0.25427535,0.24412012],[0.90028824,0.87317231],[0,0],[0,0]]]

Actual:   [[[0, 0], [0, 0], [0.2543, 0.2442], [0.9003, 0.8732], [0, 0], [0, 0]]]

Expected: [[[0, 0], [0, 0], [0.2543, 0.2442], [0.9003, 0.8732], [0, 0], [0, 0]]]