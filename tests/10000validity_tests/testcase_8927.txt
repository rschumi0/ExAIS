import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Zer2133 = tf.keras.layers.Input(shape=([1, 4]))
in0Con47878 = tf.keras.layers.Input(shape=([1, 1]))
in0Lay81067 = tf.keras.layers.Input(shape=([4, 2]))
in0Con76551 = tf.keras.layers.Input(shape=([4, 1]))
in0Con91026 = tf.keras.layers.Input(shape=([11]))

Zer2133 = keras.layers.ZeroPadding1D(padding=((1, 1)), name = 'Zer2133', )(in0Zer2133)
Fla4937 = keras.layers.Flatten(name = 'Fla4937', )(Zer2133)
Con47878 = keras.layers.Conv1D(3, (1),strides=(1), padding='valid', dilation_rate=(1), name = 'Con47878', )(in0Con47878)
Zer88612 = keras.layers.ZeroPadding1D(padding=((3, 0)), name = 'Zer88612', )(Con47878)
Lay81067 = keras.layers.LayerNormalization(axis=2, epsilon=2.2518245463821236, name = 'Lay81067', )(in0Lay81067)
Con76551 = keras.layers.Concatenate(axis=2, name = 'Con76551', )([Lay81067,in0Con76551])
Add86784 = keras.layers.Add(name = 'Add86784', )([Zer88612,Con76551])
Sim81564 = keras.layers.SimpleRNN(1,name = 'Sim81564', )(Add86784)
Con91026 = keras.layers.Concatenate(axis=1, name = 'Con91026', )([Sim81564,in0Con91026])
Mul55259 = keras.layers.Multiply(name = 'Mul55259', )([Fla4937,Con91026])
model = tf.keras.models.Model(inputs=[in0Zer2133,in0Con47878,in0Lay81067,in0Con76551,in0Con91026], outputs=Mul55259)
w = model.get_layer('Con47878').get_weights() 
w[0] = np.array([[[0.33, 0.4831, 0.2593]]])
w[1] = np.array([0, 0, 0])
model.get_layer('Con47878').set_weights(w) 
w = model.get_layer('Sim81564').get_weights() 
w[0] = np.array([[5], [8], [5]])
w[1] = np.array([[6]])
w[2] = np.array([4])
model.get_layer('Sim81564').set_weights(w) 
in0Zer2133 = tf.constant([[[1.7053, 1.374, 1.2229, 1.2981]]])
in0Con47878 = tf.constant([[[0.8518]]])
in0Lay81067 = tf.constant([[[1.582, 1.4382], [1.9159, 1.5804], [1.7949, 1.5437], [1.5882, 1.5473]]])
in0Con76551 = tf.constant([[[0.4507], [0.7809], [0.437], [0.3426]]])
in0Con91026 = tf.constant([[0.9437, 0.3661, 0.7816, 0.6581, 0.129, 0.2819, 0.0236, 0.2343, 0.1113, 0.7062, 0.0395]])
print (np.array2string(model.predict([in0Zer2133,in0Con47878,in0Lay81067,in0Con76551,in0Con91026],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Mul55259.png')

LZer2133 = zero_padding1D_layer([[[1.7053, 1.374, 1.2229, 1.2981]]], 1, 1, Zer2133), 
LFla4937 = flatten_layer(Zer2133, Fla4937), 
LCon47878 = conv1D_layer([[[0.8518]]], 1,[[[0.33, 0.4831, 0.2593]]],[0, 0, 0], 1, false, 1, Con47878), 
LZer88612 = zero_padding1D_layer(Con47878, 3, 0, Zer88612), 
LLay81067 = layer_normalization_layer([[[1.582, 1.4382], [1.9159, 1.5804], [1.7949, 1.5437], [1.5882, 1.5473]]], 2, 2.2518245463821236, Lay81067), 
LCon76551 = concatenate_layer([Lay81067,[[[0.4507], [0.7809], [0.437], [0.3426]]]], 2, Con76551), 
LAdd86784 = add_layer([Zer88612,Con76551], Add86784), 
LSim81564 = simple_rnn_layer(Add86784,[[5], [8], [5]],[[6]],[4], Sim81564), 
LCon91026 = concatenate_layer([Sim81564,[[0.9437, 0.3661, 0.7816, 0.6581, 0.129, 0.2819, 0.0236, 0.2343, 0.1113, 0.7062, 0.0395]]], 1, Con91026), 
LMul55259 = multiply_layer([Fla4937,Con91026], Mul55259), 
exec_layers([LZer2133,LFla4937,LCon47878,LZer88612,LLay81067,LCon76551,LAdd86784,LSim81564,LCon91026,LMul55259],["Zer2133","Fla4937","Con47878","Zer88612","Lay81067","Con76551","Add86784","Sim81564","Con91026","Mul55259"],Mul55259,"Mul55259")

Actual (Unparsed): [[0.0000000, 0.0000000, 0.0000000, 0.0000000, 1.1222579, 0.1772460, 0.3447355, 0.0306352, 0.0000000, 0.0000000, 0.0000000, 0.0000000]]

Expected (Unparsed): [[0.0,0.0,0.0,0.0,1.12225793,0.17724600000000001,0.34473551,0.03063516,0.0,0.0,0.0,0.0]]

Actual:   [[0, 0, 0, 0, 1.1223, 0.1773, 0.3448, 0.0307, 0, 0, 0, 0]]

Expected: [[0, 0, 0, 0, 1.1223, 0.1773, 0.3448, 0.0307, 0, 0, 0, 0]]