import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Sub80558 = tf.keras.layers.Input(shape=([3]))
in1Sub80558 = tf.keras.layers.Input(shape=([3]))

Sub80558 = keras.layers.Subtract(name = 'Sub80558', )([in0Sub80558,in1Sub80558])
Thr34490 = keras.layers.ThresholdedReLU(theta=0.6931885646065775, name = 'Thr34490', )(Sub80558)
model = tf.keras.models.Model(inputs=[in0Sub80558,in1Sub80558], outputs=Thr34490)
in0Sub80558 = tf.constant([[0.6102, 0.9031, 0.1574]])
in1Sub80558 = tf.constant([[0.8984, 0.5608, 0.4018]])
print (np.array2string(model.predict([in0Sub80558,in1Sub80558],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Thr34490.png')

LSub80558 = subtract_layer([[0.6102, 0.9031, 0.1574]], [[0.8984, 0.5608, 0.4018]], Sub80558), 
LThr34490 = thresholded_relu_layer(Sub80558, 0.6931885646065775, Thr34490), 
exec_layers([LSub80558,LThr34490],["Sub80558","Thr34490"],Thr34490,"Thr34490")

Actual (Unparsed): [[-0.0000000, 0.0000000, -0.0000000]]

Expected (Unparsed): [[0,0,0]]

Actual:   [[-0, 0, -0]]

Expected: [[0, 0, 0]]