import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Min69858 = tf.keras.layers.Input(shape=([2, 1, 2]))
in1Min69858 = tf.keras.layers.Input(shape=([2, 1, 2]))

Min69858 = keras.layers.Minimum(name = 'Min69858', )([in0Min69858,in1Min69858])
Fla84866 = keras.layers.Flatten(name = 'Fla84866', )(Min69858)
Res70465 = keras.layers.Reshape((4, 1), name = 'Res70465', )(Fla84866)
LST31518 = keras.layers.LSTM(1,recurrent_activation='sigmoid', name = 'LST31518', )(Res70465)
model = tf.keras.models.Model(inputs=[in0Min69858,in1Min69858], outputs=LST31518)
w = model.get_layer('LST31518').get_weights() 
w[0] = np.array([[9, 3, 7, 4]])
w[1] = np.array([[2, 7, 10, 1]])
w[2] = np.array([1, 7, 8, 8])
model.get_layer('LST31518').set_weights(w) 
in0Min69858 = tf.constant([[[[0.4604, 0.4246]], [[0.8542, 0.0928]]]])
in1Min69858 = tf.constant([[[[0.4457, 0.073]], [[0.7404, 0.366]]]])
print (np.array2string(model.predict([in0Min69858,in1Min69858],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='LST31518.png')

LMin69858 = minimum_layer([[[[[0.4604, 0.4246]], [[0.8542, 0.0928]]]], [[[[0.4457, 0.073]], [[0.7404, 0.366]]]]], Min69858), 
LFla84866 = flatten_layer(Min69858, Fla84866), 
LRes70465 = reshape_layer(Fla84866, [4, 1], Res70465), 
LLST31518 = lstm_layer(Res70465,[[9, 3, 7, 4]],[[2, 7, 10, 1]],[1, 7, 8, 8], LST31518), 
exec_layers([LMin69858,LFla84866,LRes70465,LLST31518],["Min69858","Fla84866","Res70465","LST31518"],LST31518,"LST31518")

Actual (Unparsed): [[0.9991458]]

Expected (Unparsed): [[0.9991457960886198]]

Actual:   [[0.9992]]

Expected: [[0.9992]]