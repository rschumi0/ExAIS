import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Ave77167 = tf.keras.layers.Input(shape=([1, 2]))
in1Ave77167 = tf.keras.layers.Input(shape=([1, 2]))
in0Add30713 = tf.keras.layers.Input(shape=([2, 2]))
in1Add30713 = tf.keras.layers.Input(shape=([2, 2]))
in0Min40856 = tf.keras.layers.Input(shape=([2, 1, 1]))
in1Min40856 = tf.keras.layers.Input(shape=([2, 1, 1]))
in0Con6744 = tf.keras.layers.Input(shape=([2, 3, 1]))

Ave77167 = keras.layers.Average(name = 'Ave77167', )([in0Ave77167,in1Ave77167])
Res98687 = keras.layers.Reshape((1, 2, 1), name = 'Res98687', )(Ave77167)
Res7756 = keras.layers.Reshape((1, 2, 1, 1), name = 'Res7756', )(Res98687)
Up_47518 = keras.layers.UpSampling3D(size=(1, 1, 2), name = 'Up_47518', )(Res7756)
Res30600 = keras.layers.Reshape((1, 2, 2), name = 'Res30600', )(Up_47518)
Add30713 = keras.layers.Add(name = 'Add30713', )([in0Add30713,in1Add30713])
Res2351 = keras.layers.Reshape((1, 2, 2), name = 'Res2351', )(Add30713)
Sub10614 = keras.layers.Subtract(name = 'Sub10614', )([Res30600,Res2351])
Zer98491 = keras.layers.ZeroPadding2D(padding=((1, 0), (1, 0)), name = 'Zer98491', )(Sub10614)
Min40856 = keras.layers.Minimum(name = 'Min40856', )([in0Min40856,in1Min40856])
Zer73647 = keras.layers.ZeroPadding2D(padding=((0, 0), (2, 0)), name = 'Zer73647', )(Min40856)
Con6744 = keras.layers.Concatenate(axis=3, name = 'Con6744', )([Zer73647,in0Con6744])
Min23170 = keras.layers.Minimum(name = 'Min23170', )([Zer98491,Con6744])
model = tf.keras.models.Model(inputs=[in0Ave77167,in1Ave77167,in0Add30713,in1Add30713,in0Min40856,in1Min40856,in0Con6744], outputs=Min23170)
in0Ave77167 = tf.constant([[[0.8179, 0.9685]]])
in1Ave77167 = tf.constant([[[0.0746, 0.1287]]])
in0Add30713 = tf.constant([[[0.9066, 0.0032], [0.8073, 0.9658]]])
in1Add30713 = tf.constant([[[0.8278, 0.4589], [0.9499, 0.7948]]])
in0Min40856 = tf.constant([[[[0.118]], [[0.402]]]])
in1Min40856 = tf.constant([[[[0.5718]], [[0.7768]]]])
in0Con6744 = tf.constant([[[[0.5427], [0.4934], [0.6366]], [[0.277], [0.4744], [0.167]]]])
print (np.array2string(model.predict([in0Ave77167,in1Ave77167,in0Add30713,in1Add30713,in0Min40856,in1Min40856,in0Con6744],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Min23170.png')

LAve77167 = average_layer([[[[0.8179, 0.9685]]], [[[0.0746, 0.1287]]]], Ave77167), 
LRes98687 = reshape_layer(Ave77167, [1, 2, 1], Res98687), 
LRes7756 = reshape_layer(Res98687, [1, 2, 1, 1], Res7756), 
LUp_47518 = up_sampling3D_layer(Res7756, 1, 1, 2, Up_47518), 
LRes30600 = reshape_layer(Up_47518, [1, 2, 2], Res30600), 
LAdd30713 = add_layer([[[[0.9066, 0.0032], [0.8073, 0.9658]]], [[[0.8278, 0.4589], [0.9499, 0.7948]]]], Add30713), 
LRes2351 = reshape_layer(Add30713, [1, 2, 2], Res2351), 
LSub10614 = subtract_layer(Res30600,Res2351, Sub10614), 
LZer98491 = zero_padding2D_layer(Sub10614, 1, 0, 1, 0, Zer98491), 
LMin40856 = minimum_layer([[[[[0.118]], [[0.402]]]], [[[[0.5718]], [[0.7768]]]]], Min40856), 
LZer73647 = zero_padding2D_layer(Min40856, 0, 0, 2, 0, Zer73647), 
LCon6744 = concatenate_layer([Zer73647,[[[[0.5427], [0.4934], [0.6366]], [[0.277], [0.4744], [0.167]]]]], 3, Con6744), 
LMin23170 = minimum_layer([Zer98491,Con6744], Min23170), 
exec_layers([LAve77167,LRes98687,LRes7756,LUp_47518,LRes30600,LAdd30713,LRes2351,LSub10614,LZer98491,LMin40856,LZer73647,LCon6744,LMin23170],["Ave77167","Res98687","Res7756","Up_47518","Res30600","Add30713","Res2351","Sub10614","Zer98491","Min40856","Zer73647","Con6744","Min23170"],Min23170,"Min23170")

Actual (Unparsed): [[[[0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000]], [[0.0000000, 0.0000000], [-1.2881500, -0.0158500], [-1.2085999, -1.2120000]]]]

Expected (Unparsed): [[[[0,0],[0,0],[0,0]],[[0,0],[-1.28815,-0.015849999999999975],[-1.2086000000000001,-1.212]]]]

Actual:   [[[[0, 0], [0, 0], [0, 0]], [[0, 0], [-1.2881, -0.0158], [-1.2085, -1.212]]]]

Expected: [[[[0, 0], [0, 0], [0, 0]], [[0, 0], [-1.2881, -0.0158], [-1.2086, -1.212]]]]