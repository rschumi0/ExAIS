import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Con80008 = tf.keras.layers.Input(shape=([1, 2]))

Con80008 = keras.layers.Conv1D(2, (1),strides=(1), padding='valid', dilation_rate=(1), name = 'Con80008', )(in0Con80008)
Sof25001 = keras.layers.Softmax(axis=1, name = 'Sof25001', )(Con80008)
Sim33082 = keras.layers.SimpleRNN(3,name = 'Sim33082', )(Sof25001)
model = tf.keras.models.Model(inputs=[in0Con80008], outputs=Sim33082)
w = model.get_layer('Con80008').get_weights() 
w[0] = np.array([[[0.9114, 0.242], [0.3487, 0.4593]]])
w[1] = np.array([0, 0])
model.get_layer('Con80008').set_weights(w) 
w = model.get_layer('Sim33082').get_weights() 
w[0] = np.array([[7, 1, 10], [2, 4, 2]])
w[1] = np.array([[1, 7, 9], [2, 3, 7], [8, 8, 10]])
w[2] = np.array([7, 6, 5])
model.get_layer('Sim33082').set_weights(w) 
in0Con80008 = tf.constant([[[0.1063, 0.9988]]])
print (np.array2string(model.predict([in0Con80008],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Sim33082.png')

LCon80008 = conv1D_layer([[[0.1063, 0.9988]]], 1,[[[0.9114, 0.242], [0.3487, 0.4593]]],[0, 0], 1, false, 1, Con80008), 
LSof25001 = softmax_layer(Con80008, 1, Sof25001), 
LSim33082 = simple_rnn_layer(Sof25001,[[7, 1, 10], [2, 4, 2]],[[1, 7, 9], [2, 3, 7], [8, 8, 10]],[7, 6, 5], Sim33082), 
exec_layers([LCon80008,LSof25001,LSim33082],["Con80008","Sof25001","Sim33082"],Sim33082,"Sim33082")

Actual (Unparsed): [[1.0000000, 1.0000000, 1.0000000]]

Expected (Unparsed): [[0.9999999999999747,0.9999999994421064,0.9999999999999966]]

Actual:   [[1, 1, 1]]

Expected: [[1, 1, 1]]