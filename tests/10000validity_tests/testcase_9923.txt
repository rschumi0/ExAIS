import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Sof27854 = tf.keras.layers.Input(shape=([1, 2, 1]))

Sof27854 = keras.layers.Softmax(axis=1, name = 'Sof27854', input_shape=(1, 2, 1))(in0Sof27854)
ReL49723 = keras.layers.ReLU(max_value=5.366291707629766, negative_slope=9.469109484463766, threshold=8.475563484656991, name = 'ReL49723', )(Sof27854)
model = tf.keras.models.Model(inputs=[in0Sof27854], outputs=ReL49723)
in0Sof27854 = tf.constant([[[[0.1452], [0.1757]]]])
print (np.array2string(model.predict([in0Sof27854],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='ReL49723.png')

LSof27854 = softmax_layer([[[[0.1452], [0.1757]]]], 1, Sof27854), 
LReL49723 = relu_layer(Sof27854, 5.366291707629766, 9.469109484463766, 8.475563484656991, ReL49723), 
exec_layers([LSof27854,LReL49723],["Sof27854","ReL49723"],ReL49723,"ReL49723")

Actual (Unparsed): [[[[-70.7869291], [-70.7869291]]]]

Expected (Unparsed): [[[[-70.78692909427652],[-70.78692909427652]]]]

Actual:   [[[[-70.7869], [-70.7869]]]]

Expected: [[[[-70.7869], [-70.7869]]]]