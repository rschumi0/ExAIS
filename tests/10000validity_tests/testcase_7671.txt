import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Mul92321 = tf.keras.layers.Input(shape=([2, 1]))
in1Mul92321 = tf.keras.layers.Input(shape=([2, 1]))

Mul92321 = keras.layers.Multiply(name = 'Mul92321', )([in0Mul92321,in1Mul92321])
Con39864 = keras.layers.Conv1D(4, (1),strides=(1), padding='same', dilation_rate=(1), name = 'Con39864', )(Mul92321)
Glo68813 = keras.layers.GlobalMaxPool1D(name = 'Glo68813', )(Con39864)
model = tf.keras.models.Model(inputs=[in0Mul92321,in1Mul92321], outputs=Glo68813)
w = model.get_layer('Con39864').get_weights() 
w[0] = np.array([[[0.9329, 0.3771, 0.1412, 0.3825]]])
w[1] = np.array([0, 0, 0, 0])
model.get_layer('Con39864').set_weights(w) 
in0Mul92321 = tf.constant([[[0.2562], [0.039]]])
in1Mul92321 = tf.constant([[[0.4878], [0.3784]]])
print (np.array2string(model.predict([in0Mul92321,in1Mul92321],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Glo68813.png')

LMul92321 = multiply_layer([[[[0.2562], [0.039]]], [[[0.4878], [0.3784]]]], Mul92321), 
LCon39864 = conv1D_layer(Mul92321, 1,[[[0.9329, 0.3771, 0.1412, 0.3825]]],[0, 0, 0, 0], 1, true, 1, Con39864), 
LGlo68813 = global_max_pool1D_layer(Con39864, Glo68813), 
exec_layers([LMul92321,LCon39864,LGlo68813],["Mul92321","Con39864","Glo68813"],Glo68813,"Glo68813")

Actual (Unparsed): [[0.1165886, 0.0471278, 0.0176464, 0.0478027]]

Expected (Unparsed): [[0.11658858044399999,0.04712783115599999,0.017646379631999998,0.047802692699999996]]

Actual:   [[0.1166, 0.0472, 0.0177, 0.0479]]

Expected: [[0.1166, 0.0472, 0.0177, 0.0479]]