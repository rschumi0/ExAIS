import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Cro10241 = tf.keras.layers.Input(shape=([1, 2, 1, 3]))
in0Mul84089 = tf.keras.layers.Input(shape=([1, 2]))
in1Mul84089 = tf.keras.layers.Input(shape=([1, 2]))
in0Con28004 = tf.keras.layers.Input(shape=([3, 2, 1]))
in0Max4807 = tf.keras.layers.Input(shape=([1, 1, 2]))

Cro10241 = keras.layers.Cropping3D(cropping=((0, 0), (0, 1), (0, 0)), name = 'Cro10241', )(in0Cro10241)
Res90161 = keras.layers.Reshape((1, 1, 3), name = 'Res90161', )(Cro10241)
Res66723 = keras.layers.Reshape((1, 3), name = 'Res66723', )(Res90161)
Mul84089 = keras.layers.Multiply(name = 'Mul84089', )([in0Mul84089,in1Mul84089])
Dot98071 = keras.layers.Dot(axes=(1, 1), name = 'Dot98071', )([Res66723,Mul84089])
Res95784 = keras.layers.Reshape((3, 2, 1), name = 'Res95784', )(Dot98071)
Con28004 = keras.layers.Concatenate(axis=3, name = 'Con28004', )([Res95784,in0Con28004])
Max4807 = keras.layers.MaxPool2D(pool_size=(1, 1), strides=(9, 1), padding='valid', name = 'Max4807', )(in0Max4807)
Zer60929 = keras.layers.ZeroPadding2D(padding=((2, 0), (1, 0)), name = 'Zer60929', )(Max4807)
Ave26886 = keras.layers.Average(name = 'Ave26886', )([Con28004,Zer60929])
Res76233 = keras.layers.Reshape((3, 2, 2, 1), name = 'Res76233', )(Ave26886)
Glo64142 = keras.layers.GlobalAveragePooling3D(name = 'Glo64142', )(Res76233)
model = tf.keras.models.Model(inputs=[in0Cro10241,in0Mul84089,in1Mul84089,in0Con28004,in0Max4807], outputs=Glo64142)
in0Cro10241 = tf.constant([[[[[1.9932, 1.2523, 1.7199]], [[1.5481, 1.9689, 1.9504]]]]])
in0Mul84089 = tf.constant([[[0.1604, 0.0672]]])
in1Mul84089 = tf.constant([[[0.5483, 0.7695]]])
in0Con28004 = tf.constant([[[[0.5289], [0.397]], [[0.1706], [0.2551]], [[0.9443], [0.4674]]]])
in0Max4807 = tf.constant([[[[1.781, 1.8726]]]])
print (np.array2string(model.predict([in0Cro10241,in0Mul84089,in1Mul84089,in0Con28004,in0Max4807],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Glo64142.png')

LCro10241 = cropping3D_layer([[[[[1.9932, 1.2523, 1.7199]], [[1.5481, 1.9689, 1.9504]]]]], 0, 0, 0, 1, 0, 0, Cro10241), 
LRes90161 = reshape_layer(Cro10241, [1, 1, 3], Res90161), 
LRes66723 = reshape_layer(Res90161, [1, 3], Res66723), 
LMul84089 = multiply_layer([[[[0.1604, 0.0672]]], [[[0.5483, 0.7695]]]], Mul84089), 
LDot98071 = dot_layer(Res66723,Mul84089, 1, 1, Dot98071), 
LRes95784 = reshape_layer(Dot98071, [3, 2, 1], Res95784), 
LCon28004 = concatenate_layer([Res95784,[[[[0.5289], [0.397]], [[0.1706], [0.2551]], [[0.9443], [0.4674]]]]], 3, Con28004), 
LMax4807 = max_pool2D_layer([[[[1.781, 1.8726]]]], 1, 1, 9, 1, false, Max4807), 
LZer60929 = zero_padding2D_layer(Max4807, 2, 0, 1, 0, Zer60929), 
LAve26886 = average_layer([Con28004,Zer60929], Ave26886), 
LRes76233 = reshape_layer(Ave26886, [3, 2, 2, 1], Res76233), 
LGlo64142 = global_average_pooling3D_layer(Res76233, Glo64142), 
exec_layers([LCro10241,LRes90161,LRes66723,LMul84089,LDot98071,LRes95784,LCon28004,LMax4807,LZer60929,LAve26886,LRes76233,LGlo64142],["Cro10241","Res90161","Res66723","Mul84089","Dot98071","Res95784","Con28004","Max4807","Zer60929","Ave26886","Res76233","Glo64142"],Glo64142,"Glo64142")

Actual (Unparsed): [[0.2962649]]

Expected (Unparsed): [[0.29626485178699996]]

Actual:   [[0.2963]]

Expected: [[0.2963]]