import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Ave12857 = tf.keras.layers.Input(shape=([1, 1]))
in1Ave12857 = tf.keras.layers.Input(shape=([1, 1]))

Ave12857 = keras.layers.Average(name = 'Ave12857', )([in0Ave12857,in1Ave12857])
Res80607 = keras.layers.Reshape((1, 1, 1), name = 'Res80607', )(Ave12857)
Res91447 = keras.layers.Reshape((1, 1, 1, 1), name = 'Res91447', )(Res80607)
Zer20736 = keras.layers.ZeroPadding3D(padding=((1, 1), (1, 1), (1, 1)), name = 'Zer20736', )(Res91447)
Res25967 = keras.layers.Reshape((3, 3, 3), name = 'Res25967', )(Zer20736)
Cro82221 = keras.layers.Cropping2D(cropping=((1, 0), (0, 0)), name = 'Cro82221', )(Res25967)
Res83282 = keras.layers.Reshape((2, 3, 3, 1), name = 'Res83282', )(Cro82221)
Zer86004 = keras.layers.ZeroPadding3D(padding=((1, 1), (1, 1), (1, 1)), name = 'Zer86004', )(Res83282)
model = tf.keras.models.Model(inputs=[in0Ave12857,in1Ave12857], outputs=Zer86004)
in0Ave12857 = tf.constant([[[0.4612]]])
in1Ave12857 = tf.constant([[[0.6428]]])
print (np.array2string(model.predict([in0Ave12857,in1Ave12857],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Zer86004.png')

LAve12857 = average_layer([[[[0.4612]]], [[[0.6428]]]], Ave12857), 
LRes80607 = reshape_layer(Ave12857, [1, 1, 1], Res80607), 
LRes91447 = reshape_layer(Res80607, [1, 1, 1, 1], Res91447), 
LZer20736 = zero_padding3D_layer(Res91447, 1, 1, 1, 1, 1, 1, Zer20736), 
LRes25967 = reshape_layer(Zer20736, [3, 3, 3], Res25967), 
LCro82221 = cropping2D_layer(Res25967, 1, 0, 0, 0, Cro82221), 
LRes83282 = reshape_layer(Cro82221, [2, 3, 3, 1], Res83282), 
LZer86004 = zero_padding3D_layer(Res83282, 1, 1, 1, 1, 1, 1, Zer86004), 
exec_layers([LAve12857,LRes80607,LRes91447,LZer20736,LRes25967,LCro82221,LRes83282,LZer86004],["Ave12857","Res80607","Res91447","Zer20736","Res25967","Cro82221","Res83282","Zer86004"],Zer86004,"Zer86004")

Actual (Unparsed): [[[[[0.0000000], [0.0000000], [0.0000000], [0.0000000], [0.0000000]], [[0.0000000], [0.0000000], [0.0000000], [0.0000000], [0.0000000]], [[0.0000000], [0.0000000], [0.0000000], [0.0000000], [0.0000000]], [[0.0000000], [0.0000000], [0.0000000], [0.0000000], [0.0000000]], [[0.0000000], [0.0000000], [0.0000000], [0.0000000], [0.0000000]]], [[[0.0000000], [0.0000000], [0.0000000], [0.0000000], [0.0000000]], [[0.0000000], [0.0000000], [0.0000000], [0.0000000], [0.0000000]], [[0.0000000], [0.0000000], [0.5520000], [0.0000000], [0.0000000]], [[0.0000000], [0.0000000], [0.0000000], [0.0000000], [0.0000000]], [[0.0000000], [0.0000000], [0.0000000], [0.0000000], [0.0000000]]], [[[0.0000000], [0.0000000], [0.0000000], [0.0000000], [0.0000000]], [[0.0000000], [0.0000000], [0.0000000], [0.0000000], [0.0000000]], [[0.0000000], [0.0000000], [0.0000000], [0.0000000], [0.0000000]], [[0.0000000], [0.0000000], [0.0000000], [0.0000000], [0.0000000]], [[0.0000000], [0.0000000], [0.0000000], [0.0000000], [0.0000000]]], [[[0.0000000], [0.0000000], [0.0000000], [0.0000000], [0.0000000]], [[0.0000000], [0.0000000], [0.0000000], [0.0000000], [0.0000000]], [[0.0000000], [0.0000000], [0.0000000], [0.0000000], [0.0000000]], [[0.0000000], [0.0000000], [0.0000000], [0.0000000], [0.0000000]], [[0.0000000], [0.0000000], [0.0000000], [0.0000000], [0.0000000]]]]]

Expected (Unparsed): [[[[[0],[0],[0],[0],[0]],[[0],[0],[0],[0],[0]],[[0],[0],[0],[0],[0]],[[0],[0],[0],[0],[0]],[[0],[0],[0],[0],[0]]],[[[0],[0],[0],[0],[0]],[[0],[0],[0],[0],[0]],[[0],[0],[0.552],[0],[0]],[[0],[0],[0],[0],[0]],[[0],[0],[0],[0],[0]]],[[[0],[0],[0],[0],[0]],[[0],[0],[0],[0],[0]],[[0],[0],[0],[0],[0]],[[0],[0],[0],[0],[0]],[[0],[0],[0],[0],[0]]],[[[0],[0],[0],[0],[0]],[[0],[0],[0],[0],[0]],[[0],[0],[0],[0],[0]],[[0],[0],[0],[0],[0]],[[0],[0],[0],[0],[0]]]]]

Actual

Expected