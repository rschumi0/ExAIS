import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Max11191 = tf.keras.layers.Input(shape=([1, 1, 2, 2]))
in1Max11191 = tf.keras.layers.Input(shape=([1, 1, 2, 2]))

Max11191 = keras.layers.Maximum(name = 'Max11191', )([in0Max11191,in1Max11191])
Res99017 = keras.layers.Reshape((1, 1, 4), name = 'Res99017', )(Max11191)
Res17187 = keras.layers.Reshape((1, 4), name = 'Res17187', )(Res99017)
Sim60247 = keras.layers.SimpleRNN(2,name = 'Sim60247', )(Res17187)
model = tf.keras.models.Model(inputs=[in0Max11191,in1Max11191], outputs=Sim60247)
w = model.get_layer('Sim60247').get_weights() 
w[0] = np.array([[2, 5], [7, 8], [5, 1], [8, 5]])
w[1] = np.array([[10, 8], [5, 9]])
w[2] = np.array([6, 2])
model.get_layer('Sim60247').set_weights(w) 
in0Max11191 = tf.constant([[[[[0.0468, 0.9627], [0.5547, 0.9726]]]]])
in1Max11191 = tf.constant([[[[[0.5064, 0.495], [0.0219, 0.3935]]]]])
print (np.array2string(model.predict([in0Max11191,in1Max11191],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Sim60247.png')

LMax11191 = maximum_layer([[[[[[0.0468, 0.9627], [0.5547, 0.9726]]]]], [[[[[0.5064, 0.495], [0.0219, 0.3935]]]]]], Max11191), 
LRes99017 = reshape_layer(Max11191, [1, 1, 4], Res99017), 
LRes17187 = reshape_layer(Res99017, [1, 4], Res17187), 
LSim60247 = simple_rnn_layer(Res17187,[[2, 5], [7, 8], [5, 1], [8, 5]],[[10, 8], [5, 9]],[6, 2], Sim60247), 
exec_layers([LMax11191,LRes99017,LRes17187,LSim60247],["Max11191","Res99017","Res17187","Sim60247"],Sim60247,"Sim60247")

Actual (Unparsed): [[1.0000000, 1.0000000]]

Expected (Unparsed): [[1.0,0.9999999999999991]]

Actual:   [[1, 1]]

Expected: [[1, 1]]