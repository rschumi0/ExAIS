import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Min55005 = tf.keras.layers.Input(shape=([1, 1, 2, 2]))
in1Min55005 = tf.keras.layers.Input(shape=([1, 1, 2, 2]))
in0Min10027 = tf.keras.layers.Input(shape=([2, 1, 2, 1]))
in1Min10027 = tf.keras.layers.Input(shape=([2, 1, 2, 1]))
in0Con90252 = tf.keras.layers.Input(shape=([4, 2]))

Min55005 = keras.layers.Minimum(name = 'Min55005', )([in0Min55005,in1Min55005])
Res31522 = keras.layers.Reshape((1, 1, 4), name = 'Res31522', )(Min55005)
Res97275 = keras.layers.Reshape((1, 4), name = 'Res97275', )(Res31522)
Zer27960 = keras.layers.ZeroPadding1D(padding=((3, 0)), name = 'Zer27960', )(Res97275)
Min10027 = keras.layers.Minimum(name = 'Min10027', )([in0Min10027,in1Min10027])
Res82001 = keras.layers.Reshape((2, 1, 2), name = 'Res82001', )(Min10027)
Res22779 = keras.layers.Reshape((2, 2), name = 'Res22779', )(Res82001)
Zer57496 = keras.layers.ZeroPadding1D(padding=((1, 1)), name = 'Zer57496', )(Res22779)
Con90252 = keras.layers.Concatenate(axis=2, name = 'Con90252', )([Zer57496,in0Con90252])
Ave54138 = keras.layers.Average(name = 'Ave54138', )([Zer27960,Con90252])
Res20310 = keras.layers.Reshape((4, 4, 1), name = 'Res20310', )(Ave54138)
Res90599 = keras.layers.Reshape((4, 4, 1, 1), name = 'Res90599', )(Res20310)
Zer94832 = keras.layers.ZeroPadding3D(padding=((1, 1), (1, 1), (1, 1)), name = 'Zer94832', )(Res90599)
model = tf.keras.models.Model(inputs=[in0Min55005,in1Min55005,in0Min10027,in1Min10027,in0Con90252], outputs=Zer94832)
in0Min55005 = tf.constant([[[[[0.1573, 0.9446], [0.8623, 0.1041]]]]])
in1Min55005 = tf.constant([[[[[0.1509, 0.0544], [0.0175, 0.2451]]]]])
in0Min10027 = tf.constant([[[[[0.0851], [0.7523]]], [[[0.0112], [0.0394]]]]])
in1Min10027 = tf.constant([[[[[0.8883], [0.8129]]], [[[0.6087], [0.5127]]]]])
in0Con90252 = tf.constant([[[0.7833, 0.5913], [0.9982, 0.8002], [0.5516, 0.5403], [0.6833, 0.9219]]])
print (np.array2string(model.predict([in0Min55005,in1Min55005,in0Min10027,in1Min10027,in0Con90252],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Zer94832.png')

LMin55005 = minimum_layer([[[[[[0.1573, 0.9446], [0.8623, 0.1041]]]]], [[[[[0.1509, 0.0544], [0.0175, 0.2451]]]]]], Min55005), 
LRes31522 = reshape_layer(Min55005, [1, 1, 4], Res31522), 
LRes97275 = reshape_layer(Res31522, [1, 4], Res97275), 
LZer27960 = zero_padding1D_layer(Res97275, 3, 0, Zer27960), 
LMin10027 = minimum_layer([[[[[[0.0851], [0.7523]]], [[[0.0112], [0.0394]]]]], [[[[[0.8883], [0.8129]]], [[[0.6087], [0.5127]]]]]], Min10027), 
LRes82001 = reshape_layer(Min10027, [2, 1, 2], Res82001), 
LRes22779 = reshape_layer(Res82001, [2, 2], Res22779), 
LZer57496 = zero_padding1D_layer(Res22779, 1, 1, Zer57496), 
LCon90252 = concatenate_layer([Zer57496,[[[0.7833, 0.5913], [0.9982, 0.8002], [0.5516, 0.5403], [0.6833, 0.9219]]]], 2, Con90252), 
LAve54138 = average_layer([Zer27960,Con90252], Ave54138), 
LRes20310 = reshape_layer(Ave54138, [4, 4, 1], Res20310), 
LRes90599 = reshape_layer(Res20310, [4, 4, 1, 1], Res90599), 
LZer94832 = zero_padding3D_layer(Res90599, 1, 1, 1, 1, 1, 1, Zer94832), 
exec_layers([LMin55005,LRes31522,LRes97275,LZer27960,LMin10027,LRes82001,LRes22779,LZer57496,LCon90252,LAve54138,LRes20310,LRes90599,LZer94832],["Min55005","Res31522","Res97275","Zer27960","Min10027","Res82001","Res22779","Zer57496","Con90252","Ave54138","Res20310","Res90599","Zer94832"],Zer94832,"Zer94832")

Actual (Unparsed): [[[[[0.0000000], [0.0000000], [0.0000000]], [[0.0000000], [0.0000000], [0.0000000]], [[0.0000000], [0.0000000], [0.0000000]], [[0.0000000], [0.0000000], [0.0000000]], [[0.0000000], [0.0000000], [0.0000000]], [[0.0000000], [0.0000000], [0.0000000]]], [[[0.0000000], [0.0000000], [0.0000000]], [[0.0000000], [0.0000000], [0.0000000]], [[0.0000000], [0.0000000], [0.0000000]], [[0.0000000], [0.3916500], [0.0000000]], [[0.0000000], [0.2956500], [0.0000000]], [[0.0000000], [0.0000000], [0.0000000]]], [[[0.0000000], [0.0000000], [0.0000000]], [[0.0000000], [0.0425500], [0.0000000]], [[0.0000000], [0.3761500], [0.0000000]], [[0.0000000], [0.4991000], [0.0000000]], [[0.0000000], [0.4001000], [0.0000000]], [[0.0000000], [0.0000000], [0.0000000]]], [[[0.0000000], [0.0000000], [0.0000000]], [[0.0000000], [0.0056000], [0.0000000]], [[0.0000000], [0.0197000], [0.0000000]], [[0.0000000], [0.2758000], [0.0000000]], [[0.0000000], [0.2701500], [0.0000000]], [[0.0000000], [0.0000000], [0.0000000]]], [[[0.0000000], [0.0000000], [0.0000000]], [[0.0000000], [0.0754500], [0.0000000]], [[0.0000000], [0.0272000], [0.0000000]], [[0.0000000], [0.3504000], [0.0000000]], [[0.0000000], [0.5130000], [0.0000000]], [[0.0000000], [0.0000000], [0.0000000]]], [[[0.0000000], [0.0000000], [0.0000000]], [[0.0000000], [0.0000000], [0.0000000]], [[0.0000000], [0.0000000], [0.0000000]], [[0.0000000], [0.0000000], [0.0000000]], [[0.0000000], [0.0000000], [0.0000000]], [[0.0000000], [0.0000000], [0.0000000]]]]]

Expected (Unparsed): [[[[[0],[0],[0]],[[0],[0],[0]],[[0],[0],[0]],[[0],[0],[0]],[[0],[0],[0]],[[0],[0],[0]]],[[[0],[0],[0]],[[0],[0],[0]],[[0],[0],[0]],[[0],[0.39165],[0]],[[0],[0.29565],[0]],[[0],[0],[0]]],[[[0],[0],[0]],[[0],[0.04255],[0]],[[0],[0.37615],[0]],[[0],[0.4991],[0]],[[0],[0.4001],[0]],[[0],[0],[0]]],[[[0],[0],[0]],[[0],[0.0056],[0]],[[0],[0.0197],[0]],[[0],[0.2758],[0]],[[0],[0.27015],[0]],[[0],[0],[0]]],[[[0],[0],[0]],[[0],[0.07545],[0]],[[0],[0.0272],[0]],[[0],[0.3504],[0]],[[0],[0.513],[0]],[[0],[0],[0]]],[[[0],[0],[0]],[[0],[0],[0]],[[0],[0],[0]],[[0],[0],[0]],[[0],[0],[0]],[[0],[0],[0]]]]]

Actual:   [[[[[0], [0], [0]], [[0], [0], [0]], [[0], [0], [0]], [[0], [0], [0]], [[0], [0], [0]], [[0], [0], [0]]], [[[0], [0], [0]], [[0], [0], [0]], [[0], [0], [0]], [[0], [0.3917], [0]], [[0], [0.2957], [0]], [[0], [0], [0]]], [[[0], [0], [0]], [[0], [0.0426], [0]], [[0], [0.3762], [0]], [[0], [0.4991], [0]], [[0], [0.4001], [0]], [[0], [0], [0]]], [[[0], [0], [0]], [[0], [0.0056], [0]], [[0], [0.0197], [0]], [[0], [0.2758], [0]], [[0], [0.2702], [0]], [[0], [0], [0]]], [[[0], [0], [0]], [[0], [0.0755], [0]], [[0], [0.0272], [0]], [[0], [0.3504], [0]], [[0], [0.513], [0]], [[0], [0], [0]]], [[[0], [0], [0]], [[0], [0], [0]], [[0], [0], [0]], [[0], [0], [0]], [[0], [0], [0]], [[0], [0], [0]]]]]

Expected: [[[[[0], [0], [0]], [[0], [0], [0]], [[0], [0], [0]], [[0], [0], [0]], [[0], [0], [0]], [[0], [0], [0]]], [[[0], [0], [0]], [[0], [0], [0]], [[0], [0], [0]], [[0], [0.3917], [0]], [[0], [0.2957], [0]], [[0], [0], [0]]], [[[0], [0], [0]], [[0], [0.0426], [0]], [[0], [0.3762], [0]], [[0], [0.4991], [0]], [[0], [0.4001], [0]], [[0], [0], [0]]], [[[0], [0], [0]], [[0], [0.0056], [0]], [[0], [0.0197], [0]], [[0], [0.2758], [0]], [[0], [0.2702], [0]], [[0], [0], [0]]], [[[0], [0], [0]], [[0], [0.0755], [0]], [[0], [0.0272], [0]], [[0], [0.3504], [0]], [[0], [0.513], [0]], [[0], [0], [0]]], [[[0], [0], [0]], [[0], [0], [0]], [[0], [0], [0]], [[0], [0], [0]], [[0], [0], [0]], [[0], [0], [0]]]]]