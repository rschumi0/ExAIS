import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Max62519 = tf.keras.layers.Input(shape=([2, 2, 1, 1]))
in1Max62519 = tf.keras.layers.Input(shape=([2, 2, 1, 1]))
in0Con4173 = tf.keras.layers.Input(shape=([2, 2, 3, 1]))
in0Mul24410 = tf.keras.layers.Input(shape=([2, 1, 2, 2]))
in1Mul24410 = tf.keras.layers.Input(shape=([2, 1, 2, 2]))
in0Add94501 = tf.keras.layers.Input(shape=([2, 2]))
in1Add94501 = tf.keras.layers.Input(shape=([2, 2]))
in0Con28631 = tf.keras.layers.Input(shape=([22]))

Max62519 = keras.layers.Maximum(name = 'Max62519', )([in0Max62519,in1Max62519])
Zer98240 = keras.layers.ZeroPadding3D(padding=((0, 0), (0, 0), (2, 0)), name = 'Zer98240', )(Max62519)
Con4173 = keras.layers.Concatenate(axis=4, name = 'Con4173', )([Zer98240,in0Con4173])
Mul24410 = keras.layers.Multiply(name = 'Mul24410', )([in0Mul24410,in1Mul24410])
Zer50938 = keras.layers.ZeroPadding3D(padding=((0, 0), (1, 0), (1, 0)), name = 'Zer50938', )(Mul24410)
Min61953 = keras.layers.Minimum(name = 'Min61953', )([Con4173,Zer50938])
Res62504 = keras.layers.Reshape((2, 2, 6), name = 'Res62504', )(Min61953)
Res65089 = keras.layers.Reshape((2, 12), name = 'Res65089', )(Res62504)
Fla64096 = keras.layers.Flatten(name = 'Fla64096', )(Res65089)
Add94501 = keras.layers.Add(name = 'Add94501', )([in0Add94501,in1Add94501])
Glo93905 = keras.layers.GlobalMaxPool1D(name = 'Glo93905', )(Add94501)
Con28631 = keras.layers.Concatenate(axis=1, name = 'Con28631', )([Glo93905,in0Con28631])
Min55599 = keras.layers.Minimum(name = 'Min55599', )([Fla64096,Con28631])
model = tf.keras.models.Model(inputs=[in0Max62519,in1Max62519,in0Con4173,in0Mul24410,in1Mul24410,in0Add94501,in1Add94501,in0Con28631], outputs=Min55599)
in0Max62519 = tf.constant([[[[[0.4219]], [[0.9005]]], [[[0.2755]], [[0.4728]]]]])
in1Max62519 = tf.constant([[[[[0.898]], [[0.7562]]], [[[0.4204]], [[0.8776]]]]])
in0Con4173 = tf.constant([[[[[0.9425], [0.9693], [0.3833]], [[0.2821], [0.3018], [0.7511]]], [[[0.3188], [0.4313], [0.3165]], [[0.7897], [0.4478], [0.7108]]]]])
in0Mul24410 = tf.constant([[[[[0.3012, 0.6152], [0.0497, 0.2985]]], [[[0.5199, 0.1807], [0.3483, 0.606]]]]])
in1Mul24410 = tf.constant([[[[[0.7847, 0.7098], [0.5115, 0.9962]]], [[[0.0423, 0.7176], [0.5879, 0.5811]]]]])
in0Add94501 = tf.constant([[[0.3794, 0.4892], [0.0332, 0.1216]]])
in1Add94501 = tf.constant([[[0.6633, 0.5181], [0.8061, 0.0471]]])
in0Con28631 = tf.constant([[0.4558, 0.1338, 0.5378, 0.8787, 0.3191, 0.0975, 0.7969, 0.4601, 0.4198, 0.0581, 0.12, 0.5235, 0.8125, 0.6869, 0.8601, 0.7902, 0.2386, 0.7572, 0.526, 0.2481, 0.3979, 0.0674]])
print (np.array2string(model.predict([in0Max62519,in1Max62519,in0Con4173,in0Mul24410,in1Mul24410,in0Add94501,in1Add94501,in0Con28631],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Min55599.png')

LMax62519 = maximum_layer([[[[[[0.4219]], [[0.9005]]], [[[0.2755]], [[0.4728]]]]], [[[[[0.898]], [[0.7562]]], [[[0.4204]], [[0.8776]]]]]], Max62519), 
LZer98240 = zero_padding3D_layer(Max62519, 0, 0, 0, 0, 2, 0, Zer98240), 
LCon4173 = concatenate_layer([Zer98240,[[[[[0.9425], [0.9693], [0.3833]], [[0.2821], [0.3018], [0.7511]]], [[[0.3188], [0.4313], [0.3165]], [[0.7897], [0.4478], [0.7108]]]]]], 4, Con4173), 
LMul24410 = multiply_layer([[[[[[0.3012, 0.6152], [0.0497, 0.2985]]], [[[0.5199, 0.1807], [0.3483, 0.606]]]]], [[[[[0.7847, 0.7098], [0.5115, 0.9962]]], [[[0.0423, 0.7176], [0.5879, 0.5811]]]]]], Mul24410), 
LZer50938 = zero_padding3D_layer(Mul24410, 0, 0, 1, 0, 1, 0, Zer50938), 
LMin61953 = minimum_layer([Con4173,Zer50938], Min61953), 
LRes62504 = reshape_layer(Min61953, [2, 2, 6], Res62504), 
LRes65089 = reshape_layer(Res62504, [2, 12], Res65089), 
LFla64096 = flatten_layer(Res65089, Fla64096), 
LAdd94501 = add_layer([[[[0.3794, 0.4892], [0.0332, 0.1216]]], [[[0.6633, 0.5181], [0.8061, 0.0471]]]], Add94501), 
LGlo93905 = global_max_pool1D_layer(Add94501, Glo93905), 
LCon28631 = concatenate_layer([Glo93905,[[0.4558, 0.1338, 0.5378, 0.8787, 0.3191, 0.0975, 0.7969, 0.4601, 0.4198, 0.0581, 0.12, 0.5235, 0.8125, 0.6869, 0.8601, 0.7902, 0.2386, 0.7572, 0.526, 0.2481, 0.3979, 0.0674]]], 1, Con28631), 
LMin55599 = minimum_layer([Fla64096,Con28631], Min55599), 
exec_layers([LMax62519,LZer98240,LCon4173,LMul24410,LZer50938,LMin61953,LRes62504,LRes65089,LFla64096,LAdd94501,LGlo93905,LCon28631,LMin55599],["Max62519","Zer98240","Con4173","Mul24410","Zer50938","Min61953","Res62504","Res65089","Fla64096","Add94501","Glo93905","Con28631","Min55599"],Min55599,"Min55599")

Actual (Unparsed): [[0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.3018000, 0.0254215, 0.0581000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.1296703, 0.2047656, 0.0674000]]

Expected (Unparsed): [[0,0,0,0,0,0,0,0,0,0.3018,0.025421549999999998,0.0581,0,0,0,0,0,0,0,0,0,0.12967032,0.20476556999999998,0.0674]]

Actual:   [[0, 0, 0, 0, 0, 0, 0, 0, 0, 0.3018, 0.0255, 0.0581, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.1297, 0.2048, 0.0674]]

Expected: [[0, 0, 0, 0, 0, 0, 0, 0, 0, 0.3018, 0.0255, 0.0581, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.1297, 0.2048, 0.0674]]