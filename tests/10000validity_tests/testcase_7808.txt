import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Ave31826 = tf.keras.layers.Input(shape=([1, 1, 2]))
in1Ave31826 = tf.keras.layers.Input(shape=([1, 1, 2]))
in0Up_3756 = tf.keras.layers.Input(shape=([3, 4]))
in0Add62977 = tf.keras.layers.Input(shape=([1, 2, 1, 1]))
in1Add62977 = tf.keras.layers.Input(shape=([1, 2, 1, 1]))
in0Max35448 = tf.keras.layers.Input(shape=([1, 1, 2]))
in1Max35448 = tf.keras.layers.Input(shape=([1, 1, 2]))
in0Con69775 = tf.keras.layers.Input(shape=([6, 4, 1]))

Ave31826 = keras.layers.Average(name = 'Ave31826', )([in0Ave31826,in1Ave31826])
Res54707 = keras.layers.Reshape((1, 1, 2, 1), name = 'Res54707', )(Ave31826)
Zer12407 = keras.layers.ZeroPadding3D(padding=((5, 0), (3, 0), (1, 0)), name = 'Zer12407', )(Res54707)
Up_3756 = keras.layers.UpSampling1D(size=(2), name = 'Up_3756', )(in0Up_3756)
Res25378 = keras.layers.Reshape((6, 4, 1), name = 'Res25378', )(Up_3756)
Res14556 = keras.layers.Reshape((6, 4, 1, 1), name = 'Res14556', )(Res25378)
Add62977 = keras.layers.Add(name = 'Add62977', )([in0Add62977,in1Add62977])
Zer14234 = keras.layers.ZeroPadding3D(padding=((5, 0), (2, 0), (0, 0)), name = 'Zer14234', )(Add62977)
Sub3165 = keras.layers.Subtract(name = 'Sub3165', )([Res14556,Zer14234])
Zer83714 = keras.layers.ZeroPadding3D(padding=((0, 0), (0, 0), (2, 0)), name = 'Zer83714', )(Sub3165)
Add36757 = keras.layers.Add(name = 'Add36757', )([Zer12407,Zer83714])
Res6001 = keras.layers.Reshape((6, 4, 3), name = 'Res6001', )(Add36757)
Max35448 = keras.layers.Maximum(name = 'Max35448', )([in0Max35448,in1Max35448])
Zer83779 = keras.layers.ZeroPadding2D(padding=((5, 0), (3, 0)), name = 'Zer83779', )(Max35448)
Con69775 = keras.layers.Concatenate(axis=3, name = 'Con69775', )([Zer83779,in0Con69775])
Ave98670 = keras.layers.Average(name = 'Ave98670', )([Res6001,Con69775])
model = tf.keras.models.Model(inputs=[in0Ave31826,in1Ave31826,in0Up_3756,in0Add62977,in1Add62977,in0Max35448,in1Max35448,in0Con69775], outputs=Ave98670)
in0Ave31826 = tf.constant([[[[0.3286, 0.0179]]]])
in1Ave31826 = tf.constant([[[[0.2345, 0.7721]]]])
in0Up_3756 = tf.constant([[[1.4271, 1.3659, 1.9999, 1.1189], [1.0035, 1.8298, 1.7866, 1.1947], [1.813, 1.505, 1.208, 1.344]]])
in0Add62977 = tf.constant([[[[[0.9888]], [[0.6825]]]]])
in1Add62977 = tf.constant([[[[[0.2999]], [[0.4927]]]]])
in0Max35448 = tf.constant([[[[0.6347, 0.2051]]]])
in1Max35448 = tf.constant([[[[0.5834, 0.5719]]]])
in0Con69775 = tf.constant([[[[0.7902], [0.7388], [0.1007], [0.848]], [[0.0592], [0.9947], [0.5547], [0.4138]], [[0.6836], [0.7827], [0.5761], [0.8996]], [[0.5986], [0.4216], [0.88], [0.7035]], [[0.684], [0.6107], [0.7074], [0.9573]], [[0.7312], [0.2812], [0.846], [0.2903]]]])
print (np.array2string(model.predict([in0Ave31826,in1Ave31826,in0Up_3756,in0Add62977,in1Add62977,in0Max35448,in1Max35448,in0Con69775],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Ave98670.png')

LAve31826 = average_layer([[[[[0.3286, 0.0179]]]], [[[[0.2345, 0.7721]]]]], Ave31826), 
LRes54707 = reshape_layer(Ave31826, [1, 1, 2, 1], Res54707), 
LZer12407 = zero_padding3D_layer(Res54707, 5, 0, 3, 0, 1, 0, Zer12407), 
LUp_3756 = up_sampling1D_layer([[[1.4271, 1.3659, 1.9999, 1.1189], [1.0035, 1.8298, 1.7866, 1.1947], [1.813, 1.505, 1.208, 1.344]]], 2, Up_3756), 
LRes25378 = reshape_layer(Up_3756, [6, 4, 1], Res25378), 
LRes14556 = reshape_layer(Res25378, [6, 4, 1, 1], Res14556), 
LAdd62977 = add_layer([[[[[[0.9888]], [[0.6825]]]]], [[[[[0.2999]], [[0.4927]]]]]], Add62977), 
LZer14234 = zero_padding3D_layer(Add62977, 5, 0, 2, 0, 0, 0, Zer14234), 
LSub3165 = subtract_layer(Res14556,Zer14234, Sub3165), 
LZer83714 = zero_padding3D_layer(Sub3165, 0, 0, 0, 0, 2, 0, Zer83714), 
LAdd36757 = add_layer([Zer12407,Zer83714], Add36757), 
LRes6001 = reshape_layer(Add36757, [6, 4, 3], Res6001), 
LMax35448 = maximum_layer([[[[[0.6347, 0.2051]]]], [[[[0.5834, 0.5719]]]]], Max35448), 
LZer83779 = zero_padding2D_layer(Max35448, 5, 0, 3, 0, Zer83779), 
LCon69775 = concatenate_layer([Zer83779,[[[[0.7902], [0.7388], [0.1007], [0.848]], [[0.0592], [0.9947], [0.5547], [0.4138]], [[0.6836], [0.7827], [0.5761], [0.8996]], [[0.5986], [0.4216], [0.88], [0.7035]], [[0.684], [0.6107], [0.7074], [0.9573]], [[0.7312], [0.2812], [0.846], [0.2903]]]]], 3, Con69775), 
LAve98670 = average_layer([Res6001,Con69775], Ave98670), 
exec_layers([LAve31826,LRes54707,LZer12407,LUp_3756,LRes25378,LRes14556,LAdd62977,LZer14234,LSub3165,LZer83714,LAdd36757,LRes6001,LMax35448,LZer83779,LCon69775,LAve98670],["Ave31826","Res54707","Zer12407","Up_3756","Res25378","Res14556","Add62977","Zer14234","Sub3165","Zer83714","Add36757","Res6001","Max35448","Zer83779","Con69775","Ave98670"],Ave98670,"Ave98670")

Actual (Unparsed): [[[[0.0000000, 0.0000000, 1.1086500], [0.0000000, 0.0000000, 1.0523500], [0.0000000, 0.0000000, 1.0503000], [0.0000000, 0.0000000, 0.9834500]], [[0.0000000, 0.0000000, 0.7431500], [0.0000000, 0.0000000, 1.1803000], [0.0000000, 0.0000000, 1.2773000], [0.0000000, 0.0000000, 0.7663500]], [[0.0000000, 0.0000000, 0.8435500], [0.0000000, 0.0000000, 1.3062500], [0.0000000, 0.0000000, 1.1813500], [0.0000000, 0.0000000, 1.0471500]], [[0.0000000, 0.0000000, 0.8010500], [0.0000000, 0.0000000, 1.1257000], [0.0000000, 0.0000000, 1.3333000], [0.0000000, 0.0000000, 0.9491000]], [[0.0000000, 0.0000000, 1.2485000], [0.0000000, 0.0000000, 1.0578500], [0.0000000, 0.0000000, 0.9577000], [0.0000000, 0.0000000, 1.1506500]], [[0.0000000, 0.0000000, 1.2721000], [0.0000000, 0.0000000, 0.8931000], [0.0000000, 0.0000000, 0.3826500], [0.3173500, 0.4267250, 0.4270500]]]]

Expected (Unparsed): [[[[0,0,1.10865],[0,0,1.05235],[0,0,1.0503],[0,0,0.9834499999999999]],[[0,0,0.74315],[0,0,1.1803],[0,0,1.2772999999999999],[0,0,0.76635]],[[0,0,0.84355],[0,0,1.30625],[0,0,1.18135],[0,0,1.04715]],[[0,0,0.80105],[0,0,1.1257000000000001],[0,0,1.3333],[0,0,0.9491]],[[0,0,1.2485],[0,0,1.05785],[0,0,0.9577],[0,0,1.1506500000000002]],[[0,0,1.2721],[0,0,0.8931],[0,0,0.38265],[0.31735,0.42672499999999997,0.42705000000000004]]]]

Actual:   [[[[0, 0, 1.1087], [0, 0, 1.0524], [0, 0, 1.0503], [0, 0, 0.9835]], [[0, 0, 0.7432], [0, 0, 1.1803], [0, 0, 1.2773], [0, 0, 0.7664]], [[0, 0, 0.8436], [0, 0, 1.3063], [0, 0, 1.1814], [0, 0, 1.0472]], [[0, 0, 0.8011], [0, 0, 1.1257], [0, 0, 1.3333], [0, 0, 0.9491]], [[0, 0, 1.2485], [0, 0, 1.0579], [0, 0, 0.9577], [0, 0, 1.1507]], [[0, 0, 1.2721], [0, 0, 0.8931], [0, 0, 0.3827], [0.3174, 0.4268, 0.4271]]]]

Expected: [[[[0, 0, 1.1087], [0, 0, 1.0524], [0, 0, 1.0503], [0, 0, 0.9835]], [[0, 0, 0.7432], [0, 0, 1.1803], [0, 0, 1.2773], [0, 0, 0.7664]], [[0, 0, 0.8436], [0, 0, 1.3063], [0, 0, 1.1814], [0, 0, 1.0472]], [[0, 0, 0.8011], [0, 0, 1.1258], [0, 0, 1.3333], [0, 0, 0.9491]], [[0, 0, 1.2485], [0, 0, 1.0579], [0, 0, 0.9577], [0, 0, 1.1507]], [[0, 0, 1.2721], [0, 0, 0.8931], [0, 0, 0.3827], [0.3174, 0.4268, 0.4271]]]]