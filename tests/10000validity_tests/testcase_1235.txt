import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Dot43170 = tf.keras.layers.Input(shape=([3, 2]))
in1Dot43170 = tf.keras.layers.Input(shape=([3, 2]))
in0Mul58769 = tf.keras.layers.Input(shape=([1, 1, 2]))
in1Mul58769 = tf.keras.layers.Input(shape=([1, 1, 2]))
in0Con84827 = tf.keras.layers.Input(shape=([8]))
in0Bat14660 = tf.keras.layers.Input(shape=([3]))
in0Con35366 = tf.keras.layers.Input(shape=([8]))

Dot43170 = keras.layers.Dot(axes=(2, 2), name = 'Dot43170', )([in0Dot43170,in1Dot43170])
Fla26448 = keras.layers.Flatten(name = 'Fla26448', )(Dot43170)
Mul58769 = keras.layers.Multiply(name = 'Mul58769', )([in0Mul58769,in1Mul58769])
Res19177 = keras.layers.Reshape((1, 2), name = 'Res19177', )(Mul58769)
Cro14706 = keras.layers.Cropping1D(cropping=((0, 0)), name = 'Cro14706', )(Res19177)
Res36912 = keras.layers.Reshape((1, 2, 1), name = 'Res36912', )(Cro14706)
Glo71013 = keras.layers.GlobalAveragePooling2D(name = 'Glo71013', )(Res36912)
Con84827 = keras.layers.Concatenate(axis=1, name = 'Con84827', )([Glo71013,in0Con84827])
Mul39307 = keras.layers.Multiply(name = 'Mul39307', )([Fla26448,Con84827])
Bat14660 = keras.layers.BatchNormalization(axis=1, epsilon=0.221067713448707,  name = 'Bat14660', )(in0Bat14660)
ReL75751 = keras.layers.ReLU(max_value=0.7227450382390824, negative_slope=0.3988263638735775, threshold=7.285797332654048, name = 'ReL75751', )(Bat14660)
Res2007 = keras.layers.Reshape((3, 1), name = 'Res2007', )(ReL75751)
Res20865 = keras.layers.Reshape((3, 1, 1), name = 'Res20865', )(Res2007)
Res62559 = keras.layers.Reshape((3, 1, 1, 1), name = 'Res62559', )(Res20865)
Glo9974 = keras.layers.GlobalAveragePooling3D(name = 'Glo9974', )(Res62559)
Con35366 = keras.layers.Concatenate(axis=1, name = 'Con35366', )([Glo9974,in0Con35366])
Min10611 = keras.layers.Minimum(name = 'Min10611', )([Mul39307,Con35366])
model = tf.keras.models.Model(inputs=[in0Dot43170,in1Dot43170,in0Mul58769,in1Mul58769,in0Con84827,in0Bat14660,in0Con35366], outputs=Min10611)
w = model.get_layer('Bat14660').get_weights() 
w[0] = np.array([0.9836, 0.9186, 0.7191])
w[1] = np.array([0.8579, 0.4671, 0.5879])
w[2] = np.array([0.7397, 0.7802, 0.1827])
w[3] = np.array([0.2781, 0.0582, 0.5996])
model.get_layer('Bat14660').set_weights(w) 
in0Dot43170 = tf.constant([[[0.0441, 0.9851], [0.0938, 0.6348], [0.9937, 0.8811]]])
in1Dot43170 = tf.constant([[[0.4061, 0.7604], [0.7452, 0.3906], [0.1932, 0.2508]]])
in0Mul58769 = tf.constant([[[[0.7747, 0.6256]]]])
in1Mul58769 = tf.constant([[[[0.1016, 0.5009]]]])
in0Con84827 = tf.constant([[0.2814, 0.3467, 0.7053, 0.4512, 0.6417, 0.0674, 0.2066, 0.1767]])
in0Bat14660 = tf.constant([[1.2099, 1.1047, 1.0713]])
in0Con35366 = tf.constant([[0.7322, 0.3731, 0.1064, 0.1203, 0.3638, 0.0251, 0.5451, 0.0913]])
print (np.array2string(model.predict([in0Dot43170,in1Dot43170,in0Mul58769,in1Mul58769,in0Con84827,in0Bat14660,in0Con35366],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Min10611.png')

LDot43170 = dot_layer([[[0.0441, 0.9851], [0.0938, 0.6348], [0.9937, 0.8811]]], [[[0.4061, 0.7604], [0.7452, 0.3906], [0.1932, 0.2508]]], 2, 2, Dot43170), 
LFla26448 = flatten_layer(Dot43170, Fla26448), 
LMul58769 = multiply_layer([[[[[0.7747, 0.6256]]]], [[[[0.1016, 0.5009]]]]], Mul58769), 
LRes19177 = reshape_layer(Mul58769, [1, 2], Res19177), 
LCro14706 = cropping1D_layer(Res19177, 0, 0, Cro14706), 
LRes36912 = reshape_layer(Cro14706, [1, 2, 1], Res36912), 
LGlo71013 = global_average_pooling2D_layer(Res36912, Glo71013), 
LCon84827 = concatenate_layer([Glo71013,[[0.2814, 0.3467, 0.7053, 0.4512, 0.6417, 0.0674, 0.2066, 0.1767]]], 1, Con84827), 
LMul39307 = multiply_layer([Fla26448,Con84827], Mul39307), 
LBat14660 = batch_normalization_layer([[1.2099, 1.1047, 1.0713]], 1, 0.221067713448707, [0.9836, 0.9186, 0.7191], [0.8579, 0.4671, 0.5879], [0.7397, 0.7802, 0.1827], [0.2781, 0.0582, 0.5996], Bat14660), 
LReL75751 = relu_layer(Bat14660, 0.7227450382390824, 0.3988263638735775, 7.285797332654048, ReL75751), 
LRes2007 = reshape_layer(ReL75751, [3, 1], Res2007), 
LRes20865 = reshape_layer(Res2007, [3, 1, 1], Res20865), 
LRes62559 = reshape_layer(Res20865, [3, 1, 1, 1], Res62559), 
LGlo9974 = global_average_pooling3D_layer(Res62559, Glo9974), 
LCon35366 = concatenate_layer([Glo9974,[[0.7322, 0.3731, 0.1064, 0.1203, 0.3638, 0.0251, 0.5451, 0.0913]]], 1, Con35366), 
LMin10611 = minimum_layer([Mul39307,Con35366], Min10611), 
exec_layers([LDot43170,LFla26448,LMul58769,LRes19177,LCro14706,LRes36912,LGlo71013,LCon84827,LMul39307,LBat14660,LReL75751,LRes2007,LRes20865,LRes62559,LGlo9974,LCon35366,LMin10611],["Dot43170","Fla26448","Mul58769","Res19177","Cro14706","Res36912","Glo71013","Con84827","Mul39307","Bat14660","ReL75751","Res2007","Res20865","Res62559","Glo9974","Con35366","Min10611"],Min10611,"Min10611")

Actual (Unparsed): [[-2.3956782, 0.1175248, 0.0886107, 0.1064000, 0.1203000, 0.1137927, 0.0251000, 0.2240913, 0.0729705]]

Expected (Unparsed): [[-2.395678211378751,0.117524847132,0.08861069544000001,0.1064,0.1203,0.11379266100000002,0.0251,0.22409135513999998,0.072970512624]]

Actual:   [[-2.3956, 0.1176, 0.0887, 0.1064, 0.1203, 0.1138, 0.0251, 0.2241, 0.073]]

Expected: [[-2.3956, 0.1176, 0.0887, 0.1064, 0.1203, 0.1138, 0.0251, 0.2241, 0.073]]