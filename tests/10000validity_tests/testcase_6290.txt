import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Ave25584 = tf.keras.layers.Input(shape=([2, 2]))
in1Ave25584 = tf.keras.layers.Input(shape=([2, 2]))

Ave25584 = keras.layers.Average(name = 'Ave25584', )([in0Ave25584,in1Ave25584])
Den22971 = keras.layers.Dense(2,name = 'Den22971', )(Ave25584)
model = tf.keras.models.Model(inputs=[in0Ave25584,in1Ave25584], outputs=Den22971)
w = model.get_layer('Den22971').get_weights() 
w[0] = np.array([[0.6774, 0.8784], [0.1328, 0.4637]])
w[1] = np.array([0.9507, 0.5041])
model.get_layer('Den22971').set_weights(w) 
in0Ave25584 = tf.constant([[[0.7434, 0.0259], [0.5006, 0.7271]]])
in1Ave25584 = tf.constant([[[0.8572, 0.9164], [0.5247, 0.2128]]])
print (np.array2string(model.predict([in0Ave25584,in1Ave25584],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Den22971.png')

LAve25584 = average_layer([[[[0.7434, 0.0259], [0.5006, 0.7271]]], [[[0.8572, 0.9164], [0.5247, 0.2128]]]], Ave25584), 
LDen22971 = dense_layer(Ave25584, [[0.6774, 0.8784], [0.1328, 0.4637]],[0.9507, 0.5041], Den22971), 
exec_layers([LAve25584,LDen22971],["Ave25584","Den22971"],Den22971,"Den22971")

Actual (Unparsed): [[[1.5553919, 1.4255558], [1.3603785, 1.1723276]]]

Expected (Unparsed): [[[1.55539194,1.4255557749999999],[1.36037847,1.172327575]]]

Actual:   [[[1.5554, 1.4256], [1.3604, 1.1724]]]

Expected: [[[1.5554, 1.4256], [1.3604, 1.1724]]]