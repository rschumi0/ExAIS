import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Lay57506 = tf.keras.layers.Input(shape=([1, 4]))
in0Cro14536 = tf.keras.layers.Input(shape=([2, 4, 2, 1]))
in0Con63101 = tf.keras.layers.Input(shape=([3, 6, 1]))
in0Sub7824 = tf.keras.layers.Input(shape=([3, 2, 2]))
in1Sub7824 = tf.keras.layers.Input(shape=([3, 2, 2]))
in0Thr89685 = tf.keras.layers.Input(shape=([2, 2, 1]))
in0Con63556 = tf.keras.layers.Input(shape=([3, 2, 1]))

Lay57506 = keras.layers.LayerNormalization(axis=2, epsilon=2.494505513595223, name = 'Lay57506', )(in0Lay57506)
Res9791 = keras.layers.Reshape((1, 4, 1), name = 'Res9791', )(Lay57506)
Res23448 = keras.layers.Reshape((1, 4, 1, 1), name = 'Res23448', )(Res9791)
Cro14536 = keras.layers.Cropping3D(cropping=((1, 0), (2, 0), (1, 0)), name = 'Cro14536', )(in0Cro14536)
Zer67980 = keras.layers.ZeroPadding3D(padding=((0, 0), (2, 0), (0, 0)), name = 'Zer67980', )(Cro14536)
Sub45844 = keras.layers.Subtract(name = 'Sub45844', )([Res23448,Zer67980])
Res65307 = keras.layers.Reshape((1, 4, 1), name = 'Res65307', )(Sub45844)
Zer2188 = keras.layers.ZeroPadding2D(padding=((2, 0), (2, 0)), name = 'Zer2188', )(Res65307)
Con63101 = keras.layers.Concatenate(axis=3, name = 'Con63101', )([Zer2188,in0Con63101])
Sub7824 = keras.layers.Subtract(name = 'Sub7824', )([in0Sub7824,in1Sub7824])
Thr89685 = keras.layers.ThresholdedReLU(theta=8.305372859419355, name = 'Thr89685', input_shape=(2, 2, 1))(in0Thr89685)
Zer63487 = keras.layers.ZeroPadding2D(padding=((1, 0), (0, 0)), name = 'Zer63487', )(Thr89685)
Con63556 = keras.layers.Concatenate(axis=3, name = 'Con63556', )([Zer63487,in0Con63556])
Min13467 = keras.layers.Minimum(name = 'Min13467', )([Sub7824,Con63556])
Zer61041 = keras.layers.ZeroPadding2D(padding=((0, 0), (4, 0)), name = 'Zer61041', )(Min13467)
Add97958 = keras.layers.Add(name = 'Add97958', )([Con63101,Zer61041])
Loc2116 = keras.layers.LocallyConnected2D(3, (2, 5),strides=(1, 1), name = 'Loc2116', )(Add97958)
model = tf.keras.models.Model(inputs=[in0Lay57506,in0Cro14536,in0Con63101,in0Sub7824,in1Sub7824,in0Thr89685,in0Con63556], outputs=Loc2116)
w = model.get_layer('Loc2116').get_weights() 
w[0] = np.array([[[0.7932, 0.7283, 0.0955], [0.5564, 0.579, 0.8193], [0.3949, 0.1226, 0.9499], [0.8151, 0.3444, 0.4659], [0.7572, 0.3174, 0.0498], [0.9454, 0.3417, 0.913], [0.7943, 0.1178, 0.3414], [0.0627, 0.6586, 0.3039], [0.5644, 0.6217, 0.1123], [0.9349, 0.4344, 0.9485], [0.5431, 0.9246, 0.6303], [0.6427, 0.3174, 0.5412], [0.9306, 0.5766, 0.3722], [0.5099, 0.9472, 0.0272], [0.5269, 0.3686, 0.3869], [0.4032, 0.6745, 0.42], [0.7144, 0.268, 0.7601], [0.976, 0.6079, 0.1057], [0.9894, 0.974, 0.3943], [0.5516, 0.0225, 0.4596]], [[0.732, 0.6122, 0.0023], [0.8769, 0.1703, 0.7387], [0.1433, 0.5842, 0.8515], [0.4859, 0.2646, 0.5242], [0.5519, 0.8866, 0.0879], [0.5128, 0.4543, 0.6036], [0.3426, 0.1893, 0.5361], [0.3827, 0.7191, 0.2649], [0.2202, 0.3225, 0.4962], [0.3473, 0.9851, 0.0039], [0.2294, 0.2812, 0.9587], [0.574, 0.2331, 0.6385], [0.1323, 0.4689, 0.7165], [0.7253, 0.7216, 0.578], [0.3365, 0.2262, 0.3742], [0.2992, 0.6255, 0.3989], [0.378, 0.1184, 0.2144], [0.5531, 0.7605, 0.0564], [0.0297, 0.4012, 0.1839], [0.5702, 0.668, 0.7487]], [[0.8411, 0.2705, 0.973], [0.9118, 0.1344, 0.1214], [0.4263, 0.193, 0.7813], [0.6277, 0.3469, 0.7234], [0.1316, 0.8801, 0.0458], [0.99, 0.9041, 0.2319], [0.0241, 0.4064, 0.2544], [0.8077, 0.0214, 0.3548], [0.0712, 0.0083, 0.2215], [0.2324, 0.6652, 0.6708], [0.2071, 0.1677, 0.5616], [0.5634, 0.3155, 0.2356], [0.9381, 0.4529, 0.8946], [0.2008, 0.3584, 0.0705], [0.583, 0.0416, 0.8448], [0.9159, 0.1462, 0.7689], [0.0048, 0.9942, 0.5883], [0.3426, 0.8822, 0.2552], [0.23, 0.8104, 0.4374], [0.7226, 0.1917, 0.1466]], [[0.0778, 0.0379, 0.2567], [0.6507, 0.4594, 0.4225], [0.3998, 0.182, 0.8571], [0.8661, 0.3626, 0.9535], [0.7622, 0.6838, 0.5324], [0.0832, 0.0096, 0.4573], [0.0397, 0.6124, 0.6559], [0.7703, 0.4264, 0.2394], [0.0371, 0.0821, 0.4578], [0.5878, 0.9193, 0.5432], [0.6514, 0.433, 0.4198], [0.5517, 0.8785, 0.9419], [0.429, 0.3725, 0.9581], [0.6478, 0.5862, 0.1963], [0.5067, 0.5776, 0.4785], [0.6049, 0.4336, 0.6761], [0.6207, 0.5249, 0.3795], [0.4328, 0.9462, 0.4021], [0.0843, 0.4021, 0.9957], [0.51, 0.1378, 0.1359]]])
w[1] = np.array([[[0, 0, 0], [0, 0, 0]], [[0, 0, 0], [0, 0, 0]]])
model.get_layer('Loc2116').set_weights(w) 
in0Lay57506 = tf.constant([[[1.4674, 1.0647, 1.5197, 1.2722]]])
in0Cro14536 = tf.constant([[[[[1.1651], [1.9015]], [[1.8729], [1.0629]], [[1.4852], [1.4162]], [[1.7543], [1.232]]], [[[1.7864], [1.1287]], [[1.3183], [1.0953]], [[1.2658], [1.676]], [[1.9204], [1.8525]]]]])
in0Con63101 = tf.constant([[[[0.3721], [0.3445], [0.886], [0.0502], [0.9931], [0.9633]], [[0.4303], [0.8881], [0.8442], [0.6883], [0.8436], [0.7387]], [[0.9257], [0.2508], [0.5357], [0.7186], [0.6856], [0.0715]]]])
in0Sub7824 = tf.constant([[[[0.0949, 0.405], [0.3318, 0.5992]], [[0.5877, 0.3997], [0.0389, 0.0765]], [[0.4247, 0.7879], [0.6501, 0.3]]]])
in1Sub7824 = tf.constant([[[[0.8418, 0.4677], [0.2119, 0.0283]], [[0.6058, 0.9751], [0.5358, 0.6233]], [[0.5458, 0.073], [0.4797, 0.2319]]]])
in0Thr89685 = tf.constant([[[[0.3872], [0.7838]], [[0.4918], [0.3736]]]])
in0Con63556 = tf.constant([[[[0.3958], [0.0377]], [[0.9491], [0.4229]], [[0.7882], [0.0015]]]])
print (np.array2string(model.predict([in0Lay57506,in0Cro14536,in0Con63101,in0Sub7824,in1Sub7824,in0Thr89685,in0Con63556],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Loc2116.png')

LLay57506 = layer_normalization_layer([[[1.4674, 1.0647, 1.5197, 1.2722]]], 2, 2.494505513595223, Lay57506), 
LRes9791 = reshape_layer(Lay57506, [1, 4, 1], Res9791), 
LRes23448 = reshape_layer(Res9791, [1, 4, 1, 1], Res23448), 
LCro14536 = cropping3D_layer([[[[[1.1651], [1.9015]], [[1.8729], [1.0629]], [[1.4852], [1.4162]], [[1.7543], [1.232]]], [[[1.7864], [1.1287]], [[1.3183], [1.0953]], [[1.2658], [1.676]], [[1.9204], [1.8525]]]]], 1, 0, 2, 0, 1, 0, Cro14536), 
LZer67980 = zero_padding3D_layer(Cro14536, 0, 0, 2, 0, 0, 0, Zer67980), 
LSub45844 = subtract_layer(Res23448,Zer67980, Sub45844), 
LRes65307 = reshape_layer(Sub45844, [1, 4, 1], Res65307), 
LZer2188 = zero_padding2D_layer(Res65307, 2, 0, 2, 0, Zer2188), 
LCon63101 = concatenate_layer([Zer2188,[[[[0.3721], [0.3445], [0.886], [0.0502], [0.9931], [0.9633]], [[0.4303], [0.8881], [0.8442], [0.6883], [0.8436], [0.7387]], [[0.9257], [0.2508], [0.5357], [0.7186], [0.6856], [0.0715]]]]], 3, Con63101), 
LSub7824 = subtract_layer([[[[0.0949, 0.405], [0.3318, 0.5992]], [[0.5877, 0.3997], [0.0389, 0.0765]], [[0.4247, 0.7879], [0.6501, 0.3]]]], [[[[0.8418, 0.4677], [0.2119, 0.0283]], [[0.6058, 0.9751], [0.5358, 0.6233]], [[0.5458, 0.073], [0.4797, 0.2319]]]], Sub7824), 
LThr89685 = thresholded_relu_layer([[[[0.3872], [0.7838]], [[0.4918], [0.3736]]]], 8.305372859419355, Thr89685), 
LZer63487 = zero_padding2D_layer(Thr89685, 1, 0, 0, 0, Zer63487), 
LCon63556 = concatenate_layer([Zer63487,[[[[0.3958], [0.0377]], [[0.9491], [0.4229]], [[0.7882], [0.0015]]]]], 3, Con63556), 
LMin13467 = minimum_layer([Sub7824,Con63556], Min13467), 
LZer61041 = zero_padding2D_layer(Min13467, 0, 0, 4, 0, Zer61041), 
LAdd97958 = add_layer([Con63101,Zer61041], Add97958), 
LLoc2116 = locally_connected2D_layer(Add97958, 2, 5,[[[0.7932, 0.7283, 0.0955], [0.5564, 0.579, 0.8193], [0.3949, 0.1226, 0.9499], [0.8151, 0.3444, 0.4659], [0.7572, 0.3174, 0.0498], [0.9454, 0.3417, 0.913], [0.7943, 0.1178, 0.3414], [0.0627, 0.6586, 0.3039], [0.5644, 0.6217, 0.1123], [0.9349, 0.4344, 0.9485], [0.5431, 0.9246, 0.6303], [0.6427, 0.3174, 0.5412], [0.9306, 0.5766, 0.3722], [0.5099, 0.9472, 0.0272], [0.5269, 0.3686, 0.3869], [0.4032, 0.6745, 0.42], [0.7144, 0.268, 0.7601], [0.976, 0.6079, 0.1057], [0.9894, 0.974, 0.3943], [0.5516, 0.0225, 0.4596]], [[0.732, 0.6122, 0.0023], [0.8769, 0.1703, 0.7387], [0.1433, 0.5842, 0.8515], [0.4859, 0.2646, 0.5242], [0.5519, 0.8866, 0.0879], [0.5128, 0.4543, 0.6036], [0.3426, 0.1893, 0.5361], [0.3827, 0.7191, 0.2649], [0.2202, 0.3225, 0.4962], [0.3473, 0.9851, 0.0039], [0.2294, 0.2812, 0.9587], [0.574, 0.2331, 0.6385], [0.1323, 0.4689, 0.7165], [0.7253, 0.7216, 0.578], [0.3365, 0.2262, 0.3742], [0.2992, 0.6255, 0.3989], [0.378, 0.1184, 0.2144], [0.5531, 0.7605, 0.0564], [0.0297, 0.4012, 0.1839], [0.5702, 0.668, 0.7487]], [[0.8411, 0.2705, 0.973], [0.9118, 0.1344, 0.1214], [0.4263, 0.193, 0.7813], [0.6277, 0.3469, 0.7234], [0.1316, 0.8801, 0.0458], [0.99, 0.9041, 0.2319], [0.0241, 0.4064, 0.2544], [0.8077, 0.0214, 0.3548], [0.0712, 0.0083, 0.2215], [0.2324, 0.6652, 0.6708], [0.2071, 0.1677, 0.5616], [0.5634, 0.3155, 0.2356], [0.9381, 0.4529, 0.8946], [0.2008, 0.3584, 0.0705], [0.583, 0.0416, 0.8448], [0.9159, 0.1462, 0.7689], [0.0048, 0.9942, 0.5883], [0.3426, 0.8822, 0.2552], [0.23, 0.8104, 0.4374], [0.7226, 0.1917, 0.1466]], [[0.0778, 0.0379, 0.2567], [0.6507, 0.4594, 0.4225], [0.3998, 0.182, 0.8571], [0.8661, 0.3626, 0.9535], [0.7622, 0.6838, 0.5324], [0.0832, 0.0096, 0.4573], [0.0397, 0.6124, 0.6559], [0.7703, 0.4264, 0.2394], [0.0371, 0.0821, 0.4578], [0.5878, 0.9193, 0.5432], [0.6514, 0.433, 0.4198], [0.5517, 0.8785, 0.9419], [0.429, 0.3725, 0.9581], [0.6478, 0.5862, 0.1963], [0.5067, 0.5776, 0.4785], [0.6049, 0.4336, 0.6761], [0.6207, 0.5249, 0.3795], [0.4328, 0.9462, 0.4021], [0.0843, 0.4021, 0.9957], [0.51, 0.1378, 0.1359]]],[[[0, 0, 0], [0, 0, 0]], [[0, 0, 0], [0, 0, 0]]], 1, 1, Loc2116), 
exec_layers([LLay57506,LRes9791,LRes23448,LCro14536,LZer67980,LSub45844,LRes65307,LZer2188,LCon63101,LSub7824,LThr89685,LZer63487,LCon63556,LMin13467,LZer61041,LAdd97958,LLoc2116],["Lay57506","Res9791","Res23448","Cro14536","Zer67980","Sub45844","Res65307","Zer2188","Con63101","Sub7824","Thr89685","Zer63487","Con63556","Min13467","Zer61041","Add97958","Loc2116"],Loc2116,"Loc2116")

Actual (Unparsed): [[[[3.6484802, 2.5637388, 2.8886252], [2.7703355, 3.2070358, 1.9922816]], [[4.3864827, 1.1616752, 1.5867516], [1.9808603, 1.4352026, 0.3080512]]]]

Expected (Unparsed): [[[[3.64848015,2.56373876,2.88862527],[2.77033554,3.2070358399999996,1.99228162]],[[4.386482645029659,1.1616751674274564,1.5867515795907567],[1.9808603313836308,1.435202596760953,0.30805112890007813]]]]

Actual:   [[[[3.6485, 2.5638, 2.8887], [2.7704, 3.2071, 1.9923]], [[4.3865, 1.1617, 1.5868], [1.9809, 1.4353, 0.3081]]]]

Expected: [[[[3.6485, 2.5638, 2.8887], [2.7704, 3.2071, 1.9923]], [[4.3865, 1.1617, 1.5868], [1.9809, 1.4353, 0.3081]]]]