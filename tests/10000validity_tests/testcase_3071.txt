import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Sep66380 = tf.keras.layers.Input(shape=([1, 2]))
in0Add37864 = tf.keras.layers.Input(shape=([1, 1]))
in1Add37864 = tf.keras.layers.Input(shape=([1, 1]))
in0Con82408 = tf.keras.layers.Input(shape=([6, 17]))

Sep66380 = keras.layers.SeparableConv1D(3, (1),strides=(1), padding='valid', name = 'Sep66380', )(in0Sep66380)
Res30416 = keras.layers.Reshape((1, 3, 1), name = 'Res30416', )(Sep66380)
Res14755 = keras.layers.Reshape((1, 3, 1, 1), name = 'Res14755', )(Res30416)
Con73154 = keras.layers.Conv3DTranspose(3, (1, 2, 1),strides=(6, 2, 1), padding='valid', name = 'Con73154', )(Res14755)
Mas73821 = keras.layers.Masking(mask_value=2, name = 'Mas73821', )(Con73154)
Res45670 = keras.layers.Reshape((6, 6, 3), name = 'Res45670', )(Mas73821)
Res60955 = keras.layers.Reshape((6, 18), name = 'Res60955', )(Res45670)
Add37864 = keras.layers.Add(name = 'Add37864', )([in0Add37864,in1Add37864])
Zer53120 = keras.layers.ZeroPadding1D(padding=((5, 0)), name = 'Zer53120', )(Add37864)
Con82408 = keras.layers.Concatenate(axis=2, name = 'Con82408', )([Zer53120,in0Con82408])
Max27455 = keras.layers.Maximum(name = 'Max27455', )([Res60955,Con82408])
model = tf.keras.models.Model(inputs=[in0Sep66380,in0Add37864,in1Add37864,in0Con82408], outputs=Max27455)
w = model.get_layer('Sep66380').get_weights() 
w[0] = np.array([[[0.2473], [0.9718]]])
w[1] = np.array([[[0.9036, 0.619, 0.8377], [0.8407, 0.3519, 0.505]]])
w[2] = np.array([0, 0, 0])
model.get_layer('Sep66380').set_weights(w) 
w = model.get_layer('Con73154').get_weights() 
w[0] = np.array([[[[[0.6708], [0.9931], [0.1947]]], [[[0.3041], [0.3281], [0.8569]]]]])
w[1] = np.array([0, 0, 0])
model.get_layer('Con73154').set_weights(w) 
in0Sep66380 = tf.constant([[[0.3773, 0.4768]]])
in0Add37864 = tf.constant([[[0.6427]]])
in1Add37864 = tf.constant([[[0.2631]]])
in0Con82408 = tf.constant([[[0.0228, 0.9703, 0.613, 0.2871, 0.797, 0.9341, 0.501, 0.2819, 0.0917, 0.0444, 0.8456, 0.1008, 0.4074, 0.0651, 0.6729, 0.7921, 0.2932], [0.0182, 0.4478, 0.9688, 0.7041, 0.6581, 0.7584, 0.6341, 0.0762, 0.3797, 0.9095, 0.4887, 0.7154, 0.057, 0.5257, 0.6329, 0.5794, 0.1813], [0.3293, 0.1523, 0.4316, 0.1972, 0.233, 0.8076, 0.6454, 0.1183, 0.7689, 0.9374, 0.6474, 0.345, 0.6576, 0.724, 0.0986, 0.1062, 0.0175], [0.1772, 0.4383, 0.0957, 0.3108, 0.5415, 0.3376, 0.6891, 0.628, 0.3513, 0.9447, 0.5875, 0.3246, 0.0218, 0.5436, 0.8607, 0.3398, 0.6926], [0.3916, 0.1381, 0.7512, 0.0205, 0.0549, 0.1308, 0.251, 0.7554, 0.5181, 0.7608, 0.2613, 0.2299, 0.7083, 0.9177, 0.3532, 0.3385, 0.8441], [0.2677, 0.4805, 0.1939, 0.199, 0.6009, 0.2919, 0.4079, 0.4479, 0.9158, 0.4525, 0.8626, 0.7584, 0.8138, 0.466, 0.9149, 0.182, 0.8052]]])
print (np.array2string(model.predict([in0Sep66380,in0Add37864,in1Add37864,in0Con82408],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Max27455.png')

LSep66380 = separable_conv1D_layer([[[0.3773, 0.4768]]], 1,[[[[0.2473], [0.9718]]],[[[0.9036, 0.619, 0.8377], [0.8407, 0.3519, 0.505]]]],[0, 0, 0], 1, false, Sep66380), 
LRes30416 = reshape_layer(Sep66380, [1, 3, 1], Res30416), 
LRes14755 = reshape_layer(Res30416, [1, 3, 1, 1], Res14755), 
LCon73154 = conv3D_transpose_layer(Res14755, 1, 2, 1,[[[[[0.6708], [0.9931], [0.1947]]], [[[0.3041], [0.3281], [0.8569]]]]],[0, 0, 0], 6, 2, 1, false, Con73154), 
LMas73821 = masking_layer(Con73154, 2, Mas73821), 
LRes45670 = reshape_layer(Mas73821, [6, 6, 3], Res45670), 
LRes60955 = reshape_layer(Res45670, [6, 18], Res60955), 
LAdd37864 = add_layer([[[[0.6427]]], [[[0.2631]]]], Add37864), 
LZer53120 = zero_padding1D_layer(Add37864, 5, 0, Zer53120), 
LCon82408 = concatenate_layer([Zer53120,[[[0.0228, 0.9703, 0.613, 0.2871, 0.797, 0.9341, 0.501, 0.2819, 0.0917, 0.0444, 0.8456, 0.1008, 0.4074, 0.0651, 0.6729, 0.7921, 0.2932], [0.0182, 0.4478, 0.9688, 0.7041, 0.6581, 0.7584, 0.6341, 0.0762, 0.3797, 0.9095, 0.4887, 0.7154, 0.057, 0.5257, 0.6329, 0.5794, 0.1813], [0.3293, 0.1523, 0.4316, 0.1972, 0.233, 0.8076, 0.6454, 0.1183, 0.7689, 0.9374, 0.6474, 0.345, 0.6576, 0.724, 0.0986, 0.1062, 0.0175], [0.1772, 0.4383, 0.0957, 0.3108, 0.5415, 0.3376, 0.6891, 0.628, 0.3513, 0.9447, 0.5875, 0.3246, 0.0218, 0.5436, 0.8607, 0.3398, 0.6926], [0.3916, 0.1381, 0.7512, 0.0205, 0.0549, 0.1308, 0.251, 0.7554, 0.5181, 0.7608, 0.2613, 0.2299, 0.7083, 0.9177, 0.3532, 0.3385, 0.8441], [0.2677, 0.4805, 0.1939, 0.199, 0.6009, 0.2919, 0.4079, 0.4479, 0.9158, 0.4525, 0.8626, 0.7584, 0.8138, 0.466, 0.9149, 0.182, 0.8052]]]], 2, Con82408), 
LMax27455 = maximum_layer([Res60955,Con82408], Max27455), 
exec_layers([LSep66380,LRes30416,LRes14755,LCon73154,LMas73821,LRes45670,LRes60955,LAdd37864,LZer53120,LCon82408,LMax27455],["Sep66380","Res30416","Res14755","Con73154","Mas73821","Res45670","Res60955","Add37864","Zer53120","Con82408","Max27455"],Max27455,"Max27455")

Actual (Unparsed): [[[0.3178609, 0.4705839, 0.9703000, 0.6130000, 0.2871000, 0.7970000, 0.9341000, 0.5010000, 0.2819000, 0.0917000, 0.0724481, 0.8456000, 0.2093946, 0.4074000, 0.0651000, 0.6729000, 0.7921000, 0.2932000], [0.0000000, 0.0182000, 0.4478000, 0.9688000, 0.7041000, 0.6581000, 0.7584000, 0.6341000, 0.0762000, 0.3797000, 0.9095000, 0.4887000, 0.7154000, 0.0570000, 0.5257000, 0.6329000, 0.5794000, 0.1813000], [0.0000000, 0.3293000, 0.1523000, 0.4316000, 0.1972000, 0.2330000, 0.8076000, 0.6454000, 0.1183000, 0.7689000, 0.9374000, 0.6474000, 0.3450000, 0.6576000, 0.7240000, 0.0986000, 0.1062000, 0.0175000], [0.0000000, 0.1772000, 0.4383000, 0.0957000, 0.3108000, 0.5415000, 0.3376000, 0.6891000, 0.6280000, 0.3513000, 0.9447000, 0.5875000, 0.3246000, 0.0218000, 0.5436000, 0.8607000, 0.3398000, 0.6926000], [0.0000000, 0.3916000, 0.1381000, 0.7512000, 0.0205000, 0.0549000, 0.1308000, 0.2510000, 0.7554000, 0.5181000, 0.7608000, 0.2613000, 0.2299000, 0.7083000, 0.9177000, 0.3532000, 0.3385000, 0.8441000], [0.9058000, 0.2677000, 0.4805000, 0.1939000, 0.1990000, 0.6009000, 0.2919000, 0.4079000, 0.4479000, 0.9158000, 0.4525000, 0.8626000, 0.7584000, 0.8138000, 0.4660000, 0.9149000, 0.1820000, 0.8052000]]]

Expected (Unparsed): [[[0.31786090983060955,0.47058388424683717,0.9703,0.613,0.2871,0.797,0.9341,0.501,0.2819,0.0917,0.0724480728807046,0.8456,0.20939462737937636,0.4074,0.0651,0.6729,0.7921,0.2932],[0,0.0182,0.4478,0.9688,0.7041,0.6581,0.7584,0.6341,0.0762,0.3797,0.9095,0.4887,0.7154,0.057,0.5257,0.6329,0.5794,0.1813],[0,0.3293,0.1523,0.4316,0.1972,0.233,0.8076,0.6454,0.1183,0.7689,0.9374,0.6474,0.345,0.6576,0.724,0.0986,0.1062,0.0175],[0,0.1772,0.4383,0.0957,0.3108,0.5415,0.3376,0.6891,0.628,0.3513,0.9447,0.5875,0.3246,0.0218,0.5436,0.8607,0.3398,0.6926],[0,0.3916,0.1381,0.7512,0.0205,0.0549,0.1308,0.251,0.7554,0.5181,0.7608,0.2613,0.2299,0.7083,0.9177,0.3532,0.3385,0.8441],[0.9058,0.2677,0.4805,0.1939,0.199,0.6009,0.2919,0.4079,0.4479,0.9158,0.4525,0.8626,0.7584,0.8138,0.466,0.9149,0.182,0.8052]]]

Actual:   [[[0.3179, 0.4706, 0.9703, 0.613, 0.2871, 0.797, 0.9341, 0.501, 0.2819, 0.0917, 0.0725, 0.8456, 0.2094, 0.4074, 0.0651, 0.6729, 0.7921, 0.2932], [0, 0.0182, 0.4478, 0.9688, 0.7041, 0.6581, 0.7584, 0.6341, 0.0762, 0.3797, 0.9095, 0.4887, 0.7154, 0.057, 0.5257, 0.6329, 0.5794, 0.1813], [0, 0.3293, 0.1523, 0.4316, 0.1972, 0.233, 0.8076, 0.6454, 0.1183, 0.7689, 0.9374, 0.6474, 0.345, 0.6576, 0.724, 0.0986, 0.1062, 0.0175], [0, 0.1772, 0.4383, 0.0957, 0.3108, 0.5415, 0.3376, 0.6891, 0.628, 0.3513, 0.9447, 0.5875, 0.3246, 0.0218, 0.5436, 0.8607, 0.3398, 0.6926], [0, 0.3916, 0.1381, 0.7512, 0.0205, 0.0549, 0.1308, 0.251, 0.7554, 0.5181, 0.7608, 0.2613, 0.2299, 0.7083, 0.9177, 0.3532, 0.3385, 0.8441], [0.9058, 0.2677, 0.4805, 0.1939, 0.199, 0.6009, 0.2919, 0.4079, 0.4479, 0.9158, 0.4525, 0.8626, 0.7584, 0.8138, 0.466, 0.9149, 0.182, 0.8052]]]

Expected: [[[0.3179, 0.4706, 0.9703, 0.613, 0.2871, 0.797, 0.9341, 0.501, 0.2819, 0.0917, 0.0725, 0.8456, 0.2094, 0.4074, 0.0651, 0.6729, 0.7921, 0.2932], [0, 0.0182, 0.4478, 0.9688, 0.7041, 0.6581, 0.7584, 0.6341, 0.0762, 0.3797, 0.9095, 0.4887, 0.7154, 0.057, 0.5257, 0.6329, 0.5794, 0.1813], [0, 0.3293, 0.1523, 0.4316, 0.1972, 0.233, 0.8076, 0.6454, 0.1183, 0.7689, 0.9374, 0.6474, 0.345, 0.6576, 0.724, 0.0986, 0.1062, 0.0175], [0, 0.1772, 0.4383, 0.0957, 0.3108, 0.5415, 0.3376, 0.6891, 0.628, 0.3513, 0.9447, 0.5875, 0.3246, 0.0218, 0.5436, 0.8607, 0.3398, 0.6926], [0, 0.3916, 0.1381, 0.7512, 0.0205, 0.0549, 0.1308, 0.251, 0.7554, 0.5181, 0.7608, 0.2613, 0.2299, 0.7083, 0.9177, 0.3532, 0.3385, 0.8441], [0.9058, 0.2677, 0.4805, 0.1939, 0.199, 0.6009, 0.2919, 0.4079, 0.4479, 0.9158, 0.4525, 0.8626, 0.7584, 0.8138, 0.466, 0.9149, 0.182, 0.8052]]]