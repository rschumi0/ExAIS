import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Add84996 = tf.keras.layers.Input(shape=([2, 1, 2]))
in1Add84996 = tf.keras.layers.Input(shape=([2, 1, 2]))
in0Con87080 = tf.keras.layers.Input(shape=([3, 1]))
in0Zer17141 = tf.keras.layers.Input(shape=([1, 3]))
in0Con98940 = tf.keras.layers.Input(shape=([6, 1]))
in0Con8806 = tf.keras.layers.Input(shape=([1, 1, 1]))

Add84996 = keras.layers.Add(name = 'Add84996', )([in0Add84996,in1Add84996])
Res51995 = keras.layers.Reshape((2, 2), name = 'Res51995', )(Add84996)
Zer7772 = keras.layers.ZeroPadding1D(padding=((1, 0)), name = 'Zer7772', )(Res51995)
Con87080 = keras.layers.Concatenate(axis=2, name = 'Con87080', )([Zer7772,in0Con87080])
Zer17141 = keras.layers.ZeroPadding1D(padding=((1, 1)), name = 'Zer17141', )(in0Zer17141)
Sub90865 = keras.layers.Subtract(name = 'Sub90865', )([Con87080,Zer17141])
Up_29017 = keras.layers.UpSampling1D(size=(2), name = 'Up_29017', )(Sub90865)
Con98940 = keras.layers.Concatenate(axis=2, name = 'Con98940', )([Up_29017,in0Con98940])
Con8806 = keras.layers.Conv2D(4, (1, 1),strides=(1, 1), padding='valid', dilation_rate=(1, 1), name = 'Con8806', )(in0Con8806)
Res49744 = keras.layers.Reshape((1, 4), name = 'Res49744', )(Con8806)
Mas33053 = keras.layers.Masking(mask_value=1, name = 'Mas33053', )(Res49744)
Cro24243 = keras.layers.Cropping1D(cropping=((0, 0)), name = 'Cro24243', )(Mas33053)
Zer55269 = keras.layers.ZeroPadding1D(padding=((5, 0)), name = 'Zer55269', )(Cro24243)
Add52707 = keras.layers.Add(name = 'Add52707', )([Con98940,Zer55269])
model = tf.keras.models.Model(inputs=[in0Add84996,in1Add84996,in0Con87080,in0Zer17141,in0Con98940,in0Con8806], outputs=Add52707)
w = model.get_layer('Con8806').get_weights() 
w[0] = np.array([[[[0.0616, 0.9643, 0.9149, 0.0991]]]])
w[1] = np.array([0, 0, 0, 0])
model.get_layer('Con8806').set_weights(w) 
in0Add84996 = tf.constant([[[[0.2377, 0.1076]], [[0.612, 0.9654]]]])
in1Add84996 = tf.constant([[[[0.1123, 0.8885]], [[0.4212, 0.2102]]]])
in0Con87080 = tf.constant([[[0.7737], [0.0579], [0.6735]]])
in0Zer17141 = tf.constant([[[1.0208, 1.5716, 1.3534]]])
in0Con98940 = tf.constant([[[0.2796], [0.8107], [0.2639], [0.1359], [0.4534], [0.494]]])
in0Con8806 = tf.constant([[[[0.4977]]]])
print (np.array2string(model.predict([in0Add84996,in1Add84996,in0Con87080,in0Zer17141,in0Con98940,in0Con8806],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Add52707.png')

LAdd84996 = add_layer([[[[[0.2377, 0.1076]], [[0.612, 0.9654]]]], [[[[0.1123, 0.8885]], [[0.4212, 0.2102]]]]], Add84996), 
LRes51995 = reshape_layer(Add84996, [2, 2], Res51995), 
LZer7772 = zero_padding1D_layer(Res51995, 1, 0, Zer7772), 
LCon87080 = concatenate_layer([Zer7772,[[[0.7737], [0.0579], [0.6735]]]], 2, Con87080), 
LZer17141 = zero_padding1D_layer([[[1.0208, 1.5716, 1.3534]]], 1, 1, Zer17141), 
LSub90865 = subtract_layer(Con87080,Zer17141, Sub90865), 
LUp_29017 = up_sampling1D_layer(Sub90865, 2, Up_29017), 
LCon98940 = concatenate_layer([Up_29017,[[[0.2796], [0.8107], [0.2639], [0.1359], [0.4534], [0.494]]]], 2, Con98940), 
LCon8806 = conv2D_layer([[[[0.4977]]]], 1, 1,[[[[0.0616, 0.9643, 0.9149, 0.0991]]]],[0, 0, 0, 0], 1, 1, false, 1, 1, Con8806), 
LRes49744 = reshape_layer(Con8806, [1, 4], Res49744), 
LMas33053 = masking_layer(Res49744, 1, Mas33053), 
LCro24243 = cropping1D_layer(Mas33053, 0, 0, Cro24243), 
LZer55269 = zero_padding1D_layer(Cro24243, 5, 0, Zer55269), 
LAdd52707 = add_layer([Con98940,Zer55269], Add52707), 
exec_layers([LAdd84996,LRes51995,LZer7772,LCon87080,LZer17141,LSub90865,LUp_29017,LCon98940,LCon8806,LRes49744,LMas33053,LCro24243,LZer55269,LAdd52707],["Add84996","Res51995","Zer7772","Con87080","Zer17141","Sub90865","Up_29017","Con98940","Con8806","Res49744","Mas33053","Cro24243","Zer55269","Add52707"],Add52707,"Add52707")

Actual (Unparsed): [[[0.0000000, 0.0000000, 0.7737000, 0.2796000], [0.0000000, 0.0000000, 0.7737000, 0.8107000], [-0.6708000, -0.5755000, -1.2955000, 0.2639000], [-0.6708000, -0.5755000, -1.2955000, 0.1359000], [1.0332000, 1.1756000, 0.6735000, 0.4534000], [1.0638583, 1.6555321, 1.1288457, 0.5433221]]]

Expected (Unparsed): [[[0,0,0.7737,0.2796],[0,0,0.7737,0.8107],[-0.6708,-0.5755000000000001,-1.2954999999999999,0.2639],[-0.6708,-0.5755000000000001,-1.2954999999999999,0.1359],[1.0332,1.1756,0.6735,0.4534],[1.0638583199999998,1.65553211,1.12884573,0.54332207]]]

Actual:   [[[0, 0, 0.7737, 0.2796], [0, 0, 0.7737, 0.8107], [-0.6708, -0.5755, -1.2955, 0.2639], [-0.6708, -0.5755, -1.2955, 0.1359], [1.0332, 1.1756, 0.6735, 0.4534], [1.0639, 1.6556, 1.1289, 0.5434]]]

Expected: [[[0, 0, 0.7737, 0.2796], [0, 0, 0.7737, 0.8107], [-0.6708, -0.5755, -1.2954, 0.2639], [-0.6708, -0.5755, -1.2954, 0.1359], [1.0332, 1.1756, 0.6735, 0.4534], [1.0639, 1.6556, 1.1289, 0.5434]]]