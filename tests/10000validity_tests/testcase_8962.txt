import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Ave47425 = tf.keras.layers.Input(shape=([2, 2]))
in1Ave47425 = tf.keras.layers.Input(shape=([2, 2]))
in0Up_46937 = tf.keras.layers.Input(shape=([3, 1]))
in0Con34383 = tf.keras.layers.Input(shape=([6, 1]))

Ave47425 = keras.layers.Average(name = 'Ave47425', )([in0Ave47425,in1Ave47425])
Bat20647 = keras.layers.BatchNormalization(axis=2, epsilon=0.516772384975158,  name = 'Bat20647', )(Ave47425)
Zer7104 = keras.layers.ZeroPadding1D(padding=((4, 0)), name = 'Zer7104', )(Bat20647)
Up_46937 = keras.layers.UpSampling1D(size=(2), name = 'Up_46937', )(in0Up_46937)
Cro37832 = keras.layers.Cropping1D(cropping=((0, 0)), name = 'Cro37832', )(Up_46937)
Con34383 = keras.layers.Concatenate(axis=2, name = 'Con34383', )([Cro37832,in0Con34383])
Max95890 = keras.layers.Maximum(name = 'Max95890', )([Zer7104,Con34383])
model = tf.keras.models.Model(inputs=[in0Ave47425,in1Ave47425,in0Up_46937,in0Con34383], outputs=Max95890)
w = model.get_layer('Bat20647').get_weights() 
w[0] = np.array([0.2816, 0.0923])
w[1] = np.array([0.9681, 0.547])
w[2] = np.array([0.5328, 0.9168])
w[3] = np.array([0.8151, 0.2664])
model.get_layer('Bat20647').set_weights(w) 
in0Ave47425 = tf.constant([[[0.0997, 0.2723], [0.255, 0.8769]]])
in1Ave47425 = tf.constant([[[0.7663, 0.7517], [0.3598, 0.5312]]])
in0Up_46937 = tf.constant([[[1.1867], [1.0672], [1.0361]]])
in0Con34383 = tf.constant([[[0.6845], [0.2754], [0.3717], [0.9339], [0.2832], [0.956]]])
print (np.array2string(model.predict([in0Ave47425,in1Ave47425,in0Up_46937,in0Con34383],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Max95890.png')

LAve47425 = average_layer([[[[0.0997, 0.2723], [0.255, 0.8769]]], [[[0.7663, 0.7517], [0.3598, 0.5312]]]], Ave47425), 
LBat20647 = batch_normalization_layer(Ave47425, 2, 0.516772384975158, [0.2816, 0.0923], [0.9681, 0.547], [0.5328, 0.9168], [0.8151, 0.2664], Bat20647), 
LZer7104 = zero_padding1D_layer(Bat20647, 4, 0, Zer7104), 
LUp_46937 = up_sampling1D_layer([[[1.1867], [1.0672], [1.0361]]], 2, Up_46937), 
LCro37832 = cropping1D_layer(Up_46937, 0, 0, Cro37832), 
LCon34383 = concatenate_layer([Cro37832,[[[0.6845], [0.2754], [0.3717], [0.9339], [0.2832], [0.956]]]], 2, Con34383), 
LMax95890 = maximum_layer([Zer7104,Con34383], Max95890), 
exec_layers([LAve47425,LBat20647,LZer7104,LUp_46937,LCro37832,LCon34383,LMax95890],["Ave47425","Bat20647","Zer7104","Up_46937","Cro37832","Con34383","Max95890"],Max95890,"Max95890")

Actual (Unparsed): [[[1.1867000, 0.6845000], [1.1867000, 0.2754000], [1.0671999, 0.3717000], [1.0671999, 0.9339000], [1.0361000, 0.5047805], [1.0361000, 0.9560000]]]

Expected (Unparsed): [[[1.1867,0.6845],[1.1867,0.2754],[1.0672,0.3717],[1.0672,0.9339],[1.0361,0.5047804575826991],[1.0361,0.956]]]

Actual:   [[[1.1867, 0.6845], [1.1867, 0.2754], [1.0672, 0.3717], [1.0672, 0.9339], [1.0361, 0.5048], [1.0361, 0.956]]]

Expected: [[[1.1867, 0.6845], [1.1867, 0.2754], [1.0672, 0.3717], [1.0672, 0.9339], [1.0361, 0.5048], [1.0361, 0.956]]]