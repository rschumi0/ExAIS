import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Den47302 = tf.keras.layers.Input(shape=([2, 3, 3]))
in0Con1199 = tf.keras.layers.Input(shape=([2, 23, 1]))
in0Ave42224 = tf.keras.layers.Input(shape=([2, 1, 2]))

Den47302 = keras.layers.Dense(4,name = 'Den47302', )(in0Den47302)
Lea64608 = keras.layers.LeakyReLU(alpha=9.325352478906352, name = 'Lea64608', )(Den47302)
Res62560 = keras.layers.Reshape((2, 12), name = 'Res62560', )(Lea64608)
Ave33059 = keras.layers.AveragePooling1D(pool_size=(1), strides=(2), padding='valid', name = 'Ave33059', )(Res62560)
Res24486 = keras.layers.Reshape((1, 12, 1), name = 'Res24486', )(Ave33059)
Dep78537 = keras.layers.DepthwiseConv2D((1, 6),strides=(1, 1), padding='same', name = 'Dep78537', )(Res24486)
Zer71643 = keras.layers.ZeroPadding2D(padding=((1, 0), (11, 0)), name = 'Zer71643', )(Dep78537)
Con1199 = keras.layers.Concatenate(axis=3, name = 'Con1199', )([Zer71643,in0Con1199])
Ave42224 = keras.layers.AveragePooling2D(pool_size=(1, 1), name = 'Ave42224', )(in0Ave42224)
Zer97098 = keras.layers.ZeroPadding2D(padding=((0, 0), (22, 0)), name = 'Zer97098', )(Ave42224)
Min42295 = keras.layers.Minimum(name = 'Min42295', )([Con1199,Zer97098])
Res37365 = keras.layers.Reshape((2, 46), name = 'Res37365', )(Min42295)
Ave40322 = keras.layers.AveragePooling1D(pool_size=(1), strides=(1), padding='valid', name = 'Ave40322', )(Res37365)
model = tf.keras.models.Model(inputs=[in0Den47302,in0Con1199,in0Ave42224], outputs=Ave40322)
w = model.get_layer('Den47302').get_weights() 
w[0] = np.array([[0.3737, 0.7405, 0.1909, 0.9619], [0.9939, 0.6498, 0.5003, 0.025], [0.1292, 0.1606, 0.0313, 0.2116]])
w[1] = np.array([0.4003, 0.8768, 0.3972, 0.5535])
model.get_layer('Den47302').set_weights(w) 
w = model.get_layer('Dep78537').get_weights() 
w[0] = np.array([[[[0.5596]], [[0.6933]], [[0.9279]], [[0.0422]], [[0.1316]], [[0.7904]]]])
w[1] = np.array([0])
model.get_layer('Dep78537').set_weights(w) 
in0Den47302 = tf.constant([[[[0.5242, 0.4624, 0.7359], [0.0494, 0.5536, 0.7285], [0.3992, 0.0564, 0.5938]], [[0.1138, 0.874, 0.7197], [0.5213, 0.7546, 0.5236], [0.5225, 0.2272, 0.9992]]]])
in0Con1199 = tf.constant([[[[0.9839], [0.0331], [0.2174], [0.5137], [0.2281], [0.3312], [0.546], [0.1372], [0.6643], [0.6919], [0.1212], [0.6237], [0.2563], [0.8582], [0.478], [0.1263], [0.3431], [0.2259], [0.0283], [0.2342], [0.8121], [0.3528], [0.9628]], [[0.8141], [0.1737], [0.5178], [0.1494], [0.1341], [0.657], [0.0648], [0.8212], [0.2662], [0.4896], [0.7926], [0.4112], [0.4239], [0.8557], [0.7044], [0.2342], [0.5914], [0.6374], [0.0206], [0.8443], [0.5266], [0.9349], [0.4754]]]])
in0Ave42224 = tf.constant([[[[1.6741, 1.644]], [[1.3165, 1.5744]]]])
print (np.array2string(model.predict([in0Den47302,in0Con1199,in0Ave42224],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Ave40322.png')

LDen47302 = dense_layer([[[[0.5242, 0.4624, 0.7359], [0.0494, 0.5536, 0.7285], [0.3992, 0.0564, 0.5938]], [[0.1138, 0.874, 0.7197], [0.5213, 0.7546, 0.5236], [0.5225, 0.2272, 0.9992]]]], [[0.3737, 0.7405, 0.1909, 0.9619], [0.9939, 0.6498, 0.5003, 0.025], [0.1292, 0.1606, 0.0313, 0.2116]],[0.4003, 0.8768, 0.3972, 0.5535], Den47302), 
LLea64608 = leaky_relu_layer(Den47302, 9.325352478906352, Lea64608), 
LRes62560 = reshape_layer(Lea64608, [2, 12], Res62560), 
LAve33059 = average_pooling1D_layer(Res62560, 1, 2, false, Ave33059), 
LRes24486 = reshape_layer(Ave33059, [1, 12, 1], Res24486), 
LDep78537 = depthwise_conv2D_layer(Res24486, 1, 6,[[[[0.5596]], [[0.6933]], [[0.9279]], [[0.0422]], [[0.1316]], [[0.7904]]]],[0], 1, 1, true, Dep78537), 
LZer71643 = zero_padding2D_layer(Dep78537, 1, 0, 11, 0, Zer71643), 
LCon1199 = concatenate_layer([Zer71643,[[[[0.9839], [0.0331], [0.2174], [0.5137], [0.2281], [0.3312], [0.546], [0.1372], [0.6643], [0.6919], [0.1212], [0.6237], [0.2563], [0.8582], [0.478], [0.1263], [0.3431], [0.2259], [0.0283], [0.2342], [0.8121], [0.3528], [0.9628]], [[0.8141], [0.1737], [0.5178], [0.1494], [0.1341], [0.657], [0.0648], [0.8212], [0.2662], [0.4896], [0.7926], [0.4112], [0.4239], [0.8557], [0.7044], [0.2342], [0.5914], [0.6374], [0.0206], [0.8443], [0.5266], [0.9349], [0.4754]]]]], 3, Con1199), 
LAve42224 = average_pooling2D_layer([[[[1.6741, 1.644]], [[1.3165, 1.5744]]]], 1, 1, Ave42224), 
LZer97098 = zero_padding2D_layer(Ave42224, 0, 0, 22, 0, Zer97098), 
LMin42295 = minimum_layer([Con1199,Zer97098], Min42295), 
LRes37365 = reshape_layer(Min42295, [2, 46], Res37365), 
LAve40322 = average_pooling1D_layer(Res37365, 1, 1, false, Ave40322), 
exec_layers([LDen47302,LLea64608,LRes62560,LAve33059,LRes24486,LDep78537,LZer71643,LCon1199,LAve42224,LZer97098,LMin42295,LRes37365,LAve40322],["Den47302","Lea64608","Res62560","Ave33059","Res24486","Dep78537","Zer71643","Con1199","Ave42224","Zer97098","Min42295","Res37365","Ave40322"],Ave40322,"Ave40322")

Actual (Unparsed

Expected (Unparsed): [[[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.9628],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1.3165,0.4754]]]

Actual:   [[[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.9628], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1.3165, 0.4754]]]

Expected: [[[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.9628], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1.3165, 0.4754]]]