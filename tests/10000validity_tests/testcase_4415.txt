import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Max38702 = tf.keras.layers.Input(shape=([2, 1]))
in1Max38702 = tf.keras.layers.Input(shape=([2, 1]))
in0Con28402 = tf.keras.layers.Input(shape=([2, 8]))
in0Up_64878 = tf.keras.layers.Input(shape=([2, 3, 1]))

Max38702 = keras.layers.Maximum(name = 'Max38702', )([in0Max38702,in1Max38702])
Con28402 = keras.layers.Concatenate(axis=2, name = 'Con28402', )([Max38702,in0Con28402])
Up_64878 = keras.layers.UpSampling2D(size=(1, 1), name = 'Up_64878', )(in0Up_64878)
Den67797 = keras.layers.Dense(3,name = 'Den67797', )(Up_64878)
Res10861 = keras.layers.Reshape((2, 9), name = 'Res10861', )(Den67797)
Dot11420 = keras.layers.Dot(axes=(2, 2), name = 'Dot11420', )([Con28402,Res10861])
Per8886 = keras.layers.Permute((1,2), name = 'Per8886',)(Dot11420)
Glo87952 = keras.layers.GlobalMaxPool1D(name = 'Glo87952', )(Per8886)
model = tf.keras.models.Model(inputs=[in0Max38702,in1Max38702,in0Con28402,in0Up_64878], outputs=Glo87952)
w = model.get_layer('Den67797').get_weights() 
w[0] = np.array([[0.6364, 0.6285, 0.1423]])
w[1] = np.array([0.3572, 0.5201, 0.43])
model.get_layer('Den67797').set_weights(w) 
in0Max38702 = tf.constant([[[0.1184], [0.5669]]])
in1Max38702 = tf.constant([[[0.744], [0.4984]]])
in0Con28402 = tf.constant([[[0.1531, 0.0106, 0.6015, 0.5611, 0.2081, 0.1776, 0.9833, 0.456], [0.3361, 0.1735, 0.3305, 0.7146, 0.5265, 0.93, 0.5954, 0.2658]]])
in0Up_64878 = tf.constant([[[[1.1346], [1.1601], [1.227]], [[1.5764], [1.9773], [1.2054]]]])
print (np.array2string(model.predict([in0Max38702,in1Max38702,in0Con28402,in0Up_64878],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Glo87952.png')

LMax38702 = maximum_layer([[[[0.1184], [0.5669]]], [[[0.744], [0.4984]]]], Max38702), 
LCon28402 = concatenate_layer([Max38702,[[[0.1531, 0.0106, 0.6015, 0.5611, 0.2081, 0.1776, 0.9833, 0.456], [0.3361, 0.1735, 0.3305, 0.7146, 0.5265, 0.93, 0.5954, 0.2658]]]], 2, Con28402), 
LUp_64878 = up_sampling2D_layer([[[[1.1346], [1.1601], [1.227]], [[1.5764], [1.9773], [1.2054]]]], 1, 1, Up_64878), 
LDen67797 = dense_layer(Up_64878, [[0.6364, 0.6285, 0.1423]],[0.3572, 0.5201, 0.43], Den67797), 
LRes10861 = reshape_layer(Den67797, [2, 9], Res10861), 
LDot11420 = dot_layer(Con28402,Res10861, 2, 2, Dot11420), 
LPer8886 = permute_layer(Dot11420, 1,2, Per8886), 
LGlo87952 = global_max_pool1D_layer(Per8886, Glo87952), 
exec_layers([LMax38702,LCon28402,LUp_64878,LDen67797,LRes10861,LDot11420,LPer8886,LGlo87952],["Max38702","Con28402","Up_64878","Den67797","Res10861","Dot11420","Per8886","Glo87952"],Glo87952,"Glo87952")

Actual (Unparsed): [[4.6849142, 5.5269869]]

Expected (Unparsed): [[4.684914192081,5.526986793105001]]

Actual:   [[4.685, 5.527]]

Expected: [[4.685, 5.527]]