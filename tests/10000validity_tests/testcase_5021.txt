import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Den54002 = tf.keras.layers.Input(shape=([2, 3, 5]))
in0Con51176 = tf.keras.layers.Input(shape=([2, 2]))
in0Add58704 = tf.keras.layers.Input(shape=([2, 2, 2]))
in1Add58704 = tf.keras.layers.Input(shape=([2, 2, 2]))

Den54002 = keras.layers.Dense(2,name = 'Den54002', )(in0Den54002)
Lay56988 = keras.layers.LayerNormalization(axis=1, epsilon=2.338166177374931, name = 'Lay56988', )(Den54002)
Res98761 = keras.layers.Reshape((2, 6), name = 'Res98761', )(Lay56988)
Con51176 = keras.layers.Concatenate(axis=2, name = 'Con51176', )([Res98761,in0Con51176])
Add58704 = keras.layers.Add(name = 'Add58704', )([in0Add58704,in1Add58704])
Zer37766 = keras.layers.ZeroPadding2D(padding=((1, 1), (1, 1)), name = 'Zer37766', )(Add58704)
Res84021 = keras.layers.Reshape((4, 8), name = 'Res84021', )(Zer37766)
Cro79270 = keras.layers.Cropping1D(cropping=((2, 0)), name = 'Cro79270', )(Res84021)
Max26699 = keras.layers.Maximum(name = 'Max26699', )([Con51176,Cro79270])
model = tf.keras.models.Model(inputs=[in0Den54002,in0Con51176,in0Add58704,in1Add58704], outputs=Max26699)
w = model.get_layer('Den54002').get_weights() 
w[0] = np.array([[0.2994, 0.9049], [0.1231, 0.3637], [0.6809, 0.1346], [0.5299, 0.4143], [0.9548, 0.2088]])
w[1] = np.array([0.6275, 0.9888])
model.get_layer('Den54002').set_weights(w) 
in0Den54002 = tf.constant([[[[0.9635, 0.3454, 0.598, 0.1322, 0.5627], [0.7311, 0.4747, 0.8882, 0.2494, 0.6007], [0.577, 0.1696, 0.1789, 0.7061, 0.4905]], [[0.3148, 0.6295, 0.697, 0.5296, 0.7622], [0.0799, 0.135, 0.9673, 0.2876, 0.7159], [0.7172, 0.5019, 0.858, 0.6595, 0.7327]]]])
in0Con51176 = tf.constant([[[0.9652, 0.7302], [0.8734, 0.7457]]])
in0Add58704 = tf.constant([[[[0.1303, 0.0969], [0.3152, 0.6344]], [[0.0218, 0.6664], [0.2325, 0.6167]]]])
in1Add58704 = tf.constant([[[[0.8226, 0.8365], [0.7941, 0.2639]], [[0.0586, 0.1338], [0.8572, 0.6543]]]])
print (np.array2string(model.predict([in0Den54002,in0Con51176,in0Add58704,in1Add58704],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Max26699.png')

LDen54002 = dense_layer([[[[0.9635, 0.3454, 0.598, 0.1322, 0.5627], [0.7311, 0.4747, 0.8882, 0.2494, 0.6007], [0.577, 0.1696, 0.1789, 0.7061, 0.4905]], [[0.3148, 0.6295, 0.697, 0.5296, 0.7622], [0.0799, 0.135, 0.9673, 0.2876, 0.7159], [0.7172, 0.5019, 0.858, 0.6595, 0.7327]]]], [[0.2994, 0.9049], [0.1231, 0.3637], [0.6809, 0.1346], [0.5299, 0.4143], [0.9548, 0.2088]],[0.6275, 0.9888], Den54002), 
LLay56988 = layer_normalization_layer(Den54002, 1, 2.338166177374931, Lay56988), 
LRes98761 = reshape_layer(Lay56988, [2, 6], Res98761), 
LCon51176 = concatenate_layer([Res98761,[[[0.9652, 0.7302], [0.8734, 0.7457]]]], 2, Con51176), 
LAdd58704 = add_layer([[[[[0.1303, 0.0969], [0.3152, 0.6344]], [[0.0218, 0.6664], [0.2325, 0.6167]]]], [[[[0.8226, 0.8365], [0.7941, 0.2639]], [[0.0586, 0.1338], [0.8572, 0.6543]]]]], Add58704), 
LZer37766 = zero_padding2D_layer(Add58704, 1, 1, 1, 1, Zer37766), 
LRes84021 = reshape_layer(Zer37766, [4, 8], Res84021), 
LCro79270 = cropping1D_layer(Res84021, 2, 0, Cro79270), 
LMax26699 = maximum_layer([Con51176,Cro79270], Max26699), 
exec_layers([LDen54002,LLay56988,LRes98761,LCon51176,LAdd58704,LZer37766,LRes84021,LCro79270,LMax26699],["Den54002","Lay56988","Res98761","Con51176","Add58704","Zer37766","Res84021","Cro79270","Max26699"],Max26699,"Max26699")

Actual (Unparsed): [[[0.0000000, 0.0860237, 0.0804000, 0.8002000, 1.0897000, 1.2710000, 0.9652000, 0.7302000], [0.1006003, 0.0000000, 0.0000000, 0.0000000, 0.2387345, 0.1202366, 0.8734000, 0.7457000]]]

Expected (Unparsed): [[[0,0.08602371085272546,0.0804,0.8002,1.0897,1.271,0.9652,0.7302],[0.10060031657836281,0,0,0,0.2387344969698162,0.12023663530278303,0.8734,0.7457]]]

Actual:   [[[0, 0.0861, 0.0804, 0.8002, 1.0897, 1.271, 0.9652, 0.7302], [0.1007, 0, 0, 0, 0.2388, 0.1203, 0.8734, 0.7457]]]

Expected: [[[0, 0.0861, 0.0804, 0.8002, 1.0897, 1.271, 0.9652, 0.7302], [0.1007, 0, 0, 0, 0.2388, 0.1203, 0.8734, 0.7457]]]