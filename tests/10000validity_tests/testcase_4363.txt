import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Min687 = tf.keras.layers.Input(shape=([1, 1, 2, 1]))
in1Min687 = tf.keras.layers.Input(shape=([1, 1, 2, 1]))
in0Add30237 = tf.keras.layers.Input(shape=([1, 1, 1, 1]))
in1Add30237 = tf.keras.layers.Input(shape=([1, 1, 1, 1]))

Min687 = keras.layers.Minimum(name = 'Min687', )([in0Min687,in1Min687])
Add30237 = keras.layers.Add(name = 'Add30237', )([in0Add30237,in1Add30237])
Zer74790 = keras.layers.ZeroPadding3D(padding=((0, 0), (0, 0), (1, 0)), name = 'Zer74790', )(Add30237)
Mul87229 = keras.layers.Multiply(name = 'Mul87229', )([Min687,Zer74790])
model = tf.keras.models.Model(inputs=[in0Min687,in1Min687,in0Add30237,in1Add30237], outputs=Mul87229)
in0Min687 = tf.constant([[[[[0.2387], [0.0467]]]]])
in1Min687 = tf.constant([[[[[0.2563], [0.5934]]]]])
in0Add30237 = tf.constant([[[[[0.407]]]]])
in1Add30237 = tf.constant([[[[[0.4064]]]]])
print (np.array2string(model.predict([in0Min687,in1Min687,in0Add30237,in1Add30237],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Mul87229.png')

LMin687 = minimum_layer([[[[[[0.2387], [0.0467]]]]], [[[[[0.2563], [0.5934]]]]]], Min687), 
LAdd30237 = add_layer([[[[[[0.407]]]]], [[[[[0.4064]]]]]], Add30237), 
LZer74790 = zero_padding3D_layer(Add30237, 0, 0, 0, 0, 1, 0, Zer74790), 
LMul87229 = multiply_layer([Min687,Zer74790], Mul87229), 
exec_layers([LMin687,LAdd30237,LZer74790,LMul87229],["Min687","Add30237","Zer74790","Mul87229"],Mul87229,"Mul87229")

Actual (Unparsed): [[[[[0.0000000], [0.0379858]]]]]

Expected (Unparsed): [[[[[0.0],[0.03798578]]]]]

Actual:   [[[[[0], [0.038]]]]]

Expected: [[[[[0], [0.038]]]]]