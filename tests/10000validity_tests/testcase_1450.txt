import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Dot2724 = tf.keras.layers.Input(shape=([3]))
in1Dot2724 = tf.keras.layers.Input(shape=([3]))

Dot2724 = keras.layers.Dot(axes=(1, 1), name = 'Dot2724', )([in0Dot2724,in1Dot2724])
Res10877 = keras.layers.Reshape((1, 1), name = 'Res10877', )(Dot2724)
Res19963 = keras.layers.Reshape((1, 1, 1), name = 'Res19963', )(Res10877)
Res26326 = keras.layers.Reshape((1, 1, 1, 1), name = 'Res26326', )(Res19963)
Cro17212 = keras.layers.Cropping3D(cropping=((0, 0), (0, 0), (0, 0)), name = 'Cro17212', )(Res26326)
ReL87675 = keras.layers.ReLU(max_value=3.6328210686114235, negative_slope=7.496084966012398, threshold=7.24924128645171, name = 'ReL87675', )(Cro17212)
model = tf.keras.models.Model(inputs=[in0Dot2724,in1Dot2724], outputs=ReL87675)
in0Dot2724 = tf.constant([[0.5552, 0.3705, 0.6719]])
in1Dot2724 = tf.constant([[0.2529, 0.2531, 0.3738]])
print (np.array2string(model.predict([in0Dot2724,in1Dot2724],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='ReL87675.png')

LDot2724 = dot_layer([[0.5552, 0.3705, 0.6719]], [[0.2529, 0.2531, 0.3738]], 1, 1, Dot2724), 
LRes10877 = reshape_layer(Dot2724, [1, 1], Res10877), 
LRes19963 = reshape_layer(Res10877, [1, 1, 1], Res19963), 
LRes26326 = reshape_layer(Res19963, [1, 1, 1, 1], Res26326), 
LCro17212 = cropping3D_layer(Res26326, 0, 0, 0, 0, 0, 0, Cro17212), 
LReL87675 = relu_layer(Cro17212, 3.6328210686114235, 7.496084966012398, 7.24924128645171, ReL87675), 
exec_layers([LDot2724,LRes10877,LRes19963,LRes26326,LCro17212,LReL87675],["Dot2724","Res10877","Res19963","Res26326","Cro17212","ReL87675"],ReL87675,"ReL87675")

Actual (Unparsed): [[[[[-50.7027799]]]]]

Expected (Unparsed): [[[[[-50.70277986937533]]]]]

Actual:   [[[[[-50.7027]]]]]

Expected: [[[[[-50.7027]]]]]