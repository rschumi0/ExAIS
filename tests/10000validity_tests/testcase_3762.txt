import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Max31476 = tf.keras.layers.Input(shape=([1, 1, 1]))
in0Con77496 = tf.keras.layers.Input(shape=([11]))
in0Den22788 = tf.keras.layers.Input(shape=([3, 4, 3]))
in0Max98175 = tf.keras.layers.Input(shape=([1, 1, 1, 1]))
in1Max98175 = tf.keras.layers.Input(shape=([1, 1, 1, 1]))

Max31476 = keras.layers.MaxPool2D(pool_size=(1, 1), strides=(1, 1), padding='valid', name = 'Max31476', )(in0Max31476)
Res99931 = keras.layers.Reshape((1, 1), name = 'Res99931', )(Max31476)
Fla23916 = keras.layers.Flatten(name = 'Fla23916', )(Res99931)
Con77496 = keras.layers.Concatenate(axis=1, name = 'Con77496', )([Fla23916,in0Con77496])
Den22788 = keras.layers.Dense(3,name = 'Den22788', )(in0Den22788)
Res28756 = keras.layers.Reshape((3, 4, 3, 1), name = 'Res28756', )(Den22788)
Max98175 = keras.layers.Maximum(name = 'Max98175', )([in0Max98175,in1Max98175])
Zer26382 = keras.layers.ZeroPadding3D(padding=((2, 0), (3, 0), (2, 0)), name = 'Zer26382', )(Max98175)
Ave72818 = keras.layers.Average(name = 'Ave72818', )([Res28756,Zer26382])
Res27716 = keras.layers.Reshape((3, 4, 3), name = 'Res27716', )(Ave72818)
Res20203 = keras.layers.Reshape((3, 12), name = 'Res20203', )(Res27716)
Glo86208 = keras.layers.GlobalAveragePooling1D(name = 'Glo86208', )(Res20203)
Max70766 = keras.layers.Maximum(name = 'Max70766', )([Con77496,Glo86208])
model = tf.keras.models.Model(inputs=[in0Max31476,in0Con77496,in0Den22788,in0Max98175,in1Max98175], outputs=Max70766)
w = model.get_layer('Den22788').get_weights() 
w[0] = np.array([[0.4445, 0.7054, 0.2294], [0.9206, 0.7275, 0.9416], [0.2099, 0.9985, 0.4383]])
w[1] = np.array([0.8696, 0.6673, 0.6538])
model.get_layer('Den22788').set_weights(w) 
in0Max31476 = tf.constant([[[[1.6648]]]])
in0Con77496 = tf.constant([[0.739, 0.5558, 0.3451, 0.1713, 0.9631, 0.5224, 0.6322, 0.6749, 0.8497, 0.0029, 0.5906]])
in0Den22788 = tf.constant([[[[0.2658, 0.0683, 0.7137], [0.3487, 0.4416, 0.9571], [0.1896, 0.3673, 0.7014], [0.3104, 0.2819, 0.5202]], [[0.1396, 0.5792, 0.8803], [0.9998, 0.4454, 0.9692], [0.6837, 0.7284, 0.4905], [0.4074, 0.6084, 0.1947]], [[0.3003, 0.9564, 0.8961], [0.1421, 0.8726, 0.8923], [0.5387, 0.4139, 0.4012], [0.6981, 0.9283, 0.628]]]])
in0Max98175 = tf.constant([[[[[0.2062]]]]])
in1Max98175 = tf.constant([[[[[0.165]]]]])
print (np.array2string(model.predict([in0Max31476,in0Con77496,in0Den22788,in0Max98175,in1Max98175],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Max70766.png')

LMax31476 = max_pool2D_layer([[[[1.6648]]]], 1, 1, 1, 1, false, Max31476), 
LRes99931 = reshape_layer(Max31476, [1, 1], Res99931), 
LFla23916 = flatten_layer(Res99931, Fla23916), 
LCon77496 = concatenate_layer([Fla23916,[[0.739, 0.5558, 0.3451, 0.1713, 0.9631, 0.5224, 0.6322, 0.6749, 0.8497, 0.0029, 0.5906]]], 1, Con77496), 
LDen22788 = dense_layer([[[[0.2658, 0.0683, 0.7137], [0.3487, 0.4416, 0.9571], [0.1896, 0.3673, 0.7014], [0.3104, 0.2819, 0.5202]], [[0.1396, 0.5792, 0.8803], [0.9998, 0.4454, 0.9692], [0.6837, 0.7284, 0.4905], [0.4074, 0.6084, 0.1947]], [[0.3003, 0.9564, 0.8961], [0.1421, 0.8726, 0.8923], [0.5387, 0.4139, 0.4012], [0.6981, 0.9283, 0.628]]]], [[0.4445, 0.7054, 0.2294], [0.9206, 0.7275, 0.9416], [0.2099, 0.9985, 0.4383]],[0.8696, 0.6673, 0.6538], Den22788), 
LRes28756 = reshape_layer(Den22788, [3, 4, 3, 1], Res28756), 
LMax98175 = maximum_layer([[[[[[0.2062]]]]], [[[[[0.165]]]]]], Max98175), 
LZer26382 = zero_padding3D_layer(Max98175, 2, 0, 3, 0, 2, 0, Zer26382), 
LAve72818 = average_layer([Res28756,Zer26382], Ave72818), 
LRes27716 = reshape_layer(Ave72818, [3, 4, 3], Res27716), 
LRes20203 = reshape_layer(Res27716, [3, 12], Res20203), 
LGlo86208 = global_average_pooling1D_layer(Res20203, Glo86208), 
LMax70766 = maximum_layer([Con77496,Glo86208], Max70766), 
exec_layers([LMax31476,LRes99931,LFla23916,LCon77496,LDen22788,LRes28756,LMax98175,LZer26382,LAve72818,LRes27716,LRes20203,LGlo86208,LMax70766],["Max31476","Res99931","Fla23916","Con77496","Den22788","Res28756","Max98175","Zer26382","Ave72818","Res27716","Res20203","Glo86208","Max70766"],Max70766,"Max70766")

Actual (Unparsed): [[1.6648000, 1.0254838, 0.7874884, 0.9138139, 1.1913084, 0.9631000, 0.8267606, 0.9478115, 0.7341680, 0.8657076, 0.9440988, 0.7988991]]

Expected (Unparsed): [[1.6648,1.0254838133333335,0.7874884416666669,0.9138139333333334,1.1913083899999999,0.9631,0.8267605750000001,0.947811525,0.7341679816666667,0.8657075700000001,0.9440988350000001,0.7988990483333334]]

Actual:   [[1.6648, 1.0255, 0.7875, 0.9139, 1.1914, 0.9631, 0.8268, 0.9479, 0.7342, 0.8658, 0.9441, 0.7989]]

Expected: [[1.6648, 1.0255, 0.7875, 0.9139, 1.1914, 0.9631, 0.8268, 0.9479, 0.7342, 0.8658, 0.9441, 0.7989]]