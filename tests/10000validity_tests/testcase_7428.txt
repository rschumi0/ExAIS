import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Den28511 = tf.keras.layers.Input(shape=([4, 4]))

Den28511 = keras.layers.Dense(3,name = 'Den28511', )(in0Den28511)
Thr21670 = keras.layers.ThresholdedReLU(theta=0.416285883681347, name = 'Thr21670', )(Den28511)
Cro22643 = keras.layers.Cropping1D(cropping=((1, 0)), name = 'Cro22643', )(Thr21670)
model = tf.keras.models.Model(inputs=[in0Den28511], outputs=Cro22643)
w = model.get_layer('Den28511').get_weights() 
w[0] = np.array([[0.5554, 0.7159, 0.3243], [0.3822, 0.3956, 0.7052], [0.535, 0.8152, 0.5247], [0.5699, 0.0423, 0.6283]])
w[1] = np.array([0.8644, 0.4443, 0.1584])
model.get_layer('Den28511').set_weights(w) 
in0Den28511 = tf.constant([[[0.1166, 0.2999, 0.0652, 0.5425], [0.0364, 0.3134, 0.6977, 0.2184], [0.2424, 0.8433, 0.0805, 0.8111], [0.846, 0.6521, 0.7269, 0.776]]])
print (np.array2string(model.predict([in0Den28511],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Cro22643.png')

LDen28511 = dense_layer([[[0.1166, 0.2999, 0.0652, 0.5425], [0.0364, 0.3134, 0.6977, 0.2184], [0.2424, 0.8433, 0.0805, 0.8111], [0.846, 0.6521, 0.7269, 0.776]]], [[0.5554, 0.7159, 0.3243], [0.3822, 0.3956, 0.7052], [0.535, 0.8152, 0.5247], [0.5699, 0.0423, 0.6283]],[0.8644, 0.4443, 0.1584], Den28511), 
LThr21670 = thresholded_relu_layer(Den28511, 0.416285883681347, Thr21670), 
LCro22643 = cropping1D_layer(Thr21670, 1, 0, Cro22643), 
exec_layers([LDen28511,LThr21670,LCro22643],["Den28511","Thr21670","Cro22643"],Cro22643,"Cro22643")

Actual (Unparsed): [[[1.5021337, 1.1723432, 0.8945181], [1.8266516, 1.0513768, 1.3835580], [2.4146349, 1.9333158, 1.7615840]]]

Expected (Unparsed): [[[1.5021337,1.1723431599999998,0.8945181100000001],[1.8266516099999999,1.0513767699999998,1.38355796],[2.4146349199999997,1.93331584,1.7615839500000001]]]

Actual:   [[[1.5022, 1.1724, 0.8946], [1.8267, 1.0514, 1.3836], [2.4147, 1.9334, 1.7616]]]

Expected: [[[1.5022, 1.1724, 0.8946], [1.8267, 1.0514, 1.3836], [2.4147, 1.9334, 1.7616]]]