import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Up_68101 = tf.keras.layers.Input(shape=([1, 4, 2]))
in0Con13280 = tf.keras.layers.Input(shape=([2, 8, 2, 2]))
in0Sub39664 = tf.keras.layers.Input(shape=([2, 2, 2, 3]))
in1Sub39664 = tf.keras.layers.Input(shape=([2, 2, 2, 3]))

Up_68101 = keras.layers.UpSampling2D(size=(2, 2), name = 'Up_68101', )(in0Up_68101)
Sof17035 = keras.layers.Softmax(axis=1, name = 'Sof17035', )(Up_68101)
Res74401 = keras.layers.Reshape((2, 8, 2, 1), name = 'Res74401', )(Sof17035)
Con13280 = keras.layers.Concatenate(axis=4, name = 'Con13280', )([Res74401,in0Con13280])
Sub39664 = keras.layers.Subtract(name = 'Sub39664', )([in0Sub39664,in1Sub39664])
Zer28700 = keras.layers.ZeroPadding3D(padding=((0, 0), (6, 0), (0, 0)), name = 'Zer28700', )(Sub39664)
Mul90285 = keras.layers.Multiply(name = 'Mul90285', )([Con13280,Zer28700])
Res1690 = keras.layers.Reshape((2, 8, 6), name = 'Res1690', )(Mul90285)
Cro9702 = keras.layers.Cropping2D(cropping=((1, 0), (4, 2)), name = 'Cro9702', )(Res1690)
model = tf.keras.models.Model(inputs=[in0Up_68101,in0Con13280,in0Sub39664,in1Sub39664], outputs=Cro9702)
in0Up_68101 = tf.constant([[[[1.9722, 1.9379], [1.3679, 1.0135], [1.2532, 1.3532], [1.7966, 1.5756]]]])
in0Con13280 = tf.constant([[[[[0.2738, 0.6224], [0.6327, 0.3241]], [[0.6606, 0.611], [0.8021, 0.5062]], [[0.0787, 0.6169], [0.6067, 0.3268]], [[0.171, 0.9882], [0.9064, 0.8903]], [[0.1475, 0.4835], [0.495, 0.586]], [[0.8551, 0.8574], [0.24, 0.3969]], [[0.1085, 0.8493], [0.991, 0.2334]], [[0.6308, 0.9329], [0.2888, 0.9312]]], [[[0.6716, 0.6641], [0.9599, 0.4869]], [[0.0033, 0.1019], [0.1376, 0.698]], [[0.5309, 0.5722], [0.1162, 0.6184]], [[0.1937, 0.9931], [0.7142, 0.145]], [[0.1857, 0.088], [0.5014, 0.6119]], [[0.7754, 0.0756], [0.3249, 0.4809]], [[0.1697, 0.8428], [0.0606, 0.0937]], [[0.9301, 0.1843], [0.4106, 0.9757]]]]])
in0Sub39664 = tf.constant([[[[[0.0971, 0.2666, 0.0596], [0.3445, 0.2422, 0.5842]], [[0.7054, 0.6185, 0.5594], [0.9825, 0.5048, 0.3657]]], [[[0.9839, 0.4046, 0.5664], [0.6379, 0.3428, 0.7918]], [[0.5065, 0.3117, 0.0786], [0.0611, 0.1536, 0.7132]]]]])
in1Sub39664 = tf.constant([[[[[0.8678, 0.5291, 0.9681], [0.699, 0.7861, 0.0831]], [[0.2136, 0.1981, 0.9801], [0.4041, 0.9292, 0.047]]], [[[0.7739, 0.4579, 0.9224], [0.1935, 0.7587, 0.2892]], [[0.3236, 0.9893, 0.6931], [0.8732, 0.7309, 0.3415]]]]])
print (np.array2string(model.predict([in0Up_68101,in0Con13280,in0Sub39664,in1Sub39664],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Cro9702.png')

LUp_68101 = up_sampling2D_layer([[[[1.9722, 1.9379], [1.3679, 1.0135], [1.2532, 1.3532], [1.7966, 1.5756]]]], 2, 2, Up_68101), 
LSof17035 = softmax_layer(Up_68101, 1, Sof17035), 
LRes74401 = reshape_layer(Sof17035, [2, 8, 2, 1], Res74401), 
LCon13280 = concatenate_layer([Res74401,[[[[[0.2738, 0.6224], [0.6327, 0.3241]], [[0.6606, 0.611], [0.8021, 0.5062]], [[0.0787, 0.6169], [0.6067, 0.3268]], [[0.171, 0.9882], [0.9064, 0.8903]], [[0.1475, 0.4835], [0.495, 0.586]], [[0.8551, 0.8574], [0.24, 0.3969]], [[0.1085, 0.8493], [0.991, 0.2334]], [[0.6308, 0.9329], [0.2888, 0.9312]]], [[[0.6716, 0.6641], [0.9599, 0.4869]], [[0.0033, 0.1019], [0.1376, 0.698]], [[0.5309, 0.5722], [0.1162, 0.6184]], [[0.1937, 0.9931], [0.7142, 0.145]], [[0.1857, 0.088], [0.5014, 0.6119]], [[0.7754, 0.0756], [0.3249, 0.4809]], [[0.1697, 0.8428], [0.0606, 0.0937]], [[0.9301, 0.1843], [0.4106, 0.9757]]]]]], 4, Con13280), 
LSub39664 = subtract_layer([[[[[0.0971, 0.2666, 0.0596], [0.3445, 0.2422, 0.5842]], [[0.7054, 0.6185, 0.5594], [0.9825, 0.5048, 0.3657]]], [[[0.9839, 0.4046, 0.5664], [0.6379, 0.3428, 0.7918]], [[0.5065, 0.3117, 0.0786], [0.0611, 0.1536, 0.7132]]]]], [[[[[0.8678, 0.5291, 0.9681], [0.699, 0.7861, 0.0831]], [[0.2136, 0.1981, 0.9801], [0.4041, 0.9292, 0.047]]], [[[0.7739, 0.4579, 0.9224], [0.1935, 0.7587, 0.2892]], [[0.3236, 0.9893, 0.6931], [0.8732, 0.7309, 0.3415]]]]], Sub39664), 
LZer28700 = zero_padding3D_layer(Sub39664, 0, 0, 6, 0, 0, 0, Zer28700), 
LMul90285 = multiply_layer([Con13280,Zer28700], Mul90285), 
LRes1690 = reshape_layer(Mul90285, [2, 8, 6], Res1690), 
LCro9702 = cropping2D_layer(Res1690, 1, 0, 4, 2, Cro9702), 
exec_layers([LUp_68101,LSof17035,LRes74401,LCon13280,LSub39664,LZer28700,LMul90285,LRes1690,LCro9702],["Up_68101","Sof17035","Res74401","Con13280","Sub39664","Zer28700","Mul90285","Res1690","Cro9702"],Cro9702,"Cro9702")

Actual (Unparsed): [[[[0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000]]]]

Expected (Unparsed): [[[[0.0,0.0,0.0,0.0,0.0,0.0],[0.0,0.0,0.0,0.0,0.0,0.0]]]]

Actual:   [[[[0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]]]]

Expected: [[[[0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]]]]