import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Dot23404 = tf.keras.layers.Input(shape=([2, 3]))
in1Dot23404 = tf.keras.layers.Input(shape=([2, 3]))
in0Max79095 = tf.keras.layers.Input(shape=([2, 2]))
in1Max79095 = tf.keras.layers.Input(shape=([2, 2]))

Dot23404 = keras.layers.Dot(axes=(2, 2), name = 'Dot23404', )([in0Dot23404,in1Dot23404])
Max79095 = keras.layers.Maximum(name = 'Max79095', )([in0Max79095,in1Max79095])
Ave82328 = keras.layers.Average(name = 'Ave82328', )([Dot23404,Max79095])
ELU2791 = keras.layers.ELU(alpha=2.640725036763577, name = 'ELU2791', )(Ave82328)
model = tf.keras.models.Model(inputs=[in0Dot23404,in1Dot23404,in0Max79095,in1Max79095], outputs=ELU2791)
in0Dot23404 = tf.constant([[[0.9268, 0.2018, 0.4801], [0.7943, 0.9673, 0.7179]]])
in1Dot23404 = tf.constant([[[0.9463, 0.8663, 0.1161], [0.9238, 0.3043, 0.2987]]])
in0Max79095 = tf.constant([[[0.0801, 0.9472], [0.2349, 0.8614]]])
in1Max79095 = tf.constant([[[0.6474, 0.0433], [0.7606, 0.5327]]])
print (np.array2string(model.predict([in0Dot23404,in1Dot23404,in0Max79095,in1Max79095],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='ELU2791.png')

LDot23404 = dot_layer([[[0.9268, 0.2018, 0.4801], [0.7943, 0.9673, 0.7179]]], [[[0.9463, 0.8663, 0.1161], [0.9238, 0.3043, 0.2987]]], 2, 2, Dot23404), 
LMax79095 = maximum_layer([[[[0.0801, 0.9472], [0.2349, 0.8614]]], [[[0.6474, 0.0433], [0.7606, 0.5327]]]], Max79095), 
LAve82328 = average_layer([Dot23404,Max79095], Ave82328), 
LELU2791 = elu_layer(Ave82328, 2.640725036763577, ELU2791), 
exec_layers([LDot23404,LMax79095,LAve82328,LELU2791],["Dot23404","Max79095","Ave82328","ELU2791"],ELU2791,"ELU2791")

Actual (Unparsed): [[[0.8774949, 1.0040957], [1.2167831, 1.0519802]]]

Expected (Unparsed): [[[0.877494895,1.004095725],[1.216783135,1.05198023]]]

Actual:   [[[0.8775, 1.0041], [1.2168, 1.052]]]

Expected: [[[0.8775, 1.0041], [1.2168, 1.052]]]