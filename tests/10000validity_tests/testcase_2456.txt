import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Mul91817 = tf.keras.layers.Input(shape=([1, 2, 1, 1]))
in1Mul91817 = tf.keras.layers.Input(shape=([1, 2, 1, 1]))
in0Con22412 = tf.keras.layers.Input(shape=([2, 17]))
in0Sub60976 = tf.keras.layers.Input(shape=([2, 3, 3, 2]))
in1Sub60976 = tf.keras.layers.Input(shape=([2, 3, 3, 2]))

Mul91817 = keras.layers.Multiply(name = 'Mul91817', )([in0Mul91817,in1Mul91817])
Res66444 = keras.layers.Reshape((1, 2, 1), name = 'Res66444', )(Mul91817)
Res78820 = keras.layers.Reshape((1, 2), name = 'Res78820', )(Res66444)
LST90272 = keras.layers.LSTM(2,recurrent_activation='sigmoid', name = 'LST90272', )(Res78820)
Res61184 = keras.layers.Reshape((2, 1), name = 'Res61184', )(LST90272)
Con22412 = keras.layers.Concatenate(axis=2, name = 'Con22412', )([Res61184,in0Con22412])
Sub60976 = keras.layers.Subtract(name = 'Sub60976', )([in0Sub60976,in1Sub60976])
Res92514 = keras.layers.Reshape((2, 3, 6), name = 'Res92514', )(Sub60976)
Res30441 = keras.layers.Reshape((2, 18), name = 'Res30441', )(Res92514)
Cro50558 = keras.layers.Cropping1D(cropping=((0, 1)), name = 'Cro50558', )(Res30441)
Zer75185 = keras.layers.ZeroPadding1D(padding=((1, 0)), name = 'Zer75185', )(Cro50558)
Max92689 = keras.layers.Maximum(name = 'Max92689', )([Con22412,Zer75185])
model = tf.keras.models.Model(inputs=[in0Mul91817,in1Mul91817,in0Con22412,in0Sub60976,in1Sub60976], outputs=Max92689)
w = model.get_layer('LST90272').get_weights() 
w[0] = np.array([[9, 7, 6, 1, 10, 6, 9, 4], [1, 10, 7, 2, 7, 6, 3, 7]])
w[1] = np.array([[2, 6, 1, 8, 5, 4, 6, 9], [2, 10, 9, 4, 9, 2, 9, 3]])
w[2] = np.array([2, 10, 2, 7, 3, 4, 7, 10])
model.get_layer('LST90272').set_weights(w) 
in0Mul91817 = tf.constant([[[[[0.303]], [[0.0355]]]]])
in1Mul91817 = tf.constant([[[[[0.6621]], [[0.0436]]]]])
in0Con22412 = tf.constant([[[0.4816, 0.6599, 0.7787, 0.6905, 0.9073, 0.6934, 0.5071, 0.4913, 0.7636, 0.3783, 0.1038, 0.2316, 0.7395, 0.1329, 0.3035, 0.387, 0.7914], [0.0175, 0.9546, 0.0758, 0.0376, 0.2475, 0.7073, 0.2724, 0.3044, 0.9617, 0.3351, 0.1215, 0.8216, 0.3682, 0.6933, 0.6862, 0.5184, 0.0718]]])
in0Sub60976 = tf.constant([[[[[0.6723, 0.2672], [0.9518, 0.899], [0.9347, 0.7771]], [[0.8205, 0.0337], [0.412, 0.9985], [0.4685, 0.6745]], [[0.0745, 0.4938], [0.5598, 0.9189], [0.3231, 0.8382]]], [[[0.0577, 0.1701], [0.9908, 0.9661], [0.9112, 0.9429]], [[0.6439, 0.3748], [0.8451, 0.7806], [0.2428, 0.7182]], [[0.8762, 0.1836], [0.2292, 0.7504], [0.0772, 0.3849]]]]])
in1Sub60976 = tf.constant([[[[[0.1497, 0.28], [0.5403, 0.5313], [0.9919, 0.7828]], [[0.4545, 0.3263], [0.5187, 0.5862], [0.7042, 0.4767]], [[0.0123, 0.0873], [0.4211, 0.3448], [0.0115, 0.2965]]], [[[0.4749, 0.056], [0.8184, 0.1052], [0.98, 0.9348]], [[0.7776, 0.0737], [0.5077, 0.5517], [0.5928, 0.2017]], [[0.8475, 0.8503], [0.2338, 0.1036], [0.84, 0.795]]]]])
print (np.array2string(model.predict([in0Mul91817,in1Mul91817,in0Con22412,in0Sub60976,in1Sub60976],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Max92689.png')

LMul91817 = multiply_layer([[[[[[0.303]], [[0.0355]]]]], [[[[[0.6621]], [[0.0436]]]]]], Mul91817), 
LRes66444 = reshape_layer(Mul91817, [1, 2, 1], Res66444), 
LRes78820 = reshape_layer(Res66444, [1, 2], Res78820), 
LLST90272 = lstm_layer(Res78820,[[9, 7, 6, 1, 10, 6, 9, 4], [1, 10, 7, 2, 7, 6, 3, 7]],[[2, 6, 1, 8, 5, 4, 6, 9], [2, 10, 9, 4, 9, 2, 9, 3]],[2, 10, 2, 7, 3, 4, 7, 10], LST90272), 
LRes61184 = reshape_layer(LST90272, [2, 1], Res61184), 
LCon22412 = concatenate_layer([Res61184,[[[0.4816, 0.6599, 0.7787, 0.6905, 0.9073, 0.6934, 0.5071, 0.4913, 0.7636, 0.3783, 0.1038, 0.2316, 0.7395, 0.1329, 0.3035, 0.387, 0.7914], [0.0175, 0.9546, 0.0758, 0.0376, 0.2475, 0.7073, 0.2724, 0.3044, 0.9617, 0.3351, 0.1215, 0.8216, 0.3682, 0.6933, 0.6862, 0.5184, 0.0718]]]], 2, Con22412), 
LSub60976 = subtract_layer([[[[[0.6723, 0.2672], [0.9518, 0.899], [0.9347, 0.7771]], [[0.8205, 0.0337], [0.412, 0.9985], [0.4685, 0.6745]], [[0.0745, 0.4938], [0.5598, 0.9189], [0.3231, 0.8382]]], [[[0.0577, 0.1701], [0.9908, 0.9661], [0.9112, 0.9429]], [[0.6439, 0.3748], [0.8451, 0.7806], [0.2428, 0.7182]], [[0.8762, 0.1836], [0.2292, 0.7504], [0.0772, 0.3849]]]]], [[[[[0.1497, 0.28], [0.5403, 0.5313], [0.9919, 0.7828]], [[0.4545, 0.3263], [0.5187, 0.5862], [0.7042, 0.4767]], [[0.0123, 0.0873], [0.4211, 0.3448], [0.0115, 0.2965]]], [[[0.4749, 0.056], [0.8184, 0.1052], [0.98, 0.9348]], [[0.7776, 0.0737], [0.5077, 0.5517], [0.5928, 0.2017]], [[0.8475, 0.8503], [0.2338, 0.1036], [0.84, 0.795]]]]], Sub60976), 
LRes92514 = reshape_layer(Sub60976, [2, 3, 6], Res92514), 
LRes30441 = reshape_layer(Res92514, [2, 18], Res30441), 
LCro50558 = cropping1D_layer(Res30441, 0, 1, Cro50558), 
LZer75185 = zero_padding1D_layer(Cro50558, 1, 0, Zer75185), 
LMax92689 = maximum_layer([Con22412,Zer75185], Max92689), 
exec_layers([LMul91817,LRes66444,LRes78820,LLST90272,LRes61184,LCon22412,LSub60976,LRes92514,LRes30441,LCro50558,LZer75185,LMax92689],["Mul91817","Res66444","Res78820","LST90272","Res61184","Con22412","Sub60976","Res92514","Res30441","Cro50558","Zer75185","Max92689"],Max92689,"Max92689")

Actual (Unparsed): [[[0.7521666, 0.4816000, 0.6599000, 0.7787000, 0.6905000, 0.9073000, 0.6934000, 0.5071000, 0.4913000, 0.7636000, 0.3783000, 0.1038000, 0.2316000, 0.7395000, 0.1329000, 0.3035000, 0.3870000, 0.7914000], [0.7615493, 0.0175000, 0.9546000, 0.3677000, 0.0376000, 0.2475000, 0.7073000, 0.2724000, 0.3044000, 0.9617000, 0.3351000, 0.1978000, 0.8216000, 0.4065000, 0.6933000, 0.6862000, 0.5184000, 0.5417000]]]

Expected (Unparsed): [[[0.7521665580694629,0.4816,0.6599,0.7787,0.6905,0.9073,0.6934,0.5071,0.4913,0.7636,0.3783,0.1038,0.2316,0.7395,0.1329,0.3035,0.387,0.7914],[0.761549309334034,0.0175,0.9546,0.3677,0.0376,0.2475,0.7073,0.2724,0.3044,0.9617,0.3351,0.19779999999999998,0.8216,0.40650000000000003,0.6933,0.6862,0.5184,0.5417]]]

Actual:   [[[0.7522, 0.4816, 0.6599, 0.7787, 0.6905, 0.9073, 0.6934, 0.5071, 0.4913, 0.7636, 0.3783, 0.1038, 0.2316, 0.7395, 0.1329, 0.3035, 0.387, 0.7914], [0.7616, 0.0175, 0.9546, 0.3677, 0.0376, 0.2475, 0.7073, 0.2724, 0.3044, 0.9617, 0.3351, 0.1978, 0.8216, 0.4065, 0.6933, 0.6862, 0.5184, 0.5417]]]

Expected: [[[0.7522, 0.4816, 0.6599, 0.7787, 0.6905, 0.9073, 0.6934, 0.5071, 0.4913, 0.7636, 0.3783, 0.1038, 0.2316, 0.7395, 0.1329, 0.3035, 0.387, 0.7914], [0.7616, 0.0175, 0.9546, 0.3677, 0.0376, 0.2475, 0.7073, 0.2724, 0.3044, 0.9617, 0.3351, 0.1978, 0.8216, 0.4066, 0.6933, 0.6862, 0.5184, 0.5417]]]