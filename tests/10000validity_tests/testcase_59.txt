import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Sub55129 = tf.keras.layers.Input(shape=([2, 2]))
in1Sub55129 = tf.keras.layers.Input(shape=([2, 2]))
in0Con97807 = tf.keras.layers.Input(shape=([2, 3, 3]))
in0Con33397 = tf.keras.layers.Input(shape=([2, 2, 1]))
in0Con17077 = tf.keras.layers.Input(shape=([2, 3, 2]))
in0Sub96944 = tf.keras.layers.Input(shape=([2, 3, 3, 3]))
in1Sub96944 = tf.keras.layers.Input(shape=([2, 3, 3, 3]))

Sub55129 = keras.layers.Subtract(name = 'Sub55129', )([in0Sub55129,in1Sub55129])
Res93241 = keras.layers.Reshape((2, 2, 1), name = 'Res93241', )(Sub55129)
Ave14701 = keras.layers.AveragePooling2D(pool_size=(1, 1), name = 'Ave14701', )(Res93241)
Zer49876 = keras.layers.ZeroPadding2D(padding=((0, 0), (1, 0)), name = 'Zer49876', )(Ave14701)
Con97807 = keras.layers.Concatenate(axis=3, name = 'Con97807', )([Zer49876,in0Con97807])
Con33397 = keras.layers.Conv2D(2, (1, 2),strides=(2, 1), padding='same', dilation_rate=(1, 1), name = 'Con33397', )(in0Con33397)
Zer44405 = keras.layers.ZeroPadding2D(padding=((1, 0), (1, 0)), name = 'Zer44405', )(Con33397)
Con17077 = keras.layers.Concatenate(axis=3, name = 'Con17077', )([Zer44405,in0Con17077])
Sub96944 = keras.layers.Subtract(name = 'Sub96944', )([in0Sub96944,in1Sub96944])
Res53462 = keras.layers.Reshape((2, 3, 9), name = 'Res53462', )(Sub96944)
Con16277 = keras.layers.Conv2DTranspose(4, (1, 3),strides=(1, 1), padding='same', name = 'Con16277', )(Res53462)
Min76624 = keras.layers.Minimum(name = 'Min76624', )([Con17077,Con16277])
Max81171 = keras.layers.Maximum(name = 'Max81171', )([Con97807,Min76624])
model = tf.keras.models.Model(inputs=[in0Sub55129,in1Sub55129,in0Con97807,in0Con33397,in0Con17077,in0Sub96944,in1Sub96944], outputs=Max81171)
w = model.get_layer('Con33397').get_weights() 
w[0] = np.array([[[[0.8101, 0.3615]], [[0.9153, 0.71]]]])
w[1] = np.array([0, 0])
model.get_layer('Con33397').set_weights(w) 
w = model.get_layer('Con16277').get_weights() 
w[0] = np.array([[[[0.269, 0.5491, 0.6483, 0.8428, 0.699, 0.8617, 0.0669, 0.1896, 0.2103], [0.0602, 0.9574, 0.4018, 0.2257, 0.8177, 0.0181, 0.6739, 0.4312, 0.2891], [0.03, 0.4296, 0.0797, 0.7073, 0.6638, 0.3073, 0.0833, 0.6781, 0.4053], [0.3082, 0.9571, 0.604, 0.6158, 0.7106, 0.1878, 0.1742, 0.0801, 0.8174]], [[0.0069, 0.5308, 0.129, 0.7263, 0.8696, 0.5469, 0.5741, 0.0904, 0.16], [0.6295, 0.2406, 0.2728, 0.7783, 0.6032, 0.843, 0.3869, 0.2954, 0.5204], [0.314, 0.4637, 0.3096, 0.696, 0.4655, 0.3904, 0.4823, 0.8707, 0.0381], [0.3222, 0.4897, 0.1693, 0.78, 0.987, 0.7854, 0.4402, 0.1822, 0.6752]], [[0.6368, 0.6356, 0.8961, 0.7317, 0.3732, 0.1262, 0.6585, 0.0573, 0.1619], [0.2295, 0.758, 0.461, 0.9153, 0.7751, 0.6921, 0.7081, 0.1238, 0.2325], [0.6834, 0.7572, 0.5098, 0.7806, 0.1495, 0.9929, 0.3998, 0.7129, 0.057], [0.2224, 0.6264, 0.7395, 0.3261, 0.8315, 0.5862, 0.0757, 0.1003, 0.7686]]]])
w[1] = np.array([0, 0, 0, 0])
model.get_layer('Con16277').set_weights(w) 
in0Sub55129 = tf.constant([[[0.7383, 0.326], [0.8284, 0.7508]]])
in1Sub55129 = tf.constant([[[0.6454, 0.1274], [0.2635, 0.1246]]])
in0Con97807 = tf.constant([[[[0.5973, 0.9133, 0.2643], [0.7026, 0.7959, 0.4916], [0.068, 0.4069, 0.5881]], [[0.2289, 0.4497, 0.6132], [0.6002, 0.212, 0.035], [0.9319, 0.1637, 0.0173]]]])
in0Con33397 = tf.constant([[[[0.4073], [0.4394]], [[0.9231], [0.8244]]]])
in0Con17077 = tf.constant([[[[0.3424, 0.8291], [0.0998, 0.0666], [0.4991, 0.6335]], [[0.0452, 0.5599], [0.0412, 0.0443], [0.987, 0.9263]]]])
in0Sub96944 = tf.constant([[[[[0.2169, 0.1674, 0.3414], [0.5489, 0.5708, 0.7533], [0.7729, 0.7009, 0.3955]], [[0.165, 0.4887, 0.8927], [0.5036, 0.4833, 0.1107], [0.6966, 0.4976, 0.05]], [[0.3987, 0.8701, 0.9325], [0.3419, 0.4237, 0.4445], [0.1469, 0.0932, 0.9895]]], [[[0.8706, 0.6768, 0.6981], [0.497, 0.8833, 0.5778], [0.5976, 0.1839, 0.8685]], [[0.2993, 0.179, 0.8188], [0.2942, 0.9755, 0.6956], [0.4819, 0.2014, 0.1323]], [[0.8565, 0.0192, 0.8428], [0.8402, 0.0243, 0.1243], [0.302, 0.2902, 0.4151]]]]])
in1Sub96944 = tf.constant([[[[[0.7714, 0.3325, 0.6149], [0.2963, 0.8992, 0.7121], [0.5341, 0.9436, 0.8294]], [[0.1261, 0.0644, 0.0365], [0.8927, 0.9641, 0.0997], [0.2466, 0.129, 0.4441]], [[0.1436, 0.0047, 0.7338], [0.1602, 0.8534, 0.8203], [0.1266, 0.4953, 0.344]]], [[[0.0722, 0.1344, 0.3311], [0.3884, 0.8857, 0.8031], [0.1475, 0.7557, 0.5738]], [[0.7754, 0.9076, 0.9253], [0.1258, 0.0078, 0.0945], [0.3347, 0.403, 0.8395]], [[0.8856, 0.1297, 0.0193], [0.0679, 0.7282, 0.1123], [0.3713, 0.742, 0.5183]]]]])
print (np.array2string(model.predict([in0Sub55129,in1Sub55129,in0Con97807,in0Con33397,in0Con17077,in0Sub96944,in1Sub96944],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Max81171.png')

LSub55129 = subtract_layer([[[0.7383, 0.326], [0.8284, 0.7508]]], [[[0.6454, 0.1274], [0.2635, 0.1246]]], Sub55129), 
LRes93241 = reshape_layer(Sub55129, [2, 2, 1], Res93241), 
LAve14701 = average_pooling2D_layer(Res93241, 1, 1, Ave14701), 
LZer49876 = zero_padding2D_layer(Ave14701, 0, 0, 1, 0, Zer49876), 
LCon97807 = concatenate_layer([Zer49876,[[[[0.5973, 0.9133, 0.2643], [0.7026, 0.7959, 0.4916], [0.068, 0.4069, 0.5881]], [[0.2289, 0.4497, 0.6132], [0.6002, 0.212, 0.035], [0.9319, 0.1637, 0.0173]]]]], 3, Con97807), 
LCon33397 = conv2D_layer([[[[0.4073], [0.4394]], [[0.9231], [0.8244]]]], 1, 2,[[[[0.8101, 0.3615]], [[0.9153, 0.71]]]],[0, 0], 2, 1, true, 1, 1, Con33397), 
LZer44405 = zero_padding2D_layer(Con33397, 1, 0, 1, 0, Zer44405), 
LCon17077 = concatenate_layer([Zer44405,[[[[0.3424, 0.8291], [0.0998, 0.0666], [0.4991, 0.6335]], [[0.0452, 0.5599], [0.0412, 0.0443], [0.987, 0.9263]]]]], 3, Con17077), 
LSub96944 = subtract_layer([[[[[0.2169, 0.1674, 0.3414], [0.5489, 0.5708, 0.7533], [0.7729, 0.7009, 0.3955]], [[0.165, 0.4887, 0.8927], [0.5036, 0.4833, 0.1107], [0.6966, 0.4976, 0.05]], [[0.3987, 0.8701, 0.9325], [0.3419, 0.4237, 0.4445], [0.1469, 0.0932, 0.9895]]], [[[0.8706, 0.6768, 0.6981], [0.497, 0.8833, 0.5778], [0.5976, 0.1839, 0.8685]], [[0.2993, 0.179, 0.8188], [0.2942, 0.9755, 0.6956], [0.4819, 0.2014, 0.1323]], [[0.8565, 0.0192, 0.8428], [0.8402, 0.0243, 0.1243], [0.302, 0.2902, 0.4151]]]]], [[[[[0.7714, 0.3325, 0.6149], [0.2963, 0.8992, 0.7121], [0.5341, 0.9436, 0.8294]], [[0.1261, 0.0644, 0.0365], [0.8927, 0.9641, 0.0997], [0.2466, 0.129, 0.4441]], [[0.1436, 0.0047, 0.7338], [0.1602, 0.8534, 0.8203], [0.1266, 0.4953, 0.344]]], [[[0.0722, 0.1344, 0.3311], [0.3884, 0.8857, 0.8031], [0.1475, 0.7557, 0.5738]], [[0.7754, 0.9076, 0.9253], [0.1258, 0.0078, 0.0945], [0.3347, 0.403, 0.8395]], [[0.8856, 0.1297, 0.0193], [0.0679, 0.7282, 0.1123], [0.3713, 0.742, 0.5183]]]]], Sub96944), 
LRes53462 = reshape_layer(Sub96944, [2, 3, 9], Res53462), 
LCon16277 = conv2D_transpose_layer(Res53462, 1, 3,[[[[0.269, 0.5491, 0.6483, 0.8428, 0.699, 0.8617, 0.0669, 0.1896, 0.2103], [0.0602, 0.9574, 0.4018, 0.2257, 0.8177, 0.0181, 0.6739, 0.4312, 0.2891], [0.03, 0.4296, 0.0797, 0.7073, 0.6638, 0.3073, 0.0833, 0.6781, 0.4053], [0.3082, 0.9571, 0.604, 0.6158, 0.7106, 0.1878, 0.1742, 0.0801, 0.8174]], [[0.0069, 0.5308, 0.129, 0.7263, 0.8696, 0.5469, 0.5741, 0.0904, 0.16], [0.6295, 0.2406, 0.2728, 0.7783, 0.6032, 0.843, 0.3869, 0.2954, 0.5204], [0.314, 0.4637, 0.3096, 0.696, 0.4655, 0.3904, 0.4823, 0.8707, 0.0381], [0.3222, 0.4897, 0.1693, 0.78, 0.987, 0.7854, 0.4402, 0.1822, 0.6752]], [[0.6368, 0.6356, 0.8961, 0.7317, 0.3732, 0.1262, 0.6585, 0.0573, 0.1619], [0.2295, 0.758, 0.461, 0.9153, 0.7751, 0.6921, 0.7081, 0.1238, 0.2325], [0.6834, 0.7572, 0.5098, 0.7806, 0.1495, 0.9929, 0.3998, 0.7129, 0.057], [0.2224, 0.6264, 0.7395, 0.3261, 0.8315, 0.5862, 0.0757, 0.1003, 0.7686]]]],[0, 0, 0, 0], 1, 1, true, Con16277), 
LMin76624 = minimum_layer([Con17077,Con16277], Min76624), 
LMax81171 = maximum_layer([Con97807,Min76624], Max81171), 
exec_layers([LSub55129,LRes93241,LAve14701,LZer49876,LCon97807,LCon33397,LZer44405,LCon17077,LSub96944,LRes53462,LCon16277,LMin76624,LMax81171],["Sub55129","Res93241","Ave14701","Zer49876","Con97807","Con33397","Zer44405","Con17077","Sub96944","Res53462","Con16277","Min76624","Max81171"],Max81171,"Max81171")

Actual (Unparsed): [[[[0.0000000, 0.5973000, 0.9133000, 0.2643000], [0.0929000, 0.7026000, 0.7959000, 0.4916000], [0.1986000, 0.0680000, 0.4991000, 0.5881000]], [[0.0000000, 0.2289000, 0.4497000, 0.6132000], [0.7321365, 0.6002000, 0.2120000, 0.0443000], [0.6262000, 0.9319000, 0.1637000, 0.0173000]]]]

Expected (Unparsed): [[[[0,0.5973,0.9133,0.2643],[0.09289999999999998,0.7026,0.7959,0.4916],[0.1986,0.068,0.4991,0.5881]],[[0,0.2289,0.4497,0.6132],[0.73213655,0.6002,0.212,0.0443],[0.6262,0.9319,0.1637,0.0173]]]]

Actual:   [[[[0, 0.5973, 0.9133, 0.2643], [0.0929, 0.7026, 0.7959, 0.4916], [0.1986, 0.068, 0.4991, 0.5881]], [[0, 0.2289, 0.4497, 0.6132], [0.7322, 0.6002, 0.212, 0.0443], [0.6262, 0.9319, 0.1637, 0.0173]]]]

Expected: [[[[0, 0.5973, 0.9133, 0.2643], [0.0929, 0.7026, 0.7959, 0.4916], [0.1986, 0.068, 0.4991, 0.5881]], [[0, 0.2289, 0.4497, 0.6132], [0.7322, 0.6002, 0.212, 0.0443], [0.6262, 0.9319, 0.1637, 0.0173]]]]