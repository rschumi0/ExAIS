import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Dot87589 = tf.keras.layers.Input(shape=([2]))
in1Dot87589 = tf.keras.layers.Input(shape=([2]))

Dot87589 = keras.layers.Dot(axes=(1, 1), name = 'Dot87589', )([in0Dot87589,in1Dot87589])
Res87921 = keras.layers.Reshape((1, 1), name = 'Res87921', )(Dot87589)
Loc93576 = keras.layers.LocallyConnected1D(2, (1),strides=(1), name = 'Loc93576', )(Res87921)
Res52762 = keras.layers.Reshape((1, 2, 1), name = 'Res52762', )(Loc93576)
Res91736 = keras.layers.Reshape((1, 2, 1, 1), name = 'Res91736', )(Res52762)
Glo27168 = keras.layers.GlobalMaxPool3D(name = 'Glo27168', )(Res91736)
model = tf.keras.models.Model(inputs=[in0Dot87589,in1Dot87589], outputs=Glo27168)
w = model.get_layer('Loc93576').get_weights() 
w[0] = np.array([[[0.6096, 0.8025]]])
w[1] = np.array([[0, 0]])
model.get_layer('Loc93576').set_weights(w) 
in0Dot87589 = tf.constant([[0.6418, 0.227]])
in1Dot87589 = tf.constant([[0.5321, 0.027]])
print (np.array2string(model.predict([in0Dot87589,in1Dot87589],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Glo27168.png')

LDot87589 = dot_layer([[0.6418, 0.227]], [[0.5321, 0.027]], 1, 1, Dot87589), 
LRes87921 = reshape_layer(Dot87589, [1, 1], Res87921), 
LLoc93576 = locally_connected1D_layer(Res87921, 1,[[[0.6096, 0.8025]]],[[0, 0]], 1, Loc93576), 
LRes52762 = reshape_layer(Loc93576, [1, 2, 1], Res52762), 
LRes91736 = reshape_layer(Res52762, [1, 2, 1, 1], Res91736), 
LGlo27168 = global_max_pool3D_layer(Res91736, Glo27168), 
exec_layers([LDot87589,LRes87921,LLoc93576,LRes52762,LRes91736,LGlo27168],["Dot87589","Res87921","Loc93576","Res52762","Res91736","Glo27168"],Glo27168,"Glo27168")

Actual (Unparsed): [[0.2789737]]

Expected (Unparsed): [[0.27897370095]]

Actual:   [[0.279]]

Expected: [[0.279]]