import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Sub67075 = tf.keras.layers.Input(shape=([2, 3, 3]))
in1Sub67075 = tf.keras.layers.Input(shape=([2, 3, 3]))

Sub67075 = keras.layers.Subtract(name = 'Sub67075', )([in0Sub67075,in1Sub67075])
Up_97581 = keras.layers.UpSampling2D(size=(2, 2), name = 'Up_97581', )(Sub67075)
model = tf.keras.models.Model(inputs=[in0Sub67075,in1Sub67075], outputs=Up_97581)
in0Sub67075 = tf.constant([[[[0.7178, 0.5799, 0.7217], [0.7152, 0.3072, 0.6788], [0.7625, 0.6322, 0.3653]], [[0.0631, 0.7862, 0.6407], [0.2471, 0.581, 0.6331], [0.8893, 0.82, 0.9498]]]])
in1Sub67075 = tf.constant([[[[0.7836, 0.7319, 0.1492], [0.5871, 0.65, 0.4463], [0.0581, 0.6627, 0.9964]], [[0.8034, 0.2416, 0.1226], [0.6667, 0.0373, 0.4967], [0.7316, 0.5776, 0.5809]]]])
print (np.array2string(model.predict([in0Sub67075,in1Sub67075],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Up_97581.png')

LSub67075 = subtract_layer([[[[0.7178, 0.5799, 0.7217], [0.7152, 0.3072, 0.6788], [0.7625, 0.6322, 0.3653]], [[0.0631, 0.7862, 0.6407], [0.2471, 0.581, 0.6331], [0.8893, 0.82, 0.9498]]]], [[[[0.7836, 0.7319, 0.1492], [0.5871, 0.65, 0.4463], [0.0581, 0.6627, 0.9964]], [[0.8034, 0.2416, 0.1226], [0.6667, 0.0373, 0.4967], [0.7316, 0.5776, 0.5809]]]], Sub67075), 
LUp_97581 = up_sampling2D_layer(Sub67075, 2, 2, Up_97581), 
exec_layers([LSub67075,LUp_97581],["Sub67075","Up_97581"],Up_97581,"Up_97581")

Actual (Unparsed): [[[[-0.0658000, -0.1520000, 0.5725000], [-0.0658000, -0.1520000, 0.5725000], [0.1281000, -0.3428000, 0.2325000], [0.1281000, -0.3428000, 0.2325000], [0.7044000, -0.0305000, -0.6311000], [0.7044000, -0.0305000, -0.6311000]], [[-0.0658000, -0.1520000, 0.5725000], [-0.0658000, -0.1520000, 0.5725000], [0.1281000, -0.3428000, 0.2325000], [0.1281000, -0.3428000, 0.2325000], [0.7044000, -0.0305000, -0.6311000], [0.7044000, -0.0305000, -0.6311000]], [[-0.7403000, 0.5446000, 0.5181000], [-0.7403000, 0.5446000, 0.5181000], [-0.4196000, 0.5437000, 0.1364000], [-0.4196000, 0.5437000, 0.1364000], [0.1577000, 0.2424000, 0.3689000], [0.1577000, 0.2424000, 0.3689000]], [[-0.7403000, 0.5446000, 0.5181000], [-0.7403000, 0.5446000, 0.5181000], [-0.4196000, 0.5437000, 0.1364000], [-0.4196000, 0.5437000, 0.1364000], [0.1577000, 0.2424000, 0.3689000], [0.1577000, 0.2424000, 0.3689000]]]]

Expected (Unparsed): [[[[-0.06579999999999997,-0.15200000000000002,0.5725],[-0.06579999999999997,-0.15200000000000002,0.5725],[0.1281,-0.34280000000000005,0.23249999999999998],[0.1281,-0.34280000000000005,0.23249999999999998],[0.7043999999999999,-0.03049999999999997,-0.6311],[0.7043999999999999,-0.03049999999999997,-0.6311]],[[-0.06579999999999997,-0.15200000000000002,0.5725],[-0.06579999999999997,-0.15200000000000002,0.5725],[0.1281,-0.34280000000000005,0.23249999999999998],[0.1281,-0.34280000000000005,0.23249999999999998],[0.7043999999999999,-0.03049999999999997,-0.6311],[0.7043999999999999,-0.03049999999999997,-0.6311]],[[-0.7403,0.5446,0.5181],[-0.7403,0.5446,0.5181],[-0.4196,0.5437,0.13640000000000002],[-0.4196,0.5437,0.13640000000000002],[0.15769999999999995,0.24239999999999995,0.3689],[0.15769999999999995,0.24239999999999995,0.3689]],[[-0.7403,0.5446,0.5181],[-0.7403,0.5446,0.5181],[-0.4196,0.5437,0.13640000000000002],[-0.4196,0.5437,0.13640000000000002],[0.15769999999999995,0.24239999999999995,0.3689],[0.15769999999999995,0.24239999999999995,0.3689]]]]

Actual:   [[[[-0.0658, -0.152, 0.5725], [-0.0658, -0.152, 0.5725], [0.1281, -0.3428, 0.2325], [0.1281, -0.3428, 0.2325], [0.7044, -0.0305, -0.6311], [0.7044, -0.0305, -0.6311]], [[-0.0658, -0.152, 0.5725], [-0.0658, -0.152, 0.5725], [0.1281, -0.3428, 0.2325], [0.1281, -0.3428, 0.2325], [0.7044, -0.0305, -0.6311], [0.7044, -0.0305, -0.6311]], [[-0.7403, 0.5446, 0.5181], [-0.7403, 0.5446, 0.5181], [-0.4196, 0.5437, 0.1364], [-0.4196, 0.5437, 0.1364], [0.1577, 0.2424, 0.3689], [0.1577, 0.2424, 0.3689]], [[-0.7403, 0.5446, 0.5181], [-0.7403, 0.5446, 0.5181], [-0.4196, 0.5437, 0.1364], [-0.4196, 0.5437, 0.1364], [0.1577, 0.2424, 0.3689], [0.1577, 0.2424, 0.3689]]]]

Expected: [[[[-0.0657, -0.152, 0.5725], [-0.0657, -0.152, 0.5725], [0.1281, -0.3428, 0.2325], [0.1281, -0.3428, 0.2325], [0.7044, -0.0304, -0.6311], [0.7044, -0.0304, -0.6311]], [[-0.0657, -0.152, 0.5725], [-0.0657, -0.152, 0.5725], [0.1281, -0.3428, 0.2325], [0.1281, -0.3428, 0.2325], [0.7044, -0.0304, -0.6311], [0.7044, -0.0304, -0.6311]], [[-0.7403, 0.5446, 0.5181], [-0.7403, 0.5446, 0.5181], [-0.4196, 0.5437, 0.1365], [-0.4196, 0.5437, 0.1365], [0.1577, 0.2424, 0.3689], [0.1577, 0.2424, 0.3689]], [[-0.7403, 0.5446, 0.5181], [-0.7403, 0.5446, 0.5181], [-0.4196, 0.5437, 0.1365], [-0.4196, 0.5437, 0.1365], [0.1577, 0.2424, 0.3689], [0.1577, 0.2424, 0.3689]]]]