import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Dot30267 = tf.keras.layers.Input(shape=([3]))
in1Dot30267 = tf.keras.layers.Input(shape=([3]))
in0Con39556 = tf.keras.layers.Input(shape=([3, 3]))
in0Den51831 = tf.keras.layers.Input(shape=([3, 3]))
in0Ave3532 = tf.keras.layers.Input(shape=([1, 2, 2]))
in0Up_80982 = tf.keras.layers.Input(shape=([3, 3]))
in0Con37081 = tf.keras.layers.Input(shape=([1]))
in0Con18333 = tf.keras.layers.Input(shape=([10]))

Dot30267 = keras.layers.Dot(axes=(1, 1), name = 'Dot30267', )([in0Dot30267,in1Dot30267])
Res75824 = keras.layers.Reshape((1, 1), name = 'Res75824', )(Dot30267)
Zer92249 = keras.layers.ZeroPadding1D(padding=((2, 0)), name = 'Zer92249', )(Res75824)
Con39556 = keras.layers.Concatenate(axis=2, name = 'Con39556', )([Zer92249,in0Con39556])
Den51831 = keras.layers.Dense(4,name = 'Den51831', )(in0Den51831)
Add48155 = keras.layers.Add(name = 'Add48155', )([Con39556,Den51831])
Fla99428 = keras.layers.Flatten(name = 'Fla99428', )(Add48155)
Ave3532 = keras.layers.AveragePooling2D(pool_size=(1, 2), name = 'Ave3532', )(in0Ave3532)
Res62317 = keras.layers.Reshape((1, 2), name = 'Res62317', )(Ave3532)
Fla59759 = keras.layers.Flatten(name = 'Fla59759', )(Res62317)
Up_80982 = keras.layers.UpSampling1D(size=(1), name = 'Up_80982', )(in0Up_80982)
Sim98321 = keras.layers.SimpleRNN(1,name = 'Sim98321', )(Up_80982)
Con37081 = keras.layers.Concatenate(axis=1, name = 'Con37081', )([Sim98321,in0Con37081])
Add30005 = keras.layers.Add(name = 'Add30005', )([Fla59759,Con37081])
Con18333 = keras.layers.Concatenate(axis=1, name = 'Con18333', )([Add30005,in0Con18333])
Mul66348 = keras.layers.Multiply(name = 'Mul66348', )([Fla99428,Con18333])
model = tf.keras.models.Model(inputs=[in0Dot30267,in1Dot30267,in0Con39556,in0Den51831,in0Ave3532,in0Up_80982,in0Con37081,in0Con18333], outputs=Mul66348)
w = model.get_layer('Den51831').get_weights() 
w[0] = np.array([[0.7164, 0.7267, 0.0169, 0.6761], [0.8244, 0.4503, 0.6044, 0.9505], [0.2893, 0.5482, 0.5634, 0.0738]])
w[1] = np.array([0.2379, 0.4221, 0.5503, 0.4184])
model.get_layer('Den51831').set_weights(w) 
w = model.get_layer('Sim98321').get_weights() 
w[0] = np.array([[9], [2], [7]])
w[1] = np.array([[7]])
w[2] = np.array([6])
model.get_layer('Sim98321').set_weights(w) 
in0Dot30267 = tf.constant([[0.187, 0.5436, 0.9546]])
in1Dot30267 = tf.constant([[0.3962, 0.6382, 0.3933]])
in0Con39556 = tf.constant([[[0.4119, 0.0873, 0.8884], [0.7478, 0.6002, 0.9508], [0.352, 0.7457, 0.9669]]])
in0Den51831 = tf.constant([[[0.9757, 0.4707, 0.8056], [0.7814, 0.2285, 0.2032], [0.697, 0.0398, 0.1774]]])
in0Ave3532 = tf.constant([[[[1.597, 1.1142], [1.903, 1.2799]]]])
in0Up_80982 = tf.constant([[[1.8032, 1.5869, 1.8312], [1.9341, 1.6181, 1.3149], [1.5147, 1.8716, 1.5875]]])
in0Con37081 = tf.constant([[0.2511]])
in0Con18333 = tf.constant([[0.5681, 0.2489, 0.0435, 0.9793, 0.2474, 0.2831, 0.4088, 0.0552, 0.2652, 0.6662]])
print (np.array2string(model.predict([in0Dot30267,in1Dot30267,in0Con39556,in0Den51831,in0Ave3532,in0Up_80982,in0Con37081,in0Con18333],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Mul66348.png')

LDot30267 = dot_layer([[0.187, 0.5436, 0.9546]], [[0.3962, 0.6382, 0.3933]], 1, 1, Dot30267), 
LRes75824 = reshape_layer(Dot30267, [1, 1], Res75824), 
LZer92249 = zero_padding1D_layer(Res75824, 2, 0, Zer92249), 
LCon39556 = concatenate_layer([Zer92249,[[[0.4119, 0.0873, 0.8884], [0.7478, 0.6002, 0.9508], [0.352, 0.7457, 0.9669]]]], 2, Con39556), 
LDen51831 = dense_layer([[[0.9757, 0.4707, 0.8056], [0.7814, 0.2285, 0.2032], [0.697, 0.0398, 0.1774]]], [[0.7164, 0.7267, 0.0169, 0.6761], [0.8244, 0.4503, 0.6044, 0.9505], [0.2893, 0.5482, 0.5634, 0.0738]],[0.2379, 0.4221, 0.5503, 0.4184], Den51831), 
LAdd48155 = add_layer([Con39556,Den51831], Add48155), 
LFla99428 = flatten_layer(Add48155, Fla99428), 
LAve3532 = average_pooling2D_layer([[[[1.597, 1.1142], [1.903, 1.2799]]]], 1, 2, Ave3532), 
LRes62317 = reshape_layer(Ave3532, [1, 2], Res62317), 
LFla59759 = flatten_layer(Res62317, Fla59759), 
LUp_80982 = up_sampling1D_layer([[[1.8032, 1.5869, 1.8312], [1.9341, 1.6181, 1.3149], [1.5147, 1.8716, 1.5875]]], 1, Up_80982), 
LSim98321 = simple_rnn_layer(Up_80982,[[9], [2], [7]],[[7]],[6], Sim98321), 
LCon37081 = concatenate_layer([Sim98321,[[0.2511]]], 1, Con37081), 
LAdd30005 = add_layer([Fla59759,Con37081], Add30005), 
LCon18333 = concatenate_layer([Add30005,[[0.5681, 0.2489, 0.0435, 0.9793, 0.2474, 0.2831, 0.4088, 0.0552, 0.2652, 0.6662]]], 1, Con18333), 
LMul66348 = multiply_layer([Fla99428,Con18333], Mul66348), 
exec_layers([LDot30267,LRes75824,LZer92249,LCon39556,LDen51831,LAdd48155,LFla99428,LAve3532,LRes62317,LFla59759,LUp_80982,LSim98321,LCon37081,LAdd30005,LCon18333,LMul66348],["Dot30267","Res75824","Zer92249","Con39556","Den51831","Add48155","Fla99428","Ave3532","Res62317","Fla59759","Up_80982","Sim98321","Con37081","Add30005","Con18333","Mul66348"],Mul66348,"Mul66348")

Actual (Unparsed): [[4.2844908, 3.1810458, 0.7910539, 0.6156104, 0.0454512, 1.9116242, 0.3503911, 0.6029152, 0.6613660, 0.0770472, 0.3797085, 1.2707523]]

Expected (Unparsed): [[4.28449076,3.1810458534580004,0.791053941145,0.61561044316,0.045451241219999994,1.9116241247809997,0.35039112075600004,0.602915224845,0.661365976992,0.077047195104,0.37970847501599997,1.270752330264]]

Actual:   [[4.2845, 3.1811, 0.7911, 0.6157, 0.0455, 1.9117, 0.3504, 0.603, 0.6614, 0.0771, 0.3798, 1.2708]]

Expected: [[4.2845, 3.1811, 0.7911, 0.6157, 0.0455, 1.9117, 0.3504, 0.603, 0.6614, 0.0771, 0.3798, 1.2708]]