import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Ave22320 = tf.keras.layers.Input(shape=([2, 2, 1, 2]))
in1Ave22320 = tf.keras.layers.Input(shape=([2, 2, 1, 2]))

Ave22320 = keras.layers.Average(name = 'Ave22320', )([in0Ave22320,in1Ave22320])
Zer73848 = keras.layers.ZeroPadding3D(padding=((1, 1), (1, 1), (1, 1)), name = 'Zer73848', )(Ave22320)
model = tf.keras.models.Model(inputs=[in0Ave22320,in1Ave22320], outputs=Zer73848)
in0Ave22320 = tf.constant([[[[[0.2979, 0.9486]], [[0.8834, 0.7714]]], [[[0.4111, 0.3189]], [[0.85, 0.7846]]]]])
in1Ave22320 = tf.constant([[[[[0.1282, 0.5356]], [[0.8536, 0.3492]]], [[[0.2817, 0.0765]], [[0.037, 0.9284]]]]])
print (np.array2string(model.predict([in0Ave22320,in1Ave22320],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Zer73848.png')

LAve22320 = average_layer([[[[[[0.2979, 0.9486]], [[0.8834, 0.7714]]], [[[0.4111, 0.3189]], [[0.85, 0.7846]]]]], [[[[[0.1282, 0.5356]], [[0.8536, 0.3492]]], [[[0.2817, 0.0765]], [[0.037, 0.9284]]]]]], Ave22320), 
LZer73848 = zero_padding3D_layer(Ave22320, 1, 1, 1, 1, 1, 1, Zer73848), 
exec_layers([LAve22320,LZer73848],["Ave22320","Zer73848"],Zer73848,"Zer73848")

Actual (Unparsed): [[[[[0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000]], [[0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000]], [[0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000]], [[0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000]]], [[[0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000]], [[0.0000000, 0.0000000], [0.2130500, 0.7421000], [0.0000000, 0.0000000]], [[0.0000000, 0.0000000], [0.8685000, 0.5603000], [0.0000000, 0.0000000]], [[0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000]]], [[[0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000]], [[0.0000000, 0.0000000], [0.3464000, 0.1977000], [0.0000000, 0.0000000]], [[0.0000000, 0.0000000], [0.4435000, 0.8565000], [0.0000000, 0.0000000]], [[0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000]]], [[[0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000]], [[0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000]], [[0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000]], [[0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000]]]]]

Expected (Unparsed): [[[[[0,0],[0,0],[0,0]],[[0,0],[0,0],[0,0]],[[0,0],[0,0],[0,0]],[[0,0],[0,0],[0,0]]],[[[0,0],[0,0],[0,0]],[[0,0],[0.21305000000000002,0.7421],[0,0]],[[0,0],[0.8685,0.5603],[0,0]],[[0,0],[0,0],[0,0]]],[[[0,0],[0,0],[0,0]],[[0,0],[0.34640000000000004,0.19770000000000001],[0,0]],[[0,0],[0.4435,0.8565],[0,0]],[[0,0],[0,0],[0,0]]],[[[0,0],[0,0],[0,0]],[[0,0],[0,0],[0,0]],[[0,0],[0,0],[0,0]],[[0,0],[0,0],[0,0]]]]]

Actual:   [[[[[0, 0], [0, 0], [0, 0]], [[0, 0], [0, 0], [0, 0]], [[0, 0], [0, 0], [0, 0]], [[0, 0], [0, 0], [0, 0]]], [[[0, 0], [0, 0], [0, 0]], [[0, 0], [0.2131, 0.7421], [0, 0]], [[0, 0], [0.8685, 0.5603], [0, 0]], [[0, 0], [0, 0], [0, 0]]], [[[0, 0], [0, 0], [0, 0]], [[0, 0], [0.3464, 0.1977], [0, 0]], [[0, 0], [0.4435, 0.8565], [0, 0]], [[0, 0], [0, 0], [0, 0]]], [[[0, 0], [0, 0], [0, 0]], [[0, 0], [0, 0], [0, 0]], [[0, 0], [0, 0], [0, 0]], [[0, 0], [0, 0], [0, 0]]]]]

Expected: [[[[[0, 0], [0, 0], [0, 0]], [[0, 0], [0, 0], [0, 0]], [[0, 0], [0, 0], [0, 0]], [[0, 0], [0, 0], [0, 0]]], [[[0, 0], [0, 0], [0, 0]], [[0, 0], [0.2131, 0.7421], [0, 0]], [[0, 0], [0.8685, 0.5603], [0, 0]], [[0, 0], [0, 0], [0, 0]]], [[[0, 0], [0, 0], [0, 0]], [[0, 0], [0.3465, 0.1978], [0, 0]], [[0, 0], [0.4435, 0.8565], [0, 0]], [[0, 0], [0, 0], [0, 0]]], [[[0, 0], [0, 0], [0, 0]], [[0, 0], [0, 0], [0, 0]], [[0, 0], [0, 0], [0, 0]], [[0, 0], [0, 0], [0, 0]]]]]