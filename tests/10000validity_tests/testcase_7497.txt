import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Dot28067 = tf.keras.layers.Input(shape=([2, 3]))
in1Dot28067 = tf.keras.layers.Input(shape=([2, 3]))
in0Con49677 = tf.keras.layers.Input(shape=([3, 1]))
in0Dot58111 = tf.keras.layers.Input(shape=([3, 3]))
in1Dot58111 = tf.keras.layers.Input(shape=([3, 3]))

Dot28067 = keras.layers.Dot(axes=(1, 1), name = 'Dot28067', )([in0Dot28067,in1Dot28067])
Con49677 = keras.layers.Concatenate(axis=2, name = 'Con49677', )([Dot28067,in0Con49677])
Dot58111 = keras.layers.Dot(axes=(2, 1), name = 'Dot58111', )([in0Dot58111,in1Dot58111])
Res98312 = keras.layers.Reshape((3, 3, 1), name = 'Res98312', )(Dot58111)
Loc57143 = keras.layers.LocallyConnected2D(2, (2, 2),strides=(1, 1), name = 'Loc57143', )(Res98312)
Res74888 = keras.layers.Reshape((2, 4), name = 'Res74888', )(Loc57143)
Dot24159 = keras.layers.Dot(axes=(2, 2), name = 'Dot24159', )([Con49677,Res74888])
model = tf.keras.models.Model(inputs=[in0Dot28067,in1Dot28067,in0Con49677,in0Dot58111,in1Dot58111], outputs=Dot24159)
w = model.get_layer('Loc57143').get_weights() 
w[0] = np.array([[[0.0589, 0.4349], [0.0914, 0.1277], [0.0763, 0.9167], [0.9829, 0.1723]], [[0.3609, 0.1057], [0.829, 0.6666], [0.8436, 0.0004], [0.7888, 0.9767]], [[0.8454, 0.9639], [0.9967, 0.5705], [0.6246, 0.3357], [0.2275, 0.3767]], [[0.9596, 0.283], [0.6564, 0.2956], [0.2699, 0.1617], [0.8187, 0.3879]]])
w[1] = np.array([[[0, 0], [0, 0]], [[0, 0], [0, 0]]])
model.get_layer('Loc57143').set_weights(w) 
in0Dot28067 = tf.constant([[[0.0258, 0.6964, 0.7902], [0.8127, 0.0221, 0.7955]]])
in1Dot28067 = tf.constant([[[0.5999, 0.4724, 0.2338], [0.8351, 0.3093, 0.9855]]])
in0Con49677 = tf.constant([[[0.4874], [0.0445], [0.3748]]])
in0Dot58111 = tf.constant([[[0.3273, 0.2951, 0.2246], [0.4337, 0.1952, 0.9382], [0.4415, 0.1599, 0.5125]]])
in1Dot58111 = tf.constant([[[0.3781, 0.154, 0.0627], [0.5143, 0.2365, 0.8939], [0.5004, 0.2583, 0.9827]]])
print (np.array2string(model.predict([in0Dot28067,in1Dot28067,in0Con49677,in0Dot58111,in1Dot58111],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Dot24159.png')

LDot28067 = dot_layer([[[0.0258, 0.6964, 0.7902], [0.8127, 0.0221, 0.7955]]], [[[0.5999, 0.4724, 0.2338], [0.8351, 0.3093, 0.9855]]], 1, 1, Dot28067), 
LCon49677 = concatenate_layer([Dot28067,[[[0.4874], [0.0445], [0.3748]]]], 2, Con49677), 
LDot58111 = dot_layer([[[0.3273, 0.2951, 0.2246], [0.4337, 0.1952, 0.9382], [0.4415, 0.1599, 0.5125]]], [[[0.3781, 0.154, 0.0627], [0.5143, 0.2365, 0.8939], [0.5004, 0.2583, 0.9827]]], 2, 1, Dot58111), 
LRes98312 = reshape_layer(Dot58111, [3, 3, 1], Res98312), 
LLoc57143 = locally_connected2D_layer(Res98312, 2, 2,[[[0.0589, 0.4349], [0.0914, 0.1277], [0.0763, 0.9167], [0.9829, 0.1723]], [[0.3609, 0.1057], [0.829, 0.6666], [0.8436, 0.0004], [0.7888, 0.9767]], [[0.8454, 0.9639], [0.9967, 0.5705], [0.6246, 0.3357], [0.2275, 0.3767]], [[0.9596, 0.283], [0.6564, 0.2956], [0.2699, 0.1617], [0.8187, 0.3879]]],[[[0, 0], [0, 0]], [[0, 0], [0, 0]]], 1, 1, Loc57143), 
LRes74888 = reshape_layer(Loc57143, [2, 4], Res74888), 
LDot24159 = dot_layer(Con49677,Res74888, 2, 2, Dot24159), 
exec_layers([LDot28067,LCon49677,LDot58111,LRes98312,LLoc57143,LRes74888,LDot24159],["Dot28067","Con49677","Dot58111","Res98312","Loc57143","Res74888","Dot24159"],Dot24159,"Dot24159")

Actual (Unparsed): [[[2.6074128, 2.9663027], [0.8773614, 1.3247156], [3.2404063, 4.1712807]]]

Expected (Unparsed): [[[2.607412944625648,2.96630288782717],[0.8773613652372132,1.3247156153378932],[3.2404063526383777,4.171280778934673]]]

Actual:   [[[2.6075, 2.9664], [0.8774, 1.3248], [3.2405, 4.1713]]]

Expected: [[[2.6075, 2.9664], [0.8774, 1.3248], [3.2405, 4.1713]]]