import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Mul48169 = tf.keras.layers.Input(shape=([1, 2]))
in1Mul48169 = tf.keras.layers.Input(shape=([1, 2]))
in0Ave42608 = tf.keras.layers.Input(shape=([1, 1, 2, 1]))
in1Ave42608 = tf.keras.layers.Input(shape=([1, 1, 2, 1]))

Mul48169 = keras.layers.Multiply(name = 'Mul48169', )([in0Mul48169,in1Mul48169])
Res69204 = keras.layers.Reshape((1, 2, 1), name = 'Res69204', )(Mul48169)
Res55873 = keras.layers.Reshape((1, 2, 1, 1), name = 'Res55873', )(Res69204)
Zer28999 = keras.layers.ZeroPadding3D(padding=((0, 0), (0, 0), (2, 0)), name = 'Zer28999', )(Res55873)
Ave42608 = keras.layers.Average(name = 'Ave42608', )([in0Ave42608,in1Ave42608])
Zer9712 = keras.layers.ZeroPadding3D(padding=((0, 0), (1, 0), (1, 0)), name = 'Zer9712', )(Ave42608)
Max40528 = keras.layers.Maximum(name = 'Max40528', )([Zer28999,Zer9712])
Lea12061 = keras.layers.LeakyReLU(alpha=5.646868643338284, name = 'Lea12061', )(Max40528)
Con90834 = keras.layers.Conv3DTranspose(3, (1, 2, 1),strides=(1, 1, 1), padding='same', name = 'Con90834', )(Lea12061)
model = tf.keras.models.Model(inputs=[in0Mul48169,in1Mul48169,in0Ave42608,in1Ave42608], outputs=Con90834)
w = model.get_layer('Con90834').get_weights() 
w[0] = np.array([[[[[0.5435], [0.9953], [0.6397]]], [[[0.3679], [0.8914], [0.1992]]]]])
w[1] = np.array([0, 0, 0])
model.get_layer('Con90834').set_weights(w) 
in0Mul48169 = tf.constant([[[0.315, 0.6029]]])
in1Mul48169 = tf.constant([[[0.8991, 0.2704]]])
in0Ave42608 = tf.constant([[[[[0.8584], [0.4166]]]]])
in1Ave42608 = tf.constant([[[[[0.4251], [0.0246]]]]])
print (np.array2string(model.predict([in0Mul48169,in1Mul48169,in0Ave42608,in1Ave42608],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Con90834.png')

LMul48169 = multiply_layer([[[[0.315, 0.6029]]], [[[0.8991, 0.2704]]]], Mul48169), 
LRes69204 = reshape_layer(Mul48169, [1, 2, 1], Res69204), 
LRes55873 = reshape_layer(Res69204, [1, 2, 1, 1], Res55873), 
LZer28999 = zero_padding3D_layer(Res55873, 0, 0, 0, 0, 2, 0, Zer28999), 
LAve42608 = average_layer([[[[[[0.8584], [0.4166]]]]], [[[[[0.4251], [0.0246]]]]]], Ave42608), 
LZer9712 = zero_padding3D_layer(Ave42608, 0, 0, 1, 0, 1, 0, Zer9712), 
LMax40528 = maximum_layer([Zer28999,Zer9712], Max40528), 
LLea12061 = leaky_relu_layer(Max40528, 5.646868643338284, Lea12061), 
LCon90834 = conv3D_transpose_layer(Lea12061, 1, 2, 1,[[[[[0.5435], [0.9953], [0.6397]]], [[[0.3679], [0.8914], [0.1992]]]]],[0, 0, 0], 1, 1, 1, true, Con90834), 
exec_layers([LMul48169,LRes69204,LRes55873,LZer28999,LAve42608,LZer9712,LMax40528,LLea12061,LCon90834],["Mul48169","Res69204","Res55873","Zer28999","Ave42608","Zer9712","Max40528","Lea12061","Con90834"],Con90834,"Con90834")

Actual (Unparsed): [[[[[0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000], [0.1539282, 0.2818854, 0.1811736]], [[0.0000000, 0.0000000, 0.0000000], [0.3487911, 0.6387338, 0.4105275], [0.2240914, 0.4720224, 0.1975345]]]]]

Expected (Unparsed): [[[[[0.0,0.0,0.0],[0.0,0.0,0.0],[0.15392816774999998,0.28188538244999994,0.18117359505]],[[0.0,0.0,0.0],[0.34879112500000004,0.6387337750000001,0.41052747500000003],[0.22409145035,0.4720223681,0.19753454680000002]]]]]

Actual:   [[[[[0, 0, 0], [0, 0, 0], [0.154, 0.2819, 0.1812]], [[0, 0, 0], [0.3488, 0.6388, 0.4106], [0.2241, 0.4721, 0.1976]]]]]

Expected: [[[[[0, 0, 0], [0, 0, 0], [0.154, 0.2819, 0.1812]], [[0, 0, 0], [0.3488, 0.6388, 0.4106], [0.2241, 0.4721, 0.1976]]]]]