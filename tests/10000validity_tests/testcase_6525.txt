import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Max25123 = tf.keras.layers.Input(shape=([1, 2]))
in1Max25123 = tf.keras.layers.Input(shape=([1, 2]))
in0Min62908 = tf.keras.layers.Input(shape=([2, 2, 2, 2]))
in1Min62908 = tf.keras.layers.Input(shape=([2, 2, 2, 2]))

Max25123 = keras.layers.Maximum(name = 'Max25123', )([in0Max25123,in1Max25123])
Res22110 = keras.layers.Reshape((1, 2, 1), name = 'Res22110', )(Max25123)
Con50672 = keras.layers.Conv2D(4, (1, 1),strides=(1, 1), padding='valid', dilation_rate=(1, 1), name = 'Con50672', )(Res22110)
Res54102 = keras.layers.Reshape((1, 8), name = 'Res54102', )(Con50672)
Min62908 = keras.layers.Minimum(name = 'Min62908', )([in0Min62908,in1Min62908])
Lea7835 = keras.layers.LeakyReLU(alpha=0.545960136844077, name = 'Lea7835', )(Min62908)
Res84343 = keras.layers.Reshape((2, 2, 4), name = 'Res84343', )(Lea7835)
Res575 = keras.layers.Reshape((2, 8), name = 'Res575', )(Res84343)
Glo40145 = keras.layers.GlobalMaxPool1D(name = 'Glo40145', )(Res575)
Res81327 = keras.layers.Reshape((1, 8), name = 'Res81327', )(Glo40145)
Mul96960 = keras.layers.Multiply(name = 'Mul96960', )([Res54102,Res81327])
model = tf.keras.models.Model(inputs=[in0Max25123,in1Max25123,in0Min62908,in1Min62908], outputs=Mul96960)
w = model.get_layer('Con50672').get_weights() 
w[0] = np.array([[[[0.6595, 0.5059, 0.4538, 0.6887]]]])
w[1] = np.array([0, 0, 0, 0])
model.get_layer('Con50672').set_weights(w) 
in0Max25123 = tf.constant([[[0.3724, 0.5366]]])
in1Max25123 = tf.constant([[[0.248, 0.7616]]])
in0Min62908 = tf.constant([[[[[0.1703, 0.8369], [0.002, 0.7808]], [[0.0133, 0.7503], [0.0219, 0.8458]]], [[[0.505, 0.9886], [0.0373, 0.4538]], [[0.3056, 0.4643], [0.6137, 0.9914]]]]])
in1Min62908 = tf.constant([[[[[0.8528, 0.3773], [0.6865, 0.2451]], [[0.4715, 0.1125], [0.686, 0.2312]]], [[[0.2962, 0.0616], [0.205, 0.9232]], [[0.275, 0.2679], [0.2068, 0.5734]]]]])
print (np.array2string(model.predict([in0Max25123,in1Max25123,in0Min62908,in1Min62908],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Mul96960.png')

LMax25123 = maximum_layer([[[[0.3724, 0.5366]]], [[[0.248, 0.7616]]]], Max25123), 
LRes22110 = reshape_layer(Max25123, [1, 2, 1], Res22110), 
LCon50672 = conv2D_layer(Res22110, 1, 1,[[[[0.6595, 0.5059, 0.4538, 0.6887]]]],[0, 0, 0, 0], 1, 1, false, 1, 1, Con50672), 
LRes54102 = reshape_layer(Con50672, [1, 8], Res54102), 
LMin62908 = minimum_layer([[[[[[0.1703, 0.8369], [0.002, 0.7808]], [[0.0133, 0.7503], [0.0219, 0.8458]]], [[[0.505, 0.9886], [0.0373, 0.4538]], [[0.3056, 0.4643], [0.6137, 0.9914]]]]], [[[[[0.8528, 0.3773], [0.6865, 0.2451]], [[0.4715, 0.1125], [0.686, 0.2312]]], [[[0.2962, 0.0616], [0.205, 0.9232]], [[0.275, 0.2679], [0.2068, 0.5734]]]]]], Min62908), 
LLea7835 = leaky_relu_layer(Min62908, 0.545960136844077, Lea7835), 
LRes84343 = reshape_layer(Lea7835, [2, 2, 4], Res84343), 
LRes575 = reshape_layer(Res84343, [2, 8], Res575), 
LGlo40145 = global_max_pool1D_layer(Res575, Glo40145), 
LRes81327 = reshape_layer(Glo40145, [1, 8], Res81327), 
LMul96960 = multiply_layer([Res54102,Res81327], Mul96960), 
exec_layers([LMax25123,LRes22110,LCon50672,LRes54102,LMin62908,LLea7835,LRes84343,LRes575,LGlo40145,LRes81327,LMul96960],["Max25123","Res22110","Con50672","Res54102","Min62908","Lea7835","Res84343","Res575","Glo40145","Res81327","Mul96960"],Mul96960,"Mul96960")

Actual (Unparsed): [[[0.0727461, 0.0710822, 0.0063035, 0.1163869, 0.1381257, 0.1032201, 0.0714730, 0.3007563]]]

Expected (Unparsed): [[[0.07274606836000001,0.07108224846800001,0.006303517976,0.11638693914399999,0.13812568000000003,0.10322011257600003,0.071472991744,0.300756281728]]]

Actual:   [[[0.0728, 0.0711, 0.0064, 0.1164, 0.1382, 0.1033, 0.0715, 0.3008]]]

Expected: [[[0.0728, 0.0711, 0.0064, 0.1164, 0.1382, 0.1033, 0.0715, 0.3008]]]