import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Ave36101 = tf.keras.layers.Input(shape=([1, 2]))
in0Con42494 = tf.keras.layers.Input(shape=([1, 2]))
in0Min82843 = tf.keras.layers.Input(shape=([1, 2, 2, 1]))
in1Min82843 = tf.keras.layers.Input(shape=([1, 2, 2, 1]))
in0Max31872 = tf.keras.layers.Input(shape=([1, 2]))
in1Max31872 = tf.keras.layers.Input(shape=([1, 2]))
in0Con64149 = tf.keras.layers.Input(shape=([6, 4]))

Ave36101 = keras.layers.AveragePooling1D(pool_size=(1), name = 'Ave36101', )(in0Ave36101)
Con42494 = keras.layers.Concatenate(axis=2, name = 'Con42494', )([Ave36101,in0Con42494])
Min82843 = keras.layers.Minimum(name = 'Min82843', )([in0Min82843,in1Min82843])
Res48919 = keras.layers.Reshape((1, 2, 2), name = 'Res48919', )(Min82843)
Res14727 = keras.layers.Reshape((1, 4), name = 'Res14727', )(Res48919)
Dot34685 = keras.layers.Dot(axes=(1, 1), name = 'Dot34685', )([Con42494,Res14727])
Res17094 = keras.layers.Reshape((4, 4, 1), name = 'Res17094', )(Dot34685)
Zer14122 = keras.layers.ZeroPadding2D(padding=((1, 1), (1, 1)), name = 'Zer14122', )(Res17094)
Res69259 = keras.layers.Reshape((6, 6), name = 'Res69259', )(Zer14122)
Max31872 = keras.layers.Maximum(name = 'Max31872', )([in0Max31872,in1Max31872])
Zer85102 = keras.layers.ZeroPadding1D(padding=((5, 0)), name = 'Zer85102', )(Max31872)
Con64149 = keras.layers.Concatenate(axis=2, name = 'Con64149', )([Zer85102,in0Con64149])
Add60903 = keras.layers.Add(name = 'Add60903', )([Res69259,Con64149])
model = tf.keras.models.Model(inputs=[in0Ave36101,in0Con42494,in0Min82843,in1Min82843,in0Max31872,in1Max31872,in0Con64149], outputs=Add60903)
in0Ave36101 = tf.constant([[[1.4168, 1.4856]]])
in0Con42494 = tf.constant([[[0.2216, 0.7429]]])
in0Min82843 = tf.constant([[[[[0.6056], [0.777]], [[0.9858], [0.6415]]]]])
in1Min82843 = tf.constant([[[[[0.8282], [0.9312]], [[0.5076], [0.0966]]]]])
in0Max31872 = tf.constant([[[0.4547, 0.8064]]])
in1Max31872 = tf.constant([[[0.6658, 0.6371]]])
in0Con64149 = tf.constant([[[0.7996, 0.0935, 0.3673, 0.5837], [0.4602, 0.1516, 0.2943, 0.0195], [0.4915, 0.0911, 0.2537, 0.0482], [0.7507, 0.8269, 0.9416, 0.9233], [0.6055, 0.2071, 0.1127, 0.4886], [0.6423, 0.3523, 0.4215, 0.2559]]])
print (np.array2string(model.predict([in0Ave36101,in0Con42494,in0Min82843,in1Min82843,in0Max31872,in1Max31872,in0Con64149],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Add60903.png')

LAve36101 = average_pooling1D_layer([[[1.4168, 1.4856]]], 1, Ave36101), 
LCon42494 = concatenate_layer([Ave36101,[[[0.2216, 0.7429]]]], 2, Con42494), 
LMin82843 = minimum_layer([[[[[[0.6056], [0.777]], [[0.9858], [0.6415]]]]], [[[[[0.8282], [0.9312]], [[0.5076], [0.0966]]]]]], Min82843), 
LRes48919 = reshape_layer(Min82843, [1, 2, 2], Res48919), 
LRes14727 = reshape_layer(Res48919, [1, 4], Res14727), 
LDot34685 = dot_layer(Con42494,Res14727, 1, 1, Dot34685), 
LRes17094 = reshape_layer(Dot34685, [4, 4, 1], Res17094), 
LZer14122 = zero_padding2D_layer(Res17094, 1, 1, 1, 1, Zer14122), 
LRes69259 = reshape_layer(Zer14122, [6, 6], Res69259), 
LMax31872 = maximum_layer([[[[0.4547, 0.8064]]], [[[0.6658, 0.6371]]]], Max31872), 
LZer85102 = zero_padding1D_layer(Max31872, 5, 0, Zer85102), 
LCon64149 = concatenate_layer([Zer85102,[[[0.7996, 0.0935, 0.3673, 0.5837], [0.4602, 0.1516, 0.2943, 0.0195], [0.4915, 0.0911, 0.2537, 0.0482], [0.7507, 0.8269, 0.9416, 0.9233], [0.6055, 0.2071, 0.1127, 0.4886], [0.6423, 0.3523, 0.4215, 0.2559]]]], 2, Con64149), 
LAdd60903 = add_layer([Res69259,Con64149], Add60903), 
exec_layers([LAve36101,LCon42494,LMin82843,LRes48919,LRes14727,LDot34685,LRes17094,LZer14122,LRes69259,LMax31872,LZer85102,LCon64149,LAdd60903],["Ave36101","Con42494","Min82843","Res48919","Res14727","Dot34685","Res17094","Zer14122","Res69259","Max31872","Zer85102","Con64149","Add60903"],Add60903,"Add60903")

Actual (Unparsed): [[[0.0000000, 0.0000000, 0.7996000, 0.0935000, 0.3673000, 0.5837000], [0.0000000, 0.8580141, 1.5610536, 0.8707677, 0.4311629, 0.0195000], [0.0000000, 0.8996794, 1.6458112, 0.8451906, 0.3972090, 0.0482000], [0.0000000, 0.1342010, 0.9228832, 0.9393842, 0.9630066, 0.9233000], [0.0000000, 0.4499002, 1.1827333, 0.5841961, 0.1844641, 0.4886000], [0.6658000, 0.8064000, 0.6423000, 0.3523000, 0.4215000, 0.2559000]]]

Expected (Unparsed): [[[0,0,0.7996,0.0935,0.3673,0.5837],[0,0.8580140800000001,1.5610536,0.8707676800000002,0.43116288,0.0195],[0,0.89967936,1.6458112,0.84519056,0.39720896,0.0482],[0,0.13420096,0.9228832,0.93938416,0.96300656,0.9233],[0,0.44990024,1.1827333000000002,0.58419604,0.18446414,0.4886],[0.6658,0.8064,0.6423,0.3523,0.4215,0.2559]]]

Actual:   [[[0, 0, 0.7996, 0.0935, 0.3673, 0.5837], [0, 0.8581, 1.5611, 0.8708, 0.4312, 0.0195], [0, 0.8997, 1.6459, 0.8452, 0.3973, 0.0482], [0, 0.1343, 0.9229, 0.9394, 0.9631, 0.9233], [0, 0.45, 1.1828, 0.5842, 0.1845, 0.4886], [0.6658, 0.8064, 0.6423, 0.3523, 0.4215, 0.2559]]]

Expected: [[[0, 0, 0.7996, 0.0935, 0.3673, 0.5837], [0, 0.8581, 1.5611, 0.8708, 0.4312, 0.0195], [0, 0.8997, 1.6459, 0.8452, 0.3973, 0.0482], [0, 0.1343, 0.9229, 0.9394, 0.9631, 0.9233], [0, 0.45, 1.1828, 0.5842, 0.1845, 0.4886], [0.6658, 0.8064, 0.6423, 0.3523, 0.4215, 0.2559]]]