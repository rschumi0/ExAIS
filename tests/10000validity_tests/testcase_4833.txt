import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Mul84284 = tf.keras.layers.Input(shape=([1, 1]))
in1Mul84284 = tf.keras.layers.Input(shape=([1, 1]))
in0Con46761 = tf.keras.layers.Input(shape=([11]))
in0Fla22323 = tf.keras.layers.Input(shape=([4, 3]))

Mul84284 = keras.layers.Multiply(name = 'Mul84284', )([in0Mul84284,in1Mul84284])
Fla29182 = keras.layers.Flatten(name = 'Fla29182', )(Mul84284)
Con46761 = keras.layers.Concatenate(axis=1, name = 'Con46761', )([Fla29182,in0Con46761])
Fla22323 = keras.layers.Flatten(name = 'Fla22323', )(in0Fla22323)
Max98848 = keras.layers.Maximum(name = 'Max98848', )([Con46761,Fla22323])
Res94495 = keras.layers.Reshape((12, 1), name = 'Res94495', )(Max98848)
Con83406 = keras.layers.Conv1D(3, (5),strides=(11), padding='same', dilation_rate=(1), name = 'Con83406', )(Res94495)
Res34157 = keras.layers.Reshape((2, 3, 1), name = 'Res34157', )(Con83406)
Res99919 = keras.layers.Reshape((2, 3, 1, 1), name = 'Res99919', )(Res34157)
Zer33661 = keras.layers.ZeroPadding3D(padding=((1, 1), (1, 1), (1, 1)), name = 'Zer33661', )(Res99919)
model = tf.keras.models.Model(inputs=[in0Mul84284,in1Mul84284,in0Con46761,in0Fla22323], outputs=Zer33661)
w = model.get_layer('Con83406').get_weights() 
w[0] = np.array([[[0.236, 0.6017, 0.2029]], [[0.5842, 0.2335, 0.2986]], [[0.7723, 0.9004, 0.4877]], [[0.2582, 0.5758, 0.2405]], [[0.1062, 0.9072, 0.8193]]])
w[1] = np.array([0, 0, 0])
model.get_layer('Con83406').set_weights(w) 
in0Mul84284 = tf.constant([[[0.4771]]])
in1Mul84284 = tf.constant([[[0.8801]]])
in0Con46761 = tf.constant([[0.7382, 0.5522, 0.2782, 0.8406, 0.7369, 0.5088, 0.3619, 0.8594, 0.8164, 0.1721, 0.9874]])
in0Fla22323 = tf.constant([[[1.8302, 1.2943, 1.0149], [1.8172, 1.7616, 1.0503], [1.3019, 1.8912, 1.5689], [1.027, 1.0792, 1.6651]]])
print (np.array2string(model.predict([in0Mul84284,in1Mul84284,in0Con46761,in0Fla22323],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Zer33661.png')

LMul84284 = multiply_layer([[[[0.4771]]], [[[0.8801]]]], Mul84284), 
LFla29182 = flatten_layer(Mul84284, Fla29182), 
LCon46761 = concatenate_layer([Fla29182,[[0.7382, 0.5522, 0.2782, 0.8406, 0.7369, 0.5088, 0.3619, 0.8594, 0.8164, 0.1721, 0.9874]]], 1, Con46761), 
LFla22323 = flatten_layer([[[1.8302, 1.2943, 1.0149], [1.8172, 1.7616, 1.0503], [1.3019, 1.8912, 1.5689], [1.027, 1.0792, 1.6651]]], Fla22323), 
LMax98848 = maximum_layer([Con46761,Fla22323], Max98848), 
LRes94495 = reshape_layer(Max98848, [12, 1], Res94495), 
LCon83406 = conv1D_layer(Res94495, 5,[[[0.236, 0.6017, 0.2029]], [[0.5842, 0.2335, 0.2986]], [[0.7723, 0.9004, 0.4877]], [[0.2582, 0.5758, 0.2405]], [[0.1062, 0.9072, 0.8193]]],[0, 0, 0], 11, true, 1, Con83406), 
LRes34157 = reshape_layer(Con83406, [2, 3, 1], Res34157), 
LRes99919 = reshape_layer(Res34157, [2, 3, 1, 1], Res99919), 
LZer33661 = zero_padding3D_layer(Res99919, 1, 1, 1, 1, 1, 1, Zer33661), 
exec_layers([LMul84284,LFla29182,LCon46761,LFla22323,LMax98848,LRes94495,LCon83406,LRes34157,LRes99919,LZer33661],["Mul84284","Fla29182","Con46761","Fla22323","Max98848","Res94495","Con83406","Res34157","Res99919","Zer33661"],Zer33661,"Zer33661")

Actual (Unparsed): [[[[[0.0000000], [0.0000000], [0.0000000]], [[0.0000000], [0.0000000], [0.0000000]], [[0.0000000], [0.0000000], [0.0000000]], [[0.0000000], [0.0000000], [0.0000000]], [[0.0000000], [0.0000000], [0.0000000]]], [[[0.0000000], [0.0000000], [0.0000000]], [[0.0000000], [1.8554341], [0.0000000]], [[0.0000000], [3.3138872], [0.0000000]], [[0.0000000], [2.0353752], [0.0000000]], [[0.0000000], [0.0000000], [0.0000000]]], [[[0.0000000], [0.0000000], [0.0000000]], [[0.0000000], [2.1587974], [0.0000000]], [[0.0000000], [2.3691951], [0.0000000]], [[0.0000000], [1.3426967], [0.0000000]], [[0.0000000], [0.0000000], [0.0000000]]], [[[0.0000000], [0.0000000], [0.0000000]], [[0.0000000], [0.0000000], [0.0000000]], [[0.0000000], [0.0000000], [0.0000000]], [[0.0000000], [0.0000000], [0.0000000]], [[0.0000000], [0.0000000], [0.0000000]]]]]

Expected (Unparsed): [[[[[0],[0],[0]],[[0],[0],[0]],[[0],[0],[0]],[[0],[0],[0]],[[0],[0],[0]]],[[[0],[0],[0]],[[0],[1.8554340999999999],[0]],[[0],[3.3138872999999998],[0]],[[0],[2.03537526],[0]],[[0],[0],[0]]],[[[0],[0],[0]],[[0],[2.1587973700000003],[0]],[[0],[2.3691951399999995],[0]],[[0],[1.34269669],[0]],[[0],[0],[0]]],[[[0],[0],[0]],[[0],[0],[0]],[[0],[0],[0]],[[0],[0],[0]],[[0],[0],[0]]]]]

Actual:   [[[[[0], [0], [0]], [[0], [0], [0]], [[0], [0], [0]], [[0], [0], [0]], [[0], [0], [0]]], [[[0], [0], [0]], [[0], [1.8555], [0]], [[0], [3.3139], [0]], [[0], [2.0354], [0]], [[0], [0], [0]]], [[[0], [0], [0]], [[0], [2.1588], [0]], [[0], [2.3692], [0]], [[0], [1.3427], [0]], [[0], [0], [0]]], [[[0], [0], [0]], [[0], [0], [0]], [[0], [0], [0]], [[0], [0], [0]], [[0], [0], [0]]]]]

Expected: [[[[[0], [0], [0]], [[0], [0], [0]], [[0], [0], [0]], [[0], [0], [0]], [[0], [0], [0]]], [[[0], [0], [0]], [[0], [1.8555], [0]], [[0], [3.3139], [0]], [[0], [2.0354], [0]], [[0], [0], [0]]], [[[0], [0], [0]], [[0], [2.1588], [0]], [[0], [2.3692], [0]], [[0], [1.3427], [0]], [[0], [0], [0]]], [[[0], [0], [0]], [[0], [0], [0]], [[0], [0], [0]], [[0], [0], [0]], [[0], [0], [0]]]]]