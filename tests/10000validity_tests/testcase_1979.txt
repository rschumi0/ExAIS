import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Lea55092 = tf.keras.layers.Input(shape=([2, 1, 1, 1]))
in0Con82520 = tf.keras.layers.Input(shape=([2, 2]))
in0Sub84294 = tf.keras.layers.Input(shape=([2, 3]))
in1Sub84294 = tf.keras.layers.Input(shape=([2, 3]))

Lea55092 = keras.layers.LeakyReLU(alpha=3.254118131488894, name = 'Lea55092', input_shape=(2, 1, 1, 1))(in0Lea55092)
Res63373 = keras.layers.Reshape((2, 1, 1), name = 'Res63373', )(Lea55092)
Res13982 = keras.layers.Reshape((2, 1), name = 'Res13982', )(Res63373)
Con82520 = keras.layers.Concatenate(axis=2, name = 'Con82520', )([Res13982,in0Con82520])
Sub84294 = keras.layers.Subtract(name = 'Sub84294', )([in0Sub84294,in1Sub84294])
Dot50497 = keras.layers.Dot(axes=(1, 1), name = 'Dot50497', )([Con82520,Sub84294])
Mas98816 = keras.layers.Masking(mask_value=1, name = 'Mas98816', )(Dot50497)
Fla16954 = keras.layers.Flatten(name = 'Fla16954', )(Mas98816)
Res50044 = keras.layers.Reshape((9, 1), name = 'Res50044', )(Fla16954)
Res70308 = keras.layers.Reshape((9, 1, 1), name = 'Res70308', )(Res50044)
Con76439 = keras.layers.Conv2D(3, (3, 1),strides=(1, 1), padding='valid', dilation_rate=(1, 1), name = 'Con76439', )(Res70308)
model = tf.keras.models.Model(inputs=[in0Lea55092,in0Con82520,in0Sub84294,in1Sub84294], outputs=Con76439)
w = model.get_layer('Con76439').get_weights() 
w[0] = np.array([[[[0.718, 0.2472, 0.5902]]], [[[0.9712, 0.0496, 0.8871]]], [[[0.3603, 0.8596, 0.7415]]]])
w[1] = np.array([0, 0, 0])
model.get_layer('Con76439').set_weights(w) 
in0Lea55092 = tf.constant([[[[[0.3004]]], [[[0.1718]]]]])
in0Con82520 = tf.constant([[[0.6459, 0.0781], [0.2142, 0.3468]]])
in0Sub84294 = tf.constant([[[0.2194, 0.5799, 0.57], [0.0649, 0.4973, 0.0995]]])
in1Sub84294 = tf.constant([[[0.4935, 0.5326, 0.6279], [0.5685, 0.4484, 0.7765]]])
print (np.array2string(model.predict([in0Lea55092,in0Con82520,in0Sub84294,in1Sub84294],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Con76439.png')

LLea55092 = leaky_relu_layer([[[[[0.3004]]], [[[0.1718]]]]], 3.254118131488894, Lea55092), 
LRes63373 = reshape_layer(Lea55092, [2, 1, 1], Res63373), 
LRes13982 = reshape_layer(Res63373, [2, 1], Res13982), 
LCon82520 = concatenate_layer([Res13982,[[[0.6459, 0.0781], [0.2142, 0.3468]]]], 2, Con82520), 
LSub84294 = subtract_layer([[[0.2194, 0.5799, 0.57], [0.0649, 0.4973, 0.0995]]], [[[0.4935, 0.5326, 0.6279], [0.5685, 0.4484, 0.7765]]], Sub84294), 
LDot50497 = dot_layer(Con82520,Sub84294, 1, 1, Dot50497), 
LMas98816 = masking_layer(Dot50497, 1, Mas98816), 
LFla16954 = flatten_layer(Mas98816, Fla16954), 
LRes50044 = reshape_layer(Fla16954, [9, 1], Res50044), 
LRes70308 = reshape_layer(Res50044, [9, 1, 1], Res70308), 
LCon76439 = conv2D_layer(Res70308, 3, 1,[[[[0.718, 0.2472, 0.5902]]], [[[0.9712, 0.0496, 0.8871]]], [[[0.3603, 0.8596, 0.7415]]]],[0, 0, 0], 1, 1, false, 1, 1, Con76439), 
exec_layers([LLea55092,LRes63373,LRes13982,LCon82520,LSub84294,LDot50497,LMas98816,LFla16954,LRes50044,LRes70308,LCon76439],["Lea55092","Res63373","Res13982","Con82520","Sub84294","Dot50497","Mas98816","Fla16954","Res50044","Res70308","Con76439"],Con76439,"Con76439")

Actual (Unparsed): [[[[-0.1474541, -0.1555503, -0.1787426]], [[-0.2162711, -0.2459530, -0.3165249]], [[-0.3579232, -0.0119172, -0.3012361]], [[-0.2304458, -0.2251960, -0.2670193]], [[-0.2183401, -0.1674356, -0.2829789]], [[-0.3139392, -0.0370633, -0.2662660]], [[-0.2069319, -0.2531477, -0.2748362]]]]

Expected (Unparsed): [[[[-0.14745410056000002,-0.15555030713600002,-0.17874263968999998]],[[-0.216271117685,-0.24595305180400007,-0.316524922573]],[[-0.35792322951700006,-0.011917248828,-0.301236117778]],[[-0.23044580844300003,-0.22519596490800003,-0.26701933258200006]],[[-0.21834016491900002,-0.16743556598000003,-0.28297888051600006]],[[-0.313939241513,-0.03706334595600001,-0.266266040726]],[[-0.20693193581700003,-0.253147680292,-0.274836197408]]]]

Actual:   [[[[-0.1474, -0.1555, -0.1787]], [[-0.2162, -0.2459, -0.3165]], [[-0.3579, -0.0119, -0.3012]], [[-0.2304, -0.2251, -0.267]], [[-0.2183, -0.1674, -0.2829]], [[-0.3139, -0.037, -0.2662]], [[-0.2069, -0.2531, -0.2748]]]]

Expected: [[[[-0.1474, -0.1555, -0.1787]], [[-0.2162, -0.2459, -0.3165]], [[-0.3579, -0.0119, -0.3012]], [[-0.2304, -0.2251, -0.267]], [[-0.2183, -0.1674, -0.2829]], [[-0.3139, -0.037, -0.2662]], [[-0.2069, -0.2531, -0.2748]]]]