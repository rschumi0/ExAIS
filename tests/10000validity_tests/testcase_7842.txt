import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Dep88241 = tf.keras.layers.Input(shape=([1, 1, 2]))

Dep88241 = keras.layers.DepthwiseConv2D((1, 1),strides=(1, 1), padding='valid', name = 'Dep88241', )(in0Dep88241)
Res54624 = keras.layers.Reshape((1, 1, 2, 1), name = 'Res54624', )(Dep88241)
Cro33312 = keras.layers.Cropping3D(cropping=((0, 0), (0, 0), (1, 0)), name = 'Cro33312', )(Res54624)
Glo49541 = keras.layers.GlobalMaxPool3D(name = 'Glo49541', )(Cro33312)
Res99624 = keras.layers.Reshape((1, 1), name = 'Res99624', )(Glo49541)
Up_9327 = keras.layers.UpSampling1D(size=(2), name = 'Up_9327', )(Res99624)
model = tf.keras.models.Model(inputs=[in0Dep88241], outputs=Up_9327)
w = model.get_layer('Dep88241').get_weights() 
w[0] = np.array([[[[0.1383], [0.7879]]]])
w[1] = np.array([0, 0])
model.get_layer('Dep88241').set_weights(w) 
in0Dep88241 = tf.constant([[[[0.5565, 0.7608]]]])
print (np.array2string(model.predict([in0Dep88241],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Up_9327.png')

LDep88241 = depthwise_conv2D_layer([[[[0.5565, 0.7608]]]], 1, 1,[[[[0.1383], [0.7879]]]],[0, 0], 1, 1, false, Dep88241), 
LRes54624 = reshape_layer(Dep88241, [1, 1, 2, 1], Res54624), 
LCro33312 = cropping3D_layer(Res54624, 0, 0, 0, 0, 1, 0, Cro33312), 
LGlo49541 = global_max_pool3D_layer(Cro33312, Glo49541), 
LRes99624 = reshape_layer(Glo49541, [1, 1], Res99624), 
LUp_9327 = up_sampling1D_layer(Res99624, 2, Up_9327), 
exec_layers([LDep88241,LRes54624,LCro33312,LGlo49541,LRes99624,LUp_9327],["Dep88241","Res54624","Cro33312","Glo49541","Res99624","Up_9327"],Up_9327,"Up_9327")

Actual (Unparsed): [[[0.5994343], [0.5994343]]]

Expected (Unparsed): [[[0.5994343200000001],[0.5994343200000001]]]

Actual:   [[[0.5995], [0.5995]]]

Expected: [[[0.5995], [0.5995]]]