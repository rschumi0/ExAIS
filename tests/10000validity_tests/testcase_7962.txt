import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Ave32106 = tf.keras.layers.Input(shape=([2, 2]))
in1Ave32106 = tf.keras.layers.Input(shape=([2, 2]))
in0Mul69425 = tf.keras.layers.Input(shape=([2, 1, 2]))
in1Mul69425 = tf.keras.layers.Input(shape=([2, 1, 2]))

Ave32106 = keras.layers.Average(name = 'Ave32106', )([in0Ave32106,in1Ave32106])
Res66975 = keras.layers.Reshape((2, 2, 1), name = 'Res66975', )(Ave32106)
Res38098 = keras.layers.Reshape((2, 2, 1, 1), name = 'Res38098', )(Res66975)
Con57402 = keras.layers.Conv3DTranspose(2, (2, 2, 1),strides=(4, 5, 1), padding='same', name = 'Con57402', )(Res38098)
Res67980 = keras.layers.Reshape((8, 10, 2), name = 'Res67980', )(Con57402)
Mul69425 = keras.layers.Multiply(name = 'Mul69425', )([in0Mul69425,in1Mul69425])
Loc63178 = keras.layers.LocallyConnected2D(2, (2, 1),strides=(1, 1), name = 'Loc63178', )(Mul69425)
Zer96319 = keras.layers.ZeroPadding2D(padding=((7, 0), (9, 0)), name = 'Zer96319', )(Loc63178)
Add16324 = keras.layers.Add(name = 'Add16324', )([Res67980,Zer96319])
model = tf.keras.models.Model(inputs=[in0Ave32106,in1Ave32106,in0Mul69425,in1Mul69425], outputs=Add16324)
w = model.get_layer('Con57402').get_weights() 
w[0] = np.array([[[[[0.2779], [0.5549]]], [[[0.3688], [0.5181]]]], [[[[0.2001], [0.7369]]], [[[0.9936], [0.1537]]]]])
w[1] = np.array([0, 0])
model.get_layer('Con57402').set_weights(w) 
w = model.get_layer('Loc63178').get_weights() 
w[0] = np.array([[[0.7494, 0.9644], [0.5955, 0.812], [0.5666, 0.9103], [0.6578, 0.2099]]])
w[1] = np.array([[[0, 0]]])
model.get_layer('Loc63178').set_weights(w) 
in0Ave32106 = tf.constant([[[0.5942, 0.224], [0.2941, 0.1737]]])
in1Ave32106 = tf.constant([[[0.3741, 0.4166], [0.7316, 0.1584]]])
in0Mul69425 = tf.constant([[[[0.3212, 0.3094]], [[0.4389, 0.679]]]])
in1Mul69425 = tf.constant([[[[0.7571, 0.1578]], [[0.6063, 0.4502]]]])
print (np.array2string(model.predict([in0Ave32106,in1Ave32106,in0Mul69425,in1Mul69425],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Add16324.png')

LAve32106 = average_layer([[[[0.5942, 0.224], [0.2941, 0.1737]]], [[[0.3741, 0.4166], [0.7316, 0.1584]]]], Ave32106), 
LRes66975 = reshape_layer(Ave32106, [2, 2, 1], Res66975), 
LRes38098 = reshape_layer(Res66975, [2, 2, 1, 1], Res38098), 
LCon57402 = conv3D_transpose_layer(Res38098, 2, 2, 1,[[[[[0.2779], [0.5549]]], [[[0.3688], [0.5181]]]], [[[[0.2001], [0.7369]]], [[[0.9936], [0.1537]]]]],[0, 0], 4, 5, 1, true, Con57402), 
LRes67980 = reshape_layer(Con57402, [8, 10, 2], Res67980), 
LMul69425 = multiply_layer([[[[[0.3212, 0.3094]], [[0.4389, 0.679]]]], [[[[0.7571, 0.1578]], [[0.6063, 0.4502]]]]], Mul69425), 
LLoc63178 = locally_connected2D_layer(Mul69425, 2, 1,[[[0.7494, 0.9644], [0.5955, 0.812], [0.5666, 0.9103], [0.6578, 0.2099]]],[[[0, 0]]], 1, 1, Loc63178), 
LZer96319 = zero_padding2D_layer(Loc63178, 7, 0, 9, 0, Zer96319), 
LAdd16324 = add_layer([Res67980,Zer96319], Add16324), 
exec_layers([LAve32106,LRes66975,LRes38098,LCon57402,LRes67980,LMul69425,LLoc63178,LZer96319,LAdd16324],["Ave32106","Res66975","Res38098","Con57402","Res67980","Mul69425","Loc63178","Zer96319","Add16324"],Add16324,"Add16324")

Actual (Unparsed): [[[[0.1345453, 0.2686548], [0.1785545, 0.2508381], [0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0890114, 0.1777345], [0.1181266, 0.1659474], [0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000]], [[0.0968784, 0.3567701], [0.4810514, 0.0744139], [0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0640920, 0.2360291], [0.3182501, 0.0492301], [0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000]], [[0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000]], [[0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000]], [[0.1425210, 0.2845805], [0.1891391, 0.2657076], [0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0461453, 0.0921411], [0.0612392, 0.0860305], [0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000]], [[0.1026213, 0.3779192], [0.5095677, 0.0788250], [0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0332266, 0.1223622], [0.1649873, 0.0255219], [0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000]], [[0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000]], [[0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.5631690, 0.5805667]]]]

Expected (Unparsed): [[[[0.134545285,0.268654835],[0.17855452,0.250838115],[0,0],[0,0],[0,0],[0.08901137,0.17773447],[0.11812664000000002,0.16594743],[0,0],[0,0],[0,0]],[[0.096878415,0.356770135],[0.48105144,0.074413855],[0,0],[0,0],[0,0],[0.06409203000000001,0.23602907],[0.31825008000000005,0.04923011000000001],[0,0],[0,0],[0,0]],[[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0]],[[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0]],[[0.142521015,0.284580465],[0.18913908000000001,0.265707585],[0,0],[0,0],[0,0],[0.046145294999999996,0.092141145],[0.06123924000000001,0.08603050500000001],[0,0],[0,0],[0,0]],[[0.102621285,0.377919165],[0.50956776,0.07882504500000001],[0,0],[0,0],[0,0],[0.033226605,0.12236224500000001],[0.16498728000000001,0.025521885],[0,0],[0,0],[0,0]],[[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0]],[[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0.56316902065,0.580566723969]]]]

Actual:   [[[[0.1346, 0.2687], [0.1786, 0.2509], [0, 0], [0, 0], [0, 0], [0.0891, 0.1778], [0.1182, 0.166], [0, 0], [0, 0], [0, 0]], [[0.0969, 0.3568], [0.4811, 0.0745], [0, 0], [0, 0], [0, 0], [0.0641, 0.2361], [0.3183, 0.0493], [0, 0], [0, 0], [0, 0]], [[0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0]], [[0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0]], [[0.1426, 0.2846], [0.1892, 0.2658], [0, 0], [0, 0], [0, 0], [0.0462, 0.0922], [0.0613, 0.0861], [0, 0], [0, 0], [0, 0]], [[0.1027, 0.378], [0.5096, 0.0789], [0, 0], [0, 0], [0, 0], [0.0333, 0.1224], [0.165, 0.0256], [0, 0], [0, 0], [0, 0]], [[0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0]], [[0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0.5632, 0.5806]]]]

Expected: [[[[0.1346, 0.2687], [0.1786, 0.2509], [0, 0], [0, 0], [0, 0], [0.0891, 0.1778], [0.1182, 0.166], [0, 0], [0, 0], [0, 0]], [[0.0969, 0.3568], [0.4811, 0.0745], [0, 0], [0, 0], [0, 0], [0.0641, 0.2361], [0.3183, 0.0493], [0, 0], [0, 0], [0, 0]], [[0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0]], [[0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0]], [[0.1426, 0.2846], [0.1892, 0.2658], [0, 0], [0, 0], [0, 0], [0.0462, 0.0922], [0.0613, 0.0861], [0, 0], [0, 0], [0, 0]], [[0.1027, 0.378], [0.5096, 0.0789], [0, 0], [0, 0], [0, 0], [0.0333, 0.1224], [0.165, 0.0256], [0, 0], [0, 0], [0, 0]], [[0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0]], [[0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0.5632, 0.5806]]]]