import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Sub71609 = tf.keras.layers.Input(shape=([2, 3, 2]))
in1Sub71609 = tf.keras.layers.Input(shape=([2, 3, 2]))
in0Con1273 = tf.keras.layers.Input(shape=([6, 3]))
in0Loc74173 = tf.keras.layers.Input(shape=([1, 1, 2]))
in0Lea36204 = tf.keras.layers.Input(shape=([2, 2, 2, 1]))
in0Con15873 = tf.keras.layers.Input(shape=([1]))
in0Con11879 = tf.keras.layers.Input(shape=([2, 3]))
in0Min20779 = tf.keras.layers.Input(shape=([2, 2, 2]))
in1Min20779 = tf.keras.layers.Input(shape=([2, 2, 2]))
in0Mul63245 = tf.keras.layers.Input(shape=([1, 1]))
in1Mul63245 = tf.keras.layers.Input(shape=([1, 1]))
in0Con16008 = tf.keras.layers.Input(shape=([2, 3]))

Sub71609 = keras.layers.Subtract(name = 'Sub71609', )([in0Sub71609,in1Sub71609])
Res20661 = keras.layers.Reshape((2, 6), name = 'Res20661', )(Sub71609)
Glo6728 = keras.layers.GlobalAveragePooling1D(name = 'Glo6728', )(Res20661)
Res60214 = keras.layers.Reshape((6, 1), name = 'Res60214', )(Glo6728)
Con1273 = keras.layers.Concatenate(axis=2, name = 'Con1273', )([Res60214,in0Con1273])
Loc74173 = keras.layers.LocallyConnected2D(2, (1, 1),strides=(1, 1), name = 'Loc74173', )(in0Loc74173)
Res47823 = keras.layers.Reshape((1, 2), name = 'Res47823', )(Loc74173)
Fla43787 = keras.layers.Flatten(name = 'Fla43787', )(Res47823)
Lea36204 = keras.layers.LeakyReLU(alpha=6.003696100718827, name = 'Lea36204', input_shape=(2, 2, 2, 1))(in0Lea36204)
Res84403 = keras.layers.Reshape((2, 2, 2), name = 'Res84403', )(Lea36204)
Glo26302 = keras.layers.GlobalAveragePooling2D(name = 'Glo26302', )(Res84403)
Res71424 = keras.layers.Reshape((2, 1), name = 'Res71424', )(Glo26302)
Res65947 = keras.layers.Reshape((2, 1, 1), name = 'Res65947', )(Res71424)
Glo21997 = keras.layers.GlobalMaxPool2D(name = 'Glo21997', )(Res65947)
Con15873 = keras.layers.Concatenate(axis=1, name = 'Con15873', )([Glo21997,in0Con15873])
Add47259 = keras.layers.Add(name = 'Add47259', )([Fla43787,Con15873])
Res54210 = keras.layers.Reshape((2, 1), name = 'Res54210', )(Add47259)
Con11879 = keras.layers.Concatenate(axis=2, name = 'Con11879', )([Res54210,in0Con11879])
Min20779 = keras.layers.Minimum(name = 'Min20779', )([in0Min20779,in1Min20779])
Res44883 = keras.layers.Reshape((2, 4), name = 'Res44883', )(Min20779)
Mul63245 = keras.layers.Multiply(name = 'Mul63245', )([in0Mul63245,in1Mul63245])
Zer43699 = keras.layers.ZeroPadding1D(padding=((1, 0)), name = 'Zer43699', )(Mul63245)
Con16008 = keras.layers.Concatenate(axis=2, name = 'Con16008', )([Zer43699,in0Con16008])
Min38400 = keras.layers.Minimum(name = 'Min38400', )([Res44883,Con16008])
Sub74122 = keras.layers.Subtract(name = 'Sub74122', )([Con11879,Min38400])
Zer49822 = keras.layers.ZeroPadding1D(padding=((4, 0)), name = 'Zer49822', )(Sub74122)
Max48356 = keras.layers.Maximum(name = 'Max48356', )([Con1273,Zer49822])
model = tf.keras.models.Model(inputs=[in0Sub71609,in1Sub71609,in0Con1273,in0Loc74173,in0Lea36204,in0Con15873,in0Con11879,in0Min20779,in1Min20779,in0Mul63245,in1Mul63245,in0Con16008], outputs=Max48356)
w = model.get_layer('Loc74173').get_weights() 
w[0] = np.array([[[0.4212, 0.6789], [0.6568, 0.4414]]])
w[1] = np.array([[[0, 0]]])
model.get_layer('Loc74173').set_weights(w) 
in0Sub71609 = tf.constant([[[[0.9865, 0.4222], [0.943, 0.1882], [0.6876, 0.7478]], [[0.6234, 0.3839], [0.0175, 0.7219], [0.815, 0.9363]]]])
in1Sub71609 = tf.constant([[[[0.005, 0.2424], [0.0589, 0.7729], [0.9506, 0.0608]], [[0.8617, 0.9414], [0.8398, 0.5887], [0.2336, 0.011]]]])
in0Con1273 = tf.constant([[[0.6093, 0.1093, 0.7123], [0.719, 0.2325, 0.5461], [0.9688, 0.5912, 0.8603], [0.4305, 0.4293, 0.7456], [0.7332, 0.0576, 0.2146], [0.8091, 0.3802, 0.1362]]])
in0Loc74173 = tf.constant([[[[0.6628, 0.7722]]]])
in0Lea36204 = tf.constant([[[[[0.9581], [0.1475]], [[0.9375], [0.7787]]], [[[0.9655], [0.1146]], [[0.0173], [0.1977]]]]])
in0Con15873 = tf.constant([[0.7411]])
in0Con11879 = tf.constant([[[0.9138, 0.1123, 0.2032], [0.7138, 0.3097, 0.9772]]])
in0Min20779 = tf.constant([[[[0.8645, 0.4198], [0.0918, 0.6928]], [[0.8977, 0.5801], [0.1381, 0.556]]]])
in1Min20779 = tf.constant([[[[0.3293, 0.0094], [0.4639, 0.4171]], [[0.5492, 0.3453], [0.9008, 0.4364]]]])
in0Mul63245 = tf.constant([[[0.9805]]])
in1Mul63245 = tf.constant([[[0.1295]]])
in0Con16008 = tf.constant([[[0.9272, 0.3699, 0.8661], [0.0466, 0.0697, 0.2058]]])
print (np.array2string(model.predict([in0Sub71609,in1Sub71609,in0Con1273,in0Loc74173,in0Lea36204,in0Con15873,in0Con11879,in0Min20779,in1Min20779,in0Mul63245,in1Mul63245,in0Con16008],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Max48356.png')

LSub71609 = subtract_layer([[[[0.9865, 0.4222], [0.943, 0.1882], [0.6876, 0.7478]], [[0.6234, 0.3839], [0.0175, 0.7219], [0.815, 0.9363]]]], [[[[0.005, 0.2424], [0.0589, 0.7729], [0.9506, 0.0608]], [[0.8617, 0.9414], [0.8398, 0.5887], [0.2336, 0.011]]]], Sub71609), 
LRes20661 = reshape_layer(Sub71609, [2, 6], Res20661), 
LGlo6728 = global_average_pooling1D_layer(Res20661, Glo6728), 
LRes60214 = reshape_layer(Glo6728, [6, 1], Res60214), 
LCon1273 = concatenate_layer([Res60214,[[[0.6093, 0.1093, 0.7123], [0.719, 0.2325, 0.5461], [0.9688, 0.5912, 0.8603], [0.4305, 0.4293, 0.7456], [0.7332, 0.0576, 0.2146], [0.8091, 0.3802, 0.1362]]]], 2, Con1273), 
LLoc74173 = locally_connected2D_layer([[[[0.6628, 0.7722]]]], 1, 1,[[[0.4212, 0.6789], [0.6568, 0.4414]]],[[[0, 0]]], 1, 1, Loc74173), 
LRes47823 = reshape_layer(Loc74173, [1, 2], Res47823), 
LFla43787 = flatten_layer(Res47823, Fla43787), 
LLea36204 = leaky_relu_layer([[[[[0.9581], [0.1475]], [[0.9375], [0.7787]]], [[[0.9655], [0.1146]], [[0.0173], [0.1977]]]]], 6.003696100718827, Lea36204), 
LRes84403 = reshape_layer(Lea36204, [2, 2, 2], Res84403), 
LGlo26302 = global_average_pooling2D_layer(Res84403, Glo26302), 
LRes71424 = reshape_layer(Glo26302, [2, 1], Res71424), 
LRes65947 = reshape_layer(Res71424, [2, 1, 1], Res65947), 
LGlo21997 = global_max_pool2D_layer(Res65947, Glo21997), 
LCon15873 = concatenate_layer([Glo21997,[[0.7411]]], 1, Con15873), 
LAdd47259 = add_layer([Fla43787,Con15873], Add47259), 
LRes54210 = reshape_layer(Add47259, [2, 1], Res54210), 
LCon11879 = concatenate_layer([Res54210,[[[0.9138, 0.1123, 0.2032], [0.7138, 0.3097, 0.9772]]]], 2, Con11879), 
LMin20779 = minimum_layer([[[[[0.8645, 0.4198], [0.0918, 0.6928]], [[0.8977, 0.5801], [0.1381, 0.556]]]], [[[[0.3293, 0.0094], [0.4639, 0.4171]], [[0.5492, 0.3453], [0.9008, 0.4364]]]]], Min20779), 
LRes44883 = reshape_layer(Min20779, [2, 4], Res44883), 
LMul63245 = multiply_layer([[[[0.9805]]], [[[0.1295]]]], Mul63245), 
LZer43699 = zero_padding1D_layer(Mul63245, 1, 0, Zer43699), 
LCon16008 = concatenate_layer([Zer43699,[[[0.9272, 0.3699, 0.8661], [0.0466, 0.0697, 0.2058]]]], 2, Con16008), 
LMin38400 = minimum_layer([Res44883,Con16008], Min38400), 
LSub74122 = subtract_layer(Con11879,Min38400, Sub74122), 
LZer49822 = zero_padding1D_layer(Sub74122, 4, 0, Zer49822), 
LMax48356 = maximum_layer([Con1273,Zer49822], Max48356), 
exec_layers([LSub71609,LRes20661,LGlo6728,LRes60214,LCon1273,LLoc74173,LRes47823,LFla43787,LLea36204,LRes84403,LGlo26302,LRes71424,LRes65947,LGlo21997,LCon15873,LAdd47259,LRes54210,LCon11879,LMin20779,LRes44883,LMul63245,LZer43699,LCon16008,LMin38400,LSub74122,LZer49822,LMax48356],["Sub71609","Res20661","Glo6728","Res60214","Con1273","Loc74173","Res47823","Fla43787","Lea36204","Res84403","Glo26302","Res71424","Res65947","Glo21997","Con15873","Add47259","Res54210","Con11879","Min20779","Res44883","Mul63245","Zer43699","Con16008","Min38400","Sub74122","Zer49822","Max48356"],Max48356,"Max48356")

Actual (Unparsed): [[[0.3716000, 0.6093000, 0.1093000, 0.7123000], [0.0000000, 0.7190000, 0.2325000, 0.5461000], [0.0309000, 0.9688000, 0.5912000, 0.8603000], [0.0000000, 0.4305000, 0.4293000, 0.7456000], [1.5059523, 0.9044000, 0.0576000, 0.2146000], [1.4049493, 0.8091000, 0.3802000, 0.7714000]]]

Expected (Unparsed): [[[0.3716,0.6093,0.1093,0.7123],[0,0.719,0.2325,0.5461],[0.030899999999999983,0.9688,0.5912,0.8603],[0,0.4305,0.4293,0.7456],[1.50595232,0.9044,0.0576,0.2146],[1.40494925,0.8091,0.3802,0.7714]]]

Actual:   [[[0.3716, 0.6093, 0.1093, 0.7123], [0, 0.719, 0.2325, 0.5461], [0.0309, 0.9688, 0.5912, 0.8603], [0, 0.4305, 0.4293, 0.7456], [1.506, 0.9044, 0.0576, 0.2146], [1.405, 0.8091, 0.3802, 0.7714]]]

Expected: [[[0.3716, 0.6093, 0.1093, 0.7123], [0, 0.719, 0.2325, 0.5461], [0.0309, 0.9688, 0.5912, 0.8603], [0, 0.4305, 0.4293, 0.7456], [1.506, 0.9044, 0.0576, 0.2146], [1.405, 0.8091, 0.3802, 0.7714]]]