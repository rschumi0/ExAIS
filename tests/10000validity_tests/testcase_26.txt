import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Bat26911 = tf.keras.layers.Input(shape=([4]))
in0Dot52335 = tf.keras.layers.Input(shape=([3, 2]))
in1Dot52335 = tf.keras.layers.Input(shape=([3, 2]))
in0Mul76884 = tf.keras.layers.Input(shape=([1, 2, 1, 1]))
in1Mul76884 = tf.keras.layers.Input(shape=([1, 2, 1, 1]))

Bat26911 = keras.layers.BatchNormalization(axis=1, epsilon=0.8016779733161233,  name = 'Bat26911', )(in0Bat26911)
Res48050 = keras.layers.Reshape((4, 1), name = 'Res48050', )(Bat26911)
Res8356 = keras.layers.Reshape((4, 1, 1), name = 'Res8356', )(Res48050)
Res69614 = keras.layers.Reshape((4, 1, 1, 1), name = 'Res69614', )(Res8356)
Zer91134 = keras.layers.ZeroPadding3D(padding=((0, 0), (4, 0), (0, 0)), name = 'Zer91134', )(Res69614)
Dot52335 = keras.layers.Dot(axes=(2, 2), name = 'Dot52335', )([in0Dot52335,in1Dot52335])
Res88540 = keras.layers.Reshape((3, 3, 1), name = 'Res88540', )(Dot52335)
Res97493 = keras.layers.Reshape((3, 3, 1, 1), name = 'Res97493', )(Res88540)
Mul76884 = keras.layers.Multiply(name = 'Mul76884', )([in0Mul76884,in1Mul76884])
Zer24899 = keras.layers.ZeroPadding3D(padding=((2, 0), (1, 0), (0, 0)), name = 'Zer24899', )(Mul76884)
Add82327 = keras.layers.Add(name = 'Add82327', )([Res97493,Zer24899])
Zer70955 = keras.layers.ZeroPadding3D(padding=((1, 0), (2, 0), (0, 0)), name = 'Zer70955', )(Add82327)
Add21485 = keras.layers.Add(name = 'Add21485', )([Zer91134,Zer70955])
model = tf.keras.models.Model(inputs=[in0Bat26911,in0Dot52335,in1Dot52335,in0Mul76884,in1Mul76884], outputs=Add21485)
w = model.get_layer('Bat26911').get_weights() 
w[0] = np.array([0.1882, 0.884, 0.7144, 0.4346])
w[1] = np.array([0.4013, 0.4528, 0.0508, 0.6189])
w[2] = np.array([0.1455, 0.1039, 0.034, 0.3719])
w[3] = np.array([0.9408, 0.1391, 0.407, 0.2719])
model.get_layer('Bat26911').set_weights(w) 
in0Bat26911 = tf.constant([[1.7599, 1.5382, 1.6721, 1.0337]])
in0Dot52335 = tf.constant([[[0.4929, 0.5101], [0.9233, 0.7131], [0.584, 0.7395]]])
in1Dot52335 = tf.constant([[[0.7447, 0.8401], [0.3925, 0.8067], [0.5587, 0.0501]]])
in0Mul76884 = tf.constant([[[[[0.4072]], [[0.6252]]]]])
in1Mul76884 = tf.constant([[[[[0.6638]], [[0.0525]]]]])
print (np.array2string(model.predict([in0Bat26911,in0Dot52335,in1Dot52335,in0Mul76884,in1Mul76884],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Add21485.png')

LBat26911 = batch_normalization_layer([[1.7599, 1.5382, 1.6721, 1.0337]], 1, 0.8016779733161233, [0.1882, 0.884, 0.7144, 0.4346], [0.4013, 0.4528, 0.0508, 0.6189], [0.1455, 0.1039, 0.034, 0.3719], [0.9408, 0.1391, 0.407, 0.2719], Bat26911), 
LRes48050 = reshape_layer(Bat26911, [4, 1], Res48050), 
LRes8356 = reshape_layer(Res48050, [4, 1, 1], Res8356), 
LRes69614 = reshape_layer(Res8356, [4, 1, 1, 1], Res69614), 
LZer91134 = zero_padding3D_layer(Res69614, 0, 0, 4, 0, 0, 0, Zer91134), 
LDot52335 = dot_layer([[[0.4929, 0.5101], [0.9233, 0.7131], [0.584, 0.7395]]], [[[0.7447, 0.8401], [0.3925, 0.8067], [0.5587, 0.0501]]], 2, 2, Dot52335), 
LRes88540 = reshape_layer(Dot52335, [3, 3, 1], Res88540), 
LRes97493 = reshape_layer(Res88540, [3, 3, 1, 1], Res97493), 
LMul76884 = multiply_layer([[[[[[0.4072]], [[0.6252]]]]], [[[[[0.6638]], [[0.0525]]]]]], Mul76884), 
LZer24899 = zero_padding3D_layer(Mul76884, 2, 0, 1, 0, 0, 0, Zer24899), 
LAdd82327 = add_layer([Res97493,Zer24899], Add82327), 
LZer70955 = zero_padding3D_layer(Add82327, 1, 0, 2, 0, 0, 0, Zer70955), 
LAdd21485 = add_layer([Zer91134,Zer70955], Add21485), 
exec_layers([LBat26911,LRes48050,LRes8356,LRes69614,LZer91134,LDot52335,LRes88540,LRes97493,LMul76884,LZer24899,LAdd82327,LZer70955,LAdd21485],["Bat26911","Res48050","Res8356","Res69614","Zer91134","Dot52335","Res88540","Res97493","Mul76884","Zer24899","Add82327","Zer70955","Add21485"],Add21485,"Add21485")

Actual (Unparsed): [[[[[0.0000000]], [[0.0000000]], [[0.0000000]], [[0.0000000]], [[0.6314691]]], [[[0.0000000]], [[0.0000000]], [[0.7955977]], [[0.6049609]], [[2.0609593]]], [[[0.0000000]], [[0.0000000]], [[1.2866569]], [[0.9376530]], [[1.6668272]]], [[[0.0000000]], [[0.0000000]], [[1.0561587]], [[1.0960740]], [[1.2926401]]]]]

Expected (Unparsed): [[[[[0]],[[0]],[[0]],[[0]],[[0.6314691529926115]]],[[[0]],[[0]],[[0.79559764]],[[0.60496092]],[[2.060959268110011]]],[[[0]],[[0]],[[1.28665682]],[[0.93765302]],[[1.6668271720916041]]],[[[0]],[[0]],[[1.05615875]],[[1.09607401]],[[1.292640111301733]]]]]

Actual:   [[[[[0]], [[0]], [[0]], [[0]], [[0.6315]]], [[[0]], [[0]], [[0.7956]], [[0.605]], [[2.061]]], [[[0]], [[0]], [[1.2867]], [[0.9377]], [[1.6669]]], [[[0]], [[0]], [[1.0562]], [[1.0961]], [[1.2927]]]]]

Expected: [[[[[0]], [[0]], [[0]], [[0]], [[0.6315]]], [[[0]], [[0]], [[0.7956]], [[0.605]], [[2.061]]], [[[0]], [[0]], [[1.2867]], [[0.9377]], [[1.6669]]], [[[0]], [[0]], [[1.0562]], [[1.0961]], [[1.2927]]]]]