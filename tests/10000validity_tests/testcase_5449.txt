import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Max92718 = tf.keras.layers.Input(shape=([2, 2, 2]))
in1Max92718 = tf.keras.layers.Input(shape=([2, 2, 2]))
in0Mul56424 = tf.keras.layers.Input(shape=([2, 1]))
in1Mul56424 = tf.keras.layers.Input(shape=([2, 1]))
in0Con78733 = tf.keras.layers.Input(shape=([1]))
in0Con33822 = tf.keras.layers.Input(shape=([4, 2, 1]))
in0Up_67142 = tf.keras.layers.Input(shape=([2, 2, 2]))
in0Con50891 = tf.keras.layers.Input(shape=([4, 1]))
in0Max39667 = tf.keras.layers.Input(shape=([1, 2]))
in0Con29638 = tf.keras.layers.Input(shape=([4, 2, 1]))
in0Con26051 = tf.keras.layers.Input(shape=([2, 1, 1]))

Max92718 = keras.layers.Maximum(name = 'Max92718', )([in0Max92718,in1Max92718])
Glo10447 = keras.layers.GlobalMaxPool2D(name = 'Glo10447', )(Max92718)
Mul56424 = keras.layers.Multiply(name = 'Mul56424', )([in0Mul56424,in1Mul56424])
Res20742 = keras.layers.Reshape((2, 1, 1), name = 'Res20742', )(Mul56424)
Res8899 = keras.layers.Reshape((2, 1, 1, 1), name = 'Res8899', )(Res20742)
Glo93764 = keras.layers.GlobalAveragePooling3D(name = 'Glo93764', )(Res8899)
Con78733 = keras.layers.Concatenate(axis=1, name = 'Con78733', )([Glo93764,in0Con78733])
Max49061 = keras.layers.Maximum(name = 'Max49061', )([Glo10447,Con78733])
Res58638 = keras.layers.Reshape((2, 1), name = 'Res58638', )(Max49061)
Res29633 = keras.layers.Reshape((2, 1, 1), name = 'Res29633', )(Res58638)
Zer29063 = keras.layers.ZeroPadding2D(padding=((2, 0), (1, 0)), name = 'Zer29063', )(Res29633)
Con33822 = keras.layers.Concatenate(axis=3, name = 'Con33822', )([Zer29063,in0Con33822])
Up_67142 = keras.layers.UpSampling2D(size=(1, 1), name = 'Up_67142', )(in0Up_67142)
Res78084 = keras.layers.Reshape((2, 4), name = 'Res78084', )(Up_67142)
Glo47616 = keras.layers.GlobalMaxPool1D(name = 'Glo47616', )(Res78084)
Res70455 = keras.layers.Reshape((4, 1), name = 'Res70455', )(Glo47616)
Con50891 = keras.layers.Concatenate(axis=2, name = 'Con50891', )([Res70455,in0Con50891])
Max39667 = keras.layers.MaxPool1D(pool_size=(1), strides=(1), padding='same', name = 'Max39667', )(in0Max39667)
Zer76967 = keras.layers.ZeroPadding1D(padding=((3, 0)), name = 'Zer76967', )(Max39667)
Ave94060 = keras.layers.Average(name = 'Ave94060', )([Con50891,Zer76967])
Res25354 = keras.layers.Reshape((4, 2, 1), name = 'Res25354', )(Ave94060)
Con29638 = keras.layers.Concatenate(axis=3, name = 'Con29638', )([Res25354,in0Con29638])
Con26051 = keras.layers.Conv2DTranspose(2, (2, 1),strides=(1, 1), padding='same', name = 'Con26051', )(in0Con26051)
Zer80962 = keras.layers.ZeroPadding2D(padding=((2, 0), (1, 0)), name = 'Zer80962', )(Con26051)
Min28468 = keras.layers.Minimum(name = 'Min28468', )([Con29638,Zer80962])
Sub33205 = keras.layers.Subtract(name = 'Sub33205', )([Con33822,Min28468])
model = tf.keras.models.Model(inputs=[in0Max92718,in1Max92718,in0Mul56424,in1Mul56424,in0Con78733,in0Con33822,in0Up_67142,in0Con50891,in0Max39667,in0Con29638,in0Con26051], outputs=Sub33205)
w = model.get_layer('Con26051').get_weights() 
w[0] = np.array([[[[0.146], [0.2861]]], [[[0.5225], [0.8129]]]])
w[1] = np.array([0, 0])
model.get_layer('Con26051').set_weights(w) 
in0Max92718 = tf.constant([[[[0.1168, 0.0133], [0.4013, 0.0099]], [[0.0092, 0.3163], [0.4695, 0.9168]]]])
in1Max92718 = tf.constant([[[[0.4054, 0.5274], [0.5139, 0.8565]], [[0.4091, 0.4485], [0.7349, 0.569]]]])
in0Mul56424 = tf.constant([[[0.0971], [0.2823]]])
in1Mul56424 = tf.constant([[[0.7478], [0.5758]]])
in0Con78733 = tf.constant([[0.848]])
in0Con33822 = tf.constant([[[[0.9758], [0.7064]], [[0.7895], [0.4026]], [[0.882], [0.6573]], [[0.7379], [0.1198]]]])
in0Up_67142 = tf.constant([[[[1.8462, 1.9631], [1.5296, 1.6781]], [[1.9863, 1.2572], [1.5306, 1.7494]]]])
in0Con50891 = tf.constant([[[0.2685], [0.3387], [0.3455], [0.1292]]])
in0Max39667 = tf.constant([[[1.1506, 1.9326]]])
in0Con29638 = tf.constant([[[[0.2932], [0.4417]], [[0.5108], [0.1342]], [[0.0994], [0.1396]], [[0.704], [0.1688]]]])
in0Con26051 = tf.constant([[[[0.7111]], [[0.0311]]]])
print (np.array2string(model.predict([in0Max92718,in1Max92718,in0Mul56424,in1Mul56424,in0Con78733,in0Con33822,in0Up_67142,in0Con50891,in0Max39667,in0Con29638,in0Con26051],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Sub33205.png')

LMax92718 = maximum_layer([[[[[0.1168, 0.0133], [0.4013, 0.0099]], [[0.0092, 0.3163], [0.4695, 0.9168]]]], [[[[0.4054, 0.5274], [0.5139, 0.8565]], [[0.4091, 0.4485], [0.7349, 0.569]]]]], Max92718), 
LGlo10447 = global_max_pool2D_layer(Max92718, Glo10447), 
LMul56424 = multiply_layer([[[[0.0971], [0.2823]]], [[[0.7478], [0.5758]]]], Mul56424), 
LRes20742 = reshape_layer(Mul56424, [2, 1, 1], Res20742), 
LRes8899 = reshape_layer(Res20742, [2, 1, 1, 1], Res8899), 
LGlo93764 = global_average_pooling3D_layer(Res8899, Glo93764), 
LCon78733 = concatenate_layer([Glo93764,[[0.848]]], 1, Con78733), 
LMax49061 = maximum_layer([Glo10447,Con78733], Max49061), 
LRes58638 = reshape_layer(Max49061, [2, 1], Res58638), 
LRes29633 = reshape_layer(Res58638, [2, 1, 1], Res29633), 
LZer29063 = zero_padding2D_layer(Res29633, 2, 0, 1, 0, Zer29063), 
LCon33822 = concatenate_layer([Zer29063,[[[[0.9758], [0.7064]], [[0.7895], [0.4026]], [[0.882], [0.6573]], [[0.7379], [0.1198]]]]], 3, Con33822), 
LUp_67142 = up_sampling2D_layer([[[[1.8462, 1.9631], [1.5296, 1.6781]], [[1.9863, 1.2572], [1.5306, 1.7494]]]], 1, 1, Up_67142), 
LRes78084 = reshape_layer(Up_67142, [2, 4], Res78084), 
LGlo47616 = global_max_pool1D_layer(Res78084, Glo47616), 
LRes70455 = reshape_layer(Glo47616, [4, 1], Res70455), 
LCon50891 = concatenate_layer([Res70455,[[[0.2685], [0.3387], [0.3455], [0.1292]]]], 2, Con50891), 
LMax39667 = max_pool1D_layer([[[1.1506, 1.9326]]], 1, 1, true, Max39667), 
LZer76967 = zero_padding1D_layer(Max39667, 3, 0, Zer76967), 
LAve94060 = average_layer([Con50891,Zer76967], Ave94060), 
LRes25354 = reshape_layer(Ave94060, [4, 2, 1], Res25354), 
LCon29638 = concatenate_layer([Res25354,[[[[0.2932], [0.4417]], [[0.5108], [0.1342]], [[0.0994], [0.1396]], [[0.704], [0.1688]]]]], 3, Con29638), 
LCon26051 = conv2D_transpose_layer([[[[0.7111]], [[0.0311]]]], 2, 1,[[[[0.146], [0.2861]]], [[[0.5225], [0.8129]]]],[0, 0], 1, 1, true, Con26051), 
LZer80962 = zero_padding2D_layer(Con26051, 2, 0, 1, 0, Zer80962), 
LMin28468 = minimum_layer([Con29638,Zer80962], Min28468), 
LSub33205 = subtract_layer(Con33822,Min28468, Sub33205), 
exec_layers([LMax92718,LGlo10447,LMul56424,LRes20742,LRes8899,LGlo93764,LCon78733,LMax49061,LRes58638,LRes29633,LZer29063,LCon33822,LUp_67142,LRes78084,LGlo47616,LRes70455,LCon50891,LMax39667,LZer76967,LAve94060,LRes25354,LCon29638,LCon26051,LZer80962,LMin28468,LSub33205],["Max92718","Glo10447","Mul56424","Res20742","Res8899","Glo93764","Con78733","Max49061","Res58638","Res29633","Zer29063","Con33822","Up_67142","Res78084","Glo47616","Res70455","Con50891","Max39667","Zer76967","Ave94060","Res25354","Con29638","Con26051","Zer80962","Min28468","Sub33205"],Sub33205,"Sub33205")

Actual (Unparsed): [[[[0.0000000, 0.9758000], [0.0000000, 0.7064000]], [[0.0000000, 0.7895000], [0.0000000, 0.4026000]], [[0.0000000, 0.8820000], [0.6310794, 0.5177000]], [[0.0000000, 0.7379000], [0.5407097, -0.0490000]]]]

Expected (Unparsed): [[[[0,0.9758],[0,0.7064]],[[0,0.7895],[0,0.4026]],[[0,0.882],[0.6310794,0.5177]],[[0,0.7379],[0.5407096499999999,-0.049]]]]

Actual:   [[[[0, 0.9758], [0, 0.7064]], [[0, 0.7895], [0, 0.4026]], [[0, 0.882], [0.6311, 0.5177]], [[0, 0.7379], [0.5408, -0.049]]]]

Expected: [[[[0, 0.9758], [0, 0.7064]], [[0, 0.7895], [0, 0.4026]], [[0, 0.882], [0.6311, 0.5177]], [[0, 0.7379], [0.5408, -0.049]]]]