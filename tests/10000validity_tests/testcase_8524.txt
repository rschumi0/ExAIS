import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Min75176 = tf.keras.layers.Input(shape=([2, 1, 1, 2]))
in1Min75176 = tf.keras.layers.Input(shape=([2, 1, 1, 2]))

Min75176 = keras.layers.Minimum(name = 'Min75176', )([in0Min75176,in1Min75176])
Res63206 = keras.layers.Reshape((2, 1, 2), name = 'Res63206', )(Min75176)
Zer373 = keras.layers.ZeroPadding2D(padding=((1, 1), (1, 1)), name = 'Zer373', )(Res63206)
Res75419 = keras.layers.Reshape((4, 6), name = 'Res75419', )(Zer373)
Fla62094 = keras.layers.Flatten(name = 'Fla62094', )(Res75419)
Res66334 = keras.layers.Reshape((24, 1), name = 'Res66334', )(Fla62094)
Res53128 = keras.layers.Reshape((24, 1, 1), name = 'Res53128', )(Res66334)
Con21127 = keras.layers.Conv2D(3, (16, 1),strides=(1, 1), padding='valid', dilation_rate=(1, 1), name = 'Con21127', )(Res53128)
model = tf.keras.models.Model(inputs=[in0Min75176,in1Min75176], outputs=Con21127)
w = model.get_layer('Con21127').get_weights() 
w[0] = np.array([[[[0.6111, 0.5163, 0.3267]]], [[[0.2597, 0.471, 0.1625]]], [[[0.8064, 0.8428, 0.0917]]], [[[0.5619, 0.5225, 0.7303]]], [[[0.0202, 0.7477, 0.7868]]], [[[0.4999, 0.0452, 0.7661]]], [[[0.0252, 0.2295, 0.2879]]], [[[0.4116, 0.5571, 0.8496]]], [[[0.631, 0.1622, 0.3721]]], [[[0.2704, 0.5264, 0.2001]]], [[[0.4247, 0.3264, 0.8215]]], [[[0.1624, 0.967, 0.3638]]], [[[0.8801, 0.3211, 0.9571]]], [[[0.8576, 0.936, 0.2145]]], [[[0.6428, 0.7912, 0.3184]]], [[[0.3686, 0.0025, 0.6584]]]])
w[1] = np.array([0, 0, 0])
model.get_layer('Con21127').set_weights(w) 
in0Min75176 = tf.constant([[[[[0.9889, 0.5617]]], [[[0.4105, 0.871]]]]])
in1Min75176 = tf.constant([[[[[0.4424, 0.5375]]], [[[0.3662, 0.8527]]]]])
print (np.array2string(model.predict([in0Min75176,in1Min75176],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Con21127.png')

LMin75176 = minimum_layer([[[[[[0.9889, 0.5617]]], [[[0.4105, 0.871]]]]], [[[[[0.4424, 0.5375]]], [[[0.3662, 0.8527]]]]]], Min75176), 
LRes63206 = reshape_layer(Min75176, [2, 1, 2], Res63206), 
LZer373 = zero_padding2D_layer(Res63206, 1, 1, 1, 1, Zer373), 
LRes75419 = reshape_layer(Zer373, [4, 6], Res75419), 
LFla62094 = flatten_layer(Res75419, Fla62094), 
LRes66334 = reshape_layer(Fla62094, [24, 1], Res66334), 
LRes53128 = reshape_layer(Res66334, [24, 1, 1], Res53128), 
LCon21127 = conv2D_layer(Res53128, 16, 1,[[[[0.6111, 0.5163, 0.3267]]], [[[0.2597, 0.471, 0.1625]]], [[[0.8064, 0.8428, 0.0917]]], [[[0.5619, 0.5225, 0.7303]]], [[[0.0202, 0.7477, 0.7868]]], [[[0.4999, 0.0452, 0.7661]]], [[[0.0252, 0.2295, 0.2879]]], [[[0.4116, 0.5571, 0.8496]]], [[[0.631, 0.1622, 0.3721]]], [[[0.2704, 0.5264, 0.2001]]], [[[0.4247, 0.3264, 0.8215]]], [[[0.1624, 0.967, 0.3638]]], [[[0.8801, 0.3211, 0.9571]]], [[[0.8576, 0.936, 0.2145]]], [[[0.6428, 0.7912, 0.3184]]], [[[0.3686, 0.0025, 0.6584]]]],[0, 0, 0], 1, 1, false, 1, 1, Con21127), 
exec_layers([LMin75176,LRes63206,LZer373,LRes75419,LFla62094,LRes66334,LRes53128,LCon21127],["Min75176","Res63206","Zer373","Res75419","Fla62094","Res66334","Res53128","Con21127"],Con21127,"Con21127")

Actual (Unparsed): [[[[0.9741930, 0.6465665, 0.9501866]], [[1.3834230, 1.3510630, 0.9259164]], [[1.2859516, 1.3166861, 1.1174212]], [[1.0446329, 0.7712701, 1.4430116]], [[0.5716364, 1.2991661, 1.3709047]], [[0.7206042, 1.1041317, 1.5197594]], [[1.1204149, 1.1619574, 0.7399926]], [[1.2371129, 1.0036934, 0.7495919]], [[0.7701390, 1.0406557, 1.0617587]]]]

Expected (Unparsed): [[[[0.97419298,0.64656647,0.9501865500000001]],[[1.3834230200000002,1.35106298,0.9259163700000002]],[[1.28595162,1.31668607,1.1174211299999999]],[[1.04463291,0.7712701,1.44301162]],[[0.57163635,1.2991660600000001,1.37090463]],[[0.72060423,1.1041317099999999,1.5197593900000002]],[[1.12041489,1.16195739,0.73999262]],[[1.2371129,1.00369336,0.74959194]],[[0.77013895,1.04065569,1.0617587300000002]]]]

Actual:   [[[[0.9742, 0.6466, 0.9502]], [[1.3835, 1.3511, 0.926]], [[1.286, 1.3167, 1.1175]], [[1.0447, 0.7713, 1.4431]], [[0.5717, 1.2992, 1.371]], [[0.7207, 1.1042, 1.5198]], [[1.1205, 1.162, 0.74]], [[1.2372, 1.0037, 0.7496]], [[0.7702, 1.0407, 1.0618]]]]

Expected: [[[[0.9742, 0.6466, 0.9502]], [[1.3835, 1.3511, 0.926]], [[1.286, 1.3167, 1.1175]], [[1.0447, 0.7713, 1.4431]], [[0.5717, 1.2992, 1.371]], [[0.7207, 1.1042, 1.5198]], [[1.1205, 1.162, 0.74]], [[1.2372, 1.0037, 0.7496]], [[0.7702, 1.0407, 1.0618]]]]