import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Loc11568 = tf.keras.layers.Input(shape=([2, 1]))

Loc11568 = keras.layers.LocallyConnected1D(3, (2),strides=(1), name = 'Loc11568', )(in0Loc11568)
Den25277 = keras.layers.Dense(2,name = 'Den25277', )(Loc11568)
model = tf.keras.models.Model(inputs=[in0Loc11568], outputs=Den25277)
w = model.get_layer('Loc11568').get_weights() 
w[0] = np.array([[[0.9684, 0.9648, 0.9796], [0.2673, 0.0595, 0.3174]]])
w[1] = np.array([[0, 0, 0]])
model.get_layer('Loc11568').set_weights(w) 
w = model.get_layer('Den25277').get_weights() 
w[0] = np.array([[0.4128, 0.2667], [0.7295, 0.7916], [0.2074, 0.3226]])
w[1] = np.array([0.7897, 0.376])
model.get_layer('Den25277').set_weights(w) 
in0Loc11568 = tf.constant([[[0.7095], [0.0425]]])
print (np.array2string(model.predict([in0Loc11568],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Den25277.png')

LLoc11568 = locally_connected1D_layer([[[0.7095], [0.0425]]], 2,[[[0.9684, 0.9648, 0.9796], [0.2673, 0.0595, 0.3174]]],[[0, 0, 0]], 1, Loc11568), 
LDen25277 = dense_layer(Loc11568, [[0.4128, 0.2667], [0.7295, 0.7916], [0.2074, 0.3226]],[0.7897, 0.376], Den25277), 
exec_layers([LLoc11568,LDen25277],["Loc11568","Den25277"],Den25277,"Den25277")

Actual (Unparsed): [[[1.7261684, 1.3347134]]]

Expected (Unparsed): [[[1.7261683571450002,1.334713349615]]]

Actual:   [[[1.7262, 1.3348]]]

Expected: [[[1.7262, 1.3348]]]