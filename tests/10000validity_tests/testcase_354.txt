import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Min57363 = tf.keras.layers.Input(shape=([2, 1, 2, 1]))
in1Min57363 = tf.keras.layers.Input(shape=([2, 1, 2, 1]))

Min57363 = keras.layers.Minimum(name = 'Min57363', )([in0Min57363,in1Min57363])
Res27872 = keras.layers.Reshape((2, 1, 2), name = 'Res27872', )(Min57363)
Loc12147 = keras.layers.LocallyConnected2D(2, (2, 1),strides=(4, 1), name = 'Loc12147', )(Res27872)
model = tf.keras.models.Model(inputs=[in0Min57363,in1Min57363], outputs=Loc12147)
w = model.get_layer('Loc12147').get_weights() 
w[0] = np.array([[[0.4684, 0.711], [0.4223, 0.2448], [0.8104, 0.3974], [0.7096, 0.8106]]])
w[1] = np.array([[[0, 0]]])
model.get_layer('Loc12147').set_weights(w) 
in0Min57363 = tf.constant([[[[[0.9549], [0.7778]]], [[[0.2552], [0.4824]]]]])
in1Min57363 = tf.constant([[[[[0.3319], [0.902]]], [[[0.823], [0.5314]]]]])
print (np.array2string(model.predict([in0Min57363,in1Min57363],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Loc12147.png')

LMin57363 = minimum_layer([[[[[[0.9549], [0.7778]]], [[[0.2552], [0.4824]]]]], [[[[[0.3319], [0.902]]], [[[0.823], [0.5314]]]]]], Min57363), 
LRes27872 = reshape_layer(Min57363, [2, 1, 2], Res27872), 
LLoc12147 = locally_connected2D_layer(Res27872, 2, 1,[[[0.4684, 0.711], [0.4223, 0.2448], [0.8104, 0.3974], [0.7096, 0.8106]]],[[[0, 0]]], 4, 1, Loc12147), 
exec_layers([LMin57363,LRes27872,LLoc12147],["Min57363","Res27872","Loc12147"],Loc12147,"Loc12147")

Actual (Unparsed): [[[[1.0330520, 0.9188363]]]]

Expected (Unparsed): [[[[1.03305202,0.91883626]]]]

Actual:   [[[[1.0331, 0.9189]]]]

Expected: [[[[1.0331, 0.9189]]]]