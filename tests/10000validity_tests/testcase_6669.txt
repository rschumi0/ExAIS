import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Sub68865 = tf.keras.layers.Input(shape=([3, 2]))
in1Sub68865 = tf.keras.layers.Input(shape=([3, 2]))

Sub68865 = keras.layers.Subtract(name = 'Sub68865', )([in0Sub68865,in1Sub68865])
Res34369 = keras.layers.Reshape((3, 2, 1), name = 'Res34369', )(Sub68865)
Up_36633 = keras.layers.UpSampling2D(size=(2, 2), name = 'Up_36633', )(Res34369)
model = tf.keras.models.Model(inputs=[in0Sub68865,in1Sub68865], outputs=Up_36633)
in0Sub68865 = tf.constant([[[0.7301, 0.0205], [0.2435, 0.7979], [0.2753, 0.9594]]])
in1Sub68865 = tf.constant([[[0.0882, 0.5088], [0.8684, 0.8457], [0.0887, 0.6138]]])
print (np.array2string(model.predict([in0Sub68865,in1Sub68865],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Up_36633.png')

LSub68865 = subtract_layer([[[0.7301, 0.0205], [0.2435, 0.7979], [0.2753, 0.9594]]], [[[0.0882, 0.5088], [0.8684, 0.8457], [0.0887, 0.6138]]], Sub68865), 
LRes34369 = reshape_layer(Sub68865, [3, 2, 1], Res34369), 
LUp_36633 = up_sampling2D_layer(Res34369, 2, 2, Up_36633), 
exec_layers([LSub68865,LRes34369,LUp_36633],["Sub68865","Res34369","Up_36633"],Up_36633,"Up_36633")

Actual (Unparsed): [[[[0.6419000], [0.6419000], [-0.4883000], [-0.4883000]], [[0.6419000], [0.6419000], [-0.4883000], [-0.4883000]], [[-0.6249000], [-0.6249000], [-0.0478000], [-0.0478000]], [[-0.6249000], [-0.6249000], [-0.0478000], [-0.0478000]], [[0.1866000], [0.1866000], [0.3456000], [0.3456000]], [[0.1866000], [0.1866000], [0.3456000], [0.3456000]]]]

Expected (Unparsed): [[[[0.6418999999999999],[0.6418999999999999],[-0.4883],[-0.4883]],[[0.6418999999999999],[0.6418999999999999],[-0.4883],[-0.4883]],[[-0.6249],[-0.6249],[-0.047799999999999954],[-0.047799999999999954]],[[-0.6249],[-0.6249],[-0.047799999999999954],[-0.047799999999999954]],[[0.1866],[0.1866],[0.3456],[0.3456]],[[0.1866],[0.1866],[0.3456],[0.3456]]]]

Actual:   [[[[0.6419], [0.6419], [-0.4883], [-0.4883]], [[0.6419], [0.6419], [-0.4883], [-0.4883]], [[-0.6249], [-0.6249], [-0.0478], [-0.0478]], [[-0.6249], [-0.6249], [-0.0478], [-0.0478]], [[0.1866], [0.1866], [0.3456], [0.3456]], [[0.1866], [0.1866], [0.3456], [0.3456]]]]

Expected: [[[[0.6419], [0.6419], [-0.4883], [-0.4883]], [[0.6419], [0.6419], [-0.4883], [-0.4883]], [[-0.6249], [-0.6249], [-0.0477], [-0.0477]], [[-0.6249], [-0.6249], [-0.0477], [-0.0477]], [[0.1866], [0.1866], [0.3456], [0.3456]], [[0.1866], [0.1866], [0.3456], [0.3456]]]]