import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Dot10684 = tf.keras.layers.Input(shape=([3]))
in1Dot10684 = tf.keras.layers.Input(shape=([3]))

Dot10684 = keras.layers.Dot(axes=(1, 1), name = 'Dot10684', )([in0Dot10684,in1Dot10684])
Res20126 = keras.layers.Reshape((1, 1), name = 'Res20126', )(Dot10684)
LST64368 = keras.layers.LSTM(3,recurrent_activation='sigmoid', name = 'LST64368', )(Res20126)
model = tf.keras.models.Model(inputs=[in0Dot10684,in1Dot10684], outputs=LST64368)
w = model.get_layer('LST64368').get_weights() 
w[0] = np.array([[1, 4, 10, 6, 4, 8, 2, 2, 5, 8, 9, 3]])
w[1] = np.array([[3, 4, 7, 4, 5, 4, 4, 5, 10, 4, 3, 8], [10, 7, 1, 2, 7, 5, 8, 1, 7, 7, 4, 8], [2, 6, 10, 8, 1, 1, 9, 4, 1, 8, 1, 6]])
w[2] = np.array([4, 2, 5, 4, 3, 3, 3, 6, 7, 2, 9, 10])
model.get_layer('LST64368').set_weights(w) 
in0Dot10684 = tf.constant([[0.022, 0.5012, 0.0558]])
in1Dot10684 = tf.constant([[0.9384, 0.5216, 0.7511]])
print (np.array2string(model.predict([in0Dot10684,in1Dot10684],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='LST64368.png')

LDot10684 = dot_layer([[0.022, 0.5012, 0.0558]], [[0.9384, 0.5216, 0.7511]], 1, 1, Dot10684), 
LRes20126 = reshape_layer(Dot10684, [1, 1], Res20126), 
LLST64368 = lstm_layer(Res20126,[[1, 4, 10, 6, 4, 8, 2, 2, 5, 8, 9, 3]],[[3, 4, 7, 4, 5, 4, 4, 5, 10, 4, 3, 8], [10, 7, 1, 2, 7, 5, 8, 1, 7, 7, 4, 8], [2, 6, 10, 8, 1, 1, 9, 4, 1, 8, 1, 6]],[4, 2, 5, 4, 3, 3, 3, 6, 7, 2, 9, 10], LST64368), 
exec_layers([LDot10684,LRes20126,LLST64368],["Dot10684","Res20126","LST64368"],LST64368,"LST64368")

Actual (Unparsed): [[0.7478956, 0.7461774, 0.7614702]]

Expected (Unparsed): [[0.7478956423031824,0.7461774013264012,0.7614702114348942]]

Actual:   [[0.7479, 0.7462, 0.7615]]

Expected: [[0.7479, 0.7462, 0.7615]]