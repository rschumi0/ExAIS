import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Dot50253 = tf.keras.layers.Input(shape=([2]))
in1Dot50253 = tf.keras.layers.Input(shape=([2]))
in0Con78941 = tf.keras.layers.Input(shape=([3, 7]))
in0Den39485 = tf.keras.layers.Input(shape=([4, 2, 5]))
in0Max57513 = tf.keras.layers.Input(shape=([1, 2]))
in0Con29281 = tf.keras.layers.Input(shape=([4, 6]))

Dot50253 = keras.layers.Dot(axes=(1, 1), name = 'Dot50253', )([in0Dot50253,in1Dot50253])
Den30976 = keras.layers.Dense(2,name = 'Den30976', )(Dot50253)
Res1523 = keras.layers.Reshape((2, 1), name = 'Res1523', )(Den30976)
Zer57535 = keras.layers.ZeroPadding1D(padding=((1, 0)), name = 'Zer57535', )(Res1523)
Con78941 = keras.layers.Concatenate(axis=2, name = 'Con78941', )([Zer57535,in0Con78941])
Den39485 = keras.layers.Dense(4,name = 'Den39485', )(in0Den39485)
Res7987 = keras.layers.Reshape((4, 8), name = 'Res7987', )(Den39485)
Max57513 = keras.layers.MaxPool1D(pool_size=(1), strides=(1), padding='same', name = 'Max57513', )(in0Max57513)
Zer11998 = keras.layers.ZeroPadding1D(padding=((3, 0)), name = 'Zer11998', )(Max57513)
Con29281 = keras.layers.Concatenate(axis=2, name = 'Con29281', )([Zer11998,in0Con29281])
Ave4015 = keras.layers.Average(name = 'Ave4015', )([Res7987,Con29281])
Cro95315 = keras.layers.Cropping1D(cropping=((1, 0)), name = 'Cro95315', )(Ave4015)
Sub81032 = keras.layers.Subtract(name = 'Sub81032', )([Con78941,Cro95315])
model = tf.keras.models.Model(inputs=[in0Dot50253,in1Dot50253,in0Con78941,in0Den39485,in0Max57513,in0Con29281], outputs=Sub81032)
w = model.get_layer('Den30976').get_weights() 
w[0] = np.array([[0.5036, 0.3547]])
w[1] = np.array([0.3294, 0.1409])
model.get_layer('Den30976').set_weights(w) 
w = model.get_layer('Den39485').get_weights() 
w[0] = np.array([[0.9913, 0.1892, 0.0366, 0.1508], [0.5439, 0.2919, 0.9154, 0.4771], [0.5239, 0.0436, 0.1301, 0.941], [0.9685, 0.1244, 0.9611, 0.9563], [0.7407, 0.8625, 0.0696, 0.0539]])
w[1] = np.array([0.776, 0.0567, 0.4033, 0.4207])
model.get_layer('Den39485').set_weights(w) 
in0Dot50253 = tf.constant([[0.3688, 0.44]])
in1Dot50253 = tf.constant([[0.7267, 0.614]])
in0Con78941 = tf.constant([[[0.4989, 0.3656, 0.992, 0.7969, 0.5618, 0.5284, 0.2962], [0.1514, 0.1244, 0.5769, 0.4544, 0.7336, 0.0711, 0.8378], [0.9912, 0.6385, 0.4755, 0.3196, 0.9169, 0.9747, 0.9577]]])
in0Den39485 = tf.constant([[[[0.1678, 0.058, 0.9211, 0.532, 0.0765], [0.3869, 0.4293, 0.5676, 0.2297, 0.7139]], [[0.2199, 0.0147, 0.1745, 0.0975, 0.3009], [0.4597, 0.9072, 0.157, 0.6238, 0.4393]], [[0.6885, 0.3021, 0.6919, 0.948, 0.1581], [0.6126, 0.1264, 0.2126, 0.8371, 0.6547]], [[0.8407, 0.1761, 0.5794, 0.7495, 0.2721], [0.8228, 0.9152, 0.6008, 0.3319, 0.8116]]]])
in0Max57513 = tf.constant([[[1.5128, 1.7294]]])
in0Con29281 = tf.constant([[[0.8764, 0.0041, 0.2812, 0.7755, 0.8194, 0.3491], [0.9574, 0.8828, 0.6934, 0.8704, 0.0346, 0.4468], [0.6971, 0.2414, 0.4481, 0.2273, 0.6072, 0.021], [0.464, 0.476, 0.7269, 0.9204, 0.8979, 0.2023]]])
print (np.array2string(model.predict([in0Dot50253,in1Dot50253,in0Con78941,in0Den39485,in0Max57513,in0Con29281],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Sub81032.png')

LDot50253 = dot_layer([[0.3688, 0.44]], [[0.7267, 0.614]], 1, 1, Dot50253), 
LDen30976 = dense_layer(Dot50253, [[0.5036, 0.3547]],[0.3294, 0.1409], Den30976), 
LRes1523 = reshape_layer(Den30976, [2, 1], Res1523), 
LZer57535 = zero_padding1D_layer(Res1523, 1, 0, Zer57535), 
LCon78941 = concatenate_layer([Zer57535,[[[0.4989, 0.3656, 0.992, 0.7969, 0.5618, 0.5284, 0.2962], [0.1514, 0.1244, 0.5769, 0.4544, 0.7336, 0.0711, 0.8378], [0.9912, 0.6385, 0.4755, 0.3196, 0.9169, 0.9747, 0.9577]]]], 2, Con78941), 
LDen39485 = dense_layer([[[[0.1678, 0.058, 0.9211, 0.532, 0.0765], [0.3869, 0.4293, 0.5676, 0.2297, 0.7139]], [[0.2199, 0.0147, 0.1745, 0.0975, 0.3009], [0.4597, 0.9072, 0.157, 0.6238, 0.4393]], [[0.6885, 0.3021, 0.6919, 0.948, 0.1581], [0.6126, 0.1264, 0.2126, 0.8371, 0.6547]], [[0.8407, 0.1761, 0.5794, 0.7495, 0.2721], [0.8228, 0.9152, 0.6008, 0.3319, 0.8116]]]], [[0.9913, 0.1892, 0.0366, 0.1508], [0.5439, 0.2919, 0.9154, 0.4771], [0.5239, 0.0436, 0.1301, 0.941], [0.9685, 0.1244, 0.9611, 0.9563], [0.7407, 0.8625, 0.0696, 0.0539]],[0.776, 0.0567, 0.4033, 0.4207], Den39485), 
LRes7987 = reshape_layer(Den39485, [4, 8], Res7987), 
LMax57513 = max_pool1D_layer([[[1.5128, 1.7294]]], 1, 1, true, Max57513), 
LZer11998 = zero_padding1D_layer(Max57513, 3, 0, Zer11998), 
LCon29281 = concatenate_layer([Zer11998,[[[0.8764, 0.0041, 0.2812, 0.7755, 0.8194, 0.3491], [0.9574, 0.8828, 0.6934, 0.8704, 0.0346, 0.4468], [0.6971, 0.2414, 0.4481, 0.2273, 0.6072, 0.021], [0.464, 0.476, 0.7269, 0.9204, 0.8979, 0.2023]]]], 2, Con29281), 
LAve4015 = average_layer([Res7987,Con29281], Ave4015), 
LCro95315 = cropping1D_layer(Ave4015, 1, 0, Cro95315), 
LSub81032 = subtract_layer(Con78941,Cro95315, Sub81032), 
exec_layers([LDot50253,LDen30976,LRes1523,LZer57535,LCon78941,LDen39485,LRes7987,LMax57513,LZer11998,LCon29281,LAve4015,LCro95315,LSub81032],["Dot50253","Den30976","Res1523","Zer57535","Con78941","Den39485","Res7987","Max57513","Zer11998","Con29281","Ave4015","Cro95315","Sub81032"],Sub81032,"Sub81032")

Actual (Unparsed): [[[-0.7053541, 0.3079703, -0.3941786, 0.1833317, -0.9182594, -0.3093145, -0.4394555, -0.7726015], [-0.9098548, -0.1284032, -1.0827421, -0.6612148, -1.1991841, 0.1761583, -0.9420955, 0.0226754], [-1.8926869, -0.1836750, -0.2984671, -0.7165617, -1.7072377, -0.1668045, -0.3366646, -0.0974071]]]

Expected (Unparsed): [[[-0.7053540650000001,0.30797027,-0.39417852999999997,0.18333172499999995,-0.9182594000000001,-0.309314545,-0.43945553000000015,-0.7726015449999999],[-0.9098547789439999,-0.12840323999999995,-1.082742095,-0.6612148,-1.1991840599999999,0.17615828499999997,-0.942095455,0.02267540999999995],[-1.892686969288,-0.18367495999999994,-0.29846705500000015,-0.716561655,-1.7072376550000001,-0.16680443999999994,-0.336664545,-0.09740708499999995]]]

Actual:   [[[-0.7053, 0.308, -0.3941, 0.1834, -0.9182, -0.3093, -0.4394, -0.7726], [-0.9098, -0.1284, -1.0827, -0.6612, -1.1991, 0.1762, -0.942, 0.0227], [-1.8926, -0.1836, -0.2984, -0.7165, -1.7072, -0.1668, -0.3366, -0.0974]]]

Expected: [[[-0.7053, 0.308, -0.3941, 0.1834, -0.9182, -0.3093, -0.4394, -0.7726], [-0.9098, -0.1284, -1.0827, -0.6612, -1.1991, 0.1762, -0.942, 0.0227], [-1.8926, -0.1836, -0.2984, -0.7165, -1.7072, -0.1668, -0.3366, -0.0974]]]