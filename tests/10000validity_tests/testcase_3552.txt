import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Dot17337 = tf.keras.layers.Input(shape=([2]))
in1Dot17337 = tf.keras.layers.Input(shape=([2]))
in0Con69537 = tf.keras.layers.Input(shape=([2, 1]))
in0Per12371 = tf.keras.layers.Input(shape=([2, 2]))
in0Con911 = tf.keras.layers.Input(shape=([3, 2]))
in0Sub81310 = tf.keras.layers.Input(shape=([3, 3]))
in1Sub81310 = tf.keras.layers.Input(shape=([3, 3]))

Dot17337 = keras.layers.Dot(axes=(1, 1), name = 'Dot17337', )([in0Dot17337,in1Dot17337])
Res41636 = keras.layers.Reshape((1, 1), name = 'Res41636', )(Dot17337)
Zer53728 = keras.layers.ZeroPadding1D(padding=((1, 0)), name = 'Zer53728', )(Res41636)
Con69537 = keras.layers.Concatenate(axis=2, name = 'Con69537', )([Zer53728,in0Con69537])
Per12371 = keras.layers.Permute((2,1), name = 'Per12371',)(in0Per12371)
Per64940 = keras.layers.Permute((2,1), name = 'Per64940',)(Per12371)
Min30838 = keras.layers.Minimum(name = 'Min30838', )([Con69537,Per64940])
Fla53205 = keras.layers.Flatten(name = 'Fla53205', )(Min30838)
Res20452 = keras.layers.Reshape((4, 1), name = 'Res20452', )(Fla53205)
Glo74862 = keras.layers.GlobalMaxPool1D(name = 'Glo74862', )(Res20452)
Res78072 = keras.layers.Reshape((1, 1), name = 'Res78072', )(Glo74862)
Zer47786 = keras.layers.ZeroPadding1D(padding=((2, 0)), name = 'Zer47786', )(Res78072)
Con911 = keras.layers.Concatenate(axis=2, name = 'Con911', )([Zer47786,in0Con911])
Sub81310 = keras.layers.Subtract(name = 'Sub81310', )([in0Sub81310,in1Sub81310])
Max36185 = keras.layers.Maximum(name = 'Max36185', )([Con911,Sub81310])
model = tf.keras.models.Model(inputs=[in0Dot17337,in1Dot17337,in0Con69537,in0Per12371,in0Con911,in0Sub81310,in1Sub81310], outputs=Max36185)
in0Dot17337 = tf.constant([[0.7528, 0.9395]])
in1Dot17337 = tf.constant([[0.2852, 0.338]])
in0Con69537 = tf.constant([[[0.1901], [0.5135]]])
in0Per12371 = tf.constant([[[1.5799, 1.9003], [1.5268, 1.8271]]])
in0Con911 = tf.constant([[[0.2708, 0.1723], [0.3717, 0.014], [0.89, 0.8659]]])
in0Sub81310 = tf.constant([[[0.1433, 0.6277, 0.2185], [0.3468, 0.7396, 0.055], [0.0889, 0.7052, 0.4333]]])
in1Sub81310 = tf.constant([[[0.5312, 0.5786, 0.1786], [0.461, 0.8542, 0.9987], [0.925, 0.2957, 0.0116]]])
print (np.array2string(model.predict([in0Dot17337,in1Dot17337,in0Con69537,in0Per12371,in0Con911,in0Sub81310,in1Sub81310],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Max36185.png')

LDot17337 = dot_layer([[0.7528, 0.9395]], [[0.2852, 0.338]], 1, 1, Dot17337), 
LRes41636 = reshape_layer(Dot17337, [1, 1], Res41636), 
LZer53728 = zero_padding1D_layer(Res41636, 1, 0, Zer53728), 
LCon69537 = concatenate_layer([Zer53728,[[[0.1901], [0.5135]]]], 2, Con69537), 
LPer12371 = permute_layer([[[1.5799, 1.9003], [1.5268, 1.8271]]], 2,1, Per12371), 
LPer64940 = permute_layer(Per12371, 2,1, Per64940), 
LMin30838 = minimum_layer([Con69537,Per64940], Min30838), 
LFla53205 = flatten_layer(Min30838, Fla53205), 
LRes20452 = reshape_layer(Fla53205, [4, 1], Res20452), 
LGlo74862 = global_max_pool1D_layer(Res20452, Glo74862), 
LRes78072 = reshape_layer(Glo74862, [1, 1], Res78072), 
LZer47786 = zero_padding1D_layer(Res78072, 2, 0, Zer47786), 
LCon911 = concatenate_layer([Zer47786,[[[0.2708, 0.1723], [0.3717, 0.014], [0.89, 0.8659]]]], 2, Con911), 
LSub81310 = subtract_layer([[[0.1433, 0.6277, 0.2185], [0.3468, 0.7396, 0.055], [0.0889, 0.7052, 0.4333]]], [[[0.5312, 0.5786, 0.1786], [0.461, 0.8542, 0.9987], [0.925, 0.2957, 0.0116]]], Sub81310), 
LMax36185 = maximum_layer([Con911,Sub81310], Max36185), 
exec_layers([LDot17337,LRes41636,LZer53728,LCon69537,LPer12371,LPer64940,LMin30838,LFla53205,LRes20452,LGlo74862,LRes78072,LZer47786,LCon911,LSub81310,LMax36185],["Dot17337","Res41636","Zer53728","Con69537","Per12371","Per64940","Min30838","Fla53205","Res20452","Glo74862","Res78072","Zer47786","Con911","Sub81310","Max36185"],Max36185,"Max36185")

Actual (Unparsed): [[[0.0000000, 0.2708000, 0.1723000], [0.0000000, 0.3717000, 0.0140000], [0.5322495, 0.8900000, 0.8659000]]]

Expected (Unparsed): [[[0,0.2708,0.1723],[0,0.3717,0.014],[0.53224956,0.89,0.8659]]]

Actual:   [[[0, 0.2708, 0.1723], [0, 0.3717, 0.014], [0.5323, 0.89, 0.8659]]]

Expected: [[[0, 0.2708, 0.1723], [0, 0.3717, 0.014], [0.5323, 0.89, 0.8659]]]