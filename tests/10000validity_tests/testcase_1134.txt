import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Ave95747 = tf.keras.layers.Input(shape=([2, 1]))
in0Dot23544 = tf.keras.layers.Input(shape=([2, 2]))
in1Dot23544 = tf.keras.layers.Input(shape=([2, 2]))
in0Con87411 = tf.keras.layers.Input(shape=([2, 4]))
in0Den64677 = tf.keras.layers.Input(shape=([4, 3, 4]))
in0Sub23394 = tf.keras.layers.Input(shape=([3, 3, 3, 2]))
in1Sub23394 = tf.keras.layers.Input(shape=([3, 3, 3, 2]))
in0Con92366 = tf.keras.layers.Input(shape=([1, 2]))

Ave95747 = keras.layers.AveragePooling1D(pool_size=(1), name = 'Ave95747', )(in0Ave95747)
Dot23544 = keras.layers.Dot(axes=(2, 2), name = 'Dot23544', )([in0Dot23544,in1Dot23544])
Max74738 = keras.layers.MaxPool1D(pool_size=(1), name = 'Max74738', )(Dot23544)
Con87411 = keras.layers.Concatenate(axis=2, name = 'Con87411', )([Max74738,in0Con87411])
Den64677 = keras.layers.Dense(2,name = 'Den64677', )(in0Den64677)
Res30126 = keras.layers.Reshape((4, 6), name = 'Res30126', )(Den64677)
Dot23467 = keras.layers.Dot(axes=(2, 2), name = 'Dot23467', )([Con87411,Res30126])
Dot17493 = keras.layers.Dot(axes=(1, 1), name = 'Dot17493', )([Ave95747,Dot23467])
Sub23394 = keras.layers.Subtract(name = 'Sub23394', )([in0Sub23394,in1Sub23394])
Res49915 = keras.layers.Reshape((3, 3, 6), name = 'Res49915', )(Sub23394)
Res13558 = keras.layers.Reshape((3, 18), name = 'Res13558', )(Res49915)
Sep65062 = keras.layers.SeparableConv1D(2, (2),strides=(3), padding='valid', name = 'Sep65062', )(Res13558)
Con92366 = keras.layers.Concatenate(axis=2, name = 'Con92366', )([Sep65062,in0Con92366])
Mul62 = keras.layers.Multiply(name = 'Mul62', )([Dot17493,Con92366])
model = tf.keras.models.Model(inputs=[in0Ave95747,in0Dot23544,in1Dot23544,in0Con87411,in0Den64677,in0Sub23394,in1Sub23394,in0Con92366], outputs=Mul62)
w = model.get_layer('Den64677').get_weights() 
w[0] = np.array([[0.3247, 0.8028], [0.4946, 0.0678], [0.86, 0.4913], [0.8317, 0.5669]])
w[1] = np.array([0.4742, 0.5406])
model.get_layer('Den64677').set_weights(w) 
w = model.get_layer('Sep65062').get_weights() 
w[0] = np.array([[[0.4145], [0.5729], [0.5049], [0.3648], [0.6479], [0.1904], [0.8707], [0.1254], [0.7117], [0.9116], [0.0739], [0.0972], [0.9767], [0.4343], [0.046], [0.311], [0.1925], [0.9991]], [[0.8638], [0.2007], [0.7635], [0.453], [0.1781], [0.5862], [0.3139], [0.5795], [0.0085], [0.7945], [0.1715], [0.9225], [0.5224], [0.8039], [0.0074], [0.0939], [0.407], [0.0802]]])
w[1] = np.array([[[0.617, 0.2093], [0.5842, 0.2672], [0.467, 0.4375], [0.9404, 0.1952], [0.9648, 0.9942], [0.3511, 0.5207], [0.4852, 0.9722], [0.9669, 0.1142], [0.9281, 0.7785], [0.7636, 0.1375], [0.9128, 0.6632], [0.5452, 0.3104], [0.5276, 0.5782], [0.796, 0.6341], [0.249, 0.3476], [0.9635, 0.5743], [0.9683, 0.3682], [0.9721, 0.4573]]])
w[2] = np.array([0, 0])
model.get_layer('Sep65062').set_weights(w) 
in0Ave95747 = tf.constant([[[1.471], [1.7198]]])
in0Dot23544 = tf.constant([[[0.7551, 0.636], [0.2531, 0.0291]]])
in1Dot23544 = tf.constant([[[0.3272, 0.5703], [0.3604, 0.4883]]])
in0Con87411 = tf.constant([[[0.9884, 0.9298, 0.5239, 0.6893], [0.5029, 0.0647, 0.1026, 0.0544]]])
in0Den64677 = tf.constant([[[[0.6049, 0.0982, 0.6455, 0.172], [0.7238, 0.8593, 0.882, 0.1728], [0.5587, 0.5499, 0.4468, 0.9477]], [[0.389, 0.4063, 0.032, 0.1802], [0.327, 0.8897, 0.607, 0.739], [0.4752, 0.5896, 0.6301, 0.537]], [[0.7589, 0.9142, 0.9433, 0.2251], [0.5201, 0.0934, 0.8749, 0.6898], [0.2489, 0.386, 0.8219, 0.2686]], [[0.284, 0.1506, 0.986, 0.4431], [0.9153, 0.6198, 0.9994, 0.5269], [0.0871, 0.7971, 0.8894, 0.524]]]])
in0Sub23394 = tf.constant([[[[[0.8198, 0.8872], [0.2047, 0.9041], [0.5405, 0.0649]], [[0.1545, 0.5111], [0.747, 0.1908], [0.2946, 0.2044]], [[0.8166, 0.2877], [0.6382, 0.1163], [0.3139, 0.2087]]], [[[0.0635, 0.6019], [0.8532, 0.9462], [0.5443, 0.0578]], [[0.4288, 0.4595], [0.0414, 0.7886], [0.1346, 0.7293]], [[0.8545, 0.0126], [0.3696, 0.9903], [0.8603, 0.9159]]], [[[0.9458, 0.7349], [0.3384, 0.3863], [0.9997, 0.1355]], [[0.0217, 0.6903], [0.244, 0.9886], [0.5997, 0.8894]], [[0.8929, 0.1507], [0.1482, 0.2392], [0.5409, 0.7041]]]]])
in1Sub23394 = tf.constant([[[[[0.8652, 0.1574], [0.3852, 0.7694], [0.049, 0.608]], [[0.4414, 0.9625], [0.4733, 0.9038], [0.8236, 0.9856]], [[0.1838, 0.0029], [0.7331, 0.735], [0.2707, 0.3433]]], [[[0.5325, 0.6113], [0.3557, 0.1426], [0.1706, 0.426]], [[0.3722, 0.8751], [0.2647, 0.4111], [0.7152, 0.3315]], [[0.3498, 0.3615], [0.9915, 0.2627], [0.1596, 0.8635]]], [[[0.4076, 0.1188], [0.316, 0.899], [0.3015, 0.7996]], [[0.4753, 0.851], [0.4461, 0.6557], [0.8008, 0.0847]], [[0.5279, 0.1991], [0.6166, 0.828], [0.6424, 0.1143]]]]])
in0Con92366 = tf.constant([[[0.87, 0.8794]]])
print (np.array2string(model.predict([in0Ave95747,in0Dot23544,in1Dot23544,in0Con87411,in0Den64677,in0Sub23394,in1Sub23394,in0Con92366],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Mul62.png')

LAve95747 = average_pooling1D_layer([[[1.471], [1.7198]]], 1, Ave95747), 
LDot23544 = dot_layer([[[0.7551, 0.636], [0.2531, 0.0291]]], [[[0.3272, 0.5703], [0.3604, 0.4883]]], 2, 2, Dot23544), 
LMax74738 = max_pool1D_layer(Dot23544, 1, Max74738), 
LCon87411 = concatenate_layer([Max74738,[[[0.9884, 0.9298, 0.5239, 0.6893], [0.5029, 0.0647, 0.1026, 0.0544]]]], 2, Con87411), 
LDen64677 = dense_layer([[[[0.6049, 0.0982, 0.6455, 0.172], [0.7238, 0.8593, 0.882, 0.1728], [0.5587, 0.5499, 0.4468, 0.9477]], [[0.389, 0.4063, 0.032, 0.1802], [0.327, 0.8897, 0.607, 0.739], [0.4752, 0.5896, 0.6301, 0.537]], [[0.7589, 0.9142, 0.9433, 0.2251], [0.5201, 0.0934, 0.8749, 0.6898], [0.2489, 0.386, 0.8219, 0.2686]], [[0.284, 0.1506, 0.986, 0.4431], [0.9153, 0.6198, 0.9994, 0.5269], [0.0871, 0.7971, 0.8894, 0.524]]]], [[0.3247, 0.8028], [0.4946, 0.0678], [0.86, 0.4913], [0.8317, 0.5669]],[0.4742, 0.5406], Den64677), 
LRes30126 = reshape_layer(Den64677, [4, 6], Res30126), 
LDot23467 = dot_layer(Con87411,Res30126, 2, 2, Dot23467), 
LDot17493 = dot_layer(Ave95747,Dot23467, 1, 1, Dot17493), 
LSub23394 = subtract_layer([[[[[0.8198, 0.8872], [0.2047, 0.9041], [0.5405, 0.0649]], [[0.1545, 0.5111], [0.747, 0.1908], [0.2946, 0.2044]], [[0.8166, 0.2877], [0.6382, 0.1163], [0.3139, 0.2087]]], [[[0.0635, 0.6019], [0.8532, 0.9462], [0.5443, 0.0578]], [[0.4288, 0.4595], [0.0414, 0.7886], [0.1346, 0.7293]], [[0.8545, 0.0126], [0.3696, 0.9903], [0.8603, 0.9159]]], [[[0.9458, 0.7349], [0.3384, 0.3863], [0.9997, 0.1355]], [[0.0217, 0.6903], [0.244, 0.9886], [0.5997, 0.8894]], [[0.8929, 0.1507], [0.1482, 0.2392], [0.5409, 0.7041]]]]], [[[[[0.8652, 0.1574], [0.3852, 0.7694], [0.049, 0.608]], [[0.4414, 0.9625], [0.4733, 0.9038], [0.8236, 0.9856]], [[0.1838, 0.0029], [0.7331, 0.735], [0.2707, 0.3433]]], [[[0.5325, 0.6113], [0.3557, 0.1426], [0.1706, 0.426]], [[0.3722, 0.8751], [0.2647, 0.4111], [0.7152, 0.3315]], [[0.3498, 0.3615], [0.9915, 0.2627], [0.1596, 0.8635]]], [[[0.4076, 0.1188], [0.316, 0.899], [0.3015, 0.7996]], [[0.4753, 0.851], [0.4461, 0.6557], [0.8008, 0.0847]], [[0.5279, 0.1991], [0.6166, 0.828], [0.6424, 0.1143]]]]], Sub23394), 
LRes49915 = reshape_layer(Sub23394, [3, 3, 6], Res49915), 
LRes13558 = reshape_layer(Res49915, [3, 18], Res13558), 
LSep65062 = separable_conv1D_layer(Res13558, 2,[[[[0.4145], [0.5729], [0.5049], [0.3648], [0.6479], [0.1904], [0.8707], [0.1254], [0.7117], [0.9116], [0.0739], [0.0972], [0.9767], [0.4343], [0.046], [0.311], [0.1925], [0.9991]], [[0.8638], [0.2007], [0.7635], [0.453], [0.1781], [0.5862], [0.3139], [0.5795], [0.0085], [0.7945], [0.1715], [0.9225], [0.5224], [0.8039], [0.0074], [0.0939], [0.407], [0.0802]]],[[[0.617, 0.2093], [0.5842, 0.2672], [0.467, 0.4375], [0.9404, 0.1952], [0.9648, 0.9942], [0.3511, 0.5207], [0.4852, 0.9722], [0.9669, 0.1142], [0.9281, 0.7785], [0.7636, 0.1375], [0.9128, 0.6632], [0.5452, 0.3104], [0.5276, 0.5782], [0.796, 0.6341], [0.249, 0.3476], [0.9635, 0.5743], [0.9683, 0.3682], [0.9721, 0.4573]]]],[0, 0], 3, false, Sep65062), 
LCon92366 = concatenate_layer([Sep65062,[[[0.87, 0.8794]]]], 2, Con92366), 
LMul62 = multiply_layer([Dot17493,Con92366], Mul62), 
exec_layers([LAve95747,LDot23544,LMax74738,LCon87411,LDen64677,LRes30126,LDot23467,LDot17493,LSub23394,LRes49915,LRes13558,LSep65062,LCon92366,LMul62],["Ave95747","Dot23544","Max74738","Con87411","Den64677","Res30126","Dot23467","Dot17493","Sub23394","Res49915","Res13558","Sep65062","Con92366","Mul62"],Mul62,"Mul62")

Actual (Unparsed): [[[9.7373343, 8.7103270, 12.6648099, 13.8214413]]]

Expected (Unparsed): [[[9.737334517531528,8.71032729650095,12.664810395273907,13.821441669720874]]]

Actual:   [[[9.7374, 8.7104, 12.6649, 13.8215]]]

Expected: [[[9.7374, 8.7104, 12.6649, 13.8215]]]