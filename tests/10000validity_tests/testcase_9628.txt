import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Dot94313 = tf.keras.layers.Input(shape=([3, 3]))
in1Dot94313 = tf.keras.layers.Input(shape=([3, 3]))
in0Con3007 = tf.keras.layers.Input(shape=([3, 3, 1, 1]))
in0Min48088 = tf.keras.layers.Input(shape=([2, 1, 1, 2]))
in1Min48088 = tf.keras.layers.Input(shape=([2, 1, 1, 2]))
in0Up_94167 = tf.keras.layers.Input(shape=([3, 2, 4]))
in0Con16280 = tf.keras.layers.Input(shape=([3, 3]))

Dot94313 = keras.layers.Dot(axes=(1, 2), name = 'Dot94313', )([in0Dot94313,in1Dot94313])
Res76058 = keras.layers.Reshape((3, 3, 1), name = 'Res76058', )(Dot94313)
Res24872 = keras.layers.Reshape((3, 3, 1, 1), name = 'Res24872', )(Res76058)
Con3007 = keras.layers.Concatenate(axis=4, name = 'Con3007', )([Res24872,in0Con3007])
Min48088 = keras.layers.Minimum(name = 'Min48088', )([in0Min48088,in1Min48088])
Zer76934 = keras.layers.ZeroPadding3D(padding=((1, 0), (2, 0), (0, 0)), name = 'Zer76934', )(Min48088)
Ave33994 = keras.layers.Average(name = 'Ave33994', )([Con3007,Zer76934])
Res68875 = keras.layers.Reshape((3, 3, 2), name = 'Res68875', )(Ave33994)
Res35337 = keras.layers.Reshape((3, 6), name = 'Res35337', )(Res68875)
Up_94167 = keras.layers.UpSampling2D(size=(2, 2), name = 'Up_94167', )(in0Up_94167)
Res58475 = keras.layers.Reshape((6, 16), name = 'Res58475', )(Up_94167)
Sep87420 = keras.layers.SeparableConv1D(3, (5),strides=(4), padding='same', name = 'Sep87420', )(Res58475)
Zer28144 = keras.layers.ZeroPadding1D(padding=((1, 0)), name = 'Zer28144', )(Sep87420)
Con16280 = keras.layers.Concatenate(axis=2, name = 'Con16280', )([Zer28144,in0Con16280])
Min39728 = keras.layers.Minimum(name = 'Min39728', )([Res35337,Con16280])
model = tf.keras.models.Model(inputs=[in0Dot94313,in1Dot94313,in0Con3007,in0Min48088,in1Min48088,in0Up_94167,in0Con16280], outputs=Min39728)
w = model.get_layer('Sep87420').get_weights() 
w[0] = np.array([[[0.5605], [0.9924], [0.8661], [0.3887], [0.0585], [0.5874], [0.1656], [0.0171], [0.1607], [0.8366], [0.0979], [0.428], [0.0662], [0.7317], [0.8678], [0.4992]], [[0.6448], [0.8639], [0.2828], [0.6685], [0.7853], [0.2564], [0.2996], [0.3999], [0.4713], [0.363], [0.0673], [0.9155], [0.6425], [0.2353], [0.5842], [0.8557]], [[0.3714], [0.0966], [0.8893], [0.2154], [0.2662], [0.943], [0.9151], [0.2453], [0.2971], [0.3434], [0.745], [0.0038], [0.4341], [0.3025], [0.0364], [0.8987]], [[0.5851], [0.9135], [0.8011], [0.8663], [0.3254], [0.5363], [0.5627], [0.804], [0.8248], [0.4076], [0.1549], [0.492], [0.19], [0.9141], [0.066], [0.5177]], [[0.1701], [0.2406], [0.2907], [0.6551], [0.7983], [0.744], [0.1032], [0.736], [0.0808], [0.1973], [0.0356], [0.3033], [0.2855], [0.998], [0.6116], [0.2344]]])
w[1] = np.array([[[0.2387, 0.4965, 0.2029], [0.8891, 0.0073, 0.0467], [0.8977, 0.2418, 0.4397], [0.884, 0.3354, 0.45], [0.6069, 0.7802, 0.3729], [0.3882, 0.1073, 0.738], [0.5303, 0.099, 0.7565], [0.2355, 0.4851, 0.4078], [0.3886, 0.758, 0.3071], [0.3644, 0.8311, 0.0332], [0.62, 0.1489, 0.7113], [0.7399, 0.7992, 0.8868], [0.2601, 0.9752, 0.6519], [0.2845, 0.6885, 0.4311], [0.761, 0.1181, 0.0293], [0.0608, 0.8241, 0.3887]]])
w[2] = np.array([0, 0, 0])
model.get_layer('Sep87420').set_weights(w) 
in0Dot94313 = tf.constant([[[0.3469, 0.1229, 0.4102], [0.9992, 0.973, 0.6595], [0.2714, 0.7704, 0.1955]]])
in1Dot94313 = tf.constant([[[0.7315, 0.9758, 0.1511], [0.6475, 0.1094, 0.5533], [0.6138, 0.287, 0.8472]]])
in0Con3007 = tf.constant([[[[[0.825]], [[0.1842]], [[0.2672]]], [[[0.7192]], [[0.0223]], [[0.9579]]], [[[0.4772]], [[0.6733]], [[0.7743]]]]])
in0Min48088 = tf.constant([[[[[0.7275, 0.9423]]], [[[0.7953, 0.4184]]]]])
in1Min48088 = tf.constant([[[[[0.1761, 0.9219]]], [[[0.0325, 0.015]]]]])
in0Up_94167 = tf.constant([[[[1.9766, 1.9304, 1.7259, 1.1273], [1.6481, 1.2548, 1.1376, 1.5952]], [[1.5938, 1.9811, 1.9289, 1.5556], [1.5533, 1.9964, 1.8182, 1.0966]], [[1.8775, 1.9753, 1.9191, 1.9735], [1.0584, 1.2275, 1.8329, 1.4424]]]])
in0Con16280 = tf.constant([[[0.3174, 0.454, 0.1729], [0.1575, 0.4419, 0.2352], [0.9204, 0.2247, 0.474]]])
print (np.array2string(model.predict([in0Dot94313,in1Dot94313,in0Con3007,in0Min48088,in1Min48088,in0Up_94167,in0Con16280],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Min39728.png')

LDot94313 = dot_layer([[[0.3469, 0.1229, 0.4102], [0.9992, 0.973, 0.6595], [0.2714, 0.7704, 0.1955]]], [[[0.7315, 0.9758, 0.1511], [0.6475, 0.1094, 0.5533], [0.6138, 0.287, 0.8472]]], 1, 2, Dot94313), 
LRes76058 = reshape_layer(Dot94313, [3, 3, 1], Res76058), 
LRes24872 = reshape_layer(Res76058, [3, 3, 1, 1], Res24872), 
LCon3007 = concatenate_layer([Res24872,[[[[[0.825]], [[0.1842]], [[0.2672]]], [[[0.7192]], [[0.0223]], [[0.9579]]], [[[0.4772]], [[0.6733]], [[0.7743]]]]]], 4, Con3007), 
LMin48088 = minimum_layer([[[[[[0.7275, 0.9423]]], [[[0.7953, 0.4184]]]]], [[[[[0.1761, 0.9219]]], [[[0.0325, 0.015]]]]]], Min48088), 
LZer76934 = zero_padding3D_layer(Min48088, 1, 0, 2, 0, 0, 0, Zer76934), 
LAve33994 = average_layer([Con3007,Zer76934], Ave33994), 
LRes68875 = reshape_layer(Ave33994, [3, 3, 2], Res68875), 
LRes35337 = reshape_layer(Res68875, [3, 6], Res35337), 
LUp_94167 = up_sampling2D_layer([[[[1.9766, 1.9304, 1.7259, 1.1273], [1.6481, 1.2548, 1.1376, 1.5952]], [[1.5938, 1.9811, 1.9289, 1.5556], [1.5533, 1.9964, 1.8182, 1.0966]], [[1.8775, 1.9753, 1.9191, 1.9735], [1.0584, 1.2275, 1.8329, 1.4424]]]], 2, 2, Up_94167), 
LRes58475 = reshape_layer(Up_94167, [6, 16], Res58475), 
LSep87420 = separable_conv1D_layer(Res58475, 5,[[[[0.5605], [0.9924], [0.8661], [0.3887], [0.0585], [0.5874], [0.1656], [0.0171], [0.1607], [0.8366], [0.0979], [0.428], [0.0662], [0.7317], [0.8678], [0.4992]], [[0.6448], [0.8639], [0.2828], [0.6685], [0.7853], [0.2564], [0.2996], [0.3999], [0.4713], [0.363], [0.0673], [0.9155], [0.6425], [0.2353], [0.5842], [0.8557]], [[0.3714], [0.0966], [0.8893], [0.2154], [0.2662], [0.943], [0.9151], [0.2453], [0.2971], [0.3434], [0.745], [0.0038], [0.4341], [0.3025], [0.0364], [0.8987]], [[0.5851], [0.9135], [0.8011], [0.8663], [0.3254], [0.5363], [0.5627], [0.804], [0.8248], [0.4076], [0.1549], [0.492], [0.19], [0.9141], [0.066], [0.5177]], [[0.1701], [0.2406], [0.2907], [0.6551], [0.7983], [0.744], [0.1032], [0.736], [0.0808], [0.1973], [0.0356], [0.3033], [0.2855], [0.998], [0.6116], [0.2344]]],[[[0.2387, 0.4965, 0.2029], [0.8891, 0.0073, 0.0467], [0.8977, 0.2418, 0.4397], [0.884, 0.3354, 0.45], [0.6069, 0.7802, 0.3729], [0.3882, 0.1073, 0.738], [0.5303, 0.099, 0.7565], [0.2355, 0.4851, 0.4078], [0.3886, 0.758, 0.3071], [0.3644, 0.8311, 0.0332], [0.62, 0.1489, 0.7113], [0.7399, 0.7992, 0.8868], [0.2601, 0.9752, 0.6519], [0.2845, 0.6885, 0.4311], [0.761, 0.1181, 0.0293], [0.0608, 0.8241, 0.3887]]]],[0, 0, 0], 4, true, Sep87420), 
LZer28144 = zero_padding1D_layer(Sep87420, 1, 0, Zer28144), 
LCon16280 = concatenate_layer([Zer28144,[[[0.3174, 0.454, 0.1729], [0.1575, 0.4419, 0.2352], [0.9204, 0.2247, 0.474]]]], 2, Con16280), 
LMin39728 = minimum_layer([Res35337,Con16280], Min39728), 
exec_layers([LDot94313,LRes76058,LRes24872,LCon3007,LMin48088,LZer76934,LAve33994,LRes68875,LRes35337,LUp_94167,LRes58475,LSep87420,LZer28144,LCon16280,LMin39728],["Dot94313","Res76058","Res24872","Con3007","Min48088","Zer76934","Ave33994","Res68875","Res35337","Up_94167","Res58475","Sep87420","Zer28144","Con16280","Min39728"],Min39728,"Min39728")

Actual (Unparsed): [[[0.0000000, 0.0000000, 0.0000000, 0.0921000, 0.3648138, 0.1336000], [0.5778811, 0.3596000, 0.3061431, 0.0111500, 0.4419000, 0.2352000], [0.4865707, 0.2386000, 0.2229620, 0.3366500, 0.2247000, 0.3946500]]]

Expected (Unparsed): [[[0,0,0,0.0921,0.36481384999999994,0.1336],[0.577881095,0.3596,0.306143135,0.01115,0.4419,0.2352],[0.486570725,0.2386,0.222961975,0.33665,0.2247,0.39465]]]

Actual:   [[[0, 0, 0, 0.0921, 0.3649, 0.1336], [0.5779, 0.3596, 0.3062, 0.0112, 0.4419, 0.2352], [0.4866, 0.2386, 0.223, 0.3367, 0.2247, 0.3947]]]

Expected: [[[0, 0, 0, 0.0921, 0.3649, 0.1336], [0.5779, 0.3596, 0.3062, 0.0112, 0.4419, 0.2352], [0.4866, 0.2386, 0.223, 0.3367, 0.2247, 0.3947]]]