import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Ave9589 = tf.keras.layers.Input(shape=([1, 2, 2, 2]))
in1Ave9589 = tf.keras.layers.Input(shape=([1, 2, 2, 2]))
in0Add35889 = tf.keras.layers.Input(shape=([2, 1, 2]))
in1Add35889 = tf.keras.layers.Input(shape=([2, 1, 2]))
in0Con46275 = tf.keras.layers.Input(shape=([3, 1]))
in0Sof50653 = tf.keras.layers.Input(shape=([2, 2]))
in0Con85878 = tf.keras.layers.Input(shape=([3, 6]))

Ave9589 = keras.layers.Average(name = 'Ave9589', )([in0Ave9589,in1Ave9589])
Res55157 = keras.layers.Reshape((1, 2, 4), name = 'Res55157', )(Ave9589)
Res89851 = keras.layers.Reshape((1, 8), name = 'Res89851', )(Res55157)
Zer98323 = keras.layers.ZeroPadding1D(padding=((2, 0)), name = 'Zer98323', )(Res89851)
Add35889 = keras.layers.Add(name = 'Add35889', )([in0Add35889,in1Add35889])
Res2844 = keras.layers.Reshape((2, 2), name = 'Res2844', )(Add35889)
Sim76476 = keras.layers.SimpleRNN(3,name = 'Sim76476', )(Res2844)
Res67138 = keras.layers.Reshape((3, 1), name = 'Res67138', )(Sim76476)
Con46275 = keras.layers.Concatenate(axis=2, name = 'Con46275', )([Res67138,in0Con46275])
Sof50653 = keras.layers.Softmax(axis=1, name = 'Sof50653', input_shape=(2, 2))(in0Sof50653)
Zer49001 = keras.layers.ZeroPadding1D(padding=((1, 0)), name = 'Zer49001', )(Sof50653)
Min72499 = keras.layers.Minimum(name = 'Min72499', )([Con46275,Zer49001])
Con85878 = keras.layers.Concatenate(axis=2, name = 'Con85878', )([Min72499,in0Con85878])
Max29182 = keras.layers.Maximum(name = 'Max29182', )([Zer98323,Con85878])
Fla35518 = keras.layers.Flatten(name = 'Fla35518', )(Max29182)
model = tf.keras.models.Model(inputs=[in0Ave9589,in1Ave9589,in0Add35889,in1Add35889,in0Con46275,in0Sof50653,in0Con85878], outputs=Fla35518)
w = model.get_layer('Sim76476').get_weights() 
w[0] = np.array([[8, 3, 7], [6, 10, 1]])
w[1] = np.array([[3, 10, 6], [10, 8, 7], [3, 10, 1]])
w[2] = np.array([8, 10, 10])
model.get_layer('Sim76476').set_weights(w) 
in0Ave9589 = tf.constant([[[[[0.6985, 0.9891], [0.1854, 0.643]], [[0.6851, 0.3579], [0.1635, 0.8332]]]]])
in1Ave9589 = tf.constant([[[[[0.3684, 0.4367], [0.0843, 0.7639]], [[0.3195, 0.458], [0.2818, 0.327]]]]])
in0Add35889 = tf.constant([[[[0.8765, 0.9033]], [[0.9243, 0.9743]]]])
in1Add35889 = tf.constant([[[[0.1361, 0.5504]], [[0.4156, 0.6335]]]])
in0Con46275 = tf.constant([[[0.6316], [0.002], [0.1113]]])
in0Sof50653 = tf.constant([[[0.3718, 0.8234], [0.0926, 0.6863]]])
in0Con85878 = tf.constant([[[0.2831, 0.3046, 0.4015, 0.4811, 0.0771, 0.7068], [0.7829, 0.3962, 0.8721, 0.3503, 0.5957, 0.7385], [0.4656, 0.56, 0.5939, 0.9867, 0.1849, 0.9567]]])
print (np.array2string(model.predict([in0Ave9589,in1Ave9589,in0Add35889,in1Add35889,in0Con46275,in0Sof50653,in0Con85878],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Fla35518.png')

LAve9589 = average_layer([[[[[[0.6985, 0.9891], [0.1854, 0.643]], [[0.6851, 0.3579], [0.1635, 0.8332]]]]], [[[[[0.3684, 0.4367], [0.0843, 0.7639]], [[0.3195, 0.458], [0.2818, 0.327]]]]]], Ave9589), 
LRes55157 = reshape_layer(Ave9589, [1, 2, 4], Res55157), 
LRes89851 = reshape_layer(Res55157, [1, 8], Res89851), 
LZer98323 = zero_padding1D_layer(Res89851, 2, 0, Zer98323), 
LAdd35889 = add_layer([[[[[0.8765, 0.9033]], [[0.9243, 0.9743]]]], [[[[0.1361, 0.5504]], [[0.4156, 0.6335]]]]], Add35889), 
LRes2844 = reshape_layer(Add35889, [2, 2], Res2844), 
LSim76476 = simple_rnn_layer(Res2844,[[8, 3, 7], [6, 10, 1]],[[3, 10, 6], [10, 8, 7], [3, 10, 1]],[8, 10, 10], Sim76476), 
LRes67138 = reshape_layer(Sim76476, [3, 1], Res67138), 
LCon46275 = concatenate_layer([Res67138,[[[0.6316], [0.002], [0.1113]]]], 2, Con46275), 
LSof50653 = softmax_layer([[[0.3718, 0.8234], [0.0926, 0.6863]]], 1, Sof50653), 
LZer49001 = zero_padding1D_layer(Sof50653, 1, 0, Zer49001), 
LMin72499 = minimum_layer([Con46275,Zer49001], Min72499), 
LCon85878 = concatenate_layer([Min72499,[[[0.2831, 0.3046, 0.4015, 0.4811, 0.0771, 0.7068], [0.7829, 0.3962, 0.8721, 0.3503, 0.5957, 0.7385], [0.4656, 0.56, 0.5939, 0.9867, 0.1849, 0.9567]]]], 2, Con85878), 
LMax29182 = maximum_layer([Zer98323,Con85878], Max29182), 
LFla35518 = flatten_layer(Max29182, Fla35518), 
exec_layers([LAve9589,LRes55157,LRes89851,LZer98323,LAdd35889,LRes2844,LSim76476,LRes67138,LCon46275,LSof50653,LZer49001,LMin72499,LCon85878,LMax29182,LFla35518],["Ave9589","Res55157","Res89851","Zer98323","Add35889","Res2844","Sim76476","Res67138","Con46275","Sof50653","Zer49001","Min72499","Con85878","Max29182","Fla35518"],Fla35518,"Fla35518")

Actual (Unparsed): [[0.0000000, 0.0000000, 0.2831000, 0.3046000, 0.4015000, 0.4811000, 0.0771000, 0.7068000, 0.5693501, 0.0020000, 0.7829000, 0.3962000, 0.8721000, 0.3503000, 0.5957000, 0.7385000, 0.5334500, 0.7129000, 0.4656000, 0.7034500, 0.5939000, 0.9867000, 0.2226500, 0.9567000]]

Expected (Unparsed): [[0,0,0.2831,0.3046,0.4015,0.4811,0.0771,0.7068,0.5693500823787774,0.002,0.7829,0.3962,0.8721,0.3503,0.5957,0.7385,0.53345,0.7129,0.4656,0.70345,0.5939,0.9867,0.22265000000000001,0.9567]]

Actual:   [[0, 0, 0.2831, 0.3046, 0.4015, 0.4811, 0.0771, 0.7068, 0.5694, 0.002, 0.7829, 0.3962, 0.8721, 0.3503, 0.5957, 0.7385, 0.5335, 0.7129, 0.4656, 0.7035, 0.5939, 0.9867, 0.2227, 0.9567]]

Expected: [[0, 0, 0.2831, 0.3046, 0.4015, 0.4811, 0.0771, 0.7068, 0.5694, 0.002, 0.7829, 0.3962, 0.8721, 0.3503, 0.5957, 0.7385, 0.5335, 0.7129, 0.4656, 0.7035, 0.5939, 0.9867, 0.2227, 0.9567]]