import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Con8232 = tf.keras.layers.Input(shape=([1, 1, 2, 2]))
in0Con11974 = tf.keras.layers.Input(shape=([1, 12, 3]))
in0LST81321 = tf.keras.layers.Input(shape=([3, 3]))
in0Con17462 = tf.keras.layers.Input(shape=([1, 4, 3]))
in0Cro39517 = tf.keras.layers.Input(shape=([3, 3, 4]))

Con8232 = keras.layers.Conv3DTranspose(3, (1, 1, 1),strides=(1, 1, 2), padding='valid', name = 'Con8232', )(in0Con8232)
Res66762 = keras.layers.Reshape((1, 1, 12), name = 'Res66762', )(Con8232)
Res91255 = keras.layers.Reshape((1, 12), name = 'Res91255', )(Res66762)
Ave31158 = keras.layers.AveragePooling1D(pool_size=(1), name = 'Ave31158', )(Res91255)
Res67738 = keras.layers.Reshape((1, 12, 1), name = 'Res67738', )(Ave31158)
Con11974 = keras.layers.Concatenate(axis=3, name = 'Con11974', )([Res67738,in0Con11974])
LST81321 = keras.layers.LSTM(1,recurrent_activation='sigmoid', name = 'LST81321', )(in0LST81321)
Res60078 = keras.layers.Reshape((1, 1), name = 'Res60078', )(LST81321)
Loc40809 = keras.layers.LocallyConnected1D(4, (1),strides=(1), name = 'Loc40809', )(Res60078)
Res92545 = keras.layers.Reshape((1, 4, 1), name = 'Res92545', )(Loc40809)
Con17462 = keras.layers.Concatenate(axis=3, name = 'Con17462', )([Res92545,in0Con17462])
Cro39517 = keras.layers.Cropping2D(cropping=((2, 0), (0, 0)), name = 'Cro39517', )(in0Cro39517)
Thr77923 = keras.layers.ThresholdedReLU(theta=0.9138190190702642, name = 'Thr77923', )(Cro39517)
Zer79505 = keras.layers.ZeroPadding2D(padding=((0, 0), (1, 0)), name = 'Zer79505', )(Thr77923)
Min58107 = keras.layers.Minimum(name = 'Min58107', )([Con17462,Zer79505])
Zer45463 = keras.layers.ZeroPadding2D(padding=((0, 0), (8, 0)), name = 'Zer45463', )(Min58107)
Add91528 = keras.layers.Add(name = 'Add91528', )([Con11974,Zer45463])
model = tf.keras.models.Model(inputs=[in0Con8232,in0Con11974,in0LST81321,in0Con17462,in0Cro39517], outputs=Add91528)
w = model.get_layer('Con8232').get_weights() 
w[0] = np.array([[[[[0.2016, 0.0815], [0.9232, 0.687], [0.409, 0.0678]]]]])
w[1] = np.array([0, 0, 0])
model.get_layer('Con8232').set_weights(w) 
w = model.get_layer('LST81321').get_weights() 
w[0] = np.array([[4, 3, 6, 7], [2, 2, 6, 3], [1, 5, 5, 4]])
w[1] = np.array([[4, 8, 9, 2]])
w[2] = np.array([4, 1, 3, 7])
model.get_layer('LST81321').set_weights(w) 
w = model.get_layer('Loc40809').get_weights() 
w[0] = np.array([[[0.9865, 0.6552, 0.4855, 0.2023]]])
w[1] = np.array([[0, 0, 0, 0]])
model.get_layer('Loc40809').set_weights(w) 
in0Con8232 = tf.constant([[[[[0.6214, 0.3279], [0.8901, 0.6426]]]]])
in0Con11974 = tf.constant([[[[0.5734, 0.8038, 0.8989], [0.2544, 0.6879, 0.0305], [0.6036, 0.5213, 0.2488], [0.867, 0.5287, 0.9174], [0.1412, 0.8482, 0.8843], [0.1792, 0.0094, 0.262], [0.0251, 0.7945, 0.2046], [0.062, 0.7883, 0.198], [0.2088, 0.1783, 0.9566], [0.7256, 0.3259, 0.0854], [0.7391, 0.3587, 0.6773], [0.9328, 0.115, 0.5598]]]])
in0LST81321 = tf.constant([[[1, 3, 2], [4, 3, 5], [9, 10, 1]]])
in0Con17462 = tf.constant([[[[0.0747, 0.4004, 0.2409], [0.425, 0.0648, 0.7915], [0.4293, 0.6047, 0.4657], [0.9381, 0.6018, 0.4399]]]])
in0Cro39517 = tf.constant([[[[1.0226, 1.0449, 1.061, 1.1227], [1.2583, 1.7566, 1.1764, 1.54], [1.264, 1.4229, 1.7116, 1.4763]], [[1.9403, 1.4286, 1.9089, 1.3282], [1.3499, 1.4747, 1.5189, 1.3203], [1.3372, 1.808, 1.8437, 1.8608]], [[1.5832, 1.81, 1.0221, 1.1323], [1.8852, 1.2026, 1.6855, 1.9563], [1.9161, 1.5398, 1.7793, 1.708]]]])
print (np.array2string(model.predict([in0Con8232,in0Con11974,in0LST81321,in0Con17462,in0Cro39517],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Add91528.png')

LCon8232 = conv3D_transpose_layer([[[[[0.6214, 0.3279], [0.8901, 0.6426]]]]], 1, 1, 1,[[[[[0.2016, 0.0815], [0.9232, 0.687], [0.409, 0.0678]]]]],[0, 0, 0], 1, 1, 2, false, Con8232), 
LRes66762 = reshape_layer(Con8232, [1, 1, 12], Res66762), 
LRes91255 = reshape_layer(Res66762, [1, 12], Res91255), 
LAve31158 = average_pooling1D_layer(Res91255, 1, Ave31158), 
LRes67738 = reshape_layer(Ave31158, [1, 12, 1], Res67738), 
LCon11974 = concatenate_layer([Res67738,[[[[0.5734, 0.8038, 0.8989], [0.2544, 0.6879, 0.0305], [0.6036, 0.5213, 0.2488], [0.867, 0.5287, 0.9174], [0.1412, 0.8482, 0.8843], [0.1792, 0.0094, 0.262], [0.0251, 0.7945, 0.2046], [0.062, 0.7883, 0.198], [0.2088, 0.1783, 0.9566], [0.7256, 0.3259, 0.0854], [0.7391, 0.3587, 0.6773], [0.9328, 0.115, 0.5598]]]]], 3, Con11974), 
LLST81321 = lstm_layer([[[1, 3, 2], [4, 3, 5], [9, 10, 1]]],[[4, 3, 6, 7], [2, 2, 6, 3], [1, 5, 5, 4]],[[4, 8, 9, 2]],[4, 1, 3, 7], LST81321), 
LRes60078 = reshape_layer(LST81321, [1, 1], Res60078), 
LLoc40809 = locally_connected1D_layer(Res60078, 1,[[[0.9865, 0.6552, 0.4855, 0.2023]]],[[0, 0, 0, 0]], 1, Loc40809), 
LRes92545 = reshape_layer(Loc40809, [1, 4, 1], Res92545), 
LCon17462 = concatenate_layer([Res92545,[[[[0.0747, 0.4004, 0.2409], [0.425, 0.0648, 0.7915], [0.4293, 0.6047, 0.4657], [0.9381, 0.6018, 0.4399]]]]], 3, Con17462), 
LCro39517 = cropping2D_layer([[[[1.0226, 1.0449, 1.061, 1.1227], [1.2583, 1.7566, 1.1764, 1.54], [1.264, 1.4229, 1.7116, 1.4763]], [[1.9403, 1.4286, 1.9089, 1.3282], [1.3499, 1.4747, 1.5189, 1.3203], [1.3372, 1.808, 1.8437, 1.8608]], [[1.5832, 1.81, 1.0221, 1.1323], [1.8852, 1.2026, 1.6855, 1.9563], [1.9161, 1.5398, 1.7793, 1.708]]]], 2, 0, 0, 0, Cro39517), 
LThr77923 = thresholded_relu_layer(Cro39517, 0.9138190190702642, Thr77923), 
LZer79505 = zero_padding2D_layer(Thr77923, 0, 0, 1, 0, Zer79505), 
LMin58107 = minimum_layer([Con17462,Zer79505], Min58107), 
LZer45463 = zero_padding2D_layer(Min58107, 0, 0, 8, 0, Zer45463), 
LAdd91528 = add_layer([Con11974,Zer45463], Add91528), 
exec_layers([LCon8232,LRes66762,LRes91255,LAve31158,LRes67738,LCon11974,LLST81321,LRes60078,LLoc40809,LRes92545,LCon17462,LCro39517,LThr77923,LZer79505,LMin58107,LZer45463,LAdd91528],["Con8232","Res66762","Res91255","Ave31158","Res67738","Con11974","LST81321","Res60078","Loc40809","Res92545","Con17462","Cro39517","Thr77923","Zer79505","Min58107","Zer45463","Add91528"],Add91528,"Add91528")

Actual (Unparsed): [[[[0.1519981, 0.5734000, 0.8038000, 0.8989000], [0.7989438, 0.2544000, 0.6879000, 0.0305000], [0.2763842, 0.6036000, 0.5213000, 0.2488000], [0.0000000, 0.8670000, 0.5287000, 0.9174000], [0.0000000, 0.1412000, 0.8482000, 0.8843000], [0.0000000, 0.1792000, 0.0094000, 0.2620000], [0.2318161, 0.0251000, 0.7945000, 0.2046000], [1.2632065, 0.0620000, 0.7883000, 0.1980000], [0.4076192, 0.2088000, 0.1783000, 0.9566000], [0.6519599, 1.1506000, 0.3907000, 0.8769000], [0.4830991, 1.1684000, 0.9634000, 1.1430000], [0.2012996, 1.8709000, 0.7168000, 0.9997000]]]]

Expected (Unparsed): [[[[0.15199808999999997,0.5734,0.8038,0.8989],[0.79894378,0.2544,0.6879,0.0305],[0.27638421999999996,0.6036,0.5213,0.2488],[0,0.867,0.5287,0.9174],[0,0.1412,0.8482,0.8843],[0,0.1792,0.0094,0.262],[0.23181606,0.0251,0.7945,0.2046],[1.26320652,0.062,0.7883,0.198],[0.40761917999999997,0.2088,0.1783,0.9566],[0.6519598738880928,1.1506,0.39070000000000005,0.8769],[0.4830990823758685,1.1684,0.9634,1.143],[0.2012995764462167,1.8709,0.7168,0.9997]]]]

Actual:   [[[[0.152, 0.5734, 0.8038, 0.8989], [0.799, 0.2544, 0.6879, 0.0305], [0.2764, 0.6036, 0.5213, 0.2488], [0, 0.867, 0.5287, 0.9174], [0, 0.1412, 0.8482, 0.8843], [0, 0.1792, 0.0094, 0.262], [0.2319, 0.0251, 0.7945, 0.2046], [1.2633, 0.062, 0.7883, 0.198], [0.4077, 0.2088, 0.1783, 0.9566], [0.652, 1.1506, 0.3907, 0.8769], [0.4831, 1.1684, 0.9634, 1.143], [0.2013, 1.8709, 0.7168, 0.9997]]]]

Expected: [[[[0.152, 0.5734, 0.8038, 0.8989], [0.799, 0.2544, 0.6879, 0.0305], [0.2764, 0.6036, 0.5213, 0.2488], [0, 0.867, 0.5287, 0.9174], [0, 0.1412, 0.8482, 0.8843], [0, 0.1792, 0.0094, 0.262], [0.2319, 0.0251, 0.7945, 0.2046], [1.2633, 0.062, 0.7883, 0.198], [0.4077, 0.2088, 0.1783, 0.9566], [0.652, 1.1506, 0.3908, 0.8769], [0.4831, 1.1684, 0.9634, 1.143], [0.2013, 1.8709, 0.7168, 0.9997]]]]