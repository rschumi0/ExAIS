import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Dot63916 = tf.keras.layers.Input(shape=([2]))
in1Dot63916 = tf.keras.layers.Input(shape=([2]))
in0Con58676 = tf.keras.layers.Input(shape=([3]))
in0Glo62365 = tf.keras.layers.Input(shape=([1, 2, 2, 2]))
in0Con171 = tf.keras.layers.Input(shape=([2, 1]))
in0Mas72961 = tf.keras.layers.Input(shape=([2, 2]))
in0Glo80940 = tf.keras.layers.Input(shape=([2, 2, 2, 2]))
in0Con98120 = tf.keras.layers.Input(shape=([2]))

Dot63916 = keras.layers.Dot(axes=(1, 1), name = 'Dot63916', )([in0Dot63916,in1Dot63916])
Con58676 = keras.layers.Concatenate(axis=1, name = 'Con58676', )([Dot63916,in0Con58676])
Glo62365 = keras.layers.GlobalMaxPool3D(name = 'Glo62365', )(in0Glo62365)
Res22764 = keras.layers.Reshape((2, 1), name = 'Res22764', )(Glo62365)
Con171 = keras.layers.Concatenate(axis=2, name = 'Con171', )([Res22764,in0Con171])
Mas72961 = keras.layers.Masking(mask_value=2, name = 'Mas72961', )(in0Mas72961)
Lea74564 = keras.layers.LeakyReLU(alpha=5.103487228450578, name = 'Lea74564', )(Mas72961)
Dot65330 = keras.layers.Dot(axes=(2, 2), name = 'Dot65330', )([Con171,Lea74564])
Fla44016 = keras.layers.Flatten(name = 'Fla44016', )(Dot65330)
Glo80940 = keras.layers.GlobalAveragePooling3D(name = 'Glo80940', )(in0Glo80940)
Con98120 = keras.layers.Concatenate(axis=1, name = 'Con98120', )([Glo80940,in0Con98120])
Max91799 = keras.layers.Maximum(name = 'Max91799', )([Fla44016,Con98120])
Add59494 = keras.layers.Add(name = 'Add59494', )([Con58676,Max91799])
model = tf.keras.models.Model(inputs=[in0Dot63916,in1Dot63916,in0Con58676,in0Glo62365,in0Con171,in0Mas72961,in0Glo80940,in0Con98120], outputs=Add59494)
in0Dot63916 = tf.constant([[0.062, 0.8591]])
in1Dot63916 = tf.constant([[0.1548, 0.0821]])
in0Con58676 = tf.constant([[0.7917, 0.0526, 0.0572]])
in0Glo62365 = tf.constant([[[[[1.9532, 1.1608], [1.3394, 1.9385]], [[1.1833, 1.7944], [1.6801, 1.9078]]]]])
in0Con171 = tf.constant([[[0.7504], [0.1729]]])
in0Mas72961 = tf.constant([[[1.9773, 1.2024], [1.172, 1.2281]]])
in0Glo80940 = tf.constant([[[[[1.2594, 1.8227], [1.6292, 1.3353]], [[1.3071, 1.675], [1.5028, 1.909]]], [[[1.6232, 1.4418], [1.8284, 1.5312]], [[1.3245, 1.5721], [1.8873, 1.936]]]]])
in0Con98120 = tf.constant([[0.5203, 0.8647]])
print (np.array2string(model.predict([in0Dot63916,in1Dot63916,in0Con58676,in0Glo62365,in0Con171,in0Mas72961,in0Glo80940,in0Con98120],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Add59494.png')

LDot63916 = dot_layer([[0.062, 0.8591]], [[0.1548, 0.0821]], 1, 1, Dot63916), 
LCon58676 = concatenate_layer([Dot63916,[[0.7917, 0.0526, 0.0572]]], 1, Con58676), 
LGlo62365 = global_max_pool3D_layer([[[[[1.9532, 1.1608], [1.3394, 1.9385]], [[1.1833, 1.7944], [1.6801, 1.9078]]]]], Glo62365), 
LRes22764 = reshape_layer(Glo62365, [2, 1], Res22764), 
LCon171 = concatenate_layer([Res22764,[[[0.7504], [0.1729]]]], 2, Con171), 
LMas72961 = masking_layer([[[1.9773, 1.2024], [1.172, 1.2281]]], 2, Mas72961), 
LLea74564 = leaky_relu_layer(Mas72961, 5.103487228450578, Lea74564), 
LDot65330 = dot_layer(Con171,Lea74564, 2, 2, Dot65330), 
LFla44016 = flatten_layer(Dot65330, Fla44016), 
LGlo80940 = global_average_pooling3D_layer([[[[[1.2594, 1.8227], [1.6292, 1.3353]], [[1.3071, 1.675], [1.5028, 1.909]]], [[[1.6232, 1.4418], [1.8284, 1.5312]], [[1.3245, 1.5721], [1.8873, 1.936]]]]], Glo80940), 
LCon98120 = concatenate_layer([Glo80940,[[0.5203, 0.8647]]], 1, Con98120), 
LMax91799 = maximum_layer([Fla44016,Con98120], Max91799), 
LAdd59494 = add_layer([Con58676,Max91799], Add59494), 
exec_layers([LDot63916,LCon58676,LGlo62365,LRes22764,LCon171,LMas72961,LLea74564,LDot65330,LFla44016,LGlo80940,LCon98120,LMax91799,LAdd59494],["Dot63916","Con58676","Glo62365","Res22764","Con171","Mas72961","Lea74564","Dot65330","Fla44016","Glo80940","Con98120","Max91799","Add59494"],Add59494,"Add59494")

Actual (Unparsed): [[4.8444731, 4.0024167, 4.0934912, 2.5414606]]

Expected (Unparsed): [[4.84447303,4.00241664,4.09349101,2.5414604899999995]]

Actual:   [[4.8445, 4.0025, 4.0935, 2.5415]]

Expected: [[4.8445, 4.0025, 4.0935, 2.5415]]