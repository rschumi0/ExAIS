import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Max38945 = tf.keras.layers.Input(shape=([2, 1]))
in1Max38945 = tf.keras.layers.Input(shape=([2, 1]))

Max38945 = keras.layers.Maximum(name = 'Max38945', )([in0Max38945,in1Max38945])
Bat4011 = keras.layers.BatchNormalization(axis=1, epsilon=0.23034213560510644,  name = 'Bat4011', )(Max38945)
model = tf.keras.models.Model(inputs=[in0Max38945,in1Max38945], outputs=Bat4011)
w = model.get_layer('Bat4011').get_weights() 
w[0] = np.array([0.3225, 0.32])
w[1] = np.array([0.2061, 0.2395])
w[2] = np.array([0.163, 0.4507])
w[3] = np.array([0.5181, 0.2425])
model.get_layer('Bat4011').set_weights(w) 
in0Max38945 = tf.constant([[[0.8559], [0.0554]]])
in1Max38945 = tf.constant([[[0.4144], [0.5867]]])
print (np.array2string(model.predict([in0Max38945,in1Max38945],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Bat4011.png')

LMax38945 = maximum_layer([[[[0.8559], [0.0554]]], [[[0.4144], [0.5867]]]], Max38945), 
LBat4011 = batch_normalization_layer(Max38945, 1, 0.23034213560510644, [0.3225, 0.32], [0.2061, 0.2395], [0.163, 0.4507], [0.5181, 0.2425], Bat4011), 
exec_layers([LMax38945,LBat4011],["Max38945","Bat4011"],Bat4011,"Bat4011")

Actual (Unparsed): [[[0.4643981], [0.3027894]]]

Expected (Unparsed): [[[0.4643980726787612],[0.30278937422581176]]]

Actual:   [[[0.4644], [0.3028]]]

Expected: [[[0.4644], [0.3028]]]