import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Sim19850 = tf.keras.layers.Input(shape=([1, 1]))
in0Con25459 = tf.keras.layers.Input(shape=([1]))
in0Sub20315 = tf.keras.layers.Input(shape=([3]))
in1Sub20315 = tf.keras.layers.Input(shape=([3]))

Sim19850 = keras.layers.SimpleRNN(2,name = 'Sim19850', )(in0Sim19850)
Con25459 = keras.layers.Concatenate(axis=1, name = 'Con25459', )([Sim19850,in0Con25459])
Sub20315 = keras.layers.Subtract(name = 'Sub20315', )([in0Sub20315,in1Sub20315])
Ave42038 = keras.layers.Average(name = 'Ave42038', )([Con25459,Sub20315])
Thr13334 = keras.layers.ThresholdedReLU(theta=5.4025282017725385, name = 'Thr13334', )(Ave42038)
model = tf.keras.models.Model(inputs=[in0Sim19850,in0Con25459,in0Sub20315,in1Sub20315], outputs=Thr13334)
w = model.get_layer('Sim19850').get_weights() 
w[0] = np.array([[9, 6]])
w[1] = np.array([[2, 2], [2, 3]])
w[2] = np.array([4, 10])
model.get_layer('Sim19850').set_weights(w) 
in0Sim19850 = tf.constant([[[4]]])
in0Con25459 = tf.constant([[0.9112]])
in0Sub20315 = tf.constant([[0.1684, 0.183, 0.6016]])
in1Sub20315 = tf.constant([[0.4259, 0.7939, 0.7169]])
print (np.array2string(model.predict([in0Sim19850,in0Con25459,in0Sub20315,in1Sub20315],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Thr13334.png')

LSim19850 = simple_rnn_layer([[[4]]],[[9, 6]],[[2, 2], [2, 3]],[4, 10], Sim19850), 
LCon25459 = concatenate_layer([Sim19850,[[0.9112]]], 1, Con25459), 
LSub20315 = subtract_layer([[0.1684, 0.183, 0.6016]], [[0.4259, 0.7939, 0.7169]], Sub20315), 
LAve42038 = average_layer([Con25459,Sub20315], Ave42038), 
LThr13334 = thresholded_relu_layer(Ave42038, 5.4025282017725385, Thr13334), 
exec_layers([LSim19850,LCon25459,LSub20315,LAve42038,LThr13334],["Sim19850","Con25459","Sub20315","Ave42038","Thr13334"],Thr13334,"Thr13334")

Actual (Unparsed): [[0.0000000, 0.0000000, 0.0000000]]

Expected (Unparsed): [[0,0,0]]

Actual:   [[0, 0, 0]]

Expected: [[0, 0, 0]]