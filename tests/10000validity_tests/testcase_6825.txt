import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Sub84867 = tf.keras.layers.Input(shape=([3]))
in1Sub84867 = tf.keras.layers.Input(shape=([3]))

Sub84867 = keras.layers.Subtract(name = 'Sub84867', )([in0Sub84867,in1Sub84867])
Res26459 = keras.layers.Reshape((3, 1), name = 'Res26459', )(Sub84867)
Res42832 = keras.layers.Reshape((3, 1, 1), name = 'Res42832', )(Res26459)
Ave95919 = keras.layers.AveragePooling2D(pool_size=(3, 1), strides=(1, 3), padding='same', name = 'Ave95919', )(Res42832)
Lay41405 = keras.layers.LayerNormalization(axis=1, epsilon=2.1545047193513978, name = 'Lay41405', )(Ave95919)
model = tf.keras.models.Model(inputs=[in0Sub84867,in1Sub84867], outputs=Lay41405)
in0Sub84867 = tf.constant([[0.9036, 0.7319, 0.1038]])
in1Sub84867 = tf.constant([[0.6145, 0.7683, 0.8262]])
print (np.array2string(model.predict([in0Sub84867,in1Sub84867],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Lay41405.png')

LSub84867 = subtract_layer([[0.9036, 0.7319, 0.1038]], [[0.6145, 0.7683, 0.8262]], Sub84867), 
LRes26459 = reshape_layer(Sub84867, [3, 1], Res26459), 
LRes42832 = reshape_layer(Res26459, [3, 1, 1], Res42832), 
LAve95919 = average_pooling2D_layer(Res42832, 3, 1, 1, 3, true, Ave95919), 
LLay41405 = layer_normalization_layer(Ave95919, 1, 2.1545047193513978, Lay41405), 
exec_layers([LSub84867,LRes26459,LRes42832,LAve95919,LLay41405],["Sub84867","Res26459","Res42832","Ave95919","Lay41405"],Lay41405,"Lay41405")

Actual (Unparsed): [[[[0.1773471]], [[-0.0135109]], [[-0.1638362]]]]

Expected (Unparsed): [[[[0.17734706948902645]],[[-0.013510908400421419]],[[-0.1638361610886051]]]]

Actual:   [[[[0.1774]], [[-0.0135]], [[-0.1638]]]]

Expected: [[[[0.1774]], [[-0.0135]], [[-0.1638]]]]