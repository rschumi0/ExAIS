import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Glo87258 = tf.keras.layers.Input(shape=([2, 1, 1, 2]))
in0Con99549 = tf.keras.layers.Input(shape=([2, 11]))
in0Up_43329 = tf.keras.layers.Input(shape=([3, 3, 4]))

Glo87258 = keras.layers.GlobalAveragePooling3D(name = 'Glo87258', )(in0Glo87258)
Res82653 = keras.layers.Reshape((2, 1), name = 'Res82653', )(Glo87258)
Con99549 = keras.layers.Concatenate(axis=2, name = 'Con99549', )([Res82653,in0Con99549])
Up_43329 = keras.layers.UpSampling2D(size=(2, 1), name = 'Up_43329', )(in0Up_43329)
Res88119 = keras.layers.Reshape((6, 12), name = 'Res88119', )(Up_43329)
Cro65636 = keras.layers.Cropping1D(cropping=((4, 0)), name = 'Cro65636', )(Res88119)
Add19695 = keras.layers.Add(name = 'Add19695', )([Con99549,Cro65636])
Res32486 = keras.layers.Reshape((2, 12, 1), name = 'Res32486', )(Add19695)
Res79354 = keras.layers.Reshape((2, 12, 1, 1), name = 'Res79354', )(Res32486)
Con69533 = keras.layers.Conv3DTranspose(3, (1, 8, 1),strides=(1, 1, 1), padding='same', name = 'Con69533', )(Res79354)
model = tf.keras.models.Model(inputs=[in0Glo87258,in0Con99549,in0Up_43329], outputs=Con69533)
w = model.get_layer('Con69533').get_weights() 
w[0] = np.array([[[[[0.2015], [0.5712], [0.3145]]], [[[0.9758], [0.9574], [0.1558]]], [[[0.3241], [0.6993], [0.7352]]], [[[0.6763], [0.7327], [0.1939]]], [[[0.3509], [0.5425], [0.9351]]], [[[0.8328], [0.956], [0.2719]]], [[[0.3816], [0.0464], [0.3211]]], [[[0.9459], [0.466], [0.4191]]]]])
w[1] = np.array([0, 0, 0])
model.get_layer('Con69533').set_weights(w) 
in0Glo87258 = tf.constant([[[[[1.533, 1.4375]]], [[[1.4459, 1.4871]]]]])
in0Con99549 = tf.constant([[[0.0455, 0.1251, 0.0742, 0.2358, 0.4954, 0.2731, 0.0654, 0.0545, 0.3054, 0.8461, 0.5062], [0.1096, 0.3331, 0.849, 0.4034, 0.325, 0.5276, 0.2146, 0.7135, 0.9548, 0.5854, 0.1411]]])
in0Up_43329 = tf.constant([[[[1.4447, 1.0945, 1.5577, 1.9055], [1.455, 1.2206, 1.5392, 1.9643], [1.3831, 1.0005, 1.8112, 1.6785]], [[1.5403, 1.773, 1.9278, 1.4032], [1.9803, 1.9862, 1.5265, 1.0436], [1.981, 1.5483, 1.7339, 1.1218]], [[1.1849, 1.4937, 1.2782, 1.2601], [1.0121, 1.7677, 1.4478, 1.3521], [1.8016, 1.715, 1.0785, 1.7998]]]])
print (np.array2string(model.predict([in0Glo87258,in0Con99549,in0Up_43329],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Con69533.png')

LGlo87258 = global_average_pooling3D_layer([[[[[1.533, 1.4375]]], [[[1.4459, 1.4871]]]]], Glo87258), 
LRes82653 = reshape_layer(Glo87258, [2, 1], Res82653), 
LCon99549 = concatenate_layer([Res82653,[[[0.0455, 0.1251, 0.0742, 0.2358, 0.4954, 0.2731, 0.0654, 0.0545, 0.3054, 0.8461, 0.5062], [0.1096, 0.3331, 0.849, 0.4034, 0.325, 0.5276, 0.2146, 0.7135, 0.9548, 0.5854, 0.1411]]]], 2, Con99549), 
LUp_43329 = up_sampling2D_layer([[[[1.4447, 1.0945, 1.5577, 1.9055], [1.455, 1.2206, 1.5392, 1.9643], [1.3831, 1.0005, 1.8112, 1.6785]], [[1.5403, 1.773, 1.9278, 1.4032], [1.9803, 1.9862, 1.5265, 1.0436], [1.981, 1.5483, 1.7339, 1.1218]], [[1.1849, 1.4937, 1.2782, 1.2601], [1.0121, 1.7677, 1.4478, 1.3521], [1.8016, 1.715, 1.0785, 1.7998]]]], 2, 1, Up_43329), 
LRes88119 = reshape_layer(Up_43329, [6, 12], Res88119), 
LCro65636 = cropping1D_layer(Res88119, 4, 0, Cro65636), 
LAdd19695 = add_layer([Con99549,Cro65636], Add19695), 
LRes32486 = reshape_layer(Add19695, [2, 12, 1], Res32486), 
LRes79354 = reshape_layer(Res32486, [2, 12, 1, 1], Res79354), 
LCon69533 = conv3D_transpose_layer(Res79354, 1, 8, 1,[[[[[0.2015], [0.5712], [0.3145]]], [[[0.9758], [0.9574], [0.1558]]], [[[0.3241], [0.6993], [0.7352]]], [[[0.6763], [0.7327], [0.1939]]], [[[0.3509], [0.5425], [0.9351]]], [[[0.8328], [0.956], [0.2719]]], [[[0.3816], [0.0464], [0.3211]]], [[[0.9459], [0.466], [0.4191]]]]],[0, 0, 0], 1, 1, 1, true, Con69533), 
exec_layers([LGlo87258,LRes82653,LCon99549,LUp_43329,LRes88119,LCro65636,LAdd19695,LRes32486,LRes79354,LCon69533],["Glo87258","Res82653","Con99549","Up_43329","Res88119","Cro65636","Add19695","Res32486","Res79354","Con69533"],Con69533,"Con69533")

Actual (Unparsed): [[[[[3.9457193, 5.1415305, 2.2884478]], [[3.9876617, 5.5501938, 4.4312903]], [[5.8225179, 7.8403907, 4.3257067]], [[6.6567215, 7.3568234, 4.6594590]], [[8.2962065, 8.3372664, 5.8640373]], [[7.3860006, 8.0138744, 5.1339965]], [[7.5114727, 8.3198173, 5.7725203]], [[8.1464170, 9.1470337, 5.7439793]], [[8.2273296, 9.0333329, 5.9134789]], [[8.8695155, 8.5305029, 5.7880998]], [[6.4724174, 6.7609503, 5.6388893]], [[5.9665802, 5.4118822, 3.9862416]]], [[[4.3072211, 5.8081677, 2.6063908]], [[4.8787197, 6.5654120, 4.7446769]], [[6.3433916, 8.6065565, 4.9607500]], [[7.2360526, 8.1968113, 5.1896159]], [[9.0766118, 9.2792869, 6.6481060]], [[8.4756896, 9.4574127, 5.9796092]], [[9.0780478, 9.8131512, 6.4606586]], [[9.7862907, 10.5340122, 6.8467786]], [[8.9133332, 9.9066064, 6.5874980]], [[9.1593799, 8.9070092, 6.3325730]], [[7.2521330, 7.4224444, 6.2609232]], [[6.5616064, 5.7238749, 4.1223746]]]]]

Expected (Unparsed): [[[[[3.9457192150000004,5.141530385,2.288447795]],[[3.987661695,5.550193705000001,4.431290215]],[[5.8225178500000005,7.84039068,4.325706685]],[[6.656721500000001,7.35682339,4.659458975000001]],[[8.296206445,8.33726635,5.864037304999999]],[[7.38600058,8.01387443,5.13399653]],[[7.511472660000001,8.31981727,5.77252027]],[[8.14641698,9.14703367,5.7439792899999995]],[[8.227329589999998,9.03333282,5.91347881]],[[8.869515400000001,8.53050287,5.788099839999999]],[[6.472417329999999,6.76095022,5.63888921]],[[5.966580069999999,5.4118821399999995,3.9862415799999993]]],[[[4.30722108,5.8081676700000004,2.6063907299999998]],[[4.878719629999999,6.565411940000001,4.744676879999999]],[[6.343391579999999,8.606556529999999,4.96074995]],[[7.236052569999999,8.19681131,5.18961587]],[[9.07661168,9.27928683,6.64810599]],[[8.47568964,9.45741268,5.97960922]],[[9.078047830000001,9.813151180000002,6.460658640000001]],[[9.78629072,10.534012220000001,6.8467785700000015]],[[8.9133332,9.906606280000002,6.58749797]],[[9.15937987,8.9070091,6.33257297]],[[7.252132940000001,7.42244428,6.26092307]],[[6.56160631,5.72387482,4.1223746000000006]]]]]

Actual:   [[[[[3.9458, 5.1416, 2.2885]], [[3.9877, 5.5502, 4.4313]], [[5.8226, 7.8404, 4.3258]], [[6.6568, 7.3569, 4.6595]], [[8.2963, 8.3373, 5.8641]], [[7.3861, 8.0139, 5.134]], [[7.5115, 8.3199, 5.7726]], [[8.1465, 9.1471, 5.744]], [[8.2274, 9.0334, 5.9135]], [[8.8696, 8.5306, 5.7881]], [[6.4725, 6.761, 5.6389]], [[5.9666, 5.4119, 3.9863]]], [[[4.3073, 5.8082, 2.6064]], [[4.8788, 6.5655, 4.7447]], [[6.3434, 8.6066, 4.9608]], [[7.2361, 8.1969, 5.1897]], [[9.0767, 9.2793, 6.6482]], [[8.4757, 9.4575, 5.9797]], [[9.0781, 9.8132, 6.4607]], [[9.7863, 10.5341, 6.8468]], [[8.9134, 9.9067, 6.5875]], [[9.1594, 8.9071, 6.3326]], [[7.2522, 7.4225, 6.261]], [[6.5617, 5.7239, 4.1224]]]]]

Expected: [[[[[3.9458, 5.1416, 2.2885]], [[3.9877, 5.5502, 4.4313]], [[5.8226, 7.8404, 4.3258]], [[6.6568, 7.3569, 4.6595]], [[8.2963, 8.3373, 5.8641]], [[7.3861, 8.0139, 5.134]], [[7.5115, 8.3199, 5.7726]], [[8.1465, 9.1471, 5.744]], [[8.2274, 9.0334, 5.9135]], [[8.8696, 8.5306, 5.7881]], [[6.4725, 6.761, 5.6389]], [[5.9666, 5.4119, 3.9863]]], [[[4.3073, 5.8082, 2.6064]], [[4.8788, 6.5655, 4.7447]], [[6.3434, 8.6066, 4.9608]], [[7.2361, 8.1969, 5.1897]], [[9.0767, 9.2793, 6.6482]], [[8.4757, 9.4575, 5.9797]], [[9.0781, 9.8132, 6.4607]], [[9.7863, 10.5341, 6.8468]], [[8.9134, 9.9067, 6.5875]], [[9.1594, 8.9071, 6.3326]], [[7.2522, 7.4225, 6.261]], [[6.5617, 5.7239, 4.1224]]]]]