import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Mul13324 = tf.keras.layers.Input(shape=([2, 1, 2, 2]))
in1Mul13324 = tf.keras.layers.Input(shape=([2, 1, 2, 2]))
in0Con1772 = tf.keras.layers.Input(shape=([4, 13, 5]))
in0Bat8919 = tf.keras.layers.Input(shape=([4, 3, 3]))
in0Con24306 = tf.keras.layers.Input(shape=([4, 3, 3, 1]))
in0Mul32483 = tf.keras.layers.Input(shape=([1, 2, 2, 2]))
in1Mul32483 = tf.keras.layers.Input(shape=([1, 2, 2, 2]))
in0Up_7061 = tf.keras.layers.Input(shape=([2, 4, 3]))
in0Con58742 = tf.keras.layers.Input(shape=([4, 13, 3]))

Mul13324 = keras.layers.Multiply(name = 'Mul13324', )([in0Mul13324,in1Mul13324])
Res78566 = keras.layers.Reshape((2, 1, 4), name = 'Res78566', )(Mul13324)
Res34809 = keras.layers.Reshape((2, 4), name = 'Res34809', )(Res78566)
LST81346 = keras.layers.LSTM(2,recurrent_activation='sigmoid', name = 'LST81346', )(Res34809)
Res27956 = keras.layers.Reshape((2, 1), name = 'Res27956', )(LST81346)
Res20927 = keras.layers.Reshape((2, 1, 1), name = 'Res20927', )(Res27956)
Zer87288 = keras.layers.ZeroPadding2D(padding=((2, 0), (12, 0)), name = 'Zer87288', )(Res20927)
Con1772 = keras.layers.Concatenate(axis=3, name = 'Con1772', )([Zer87288,in0Con1772])
Bat8919 = keras.layers.BatchNormalization(axis=3, epsilon=0.6497152378733976,  name = 'Bat8919', )(in0Bat8919)
Res21306 = keras.layers.Reshape((4, 3, 3, 1), name = 'Res21306', )(Bat8919)
Con24306 = keras.layers.Concatenate(axis=4, name = 'Con24306', )([Res21306,in0Con24306])
Mul32483 = keras.layers.Multiply(name = 'Mul32483', )([in0Mul32483,in1Mul32483])
Zer93155 = keras.layers.ZeroPadding3D(padding=((3, 0), (1, 0), (1, 0)), name = 'Zer93155', )(Mul32483)
Mul64575 = keras.layers.Multiply(name = 'Mul64575', )([Con24306,Zer93155])
Res20604 = keras.layers.Reshape((4, 3, 6), name = 'Res20604', )(Mul64575)
Zer39092 = keras.layers.ZeroPadding2D(padding=((0, 0), (10, 0)), name = 'Zer39092', )(Res20604)
Up_7061 = keras.layers.UpSampling2D(size=(1, 2), name = 'Up_7061', )(in0Up_7061)
Zer20660 = keras.layers.ZeroPadding2D(padding=((2, 0), (5, 0)), name = 'Zer20660', )(Up_7061)
Con58742 = keras.layers.Concatenate(axis=3, name = 'Con58742', )([Zer20660,in0Con58742])
Max75467 = keras.layers.Maximum(name = 'Max75467', )([Zer39092,Con58742])
Max52804 = keras.layers.Maximum(name = 'Max52804', )([Con1772,Max75467])
model = tf.keras.models.Model(inputs=[in0Mul13324,in1Mul13324,in0Con1772,in0Bat8919,in0Con24306,in0Mul32483,in1Mul32483,in0Up_7061,in0Con58742], outputs=Max52804)
w = model.get_layer('LST81346').get_weights() 
w[0] = np.array([[7, 7, 10, 8, 5, 1, 8, 8], [6, 4, 3, 1, 2, 3, 9, 2], [3, 6, 8, 2, 1, 5, 3, 2], [1, 3, 1, 5, 1, 1, 6, 4]])
w[1] = np.array([[7, 9, 6, 8, 6, 6, 7, 4], [3, 1, 5, 4, 2, 8, 2, 4]])
w[2] = np.array([7, 10, 6, 5, 3, 2, 9, 5])
model.get_layer('LST81346').set_weights(w) 
w = model.get_layer('Bat8919').get_weights() 
w[0] = np.array([0.7724, 0.2843, 0.898])
w[1] = np.array([0.5081, 0.9631, 0.3009])
w[2] = np.array([0.3668, 0.8463, 0.7742])
w[3] = np.array([0.8794, 0.4091, 0.284])
model.get_layer('Bat8919').set_weights(w) 
in0Mul13324 = tf.constant([[[[[0.2801, 0.5736], [0.2737, 0.3731]]], [[[0.4114, 0.7294], [0.684, 0.4814]]]]])
in1Mul13324 = tf.constant([[[[[0.9387, 0.7907], [0.5667, 0.9945]]], [[[0.1746, 0.7926], [0.4393, 0.4497]]]]])
in0Con1772 = tf.constant([[[[0.9766, 0.2727, 0.597, 0.9144, 0.7242], [0.345, 0.729, 0.1259, 0.1258, 0.7042], [0.7097, 0.5634, 0.8092, 0.1796, 0.0017], [0.2279, 0.6599, 0.1641, 0.1743, 0.9787], [0.067, 0.5413, 0.7526, 0.4163, 0.757], [0.4527, 0.4533, 0.3828, 0.068, 0.3742], [0.9396, 0.1799, 0.927, 0.6451, 0.9649], [0.7239, 0.1115, 0.4114, 0.923, 0.6387], [0.599, 0.9343, 0.3721, 0.7186, 0.9376], [0.3448, 0.0595, 0.2869, 0.6098, 0.2259], [0.3379, 0.7214, 0.3001, 0.8496, 0.6326], [0.8219, 0.8287, 0.5039, 0.7995, 0.7537], [0.2667, 0.1088, 0.794, 0.0183, 0.41]], [[0.2372, 0.0597, 0.273, 0.3574, 0.7326], [0.4445, 0.8509, 0.4093, 0.3477, 0.2494], [0.5157, 0.8864, 0.2154, 0.2271, 0.3278], [0.7527, 0.5061, 0.9587, 0.4954, 0.1182], [0.3277, 0.0597, 0.7362, 0.7975, 0.7795], [0.0905, 0.987, 0.1043, 0.0849, 0.8837], [0.2615, 0.9722, 0.8961, 0.2347, 0.0817], [0.3114, 0.189, 0.5526, 0.1846, 0.2335], [0.6494, 0.1158, 0.1413, 0.405, 0.087], [0.038, 0.1156, 0.3303, 0.21, 0.9132], [0.2376, 0.8024, 0.0414, 0.3775, 0.9702], [0.1116, 0.3655, 0.5061, 0.4056, 0.8574], [0.8562, 0.0415, 0.6461, 0.3664, 0.9563]], [[0.9435, 0.2944, 0.791, 0.1537, 0.6435], [0.6066, 0.9348, 0.0298, 0.6888, 0.0479], [0.7298, 0.3466, 0.1705, 0.8284, 0.0788], [0.4786, 0.4423, 0.4965, 0.4676, 0.6994], [0.1592, 0.8198, 0.3494, 0.1867, 0.59], [0.9914, 0.8112, 0.1245, 0.4931, 0.6681], [0.4398, 0.9485, 0.5809, 0.466, 0.6256], [0.6062, 0.7474, 0.3213, 0.7631, 0.6849], [0.7827, 0.5531, 0.9402, 0.3991, 0.2563], [0.5625, 0.741, 0.7216, 0.6175, 0.8425], [0.7312, 0.3932, 0.3291, 0.3831, 0.0444], [0.1528, 0.0279, 0.6096, 0.2409, 0.2919], [0.2914, 0.7128, 0.2717, 0.557, 0.5739]], [[0.5982, 0.9503, 0.497, 0.2762, 0.7124], [0.8046, 0.5868, 0.7118, 0.6878, 0.5653], [0.8442, 0.9406, 0.0873, 0.8292, 0.2001], [0.0565, 0.5297, 0.6321, 0.5858, 0.5354], [0.1279, 0.7609, 0.5536, 0.6762, 0.4818], [0.6434, 0.2626, 0.0014, 0.435, 0.5608], [0.8282, 0.7223, 0.4252, 0.75, 0.3616], [0.0199, 0.5361, 0.6827, 0.5046, 0.944], [0.2952, 0.44, 0.9031, 0.1917, 0.8503], [0.6381, 0.86, 0.8889, 0.4069, 0.7997], [0.3513, 0.7719, 0.709, 0.4188, 0.7047], [0.8398, 0.9096, 0.2186, 0.4939, 0.6343], [0.3885, 0.2633, 0.6281, 0.7896, 0.9503]]]])
in0Bat8919 = tf.constant([[[[1.1243, 1.5726, 1.4462], [1.638, 1.2273, 1.1545], [1.4683, 1.9575, 1.6441]], [[1.1662, 1.4847, 1.2437], [1.6726, 1.0676, 1.5048], [1.0563, 1.4448, 1.0335]], [[1.7809, 1.4274, 1.528], [1.5746, 1.8162, 1.7651], [1.4347, 1.3612, 1.8883]], [[1.9426, 1.3325, 1.2632], [1.4262, 1.6042, 1.435], [1.3161, 1.5946, 1.3695]]]])
in0Con24306 = tf.constant([[[[[0.0551], [0.7074], [0.3104]], [[0.4568], [0.0891], [0.9862]], [[0.038], [0.7193], [0.5586]]], [[[0.6244], [0.7117], [0.7654]], [[0.3709], [0.5714], [0.4446]], [[0.213], [0.544], [0.6343]]], [[[0.0021], [0.7207], [0.4436]], [[0.885], [0.6195], [0.3766]], [[0.2888], [0.754], [0.0281]]], [[[0.8331], [0.8523], [0.7039]], [[0.934], [0.0109], [0.9309]], [[0.0603], [0.9895], [0.6511]]]]])
in0Mul32483 = tf.constant([[[[[0.6575, 0.183], [0.8709, 0.9289]], [[0.122, 0.6911], [0.2297, 0.9886]]]]])
in1Mul32483 = tf.constant([[[[[0.0094, 0.1942], [0.7897, 0.6447]], [[0.0746, 0.8357], [0.4266, 0.0457]]]]])
in0Up_7061 = tf.constant([[[[1.8619, 1.267, 1.9004], [1.136, 1.2894, 1.0171], [1.512, 1.8649, 1.8076], [1.501, 1.1609, 1.4911]], [[1.7775, 1.6037, 1.9512], [1.5181, 1.0659, 1.8861], [1.1672, 1.3541, 1.1059], [1.7189, 1.5243, 1.0057]]]])
in0Con58742 = tf.constant([[[[0.2154, 0.5632, 0.3472], [0.2069, 0.1716, 0.8427], [0.8771, 0.8196, 0.1693], [0.2086, 0.9496, 0.74], [0.7354, 0.3009, 0.2718], [0.6912, 0.7807, 0.1419], [0.5332, 0.2345, 0.7262], [0.4625, 0.781, 0.9813], [0.1418, 0.6369, 0.8646], [0.2921, 0.8932, 0.7286], [0.0133, 0.0355, 0.3419], [0.7641, 0.607, 0.1712], [0.84, 0.3731, 0.8549]], [[0.0187, 0.6194, 0.3586], [0.4051, 0.0814, 0.187], [0.594, 0.8749, 0.2016], [0.508, 0.8853, 0.9134], [0.6461, 0.5813, 0.0793], [0.6852, 0.4395, 0.4968], [0.7513, 0.6015, 0.8954], [0.6986, 0.2661, 0.7111], [0.8327, 0.973, 0.8665], [0.4168, 0.4026, 0.6321], [0.7165, 0.0796, 0.8055], [0.4671, 0.5038, 0.6382], [0.4281, 0.3115, 0.2864]], [[0.5835, 0.0932, 0.4703], [0.7594, 0.5015, 0.184], [0.8486, 0.0142, 0.9264], [0.3745, 0.3438, 0.1623], [0.4292, 0.5818, 0.9526], [0.9038, 0.7082, 0.5382], [0.0891, 0.2377, 0.947], [0.0773, 0.8098, 0.0281], [0.8551, 0.8226, 0.9982], [0.0702, 0.6185, 0.4764], [0.073, 0.6295, 0.4541], [0.3147, 0.4554, 0.1719], [0.58, 0.8131, 0.854]], [[0.1419, 0.1971, 0.5496], [0.4077, 0.2032, 0.508], [0.6657, 0.8654, 0.3109], [0.892, 0.1956, 0.2751], [0.3489, 0.1013, 0.5226], [0.1039, 0.8385, 0.7482], [0.0663, 0.3193, 0.399], [0.4094, 0.0609, 0.7219], [0.2255, 0.3939, 0.9451], [0.7412, 0.8363, 0.5891], [0.4525, 0.9802, 0.7414], [0.8306, 0.9632, 0.0254], [0.4807, 0.9228, 0.06]]]])
print (np.array2string(model.predict([in0Mul13324,in1Mul13324,in0Con1772,in0Bat8919,in0Con24306,in0Mul32483,in1Mul32483,in0Up_7061,in0Con58742],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Max52804.png')

LMul13324 = multiply_layer([[[[[[0.2801, 0.5736], [0.2737, 0.3731]]], [[[0.4114, 0.7294], [0.684, 0.4814]]]]], [[[[[0.9387, 0.7907], [0.5667, 0.9945]]], [[[0.1746, 0.7926], [0.4393, 0.4497]]]]]], Mul13324), 
LRes78566 = reshape_layer(Mul13324, [2, 1, 4], Res78566), 
LRes34809 = reshape_layer(Res78566, [2, 4], Res34809), 
LLST81346 = lstm_layer(Res34809,[[7, 7, 10, 8, 5, 1, 8, 8], [6, 4, 3, 1, 2, 3, 9, 2], [3, 6, 8, 2, 1, 5, 3, 2], [1, 3, 1, 5, 1, 1, 6, 4]],[[7, 9, 6, 8, 6, 6, 7, 4], [3, 1, 5, 4, 2, 8, 2, 4]],[7, 10, 6, 5, 3, 2, 9, 5], LST81346), 
LRes27956 = reshape_layer(LST81346, [2, 1], Res27956), 
LRes20927 = reshape_layer(Res27956, [2, 1, 1], Res20927), 
LZer87288 = zero_padding2D_layer(Res20927, 2, 0, 12, 0, Zer87288), 
LCon1772 = concatenate_layer([Zer87288,[[[[0.9766, 0.2727, 0.597, 0.9144, 0.7242], [0.345, 0.729, 0.1259, 0.1258, 0.7042], [0.7097, 0.5634, 0.8092, 0.1796, 0.0017], [0.2279, 0.6599, 0.1641, 0.1743, 0.9787], [0.067, 0.5413, 0.7526, 0.4163, 0.757], [0.4527, 0.4533, 0.3828, 0.068, 0.3742], [0.9396, 0.1799, 0.927, 0.6451, 0.9649], [0.7239, 0.1115, 0.4114, 0.923, 0.6387], [0.599, 0.9343, 0.3721, 0.7186, 0.9376], [0.3448, 0.0595, 0.2869, 0.6098, 0.2259], [0.3379, 0.7214, 0.3001, 0.8496, 0.6326], [0.8219, 0.8287, 0.5039, 0.7995, 0.7537], [0.2667, 0.1088, 0.794, 0.0183, 0.41]], [[0.2372, 0.0597, 0.273, 0.3574, 0.7326], [0.4445, 0.8509, 0.4093, 0.3477, 0.2494], [0.5157, 0.8864, 0.2154, 0.2271, 0.3278], [0.7527, 0.5061, 0.9587, 0.4954, 0.1182], [0.3277, 0.0597, 0.7362, 0.7975, 0.7795], [0.0905, 0.987, 0.1043, 0.0849, 0.8837], [0.2615, 0.9722, 0.8961, 0.2347, 0.0817], [0.3114, 0.189, 0.5526, 0.1846, 0.2335], [0.6494, 0.1158, 0.1413, 0.405, 0.087], [0.038, 0.1156, 0.3303, 0.21, 0.9132], [0.2376, 0.8024, 0.0414, 0.3775, 0.9702], [0.1116, 0.3655, 0.5061, 0.4056, 0.8574], [0.8562, 0.0415, 0.6461, 0.3664, 0.9563]], [[0.9435, 0.2944, 0.791, 0.1537, 0.6435], [0.6066, 0.9348, 0.0298, 0.6888, 0.0479], [0.7298, 0.3466, 0.1705, 0.8284, 0.0788], [0.4786, 0.4423, 0.4965, 0.4676, 0.6994], [0.1592, 0.8198, 0.3494, 0.1867, 0.59], [0.9914, 0.8112, 0.1245, 0.4931, 0.6681], [0.4398, 0.9485, 0.5809, 0.466, 0.6256], [0.6062, 0.7474, 0.3213, 0.7631, 0.6849], [0.7827, 0.5531, 0.9402, 0.3991, 0.2563], [0.5625, 0.741, 0.7216, 0.6175, 0.8425], [0.7312, 0.3932, 0.3291, 0.3831, 0.0444], [0.1528, 0.0279, 0.6096, 0.2409, 0.2919], [0.2914, 0.7128, 0.2717, 0.557, 0.5739]], [[0.5982, 0.9503, 0.497, 0.2762, 0.7124], [0.8046, 0.5868, 0.7118, 0.6878, 0.5653], [0.8442, 0.9406, 0.0873, 0.8292, 0.2001], [0.0565, 0.5297, 0.6321, 0.5858, 0.5354], [0.1279, 0.7609, 0.5536, 0.6762, 0.4818], [0.6434, 0.2626, 0.0014, 0.435, 0.5608], [0.8282, 0.7223, 0.4252, 0.75, 0.3616], [0.0199, 0.5361, 0.6827, 0.5046, 0.944], [0.2952, 0.44, 0.9031, 0.1917, 0.8503], [0.6381, 0.86, 0.8889, 0.4069, 0.7997], [0.3513, 0.7719, 0.709, 0.4188, 0.7047], [0.8398, 0.9096, 0.2186, 0.4939, 0.6343], [0.3885, 0.2633, 0.6281, 0.7896, 0.9503]]]]], 3, Con1772), 
LBat8919 = batch_normalization_layer([[[[1.1243, 1.5726, 1.4462], [1.638, 1.2273, 1.1545], [1.4683, 1.9575, 1.6441]], [[1.1662, 1.4847, 1.2437], [1.6726, 1.0676, 1.5048], [1.0563, 1.4448, 1.0335]], [[1.7809, 1.4274, 1.528], [1.5746, 1.8162, 1.7651], [1.4347, 1.3612, 1.8883]], [[1.9426, 1.3325, 1.2632], [1.4262, 1.6042, 1.435], [1.3161, 1.5946, 1.3695]]]], 3, 0.6497152378733976, [0.7724, 0.2843, 0.898], [0.5081, 0.9631, 0.3009], [0.3668, 0.8463, 0.7742], [0.8794, 0.4091, 0.284], Bat8919), 
LRes21306 = reshape_layer(Bat8919, [4, 3, 3, 1], Res21306), 
LCon24306 = concatenate_layer([Res21306,[[[[[0.0551], [0.7074], [0.3104]], [[0.4568], [0.0891], [0.9862]], [[0.038], [0.7193], [0.5586]]], [[[0.6244], [0.7117], [0.7654]], [[0.3709], [0.5714], [0.4446]], [[0.213], [0.544], [0.6343]]], [[[0.0021], [0.7207], [0.4436]], [[0.885], [0.6195], [0.3766]], [[0.2888], [0.754], [0.0281]]], [[[0.8331], [0.8523], [0.7039]], [[0.934], [0.0109], [0.9309]], [[0.0603], [0.9895], [0.6511]]]]]], 4, Con24306), 
LMul32483 = multiply_layer([[[[[[0.6575, 0.183], [0.8709, 0.9289]], [[0.122, 0.6911], [0.2297, 0.9886]]]]], [[[[[0.0094, 0.1942], [0.7897, 0.6447]], [[0.0746, 0.8357], [0.4266, 0.0457]]]]]], Mul32483), 
LZer93155 = zero_padding3D_layer(Mul32483, 3, 0, 1, 0, 1, 0, Zer93155), 
LMul64575 = multiply_layer([Con24306,Zer93155], Mul64575), 
LRes20604 = reshape_layer(Mul64575, [4, 3, 6], Res20604), 
LZer39092 = zero_padding2D_layer(Res20604, 0, 0, 10, 0, Zer39092), 
LUp_7061 = up_sampling2D_layer([[[[1.8619, 1.267, 1.9004], [1.136, 1.2894, 1.0171], [1.512, 1.8649, 1.8076], [1.501, 1.1609, 1.4911]], [[1.7775, 1.6037, 1.9512], [1.5181, 1.0659, 1.8861], [1.1672, 1.3541, 1.1059], [1.7189, 1.5243, 1.0057]]]], 1, 2, Up_7061), 
LZer20660 = zero_padding2D_layer(Up_7061, 2, 0, 5, 0, Zer20660), 
LCon58742 = concatenate_layer([Zer20660,[[[[0.2154, 0.5632, 0.3472], [0.2069, 0.1716, 0.8427], [0.8771, 0.8196, 0.1693], [0.2086, 0.9496, 0.74], [0.7354, 0.3009, 0.2718], [0.6912, 0.7807, 0.1419], [0.5332, 0.2345, 0.7262], [0.4625, 0.781, 0.9813], [0.1418, 0.6369, 0.8646], [0.2921, 0.8932, 0.7286], [0.0133, 0.0355, 0.3419], [0.7641, 0.607, 0.1712], [0.84, 0.3731, 0.8549]], [[0.0187, 0.6194, 0.3586], [0.4051, 0.0814, 0.187], [0.594, 0.8749, 0.2016], [0.508, 0.8853, 0.9134], [0.6461, 0.5813, 0.0793], [0.6852, 0.4395, 0.4968], [0.7513, 0.6015, 0.8954], [0.6986, 0.2661, 0.7111], [0.8327, 0.973, 0.8665], [0.4168, 0.4026, 0.6321], [0.7165, 0.0796, 0.8055], [0.4671, 0.5038, 0.6382], [0.4281, 0.3115, 0.2864]], [[0.5835, 0.0932, 0.4703], [0.7594, 0.5015, 0.184], [0.8486, 0.0142, 0.9264], [0.3745, 0.3438, 0.1623], [0.4292, 0.5818, 0.9526], [0.9038, 0.7082, 0.5382], [0.0891, 0.2377, 0.947], [0.0773, 0.8098, 0.0281], [0.8551, 0.8226, 0.9982], [0.0702, 0.6185, 0.4764], [0.073, 0.6295, 0.4541], [0.3147, 0.4554, 0.1719], [0.58, 0.8131, 0.854]], [[0.1419, 0.1971, 0.5496], [0.4077, 0.2032, 0.508], [0.6657, 0.8654, 0.3109], [0.892, 0.1956, 0.2751], [0.3489, 0.1013, 0.5226], [0.1039, 0.8385, 0.7482], [0.0663, 0.3193, 0.399], [0.4094, 0.0609, 0.7219], [0.2255, 0.3939, 0.9451], [0.7412, 0.8363, 0.5891], [0.4525, 0.9802, 0.7414], [0.8306, 0.9632, 0.0254], [0.4807, 0.9228, 0.06]]]]], 3, Con58742), 
LMax75467 = maximum_layer([Zer39092,Con58742], Max75467), 
LMax52804 = maximum_layer([Con1772,Max75467], Max52804), 
exec_layers([LMul13324,LRes78566,LRes34809,LLST81346,LRes27956,LRes20927,LZer87288,LCon1772,LBat8919,LRes21306,LCon24306,LMul32483,LZer93155,LMul64575,LRes20604,LZer39092,LUp_7061,LZer20660,LCon58742,LMax75467,LMax52804],["Mul13324","Res78566","Res34809","LST81346","Res27956","Res20927","Zer87288","Con1772","Bat8919","Res21306","Con24306","Mul32483","Zer93155","Mul64575","Res20604","Zer39092","Up_7061","Zer20660","Con58742","Max75467","Max52804"],Max52804,"Max52804")

Actual (Unparsed): [[[[0.0000000, 0.9766000, 0.2727000, 0.5970000, 0.9144000, 0.7242000], [0.0000000, 0.3450000, 0.7290000, 0.2069000, 0.1716000, 0.8427000], [0.0000000, 0.7097000, 0.5634000, 0.8771000, 0.8196000, 0.1693000], [0.0000000, 0.2279000, 0.6599000, 0.2086000, 0.9496000, 0.9787000], [0.0000000, 0.0670000, 0.5413000, 0.7526000, 0.4163000, 0.7570000], [0.0000000, 0.4527000, 0.4533000, 0.6912000, 0.7807000, 0.3742000], [0.0000000, 0.9396000, 0.1799000, 0.9270000, 0.6451000, 0.9649000], [0.0000000, 0.7239000, 0.1115000, 0.4625000, 0.9230000, 0.9813000], [0.0000000, 0.5990000, 0.9343000, 0.3721000, 0.7186000, 0.9376000], [0.0000000, 0.3448000, 0.0595000, 0.2921000, 0.8932000, 0.7286000], [0.0000000, 0.3379000, 0.7214000, 0.3001000, 0.8496000, 0.6326000], [0.0000000, 0.8219000, 0.8287000, 0.7641000, 0.7995000, 0.7537000], [0.0000000, 0.2667000, 0.1088000, 0.8400000, 0.3731000, 0.8549000]], [[0.0000000, 0.2372000, 0.0597000, 0.2730000, 0.6194000, 0.7326000], [0.0000000, 0.4445000, 0.8509000, 0.4093000, 0.3477000, 0.2494000], [0.0000000, 0.5157000, 0.8864000, 0.5940000, 0.8749000, 0.3278000], [0.0000000, 0.7527000, 0.5061000, 0.9587000, 0.8853000, 0.9134000], [0.0000000, 0.3277000, 0.0597000, 0.7362000, 0.7975000, 0.7795000], [0.0000000, 0.0905000, 0.9870000, 0.6852000, 0.4395000, 0.8837000], [0.0000000, 0.2615000, 0.9722000, 0.8961000, 0.6015000, 0.8954000], [0.0000000, 0.3114000, 0.1890000, 0.6986000, 0.2661000, 0.7111000], [0.0000000, 0.6494000, 0.1158000, 0.8327000, 0.9730000, 0.8665000], [0.0000000, 0.0380000, 0.1156000, 0.4168000, 0.4026000, 0.9132000], [0.0000000, 0.2376000, 0.8024000, 0.7165000, 0.3775000, 0.9702000], [0.0000000, 0.1116000, 0.3655000, 0.5061000, 0.5038000, 0.8574000], [0.0000000, 0.8562000, 0.0415000, 0.6461000, 0.3664000, 0.9563000]], [[0.0000000, 0.9435000, 0.2944000, 0.7910000, 0.1537000, 0.6435000], [0.0000000, 0.6066000, 0.9348000, 0.7594000, 0.6888000, 0.1840000], [0.0000000, 0.7298000, 0.3466000, 0.8486000, 0.8284000, 0.9264000], [0.0000000, 0.4786000, 0.4423000, 0.4965000, 0.4676000, 0.6994000], [0.0000000, 0.1592000, 0.8198000, 0.4292000, 0.5818000, 0.9526000], [1.8619000, 1.2670000, 1.9004000, 0.9038000, 0.7082000, 0.6681000], [1.8619000, 1.2670000, 1.9004000, 0.5809000, 0.4660000, 0.9470000], [1.1360000, 1.2894000, 1.0171000, 0.3213000, 0.8098000, 0.6849000], [1.1360000, 1.2894000, 1.0171000, 0.9402000, 0.8226000, 0.9982000], [1.5120000, 1.8649000, 1.8076000, 0.7216000, 0.6185000, 0.8425000], [1.5120000, 1.8649000, 1.8076000, 0.3291000, 0.6295000, 0.4541000], [1.5010000, 1.1609000, 1.4911000, 0.6096000, 0.4554000, 0.2919000], [1.5010000, 1.1609000, 1.4911000, 0.5800000, 0.8131000, 0.8540000]], [[0.0000000, 0.5982000, 0.9503000, 0.4970000, 0.2762000, 0.7124000], [0.0000000, 0.8046000, 0.5868000, 0.7118000, 0.6878000, 0.5653000], [0.0000000, 0.8442000, 0.9406000, 0.6657000, 0.8654000, 0.3109000], [0.0000000, 0.0565000, 0.5297000, 0.8920000, 0.5858000, 0.5354000], [0.0000000, 0.1279000, 0.7609000, 0.5536000, 0.6762000, 0.5226000], [1.7775000, 1.6037000, 1.9512000, 0.1039000, 0.8385000, 0.7482000], [1.7775000, 1.6037000, 1.9512000, 0.4252000, 0.7500000, 0.3990000], [1.5181000, 1.0659000, 1.8861001, 0.6827000, 0.5046000, 0.9440000], [1.5181000, 1.0659000, 1.8861001, 0.9031000, 0.3939000, 0.9451000], [1.1672000, 1.3541000, 1.1059000, 0.8889000, 0.8363000, 0.7997000], [1.1672000, 1.3541000, 1.1059000, 0.7090000, 0.9802000, 0.7414000], [1.7189000, 1.5243000, 1.0057000, 0.8306000, 0.9632000, 0.6343000], [1.7189000, 1.5243000, 1.0057000, 0.6281000, 0.9228000, 0.9503000]]]]

Expected (Unparsed): [[[[0,0.9766,0.2727,0.597,0.9144,0.7242],[0,0.345,0.729,0.2069,0.1716,0.8427],[0,0.7097,0.5634,0.8771,0.8196,0.1693],[0,0.2279,0.6599,0.2086,0.9496,0.9787],[0,0.067,0.5413,0.7526,0.4163,0.757],[0,0.4527,0.4533,0.6912,0.7807,0.3742],[0,0.9396,0.1799,0.927,0.6451,0.9649],[0,0.7239,0.1115,0.4625,0.923,0.9813],[0,0.599,0.9343,0.3721,0.7186,0.9376],[0,0.3448,0.0595,0.2921,0.8932,0.7286],[0,0.3379,0.7214,0.3001,0.8496,0.6326],[0,0.8219,0.8287,0.7641,0.7995,0.7537],[0,0.2667,0.1088,0.84,0.3731,0.8549]],[[0,0.2372,0.0597,0.273,0.6194,0.7326],[0,0.4445,0.8509,0.4093,0.3477,0.2494],[0,0.5157,0.8864,0.594,0.8749,0.3278],[0,0.7527,0.5061,0.9587,0.8853,0.9134],[0,0.3277,0.0597,0.7362,0.7975,0.7795],[0,0.0905,0.987,0.6852,0.4395,0.8837],[0,0.2615,0.9722,0.8961,0.6015,0.8954],[0,0.3114,0.189,0.6986,0.2661,0.7111],[0,0.6494,0.1158,0.8327,0.973,0.8665],[0,0.038,0.1156,0.4168,0.4026,0.9132],[0,0.2376,0.8024,0.7165,0.3775,0.9702],[0,0.1116,0.3655,0.5061,0.5038,0.8574],[0,0.8562,0.0415,0.6461,0.3664,0.9563]],[[0,0.9435,0.2944,0.791,0.1537,0.6435],[0,0.6066,0.9348,0.7594,0.6888,0.184],[0,0.7298,0.3466,0.8486,0.8284,0.9264],[0,0.4786,0.4423,0.4965,0.4676,0.6994],[0,0.1592,0.8198,0.4292,0.5818,0.9526],[1.8619,1.267,1.9004,0.9038,0.7082,0.6681],[1.8619,1.267,1.9004,0.5809,0.466,0.947],[1.136,1.2894,1.0171,0.3213,0.8098,0.6849],[1.136,1.2894,1.0171,0.9402,0.8226,0.9982],[1.512,1.8649,1.8076,0.7216,0.6185,0.8425],[1.512,1.8649,1.8076,0.3291,0.6295,0.4541],[1.501,1.1609,1.4911,0.6096,0.4554,0.2919],[1.501,1.1609,1.4911,0.58,0.8131,0.854]],[[0,0.5982,0.9503,0.497,0.2762,0.7124],[0,0.8046,0.5868,0.7118,0.6878,0.5653],[0,0.8442,0.9406,0.6657,0.8654,0.3109],[0,0.0565,0.5297,0.892,0.5858,0.5354],[0,0.1279,0.7609,0.5536,0.6762,0.5226],[1.7775,1.6037,1.9512,0.1039,0.8385,0.7482],[1.7775,1.6037,1.9512,0.4252,0.75,0.399],[1.5181,1.0659,1.8861,0.6827,0.5046,0.944],[1.5181,1.0659,1.8861,0.9031,0.3939,0.9451],[1.1672,1.3541,1.1059,0.8889,0.8363,0.7997],[1.1672,1.3541,1.1059,0.709,0.9802,0.7414],[1.7189,1.5243,1.0057,0.8306,0.9632,0.6343],[1.7189,1.5243,1.0057,0.6281,0.9228,0.9503]]]]

Actual:   [[[[0, 0.9766, 0.2727, 0.597, 0.9144, 0.7242], [0, 0.345, 0.729, 0.2069, 0.1716, 0.8427], [0, 0.7097, 0.5634, 0.8771, 0.8196, 0.1693], [0, 0.2279, 0.6599, 0.2086, 0.9496, 0.9787], [0, 0.067, 0.5413, 0.7526, 0.4163, 0.757], [0, 0.4527, 0.4533, 0.6912, 0.7807, 0.3742], [0, 0.9396, 0.1799, 0.927, 0.6451, 0.9649], [0, 0.7239, 0.1115, 0.4625, 0.923, 0.9813], [0, 0.599, 0.9343, 0.3721, 0.7186, 0.9376], [0, 0.3448, 0.0595, 0.2921, 0.8932, 0.7286], [0, 0.3379, 0.7214, 0.3001, 0.8496, 0.6326], [0, 0.8219, 0.8287, 0.7641, 0.7995, 0.7537], [0, 0.2667, 0.1088, 0.84, 0.3731, 0.8549]], [[0, 0.2372, 0.0597, 0.273, 0.6194, 0.7326], [0, 0.4445, 0.8509, 0.4093, 0.3477, 0.2494], [0, 0.5157, 0.8864, 0.594, 0.8749, 0.3278], [0, 0.7527, 0.5061, 0.9587, 0.8853, 0.9134], [0, 0.3277, 0.0597, 0.7362, 0.7975, 0.7795], [0, 0.0905, 0.987, 0.6852, 0.4395, 0.8837], [0, 0.2615, 0.9722, 0.8961, 0.6015, 0.8954], [0, 0.3114, 0.189, 0.6986, 0.2661, 0.7111], [0, 0.6494, 0.1158, 0.8327, 0.973, 0.8665], [0, 0.038, 0.1156, 0.4168, 0.4026, 0.9132], [0, 0.2376, 0.8024, 0.7165, 0.3775, 0.9702], [0, 0.1116, 0.3655, 0.5061, 0.5038, 0.8574], [0, 0.8562, 0.0415, 0.6461, 0.3664, 0.9563]], [[0, 0.9435, 0.2944, 0.791, 0.1537, 0.6435], [0, 0.6066, 0.9348, 0.7594, 0.6888, 0.184], [0, 0.7298, 0.3466, 0.8486, 0.8284, 0.9264], [0, 0.4786, 0.4423, 0.4965, 0.4676, 0.6994], [0, 0.1592, 0.8198, 0.4292, 0.5818, 0.9526], [1.8619, 1.267, 1.9004, 0.9038, 0.7082, 0.6681], [1.8619, 1.267, 1.9004, 0.5809, 0.466, 0.947], [1.136, 1.2894, 1.0171, 0.3213, 0.8098, 0.6849], [1.136, 1.2894, 1.0171, 0.9402, 0.8226, 0.9982], [1.512, 1.8649, 1.8076, 0.7216, 0.6185, 0.8425], [1.512, 1.8649, 1.8076, 0.3291, 0.6295, 0.4541], [1.501, 1.1609, 1.4911, 0.6096, 0.4554, 0.2919], [1.501, 1.1609, 1.4911, 0.58, 0.8131, 0.854]], [[0, 0.5982, 0.9503, 0.497, 0.2762, 0.7124], [0, 0.8046, 0.5868, 0.7118, 0.6878, 0.5653], [0, 0.8442, 0.9406, 0.6657, 0.8654, 0.3109], [0, 0.0565, 0.5297, 0.892, 0.5858, 0.5354], [0, 0.1279, 0.7609, 0.5536, 0.6762, 0.5226], [1.7775, 1.6037, 1.9512, 0.1039, 0.8385, 0.7482], [1.7775, 1.6037, 1.9512, 0.4252, 0.75, 0.399], [1.5181, 1.0659, 1.8862, 0.6827, 0.5046, 0.944], [1.5181, 1.0659, 1.8862, 0.9031, 0.3939, 0.9451], [1.1672, 1.3541, 1.1059, 0.8889, 0.8363, 0.7997], [1.1672, 1.3541, 1.1059, 0.709, 0.9802, 0.7414], [1.7189, 1.5243, 1.0057, 0.8306, 0.9632, 0.6343], [1.7189, 1.5243, 1.0057, 0.6281, 0.9228, 0.9503]]]]

Expected: [[[[0, 0.9766, 0.2727, 0.597, 0.9144, 0.7242], [0, 0.345, 0.729, 0.2069, 0.1716, 0.8427], [0, 0.7097, 0.5634, 0.8771, 0.8196, 0.1693], [0, 0.2279, 0.6599, 0.2086, 0.9496, 0.9787], [0, 0.067, 0.5413, 0.7526, 0.4163, 0.757], [0, 0.4527, 0.4533, 0.6912, 0.7807, 0.3742], [0, 0.9396, 0.1799, 0.927, 0.6451, 0.9649], [0, 0.7239, 0.1115, 0.4625, 0.923, 0.9813], [0, 0.599, 0.9343, 0.3721, 0.7186, 0.9376], [0, 0.3448, 0.0595, 0.2921, 0.8932, 0.7286], [0, 0.3379, 0.7214, 0.3001, 0.8496, 0.6326], [0, 0.8219, 0.8287, 0.7641, 0.7995, 0.7537], [0, 0.2667, 0.1088, 0.84, 0.3731, 0.8549]], [[0, 0.2372, 0.0597, 0.273, 0.6194, 0.7326], [0, 0.4445, 0.8509, 0.4093, 0.3477, 0.2494], [0, 0.5157, 0.8864, 0.594, 0.8749, 0.3278], [0, 0.7527, 0.5061, 0.9587, 0.8853, 0.9134], [0, 0.3277, 0.0597, 0.7362, 0.7975, 0.7795], [0, 0.0905, 0.987, 0.6852, 0.4395, 0.8837], [0, 0.2615, 0.9722, 0.8961, 0.6015, 0.8954], [0, 0.3114, 0.189, 0.6986, 0.2661, 0.7111], [0, 0.6494, 0.1158, 0.8327, 0.973, 0.8665], [0, 0.038, 0.1156, 0.4168, 0.4026, 0.9132], [0, 0.2376, 0.8024, 0.7165, 0.3775, 0.9702], [0, 0.1116, 0.3655, 0.5061, 0.5038, 0.8574], [0, 0.8562, 0.0415, 0.6461, 0.3664, 0.9563]], [[0, 0.9435, 0.2944, 0.791, 0.1537, 0.6435], [0, 0.6066, 0.9348, 0.7594, 0.6888, 0.184], [0, 0.7298, 0.3466, 0.8486, 0.8284, 0.9264], [0, 0.4786, 0.4423, 0.4965, 0.4676, 0.6994], [0, 0.1592, 0.8198, 0.4292, 0.5818, 0.9526], [1.8619, 1.267, 1.9004, 0.9038, 0.7082, 0.6681], [1.8619, 1.267, 1.9004, 0.5809, 0.466, 0.947], [1.136, 1.2894, 1.0171, 0.3213, 0.8098, 0.6849], [1.136, 1.2894, 1.0171, 0.9402, 0.8226, 0.9982], [1.512, 1.8649, 1.8076, 0.7216, 0.6185, 0.8425], [1.512, 1.8649, 1.8076, 0.3291, 0.6295, 0.4541], [1.501, 1.1609, 1.4911, 0.6096, 0.4554, 0.2919], [1.501, 1.1609, 1.4911, 0.58, 0.8131, 0.854]], [[0, 0.5982, 0.9503, 0.497, 0.2762, 0.7124], [0, 0.8046, 0.5868, 0.7118, 0.6878, 0.5653], [0, 0.8442, 0.9406, 0.6657, 0.8654, 0.3109], [0, 0.0565, 0.5297, 0.892, 0.5858, 0.5354], [0, 0.1279, 0.7609, 0.5536, 0.6762, 0.5226], [1.7775, 1.6037, 1.9512, 0.1039, 0.8385, 0.7482], [1.7775, 1.6037, 1.9512, 0.4252, 0.75, 0.399], [1.5181, 1.0659, 1.8861, 0.6827, 0.5046, 0.944], [1.5181, 1.0659, 1.8861, 0.9031, 0.3939, 0.9451], [1.1672, 1.3541, 1.1059, 0.8889, 0.8363, 0.7997], [1.1672, 1.3541, 1.1059, 0.709, 0.9802, 0.7414], [1.7189, 1.5243, 1.0057, 0.8306, 0.9632, 0.6343], [1.7189, 1.5243, 1.0057, 0.6281, 0.9228, 0.9503]]]]