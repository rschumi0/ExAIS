import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0ReL36788 = tf.keras.layers.Input(shape=([1, 2]))
in0Dot48029 = tf.keras.layers.Input(shape=([2, 3]))
in1Dot48029 = tf.keras.layers.Input(shape=([2, 3]))

ReL36788 = keras.layers.ReLU(max_value=7.82361018173049, negative_slope=6.08151511730479, threshold=3.3831123446748212, name = 'ReL36788', input_shape=(1, 2))(in0ReL36788)
Dot48029 = keras.layers.Dot(axes=(2, 2), name = 'Dot48029', )([in0Dot48029,in1Dot48029])
Dot37546 = keras.layers.Dot(axes=(2, 2), name = 'Dot37546', )([ReL36788,Dot48029])
model = tf.keras.models.Model(inputs=[in0ReL36788,in0Dot48029,in1Dot48029], outputs=Dot37546)
in0ReL36788 = tf.constant([[[0.6721, 0.1735]]])
in0Dot48029 = tf.constant([[[0.6969, 0.5939, 0.4099], [0.1219, 0.2148, 0.87]]])
in1Dot48029 = tf.constant([[[0.4383, 0.0145, 0.4333], [0.7545, 0.4873, 0.5843]]])
print (np.array2string(model.predict([in0ReL36788,in0Dot48029,in1Dot48029],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Dot37546.png')

LReL36788 = relu_layer([[[0.6721, 0.1735]]], 7.82361018173049, 6.08151511730479, 3.3831123446748212, ReL36788), 
LDot48029 = dot_layer([[[0.6969, 0.5939, 0.4099], [0.1219, 0.2148, 0.87]]], [[[0.4383, 0.0145, 0.4333], [0.7545, 0.4873, 0.5843]]], 2, 2, Dot48029), 
LDot37546 = dot_layer(ReL36788,Dot48029, 2, 2, Dot37546), 
exec_layers([LReL36788,LDot48029,LDot37546],["ReL36788","Dot48029","Dot37546"],Dot37546,"Dot37546")

Actual (Unparsed): [[[-28.6936981, -20.9082271]]]

Expected (Unparsed): [[[-28.693697833873554,-20.908227510156117]]]

Actual:   [[[-28.6936, -20.9082]]]

Expected: [[[-28.6936, -20.9082]]]