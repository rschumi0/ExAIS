import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Max5139 = tf.keras.layers.Input(shape=([2, 1]))
in0Add44657 = tf.keras.layers.Input(shape=([2, 2]))
in1Add44657 = tf.keras.layers.Input(shape=([2, 2]))

Max5139 = keras.layers.MaxPool1D(pool_size=(1), name = 'Max5139', )(in0Max5139)
Add44657 = keras.layers.Add(name = 'Add44657', )([in0Add44657,in1Add44657])
Dot58815 = keras.layers.Dot(axes=(1, 1), name = 'Dot58815', )([Max5139,Add44657])
Con54470 = keras.layers.Conv1D(3, (1),strides=(2), padding='same', dilation_rate=(1), name = 'Con54470', )(Dot58815)
model = tf.keras.models.Model(inputs=[in0Max5139,in0Add44657,in1Add44657], outputs=Con54470)
w = model.get_layer('Con54470').get_weights() 
w[0] = np.array([[[0.6698, 0.3415, 0.6571], [0.3752, 0.0301, 0.4169]]])
w[1] = np.array([0, 0, 0])
model.get_layer('Con54470').set_weights(w) 
in0Max5139 = tf.constant([[[1.5953], [1.9012]]])
in0Add44657 = tf.constant([[[0.6883, 0.9463], [0.2005, 0.9025]]])
in1Add44657 = tf.constant([[[0.5091, 0.8812], [0.5242, 0.2915]]])
print (np.array2string(model.predict([in0Max5139,in0Add44657,in1Add44657],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Con54470.png')

LMax5139 = max_pool1D_layer([[[1.5953], [1.9012]]], 1, Max5139), 
LAdd44657 = add_layer([[[[0.6883, 0.9463], [0.2005, 0.9025]]], [[[0.5091, 0.8812], [0.5242, 0.2915]]]], Add44657), 
LDot58815 = dot_layer(Max5139,Add44657, 1, 1, Dot58815), 
LCon54470 = conv1D_layer(Dot58815, 1,[[[0.6698, 0.3415, 0.6571], [0.3752, 0.0301, 0.4169]]],[0, 0, 0], 2, true, 1, Con54470), 
exec_layers([LMax5139,LAdd44657,LDot58815,LCon54470],["Max5139","Add44657","Dot58815","Con54470"],Con54470,"Con54470")

Actual (Unparsed): [[[4.1478888, 1.2789379, 4.3223641]]]

Expected (Unparsed): [[[4.147888763788,1.2789379010450002,4.322364009201001]]]

Actual:   [[[4.1479, 1.279, 4.3224]]]

Expected: [[[4.1479, 1.279, 4.3224]]]