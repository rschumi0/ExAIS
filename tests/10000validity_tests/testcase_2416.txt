import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Min98777 = tf.keras.layers.Input(shape=([2, 1, 2, 2]))
in1Min98777 = tf.keras.layers.Input(shape=([2, 1, 2, 2]))

Min98777 = keras.layers.Minimum(name = 'Min98777', )([in0Min98777,in1Min98777])
Zer34532 = keras.layers.ZeroPadding3D(padding=((1, 1), (1, 1), (1, 1)), name = 'Zer34532', )(Min98777)
model = tf.keras.models.Model(inputs=[in0Min98777,in1Min98777], outputs=Zer34532)
in0Min98777 = tf.constant([[[[[0.5056, 0.6589], [0.5962, 0.7226]]], [[[0.7006, 0.1576], [0.3898, 0.3235]]]]])
in1Min98777 = tf.constant([[[[[0.7636, 0.0653], [0.348, 0.3704]]], [[[0.0635, 0.7911], [0.3239, 0.4452]]]]])
print (np.array2string(model.predict([in0Min98777,in1Min98777],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Zer34532.png')

LMin98777 = minimum_layer([[[[[[0.5056, 0.6589], [0.5962, 0.7226]]], [[[0.7006, 0.1576], [0.3898, 0.3235]]]]], [[[[[0.7636, 0.0653], [0.348, 0.3704]]], [[[0.0635, 0.7911], [0.3239, 0.4452]]]]]], Min98777), 
LZer34532 = zero_padding3D_layer(Min98777, 1, 1, 1, 1, 1, 1, Zer34532), 
exec_layers([LMin98777,LZer34532],["Min98777","Zer34532"],Zer34532,"Zer34532")

Actual (Unparsed): [[[[[0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000]], [[0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000]], [[0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000]]], [[[0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000]], [[0.0000000, 0.0000000], [0.5056000, 0.0653000], [0.3480000, 0.3704000], [0.0000000, 0.0000000]], [[0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000]]], [[[0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000]], [[0.0000000, 0.0000000], [0.0635000, 0.1576000], [0.3239000, 0.3235000], [0.0000000, 0.0000000]], [[0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000]]], [[[0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000]], [[0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000]], [[0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000]]]]]

Expected (Unparsed): [[[[[0,0],[0,0],[0,0],[0,0]],[[0,0],[0,0],[0,0],[0,0]],[[0,0],[0,0],[0,0],[0,0]]],[[[0,0],[0,0],[0,0],[0,0]],[[0,0],[0.5056,0.0653],[0.348,0.3704],[0,0]],[[0,0],[0,0],[0,0],[0,0]]],[[[0,0],[0,0],[0,0],[0,0]],[[0,0],[0.0635,0.1576],[0.3239,0.3235],[0,0]],[[0,0],[0,0],[0,0],[0,0]]],[[[0,0],[0,0],[0,0],[0,0]],[[0,0],[0,0],[0,0],[0,0]],[[0,0],[0,0],[0,0],[0,0]]]]]

Actual:   [[[[[0, 0], [0, 0], [0, 0], [0, 0]], [[0, 0], [0, 0], [0, 0], [0, 0]], [[0, 0], [0, 0], [0, 0], [0, 0]]], [[[0, 0], [0, 0], [0, 0], [0, 0]], [[0, 0], [0.5056, 0.0653], [0.348, 0.3704], [0, 0]], [[0, 0], [0, 0], [0, 0], [0, 0]]], [[[0, 0], [0, 0], [0, 0], [0, 0]], [[0, 0], [0.0635, 0.1576], [0.3239, 0.3235], [0, 0]], [[0, 0], [0, 0], [0, 0], [0, 0]]], [[[0, 0], [0, 0], [0, 0], [0, 0]], [[0, 0], [0, 0], [0, 0], [0, 0]], [[0, 0], [0, 0], [0, 0], [0, 0]]]]]

Expected: [[[[[0, 0], [0, 0], [0, 0], [0, 0]], [[0, 0], [0, 0], [0, 0], [0, 0]], [[0, 0], [0, 0], [0, 0], [0, 0]]], [[[0, 0], [0, 0], [0, 0], [0, 0]], [[0, 0], [0.5056, 0.0653], [0.348, 0.3704], [0, 0]], [[0, 0], [0, 0], [0, 0], [0, 0]]], [[[0, 0], [0, 0], [0, 0], [0, 0]], [[0, 0], [0.0635, 0.1576], [0.3239, 0.3235], [0, 0]], [[0, 0], [0, 0], [0, 0], [0, 0]]], [[[0, 0], [0, 0], [0, 0], [0, 0]], [[0, 0], [0, 0], [0, 0], [0, 0]], [[0, 0], [0, 0], [0, 0], [0, 0]]]]]