import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Ave27319 = tf.keras.layers.Input(shape=([1, 1, 2]))
in1Ave27319 = tf.keras.layers.Input(shape=([1, 1, 2]))
in0Con97758 = tf.keras.layers.Input(shape=([1, 1, 2]))
in0Cro7386 = tf.keras.layers.Input(shape=([4, 3, 2, 3]))

Ave27319 = keras.layers.Average(name = 'Ave27319', )([in0Ave27319,in1Ave27319])
Con97758 = keras.layers.Concatenate(axis=3, name = 'Con97758', )([Ave27319,in0Con97758])
Cro7386 = keras.layers.Cropping3D(cropping=((2, 1), (2, 0), (1, 0)), name = 'Cro7386', )(in0Cro7386)
Res14081 = keras.layers.Reshape((1, 1, 3), name = 'Res14081', )(Cro7386)
Loc22815 = keras.layers.LocallyConnected2D(4, (1, 1),strides=(1, 1), name = 'Loc22815', )(Res14081)
Mul27312 = keras.layers.Multiply(name = 'Mul27312', )([Con97758,Loc22815])
Thr14066 = keras.layers.ThresholdedReLU(theta=9.514996048917007, name = 'Thr14066', )(Mul27312)
model = tf.keras.models.Model(inputs=[in0Ave27319,in1Ave27319,in0Con97758,in0Cro7386], outputs=Thr14066)
w = model.get_layer('Loc22815').get_weights() 
w[0] = np.array([[[0.2938, 0.1007, 0.0914, 0.4751], [0.6398, 0.4302, 0.5925, 0.0014], [0.7842, 0.2027, 0.3065, 0.0646]]])
w[1] = np.array([[[0, 0, 0, 0]]])
model.get_layer('Loc22815').set_weights(w) 
in0Ave27319 = tf.constant([[[[0.1524, 0.6737]]]])
in1Ave27319 = tf.constant([[[[0.3164, 0.6131]]]])
in0Con97758 = tf.constant([[[[0.6694, 0.5848]]]])
in0Cro7386 = tf.constant([[[[[1.3736, 1.1085, 1.8343], [1.7262, 1.2073, 1.2058]], [[1.2596, 1.5479, 1.5311], [1.3564, 1.0888, 1.4828]], [[1.4541, 1.2625, 1.297], [1.8582, 1.746, 1.1854]]], [[[1.203, 1.2407, 1.0572], [1.1782, 1.1163, 1.3563]], [[1.3919, 1.6394, 1.8179], [1.1831, 1.7984, 1.6254]], [[1.198, 1.2823, 1.5241], [1.4932, 1.9146, 1.4523]]], [[[1.9434, 1.6111, 1.7738], [1.3532, 1.4149, 1.0692]], [[1.6371, 1.8285, 1.8466], [1.5522, 1.0546, 1.2755]], [[1.158, 1.7918, 1.4972], [1.5611, 1.0156, 1.3104]]], [[[1.013, 1.662, 1.1865], [1.4845, 1.3689, 1.4198]], [[1.6085, 1.3138, 1.2561], [1.5456, 1.8048, 1.6611]], [[1.9349, 1.281, 1.5866], [1.1455, 1.7732, 1.9307]]]]])
print (np.array2string(model.predict([in0Ave27319,in1Ave27319,in0Con97758,in0Cro7386],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Thr14066.png')

LAve27319 = average_layer([[[[[0.1524, 0.6737]]]], [[[[0.3164, 0.6131]]]]], Ave27319), 
LCon97758 = concatenate_layer([Ave27319,[[[[0.6694, 0.5848]]]]], 3, Con97758), 
LCro7386 = cropping3D_layer([[[[[1.3736, 1.1085, 1.8343], [1.7262, 1.2073, 1.2058]], [[1.2596, 1.5479, 1.5311], [1.3564, 1.0888, 1.4828]], [[1.4541, 1.2625, 1.297], [1.8582, 1.746, 1.1854]]], [[[1.203, 1.2407, 1.0572], [1.1782, 1.1163, 1.3563]], [[1.3919, 1.6394, 1.8179], [1.1831, 1.7984, 1.6254]], [[1.198, 1.2823, 1.5241], [1.4932, 1.9146, 1.4523]]], [[[1.9434, 1.6111, 1.7738], [1.3532, 1.4149, 1.0692]], [[1.6371, 1.8285, 1.8466], [1.5522, 1.0546, 1.2755]], [[1.158, 1.7918, 1.4972], [1.5611, 1.0156, 1.3104]]], [[[1.013, 1.662, 1.1865], [1.4845, 1.3689, 1.4198]], [[1.6085, 1.3138, 1.2561], [1.5456, 1.8048, 1.6611]], [[1.9349, 1.281, 1.5866], [1.1455, 1.7732, 1.9307]]]]], 2, 1, 2, 0, 1, 0, Cro7386), 
LRes14081 = reshape_layer(Cro7386, [1, 1, 3], Res14081), 
LLoc22815 = locally_connected2D_layer(Res14081, 1, 1,[[[0.2938, 0.1007, 0.0914, 0.4751], [0.6398, 0.4302, 0.5925, 0.0014], [0.7842, 0.2027, 0.3065, 0.0646]]],[[[0, 0, 0, 0]]], 1, 1, Loc22815), 
LMul27312 = multiply_layer([Con97758,Loc22815], Mul27312), 
LThr14066 = thresholded_relu_layer(Mul27312, 9.514996048917007, Thr14066), 
exec_layers([LAve27319,LCon97758,LCro7386,LRes14081,LLoc22815,LMul27312,LThr14066],["Ave27319","Con97758","Cro7386","Res14081","Loc22815","Mul27312","Thr14066"],Thr14066,"Thr14066")

Actual (Unparsed): [[[[0.0000000, 0.0000000, 0.0000000, 0.0000000]]]]

Expected (Unparsed): [[[[0,0,0,0]]]]

Actual:   [[[[0, 0, 0, 0]]]]

Expected: [[[[0, 0, 0, 0]]]]