import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Ave36294 = tf.keras.layers.Input(shape=([1, 1]))
in1Ave36294 = tf.keras.layers.Input(shape=([1, 1]))
in0Con47391 = tf.keras.layers.Input(shape=([5, 3, 15]))
in0Up_90106 = tf.keras.layers.Input(shape=([3, 1, 1, 4]))
in0Min18868 = tf.keras.layers.Input(shape=([1, 2, 1]))
in1Min18868 = tf.keras.layers.Input(shape=([1, 2, 1]))
in0Sof99586 = tf.keras.layers.Input(shape=([1, 2, 1]))
in0Con45508 = tf.keras.layers.Input(shape=([5, 3, 15]))

Ave36294 = keras.layers.Average(name = 'Ave36294', )([in0Ave36294,in1Ave36294])
Sim35310 = keras.layers.SimpleRNN(1,name = 'Sim35310', )(Ave36294)
Res50046 = keras.layers.Reshape((1, 1), name = 'Res50046', )(Sim35310)
Res34240 = keras.layers.Reshape((1, 1, 1), name = 'Res34240', )(Res50046)
Zer35842 = keras.layers.ZeroPadding2D(padding=((4, 0), (2, 0)), name = 'Zer35842', )(Res34240)
Con47391 = keras.layers.Concatenate(axis=3, name = 'Con47391', )([Zer35842,in0Con47391])
Up_90106 = keras.layers.UpSampling3D(size=(1, 1, 2), name = 'Up_90106', )(in0Up_90106)
Zer4027 = keras.layers.ZeroPadding3D(padding=((1, 1), (1, 1), (1, 1)), name = 'Zer4027', )(Up_90106)
Res36021 = keras.layers.Reshape((5, 3, 16), name = 'Res36021', )(Zer4027)
Min18868 = keras.layers.Minimum(name = 'Min18868', )([in0Min18868,in1Min18868])
Sof99586 = keras.layers.Softmax(axis=1, name = 'Sof99586', input_shape=(1, 2, 1))(in0Sof99586)
Add92672 = keras.layers.Add(name = 'Add92672', )([Min18868,Sof99586])
Zer46418 = keras.layers.ZeroPadding2D(padding=((4, 0), (1, 0)), name = 'Zer46418', )(Add92672)
Con45508 = keras.layers.Concatenate(axis=3, name = 'Con45508', )([Zer46418,in0Con45508])
Min365 = keras.layers.Minimum(name = 'Min365', )([Res36021,Con45508])
Min99608 = keras.layers.Minimum(name = 'Min99608', )([Con47391,Min365])
model = tf.keras.models.Model(inputs=[in0Ave36294,in1Ave36294,in0Con47391,in0Up_90106,in0Min18868,in1Min18868,in0Sof99586,in0Con45508], outputs=Min99608)
w = model.get_layer('Sim35310').get_weights() 
w[0] = np.array([[4]])
w[1] = np.array([[4]])
w[2] = np.array([1])
model.get_layer('Sim35310').set_weights(w) 
in0Ave36294 = tf.constant([[[0.5524]]])
in1Ave36294 = tf.constant([[[0.9593]]])
in0Con47391 = tf.constant([[[[0.8732, 0.4697, 0.0075, 0.3787, 0.6938, 0.692, 0.5632, 0.0291, 0.2243, 0.8335, 0.7953, 0.3977, 0.9748, 0.1935, 0.8739], [0.5902, 0.5911, 0.6178, 0.0035, 0.9848, 0.6653, 0.5685, 0.8605, 0.7925, 0.4627, 0.9437, 0.1722, 0.5687, 0.16, 0.6754], [0.0424, 0.8283, 0.2148, 0.1944, 0.7898, 0.7403, 0.0397, 0.7009, 0.265, 0.9919, 0.2434, 0.8004, 0.8378, 0.302, 0.3196]], [[0.4751, 0.5049, 0.7366, 0.8119, 0.5476, 0.8585, 0.9345, 0.6645, 0.7647, 0.9802, 0.5846, 0.682, 0.3796, 0.6707, 0.0152], [0.7622, 0.6416, 0.8184, 0.5511, 0.8412, 0.9192, 0.1157, 0.3752, 0.2977, 0.2737, 0.7866, 0.9919, 0.8958, 0.1788, 0.4603], [0.0281, 0.2192, 0.7373, 0.8377, 0.0355, 0.9447, 0.1855, 0.3371, 0.1571, 0.236, 0.6964, 0.4762, 0.009, 0.0004, 0.4906]], [[0.3498, 0.8951, 0.7422, 0.0497, 0.1981, 0.5184, 0.2745, 0.7888, 0.7231, 0.6834, 0.6045, 0.889, 0.5086, 0.0939, 0.8925], [0.1176, 0.6266, 0.2424, 0.509, 0.3706, 0.2709, 0.5589, 0.8558, 0.361, 0.0501, 0.4427, 0.8052, 0.3446, 0.3911, 0.5351], [0.317, 0.0292, 0.3607, 0.6081, 0.0408, 0.8408, 0.0919, 0.7413, 0.4837, 0.5382, 0.9202, 0.0387, 0.6274, 0.7592, 0.2803]], [[0.9983, 0.7195, 0.4597, 0.3906, 0.7871, 0.3291, 0.3615, 0.762, 0.0987, 0.6561, 0.4669, 0.6086, 0.9742, 0.5162, 0.4134], [0.3072, 0.952, 0.3845, 0.9469, 0.1565, 0.1792, 0.3728, 0.0722, 0.8211, 0.6657, 0.0416, 0.5017, 0.0083, 0.689, 0.5031], [0.8711, 0.1241, 0.4718, 0.3577, 0.8136, 0.8817, 0.6419, 0.6253, 0.3946, 0.094, 0.6596, 0.9824, 0.5938, 0.1725, 0.3516]], [[0.2954, 0.4946, 0.1754, 0.9241, 0.6544, 0.5896, 0.6018, 0.3459, 0.8524, 0.1439, 0.5097, 0.791, 0.5323, 0.8718, 0.9549], [0.9052, 0.0263, 0.2757, 0.1896, 0.028, 0.2525, 0.8748, 0.5403, 0.1361, 0.8996, 0.2052, 0.3923, 0.2026, 0.5302, 0.9131], [0.2475, 0.8666, 0.1651, 0.4833, 0.3949, 0.7967, 0.3711, 0.1448, 0.3337, 0.8949, 0.8698, 0.2772, 0.7259, 0.5379, 0.2084]]]])
in0Up_90106 = tf.constant([[[[[1.8051, 1.6637, 1.0421, 1.421]]], [[[1.4018, 1.7296, 1.6951, 1.0321]]], [[[1.7027, 1.9864, 1.365, 1.5885]]]]])
in0Min18868 = tf.constant([[[[0.0291], [0.8188]]]])
in1Min18868 = tf.constant([[[[0.5161], [0.1044]]]])
in0Sof99586 = tf.constant([[[[0.1412], [0.1909]]]])
in0Con45508 = tf.constant([[[[0.1645, 0.6625, 0.246, 0.017, 0.7937, 0.7273, 0.8225, 0.763, 0.1447, 0.3661, 0.3084, 0.4532, 0.8764, 0.7102, 0.9187], [0.2464, 0.6764, 0.1831, 0.435, 0.2475, 0.7208, 0.3323, 0.8319, 0.0396, 0.3567, 0.6138, 0.95, 0.0134, 0.0495, 0.495], [0.0672, 0.264, 0.6113, 0.9693, 0.5238, 0.0143, 0.6032, 0.4671, 0.262, 0.3614, 0.5945, 0.1897, 0.2587, 0.6427, 0.651]], [[0.0931, 0.3452, 0.8688, 0.0249, 0.1054, 0.841, 0.4814, 0.5233, 0.6745, 0.7557, 0.1604, 0.4436, 0.4109, 0.0571, 0.5264], [0.2804, 0.4165, 0.6451, 0.361, 0.6343, 0.8709, 0.2268, 0.4059, 0.8807, 0.5855, 0.2416, 0.8893, 0.1932, 0.5283, 0.3539], [0.6754, 0.4615, 0.7729, 0.7989, 0.3389, 0.4864, 0.9336, 0.0435, 0.5222, 0.596, 0.9071, 0.8089, 0.6518, 0.4838, 0.6647]], [[0.4896, 0.4607, 0.6384, 0.911, 0.4002, 0.7932, 0.208, 0.6575, 0.0807, 0.8513, 0.523, 0.1483, 0.102, 0.3847, 0.7855], [0.1163, 0.4264, 0.3234, 0.6277, 0.0527, 0.3961, 0.0013, 0.339, 0.0234, 0.8549, 0.4366, 0.5671, 0.5852, 0.7345, 0.0909], [0.2094, 0.5176, 0.6822, 0.1604, 0.0281, 0.4146, 0.9482, 0.7229, 0.2459, 0.6621, 0.804, 0.0052, 0.0106, 0.9635, 0.2223]], [[0.6221, 0.1505, 0.369, 0.4105, 0.8866, 0.0872, 0.7175, 0.0636, 0.1962, 0.1191, 0.5025, 0.876, 0.055, 0.5456, 0.4393], [0.937, 0.5131, 0.2625, 0.4283, 0.123, 0.672, 0.5251, 0.1839, 0.4951, 0.4351, 0.5509, 0.5309, 0.0122, 0.8672, 0.5135], [0.2588, 0.5785, 0.3671, 0.265, 0.4653, 0.5584, 0.3548, 0.8147, 0.524, 0.411, 0.3267, 0.1963, 0.1658, 0.0249, 0.9452]], [[0.852, 0.6759, 0.6668, 0.2911, 0.0823, 0.8793, 0.1945, 0.5308, 0.42, 0.4102, 0.3344, 0.0303, 0.0156, 0.7439, 0.3703], [0.3793, 0.2484, 0.6079, 0.5538, 0.8821, 0.8152, 0.6807, 0.9057, 0.8178, 0.4904, 0.9393, 0.8522, 0.1764, 0.5988, 0.621], [0.3148, 0.6363, 0.0004, 0.5299, 0.4546, 0.2651, 0.0433, 0.335, 0.2643, 0.7966, 0.5124, 0.5837, 0.5938, 0.3669, 0.0725]]]])
print (np.array2string(model.predict([in0Ave36294,in1Ave36294,in0Con47391,in0Up_90106,in0Min18868,in1Min18868,in0Sof99586,in0Con45508],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Min99608.png')

LAve36294 = average_layer([[[[0.5524]]], [[[0.9593]]]], Ave36294), 
LSim35310 = simple_rnn_layer(Ave36294,[[4]],[[4]],[1], Sim35310), 
LRes50046 = reshape_layer(Sim35310, [1, 1], Res50046), 
LRes34240 = reshape_layer(Res50046, [1, 1, 1], Res34240), 
LZer35842 = zero_padding2D_layer(Res34240, 4, 0, 2, 0, Zer35842), 
LCon47391 = concatenate_layer([Zer35842,[[[[0.8732, 0.4697, 0.0075, 0.3787, 0.6938, 0.692, 0.5632, 0.0291, 0.2243, 0.8335, 0.7953, 0.3977, 0.9748, 0.1935, 0.8739], [0.5902, 0.5911, 0.6178, 0.0035, 0.9848, 0.6653, 0.5685, 0.8605, 0.7925, 0.4627, 0.9437, 0.1722, 0.5687, 0.16, 0.6754], [0.0424, 0.8283, 0.2148, 0.1944, 0.7898, 0.7403, 0.0397, 0.7009, 0.265, 0.9919, 0.2434, 0.8004, 0.8378, 0.302, 0.3196]], [[0.4751, 0.5049, 0.7366, 0.8119, 0.5476, 0.8585, 0.9345, 0.6645, 0.7647, 0.9802, 0.5846, 0.682, 0.3796, 0.6707, 0.0152], [0.7622, 0.6416, 0.8184, 0.5511, 0.8412, 0.9192, 0.1157, 0.3752, 0.2977, 0.2737, 0.7866, 0.9919, 0.8958, 0.1788, 0.4603], [0.0281, 0.2192, 0.7373, 0.8377, 0.0355, 0.9447, 0.1855, 0.3371, 0.1571, 0.236, 0.6964, 0.4762, 0.009, 0.0004, 0.4906]], [[0.3498, 0.8951, 0.7422, 0.0497, 0.1981, 0.5184, 0.2745, 0.7888, 0.7231, 0.6834, 0.6045, 0.889, 0.5086, 0.0939, 0.8925], [0.1176, 0.6266, 0.2424, 0.509, 0.3706, 0.2709, 0.5589, 0.8558, 0.361, 0.0501, 0.4427, 0.8052, 0.3446, 0.3911, 0.5351], [0.317, 0.0292, 0.3607, 0.6081, 0.0408, 0.8408, 0.0919, 0.7413, 0.4837, 0.5382, 0.9202, 0.0387, 0.6274, 0.7592, 0.2803]], [[0.9983, 0.7195, 0.4597, 0.3906, 0.7871, 0.3291, 0.3615, 0.762, 0.0987, 0.6561, 0.4669, 0.6086, 0.9742, 0.5162, 0.4134], [0.3072, 0.952, 0.3845, 0.9469, 0.1565, 0.1792, 0.3728, 0.0722, 0.8211, 0.6657, 0.0416, 0.5017, 0.0083, 0.689, 0.5031], [0.8711, 0.1241, 0.4718, 0.3577, 0.8136, 0.8817, 0.6419, 0.6253, 0.3946, 0.094, 0.6596, 0.9824, 0.5938, 0.1725, 0.3516]], [[0.2954, 0.4946, 0.1754, 0.9241, 0.6544, 0.5896, 0.6018, 0.3459, 0.8524, 0.1439, 0.5097, 0.791, 0.5323, 0.8718, 0.9549], [0.9052, 0.0263, 0.2757, 0.1896, 0.028, 0.2525, 0.8748, 0.5403, 0.1361, 0.8996, 0.2052, 0.3923, 0.2026, 0.5302, 0.9131], [0.2475, 0.8666, 0.1651, 0.4833, 0.3949, 0.7967, 0.3711, 0.1448, 0.3337, 0.8949, 0.8698, 0.2772, 0.7259, 0.5379, 0.2084]]]]], 3, Con47391), 
LUp_90106 = up_sampling3D_layer([[[[[1.8051, 1.6637, 1.0421, 1.421]]], [[[1.4018, 1.7296, 1.6951, 1.0321]]], [[[1.7027, 1.9864, 1.365, 1.5885]]]]], 1, 1, 2, Up_90106), 
LZer4027 = zero_padding3D_layer(Up_90106, 1, 1, 1, 1, 1, 1, Zer4027), 
LRes36021 = reshape_layer(Zer4027, [5, 3, 16], Res36021), 
LMin18868 = minimum_layer([[[[[0.0291], [0.8188]]]], [[[[0.5161], [0.1044]]]]], Min18868), 
LSof99586 = softmax_layer([[[[0.1412], [0.1909]]]], 1, Sof99586), 
LAdd92672 = add_layer([Min18868,Sof99586], Add92672), 
LZer46418 = zero_padding2D_layer(Add92672, 4, 0, 1, 0, Zer46418), 
LCon45508 = concatenate_layer([Zer46418,[[[[0.1645, 0.6625, 0.246, 0.017, 0.7937, 0.7273, 0.8225, 0.763, 0.1447, 0.3661, 0.3084, 0.4532, 0.8764, 0.7102, 0.9187], [0.2464, 0.6764, 0.1831, 0.435, 0.2475, 0.7208, 0.3323, 0.8319, 0.0396, 0.3567, 0.6138, 0.95, 0.0134, 0.0495, 0.495], [0.0672, 0.264, 0.6113, 0.9693, 0.5238, 0.0143, 0.6032, 0.4671, 0.262, 0.3614, 0.5945, 0.1897, 0.2587, 0.6427, 0.651]], [[0.0931, 0.3452, 0.8688, 0.0249, 0.1054, 0.841, 0.4814, 0.5233, 0.6745, 0.7557, 0.1604, 0.4436, 0.4109, 0.0571, 0.5264], [0.2804, 0.4165, 0.6451, 0.361, 0.6343, 0.8709, 0.2268, 0.4059, 0.8807, 0.5855, 0.2416, 0.8893, 0.1932, 0.5283, 0.3539], [0.6754, 0.4615, 0.7729, 0.7989, 0.3389, 0.4864, 0.9336, 0.0435, 0.5222, 0.596, 0.9071, 0.8089, 0.6518, 0.4838, 0.6647]], [[0.4896, 0.4607, 0.6384, 0.911, 0.4002, 0.7932, 0.208, 0.6575, 0.0807, 0.8513, 0.523, 0.1483, 0.102, 0.3847, 0.7855], [0.1163, 0.4264, 0.3234, 0.6277, 0.0527, 0.3961, 0.0013, 0.339, 0.0234, 0.8549, 0.4366, 0.5671, 0.5852, 0.7345, 0.0909], [0.2094, 0.5176, 0.6822, 0.1604, 0.0281, 0.4146, 0.9482, 0.7229, 0.2459, 0.6621, 0.804, 0.0052, 0.0106, 0.9635, 0.2223]], [[0.6221, 0.1505, 0.369, 0.4105, 0.8866, 0.0872, 0.7175, 0.0636, 0.1962, 0.1191, 0.5025, 0.876, 0.055, 0.5456, 0.4393], [0.937, 0.5131, 0.2625, 0.4283, 0.123, 0.672, 0.5251, 0.1839, 0.4951, 0.4351, 0.5509, 0.5309, 0.0122, 0.8672, 0.5135], [0.2588, 0.5785, 0.3671, 0.265, 0.4653, 0.5584, 0.3548, 0.8147, 0.524, 0.411, 0.3267, 0.1963, 0.1658, 0.0249, 0.9452]], [[0.852, 0.6759, 0.6668, 0.2911, 0.0823, 0.8793, 0.1945, 0.5308, 0.42, 0.4102, 0.3344, 0.0303, 0.0156, 0.7439, 0.3703], [0.3793, 0.2484, 0.6079, 0.5538, 0.8821, 0.8152, 0.6807, 0.9057, 0.8178, 0.4904, 0.9393, 0.8522, 0.1764, 0.5988, 0.621], [0.3148, 0.6363, 0.0004, 0.5299, 0.4546, 0.2651, 0.0433, 0.335, 0.2643, 0.7966, 0.5124, 0.5837, 0.5938, 0.3669, 0.0725]]]]], 3, Con45508), 
LMin365 = minimum_layer([Res36021,Con45508], Min365), 
LMin99608 = minimum_layer([Con47391,Min365], Min99608), 
exec_layers([LAve36294,LSim35310,LRes50046,LRes34240,LZer35842,LCon47391,LUp_90106,LZer4027,LRes36021,LMin18868,LSof99586,LAdd92672,LZer46418,LCon45508,LMin365,LMin99608],["Ave36294","Sim35310","Res50046","Res34240","Zer35842","Con47391","Up_90106","Zer4027","Res36021","Min18868","Sof99586","Add92672","Zer46418","Con45508","Min365","Min99608"],Min99608,"Min99608")

Actual (Unparsed): [[[[0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000]], [[0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.3610000, 0.6343000, 0.8709000, 0.1157000, 0.3752000, 0.2977000, 0.2737000, 0.2416000, 0.0000000, 0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000]], [[0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.5090000, 0.0527000, 0.2709000, 0.0013000, 0.3390000, 0.0234000, 0.0501000, 0.4366000, 0.0000000, 0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000]], [[0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.4283000, 0.1230000, 0.1792000, 0.3728000, 0.0722000, 0.4951000, 0.4351000, 0.0416000, 0.0000000, 0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000]], [[0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000]]]]

Expected (Unparsed): [[[[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]],[[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0.361,0.6343,0.8709,0.1157,0.3752,0.2977,0.2737,0.2416,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]],[[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0.509,0.0527,0.2709,0.0013,0.339,0.0234,0.0501,0.4366,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]],[[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0.4283,0.123,0.1792,0.3728,0.0722,0.4951,0.4351,0.0416,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]],[[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]]]]

Actual:   [[[[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]], [[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0.361, 0.6343, 0.8709, 0.1157, 0.3752, 0.2977, 0.2737, 0.2416, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]], [[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0.509, 0.0527, 0.2709, 0.0013, 0.339, 0.0234, 0.0501, 0.4366, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]], [[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0.4283, 0.123, 0.1792, 0.3728, 0.0722, 0.4951, 0.4351, 0.0416, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]], [[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]]]]

Expected: [[[[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]], [[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0.361, 0.6343, 0.8709, 0.1157, 0.3752, 0.2977, 0.2737, 0.2416, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]], [[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0.509, 0.0527, 0.2709, 0.0013, 0.339, 0.0234, 0.0501, 0.4366, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]], [[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0.4283, 0.123, 0.1792, 0.3728, 0.0722, 0.4951, 0.4351, 0.0416, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]], [[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]]]]