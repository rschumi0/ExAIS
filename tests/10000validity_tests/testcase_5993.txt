import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Dep97065 = tf.keras.layers.Input(shape=([2, 2, 1]))
in0Con34166 = tf.keras.layers.Input(shape=([1, 8]))
in0Lay78544 = tf.keras.layers.Input(shape=([3, 3, 3]))

Dep97065 = keras.layers.DepthwiseConv2D((2, 2),strides=(2, 2), padding='same', name = 'Dep97065', )(in0Dep97065)
Res77817 = keras.layers.Reshape((1, 1), name = 'Res77817', )(Dep97065)
Con34166 = keras.layers.Concatenate(axis=2, name = 'Con34166', )([Res77817,in0Con34166])
Lay78544 = keras.layers.LayerNormalization(axis=1, epsilon=1.513863634558804, name = 'Lay78544', )(in0Lay78544)
Res53519 = keras.layers.Reshape((3, 9), name = 'Res53519', )(Lay78544)
Cro94346 = keras.layers.Cropping1D(cropping=((2, 0)), name = 'Cro94346', )(Res53519)
Add29825 = keras.layers.Add(name = 'Add29825', )([Con34166,Cro94346])
Sim19622 = keras.layers.SimpleRNN(2,name = 'Sim19622', )(Add29825)
model = tf.keras.models.Model(inputs=[in0Dep97065,in0Con34166,in0Lay78544], outputs=Sim19622)
w = model.get_layer('Dep97065').get_weights() 
w[0] = np.array([[[[0.7843]], [[0.3555]]], [[[0.6089]], [[0.3479]]]])
w[1] = np.array([0])
model.get_layer('Dep97065').set_weights(w) 
w = model.get_layer('Sim19622').get_weights() 
w[0] = np.array([[10, 3], [4, 4], [4, 7], [3, 4], [5, 1], [6, 8], [4, 3], [1, 3], [8, 5]])
w[1] = np.array([[7, 3], [9, 9]])
w[2] = np.array([3, 3])
model.get_layer('Sim19622').set_weights(w) 
in0Dep97065 = tf.constant([[[[0.7225], [0.4022]], [[0.8804], [0.0281]]]])
in0Con34166 = tf.constant([[[0.1562, 0.2941, 0.2512, 0.2513, 0.9721, 0.2332, 0.6685, 0.7269]]])
in0Lay78544 = tf.constant([[[[1.6972, 1.2758, 1.4262], [1.1475, 1.2744, 1.9163], [1.8976, 1.2899, 1.0063]], [[1.4386, 1.4845, 1.7036], [1.1088, 1.3221, 1.6764], [1.2354, 1.0445, 1.6311]], [[1.8963, 1.7497, 1.5552], [1.2139, 1.6819, 1.5638], [1.4371, 1.2587, 1.6419]]]])
print (np.array2string(model.predict([in0Dep97065,in0Con34166,in0Lay78544],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Sim19622.png')

LDep97065 = depthwise_conv2D_layer([[[[0.7225], [0.4022]], [[0.8804], [0.0281]]]], 2, 2,[[[[0.7843]], [[0.3555]]], [[[0.6089]], [[0.3479]]]],[0], 2, 2, true, Dep97065), 
LRes77817 = reshape_layer(Dep97065, [1, 1], Res77817), 
LCon34166 = concatenate_layer([Res77817,[[[0.1562, 0.2941, 0.2512, 0.2513, 0.9721, 0.2332, 0.6685, 0.7269]]]], 2, Con34166), 
LLay78544 = layer_normalization_layer([[[[1.6972, 1.2758, 1.4262], [1.1475, 1.2744, 1.9163], [1.8976, 1.2899, 1.0063]], [[1.4386, 1.4845, 1.7036], [1.1088, 1.3221, 1.6764], [1.2354, 1.0445, 1.6311]], [[1.8963, 1.7497, 1.5552], [1.2139, 1.6819, 1.5638], [1.4371, 1.2587, 1.6419]]]], 1, 1.513863634558804, Lay78544), 
LRes53519 = reshape_layer(Lay78544, [3, 9], Res53519), 
LCro94346 = cropping1D_layer(Res53519, 2, 0, Cro94346), 
LAdd29825 = add_layer([Con34166,Cro94346], Add29825), 
LSim19622 = simple_rnn_layer(Add29825,[[10, 3], [4, 4], [4, 7], [3, 4], [5, 1], [6, 8], [4, 3], [1, 3], [8, 5]],[[7, 3], [9, 9]],[3, 3], Sim19622), 
exec_layers([LDep97065,LRes77817,LCon34166,LLay78544,LRes53519,LCro94346,LAdd29825,LSim19622],["Dep97065","Res77817","Con34166","Lay78544","Res53519","Cro94346","Add29825","Sim19622"],Sim19622,"Sim19622")

Actual (Unparsed): [[1.0000000, 1.0000000]]

Expected (Unparsed): [[1.0,1.0]]

Actual:   [[1, 1]]

Expected: [[1, 1]]