import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0LST73609 = tf.keras.layers.Input(shape=([2, 1]))
in0Con97929 = tf.keras.layers.Input(shape=([3, 3, 2, 1]))
in0Max85681 = tf.keras.layers.Input(shape=([1, 1, 2]))
in1Max85681 = tf.keras.layers.Input(shape=([1, 1, 2]))
in0Con93448 = tf.keras.layers.Input(shape=([3, 3, 2, 1]))
in0Sub10453 = tf.keras.layers.Input(shape=([3, 3, 2, 2]))
in1Sub10453 = tf.keras.layers.Input(shape=([3, 3, 2, 2]))
in0Con60325 = tf.keras.layers.Input(shape=([12, 5, 1]))
in0Mul953 = tf.keras.layers.Input(shape=([2, 1, 1]))
in1Mul953 = tf.keras.layers.Input(shape=([2, 1, 1]))
in0Add73794 = tf.keras.layers.Input(shape=([2, 1, 1]))
in1Add73794 = tf.keras.layers.Input(shape=([2, 1, 1]))
in0Con21636 = tf.keras.layers.Input(shape=([2, 3, 1]))
in0Ave32428 = tf.keras.layers.Input(shape=([1, 2, 2]))
in1Ave32428 = tf.keras.layers.Input(shape=([1, 2, 2]))

LST73609 = keras.layers.LSTM(3,recurrent_activation='sigmoid', name = 'LST73609', )(in0LST73609)
Res8320 = keras.layers.Reshape((3, 1), name = 'Res8320', )(LST73609)
Res96970 = keras.layers.Reshape((3, 1, 1), name = 'Res96970', )(Res8320)
Res57462 = keras.layers.Reshape((3, 1, 1, 1), name = 'Res57462', )(Res96970)
Zer85257 = keras.layers.ZeroPadding3D(padding=((0, 0), (2, 0), (1, 0)), name = 'Zer85257', )(Res57462)
Con97929 = keras.layers.Concatenate(axis=4, name = 'Con97929', )([Zer85257,in0Con97929])
Max85681 = keras.layers.Maximum(name = 'Max85681', )([in0Max85681,in1Max85681])
Res83970 = keras.layers.Reshape((1, 1, 2, 1), name = 'Res83970', )(Max85681)
Zer44314 = keras.layers.ZeroPadding3D(padding=((2, 0), (2, 0), (0, 0)), name = 'Zer44314', )(Res83970)
Con93448 = keras.layers.Concatenate(axis=4, name = 'Con93448', )([Zer44314,in0Con93448])
Sub10453 = keras.layers.Subtract(name = 'Sub10453', )([in0Sub10453,in1Sub10453])
Add22129 = keras.layers.Add(name = 'Add22129', )([Con93448,Sub10453])
Min55697 = keras.layers.Minimum(name = 'Min55697', )([Con97929,Add22129])
Res31073 = keras.layers.Reshape((3, 3, 4), name = 'Res31073', )(Min55697)
Res2401 = keras.layers.Reshape((3, 12), name = 'Res2401', )(Res31073)
Glo4562 = keras.layers.GlobalMaxPool1D(name = 'Glo4562', )(Res2401)
Res7922 = keras.layers.Reshape((12, 1), name = 'Res7922', )(Glo4562)
Res86121 = keras.layers.Reshape((12, 1, 1), name = 'Res86121', )(Res7922)
Zer5157 = keras.layers.ZeroPadding2D(padding=((0, 0), (4, 0)), name = 'Zer5157', )(Res86121)
Con60325 = keras.layers.Concatenate(axis=3, name = 'Con60325', )([Zer5157,in0Con60325])
Mul953 = keras.layers.Multiply(name = 'Mul953', )([in0Mul953,in1Mul953])
Add73794 = keras.layers.Add(name = 'Add73794', )([in0Add73794,in1Add73794])
Mul33637 = keras.layers.Multiply(name = 'Mul33637', )([Mul953,Add73794])
Zer3869 = keras.layers.ZeroPadding2D(padding=((0, 0), (2, 0)), name = 'Zer3869', )(Mul33637)
Con21636 = keras.layers.Concatenate(axis=3, name = 'Con21636', )([Zer3869,in0Con21636])
Ave32428 = keras.layers.Average(name = 'Ave32428', )([in0Ave32428,in1Ave32428])
Zer88040 = keras.layers.ZeroPadding2D(padding=((1, 0), (1, 0)), name = 'Zer88040', )(Ave32428)
Max31100 = keras.layers.Maximum(name = 'Max31100', )([Con21636,Zer88040])
Zer42184 = keras.layers.ZeroPadding2D(padding=((10, 0), (2, 0)), name = 'Zer42184', )(Max31100)
Mul89461 = keras.layers.Multiply(name = 'Mul89461', )([Con60325,Zer42184])
model = tf.keras.models.Model(inputs=[in0LST73609,in0Con97929,in0Max85681,in1Max85681,in0Con93448,in0Sub10453,in1Sub10453,in0Con60325,in0Mul953,in1Mul953,in0Add73794,in1Add73794,in0Con21636,in0Ave32428,in1Ave32428], outputs=Mul89461)
w = model.get_layer('LST73609').get_weights() 
w[0] = np.array([[10, 4, 2, 6, 4, 8, 2, 9, 7, 8, 7, 7]])
w[1] = np.array([[1, 7, 10, 4, 4, 4, 9, 6, 3, 1, 10, 3], [6, 1, 4, 1, 5, 4, 3, 5, 2, 6, 2, 5], [10, 9, 9, 2, 7, 5, 10, 8, 9, 9, 5, 5]])
w[2] = np.array([6, 3, 7, 8, 8, 1, 9, 9, 1, 6, 4, 10])
model.get_layer('LST73609').set_weights(w) 
in0LST73609 = tf.constant([[[2], [9]]])
in0Con97929 = tf.constant([[[[[0.3003], [0.9326]], [[0.7588], [0.727]], [[0.472], [0.9178]]], [[[0.1443], [0.1299]], [[0.4199], [0.4684]], [[0.0092], [0.7936]]], [[[0.3282], [0.7696]], [[0.8025], [0.763]], [[0.0575], [0.0596]]]]])
in0Max85681 = tf.constant([[[[0.2553, 0.1108]]]])
in1Max85681 = tf.constant([[[[0.275, 0.4658]]]])
in0Con93448 = tf.constant([[[[[0.2702], [0.1354]], [[0.3408], [0.6456]], [[0.615], [0.8377]]], [[[0.1797], [0.6343]], [[0.7802], [0.8669]], [[0.1742], [0.7377]]], [[[0.108], [0.0607]], [[0.4623], [0.0685]], [[0.4491], [0.3008]]]]])
in0Sub10453 = tf.constant([[[[[0.4248, 0.4505], [0.1171, 0.3782]], [[0.7619, 0.911], [0.5156, 0.9176]], [[0.8433, 0.9041], [0.8149, 0.1469]]], [[[0.5025, 0.3181], [0.3225, 0.7126]], [[0.0327, 0.8659], [0.946, 0.9756]], [[0.9031, 0.8333], [0.5278, 0.0651]]], [[[0.1971, 0.1078], [0.1482, 0.1905]], [[0.9254, 0.4086], [0.371, 0.9743]], [[0.081, 0.7096], [0.3918, 0.5349]]]]])
in1Sub10453 = tf.constant([[[[[0.8069, 0.9494], [0.314, 0.5369]], [[0.3303, 0.2565], [0.3294, 0.4542]], [[0.3779, 0.0825], [0.4028, 0.8453]]], [[[0.6344, 0.833], [0.1785, 0.5286]], [[0.4295, 0.8138], [0.2109, 0.1606]], [[0.2492, 0.5661], [0.2979, 0.873]]], [[[0.8525, 0.959], [0.6509, 0.3037]], [[0.7465, 0.724], [0.8668, 0.5671]], [[0.5228, 0.4732], [0.1876, 0.4553]]]]])
in0Con60325 = tf.constant([[[[0.8247], [0.8542], [0.8183], [0.6806], [0.1461]], [[0.6057], [0.5072], [0.6077], [0.0102], [0.2923]], [[0.3162], [0.1141], [0.0582], [0.8816], [0.646]], [[0.4385], [0.4964], [0.4722], [0.7809], [0.5363]], [[0.0794], [0.3005], [0.7581], [0.8845], [0.366]], [[0.6551], [0.0348], [0.7036], [0.459], [0.1816]], [[0.991], [0.9211], [0.1621], [0.1321], [0.2895]], [[0.1675], [0.9859], [0.2161], [0.3816], [0.5862]], [[0.7186], [0.8444], [0.9971], [0.2642], [0.3393]], [[0.7194], [0.2818], [0.6457], [0.8987], [0.9262]], [[0.3602], [0.3785], [0.6141], [0.9019], [0.4919]], [[0.6595], [0.8381], [0.9223], [0.6596], [0.2975]]]])
in0Mul953 = tf.constant([[[[0.0903]], [[0.6225]]]])
in1Mul953 = tf.constant([[[[0.329]], [[0.4344]]]])
in0Add73794 = tf.constant([[[[0.1542]], [[0.0599]]]])
in1Add73794 = tf.constant([[[[0.2391]], [[0.8051]]]])
in0Con21636 = tf.constant([[[[0.9267], [0.1464], [0.7202]], [[0.1023], [0.6194], [0.927]]]])
in0Ave32428 = tf.constant([[[[0.3842, 0.843], [0.5095, 0.7359]]]])
in1Ave32428 = tf.constant([[[[0.5914, 0.6873], [0.8003, 0.7436]]]])
print (np.array2string(model.predict([in0LST73609,in0Con97929,in0Max85681,in1Max85681,in0Con93448,in0Sub10453,in1Sub10453,in0Con60325,in0Mul953,in1Mul953,in0Add73794,in1Add73794,in0Con21636,in0Ave32428,in1Ave32428],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Mul89461.png')

LLST73609 = lstm_layer([[[2], [9]]],[[10, 4, 2, 6, 4, 8, 2, 9, 7, 8, 7, 7]],[[1, 7, 10, 4, 4, 4, 9, 6, 3, 1, 10, 3], [6, 1, 4, 1, 5, 4, 3, 5, 2, 6, 2, 5], [10, 9, 9, 2, 7, 5, 10, 8, 9, 9, 5, 5]],[6, 3, 7, 8, 8, 1, 9, 9, 1, 6, 4, 10], LST73609), 
LRes8320 = reshape_layer(LST73609, [3, 1], Res8320), 
LRes96970 = reshape_layer(Res8320, [3, 1, 1], Res96970), 
LRes57462 = reshape_layer(Res96970, [3, 1, 1, 1], Res57462), 
LZer85257 = zero_padding3D_layer(Res57462, 0, 0, 2, 0, 1, 0, Zer85257), 
LCon97929 = concatenate_layer([Zer85257,[[[[[0.3003], [0.9326]], [[0.7588], [0.727]], [[0.472], [0.9178]]], [[[0.1443], [0.1299]], [[0.4199], [0.4684]], [[0.0092], [0.7936]]], [[[0.3282], [0.7696]], [[0.8025], [0.763]], [[0.0575], [0.0596]]]]]], 4, Con97929), 
LMax85681 = maximum_layer([[[[[0.2553, 0.1108]]]], [[[[0.275, 0.4658]]]]], Max85681), 
LRes83970 = reshape_layer(Max85681, [1, 1, 2, 1], Res83970), 
LZer44314 = zero_padding3D_layer(Res83970, 2, 0, 2, 0, 0, 0, Zer44314), 
LCon93448 = concatenate_layer([Zer44314,[[[[[0.2702], [0.1354]], [[0.3408], [0.6456]], [[0.615], [0.8377]]], [[[0.1797], [0.6343]], [[0.7802], [0.8669]], [[0.1742], [0.7377]]], [[[0.108], [0.0607]], [[0.4623], [0.0685]], [[0.4491], [0.3008]]]]]], 4, Con93448), 
LSub10453 = subtract_layer([[[[[0.4248, 0.4505], [0.1171, 0.3782]], [[0.7619, 0.911], [0.5156, 0.9176]], [[0.8433, 0.9041], [0.8149, 0.1469]]], [[[0.5025, 0.3181], [0.3225, 0.7126]], [[0.0327, 0.8659], [0.946, 0.9756]], [[0.9031, 0.8333], [0.5278, 0.0651]]], [[[0.1971, 0.1078], [0.1482, 0.1905]], [[0.9254, 0.4086], [0.371, 0.9743]], [[0.081, 0.7096], [0.3918, 0.5349]]]]], [[[[[0.8069, 0.9494], [0.314, 0.5369]], [[0.3303, 0.2565], [0.3294, 0.4542]], [[0.3779, 0.0825], [0.4028, 0.8453]]], [[[0.6344, 0.833], [0.1785, 0.5286]], [[0.4295, 0.8138], [0.2109, 0.1606]], [[0.2492, 0.5661], [0.2979, 0.873]]], [[[0.8525, 0.959], [0.6509, 0.3037]], [[0.7465, 0.724], [0.8668, 0.5671]], [[0.5228, 0.4732], [0.1876, 0.4553]]]]], Sub10453), 
LAdd22129 = add_layer([Con93448,Sub10453], Add22129), 
LMin55697 = minimum_layer([Con97929,Add22129], Min55697), 
LRes31073 = reshape_layer(Min55697, [3, 3, 4], Res31073), 
LRes2401 = reshape_layer(Res31073, [3, 12], Res2401), 
LGlo4562 = global_max_pool1D_layer(Res2401, Glo4562), 
LRes7922 = reshape_layer(Glo4562, [12, 1], Res7922), 
LRes86121 = reshape_layer(Res7922, [12, 1, 1], Res86121), 
LZer5157 = zero_padding2D_layer(Res86121, 0, 0, 4, 0, Zer5157), 
LCon60325 = concatenate_layer([Zer5157,[[[[0.8247], [0.8542], [0.8183], [0.6806], [0.1461]], [[0.6057], [0.5072], [0.6077], [0.0102], [0.2923]], [[0.3162], [0.1141], [0.0582], [0.8816], [0.646]], [[0.4385], [0.4964], [0.4722], [0.7809], [0.5363]], [[0.0794], [0.3005], [0.7581], [0.8845], [0.366]], [[0.6551], [0.0348], [0.7036], [0.459], [0.1816]], [[0.991], [0.9211], [0.1621], [0.1321], [0.2895]], [[0.1675], [0.9859], [0.2161], [0.3816], [0.5862]], [[0.7186], [0.8444], [0.9971], [0.2642], [0.3393]], [[0.7194], [0.2818], [0.6457], [0.8987], [0.9262]], [[0.3602], [0.3785], [0.6141], [0.9019], [0.4919]], [[0.6595], [0.8381], [0.9223], [0.6596], [0.2975]]]]], 3, Con60325), 
LMul953 = multiply_layer([[[[[0.0903]], [[0.6225]]]], [[[[0.329]], [[0.4344]]]]], Mul953), 
LAdd73794 = add_layer([[[[[0.1542]], [[0.0599]]]], [[[[0.2391]], [[0.8051]]]]], Add73794), 
LMul33637 = multiply_layer([Mul953,Add73794], Mul33637), 
LZer3869 = zero_padding2D_layer(Mul33637, 0, 0, 2, 0, Zer3869), 
LCon21636 = concatenate_layer([Zer3869,[[[[0.9267], [0.1464], [0.7202]], [[0.1023], [0.6194], [0.927]]]]], 3, Con21636), 
LAve32428 = average_layer([[[[[0.3842, 0.843], [0.5095, 0.7359]]]], [[[[0.5914, 0.6873], [0.8003, 0.7436]]]]], Ave32428), 
LZer88040 = zero_padding2D_layer(Ave32428, 1, 0, 1, 0, Zer88040), 
LMax31100 = maximum_layer([Con21636,Zer88040], Max31100), 
LZer42184 = zero_padding2D_layer(Max31100, 10, 0, 2, 0, Zer42184), 
LMul89461 = multiply_layer([Con60325,Zer42184], Mul89461), 
exec_layers([LLST73609,LRes8320,LRes96970,LRes57462,LZer85257,LCon97929,LMax85681,LRes83970,LZer44314,LCon93448,LSub10453,LAdd22129,LMin55697,LRes31073,LRes2401,LGlo4562,LRes7922,LRes86121,LZer5157,LCon60325,LMul953,LAdd73794,LMul33637,LZer3869,LCon21636,LAve32428,LZer88040,LMax31100,LZer42184,LMul89461],["LST73609","Res8320","Res96970","Res57462","Zer85257","Con97929","Max85681","Res83970","Zer44314","Con93448","Sub10453","Add22129","Min55697","Res31073","Res2401","Glo4562","Res7922","Res86121","Zer5157","Con60325","Mul953","Add73794","Mul33637","Zer3869","Con21636","Ave32428","Zer88040","Max31100","Zer42184","Mul89461"],Mul89461,"Mul89461")

Actual (Unparsed): [[[[0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000], [-0.0000000, 0.0000000]], [[0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000], [-0.0000000, 0.0000000]], [[0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000]], [[0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000]], [[0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000]], [[0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000]], [[0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000]], [[0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000]], [[0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000]], [[0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000]], [[0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.5690864], [0.0000000, 0.1320382], [0.0078286, 0.3542664]], [[0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0943513], [0.0000000, 0.5046930], [0.0912276, 0.2757825]]]]

Expected (Unparsed): [[[[0,0.0],[0,0.0],[0,0.0],[0,0.0],[-0.0,0.0]],[[0,0.0],[0,0.0],[0,0.0],[0,0.0],[-0.0,0.0]],[[0,0.0],[0,0.0],[0,0.0],[0,0.0],[0,0.0]],[[0,0.0],[0,0.0],[0,0.0],[0,0.0],[0.0,0.0]],[[0,0.0],[0,0.0],[0,0.0],[0,0.0],[0,0.0]],[[0,0.0],[0,0.0],[0,0.0],[0,0.0],[0.0,0.0]],[[0,0.0],[0,0.0],[0,0.0],[0,0.0],[0,0.0]],[[0,0.0],[0,0.0],[0,0.0],[0,0.0],[0.0,0.0]],[[0,0.0],[0,0.0],[0,0.0],[0,0.0],[0,0.0]],[[0,0.0],[0,0.0],[0,0.0],[0,0.0],[0.0,0.0]],[[0,0.0],[0,0.0],[0,0.56908647],[0,0.13203816000000002],[0.0078285692457,0.35426638]],[[0,0.0],[0,0.0],[0,0.09435129],[0.0,0.50469294],[0.09122757,0.2757825]]]]

Actual:   [[[[0, 0], [0, 0], [0, 0], [0, 0], [-0, 0]], [[0, 0], [0, 0], [0, 0], [0, 0], [-0, 0]], [[0, 0], [0, 0], [0, 0], [0, 0], [0, 0]], [[0, 0], [0, 0], [0, 0], [0, 0], [0, 0]], [[0, 0], [0, 0], [0, 0], [0, 0], [0, 0]], [[0, 0], [0, 0], [0, 0], [0, 0], [0, 0]], [[0, 0], [0, 0], [0, 0], [0, 0], [0, 0]], [[0, 0], [0, 0], [0, 0], [0, 0], [0, 0]], [[0, 0], [0, 0], [0, 0], [0, 0], [0, 0]], [[0, 0], [0, 0], [0, 0], [0, 0], [0, 0]], [[0, 0], [0, 0], [0, 0.5691], [0, 0.1321], [0.0079, 0.3543]], [[0, 0], [0, 0], [0, 0.0944], [0, 0.5047], [0.0913, 0.2758]]]]

Expected: [[[[0, 0], [0, 0], [0, 0], [0, 0], [-0, 0]], [[0, 0], [0, 0], [0, 0], [0, 0], [-0, 0]], [[0, 0], [0, 0], [0, 0], [0, 0], [0, 0]], [[0, 0], [0, 0], [0, 0], [0, 0], [0, 0]], [[0, 0], [0, 0], [0, 0], [0, 0], [0, 0]], [[0, 0], [0, 0], [0, 0], [0, 0], [0, 0]], [[0, 0], [0, 0], [0, 0], [0, 0], [0, 0]], [[0, 0], [0, 0], [0, 0], [0, 0], [0, 0]], [[0, 0], [0, 0], [0, 0], [0, 0], [0, 0]], [[0, 0], [0, 0], [0, 0], [0, 0], [0, 0]], [[0, 0], [0, 0], [0, 0.5691], [0, 0.1321], [0.0079, 0.3543]], [[0, 0], [0, 0], [0, 0.0944], [0, 0.5047], [0.0913, 0.2758]]]]