import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Dot66174 = tf.keras.layers.Input(shape=([3]))
in1Dot66174 = tf.keras.layers.Input(shape=([3]))

Dot66174 = keras.layers.Dot(axes=(1, 1), name = 'Dot66174', )([in0Dot66174,in1Dot66174])
Res71105 = keras.layers.Reshape((1, 1), name = 'Res71105', )(Dot66174)
Res95889 = keras.layers.Reshape((1, 1, 1), name = 'Res95889', )(Res71105)
Con14489 = keras.layers.Conv2DTranspose(3, (1, 1),strides=(1, 1), padding='same', name = 'Con14489', )(Res95889)
model = tf.keras.models.Model(inputs=[in0Dot66174,in1Dot66174], outputs=Con14489)
w = model.get_layer('Con14489').get_weights() 
w[0] = np.array([[[[0.2485], [0.6827], [0.6566]]]])
w[1] = np.array([0, 0, 0])
model.get_layer('Con14489').set_weights(w) 
in0Dot66174 = tf.constant([[0.5821, 0.8507, 0.2756]])
in1Dot66174 = tf.constant([[0.6642, 0.9142, 0.8298]])
print (np.array2string(model.predict([in0Dot66174,in1Dot66174],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Con14489.png')

LDot66174 = dot_layer([[0.5821, 0.8507, 0.2756]], [[0.6642, 0.9142, 0.8298]], 1, 1, Dot66174), 
LRes71105 = reshape_layer(Dot66174, [1, 1], Res71105), 
LRes95889 = reshape_layer(Res71105, [1, 1, 1], Res95889), 
LCon14489 = conv2D_transpose_layer(Res95889, 1, 1,[[[[0.2485], [0.6827], [0.6566]]]],[0, 0, 0], 1, 1, true, Con14489), 
exec_layers([LDot66174,LRes71105,LRes95889,LCon14489],["Dot66174","Res71105","Res95889","Con14489"],Con14489,"Con14489")

Actual (Unparsed): [[[[0.3461689, 0.9510241, 0.9146659]]]]

Expected (Unparsed): [[[[0.34616885954000004,0.951024066028,0.914665888024]]]]

Actual:   [[[[0.3462, 0.9511, 0.9147]]]]

Expected: [[[[0.3462, 0.9511, 0.9147]]]]