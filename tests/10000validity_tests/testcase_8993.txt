import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Sub7762 = tf.keras.layers.Input(shape=([3, 3]))
in1Sub7762 = tf.keras.layers.Input(shape=([3, 3]))
in0Max5020 = tf.keras.layers.Input(shape=([2, 1, 1]))
in1Max5020 = tf.keras.layers.Input(shape=([2, 1, 1]))
in0Con57120 = tf.keras.layers.Input(shape=([2, 5, 3]))

Sub7762 = keras.layers.Subtract(name = 'Sub7762', )([in0Sub7762,in1Sub7762])
Res94974 = keras.layers.Reshape((3, 3, 1), name = 'Res94974', )(Sub7762)
Con35220 = keras.layers.Conv2D(4, (3, 1),strides=(1, 1), padding='valid', dilation_rate=(1, 1), name = 'Con35220', )(Res94974)
Zer80709 = keras.layers.ZeroPadding2D(padding=((1, 0), (2, 0)), name = 'Zer80709', )(Con35220)
Max5020 = keras.layers.Maximum(name = 'Max5020', )([in0Max5020,in1Max5020])
Zer29072 = keras.layers.ZeroPadding2D(padding=((0, 0), (4, 0)), name = 'Zer29072', )(Max5020)
Con57120 = keras.layers.Concatenate(axis=3, name = 'Con57120', )([Zer29072,in0Con57120])
Max89091 = keras.layers.Maximum(name = 'Max89091', )([Zer80709,Con57120])
model = tf.keras.models.Model(inputs=[in0Sub7762,in1Sub7762,in0Max5020,in1Max5020,in0Con57120], outputs=Max89091)
w = model.get_layer('Con35220').get_weights() 
w[0] = np.array([[[[0.7972, 0.2537, 0.1575, 0.861]]], [[[0.7041, 0.4419, 0.5492, 0.48]]], [[[0.0247, 0.1323, 0.2936, 0.1453]]]])
w[1] = np.array([0, 0, 0, 0])
model.get_layer('Con35220').set_weights(w) 
in0Sub7762 = tf.constant([[[0.9465, 0.851, 0.0624], [0.0951, 0.4294, 0.2826], [0.4979, 0.7491, 0.2921]]])
in1Sub7762 = tf.constant([[[0.054, 0.7978, 0.0581], [0.0163, 0.4461, 0.1974], [0.9449, 0.5072, 0.3415]]])
in0Max5020 = tf.constant([[[[0.8713]], [[0.7546]]]])
in1Max5020 = tf.constant([[[[0.3928]], [[0.3669]]]])
in0Con57120 = tf.constant([[[[0.861, 0.1278, 0.4058], [0.5293, 0.3757, 0.9905], [0.5674, 0.6706, 0.1646], [0.5493, 0.1618, 0.7559], [0.5486, 0.6652, 0.5254]], [[0.816, 0.3778, 0.1911], [0.6525, 0.2487, 0.8155], [0.9753, 0.1456, 0.0613], [0.6216, 0.5172, 0.5433], [0.8617, 0.5039, 0.6369]]]])
print (np.array2string(model.predict([in0Sub7762,in1Sub7762,in0Max5020,in1Max5020,in0Con57120],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Max89091.png')

LSub7762 = subtract_layer([[[0.9465, 0.851, 0.0624], [0.0951, 0.4294, 0.2826], [0.4979, 0.7491, 0.2921]]], [[[0.054, 0.7978, 0.0581], [0.0163, 0.4461, 0.1974], [0.9449, 0.5072, 0.3415]]], Sub7762), 
LRes94974 = reshape_layer(Sub7762, [3, 3, 1], Res94974), 
LCon35220 = conv2D_layer(Res94974, 3, 1,[[[[0.7972, 0.2537, 0.1575, 0.861]]], [[[0.7041, 0.4419, 0.5492, 0.48]]], [[[0.0247, 0.1323, 0.2936, 0.1453]]]],[0, 0, 0, 0], 1, 1, false, 1, 1, Con35220), 
LZer80709 = zero_padding2D_layer(Con35220, 1, 0, 2, 0, Zer80709), 
LMax5020 = maximum_layer([[[[[0.8713]], [[0.7546]]]], [[[[0.3928]], [[0.3669]]]]], Max5020), 
LZer29072 = zero_padding2D_layer(Max5020, 0, 0, 4, 0, Zer29072), 
LCon57120 = concatenate_layer([Zer29072,[[[[0.861, 0.1278, 0.4058], [0.5293, 0.3757, 0.9905], [0.5674, 0.6706, 0.1646], [0.5493, 0.1618, 0.7559], [0.5486, 0.6652, 0.5254]], [[0.816, 0.3778, 0.1911], [0.6525, 0.2487, 0.8155], [0.9753, 0.1456, 0.0613], [0.6216, 0.5172, 0.5433], [0.8617, 0.5039, 0.6369]]]]], 3, Con57120), 
LMax89091 = maximum_layer([Zer80709,Con57120], Max89091), 
exec_layers([LSub7762,LRes94974,LCon35220,LZer80709,LMax5020,LZer29072,LCon57120,LMax89091],["Sub7762","Res94974","Con35220","Zer80709","Max5020","Zer29072","Con57120","Max89091"],Max89091,"Max89091")

Actual (Unparsed): [[[[0.0000000, 0.8610000, 0.1278000, 0.4058000], [0.0000000, 0.5293000, 0.3757000, 0.9905000], [0.0000000, 0.5674000, 0.6706000, 0.1646000], [0.0000000, 0.5493000, 0.1618000, 0.7559000], [0.8713000, 0.5486000, 0.6652000, 0.5254000]], [[0.0000000, 0.8160000, 0.3778000, 0.1911000], [0.0000000, 0.6525000, 0.2487000, 0.8155000], [0.7559432, 0.9753000, 0.1456000, 0.7413174], [0.0366275, 0.6216000, 0.5172000, 0.5433000], [0.7546000, 0.8617000, 0.5039000, 0.6369000]]]]

Expected (Unparsed): [[[[0,0.861,0.1278,0.4058],[0,0.5293,0.3757,0.9905],[0,0.5674,0.6706,0.1646],[0,0.5493,0.1618,0.7559],[0.8713,0.5486,0.6652,0.5254]],[[0,0.816,0.3778,0.1911],[0,0.6525,0.2487,0.8155],[0.7559431799999999,0.9753,0.1456,0.7413173999999999],[0.03662750000000002,0.6216,0.5172,0.5433],[0.7546,0.8617,0.5039,0.6369]]]]

Actual:   [[[[0, 0.861, 0.1278, 0.4058], [0, 0.5293, 0.3757, 0.9905], [0, 0.5674, 0.6706, 0.1646], [0, 0.5493, 0.1618, 0.7559], [0.8713, 0.5486, 0.6652, 0.5254]], [[0, 0.816, 0.3778, 0.1911], [0, 0.6525, 0.2487, 0.8155], [0.756, 0.9753, 0.1456, 0.7414], [0.0367, 0.6216, 0.5172, 0.5433], [0.7546, 0.8617, 0.5039, 0.6369]]]]

Expected: [[[[0, 0.861, 0.1278, 0.4058], [0, 0.5293, 0.3757, 0.9905], [0, 0.5674, 0.6706, 0.1646], [0, 0.5493, 0.1618, 0.7559], [0.8713, 0.5486, 0.6652, 0.5254]], [[0, 0.816, 0.3778, 0.1911], [0, 0.6525, 0.2487, 0.8155], [0.756, 0.9753, 0.1456, 0.7414], [0.0367, 0.6216, 0.5172, 0.5433], [0.7546, 0.8617, 0.5039, 0.6369]]]]