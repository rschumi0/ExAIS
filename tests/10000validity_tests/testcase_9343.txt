import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Up_18310 = tf.keras.layers.Input(shape=([2, 3, 2]))

Up_18310 = keras.layers.UpSampling2D(size=(2, 2), name = 'Up_18310', )(in0Up_18310)
Res51157 = keras.layers.Reshape((4, 12), name = 'Res51157', )(Up_18310)
Zer55690 = keras.layers.ZeroPadding1D(padding=((1, 1)), name = 'Zer55690', )(Res51157)
Max91430 = keras.layers.MaxPool1D(pool_size=(1), strides=(1), padding='valid', name = 'Max91430', )(Zer55690)
model = tf.keras.models.Model(inputs=[in0Up_18310], outputs=Max91430)
in0Up_18310 = tf.constant([[[[1.0325, 1.8039], [1.436, 1.2223], [1.1837, 1.3299]], [[1.9446, 1.5166], [1.9177, 1.4935], [1.3787, 1.1352]]]])
print (np.array2string(model.predict([in0Up_18310],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Max91430.png')

LUp_18310 = up_sampling2D_layer([[[[1.0325, 1.8039], [1.436, 1.2223], [1.1837, 1.3299]], [[1.9446, 1.5166], [1.9177, 1.4935], [1.3787, 1.1352]]]], 2, 2, Up_18310), 
LRes51157 = reshape_layer(Up_18310, [4, 12], Res51157), 
LZer55690 = zero_padding1D_layer(Res51157, 1, 1, Zer55690), 
LMax91430 = max_pool1D_layer(Zer55690, 1, 1, false, Max91430), 
exec_layers([LUp_18310,LRes51157,LZer55690,LMax91430],["Up_18310","Res51157","Zer55690","Max91430"],Max91430,"Max91430")

Actual (Unparsed): [[[0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000], [1.0325000, 1.8039000, 1.0325000, 1.8039000, 1.4360000, 1.2223001, 1.4360000, 1.2223001, 1.1837000, 1.3299000, 1.1837000, 1.3299000], [1.0325000, 1.8039000, 1.0325000, 1.8039000, 1.4360000, 1.2223001, 1.4360000, 1.2223001, 1.1837000, 1.3299000, 1.1837000, 1.3299000], [1.9446000, 1.5166000, 1.9446000, 1.5166000, 1.9177001, 1.4935000, 1.9177001, 1.4935000, 1.3787000, 1.1352000, 1.3787000, 1.1352000], [1.9446000, 1.5166000, 1.9446000, 1.5166000, 1.9177001, 1.4935000, 1.9177001, 1.4935000, 1.3787000, 1.1352000, 1.3787000, 1.1352000], [0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000]]]

Expected (Unparsed): [[[0,0,0,0,0,0,0,0,0,0,0,0],[1.0325,1.8039,1.0325,1.8039,1.436,1.2223,1.436,1.2223,1.1837,1.3299,1.1837,1.3299],[1.0325,1.8039,1.0325,1.8039,1.436,1.2223,1.436,1.2223,1.1837,1.3299,1.1837,1.3299],[1.9446,1.5166,1.9446,1.5166,1.9177,1.4935,1.9177,1.4935,1.3787,1.1352,1.3787,1.1352],[1.9446,1.5166,1.9446,1.5166,1.9177,1.4935,1.9177,1.4935,1.3787,1.1352,1.3787,1.1352],[0,0,0,0,0,0,0,0,0,0,0,0]]]

Actual:   [[[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [1.0325, 1.8039, 1.0325, 1.8039, 1.436, 1.2224, 1.436, 1.2224, 1.1837, 1.3299, 1.1837, 1.3299], [1.0325, 1.8039, 1.0325, 1.8039, 1.436, 1.2224, 1.436, 1.2224, 1.1837, 1.3299, 1.1837, 1.3299], [1.9446, 1.5166, 1.9446, 1.5166, 1.9178, 1.4935, 1.9178, 1.4935, 1.3787, 1.1352, 1.3787, 1.1352], [1.9446, 1.5166, 1.9446, 1.5166, 1.9178, 1.4935, 1.9178, 1.4935, 1.3787, 1.1352, 1.3787, 1.1352], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]]]

Expected: [[[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [1.0325, 1.8039, 1.0325, 1.8039, 1.436, 1.2223, 1.436, 1.2223, 1.1837, 1.3299, 1.1837, 1.3299], [1.0325, 1.8039, 1.0325, 1.8039, 1.436, 1.2223, 1.436, 1.2223, 1.1837, 1.3299, 1.1837, 1.3299], [1.9446, 1.5166, 1.9446, 1.5166, 1.9177, 1.4935, 1.9177, 1.4935, 1.3787, 1.1352, 1.3787, 1.1352], [1.9446, 1.5166, 1.9446, 1.5166, 1.9177, 1.4935, 1.9177, 1.4935, 1.3787, 1.1352, 1.3787, 1.1352], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]]]