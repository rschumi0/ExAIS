import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Con83629 = tf.keras.layers.Input(shape=([2, 2]))
in0Con32442 = tf.keras.layers.Input(shape=([4]))
in0Thr25303 = tf.keras.layers.Input(shape=([2, 2, 1, 2]))
in0Glo12968 = tf.keras.layers.Input(shape=([2, 2, 2]))
in0Con8445 = tf.keras.layers.Input(shape=([6]))

Con83629 = keras.layers.Conv1D(4, (1),strides=(1), padding='same', dilation_rate=(1), name = 'Con83629', )(in0Con83629)
Res90691 = keras.layers.Reshape((2, 4, 1), name = 'Res90691', )(Con83629)
Ave97715 = keras.layers.AveragePooling2D(pool_size=(1, 2), name = 'Ave97715', )(Res90691)
Res48080 = keras.layers.Reshape((2, 2), name = 'Res48080', )(Ave97715)
Fla66436 = keras.layers.Flatten(name = 'Fla66436', )(Res48080)
Con32442 = keras.layers.Concatenate(axis=1, name = 'Con32442', )([Fla66436,in0Con32442])
Thr25303 = keras.layers.ThresholdedReLU(theta=7.937488482705355, name = 'Thr25303', input_shape=(2, 2, 1, 2))(in0Thr25303)
Res34786 = keras.layers.Reshape((2, 2, 2), name = 'Res34786', )(Thr25303)
Res41794 = keras.layers.Reshape((2, 4), name = 'Res41794', )(Res34786)
Fla15855 = keras.layers.Flatten(name = 'Fla15855', )(Res41794)
Glo12968 = keras.layers.GlobalMaxPool2D(name = 'Glo12968', )(in0Glo12968)
Con8445 = keras.layers.Concatenate(axis=1, name = 'Con8445', )([Glo12968,in0Con8445])
Max57332 = keras.layers.Maximum(name = 'Max57332', )([Fla15855,Con8445])
Max76988 = keras.layers.Maximum(name = 'Max76988', )([Con32442,Max57332])
model = tf.keras.models.Model(inputs=[in0Con83629,in0Con32442,in0Thr25303,in0Glo12968,in0Con8445], outputs=Max76988)
w = model.get_layer('Con83629').get_weights() 
w[0] = np.array([[[0.6886, 0.4331, 0.4498, 0.584], [0.482, 0.9382, 0.2084, 0.0432]]])
w[1] = np.array([0, 0, 0, 0])
model.get_layer('Con83629').set_weights(w) 
in0Con83629 = tf.constant([[[0.1265, 0.6942], [0.4597, 0.7316]]])
in0Con32442 = tf.constant([[0.882, 0.6191, 0.9024, 0.9684]])
in0Thr25303 = tf.constant([[[[[0.2025, 0.6509]], [[0.6914, 0.778]]], [[[0.698, 0.8873]], [[0.9051, 0.9681]]]]])
in0Glo12968 = tf.constant([[[[1.3186, 1.3077], [1.0632, 1.3457]], [[1.0053, 1.5864], [1.974, 1.2413]]]])
in0Con8445 = tf.constant([[0.5167, 0.9579, 0.7373, 0.5575, 0.3578, 0.26]])
print (np.array2string(model.predict([in0Con83629,in0Con32442,in0Thr25303,in0Glo12968,in0Con8445],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Max76988.png')

LCon83629 = conv1D_layer([[[0.1265, 0.6942], [0.4597, 0.7316]]], 1,[[[0.6886, 0.4331, 0.4498, 0.584], [0.482, 0.9382, 0.2084, 0.0432]]],[0, 0, 0, 0], 1, true, 1, Con83629), 
LRes90691 = reshape_layer(Con83629, [2, 4, 1], Res90691), 
LAve97715 = average_pooling2D_layer(Res90691, 1, 2, Ave97715), 
LRes48080 = reshape_layer(Ave97715, [2, 2], Res48080), 
LFla66436 = flatten_layer(Res48080, Fla66436), 
LCon32442 = concatenate_layer([Fla66436,[[0.882, 0.6191, 0.9024, 0.9684]]], 1, Con32442), 
LThr25303 = thresholded_relu_layer([[[[[0.2025, 0.6509]], [[0.6914, 0.778]]], [[[0.698, 0.8873]], [[0.9051, 0.9681]]]]], 7.937488482705355, Thr25303), 
LRes34786 = reshape_layer(Thr25303, [2, 2, 2], Res34786), 
LRes41794 = reshape_layer(Res34786, [2, 4], Res41794), 
LFla15855 = flatten_layer(Res41794, Fla15855), 
LGlo12968 = global_max_pool2D_layer([[[[1.3186, 1.3077], [1.0632, 1.3457]], [[1.0053, 1.5864], [1.974, 1.2413]]]], Glo12968), 
LCon8445 = concatenate_layer([Glo12968,[[0.5167, 0.9579, 0.7373, 0.5575, 0.3578, 0.26]]], 1, Con8445), 
LMax57332 = maximum_layer([Fla15855,Con8445], Max57332), 
LMax76988 = maximum_layer([Con32442,Max57332], Max76988), 
exec_layers([LCon83629,LRes90691,LAve97715,LRes48080,LFla66436,LCon32442,LThr25303,LRes34786,LRes41794,LFla15855,LGlo12968,LCon8445,LMax57332,LMax76988],["Con83629","Res90691","Ave97715","Res48080","Fla66436","Con32442","Thr25303","Res34786","Res41794","Fla15855","Glo12968","Con8445","Max57332","Max76988"],Max76988,"Max76988")

Actual (Unparsed): [[1.9740000, 1.5864000, 0.7773319, 0.9579000, 0.8820000, 0.6191000, 0.9024000, 0.9684000]]

Expected (Unparsed): [[1.974,1.5864,0.7773319049999999,0.9579,0.882,0.6191,0.9024,0.9684]]

Actual:   [[1.974, 1.5864, 0.7774, 0.9579, 0.882, 0.6191, 0.9024, 0.9684]]

Expected: [[1.974, 1.5864, 0.7774, 0.9579, 0.882, 0.6191, 0.9024, 0.9684]]