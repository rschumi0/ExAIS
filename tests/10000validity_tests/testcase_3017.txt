import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Con54548 = tf.keras.layers.Input(shape=([1, 1, 1]))
in0Con6864 = tf.keras.layers.Input(shape=([3, 1]))
in0Con64236 = tf.keras.layers.Input(shape=([2, 1, 2, 1]))
in0Zer10755 = tf.keras.layers.Input(shape=([2, 1, 1]))

Con54548 = keras.layers.Conv2DTranspose(2, (1, 1),strides=(1, 1), padding='same', name = 'Con54548', )(in0Con54548)
Res89589 = keras.layers.Reshape((1, 2), name = 'Res89589', )(Con54548)
Zer65626 = keras.layers.ZeroPadding1D(padding=((2, 0)), name = 'Zer65626', )(Res89589)
Con6864 = keras.layers.Concatenate(axis=2, name = 'Con6864', )([Zer65626,in0Con6864])
Con64236 = keras.layers.Conv3D(2, (1, 1, 1),strides=(1, 1, 1), padding='valid', dilation_rate=(1, 1, 1), name = 'Con64236', )(in0Con64236)
Res27612 = keras.layers.Reshape((2, 1, 4), name = 'Res27612', )(Con64236)
Res66990 = keras.layers.Reshape((2, 4), name = 'Res66990', )(Res27612)
Glo42544 = keras.layers.GlobalAveragePooling1D(name = 'Glo42544', )(Res66990)
Res63652 = keras.layers.Reshape((4, 1), name = 'Res63652', )(Glo42544)
Con60352 = keras.layers.Conv1D(3, (2),strides=(1), padding='valid', dilation_rate=(1), name = 'Con60352', )(Res63652)
Dot83239 = keras.layers.Dot(axes=(1, 1), name = 'Dot83239', )([Con6864,Con60352])
Res79061 = keras.layers.Reshape((3, 3, 1), name = 'Res79061', )(Dot83239)
Zer52956 = keras.layers.ZeroPadding2D(padding=((0, 0), (1, 0)), name = 'Zer52956', )(Res79061)
Zer10755 = keras.layers.ZeroPadding2D(padding=((1, 1), (1, 1)), name = 'Zer10755', )(in0Zer10755)
Res97209 = keras.layers.Reshape((4, 3), name = 'Res97209', )(Zer10755)
Sep55399 = keras.layers.SeparableConv1D(2, (4),strides=(4), padding='same', name = 'Sep55399', )(Res97209)
Per56897 = keras.layers.Permute((1,2), name = 'Per56897',)(Sep55399)
Res63985 = keras.layers.Reshape((1, 2, 1), name = 'Res63985', )(Per56897)
Zer5518 = keras.layers.ZeroPadding2D(padding=((1, 1), (1, 1)), name = 'Zer5518', )(Res63985)
Min70158 = keras.layers.Minimum(name = 'Min70158', )([Zer52956,Zer5518])
model = tf.keras.models.Model(inputs=[in0Con54548,in0Con6864,in0Con64236,in0Zer10755], outputs=Min70158)
w = model.get_layer('Con54548').get_weights() 
w[0] = np.array([[[[0.583], [0.5825]]]])
w[1] = np.array([0, 0])
model.get_layer('Con54548').set_weights(w) 
w = model.get_layer('Con64236').get_weights() 
w[0] = np.array([[[[[0.7091, 0.4806]]]]])
w[1] = np.array([0, 0])
model.get_layer('Con64236').set_weights(w) 
w = model.get_layer('Con60352').get_weights() 
w[0] = np.array([[[0.2455, 0.9623, 0.4785]], [[0.1476, 0.9454, 0.0373]]])
w[1] = np.array([0, 0, 0])
model.get_layer('Con60352').set_weights(w) 
w = model.get_layer('Sep55399').get_weights() 
w[0] = np.array([[[0.7958], [0.5384], [0.86]], [[0.221], [0.6396], [0.5024]], [[0.0441], [0.3762], [0.1831]], [[0.3964], [0.2398], [0.4788]]])
w[1] = np.array([[[0.0323, 0.138], [0.2304, 0.3929], [0.1082, 0.9786]]])
w[2] = np.array([0, 0])
model.get_layer('Sep55399').set_weights(w) 
in0Con54548 = tf.constant([[[[0.3257]]]])
in0Con6864 = tf.constant([[[0.4756], [0.1678], [0.2176]]])
in0Con64236 = tf.constant([[[[[0.9314], [0.3386]]], [[[0.5033], [0.0954]]]]])
in0Zer10755 = tf.constant([[[[1.0025]], [[1.691]]]])
print (np.array2string(model.predict([in0Con54548,in0Con6864,in0Con64236,in0Zer10755],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Min70158.png')

LCon54548 = conv2D_transpose_layer([[[[0.3257]]]], 1, 1,[[[[0.583], [0.5825]]]],[0, 0], 1, 1, true, Con54548), 
LRes89589 = reshape_layer(Con54548, [1, 2], Res89589), 
LZer65626 = zero_padding1D_layer(Res89589, 2, 0, Zer65626), 
LCon6864 = concatenate_layer([Zer65626,[[[0.4756], [0.1678], [0.2176]]]], 2, Con6864), 
LCon64236 = conv3D_layer([[[[[0.9314], [0.3386]]], [[[0.5033], [0.0954]]]]], 1, 1, 1,[[[[[0.7091, 0.4806]]]]],[0, 0], 1, 1, 1, false, 1, 1, 1, Con64236), 
LRes27612 = reshape_layer(Con64236, [2, 1, 4], Res27612), 
LRes66990 = reshape_layer(Res27612, [2, 4], Res66990), 
LGlo42544 = global_average_pooling1D_layer(Res66990, Glo42544), 
LRes63652 = reshape_layer(Glo42544, [4, 1], Res63652), 
LCon60352 = conv1D_layer(Res63652, 2,[[[0.2455, 0.9623, 0.4785]], [[0.1476, 0.9454, 0.0373]]],[0, 0, 0], 1, false, 1, Con60352), 
LDot83239 = dot_layer(Con6864,Con60352, 1, 1, Dot83239), 
LRes79061 = reshape_layer(Dot83239, [3, 3, 1], Res79061), 
LZer52956 = zero_padding2D_layer(Res79061, 0, 0, 1, 0, Zer52956), 
LZer10755 = zero_padding2D_layer([[[[1.0025]], [[1.691]]]], 1, 1, 1, 1, Zer10755), 
LRes97209 = reshape_layer(Zer10755, [4, 3], Res97209), 
LSep55399 = separable_conv1D_layer(Res97209, 4,[[[[0.7958], [0.5384], [0.86]], [[0.221], [0.6396], [0.5024]], [[0.0441], [0.3762], [0.1831]], [[0.3964], [0.2398], [0.4788]]],[[[0.0323, 0.138], [0.2304, 0.3929], [0.1082, 0.9786]]]],[0, 0], 4, true, Sep55399), 
LPer56897 = permute_layer(Sep55399, 1,2, Per56897), 
LRes63985 = reshape_layer(Per56897, [1, 2, 1], Res63985), 
LZer5518 = zero_padding2D_layer(Res63985, 1, 1, 1, 1, Zer5518), 
LMin70158 = minimum_layer([Zer52956,Zer5518], Min70158), 
exec_layers([LCon54548,LRes89589,LZer65626,LCon6864,LCon64236,LRes27612,LRes66990,LGlo42544,LRes63652,LCon60352,LDot83239,LRes79061,LZer52956,LZer10755,LRes97209,LSep55399,LPer56897,LRes63985,LZer5518,LMin70158],["Con54548","Res89589","Zer65626","Con6864","Con64236","Res27612","Res66990","Glo42544","Res63652","Con60352","Dot83239","Res79061","Zer52956","Zer10755","Res97209","Sep55399","Per56897","Res63985","Zer5518","Min70158"],Min70158,"Min70158")

Actual (Unparsed): [[[[0.0000000], [0.0000000], [0.0000000], [0.0000000]], [[0.0000000], [0.0100873], [0.0467982], [0.0000000]], [[0.0000000], [0.0000000], [0.0000000], [0.0000000]]]]

Expected (Unparsed): [[[[0],[0],[0],[0]],[[0],[0.010087325590404492],[0.046798214174405516],[0]],[[0],[0],[0],[0]]]]

Actual:   [[[[0], [0], [0], [0]], [[0], [0.0101], [0.0468], [0]], [[0], [0], [0], [0]]]]

Expected: [[[[0], [0], [0], [0]], [[0], [0.0101], [0.0468], [0]], [[0], [0], [0], [0]]]]