import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Add43951 = tf.keras.layers.Input(shape=([1, 1, 1, 1]))
in1Add43951 = tf.keras.layers.Input(shape=([1, 1, 1, 1]))
in0Con39463 = tf.keras.layers.Input(shape=([2, 3, 3]))
in0Cro78188 = tf.keras.layers.Input(shape=([1, 3, 2]))
in0Con38363 = tf.keras.layers.Input(shape=([2, 3, 1]))
in0Con48070 = tf.keras.layers.Input(shape=([2, 1, 2]))

Add43951 = keras.layers.Add(name = 'Add43951', )([in0Add43951,in1Add43951])
Res81210 = keras.layers.Reshape((1, 1, 1), name = 'Res81210', )(Add43951)
Zer9024 = keras.layers.ZeroPadding2D(padding=((1, 0), (2, 0)), name = 'Zer9024', )(Res81210)
Con39463 = keras.layers.Concatenate(axis=3, name = 'Con39463', )([Zer9024,in0Con39463])
Cro78188 = keras.layers.Cropping2D(cropping=((0, 0), (1, 0)), name = 'Cro78188', )(in0Cro78188)
Loc32678 = keras.layers.LocallyConnected2D(3, (1, 1),strides=(1, 1), name = 'Loc32678', )(Cro78188)
Zer5770 = keras.layers.ZeroPadding2D(padding=((1, 0), (1, 0)), name = 'Zer5770', )(Loc32678)
Con38363 = keras.layers.Concatenate(axis=3, name = 'Con38363', )([Zer5770,in0Con38363])
Con48070 = keras.layers.Conv2DTranspose(4, (2, 1),strides=(1, 1), padding='same', name = 'Con48070', )(in0Con48070)
Zer90486 = keras.layers.ZeroPadding2D(padding=((0, 0), (2, 0)), name = 'Zer90486', )(Con48070)
Sub99943 = keras.layers.Subtract(name = 'Sub99943', )([Con38363,Zer90486])
Max58047 = keras.layers.Maximum(name = 'Max58047', )([Con39463,Sub99943])
model = tf.keras.models.Model(inputs=[in0Add43951,in1Add43951,in0Con39463,in0Cro78188,in0Con38363,in0Con48070], outputs=Max58047)
w = model.get_layer('Loc32678').get_weights() 
w[0] = np.array([[[0.0702, 0.0614, 0.0008], [0.5899, 0.8184, 0.1819]], [[0.9261, 0.0623, 0.0555], [0.6279, 0.4622, 0.4847]]])
w[1] = np.array([[[0, 0, 0], [0, 0, 0]]])
model.get_layer('Loc32678').set_weights(w) 
w = model.get_layer('Con48070').get_weights() 
w[0] = np.array([[[[0.8203, 0.2477], [0.1346, 0.0294], [0.8726, 0.1851], [0.9764, 0.6282]]], [[[0.315, 0.7399], [0.5457, 0.6231], [0.0354, 0.7938], [0.4768, 0.3027]]]])
w[1] = np.array([0, 0, 0, 0])
model.get_layer('Con48070').set_weights(w) 
in0Add43951 = tf.constant([[[[[0.9725]]]]])
in1Add43951 = tf.constant([[[[[0.9773]]]]])
in0Con39463 = tf.constant([[[[0.6009, 0.9203, 0.6894], [0.2537, 0.748, 0.6891], [0.1973, 0.1009, 0.0979]], [[0.3967, 0.1437, 0.9392], [0.6839, 0.5427, 0.0981], [0.844, 0.3067, 0.9223]]]])
in0Cro78188 = tf.constant([[[[1.9216, 1.9171], [1.2174, 1.2241], [1.9777, 1.4086]]]])
in0Con38363 = tf.constant([[[[0.7148], [0.7894], [0.4517]], [[0.831], [0.2316], [0.5151]]]])
in0Con48070 = tf.constant([[[[0.5657, 0.0383]], [[0.4754, 0.9847]]]])
print (np.array2string(model.predict([in0Add43951,in1Add43951,in0Con39463,in0Cro78188,in0Con38363,in0Con48070],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Max58047.png')

LAdd43951 = add_layer([[[[[[0.9725]]]]], [[[[[0.9773]]]]]], Add43951), 
LRes81210 = reshape_layer(Add43951, [1, 1, 1], Res81210), 
LZer9024 = zero_padding2D_layer(Res81210, 1, 0, 2, 0, Zer9024), 
LCon39463 = concatenate_layer([Zer9024,[[[[0.6009, 0.9203, 0.6894], [0.2537, 0.748, 0.6891], [0.1973, 0.1009, 0.0979]], [[0.3967, 0.1437, 0.9392], [0.6839, 0.5427, 0.0981], [0.844, 0.3067, 0.9223]]]]], 3, Con39463), 
LCro78188 = cropping2D_layer([[[[1.9216, 1.9171], [1.2174, 1.2241], [1.9777, 1.4086]]]], 0, 0, 1, 0, Cro78188), 
LLoc32678 = locally_connected2D_layer(Cro78188, 1, 1,[[[0.0702, 0.0614, 0.0008], [0.5899, 0.8184, 0.1819]], [[0.9261, 0.0623, 0.0555], [0.6279, 0.4622, 0.4847]]],[[[0, 0, 0], [0, 0, 0]]], 1, 1, Loc32678), 
LZer5770 = zero_padding2D_layer(Loc32678, 1, 0, 1, 0, Zer5770), 
LCon38363 = concatenate_layer([Zer5770,[[[[0.7148], [0.7894], [0.4517]], [[0.831], [0.2316], [0.5151]]]]], 3, Con38363), 
LCon48070 = conv2D_transpose_layer([[[[0.5657, 0.0383]], [[0.4754, 0.9847]]]], 2, 1,[[[[0.8203, 0.2477], [0.1346, 0.0294], [0.8726, 0.1851], [0.9764, 0.6282]]], [[[0.315, 0.7399], [0.5457, 0.6231], [0.0354, 0.7938], [0.4768, 0.3027]]]],[0, 0, 0, 0], 1, 1, true, Con48070), 
LZer90486 = zero_padding2D_layer(Con48070, 0, 0, 2, 0, Zer90486), 
LSub99943 = subtract_layer(Con38363,Zer90486, Sub99943), 
LMax58047 = maximum_layer([Con39463,Sub99943], Max58047), 
exec_layers([LAdd43951,LRes81210,LZer9024,LCon39463,LCro78188,LLoc32678,LZer5770,LCon38363,LCon48070,LZer90486,LSub99943,LMax58047],["Add43951","Res81210","Zer9024","Con39463","Cro78188","Loc32678","Zer5770","Con38363","Con48070","Zer90486","Sub99943","Max58047"],Max58047,"Max58047")

Actual (Unparsed): [[[[0.0000000, 0.6009000, 0.9203000, 0.7148000], [0.0000000, 0.2537000, 0.7480000, 0.7894000], [0.0000000, 0.1973000, 0.1009000, 0.0979000]], [[0.0000000, 0.3967000, 0.1437000, 0.9392000], [0.8075581, 1.0765518, 0.5427000, 0.2316000], [1.9498000, 0.8440000, 0.3067000, 0.9223000]]]]

Expected (Unparsed): [[[[0,0.6009,0.9203,0.7148],[0,0.2537,0.748,0.7894],[0,0.1973,0.1009,0.0979]],[[0,0.3967,0.1437,0.9392],[0.8075580699999999,1.0765518,0.5427,0.2316],[1.9498,0.844,0.3067,0.9223]]]]

Actual:   [[[[0, 0.6009, 0.9203, 0.7148], [0, 0.2537, 0.748, 0.7894], [0, 0.1973, 0.1009, 0.0979]], [[0, 0.3967, 0.1437, 0.9392], [0.8076, 1.0766, 0.5427, 0.2316], [1.9498, 0.844, 0.3067, 0.9223]]]]

Expected: [[[[0, 0.6009, 0.9203, 0.7148], [0, 0.2537, 0.748, 0.7894], [0, 0.1973, 0.1009, 0.0979]], [[0, 0.3967, 0.1437, 0.9392], [0.8076, 1.0766, 0.5427, 0.2316], [1.9498, 0.844, 0.3067, 0.9223]]]]