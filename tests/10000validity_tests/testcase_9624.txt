import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Up_48906 = tf.keras.layers.Input(shape=([1, 2, 1]))
in0Con43419 = tf.keras.layers.Input(shape=([2, 2, 1]))
in0Mul89608 = tf.keras.layers.Input(shape=([1, 1, 2]))
in1Mul89608 = tf.keras.layers.Input(shape=([1, 1, 2]))

Up_48906 = keras.layers.UpSampling2D(size=(2, 1), name = 'Up_48906', )(in0Up_48906)
Max52466 = keras.layers.MaxPool2D(pool_size=(1, 1), name = 'Max52466', )(Up_48906)
Con43419 = keras.layers.Concatenate(axis=3, name = 'Con43419', )([Max52466,in0Con43419])
Mul89608 = keras.layers.Multiply(name = 'Mul89608', )([in0Mul89608,in1Mul89608])
Zer99911 = keras.layers.ZeroPadding2D(padding=((1, 0), (1, 0)), name = 'Zer99911', )(Mul89608)
Min804 = keras.layers.Minimum(name = 'Min804', )([Con43419,Zer99911])
Res23341 = keras.layers.Reshape((2, 2, 2, 1), name = 'Res23341', )(Min804)
Con15140 = keras.layers.Conv3DTranspose(4, (1, 2, 2),strides=(1, 1, 1), padding='valid', name = 'Con15140', )(Res23341)
model = tf.keras.models.Model(inputs=[in0Up_48906,in0Con43419,in0Mul89608,in1Mul89608], outputs=Con15140)
w = model.get_layer('Con15140').get_weights() 
w[0] = np.array([[[[[0.4353], [0.3591], [0.1877], [0.3373]], [[0.7184], [0.7546], [0.8664], [0.1288]]], [[[0.32], [0.5064], [0.6898], [0.4866]], [[0.0561], [0.8965], [0.3273], [0.2107]]]]])
w[1] = np.array([0, 0, 0, 0])
model.get_layer('Con15140').set_weights(w) 
in0Up_48906 = tf.constant([[[[1.7778], [1.059]]]])
in0Con43419 = tf.constant([[[[0.1777], [0.4625]], [[0.6717], [0.8755]]]])
in0Mul89608 = tf.constant([[[[0.2181, 0.4541]]]])
in1Mul89608 = tf.constant([[[[0.8417, 0.508]]]])
print (np.array2string(model.predict([in0Up_48906,in0Con43419,in0Mul89608,in1Mul89608],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Con15140.png')

LUp_48906 = up_sampling2D_layer([[[[1.7778], [1.059]]]], 2, 1, Up_48906), 
LMax52466 = max_pool2D_layer(Up_48906, 1, 1, Max52466), 
LCon43419 = concatenate_layer([Max52466,[[[[0.1777], [0.4625]], [[0.6717], [0.8755]]]]], 3, Con43419), 
LMul89608 = multiply_layer([[[[[0.2181, 0.4541]]]], [[[[0.8417, 0.508]]]]], Mul89608), 
LZer99911 = zero_padding2D_layer(Mul89608, 1, 0, 1, 0, Zer99911), 
LMin804 = minimum_layer([Con43419,Zer99911], Min804), 
LRes23341 = reshape_layer(Min804, [2, 2, 2, 1], Res23341), 
LCon15140 = conv3D_transpose_layer(Res23341, 1, 2, 2,[[[[[0.4353], [0.3591], [0.1877], [0.3373]], [[0.7184], [0.7546], [0.8664], [0.1288]]], [[[0.32], [0.5064], [0.6898], [0.4866]], [[0.0561], [0.8965], [0.3273], [0.2107]]]]],[0, 0, 0, 0], 1, 1, 1, false, Con15140), 
exec_layers([LUp_48906,LMax52466,LCon43419,LMul89608,LZer99911,LMin804,LRes23341,LCon15140],["Up_48906","Max52466","Con43419","Mul89608","Zer99911","Min804","Res23341","Con15140"],Con15140,"Con15140")

Actual (Unparsed): [[[[[0.0000000, 0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000, 0.0000000]], [[0.0000000, 0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000, 0.0000000]], [[0.0000000, 0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000, 0.0000000]]], [[[0.0000000, 0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000, 0.0000000]], [[0.0799101, 0.0659217, 0.0344570, 0.0619198], [0.2322963, 0.2213637, 0.2023483, 0.1014537], [0.1657225, 0.1740733, 0.1998636, 0.0297119]], [[0.0587439, 0.0929623, 0.1266299, 0.0893275], [0.0841170, 0.2813926, 0.2192090, 0.1509295], [0.0129413, 0.2068071, 0.0755025, 0.0486049]]]]]

Expected (Unparsed): [[[[[0.0,0.0,0.0,0.0],[0.0,0.0,0.0,0.0],[0.0,0.0,0.0,0.0]],[[0.0,0.0,0.0,0.0],[0.0,0.0,0.0,0.0],[0.0,0.0,0.0,0.0]],[[0.0,0.0,0.0,0.0],[0.0,0.0,0.0,0.0],[0.0,0.0,0.0,0.0]]],[[[0.0,0.0,0.0,0.0],[0.0,0.0,0.0,0.0],[0.0,0.0,0.0,0.0]],[[0.07991009738100001,0.06592169990699999,0.034456984329000004,0.061919769921],[0.232296337608,0.221363714922,0.20234834228799997,0.10145373881599999],[0.16572252352,0.17407324088,0.19986357791999998,0.029711944639999998]],[[0.0587439264,0.092962263528,0.12662987634599998,0.08932748308199999],[0.084117040597,0.28139255122499995,0.21920901766099998,0.150929454519],[0.012941305079999998,0.2068071302,0.07550248043999999,0.04860486596]]]]]

Actual:   [[[[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]], [[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]], [[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]], [[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]], [[0.08, 0.066, 0.0345, 0.062], [0.2323, 0.2214, 0.2024, 0.1015], [0.1658, 0.1741, 0.1999, 0.0298]], [[0.0588, 0.093, 0.1267, 0.0894], [0.0842, 0.2814, 0.2193, 0.151], [0.013, 0.2069, 0.0756, 0.0487]]]]]

Expected: [[[[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]], [[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]], [[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]], [[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]], [[0.08, 0.066, 0.0345, 0.062], [0.2323, 0.2214, 0.2024, 0.1015], [0.1658, 0.1741, 0.1999, 0.0298]], [[0.0588, 0.093, 0.1267, 0.0894], [0.0842, 0.2814, 0.2193, 0.151], [0.013, 0.2069, 0.0756, 0.0487]]]]]