import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Ave58561 = tf.keras.layers.Input(shape=([1, 1, 1]))
in1Ave58561 = tf.keras.layers.Input(shape=([1, 1, 1]))

Ave58561 = keras.layers.Average(name = 'Ave58561', )([in0Ave58561,in1Ave58561])
Up_99592 = keras.layers.UpSampling2D(size=(1, 2), name = 'Up_99592', )(Ave58561)
Res65619 = keras.layers.Reshape((1, 2), name = 'Res65619', )(Up_99592)
Con38033 = keras.layers.Conv1D(4, (1),strides=(1), padding='same', dilation_rate=(1), name = 'Con38033', )(Res65619)
model = tf.keras.models.Model(inputs=[in0Ave58561,in1Ave58561], outputs=Con38033)
w = model.get_layer('Con38033').get_weights() 
w[0] = np.array([[[0.0988, 0.0646, 0.2231, 0.0668], [0.7569, 0.8716, 0.4109, 0.4257]]])
w[1] = np.array([0, 0, 0, 0])
model.get_layer('Con38033').set_weights(w) 
in0Ave58561 = tf.constant([[[[0.9814]]]])
in1Ave58561 = tf.constant([[[[0.5653]]]])
print (np.array2string(model.predict([in0Ave58561,in1Ave58561],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Con38033.png')

LAve58561 = average_layer([[[[[0.9814]]]], [[[[0.5653]]]]], Ave58561), 
LUp_99592 = up_sampling2D_layer(Ave58561, 1, 2, Up_99592), 
LRes65619 = reshape_layer(Up_99592, [1, 2], Res65619), 
LCon38033 = conv1D_layer(Res65619, 1,[[[0.0988, 0.0646, 0.2231, 0.0668], [0.7569, 0.8716, 0.4109, 0.4257]]],[0, 0, 0, 0], 1, true, 1, Con38033), 
exec_layers([LAve58561,LUp_99592,LRes65619,LCon38033],["Ave58561","Up_99592","Res65619","Con38033"],Con38033,"Con38033")

Actual (Unparsed): [[[0.6617556, 0.7240103, 0.4903039, 0.3808749]]]

Expected (Unparsed): [[[0.661755595,0.7240102700000001,0.4903039,0.380874875]]]

Actual:   [[[0.6618, 0.7241, 0.4904, 0.3809]]]

Expected: [[[0.6618, 0.7241, 0.4904, 0.3809]]]