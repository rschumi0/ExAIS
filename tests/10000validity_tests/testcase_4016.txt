import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Sub43966 = tf.keras.layers.Input(shape=([2]))
in1Sub43966 = tf.keras.layers.Input(shape=([2]))

Sub43966 = keras.layers.Subtract(name = 'Sub43966', )([in0Sub43966,in1Sub43966])
Res84183 = keras.layers.Reshape((2, 1), name = 'Res84183', )(Sub43966)
Res73766 = keras.layers.Reshape((2, 1, 1), name = 'Res73766', )(Res84183)
Con94662 = keras.layers.Conv2DTranspose(4, (2, 1),strides=(12, 1), padding='valid', name = 'Con94662', )(Res73766)
Lay24144 = keras.layers.LayerNormalization(axis=3, epsilon=1.8708318909249713, name = 'Lay24144', )(Con94662)
model = tf.keras.models.Model(inputs=[in0Sub43966,in1Sub43966], outputs=Lay24144)
w = model.get_layer('Con94662').get_weights() 
w[0] = np.array([[[[0.8746], [0.5046], [0.8924], [0.3279]]], [[[0.377], [0.5683], [0.6974], [0.1389]]]])
w[1] = np.array([0, 0, 0, 0])
model.get_layer('Con94662').set_weights(w) 
in0Sub43966 = tf.constant([[0.2226, 0.1403]])
in1Sub43966 = tf.constant([[0.469, 0.2752]])
print (np.array2string(model.predict([in0Sub43966,in1Sub43966],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Lay24144.png')

LSub43966 = subtract_layer([[0.2226, 0.1403]], [[0.469, 0.2752]], Sub43966), 
LRes84183 = reshape_layer(Sub43966, [2, 1], Res84183), 
LRes73766 = reshape_layer(Res84183, [2, 1, 1], Res73766), 
LCon94662 = conv2D_transpose_layer(Res73766, 2, 1,[[[[0.8746], [0.5046], [0.8924], [0.3279]]], [[[0.377], [0.5683], [0.6974], [0.1389]]]],[0, 0, 0, 0], 12, 1, false, Con94662), 
LLay24144 = layer_normalization_layer(Con94662, 3, 1.8708318909249713, Lay24144), 
exec_layers([LSub43966,LRes84183,LRes73766,LCon94662,LLay24144],["Sub43966","Res84183","Res73766","Con94662","Lay24144"],Lay24144,"Lay24144")

Actual (Unparsed): [[[[-0.0404448, 0.0261458, -0.0436484, 0.0579473]], [[0.0123131, -0.0221240, -0.0453641, 0.0551749]], [[0.0000000, 0.0000000, 0.0000000, 0.0000000]], [[0.0000000, 0.0000000, 0.0000000, 0.0000000]], [[0.0000000, 0.0000000, 0.0000000, 0.0000000]], [[0.0000000, 0.0000000, 0.0000000, 0.0000000]], [[0.0000000, 0.0000000, 0.0000000, 0.0000000]], [[0.0000000, 0.0000000, 0.0000000, 0.0000000]], [[0.0000000, 0.0000000, 0.0000000, 0.0000000]], [[0.0000000, 0.0000000, 0.0000000, 0.0000000]], [[0.0000000, 0.0000000, 0.0000000, 0.0000000]], [[0.0000000, 0.0000000, 0.0000000, 0.0000000]], [[-0.0221576, 0.0143239, -0.0239126, 0.0317463]], [[0.0067446, -0.0121186, -0.0248486, 0.0302226]], [[0.0000000, 0.0000000, 0.0000000, 0.0000000]], [[0.0000000, 0.0000000, 0.0000000, 0.0000000]], [[0.0000000, 0.0000000, 0.0000000, 0.0000000]], [[0.0000000, 0.0000000, 0.0000000, 0.0000000]], [[0.0000000, 0.0000000, 0.0000000, 0.0000000]], [[0.0000000, 0.0000000, 0.0000000, 0.0000000]], [[0.0000000, 0.0000000, 0.0000000, 0.0000000]], [[0.0000000, 0.0000000, 0.0000000, 0.0000000]], [[0.0000000, 0.0000000, 0.0000000, 0.0000000]], [[0.0000000, 0.0000000, 0.0000000, 0.0000000]]]]

Expected (Unparsed): [[[[-0.04044480001337689,0.026145815204998646,-0.04364834852928792,0.05794733333766611]],[[0.012313100268541896,-0.022123976944500003,-0.045364053620943846,0.05517493029690193]],[[0.0,0.0,0.0,0.0]],[[0.0,0.0,0.0,0.0]],[[0.0,0.0,0.0,0.0]],[[0.0,0.0,0.0,0.0]],[[0.0,0.0,0.0,0.0]],[[0.0,0.0,0.0,0.0]],[[0.0,0.0,0.0,0.0]],[[0.0,0.0,0.0,0.0]],[[0.0,0.0,0.0,0.0]],[[0.0,0.0,0.0,0.0]],[[-0.022157582592623553,0.014323919506701014,-0.02391263863956403,0.03174630172548656]],[[0.00674461403027374,-0.01211861205147138,-0.024848578006271656,0.030222576027469302]],[[0.0,0.0,0.0,0.0]],[[0.0,0.0,0.0,0.0]],[[0.0,0.0,0.0,0.0]],[[0.0,0.0,0.0,0.0]],[[0.0,0.0,0.0,0.0]],[[0.0,0.0,0.0,0.0]],[[0.0,0.0,0.0,0.0]],[[0.0,0.0,0.0,0.0]],[[0.0,0.0,0.0,0.0]],[[0.0,0.0,0.0,0.0]]]]

Actual:   [[[[-0.0404, 0.0262, -0.0436, 0.058]], [[0.0124, -0.0221, -0.0453, 0.0552]], [[0, 0, 0, 0]], [[0, 0, 0, 0]], [[0, 0, 0, 0]], [[0, 0, 0, 0]], [[0, 0, 0, 0]], [[0, 0, 0, 0]], [[0, 0, 0, 0]], [[0, 0, 0, 0]], [[0, 0, 0, 0]], [[0, 0, 0, 0]], [[-0.0221, 0.0144, -0.0239, 0.0318]], [[0.0068, -0.0121, -0.0248, 0.0303]], [[0, 0, 0, 0]], [[0, 0, 0, 0]], [[0, 0, 0, 0]], [[0, 0, 0, 0]], [[0, 0, 0, 0]], [[0, 0, 0, 0]], [[0, 0, 0, 0]], [[0, 0, 0, 0]], [[0, 0, 0, 0]], [[0, 0, 0, 0]]]]

Expected: [[[[-0.0404, 0.0262, -0.0436, 0.058]], [[0.0124, -0.0221, -0.0453, 0.0552]], [[0, 0, 0, 0]], [[0, 0, 0, 0]], [[0, 0, 0, 0]], [[0, 0, 0, 0]], [[0, 0, 0, 0]], [[0, 0, 0, 0]], [[0, 0, 0, 0]], [[0, 0, 0, 0]], [[0, 0, 0, 0]], [[0, 0, 0, 0]], [[-0.0221, 0.0144, -0.0239, 0.0318]], [[0.0068, -0.0121, -0.0248, 0.0303]], [[0, 0, 0, 0]], [[0, 0, 0, 0]], [[0, 0, 0, 0]], [[0, 0, 0, 0]], [[0, 0, 0, 0]], [[0, 0, 0, 0]], [[0, 0, 0, 0]], [[0, 0, 0, 0]], [[0, 0, 0, 0]], [[0, 0, 0, 0]]]]