import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Ave47176 = tf.keras.layers.Input(shape=([2, 2, 2, 2]))
in1Ave47176 = tf.keras.layers.Input(shape=([2, 2, 2, 2]))
in0Mul20412 = tf.keras.layers.Input(shape=([2, 1]))
in1Mul20412 = tf.keras.layers.Input(shape=([2, 1]))
in0Glo61596 = tf.keras.layers.Input(shape=([2, 1, 1, 1]))
in0Con65293 = tf.keras.layers.Input(shape=([2, 2, 3]))

Ave47176 = keras.layers.Average(name = 'Ave47176', )([in0Ave47176,in1Ave47176])
Den68212 = keras.layers.Dense(2,name = 'Den68212', )(Ave47176)
Res52398 = keras.layers.Reshape((2, 2, 4), name = 'Res52398', )(Den68212)
Mul20412 = keras.layers.Multiply(name = 'Mul20412', )([in0Mul20412,in1Mul20412])
Fla27262 = keras.layers.Flatten(name = 'Fla27262', )(Mul20412)
Res73148 = keras.layers.Reshape((2, 1), name = 'Res73148', )(Fla27262)
Res35053 = keras.layers.Reshape((2, 1, 1), name = 'Res35053', )(Res73148)
Glo61596 = keras.layers.GlobalAveragePooling3D(name = 'Glo61596', )(in0Glo61596)
Res73360 = keras.layers.Reshape((1, 1), name = 'Res73360', )(Glo61596)
Res22317 = keras.layers.Reshape((1, 1, 1), name = 'Res22317', )(Res73360)
Max36799 = keras.layers.MaxPool2D(pool_size=(1, 1), strides=(4, 1), padding='valid', name = 'Max36799', )(Res22317)
Zer84541 = keras.layers.ZeroPadding2D(padding=((1, 0), (0, 0)), name = 'Zer84541', )(Max36799)
Max33193 = keras.layers.Maximum(name = 'Max33193', )([Res35053,Zer84541])
Zer80847 = keras.layers.ZeroPadding2D(padding=((0, 0), (1, 0)), name = 'Zer80847', )(Max33193)
Con65293 = keras.layers.Concatenate(axis=3, name = 'Con65293', )([Zer80847,in0Con65293])
Add42106 = keras.layers.Add(name = 'Add42106', )([Res52398,Con65293])
model = tf.keras.models.Model(inputs=[in0Ave47176,in1Ave47176,in0Mul20412,in1Mul20412,in0Glo61596,in0Con65293], outputs=Add42106)
w = model.get_layer('Den68212').get_weights() 
w[0] = np.array([[0.1818, 0.7893], [0.8319, 0.7489]])
w[1] = np.array([0.8043, 0.7963])
model.get_layer('Den68212').set_weights(w) 
in0Ave47176 = tf.constant([[[[[0.1525, 0.7094], [0.7334, 0.7593]], [[0.9121, 0.8445], [0.6934, 0.7224]]], [[[0.0121, 0.8564], [0.6838, 0.4511]], [[0.4303, 0.1369], [0.5391, 0.2582]]]]])
in1Ave47176 = tf.constant([[[[[0.5861, 0.8181], [0.3724, 0.575]], [[0.8753, 0.339], [0.3411, 0.7475]]], [[[0.3735, 0.3893], [0.9156, 0.06]], [[0.7573, 0.765], [0.696, 0.2062]]]]])
in0Mul20412 = tf.constant([[[0.7706], [0.3917]]])
in1Mul20412 = tf.constant([[[0.3019], [0.48]]])
in0Glo61596 = tf.constant([[[[[1.4973]]], [[[1.4045]]]]])
in0Con65293 = tf.constant([[[[0.9556, 0.6842, 0.7804], [0.4297, 0.6312, 0.3728]], [[0.5006, 0.2982, 0.8814], [0.275, 0.4195, 0.8353]]]])
print (np.array2string(model.predict([in0Ave47176,in1Ave47176,in0Mul20412,in1Mul20412,in0Glo61596,in0Con65293],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Add42106.png')

LAve47176 = average_layer([[[[[[0.1525, 0.7094], [0.7334, 0.7593]], [[0.9121, 0.8445], [0.6934, 0.7224]]], [[[0.0121, 0.8564], [0.6838, 0.4511]], [[0.4303, 0.1369], [0.5391, 0.2582]]]]], [[[[[0.5861, 0.8181], [0.3724, 0.575]], [[0.8753, 0.339], [0.3411, 0.7475]]], [[[0.3735, 0.3893], [0.9156, 0.06]], [[0.7573, 0.765], [0.696, 0.2062]]]]]], Ave47176), 
LDen68212 = dense_layer(Ave47176, [[0.1818, 0.7893], [0.8319, 0.7489]],[0.8043, 0.7963], Den68212), 
LRes52398 = reshape_layer(Den68212, [2, 2, 4], Res52398), 
LMul20412 = multiply_layer([[[[0.7706], [0.3917]]], [[[0.3019], [0.48]]]], Mul20412), 
LFla27262 = flatten_layer(Mul20412, Fla27262), 
LRes73148 = reshape_layer(Fla27262, [2, 1], Res73148), 
LRes35053 = reshape_layer(Res73148, [2, 1, 1], Res35053), 
LGlo61596 = global_average_pooling3D_layer([[[[[1.4973]]], [[[1.4045]]]]], Glo61596), 
LRes73360 = reshape_layer(Glo61596, [1, 1], Res73360), 
LRes22317 = reshape_layer(Res73360, [1, 1, 1], Res22317), 
LMax36799 = max_pool2D_layer(Res22317, 1, 1, 4, 1, false, Max36799), 
LZer84541 = zero_padding2D_layer(Max36799, 1, 0, 0, 0, Zer84541), 
LMax33193 = maximum_layer([Res35053,Zer84541], Max33193), 
LZer80847 = zero_padding2D_layer(Max33193, 0, 0, 1, 0, Zer80847), 
LCon65293 = concatenate_layer([Zer80847,[[[[0.9556, 0.6842, 0.7804], [0.4297, 0.6312, 0.3728]], [[0.5006, 0.2982, 0.8814], [0.275, 0.4195, 0.8353]]]]], 3, Con65293), 
LAdd42106 = add_layer([Res52398,Con65293], Add42106), 
exec_layers([LAve47176,LDen68212,LRes52398,LMul20412,LFla27262,LRes73148,LRes35053,LGlo61596,LRes73360,LRes22317,LMax36799,LZer84541,LMax33193,LZer80847,LCon65293,LAdd42106],["Ave47176","Den68212","Res52398","Mul20412","Fla27262","Res73148","Res35053","Glo61596","Res73360","Res22317","Max36799","Zer84541","Max33193","Zer80847","Con65293","Add42106"],Add42106,"Add42106")

Actual (Unparsed): [[[[1.5068024, 2.6153609, 2.1440193, 2.5127326], [1.6916956, 2.3745590, 2.1409410, 2.1277695]], [[1.3575000, 1.9155294, 1.4604775, 2.5002846], [2.7382982, 1.8777028, 1.5292378, 2.2929268]]]]

Expected (Unparsed): [[[[1.506802365,2.615360865,2.144019305,2.512732605],[1.691695625,2.374558985,2.140940955,2.12776948]],[[1.3574999550000002,1.915529405,1.460477505,2.500284605],[2.738298145,1.8777027950000003,1.5292377700000002,2.292926795]]]]

Actual:   [[[[1.5069, 2.6154, 2.1441, 2.5128], [1.6917, 2.3746, 2.141, 2.1278]], [[1.3575, 1.9156, 1.4605, 2.5003], [2.7383, 1.8778, 1.5293, 2.293]]]]

Expected: [[[[1.5069, 2.6154, 2.1441, 2.5128], [1.6917, 2.3746, 2.141, 2.1278]], [[1.3575, 1.9156, 1.4605, 2.5003], [2.7383, 1.8778, 1.5293, 2.293]]]]