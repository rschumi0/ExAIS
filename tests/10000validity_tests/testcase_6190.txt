import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Zer94475 = tf.keras.layers.Input(shape=([3, 4]))

Zer94475 = keras.layers.ZeroPadding1D(padding=((1, 1)), name = 'Zer94475', )(in0Zer94475)
Fla32097 = keras.layers.Flatten(name = 'Fla32097', )(Zer94475)
model = tf.keras.models.Model(inputs=[in0Zer94475], outputs=Fla32097)
in0Zer94475 = tf.constant([[[1.9313, 1.2697, 1.789, 1.9748], [1.3719, 1.9862, 1.8369, 1.6145], [1.3775, 1.55, 1.348, 1.8094]]])
print (np.array2string(model.predict([in0Zer94475],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Fla32097.png')

LZer94475 = zero_padding1D_layer([[[1.9313, 1.2697, 1.789, 1.9748], [1.3719, 1.9862, 1.8369, 1.6145], [1.3775, 1.55, 1.348, 1.8094]]], 1, 1, Zer94475), 
LFla32097 = flatten_layer(Zer94475, Fla32097), 
exec_layers([LZer94475,LFla32097],["Zer94475","Fla32097"],Fla32097,"Fla32097")

Actual (Unparsed): [[0.0000000, 0.0000000, 0.0000000, 0.0000000, 1.9313000, 1.2697001, 1.7890000, 1.9748000, 1.3719000, 1.9862000, 1.8369000, 1.6145000, 1.3775001, 1.5500000, 1.3480000, 1.8094000, 0.0000000, 0.0000000, 0.0000000, 0.0000000]]

Expected (Unparsed): [[0,0,0,0,1.9313,1.2697,1.789,1.9748,1.3719,1.9862,1.8369,1.6145,1.3775,1.55,1.348,1.8094,0,0,0,0]]

Actual:   [[0, 0, 0, 0, 1.9313, 1.2698, 1.789, 1.9748, 1.3719, 1.9862, 1.8369, 1.6145, 1.3776, 1.55, 1.348, 1.8094, 0, 0, 0, 0]]

Expected: [[0, 0, 0, 0, 1.9313, 1.2697, 1.789, 1.9748, 1.3719, 1.9862, 1.8369, 1.6145, 1.3775, 1.55, 1.348, 1.8094, 0, 0, 0, 0]]