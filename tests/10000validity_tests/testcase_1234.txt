import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Max22468 = tf.keras.layers.Input(shape=([2, 1, 2]))
in1Max22468 = tf.keras.layers.Input(shape=([2, 1, 2]))

Max22468 = keras.layers.Maximum(name = 'Max22468', )([in0Max22468,in1Max22468])
Den40089 = keras.layers.Dense(2,name = 'Den40089', )(Max22468)
Res11320 = keras.layers.Reshape((2, 1, 2, 1), name = 'Res11320', )(Den40089)
Zer35013 = keras.layers.ZeroPadding3D(padding=((1, 1), (1, 1), (1, 1)), name = 'Zer35013', )(Res11320)
model = tf.keras.models.Model(inputs=[in0Max22468,in1Max22468], outputs=Zer35013)
w = model.get_layer('Den40089').get_weights() 
w[0] = np.array([[0.4512, 0.4195], [0.955, 0.1272]])
w[1] = np.array([0.0909, 0.2673])
model.get_layer('Den40089').set_weights(w) 
in0Max22468 = tf.constant([[[[0.8993, 0.7284]], [[0.9272, 0.1803]]]])
in1Max22468 = tf.constant([[[[0.7983, 0.2328]], [[0.933, 0.6027]]]])
print (np.array2string(model.predict([in0Max22468,in1Max22468],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Zer35013.png')

LMax22468 = maximum_layer([[[[[0.8993, 0.7284]], [[0.9272, 0.1803]]]], [[[[0.7983, 0.2328]], [[0.933, 0.6027]]]]], Max22468), 
LDen40089 = dense_layer(Max22468, [[0.4512, 0.4195], [0.955, 0.1272]],[0.0909, 0.2673], Den40089), 
LRes11320 = reshape_layer(Den40089, [2, 1, 2, 1], Res11320), 
LZer35013 = zero_padding3D_layer(Res11320, 1, 1, 1, 1, 1, 1, Zer35013), 
exec_layers([LMax22468,LDen40089,LRes11320,LZer35013],["Max22468","Den40089","Res11320","Zer35013"],Zer35013,"Zer35013")

Actual (Unparsed): [[[[[0.0000000], [0.0000000], [0.0000000], [0.0000000]], [[0.0000000], [0.0000000], [0.0000000], [0.0000000]], [[0.0000000], [0.0000000], [0.0000000], [0.0000000]]], [[[0.0000000], [0.0000000], [0.0000000], [0.0000000]], [[0.0000000], [1.1922861], [0.7372088], [0.0000000]], [[0.0000000], [0.0000000], [0.0000000], [0.0000000]]], [[[0.0000000], [0.0000000], [0.0000000], [0.0000000]], [[0.0000000], [1.0874481], [0.7353570], [0.0000000]], [[0.0000000], [0.0000000], [0.0000000], [0.0000000]]], [[[0.0000000], [0.0000000], [0.0000000], [0.0000000]], [[0.0000000], [0.0000000], [0.0000000], [0.0000000]], [[0.0000000], [0.0000000], [0.0000000], [0.0000000]]]]]

Expected (Unparsed): [[[[[0],[0],[0],[0]],[[0],[0],[0],[0]],[[0],[0],[0],[0]]],[[[0],[0],[0],[0]],[[0],[1.1922861599999999],[0.73720883],[0]],[[0],[0],[0],[0]]],[[[0],[0],[0],[0]],[[0],[1.0874481],[0.7353569400000001],[0]],[[0],[0],[0],[0]]],[[[0],[0],[0],[0]],[[0],[0],[0],[0]],[[0],[0],[0],[0]]]]]

Actual:   [[[[[0], [0], [0], [0]], [[0], [0], [0], [0]], [[0], [0], [0], [0]]], [[[0], [0], [0], [0]], [[0], [1.1923], [0.7373], [0]], [[0], [0], [0], [0]]], [[[0], [0], [0], [0]], [[0], [1.0875], [0.7354], [0]], [[0], [0], [0], [0]]], [[[0], [0], [0], [0]], [[0], [0], [0], [0]], [[0], [0], [0], [0]]]]]

Expected: [[[[[0], [0], [0], [0]], [[0], [0], [0], [0]], [[0], [0], [0], [0]]], [[[0], [0], [0], [0]], [[0], [1.1923], [0.7373], [0]], [[0], [0], [0], [0]]], [[[0], [0], [0], [0]], [[0], [1.0875], [0.7354], [0]], [[0], [0], [0], [0]]], [[[0], [0], [0], [0]], [[0], [0], [0], [0]], [[0], [0], [0], [0]]]]]