import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Ave82403 = tf.keras.layers.Input(shape=([2, 2, 2]))
in1Ave82403 = tf.keras.layers.Input(shape=([2, 2, 2]))
in0Up_33291 = tf.keras.layers.Input(shape=([3, 4, 3]))
in0Con11865 = tf.keras.layers.Input(shape=([2, 2, 2, 1]))

Ave82403 = keras.layers.Average(name = 'Ave82403', )([in0Ave82403,in1Ave82403])
Res58007 = keras.layers.Reshape((2, 2, 2, 1), name = 'Res58007', )(Ave82403)
Con16360 = keras.layers.Conv3DTranspose(2, (1, 1, 2),strides=(1, 1, 1), padding='same', name = 'Con16360', )(Res58007)
Lay7664 = keras.layers.LayerNormalization(axis=1, epsilon=1.6308327463260275, name = 'Lay7664', )(Con16360)
Up_33291 = keras.layers.UpSampling2D(size=(1, 1), name = 'Up_33291', )(in0Up_33291)
Res54294 = keras.layers.Reshape((3, 4, 3, 1), name = 'Res54294', )(Up_33291)
Cro11897 = keras.layers.Cropping3D(cropping=((2, 0), (3, 0), (1, 1)), name = 'Cro11897', )(Res54294)
Zer99970 = keras.layers.ZeroPadding3D(padding=((1, 0), (1, 0), (1, 0)), name = 'Zer99970', )(Cro11897)
Con11865 = keras.layers.Concatenate(axis=4, name = 'Con11865', )([Zer99970,in0Con11865])
Add82507 = keras.layers.Add(name = 'Add82507', )([Lay7664,Con11865])
model = tf.keras.models.Model(inputs=[in0Ave82403,in1Ave82403,in0Up_33291,in0Con11865], outputs=Add82507)
w = model.get_layer('Con16360').get_weights() 
w[0] = np.array([[[[[0.9124], [0.8082]], [[0.2322], [0.3389]]]]])
w[1] = np.array([0, 0])
model.get_layer('Con16360').set_weights(w) 
in0Ave82403 = tf.constant([[[[0.0287, 0.3502], [0.244, 0.7301]], [[0.5721, 0.5549], [0.84, 0.5475]]]])
in1Ave82403 = tf.constant([[[[0.6077, 0.2967], [0.1845, 0.7685]], [[0.681, 0.421], [0.6833, 0.7064]]]])
in0Up_33291 = tf.constant([[[[1.2649, 1.6363, 1.3948], [1.1023, 1.5117, 1.7831], [1.5453, 1.6382, 1.9043], [1.2222, 1.6255, 1.7865]], [[1.7168, 1.4372, 1.6947], [1.4482, 1.9419, 1.2963], [1.0304, 1.5759, 1.8784], [1.8027, 1.0642, 1.2539]], [[1.8828, 1.5794, 1.619], [1.5092, 1.8859, 1.778], [1.8265, 1.4694, 1.1498], [1.5813, 1.7445, 1.3474]]]])
in0Con11865 = tf.constant([[[[[0.8752], [0.0783]], [[0.1435], [0.805]]], [[[0.1465], [0.087]], [[0.841], [0.9026]]]]])
print (np.array2string(model.predict([in0Ave82403,in1Ave82403,in0Up_33291,in0Con11865],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Add82507.png')

LAve82403 = average_layer([[[[[0.0287, 0.3502], [0.244, 0.7301]], [[0.5721, 0.5549], [0.84, 0.5475]]]], [[[[0.6077, 0.2967], [0.1845, 0.7685]], [[0.681, 0.421], [0.6833, 0.7064]]]]], Ave82403), 
LRes58007 = reshape_layer(Ave82403, [2, 2, 2, 1], Res58007), 
LCon16360 = conv3D_transpose_layer(Res58007, 1, 1, 2,[[[[[0.9124], [0.8082]], [[0.2322], [0.3389]]]]],[0, 0], 1, 1, 1, true, Con16360), 
LLay7664 = layer_normalization_layer(Con16360, 1, 1.6308327463260275, Lay7664), 
LUp_33291 = up_sampling2D_layer([[[[1.2649, 1.6363, 1.3948], [1.1023, 1.5117, 1.7831], [1.5453, 1.6382, 1.9043], [1.2222, 1.6255, 1.7865]], [[1.7168, 1.4372, 1.6947], [1.4482, 1.9419, 1.2963], [1.0304, 1.5759, 1.8784], [1.8027, 1.0642, 1.2539]], [[1.8828, 1.5794, 1.619], [1.5092, 1.8859, 1.778], [1.8265, 1.4694, 1.1498], [1.5813, 1.7445, 1.3474]]]], 1, 1, Up_33291), 
LRes54294 = reshape_layer(Up_33291, [3, 4, 3, 1], Res54294), 
LCro11897 = cropping3D_layer(Res54294, 2, 0, 3, 0, 1, 1, Cro11897), 
LZer99970 = zero_padding3D_layer(Cro11897, 1, 0, 1, 0, 1, 0, Zer99970), 
LCon11865 = concatenate_layer([Zer99970,[[[[[0.8752], [0.0783]], [[0.1435], [0.805]]], [[[0.1465], [0.087]], [[0.841], [0.9026]]]]]], 4, Con11865), 
LAdd82507 = add_layer([Lay7664,Con11865], Add82507), 
exec_layers([LAve82403,LRes58007,LCon16360,LLay7664,LUp_33291,LRes54294,LCro11897,LZer99970,LCon11865,LAdd82507],["Ave82403","Res58007","Con16360","Lay7664","Up_33291","Res54294","Cro11897","Zer99970","Con11865","Add82507"],Add82507,"Add82507")

Actual (Unparsed): [[[[[-0.1094903, 0.7780885], [-0.0864727, -0.0142692]], [[-0.1919140, -0.0271748], [-0.0060585, 0.7711010]]], [[[0.1094903, 0.2436115], [0.0864727, 0.1795692]], [[0.1919140, 1.0116749], [1.7505585, 0.9364990]]]]]

Expected (Unparsed): [[[[[-0.10949028963329878,0.7780885279878115],[-0.08647268920995806,-0.014269166305172332]],[[-0.19191398162151965,-0.0271748363341148],[-0.0060584823061294825,0.7711009998935976]]],[[[0.10949028963329882,0.24361147201218858],[0.0864726892099581,0.17956916630517236]],[[0.19191398162151965,1.0116748363341148],[1.7505584823061295,0.9364990001064023]]]]]

Actual:   [[[[[-0.1094, 0.7781], [-0.0864, -0.0142]], [[-0.1919, -0.0271], [-0.006, 0.7712]]], [[[0.1095, 0.2437], [0.0865, 0.1796]], [[0.192, 1.0117], [1.7506, 0.9365]]]]]

Expected: [[[[[-0.1094, 0.7781], [-0.0864, -0.0142]], [[-0.1919, -0.0271], [-0.006, 0.7712]]], [[[0.1095, 0.2437], [0.0865, 0.1796]], [[0.192, 1.0117], [1.7506, 0.9365]]]]]