import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Dot98906 = tf.keras.layers.Input(shape=([2]))
in1Dot98906 = tf.keras.layers.Input(shape=([2]))
in0Con44751 = tf.keras.layers.Input(shape=([10]))
in0Up_31751 = tf.keras.layers.Input(shape=([3, 3]))
in0Con16486 = tf.keras.layers.Input(shape=([10]))
in0Min79388 = tf.keras.layers.Input(shape=([2, 2, 1, 2]))
in1Min79388 = tf.keras.layers.Input(shape=([2, 2, 1, 2]))

Dot98906 = keras.layers.Dot(axes=(1, 1), name = 'Dot98906', )([in0Dot98906,in1Dot98906])
Res15429 = keras.layers.Reshape((1, 1), name = 'Res15429', )(Dot98906)
Res27256 = keras.layers.Reshape((1, 1, 1), name = 'Res27256', )(Res15429)
Res88056 = keras.layers.Reshape((1, 1, 1, 1), name = 'Res88056', )(Res27256)
Con49001 = keras.layers.Conv3D(3, (1, 1, 1),strides=(1, 1, 1), padding='same', dilation_rate=(1, 1, 1), name = 'Con49001', )(Res88056)
Res58554 = keras.layers.Reshape((1, 1, 3), name = 'Res58554', )(Con49001)
Res47005 = keras.layers.Reshape((1, 3), name = 'Res47005', )(Res58554)
Up_69643 = keras.layers.UpSampling1D(size=(2), name = 'Up_69643', )(Res47005)
Fla10016 = keras.layers.Flatten(name = 'Fla10016', )(Up_69643)
Con44751 = keras.layers.Concatenate(axis=1, name = 'Con44751', )([Fla10016,in0Con44751])
Up_31751 = keras.layers.UpSampling1D(size=(1), name = 'Up_31751', )(in0Up_31751)
Cro13987 = keras.layers.Cropping1D(cropping=((0, 1)), name = 'Cro13987', )(Up_31751)
Fla39194 = keras.layers.Flatten(name = 'Fla39194', )(Cro13987)
Con16486 = keras.layers.Concatenate(axis=1, name = 'Con16486', )([Fla39194,in0Con16486])
Min79388 = keras.layers.Minimum(name = 'Min79388', )([in0Min79388,in1Min79388])
Res77051 = keras.layers.Reshape((2, 2, 2), name = 'Res77051', )(Min79388)
Up_66281 = keras.layers.UpSampling2D(size=(2, 1), name = 'Up_66281', )(Res77051)
Res65747 = keras.layers.Reshape((4, 4), name = 'Res65747', )(Up_66281)
Fla55342 = keras.layers.Flatten(name = 'Fla55342', )(Res65747)
Mul99477 = keras.layers.Multiply(name = 'Mul99477', )([Con16486,Fla55342])
Min32868 = keras.layers.Minimum(name = 'Min32868', )([Con44751,Mul99477])
model = tf.keras.models.Model(inputs=[in0Dot98906,in1Dot98906,in0Con44751,in0Up_31751,in0Con16486,in0Min79388,in1Min79388], outputs=Min32868)
w = model.get_layer('Con49001').get_weights() 
w[0] = np.array([[[[[0.7117, 0.0374, 0.6217]]]]])
w[1] = np.array([0, 0, 0])
model.get_layer('Con49001').set_weights(w) 
in0Dot98906 = tf.constant([[0.1592, 0.2211]])
in1Dot98906 = tf.constant([[0.6006, 0.917]])
in0Con44751 = tf.constant([[0.3273, 0.2535, 0.7638, 0.1598, 0.8532, 0.6112, 0.4944, 0.3931, 0.6766, 0.721]])
in0Up_31751 = tf.constant([[[1.2214, 1.369, 1.425], [1.21, 1.4108, 1.8706], [1.3581, 1.6207, 1.7559]]])
in0Con16486 = tf.constant([[0.9609, 0.1632, 0.6903, 0.0836, 0.8883, 0.0471, 0.1007, 0.8086, 0.3556, 0.8836]])
in0Min79388 = tf.constant([[[[[0.2849, 0.1248]], [[0.1245, 0.4337]]], [[[0.9574, 0.3157]], [[0.1951, 0.7448]]]]])
in1Min79388 = tf.constant([[[[[0.3085, 0.0211]], [[0.5669, 0.9496]]], [[[0.9932, 0.2219]], [[0.0721, 0.4286]]]]])
print (np.array2string(model.predict([in0Dot98906,in1Dot98906,in0Con44751,in0Up_31751,in0Con16486,in0Min79388,in1Min79388],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Min32868.png')

LDot98906 = dot_layer([[0.1592, 0.2211]], [[0.6006, 0.917]], 1, 1, Dot98906), 
LRes15429 = reshape_layer(Dot98906, [1, 1], Res15429), 
LRes27256 = reshape_layer(Res15429, [1, 1, 1], Res27256), 
LRes88056 = reshape_layer(Res27256, [1, 1, 1, 1], Res88056), 
LCon49001 = conv3D_layer(Res88056, 1, 1, 1,[[[[[0.7117, 0.0374, 0.6217]]]]],[0, 0, 0], 1, 1, 1, true, 1, 1, 1, Con49001), 
LRes58554 = reshape_layer(Con49001, [1, 1, 3], Res58554), 
LRes47005 = reshape_layer(Res58554, [1, 3], Res47005), 
LUp_69643 = up_sampling1D_layer(Res47005, 2, Up_69643), 
LFla10016 = flatten_layer(Up_69643, Fla10016), 
LCon44751 = concatenate_layer([Fla10016,[[0.3273, 0.2535, 0.7638, 0.1598, 0.8532, 0.6112, 0.4944, 0.3931, 0.6766, 0.721]]], 1, Con44751), 
LUp_31751 = up_sampling1D_layer([[[1.2214, 1.369, 1.425], [1.21, 1.4108, 1.8706], [1.3581, 1.6207, 1.7559]]], 1, Up_31751), 
LCro13987 = cropping1D_layer(Up_31751, 0, 1, Cro13987), 
LFla39194 = flatten_layer(Cro13987, Fla39194), 
LCon16486 = concatenate_layer([Fla39194,[[0.9609, 0.1632, 0.6903, 0.0836, 0.8883, 0.0471, 0.1007, 0.8086, 0.3556, 0.8836]]], 1, Con16486), 
LMin79388 = minimum_layer([[[[[[0.2849, 0.1248]], [[0.1245, 0.4337]]], [[[0.9574, 0.3157]], [[0.1951, 0.7448]]]]], [[[[[0.3085, 0.0211]], [[0.5669, 0.9496]]], [[[0.9932, 0.2219]], [[0.0721, 0.4286]]]]]], Min79388), 
LRes77051 = reshape_layer(Min79388, [2, 2, 2], Res77051), 
LUp_66281 = up_sampling2D_layer(Res77051, 2, 1, Up_66281), 
LRes65747 = reshape_layer(Up_66281, [4, 4], Res65747), 
LFla55342 = flatten_layer(Res65747, Fla55342), 
LMul99477 = multiply_layer([Con16486,Fla55342], Mul99477), 
LMin32868 = minimum_layer([Con44751,Mul99477], Min32868), 
exec_layers([LDot98906,LRes15429,LRes27256,LRes88056,LCon49001,LRes58554,LRes47005,LUp_69643,LFla10016,LCon44751,LUp_31751,LCro13987,LFla39194,LCon16486,LMin79388,LRes77051,LUp_66281,LRes65747,LFla55342,LMul99477,LMin32868],["Dot98906","Res15429","Res27256","Res88056","Con49001","Res58554","Res47005","Up_69643","Fla10016","Con44751","Up_31751","Cro13987","Fla39194","Con16486","Min79388","Res77051","Up_66281","Res65747","Fla55342","Mul99477","Min32868"],Min32868,"Min32868")

Actual (Unparsed): [[0.2123458, 0.0111588, 0.1774125, 0.2123458, 0.0111588, 0.0394697, 0.1196321, 0.0707798, 0.6608932, 0.0185508, 0.0640464, 0.0201871, 0.0964102, 0.1794283, 0.0256388, 0.3787110]]

Expected (Unparsed): [[0.21234581537400002,0.011158821828000001,0.1774125,0.21234581537400002,0.011158821828000001,0.039469660000000004,0.11963204999999999,0.07077984,0.6608932200000001,0.01855084,0.06404643,0.02018706,0.09641018,0.17942834,0.02563876,0.37871096]]

Actual:   [[0.2124, 0.0112, 0.1775, 0.2124, 0.0112, 0.0395, 0.1197, 0.0708, 0.6609, 0.0186, 0.0641, 0.0202, 0.0965, 0.1795, 0.0257, 0.3788]]

Expected: [[0.2124, 0.0112, 0.1775, 0.2124, 0.0112, 0.0395, 0.1197, 0.0708, 0.6609, 0.0186, 0.0641, 0.0202, 0.0965, 0.1795, 0.0257, 0.3788]]