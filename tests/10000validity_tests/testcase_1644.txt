import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Add5833 = tf.keras.layers.Input(shape=([1, 2]))
in1Add5833 = tf.keras.layers.Input(shape=([1, 2]))
in0Con22219 = tf.keras.layers.Input(shape=([4, 2]))
in0Add90909 = tf.keras.layers.Input(shape=([2, 2, 1, 2]))
in1Add90909 = tf.keras.layers.Input(shape=([2, 2, 1, 2]))
in0Con8073 = tf.keras.layers.Input(shape=([4, 4, 1]))
in0Add70296 = tf.keras.layers.Input(shape=([2, 2, 1]))
in1Add70296 = tf.keras.layers.Input(shape=([2, 2, 1]))
in0Con54260 = tf.keras.layers.Input(shape=([2, 2, 1]))
in0Min69408 = tf.keras.layers.Input(shape=([2, 1, 2]))
in1Min69408 = tf.keras.layers.Input(shape=([2, 1, 2]))

Add5833 = keras.layers.Add(name = 'Add5833', )([in0Add5833,in1Add5833])
Zer69501 = keras.layers.ZeroPadding1D(padding=((3, 0)), name = 'Zer69501', )(Add5833)
Con22219 = keras.layers.Concatenate(axis=2, name = 'Con22219', )([Zer69501,in0Con22219])
Add90909 = keras.layers.Add(name = 'Add90909', )([in0Add90909,in1Add90909])
Res94199 = keras.layers.Reshape((2, 2, 2), name = 'Res94199', )(Add90909)
Res35456 = keras.layers.Reshape((2, 4), name = 'Res35456', )(Res94199)
Up_99016 = keras.layers.UpSampling1D(size=(2), name = 'Up_99016', )(Res35456)
Mul35416 = keras.layers.Multiply(name = 'Mul35416', )([Con22219,Up_99016])
Res17853 = keras.layers.Reshape((4, 4, 1), name = 'Res17853', )(Mul35416)
Con8073 = keras.layers.Concatenate(axis=3, name = 'Con8073', )([Res17853,in0Con8073])
Add70296 = keras.layers.Add(name = 'Add70296', )([in0Add70296,in1Add70296])
Res19522 = keras.layers.Reshape((2, 2), name = 'Res19522', )(Add70296)
Per85814 = keras.layers.Permute((2,1), name = 'Per85814',)(Res19522)
Res73207 = keras.layers.Reshape((2, 2, 1), name = 'Res73207', )(Per85814)
Con54260 = keras.layers.Concatenate(axis=3, name = 'Con54260', )([Res73207,in0Con54260])
Min69408 = keras.layers.Minimum(name = 'Min69408', )([in0Min69408,in1Min69408])
Zer92049 = keras.layers.ZeroPadding2D(padding=((0, 0), (1, 0)), name = 'Zer92049', )(Min69408)
Max56795 = keras.layers.Maximum(name = 'Max56795', )([Con54260,Zer92049])
Zer63080 = keras.layers.ZeroPadding2D(padding=((2, 0), (2, 0)), name = 'Zer63080', )(Max56795)
Add69072 = keras.layers.Add(name = 'Add69072', )([Con8073,Zer63080])
model = tf.keras.models.Model(inputs=[in0Add5833,in1Add5833,in0Con22219,in0Add90909,in1Add90909,in0Con8073,in0Add70296,in1Add70296,in0Con54260,in0Min69408,in1Min69408], outputs=Add69072)
in0Add5833 = tf.constant([[[0.4028, 0.9178]]])
in1Add5833 = tf.constant([[[0.9743, 0.0832]]])
in0Con22219 = tf.constant([[[0.9584, 0.1213], [0.1663, 0.6205], [0.5501, 0.9961], [0.2153, 0.2225]]])
in0Add90909 = tf.constant([[[[[0.4131, 0.0914]], [[0.6323, 0.8708]]], [[[0.6934, 0.8373]], [[0.8373, 0.9506]]]]])
in1Add90909 = tf.constant([[[[[0.8476, 0.1546]], [[0.5099, 0.1038]]], [[[0.8059, 0.9621]], [[0.3237, 0.2018]]]]])
in0Con8073 = tf.constant([[[[0.3581], [0.9208], [0.6943], [0.7038]], [[0.8335], [0.6476], [0.0578], [0.2971]], [[0.4319], [0.4657], [0.5479], [0.0691]], [[0.0392], [0.6791], [0.5013], [0.703]]]])
in0Add70296 = tf.constant([[[[0.5591], [0.3631]], [[0.7407], [0.9063]]]])
in1Add70296 = tf.constant([[[[0.2029], [0.7556]], [[0.3461], [0.1806]]]])
in0Con54260 = tf.constant([[[[0.4604], [0.1349]], [[0.3621], [0.1721]]]])
in0Min69408 = tf.constant([[[[0.8127, 0.9735]], [[0.6511, 0.7771]]]])
in1Min69408 = tf.constant([[[[0.1555, 0.108]], [[0.5285, 0.4661]]]])
print (np.array2string(model.predict([in0Add5833,in1Add5833,in0Con22219,in0Add90909,in1Add90909,in0Con8073,in0Add70296,in1Add70296,in0Con54260,in0Min69408,in1Min69408],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Add69072.png')

LAdd5833 = add_layer([[[[0.4028, 0.9178]]], [[[0.9743, 0.0832]]]], Add5833), 
LZer69501 = zero_padding1D_layer(Add5833, 3, 0, Zer69501), 
LCon22219 = concatenate_layer([Zer69501,[[[0.9584, 0.1213], [0.1663, 0.6205], [0.5501, 0.9961], [0.2153, 0.2225]]]], 2, Con22219), 
LAdd90909 = add_layer([[[[[[0.4131, 0.0914]], [[0.6323, 0.8708]]], [[[0.6934, 0.8373]], [[0.8373, 0.9506]]]]], [[[[[0.8476, 0.1546]], [[0.5099, 0.1038]]], [[[0.8059, 0.9621]], [[0.3237, 0.2018]]]]]], Add90909), 
LRes94199 = reshape_layer(Add90909, [2, 2, 2], Res94199), 
LRes35456 = reshape_layer(Res94199, [2, 4], Res35456), 
LUp_99016 = up_sampling1D_layer(Res35456, 2, Up_99016), 
LMul35416 = multiply_layer([Con22219,Up_99016], Mul35416), 
LRes17853 = reshape_layer(Mul35416, [4, 4, 1], Res17853), 
LCon8073 = concatenate_layer([Res17853,[[[[0.3581], [0.9208], [0.6943], [0.7038]], [[0.8335], [0.6476], [0.0578], [0.2971]], [[0.4319], [0.4657], [0.5479], [0.0691]], [[0.0392], [0.6791], [0.5013], [0.703]]]]], 3, Con8073), 
LAdd70296 = add_layer([[[[[0.5591], [0.3631]], [[0.7407], [0.9063]]]], [[[[0.2029], [0.7556]], [[0.3461], [0.1806]]]]], Add70296), 
LRes19522 = reshape_layer(Add70296, [2, 2], Res19522), 
LPer85814 = permute_layer(Res19522, 2,1, Per85814), 
LRes73207 = reshape_layer(Per85814, [2, 2, 1], Res73207), 
LCon54260 = concatenate_layer([Res73207,[[[[0.4604], [0.1349]], [[0.3621], [0.1721]]]]], 3, Con54260), 
LMin69408 = minimum_layer([[[[[0.8127, 0.9735]], [[0.6511, 0.7771]]]], [[[[0.1555, 0.108]], [[0.5285, 0.4661]]]]], Min69408), 
LZer92049 = zero_padding2D_layer(Min69408, 0, 0, 1, 0, Zer92049), 
LMax56795 = maximum_layer([Con54260,Zer92049], Max56795), 
LZer63080 = zero_padding2D_layer(Max56795, 2, 0, 2, 0, Zer63080), 
LAdd69072 = add_layer([Con8073,Zer63080], Add69072), 
exec_layers([LAdd5833,LZer69501,LCon22219,LAdd90909,LRes94199,LRes35456,LUp_99016,LMul35416,LRes17853,LCon8073,LAdd70296,LRes19522,LPer85814,LRes73207,LCon54260,LMin69408,LZer92049,LMax56795,LZer63080,LAdd69072],["Add5833","Zer69501","Con22219","Add90909","Res94199","Res35456","Up_99016","Mul35416","Res17853","Con8073","Add70296","Res19522","Per85814","Res73207","Con54260","Min69408","Zer92049","Max56795","Zer63080","Add69072"],Add69072,"Add69072")

Actual (Unparsed): [[[[0.0000000, 0.3581000], [0.0000000, 0.9208000], [1.0946845, 0.6943000], [0.1182190, 0.7038000]], [[0.0000000, 0.8335000], [0.0000000, 0.6476000], [0.1899479, 0.0578000], [0.6047393, 0.2971000]], [[0.0000000, 0.4319000], [0.0000000, 0.4657000], [1.4006661, 1.0083000], [2.2347057, 0.2040000]], [[2.0646861, 0.0392000], [1.8011994, 0.6791000], [1.3686633, 0.8634000], [1.3433090, 1.1691000]]]]

Expected (Unparsed): [[[[0.0,0.3581],[0.0,0.9208],[1.09468448,0.6943],[0.11821898,0.7038]],[[0.0,0.8335],[0.0,0.6476],[0.18994786,0.0578],[0.6047393000000001,0.2971]],[[0.0,0.4319],[0.0,0.4657],[1.4006661,1.0083],[2.23470564,0.204]],[[2.06468603,0.0392],[1.8011993999999998,0.6791],[1.3686633000000001,0.8634],[1.343309,1.1691]]]]

Actual:   [[[[0, 0.3581], [0, 0.9208], [1.0947, 0.6943], [0.1183, 0.7038]], [[0, 0.8335], [0, 0.6476], [0.19, 0.0578], [0.6048, 0.2971]], [[0, 0.4319], [0, 0.4657], [1.4007, 1.0083], [2.2348, 0.204]], [[2.0647, 0.0392], [1.8012, 0.6791], [1.3687, 0.8634], [1.3434, 1.1691]]]]

Expected: [[[[0, 0.3581], [0, 0.9208], [1.0947, 0.6943], [0.1183, 0.7038]], [[0, 0.8335], [0, 0.6476], [0.19, 0.0578], [0.6048, 0.2971]], [[0, 0.4319], [0, 0.4657], [1.4007, 1.0083], [2.2348, 0.204]], [[2.0647, 0.0392], [1.8012, 0.6791], [1.3687, 0.8634], [1.3434, 1.1691]]]]