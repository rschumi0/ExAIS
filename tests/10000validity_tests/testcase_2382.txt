import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Ave36994 = tf.keras.layers.Input(shape=([2, 2, 1]))
in1Ave36994 = tf.keras.layers.Input(shape=([2, 2, 1]))
in0Con56607 = tf.keras.layers.Input(shape=([2, 4]))
in0Sub96484 = tf.keras.layers.Input(shape=([2, 2, 3]))
in1Sub96484 = tf.keras.layers.Input(shape=([2, 2, 3]))
in0Ave95477 = tf.keras.layers.Input(shape=([1, 2]))
in1Ave95477 = tf.keras.layers.Input(shape=([1, 2]))
in0Con68260 = tf.keras.layers.Input(shape=([2, 4]))

Ave36994 = keras.layers.Average(name = 'Ave36994', )([in0Ave36994,in1Ave36994])
Res11048 = keras.layers.Reshape((2, 2), name = 'Res11048', )(Ave36994)
Con56607 = keras.layers.Concatenate(axis=2, name = 'Con56607', )([Res11048,in0Con56607])
Sub96484 = keras.layers.Subtract(name = 'Sub96484', )([in0Sub96484,in1Sub96484])
Res56400 = keras.layers.Reshape((2, 6), name = 'Res56400', )(Sub96484)
Ave95477 = keras.layers.Average(name = 'Ave95477', )([in0Ave95477,in1Ave95477])
Zer3382 = keras.layers.ZeroPadding1D(padding=((1, 0)), name = 'Zer3382', )(Ave95477)
Con68260 = keras.layers.Concatenate(axis=2, name = 'Con68260', )([Zer3382,in0Con68260])
Min91250 = keras.layers.Minimum(name = 'Min91250', )([Res56400,Con68260])
Mul63156 = keras.layers.Multiply(name = 'Mul63156', )([Con56607,Min91250])
Den45097 = keras.layers.Dense(1,name = 'Den45097', )(Mul63156)
model = tf.keras.models.Model(inputs=[in0Ave36994,in1Ave36994,in0Con56607,in0Sub96484,in1Sub96484,in0Ave95477,in1Ave95477,in0Con68260], outputs=Den45097)
w = model.get_layer('Den45097').get_weights() 
w[0] = np.array([[0.0486], [0.2853], [0.3464], [0.6007], [0.1556], [0.1897]])
w[1] = np.array([0.4094])
model.get_layer('Den45097').set_weights(w) 
in0Ave36994 = tf.constant([[[[0.313], [0.6033]], [[0.9633], [0.5648]]]])
in1Ave36994 = tf.constant([[[[0.0731], [0.4535]], [[0.8381], [0.7423]]]])
in0Con56607 = tf.constant([[[0.3384, 0.1143, 0.3349, 0.1957], [0.2154, 0.8707, 0.0955, 0.6292]]])
in0Sub96484 = tf.constant([[[[0.8165, 0.6926, 0.1254], [0.3746, 0.4538, 0.3324]], [[0.2067, 0.7912, 0.1053], [0.216, 0.4445, 0.6757]]]])
in1Sub96484 = tf.constant([[[[0.3949, 0.2565, 0.9188], [0.442, 0.1597, 0.2542]], [[0.3906, 0.1712, 0.5511], [0.6307, 0.0383, 0.843]]]])
in0Ave95477 = tf.constant([[[0.1866, 0.8072]]])
in1Ave95477 = tf.constant([[[0.9072, 0.8003]]])
in0Con68260 = tf.constant([[[0.7498, 0.9139, 0.8712, 0.4897], [0.5142, 0.4684, 0.0241, 0.087]]])
print (np.array2string(model.predict([in0Ave36994,in1Ave36994,in0Con56607,in0Sub96484,in1Sub96484,in0Ave95477,in1Ave95477,in0Con68260],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Den45097.png')

LAve36994 = average_layer([[[[[0.313], [0.6033]], [[0.9633], [0.5648]]]], [[[[0.0731], [0.4535]], [[0.8381], [0.7423]]]]], Ave36994), 
LRes11048 = reshape_layer(Ave36994, [2, 2], Res11048), 
LCon56607 = concatenate_layer([Res11048,[[[0.3384, 0.1143, 0.3349, 0.1957], [0.2154, 0.8707, 0.0955, 0.6292]]]], 2, Con56607), 
LSub96484 = subtract_layer([[[[0.8165, 0.6926, 0.1254], [0.3746, 0.4538, 0.3324]], [[0.2067, 0.7912, 0.1053], [0.216, 0.4445, 0.6757]]]], [[[[0.3949, 0.2565, 0.9188], [0.442, 0.1597, 0.2542]], [[0.3906, 0.1712, 0.5511], [0.6307, 0.0383, 0.843]]]], Sub96484), 
LRes56400 = reshape_layer(Sub96484, [2, 6], Res56400), 
LAve95477 = average_layer([[[[0.1866, 0.8072]]], [[[0.9072, 0.8003]]]], Ave95477), 
LZer3382 = zero_padding1D_layer(Ave95477, 1, 0, Zer3382), 
LCon68260 = concatenate_layer([Zer3382,[[[0.7498, 0.9139, 0.8712, 0.4897], [0.5142, 0.4684, 0.0241, 0.087]]]], 2, Con68260), 
LMin91250 = minimum_layer([Res56400,Con68260], Min91250), 
LMul63156 = multiply_layer([Con56607,Min91250], Mul63156), 
LDen45097 = dense_layer(Mul63156, [[0.0486], [0.2853], [0.3464], [0.6007], [0.1556], [0.1897]],[0.4094], Den45097), 
exec_layers([LAve36994,LRes11048,LCon56607,LSub96484,LRes56400,LAve95477,LZer3382,LCon68260,LMin91250,LMul63156,LDen45097],["Ave36994","Res11048","Con56607","Sub96484","Res56400","Ave95477","Zer3382","Con68260","Min91250","Mul63156","Den45097"],Den45097,"Den45097")

Actual (Unparsed): [[[0.3299974], [0.2471796]]]

Expected (Unparsed): [[[0.32999737082400005],[0.24717962299899995]]]

Actual:   [[[0.33], [0.2472]]]

Expected: [[[0.33], [0.2472]]]