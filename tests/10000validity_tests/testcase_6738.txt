import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Dot42861 = tf.keras.layers.Input(shape=([2]))
in1Dot42861 = tf.keras.layers.Input(shape=([2]))
in0Con30829 = tf.keras.layers.Input(shape=([2, 2, 2, 1]))
in0Mul46051 = tf.keras.layers.Input(shape=([2, 2, 2, 2]))
in1Mul46051 = tf.keras.layers.Input(shape=([2, 2, 2, 2]))

Dot42861 = keras.layers.Dot(axes=(1, 1), name = 'Dot42861', )([in0Dot42861,in1Dot42861])
Res21810 = keras.layers.Reshape((1, 1), name = 'Res21810', )(Dot42861)
Res91931 = keras.layers.Reshape((1, 1, 1), name = 'Res91931', )(Res21810)
Res40290 = keras.layers.Reshape((1, 1, 1, 1), name = 'Res40290', )(Res91931)
Zer34822 = keras.layers.ZeroPadding3D(padding=((1, 0), (1, 0), (1, 0)), name = 'Zer34822', )(Res40290)
Con30829 = keras.layers.Concatenate(axis=4, name = 'Con30829', )([Zer34822,in0Con30829])
Mul46051 = keras.layers.Multiply(name = 'Mul46051', )([in0Mul46051,in1Mul46051])
Add52655 = keras.layers.Add(name = 'Add52655', )([Con30829,Mul46051])
Res21950 = keras.layers.Reshape((2, 2, 4), name = 'Res21950', )(Add52655)
Res33122 = keras.layers.Reshape((2, 8), name = 'Res33122', )(Res21950)
Max31472 = keras.layers.MaxPool1D(pool_size=(1), name = 'Max31472', )(Res33122)
model = tf.keras.models.Model(inputs=[in0Dot42861,in1Dot42861,in0Con30829,in0Mul46051,in1Mul46051], outputs=Max31472)
in0Dot42861 = tf.constant([[0.8204, 0.7992]])
in1Dot42861 = tf.constant([[0.3462, 0.7119]])
in0Con30829 = tf.constant([[[[[0.1693], [0.0981]], [[0.9693], [0.7567]]], [[[0.453], [0.809]], [[0.7782], [0.7344]]]]])
in0Mul46051 = tf.constant([[[[[0.0855, 0.5221], [0.3076, 0.1823]], [[0.9089, 0.5632], [0.1133, 0.2119]]], [[[0.2927, 0.8498], [0.6096, 0.908]], [[0.2052, 0.304], [0.0758, 0.8718]]]]])
in1Mul46051 = tf.constant([[[[[0.3426, 0.8961], [0.7073, 0.8716]], [[0.7724, 0.2206], [0.013, 0.3365]]], [[[0.3049, 0.077], [0.5122, 0.0549]], [[0.0281, 0.6646], [0.8452, 0.3566]]]]])
print (np.array2string(model.predict([in0Dot42861,in1Dot42861,in0Con30829,in0Mul46051,in1Mul46051],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Max31472.png')

LDot42861 = dot_layer([[0.8204, 0.7992]], [[0.3462, 0.7119]], 1, 1, Dot42861), 
LRes21810 = reshape_layer(Dot42861, [1, 1], Res21810), 
LRes91931 = reshape_layer(Res21810, [1, 1, 1], Res91931), 
LRes40290 = reshape_layer(Res91931, [1, 1, 1, 1], Res40290), 
LZer34822 = zero_padding3D_layer(Res40290, 1, 0, 1, 0, 1, 0, Zer34822), 
LCon30829 = concatenate_layer([Zer34822,[[[[[0.1693], [0.0981]], [[0.9693], [0.7567]]], [[[0.453], [0.809]], [[0.7782], [0.7344]]]]]], 4, Con30829), 
LMul46051 = multiply_layer([[[[[[0.0855, 0.5221], [0.3076, 0.1823]], [[0.9089, 0.5632], [0.1133, 0.2119]]], [[[0.2927, 0.8498], [0.6096, 0.908]], [[0.2052, 0.304], [0.0758, 0.8718]]]]], [[[[[0.3426, 0.8961], [0.7073, 0.8716]], [[0.7724, 0.2206], [0.013, 0.3365]]], [[[0.3049, 0.077], [0.5122, 0.0549]], [[0.0281, 0.6646], [0.8452, 0.3566]]]]]], Mul46051), 
LAdd52655 = add_layer([Con30829,Mul46051], Add52655), 
LRes21950 = reshape_layer(Add52655, [2, 2, 4], Res21950), 
LRes33122 = reshape_layer(Res21950, [2, 8], Res33122), 
LMax31472 = max_pool1D_layer(Res33122, 1, Max31472), 
exec_layers([LDot42861,LRes21810,LRes91931,LRes40290,LZer34822,LCon30829,LMul46051,LAdd52655,LRes21950,LRes33122,LMax31472],["Dot42861","Res21810","Res91931","Res40290","Zer34822","Con30829","Mul46051","Add52655","Res21950","Res33122","Max31472"],Max31472,"Max31472")

Actual (Unparsed): [[[0.0292923, 0.6371538, 0.2175655, 0.2569927, 0.7020344, 1.0935419, 0.0014729, 0.8280043], [0.0892442, 0.5184346, 0.3122371, 0.8588492, 0.0057661, 0.9802384, 0.9170391, 1.0452838]]]

Expected (Unparsed): [[[0.029292300000000004,0.63715381,0.21756548,0.25699268000000003,0.70203436,1.09354192,0.0014728999999999999,0.8280043500000001],[0.08924423000000001,0.5184346,0.31223712000000003,0.8588492000000001,0.00576612,0.9802384,0.91703912,1.04528388]]]

Actual:   [[[0.0293, 0.6372, 0.2176, 0.257, 0.7021, 1.0936, 0.0015, 0.8281], [0.0893, 0.5185, 0.3123, 0.8589, 0.0058, 0.9803, 0.9171, 1.0453]]]

Expected: [[[0.0293, 0.6372, 0.2176, 0.257, 0.7021, 1.0936, 0.0015, 0.8281], [0.0893, 0.5185, 0.3123, 0.8589, 0.0058, 0.9803, 0.9171, 1.0453]]]