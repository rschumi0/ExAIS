import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Min4215 = tf.keras.layers.Input(shape=([2, 2]))
in1Min4215 = tf.keras.layers.Input(shape=([2, 2]))
in0Dot95619 = tf.keras.layers.Input(shape=([3, 2]))
in1Dot95619 = tf.keras.layers.Input(shape=([3, 2]))
in0Min75809 = tf.keras.layers.Input(shape=([1, 2, 2, 1]))
in1Min75809 = tf.keras.layers.Input(shape=([1, 2, 2, 1]))

Min4215 = keras.layers.Minimum(name = 'Min4215', )([in0Min4215,in1Min4215])
Res69580 = keras.layers.Reshape((2, 2, 1), name = 'Res69580', )(Min4215)
Con24140 = keras.layers.Conv2D(4, (1, 1),strides=(1, 1), padding='same', dilation_rate=(1, 1), name = 'Con24140', )(Res69580)
Res58222 = keras.layers.Reshape((2, 8), name = 'Res58222', )(Con24140)
Dot95619 = keras.layers.Dot(axes=(1, 1), name = 'Dot95619', )([in0Dot95619,in1Dot95619])
Dot65226 = keras.layers.Dot(axes=(1, 1), name = 'Dot65226', )([Res58222,Dot95619])
Res80287 = keras.layers.Reshape((8, 2, 1), name = 'Res80287', )(Dot65226)
Res10222 = keras.layers.Reshape((8, 2, 1, 1), name = 'Res10222', )(Res80287)
Zer31278 = keras.layers.ZeroPadding3D(padding=((0, 0), (0, 0), (2, 0)), name = 'Zer31278', )(Res10222)
Min75809 = keras.layers.Minimum(name = 'Min75809', )([in0Min75809,in1Min75809])
Zer59942 = keras.layers.ZeroPadding3D(padding=((7, 0), (0, 0), (1, 0)), name = 'Zer59942', )(Min75809)
Ave99150 = keras.layers.Average(name = 'Ave99150', )([Zer31278,Zer59942])
model = tf.keras.models.Model(inputs=[in0Min4215,in1Min4215,in0Dot95619,in1Dot95619,in0Min75809,in1Min75809], outputs=Ave99150)
w = model.get_layer('Con24140').get_weights() 
w[0] = np.array([[[[0.4619, 0.7092, 0.4911, 0.9295]]]])
w[1] = np.array([0, 0, 0, 0])
model.get_layer('Con24140').set_weights(w) 
in0Min4215 = tf.constant([[[0.5569, 0.5421], [0.7044, 0.8971]]])
in1Min4215 = tf.constant([[[0.3742, 0.2042], [0.0118, 0.1959]]])
in0Dot95619 = tf.constant([[[0.8335, 0.0016], [0.8565, 0.6288], [0.4676, 0.8866]]])
in1Dot95619 = tf.constant([[[0.1361, 0.0277], [0.47, 0.5198], [0.8583, 0.931]]])
in0Min75809 = tf.constant([[[[[0.2974], [0.9423]], [[0.8945], [0.02]]]]])
in1Min75809 = tf.constant([[[[[0.8771], [0.5838]], [[0.4731], [0.4088]]]]])
print (np.array2string(model.predict([in0Min4215,in1Min4215,in0Dot95619,in1Dot95619,in0Min75809,in1Min75809],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Ave99150.png')

LMin4215 = minimum_layer([[[[0.5569, 0.5421], [0.7044, 0.8971]]], [[[0.3742, 0.2042], [0.0118, 0.1959]]]], Min4215), 
LRes69580 = reshape_layer(Min4215, [2, 2, 1], Res69580), 
LCon24140 = conv2D_layer(Res69580, 1, 1,[[[[0.4619, 0.7092, 0.4911, 0.9295]]]],[0, 0, 0, 0], 1, 1, true, 1, 1, Con24140), 
LRes58222 = reshape_layer(Con24140, [2, 8], Res58222), 
LDot95619 = dot_layer([[[0.8335, 0.0016], [0.8565, 0.6288], [0.4676, 0.8866]]], [[[0.1361, 0.0277], [0.47, 0.5198], [0.8583, 0.931]]], 1, 1, Dot95619), 
LDot65226 = dot_layer(Res58222,Dot95619, 1, 1, Dot65226), 
LRes80287 = reshape_layer(Dot65226, [8, 2, 1], Res80287), 
LRes10222 = reshape_layer(Res80287, [8, 2, 1, 1], Res10222), 
LZer31278 = zero_padding3D_layer(Res10222, 0, 0, 0, 0, 2, 0, Zer31278), 
LMin75809 = minimum_layer([[[[[[0.2974], [0.9423]], [[0.8945], [0.02]]]]], [[[[[0.8771], [0.5838]], [[0.4731], [0.4088]]]]]], Min75809), 
LZer59942 = zero_padding3D_layer(Min75809, 7, 0, 0, 0, 1, 0, Zer59942), 
LAve99150 = average_layer([Zer31278,Zer59942], Ave99150), 
exec_layers([LMin4215,LRes69580,LCon24140,LRes58222,LDot95619,LDot65226,LRes80287,LRes10222,LZer31278,LMin75809,LZer59942,LAve99150],["Min4215","Res69580","Con24140","Res58222","Dot95619","Dot65226","Res80287","Res10222","Zer31278","Min75809","Zer59942","Ave99150"],Ave99150,"Ave99150")

Actual (Unparsed): [[[[[0.0000000], [0.0000000], [0.0821573]], [[0.0000000], [0.0000000], [0.0812336]]], [[[0.0000000], [0.0000000], [0.1261441]], [[0.0000000], [0.0000000], [0.1247258]]], [[[0.0000000], [0.0000000], [0.0873510]], [[0.0000000], [0.0000000], [0.0863689]]], [[[0.0000000], [0.0000000], [0.1653284]], [[0.0000000], [0.0000000], [0.1634696]]], [[[0.0000000], [0.0000000], [0.0910709]], [[0.0000000], [0.0000000], [0.0947498]]], [[[0.0000000], [0.0000000], [0.1398301]], [[0.0000000], [0.0000000], [0.1454786]]], [[[0.0000000], [0.0000000], [0.0968282]], [[0.0000000], [0.0000000], [0.1007396]]], [[[0.0000000], [0.1487000], [0.4751657]], [[0.0000000], [0.2365500], [0.2006688]]]]]

Expected (Unparsed): [[[[[0],[0],[0.0821572855236241]],[[0],[0],[0.0812335571550761]]],[[[0],[0],[0.1261440720791388]],[[0],[0],[0.12472578206187483]]],[[[0],[0],[0.08735103468424289]],[[0],[0],[0.08636891084403091]]],[[[0],[0],[0.16532841934230053]],[[0],[0],[0.1634695634891605]]],[[[0],[0],[0.0910709385385324]],[[0],[0],[0.09474978462306931]]],[[[0],[0],[0.13983007060300318]],[[0],[0],[0.1454785608458124]]],[[[0],[0],[0.09682818340825558]],[[0],[0],[0.1007395956449217]]],[[[0],[0.1487],[0.475165722822182]],[[0],[0.23655],[0.2006688131784865]]]]]

Actual:   [[[[[0], [0], [0.0822]], [[0], [0], [0.0813]]], [[[0], [0], [0.1262]], [[0], [0], [0.1248]]], [[[0], [0], [0.0874]], [[0], [0], [0.0864]]], [[[0], [0], [0.1654]], [[0], [0], [0.1635]]], [[[0], [0], [0.0911]], [[0], [0], [0.0948]]], [[[0], [0], [0.1399]], [[0], [0], [0.1455]]], [[[0], [0], [0.0969]], [[0], [0], [0.1008]]], [[[0], [0.1487], [0.4752]], [[0], [0.2366], [0.2007]]]]]

Expected: [[[[[0], [0], [0.0822]], [[0], [0], [0.0813]]], [[[0], [0], [0.1262]], [[0], [0], [0.1248]]], [[[0], [0], [0.0874]], [[0], [0], [0.0864]]], [[[0], [0], [0.1654]], [[0], [0], [0.1635]]], [[[0], [0], [0.0911]], [[0], [0], [0.0948]]], [[[0], [0], [0.1399]], [[0], [0], [0.1455]]], [[[0], [0], [0.0969]], [[0], [0], [0.1008]]], [[[0], [0.1487], [0.4752]], [[0], [0.2366], [0.2007]]]]]