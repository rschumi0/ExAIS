import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Ave1520 = tf.keras.layers.Input(shape=([2, 1, 2]))
in0Con92404 = tf.keras.layers.Input(shape=([4, 2]))
in0Min27934 = tf.keras.layers.Input(shape=([2, 2]))
in1Min27934 = tf.keras.layers.Input(shape=([2, 2]))
in0Con62796 = tf.keras.layers.Input(shape=([8, 4, 5]))
in0Min73768 = tf.keras.layers.Input(shape=([2, 2, 1]))
in1Min73768 = tf.keras.layers.Input(shape=([2, 2, 1]))
in0Con90948 = tf.keras.layers.Input(shape=([8, 4, 2, 2]))
in0Up_18526 = tf.keras.layers.Input(shape=([4, 4, 1, 3]))
in0Ave25087 = tf.keras.layers.Input(shape=([1, 2, 2]))
in1Ave25087 = tf.keras.layers.Input(shape=([1, 2, 2]))
in0Con12205 = tf.keras.layers.Input(shape=([8, 4, 4]))

Ave1520 = keras.layers.AveragePooling2D(pool_size=(1, 1), name = 'Ave1520', )(in0Ave1520)
Fla19133 = keras.layers.Flatten(name = 'Fla19133', )(Ave1520)
ReL88113 = keras.layers.ReLU(max_value=7.127916715013158, negative_slope=1.8048697409596932, threshold=1.600875024460181, name = 'ReL88113', )(Fla19133)
Res38812 = keras.layers.Reshape((4, 1), name = 'Res38812', )(ReL88113)
Con92404 = keras.layers.Concatenate(axis=2, name = 'Con92404', )([Res38812,in0Con92404])
Min27934 = keras.layers.Minimum(name = 'Min27934', )([in0Min27934,in1Min27934])
Sep9181 = keras.layers.SeparableConv1D(3, (2),strides=(1), padding='same', name = 'Sep9181', )(Min27934)
Zer23711 = keras.layers.ZeroPadding1D(padding=((1, 1)), name = 'Zer23711', )(Sep9181)
Mul24154 = keras.layers.Multiply(name = 'Mul24154', )([Con92404,Zer23711])
Res10443 = keras.layers.Reshape((4, 3, 1), name = 'Res10443', )(Mul24154)
Zer58557 = keras.layers.ZeroPadding2D(padding=((4, 0), (1, 0)), name = 'Zer58557', )(Res10443)
Con62796 = keras.layers.Concatenate(axis=3, name = 'Con62796', )([Zer58557,in0Con62796])
Min73768 = keras.layers.Minimum(name = 'Min73768', )([in0Min73768,in1Min73768])
Res14428 = keras.layers.Reshape((2, 2, 1, 1), name = 'Res14428', )(Min73768)
Zer470 = keras.layers.ZeroPadding3D(padding=((6, 0), (2, 0), (1, 0)), name = 'Zer470', )(Res14428)
Con90948 = keras.layers.Concatenate(axis=4, name = 'Con90948', )([Zer470,in0Con90948])
Up_18526 = keras.layers.UpSampling3D(size=(2, 1, 2), name = 'Up_18526', )(in0Up_18526)
Sub68317 = keras.layers.Subtract(name = 'Sub68317', )([Con90948,Up_18526])
Res17522 = keras.layers.Reshape((8, 4, 6), name = 'Res17522', )(Sub68317)
Ave25087 = keras.layers.Average(name = 'Ave25087', )([in0Ave25087,in1Ave25087])
Zer66141 = keras.layers.ZeroPadding2D(padding=((7, 0), (2, 0)), name = 'Zer66141', )(Ave25087)
Con12205 = keras.layers.Concatenate(axis=3, name = 'Con12205', )([Zer66141,in0Con12205])
Ave87609 = keras.layers.Average(name = 'Ave87609', )([Res17522,Con12205])
Ave77040 = keras.layers.Average(name = 'Ave77040', )([Con62796,Ave87609])
model = tf.keras.models.Model(inputs=[in0Ave1520,in0Con92404,in0Min27934,in1Min27934,in0Con62796,in0Min73768,in1Min73768,in0Con90948,in0Up_18526,in0Ave25087,in1Ave25087,in0Con12205], outputs=Ave77040)
w = model.get_layer('Sep9181').get_weights() 
w[0] = np.array([[[0.3191], [0.1258]], [[0.285], [0.9279]]])
w[1] = np.array([[[0.5993, 0.8687, 0.4463], [0.4228, 0.6691, 0.9502]]])
w[2] = np.array([0, 0, 0])
model.get_layer('Sep9181').set_weights(w) 
in0Ave1520 = tf.constant([[[[1.1291, 1.6695]], [[1.215, 1.1551]]]])
in0Con92404 = tf.constant([[[0.8017, 0.6457], [0.7945, 0.7154], [0.8553, 0.4417], [0.6476, 0.6507]]])
in0Min27934 = tf.constant([[[0.819, 0.7302], [0.1463, 0.8138]]])
in1Min27934 = tf.constant([[[0.6543, 0.1551], [0.0344, 0.8157]]])
in0Con62796 = tf.constant([[[[0.3721, 0.2051, 0.6076, 0.5037, 0.2257], [0.5116, 0.2734, 0.1691, 0.0349, 0.8804], [0.4064, 0.4271, 0.7688, 0.7834, 0.2928], [0.214, 0.427, 0.1905, 0.6111, 0.6197]], [[0.9031, 0.1181, 0.8527, 0.4573, 0.2424], [0.3546, 0.1916, 0.8881, 0.9998, 0.5256], [0.2049, 0.9848, 0.8715, 0.4828, 0.5871], [0.8258, 0.0247, 0.8517, 0.0112, 0.9586]], [[0.5842, 0.4609, 0.5922, 0.8429, 0.545], [0.286, 0.985, 0.1904, 0.9781, 0.4903], [0.011, 0.9556, 0.7697, 0.1225, 0.8475], [0.0999, 0.2924, 0.0377, 0.2384, 0.1492]], [[0.3476, 0.6505, 0.8872, 0.9998, 0.4328], [0.1993, 0.1804, 0.383, 0.8947, 0.304], [0.6552, 0.8995, 0.8064, 0.7314, 0.1717], [0.5525, 0.4732, 0.4504, 0.583, 0.2678]], [[0.3143, 0.253, 0.8015, 0.9757, 0.4962], [0.4455, 0.5568, 0.4463, 0.0981, 0.3739], [0.8084, 0.2199, 0.7796, 0.8354, 0.7348], [0.6562, 0.8905, 0.752, 0.4531, 0.335]], [[0.7138, 0.8325, 0.141, 0.7877, 0.0642], [0.3333, 0.0306, 0.8101, 0.7788, 0.4457], [0.8226, 0.4152, 0.7309, 0.2794, 0.4305], [0.82, 0.8747, 0.894, 0.6041, 0.729]], [[0.4841, 0.3361, 0.9071, 0.5773, 0.1898], [0.1805, 0.725, 0.3247, 0.6359, 0.6463], [0.4679, 0.8572, 0.5804, 0.9584, 0.8953], [0.0422, 0.0449, 0.2627, 0.5425, 0.0111]], [[0.6831, 0.0652, 0.5538, 0.2958, 0.8818], [0.8619, 0.8397, 0.0354, 0.234, 0.3562], [0.3657, 0.5854, 0.9322, 0.416, 0.5556], [0.5117, 0.3163, 0.7152, 0.2426, 0.1328]]]])
in0Min73768 = tf.constant([[[[0.9817], [0.268]], [[0.8315], [0.6881]]]])
in1Min73768 = tf.constant([[[[0.0039], [0.0797]], [[0.7457], [0.3739]]]])
in0Con90948 = tf.constant([[[[[0.898, 0.8854], [0.763, 0.9243]], [[0.3331, 0.9106], [0.2936, 0.2922]], [[0.3586, 0.0863], [0.2702, 0.4552]], [[0.9443, 0.2057], [0.7263, 0.9017]]], [[[0.6402, 0.4439], [0.4651, 0.5757]], [[0.4397, 0.786], [0.8806, 0.5995]], [[0.2678, 0.7681], [0.6873, 0.532]], [[0.4713, 0.9378], [0.4995, 0.3417]]], [[[0.7663, 0.2471], [0.2982, 0.7255]], [[0.4567, 0.9314], [0.6993, 0.8769]], [[0.3818, 0.2904], [0.5931, 0.3206]], [[0.9718, 0.1909], [0.164, 0.9664]]], [[[0.9964, 0.0417], [0.5201, 0.1099]], [[0.0734, 0.4483], [0.1617, 0.7075]], [[0.7753, 0.7547], [0.3009, 0.89]], [[0.2153, 0.1996], [0.6078, 0.3389]]], [[[0.3281, 0.4706], [0.3037, 0.8535]], [[0.6652, 0.0287], [0.6467, 0.1565]], [[0.4223, 0.6918], [0.7645, 0.7497]], [[0.5844, 0.6153], [0.4745, 0.4202]]], [[[0.5314, 0.9908], [0.2046, 0.8178]], [[0.1799, 0.4925], [0.3757, 0.3779]], [[0.7556, 0.7469], [0.6421, 0.7477]], [[0.5882, 0.8732], [0.1968, 0.7881]]], [[[0.8975, 0.4517], [0.9456, 0.1713]], [[0.4031, 0.108], [0.7288, 0.5691]], [[0.7301, 0.2754], [0.9263, 0.439]], [[0.0048, 0.5937], [0.7215, 0.4528]]], [[[0.7413, 0.8336], [0.0178, 0.6838]], [[0.1029, 0.1985], [0.5031, 0.7736]], [[0.8898, 0.3489], [0.6405, 0.4291]], [[0.1524, 0.5185], [0.4258, 0.7704]]]]])
in0Up_18526 = tf.constant([[[[[1.3077, 1.9931, 1.3966]], [[1.5868, 1.1829, 1.185]], [[1.0659, 1.9257, 1.7617]], [[1.7734, 1.6082, 1.3477]]], [[[1.5253, 1.6242, 1.1194]], [[1.987, 1.5224, 1.9223]], [[1.7751, 1.7199, 1.7227]], [[1.4418, 1.3447, 1.3236]]], [[[1.2898, 1.7839, 1.7624]], [[1.5534, 1.1996, 1.7196]], [[1.7966, 1.9717, 1.5507]], [[1.176, 1.2932, 1.9019]]], [[[1.122, 1.3318, 1.6915]], [[1.4536, 1.2134, 1.7542]], [[1.5116, 1.1647, 1.5742]], [[1.4981, 1.2932, 1.4424]]]]])
in0Ave25087 = tf.constant([[[[0.2728, 0.6155], [0.0296, 0.6496]]]])
in1Ave25087 = tf.constant([[[[0.6881, 0.5789], [0.488, 0.3787]]]])
in0Con12205 = tf.constant([[[[0.4849, 0.2808, 0.0885, 0.9328], [0.0091, 0.7279, 0.372, 0.3172], [0.9047, 0.2524, 0.8382, 0.1445], [0.921, 0.8709, 0.6849, 0.3139]], [[0.2551, 0.1317, 0.2832, 0.1133], [0.1022, 0.3602, 0.1694, 0.2782], [0.9061, 0.5508, 0.4154, 0.5726], [0.4112, 0.444, 0.3142, 0.5101]], [[0.5452, 0.5508, 0.8875, 0.312], [0.6254, 0.8837, 0.325, 0.9726], [0.3736, 0.9385, 0.1006, 0.3439], [0.7497, 0.0335, 0.1722, 0.4858]], [[0.6689, 0.4569, 0.3709, 0.1342], [0.2554, 0.0011, 0.8134, 0.0347], [0.4035, 0.3667, 0.9265, 0.0582], [0.065, 0.6119, 0.4674, 0.4749]], [[0.8637, 0.2869, 0.7409, 0.4905], [0.3511, 0.1503, 0.0694, 0.1729], [0.4567, 0.3914, 0.4551, 0.1906], [0.4643, 0.0992, 0.2869, 0.3639]], [[0.1505, 0.3108, 0.8942, 0.8932], [0.5564, 0.3521, 0.7239, 0.2647], [0.2358, 0.3348, 0.9292, 0.2642], [0.717, 0.619, 0.1936, 0.2253]], [[0.3527, 0.7647, 0.6922, 0.6318], [0.6876, 0.9998, 0.1875, 0.4545], [0.9724, 0.5133, 0.3953, 0.1534], [0.4719, 0.9466, 0.9207, 0.1056]], [[0.7764, 0.2987, 0.2584, 0.328], [0.4065, 0.0896, 0.5815, 0.7562], [0.6242, 0.0315, 0.3005, 0.015], [0.5104, 0.647, 0.6646, 0.5676]]]])
print (np.array2string(model.predict([in0Ave1520,in0Con92404,in0Min27934,in1Min27934,in0Con62796,in0Min73768,in1Min73768,in0Con90948,in0Up_18526,in0Ave25087,in1Ave25087,in0Con12205],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Ave77040.png')

LAve1520 = average_pooling2D_layer([[[[1.1291, 1.6695]], [[1.215, 1.1551]]]], 1, 1, Ave1520), 
LFla19133 = flatten_layer(Ave1520, Fla19133), 
LReL88113 = relu_layer(Fla19133, 7.127916715013158, 1.8048697409596932, 1.600875024460181, ReL88113), 
LRes38812 = reshape_layer(ReL88113, [4, 1], Res38812), 
LCon92404 = concatenate_layer([Res38812,[[[0.8017, 0.6457], [0.7945, 0.7154], [0.8553, 0.4417], [0.6476, 0.6507]]]], 2, Con92404), 
LMin27934 = minimum_layer([[[[0.819, 0.7302], [0.1463, 0.8138]]], [[[0.6543, 0.1551], [0.0344, 0.8157]]]], Min27934), 
LSep9181 = separable_conv1D_layer(Min27934, 2,[[[[0.3191], [0.1258]], [[0.285], [0.9279]]],[[[0.5993, 0.8687, 0.4463], [0.4228, 0.6691, 0.9502]]]],[0, 0, 0], 1, true, Sep9181), 
LZer23711 = zero_padding1D_layer(Sep9181, 1, 1, Zer23711), 
LMul24154 = multiply_layer([Con92404,Zer23711], Mul24154), 
LRes10443 = reshape_layer(Mul24154, [4, 3, 1], Res10443), 
LZer58557 = zero_padding2D_layer(Res10443, 4, 0, 1, 0, Zer58557), 
LCon62796 = concatenate_layer([Zer58557,[[[[0.3721, 0.2051, 0.6076, 0.5037, 0.2257], [0.5116, 0.2734, 0.1691, 0.0349, 0.8804], [0.4064, 0.4271, 0.7688, 0.7834, 0.2928], [0.214, 0.427, 0.1905, 0.6111, 0.6197]], [[0.9031, 0.1181, 0.8527, 0.4573, 0.2424], [0.3546, 0.1916, 0.8881, 0.9998, 0.5256], [0.2049, 0.9848, 0.8715, 0.4828, 0.5871], [0.8258, 0.0247, 0.8517, 0.0112, 0.9586]], [[0.5842, 0.4609, 0.5922, 0.8429, 0.545], [0.286, 0.985, 0.1904, 0.9781, 0.4903], [0.011, 0.9556, 0.7697, 0.1225, 0.8475], [0.0999, 0.2924, 0.0377, 0.2384, 0.1492]], [[0.3476, 0.6505, 0.8872, 0.9998, 0.4328], [0.1993, 0.1804, 0.383, 0.8947, 0.304], [0.6552, 0.8995, 0.8064, 0.7314, 0.1717], [0.5525, 0.4732, 0.4504, 0.583, 0.2678]], [[0.3143, 0.253, 0.8015, 0.9757, 0.4962], [0.4455, 0.5568, 0.4463, 0.0981, 0.3739], [0.8084, 0.2199, 0.7796, 0.8354, 0.7348], [0.6562, 0.8905, 0.752, 0.4531, 0.335]], [[0.7138, 0.8325, 0.141, 0.7877, 0.0642], [0.3333, 0.0306, 0.8101, 0.7788, 0.4457], [0.8226, 0.4152, 0.7309, 0.2794, 0.4305], [0.82, 0.8747, 0.894, 0.6041, 0.729]], [[0.4841, 0.3361, 0.9071, 0.5773, 0.1898], [0.1805, 0.725, 0.3247, 0.6359, 0.6463], [0.4679, 0.8572, 0.5804, 0.9584, 0.8953], [0.0422, 0.0449, 0.2627, 0.5425, 0.0111]], [[0.6831, 0.0652, 0.5538, 0.2958, 0.8818], [0.8619, 0.8397, 0.0354, 0.234, 0.3562], [0.3657, 0.5854, 0.9322, 0.416, 0.5556], [0.5117, 0.3163, 0.7152, 0.2426, 0.1328]]]]], 3, Con62796), 
LMin73768 = minimum_layer([[[[[0.9817], [0.268]], [[0.8315], [0.6881]]]], [[[[0.0039], [0.0797]], [[0.7457], [0.3739]]]]], Min73768), 
LRes14428 = reshape_layer(Min73768, [2, 2, 1, 1], Res14428), 
LZer470 = zero_padding3D_layer(Res14428, 6, 0, 2, 0, 1, 0, Zer470), 
LCon90948 = concatenate_layer([Zer470,[[[[[0.898, 0.8854], [0.763, 0.9243]], [[0.3331, 0.9106], [0.2936, 0.2922]], [[0.3586, 0.0863], [0.2702, 0.4552]], [[0.9443, 0.2057], [0.7263, 0.9017]]], [[[0.6402, 0.4439], [0.4651, 0.5757]], [[0.4397, 0.786], [0.8806, 0.5995]], [[0.2678, 0.7681], [0.6873, 0.532]], [[0.4713, 0.9378], [0.4995, 0.3417]]], [[[0.7663, 0.2471], [0.2982, 0.7255]], [[0.4567, 0.9314], [0.6993, 0.8769]], [[0.3818, 0.2904], [0.5931, 0.3206]], [[0.9718, 0.1909], [0.164, 0.9664]]], [[[0.9964, 0.0417], [0.5201, 0.1099]], [[0.0734, 0.4483], [0.1617, 0.7075]], [[0.7753, 0.7547], [0.3009, 0.89]], [[0.2153, 0.1996], [0.6078, 0.3389]]], [[[0.3281, 0.4706], [0.3037, 0.8535]], [[0.6652, 0.0287], [0.6467, 0.1565]], [[0.4223, 0.6918], [0.7645, 0.7497]], [[0.5844, 0.6153], [0.4745, 0.4202]]], [[[0.5314, 0.9908], [0.2046, 0.8178]], [[0.1799, 0.4925], [0.3757, 0.3779]], [[0.7556, 0.7469], [0.6421, 0.7477]], [[0.5882, 0.8732], [0.1968, 0.7881]]], [[[0.8975, 0.4517], [0.9456, 0.1713]], [[0.4031, 0.108], [0.7288, 0.5691]], [[0.7301, 0.2754], [0.9263, 0.439]], [[0.0048, 0.5937], [0.7215, 0.4528]]], [[[0.7413, 0.8336], [0.0178, 0.6838]], [[0.1029, 0.1985], [0.5031, 0.7736]], [[0.8898, 0.3489], [0.6405, 0.4291]], [[0.1524, 0.5185], [0.4258, 0.7704]]]]]], 4, Con90948), 
LUp_18526 = up_sampling3D_layer([[[[[1.3077, 1.9931, 1.3966]], [[1.5868, 1.1829, 1.185]], [[1.0659, 1.9257, 1.7617]], [[1.7734, 1.6082, 1.3477]]], [[[1.5253, 1.6242, 1.1194]], [[1.987, 1.5224, 1.9223]], [[1.7751, 1.7199, 1.7227]], [[1.4418, 1.3447, 1.3236]]], [[[1.2898, 1.7839, 1.7624]], [[1.5534, 1.1996, 1.7196]], [[1.7966, 1.9717, 1.5507]], [[1.176, 1.2932, 1.9019]]], [[[1.122, 1.3318, 1.6915]], [[1.4536, 1.2134, 1.7542]], [[1.5116, 1.1647, 1.5742]], [[1.4981, 1.2932, 1.4424]]]]], 2, 1, 2, Up_18526), 
LSub68317 = subtract_layer(Con90948,Up_18526, Sub68317), 
LRes17522 = reshape_layer(Sub68317, [8, 4, 6], Res17522), 
LAve25087 = average_layer([[[[[0.2728, 0.6155], [0.0296, 0.6496]]]], [[[[0.6881, 0.5789], [0.488, 0.3787]]]]], Ave25087), 
LZer66141 = zero_padding2D_layer(Ave25087, 7, 0, 2, 0, Zer66141), 
LCon12205 = concatenate_layer([Zer66141,[[[[0.4849, 0.2808, 0.0885, 0.9328], [0.0091, 0.7279, 0.372, 0.3172], [0.9047, 0.2524, 0.8382, 0.1445], [0.921, 0.8709, 0.6849, 0.3139]], [[0.2551, 0.1317, 0.2832, 0.1133], [0.1022, 0.3602, 0.1694, 0.2782], [0.9061, 0.5508, 0.4154, 0.5726], [0.4112, 0.444, 0.3142, 0.5101]], [[0.5452, 0.5508, 0.8875, 0.312], [0.6254, 0.8837, 0.325, 0.9726], [0.3736, 0.9385, 0.1006, 0.3439], [0.7497, 0.0335, 0.1722, 0.4858]], [[0.6689, 0.4569, 0.3709, 0.1342], [0.2554, 0.0011, 0.8134, 0.0347], [0.4035, 0.3667, 0.9265, 0.0582], [0.065, 0.6119, 0.4674, 0.4749]], [[0.8637, 0.2869, 0.7409, 0.4905], [0.3511, 0.1503, 0.0694, 0.1729], [0.4567, 0.3914, 0.4551, 0.1906], [0.4643, 0.0992, 0.2869, 0.3639]], [[0.1505, 0.3108, 0.8942, 0.8932], [0.5564, 0.3521, 0.7239, 0.2647], [0.2358, 0.3348, 0.9292, 0.2642], [0.717, 0.619, 0.1936, 0.2253]], [[0.3527, 0.7647, 0.6922, 0.6318], [0.6876, 0.9998, 0.1875, 0.4545], [0.9724, 0.5133, 0.3953, 0.1534], [0.4719, 0.9466, 0.9207, 0.1056]], [[0.7764, 0.2987, 0.2584, 0.328], [0.4065, 0.0896, 0.5815, 0.7562], [0.6242, 0.0315, 0.3005, 0.015], [0.5104, 0.647, 0.6646, 0.5676]]]]], 3, Con12205), 
LAve87609 = average_layer([Res17522,Con12205], Ave87609), 
LAve77040 = average_layer([Con62796,Ave87609], Ave77040), 
exec_layers([LAve1520,LFla19133,LReL88113,LRes38812,LCon92404,LMin27934,LSep9181,LZer23711,LMul24154,LRes10443,LZer58557,LCon62796,LMin73768,LRes14428,LZer470,LCon90948,LUp_18526,LSub68317,LRes17522,LAve25087,LZer66141,LCon12205,LAve87609,LAve77040],["Ave1520","Fla19133","ReL88113","Res38812","Con92404","Min27934","Sep9181","Zer23711","Mul24154","Res10443","Zer58557","Con62796","Min73768","Res14428","Zer470","Con90948","Up_18526","Sub68317","Res17522","Ave25087","Zer66141","Con12205","Ave87609","Ave77040"],Ave77040,"Ave77040")

Actual (Unparsed): [[[[-0.3269250, -0.0877250, 0.0959750, 0.0470750, -0.0335500, 0.2279750], [-0.3967000, 0.0433500, 0.0703750, -0.1301750, -0.1118750, 0.2963000], [-0.2664750, -0.1885750, 0.0208750, 0.1810250, 0.1873750, -0.1441000], [-0.4433500, -0.0589750, 0.1582500, -0.1303750, 0.2563000, 0.2768250]], [[-0.3269250, 0.1133250, -0.1153500, 0.1323500, -0.0825500, -0.0557000], [-0.3967000, -0.0085000, 0.0216000, 0.1374000, 0.4666750, 0.1859750], [-0.2664750, -0.3120250, 0.4705250, 0.3069750, 0.0356500, 0.1292750], [-0.4433500, 0.1286750, 0.0126750, 0.0935000, -0.1930250, 0.3553250]], [[-0.3813250, 0.0776250, 0.1486750, 0.0524750, 0.3118250, 0.2520250], [-0.4967500, -0.1234250, 0.4011250, -0.1806250, 0.3645250, 0.2269500], [-0.4437750, -0.3290250, 0.2131250, 0.1757000, -0.1953000, 0.1592000], [-0.3604500, -0.0432750, 0.0504500, -0.3332250, -0.1329250, 0.1067500]], [[-0.3813250, 0.0168500, 0.2230500, 0.1765000, 0.3166000, -0.0024250], [-0.4967500, -0.2626000, -0.2144500, -0.3049750, 0.3105250, -0.1430250], [-0.4437750, 0.0914500, 0.3086250, 0.0511000, 0.2425750, -0.1077750], [-0.3604500, -0.0061000, -0.0281500, 0.0177250, 0.2241250, 0.0064500]], [[-0.3224500, -0.2068000, 0.0194750, 0.1500250, 0.3030250, 0.1435000], [-0.3883500, 0.0891500, -0.0565500, -0.1276250, -0.0718250, -0.1606000], [-0.4491500, 0.0168500, 0.0094000, 0.0385000, 0.2296750, 0.2148000], [-0.2940000, 0.1509000, 0.2396750, 0.1068000, 0.0936000, -0.1119500]], [[-0.3224500, 0.0437750, 0.2609750, -0.1742500, 0.2225750, 0.0192500], [-0.0056021, -0.0882750, -0.1523750, 0.1047250, 0.3644000, -0.0464000], [-0.1678178, 0.1072750, 0.0656000, 0.0000000, 0.0396000, 0.0805500], [0.0041848, 0.2337500, 0.3594250, 0.3077500, 0.0763500, 0.1423750]], [[-0.2805000, 0.1334750, -0.0537250, 0.3642250, 0.3651500, -0.1272000], [-0.3807637, -0.1123250, 0.1228500, 0.0489000, 0.2436750, 0.1405000], [-0.3445281, 0.1253000, 0.3470000, 0.0416000, 0.5184250, 0.2022000], [-0.3519593, -0.3010000, -0.0717500, 0.0134000, 0.3585000, -0.2154500]], [[-0.2805000, 0.1939250, 0.0122250, 0.0710750, -0.1160000, 0.2709750], [-0.3634000, 0.1533250, 0.1325500, -0.3233000, 0.0848000, 0.1220000], [-0.2577875, 0.2634250, 0.1424250, 0.2825000, 0.1520750, -0.0047250], [-0.3098250, 0.0991875, 0.0547750, 0.2383000, 0.0706000, 0.0403000]]]]

Expected (Unparsed): [[[[-0.326925,-0.087725,0.09597499999999998,0.04707499999999998,-0.033550000000000024,0.22797499999999998],[-0.3967,0.04335,0.07037499999999997,-0.13017499999999999,-0.111875,0.29629999999999995],[-0.266475,-0.188575,0.020874999999999977,0.181025,0.18737499999999999,-0.14409999999999998],[-0.44335,-0.058975000000000014,0.15825000000000003,-0.13037500000000002,0.2563,0.27682500000000004]],[[-0.326925,0.11332500000000001,-0.11535000000000004,0.13234999999999997,-0.08255000000000004,-0.05570000000000003],[-0.3967,-0.008500000000000008,0.021599999999999994,0.13740000000000002,0.466675,0.18597499999999997],[-0.266475,-0.312025,0.47052499999999997,0.306975,0.035650000000000015,0.12927499999999997],[-0.44335,0.12867499999999998,0.01267500000000002,0.09349999999999997,-0.193025,0.35532500000000006]],[[-0.381325,0.077625,0.148675,0.05247499999999994,0.31182499999999996,0.25202500000000005],[-0.49675,-0.12342500000000003,0.401125,-0.18062499999999998,0.364525,0.22695000000000004],[-0.443775,-0.329025,0.213125,0.17570000000000005,-0.1953,0.15920000000000006],[-0.36045,-0.043275,0.050449999999999995,-0.333225,-0.13292500000000004,0.10674999999999998]],[[-0.381325,0.016849999999999976,0.22305000000000003,0.1765,0.3166,-0.0024250000000000105],[-0.49675,-0.2626,-0.21444999999999997,-0.304975,0.31052500000000005,-0.14302499999999999],[-0.443775,0.09145,0.30862500000000004,0.051100000000000034,0.242575,-0.10777499999999997],[-0.36045,-0.006099999999999994,-0.028150000000000036,0.01772500000000002,0.22412499999999996,0.006449999999999956]],[[-0.32245,-0.20679999999999998,0.019475000000000048,0.15002499999999996,0.303025,0.14350000000000002],[-0.38835,0.08915000000000001,-0.056550000000000045,-0.12762499999999996,-0.07182499999999997,-0.16059999999999997],[-0.44915,0.01685000000000003,0.009400000000000006,0.03849999999999998,0.22967500000000002,0.21480000000000002],[-0.294,0.15090000000000003,0.23967499999999997,0.1068,0.09359999999999999,-0.11194999999999997]],[[-0.32245,0.04377500000000001,0.260975,-0.17425000000000002,0.222575,0.019249999999999996],[-0.005602083899357235,-0.08827500000000002,-0.152375,0.10472500000000007,0.3644,-0.0464],[-0.1678177630487503,0.10727500000000001,0.06560000000000002,0.0,0.03959999999999997,0.08055000000000001],[0.004184771797170306,0.23374999999999999,0.359425,0.30775,0.07635000000000003,0.14237500000000003]],[[-0.2805,0.13347499999999995,-0.053724999999999995,0.364225,0.36515,-0.12719999999999998],[-0.38076369197066195,-0.11232500000000001,0.12285000000000001,0.0489,0.243675,0.14050000000000004],[-0.34452809147791824,0.12529999999999997,0.347,0.0416,0.518425,0.2022],[-0.351959261193564,-0.301,-0.07174999999999998,0.013399999999999967,0.35850000000000004,-0.21544999999999997]],[[-0.2805,0.193925,0.012224999999999993,0.07107499999999994,-0.11600000000000002,0.270975],[-0.3634,0.153325,0.13255,-0.32330000000000003,0.0848,0.122],[-0.2577875,0.263425,0.142425,0.2825,0.15207499999999996,-0.004725000000000035],[-0.309825,0.09918750000000007,0.05477500000000002,0.23829999999999996,0.07060000000000001,0.040300000000000016]]]]

Actual:   [[[[-0.3269, -0.0877, 0.096, 0.0471, -0.0335, 0.228], [-0.3967, 0.0434, 0.0704, -0.1301, -0.1118, 0.2963], [-0.2664, -0.1885, 0.0209, 0.1811, 0.1874, -0.1441], [-0.4433, -0.0589, 0.1583, -0.1303, 0.2563, 0.2769]], [[-0.3269, 0.1134, -0.1153, 0.1324, -0.0825, -0.0557], [-0.3967, -0.0085, 0.0216, 0.1374, 0.4667, 0.186], [-0.2664, -0.312, 0.4706, 0.307, 0.0357, 0.1293], [-0.4433, 0.1287, 0.0127, 0.0935, -0.193, 0.3554]], [[-0.3813, 0.0777, 0.1487, 0.0525, 0.3119, 0.2521], [-0.4967, -0.1234, 0.4012, -0.1806, 0.3646, 0.227], [-0.4437, -0.329, 0.2132, 0.1757, -0.1953, 0.1592], [-0.3604, -0.0432, 0.0505, -0.3332, -0.1329, 0.1068]], [[-0.3813, 0.0169, 0.2231, 0.1765, 0.3166, -0.0024], [-0.4967, -0.2626, -0.2144, -0.3049, 0.3106, -0.143], [-0.4437, 0.0915, 0.3087, 0.0511, 0.2426, -0.1077], [-0.3604, -0.0061, -0.0281, 0.0178, 0.2242, 0.0065]], [[-0.3224, -0.2068, 0.0195, 0.1501, 0.3031, 0.1435], [-0.3883, 0.0892, -0.0565, -0.1276, -0.0718, -0.1606], [-0.4491, 0.0169, 0.0094, 0.0385, 0.2297, 0.2148], [-0.294, 0.1509, 0.2397, 0.1068, 0.0936, -0.1119]], [[-0.3224, 0.0438, 0.261, -0.1742, 0.2226, 0.0193], [-0.0056, -0.0882, -0.1523, 0.1048, 0.3644, -0.0464], [-0.1678, 0.1073, 0.0656, 0, 0.0396, 0.0806], [0.0042, 0.2338, 0.3595, 0.3078, 0.0764, 0.1424]], [[-0.2805, 0.1335, -0.0537, 0.3643, 0.3652, -0.1272], [-0.3807, -0.1123, 0.1229, 0.0489, 0.2437, 0.1405], [-0.3445, 0.1253, 0.347, 0.0416, 0.5185, 0.2022], [-0.3519, -0.301, -0.0717, 0.0134, 0.3585, -0.2154]], [[-0.2805, 0.194, 0.0123, 0.0711, -0.116, 0.271], [-0.3634, 0.1534, 0.1326, -0.3233, 0.0848, 0.122], [-0.2577, 0.2635, 0.1425, 0.2825, 0.1521, -0.0047], [-0.3098, 0.0992, 0.0548, 0.2383, 0.0706, 0.0403]]]]

Expected: [[[[-0.3269, -0.0877, 0.096, 0.0471, -0.0335, 0.228], [-0.3967, 0.0434, 0.0704, -0.1301, -0.1118, 0.2963], [-0.2664, -0.1885, 0.0209, 0.1811, 0.1874, -0.144], [-0.4433, -0.0589, 0.1583, -0.1303, 0.2563, 0.2769]], [[-0.3269, 0.1134, -0.1153, 0.1324, -0.0825, -0.0557], [-0.3967, -0.0085, 0.0216, 0.1375, 0.4667, 0.186], [-0.2664, -0.312, 0.4706, 0.307, 0.0357, 0.1293], [-0.4433, 0.1287, 0.0127, 0.0935, -0.193, 0.3554]], [[-0.3813, 0.0777, 0.1487, 0.0525, 0.3119, 0.2521], [-0.4967, -0.1234, 0.4012, -0.1806, 0.3646, 0.227], [-0.4437, -0.329, 0.2132, 0.1758, -0.1953, 0.1593], [-0.3604, -0.0432, 0.0505, -0.3332, -0.1329, 0.1068]], [[-0.3813, 0.0169, 0.2231, 0.1765, 0.3166, -0.0024], [-0.4967, -0.2626, -0.2144, -0.3049, 0.3106, -0.143], [-0.4437, 0.0915, 0.3087, 0.0512, 0.2426, -0.1077], [-0.3604, -0.006, -0.0281, 0.0178, 0.2242, 0.0065]], [[-0.3224, -0.2067, 0.0195, 0.1501, 0.3031, 0.1436], [-0.3883, 0.0892, -0.0565, -0.1276, -0.0718, -0.1605], [-0.4491, 0.0169, 0.0095, 0.0385, 0.2297, 0.2149], [-0.294, 0.151, 0.2397, 0.1068, 0.0936, -0.1119]], [[-0.3224, 0.0438, 0.261, -0.1742, 0.2226, 0.0193], [-0.0056, -0.0882, -0.1523, 0.1048, 0.3644, -0.0464], [-0.1678, 0.1073, 0.0657, 0, 0.0396, 0.0806], [0.0042, 0.2338, 0.3595, 0.3078, 0.0764, 0.1424]], [[-0.2805, 0.1335, -0.0537, 0.3643, 0.3652, -0.1271], [-0.3807, -0.1123, 0.1229, 0.0489, 0.2437, 0.1406], [-0.3445, 0.1253, 0.347, 0.0416, 0.5185, 0.2022], [-0.3519, -0.301, -0.0717, 0.0134, 0.3586, -0.2154]], [[-0.2805, 0.194, 0.0123, 0.0711, -0.116, 0.271], [-0.3634, 0.1534, 0.1326, -0.3233, 0.0848, 0.122], [-0.2577, 0.2635, 0.1425, 0.2825, 0.1521, -0.0047], [-0.3098, 0.0992, 0.0548, 0.2383, 0.0707, 0.0404]]]]