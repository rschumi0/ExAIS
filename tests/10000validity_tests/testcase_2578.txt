import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Max95510 = tf.keras.layers.Input(shape=([2, 2, 2, 2]))
in1Max95510 = tf.keras.layers.Input(shape=([2, 2, 2, 2]))
in0Dep3933 = tf.keras.layers.Input(shape=([2, 1, 1]))
in0Con98176 = tf.keras.layers.Input(shape=([2, 2, 3]))
in0Dot9902 = tf.keras.layers.Input(shape=([3]))
in1Dot9902 = tf.keras.layers.Input(shape=([3]))
in0Cro67988 = tf.keras.layers.Input(shape=([3, 1, 3, 1]))

Max95510 = keras.layers.Maximum(name = 'Max95510', )([in0Max95510,in1Max95510])
Res97621 = keras.layers.Reshape((2, 2, 4), name = 'Res97621', )(Max95510)
Dep3933 = keras.layers.DepthwiseConv2D((1, 1),strides=(2, 2), padding='valid', name = 'Dep3933', )(in0Dep3933)
Lea15345 = keras.layers.LeakyReLU(alpha=6.162679543377309, name = 'Lea15345', )(Dep3933)
Ave78025 = keras.layers.AveragePooling2D(pool_size=(1, 1), strides=(6, 1), padding='same', name = 'Ave78025', )(Lea15345)
Zer72338 = keras.layers.ZeroPadding2D(padding=((1, 0), (1, 0)), name = 'Zer72338', )(Ave78025)
Con98176 = keras.layers.Concatenate(axis=3, name = 'Con98176', )([Zer72338,in0Con98176])
Add28235 = keras.layers.Add(name = 'Add28235', )([Res97621,Con98176])
Res95194 = keras.layers.Reshape((2, 8), name = 'Res95194', )(Add28235)
Dot9902 = keras.layers.Dot(axes=(1, 1), name = 'Dot9902', )([in0Dot9902,in1Dot9902])
Res80621 = keras.layers.Reshape((1, 1), name = 'Res80621', )(Dot9902)
Res91838 = keras.layers.Reshape((1, 1, 1), name = 'Res91838', )(Res80621)
Res66245 = keras.layers.Reshape((1, 1, 1, 1), name = 'Res66245', )(Res91838)
Zer1711 = keras.layers.ZeroPadding3D(padding=((1, 0), (0, 0), (0, 0)), name = 'Zer1711', )(Res66245)
Cro67988 = keras.layers.Cropping3D(cropping=((1, 0), (0, 0), (2, 0)), name = 'Cro67988', )(in0Cro67988)
Min66545 = keras.layers.Minimum(name = 'Min66545', )([Zer1711,Cro67988])
Res43630 = keras.layers.Reshape((2, 1, 1), name = 'Res43630', )(Min66545)
Res66719 = keras.layers.Reshape((2, 1), name = 'Res66719', )(Res43630)
Dot86679 = keras.layers.Dot(axes=(1, 1), name = 'Dot86679', )([Res95194,Res66719])
model = tf.keras.models.Model(inputs=[in0Max95510,in1Max95510,in0Dep3933,in0Con98176,in0Dot9902,in1Dot9902,in0Cro67988], outputs=Dot86679)
w = model.get_layer('Dep3933').get_weights() 
w[0] = np.array([[[[0.7045]]]])
w[1] = np.array([0])
model.get_layer('Dep3933').set_weights(w) 
in0Max95510 = tf.constant([[[[[0.8579, 0.7605], [0.6425, 0.6169]], [[0.662, 0.0401], [0.1318, 0.2687]]], [[[0.0641, 0.3235], [0.6555, 0.6633]], [[0.8869, 0.1194], [0.2382, 0.8284]]]]])
in1Max95510 = tf.constant([[[[[0.3684, 0.2507], [0.476, 0.5794]], [[0.8987, 0.2599], [0.0166, 0.5569]]], [[[0.2973, 0.2616], [0.0697, 0.5991]], [[0.4716, 0.1096], [0.7343, 0.8766]]]]])
in0Dep3933 = tf.constant([[[[0.1966]], [[0.6837]]]])
in0Con98176 = tf.constant([[[[0.683, 0.3967, 0.8742], [0.1637, 0.9322, 0.2849]], [[0.7902, 0.4023, 0.4571], [0.4562, 0.1943, 0.9697]]]])
in0Dot9902 = tf.constant([[0.9694, 0.92, 0.1885]])
in1Dot9902 = tf.constant([[0.8231, 0.1057, 0.656]])
in0Cro67988 = tf.constant([[[[[1.6017], [1.932], [1.9005]]], [[[1.8354], [1.5793], [1.5671]]], [[[1.2672], [1.7825], [1.5036]]]]])
print (np.array2string(model.predict([in0Max95510,in1Max95510,in0Dep3933,in0Con98176,in0Dot9902,in1Dot9902,in0Cro67988],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Dot86679.png')

LMax95510 = maximum_layer([[[[[[0.8579, 0.7605], [0.6425, 0.6169]], [[0.662, 0.0401], [0.1318, 0.2687]]], [[[0.0641, 0.3235], [0.6555, 0.6633]], [[0.8869, 0.1194], [0.2382, 0.8284]]]]], [[[[[0.3684, 0.2507], [0.476, 0.5794]], [[0.8987, 0.2599], [0.0166, 0.5569]]], [[[0.2973, 0.2616], [0.0697, 0.5991]], [[0.4716, 0.1096], [0.7343, 0.8766]]]]]], Max95510), 
LRes97621 = reshape_layer(Max95510, [2, 2, 4], Res97621), 
LDep3933 = depthwise_conv2D_layer([[[[0.1966]], [[0.6837]]]], 1, 1,[[[[0.7045]]]],[0], 2, 2, false, Dep3933), 
LLea15345 = leaky_relu_layer(Dep3933, 6.162679543377309, Lea15345), 
LAve78025 = average_pooling2D_layer(Lea15345, 1, 1, 6, 1, true, Ave78025), 
LZer72338 = zero_padding2D_layer(Ave78025, 1, 0, 1, 0, Zer72338), 
LCon98176 = concatenate_layer([Zer72338,[[[[0.683, 0.3967, 0.8742], [0.1637, 0.9322, 0.2849]], [[0.7902, 0.4023, 0.4571], [0.4562, 0.1943, 0.9697]]]]], 3, Con98176), 
LAdd28235 = add_layer([Res97621,Con98176], Add28235), 
LRes95194 = reshape_layer(Add28235, [2, 8], Res95194), 
LDot9902 = dot_layer([[0.9694, 0.92, 0.1885]], [[0.8231, 0.1057, 0.656]], 1, 1, Dot9902), 
LRes80621 = reshape_layer(Dot9902, [1, 1], Res80621), 
LRes91838 = reshape_layer(Res80621, [1, 1, 1], Res91838), 
LRes66245 = reshape_layer(Res91838, [1, 1, 1, 1], Res66245), 
LZer1711 = zero_padding3D_layer(Res66245, 1, 0, 0, 0, 0, 0, Zer1711), 
LCro67988 = cropping3D_layer([[[[[1.6017], [1.932], [1.9005]]], [[[1.8354], [1.5793], [1.5671]]], [[[1.2672], [1.7825], [1.5036]]]]], 1, 0, 0, 0, 2, 0, Cro67988), 
LMin66545 = minimum_layer([Zer1711,Cro67988], Min66545), 
LRes43630 = reshape_layer(Min66545, [2, 1, 1], Res43630), 
LRes66719 = reshape_layer(Res43630, [2, 1], Res66719), 
LDot86679 = dot_layer(Res95194,Res66719, 1, 1, Dot86679), 
exec_layers([LMax95510,LRes97621,LDep3933,LLea15345,LAve78025,LZer72338,LCon98176,LAdd28235,LRes95194,LDot9902,LRes80621,LRes91838,LRes66245,LZer1711,LCro67988,LMin66545,LRes43630,LRes66719,LDot86679],["Max95510","Res97621","Dep3933","Lea15345","Ave78025","Zer72338","Con98176","Add28235","Res95194","Dot9902","Res80621","Res91838","Res66245","Zer1711","Cro67988","Min66545","Res43630","Res66719","Dot86679"],Dot86679,"Dot86679")

Actual (Unparsed): [[[0.3028931], [1.1346522], [1.0777005], [1.1414782], [1.0446958], [0.5864288], [0.9460699], [1.8810347]]]

Expected (Unparsed): [[[0.30289314652200006],[1.1346521940180003],[1.077700539492],[1.1414782420560003],[1.0446957821777583],[0.5864288433840001],[0.9460698818040002],[1.8810347003820005]]]

Actual:   [[[0.3029], [1.1347], [1.0778], [1.1415], [1.0447], [0.5865], [0.9461], [1.8811]]]

Expected: [[[0.3029], [1.1347], [1.0778], [1.1415], [1.0447], [0.5865], [0.9461], [1.8811]]]