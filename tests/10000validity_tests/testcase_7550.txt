import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Dot62686 = tf.keras.layers.Input(shape=([2]))
in1Dot62686 = tf.keras.layers.Input(shape=([2]))
in0Con55700 = tf.keras.layers.Input(shape=([2, 5, 1]))
in0Den18067 = tf.keras.layers.Input(shape=([2, 5, 2]))

Dot62686 = keras.layers.Dot(axes=(1, 1), name = 'Dot62686', )([in0Dot62686,in1Dot62686])
Lay86526 = keras.layers.LayerNormalization(axis=1, epsilon=1.970308809300518, name = 'Lay86526', )(Dot62686)
Res34552 = keras.layers.Reshape((1, 1), name = 'Res34552', )(Lay86526)
Res14422 = keras.layers.Reshape((1, 1, 1), name = 'Res14422', )(Res34552)
Zer25983 = keras.layers.ZeroPadding2D(padding=((1, 0), (4, 0)), name = 'Zer25983', )(Res14422)
Con55700 = keras.layers.Concatenate(axis=3, name = 'Con55700', )([Zer25983,in0Con55700])
Den18067 = keras.layers.Dense(2,name = 'Den18067', )(in0Den18067)
Max71751 = keras.layers.Maximum(name = 'Max71751', )([Con55700,Den18067])
model = tf.keras.models.Model(inputs=[in0Dot62686,in1Dot62686,in0Con55700,in0Den18067], outputs=Max71751)
w = model.get_layer('Den18067').get_weights() 
w[0] = np.array([[0.1304, 0.1902], [0.5177, 0.6386]])
w[1] = np.array([0.2503, 0.7781])
model.get_layer('Den18067').set_weights(w) 
in0Dot62686 = tf.constant([[0.512, 0.9542]])
in1Dot62686 = tf.constant([[0.5389, 0.5906]])
in0Con55700 = tf.constant([[[[0.1262], [0.9477], [0.2162], [0.4533], [0.8147]], [[0.3321], [0.7729], [0.7655], [0.969], [0.4764]]]])
in0Den18067 = tf.constant([[[[0.0799, 0.2204], [0.5498, 0.3671], [0.6333, 0.6558], [0.9941, 0.0441], [0.8229, 0.146]], [[0.7731, 0.5559], [0.8943, 0.1922], [0.7626, 0.8869], [0.6402, 0.0731], [0.6358, 0.8778]]]])
print (np.array2string(model.predict([in0Dot62686,in1Dot62686,in0Con55700,in0Den18067],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Max71751.png')

LDot62686 = dot_layer([[0.512, 0.9542]], [[0.5389, 0.5906]], 1, 1, Dot62686), 
LLay86526 = layer_normalization_layer(Dot62686, 1, 1.970308809300518, Lay86526), 
LRes34552 = reshape_layer(Lay86526, [1, 1], Res34552), 
LRes14422 = reshape_layer(Res34552, [1, 1, 1], Res14422), 
LZer25983 = zero_padding2D_layer(Res14422, 1, 0, 4, 0, Zer25983), 
LCon55700 = concatenate_layer([Zer25983,[[[[0.1262], [0.9477], [0.2162], [0.4533], [0.8147]], [[0.3321], [0.7729], [0.7655], [0.969], [0.4764]]]]], 3, Con55700), 
LDen18067 = dense_layer([[[[0.0799, 0.2204], [0.5498, 0.3671], [0.6333, 0.6558], [0.9941, 0.0441], [0.8229, 0.146]], [[0.7731, 0.5559], [0.8943, 0.1922], [0.7626, 0.8869], [0.6402, 0.0731], [0.6358, 0.8778]]]], [[0.1304, 0.1902], [0.5177, 0.6386]],[0.2503, 0.7781], Den18067), 
LMax71751 = maximum_layer([Con55700,Den18067], Max71751), 
exec_layers([LDot62686,LLay86526,LRes34552,LRes14422,LZer25983,LCon55700,LDen18067,LMax71751],["Dot62686","Lay86526","Res34552","Res14422","Zer25983","Con55700","Den18067","Max71751"],Max71751,"Max71751")

Actual (Unparsed): [[[[0.3748200, 0.9340444], [0.5120416, 1.1171020], [0.6723900, 1.3173475], [0.4027612, 0.9953401], [0.4331904, 1.0278512]], [[0.6389017, 1.2801413], [0.4664187, 1.0709348], [0.8088912, 1.4895209], [0.3716260, 0.9690000], [0.7876454, 1.4595922]]]]

Expected (Unparsed): [[[[0.37482004,0.93404442],[0.51204159,1.11710202],[0.67238998,1.31734754],[0.40276121,0.9953400800000001],[0.43319036,1.02785118]],[[0.6389016700000001,1.28014136],[0.46641866000000004,1.07093478],[0.8088911700000001,1.4895208599999998],[0.37162595,0.969],[0.7876453800000001,1.45959224]]]]

Actual:   [[[[0.3749, 0.9341], [0.5121, 1.1172], [0.6724, 1.3174], [0.4028, 0.9954], [0.4332, 1.0279]], [[0.639, 1.2802], [0.4665, 1.071], [0.8089, 1.4896], [0.3717, 0.969], [0.7877, 1.4596]]]]

Expected: [[[[0.3749, 0.9341], [0.5121, 1.1172], [0.6724, 1.3174], [0.4028, 0.9954], [0.4332, 1.0279]], [[0.639, 1.2802], [0.4665, 1.071], [0.8089, 1.4896], [0.3717, 0.969], [0.7877, 1.4596]]]]