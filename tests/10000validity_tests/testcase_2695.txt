import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Add48826 = tf.keras.layers.Input(shape=([1, 2, 1, 1]))
in1Add48826 = tf.keras.layers.Input(shape=([1, 2, 1, 1]))
in0Min52486 = tf.keras.layers.Input(shape=([2, 1, 1]))
in1Min52486 = tf.keras.layers.Input(shape=([2, 1, 1]))
in0Dot35814 = tf.keras.layers.Input(shape=([2]))
in1Dot35814 = tf.keras.layers.Input(shape=([2]))
in0Con8615 = tf.keras.layers.Input(shape=([2, 2]))

Add48826 = keras.layers.Add(name = 'Add48826', )([in0Add48826,in1Add48826])
Res91528 = keras.layers.Reshape((1, 2, 1), name = 'Res91528', )(Add48826)
Zer97689 = keras.layers.ZeroPadding2D(padding=((1, 0), (1, 0)), name = 'Zer97689', )(Res91528)
Min52486 = keras.layers.Minimum(name = 'Min52486', )([in0Min52486,in1Min52486])
Zer85645 = keras.layers.ZeroPadding2D(padding=((0, 0), (2, 0)), name = 'Zer85645', )(Min52486)
Mul11139 = keras.layers.Multiply(name = 'Mul11139', )([Zer97689,Zer85645])
Res63294 = keras.layers.Reshape((2, 3), name = 'Res63294', )(Mul11139)
Dot35814 = keras.layers.Dot(axes=(1, 1), name = 'Dot35814', )([in0Dot35814,in1Dot35814])
Res29867 = keras.layers.Reshape((1, 1), name = 'Res29867', )(Dot35814)
Cro1082 = keras.layers.Cropping1D(cropping=((0, 0)), name = 'Cro1082', )(Res29867)
Zer59888 = keras.layers.ZeroPadding1D(padding=((1, 0)), name = 'Zer59888', )(Cro1082)
Con8615 = keras.layers.Concatenate(axis=2, name = 'Con8615', )([Zer59888,in0Con8615])
Add33198 = keras.layers.Add(name = 'Add33198', )([Res63294,Con8615])
model = tf.keras.models.Model(inputs=[in0Add48826,in1Add48826,in0Min52486,in1Min52486,in0Dot35814,in1Dot35814,in0Con8615], outputs=Add33198)
in0Add48826 = tf.constant([[[[[0.7262]], [[0.1658]]]]])
in1Add48826 = tf.constant([[[[[0.3052]], [[0.8437]]]]])
in0Min52486 = tf.constant([[[[0.0223]], [[0.9901]]]])
in1Min52486 = tf.constant([[[[0.1506]], [[0.3962]]]])
in0Dot35814 = tf.constant([[0.987, 0.1146]])
in1Dot35814 = tf.constant([[0.7366, 0.6928]])
in0Con8615 = tf.constant([[[0.9741, 0.5535], [0.7489, 0.7851]]])
print (np.array2string(model.predict([in0Add48826,in1Add48826,in0Min52486,in1Min52486,in0Dot35814,in1Dot35814,in0Con8615],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Add33198.png')

LAdd48826 = add_layer([[[[[[0.7262]], [[0.1658]]]]], [[[[[0.3052]], [[0.8437]]]]]], Add48826), 
LRes91528 = reshape_layer(Add48826, [1, 2, 1], Res91528), 
LZer97689 = zero_padding2D_layer(Res91528, 1, 0, 1, 0, Zer97689), 
LMin52486 = minimum_layer([[[[[0.0223]], [[0.9901]]]], [[[[0.1506]], [[0.3962]]]]], Min52486), 
LZer85645 = zero_padding2D_layer(Min52486, 0, 0, 2, 0, Zer85645), 
LMul11139 = multiply_layer([Zer97689,Zer85645], Mul11139), 
LRes63294 = reshape_layer(Mul11139, [2, 3], Res63294), 
LDot35814 = dot_layer([[0.987, 0.1146]], [[0.7366, 0.6928]], 1, 1, Dot35814), 
LRes29867 = reshape_layer(Dot35814, [1, 1], Res29867), 
LCro1082 = cropping1D_layer(Res29867, 0, 0, Cro1082), 
LZer59888 = zero_padding1D_layer(Cro1082, 1, 0, Zer59888), 
LCon8615 = concatenate_layer([Zer59888,[[[0.9741, 0.5535], [0.7489, 0.7851]]]], 2, Con8615), 
LAdd33198 = add_layer([Res63294,Con8615], Add33198), 
exec_layers([LAdd48826,LRes91528,LZer97689,LMin52486,LZer85645,LMul11139,LRes63294,LDot35814,LRes29867,LCro1082,LZer59888,LCon8615,LAdd33198],["Add48826","Res91528","Zer97689","Min52486","Zer85645","Mul11139","Res63294","Dot35814","Res29867","Cro1082","Zer59888","Con8615","Add33198"],Add33198,"Add33198")

Actual (Unparsed): [[[0.0000000, 0.9741000, 0.5535000], [0.8064191, 0.7489000, 1.1850639]]]

Expected (Unparsed): [[[0,0.9741,0.5535],[0.80641908,0.7489,1.1850639]]]

Actual:   [[[0, 0.9741, 0.5535], [0.8065, 0.7489, 1.1851]]]

Expected: [[[0, 0.9741, 0.5535], [0.8065, 0.7489, 1.1851]]]