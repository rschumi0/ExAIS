import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Ave30308 = tf.keras.layers.Input(shape=([2, 2, 2]))
in1Ave30308 = tf.keras.layers.Input(shape=([2, 2, 2]))

Ave30308 = keras.layers.Average(name = 'Ave30308', )([in0Ave30308,in1Ave30308])
Res48557 = keras.layers.Reshape((2, 4), name = 'Res48557', )(Ave30308)
Glo50027 = keras.layers.GlobalMaxPool1D(name = 'Glo50027', )(Res48557)
model = tf.keras.models.Model(inputs=[in0Ave30308,in1Ave30308], outputs=Glo50027)
in0Ave30308 = tf.constant([[[[0.4772, 0.4765], [0.1258, 0.0053]], [[0.3232, 0.0017], [0.0122, 0.3143]]]])
in1Ave30308 = tf.constant([[[[0.7062, 0.6072], [0.9852, 0.8139]], [[0.8227, 0.1485], [0.7351, 0.8404]]]])
print (np.array2string(model.predict([in0Ave30308,in1Ave30308],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Glo50027.png')

LAve30308 = average_layer([[[[[0.4772, 0.4765], [0.1258, 0.0053]], [[0.3232, 0.0017], [0.0122, 0.3143]]]], [[[[0.7062, 0.6072], [0.9852, 0.8139]], [[0.8227, 0.1485], [0.7351, 0.8404]]]]], Ave30308), 
LRes48557 = reshape_layer(Ave30308, [2, 4], Res48557), 
LGlo50027 = global_max_pool1D_layer(Res48557, Glo50027), 
exec_layers([LAve30308,LRes48557,LGlo50027],["Ave30308","Res48557","Glo50027"],Glo50027,"Glo50027")

Actual (Unparsed): [[0.5917000, 0.5418500, 0.5555000, 0.5773500]]

Expected (Unparsed): [[0.5917,0.5418499999999999,0.5555,0.57735]]

Actual:   [[0.5917, 0.5419, 0.5555, 0.5774]]

Expected: [[0.5917, 0.5419, 0.5555, 0.5774]]