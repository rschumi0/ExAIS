import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Sub70520 = tf.keras.layers.Input(shape=([3, 3]))
in1Sub70520 = tf.keras.layers.Input(shape=([3, 3]))
in0Min69481 = tf.keras.layers.Input(shape=([2, 2, 1, 1]))
in1Min69481 = tf.keras.layers.Input(shape=([2, 2, 1, 1]))

Sub70520 = keras.layers.Subtract(name = 'Sub70520', )([in0Sub70520,in1Sub70520])
Res47102 = keras.layers.Reshape((3, 3, 1), name = 'Res47102', )(Sub70520)
Res15821 = keras.layers.Reshape((3, 3, 1, 1), name = 'Res15821', )(Res47102)
Zer67683 = keras.layers.ZeroPadding3D(padding=((1, 1), (1, 1), (1, 1)), name = 'Zer67683', )(Res15821)
Res63084 = keras.layers.Reshape((5, 5, 3), name = 'Res63084', )(Zer67683)
Res31142 = keras.layers.Reshape((5, 15), name = 'Res31142', )(Res63084)
Con37386 = keras.layers.Conv1D(2, (5),strides=(10), padding='valid', dilation_rate=(1), name = 'Con37386', )(Res31142)
Res43280 = keras.layers.Reshape((1, 2, 1), name = 'Res43280', )(Con37386)
Res48276 = keras.layers.Reshape((1, 2, 1, 1), name = 'Res48276', )(Res43280)
Zer28621 = keras.layers.ZeroPadding3D(padding=((1, 0), (0, 0), (0, 0)), name = 'Zer28621', )(Res48276)
Min69481 = keras.layers.Minimum(name = 'Min69481', )([in0Min69481,in1Min69481])
Max63113 = keras.layers.Maximum(name = 'Max63113', )([Zer28621,Min69481])
Lay67362 = keras.layers.LayerNormalization(axis=1, epsilon=1.4276210424577114, name = 'Lay67362', )(Max63113)
Res77093 = keras.layers.Reshape((2, 2, 1), name = 'Res77093', )(Lay67362)
Res7335 = keras.layers.Reshape((2, 2), name = 'Res7335', )(Res77093)
Per36504 = keras.layers.Permute((1,2), name = 'Per36504',)(Res7335)
model = tf.keras.models.Model(inputs=[in0Sub70520,in1Sub70520,in0Min69481,in1Min69481], outputs=Per36504)
w = model.get_layer('Con37386').get_weights() 
w[0] = np.array([[[0.0217, 0.2999], [0.1657, 0.3262], [0.2959, 0.8946], [0.0113, 0.9697], [0.7555, 0.6742], [0.4646, 0.0365], [0.0324, 0.7953], [0.77, 0.2712], [0.4558, 0.6084], [0.1994, 0.3288], [0.2162, 0.447], [0.0972, 0.0876], [0.1941, 0.1014], [0.1017, 0.9772], [0.7558, 0.0118]], [[0.5443, 0.2824], [0.8185, 0.233], [0.8627, 0.3503], [0.4039, 0.3855], [0.1002, 0.249], [0.711, 0.1407], [0.2132, 0.7063], [0.4684, 0.2615], [0.9553, 0.0885], [0.9501, 0.8637], [0.5708, 0.7742], [0.5804, 0.3532], [0.3883, 0.5207], [0.4926, 0.4476], [0.6799, 0.3279]], [[0.7554, 0.7934], [0.8276, 0.8607], [0.2373, 0.9566], [0.9189, 0.7102], [0.2377, 0.9811], [0.3872, 0.6425], [0.0843, 0.2847], [0.2028, 0.5145], [0.8657, 0.3949], [0.4285, 0.7218], [0.3529, 0.9133], [0.6545, 0.8794], [0.9454, 0.1424], [0.9486, 0.9405], [0.1715, 0.0078]], [[0.4724, 0.1053], [0.8726, 0.2656], [0.8457, 0.6845], [0.7027, 0.4985], [0.6694, 0.5491], [0.9895, 0.0708], [0.3627, 0.9164], [0.3171, 0.0403], [0.6085, 0.0039], [0.4163, 0.0042], [0.2597, 0.5164], [0.0788, 0.9957], [0.5119, 0.0205], [0.8441, 0.841], [0.5155, 0.0119]], [[0.1561, 0.8356], [0.3687, 0.8788], [0.5288, 0.2087], [0.6107, 0.0295], [0.0205, 0.602], [0.9172, 0.165], [0.9738, 0.7136], [0.6903, 0.0496], [0.5475, 0.3282], [0.6272, 0.1625], [0.0399, 0.1901], [0.1599, 0.2969], [0.3823, 0.5599], [0.8587, 0.5126], [0.4696, 0.8425]]])
w[1] = np.array([0, 0])
model.get_layer('Con37386').set_weights(w) 
in0Sub70520 = tf.constant([[[0.8947, 0.3063, 0.071], [0.776, 0.2569, 0.1298], [0.377, 0.8981, 0.4172]]])
in1Sub70520 = tf.constant([[[0.0514, 0.1677, 0.4346], [0.7781, 0.4849, 0.6621], [0.9656, 0.594, 0.1585]]])
in0Min69481 = tf.constant([[[[[0.1553]], [[0.2369]]], [[[0.8892]], [[0.8056]]]]])
in1Min69481 = tf.constant([[[[[0.8996]], [[0.859]]], [[[0.2126]], [[0.4914]]]]])
print (np.array2string(model.predict([in0Sub70520,in1Sub70520,in0Min69481,in1Min69481],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Per36504.png')

LSub70520 = subtract_layer([[[0.8947, 0.3063, 0.071], [0.776, 0.2569, 0.1298], [0.377, 0.8981, 0.4172]]], [[[0.0514, 0.1677, 0.4346], [0.7781, 0.4849, 0.6621], [0.9656, 0.594, 0.1585]]], Sub70520), 
LRes47102 = reshape_layer(Sub70520, [3, 3, 1], Res47102), 
LRes15821 = reshape_layer(Res47102, [3, 3, 1, 1], Res15821), 
LZer67683 = zero_padding3D_layer(Res15821, 1, 1, 1, 1, 1, 1, Zer67683), 
LRes63084 = reshape_layer(Zer67683, [5, 5, 3], Res63084), 
LRes31142 = reshape_layer(Res63084, [5, 15], Res31142), 
LCon37386 = conv1D_layer(Res31142, 5,[[[0.0217, 0.2999], [0.1657, 0.3262], [0.2959, 0.8946], [0.0113, 0.9697], [0.7555, 0.6742], [0.4646, 0.0365], [0.0324, 0.7953], [0.77, 0.2712], [0.4558, 0.6084], [0.1994, 0.3288], [0.2162, 0.447], [0.0972, 0.0876], [0.1941, 0.1014], [0.1017, 0.9772], [0.7558, 0.0118]], [[0.5443, 0.2824], [0.8185, 0.233], [0.8627, 0.3503], [0.4039, 0.3855], [0.1002, 0.249], [0.711, 0.1407], [0.2132, 0.7063], [0.4684, 0.2615], [0.9553, 0.0885], [0.9501, 0.8637], [0.5708, 0.7742], [0.5804, 0.3532], [0.3883, 0.5207], [0.4926, 0.4476], [0.6799, 0.3279]], [[0.7554, 0.7934], [0.8276, 0.8607], [0.2373, 0.9566], [0.9189, 0.7102], [0.2377, 0.9811], [0.3872, 0.6425], [0.0843, 0.2847], [0.2028, 0.5145], [0.8657, 0.3949], [0.4285, 0.7218], [0.3529, 0.9133], [0.6545, 0.8794], [0.9454, 0.1424], [0.9486, 0.9405], [0.1715, 0.0078]], [[0.4724, 0.1053], [0.8726, 0.2656], [0.8457, 0.6845], [0.7027, 0.4985], [0.6694, 0.5491], [0.9895, 0.0708], [0.3627, 0.9164], [0.3171, 0.0403], [0.6085, 0.0039], [0.4163, 0.0042], [0.2597, 0.5164], [0.0788, 0.9957], [0.5119, 0.0205], [0.8441, 0.841], [0.5155, 0.0119]], [[0.1561, 0.8356], [0.3687, 0.8788], [0.5288, 0.2087], [0.6107, 0.0295], [0.0205, 0.602], [0.9172, 0.165], [0.9738, 0.7136], [0.6903, 0.0496], [0.5475, 0.3282], [0.6272, 0.1625], [0.0399, 0.1901], [0.1599, 0.2969], [0.3823, 0.5599], [0.8587, 0.5126], [0.4696, 0.8425]]],[0, 0], 10, false, 1, Con37386), 
LRes43280 = reshape_layer(Con37386, [1, 2, 1], Res43280), 
LRes48276 = reshape_layer(Res43280, [1, 2, 1, 1], Res48276), 
LZer28621 = zero_padding3D_layer(Res48276, 1, 0, 0, 0, 0, 0, Zer28621), 
LMin69481 = minimum_layer([[[[[[0.1553]], [[0.2369]]], [[[0.8892]], [[0.8056]]]]], [[[[[0.8996]], [[0.859]]], [[[0.2126]], [[0.4914]]]]]], Min69481), 
LMax63113 = maximum_layer([Zer28621,Min69481], Max63113), 
LLay67362 = layer_normalization_layer(Max63113, 1, 1.4276210424577114, Lay67362), 
LRes77093 = reshape_layer(Lay67362, [2, 2, 1], Res77093), 
LRes7335 = reshape_layer(Res77093, [2, 2], Res7335), 
LPer36504 = permute_layer(Res7335, 1,2, Per36504), 
exec_layers([LSub70520,LRes47102,LRes15821,LZer67683,LRes63084,LRes31142,LCon37386,LRes43280,LRes48276,LZer28621,LMin69481,LMax63113,LLay67362,LRes77093,LRes7335,LPer36504],["Sub70520","Res47102","Res15821","Zer67683","Res63084","Res31142","Con37386","Res43280","Res48276","Zer28621","Min69481","Max63113","Lay67362","Res77093","Res7335","Per36504"],Per36504,"Per36504")

Actual (Unparsed): [[[-0.0239714, -0.1059015], [0.0239714, 0.1059015]]]

Expected (Unparsed): [[[-0.02397139682212882,-0.10590152793341723],[0.02397139682212882,0.10590152793341727]]]

Actual:   [[[-0.0239, -0.1059], [0.024, 0.106]]]

Expected: [[[-0.0239, -0.1059], [0.024, 0.106]]]