import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Con50264 = tf.keras.layers.Input(shape=([2, 2, 2]))

Con50264 = keras.layers.Conv2D(3, (2, 1),strides=(1, 6), padding='valid', dilation_rate=(1, 1), name = 'Con50264', )(in0Con50264)
Dep73899 = keras.layers.DepthwiseConv2D((1, 1),strides=(1, 1), padding='same', name = 'Dep73899', )(Con50264)
model = tf.keras.models.Model(inputs=[in0Con50264], outputs=Dep73899)
w = model.get_layer('Con50264').get_weights() 
w[0] = np.array([[[[0.6466, 0.1303, 0.2067], [0.1977, 0.0347, 0.4555]]], [[[0.247, 0.8658, 0.7252], [0.707, 0.8036, 0.2204]]]])
w[1] = np.array([0, 0, 0])
model.get_layer('Con50264').set_weights(w) 
w = model.get_layer('Dep73899').get_weights() 
w[0] = np.array([[[[0.1639], [0.3493], [0.0702]]]])
w[1] = np.array([0, 0, 0])
model.get_layer('Dep73899').set_weights(w) 
in0Con50264 = tf.constant([[[[0.7409, 0.749], [0.3695, 0.3159]], [[0.3237, 0.602], [0.9705, 0.2108]]]])
print (np.array2string(model.predict([in0Con50264],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Dep73899.png')

LCon50264 = conv2D_layer([[[[0.7409, 0.749], [0.3695, 0.3159]], [[0.3237, 0.602], [0.9705, 0.2108]]]], 2, 1,[[[[0.6466, 0.1303, 0.2067], [0.1977, 0.0347, 0.4555]]], [[[0.247, 0.8658, 0.7252], [0.707, 0.8036, 0.2204]]]],[0, 0, 0], 1, 6, false, 1, 1, Con50264), 
LDep73899 = depthwise_conv2D_layer(Con50264, 1, 1,[[[[0.1639], [0.3493], [0.0702]]]],[0, 0, 0], 1, 1, true, Dep73899), 
exec_layers([LCon50264,LDep73899],["Con50264","Dep73899"],Dep73899,"Dep73899")

Actual (Unparsed): [[[[0.1856514, 0.3096741, 0.0604943]]]]

Expected (Unparsed): [[[[0.18565135584599995,0.309674091139,0.060494258214]]]]

Actual:   [[[[0.1857, 0.3097, 0.0605]]]]

Expected: [[[[0.1857, 0.3097, 0.0605]]]]