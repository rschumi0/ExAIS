import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Zer96784 = tf.keras.layers.Input(shape=([2, 3]))
in0Sub21605 = tf.keras.layers.Input(shape=([3, 3]))
in1Sub21605 = tf.keras.layers.Input(shape=([3, 3]))
in0Con95839 = tf.keras.layers.Input(shape=([1, 1]))
in0Lea51551 = tf.keras.layers.Input(shape=([2, 2]))

Zer96784 = keras.layers.ZeroPadding1D(padding=((1, 1)), name = 'Zer96784', )(in0Zer96784)
Sub21605 = keras.layers.Subtract(name = 'Sub21605', )([in0Sub21605,in1Sub21605])
Zer9890 = keras.layers.ZeroPadding1D(padding=((1, 0)), name = 'Zer9890', )(Sub21605)
Min55530 = keras.layers.Minimum(name = 'Min55530', )([Zer96784,Zer9890])
Res21641 = keras.layers.Reshape((4, 3, 1), name = 'Res21641', )(Min55530)
Glo84027 = keras.layers.GlobalAveragePooling2D(name = 'Glo84027', )(Res21641)
Res97181 = keras.layers.Reshape((1, 1), name = 'Res97181', )(Glo84027)
Con95839 = keras.layers.Concatenate(axis=2, name = 'Con95839', )([Res97181,in0Con95839])
Lea51551 = keras.layers.LeakyReLU(alpha=7.528533937248912, name = 'Lea51551', input_shape=(2, 2))(in0Lea51551)
Cro38731 = keras.layers.Cropping1D(cropping=((1, 0)), name = 'Cro38731', )(Lea51551)
Max10713 = keras.layers.Maximum(name = 'Max10713', )([Con95839,Cro38731])
model = tf.keras.models.Model(inputs=[in0Zer96784,in0Sub21605,in1Sub21605,in0Con95839,in0Lea51551], outputs=Max10713)
in0Zer96784 = tf.constant([[[1.9414, 1.1206, 1.7724], [1.8256, 1.9804, 1.637]]])
in0Sub21605 = tf.constant([[[0.0499, 0.3239, 0.7296], [0.5473, 0.9089, 0.4601], [0.9942, 0.8387, 0.3552]]])
in1Sub21605 = tf.constant([[[0.838, 0.3775, 0.971], [0.1718, 0.8897, 0.4347], [0.7309, 0.263, 0.6426]]])
in0Con95839 = tf.constant([[[0.3368]]])
in0Lea51551 = tf.constant([[[0.6661, 0.0209], [0.9531, 0.5801]]])
print (np.array2string(model.predict([in0Zer96784,in0Sub21605,in1Sub21605,in0Con95839,in0Lea51551],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Max10713.png')

LZer96784 = zero_padding1D_layer([[[1.9414, 1.1206, 1.7724], [1.8256, 1.9804, 1.637]]], 1, 1, Zer96784), 
LSub21605 = subtract_layer([[[0.0499, 0.3239, 0.7296], [0.5473, 0.9089, 0.4601], [0.9942, 0.8387, 0.3552]]], [[[0.838, 0.3775, 0.971], [0.1718, 0.8897, 0.4347], [0.7309, 0.263, 0.6426]]], Sub21605), 
LZer9890 = zero_padding1D_layer(Sub21605, 1, 0, Zer9890), 
LMin55530 = minimum_layer([Zer96784,Zer9890], Min55530), 
LRes21641 = reshape_layer(Min55530, [4, 3, 1], Res21641), 
LGlo84027 = global_average_pooling2D_layer(Res21641, Glo84027), 
LRes97181 = reshape_layer(Glo84027, [1, 1], Res97181), 
LCon95839 = concatenate_layer([Res97181,[[[0.3368]]]], 2, Con95839), 
LLea51551 = leaky_relu_layer([[[0.6661, 0.0209], [0.9531, 0.5801]]], 7.528533937248912, Lea51551), 
LCro38731 = cropping1D_layer(Lea51551, 1, 0, Cro38731), 
LMax10713 = maximum_layer([Con95839,Cro38731], Max10713), 
exec_layers([LZer96784,LSub21605,LZer9890,LMin55530,LRes21641,LGlo84027,LRes97181,LCon95839,LLea51551,LCro38731,LMax10713],["Zer96784","Sub21605","Zer9890","Min55530","Res21641","Glo84027","Res97181","Con95839","Lea51551","Cro38731","Max10713"],Max10713,"Max10713")

Actual (Unparsed): [[[0.9531000, 0.5801000]]]

Expected (Unparsed): [[[0.9531,0.5801]]]

Actual:   [[[0.9531, 0.5801]]]

Expected: [[[0.9531, 0.5801]]]