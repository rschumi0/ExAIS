import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Sof31392 = tf.keras.layers.Input(shape=([1, 1, 2]))
in0Con35432 = tf.keras.layers.Input(shape=([7]))
in0Per65961 = tf.keras.layers.Input(shape=([3, 3]))
in0LST52515 = tf.keras.layers.Input(shape=([3, 1]))
in0Con41808 = tf.keras.layers.Input(shape=([7]))

Sof31392 = keras.layers.Softmax(axis=1, name = 'Sof31392', input_shape=(1, 1, 2))(in0Sof31392)
Res63073 = keras.layers.Reshape((1, 2), name = 'Res63073', )(Sof31392)
Fla13988 = keras.layers.Flatten(name = 'Fla13988', )(Res63073)
Con35432 = keras.layers.Concatenate(axis=1, name = 'Con35432', )([Fla13988,in0Con35432])
Per65961 = keras.layers.Permute((1,2), name = 'Per65961',)(in0Per65961)
Fla14759 = keras.layers.Flatten(name = 'Fla14759', )(Per65961)
LST52515 = keras.layers.LSTM(2,recurrent_activation='sigmoid', name = 'LST52515', )(in0LST52515)
Con41808 = keras.layers.Concatenate(axis=1, name = 'Con41808', )([LST52515,in0Con41808])
Max22381 = keras.layers.Maximum(name = 'Max22381', )([Fla14759,Con41808])
Sub50344 = keras.layers.Subtract(name = 'Sub50344', )([Con35432,Max22381])
Res83960 = keras.layers.Reshape((9, 1), name = 'Res83960', )(Sub50344)
Res39293 = keras.layers.Reshape((9, 1, 1), name = 'Res39293', )(Res83960)
Loc16750 = keras.layers.LocallyConnected2D(3, (2, 1),strides=(1, 1), name = 'Loc16750', )(Res39293)
ReL30809 = keras.layers.ReLU(max_value=5.579587268726614, negative_slope=6.701860345411105, threshold=8.868696400469162, name = 'ReL30809', )(Loc16750)
model = tf.keras.models.Model(inputs=[in0Sof31392,in0Con35432,in0Per65961,in0LST52515,in0Con41808], outputs=ReL30809)
w = model.get_layer('LST52515').get_weights() 
w[0] = np.array([[7, 6, 1, 4, 1, 10, 4, 6]])
w[1] = np.array([[2, 9, 7, 10, 1, 1, 2, 6], [3, 10, 2, 10, 3, 6, 6, 5]])
w[2] = np.array([1, 5, 3, 6, 6, 7, 9, 2])
model.get_layer('LST52515').set_weights(w) 
w = model.get_layer('Loc16750').get_weights() 
w[0] = np.array([[[0.7315, 0.8117, 0.6935], [0.7958, 0.6886, 0.974]], [[0.7118, 0.844, 0.852], [0.642, 0.634, 0.7862]], [[0.4771, 0.5394, 0.2542], [0.8884, 0.585, 0.8027]], [[0.713, 0.4016, 0.4166], [0.0132, 0.6115, 0.0832]], [[0.0894, 0.6548, 0.0887], [0.0504, 0.2284, 0.1093]], [[0.3087, 0.1314, 0.8543], [0.6331, 0.2675, 0.2877]], [[0.4833, 0.4984, 0.9549], [0.0036, 0.2142, 0.6282]], [[0.6804, 0.7564, 0.5642], [0.6065, 0.8119, 0.8155]]])
w[1] = np.array([[[0, 0, 0]], [[0, 0, 0]], [[0, 0, 0]], [[0, 0, 0]], [[0, 0, 0]], [[0, 0, 0]], [[0, 0, 0]], [[0, 0, 0]]])
model.get_layer('Loc16750').set_weights(w) 
in0Sof31392 = tf.constant([[[[0.0154, 0.2492]]]])
in0Con35432 = tf.constant([[0.0519, 0.0471, 0.1968, 0.7001, 0.9753, 0.0351, 0.7335]])
in0Per65961 = tf.constant([[[1.9795, 1.4803, 1.0178], [1.7127, 1.9805, 1.0203], [1.1819, 1.242, 1.6002]]])
in0LST52515 = tf.constant([[[1], [7], [10]]])
in0Con41808 = tf.constant([[0.6097, 0.9278, 0.8092, 0.7643, 0.7401, 0.1526, 0.2249]])
print (np.array2string(model.predict([in0Sof31392,in0Con35432,in0Per65961,in0LST52515,in0Con41808],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='ReL30809.png')

LSof31392 = softmax_layer([[[[0.0154, 0.2492]]]], 1, Sof31392), 
LRes63073 = reshape_layer(Sof31392, [1, 2], Res63073), 
LFla13988 = flatten_layer(Res63073, Fla13988), 
LCon35432 = concatenate_layer([Fla13988,[[0.0519, 0.0471, 0.1968, 0.7001, 0.9753, 0.0351, 0.7335]]], 1, Con35432), 
LPer65961 = permute_layer([[[1.9795, 1.4803, 1.0178], [1.7127, 1.9805, 1.0203], [1.1819, 1.242, 1.6002]]], 1,2, Per65961), 
LFla14759 = flatten_layer(Per65961, Fla14759), 
LLST52515 = lstm_layer([[[1], [7], [10]]],[[7, 6, 1, 4, 1, 10, 4, 6]],[[2, 9, 7, 10, 1, 1, 2, 6], [3, 10, 2, 10, 3, 6, 6, 5]],[1, 5, 3, 6, 6, 7, 9, 2], LST52515), 
LCon41808 = concatenate_layer([LST52515,[[0.6097, 0.9278, 0.8092, 0.7643, 0.7401, 0.1526, 0.2249]]], 1, Con41808), 
LMax22381 = maximum_layer([Fla14759,Con41808], Max22381), 
LSub50344 = subtract_layer(Con35432,Max22381, Sub50344), 
LRes83960 = reshape_layer(Sub50344, [9, 1], Res83960), 
LRes39293 = reshape_layer(Res83960, [9, 1, 1], Res39293), 
LLoc16750 = locally_connected2D_layer(Res39293, 2, 1,[[[0.7315, 0.8117, 0.6935], [0.7958, 0.6886, 0.974]], [[0.7118, 0.844, 0.852], [0.642, 0.634, 0.7862]], [[0.4771, 0.5394, 0.2542], [0.8884, 0.585, 0.8027]], [[0.713, 0.4016, 0.4166], [0.0132, 0.6115, 0.0832]], [[0.0894, 0.6548, 0.0887], [0.0504, 0.2284, 0.1093]], [[0.3087, 0.1314, 0.8543], [0.6331, 0.2675, 0.2877]], [[0.4833, 0.4984, 0.9549], [0.0036, 0.2142, 0.6282]], [[0.6804, 0.7564, 0.5642], [0.6065, 0.8119, 0.8155]]],[[[0, 0, 0]], [[0, 0, 0]], [[0, 0, 0]], [[0, 0, 0]], [[0, 0, 0]], [[0, 0, 0]], [[0, 0, 0]], [[0, 0, 0]]], 1, 1, Loc16750), 
LReL30809 = relu_layer(Loc16750, 5.579587268726614, 6.701860345411105, 8.868696400469162, ReL30809), 
exec_layers([LSof31392,LRes63073,LFla13988,LCon35432,LPer65961,LFla14759,LLST52515,LCon41808,LMax22381,LSub50344,LRes83960,LRes39293,LLoc16750,LReL30809],["Sof31392","Res63073","Fla13988","Con35432","Per65961","Fla14759","LST52515","Con41808","Max22381","Sub50344","Res83960","Res39293","Loc16750","ReL30809"],ReL30809,"ReL30809")

Actual (Unparsed): [[[[-66.8002796, -66.9816838, -67.1244382]], [[-65.8838558, -66.2576082, -67.2685997]], [[-72.4420593, -69.4586091, -70.0425184]], [[-67.5535061, -71.2296096, -65.0816935]], [[-60.6136172, -67.7544465, -60.7316449]], [[-60.9758082, -60.0891224, -61.6683884]], [[-60.1350625, -61.8594029, -65.8401036]], [[-68.4630201, -70.2708107, -68.7371164]]]]

Expected (Unparsed): [[[[-66.80027956650838,-66.98168377985428,-67.124438230551]],[[-65.8838561248073,-66.25760855540595,-67.26860013893884]],[[-72.44205934595178,-69.45860913169179,-70.04251836496464]],[[-67.55350600693836,-71.22960957236143,-65.08169343733977]],[[-60.61361716204857,-67.75444654530276,-60.73164489794507]],[[-60.97580807932814,-60.08912233340752,-61.668388246176235]],[[-60.13506251377766,-61.85940292725745,-65.84010356569111]],[[-68.46301996466053,-70.2708104687521,-68.73711613403454]]]]

Actual:   [[[[-66.8002, -66.9816, -67.1244]], [[-65.8838, -66.2576, -67.2685]], [[-72.442, -69.4586, -70.0425]], [[-67.5535, -71.2296, -65.0816]], [[-60.6136, -67.7544, -60.7316]], [[-60.9758, -60.0891, -61.6683]], [[-60.135, -61.8594, -65.8401]], [[-68.463, -70.2708, -68.7371]]]]

Expected: [[[[-66.8002, -66.9816, -67.1244]], [[-65.8838, -66.2576, -67.2686]], [[-72.442, -69.4586, -70.0425]], [[-67.5535, -71.2296, -65.0816]], [[-60.6136, -67.7544, -60.7316]], [[-60.9758, -60.0891, -61.6683]], [[-60.135, -61.8594, -65.8401]], [[-68.463, -70.2708, -68.7371]]]]