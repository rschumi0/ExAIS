import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Up_33622 = tf.keras.layers.Input(shape=([3, 2, 2, 1]))
in0Dot83173 = tf.keras.layers.Input(shape=([3, 2]))
in1Dot83173 = tf.keras.layers.Input(shape=([3, 2]))
in0Con12662 = tf.keras.layers.Input(shape=([6, 13]))

Up_33622 = keras.layers.UpSampling3D(size=(2, 2, 2), name = 'Up_33622', )(in0Up_33622)
Res8699 = keras.layers.Reshape((6, 4, 4), name = 'Res8699', )(Up_33622)
Res73056 = keras.layers.Reshape((6, 16), name = 'Res73056', )(Res8699)
Dot83173 = keras.layers.Dot(axes=(2, 2), name = 'Dot83173', )([in0Dot83173,in1Dot83173])
Zer906 = keras.layers.ZeroPadding1D(padding=((3, 0)), name = 'Zer906', )(Dot83173)
Con12662 = keras.layers.Concatenate(axis=2, name = 'Con12662', )([Zer906,in0Con12662])
Max98164 = keras.layers.Maximum(name = 'Max98164', )([Res73056,Con12662])
model = tf.keras.models.Model(inputs=[in0Up_33622,in0Dot83173,in1Dot83173,in0Con12662], outputs=Max98164)
in0Up_33622 = tf.constant([[[[[1.5737], [1.0289]], [[1.8893], [1.6346]]], [[[1.056], [1.654]], [[1.8811], [1.5492]]], [[[1.2916], [1.9808]], [[1.2094], [1.0636]]]]])
in0Dot83173 = tf.constant([[[0.2689, 0.8859], [0.0211, 0.2562], [0.9705, 0.4048]]])
in1Dot83173 = tf.constant([[[0.22, 0.6897], [0.9502, 0.1962], [0.1113, 0.4393]]])
in0Con12662 = tf.constant([[[0.8573, 0.5511, 0.9658, 0.5842, 0.5814, 0.5836, 0.1208, 0.0101, 0.9247, 0.1299, 0.7856, 0.8214, 0.0949], [0.8819, 0.9462, 0.9312, 0.2791, 0.3951, 0.8478, 0.4634, 0.8157, 0.3236, 0.2613, 0.755, 0.9869, 0.321], [0.1656, 0.8317, 0.4974, 0.5021, 0.361, 0.7228, 0.6701, 0.6854, 0.7611, 0.1944, 0.1459, 0.9855, 0.6292], [0.2216, 0.4028, 0.7118, 0.8219, 0.7955, 0.7244, 0.9417, 0.1833, 0.4666, 0.3437, 0.5854, 0.5917, 0.3624], [0.3619, 0.2345, 0.8032, 0.287, 0.701, 0.5982, 0.1595, 0.9063, 0.7868, 0.868, 0.4313, 0.958, 0.8782], [0.9256, 0.5539, 0.8825, 0.9597, 0.9095, 0.7777, 0.2686, 0.8985, 0.2902, 0.8055, 0.0275, 0.1261, 0.2698]]])
print (np.array2string(model.predict([in0Up_33622,in0Dot83173,in1Dot83173,in0Con12662],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Max98164.png')

LUp_33622 = up_sampling3D_layer([[[[[1.5737], [1.0289]], [[1.8893], [1.6346]]], [[[1.056], [1.654]], [[1.8811], [1.5492]]], [[[1.2916], [1.9808]], [[1.2094], [1.0636]]]]], 2, 2, 2, Up_33622), 
LRes8699 = reshape_layer(Up_33622, [6, 4, 4], Res8699), 
LRes73056 = reshape_layer(Res8699, [6, 16], Res73056), 
LDot83173 = dot_layer([[[0.2689, 0.8859], [0.0211, 0.2562], [0.9705, 0.4048]]], [[[0.22, 0.6897], [0.9502, 0.1962], [0.1113, 0.4393]]], 2, 2, Dot83173), 
LZer906 = zero_padding1D_layer(Dot83173, 3, 0, Zer906), 
LCon12662 = concatenate_layer([Zer906,[[[0.8573, 0.5511, 0.9658, 0.5842, 0.5814, 0.5836, 0.1208, 0.0101, 0.9247, 0.1299, 0.7856, 0.8214, 0.0949], [0.8819, 0.9462, 0.9312, 0.2791, 0.3951, 0.8478, 0.4634, 0.8157, 0.3236, 0.2613, 0.755, 0.9869, 0.321], [0.1656, 0.8317, 0.4974, 0.5021, 0.361, 0.7228, 0.6701, 0.6854, 0.7611, 0.1944, 0.1459, 0.9855, 0.6292], [0.2216, 0.4028, 0.7118, 0.8219, 0.7955, 0.7244, 0.9417, 0.1833, 0.4666, 0.3437, 0.5854, 0.5917, 0.3624], [0.3619, 0.2345, 0.8032, 0.287, 0.701, 0.5982, 0.1595, 0.9063, 0.7868, 0.868, 0.4313, 0.958, 0.8782], [0.9256, 0.5539, 0.8825, 0.9597, 0.9095, 0.7777, 0.2686, 0.8985, 0.2902, 0.8055, 0.0275, 0.1261, 0.2698]]]], 2, Con12662), 
LMax98164 = maximum_layer([Res73056,Con12662], Max98164), 
exec_layers([LUp_33622,LRes8699,LRes73056,LDot83173,LZer906,LCon12662,LMax98164],["Up_33622","Res8699","Res73056","Dot83173","Zer906","Con12662","Max98164"],Max98164,"Max98164")

Actual (Unparsed): [[[1.5737000, 1.5737000, 1.0289000, 1.0289000, 1.5737000, 1.5737000, 1.0289000, 1.0289000, 1.8893000, 1.8893000, 1.6346000, 1.6346000, 1.8893000, 1.8893000, 1.6346000, 1.6346000], [1.5737000, 1.5737000, 1.0289000, 1.0289000, 1.5737000, 1.5737000, 1.0289000, 1.0289000, 1.8893000, 1.8893000, 1.6346000, 1.6346000, 1.8893000, 1.8893000, 1.6346000, 1.6346000], [1.0560000, 1.0560000, 1.6540000, 1.6540000, 1.0560000, 1.0560000, 1.6540000, 1.6540000, 1.8811001, 1.8811001, 1.5492001, 1.5492001, 1.8811001, 1.8811001, 1.5492001, 1.5492001], [1.0560000, 1.0560000, 1.6540000, 1.6540000, 1.0560000, 1.0560000, 1.6540000, 1.6540000, 1.8811001, 1.8811001, 1.5492001, 1.5492001, 1.8811001, 1.8811001, 1.5492001, 1.5492001], [1.2916000, 1.2916000, 1.9808000, 1.9808000, 1.2916000, 1.2916000, 1.9808000, 1.9808000, 1.2094001, 1.2094001, 1.0635999, 1.0635999, 1.2094001, 1.2094001, 1.0635999, 1.0635999], [1.2916000, 1.2916000, 1.9808000, 1.9808000, 1.2916000, 1.2916000, 1.9808000, 1.9808000, 1.2094001, 1.2094001, 1.0635999, 1.0635999, 1.2094001, 1.2094001, 1.0635999, 1.0635999]]]

Expected (Unparsed): [[[1.5737,1.5737,1.0289,1.0289,1.5737,1.5737,1.0289,1.0289,1.8893,1.8893,1.6346,1.6346,1.8893,1.8893,1.6346,1.6346],[1.5737,1.5737,1.0289,1.0289,1.5737,1.5737,1.0289,1.0289,1.8893,1.8893,1.6346,1.6346,1.8893,1.8893,1.6346,1.6346],[1.056,1.056,1.654,1.654,1.056,1.056,1.654,1.654,1.8811,1.8811,1.5492,1.5492,1.8811,1.8811,1.5492,1.5492],[1.056,1.056,1.654,1.654,1.056,1.056,1.654,1.654,1.8811,1.8811,1.5492,1.5492,1.8811,1.8811,1.5492,1.5492],[1.2916,1.2916,1.9808,1.9808,1.2916,1.2916,1.9808,1.9808,1.2094,1.2094,1.0636,1.0636,1.2094,1.2094,1.0636,1.0636],[1.2916,1.2916,1.9808,1.9808,1.2916,1.2916,1.9808,1.9808,1.2094,1.2094,1.0636,1.0636,1.2094,1.2094,1.0636,1.0636]]]

Actual:   [[[1.5737, 1.5737, 1.0289, 1.0289, 1.5737, 1.5737, 1.0289, 1.0289, 1.8893, 1.8893, 1.6346, 1.6346, 1.8893, 1.8893, 1.6346, 1.6346], [1.5737, 1.5737, 1.0289, 1.0289, 1.5737, 1.5737, 1.0289, 1.0289, 1.8893, 1.8893, 1.6346, 1.6346, 1.8893, 1.8893, 1.6346, 1.6346], [1.056, 1.056, 1.654, 1.654, 1.056, 1.056, 1.654, 1.654, 1.8812, 1.8812, 1.5493, 1.5493, 1.8812, 1.8812, 1.5493, 1.5493], [1.056, 1.056, 1.654, 1.654, 1.056, 1.056, 1.654, 1.654, 1.8812, 1.8812, 1.5493, 1.5493, 1.8812, 1.8812, 1.5493, 1.5493], [1.2916, 1.2916, 1.9808, 1.9808, 1.2916, 1.2916, 1.9808, 1.9808, 1.2095, 1.2095, 1.0636, 1.0636, 1.2095, 1.2095, 1.0636, 1.0636], [1.2916, 1.2916, 1.9808, 1.9808, 1.2916, 1.2916, 1.9808, 1.9808, 1.2095, 1.2095, 1.0636, 1.0636, 1.2095, 1.2095, 1.0636, 1.0636]]]

Expected: [[[1.5737, 1.5737, 1.0289, 1.0289, 1.5737, 1.5737, 1.0289, 1.0289, 1.8893, 1.8893, 1.6346, 1.6346, 1.8893, 1.8893, 1.6346, 1.6346], [1.5737, 1.5737, 1.0289, 1.0289, 1.5737, 1.5737, 1.0289, 1.0289, 1.8893, 1.8893, 1.6346, 1.6346, 1.8893, 1.8893, 1.6346, 1.6346], [1.056, 1.056, 1.654, 1.654, 1.056, 1.056, 1.654, 1.654, 1.8811, 1.8811, 1.5492, 1.5492, 1.8811, 1.8811, 1.5492, 1.5492], [1.056, 1.056, 1.654, 1.654, 1.056, 1.056, 1.654, 1.654, 1.8811, 1.8811, 1.5492, 1.5492, 1.8811, 1.8811, 1.5492, 1.5492], [1.2916, 1.2916, 1.9808, 1.9808, 1.2916, 1.2916, 1.9808, 1.9808, 1.2094, 1.2094, 1.0636, 1.0636, 1.2094, 1.2094, 1.0636, 1.0636], [1.2916, 1.2916, 1.9808, 1.9808, 1.2916, 1.2916, 1.9808, 1.9808, 1.2094, 1.2094, 1.0636, 1.0636, 1.2094, 1.2094, 1.0636, 1.0636]]]