import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Sub26672 = tf.keras.layers.Input(shape=([3, 2, 2]))
in1Sub26672 = tf.keras.layers.Input(shape=([3, 2, 2]))
in0Con74942 = tf.keras.layers.Input(shape=([3, 2, 2, 1]))
in0Mul22653 = tf.keras.layers.Input(shape=([1, 2, 1, 2]))
in1Mul22653 = tf.keras.layers.Input(shape=([1, 2, 1, 2]))
in0LST82494 = tf.keras.layers.Input(shape=([3, 3]))
in0Ave59680 = tf.keras.layers.Input(shape=([1, 1, 2]))
in1Ave59680 = tf.keras.layers.Input(shape=([1, 1, 2]))
in0Con13476 = tf.keras.layers.Input(shape=([22]))

Sub26672 = keras.layers.Subtract(name = 'Sub26672', )([in0Sub26672,in1Sub26672])
Res56953 = keras.layers.Reshape((3, 2, 2, 1), name = 'Res56953', )(Sub26672)
Con74942 = keras.layers.Concatenate(axis=4, name = 'Con74942', )([Res56953,in0Con74942])
Mul22653 = keras.layers.Multiply(name = 'Mul22653', )([in0Mul22653,in1Mul22653])
Zer65424 = keras.layers.ZeroPadding3D(padding=((2, 0), (0, 0), (1, 0)), name = 'Zer65424', )(Mul22653)
Min38793 = keras.layers.Minimum(name = 'Min38793', )([Con74942,Zer65424])
Fla86415 = keras.layers.Flatten(name = 'Fla86415', )(Min38793)
LST82494 = keras.layers.LSTM(2,recurrent_activation='sigmoid', name = 'LST82494', )(in0LST82494)
ELU89661 = keras.layers.ELU(alpha=0.17026753060253697, name = 'ELU89661', )(LST82494)
Res21960 = keras.layers.Reshape((2, 1), name = 'Res21960', )(ELU89661)
Per58948 = keras.layers.Permute((1,2), name = 'Per58948',)(Res21960)
Fla75400 = keras.layers.Flatten(name = 'Fla75400', )(Per58948)
Ave59680 = keras.layers.Average(name = 'Ave59680', )([in0Ave59680,in1Ave59680])
Res2868 = keras.layers.Reshape((1, 2), name = 'Res2868', )(Ave59680)
Glo52354 = keras.layers.GlobalMaxPool1D(name = 'Glo52354', )(Res2868)
Mul74926 = keras.layers.Multiply(name = 'Mul74926', )([Fla75400,Glo52354])
Con13476 = keras.layers.Concatenate(axis=1, name = 'Con13476', )([Mul74926,in0Con13476])
Add93496 = keras.layers.Add(name = 'Add93496', )([Fla86415,Con13476])
model = tf.keras.models.Model(inputs=[in0Sub26672,in1Sub26672,in0Con74942,in0Mul22653,in1Mul22653,in0LST82494,in0Ave59680,in1Ave59680,in0Con13476], outputs=Add93496)
w = model.get_layer('LST82494').get_weights() 
w[0] = np.array([[1, 5, 2, 6, 7, 10, 7, 8], [2, 4, 2, 1, 8, 3, 6, 2], [2, 4, 7, 10, 3, 4, 7, 2]])
w[1] = np.array([[2, 2, 2, 2, 9, 7, 4, 1], [3, 9, 7, 7, 5, 9, 7, 1]])
w[2] = np.array([2, 6, 1, 3, 4, 7, 8, 2])
model.get_layer('LST82494').set_weights(w) 
in0Sub26672 = tf.constant([[[[0.4644, 0.7096], [0.2288, 0.4228]], [[0.3079, 0.1756], [0.7859, 0.1629]], [[0.2023, 0.3704], [0.138, 0.8787]]]])
in1Sub26672 = tf.constant([[[[0.1346, 0.3624], [0.7333, 0.654]], [[0.7024, 0.8374], [0.5689, 0.2818]], [[0.421, 0.2249], [0.8971, 0.7262]]]])
in0Con74942 = tf.constant([[[[[0.462], [0.4644]], [[0.0783], [0.0185]]], [[[0.966], [0.9046]], [[0.2284], [0.9379]]], [[[0.3563], [0.4934]], [[0.9175], [0.255]]]]])
in0Mul22653 = tf.constant([[[[[0.1379, 0.9615]], [[0.8285, 0.2159]]]]])
in1Mul22653 = tf.constant([[[[[0.8982, 0.5098]], [[0.8284, 0.3853]]]]])
in0LST82494 = tf.constant([[[1, 3, 7], [2, 9, 6], [7, 2, 10]]])
in0Ave59680 = tf.constant([[[[0.2358, 0.3106]]]])
in1Ave59680 = tf.constant([[[[0.7135, 0.0721]]]])
in0Con13476 = tf.constant([[0.1222, 0.7692, 0.1555, 0.7701, 0.5444, 0.7118, 0.17, 0.201, 0.8605, 0.1338, 0.0223, 0.9005, 0.959, 0.3626, 0.8968, 0.764, 0.6981, 0.8986, 0.5782, 0.1813, 0.4421, 0.1353]])
print (np.array2string(model.predict([in0Sub26672,in1Sub26672,in0Con74942,in0Mul22653,in1Mul22653,in0LST82494,in0Ave59680,in1Ave59680,in0Con13476],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Add93496.png')

LSub26672 = subtract_layer([[[[0.4644, 0.7096], [0.2288, 0.4228]], [[0.3079, 0.1756], [0.7859, 0.1629]], [[0.2023, 0.3704], [0.138, 0.8787]]]], [[[[0.1346, 0.3624], [0.7333, 0.654]], [[0.7024, 0.8374], [0.5689, 0.2818]], [[0.421, 0.2249], [0.8971, 0.7262]]]], Sub26672), 
LRes56953 = reshape_layer(Sub26672, [3, 2, 2, 1], Res56953), 
LCon74942 = concatenate_layer([Res56953,[[[[[0.462], [0.4644]], [[0.0783], [0.0185]]], [[[0.966], [0.9046]], [[0.2284], [0.9379]]], [[[0.3563], [0.4934]], [[0.9175], [0.255]]]]]], 4, Con74942), 
LMul22653 = multiply_layer([[[[[[0.1379, 0.9615]], [[0.8285, 0.2159]]]]], [[[[[0.8982, 0.5098]], [[0.8284, 0.3853]]]]]], Mul22653), 
LZer65424 = zero_padding3D_layer(Mul22653, 2, 0, 0, 0, 1, 0, Zer65424), 
LMin38793 = minimum_layer([Con74942,Zer65424], Min38793), 
LFla86415 = flatten_layer(Min38793, Fla86415), 
LLST82494 = lstm_layer([[[1, 3, 7], [2, 9, 6], [7, 2, 10]]],[[1, 5, 2, 6, 7, 10, 7, 8], [2, 4, 2, 1, 8, 3, 6, 2], [2, 4, 7, 10, 3, 4, 7, 2]],[[2, 2, 2, 2, 9, 7, 4, 1], [3, 9, 7, 7, 5, 9, 7, 1]],[2, 6, 1, 3, 4, 7, 8, 2], LST82494), 
LELU89661 = elu_layer(LST82494, 0.17026753060253697, ELU89661), 
LRes21960 = reshape_layer(ELU89661, [2, 1], Res21960), 
LPer58948 = permute_layer(Res21960, 1,2, Per58948), 
LFla75400 = flatten_layer(Per58948, Fla75400), 
LAve59680 = average_layer([[[[[0.2358, 0.3106]]]], [[[[0.7135, 0.0721]]]]], Ave59680), 
LRes2868 = reshape_layer(Ave59680, [1, 2], Res2868), 
LGlo52354 = global_max_pool1D_layer(Res2868, Glo52354), 
LMul74926 = multiply_layer([Fla75400,Glo52354], Mul74926), 
LCon13476 = concatenate_layer([Mul74926,[[0.1222, 0.7692, 0.1555, 0.7701, 0.5444, 0.7118, 0.17, 0.201, 0.8605, 0.1338, 0.0223, 0.9005, 0.959, 0.3626, 0.8968, 0.764, 0.6981, 0.8986, 0.5782, 0.1813, 0.4421, 0.1353]]], 1, Con13476), 
LAdd93496 = add_layer([Fla86415,Con13476], Add93496), 
exec_layers([LSub26672,LRes56953,LCon74942,LMul22653,LZer65424,LMin38793,LFla86415,LLST82494,LELU89661,LRes21960,LPer58948,LFla75400,LAve59680,LRes2868,LGlo52354,LMul74926,LCon13476,LAdd93496],["Sub26672","Res56953","Con74942","Mul22653","Zer65424","Min38793","Fla86415","LST82494","ELU89661","Res21960","Per58948","Fla75400","Ave59680","Res2868","Glo52354","Mul74926","Con13476","Add93496"],Add93496,"Add93496")

Actual (Unparsed): [[0.4723027, 0.1904037, 0.1222000, 0.7692000, -0.3490000, 0.7701000, 0.3132000, 0.7118000, -0.2245000, 0.2010000, 0.1987000, 0.1338000, 0.0223000, 0.9005000, 0.8401000, 0.3626000, 0.6781000, 0.7640000, 0.8219617, 1.3887727, -0.1809000, 0.1813000, 0.5946000, 0.2184863]]

Expected (Unparsed): [[0.4723027388369261,0.19040372711795586,0.1222,0.7692,-0.349,0.7701,0.3132,0.7118,-0.2245,0.201,0.1987,0.1338,0.0223,0.9005,0.8401,0.3626,0.6781,0.764,0.8219617800000001,1.3887727,-0.18089999999999995,0.1813,0.5946,0.21848626999999998]]

Actual:   [[0.4724, 0.1905, 0.1222, 0.7692, -0.349, 0.7701, 0.3132, 0.7118, -0.2245, 0.201, 0.1987, 0.1338, 0.0223, 0.9005, 0.8401, 0.3626, 0.6781, 0.764, 0.822, 1.3888, -0.1809, 0.1813, 0.5946, 0.2185]]

Expected: [[0.4724, 0.1905, 0.1222, 0.7692, -0.349, 0.7701, 0.3132, 0.7118, -0.2245, 0.201, 0.1987, 0.1338, 0.0223, 0.9005, 0.8401, 0.3626, 0.6781, 0.764, 0.822, 1.3888, -0.1808, 0.1813, 0.5946, 0.2185]]