import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Per68683 = tf.keras.layers.Input(shape=([4, 2]))
in0Con18791 = tf.keras.layers.Input(shape=([4, 4, 1]))
in0Cro98889 = tf.keras.layers.Input(shape=([3, 3, 2]))
in0Up_37029 = tf.keras.layers.Input(shape=([3, 4]))
in0Con71355 = tf.keras.layers.Input(shape=([6, 4]))
in0Dot40645 = tf.keras.layers.Input(shape=([2, 2]))
in1Dot40645 = tf.keras.layers.Input(shape=([2, 2]))
in0Con91541 = tf.keras.layers.Input(shape=([6, 6]))

Per68683 = keras.layers.Permute((1,2), name = 'Per68683',)(in0Per68683)
Res54364 = keras.layers.Reshape((4, 2, 1), name = 'Res54364', )(Per68683)
Zer24008 = keras.layers.ZeroPadding2D(padding=((0, 0), (2, 0)), name = 'Zer24008', )(Res54364)
Con18791 = keras.layers.Concatenate(axis=3, name = 'Con18791', )([Zer24008,in0Con18791])
Cro98889 = keras.layers.Cropping2D(cropping=((1, 1), (0, 0)), name = 'Cro98889', )(in0Cro98889)
Zer25455 = keras.layers.ZeroPadding2D(padding=((3, 0), (1, 0)), name = 'Zer25455', )(Cro98889)
Max1241 = keras.layers.Maximum(name = 'Max1241', )([Con18791,Zer25455])
Res45387 = keras.layers.Reshape((4, 8), name = 'Res45387', )(Max1241)
Zer36198 = keras.layers.ZeroPadding1D(padding=((2, 0)), name = 'Zer36198', )(Res45387)
Up_37029 = keras.layers.UpSampling1D(size=(2), name = 'Up_37029', )(in0Up_37029)
Con71355 = keras.layers.Concatenate(axis=2, name = 'Con71355', )([Up_37029,in0Con71355])
Max30464 = keras.layers.Maximum(name = 'Max30464', )([Zer36198,Con71355])
Dot40645 = keras.layers.Dot(axes=(1, 2), name = 'Dot40645', )([in0Dot40645,in1Dot40645])
Zer21134 = keras.layers.ZeroPadding1D(padding=((4, 0)), name = 'Zer21134', )(Dot40645)
Con91541 = keras.layers.Concatenate(axis=2, name = 'Con91541', )([Zer21134,in0Con91541])
Max62590 = keras.layers.Maximum(name = 'Max62590', )([Max30464,Con91541])
model = tf.keras.models.Model(inputs=[in0Per68683,in0Con18791,in0Cro98889,in0Up_37029,in0Con71355,in0Dot40645,in1Dot40645,in0Con91541], outputs=Max62590)
in0Per68683 = tf.constant([[[1.1423, 1.64], [1.0978, 1.319], [1.6281, 1.5105], [1.8499, 1.6174]]])
in0Con18791 = tf.constant([[[[0.7407], [0.4862], [0.9327], [0.4584]], [[0.3731], [0.88], [0.3463], [0.543]], [[0.5738], [0.2603], [0.2278], [0.8812]], [[0.7644], [0.1343], [0.2904], [0.8821]]]])
in0Cro98889 = tf.constant([[[[1.5309, 1.1885], [1.4106, 1.5393], [1.8787, 1.1167]], [[1.0916, 1.7378], [1.8045, 1.7846], [1.8581, 1.7368]], [[1.0366, 1.5251], [1.4951, 1.6313], [1.9297, 1.5097]]]])
in0Up_37029 = tf.constant([[[1.3853, 1.1962, 1.0127, 1.185], [1.0954, 1.1271, 1.3878, 1.3284], [1.7814, 1.639, 1.8267, 1.2262]]])
in0Con71355 = tf.constant([[[0.825, 0.9204, 0.0376, 0.978], [0.9989, 0.9461, 0.4054, 0.2159], [0.7717, 0.2336, 0.8878, 0.2273], [0.0806, 0.2118, 0.9957, 0.9156], [0.4208, 0.4367, 0.8677, 0.2695], [0.5325, 0.083, 0.0804, 0.0336]]])
in0Dot40645 = tf.constant([[[0.8832, 0.0613], [0.0791, 0.2225]]])
in1Dot40645 = tf.constant([[[0.7079, 0.3847], [0.7343, 0.0294]]])
in0Con91541 = tf.constant([[[0.6605, 0.2831, 0.2646, 0.0381, 0.6543, 0.9768], [0.5087, 0.9634, 0.8643, 0.4567, 0.8922, 0.2678], [0.3083, 0.7185, 0.7108, 0.262, 0.9517, 0.9509], [0.552, 0.8631, 0.3919, 0.2984, 0.9199, 0.6964], [0.9418, 0.4075, 0.4278, 0.6557, 0.5089, 0.9133], [0.9498, 0.9743, 0.4769, 0.9393, 0.7021, 0.1589]]])
print (np.array2string(model.predict([in0Per68683,in0Con18791,in0Cro98889,in0Up_37029,in0Con71355,in0Dot40645,in1Dot40645,in0Con91541],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Max62590.png')

LPer68683 = permute_layer([[[1.1423, 1.64], [1.0978, 1.319], [1.6281, 1.5105], [1.8499, 1.6174]]], 1,2, Per68683), 
LRes54364 = reshape_layer(Per68683, [4, 2, 1], Res54364), 
LZer24008 = zero_padding2D_layer(Res54364, 0, 0, 2, 0, Zer24008), 
LCon18791 = concatenate_layer([Zer24008,[[[[0.7407], [0.4862], [0.9327], [0.4584]], [[0.3731], [0.88], [0.3463], [0.543]], [[0.5738], [0.2603], [0.2278], [0.8812]], [[0.7644], [0.1343], [0.2904], [0.8821]]]]], 3, Con18791), 
LCro98889 = cropping2D_layer([[[[1.5309, 1.1885], [1.4106, 1.5393], [1.8787, 1.1167]], [[1.0916, 1.7378], [1.8045, 1.7846], [1.8581, 1.7368]], [[1.0366, 1.5251], [1.4951, 1.6313], [1.9297, 1.5097]]]], 1, 1, 0, 0, Cro98889), 
LZer25455 = zero_padding2D_layer(Cro98889, 3, 0, 1, 0, Zer25455), 
LMax1241 = maximum_layer([Con18791,Zer25455], Max1241), 
LRes45387 = reshape_layer(Max1241, [4, 8], Res45387), 
LZer36198 = zero_padding1D_layer(Res45387, 2, 0, Zer36198), 
LUp_37029 = up_sampling1D_layer([[[1.3853, 1.1962, 1.0127, 1.185], [1.0954, 1.1271, 1.3878, 1.3284], [1.7814, 1.639, 1.8267, 1.2262]]], 2, Up_37029), 
LCon71355 = concatenate_layer([Up_37029,[[[0.825, 0.9204, 0.0376, 0.978], [0.9989, 0.9461, 0.4054, 0.2159], [0.7717, 0.2336, 0.8878, 0.2273], [0.0806, 0.2118, 0.9957, 0.9156], [0.4208, 0.4367, 0.8677, 0.2695], [0.5325, 0.083, 0.0804, 0.0336]]]], 2, Con71355), 
LMax30464 = maximum_layer([Zer36198,Con71355], Max30464), 
LDot40645 = dot_layer([[[0.8832, 0.0613], [0.0791, 0.2225]]], [[[0.7079, 0.3847], [0.7343, 0.0294]]], 1, 2, Dot40645), 
LZer21134 = zero_padding1D_layer(Dot40645, 4, 0, Zer21134), 
LCon91541 = concatenate_layer([Zer21134,[[[0.6605, 0.2831, 0.2646, 0.0381, 0.6543, 0.9768], [0.5087, 0.9634, 0.8643, 0.4567, 0.8922, 0.2678], [0.3083, 0.7185, 0.7108, 0.262, 0.9517, 0.9509], [0.552, 0.8631, 0.3919, 0.2984, 0.9199, 0.6964], [0.9418, 0.4075, 0.4278, 0.6557, 0.5089, 0.9133], [0.9498, 0.9743, 0.4769, 0.9393, 0.7021, 0.1589]]]], 2, Con91541), 
LMax62590 = maximum_layer([Max30464,Con91541], Max62590), 
exec_layers([LPer68683,LRes54364,LZer24008,LCon18791,LCro98889,LZer25455,LMax1241,LRes45387,LZer36198,LUp_37029,LCon71355,LMax30464,LDot40645,LZer21134,LCon91541,LMax62590],["Per68683","Res54364","Zer24008","Con18791","Cro98889","Zer25455","Max1241","Res45387","Zer36198","Up_37029","Con71355","Max30464","Dot40645","Zer21134","Con91541","Max62590"],Max62590,"Max62590")

Actual (Unparsed): [[[1.3853000, 1.1962000, 1.0127000, 1.1849999, 0.8250000, 0.9204000, 0.6543000, 0.9780000], [1.3853000, 1.1962000, 1.0127000, 1.1849999, 0.9989000, 0.9461000, 0.8922000, 0.2678000], [1.0954000, 1.1271000, 1.3878000, 1.3284000, 1.1423000, 0.9327000, 1.6400000, 0.9509000], [1.0954000, 1.1271000, 1.3878000, 1.3284000, 1.0978000, 0.3463000, 1.3190000, 0.9156000], [1.7814000, 1.6390001, 1.8267000, 1.2262000, 1.6281000, 0.6557000, 1.5105000, 0.9133000], [1.7814000, 1.6390001, 1.8267000, 1.7378000, 1.8499000, 1.7846000, 1.8581001, 1.7368000]]]

Expected (Unparsed): [[[1.3853,1.1962,1.0127,1.185,0.825,0.9204,0.6543,0.978],[1.3853,1.1962,1.0127,1.185,0.9989,0.9461,0.8922,0.2678],[1.0954,1.1271,1.3878,1.3284,1.1423,0.9327,1.64,0.9509],[1.0954,1.1271,1.3878,1.3284,1.0978,0.3463,1.319,0.9156],[1.7814,1.639,1.8267,1.2262,1.6281,0.6557,1.5105,0.9133],[1.7814,1.639,1.8267,1.7378,1.8499,1.7846,1.8581,1.7368]]]

Actual:   [[[1.3853, 1.1962, 1.0127, 1.185, 0.825, 0.9204, 0.6543, 0.978], [1.3853, 1.1962, 1.0127, 1.185, 0.9989, 0.9461, 0.8922, 0.2678], [1.0954, 1.1271, 1.3878, 1.3284, 1.1423, 0.9327, 1.64, 0.9509], [1.0954, 1.1271, 1.3878, 1.3284, 1.0978, 0.3463, 1.319, 0.9156], [1.7814, 1.6391, 1.8267, 1.2262, 1.6281, 0.6557, 1.5105, 0.9133], [1.7814, 1.6391, 1.8267, 1.7378, 1.8499, 1.7846, 1.8582, 1.7368]]]

Expected: [[[1.3853, 1.1962, 1.0127, 1.185, 0.825, 0.9204, 0.6543, 0.978], [1.3853, 1.1962, 1.0127, 1.185, 0.9989, 0.9461, 0.8922, 0.2678], [1.0954, 1.1271, 1.3878, 1.3284, 1.1423, 0.9327, 1.64, 0.9509], [1.0954, 1.1271, 1.3878, 1.3284, 1.0978, 0.3463, 1.319, 0.9156], [1.7814, 1.639, 1.8267, 1.2262, 1.6281, 0.6557, 1.5105, 0.9133], [1.7814, 1.639, 1.8267, 1.7378, 1.8499, 1.7846, 1.8581, 1.7368]]]