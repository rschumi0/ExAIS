import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Mul52421 = tf.keras.layers.Input(shape=([2, 2, 2]))
in1Mul52421 = tf.keras.layers.Input(shape=([2, 2, 2]))
in0Con47837 = tf.keras.layers.Input(shape=([4]))
in0Fla15573 = tf.keras.layers.Input(shape=([1]))
in0Con18496 = tf.keras.layers.Input(shape=([6, 3]))
in0Up_3257 = tf.keras.layers.Input(shape=([1, 4]))

Mul52421 = keras.layers.Multiply(name = 'Mul52421', )([in0Mul52421,in1Mul52421])
Res49328 = keras.layers.Reshape((2, 4), name = 'Res49328', )(Mul52421)
Fla51189 = keras.layers.Flatten(name = 'Fla51189', )(Res49328)
Con47837 = keras.layers.Concatenate(axis=1, name = 'Con47837', )([Fla51189,in0Con47837])
Fla15573 = keras.layers.Flatten(name = 'Fla15573', )(in0Fla15573)
Res38705 = keras.layers.Reshape((1, 1), name = 'Res38705', )(Fla15573)
Zer81376 = keras.layers.ZeroPadding1D(padding=((3, 0)), name = 'Zer81376', )(Res38705)
Zer71607 = keras.layers.ZeroPadding1D(padding=((2, 0)), name = 'Zer71607', )(Zer81376)
Con18496 = keras.layers.Concatenate(axis=2, name = 'Con18496', )([Zer71607,in0Con18496])
Up_3257 = keras.layers.UpSampling1D(size=(2), name = 'Up_3257', )(in0Up_3257)
Dot672 = keras.layers.Dot(axes=(2, 2), name = 'Dot672', )([Con18496,Up_3257])
Fla60801 = keras.layers.Flatten(name = 'Fla60801', )(Dot672)
Max89995 = keras.layers.Maximum(name = 'Max89995', )([Con47837,Fla60801])
model = tf.keras.models.Model(inputs=[in0Mul52421,in1Mul52421,in0Con47837,in0Fla15573,in0Con18496,in0Up_3257], outputs=Max89995)
in0Mul52421 = tf.constant([[[[0.7045, 0.6535], [0.9202, 0.1522]], [[0.0221, 0.3401], [0.3506, 0.1842]]]])
in1Mul52421 = tf.constant([[[[0.0061, 0.8289], [0.3029, 0.287]], [[0.2184, 0.2951], [0.1872, 0.2824]]]])
in0Con47837 = tf.constant([[0.2739, 0.8669, 0.8041, 0.2479]])
in0Fla15573 = tf.constant([[1.0309]])
in0Con18496 = tf.constant([[[0.3169, 0.5499, 0.8629], [0.256, 0.1696, 0.9968], [0.0796, 0.3755, 0.5497], [0.6246, 0.6833, 0.5117], [0.8904, 0.3449, 0.686], [0.8554, 0.3386, 0.2167]]])
in0Up_3257 = tf.constant([[[1.2357, 1.1537, 1.6222, 1.745]]])
print (np.array2string(model.predict([in0Mul52421,in1Mul52421,in0Con47837,in0Fla15573,in0Con18496,in0Up_3257],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Max89995.png')

LMul52421 = multiply_layer([[[[[0.7045, 0.6535], [0.9202, 0.1522]], [[0.0221, 0.3401], [0.3506, 0.1842]]]], [[[[0.0061, 0.8289], [0.3029, 0.287]], [[0.2184, 0.2951], [0.1872, 0.2824]]]]], Mul52421), 
LRes49328 = reshape_layer(Mul52421, [2, 4], Res49328), 
LFla51189 = flatten_layer(Res49328, Fla51189), 
LCon47837 = concatenate_layer([Fla51189,[[0.2739, 0.8669, 0.8041, 0.2479]]], 1, Con47837), 
LFla15573 = flatten_layer([[1.0309]], Fla15573), 
LRes38705 = reshape_layer(Fla15573, [1, 1], Res38705), 
LZer81376 = zero_padding1D_layer(Res38705, 3, 0, Zer81376), 
LZer71607 = zero_padding1D_layer(Zer81376, 2, 0, Zer71607), 
LCon18496 = concatenate_layer([Zer71607,[[[0.3169, 0.5499, 0.8629], [0.256, 0.1696, 0.9968], [0.0796, 0.3755, 0.5497], [0.6246, 0.6833, 0.5117], [0.8904, 0.3449, 0.686], [0.8554, 0.3386, 0.2167]]]], 2, Con18496), 
LUp_3257 = up_sampling1D_layer([[[1.2357, 1.1537, 1.6222, 1.745]]], 2, Up_3257), 
LDot672 = dot_layer(Con18496,Up_3257, 2, 2, Dot672), 
LFla60801 = flatten_layer(Dot672, Fla60801), 
LMax89995 = maximum_layer([Con47837,Fla60801], Max89995), 
exec_layers([LMul52421,LRes49328,LFla51189,LCon47837,LFla15573,LRes38705,LZer81376,LZer71607,LCon18496,LUp_3257,LDot672,LFla60801,LMax89995],["Mul52421","Res49328","Fla51189","Con47837","Fla15573","Res38705","Zer81376","Zer71607","Con18496","Up_3257","Dot672","Fla60801","Max89995"],Max89995,"Max89995")

Actual (Unparsed): [[2.7634159, 2.7634159, 2.3098883, 2.3098883, 1.6601972, 1.6601972, 2.7219668, 2.7219668, 2.7838213, 2.7838213, 3.1881766, 3.1881766]]

Expected (Unparsed): [[2.76341581,2.76341581,2.3098883199999998,2.3098883199999998,1.66019712,1.66019712,2.7219667800000003,2.7219667800000003,2.78382126,2.78382126,3.18817653,3.18817653]]

Actual:   [[2.7635, 2.7635, 2.3099, 2.3099, 1.6602, 1.6602, 2.722, 2.722, 2.7839, 2.7839, 3.1882, 3.1882]]

Expected: [[2.7635, 2.7635, 2.3099, 2.3099, 1.6602, 1.6602, 2.722, 2.722, 2.7839, 2.7839, 3.1882, 3.1882]]