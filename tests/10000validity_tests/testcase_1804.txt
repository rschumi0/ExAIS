import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Mul14748 = tf.keras.layers.Input(shape=([1, 1, 2, 1]))
in1Mul14748 = tf.keras.layers.Input(shape=([1, 1, 2, 1]))

Mul14748 = keras.layers.Multiply(name = 'Mul14748', )([in0Mul14748,in1Mul14748])
Res5899 = keras.layers.Reshape((1, 1, 2), name = 'Res5899', )(Mul14748)
Res14301 = keras.layers.Reshape((1, 2), name = 'Res14301', )(Res5899)
GRU58279 = keras.layers.GRU(2,reset_after=True, recurrent_activation='sigmoid', name = 'GRU58279', )(Res14301)
model = tf.keras.models.Model(inputs=[in0Mul14748,in1Mul14748], outputs=GRU58279)
w = model.get_layer('GRU58279').get_weights() 
w[0] = np.array([[4, 7, 2, 8, 4, 1], [3, 2, 8, 10, 2, 1]])
w[1] = np.array([[3, 8, 9, 1, 2, 1], [6, 5, 7, 6, 1, 1]])
w[2] = np.array([[10, 5, 1, 3, 5, 9], [1, 9, 4, 7, 10, 5]])
model.get_layer('GRU58279').set_weights(w) 
in0Mul14748 = tf.constant([[[[[0.3668], [0.6507]]]]])
in1Mul14748 = tf.constant([[[[[0.3777], [0.7886]]]]])
print (np.array2string(model.predict([in0Mul14748,in1Mul14748],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='GRU58279.png')

LMul14748 = multiply_layer([[[[[[0.3668], [0.6507]]]]], [[[[[0.3777], [0.7886]]]]]], Mul14748), 
LRes5899 = reshape_layer(Mul14748, [1, 1, 2], Res5899), 
LRes14301 = reshape_layer(Res5899, [1, 2], Res14301), 
LGRU58279 = gru_layer(Res14301,[[4, 7, 2, 8, 4, 1], [3, 2, 8, 10, 2, 1]],[[3, 8, 9, 1, 2, 1], [6, 5, 7, 6, 1, 1]],[[10, 5, 1, 3, 5, 9], [1, 9, 4, 7, 10, 5]], true, GRU58279), 
exec_layers([LMul14748,LRes5899,LRes14301,LGRU58279],["Mul14748","Res5899","Res14301","GRU58279"],GRU58279,"GRU58279")

Actual (Unparsed): [[0.0000021, 0.0000001]]

Expected (Unparsed): [[2.058383569036854e-6,1.1297868407474019e-7]]

Actual:   [[0, 0]]

Expected: [[0, 0]]