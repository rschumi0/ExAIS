import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Dep17964 = tf.keras.layers.Input(shape=([2, 2, 2]))
in0Con39663 = tf.keras.layers.Input(shape=([2]))
in0Mas68865 = tf.keras.layers.Input(shape=([4]))
in0Con8374 = tf.keras.layers.Input(shape=([4, 5, 5, 1]))
in0Max97722 = tf.keras.layers.Input(shape=([1, 2, 1, 2]))
in1Max97722 = tf.keras.layers.Input(shape=([1, 2, 1, 2]))
in0Con95899 = tf.keras.layers.Input(shape=([3, 3, 3, 1]))
in0Sub62899 = tf.keras.layers.Input(shape=([3, 3, 3, 2]))
in1Sub62899 = tf.keras.layers.Input(shape=([3, 3, 3, 2]))

Dep17964 = keras.layers.DepthwiseConv2D((1, 2),strides=(2, 2), padding='same', name = 'Dep17964', )(in0Dep17964)
Cro84972 = keras.layers.Cropping2D(cropping=((0, 0), (0, 0)), name = 'Cro84972', )(Dep17964)
Mas4480 = keras.layers.Masking(mask_value=1, name = 'Mas4480', )(Cro84972)
Res79602 = keras.layers.Reshape((1, 2), name = 'Res79602', )(Mas4480)
Fla77456 = keras.layers.Flatten(name = 'Fla77456', )(Res79602)
Con39663 = keras.layers.Concatenate(axis=1, name = 'Con39663', )([Fla77456,in0Con39663])
Mas68865 = keras.layers.Masking(mask_value=1, name = 'Mas68865', )(in0Mas68865)
Max27273 = keras.layers.Maximum(name = 'Max27273', )([Con39663,Mas68865])
Res34851 = keras.layers.Reshape((4, 1), name = 'Res34851', )(Max27273)
Res70404 = keras.layers.Reshape((4, 1, 1), name = 'Res70404', )(Res34851)
Res90005 = keras.layers.Reshape((4, 1, 1, 1), name = 'Res90005', )(Res70404)
Zer79053 = keras.layers.ZeroPadding3D(padding=((0, 0), (4, 0), (4, 0)), name = 'Zer79053', )(Res90005)
Con8374 = keras.layers.Concatenate(axis=4, name = 'Con8374', )([Zer79053,in0Con8374])
Max97722 = keras.layers.Maximum(name = 'Max97722', )([in0Max97722,in1Max97722])
Con97095 = keras.layers.Conv3D(3, (1, 1, 1),strides=(1, 1, 1), padding='same', dilation_rate=(1, 1, 1), name = 'Con97095', )(Max97722)
Res49128 = keras.layers.Reshape((1, 2, 3), name = 'Res49128', )(Con97095)
Res52091 = keras.layers.Reshape((1, 6), name = 'Res52091', )(Res49128)
Cro40013 = keras.layers.Cropping1D(cropping=((0, 0)), name = 'Cro40013', )(Res52091)
LST1416 = keras.layers.LSTM(3,recurrent_activation='sigmoid', name = 'LST1416', )(Cro40013)
Res46957 = keras.layers.Reshape((3, 1), name = 'Res46957', )(LST1416)
Res75375 = keras.layers.Reshape((3, 1, 1), name = 'Res75375', )(Res46957)
Res23903 = keras.layers.Reshape((3, 1, 1, 1), name = 'Res23903', )(Res75375)
Zer8824 = keras.layers.ZeroPadding3D(padding=((0, 0), (2, 0), (2, 0)), name = 'Zer8824', )(Res23903)
Con95899 = keras.layers.Concatenate(axis=4, name = 'Con95899', )([Zer8824,in0Con95899])
Sub62899 = keras.layers.Subtract(name = 'Sub62899', )([in0Sub62899,in1Sub62899])
Max79638 = keras.layers.Maximum(name = 'Max79638', )([Con95899,Sub62899])
Zer95034 = keras.layers.ZeroPadding3D(padding=((1, 0), (2, 0), (2, 0)), name = 'Zer95034', )(Max79638)
Ave23823 = keras.layers.Average(name = 'Ave23823', )([Con8374,Zer95034])
model = tf.keras.models.Model(inputs=[in0Dep17964,in0Con39663,in0Mas68865,in0Con8374,in0Max97722,in1Max97722,in0Con95899,in0Sub62899,in1Sub62899], outputs=Ave23823)
w = model.get_layer('Dep17964').get_weights() 
w[0] = np.array([[[[0.7511], [0.9577]], [[0.0225], [0.1279]]]])
w[1] = np.array([0, 0])
model.get_layer('Dep17964').set_weights(w) 
w = model.get_layer('Con97095').get_weights() 
w[0] = np.array([[[[[0.3483, 0.1552, 0.3821], [0.5684, 0.4019, 0.6171]]]]])
w[1] = np.array([0, 0, 0])
model.get_layer('Con97095').set_weights(w) 
w = model.get_layer('LST1416').get_weights() 
w[0] = np.array([[2, 2, 2, 5, 3, 3, 5, 7, 9, 2, 8, 3], [9, 4, 10, 10, 5, 1, 3, 8, 5, 6, 7, 3], [6, 5, 1, 8, 1, 3, 3, 4, 5, 5, 3, 2], [7, 2, 1, 3, 10, 9, 6, 3, 4, 8, 5, 4], [10, 8, 3, 10, 8, 3, 6, 2, 3, 1, 3, 10], [5, 9, 1, 5, 10, 3, 2, 1, 10, 6, 6, 5]])
w[1] = np.array([[4, 10, 1, 7, 9, 3, 6, 4, 5, 6, 2, 9], [8, 6, 2, 7, 4, 2, 8, 10, 1, 4, 9, 4], [3, 10, 9, 5, 5, 3, 2, 5, 3, 1, 4, 8]])
w[2] = np.array([5, 9, 1, 10, 1, 1, 7, 10, 4, 5, 1, 10])
model.get_layer('LST1416').set_weights(w) 
in0Dep17964 = tf.constant([[[[0.5646, 0.7793], [0.6037, 0.658]], [[0.3622, 0.1991], [0.9961, 0.1333]]]])
in0Con39663 = tf.constant([[0.9284, 0.6761]])
in0Mas68865 = tf.constant([[1.228, 1.9479, 1.094, 1.9559]])
in0Con8374 = tf.constant([[[[[0.0686], [0.2915], [0.7668], [0.5242], [0.4015]], [[0.7014], [0.6457], [0.9204], [0.5803], [0.6333]], [[0.1651], [0.4847], [0.9187], [0.1281], [0.0315]], [[0.7804], [0.953], [0.8431], [0.98], [0.9961]], [[0.2343], [0.1763], [0.3702], [0.8707], [0.3886]]], [[[0.141], [0.5456], [0.846], [0.8041], [0.1536]], [[0.8679], [0.7475], [0.1019], [0.1747], [0.6483]], [[0.7055], [0.6274], [0.4494], [0.2963], [0.4759]], [[0.5585], [0.4276], [0.879], [0.799], [0.867]], [[0.3157], [0.9445], [0.9416], [0.2978], [0.1085]]], [[[0.8977], [0.1089], [0.7265], [0.8816], [0.4402]], [[0.9829], [0.7495], [0.588], [0.5845], [0.2476]], [[0.1213], [0.5914], [0.536], [0.5956], [0.7046]], [[0.6996], [0.2991], [0.3725], [0.9274], [0.5095]], [[0.2097], [0.7167], [0.3508], [0.4703], [0.7206]]], [[[0.7754], [0.8436], [0.1815], [0.6752], [0.3387]], [[0.0329], [0.0985], [0.9921], [0.0237], [0.1525]], [[0.9947], [0.1533], [0.9601], [0.148], [0.244]], [[0.1411], [0.7833], [0.9143], [0.2279], [0.4978]], [[0.6247], [0.8352], [0.9486], [0.9993], [0.7009]]]]])
in0Max97722 = tf.constant([[[[[0.0491, 0.5704]], [[0.4978, 0.162]]]]])
in1Max97722 = tf.constant([[[[[0.2555, 0.0981]], [[0.4177, 0.2476]]]]])
in0Con95899 = tf.constant([[[[[0.7176], [0.6599], [0.9998]], [[0.6052], [0.9544], [0.896]], [[0.2841], [0.6131], [0.4268]]], [[[0.3446], [0.2798], [0.3381]], [[0.3248], [0.2417], [0.0322]], [[0.3352], [0.4243], [0.5224]]], [[[0.6645], [0.2388], [0.9078]], [[0.0763], [0.08], [0.4968]], [[0.9327], [0.7784], [0.5983]]]]])
in0Sub62899 = tf.constant([[[[[0.8531, 0.7724], [0.661, 0.8293], [0.7011, 0.5393]], [[0.8615, 0.4417], [0.3736, 0.5846], [0.8892, 0.3865]], [[0.5208, 0.6682], [0.8383, 0.5528], [0.2448, 0.7795]]], [[[0.9849, 0.906], [0.6416, 0.686], [0.6306, 0.9099]], [[0.3215, 0.2743], [0.8035, 0.4882], [0.4222, 0.1944]], [[0.3759, 0.2602], [0.3513, 0.2096], [0.275, 0.6916]]], [[[0.2566, 0.8272], [0.1121, 0.4882], [0.0118, 0.238]], [[0.7386, 0.0344], [0.3261, 0.3304], [0.9472, 0.9237]], [[0.4404, 0.5593], [0.7786, 0.6653], [0.7532, 0.749]]]]])
in1Sub62899 = tf.constant([[[[[0.6728, 0.4621], [0.6385, 0.4874], [0.0045, 0.5504]], [[0.6615, 0.6317], [0.3837, 0.9682], [0.3755, 0.5829]], [[0.4666, 0.7752], [0.8949, 0.4139], [0.9246, 0.6874]]], [[[0.4743, 0.6378], [0.6484, 0.8077], [0.4011, 0.3876]], [[0.226, 0.6358], [0.6058, 0.0472], [0.2267, 0.822]], [[0.5319, 0.9202], [0.8487, 0.1936], [0.9714, 0.352]]], [[[0.0414, 0.4285], [0.7654, 0.8315], [0.3025, 0.3723]], [[0.5032, 0.9901], [0.9668, 0.4095], [0.6035, 0.0889]], [[0.9543, 0.4799], [0.46, 0.5384], [0.6241, 0.3073]]]]])
print (np.array2string(model.predict([in0Dep17964,in0Con39663,in0Mas68865,in0Con8374,in0Max97722,in1Max97722,in0Con95899,in0Sub62899,in1Sub62899],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Ave23823.png')

LDep17964 = depthwise_conv2D_layer([[[[0.5646, 0.7793], [0.6037, 0.658]], [[0.3622, 0.1991], [0.9961, 0.1333]]]], 1, 2,[[[[0.7511], [0.9577]], [[0.0225], [0.1279]]]],[0, 0], 2, 2, true, Dep17964), 
LCro84972 = cropping2D_layer(Dep17964, 0, 0, 0, 0, Cro84972), 
LMas4480 = masking_layer(Cro84972, 1, Mas4480), 
LRes79602 = reshape_layer(Mas4480, [1, 2], Res79602), 
LFla77456 = flatten_layer(Res79602, Fla77456), 
LCon39663 = concatenate_layer([Fla77456,[[0.9284, 0.6761]]], 1, Con39663), 
LMas68865 = masking_layer([[1.228, 1.9479, 1.094, 1.9559]], 1, Mas68865), 
LMax27273 = maximum_layer([Con39663,Mas68865], Max27273), 
LRes34851 = reshape_layer(Max27273, [4, 1], Res34851), 
LRes70404 = reshape_layer(Res34851, [4, 1, 1], Res70404), 
LRes90005 = reshape_layer(Res70404, [4, 1, 1, 1], Res90005), 
LZer79053 = zero_padding3D_layer(Res90005, 0, 0, 4, 0, 4, 0, Zer79053), 
LCon8374 = concatenate_layer([Zer79053,[[[[[0.0686], [0.2915], [0.7668], [0.5242], [0.4015]], [[0.7014], [0.6457], [0.9204], [0.5803], [0.6333]], [[0.1651], [0.4847], [0.9187], [0.1281], [0.0315]], [[0.7804], [0.953], [0.8431], [0.98], [0.9961]], [[0.2343], [0.1763], [0.3702], [0.8707], [0.3886]]], [[[0.141], [0.5456], [0.846], [0.8041], [0.1536]], [[0.8679], [0.7475], [0.1019], [0.1747], [0.6483]], [[0.7055], [0.6274], [0.4494], [0.2963], [0.4759]], [[0.5585], [0.4276], [0.879], [0.799], [0.867]], [[0.3157], [0.9445], [0.9416], [0.2978], [0.1085]]], [[[0.8977], [0.1089], [0.7265], [0.8816], [0.4402]], [[0.9829], [0.7495], [0.588], [0.5845], [0.2476]], [[0.1213], [0.5914], [0.536], [0.5956], [0.7046]], [[0.6996], [0.2991], [0.3725], [0.9274], [0.5095]], [[0.2097], [0.7167], [0.3508], [0.4703], [0.7206]]], [[[0.7754], [0.8436], [0.1815], [0.6752], [0.3387]], [[0.0329], [0.0985], [0.9921], [0.0237], [0.1525]], [[0.9947], [0.1533], [0.9601], [0.148], [0.244]], [[0.1411], [0.7833], [0.9143], [0.2279], [0.4978]], [[0.6247], [0.8352], [0.9486], [0.9993], [0.7009]]]]]], 4, Con8374), 
LMax97722 = maximum_layer([[[[[[0.0491, 0.5704]], [[0.4978, 0.162]]]]], [[[[[0.2555, 0.0981]], [[0.4177, 0.2476]]]]]], Max97722), 
LCon97095 = conv3D_layer(Max97722, 1, 1, 1,[[[[[0.3483, 0.1552, 0.3821], [0.5684, 0.4019, 0.6171]]]]],[0, 0, 0], 1, 1, 1, true, 1, 1, 1, Con97095), 
LRes49128 = reshape_layer(Con97095, [1, 2, 3], Res49128), 
LRes52091 = reshape_layer(Res49128, [1, 6], Res52091), 
LCro40013 = cropping1D_layer(Res52091, 0, 0, Cro40013), 
LLST1416 = lstm_layer(Cro40013,[[2, 2, 2, 5, 3, 3, 5, 7, 9, 2, 8, 3], [9, 4, 10, 10, 5, 1, 3, 8, 5, 6, 7, 3], [6, 5, 1, 8, 1, 3, 3, 4, 5, 5, 3, 2], [7, 2, 1, 3, 10, 9, 6, 3, 4, 8, 5, 4], [10, 8, 3, 10, 8, 3, 6, 2, 3, 1, 3, 10], [5, 9, 1, 5, 10, 3, 2, 1, 10, 6, 6, 5]],[[4, 10, 1, 7, 9, 3, 6, 4, 5, 6, 2, 9], [8, 6, 2, 7, 4, 2, 8, 10, 1, 4, 9, 4], [3, 10, 9, 5, 5, 3, 2, 5, 3, 1, 4, 8]],[5, 9, 1, 10, 1, 1, 7, 10, 4, 5, 1, 10], LST1416), 
LRes46957 = reshape_layer(LST1416, [3, 1], Res46957), 
LRes75375 = reshape_layer(Res46957, [3, 1, 1], Res75375), 
LRes23903 = reshape_layer(Res75375, [3, 1, 1, 1], Res23903), 
LZer8824 = zero_padding3D_layer(Res23903, 0, 0, 2, 0, 2, 0, Zer8824), 
LCon95899 = concatenate_layer([Zer8824,[[[[[0.7176], [0.6599], [0.9998]], [[0.6052], [0.9544], [0.896]], [[0.2841], [0.6131], [0.4268]]], [[[0.3446], [0.2798], [0.3381]], [[0.3248], [0.2417], [0.0322]], [[0.3352], [0.4243], [0.5224]]], [[[0.6645], [0.2388], [0.9078]], [[0.0763], [0.08], [0.4968]], [[0.9327], [0.7784], [0.5983]]]]]], 4, Con95899), 
LSub62899 = subtract_layer([[[[[0.8531, 0.7724], [0.661, 0.8293], [0.7011, 0.5393]], [[0.8615, 0.4417], [0.3736, 0.5846], [0.8892, 0.3865]], [[0.5208, 0.6682], [0.8383, 0.5528], [0.2448, 0.7795]]], [[[0.9849, 0.906], [0.6416, 0.686], [0.6306, 0.9099]], [[0.3215, 0.2743], [0.8035, 0.4882], [0.4222, 0.1944]], [[0.3759, 0.2602], [0.3513, 0.2096], [0.275, 0.6916]]], [[[0.2566, 0.8272], [0.1121, 0.4882], [0.0118, 0.238]], [[0.7386, 0.0344], [0.3261, 0.3304], [0.9472, 0.9237]], [[0.4404, 0.5593], [0.7786, 0.6653], [0.7532, 0.749]]]]], [[[[[0.6728, 0.4621], [0.6385, 0.4874], [0.0045, 0.5504]], [[0.6615, 0.6317], [0.3837, 0.9682], [0.3755, 0.5829]], [[0.4666, 0.7752], [0.8949, 0.4139], [0.9246, 0.6874]]], [[[0.4743, 0.6378], [0.6484, 0.8077], [0.4011, 0.3876]], [[0.226, 0.6358], [0.6058, 0.0472], [0.2267, 0.822]], [[0.5319, 0.9202], [0.8487, 0.1936], [0.9714, 0.352]]], [[[0.0414, 0.4285], [0.7654, 0.8315], [0.3025, 0.3723]], [[0.5032, 0.9901], [0.9668, 0.4095], [0.6035, 0.0889]], [[0.9543, 0.4799], [0.46, 0.5384], [0.6241, 0.3073]]]]], Sub62899), 
LMax79638 = maximum_layer([Con95899,Sub62899], Max79638), 
LZer95034 = zero_padding3D_layer(Max79638, 1, 0, 2, 0, 2, 0, Zer95034), 
LAve23823 = average_layer([Con8374,Zer95034], Ave23823), 
exec_layers([LDep17964,LCro84972,LMas4480,LRes79602,LFla77456,LCon39663,LMas68865,LMax27273,LRes34851,LRes70404,LRes90005,LZer79053,LCon8374,LMax97722,LCon97095,LRes49128,LRes52091,LCro40013,LLST1416,LRes46957,LRes75375,LRes23903,LZer8824,LCon95899,LSub62899,LMax79638,LZer95034,LAve23823],["Dep17964","Cro84972","Mas4480","Res79602","Fla77456","Con39663","Mas68865","Max27273","Res34851","Res70404","Res90005","Zer79053","Con8374","Max97722","Con97095","Res49128","Res52091","Cro40013","LST1416","Res46957","Res75375","Res23903","Zer8824","Con95899","Sub62899","Max79638","Zer95034","Ave23823"],Ave23823,"Ave23823")

Actual (Unparsed): [[[[[0.0000000, 0.0343000], [0.0000000, 0.1457500], [0.0000000, 0.3834000], [0.0000000, 0.2621000], [0.0000000, 0.2007500]], [[0.0000000, 0.3507000], [0.0000000, 0.3228500], [0.0000000, 0.4602000], [0.0000000, 0.2901500], [0.0000000, 0.3166500]], [[0.0000000, 0.0825500], [0.0000000, 0.2423500], [0.0000000, 0.4593500], [0.0000000, 0.0640500], [0.0000000, 0.0157500]], [[0.0000000, 0.3902000], [0.0000000, 0.4765000], [0.0000000, 0.4215500], [0.0000000, 0.4900000], [0.0000000, 0.4980500]], [[0.0000000, 0.1171500], [0.0000000, 0.0881500], [0.0000000, 0.1851000], [0.0000000, 0.4353500], [0.6140000, 0.1943000]]], [[[0.0000000, 0.0705000], [0.0000000, 0.2728000], [0.0000000, 0.4230000], [0.0000000, 0.4020500], [0.0000000, 0.0768000]], [[0.0000000, 0.4339500], [0.0000000, 0.3737500], [0.0000000, 0.0509500], [0.0000000, 0.0873500], [0.0000000, 0.3241500]], [[0.0000000, 0.3527500], [0.0000000, 0.3137000], [0.0901500, 0.5835000], [0.0112500, 0.4781000], [0.3483000, 0.7378500]], [[0.0000000, 0.2792500], [0.0000000, 0.2138000], [0.1000000, 0.7421000], [0.0000000, 0.8767000], [0.2568500, 0.8815000]], [[0.0000000, 0.1578500], [0.0000000, 0.4722500], [0.0271000, 0.6128500], [0.0000000, 0.4554500], [1.3547469, 0.2676500]]], [[[0.0000000, 0.4488500], [0.0000000, 0.0544500], [0.0000000, 0.3632500], [0.0000000, 0.4408000], [0.0000000, 0.2201000]], [[0.0000000, 0.4914500], [0.0000000, 0.3747500], [0.0000000, 0.2940000], [0.0000000, 0.2922500], [0.0000000, 0.1238000]], [[0.0000000, 0.0606500], [0.0000000, 0.2957000], [0.2553000, 0.4403000], [0.0000000, 0.4377000], [0.1147500, 0.6134500]], [[0.0000000, 0.3498000], [0.0000000, 0.1495500], [0.0477500, 0.3486500], [0.0988500, 0.6842000], [0.0977500, 0.2708500]], [[0.0000000, 0.1048500], [0.0000000, 0.3583500], [0.0000000, 0.3430000], [0.0000000, 0.4473000], [0.9277939, 0.6215000]]], [[[0.0000000, 0.3877000], [0.0000000, 0.4218000], [0.0000000, 0.0907500], [0.0000000, 0.3376000], [0.0000000, 0.1693500]], [[0.0000000, 0.0164500], [0.0000000, 0.0492500], [0.0000000, 0.4960500], [0.0000000, 0.0118500], [0.0000000, 0.0762500]], [[0.0000000, 0.4973500], [0.0000000, 0.0766500], [0.1076000, 0.8123000], [0.0000000, 0.1934000], [0.0000000, 0.5759000]], [[0.0000000, 0.0705500], [0.0000000, 0.3916500], [0.1177000, 0.4953000], [0.0000000, 0.1539500], [0.1718500, 0.6663000]], [[0.0000000, 0.3123500], [0.0000000, 0.4176000], [0.0000000, 0.9406500], [0.1593000, 0.8888500], [1.3583004, 0.6496000]]]]]

Expected (Unparsed): [[[[[0,0.0343],[0,0.14575],[0,0.3834],[0,0.2621],[0,0.20075]],[[0,0.3507],[0,0.32285],[0,0.4602],[0,0.29015],[0,0.31665]],[[0,0.08255],[0,0.24235],[0,0.45935],[0,0.06405],[0,0.01575]],[[0,0.3902],[0,0.4765],[0,0.42155],[0,0.49],[0,0.49805]],[[0,0.11715],[0,0.08815],[0,0.1851],[0,0.43535],[0.614,0.1943]]],[[[0,0.0705],[0,0.2728],[0,0.423],[0,0.40205],[0,0.0768]],[[0,0.43395],[0,0.37375],[0,0.05095],[0,0.08735],[0,0.32415]],[[0,0.35275],[0,0.3137],[0.09015000000000001,0.5835],[0.011250000000000038,0.4781],[0.3483,0.73785]],[[0,0.27925],[0,0.2138],[0.10000000000000003,0.7421],[0,0.8767],[0.25685,0.8815]],[[0,0.15785],[0,0.47225],[0.027100000000000013,0.61285],[0,0.45545],[1.3547468605183772,0.26765]]],[[[0,0.44885],[0,0.05445],[0,0.36325],[0,0.4408],[0,0.2201]],[[0,0.49145],[0,0.37475],[0,0.294],[0,0.29225],[0,0.1238]],[[0,0.06065],[0,0.2957],[0.25529999999999997,0.4403],[0,0.4377],[0.11475000000000002,0.61345]],[[0,0.3498],[0,0.14955],[0.04775,0.34865],[0.09885,0.6842],[0.09775,0.27085]],[[0,0.10485],[0,0.35835],[0,0.34299999999999997],[0,0.44730000000000003],[0.9277939037640612,0.6214999999999999]]],[[[0,0.3877],[0,0.4218],[0,0.09075],[0,0.3376],[0,0.16935]],[[0,0.01645],[0,0.04925],[0,0.49605],[0,0.01185],[0,0.07625]],[[0,0.49735],[0,0.07665],[0.1076,0.8123],[0,0.19340000000000002],[0,0.5759000000000001]],[[0,0.07055],[0,0.39165],[0.11770000000000003,0.4953],[0,0.15395],[0.17185,0.6663]],[[0,0.31235],[0,0.4176],[0,0.94065],[0.15929999999999997,0.8888499999999999],[1.3583003835356036,0.6496]]]]]

Actual:   [[[[[0, 0.0343], [0, 0.1458], [0, 0.3834], [0, 0.2621], [0, 0.2008]], [[0, 0.3507], [0, 0.3229], [0, 0.4602], [0, 0.2902], [0, 0.3167]], [[0, 0.0826], [0, 0.2424], [0, 0.4594], [0, 0.0641], [0, 0.0158]], [[0, 0.3902], [0, 0.4765], [0, 0.4216], [0, 0.49], [0, 0.4981]], [[0, 0.1172], [0, 0.0882], [0, 0.1851], [0, 0.4354], [0.614, 0.1943]]], [[[0, 0.0705], [0, 0.2728], [0, 0.423], [0, 0.4021], [0, 0.0768]], [[0, 0.434], [0, 0.3738], [0, 0.051], [0, 0.0874], [0, 0.3242]], [[0, 0.3528], [0, 0.3137], [0.0902, 0.5835], [0.0113, 0.4781], [0.3483, 0.7379]], [[0, 0.2793], [0, 0.2138], [0.1, 0.7421], [0, 0.8767], [0.2569, 0.8815]], [[0, 0.1579], [0, 0.4723], [0.0271, 0.6129], [0, 0.4555], [1.3548, 0.2677]]], [[[0, 0.4489], [0, 0.0545], [0, 0.3633], [0, 0.4408], [0, 0.2201]], [[0, 0.4915], [0, 0.3748], [0, 0.294], [0, 0.2923], [0, 0.1238]], [[0, 0.0607], [0, 0.2957], [0.2553, 0.4403], [0, 0.4377], [0.1148, 0.6135]], [[0, 0.3498], [0, 0.1496], [0.0478, 0.3487], [0.0989, 0.6842], [0.0978, 0.2709]], [[0, 0.1049], [0, 0.3584], [0, 0.343], [0, 0.4473], [0.9278, 0.6215]]], [[[0, 0.3877], [0, 0.4218], [0, 0.0908], [0, 0.3376], [0, 0.1694]], [[0, 0.0165], [0, 0.0493], [0, 0.4961], [0, 0.0119], [0, 0.0763]], [[0, 0.4974], [0, 0.0767], [0.1076, 0.8123], [0, 0.1934], [0, 0.5759]], [[0, 0.0706], [0, 0.3917], [0.1177, 0.4953], [0, 0.154], [0.1719, 0.6663]], [[0, 0.3124], [0, 0.4176], [0, 0.9407], [0.1593, 0.8889], [1.3584, 0.6496]]]]]

Expected: [[[[[0, 0.0343], [0, 0.1458], [0, 0.3834], [0, 0.2621], [0, 0.2008]], [[0, 0.3507], [0, 0.3229], [0, 0.4602], [0, 0.2902], [0, 0.3167]], [[0, 0.0826], [0, 0.2424], [0, 0.4594], [0, 0.0641], [0, 0.0158]], [[0, 0.3902], [0, 0.4765], [0, 0.4216], [0, 0.49], [0, 0.4981]], [[0, 0.1172], [0, 0.0882], [0, 0.1851], [0, 0.4354], [0.614, 0.1943]]], [[[0, 0.0705], [0, 0.2728], [0, 0.423], [0, 0.4021], [0, 0.0768]], [[0, 0.434], [0, 0.3738], [0, 0.051], [0, 0.0874], [0, 0.3242]], [[0, 0.3528], [0, 0.3137], [0.0902, 0.5835], [0.0113, 0.4781], [0.3483, 0.7379]], [[0, 0.2793], [0, 0.2138], [0.1001, 0.7421], [0, 0.8767], [0.2569, 0.8815]], [[0, 0.1579], [0, 0.4723], [0.0272, 0.6129], [0, 0.4555], [1.3548, 0.2677]]], [[[0, 0.4489], [0, 0.0545], [0, 0.3633], [0, 0.4408], [0, 0.2201]], [[0, 0.4915], [0, 0.3748], [0, 0.294], [0, 0.2923], [0, 0.1238]], [[0, 0.0607], [0, 0.2957], [0.2553, 0.4403], [0, 0.4377], [0.1148, 0.6135]], [[0, 0.3498], [0, 0.1496], [0.0478, 0.3487], [0.0989, 0.6842], [0.0978, 0.2709]], [[0, 0.1049], [0, 0.3584], [0, 0.343], [0, 0.4474], [0.9278, 0.6215]]], [[[0, 0.3877], [0, 0.4218], [0, 0.0908], [0, 0.3376], [0, 0.1694]], [[0, 0.0165], [0, 0.0493], [0, 0.4961], [0, 0.0119], [0, 0.0763]], [[0, 0.4974], [0, 0.0767], [0.1076, 0.8123], [0, 0.1935], [0, 0.576]], [[0, 0.0706], [0, 0.3917], [0.1178, 0.4953], [0, 0.154], [0.1719, 0.6663]], [[0, 0.3124], [0, 0.4176], [0, 0.9407], [0.1593, 0.8889], [1.3584, 0.6496]]]]]