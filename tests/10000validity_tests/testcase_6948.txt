import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Max1440 = tf.keras.layers.Input(shape=([2, 1]))
in1Max1440 = tf.keras.layers.Input(shape=([2, 1]))
in0Min47979 = tf.keras.layers.Input(shape=([1, 2, 1, 1]))
in1Min47979 = tf.keras.layers.Input(shape=([1, 2, 1, 1]))
in0Con25932 = tf.keras.layers.Input(shape=([3, 3, 2, 1]))
in0Max57081 = tf.keras.layers.Input(shape=([1, 1, 2, 2]))
in1Max57081 = tf.keras.layers.Input(shape=([1, 1, 2, 2]))
in0Sub29941 = tf.keras.layers.Input(shape=([3, 3, 2, 2]))
in1Sub29941 = tf.keras.layers.Input(shape=([3, 3, 2, 2]))

Max1440 = keras.layers.Maximum(name = 'Max1440', )([in0Max1440,in1Max1440])
ELU44547 = keras.layers.ELU(alpha=-5.4896192823112315, name = 'ELU44547', )(Max1440)
Res357 = keras.layers.Reshape((2, 1, 1), name = 'Res357', )(ELU44547)
Res63470 = keras.layers.Reshape((2, 1, 1, 1), name = 'Res63470', )(Res357)
Zer28311 = keras.layers.ZeroPadding3D(padding=((0, 0), (2, 0), (0, 0)), name = 'Zer28311', )(Res63470)
Min47979 = keras.layers.Minimum(name = 'Min47979', )([in0Min47979,in1Min47979])
Zer46429 = keras.layers.ZeroPadding3D(padding=((1, 0), (1, 0), (0, 0)), name = 'Zer46429', )(Min47979)
Sub42738 = keras.layers.Subtract(name = 'Sub42738', )([Zer28311,Zer46429])
Zer58511 = keras.layers.ZeroPadding3D(padding=((1, 0), (0, 0), (1, 0)), name = 'Zer58511', )(Sub42738)
Con25932 = keras.layers.Concatenate(axis=4, name = 'Con25932', )([Zer58511,in0Con25932])
Max57081 = keras.layers.Maximum(name = 'Max57081', )([in0Max57081,in1Max57081])
Zer52465 = keras.layers.ZeroPadding3D(padding=((2, 0), (2, 0), (0, 0)), name = 'Zer52465', )(Max57081)
Sub29941 = keras.layers.Subtract(name = 'Sub29941', )([in0Sub29941,in1Sub29941])
Min97412 = keras.layers.Minimum(name = 'Min97412', )([Zer52465,Sub29941])
Mul36105 = keras.layers.Multiply(name = 'Mul36105', )([Con25932,Min97412])
model = tf.keras.models.Model(inputs=[in0Max1440,in1Max1440,in0Min47979,in1Min47979,in0Con25932,in0Max57081,in1Max57081,in0Sub29941,in1Sub29941], outputs=Mul36105)
in0Max1440 = tf.constant([[[0.635], [0.3859]]])
in1Max1440 = tf.constant([[[0.8887], [0.8224]]])
in0Min47979 = tf.constant([[[[[0.9474]], [[0.9313]]]]])
in1Min47979 = tf.constant([[[[[0.3125]], [[0.776]]]]])
in0Con25932 = tf.constant([[[[[0.293], [0.6036]], [[0.489], [0.4109]], [[0.1755], [0.3585]]], [[[0.8262], [0.5327]], [[0.2767], [0.2999]], [[0.0564], [0.2015]]], [[[0.7013], [0.1021]], [[0.3207], [0.6366]], [[0.8907], [0.1057]]]]])
in0Max57081 = tf.constant([[[[[0.1529, 0.531], [0.2045, 0.3673]]]]])
in1Max57081 = tf.constant([[[[[0.6239, 0.2591], [0.8016, 0.7653]]]]])
in0Sub29941 = tf.constant([[[[[0.1299, 0.7311], [0.248, 0.7638]], [[0.1713, 0.5918], [0.6002, 0.2871]], [[0.3212, 0.3074], [0.0035, 0.3293]]], [[[0.5007, 0.5266], [0.4332, 0.9057]], [[0.9002, 0.3182], [0.5085, 0.0918]], [[0.9522, 0.7943], [0.4071, 0.3821]]], [[[0.3573, 0.9845], [0.8347, 0.4053]], [[0.6729, 0.3364], [0.3394, 0.5019]], [[0.384, 0.8924], [0.9959, 0.7923]]]]])
in1Sub29941 = tf.constant([[[[[0.6921, 0.0109], [0.6341, 0.1385]], [[0.4823, 0.4886], [0.3355, 0.8425]], [[0.0602, 0.0712], [0.8805, 0.0086]]], [[[0.2842, 0.6411], [0.1931, 0.2514]], [[0.6609, 0.8131], [0.6007, 0.8269]], [[0.8237, 0.2835], [0.9019, 0.3305]]], [[[0.5631, 0.0337], [0.8216, 0.817]], [[0.2464, 0.4127], [0.4168, 0.5709]], [[0.0237, 0.1975], [0.3976, 0.7858]]]]])
print (np.array2string(model.predict([in0Max1440,in1Max1440,in0Min47979,in1Min47979,in0Con25932,in0Max57081,in1Max57081,in0Sub29941,in1Sub29941],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Mul36105.png')

LMax1440 = maximum_layer([[[[0.635], [0.3859]]], [[[0.8887], [0.8224]]]], Max1440), 
LELU44547 = elu_layer(Max1440, -5.4896192823112315, ELU44547), 
LRes357 = reshape_layer(ELU44547, [2, 1, 1], Res357), 
LRes63470 = reshape_layer(Res357, [2, 1, 1, 1], Res63470), 
LZer28311 = zero_padding3D_layer(Res63470, 0, 0, 2, 0, 0, 0, Zer28311), 
LMin47979 = minimum_layer([[[[[[0.9474]], [[0.9313]]]]], [[[[[0.3125]], [[0.776]]]]]], Min47979), 
LZer46429 = zero_padding3D_layer(Min47979, 1, 0, 1, 0, 0, 0, Zer46429), 
LSub42738 = subtract_layer(Zer28311,Zer46429, Sub42738), 
LZer58511 = zero_padding3D_layer(Sub42738, 1, 0, 0, 0, 1, 0, Zer58511), 
LCon25932 = concatenate_layer([Zer58511,[[[[[0.293], [0.6036]], [[0.489], [0.4109]], [[0.1755], [0.3585]]], [[[0.8262], [0.5327]], [[0.2767], [0.2999]], [[0.0564], [0.2015]]], [[[0.7013], [0.1021]], [[0.3207], [0.6366]], [[0.8907], [0.1057]]]]]], 4, Con25932), 
LMax57081 = maximum_layer([[[[[[0.1529, 0.531], [0.2045, 0.3673]]]]], [[[[[0.6239, 0.2591], [0.8016, 0.7653]]]]]], Max57081), 
LZer52465 = zero_padding3D_layer(Max57081, 2, 0, 2, 0, 0, 0, Zer52465), 
LSub29941 = subtract_layer([[[[[0.1299, 0.7311], [0.248, 0.7638]], [[0.1713, 0.5918], [0.6002, 0.2871]], [[0.3212, 0.3074], [0.0035, 0.3293]]], [[[0.5007, 0.5266], [0.4332, 0.9057]], [[0.9002, 0.3182], [0.5085, 0.0918]], [[0.9522, 0.7943], [0.4071, 0.3821]]], [[[0.3573, 0.9845], [0.8347, 0.4053]], [[0.6729, 0.3364], [0.3394, 0.5019]], [[0.384, 0.8924], [0.9959, 0.7923]]]]], [[[[[0.6921, 0.0109], [0.6341, 0.1385]], [[0.4823, 0.4886], [0.3355, 0.8425]], [[0.0602, 0.0712], [0.8805, 0.0086]]], [[[0.2842, 0.6411], [0.1931, 0.2514]], [[0.6609, 0.8131], [0.6007, 0.8269]], [[0.8237, 0.2835], [0.9019, 0.3305]]], [[[0.5631, 0.0337], [0.8216, 0.817]], [[0.2464, 0.4127], [0.4168, 0.5709]], [[0.0237, 0.1975], [0.3976, 0.7858]]]]], Sub29941), 
LMin97412 = minimum_layer([Zer52465,Sub29941], Min97412), 
LMul36105 = multiply_layer([Con25932,Min97412], Mul36105), 
exec_layers([LMax1440,LELU44547,LRes357,LRes63470,LZer28311,LMin47979,LZer46429,LSub42738,LZer58511,LCon25932,LMax57081,LZer52465,LSub29941,LMin97412,LMul36105],["Max1440","ELU44547","Res357","Res63470","Zer28311","Min47979","Zer46429","Sub42738","Zer58511","Con25932","Max57081","Zer52465","Sub29941","Min97412","Mul36105"],Mul36105,"Mul36105")

Actual (Unparsed): [[[[[-0.0000000, 0.0000000], [-0.0000000, 0.0000000]], [[-0.0000000, 0.0000000], [0.0000000, -0.2282139]], [[0.0000000, 0.0000000], [-0.0000000, 0.0000000]]], [[[0.0000000, -0.0945999], [0.0000000, 0.0000000]], [[0.0000000, -0.1369388], [-0.0000000, -0.2204565]], [[0.0000000, 0.0000000], [-0.4397288, 0.0000000]]], [[[-0.0000000, 0.0000000], [0.0000000, -0.0420346]], [[0.0000000, -0.0244694], [0.0241875, -0.0439254]], [[0.0000000, 0.4729617], [0.0277611, 0.0006871]]]]]

Expected (Unparsed): [[[[[-0.0,0.0],[-0.0,0.0]],[[-0.0,0.0],[0,-0.22821386]],[[0,0.0],[-0.0,0.0]]],[[[0,-0.09459990000000004],[0,0.0]],[[0,-0.13693883],[-0.0,-0.22045649]],[[0,0.0],[-0.43972876000000005,0.0]]],[[[-0.0,0.0],[0,-0.04203456999999999]],[[0,-0.02446941000000001],[0.024187500000000008,-0.043925399999999976]],[[0.0,0.47296170000000004],[0.02776112,0.0006870499999999947]]]]]

Actual:   [[[[[-0, 0], [-0, 0]], [[-0, 0], [0, -0.2282]], [[0, 0], [-0, 0]]], [[[0, -0.0945], [0, 0]], [[0, -0.1369], [-0, -0.2204]], [[0, 0], [-0.4397, 0]]], [[[-0, 0], [0, -0.042]], [[0, -0.0244], [0.0242, -0.0439]], [[0, 0.473], [0.0278, 0.0007]]]]]

Expected: [[[[[-0, 0], [-0, 0]], [[-0, 0], [0, -0.2282]], [[0, 0], [-0, 0]]], [[[0, -0.0945], [0, 0]], [[0, -0.1369], [-0, -0.2204]], [[0, 0], [-0.4397, 0]]], [[[-0, 0], [0, -0.042]], [[0, -0.0244], [0.0242, -0.0439]], [[0, 0.473], [0.0278, 0.0007]]]]]