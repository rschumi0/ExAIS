import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0ELU87565 = tf.keras.layers.Input(shape=([2, 2]))
in0Up_27600 = tf.keras.layers.Input(shape=([4, 2, 2, 4]))
in0Sep59701 = tf.keras.layers.Input(shape=([1, 2]))
in0Con67735 = tf.keras.layers.Input(shape=([4, 30]))

ELU87565 = keras.layers.ELU(alpha=-8.064344490409184, name = 'ELU87565', input_shape=(2, 2))(in0ELU87565)
Res75339 = keras.layers.Reshape((2, 2, 1), name = 'Res75339', )(ELU87565)
Zer85993 = keras.layers.ZeroPadding2D(padding=((1, 1), (1, 1)), name = 'Zer85993', )(Res75339)
Ave62394 = keras.layers.AveragePooling2D(pool_size=(2, 1), name = 'Ave62394', )(Zer85993)
Res4519 = keras.layers.Reshape((2, 4, 1, 1), name = 'Res4519', )(Ave62394)
Zer24424 = keras.layers.ZeroPadding3D(padding=((2, 0), (28, 0), (0, 0)), name = 'Zer24424', )(Res4519)
Up_27600 = keras.layers.UpSampling3D(size=(1, 1, 2), name = 'Up_27600', )(in0Up_27600)
Res38556 = keras.layers.Reshape((4, 2, 16), name = 'Res38556', )(Up_27600)
Res62982 = keras.layers.Reshape((4, 32), name = 'Res62982', )(Res38556)
Sep59701 = keras.layers.SeparableConv1D(2, (1),strides=(1), padding='valid', name = 'Sep59701', )(in0Sep59701)
Zer23137 = keras.layers.ZeroPadding1D(padding=((3, 0)), name = 'Zer23137', )(Sep59701)
Con67735 = keras.layers.Concatenate(axis=2, name = 'Con67735', )([Zer23137,in0Con67735])
Add98896 = keras.layers.Add(name = 'Add98896', )([Res62982,Con67735])
Res49964 = keras.layers.Reshape((4, 32, 1), name = 'Res49964', )(Add98896)
Res76538 = keras.layers.Reshape((4, 32, 1, 1), name = 'Res76538', )(Res49964)
Up_34108 = keras.layers.UpSampling3D(size=(1, 1, 1), name = 'Up_34108', )(Res76538)
Ave17719 = keras.layers.Average(name = 'Ave17719', )([Zer24424,Up_34108])
model = tf.keras.models.Model(inputs=[in0ELU87565,in0Up_27600,in0Sep59701,in0Con67735], outputs=Ave17719)
w = model.get_layer('Sep59701').get_weights() 
w[0] = np.array([[[0.1], [0.334]]])
w[1] = np.array([[[0.2351, 0.857], [0.0151, 0.307]]])
w[2] = np.array([0, 0])
model.get_layer('Sep59701').set_weights(w) 
in0ELU87565 = tf.constant([[[0.7694, 0.0578], [0.5147, 0.6943]]])
in0Up_27600 = tf.constant([[[[[1.3427, 1.3309, 1.1658, 1.2377], [1.7747, 1.127, 1.6821, 1.3054]], [[1.3584, 1.3926, 1.7316, 1.4834], [1.6496, 1.0015, 1.016, 1.8171]]], [[[1.342, 1.8455, 1.4964, 1.4499], [1.8369, 1.7028, 1.6885, 1.3341]], [[1.1926, 1.9469, 1.927, 1.5288], [1.8188, 1.1312, 1.815, 1.8324]]], [[[1.4966, 1.232, 1.4318, 1.0161], [1.0423, 1.868, 1.2515, 1.721]], [[1.2135, 1.1255, 1.143, 1.162], [1.2573, 1.7144, 1.2678, 1.1398]]], [[[1.8392, 1.0563, 1.168, 1.507], [1.9596, 1.5623, 1.848, 1.1541]], [[1.8631, 1.7974, 1.1907, 1.7876], [1.878, 1.4471, 1.624, 1.2561]]]]])
in0Sep59701 = tf.constant([[[0.5841, 0.0047]]])
in0Con67735 = tf.constant([[[0.8641, 0.5389, 0.9414, 0.3505, 0.8258, 0.9773, 0.8147, 0.14, 0.1116, 0.6187, 0.9611, 0.292, 0.417, 0.5181, 0.9865, 0.6774, 0.361, 0.8399, 0.9701, 0.0035, 0.8582, 0.4945, 0.4297, 0.2701, 0.6388, 0.6358, 0.8013, 0.4055, 0.101, 0.6781], [0.1803, 0.1038, 0.6878, 0.9164, 0.9703, 0.8263, 0.0215, 0.5367, 0.5163, 0.6496, 0.1005, 0.788, 0.7627, 0.1424, 0.9646, 0.3558, 0.4673, 0.7368, 0.3698, 0.5224, 0.528, 0.1216, 0.1774, 0.5319, 0.535, 0.0333, 0.3609, 0.6834, 0.7478, 0.4403], [0.7583, 0.0729, 0.3136, 0.5314, 0.9589, 0.5723, 0.6949, 0.0989, 0.0035, 0.5911, 0.9532, 0.8854, 0.8956, 0.4015, 0.7485, 0.2067, 0.278, 0.3225, 0.6568, 0.7002, 0.009, 0.8576, 0.6831, 0.3606, 0.7898, 0.9604, 0.6521, 0.1174, 0.4405, 0.9621], [0.4964, 0.0884, 0.8982, 0.335, 0.3302, 0.2969, 0.5229, 0.3926, 0.5943, 0.0807, 0.8325, 0.2269, 0.4925, 0.6419, 0.3631, 0.6722, 0.3969, 0.1835, 0.952, 0.8485, 0.8964, 0.8653, 0.3736, 0.8886, 0.6847, 0.3739, 0.9256, 0.7783, 0.542, 0.2433]]])
print (np.array2string(model.predict([in0ELU87565,in0Up_27600,in0Sep59701,in0Con67735],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Ave17719.png')

LELU87565 = elu_layer([[[0.7694, 0.0578], [0.5147, 0.6943]]], -8.064344490409184, ELU87565), 
LRes75339 = reshape_layer(ELU87565, [2, 2, 1], Res75339), 
LZer85993 = zero_padding2D_layer(Res75339, 1, 1, 1, 1, Zer85993), 
LAve62394 = average_pooling2D_layer(Zer85993, 2, 1, Ave62394), 
LRes4519 = reshape_layer(Ave62394, [2, 4, 1, 1], Res4519), 
LZer24424 = zero_padding3D_layer(Res4519, 2, 0, 28, 0, 0, 0, Zer24424), 
LUp_27600 = up_sampling3D_layer([[[[[1.3427, 1.3309, 1.1658, 1.2377], [1.7747, 1.127, 1.6821, 1.3054]], [[1.3584, 1.3926, 1.7316, 1.4834], [1.6496, 1.0015, 1.016, 1.8171]]], [[[1.342, 1.8455, 1.4964, 1.4499], [1.8369, 1.7028, 1.6885, 1.3341]], [[1.1926, 1.9469, 1.927, 1.5288], [1.8188, 1.1312, 1.815, 1.8324]]], [[[1.4966, 1.232, 1.4318, 1.0161], [1.0423, 1.868, 1.2515, 1.721]], [[1.2135, 1.1255, 1.143, 1.162], [1.2573, 1.7144, 1.2678, 1.1398]]], [[[1.8392, 1.0563, 1.168, 1.507], [1.9596, 1.5623, 1.848, 1.1541]], [[1.8631, 1.7974, 1.1907, 1.7876], [1.878, 1.4471, 1.624, 1.2561]]]]], 1, 1, 2, Up_27600), 
LRes38556 = reshape_layer(Up_27600, [4, 2, 16], Res38556), 
LRes62982 = reshape_layer(Res38556, [4, 32], Res62982), 
LSep59701 = separable_conv1D_layer([[[0.5841, 0.0047]]], 1,[[[[0.1], [0.334]]],[[[0.2351, 0.857], [0.0151, 0.307]]]],[0, 0], 1, false, Sep59701), 
LZer23137 = zero_padding1D_layer(Sep59701, 3, 0, Zer23137), 
LCon67735 = concatenate_layer([Zer23137,[[[0.8641, 0.5389, 0.9414, 0.3505, 0.8258, 0.9773, 0.8147, 0.14, 0.1116, 0.6187, 0.9611, 0.292, 0.417, 0.5181, 0.9865, 0.6774, 0.361, 0.8399, 0.9701, 0.0035, 0.8582, 0.4945, 0.4297, 0.2701, 0.6388, 0.6358, 0.8013, 0.4055, 0.101, 0.6781], [0.1803, 0.1038, 0.6878, 0.9164, 0.9703, 0.8263, 0.0215, 0.5367, 0.5163, 0.6496, 0.1005, 0.788, 0.7627, 0.1424, 0.9646, 0.3558, 0.4673, 0.7368, 0.3698, 0.5224, 0.528, 0.1216, 0.1774, 0.5319, 0.535, 0.0333, 0.3609, 0.6834, 0.7478, 0.4403], [0.7583, 0.0729, 0.3136, 0.5314, 0.9589, 0.5723, 0.6949, 0.0989, 0.0035, 0.5911, 0.9532, 0.8854, 0.8956, 0.4015, 0.7485, 0.2067, 0.278, 0.3225, 0.6568, 0.7002, 0.009, 0.8576, 0.6831, 0.3606, 0.7898, 0.9604, 0.6521, 0.1174, 0.4405, 0.9621], [0.4964, 0.0884, 0.8982, 0.335, 0.3302, 0.2969, 0.5229, 0.3926, 0.5943, 0.0807, 0.8325, 0.2269, 0.4925, 0.6419, 0.3631, 0.6722, 0.3969, 0.1835, 0.952, 0.8485, 0.8964, 0.8653, 0.3736, 0.8886, 0.6847, 0.3739, 0.9256, 0.7783, 0.542, 0.2433]]]], 2, Con67735), 
LAdd98896 = add_layer([Res62982,Con67735], Add98896), 
LRes49964 = reshape_layer(Add98896, [4, 32, 1], Res49964), 
LRes76538 = reshape_layer(Res49964, [4, 32, 1, 1], Res76538), 
LUp_34108 = up_sampling3D_layer(Res76538, 1, 1, 1, Up_34108), 
LAve17719 = average_layer([Zer24424,Up_34108], Ave17719), 
exec_layers([LELU87565,LRes75339,LZer85993,LAve62394,LRes4519,LZer24424,LUp_27600,LRes38556,LRes62982,LSep59701,LZer23137,LCon67735,LAdd98896,LRes49964,LRes76538,LUp_34108,LAve17719],["ELU87565","Res75339","Zer85993","Ave62394","Res4519","Zer24424","Up_27600","Res38556","Res62982","Sep59701","Zer23137","Con67735","Add98896","Res49964","Res76538","Up_34108","Ave17719"],Ave17719,"Ave17719")

Actual (Unparsed): [[[[[0.6713500]], [[0.6654500]], [[1.0149500]], [[0.8883000]], [[1.1420500]], [[0.8407000]], [[0.9958000]], [[1.1075000]], [[1.2947000]], [[0.6335000]], [[0.8968500]], [[0.9620500]], [[1.3679000]], [[0.7095000]], [[1.0495500]], [[0.9117500]], [[1.1724500]], [[1.0350000]], [[1.0463000]], [[1.1616500]], [[1.1642500]], [[0.6980500]], [[1.2949000]], [[0.9889500]], [[1.0396500]], [[0.6358000]], [[0.8274000]], [[1.2264500]], [[1.2254500]], [[0.7035000]], [[0.5585000]], [[1.2476000]]], [[[0.6710000]], [[0.9227500]], [[0.8383500]], [[0.7768500]], [[1.0149000]], [[1.3809500]], [[1.2333500]], [[1.1381000]], [[0.9292000]], [[1.1197500]], [[1.1024000]], [[0.9918500]], [[0.9687000]], [[1.2454000]], [[1.2256000]], [[0.7382500]], [[1.0786000]], [[1.1513500]], [[1.1971500]], [[1.1328000]], [[0.7812000]], [[1.2346500]], [[1.2275000]], [[0.8252000]], [[0.9981000]], [[0.8315500]], [[1.1750000]], [[0.9328500]], [[1.0898500]], [[0.9073000]], [[1.2814000]], [[1.1363500]]], [[[0.7483000]], [[0.6160000]], [[1.0950500]], [[0.5445000]], [[0.9051000]], [[0.8817000]], [[1.1953500]], [[0.7942000]], [[0.8686000]], [[0.9834500]], [[0.6275000]], [[1.1560500]], [[0.9977500]], [[1.3767000]], [[1.0735500]], [[1.0612500]], [[0.9810000]], [[0.6661000]], [[0.7105000]], [[0.7422500]], [[0.9351500]], [[0.9128500]], [[0.5760000]], [[1.0098000]], [[0.9702000]], [[1.0375000]], [[1.0288000]], [[1.0501000]], [[0.9547000]], [[1.1082500]], [[0.8686000]], [[1.0509500]]], [[[0.9264780]], [[0.5534197]], [[0.8322000]], [[0.7977000]], [[1.3687000]], [[0.6956500]], [[0.7491000]], [[0.9019500]], [[1.2412500]], [[0.9774500]], [[1.2211500]], [[0.6174000]], [[1.3960500]], [[0.8946000]], [[1.1702500]], [[0.8980000]], [[1.1131000]], [[1.2348000]], [[0.7938000]], [[0.9855500]], [[1.4075500]], [[1.3229500]], [[1.0435500]], [[1.3264500]], [[1.1258000]], [[1.1678500]], [[1.1543500]], [[0.8150000]], [[1.4018000]], [[1.2413750]], [[1.2565750]], [[0.7497000]]]]]

Expected (Unparsed): [[[[[0.67135]],[[0.66545]],[[1.01495]],[[0.8883000000000001]],[[1.14205]],[[0.8407]],[[0.9958]],[[1.1075]],[[1.2947]],[[0.6335]],[[0.8968499999999999]],[[0.96205]],[[1.3679]],[[0.7095]],[[1.04955]],[[0.91175]],[[1.17245]],[[1.0350000000000001]],[[1.0463]],[[1.16165]],[[1.16425]],[[0.6980500000000001]],[[1.2949]],[[0.98895]],[[1.03965]],[[0.6358]],[[0.8274]],[[1.22645]],[[1.22545]],[[0.7035]],[[0.5585]],[[1.2476]]],[[[0.671]],[[0.92275]],[[0.8383499999999999]],[[0.77685]],[[1.0149]],[[1.38095]],[[1.23335]],[[1.1381000000000001]],[[0.9292]],[[1.11975]],[[1.1023999999999998]],[[0.99185]],[[0.9687]],[[1.2454]],[[1.2256]],[[0.7382500000000001]],[[1.0786]],[[1.15135]],[[1.19715]],[[1.1328]],[[0.7812000000000001]],[[1.23465]],[[1.2275]],[[0.8251999999999999]],[[0.9981]],[[0.83155]],[[1.175]],[[0.9328500000000001]],[[1.08985]],[[0.9073]],[[1.2814]],[[1.13635]]],[[[0.7483]],[[0.616]],[[1.09505]],[[0.5445]],[[0.9051]],[[0.8816999999999999]],[[1.19535]],[[0.7942]],[[0.8686]],[[0.98345]],[[0.6275000000000001]],[[1.15605]],[[0.99775]],[[1.3767]],[[1.07355]],[[1.06125]],[[0.9810000000000001]],[[0.6660999999999999]],[[0.7105]],[[0.74225]],[[0.93515]],[[0.9128499999999999]],[[0.576]],[[1.0098]],[[0.9702000000000001]],[[1.0374999999999999]],[[1.0288]],[[1.0501]],[[0.9547000000000001]],[[1.10825]],[[0.8685999999999999]],[[1.0509499999999998]]],[[[0.92647794749]],[[0.5534196493]],[[0.8321999999999999]],[[0.7977]],[[1.3687]],[[0.69565]],[[0.7491]],[[0.9019499999999999]],[[1.24125]],[[0.97745]],[[1.2211500000000002]],[[0.6174]],[[1.39605]],[[0.8946000000000001]],[[1.17025]],[[0.8979999999999999]],[[1.1131]],[[1.2348000000000001]],[[0.7938000000000001]],[[0.98555]],[[1.40755]],[[1.32295]],[[1.04355]],[[1.32645]],[[1.1258]],[[1.16785]],[[1.15435]],[[0.815]],[[1.4018]],[[1.2413750000000001]],[[1.2565750000000002]],[[0.7497]]]]]

Actual:   [[[[[0.6714]], [[0.6655]], [[1.015]], [[0.8883]], [[1.1421]], [[0.8407]], [[0.9958]], [[1.1075]], [[1.2947]], [[0.6335]], [[0.8969]], [[0.9621]], [[1.3679]], [[0.7095]], [[1.0496]], [[0.9118]], [[1.1725]], [[1.035]], [[1.0463]], [[1.1617]], [[1.1643]], [[0.6981]], [[1.2949]], [[0.989]], [[1.0397]], [[0.6358]], [[0.8274]], [[1.2265]], [[1.2255]], [[0.7035]], [[0.5585]], [[1.2476]]], [[[0.671]], [[0.9228]], [[0.8384]], [[0.7769]], [[1.0149]], [[1.381]], [[1.2334]], [[1.1381]], [[0.9292]], [[1.1198]], [[1.1024]], [[0.9919]], [[0.9687]], [[1.2454]], [[1.2256]], [[0.7383]], [[1.0786]], [[1.1514]], [[1.1972]], [[1.1328]], [[0.7812]], [[1.2347]], [[1.2275]], [[0.8252]], [[0.9981]], [[0.8316]], [[1.175]], [[0.9329]], [[1.0899]], [[0.9073]], [[1.2814]], [[1.1364]]], [[[0.7483]], [[0.616]], [[1.0951]], [[0.5445]], [[0.9051]], [[0.8817]], [[1.1954]], [[0.7942]], [[0.8686]], [[0.9835]], [[0.6275]], [[1.1561]], [[0.9978]], [[1.3767]], [[1.0736]], [[1.0613]], [[0.981]], [[0.6661]], [[0.7105]], [[0.7423]], [[0.9352]], [[0.9129]], [[0.576]], [[1.0098]], [[0.9702]], [[1.0375]], [[1.0288]], [[1.0501]], [[0.9547]], [[1.1083]], [[0.8686]], [[1.051]]], [[[0.9265]], [[0.5535]], [[0.8322]], [[0.7977]], [[1.3687]], [[0.6957]], [[0.7491]], [[0.902]], [[1.2413]], [[0.9775]], [[1.2212]], [[0.6174]], [[1.3961]], [[0.8946]], [[1.1703]], [[0.898]], [[1.1131]], [[1.2348]], [[0.7938]], [[0.9856]], [[1.4076]], [[1.323]], [[1.0436]], [[1.3265]], [[1.1258]], [[1.1679]], [[1.1544]], [[0.815]], [[1.4018]], [[1.2414]], [[1.2566]], [[0.7497]]]]]

Expected: [[[[[0.6714]], [[0.6655]], [[1.015]], [[0.8884]], [[1.1421]], [[0.8407]], [[0.9958]], [[1.1075]], [[1.2947]], [[0.6335]], [[0.8969]], [[0.9621]], [[1.3679]], [[0.7095]], [[1.0496]], [[0.9118]], [[1.1725]], [[1.0351]], [[1.0463]], [[1.1617]], [[1.1643]], [[0.6981]], [[1.2949]], [[0.989]], [[1.0397]], [[0.6358]], [[0.8274]], [[1.2265]], [[1.2255]], [[0.7035]], [[0.5585]], [[1.2476]]], [[[0.671]], [[0.9228]], [[0.8384]], [[0.7769]], [[1.0149]], [[1.381]], [[1.2334]], [[1.1382]], [[0.9292]], [[1.1198]], [[1.1024]], [[0.9919]], [[0.9687]], [[1.2454]], [[1.2256]], [[0.7383]], [[1.0786]], [[1.1514]], [[1.1972]], [[1.1328]], [[0.7813]], [[1.2347]], [[1.2275]], [[0.8252]], [[0.9981]], [[0.8316]], [[1.175]], [[0.9329]], [[1.0899]], [[0.9073]], [[1.2814]], [[1.1364]]], [[[0.7483]], [[0.616]], [[1.0951]], [[0.5445]], [[0.9051]], [[0.8817]], [[1.1954]], [[0.7942]], [[0.8686]], [[0.9835]], [[0.6276]], [[1.1561]], [[0.9978]], [[1.3767]], [[1.0736]], [[1.0613]], [[0.9811]], [[0.6661]], [[0.7105]], [[0.7423]], [[0.9352]], [[0.9129]], [[0.576]], [[1.0098]], [[0.9703]], [[1.0375]], [[1.0288]], [[1.0501]], [[0.9548]], [[1.1083]], [[0.8686]], [[1.051]]], [[[0.9265]], [[0.5535]], [[0.8322]], [[0.7977]], [[1.3687]], [[0.6957]], [[0.7491]], [[0.902]], [[1.2413]], [[0.9775]], [[1.2212]], [[0.6174]], [[1.3961]], [[0.8947]], [[1.1703]], [[0.898]], [[1.1131]], [[1.2349]], [[0.7939]], [[0.9856]], [[1.4076]], [[1.323]], [[1.0436]], [[1.3265]], [[1.1258]], [[1.1679]], [[1.1544]], [[0.815]], [[1.4018]], [[1.2414]], [[1.2566]], [[0.7497]]]]]