import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Max1054 = tf.keras.layers.Input(shape=([1, 1, 2]))
in1Max1054 = tf.keras.layers.Input(shape=([1, 1, 2]))
in0Con77612 = tf.keras.layers.Input(shape=([22, 1]))
in0Min24614 = tf.keras.layers.Input(shape=([1, 1, 1, 1]))
in1Min24614 = tf.keras.layers.Input(shape=([1, 1, 1, 1]))
in0Con2568 = tf.keras.layers.Input(shape=([22, 1]))
in0Sub93684 = tf.keras.layers.Input(shape=([2, 3, 2, 2]))
in1Sub93684 = tf.keras.layers.Input(shape=([2, 3, 2, 2]))
in0Con26591 = tf.keras.layers.Input(shape=([2, 10]))
in0Per79678 = tf.keras.layers.Input(shape=([2, 2]))

Max1054 = keras.layers.Maximum(name = 'Max1054', )([in0Max1054,in1Max1054])
Res98993 = keras.layers.Reshape((1, 2), name = 'Res98993', )(Max1054)
Glo58545 = keras.layers.GlobalAveragePooling1D(name = 'Glo58545', )(Res98993)
Res19752 = keras.layers.Reshape((2, 1), name = 'Res19752', )(Glo58545)
Zer37622 = keras.layers.ZeroPadding1D(padding=((20, 0)), name = 'Zer37622', )(Res19752)
Con77612 = keras.layers.Concatenate(axis=2, name = 'Con77612', )([Zer37622,in0Con77612])
Min24614 = keras.layers.Minimum(name = 'Min24614', )([in0Min24614,in1Min24614])
Res49642 = keras.layers.Reshape((1, 1, 1), name = 'Res49642', )(Min24614)
Cro78975 = keras.layers.Cropping2D(cropping=((0, 0), (0, 0)), name = 'Cro78975', )(Res49642)
Res45453 = keras.layers.Reshape((1, 1), name = 'Res45453', )(Cro78975)
Zer3481 = keras.layers.ZeroPadding1D(padding=((21, 0)), name = 'Zer3481', )(Res45453)
Con2568 = keras.layers.Concatenate(axis=2, name = 'Con2568', )([Zer3481,in0Con2568])
Sub93684 = keras.layers.Subtract(name = 'Sub93684', )([in0Sub93684,in1Sub93684])
Lay40753 = keras.layers.LayerNormalization(axis=1, epsilon=1.9402221279547682, name = 'Lay40753', )(Sub93684)
Res8167 = keras.layers.Reshape((2, 3, 4), name = 'Res8167', )(Lay40753)
Res32711 = keras.layers.Reshape((2, 12), name = 'Res32711', )(Res8167)
Con26591 = keras.layers.Concatenate(axis=2, name = 'Con26591', )([Res32711,in0Con26591])
Per79678 = keras.layers.Permute((1,2), name = 'Per79678',)(in0Per79678)
Dot63466 = keras.layers.Dot(axes=(1, 1), name = 'Dot63466', )([Con26591,Per79678])
Sub27733 = keras.layers.Subtract(name = 'Sub27733', )([Con2568,Dot63466])
Mul20969 = keras.layers.Multiply(name = 'Mul20969', )([Con77612,Sub27733])
model = tf.keras.models.Model(inputs=[in0Max1054,in1Max1054,in0Con77612,in0Min24614,in1Min24614,in0Con2568,in0Sub93684,in1Sub93684,in0Con26591,in0Per79678], outputs=Mul20969)
in0Max1054 = tf.constant([[[[0.6151, 0.0048]]]])
in1Max1054 = tf.constant([[[[0.5402, 0.9951]]]])
in0Con77612 = tf.constant([[[0.5644], [0.9035], [0.3484], [0.4278], [0.635], [0.8701], [0.9509], [0.5303], [0.5549], [0.3407], [0.9182], [0.0146], [0.2393], [0.5662], [0.943], [0.2223], [0.8863], [0.9121], [0.1344], [0.0186], [0.3041], [0.202]]])
in0Min24614 = tf.constant([[[[[0.6708]]]]])
in1Min24614 = tf.constant([[[[[0.3894]]]]])
in0Con2568 = tf.constant([[[0.6815], [0.4631], [0.5749], [0.5818], [0.9202], [0.1928], [0.9888], [0.3723], [0.3282], [0.6926], [0.3086], [0.39], [0.2919], [0.4332], [0.9434], [0.8126], [0.3336], [0.2824], [0.7481], [0.7905], [0.4665], [0.9254]]])
in0Sub93684 = tf.constant([[[[[0.9509, 0.6854], [0.9341, 0.3794]], [[0.3738, 0.8703], [0.1752, 0.5509]], [[0.4527, 0.4775], [0.5357, 0.016]]], [[[0.4861, 0.8148], [0.0473, 0.1557]], [[0.9045, 0.1281], [0.8611, 0.3662]], [[0.6606, 0.1261], [0.0195, 0.8913]]]]])
in1Sub93684 = tf.constant([[[[[0.2717, 0.2068], [0.336, 0.113]], [[0.4435, 0.9979], [0.833, 0.381]], [[0.038, 0.612], [0.2349, 0.5775]]], [[[0.6535, 0.7087], [0.2116, 0.1313]], [[0.2301, 0.0537], [0.4252, 0.1262]], [[0.9103, 0.7714], [0.9446, 0.4757]]]]])
in0Con26591 = tf.constant([[[0.296, 0.5763, 0.9237, 0.7142, 0.3435, 0.4204, 0.6831, 0.2788, 0.131, 0.4491], [0.3911, 0.2618, 0.1218, 0.7936, 0.8359, 0.5807, 0.0749, 0.7595, 0.47, 0.9152]]])
in0Per79678 = tf.constant([[[1.8454, 1.8972], [1.2625, 1.8825]]])
print (np.array2string(model.predict([in0Max1054,in1Max1054,in0Con77612,in0Min24614,in1Min24614,in0Con2568,in0Sub93684,in1Sub93684,in0Con26591,in0Per79678],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Mul20969.png')

LMax1054 = maximum_layer([[[[[0.6151, 0.0048]]]], [[[[0.5402, 0.9951]]]]], Max1054), 
LRes98993 = reshape_layer(Max1054, [1, 2], Res98993), 
LGlo58545 = global_average_pooling1D_layer(Res98993, Glo58545), 
LRes19752 = reshape_layer(Glo58545, [2, 1], Res19752), 
LZer37622 = zero_padding1D_layer(Res19752, 20, 0, Zer37622), 
LCon77612 = concatenate_layer([Zer37622,[[[0.5644], [0.9035], [0.3484], [0.4278], [0.635], [0.8701], [0.9509], [0.5303], [0.5549], [0.3407], [0.9182], [0.0146], [0.2393], [0.5662], [0.943], [0.2223], [0.8863], [0.9121], [0.1344], [0.0186], [0.3041], [0.202]]]], 2, Con77612), 
LMin24614 = minimum_layer([[[[[[0.6708]]]]], [[[[[0.3894]]]]]], Min24614), 
LRes49642 = reshape_layer(Min24614, [1, 1, 1], Res49642), 
LCro78975 = cropping2D_layer(Res49642, 0, 0, 0, 0, Cro78975), 
LRes45453 = reshape_layer(Cro78975, [1, 1], Res45453), 
LZer3481 = zero_padding1D_layer(Res45453, 21, 0, Zer3481), 
LCon2568 = concatenate_layer([Zer3481,[[[0.6815], [0.4631], [0.5749], [0.5818], [0.9202], [0.1928], [0.9888], [0.3723], [0.3282], [0.6926], [0.3086], [0.39], [0.2919], [0.4332], [0.9434], [0.8126], [0.3336], [0.2824], [0.7481], [0.7905], [0.4665], [0.9254]]]], 2, Con2568), 
LSub93684 = subtract_layer([[[[[0.9509, 0.6854], [0.9341, 0.3794]], [[0.3738, 0.8703], [0.1752, 0.5509]], [[0.4527, 0.4775], [0.5357, 0.016]]], [[[0.4861, 0.8148], [0.0473, 0.1557]], [[0.9045, 0.1281], [0.8611, 0.3662]], [[0.6606, 0.1261], [0.0195, 0.8913]]]]], [[[[[0.2717, 0.2068], [0.336, 0.113]], [[0.4435, 0.9979], [0.833, 0.381]], [[0.038, 0.612], [0.2349, 0.5775]]], [[[0.6535, 0.7087], [0.2116, 0.1313]], [[0.2301, 0.0537], [0.4252, 0.1262]], [[0.9103, 0.7714], [0.9446, 0.4757]]]]], Sub93684), 
LLay40753 = layer_normalization_layer(Sub93684, 1, 1.9402221279547682, Lay40753), 
LRes8167 = reshape_layer(Lay40753, [2, 3, 4], Res8167), 
LRes32711 = reshape_layer(Res8167, [2, 12], Res32711), 
LCon26591 = concatenate_layer([Res32711,[[[0.296, 0.5763, 0.9237, 0.7142, 0.3435, 0.4204, 0.6831, 0.2788, 0.131, 0.4491], [0.3911, 0.2618, 0.1218, 0.7936, 0.8359, 0.5807, 0.0749, 0.7595, 0.47, 0.9152]]]], 2, Con26591), 
LPer79678 = permute_layer([[[1.8454, 1.8972], [1.2625, 1.8825]]], 1,2, Per79678), 
LDot63466 = dot_layer(Con26591,Per79678, 1, 1, Dot63466), 
LSub27733 = subtract_layer(Con2568,Dot63466, Sub27733), 
LMul20969 = multiply_layer([Con77612,Sub27733], Mul20969), 
exec_layers([LMax1054,LRes98993,LGlo58545,LRes19752,LZer37622,LCon77612,LMin24614,LRes49642,LCro78975,LRes45453,LZer3481,LCon2568,LSub93684,LLay40753,LRes8167,LRes32711,LCon26591,LPer79678,LDot63466,LSub27733,LMul20969],["Max1054","Res98993","Glo58545","Res19752","Zer37622","Con77612","Min24614","Res49642","Cro78975","Res45453","Zer3481","Con2568","Sub93684","Lay40753","Res8167","Res32711","Con26591","Per79678","Dot63466","Sub27733","Mul20969"],Mul20969,"Mul20969")

Actual (Unparsed): [[[-0.0000000, 0.3822263], [-0.0000000, 0.4166506], [-0.0000000, 0.1989433], [-0.0000000, 0.2483498], [0.0000000, 0.5867358], [0.0000000, 0.1686803], [0.0000000, 0.9453581], [0.0000000, 0.1976268], [-0.0000000, 0.1802259], [-0.0000000, 0.2350656], [-0.0000000, 0.2779201], [0.0000000, 0.0057650], [-0.0000000, -0.2407159], [-0.0000000, -0.6528257], [-0.0000000, -0.9791472], [-0.0000000, -0.4526767], [-0.0000000, -1.6765871], [-0.0000000, -1.4669766], [-0.0000000, -0.0925850], [-0.0000000, -0.0217285], [-0.5136838, -0.2027764], [-1.5869946, -0.3331983]]]

Expected (Unparsed): [[[-0.0,0.38222622050039545],[-0.0,0.41665062579899703],[-0.0,0.1989432755501467],[-0.0,0.24834980645401916],[0.0,0.5867358090869823],[0.0,0.16868028367488197],[0.0,0.9453581148362435],[0.0,0.1976267837756043],[-0.0,0.18022586497210902],[-0.0,0.23506557762819646],[-0.0,0.27792005027056227],[0.0,0.005765033013046047],[-0.0,-0.240715926135],[-0.0,-0.6528256897320001],[-0.0,-0.9791472080199998],[-0.0,-0.45267665695200004],[-0.0,-1.6765870766849997],[-0.0,-1.4669766096230001],[-0.0,-0.09258501100799998],[-0.0,-0.021728484845999995],[-0.5136837882399999,-0.20277637362],[-1.586994575214,-0.3331982970400001]]]

Actual:   [[[-0, 0.3823], [-0, 0.4167], [-0, 0.199], [-0, 0.2484], [0, 0.5868], [0, 0.1687], [0, 0.9454], [0, 0.1977], [-0, 0.1803], [-0, 0.2351], [-0, 0.278], [0, 0.0058], [-0, -0.2407], [-0, -0.6528], [-0, -0.9791], [-0, -0.4526], [-0, -1.6765], [-0, -1.4669], [-0, -0.0925], [-0, -0.0217], [-0.5136, -0.2027], [-1.5869, -0.3331]]]

Expected: [[[-0, 0.3823], [-0, 0.4167], [-0, 0.199], [-0, 0.2484], [0, 0.5868], [0, 0.1687], [0, 0.9454], [0, 0.1977], [-0, 0.1803], [-0, 0.2351], [-0, 0.278], [0, 0.0058], [-0, -0.2407], [-0, -0.6528], [-0, -0.9791], [-0, -0.4526], [-0, -1.6765], [-0, -1.4669], [-0, -0.0925], [-0, -0.0217], [-0.5136, -0.2027], [-1.5869, -0.3331]]]