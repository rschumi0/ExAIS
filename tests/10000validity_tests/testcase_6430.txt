import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Ave48059 = tf.keras.layers.Input(shape=([2, 1, 2]))
in1Ave48059 = tf.keras.layers.Input(shape=([2, 1, 2]))
in0Min98741 = tf.keras.layers.Input(shape=([1, 2, 2]))
in1Min98741 = tf.keras.layers.Input(shape=([1, 2, 2]))
in0Mul41412 = tf.keras.layers.Input(shape=([1, 2]))
in1Mul41412 = tf.keras.layers.Input(shape=([1, 2]))
in0Mul63638 = tf.keras.layers.Input(shape=([2, 2, 1]))
in1Mul63638 = tf.keras.layers.Input(shape=([2, 2, 1]))

Ave48059 = keras.layers.Average(name = 'Ave48059', )([in0Ave48059,in1Ave48059])
Dep46375 = keras.layers.DepthwiseConv2D((1, 1),strides=(1, 1), padding='valid', name = 'Dep46375', )(Ave48059)
Res25222 = keras.layers.Reshape((2, 1, 2, 1), name = 'Res25222', )(Dep46375)
Zer60588 = keras.layers.ZeroPadding3D(padding=((2, 0), (3, 0), (0, 0)), name = 'Zer60588', )(Res25222)
Min98741 = keras.layers.Minimum(name = 'Min98741', )([in0Min98741,in1Min98741])
Res42912 = keras.layers.Reshape((1, 4), name = 'Res42912', )(Min98741)
Per67681 = keras.layers.Permute((2,1), name = 'Per67681',)(Res42912)
Res57232 = keras.layers.Reshape((4, 1, 1), name = 'Res57232', )(Per67681)
Cro24997 = keras.layers.Cropping2D(cropping=((1, 2), (0, 0)), name = 'Cro24997', )(Res57232)
Res8564 = keras.layers.Reshape((1, 1, 1, 1), name = 'Res8564', )(Cro24997)
Zer30414 = keras.layers.ZeroPadding3D(padding=((3, 0), (3, 0), (1, 0)), name = 'Zer30414', )(Res8564)
Mul41412 = keras.layers.Multiply(name = 'Mul41412', )([in0Mul41412,in1Mul41412])
Res60895 = keras.layers.Reshape((1, 2, 1), name = 'Res60895', )(Mul41412)
Res39827 = keras.layers.Reshape((1, 2, 1, 1), name = 'Res39827', )(Res60895)
Zer5330 = keras.layers.ZeroPadding3D(padding=((3, 0), (2, 0), (1, 0)), name = 'Zer5330', )(Res39827)
Mul63638 = keras.layers.Multiply(name = 'Mul63638', )([in0Mul63638,in1Mul63638])
Res53325 = keras.layers.Reshape((2, 2, 1, 1), name = 'Res53325', )(Mul63638)
Up_94198 = keras.layers.UpSampling3D(size=(2, 2, 2), name = 'Up_94198', )(Res53325)
Sub54675 = keras.layers.Subtract(name = 'Sub54675', )([Zer5330,Up_94198])
Ave43507 = keras.layers.Average(name = 'Ave43507', )([Zer30414,Sub54675])
Mul37729 = keras.layers.Multiply(name = 'Mul37729', )([Zer60588,Ave43507])
model = tf.keras.models.Model(inputs=[in0Ave48059,in1Ave48059,in0Min98741,in1Min98741,in0Mul41412,in1Mul41412,in0Mul63638,in1Mul63638], outputs=Mul37729)
w = model.get_layer('Dep46375').get_weights() 
w[0] = np.array([[[[0.035], [0.4622]]]])
w[1] = np.array([0, 0])
model.get_layer('Dep46375').set_weights(w) 
in0Ave48059 = tf.constant([[[[0.4044, 0.463]], [[0.1707, 0.7861]]]])
in1Ave48059 = tf.constant([[[[0.8875, 0.8768]], [[0.2509, 0.1961]]]])
in0Min98741 = tf.constant([[[[0.955, 0.7423], [0.0587, 0.479]]]])
in1Min98741 = tf.constant([[[[0.1521, 0.1882], [0.5434, 0.9383]]]])
in0Mul41412 = tf.constant([[[0.1468, 0.8908]]])
in1Mul41412 = tf.constant([[[0.1173, 0.617]]])
in0Mul63638 = tf.constant([[[[0.3033], [0.8212]], [[0.7886], [0.1077]]]])
in1Mul63638 = tf.constant([[[[0.6995], [0.5733]], [[0.8677], [0.8205]]]])
print (np.array2string(model.predict([in0Ave48059,in1Ave48059,in0Min98741,in1Min98741,in0Mul41412,in1Mul41412,in0Mul63638,in1Mul63638],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Mul37729.png')

LAve48059 = average_layer([[[[[0.4044, 0.463]], [[0.1707, 0.7861]]]], [[[[0.8875, 0.8768]], [[0.2509, 0.1961]]]]], Ave48059), 
LDep46375 = depthwise_conv2D_layer(Ave48059, 1, 1,[[[[0.035], [0.4622]]]],[0, 0], 1, 1, false, Dep46375), 
LRes25222 = reshape_layer(Dep46375, [2, 1, 2, 1], Res25222), 
LZer60588 = zero_padding3D_layer(Res25222, 2, 0, 3, 0, 0, 0, Zer60588), 
LMin98741 = minimum_layer([[[[[0.955, 0.7423], [0.0587, 0.479]]]], [[[[0.1521, 0.1882], [0.5434, 0.9383]]]]], Min98741), 
LRes42912 = reshape_layer(Min98741, [1, 4], Res42912), 
LPer67681 = permute_layer(Res42912, 2,1, Per67681), 
LRes57232 = reshape_layer(Per67681, [4, 1, 1], Res57232), 
LCro24997 = cropping2D_layer(Res57232, 1, 2, 0, 0, Cro24997), 
LRes8564 = reshape_layer(Cro24997, [1, 1, 1, 1], Res8564), 
LZer30414 = zero_padding3D_layer(Res8564, 3, 0, 3, 0, 1, 0, Zer30414), 
LMul41412 = multiply_layer([[[[0.1468, 0.8908]]], [[[0.1173, 0.617]]]], Mul41412), 
LRes60895 = reshape_layer(Mul41412, [1, 2, 1], Res60895), 
LRes39827 = reshape_layer(Res60895, [1, 2, 1, 1], Res39827), 
LZer5330 = zero_padding3D_layer(Res39827, 3, 0, 2, 0, 1, 0, Zer5330), 
LMul63638 = multiply_layer([[[[[0.3033], [0.8212]], [[0.7886], [0.1077]]]], [[[[0.6995], [0.5733]], [[0.8677], [0.8205]]]]], Mul63638), 
LRes53325 = reshape_layer(Mul63638, [2, 2, 1, 1], Res53325), 
LUp_94198 = up_sampling3D_layer(Res53325, 2, 2, 2, Up_94198), 
LSub54675 = subtract_layer(Zer5330,Up_94198, Sub54675), 
LAve43507 = average_layer([Zer30414,Sub54675], Ave43507), 
LMul37729 = multiply_layer([Zer60588,Ave43507], Mul37729), 
exec_layers([LAve48059,LDep46375,LRes25222,LZer60588,LMin98741,LRes42912,LPer67681,LRes57232,LCro24997,LRes8564,LZer30414,LMul41412,LRes60895,LRes39827,LZer5330,LMul63638,LRes53325,LUp_94198,LSub54675,LAve43507,LMul37729],["Ave48059","Dep46375","Res25222","Zer60588","Min98741","Res42912","Per67681","Res57232","Cro24997","Res8564","Zer30414","Mul41412","Res60895","Res39827","Zer5330","Mul63638","Res53325","Up_94198","Sub54675","Ave43507","Mul37729"],Mul37729,"Mul37729")

Actual (Unparsed): [[[[[-0.0000000], [-0.0000000]], [[-0.0000000], [-0.0000000]], [[-0.0000000], [-0.0000000]], [[-0.0000000], [-0.0000000]]], [[[-0.0000000], [-0.0000000]], [[-0.0000000], [-0.0000000]], [[-0.0000000], [-0.0000000]], [[-0.0000000], [-0.0000000]]], [[[-0.0000000], [-0.0000000]], [[-0.0000000], [-0.0000000]], [[-0.0000000], [-0.0000000]], [[-0.0009989], [-0.0136806]]], [[[-0.0000000], [-0.0000000]], [[-0.0000000], [-0.0000000]], [[-0.0000000], [-0.0000000]], [[-0.0003260], [0.0737088]]]]]

Expected (Unparsed): [[[[[-0.0],[-0.0]],[[-0.0],[-0.0]],[[-0.0],[-0.0]],[[-0.0],[-0.0]]],[[[-0.0],[-0.0]],[[-0.0],[-0.0]],[[-0.0],[-0.0]],[[-0.0],[-0.0]]],[[[-0.0],[-0.0]],[[-0.0],[-0.0]],[[-0.0],[-0.0]],[[-0.0009989212223812502],[-0.0136805706094365]]],[[[-0.0],[-0.0]],[[-0.0],[-0.0]],[[-0.0],[-0.0]],[[-0.00032598899864999997],[0.0737088178204575]]]]]

Actual:   [[[[[-0], [-0]], [[-0], [-0]], [[-0], [-0]], [[-0], [-0]]], [[[-0], [-0]], [[-0], [-0]], [[-0], [-0]], [[-0], [-0]]], [[[-0], [-0]], [[-0], [-0]], [[-0], [-0]], [[-0.0009], [-0.0136]]], [[[-0], [-0]], [[-0], [-0]], [[-0], [-0]], [[-0.0003], [0.0738]]]]]

Expected: [[[[[-0], [-0]], [[-0], [-0]], [[-0], [-0]], [[-0], [-0]]], [[[-0], [-0]], [[-0], [-0]], [[-0], [-0]], [[-0], [-0]]], [[[-0], [-0]], [[-0], [-0]], [[-0], [-0]], [[-0.0009], [-0.0136]]], [[[-0], [-0]], [[-0], [-0]], [[-0], [-0]], [[-0.0003], [0.0738]]]]]