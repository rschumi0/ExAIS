import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Lay39993 = tf.keras.layers.Input(shape=([1, 2]))

Lay39993 = keras.layers.LayerNormalization(axis=2, epsilon=1.105450948252423, name = 'Lay39993', )(in0Lay39993)
Bat93104 = keras.layers.BatchNormalization(axis=1, epsilon=0.2580355645434502,  name = 'Bat93104', )(Lay39993)
Glo5417 = keras.layers.GlobalMaxPool1D(name = 'Glo5417', )(Bat93104)
model = tf.keras.models.Model(inputs=[in0Lay39993], outputs=Glo5417)
w = model.get_layer('Bat93104').get_weights() 
w[0] = np.array([0.584])
w[1] = np.array([0.4648])
w[2] = np.array([0.614])
w[3] = np.array([0.5422])
model.get_layer('Bat93104').set_weights(w) 
in0Lay39993 = tf.constant([[[1.5179, 1.6836]]])
print (np.array2string(model.predict([in0Lay39993],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Glo5417.png')

LLay39993 = layer_normalization_layer([[[1.5179, 1.6836]]], 2, 1.105450948252423, Lay39993), 
LBat93104 = batch_normalization_layer(Lay39993, 1, 0.2580355645434502, [0.584], [0.4648], [0.614], [0.5422], Bat93104), 
LGlo5417 = global_max_pool1D_layer(Bat93104, Glo5417), 
exec_layers([LLay39993,LBat93104,LGlo5417],["Lay39993","Bat93104","Glo5417"],Glo5417,"Glo5417")

Actual (Unparsed): [[0.0126748, 0.1152429]]

Expected (Unparsed): [[0.012674780301524358,0.1152429298627658]]

Actual:   [[0.0127, 0.1153]]

Expected: [[0.0127, 0.1153]]