import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Fla16489 = tf.keras.layers.Input(shape=([1, 1, 1]))
in0Min40939 = tf.keras.layers.Input(shape=([2, 2, 1]))
in1Min40939 = tf.keras.layers.Input(shape=([2, 2, 1]))
in0LST99101 = tf.keras.layers.Input(shape=([1, 2]))
in0Con63844 = tf.keras.layers.Input(shape=([3, 8]))
in0Glo31687 = tf.keras.layers.Input(shape=([1, 1]))

Fla16489 = keras.layers.Flatten(name = 'Fla16489', )(in0Fla16489)
Res62838 = keras.layers.Reshape((1, 1), name = 'Res62838', )(Fla16489)
Res70461 = keras.layers.Reshape((1, 1, 1), name = 'Res70461', )(Res62838)
Zer30216 = keras.layers.ZeroPadding2D(padding=((1, 0), (1, 0)), name = 'Zer30216', )(Res70461)
Min40939 = keras.layers.Minimum(name = 'Min40939', )([in0Min40939,in1Min40939])
Sub99129 = keras.layers.Subtract(name = 'Sub99129', )([Zer30216,Min40939])
Res66152 = keras.layers.Reshape((2, 2), name = 'Res66152', )(Sub99129)
Zer34287 = keras.layers.ZeroPadding1D(padding=((1, 0)), name = 'Zer34287', )(Res66152)
LST99101 = keras.layers.LSTM(3,recurrent_activation='sigmoid', name = 'LST99101', )(in0LST99101)
Lea81063 = keras.layers.LeakyReLU(alpha=1.3093896856803129, name = 'Lea81063', )(LST99101)
Res44092 = keras.layers.Reshape((3, 1), name = 'Res44092', )(Lea81063)
Con63844 = keras.layers.Concatenate(axis=2, name = 'Con63844', )([Res44092,in0Con63844])
Glo31687 = keras.layers.GlobalMaxPool1D(name = 'Glo31687', )(in0Glo31687)
Res48500 = keras.layers.Reshape((1, 1), name = 'Res48500', )(Glo31687)
Res95200 = keras.layers.Reshape((1, 1, 1), name = 'Res95200', )(Res48500)
Res52776 = keras.layers.Reshape((1, 1, 1, 1), name = 'Res52776', )(Res95200)
Zer47816 = keras.layers.ZeroPadding3D(padding=((1, 1), (1, 1), (1, 1)), name = 'Zer47816', )(Res52776)
Res96567 = keras.layers.Reshape((3, 3, 3), name = 'Res96567', )(Zer47816)
Res57055 = keras.layers.Reshape((3, 9), name = 'Res57055', )(Res96567)
Cro26041 = keras.layers.Cropping1D(cropping=((1, 0)), name = 'Cro26041', )(Res57055)
Dot61815 = keras.layers.Dot(axes=(2, 2), name = 'Dot61815', )([Con63844,Cro26041])
Ave76673 = keras.layers.Average(name = 'Ave76673', )([Zer34287,Dot61815])
model = tf.keras.models.Model(inputs=[in0Fla16489,in0Min40939,in1Min40939,in0LST99101,in0Con63844,in0Glo31687], outputs=Ave76673)
w = model.get_layer('LST99101').get_weights() 
w[0] = np.array([[1, 7, 4, 4, 9, 8, 4, 9, 10, 6, 5, 9], [6, 9, 9, 4, 9, 7, 6, 4, 9, 10, 3, 1]])
w[1] = np.array([[5, 7, 2, 5, 10, 4, 5, 3, 1, 4, 3, 10], [8, 6, 8, 7, 8, 7, 9, 3, 10, 7, 3, 6], [9, 10, 7, 6, 3, 10, 5, 9, 2, 7, 1, 6]])
w[2] = np.array([8, 7, 1, 5, 10, 1, 5, 5, 10, 7, 3, 2])
model.get_layer('LST99101').set_weights(w) 
in0Fla16489 = tf.constant([[[[1.4305]]]])
in0Min40939 = tf.constant([[[[0.9457], [0.5692]], [[0.7078], [0.9536]]]])
in1Min40939 = tf.constant([[[[0.4614], [0.5001]], [[0.2168], [0.7125]]]])
in0LST99101 = tf.constant([[[8, 7]]])
in0Con63844 = tf.constant([[[0.6697, 0.1273, 0.2124, 0.3764, 0.2207, 0.449, 0.757, 0.399], [0.9197, 0.2372, 0.2919, 0.7631, 0.4144, 0.6648, 0.5056, 0.2464], [0.8491, 0.7698, 0.2218, 0.8337, 0.7352, 0.0462, 0.464, 0.3357]]])
in0Glo31687 = tf.constant([[[1.9138]]])
print (np.array2string(model.predict([in0Fla16489,in0Min40939,in1Min40939,in0LST99101,in0Con63844,in0Glo31687],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Ave76673.png')

LFla16489 = flatten_layer([[[[1.4305]]]], Fla16489), 
LRes62838 = reshape_layer(Fla16489, [1, 1], Res62838), 
LRes70461 = reshape_layer(Res62838, [1, 1, 1], Res70461), 
LZer30216 = zero_padding2D_layer(Res70461, 1, 0, 1, 0, Zer30216), 
LMin40939 = minimum_layer([[[[[0.9457], [0.5692]], [[0.7078], [0.9536]]]], [[[[0.4614], [0.5001]], [[0.2168], [0.7125]]]]], Min40939), 
LSub99129 = subtract_layer(Zer30216,Min40939, Sub99129), 
LRes66152 = reshape_layer(Sub99129, [2, 2], Res66152), 
LZer34287 = zero_padding1D_layer(Res66152, 1, 0, Zer34287), 
LLST99101 = lstm_layer([[[8, 7]]],[[1, 7, 4, 4, 9, 8, 4, 9, 10, 6, 5, 9], [6, 9, 9, 4, 9, 7, 6, 4, 9, 10, 3, 1]],[[5, 7, 2, 5, 10, 4, 5, 3, 1, 4, 3, 10], [8, 6, 8, 7, 8, 7, 9, 3, 10, 7, 3, 6], [9, 10, 7, 6, 3, 10, 5, 9, 2, 7, 1, 6]],[8, 7, 1, 5, 10, 1, 5, 5, 10, 7, 3, 2], LST99101), 
LLea81063 = leaky_relu_layer(LST99101, 1.3093896856803129, Lea81063), 
LRes44092 = reshape_layer(Lea81063, [3, 1], Res44092), 
LCon63844 = concatenate_layer([Res44092,[[[0.6697, 0.1273, 0.2124, 0.3764, 0.2207, 0.449, 0.757, 0.399], [0.9197, 0.2372, 0.2919, 0.7631, 0.4144, 0.6648, 0.5056, 0.2464], [0.8491, 0.7698, 0.2218, 0.8337, 0.7352, 0.0462, 0.464, 0.3357]]]], 2, Con63844), 
LGlo31687 = global_max_pool1D_layer([[[1.9138]]], Glo31687), 
LRes48500 = reshape_layer(Glo31687, [1, 1], Res48500), 
LRes95200 = reshape_layer(Res48500, [1, 1, 1], Res95200), 
LRes52776 = reshape_layer(Res95200, [1, 1, 1, 1], Res52776), 
LZer47816 = zero_padding3D_layer(Res52776, 1, 1, 1, 1, 1, 1, Zer47816), 
LRes96567 = reshape_layer(Zer47816, [3, 3, 3], Res96567), 
LRes57055 = reshape_layer(Res96567, [3, 9], Res57055), 
LCro26041 = cropping1D_layer(Res57055, 1, 0, Cro26041), 
LDot61815 = dot_layer(Con63844,Cro26041, 2, 2, Dot61815), 
LAve76673 = average_layer([Zer34287,Dot61815], Ave76673), 
exec_layers([LFla16489,LRes62838,LRes70461,LZer30216,LMin40939,LSub99129,LRes66152,LZer34287,LLST99101,LLea81063,LRes44092,LCon63844,LGlo31687,LRes48500,LRes95200,LRes52776,LZer47816,LRes96567,LRes57055,LCro26041,LDot61815,LAve76673],["Fla16489","Res62838","Res70461","Zer30216","Min40939","Sub99129","Res66152","Zer34287","LST99101","Lea81063","Res44092","Con63844","Glo31687","Res48500","Res95200","Res52776","Zer47816","Res96567","Res57055","Cro26041","Dot61815","Ave76673"],Ave76673,"Ave76673")

Actual (Unparsed): [[[0.3601772, 0.0000000], [0.4995104, -0.2500500], [0.6893675, 0.3590000]]]

Expected (Unparsed): [[[0.36017716,0.0],[0.49951038999999997,-0.25005],[0.68936753,0.35900000000000004]]]

Actual:   [[[0.3602, 0], [0.4996, -0.25], [0.6894, 0.359]]]

Expected: [[[0.3602, 0], [0.4996, -0.25], [0.6894, 0.3591]]]