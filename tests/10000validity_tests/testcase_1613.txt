import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Min33930 = tf.keras.layers.Input(shape=([2, 1]))
in1Min33930 = tf.keras.layers.Input(shape=([2, 1]))
in0Cro91090 = tf.keras.layers.Input(shape=([2, 2, 3, 4]))
in0Con51127 = tf.keras.layers.Input(shape=([1, 1, 1]))

Min33930 = keras.layers.Minimum(name = 'Min33930', )([in0Min33930,in1Min33930])
Res99893 = keras.layers.Reshape((2, 1, 1), name = 'Res99893', )(Min33930)
Glo29844 = keras.layers.GlobalAveragePooling2D(name = 'Glo29844', )(Res99893)
Res90385 = keras.layers.Reshape((1, 1), name = 'Res90385', )(Glo29844)
Up_66557 = keras.layers.UpSampling1D(size=(2), name = 'Up_66557', )(Res90385)
Glo66611 = keras.layers.GlobalMaxPool1D(name = 'Glo66611', )(Up_66557)
Res70927 = keras.layers.Reshape((1, 1), name = 'Res70927', )(Glo66611)
Cro91090 = keras.layers.Cropping3D(cropping=((1, 0), (1, 0), (1, 1)), name = 'Cro91090', )(in0Cro91090)
Res14338 = keras.layers.Reshape((1, 1, 4), name = 'Res14338', )(Cro91090)
Con51127 = keras.layers.Conv2D(4, (1, 1),strides=(1, 1), padding='valid', dilation_rate=(1, 1), name = 'Con51127', )(in0Con51127)
Lea70087 = keras.layers.LeakyReLU(alpha=7.444398900894378, name = 'Lea70087', )(Con51127)
Ave97486 = keras.layers.Average(name = 'Ave97486', )([Res14338,Lea70087])
Res60638 = keras.layers.Reshape((1, 4), name = 'Res60638', )(Ave97486)
Dot21781 = keras.layers.Dot(axes=(2, 1), name = 'Dot21781', )([Res70927,Res60638])
GRU89125 = keras.layers.GRU(3,reset_after=True, recurrent_activation='sigmoid', name = 'GRU89125', )(Dot21781)
model = tf.keras.models.Model(inputs=[in0Min33930,in1Min33930,in0Cro91090,in0Con51127], outputs=GRU89125)
w = model.get_layer('Con51127').get_weights() 
w[0] = np.array([[[[0.2696, 0.7936, 0.1902, 0.6498]]]])
w[1] = np.array([0, 0, 0, 0])
model.get_layer('Con51127').set_weights(w) 
w = model.get_layer('GRU89125').get_weights() 
w[0] = np.array([[3, 10, 10, 8, 3, 7, 10, 8, 2], [2, 8, 9, 6, 6, 1, 8, 7, 1], [4, 3, 10, 1, 6, 9, 9, 6, 5], [7, 3, 6, 7, 8, 1, 9, 1, 4]])
w[1] = np.array([[2, 4, 7, 6, 8, 8, 7, 3, 1], [4, 2, 9, 10, 3, 4, 2, 2, 1], [7, 7, 9, 6, 6, 2, 5, 3, 2]])
w[2] = np.array([[5, 6, 6, 5, 7, 8, 4, 6, 6], [1, 2, 9, 5, 7, 7, 9, 10, 1]])
model.get_layer('GRU89125').set_weights(w) 
in0Min33930 = tf.constant([[[0.0525], [0.04]]])
in1Min33930 = tf.constant([[[0.8544], [0.0522]]])
in0Cro91090 = tf.constant([[[[[1.6163, 1.2149, 1.401, 1.8878], [1.3803, 1.6482, 1.4686, 1.8717], [1.2037, 1.8697, 1.5484, 1.0067]], [[1.5827, 1.629, 1.463, 1.7976], [1.9614, 1.82, 1.1657, 1.5004], [1.9716, 1.2491, 1.1609, 1.5755]]], [[[1.6238, 1.6796, 1.5021, 1.5179], [1.2253, 1.7597, 1.9764, 1.9249], [1.5971, 1.8937, 1.2624, 1.1306]], [[1.9778, 1.8519, 1.5627, 1.99], [1.8581, 1.9321, 1.4526, 1.4255], [1.8721, 1.7825, 1.4646, 1.1628]]]]])
in0Con51127 = tf.constant([[[[0.7875]]]])
print (np.array2string(model.predict([in0Min33930,in1Min33930,in0Cro91090,in0Con51127],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='GRU89125.png')

LMin33930 = minimum_layer([[[[0.0525], [0.04]]], [[[0.8544], [0.0522]]]], Min33930), 
LRes99893 = reshape_layer(Min33930, [2, 1, 1], Res99893), 
LGlo29844 = global_average_pooling2D_layer(Res99893, Glo29844), 
LRes90385 = reshape_layer(Glo29844, [1, 1], Res90385), 
LUp_66557 = up_sampling1D_layer(Res90385, 2, Up_66557), 
LGlo66611 = global_max_pool1D_layer(Up_66557, Glo66611), 
LRes70927 = reshape_layer(Glo66611, [1, 1], Res70927), 
LCro91090 = cropping3D_layer([[[[[1.6163, 1.2149, 1.401, 1.8878], [1.3803, 1.6482, 1.4686, 1.8717], [1.2037, 1.8697, 1.5484, 1.0067]], [[1.5827, 1.629, 1.463, 1.7976], [1.9614, 1.82, 1.1657, 1.5004], [1.9716, 1.2491, 1.1609, 1.5755]]], [[[1.6238, 1.6796, 1.5021, 1.5179], [1.2253, 1.7597, 1.9764, 1.9249], [1.5971, 1.8937, 1.2624, 1.1306]], [[1.9778, 1.8519, 1.5627, 1.99], [1.8581, 1.9321, 1.4526, 1.4255], [1.8721, 1.7825, 1.4646, 1.1628]]]]], 1, 0, 1, 0, 1, 1, Cro91090), 
LRes14338 = reshape_layer(Cro91090, [1, 1, 4], Res14338), 
LCon51127 = conv2D_layer([[[[0.7875]]]], 1, 1,[[[[0.2696, 0.7936, 0.1902, 0.6498]]]],[0, 0, 0, 0], 1, 1, false, 1, 1, Con51127), 
LLea70087 = leaky_relu_layer(Con51127, 7.444398900894378, Lea70087), 
LAve97486 = average_layer([Res14338,Lea70087], Ave97486), 
LRes60638 = reshape_layer(Ave97486, [1, 4], Res60638), 
LDot21781 = dot_layer(Res70927,Res60638, 2, 1, Dot21781), 
LGRU89125 = gru_layer(Dot21781,[[3, 10, 10, 8, 3, 7, 10, 8, 2], [2, 8, 9, 6, 6, 1, 8, 7, 1], [4, 3, 10, 1, 6, 9, 9, 6, 5], [7, 3, 6, 7, 8, 1, 9, 1, 4]],[[2, 4, 7, 6, 8, 8, 7, 3, 1], [4, 2, 9, 10, 3, 4, 2, 2, 1], [7, 7, 9, 6, 6, 2, 5, 3, 2]],[[5, 6, 6, 5, 7, 8, 4, 6, 6], [1, 2, 9, 5, 7, 7, 9, 10, 1]], true, GRU89125), 
exec_layers([LMin33930,LRes99893,LGlo29844,LRes90385,LUp_66557,LGlo66611,LRes70927,LCro91090,LRes14338,LCon51127,LLea70087,LAve97486,LRes60638,LDot21781,LGRU89125],["Min33930","Res99893","Glo29844","Res90385","Up_66557","Glo66611","Res70927","Cro91090","Res14338","Con51127","Lea70087","Ave97486","Res60638","Dot21781","GRU89125"],GRU89125,"GRU89125")

Actual (Unparsed): [[0.0012006, 0.0001013, 0.0000001]]

Expected (Unparsed): [[0.0012006315898923899,0.0001012923710509425,5.873024751502064e-8]]

Actual:   [[0.0013, 0.0002, 0]]

Expected: [[0.0013, 0.0002, 0]]