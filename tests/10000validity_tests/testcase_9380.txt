import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Ave18664 = tf.keras.layers.Input(shape=([1, 2, 2]))
in1Ave18664 = tf.keras.layers.Input(shape=([1, 2, 2]))
in0Max13564 = tf.keras.layers.Input(shape=([2, 2]))
in0Con50649 = tf.keras.layers.Input(shape=([1, 2]))
in0Con42083 = tf.keras.layers.Input(shape=([2, 1]))
in0Ave97107 = tf.keras.layers.Input(shape=([2, 2]))
in1Ave97107 = tf.keras.layers.Input(shape=([2, 2]))

Ave18664 = keras.layers.Average(name = 'Ave18664', )([in0Ave18664,in1Ave18664])
Res30001 = keras.layers.Reshape((1, 4), name = 'Res30001', )(Ave18664)
Max13564 = keras.layers.MaxPool1D(pool_size=(2), name = 'Max13564', )(in0Max13564)
Con50649 = keras.layers.Concatenate(axis=2, name = 'Con50649', )([Max13564,in0Con50649])
Mul24198 = keras.layers.Multiply(name = 'Mul24198', )([Res30001,Con50649])
Res51691 = keras.layers.Reshape((1, 4, 1), name = 'Res51691', )(Mul24198)
Glo59679 = keras.layers.GlobalAveragePooling2D(name = 'Glo59679', )(Res51691)
Res16886 = keras.layers.Reshape((1, 1), name = 'Res16886', )(Glo59679)
Zer12532 = keras.layers.ZeroPadding1D(padding=((1, 0)), name = 'Zer12532', )(Res16886)
Con42083 = keras.layers.Concatenate(axis=2, name = 'Con42083', )([Zer12532,in0Con42083])
Ave97107 = keras.layers.Average(name = 'Ave97107', )([in0Ave97107,in1Ave97107])
Mul27080 = keras.layers.Multiply(name = 'Mul27080', )([Con42083,Ave97107])
model = tf.keras.models.Model(inputs=[in0Ave18664,in1Ave18664,in0Max13564,in0Con50649,in0Con42083,in0Ave97107,in1Ave97107], outputs=Mul27080)
in0Ave18664 = tf.constant([[[[0.3842, 0.7783], [0.5011, 0.1045]]]])
in1Ave18664 = tf.constant([[[[0.0872, 0.4384], [0.9082, 0.7872]]]])
in0Max13564 = tf.constant([[[1.6446, 1.6509], [1.0122, 1.2558]]])
in0Con50649 = tf.constant([[[0.8469, 0.695]]])
in0Con42083 = tf.constant([[[0.5745], [0.273]]])
in0Ave97107 = tf.constant([[[0.7797, 0.2597], [0.828, 0.5647]]])
in1Ave97107 = tf.constant([[[0.0643, 0.6447], [0.9487, 0.3656]]])
print (np.array2string(model.predict([in0Ave18664,in1Ave18664,in0Max13564,in0Con50649,in0Con42083,in0Ave97107,in1Ave97107],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Mul27080.png')

LAve18664 = average_layer([[[[[0.3842, 0.7783], [0.5011, 0.1045]]]], [[[[0.0872, 0.4384], [0.9082, 0.7872]]]]], Ave18664), 
LRes30001 = reshape_layer(Ave18664, [1, 4], Res30001), 
LMax13564 = max_pool1D_layer([[[1.6446, 1.6509], [1.0122, 1.2558]]], 2, Max13564), 
LCon50649 = concatenate_layer([Max13564,[[[0.8469, 0.695]]]], 2, Con50649), 
LMul24198 = multiply_layer([Res30001,Con50649], Mul24198), 
LRes51691 = reshape_layer(Mul24198, [1, 4, 1], Res51691), 
LGlo59679 = global_average_pooling2D_layer(Res51691, Glo59679), 
LRes16886 = reshape_layer(Glo59679, [1, 1], Res16886), 
LZer12532 = zero_padding1D_layer(Res16886, 1, 0, Zer12532), 
LCon42083 = concatenate_layer([Zer12532,[[[0.5745], [0.273]]]], 2, Con42083), 
LAve97107 = average_layer([[[[0.7797, 0.2597], [0.828, 0.5647]]], [[[0.0643, 0.6447], [0.9487, 0.3656]]]], Ave97107), 
LMul27080 = multiply_layer([Con42083,Ave97107], Mul27080), 
exec_layers([LAve18664,LRes30001,LMax13564,LCon50649,LMul24198,LRes51691,LGlo59679,LRes16886,LZer12532,LCon42083,LAve97107,LMul27080],["Ave18664","Res30001","Max13564","Con50649","Mul24198","Res51691","Glo59679","Res16886","Zer12532","Con42083","Ave97107","Mul27080"],Mul27080,"Mul27080")

Actual (Unparsed): [[[0.0000000, 0.2597889], [0.5104883, 0.1269860]]]

Expected (Unparsed): [[[0.0,0.25978890000000004],[0.510488344258625,0.12698595]]]

Actual:   [[[0, 0.2598], [0.5105, 0.127]]]

Expected: [[[0, 0.2598], [0.5105, 0.127]]]