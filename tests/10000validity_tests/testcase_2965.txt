import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Ave39128 = tf.keras.layers.Input(shape=([1, 2, 1]))
in0Con67262 = tf.keras.layers.Input(shape=([3, 2]))
in0Sub43376 = tf.keras.layers.Input(shape=([3, 3]))
in1Sub43376 = tf.keras.layers.Input(shape=([3, 3]))
in0Con34558 = tf.keras.layers.Input(shape=([4, 1]))
in0Loc26126 = tf.keras.layers.Input(shape=([2, 1, 2]))
in0Con11014 = tf.keras.layers.Input(shape=([4, 30]))
in0Up_61618 = tf.keras.layers.Input(shape=([2, 4, 4]))

Ave39128 = keras.layers.AveragePooling2D(pool_size=(1, 2), name = 'Ave39128', )(in0Ave39128)
Res89621 = keras.layers.Reshape((1, 1), name = 'Res89621', )(Ave39128)
Zer7451 = keras.layers.ZeroPadding1D(padding=((2, 0)), name = 'Zer7451', )(Res89621)
Con67262 = keras.layers.Concatenate(axis=2, name = 'Con67262', )([Zer7451,in0Con67262])
Sub43376 = keras.layers.Subtract(name = 'Sub43376', )([in0Sub43376,in1Sub43376])
Add31993 = keras.layers.Add(name = 'Add31993', )([Con67262,Sub43376])
Zer30527 = keras.layers.ZeroPadding1D(padding=((1, 0)), name = 'Zer30527', )(Add31993)
Con34558 = keras.layers.Concatenate(axis=2, name = 'Con34558', )([Zer30527,in0Con34558])
Loc26126 = keras.layers.LocallyConnected2D(4, (1, 1),strides=(1, 1), name = 'Loc26126', )(in0Loc26126)
Res80556 = keras.layers.Reshape((2, 4), name = 'Res80556', )(Loc26126)
Per47882 = keras.layers.Permute((2,1), name = 'Per47882',)(Res80556)
Sof60956 = keras.layers.Softmax(axis=1, name = 'Sof60956', )(Per47882)
Con11014 = keras.layers.Concatenate(axis=2, name = 'Con11014', )([Sof60956,in0Con11014])
Up_61618 = keras.layers.UpSampling2D(size=(2, 2), name = 'Up_61618', )(in0Up_61618)
Res66171 = keras.layers.Reshape((4, 32), name = 'Res66171', )(Up_61618)
Dot14236 = keras.layers.Dot(axes=(2, 2), name = 'Dot14236', )([Con11014,Res66171])
Add88295 = keras.layers.Add(name = 'Add88295', )([Con34558,Dot14236])
model = tf.keras.models.Model(inputs=[in0Ave39128,in0Con67262,in0Sub43376,in1Sub43376,in0Con34558,in0Loc26126,in0Con11014,in0Up_61618], outputs=Add88295)
w = model.get_layer('Loc26126').get_weights() 
w[0] = np.array([[[0.9651, 0.309, 0.176, 0.4599], [0.2703, 0.1456, 0.9594, 0.8532]], [[0.2576, 0.2601, 0.3869, 0.7031], [0.9239, 0.8277, 0.1275, 0.6149]]])
w[1] = np.array([[[0, 0, 0, 0]], [[0, 0, 0, 0]]])
model.get_layer('Loc26126').set_weights(w) 
in0Ave39128 = tf.constant([[[[1.2243], [1.7769]]]])
in0Con67262 = tf.constant([[[0.7132, 0.1537], [0.5798, 0.1622], [0.1908, 0.1652]]])
in0Sub43376 = tf.constant([[[0.6752, 0.0767, 0.6335], [0.5721, 0.5384, 0.7005], [0.9128, 0.9411, 0.8593]]])
in1Sub43376 = tf.constant([[[0.2455, 0.8418, 0.558], [0.2401, 0.1587, 0.5572], [0.5477, 0.1973, 0.3179]]])
in0Con34558 = tf.constant([[[0.2295], [0.6846], [0.7784], [0.8207]]])
in0Loc26126 = tf.constant([[[[0.8657, 0.2966]], [[0.1982, 0.0457]]]])
in0Con11014 = tf.constant([[[0.8163, 0.0259, 0.7992, 0.0399, 0.258, 0.4062, 0.8847, 0.7703, 0.3691, 0.9116, 0.9954, 0.1462, 0.3028, 0.2044, 0.8445, 0.795, 0.3953, 0.7673, 0.2438, 0.0423, 0.0649, 0.0121, 0.9388, 0.8351, 0.3741, 0.3379, 0.2596, 0.164, 0.9125, 0.4056], [0.2818, 0.4466, 0.7093, 0.8251, 0.8222, 0.9725, 0.3417, 0.0478, 0.1304, 0.3047, 0.271, 0.5004, 0.5794, 0.4798, 0.708, 0.9008, 0.0061, 0.9611, 0.9857, 0.257, 0.6098, 0.5547, 0.501, 0.2636, 0.4749, 0.9233, 0.7767, 0.6853, 0.8546, 0.905], [0.0882, 0.8424, 0.3229, 0.5751, 0.4054, 0.5014, 0.7841, 0.8795, 0.1034, 0.3092, 0.1157, 0.7086, 0.0137, 0.4132, 0.9098, 0.4845, 0.9061, 0.0569, 0.3808, 0.6869, 0.4188, 0.7537, 0.0086, 0.2598, 0.7871, 0.1073, 0.9004, 0.5066, 0.4609, 0.4657], [0.169, 0.9082, 0.8459, 0.38, 0.8523, 0.2807, 0.9551, 0.2681, 0.0246, 0.8237, 0.7169, 0.7773, 0.7898, 0.9102, 0.0475, 0.0873, 0.7882, 0.9115, 0.5688, 0.7945, 0.6952, 0.9647, 0.027, 0.0849, 0.9486, 0.3466, 0.0532, 0.6105, 0.5985, 0.0415]]])
in0Up_61618 = tf.constant([[[[1.6978, 1.2402, 1.297, 1.1541], [1.3893, 1.39, 1.3836, 1.535], [1.2657, 1.8167, 1.2389, 1.2846], [1.8245, 1.0412, 1.3035, 1.5992]], [[1.6661, 1.3022, 1.3092, 1.7111], [1.2051, 1.9662, 1.6972, 1.9489], [1.1092, 1.927, 1.0516, 1.6001], [1.3619, 1.698, 1.6164, 1.6296]]]])
print (np.array2string(model.predict([in0Ave39128,in0Con67262,in0Sub43376,in1Sub43376,in0Con34558,in0Loc26126,in0Con11014,in0Up_61618],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Add88295.png')

LAve39128 = average_pooling2D_layer([[[[1.2243], [1.7769]]]], 1, 2, Ave39128), 
LRes89621 = reshape_layer(Ave39128, [1, 1], Res89621), 
LZer7451 = zero_padding1D_layer(Res89621, 2, 0, Zer7451), 
LCon67262 = concatenate_layer([Zer7451,[[[0.7132, 0.1537], [0.5798, 0.1622], [0.1908, 0.1652]]]], 2, Con67262), 
LSub43376 = subtract_layer([[[0.6752, 0.0767, 0.6335], [0.5721, 0.5384, 0.7005], [0.9128, 0.9411, 0.8593]]], [[[0.2455, 0.8418, 0.558], [0.2401, 0.1587, 0.5572], [0.5477, 0.1973, 0.3179]]], Sub43376), 
LAdd31993 = add_layer([Con67262,Sub43376], Add31993), 
LZer30527 = zero_padding1D_layer(Add31993, 1, 0, Zer30527), 
LCon34558 = concatenate_layer([Zer30527,[[[0.2295], [0.6846], [0.7784], [0.8207]]]], 2, Con34558), 
LLoc26126 = locally_connected2D_layer([[[[0.8657, 0.2966]], [[0.1982, 0.0457]]]], 1, 1,[[[0.9651, 0.309, 0.176, 0.4599], [0.2703, 0.1456, 0.9594, 0.8532]], [[0.2576, 0.2601, 0.3869, 0.7031], [0.9239, 0.8277, 0.1275, 0.6149]]],[[[0, 0, 0, 0]], [[0, 0, 0, 0]]], 1, 1, Loc26126), 
LRes80556 = reshape_layer(Loc26126, [2, 4], Res80556), 
LPer47882 = permute_layer(Res80556, 2,1, Per47882), 
LSof60956 = softmax_layer(Per47882, 1, Sof60956), 
LCon11014 = concatenate_layer([Sof60956,[[[0.8163, 0.0259, 0.7992, 0.0399, 0.258, 0.4062, 0.8847, 0.7703, 0.3691, 0.9116, 0.9954, 0.1462, 0.3028, 0.2044, 0.8445, 0.795, 0.3953, 0.7673, 0.2438, 0.0423, 0.0649, 0.0121, 0.9388, 0.8351, 0.3741, 0.3379, 0.2596, 0.164, 0.9125, 0.4056], [0.2818, 0.4466, 0.7093, 0.8251, 0.8222, 0.9725, 0.3417, 0.0478, 0.1304, 0.3047, 0.271, 0.5004, 0.5794, 0.4798, 0.708, 0.9008, 0.0061, 0.9611, 0.9857, 0.257, 0.6098, 0.5547, 0.501, 0.2636, 0.4749, 0.9233, 0.7767, 0.6853, 0.8546, 0.905], [0.0882, 0.8424, 0.3229, 0.5751, 0.4054, 0.5014, 0.7841, 0.8795, 0.1034, 0.3092, 0.1157, 0.7086, 0.0137, 0.4132, 0.9098, 0.4845, 0.9061, 0.0569, 0.3808, 0.6869, 0.4188, 0.7537, 0.0086, 0.2598, 0.7871, 0.1073, 0.9004, 0.5066, 0.4609, 0.4657], [0.169, 0.9082, 0.8459, 0.38, 0.8523, 0.2807, 0.9551, 0.2681, 0.0246, 0.8237, 0.7169, 0.7773, 0.7898, 0.9102, 0.0475, 0.0873, 0.7882, 0.9115, 0.5688, 0.7945, 0.6952, 0.9647, 0.027, 0.0849, 0.9486, 0.3466, 0.0532, 0.6105, 0.5985, 0.0415]]]], 2, Con11014), 
LUp_61618 = up_sampling2D_layer([[[[1.6978, 1.2402, 1.297, 1.1541], [1.3893, 1.39, 1.3836, 1.535], [1.2657, 1.8167, 1.2389, 1.2846], [1.8245, 1.0412, 1.3035, 1.5992]], [[1.6661, 1.3022, 1.3092, 1.7111], [1.2051, 1.9662, 1.6972, 1.9489], [1.1092, 1.927, 1.0516, 1.6001], [1.3619, 1.698, 1.6164, 1.6296]]]], 2, 2, Up_61618), 
LRes66171 = reshape_layer(Up_61618, [4, 32], Res66171), 
LDot14236 = dot_layer(Con11014,Res66171, 2, 2, Dot14236), 
LAdd88295 = add_layer([Con34558,Dot14236], Add88295), 
exec_layers([LAve39128,LRes89621,LZer7451,LCon67262,LSub43376,LAdd31993,LZer30527,LCon34558,LLoc26126,LRes80556,LPer47882,LSof60956,LCon11014,LUp_61618,LRes66171,LDot14236,LAdd88295],["Ave39128","Res89621","Zer7451","Con67262","Sub43376","Add31993","Zer30527","Con34558","Loc26126","Res80556","Per47882","Sof60956","Con11014","Up_61618","Res66171","Dot14236","Add88295"],Add88295,"Add88295")

Actual (Unparsed): [[[21.2739489, 21.2739489, 22.9724714, 23.2019714], [25.0799045, 24.5983045, 27.2008681, 27.6562682], [20.6174852, 21.2449853, 22.8899745, 23.3628745], [24.9449711, 24.0138711, 26.9633047, 27.0774047]]]

Expected (Unparsed): [[[21.273948837184076,21.273948837184076,22.972471235334044,23.201971235334046],[25.07990449340377,24.59830449340377,27.200868108654653,27.656268108654654],[20.617485384087804,21.2449853840878,22.889974530716277,23.36287453071628],[24.944971125324347,24.013871125324346,26.963304675295035,27.077404675295032]]]

Actual:   [[[21.274, 21.274, 22.9725, 23.202], [25.08, 24.5984, 27.2009, 27.6563], [20.6175, 21.245, 22.89, 23.3629], [24.945, 24.0139, 26.9634, 27.0775]]]

Expected: [[[21.274, 21.274, 22.9725, 23.202], [25.08, 24.5984, 27.2009, 27.6563], [20.6175, 21.245, 22.89, 23.3629], [24.945, 24.0139, 26.9634, 27.0775]]]