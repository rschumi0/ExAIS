import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Mul12448 = tf.keras.layers.Input(shape=([1, 1, 2]))
in1Mul12448 = tf.keras.layers.Input(shape=([1, 1, 2]))

Mul12448 = keras.layers.Multiply(name = 'Mul12448', )([in0Mul12448,in1Mul12448])
Res28330 = keras.layers.Reshape((1, 2), name = 'Res28330', )(Mul12448)
Max75018 = keras.layers.MaxPool1D(pool_size=(1), name = 'Max75018', )(Res28330)
Max12482 = keras.layers.MaxPool1D(pool_size=(1), name = 'Max12482', )(Max75018)
Res64526 = keras.layers.Reshape((1, 2, 1), name = 'Res64526', )(Max12482)
Res23645 = keras.layers.Reshape((1, 2, 1, 1), name = 'Res23645', )(Res64526)
Up_98668 = keras.layers.UpSampling3D(size=(2, 1, 2), name = 'Up_98668', )(Res23645)
model = tf.keras.models.Model(inputs=[in0Mul12448,in1Mul12448], outputs=Up_98668)
in0Mul12448 = tf.constant([[[[0.4456, 0.5231]]]])
in1Mul12448 = tf.constant([[[[0.5016, 0.714]]]])
print (np.array2string(model.predict([in0Mul12448,in1Mul12448],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Up_98668.png')

LMul12448 = multiply_layer([[[[[0.4456, 0.5231]]]], [[[[0.5016, 0.714]]]]], Mul12448), 
LRes28330 = reshape_layer(Mul12448, [1, 2], Res28330), 
LMax75018 = max_pool1D_layer(Res28330, 1, Max75018), 
LMax12482 = max_pool1D_layer(Max75018, 1, Max12482), 
LRes64526 = reshape_layer(Max12482, [1, 2, 1], Res64526), 
LRes23645 = reshape_layer(Res64526, [1, 2, 1, 1], Res23645), 
LUp_98668 = up_sampling3D_layer(Res23645, 2, 1, 2, Up_98668), 
exec_layers([LMul12448,LRes28330,LMax75018,LMax12482,LRes64526,LRes23645,LUp_98668],["Mul12448","Res28330","Max75018","Max12482","Res64526","Res23645","Up_98668"],Up_98668,"Up_98668")

Actual (Unparsed): [[[[[0.2235130], [0.2235130]], [[0.3734934], [0.3734934]]], [[[0.2235130], [0.2235130]], [[0.3734934], [0.3734934]]]]]

Expected (Unparsed): [[[[[0.22351296],[0.22351296]],[[0.3734934],[0.3734934]]],[[[0.22351296],[0.22351296]],[[0.3734934],[0.3734934]]]]]

Actual:   [[[[[0.2236], [0.2236]], [[0.3735], [0.3735]]], [[[0.2236], [0.2236]], [[0.3735], [0.3735]]]]]

Expected: [[[[[0.2236], [0.2236]], [[0.3735], [0.3735]]], [[[0.2236], [0.2236]], [[0.3735], [0.3735]]]]]