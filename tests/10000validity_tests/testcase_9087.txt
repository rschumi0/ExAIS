import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Con68918 = tf.keras.layers.Input(shape=([1, 2, 2]))
in0Con22210 = tf.keras.layers.Input(shape=([8, 15, 1]))
in0Max59222 = tf.keras.layers.Input(shape=([1, 2]))
in1Max59222 = tf.keras.layers.Input(shape=([1, 2]))
in0Add86875 = tf.keras.layers.Input(shape=([2, 2, 1]))
in1Add86875 = tf.keras.layers.Input(shape=([2, 2, 1]))
in0Con38065 = tf.keras.layers.Input(shape=([2, 8, 1]))
in0Con27005 = tf.keras.layers.Input(shape=([2, 2, 2]))

Con68918 = keras.layers.Conv2D(4, (1, 1),strides=(1, 1), padding='valid', dilation_rate=(1, 1), name = 'Con68918', )(in0Con68918)
Den33583 = keras.layers.Dense(3,name = 'Den33583', )(Con68918)
Con81286 = keras.layers.Conv2DTranspose(4, (1, 2),strides=(1, 1), padding='same', name = 'Con81286', )(Den33583)
Res42876 = keras.layers.Reshape((1, 8), name = 'Res42876', )(Con81286)
Per60945 = keras.layers.Permute((2,1), name = 'Per60945',)(Res42876)
Res87568 = keras.layers.Reshape((8, 1, 1), name = 'Res87568', )(Per60945)
Zer73403 = keras.layers.ZeroPadding2D(padding=((0, 0), (14, 0)), name = 'Zer73403', )(Res87568)
Con22210 = keras.layers.Concatenate(axis=3, name = 'Con22210', )([Zer73403,in0Con22210])
Max59222 = keras.layers.Maximum(name = 'Max59222', )([in0Max59222,in1Max59222])
Res34872 = keras.layers.Reshape((1, 2, 1), name = 'Res34872', )(Max59222)
Zer3639 = keras.layers.ZeroPadding2D(padding=((1, 0), (0, 0)), name = 'Zer3639', )(Res34872)
Add86875 = keras.layers.Add(name = 'Add86875', )([in0Add86875,in1Add86875])
Mul14409 = keras.layers.Multiply(name = 'Mul14409', )([Zer3639,Add86875])
Zer28429 = keras.layers.ZeroPadding2D(padding=((0, 0), (6, 0)), name = 'Zer28429', )(Mul14409)
Con38065 = keras.layers.Concatenate(axis=3, name = 'Con38065', )([Zer28429,in0Con38065])
Con27005 = keras.layers.Conv2D(2, (2, 2),strides=(1, 1), padding='same', dilation_rate=(1, 1), name = 'Con27005', )(in0Con27005)
Con45866 = keras.layers.Conv2DTranspose(2, (2, 2),strides=(1, 4), padding='same', name = 'Con45866', )(Con27005)
Ave16068 = keras.layers.Average(name = 'Ave16068', )([Con38065,Con45866])
Zer33675 = keras.layers.ZeroPadding2D(padding=((6, 0), (7, 0)), name = 'Zer33675', )(Ave16068)
Add68946 = keras.layers.Add(name = 'Add68946', )([Con22210,Zer33675])
model = tf.keras.models.Model(inputs=[in0Con68918,in0Con22210,in0Max59222,in1Max59222,in0Add86875,in1Add86875,in0Con38065,in0Con27005], outputs=Add68946)
w = model.get_layer('Con68918').get_weights() 
w[0] = np.array([[[[0.4811, 0.1509, 0.9738, 0.8133], [0.3821, 0.8564, 0.6685, 0.6138]]]])
w[1] = np.array([0, 0, 0, 0])
model.get_layer('Con68918').set_weights(w) 
w = model.get_layer('Den33583').get_weights() 
w[0] = np.array([[0.4547, 0.3636, 0.4557], [0.4437, 0.3264, 0.2447], [0.6713, 0.5008, 0.2429], [0.6983, 0.0842, 0.6892]])
w[1] = np.array([0.9678, 0.9635, 0.9065])
model.get_layer('Den33583').set_weights(w) 
w = model.get_layer('Con81286').get_weights() 
w[0] = np.array([[[[0.1224, 0.6601, 0.6888], [0.1488, 0.202, 0.5373], [0.2066, 0.4761, 0.824], [0.2607, 0.7496, 0.2174]], [[0.6245, 0.9405, 0.8099], [0.3439, 0.2692, 0.2447], [0.5029, 0.0447, 0.086], [0.0615, 0.4244, 0.6811]]]])
w[1] = np.array([0, 0, 0, 0])
model.get_layer('Con81286').set_weights(w) 
w = model.get_layer('Con27005').get_weights() 
w[0] = np.array([[[[0.3077, 0.9481], [0.1431, 0.4688]], [[0.6123, 0.0331], [0.7516, 0.6277]]], [[[0.4883, 0.0561], [0.0222, 0.8101]], [[0.8774, 0.3015], [0.3274, 0.3413]]]])
w[1] = np.array([0, 0])
model.get_layer('Con27005').set_weights(w) 
w = model.get_layer('Con45866').get_weights() 
w[0] = np.array([[[[0.8925, 0.2147], [0.5846, 0.2524]], [[0.016, 0.859], [0.6997, 0.8598]]], [[[0.4859, 0.4583], [0.9694, 0.3435]], [[0.4881, 0.438], [0.8003, 0.745]]]])
w[1] = np.array([0, 0])
model.get_layer('Con45866').set_weights(w) 
in0Con68918 = tf.constant([[[[0.7286, 0.0593], [0.9561, 0.8082]]]])
in0Con22210 = tf.constant([[[[0.3835], [0.4625], [0.7715], [0.5401], [0.625], [0.2035], [0.818], [0.9423], [0.7216], [0.3124], [0.2102], [0.1726], [0.7802], [0.6279], [0.5862]], [[0.995], [0.4162], [0.0686], [0.8332], [0.1535], [0.251], [0.247], [0.3319], [0.9506], [0.1786], [0.9481], [0.6131], [0.5264], [0.811], [0.7171]], [[0.4922], [0.2909], [0.2065], [0.408], [0.3337], [0.0857], [0.7143], [0.4427], [0.2166], [0.5599], [0.5256], [0.6949], [0.4196], [0.9348], [0.3137]], [[0.3763], [0.8289], [0.7979], [0.1657], [0.0291], [0.578], [0.8214], [0.8597], [0.7522], [0.4786], [0.3322], [0.4279], [0.0834], [0.5701], [0.4703]], [[0.8596], [0.5381], [0.4244], [0.2725], [0.7432], [0.6678], [0.6791], [0.3896], [0.6263], [0.6419], [0.6396], [0.3068], [0.8799], [0.7787], [0.6897]], [[0.8701], [0.894], [0.157], [0.683], [0.6481], [0.5013], [0.4238], [0.4464], [0.1524], [0.6315], [0.1814], [0.0237], [0.2278], [0.3284], [0.8829]], [[0.3071], [0.9836], [0.431], [0.9975], [0.265], [0.4833], [0.4124], [0.3141], [0.058], [0.036], [0.1017], [0.6453], [0.9545], [0.339], [0.2689]], [[0.8663], [0.1065], [0.9114], [0.3464], [0.1761], [0.9264], [0.2266], [0.8795], [0.7071], [0.0187], [0.7026], [0.6516], [0.1204], [0.3628], [0.2437]]]])
in0Max59222 = tf.constant([[[0.5452, 0.2014]]])
in1Max59222 = tf.constant([[[0.2091, 0.3223]]])
in0Add86875 = tf.constant([[[[0.61], [0.024]], [[0.7998], [0.6725]]]])
in1Add86875 = tf.constant([[[[0.7287], [0.1503]], [[0.384], [0.2116]]]])
in0Con38065 = tf.constant([[[[0.5631], [0.8022], [0.9359], [0.6311], [0.9089], [0.2668], [0.8437], [0.9315]], [[0.5776], [0.8685], [0.5343], [0.409], [0.2934], [0.846], [0.5112], [0.5445]]]])
in0Con27005 = tf.constant([[[[0.9313, 0.3016], [0.6101, 0.0976]], [[0.3736, 0.878], [0.311, 0.2524]]]])
print (np.array2string(model.predict([in0Con68918,in0Con22210,in0Max59222,in1Max59222,in0Add86875,in1Add86875,in0Con38065,in0Con27005],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Add68946.png')

LCon68918 = conv2D_layer([[[[0.7286, 0.0593], [0.9561, 0.8082]]]], 1, 1,[[[[0.4811, 0.1509, 0.9738, 0.8133], [0.3821, 0.8564, 0.6685, 0.6138]]]],[0, 0, 0, 0], 1, 1, false, 1, 1, Con68918), 
LDen33583 = dense_layer(Con68918, [[0.4547, 0.3636, 0.4557], [0.4437, 0.3264, 0.2447], [0.6713, 0.5008, 0.2429], [0.6983, 0.0842, 0.6892]],[0.9678, 0.9635, 0.9065], Den33583), 
LCon81286 = conv2D_transpose_layer(Den33583, 1, 2,[[[[0.1224, 0.6601, 0.6888], [0.1488, 0.202, 0.5373], [0.2066, 0.4761, 0.824], [0.2607, 0.7496, 0.2174]], [[0.6245, 0.9405, 0.8099], [0.3439, 0.2692, 0.2447], [0.5029, 0.0447, 0.086], [0.0615, 0.4244, 0.6811]]]],[0, 0, 0, 0], 1, 1, true, Con81286), 
LRes42876 = reshape_layer(Con81286, [1, 8], Res42876), 
LPer60945 = permute_layer(Res42876, 2,1, Per60945), 
LRes87568 = reshape_layer(Per60945, [8, 1, 1], Res87568), 
LZer73403 = zero_padding2D_layer(Res87568, 0, 0, 14, 0, Zer73403), 
LCon22210 = concatenate_layer([Zer73403,[[[[0.3835], [0.4625], [0.7715], [0.5401], [0.625], [0.2035], [0.818], [0.9423], [0.7216], [0.3124], [0.2102], [0.1726], [0.7802], [0.6279], [0.5862]], [[0.995], [0.4162], [0.0686], [0.8332], [0.1535], [0.251], [0.247], [0.3319], [0.9506], [0.1786], [0.9481], [0.6131], [0.5264], [0.811], [0.7171]], [[0.4922], [0.2909], [0.2065], [0.408], [0.3337], [0.0857], [0.7143], [0.4427], [0.2166], [0.5599], [0.5256], [0.6949], [0.4196], [0.9348], [0.3137]], [[0.3763], [0.8289], [0.7979], [0.1657], [0.0291], [0.578], [0.8214], [0.8597], [0.7522], [0.4786], [0.3322], [0.4279], [0.0834], [0.5701], [0.4703]], [[0.8596], [0.5381], [0.4244], [0.2725], [0.7432], [0.6678], [0.6791], [0.3896], [0.6263], [0.6419], [0.6396], [0.3068], [0.8799], [0.7787], [0.6897]], [[0.8701], [0.894], [0.157], [0.683], [0.6481], [0.5013], [0.4238], [0.4464], [0.1524], [0.6315], [0.1814], [0.0237], [0.2278], [0.3284], [0.8829]], [[0.3071], [0.9836], [0.431], [0.9975], [0.265], [0.4833], [0.4124], [0.3141], [0.058], [0.036], [0.1017], [0.6453], [0.9545], [0.339], [0.2689]], [[0.8663], [0.1065], [0.9114], [0.3464], [0.1761], [0.9264], [0.2266], [0.8795], [0.7071], [0.0187], [0.7026], [0.6516], [0.1204], [0.3628], [0.2437]]]]], 3, Con22210), 
LMax59222 = maximum_layer([[[[0.5452, 0.2014]]], [[[0.2091, 0.3223]]]], Max59222), 
LRes34872 = reshape_layer(Max59222, [1, 2, 1], Res34872), 
LZer3639 = zero_padding2D_layer(Res34872, 1, 0, 0, 0, Zer3639), 
LAdd86875 = add_layer([[[[[0.61], [0.024]], [[0.7998], [0.6725]]]], [[[[0.7287], [0.1503]], [[0.384], [0.2116]]]]], Add86875), 
LMul14409 = multiply_layer([Zer3639,Add86875], Mul14409), 
LZer28429 = zero_padding2D_layer(Mul14409, 0, 0, 6, 0, Zer28429), 
LCon38065 = concatenate_layer([Zer28429,[[[[0.5631], [0.8022], [0.9359], [0.6311], [0.9089], [0.2668], [0.8437], [0.9315]], [[0.5776], [0.8685], [0.5343], [0.409], [0.2934], [0.846], [0.5112], [0.5445]]]]], 3, Con38065), 
LCon27005 = conv2D_layer([[[[0.9313, 0.3016], [0.6101, 0.0976]], [[0.3736, 0.878], [0.311, 0.2524]]]], 2, 2,[[[[0.3077, 0.9481], [0.1431, 0.4688]], [[0.6123, 0.0331], [0.7516, 0.6277]]], [[[0.4883, 0.0561], [0.0222, 0.8101]], [[0.8774, 0.3015], [0.3274, 0.3413]]]],[0, 0], 1, 1, true, 1, 1, Con27005), 
LCon45866 = conv2D_transpose_layer(Con27005, 2, 2,[[[[0.8925, 0.2147], [0.5846, 0.2524]], [[0.016, 0.859], [0.6997, 0.8598]]], [[[0.4859, 0.4583], [0.9694, 0.3435]], [[0.4881, 0.438], [0.8003, 0.745]]]],[0, 0], 1, 4, true, Con45866), 
LAve16068 = average_layer([Con38065,Con45866], Ave16068), 
LZer33675 = zero_padding2D_layer(Ave16068, 6, 0, 7, 0, Zer33675), 
LAdd68946 = add_layer([Con22210,Zer33675], Add68946), 
exec_layers([LCon68918,LDen33583,LCon81286,LRes42876,LPer60945,LRes87568,LZer73403,LCon22210,LMax59222,LRes34872,LZer3639,LAdd86875,LMul14409,LZer28429,LCon38065,LCon27005,LCon45866,LAve16068,LZer33675,LAdd68946],["Con68918","Den33583","Con81286","Res42876","Per60945","Res87568","Zer73403","Con22210","Max59222","Res34872","Zer3639","Add86875","Mul14409","Zer28429","Con38065","Con27005","Con45866","Ave16068","Zer33675","Add68946"],Add68946,"Add68946")

Actual (Unparsed): [[[[0.0000000, 0.3835000], [0.0000000, 0.4625000], [0.0000000, 0.7715000], [0.0000000, 0.5401000], [0.0000000, 0.6250000], [0.0000000, 0.2035000], [0.0000000, 0.8180000], [0.0000000, 0.9423000], [0.0000000, 0.7216000], [0.0000000, 0.3124000], [0.0000000, 0.2102000], [0.0000000, 0.1726000], [0.0000000, 0.7802000], [0.0000000, 0.6279000], [2.4986427, 0.5862000]], [[0.0000000, 0.9950000], [0.0000000, 0.4162000], [0.0000000, 0.0686000], [0.0000000, 0.8332000], [0.0000000, 0.1535000], [0.0000000, 0.2510000], [0.0000000, 0.2470000], [0.0000000, 0.3319000], [0.0000000, 0.9506000], [0.0000000, 0.1786000], [0.0000000, 0.9481000], [0.0000000, 0.6131000], [0.0000000, 0.5264000], [0.0000000, 0.8110000], [1.5694268, 0.7171000]], [[0.0000000, 0.4922000], [0.0000000, 0.2909000], [0.0000000, 0.2065000], [0.0000000, 0.4080000], [0.0000000, 0.3337000], [0.0000000, 0.0857000], [0.0000000, 0.7143000], [0.0000000, 0.4427000], [0.0000000, 0.2166000], [0.0000000, 0.5599000], [0.0000000, 0.5256000], [0.0000000, 0.6949000], [0.0000000, 0.4196000], [0.0000000, 0.9348000], [2.6231471, 0.3137000]], [[0.0000000, 0.3763000], [0.0000000, 0.8289000], [0.0000000, 0.7979000], [0.0000000, 0.1657000], [0.0000000, 0.0291000], [0.0000000, 0.5780000], [0.0000000, 0.8214000], [0.0000000, 0.8597000], [0.0000000, 0.7522000], [0.0000000, 0.4786000], [0.0000000, 0.3322000], [0.0000000, 0.4279000], [0.0000000, 0.0834000], [0.0000000, 0.5701000], [2.1213490, 0.4703000]], [[0.0000000, 0.8596000], [0.0000000, 0.5381000], [0.0000000, 0.4244000], [0.0000000, 0.2725000], [0.0000000, 0.7432000], [0.0000000, 0.6678000], [0.0000000, 0.6791000], [0.0000000, 0.3896000], [0.0000000, 0.6263000], [0.0000000, 0.6419000], [0.0000000, 0.6396000], [0.0000000, 0.3068000], [0.0000000, 0.8799000], [0.0000000, 0.7787000], [8.0831001, 0.6897000]], [[0.0000000, 0.8701000], [0.0000000, 0.8940000], [0.0000000, 0.1570000], [0.0000000, 0.6830000], [0.0000000, 0.6481000], [0.0000000, 0.5013000], [0.0000000, 0.4238000], [0.0000000, 0.4464000], [0.0000000, 0.1524000], [0.0000000, 0.6315000], [0.0000000, 0.1814000], [0.0000000, 0.0237000], [0.0000000, 0.2278000], [0.0000000, 0.3284000], [4.0448894, 0.8829000]], [[0.0000000, 0.3071000], [0.0000000, 0.9836000], [0.0000000, 0.4310000], [0.0000000, 0.9975000], [0.0000000, 0.2650000], [0.0000000, 0.4833000], [0.0000000, 0.4124000], [0.8119549, 1.2402635], [0.8773824, 1.7933407], [0.0000000, 0.5039500], [0.0000000, 0.4172500], [0.2511042, 1.3115108], [0.3662762, 1.5772932], [0.0000000, 0.7608500], [5.3836071, 0.7346500]], [[0.0000000, 0.8663000], [0.0000000, 0.1065000], [0.0000000, 0.9114000], [0.0000000, 0.3464000], [0.0000000, 0.1761000], [0.0000000, 0.9264000], [0.0000000, 0.2266000], [1.1638481, 2.4608837], [1.1738622, 3.0457852], [0.0000000, 0.2858500], [0.0000000, 0.9071000], [0.3843200, 1.2083760], [0.4514673, 1.2260350], [0.3227039, 0.6184000], [5.4094031, 0.5159500]]]]

Expected (Unparsed): [[[[0,0.3835],[0,0.4625],[0,0.7715],[0,0.5401],[0,0.625],[0,0.2035],[0,0.818],[0,0.9423],[0,0.7216],[0,0.3124],[0,0.2102],[0,0.1726],[0,0.7802],[0,0.6279],[2.4986426133916924,0.5862]],[[0,0.995],[0,0.4162],[0,0.0686],[0,0.8332],[0,0.1535],[0,0.251],[0,0.247],[0,0.3319],[0,0.9506],[0,0.1786],[0,0.9481],[0,0.6131],[0,0.5264],[0,0.811],[1.569426788066688,0.7171]],[[0,0.4922],[0,0.2909],[0,0.2065],[0,0.408],[0,0.3337],[0,0.0857],[0,0.7143],[0,0.4427],[0,0.2166],[0,0.5599],[0,0.5256],[0,0.6949],[0,0.4196],[0,0.9348],[2.6231470926928075,0.3137]],[[0,0.3763],[0,0.8289],[0,0.7979],[0,0.1657],[0,0.0291],[0,0.578],[0,0.8214],[0,0.8597],[0,0.7522],[0,0.4786],[0,0.3322],[0,0.4279],[0,0.0834],[0,0.5701],[2.121348934279338,0.4703]],[[0,0.8596],[0,0.5381],[0,0.4244],[0,0.2725],[0,0.7432],[0,0.6678],[0,0.6791],[0,0.3896],[0,0.6263],[0,0.6419],[0,0.6396],[0,0.3068],[0,0.8799],[0,0.7787],[8.083100059269597,0.6897]],[[0,0.8701],[0,0.894],[0,0.157],[0,0.683],[0,0.6481],[0,0.5013],[0,0.4238],[0,0.4464],[0,0.1524],[0,0.6315],[0,0.1814],[0,0.0237],[0,0.2278],[0,0.3284],[4.044889357185923,0.8829]],[[0,0.3071],[0,0.9836],[0,0.431],[0,0.9975],[0,0.265],[0,0.4833],[0,0.4124],[0.8119548655270001,1.240263469884],[0.8773824211900001,1.7933407473180003],[0,0.50395],[0,0.41725],[0.251104253258,1.311510856579],[0.36627624066500003,1.5772931568605002],[0.0,0.76085],[5.383607069436049,0.73465]],[[0,0.8663],[0,0.1065],[0,0.9114],[0,0.3464],[0,0.1761],[0,0.9264],[0,0.2266],[1.163848068007,2.460883726021],[1.1738621953900001,3.0457852284870004],[0,0.28585],[0,0.9071],[0.384320022851,1.2083760354655],[0.4514672991655001,1.2260350297185],[0.32270388,0.6184000000000001],[5.409403091562554,0.51595]]]]

Actual:   [[[[0, 0.3835], [0, 0.4625], [0, 0.7715], [0, 0.5401], [0, 0.625], [0, 0.2035], [0, 0.818], [0, 0.9423], [0, 0.7216], [0, 0.3124], [0, 0.2102], [0, 0.1726], [0, 0.7802], [0, 0.6279], [2.4987, 0.5862]], [[0, 0.995], [0, 0.4162], [0, 0.0686], [0, 0.8332], [0, 0.1535], [0, 0.251], [0, 0.247], [0, 0.3319], [0, 0.9506], [0, 0.1786], [0, 0.9481], [0, 0.6131], [0, 0.5264], [0, 0.811], [1.5695, 0.7171]], [[0, 0.4922], [0, 0.2909], [0, 0.2065], [0, 0.408], [0, 0.3337], [0, 0.0857], [0, 0.7143], [0, 0.4427], [0, 0.2166], [0, 0.5599], [0, 0.5256], [0, 0.6949], [0, 0.4196], [0, 0.9348], [2.6232, 0.3137]], [[0, 0.3763], [0, 0.8289], [0, 0.7979], [0, 0.1657], [0, 0.0291], [0, 0.578], [0, 0.8214], [0, 0.8597], [0, 0.7522], [0, 0.4786], [0, 0.3322], [0, 0.4279], [0, 0.0834], [0, 0.5701], [2.1214, 0.4703]], [[0, 0.8596], [0, 0.5381], [0, 0.4244], [0, 0.2725], [0, 0.7432], [0, 0.6678], [0, 0.6791], [0, 0.3896], [0, 0.6263], [0, 0.6419], [0, 0.6396], [0, 0.3068], [0, 0.8799], [0, 0.7787], [8.0832, 0.6897]], [[0, 0.8701], [0, 0.894], [0, 0.157], [0, 0.683], [0, 0.6481], [0, 0.5013], [0, 0.4238], [0, 0.4464], [0, 0.1524], [0, 0.6315], [0, 0.1814], [0, 0.0237], [0, 0.2278], [0, 0.3284], [4.0449, 0.8829]], [[0, 0.3071], [0, 0.9836], [0, 0.431], [0, 0.9975], [0, 0.265], [0, 0.4833], [0, 0.4124], [0.812, 1.2403], [0.8774, 1.7934], [0, 0.504], [0, 0.4173], [0.2512, 1.3116], [0.3663, 1.5773], [0, 0.7609], [5.3837, 0.7347]], [[0, 0.8663], [0, 0.1065], [0, 0.9114], [0, 0.3464], [0, 0.1761], [0, 0.9264], [0, 0.2266], [1.1639, 2.4609], [1.1739, 3.0458], [0, 0.2859], [0, 0.9071], [0.3844, 1.2084], [0.4515, 1.2261], [0.3228, 0.6184], [5.4095, 0.516]]]]

Expected: [[[[0, 0.3835], [0, 0.4625], [0, 0.7715], [0, 0.5401], [0, 0.625], [0, 0.2035], [0, 0.818], [0, 0.9423], [0, 0.7216], [0, 0.3124], [0, 0.2102], [0, 0.1726], [0, 0.7802], [0, 0.6279], [2.4987, 0.5862]], [[0, 0.995], [0, 0.4162], [0, 0.0686], [0, 0.8332], [0, 0.1535], [0, 0.251], [0, 0.247], [0, 0.3319], [0, 0.9506], [0, 0.1786], [0, 0.9481], [0, 0.6131], [0, 0.5264], [0, 0.811], [1.5695, 0.7171]], [[0, 0.4922], [0, 0.2909], [0, 0.2065], [0, 0.408], [0, 0.3337], [0, 0.0857], [0, 0.7143], [0, 0.4427], [0, 0.2166], [0, 0.5599], [0, 0.5256], [0, 0.6949], [0, 0.4196], [0, 0.9348], [2.6232, 0.3137]], [[0, 0.3763], [0, 0.8289], [0, 0.7979], [0, 0.1657], [0, 0.0291], [0, 0.578], [0, 0.8214], [0, 0.8597], [0, 0.7522], [0, 0.4786], [0, 0.3322], [0, 0.4279], [0, 0.0834], [0, 0.5701], [2.1214, 0.4703]], [[0, 0.8596], [0, 0.5381], [0, 0.4244], [0, 0.2725], [0, 0.7432], [0, 0.6678], [0, 0.6791], [0, 0.3896], [0, 0.6263], [0, 0.6419], [0, 0.6396], [0, 0.3068], [0, 0.8799], [0, 0.7787], [8.0832, 0.6897]], [[0, 0.8701], [0, 0.894], [0, 0.157], [0, 0.683], [0, 0.6481], [0, 0.5013], [0, 0.4238], [0, 0.4464], [0, 0.1524], [0, 0.6315], [0, 0.1814], [0, 0.0237], [0, 0.2278], [0, 0.3284], [4.0449, 0.8829]], [[0, 0.3071], [0, 0.9836], [0, 0.431], [0, 0.9975], [0, 0.265], [0, 0.4833], [0, 0.4124], [0.812, 1.2403], [0.8774, 1.7934], [0, 0.504], [0, 0.4173], [0.2512, 1.3116], [0.3663, 1.5773], [0, 0.7609], [5.3837, 0.7347]], [[0, 0.8663], [0, 0.1065], [0, 0.9114], [0, 0.3464], [0, 0.1761], [0, 0.9264], [0, 0.2266], [1.1639, 2.4609], [1.1739, 3.0458], [0, 0.2859], [0, 0.9071], [0.3844, 1.2084], [0.4515, 1.2261], [0.3228, 0.6185], [5.4095, 0.516]]]]