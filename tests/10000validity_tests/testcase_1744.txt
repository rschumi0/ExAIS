import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Max65066 = tf.keras.layers.Input(shape=([1, 1, 2]))
in0Con44642 = tf.keras.layers.Input(shape=([2, 3, 3, 1]))
in0Sub16621 = tf.keras.layers.Input(shape=([2, 3, 3, 2]))
in1Sub16621 = tf.keras.layers.Input(shape=([2, 3, 3, 2]))
in0Mul60423 = tf.keras.layers.Input(shape=([2, 2, 2, 1]))
in1Mul60423 = tf.keras.layers.Input(shape=([2, 2, 2, 1]))
in0Con17490 = tf.keras.layers.Input(shape=([2, 3, 3, 1]))

Max65066 = keras.layers.MaxPool2D(pool_size=(1, 1), strides=(1, 1), padding='valid', name = 'Max65066', )(in0Max65066)
Mas73234 = keras.layers.Masking(mask_value=1, name = 'Mas73234', )(Max65066)
Fla54565 = keras.layers.Flatten(name = 'Fla54565', )(Mas73234)
Res31129 = keras.layers.Reshape((2, 1), name = 'Res31129', )(Fla54565)
Res4908 = keras.layers.Reshape((2, 1, 1), name = 'Res4908', )(Res31129)
Res42878 = keras.layers.Reshape((2, 1, 1, 1), name = 'Res42878', )(Res4908)
Zer19418 = keras.layers.ZeroPadding3D(padding=((0, 0), (2, 0), (2, 0)), name = 'Zer19418', )(Res42878)
Con44642 = keras.layers.Concatenate(axis=4, name = 'Con44642', )([Zer19418,in0Con44642])
Sub16621 = keras.layers.Subtract(name = 'Sub16621', )([in0Sub16621,in1Sub16621])
Add27206 = keras.layers.Add(name = 'Add27206', )([Con44642,Sub16621])
Mul60423 = keras.layers.Multiply(name = 'Mul60423', )([in0Mul60423,in1Mul60423])
Zer47156 = keras.layers.ZeroPadding3D(padding=((0, 0), (1, 0), (1, 0)), name = 'Zer47156', )(Mul60423)
Con17490 = keras.layers.Concatenate(axis=4, name = 'Con17490', )([Zer47156,in0Con17490])
Mul3494 = keras.layers.Multiply(name = 'Mul3494', )([Add27206,Con17490])
model = tf.keras.models.Model(inputs=[in0Max65066,in0Con44642,in0Sub16621,in1Sub16621,in0Mul60423,in1Mul60423,in0Con17490], outputs=Mul3494)
in0Max65066 = tf.constant([[[[1.6905, 1.8087]]]])
in0Con44642 = tf.constant([[[[[0.9716], [0.9781], [0.7551]], [[0.6673], [0.191], [0.6842]], [[0.3458], [0.7817], [0.0325]]], [[[0.1219], [0.3729], [0.7354]], [[0.4714], [0.5886], [0.0426]], [[0.9336], [0.0662], [0.1407]]]]])
in0Sub16621 = tf.constant([[[[[0.2468, 0.6765], [0.9771, 0.166], [0.4017, 0.4104]], [[0.8171, 0.0775], [0.1605, 0.1514], [0.0205, 0.1421]], [[0.8903, 0.8771], [0.6017, 0.8908], [0.7044, 0.128]]], [[[0.9846, 0.6915], [0.9558, 0.209], [0.7864, 0.9507]], [[0.0066, 0.5264], [0.408, 0.1115], [0.7198, 0.0325]], [[0.014, 0.8694], [0.9342, 0.2559], [0.9995, 0.3641]]]]])
in1Sub16621 = tf.constant([[[[[0.6429, 0.8032], [0.7078, 0.8425], [0.7238, 0.5405]], [[0.9911, 0.435], [0.8452, 0.8817], [0.1841, 0.2381]], [[0.6053, 0.743], [0.2023, 0.8539], [0.0558, 0.7599]]], [[[0.7665, 0.9035], [0.5045, 0.3022], [0.2092, 0.7995]], [[0.8997, 0.6749], [0.9213, 0.2394], [0.153, 0.6454]], [[0.2636, 0.4683], [0.4778, 0.0988], [0.6838, 0.3428]]]]])
in0Mul60423 = tf.constant([[[[[0.1902], [0.1912]], [[0.8565], [0.6299]]], [[[0.4481], [0.8441]], [[0.8951], [0.7697]]]]])
in1Mul60423 = tf.constant([[[[[0.0883], [0.8033]], [[0.0704], [0.5463]]], [[[0.0645], [0.7708]], [[0.0185], [0.7175]]]]])
in0Con17490 = tf.constant([[[[[0.1849], [0.0984], [0.4389]], [[0.9616], [0.4272], [0.6416]], [[0.9512], [0.9161], [0.6979]]], [[[0.1175], [0.7596], [0.4003]], [[0.1548], [0.1149], [0.1553]], [[0.5595], [0.7135], [0.5194]]]]])
print (np.array2string(model.predict([in0Max65066,in0Con44642,in0Sub16621,in1Sub16621,in0Mul60423,in1Mul60423,in0Con17490],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Mul3494.png')

LMax65066 = max_pool2D_layer([[[[1.6905, 1.8087]]]], 1, 1, 1, 1, false, Max65066), 
LMas73234 = masking_layer(Max65066, 1, Mas73234), 
LFla54565 = flatten_layer(Mas73234, Fla54565), 
LRes31129 = reshape_layer(Fla54565, [2, 1], Res31129), 
LRes4908 = reshape_layer(Res31129, [2, 1, 1], Res4908), 
LRes42878 = reshape_layer(Res4908, [2, 1, 1, 1], Res42878), 
LZer19418 = zero_padding3D_layer(Res42878, 0, 0, 2, 0, 2, 0, Zer19418), 
LCon44642 = concatenate_layer([Zer19418,[[[[[0.9716], [0.9781], [0.7551]], [[0.6673], [0.191], [0.6842]], [[0.3458], [0.7817], [0.0325]]], [[[0.1219], [0.3729], [0.7354]], [[0.4714], [0.5886], [0.0426]], [[0.9336], [0.0662], [0.1407]]]]]], 4, Con44642), 
LSub16621 = subtract_layer([[[[[0.2468, 0.6765], [0.9771, 0.166], [0.4017, 0.4104]], [[0.8171, 0.0775], [0.1605, 0.1514], [0.0205, 0.1421]], [[0.8903, 0.8771], [0.6017, 0.8908], [0.7044, 0.128]]], [[[0.9846, 0.6915], [0.9558, 0.209], [0.7864, 0.9507]], [[0.0066, 0.5264], [0.408, 0.1115], [0.7198, 0.0325]], [[0.014, 0.8694], [0.9342, 0.2559], [0.9995, 0.3641]]]]], [[[[[0.6429, 0.8032], [0.7078, 0.8425], [0.7238, 0.5405]], [[0.9911, 0.435], [0.8452, 0.8817], [0.1841, 0.2381]], [[0.6053, 0.743], [0.2023, 0.8539], [0.0558, 0.7599]]], [[[0.7665, 0.9035], [0.5045, 0.3022], [0.2092, 0.7995]], [[0.8997, 0.6749], [0.9213, 0.2394], [0.153, 0.6454]], [[0.2636, 0.4683], [0.4778, 0.0988], [0.6838, 0.3428]]]]], Sub16621), 
LAdd27206 = add_layer([Con44642,Sub16621], Add27206), 
LMul60423 = multiply_layer([[[[[[0.1902], [0.1912]], [[0.8565], [0.6299]]], [[[0.4481], [0.8441]], [[0.8951], [0.7697]]]]], [[[[[0.0883], [0.8033]], [[0.0704], [0.5463]]], [[[0.0645], [0.7708]], [[0.0185], [0.7175]]]]]], Mul60423), 
LZer47156 = zero_padding3D_layer(Mul60423, 0, 0, 1, 0, 1, 0, Zer47156), 
LCon17490 = concatenate_layer([Zer47156,[[[[[0.1849], [0.0984], [0.4389]], [[0.9616], [0.4272], [0.6416]], [[0.9512], [0.9161], [0.6979]]], [[[0.1175], [0.7596], [0.4003]], [[0.1548], [0.1149], [0.1553]], [[0.5595], [0.7135], [0.5194]]]]]], 4, Con17490), 
LMul3494 = multiply_layer([Add27206,Con17490], Mul3494), 
exec_layers([LMax65066,LMas73234,LFla54565,LRes31129,LRes4908,LRes42878,LZer19418,LCon44642,LSub16621,LAdd27206,LMul60423,LZer47156,LCon17490,LMul3494],["Max65066","Mas73234","Fla54565","Res31129","Res4908","Res42878","Zer19418","Con44642","Sub16621","Add27206","Mul60423","Zer47156","Con17490","Mul3494"],Mul3494,"Mul3494")

Actual (Unparsed): [[[[[-0.0000000, 0.1562220], [0.0000000, 0.0296774], [-0.0000000, 0.2743125]], [[-0.0000000, 0.2979037], [-0.0114993, -0.2303889], [-0.0251275, 0.3773891]], [[0.0000000, 0.4564809], [0.0240829, 0.7499195], [0.8049179, -0.4183212]]], [[[0.0000000, -0.0105868], [0.0000000, 0.2124601], [0.0000000, 0.3549060]], [[-0.0000000, 0.0499849], [-0.0148356, 0.0529344], [0.3687784, -0.0885676]], [[-0.0000000, 0.7467646], [0.0075577, 0.1593246], [1.1732205, 0.0841428]]]]]

Expected (Unparsed): [[[[[-0.0,0.15622201],[0.0,0.02967744],[-0.0,0.2743125]],[[-0.0,0.29790368],[-0.011499303702000002,-0.23038896000000006],[-0.025127481056000003,0.37738912]],[[0.0,0.45648088000000003],[0.024082861440000002,0.74991946],[0.804917922867,-0.41832126000000003]]],[[[0.0,-0.010586749999999995],[0.0,0.21246011999999997],[0.0,0.35490598]],[[-0.0,0.04998491999999998],[-0.014835627585000002,0.05293443],[0.36877837630399996,-0.08856759]],[[-0.0,0.74676465],[0.007557687340000001,0.15932455],[1.1732206129000002,0.08414279999999999]]]]]

Actual:   [[[[[-0, 0.1563], [0, 0.0297], [-0, 0.2744]], [[-0, 0.298], [-0.0114, -0.2303], [-0.0251, 0.3774]], [[0, 0.4565], [0.0241, 0.75], [0.805, -0.4183]]], [[[0, -0.0105], [0, 0.2125], [0, 0.355]], [[-0, 0.05], [-0.0148, 0.053], [0.3688, -0.0885]], [[-0, 0.7468], [0.0076, 0.1594], [1.1733, 0.0842]]]]]

Expected: [[[[[-0, 0.1563], [0, 0.0297], [-0, 0.2744]], [[-0, 0.298], [-0.0114, -0.2303], [-0.0251, 0.3774]], [[0, 0.4565], [0.0241, 0.75], [0.805, -0.4183]]], [[[0, -0.0105], [0, 0.2125], [0, 0.355]], [[-0, 0.05], [-0.0148, 0.053], [0.3688, -0.0885]], [[-0, 0.7468], [0.0076, 0.1594], [1.1733, 0.0842]]]]]