import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Cro14875 = tf.keras.layers.Input(shape=([1, 2, 3, 2]))
in0Con22925 = tf.keras.layers.Input(shape=([4]))
in0Sub31618 = tf.keras.layers.Input(shape=([3, 2]))
in1Sub31618 = tf.keras.layers.Input(shape=([3, 2]))
in0Con63269 = tf.keras.layers.Input(shape=([2]))
in0Min94366 = tf.keras.layers.Input(shape=([2, 2, 2]))
in1Min94366 = tf.keras.layers.Input(shape=([2, 2, 2]))
in0Max50798 = tf.keras.layers.Input(shape=([1, 2, 2, 2]))
in1Max50798 = tf.keras.layers.Input(shape=([1, 2, 2, 2]))
in0Con34730 = tf.keras.layers.Input(shape=([6]))

Cro14875 = keras.layers.Cropping3D(cropping=((0, 0), (0, 1), (1, 0)), name = 'Cro14875', )(in0Cro14875)
Res43643 = keras.layers.Reshape((1, 1, 4), name = 'Res43643', )(Cro14875)
Glo82608 = keras.layers.GlobalAveragePooling2D(name = 'Glo82608', )(Res43643)
Con22925 = keras.layers.Concatenate(axis=1, name = 'Con22925', )([Glo82608,in0Con22925])
Sub31618 = keras.layers.Subtract(name = 'Sub31618', )([in0Sub31618,in1Sub31618])
Fla76884 = keras.layers.Flatten(name = 'Fla76884', )(Sub31618)
Con63269 = keras.layers.Concatenate(axis=1, name = 'Con63269', )([Fla76884,in0Con63269])
Min94366 = keras.layers.Minimum(name = 'Min94366', )([in0Min94366,in1Min94366])
Res81928 = keras.layers.Reshape((2, 4), name = 'Res81928', )(Min94366)
Fla91190 = keras.layers.Flatten(name = 'Fla91190', )(Res81928)
Max50798 = keras.layers.Maximum(name = 'Max50798', )([in0Max50798,in1Max50798])
Glo18240 = keras.layers.GlobalMaxPool3D(name = 'Glo18240', )(Max50798)
Con34730 = keras.layers.Concatenate(axis=1, name = 'Con34730', )([Glo18240,in0Con34730])
Mul32788 = keras.layers.Multiply(name = 'Mul32788', )([Fla91190,Con34730])
Sub67489 = keras.layers.Subtract(name = 'Sub67489', )([Con63269,Mul32788])
Ave88632 = keras.layers.Average(name = 'Ave88632', )([Con22925,Sub67489])
Mas93567 = keras.layers.Masking(mask_value=2, name = 'Mas93567', )(Ave88632)
model = tf.keras.models.Model(inputs=[in0Cro14875,in0Con22925,in0Sub31618,in1Sub31618,in0Con63269,in0Min94366,in1Min94366,in0Max50798,in1Max50798,in0Con34730], outputs=Mas93567)
in0Cro14875 = tf.constant([[[[[1.1002, 1.8344], [1.6366, 1.5906], [1.8762, 1.5022]], [[1.6428, 1.3799], [1.9397, 1.4279], [1.9676, 1.1388]]]]])
in0Con22925 = tf.constant([[0.6797, 0.113, 0.3599, 0.0174]])
in0Sub31618 = tf.constant([[[0.0769, 0.8565], [0.3873, 0.3307], [0.1035, 0.7968]]])
in1Sub31618 = tf.constant([[[0.4626, 0.4073], [0.9868, 0.0227], [0.9771, 0.8229]]])
in0Con63269 = tf.constant([[0.9398, 0.0415]])
in0Min94366 = tf.constant([[[[0.3569, 0.1208], [0.3902, 0.4535]], [[0.0186, 0.0854], [0.5624, 0.6942]]]])
in1Min94366 = tf.constant([[[[0.029, 0.2308], [0.9126, 0.8543]], [[0.0091, 0.8678], [0.724, 0.7254]]]])
in0Max50798 = tf.constant([[[[[0.6222, 0.2744], [0.5367, 0.3602]], [[0.5705, 0.9812], [0.4303, 0.1648]]]]])
in1Max50798 = tf.constant([[[[[0.0354, 0.2856], [0.5346, 0.3822]], [[0.221, 0.2114], [0.2857, 0.9251]]]]])
in0Con34730 = tf.constant([[0.856, 0.6144, 0.6661, 0.139, 0.3826, 0.2839]])
print (np.array2string(model.predict([in0Cro14875,in0Con22925,in0Sub31618,in1Sub31618,in0Con63269,in0Min94366,in1Min94366,in0Max50798,in1Max50798,in0Con34730],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Mas93567.png')

LCro14875 = cropping3D_layer([[[[[1.1002, 1.8344], [1.6366, 1.5906], [1.8762, 1.5022]], [[1.6428, 1.3799], [1.9397, 1.4279], [1.9676, 1.1388]]]]], 0, 0, 0, 1, 1, 0, Cro14875), 
LRes43643 = reshape_layer(Cro14875, [1, 1, 4], Res43643), 
LGlo82608 = global_average_pooling2D_layer(Res43643, Glo82608), 
LCon22925 = concatenate_layer([Glo82608,[[0.6797, 0.113, 0.3599, 0.0174]]], 1, Con22925), 
LSub31618 = subtract_layer([[[0.0769, 0.8565], [0.3873, 0.3307], [0.1035, 0.7968]]], [[[0.4626, 0.4073], [0.9868, 0.0227], [0.9771, 0.8229]]], Sub31618), 
LFla76884 = flatten_layer(Sub31618, Fla76884), 
LCon63269 = concatenate_layer([Fla76884,[[0.9398, 0.0415]]], 1, Con63269), 
LMin94366 = minimum_layer([[[[[0.3569, 0.1208], [0.3902, 0.4535]], [[0.0186, 0.0854], [0.5624, 0.6942]]]], [[[[0.029, 0.2308], [0.9126, 0.8543]], [[0.0091, 0.8678], [0.724, 0.7254]]]]], Min94366), 
LRes81928 = reshape_layer(Min94366, [2, 4], Res81928), 
LFla91190 = flatten_layer(Res81928, Fla91190), 
LMax50798 = maximum_layer([[[[[[0.6222, 0.2744], [0.5367, 0.3602]], [[0.5705, 0.9812], [0.4303, 0.1648]]]]], [[[[[0.0354, 0.2856], [0.5346, 0.3822]], [[0.221, 0.2114], [0.2857, 0.9251]]]]]], Max50798), 
LGlo18240 = global_max_pool3D_layer(Max50798, Glo18240), 
LCon34730 = concatenate_layer([Glo18240,[[0.856, 0.6144, 0.6661, 0.139, 0.3826, 0.2839]]], 1, Con34730), 
LMul32788 = multiply_layer([Fla91190,Con34730], Mul32788), 
LSub67489 = subtract_layer(Con63269,Mul32788, Sub67489), 
LAve88632 = average_layer([Con22925,Sub67489], Ave88632), 
LMas93567 = masking_layer(Ave88632, 2, Mas93567), 
exec_layers([LCro14875,LRes43643,LGlo82608,LCon22925,LSub31618,LFla76884,LCon63269,LMin94366,LRes81928,LFla91190,LMax50798,LGlo18240,LCon34730,LMul32788,LSub67489,LAve88632,LMas93567],["Cro14875","Res43643","Glo82608","Con22925","Sub31618","Fla76884","Con63269","Min94366","Res81928","Fla91190","Max50798","Glo18240","Con34730","Mul32788","Sub67489","Ave88632","Mas93567"],Mas93567,"Mas93567")

Actual (Unparsed): [[0.6164281, 0.9606355, 0.4713444, 0.7657848, -0.0999808, 0.0375147, 0.5422629, -0.0690917]]

Expected (Unparsed): [[0.6164281,0.9606355200000001,0.4713444,0.7657848,-0.09998075499999998,0.0375147,0.54226288,-0.06909169]]

Actual:   [[0.6165, 0.9607, 0.4714, 0.7658, -0.0999, 0.0376, 0.5423, -0.069]]

Expected: [[0.6165, 0.9607, 0.4714, 0.7658, -0.0999, 0.0376, 0.5423, -0.069]]