import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Up_13823 = tf.keras.layers.Input(shape=([1, 3, 1]))
in0Con68188 = tf.keras.layers.Input(shape=([2, 6, 1, 1]))
in0Add68987 = tf.keras.layers.Input(shape=([2, 1, 1, 1]))
in1Add68987 = tf.keras.layers.Input(shape=([2, 1, 1, 1]))
in0Con31381 = tf.keras.layers.Input(shape=([2, 2, 1, 1]))
in0Lea81781 = tf.keras.layers.Input(shape=([2, 2, 1, 2]))

Up_13823 = keras.layers.UpSampling2D(size=(2, 2), name = 'Up_13823', )(in0Up_13823)
Res64092 = keras.layers.Reshape((2, 6, 1, 1), name = 'Res64092', )(Up_13823)
Con68188 = keras.layers.Concatenate(axis=4, name = 'Con68188', )([Res64092,in0Con68188])
Add68987 = keras.layers.Add(name = 'Add68987', )([in0Add68987,in1Add68987])
Zer20427 = keras.layers.ZeroPadding3D(padding=((0, 0), (1, 0), (0, 0)), name = 'Zer20427', )(Add68987)
Con31381 = keras.layers.Concatenate(axis=4, name = 'Con31381', )([Zer20427,in0Con31381])
Lea81781 = keras.layers.LeakyReLU(alpha=4.528020372378198, name = 'Lea81781', input_shape=(2, 2, 1, 2))(in0Lea81781)
Mul30303 = keras.layers.Multiply(name = 'Mul30303', )([Con31381,Lea81781])
Zer88804 = keras.layers.ZeroPadding3D(padding=((0, 0), (4, 0), (0, 0)), name = 'Zer88804', )(Mul30303)
Min91699 = keras.layers.Minimum(name = 'Min91699', )([Con68188,Zer88804])
model = tf.keras.models.Model(inputs=[in0Up_13823,in0Con68188,in0Add68987,in1Add68987,in0Con31381,in0Lea81781], outputs=Min91699)
in0Up_13823 = tf.constant([[[[1.9939], [1.3847], [1.4884]]]])
in0Con68188 = tf.constant([[[[[0.3464]], [[0.2825]], [[0.2742]], [[0.9866]], [[0.5071]], [[0.9358]]], [[[0.5182]], [[0.5092]], [[0.6284]], [[0.264]], [[0.8725]], [[0.9591]]]]])
in0Add68987 = tf.constant([[[[[0.8518]]], [[[0.9075]]]]])
in1Add68987 = tf.constant([[[[[0.2538]]], [[[0.3605]]]]])
in0Con31381 = tf.constant([[[[[0.5974]], [[0.4604]]], [[[0.3974]], [[0.8491]]]]])
in0Lea81781 = tf.constant([[[[[0.3798, 0.2865]], [[0.0311, 0.5483]]], [[[0.0392, 0.1372]], [[0.9644, 0.9424]]]]])
print (np.array2string(model.predict([in0Up_13823,in0Con68188,in0Add68987,in1Add68987,in0Con31381,in0Lea81781],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Min91699.png')

LUp_13823 = up_sampling2D_layer([[[[1.9939], [1.3847], [1.4884]]]], 2, 2, Up_13823), 
LRes64092 = reshape_layer(Up_13823, [2, 6, 1, 1], Res64092), 
LCon68188 = concatenate_layer([Res64092,[[[[[0.3464]], [[0.2825]], [[0.2742]], [[0.9866]], [[0.5071]], [[0.9358]]], [[[0.5182]], [[0.5092]], [[0.6284]], [[0.264]], [[0.8725]], [[0.9591]]]]]], 4, Con68188), 
LAdd68987 = add_layer([[[[[[0.8518]]], [[[0.9075]]]]], [[[[[0.2538]]], [[[0.3605]]]]]], Add68987), 
LZer20427 = zero_padding3D_layer(Add68987, 0, 0, 1, 0, 0, 0, Zer20427), 
LCon31381 = concatenate_layer([Zer20427,[[[[[0.5974]], [[0.4604]]], [[[0.3974]], [[0.8491]]]]]], 4, Con31381), 
LLea81781 = leaky_relu_layer([[[[[0.3798, 0.2865]], [[0.0311, 0.5483]]], [[[0.0392, 0.1372]], [[0.9644, 0.9424]]]]], 4.528020372378198, Lea81781), 
LMul30303 = multiply_layer([Con31381,Lea81781], Mul30303), 
LZer88804 = zero_padding3D_layer(Mul30303, 0, 0, 4, 0, 0, 0, Zer88804), 
LMin91699 = minimum_layer([Con68188,Zer88804], Min91699), 
exec_layers([LUp_13823,LRes64092,LCon68188,LAdd68987,LZer20427,LCon31381,LLea81781,LMul30303,LZer88804,LMin91699],["Up_13823","Res64092","Con68188","Add68987","Zer20427","Con31381","Lea81781","Mul30303","Zer88804","Min91699"],Min91699,"Min91699")

Actual (Unparsed): [[[[[0.0000000, 0.0000000]], [[0.0000000, 0.0000000]], [[0.0000000, 0.0000000]], [[0.0000000, 0.0000000]], [[0.0000000, 0.1711551]], [[0.0343842, 0.2524373]]], [[[0.0000000, 0.0000000]], [[0.0000000, 0.0000000]], [[0.0000000, 0.0000000]], [[0.0000000, 0.0000000]], [[0.0000000, 0.0545233]], [[1.2228592, 0.8001918]]]]]

Expected (Unparsed): [[[[[0,0]],[[0,0]],[[0,0]],[[0,0]],[[0.0,0.1711551]],[[0.03438416,0.25243731999999997]]],[[[0,0]],[[0,0]],[[0,0]],[[0,0]],[[0.0,0.05452327999999999]],[[1.2228592,0.80019184]]]]]

Actual:   [[[[[0, 0]], [[0, 0]], [[0, 0]], [[0, 0]], [[0, 0.1712]], [[0.0344, 0.2525]]], [[[0, 0]], [[0, 0]], [[0, 0]], [[0, 0]], [[0, 0.0546]], [[1.2229, 0.8002]]]]]

Expected: [[[[[0, 0]], [[0, 0]], [[0, 0]], [[0, 0]], [[0, 0.1712]], [[0.0344, 0.2525]]], [[[0, 0]], [[0, 0]], [[0, 0]], [[0, 0]], [[0, 0.0546]], [[1.2229, 0.8002]]]]]