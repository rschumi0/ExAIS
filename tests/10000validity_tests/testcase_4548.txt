import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Ave23798 = tf.keras.layers.Input(shape=([1, 2, 2, 2]))
in1Ave23798 = tf.keras.layers.Input(shape=([1, 2, 2, 2]))
in0Mul33649 = tf.keras.layers.Input(shape=([2, 1, 1]))
in1Mul33649 = tf.keras.layers.Input(shape=([2, 1, 1]))
in0Con30654 = tf.keras.layers.Input(shape=([2, 3, 3]))
in0Ave9178 = tf.keras.layers.Input(shape=([2, 2, 2]))
in1Ave9178 = tf.keras.layers.Input(shape=([2, 2, 2]))
in0Glo14595 = tf.keras.layers.Input(shape=([2, 2]))
in0Con17730 = tf.keras.layers.Input(shape=([6]))
in0Con95955 = tf.keras.layers.Input(shape=([16]))
in0Glo6016 = tf.keras.layers.Input(shape=([1, 1, 1]))

Ave23798 = keras.layers.Average(name = 'Ave23798', )([in0Ave23798,in1Ave23798])
Res86563 = keras.layers.Reshape((1, 2, 4), name = 'Res86563', )(Ave23798)
Zer14084 = keras.layers.ZeroPadding2D(padding=((1, 0), (1, 0)), name = 'Zer14084', )(Res86563)
Mul33649 = keras.layers.Multiply(name = 'Mul33649', )([in0Mul33649,in1Mul33649])
Zer24872 = keras.layers.ZeroPadding2D(padding=((0, 0), (2, 0)), name = 'Zer24872', )(Mul33649)
Con30654 = keras.layers.Concatenate(axis=3, name = 'Con30654', )([Zer24872,in0Con30654])
Ave83998 = keras.layers.Average(name = 'Ave83998', )([Zer14084,Con30654])
Res43095 = keras.layers.Reshape((2, 12), name = 'Res43095', )(Ave83998)
Fla33423 = keras.layers.Flatten(name = 'Fla33423', )(Res43095)
Ave9178 = keras.layers.Average(name = 'Ave9178', )([in0Ave9178,in1Ave9178])
Res43567 = keras.layers.Reshape((2, 4), name = 'Res43567', )(Ave9178)
Per46771 = keras.layers.Permute((1,2), name = 'Per46771',)(Res43567)
Fla416 = keras.layers.Flatten(name = 'Fla416', )(Per46771)
Glo14595 = keras.layers.GlobalAveragePooling1D(name = 'Glo14595', )(in0Glo14595)
Con17730 = keras.layers.Concatenate(axis=1, name = 'Con17730', )([Glo14595,in0Con17730])
Min57973 = keras.layers.Minimum(name = 'Min57973', )([Fla416,Con17730])
Con95955 = keras.layers.Concatenate(axis=1, name = 'Con95955', )([Min57973,in0Con95955])
Min72266 = keras.layers.Minimum(name = 'Min72266', )([Fla33423,Con95955])
Res6427 = keras.layers.Reshape((24, 1), name = 'Res6427', )(Min72266)
Glo6016 = keras.layers.GlobalAveragePooling2D(name = 'Glo6016', )(in0Glo6016)
Res12096 = keras.layers.Reshape((1, 1), name = 'Res12096', )(Glo6016)
Zer59429 = keras.layers.ZeroPadding1D(padding=((1, 1)), name = 'Zer59429', )(Res12096)
Zer4629 = keras.layers.ZeroPadding1D(padding=((21, 0)), name = 'Zer4629', )(Zer59429)
Min92785 = keras.layers.Minimum(name = 'Min92785', )([Res6427,Zer4629])
model = tf.keras.models.Model(inputs=[in0Ave23798,in1Ave23798,in0Mul33649,in1Mul33649,in0Con30654,in0Ave9178,in1Ave9178,in0Glo14595,in0Con17730,in0Con95955,in0Glo6016], outputs=Min92785)
in0Ave23798 = tf.constant([[[[[0.7547, 0.4524], [0.3402, 0.58]], [[0.4311, 0.4117], [0.2678, 0.7617]]]]])
in1Ave23798 = tf.constant([[[[[0.4444, 0.2019], [0.783, 0.671]], [[0.9142, 0.0658], [0.2087, 0.0207]]]]])
in0Mul33649 = tf.constant([[[[0.3775]], [[0.8982]]]])
in1Mul33649 = tf.constant([[[[0.4052]], [[0.3555]]]])
in0Con30654 = tf.constant([[[[0.7053, 0.2584, 0.8007], [0.0952, 0.4944, 0.4165], [0.8097, 0.5046, 0.5831]], [[0.9927, 0.7372, 0.1738], [0.9517, 0.4285, 0.977], [0.194, 0.3391, 0.0358]]]])
in0Ave9178 = tf.constant([[[[0.8753, 0.0703], [0.0483, 0.7607]], [[0.9217, 0.4055], [0.5769, 0.0625]]]])
in1Ave9178 = tf.constant([[[[0.3361, 0.2911], [0.0459, 0.4609]], [[0.3748, 0.0872], [0.5898, 0.3635]]]])
in0Glo14595 = tf.constant([[[1.3312, 1.71], [1.4531, 1.0354]]])
in0Con17730 = tf.constant([[0.8938, 0.7243, 0.8822, 0.3259, 0.5507, 0.5082]])
in0Con95955 = tf.constant([[0.8374, 0.4041, 0.9724, 0.674, 0.8632, 0.1916, 0.0646, 0.1842, 0.4928, 0.3663, 0.6945, 0.4999, 0.5283, 0.103, 0.944, 0.1475]])
in0Glo6016 = tf.constant([[[[1.7939]]]])
print (np.array2string(model.predict([in0Ave23798,in1Ave23798,in0Mul33649,in1Mul33649,in0Con30654,in0Ave9178,in1Ave9178,in0Glo14595,in0Con17730,in0Con95955,in0Glo6016],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Min92785.png')

LAve23798 = average_layer([[[[[[0.7547, 0.4524], [0.3402, 0.58]], [[0.4311, 0.4117], [0.2678, 0.7617]]]]], [[[[[0.4444, 0.2019], [0.783, 0.671]], [[0.9142, 0.0658], [0.2087, 0.0207]]]]]], Ave23798), 
LRes86563 = reshape_layer(Ave23798, [1, 2, 4], Res86563), 
LZer14084 = zero_padding2D_layer(Res86563, 1, 0, 1, 0, Zer14084), 
LMul33649 = multiply_layer([[[[[0.3775]], [[0.8982]]]], [[[[0.4052]], [[0.3555]]]]], Mul33649), 
LZer24872 = zero_padding2D_layer(Mul33649, 0, 0, 2, 0, Zer24872), 
LCon30654 = concatenate_layer([Zer24872,[[[[0.7053, 0.2584, 0.8007], [0.0952, 0.4944, 0.4165], [0.8097, 0.5046, 0.5831]], [[0.9927, 0.7372, 0.1738], [0.9517, 0.4285, 0.977], [0.194, 0.3391, 0.0358]]]]], 3, Con30654), 
LAve83998 = average_layer([Zer14084,Con30654], Ave83998), 
LRes43095 = reshape_layer(Ave83998, [2, 12], Res43095), 
LFla33423 = flatten_layer(Res43095, Fla33423), 
LAve9178 = average_layer([[[[[0.8753, 0.0703], [0.0483, 0.7607]], [[0.9217, 0.4055], [0.5769, 0.0625]]]], [[[[0.3361, 0.2911], [0.0459, 0.4609]], [[0.3748, 0.0872], [0.5898, 0.3635]]]]], Ave9178), 
LRes43567 = reshape_layer(Ave9178, [2, 4], Res43567), 
LPer46771 = permute_layer(Res43567, 1,2, Per46771), 
LFla416 = flatten_layer(Per46771, Fla416), 
LGlo14595 = global_average_pooling1D_layer([[[1.3312, 1.71], [1.4531, 1.0354]]], Glo14595), 
LCon17730 = concatenate_layer([Glo14595,[[0.8938, 0.7243, 0.8822, 0.3259, 0.5507, 0.5082]]], 1, Con17730), 
LMin57973 = minimum_layer([Fla416,Con17730], Min57973), 
LCon95955 = concatenate_layer([Min57973,[[0.8374, 0.4041, 0.9724, 0.674, 0.8632, 0.1916, 0.0646, 0.1842, 0.4928, 0.3663, 0.6945, 0.4999, 0.5283, 0.103, 0.944, 0.1475]]], 1, Con95955), 
LMin72266 = minimum_layer([Fla33423,Con95955], Min72266), 
LRes6427 = reshape_layer(Min72266, [24, 1], Res6427), 
LGlo6016 = global_average_pooling2D_layer([[[[1.7939]]]], Glo6016), 
LRes12096 = reshape_layer(Glo6016, [1, 1], Res12096), 
LZer59429 = zero_padding1D_layer(Res12096, 1, 1, Zer59429), 
LZer4629 = zero_padding1D_layer(Zer59429, 21, 0, Zer4629), 
LMin92785 = minimum_layer([Res6427,Zer4629], Min92785), 
exec_layers([LAve23798,LRes86563,LZer14084,LMul33649,LZer24872,LCon30654,LAve83998,LRes43095,LFla33423,LAve9178,LRes43567,LPer46771,LFla416,LGlo14595,LCon17730,LMin57973,LCon95955,LMin72266,LRes6427,LGlo6016,LRes12096,LZer59429,LZer4629,LMin92785],["Ave23798","Res86563","Zer14084","Mul33649","Zer24872","Con30654","Ave83998","Res43095","Fla33423","Ave9178","Res43567","Per46771","Fla416","Glo14595","Con17730","Min57973","Con95955","Min72266","Res6427","Glo6016","Res12096","Zer59429","Zer4629","Min92785"],Min92785,"Min92785")

Actual (Unparsed): [[[0.0000000], [0.0000000], [0.0000000], [0.0000000], [0.0000000], [0.0000000], [0.0000000], [0.0000000], [0.0000000], [0.0000000], [0.0000000], [0.0000000], [0.0000000], [0.0000000], [0.0000000], [0.0000000], [0.0000000], [0.0000000], [0.0000000], [0.0000000], [0.0000000], [0.0000000], [0.2886750], [0.0000000]]]

Expected (Unparsed): [[[0],[0],[0],[0],[0],[0],[0],[0],[0],[0],[0],[0],[0],[0],[0],[0],[0],[0],[0],[0],[0],[0],[0.288675],[0]]]

Actual:   [[[0], [0], [0], [0], [0], [0], [0], [0], [0], [0], [0], [0], [0], [0], [0], [0], [0], [0], [0], [0], [0], [0], [0.2887], [0]]]

Expected: [[[0], [0], [0], [0], [0], [0], [0], [0], [0], [0], [0], [0], [0], [0], [0], [0], [0], [0], [0], [0], [0], [0], [0.2887], [0]]]