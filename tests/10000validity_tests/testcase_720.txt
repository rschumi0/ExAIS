import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Ave58694 = tf.keras.layers.Input(shape=([1, 2, 1]))
in1Ave58694 = tf.keras.layers.Input(shape=([1, 2, 1]))

Ave58694 = keras.layers.Average(name = 'Ave58694', )([in0Ave58694,in1Ave58694])
Con96061 = keras.layers.Conv2D(3, (1, 2),strides=(1, 1), padding='valid', dilation_rate=(1, 1), name = 'Con96061', )(Ave58694)
Res81704 = keras.layers.Reshape((1, 1, 3, 1), name = 'Res81704', )(Con96061)
Up_75645 = keras.layers.UpSampling3D(size=(1, 2, 1), name = 'Up_75645', )(Res81704)
model = tf.keras.models.Model(inputs=[in0Ave58694,in1Ave58694], outputs=Up_75645)
w = model.get_layer('Con96061').get_weights() 
w[0] = np.array([[[[0.292, 0.4463, 0.9885]], [[0.7887, 0.486, 0.8853]]]])
w[1] = np.array([0, 0, 0])
model.get_layer('Con96061').set_weights(w) 
in0Ave58694 = tf.constant([[[[0.6144], [0.6031]]]])
in1Ave58694 = tf.constant([[[[0.5917], [0.397]]]])
print (np.array2string(model.predict([in0Ave58694,in1Ave58694],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Up_75645.png')

LAve58694 = average_layer([[[[[0.6144], [0.6031]]]], [[[[0.5917], [0.397]]]]], Ave58694), 
LCon96061 = conv2D_layer(Ave58694, 1, 2,[[[[0.292, 0.4463, 0.9885]], [[0.7887, 0.486, 0.8853]]]],[0, 0, 0], 1, 1, false, 1, 1, Con96061), 
LRes81704 = reshape_layer(Con96061, [1, 1, 3, 1], Res81704), 
LUp_75645 = up_sampling3D_layer(Res81704, 1, 2, 1, Up_75645), 
exec_layers([LAve58694,LCon96061,LRes81704,LUp_75645],["Ave58694","Con96061","Res81704","Up_75645"],Up_75645,"Up_75645")

Actual (Unparsed): [[[[[0.5704800], [0.5121655], [1.0388092]], [[0.5704800], [0.5121655], [1.0388092]]]]]

Expected (Unparsed): [[[[[0.5704800349999999],[0.512165515],[1.0388091899999998]],[[0.5704800349999999],[0.512165515],[1.0388091899999998]]]]]

Actual:   [[[[[0.5705], [0.5122], [1.0389]], [[0.5705], [0.5122], [1.0389]]]]]

Expected: [[[[[0.5705], [0.5122], [1.0389]], [[0.5705], [0.5122], [1.0389]]]]]