import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0GRU92147 = tf.keras.layers.Input(shape=([1, 3]))

GRU92147 = keras.layers.GRU(3,reset_after=False, recurrent_activation='sigmoid', name = 'GRU92147', )(in0GRU92147)
Res64466 = keras.layers.Reshape((3, 1), name = 'Res64466', )(GRU92147)
Res49620 = keras.layers.Reshape((3, 1, 1), name = 'Res49620', )(Res64466)
Up_93364 = keras.layers.UpSampling2D(size=(1, 1), name = 'Up_93364', )(Res49620)
model = tf.keras.models.Model(inputs=[in0GRU92147], outputs=Up_93364)
w = model.get_layer('GRU92147').get_weights() 
w[0] = np.array([[1, 2, 2, 3, 4, 2, 8, 2, 8], [4, 4, 9, 3, 8, 10, 10, 7, 10], [7, 9, 5, 1, 8, 4, 2, 4, 4]])
w[1] = np.array([[7, 8, 6, 2, 1, 6, 1, 4, 1], [6, 3, 8, 10, 4, 9, 3, 7, 8], [4, 4, 10, 4, 3, 9, 7, 8, 10]])
w[2] = np.array([3, 7, 2, 5, 6, 10, 7, 2, 6])
model.get_layer('GRU92147').set_weights(w) 
in0GRU92147 = tf.constant([[[7, 10, 6]]])
print (np.array2string(model.predict([in0GRU92147],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Up_93364.png')

LGRU92147 = gru_layer([[[7, 10, 6]]],[[1, 2, 2, 3, 4, 2, 8, 2, 8], [4, 4, 9, 3, 8, 10, 10, 7, 10], [7, 9, 5, 1, 8, 4, 2, 4, 4]],[[7, 8, 6, 2, 1, 6, 1, 4, 1], [6, 3, 8, 10, 4, 9, 3, 7, 8], [4, 4, 10, 4, 3, 9, 7, 8, 10]],[3, 7, 2, 5, 6, 10, 7, 2, 6], false, GRU92147), 
LRes64466 = reshape_layer(GRU92147, [3, 1], Res64466), 
LRes49620 = reshape_layer(Res64466, [3, 1, 1], Res49620), 
LUp_93364 = up_sampling2D_layer(Res49620, 1, 1, Up_93364), 
exec_layers([LGRU92147,LRes64466,LRes49620,LUp_93364],["GRU92147","Res64466","Res49620","Up_93364"],Up_93364,"Up_93364")

Actual (Unparsed): [[[[0.0000000]], [[0.0000000]], [[0.0000000]]]]

Expected (Unparsed): [[[[0.0]],[[0.0]],[[0.0]]]]

Actual:   [[[[0]], [[0]], [[0]]]]

Expected: [[[[0]], [[0]], [[0]]]]