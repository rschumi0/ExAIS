import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Dot40380 = tf.keras.layers.Input(shape=([3, 2]))
in1Dot40380 = tf.keras.layers.Input(shape=([3, 2]))

Dot40380 = keras.layers.Dot(axes=(1, 1), name = 'Dot40380', )([in0Dot40380,in1Dot40380])
Res59687 = keras.layers.Reshape((2, 2, 1), name = 'Res59687', )(Dot40380)
Dep44565 = keras.layers.DepthwiseConv2D((2, 2),strides=(2, 2), padding='same', name = 'Dep44565', )(Res59687)
model = tf.keras.models.Model(inputs=[in0Dot40380,in1Dot40380], outputs=Dep44565)
w = model.get_layer('Dep44565').get_weights() 
w[0] = np.array([[[[0.4463]], [[0.2094]]], [[[0.482]], [[0.3416]]]])
w[1] = np.array([0])
model.get_layer('Dep44565').set_weights(w) 
in0Dot40380 = tf.constant([[[0.6766, 0.3973], [0.871, 0.1889], [0.5617, 0.6691]]])
in1Dot40380 = tf.constant([[[0.7439, 0.1707], [0.9666, 0.1635], [0.9076, 0.6465]]])
print (np.array2string(model.predict([in0Dot40380,in1Dot40380],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Dep44565.png')

LDot40380 = dot_layer([[[0.6766, 0.3973], [0.871, 0.1889], [0.5617, 0.6691]]], [[[0.7439, 0.1707], [0.9666, 0.1635], [0.9076, 0.6465]]], 1, 1, Dot40380), 
LRes59687 = reshape_layer(Dot40380, [2, 2, 1], Res59687), 
LDep44565 = depthwise_conv2D_layer(Res59687, 2, 2,[[[[0.4463]], [[0.2094]]], [[[0.482]], [[0.3416]]]],[0], 2, 2, true, Dep44565), 
exec_layers([LDot40380,LRes59687,LDep44565],["Dot40380","Res59687","Dep44565"],Dep44565,"Dep44565")

Actual (Unparsed): [[[[1.6626019]]]]

Expected (Unparsed): [[[[1.6626019804319998]]]]

Actual:   [[[[1.6627]]]]

Expected: [[[[1.6627]]]]