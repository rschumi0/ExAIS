import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Lay30409 = tf.keras.layers.Input(shape=([3, 2, 4]))
in0Min84100 = tf.keras.layers.Input(shape=([2, 2, 2]))
in1Min84100 = tf.keras.layers.Input(shape=([2, 2, 2]))
in0Con73575 = tf.keras.layers.Input(shape=([3, 2, 2]))
in0Per90595 = tf.keras.layers.Input(shape=([3, 3]))
in0Con92755 = tf.keras.layers.Input(shape=([3, 5]))

Lay30409 = keras.layers.LayerNormalization(axis=1, epsilon=1.7305081510370617, name = 'Lay30409', )(in0Lay30409)
Min84100 = keras.layers.Minimum(name = 'Min84100', )([in0Min84100,in1Min84100])
Zer55579 = keras.layers.ZeroPadding2D(padding=((1, 0), (0, 0)), name = 'Zer55579', )(Min84100)
Con73575 = keras.layers.Concatenate(axis=3, name = 'Con73575', )([Zer55579,in0Con73575])
Add72578 = keras.layers.Add(name = 'Add72578', )([Lay30409,Con73575])
Res35776 = keras.layers.Reshape((3, 8), name = 'Res35776', )(Add72578)
Per90595 = keras.layers.Permute((1,2), name = 'Per90595',)(in0Per90595)
Con92755 = keras.layers.Concatenate(axis=2, name = 'Con92755', )([Per90595,in0Con92755])
Mul513 = keras.layers.Multiply(name = 'Mul513', )([Res35776,Con92755])
Res80376 = keras.layers.Reshape((3, 8, 1), name = 'Res80376', )(Mul513)
Zer53431 = keras.layers.ZeroPadding2D(padding=((1, 1), (1, 1)), name = 'Zer53431', )(Res80376)
model = tf.keras.models.Model(inputs=[in0Lay30409,in0Min84100,in1Min84100,in0Con73575,in0Per90595,in0Con92755], outputs=Zer53431)
in0Lay30409 = tf.constant([[[[1.4406, 1.7873, 1.9181, 1.6963], [1.5798, 1.2319, 1.3037, 1.3424]], [[1.496, 1.6322, 1.4901, 1.0641], [1.402, 1.112, 1.6738, 1.9849]], [[1.0413, 1.6504, 1.1226, 1.4147], [1.2546, 1.8407, 1.7717, 1.6243]]]])
in0Min84100 = tf.constant([[[[0.178, 0.5581], [0.8194, 0.9884]], [[0.783, 0.8536], [0.0813, 0.8639]]]])
in1Min84100 = tf.constant([[[[0.3326, 0.0543], [0.3765, 0.4868]], [[0.728, 0.4818], [0.7558, 0.3784]]]])
in0Con73575 = tf.constant([[[[0.6159, 0.9226], [0.3922, 0.8469]], [[0.1487, 0.3903], [0.0858, 0.1815]], [[0.5628, 0.8255], [0.4061, 0.32]]]])
in0Per90595 = tf.constant([[[1.6503, 1.4265, 1.9545], [1.2373, 1.8672, 1.0127], [1.0549, 1.0571, 1.0617]]])
in0Con92755 = tf.constant([[[0.8315, 0.3352, 0.7485, 0.5224, 0.123], [0.239, 0.5262, 0.7027, 0.6195, 0.4617], [0.8945, 0.866, 0.5251, 0.6036, 0.1022]]])
print (np.array2string(model.predict([in0Lay30409,in0Min84100,in1Min84100,in0Con73575,in0Per90595,in0Con92755],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Zer53431.png')

LLay30409 = layer_normalization_layer([[[[1.4406, 1.7873, 1.9181, 1.6963], [1.5798, 1.2319, 1.3037, 1.3424]], [[1.496, 1.6322, 1.4901, 1.0641], [1.402, 1.112, 1.6738, 1.9849]], [[1.0413, 1.6504, 1.1226, 1.4147], [1.2546, 1.8407, 1.7717, 1.6243]]]], 1, 1.7305081510370617, Lay30409), 
LMin84100 = minimum_layer([[[[[0.178, 0.5581], [0.8194, 0.9884]], [[0.783, 0.8536], [0.0813, 0.8639]]]], [[[[0.3326, 0.0543], [0.3765, 0.4868]], [[0.728, 0.4818], [0.7558, 0.3784]]]]], Min84100), 
LZer55579 = zero_padding2D_layer(Min84100, 1, 0, 0, 0, Zer55579), 
LCon73575 = concatenate_layer([Zer55579,[[[[0.6159, 0.9226], [0.3922, 0.8469]], [[0.1487, 0.3903], [0.0858, 0.1815]], [[0.5628, 0.8255], [0.4061, 0.32]]]]], 3, Con73575), 
LAdd72578 = add_layer([Lay30409,Con73575], Add72578), 
LRes35776 = reshape_layer(Add72578, [3, 8], Res35776), 
LPer90595 = permute_layer([[[1.6503, 1.4265, 1.9545], [1.2373, 1.8672, 1.0127], [1.0549, 1.0571, 1.0617]]], 1,2, Per90595), 
LCon92755 = concatenate_layer([Per90595,[[[0.8315, 0.3352, 0.7485, 0.5224, 0.123], [0.239, 0.5262, 0.7027, 0.6195, 0.4617], [0.8945, 0.866, 0.5251, 0.6036, 0.1022]]]], 2, Con92755), 
LMul513 = multiply_layer([Res35776,Con92755], Mul513), 
LRes80376 = reshape_layer(Mul513, [3, 8, 1], Res80376), 
LZer53431 = zero_padding2D_layer(Res80376, 1, 1, 1, 1, Zer53431), 
exec_layers([LLay30409,LMin84100,LZer55579,LCon73575,LAdd72578,LRes35776,LPer90595,LCon92755,LMul513,LRes80376,LZer53431],["Lay30409","Min84100","Zer55579","Con73575","Add72578","Res35776","Per90595","Con92755","Mul513","Res80376","Zer53431"],Zer53431,"Zer53431")

Actual (Unparsed): [[[[0.0000000], [0.0000000], [0.0000000], [0.0000000], [0.0000000], [0.0000000], [0.0000000], [0.0000000], [0.0000000], [0.0000000]], [[0.0000000], [0.1421342], [0.1054013], [1.7920246], [0.9560591], [0.0425067], [-0.0901143], [0.0952241], [0.0759167], [0.0000000]], [[0.0000000], [0.3783038], [0.0195084], [0.1355170], [0.0348806], [0.1940815], [0.1952308], [0.0953891], [0.1988755], [0.0000000]], [[0.0000000], [0.5423497], [0.4775598], [0.2937844], [0.7537555], [-0.0327744], [0.3716467], [0.3306764], [0.0307055], [0.0000000]], [[0.0000000], [0.0000000], [0.0000000], [0.0000000], [0.0000000], [0.0000000], [0.0000000], [0.0000000], [0.0000000], [0.0000000]]]]

Expected (Unparsed): [[[[0],[0],[0],[0],[0],[0],[0],[0],[0],[0]],[[0],[0.14213422915121215],[0.10540132209902078],[1.7920247206778557],[0.9560591176727263],[0.04250666224304524],[-0.09011430515129218],[0.09522414709409946],[0.07591668867995365],[0]],[[0],[0.37830375353917806],[0.019508394682030215],[0.1355169676654377],[0.03488057915545187],[0.19408147444475374],[0.1952308092748521],[0.09538913595445442],[0.19887552265031014],[0]],[[0],[0.5423497086245773],[0.47755972042791556],[0.29378442407762945],[0.7537554805788684],[-0.032774460127010546],[0.3716467006632698],[0.33067641800999314],[0.03070547331489274],[0]],[[0],[0],[0],[0],[0],[0],[0],[0],[0],[0]]]]

Actual:   [[[[0], [0], [0], [0], [0], [0], [0], [0], [0], [0]], [[0], [0.1422], [0.1055], [1.7921], [0.9561], [0.0426], [-0.0901], [0.0953], [0.076], [0]], [[0], [0.3784], [0.0196], [0.1356], [0.0349], [0.1941], [0.1953], [0.0954], [0.1989], [0]], [[0], [0.5424], [0.4776], [0.2938], [0.7538], [-0.0327], [0.3717], [0.3307], [0.0308], [0]], [[0], [0], [0], [0], [0], [0], [0], [0], [0], [0]]]]

Expected: [[[[0], [0], [0], [0], [0], [0], [0], [0], [0], [0]], [[0], [0.1422], [0.1055], [1.7921], [0.9561], [0.0426], [-0.0901], [0.0953], [0.076], [0]], [[0], [0.3784], [0.0196], [0.1356], [0.0349], [0.1941], [0.1953], [0.0954], [0.1989], [0]], [[0], [0.5424], [0.4776], [0.2938], [0.7538], [-0.0327], [0.3717], [0.3307], [0.0308], [0]], [[0], [0], [0], [0], [0], [0], [0], [0], [0], [0]]]]