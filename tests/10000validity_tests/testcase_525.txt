import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Mul46050 = tf.keras.layers.Input(shape=([1, 2, 2, 2]))
in1Mul46050 = tf.keras.layers.Input(shape=([1, 2, 2, 2]))
in0Con86053 = tf.keras.layers.Input(shape=([4, 2]))
in0Sub13792 = tf.keras.layers.Input(shape=([2, 3]))
in1Sub13792 = tf.keras.layers.Input(shape=([2, 3]))
in0Mul94080 = tf.keras.layers.Input(shape=([1, 1, 2]))
in1Mul94080 = tf.keras.layers.Input(shape=([1, 1, 2]))
in0Glo66505 = tf.keras.layers.Input(shape=([1, 1]))
in0Con23270 = tf.keras.layers.Input(shape=([1]))
in0Con94581 = tf.keras.layers.Input(shape=([10]))

Mul46050 = keras.layers.Multiply(name = 'Mul46050', )([in0Mul46050,in1Mul46050])
Res55658 = keras.layers.Reshape((1, 2, 4), name = 'Res55658', )(Mul46050)
Glo40604 = keras.layers.GlobalMaxPool2D(name = 'Glo40604', )(Res55658)
Res41240 = keras.layers.Reshape((4, 1), name = 'Res41240', )(Glo40604)
Con86053 = keras.layers.Concatenate(axis=2, name = 'Con86053', )([Res41240,in0Con86053])
Sub13792 = keras.layers.Subtract(name = 'Sub13792', )([in0Sub13792,in1Sub13792])
Zer11624 = keras.layers.ZeroPadding1D(padding=((2, 0)), name = 'Zer11624', )(Sub13792)
Max95509 = keras.layers.Maximum(name = 'Max95509', )([Con86053,Zer11624])
Fla60440 = keras.layers.Flatten(name = 'Fla60440', )(Max95509)
Mul94080 = keras.layers.Multiply(name = 'Mul94080', )([in0Mul94080,in1Mul94080])
Res45416 = keras.layers.Reshape((1, 2), name = 'Res45416', )(Mul94080)
Fla87571 = keras.layers.Flatten(name = 'Fla87571', )(Res45416)
Glo66505 = keras.layers.GlobalAveragePooling1D(name = 'Glo66505', )(in0Glo66505)
Thr75125 = keras.layers.ThresholdedReLU(theta=7.179725966151671, name = 'Thr75125', )(Glo66505)
Con23270 = keras.layers.Concatenate(axis=1, name = 'Con23270', )([Thr75125,in0Con23270])
Max51007 = keras.layers.Maximum(name = 'Max51007', )([Fla87571,Con23270])
Con94581 = keras.layers.Concatenate(axis=1, name = 'Con94581', )([Max51007,in0Con94581])
Min9440 = keras.layers.Minimum(name = 'Min9440', )([Fla60440,Con94581])
Res70112 = keras.layers.Reshape((12, 1), name = 'Res70112', )(Min9440)
Res61778 = keras.layers.Reshape((12, 1, 1), name = 'Res61778', )(Res70112)
Sep47307 = keras.layers.SeparableConv2D(4, (9, 1),strides=(8, 8), padding='same', name = 'Sep47307', )(Res61778)
model = tf.keras.models.Model(inputs=[in0Mul46050,in1Mul46050,in0Con86053,in0Sub13792,in1Sub13792,in0Mul94080,in1Mul94080,in0Glo66505,in0Con23270,in0Con94581], outputs=Sep47307)
w = model.get_layer('Sep47307').get_weights() 
w[0] = np.array([[[[0.9336]]], [[[0.8711]]], [[[0.4817]]], [[[0.8626]]], [[[0.756]]], [[[0.7272]]], [[[0.1515]]], [[[0.4323]]], [[[0.963]]]])
w[1] = np.array([[[[0.7069, 0.2122, 0.7118, 0.8632]]]])
w[2] = np.array([0, 0, 0, 0])
model.get_layer('Sep47307').set_weights(w) 
in0Mul46050 = tf.constant([[[[[0.8263, 0.8823], [0.4215, 0.3839]], [[0.3688, 0.8956], [0.0811, 0.0583]]]]])
in1Mul46050 = tf.constant([[[[[0.8603, 0.1113], [0.73, 0.4393]], [[0.9856, 0.5496], [0.7879, 0.5079]]]]])
in0Con86053 = tf.constant([[[0.1767, 0.7665], [0.4153, 0.7042], [0.6362, 0.7452], [0.38, 0.2204]]])
in0Sub13792 = tf.constant([[[0.4305, 0.339, 0.8365], [0.2113, 0.2196, 0.3136]]])
in1Sub13792 = tf.constant([[[0.5812, 0.387, 0.0647], [0.5096, 0.9479, 0.2642]]])
in0Mul94080 = tf.constant([[[[0.8866, 0.1464]]]])
in1Mul94080 = tf.constant([[[[0.6412, 0.4506]]]])
in0Glo66505 = tf.constant([[[1.9784]]])
in0Con23270 = tf.constant([[0.3322]])
in0Con94581 = tf.constant([[0.8161, 0.4072, 0.2481, 0.9633, 0.0202, 0.7643, 0.6548, 0.0421, 0.7095, 0.9155]])
print (np.array2string(model.predict([in0Mul46050,in1Mul46050,in0Con86053,in0Sub13792,in1Sub13792,in0Mul94080,in1Mul94080,in0Glo66505,in0Con23270,in0Con94581],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Sep47307.png')

LMul46050 = multiply_layer([[[[[[0.8263, 0.8823], [0.4215, 0.3839]], [[0.3688, 0.8956], [0.0811, 0.0583]]]]], [[[[[0.8603, 0.1113], [0.73, 0.4393]], [[0.9856, 0.5496], [0.7879, 0.5079]]]]]], Mul46050), 
LRes55658 = reshape_layer(Mul46050, [1, 2, 4], Res55658), 
LGlo40604 = global_max_pool2D_layer(Res55658, Glo40604), 
LRes41240 = reshape_layer(Glo40604, [4, 1], Res41240), 
LCon86053 = concatenate_layer([Res41240,[[[0.1767, 0.7665], [0.4153, 0.7042], [0.6362, 0.7452], [0.38, 0.2204]]]], 2, Con86053), 
LSub13792 = subtract_layer([[[0.4305, 0.339, 0.8365], [0.2113, 0.2196, 0.3136]]], [[[0.5812, 0.387, 0.0647], [0.5096, 0.9479, 0.2642]]], Sub13792), 
LZer11624 = zero_padding1D_layer(Sub13792, 2, 0, Zer11624), 
LMax95509 = maximum_layer([Con86053,Zer11624], Max95509), 
LFla60440 = flatten_layer(Max95509, Fla60440), 
LMul94080 = multiply_layer([[[[[0.8866, 0.1464]]]], [[[[0.6412, 0.4506]]]]], Mul94080), 
LRes45416 = reshape_layer(Mul94080, [1, 2], Res45416), 
LFla87571 = flatten_layer(Res45416, Fla87571), 
LGlo66505 = global_average_pooling1D_layer([[[1.9784]]], Glo66505), 
LThr75125 = thresholded_relu_layer(Glo66505, 7.179725966151671, Thr75125), 
LCon23270 = concatenate_layer([Thr75125,[[0.3322]]], 1, Con23270), 
LMax51007 = maximum_layer([Fla87571,Con23270], Max51007), 
LCon94581 = concatenate_layer([Max51007,[[0.8161, 0.4072, 0.2481, 0.9633, 0.0202, 0.7643, 0.6548, 0.0421, 0.7095, 0.9155]]], 1, Con94581), 
LMin9440 = minimum_layer([Fla60440,Con94581], Min9440), 
LRes70112 = reshape_layer(Min9440, [12, 1], Res70112), 
LRes61778 = reshape_layer(Res70112, [12, 1, 1], Res61778), 
LSep47307 = separable_conv2D_layer(Res61778, 9, 1,[[[[[0.9336]]], [[[0.8711]]], [[[0.4817]]], [[[0.8626]]], [[[0.756]]], [[[0.7272]]], [[[0.1515]]], [[[0.4323]]], [[[0.963]]]],[[[[0.7069, 0.2122, 0.7118, 0.8632]]]]],[0, 0, 0, 0], 8, 8, true, Sep47307), 
exec_layers([LMul46050,LRes55658,LGlo40604,LRes41240,LCon86053,LSub13792,LZer11624,LMax95509,LFla60440,LMul94080,LRes45416,LFla87571,LGlo66505,LThr75125,LCon23270,LMax51007,LCon94581,LMin9440,LRes70112,LRes61778,LSep47307],["Mul46050","Res55658","Glo40604","Res41240","Con86053","Sub13792","Zer11624","Max95509","Fla60440","Mul94080","Res45416","Fla87571","Glo66505","Thr75125","Con23270","Max51007","Con94581","Min9440","Res70112","Res61778","Sep47307"],Sep47307,"Sep47307")

Actual (Unparsed): [[[[1.1757990, 0.3529559, 1.1839493, 1.4357755]], [[0.9701072, 0.2912106, 0.9768316, 1.1846039]]]]

Expected (Unparsed): [[[[1.1757990001221417,0.3529559312857808,1.1839492548973551,1.4357754942784449]],[[0.9701071742759999,0.291210556488,0.976831640472,1.1846039225279998]]]]

Actual:   [[[[1.1758, 0.353, 1.184, 1.4358]], [[0.9702, 0.2913, 0.9769, 1.1847]]]]

Expected: [[[[1.1758, 0.353, 1.184, 1.4358]], [[0.9702, 0.2913, 0.9769, 1.1847]]]]