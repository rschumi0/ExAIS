import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Max22772 = tf.keras.layers.Input(shape=([1, 2]))
in1Max22772 = tf.keras.layers.Input(shape=([1, 2]))
in0Mul60535 = tf.keras.layers.Input(shape=([2, 2, 1, 1]))
in1Mul60535 = tf.keras.layers.Input(shape=([2, 2, 1, 1]))
in0Con57908 = tf.keras.layers.Input(shape=([2, 1]))
in0Dot12152 = tf.keras.layers.Input(shape=([2, 2]))
in1Dot12152 = tf.keras.layers.Input(shape=([2, 2]))

Max22772 = keras.layers.Maximum(name = 'Max22772', )([in0Max22772,in1Max22772])
Up_30061 = keras.layers.UpSampling1D(size=(1), name = 'Up_30061', )(Max22772)
Res41924 = keras.layers.Reshape((1, 2, 1), name = 'Res41924', )(Up_30061)
PRe48332 = keras.layers.PReLU(name = 'PRe48332', )(Res41924)
Res40361 = keras.layers.Reshape((1, 2), name = 'Res40361', )(PRe48332)
Zer51277 = keras.layers.ZeroPadding1D(padding=((1, 0)), name = 'Zer51277', )(Res40361)
Mul60535 = keras.layers.Multiply(name = 'Mul60535', )([in0Mul60535,in1Mul60535])
Res18795 = keras.layers.Reshape((2, 2, 1), name = 'Res18795', )(Mul60535)
Res98159 = keras.layers.Reshape((2, 2), name = 'Res98159', )(Res18795)
Fla58548 = keras.layers.Flatten(name = 'Fla58548', )(Res98159)
Res75548 = keras.layers.Reshape((4, 1), name = 'Res75548', )(Fla58548)
Ave23546 = keras.layers.AveragePooling1D(pool_size=(3), name = 'Ave23546', )(Res75548)
Zer84483 = keras.layers.ZeroPadding1D(padding=((1, 0)), name = 'Zer84483', )(Ave23546)
Con57908 = keras.layers.Concatenate(axis=2, name = 'Con57908', )([Zer84483,in0Con57908])
Dot12152 = keras.layers.Dot(axes=(1, 2), name = 'Dot12152', )([in0Dot12152,in1Dot12152])
Sof37058 = keras.layers.Softmax(axis=1, name = 'Sof37058', )(Dot12152)
Sub44373 = keras.layers.Subtract(name = 'Sub44373', )([Con57908,Sof37058])
Min86096 = keras.layers.Minimum(name = 'Min86096', )([Zer51277,Sub44373])
model = tf.keras.models.Model(inputs=[in0Max22772,in1Max22772,in0Mul60535,in1Mul60535,in0Con57908,in0Dot12152,in1Dot12152], outputs=Min86096)
w = model.get_layer('PRe48332').get_weights() 
w[0] = np.array([[[0.6703], [0.1662]]])
model.get_layer('PRe48332').set_weights(w) 
in0Max22772 = tf.constant([[[0.3784, 0.9005]]])
in1Max22772 = tf.constant([[[0.0078, 0.4484]]])
in0Mul60535 = tf.constant([[[[[0.4671]], [[0.2554]]], [[[0.9569]], [[0.118]]]]])
in1Mul60535 = tf.constant([[[[[0.2593]], [[0.8475]]], [[[0.8548]], [[0.0915]]]]])
in0Con57908 = tf.constant([[[0.5924], [0.6136]]])
in0Dot12152 = tf.constant([[[0.5591, 0.5661], [0.1942, 0.1107]]])
in1Dot12152 = tf.constant([[[0.2921, 0.2055], [0.8465, 0.4309]]])
print (np.array2string(model.predict([in0Max22772,in1Max22772,in0Mul60535,in1Mul60535,in0Con57908,in0Dot12152,in1Dot12152],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Min86096.png')

LMax22772 = maximum_layer([[[[0.3784, 0.9005]]], [[[0.0078, 0.4484]]]], Max22772), 
LUp_30061 = up_sampling1D_layer(Max22772, 1, Up_30061), 
LRes41924 = reshape_layer(Up_30061, [1, 2, 1], Res41924), 
LPRe48332 = prelu_layer(Res41924, [[[0.6703], [0.1662]]], PRe48332), 
LRes40361 = reshape_layer(PRe48332, [1, 2], Res40361), 
LZer51277 = zero_padding1D_layer(Res40361, 1, 0, Zer51277), 
LMul60535 = multiply_layer([[[[[[0.4671]], [[0.2554]]], [[[0.9569]], [[0.118]]]]], [[[[[0.2593]], [[0.8475]]], [[[0.8548]], [[0.0915]]]]]], Mul60535), 
LRes18795 = reshape_layer(Mul60535, [2, 2, 1], Res18795), 
LRes98159 = reshape_layer(Res18795, [2, 2], Res98159), 
LFla58548 = flatten_layer(Res98159, Fla58548), 
LRes75548 = reshape_layer(Fla58548, [4, 1], Res75548), 
LAve23546 = average_pooling1D_layer(Res75548, 3, Ave23546), 
LZer84483 = zero_padding1D_layer(Ave23546, 1, 0, Zer84483), 
LCon57908 = concatenate_layer([Zer84483,[[[0.5924], [0.6136]]]], 2, Con57908), 
LDot12152 = dot_layer([[[0.5591, 0.5661], [0.1942, 0.1107]]], [[[0.2921, 0.2055], [0.8465, 0.4309]]], 1, 2, Dot12152), 
LSof37058 = softmax_layer(Dot12152, 1, Sof37058), 
LSub44373 = subtract_layer(Con57908,Sof37058, Sub44373), 
LMin86096 = minimum_layer([Zer51277,Sub44373], Min86096), 
exec_layers([LMax22772,LUp_30061,LRes41924,LPRe48332,LRes40361,LZer51277,LMul60535,LRes18795,LRes98159,LFla58548,LRes75548,LAve23546,LZer84483,LCon57908,LDot12152,LSof37058,LSub44373,LMin86096],["Max22772","Up_30061","Res41924","PRe48332","Res40361","Zer51277","Mul60535","Res18795","Res98159","Fla58548","Res75548","Ave23546","Zer84483","Con57908","Dot12152","Sof37058","Sub44373","Min86096"],Min86096,"Min86096")

Actual (Unparsed): [[[-0.5037786, 0.0000000], [-0.1110452, 0.1211131]]]

Expected (Unparsed): [[[-0.503778565565951,0],[-0.1110452177673823,0.12111309697141737]]]

Actual:   [[[-0.5037, 0], [-0.111, 0.1212]]]

Expected: [[[-0.5037, 0], [-0.111, 0.1212]]]