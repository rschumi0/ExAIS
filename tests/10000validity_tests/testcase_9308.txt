import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Zer57686 = tf.keras.layers.Input(shape=([2, 3, 4]))
in0Thr62209 = tf.keras.layers.Input(shape=([2, 1, 2, 1]))
in0Min40275 = tf.keras.layers.Input(shape=([2, 2, 1]))
in1Min40275 = tf.keras.layers.Input(shape=([2, 2, 1]))

Zer57686 = keras.layers.ZeroPadding2D(padding=((1, 1), (1, 1)), name = 'Zer57686', )(in0Zer57686)
Res91098 = keras.layers.Reshape((4, 20), name = 'Res91098', )(Zer57686)
Con51220 = keras.layers.Conv1D(3, (1),strides=(6), padding='same', dilation_rate=(1), name = 'Con51220', )(Res91098)
Res14609 = keras.layers.Reshape((1, 3, 1), name = 'Res14609', )(Con51220)
Zer84498 = keras.layers.ZeroPadding2D(padding=((1, 0), (1, 0)), name = 'Zer84498', )(Res14609)
Thr62209 = keras.layers.ThresholdedReLU(theta=8.914197904516397, name = 'Thr62209', input_shape=(2, 1, 2, 1))(in0Thr62209)
Res40807 = keras.layers.Reshape((2, 1, 2), name = 'Res40807', )(Thr62209)
Res50709 = keras.layers.Reshape((2, 2), name = 'Res50709', )(Res40807)
Sim53656 = keras.layers.SimpleRNN(2,name = 'Sim53656', )(Res50709)
Res71620 = keras.layers.Reshape((2, 1), name = 'Res71620', )(Sim53656)
Max12877 = keras.layers.MaxPool1D(pool_size=(1), name = 'Max12877', )(Res71620)
Res15832 = keras.layers.Reshape((2, 1, 1), name = 'Res15832', )(Max12877)
Zer74021 = keras.layers.ZeroPadding2D(padding=((0, 0), (1, 0)), name = 'Zer74021', )(Res15832)
Min40275 = keras.layers.Minimum(name = 'Min40275', )([in0Min40275,in1Min40275])
Ave24920 = keras.layers.Average(name = 'Ave24920', )([Zer74021,Min40275])
Zer52865 = keras.layers.ZeroPadding2D(padding=((0, 0), (2, 0)), name = 'Zer52865', )(Ave24920)
Ave9299 = keras.layers.Average(name = 'Ave9299', )([Zer84498,Zer52865])
model = tf.keras.models.Model(inputs=[in0Zer57686,in0Thr62209,in0Min40275,in1Min40275], outputs=Ave9299)
w = model.get_layer('Con51220').get_weights() 
w[0] = np.array([[[0.851, 0.3041, 0.6757], [0.0542, 0.6608, 0.6947], [0.4934, 0.8714, 0.6335], [0.8056, 0.1506, 0.5256], [0.815, 0.5313, 0.9787], [0.1369, 0.2757, 0.1695], [0.4377, 0.6211, 0.4478], [0.9252, 0.3317, 0.6847], [0.5258, 0.3353, 0.4979], [0.6164, 0.0631, 0.0368], [0.2006, 0.2668, 0.6079], [0.5546, 0.3191, 0.6209], [0.4655, 0.815, 0.2979], [0.6676, 0.4481, 0.9064], [0.7453, 0.8504, 0.7795], [0.2036, 0.5116, 0.2404], [0.1584, 0.3449, 0.0569], [0.7181, 0.3527, 0.713], [0.9248, 0.8721, 0.5957], [0.0055, 0.1819, 0.0251]]])
w[1] = np.array([0, 0, 0])
model.get_layer('Con51220').set_weights(w) 
w = model.get_layer('Sim53656').get_weights() 
w[0] = np.array([[2, 8], [6, 2]])
w[1] = np.array([[5, 7], [5, 1]])
w[2] = np.array([10, 5])
model.get_layer('Sim53656').set_weights(w) 
in0Zer57686 = tf.constant([[[[1.1929, 1.7719, 1.4251, 1.449], [1.1959, 1.394, 1.1946, 1.3855], [1.5558, 1.3346, 1.2351, 1.067]], [[1.065, 1.9495, 1.5141, 1.9159], [1.3344, 1.8465, 1.6172, 1.0263], [1.7155, 1.0475, 1.8974, 1.1027]]]])
in0Thr62209 = tf.constant([[[[[0.0484], [0.0221]]], [[[0.7665], [0.6216]]]]])
in0Min40275 = tf.constant([[[[0.5257], [0.2523]], [[0.4082], [0.7449]]]])
in1Min40275 = tf.constant([[[[0.1012], [0.9492]], [[0.2791], [0.5483]]]])
print (np.array2string(model.predict([in0Zer57686,in0Thr62209,in0Min40275,in1Min40275],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Ave9299.png')

LZer57686 = zero_padding2D_layer([[[[1.1929, 1.7719, 1.4251, 1.449], [1.1959, 1.394, 1.1946, 1.3855], [1.5558, 1.3346, 1.2351, 1.067]], [[1.065, 1.9495, 1.5141, 1.9159], [1.3344, 1.8465, 1.6172, 1.0263], [1.7155, 1.0475, 1.8974, 1.1027]]]], 1, 1, 1, 1, Zer57686), 
LRes91098 = reshape_layer(Zer57686, [4, 20], Res91098), 
LCon51220 = conv1D_layer(Res91098, 1,[[[0.851, 0.3041, 0.6757], [0.0542, 0.6608, 0.6947], [0.4934, 0.8714, 0.6335], [0.8056, 0.1506, 0.5256], [0.815, 0.5313, 0.9787], [0.1369, 0.2757, 0.1695], [0.4377, 0.6211, 0.4478], [0.9252, 0.3317, 0.6847], [0.5258, 0.3353, 0.4979], [0.6164, 0.0631, 0.0368], [0.2006, 0.2668, 0.6079], [0.5546, 0.3191, 0.6209], [0.4655, 0.815, 0.2979], [0.6676, 0.4481, 0.9064], [0.7453, 0.8504, 0.7795], [0.2036, 0.5116, 0.2404], [0.1584, 0.3449, 0.0569], [0.7181, 0.3527, 0.713], [0.9248, 0.8721, 0.5957], [0.0055, 0.1819, 0.0251]]],[0, 0, 0], 6, true, 1, Con51220), 
LRes14609 = reshape_layer(Con51220, [1, 3, 1], Res14609), 
LZer84498 = zero_padding2D_layer(Res14609, 1, 0, 1, 0, Zer84498), 
LThr62209 = thresholded_relu_layer([[[[[0.0484], [0.0221]]], [[[0.7665], [0.6216]]]]], 8.914197904516397, Thr62209), 
LRes40807 = reshape_layer(Thr62209, [2, 1, 2], Res40807), 
LRes50709 = reshape_layer(Res40807, [2, 2], Res50709), 
LSim53656 = simple_rnn_layer(Res50709,[[2, 8], [6, 2]],[[5, 7], [5, 1]],[10, 5], Sim53656), 
LRes71620 = reshape_layer(Sim53656, [2, 1], Res71620), 
LMax12877 = max_pool1D_layer(Res71620, 1, Max12877), 
LRes15832 = reshape_layer(Max12877, [2, 1, 1], Res15832), 
LZer74021 = zero_padding2D_layer(Res15832, 0, 0, 1, 0, Zer74021), 
LMin40275 = minimum_layer([[[[[0.5257], [0.2523]], [[0.4082], [0.7449]]]], [[[[0.1012], [0.9492]], [[0.2791], [0.5483]]]]], Min40275), 
LAve24920 = average_layer([Zer74021,Min40275], Ave24920), 
LZer52865 = zero_padding2D_layer(Ave24920, 0, 0, 2, 0, Zer52865), 
LAve9299 = average_layer([Zer84498,Zer52865], Ave9299), 
exec_layers([LZer57686,LRes91098,LCon51220,LRes14609,LZer84498,LThr62209,LRes40807,LRes50709,LSim53656,LRes71620,LMax12877,LRes15832,LZer74021,LMin40275,LAve24920,LZer52865,LAve9299],["Zer57686","Res91098","Con51220","Res14609","Zer84498","Thr62209","Res40807","Res50709","Sim53656","Res71620","Max12877","Res15832","Zer74021","Min40275","Ave24920","Zer52865","Ave9299"],Ave9299,"Ave9299")

Actual (Unparsed): [[[[0.0000000], [0.0000000], [0.0253000], [0.3130750]], [[0.0000000], [0.0000000], [0.0697750], [0.3870750]]]]

Expected (Unparsed): [[[[0],[0],[0.0253],[0.313075]],[[0],[0.0],[0.069775],[0.387074999997445]]]]

Actual:   [[[[0], [0], [0.0253], [0.3131]], [[0], [0], [0.0698], [0.3871]]]]

Expected: [[[[0], [0], [0.0253], [0.3131]], [[0], [0], [0.0698], [0.3871]]]]