import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Up_69526 = tf.keras.layers.Input(shape=([3, 1, 1]))

Up_69526 = keras.layers.UpSampling2D(size=(2, 1), name = 'Up_69526', )(in0Up_69526)
Res64202 = keras.layers.Reshape((6, 1), name = 'Res64202', )(Up_69526)
Loc47430 = keras.layers.LocallyConnected1D(3, (1),strides=(1), name = 'Loc47430', )(Res64202)
model = tf.keras.models.Model(inputs=[in0Up_69526], outputs=Loc47430)
w = model.get_layer('Loc47430').get_weights() 
w[0] = np.array([[[0.107, 0.6025, 0.2142]], [[0.1487, 0.6435, 0.6762]], [[0.505, 0.8151, 0.9224]], [[0.0335, 0.7521, 0.5642]], [[0.1604, 0.1005, 0.7305]], [[0.186, 0.8434, 0.1365]]])
w[1] = np.array([[0, 0, 0], [0, 0, 0], [0, 0, 0], [0, 0, 0], [0, 0, 0], [0, 0, 0]])
model.get_layer('Loc47430').set_weights(w) 
in0Up_69526 = tf.constant([[[[1.7062]], [[1.9857]], [[1.372]]]])
print (np.array2string(model.predict([in0Up_69526],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Loc47430.png')

LUp_69526 = up_sampling2D_layer([[[[1.7062]], [[1.9857]], [[1.372]]]], 2, 1, Up_69526), 
LRes64202 = reshape_layer(Up_69526, [6, 1], Res64202), 
LLoc47430 = locally_connected1D_layer(Res64202, 1,[[[0.107, 0.6025, 0.2142]], [[0.1487, 0.6435, 0.6762]], [[0.505, 0.8151, 0.9224]], [[0.0335, 0.7521, 0.5642]], [[0.1604, 0.1005, 0.7305]], [[0.186, 0.8434, 0.1365]]],[[0, 0, 0], [0, 0, 0], [0, 0, 0], [0, 0, 0], [0, 0, 0], [0, 0, 0]], 1, Loc47430), 
exec_layers([LUp_69526,LRes64202,LLoc47430],["Up_69526","Res64202","Loc47430"],Loc47430,"Loc47430")

Actual (Unparsed): [[[0.1825634, 1.0279855, 0.3654680], [0.2537119, 1.0979397, 1.1537324], [1.0027785, 1.6185441, 1.8316097], [0.0665210, 1.4934450, 1.1203319], [0.2200688, 0.1378860, 1.0022460], [0.2551920, 1.1571448, 0.1872780]]]

Expected (Unparsed): [[[0.1825634,1.0279855,0.36546804],[0.25371193999999997,1.0979397,1.15373244],[1.0027785,1.61854407,1.83160968],[0.06652095000000001,1.49344497,1.12033194],[0.2200688,0.137886,1.0022460000000002],[0.25519200000000003,1.1571448000000002,0.18727800000000003]]]

Actual:   [[[0.1826, 1.028, 0.3655], [0.2538, 1.098, 1.1538], [1.0028, 1.6186, 1.8317], [0.0666, 1.4935, 1.1204], [0.2201, 0.1379, 1.0023], [0.2552, 1.1572, 0.1873]]]

Expected: [[[0.1826, 1.028, 0.3655], [0.2538, 1.098, 1.1538], [1.0028, 1.6186, 1.8317], [0.0666, 1.4935, 1.1204], [0.2201, 0.1379, 1.0023], [0.2552, 1.1572, 0.1873]]]