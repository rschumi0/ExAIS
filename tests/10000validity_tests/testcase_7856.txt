import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Sub42652 = tf.keras.layers.Input(shape=([2, 3, 2, 3]))
in1Sub42652 = tf.keras.layers.Input(shape=([2, 3, 2, 3]))
in0Sub78509 = tf.keras.layers.Input(shape=([3, 2, 2]))
in1Sub78509 = tf.keras.layers.Input(shape=([3, 2, 2]))
in0Con21514 = tf.keras.layers.Input(shape=([2, 3, 2]))
in0Sub24555 = tf.keras.layers.Input(shape=([2, 2, 3, 2]))
in1Sub24555 = tf.keras.layers.Input(shape=([2, 2, 3, 2]))

Sub42652 = keras.layers.Subtract(name = 'Sub42652', )([in0Sub42652,in1Sub42652])
Res80846 = keras.layers.Reshape((2, 3, 6), name = 'Res80846', )(Sub42652)
Sub78509 = keras.layers.Subtract(name = 'Sub78509', )([in0Sub78509,in1Sub78509])
Res94566 = keras.layers.Reshape((3, 4), name = 'Res94566', )(Sub78509)
Res59565 = keras.layers.Reshape((3, 4, 1), name = 'Res59565', )(Res94566)
Sep90106 = keras.layers.SeparableConv2D(4, (2, 2),strides=(3, 3), padding='same', name = 'Sep90106', )(Res59565)
Zer25346 = keras.layers.ZeroPadding2D(padding=((1, 0), (1, 0)), name = 'Zer25346', )(Sep90106)
Con21514 = keras.layers.Concatenate(axis=3, name = 'Con21514', )([Zer25346,in0Con21514])
Add3506 = keras.layers.Add(name = 'Add3506', )([Res80846,Con21514])
Sub24555 = keras.layers.Subtract(name = 'Sub24555', )([in0Sub24555,in1Sub24555])
Res69166 = keras.layers.Reshape((2, 2, 6), name = 'Res69166', )(Sub24555)
Up_70439 = keras.layers.UpSampling2D(size=(1, 1), name = 'Up_70439', )(Res69166)
Zer29230 = keras.layers.ZeroPadding2D(padding=((0, 0), (1, 0)), name = 'Zer29230', )(Up_70439)
Max41821 = keras.layers.Maximum(name = 'Max41821', )([Add3506,Zer29230])
model = tf.keras.models.Model(inputs=[in0Sub42652,in1Sub42652,in0Sub78509,in1Sub78509,in0Con21514,in0Sub24555,in1Sub24555], outputs=Max41821)
w = model.get_layer('Sep90106').get_weights() 
w[0] = np.array([[[[0.3701]], [[0.3247]]], [[[0.8094]], [[0.8012]]]])
w[1] = np.array([[[[0.8687, 0.418, 0.708, 0.0744]]]])
w[2] = np.array([0, 0, 0, 0])
model.get_layer('Sep90106').set_weights(w) 
in0Sub42652 = tf.constant([[[[[0.1435, 0.432, 0.7194], [0.7019, 0.437, 0.2942]], [[0.1507, 0.3023, 0.6231], [0.9214, 0.6004, 0.179]], [[0.6697, 0.6111, 0.6965], [0.6254, 0.28, 0.309]]], [[[0.815, 0.7364, 0.4794], [0.2077, 0.8802, 0.7582]], [[0.5434, 0.055, 0.8036], [0.9145, 0.5719, 0.0062]], [[0.6077, 0.3648, 0.1933], [0.5005, 0.9709, 0.7369]]]]])
in1Sub42652 = tf.constant([[[[[0.3333, 0.8284, 0.3985], [0.4997, 0.7179, 0.7609]], [[0.476, 0.2935, 0.7999], [0.8619, 0.694, 0.22]], [[0.092, 0.875, 0.1459], [0.0076, 0.472, 0.8826]]], [[[0.9951, 0.9155, 0.8847], [0.7741, 0.986, 0.2172]], [[0.0059, 0.9247, 0.4262], [0.1112, 0.8582, 0.8889]], [[0.0106, 0.9499, 0.0713], [0.3411, 0.5743, 0.7459]]]]])
in0Sub78509 = tf.constant([[[[0.4662, 0.4598], [0.364, 0.0189]], [[0.9067, 0.4428], [0.6993, 0.1809]], [[0.9133, 0.8672], [0.958, 0.82]]]])
in1Sub78509 = tf.constant([[[[0.3599, 0.1618], [0.6656, 0.4426]], [[0.6857, 0.5486], [0.0954, 0.4583]], [[0.4482, 0.4263], [0.1894, 0.4529]]]])
in0Con21514 = tf.constant([[[[0.1119, 0.3699], [0.4871, 0.0029], [0.3376, 0.6815]], [[0.4825, 0.4643], [0.7371, 0.5787], [0.1121, 0.2145]]]])
in0Sub24555 = tf.constant([[[[[0.8044, 0.0835], [0.7231, 0.1917], [0.2521, 0.2516]], [[0.5636, 0.1573], [0.8554, 0.5625], [0.9747, 0.3171]]], [[[0.7765, 0.4638], [0.3627, 0.7861], [0.6827, 0.8685]], [[0.0616, 0.7299], [0.9131, 0.5181], [0.2921, 0.5941]]]]])
in1Sub24555 = tf.constant([[[[[0.685, 0.8152], [0.901, 0.5691], [0.5345, 0.3667]], [[0.8843, 0.7333], [0.6261, 0.0156], [0.9035, 0.2496]]], [[[0.7855, 0.7145], [0.4887, 0.4499], [0.1087, 0.1932]], [[0.3893, 0.6381], [0.7868, 0.0081], [0.5817, 0.9648]]]]])
print (np.array2string(model.predict([in0Sub42652,in1Sub42652,in0Sub78509,in1Sub78509,in0Con21514,in0Sub24555,in1Sub24555],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Max41821.png')

LSub42652 = subtract_layer([[[[[0.1435, 0.432, 0.7194], [0.7019, 0.437, 0.2942]], [[0.1507, 0.3023, 0.6231], [0.9214, 0.6004, 0.179]], [[0.6697, 0.6111, 0.6965], [0.6254, 0.28, 0.309]]], [[[0.815, 0.7364, 0.4794], [0.2077, 0.8802, 0.7582]], [[0.5434, 0.055, 0.8036], [0.9145, 0.5719, 0.0062]], [[0.6077, 0.3648, 0.1933], [0.5005, 0.9709, 0.7369]]]]], [[[[[0.3333, 0.8284, 0.3985], [0.4997, 0.7179, 0.7609]], [[0.476, 0.2935, 0.7999], [0.8619, 0.694, 0.22]], [[0.092, 0.875, 0.1459], [0.0076, 0.472, 0.8826]]], [[[0.9951, 0.9155, 0.8847], [0.7741, 0.986, 0.2172]], [[0.0059, 0.9247, 0.4262], [0.1112, 0.8582, 0.8889]], [[0.0106, 0.9499, 0.0713], [0.3411, 0.5743, 0.7459]]]]], Sub42652), 
LRes80846 = reshape_layer(Sub42652, [2, 3, 6], Res80846), 
LSub78509 = subtract_layer([[[[0.4662, 0.4598], [0.364, 0.0189]], [[0.9067, 0.4428], [0.6993, 0.1809]], [[0.9133, 0.8672], [0.958, 0.82]]]], [[[[0.3599, 0.1618], [0.6656, 0.4426]], [[0.6857, 0.5486], [0.0954, 0.4583]], [[0.4482, 0.4263], [0.1894, 0.4529]]]], Sub78509), 
LRes94566 = reshape_layer(Sub78509, [3, 4], Res94566), 
LRes59565 = reshape_layer(Res94566, [3, 4, 1], Res59565), 
LSep90106 = separable_conv2D_layer(Res59565, 2, 2,[[[[[0.3701]], [[0.3247]]], [[[0.8094]], [[0.8012]]]],[[[[0.8687, 0.418, 0.708, 0.0744]]]]],[0, 0, 0, 0], 3, 3, true, Sep90106), 
LZer25346 = zero_padding2D_layer(Sep90106, 1, 0, 1, 0, Zer25346), 
LCon21514 = concatenate_layer([Zer25346,[[[[0.1119, 0.3699], [0.4871, 0.0029], [0.3376, 0.6815]], [[0.4825, 0.4643], [0.7371, 0.5787], [0.1121, 0.2145]]]]], 3, Con21514), 
LAdd3506 = add_layer([Res80846,Con21514], Add3506), 
LSub24555 = subtract_layer([[[[[0.8044, 0.0835], [0.7231, 0.1917], [0.2521, 0.2516]], [[0.5636, 0.1573], [0.8554, 0.5625], [0.9747, 0.3171]]], [[[0.7765, 0.4638], [0.3627, 0.7861], [0.6827, 0.8685]], [[0.0616, 0.7299], [0.9131, 0.5181], [0.2921, 0.5941]]]]], [[[[[0.685, 0.8152], [0.901, 0.5691], [0.5345, 0.3667]], [[0.8843, 0.7333], [0.6261, 0.0156], [0.9035, 0.2496]]], [[[0.7855, 0.7145], [0.4887, 0.4499], [0.1087, 0.1932]], [[0.3893, 0.6381], [0.7868, 0.0081], [0.5817, 0.9648]]]]], Sub24555), 
LRes69166 = reshape_layer(Sub24555, [2, 2, 6], Res69166), 
LUp_70439 = up_sampling2D_layer(Res69166, 1, 1, Up_70439), 
LZer29230 = zero_padding2D_layer(Up_70439, 0, 0, 1, 0, Zer29230), 
LMax41821 = maximum_layer([Add3506,Zer29230], Max41821), 
exec_layers([LSub42652,LRes80846,LSub78509,LRes94566,LRes59565,LSep90106,LZer25346,LCon21514,LAdd3506,LSub24555,LRes69166,LUp_70439,LZer29230,LMax41821],["Sub42652","Res80846","Sub78509","Res94566","Res59565","Sep90106","Zer25346","Con21514","Add3506","Sub24555","Res69166","Up_70439","Zer29230","Max41821"],Max41821,"Max41821")

Actual (Unparsed): [[[[0.0000000, 0.0000000, 0.3209000, 0.2022000, 0.0000000, 0.0000000], [0.1194000, 0.0088000, -0.1768000, 0.0595000, 0.3935000, -0.0381000], [0.5777000, -0.2639000, 0.5506000, 0.6178000, 0.1456000, 0.1079000]], [[0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.3767000, 1.0053000], [0.7374857, -0.2507000, 0.5403906, 0.8204278, 0.5740000, 0.6753000], [0.2658309, 0.0918000, 0.1263000, 0.5100000, 0.5087000, 0.2055000]]]]

Expected (Unparsed): [[[[0,0,0.3209,0.2022,0,0],[0.11939999999999995,0.00880000000000003,-0.17680000000000007,0.0595,0.39350000000000007,-0.03810000000000001],[0.5777,-0.2639,0.5506,0.6177999999999999,0.14560000000000006,0.10789999999999988]],[[0,0,0,0,0.3767,1.0052999999999999],[0.737485746429,-0.25070000000000003,0.54039057036,0.820427822648,0.574,0.6753],[0.265830871509,0.09179999999999999,0.12629999999999997,0.51,0.5086999999999999,0.2055]]]]

Actual:   [[[[0, 0, 0.3209, 0.2022, 0, 0], [0.1194, 0.0088, -0.1768, 0.0595, 0.3935, -0.0381], [0.5777, -0.2639, 0.5506, 0.6178, 0.1456, 0.1079]], [[0, 0, 0, 0, 0.3767, 1.0053], [0.7375, -0.2507, 0.5404, 0.8205, 0.574, 0.6753], [0.2659, 0.0918, 0.1263, 0.51, 0.5087, 0.2055]]]]

Expected: [[[[0, 0, 0.3209, 0.2022, 0, 0], [0.1194, 0.0089, -0.1768, 0.0595, 0.3936, -0.0381], [0.5777, -0.2639, 0.5506, 0.6178, 0.1457, 0.1079]], [[0, 0, 0, 0, 0.3767, 1.0053], [0.7375, -0.2507, 0.5404, 0.8205, 0.574, 0.6753], [0.2659, 0.0918, 0.1263, 0.51, 0.5087, 0.2055]]]]