import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Add98728 = tf.keras.layers.Input(shape=([2, 1]))
in1Add98728 = tf.keras.layers.Input(shape=([2, 1]))
in0Add22907 = tf.keras.layers.Input(shape=([2, 1]))
in1Add22907 = tf.keras.layers.Input(shape=([2, 1]))
in0Con84078 = tf.keras.layers.Input(shape=([5, 5, 2]))
in0Dot26822 = tf.keras.layers.Input(shape=([2]))
in1Dot26822 = tf.keras.layers.Input(shape=([2]))

Add98728 = keras.layers.Add(name = 'Add98728', )([in0Add98728,in1Add98728])
Res47315 = keras.layers.Reshape((2, 1, 1), name = 'Res47315', )(Add98728)
Glo46787 = keras.layers.GlobalAveragePooling2D(name = 'Glo46787', )(Res47315)
Thr8722 = keras.layers.ThresholdedReLU(theta=1.8050161606789492, name = 'Thr8722', )(Glo46787)
Res9654 = keras.layers.Reshape((1, 1), name = 'Res9654', )(Thr8722)
Zer41924 = keras.layers.ZeroPadding1D(padding=((1, 0)), name = 'Zer41924', )(Res9654)
Add22907 = keras.layers.Add(name = 'Add22907', )([in0Add22907,in1Add22907])
Min38903 = keras.layers.Minimum(name = 'Min38903', )([Zer41924,Add22907])
Res69022 = keras.layers.Reshape((2, 1, 1), name = 'Res69022', )(Min38903)
Zer49341 = keras.layers.ZeroPadding2D(padding=((3, 0), (4, 0)), name = 'Zer49341', )(Res69022)
Con84078 = keras.layers.Concatenate(axis=3, name = 'Con84078', )([Zer49341,in0Con84078])
Dot26822 = keras.layers.Dot(axes=(1, 1), name = 'Dot26822', )([in0Dot26822,in1Dot26822])
Res80237 = keras.layers.Reshape((1, 1), name = 'Res80237', )(Dot26822)
Res86769 = keras.layers.Reshape((1, 1, 1), name = 'Res86769', )(Res80237)
Res23760 = keras.layers.Reshape((1, 1, 1, 1), name = 'Res23760', )(Res86769)
Zer25975 = keras.layers.ZeroPadding3D(padding=((1, 1), (1, 1), (1, 1)), name = 'Zer25975', )(Res23760)
Res83944 = keras.layers.Reshape((3, 3, 3), name = 'Res83944', )(Zer25975)
Zer67571 = keras.layers.ZeroPadding2D(padding=((1, 1), (1, 1)), name = 'Zer67571', )(Res83944)
Mul7998 = keras.layers.Multiply(name = 'Mul7998', )([Con84078,Zer67571])
model = tf.keras.models.Model(inputs=[in0Add98728,in1Add98728,in0Add22907,in1Add22907,in0Con84078,in0Dot26822,in1Dot26822], outputs=Mul7998)
in0Add98728 = tf.constant([[[0.1792], [0.1961]]])
in1Add98728 = tf.constant([[[0.9622], [0.7793]]])
in0Add22907 = tf.constant([[[0.4486], [0.6267]]])
in1Add22907 = tf.constant([[[0.2678], [0.8415]]])
in0Con84078 = tf.constant([[[[0.7841, 0.6006], [0.2286, 0.1423], [0.1291, 0.5093], [0.5126, 0.849], [0.9279, 0.3304]], [[0.0637, 0.2328], [0.0922, 0.0276], [0.2042, 0.1368], [0.1078, 0.941], [0.5813, 0.1861]], [[0.2163, 0.0804], [0.3938, 0.0051], [0.0502, 0.0355], [0.5638, 0.0993], [0.9237, 0.0097]], [[0.4006, 0.3002], [0.0507, 0.4683], [0.2646, 0.1762], [0.0672, 0.1582], [0.2309, 0.0931]], [[0.367, 0.805], [0.7799, 0.6707], [0.9237, 0.6225], [0.0943, 0.2293], [0.4719, 0.878]]]])
in0Dot26822 = tf.constant([[0.8488, 0.5145]])
in1Dot26822 = tf.constant([[0.4445, 0.9675]])
print (np.array2string(model.predict([in0Add98728,in1Add98728,in0Add22907,in1Add22907,in0Con84078,in0Dot26822,in1Dot26822],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Mul7998.png')

LAdd98728 = add_layer([[[[0.1792], [0.1961]]], [[[0.9622], [0.7793]]]], Add98728), 
LRes47315 = reshape_layer(Add98728, [2, 1, 1], Res47315), 
LGlo46787 = global_average_pooling2D_layer(Res47315, Glo46787), 
LThr8722 = thresholded_relu_layer(Glo46787, 1.8050161606789492, Thr8722), 
LRes9654 = reshape_layer(Thr8722, [1, 1], Res9654), 
LZer41924 = zero_padding1D_layer(Res9654, 1, 0, Zer41924), 
LAdd22907 = add_layer([[[[0.4486], [0.6267]]], [[[0.2678], [0.8415]]]], Add22907), 
LMin38903 = minimum_layer([Zer41924,Add22907], Min38903), 
LRes69022 = reshape_layer(Min38903, [2, 1, 1], Res69022), 
LZer49341 = zero_padding2D_layer(Res69022, 3, 0, 4, 0, Zer49341), 
LCon84078 = concatenate_layer([Zer49341,[[[[0.7841, 0.6006], [0.2286, 0.1423], [0.1291, 0.5093], [0.5126, 0.849], [0.9279, 0.3304]], [[0.0637, 0.2328], [0.0922, 0.0276], [0.2042, 0.1368], [0.1078, 0.941], [0.5813, 0.1861]], [[0.2163, 0.0804], [0.3938, 0.0051], [0.0502, 0.0355], [0.5638, 0.0993], [0.9237, 0.0097]], [[0.4006, 0.3002], [0.0507, 0.4683], [0.2646, 0.1762], [0.0672, 0.1582], [0.2309, 0.0931]], [[0.367, 0.805], [0.7799, 0.6707], [0.9237, 0.6225], [0.0943, 0.2293], [0.4719, 0.878]]]]], 3, Con84078), 
LDot26822 = dot_layer([[0.8488, 0.5145]], [[0.4445, 0.9675]], 1, 1, Dot26822), 
LRes80237 = reshape_layer(Dot26822, [1, 1], Res80237), 
LRes86769 = reshape_layer(Res80237, [1, 1, 1], Res86769), 
LRes23760 = reshape_layer(Res86769, [1, 1, 1, 1], Res23760), 
LZer25975 = zero_padding3D_layer(Res23760, 1, 1, 1, 1, 1, 1, Zer25975), 
LRes83944 = reshape_layer(Zer25975, [3, 3, 3], Res83944), 
LZer67571 = zero_padding2D_layer(Res83944, 1, 1, 1, 1, Zer67571), 
LMul7998 = multiply_layer([Con84078,Zer67571], Mul7998), 
exec_layers([LAdd98728,LRes47315,LGlo46787,LThr8722,LRes9654,LZer41924,LAdd22907,LMin38903,LRes69022,LZer49341,LCon84078,LDot26822,LRes80237,LRes86769,LRes23760,LZer25975,LRes83944,LZer67571,LMul7998],["Add98728","Res47315","Glo46787","Thr8722","Res9654","Zer41924","Add22907","Min38903","Res69022","Zer49341","Con84078","Dot26822","Res80237","Res86769","Res23760","Zer25975","Res83944","Zer67571","Mul7998"],Mul7998,"Mul7998")

Actual (Unparsed): [[[[0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000]], [[0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000]], [[0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0439285, 0.0000000], [0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000]], [[0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000]], [[0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000]]]]

Expected (Unparsed): [[[[0,0.0,0.0],[0,0.0,0.0],[0,0.0,0.0],[0,0.0,0.0],[0,0.0,0.0]],[[0,0.0,0.0],[0,0.0,0.0],[0,0.0,0.0],[0,0.0,0.0],[0,0.0,0.0]],[[0,0.0,0.0],[0,0.0,0.0],[0,0.04392853157,0.0],[0,0.0,0.0],[0,0.0,0.0]],[[0,0.0,0.0],[0,0.0,0.0],[0,0.0,0.0],[0,0.0,0.0],[0,0.0,0.0]],[[0,0.0,0.0],[0,0.0,0.0],[0,0.0,0.0],[0,0.0,0.0],[0,0.0,0.0]]]]

Actual:   [[[[0, 0, 0], [0, 0, 0], [0, 0, 0], [0, 0, 0], [0, 0, 0]], [[0, 0, 0], [0, 0, 0], [0, 0, 0], [0, 0, 0], [0, 0, 0]], [[0, 0, 0], [0, 0, 0], [0, 0.044, 0], [0, 0, 0], [0, 0, 0]], [[0, 0, 0], [0, 0, 0], [0, 0, 0], [0, 0, 0], [0, 0, 0]], [[0, 0, 0], [0, 0, 0], [0, 0, 0], [0, 0, 0], [0, 0, 0]]]]

Expected: [[[[0, 0, 0], [0, 0, 0], [0, 0, 0], [0, 0, 0], [0, 0, 0]], [[0, 0, 0], [0, 0, 0], [0, 0, 0], [0, 0, 0], [0, 0, 0]], [[0, 0, 0], [0, 0, 0], [0, 0.044, 0], [0, 0, 0], [0, 0, 0]], [[0, 0, 0], [0, 0, 0], [0, 0, 0], [0, 0, 0], [0, 0, 0]], [[0, 0, 0], [0, 0, 0], [0, 0, 0], [0, 0, 0], [0, 0, 0]]]]