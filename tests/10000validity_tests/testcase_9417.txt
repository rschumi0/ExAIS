import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Sub56092 = tf.keras.layers.Input(shape=([3, 2, 2, 3]))
in1Sub56092 = tf.keras.layers.Input(shape=([3, 2, 2, 3]))
in0Dot22717 = tf.keras.layers.Input(shape=([3]))
in1Dot22717 = tf.keras.layers.Input(shape=([3]))
in0Con14948 = tf.keras.layers.Input(shape=([1, 1, 1]))
in0Ave37740 = tf.keras.layers.Input(shape=([1, 1]))
in1Ave37740 = tf.keras.layers.Input(shape=([1, 1]))
in0Con1445 = tf.keras.layers.Input(shape=([3, 2, 4]))

Sub56092 = keras.layers.Subtract(name = 'Sub56092', )([in0Sub56092,in1Sub56092])
Res17820 = keras.layers.Reshape((3, 2, 6), name = 'Res17820', )(Sub56092)
Dot22717 = keras.layers.Dot(axes=(1, 1), name = 'Dot22717', )([in0Dot22717,in1Dot22717])
Res41143 = keras.layers.Reshape((1, 1), name = 'Res41143', )(Dot22717)
Res87319 = keras.layers.Reshape((1, 1, 1), name = 'Res87319', )(Res41143)
Con14948 = keras.layers.Concatenate(axis=3, name = 'Con14948', )([Res87319,in0Con14948])
Ave37740 = keras.layers.Average(name = 'Ave37740', )([in0Ave37740,in1Ave37740])
Res83570 = keras.layers.Reshape((1, 1, 1), name = 'Res83570', )(Ave37740)
Con40429 = keras.layers.Conv2DTranspose(2, (1, 1),strides=(1, 1), padding='valid', name = 'Con40429', )(Res83570)
Ave65432 = keras.layers.Average(name = 'Ave65432', )([Con14948,Con40429])
Zer45105 = keras.layers.ZeroPadding2D(padding=((2, 0), (1, 0)), name = 'Zer45105', )(Ave65432)
Con1445 = keras.layers.Concatenate(axis=3, name = 'Con1445', )([Zer45105,in0Con1445])
Add16421 = keras.layers.Add(name = 'Add16421', )([Res17820,Con1445])
model = tf.keras.models.Model(inputs=[in0Sub56092,in1Sub56092,in0Dot22717,in1Dot22717,in0Con14948,in0Ave37740,in1Ave37740,in0Con1445], outputs=Add16421)
w = model.get_layer('Con40429').get_weights() 
w[0] = np.array([[[[0.2538], [0.2474]]]])
w[1] = np.array([0, 0])
model.get_layer('Con40429').set_weights(w) 
in0Sub56092 = tf.constant([[[[[0.7628, 0.3776, 0.6668], [0.8281, 0.9438, 0.1162]], [[0.8684, 0.737, 0.5252], [0.1024, 0.323, 0.2367]]], [[[0.6642, 0.3897, 0.2048], [0.3012, 0.0111, 0.2485]], [[0.8858, 0.8671, 0.579], [0.0612, 0.0192, 0.3729]]], [[[0.8662, 0.6138, 0.0099], [0.7938, 0.3055, 0.7282]], [[0.1387, 0.7237, 0.9762], [0.4317, 0.0491, 0.0038]]]]])
in1Sub56092 = tf.constant([[[[[0.7886, 0.7576, 0.6557], [0.5063, 0.0238, 0.8353]], [[0.7864, 0.9416, 0.1978], [0.1411, 0.0326, 0.9789]]], [[[0.7067, 0.6551, 0.3485], [0.5432, 0.6047, 0.1947]], [[0.9155, 0.8844, 0.1699], [0.3848, 0.6652, 0.9023]]], [[[0.6194, 0.5599, 0.6437], [0.2527, 0.4513, 0.3953]], [[0.089, 0.9639, 0.4089], [0.2142, 0.6947, 0.646]]]]])
in0Dot22717 = tf.constant([[0.9926, 0.7298, 0.0371]])
in1Dot22717 = tf.constant([[0.8892, 0.7749, 0.446]])
in0Con14948 = tf.constant([[[[0.7462]]]])
in0Ave37740 = tf.constant([[[0.5521]]])
in1Ave37740 = tf.constant([[[0.1175]]])
in0Con1445 = tf.constant([[[[0.0737, 0.565, 0.5958, 0.6174], [0.382, 0.0865, 0.2835, 0.0041]], [[0.8492, 0.3419, 0.7022, 0.2922], [0.2377, 0.1438, 0.2965, 0.4827]], [[0.2477, 0.1884, 0.7613, 0.0583], [0.7569, 0.4632, 0.5374, 0.0785]]]])
print (np.array2string(model.predict([in0Sub56092,in1Sub56092,in0Dot22717,in1Dot22717,in0Con14948,in0Ave37740,in1Ave37740,in0Con1445],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Add16421.png')

LSub56092 = subtract_layer([[[[[0.7628, 0.3776, 0.6668], [0.8281, 0.9438, 0.1162]], [[0.8684, 0.737, 0.5252], [0.1024, 0.323, 0.2367]]], [[[0.6642, 0.3897, 0.2048], [0.3012, 0.0111, 0.2485]], [[0.8858, 0.8671, 0.579], [0.0612, 0.0192, 0.3729]]], [[[0.8662, 0.6138, 0.0099], [0.7938, 0.3055, 0.7282]], [[0.1387, 0.7237, 0.9762], [0.4317, 0.0491, 0.0038]]]]], [[[[[0.7886, 0.7576, 0.6557], [0.5063, 0.0238, 0.8353]], [[0.7864, 0.9416, 0.1978], [0.1411, 0.0326, 0.9789]]], [[[0.7067, 0.6551, 0.3485], [0.5432, 0.6047, 0.1947]], [[0.9155, 0.8844, 0.1699], [0.3848, 0.6652, 0.9023]]], [[[0.6194, 0.5599, 0.6437], [0.2527, 0.4513, 0.3953]], [[0.089, 0.9639, 0.4089], [0.2142, 0.6947, 0.646]]]]], Sub56092), 
LRes17820 = reshape_layer(Sub56092, [3, 2, 6], Res17820), 
LDot22717 = dot_layer([[0.9926, 0.7298, 0.0371]], [[0.8892, 0.7749, 0.446]], 1, 1, Dot22717), 
LRes41143 = reshape_layer(Dot22717, [1, 1], Res41143), 
LRes87319 = reshape_layer(Res41143, [1, 1, 1], Res87319), 
LCon14948 = concatenate_layer([Res87319,[[[[0.7462]]]]], 3, Con14948), 
LAve37740 = average_layer([[[[0.5521]]], [[[0.1175]]]], Ave37740), 
LRes83570 = reshape_layer(Ave37740, [1, 1, 1], Res83570), 
LCon40429 = conv2D_transpose_layer(Res83570, 1, 1,[[[[0.2538], [0.2474]]]],[0, 0], 1, 1, false, Con40429), 
LAve65432 = average_layer([Con14948,Con40429], Ave65432), 
LZer45105 = zero_padding2D_layer(Ave65432, 2, 0, 1, 0, Zer45105), 
LCon1445 = concatenate_layer([Zer45105,[[[[0.0737, 0.565, 0.5958, 0.6174], [0.382, 0.0865, 0.2835, 0.0041]], [[0.8492, 0.3419, 0.7022, 0.2922], [0.2377, 0.1438, 0.2965, 0.4827]], [[0.2477, 0.1884, 0.7613, 0.0583], [0.7569, 0.4632, 0.5374, 0.0785]]]]], 3, Con1445), 
LAdd16421 = add_layer([Res17820,Con1445], Add16421), 
exec_layers([LSub56092,LRes17820,LDot22717,LRes41143,LRes87319,LCon14948,LAve37740,LRes83570,LCon40429,LAve65432,LZer45105,LCon1445,LAdd16421],["Sub56092","Res17820","Dot22717","Res41143","Res87319","Con14948","Ave37740","Res83570","Con40429","Ave65432","Zer45105","Con1445","Add16421"],Add16421,"Add16421")

Actual (Unparsed): [[[[-0.0258000, -0.3800000, 0.0848000, 0.8868001, 1.5158000, -0.1017000], [0.0820000, -0.2046000, 0.7094000, 0.0478000, 0.5739000, -0.7381000]], [[-0.0425000, -0.2654000, 0.7055000, 0.0999000, 0.1086000, 0.3460000], [-0.0297000, -0.0173000, 0.6468000, -0.1798000, -0.3495000, -0.0467000]], [[0.2467999, 0.0539000, -0.3861000, 0.7295000, 0.6155000, 0.3912000], [0.8245304, 0.1743147, 1.3242000, 0.6807000, -0.1082000, -0.5637000]]]]

Expected (Unparsed): [[[[-0.025799999999999934,-0.38000000000000006,0.0848,0.8867999999999999,1.5158,-0.10170000000000012],[0.08199999999999996,-0.2046,0.7094,0.047799999999999995,0.5739,-0.7381]],[[-0.04249999999999998,-0.2654,0.7055,0.09989999999999999,0.10860000000000003,0.346],[-0.02969999999999995,-0.017299999999999982,0.6467999999999999,-0.1798,-0.34950000000000003,-0.046699999999999964]],[[0.24680000000000002,0.05390000000000006,-0.3861,0.7294999999999999,0.6154999999999999,0.3912],[0.8245303900000001,0.17431476,1.3241999999999998,0.6807,-0.10819999999999996,-0.5637]]]]

Actual:   [[[[-0.0258, -0.38, 0.0848, 0.8869, 1.5158, -0.1017], [0.082, -0.2046, 0.7094, 0.0478, 0.5739, -0.7381]], [[-0.0425, -0.2654, 0.7055, 0.0999, 0.1086, 0.346], [-0.0297, -0.0173, 0.6468, -0.1798, -0.3495, -0.0467]], [[0.2468, 0.0539, -0.3861, 0.7295, 0.6155, 0.3912], [0.8246, 0.1744, 1.3242, 0.6807, -0.1082, -0.5637]]]]

Expected: [[[[-0.0257, -0.38, 0.0848, 0.8868, 1.5158, -0.1017], [0.082, -0.2046, 0.7094, 0.0478, 0.5739, -0.7381]], [[-0.0424, -0.2654, 0.7055, 0.0999, 0.1087, 0.346], [-0.0296, -0.0172, 0.6468, -0.1798, -0.3495, -0.0466]], [[0.2469, 0.054, -0.3861, 0.7295, 0.6155, 0.3912], [0.8246, 0.1744, 1.3242, 0.6807, -0.1081, -0.5637]]]]