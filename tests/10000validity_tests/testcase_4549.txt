import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Sub65024 = tf.keras.layers.Input(shape=([2, 3]))
in1Sub65024 = tf.keras.layers.Input(shape=([2, 3]))

Sub65024 = keras.layers.Subtract(name = 'Sub65024', )([in0Sub65024,in1Sub65024])
ReL86429 = keras.layers.ReLU(max_value=9.465802399406854, negative_slope=4.938376030391181, threshold=1.4453173185903345, name = 'ReL86429', )(Sub65024)
Res50926 = keras.layers.Reshape((2, 3, 1), name = 'Res50926', )(ReL86429)
Sep79790 = keras.layers.SeparableConv2D(3, (1, 3),strides=(1, 1), padding='same', name = 'Sep79790', )(Res50926)
model = tf.keras.models.Model(inputs=[in0Sub65024,in1Sub65024], outputs=Sep79790)
w = model.get_layer('Sep79790').get_weights() 
w[0] = np.array([[[[0.9668]], [[0.7154]], [[0.2442]]]])
w[1] = np.array([[[[0.3488, 0.1446, 0.6001]]]])
w[2] = np.array([0, 0, 0])
model.get_layer('Sep79790').set_weights(w) 
in0Sub65024 = tf.constant([[[0.6522, 0.4563, 0.0129], [0.636, 0.0229, 0.1601]]])
in1Sub65024 = tf.constant([[[0.1324, 0.8112, 0.0544], [0.5656, 0.6013, 0.0417]]])
print (np.array2string(model.predict([in0Sub65024,in1Sub65024],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Sep79790.png')

LSub65024 = subtract_layer([[[0.6522, 0.4563, 0.0129], [0.636, 0.0229, 0.1601]]], [[[0.1324, 0.8112, 0.0544], [0.5656, 0.6013, 0.0417]]], Sub65024), 
LReL86429 = relu_layer(Sub65024, 9.465802399406854, 4.938376030391181, 1.4453173185903345, ReL86429), 
LRes50926 = reshape_layer(ReL86429, [2, 3, 1], Res50926), 
LSep79790 = separable_conv2D_layer(Res50926, 1, 3,[[[[[0.9668]], [[0.7154]], [[0.2442]]]],[[[[0.3488, 0.1446, 0.6001]]]]],[0, 0, 0], 1, 1, true, Sep79790), 
exec_layers([LSub65024,LReL86429,LRes50926,LSep79790],["Sub65024","ReL86429","Res50926","Sep79790"],Sep79790,"Sep79790")

Actual (Unparsed): [[[[-1.8977329, -0.7867322, -3.2649929], [-4.3850624, -1.8178900, -7.5443691], [-4.8301110, -2.0023912, -8.3100619]], [[-2.5455318, -1.0552864, -4.3795116], [-5.3416114, -2.2144410, -9.1900832], [-5.0052679, -2.0750050, -8.6114143]]]]

Expected (Unparsed): [[[[-1.8977328786864844,-0.7867321509692249,-3.2649928340016032],[-4.385062331185774,-1.817889945784011,-7.544368993533782],[-4.830110934187108,-2.0023911728310084,-8.31006184519978]],[[-2.5455318393128015,-1.0552864219169469,-4.379511630652557],[-5.341611421855601,-2.2144409736247703,-9.190083183072094],[-5.005267942657751,-2.0750050014573134,-8.611414255702169]]]]

Actual:   [[[[-1.8977, -0.7867, -3.2649], [-4.385, -1.8178, -7.5443], [-4.8301, -2.0023, -8.31]], [[-2.5455, -1.0552, -4.3795], [-5.3416, -2.2144, -9.19], [-5.0052, -2.075, -8.6114]]]]

Expected: [[[[-1.8977, -0.7867, -3.2649], [-4.385, -1.8178, -7.5443], [-4.8301, -2.0023, -8.31]], [[-2.5455, -1.0552, -4.3795], [-5.3416, -2.2144, -9.19], [-5.0052, -2.075, -8.6114]]]]