import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Sub56150 = tf.keras.layers.Input(shape=([2, 2, 2, 3]))
in1Sub56150 = tf.keras.layers.Input(shape=([2, 2, 2, 3]))
in0Mul71077 = tf.keras.layers.Input(shape=([2, 2, 1]))
in1Mul71077 = tf.keras.layers.Input(shape=([2, 2, 1]))
in0Add7215 = tf.keras.layers.Input(shape=([2, 2, 1]))
in1Add7215 = tf.keras.layers.Input(shape=([2, 2, 1]))
in0Ave73258 = tf.keras.layers.Input(shape=([1, 1, 1]))
in1Ave73258 = tf.keras.layers.Input(shape=([1, 1, 1]))
in0Con92360 = tf.keras.layers.Input(shape=([4, 4, 5]))

Sub56150 = keras.layers.Subtract(name = 'Sub56150', )([in0Sub56150,in1Sub56150])
Res67170 = keras.layers.Reshape((2, 2, 6), name = 'Res67170', )(Sub56150)
Zer78618 = keras.layers.ZeroPadding2D(padding=((1, 1), (1, 1)), name = 'Zer78618', )(Res67170)
Mul71077 = keras.layers.Multiply(name = 'Mul71077', )([in0Mul71077,in1Mul71077])
Add7215 = keras.layers.Add(name = 'Add7215', )([in0Add7215,in1Add7215])
Mul35265 = keras.layers.Multiply(name = 'Mul35265', )([Mul71077,Add7215])
Ave73258 = keras.layers.Average(name = 'Ave73258', )([in0Ave73258,in1Ave73258])
Zer44346 = keras.layers.ZeroPadding2D(padding=((1, 0), (1, 0)), name = 'Zer44346', )(Ave73258)
Sub19687 = keras.layers.Subtract(name = 'Sub19687', )([Mul35265,Zer44346])
Zer59067 = keras.layers.ZeroPadding2D(padding=((2, 0), (2, 0)), name = 'Zer59067', )(Sub19687)
Con92360 = keras.layers.Concatenate(axis=3, name = 'Con92360', )([Zer59067,in0Con92360])
Ave93692 = keras.layers.Average(name = 'Ave93692', )([Zer78618,Con92360])
model = tf.keras.models.Model(inputs=[in0Sub56150,in1Sub56150,in0Mul71077,in1Mul71077,in0Add7215,in1Add7215,in0Ave73258,in1Ave73258,in0Con92360], outputs=Ave93692)
in0Sub56150 = tf.constant([[[[[0.0523, 0.4138, 0.5744], [0.978, 0.7588, 0.0319]], [[0.4825, 0.8544, 0.3925], [0.5432, 0.5857, 0.8932]]], [[[0.17, 0.2069, 0.7647], [0.9611, 0.2347, 0.824]], [[0.8552, 0.7875, 0.0792], [0.4009, 0.8044, 0.4234]]]]])
in1Sub56150 = tf.constant([[[[[0.695, 0.9347, 0.6632], [0.7449, 0.0223, 0.1399]], [[0.3279, 0.8053, 0.2726], [0.539, 0.7085, 0.8337]]], [[[0.4808, 0.9726, 0.053], [0.2024, 0.2053, 0.2511]], [[0.484, 0.7413, 0.6403], [0.3647, 0.4129, 0.3643]]]]])
in0Mul71077 = tf.constant([[[[0.5303], [0.3977]], [[0.3915], [0.0903]]]])
in1Mul71077 = tf.constant([[[[0.1843], [0.0498]], [[0.1319], [0.1908]]]])
in0Add7215 = tf.constant([[[[0.5741], [0.4591]], [[0.8791], [0.3793]]]])
in1Add7215 = tf.constant([[[[0.9735], [0.8416]], [[0.0591], [0.6643]]]])
in0Ave73258 = tf.constant([[[[0.8439]]]])
in1Ave73258 = tf.constant([[[[0.315]]]])
in0Con92360 = tf.constant([[[[0.0679, 0.5101, 0.6438, 0.4476, 0.1138], [0.1572, 0.302, 0.9143, 0.0454, 0.4923], [0.6916, 0.5321, 0.2474, 0.4322, 0.5192], [0.1565, 0.2766, 0.2877, 0.1641, 0.3311]], [[0.1913, 0.6077, 0.1034, 0.0978, 0.4576], [0.7442, 0.5448, 0.0621, 0.3685, 0.4032], [0.2405, 0.9704, 0.4284, 0.1911, 0.9859], [0.4439, 0.9554, 0.4387, 0.6208, 0.9228]], [[0.2287, 0.3929, 0.4458, 0.3279, 0.8737], [0.2009, 0.8411, 0.4181, 0.8149, 0.9816], [0.5354, 0.3337, 0.0526, 0.6775, 0.4067], [0.3572, 0.7214, 0.3101, 0.9199, 0.4906]], [[0.374, 0.7269, 0.3068, 0.0539, 0.2034], [0.9168, 0.3735, 0.1421, 0.9586, 0.499], [0.3869, 0.4429, 0.6449, 0.0441, 0.836], [0.6142, 0.7044, 0.4734, 0.9878, 0.1478]]]])
print (np.array2string(model.predict([in0Sub56150,in1Sub56150,in0Mul71077,in1Mul71077,in0Add7215,in1Add7215,in0Ave73258,in1Ave73258,in0Con92360],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Ave93692.png')

LSub56150 = subtract_layer([[[[[0.0523, 0.4138, 0.5744], [0.978, 0.7588, 0.0319]], [[0.4825, 0.8544, 0.3925], [0.5432, 0.5857, 0.8932]]], [[[0.17, 0.2069, 0.7647], [0.9611, 0.2347, 0.824]], [[0.8552, 0.7875, 0.0792], [0.4009, 0.8044, 0.4234]]]]], [[[[[0.695, 0.9347, 0.6632], [0.7449, 0.0223, 0.1399]], [[0.3279, 0.8053, 0.2726], [0.539, 0.7085, 0.8337]]], [[[0.4808, 0.9726, 0.053], [0.2024, 0.2053, 0.2511]], [[0.484, 0.7413, 0.6403], [0.3647, 0.4129, 0.3643]]]]], Sub56150), 
LRes67170 = reshape_layer(Sub56150, [2, 2, 6], Res67170), 
LZer78618 = zero_padding2D_layer(Res67170, 1, 1, 1, 1, Zer78618), 
LMul71077 = multiply_layer([[[[[0.5303], [0.3977]], [[0.3915], [0.0903]]]], [[[[0.1843], [0.0498]], [[0.1319], [0.1908]]]]], Mul71077), 
LAdd7215 = add_layer([[[[[0.5741], [0.4591]], [[0.8791], [0.3793]]]], [[[[0.9735], [0.8416]], [[0.0591], [0.6643]]]]], Add7215), 
LMul35265 = multiply_layer([Mul71077,Add7215], Mul35265), 
LAve73258 = average_layer([[[[[0.8439]]]], [[[[0.315]]]]], Ave73258), 
LZer44346 = zero_padding2D_layer(Ave73258, 1, 0, 1, 0, Zer44346), 
LSub19687 = subtract_layer(Mul35265,Zer44346, Sub19687), 
LZer59067 = zero_padding2D_layer(Sub19687, 2, 0, 2, 0, Zer59067), 
LCon92360 = concatenate_layer([Zer59067,[[[[0.0679, 0.5101, 0.6438, 0.4476, 0.1138], [0.1572, 0.302, 0.9143, 0.0454, 0.4923], [0.6916, 0.5321, 0.2474, 0.4322, 0.5192], [0.1565, 0.2766, 0.2877, 0.1641, 0.3311]], [[0.1913, 0.6077, 0.1034, 0.0978, 0.4576], [0.7442, 0.5448, 0.0621, 0.3685, 0.4032], [0.2405, 0.9704, 0.4284, 0.1911, 0.9859], [0.4439, 0.9554, 0.4387, 0.6208, 0.9228]], [[0.2287, 0.3929, 0.4458, 0.3279, 0.8737], [0.2009, 0.8411, 0.4181, 0.8149, 0.9816], [0.5354, 0.3337, 0.0526, 0.6775, 0.4067], [0.3572, 0.7214, 0.3101, 0.9199, 0.4906]], [[0.374, 0.7269, 0.3068, 0.0539, 0.2034], [0.9168, 0.3735, 0.1421, 0.9586, 0.499], [0.3869, 0.4429, 0.6449, 0.0441, 0.836], [0.6142, 0.7044, 0.4734, 0.9878, 0.1478]]]]], 3, Con92360), 
LAve93692 = average_layer([Zer78618,Con92360], Ave93692), 
exec_layers([LSub56150,LRes67170,LZer78618,LMul71077,LAdd7215,LMul35265,LAve73258,LZer44346,LSub19687,LZer59067,LCon92360,LAve93692],["Sub56150","Res67170","Zer78618","Mul71077","Add7215","Mul35265","Ave73258","Zer44346","Sub19687","Zer59067","Con92360","Ave93692"],Ave93692,"Ave93692")

Actual (Unparsed): [[[[0.0000000, 0.0339500, 0.2550500, 0.3219000, 0.2238000, 0.0569000], [0.0000000, 0.0786000, 0.1510000, 0.4571500, 0.0227000, 0.2461500], [0.0000000, 0.3458000, 0.2660500, 0.1237000, 0.2161000, 0.2596000], [0.0000000, 0.0782500, 0.1383000, 0.1438500, 0.0820500, 0.1655500]], [[0.0000000, 0.0956500, 0.3038500, 0.0517000, 0.0489000, 0.2288000], [-0.3213500, 0.1116500, 0.2280000, 0.1476000, 0.5525000, 0.1476000], [0.0773000, 0.1448000, 0.5451500, 0.2163000, 0.0341500, 0.5227000], [0.0000000, 0.2219500, 0.4777000, 0.2193500, 0.3104000, 0.4614000]], [[0.0000000, 0.1143500, 0.1964500, 0.2229000, 0.1639500, 0.4368500], [-0.1554000, -0.2824000, 0.7764000, 0.5884000, 0.4221500, 0.7772500], [0.2612268, 0.2908000, -0.1137000, 0.0444000, 0.5345000, 0.2329000], [0.0128805, 0.1786000, 0.3607000, 0.1550500, 0.4599500, 0.2453000]], [[0.0000000, 0.1870000, 0.3634500, 0.1534000, 0.0269500, 0.1017000], [0.0000000, 0.4584000, 0.1867500, 0.0710500, 0.4793000, 0.2495000], [0.0242238, 0.1934500, 0.2214500, 0.3224500, 0.0220500, 0.4180000], [-0.2807348, 0.3071000, 0.3522000, 0.2367000, 0.4939000, 0.0739000]]]]

Expected (Unparsed): [[[[0,0.03395,0.25505,0.3219,0.2238,0.0569],[0,0.0786,0.151,0.45715,0.0227,0.24615],[0,0.3458,0.26605,0.1237,0.2161,0.2596],[0,0.07825,0.1383,0.14385,0.08205,0.16555]],[[0,0.09565,0.30385,0.0517,0.0489,0.2288],[-0.32134999999999997,0.11165000000000003,0.22799999999999998,0.14759999999999998,0.5525,0.1476],[0.07729999999999998,0.1448,0.54515,0.2163,0.034149999999999986,0.5226999999999999],[0,0.22195,0.4777,0.21935,0.3104,0.4614]],[[0,0.11435,0.19645,0.2229,0.16395,0.43685],[-0.15539999999999998,-0.28240000000000004,0.7764,0.5884,0.42214999999999997,0.77725],[0.26122679360199996,0.2908,-0.11369999999999997,0.04439999999999998,0.5345,0.2329],[0.012880480910999999,0.1786,0.3607,0.15505,0.45995,0.2453]],[[0,0.187,0.36345,0.1534,0.02695,0.1017],[0,0.4584,0.18675,0.07105,0.4793,0.2495],[0.024223784535,0.19345,0.22145,0.32245,0.02205,0.418],[-0.280734782568,0.3071,0.3522,0.2367,0.4939,0.0739]]]]

Actual:   [[[[0, 0.034, 0.2551, 0.3219, 0.2238, 0.0569], [0, 0.0786, 0.151, 0.4572, 0.0227, 0.2462], [0, 0.3458, 0.2661, 0.1237, 0.2161, 0.2596], [0, 0.0783, 0.1383, 0.1439, 0.0821, 0.1656]], [[0, 0.0957, 0.3039, 0.0517, 0.0489, 0.2288], [-0.3213, 0.1117, 0.228, 0.1476, 0.5525, 0.1476], [0.0773, 0.1448, 0.5452, 0.2163, 0.0342, 0.5227], [0, 0.222, 0.4777, 0.2194, 0.3104, 0.4614]], [[0, 0.1144, 0.1965, 0.2229, 0.164, 0.4369], [-0.1554, -0.2824, 0.7764, 0.5884, 0.4222, 0.7773], [0.2613, 0.2908, -0.1137, 0.0444, 0.5345, 0.2329], [0.0129, 0.1786, 0.3607, 0.1551, 0.46, 0.2453]], [[0, 0.187, 0.3635, 0.1534, 0.027, 0.1017], [0, 0.4584, 0.1868, 0.0711, 0.4793, 0.2495], [0.0243, 0.1935, 0.2215, 0.3225, 0.0221, 0.418], [-0.2807, 0.3071, 0.3522, 0.2367, 0.4939, 0.0739]]]]

Expected: [[[[0, 0.034, 0.2551, 0.3219, 0.2238, 0.0569], [0, 0.0786, 0.151, 0.4572, 0.0227, 0.2462], [0, 0.3458, 0.2661, 0.1237, 0.2161, 0.2596], [0, 0.0783, 0.1383, 0.1439, 0.0821, 0.1656]], [[0, 0.0957, 0.3039, 0.0517, 0.0489, 0.2288], [-0.3213, 0.1117, 0.228, 0.1476, 0.5525, 0.1476], [0.0773, 0.1448, 0.5452, 0.2163, 0.0342, 0.5227], [0, 0.222, 0.4777, 0.2194, 0.3104, 0.4614]], [[0, 0.1144, 0.1965, 0.2229, 0.164, 0.4369], [-0.1553, -0.2824, 0.7764, 0.5884, 0.4222, 0.7773], [0.2613, 0.2908, -0.1136, 0.0444, 0.5345, 0.2329], [0.0129, 0.1786, 0.3607, 0.1551, 0.46, 0.2453]], [[0, 0.187, 0.3635, 0.1534, 0.027, 0.1017], [0, 0.4584, 0.1868, 0.0711, 0.4793, 0.2495], [0.0243, 0.1935, 0.2215, 0.3225, 0.0221, 0.418], [-0.2807, 0.3071, 0.3522, 0.2367, 0.4939, 0.0739]]]]