import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Fla94209 = tf.keras.layers.Input(shape=([2]))

Fla94209 = keras.layers.Flatten(name = 'Fla94209', )(in0Fla94209)
ReL48651 = keras.layers.ReLU(max_value=4.11608415818933, negative_slope=4.722743092137683, threshold=1.6456956200122341, name = 'ReL48651', )(Fla94209)
Res9006 = keras.layers.Reshape((2, 1), name = 'Res9006', )(ReL48651)
Res45778 = keras.layers.Reshape((2, 1, 1), name = 'Res45778', )(Res9006)
Sep36505 = keras.layers.SeparableConv2D(4, (2, 1),strides=(1, 1), padding='valid', name = 'Sep36505', )(Res45778)
model = tf.keras.models.Model(inputs=[in0Fla94209], outputs=Sep36505)
w = model.get_layer('Sep36505').get_weights() 
w[0] = np.array([[[[0.0054]]], [[[0.2581]]]])
w[1] = np.array([[[[0.9834, 0.2672, 0.6752, 0.1701]]]])
w[2] = np.array([0, 0, 0, 0])
model.get_layer('Sep36505').set_weights(w) 
in0Fla94209 = tf.constant([[1.6979, 1.4438]])
print (np.array2string(model.predict([in0Fla94209],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Sep36505.png')

LFla94209 = flatten_layer([[1.6979, 1.4438]], Fla94209), 
LReL48651 = relu_layer(Fla94209, 4.11608415818933, 4.722743092137683, 1.6456956200122341, ReL48651), 
LRes9006 = reshape_layer(ReL48651, [2, 1], Res9006), 
LRes45778 = reshape_layer(Res9006, [2, 1, 1], Res45778), 
LSep36505 = separable_conv2D_layer(Res45778, 2, 1,[[[[[0.0054]]], [[[0.2581]]]],[[[[0.9834, 0.2672, 0.6752, 0.1701]]]]],[0, 0, 0, 0], 1, 1, false, Sep36505), 
exec_layers([LFla94209,LReL48651,LRes9006,LRes45778,LSep36505],["Fla94209","ReL48651","Res9006","Res45778","Sep36505"],Sep36505,"Sep36505")

Actual (Unparsed): [[[[-0.2329970, -0.0633077, -0.1599751, -0.0403018]]]]

Expected (Unparsed): [[[[-0.23299694770023088,-0.06330769211460412,-0.159975126181814,-0.04030179052655]]]]

Actual:   [[[[-0.2329, -0.0633, -0.1599, -0.0403]]]]

Expected: [[[[-0.2329, -0.0633, -0.1599, -0.0403]]]]