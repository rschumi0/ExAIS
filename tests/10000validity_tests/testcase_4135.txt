import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Sub66980 = tf.keras.layers.Input(shape=([3]))
in1Sub66980 = tf.keras.layers.Input(shape=([3]))
in0Mul72685 = tf.keras.layers.Input(shape=([2, 2]))
in1Mul72685 = tf.keras.layers.Input(shape=([2, 2]))
in0Mul61062 = tf.keras.layers.Input(shape=([1, 1, 1, 1]))
in1Mul61062 = tf.keras.layers.Input(shape=([1, 1, 1, 1]))

Sub66980 = keras.layers.Subtract(name = 'Sub66980', )([in0Sub66980,in1Sub66980])
Res4546 = keras.layers.Reshape((3, 1), name = 'Res4546', )(Sub66980)
Sim41033 = keras.layers.SimpleRNN(3,name = 'Sim41033', )(Res4546)
Res38783 = keras.layers.Reshape((3, 1), name = 'Res38783', )(Sim41033)
GRU272 = keras.layers.GRU(1,reset_after=True, recurrent_activation='sigmoid', name = 'GRU272', )(Res38783)
Res59173 = keras.layers.Reshape((1, 1), name = 'Res59173', )(GRU272)
Res59887 = keras.layers.Reshape((1, 1, 1), name = 'Res59887', )(Res59173)
Res59383 = keras.layers.Reshape((1, 1, 1, 1), name = 'Res59383', )(Res59887)
Zer10245 = keras.layers.ZeroPadding3D(padding=((1, 0), (1, 0), (0, 0)), name = 'Zer10245', )(Res59383)
Mul72685 = keras.layers.Multiply(name = 'Mul72685', )([in0Mul72685,in1Mul72685])
Res52723 = keras.layers.Reshape((2, 2, 1), name = 'Res52723', )(Mul72685)
Res46624 = keras.layers.Reshape((2, 2, 1, 1), name = 'Res46624', )(Res52723)
Mul61062 = keras.layers.Multiply(name = 'Mul61062', )([in0Mul61062,in1Mul61062])
ReL87389 = keras.layers.ReLU(max_value=5.412683826428988, negative_slope=9.408042154338009, threshold=8.012570107604276, name = 'ReL87389', )(Mul61062)
Zer13242 = keras.layers.ZeroPadding3D(padding=((1, 0), (1, 0), (0, 0)), name = 'Zer13242', )(ReL87389)
Mul24869 = keras.layers.Multiply(name = 'Mul24869', )([Res46624,Zer13242])
Lea16667 = keras.layers.LeakyReLU(alpha=3.7795791695293373, name = 'Lea16667', )(Mul24869)
Ave25660 = keras.layers.Average(name = 'Ave25660', )([Zer10245,Lea16667])
Res10560 = keras.layers.Reshape((2, 2, 1), name = 'Res10560', )(Ave25660)
Res80802 = keras.layers.Reshape((2, 2), name = 'Res80802', )(Res10560)
Max19886 = keras.layers.MaxPool1D(pool_size=(1), strides=(7), padding='valid', name = 'Max19886', )(Res80802)
model = tf.keras.models.Model(inputs=[in0Sub66980,in1Sub66980,in0Mul72685,in1Mul72685,in0Mul61062,in1Mul61062], outputs=Max19886)
w = model.get_layer('Sim41033').get_weights() 
w[0] = np.array([[3, 2, 3]])
w[1] = np.array([[5, 6, 6], [1, 7, 1], [6, 1, 4]])
w[2] = np.array([1, 9, 10])
model.get_layer('Sim41033').set_weights(w) 
w = model.get_layer('GRU272').get_weights() 
w[0] = np.array([[7, 10, 5]])
w[1] = np.array([[8, 5, 10]])
w[2] = np.array([[7, 8, 9], [10, 7, 10]])
model.get_layer('GRU272').set_weights(w) 
in0Sub66980 = tf.constant([[0.6181, 0.3488, 0.9597]])
in1Sub66980 = tf.constant([[0.3473, 0.8411, 0.7148]])
in0Mul72685 = tf.constant([[[0.4565, 0.1522], [0.4266, 0.4221]]])
in1Mul72685 = tf.constant([[[0.738, 0.797], [0.601, 0.6809]]])
in0Mul61062 = tf.constant([[[[[0.9196]]]]])
in1Mul61062 = tf.constant([[[[[0.4932]]]]])
print (np.array2string(model.predict([in0Sub66980,in1Sub66980,in0Mul72685,in1Mul72685,in0Mul61062,in1Mul61062],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Max19886.png')

LSub66980 = subtract_layer([[0.6181, 0.3488, 0.9597]], [[0.3473, 0.8411, 0.7148]], Sub66980), 
LRes4546 = reshape_layer(Sub66980, [3, 1], Res4546), 
LSim41033 = simple_rnn_layer(Res4546,[[3, 2, 3]],[[5, 6, 6], [1, 7, 1], [6, 1, 4]],[1, 9, 10], Sim41033), 
LRes38783 = reshape_layer(Sim41033, [3, 1], Res38783), 
LGRU272 = gru_layer(Res38783,[[7, 10, 5]],[[8, 5, 10]],[[7, 8, 9], [10, 7, 10]], true, GRU272), 
LRes59173 = reshape_layer(GRU272, [1, 1], Res59173), 
LRes59887 = reshape_layer(Res59173, [1, 1, 1], Res59887), 
LRes59383 = reshape_layer(Res59887, [1, 1, 1, 1], Res59383), 
LZer10245 = zero_padding3D_layer(Res59383, 1, 0, 1, 0, 0, 0, Zer10245), 
LMul72685 = multiply_layer([[[[0.4565, 0.1522], [0.4266, 0.4221]]], [[[0.738, 0.797], [0.601, 0.6809]]]], Mul72685), 
LRes52723 = reshape_layer(Mul72685, [2, 2, 1], Res52723), 
LRes46624 = reshape_layer(Res52723, [2, 2, 1, 1], Res46624), 
LMul61062 = multiply_layer([[[[[[0.9196]]]]], [[[[[0.4932]]]]]], Mul61062), 
LReL87389 = relu_layer(Mul61062, 5.412683826428988, 9.408042154338009, 8.012570107604276, ReL87389), 
LZer13242 = zero_padding3D_layer(ReL87389, 1, 0, 1, 0, 0, 0, Zer13242), 
LMul24869 = multiply_layer([Res46624,Zer13242], Mul24869), 
LLea16667 = leaky_relu_layer(Mul24869, 3.7795791695293373, Lea16667), 
LAve25660 = average_layer([Zer10245,Lea16667], Ave25660), 
LRes10560 = reshape_layer(Ave25660, [2, 2, 1], Res10560), 
LRes80802 = reshape_layer(Res10560, [2, 2], Res80802), 
LMax19886 = max_pool1D_layer(Res80802, 1, 7, false, Max19886), 
exec_layers([LSub66980,LRes4546,LSim41033,LRes38783,LGRU272,LRes59173,LRes59887,LRes59383,LZer10245,LMul72685,LRes52723,LRes46624,LMul61062,LReL87389,LZer13242,LMul24869,LLea16667,LAve25660,LRes10560,LRes80802,LMax19886],["Sub66980","Res4546","Sim41033","Res38783","GRU272","Res59173","Res59887","Res59383","Zer10245","Mul72685","Res52723","Res46624","Mul61062","ReL87389","Zer13242","Mul24869","Lea16667","Ave25660","Res10560","Res80802","Max19886"],Max19886,"Max19886")

Actual (Unparsed): [[[0.0000000, 0.0000000]]]

Expected (Unparsed): [[[0.0,0.0]]]

Actual:   [[[0, 0]]]

Expected: [[[0, 0]]]