import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Min280 = tf.keras.layers.Input(shape=([1, 1]))
in1Min280 = tf.keras.layers.Input(shape=([1, 1]))
in0Con43289 = tf.keras.layers.Input(shape=([2, 3]))
in0Sim9164 = tf.keras.layers.Input(shape=([1, 1]))

Min280 = keras.layers.Minimum(name = 'Min280', )([in0Min280,in1Min280])
Zer2975 = keras.layers.ZeroPadding1D(padding=((1, 0)), name = 'Zer2975', )(Min280)
Con43289 = keras.layers.Concatenate(axis=2, name = 'Con43289', )([Zer2975,in0Con43289])
Sim9164 = keras.layers.SimpleRNN(3,name = 'Sim9164', )(in0Sim9164)
ReL48751 = keras.layers.ReLU(max_value=9.037212439190577, negative_slope=8.10347953290762, threshold=3.194775425151426, name = 'ReL48751', )(Sim9164)
Res80674 = keras.layers.Reshape((3, 1), name = 'Res80674', )(ReL48751)
Res28435 = keras.layers.Reshape((3, 1, 1), name = 'Res28435', )(Res80674)
Res98350 = keras.layers.Reshape((3, 1, 1, 1), name = 'Res98350', )(Res28435)
Con32892 = keras.layers.Conv3D(2, (2, 1, 1),strides=(1, 1, 1), padding='valid', dilation_rate=(1, 1, 1), name = 'Con32892', )(Res98350)
Res11446 = keras.layers.Reshape((2, 1, 2), name = 'Res11446', )(Con32892)
Res12442 = keras.layers.Reshape((2, 2), name = 'Res12442', )(Res11446)
Sep54555 = keras.layers.SeparableConv1D(4, (1),strides=(1), padding='valid', name = 'Sep54555', )(Res12442)
Min64973 = keras.layers.Minimum(name = 'Min64973', )([Con43289,Sep54555])
model = tf.keras.models.Model(inputs=[in0Min280,in1Min280,in0Con43289,in0Sim9164], outputs=Min64973)
w = model.get_layer('Sim9164').get_weights() 
w[0] = np.array([[3, 4, 2]])
w[1] = np.array([[8, 1, 1], [4, 9, 2], [5, 9, 3]])
w[2] = np.array([8, 1, 6])
model.get_layer('Sim9164').set_weights(w) 
w = model.get_layer('Con32892').get_weights() 
w[0] = np.array([[[[[0.6027, 0.7691]]]], [[[[0.9718, 0.3369]]]]])
w[1] = np.array([0, 0])
model.get_layer('Con32892').set_weights(w) 
w = model.get_layer('Sep54555').get_weights() 
w[0] = np.array([[[0.1535], [0.2636]]])
w[1] = np.array([[[0.0892, 0.9537, 0.2567, 0.2578], [0.6323, 0.8116, 0.6435, 0.8439]]])
w[2] = np.array([0, 0, 0, 0])
model.get_layer('Sep54555').set_weights(w) 
in0Min280 = tf.constant([[[0.7535]]])
in1Min280 = tf.constant([[[0.2401]]])
in0Con43289 = tf.constant([[[0.8741, 0.775, 0.9345], [0.1625, 0.1893, 0.6534]]])
in0Sim9164 = tf.constant([[[6]]])
print (np.array2string(model.predict([in0Min280,in1Min280,in0Con43289,in0Sim9164],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Min64973.png')

LMin280 = minimum_layer([[[[0.7535]]], [[[0.2401]]]], Min280), 
LZer2975 = zero_padding1D_layer(Min280, 1, 0, Zer2975), 
LCon43289 = concatenate_layer([Zer2975,[[[0.8741, 0.775, 0.9345], [0.1625, 0.1893, 0.6534]]]], 2, Con43289), 
LSim9164 = simple_rnn_layer([[[6]]],[[3, 4, 2]],[[8, 1, 1], [4, 9, 2], [5, 9, 3]],[8, 1, 6], Sim9164), 
LReL48751 = relu_layer(Sim9164, 9.037212439190577, 8.10347953290762, 3.194775425151426, ReL48751), 
LRes80674 = reshape_layer(ReL48751, [3, 1], Res80674), 
LRes28435 = reshape_layer(Res80674, [3, 1, 1], Res28435), 
LRes98350 = reshape_layer(Res28435, [3, 1, 1, 1], Res98350), 
LCon32892 = conv3D_layer(Res98350, 2, 1, 1,[[[[[0.6027, 0.7691]]]], [[[[0.9718, 0.3369]]]]],[0, 0], 1, 1, 1, false, 1, 1, 1, Con32892), 
LRes11446 = reshape_layer(Con32892, [2, 1, 2], Res11446), 
LRes12442 = reshape_layer(Res11446, [2, 2], Res12442), 
LSep54555 = separable_conv1D_layer(Res12442, 1,[[[[0.1535], [0.2636]]],[[[0.0892, 0.9537, 0.2567, 0.2578], [0.6323, 0.8116, 0.6435, 0.8439]]]],[0, 0, 0, 0], 1, false, Sep54555), 
LMin64973 = minimum_layer([Con43289,Sep54555], Min64973), 
exec_layers([LMin280,LZer2975,LCon43289,LSim9164,LReL48751,LRes80674,LRes28435,LRes98350,LCon32892,LRes11446,LRes12442,LSep54555,LMin64973],["Min280","Zer2975","Con43289","Sim9164","ReL48751","Res80674","Res28435","Res98350","Con32892","Res11446","Res12442","Sep54555","Min64973"],Min64973,"Min64973")

Actual (Unparsed): [[[-3.6619991, -8.3077151, -4.4400646, -5.4838990], [-3.6619991, -8.3077151, -4.4400646, -5.4838990]]]

Expected (Unparsed): [[[-3.6619991021814435,-8.307715105052221,-4.440064584989068,-5.483898950539977],[-3.661999102181444,-8.307715105052221,-4.440064584989068,-5.483898950539977]]]

Actual:   [[[-3.6619, -8.3077, -4.44, -5.4838], [-3.6619, -8.3077, -4.44, -5.4838]]]

Expected: [[[-3.6619, -8.3077, -4.44, -5.4838], [-3.6619, -8.3077, -4.44, -5.4838]]]