import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Up_27375 = tf.keras.layers.Input(shape=([1, 3, 2, 4]))
in0PRe50644 = tf.keras.layers.Input(shape=([1, 1, 2]))
in0Con19051 = tf.keras.layers.Input(shape=([1, 3, 14]))

Up_27375 = keras.layers.UpSampling3D(size=(1, 1, 2), name = 'Up_27375', )(in0Up_27375)
Res17237 = keras.layers.Reshape((1, 3, 16), name = 'Res17237', )(Up_27375)
PRe50644 = keras.layers.PReLU(name = 'PRe50644', input_shape=(1, 1, 2))(in0PRe50644)
Zer70471 = keras.layers.ZeroPadding2D(padding=((0, 0), (2, 0)), name = 'Zer70471', )(PRe50644)
Con19051 = keras.layers.Concatenate(axis=3, name = 'Con19051', )([Zer70471,in0Con19051])
Mul16749 = keras.layers.Multiply(name = 'Mul16749', )([Res17237,Con19051])
Con42479 = keras.layers.Conv2D(3, (1, 3),strides=(1, 1), padding='same', dilation_rate=(1, 1), name = 'Con42479', )(Mul16749)
model = tf.keras.models.Model(inputs=[in0Up_27375,in0PRe50644,in0Con19051], outputs=Con42479)
w = model.get_layer('PRe50644').get_weights() 
w[0] = np.array([[[0.1296, 0.409]]])
model.get_layer('PRe50644').set_weights(w) 
w = model.get_layer('Con42479').get_weights() 
w[0] = np.array([[[[0.2261, 0.1764, 0.1839], [0.7875, 0.8925, 0.8382], [0.4137, 0.1857, 0.4455], [0.6944, 0.6546, 0.5893], [0.6077, 0.7109, 0.16], [0.5019, 0.598, 0.6568], [0.2419, 0.6374, 0.4605], [0.3814, 0.6405, 0.4071], [0.9923, 0.6012, 0.6977], [0.4662, 0.7431, 0.7118], [0.4109, 0.3014, 0.2778], [0.3973, 0.2988, 0.8605], [0.1295, 0.8343, 0.892], [0.5204, 0.6498, 0.1082], [0.5778, 0.2723, 0.2674], [0.0491, 0.4752, 0.8586]], [[0.5007, 0.0732, 0.9918], [0.7422, 0.4428, 0.7729], [0.7253, 0.209, 0.3329], [0.9347, 0.4103, 0.6092], [0.2587, 0.3877, 0.6846], [0.7281, 0.0013, 0.5828], [0.5491, 0.5453, 0.5192], [0.0866, 0.5319, 0.1859], [0.6003, 0.239, 0.7301], [0.6996, 0.7611, 0.0638], [0.1004, 0.4125, 0.562], [0.1528, 0.5962, 0.9867], [0.124, 0.6477, 0.0088], [1, 0.7833, 0.6329], [0.6591, 0.8049, 0.4995], [0.2241, 0.4086, 0.6707]], [[0.8458, 0.386, 0.81], [0.7194, 0.1524, 0.0465], [0.6026, 0.9718, 0.6483], [0.3867, 0.1715, 0.8954], [0.2544, 0.2828, 0.0375], [0.2056, 0.0145, 0.7494], [0.9199, 0.3168, 0.0216], [0.8939, 0.4257, 0.7576], [0.0955, 0.3265, 0.9566], [0.0748, 0.3976, 0.1941], [0.9983, 0.2299, 0.6319], [0.0044, 0.5573, 0.2625], [0.4737, 0.1893, 0.1458], [0.0424, 0.392, 0.9215], [0.3791, 0.2594, 0.0871], [0.0413, 0.9478, 0.411]]]])
w[1] = np.array([0, 0, 0])
model.get_layer('Con42479').set_weights(w) 
in0Up_27375 = tf.constant([[[[[1.1047, 1.5439, 1.2147, 1.1235], [1.2999, 1.3784, 1.6997, 1.9741]], [[1.2506, 1.3244, 1.5332, 1.3172], [1.7185, 1.8261, 1.3469, 1.7706]], [[1.5135, 1.6587, 1.3287, 1.6899], [1.241, 1.0024, 1.8861, 1.986]]]]])
in0PRe50644 = tf.constant([[[[0.7881, 0.564]]]])
in0Con19051 = tf.constant([[[[0.0263, 0.3055, 0.3648, 0.9444, 0.4136, 0.1634, 0.1616, 0.2839, 0.0423, 0.9045, 0.2018, 0.7145, 0.0629, 0.354], [0.4585, 0.6738, 0.3651, 0.5691, 0.1144, 0.1953, 0.1934, 0.9583, 0.8986, 0.2251, 0.2585, 0.3947, 0.6028, 0.3526], [0.7887, 0.6083, 0.5003, 0.6643, 0.8396, 0.6205, 0.029, 0.2942, 0.8393, 0.4901, 0.0254, 0.6462, 0.7857, 0.183]]]])
print (np.array2string(model.predict([in0Up_27375,in0PRe50644,in0Con19051],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Con42479.png')

LUp_27375 = up_sampling3D_layer([[[[[1.1047, 1.5439, 1.2147, 1.1235], [1.2999, 1.3784, 1.6997, 1.9741]], [[1.2506, 1.3244, 1.5332, 1.3172], [1.7185, 1.8261, 1.3469, 1.7706]], [[1.5135, 1.6587, 1.3287, 1.6899], [1.241, 1.0024, 1.8861, 1.986]]]]], 1, 1, 2, Up_27375), 
LRes17237 = reshape_layer(Up_27375, [1, 3, 16], Res17237), 
LPRe50644 = prelu_layer([[[[0.7881, 0.564]]]], [[[0.1296, 0.409]]], PRe50644), 
LZer70471 = zero_padding2D_layer(PRe50644, 0, 0, 2, 0, Zer70471), 
LCon19051 = concatenate_layer([Zer70471,[[[[0.0263, 0.3055, 0.3648, 0.9444, 0.4136, 0.1634, 0.1616, 0.2839, 0.0423, 0.9045, 0.2018, 0.7145, 0.0629, 0.354], [0.4585, 0.6738, 0.3651, 0.5691, 0.1144, 0.1953, 0.1934, 0.9583, 0.8986, 0.2251, 0.2585, 0.3947, 0.6028, 0.3526], [0.7887, 0.6083, 0.5003, 0.6643, 0.8396, 0.6205, 0.029, 0.2942, 0.8393, 0.4901, 0.0254, 0.6462, 0.7857, 0.183]]]]], 3, Con19051), 
LMul16749 = multiply_layer([Res17237,Con19051], Mul16749), 
LCon42479 = conv2D_layer(Mul16749, 1, 3,[[[[0.2261, 0.1764, 0.1839], [0.7875, 0.8925, 0.8382], [0.4137, 0.1857, 0.4455], [0.6944, 0.6546, 0.5893], [0.6077, 0.7109, 0.16], [0.5019, 0.598, 0.6568], [0.2419, 0.6374, 0.4605], [0.3814, 0.6405, 0.4071], [0.9923, 0.6012, 0.6977], [0.4662, 0.7431, 0.7118], [0.4109, 0.3014, 0.2778], [0.3973, 0.2988, 0.8605], [0.1295, 0.8343, 0.892], [0.5204, 0.6498, 0.1082], [0.5778, 0.2723, 0.2674], [0.0491, 0.4752, 0.8586]], [[0.5007, 0.0732, 0.9918], [0.7422, 0.4428, 0.7729], [0.7253, 0.209, 0.3329], [0.9347, 0.4103, 0.6092], [0.2587, 0.3877, 0.6846], [0.7281, 0.0013, 0.5828], [0.5491, 0.5453, 0.5192], [0.0866, 0.5319, 0.1859], [0.6003, 0.239, 0.7301], [0.6996, 0.7611, 0.0638], [0.1004, 0.4125, 0.562], [0.1528, 0.5962, 0.9867], [0.124, 0.6477, 0.0088], [1, 0.7833, 0.6329], [0.6591, 0.8049, 0.4995], [0.2241, 0.4086, 0.6707]], [[0.8458, 0.386, 0.81], [0.7194, 0.1524, 0.0465], [0.6026, 0.9718, 0.6483], [0.3867, 0.1715, 0.8954], [0.2544, 0.2828, 0.0375], [0.2056, 0.0145, 0.7494], [0.9199, 0.3168, 0.0216], [0.8939, 0.4257, 0.7576], [0.0955, 0.3265, 0.9566], [0.0748, 0.3976, 0.1941], [0.9983, 0.2299, 0.6319], [0.0044, 0.5573, 0.2625], [0.4737, 0.1893, 0.1458], [0.0424, 0.392, 0.9215], [0.3791, 0.2594, 0.0871], [0.0413, 0.9478, 0.411]]]],[0, 0, 0], 1, 1, true, 1, 1, Con42479), 
exec_layers([LUp_27375,LRes17237,LPRe50644,LZer70471,LCon19051,LMul16749,LCon42479],["Up_27375","Res17237","PRe50644","Zer70471","Con19051","Mul16749","Con42479"],Con42479,"Con42479")

Actual (Unparsed): [[[[7.1024904, 7.0465766, 9.3830108], [15.6971165, 13.7015179, 15.3825495], [11.3965355, 11.0430683, 13.0790576]]]]

Expected (Unparsed): [[[[7.102490457991998,7.04657661685,9.383010921005],[15.697116540898994,13.701517998743004,15.382549562548004],[11.396535501759002,11.043068335658,13.079057660673003]]]]

Actual:   [[[[7.1025, 7.0466, 9.3831], [15.6972, 13.7016, 15.3826], [11.3966, 11.0431, 13.0791]]]]

Expected: [[[[7.1025, 7.0466, 9.3831], [15.6972, 13.7016, 15.3826], [11.3966, 11.0431, 13.0791]]]]