import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Sub45231 = tf.keras.layers.Input(shape=([3, 2]))
in1Sub45231 = tf.keras.layers.Input(shape=([3, 2]))
in0Con92072 = tf.keras.layers.Input(shape=([3, 2, 1, 3]))
in0Con20294 = tf.keras.layers.Input(shape=([2, 2, 1, 2]))

Sub45231 = keras.layers.Subtract(name = 'Sub45231', )([in0Sub45231,in1Sub45231])
Res21930 = keras.layers.Reshape((3, 2, 1), name = 'Res21930', )(Sub45231)
Res40521 = keras.layers.Reshape((3, 2, 1, 1), name = 'Res40521', )(Res21930)
Con92072 = keras.layers.Concatenate(axis=4, name = 'Con92072', )([Res40521,in0Con92072])
Con20294 = keras.layers.Conv3DTranspose(4, (2, 1, 1),strides=(1, 1, 1), padding='same', name = 'Con20294', )(in0Con20294)
Zer96850 = keras.layers.ZeroPadding3D(padding=((1, 0), (0, 0), (0, 0)), name = 'Zer96850', )(Con20294)
Sub42791 = keras.layers.Subtract(name = 'Sub42791', )([Con92072,Zer96850])
model = tf.keras.models.Model(inputs=[in0Sub45231,in1Sub45231,in0Con92072,in0Con20294], outputs=Sub42791)
w = model.get_layer('Con20294').get_weights() 
w[0] = np.array([[[[[0.0058, 0.9187], [0.4044, 0.6503], [0.7125, 0.0251], [0.2834, 0.2097]]]], [[[[0.2593, 0.2022], [0.2262, 0.302], [0.879, 0.1061], [0.0052, 0.5221]]]]])
w[1] = np.array([0, 0, 0, 0])
model.get_layer('Con20294').set_weights(w) 
in0Sub45231 = tf.constant([[[0.0974, 0.7752], [0.1185, 0.733], [0.8334, 0.8873]]])
in1Sub45231 = tf.constant([[[0.3388, 0.4318], [0.0731, 0.4954], [0.047, 0.9781]]])
in0Con92072 = tf.constant([[[[[0.9001, 0.3132, 0.7247]], [[0.8592, 0.2595, 0.444]]], [[[0.6914, 0.7416, 0.8819]], [[0.3464, 0.4813, 0.6427]]], [[[0.7094, 0.6878, 0.4331]], [[0.285, 0.8723, 0.652]]]]])
in0Con20294 = tf.constant([[[[[0.3855, 0.2232]], [[0.0423, 0.1238]]], [[[0.689, 0.1946]], [[0.3943, 0.7878]]]]])
print (np.array2string(model.predict([in0Sub45231,in1Sub45231,in0Con92072,in0Con20294],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Sub42791.png')

LSub45231 = subtract_layer([[[0.0974, 0.7752], [0.1185, 0.733], [0.8334, 0.8873]]], [[[0.3388, 0.4318], [0.0731, 0.4954], [0.047, 0.9781]]], Sub45231), 
LRes21930 = reshape_layer(Sub45231, [3, 2, 1], Res21930), 
LRes40521 = reshape_layer(Res21930, [3, 2, 1, 1], Res40521), 
LCon92072 = concatenate_layer([Res40521,[[[[[0.9001, 0.3132, 0.7247]], [[0.8592, 0.2595, 0.444]]], [[[0.6914, 0.7416, 0.8819]], [[0.3464, 0.4813, 0.6427]]], [[[0.7094, 0.6878, 0.4331]], [[0.285, 0.8723, 0.652]]]]]], 4, Con92072), 
LCon20294 = conv3D_transpose_layer([[[[[0.3855, 0.2232]], [[0.0423, 0.1238]]], [[[0.689, 0.1946]], [[0.3943, 0.7878]]]]], 2, 1, 1,[[[[[0.0058, 0.9187], [0.4044, 0.6503], [0.7125, 0.0251], [0.2834, 0.2097]]]], [[[[0.2593, 0.2022], [0.2262, 0.302], [0.879, 0.1061], [0.0052, 0.5221]]]]],[0, 0, 0, 0], 1, 1, 1, true, Con20294), 
LZer96850 = zero_padding3D_layer(Con20294, 1, 0, 0, 0, 0, 0, Zer96850), 
LSub42791 = subtract_layer(Con92072,Zer96850, Sub42791), 
exec_layers([LSub45231,LRes21930,LRes40521,LCon92072,LCon20294,LZer96850,LSub42791],["Sub45231","Res21930","Res40521","Con92072","Con20294","Zer96850","Sub42791"],Sub42791,"Sub42791")

Actual (Unparsed): [[[[[-0.2414000, 0.9001000, 0.3132000, 0.7247000]], [[0.3434000, 0.8592000, 0.2595000, 0.4440000]]], [[[-0.1618897, 0.3903568, 0.4613289, 0.7258443]], [[0.1236196, 0.2487867, 0.4480539, 0.6047513]]], [[[0.4585336, 0.1496135, -0.1705330, 0.0784924]], [[-0.8528396, -0.4337171, 0.5212706, 0.3101978]]]]]

Expected (Unparsed): [[[[[-0.2414,0.9001,0.3132,0.7247]],[[0.3434,0.8592,0.2595,0.444]]],[[[-0.16188974,0.39035684000000004,0.46132893,0.72584426]],[[0.1236196,0.24878674,0.44805387,0.6047513200000001]]],[[[0.45853359000000005,0.14961352000000006,-0.17053297999999995,0.07849245999999999]],[[-0.8528395499999999,-0.43371712,0.5212705899999999,0.31019778000000003]]]]]

Actual:   [[[[[-0.2414, 0.9001, 0.3132, 0.7247]], [[0.3434, 0.8592, 0.2595, 0.444]]], [[[-0.1618, 0.3904, 0.4614, 0.7259]], [[0.1237, 0.2488, 0.4481, 0.6048]]], [[[0.4586, 0.1497, -0.1705, 0.0785]], [[-0.8528, -0.4337, 0.5213, 0.3102]]]]]

Expected: [[[[[-0.2414, 0.9001, 0.3132, 0.7247]], [[0.3434, 0.8592, 0.2595, 0.444]]], [[[-0.1618, 0.3904, 0.4614, 0.7259]], [[0.1237, 0.2488, 0.4481, 0.6048]]], [[[0.4586, 0.1497, -0.1705, 0.0785]], [[-0.8528, -0.4337, 0.5213, 0.3102]]]]]