import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Ave31713 = tf.keras.layers.Input(shape=([1, 1]))
in1Ave31713 = tf.keras.layers.Input(shape=([1, 1]))
in0Mul89813 = tf.keras.layers.Input(shape=([1, 2, 1]))
in1Mul89813 = tf.keras.layers.Input(shape=([1, 2, 1]))
in0Con8703 = tf.keras.layers.Input(shape=([1, 2]))

Ave31713 = keras.layers.Average(name = 'Ave31713', )([in0Ave31713,in1Ave31713])
Res8374 = keras.layers.Reshape((1, 1, 1), name = 'Res8374', )(Ave31713)
Res87501 = keras.layers.Reshape((1, 1, 1, 1), name = 'Res87501', )(Res8374)
Con7735 = keras.layers.Conv3D(4, (1, 1, 1),strides=(1, 1, 1), padding='same', dilation_rate=(1, 1, 1), name = 'Con7735', )(Res87501)
Res22872 = keras.layers.Reshape((1, 1, 4), name = 'Res22872', )(Con7735)
Res77626 = keras.layers.Reshape((1, 4), name = 'Res77626', )(Res22872)
Mul89813 = keras.layers.Multiply(name = 'Mul89813', )([in0Mul89813,in1Mul89813])
Res32733 = keras.layers.Reshape((1, 2), name = 'Res32733', )(Mul89813)
Up_812 = keras.layers.UpSampling1D(size=(2), name = 'Up_812', )(Res32733)
Thr94423 = keras.layers.ThresholdedReLU(theta=2.154362182250127, name = 'Thr94423', )(Up_812)
Ave97616 = keras.layers.AveragePooling1D(pool_size=(1), strides=(3), padding='valid', name = 'Ave97616', )(Thr94423)
Con8703 = keras.layers.Concatenate(axis=2, name = 'Con8703', )([Ave97616,in0Con8703])
Mul5808 = keras.layers.Multiply(name = 'Mul5808', )([Res77626,Con8703])
model = tf.keras.models.Model(inputs=[in0Ave31713,in1Ave31713,in0Mul89813,in1Mul89813,in0Con8703], outputs=Mul5808)
w = model.get_layer('Con7735').get_weights() 
w[0] = np.array([[[[[0.6355, 0.295, 0.4985, 0.9607]]]]])
w[1] = np.array([0, 0, 0, 0])
model.get_layer('Con7735').set_weights(w) 
in0Ave31713 = tf.constant([[[0.9187]]])
in1Ave31713 = tf.constant([[[0.4943]]])
in0Mul89813 = tf.constant([[[[0.2832], [0.9882]]]])
in1Mul89813 = tf.constant([[[[0.2764], [0.8275]]]])
in0Con8703 = tf.constant([[[0.5369, 0.3443]]])
print (np.array2string(model.predict([in0Ave31713,in1Ave31713,in0Mul89813,in1Mul89813,in0Con8703],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Mul5808.png')

LAve31713 = average_layer([[[[0.9187]]], [[[0.4943]]]], Ave31713), 
LRes8374 = reshape_layer(Ave31713, [1, 1, 1], Res8374), 
LRes87501 = reshape_layer(Res8374, [1, 1, 1, 1], Res87501), 
LCon7735 = conv3D_layer(Res87501, 1, 1, 1,[[[[[0.6355, 0.295, 0.4985, 0.9607]]]]],[0, 0, 0, 0], 1, 1, 1, true, 1, 1, 1, Con7735), 
LRes22872 = reshape_layer(Con7735, [1, 1, 4], Res22872), 
LRes77626 = reshape_layer(Res22872, [1, 4], Res77626), 
LMul89813 = multiply_layer([[[[[0.2832], [0.9882]]]], [[[[0.2764], [0.8275]]]]], Mul89813), 
LRes32733 = reshape_layer(Mul89813, [1, 2], Res32733), 
LUp_812 = up_sampling1D_layer(Res32733, 2, Up_812), 
LThr94423 = thresholded_relu_layer(Up_812, 2.154362182250127, Thr94423), 
LAve97616 = average_pooling1D_layer(Thr94423, 1, 3, false, Ave97616), 
LCon8703 = concatenate_layer([Ave97616,[[[0.5369, 0.3443]]]], 2, Con8703), 
LMul5808 = multiply_layer([Res77626,Con8703], Mul5808), 
exec_layers([LAve31713,LRes8374,LRes87501,LCon7735,LRes22872,LRes77626,LMul89813,LRes32733,LUp_812,LThr94423,LAve97616,LCon8703,LMul5808],["Ave31713","Res8374","Res87501","Con7735","Res22872","Res77626","Mul89813","Res32733","Up_812","Thr94423","Ave97616","Con8703","Mul5808"],Mul5808,"Mul5808")

Actual (Unparsed): [[[0.0000000, 0.0000000, 0.1890909, 0.2336883]]]

Expected (Unparsed): [[[0.0,0.0,0.189090945225,0.233688305565]]]

Actual:   [[[0, 0, 0.1891, 0.2337]]]

Expected: [[[0, 0, 0.1891, 0.2337]]]