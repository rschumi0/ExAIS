import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Min63820 = tf.keras.layers.Input(shape=([1, 1]))
in1Min63820 = tf.keras.layers.Input(shape=([1, 1]))

Min63820 = keras.layers.Minimum(name = 'Min63820', )([in0Min63820,in1Min63820])
Res12423 = keras.layers.Reshape((1, 1, 1), name = 'Res12423', )(Min63820)
Con77220 = keras.layers.Conv2D(2, (1, 1),strides=(1, 1), padding='same', dilation_rate=(1, 1), name = 'Con77220', )(Res12423)
model = tf.keras.models.Model(inputs=[in0Min63820,in1Min63820], outputs=Con77220)
w = model.get_layer('Con77220').get_weights() 
w[0] = np.array([[[[0.818, 0.8473]]]])
w[1] = np.array([0, 0])
model.get_layer('Con77220').set_weights(w) 
in0Min63820 = tf.constant([[[0.0569]]])
in1Min63820 = tf.constant([[[0.958]]])
print (np.array2string(model.predict([in0Min63820,in1Min63820],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Con77220.png')

LMin63820 = minimum_layer([[[[0.0569]]], [[[0.958]]]], Min63820), 
LRes12423 = reshape_layer(Min63820, [1, 1, 1], Res12423), 
LCon77220 = conv2D_layer(Res12423, 1, 1,[[[[0.818, 0.8473]]]],[0, 0], 1, 1, true, 1, 1, Con77220), 
exec_layers([LMin63820,LRes12423,LCon77220],["Min63820","Res12423","Con77220"],Con77220,"Con77220")

Actual (Unparsed): [[[[0.0465442, 0.0482114]]]]

Expected (Unparsed): [[[[0.046544199999999994,0.04821137]]]]

Actual:   [[[[0.0466, 0.0483]]]]

Expected: [[[[0.0466, 0.0483]]]]