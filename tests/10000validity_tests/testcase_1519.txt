import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Ave89322 = tf.keras.layers.Input(shape=([1, 1, 2]))
in1Ave89322 = tf.keras.layers.Input(shape=([1, 1, 2]))
in0Mul99538 = tf.keras.layers.Input(shape=([1, 1, 1, 1]))
in1Mul99538 = tf.keras.layers.Input(shape=([1, 1, 1, 1]))
in0Con39537 = tf.keras.layers.Input(shape=([2, 1, 1]))
in0Sof22297 = tf.keras.layers.Input(shape=([2, 1, 2]))
in0Con9392 = tf.keras.layers.Input(shape=([2, 6]))
in0Add38558 = tf.keras.layers.Input(shape=([1, 2, 2, 2]))
in1Add38558 = tf.keras.layers.Input(shape=([1, 2, 2, 2]))
in0Con47796 = tf.keras.layers.Input(shape=([2, 3]))

Ave89322 = keras.layers.Average(name = 'Ave89322', )([in0Ave89322,in1Ave89322])
Up_39755 = keras.layers.UpSampling2D(size=(1, 2), name = 'Up_39755', )(Ave89322)
Res34474 = keras.layers.Reshape((1, 4), name = 'Res34474', )(Up_39755)
Per279 = keras.layers.Permute((1,2), name = 'Per279',)(Res34474)
Thr65990 = keras.layers.ThresholdedReLU(theta=5.766404413657981, name = 'Thr65990', )(Per279)
Zer29997 = keras.layers.ZeroPadding1D(padding=((1, 0)), name = 'Zer29997', )(Thr65990)
Mul99538 = keras.layers.Multiply(name = 'Mul99538', )([in0Mul99538,in1Mul99538])
Res11302 = keras.layers.Reshape((1, 1, 1), name = 'Res11302', )(Mul99538)
Zer47068 = keras.layers.ZeroPadding2D(padding=((1, 0), (0, 0)), name = 'Zer47068', )(Res11302)
Con39537 = keras.layers.Concatenate(axis=3, name = 'Con39537', )([Zer47068,in0Con39537])
Sof22297 = keras.layers.Softmax(axis=1, name = 'Sof22297', input_shape=(2, 1, 2))(in0Sof22297)
Ave31031 = keras.layers.Average(name = 'Ave31031', )([Con39537,Sof22297])
Res74383 = keras.layers.Reshape((2, 2), name = 'Res74383', )(Ave31031)
Con9392 = keras.layers.Concatenate(axis=2, name = 'Con9392', )([Res74383,in0Con9392])
Add38558 = keras.layers.Add(name = 'Add38558', )([in0Add38558,in1Add38558])
Res51214 = keras.layers.Reshape((1, 2, 4), name = 'Res51214', )(Add38558)
Res9744 = keras.layers.Reshape((1, 8), name = 'Res9744', )(Res51214)
Dot42761 = keras.layers.Dot(axes=(2, 2), name = 'Dot42761', )([Con9392,Res9744])
Con47796 = keras.layers.Concatenate(axis=2, name = 'Con47796', )([Dot42761,in0Con47796])
Max619 = keras.layers.Maximum(name = 'Max619', )([Zer29997,Con47796])
Res15845 = keras.layers.Reshape((2, 4, 1), name = 'Res15845', )(Max619)
Up_51169 = keras.layers.UpSampling2D(size=(1, 1), name = 'Up_51169', )(Res15845)
model = tf.keras.models.Model(inputs=[in0Ave89322,in1Ave89322,in0Mul99538,in1Mul99538,in0Con39537,in0Sof22297,in0Con9392,in0Add38558,in1Add38558,in0Con47796], outputs=Up_51169)
in0Ave89322 = tf.constant([[[[0.3009, 0.5963]]]])
in1Ave89322 = tf.constant([[[[0.7952, 0.2373]]]])
in0Mul99538 = tf.constant([[[[[0.8402]]]]])
in1Mul99538 = tf.constant([[[[[0.8765]]]]])
in0Con39537 = tf.constant([[[[0.4552]], [[0.664]]]])
in0Sof22297 = tf.constant([[[[0.7765, 0.2535]], [[0.7002, 0.2721]]]])
in0Con9392 = tf.constant([[[0.2714, 0.305, 0.0503, 0.2845, 0.7224, 0.8975], [0.1328, 0.7917, 0.9617, 0.0568, 0.4751, 0.6176]]])
in0Add38558 = tf.constant([[[[[0.151, 0.8886], [0.1025, 0.3425]], [[0.5844, 0.9245], [0.2119, 0.3546]]]]])
in1Add38558 = tf.constant([[[[[0.9521, 0.7748], [0.9283, 0.1275]], [[0.753, 0.2016], [0.3792, 0.1914]]]]])
in0Con47796 = tf.constant([[[0.6042, 0.3065, 0.2168], [0.2044, 0.9398, 0.2776]]])
print (np.array2string(model.predict([in0Ave89322,in1Ave89322,in0Mul99538,in1Mul99538,in0Con39537,in0Sof22297,in0Con9392,in0Add38558,in1Add38558,in0Con47796],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Up_51169.png')

LAve89322 = average_layer([[[[[0.3009, 0.5963]]]], [[[[0.7952, 0.2373]]]]], Ave89322), 
LUp_39755 = up_sampling2D_layer(Ave89322, 1, 2, Up_39755), 
LRes34474 = reshape_layer(Up_39755, [1, 4], Res34474), 
LPer279 = permute_layer(Res34474, 1,2, Per279), 
LThr65990 = thresholded_relu_layer(Per279, 5.766404413657981, Thr65990), 
LZer29997 = zero_padding1D_layer(Thr65990, 1, 0, Zer29997), 
LMul99538 = multiply_layer([[[[[[0.8402]]]]], [[[[[0.8765]]]]]], Mul99538), 
LRes11302 = reshape_layer(Mul99538, [1, 1, 1], Res11302), 
LZer47068 = zero_padding2D_layer(Res11302, 1, 0, 0, 0, Zer47068), 
LCon39537 = concatenate_layer([Zer47068,[[[[0.4552]], [[0.664]]]]], 3, Con39537), 
LSof22297 = softmax_layer([[[[0.7765, 0.2535]], [[0.7002, 0.2721]]]], 1, Sof22297), 
LAve31031 = average_layer([Con39537,Sof22297], Ave31031), 
LRes74383 = reshape_layer(Ave31031, [2, 2], Res74383), 
LCon9392 = concatenate_layer([Res74383,[[[0.2714, 0.305, 0.0503, 0.2845, 0.7224, 0.8975], [0.1328, 0.7917, 0.9617, 0.0568, 0.4751, 0.6176]]]], 2, Con9392), 
LAdd38558 = add_layer([[[[[[0.151, 0.8886], [0.1025, 0.3425]], [[0.5844, 0.9245], [0.2119, 0.3546]]]]], [[[[[0.9521, 0.7748], [0.9283, 0.1275]], [[0.753, 0.2016], [0.3792, 0.1914]]]]]], Add38558), 
LRes51214 = reshape_layer(Add38558, [1, 2, 4], Res51214), 
LRes9744 = reshape_layer(Res51214, [1, 8], Res9744), 
LDot42761 = dot_layer(Con9392,Res9744, 2, 2, Dot42761), 
LCon47796 = concatenate_layer([Dot42761,[[[0.6042, 0.3065, 0.2168], [0.2044, 0.9398, 0.2776]]]], 2, Con47796), 
LMax619 = maximum_layer([Zer29997,Con47796], Max619), 
LRes15845 = reshape_layer(Max619, [2, 4, 1], Res15845), 
LUp_51169 = up_sampling2D_layer(Res15845, 1, 1, Up_51169), 
exec_layers([LAve89322,LUp_39755,LRes34474,LPer279,LThr65990,LZer29997,LMul99538,LRes11302,LZer47068,LCon39537,LSof22297,LAve31031,LRes74383,LCon9392,LAdd38558,LRes51214,LRes9744,LDot42761,LCon47796,LMax619,LRes15845,LUp_51169],["Ave89322","Up_39755","Res34474","Per279","Thr65990","Zer29997","Mul99538","Res11302","Zer47068","Con39537","Sof22297","Ave31031","Res74383","Con9392","Add38558","Res51214","Res9744","Dot42761","Con47796","Max619","Res15845","Up_51169"],Up_51169,"Up_51169")

Actual (Unparsed): [[[[2.8046647], [0.6042000], [0.3065000], [0.2168000]], [[4.1205768], [0.2044000], [0.9398000], [0.2776000]]]]

Expected (Unparsed): [[[[2.804664691635552],[0.6042],[0.3065],[0.2168]],[[4.120576778079448],[0.2044],[0.9398],[0.2776]]]]

Actual:   [[[[2.8047], [0.6042], [0.3065], [0.2168]], [[4.1206], [0.2044], [0.9398], [0.2776]]]]

Expected: [[[[2.8047], [0.6042], [0.3065], [0.2168]], [[4.1206], [0.2044], [0.9398], [0.2776]]]]