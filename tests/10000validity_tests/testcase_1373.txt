import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Glo61168 = tf.keras.layers.Input(shape=([2, 2, 1]))
in0Con45578 = tf.keras.layers.Input(shape=([2, 1]))
in0Ave4012 = tf.keras.layers.Input(shape=([2, 2]))
in1Ave4012 = tf.keras.layers.Input(shape=([2, 2]))
in0Con43222 = tf.keras.layers.Input(shape=([14, 9, 1]))
in0Ave47028 = tf.keras.layers.Input(shape=([1, 2]))
in0Con97701 = tf.keras.layers.Input(shape=([14, 9, 1]))
in0Max41558 = tf.keras.layers.Input(shape=([2, 1, 1]))
in1Max41558 = tf.keras.layers.Input(shape=([2, 1, 1]))
in0Con40728 = tf.keras.layers.Input(shape=([1, 2, 2]))
in0Max77918 = tf.keras.layers.Input(shape=([1, 2, 2, 1]))
in1Max77918 = tf.keras.layers.Input(shape=([1, 2, 2, 1]))

Glo61168 = keras.layers.GlobalAveragePooling2D(name = 'Glo61168', )(in0Glo61168)
Res66233 = keras.layers.Reshape((1, 1), name = 'Res66233', )(Glo61168)
Zer18274 = keras.layers.ZeroPadding1D(padding=((1, 0)), name = 'Zer18274', )(Res66233)
Con45578 = keras.layers.Concatenate(axis=2, name = 'Con45578', )([Zer18274,in0Con45578])
Ave4012 = keras.layers.Average(name = 'Ave4012', )([in0Ave4012,in1Ave4012])
Min68841 = keras.layers.Minimum(name = 'Min68841', )([Con45578,Ave4012])
Res21305 = keras.layers.Reshape((2, 2, 1), name = 'Res21305', )(Min68841)
Zer56922 = keras.layers.ZeroPadding2D(padding=((12, 0), (7, 0)), name = 'Zer56922', )(Res21305)
Con43222 = keras.layers.Concatenate(axis=3, name = 'Con43222', )([Zer56922,in0Con43222])
Ave47028 = keras.layers.AveragePooling1D(pool_size=(1), strides=(1), padding='same', name = 'Ave47028', )(in0Ave47028)
Res47600 = keras.layers.Reshape((1, 2, 1), name = 'Res47600', )(Ave47028)
Zer33001 = keras.layers.ZeroPadding2D(padding=((13, 0), (7, 0)), name = 'Zer33001', )(Res47600)
Con97701 = keras.layers.Concatenate(axis=3, name = 'Con97701', )([Zer33001,in0Con97701])
Max41558 = keras.layers.Maximum(name = 'Max41558', )([in0Max41558,in1Max41558])
Res60012 = keras.layers.Reshape((2, 1, 1, 1), name = 'Res60012', )(Max41558)
Zer15094 = keras.layers.ZeroPadding3D(padding=((0, 0), (2, 0), (4, 0)), name = 'Zer15094', )(Res60012)
Con40728 = keras.layers.Conv2DTranspose(3, (1, 2),strides=(1, 1), padding='same', name = 'Con40728', )(in0Con40728)
Res66303 = keras.layers.Reshape((1, 2, 3, 1), name = 'Res66303', )(Con40728)
Max77918 = keras.layers.Maximum(name = 'Max77918', )([in0Max77918,in1Max77918])
Zer78378 = keras.layers.ZeroPadding3D(padding=((0, 0), (0, 0), (1, 0)), name = 'Zer78378', )(Max77918)
Add81834 = keras.layers.Add(name = 'Add81834', )([Res66303,Zer78378])
Zer4358 = keras.layers.ZeroPadding3D(padding=((1, 0), (1, 0), (2, 0)), name = 'Zer4358', )(Add81834)
Add91748 = keras.layers.Add(name = 'Add91748', )([Zer15094,Zer4358])
Res64494 = keras.layers.Reshape((2, 3, 5), name = 'Res64494', )(Add91748)
Con35080 = keras.layers.Conv2DTranspose(2, (1, 2),strides=(7, 3), padding='valid', name = 'Con35080', )(Res64494)
Sub54583 = keras.layers.Subtract(name = 'Sub54583', )([Con97701,Con35080])
Mul76218 = keras.layers.Multiply(name = 'Mul76218', )([Con43222,Sub54583])
model = tf.keras.models.Model(inputs=[in0Glo61168,in0Con45578,in0Ave4012,in1Ave4012,in0Con43222,in0Ave47028,in0Con97701,in0Max41558,in1Max41558,in0Con40728,in0Max77918,in1Max77918], outputs=Mul76218)
w = model.get_layer('Con40728').get_weights() 
w[0] = np.array([[[[0.9895, 0.9435], [0.6951, 0.8935], [0.1126, 0.9686]], [[0.6409, 0.33], [0.8653, 0.4018], [0.6363, 0.9919]]]])
w[1] = np.array([0, 0, 0])
model.get_layer('Con40728').set_weights(w) 
w = model.get_layer('Con35080').get_weights() 
w[0] = np.array([[[[0.8738, 0.9089, 0.3617, 0.404, 0.5083], [0.3681, 0.1184, 0.0337, 0.974, 0.6854]], [[0.3938, 0.7258, 0.9105, 0.7683, 0.3333], [0.0466, 0.6681, 0.9603, 0.1656, 0.1489]]]])
w[1] = np.array([0, 0])
model.get_layer('Con35080').set_weights(w) 
in0Glo61168 = tf.constant([[[[1.6267], [1.3798]], [[1.5332], [1.2246]]]])
in0Con45578 = tf.constant([[[0.5933], [0.5758]]])
in0Ave4012 = tf.constant([[[0.8641, 0.9248], [0.1716, 0.501]]])
in1Ave4012 = tf.constant([[[0.2676, 0.2554], [0.8703, 0.4557]]])
in0Con43222 = tf.constant([[[[0.6258], [0.2241], [0.1582], [0.5492], [0.8283], [0.2503], [0.6333], [0.4184], [0.0323]], [[0.7317], [0.6757], [0.8527], [0.6321], [0.2094], [0.9126], [0.3112], [0.7035], [0.4341]], [[0.126], [0.3994], [0.5165], [0.5428], [0.0425], [0.1702], [0.0719], [0.502], [0.6298]], [[0.5721], [0.7888], [0.8561], [0.154], [0.7165], [0.1403], [0.5573], [0.3746], [0.9479]], [[0.8587], [0.7998], [0.033], [0.9299], [0.3135], [0.334], [0.2249], [0.0852], [0.8031]], [[0.6914], [0.3363], [0.7677], [0.795], [0.1186], [0.9718], [0.4843], [0.5992], [0.7867]], [[0.7071], [0.3343], [0.567], [0.0205], [0.554], [0.5882], [0.669], [0.8748], [0.7476]], [[0.99], [0.2244], [0.3737], [0.8322], [0.9333], [0.6319], [0.1245], [0.0535], [0.1358]], [[0.1805], [0.8209], [0.7493], [0.8163], [0.4076], [0.3556], [0.7698], [0.6648], [0.0166]], [[0.8795], [0.9581], [0.0886], [0.0651], [0.1629], [0.3735], [0.316], [0.9919], [0.0422]], [[0.2486], [0.9429], [0.0629], [0.5679], [0.6411], [0.4213], [0.9866], [0.7104], [0.357]], [[0.8037], [0.7732], [0.1228], [0.0073], [0.7815], [0.3942], [0.5144], [0.9883], [0.6868]], [[0.436], [0.6455], [0.7718], [0.6613], [0.7357], [0.8181], [0.1345], [0.6395], [0.9376]], [[0.0081], [0.8621], [0.1415], [0.0135], [0.4609], [0.0211], [0.126], [0.057], [0.6565]]]])
in0Ave47028 = tf.constant([[[1.1962, 1.6739]]])
in0Con97701 = tf.constant([[[[0.9173], [0.7777], [0.8823], [0.0802], [0.2834], [0.8953], [0.4619], [0.5795], [0.268]], [[0.7219], [0.1598], [0.8188], [0.461], [0.479], [0.5304], [0.3282], [0.4497], [0.9772]], [[0.2621], [0.1931], [0.6557], [0.7597], [0.5174], [0.4778], [0.8715], [0.6298], [0.14]], [[0.8325], [0.3291], [0.1055], [0.9655], [0.7817], [0.3266], [0.451], [0.5613], [0.8176]], [[0.6674], [0.3284], [0.3371], [0.8311], [0.4251], [0.7845], [0.1173], [0.5993], [0.8378]], [[0.2436], [0.9502], [0.021], [0.4557], [0.4106], [0.1353], [0.5381], [0.0197], [0.5058]], [[0.1984], [0.7185], [0.9309], [0.0513], [0.8158], [0.2859], [0.589], [0.5083], [0.4951]], [[0.9769], [0.3188], [0.4225], [0.1577], [0.4839], [0.0869], [0.38], [0.635], [0.3971]], [[0.7164], [0.996], [0.4909], [0.4983], [0.8481], [0.3644], [0.5134], [0.9809], [0.4676]], [[0.8807], [0.6802], [0.1664], [0.4218], [0.1181], [0.395], [0.0763], [0.9799], [0.4834]], [[0.3189], [0.7767], [0.1607], [0.7109], [0.1728], [0.7604], [0.2437], [0.8583], [0.4771]], [[0.7555], [0.6088], [0.3656], [0.3105], [0.2592], [0.8086], [0.9068], [0.8219], [0.7809]], [[0.567], [0.2201], [0.4071], [0.2507], [0.2198], [0.8373], [0.1756], [0.2997], [0.9643]], [[0.6493], [0.5772], [0.15], [0.1694], [0.5442], [0.8281], [0.6675], [0.9141], [0.9299]]]])
in0Max41558 = tf.constant([[[[0.3985]], [[0.7745]]]])
in1Max41558 = tf.constant([[[[0.3702]], [[0.5632]]]])
in0Con40728 = tf.constant([[[[0.5187, 0.0696], [0.0845, 0.1965]]]])
in0Max77918 = tf.constant([[[[[0.0315], [0.2054]], [[0.5329], [0.9685]]]]])
in1Max77918 = tf.constant([[[[[0.3816], [0.6938]], [[0.9828], [0.5771]]]]])
print (np.array2string(model.predict([in0Glo61168,in0Con45578,in0Ave4012,in1Ave4012,in0Con43222,in0Ave47028,in0Con97701,in0Max41558,in1Max41558,in0Con40728,in0Max77918,in1Max77918],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Mul76218.png')

LGlo61168 = global_average_pooling2D_layer([[[[1.6267], [1.3798]], [[1.5332], [1.2246]]]], Glo61168), 
LRes66233 = reshape_layer(Glo61168, [1, 1], Res66233), 
LZer18274 = zero_padding1D_layer(Res66233, 1, 0, Zer18274), 
LCon45578 = concatenate_layer([Zer18274,[[[0.5933], [0.5758]]]], 2, Con45578), 
LAve4012 = average_layer([[[[0.8641, 0.9248], [0.1716, 0.501]]], [[[0.2676, 0.2554], [0.8703, 0.4557]]]], Ave4012), 
LMin68841 = minimum_layer([Con45578,Ave4012], Min68841), 
LRes21305 = reshape_layer(Min68841, [2, 2, 1], Res21305), 
LZer56922 = zero_padding2D_layer(Res21305, 12, 0, 7, 0, Zer56922), 
LCon43222 = concatenate_layer([Zer56922,[[[[0.6258], [0.2241], [0.1582], [0.5492], [0.8283], [0.2503], [0.6333], [0.4184], [0.0323]], [[0.7317], [0.6757], [0.8527], [0.6321], [0.2094], [0.9126], [0.3112], [0.7035], [0.4341]], [[0.126], [0.3994], [0.5165], [0.5428], [0.0425], [0.1702], [0.0719], [0.502], [0.6298]], [[0.5721], [0.7888], [0.8561], [0.154], [0.7165], [0.1403], [0.5573], [0.3746], [0.9479]], [[0.8587], [0.7998], [0.033], [0.9299], [0.3135], [0.334], [0.2249], [0.0852], [0.8031]], [[0.6914], [0.3363], [0.7677], [0.795], [0.1186], [0.9718], [0.4843], [0.5992], [0.7867]], [[0.7071], [0.3343], [0.567], [0.0205], [0.554], [0.5882], [0.669], [0.8748], [0.7476]], [[0.99], [0.2244], [0.3737], [0.8322], [0.9333], [0.6319], [0.1245], [0.0535], [0.1358]], [[0.1805], [0.8209], [0.7493], [0.8163], [0.4076], [0.3556], [0.7698], [0.6648], [0.0166]], [[0.8795], [0.9581], [0.0886], [0.0651], [0.1629], [0.3735], [0.316], [0.9919], [0.0422]], [[0.2486], [0.9429], [0.0629], [0.5679], [0.6411], [0.4213], [0.9866], [0.7104], [0.357]], [[0.8037], [0.7732], [0.1228], [0.0073], [0.7815], [0.3942], [0.5144], [0.9883], [0.6868]], [[0.436], [0.6455], [0.7718], [0.6613], [0.7357], [0.8181], [0.1345], [0.6395], [0.9376]], [[0.0081], [0.8621], [0.1415], [0.0135], [0.4609], [0.0211], [0.126], [0.057], [0.6565]]]]], 3, Con43222), 
LAve47028 = average_pooling1D_layer([[[1.1962, 1.6739]]], 1, 1, true, Ave47028), 
LRes47600 = reshape_layer(Ave47028, [1, 2, 1], Res47600), 
LZer33001 = zero_padding2D_layer(Res47600, 13, 0, 7, 0, Zer33001), 
LCon97701 = concatenate_layer([Zer33001,[[[[0.9173], [0.7777], [0.8823], [0.0802], [0.2834], [0.8953], [0.4619], [0.5795], [0.268]], [[0.7219], [0.1598], [0.8188], [0.461], [0.479], [0.5304], [0.3282], [0.4497], [0.9772]], [[0.2621], [0.1931], [0.6557], [0.7597], [0.5174], [0.4778], [0.8715], [0.6298], [0.14]], [[0.8325], [0.3291], [0.1055], [0.9655], [0.7817], [0.3266], [0.451], [0.5613], [0.8176]], [[0.6674], [0.3284], [0.3371], [0.8311], [0.4251], [0.7845], [0.1173], [0.5993], [0.8378]], [[0.2436], [0.9502], [0.021], [0.4557], [0.4106], [0.1353], [0.5381], [0.0197], [0.5058]], [[0.1984], [0.7185], [0.9309], [0.0513], [0.8158], [0.2859], [0.589], [0.5083], [0.4951]], [[0.9769], [0.3188], [0.4225], [0.1577], [0.4839], [0.0869], [0.38], [0.635], [0.3971]], [[0.7164], [0.996], [0.4909], [0.4983], [0.8481], [0.3644], [0.5134], [0.9809], [0.4676]], [[0.8807], [0.6802], [0.1664], [0.4218], [0.1181], [0.395], [0.0763], [0.9799], [0.4834]], [[0.3189], [0.7767], [0.1607], [0.7109], [0.1728], [0.7604], [0.2437], [0.8583], [0.4771]], [[0.7555], [0.6088], [0.3656], [0.3105], [0.2592], [0.8086], [0.9068], [0.8219], [0.7809]], [[0.567], [0.2201], [0.4071], [0.2507], [0.2198], [0.8373], [0.1756], [0.2997], [0.9643]], [[0.6493], [0.5772], [0.15], [0.1694], [0.5442], [0.8281], [0.6675], [0.9141], [0.9299]]]]], 3, Con97701), 
LMax41558 = maximum_layer([[[[[0.3985]], [[0.7745]]]], [[[[0.3702]], [[0.5632]]]]], Max41558), 
LRes60012 = reshape_layer(Max41558, [2, 1, 1, 1], Res60012), 
LZer15094 = zero_padding3D_layer(Res60012, 0, 0, 2, 0, 4, 0, Zer15094), 
LCon40728 = conv2D_transpose_layer([[[[0.5187, 0.0696], [0.0845, 0.1965]]]], 1, 2,[[[[0.9895, 0.9435], [0.6951, 0.8935], [0.1126, 0.9686]], [[0.6409, 0.33], [0.8653, 0.4018], [0.6363, 0.9919]]]],[0, 0, 0], 1, 1, true, Con40728), 
LRes66303 = reshape_layer(Con40728, [1, 2, 3, 1], Res66303), 
LMax77918 = maximum_layer([[[[[[0.0315], [0.2054]], [[0.5329], [0.9685]]]]], [[[[[0.3816], [0.6938]], [[0.9828], [0.5771]]]]]], Max77918), 
LZer78378 = zero_padding3D_layer(Max77918, 0, 0, 0, 0, 1, 0, Zer78378), 
LAdd81834 = add_layer([Res66303,Zer78378], Add81834), 
LZer4358 = zero_padding3D_layer(Add81834, 1, 0, 1, 0, 2, 0, Zer4358), 
LAdd91748 = add_layer([Zer15094,Zer4358], Add91748), 
LRes64494 = reshape_layer(Add91748, [2, 3, 5], Res64494), 
LCon35080 = conv2D_transpose_layer(Res64494, 1, 2,[[[[0.8738, 0.9089, 0.3617, 0.404, 0.5083], [0.3681, 0.1184, 0.0337, 0.974, 0.6854]], [[0.3938, 0.7258, 0.9105, 0.7683, 0.3333], [0.0466, 0.6681, 0.9603, 0.1656, 0.1489]]]],[0, 0], 7, 3, false, Con35080), 
LSub54583 = subtract_layer(Con97701,Con35080, Sub54583), 
LMul76218 = multiply_layer([Con43222,Sub54583], Mul76218), 
exec_layers([LGlo61168,LRes66233,LZer18274,LCon45578,LAve4012,LMin68841,LRes21305,LZer56922,LCon43222,LAve47028,LRes47600,LZer33001,LCon97701,LMax41558,LRes60012,LZer15094,LCon40728,LRes66303,LMax77918,LZer78378,LAdd81834,LZer4358,LAdd91748,LRes64494,LCon35080,LSub54583,LMul76218],["Glo61168","Res66233","Zer18274","Con45578","Ave4012","Min68841","Res21305","Zer56922","Con43222","Ave47028","Res47600","Zer33001","Con97701","Max41558","Res60012","Zer15094","Con40728","Res66303","Max77918","Zer78378","Add81834","Zer4358","Add91748","Res64494","Con35080","Sub54583","Mul76218"],Mul76218,"Mul76218")

Actual (Unparsed): [[[[0.0000000, 0.5740463], [0.0000000, 0.1742826], [0.0000000, 0.1395799], [0.0000000, 0.0440458], [0.0000000, 0.2347402], [0.0000000, 0.2240936], [-0.0000000, 0.1195468], [-0.0000000, 0.2176363], [0.0000000, 0.0086564]], [[0.0000000, 0.5282142], [0.0000000, 0.1079769], [0.0000000, 0.6981907], [0.0000000, 0.2913981], [0.0000000, 0.1003026], [0.0000000, 0.4840430], [0.0000000, 0.1021358], [0.0000000, 0.3163639], [0.0000000, 0.4242025]], [[0.0000000, 0.0330246], [0.0000000, 0.0771241], [0.0000000, 0.3386691], [0.0000000, 0.4123652], [0.0000000, 0.0219895], [0.0000000, 0.0813216], [0.0000000, 0.0626609], [0.0000000, 0.3161596], [0.0000000, 0.0881720]], [[0.0000000, 0.4762732], [0.0000000, 0.2595941], [0.0000000, 0.0903186], [0.0000000, 0.1486870], [0.0000000, 0.5600880], [0.0000000, 0.0458220], [0.0000000, 0.2513423], [0.0000000, 0.2102630], [0.0000000, 0.7750030]], [[0.0000000, 0.5730964], [0.0000000, 0.2626543], [0.0000000, 0.0111243], [0.0000000, 0.7728399], [0.0000000, 0.1332688], [0.0000000, 0.2620230], [0.0000000, 0.0263808], [0.0000000, 0.0510604], [0.0000000, 0.6728372]], [[0.0000000, 0.1684250], [0.0000000, 0.3195523], [0.0000000, 0.0161217], [0.0000000, 0.3622815], [0.0000000, 0.0486972], [0.0000000, 0.1314845], [0.0000000, 0.2606018], [0.0000000, 0.0118042], [0.0000000, 0.3979129]], [[0.0000000, 0.1402886], [0.0000000, 0.2401946], [0.0000000, 0.5278203], [0.0000000, 0.0010517], [0.0000000, 0.4519532], [0.0000000, 0.1681664], [0.0000000, 0.3940410], [0.0000000, 0.4446609], [0.0000000, 0.3701368]], [[0.0000000, 0.9671310], [0.0000000, 0.0715387], [0.0000000, 0.1578883], [-0.0000000, -1.0044658], [-0.0000000, -0.3054481], [0.0000000, 0.0549121], [-0.0000000, -0.3605601], [-0.0000000, -0.0317709], [0.0000000, 0.0539262]], [[0.0000000, 0.1293102], [0.0000000, 0.8176164], [0.0000000, 0.3678314], [0.0000000, 0.4067623], [0.0000000, 0.3456856], [0.0000000, 0.1295806], [0.0000000, 0.3952153], [0.0000000, 0.6521023], [0.0000000, 0.0077622]], [[0.0000000, 0.7745756], [0.0000000, 0.6516996], [0.0000000, 0.0147430], [0.0000000, 0.0274592], [0.0000000, 0.0192385], [0.0000000, 0.1475325], [0.0000000, 0.0241108], [0.0000000, 0.9719628], [0.0000000, 0.0203995]], [[0.0000000, 0.0792785], [0.0000000, 0.7323505], [0.0000000, 0.0101080], [0.0000000, 0.4037201], [0.0000000, 0.1107821], [0.0000000, 0.3203565], [0.0000000, 0.2404344], [0.0000000, 0.6097363], [0.0000000, 0.1703247]], [[0.0000000, 0.6071953], [0.0000000, 0.4707241], [0.0000000, 0.0448957], [0.0000000, 0.0022667], [0.0000000, 0.2025648], [0.0000000, 0.3187501], [0.0000000, 0.4664579], [0.0000000, 0.8122838], [0.0000000, 0.5363221]], [[0.0000000, 0.2472120], [0.0000000, 0.1420746], [0.0000000, 0.3141998], [0.0000000, 0.1657879], [0.0000000, 0.1617069], [0.0000000, 0.6849951], [0.0000000, 0.0236182], [0.0000000, 0.1916582], [0.0000000, 0.9041277]], [[0.0000000, 0.0052593], [0.0000000, 0.4976041], [0.0000000, 0.0212250], [0.0000000, 0.0022869], [0.0000000, 0.2508218], [0.0000000, 0.0174729], [0.0000000, 0.0841050], [0.6231604, 0.0521037], [0.8007101, 0.6104793]]]]

Expected (Unparsed): [[[[0.0,0.57404634],[0.0,0.17428256999999997],[0,0.13957986],[0.0,0.044045839999999996],[0.0,0.23474022],[0,0.22409359],[-0.0,0.11954683772999995],[-0.0,0.21763634564],[0,0.008656400000000002]],[[0,0.52821423],[0,0.10797686],[0,0.69819076],[0,0.2913981],[0,0.10030259999999999],[0,0.48404304],[0,0.10213583999999999],[0,0.31636395],[0,0.42420251999999997]],[[0,0.0330246],[0,0.07712414],[0,0.33866904999999997],[0,0.41236516],[0,0.0219895],[0,0.08132156],[0,0.06266085],[0,0.31615960000000004],[0,0.08817200000000001]],[[0,0.47627325000000004],[0,0.25959408],[0,0.09031855],[0,0.148687],[0,0.56008805],[0,0.045821980000000005],[0,0.2513423],[0,0.21026298],[0,0.77500304]],[[0,0.57309638],[0,0.26265432],[0,0.0111243],[0,0.7728398899999999],[0,0.13326885],[0,0.262023],[0,0.026380769999999998],[0,0.051060360000000006],[0,0.67283718]],[[0,0.16842504],[0,0.31955226],[0,0.016121700000000003],[0,0.36228150000000003],[0,0.04869716],[0,0.13148454],[0,0.26060183000000003],[0,0.011804239999999999],[0,0.39791286]],[[0,0.14028864],[0,0.24019455],[0,0.5278202999999999],[0,0.0010516500000000001],[0,0.4519532],[0,0.16816637999999998],[0,0.394041],[0,0.44466084],[0,0.37013676]],[[0.0,0.967131],[0.0,0.07153871999999999],[0,0.15788824999999998],[-0.0,-1.0044658596049196],[-0.0,-0.30544814470313975],[0,0.05491211000000001],[-0.0,-0.3605600761893795],[-0.0,-0.03177087487945801],[0,0.053926180000000004]],[[0,0.12931020000000001],[0,0.8176163999999999],[0,0.36783137],[0,0.40676229],[0,0.34568556],[0,0.12958064],[0,0.39521532],[0,0.6521023199999999],[0,0.007762160000000001]],[[0,0.77457565],[0,0.65169962],[0,0.014743039999999999],[0,0.027459180000000003],[0,0.019238489999999997],[0,0.1475325],[0,0.0241108],[0,0.97196281],[0,0.02039948]],[[0,0.07927854],[0,0.7323504299999999],[0,0.01010803],[0,0.40372010999999997],[0,0.11078208],[0,0.32035652],[0,0.24043442],[0,0.60973632],[0,0.1703247]],[[0,0.6071953499999999],[0,0.47072416],[0,0.04489568],[0,0.00226665],[0,0.2025648],[0,0.31875011999999997],[0,0.46645791999999997],[0,0.81228377],[0,0.53632212]],[[0,0.247212],[0,0.14207455],[0,0.31419978000000004],[0,0.16578790999999998],[0,0.16170686],[0,0.6849951300000001],[0,0.023618200000000002],[0,0.19165815],[0.0,0.90412768]],[[0,0.0052593299999999996],[0,0.49760412000000004],[0,0.021224999999999997],[0,0.0022868999999999997],[0,0.25082178],[0,0.017472909999999998],[0,0.084105],[0.62316039,0.0521037],[0.800710065,0.61047935]]]]

Actual:   [[[[0, 0.5741], [0, 0.1743], [0, 0.1396], [0, 0.0441], [0, 0.2348], [0, 0.2241], [-0, 0.1196], [-0, 0.2177], [0, 0.0087]], [[0, 0.5283], [0, 0.108], [0, 0.6982], [0, 0.2914], [0, 0.1004], [0, 0.4841], [0, 0.1022], [0, 0.3164], [0, 0.4243]], [[0, 0.0331], [0, 0.0772], [0, 0.3387], [0, 0.4124], [0, 0.022], [0, 0.0814], [0, 0.0627], [0, 0.3162], [0, 0.0882]], [[0, 0.4763], [0, 0.2596], [0, 0.0904], [0, 0.1487], [0, 0.5601], [0, 0.0459], [0, 0.2514], [0, 0.2103], [0, 0.7751]], [[0, 0.5731], [0, 0.2627], [0, 0.0112], [0, 0.7729], [0, 0.1333], [0, 0.2621], [0, 0.0264], [0, 0.0511], [0, 0.6729]], [[0, 0.1685], [0, 0.3196], [0, 0.0162], [0, 0.3623], [0, 0.0487], [0, 0.1315], [0, 0.2607], [0, 0.0119], [0, 0.398]], [[0, 0.1403], [0, 0.2402], [0, 0.5279], [0, 0.0011], [0, 0.452], [0, 0.1682], [0, 0.3941], [0, 0.4447], [0, 0.3702]], [[0, 0.9672], [0, 0.0716], [0, 0.1579], [-0, -1.0044], [-0, -0.3054], [0, 0.055], [-0, -0.3605], [-0, -0.0317], [0, 0.054]], [[0, 0.1294], [0, 0.8177], [0, 0.3679], [0, 0.4068], [0, 0.3457], [0, 0.1296], [0, 0.3953], [0, 0.6522], [0, 0.0078]], [[0, 0.7746], [0, 0.6517], [0, 0.0148], [0, 0.0275], [0, 0.0193], [0, 0.1476], [0, 0.0242], [0, 0.972], [0, 0.0204]], [[0, 0.0793], [0, 0.7324], [0, 0.0102], [0, 0.4038], [0, 0.1108], [0, 0.3204], [0, 0.2405], [0, 0.6098], [0, 0.1704]], [[0, 0.6072], [0, 0.4708], [0, 0.0449], [0, 0.0023], [0, 0.2026], [0, 0.3188], [0, 0.4665], [0, 0.8123], [0, 0.5364]], [[0, 0.2473], [0, 0.1421], [0, 0.3142], [0, 0.1658], [0, 0.1618], [0, 0.685], [0, 0.0237], [0, 0.1917], [0, 0.9042]], [[0, 0.0053], [0, 0.4977], [0, 0.0213], [0, 0.0023], [0, 0.2509], [0, 0.0175], [0, 0.0842], [0.6232, 0.0522], [0.8008, 0.6105]]]]

Expected: [[[[0, 0.5741], [0, 0.1743], [0, 0.1396], [0, 0.0441], [0, 0.2348], [0, 0.2241], [-0, 0.1196], [-0, 0.2177], [0, 0.0087]], [[0, 0.5283], [0, 0.108], [0, 0.6982], [0, 0.2914], [0, 0.1004], [0, 0.4841], [0, 0.1022], [0, 0.3164], [0, 0.4243]], [[0, 0.0331], [0, 0.0772], [0, 0.3387], [0, 0.4124], [0, 0.022], [0, 0.0814], [0, 0.0627], [0, 0.3162], [0, 0.0882]], [[0, 0.4763], [0, 0.2596], [0, 0.0904], [0, 0.1487], [0, 0.5601], [0, 0.0459], [0, 0.2514], [0, 0.2103], [0, 0.7751]], [[0, 0.5731], [0, 0.2627], [0, 0.0112], [0, 0.7729], [0, 0.1333], [0, 0.2621], [0, 0.0264], [0, 0.0511], [0, 0.6729]], [[0, 0.1685], [0, 0.3196], [0, 0.0162], [0, 0.3623], [0, 0.0487], [0, 0.1315], [0, 0.2607], [0, 0.0119], [0, 0.398]], [[0, 0.1403], [0, 0.2402], [0, 0.5279], [0, 0.0011], [0, 0.452], [0, 0.1682], [0, 0.3941], [0, 0.4447], [0, 0.3702]], [[0, 0.9672], [0, 0.0716], [0, 0.1579], [-0, -1.0044], [-0, -0.3054], [0, 0.055], [-0, -0.3605], [-0, -0.0317], [0, 0.054]], [[0, 0.1294], [0, 0.8177], [0, 0.3679], [0, 0.4068], [0, 0.3457], [0, 0.1296], [0, 0.3953], [0, 0.6522], [0, 0.0078]], [[0, 0.7746], [0, 0.6517], [0, 0.0148], [0, 0.0275], [0, 0.0193], [0, 0.1476], [0, 0.0242], [0, 0.972], [0, 0.0204]], [[0, 0.0793], [0, 0.7324], [0, 0.0102], [0, 0.4038], [0, 0.1108], [0, 0.3204], [0, 0.2405], [0, 0.6098], [0, 0.1704]], [[0, 0.6072], [0, 0.4708], [0, 0.0449], [0, 0.0023], [0, 0.2026], [0, 0.3188], [0, 0.4665], [0, 0.8123], [0, 0.5364]], [[0, 0.2473], [0, 0.1421], [0, 0.3142], [0, 0.1658], [0, 0.1618], [0, 0.685], [0, 0.0237], [0, 0.1917], [0, 0.9042]], [[0, 0.0053], [0, 0.4977], [0, 0.0213], [0, 0.0023], [0, 0.2509], [0, 0.0175], [0, 0.0842], [0.6232, 0.0522], [0.8008, 0.6105]]]]