import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Min82297 = tf.keras.layers.Input(shape=([2, 2]))
in1Min82297 = tf.keras.layers.Input(shape=([2, 2]))
in0Glo64108 = tf.keras.layers.Input(shape=([1, 2]))
in0Con71918 = tf.keras.layers.Input(shape=([2]))
in0Con18231 = tf.keras.layers.Input(shape=([3, 3, 1]))
in0Dot71475 = tf.keras.layers.Input(shape=([2, 3]))
in1Dot71475 = tf.keras.layers.Input(shape=([2, 3]))
in0Con49784 = tf.keras.layers.Input(shape=([3, 3, 2]))
in0Cro27526 = tf.keras.layers.Input(shape=([3, 2, 3]))

Min82297 = keras.layers.Minimum(name = 'Min82297', )([in0Min82297,in1Min82297])
Fla50749 = keras.layers.Flatten(name = 'Fla50749', )(Min82297)
Glo64108 = keras.layers.GlobalMaxPool1D(name = 'Glo64108', )(in0Glo64108)
Con71918 = keras.layers.Concatenate(axis=1, name = 'Con71918', )([Glo64108,in0Con71918])
Ave73984 = keras.layers.Average(name = 'Ave73984', )([Fla50749,Con71918])
Res90247 = keras.layers.Reshape((4, 1), name = 'Res90247', )(Ave73984)
Res69262 = keras.layers.Reshape((4, 1, 1), name = 'Res69262', )(Res90247)
Sep33643 = keras.layers.SeparableConv2D(2, (1, 1),strides=(2, 2), padding='valid', name = 'Sep33643', )(Res69262)
Zer78593 = keras.layers.ZeroPadding2D(padding=((1, 0), (2, 0)), name = 'Zer78593', )(Sep33643)
Con18231 = keras.layers.Concatenate(axis=3, name = 'Con18231', )([Zer78593,in0Con18231])
Dot71475 = keras.layers.Dot(axes=(1, 1), name = 'Dot71475', )([in0Dot71475,in1Dot71475])
Res43234 = keras.layers.Reshape((3, 3, 1), name = 'Res43234', )(Dot71475)
Con49784 = keras.layers.Concatenate(axis=3, name = 'Con49784', )([Res43234,in0Con49784])
Cro27526 = keras.layers.Cropping2D(cropping=((0, 1), (0, 0)), name = 'Cro27526', )(in0Cro27526)
Zer16578 = keras.layers.ZeroPadding2D(padding=((1, 0), (1, 0)), name = 'Zer16578', )(Cro27526)
Ave27675 = keras.layers.Average(name = 'Ave27675', )([Con49784,Zer16578])
Max49583 = keras.layers.Maximum(name = 'Max49583', )([Con18231,Ave27675])
model = tf.keras.models.Model(inputs=[in0Min82297,in1Min82297,in0Glo64108,in0Con71918,in0Con18231,in0Dot71475,in1Dot71475,in0Con49784,in0Cro27526], outputs=Max49583)
w = model.get_layer('Sep33643').get_weights() 
w[0] = np.array([[[[0.2966]]]])
w[1] = np.array([[[[0.878, 0.7293]]]])
w[2] = np.array([0, 0])
model.get_layer('Sep33643').set_weights(w) 
in0Min82297 = tf.constant([[[0.3228, 0.0652], [0.3275, 0.4668]]])
in1Min82297 = tf.constant([[[0.9446, 0.1218], [0.5247, 0.4503]]])
in0Glo64108 = tf.constant([[[1.5627, 1.278]]])
in0Con71918 = tf.constant([[0.4813, 0.729]])
in0Con18231 = tf.constant([[[[0.7505], [0.8239], [0.578]], [[0.3442], [0.7131], [0.7143]], [[0.6611], [0.1782], [0.6845]]]])
in0Dot71475 = tf.constant([[[0.7129, 0.6313, 0.5589], [0.2736, 0.8161, 0.3688]]])
in1Dot71475 = tf.constant([[[0.4347, 0.8188, 0.7831], [0.0047, 0.9718, 0.4844]]])
in0Con49784 = tf.constant([[[[0.7884, 0.9491], [0.633, 0.1751], [0.5105, 0.4584]], [[0.2911, 0.8556], [0.6124, 0.0887], [0.626, 0.7043]], [[0.7284, 0.3244], [0.7403, 0.6667], [0.797, 0.6246]]]])
in0Cro27526 = tf.constant([[[[1.239, 1.9901, 1.8098], [1.1093, 1.4821, 1.7943]], [[1.4393, 1.2751, 1.0658], [1.6741, 1.317, 1.2408]], [[1.9883, 1.4229, 1.9215], [1.2253, 1.2097, 1.4214]]]])
print (np.array2string(model.predict([in0Min82297,in1Min82297,in0Glo64108,in0Con71918,in0Con18231,in0Dot71475,in1Dot71475,in0Con49784,in0Cro27526],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Max49583.png')

LMin82297 = minimum_layer([[[[0.3228, 0.0652], [0.3275, 0.4668]]], [[[0.9446, 0.1218], [0.5247, 0.4503]]]], Min82297), 
LFla50749 = flatten_layer(Min82297, Fla50749), 
LGlo64108 = global_max_pool1D_layer([[[1.5627, 1.278]]], Glo64108), 
LCon71918 = concatenate_layer([Glo64108,[[0.4813, 0.729]]], 1, Con71918), 
LAve73984 = average_layer([Fla50749,Con71918], Ave73984), 
LRes90247 = reshape_layer(Ave73984, [4, 1], Res90247), 
LRes69262 = reshape_layer(Res90247, [4, 1, 1], Res69262), 
LSep33643 = separable_conv2D_layer(Res69262, 1, 1,[[[[[0.2966]]]],[[[[0.878, 0.7293]]]]],[0, 0], 2, 2, false, Sep33643), 
LZer78593 = zero_padding2D_layer(Sep33643, 1, 0, 2, 0, Zer78593), 
LCon18231 = concatenate_layer([Zer78593,[[[[0.7505], [0.8239], [0.578]], [[0.3442], [0.7131], [0.7143]], [[0.6611], [0.1782], [0.6845]]]]], 3, Con18231), 
LDot71475 = dot_layer([[[0.7129, 0.6313, 0.5589], [0.2736, 0.8161, 0.3688]]], [[[0.4347, 0.8188, 0.7831], [0.0047, 0.9718, 0.4844]]], 1, 1, Dot71475), 
LRes43234 = reshape_layer(Dot71475, [3, 3, 1], Res43234), 
LCon49784 = concatenate_layer([Res43234,[[[[0.7884, 0.9491], [0.633, 0.1751], [0.5105, 0.4584]], [[0.2911, 0.8556], [0.6124, 0.0887], [0.626, 0.7043]], [[0.7284, 0.3244], [0.7403, 0.6667], [0.797, 0.6246]]]]], 3, Con49784), 
LCro27526 = cropping2D_layer([[[[1.239, 1.9901, 1.8098], [1.1093, 1.4821, 1.7943]], [[1.4393, 1.2751, 1.0658], [1.6741, 1.317, 1.2408]], [[1.9883, 1.4229, 1.9215], [1.2253, 1.2097, 1.4214]]]], 0, 1, 0, 0, Cro27526), 
LZer16578 = zero_padding2D_layer(Cro27526, 1, 0, 1, 0, Zer16578), 
LAve27675 = average_layer([Con49784,Zer16578], Ave27675), 
LMax49583 = maximum_layer([Con18231,Ave27675], Max49583), 
exec_layers([LMin82297,LFla50749,LGlo64108,LCon71918,LAve73984,LRes90247,LRes69262,LSep33643,LZer78593,LCon18231,LDot71475,LRes43234,LCon49784,LCro27526,LZer16578,LAve27675,LMax49583],["Min82297","Fla50749","Glo64108","Con71918","Ave73984","Res90247","Res69262","Sep33643","Zer78593","Con18231","Dot71475","Res43234","Con49784","Cro27526","Zer16578","Ave27675","Max49583"],Max49583,"Max49583")

Actual (Unparsed): [[[[0.1555918, 0.3942000, 0.7505000], [0.4248035, 0.3165000, 0.8239000], [0.3454019, 0.2552500, 0.5780000]], [[0.1391309, 0.1455500, 0.4278000], [1.2744972, 1.3012500, 0.9492500], [0.9994949, 1.0540500, 1.2493000]], [[0.1223436, 0.3642000, 0.6611000], [1.1276636, 1.0077000, 0.8662500], [1.1452107, 1.0570000, 0.9327000]]]]

Expected (Unparsed): [[[[0.155591775,0.3942,0.7505],[0.4248035,0.3165,0.8239],[0.34540191500000006,0.25525,0.578]],[[0.13913088999999998,0.14555,0.4278],[1.27449721,1.30125,0.94925],[0.999494935,1.05405,1.2493]],[[0.12234359499999997,0.3642,0.6611],[1.12766358,1.0076999999999998,0.86625],[1.145210655,1.057,0.9327]]]]

Actual:   [[[[0.1556, 0.3942, 0.7505], [0.4249, 0.3165, 0.8239], [0.3455, 0.2553, 0.578]], [[0.1392, 0.1456, 0.4278], [1.2745, 1.3013, 0.9493], [0.9995, 1.0541, 1.2493]], [[0.1224, 0.3642, 0.6611], [1.1277, 1.0077, 0.8663], [1.1453, 1.057, 0.9327]]]]

Expected: [[[[0.1556, 0.3942, 0.7505], [0.4249, 0.3165, 0.8239], [0.3455, 0.2553, 0.578]], [[0.1392, 0.1456, 0.4278], [1.2745, 1.3013, 0.9493], [0.9995, 1.0541, 1.2493]], [[0.1224, 0.3642, 0.6611], [1.1277, 1.0077, 0.8663], [1.1453, 1.057, 0.9327]]]]