import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Sep66953 = tf.keras.layers.Input(shape=([1, 2, 1]))
in0Mul2725 = tf.keras.layers.Input(shape=([1, 2]))
in1Mul2725 = tf.keras.layers.Input(shape=([1, 2]))
in0Con63580 = tf.keras.layers.Input(shape=([1, 1]))
in0Glo99315 = tf.keras.layers.Input(shape=([2, 2]))
in0Mul10216 = tf.keras.layers.Input(shape=([2, 1]))
in1Mul10216 = tf.keras.layers.Input(shape=([2, 1]))

Sep66953 = keras.layers.SeparableConv2D(3, (1, 2),strides=(1, 1), padding='valid', name = 'Sep66953', )(in0Sep66953)
Res81059 = keras.layers.Reshape((1, 3), name = 'Res81059', )(Sep66953)
Mul2725 = keras.layers.Multiply(name = 'Mul2725', )([in0Mul2725,in1Mul2725])
Con63580 = keras.layers.Concatenate(axis=2, name = 'Con63580', )([Mul2725,in0Con63580])
Ave79117 = keras.layers.Average(name = 'Ave79117', )([Res81059,Con63580])
Lea67992 = keras.layers.LeakyReLU(alpha=3.320751788637742, name = 'Lea67992', )(Ave79117)
Res23653 = keras.layers.Reshape((1, 3, 1), name = 'Res23653', )(Lea67992)
Res75548 = keras.layers.Reshape((1, 3, 1, 1), name = 'Res75548', )(Res23653)
Zer55931 = keras.layers.ZeroPadding3D(padding=((1, 0), (2, 0), (0, 0)), name = 'Zer55931', )(Res75548)
Glo99315 = keras.layers.GlobalAveragePooling1D(name = 'Glo99315', )(in0Glo99315)
Res98772 = keras.layers.Reshape((2, 1), name = 'Res98772', )(Glo99315)
Res31660 = keras.layers.Reshape((2, 1, 1), name = 'Res31660', )(Res98772)
Res18366 = keras.layers.Reshape((2, 1, 1, 1), name = 'Res18366', )(Res31660)
Mul10216 = keras.layers.Multiply(name = 'Mul10216', )([in0Mul10216,in1Mul10216])
ELU76843 = keras.layers.ELU(alpha=7.936487224739199, name = 'ELU76843', )(Mul10216)
Res37682 = keras.layers.Reshape((2, 1, 1), name = 'Res37682', )(ELU76843)
Res99132 = keras.layers.Reshape((2, 1, 1, 1), name = 'Res99132', )(Res37682)
Cro1372 = keras.layers.Cropping3D(cropping=((1, 0), (0, 0), (0, 0)), name = 'Cro1372', )(Res99132)
Zer23358 = keras.layers.ZeroPadding3D(padding=((1, 0), (0, 0), (0, 0)), name = 'Zer23358', )(Cro1372)
Max50084 = keras.layers.Maximum(name = 'Max50084', )([Res18366,Zer23358])
Zer14879 = keras.layers.ZeroPadding3D(padding=((0, 0), (4, 0), (0, 0)), name = 'Zer14879', )(Max50084)
Mul15744 = keras.layers.Multiply(name = 'Mul15744', )([Zer55931,Zer14879])
model = tf.keras.models.Model(inputs=[in0Sep66953,in0Mul2725,in1Mul2725,in0Con63580,in0Glo99315,in0Mul10216,in1Mul10216], outputs=Mul15744)
w = model.get_layer('Sep66953').get_weights() 
w[0] = np.array([[[[0.1634]], [[0.6847]]]])
w[1] = np.array([[[[0.0891, 0.5763, 0.2623]]]])
w[2] = np.array([0, 0, 0])
model.get_layer('Sep66953').set_weights(w) 
in0Sep66953 = tf.constant([[[[0.091], [0.9821]]]])
in0Mul2725 = tf.constant([[[0.278, 0.4851]]])
in1Mul2725 = tf.constant([[[0.9029, 0.8055]]])
in0Con63580 = tf.constant([[[0.4035]]])
in0Glo99315 = tf.constant([[[1.772, 1.4144], [1.1213, 1.1493]]])
in0Mul10216 = tf.constant([[[0.9321], [0.8889]]])
in1Mul10216 = tf.constant([[[0.2734], [0.93]]])
print (np.array2string(model.predict([in0Sep66953,in0Mul2725,in1Mul2725,in0Con63580,in0Glo99315,in0Mul10216,in1Mul10216],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Mul15744.png')

LSep66953 = separable_conv2D_layer([[[[0.091], [0.9821]]]], 1, 2,[[[[[0.1634]], [[0.6847]]]],[[[[0.0891, 0.5763, 0.2623]]]]],[0, 0, 0], 1, 1, false, Sep66953), 
LRes81059 = reshape_layer(Sep66953, [1, 3], Res81059), 
LMul2725 = multiply_layer([[[[0.278, 0.4851]]], [[[0.9029, 0.8055]]]], Mul2725), 
LCon63580 = concatenate_layer([Mul2725,[[[0.4035]]]], 2, Con63580), 
LAve79117 = average_layer([Res81059,Con63580], Ave79117), 
LLea67992 = leaky_relu_layer(Ave79117, 3.320751788637742, Lea67992), 
LRes23653 = reshape_layer(Lea67992, [1, 3, 1], Res23653), 
LRes75548 = reshape_layer(Res23653, [1, 3, 1, 1], Res75548), 
LZer55931 = zero_padding3D_layer(Res75548, 1, 0, 2, 0, 0, 0, Zer55931), 
LGlo99315 = global_average_pooling1D_layer([[[1.772, 1.4144], [1.1213, 1.1493]]], Glo99315), 
LRes98772 = reshape_layer(Glo99315, [2, 1], Res98772), 
LRes31660 = reshape_layer(Res98772, [2, 1, 1], Res31660), 
LRes18366 = reshape_layer(Res31660, [2, 1, 1, 1], Res18366), 
LMul10216 = multiply_layer([[[[0.9321], [0.8889]]], [[[0.2734], [0.93]]]], Mul10216), 
LELU76843 = elu_layer(Mul10216, 7.936487224739199, ELU76843), 
LRes37682 = reshape_layer(ELU76843, [2, 1, 1], Res37682), 
LRes99132 = reshape_layer(Res37682, [2, 1, 1, 1], Res99132), 
LCro1372 = cropping3D_layer(Res99132, 1, 0, 0, 0, 0, 0, Cro1372), 
LZer23358 = zero_padding3D_layer(Cro1372, 1, 0, 0, 0, 0, 0, Zer23358), 
LMax50084 = maximum_layer([Res18366,Zer23358], Max50084), 
LZer14879 = zero_padding3D_layer(Max50084, 0, 0, 4, 0, 0, 0, Zer14879), 
LMul15744 = multiply_layer([Zer55931,Zer14879], Mul15744), 
exec_layers([LSep66953,LRes81059,LMul2725,LCon63580,LAve79117,LLea67992,LRes23653,LRes75548,LZer55931,LGlo99315,LRes98772,LRes31660,LRes18366,LMul10216,LELU76843,LRes37682,LRes99132,LCro1372,LZer23358,LMax50084,LZer14879,LMul15744],["Sep66953","Res81059","Mul2725","Con63580","Ave79117","Lea67992","Res23653","Res75548","Zer55931","Glo99315","Res98772","Res31660","Res18366","Mul10216","ELU76843","Res37682","Res99132","Cro1372","Zer23358","Max50084","Zer14879","Mul15744"],Mul15744,"Mul15744")

Actual (Unparsed): [[[[[0.0000000]], [[0.0000000]], [[0.0000000]], [[0.0000000]], [[0.0000000]]], [[[0.0000000]], [[0.0000000]], [[0.0000000]], [[0.0000000]], [[0.3741606]]]]]

Expected (Unparsed): [[[[[0]],[[0]],[[0]],[[0]],[[0.0]]],[[[0]],[[0]],[[0.0]],[[0.0]],[[0.3741606518618569]]]]]

Actual:   [[[[[0]], [[0]], [[0]], [[0]], [[0]]], [[[0]], [[0]], [[0]], [[0]], [[0.3742]]]]]

Expected: [[[[[0]], [[0]], [[0]], [[0]], [[0]]], [[[0]], [[0]], [[0]], [[0]], [[0.3742]]]]]