import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Con35957 = tf.keras.layers.Input(shape=([2, 2, 2, 2]))

Con35957 = keras.layers.Conv3D(4, (2, 2, 2),strides=(1, 1, 1), padding='valid', dilation_rate=(1, 1, 1), name = 'Con35957', )(in0Con35957)
ELU44588 = keras.layers.ELU(alpha=-5.23901019002047, name = 'ELU44588', )(Con35957)
Lea29062 = keras.layers.LeakyReLU(alpha=9.366673113869654, name = 'Lea29062', )(ELU44588)
model = tf.keras.models.Model(inputs=[in0Con35957], outputs=Lea29062)
w = model.get_layer('Con35957').get_weights() 
w[0] = np.array([[[[[0.7488, 0.131, 0.0338, 0.3872], [0.9378, 0.7618, 0.4664, 0.0358]], [[0.0446, 0.7259, 0.9521, 0.9568], [0.2081, 0.1068, 0.6887, 0.7378]]], [[[0.6512, 0.8049, 0.8181, 0.2968], [0.7591, 0.1734, 0.8105, 0.5159]], [[0.9949, 0.0911, 0.9314, 0.3855], [0.1543, 0.5003, 0.4423, 0.9833]]]], [[[[0.0808, 0.6636, 0.577, 0.2295], [0.3753, 0.6521, 0.011, 0.5125]], [[0.8182, 0.87, 0.4909, 0.9547], [0.1949, 0.7379, 0.5318, 0.3047]]], [[[0.9655, 0.0139, 0.6024, 0.183], [0.7503, 0.6123, 0.018, 0.6826]], [[0.9192, 0.1959, 0.84, 0.133], [0.6649, 0.2642, 0.4406, 0.1721]]]]])
w[1] = np.array([0, 0, 0, 0])
model.get_layer('Con35957').set_weights(w) 
in0Con35957 = tf.constant([[[[[0.9376, 0.0339], [0.1374, 0.3147]], [[0.1456, 0.396], [0.191, 0.6815]]], [[[0.4674, 0.2022], [0.5187, 0.0889]], [[0.446, 0.8937], [0.4097, 0.5693]]]]])
print (np.array2string(model.predict([in0Con35957],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Lea29062.png')

LCon35957 = conv3D_layer([[[[[0.9376, 0.0339], [0.1374, 0.3147]], [[0.1456, 0.396], [0.191, 0.6815]]], [[[0.4674, 0.2022], [0.5187, 0.0889]], [[0.446, 0.8937], [0.4097, 0.5693]]]]], 2, 2, 2,[[[[[0.7488, 0.131, 0.0338, 0.3872], [0.9378, 0.7618, 0.4664, 0.0358]], [[0.0446, 0.7259, 0.9521, 0.9568], [0.2081, 0.1068, 0.6887, 0.7378]]], [[[0.6512, 0.8049, 0.8181, 0.2968], [0.7591, 0.1734, 0.8105, 0.5159]], [[0.9949, 0.0911, 0.9314, 0.3855], [0.1543, 0.5003, 0.4423, 0.9833]]]], [[[[0.0808, 0.6636, 0.577, 0.2295], [0.3753, 0.6521, 0.011, 0.5125]], [[0.8182, 0.87, 0.4909, 0.9547], [0.1949, 0.7379, 0.5318, 0.3047]]], [[[0.9655, 0.0139, 0.6024, 0.183], [0.7503, 0.6123, 0.018, 0.6826]], [[0.9192, 0.1959, 0.84, 0.133], [0.6649, 0.2642, 0.4406, 0.1721]]]]],[0, 0, 0, 0], 1, 1, 1, false, 1, 1, 1, Con35957), 
LELU44588 = elu_layer(Con35957, -5.23901019002047, ELU44588), 
LLea29062 = leaky_relu_layer(ELU44588, 9.366673113869654, Lea29062), 
exec_layers([LCon35957,LELU44588,LLea29062],["Con35957","ELU44588","Lea29062"],Lea29062,"Lea29062")

Actual (Unparsed): [[[[[3.9077416, 2.5691844, 2.7680119, 3.2964731]]]]]

Expected (Unparsed): [[[[[3.90774153,2.5691843999999997,2.7680119100000002,3.2964730199999996]]]]]

Actual:   [[[[[3.9078, 2.5692, 2.7681, 3.2965]]]]]

Expected: [[[[[3.9078, 2.5692, 2.7681, 3.2965]]]]]