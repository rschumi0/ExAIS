import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Mul77046 = tf.keras.layers.Input(shape=([2, 2, 1, 2]))
in1Mul77046 = tf.keras.layers.Input(shape=([2, 2, 1, 2]))
in0Con81039 = tf.keras.layers.Input(shape=([4, 1]))
in0Cro90195 = tf.keras.layers.Input(shape=([2, 2]))

Mul77046 = keras.layers.Multiply(name = 'Mul77046', )([in0Mul77046,in1Mul77046])
Res79411 = keras.layers.Reshape((2, 2, 2), name = 'Res79411', )(Mul77046)
Res67867 = keras.layers.Reshape((2, 4), name = 'Res67867', )(Res79411)
Glo94668 = keras.layers.GlobalMaxPool1D(name = 'Glo94668', )(Res67867)
Res67957 = keras.layers.Reshape((4, 1), name = 'Res67957', )(Glo94668)
Con81039 = keras.layers.Concatenate(axis=2, name = 'Con81039', )([Res67957,in0Con81039])
Cro90195 = keras.layers.Cropping1D(cropping=((1, 0)), name = 'Cro90195', )(in0Cro90195)
Zer14860 = keras.layers.ZeroPadding1D(padding=((3, 0)), name = 'Zer14860', )(Cro90195)
Ave94644 = keras.layers.Average(name = 'Ave94644', )([Con81039,Zer14860])
model = tf.keras.models.Model(inputs=[in0Mul77046,in1Mul77046,in0Con81039,in0Cro90195], outputs=Ave94644)
in0Mul77046 = tf.constant([[[[[0.7787, 0.5245]], [[0.0819, 0.5376]]], [[[0.0495, 0.4702]], [[0.9184, 0.9795]]]]])
in1Mul77046 = tf.constant([[[[[0.6258, 0.3736]], [[0.0463, 0.22]]], [[[0.5715, 0.8158]], [[0.545, 0.9072]]]]])
in0Con81039 = tf.constant([[[0.1247], [0.9129], [0.3414], [0.3414]]])
in0Cro90195 = tf.constant([[[1.4667, 1.4544], [1.7835, 1.7851]]])
print (np.array2string(model.predict([in0Mul77046,in1Mul77046,in0Con81039,in0Cro90195],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Ave94644.png')

LMul77046 = multiply_layer([[[[[[0.7787, 0.5245]], [[0.0819, 0.5376]]], [[[0.0495, 0.4702]], [[0.9184, 0.9795]]]]], [[[[[0.6258, 0.3736]], [[0.0463, 0.22]]], [[[0.5715, 0.8158]], [[0.545, 0.9072]]]]]], Mul77046), 
LRes79411 = reshape_layer(Mul77046, [2, 2, 2], Res79411), 
LRes67867 = reshape_layer(Res79411, [2, 4], Res67867), 
LGlo94668 = global_max_pool1D_layer(Res67867, Glo94668), 
LRes67957 = reshape_layer(Glo94668, [4, 1], Res67957), 
LCon81039 = concatenate_layer([Res67957,[[[0.1247], [0.9129], [0.3414], [0.3414]]]], 2, Con81039), 
LCro90195 = cropping1D_layer([[[1.4667, 1.4544], [1.7835, 1.7851]]], 1, 0, Cro90195), 
LZer14860 = zero_padding1D_layer(Cro90195, 3, 0, Zer14860), 
LAve94644 = average_layer([Con81039,Zer14860], Ave94644), 
exec_layers([LMul77046,LRes79411,LRes67867,LGlo94668,LRes67957,LCon81039,LCro90195,LZer14860,LAve94644],["Mul77046","Res79411","Res67867","Glo94668","Res67957","Con81039","Cro90195","Zer14860","Ave94644"],Ave94644,"Ave94644")

Actual (Unparsed): [[[0.2436552, 0.0623500], [0.1917946, 0.4564500], [0.2502640, 0.1707000], [1.3360512, 1.0632500]]]

Expected (Unparsed): [[[0.24365523,0.06235],[0.19179458,0.45645],[0.25026400000000004,0.1707],[1.3360512,1.06325]]]

Actual:   [[[0.2437, 0.0624], [0.1918, 0.4565], [0.2503, 0.1707], [1.3361, 1.0633]]]

Expected: [[[0.2437, 0.0624], [0.1918, 0.4565], [0.2503, 0.1707], [1.3361, 1.0633]]]