import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Add16091 = tf.keras.layers.Input(shape=([2, 1, 1]))
in1Add16091 = tf.keras.layers.Input(shape=([2, 1, 1]))
in0Con91322 = tf.keras.layers.Input(shape=([2, 2, 1]))
in0Min31732 = tf.keras.layers.Input(shape=([2, 2, 2]))
in1Min31732 = tf.keras.layers.Input(shape=([2, 2, 2]))

Add16091 = keras.layers.Add(name = 'Add16091', )([in0Add16091,in1Add16091])
Zer885 = keras.layers.ZeroPadding2D(padding=((0, 0), (1, 0)), name = 'Zer885', )(Add16091)
Con91322 = keras.layers.Concatenate(axis=3, name = 'Con91322', )([Zer885,in0Con91322])
Min31732 = keras.layers.Minimum(name = 'Min31732', )([in0Min31732,in1Min31732])
Min67405 = keras.layers.Minimum(name = 'Min67405', )([Con91322,Min31732])
Res67413 = keras.layers.Reshape((2, 2, 2, 1), name = 'Res67413', )(Min67405)
Con68900 = keras.layers.Conv3D(4, (1, 1, 1),strides=(1, 1, 1), padding='valid', dilation_rate=(1, 1, 1), name = 'Con68900', )(Res67413)
Res86710 = keras.layers.Reshape((2, 2, 8), name = 'Res86710', )(Con68900)
PRe89560 = keras.layers.PReLU(name = 'PRe89560', )(Res86710)
model = tf.keras.models.Model(inputs=[in0Add16091,in1Add16091,in0Con91322,in0Min31732,in1Min31732], outputs=PRe89560)
w = model.get_layer('Con68900').get_weights() 
w[0] = np.array([[[[[0.5443, 0.101, 0.2363, 0.8457]]]]])
w[1] = np.array([0, 0, 0, 0])
model.get_layer('Con68900').set_weights(w) 
w = model.get_layer('PRe89560').get_weights() 
w[0] = np.array([[[0.6595, 0.8136, 0.5526, 0.958, 0.711, 0.2346, 0.8712, 0.3599], [0.9484, 0.1553, 0.2881, 0.1184, 0.1072, 0.9878, 0.8778, 0.8415]], [[0.8231, 0.2387, 0.4786, 0.4531, 0.2579, 0.9267, 0.0655, 0.8581], [0.4488, 0.959, 0.4085, 0.1814, 0.4225, 0.9262, 0.2208, 0.3627]]])
model.get_layer('PRe89560').set_weights(w) 
in0Add16091 = tf.constant([[[[0.5621]], [[0.6906]]]])
in1Add16091 = tf.constant([[[[0.585]], [[0.3899]]]])
in0Con91322 = tf.constant([[[[0.5211], [0.3279]], [[0.2422], [0.9619]]]])
in0Min31732 = tf.constant([[[[0.244, 0.2562], [0.1205, 0.8546]], [[0.6897, 0.1731], [0.1043, 0.9054]]]])
in1Min31732 = tf.constant([[[[0.0701, 0.4125], [0.8126, 0.2889]], [[0.8599, 0.5701], [0.0078, 0.8061]]]])
print (np.array2string(model.predict([in0Add16091,in1Add16091,in0Con91322,in0Min31732,in1Min31732],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='PRe89560.png')

LAdd16091 = add_layer([[[[[0.5621]], [[0.6906]]]], [[[[0.585]], [[0.3899]]]]], Add16091), 
LZer885 = zero_padding2D_layer(Add16091, 0, 0, 1, 0, Zer885), 
LCon91322 = concatenate_layer([Zer885,[[[[0.5211], [0.3279]], [[0.2422], [0.9619]]]]], 3, Con91322), 
LMin31732 = minimum_layer([[[[[0.244, 0.2562], [0.1205, 0.8546]], [[0.6897, 0.1731], [0.1043, 0.9054]]]], [[[[0.0701, 0.4125], [0.8126, 0.2889]], [[0.8599, 0.5701], [0.0078, 0.8061]]]]], Min31732), 
LMin67405 = minimum_layer([Con91322,Min31732], Min67405), 
LRes67413 = reshape_layer(Min67405, [2, 2, 2, 1], Res67413), 
LCon68900 = conv3D_layer(Res67413, 1, 1, 1,[[[[[0.5443, 0.101, 0.2363, 0.8457]]]]],[0, 0, 0, 0], 1, 1, 1, false, 1, 1, 1, Con68900), 
LRes86710 = reshape_layer(Con68900, [2, 2, 8], Res86710), 
LPRe89560 = prelu_layer(Res86710, [[[0.6595, 0.8136, 0.5526, 0.958, 0.711, 0.2346, 0.8712, 0.3599], [0.9484, 0.1553, 0.2881, 0.1184, 0.1072, 0.9878, 0.8778, 0.8415]], [[0.8231, 0.2387, 0.4786, 0.4531, 0.2579, 0.9267, 0.0655, 0.8581], [0.4488, 0.959, 0.4085, 0.1814, 0.4225, 0.9262, 0.2208, 0.3627]]], PRe89560), 
exec_layers([LAdd16091,LZer885,LCon91322,LMin31732,LMin67405,LRes67413,LCon68900,LRes86710,LPRe89560],["Add16091","Zer885","Con91322","Min31732","Min67405","Res67413","Con68900","Res86710","PRe89560"],PRe89560,"PRe89560")

Actual (Unparsed): [[[[0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.1394497, 0.0258762, 0.0605401, 0.2166683], [0.0655881, 0.0121705, 0.0284741, 0.1019068, 0.1572483, 0.0291789, 0.0682671, 0.2443227]], [[0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0942183, 0.0174831, 0.0409035, 0.1463907], [0.0042455, 0.0007878, 0.0018431, 0.0065965, 0.4387602, 0.0814161, 0.1904814, 0.6817188]]]]

Expected (Unparsed): [[[[0.0,0.0,0.0,0.0,0.13944966,0.0258762,0.06054006,0.21666834],[0.06558815,0.0121705,0.02847415,0.10190685,0.15724827,0.0291789,0.06826707,0.24432273]],[[0.0,0.0,0.0,0.0,0.09421833,0.0174831,0.04090353,0.14639067],[0.00424554,0.0007878000000000001,0.00184314,0.00659646,0.43876023000000003,0.0814161,0.19048143,0.68171877]]]]

Actual:   [[[[0, 0, 0, 0, 0.1395, 0.0259, 0.0606, 0.2167], [0.0656, 0.0122, 0.0285, 0.102, 0.1573, 0.0292, 0.0683, 0.2444]], [[0, 0, 0, 0, 0.0943, 0.0175, 0.041, 0.1464], [0.0043, 0.0008, 0.0019, 0.0066, 0.4388, 0.0815, 0.1905, 0.6818]]]]

Expected: [[[[0, 0, 0, 0, 0.1395, 0.0259, 0.0606, 0.2167], [0.0656, 0.0122, 0.0285, 0.102, 0.1573, 0.0292, 0.0683, 0.2444]], [[0, 0, 0, 0, 0.0943, 0.0175, 0.041, 0.1464], [0.0043, 0.0008, 0.0019, 0.0066, 0.4388, 0.0815, 0.1905, 0.6818]]]]