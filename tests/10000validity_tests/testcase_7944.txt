import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Dot51327 = tf.keras.layers.Input(shape=([3, 3]))
in1Dot51327 = tf.keras.layers.Input(shape=([3, 3]))

Dot51327 = keras.layers.Dot(axes=(1, 2), name = 'Dot51327', )([in0Dot51327,in1Dot51327])
Sep11360 = keras.layers.SeparableConv1D(3, (3),strides=(1), padding='valid', name = 'Sep11360', )(Dot51327)
model = tf.keras.models.Model(inputs=[in0Dot51327,in1Dot51327], outputs=Sep11360)
w = model.get_layer('Sep11360').get_weights() 
w[0] = np.array([[[0.0068], [0.9761], [0.6759]], [[0.6336], [0.9552], [0.5807]], [[0.4734], [0.0064], [0.5706]]])
w[1] = np.array([[[0.0991, 0.5431, 0.5158], [0.9703, 0.6039, 0.1508], [0.2236, 0.0632, 0.783]]])
w[2] = np.array([0, 0, 0])
model.get_layer('Sep11360').set_weights(w) 
in0Dot51327 = tf.constant([[[0.3914, 0.3886, 0.7024], [0.6245, 0.6644, 0.1464], [0.7585, 0.0453, 0.6746]]])
in1Dot51327 = tf.constant([[[0.2794, 0.7945, 0.2057], [0.9964, 0.8448, 0.2038], [0.102, 0.1208, 0.0439]]])
print (np.array2string(model.predict([in0Dot51327,in1Dot51327],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Sep11360.png')

LDot51327 = dot_layer([[[0.3914, 0.3886, 0.7024], [0.6245, 0.6644, 0.1464], [0.7585, 0.0453, 0.6746]]], [[[0.2794, 0.7945, 0.2057], [0.9964, 0.8448, 0.2038], [0.102, 0.1208, 0.0439]]], 1, 2, Dot51327), 
LSep11360 = separable_conv1D_layer(Dot51327, 3,[[[[0.0068], [0.9761], [0.6759]], [[0.6336], [0.9552], [0.5807]], [[0.4734], [0.0064], [0.5706]]],[[[0.0991, 0.5431, 0.5158], [0.9703, 0.6039, 0.1508], [0.2236, 0.0632, 0.783]]]],[0, 0, 0], 1, false, Sep11360), 
exec_layers([LDot51327,LSep11360],["Dot51327","Sep11360"],Sep11360,"Sep11360")

Actual (Unparsed): [[[2.0247582, 1.5443419, 0.8078529]]]

Expected (Unparsed): [[[2.0247581992281978,1.5443419102890479,0.8078528746163579]]]

Actual:   [[[2.0248, 1.5444, 0.8079]]]

Expected: [[[2.0248, 1.5444, 0.8079]]]