import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Dot46967 = tf.keras.layers.Input(shape=([3]))
in1Dot46967 = tf.keras.layers.Input(shape=([3]))

Dot46967 = keras.layers.Dot(axes=(1, 1), name = 'Dot46967', )([in0Dot46967,in1Dot46967])
Res55995 = keras.layers.Reshape((1, 1), name = 'Res55995', )(Dot46967)
Sim88147 = keras.layers.SimpleRNN(3,name = 'Sim88147', )(Res55995)
model = tf.keras.models.Model(inputs=[in0Dot46967,in1Dot46967], outputs=Sim88147)
w = model.get_layer('Sim88147').get_weights() 
w[0] = np.array([[3, 9, 2]])
w[1] = np.array([[3, 1, 10], [5, 3, 6], [1, 3, 1]])
w[2] = np.array([9, 7, 6])
model.get_layer('Sim88147').set_weights(w) 
in0Dot46967 = tf.constant([[0.5184, 0.8016, 0.441]])
in1Dot46967 = tf.constant([[0.6622, 0.7538, 0.7666]])
print (np.array2string(model.predict([in0Dot46967,in1Dot46967],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Sim88147.png')

LDot46967 = dot_layer([[0.5184, 0.8016, 0.441]], [[0.6622, 0.7538, 0.7666]], 1, 1, Dot46967), 
LRes55995 = reshape_layer(Dot46967, [1, 1], Res55995), 
LSim88147 = simple_rnn_layer(Res55995,[[3, 9, 2]],[[3, 1, 10], [5, 3, 6], [1, 3, 1]],[9, 7, 6], Sim88147), 
exec_layers([LDot46967,LRes55995,LSim88147],["Dot46967","Res55995","Sim88147"],Sim88147,"Sim88147")

Actual (Unparsed): [[1.0000000, 1.0000000, 0.9999999]]

Expected (Unparsed): [[0.9999999999863933,0.9999999999999999,0.999999928191106]]

Actual:   [[1, 1, 1]]

Expected: [[1, 1, 1]]