import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Mul24728 = tf.keras.layers.Input(shape=([1, 1, 2, 2]))
in1Mul24728 = tf.keras.layers.Input(shape=([1, 1, 2, 2]))

Mul24728 = keras.layers.Multiply(name = 'Mul24728', )([in0Mul24728,in1Mul24728])
Lay89329 = keras.layers.LayerNormalization(axis=1, epsilon=1.2123617153216533, name = 'Lay89329', )(Mul24728)
model = tf.keras.models.Model(inputs=[in0Mul24728,in1Mul24728], outputs=Lay89329)
in0Mul24728 = tf.constant([[[[[0.0877, 0.7887], [0.7066, 0.5779]]]]])
in1Mul24728 = tf.constant([[[[[0.4984, 0.8609], [0.6638, 0.2192]]]]])
print (np.array2string(model.predict([in0Mul24728,in1Mul24728],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Lay89329.png')

LMul24728 = multiply_layer([[[[[[0.0877, 0.7887], [0.7066, 0.5779]]]]], [[[[[0.4984, 0.8609], [0.6638, 0.2192]]]]]], Mul24728), 
LLay89329 = layer_normalization_layer(Mul24728, 1, 1.2123617153216533, Lay89329), 
exec_layers([LMul24728,LLay89329],["Mul24728","Lay89329"],Lay89329,"Lay89329")

Actual (Unparsed): [[[[[0.0000000, 0.0000000], [0.0000000, 0.0000000]]]]]

Expected (Unparsed): [[[[[0.0,0.0],[0.0,0.0]]]]]

Actual:   [[[[[0, 0], [0, 0]]]]]

Expected: [[[[[0, 0], [0, 0]]]]]