import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Max9739 = tf.keras.layers.Input(shape=([2, 2, 2]))
in0Con85480 = tf.keras.layers.Input(shape=([2, 5, 1, 2]))
in0Ave47800 = tf.keras.layers.Input(shape=([1, 2, 1, 1]))
in1Ave47800 = tf.keras.layers.Input(shape=([1, 2, 1, 1]))

Max9739 = keras.layers.MaxPool2D(pool_size=(1, 1), strides=(1, 1), padding='same', name = 'Max9739', )(in0Max9739)
Res69445 = keras.layers.Reshape((2, 4), name = 'Res69445', )(Max9739)
Sep12521 = keras.layers.SeparableConv1D(3, (2),strides=(1), padding='valid', name = 'Sep12521', )(Res69445)
Res52154 = keras.layers.Reshape((1, 3, 1), name = 'Res52154', )(Sep12521)
Res20016 = keras.layers.Reshape((1, 3, 1, 1), name = 'Res20016', )(Res52154)
Zer15009 = keras.layers.ZeroPadding3D(padding=((1, 0), (2, 0), (0, 0)), name = 'Zer15009', )(Res20016)
Con85480 = keras.layers.Concatenate(axis=4, name = 'Con85480', )([Zer15009,in0Con85480])
Ave47800 = keras.layers.Average(name = 'Ave47800', )([in0Ave47800,in1Ave47800])
Res43874 = keras.layers.Reshape((1, 2, 1), name = 'Res43874', )(Ave47800)
Res74104 = keras.layers.Reshape((1, 2), name = 'Res74104', )(Res43874)
Glo7880 = keras.layers.GlobalAveragePooling1D(name = 'Glo7880', )(Res74104)
Res40243 = keras.layers.Reshape((2, 1), name = 'Res40243', )(Glo7880)
Res27523 = keras.layers.Reshape((2, 1, 1), name = 'Res27523', )(Res40243)
Res57621 = keras.layers.Reshape((2, 1, 1, 1), name = 'Res57621', )(Res27523)
Con27951 = keras.layers.Conv3DTranspose(3, (1, 1, 1),strides=(1, 1, 1), padding='same', name = 'Con27951', )(Res57621)
Zer78902 = keras.layers.ZeroPadding3D(padding=((0, 0), (4, 0), (0, 0)), name = 'Zer78902', )(Con27951)
Min10168 = keras.layers.Minimum(name = 'Min10168', )([Con85480,Zer78902])
model = tf.keras.models.Model(inputs=[in0Max9739,in0Con85480,in0Ave47800,in1Ave47800], outputs=Min10168)
w = model.get_layer('Sep12521').get_weights() 
w[0] = np.array([[[0.7801], [0.1207], [0.6128], [0.123]], [[0.7971], [0.4436], [0.8585], [0.9758]]])
w[1] = np.array([[[0.1767, 0.6961, 0.0331], [0.6717, 0.8492, 0.4586], [0.6285, 0.4112, 0.9458], [0.7734, 0.8438, 0.137]]])
w[2] = np.array([0, 0, 0])
model.get_layer('Sep12521').set_weights(w) 
w = model.get_layer('Con27951').get_weights() 
w[0] = np.array([[[[[0.5996], [0.6087], [0.5698]]]]])
w[1] = np.array([0, 0, 0])
model.get_layer('Con27951').set_weights(w) 
in0Max9739 = tf.constant([[[[1.0326, 1.8466], [1.0121, 1.9391]], [[1.9185, 1.2691], [1.0849, 1.5035]]]])
in0Con85480 = tf.constant([[[[[0.6299, 0.1722]], [[0.0945, 0.6966]], [[0.4582, 0.3337]], [[0.2997, 0.3293]], [[0.1561, 0.0407]]], [[[0.7624, 0.5777]], [[0.9442, 0.9879]], [[0.8912, 0.5091]], [[0.0232, 0.8016]], [[0.6918, 0.4849]]]]])
in0Ave47800 = tf.constant([[[[[0.1383]], [[0.446]]]]])
in1Ave47800 = tf.constant([[[[[0.3754]], [[0.7785]]]]])
print (np.array2string(model.predict([in0Max9739,in0Con85480,in0Ave47800,in1Ave47800],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Min10168.png')

LMax9739 = max_pool2D_layer([[[[1.0326, 1.8466], [1.0121, 1.9391]], [[1.9185, 1.2691], [1.0849, 1.5035]]]], 1, 1, 1, 1, true, Max9739), 
LRes69445 = reshape_layer(Max9739, [2, 4], Res69445), 
LSep12521 = separable_conv1D_layer(Res69445, 2,[[[[0.7801], [0.1207], [0.6128], [0.123]], [[0.7971], [0.4436], [0.8585], [0.9758]]],[[[0.1767, 0.6961, 0.0331], [0.6717, 0.8492, 0.4586], [0.6285, 0.4112, 0.9458], [0.7734, 0.8438, 0.137]]]],[0, 0, 0], 1, false, Sep12521), 
LRes52154 = reshape_layer(Sep12521, [1, 3, 1], Res52154), 
LRes20016 = reshape_layer(Res52154, [1, 3, 1, 1], Res20016), 
LZer15009 = zero_padding3D_layer(Res20016, 1, 0, 2, 0, 0, 0, Zer15009), 
LCon85480 = concatenate_layer([Zer15009,[[[[[0.6299, 0.1722]], [[0.0945, 0.6966]], [[0.4582, 0.3337]], [[0.2997, 0.3293]], [[0.1561, 0.0407]]], [[[0.7624, 0.5777]], [[0.9442, 0.9879]], [[0.8912, 0.5091]], [[0.0232, 0.8016]], [[0.6918, 0.4849]]]]]], 4, Con85480), 
LAve47800 = average_layer([[[[[[0.1383]], [[0.446]]]]], [[[[[0.3754]], [[0.7785]]]]]], Ave47800), 
LRes43874 = reshape_layer(Ave47800, [1, 2, 1], Res43874), 
LRes74104 = reshape_layer(Res43874, [1, 2], Res74104), 
LGlo7880 = global_average_pooling1D_layer(Res74104, Glo7880), 
LRes40243 = reshape_layer(Glo7880, [2, 1], Res40243), 
LRes27523 = reshape_layer(Res40243, [2, 1, 1], Res27523), 
LRes57621 = reshape_layer(Res27523, [2, 1, 1, 1], Res57621), 
LCon27951 = conv3D_transpose_layer(Res57621, 1, 1, 1,[[[[[0.5996], [0.6087], [0.5698]]]]],[0, 0, 0], 1, 1, 1, true, Con27951), 
LZer78902 = zero_padding3D_layer(Con27951, 0, 0, 4, 0, 0, 0, Zer78902), 
LMin10168 = minimum_layer([Con85480,Zer78902], Min10168), 
exec_layers([LMax9739,LRes69445,LSep12521,LRes52154,LRes20016,LZer15009,LCon85480,LAve47800,LRes43874,LRes74104,LGlo7880,LRes40243,LRes27523,LRes57621,LCon27951,LZer78902,LMin10168],["Max9739","Res69445","Sep12521","Res52154","Res20016","Zer15009","Con85480","Ave47800","Res43874","Res74104","Glo7880","Res40243","Res27523","Res57621","Con27951","Zer78902","Min10168"],Min10168,"Min10168")

Actual (Unparsed): [[[[[0.0000000, 0.0000000, 0.0000000]], [[0.0000000, 0.0000000, 0.0000000]], [[0.0000000, 0.0000000, 0.0000000]], [[0.0000000, 0.0000000, 0.0000000]], [[0.0000000, 0.1561000, 0.0407000]]], [[[0.0000000, 0.0000000, 0.0000000]], [[0.0000000, 0.0000000, 0.0000000]], [[0.0000000, 0.0000000, 0.0000000]], [[0.0000000, 0.0000000, 0.0000000]], [[0.3671051, 0.3726766, 0.3488601]]]]]

Expected (Unparsed): [[[[[0,0,0]],[[0,0,0]],[[0,0,0]],[[0,0,0]],[[0,0.1561,0.0407]]],[[[0,0,0]],[[0,0,0]],[[0,0,0]],[[0,0,0]],[[0.3671051,0.372676575,0.34886005]]]]]

Actual:   [[[[[0, 0, 0]], [[0, 0, 0]], [[0, 0, 0]], [[0, 0, 0]], [[0, 0.1561, 0.0407]]], [[[0, 0, 0]], [[0, 0, 0]], [[0, 0, 0]], [[0, 0, 0]], [[0.3672, 0.3727, 0.3489]]]]]

Expected: [[[[[0, 0, 0]], [[0, 0, 0]], [[0, 0, 0]], [[0, 0, 0]], [[0, 0.1561, 0.0407]]], [[[0, 0, 0]], [[0, 0, 0]], [[0, 0, 0]], [[0, 0, 0]], [[0.3672, 0.3727, 0.3489]]]]]