import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Bat51164 = tf.keras.layers.Input(shape=([2]))

Bat51164 = keras.layers.BatchNormalization(axis=1, epsilon=0.3472338662650546,  name = 'Bat51164', )(in0Bat51164)
Sof68729 = keras.layers.Softmax(axis=1, name = 'Sof68729', )(Bat51164)
model = tf.keras.models.Model(inputs=[in0Bat51164], outputs=Sof68729)
w = model.get_layer('Bat51164').get_weights() 
w[0] = np.array([0.3586, 0.7054])
w[1] = np.array([0.9431, 0.7208])
w[2] = np.array([0.4444, 0.196])
w[3] = np.array([0.0953, 0.4344])
model.get_layer('Bat51164').set_weights(w) 
in0Bat51164 = tf.constant([[1.3646, 1.418]])
print (np.array2string(model.predict([in0Bat51164],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Sof68729.png')

LBat51164 = batch_normalization_layer([[1.3646, 1.418]], 1, 0.3472338662650546, [0.3586, 0.7054], [0.9431, 0.7208], [0.4444, 0.196], [0.0953, 0.4344], Bat51164), 
LSof68729 = softmax_layer(Bat51164, 1, Sof68729), 
exec_layers([LBat51164,LSof68729],["Bat51164","Sof68729"],Sof68729,"Sof68729")

Actual (Unparsed): [[0.4361854, 0.5638146]]

Expected (Unparsed): [[0.43618544999405356,0.5638145500059464]]

Actual:   [[0.4362, 0.5639]]

Expected: [[0.4362, 0.5639]]