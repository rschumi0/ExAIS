import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Min1365 = tf.keras.layers.Input(shape=([1, 1]))
in1Min1365 = tf.keras.layers.Input(shape=([1, 1]))

Min1365 = keras.layers.Minimum(name = 'Min1365', )([in0Min1365,in1Min1365])
Res54502 = keras.layers.Reshape((1, 1, 1), name = 'Res54502', )(Min1365)
Res1636 = keras.layers.Reshape((1, 1, 1, 1), name = 'Res1636', )(Res54502)
Glo69273 = keras.layers.GlobalMaxPool3D(name = 'Glo69273', )(Res1636)
Res7853 = keras.layers.Reshape((1, 1), name = 'Res7853', )(Glo69273)
Sim2464 = keras.layers.SimpleRNN(2,name = 'Sim2464', )(Res7853)
model = tf.keras.models.Model(inputs=[in0Min1365,in1Min1365], outputs=Sim2464)
w = model.get_layer('Sim2464').get_weights() 
w[0] = np.array([[9, 6]])
w[1] = np.array([[4, 3], [5, 3]])
w[2] = np.array([8, 6])
model.get_layer('Sim2464').set_weights(w) 
in0Min1365 = tf.constant([[[0.3495]]])
in1Min1365 = tf.constant([[[0.9665]]])
print (np.array2string(model.predict([in0Min1365,in1Min1365],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Sim2464.png')

LMin1365 = minimum_layer([[[[0.3495]]], [[[0.9665]]]], Min1365), 
LRes54502 = reshape_layer(Min1365, [1, 1, 1], Res54502), 
LRes1636 = reshape_layer(Res54502, [1, 1, 1, 1], Res1636), 
LGlo69273 = global_max_pool3D_layer(Res1636, Glo69273), 
LRes7853 = reshape_layer(Glo69273, [1, 1], Res7853), 
LSim2464 = simple_rnn_layer(Res7853,[[9, 6]],[[4, 3], [5, 3]],[8, 6], Sim2464), 
exec_layers([LMin1365,LRes54502,LRes1636,LGlo69273,LRes7853,LSim2464],["Min1365","Res54502","Res1636","Glo69273","Res7853","Sim2464"],Sim2464,"Sim2464")

Actual (Unparsed): [[1.0000000, 0.9999998]]

Expected (Unparsed): [[0.9999999995829658,0.9999998146190449]]

Actual:   [[1, 1]]

Expected: [[1, 1]]