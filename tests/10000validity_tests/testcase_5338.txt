import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Sub83832 = tf.keras.layers.Input(shape=([2, 2, 3, 2]))
in1Sub83832 = tf.keras.layers.Input(shape=([2, 2, 3, 2]))
in0Min18793 = tf.keras.layers.Input(shape=([2, 1]))
in1Min18793 = tf.keras.layers.Input(shape=([2, 1]))
in0Con7341 = tf.keras.layers.Input(shape=([2, 11]))

Sub83832 = keras.layers.Subtract(name = 'Sub83832', )([in0Sub83832,in1Sub83832])
Res26505 = keras.layers.Reshape((2, 2, 6), name = 'Res26505', )(Sub83832)
Res55473 = keras.layers.Reshape((2, 12), name = 'Res55473', )(Res26505)
Min18793 = keras.layers.Minimum(name = 'Min18793', )([in0Min18793,in1Min18793])
Con7341 = keras.layers.Concatenate(axis=2, name = 'Con7341', )([Min18793,in0Con7341])
Mul58962 = keras.layers.Multiply(name = 'Mul58962', )([Res55473,Con7341])
Sof27788 = keras.layers.Softmax(axis=1, name = 'Sof27788', )(Mul58962)
model = tf.keras.models.Model(inputs=[in0Sub83832,in1Sub83832,in0Min18793,in1Min18793,in0Con7341], outputs=Sof27788)
in0Sub83832 = tf.constant([[[[[0.5438, 0.3766], [0.2934, 0.6032], [0.67, 0.0048]], [[0.6257, 0.8647], [0.587, 0.2073], [0.367, 0.1207]]], [[[0.2892, 0.8404], [0.4243, 0.2939], [0.2515, 0.1483]], [[0.0788, 0.7232], [0.4008, 0.7235], [0.9721, 0.2869]]]]])
in1Sub83832 = tf.constant([[[[[0.7145, 0.6572], [0.8848, 0.0907], [0.9547, 0.738]], [[0.9261, 0.9573], [0.8339, 0.1944], [0.7985, 0.4763]]], [[[0.4668, 0.1387], [0.1316, 0.4301], [0.3109, 0.568]], [[0.4893, 0.9993], [0.9224, 0.5036], [0.5467, 0.2657]]]]])
in0Min18793 = tf.constant([[[0.7634], [0.612]]])
in1Min18793 = tf.constant([[[0.1047], [0.1857]]])
in0Con7341 = tf.constant([[[0.8059, 0.9547, 0.707, 0.3331, 0.1071, 0.8776, 0.3585, 0.2908, 0.0239, 0.6127, 0.3296], [0.6866, 0.7618, 0.4473, 0.7905, 0.4903, 0.2756, 0.0688, 0.8082, 0.5409, 0.5374, 0.2938]]])
print (np.array2string(model.predict([in0Sub83832,in1Sub83832,in0Min18793,in1Min18793,in0Con7341],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Sof27788.png')

LSub83832 = subtract_layer([[[[[0.5438, 0.3766], [0.2934, 0.6032], [0.67, 0.0048]], [[0.6257, 0.8647], [0.587, 0.2073], [0.367, 0.1207]]], [[[0.2892, 0.8404], [0.4243, 0.2939], [0.2515, 0.1483]], [[0.0788, 0.7232], [0.4008, 0.7235], [0.9721, 0.2869]]]]], [[[[[0.7145, 0.6572], [0.8848, 0.0907], [0.9547, 0.738]], [[0.9261, 0.9573], [0.8339, 0.1944], [0.7985, 0.4763]]], [[[0.4668, 0.1387], [0.1316, 0.4301], [0.3109, 0.568]], [[0.4893, 0.9993], [0.9224, 0.5036], [0.5467, 0.2657]]]]], Sub83832), 
LRes26505 = reshape_layer(Sub83832, [2, 2, 6], Res26505), 
LRes55473 = reshape_layer(Res26505, [2, 12], Res55473), 
LMin18793 = minimum_layer([[[[0.7634], [0.612]]], [[[0.1047], [0.1857]]]], Min18793), 
LCon7341 = concatenate_layer([Min18793,[[[0.8059, 0.9547, 0.707, 0.3331, 0.1071, 0.8776, 0.3585, 0.2908, 0.0239, 0.6127, 0.3296], [0.6866, 0.7618, 0.4473, 0.7905, 0.4903, 0.2756, 0.0688, 0.8082, 0.5409, 0.5374, 0.2938]]]], 2, Con7341), 
LMul58962 = multiply_layer([Res55473,Con7341], Mul58962), 
LSof27788 = softmax_layer(Mul58962, 1, Sof27788), 
exec_layers([LSub83832,LRes26505,LRes55473,LMin18793,LCon7341,LMul58962,LSof27788],["Sub83832","Res26505","Res55473","Min18793","Con7341","Mul58962","Sof27788"],Sof27788,"Sof27788")

Actual (Unparsed): [[[0.5037769, 0.3300580, 0.3126867, 0.6042630, 0.4880328, 0.5317704, 0.4624465, 0.4964497, 0.5865590, 0.4703758, 0.3791895, 0.4691805], [0.4962231, 0.6699420, 0.6873133, 0.3957370, 0.5119672, 0.4682296, 0.5375535, 0.5035503, 0.4134410, 0.5296242, 0.6208105, 0.5308195]]]

Expected (Unparsed): [[[0.5037769356590005,0.3300579966568798,0.31268671251744634,0.6042630180721139,0.4880328184339882,0.5317704365187031,0.46244654358931875,0.4964497046685273,0.5865590388224128,0.47037583705946223,0.3791894510974013,0.4691805405878653],[0.49622306434099944,0.6699420033431203,0.6873132874825537,0.39573698192788603,0.5119671815660117,0.46822956348129685,0.5375534564106813,0.5035502953314727,0.4134409611775873,0.5296241629405378,0.6208105489025987,0.5308194594121348]]]

Actual:   [[[0.5038, 0.3301, 0.3127, 0.6043, 0.4881, 0.5318, 0.4625, 0.4965, 0.5866, 0.4704, 0.3792, 0.4692], [0.4963, 0.67, 0.6874, 0.3958, 0.512, 0.4683, 0.5376, 0.5036, 0.4135, 0.5297, 0.6209, 0.5309]]]

Expected: [[[0.5038, 0.3301, 0.3127, 0.6043, 0.4881, 0.5318, 0.4625, 0.4965, 0.5866, 0.4704, 0.3792, 0.4692], [0.4963, 0.67, 0.6874, 0.3958, 0.512, 0.4683, 0.5376, 0.5036, 0.4135, 0.5297, 0.6209, 0.5309]]]