import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Loc31571 = tf.keras.layers.Input(shape=([2, 2, 1]))
in0Con98170 = tf.keras.layers.Input(shape=([2, 2, 3, 2]))
in0Per83133 = tf.keras.layers.Input(shape=([1, 2]))
in0Con27526 = tf.keras.layers.Input(shape=([2, 2, 3, 2]))
in0Ave18488 = tf.keras.layers.Input(shape=([2, 1, 2]))
in0Con53855 = tf.keras.layers.Input(shape=([2, 2, 3, 2]))
in0Sub94861 = tf.keras.layers.Input(shape=([2, 2, 3, 3]))
in1Sub94861 = tf.keras.layers.Input(shape=([2, 2, 3, 3]))
in0Max202 = tf.keras.layers.Input(shape=([2, 1, 2, 2]))
in1Max202 = tf.keras.layers.Input(shape=([2, 1, 2, 2]))
in0Up_8499 = tf.keras.layers.Input(shape=([4, 1, 2, 1]))
in0Con79701 = tf.keras.layers.Input(shape=([2, 2]))
in0Con54186 = tf.keras.layers.Input(shape=([2, 14]))

Loc31571 = keras.layers.LocallyConnected2D(2, (2, 1),strides=(1, 1), name = 'Loc31571', )(in0Loc31571)
Res40329 = keras.layers.Reshape((1, 2, 2, 1), name = 'Res40329', )(Loc31571)
Zer39213 = keras.layers.ZeroPadding3D(padding=((1, 0), (0, 0), (1, 0)), name = 'Zer39213', )(Res40329)
Con98170 = keras.layers.Concatenate(axis=4, name = 'Con98170', )([Zer39213,in0Con98170])
Per83133 = keras.layers.Permute((1,2), name = 'Per83133',)(in0Per83133)
Res76495 = keras.layers.Reshape((1, 2, 1), name = 'Res76495', )(Per83133)
Res50195 = keras.layers.Reshape((1, 2, 1, 1), name = 'Res50195', )(Res76495)
Zer25274 = keras.layers.ZeroPadding3D(padding=((1, 0), (0, 0), (2, 0)), name = 'Zer25274', )(Res50195)
Con27526 = keras.layers.Concatenate(axis=4, name = 'Con27526', )([Zer25274,in0Con27526])
Ave18488 = keras.layers.AveragePooling2D(pool_size=(2, 1), name = 'Ave18488', )(in0Ave18488)
Res7263 = keras.layers.Reshape((1, 1, 2, 1), name = 'Res7263', )(Ave18488)
Zer1764 = keras.layers.ZeroPadding3D(padding=((1, 0), (1, 0), (1, 0)), name = 'Zer1764', )(Res7263)
Con53855 = keras.layers.Concatenate(axis=4, name = 'Con53855', )([Zer1764,in0Con53855])
Sub94861 = keras.layers.Subtract(name = 'Sub94861', )([in0Sub94861,in1Sub94861])
Ave35421 = keras.layers.Average(name = 'Ave35421', )([Con53855,Sub94861])
Ave21415 = keras.layers.Average(name = 'Ave21415', )([Con27526,Ave35421])
Max38315 = keras.layers.Maximum(name = 'Max38315', )([Con98170,Ave21415])
Res83916 = keras.layers.Reshape((2, 2, 9), name = 'Res83916', )(Max38315)
Res6135 = keras.layers.Reshape((2, 18), name = 'Res6135', )(Res83916)
Max202 = keras.layers.Maximum(name = 'Max202', )([in0Max202,in1Max202])
Res27227 = keras.layers.Reshape((2, 1, 4), name = 'Res27227', )(Max202)
Res40425 = keras.layers.Reshape((2, 4), name = 'Res40425', )(Res27227)
Up_8499 = keras.layers.UpSampling3D(size=(1, 2, 1), name = 'Up_8499', )(in0Up_8499)
Res35875 = keras.layers.Reshape((4, 2, 2), name = 'Res35875', )(Up_8499)
Res3864 = keras.layers.Reshape((4, 4), name = 'Res3864', )(Res35875)
Loc65649 = keras.layers.LocallyConnected1D(2, (2),strides=(4), name = 'Loc65649', )(Res3864)
Zer36851 = keras.layers.ZeroPadding1D(padding=((1, 0)), name = 'Zer36851', )(Loc65649)
Con79701 = keras.layers.Concatenate(axis=2, name = 'Con79701', )([Zer36851,in0Con79701])
Add91701 = keras.layers.Add(name = 'Add91701', )([Res40425,Con79701])
Con54186 = keras.layers.Concatenate(axis=2, name = 'Con54186', )([Add91701,in0Con54186])
Min25025 = keras.layers.Minimum(name = 'Min25025', )([Res6135,Con54186])
model = tf.keras.models.Model(inputs=[in0Loc31571,in0Con98170,in0Per83133,in0Con27526,in0Ave18488,in0Con53855,in0Sub94861,in1Sub94861,in0Max202,in1Max202,in0Up_8499,in0Con79701,in0Con54186], outputs=Min25025)
w = model.get_layer('Loc31571').get_weights() 
w[0] = np.array([[[0.8297, 0.5387], [0.9463, 0.7727]], [[0.219, 0.1287], [0.1085, 0.0778]]])
w[1] = np.array([[[0, 0], [0, 0]]])
model.get_layer('Loc31571').set_weights(w) 
w = model.get_layer('Loc65649').get_weights() 
w[0] = np.array([[[0.9062, 0.1993], [0.0905, 0.2522], [0.1745, 0.6408], [0.7833, 0.9364], [0.1894, 0.704], [0.5611, 0.2146], [0.7363, 0.6962], [0.5458, 0.0876]]])
w[1] = np.array([[0, 0]])
model.get_layer('Loc65649').set_weights(w) 
in0Loc31571 = tf.constant([[[[0.7691], [0.798]], [[0.2983], [0.4253]]]])
in0Con98170 = tf.constant([[[[[0.4324, 0.3614], [0.2839, 0.7334], [0.7749, 0.9199]], [[0.9185, 0.4707], [0.8279, 0.9301], [0.7761, 0.41]]], [[[0.795, 0.8958], [0.9514, 0.3733], [0.1944, 0.8505]], [[0.3609, 0.0195], [0.5512, 0.0828], [0.558, 0.0871]]]]])
in0Per83133 = tf.constant([[[1.3576, 1.6224]]])
in0Con27526 = tf.constant([[[[[0.9714, 0.0635], [0.8833, 0.7682], [0.7388, 0.1469]], [[0.6642, 0.2974], [0.945, 0.5488], [0.1481, 0.2165]]], [[[0.4921, 0.8424], [0.4221, 0.9904], [0.7684, 0.1967]], [[0.1826, 0.7911], [0.7998, 0.4128], [0.3153, 0.6111]]]]])
in0Ave18488 = tf.constant([[[[1.49, 1.7317]], [[1.6677, 1.119]]]])
in0Con53855 = tf.constant([[[[[0.488, 0.7389], [0.5974, 0.5547], [0.6516, 0.8296]], [[0.0955, 0.6453], [0.5706, 0.4297], [0.4416, 0.7661]]], [[[0.7138, 0.4117], [0.9388, 0.7345], [0.8823, 0.9272]], [[0.997, 0.5533], [0.4306, 0.6827], [0.819, 0.7519]]]]])
in0Sub94861 = tf.constant([[[[[0.3993, 0.1488, 0.1819], [0.9121, 0.3997, 0.5423], [0.6998, 0.9233, 0.0302]], [[0.1546, 0.1186, 0.2658], [0.7715, 0.8112, 0.0895], [0.253, 0.5073, 0.5533]]], [[[0.494, 0.4411, 0.1624], [0.1316, 0.8824, 0.3212], [0.032, 0.451, 0.1091]], [[0.1366, 0.7396, 0.3644], [0.4091, 0.3119, 0.5968], [0.1797, 0.0692, 0.1497]]]]])
in1Sub94861 = tf.constant([[[[[0.3765, 0.8671, 0.6646], [0.7762, 0.1572, 0.231], [0.5557, 0.7981, 0.9455]], [[0.2468, 0.97, 0.7712], [0.2462, 0.3508, 0.5293], [0.3745, 0.6092, 0.7233]]], [[[0.5266, 0.1351, 0.4554], [0.5024, 0.6021, 0.6535], [0.1609, 0.4315, 0.728]], [[0.5437, 0.4596, 0.6541], [0.5672, 0.7208, 0.7153], [0.2459, 0.3424, 0.2422]]]]])
in0Max202 = tf.constant([[[[[0.5106, 0.599], [0.3246, 0.6439]]], [[[0.2989, 0.9602], [0.9284, 0.5969]]]]])
in1Max202 = tf.constant([[[[[0.5762, 0.2642], [0.1907, 0.7543]]], [[[0.1433, 0.9023], [0.0981, 0.8624]]]]])
in0Up_8499 = tf.constant([[[[[1.5486], [1.2157]]], [[[1.8305], [1.5597]]], [[[1.7292], [1.3186]]], [[[1.4903], [1.8073]]]]])
in0Con79701 = tf.constant([[[0.0362, 0.9528], [0.3533, 0.1958]]])
in0Con54186 = tf.constant([[[0.6278, 0.4952, 0.8178, 0.9493, 0.9483, 0.4133, 0.0762, 0.065, 0.924, 0.7835, 0.3857, 0.0304, 0.6019, 0.4443], [0.1017, 0.5589, 0.4007, 0.22, 0.0123, 0.2514, 0.4886, 0.8034, 0.6588, 0.6826, 0.1323, 0.1856, 0.7083, 0.4118]]])
print (np.array2string(model.predict([in0Loc31571,in0Con98170,in0Per83133,in0Con27526,in0Ave18488,in0Con53855,in0Sub94861,in1Sub94861,in0Max202,in1Max202,in0Up_8499,in0Con79701,in0Con54186],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Min25025.png')

LLoc31571 = locally_connected2D_layer([[[[0.7691], [0.798]], [[0.2983], [0.4253]]]], 2, 1,[[[0.8297, 0.5387], [0.9463, 0.7727]], [[0.219, 0.1287], [0.1085, 0.0778]]],[[[0, 0], [0, 0]]], 1, 1, Loc31571), 
LRes40329 = reshape_layer(Loc31571, [1, 2, 2, 1], Res40329), 
LZer39213 = zero_padding3D_layer(Res40329, 1, 0, 0, 0, 1, 0, Zer39213), 
LCon98170 = concatenate_layer([Zer39213,[[[[[0.4324, 0.3614], [0.2839, 0.7334], [0.7749, 0.9199]], [[0.9185, 0.4707], [0.8279, 0.9301], [0.7761, 0.41]]], [[[0.795, 0.8958], [0.9514, 0.3733], [0.1944, 0.8505]], [[0.3609, 0.0195], [0.5512, 0.0828], [0.558, 0.0871]]]]]], 4, Con98170), 
LPer83133 = permute_layer([[[1.3576, 1.6224]]], 1,2, Per83133), 
LRes76495 = reshape_layer(Per83133, [1, 2, 1], Res76495), 
LRes50195 = reshape_layer(Res76495, [1, 2, 1, 1], Res50195), 
LZer25274 = zero_padding3D_layer(Res50195, 1, 0, 0, 0, 2, 0, Zer25274), 
LCon27526 = concatenate_layer([Zer25274,[[[[[0.9714, 0.0635], [0.8833, 0.7682], [0.7388, 0.1469]], [[0.6642, 0.2974], [0.945, 0.5488], [0.1481, 0.2165]]], [[[0.4921, 0.8424], [0.4221, 0.9904], [0.7684, 0.1967]], [[0.1826, 0.7911], [0.7998, 0.4128], [0.3153, 0.6111]]]]]], 4, Con27526), 
LAve18488 = average_pooling2D_layer([[[[1.49, 1.7317]], [[1.6677, 1.119]]]], 2, 1, Ave18488), 
LRes7263 = reshape_layer(Ave18488, [1, 1, 2, 1], Res7263), 
LZer1764 = zero_padding3D_layer(Res7263, 1, 0, 1, 0, 1, 0, Zer1764), 
LCon53855 = concatenate_layer([Zer1764,[[[[[0.488, 0.7389], [0.5974, 0.5547], [0.6516, 0.8296]], [[0.0955, 0.6453], [0.5706, 0.4297], [0.4416, 0.7661]]], [[[0.7138, 0.4117], [0.9388, 0.7345], [0.8823, 0.9272]], [[0.997, 0.5533], [0.4306, 0.6827], [0.819, 0.7519]]]]]], 4, Con53855), 
LSub94861 = subtract_layer([[[[[0.3993, 0.1488, 0.1819], [0.9121, 0.3997, 0.5423], [0.6998, 0.9233, 0.0302]], [[0.1546, 0.1186, 0.2658], [0.7715, 0.8112, 0.0895], [0.253, 0.5073, 0.5533]]], [[[0.494, 0.4411, 0.1624], [0.1316, 0.8824, 0.3212], [0.032, 0.451, 0.1091]], [[0.1366, 0.7396, 0.3644], [0.4091, 0.3119, 0.5968], [0.1797, 0.0692, 0.1497]]]]], [[[[[0.3765, 0.8671, 0.6646], [0.7762, 0.1572, 0.231], [0.5557, 0.7981, 0.9455]], [[0.2468, 0.97, 0.7712], [0.2462, 0.3508, 0.5293], [0.3745, 0.6092, 0.7233]]], [[[0.5266, 0.1351, 0.4554], [0.5024, 0.6021, 0.6535], [0.1609, 0.4315, 0.728]], [[0.5437, 0.4596, 0.6541], [0.5672, 0.7208, 0.7153], [0.2459, 0.3424, 0.2422]]]]], Sub94861), 
LAve35421 = average_layer([Con53855,Sub94861], Ave35421), 
LAve21415 = average_layer([Con27526,Ave35421], Ave21415), 
LMax38315 = maximum_layer([Con98170,Ave21415], Max38315), 
LRes83916 = reshape_layer(Max38315, [2, 2, 9], Res83916), 
LRes6135 = reshape_layer(Res83916, [2, 18], Res6135), 
LMax202 = maximum_layer([[[[[[0.5106, 0.599], [0.3246, 0.6439]]], [[[0.2989, 0.9602], [0.9284, 0.5969]]]]], [[[[[0.5762, 0.2642], [0.1907, 0.7543]]], [[[0.1433, 0.9023], [0.0981, 0.8624]]]]]], Max202), 
LRes27227 = reshape_layer(Max202, [2, 1, 4], Res27227), 
LRes40425 = reshape_layer(Res27227, [2, 4], Res40425), 
LUp_8499 = up_sampling3D_layer([[[[[1.5486], [1.2157]]], [[[1.8305], [1.5597]]], [[[1.7292], [1.3186]]], [[[1.4903], [1.8073]]]]], 1, 2, 1, Up_8499), 
LRes35875 = reshape_layer(Up_8499, [4, 2, 2], Res35875), 
LRes3864 = reshape_layer(Res35875, [4, 4], Res3864), 
LLoc65649 = locally_connected1D_layer(Res3864, 2,[[[0.9062, 0.1993], [0.0905, 0.2522], [0.1745, 0.6408], [0.7833, 0.9364], [0.1894, 0.704], [0.5611, 0.2146], [0.7363, 0.6962], [0.5458, 0.0876]]],[[0, 0]], 4, Loc65649), 
LZer36851 = zero_padding1D_layer(Loc65649, 1, 0, Zer36851), 
LCon79701 = concatenate_layer([Zer36851,[[[0.0362, 0.9528], [0.3533, 0.1958]]]], 2, Con79701), 
LAdd91701 = add_layer([Res40425,Con79701], Add91701), 
LCon54186 = concatenate_layer([Add91701,[[[0.6278, 0.4952, 0.8178, 0.9493, 0.9483, 0.4133, 0.0762, 0.065, 0.924, 0.7835, 0.3857, 0.0304, 0.6019, 0.4443], [0.1017, 0.5589, 0.4007, 0.22, 0.0123, 0.2514, 0.4886, 0.8034, 0.6588, 0.6826, 0.1323, 0.1856, 0.7083, 0.4118]]]], 2, Con54186), 
LMin25025 = minimum_layer([Res6135,Con54186], Min25025), 
exec_layers([LLoc31571,LRes40329,LZer39213,LCon98170,LPer83133,LRes76495,LRes50195,LZer25274,LCon27526,LAve18488,LRes7263,LZer1764,LCon53855,LSub94861,LAve35421,LAve21415,LMax38315,LRes83916,LRes6135,LMax202,LRes27227,LRes40425,LUp_8499,LRes35875,LRes3864,LLoc65649,LZer36851,LCon79701,LAdd91701,LCon54186,LMin25025],["Loc31571","Res40329","Zer39213","Con98170","Per83133","Res76495","Res50195","Zer25274","Con27526","Ave18488","Res7263","Zer1764","Con53855","Sub94861","Ave35421","Ave21415","Max38315","Res83916","Res6135","Max202","Res27227","Res40425","Up_8499","Res35875","Res3864","Loc65649","Zer36851","Con79701","Add91701","Con54186","Min25025"],Min25025,"Min25025")

Actual (Unparsed): [[[0.0057000, 0.4324000, 0.3608000, 0.0339750, 0.6278000, 0.4952000, 0.0360250, 0.7749000, 0.9199000, 0.0000000, 0.0762000, 0.0650000, 0.1313250, 0.7835000, 0.3857000, 0.0000000, 0.6019000, 0.4100000], [0.0000000, 0.7950000, 0.8958000, 0.9204036, 0.1017000, 0.5589000, 0.4007000, 0.2200000, 0.0123000, 0.0000000, 0.4105500, 0.4614500, 0.3551875, 0.5512000, 0.1323000, 0.1856000, 0.5580000, 0.4118000]]]

Expected (Unparsed): [[[0.005699999999999997,0.4324,0.3608,0.033975000000000005,0.6278,0.4952,0.036025,0.7749,0.9199,0,0.0762,0.065,0.131325,0.7835,0.3857,0,0.6019,0.41],[0,0.795,0.8958,0.92040356,0.1017,0.5589,0.4007,0.22,0.0123,0,0.41055,0.46145,0.3551875,0.5512,0.1323,0.1856,0.558,0.4118]]]

Actual:   [[[0.0057, 0.4324, 0.3608, 0.034, 0.6278, 0.4952, 0.0361, 0.7749, 0.9199, 0, 0.0762, 0.065, 0.1314, 0.7835, 0.3857, 0, 0.6019, 0.41], [0, 0.795, 0.8958, 0.9205, 0.1017, 0.5589, 0.4007, 0.22, 0.0123, 0, 0.4106, 0.4615, 0.3552, 0.5512, 0.1323, 0.1856, 0.558, 0.4118]]]

Expected: [[[0.0057, 0.4324, 0.3608, 0.034, 0.6278, 0.4952, 0.0361, 0.7749, 0.9199, 0, 0.0762, 0.065, 0.1314, 0.7835, 0.3857, 0, 0.6019, 0.41], [0, 0.795, 0.8958, 0.9205, 0.1017, 0.5589, 0.4007, 0.22, 0.0123, 0, 0.4106, 0.4615, 0.3552, 0.5512, 0.1323, 0.1856, 0.558, 0.4118]]]