import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Mul35784 = tf.keras.layers.Input(shape=([1, 2, 1]))
in1Mul35784 = tf.keras.layers.Input(shape=([1, 2, 1]))

Mul35784 = keras.layers.Multiply(name = 'Mul35784', )([in0Mul35784,in1Mul35784])
Max86961 = keras.layers.MaxPool2D(pool_size=(1, 1), strides=(1, 1), padding='valid', name = 'Max86961', )(Mul35784)
Lea10238 = keras.layers.LeakyReLU(alpha=8.347301068644432, name = 'Lea10238', )(Max86961)
model = tf.keras.models.Model(inputs=[in0Mul35784,in1Mul35784], outputs=Lea10238)
in0Mul35784 = tf.constant([[[[0.9025], [0.395]]]])
in1Mul35784 = tf.constant([[[[0.4417], [0.9066]]]])
print (np.array2string(model.predict([in0Mul35784,in1Mul35784],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Lea10238.png')

LMul35784 = multiply_layer([[[[[0.9025], [0.395]]]], [[[[0.4417], [0.9066]]]]], Mul35784), 
LMax86961 = max_pool2D_layer(Mul35784, 1, 1, 1, 1, false, Max86961), 
LLea10238 = leaky_relu_layer(Max86961, 8.347301068644432, Lea10238), 
exec_layers([LMul35784,LMax86961,LLea10238],["Mul35784","Max86961","Lea10238"],Lea10238,"Lea10238")

Actual (Unparsed): [[[[0.3986342], [0.3581070]]]]

Expected (Unparsed): [[[[0.39863424999999997],[0.358107]]]]

Actual:   [[[[0.3987], [0.3582]]]]

Expected: [[[[0.3987], [0.3582]]]]