import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Mul70739 = tf.keras.layers.Input(shape=([1, 1]))
in1Mul70739 = tf.keras.layers.Input(shape=([1, 1]))

Mul70739 = keras.layers.Multiply(name = 'Mul70739', )([in0Mul70739,in1Mul70739])
Zer58131 = keras.layers.ZeroPadding1D(padding=((1, 1)), name = 'Zer58131', )(Mul70739)
model = tf.keras.models.Model(inputs=[in0Mul70739,in1Mul70739], outputs=Zer58131)
in0Mul70739 = tf.constant([[[0.5834]]])
in1Mul70739 = tf.constant([[[0.4769]]])
print (np.array2string(model.predict([in0Mul70739,in1Mul70739],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Zer58131.png')

LMul70739 = multiply_layer([[[[0.5834]]], [[[0.4769]]]], Mul70739), 
LZer58131 = zero_padding1D_layer(Mul70739, 1, 1, Zer58131), 
exec_layers([LMul70739,LZer58131],["Mul70739","Zer58131"],Zer58131,"Zer58131")

Actual (Unparsed): [[[0.0000000], [0.2782235], [0.0000000]]]

Expected (Unparsed): [[[0],[0.27822346000000003],[0]]]

Actual:   [[[0], [0.2783], [0]]]

Expected: [[[0], [0.2783], [0]]]