import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Max62442 = tf.keras.layers.Input(shape=([1, 1, 2, 2]))
in1Max62442 = tf.keras.layers.Input(shape=([1, 1, 2, 2]))
in0Con51580 = tf.keras.layers.Input(shape=([2, 6, 2]))
in0Up_9102 = tf.keras.layers.Input(shape=([1, 2, 2]))
in0Mul8845 = tf.keras.layers.Input(shape=([2, 2, 1, 1]))
in1Mul8845 = tf.keras.layers.Input(shape=([2, 2, 1, 1]))
in0Sub33458 = tf.keras.layers.Input(shape=([2, 2, 2]))
in1Sub33458 = tf.keras.layers.Input(shape=([2, 2, 2]))
in0Con33579 = tf.keras.layers.Input(shape=([2, 6, 1]))

Max62442 = keras.layers.Maximum(name = 'Max62442', )([in0Max62442,in1Max62442])
Res89628 = keras.layers.Reshape((1, 1, 4), name = 'Res89628', )(Max62442)
Res68764 = keras.layers.Reshape((1, 4), name = 'Res68764', )(Res89628)
Sim17139 = keras.layers.SimpleRNN(1,name = 'Sim17139', )(Res68764)
Res63096 = keras.layers.Reshape((1, 1), name = 'Res63096', )(Sim17139)
Res98501 = keras.layers.Reshape((1, 1, 1), name = 'Res98501', )(Res63096)
Zer98197 = keras.layers.ZeroPadding2D(padding=((1, 0), (5, 0)), name = 'Zer98197', )(Res98501)
Con51580 = keras.layers.Concatenate(axis=3, name = 'Con51580', )([Zer98197,in0Con51580])
Up_9102 = keras.layers.UpSampling2D(size=(1, 2), name = 'Up_9102', )(in0Up_9102)
Res26438 = keras.layers.Reshape((1, 4, 2, 1), name = 'Res26438', )(Up_9102)
Zer44249 = keras.layers.ZeroPadding3D(padding=((1, 0), (2, 0), (1, 0)), name = 'Zer44249', )(Res26438)
Mul8845 = keras.layers.Multiply(name = 'Mul8845', )([in0Mul8845,in1Mul8845])
Lea4439 = keras.layers.LeakyReLU(alpha=9.686676426386276, name = 'Lea4439', )(Mul8845)
Zer92094 = keras.layers.ZeroPadding3D(padding=((0, 0), (4, 0), (2, 0)), name = 'Zer92094', )(Lea4439)
Max19530 = keras.layers.Maximum(name = 'Max19530', )([Zer44249,Zer92094])
Res84093 = keras.layers.Reshape((2, 6, 3), name = 'Res84093', )(Max19530)
Sub33458 = keras.layers.Subtract(name = 'Sub33458', )([in0Sub33458,in1Sub33458])
Zer3050 = keras.layers.ZeroPadding2D(padding=((0, 0), (4, 0)), name = 'Zer3050', )(Sub33458)
Con33579 = keras.layers.Concatenate(axis=3, name = 'Con33579', )([Zer3050,in0Con33579])
Max715 = keras.layers.Maximum(name = 'Max715', )([Res84093,Con33579])
Max32834 = keras.layers.Maximum(name = 'Max32834', )([Con51580,Max715])
model = tf.keras.models.Model(inputs=[in0Max62442,in1Max62442,in0Con51580,in0Up_9102,in0Mul8845,in1Mul8845,in0Sub33458,in1Sub33458,in0Con33579], outputs=Max32834)
w = model.get_layer('Sim17139').get_weights() 
w[0] = np.array([[4], [10], [5], [8]])
w[1] = np.array([[10]])
w[2] = np.array([2])
model.get_layer('Sim17139').set_weights(w) 
in0Max62442 = tf.constant([[[[[0.8735, 0.0988], [0.6739, 0.4597]]]]])
in1Max62442 = tf.constant([[[[[0.7001, 0.8225], [0.0194, 0.3075]]]]])
in0Con51580 = tf.constant([[[[0.1344, 0.2473], [0.4696, 0.9682], [0.5077, 0.4608], [0.8905, 0.8052], [0.7921, 0.0567], [0.09, 0.3735]], [[0.0056, 0.2986], [0.5604, 0.0618], [0.3105, 0.8919], [0.8547, 0.4853], [0.3164, 0.1608], [0.0319, 0.5082]]]])
in0Up_9102 = tf.constant([[[[1.1631, 1.2191], [1.1874, 1.8614]]]])
in0Mul8845 = tf.constant([[[[[0.3614]], [[0.4242]]], [[[0.7482]], [[0.205]]]]])
in1Mul8845 = tf.constant([[[[[0.0361]], [[0.4853]]], [[[0.6151]], [[0.4473]]]]])
in0Sub33458 = tf.constant([[[[0.2183, 0.3157], [0.3433, 0.5642]], [[0.0469, 0.2881], [0.7338, 0.3736]]]])
in1Sub33458 = tf.constant([[[[0.9368, 0.6714], [0.2479, 0.189]], [[0.9991, 0.1837], [0.7234, 0.6613]]]])
in0Con33579 = tf.constant([[[[0.0412], [0.79], [0.8045], [0.5335], [0.0329], [0.5635]], [[0.5987], [0.6135], [0.4028], [0.6915], [0.8833], [0.1315]]]])
print (np.array2string(model.predict([in0Max62442,in1Max62442,in0Con51580,in0Up_9102,in0Mul8845,in1Mul8845,in0Sub33458,in1Sub33458,in0Con33579],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Max32834.png')

LMax62442 = maximum_layer([[[[[[0.8735, 0.0988], [0.6739, 0.4597]]]]], [[[[[0.7001, 0.8225], [0.0194, 0.3075]]]]]], Max62442), 
LRes89628 = reshape_layer(Max62442, [1, 1, 4], Res89628), 
LRes68764 = reshape_layer(Res89628, [1, 4], Res68764), 
LSim17139 = simple_rnn_layer(Res68764,[[4], [10], [5], [8]],[[10]],[2], Sim17139), 
LRes63096 = reshape_layer(Sim17139, [1, 1], Res63096), 
LRes98501 = reshape_layer(Res63096, [1, 1, 1], Res98501), 
LZer98197 = zero_padding2D_layer(Res98501, 1, 0, 5, 0, Zer98197), 
LCon51580 = concatenate_layer([Zer98197,[[[[0.1344, 0.2473], [0.4696, 0.9682], [0.5077, 0.4608], [0.8905, 0.8052], [0.7921, 0.0567], [0.09, 0.3735]], [[0.0056, 0.2986], [0.5604, 0.0618], [0.3105, 0.8919], [0.8547, 0.4853], [0.3164, 0.1608], [0.0319, 0.5082]]]]], 3, Con51580), 
LUp_9102 = up_sampling2D_layer([[[[1.1631, 1.2191], [1.1874, 1.8614]]]], 1, 2, Up_9102), 
LRes26438 = reshape_layer(Up_9102, [1, 4, 2, 1], Res26438), 
LZer44249 = zero_padding3D_layer(Res26438, 1, 0, 2, 0, 1, 0, Zer44249), 
LMul8845 = multiply_layer([[[[[[0.3614]], [[0.4242]]], [[[0.7482]], [[0.205]]]]], [[[[[0.0361]], [[0.4853]]], [[[0.6151]], [[0.4473]]]]]], Mul8845), 
LLea4439 = leaky_relu_layer(Mul8845, 9.686676426386276, Lea4439), 
LZer92094 = zero_padding3D_layer(Lea4439, 0, 0, 4, 0, 2, 0, Zer92094), 
LMax19530 = maximum_layer([Zer44249,Zer92094], Max19530), 
LRes84093 = reshape_layer(Max19530, [2, 6, 3], Res84093), 
LSub33458 = subtract_layer([[[[0.2183, 0.3157], [0.3433, 0.5642]], [[0.0469, 0.2881], [0.7338, 0.3736]]]], [[[[0.9368, 0.6714], [0.2479, 0.189]], [[0.9991, 0.1837], [0.7234, 0.6613]]]], Sub33458), 
LZer3050 = zero_padding2D_layer(Sub33458, 0, 0, 4, 0, Zer3050), 
LCon33579 = concatenate_layer([Zer3050,[[[[0.0412], [0.79], [0.8045], [0.5335], [0.0329], [0.5635]], [[0.5987], [0.6135], [0.4028], [0.6915], [0.8833], [0.1315]]]]], 3, Con33579), 
LMax715 = maximum_layer([Res84093,Con33579], Max715), 
LMax32834 = maximum_layer([Con51580,Max715], Max32834), 
exec_layers([LMax62442,LRes89628,LRes68764,LSim17139,LRes63096,LRes98501,LZer98197,LCon51580,LUp_9102,LRes26438,LZer44249,LMul8845,LLea4439,LZer92094,LMax19530,LRes84093,LSub33458,LZer3050,LCon33579,LMax715,LMax32834],["Max62442","Res89628","Res68764","Sim17139","Res63096","Res98501","Zer98197","Con51580","Up_9102","Res26438","Zer44249","Mul8845","Lea4439","Zer92094","Max19530","Res84093","Sub33458","Zer3050","Con33579","Max715","Max32834"],Max32834,"Max32834")

Actual (Unparsed): [[[[0.0000000, 0.1344000, 0.2473000], [0.0000000, 0.4696000, 0.9682000], [0.0000000, 0.5077000, 0.8045000], [0.0000000, 0.8905000, 0.8052000], [0.0000000, 0.7921000, 0.0567000], [0.0954000, 0.3752000, 0.5635000]], [[0.0000000, 0.0056000, 0.5987000], [0.0000000, 0.5604000, 0.6135000], [0.0000000, 1.1631000, 1.2191000], [0.0000000, 1.1631000, 1.2191000], [0.0000000, 1.1874000, 1.8614000], [1.0000000, 1.1874000, 1.8614000]]]]

Expected (Unparsed): [[[[0,0.1344,0.2473],[0,0.4696,0.9682],[0,0.5077,0.8045],[0,0.8905,0.8052],[0,0.7921,0.0567],[0.09539999999999998,0.37520000000000003,0.5635]],[[0,0.0056,0.5987],[0,0.5604,0.6135],[0,1.1631,1.2191],[0,1.1631,1.2191],[0,1.1874,1.8614],[1.0,1.1874,1.8614]]]]

Actual:   [[[[0, 0.1344, 0.2473], [0, 0.4696, 0.9682], [0, 0.5077, 0.8045], [0, 0.8905, 0.8052], [0, 0.7921, 0.0567], [0.0954, 0.3752, 0.5635]], [[0, 0.0056, 0.5987], [0, 0.5604, 0.6135], [0, 1.1631, 1.2191], [0, 1.1631, 1.2191], [0, 1.1874, 1.8614], [1, 1.1874, 1.8614]]]]

Expected: [[[[0, 0.1344, 0.2473], [0, 0.4696, 0.9682], [0, 0.5077, 0.8045], [0, 0.8905, 0.8052], [0, 0.7921, 0.0567], [0.0954, 0.3753, 0.5635]], [[0, 0.0056, 0.5987], [0, 0.5604, 0.6135], [0, 1.1631, 1.2191], [0, 1.1631, 1.2191], [0, 1.1874, 1.8614], [1, 1.1874, 1.8614]]]]