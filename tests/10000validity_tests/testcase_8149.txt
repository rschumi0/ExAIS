import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0LST53400 = tf.keras.layers.Input(shape=([2, 3]))
in0Mul41798 = tf.keras.layers.Input(shape=([1, 1]))
in1Mul41798 = tf.keras.layers.Input(shape=([1, 1]))
in0Con74062 = tf.keras.layers.Input(shape=([7]))
in0Up_66997 = tf.keras.layers.Input(shape=([3, 2, 2]))

LST53400 = keras.layers.LSTM(2,recurrent_activation='sigmoid', name = 'LST53400', )(in0LST53400)
Res34083 = keras.layers.Reshape((2, 1), name = 'Res34083', )(LST53400)
Mul41798 = keras.layers.Multiply(name = 'Mul41798', )([in0Mul41798,in1Mul41798])
Zer96302 = keras.layers.ZeroPadding1D(padding=((1, 0)), name = 'Zer96302', )(Mul41798)
Min33664 = keras.layers.Minimum(name = 'Min33664', )([Res34083,Zer96302])
Res43479 = keras.layers.Reshape((2, 1, 1), name = 'Res43479', )(Min33664)
Glo74284 = keras.layers.GlobalMaxPool2D(name = 'Glo74284', )(Res43479)
Con74062 = keras.layers.Concatenate(axis=1, name = 'Con74062', )([Glo74284,in0Con74062])
Up_66997 = keras.layers.UpSampling2D(size=(2, 2), name = 'Up_66997', )(in0Up_66997)
Res88114 = keras.layers.Reshape((6, 8), name = 'Res88114', )(Up_66997)
Glo41178 = keras.layers.GlobalAveragePooling1D(name = 'Glo41178', )(Res88114)
Bat24162 = keras.layers.BatchNormalization(axis=1, epsilon=0.20372511806826332,  name = 'Bat24162', )(Glo41178)
Ave36189 = keras.layers.Average(name = 'Ave36189', )([Con74062,Bat24162])
model = tf.keras.models.Model(inputs=[in0LST53400,in0Mul41798,in1Mul41798,in0Con74062,in0Up_66997], outputs=Ave36189)
w = model.get_layer('LST53400').get_weights() 
w[0] = np.array([[2, 10, 4, 2, 1, 3, 4, 8], [1, 3, 1, 9, 1, 3, 3, 6], [1, 4, 7, 8, 6, 10, 10, 5]])
w[1] = np.array([[9, 5, 6, 8, 9, 7, 9, 7], [8, 10, 5, 6, 10, 1, 8, 9]])
w[2] = np.array([4, 10, 3, 1, 5, 1, 4, 7])
model.get_layer('LST53400').set_weights(w) 
w = model.get_layer('Bat24162').get_weights() 
w[0] = np.array([0.3224, 0.5171, 0.8524, 0.6559, 0.7599, 0.2391, 0.4613, 0.456])
w[1] = np.array([0.8322, 0.6175, 0.3751, 0.2971, 0.3532, 0.6809, 0.8923, 0.5119])
w[2] = np.array([0.3359, 0.7635, 0.2247, 0.3107, 0.9769, 0.544, 0.4574, 0.2963])
w[3] = np.array([0.1153, 0.1952, 0.6824, 0.7337, 0.6932, 0.9254, 0.3971, 0.4268])
model.get_layer('Bat24162').set_weights(w) 
in0LST53400 = tf.constant([[[9, 9, 6], [4, 2, 4]]])
in0Mul41798 = tf.constant([[[0.9308]]])
in1Mul41798 = tf.constant([[[0.2187]]])
in0Con74062 = tf.constant([[0.9117, 0.7113, 0.4617, 0.9316, 0.1601, 0.8649, 0.3005]])
in0Up_66997 = tf.constant([[[[1.4814, 1.1116], [1.9099, 1.3475]], [[1.3114, 1.7843], [1.722, 1.8753]], [[1.0417, 1.1801], [1.5075, 1.6033]]]])
print (np.array2string(model.predict([in0LST53400,in0Mul41798,in1Mul41798,in0Con74062,in0Up_66997],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Ave36189.png')

LLST53400 = lstm_layer([[[9, 9, 6], [4, 2, 4]]],[[2, 10, 4, 2, 1, 3, 4, 8], [1, 3, 1, 9, 1, 3, 3, 6], [1, 4, 7, 8, 6, 10, 10, 5]],[[9, 5, 6, 8, 9, 7, 9, 7], [8, 10, 5, 6, 10, 1, 8, 9]],[4, 10, 3, 1, 5, 1, 4, 7], LST53400), 
LRes34083 = reshape_layer(LST53400, [2, 1], Res34083), 
LMul41798 = multiply_layer([[[[0.9308]]], [[[0.2187]]]], Mul41798), 
LZer96302 = zero_padding1D_layer(Mul41798, 1, 0, Zer96302), 
LMin33664 = minimum_layer([Res34083,Zer96302], Min33664), 
LRes43479 = reshape_layer(Min33664, [2, 1, 1], Res43479), 
LGlo74284 = global_max_pool2D_layer(Res43479, Glo74284), 
LCon74062 = concatenate_layer([Glo74284,[[0.9117, 0.7113, 0.4617, 0.9316, 0.1601, 0.8649, 0.3005]]], 1, Con74062), 
LUp_66997 = up_sampling2D_layer([[[[1.4814, 1.1116], [1.9099, 1.3475]], [[1.3114, 1.7843], [1.722, 1.8753]], [[1.0417, 1.1801], [1.5075, 1.6033]]]], 2, 2, Up_66997), 
LRes88114 = reshape_layer(Up_66997, [6, 8], Res88114), 
LGlo41178 = global_average_pooling1D_layer(Res88114, Glo41178), 
LBat24162 = batch_normalization_layer(Glo41178, 1, 0.20372511806826332, [0.3224, 0.5171, 0.8524, 0.6559, 0.7599, 0.2391, 0.4613, 0.456], [0.8322, 0.6175, 0.3751, 0.2971, 0.3532, 0.6809, 0.8923, 0.5119], [0.3359, 0.7635, 0.2247, 0.3107, 0.9769, 0.544, 0.4574, 0.2963], [0.1153, 0.1952, 0.6824, 0.7337, 0.6932, 0.9254, 0.3971, 0.4268], Bat24162), 
LAve36189 = average_layer([Con74062,Bat24162], Ave36189), 
exec_layers([LLST53400,LRes34083,LMul41798,LZer96302,LMin33664,LRes43479,LGlo74284,LCon74062,LUp_66997,LRes88114,LGlo41178,LBat24162,LAve36189],["LST53400","Res34083","Mul41798","Zer96302","Min33664","Res43479","Glo74284","Con74062","Up_66997","Res88114","Glo41178","Bat24162","Ave36189"],Ave36189,"Ave36189")

Actual (Unparsed): [[0.7868051, 1.0082338, 1.0201652, 0.7343660, 0.9377683, 0.5402859, 1.2522602, 0.7830338]]

Expected (Unparsed): [[0.786805038126254,1.008233750499266,1.0201652292826604,0.7343660445376685,0.9377682650864152,0.5402859275653021,1.2522601995728124,0.7830338198363068]]

Actual:   [[0.7869, 1.0083, 1.0202, 0.7344, 0.9378, 0.5403, 1.2523, 0.7831]]

Expected: [[0.7869, 1.0083, 1.0202, 0.7344, 0.9378, 0.5403, 1.2523, 0.7831]]