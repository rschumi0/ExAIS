import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Sub4296 = tf.keras.layers.Input(shape=([3, 3, 2]))
in1Sub4296 = tf.keras.layers.Input(shape=([3, 3, 2]))
in0Con30836 = tf.keras.layers.Input(shape=([3, 4, 1]))
in0Mul64123 = tf.keras.layers.Input(shape=([2, 2]))
in1Mul64123 = tf.keras.layers.Input(shape=([2, 2]))
in0Con44018 = tf.keras.layers.Input(shape=([2, 1]))
in0Sep40097 = tf.keras.layers.Input(shape=([2, 2]))

Sub4296 = keras.layers.Subtract(name = 'Sub4296', )([in0Sub4296,in1Sub4296])
Max61748 = keras.layers.MaxPool2D(pool_size=(1, 1), name = 'Max61748', )(Sub4296)
Sep50055 = keras.layers.SeparableConv2D(3, (1, 2),strides=(1, 1), padding='valid', name = 'Sep50055', )(Max61748)
Zer33881 = keras.layers.ZeroPadding2D(padding=((0, 0), (2, 0)), name = 'Zer33881', )(Sep50055)
Con30836 = keras.layers.Concatenate(axis=3, name = 'Con30836', )([Zer33881,in0Con30836])
Mul64123 = keras.layers.Multiply(name = 'Mul64123', )([in0Mul64123,in1Mul64123])
Con44018 = keras.layers.Concatenate(axis=2, name = 'Con44018', )([Mul64123,in0Con44018])
Sep40097 = keras.layers.SeparableConv1D(3, (1),strides=(2), padding='valid', name = 'Sep40097', )(in0Sep40097)
Zer73102 = keras.layers.ZeroPadding1D(padding=((1, 0)), name = 'Zer73102', )(Sep40097)
Min17867 = keras.layers.Minimum(name = 'Min17867', )([Con44018,Zer73102])
Res95492 = keras.layers.Reshape((2, 3, 1), name = 'Res95492', )(Min17867)
Sep68712 = keras.layers.SeparableConv2D(4, (2, 2),strides=(1, 1), padding='same', name = 'Sep68712', )(Res95492)
Zer68020 = keras.layers.ZeroPadding2D(padding=((1, 0), (1, 0)), name = 'Zer68020', )(Sep68712)
Ave65955 = keras.layers.Average(name = 'Ave65955', )([Con30836,Zer68020])
model = tf.keras.models.Model(inputs=[in0Sub4296,in1Sub4296,in0Con30836,in0Mul64123,in1Mul64123,in0Con44018,in0Sep40097], outputs=Ave65955)
w = model.get_layer('Sep50055').get_weights() 
w[0] = np.array([[[[0.5885], [0.4921]], [[0.7478], [0.5713]]]])
w[1] = np.array([[[[0.39, 0.563, 0.1032], [0.2592, 0.3883, 0.9384]]]])
w[2] = np.array([0, 0, 0])
model.get_layer('Sep50055').set_weights(w) 
w = model.get_layer('Sep40097').get_weights() 
w[0] = np.array([[[0.182], [0.1306]]])
w[1] = np.array([[[0.0486, 0.0645, 0.0612], [0.5974, 0.3363, 0.2022]]])
w[2] = np.array([0, 0, 0])
model.get_layer('Sep40097').set_weights(w) 
w = model.get_layer('Sep68712').get_weights() 
w[0] = np.array([[[[0.9964]], [[0.4817]]], [[[0.9859]], [[0.2579]]]])
w[1] = np.array([[[[0.3231, 0.2631, 0.991, 0.6435]]]])
w[2] = np.array([0, 0, 0, 0])
model.get_layer('Sep68712').set_weights(w) 
in0Sub4296 = tf.constant([[[[0.0988, 0.1142], [0.3292, 0.631], [0.5482, 0.6813]], [[0.6842, 0.1544], [0.1078, 0.6781], [0.3078, 0.0533]], [[0.1318, 0.0963], [0.2496, 0.8886], [0.4573, 0.4696]]]])
in1Sub4296 = tf.constant([[[[0.3395, 0.0721], [0.6981, 0.6778], [0.9473, 0.4814]], [[0.3257, 0.5318], [0.605, 0.5502], [0.8467, 0.6]], [[0.3892, 0.7343], [0.4215, 0.0282], [0.3334, 0.0009]]]])
in0Con30836 = tf.constant([[[[0.2213], [0.1199], [0.6401], [0.0049]], [[0.796], [0.1291], [0.1922], [0.6172]], [[0.1742], [0.6549], [0.2879], [0.5356]]]])
in0Mul64123 = tf.constant([[[0.5902, 0.5579], [0.7436, 0.7532]]])
in1Mul64123 = tf.constant([[[0.1139, 0.6221], [0.513, 0.513]]])
in0Con44018 = tf.constant([[[0.3492], [0.4892]]])
in0Sep40097 = tf.constant([[[0.7958, 0.2615], [0.5545, 0.6083]]])
print (np.array2string(model.predict([in0Sub4296,in1Sub4296,in0Con30836,in0Mul64123,in1Mul64123,in0Con44018,in0Sep40097],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Ave65955.png')

LSub4296 = subtract_layer([[[[0.0988, 0.1142], [0.3292, 0.631], [0.5482, 0.6813]], [[0.6842, 0.1544], [0.1078, 0.6781], [0.3078, 0.0533]], [[0.1318, 0.0963], [0.2496, 0.8886], [0.4573, 0.4696]]]], [[[[0.3395, 0.0721], [0.6981, 0.6778], [0.9473, 0.4814]], [[0.3257, 0.5318], [0.605, 0.5502], [0.8467, 0.6]], [[0.3892, 0.7343], [0.4215, 0.0282], [0.3334, 0.0009]]]], Sub4296), 
LMax61748 = max_pool2D_layer(Sub4296, 1, 1, Max61748), 
LSep50055 = separable_conv2D_layer(Max61748, 1, 2,[[[[[0.5885], [0.4921]], [[0.7478], [0.5713]]]],[[[[0.39, 0.563, 0.1032], [0.2592, 0.3883, 0.9384]]]]],[0, 0, 0], 1, 1, false, Sep50055), 
LZer33881 = zero_padding2D_layer(Sep50055, 0, 0, 2, 0, Zer33881), 
LCon30836 = concatenate_layer([Zer33881,[[[[0.2213], [0.1199], [0.6401], [0.0049]], [[0.796], [0.1291], [0.1922], [0.6172]], [[0.1742], [0.6549], [0.2879], [0.5356]]]]], 3, Con30836), 
LMul64123 = multiply_layer([[[[0.5902, 0.5579], [0.7436, 0.7532]]], [[[0.1139, 0.6221], [0.513, 0.513]]]], Mul64123), 
LCon44018 = concatenate_layer([Mul64123,[[[0.3492], [0.4892]]]], 2, Con44018), 
LSep40097 = separable_conv1D_layer([[[0.7958, 0.2615], [0.5545, 0.6083]]], 1,[[[[0.182], [0.1306]]],[[[0.0486, 0.0645, 0.0612], [0.5974, 0.3363, 0.2022]]]],[0, 0, 0], 2, false, Sep40097), 
LZer73102 = zero_padding1D_layer(Sep40097, 1, 0, Zer73102), 
LMin17867 = minimum_layer([Con44018,Zer73102], Min17867), 
LRes95492 = reshape_layer(Min17867, [2, 3, 1], Res95492), 
LSep68712 = separable_conv2D_layer(Res95492, 2, 2,[[[[[0.9964]], [[0.4817]]], [[[0.9859]], [[0.2579]]]],[[[[0.3231, 0.2631, 0.991, 0.6435]]]]],[0, 0, 0, 0], 1, 1, true, Sep68712), 
LZer68020 = zero_padding2D_layer(Sep68712, 1, 0, 1, 0, Zer68020), 
LAve65955 = average_layer([Con30836,Zer68020], Ave65955), 
exec_layers([LSub4296,LMax61748,LSep50055,LZer33881,LCon30836,LMul64123,LCon44018,LSep40097,LZer73102,LMin17867,LRes95492,LSep68712,LZer68020,LAve65955],["Sub4296","Max61748","Sep50055","Zer33881","Con30836","Mul64123","Con44018","Sep40097","Zer73102","Min17867","Res95492","Sep68712","Zer68020","Ave65955"],Ave65955,"Ave65955")

Actual (Unparsed): [[[[0.0000000, 0.0000000, 0.0000000, 0.1106500], [0.0000000, 0.0000000, 0.0000000, 0.0599500], [-0.0821956, -0.1186992, -0.0243681, 0.3200500], [-0.0887152, -0.1274247, 0.0161761, 0.0024500]], [[0.0000000, 0.0000000, 0.0000000, 0.3980000], [0.0052384, 0.0042656, 0.0160670, 0.0749830], [-0.0419868, -0.0639080, -0.0489643, 0.1040152], [-0.1654497, -0.2421829, -0.1452028, 0.3136023]], [[0.0000000, 0.0000000, 0.0000000, 0.0871000], [0.0060379, 0.0049167, 0.0185193, 0.3394754], [-0.0270103, -0.0406198, 0.0829209, 0.1530711], [0.0904546, 0.1338621, 0.3316440, 0.2728556]]]]

Expected (Unparsed): [[[[0,0,0,0.11065],[0,0,0,0.05995],[-0.08219561527800001,-0.1186992489895,-0.024368109647999993,0.32005],[-0.08871523518600001,-0.12742465499650002,0.01617607632000001,0.00245]],[[0,0,0,0.398],[0.005238381831268284,0.004265608974951054,0.016066965010172914,0.07498298888400229],[-0.041986778717607524,-0.06390800357608291,-0.04896428188848981,0.10401519762936107],[-0.1654496908631405,-0.24218291134756378,-0.14520278205520848,0.3136022805878399]],[[0,0,0,0.0871],[0.0060379343241506195,0.00491668375327771,0.018519321928917563,0.339475412372612],[-0.027010295903604972,-0.040619834841104485,0.08292091659863407,0.15307108089928256],[0.0904545726075774,0.1338621117089906,0.331643984273867,0.2728555557132809]]]]

Actual:   [[[[0, 0, 0, 0.1107], [0, 0, 0, 0.06], [-0.0821, -0.1186, -0.0243, 0.3201], [-0.0887, -0.1274, 0.0162, 0.0025]], [[0, 0, 0, 0.398], [0.0053, 0.0043, 0.0161, 0.075], [-0.0419, -0.0639, -0.0489, 0.1041], [-0.1654, -0.2421, -0.1452, 0.3137]], [[0, 0, 0, 0.0871], [0.0061, 0.005, 0.0186, 0.3395], [-0.027, -0.0406, 0.083, 0.1531], [0.0905, 0.1339, 0.3317, 0.2729]]]]

Expected: [[[[0, 0, 0, 0.1107], [0, 0, 0, 0.06], [-0.0821, -0.1186, -0.0243, 0.3201], [-0.0887, -0.1274, 0.0162, 0.0025]], [[0, 0, 0, 0.398], [0.0053, 0.0043, 0.0161, 0.075], [-0.0419, -0.0639, -0.0489, 0.1041], [-0.1654, -0.2421, -0.1452, 0.3137]], [[0, 0, 0, 0.0871], [0.0061, 0.005, 0.0186, 0.3395], [-0.027, -0.0406, 0.083, 0.1531], [0.0905, 0.1339, 0.3317, 0.2729]]]]