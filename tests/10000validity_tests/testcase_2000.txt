import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Max95308 = tf.keras.layers.Input(shape=([2, 2, 1, 1]))
in1Max95308 = tf.keras.layers.Input(shape=([2, 2, 1, 1]))
in0Con16356 = tf.keras.layers.Input(shape=([1, 2, 3]))
in0Add13647 = tf.keras.layers.Input(shape=([2, 2, 2]))
in1Add13647 = tf.keras.layers.Input(shape=([2, 2, 2]))

Max95308 = keras.layers.Maximum(name = 'Max95308', )([in0Max95308,in1Max95308])
Res48124 = keras.layers.Reshape((2, 2, 1), name = 'Res48124', )(Max95308)
Res4690 = keras.layers.Reshape((2, 2), name = 'Res4690', )(Res48124)
Cro66046 = keras.layers.Cropping1D(cropping=((0, 1)), name = 'Cro66046', )(Res4690)
Res34736 = keras.layers.Reshape((1, 2, 1), name = 'Res34736', )(Cro66046)
Con16356 = keras.layers.Concatenate(axis=3, name = 'Con16356', )([Res34736,in0Con16356])
Add13647 = keras.layers.Add(name = 'Add13647', )([in0Add13647,in1Add13647])
Den1302 = keras.layers.Dense(4,name = 'Den1302', )(Add13647)
Sep68348 = keras.layers.SeparableConv2D(4, (2, 1),strides=(2, 2), padding='valid', name = 'Sep68348', )(Den1302)
Sof47821 = keras.layers.Softmax(axis=1, name = 'Sof47821', )(Sep68348)
Zer98983 = keras.layers.ZeroPadding2D(padding=((0, 0), (1, 0)), name = 'Zer98983', )(Sof47821)
Max25450 = keras.layers.Maximum(name = 'Max25450', )([Con16356,Zer98983])
model = tf.keras.models.Model(inputs=[in0Max95308,in1Max95308,in0Con16356,in0Add13647,in1Add13647], outputs=Max25450)
w = model.get_layer('Den1302').get_weights() 
w[0] = np.array([[0.817, 0.3913, 0.8569, 0.4072], [0.8587, 0.8145, 0.9487, 0.1384]])
w[1] = np.array([0.0367, 0.5664, 0.7056, 0.9735])
model.get_layer('Den1302').set_weights(w) 
w = model.get_layer('Sep68348').get_weights() 
w[0] = np.array([[[[0.6741], [0.385], [0.9657], [0.3487]]], [[[0.2585], [0.601], [0.3495], [0.2161]]]])
w[1] = np.array([[[[0.4578, 0.9493, 0.5216, 0.3701], [0.7652, 0.163, 0.9467, 0.8755], [0.7888, 0.9556, 0.0939, 0.9633], [0.0119, 0.5652, 0.2459, 0.0385]]]])
w[2] = np.array([0, 0, 0, 0])
model.get_layer('Sep68348').set_weights(w) 
in0Max95308 = tf.constant([[[[[0.041]], [[0.7018]]], [[[0.4]], [[0.1586]]]]])
in1Max95308 = tf.constant([[[[[0.655]], [[0.4585]]], [[[0.12]], [[0.4272]]]]])
in0Con16356 = tf.constant([[[[0.2339, 0.3441, 0.6578], [0.4535, 0.0439, 0.1372]]]])
in0Add13647 = tf.constant([[[[0.3057, 0.888], [0.8203, 0.3765]], [[0.7646, 0.2469], [0.2004, 0.7902]]]])
in1Add13647 = tf.constant([[[[0.4402, 0.5082], [0.0629, 0.2485]], [[0.1877, 0.1574], [0.5012, 0.9895]]]])
print (np.array2string(model.predict([in0Max95308,in1Max95308,in0Con16356,in0Add13647,in1Add13647],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Max25450.png')

LMax95308 = maximum_layer([[[[[[0.041]], [[0.7018]]], [[[0.4]], [[0.1586]]]]], [[[[[0.655]], [[0.4585]]], [[[0.12]], [[0.4272]]]]]], Max95308), 
LRes48124 = reshape_layer(Max95308, [2, 2, 1], Res48124), 
LRes4690 = reshape_layer(Res48124, [2, 2], Res4690), 
LCro66046 = cropping1D_layer(Res4690, 0, 1, Cro66046), 
LRes34736 = reshape_layer(Cro66046, [1, 2, 1], Res34736), 
LCon16356 = concatenate_layer([Res34736,[[[[0.2339, 0.3441, 0.6578], [0.4535, 0.0439, 0.1372]]]]], 3, Con16356), 
LAdd13647 = add_layer([[[[[0.3057, 0.888], [0.8203, 0.3765]], [[0.7646, 0.2469], [0.2004, 0.7902]]]], [[[[0.4402, 0.5082], [0.0629, 0.2485]], [[0.1877, 0.1574], [0.5012, 0.9895]]]]], Add13647), 
LDen1302 = dense_layer(Add13647, [[0.817, 0.3913, 0.8569, 0.4072], [0.8587, 0.8145, 0.9487, 0.1384]],[0.0367, 0.5664, 0.7056, 0.9735], Den1302), 
LSep68348 = separable_conv2D_layer(Den1302, 2, 1,[[[[[0.6741], [0.385], [0.9657], [0.3487]]], [[[0.2585], [0.601], [0.3495], [0.2161]]]],[[[[0.4578, 0.9493, 0.5216, 0.3701], [0.7652, 0.163, 0.9467, 0.8755], [0.7888, 0.9556, 0.0939, 0.9633], [0.0119, 0.5652, 0.2459, 0.0385]]]]],[0, 0, 0, 0], 2, 2, false, Sep68348), 
LSof47821 = softmax_layer(Sep68348, 1, Sof47821), 
LZer98983 = zero_padding2D_layer(Sof47821, 0, 0, 1, 0, Zer98983), 
LMax25450 = maximum_layer([Con16356,Zer98983], Max25450), 
exec_layers([LMax95308,LRes48124,LRes4690,LCro66046,LRes34736,LCon16356,LAdd13647,LDen1302,LSep68348,LSof47821,LZer98983,LMax25450],["Max95308","Res48124","Res4690","Cro66046","Res34736","Con16356","Add13647","Den1302","Sep68348","Sof47821","Zer98983","Max25450"],Max25450,"Max25450")

Actual (Unparsed): [[[[0.6550000, 0.2339000, 0.3441000, 0.6578000], [1.0000000, 1.0000000, 1.0000000, 1.0000000]]]]

Expected (Unparsed): [[[[0.655,0.2339,0.3441,0.6578],[1.0,1.0,1.0,1.0]]]]

Actual:   [[[[0.655, 0.2339, 0.3441, 0.6578], [1, 1, 1, 1]]]]

Expected: [[[[0.655, 0.2339, 0.3441, 0.6578], [1, 1, 1, 1]]]]