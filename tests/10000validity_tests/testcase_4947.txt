import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Mul5755 = tf.keras.layers.Input(shape=([1, 1]))
in1Mul5755 = tf.keras.layers.Input(shape=([1, 1]))
in0Con58223 = tf.keras.layers.Input(shape=([1, 1]))
in0Sof96198 = tf.keras.layers.Input(shape=([1, 2]))
in0Sub76899 = tf.keras.layers.Input(shape=([2, 3, 2]))
in1Sub76899 = tf.keras.layers.Input(shape=([2, 3, 2]))
in0Con51618 = tf.keras.layers.Input(shape=([3, 6]))

Mul5755 = keras.layers.Multiply(name = 'Mul5755', )([in0Mul5755,in1Mul5755])
Con58223 = keras.layers.Concatenate(axis=2, name = 'Con58223', )([Mul5755,in0Con58223])
Sof96198 = keras.layers.Softmax(axis=1, name = 'Sof96198', input_shape=(1, 2))(in0Sof96198)
Min7941 = keras.layers.Minimum(name = 'Min7941', )([Con58223,Sof96198])
Res61939 = keras.layers.Reshape((1, 2, 1), name = 'Res61939', )(Min7941)
Zer86175 = keras.layers.ZeroPadding2D(padding=((1, 1), (1, 1)), name = 'Zer86175', )(Res61939)
Res62276 = keras.layers.Reshape((3, 4, 1, 1), name = 'Res62276', )(Zer86175)
Con73477 = keras.layers.Conv3D(3, (3, 1, 1),strides=(1, 1, 1), padding='same', dilation_rate=(1, 1, 1), name = 'Con73477', )(Res62276)
Res78571 = keras.layers.Reshape((3, 4, 3), name = 'Res78571', )(Con73477)
Res54598 = keras.layers.Reshape((3, 12), name = 'Res54598', )(Res78571)
Sub76899 = keras.layers.Subtract(name = 'Sub76899', )([in0Sub76899,in1Sub76899])
Res3549 = keras.layers.Reshape((2, 6), name = 'Res3549', )(Sub76899)
Cro98292 = keras.layers.Cropping1D(cropping=((0, 1)), name = 'Cro98292', )(Res3549)
Zer74232 = keras.layers.ZeroPadding1D(padding=((2, 0)), name = 'Zer74232', )(Cro98292)
Con51618 = keras.layers.Concatenate(axis=2, name = 'Con51618', )([Zer74232,in0Con51618])
Max40475 = keras.layers.Maximum(name = 'Max40475', )([Res54598,Con51618])
model = tf.keras.models.Model(inputs=[in0Mul5755,in1Mul5755,in0Con58223,in0Sof96198,in0Sub76899,in1Sub76899,in0Con51618], outputs=Max40475)
w = model.get_layer('Con73477').get_weights() 
w[0] = np.array([[[[[0.8645, 0.3405, 0.4782]]]], [[[[0.7546, 0.2709, 0.6032]]]], [[[[0.3279, 0.7754, 0.3575]]]]])
w[1] = np.array([0, 0, 0])
model.get_layer('Con73477').set_weights(w) 
in0Mul5755 = tf.constant([[[0.218]]])
in1Mul5755 = tf.constant([[[0.9562]]])
in0Con58223 = tf.constant([[[0.243]]])
in0Sof96198 = tf.constant([[[0.8266, 0.7769]]])
in0Sub76899 = tf.constant([[[[0.7169, 0.5258], [0.4945, 0.6361], [0.7215, 0.3955]], [[0.823, 0.6468], [0.5581, 0.1823], [0.4244, 0.0801]]]])
in1Sub76899 = tf.constant([[[[0.9535, 0.7473], [0.9798, 0.7592], [0.0758, 0.289]], [[0.993, 0.8239], [0.9784, 0.1834], [0.7061, 0.569]]]])
in0Con51618 = tf.constant([[[0.3608, 0.167, 0.1765, 0.8648, 0.2486, 0.9139], [0.69, 0.5479, 0.7636, 0.3681, 0.8331, 0.1613], [0.6818, 0.7094, 0.2912, 0.1872, 0.5902, 0.2266]]])
print (np.array2string(model.predict([in0Mul5755,in1Mul5755,in0Con58223,in0Sof96198,in0Sub76899,in1Sub76899,in0Con51618],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Max40475.png')

LMul5755 = multiply_layer([[[[0.218]]], [[[0.9562]]]], Mul5755), 
LCon58223 = concatenate_layer([Mul5755,[[[0.243]]]], 2, Con58223), 
LSof96198 = softmax_layer([[[0.8266, 0.7769]]], 1, Sof96198), 
LMin7941 = minimum_layer([Con58223,Sof96198], Min7941), 
LRes61939 = reshape_layer(Min7941, [1, 2, 1], Res61939), 
LZer86175 = zero_padding2D_layer(Res61939, 1, 1, 1, 1, Zer86175), 
LRes62276 = reshape_layer(Zer86175, [3, 4, 1, 1], Res62276), 
LCon73477 = conv3D_layer(Res62276, 3, 1, 1,[[[[[0.8645, 0.3405, 0.4782]]]], [[[[0.7546, 0.2709, 0.6032]]]], [[[[0.3279, 0.7754, 0.3575]]]]],[0, 0, 0], 1, 1, 1, true, 1, 1, 1, Con73477), 
LRes78571 = reshape_layer(Con73477, [3, 4, 3], Res78571), 
LRes54598 = reshape_layer(Res78571, [3, 12], Res54598), 
LSub76899 = subtract_layer([[[[0.7169, 0.5258], [0.4945, 0.6361], [0.7215, 0.3955]], [[0.823, 0.6468], [0.5581, 0.1823], [0.4244, 0.0801]]]], [[[[0.9535, 0.7473], [0.9798, 0.7592], [0.0758, 0.289]], [[0.993, 0.8239], [0.9784, 0.1834], [0.7061, 0.569]]]], Sub76899), 
LRes3549 = reshape_layer(Sub76899, [2, 6], Res3549), 
LCro98292 = cropping1D_layer(Res3549, 0, 1, Cro98292), 
LZer74232 = zero_padding1D_layer(Cro98292, 2, 0, Zer74232), 
LCon51618 = concatenate_layer([Zer74232,[[[0.3608, 0.167, 0.1765, 0.8648, 0.2486, 0.9139], [0.69, 0.5479, 0.7636, 0.3681, 0.8331, 0.1613], [0.6818, 0.7094, 0.2912, 0.1872, 0.5902, 0.2266]]]], 2, Con51618), 
LMax40475 = maximum_layer([Res54598,Con51618], Max40475), 
exec_layers([LMul5755,LCon58223,LSof96198,LMin7941,LRes61939,LZer86175,LRes62276,LCon73477,LRes78571,LRes54598,LSub76899,LRes3549,LCro98292,LZer74232,LCon51618,LMax40475],["Mul5755","Con58223","Sof96198","Min7941","Res61939","Zer86175","Res62276","Con73477","Res78571","Res54598","Sub76899","Res3549","Cro98292","Zer74232","Con51618","Max40475"],Max40475,"Max40475")

Actual (Unparsed): [[[0.0000000, 0.0000000, 0.0000000, 0.0683513, 0.1616334, 0.0745214, 0.3608000, 0.1884222, 0.1765000, 0.8648000, 0.2486000, 0.9139000], [0.0000000, 0.0000000, 0.0000000, 0.1572976, 0.0564695, 0.1257380, 0.6900000, 0.5479000, 0.7636000, 0.3681000, 0.8331000, 0.1613000], [0.0000000, 0.0000000, 0.0000000, 0.1802064, 0.6457000, 0.1065000, 0.6818000, 0.7094000, 0.2912000, 0.1872000, 0.5902000, 0.2266000]]]

Expected (Unparsed): [[[0.0,0.0,0.0,0.06835127964000001,0.16163337064,0.074521447,0.3608,0.18842219999999998,0.1765,0.8648,0.2486,0.9139],[0.0,0.0,0.0,0.15729757736000002,0.05646953844,0.12573800512,0.69,0.5479,0.7636,0.3681,0.8331,0.1613],[0.0,0.0,0.0,0.18020640820000003,0.6457,0.10650000000000004,0.6818,0.7094,0.2912,0.1872,0.5902,0.2266]]]

Actual:   [[[0, 0, 0, 0.0684, 0.1617, 0.0746, 0.3608, 0.1885, 0.1765, 0.8648, 0.2486, 0.9139], [0, 0, 0, 0.1573, 0.0565, 0.1258, 0.69, 0.5479, 0.7636, 0.3681, 0.8331, 0.1613], [0, 0, 0, 0.1803, 0.6457, 0.1065, 0.6818, 0.7094, 0.2912, 0.1872, 0.5902, 0.2266]]]

Expected: [[[0, 0, 0, 0.0684, 0.1617, 0.0746, 0.3608, 0.1885, 0.1765, 0.8648, 0.2486, 0.9139], [0, 0, 0, 0.1573, 0.0565, 0.1258, 0.69, 0.5479, 0.7636, 0.3681, 0.8331, 0.1613], [0, 0, 0, 0.1803, 0.6457, 0.1066, 0.6818, 0.7094, 0.2912, 0.1872, 0.5902, 0.2266]]]