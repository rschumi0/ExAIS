import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Min46278 = tf.keras.layers.Input(shape=([1, 2]))
in1Min46278 = tf.keras.layers.Input(shape=([1, 2]))
in0Con85115 = tf.keras.layers.Input(shape=([2, 2, 2]))
in0Thr62496 = tf.keras.layers.Input(shape=([1, 1]))
in0Con64676 = tf.keras.layers.Input(shape=([1, 1]))

Min46278 = keras.layers.Minimum(name = 'Min46278', )([in0Min46278,in1Min46278])
Res50514 = keras.layers.Reshape((1, 2, 1), name = 'Res50514', )(Min46278)
Zer38992 = keras.layers.ZeroPadding2D(padding=((1, 1), (1, 1)), name = 'Zer38992', )(Res50514)
Con85115 = keras.layers.Conv2D(2, (2, 2),strides=(1, 1), padding='valid', dilation_rate=(1, 1), name = 'Con85115', )(in0Con85115)
Res78587 = keras.layers.Reshape((1, 2), name = 'Res78587', )(Con85115)
Thr62496 = keras.layers.ThresholdedReLU(theta=3.1550797156112385, name = 'Thr62496', input_shape=(1, 1))(in0Thr62496)
Con64676 = keras.layers.Concatenate(axis=2, name = 'Con64676', )([Thr62496,in0Con64676])
Mul68864 = keras.layers.Multiply(name = 'Mul68864', )([Res78587,Con64676])
Res44885 = keras.layers.Reshape((1, 2, 1), name = 'Res44885', )(Mul68864)
Dep22650 = keras.layers.DepthwiseConv2D((1, 2),strides=(1, 1), padding='valid', name = 'Dep22650', )(Res44885)
Zer93689 = keras.layers.ZeroPadding2D(padding=((2, 0), (3, 0)), name = 'Zer93689', )(Dep22650)
Sub78590 = keras.layers.Subtract(name = 'Sub78590', )([Zer38992,Zer93689])
model = tf.keras.models.Model(inputs=[in0Min46278,in1Min46278,in0Con85115,in0Thr62496,in0Con64676], outputs=Sub78590)
w = model.get_layer('Con85115').get_weights() 
w[0] = np.array([[[[0.6341, 0.9131], [0.8308, 0.3505]], [[0.5347, 0.765], [0.6072, 0.0897]]], [[[0.2911, 0.6102], [0.1491, 0.5101]], [[0.5315, 0.598], [0.3791, 0.3604]]]])
w[1] = np.array([0, 0])
model.get_layer('Con85115').set_weights(w) 
w = model.get_layer('Dep22650').get_weights() 
w[0] = np.array([[[[0.6791]], [[0.3216]]]])
w[1] = np.array([0])
model.get_layer('Dep22650').set_weights(w) 
in0Min46278 = tf.constant([[[0.2085, 0.1587]]])
in1Min46278 = tf.constant([[[0.0608, 0.9981]]])
in0Con85115 = tf.constant([[[[0.7487, 0.3074], [0.7098, 0.9781]], [[0.4656, 0.4304], [0.76, 0.402]]]])
in0Thr62496 = tf.constant([[[0.5741]]])
in0Con64676 = tf.constant([[[0.766]]])
print (np.array2string(model.predict([in0Min46278,in1Min46278,in0Con85115,in0Thr62496,in0Con64676],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Sub78590.png')

LMin46278 = minimum_layer([[[[0.2085, 0.1587]]], [[[0.0608, 0.9981]]]], Min46278), 
LRes50514 = reshape_layer(Min46278, [1, 2, 1], Res50514), 
LZer38992 = zero_padding2D_layer(Res50514, 1, 1, 1, 1, Zer38992), 
LCon85115 = conv2D_layer([[[[0.7487, 0.3074], [0.7098, 0.9781]], [[0.4656, 0.4304], [0.76, 0.402]]]], 2, 2,[[[[0.6341, 0.9131], [0.8308, 0.3505]], [[0.5347, 0.765], [0.6072, 0.0897]]], [[[0.2911, 0.6102], [0.1491, 0.5101]], [[0.5315, 0.598], [0.3791, 0.3604]]]],[0, 0], 1, 1, false, 1, 1, Con85115), 
LRes78587 = reshape_layer(Con85115, [1, 2], Res78587), 
LThr62496 = thresholded_relu_layer([[[0.5741]]], 3.1550797156112385, Thr62496), 
LCon64676 = concatenate_layer([Thr62496,[[[0.766]]]], 2, Con64676), 
LMul68864 = multiply_layer([Res78587,Con64676], Mul68864), 
LRes44885 = reshape_layer(Mul68864, [1, 2, 1], Res44885), 
LDep22650 = depthwise_conv2D_layer(Res44885, 1, 2,[[[[0.6791]], [[0.3216]]]],[0], 1, 1, false, Dep22650), 
LZer93689 = zero_padding2D_layer(Dep22650, 2, 0, 3, 0, Zer93689), 
LSub78590 = subtract_layer(Zer38992,Zer93689, Sub78590), 
exec_layers([LMin46278,LRes50514,LZer38992,LCon85115,LRes78587,LThr62496,LCon64676,LMul68864,LRes44885,LDep22650,LZer93689,LSub78590],["Min46278","Res50514","Zer38992","Con85115","Res78587","Thr62496","Con64676","Mul68864","Res44885","Dep22650","Zer93689","Sub78590"],Sub78590,"Sub78590")

Actual (Unparsed): [[[[0.0000000], [0.0000000], [0.0000000], [0.0000000]], [[0.0000000], [0.0608000], [0.1587000], [0.0000000]], [[0.0000000], [0.0000000], [0.0000000], [-0.6220549]]]]

Expected (Unparsed): [[[[0],[0],[0],[0]],[[0],[0.0608],[0.1587],[0]],[[0],[0],[0],[-0.62205496054272]]]]

Actual:   [[[[0], [0], [0], [0]], [[0], [0.0608], [0.1587], [0]], [[0], [0], [0], [-0.622]]]]

Expected: [[[[0], [0], [0], [0]], [[0], [0.0608], [0.1587], [0]], [[0], [0], [0], [-0.622]]]]