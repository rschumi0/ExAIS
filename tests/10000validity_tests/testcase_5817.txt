import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Thr18036 = tf.keras.layers.Input(shape=([1, 2]))

Thr18036 = keras.layers.ThresholdedReLU(theta=8.253525870626806, name = 'Thr18036', input_shape=(1, 2))(in0Thr18036)
Fla67778 = keras.layers.Flatten(name = 'Fla67778', )(Thr18036)
model = tf.keras.models.Model(inputs=[in0Thr18036], outputs=Fla67778)
in0Thr18036 = tf.constant([[[0.808, 0.4092]]])
print (np.array2string(model.predict([in0Thr18036],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Fla67778.png')

LThr18036 = thresholded_relu_layer([[[0.808, 0.4092]]], 8.253525870626806, Thr18036), 
LFla67778 = flatten_layer(Thr18036, Fla67778), 
exec_layers([LThr18036,LFla67778],["Thr18036","Fla67778"],Fla67778,"Fla67778")

Actual (Unparsed): [[0.0000000, 0.0000000]]

Expected (Unparsed): [[0,0]]

Actual:   [[0, 0]]

Expected: [[0, 0]]