import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0PRe38679 = tf.keras.layers.Input(shape=([2, 2]))
in0ELU22333 = tf.keras.layers.Input(shape=([2, 1, 1]))
in0Con65079 = tf.keras.layers.Input(shape=([2]))
in0Mul73814 = tf.keras.layers.Input(shape=([1, 2, 1, 1]))
in1Mul73814 = tf.keras.layers.Input(shape=([1, 2, 1, 1]))
in0Con19848 = tf.keras.layers.Input(shape=([4]))
in0Fla18914 = tf.keras.layers.Input(shape=([2, 3]))

PRe38679 = keras.layers.PReLU(name = 'PRe38679', input_shape=(2, 2))(in0PRe38679)
Res78212 = keras.layers.Reshape((2, 2, 1), name = 'Res78212', )(PRe38679)
ELU22333 = keras.layers.ELU(alpha=-0.6087766904396634, name = 'ELU22333', input_shape=(2, 1, 1))(in0ELU22333)
Zer78178 = keras.layers.ZeroPadding2D(padding=((0, 0), (1, 0)), name = 'Zer78178', )(ELU22333)
Ave11358 = keras.layers.Average(name = 'Ave11358', )([Res78212,Zer78178])
Res57684 = keras.layers.Reshape((2, 2), name = 'Res57684', )(Ave11358)
Fla95259 = keras.layers.Flatten(name = 'Fla95259', )(Res57684)
Con65079 = keras.layers.Concatenate(axis=1, name = 'Con65079', )([Fla95259,in0Con65079])
Mul73814 = keras.layers.Multiply(name = 'Mul73814', )([in0Mul73814,in1Mul73814])
Res44454 = keras.layers.Reshape((1, 2, 1), name = 'Res44454', )(Mul73814)
Res56407 = keras.layers.Reshape((1, 2), name = 'Res56407', )(Res44454)
Fla27680 = keras.layers.Flatten(name = 'Fla27680', )(Res56407)
Con19848 = keras.layers.Concatenate(axis=1, name = 'Con19848', )([Fla27680,in0Con19848])
Fla18914 = keras.layers.Flatten(name = 'Fla18914', )(in0Fla18914)
Max35826 = keras.layers.Maximum(name = 'Max35826', )([Con19848,Fla18914])
Sub79256 = keras.layers.Subtract(name = 'Sub79256', )([Con65079,Max35826])
Res8971 = keras.layers.Reshape((6, 1), name = 'Res8971', )(Sub79256)
Res72494 = keras.layers.Reshape((6, 1, 1), name = 'Res72494', )(Res8971)
Res62325 = keras.layers.Reshape((6, 1, 1, 1), name = 'Res62325', )(Res72494)
Con80255 = keras.layers.Conv3DTranspose(3, (2, 1, 1),strides=(1, 1, 1), padding='valid', name = 'Con80255', )(Res62325)
model = tf.keras.models.Model(inputs=[in0PRe38679,in0ELU22333,in0Con65079,in0Mul73814,in1Mul73814,in0Con19848,in0Fla18914], outputs=Con80255)
w = model.get_layer('PRe38679').get_weights() 
w[0] = np.array([[0.7595, 0.9464], [0.3289, 0.4123]])
model.get_layer('PRe38679').set_weights(w) 
w = model.get_layer('Con80255').get_weights() 
w[0] = np.array([[[[[0.2], [0.1308], [0.404]]]], [[[[0.1714], [0.4959], [0.3864]]]]])
w[1] = np.array([0, 0, 0])
model.get_layer('Con80255').set_weights(w) 
in0PRe38679 = tf.constant([[[0.4603, 0.0564], [0.5083, 0.957]]])
in0ELU22333 = tf.constant([[[[0.4073]], [[0.3942]]]])
in0Con65079 = tf.constant([[0.771, 0.552]])
in0Mul73814 = tf.constant([[[[[0.0245]], [[0.4163]]]]])
in1Mul73814 = tf.constant([[[[[0.7562]], [[0.4702]]]]])
in0Con19848 = tf.constant([[0.0561, 0.7196, 0.2212, 0.694]])
in0Fla18914 = tf.constant([[[1.6359, 1.7189, 1.6439], [1.0213, 1.8201, 1.9336]]])
print (np.array2string(model.predict([in0PRe38679,in0ELU22333,in0Con65079,in0Mul73814,in1Mul73814,in0Con19848,in0Fla18914],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Con80255.png')

LPRe38679 = prelu_layer([[[0.4603, 0.0564], [0.5083, 0.957]]], [[0.7595, 0.9464], [0.3289, 0.4123]], PRe38679), 
LRes78212 = reshape_layer(PRe38679, [2, 2, 1], Res78212), 
LELU22333 = elu_layer([[[[0.4073]], [[0.3942]]]], -0.6087766904396634, ELU22333), 
LZer78178 = zero_padding2D_layer(ELU22333, 0, 0, 1, 0, Zer78178), 
LAve11358 = average_layer([Res78212,Zer78178], Ave11358), 
LRes57684 = reshape_layer(Ave11358, [2, 2], Res57684), 
LFla95259 = flatten_layer(Res57684, Fla95259), 
LCon65079 = concatenate_layer([Fla95259,[[0.771, 0.552]]], 1, Con65079), 
LMul73814 = multiply_layer([[[[[[0.0245]], [[0.4163]]]]], [[[[[0.7562]], [[0.4702]]]]]], Mul73814), 
LRes44454 = reshape_layer(Mul73814, [1, 2, 1], Res44454), 
LRes56407 = reshape_layer(Res44454, [1, 2], Res56407), 
LFla27680 = flatten_layer(Res56407, Fla27680), 
LCon19848 = concatenate_layer([Fla27680,[[0.0561, 0.7196, 0.2212, 0.694]]], 1, Con19848), 
LFla18914 = flatten_layer([[[1.6359, 1.7189, 1.6439], [1.0213, 1.8201, 1.9336]]], Fla18914), 
LMax35826 = maximum_layer([Con19848,Fla18914], Max35826), 
LSub79256 = subtract_layer(Con65079,Max35826, Sub79256), 
LRes8971 = reshape_layer(Sub79256, [6, 1], Res8971), 
LRes72494 = reshape_layer(Res8971, [6, 1, 1], Res72494), 
LRes62325 = reshape_layer(Res72494, [6, 1, 1, 1], Res62325), 
LCon80255 = conv3D_transpose_layer(Res62325, 2, 1, 1,[[[[[0.2], [0.1308], [0.404]]]], [[[[0.1714], [0.4959], [0.3864]]]]],[0, 0, 0], 1, 1, 1, false, Con80255), 
exec_layers([LPRe38679,LRes78212,LELU22333,LZer78178,LAve11358,LRes57684,LFla95259,LCon65079,LMul73814,LRes44454,LRes56407,LFla27680,LCon19848,LFla18914,LMax35826,LSub79256,LRes8971,LRes72494,LRes62325,LCon80255],["PRe38679","Res78212","ELU22333","Zer78178","Ave11358","Res57684","Fla95259","Con65079","Mul73814","Res44454","Res56407","Fla27680","Con19848","Fla18914","Max35826","Sub79256","Res8971","Res72494","Res62325","Con80255"],Con80255,"Con80255")

Actual (Unparsed): [[[[[-0.2811500, -0.1838721, -0.5679230]]], [[[-0.5383555, -0.8916176, -1.1439500]]], [[[-0.5328304, -0.9192074, -1.1360551]]], [[[-0.3073431, -0.7343946, -0.6766622]]], [[[-0.2690730, -0.3086549, -0.5574148]]], [[[-0.4561357, -0.7009619, -0.9635386]]], [[[-0.2368062, -0.6851354, -0.5338502]]]]]

Expected (Unparsed): [[[[[-0.28114999999999996,-0.18387209999999998,-0.567923]]],[[[-0.53835555,-0.8916175649999999,-1.14395]]],[[[-0.5328303699999999,-0.9192073949999999,-1.13605512]]],[[[-0.30734315,-0.7343945849999999,-0.6766622]]],[[[-0.2690729800000001,-0.3086549100000001,-0.5574148800000001]]],[[[-0.45613574,-0.70096197,-0.9635386400000001]]],[[[-0.23680623999999997,-0.6851354399999999,-0.53385024]]]]]

Actual:   [[[[[-0.2811, -0.1838, -0.5679]]], [[[-0.5383, -0.8916, -1.1439]]], [[[-0.5328, -0.9192, -1.136]]], [[[-0.3073, -0.7343, -0.6766]]], [[[-0.269, -0.3086, -0.5574]]], [[[-0.4561, -0.7009, -0.9635]]], [[[-0.2368, -0.6851, -0.5338]]]]]

Expected: [[[[[-0.2811, -0.1838, -0.5679]]], [[[-0.5383, -0.8916, -1.1439]]], [[[-0.5328, -0.9192, -1.136]]], [[[-0.3073, -0.7343, -0.6766]]], [[[-0.269, -0.3086, -0.5574]]], [[[-0.4561, -0.7009, -0.9635]]], [[[-0.2368, -0.6851, -0.5338]]]]]