import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Ave58984 = tf.keras.layers.Input(shape=([1, 2]))

Ave58984 = keras.layers.AveragePooling1D(pool_size=(1), strides=(1), padding='same', name = 'Ave58984', )(in0Ave58984)
Res25237 = keras.layers.Reshape((1, 2, 1), name = 'Res25237', )(Ave58984)
Con61861 = keras.layers.Conv2D(3, (1, 2),strides=(1, 1), padding='valid', dilation_rate=(1, 1), name = 'Con61861', )(Res25237)
Max58088 = keras.layers.MaxPool2D(pool_size=(1, 1), name = 'Max58088', )(Con61861)
Lay87077 = keras.layers.LayerNormalization(axis=2, epsilon=2.2096223762708345, name = 'Lay87077', )(Max58088)
model = tf.keras.models.Model(inputs=[in0Ave58984], outputs=Lay87077)
w = model.get_layer('Con61861').get_weights() 
w[0] = np.array([[[[0.7901, 0.4881, 0.2591]], [[0.8465, 0.5639, 0.0528]]]])
w[1] = np.array([0, 0, 0])
model.get_layer('Con61861').set_weights(w) 
in0Ave58984 = tf.constant([[[1.4307, 1.2858]]])
print (np.array2string(model.predict([in0Ave58984],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Lay87077.png')

LAve58984 = average_pooling1D_layer([[[1.4307, 1.2858]]], 1, 1, true, Ave58984), 
LRes25237 = reshape_layer(Ave58984, [1, 2, 1], Res25237), 
LCon61861 = conv2D_layer(Res25237, 1, 2,[[[[0.7901, 0.4881, 0.2591]], [[0.8465, 0.5639, 0.0528]]]],[0, 0, 0], 1, 1, false, 1, 1, Con61861), 
LMax58088 = max_pool2D_layer(Con61861, 1, 1, Max58088), 
LLay87077 = layer_normalization_layer(Max58088, 2, 2.2096223762708345, Lay87077), 
exec_layers([LAve58984,LRes25237,LCon61861,LMax58088,LLay87077],["Ave58984","Res25237","Con61861","Max58088","Lay87077"],Lay87077,"Lay87077")

Actual (Unparsed): [[[[0.0000000, 0.0000000, 0.0000000]]]]

Expected (Unparsed): [[[[0.0,0.0,0.0]]]]

Actual:   [[[[0, 0, 0]]]]

Expected: [[[[0, 0, 0]]]]