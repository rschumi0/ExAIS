import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Sof93710 = tf.keras.layers.Input(shape=([1, 2]))
in0Con76469 = tf.keras.layers.Input(shape=([1, 2, 1]))
in0Min89110 = tf.keras.layers.Input(shape=([1, 1, 2]))
in1Min89110 = tf.keras.layers.Input(shape=([1, 1, 2]))
in0Add8659 = tf.keras.layers.Input(shape=([2, 2]))
in1Add8659 = tf.keras.layers.Input(shape=([2, 2]))
in0Con49913 = tf.keras.layers.Input(shape=([2, 2]))

Sof93710 = keras.layers.Softmax(axis=1, name = 'Sof93710', input_shape=(1, 2))(in0Sof93710)
Res661 = keras.layers.Reshape((1, 2, 1), name = 'Res661', )(Sof93710)
Con76469 = keras.layers.Concatenate(axis=3, name = 'Con76469', )([Res661,in0Con76469])
Min89110 = keras.layers.Minimum(name = 'Min89110', )([in0Min89110,in1Min89110])
Zer23878 = keras.layers.ZeroPadding2D(padding=((0, 0), (1, 0)), name = 'Zer23878', )(Min89110)
Mul56824 = keras.layers.Multiply(name = 'Mul56824', )([Con76469,Zer23878])
Res25936 = keras.layers.Reshape((1, 4), name = 'Res25936', )(Mul56824)
Zer23773 = keras.layers.ZeroPadding1D(padding=((1, 0)), name = 'Zer23773', )(Res25936)
Add8659 = keras.layers.Add(name = 'Add8659', )([in0Add8659,in1Add8659])
Per31599 = keras.layers.Permute((2,1), name = 'Per31599',)(Add8659)
Con49913 = keras.layers.Concatenate(axis=2, name = 'Con49913', )([Per31599,in0Con49913])
Add49220 = keras.layers.Add(name = 'Add49220', )([Zer23773,Con49913])
Res21530 = keras.layers.Reshape((2, 4, 1), name = 'Res21530', )(Add49220)
Res1647 = keras.layers.Reshape((2, 4, 1, 1), name = 'Res1647', )(Res21530)
Zer47018 = keras.layers.ZeroPadding3D(padding=((1, 1), (1, 1), (1, 1)), name = 'Zer47018', )(Res1647)
model = tf.keras.models.Model(inputs=[in0Sof93710,in0Con76469,in0Min89110,in1Min89110,in0Add8659,in1Add8659,in0Con49913], outputs=Zer47018)
in0Sof93710 = tf.constant([[[0.4037, 0.9858]]])
in0Con76469 = tf.constant([[[[0.1092], [0.6366]]]])
in0Min89110 = tf.constant([[[[0.0628, 0.0477]]]])
in1Min89110 = tf.constant([[[[0.1127, 0.5284]]]])
in0Add8659 = tf.constant([[[0.0967, 0.6798], [0.423, 0.7326]]])
in1Add8659 = tf.constant([[[0.5474, 0.1548], [0.7333, 0.8011]]])
in0Con49913 = tf.constant([[[0.931, 0.1633], [0.0695, 0.8756]]])
print (np.array2string(model.predict([in0Sof93710,in0Con76469,in0Min89110,in1Min89110,in0Add8659,in1Add8659,in0Con49913],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Zer47018.png')

LSof93710 = softmax_layer([[[0.4037, 0.9858]]], 1, Sof93710), 
LRes661 = reshape_layer(Sof93710, [1, 2, 1], Res661), 
LCon76469 = concatenate_layer([Res661,[[[[0.1092], [0.6366]]]]], 3, Con76469), 
LMin89110 = minimum_layer([[[[[0.0628, 0.0477]]]], [[[[0.1127, 0.5284]]]]], Min89110), 
LZer23878 = zero_padding2D_layer(Min89110, 0, 0, 1, 0, Zer23878), 
LMul56824 = multiply_layer([Con76469,Zer23878], Mul56824), 
LRes25936 = reshape_layer(Mul56824, [1, 4], Res25936), 
LZer23773 = zero_padding1D_layer(Res25936, 1, 0, Zer23773), 
LAdd8659 = add_layer([[[[0.0967, 0.6798], [0.423, 0.7326]]], [[[0.5474, 0.1548], [0.7333, 0.8011]]]], Add8659), 
LPer31599 = permute_layer(Add8659, 2,1, Per31599), 
LCon49913 = concatenate_layer([Per31599,[[[0.931, 0.1633], [0.0695, 0.8756]]]], 2, Con49913), 
LAdd49220 = add_layer([Zer23773,Con49913], Add49220), 
LRes21530 = reshape_layer(Add49220, [2, 4, 1], Res21530), 
LRes1647 = reshape_layer(Res21530, [2, 4, 1, 1], Res1647), 
LZer47018 = zero_padding3D_layer(Res1647, 1, 1, 1, 1, 1, 1, Zer47018), 
exec_layers([LSof93710,LRes661,LCon76469,LMin89110,LZer23878,LMul56824,LRes25936,LZer23773,LAdd8659,LPer31599,LCon49913,LAdd49220,LRes21530,LRes1647,LZer47018],["Sof93710","Res661","Con76469","Min89110","Zer23878","Mul56824","Res25936","Zer23773","Add8659","Per31599","Con49913","Add49220","Res21530","Res1647","Zer47018"],Zer47018,"Zer47018")

Actual (Unparsed): [[[[[0.0000000], [0.0000000], [0.0000000]], [[0.0000000], [0.0000000], [0.0000000]], [[0.0000000], [0.0000000], [0.0000000]], [[0.0000000], [0.0000000], [0.0000000]], [[0.0000000], [0.0000000], [0.0000000]], [[0.0000000], [0.0000000], [0.0000000]]], [[[0.0000000], [0.0000000], [0.0000000]], [[0.0000000], [0.6441000], [0.0000000]], [[0.0000000], [1.1563000], [0.0000000]], [[0.0000000], [0.9310000], [0.0000000]], [[0.0000000], [0.1633000], [0.0000000]], [[0.0000000], [0.0000000], [0.0000000]]], [[[0.0000000], [0.0000000], [0.0000000]], [[0.0000000], [0.8346000], [0.0000000]], [[0.0000000], [1.5337000], [0.0000000]], [[0.0000000], [0.1323000], [0.0000000]], [[0.0000000], [0.9059658], [0.0000000]], [[0.0000000], [0.0000000], [0.0000000]]], [[[0.0000000], [0.0000000], [0.0000000]], [[0.0000000], [0.0000000], [0.0000000]], [[0.0000000], [0.0000000], [0.0000000]], [[0.0000000], [0.0000000], [0.0000000]], [[0.0000000], [0.0000000], [0.0000000]], [[0.0000000], [0.0000000], [0.0000000]]]]]

Expected (Unparsed): [[[[[0],[0],[0]],[[0],[0],[0]],[[0],[0],[0]],[[0],[0],[0]],[[0],[0],[0]],[[0],[0],[0]]],[[[0],[0],[0]],[[0],[0.6441],[0]],[[0],[1.1562999999999999],[0]],[[0],[0.931],[0]],[[0],[0.1633],[0]],[[0],[0],[0]]],[[[0],[0],[0]],[[0],[0.8346],[0]],[[0],[1.5337],[0]],[[0],[0.1323],[0]],[[0],[0.90596582],[0]],[[0],[0],[0]]],[[[0],[0],[0]],[[0],[0],[0]],[[0],[0],[0]],[[0],[0],[0]],[[0],[0],[0]],[[0],[0],[0]]]]]

Actual:   [[[[[0], [0], [0]], [[0], [0], [0]], [[0], [0], [0]], [[0], [0], [0]], [[0], [0], [0]], [[0], [0], [0]]], [[[0], [0], [0]], [[0], [0.6441], [0]], [[0], [1.1563], [0]], [[0], [0.931], [0]], [[0], [0.1633], [0]], [[0], [0], [0]]], [[[0], [0], [0]], [[0], [0.8346], [0]], [[0], [1.5337], [0]], [[0], [0.1323], [0]], [[0], [0.906], [0]], [[0], [0], [0]]], [[[0], [0], [0]], [[0], [0], [0]], [[0], [0], [0]], [[0], [0], [0]], [[0], [0], [0]], [[0], [0], [0]]]]]

Expected: [[[[[0], [0], [0]], [[0], [0], [0]], [[0], [0], [0]], [[0], [0], [0]], [[0], [0], [0]], [[0], [0], [0]]], [[[0], [0], [0]], [[0], [0.6441], [0]], [[0], [1.1563], [0]], [[0], [0.931], [0]], [[0], [0.1633], [0]], [[0], [0], [0]]], [[[0], [0], [0]], [[0], [0.8346], [0]], [[0], [1.5337], [0]], [[0], [0.1323], [0]], [[0], [0.906], [0]], [[0], [0], [0]]], [[[0], [0], [0]], [[0], [0], [0]], [[0], [0], [0]], [[0], [0], [0]], [[0], [0], [0]], [[0], [0], [0]]]]]