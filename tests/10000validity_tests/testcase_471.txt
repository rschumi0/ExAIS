import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Lay68356 = tf.keras.layers.Input(shape=([2, 3, 1]))
in0Dot38462 = tf.keras.layers.Input(shape=([2, 3]))
in1Dot38462 = tf.keras.layers.Input(shape=([2, 3]))
in0Con77084 = tf.keras.layers.Input(shape=([2, 1]))
in0Glo93154 = tf.keras.layers.Input(shape=([1, 2, 1]))
in0Con8878 = tf.keras.layers.Input(shape=([5]))

Lay68356 = keras.layers.LayerNormalization(axis=1, epsilon=2.77917185902266, name = 'Lay68356', )(in0Lay68356)
Res27890 = keras.layers.Reshape((2, 3), name = 'Res27890', )(Lay68356)
Dot38462 = keras.layers.Dot(axes=(2, 2), name = 'Dot38462', )([in0Dot38462,in1Dot38462])
Con77084 = keras.layers.Concatenate(axis=2, name = 'Con77084', )([Dot38462,in0Con77084])
Ave42204 = keras.layers.Average(name = 'Ave42204', )([Res27890,Con77084])
Thr28515 = keras.layers.ThresholdedReLU(theta=1.748757351919665, name = 'Thr28515', )(Ave42204)
Fla41364 = keras.layers.Flatten(name = 'Fla41364', )(Thr28515)
Glo93154 = keras.layers.GlobalMaxPool2D(name = 'Glo93154', )(in0Glo93154)
Con8878 = keras.layers.Concatenate(axis=1, name = 'Con8878', )([Glo93154,in0Con8878])
Min45850 = keras.layers.Minimum(name = 'Min45850', )([Fla41364,Con8878])
Res88552 = keras.layers.Reshape((6, 1), name = 'Res88552', )(Min45850)
Res38960 = keras.layers.Reshape((6, 1, 1), name = 'Res38960', )(Res88552)
Res28072 = keras.layers.Reshape((6, 1, 1, 1), name = 'Res28072', )(Res38960)
Con79739 = keras.layers.Conv3DTranspose(2, (1, 1, 1),strides=(6, 4, 1), padding='same', name = 'Con79739', )(Res28072)
model = tf.keras.models.Model(inputs=[in0Lay68356,in0Dot38462,in1Dot38462,in0Con77084,in0Glo93154,in0Con8878], outputs=Con79739)
w = model.get_layer('Con79739').get_weights() 
w[0] = np.array([[[[[0.8021], [0.7969]]]]])
w[1] = np.array([0, 0])
model.get_layer('Con79739').set_weights(w) 
in0Lay68356 = tf.constant([[[[1.0793], [1.5957], [1.7059]], [[1.3433], [1.6484], [1.089]]]])
in0Dot38462 = tf.constant([[[0.6266, 0.8543, 0.1058], [0.5812, 0.6608, 0.2753]]])
in1Dot38462 = tf.constant([[[0.7269, 0.6837, 0.2337], [0.3027, 0.7184, 0.5315]]])
in0Con77084 = tf.constant([[[0.7312], [0.2253]]])
in0Glo93154 = tf.constant([[[[1.3925], [1.9982]]]])
in0Con8878 = tf.constant([[0.1548, 0.1733, 0.6971, 0.668, 0.8634]])
print (np.array2string(model.predict([in0Lay68356,in0Dot38462,in1Dot38462,in0Con77084,in0Glo93154,in0Con8878],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Con79739.png')

LLay68356 = layer_normalization_layer([[[[1.0793], [1.5957], [1.7059]], [[1.3433], [1.6484], [1.089]]]], 1, 2.77917185902266, Lay68356), 
LRes27890 = reshape_layer(Lay68356, [2, 3], Res27890), 
LDot38462 = dot_layer([[[0.6266, 0.8543, 0.1058], [0.5812, 0.6608, 0.2753]]], [[[0.7269, 0.6837, 0.2337], [0.3027, 0.7184, 0.5315]]], 2, 2, Dot38462), 
LCon77084 = concatenate_layer([Dot38462,[[[0.7312], [0.2253]]]], 2, Con77084), 
LAve42204 = average_layer([Res27890,Con77084], Ave42204), 
LThr28515 = thresholded_relu_layer(Ave42204, 1.748757351919665, Thr28515), 
LFla41364 = flatten_layer(Thr28515, Fla41364), 
LGlo93154 = global_max_pool2D_layer([[[[1.3925], [1.9982]]]], Glo93154), 
LCon8878 = concatenate_layer([Glo93154,[[0.1548, 0.1733, 0.6971, 0.668, 0.8634]]], 1, Con8878), 
LMin45850 = minimum_layer([Fla41364,Con8878], Min45850), 
LRes88552 = reshape_layer(Min45850, [6, 1], Res88552), 
LRes38960 = reshape_layer(Res88552, [6, 1, 1], Res38960), 
LRes28072 = reshape_layer(Res38960, [6, 1, 1, 1], Res28072), 
LCon79739 = conv3D_transpose_layer(Res28072, 1, 1, 1,[[[[[0.8021], [0.7969]]]]],[0, 0], 6, 4, 1, true, Con79739), 
exec_layers([LLay68356,LRes27890,LDot38462,LCon77084,LAve42204,LThr28515,LFla41364,LGlo93154,LCon8878,LMin45850,LRes88552,LRes38960,LRes28072,LCon79739],["Lay68356","Res27890","Dot38462","Con77084","Ave42204","Thr28515","Fla41364","Glo93154","Con8878","Min45850","Res88552","Res38960","Res28072","Con79739"],Con79739,"Con79739")

Actual (Unparsed): [[[[[0.0000000, 0.0000000]], [[0.0000000, 0.0000000]], [[0.0000000, 0.0000000]], [[0.0000000, 0.0000000]]], [[[0.0000000, 0.0000000]], [[0.0000000, 0.0000000]], [[0.0000000, 0.0000000]], [[0.0000000, 0.0000000]]], [[[0.0000000, 0.0000000]], [[0.0000000, 0.0000000]], [[0.0000000, 0.0000000]], [[0.0000000, 0.0000000]]], [[[0.0000000, 0.0000000]], [[0.0000000, 0.0000000]], [[0.0000000, 0.0000000]], [[0.0000000, 0.0000000]]], [[[0.0000000, 0.0000000]], [[0.0000000, 0.0000000]], [[0.0000000, 0.0000000]], [[0.0000000, 0.0000000]]], [[[0.0000000, 0.0000000]], [[0.0000000, 0.0000000]], [[0.0000000, 0.0000000]], [[0.0000000, 0.0000000]]], [[[0.0000000, 0.0000000]], [[0.0000000, 0.0000000]], [[0.0000000, 0.0000000]], [[0.0000000, 0.0000000]]], [[[0.0000000, 0.0000000]], [[0.0000000, 0.0000000]], [[0.0000000, 0.0000000]], [[0.0000000, 0.0000000]]], [[[0.0000000, 0.0000000]], [[0.0000000, 0.0000000]], [[0.0000000, 0.0000000]], [[0.0000000, 0.0000000]]], [[[0.0000000, 0.0000000]], [[0.0000000, 0.0000000]], [[0.0000000, 0.0000000]], [[0.0000000, 0.0000000]]], [[[0.0000000, 0.0000000]], [[0.0000000, 0.0000000]], [[0.0000000, 0.0000000]], [[0.0000000, 0.0000000]]], [[[0.0000000, 0.0000000]], [[0.0000000, 0.0000000]], [[0.0000000, 0.0000000]], [[0.0000000, 0.0000000]]], [[[0.0000000, 0.0000000]], [[0.0000000, 0.0000000]], [[0.0000000, 0.0000000]], [[0.0000000, 0.0000000]]], [[[0.0000000, 0.0000000]], [[0.0000000, 0.0000000]], [[0.0000000, 0.0000000]], [[0.0000000, 0.0000000]]], [[[0.0000000, 0.0000000]], [[0.0000000, 0.0000000]], [[0.0000000, 0.0000000]], [[0.0000000, 0.0000000]]], [[[0.0000000, 0.0000000]], [[0.0000000, 0.0000000]], [[0.0000000, 0.0000000]], [[0.0000000, 0.0000000]]], [[[0.0000000, 0.0000000]], [[0.0000000, 0.0000000]], [[0.0000000, 0.0000000]], [[0.0000000, 0.0000000]]], [[[0.0000000, 0.0000000]], [[0.0000000, 0.0000000]], [[0.0000000, 0.0000000]], [[0.0000000, 0.0000000]]], [[[0.0000000, 0.0000000]], [[0.0000000, 0.0000000]], [[0.0000000, 0.0000000]], [[0.0000000, 0.0000000]]], [[[0.0000000, 0.0000000]], [[0.0000000, 0.0000000]], [[0.0000000, 0.0000000]], [[0.0000000, 0.0000000]]], [[[0.0000000, 0.0000000]], [[0.0000000, 0.0000000]], [[0.0000000, 0.0000000]], [[0.0000000, 0.0000000]]], [[[0.0000000, 0.0000000]], [[0.0000000, 0.0000000]], [[0.0000000, 0.0000000]], [[0.0000000, 0.0000000]]], [[[0.0000000, 0.0000000]], [[0.0000000, 0.0000000]], [[0.0000000, 0.0000000]], [[0.0000000, 0.0000000]]], [[[0.0000000, 0.0000000]], [[0.0000000, 0.0000000]], [[0.0000000, 0.0000000]], [[0.0000000, 0.0000000]]], [[[0.0000000, 0.0000000]], [[0.0000000, 0.0000000]], [[0.0000000, 0.0000000]], [[0.0000000, 0.0000000]]], [[[0.0000000, 0.0000000]], [[0.0000000, 0.0000000]], [[0.0000000, 0.0000000]], [[0.0000000, 0.0000000]]], [[[0.0000000, 0.0000000]], [[0.0000000, 0.0000000]], [[0.0000000, 0.0000000]], [[0.0000000, 0.0000000]]], [[[0.0000000, 0.0000000]], [[0.0000000, 0.0000000]], [[0.0000000, 0.0000000]], [[0.0000000, 0.0000000]]], [[[0.0000000, 0.0000000]], [[0.0000000, 0.0000000]], [[0.0000000, 0.0000000]], [[0.0000000, 0.0000000]]], [[[0.0000000, 0.0000000]], [[0.0000000, 0.0000000]], [[0.0000000, 0.0000000]], [[0.0000000, 0.0000000]]], [[[0.0000000, 0.0000000]], [[0.0000000, 0.0000000]], [[0.0000000, 0.0000000]], [[0.0000000, 0.0000000]]], [[[0.0000000, 0.0000000]], [[0.0000000, 0.0000000]], [[0.0000000, 0.0000000]], [[0.0000000, 0.0000000]]], [[[0.0000000, 0.0000000]], [[0.0000000, 0.0000000]], [[0.0000000, 0.0000000]], [[0.0000000, 0.0000000]]], [[[0.0000000, 0.0000000]], [[0.0000000, 0.0000000]], [[0.0000000, 0.0000000]], [[0.0000000, 0.0000000]]], [[[0.0000000, 0.0000000]], [[0.0000000, 0.0000000]], [[0.0000000, 0.0000000]], [[0.0000000, 0.0000000]]], [[[0.0000000, 0.0000000]], [[0.0000000, 0.0000000]], [[0.0000000, 0.0000000]], [[0.0000000, 0.0000000]]]]]

Expected (Unparsed): [[[[[0.0,0.0]],[[0,0]],[[0,0]],[[0,0]]],[[[0,0]],[[0,0]],[[0,0]],[[0,0]]],[[[0,0]],[[0,0]],[[0,0]],[[0,0]]],[[[0,0]],[[0,0]],[[0,0]],[[0,0]]],[[[0,0]],[[0,0]],[[0,0]],[[0,0]]],[[[0,0]],[[0,0]],[[0,0]],[[0,0]]],[[[0.0,0.0]],[[0,0]],[[0,0]],[[0,0]]],[[[0,0]],[[0,0]],[[0,0]],[[0,0]]],[[[0,0]],[[0,0]],[[0,0]],[[0,0]]],[[[0,0]],[[0,0]],[[0,0]],[[0,0]]],[[[0,0]],[[0,0]],[[0,0]],[[0,0]]],[[[0,0]],[[0,0]],[[0,0]],[[0,0]]],[[[0.0,0.0]],[[0,0]],[[0,0]],[[0,0]]],[[[0,0]],[[0,0]],[[0,0]],[[0,0]]],[[[0,0]],[[0,0]],[[0,0]],[[0,0]]],[[[0,0]],[[0,0]],[[0,0]],[[0,0]]],[[[0,0]],[[0,0]],[[0,0]],[[0,0]]],[[[0,0]],[[0,0]],[[0,0]],[[0,0]]],[[[0.0,0.0]],[[0,0]],[[0,0]],[[0,0]]],[[[0,0]],[[0,0]],[[0,0]],[[0,0]]],[[[0,0]],[[0,0]],[[0,0]],[[0,0]]],[[[0,0]],[[0,0]],[[0,0]],[[0,0]]],[[[0,0]],[[0,0]],[[0,0]],[[0,0]]],[[[0,0]],[[0,0]],[[0,0]],[[0,0]]],[[[0.0,0.0]],[[0,0]],[[0,0]],[[0,0]]],[[[0,0]],[[0,0]],[[0,0]],[[0,0]]],[[[0,0]],[[0,0]],[[0,0]],[[0,0]]],[[[0,0]],[[0,0]],[[0,0]],[[0,0]]],[[[0,0]],[[0,0]],[[0,0]],[[0,0]]],[[[0,0]],[[0,0]],[[0,0]],[[0,0]]],[[[0.0,0.0]],[[0,0]],[[0,0]],[[0,0]]],[[[0,0]],[[0,0]],[[0,0]],[[0,0]]],[[[0,0]],[[0,0]],[[0,0]],[[0,0]]],[[[0,0]],[[0,0]],[[0,0]],[[0,0]]],[[[0,0]],[[0,0]],[[0,0]],[[0,0]]],[[[0,0]],[[0,0]],[[0,0]],[[0,0]]]]]

Actual

Expected: [[[[[0, 0]], [[0, 0]], [[0, 0]], [[0, 0]]], [[[0, 0]], [[0, 0]], [[0, 0]], [[0, 0]]], [[[0, 0]], [[0, 0]], [[0, 0]], [[0, 0]]], [[[0, 0]], [[0, 0]], [[0, 0]], [[0, 0]]], [[[0, 0]], [[0, 0]], [[0, 0]], [[0, 0]]], [[[0, 0]], [[0, 0]], [[0, 0]], [[0, 0]]], [[[0, 0]], [[0, 0]], [[0, 0]], [[0, 0]]], [[[0, 0]], [[0, 0]], [[0, 0]], [[0, 0]]], [[[0, 0]], [[0, 0]], [[0, 0]], [[0, 0]]], [[[0, 0]], [[0, 0]], [[0, 0]], [[0, 0]]], [[[0, 0]], [[0, 0]], [[0, 0]], [[0, 0]]], [[[0, 0]], [[0, 0]], [[0, 0]], [[0, 0]]], [[[0, 0]], [[0, 0]], [[0, 0]], [[0, 0]]], [[[0, 0]], [[0, 0]], [[0, 0]], [[0, 0]]], [[[0, 0]], [[0, 0]], [[0, 0]], [[0, 0]]], [[[0, 0]], [[0, 0]], [[0, 0]], [[0, 0]]], [[[0, 0]], [[0, 0]], [[0, 0]], [[0, 0]]], [[[0, 0]], [[0, 0]], [[0, 0]], [[0, 0]]], [[[0, 0]], [[0, 0]], [[0, 0]], [[0, 0]]], [[[0, 0]], [[0, 0]], [[0, 0]], [[0, 0]]], [[[0, 0]], [[0, 0]], [[0, 0]], [[0, 0]]], [[[0, 0]], [[0, 0]], [[0, 0]], [[0, 0]]], [[[0, 0]], [[0, 0]], [[0, 0]], [[0, 0]]], [[[0, 0]], [[0, 0]], [[0, 0]], [[0, 0]]], [[[0, 0]], [[0, 0]], [[0, 0]], [[0, 0]]], [[[0, 0]], [[0, 0]], [[0, 0]], [[0, 0]]], [[[0, 0]], [[0, 0]], [[0, 0]], [[0, 0]]], [[[0, 0]], [[0, 0]], [[0, 0]], [[0, 0]]], [[[0, 0]], [[0, 0]], [[0, 0]], [[0, 0]]], [[[0, 0]], [[0, 0]], [[0, 0]], [[0, 0]]], [[[0, 0]], [[0, 0]], [[0, 0]], [[0, 0]]], [[[0, 0]], [[0, 0]], [[0, 0]], [[0, 0]]], [[[0, 0]], [[0, 0]], [[0, 0]], [[0, 0]]], [[[0, 0]], [[0, 0]], [[0, 0]], [[0, 0]]], [[[0, 0]], [[0, 0]], [[0, 0]], [[0, 0]]], [[[0, 0]], [[0, 0]], [[0, 0]], [[0, 0]]]]]