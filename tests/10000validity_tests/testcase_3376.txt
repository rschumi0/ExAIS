import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Con93418 = tf.keras.layers.Input(shape=([2, 1, 2, 2]))
in0Mul36129 = tf.keras.layers.Input(shape=([1, 2, 2, 2]))
in1Mul36129 = tf.keras.layers.Input(shape=([1, 2, 2, 2]))

Con93418 = keras.layers.Conv3D(2, (2, 1, 2),strides=(1, 1, 1), padding='valid', dilation_rate=(1, 1, 1), name = 'Con93418', )(in0Con93418)
Lea85708 = keras.layers.LeakyReLU(alpha=5.067097443582093, name = 'Lea85708', )(Con93418)
Zer83998 = keras.layers.ZeroPadding3D(padding=((0, 0), (1, 0), (1, 0)), name = 'Zer83998', )(Lea85708)
Mul36129 = keras.layers.Multiply(name = 'Mul36129', )([in0Mul36129,in1Mul36129])
ReL99392 = keras.layers.ReLU(max_value=2.1217542068212185, negative_slope=5.814488220487427, threshold=1.7483301749444646, name = 'ReL99392', )(Mul36129)
Sub79220 = keras.layers.Subtract(name = 'Sub79220', )([Zer83998,ReL99392])
model = tf.keras.models.Model(inputs=[in0Con93418,in0Mul36129,in1Mul36129], outputs=Sub79220)
w = model.get_layer('Con93418').get_weights() 
w[0] = np.array([[[[[0.3908, 0.7281], [0.0969, 0.4202]], [[0.091, 0.6612], [0.4843, 0.1557]]]], [[[[0.0473, 0.8302], [0.4966, 0.1678]], [[0.8651, 0.722], [0.1647, 0.9838]]]]])
w[1] = np.array([0, 0])
model.get_layer('Con93418').set_weights(w) 
in0Con93418 = tf.constant([[[[[0.4527, 0.4298], [0.7003, 0.367]]], [[[0.0922, 0.8892], [0.4868, 0.6912]]]]])
in0Mul36129 = tf.constant([[[[[0.2756, 0.0746], [0.1443, 0.7215]], [[0.9746, 0.0239], [0.0267, 0.6607]]]]])
in1Mul36129 = tf.constant([[[[[0.2586, 0.1585], [0.116, 0.6217]], [[0.5872, 0.0219], [0.0343, 0.9297]]]]])
print (np.array2string(model.predict([in0Con93418,in0Mul36129,in1Mul36129],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Sub79220.png')

LCon93418 = conv3D_layer([[[[[0.4527, 0.4298], [0.7003, 0.367]]], [[[0.0922, 0.8892], [0.4868, 0.6912]]]]], 2, 1, 2,[[[[[0.3908, 0.7281], [0.0969, 0.4202]], [[0.091, 0.6612], [0.4843, 0.1557]]]], [[[[0.0473, 0.8302], [0.4966, 0.1678]], [[0.8651, 0.722], [0.1647, 0.9838]]]]],[0, 0], 1, 1, 1, false, 1, 1, 1, Con93418), 
LLea85708 = leaky_relu_layer(Con93418, 5.067097443582093, Lea85708), 
LZer83998 = zero_padding3D_layer(Lea85708, 0, 0, 1, 0, 1, 0, Zer83998), 
LMul36129 = multiply_layer([[[[[[0.2756, 0.0746], [0.1443, 0.7215]], [[0.9746, 0.0239], [0.0267, 0.6607]]]]], [[[[[0.2586, 0.1585], [0.116, 0.6217]], [[0.5872, 0.0219], [0.0343, 0.9297]]]]]], Mul36129), 
LReL99392 = relu_layer(Mul36129, 2.1217542068212185, 5.814488220487427, 1.7483301749444646, ReL99392), 
LSub79220 = subtract_layer(Zer83998,ReL99392, Sub79220), 
exec_layers([LCon93418,LLea85708,LZer83998,LMul36129,LReL99392,LSub79220],["Con93418","Lea85708","Zer83998","Mul36129","ReL99392","Sub79220"],Sub79220,"Sub79220")

Actual (Unparsed): [[[[[9.7512457, 10.0968941], [10.0683177, 7.5575186]], [[6.8381001, 10.1626018], [11.6012575, 8.8816968]]]]]

Expected (Unparsed): [[[[[9.75124570194506,10.096894117569448],[10.068317652312219,7.557518431539833]],[[6.838100118737079,10.162601846457829],[11.60125752128011,8.881697045880776]]]]]

Actual:   [[[[[9.7513, 10.0969], [10.0684, 7.5576]], [[6.8382, 10.1627], [11.6013, 8.8817]]]]]

Expected: [[[[[9.7513, 10.0969], [10.0684, 7.5576]], [[6.8382, 10.1627], [11.6013, 8.8817]]]]]