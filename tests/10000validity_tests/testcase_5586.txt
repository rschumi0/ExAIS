import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Mul64121 = tf.keras.layers.Input(shape=([1, 1]))
in1Mul64121 = tf.keras.layers.Input(shape=([1, 1]))
in0Con63447 = tf.keras.layers.Input(shape=([1, 2, 2, 1]))
in0Ave85563 = tf.keras.layers.Input(shape=([1, 2, 1]))
in0Con44564 = tf.keras.layers.Input(shape=([1, 2, 2, 1]))
in0PRe38892 = tf.keras.layers.Input(shape=([1, 2, 2, 2]))

Mul64121 = keras.layers.Multiply(name = 'Mul64121', )([in0Mul64121,in1Mul64121])
Res63605 = keras.layers.Reshape((1, 1, 1), name = 'Res63605', )(Mul64121)
Res879 = keras.layers.Reshape((1, 1, 1, 1), name = 'Res879', )(Res63605)
Zer91989 = keras.layers.ZeroPadding3D(padding=((0, 0), (1, 0), (1, 0)), name = 'Zer91989', )(Res879)
Con63447 = keras.layers.Concatenate(axis=4, name = 'Con63447', )([Zer91989,in0Con63447])
Ave85563 = keras.layers.AveragePooling2D(pool_size=(1, 1), strides=(6, 7), padding='valid', name = 'Ave85563', )(in0Ave85563)
Res17681 = keras.layers.Reshape((1, 1, 1, 1), name = 'Res17681', )(Ave85563)
Zer58979 = keras.layers.ZeroPadding3D(padding=((0, 0), (1, 0), (1, 0)), name = 'Zer58979', )(Res17681)
Con44564 = keras.layers.Concatenate(axis=4, name = 'Con44564', )([Zer58979,in0Con44564])
PRe38892 = keras.layers.PReLU(name = 'PRe38892', input_shape=(1, 2, 2, 2))(in0PRe38892)
Min33434 = keras.layers.Minimum(name = 'Min33434', )([Con44564,PRe38892])
Min82439 = keras.layers.Minimum(name = 'Min82439', )([Con63447,Min33434])
Mas91172 = keras.layers.Masking(mask_value=1, name = 'Mas91172', )(Min82439)
model = tf.keras.models.Model(inputs=[in0Mul64121,in1Mul64121,in0Con63447,in0Ave85563,in0Con44564,in0PRe38892], outputs=Mas91172)
w = model.get_layer('PRe38892').get_weights() 
w[0] = np.array([[[[0.6104, 0.3474], [0.8538, 0.7172]], [[0.2002, 0.258], [0.1131, 0.7567]]]])
model.get_layer('PRe38892').set_weights(w) 
in0Mul64121 = tf.constant([[[0.1317]]])
in1Mul64121 = tf.constant([[[0.4397]]])
in0Con63447 = tf.constant([[[[[0.2178], [0.536]], [[0.3804], [0.8826]]]]])
in0Ave85563 = tf.constant([[[[1.451], [1.5233]]]])
in0Con44564 = tf.constant([[[[[0.488], [0.1569]], [[0.7815], [0.9336]]]]])
in0PRe38892 = tf.constant([[[[[0.4742, 0.6895], [0.7433, 0.0681]], [[0.7761, 0.8814], [0.3428, 0.6296]]]]])
print (np.array2string(model.predict([in0Mul64121,in1Mul64121,in0Con63447,in0Ave85563,in0Con44564,in0PRe38892],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Mas91172.png')

LMul64121 = multiply_layer([[[[0.1317]]], [[[0.4397]]]], Mul64121), 
LRes63605 = reshape_layer(Mul64121, [1, 1, 1], Res63605), 
LRes879 = reshape_layer(Res63605, [1, 1, 1, 1], Res879), 
LZer91989 = zero_padding3D_layer(Res879, 0, 0, 1, 0, 1, 0, Zer91989), 
LCon63447 = concatenate_layer([Zer91989,[[[[[0.2178], [0.536]], [[0.3804], [0.8826]]]]]], 4, Con63447), 
LAve85563 = average_pooling2D_layer([[[[1.451], [1.5233]]]], 1, 1, 6, 7, false, Ave85563), 
LRes17681 = reshape_layer(Ave85563, [1, 1, 1, 1], Res17681), 
LZer58979 = zero_padding3D_layer(Res17681, 0, 0, 1, 0, 1, 0, Zer58979), 
LCon44564 = concatenate_layer([Zer58979,[[[[[0.488], [0.1569]], [[0.7815], [0.9336]]]]]], 4, Con44564), 
LPRe38892 = prelu_layer([[[[[0.4742, 0.6895], [0.7433, 0.0681]], [[0.7761, 0.8814], [0.3428, 0.6296]]]]], [[[[0.6104, 0.3474], [0.8538, 0.7172]], [[0.2002, 0.258], [0.1131, 0.7567]]]], PRe38892), 
LMin33434 = minimum_layer([Con44564,PRe38892], Min33434), 
LMin82439 = minimum_layer([Con63447,Min33434], Min82439), 
LMas91172 = masking_layer(Min82439, 1, Mas91172), 
exec_layers([LMul64121,LRes63605,LRes879,LZer91989,LCon63447,LAve85563,LRes17681,LZer58979,LCon44564,LPRe38892,LMin33434,LMin82439,LMas91172],["Mul64121","Res63605","Res879","Zer91989","Con63447","Ave85563","Res17681","Zer58979","Con44564","PRe38892","Min33434","Min82439","Mas91172"],Mas91172,"Mas91172")

Actual (Unparsed): [[[[[0.0000000, 0.2178000], [0.0000000, 0.0681000]], [[0.0000000, 0.3804000], [0.0579085, 0.6296000]]]]]

Expected (Unparsed): [[[[[0,0.2178],[0,0.0681]],[[0,0.3804],[0.05790849,0.6296]]]]]

Actual:   [[[[[0, 0.2178], [0, 0.0681]], [[0, 0.3804], [0.058, 0.6296]]]]]

Expected: [[[[[0, 0.2178], [0, 0.0681]], [[0, 0.3804], [0.058, 0.6296]]]]]