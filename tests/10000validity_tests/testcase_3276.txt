import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Min98749 = tf.keras.layers.Input(shape=([2, 2, 1]))
in1Min98749 = tf.keras.layers.Input(shape=([2, 2, 1]))

Min98749 = keras.layers.Minimum(name = 'Min98749', )([in0Min98749,in1Min98749])
Lay92641 = keras.layers.LayerNormalization(axis=1, epsilon=2.7951912473055898, name = 'Lay92641', )(Min98749)
Res42854 = keras.layers.Reshape((2, 2), name = 'Res42854', )(Lay92641)
Zer32691 = keras.layers.ZeroPadding1D(padding=((1, 1)), name = 'Zer32691', )(Res42854)
model = tf.keras.models.Model(inputs=[in0Min98749,in1Min98749], outputs=Zer32691)
in0Min98749 = tf.constant([[[[0.0798], [0.9447]], [[0.7723], [0.2343]]]])
in1Min98749 = tf.constant([[[[0.9073], [0.2403]], [[0.5975], [0.8739]]]])
print (np.array2string(model.predict([in0Min98749,in1Min98749],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Zer32691.png')

LMin98749 = minimum_layer([[[[[0.0798], [0.9447]], [[0.7723], [0.2343]]]], [[[[0.9073], [0.2403]], [[0.5975], [0.8739]]]]], Min98749), 
LLay92641 = layer_normalization_layer(Min98749, 1, 2.7951912473055898, Lay92641), 
LRes42854 = reshape_layer(Lay92641, [2, 2], Res42854), 
LZer32691 = zero_padding1D_layer(Res42854, 1, 1, Zer32691), 
exec_layers([LMin98749,LLay92641,LRes42854,LZer32691],["Min98749","Lay92641","Res42854","Zer32691"],Zer32691,"Zer32691")

Actual (Unparsed): [[[0.0000000, 0.0000000], [-0.1530025, 0.0017944], [0.1530025, -0.0017944], [0.0000000, 0.0000000]]]

Expected (Unparsed): [[[0,0],[-0.15300252308475268,0.0017943815357331302],[0.15300252308475268,-0.0017943815357331302],[0,0]]]

Actual:   [[[0, 0], [-0.153, 0.0018], [0.1531, -0.0017], [0, 0]]]

Expected: [[[0, 0], [-0.153, 0.0018], [0.1531, -0.0017], [0, 0]]]