import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Sep94910 = tf.keras.layers.Input(shape=([1, 2, 2]))
in0Con25014 = tf.keras.layers.Input(shape=([4, 6, 1]))
in0Zer30368 = tf.keras.layers.Input(shape=([2, 4, 2]))
in0Ave10514 = tf.keras.layers.Input(shape=([2, 2, 1, 1]))
in1Ave10514 = tf.keras.layers.Input(shape=([2, 2, 1, 1]))

Sep94910 = keras.layers.SeparableConv2D(3, (1, 1),strides=(1, 1), padding='same', name = 'Sep94910', )(in0Sep94910)
Res40120 = keras.layers.Reshape((1, 6), name = 'Res40120', )(Sep94910)
GRU48143 = keras.layers.GRU(2,reset_after=False, recurrent_activation='sigmoid', name = 'GRU48143', )(Res40120)
Res11361 = keras.layers.Reshape((2, 1), name = 'Res11361', )(GRU48143)
Res99314 = keras.layers.Reshape((2, 1, 1), name = 'Res99314', )(Res11361)
Cro35542 = keras.layers.Cropping2D(cropping=((0, 0), (0, 0)), name = 'Cro35542', )(Res99314)
Res10829 = keras.layers.Reshape((2, 1), name = 'Res10829', )(Cro35542)
Per4639 = keras.layers.Permute((2,1), name = 'Per4639',)(Res10829)
Res81473 = keras.layers.Reshape((1, 2, 1), name = 'Res81473', )(Per4639)
Zer27790 = keras.layers.ZeroPadding2D(padding=((3, 0), (4, 0)), name = 'Zer27790', )(Res81473)
Con25014 = keras.layers.Concatenate(axis=3, name = 'Con25014', )([Zer27790,in0Con25014])
Zer30368 = keras.layers.ZeroPadding2D(padding=((1, 1), (1, 1)), name = 'Zer30368', )(in0Zer30368)
Max78994 = keras.layers.Maximum(name = 'Max78994', )([Con25014,Zer30368])
Res69104 = keras.layers.Reshape((4, 6, 2, 1), name = 'Res69104', )(Max78994)
Ave10514 = keras.layers.Average(name = 'Ave10514', )([in0Ave10514,in1Ave10514])
Zer99586 = keras.layers.ZeroPadding3D(padding=((2, 0), (4, 0), (1, 0)), name = 'Zer99586', )(Ave10514)
Add58103 = keras.layers.Add(name = 'Add58103', )([Res69104,Zer99586])
model = tf.keras.models.Model(inputs=[in0Sep94910,in0Con25014,in0Zer30368,in0Ave10514,in1Ave10514], outputs=Add58103)
w = model.get_layer('Sep94910').get_weights() 
w[0] = np.array([[[[0.6701], [0.0079]]]])
w[1] = np.array([[[[0.326, 0.0572, 0.8212], [0.8862, 0.3226, 0.7059]]]])
w[2] = np.array([0, 0, 0])
model.get_layer('Sep94910').set_weights(w) 
w = model.get_layer('GRU48143').get_weights() 
w[0] = np.array([[10, 6, 9, 9, 7, 2], [4, 2, 1, 4, 7, 7], [2, 3, 9, 1, 1, 6], [2, 1, 6, 2, 4, 4], [2, 10, 8, 7, 7, 3], [5, 2, 6, 4, 8, 10]])
w[1] = np.array([[3, 7, 5, 1, 4, 6], [8, 9, 6, 10, 4, 7]])
w[2] = np.array([10, 8, 10, 2, 6, 2])
model.get_layer('GRU48143').set_weights(w) 
in0Sep94910 = tf.constant([[[[0.7226, 0.4955], [0.2589, 0.0251]]]])
in0Con25014 = tf.constant([[[[0.9496], [0.6338], [0.0677], [0.73], [0.1528], [0.6245]], [[0.7398], [0.512], [0.5843], [0.5175], [0.0007], [0.236]], [[0.8627], [0.7632], [0.8987], [0.6329], [0.1314], [0.2488]], [[0.5015], [0.007], [0.4473], [0.247], [0.0204], [0.412]]]])
in0Zer30368 = tf.constant([[[[1.6666, 1.1381], [1.6816, 1.5953], [1.2485, 1.5153], [1.6715, 1.1659]], [[1.6808, 1.2825], [1.2593, 1.8197], [1.7265, 1.4287], [1.9663, 1.1225]]]])
in0Ave10514 = tf.constant([[[[[0.3001]], [[0.2013]]], [[[0.2024]], [[0.2039]]]]])
in1Ave10514 = tf.constant([[[[[0.3534]], [[0.3603]]], [[[0.8132]], [[0.1811]]]]])
print (np.array2string(model.predict([in0Sep94910,in0Con25014,in0Zer30368,in0Ave10514,in1Ave10514],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Add58103.png')

LSep94910 = separable_conv2D_layer([[[[0.7226, 0.4955], [0.2589, 0.0251]]]], 1, 1,[[[[[0.6701], [0.0079]]]],[[[[0.326, 0.0572, 0.8212], [0.8862, 0.3226, 0.7059]]]]],[0, 0, 0], 1, 1, true, Sep94910), 
LRes40120 = reshape_layer(Sep94910, [1, 6], Res40120), 
LGRU48143 = gru_layer(Res40120,[[10, 6, 9, 9, 7, 2], [4, 2, 1, 4, 7, 7], [2, 3, 9, 1, 1, 6], [2, 1, 6, 2, 4, 4], [2, 10, 8, 7, 7, 3], [5, 2, 6, 4, 8, 10]],[[3, 7, 5, 1, 4, 6], [8, 9, 6, 10, 4, 7]],[10, 8, 10, 2, 6, 2], false, GRU48143), 
LRes11361 = reshape_layer(GRU48143, [2, 1], Res11361), 
LRes99314 = reshape_layer(Res11361, [2, 1, 1], Res99314), 
LCro35542 = cropping2D_layer(Res99314, 0, 0, 0, 0, Cro35542), 
LRes10829 = reshape_layer(Cro35542, [2, 1], Res10829), 
LPer4639 = permute_layer(Res10829, 2,1, Per4639), 
LRes81473 = reshape_layer(Per4639, [1, 2, 1], Res81473), 
LZer27790 = zero_padding2D_layer(Res81473, 3, 0, 4, 0, Zer27790), 
LCon25014 = concatenate_layer([Zer27790,[[[[0.9496], [0.6338], [0.0677], [0.73], [0.1528], [0.6245]], [[0.7398], [0.512], [0.5843], [0.5175], [0.0007], [0.236]], [[0.8627], [0.7632], [0.8987], [0.6329], [0.1314], [0.2488]], [[0.5015], [0.007], [0.4473], [0.247], [0.0204], [0.412]]]]], 3, Con25014), 
LZer30368 = zero_padding2D_layer([[[[1.6666, 1.1381], [1.6816, 1.5953], [1.2485, 1.5153], [1.6715, 1.1659]], [[1.6808, 1.2825], [1.2593, 1.8197], [1.7265, 1.4287], [1.9663, 1.1225]]]], 1, 1, 1, 1, Zer30368), 
LMax78994 = maximum_layer([Con25014,Zer30368], Max78994), 
LRes69104 = reshape_layer(Max78994, [4, 6, 2, 1], Res69104), 
LAve10514 = average_layer([[[[[[0.3001]], [[0.2013]]], [[[0.2024]], [[0.2039]]]]], [[[[[0.3534]], [[0.3603]]], [[[0.8132]], [[0.1811]]]]]], Ave10514), 
LZer99586 = zero_padding3D_layer(Ave10514, 2, 0, 4, 0, 1, 0, Zer99586), 
LAdd58103 = add_layer([Res69104,Zer99586], Add58103), 
exec_layers([LSep94910,LRes40120,LGRU48143,LRes11361,LRes99314,LCro35542,LRes10829,LPer4639,LRes81473,LZer27790,LCon25014,LZer30368,LMax78994,LRes69104,LAve10514,LZer99586,LAdd58103],["Sep94910","Res40120","GRU48143","Res11361","Res99314","Cro35542","Res10829","Per4639","Res81473","Zer27790","Con25014","Zer30368","Max78994","Res69104","Ave10514","Zer99586","Add58103"],Add58103,"Add58103")

Actual (Unparsed): [[[[[0.0000000], [0.9496000]], [[0.0000000], [0.6338000]], [[0.0000000], [0.0677000]], [[0.0000000], [0.7300000]], [[0.0000000], [0.1528000]], [[0.0000000], [0.6245000]]], [[[0.0000000], [0.7398000]], [[1.6666000], [1.1381000]], [[1.6816000], [1.5953000]], [[1.2485000], [1.5153000]], [[1.6715000], [1.1659000]], [[0.0000000], [0.2360000]]], [[[0.0000000], [0.8627000]], [[1.6808000], [1.2825000]], [[1.2593000], [1.8197000]], [[1.7265000], [1.4287000]], [[1.9663000], [1.4492499]], [[0.0000000], [0.5296000]]], [[[0.0000000], [0.5015000]], [[0.0000000], [0.0070000]], [[0.0000000], [0.4473000]], [[0.0000000], [0.2470000]], [[0.0000016], [0.5282000]], [[0.0000233], [0.6045000]]]]]

Expected (Unparsed): [[[[[0],[0.9496]],[[0],[0.6338]],[[0],[0.0677]],[[0],[0.73]],[[0],[0.1528]],[[0],[0.6245]]],[[[0],[0.7398]],[[1.6666],[1.1381]],[[1.6816],[1.5953]],[[1.2485],[1.5153]],[[1.6715],[1.1659]],[[0],[0.236]]],[[[0],[0.8627]],[[1.6808],[1.2825]],[[1.2593],[1.8197]],[[1.7265],[1.4287]],[[1.9663],[1.4492500000000001]],[[0],[0.5296]]],[[[0],[0.5015]],[[0],[0.007]],[[0],[0.4473]],[[0],[0.247]],[[1.5513953832814214e-6],[0.5282]],[[2.325686938619819e-5],[0.6045]]]]]

Actual:   [[[[[0], [0.9496]], [[0], [0.6338]], [[0], [0.0677]], [[0], [0.73]], [[0], [0.1528]], [[0], [0.6245]]], [[[0], [0.7398]], [[1.6666], [1.1381]], [[1.6816], [1.5953]], [[1.2485], [1.5153]], [[1.6715], [1.1659]], [[0], [0.236]]], [[[0], [0.8627]], [[1.6808], [1.2825]], [[1.2593], [1.8197]], [[1.7265], [1.4287]], [[1.9663], [1.4493]], [[0], [0.5296]]], [[[0], [0.5015]], [[0], [0.007]], [[0], [0.4473]], [[0], [0.247]], [[0], [0.5282]], [[0.0001], [0.6045]]]]]

Expected: [[[[[0], [0.9496]], [[0], [0.6338]], [[0], [0.0677]], [[0], [0.73]], [[0], [0.1528]], [[0], [0.6245]]], [[[0], [0.7398]], [[1.6666], [1.1381]], [[1.6816], [1.5953]], [[1.2485], [1.5153]], [[1.6715], [1.1659]], [[0], [0.236]]], [[[0], [0.8627]], [[1.6808], [1.2825]], [[1.2593], [1.8197]], [[1.7265], [1.4287]], [[1.9663], [1.4493]], [[0], [0.5296]]], [[[0], [0.5015]], [[0], [0.007]], [[0], [0.4473]], [[0], [0.247]], [[0], [0.5282]], [[0.0001], [0.6045]]]]]