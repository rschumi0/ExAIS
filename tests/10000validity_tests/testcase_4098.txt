import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Ave13498 = tf.keras.layers.Input(shape=([1, 2]))
in1Ave13498 = tf.keras.layers.Input(shape=([1, 2]))
in0Con73470 = tf.keras.layers.Input(shape=([1, 2, 3]))
in0Cro64248 = tf.keras.layers.Input(shape=([3, 1, 4, 2]))

Ave13498 = keras.layers.Average(name = 'Ave13498', )([in0Ave13498,in1Ave13498])
Res21720 = keras.layers.Reshape((1, 2, 1), name = 'Res21720', )(Ave13498)
Con73470 = keras.layers.Concatenate(axis=3, name = 'Con73470', )([Res21720,in0Con73470])
Cro64248 = keras.layers.Cropping3D(cropping=((2, 0), (0, 0), (1, 1)), name = 'Cro64248', )(in0Cro64248)
Res13608 = keras.layers.Reshape((1, 1, 4), name = 'Res13608', )(Cro64248)
Ave3879 = keras.layers.AveragePooling2D(pool_size=(1, 1), name = 'Ave3879', )(Res13608)
Zer94110 = keras.layers.ZeroPadding2D(padding=((0, 0), (1, 0)), name = 'Zer94110', )(Ave3879)
Mul86844 = keras.layers.Multiply(name = 'Mul86844', )([Con73470,Zer94110])
Sof57819 = keras.layers.Softmax(axis=1, name = 'Sof57819', )(Mul86844)
model = tf.keras.models.Model(inputs=[in0Ave13498,in1Ave13498,in0Con73470,in0Cro64248], outputs=Sof57819)
in0Ave13498 = tf.constant([[[0.4402, 0.8049]]])
in1Ave13498 = tf.constant([[[0.6704, 0.5749]]])
in0Con73470 = tf.constant([[[[0.3078, 0.5664, 0.989], [0.5311, 0.5826, 0.3363]]]])
in0Cro64248 = tf.constant([[[[[1.2231, 1.1259], [1.4387, 1.7228], [1.1613, 1.1355], [1.8462, 1.5697]]], [[[1.3767, 1.9948], [1.308, 1.4469], [1.2818, 1.587], [1.9139, 1.7241]]], [[[1.912, 1.7653], [1.2047, 1.701], [1.7025, 1.5277], [1.0653, 1.1744]]]]])
print (np.array2string(model.predict([in0Ave13498,in1Ave13498,in0Con73470,in0Cro64248],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Sof57819.png')

LAve13498 = average_layer([[[[0.4402, 0.8049]]], [[[0.6704, 0.5749]]]], Ave13498), 
LRes21720 = reshape_layer(Ave13498, [1, 2, 1], Res21720), 
LCon73470 = concatenate_layer([Res21720,[[[[0.3078, 0.5664, 0.989], [0.5311, 0.5826, 0.3363]]]]], 3, Con73470), 
LCro64248 = cropping3D_layer([[[[[1.2231, 1.1259], [1.4387, 1.7228], [1.1613, 1.1355], [1.8462, 1.5697]]], [[[1.3767, 1.9948], [1.308, 1.4469], [1.2818, 1.587], [1.9139, 1.7241]]], [[[1.912, 1.7653], [1.2047, 1.701], [1.7025, 1.5277], [1.0653, 1.1744]]]]], 2, 0, 0, 0, 1, 1, Cro64248), 
LRes13608 = reshape_layer(Cro64248, [1, 1, 4], Res13608), 
LAve3879 = average_pooling2D_layer(Res13608, 1, 1, Ave3879), 
LZer94110 = zero_padding2D_layer(Ave3879, 0, 0, 1, 0, Zer94110), 
LMul86844 = multiply_layer([Con73470,Zer94110], Mul86844), 
LSof57819 = softmax_layer(Mul86844, 1, Sof57819), 
exec_layers([LAve13498,LRes21720,LCon73470,LCro64248,LRes13608,LAve3879,LZer94110,LMul86844,LSof57819],["Ave13498","Res21720","Con73470","Cro64248","Res13608","Ave3879","Zer94110","Mul86844","Sof57819"],Sof57819,"Sof57819")

Actual (Unparsed): [[[[1.0000000, 1.0000000, 1.0000000, 1.0000000], [1.0000000, 1.0000000, 1.0000000, 1.0000000]]]]

Expected (Unparsed): [[[[1.0,1.0,1.0,1.0],[1.0,1.0,1.0,1.0]]]]

Actual:   [[[[1, 1, 1, 1], [1, 1, 1, 1]]]]

Expected: [[[[1, 1, 1, 1], [1, 1, 1, 1]]]]