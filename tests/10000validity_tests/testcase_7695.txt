import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Min24190 = tf.keras.layers.Input(shape=([1, 1, 1, 2]))
in1Min24190 = tf.keras.layers.Input(shape=([1, 1, 1, 2]))

Min24190 = keras.layers.Minimum(name = 'Min24190', )([in0Min24190,in1Min24190])
Lea94681 = keras.layers.LeakyReLU(alpha=5.688715767812128, name = 'Lea94681', )(Min24190)
Sof45524 = keras.layers.Softmax(axis=1, name = 'Sof45524', )(Lea94681)
model = tf.keras.models.Model(inputs=[in0Min24190,in1Min24190], outputs=Sof45524)
in0Min24190 = tf.constant([[[[[0.0384, 0.8496]]]]])
in1Min24190 = tf.constant([[[[[0.0836, 0.1171]]]]])
print (np.array2string(model.predict([in0Min24190,in1Min24190],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Sof45524.png')

LMin24190 = minimum_layer([[[[[[0.0384, 0.8496]]]]], [[[[[0.0836, 0.1171]]]]]], Min24190), 
LLea94681 = leaky_relu_layer(Min24190, 5.688715767812128, Lea94681), 
LSof45524 = softmax_layer(Lea94681, 1, Sof45524), 
exec_layers([LMin24190,LLea94681,LSof45524],["Min24190","Lea94681","Sof45524"],Sof45524,"Sof45524")

Actual (Unparsed): [[[[[1.0000000, 1.0000000]]]]]

Expected (Unparsed): [[[[[1.0,1.0]]]]]

Actual:   [[[[[1, 1]]]]]

Expected: [[[[[1, 1]]]]]