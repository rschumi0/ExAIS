import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Ave40536 = tf.keras.layers.Input(shape=([2, 2]))
in0Dot74546 = tf.keras.layers.Input(shape=([2]))
in1Dot74546 = tf.keras.layers.Input(shape=([2]))
in0Ave2788 = tf.keras.layers.Input(shape=([1, 1]))
in1Ave2788 = tf.keras.layers.Input(shape=([1, 1]))
in0Con83591 = tf.keras.layers.Input(shape=([1, 1, 1, 2]))

Ave40536 = keras.layers.AveragePooling1D(pool_size=(2), strides=(2), padding='valid', name = 'Ave40536', )(in0Ave40536)
Dot74546 = keras.layers.Dot(axes=(1, 1), name = 'Dot74546', )([in0Dot74546,in1Dot74546])
Res72943 = keras.layers.Reshape((1, 1), name = 'Res72943', )(Dot74546)
Ave2788 = keras.layers.Average(name = 'Ave2788', )([in0Ave2788,in1Ave2788])
Ave50735 = keras.layers.Average(name = 'Ave50735', )([Res72943,Ave2788])
Con83591 = keras.layers.Conv3D(2, (1, 1, 1),strides=(1, 1, 1), padding='valid', dilation_rate=(1, 1, 1), name = 'Con83591', )(in0Con83591)
Res97846 = keras.layers.Reshape((1, 1, 2), name = 'Res97846', )(Con83591)
Res91763 = keras.layers.Reshape((1, 2), name = 'Res91763', )(Res97846)
Dot34647 = keras.layers.Dot(axes=(1, 1), name = 'Dot34647', )([Ave50735,Res91763])
Mul96157 = keras.layers.Multiply(name = 'Mul96157', )([Ave40536,Dot34647])
model = tf.keras.models.Model(inputs=[in0Ave40536,in0Dot74546,in1Dot74546,in0Ave2788,in1Ave2788,in0Con83591], outputs=Mul96157)
w = model.get_layer('Con83591').get_weights() 
w[0] = np.array([[[[[0.2923, 0.9513], [0.3589, 0.5933]]]]])
w[1] = np.array([0, 0])
model.get_layer('Con83591').set_weights(w) 
in0Ave40536 = tf.constant([[[1.6392, 1.8792], [1.7403, 1.9065]]])
in0Dot74546 = tf.constant([[0.1829, 0.385]])
in1Dot74546 = tf.constant([[0.7654, 0.9715]])
in0Ave2788 = tf.constant([[[0.8364]]])
in1Ave2788 = tf.constant([[[0.008]]])
in0Con83591 = tf.constant([[[[[0.6129, 0.6028]]]]])
print (np.array2string(model.predict([in0Ave40536,in0Dot74546,in1Dot74546,in0Ave2788,in1Ave2788,in0Con83591],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Mul96157.png')

LAve40536 = average_pooling1D_layer([[[1.6392, 1.8792], [1.7403, 1.9065]]], 2, 2, false, Ave40536), 
LDot74546 = dot_layer([[0.1829, 0.385]], [[0.7654, 0.9715]], 1, 1, Dot74546), 
LRes72943 = reshape_layer(Dot74546, [1, 1], Res72943), 
LAve2788 = average_layer([[[[0.8364]]], [[[0.008]]]], Ave2788), 
LAve50735 = average_layer([Res72943,Ave2788], Ave50735), 
LCon83591 = conv3D_layer([[[[[0.6129, 0.6028]]]]], 1, 1, 1,[[[[[0.2923, 0.9513], [0.3589, 0.5933]]]]],[0, 0], 1, 1, 1, false, 1, 1, 1, Con83591), 
LRes97846 = reshape_layer(Con83591, [1, 1, 2], Res97846), 
LRes91763 = reshape_layer(Res97846, [1, 2], Res91763), 
LDot34647 = dot_layer(Ave50735,Res91763, 1, 1, Dot34647), 
LMul96157 = multiply_layer([Ave40536,Dot34647], Mul96157), 
exec_layers([LAve40536,LDot74546,LRes72943,LAve2788,LAve50735,LCon83591,LRes97846,LRes91763,LDot34647,LMul96157],["Ave40536","Dot74546","Res72943","Ave2788","Ave50735","Con83591","Res97846","Res91763","Dot34647","Mul96157"],Mul96157,"Mul96157")

Actual (Unparsed): [[[0.3128323, 0.8335116]]]

Expected (Unparsed): [[[0.3128323301315796,0.8335115946778549]]]

Actual:   [[[0.3129, 0.8336]]]

Expected: [[[0.3129, 0.8336]]]