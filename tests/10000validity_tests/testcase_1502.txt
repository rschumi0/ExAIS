import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Dot70400 = tf.keras.layers.Input(shape=([3, 3]))
in1Dot70400 = tf.keras.layers.Input(shape=([3, 3]))
in0Sub60608 = tf.keras.layers.Input(shape=([3, 3]))
in1Sub60608 = tf.keras.layers.Input(shape=([3, 3]))
in0Con19985 = tf.keras.layers.Input(shape=([3, 9]))

Dot70400 = keras.layers.Dot(axes=(1, 1), name = 'Dot70400', )([in0Dot70400,in1Dot70400])
Res96791 = keras.layers.Reshape((3, 3, 1), name = 'Res96791', )(Dot70400)
Loc71584 = keras.layers.LocallyConnected2D(4, (3, 1),strides=(1, 1), name = 'Loc71584', )(Res96791)
Res75710 = keras.layers.Reshape((1, 12), name = 'Res75710', )(Loc71584)
Zer37788 = keras.layers.ZeroPadding1D(padding=((2, 0)), name = 'Zer37788', )(Res75710)
Sub60608 = keras.layers.Subtract(name = 'Sub60608', )([in0Sub60608,in1Sub60608])
Con19985 = keras.layers.Concatenate(axis=2, name = 'Con19985', )([Sub60608,in0Con19985])
Ave99006 = keras.layers.Average(name = 'Ave99006', )([Zer37788,Con19985])
model = tf.keras.models.Model(inputs=[in0Dot70400,in1Dot70400,in0Sub60608,in1Sub60608,in0Con19985], outputs=Ave99006)
w = model.get_layer('Loc71584').get_weights() 
w[0] = np.array([[[0.1071, 0.6979, 0.0194, 0.8057], [0.5779, 0.8427, 0.0555, 0.7786], [0.9933, 0.7406, 0.3785, 0.7844]], [[0.9346, 0.7671, 0.1243, 0.4301], [0.7076, 0.1075, 0.1901, 0.524], [0.9425, 0.612, 0.1024, 0.1393]], [[0.9511, 0.7658, 0.3643, 0.3459], [0.2002, 0.3135, 0.337, 0.6614], [0.1942, 0.7051, 0.3503, 0.733]]])
w[1] = np.array([[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]])
model.get_layer('Loc71584').set_weights(w) 
in0Dot70400 = tf.constant([[[0.0632, 0.3154, 0.6549], [0.9609, 0.6009, 0.666], [0.4305, 0.8887, 0.136]]])
in1Dot70400 = tf.constant([[[0.7357, 0.146, 0.5596], [0.846, 0.5719, 0.5833], [0.0936, 0.6205, 0.828]]])
in0Sub60608 = tf.constant([[[0.475, 0.7451, 0.2005], [0.8003, 0.7403, 0.9974], [0.7321, 0.0032, 0.4125]]])
in1Sub60608 = tf.constant([[[0.1409, 0.3092, 0.6701], [0.5976, 0.5933, 0.6131], [0.1298, 0.4657, 0.5504]]])
in0Con19985 = tf.constant([[[0.5339, 0.7269, 0.7193, 0.6684, 0.1617, 0.2539, 0.1222, 0.9974, 0.8063], [0.831, 0.0436, 0.5926, 0.9537, 0.9988, 0.1122, 0.3776, 0.881, 0.8099], [0.2702, 0.2896, 0.1821, 0.2634, 0.9056, 0.8178, 0.7937, 0.5774, 0.7085]]])
print (np.array2string(model.predict([in0Dot70400,in1Dot70400,in0Sub60608,in1Sub60608,in0Con19985],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Ave99006.png')

LDot70400 = dot_layer([[[0.0632, 0.3154, 0.6549], [0.9609, 0.6009, 0.666], [0.4305, 0.8887, 0.136]]], [[[0.7357, 0.146, 0.5596], [0.846, 0.5719, 0.5833], [0.0936, 0.6205, 0.828]]], 1, 1, Dot70400), 
LRes96791 = reshape_layer(Dot70400, [3, 3, 1], Res96791), 
LLoc71584 = locally_connected2D_layer(Res96791, 3, 1,[[[0.1071, 0.6979, 0.0194, 0.8057], [0.5779, 0.8427, 0.0555, 0.7786], [0.9933, 0.7406, 0.3785, 0.7844]], [[0.9346, 0.7671, 0.1243, 0.4301], [0.7076, 0.1075, 0.1901, 0.524], [0.9425, 0.612, 0.1024, 0.1393]], [[0.9511, 0.7658, 0.3643, 0.3459], [0.2002, 0.3135, 0.337, 0.6614], [0.1942, 0.7051, 0.3503, 0.733]]],[[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]], 1, 1, Loc71584), 
LRes75710 = reshape_layer(Loc71584, [1, 12], Res75710), 
LZer37788 = zero_padding1D_layer(Res75710, 2, 0, Zer37788), 
LSub60608 = subtract_layer([[[0.475, 0.7451, 0.2005], [0.8003, 0.7403, 0.9974], [0.7321, 0.0032, 0.4125]]], [[[0.1409, 0.3092, 0.6701], [0.5976, 0.5933, 0.6131], [0.1298, 0.4657, 0.5504]]], Sub60608), 
LCon19985 = concatenate_layer([Sub60608,[[[0.5339, 0.7269, 0.7193, 0.6684, 0.1617, 0.2539, 0.1222, 0.9974, 0.8063], [0.831, 0.0436, 0.5926, 0.9537, 0.9988, 0.1122, 0.3776, 0.881, 0.8099], [0.2702, 0.2896, 0.1821, 0.2634, 0.9056, 0.8178, 0.7937, 0.5774, 0.7085]]]], 2, Con19985), 
LAve99006 = average_layer([Zer37788,Con19985], Ave99006), 
exec_layers([LDot70400,LRes96791,LLoc71584,LRes75710,LZer37788,LSub60608,LCon19985,LAve99006],["Dot70400","Res96791","Loc71584","Res75710","Zer37788","Sub60608","Con19985","Ave99006"],Ave99006,"Ave99006")

Actual (Unparsed): [[[0.1670500, 0.2179500, -0.2348000, 0.2669500, 0.3634500, 0.3596500, 0.3342000, 0.0808500, 0.1269500, 0.0611000, 0.4987000, 0.4031500], [0.1013500, 0.0735000, 0.1921500, 0.4155000, 0.0218000, 0.2963000, 0.4768500, 0.4994000, 0.0561000, 0.1888000, 0.4405000, 0.4049500], [1.1127476, 0.8214899, 0.1628535, 1.2331082, 1.1280337, 0.6300389, 0.3012021, 0.9160529, 1.0724245, 1.2653031, 0.8269081, 1.2545396]]]

Expected (Unparsed): [[[0.16704999999999998,0.21795,-0.2348,0.26695,0.36345,0.35965,0.3342,0.08085,0.12695,0.0611,0.4987,0.40315],[0.10135,0.07349999999999995,0.19215,0.4155,0.0218,0.2963,0.47685,0.4994,0.0561,0.1888,0.4405,0.40495],[1.1127476004615,0.8214899024219999,0.1628535218455,1.23310821587,1.128033634616,0.6300388806930001,0.301202137927,0.916052861398,1.0724245381845,1.2653031286604999,0.8269080658945,1.2545395738325]]]

Actual:   [[[0.1671, 0.218, -0.2348, 0.267, 0.3635, 0.3597, 0.3342, 0.0809, 0.127, 0.0611, 0.4987, 0.4032], [0.1014, 0.0735, 0.1922, 0.4155, 0.0218, 0.2963, 0.4769, 0.4994, 0.0561, 0.1888, 0.4405, 0.405], [1.1128, 0.8215, 0.1629, 1.2332, 1.1281, 0.6301, 0.3013, 0.9161, 1.0725, 1.2654, 0.827, 1.2546]]]

Expected: [[[0.1671, 0.218, -0.2348, 0.267, 0.3635, 0.3597, 0.3342, 0.0809, 0.127, 0.0611, 0.4987, 0.4032], [0.1014, 0.0735, 0.1922, 0.4155, 0.0218, 0.2963, 0.4769, 0.4994, 0.0561, 0.1888, 0.4405, 0.405], [1.1128, 0.8215, 0.1629, 1.2332, 1.1281, 0.6301, 0.3013, 0.9161, 1.0725, 1.2654, 0.827, 1.2546]]]