import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Sep4235 = tf.keras.layers.Input(shape=([1, 2]))
in0Con84697 = tf.keras.layers.Input(shape=([12, 2]))
in0Sub42963 = tf.keras.layers.Input(shape=([2]))
in1Sub42963 = tf.keras.layers.Input(shape=([2]))

Sep4235 = keras.layers.SeparableConv1D(2, (1),strides=(1), padding='same', name = 'Sep4235', )(in0Sep4235)
Res43217 = keras.layers.Reshape((1, 2, 1), name = 'Res43217', )(Sep4235)
Res89517 = keras.layers.Reshape((1, 2, 1, 1), name = 'Res89517', )(Res43217)
Zer12887 = keras.layers.ZeroPadding3D(padding=((1, 1), (1, 1), (1, 1)), name = 'Zer12887', )(Res89517)
Res45124 = keras.layers.Reshape((3, 4, 3), name = 'Res45124', )(Zer12887)
Res70635 = keras.layers.Reshape((3, 12), name = 'Res70635', )(Res45124)
Glo5805 = keras.layers.GlobalAveragePooling1D(name = 'Glo5805', )(Res70635)
Res89016 = keras.layers.Reshape((12, 1), name = 'Res89016', )(Glo5805)
Con84697 = keras.layers.Concatenate(axis=2, name = 'Con84697', )([Res89016,in0Con84697])
Sub42963 = keras.layers.Subtract(name = 'Sub42963', )([in0Sub42963,in1Sub42963])
Res41801 = keras.layers.Reshape((2, 1), name = 'Res41801', )(Sub42963)
Sep80654 = keras.layers.SeparableConv1D(3, (1),strides=(1), padding='valid', name = 'Sep80654', )(Res41801)
Zer51973 = keras.layers.ZeroPadding1D(padding=((10, 0)), name = 'Zer51973', )(Sep80654)
Min89131 = keras.layers.Minimum(name = 'Min89131', )([Con84697,Zer51973])
model = tf.keras.models.Model(inputs=[in0Sep4235,in0Con84697,in0Sub42963,in1Sub42963], outputs=Min89131)
w = model.get_layer('Sep4235').get_weights() 
w[0] = np.array([[[0.3361], [0.4174]]])
w[1] = np.array([[[0.6358, 0.0335], [0.6048, 0.0206]]])
w[2] = np.array([0, 0])
model.get_layer('Sep4235').set_weights(w) 
w = model.get_layer('Sep80654').get_weights() 
w[0] = np.array([[[0.2354]]])
w[1] = np.array([[[0.5314, 0.8035, 0.2776]]])
w[2] = np.array([0, 0, 0])
model.get_layer('Sep80654').set_weights(w) 
in0Sep4235 = tf.constant([[[0.2959, 0.4564]]])
in0Con84697 = tf.constant([[[0.8618, 0.7443], [0.3705, 0.0722], [0.5306, 0.5172], [0.1615, 0.8843], [0.1596, 0.273], [0.7121, 0.2065], [0.2189, 0.2258], [0.0084, 0.1813], [0.21, 0.1882], [0.7231, 0.679], [0.5588, 0.0049], [0.6748, 0.321]]])
in0Sub42963 = tf.constant([[0.6728, 0.7935]])
in1Sub42963 = tf.constant([[0.0685, 0.4024]])
print (np.array2string(model.predict([in0Sep4235,in0Con84697,in0Sub42963,in1Sub42963],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Min89131.png')

LSep4235 = separable_conv1D_layer([[[0.2959, 0.4564]]], 1,[[[[0.3361], [0.4174]]],[[[0.6358, 0.0335], [0.6048, 0.0206]]]],[0, 0], 1, true, Sep4235), 
LRes43217 = reshape_layer(Sep4235, [1, 2, 1], Res43217), 
LRes89517 = reshape_layer(Res43217, [1, 2, 1, 1], Res89517), 
LZer12887 = zero_padding3D_layer(Res89517, 1, 1, 1, 1, 1, 1, Zer12887), 
LRes45124 = reshape_layer(Zer12887, [3, 4, 3], Res45124), 
LRes70635 = reshape_layer(Res45124, [3, 12], Res70635), 
LGlo5805 = global_average_pooling1D_layer(Res70635, Glo5805), 
LRes89016 = reshape_layer(Glo5805, [12, 1], Res89016), 
LCon84697 = concatenate_layer([Res89016,[[[0.8618, 0.7443], [0.3705, 0.0722], [0.5306, 0.5172], [0.1615, 0.8843], [0.1596, 0.273], [0.7121, 0.2065], [0.2189, 0.2258], [0.0084, 0.1813], [0.21, 0.1882], [0.7231, 0.679], [0.5588, 0.0049], [0.6748, 0.321]]]], 2, Con84697), 
LSub42963 = subtract_layer([[0.6728, 0.7935]], [[0.0685, 0.4024]], Sub42963), 
LRes41801 = reshape_layer(Sub42963, [2, 1], Res41801), 
LSep80654 = separable_conv1D_layer(Res41801, 1,[[[[0.2354]]],[[[0.5314, 0.8035, 0.2776]]]],[0, 0, 0], 1, false, Sep80654), 
LZer51973 = zero_padding1D_layer(Sep80654, 10, 0, Zer51973), 
LMin89131 = minimum_layer([Con84697,Zer51973], Min89131), 
exec_layers([LSep4235,LRes43217,LRes89517,LZer12887,LRes45124,LRes70635,LGlo5805,LRes89016,LCon84697,LSub42963,LRes41801,LSep80654,LZer51973,LMin89131],["Sep4235","Res43217","Res89517","Zer12887","Res45124","Res70635","Glo5805","Res89016","Con84697","Sub42963","Res41801","Sep80654","Zer51973","Min89131"],Min89131,"Min89131")

Actual (Unparsed): [[[0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.1142997, 0.0049000], [0.0000000, 0.0739742, 0.0255572]]]

Expected (Unparsed): [[[0,0,0],[0,0,0],[0,0,0],[0,0,0],[0,0,0],[0,0,0],[0,0,0],[0,0,0],[0,0,0],[0,0,0],[0,0.11429965876999999,0.0049],[0,0.07397417929,0.025557227344]]]

Actual:   [[[0, 0, 0], [0, 0, 0], [0, 0, 0], [0, 0, 0], [0, 0, 0], [0, 0, 0], [0, 0, 0], [0, 0, 0], [0, 0, 0], [0, 0, 0], [0, 0.1143, 0.0049], [0, 0.074, 0.0256]]]

Expected: [[[0, 0, 0], [0, 0, 0], [0, 0, 0], [0, 0, 0], [0, 0, 0], [0, 0, 0], [0, 0, 0], [0, 0, 0], [0, 0, 0], [0, 0, 0], [0, 0.1143, 0.0049], [0, 0.074, 0.0256]]]