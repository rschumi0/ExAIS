import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Mul51388 = tf.keras.layers.Input(shape=([1, 2]))
in1Mul51388 = tf.keras.layers.Input(shape=([1, 2]))
in0Con82882 = tf.keras.layers.Input(shape=([3, 3, 1]))
in0Max71312 = tf.keras.layers.Input(shape=([1, 1, 2]))
in0Sub41683 = tf.keras.layers.Input(shape=([2, 2, 2]))
in1Sub41683 = tf.keras.layers.Input(shape=([2, 2, 2]))

Mul51388 = keras.layers.Multiply(name = 'Mul51388', )([in0Mul51388,in1Mul51388])
Cro68458 = keras.layers.Cropping1D(cropping=((0, 0)), name = 'Cro68458', )(Mul51388)
Den72451 = keras.layers.Dense(3,name = 'Den72451', )(Cro68458)
Glo51303 = keras.layers.GlobalMaxPool1D(name = 'Glo51303', )(Den72451)
Res16015 = keras.layers.Reshape((3, 1), name = 'Res16015', )(Glo51303)
Res2666 = keras.layers.Reshape((3, 1, 1), name = 'Res2666', )(Res16015)
Zer17415 = keras.layers.ZeroPadding2D(padding=((0, 0), (2, 0)), name = 'Zer17415', )(Res2666)
Con82882 = keras.layers.Concatenate(axis=3, name = 'Con82882', )([Zer17415,in0Con82882])
Max71312 = keras.layers.MaxPool2D(pool_size=(1, 1), strides=(1, 11), padding='valid', name = 'Max71312', )(in0Max71312)
Zer6453 = keras.layers.ZeroPadding2D(padding=((1, 0), (1, 0)), name = 'Zer6453', )(Max71312)
Sub41683 = keras.layers.Subtract(name = 'Sub41683', )([in0Sub41683,in1Sub41683])
Sub59685 = keras.layers.Subtract(name = 'Sub59685', )([Zer6453,Sub41683])
ReL32440 = keras.layers.ReLU(max_value=5.1937206428753715, negative_slope=2.6771443484913897, threshold=7.331364906045042, name = 'ReL32440', )(Sub59685)
Zer21828 = keras.layers.ZeroPadding2D(padding=((1, 0), (1, 0)), name = 'Zer21828', )(ReL32440)
Sub86855 = keras.layers.Subtract(name = 'Sub86855', )([Con82882,Zer21828])
Up_56449 = keras.layers.UpSampling2D(size=(1, 2), name = 'Up_56449', )(Sub86855)
model = tf.keras.models.Model(inputs=[in0Mul51388,in1Mul51388,in0Con82882,in0Max71312,in0Sub41683,in1Sub41683], outputs=Up_56449)
w = model.get_layer('Den72451').get_weights() 
w[0] = np.array([[0.9649, 0.463, 0.8616], [0.1377, 0.5524, 0.1574]])
w[1] = np.array([0.9371, 0.8201, 0.0858])
model.get_layer('Den72451').set_weights(w) 
in0Mul51388 = tf.constant([[[0.6789, 0.7612]]])
in1Mul51388 = tf.constant([[[0.3528, 0.3807]]])
in0Con82882 = tf.constant([[[[0.5116], [0.5334], [0.4305]], [[0.5587], [0.2185], [0.3919]], [[0.4583], [0.7735], [0.8075]]]])
in0Max71312 = tf.constant([[[[1.3216, 1.5372]]]])
in0Sub41683 = tf.constant([[[[0.7385, 0.2121], [0.9951, 0.5932]], [[0.4505, 0.7369], [0.6922, 0.5739]]]])
in1Sub41683 = tf.constant([[[[0.6672, 0.5058], [0.5471, 0.4277]], [[0.7849, 0.7193], [0.1923, 0.6521]]]])
print (np.array2string(model.predict([in0Mul51388,in1Mul51388,in0Con82882,in0Max71312,in0Sub41683,in1Sub41683],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Up_56449.png')

LMul51388 = multiply_layer([[[[0.6789, 0.7612]]], [[[0.3528, 0.3807]]]], Mul51388), 
LCro68458 = cropping1D_layer(Mul51388, 0, 0, Cro68458), 
LDen72451 = dense_layer(Cro68458, [[0.9649, 0.463, 0.8616], [0.1377, 0.5524, 0.1574]],[0.9371, 0.8201, 0.0858], Den72451), 
LGlo51303 = global_max_pool1D_layer(Den72451, Glo51303), 
LRes16015 = reshape_layer(Glo51303, [3, 1], Res16015), 
LRes2666 = reshape_layer(Res16015, [3, 1, 1], Res2666), 
LZer17415 = zero_padding2D_layer(Res2666, 0, 0, 2, 0, Zer17415), 
LCon82882 = concatenate_layer([Zer17415,[[[[0.5116], [0.5334], [0.4305]], [[0.5587], [0.2185], [0.3919]], [[0.4583], [0.7735], [0.8075]]]]], 3, Con82882), 
LMax71312 = max_pool2D_layer([[[[1.3216, 1.5372]]]], 1, 1, 1, 11, false, Max71312), 
LZer6453 = zero_padding2D_layer(Max71312, 1, 0, 1, 0, Zer6453), 
LSub41683 = subtract_layer([[[[0.7385, 0.2121], [0.9951, 0.5932]], [[0.4505, 0.7369], [0.6922, 0.5739]]]], [[[[0.6672, 0.5058], [0.5471, 0.4277]], [[0.7849, 0.7193], [0.1923, 0.6521]]]], Sub41683), 
LSub59685 = subtract_layer(Zer6453,Sub41683, Sub59685), 
LReL32440 = relu_layer(Sub59685, 5.1937206428753715, 2.6771443484913897, 7.331364906045042, ReL32440), 
LZer21828 = zero_padding2D_layer(ReL32440, 1, 0, 1, 0, Zer21828), 
LSub86855 = subtract_layer(Con82882,Zer21828, Sub86855), 
LUp_56449 = up_sampling2D_layer(Sub86855, 1, 2, Up_56449), 
exec_layers([LMul51388,LCro68458,LDen72451,LGlo51303,LRes16015,LRes2666,LZer17415,LCon82882,LMax71312,LZer6453,LSub41683,LSub59685,LReL32440,LZer21828,LSub86855,LUp_56449],["Mul51388","Cro68458","Den72451","Glo51303","Res16015","Res2666","Zer17415","Con82882","Max71312","Zer6453","Sub41683","Sub59685","ReL32440","Zer21828","Sub86855","Up_56449"],Up_56449,"Up_56449")

Actual (Unparsed): [[[[0.0000000, 0.5116000], [0.0000000, 0.5116000], [0.0000000, 0.5334000], [0.0000000, 0.5334000], [1.2081128, 0.4305000], [1.2081128, 0.4305000]], [[0.0000000, 0.5587000], [0.0000000, 0.5587000], [19.8180024, 19.0593448], [19.8180024, 19.0593448], [21.9175581, 20.4620896], [21.9175581, 20.4620896]], [[0.0000000, 0.4583000], [0.0000000, 0.4583000], [18.7318851, 20.4477399], [18.7318851, 20.4477399], [17.7650924, 16.1099631], [17.7650924, 16.1099631]]]]

Expected (Unparsed): [[[[0,0.5116],[0,0.5116],[0,0.5334],[0,0.5334],[1.2081128344760002,0.4305],[1.2081128344760002,0.4305]],[[0,0.5587],[0,0.5587],[19.818002516994028,19.059344829794668],[19.818002516994028,19.059344829794668],[21.917558019246734,20.462089514621915],[21.917558019246734,20.462089514621915]],[[0,0.4583],[0,0.4583],[18.73188505481107,20.447739865480038],[18.73188505481107,20.447739865480038],[17.765092293879217,16.1099631443936],[17.765092293879217,16.1099631443936]]]]

Actual:   [[[[0, 0.5116], [0, 0.5116], [0, 0.5334], [0, 0.5334], [1.2082, 0.4305], [1.2082, 0.4305]], [[0, 0.5587], [0, 0.5587], [19.8181, 19.0594], [19.8181, 19.0594], [21.9176, 20.4621], [21.9176, 20.4621]], [[0, 0.4583], [0, 0.4583], [18.7319, 20.4478], [18.7319, 20.4478], [17.7651, 16.11], [17.7651, 16.11]]]]

Expected: [[[[0, 0.5116], [0, 0.5116], [0, 0.5334], [0, 0.5334], [1.2082, 0.4305], [1.2082, 0.4305]], [[0, 0.5587], [0, 0.5587], [19.8181, 19.0594], [19.8181, 19.0594], [21.9176, 20.4621], [21.9176, 20.4621]], [[0, 0.4583], [0, 0.4583], [18.7319, 20.4478], [18.7319, 20.4478], [17.7651, 16.11], [17.7651, 16.11]]]]