import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Min92769 = tf.keras.layers.Input(shape=([1, 1]))
in1Min92769 = tf.keras.layers.Input(shape=([1, 1]))
in0Con67352 = tf.keras.layers.Input(shape=([1, 2, 1]))
in0Min84867 = tf.keras.layers.Input(shape=([1, 1, 2]))
in1Min84867 = tf.keras.layers.Input(shape=([1, 1, 2]))
in0Con47280 = tf.keras.layers.Input(shape=([3, 3, 3, 3]))
in0Loc27761 = tf.keras.layers.Input(shape=([1, 1]))

Min92769 = keras.layers.Minimum(name = 'Min92769', )([in0Min92769,in1Min92769])
Sep7937 = keras.layers.SeparableConv1D(2, (1),strides=(1), padding='same', name = 'Sep7937', )(Min92769)
Res62568 = keras.layers.Reshape((1, 2, 1), name = 'Res62568', )(Sep7937)
Con67352 = keras.layers.Concatenate(axis=3, name = 'Con67352', )([Res62568,in0Con67352])
Min84867 = keras.layers.Minimum(name = 'Min84867', )([in0Min84867,in1Min84867])
Zer64191 = keras.layers.ZeroPadding2D(padding=((0, 0), (1, 0)), name = 'Zer64191', )(Min84867)
Max96186 = keras.layers.Maximum(name = 'Max96186', )([Con67352,Zer64191])
Res62801 = keras.layers.Reshape((1, 2, 2, 1), name = 'Res62801', )(Max96186)
Zer54454 = keras.layers.ZeroPadding3D(padding=((2, 0), (1, 0), (1, 0)), name = 'Zer54454', )(Res62801)
Con47280 = keras.layers.Concatenate(axis=4, name = 'Con47280', )([Zer54454,in0Con47280])
Loc27761 = keras.layers.LocallyConnected1D(4, (1),strides=(1), name = 'Loc27761', )(in0Loc27761)
Up_48977 = keras.layers.UpSampling1D(size=(2), name = 'Up_48977', )(Loc27761)
Res81138 = keras.layers.Reshape((2, 4, 1), name = 'Res81138', )(Up_48977)
Loc18427 = keras.layers.LocallyConnected2D(2, (1, 3),strides=(1, 3), name = 'Loc18427', )(Res81138)
Res31890 = keras.layers.Reshape((2, 1, 2, 1), name = 'Res31890', )(Loc18427)
Con87509 = keras.layers.Conv3DTranspose(4, (2, 1, 2),strides=(1, 1, 1), padding='valid', name = 'Con87509', )(Res31890)
Zer64506 = keras.layers.ZeroPadding3D(padding=((0, 0), (2, 0), (0, 0)), name = 'Zer64506', )(Con87509)
Sub58481 = keras.layers.Subtract(name = 'Sub58481', )([Con47280,Zer64506])
model = tf.keras.models.Model(inputs=[in0Min92769,in1Min92769,in0Con67352,in0Min84867,in1Min84867,in0Con47280,in0Loc27761], outputs=Sub58481)
w = model.get_layer('Sep7937').get_weights() 
w[0] = np.array([[[0.6802]]])
w[1] = np.array([[[0.2398, 0.2995]]])
w[2] = np.array([0, 0])
model.get_layer('Sep7937').set_weights(w) 
w = model.get_layer('Loc27761').get_weights() 
w[0] = np.array([[[0.2233, 0.2177, 0.9639, 0.7962]]])
w[1] = np.array([[0, 0, 0, 0]])
model.get_layer('Loc27761').set_weights(w) 
w = model.get_layer('Loc18427').get_weights() 
w[0] = np.array([[[0.5419, 0.5698], [0.2406, 0.4497], [0.1469, 0.9792]], [[0.8754, 0.3995], [0.2583, 0.7187], [0.1934, 0.0901]]])
w[1] = np.array([[[0, 0]], [[0, 0]]])
model.get_layer('Loc18427').set_weights(w) 
w = model.get_layer('Con87509').get_weights() 
w[0] = np.array([[[[[0.646], [0.0594], [0.3989], [0.1427]], [[0.5221], [0.9706], [0.7891], [0.6567]]]], [[[[0.9807], [0.6214], [0.4236], [0.838]], [[0.394], [0.9288], [0.5075], [0.9613]]]]])
w[1] = np.array([0, 0, 0, 0])
model.get_layer('Con87509').set_weights(w) 
in0Min92769 = tf.constant([[[0.2172]]])
in1Min92769 = tf.constant([[[0.1641]]])
in0Con67352 = tf.constant([[[[0.4554], [0.174]]]])
in0Min84867 = tf.constant([[[[0.0608, 0.0298]]]])
in1Min84867 = tf.constant([[[[0.6169, 0.0873]]]])
in0Con47280 = tf.constant([[[[[0.647, 0.2459, 0.9723], [0.1439, 0.8664, 0.2151], [0.3001, 0.4204, 0.912]], [[0.2214, 0.1818, 0.2985], [0.3132, 0.493, 0.8493], [0.3558, 0.8541, 0.6124]], [[0.9369, 0.3053, 0.5712], [0.9788, 0.2843, 0.4141], [0.9922, 0.5164, 0.2835]]], [[[0.6725, 0.9643, 0.4219], [0.9538, 0.5781, 0.3525], [0.9589, 0.5031, 0.8844]], [[0.3511, 0.3114, 0.7362], [0.433, 0.1419, 0.2896], [0.302, 0.2316, 0.1605]], [[0.2441, 0.4399, 0.2743], [0.2862, 0.8912, 0.5794], [0.206, 0.8562, 0.8746]]], [[[0.8763, 0.8293, 0.5267], [0.8009, 0.5261, 0.6204], [0.6492, 0.169, 0.486]], [[0.8778, 0.014, 0.0893], [0.0592, 0.8628, 0.5223], [0.9342, 0.6453, 0.3049]], [[0.593, 0.0969, 0.8464], [0.946, 0.885, 0.8478], [0.0336, 0.3745, 0.2189]]]]])
in0Loc27761 = tf.constant([[[0.9906]]])
print (np.array2string(model.predict([in0Min92769,in1Min92769,in0Con67352,in0Min84867,in1Min84867,in0Con47280,in0Loc27761],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Sub58481.png')

LMin92769 = minimum_layer([[[[0.2172]]], [[[0.1641]]]], Min92769), 
LSep7937 = separable_conv1D_layer(Min92769, 1,[[[[0.6802]]],[[[0.2398, 0.2995]]]],[0, 0], 1, true, Sep7937), 
LRes62568 = reshape_layer(Sep7937, [1, 2, 1], Res62568), 
LCon67352 = concatenate_layer([Res62568,[[[[0.4554], [0.174]]]]], 3, Con67352), 
LMin84867 = minimum_layer([[[[[0.0608, 0.0298]]]], [[[[0.6169, 0.0873]]]]], Min84867), 
LZer64191 = zero_padding2D_layer(Min84867, 0, 0, 1, 0, Zer64191), 
LMax96186 = maximum_layer([Con67352,Zer64191], Max96186), 
LRes62801 = reshape_layer(Max96186, [1, 2, 2, 1], Res62801), 
LZer54454 = zero_padding3D_layer(Res62801, 2, 0, 1, 0, 1, 0, Zer54454), 
LCon47280 = concatenate_layer([Zer54454,[[[[[0.647, 0.2459, 0.9723], [0.1439, 0.8664, 0.2151], [0.3001, 0.4204, 0.912]], [[0.2214, 0.1818, 0.2985], [0.3132, 0.493, 0.8493], [0.3558, 0.8541, 0.6124]], [[0.9369, 0.3053, 0.5712], [0.9788, 0.2843, 0.4141], [0.9922, 0.5164, 0.2835]]], [[[0.6725, 0.9643, 0.4219], [0.9538, 0.5781, 0.3525], [0.9589, 0.5031, 0.8844]], [[0.3511, 0.3114, 0.7362], [0.433, 0.1419, 0.2896], [0.302, 0.2316, 0.1605]], [[0.2441, 0.4399, 0.2743], [0.2862, 0.8912, 0.5794], [0.206, 0.8562, 0.8746]]], [[[0.8763, 0.8293, 0.5267], [0.8009, 0.5261, 0.6204], [0.6492, 0.169, 0.486]], [[0.8778, 0.014, 0.0893], [0.0592, 0.8628, 0.5223], [0.9342, 0.6453, 0.3049]], [[0.593, 0.0969, 0.8464], [0.946, 0.885, 0.8478], [0.0336, 0.3745, 0.2189]]]]]], 4, Con47280), 
LLoc27761 = locally_connected1D_layer([[[0.9906]]], 1,[[[0.2233, 0.2177, 0.9639, 0.7962]]],[[0, 0, 0, 0]], 1, Loc27761), 
LUp_48977 = up_sampling1D_layer(Loc27761, 2, Up_48977), 
LRes81138 = reshape_layer(Up_48977, [2, 4, 1], Res81138), 
LLoc18427 = locally_connected2D_layer(Res81138, 1, 3,[[[0.5419, 0.5698], [0.2406, 0.4497], [0.1469, 0.9792]], [[0.8754, 0.3995], [0.2583, 0.7187], [0.1934, 0.0901]]],[[[0, 0]], [[0, 0]]], 1, 3, Loc18427), 
LRes31890 = reshape_layer(Loc18427, [2, 1, 2, 1], Res31890), 
LCon87509 = conv3D_transpose_layer(Res31890, 2, 1, 2,[[[[[0.646], [0.0594], [0.3989], [0.1427]], [[0.5221], [0.9706], [0.7891], [0.6567]]]], [[[[0.9807], [0.6214], [0.4236], [0.838]], [[0.394], [0.9288], [0.5075], [0.9613]]]]],[0, 0, 0, 0], 1, 1, 1, false, Con87509), 
LZer64506 = zero_padding3D_layer(Con87509, 0, 0, 2, 0, 0, 0, Zer64506), 
LSub58481 = subtract_layer(Con47280,Zer64506, Sub58481), 
exec_layers([LMin92769,LSep7937,LRes62568,LCon67352,LMin84867,LZer64191,LMax96186,LRes62801,LZer54454,LCon47280,LLoc27761,LUp_48977,LRes81138,LLoc18427,LRes31890,LCon87509,LZer64506,LSub58481],["Min92769","Sep7937","Res62568","Con67352","Min84867","Zer64191","Max96186","Res62801","Zer54454","Con47280","Loc27761","Up_48977","Res81138","Loc18427","Res31890","Con87509","Zer64506","Sub58481"],Sub58481,"Sub58481")

Actual (Unparsed): [[[[[0.0000000, 0.6470000, 0.2459000, 0.9723000], [0.0000000, 0.1439000, 0.8664000, 0.2151000], [0.0000000, 0.3001000, 0.4204000, 0.9120000]], [[0.0000000, 0.2214000, 0.1818000, 0.2985000], [0.0000000, 0.3132000, 0.4930000, 0.8493000], [0.0000000, 0.3558000, 0.8541000, 0.6124000]], [[-0.2015655, 0.9183660, 0.1808348, 0.5266746], [-0.9109731, 0.6071673, -0.4238413, 0.0439494], [-0.6045910, -0.1317533, -0.3973766, -0.4769576]]], [[[0.0000000, 0.6725000, 0.9643000, 0.4219000], [0.0000000, 0.9538000, 0.5781000, 0.3525000], [0.0000000, 0.9589000, 0.5031000, 0.8844000]], [[0.0000000, 0.3511000, 0.3114000, 0.7362000], [0.0000000, 0.4330000, 0.1419000, 0.2896000], [0.0000000, 0.3020000, 0.2316000, 0.1605000]], [[-0.5863685, 0.0244301, 0.1346019, -0.0491066], [-1.6979678, -1.1639999, -0.2315490, -1.0229660], [-0.6282265, -1.1892559, 0.0085933, -0.4548950]]], [[[0.0000000, 0.8763000, 0.8293000, 0.5267000], [0.0000000, 0.8009000, 0.5261000, 0.6204000], [0.0000000, 0.6492000, 0.1690000, 0.4860000]], [[0.0000000, 0.8778000, 0.0140000, 0.0893000], [0.0267667, 0.0592000, 0.8628000, 0.5223000], [0.4554000, 0.9342000, 0.6453000, 0.3049000]], [[-0.4256322, 0.3233071, -0.0869460, 0.4827008], [-0.4332332, 0.3382092, 0.5252106, 0.1545578], [0.0442199, -0.2723384, 0.2073340, -0.0977436]]]]]

Expected (Unparsed): [[[[[0,0.647,0.2459,0.9723],[0,0.1439,0.8664,0.2151],[0,0.3001,0.4204,0.912]],[[0,0.2214,0.1818,0.2985],[0,0.3132,0.493,0.8493],[0,0.3558,0.8541,0.6124]],[[-0.20156554731768003,0.918365954317848,0.180834834636188,0.526674607426884],[-0.910973136748584,0.6071673385468196,-0.42384132322127743,0.04394945189609978],[-0.6045909818933166,-0.13175327911444779,-0.39737656351659867,-0.4769575709813082]]],[[[0,0.6725,0.9643,0.4219],[0,0.9538,0.5781,0.3525],[0,0.9589,0.5031,0.8844]],[[0,0.3511,0.3114,0.7362],[0,0.433,0.1419,0.2896],[0,0.302,0.2316,0.1605]],[[-0.58636851954408,0.024430057951024403,0.1346018875888354,-0.04910660045619386],[-1.6979678470075779,-1.163999877517482,-0.23154906131216935,-1.0229659976577343],[-0.6282264616966339,-1.1892559198126276,0.008593299731599169,-0.45489501115416453]]],[[[0,0.8763,0.8293,0.5267],[0,0.8009,0.5261,0.6204],[0,0.6492,0.169,0.486]],[[0,0.8778,0.014,0.0893],[0.026766672636,0.0592,0.8628,0.5223],[0.4554,0.9342,0.6453,0.3049]],[[-0.42563223038552583,0.3233070582629084,-0.08694604139013841,0.48270079630562807],[-0.43323321197399267,0.3382092031627395,0.5252105789689783,0.15455781742813368],[0.04421991734122796,-0.2723384283590544,0.20733403058546498,-0.09774363822303947]]]]]

Actual:   [[[[[0, 0.647, 0.2459, 0.9723], [0, 0.1439, 0.8664, 0.2151], [0, 0.3001, 0.4204, 0.912]], [[0, 0.2214, 0.1818, 0.2985], [0, 0.3132, 0.493, 0.8493], [0, 0.3558, 0.8541, 0.6124]], [[-0.2015, 0.9184, 0.1809, 0.5267], [-0.9109, 0.6072, -0.4238, 0.044], [-0.6045, -0.1317, -0.3973, -0.4769]]], [[[0, 0.6725, 0.9643, 0.4219], [0, 0.9538, 0.5781, 0.3525], [0, 0.9589, 0.5031, 0.8844]], [[0, 0.3511, 0.3114, 0.7362], [0, 0.433, 0.1419, 0.2896], [0, 0.302, 0.2316, 0.1605]], [[-0.5863, 0.0245, 0.1347, -0.0491], [-1.6979, -1.1639, -0.2315, -1.0229], [-0.6282, -1.1892, 0.0086, -0.4548]]], [[[0, 0.8763, 0.8293, 0.5267], [0, 0.8009, 0.5261, 0.6204], [0, 0.6492, 0.169, 0.486]], [[0, 0.8778, 0.014, 0.0893], [0.0268, 0.0592, 0.8628, 0.5223], [0.4554, 0.9342, 0.6453, 0.3049]], [[-0.4256, 0.3234, -0.0869, 0.4828], [-0.4332, 0.3383, 0.5253, 0.1546], [0.0443, -0.2723, 0.2074, -0.0977]]]]]

Expected: [[[[[0, 0.647, 0.2459, 0.9723], [0, 0.1439, 0.8664, 0.2151], [0, 0.3001, 0.4204, 0.912]], [[0, 0.2214, 0.1818, 0.2985], [0, 0.3132, 0.493, 0.8493], [0, 0.3558, 0.8541, 0.6124]], [[-0.2015, 0.9184, 0.1809, 0.5267], [-0.9109, 0.6072, -0.4238, 0.044], [-0.6045, -0.1317, -0.3973, -0.4769]]], [[[0, 0.6725, 0.9643, 0.4219], [0, 0.9538, 0.5781, 0.3525], [0, 0.9589, 0.5031, 0.8844]], [[0, 0.3511, 0.3114, 0.7362], [0, 0.433, 0.1419, 0.2896], [0, 0.302, 0.2316, 0.1605]], [[-0.5863, 0.0245, 0.1347, -0.0491], [-1.6979, -1.1639, -0.2315, -1.0229], [-0.6282, -1.1892, 0.0086, -0.4548]]], [[[0, 0.8763, 0.8293, 0.5267], [0, 0.8009, 0.5261, 0.6204], [0, 0.6492, 0.169, 0.486]], [[0, 0.8778, 0.014, 0.0893], [0.0268, 0.0592, 0.8628, 0.5223], [0.4554, 0.9342, 0.6453, 0.3049]], [[-0.4256, 0.3234, -0.0869, 0.4828], [-0.4332, 0.3383, 0.5253, 0.1546], [0.0443, -0.2723, 0.2074, -0.0977]]]]]