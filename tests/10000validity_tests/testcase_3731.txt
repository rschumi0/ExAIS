import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Ave72082 = tf.keras.layers.Input(shape=([1, 1, 2]))
in1Ave72082 = tf.keras.layers.Input(shape=([1, 1, 2]))
in0Dot94385 = tf.keras.layers.Input(shape=([2]))
in1Dot94385 = tf.keras.layers.Input(shape=([2]))
in0Con48299 = tf.keras.layers.Input(shape=([1]))
in0Sim51508 = tf.keras.layers.Input(shape=([1, 1]))

Ave72082 = keras.layers.Average(name = 'Ave72082', )([in0Ave72082,in1Ave72082])
Res14789 = keras.layers.Reshape((1, 2), name = 'Res14789', )(Ave72082)
Fla21551 = keras.layers.Flatten(name = 'Fla21551', )(Res14789)
Dot94385 = keras.layers.Dot(axes=(1, 1), name = 'Dot94385', )([in0Dot94385,in1Dot94385])
Con48299 = keras.layers.Concatenate(axis=1, name = 'Con48299', )([Dot94385,in0Con48299])
Mul3107 = keras.layers.Multiply(name = 'Mul3107', )([Fla21551,Con48299])
Res73541 = keras.layers.Reshape((2, 1), name = 'Res73541', )(Mul3107)
Max29613 = keras.layers.MaxPool1D(pool_size=(1), name = 'Max29613', )(Res73541)
Res37057 = keras.layers.Reshape((2, 1, 1), name = 'Res37057', )(Max29613)
Sim51508 = keras.layers.SimpleRNN(1,name = 'Sim51508', )(in0Sim51508)
Den62905 = keras.layers.Dense(3,name = 'Den62905', )(Sim51508)
Res20013 = keras.layers.Reshape((3, 1), name = 'Res20013', )(Den62905)
Ave21868 = keras.layers.AveragePooling1D(pool_size=(3), name = 'Ave21868', )(Res20013)
Res54014 = keras.layers.Reshape((1, 1, 1), name = 'Res54014', )(Ave21868)
Cro46348 = keras.layers.Cropping2D(cropping=((0, 0), (0, 0)), name = 'Cro46348', )(Res54014)
Zer39044 = keras.layers.ZeroPadding2D(padding=((1, 0), (0, 0)), name = 'Zer39044', )(Cro46348)
Add5058 = keras.layers.Add(name = 'Add5058', )([Res37057,Zer39044])
model = tf.keras.models.Model(inputs=[in0Ave72082,in1Ave72082,in0Dot94385,in1Dot94385,in0Con48299,in0Sim51508], outputs=Add5058)
w = model.get_layer('Sim51508').get_weights() 
w[0] = np.array([[1]])
w[1] = np.array([[9]])
w[2] = np.array([3])
model.get_layer('Sim51508').set_weights(w) 
w = model.get_layer('Den62905').get_weights() 
w[0] = np.array([[0.8709, 0.9997, 0.8775]])
w[1] = np.array([0.0937, 0.3238, 0.5212])
model.get_layer('Den62905').set_weights(w) 
in0Ave72082 = tf.constant([[[[0.1904, 0.7216]]]])
in1Ave72082 = tf.constant([[[[0.9419, 0.4651]]]])
in0Dot94385 = tf.constant([[0.248, 0.7487]])
in1Dot94385 = tf.constant([[0.4749, 0.7775]])
in0Con48299 = tf.constant([[0.6261]])
in0Sim51508 = tf.constant([[[9]]])
print (np.array2string(model.predict([in0Ave72082,in1Ave72082,in0Dot94385,in1Dot94385,in0Con48299,in0Sim51508],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Add5058.png')

LAve72082 = average_layer([[[[[0.1904, 0.7216]]]], [[[[0.9419, 0.4651]]]]], Ave72082), 
LRes14789 = reshape_layer(Ave72082, [1, 2], Res14789), 
LFla21551 = flatten_layer(Res14789, Fla21551), 
LDot94385 = dot_layer([[0.248, 0.7487]], [[0.4749, 0.7775]], 1, 1, Dot94385), 
LCon48299 = concatenate_layer([Dot94385,[[0.6261]]], 1, Con48299), 
LMul3107 = multiply_layer([Fla21551,Con48299], Mul3107), 
LRes73541 = reshape_layer(Mul3107, [2, 1], Res73541), 
LMax29613 = max_pool1D_layer(Res73541, 1, Max29613), 
LRes37057 = reshape_layer(Max29613, [2, 1, 1], Res37057), 
LSim51508 = simple_rnn_layer([[[9]]],[[1]],[[9]],[3], Sim51508), 
LDen62905 = dense_layer(Sim51508, [[0.8709, 0.9997, 0.8775]],[0.0937, 0.3238, 0.5212], Den62905), 
LRes20013 = reshape_layer(Den62905, [3, 1], Res20013), 
LAve21868 = average_pooling1D_layer(Res20013, 3, Ave21868), 
LRes54014 = reshape_layer(Ave21868, [1, 1, 1], Res54014), 
LCro46348 = cropping2D_layer(Res54014, 0, 0, 0, 0, Cro46348), 
LZer39044 = zero_padding2D_layer(Cro46348, 1, 0, 0, 0, Zer39044), 
LAdd5058 = add_layer([Res37057,Zer39044], Add5058), 
exec_layers([LAve72082,LRes14789,LFla21551,LDot94385,LCon48299,LMul3107,LRes73541,LMax29613,LRes37057,LSim51508,LDen62905,LRes20013,LAve21868,LRes54014,LCro46348,LZer39044,LAdd5058],["Ave72082","Res14789","Fla21551","Dot94385","Con48299","Mul3107","Res73541","Max29613","Res37057","Sim51508","Den62905","Res20013","Ave21868","Res54014","Cro46348","Zer39044","Add5058"],Add5058,"Add5058")

Actual (Unparsed): [[[[0.3962424]], [[1.6004298]]]]

Expected (Unparsed): [[[[0.39624241211749994]],[[1.6004297682641704]]]]

Actual:   [[[[0.3963]], [[1.6005]]]]

Expected: [[[[0.3963]], [[1.6005]]]]