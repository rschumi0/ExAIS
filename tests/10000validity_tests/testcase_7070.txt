import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Dot17218 = tf.keras.layers.Input(shape=([3, 3]))
in1Dot17218 = tf.keras.layers.Input(shape=([3, 3]))
in0Min28747 = tf.keras.layers.Input(shape=([1, 2, 2, 2]))
in1Min28747 = tf.keras.layers.Input(shape=([1, 2, 2, 2]))
in0Ave64963 = tf.keras.layers.Input(shape=([1, 2, 1]))
in0Con70594 = tf.keras.layers.Input(shape=([1, 2, 3]))
in0Con81192 = tf.keras.layers.Input(shape=([2, 1]))
in0Con10227 = tf.keras.layers.Input(shape=([1, 4]))
in0Con36504 = tf.keras.layers.Input(shape=([3, 4]))

Dot17218 = keras.layers.Dot(axes=(1, 2), name = 'Dot17218', )([in0Dot17218,in1Dot17218])
Res26412 = keras.layers.Reshape((3, 3, 1), name = 'Res26412', )(Dot17218)
Loc18092 = keras.layers.LocallyConnected2D(4, (1, 1),strides=(1, 1), name = 'Loc18092', )(Res26412)
Res68811 = keras.layers.Reshape((3, 12), name = 'Res68811', )(Loc18092)
Min28747 = keras.layers.Minimum(name = 'Min28747', )([in0Min28747,in1Min28747])
Res8513 = keras.layers.Reshape((1, 2, 4), name = 'Res8513', )(Min28747)
Ave64963 = keras.layers.AveragePooling2D(pool_size=(1, 2), strides=(1, 1), padding='valid', name = 'Ave64963', )(in0Ave64963)
Zer6129 = keras.layers.ZeroPadding2D(padding=((0, 0), (1, 0)), name = 'Zer6129', )(Ave64963)
Con70594 = keras.layers.Concatenate(axis=3, name = 'Con70594', )([Zer6129,in0Con70594])
Add96030 = keras.layers.Add(name = 'Add96030', )([Res8513,Con70594])
Res77385 = keras.layers.Reshape((1, 8), name = 'Res77385', )(Add96030)
Con81192 = keras.layers.Conv1D(4, (2),strides=(2), padding='same', dilation_rate=(1), name = 'Con81192', )(in0Con81192)
Con10227 = keras.layers.Concatenate(axis=2, name = 'Con10227', )([Con81192,in0Con10227])
Min2396 = keras.layers.Minimum(name = 'Min2396', )([Res77385,Con10227])
Zer19267 = keras.layers.ZeroPadding1D(padding=((2, 0)), name = 'Zer19267', )(Min2396)
Con36504 = keras.layers.Concatenate(axis=2, name = 'Con36504', )([Zer19267,in0Con36504])
Add91139 = keras.layers.Add(name = 'Add91139', )([Res68811,Con36504])
model = tf.keras.models.Model(inputs=[in0Dot17218,in1Dot17218,in0Min28747,in1Min28747,in0Ave64963,in0Con70594,in0Con81192,in0Con10227,in0Con36504], outputs=Add91139)
w = model.get_layer('Loc18092').get_weights() 
w[0] = np.array([[[0.9965, 0.9034, 0.1976, 0.5675]], [[0.9187, 0.3806, 0.0846, 0.0906]], [[0.5793, 0.2565, 0.7512, 0.4009]], [[0.5772, 0.3969, 0.9673, 0.5123]], [[0.2748, 0.2909, 0.3997, 0.5925]], [[0.3481, 0.7123, 0.5391, 0.6563]], [[0.9963, 0.7181, 0.1326, 0.3645]], [[0.6414, 0.731, 0.8921, 0.4114]], [[0.7098, 0.6232, 0.8979, 0.6761]]])
w[1] = np.array([[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]], [[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]], [[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]])
model.get_layer('Loc18092').set_weights(w) 
w = model.get_layer('Con81192').get_weights() 
w[0] = np.array([[[0.2296, 0.753, 0.2383, 0.2038]], [[0.0373, 0.4695, 0.086, 0.3177]]])
w[1] = np.array([0, 0, 0, 0])
model.get_layer('Con81192').set_weights(w) 
in0Dot17218 = tf.constant([[[0.6529, 0.3542, 0.5977], [0.0719, 0.343, 0.7256], [0.8244, 0.8747, 0.2984]]])
in1Dot17218 = tf.constant([[[0.6334, 0.4082, 0.2222], [0.5937, 0.9247, 0.6517], [0.2425, 0.8633, 0.911]]])
in0Min28747 = tf.constant([[[[[0.9935, 0.1783], [0.4914, 0.2068]], [[0.7469, 0.5919], [0.4437, 0.1953]]]]])
in1Min28747 = tf.constant([[[[[0.0422, 0.7469], [0.6427, 0.9004]], [[0.878, 0.6548], [0.7464, 0.7233]]]]])
in0Ave64963 = tf.constant([[[[1.1599], [1.6003]]]])
in0Con70594 = tf.constant([[[[0.2103, 0.0536, 0.6037], [0.9624, 0.3757, 0.0874]]]])
in0Con81192 = tf.constant([[[0.4201], [0.7195]]])
in0Con10227 = tf.constant([[[0.8422, 0.8127, 0.8524, 0.2708]]])
in0Con36504 = tf.constant([[[0.6938, 0.3006, 0.2957, 0.2333], [0.224, 0.9117, 0.1735, 0.255], [0.6329, 0.319, 0.497, 0.4443]]])
print (np.array2string(model.predict([in0Dot17218,in1Dot17218,in0Min28747,in1Min28747,in0Ave64963,in0Con70594,in0Con81192,in0Con10227,in0Con36504],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Add91139.png')

LDot17218 = dot_layer([[[0.6529, 0.3542, 0.5977], [0.0719, 0.343, 0.7256], [0.8244, 0.8747, 0.2984]]], [[[0.6334, 0.4082, 0.2222], [0.5937, 0.9247, 0.6517], [0.2425, 0.8633, 0.911]]], 1, 2, Dot17218), 
LRes26412 = reshape_layer(Dot17218, [3, 3, 1], Res26412), 
LLoc18092 = locally_connected2D_layer(Res26412, 1, 1,[[[0.9965, 0.9034, 0.1976, 0.5675]], [[0.9187, 0.3806, 0.0846, 0.0906]], [[0.5793, 0.2565, 0.7512, 0.4009]], [[0.5772, 0.3969, 0.9673, 0.5123]], [[0.2748, 0.2909, 0.3997, 0.5925]], [[0.3481, 0.7123, 0.5391, 0.6563]], [[0.9963, 0.7181, 0.1326, 0.3645]], [[0.6414, 0.731, 0.8921, 0.4114]], [[0.7098, 0.6232, 0.8979, 0.6761]]],[[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]], [[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]], [[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]], 1, 1, Loc18092), 
LRes68811 = reshape_layer(Loc18092, [3, 12], Res68811), 
LMin28747 = minimum_layer([[[[[[0.9935, 0.1783], [0.4914, 0.2068]], [[0.7469, 0.5919], [0.4437, 0.1953]]]]], [[[[[0.0422, 0.7469], [0.6427, 0.9004]], [[0.878, 0.6548], [0.7464, 0.7233]]]]]], Min28747), 
LRes8513 = reshape_layer(Min28747, [1, 2, 4], Res8513), 
LAve64963 = average_pooling2D_layer([[[[1.1599], [1.6003]]]], 1, 2, 1, 1, false, Ave64963), 
LZer6129 = zero_padding2D_layer(Ave64963, 0, 0, 1, 0, Zer6129), 
LCon70594 = concatenate_layer([Zer6129,[[[[0.2103, 0.0536, 0.6037], [0.9624, 0.3757, 0.0874]]]]], 3, Con70594), 
LAdd96030 = add_layer([Res8513,Con70594], Add96030), 
LRes77385 = reshape_layer(Add96030, [1, 8], Res77385), 
LCon81192 = conv1D_layer([[[0.4201], [0.7195]]], 2,[[[0.2296, 0.753, 0.2383, 0.2038]], [[0.0373, 0.4695, 0.086, 0.3177]]],[0, 0, 0, 0], 2, true, 1, Con81192), 
LCon10227 = concatenate_layer([Con81192,[[[0.8422, 0.8127, 0.8524, 0.2708]]]], 2, Con10227), 
LMin2396 = minimum_layer([Res77385,Con10227], Min2396), 
LZer19267 = zero_padding1D_layer(Min2396, 2, 0, Zer19267), 
LCon36504 = concatenate_layer([Zer19267,[[[0.6938, 0.3006, 0.2957, 0.2333], [0.224, 0.9117, 0.1735, 0.255], [0.6329, 0.319, 0.497, 0.4443]]]], 2, Con36504), 
LAdd91139 = add_layer([Res68811,Con36504], Add91139), 
exec_layers([LDot17218,LRes26412,LLoc18092,LRes68811,LMin28747,LRes8513,LAve64963,LZer6129,LCon70594,LAdd96030,LRes77385,LCon81192,LCon10227,LMin2396,LZer19267,LCon36504,LAdd91139],["Dot17218","Res26412","Loc18092","Res68811","Min28747","Res8513","Ave64963","Zer6129","Con70594","Add96030","Res77385","Con81192","Con10227","Min2396","Zer19267","Con36504","Add91139"],Add91139,"Add91139")

Actual (Unparsed): [[[0.6238869, 0.5655990, 0.1237130, 0.3552993, 0.9107754, 0.3773170, 0.0838703, 0.0898185, 1.2565482, 0.5497713, 1.0254367, 0.6227455], [0.3224939, 0.2217565, 0.5404511, 0.2862329, 0.3015937, 0.3192635, 0.4386718, 0.6502703, 0.6343602, 1.7513999, 0.8090219, 1.0286839], [0.7805356, 0.9207678, 0.2602537, 0.5843243, 1.6248902, 1.7047277, 1.9080154, 0.7728249, 1.3733599, 0.9691192, 1.4336850, 1.1496043]]]

Expected (Unparsed): [[[0.6238868465800002,0.565598973608,0.12371303651200001,0.35529933310000006,0.910775422418,0.377316997684,0.083870252244,0.089818497084,1.2565481940560002,0.54977126148,1.025436653504,0.622745453128],[0.32249388818400004,0.221756452218,0.5404510361060001,0.286232881006,0.30159372272400004,0.319263515067,0.4386718012110001,0.6502703082750001,0.6343601565100001,1.7513999123300001,0.8090218626100001,1.0286839147300002],[0.7805355929539999,0.9207678101979998,0.260253717108,0.5843243079099999,1.6248902153259999,1.70472766979,1.9080154366889999,0.772824874626,1.373359903274,0.969119205016,1.4336849072270001,1.149604227393]]]

Actual:   [[[0.6239, 0.5656, 0.1238, 0.3553, 0.9108, 0.3774, 0.0839, 0.0899, 1.2566, 0.5498, 1.0255, 0.6228], [0.3225, 0.2218, 0.5405, 0.2863, 0.3016, 0.3193, 0.4387, 0.6503, 0.6344, 1.7514, 0.8091, 1.0287], [0.7806, 0.9208, 0.2603, 0.5844, 1.6249, 1.7048, 1.9081, 0.7729, 1.3734, 0.9692, 1.4337, 1.1497]]]

Expected: [[[0.6239, 0.5656, 0.1238, 0.3553, 0.9108, 0.3774, 0.0839, 0.0899, 1.2566, 0.5498, 1.0255, 0.6228], [0.3225, 0.2218, 0.5405, 0.2863, 0.3016, 0.3193, 0.4387, 0.6503, 0.6344, 1.7514, 0.8091, 1.0287], [0.7806, 0.9208, 0.2603, 0.5844, 1.6249, 1.7048, 1.9081, 0.7729, 1.3734, 0.9692, 1.4337, 1.1497]]]