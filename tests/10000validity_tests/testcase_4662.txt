import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Max80811 = tf.keras.layers.Input(shape=([1, 2, 2]))
in1Max80811 = tf.keras.layers.Input(shape=([1, 2, 2]))

Max80811 = keras.layers.Maximum(name = 'Max80811', )([in0Max80811,in1Max80811])
Sof74616 = keras.layers.Softmax(axis=1, name = 'Sof74616', )(Max80811)
Fla18545 = keras.layers.Flatten(name = 'Fla18545', )(Sof74616)
model = tf.keras.models.Model(inputs=[in0Max80811,in1Max80811], outputs=Fla18545)
in0Max80811 = tf.constant([[[[0.4745, 0.7135], [0.5809, 0.0149]]]])
in1Max80811 = tf.constant([[[[0.5764, 0.2431], [0.3066, 0.55]]]])
print (np.array2string(model.predict([in0Max80811,in1Max80811],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Fla18545.png')

LMax80811 = maximum_layer([[[[[0.4745, 0.7135], [0.5809, 0.0149]]]], [[[[0.5764, 0.2431], [0.3066, 0.55]]]]], Max80811), 
LSof74616 = softmax_layer(Max80811, 1, Sof74616), 
LFla18545 = flatten_layer(Sof74616, Fla18545), 
exec_layers([LMax80811,LSof74616,LFla18545],["Max80811","Sof74616","Fla18545"],Fla18545,"Fla18545")

Actual (Unparsed): [[1.0000000, 1.0000000, 1.0000000, 1.0000000]]

Expected (Unparsed): [[1.0,1.0,1.0,1.0]]

Actual:   [[1, 1, 1, 1]]

Expected: [[1, 1, 1, 1]]