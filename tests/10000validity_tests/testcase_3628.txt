import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Glo99024 = tf.keras.layers.Input(shape=([1, 2]))
in0Ave15187 = tf.keras.layers.Input(shape=([2, 1, 1, 1]))
in1Ave15187 = tf.keras.layers.Input(shape=([2, 1, 1, 1]))
in0Con68357 = tf.keras.layers.Input(shape=([1]))
in0Con45295 = tf.keras.layers.Input(shape=([2, 2]))
in0Cro58033 = tf.keras.layers.Input(shape=([4, 3]))
in0Mul617 = tf.keras.layers.Input(shape=([1, 2, 2]))
in1Mul617 = tf.keras.layers.Input(shape=([1, 2, 2]))

Glo99024 = keras.layers.GlobalMaxPool1D(name = 'Glo99024', )(in0Glo99024)
Ave15187 = keras.layers.Average(name = 'Ave15187', )([in0Ave15187,in1Ave15187])
Glo38989 = keras.layers.GlobalAveragePooling3D(name = 'Glo38989', )(Ave15187)
Con68357 = keras.layers.Concatenate(axis=1, name = 'Con68357', )([Glo38989,in0Con68357])
Ave47336 = keras.layers.Average(name = 'Ave47336', )([Glo99024,Con68357])
Res35169 = keras.layers.Reshape((2, 1), name = 'Res35169', )(Ave47336)
Con45295 = keras.layers.Concatenate(axis=2, name = 'Con45295', )([Res35169,in0Con45295])
Cro58033 = keras.layers.Cropping1D(cropping=((1, 1)), name = 'Cro58033', )(in0Cro58033)
Sub2246 = keras.layers.Subtract(name = 'Sub2246', )([Con45295,Cro58033])
Res94738 = keras.layers.Reshape((2, 3, 1), name = 'Res94738', )(Sub2246)
Mul617 = keras.layers.Multiply(name = 'Mul617', )([in0Mul617,in1Mul617])
Den93578 = keras.layers.Dense(1,name = 'Den93578', )(Mul617)
Zer3214 = keras.layers.ZeroPadding2D(padding=((1, 0), (1, 0)), name = 'Zer3214', )(Den93578)
Ave14838 = keras.layers.Average(name = 'Ave14838', )([Res94738,Zer3214])
model = tf.keras.models.Model(inputs=[in0Glo99024,in0Ave15187,in1Ave15187,in0Con68357,in0Con45295,in0Cro58033,in0Mul617,in1Mul617], outputs=Ave14838)
w = model.get_layer('Den93578').get_weights() 
w[0] = np.array([[0.6138], [0.9283]])
w[1] = np.array([0.6422])
model.get_layer('Den93578').set_weights(w) 
in0Glo99024 = tf.constant([[[1.3824, 1.6158]]])
in0Ave15187 = tf.constant([[[[[0.5885]]], [[[0.2897]]]]])
in1Ave15187 = tf.constant([[[[[0.066]]], [[[0.0298]]]]])
in0Con68357 = tf.constant([[0.6794]])
in0Con45295 = tf.constant([[[0.8922, 0.8195], [0.3959, 0.8306]]])
in0Cro58033 = tf.constant([[[1.0641, 1.1425, 1.4489], [1.9389, 1.8993, 1.3482], [1.2639, 1.47, 1.6885], [1.9246, 1.0359, 1.1309]]])
in0Mul617 = tf.constant([[[[0.3171, 0.13], [0.4088, 0.6372]]]])
in1Mul617 = tf.constant([[[[0.9256, 0.2452], [0.3464, 0.2548]]]])
print (np.array2string(model.predict([in0Glo99024,in0Ave15187,in1Ave15187,in0Con68357,in0Con45295,in0Cro58033,in0Mul617,in1Mul617],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Ave14838.png')

LGlo99024 = global_max_pool1D_layer([[[1.3824, 1.6158]]], Glo99024), 
LAve15187 = average_layer([[[[[[0.5885]]], [[[0.2897]]]]], [[[[[0.066]]], [[[0.0298]]]]]], Ave15187), 
LGlo38989 = global_average_pooling3D_layer(Ave15187, Glo38989), 
LCon68357 = concatenate_layer([Glo38989,[[0.6794]]], 1, Con68357), 
LAve47336 = average_layer([Glo99024,Con68357], Ave47336), 
LRes35169 = reshape_layer(Ave47336, [2, 1], Res35169), 
LCon45295 = concatenate_layer([Res35169,[[[0.8922, 0.8195], [0.3959, 0.8306]]]], 2, Con45295), 
LCro58033 = cropping1D_layer([[[1.0641, 1.1425, 1.4489], [1.9389, 1.8993, 1.3482], [1.2639, 1.47, 1.6885], [1.9246, 1.0359, 1.1309]]], 1, 1, Cro58033), 
LSub2246 = subtract_layer(Con45295,Cro58033, Sub2246), 
LRes94738 = reshape_layer(Sub2246, [2, 3, 1], Res94738), 
LMul617 = multiply_layer([[[[[0.3171, 0.13], [0.4088, 0.6372]]]], [[[[0.9256, 0.2452], [0.3464, 0.2548]]]]], Mul617), 
LDen93578 = dense_layer(Mul617, [[0.6138], [0.9283]],[0.6422], Den93578), 
LZer3214 = zero_padding2D_layer(Den93578, 1, 0, 1, 0, Zer3214), 
LAve14838 = average_layer([Res94738,Zer3214], Ave14838), 
exec_layers([LGlo99024,LAve15187,LGlo38989,LCon68357,LAve47336,LRes35169,LCon45295,LCro58033,LSub2246,LRes94738,LMul617,LDen93578,LZer3214,LAve14838],["Glo99024","Ave15187","Glo38989","Con68357","Ave47336","Res35169","Con45295","Cro58033","Sub2246","Res94738","Mul617","Den93578","Zer3214","Ave14838"],Ave14838,"Ave14838")

Actual (Unparsed): [[[[-0.5629750], [-0.5035500], [-0.2643500]], [[-0.0581500], [-0.1110772], [0.0109683]]]]

Expected (Unparsed): [[[[-0.562975],[-0.5035499999999999],[-0.26435000000000003]],[[-0.058150000000000035],[-0.11107722305600004],[0.010968319032000018]]]]

Actual:   [[[[-0.5629], [-0.5035], [-0.2643]], [[-0.0581], [-0.111], [0.011]]]]

Expected: [[[[-0.5629], [-0.5035], [-0.2643]], [[-0.0581], [-0.111], [0.011]]]]