import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Sub38257 = tf.keras.layers.Input(shape=([3]))
in1Sub38257 = tf.keras.layers.Input(shape=([3]))
in0Con74708 = tf.keras.layers.Input(shape=([3, 1]))
in0Thr32182 = tf.keras.layers.Input(shape=([1, 2]))
in0Dot28045 = tf.keras.layers.Input(shape=([2]))
in1Dot28045 = tf.keras.layers.Input(shape=([2]))
in0Con12587 = tf.keras.layers.Input(shape=([5]))
in0Con86547 = tf.keras.layers.Input(shape=([6, 3]))
in0Ave83838 = tf.keras.layers.Input(shape=([2, 1, 2, 2]))
in1Ave83838 = tf.keras.layers.Input(shape=([2, 1, 2, 2]))

Sub38257 = keras.layers.Subtract(name = 'Sub38257', )([in0Sub38257,in1Sub38257])
Res49031 = keras.layers.Reshape((3, 1), name = 'Res49031', )(Sub38257)
Con74708 = keras.layers.Concatenate(axis=2, name = 'Con74708', )([Res49031,in0Con74708])
Thr32182 = keras.layers.ThresholdedReLU(theta=2.0538298504808488, name = 'Thr32182', input_shape=(1, 2))(in0Thr32182)
Zer23684 = keras.layers.ZeroPadding1D(padding=((2, 0)), name = 'Zer23684', )(Thr32182)
Mul92374 = keras.layers.Multiply(name = 'Mul92374', )([Con74708,Zer23684])
Fla85975 = keras.layers.Flatten(name = 'Fla85975', )(Mul92374)
Dot28045 = keras.layers.Dot(axes=(1, 1), name = 'Dot28045', )([in0Dot28045,in1Dot28045])
Con12587 = keras.layers.Concatenate(axis=1, name = 'Con12587', )([Dot28045,in0Con12587])
Sub93593 = keras.layers.Subtract(name = 'Sub93593', )([Fla85975,Con12587])
Res72043 = keras.layers.Reshape((6, 1), name = 'Res72043', )(Sub93593)
Con86547 = keras.layers.Concatenate(axis=2, name = 'Con86547', )([Res72043,in0Con86547])
Ave83838 = keras.layers.Average(name = 'Ave83838', )([in0Ave83838,in1Ave83838])
Res16644 = keras.layers.Reshape((2, 1, 4), name = 'Res16644', )(Ave83838)
Res82897 = keras.layers.Reshape((2, 4), name = 'Res82897', )(Res16644)
Dot95640 = keras.layers.Dot(axes=(2, 2), name = 'Dot95640', )([Con86547,Res82897])
model = tf.keras.models.Model(inputs=[in0Sub38257,in1Sub38257,in0Con74708,in0Thr32182,in0Dot28045,in1Dot28045,in0Con12587,in0Con86547,in0Ave83838,in1Ave83838], outputs=Dot95640)
in0Sub38257 = tf.constant([[0.6948, 0.0542, 0.3265]])
in1Sub38257 = tf.constant([[0.4108, 0.4906, 0.2311]])
in0Con74708 = tf.constant([[[0.3904], [0.9758], [0.9761]]])
in0Thr32182 = tf.constant([[[0.8212, 0.7603]]])
in0Dot28045 = tf.constant([[0.6533, 0.1193]])
in1Dot28045 = tf.constant([[0.4945, 0.8598]])
in0Con12587 = tf.constant([[0.3169, 0.7209, 0.0167, 0.3756, 0.0824]])
in0Con86547 = tf.constant([[[0.8186, 0.6276, 0.6982], [0.1211, 0.4113, 0.403], [0.9699, 0.1289, 0.9015], [0.8878, 0.019, 0.3989], [0.5483, 0.0817, 0.7293], [0.0839, 0.3408, 0.9167]]])
in0Ave83838 = tf.constant([[[[[0.7019, 0.2398], [0.4192, 0.3938]]], [[[0.6482, 0.6931], [0.2808, 0.0091]]]]])
in1Ave83838 = tf.constant([[[[[0.3111, 0.7273], [0.3634, 0.0177]]], [[[0.2066, 0.4871], [0.4364, 0.2686]]]]])
print (np.array2string(model.predict([in0Sub38257,in1Sub38257,in0Con74708,in0Thr32182,in0Dot28045,in1Dot28045,in0Con12587,in0Con86547,in0Ave83838,in1Ave83838],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Dot95640.png')

LSub38257 = subtract_layer([[0.6948, 0.0542, 0.3265]], [[0.4108, 0.4906, 0.2311]], Sub38257), 
LRes49031 = reshape_layer(Sub38257, [3, 1], Res49031), 
LCon74708 = concatenate_layer([Res49031,[[[0.3904], [0.9758], [0.9761]]]], 2, Con74708), 
LThr32182 = thresholded_relu_layer([[[0.8212, 0.7603]]], 2.0538298504808488, Thr32182), 
LZer23684 = zero_padding1D_layer(Thr32182, 2, 0, Zer23684), 
LMul92374 = multiply_layer([Con74708,Zer23684], Mul92374), 
LFla85975 = flatten_layer(Mul92374, Fla85975), 
LDot28045 = dot_layer([[0.6533, 0.1193]], [[0.4945, 0.8598]], 1, 1, Dot28045), 
LCon12587 = concatenate_layer([Dot28045,[[0.3169, 0.7209, 0.0167, 0.3756, 0.0824]]], 1, Con12587), 
LSub93593 = subtract_layer(Fla85975,Con12587, Sub93593), 
LRes72043 = reshape_layer(Sub93593, [6, 1], Res72043), 
LCon86547 = concatenate_layer([Res72043,[[[0.8186, 0.6276, 0.6982], [0.1211, 0.4113, 0.403], [0.9699, 0.1289, 0.9015], [0.8878, 0.019, 0.3989], [0.5483, 0.0817, 0.7293], [0.0839, 0.3408, 0.9167]]]], 2, Con86547), 
LAve83838 = average_layer([[[[[[0.7019, 0.2398], [0.4192, 0.3938]]], [[[0.6482, 0.6931], [0.2808, 0.0091]]]]], [[[[[0.3111, 0.7273], [0.3634, 0.0177]]], [[[0.2066, 0.4871], [0.4364, 0.2686]]]]]], Ave83838), 
LRes16644 = reshape_layer(Ave83838, [2, 1, 4], Res16644), 
LRes82897 = reshape_layer(Res16644, [2, 4], Res82897), 
LDot95640 = dot_layer(Con86547,Res82897, 2, 2, Dot95640), 
exec_layers([LSub38257,LRes49031,LCon74708,LThr32182,LZer23684,LMul92374,LFla85975,LDot28045,LCon12587,LSub93593,LRes72043,LCon86547,LAve83838,LRes16644,LRes82897,LDot95640],["Sub38257","Res49031","Con74708","Thr32182","Zer23684","Mul92374","Fla85975","Dot28045","Con12587","Sub93593","Res72043","Con86547","Ave83838","Res16644","Res82897","Dot95640"],Dot95640,"Dot95640")

Actual (Unparsed): [[[0.5694865, 0.6231436], [0.1419070, 0.1394668], [0.3397815, 0.4356221], [0.5103455, 0.5789538], [0.2569118, 0.2935813], [0.3208003, 0.2637863]]]

Expected (Unparsed): [[[0.569486463565,0.6231436048740001],[0.141906995,0.13946678],[0.3397814899999999,0.43562214500000007],[0.510345515,0.5789538650000001],[0.25691175,0.29358131500000006],[0.32080031,0.263786305]]]

Actual:   [[[0.5695, 0.6232], [0.142, 0.1395], [0.3398, 0.4357], [0.5104, 0.579], [0.257, 0.2936], [0.3209, 0.2638]]]

Expected: [[[0.5695, 0.6232], [0.142, 0.1395], [0.3398, 0.4357], [0.5104, 0.579], [0.257, 0.2936], [0.3209, 0.2638]]]