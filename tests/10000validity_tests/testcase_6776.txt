import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Max36112 = tf.keras.layers.Input(shape=([1, 2, 2]))
in1Max36112 = tf.keras.layers.Input(shape=([1, 2, 2]))
in0Max13279 = tf.keras.layers.Input(shape=([2, 1, 1]))
in0Con20462 = tf.keras.layers.Input(shape=([2, 3, 1]))
in0Con67907 = tf.keras.layers.Input(shape=([2, 6, 1]))
in0Min8922 = tf.keras.layers.Input(shape=([2, 2, 2]))
in1Min8922 = tf.keras.layers.Input(shape=([2, 2, 2]))

Max36112 = keras.layers.Maximum(name = 'Max36112', )([in0Max36112,in1Max36112])
Zer78227 = keras.layers.ZeroPadding2D(padding=((1, 0), (1, 0)), name = 'Zer78227', )(Max36112)
Max13279 = keras.layers.MaxPool2D(pool_size=(1, 1), strides=(1, 1), padding='same', name = 'Max13279', )(in0Max13279)
Zer6408 = keras.layers.ZeroPadding2D(padding=((0, 0), (2, 0)), name = 'Zer6408', )(Max13279)
Con20462 = keras.layers.Concatenate(axis=3, name = 'Con20462', )([Zer6408,in0Con20462])
Add9099 = keras.layers.Add(name = 'Add9099', )([Zer78227,Con20462])
Res62322 = keras.layers.Reshape((2, 6), name = 'Res62322', )(Add9099)
Per43298 = keras.layers.Permute((1,2), name = 'Per43298',)(Res62322)
Res87429 = keras.layers.Reshape((2, 6, 1), name = 'Res87429', )(Per43298)
Con67907 = keras.layers.Concatenate(axis=3, name = 'Con67907', )([Res87429,in0Con67907])
Min8922 = keras.layers.Minimum(name = 'Min8922', )([in0Min8922,in1Min8922])
Zer36429 = keras.layers.ZeroPadding2D(padding=((0, 0), (4, 0)), name = 'Zer36429', )(Min8922)
Mul44036 = keras.layers.Multiply(name = 'Mul44036', )([Con67907,Zer36429])
model = tf.keras.models.Model(inputs=[in0Max36112,in1Max36112,in0Max13279,in0Con20462,in0Con67907,in0Min8922,in1Min8922], outputs=Mul44036)
in0Max36112 = tf.constant([[[[0.9408, 0.7812], [0.1105, 0.5511]]]])
in1Max36112 = tf.constant([[[[0.8501, 0.6669], [0.0036, 0.9632]]]])
in0Max13279 = tf.constant([[[[1.462]], [[1.761]]]])
in0Con20462 = tf.constant([[[[0.1669], [0.2055], [0.9409]], [[0.627], [0.3021], [0.4909]]]])
in0Con67907 = tf.constant([[[[0.3976], [0.4578], [0.801], [0.6756], [0.419], [0.3062]], [[0.6949], [0.7114], [0.1165], [0.0985], [0.7681], [0.5879]]]])
in0Min8922 = tf.constant([[[[0.6504, 0.4028], [0.7064, 0.4787]], [[0.045, 0.2898], [0.5824, 0.6301]]]])
in1Min8922 = tf.constant([[[[0.3661, 0.6012], [0.3603, 0.1344]], [[0.0522, 0.8057], [0.7864, 0.6435]]]])
print (np.array2string(model.predict([in0Max36112,in1Max36112,in0Max13279,in0Con20462,in0Con67907,in0Min8922,in1Min8922],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Mul44036.png')

LMax36112 = maximum_layer([[[[[0.9408, 0.7812], [0.1105, 0.5511]]]], [[[[0.8501, 0.6669], [0.0036, 0.9632]]]]], Max36112), 
LZer78227 = zero_padding2D_layer(Max36112, 1, 0, 1, 0, Zer78227), 
LMax13279 = max_pool2D_layer([[[[1.462]], [[1.761]]]], 1, 1, 1, 1, true, Max13279), 
LZer6408 = zero_padding2D_layer(Max13279, 0, 0, 2, 0, Zer6408), 
LCon20462 = concatenate_layer([Zer6408,[[[[0.1669], [0.2055], [0.9409]], [[0.627], [0.3021], [0.4909]]]]], 3, Con20462), 
LAdd9099 = add_layer([Zer78227,Con20462], Add9099), 
LRes62322 = reshape_layer(Add9099, [2, 6], Res62322), 
LPer43298 = permute_layer(Res62322, 1,2, Per43298), 
LRes87429 = reshape_layer(Per43298, [2, 6, 1], Res87429), 
LCon67907 = concatenate_layer([Res87429,[[[[0.3976], [0.4578], [0.801], [0.6756], [0.419], [0.3062]], [[0.6949], [0.7114], [0.1165], [0.0985], [0.7681], [0.5879]]]]], 3, Con67907), 
LMin8922 = minimum_layer([[[[[0.6504, 0.4028], [0.7064, 0.4787]], [[0.045, 0.2898], [0.5824, 0.6301]]]], [[[[0.3661, 0.6012], [0.3603, 0.1344]], [[0.0522, 0.8057], [0.7864, 0.6435]]]]], Min8922), 
LZer36429 = zero_padding2D_layer(Min8922, 0, 0, 4, 0, Zer36429), 
LMul44036 = multiply_layer([Con67907,Zer36429], Mul44036), 
exec_layers([LMax36112,LZer78227,LMax13279,LZer6408,LCon20462,LAdd9099,LRes62322,LPer43298,LRes87429,LCon67907,LMin8922,LZer36429,LMul44036],["Max36112","Zer78227","Max13279","Zer6408","Con20462","Add9099","Res62322","Per43298","Res87429","Con67907","Min8922","Zer36429","Mul44036"],Mul44036,"Mul44036")

Actual (Unparsed): [[[[0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.5352382, 0.1687732], [0.3390063, 0.0411533]], [[0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0842175, 0.2225954], [0.8468679, 0.3704358]]]]

Expected (Unparsed): [[[[0,0.0],[0.0,0.0],[0,0.0],[0.0,0.0],[0.5352382,0.16877319999999998],[0.33900627,0.04115328]],[[0,0.0],[0.0,0.0],[0.0,0.0],[0.0,0.0],[0.0842175,0.22259538],[0.84686784,0.37043579]]]]

Actual:   [[[[0, 0], [0, 0], [0, 0], [0, 0], [0.5353, 0.1688], [0.3391, 0.0412]], [[0, 0], [0, 0], [0, 0], [0, 0], [0.0843, 0.2226], [0.8469, 0.3705]]]]

Expected: [[[[0, 0], [0, 0], [0, 0], [0, 0], [0.5353, 0.1688], [0.3391, 0.0412]], [[0, 0], [0, 0], [0, 0], [0, 0], [0.0843, 0.2226], [0.8469, 0.3705]]]]