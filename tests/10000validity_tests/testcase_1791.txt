import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Up_8947 = tf.keras.layers.Input(shape=([1, 4, 2]))
in0Con24474 = tf.keras.layers.Input(shape=([2, 8, 4, 1]))
in0Min73610 = tf.keras.layers.Input(shape=([1, 1, 2]))
in1Min73610 = tf.keras.layers.Input(shape=([1, 1, 2]))
in0Con49839 = tf.keras.layers.Input(shape=([1, 3, 3, 1]))
in0Cro23087 = tf.keras.layers.Input(shape=([1, 4, 1, 2]))
in0Add18726 = tf.keras.layers.Input(shape=([1, 1, 1, 2]))
in1Add18726 = tf.keras.layers.Input(shape=([1, 1, 1, 2]))

Up_8947 = keras.layers.UpSampling2D(size=(2, 2), name = 'Up_8947', )(in0Up_8947)
Res42030 = keras.layers.Reshape((2, 8, 2, 1), name = 'Res42030', )(Up_8947)
Zer40758 = keras.layers.ZeroPadding3D(padding=((0, 0), (0, 0), (2, 0)), name = 'Zer40758', )(Res42030)
Con24474 = keras.layers.Concatenate(axis=4, name = 'Con24474', )([Zer40758,in0Con24474])
Min73610 = keras.layers.Minimum(name = 'Min73610', )([in0Min73610,in1Min73610])
Res70232 = keras.layers.Reshape((1, 1, 2, 1), name = 'Res70232', )(Min73610)
Zer96894 = keras.layers.ZeroPadding3D(padding=((0, 0), (2, 0), (1, 0)), name = 'Zer96894', )(Res70232)
Con49839 = keras.layers.Concatenate(axis=4, name = 'Con49839', )([Zer96894,in0Con49839])
Cro23087 = keras.layers.Cropping3D(cropping=((0, 0), (0, 1), (0, 0)), name = 'Cro23087', )(in0Cro23087)
Zer72343 = keras.layers.ZeroPadding3D(padding=((0, 0), (0, 0), (2, 0)), name = 'Zer72343', )(Cro23087)
Ave28912 = keras.layers.Average(name = 'Ave28912', )([Con49839,Zer72343])
Zer6842 = keras.layers.ZeroPadding3D(padding=((1, 0), (5, 0), (1, 0)), name = 'Zer6842', )(Ave28912)
Add83468 = keras.layers.Add(name = 'Add83468', )([Con24474,Zer6842])
Add18726 = keras.layers.Add(name = 'Add18726', )([in0Add18726,in1Add18726])
Zer71431 = keras.layers.ZeroPadding3D(padding=((1, 0), (7, 0), (3, 0)), name = 'Zer71431', )(Add18726)
Max30212 = keras.layers.Maximum(name = 'Max30212', )([Add83468,Zer71431])
model = tf.keras.models.Model(inputs=[in0Up_8947,in0Con24474,in0Min73610,in1Min73610,in0Con49839,in0Cro23087,in0Add18726,in1Add18726], outputs=Max30212)
in0Up_8947 = tf.constant([[[[1.284, 1.5895], [1.5941, 1.1692], [1.7121, 1.6762], [1.5919, 1.4864]]]])
in0Con24474 = tf.constant([[[[[0.4718], [0.6527], [0.1535], [0.614]], [[0.4237], [0.3326], [0.3963], [0.3082]], [[0.5617], [0.8224], [0.3881], [0.8934]], [[0.0369], [0.8849], [0.018], [0.4958]], [[0.2607], [0.1352], [0.0823], [0.7375]], [[0.4594], [0.6753], [0.6817], [0.8412]], [[0.3664], [0.1387], [0.1787], [0.452]], [[0.8037], [0.7576], [0.4232], [0.965]]], [[[0.4122], [0.5819], [0.281], [0.6136]], [[0.1993], [0.6464], [0.2456], [0.6958]], [[0.8914], [0.7068], [0.0537], [0.0943]], [[0.3001], [0.1492], [0.7799], [0.6796]], [[0.0443], [0.8131], [0.8438], [0.2776]], [[0.0031], [0.7626], [0.7246], [0.6295]], [[0.8189], [0.4915], [0.9522], [0.1745]], [[0.6181], [0.6529], [0.1173], [0.547]]]]])
in0Min73610 = tf.constant([[[[0.042, 0.1098]]]])
in1Min73610 = tf.constant([[[[0.8247, 0.0739]]]])
in0Con49839 = tf.constant([[[[[0.8651], [0.1816], [0.6299]], [[0.1308], [0.0782], [0.7985]], [[0.4676], [0.4922], [0.9352]]]]])
in0Cro23087 = tf.constant([[[[[1.4063, 1.6484]], [[1.2104, 1.4893]], [[1.4502, 1.0773]], [[1.3318, 1.393]]]]])
in0Add18726 = tf.constant([[[[[0.4773, 0.959]]]]])
in1Add18726 = tf.constant([[[[[0.7816, 0.3558]]]]])
print (np.array2string(model.predict([in0Up_8947,in0Con24474,in0Min73610,in1Min73610,in0Con49839,in0Cro23087,in0Add18726,in1Add18726],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Max30212.png')

LUp_8947 = up_sampling2D_layer([[[[1.284, 1.5895], [1.5941, 1.1692], [1.7121, 1.6762], [1.5919, 1.4864]]]], 2, 2, Up_8947), 
LRes42030 = reshape_layer(Up_8947, [2, 8, 2, 1], Res42030), 
LZer40758 = zero_padding3D_layer(Res42030, 0, 0, 0, 0, 2, 0, Zer40758), 
LCon24474 = concatenate_layer([Zer40758,[[[[[0.4718], [0.6527], [0.1535], [0.614]], [[0.4237], [0.3326], [0.3963], [0.3082]], [[0.5617], [0.8224], [0.3881], [0.8934]], [[0.0369], [0.8849], [0.018], [0.4958]], [[0.2607], [0.1352], [0.0823], [0.7375]], [[0.4594], [0.6753], [0.6817], [0.8412]], [[0.3664], [0.1387], [0.1787], [0.452]], [[0.8037], [0.7576], [0.4232], [0.965]]], [[[0.4122], [0.5819], [0.281], [0.6136]], [[0.1993], [0.6464], [0.2456], [0.6958]], [[0.8914], [0.7068], [0.0537], [0.0943]], [[0.3001], [0.1492], [0.7799], [0.6796]], [[0.0443], [0.8131], [0.8438], [0.2776]], [[0.0031], [0.7626], [0.7246], [0.6295]], [[0.8189], [0.4915], [0.9522], [0.1745]], [[0.6181], [0.6529], [0.1173], [0.547]]]]]], 4, Con24474), 
LMin73610 = minimum_layer([[[[[0.042, 0.1098]]]], [[[[0.8247, 0.0739]]]]], Min73610), 
LRes70232 = reshape_layer(Min73610, [1, 1, 2, 1], Res70232), 
LZer96894 = zero_padding3D_layer(Res70232, 0, 0, 2, 0, 1, 0, Zer96894), 
LCon49839 = concatenate_layer([Zer96894,[[[[[0.8651], [0.1816], [0.6299]], [[0.1308], [0.0782], [0.7985]], [[0.4676], [0.4922], [0.9352]]]]]], 4, Con49839), 
LCro23087 = cropping3D_layer([[[[[1.4063, 1.6484]], [[1.2104, 1.4893]], [[1.4502, 1.0773]], [[1.3318, 1.393]]]]], 0, 0, 0, 1, 0, 0, Cro23087), 
LZer72343 = zero_padding3D_layer(Cro23087, 0, 0, 0, 0, 2, 0, Zer72343), 
LAve28912 = average_layer([Con49839,Zer72343], Ave28912), 
LZer6842 = zero_padding3D_layer(Ave28912, 1, 0, 5, 0, 1, 0, Zer6842), 
LAdd83468 = add_layer([Con24474,Zer6842], Add83468), 
LAdd18726 = add_layer([[[[[[0.4773, 0.959]]]]], [[[[[0.7816, 0.3558]]]]]], Add18726), 
LZer71431 = zero_padding3D_layer(Add18726, 1, 0, 7, 0, 3, 0, Zer71431), 
LMax30212 = maximum_layer([Add83468,Zer71431], Max30212), 
exec_layers([LUp_8947,LRes42030,LZer40758,LCon24474,LMin73610,LRes70232,LZer96894,LCon49839,LCro23087,LZer72343,LAve28912,LZer6842,LAdd83468,LAdd18726,LZer71431,LMax30212],["Up_8947","Res42030","Zer40758","Con24474","Min73610","Res70232","Zer96894","Con49839","Cro23087","Zer72343","Ave28912","Zer6842","Add83468","Add18726","Zer71431","Max30212"],Max30212,"Max30212")

Actual (Unparsed): [[[[[0.0000000, 0.4718000], [0.0000000, 0.6527000], [1.2840000, 0.1535000], [1.5895000, 0.6140000]], [[0.0000000, 0.4237000], [0.0000000, 0.3326000], [1.2840000, 0.3963000], [1.5895000, 0.3082000]], [[0.0000000, 0.5617000], [0.0000000, 0.8224000], [1.5941000, 0.3881000], [1.1691999, 0.8934000]], [[0.0000000, 0.0369000], [0.0000000, 0.8849000], [1.5941000, 0.0180000], [1.1691999, 0.4958000]], [[0.0000000, 0.2607000], [0.0000000, 0.1352000], [1.7121000, 0.0823000], [1.6762000, 0.7375000]], [[0.0000000, 0.4594000], [0.0000000, 0.6753000], [1.7121000, 0.6817000], [1.6762000, 0.8412000]], [[0.0000000, 0.3664000], [0.0000000, 0.1387000], [1.5919000, 0.1787000], [1.4864000, 0.4520000]], [[0.0000000, 0.8037000], [0.0000000, 0.7576000], [1.5919000, 0.4232000], [1.4864000, 0.9650000]]], [[[0.0000000, 0.4122000], [0.0000000, 0.5819000], [1.2840000, 0.2810000], [1.5895000, 0.6136000]], [[0.0000000, 0.1993000], [0.0000000, 0.6464000], [1.2840000, 0.2456000], [1.5895000, 0.6958000]], [[0.0000000, 0.8914000], [0.0000000, 0.7068000], [1.5941000, 0.0537000], [1.1691999, 0.0943000]], [[0.0000000, 0.3001000], [0.0000000, 0.1492000], [1.5941000, 0.7799000], [1.1691999, 0.6796000]], [[0.0000000, 0.0443000], [0.0000000, 0.8131000], [1.7121000, 0.8438000], [1.6762000, 0.2776000]], [[0.0000000, 0.0031000], [0.0000000, 1.1951500], [1.7121000, 0.8154000], [2.3793500, 1.7686499]], [[0.0000000, 0.8189000], [0.0000000, 0.5569000], [1.5919000, 0.9913000], [2.0916000, 1.3184000]], [[0.0000000, 0.6181000], [0.0000000, 0.8867000], [1.6129000, 0.3634000], [2.2484500, 1.5532500]]]]]

Expected (Unparsed): [[[[[0,0.4718],[0,0.6527],[1.284,0.1535],[1.5895,0.614]],[[0,0.4237],[0,0.3326],[1.284,0.3963],[1.5895,0.3082]],[[0,0.5617],[0,0.8224],[1.5941,0.3881],[1.1692,0.8934]],[[0,0.0369],[0,0.8849],[1.5941,0.018],[1.1692,0.4958]],[[0,0.2607],[0,0.1352],[1.7121,0.0823],[1.6762,0.7375]],[[0,0.4594],[0,0.6753],[1.7121,0.6817],[1.6762,0.8412]],[[0,0.3664],[0,0.1387],[1.5919,0.1787],[1.4864,0.452]],[[0,0.8037],[0,0.7576],[1.5919,0.4232],[1.4864,0.965]]],[[[0,0.4122],[0,0.5819],[1.284,0.281],[1.5895,0.6136]],[[0,0.1993],[0,0.6464],[1.284,0.2456],[1.5895,0.6958]],[[0,0.8914],[0,0.7068],[1.5941,0.0537],[1.1692,0.0943]],[[0,0.3001],[0,0.1492],[1.5941,0.7799],[1.1692,0.6796]],[[0,0.0443],[0,0.8131],[1.7121,0.8438],[1.6762,0.2776]],[[0,0.0031],[0,1.19515],[1.7121,0.8154],[2.37935,1.76865]],[[0,0.8189],[0,0.5569],[1.5919,0.9913000000000001],[2.0915999999999997,1.3184]],[[0,0.6181],[0,0.8867],[1.6129,0.3634],[2.24845,1.5532500000000002]]]]]

Actual:   [[[[[0, 0.4718], [0, 0.6527], [1.284, 0.1535], [1.5895, 0.614]], [[0, 0.4237], [0, 0.3326], [1.284, 0.3963], [1.5895, 0.3082]], [[0, 0.5617], [0, 0.8224], [1.5941, 0.3881], [1.1692, 0.8934]], [[0, 0.0369], [0, 0.8849], [1.5941, 0.018], [1.1692, 0.4958]], [[0, 0.2607], [0, 0.1352], [1.7121, 0.0823], [1.6762, 0.7375]], [[0, 0.4594], [0, 0.6753], [1.7121, 0.6817], [1.6762, 0.8412]], [[0, 0.3664], [0, 0.1387], [1.5919, 0.1787], [1.4864, 0.452]], [[0, 0.8037], [0, 0.7576], [1.5919, 0.4232], [1.4864, 0.965]]], [[[0, 0.4122], [0, 0.5819], [1.284, 0.281], [1.5895, 0.6136]], [[0, 0.1993], [0, 0.6464], [1.284, 0.2456], [1.5895, 0.6958]], [[0, 0.8914], [0, 0.7068], [1.5941, 0.0537], [1.1692, 0.0943]], [[0, 0.3001], [0, 0.1492], [1.5941, 0.7799], [1.1692, 0.6796]], [[0, 0.0443], [0, 0.8131], [1.7121, 0.8438], [1.6762, 0.2776]], [[0, 0.0031], [0, 1.1952], [1.7121, 0.8154], [2.3794, 1.7687]], [[0, 0.8189], [0, 0.5569], [1.5919, 0.9913], [2.0916, 1.3184]], [[0, 0.6181], [0, 0.8867], [1.6129, 0.3634], [2.2485, 1.5533]]]]]

Expected: [[[[[0, 0.4718], [0, 0.6527], [1.284, 0.1535], [1.5895, 0.614]], [[0, 0.4237], [0, 0.3326], [1.284, 0.3963], [1.5895, 0.3082]], [[0, 0.5617], [0, 0.8224], [1.5941, 0.3881], [1.1692, 0.8934]], [[0, 0.0369], [0, 0.8849], [1.5941, 0.018], [1.1692, 0.4958]], [[0, 0.2607], [0, 0.1352], [1.7121, 0.0823], [1.6762, 0.7375]], [[0, 0.4594], [0, 0.6753], [1.7121, 0.6817], [1.6762, 0.8412]], [[0, 0.3664], [0, 0.1387], [1.5919, 0.1787], [1.4864, 0.452]], [[0, 0.8037], [0, 0.7576], [1.5919, 0.4232], [1.4864, 0.965]]], [[[0, 0.4122], [0, 0.5819], [1.284, 0.281], [1.5895, 0.6136]], [[0, 0.1993], [0, 0.6464], [1.284, 0.2456], [1.5895, 0.6958]], [[0, 0.8914], [0, 0.7068], [1.5941, 0.0537], [1.1692, 0.0943]], [[0, 0.3001], [0, 0.1492], [1.5941, 0.7799], [1.1692, 0.6796]], [[0, 0.0443], [0, 0.8131], [1.7121, 0.8438], [1.6762, 0.2776]], [[0, 0.0031], [0, 1.1952], [1.7121, 0.8154], [2.3794, 1.7687]], [[0, 0.8189], [0, 0.5569], [1.5919, 0.9914], [2.0916, 1.3184]], [[0, 0.6181], [0, 0.8867], [1.6129, 0.3634], [2.2485, 1.5533]]]]]