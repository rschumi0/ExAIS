import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Mul22981 = tf.keras.layers.Input(shape=([1, 1, 1, 2]))
in1Mul22981 = tf.keras.layers.Input(shape=([1, 1, 1, 2]))
in0Con82631 = tf.keras.layers.Input(shape=([2, 2, 2, 2]))
in0Sub2812 = tf.keras.layers.Input(shape=([3]))
in1Sub2812 = tf.keras.layers.Input(shape=([3]))
in0Con85149 = tf.keras.layers.Input(shape=([5]))
in0Con11696 = tf.keras.layers.Input(shape=([2]))

Mul22981 = keras.layers.Multiply(name = 'Mul22981', )([in0Mul22981,in1Mul22981])
Con11608 = keras.layers.Conv3DTranspose(3, (1, 1, 1),strides=(1, 1, 1), padding='valid', name = 'Con11608', )(Mul22981)
Res24663 = keras.layers.Reshape((1, 1, 3), name = 'Res24663', )(Con11608)
Res38806 = keras.layers.Reshape((1, 3), name = 'Res38806', )(Res24663)
Fla36756 = keras.layers.Flatten(name = 'Fla36756', )(Res38806)
Con82631 = keras.layers.Conv3D(2, (2, 1, 1),strides=(1, 1, 1), padding='valid', dilation_rate=(1, 1, 1), name = 'Con82631', )(in0Con82631)
Res86336 = keras.layers.Reshape((1, 2, 4), name = 'Res86336', )(Con82631)
Res52949 = keras.layers.Reshape((1, 8), name = 'Res52949', )(Res86336)
Fla15454 = keras.layers.Flatten(name = 'Fla15454', )(Res52949)
Sub2812 = keras.layers.Subtract(name = 'Sub2812', )([in0Sub2812,in1Sub2812])
Con85149 = keras.layers.Concatenate(axis=1, name = 'Con85149', )([Sub2812,in0Con85149])
Min66122 = keras.layers.Minimum(name = 'Min66122', )([Fla15454,Con85149])
Res39446 = keras.layers.Reshape((8, 1), name = 'Res39446', )(Min66122)
Glo73034 = keras.layers.GlobalAveragePooling1D(name = 'Glo73034', )(Res39446)
Con11696 = keras.layers.Concatenate(axis=1, name = 'Con11696', )([Glo73034,in0Con11696])
Sub21639 = keras.layers.Subtract(name = 'Sub21639', )([Fla36756,Con11696])
model = tf.keras.models.Model(inputs=[in0Mul22981,in1Mul22981,in0Con82631,in0Sub2812,in1Sub2812,in0Con85149,in0Con11696], outputs=Sub21639)
w = model.get_layer('Con11608').get_weights() 
w[0] = np.array([[[[[0.955, 0.7202], [0.1084, 0.3737], [0.5036, 0.9999]]]]])
w[1] = np.array([0, 0, 0])
model.get_layer('Con11608').set_weights(w) 
w = model.get_layer('Con82631').get_weights() 
w[0] = np.array([[[[[0.382, 0.9592], [0.0839, 0.957]]]], [[[[0.2124, 0.423], [0.3657, 0.5678]]]]])
w[1] = np.array([0, 0])
model.get_layer('Con82631').set_weights(w) 
in0Mul22981 = tf.constant([[[[[0.7782, 0.6144]]]]])
in1Mul22981 = tf.constant([[[[[0.7722, 0.1143]]]]])
in0Con82631 = tf.constant([[[[[0.4378, 0.8064], [0.7493, 0.4707]], [[0.256, 0.9302], [0.3787, 0.323]]], [[[0.8548, 0.9318], [0.9787, 0.0934]], [[0.6695, 0.4965], [0.0007, 0.9424]]]]])
in0Sub2812 = tf.constant([[0.1074, 0.9925, 0.8866]])
in1Sub2812 = tf.constant([[0.6453, 0.4799, 0.5228]])
in0Con85149 = tf.constant([[0.9908, 0.8761, 0.8498, 0.9246, 0.7872]])
in0Con11696 = tf.constant([[0.293, 0.6843]])
print (np.array2string(model.predict([in0Mul22981,in1Mul22981,in0Con82631,in0Sub2812,in1Sub2812,in0Con85149,in0Con11696],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Sub21639.png')

LMul22981 = multiply_layer([[[[[[0.7782, 0.6144]]]]], [[[[[0.7722, 0.1143]]]]]], Mul22981), 
LCon11608 = conv3D_transpose_layer(Mul22981, 1, 1, 1,[[[[[0.955, 0.7202], [0.1084, 0.3737], [0.5036, 0.9999]]]]],[0, 0, 0], 1, 1, 1, false, Con11608), 
LRes24663 = reshape_layer(Con11608, [1, 1, 3], Res24663), 
LRes38806 = reshape_layer(Res24663, [1, 3], Res38806), 
LFla36756 = flatten_layer(Res38806, Fla36756), 
LCon82631 = conv3D_layer([[[[[0.4378, 0.8064], [0.7493, 0.4707]], [[0.256, 0.9302], [0.3787, 0.323]]], [[[0.8548, 0.9318], [0.9787, 0.0934]], [[0.6695, 0.4965], [0.0007, 0.9424]]]]], 2, 1, 1,[[[[[0.382, 0.9592], [0.0839, 0.957]]]], [[[[0.2124, 0.423], [0.3657, 0.5678]]]]],[0, 0], 1, 1, 1, false, 1, 1, 1, Con82631), 
LRes86336 = reshape_layer(Con82631, [1, 2, 4], Res86336), 
LRes52949 = reshape_layer(Res86336, [1, 8], Res52949), 
LFla15454 = flatten_layer(Res52949, Fla15454), 
LSub2812 = subtract_layer([[0.1074, 0.9925, 0.8866]], [[0.6453, 0.4799, 0.5228]], Sub2812), 
LCon85149 = concatenate_layer([Sub2812,[[0.9908, 0.8761, 0.8498, 0.9246, 0.7872]]], 1, Con85149), 
LMin66122 = minimum_layer([Fla15454,Con85149], Min66122), 
LRes39446 = reshape_layer(Min66122, [8, 1], Res39446), 
LGlo73034 = global_average_pooling1D_layer(Res39446, Glo73034), 
LCon11696 = concatenate_layer([Glo73034,[[0.293, 0.6843]]], 1, Con11696), 
LSub21639 = subtract_layer(Fla36756,Con11696, Sub21639), 
exec_layers([LMul22981,LCon11608,LRes24663,LRes38806,LFla36756,LCon82631,LRes86336,LRes52949,LFla15454,LSub2812,LCon85149,LMin66122,LRes39446,LGlo73034,LCon11696,LSub21639],["Mul22981","Con11608","Res24663","Res38806","Fla36756","Con82631","Res86336","Res52949","Fla15454","Sub2812","Con85149","Min66122","Res39446","Glo73034","Con11696","Sub21639"],Sub21639,"Sub21639")

Actual (Unparsed): [[0.1266542, -0.2016162, -0.3114548]]

Expected (Unparsed): [[0.12665418953400004,-0.20161619095999997,-0.31145474884799995]]

Actual:   [[0.1267, -0.2016, -0.3114]]

Expected: [[0.1267, -0.2016, -0.3114]]