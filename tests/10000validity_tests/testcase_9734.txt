import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Add98683 = tf.keras.layers.Input(shape=([1, 2, 1]))
in1Add98683 = tf.keras.layers.Input(shape=([1, 2, 1]))

Add98683 = keras.layers.Add(name = 'Add98683', )([in0Add98683,in1Add98683])
Res25457 = keras.layers.Reshape((1, 2), name = 'Res25457', )(Add98683)
Con66602 = keras.layers.Conv1D(3, (1),strides=(1), padding='same', dilation_rate=(1), name = 'Con66602', )(Res25457)
Res2996 = keras.layers.Reshape((1, 3, 1), name = 'Res2996', )(Con66602)
Glo92513 = keras.layers.GlobalAveragePooling2D(name = 'Glo92513', )(Res2996)
model = tf.keras.models.Model(inputs=[in0Add98683,in1Add98683], outputs=Glo92513)
w = model.get_layer('Con66602').get_weights() 
w[0] = np.array([[[0.3543, 0.4797, 0.9146], [0.0692, 0.4866, 0.3052]]])
w[1] = np.array([0, 0, 0])
model.get_layer('Con66602').set_weights(w) 
in0Add98683 = tf.constant([[[[0.2576], [0.322]]]])
in1Add98683 = tf.constant([[[[0.921], [0.6833]]]])
print (np.array2string(model.predict([in0Add98683,in1Add98683],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Glo92513.png')

LAdd98683 = add_layer([[[[[0.2576], [0.322]]]], [[[[0.921], [0.6833]]]]], Add98683), 
LRes25457 = reshape_layer(Add98683, [1, 2], Res25457), 
LCon66602 = conv1D_layer(Res25457, 1,[[[0.3543, 0.4797, 0.9146], [0.0692, 0.4866, 0.3052]]],[0, 0, 0], 1, true, 1, Con66602), 
LRes2996 = reshape_layer(Con66602, [1, 3, 1], Res2996), 
LGlo92513 = global_average_pooling2D_layer(Res2996, Glo92513), 
exec_layers([LAdd98683,LRes25457,LCon66602,LRes2996,LGlo92513],["Add98683","Res25457","Con66602","Res2996","Glo92513"],Glo92513,"Glo92513")

Actual (Unparsed): [[0.9754878]]

Expected (Unparsed): [[0.9754877533333334]]

Actual:   [[0.9755]]

Expected: [[0.9755]]