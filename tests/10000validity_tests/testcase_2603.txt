import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Ave80688 = tf.keras.layers.Input(shape=([1, 1, 1, 2]))
in1Ave80688 = tf.keras.layers.Input(shape=([1, 1, 1, 2]))
in0Dot44835 = tf.keras.layers.Input(shape=([2, 3]))
in1Dot44835 = tf.keras.layers.Input(shape=([2, 3]))
in0Con44492 = tf.keras.layers.Input(shape=([2, 2]))

Ave80688 = keras.layers.Average(name = 'Ave80688', )([in0Ave80688,in1Ave80688])
Res75084 = keras.layers.Reshape((1, 1, 2), name = 'Res75084', )(Ave80688)
Dep76664 = keras.layers.DepthwiseConv2D((1, 1),strides=(1, 1), padding='valid', name = 'Dep76664', )(Res75084)
Res37385 = keras.layers.Reshape((1, 1, 2, 1), name = 'Res37385', )(Dep76664)
Con76444 = keras.layers.Conv3D(3, (1, 1, 2),strides=(1, 1, 1), padding='valid', dilation_rate=(1, 1, 1), name = 'Con76444', )(Res37385)
Res67465 = keras.layers.Reshape((1, 1, 3), name = 'Res67465', )(Con76444)
Res13101 = keras.layers.Reshape((1, 3), name = 'Res13101', )(Res67465)
Zer88717 = keras.layers.ZeroPadding1D(padding=((1, 0)), name = 'Zer88717', )(Res13101)
Dot44835 = keras.layers.Dot(axes=(2, 2), name = 'Dot44835', )([in0Dot44835,in1Dot44835])
Den60991 = keras.layers.Dense(1,name = 'Den60991', )(Dot44835)
Con44492 = keras.layers.Concatenate(axis=2, name = 'Con44492', )([Den60991,in0Con44492])
Max82315 = keras.layers.Maximum(name = 'Max82315', )([Zer88717,Con44492])
model = tf.keras.models.Model(inputs=[in0Ave80688,in1Ave80688,in0Dot44835,in1Dot44835,in0Con44492], outputs=Max82315)
w = model.get_layer('Dep76664').get_weights() 
w[0] = np.array([[[[0.2799], [0.5467]]]])
w[1] = np.array([0, 0])
model.get_layer('Dep76664').set_weights(w) 
w = model.get_layer('Con76444').get_weights() 
w[0] = np.array([[[[[0.9653, 0.8503, 0.6001]], [[0.3798, 0.6669, 0.7311]]]]])
w[1] = np.array([0, 0, 0])
model.get_layer('Con76444').set_weights(w) 
w = model.get_layer('Den60991').get_weights() 
w[0] = np.array([[0.8477], [0.6282]])
w[1] = np.array([0.594])
model.get_layer('Den60991').set_weights(w) 
in0Ave80688 = tf.constant([[[[[0.344, 0.9246]]]]])
in1Ave80688 = tf.constant([[[[[0.3663, 0.5546]]]]])
in0Dot44835 = tf.constant([[[0.9849, 0.6219, 0.9535], [0.3932, 0.4745, 0.835]]])
in1Dot44835 = tf.constant([[[0.8187, 0.0044, 0.0783], [0.9648, 0.5616, 0.5166]]])
in0Con44492 = tf.constant([[[0.3823, 0.3059], [0.0957, 0.4105]]])
print (np.array2string(model.predict([in0Ave80688,in1Ave80688,in0Dot44835,in1Dot44835,in0Con44492],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Max82315.png')

LAve80688 = average_layer([[[[[[0.344, 0.9246]]]]], [[[[[0.3663, 0.5546]]]]]], Ave80688), 
LRes75084 = reshape_layer(Ave80688, [1, 1, 2], Res75084), 
LDep76664 = depthwise_conv2D_layer(Res75084, 1, 1,[[[[0.2799], [0.5467]]]],[0, 0], 1, 1, false, Dep76664), 
LRes37385 = reshape_layer(Dep76664, [1, 1, 2, 1], Res37385), 
LCon76444 = conv3D_layer(Res37385, 1, 1, 2,[[[[[0.9653, 0.8503, 0.6001]], [[0.3798, 0.6669, 0.7311]]]]],[0, 0, 0], 1, 1, 1, false, 1, 1, 1, Con76444), 
LRes67465 = reshape_layer(Con76444, [1, 1, 3], Res67465), 
LRes13101 = reshape_layer(Res67465, [1, 3], Res13101), 
LZer88717 = zero_padding1D_layer(Res13101, 1, 0, Zer88717), 
LDot44835 = dot_layer([[[0.9849, 0.6219, 0.9535], [0.3932, 0.4745, 0.835]]], [[[0.8187, 0.0044, 0.0783], [0.9648, 0.5616, 0.5166]]], 2, 2, Dot44835), 
LDen60991 = dense_layer(Dot44835, [[0.8477], [0.6282]],[0.594], Den60991), 
LCon44492 = concatenate_layer([Den60991,[[[0.3823, 0.3059], [0.0957, 0.4105]]]], 2, Con44492), 
LMax82315 = maximum_layer([Zer88717,Con44492], Max82315), 
exec_layers([LAve80688,LRes75084,LDep76664,LRes37385,LCon76444,LRes67465,LRes13101,LZer88717,LDot44835,LDen60991,LCon44492,LMax82315],["Ave80688","Res75084","Dep76664","Res37385","Con76444","Res67465","Res13101","Zer88717","Dot44835","Den60991","Con44492","Max82315"],Max82315,"Max82315")

Actual (Unparsed): [[[2.4689181, 0.3823000, 0.3059000], [1.6007752, 0.3541792, 0.4105000]]]

Expected (Unparsed): [[[2.4689180302200002,0.3823,0.3059],[1.6007751559699999,0.3541792267035,0.4105]]]

Actual:   [[[2.469, 0.3823, 0.3059], [1.6008, 0.3542, 0.4105]]]

Expected: [[[2.469, 0.3823, 0.3059], [1.6008, 0.3542, 0.4105]]]