import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Sub87125 = tf.keras.layers.Input(shape=([3, 3, 2, 2]))
in1Sub87125 = tf.keras.layers.Input(shape=([3, 3, 2, 2]))
in0Sub82956 = tf.keras.layers.Input(shape=([3, 2]))
in1Sub82956 = tf.keras.layers.Input(shape=([3, 2]))
in0Min86171 = tf.keras.layers.Input(shape=([2, 2]))
in1Min86171 = tf.keras.layers.Input(shape=([2, 2]))
in0Con92320 = tf.keras.layers.Input(shape=([3, 2, 1]))
in0Max43028 = tf.keras.layers.Input(shape=([1, 1, 2]))
in0Con95903 = tf.keras.layers.Input(shape=([3, 3, 2]))

Sub87125 = keras.layers.Subtract(name = 'Sub87125', )([in0Sub87125,in1Sub87125])
Res8296 = keras.layers.Reshape((3, 3, 4), name = 'Res8296', )(Sub87125)
Sub82956 = keras.layers.Subtract(name = 'Sub82956', )([in0Sub82956,in1Sub82956])
Min86171 = keras.layers.Minimum(name = 'Min86171', )([in0Min86171,in1Min86171])
Zer74058 = keras.layers.ZeroPadding1D(padding=((1, 0)), name = 'Zer74058', )(Min86171)
Mul30531 = keras.layers.Multiply(name = 'Mul30531', )([Sub82956,Zer74058])
Res60234 = keras.layers.Reshape((3, 2, 1), name = 'Res60234', )(Mul30531)
Con92320 = keras.layers.Concatenate(axis=3, name = 'Con92320', )([Res60234,in0Con92320])
Max43028 = keras.layers.MaxPool2D(pool_size=(1, 1), strides=(1, 1), padding='valid', name = 'Max43028', )(in0Max43028)
Zer66159 = keras.layers.ZeroPadding2D(padding=((2, 0), (1, 0)), name = 'Zer66159', )(Max43028)
Mul84627 = keras.layers.Multiply(name = 'Mul84627', )([Con92320,Zer66159])
Zer15027 = keras.layers.ZeroPadding2D(padding=((0, 0), (1, 0)), name = 'Zer15027', )(Mul84627)
Con95903 = keras.layers.Concatenate(axis=3, name = 'Con95903', )([Zer15027,in0Con95903])
Sub57179 = keras.layers.Subtract(name = 'Sub57179', )([Res8296,Con95903])
model = tf.keras.models.Model(inputs=[in0Sub87125,in1Sub87125,in0Sub82956,in1Sub82956,in0Min86171,in1Min86171,in0Con92320,in0Max43028,in0Con95903], outputs=Sub57179)
in0Sub87125 = tf.constant([[[[[0.8404, 0.2533], [0.904, 0.1171]], [[0.0989, 0.6505], [0.8866, 0.796]], [[0.7439, 0.4696], [0.7501, 0.4499]]], [[[0.3496, 0.1902], [0.5004, 0.0324]], [[0.6207, 0.0871], [0.4713, 0.2795]], [[0.7717, 0.1887], [0.488, 0.5222]]], [[[0.2649, 0.6002], [0.9911, 0.5521]], [[0.4374, 0.0545], [0.8982, 0.1324]], [[0.791, 0.5867], [0.858, 0.0465]]]]])
in1Sub87125 = tf.constant([[[[[0.495, 0.0392], [0.4721, 0.1552]], [[0.9555, 0.7011], [0.0019, 0.7915]], [[0.1431, 0.761], [0.0579, 0.9672]]], [[[0.7384, 0.4085], [0.7765, 0.2863]], [[0.0546, 0.3602], [0.0307, 0.1635]], [[0.1264, 0.3042], [0.2894, 0.9341]]], [[[0.3171, 0.2581], [0.847, 0.7052]], [[0.289, 0.1189], [0.2747, 0.3485]], [[0.2055, 0.7446], [0.1119, 0.8626]]]]])
in0Sub82956 = tf.constant([[[0.59, 0.7556], [0.0128, 0.4432], [0.3541, 0.8646]]])
in1Sub82956 = tf.constant([[[0.7891, 0.9915], [0.1237, 0.9569], [0.0501, 0.4649]]])
in0Min86171 = tf.constant([[[0.1436, 0.3271], [0.4313, 0.4256]]])
in1Min86171 = tf.constant([[[0.7194, 0.4494], [0.7225, 0.3806]]])
in0Con92320 = tf.constant([[[[0.1793], [0.1801]], [[0.625], [0.295]], [[0.9172], [0.6559]]]])
in0Max43028 = tf.constant([[[[1.3701, 1.4103]]]])
in0Con95903 = tf.constant([[[[0.7873, 0.7166], [0.2535, 0.2024], [0.153, 0.7751]], [[0.0905, 0.509], [0.1555, 0.5209], [0.849, 0.2309]], [[0.101, 0.3916], [0.3505, 0.4969], [0.4391, 0.8415]]]])
print (np.array2string(model.predict([in0Sub87125,in1Sub87125,in0Sub82956,in1Sub82956,in0Min86171,in1Min86171,in0Con92320,in0Max43028,in0Con95903],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Sub57179.png')

LSub87125 = subtract_layer([[[[[0.8404, 0.2533], [0.904, 0.1171]], [[0.0989, 0.6505], [0.8866, 0.796]], [[0.7439, 0.4696], [0.7501, 0.4499]]], [[[0.3496, 0.1902], [0.5004, 0.0324]], [[0.6207, 0.0871], [0.4713, 0.2795]], [[0.7717, 0.1887], [0.488, 0.5222]]], [[[0.2649, 0.6002], [0.9911, 0.5521]], [[0.4374, 0.0545], [0.8982, 0.1324]], [[0.791, 0.5867], [0.858, 0.0465]]]]], [[[[[0.495, 0.0392], [0.4721, 0.1552]], [[0.9555, 0.7011], [0.0019, 0.7915]], [[0.1431, 0.761], [0.0579, 0.9672]]], [[[0.7384, 0.4085], [0.7765, 0.2863]], [[0.0546, 0.3602], [0.0307, 0.1635]], [[0.1264, 0.3042], [0.2894, 0.9341]]], [[[0.3171, 0.2581], [0.847, 0.7052]], [[0.289, 0.1189], [0.2747, 0.3485]], [[0.2055, 0.7446], [0.1119, 0.8626]]]]], Sub87125), 
LRes8296 = reshape_layer(Sub87125, [3, 3, 4], Res8296), 
LSub82956 = subtract_layer([[[0.59, 0.7556], [0.0128, 0.4432], [0.3541, 0.8646]]], [[[0.7891, 0.9915], [0.1237, 0.9569], [0.0501, 0.4649]]], Sub82956), 
LMin86171 = minimum_layer([[[[0.1436, 0.3271], [0.4313, 0.4256]]], [[[0.7194, 0.4494], [0.7225, 0.3806]]]], Min86171), 
LZer74058 = zero_padding1D_layer(Min86171, 1, 0, Zer74058), 
LMul30531 = multiply_layer([Sub82956,Zer74058], Mul30531), 
LRes60234 = reshape_layer(Mul30531, [3, 2, 1], Res60234), 
LCon92320 = concatenate_layer([Res60234,[[[[0.1793], [0.1801]], [[0.625], [0.295]], [[0.9172], [0.6559]]]]], 3, Con92320), 
LMax43028 = max_pool2D_layer([[[[1.3701, 1.4103]]]], 1, 1, 1, 1, false, Max43028), 
LZer66159 = zero_padding2D_layer(Max43028, 2, 0, 1, 0, Zer66159), 
LMul84627 = multiply_layer([Con92320,Zer66159], Mul84627), 
LZer15027 = zero_padding2D_layer(Mul84627, 0, 0, 1, 0, Zer15027), 
LCon95903 = concatenate_layer([Zer15027,[[[[0.7873, 0.7166], [0.2535, 0.2024], [0.153, 0.7751]], [[0.0905, 0.509], [0.1555, 0.5209], [0.849, 0.2309]], [[0.101, 0.3916], [0.3505, 0.4969], [0.4391, 0.8415]]]]], 3, Con95903), 
LSub57179 = subtract_layer(Res8296,Con95903, Sub57179), 
exec_layers([LSub87125,LRes8296,LSub82956,LMin86171,LZer74058,LMul30531,LRes60234,LCon92320,LMax43028,LZer66159,LMul84627,LZer15027,LCon95903,LSub57179],["Sub87125","Res8296","Sub82956","Min86171","Zer74058","Mul30531","Res60234","Con92320","Max43028","Zer66159","Mul84627","Zer15027","Con95903","Sub57179"],Sub57179,"Sub57179")

Actual (Unparsed): [[[[0.3454000, 0.2141000, -0.3554000, -0.7547000], [-0.8566000, -0.0506000, 0.6312000, -0.1979000], [0.6008000, -0.2914000, 0.5392000, -1.2924000]], [[-0.3888000, -0.2183000, -0.3666000, -0.7629000], [0.5661000, -0.2731000, 0.2851000, -0.4049000], [0.6453000, -0.1155000, -0.6504000, -0.6428000]], [[-0.0522000, 0.3421000, 0.0431000, -0.5447000], [0.1484000, -0.0644000, 0.2730000, -0.7130000], [0.3770724, -1.0829158, 0.3070000, -1.6576000]]]]

Expected (Unparsed): [[[[0.34540000000000004,0.2141,-0.3554,-0.7547],[-0.8566,-0.05059999999999998,0.6312,-0.19789999999999994],[0.6008,-0.2914,0.5392,-1.2923999999999998]],[[-0.3887999999999999,-0.21829999999999997,-0.36660000000000004,-0.7629],[0.5661,-0.2731,0.2851,-0.40490000000000004],[0.6453,-0.11550000000000002,-0.6504,-0.6428]],[[-0.05219999999999997,0.34209999999999996,0.0431,-0.5447],[0.14840000000000003,-0.06440000000000001,0.27299999999999996,-0.713],[0.37707241401799996,-1.08291577,0.307,-1.6576]]]]

Actual:   [[[[0.3454, 0.2141, -0.3554, -0.7547], [-0.8566, -0.0506, 0.6312, -0.1979], [0.6008, -0.2914, 0.5392, -1.2924]], [[-0.3888, -0.2183, -0.3666, -0.7629], [0.5661, -0.2731, 0.2851, -0.4049], [0.6453, -0.1155, -0.6504, -0.6428]], [[-0.0522, 0.3421, 0.0431, -0.5447], [0.1484, -0.0644, 0.273, -0.713], [0.3771, -1.0829, 0.307, -1.6576]]]]

Expected: [[[[0.3455, 0.2141, -0.3554, -0.7547], [-0.8566, -0.0505, 0.6312, -0.1978], [0.6008, -0.2914, 0.5392, -1.2923]], [[-0.3887, -0.2182, -0.3666, -0.7629], [0.5661, -0.2731, 0.2851, -0.4049], [0.6453, -0.1155, -0.6504, -0.6428]], [[-0.0521, 0.3421, 0.0431, -0.5447], [0.1485, -0.0644, 0.273, -0.713], [0.3771, -1.0829, 0.307, -1.6576]]]]