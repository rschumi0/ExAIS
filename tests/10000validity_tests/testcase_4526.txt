import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Mul72548 = tf.keras.layers.Input(shape=([2, 2, 2, 1]))
in1Mul72548 = tf.keras.layers.Input(shape=([2, 2, 2, 1]))

Mul72548 = keras.layers.Multiply(name = 'Mul72548', )([in0Mul72548,in1Mul72548])
Res80484 = keras.layers.Reshape((2, 2, 2), name = 'Res80484', )(Mul72548)
Res59847 = keras.layers.Reshape((2, 4), name = 'Res59847', )(Res80484)
LST84741 = keras.layers.LSTM(2,recurrent_activation='sigmoid', name = 'LST84741', )(Res59847)
Res88478 = keras.layers.Reshape((2, 1), name = 'Res88478', )(LST84741)
LST75344 = keras.layers.LSTM(3,recurrent_activation='sigmoid', name = 'LST75344', )(Res88478)
model = tf.keras.models.Model(inputs=[in0Mul72548,in1Mul72548], outputs=LST75344)
w = model.get_layer('LST84741').get_weights() 
w[0] = np.array([[3, 9, 7, 5, 7, 1, 10, 1], [9, 10, 8, 9, 7, 6, 2, 5], [7, 8, 2, 7, 10, 10, 7, 7], [9, 6, 6, 9, 9, 6, 3, 5]])
w[1] = np.array([[10, 9, 6, 1, 7, 10, 4, 7], [7, 4, 10, 1, 1, 4, 7, 4]])
w[2] = np.array([2, 2, 9, 3, 8, 8, 9, 7])
model.get_layer('LST84741').set_weights(w) 
w = model.get_layer('LST75344').get_weights() 
w[0] = np.array([[1, 9, 7, 2, 8, 5, 7, 6, 7, 6, 4, 1]])
w[1] = np.array([[9, 4, 7, 2, 7, 7, 7, 8, 8, 1, 9, 1], [4, 1, 3, 10, 6, 7, 10, 7, 10, 5, 4, 8], [6, 3, 6, 9, 9, 10, 6, 2, 7, 4, 7, 5]])
w[2] = np.array([5, 2, 6, 2, 6, 2, 5, 10, 9, 5, 5, 7])
model.get_layer('LST75344').set_weights(w) 
in0Mul72548 = tf.constant([[[[[0.3634], [0.8197]], [[0.6269], [0.5502]]], [[[0.8401], [0.9706]], [[0.9957], [0.7171]]]]])
in1Mul72548 = tf.constant([[[[[0.3022], [0.0217]], [[0.7112], [0.9475]]], [[[0.0521], [0.5003]], [[0.6837], [0.1828]]]]])
print (np.array2string(model.predict([in0Mul72548,in1Mul72548],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='LST75344.png')

LMul72548 = multiply_layer([[[[[[0.3634], [0.8197]], [[0.6269], [0.5502]]], [[[0.8401], [0.9706]], [[0.9957], [0.7171]]]]], [[[[[0.3022], [0.0217]], [[0.7112], [0.9475]]], [[[0.0521], [0.5003]], [[0.6837], [0.1828]]]]]], Mul72548), 
LRes80484 = reshape_layer(Mul72548, [2, 2, 2], Res80484), 
LRes59847 = reshape_layer(Res80484, [2, 4], Res59847), 
LLST84741 = lstm_layer(Res59847,[[3, 9, 7, 5, 7, 1, 10, 1], [9, 10, 8, 9, 7, 6, 2, 5], [7, 8, 2, 7, 10, 10, 7, 7], [9, 6, 6, 9, 9, 6, 3, 5]],[[10, 9, 6, 1, 7, 10, 4, 7], [7, 4, 10, 1, 1, 4, 7, 4]],[2, 2, 9, 3, 8, 8, 9, 7], LST84741), 
LRes88478 = reshape_layer(LST84741, [2, 1], Res88478), 
LLST75344 = lstm_layer(Res88478,[[1, 9, 7, 2, 8, 5, 7, 6, 7, 6, 4, 1]],[[9, 4, 7, 2, 7, 7, 7, 8, 8, 1, 9, 1], [4, 1, 3, 10, 6, 7, 10, 7, 10, 5, 4, 8], [6, 3, 6, 9, 9, 10, 6, 2, 7, 4, 7, 5]],[5, 2, 6, 2, 6, 2, 5, 10, 9, 5, 5, 7], LST75344), 
exec_layers([LMul72548,LRes80484,LRes59847,LLST84741,LRes88478,LLST75344],["Mul72548","Res80484","Res59847","LST84741","Res88478","LST75344"],LST75344,"LST75344")

Actual (Unparsed): [[0.9638460, 0.9640259, 0.9640274]]

Expected (Unparsed): [[0.9638460464264585,0.9640259452002212,0.9640273667735645]]

Actual:   [[0.9639, 0.9641, 0.9641]]

Expected: [[0.9639, 0.9641, 0.9641]]