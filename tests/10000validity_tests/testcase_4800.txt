import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Max22328 = tf.keras.layers.Input(shape=([2, 1, 1, 1]))
in1Max22328 = tf.keras.layers.Input(shape=([2, 1, 1, 1]))

Max22328 = keras.layers.Maximum(name = 'Max22328', )([in0Max22328,in1Max22328])
Res44751 = keras.layers.Reshape((2, 1, 1), name = 'Res44751', )(Max22328)
Res67384 = keras.layers.Reshape((2, 1), name = 'Res67384', )(Res44751)
Loc66861 = keras.layers.LocallyConnected1D(4, (1),strides=(1), name = 'Loc66861', )(Res67384)
model = tf.keras.models.Model(inputs=[in0Max22328,in1Max22328], outputs=Loc66861)
w = model.get_layer('Loc66861').get_weights() 
w[0] = np.array([[[0.5093, 0.2121, 0.8184, 0.2968]], [[0.7086, 0.0659, 0.089, 0.4865]]])
w[1] = np.array([[0, 0, 0, 0], [0, 0, 0, 0]])
model.get_layer('Loc66861').set_weights(w) 
in0Max22328 = tf.constant([[[[[0.7685]]], [[[0.6325]]]]])
in1Max22328 = tf.constant([[[[[0.7941]]], [[[0.4369]]]]])
print (np.array2string(model.predict([in0Max22328,in1Max22328],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Loc66861.png')

LMax22328 = maximum_layer([[[[[[0.7685]]], [[[0.6325]]]]], [[[[[0.7941]]], [[[0.4369]]]]]], Max22328), 
LRes44751 = reshape_layer(Max22328, [2, 1, 1], Res44751), 
LRes67384 = reshape_layer(Res44751, [2, 1], Res67384), 
LLoc66861 = locally_connected1D_layer(Res67384, 1,[[[0.5093, 0.2121, 0.8184, 0.2968]], [[0.7086, 0.0659, 0.089, 0.4865]]],[[0, 0, 0, 0], [0, 0, 0, 0]], 1, Loc66861), 
exec_layers([LMax22328,LRes44751,LRes67384,LLoc66861],["Max22328","Res44751","Res67384","Loc66861"],Loc66861,"Loc66861")

Actual (Unparsed): [[[0.4044351, 0.1684286, 0.6498914, 0.2356889], [0.4481895, 0.0416817, 0.0562925, 0.3077112]]]

Expected (Unparsed): [[[0.40443513,0.16842861,0.64989144,0.23568888000000002],[0.44818949999999996,0.04168175,0.056292499999999995,0.30771125]]]

Actual:   [[[0.4045, 0.1685, 0.6499, 0.2357], [0.4482, 0.0417, 0.0563, 0.3078]]]

Expected: [[[0.4045, 0.1685, 0.6499, 0.2357], [0.4482, 0.0417, 0.0563, 0.3078]]]