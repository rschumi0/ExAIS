import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Zer95165 = tf.keras.layers.Input(shape=([1, 1, 3]))
in0Min49280 = tf.keras.layers.Input(shape=([1, 1]))
in1Min49280 = tf.keras.layers.Input(shape=([1, 1]))
in0Con60795 = tf.keras.layers.Input(shape=([26]))
in0Con13482 = tf.keras.layers.Input(shape=([27, 1]))
in0ELU34155 = tf.keras.layers.Input(shape=([1, 1, 1, 2]))
in0PRe52626 = tf.keras.layers.Input(shape=([1, 1, 1]))
in0Con4516 = tf.keras.layers.Input(shape=([1, 1]))

Zer95165 = keras.layers.ZeroPadding2D(padding=((1, 1), (1, 1)), name = 'Zer95165', )(in0Zer95165)
Res90305 = keras.layers.Reshape((3, 9), name = 'Res90305', )(Zer95165)
Fla31600 = keras.layers.Flatten(name = 'Fla31600', )(Res90305)
Min49280 = keras.layers.Minimum(name = 'Min49280', )([in0Min49280,in1Min49280])
Res69793 = keras.layers.Reshape((1, 1, 1), name = 'Res69793', )(Min49280)
Glo91587 = keras.layers.GlobalMaxPool2D(name = 'Glo91587', )(Res69793)
Con60795 = keras.layers.Concatenate(axis=1, name = 'Con60795', )([Glo91587,in0Con60795])
Mul10464 = keras.layers.Multiply(name = 'Mul10464', )([Fla31600,Con60795])
Res62930 = keras.layers.Reshape((27, 1), name = 'Res62930', )(Mul10464)
Con13482 = keras.layers.Concatenate(axis=2, name = 'Con13482', )([Res62930,in0Con13482])
ELU34155 = keras.layers.ELU(alpha=-0.8941906392630035, name = 'ELU34155', input_shape=(1, 1, 1, 2))(in0ELU34155)
Res59444 = keras.layers.Reshape((1, 1, 2), name = 'Res59444', )(ELU34155)
Res10485 = keras.layers.Reshape((1, 2), name = 'Res10485', )(Res59444)
PRe52626 = keras.layers.PReLU(name = 'PRe52626', input_shape=(1, 1, 1))(in0PRe52626)
Res60486 = keras.layers.Reshape((1, 1), name = 'Res60486', )(PRe52626)
Per89557 = keras.layers.Permute((2,1), name = 'Per89557',)(Res60486)
Con4516 = keras.layers.Concatenate(axis=2, name = 'Con4516', )([Per89557,in0Con4516])
Max82903 = keras.layers.Maximum(name = 'Max82903', )([Res10485,Con4516])
Sof85149 = keras.layers.Softmax(axis=1, name = 'Sof85149', )(Max82903)
Dot23029 = keras.layers.Dot(axes=(2, 2), name = 'Dot23029', )([Con13482,Sof85149])
model = tf.keras.models.Model(inputs=[in0Zer95165,in0Min49280,in1Min49280,in0Con60795,in0Con13482,in0ELU34155,in0PRe52626,in0Con4516], outputs=Dot23029)
w = model.get_layer('PRe52626').get_weights() 
w[0] = np.array([[[0.1298]]])
model.get_layer('PRe52626').set_weights(w) 
in0Zer95165 = tf.constant([[[[1.3305, 1.5836, 1.9099]]]])
in0Min49280 = tf.constant([[[0.8902]]])
in1Min49280 = tf.constant([[[0.8108]]])
in0Con60795 = tf.constant([[0.3558, 0.8689, 0.0366, 0.6352, 0.5412, 0.3059, 0.2035, 0.9168, 0.6232, 0.8037, 0.2999, 0.3846, 0.4375, 0.4654, 0.1288, 0.4643, 0.5912, 0.5097, 0.3443, 0.7955, 0.5066, 0.2128, 0.1261, 0.1713, 0.4789, 0.7973]])
in0Con13482 = tf.constant([[[0.9073], [0.8348], [0.1436], [0.9071], [0.4327], [0.0838], [0.0573], [0.6297], [0.9079], [0.0096], [0.5922], [0.8501], [0.4597], [0.53], [0.4273], [0.1235], [0.2322], [0.9672], [0.9857], [0.065], [0.7571], [0.5158], [0.5941], [0.5321], [0.5171], [0.833], [0.8561]]])
in0ELU34155 = tf.constant([[[[[0.4808, 0.3666]]]]])
in0PRe52626 = tf.constant([[[[0.5545]]]])
in0Con4516 = tf.constant([[[0.5057]]])
print (np.array2string(model.predict([in0Zer95165,in0Min49280,in1Min49280,in0Con60795,in0Con13482,in0ELU34155,in0PRe52626,in0Con4516],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Dot23029.png')

LZer95165 = zero_padding2D_layer([[[[1.3305, 1.5836, 1.9099]]]], 1, 1, 1, 1, Zer95165), 
LRes90305 = reshape_layer(Zer95165, [3, 9], Res90305), 
LFla31600 = flatten_layer(Res90305, Fla31600), 
LMin49280 = minimum_layer([[[[0.8902]]], [[[0.8108]]]], Min49280), 
LRes69793 = reshape_layer(Min49280, [1, 1, 1], Res69793), 
LGlo91587 = global_max_pool2D_layer(Res69793, Glo91587), 
LCon60795 = concatenate_layer([Glo91587,[[0.3558, 0.8689, 0.0366, 0.6352, 0.5412, 0.3059, 0.2035, 0.9168, 0.6232, 0.8037, 0.2999, 0.3846, 0.4375, 0.4654, 0.1288, 0.4643, 0.5912, 0.5097, 0.3443, 0.7955, 0.5066, 0.2128, 0.1261, 0.1713, 0.4789, 0.7973]]], 1, Con60795), 
LMul10464 = multiply_layer([Fla31600,Con60795], Mul10464), 
LRes62930 = reshape_layer(Mul10464, [27, 1], Res62930), 
LCon13482 = concatenate_layer([Res62930,[[[0.9073], [0.8348], [0.1436], [0.9071], [0.4327], [0.0838], [0.0573], [0.6297], [0.9079], [0.0096], [0.5922], [0.8501], [0.4597], [0.53], [0.4273], [0.1235], [0.2322], [0.9672], [0.9857], [0.065], [0.7571], [0.5158], [0.5941], [0.5321], [0.5171], [0.833], [0.8561]]]], 2, Con13482), 
LELU34155 = elu_layer([[[[[0.4808, 0.3666]]]]], -0.8941906392630035, ELU34155), 
LRes59444 = reshape_layer(ELU34155, [1, 1, 2], Res59444), 
LRes10485 = reshape_layer(Res59444, [1, 2], Res10485), 
LPRe52626 = prelu_layer([[[[0.5545]]]], [[[0.1298]]], PRe52626), 
LRes60486 = reshape_layer(PRe52626, [1, 1], Res60486), 
LPer89557 = permute_layer(Res60486, 2,1, Per89557), 
LCon4516 = concatenate_layer([Per89557,[[[0.5057]]]], 2, Con4516), 
LMax82903 = maximum_layer([Res10485,Con4516], Max82903), 
LSof85149 = softmax_layer(Max82903, 1, Sof85149), 
LDot23029 = dot_layer(Con13482,Sof85149, 2, 2, Dot23029), 
exec_layers([LZer95165,LRes90305,LFla31600,LMin49280,LRes69793,LGlo91587,LCon60795,LMul10464,LRes62930,LCon13482,LELU34155,LRes59444,LRes10485,LPRe52626,LRes60486,LPer89557,LCon4516,LMax82903,LSof85149,LDot23029],["Zer95165","Res90305","Fla31600","Min49280","Res69793","Glo91587","Con60795","Mul10464","Res62930","Con13482","ELU34155","Res59444","Res10485","PRe52626","Res60486","Per89557","Con4516","Max82903","Sof85149","Dot23029"],Dot23029,"Dot23029")

Actual (Unparsed): [[[0.9073000], [0.8348000], [0.1436000], [0.9071000], [0.4327000], [0.0838000], [0.0573000], [0.6297000], [0.9079000], [0.0096000], [0.5922000], [0.8501000], [0.9714103], [1.2228250], [1.3161675], [0.1235000], [0.2322000], [0.9672000], [0.9857000], [0.0650000], [0.7571000], [0.5158000], [0.5941000], [0.5321000], [0.5171000], [0.8330000], [0.8561000]]]

Expected (Unparsed): [[[0.9073],[0.8348],[0.1436],[0.9071],[0.4327],[0.0838],[0.0573],[0.6297],[0.9079],[0.0096],[0.5922],[0.8501],[0.9714103],[1.2228249999999998],[1.31616746],[0.1235],[0.2322],[0.9672],[0.9857],[0.065],[0.7571],[0.5158],[0.5941],[0.5321],[0.5171],[0.833],[0.8561]]]

Actual:   [[[0.9073], [0.8348], [0.1436], [0.9071], [0.4327], [0.0838], [0.0573], [0.6297], [0.9079], [0.0096], [0.5922], [0.8501], [0.9715], [1.2229], [1.3162], [0.1235], [0.2322], [0.9672], [0.9857], [0.065], [0.7571], [0.5158], [0.5941], [0.5321], [0.5171], [0.833], [0.8561]]]

Expected: [[[0.9073], [0.8348], [0.1436], [0.9071], [0.4327], [0.0838], [0.0573], [0.6297], [0.9079], [0.0096], [0.5922], [0.8501], [0.9715], [1.2229], [1.3162], [0.1235], [0.2322], [0.9672], [0.9857], [0.065], [0.7571], [0.5158], [0.5941], [0.5321], [0.5171], [0.833], [0.8561]]]