import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Ave92264 = tf.keras.layers.Input(shape=([1, 2, 2, 2]))
in1Ave92264 = tf.keras.layers.Input(shape=([1, 2, 2, 2]))
in0Add36926 = tf.keras.layers.Input(shape=([2, 1, 1]))
in1Add36926 = tf.keras.layers.Input(shape=([2, 1, 1]))
in0Con24319 = tf.keras.layers.Input(shape=([2, 3, 3]))

Ave92264 = keras.layers.Average(name = 'Ave92264', )([in0Ave92264,in1Ave92264])
Res37462 = keras.layers.Reshape((1, 2, 4), name = 'Res37462', )(Ave92264)
Con4088 = keras.layers.Conv2DTranspose(4, (1, 2),strides=(1, 1), padding='same', name = 'Con4088', )(Res37462)
Zer78054 = keras.layers.ZeroPadding2D(padding=((1, 0), (1, 0)), name = 'Zer78054', )(Con4088)
Add36926 = keras.layers.Add(name = 'Add36926', )([in0Add36926,in1Add36926])
Zer40218 = keras.layers.ZeroPadding2D(padding=((0, 0), (2, 0)), name = 'Zer40218', )(Add36926)
Con24319 = keras.layers.Concatenate(axis=3, name = 'Con24319', )([Zer40218,in0Con24319])
Mul41827 = keras.layers.Multiply(name = 'Mul41827', )([Zer78054,Con24319])
model = tf.keras.models.Model(inputs=[in0Ave92264,in1Ave92264,in0Add36926,in1Add36926,in0Con24319], outputs=Mul41827)
w = model.get_layer('Con4088').get_weights() 
w[0] = np.array([[[[0.9514, 0.918, 0.5805, 0.5297], [0.443, 0.4771, 0.5402, 0.4295], [0.892, 0.2111, 0.272, 0.8813], [0.7823, 0.6081, 0.6862, 0.5551]], [[0.2982, 0.0969, 0.1472, 0.4401], [0.4302, 0.8395, 0.5666, 0.6618], [0.5763, 0.2837, 0.9289, 0.3327], [0.352, 0.8558, 0.0202, 0.2699]]]])
w[1] = np.array([0, 0, 0, 0])
model.get_layer('Con4088').set_weights(w) 
in0Ave92264 = tf.constant([[[[[0.5552, 0.3947], [0.9757, 0.4202]], [[0.5917, 0.9347], [0.4655, 0.1356]]]]])
in1Ave92264 = tf.constant([[[[[0.3297, 0.1464], [0.4967, 0.8628]], [[0.9224, 0.2156], [0.4499, 0.3974]]]]])
in0Add36926 = tf.constant([[[[0.0327]], [[0.0249]]]])
in1Add36926 = tf.constant([[[[0.1913]], [[0.9021]]]])
in0Con24319 = tf.constant([[[[0.7189, 0.2558, 0.8643], [0.8794, 0.7469, 0.6437], [0.8494, 0.1193, 0.682]], [[0.4876, 0.9667, 0.8424], [0.7816, 0.879, 0.5479], [0.1739, 0.6241, 0.194]]]])
print (np.array2string(model.predict([in0Ave92264,in1Ave92264,in0Add36926,in1Add36926,in0Con24319],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Mul41827.png')

LAve92264 = average_layer([[[[[[0.5552, 0.3947], [0.9757, 0.4202]], [[0.5917, 0.9347], [0.4655, 0.1356]]]]], [[[[[0.3297, 0.1464], [0.4967, 0.8628]], [[0.9224, 0.2156], [0.4499, 0.3974]]]]]], Ave92264), 
LRes37462 = reshape_layer(Ave92264, [1, 2, 4], Res37462), 
LCon4088 = conv2D_transpose_layer(Res37462, 1, 2,[[[[0.9514, 0.918, 0.5805, 0.5297], [0.443, 0.4771, 0.5402, 0.4295], [0.892, 0.2111, 0.272, 0.8813], [0.7823, 0.6081, 0.6862, 0.5551]], [[0.2982, 0.0969, 0.1472, 0.4401], [0.4302, 0.8395, 0.5666, 0.6618], [0.5763, 0.2837, 0.9289, 0.3327], [0.352, 0.8558, 0.0202, 0.2699]]]],[0, 0, 0, 0], 1, 1, true, Con4088), 
LZer78054 = zero_padding2D_layer(Con4088, 1, 0, 1, 0, Zer78054), 
LAdd36926 = add_layer([[[[[0.0327]], [[0.0249]]]], [[[[0.1913]], [[0.9021]]]]], Add36926), 
LZer40218 = zero_padding2D_layer(Add36926, 0, 0, 2, 0, Zer40218), 
LCon24319 = concatenate_layer([Zer40218,[[[[0.7189, 0.2558, 0.8643], [0.8794, 0.7469, 0.6437], [0.8494, 0.1193, 0.682]], [[0.4876, 0.9667, 0.8424], [0.7816, 0.879, 0.5479], [0.1739, 0.6241, 0.194]]]]], 3, Con24319), 
LMul41827 = multiply_layer([Zer78054,Con24319], Mul41827), 
exec_layers([LAve92264,LRes37462,LCon4088,LZer78054,LAdd36926,LZer40218,LCon24319,LMul41827],["Ave92264","Res37462","Con4088","Zer78054","Add36926","Zer40218","Con24319","Mul41827"],Mul41827,"Mul41827")

Actual (Unparsed): [[[[0.0000000, 0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000, 0.0000000]], [[0.0000000, 0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.7802746, 1.0700760, 0.7516789], [2.0430642, 0.3879070, 1.4885321, 0.3839819]]]]

Expected (Unparsed): [[[[0,0.0,0.0,0.0],[0,0.0,0.0,0.0],[0.0,0.0,0.0,0.0]],[[0,0.0,0.0,0.0],[0.0,0.7802745978919999,1.070076013545,0.7516789019220002],[2.043064101915,0.38790705087599997,1.4885320571415,0.38398187200000006]]]]

Actual:   [[[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]], [[0, 0, 0, 0], [0, 0.7803, 1.0701, 0.7517], [2.0431, 0.388, 1.4886, 0.384]]]]

Expected: [[[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]], [[0, 0, 0, 0], [0, 0.7803, 1.0701, 0.7517], [2.0431, 0.388, 1.4886, 0.384]]]]