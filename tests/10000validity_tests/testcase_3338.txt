import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Dot33550 = tf.keras.layers.Input(shape=([3, 2]))
in1Dot33550 = tf.keras.layers.Input(shape=([3, 2]))

Dot33550 = keras.layers.Dot(axes=(2, 2), name = 'Dot33550', )([in0Dot33550,in1Dot33550])
Res22170 = keras.layers.Reshape((3, 3, 1), name = 'Res22170', )(Dot33550)
Dep1160 = keras.layers.DepthwiseConv2D((1, 2),strides=(2, 2), padding='valid', name = 'Dep1160', )(Res22170)
Thr40083 = keras.layers.ThresholdedReLU(theta=8.115541029498923, name = 'Thr40083', )(Dep1160)
model = tf.keras.models.Model(inputs=[in0Dot33550,in1Dot33550], outputs=Thr40083)
w = model.get_layer('Dep1160').get_weights() 
w[0] = np.array([[[[0.1982]], [[0.2282]]]])
w[1] = np.array([0])
model.get_layer('Dep1160').set_weights(w) 
in0Dot33550 = tf.constant([[[0.1673, 0.7919], [0.2073, 0.3315], [0.8837, 0.9171]]])
in1Dot33550 = tf.constant([[[0.0443, 0.9924], [0.5497, 0.8927], [0.3504, 0.329]]])
print (np.array2string(model.predict([in0Dot33550,in1Dot33550],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Thr40083.png')

LDot33550 = dot_layer([[[0.1673, 0.7919], [0.2073, 0.3315], [0.8837, 0.9171]]], [[[0.0443, 0.9924], [0.5497, 0.8927], [0.3504, 0.329]]], 2, 2, Dot33550), 
LRes22170 = reshape_layer(Dot33550, [3, 3, 1], Res22170), 
LDep1160 = depthwise_conv2D_layer(Res22170, 1, 2,[[[[0.1982]], [[0.2282]]]],[0], 2, 2, false, Dep1160), 
LThr40083 = thresholded_relu_layer(Dep1160, 8.115541029498923, Thr40083), 
exec_layers([LDot33550,LRes22170,LDep1160,LThr40083],["Dot33550","Res22170","Dep1160","Thr40083"],Thr40083,"Thr40083")

Actual (Unparsed): [[[[0.0000000]], [[0.0000000]]]]

Expected (Unparsed): [[[[0]],[[0]]]]

Actual:   [[[[0]], [[0]]]]

Expected: [[[[0]], [[0]]]]