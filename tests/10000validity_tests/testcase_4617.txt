import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Den70757 = tf.keras.layers.Input(shape=([2, 4, 4]))
in0Ave99801 = tf.keras.layers.Input(shape=([2, 1, 1]))
in1Ave99801 = tf.keras.layers.Input(shape=([2, 1, 1]))
in0Mul7051 = tf.keras.layers.Input(shape=([2, 2, 1]))
in1Mul7051 = tf.keras.layers.Input(shape=([2, 2, 1]))
in0Con1782 = tf.keras.layers.Input(shape=([2, 2, 2]))

Den70757 = keras.layers.Dense(4,name = 'Den70757', )(in0Den70757)
Res63559 = keras.layers.Reshape((2, 16), name = 'Res63559', )(Den70757)
Ave99801 = keras.layers.Average(name = 'Ave99801', )([in0Ave99801,in1Ave99801])
Con25275 = keras.layers.Conv2D(3, (1, 1),strides=(1, 1), padding='valid', dilation_rate=(1, 1), name = 'Con25275', )(Ave99801)
Zer21606 = keras.layers.ZeroPadding2D(padding=((0, 0), (1, 0)), name = 'Zer21606', )(Con25275)
Mul7051 = keras.layers.Multiply(name = 'Mul7051', )([in0Mul7051,in1Mul7051])
Con1782 = keras.layers.Concatenate(axis=3, name = 'Con1782', )([Mul7051,in0Con1782])
Max63992 = keras.layers.Maximum(name = 'Max63992', )([Zer21606,Con1782])
Res50667 = keras.layers.Reshape((2, 6), name = 'Res50667', )(Max63992)
Dot51281 = keras.layers.Dot(axes=(1, 1), name = 'Dot51281', )([Res63559,Res50667])
model = tf.keras.models.Model(inputs=[in0Den70757,in0Ave99801,in1Ave99801,in0Mul7051,in1Mul7051,in0Con1782], outputs=Dot51281)
w = model.get_layer('Den70757').get_weights() 
w[0] = np.array([[0.9435, 0.2841, 0.9003, 0.5536], [0.8079, 0.5556, 0.3636, 0.0419], [0.6662, 0.6461, 0.4889, 0.1231], [0.6766, 0.9642, 0.3884, 0.8856]])
w[1] = np.array([0.8291, 0.9415, 0.961, 0.1921])
model.get_layer('Den70757').set_weights(w) 
w = model.get_layer('Con25275').get_weights() 
w[0] = np.array([[[[0.18, 0.8997, 0.9806]]]])
w[1] = np.array([0, 0, 0])
model.get_layer('Con25275').set_weights(w) 
in0Den70757 = tf.constant([[[[0.835, 0.9776, 0.293, 0.2383], [0.6181, 0.0337, 0.8577, 0.6497], [0.0613, 0.4385, 0.2009, 0.1461], [0.5648, 0.0091, 0.0556, 0.4207]], [[0.5432, 0.8012, 0.8274, 0.3077], [0.3088, 0.4192, 0.9674, 0.9173], [0.078, 0.74, 0.4545, 0.9507], [0.2132, 0.1941, 0.6701, 0.4835]]]])
in0Ave99801 = tf.constant([[[[0.2522]], [[0.6983]]]])
in1Ave99801 = tf.constant([[[[0.2159]], [[0.4082]]]])
in0Mul7051 = tf.constant([[[[0.6272], [0.441]], [[0.9029], [0.2856]]]])
in1Mul7051 = tf.constant([[[[0.2301], [0.9838]], [[0.2239], [0.5708]]]])
in0Con1782 = tf.constant([[[[0.5158, 0.9668], [0.2087, 0.3806]], [[0.5994, 0.8705], [0.4503, 0.7356]]]])
print (np.array2string(model.predict([in0Den70757,in0Ave99801,in1Ave99801,in0Mul7051,in1Mul7051,in0Con1782],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Dot51281.png')

LDen70757 = dense_layer([[[[0.835, 0.9776, 0.293, 0.2383], [0.6181, 0.0337, 0.8577, 0.6497], [0.0613, 0.4385, 0.2009, 0.1461], [0.5648, 0.0091, 0.0556, 0.4207]], [[0.5432, 0.8012, 0.8274, 0.3077], [0.3088, 0.4192, 0.9674, 0.9173], [0.078, 0.74, 0.4545, 0.9507], [0.2132, 0.1941, 0.6701, 0.4835]]]], [[0.9435, 0.2841, 0.9003, 0.5536], [0.8079, 0.5556, 0.3636, 0.0419], [0.6662, 0.6461, 0.4889, 0.1231], [0.6766, 0.9642, 0.3884, 0.8856]],[0.8291, 0.9415, 0.961, 0.1921], Den70757), 
LRes63559 = reshape_layer(Den70757, [2, 16], Res63559), 
LAve99801 = average_layer([[[[[0.2522]], [[0.6983]]]], [[[[0.2159]], [[0.4082]]]]], Ave99801), 
LCon25275 = conv2D_layer(Ave99801, 1, 1,[[[[0.18, 0.8997, 0.9806]]]],[0, 0, 0], 1, 1, false, 1, 1, Con25275), 
LZer21606 = zero_padding2D_layer(Con25275, 0, 0, 1, 0, Zer21606), 
LMul7051 = multiply_layer([[[[[0.6272], [0.441]], [[0.9029], [0.2856]]]], [[[[0.2301], [0.9838]], [[0.2239], [0.5708]]]]], Mul7051), 
LCon1782 = concatenate_layer([Mul7051,[[[[0.5158, 0.9668], [0.2087, 0.3806]], [[0.5994, 0.8705], [0.4503, 0.7356]]]]], 3, Con1782), 
LMax63992 = maximum_layer([Zer21606,Con1782], Max63992), 
LRes50667 = reshape_layer(Max63992, [2, 6], Res50667), 
LDot51281 = dot_layer(Res63559,Res50667, 1, 1, Dot51281), 
exec_layers([LDen70757,LRes63559,LAve99801,LCon25275,LZer21606,LMul7051,LCon1782,LMax63992,LRes50667,LDot51281],["Den70757","Res63559","Ave99801","Con25275","Zer21606","Mul7051","Con1782","Max63992","Res50667","Dot51281"],Dot51281,"Dot51281")

Actual (Unparsed): [[[0.9543701, 3.0725682, 5.0638164, 1.6468408, 1.9498433, 3.0733084], [0.7885496, 2.5262232, 4.1349071, 1.3155887, 1.6316335, 2.5598650], [0.7904805, 2.5462802, 4.1995345, 1.3689121, 1.6127825, 2.5433237], [0.3181020, 1.0260047, 1.6952280, 0.5557149, 0.6468012, 1.0212694], [0.9043845, 2.8968792, 4.7405950, 1.5072683, 1.8720323, 2.9366161], [0.8946156, 2.8561311, 4.6522299, 1.4568285, 1.8673876, 2.9204470], [0.7666336, 2.4665555, 4.0614128, 1.3171064, 1.5689207, 2.4713820], [0.4408312, 1.4139989, 2.3184083, 0.7417437, 0.9092874, 1.4282110], [0.7073072, 2.2267076, 3.5546980, 1.0382975, 1.5281670, 2.3606604], [0.7352191, 2.3094069, 3.6746542, 1.0605915, 1.5969898, 2.4623215], [0.5744631, 1.8202310, 2.9331800, 0.8856783, 1.2218220, 1.8979905], [0.2928637, 0.9033665, 1.3987097, 0.3626872, 0.6633984, 1.0080465], [0.6404053, 2.0474299, 3.3416084, 1.0532838, 1.3320061, 2.0858401], [0.6296378, 2.0029836, 3.2460468, 0.9993765, 1.3261164, 2.0672491], [0.5915963, 1.9002817, 3.1218883, 1.0051474, 1.2158302, 1.9122338], [0.2952375, 0.9531266, 1.5767930, 0.5189100, 0.5988793, 0.9464339]]]

Expected (Unparsed): [[[0.9543700383469802,3.072568270108,5.063816365246,1.6468407953690785,1.9498432768494567,3.0733083738799998],[0.7885496323764476,2.5262232362840003,4.134907126956,1.3155886724617896,1.6316335100431556,2.559864948724],[0.7904805044127057,2.5462802471319996,4.1995345282139995,1.3689120731434175,1.61278249578603,2.54332374116],[0.31810200139587497,1.02600468596,1.6952280430259998,0.5557149321988488,0.6468011764794792,1.021269427948],[0.9043844408340022,2.896879290448,4.7405950262820005,1.5072682405445113,1.8720322668952254,2.9366160562280004],[0.8946156276942749,2.8561311196720007,4.652229891252,1.4568284663315043,1.8673875760457574,2.9204469794240002],[0.7666335978136385,2.466555586844,4.061412756838,1.3171064163489792,1.568920695286955,2.47138199572],[0.44083123008304737,1.4139988998160002,2.3184083151740005,0.7417436898897145,0.9092873690363028,1.4282110177160001],[0.70730714866117,2.22670762602,3.5546979785320003,1.0382974937241816,1.5281669507777618,2.3606603946359996],[0.7352191135317676,2.309406990518,3.6746542301669995,1.0605914547148032,1.5969897644975761,2.4623215527879996],[0.5744630973679451,1.8202310287940002,2.933180016897,0.8856782294728703,1.2218219881107466,1.8979905356920002],[0.29286368062258933,0.9033664939220001,1.3987096448390002,0.3626871976302456,0.6633984268683791,1.00804653472],[0.6404053141338276,2.047429953488,3.3416083944589996,1.053283801038143,1.3320060982083362,2.0858401300539997],[0.6296378064921637,2.002983599658,3.2460468055269995,0.9993764452537992,1.3261163789946555,2.067249097128],[0.5915962789322354,1.90028173133,3.1218882831609998,1.0051473605041008,1.2158302038507425,1.912233808708],[0.2952375092498302,0.9531266140980001,1.57679294779,0.5189099372776956,0.5988792989694278,0.946433884542]]]

Actual:   [[[0.9544, 3.0726, 5.0639, 1.6469, 1.9499, 3.0734], [0.7886, 2.5263, 4.135, 1.3156, 1.6317, 2.5599], [0.7905, 2.5463, 4.1996, 1.369, 1.6128, 2.5434], [0.3182, 1.0261, 1.6953, 0.5558, 0.6469, 1.0213], [0.9044, 2.8969, 4.7406, 1.5073, 1.8721, 2.9367], [0.8947, 2.8562, 4.6523, 1.4569, 1.8674, 2.9205], [0.7667, 2.4666, 4.0615, 1.3172, 1.569, 2.4714], [0.4409, 1.414, 2.3185, 0.7418, 0.9093, 1.4283], [0.7074, 2.2268, 3.5547, 1.0383, 1.5282, 2.3607], [0.7353, 2.3095, 3.6747, 1.0606, 1.597, 2.4624], [0.5745, 1.8203, 2.9332, 0.8857, 1.2219, 1.898], [0.2929, 0.9034, 1.3988, 0.3627, 0.6634, 1.0081], [0.6405, 2.0475, 3.3417, 1.0533, 1.3321, 2.0859], [0.6297, 2.003, 3.2461, 0.9994, 1.3262, 2.0673], [0.5916, 1.9003, 3.1219, 1.0052, 1.2159, 1.9123], [0.2953, 0.9532, 1.5768, 0.519, 0.5989, 0.9465]]]

Expected: [[[0.9544, 3.0726, 5.0639, 1.6469, 1.9499, 3.0734], [0.7886, 2.5263, 4.135, 1.3156, 1.6317, 2.5599], [0.7905, 2.5463, 4.1996, 1.369, 1.6128, 2.5434], [0.3182, 1.0261, 1.6953, 0.5558, 0.6469, 1.0213], [0.9044, 2.8969, 4.7406, 1.5073, 1.8721, 2.9367], [0.8947, 2.8562, 4.6523, 1.4569, 1.8674, 2.9205], [0.7667, 2.4666, 4.0615, 1.3172, 1.569, 2.4714], [0.4409, 1.414, 2.3185, 0.7418, 0.9093, 1.4283], [0.7074, 2.2268, 3.5547, 1.0383, 1.5282, 2.3607], [0.7353, 2.3095, 3.6747, 1.0606, 1.597, 2.4624], [0.5745, 1.8203, 2.9332, 0.8857, 1.2219, 1.898], [0.2929, 0.9034, 1.3988, 0.3627, 0.6634, 1.0081], [0.6405, 2.0475, 3.3417, 1.0533, 1.3321, 2.0859], [0.6297, 2.003, 3.2461, 0.9994, 1.3262, 2.0673], [0.5916, 1.9003, 3.1219, 1.0052, 1.2159, 1.9123], [0.2953, 0.9532, 1.5768, 0.519, 0.5989, 0.9465]]]