import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Add51993 = tf.keras.layers.Input(shape=([1, 1, 1]))
in1Add51993 = tf.keras.layers.Input(shape=([1, 1, 1]))
in0Con82888 = tf.keras.layers.Input(shape=([2, 2, 3]))
in0PRe66392 = tf.keras.layers.Input(shape=([2, 2, 2, 1]))

Add51993 = keras.layers.Add(name = 'Add51993', )([in0Add51993,in1Add51993])
Zer63188 = keras.layers.ZeroPadding2D(padding=((1, 0), (1, 0)), name = 'Zer63188', )(Add51993)
Con82888 = keras.layers.Concatenate(axis=3, name = 'Con82888', )([Zer63188,in0Con82888])
PRe66392 = keras.layers.PReLU(name = 'PRe66392', input_shape=(2, 2, 2, 1))(in0PRe66392)
Res98920 = keras.layers.Reshape((2, 2, 2), name = 'Res98920', )(PRe66392)
Con595 = keras.layers.Conv2D(4, (2, 2),strides=(1, 1), padding='same', dilation_rate=(1, 1), name = 'Con595', )(Res98920)
Sub8813 = keras.layers.Subtract(name = 'Sub8813', )([Con82888,Con595])
model = tf.keras.models.Model(inputs=[in0Add51993,in1Add51993,in0Con82888,in0PRe66392], outputs=Sub8813)
w = model.get_layer('PRe66392').get_weights() 
w[0] = np.array([[[[0.9561], [0.8697]], [[0.4362], [0.1943]]], [[[0.3622], [0.5218]], [[0.3589], [0.9431]]]])
model.get_layer('PRe66392').set_weights(w) 
w = model.get_layer('Con595').get_weights() 
w[0] = np.array([[[[0.3538, 0.4808, 0.5261, 0.7909], [0.0514, 0.6418, 0.4231, 0.7939]], [[0.953, 0.265, 0.6166, 0.5281], [0.1686, 0.9196, 0.0711, 0.7581]]], [[[0.3249, 0.4295, 0.9788, 0.8229], [0.0567, 0.7854, 0.1235, 0.6761]], [[0.2452, 0.0849, 0.8231, 0.4724], [0.6613, 0.9684, 0.6788, 0.1488]]]])
w[1] = np.array([0, 0, 0, 0])
model.get_layer('Con595').set_weights(w) 
in0Add51993 = tf.constant([[[[0.4124]]]])
in1Add51993 = tf.constant([[[[0.3991]]]])
in0Con82888 = tf.constant([[[[0.842, 0.9854, 0.3768], [0.2856, 0.8464, 0.4431]], [[0.9974, 0.8579, 0.4573], [0.43, 0.1637, 0.1485]]]])
in0PRe66392 = tf.constant([[[[[0.4575], [0.9361]], [[0.8398], [0.7485]]], [[[0.2496], [0.3591]], [[0.5565], [0.3162]]]]])
print (np.array2string(model.predict([in0Add51993,in1Add51993,in0Con82888,in0PRe66392],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Sub8813.png')

LAdd51993 = add_layer([[[[[0.4124]]]], [[[[0.3991]]]]], Add51993), 
LZer63188 = zero_padding2D_layer(Add51993, 1, 0, 1, 0, Zer63188), 
LCon82888 = concatenate_layer([Zer63188,[[[[0.842, 0.9854, 0.3768], [0.2856, 0.8464, 0.4431]], [[0.9974, 0.8579, 0.4573], [0.43, 0.1637, 0.1485]]]]], 3, Con82888), 
LPRe66392 = prelu_layer([[[[[0.4575], [0.9361]], [[0.8398], [0.7485]]], [[[0.2496], [0.3591]], [[0.5565], [0.3162]]]]], [[[[0.9561], [0.8697]], [[0.4362], [0.1943]]], [[[0.3622], [0.5218]], [[0.3589], [0.9431]]]], PRe66392), 
LRes98920 = reshape_layer(PRe66392, [2, 2, 2], Res98920), 
LCon595 = conv2D_layer(Res98920, 2, 2,[[[[0.3538, 0.4808, 0.5261, 0.7909], [0.0514, 0.6418, 0.4231, 0.7939]], [[0.953, 0.265, 0.6166, 0.5281], [0.1686, 0.9196, 0.0711, 0.7581]]], [[[0.3249, 0.4295, 0.9788, 0.8229], [0.0567, 0.7854, 0.1235, 0.6761]], [[0.2452, 0.0849, 0.8231, 0.4724], [0.6613, 0.9684, 0.6788, 0.1488]]]],[0, 0, 0, 0], 1, 1, true, 1, 1, Con595), 
LSub8813 = subtract_layer(Con82888,Con595, Sub8813), 
exec_layers([LAdd51993,LZer63188,LCon82888,LPRe66392,LRes98920,LCon595,LSub8813],["Add51993","Zer63188","Con82888","PRe66392","Res98920","Con595","Sub8813"],Sub8813,"Sub8813")

Actual (Unparsed): [[[[-1.5835184, -1.6323178, -1.1837427, -2.4972673], [-0.5343295, -1.0859234, -0.4958620, -1.4870586]], [[-0.6904221, 0.2086719, 0.2090305, -0.5587970], [0.5983576, -0.0405024, -0.2628589, -0.5426670]]]]

Expected (Unparsed): [[[[-1.5835184099999997,-1.6323178500000002,-1.1837427299999999,-2.49726728],[-0.53432953,-1.08592337,-0.49586203000000006,-1.48705864]],[[-0.6904220400000001,0.2086719199999999,0.20903051000000006,-0.558797],[0.59835762,-0.040502360000000015,-0.26285887,-0.54266703]]]]

Actual:   [[[[-1.5835, -1.6323, -1.1837, -2.4972], [-0.5343, -1.0859, -0.4958, -1.487]], [[-0.6904, 0.2087, 0.2091, -0.5587], [0.5984, -0.0405, -0.2628, -0.5426]]]]

Expected: [[[[-1.5835, -1.6323, -1.1837, -2.4972], [-0.5343, -1.0859, -0.4958, -1.487]], [[-0.6904, 0.2087, 0.2091, -0.5587], [0.5984, -0.0405, -0.2628, -0.5426]]]]