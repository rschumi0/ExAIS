import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Ave69944 = tf.keras.layers.Input(shape=([1, 2, 1, 1]))
in1Ave69944 = tf.keras.layers.Input(shape=([1, 2, 1, 1]))
in0Loc54955 = tf.keras.layers.Input(shape=([1, 1]))
in0Ave64028 = tf.keras.layers.Input(shape=([2, 2]))
in0Con65274 = tf.keras.layers.Input(shape=([1, 2]))

Ave69944 = keras.layers.Average(name = 'Ave69944', )([in0Ave69944,in1Ave69944])
Res84451 = keras.layers.Reshape((1, 2, 1), name = 'Res84451', )(Ave69944)
Loc54955 = keras.layers.LocallyConnected1D(2, (1),strides=(6), name = 'Loc54955', )(in0Loc54955)
Res38830 = keras.layers.Reshape((1, 2, 1), name = 'Res38830', )(Loc54955)
Add68151 = keras.layers.Add(name = 'Add68151', )([Res84451,Res38830])
Cro78550 = keras.layers.Cropping2D(cropping=((0, 0), (1, 0)), name = 'Cro78550', )(Add68151)
Res55802 = keras.layers.Reshape((1, 1), name = 'Res55802', )(Cro78550)
Sep83937 = keras.layers.SeparableConv1D(4, (1),strides=(1), padding='valid', name = 'Sep83937', )(Res55802)
Ave64028 = keras.layers.AveragePooling1D(pool_size=(2), name = 'Ave64028', )(in0Ave64028)
Con65274 = keras.layers.Concatenate(axis=2, name = 'Con65274', )([Ave64028,in0Con65274])
Add88358 = keras.layers.Add(name = 'Add88358', )([Sep83937,Con65274])
model = tf.keras.models.Model(inputs=[in0Ave69944,in1Ave69944,in0Loc54955,in0Ave64028,in0Con65274], outputs=Add88358)
w = model.get_layer('Loc54955').get_weights() 
w[0] = np.array([[[0.1271, 0.771]]])
w[1] = np.array([[0, 0]])
model.get_layer('Loc54955').set_weights(w) 
w = model.get_layer('Sep83937').get_weights() 
w[0] = np.array([[[0.9455]]])
w[1] = np.array([[[0.543, 0.3469, 0.143, 0.4523]]])
w[2] = np.array([0, 0, 0, 0])
model.get_layer('Sep83937').set_weights(w) 
in0Ave69944 = tf.constant([[[[[0.6459]], [[0.7653]]]]])
in1Ave69944 = tf.constant([[[[[0.5998]], [[0.8985]]]]])
in0Loc54955 = tf.constant([[[0.759]]])
in0Ave64028 = tf.constant([[[1.8652, 1.1211], [1.3378, 1.5294]]])
in0Con65274 = tf.constant([[[0.0181, 0.1335]]])
print (np.array2string(model.predict([in0Ave69944,in1Ave69944,in0Loc54955,in0Ave64028,in0Con65274],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Add88358.png')

LAve69944 = average_layer([[[[[[0.6459]], [[0.7653]]]]], [[[[[0.5998]], [[0.8985]]]]]], Ave69944), 
LRes84451 = reshape_layer(Ave69944, [1, 2, 1], Res84451), 
LLoc54955 = locally_connected1D_layer([[[0.759]]], 1,[[[0.1271, 0.771]]],[[0, 0]], 6, Loc54955), 
LRes38830 = reshape_layer(Loc54955, [1, 2, 1], Res38830), 
LAdd68151 = add_layer([Res84451,Res38830], Add68151), 
LCro78550 = cropping2D_layer(Add68151, 0, 0, 1, 0, Cro78550), 
LRes55802 = reshape_layer(Cro78550, [1, 1], Res55802), 
LSep83937 = separable_conv1D_layer(Res55802, 1,[[[[0.9455]]],[[[0.543, 0.3469, 0.143, 0.4523]]]],[0, 0, 0, 0], 1, false, Sep83937), 
LAve64028 = average_pooling1D_layer([[[1.8652, 1.1211], [1.3378, 1.5294]]], 2, Ave64028), 
LCon65274 = concatenate_layer([Ave64028,[[[0.0181, 0.1335]]]], 2, Con65274), 
LAdd88358 = add_layer([Sep83937,Con65274], Add88358), 
exec_layers([LAve69944,LRes84451,LLoc54955,LRes38830,LAdd68151,LCro78550,LRes55802,LSep83937,LAve64028,LCon65274,LAdd88358],["Ave69944","Res84451","Loc54955","Res38830","Add68151","Cro78550","Res55802","Sep83937","Ave64028","Con65274","Add88358"],Add88358,"Add88358")

Actual (Unparsed): [[[2.3290427, 1.7900466, 0.2096996, 0.7395176]]]

Expected (Unparsed): [[[2.3290427036785,1.79004661861155,0.2096996438785,0.73951761486885]]]

Actual:   [[[2.3291, 1.7901, 0.2097, 0.7396]]]

Expected: [[[2.3291, 1.7901, 0.2097, 0.7396]]]