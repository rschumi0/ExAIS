import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Min4129 = tf.keras.layers.Input(shape=([2, 1, 2, 2]))
in1Min4129 = tf.keras.layers.Input(shape=([2, 1, 2, 2]))

Min4129 = keras.layers.Minimum(name = 'Min4129', )([in0Min4129,in1Min4129])
Den58246 = keras.layers.Dense(4,name = 'Den58246', )(Min4129)
model = tf.keras.models.Model(inputs=[in0Min4129,in1Min4129], outputs=Den58246)
w = model.get_layer('Den58246').get_weights() 
w[0] = np.array([[0.954, 0.5268, 0.5352, 0.1603], [0.1991, 0.1795, 0.8748, 0.2109]])
w[1] = np.array([0.5466, 0.9013, 0.4605, 0.3386])
model.get_layer('Den58246').set_weights(w) 
in0Min4129 = tf.constant([[[[[0.2212, 0.7805], [0.1403, 0.2771]]], [[[0.5632, 0.8079], [0.8424, 0.5419]]]]])
in1Min4129 = tf.constant([[[[[0.9877, 0.9584], [0.713, 0.2184]]], [[[0.8498, 0.8729], [0.051, 0.3584]]]]])
print (np.array2string(model.predict([in0Min4129,in1Min4129],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Den58246.png')

LMin4129 = minimum_layer([[[[[[0.2212, 0.7805], [0.1403, 0.2771]]], [[[0.5632, 0.8079], [0.8424, 0.5419]]]]], [[[[[0.9877, 0.9584], [0.713, 0.2184]]], [[[0.8498, 0.8729], [0.051, 0.3584]]]]]], Min4129), 
LDen58246 = dense_layer(Min4129, [[0.954, 0.5268, 0.5352, 0.1603], [0.1991, 0.1795, 0.8748, 0.2109]],[0.5466, 0.9013, 0.4605, 0.3386], Den58246), 
exec_layers([LMin4129,LDen58246],["Min4129","Den58246"],Den58246,"Den58246")

Actual (Unparsed): [[[[[0.9130224, 1.1579279, 1.2616676, 0.5386658], [0.7239296, 1.0144128, 0.7266449, 0.4071507]]], [[[1.2447457, 1.3430118, 1.4686756, 0.5992671], [0.6666114, 0.9924996, 0.8013235, 0.4223619]]]]]

Expected (Unparsed): [[[[[0.91302235,1.1579279100000002,1.26166764,0.53866581],[0.72392964,1.01441284,0.72664488,0.40715065000000006]]],[[[1.24474569,1.3430118100000001,1.4686755599999999,0.59926707],[0.6666114399999999,0.9924995999999999,0.8013235200000001,0.42236186]]]]]

Actual:   [[[[[0.9131, 1.158, 1.2617, 0.5387], [0.724, 1.0145, 0.7267, 0.4072]]], [[[1.2448, 1.3431, 1.4687, 0.5993], [0.6667, 0.9925, 0.8014, 0.4224]]]]]

Expected: [[[[[0.9131, 1.158, 1.2617, 0.5387], [0.724, 1.0145, 0.7267, 0.4072]]], [[[1.2448, 1.3431, 1.4687, 0.5993], [0.6667, 0.9925, 0.8014, 0.4224]]]]]