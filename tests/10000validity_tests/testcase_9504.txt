import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Ave16085 = tf.keras.layers.Input(shape=([1, 2, 2, 1]))
in1Ave16085 = tf.keras.layers.Input(shape=([1, 2, 2, 1]))
in0Mul89140 = tf.keras.layers.Input(shape=([2, 1]))
in1Mul89140 = tf.keras.layers.Input(shape=([2, 1]))
in0Con82364 = tf.keras.layers.Input(shape=([1, 2]))

Ave16085 = keras.layers.Average(name = 'Ave16085', )([in0Ave16085,in1Ave16085])
ELU72215 = keras.layers.ELU(alpha=9.542419778387167, name = 'ELU72215', )(Ave16085)
Res51076 = keras.layers.Reshape((1, 2, 2), name = 'Res51076', )(ELU72215)
Res98753 = keras.layers.Reshape((1, 4), name = 'Res98753', )(Res51076)
Mul89140 = keras.layers.Multiply(name = 'Mul89140', )([in0Mul89140,in1Mul89140])
Res5081 = keras.layers.Reshape((2, 1, 1), name = 'Res5081', )(Mul89140)
Con17273 = keras.layers.Conv2DTranspose(2, (1, 1),strides=(1, 1), padding='valid', name = 'Con17273', )(Res5081)
Res25612 = keras.layers.Reshape((2, 2), name = 'Res25612', )(Con17273)
Sep42681 = keras.layers.SeparableConv1D(2, (2),strides=(1), padding='valid', name = 'Sep42681', )(Res25612)
Con82364 = keras.layers.Concatenate(axis=2, name = 'Con82364', )([Sep42681,in0Con82364])
Add38623 = keras.layers.Add(name = 'Add38623', )([Res98753,Con82364])
model = tf.keras.models.Model(inputs=[in0Ave16085,in1Ave16085,in0Mul89140,in1Mul89140,in0Con82364], outputs=Add38623)
w = model.get_layer('Con17273').get_weights() 
w[0] = np.array([[[[0.7103], [0.1102]]]])
w[1] = np.array([0, 0])
model.get_layer('Con17273').set_weights(w) 
w = model.get_layer('Sep42681').get_weights() 
w[0] = np.array([[[0.5996], [0.5027]], [[0.248], [0.6418]]])
w[1] = np.array([[[0.3704, 0.2939], [0.7656, 0.5889]]])
w[2] = np.array([0, 0])
model.get_layer('Sep42681').set_weights(w) 
in0Ave16085 = tf.constant([[[[[0.2214], [0.7329]], [[0.512], [0.3326]]]]])
in1Ave16085 = tf.constant([[[[[0.9456], [0.2773]], [[0.2407], [0.7378]]]]])
in0Mul89140 = tf.constant([[[0.6609], [0.2897]]])
in1Mul89140 = tf.constant([[[0.9237], [0.5062]]])
in0Con82364 = tf.constant([[[0.5102, 0.2115]]])
print (np.array2string(model.predict([in0Ave16085,in1Ave16085,in0Mul89140,in1Mul89140,in0Con82364],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Add38623.png')

LAve16085 = average_layer([[[[[[0.2214], [0.7329]], [[0.512], [0.3326]]]]], [[[[[0.9456], [0.2773]], [[0.2407], [0.7378]]]]]], Ave16085), 
LELU72215 = elu_layer(Ave16085, 9.542419778387167, ELU72215), 
LRes51076 = reshape_layer(ELU72215, [1, 2, 2], Res51076), 
LRes98753 = reshape_layer(Res51076, [1, 4], Res98753), 
LMul89140 = multiply_layer([[[[0.6609], [0.2897]]], [[[0.9237], [0.5062]]]], Mul89140), 
LRes5081 = reshape_layer(Mul89140, [2, 1, 1], Res5081), 
LCon17273 = conv2D_transpose_layer(Res5081, 1, 1,[[[[0.7103], [0.1102]]]],[0, 0], 1, 1, false, Con17273), 
LRes25612 = reshape_layer(Con17273, [2, 2], Res25612), 
LSep42681 = separable_conv1D_layer(Res25612, 2,[[[[0.5996], [0.5027]], [[0.248], [0.6418]]],[[[0.3704, 0.2939], [0.7656, 0.5889]]]],[0, 0], 1, false, Sep42681), 
LCon82364 = concatenate_layer([Sep42681,[[[0.5102, 0.2115]]]], 2, Con82364), 
LAdd38623 = add_layer([Res98753,Con82364], Add38623), 
exec_layers([LAve16085,LELU72215,LRes51076,LRes98753,LMul89140,LRes5081,LCon17273,LRes25612,LSep42681,LCon82364,LAdd38623],["Ave16085","ELU72215","Res51076","Res98753","Mul89140","Res5081","Con17273","Res25612","Sep42681","Con82364","Add38623"],Add38623,"Add38623")

Actual (Unparsed): [[[0.7232038, 0.6151293, 0.8865500, 0.7467000]]]

Expected (Unparsed): [[[0.7232038171819486,0.6151293328383614,0.88655,0.7467]]]

Actual:   [[[0.7233, 0.6152, 0.8866, 0.7467]]]

Expected: [[[0.7233, 0.6152, 0.8866, 0.7467]]]