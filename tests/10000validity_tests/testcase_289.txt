import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Bat20385 = tf.keras.layers.Input(shape=([3, 4, 4]))

Bat20385 = keras.layers.BatchNormalization(axis=2, epsilon=0.3333403669149505,  name = 'Bat20385', )(in0Bat20385)
Res90045 = keras.layers.Reshape((3, 4, 4, 1), name = 'Res90045', )(Bat20385)
Zer4806 = keras.layers.ZeroPadding3D(padding=((1, 1), (1, 1), (1, 1)), name = 'Zer4806', )(Res90045)
Res53033 = keras.layers.Reshape((5, 6, 6), name = 'Res53033', )(Zer4806)
Res49979 = keras.layers.Reshape((5, 36), name = 'Res49979', )(Res53033)
Cro32083 = keras.layers.Cropping1D(cropping=((1, 3)), name = 'Cro32083', )(Res49979)
model = tf.keras.models.Model(inputs=[in0Bat20385], outputs=Cro32083)
w = model.get_layer('Bat20385').get_weights() 
w[0] = np.array([0.84, 0.5564, 0.8183, 0.982])
w[1] = np.array([0.0106, 0.7671, 0.5882, 0.9727])
w[2] = np.array([0.2332, 0.6683, 0.879, 0.7294])
w[3] = np.array([0.8174, 0.3618, 0.8747, 0.399])
model.get_layer('Bat20385').set_weights(w) 
in0Bat20385 = tf.constant([[[[1.2803, 1.7276, 1.3826, 1.1343], [1.6852, 1.7781, 1.12, 1.1473], [1.0676, 1.0142, 1.3446, 1.0178], [1.4075, 1.0405, 1.939, 1.3804]], [[1.2252, 1.9646, 1.8879, 1.1342], [1.37, 1.0366, 1.7242, 1.0686], [1.5261, 1.5753, 1.296, 1.6088], [1.4919, 1.7056, 1.6441, 1.6125]], [[1.3894, 1.6959, 1.2713, 1.4357], [1.0935, 1.2302, 1.1105, 1.544], [1.3368, 1.7837, 1.0542, 1.7936], [1.1428, 1.3749, 1.9947, 1.1308]]]])
print (np.array2string(model.predict([in0Bat20385],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Cro32083.png')

LBat20385 = batch_normalization_layer([[[[1.2803, 1.7276, 1.3826, 1.1343], [1.6852, 1.7781, 1.12, 1.1473], [1.0676, 1.0142, 1.3446, 1.0178], [1.4075, 1.0405, 1.939, 1.3804]], [[1.2252, 1.9646, 1.8879, 1.1342], [1.37, 1.0366, 1.7242, 1.0686], [1.5261, 1.5753, 1.296, 1.6088], [1.4919, 1.7056, 1.6441, 1.6125]], [[1.3894, 1.6959, 1.2713, 1.4357], [1.0935, 1.2302, 1.1105, 1.544], [1.3368, 1.7837, 1.0542, 1.7936], [1.1428, 1.3749, 1.9947, 1.1308]]]], 2, 0.3333403669149505, [0.84, 0.5564, 0.8183, 0.982], [0.0106, 0.7671, 0.5882, 0.9727], [0.2332, 0.6683, 0.879, 0.7294], [0.8174, 0.3618, 0.8747, 0.399], Bat20385), 
LRes90045 = reshape_layer(Bat20385, [3, 4, 4, 1], Res90045), 
LZer4806 = zero_padding3D_layer(Res90045, 1, 1, 1, 1, 1, 1, Zer4806), 
LRes53033 = reshape_layer(Zer4806, [5, 6, 6], Res53033), 
LRes49979 = reshape_layer(Res53033, [5, 36], Res49979), 
LCro32083 = cropping1D_layer(Res49979, 1, 3, Cro32083), 
exec_layers([LBat20385,LRes90045,LZer4806,LRes53033,LRes49979,LCro32083],["Bat20385","Res90045","Zer4806","Res53033","Res49979","Cro32083"],Cro32083,"Cro32083")

Actual (Unparsed): [[[0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.8305338, 1.1807929, 0.9106399, 0.7162082, 0.0000000, 0.0000000, 1.4457238, 1.5077203, 1.0685401, 1.0867586, 0.0000000, 0.0000000, 0.7286150, 0.6888580, 0.9348449, 0.6915383, 0.0000000, 0.0000000, 1.7508239, 1.3296892, 2.3607234, 1.7197264, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000]]]

Expected (Unparsed): [[[0,0,0,0,0,0,0,0.8305337660421783,1.1807929328368172,0.9106399872876323,0.7162081716938278,0,0,1.4457238430481878,1.5077202586437983,1.0685400530090141,1.0867585906382946,0,0,0.728615003878462,0.6888580515608062,0.9348448876236048,0.6915382955372774,0,0,1.750823883307922,1.3296891462868228,2.3607233730264894,1.7197264681218953,0,0,0,0,0,0,0]]]

Actual:   [[[0, 0, 0, 0, 0, 0, 0, 0.8306, 1.1808, 0.9107, 0.7163, 0, 0, 1.4458, 1.5078, 1.0686, 1.0868, 0, 0, 0.7287, 0.6889, 0.9349, 0.6916, 0, 0, 1.7509, 1.3297, 2.3608, 1.7198, 0, 0, 0, 0, 0, 0, 0]]]

Expected: [[[0, 0, 0, 0, 0, 0, 0, 0.8306, 1.1808, 0.9107, 0.7163, 0, 0, 1.4458, 1.5078, 1.0686, 1.0868, 0, 0, 0.7287, 0.6889, 0.9349, 0.6916, 0, 0, 1.7509, 1.3297, 2.3608, 1.7198, 0, 0, 0, 0, 0, 0, 0]]]