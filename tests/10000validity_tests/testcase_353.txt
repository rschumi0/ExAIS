import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Mul56475 = tf.keras.layers.Input(shape=([2, 2, 1]))
in1Mul56475 = tf.keras.layers.Input(shape=([2, 2, 1]))

Mul56475 = keras.layers.Multiply(name = 'Mul56475', )([in0Mul56475,in1Mul56475])
Fla1097 = keras.layers.Flatten(name = 'Fla1097', )(Mul56475)
Bat18517 = keras.layers.BatchNormalization(axis=1, epsilon=0.3795050356463918,  name = 'Bat18517', )(Fla1097)
model = tf.keras.models.Model(inputs=[in0Mul56475,in1Mul56475], outputs=Bat18517)
w = model.get_layer('Bat18517').get_weights() 
w[0] = np.array([0.763, 0.7226, 0.6417, 0.0311])
w[1] = np.array([0.8551, 0.5069, 0.3602, 0.774])
w[2] = np.array([0.3704, 0.7317, 0.7246, 0.597])
w[3] = np.array([0.3943, 0.384, 0.7856, 0.7268])
model.get_layer('Bat18517').set_weights(w) 
in0Mul56475 = tf.constant([[[[0.5992], [0.1394]], [[0.968], [0.1461]]]])
in1Mul56475 = tf.constant([[[[0.4184], [0.1552]], [[0.771], [0.3996]]]])
print (np.array2string(model.predict([in0Mul56475,in1Mul56475],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Bat18517.png')

LMul56475 = multiply_layer([[[[[0.5992], [0.1394]], [[0.968], [0.1461]]]], [[[[0.4184], [0.1552]], [[0.771], [0.3996]]]]], Mul56475), 
LFla1097 = flatten_layer(Mul56475, Fla1097), 
LBat18517 = batch_normalization_layer(Fla1097, 1, 0.3795050356463918, [0.763, 0.7226, 0.6417, 0.0311], [0.8551, 0.5069, 0.3602, 0.774], [0.3704, 0.7317, 0.7246, 0.597], [0.3943, 0.384, 0.7856, 0.7268], Bat18517), 
exec_layers([LMul56475,LFla1097,LBat18517],["Mul56475","Fla1097","Bat18517"],Bat18517,"Bat18517")

Actual (Unparsed): [[0.7512793, -0.0803056, 0.3731172, 0.7580741]]

Expected (Unparsed): [[0.7512793472042921,-0.08030559369662915,0.3731172258266222,0.758074093482956]]

Actual:   [[0.7513, -0.0803, 0.3732, 0.7581]]

Expected: [[0.7513, -0.0803, 0.3732, 0.7581]]