import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Min59353 = tf.keras.layers.Input(shape=([1, 1]))
in1Min59353 = tf.keras.layers.Input(shape=([1, 1]))
in0Add45866 = tf.keras.layers.Input(shape=([1, 1]))
in1Add45866 = tf.keras.layers.Input(shape=([1, 1]))

Min59353 = keras.layers.Minimum(name = 'Min59353', )([in0Min59353,in1Min59353])
Fla79680 = keras.layers.Flatten(name = 'Fla79680', )(Min59353)
Res88011 = keras.layers.Reshape((1, 1), name = 'Res88011', )(Fla79680)
Add45866 = keras.layers.Add(name = 'Add45866', )([in0Add45866,in1Add45866])
Mul83057 = keras.layers.Multiply(name = 'Mul83057', )([Res88011,Add45866])
model = tf.keras.models.Model(inputs=[in0Min59353,in1Min59353,in0Add45866,in1Add45866], outputs=Mul83057)
in0Min59353 = tf.constant([[[0.9221]]])
in1Min59353 = tf.constant([[[0.7189]]])
in0Add45866 = tf.constant([[[0.23]]])
in1Add45866 = tf.constant([[[0.8114]]])
print (np.array2string(model.predict([in0Min59353,in1Min59353,in0Add45866,in1Add45866],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Mul83057.png')

LMin59353 = minimum_layer([[[[0.9221]]], [[[0.7189]]]], Min59353), 
LFla79680 = flatten_layer(Min59353, Fla79680), 
LRes88011 = reshape_layer(Fla79680, [1, 1], Res88011), 
LAdd45866 = add_layer([[[[0.23]]], [[[0.8114]]]], Add45866), 
LMul83057 = multiply_layer([Res88011,Add45866], Mul83057), 
exec_layers([LMin59353,LFla79680,LRes88011,LAdd45866,LMul83057],["Min59353","Fla79680","Res88011","Add45866","Mul83057"],Mul83057,"Mul83057")

Actual (Unparsed): [[[0.7486625]]]

Expected (Unparsed): [[[0.74866246]]]

Actual:   [[[0.7487]]]

Expected: [[[0.7487]]]