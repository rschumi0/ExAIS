import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Sub78496 = tf.keras.layers.Input(shape=([3, 3, 3, 3]))
in1Sub78496 = tf.keras.layers.Input(shape=([3, 3, 3, 3]))
in0Con93501 = tf.keras.layers.Input(shape=([1, 2, 2]))
in0Con9570 = tf.keras.layers.Input(shape=([3, 19]))

Sub78496 = keras.layers.Subtract(name = 'Sub78496', )([in0Sub78496,in1Sub78496])
Lay79822 = keras.layers.LayerNormalization(axis=1, epsilon=2.4468765455701926, name = 'Lay79822', )(Sub78496)
Res934 = keras.layers.Reshape((3, 3, 9), name = 'Res934', )(Lay79822)
Res85607 = keras.layers.Reshape((3, 27), name = 'Res85607', )(Res934)
Con93501 = keras.layers.Conv2D(4, (1, 1),strides=(1, 1), padding='valid', dilation_rate=(1, 1), name = 'Con93501', )(in0Con93501)
Res95887 = keras.layers.Reshape((1, 8), name = 'Res95887', )(Con93501)
Mas73476 = keras.layers.Masking(mask_value=1, name = 'Mas73476', )(Res95887)
Zer40888 = keras.layers.ZeroPadding1D(padding=((2, 0)), name = 'Zer40888', )(Mas73476)
Con9570 = keras.layers.Concatenate(axis=2, name = 'Con9570', )([Zer40888,in0Con9570])
Ave65781 = keras.layers.Average(name = 'Ave65781', )([Res85607,Con9570])
model = tf.keras.models.Model(inputs=[in0Sub78496,in1Sub78496,in0Con93501,in0Con9570], outputs=Ave65781)
w = model.get_layer('Con93501').get_weights() 
w[0] = np.array([[[[0.5133, 0.7683, 0.9501, 0.4112], [0.2004, 0.0017, 0.5466, 0.4278]]]])
w[1] = np.array([0, 0, 0, 0])
model.get_layer('Con93501').set_weights(w) 
in0Sub78496 = tf.constant([[[[[0.9074, 0.0813, 0.4594], [0.2776, 0.4093, 0.996], [0.5687, 0.9639, 0.299]], [[0.6777, 0.7325, 0.161], [0.2123, 0.5497, 0.348], [0.333, 0.6085, 0.8069]], [[0.8125, 0.8194, 0.2849], [0.1246, 0.4464, 0.2725], [0.6613, 0.5168, 0.8145]]], [[[0.5297, 0.1864, 0.0112], [0.1956, 0.5226, 0.7395], [0.9668, 0.5462, 0.181]], [[0.8238, 0.665, 0.8106], [0.8047, 0.6861, 0.2745], [0.841, 0.0411, 0.2306]], [[0.4101, 0.5074, 0.4366], [0.7457, 0.2848, 0.8019], [0.5061, 0.0114, 0.8884]]], [[[0.8707, 0.408, 0.3135], [0.7189, 0.9452, 0.6008], [0.2543, 0.3354, 0.0835]], [[0.3117, 0.0227, 0.4105], [0.4832, 0.2515, 0.96], [0.0148, 0.8835, 0.7744]], [[0.8423, 0.5847, 0.2314], [0.5986, 0.2908, 0.395], [0.3578, 0.2815, 0.1136]]]]])
in1Sub78496 = tf.constant([[[[[0.3888, 0.8819, 0.8702], [0.1884, 0.8976, 0.9405], [0.5417, 0.6998, 0.1302]], [[0.6287, 0.5853, 0.1619], [0.3015, 0.2259, 0.784], [0.6755, 0.9294, 0.3847]], [[0.1064, 0.2972, 0.1343], [0.4609, 0.6332, 0.2306], [0.7449, 0.0774, 0.8117]]], [[[0.7876, 0.6324, 0.8293], [0.4579, 0.7159, 0.977], [0.7632, 0.4046, 0.5377]], [[0.1027, 0.8924, 0.3351], [0.005, 0.1077, 0.5467], [0.1324, 0.6398, 0.7671]], [[0.7972, 0.027, 0.5985], [0.0831, 0.5451, 0.9316], [0.7756, 0.4229, 0.1186]]], [[[0.613, 0.1472, 0.3964], [0.3846, 0.7714, 0.8412], [0.4995, 0.4451, 0.6731]], [[0.3184, 0.0775, 0.9677], [0.7122, 0.3495, 0.3454], [0.0742, 0.1659, 0.1828]], [[0.047, 0.5001, 0.452], [0.408, 0.8259, 0.4302], [0.3966, 0.5469, 0.5412]]]]])
in0Con93501 = tf.constant([[[[0.0289, 0.0265], [0.6361, 0.9575]]]])
in0Con9570 = tf.constant([[[0.1459, 0.106, 0.8088, 0.4404, 0.8451, 0.4585, 0.2404, 0.0589, 0.5227, 0.4362, 0.0855, 0.8058, 0.5816, 0.8955, 0.2019, 0.0256, 0.4693, 0.5796, 0.3776], [0.3012, 0.7836, 0.4318, 0.0446, 0.7699, 0.0162, 0.3516, 0.8482, 0.4567, 0.0881, 0.8671, 0.6374, 0.8772, 0.1644, 0.0751, 0.9189, 0.8049, 0.1043, 0.8573], [0.328, 0.02, 0.3031, 0.8187, 0.2078, 0.0604, 0.6124, 0.6148, 0.9618, 0.4825, 0.4871, 0.3343, 0.4439, 0.9042, 0.4998, 0.3876, 0.2877, 0.1519, 0.8911]]])
print (np.array2string(model.predict([in0Sub78496,in1Sub78496,in0Con93501,in0Con9570],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Ave65781.png')

LSub78496 = subtract_layer([[[[[0.9074, 0.0813, 0.4594], [0.2776, 0.4093, 0.996], [0.5687, 0.9639, 0.299]], [[0.6777, 0.7325, 0.161], [0.2123, 0.5497, 0.348], [0.333, 0.6085, 0.8069]], [[0.8125, 0.8194, 0.2849], [0.1246, 0.4464, 0.2725], [0.6613, 0.5168, 0.8145]]], [[[0.5297, 0.1864, 0.0112], [0.1956, 0.5226, 0.7395], [0.9668, 0.5462, 0.181]], [[0.8238, 0.665, 0.8106], [0.8047, 0.6861, 0.2745], [0.841, 0.0411, 0.2306]], [[0.4101, 0.5074, 0.4366], [0.7457, 0.2848, 0.8019], [0.5061, 0.0114, 0.8884]]], [[[0.8707, 0.408, 0.3135], [0.7189, 0.9452, 0.6008], [0.2543, 0.3354, 0.0835]], [[0.3117, 0.0227, 0.4105], [0.4832, 0.2515, 0.96], [0.0148, 0.8835, 0.7744]], [[0.8423, 0.5847, 0.2314], [0.5986, 0.2908, 0.395], [0.3578, 0.2815, 0.1136]]]]], [[[[[0.3888, 0.8819, 0.8702], [0.1884, 0.8976, 0.9405], [0.5417, 0.6998, 0.1302]], [[0.6287, 0.5853, 0.1619], [0.3015, 0.2259, 0.784], [0.6755, 0.9294, 0.3847]], [[0.1064, 0.2972, 0.1343], [0.4609, 0.6332, 0.2306], [0.7449, 0.0774, 0.8117]]], [[[0.7876, 0.6324, 0.8293], [0.4579, 0.7159, 0.977], [0.7632, 0.4046, 0.5377]], [[0.1027, 0.8924, 0.3351], [0.005, 0.1077, 0.5467], [0.1324, 0.6398, 0.7671]], [[0.7972, 0.027, 0.5985], [0.0831, 0.5451, 0.9316], [0.7756, 0.4229, 0.1186]]], [[[0.613, 0.1472, 0.3964], [0.3846, 0.7714, 0.8412], [0.4995, 0.4451, 0.6731]], [[0.3184, 0.0775, 0.9677], [0.7122, 0.3495, 0.3454], [0.0742, 0.1659, 0.1828]], [[0.047, 0.5001, 0.452], [0.408, 0.8259, 0.4302], [0.3966, 0.5469, 0.5412]]]]], Sub78496), 
LLay79822 = layer_normalization_layer(Sub78496, 1, 2.4468765455701926, Lay79822), 
LRes934 = reshape_layer(Lay79822, [3, 3, 9], Res934), 
LRes85607 = reshape_layer(Res934, [3, 27], Res85607), 
LCon93501 = conv2D_layer([[[[0.0289, 0.0265], [0.6361, 0.9575]]]], 1, 1,[[[[0.5133, 0.7683, 0.9501, 0.4112], [0.2004, 0.0017, 0.5466, 0.4278]]]],[0, 0, 0, 0], 1, 1, false, 1, 1, Con93501), 
LRes95887 = reshape_layer(Con93501, [1, 8], Res95887), 
LMas73476 = masking_layer(Res95887, 1, Mas73476), 
LZer40888 = zero_padding1D_layer(Mas73476, 2, 0, Zer40888), 
LCon9570 = concatenate_layer([Zer40888,[[[0.1459, 0.106, 0.8088, 0.4404, 0.8451, 0.4585, 0.2404, 0.0589, 0.5227, 0.4362, 0.0855, 0.8058, 0.5816, 0.8955, 0.2019, 0.0256, 0.4693, 0.5796, 0.3776], [0.3012, 0.7836, 0.4318, 0.0446, 0.7699, 0.0162, 0.3516, 0.8482, 0.4567, 0.0881, 0.8671, 0.6374, 0.8772, 0.1644, 0.0751, 0.9189, 0.8049, 0.1043, 0.8573], [0.328, 0.02, 0.3031, 0.8187, 0.2078, 0.0604, 0.6124, 0.6148, 0.9618, 0.4825, 0.4871, 0.3343, 0.4439, 0.9042, 0.4998, 0.3876, 0.2877, 0.1519, 0.8911]]]], 2, Con9570), 
LAve65781 = average_layer([Res85607,Con9570], Ave65781), 
exec_layers([LSub78496,LLay79822,LRes934,LRes85607,LCon93501,LRes95887,LMas73476,LZer40888,LCon9570,LAve65781],["Sub78496","Lay79822","Res934","Res85607","Con93501","Res95887","Mas73476","Zer40888","Con9570","Ave65781"],Ave65781,"Ave65781")

Actual (Unparsed): [[[0.1082535, -0.1452059, 0.0083077, 0.0112003, -0.1004815, 0.0625001, 0.0101157, 0.0526198, 0.2070174, -0.0112552, 0.4655431, 0.2284193, 0.3459192, 0.2467881, -0.0039023, -0.1073017, 0.1851430, 0.2982540, 0.1439157, 0.4535778, 0.3632545, 0.2904430, 0.1456867, 0.0392717, 0.2496533, 0.4510700, 0.1546088], [-0.1348317, -0.0361169, -0.1195413, -0.0998023, -0.0075695, -0.0307884, 0.0661755, 0.0136559, 0.1200461, 0.5377293, 0.1578745, 0.1775402, 0.5811151, 0.1057551, 0.1019150, 0.6105526, 0.0686529, -0.1678661, 0.2042546, 0.3561216, 0.4117038, 0.2338469, 0.0589002, 0.4311263, 0.3581526, -0.0512030, 0.6281902], [0.0366506, 0.1924472, 0.1322049, 0.1002123, 0.3672475, 0.2134599, 0.4875728, 0.2693157, 0.0604865, -0.0716742, 0.1484324, 0.2458906, -0.0156343, -0.0849932, 0.5041873, 0.2576991, 0.7168041, 0.3730121, 0.3716798, 0.0790506, 0.1763917, 0.4577601, 0.1838131, 0.1956521, 0.1731441, 0.0180330, 0.2802010]]]

Expected (Unparsed): [[[0.10825353747513747,-0.14520590013447215,0.00830772676641876,0.011200261430150935,-0.10048150764824312,0.0625001440475798,0.010115730248715213,0.05261978892321851,0.20701743655773752,-0.011255199479039045,0.46554310303268975,0.2284192625339549,0.34591916712325943,0.24678806357536914,-0.0039022691639692964,-0.10730173627418052,0.18514299334555673,0.2982539983620929,0.14391568369970345,0.45357779271361,0.3632545048089277,0.29044299811840957,0.14568673674360919,0.03927170502634743,0.24965327863117753,0.4510700004140842,0.1546087736042865],[-0.1348316905452334,-0.03611689126226065,-0.11954128250168042,-0.09980232952938066,-0.00756944593191761,-0.03078840514213432,0.0661754989283106,0.01365591137076475,0.12004611579033103,0.5377293539109453,0.15787449535295206,0.17754016382967863,0.5811151116332102,0.10575512672648729,0.10191500279516655,0.6105526183903176,0.06865289298297877,-0.16786608232866515,0.20425455196509443,0.35612164918777206,0.41170376872823483,0.23384691903764018,0.05890017806185045,0.43112623358459573,0.3581525805971044,-0.05120295391967726,0.6281902410330944],[0.03665063807009594,0.19244725139673283,0.13220495073526167,0.1002122580992297,0.36724751858016075,0.2134599510945545,0.48757282582297423,0.26931570970601676,0.06048644765193144,-0.07167415443190638,0.14843240161435817,0.24589057363636643,-0.015634278756469583,-0.08499319030185642,0.5041872663688027,0.2576991178838629,0.7168041136714645,0.37301208396657226,0.3716797643352021,0.07905055809861794,0.17639172646283752,0.45776008284395026,0.18381308519454037,0.19565206138905689,0.17314414077171802,0.018032953505593065,0.280200985362619]]]

Actual:   [[[0.1083, -0.1452, 0.0084, 0.0113, -0.1004, 0.0626, 0.0102, 0.0527, 0.2071, -0.0112, 0.4656, 0.2285, 0.346, 0.2468, -0.0039, -0.1073, 0.1852, 0.2983, 0.144, 0.4536, 0.3633, 0.2905, 0.1457, 0.0393, 0.2497, 0.4511, 0.1547], [-0.1348, -0.0361, -0.1195, -0.0998, -0.0075, -0.0307, 0.0662, 0.0137, 0.1201, 0.5378, 0.1579, 0.1776, 0.5812, 0.1058, 0.102, 0.6106, 0.0687, -0.1678, 0.2043, 0.3562, 0.4118, 0.2339, 0.059, 0.4312, 0.3582, -0.0512, 0.6282], [0.0367, 0.1925, 0.1323, 0.1003, 0.3673, 0.2135, 0.4876, 0.2694, 0.0605, -0.0716, 0.1485, 0.2459, -0.0156, -0.0849, 0.5042, 0.2577, 0.7169, 0.3731, 0.3717, 0.0791, 0.1764, 0.4578, 0.1839, 0.1957, 0.1732, 0.0181, 0.2803]]]

Expected: [[[0.1083, -0.1452, 0.0084, 0.0113, -0.1004, 0.0626, 0.0102, 0.0527, 0.2071, -0.0112, 0.4656, 0.2285, 0.346, 0.2468, -0.0039, -0.1073, 0.1852, 0.2983, 0.144, 0.4536, 0.3633, 0.2905, 0.1457, 0.0393, 0.2497, 0.4511, 0.1547], [-0.1348, -0.0361, -0.1195, -0.0998, -0.0075, -0.0307, 0.0662, 0.0137, 0.1201, 0.5378, 0.1579, 0.1776, 0.5812, 0.1058, 0.102, 0.6106, 0.0687, -0.1678, 0.2043, 0.3562, 0.4118, 0.2339, 0.059, 0.4312, 0.3582, -0.0512, 0.6282], [0.0367, 0.1925, 0.1323, 0.1003, 0.3673, 0.2135, 0.4876, 0.2694, 0.0605, -0.0716, 0.1485, 0.2459, -0.0156, -0.0849, 0.5042, 0.2577, 0.7169, 0.3731, 0.3717, 0.0791, 0.1764, 0.4578, 0.1839, 0.1957, 0.1732, 0.0181, 0.2803]]]