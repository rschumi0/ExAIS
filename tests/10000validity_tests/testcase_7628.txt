import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Min54169 = tf.keras.layers.Input(shape=([2, 2]))
in1Min54169 = tf.keras.layers.Input(shape=([2, 2]))
in0Ave17619 = tf.keras.layers.Input(shape=([2, 2]))
in1Ave17619 = tf.keras.layers.Input(shape=([2, 2]))
in0Glo67181 = tf.keras.layers.Input(shape=([2, 1, 2, 2]))
in0Con12039 = tf.keras.layers.Input(shape=([2]))

Min54169 = keras.layers.Minimum(name = 'Min54169', )([in0Min54169,in1Min54169])
Fla92800 = keras.layers.Flatten(name = 'Fla92800', )(Min54169)
Ave17619 = keras.layers.Average(name = 'Ave17619', )([in0Ave17619,in1Ave17619])
Fla46808 = keras.layers.Flatten(name = 'Fla46808', )(Ave17619)
Glo67181 = keras.layers.GlobalAveragePooling3D(name = 'Glo67181', )(in0Glo67181)
Con12039 = keras.layers.Concatenate(axis=1, name = 'Con12039', )([Glo67181,in0Con12039])
Mul75727 = keras.layers.Multiply(name = 'Mul75727', )([Fla46808,Con12039])
Add87981 = keras.layers.Add(name = 'Add87981', )([Fla92800,Mul75727])
Res20969 = keras.layers.Reshape((4, 1), name = 'Res20969', )(Add87981)
Cro26567 = keras.layers.Cropping1D(cropping=((3, 0)), name = 'Cro26567', )(Res20969)
model = tf.keras.models.Model(inputs=[in0Min54169,in1Min54169,in0Ave17619,in1Ave17619,in0Glo67181,in0Con12039], outputs=Cro26567)
in0Min54169 = tf.constant([[[0.5913, 0.4452], [0.9169, 0.4412]]])
in1Min54169 = tf.constant([[[0.9908, 0.6663], [0.1215, 0.5774]]])
in0Ave17619 = tf.constant([[[0.4058, 0.3165], [0.3837, 0.6702]]])
in1Ave17619 = tf.constant([[[0.379, 0.2893], [0.5995, 0.6976]]])
in0Glo67181 = tf.constant([[[[[1.5706, 1.2803], [1.751, 1.1359]]], [[[1.0305, 1.0716], [1.6134, 1.5175]]]]])
in0Con12039 = tf.constant([[0.9762, 0.2728]])
print (np.array2string(model.predict([in0Min54169,in1Min54169,in0Ave17619,in1Ave17619,in0Glo67181,in0Con12039],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Cro26567.png')

LMin54169 = minimum_layer([[[[0.5913, 0.4452], [0.9169, 0.4412]]], [[[0.9908, 0.6663], [0.1215, 0.5774]]]], Min54169), 
LFla92800 = flatten_layer(Min54169, Fla92800), 
LAve17619 = average_layer([[[[0.4058, 0.3165], [0.3837, 0.6702]]], [[[0.379, 0.2893], [0.5995, 0.6976]]]], Ave17619), 
LFla46808 = flatten_layer(Ave17619, Fla46808), 
LGlo67181 = global_average_pooling3D_layer([[[[[1.5706, 1.2803], [1.751, 1.1359]]], [[[1.0305, 1.0716], [1.6134, 1.5175]]]]], Glo67181), 
LCon12039 = concatenate_layer([Glo67181,[[0.9762, 0.2728]]], 1, Con12039), 
LMul75727 = multiply_layer([Fla46808,Con12039], Mul75727), 
LAdd87981 = add_layer([Fla92800,Mul75727], Add87981), 
LRes20969 = reshape_layer(Add87981, [4, 1], Res20969), 
LCro26567 = cropping1D_layer(Res20969, 3, 0, Cro26567), 
exec_layers([LMin54169,LFla92800,LAve17619,LFla46808,LGlo67181,LCon12039,LMul75727,LAdd87981,LRes20969,LCro26567],["Min54169","Fla92800","Ave17619","Fla46808","Glo67181","Con12039","Mul75727","Add87981","Res20969","Cro26567"],Cro26567,"Cro26567")

Actual (Unparsed): [[[0.6277679]]]

Expected (Unparsed): [[[0.6277679199999999]]]

Actual:   [[[0.6278]]]

Expected: [[[0.6278]]]