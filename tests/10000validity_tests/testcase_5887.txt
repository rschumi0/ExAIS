import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Sim14317 = tf.keras.layers.Input(shape=([1, 1]))
in0Dep50956 = tf.keras.layers.Input(shape=([2, 2, 1]))
in0Con65402 = tf.keras.layers.Input(shape=([3, 3, 2]))
in0Sub71299 = tf.keras.layers.Input(shape=([3, 3, 3]))
in1Sub71299 = tf.keras.layers.Input(shape=([3, 3, 3]))
in0Dot42696 = tf.keras.layers.Input(shape=([3, 2]))
in1Dot42696 = tf.keras.layers.Input(shape=([3, 2]))
in0Max73581 = tf.keras.layers.Input(shape=([1, 1]))
in1Max73581 = tf.keras.layers.Input(shape=([1, 1]))
in0Add66517 = tf.keras.layers.Input(shape=([2, 1]))
in1Add66517 = tf.keras.layers.Input(shape=([2, 1]))
in0Con25899 = tf.keras.layers.Input(shape=([3, 2]))
in0Con17453 = tf.keras.layers.Input(shape=([3, 6]))

Sim14317 = keras.layers.SimpleRNN(1,name = 'Sim14317', )(in0Sim14317)
Res18372 = keras.layers.Reshape((1, 1), name = 'Res18372', )(Sim14317)
Res94048 = keras.layers.Reshape((1, 1, 1), name = 'Res94048', )(Res18372)
Dep78901 = keras.layers.DepthwiseConv2D((1, 1),strides=(1, 1), padding='same', name = 'Dep78901', )(Res94048)
Dep50956 = keras.layers.DepthwiseConv2D((2, 1),strides=(2, 2), padding='same', name = 'Dep50956', )(in0Dep50956)
Max94506 = keras.layers.Maximum(name = 'Max94506', )([Dep78901,Dep50956])
Zer26280 = keras.layers.ZeroPadding2D(padding=((2, 0), (2, 0)), name = 'Zer26280', )(Max94506)
Con65402 = keras.layers.Concatenate(axis=3, name = 'Con65402', )([Zer26280,in0Con65402])
Sub71299 = keras.layers.Subtract(name = 'Sub71299', )([in0Sub71299,in1Sub71299])
Mul51159 = keras.layers.Multiply(name = 'Mul51159', )([Con65402,Sub71299])
Res91509 = keras.layers.Reshape((3, 9), name = 'Res91509', )(Mul51159)
Dot42696 = keras.layers.Dot(axes=(2, 2), name = 'Dot42696', )([in0Dot42696,in1Dot42696])
Max73581 = keras.layers.Maximum(name = 'Max73581', )([in0Max73581,in1Max73581])
Zer80650 = keras.layers.ZeroPadding1D(padding=((1, 0)), name = 'Zer80650', )(Max73581)
Add66517 = keras.layers.Add(name = 'Add66517', )([in0Add66517,in1Add66517])
Dot6335 = keras.layers.Dot(axes=(1, 1), name = 'Dot6335', )([Zer80650,Add66517])
Zer54386 = keras.layers.ZeroPadding1D(padding=((2, 0)), name = 'Zer54386', )(Dot6335)
Con25899 = keras.layers.Concatenate(axis=2, name = 'Con25899', )([Zer54386,in0Con25899])
Add6315 = keras.layers.Add(name = 'Add6315', )([Dot42696,Con25899])
Con17453 = keras.layers.Concatenate(axis=2, name = 'Con17453', )([Add6315,in0Con17453])
Add1071 = keras.layers.Add(name = 'Add1071', )([Res91509,Con17453])
model = tf.keras.models.Model(inputs=[in0Sim14317,in0Dep50956,in0Con65402,in0Sub71299,in1Sub71299,in0Dot42696,in1Dot42696,in0Max73581,in1Max73581,in0Add66517,in1Add66517,in0Con25899,in0Con17453], outputs=Add1071)
w = model.get_layer('Sim14317').get_weights() 
w[0] = np.array([[4]])
w[1] = np.array([[7]])
w[2] = np.array([2])
model.get_layer('Sim14317').set_weights(w) 
w = model.get_layer('Dep78901').get_weights() 
w[0] = np.array([[[[0.3914]]]])
w[1] = np.array([0])
model.get_layer('Dep78901').set_weights(w) 
w = model.get_layer('Dep50956').get_weights() 
w[0] = np.array([[[[0.6784]]], [[[0.2142]]]])
w[1] = np.array([0])
model.get_layer('Dep50956').set_weights(w) 
in0Sim14317 = tf.constant([[[9]]])
in0Dep50956 = tf.constant([[[[0.5531], [0.3425]], [[0.7562], [0.7658]]]])
in0Con65402 = tf.constant([[[[0.3531, 0.7663], [0.3345, 0.0807], [0.1034, 0.4107]], [[0.8437, 0.1746], [0.8011, 0.3147], [0.9845, 0.5174]], [[0.5646, 0.1882], [0.2743, 0.6384], [0.6969, 0.3075]]]])
in0Sub71299 = tf.constant([[[[0.9646, 0.5078, 0.8606], [0.9126, 0.3324, 0.6839], [0.4932, 0.8551, 0.826]], [[0.2465, 0.6987, 0.8207], [0.1325, 0.4796, 0.9376], [0.9931, 0.561, 0.349]], [[0.7514, 0.063, 0.3816], [0.1195, 0.0319, 0.7003], [0.7101, 0.708, 0.9494]]]])
in1Sub71299 = tf.constant([[[[0.0707, 0.4948, 0.7], [0.4785, 0.8217, 0.9355], [0.7686, 0.3761, 0.5371]], [[0.97, 0.8303, 0.4118], [0.5241, 0.3012, 0.6469], [0.6281, 0.9363, 0.8059]], [[0.7428, 0.4176, 0.6577], [0.0648, 0.4419, 0.244], [0.081, 0.1852, 0.5509]]]])
in0Dot42696 = tf.constant([[[0.9037, 0.8935], [0.0489, 0.7151], [0.3302, 0.2549]]])
in1Dot42696 = tf.constant([[[0.6122, 0.7553], [0.0746, 0.2969], [0.9066, 0.3595]]])
in0Max73581 = tf.constant([[[0.7617]]])
in1Max73581 = tf.constant([[[0.704]]])
in0Add66517 = tf.constant([[[0.9487], [0.3444]]])
in1Add66517 = tf.constant([[[0.0169], [0.2461]]])
in0Con25899 = tf.constant([[[0.3379, 0.0043], [0.5122, 0.6261], [0.4643, 0.7836]]])
in0Con17453 = tf.constant([[[0.9861, 0.5599, 0.8209, 0.3341, 0.3224, 0.3053], [0.9065, 0.8337, 0.8876, 0.109, 0.3799, 0.554], [0.7713, 0.9688, 0.0973, 0.1539, 0.0537, 0.3649]]])
print (np.array2string(model.predict([in0Sim14317,in0Dep50956,in0Con65402,in0Sub71299,in1Sub71299,in0Dot42696,in1Dot42696,in0Max73581,in1Max73581,in0Add66517,in1Add66517,in0Con25899,in0Con17453],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Add1071.png')

LSim14317 = simple_rnn_layer([[[9]]],[[4]],[[7]],[2], Sim14317), 
LRes18372 = reshape_layer(Sim14317, [1, 1], Res18372), 
LRes94048 = reshape_layer(Res18372, [1, 1, 1], Res94048), 
LDep78901 = depthwise_conv2D_layer(Res94048, 1, 1,[[[[0.3914]]]],[0], 1, 1, true, Dep78901), 
LDep50956 = depthwise_conv2D_layer([[[[0.5531], [0.3425]], [[0.7562], [0.7658]]]], 2, 1,[[[[0.6784]]], [[[0.2142]]]],[0], 2, 2, true, Dep50956), 
LMax94506 = maximum_layer([Dep78901,Dep50956], Max94506), 
LZer26280 = zero_padding2D_layer(Max94506, 2, 0, 2, 0, Zer26280), 
LCon65402 = concatenate_layer([Zer26280,[[[[0.3531, 0.7663], [0.3345, 0.0807], [0.1034, 0.4107]], [[0.8437, 0.1746], [0.8011, 0.3147], [0.9845, 0.5174]], [[0.5646, 0.1882], [0.2743, 0.6384], [0.6969, 0.3075]]]]], 3, Con65402), 
LSub71299 = subtract_layer([[[[0.9646, 0.5078, 0.8606], [0.9126, 0.3324, 0.6839], [0.4932, 0.8551, 0.826]], [[0.2465, 0.6987, 0.8207], [0.1325, 0.4796, 0.9376], [0.9931, 0.561, 0.349]], [[0.7514, 0.063, 0.3816], [0.1195, 0.0319, 0.7003], [0.7101, 0.708, 0.9494]]]], [[[[0.0707, 0.4948, 0.7], [0.4785, 0.8217, 0.9355], [0.7686, 0.3761, 0.5371]], [[0.97, 0.8303, 0.4118], [0.5241, 0.3012, 0.6469], [0.6281, 0.9363, 0.8059]], [[0.7428, 0.4176, 0.6577], [0.0648, 0.4419, 0.244], [0.081, 0.1852, 0.5509]]]], Sub71299), 
LMul51159 = multiply_layer([Con65402,Sub71299], Mul51159), 
LRes91509 = reshape_layer(Mul51159, [3, 9], Res91509), 
LDot42696 = dot_layer([[[0.9037, 0.8935], [0.0489, 0.7151], [0.3302, 0.2549]]], [[[0.6122, 0.7553], [0.0746, 0.2969], [0.9066, 0.3595]]], 2, 2, Dot42696), 
LMax73581 = maximum_layer([[[[0.7617]]], [[[0.704]]]], Max73581), 
LZer80650 = zero_padding1D_layer(Max73581, 1, 0, Zer80650), 
LAdd66517 = add_layer([[[[0.9487], [0.3444]]], [[[0.0169], [0.2461]]]], Add66517), 
LDot6335 = dot_layer(Zer80650,Add66517, 1, 1, Dot6335), 
LZer54386 = zero_padding1D_layer(Dot6335, 2, 0, Zer54386), 
LCon25899 = concatenate_layer([Zer54386,[[[0.3379, 0.0043], [0.5122, 0.6261], [0.4643, 0.7836]]]], 2, Con25899), 
LAdd6315 = add_layer([Dot42696,Con25899], Add6315), 
LCon17453 = concatenate_layer([Add6315,[[[0.9861, 0.5599, 0.8209, 0.3341, 0.3224, 0.3053], [0.9065, 0.8337, 0.8876, 0.109, 0.3799, 0.554], [0.7713, 0.9688, 0.0973, 0.1539, 0.0537, 0.3649]]]], 2, Con17453), 
LAdd1071 = add_layer([Res91509,Con17453], Add1071), 
exec_layers([LSim14317,LRes18372,LRes94048,LDep78901,LDep50956,LMax94506,LZer26280,LCon65402,LSub71299,LMul51159,LRes91509,LDot42696,LMax73581,LZer80650,LAdd66517,LDot6335,LZer54386,LCon25899,LAdd6315,LCon17453,LAdd1071],["Sim14317","Res18372","Res94048","Dep78901","Dep50956","Max94506","Zer26280","Con65402","Sub71299","Mul51159","Res91509","Dot42696","Max73581","Zer80650","Add66517","Dot6335","Zer54386","Con25899","Add6315","Con17453","Add1071"],Add1071,"Add1071")

Actual (Unparsed): [[[1.2281057, 0.6751865, 1.2678754, 0.9861000, 0.3962291, 0.8005959, 0.3341000, 0.3719286, 0.4239512], [0.5700516, 0.6171302, 0.9989051, 0.9065000, 0.9766163, 0.9790833, 0.1090000, 0.0104172, 0.3176000], [0.8444582, 0.3644056, 1.1226338, 0.7713000, 0.8563370, 0.3886019, 0.4918532, 0.4180393, 0.4874388]]]

Expected (Unparsed): [[[1.2281056899999998,0.67518647,1.2678754499999998,0.9861,0.3962291499999999,0.8005958799999999,0.3341,0.3719286,0.42395123],[0.5700516099999999,0.6171302099999999,0.9989051299999999,0.9065,0.97661624,0.9790832899999999,0.109,0.010417150000000042,0.3175999400000001],[0.84445826,0.36440556999999996,1.12263385,0.7713,0.856337,0.38860192,0.491853199428,0.4180393199999999,0.48743875000000003]]]

Actual:   [[[1.2282, 0.6752, 1.2679, 0.9861, 0.3963, 0.8006, 0.3341, 0.372, 0.424], [0.5701, 0.6172, 0.999, 0.9065, 0.9767, 0.9791, 0.109, 0.0105, 0.3176], [0.8445, 0.3645, 1.1227, 0.7713, 0.8564, 0.3887, 0.4919, 0.4181, 0.4875]]]

Expected: [[[1.2282, 0.6752, 1.2679, 0.9861, 0.3963, 0.8006, 0.3341, 0.372, 0.424], [0.5701, 0.6172, 0.999, 0.9065, 0.9767, 0.9791, 0.109, 0.0105, 0.3176], [0.8445, 0.3645, 1.1227, 0.7713, 0.8564, 0.3887, 0.4919, 0.4181, 0.4875]]]