import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Mul80438 = tf.keras.layers.Input(shape=([1, 1, 1]))
in1Mul80438 = tf.keras.layers.Input(shape=([1, 1, 1]))
in0Min21417 = tf.keras.layers.Input(shape=([1, 1]))
in1Min21417 = tf.keras.layers.Input(shape=([1, 1]))

Mul80438 = keras.layers.Multiply(name = 'Mul80438', )([in0Mul80438,in1Mul80438])
Res62058 = keras.layers.Reshape((1, 1), name = 'Res62058', )(Mul80438)
Min21417 = keras.layers.Minimum(name = 'Min21417', )([in0Min21417,in1Min21417])
Min23726 = keras.layers.Minimum(name = 'Min23726', )([Res62058,Min21417])
model = tf.keras.models.Model(inputs=[in0Mul80438,in1Mul80438,in0Min21417,in1Min21417], outputs=Min23726)
in0Mul80438 = tf.constant([[[[0.5671]]]])
in1Mul80438 = tf.constant([[[[0.8863]]]])
in0Min21417 = tf.constant([[[0.3519]]])
in1Min21417 = tf.constant([[[0.2197]]])
print (np.array2string(model.predict([in0Mul80438,in1Mul80438,in0Min21417,in1Min21417],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Min23726.png')

LMul80438 = multiply_layer([[[[[0.5671]]]], [[[[0.8863]]]]], Mul80438), 
LRes62058 = reshape_layer(Mul80438, [1, 1], Res62058), 
LMin21417 = minimum_layer([[[[0.3519]]], [[[0.2197]]]], Min21417), 
LMin23726 = minimum_layer([Res62058,Min21417], Min23726), 
exec_layers([LMul80438,LRes62058,LMin21417,LMin23726],["Mul80438","Res62058","Min21417","Min23726"],Min23726,"Min23726")

Actual (Unparsed): [[[0.2197000]]]

Expected (Unparsed): [[[0.2197]]]

Actual:   [[[0.2197]]]

Expected: [[[0.2197]]]