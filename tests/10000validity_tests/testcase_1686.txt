import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0LST73852 = tf.keras.layers.Input(shape=([2, 2]))
in0Con59074 = tf.keras.layers.Input(shape=([3, 5, 1]))
in0Zer84862 = tf.keras.layers.Input(shape=([1, 3, 2]))
in0Con54941 = tf.keras.layers.Input(shape=([2, 1, 1]))

LST73852 = keras.layers.LSTM(3,recurrent_activation='sigmoid', name = 'LST73852', )(in0LST73852)
Res95762 = keras.layers.Reshape((3, 1), name = 'Res95762', )(LST73852)
Res82080 = keras.layers.Reshape((3, 1, 1), name = 'Res82080', )(Res95762)
Zer27565 = keras.layers.ZeroPadding2D(padding=((0, 0), (4, 0)), name = 'Zer27565', )(Res82080)
Con59074 = keras.layers.Concatenate(axis=3, name = 'Con59074', )([Zer27565,in0Con59074])
Zer84862 = keras.layers.ZeroPadding2D(padding=((1, 1), (1, 1)), name = 'Zer84862', )(in0Zer84862)
Ave41770 = keras.layers.Average(name = 'Ave41770', )([Con59074,Zer84862])
Con54941 = keras.layers.Conv2DTranspose(2, (1, 1),strides=(1, 1), padding='same', name = 'Con54941', )(in0Con54941)
Zer32379 = keras.layers.ZeroPadding2D(padding=((1, 0), (4, 0)), name = 'Zer32379', )(Con54941)
Mul69568 = keras.layers.Multiply(name = 'Mul69568', )([Ave41770,Zer32379])
Mas70913 = keras.layers.Masking(mask_value=1, name = 'Mas70913', )(Mul69568)
model = tf.keras.models.Model(inputs=[in0LST73852,in0Con59074,in0Zer84862,in0Con54941], outputs=Mas70913)
w = model.get_layer('LST73852').get_weights() 
w[0] = np.array([[9, 9, 8, 2, 1, 7, 1, 5, 5, 6, 8, 2], [1, 3, 4, 1, 3, 3, 10, 7, 2, 9, 5, 1]])
w[1] = np.array([[10, 3, 7, 10, 2, 1, 7, 3, 2, 6, 2, 7], [7, 6, 8, 6, 9, 9, 1, 6, 4, 1, 3, 1], [3, 7, 9, 9, 3, 9, 2, 7, 9, 10, 8, 5]])
w[2] = np.array([7, 2, 5, 8, 1, 2, 1, 10, 1, 3, 8, 5])
model.get_layer('LST73852').set_weights(w) 
w = model.get_layer('Con54941').get_weights() 
w[0] = np.array([[[[0.3315], [0.8826]]]])
w[1] = np.array([0, 0])
model.get_layer('Con54941').set_weights(w) 
in0LST73852 = tf.constant([[[1, 8], [8, 3]]])
in0Con59074 = tf.constant([[[[0.9687], [0.193], [0.333], [0.2407], [0.4222]], [[0.6438], [0.7324], [0.3672], [0.9683], [0.551]], [[0.9953], [0.3573], [0.4325], [0.8116], [0.0031]]]])
in0Zer84862 = tf.constant([[[[1.2854, 1.5735], [1.9193, 1.8898], [1.6896, 1.2112]]]])
in0Con54941 = tf.constant([[[[0.01]], [[0.9141]]]])
print (np.array2string(model.predict([in0LST73852,in0Con59074,in0Zer84862,in0Con54941],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Mas70913.png')

LLST73852 = lstm_layer([[[1, 8], [8, 3]]],[[9, 9, 8, 2, 1, 7, 1, 5, 5, 6, 8, 2], [1, 3, 4, 1, 3, 3, 10, 7, 2, 9, 5, 1]],[[10, 3, 7, 10, 2, 1, 7, 3, 2, 6, 2, 7], [7, 6, 8, 6, 9, 9, 1, 6, 4, 1, 3, 1], [3, 7, 9, 9, 3, 9, 2, 7, 9, 10, 8, 5]],[7, 2, 5, 8, 1, 2, 1, 10, 1, 3, 8, 5], LST73852), 
LRes95762 = reshape_layer(LST73852, [3, 1], Res95762), 
LRes82080 = reshape_layer(Res95762, [3, 1, 1], Res82080), 
LZer27565 = zero_padding2D_layer(Res82080, 0, 0, 4, 0, Zer27565), 
LCon59074 = concatenate_layer([Zer27565,[[[[0.9687], [0.193], [0.333], [0.2407], [0.4222]], [[0.6438], [0.7324], [0.3672], [0.9683], [0.551]], [[0.9953], [0.3573], [0.4325], [0.8116], [0.0031]]]]], 3, Con59074), 
LZer84862 = zero_padding2D_layer([[[[1.2854, 1.5735], [1.9193, 1.8898], [1.6896, 1.2112]]]], 1, 1, 1, 1, Zer84862), 
LAve41770 = average_layer([Con59074,Zer84862], Ave41770), 
LCon54941 = conv2D_transpose_layer([[[[0.01]], [[0.9141]]]], 1, 1,[[[[0.3315], [0.8826]]]],[0, 0], 1, 1, true, Con54941), 
LZer32379 = zero_padding2D_layer(Con54941, 1, 0, 4, 0, Zer32379), 
LMul69568 = multiply_layer([Ave41770,Zer32379], Mul69568), 
LMas70913 = masking_layer(Mul69568, 1, Mas70913), 
exec_layers([LLST73852,LRes95762,LRes82080,LZer27565,LCon59074,LZer84862,LAve41770,LCon54941,LZer32379,LMul69568,LMas70913],["LST73852","Res95762","Res82080","Zer27565","Con59074","Zer84862","Ave41770","Con54941","Zer32379","Mul69568","Mas70913"],Mas70913,"Mas70913")

Actual (Unparsed): [[[[0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000]], [[0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0015979, 0.0024316]], [[0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.1460618, 0.0012505]]]]

Expected (Unparsed): [[[[0,0.0],[0,0.0],[0,0.0],[0,0.0],[0.0,0.0]],[[0,0.0],[0.0,0.0],[0.0,0.0],[0.0,0.0],[0.0015978757139756246,0.0024315630000000003]],[[0,0.0],[0,0.0],[0,0.0],[0,0.0],[0.14606181901451543,0.001250516223]]]]

Actual:   [[[[0, 0], [0, 0], [0, 0], [0, 0], [0, 0]], [[0, 0], [0, 0], [0, 0], [0, 0], [0.0016, 0.0025]], [[0, 0], [0, 0], [0, 0], [0, 0], [0.1461, 0.0013]]]]

Expected: [[[[0, 0], [0, 0], [0, 0], [0, 0], [0, 0]], [[0, 0], [0, 0], [0, 0], [0, 0], [0.0016, 0.0025]], [[0, 0], [0, 0], [0, 0], [0, 0], [0.1461, 0.0013]]]]