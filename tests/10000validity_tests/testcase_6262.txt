import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Mul32509 = tf.keras.layers.Input(shape=([1, 2, 1, 1]))
in1Mul32509 = tf.keras.layers.Input(shape=([1, 2, 1, 1]))
in0Con50038 = tf.keras.layers.Input(shape=([1, 2]))
in0Mas25991 = tf.keras.layers.Input(shape=([4, 2, 3]))
in0Min14202 = tf.keras.layers.Input(shape=([1, 1, 2, 1]))
in1Min14202 = tf.keras.layers.Input(shape=([1, 1, 2, 1]))
in0Con31076 = tf.keras.layers.Input(shape=([1, 2]))
in0Add16670 = tf.keras.layers.Input(shape=([1, 2, 2]))
in1Add16670 = tf.keras.layers.Input(shape=([1, 2, 2]))
in0Con66249 = tf.keras.layers.Input(shape=([1, 4, 1]))
in0Mul46387 = tf.keras.layers.Input(shape=([2, 1, 2, 1]))
in1Mul46387 = tf.keras.layers.Input(shape=([2, 1, 2, 1]))

Mul32509 = keras.layers.Multiply(name = 'Mul32509', )([in0Mul32509,in1Mul32509])
Res70730 = keras.layers.Reshape((1, 2, 1), name = 'Res70730', )(Mul32509)
Res88449 = keras.layers.Reshape((1, 2), name = 'Res88449', )(Res70730)
Con83560 = keras.layers.Conv1D(4, (1),strides=(1), padding='valid', dilation_rate=(1), name = 'Con83560', )(Res88449)
Con50038 = keras.layers.Concatenate(axis=2, name = 'Con50038', )([Con83560,in0Con50038])
Mas25991 = keras.layers.Masking(mask_value=2, name = 'Mas25991', )(in0Mas25991)
Res48539 = keras.layers.Reshape((4, 6), name = 'Res48539', )(Mas25991)
Dot19975 = keras.layers.Dot(axes=(2, 2), name = 'Dot19975', )([Con50038,Res48539])
Min14202 = keras.layers.Minimum(name = 'Min14202', )([in0Min14202,in1Min14202])
Res1689 = keras.layers.Reshape((1, 1, 2), name = 'Res1689', )(Min14202)
Res36405 = keras.layers.Reshape((1, 2), name = 'Res36405', )(Res1689)
Con31076 = keras.layers.Concatenate(axis=2, name = 'Con31076', )([Res36405,in0Con31076])
Add16670 = keras.layers.Add(name = 'Add16670', )([in0Add16670,in1Add16670])
Res77516 = keras.layers.Reshape((1, 4), name = 'Res77516', )(Add16670)
Cro41210 = keras.layers.Cropping1D(cropping=((0, 0)), name = 'Cro41210', )(Res77516)
Sub22000 = keras.layers.Subtract(name = 'Sub22000', )([Con31076,Cro41210])
Sub81696 = keras.layers.Subtract(name = 'Sub81696', )([Dot19975,Sub22000])
Res51935 = keras.layers.Reshape((1, 4, 1), name = 'Res51935', )(Sub81696)
Con66249 = keras.layers.Concatenate(axis=3, name = 'Con66249', )([Res51935,in0Con66249])
Mul46387 = keras.layers.Multiply(name = 'Mul46387', )([in0Mul46387,in1Mul46387])
Lay71805 = keras.layers.LayerNormalization(axis=1, epsilon=2.0996346858174997, name = 'Lay71805', )(Mul46387)
Res1290 = keras.layers.Reshape((2, 1, 2), name = 'Res1290', )(Lay71805)
Max80473 = keras.layers.MaxPool2D(pool_size=(2, 1), name = 'Max80473', )(Res1290)
Zer13111 = keras.layers.ZeroPadding2D(padding=((0, 0), (3, 0)), name = 'Zer13111', )(Max80473)
Ave15145 = keras.layers.Average(name = 'Ave15145', )([Con66249,Zer13111])
model = tf.keras.models.Model(inputs=[in0Mul32509,in1Mul32509,in0Con50038,in0Mas25991,in0Min14202,in1Min14202,in0Con31076,in0Add16670,in1Add16670,in0Con66249,in0Mul46387,in1Mul46387], outputs=Ave15145)
w = model.get_layer('Con83560').get_weights() 
w[0] = np.array([[[0.5433, 0.6223, 0.6665, 0.1887], [0.8764, 0.4305, 0.2635, 0.8006]]])
w[1] = np.array([0, 0, 0, 0])
model.get_layer('Con83560').set_weights(w) 
in0Mul32509 = tf.constant([[[[[0.9314]], [[0.5784]]]]])
in1Mul32509 = tf.constant([[[[[0.9199]], [[0.6793]]]]])
in0Con50038 = tf.constant([[[0.8966, 0.1073]]])
in0Mas25991 = tf.constant([[[[1.7699, 1.5011, 1.6629], [1.2907, 1.7332, 1.2911]], [[1.9299, 1.8208, 1.6043], [1.6418, 1.4845, 1.4795]], [[1.677, 1.617, 1.7677], [1.3359, 1.726, 1.7606]], [[1.4635, 1.1845, 1.6989], [1.0181, 1.472, 1.058]]]])
in0Min14202 = tf.constant([[[[[0.7703], [0.2839]]]]])
in1Min14202 = tf.constant([[[[[0.4203], [0.9799]]]]])
in0Con31076 = tf.constant([[[0.0567, 0.7939]]])
in0Add16670 = tf.constant([[[[0.6033, 0.7333], [0.1277, 0.0916]]]])
in1Add16670 = tf.constant([[[[0.2793, 0.0932], [0.6301, 0.9922]]]])
in0Con66249 = tf.constant([[[[0.4772], [0.8662], [0.5568], [0.6116]]]])
in0Mul46387 = tf.constant([[[[[0.3786], [0.6589]]], [[[0.4741], [0.9833]]]]])
in1Mul46387 = tf.constant([[[[[0.1181], [0.1751]]], [[[0.988], [0.9245]]]]])
print (np.array2string(model.predict([in0Mul32509,in1Mul32509,in0Con50038,in0Mas25991,in0Min14202,in1Min14202,in0Con31076,in0Add16670,in1Add16670,in0Con66249,in0Mul46387,in1Mul46387],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Ave15145.png')

LMul32509 = multiply_layer([[[[[[0.9314]], [[0.5784]]]]], [[[[[0.9199]], [[0.6793]]]]]], Mul32509), 
LRes70730 = reshape_layer(Mul32509, [1, 2, 1], Res70730), 
LRes88449 = reshape_layer(Res70730, [1, 2], Res88449), 
LCon83560 = conv1D_layer(Res88449, 1,[[[0.5433, 0.6223, 0.6665, 0.1887], [0.8764, 0.4305, 0.2635, 0.8006]]],[0, 0, 0, 0], 1, false, 1, Con83560), 
LCon50038 = concatenate_layer([Con83560,[[[0.8966, 0.1073]]]], 2, Con50038), 
LMas25991 = masking_layer([[[[1.7699, 1.5011, 1.6629], [1.2907, 1.7332, 1.2911]], [[1.9299, 1.8208, 1.6043], [1.6418, 1.4845, 1.4795]], [[1.677, 1.617, 1.7677], [1.3359, 1.726, 1.7606]], [[1.4635, 1.1845, 1.6989], [1.0181, 1.472, 1.058]]]], 2, Mas25991), 
LRes48539 = reshape_layer(Mas25991, [4, 6], Res48539), 
LDot19975 = dot_layer(Con50038,Res48539, 2, 2, Dot19975), 
LMin14202 = minimum_layer([[[[[[0.7703], [0.2839]]]]], [[[[[0.4203], [0.9799]]]]]], Min14202), 
LRes1689 = reshape_layer(Min14202, [1, 1, 2], Res1689), 
LRes36405 = reshape_layer(Res1689, [1, 2], Res36405), 
LCon31076 = concatenate_layer([Res36405,[[[0.0567, 0.7939]]]], 2, Con31076), 
LAdd16670 = add_layer([[[[[0.6033, 0.7333], [0.1277, 0.0916]]]], [[[[0.2793, 0.0932], [0.6301, 0.9922]]]]], Add16670), 
LRes77516 = reshape_layer(Add16670, [1, 4], Res77516), 
LCro41210 = cropping1D_layer(Res77516, 0, 0, Cro41210), 
LSub22000 = subtract_layer(Con31076,Cro41210, Sub22000), 
LSub81696 = subtract_layer(Dot19975,Sub22000, Sub81696), 
LRes51935 = reshape_layer(Sub81696, [1, 4, 1], Res51935), 
LCon66249 = concatenate_layer([Res51935,[[[[0.4772], [0.8662], [0.5568], [0.6116]]]]], 3, Con66249), 
LMul46387 = multiply_layer([[[[[[0.3786], [0.6589]]], [[[0.4741], [0.9833]]]]], [[[[[0.1181], [0.1751]]], [[[0.988], [0.9245]]]]]], Mul46387), 
LLay71805 = layer_normalization_layer(Mul46387, 1, 2.0996346858174997, Lay71805), 
LRes1290 = reshape_layer(Lay71805, [2, 1, 2], Res1290), 
LMax80473 = max_pool2D_layer(Res1290, 2, 1, Max80473), 
LZer13111 = zero_padding2D_layer(Max80473, 0, 0, 3, 0, Zer13111), 
LAve15145 = average_layer([Con66249,Zer13111], Ave15145), 
exec_layers([LMul32509,LRes70730,LRes88449,LCon83560,LCon50038,LMas25991,LRes48539,LDot19975,LMin14202,LRes1689,LRes36405,LCon31076,LAdd16670,LRes77516,LCro41210,LSub22000,LSub81696,LRes51935,LCon66249,LMul46387,LLay71805,LRes1290,LMax80473,LZer13111,LAve15145],["Mul32509","Res70730","Res88449","Con83560","Con50038","Mas25991","Res48539","Dot19975","Min14202","Res1689","Res36405","Con31076","Add16670","Res77516","Cro41210","Sub22000","Sub81696","Res51935","Con66249","Mul46387","Lay71805","Res1290","Max80473","Zer13111","Ave15145"],Ave15145,"Ave15145")

Actual (Unparsed): [[[[3.1894372, 0.2386000], [3.3690958, 0.4331000], [3.3799924, 0.2784000], [2.7579526, 0.4378724]]]]

Expected (Unparsed): [[[[3.1894372601282392,0.2386],[3.36909574638288,0.4331],[3.379992343909852,0.2784],[2.7579525602574284,0.43787245120962504]]]]

Actual:   [[[[3.1895, 0.2386], [3.3691, 0.4331], [3.38, 0.2784], [2.758, 0.4379]]]]

Expected: [[[[3.1895, 0.2386], [3.3691, 0.4331], [3.38, 0.2784], [2.758, 0.4379]]]]