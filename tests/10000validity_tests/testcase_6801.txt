import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Dot47524 = tf.keras.layers.Input(shape=([2, 3]))
in1Dot47524 = tf.keras.layers.Input(shape=([2, 3]))
in0Max3245 = tf.keras.layers.Input(shape=([2, 2, 2, 2]))
in1Max3245 = tf.keras.layers.Input(shape=([2, 2, 2, 2]))
in0Sub71847 = tf.keras.layers.Input(shape=([3, 3, 3, 2]))
in1Sub71847 = tf.keras.layers.Input(shape=([3, 3, 3, 2]))
in0Con57237 = tf.keras.layers.Input(shape=([2, 4, 2]))

Dot47524 = keras.layers.Dot(axes=(2, 2), name = 'Dot47524', )([in0Dot47524,in1Dot47524])
Res67716 = keras.layers.Reshape((2, 2, 1), name = 'Res67716', )(Dot47524)
Con64458 = keras.layers.Conv2D(4, (1, 1),strides=(1, 1), padding='same', dilation_rate=(1, 1), name = 'Con64458', )(Res67716)
Zer23127 = keras.layers.ZeroPadding2D(padding=((0, 0), (2, 0)), name = 'Zer23127', )(Con64458)
Max3245 = keras.layers.Maximum(name = 'Max3245', )([in0Max3245,in1Max3245])
Res23520 = keras.layers.Reshape((2, 2, 4), name = 'Res23520', )(Max3245)
Zer24545 = keras.layers.ZeroPadding2D(padding=((0, 0), (2, 0)), name = 'Zer24545', )(Res23520)
Sub71847 = keras.layers.Subtract(name = 'Sub71847', )([in0Sub71847,in1Sub71847])
Res25220 = keras.layers.Reshape((3, 3, 6), name = 'Res25220', )(Sub71847)
Con70631 = keras.layers.Conv2D(2, (2, 1),strides=(10, 1), padding='same', dilation_rate=(1, 1), name = 'Con70631', )(Res25220)
Zer46910 = keras.layers.ZeroPadding2D(padding=((1, 0), (1, 0)), name = 'Zer46910', )(Con70631)
Con57237 = keras.layers.Concatenate(axis=3, name = 'Con57237', )([Zer46910,in0Con57237])
Add32028 = keras.layers.Add(name = 'Add32028', )([Zer24545,Con57237])
Ave67340 = keras.layers.Average(name = 'Ave67340', )([Zer23127,Add32028])
model = tf.keras.models.Model(inputs=[in0Dot47524,in1Dot47524,in0Max3245,in1Max3245,in0Sub71847,in1Sub71847,in0Con57237], outputs=Ave67340)
w = model.get_layer('Con64458').get_weights() 
w[0] = np.array([[[[0.702, 0.0747, 0.0498, 0.408]]]])
w[1] = np.array([0, 0, 0, 0])
model.get_layer('Con64458').set_weights(w) 
w = model.get_layer('Con70631').get_weights() 
w[0] = np.array([[[[0.6049, 0.6331], [0.7198, 0.6236], [0.0391, 0.5319], [0.9102, 0.571], [0.5502, 0.9642], [0.9528, 0.3713]]], [[[0.7465, 0.6498], [0.397, 0.7915], [0.1894, 0.1975], [0.1941, 0.1368], [0.6791, 0.4459], [0.8243, 0.9506]]]])
w[1] = np.array([0, 0])
model.get_layer('Con70631').set_weights(w) 
in0Dot47524 = tf.constant([[[0.6697, 0.8012, 0.0287], [0.7102, 0.7707, 0.501]]])
in1Dot47524 = tf.constant([[[0.739, 0.6322, 0.7808], [0.7391, 0.9851, 0.4586]]])
in0Max3245 = tf.constant([[[[[0.0328, 0.0454], [0.0392, 0.3498]], [[0.2045, 0.056], [0.277, 0.6973]]], [[[0.4818, 0.3835], [0.3367, 0.009]], [[0.0036, 0.8732], [0.3414, 0.6421]]]]])
in1Max3245 = tf.constant([[[[[0.1281, 0.7585], [0.4792, 0.1566]], [[0.9834, 0.2195], [0.6073, 0.6265]]], [[[0.8358, 0.2446], [0.5754, 0.72]], [[0.0452, 0.496], [0.6452, 0.743]]]]])
in0Sub71847 = tf.constant([[[[[0.7605, 0.0874], [0.7288, 0.1202], [0.0562, 0.7987]], [[0.1605, 0.9877], [0.9069, 0.2704], [0.3734, 0.6633]], [[0.2569, 0.1488], [0.1609, 0.7706], [0.4527, 0.9852]]], [[[0.168, 0.6992], [0.4748, 0.933], [0.8807, 0.9065]], [[0.7324, 0.9295], [0.6586, 0.2846], [0.6639, 0.104]], [[0.2934, 0.4489], [0.0249, 0.6096], [0.1623, 0.3409]]], [[[0.5398, 0.9412], [0.2959, 0.9794], [0.5411, 0.0728]], [[0.5833, 0.5423], [0.3304, 0.4235], [0.894, 0.2181]], [[0.2544, 0.7454], [0.1154, 0.4251], [0.9103, 0.5144]]]]])
in1Sub71847 = tf.constant([[[[[0.9742, 0.0658], [0.4696, 0.3026], [0.0398, 0.4548]], [[0.8398, 0.9102], [0.4915, 0.4429], [0.274, 0.7454]], [[0.0735, 0.0398], [0.0776, 0.0524], [0.1559, 0.5378]]], [[[0.2667, 0.1109], [0.9773, 0.7301], [0.3863, 0.4547]], [[0.9502, 0.3279], [0.2082, 0.4915], [0.379, 0.089]], [[0.7012, 0.6454], [0.0608, 0.4868], [0.4872, 0.2881]]], [[[0.0191, 0.9765], [0.9809, 0.2765], [0.0527, 0.0404]], [[0.5479, 0.8749], [0.8764, 0.2324], [0.3094, 0.1996]], [[0.3724, 0.3864], [0.6725, 0.0997], [0.8804, 0.9967]]]]])
in0Con57237 = tf.constant([[[[0.2097, 0.469], [0.2589, 0.6394], [0.8772, 0.408], [0.2998, 0.6723]], [[0.6839, 0.5226], [0.4342, 0.3195], [0.9077, 0.3532], [0.5132, 0.2505]]]])
print (np.array2string(model.predict([in0Dot47524,in1Dot47524,in0Max3245,in1Max3245,in0Sub71847,in1Sub71847,in0Con57237],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Ave67340.png')

LDot47524 = dot_layer([[[0.6697, 0.8012, 0.0287], [0.7102, 0.7707, 0.501]]], [[[0.739, 0.6322, 0.7808], [0.7391, 0.9851, 0.4586]]], 2, 2, Dot47524), 
LRes67716 = reshape_layer(Dot47524, [2, 2, 1], Res67716), 
LCon64458 = conv2D_layer(Res67716, 1, 1,[[[[0.702, 0.0747, 0.0498, 0.408]]]],[0, 0, 0, 0], 1, 1, true, 1, 1, Con64458), 
LZer23127 = zero_padding2D_layer(Con64458, 0, 0, 2, 0, Zer23127), 
LMax3245 = maximum_layer([[[[[[0.0328, 0.0454], [0.0392, 0.3498]], [[0.2045, 0.056], [0.277, 0.6973]]], [[[0.4818, 0.3835], [0.3367, 0.009]], [[0.0036, 0.8732], [0.3414, 0.6421]]]]], [[[[[0.1281, 0.7585], [0.4792, 0.1566]], [[0.9834, 0.2195], [0.6073, 0.6265]]], [[[0.8358, 0.2446], [0.5754, 0.72]], [[0.0452, 0.496], [0.6452, 0.743]]]]]], Max3245), 
LRes23520 = reshape_layer(Max3245, [2, 2, 4], Res23520), 
LZer24545 = zero_padding2D_layer(Res23520, 0, 0, 2, 0, Zer24545), 
LSub71847 = subtract_layer([[[[[0.7605, 0.0874], [0.7288, 0.1202], [0.0562, 0.7987]], [[0.1605, 0.9877], [0.9069, 0.2704], [0.3734, 0.6633]], [[0.2569, 0.1488], [0.1609, 0.7706], [0.4527, 0.9852]]], [[[0.168, 0.6992], [0.4748, 0.933], [0.8807, 0.9065]], [[0.7324, 0.9295], [0.6586, 0.2846], [0.6639, 0.104]], [[0.2934, 0.4489], [0.0249, 0.6096], [0.1623, 0.3409]]], [[[0.5398, 0.9412], [0.2959, 0.9794], [0.5411, 0.0728]], [[0.5833, 0.5423], [0.3304, 0.4235], [0.894, 0.2181]], [[0.2544, 0.7454], [0.1154, 0.4251], [0.9103, 0.5144]]]]], [[[[[0.9742, 0.0658], [0.4696, 0.3026], [0.0398, 0.4548]], [[0.8398, 0.9102], [0.4915, 0.4429], [0.274, 0.7454]], [[0.0735, 0.0398], [0.0776, 0.0524], [0.1559, 0.5378]]], [[[0.2667, 0.1109], [0.9773, 0.7301], [0.3863, 0.4547]], [[0.9502, 0.3279], [0.2082, 0.4915], [0.379, 0.089]], [[0.7012, 0.6454], [0.0608, 0.4868], [0.4872, 0.2881]]], [[[0.0191, 0.9765], [0.9809, 0.2765], [0.0527, 0.0404]], [[0.5479, 0.8749], [0.8764, 0.2324], [0.3094, 0.1996]], [[0.3724, 0.3864], [0.6725, 0.0997], [0.8804, 0.9967]]]]], Sub71847), 
LRes25220 = reshape_layer(Sub71847, [3, 3, 6], Res25220), 
LCon70631 = conv2D_layer(Res25220, 2, 1,[[[[0.6049, 0.6331], [0.7198, 0.6236], [0.0391, 0.5319], [0.9102, 0.571], [0.5502, 0.9642], [0.9528, 0.3713]]], [[[0.7465, 0.6498], [0.397, 0.7915], [0.1894, 0.1975], [0.1941, 0.1368], [0.6791, 0.4459], [0.8243, 0.9506]]]],[0, 0], 10, 1, true, 1, 1, Con70631), 
LZer46910 = zero_padding2D_layer(Con70631, 1, 0, 1, 0, Zer46910), 
LCon57237 = concatenate_layer([Zer46910,[[[[0.2097, 0.469], [0.2589, 0.6394], [0.8772, 0.408], [0.2998, 0.6723]], [[0.6839, 0.5226], [0.4342, 0.3195], [0.9077, 0.3532], [0.5132, 0.2505]]]]], 3, Con57237), 
LAdd32028 = add_layer([Zer24545,Con57237], Add32028), 
LAve67340 = average_layer([Zer23127,Add32028], Ave67340), 
exec_layers([LDot47524,LRes67716,LCon64458,LZer23127,LMax3245,LRes23520,LZer24545,LSub71847,LRes25220,LCon70631,LZer46910,LCon57237,LAdd32028,LAve67340],["Dot47524","Res67716","Con64458","Zer23127","Max3245","Res23520","Zer24545","Sub71847","Res25220","Con70631","Zer46910","Con57237","Add32028","Ave67340"],Ave67340,"Ave67340")

Actual (Unparsed): [[[[0.0000000, 0.0000000, 0.1048500, 0.2345000], [0.0000000, 0.0000000, 0.1294500, 0.3197000], [0.4234164, 0.4174903, 0.7036935, 0.5877625], [0.9470871, 0.1582079, 0.4858552, 0.9494694]], [[0.0000000, 0.0000000, 0.3419500, 0.2613000], [0.4396683, 0.5176742, 0.2171000, 0.1597500], [0.8143463, 0.4154924, 0.7764911, 0.8228641], [1.0006872, 0.7857866, 0.6168957, 0.8055823]]]]

Expected (Unparsed): [[[[0,0,0.10485,0.2345],[0,0,0.12945,0.3197],[0.42341640089999993,0.41749027086499996,0.70369351391,0.5877625235999999],[0.94708712271,0.1582078604935,0.485855240329,0.94946943884]],[[0,0,0.34195,0.2613],[0.43966835500000007,0.5176742599999999,0.2171,0.15975],[0.81434636914,0.415492394479,0.776491052986,0.8228640485600001],[1.00068722049,0.7857865470264999,0.616895711351,0.80558233396]]]]

Actual:   [[[[0, 0, 0.1049, 0.2345], [0, 0, 0.1295, 0.3197], [0.4235, 0.4175, 0.7037, 0.5878], [0.9471, 0.1583, 0.4859, 0.9495]], [[0, 0, 0.342, 0.2613], [0.4397, 0.5177, 0.2171, 0.1598], [0.8144, 0.4155, 0.7765, 0.8229], [1.0007, 0.7858, 0.6169, 0.8056]]]]

Expected: [[[[0, 0, 0.1049, 0.2345], [0, 0, 0.1295, 0.3197], [0.4235, 0.4175, 0.7037, 0.5878], [0.9471, 0.1583, 0.4859, 0.9495]], [[0, 0, 0.342, 0.2613], [0.4397, 0.5177, 0.2171, 0.1598], [0.8144, 0.4155, 0.7765, 0.8229], [1.0007, 0.7858, 0.6169, 0.8056]]]]