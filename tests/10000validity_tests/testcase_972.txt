import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Mul24563 = tf.keras.layers.Input(shape=([2, 2, 2, 2]))
in1Mul24563 = tf.keras.layers.Input(shape=([2, 2, 2, 2]))
in0Dot29038 = tf.keras.layers.Input(shape=([2]))
in1Dot29038 = tf.keras.layers.Input(shape=([2]))
in0Con30182 = tf.keras.layers.Input(shape=([1, 3]))
in0Con23493 = tf.keras.layers.Input(shape=([1, 2, 1]))
in0Con83291 = tf.keras.layers.Input(shape=([2, 4]))

Mul24563 = keras.layers.Multiply(name = 'Mul24563', )([in0Mul24563,in1Mul24563])
Res96680 = keras.layers.Reshape((2, 2, 4), name = 'Res96680', )(Mul24563)
Res63002 = keras.layers.Reshape((2, 8), name = 'Res63002', )(Res96680)
Dot29038 = keras.layers.Dot(axes=(1, 1), name = 'Dot29038', )([in0Dot29038,in1Dot29038])
Res79902 = keras.layers.Reshape((1, 1), name = 'Res79902', )(Dot29038)
Res36765 = keras.layers.Reshape((1, 1, 1), name = 'Res36765', )(Res79902)
Res65129 = keras.layers.Reshape((1, 1, 1, 1), name = 'Res65129', )(Res36765)
Glo21737 = keras.layers.GlobalMaxPool3D(name = 'Glo21737', )(Res65129)
Res81663 = keras.layers.Reshape((1, 1), name = 'Res81663', )(Glo21737)
Con30182 = keras.layers.Concatenate(axis=2, name = 'Con30182', )([Res81663,in0Con30182])
Con23493 = keras.layers.Conv2D(4, (1, 2),strides=(1, 1), padding='valid', dilation_rate=(1, 1), name = 'Con23493', )(in0Con23493)
Res28354 = keras.layers.Reshape((1, 4), name = 'Res28354', )(Con23493)
Up_24885 = keras.layers.UpSampling1D(size=(1), name = 'Up_24885', )(Res28354)
Ave30922 = keras.layers.Average(name = 'Ave30922', )([Con30182,Up_24885])
Zer64374 = keras.layers.ZeroPadding1D(padding=((1, 0)), name = 'Zer64374', )(Ave30922)
Con83291 = keras.layers.Concatenate(axis=2, name = 'Con83291', )([Zer64374,in0Con83291])
Min62451 = keras.layers.Minimum(name = 'Min62451', )([Res63002,Con83291])
model = tf.keras.models.Model(inputs=[in0Mul24563,in1Mul24563,in0Dot29038,in1Dot29038,in0Con30182,in0Con23493,in0Con83291], outputs=Min62451)
w = model.get_layer('Con23493').get_weights() 
w[0] = np.array([[[[0.18, 0.8808, 0.5567, 0.5653]], [[0.5116, 0.2822, 0.3889, 0.1378]]]])
w[1] = np.array([0, 0, 0, 0])
model.get_layer('Con23493').set_weights(w) 
in0Mul24563 = tf.constant([[[[[0.9293, 0.3409], [0.2724, 0.2513]], [[0.1611, 0.7907], [0.172, 0.6192]]], [[[0.2592, 0.6741], [0.4964, 0.03]], [[0.5774, 0.1214], [0.2544, 0.1888]]]]])
in1Mul24563 = tf.constant([[[[[0.82, 0.1374], [0.8809, 0.0552]], [[0.9491, 0.8066], [0.2346, 0.9542]]], [[[0.6558, 0.688], [0.7225, 0.0268]], [[0.0671, 0.7729], [0.0058, 0.1387]]]]])
in0Dot29038 = tf.constant([[0.3748, 0.6254]])
in1Dot29038 = tf.constant([[0.7786, 0.2484]])
in0Con30182 = tf.constant([[[0.581, 0.7191, 0.022]]])
in0Con23493 = tf.constant([[[[0.3724], [0.0969]]]])
in0Con83291 = tf.constant([[[0.6054, 0.1539, 0.6098, 0.3485], [0.935, 0.873, 0.9028, 0.1818]]])
print (np.array2string(model.predict([in0Mul24563,in1Mul24563,in0Dot29038,in1Dot29038,in0Con30182,in0Con23493,in0Con83291],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Min62451.png')

LMul24563 = multiply_layer([[[[[[0.9293, 0.3409], [0.2724, 0.2513]], [[0.1611, 0.7907], [0.172, 0.6192]]], [[[0.2592, 0.6741], [0.4964, 0.03]], [[0.5774, 0.1214], [0.2544, 0.1888]]]]], [[[[[0.82, 0.1374], [0.8809, 0.0552]], [[0.9491, 0.8066], [0.2346, 0.9542]]], [[[0.6558, 0.688], [0.7225, 0.0268]], [[0.0671, 0.7729], [0.0058, 0.1387]]]]]], Mul24563), 
LRes96680 = reshape_layer(Mul24563, [2, 2, 4], Res96680), 
LRes63002 = reshape_layer(Res96680, [2, 8], Res63002), 
LDot29038 = dot_layer([[0.3748, 0.6254]], [[0.7786, 0.2484]], 1, 1, Dot29038), 
LRes79902 = reshape_layer(Dot29038, [1, 1], Res79902), 
LRes36765 = reshape_layer(Res79902, [1, 1, 1], Res36765), 
LRes65129 = reshape_layer(Res36765, [1, 1, 1, 1], Res65129), 
LGlo21737 = global_max_pool3D_layer(Res65129, Glo21737), 
LRes81663 = reshape_layer(Glo21737, [1, 1], Res81663), 
LCon30182 = concatenate_layer([Res81663,[[[0.581, 0.7191, 0.022]]]], 2, Con30182), 
LCon23493 = conv2D_layer([[[[0.3724], [0.0969]]]], 1, 2,[[[[0.18, 0.8808, 0.5567, 0.5653]], [[0.5116, 0.2822, 0.3889, 0.1378]]]],[0, 0, 0, 0], 1, 1, false, 1, 1, Con23493), 
LRes28354 = reshape_layer(Con23493, [1, 4], Res28354), 
LUp_24885 = up_sampling1D_layer(Res28354, 1, Up_24885), 
LAve30922 = average_layer([Con30182,Up_24885], Ave30922), 
LZer64374 = zero_padding1D_layer(Ave30922, 1, 0, Zer64374), 
LCon83291 = concatenate_layer([Zer64374,[[[0.6054, 0.1539, 0.6098, 0.3485], [0.935, 0.873, 0.9028, 0.1818]]]], 2, Con83291), 
LMin62451 = minimum_layer([Res63002,Con83291], Min62451), 
exec_layers([LMul24563,LRes96680,LRes63002,LDot29038,LRes79902,LRes36765,LRes65129,LGlo21737,LRes81663,LCon30182,LCon23493,LRes28354,LUp_24885,LAve30922,LZer64374,LCon83291,LMin62451],["Mul24563","Res96680","Res63002","Dot29038","Res79902","Res36765","Res65129","Glo21737","Res81663","Con30182","Con23493","Res28354","Up_24885","Ave30922","Zer64374","Con83291","Min62451"],Min62451,"Min62451")

Actual (Unparsed): [[[0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.1529000, 0.1539000, 0.0403512, 0.3485000], [0.1699834, 0.4637808, 0.3586490, 0.0008040, 0.0387435, 0.0938301, 0.0014755, 0.0261866]]]

Expected (Unparsed): [[[0,0,0,0,0.15290001,0.1539,0.0403512,0.3485],[0.16998336,0.4637808,0.358649,0.000804,0.03874354000000001,0.09383005999999999,0.00147552,0.026186559999999998]]]

Actual:   [[[0, 0, 0, 0, 0.1529, 0.1539, 0.0404, 0.3485], [0.17, 0.4638, 0.3587, 0.0009, 0.0388, 0.0939, 0.0015, 0.0262]]]

Expected: [[[0, 0, 0, 0, 0.153, 0.1539, 0.0404, 0.3485], [0.17, 0.4638, 0.3587, 0.0009, 0.0388, 0.0939, 0.0015, 0.0262]]]