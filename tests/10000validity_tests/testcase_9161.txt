import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Mul8330 = tf.keras.layers.Input(shape=([2, 1]))
in1Mul8330 = tf.keras.layers.Input(shape=([2, 1]))

Mul8330 = keras.layers.Multiply(name = 'Mul8330', )([in0Mul8330,in1Mul8330])
Res74823 = keras.layers.Reshape((2, 1, 1), name = 'Res74823', )(Mul8330)
Res25502 = keras.layers.Reshape((2, 1, 1, 1), name = 'Res25502', )(Res74823)
Glo34230 = keras.layers.GlobalMaxPool3D(name = 'Glo34230', )(Res25502)
Res39968 = keras.layers.Reshape((1, 1), name = 'Res39968', )(Glo34230)
Ave5886 = keras.layers.AveragePooling1D(pool_size=(1), strides=(1), padding='valid', name = 'Ave5886', )(Res39968)
Up_42748 = keras.layers.UpSampling1D(size=(2), name = 'Up_42748', )(Ave5886)
model = tf.keras.models.Model(inputs=[in0Mul8330,in1Mul8330], outputs=Up_42748)
in0Mul8330 = tf.constant([[[0.6301], [0.6947]]])
in1Mul8330 = tf.constant([[[0.2675], [0.2808]]])
print (np.array2string(model.predict([in0Mul8330,in1Mul8330],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Up_42748.png')

LMul8330 = multiply_layer([[[[0.6301], [0.6947]]], [[[0.2675], [0.2808]]]], Mul8330), 
LRes74823 = reshape_layer(Mul8330, [2, 1, 1], Res74823), 
LRes25502 = reshape_layer(Res74823, [2, 1, 1, 1], Res25502), 
LGlo34230 = global_max_pool3D_layer(Res25502, Glo34230), 
LRes39968 = reshape_layer(Glo34230, [1, 1], Res39968), 
LAve5886 = average_pooling1D_layer(Res39968, 1, 1, false, Ave5886), 
LUp_42748 = up_sampling1D_layer(Ave5886, 2, Up_42748), 
exec_layers([LMul8330,LRes74823,LRes25502,LGlo34230,LRes39968,LAve5886,LUp_42748],["Mul8330","Res74823","Res25502","Glo34230","Res39968","Ave5886","Up_42748"],Up_42748,"Up_42748")

Actual (Unparsed): [[[0.1950718], [0.1950718]]]

Expected (Unparsed): [[[0.19507175999999998],[0.19507175999999998]]]

Actual:   [[[0.1951], [0.1951]]]

Expected: [[[0.1951], [0.1951]]]