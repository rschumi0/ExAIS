import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0ELU83173 = tf.keras.layers.Input(shape=([1, 1]))

ELU83173 = keras.layers.ELU(alpha=-1.0232225557436596, name = 'ELU83173', input_shape=(1, 1))(in0ELU83173)
Res25507 = keras.layers.Reshape((1, 1, 1), name = 'Res25507', )(ELU83173)
Con23080 = keras.layers.Conv2DTranspose(4, (1, 1),strides=(1, 1), padding='same', name = 'Con23080', )(Res25507)
model = tf.keras.models.Model(inputs=[in0ELU83173], outputs=Con23080)
w = model.get_layer('Con23080').get_weights() 
w[0] = np.array([[[[0.6443], [0.4417], [0.4729], [0.078]]]])
w[1] = np.array([0, 0, 0, 0])
model.get_layer('Con23080').set_weights(w) 
in0ELU83173 = tf.constant([[[0.0141]]])
print (np.array2string(model.predict([in0ELU83173],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Con23080.png')

LELU83173 = elu_layer([[[0.0141]]], -1.0232225557436596, ELU83173), 
LRes25507 = reshape_layer(ELU83173, [1, 1, 1], Res25507), 
LCon23080 = conv2D_transpose_layer(Res25507, 1, 1,[[[[0.6443], [0.4417], [0.4729], [0.078]]]],[0, 0, 0, 0], 1, 1, true, Con23080), 
exec_layers([LELU83173,LRes25507,LCon23080],["ELU83173","Res25507","Con23080"],Con23080,"Con23080")

Actual (Unparsed): [[[[0.0090846, 0.0062280, 0.0066679, 0.0010998]]]]

Expected (Unparsed): [[[[0.00908463,0.006227969999999999,0.00666789,0.0010998]]]]

Actual:   [[[[0.0091, 0.0063, 0.0067, 0.0011]]]]

Expected: [[[[0.0091, 0.0063, 0.0067, 0.0011]]]]