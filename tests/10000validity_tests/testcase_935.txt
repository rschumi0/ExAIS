import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Sub60663 = tf.keras.layers.Input(shape=([2, 2, 2, 3]))
in1Sub60663 = tf.keras.layers.Input(shape=([2, 2, 2, 3]))

Sub60663 = keras.layers.Subtract(name = 'Sub60663', )([in0Sub60663,in1Sub60663])
Res38096 = keras.layers.Reshape((2, 2, 6), name = 'Res38096', )(Sub60663)
Res32218 = keras.layers.Reshape((2, 12), name = 'Res32218', )(Res38096)
Sep29283 = keras.layers.SeparableConv1D(4, (2),strides=(1), padding='same', name = 'Sep29283', )(Res32218)
model = tf.keras.models.Model(inputs=[in0Sub60663,in1Sub60663], outputs=Sep29283)
w = model.get_layer('Sep29283').get_weights() 
w[0] = np.array([[[0.6397], [0.9337], [0.5842], [0.8982], [0.6942], [0.339], [0.4077], [0.6669], [0.2103], [0.4136], [0.3306], [0.5533]], [[0.6018], [0.9082], [0.5652], [0.4185], [0.4543], [0.1767], [0.2022], [0.8169], [0.2072], [0.0555], [0.3472], [0.9537]]])
w[1] = np.array([[[0.5904, 0.9262, 0.4215, 0.9425], [0.0476, 0.1737, 0.0526, 0.8107], [0.2089, 0.2752, 0.4781, 0.1196], [0.6557, 0.6085, 0.499, 0.5238], [0.7809, 0.077, 0.9071, 0.1712], [0.7531, 0.701, 0.4618, 0.2844], [0.4955, 0.2648, 0.1327, 0.0811], [0.4248, 0.0649, 0.8903, 0.3696], [0.6805, 0.3609, 0.7589, 0.2844], [0.7084, 0.0851, 0.9376, 0.6628], [0.3591, 0.7335, 0.5421, 0.5078], [0.1119, 0.1301, 0.9242, 0.827]]])
w[2] = np.array([0, 0, 0, 0])
model.get_layer('Sep29283').set_weights(w) 
in0Sub60663 = tf.constant([[[[[0.1385, 0.7956, 0.5428], [0.8375, 0.4396, 0.3533]], [[0.8569, 0.4295, 0.1249], [0.8619, 0.8097, 0.9293]]], [[[0.6063, 0.5051, 0.6144], [0.2406, 0.7904, 0.2472]], [[0.9744, 0.7812, 0.734], [0.4822, 0.1117, 0.7359]]]]])
in1Sub60663 = tf.constant([[[[[0.9907, 0.3567, 0.2615], [0.5372, 0.827, 0.5579]], [[0.072, 0.1453, 0.0795], [0.3059, 0.2091, 0.5397]]], [[[0.801, 0.2644, 0.6073], [0.1986, 0.9998, 0.0941]], [[0.2312, 0.2454, 0.7163], [0.4138, 0.9146, 0.3696]]]]])
print (np.array2string(model.predict([in0Sub60663,in1Sub60663],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Sep29283.png')

LSub60663 = subtract_layer([[[[[0.1385, 0.7956, 0.5428], [0.8375, 0.4396, 0.3533]], [[0.8569, 0.4295, 0.1249], [0.8619, 0.8097, 0.9293]]], [[[0.6063, 0.5051, 0.6144], [0.2406, 0.7904, 0.2472]], [[0.9744, 0.7812, 0.734], [0.4822, 0.1117, 0.7359]]]]], [[[[[0.9907, 0.3567, 0.2615], [0.5372, 0.827, 0.5579]], [[0.072, 0.1453, 0.0795], [0.3059, 0.2091, 0.5397]]], [[[0.801, 0.2644, 0.6073], [0.1986, 0.9998, 0.0941]], [[0.2312, 0.2454, 0.7163], [0.4138, 0.9146, 0.3696]]]]], Sub60663), 
LRes38096 = reshape_layer(Sub60663, [2, 2, 6], Res38096), 
LRes32218 = reshape_layer(Res38096, [2, 12], Res32218), 
LSep29283 = separable_conv1D_layer(Res32218, 2,[[[[0.6397], [0.9337], [0.5842], [0.8982], [0.6942], [0.339], [0.4077], [0.6669], [0.2103], [0.4136], [0.3306], [0.5533]], [[0.6018], [0.9082], [0.5652], [0.4185], [0.4543], [0.1767], [0.2022], [0.8169], [0.2072], [0.0555], [0.3472], [0.9537]]],[[[0.5904, 0.9262, 0.4215, 0.9425], [0.0476, 0.1737, 0.0526, 0.8107], [0.2089, 0.2752, 0.4781, 0.1196], [0.6557, 0.6085, 0.499, 0.5238], [0.7809, 0.077, 0.9071, 0.1712], [0.7531, 0.701, 0.4618, 0.2844], [0.4955, 0.2648, 0.1327, 0.0811], [0.4248, 0.0649, 0.8903, 0.3696], [0.6805, 0.3609, 0.7589, 0.2844], [0.7084, 0.0851, 0.9376, 0.6628], [0.3591, 0.7335, 0.5421, 0.5078], [0.1119, 0.1301, 0.9242, 0.827]]]],[0, 0, 0, 0], 1, true, Sep29283), 
exec_layers([LSub60663,LRes38096,LRes32218,LSep29283],["Sub60663","Res38096","Res32218","Sep29283"],Sep29283,"Sep29283")

Actual (Unparsed): [[[0.2547397, -0.1362635, 0.9565915, 0.8365778], [0.1402001, -0.0881891, 0.3033396, 0.2842119]]]

Expected (Unparsed): [[[0.254739752907,-0.13626352891600016,0.9565914876349999,0.8365778174179999],[0.14020011503799998,-0.08818913140900009,0.303339593984,0.2842118539039999]]]

Actual:   [[[0.2548, -0.1362, 0.9566, 0.8366], [0.1403, -0.0881, 0.3034, 0.2843]]]

Expected: [[[0.2548, -0.1362, 0.9566, 0.8366], [0.1403, -0.0881, 0.3034, 0.2843]]]