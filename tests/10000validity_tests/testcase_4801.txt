import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Sub13090 = tf.keras.layers.Input(shape=([3]))
in1Sub13090 = tf.keras.layers.Input(shape=([3]))

Sub13090 = keras.layers.Subtract(name = 'Sub13090', )([in0Sub13090,in1Sub13090])
ReL21888 = keras.layers.ReLU(max_value=9.013217084697546, negative_slope=0.39448137859798693, threshold=3.4710075421737274, name = 'ReL21888', )(Sub13090)
model = tf.keras.models.Model(inputs=[in0Sub13090,in1Sub13090], outputs=ReL21888)
in0Sub13090 = tf.constant([[0.699, 0.5249, 0.4167]])
in1Sub13090 = tf.constant([[0.9725, 0.8899, 0.4167]])
print (np.array2string(model.predict([in0Sub13090,in1Sub13090],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='ReL21888.png')

LSub13090 = subtract_layer([[0.699, 0.5249, 0.4167]], [[0.9725, 0.8899, 0.4167]], Sub13090), 
LReL21888 = relu_layer(Sub13090, 9.013217084697546, 0.39448137859798693, 3.4710075421737274, ReL21888), 
exec_layers([LSub13090,LReL21888],["Sub13090","ReL21888"],ReL21888,"ReL21888")

Actual (Unparsed): [[-1.4771385, -1.5132335, -1.3692478]]

Expected (Unparsed): [[-1.4771384974072517,-1.5132335435489674,-1.3692478403607022]]

Actual:   [[-1.4771, -1.5132, -1.3692]]

Expected: [[-1.4771, -1.5132, -1.3692]]