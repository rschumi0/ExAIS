import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Ave28888 = tf.keras.layers.Input(shape=([1, 2]))
in1Ave28888 = tf.keras.layers.Input(shape=([1, 2]))

Ave28888 = keras.layers.Average(name = 'Ave28888', )([in0Ave28888,in1Ave28888])
Loc82794 = keras.layers.LocallyConnected1D(3, (1),strides=(1), name = 'Loc82794', )(Ave28888)
model = tf.keras.models.Model(inputs=[in0Ave28888,in1Ave28888], outputs=Loc82794)
w = model.get_layer('Loc82794').get_weights() 
w[0] = np.array([[[0.4169, 0.0829, 0.391], [0.7397, 0.4648, 0.0172]]])
w[1] = np.array([[0, 0, 0]])
model.get_layer('Loc82794').set_weights(w) 
in0Ave28888 = tf.constant([[[0.4423, 0.6087]]])
in1Ave28888 = tf.constant([[[0.7324, 0.6677]]])
print (np.array2string(model.predict([in0Ave28888,in1Ave28888],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Loc82794.png')

LAve28888 = average_layer([[[[0.4423, 0.6087]]], [[[0.7324, 0.6677]]]], Ave28888), 
LLoc82794 = locally_connected1D_layer(Ave28888, 1,[[[0.4169, 0.0829, 0.391], [0.7397, 0.4648, 0.0172]]],[[0, 0, 0]], 1, Loc82794), 
exec_layers([LAve28888,LLoc82794],["Ave28888","Loc82794"],Loc82794,"Loc82794")

Actual (Unparsed): [[[0.7169427, 0.3453267, 0.2406309]]]

Expected (Unparsed): [[[0.716942755,0.345326675,0.24063089000000001]]]

Actual:   [[[0.717, 0.3454, 0.2407]]]

Expected: [[[0.717, 0.3454, 0.2407]]]