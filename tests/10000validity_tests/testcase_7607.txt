import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Min20114 = tf.keras.layers.Input(shape=([2, 2, 1]))
in1Min20114 = tf.keras.layers.Input(shape=([2, 2, 1]))
in0Con74566 = tf.keras.layers.Input(shape=([2, 1, 2, 2]))
in0Up_26362 = tf.keras.layers.Input(shape=([1, 1, 2, 3]))

Min20114 = keras.layers.Minimum(name = 'Min20114', )([in0Min20114,in1Min20114])
Max72308 = keras.layers.MaxPool2D(pool_size=(2, 1), strides=(2, 7), padding='same', name = 'Max72308', )(Min20114)
Res90822 = keras.layers.Reshape((1, 1, 1, 1), name = 'Res90822', )(Max72308)
Zer26957 = keras.layers.ZeroPadding3D(padding=((1, 0), (0, 0), (1, 0)), name = 'Zer26957', )(Res90822)
Con74566 = keras.layers.Concatenate(axis=4, name = 'Con74566', )([Zer26957,in0Con74566])
Up_26362 = keras.layers.UpSampling3D(size=(2, 1, 1), name = 'Up_26362', )(in0Up_26362)
Ave26664 = keras.layers.Average(name = 'Ave26664', )([Con74566,Up_26362])
model = tf.keras.models.Model(inputs=[in0Min20114,in1Min20114,in0Con74566,in0Up_26362], outputs=Ave26664)
in0Min20114 = tf.constant([[[[0.3145], [0.3261]], [[0.5421], [0.9533]]]])
in1Min20114 = tf.constant([[[[0.4492], [0.3473]], [[0.3515], [0.7685]]]])
in0Con74566 = tf.constant([[[[[0.64, 0.5426], [0.6006, 0.8608]]], [[[0.3941, 0.799], [0.3523, 0.8477]]]]])
in0Up_26362 = tf.constant([[[[[1.8094, 1.9626, 1.2212], [1.0829, 1.5176, 1.9343]]]]])
print (np.array2string(model.predict([in0Min20114,in1Min20114,in0Con74566,in0Up_26362],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Ave26664.png')

LMin20114 = minimum_layer([[[[[0.3145], [0.3261]], [[0.5421], [0.9533]]]], [[[[0.4492], [0.3473]], [[0.3515], [0.7685]]]]], Min20114), 
LMax72308 = max_pool2D_layer(Min20114, 2, 1, 2, 7, true, Max72308), 
LRes90822 = reshape_layer(Max72308, [1, 1, 1, 1], Res90822), 
LZer26957 = zero_padding3D_layer(Res90822, 1, 0, 0, 0, 1, 0, Zer26957), 
LCon74566 = concatenate_layer([Zer26957,[[[[[0.64, 0.5426], [0.6006, 0.8608]]], [[[0.3941, 0.799], [0.3523, 0.8477]]]]]], 4, Con74566), 
LUp_26362 = up_sampling3D_layer([[[[[1.8094, 1.9626, 1.2212], [1.0829, 1.5176, 1.9343]]]]], 2, 1, 1, Up_26362), 
LAve26664 = average_layer([Con74566,Up_26362], Ave26664), 
exec_layers([LMin20114,LMax72308,LRes90822,LZer26957,LCon74566,LUp_26362,LAve26664],["Min20114","Max72308","Res90822","Zer26957","Con74566","Up_26362","Ave26664"],Ave26664,"Ave26664")

Actual (Unparsed): [[[[[0.9047000, 1.3013000, 0.8819000], [0.5414500, 1.0591000, 1.3975500]]], [[[0.9047000, 1.1783500, 1.0101000], [0.7172000, 0.9349500, 1.3910000]]]]]

Expected (Unparsed): [[[[[0.9047,1.3013,0.8819],[0.54145,1.0591,1.3975499999999998]]],[[[0.9047,1.17835,1.0101],[0.7172,0.9349500000000001,1.391]]]]]

Actual:   [[[[[0.9047, 1.3013, 0.8819], [0.5415, 1.0591, 1.3976]]], [[[0.9047, 1.1784, 1.0101], [0.7172, 0.935, 1.391]]]]]

Expected: [[[[[0.9047, 1.3013, 0.8819], [0.5415, 1.0591, 1.3976]]], [[[0.9047, 1.1784, 1.0101], [0.7172, 0.935, 1.391]]]]]