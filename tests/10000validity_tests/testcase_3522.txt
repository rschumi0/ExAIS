import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Ave12224 = tf.keras.layers.Input(shape=([2, 2]))
in1Ave12224 = tf.keras.layers.Input(shape=([2, 2]))
in0Con62299 = tf.keras.layers.Input(shape=([2, 2, 2, 1]))
in0Mul86712 = tf.keras.layers.Input(shape=([2, 2, 2, 2]))
in1Mul86712 = tf.keras.layers.Input(shape=([2, 2, 2, 2]))

Ave12224 = keras.layers.Average(name = 'Ave12224', )([in0Ave12224,in1Ave12224])
Res21777 = keras.layers.Reshape((2, 2, 1), name = 'Res21777', )(Ave12224)
Glo58805 = keras.layers.GlobalMaxPool2D(name = 'Glo58805', )(Res21777)
Res62899 = keras.layers.Reshape((1, 1), name = 'Res62899', )(Glo58805)
Res14566 = keras.layers.Reshape((1, 1, 1), name = 'Res14566', )(Res62899)
Res47346 = keras.layers.Reshape((1, 1, 1, 1), name = 'Res47346', )(Res14566)
Zer91166 = keras.layers.ZeroPadding3D(padding=((1, 0), (1, 0), (1, 0)), name = 'Zer91166', )(Res47346)
Con62299 = keras.layers.Concatenate(axis=4, name = 'Con62299', )([Zer91166,in0Con62299])
Mul86712 = keras.layers.Multiply(name = 'Mul86712', )([in0Mul86712,in1Mul86712])
Max64924 = keras.layers.Maximum(name = 'Max64924', )([Con62299,Mul86712])
Thr8460 = keras.layers.ThresholdedReLU(theta=3.198025682724489, name = 'Thr8460', )(Max64924)
Res41677 = keras.layers.Reshape((2, 2, 4), name = 'Res41677', )(Thr8460)
Res3658 = keras.layers.Reshape((2, 8), name = 'Res3658', )(Res41677)
Loc97897 = keras.layers.LocallyConnected1D(3, (1),strides=(1), name = 'Loc97897', )(Res3658)
model = tf.keras.models.Model(inputs=[in0Ave12224,in1Ave12224,in0Con62299,in0Mul86712,in1Mul86712], outputs=Loc97897)
w = model.get_layer('Loc97897').get_weights() 
w[0] = np.array([[[0.9103, 0.0162, 0.1288], [0.8777, 0.4408, 0.499], [0.5662, 0.2018, 0.5112], [0.1873, 0.4858, 0.6871], [0.9531, 0.0093, 0.5068], [0.9854, 0.7372, 0.5617], [0.885, 0.9927, 0.6702], [0.6875, 0.0692, 0.8369]], [[0.1712, 0.5713, 0.3363], [0.3326, 0.2732, 0.0902], [0.0316, 0.9342, 0.2373], [0.7829, 0.762, 0.5429], [0.8127, 0.0777, 0.6109], [0.0059, 0.2237, 0.3507], [0.0751, 0.7826, 0.4287], [0.9834, 0.9587, 0.047]]])
w[1] = np.array([[0, 0, 0], [0, 0, 0]])
model.get_layer('Loc97897').set_weights(w) 
in0Ave12224 = tf.constant([[[0.3371, 0.1343], [0.4707, 0.9021]]])
in1Ave12224 = tf.constant([[[0.9415, 0.2332], [0.4673, 0.6184]]])
in0Con62299 = tf.constant([[[[[0.6214], [0.2872]], [[0.7686], [0.6589]]], [[[0.831], [0.6862]], [[0.2383], [0.536]]]]])
in0Mul86712 = tf.constant([[[[[0.4049, 0.6116], [0.3953, 0.716]], [[0.6844, 0.3842], [0.5597, 0.6677]]], [[[0.9636, 0.4225], [0.1966, 0.264]], [[0.4726, 0.2516], [0.6453, 0.2312]]]]])
in1Mul86712 = tf.constant([[[[[0.6154, 0.8591], [0.1173, 0.1472]], [[0.8509, 0.2927], [0.2967, 0.0714]]], [[[0.2626, 0.9736], [0.9395, 0.9286]], [[0.3834, 0.1115], [0.2311, 0.2295]]]]])
print (np.array2string(model.predict([in0Ave12224,in1Ave12224,in0Con62299,in0Mul86712,in1Mul86712],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Loc97897.png')

LAve12224 = average_layer([[[[0.3371, 0.1343], [0.4707, 0.9021]]], [[[0.9415, 0.2332], [0.4673, 0.6184]]]], Ave12224), 
LRes21777 = reshape_layer(Ave12224, [2, 2, 1], Res21777), 
LGlo58805 = global_max_pool2D_layer(Res21777, Glo58805), 
LRes62899 = reshape_layer(Glo58805, [1, 1], Res62899), 
LRes14566 = reshape_layer(Res62899, [1, 1, 1], Res14566), 
LRes47346 = reshape_layer(Res14566, [1, 1, 1, 1], Res47346), 
LZer91166 = zero_padding3D_layer(Res47346, 1, 0, 1, 0, 1, 0, Zer91166), 
LCon62299 = concatenate_layer([Zer91166,[[[[[0.6214], [0.2872]], [[0.7686], [0.6589]]], [[[0.831], [0.6862]], [[0.2383], [0.536]]]]]], 4, Con62299), 
LMul86712 = multiply_layer([[[[[[0.4049, 0.6116], [0.3953, 0.716]], [[0.6844, 0.3842], [0.5597, 0.6677]]], [[[0.9636, 0.4225], [0.1966, 0.264]], [[0.4726, 0.2516], [0.6453, 0.2312]]]]], [[[[[0.6154, 0.8591], [0.1173, 0.1472]], [[0.8509, 0.2927], [0.2967, 0.0714]]], [[[0.2626, 0.9736], [0.9395, 0.9286]], [[0.3834, 0.1115], [0.2311, 0.2295]]]]]], Mul86712), 
LMax64924 = maximum_layer([Con62299,Mul86712], Max64924), 
LThr8460 = thresholded_relu_layer(Max64924, 3.198025682724489, Thr8460), 
LRes41677 = reshape_layer(Thr8460, [2, 2, 4], Res41677), 
LRes3658 = reshape_layer(Res41677, [2, 8], Res3658), 
LLoc97897 = locally_connected1D_layer(Res3658, 1,[[[0.9103, 0.0162, 0.1288], [0.8777, 0.4408, 0.499], [0.5662, 0.2018, 0.5112], [0.1873, 0.4858, 0.6871], [0.9531, 0.0093, 0.5068], [0.9854, 0.7372, 0.5617], [0.885, 0.9927, 0.6702], [0.6875, 0.0692, 0.8369]], [[0.1712, 0.5713, 0.3363], [0.3326, 0.2732, 0.0902], [0.0316, 0.9342, 0.2373], [0.7829, 0.762, 0.5429], [0.8127, 0.0777, 0.6109], [0.0059, 0.2237, 0.3507], [0.0751, 0.7826, 0.4287], [0.9834, 0.9587, 0.047]]],[[0, 0, 0], [0, 0, 0]], 1, Loc97897), 
exec_layers([LAve12224,LRes21777,LGlo58805,LRes62899,LRes14566,LRes47346,LZer91166,LCon62299,LMul86712,LMax64924,LThr8460,LRes41677,LRes3658,LLoc97897],["Ave12224","Res21777","Glo58805","Res62899","Res14566","Res47346","Zer91166","Con62299","Mul86712","Max64924","Thr8460","Res41677","Res3658","Loc97897"],Loc97897,"Loc97897")

Actual (Unparsed): [[[0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000]]]

Expected (Unparsed): [[[0.0,0.0,0.0],[0.0,0.0,0.0]]]

Actual:   [[[0, 0, 0], [0, 0, 0]]]

Expected: [[[0, 0, 0], [0, 0, 0]]]