import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Sub90141 = tf.keras.layers.Input(shape=([2]))
in1Sub90141 = tf.keras.layers.Input(shape=([2]))

Sub90141 = keras.layers.Subtract(name = 'Sub90141', )([in0Sub90141,in1Sub90141])
Res89798 = keras.layers.Reshape((2, 1), name = 'Res89798', )(Sub90141)
Res80135 = keras.layers.Reshape((2, 1, 1), name = 'Res80135', )(Res89798)
Res18787 = keras.layers.Reshape((2, 1, 1, 1), name = 'Res18787', )(Res80135)
Glo46790 = keras.layers.GlobalAveragePooling3D(name = 'Glo46790', )(Res18787)
model = tf.keras.models.Model(inputs=[in0Sub90141,in1Sub90141], outputs=Glo46790)
in0Sub90141 = tf.constant([[0.1824, 0.2918]])
in1Sub90141 = tf.constant([[0.5615, 0.733]])
print (np.array2string(model.predict([in0Sub90141,in1Sub90141],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Glo46790.png')

LSub90141 = subtract_layer([[0.1824, 0.2918]], [[0.5615, 0.733]], Sub90141), 
LRes89798 = reshape_layer(Sub90141, [2, 1], Res89798), 
LRes80135 = reshape_layer(Res89798, [2, 1, 1], Res80135), 
LRes18787 = reshape_layer(Res80135, [2, 1, 1, 1], Res18787), 
LGlo46790 = global_average_pooling3D_layer(Res18787, Glo46790), 
exec_layers([LSub90141,LRes89798,LRes80135,LRes18787,LGlo46790],["Sub90141","Res89798","Res80135","Res18787","Glo46790"],Glo46790,"Glo46790")

Actual (Unparsed): [[-0.4101500]]

Expected (Unparsed): [[-0.41015]]

Actual:   [[-0.4101]]

Expected: [[-0.4101]]