import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Sub52550 = tf.keras.layers.Input(shape=([3, 3, 2, 2]))
in1Sub52550 = tf.keras.layers.Input(shape=([3, 3, 2, 2]))
in0Max35443 = tf.keras.layers.Input(shape=([2, 2, 1]))

Sub52550 = keras.layers.Subtract(name = 'Sub52550', )([in0Sub52550,in1Sub52550])
Res49711 = keras.layers.Reshape((3, 3, 4), name = 'Res49711', )(Sub52550)
Res62585 = keras.layers.Reshape((3, 12), name = 'Res62585', )(Res49711)
Per9685 = keras.layers.Permute((1,2), name = 'Per9685',)(Res62585)
Res34595 = keras.layers.Reshape((3, 12, 1), name = 'Res34595', )(Per9685)
Max35443 = keras.layers.MaxPool2D(pool_size=(1, 2), strides=(2, 1), padding='valid', name = 'Max35443', )(in0Max35443)
Zer54940 = keras.layers.ZeroPadding2D(padding=((2, 0), (11, 0)), name = 'Zer54940', )(Max35443)
Add58709 = keras.layers.Add(name = 'Add58709', )([Res34595,Zer54940])
Thr5789 = keras.layers.ThresholdedReLU(theta=3.7252441762074757, name = 'Thr5789', )(Add58709)
model = tf.keras.models.Model(inputs=[in0Sub52550,in1Sub52550,in0Max35443], outputs=Thr5789)
in0Sub52550 = tf.constant([[[[[0.9212, 0.2509], [0.838, 0.9151]], [[0.8204, 0.9031], [0.8442, 0.4289]], [[0.9061, 0.206], [0.6633, 0.8494]]], [[[0.7322, 0.8997], [0.0264, 0.496]], [[0.077, 0.3453], [0.0477, 0.0438]], [[0.7417, 0.4162], [0.5704, 0.0184]]], [[[0.35, 0.4948], [0.2149, 0.0335]], [[0.5525, 0.7074], [0.0111, 0.2485]], [[0.5038, 0.5346], [0.0986, 0.2869]]]]])
in1Sub52550 = tf.constant([[[[[0.4723, 0.7156], [0.6157, 0.9061]], [[0.9684, 0.9272], [0.5588, 0.0366]], [[0.8301, 0.0649], [0.0928, 0.4212]]], [[[0.2947, 0.0777], [0.5217, 0.9736]], [[0.2013, 0.2172], [0.8825, 0.1513]], [[0.1198, 0.2476], [0.9222, 0.0901]]], [[[0.3811, 0.6368], [0.0328, 0.9832]], [[0.6966, 0.9947], [0.5767, 0.2057]], [[0.2979, 0.0619], [0.9147, 0.9803]]]]])
in0Max35443 = tf.constant([[[[1.3013], [1.3623]], [[1.3671], [1.963]]]])
print (np.array2string(model.predict([in0Sub52550,in1Sub52550,in0Max35443],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Thr5789.png')

LSub52550 = subtract_layer([[[[[0.9212, 0.2509], [0.838, 0.9151]], [[0.8204, 0.9031], [0.8442, 0.4289]], [[0.9061, 0.206], [0.6633, 0.8494]]], [[[0.7322, 0.8997], [0.0264, 0.496]], [[0.077, 0.3453], [0.0477, 0.0438]], [[0.7417, 0.4162], [0.5704, 0.0184]]], [[[0.35, 0.4948], [0.2149, 0.0335]], [[0.5525, 0.7074], [0.0111, 0.2485]], [[0.5038, 0.5346], [0.0986, 0.2869]]]]], [[[[[0.4723, 0.7156], [0.6157, 0.9061]], [[0.9684, 0.9272], [0.5588, 0.0366]], [[0.8301, 0.0649], [0.0928, 0.4212]]], [[[0.2947, 0.0777], [0.5217, 0.9736]], [[0.2013, 0.2172], [0.8825, 0.1513]], [[0.1198, 0.2476], [0.9222, 0.0901]]], [[[0.3811, 0.6368], [0.0328, 0.9832]], [[0.6966, 0.9947], [0.5767, 0.2057]], [[0.2979, 0.0619], [0.9147, 0.9803]]]]], Sub52550), 
LRes49711 = reshape_layer(Sub52550, [3, 3, 4], Res49711), 
LRes62585 = reshape_layer(Res49711, [3, 12], Res62585), 
LPer9685 = permute_layer(Res62585, 1,2, Per9685), 
LRes34595 = reshape_layer(Per9685, [3, 12, 1], Res34595), 
LMax35443 = max_pool2D_layer([[[[1.3013], [1.3623]], [[1.3671], [1.963]]]], 1, 2, 2, 1, false, Max35443), 
LZer54940 = zero_padding2D_layer(Max35443, 2, 0, 11, 0, Zer54940), 
LAdd58709 = add_layer([Res34595,Zer54940], Add58709), 
LThr5789 = thresholded_relu_layer(Add58709, 3.7252441762074757, Thr5789), 
exec_layers([LSub52550,LRes49711,LRes62585,LPer9685,LRes34595,LMax35443,LZer54940,LAdd58709,LThr5789],["Sub52550","Res49711","Res62585","Per9685","Res34595","Max35443","Zer54940","Add58709","Thr5789"],Thr5789,"Thr5789")

Actual (Unparsed): [[[[0.0000000], [-0.0000000], [0.0000000], [0.0000000], [-0.0000000], [-0.0000000], [0.0000000], [0.0000000], [0.0000000], [0.0000000], [0.0000000], [0.0000000]], [[0.0000000], [0.0000000], [-0.0000000], [-0.0000000], [-0.0000000], [0.0000000], [-0.0000000], [-0.0000000], [0.0000000], [0.0000000], [-0.0000000], [-0.0000000]], [[-0.0000000], [-0.0000000], [0.0000000], [-0.0000000], [-0.0000000], [-0.0000000], [-0.0000000], [0.0000000], [0.0000000], [0.0000000], [-0.0000000], [0.0000000]]]]

Expected (Unparsed): [[[[0],[0],[0],[0],[0],[0],[0],[0],[0],[0],[0],[0]],[[0],[0],[0],[0],[0],[0],[0],[0],[0],[0],[0],[0]],[[0],[0],[0],[0],[0],[0],[0],[0],[0],[0],[0],[0]]]]

Actual:   [[[[0], [-0], [0], [0], [-0], [-0], [0], [0], [0], [0], [0], [0]], [[0], [0], [-0], [-0], [-0], [0], [-0], [-0], [0], [0], [-0], [-0]], [[-0], [-0], [0], [-0], [-0], [-0], [-0], [0], [0], [0], [-0], [0]]]]

Expected: [[[[0], [0], [0], [0], [0], [0], [0], [0], [0], [0], [0], [0]], [[0], [0], [0], [0], [0], [0], [0], [0], [0], [0], [0], [0]], [[0], [0], [0], [0], [0], [0], [0], [0], [0], [0], [0], [0]]]]