import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Dot45416 = tf.keras.layers.Input(shape=([3, 3]))
in1Dot45416 = tf.keras.layers.Input(shape=([3, 3]))
in0Con63087 = tf.keras.layers.Input(shape=([3, 27, 1]))
in0Sub99527 = tf.keras.layers.Input(shape=([2, 3, 3]))
in1Sub99527 = tf.keras.layers.Input(shape=([2, 3, 3]))
in0Con8096 = tf.keras.layers.Input(shape=([2, 15, 1]))
in0Max53917 = tf.keras.layers.Input(shape=([2, 1, 1, 1]))
in1Max53917 = tf.keras.layers.Input(shape=([2, 1, 1, 1]))
in0Con65916 = tf.keras.layers.Input(shape=([2, 3, 1]))
in0Ave55767 = tf.keras.layers.Input(shape=([1, 2, 2]))

Dot45416 = keras.layers.Dot(axes=(2, 1), name = 'Dot45416', )([in0Dot45416,in1Dot45416])
Max52354 = keras.layers.MaxPool1D(pool_size=(1), strides=(1), padding='valid', name = 'Max52354', )(Dot45416)
Res29409 = keras.layers.Reshape((3, 3, 1), name = 'Res29409', )(Max52354)
Zer57186 = keras.layers.ZeroPadding2D(padding=((0, 0), (24, 0)), name = 'Zer57186', )(Res29409)
Con63087 = keras.layers.Concatenate(axis=3, name = 'Con63087', )([Zer57186,in0Con63087])
Sub99527 = keras.layers.Subtract(name = 'Sub99527', )([in0Sub99527,in1Sub99527])
Res67635 = keras.layers.Reshape((2, 9), name = 'Res67635', )(Sub99527)
Ave51330 = keras.layers.AveragePooling1D(pool_size=(2), name = 'Ave51330', )(Res67635)
Res35354 = keras.layers.Reshape((1, 9, 1), name = 'Res35354', )(Ave51330)
Zer26979 = keras.layers.ZeroPadding2D(padding=((1, 0), (6, 0)), name = 'Zer26979', )(Res35354)
Con8096 = keras.layers.Concatenate(axis=3, name = 'Con8096', )([Zer26979,in0Con8096])
Max53917 = keras.layers.Maximum(name = 'Max53917', )([in0Max53917,in1Max53917])
Res47051 = keras.layers.Reshape((2, 1, 1), name = 'Res47051', )(Max53917)
Zer22760 = keras.layers.ZeroPadding2D(padding=((0, 0), (2, 0)), name = 'Zer22760', )(Res47051)
Con65916 = keras.layers.Concatenate(axis=3, name = 'Con65916', )([Zer22760,in0Con65916])
Ave55767 = keras.layers.AveragePooling2D(pool_size=(1, 1), strides=(1, 1), padding='same', name = 'Ave55767', )(in0Ave55767)
Zer41028 = keras.layers.ZeroPadding2D(padding=((1, 0), (1, 0)), name = 'Zer41028', )(Ave55767)
Ave15452 = keras.layers.Average(name = 'Ave15452', )([Con65916,Zer41028])
Zer84917 = keras.layers.ZeroPadding2D(padding=((0, 0), (12, 0)), name = 'Zer84917', )(Ave15452)
Mul17118 = keras.layers.Multiply(name = 'Mul17118', )([Con8096,Zer84917])
Zer49382 = keras.layers.ZeroPadding2D(padding=((1, 0), (12, 0)), name = 'Zer49382', )(Mul17118)
Max87937 = keras.layers.Maximum(name = 'Max87937', )([Con63087,Zer49382])
model = tf.keras.models.Model(inputs=[in0Dot45416,in1Dot45416,in0Con63087,in0Sub99527,in1Sub99527,in0Con8096,in0Max53917,in1Max53917,in0Con65916,in0Ave55767], outputs=Max87937)
in0Dot45416 = tf.constant([[[0.4928, 0.8882, 0.6438], [0.2684, 0.4397, 0.7707], [0.6625, 0.6044, 0.934]]])
in1Dot45416 = tf.constant([[[0.7233, 0.3245, 0.0117], [0.7154, 0.1974, 0.3392], [0.021, 0.6905, 0.4532]]])
in0Con63087 = tf.constant([[[[0.9483], [0.9402], [0.3154], [0.1516], [0.8878], [0.569], [0.4121], [0.9184], [0.8496], [0.9796], [0.0667], [0.9408], [0.0394], [0.1829], [0.6267], [0.2929], [0.4799], [0.1046], [0.8354], [0.5887], [0.4104], [0.9402], [0.9913], [0.7564], [0.3547], [0.6387], [0.1424]], [[0.3273], [0.1777], [0.8568], [0.3593], [0.5523], [0.8083], [0.6495], [0.938], [0.1703], [0.819], [0.4996], [0.8493], [0.0579], [0.7204], [0.0234], [0.8757], [0.3105], [0.6561], [0.8407], [0.6527], [0.5279], [0.1626], [0.6435], [0.2676], [0.2058], [0.7975], [0.46]], [[0.1585], [0.1745], [0.7346], [0.4728], [0.8049], [0.9635], [0.8721], [0.5209], [0.102], [0.8235], [0.6085], [0.5921], [0.3743], [0.8899], [0.2023], [0.1959], [0.6949], [0.6341], [0.5521], [0.4945], [0.5537], [0.3151], [0.3069], [0.4677], [0.9436], [0.6202], [0.4495]]]])
in0Sub99527 = tf.constant([[[[0.9372, 0.7014, 0.0592], [0.1699, 0.8206, 0.4821], [0.8896, 0.7016, 0.5987]], [[0.3278, 0.0583, 0.8441], [0.2892, 0.1605, 0.3109], [0.3547, 0.4435, 0.5646]]]])
in1Sub99527 = tf.constant([[[[0.5636, 0.6226, 0.4662], [0.2298, 0.4683, 0.8282], [0.7337, 0.297, 0.6935]], [[0.648, 0.1938, 0.7527], [0.3337, 0.0624, 0.2271], [0.2855, 0.3565, 0.1071]]]])
in0Con8096 = tf.constant([[[[0.9662], [0.0015], [0.5822], [0.0267], [0.025], [0.553], [0.2074], [0.0363], [0.7461], [0.1128], [0.6569], [0.381], [0.1414], [0.9016], [0.3589]], [[0.3093], [0.1598], [0.8023], [0.5694], [0.744], [0.5616], [0.1452], [0.9166], [0.3377], [0.8312], [0.8364], [0.4202], [0.8059], [0.3255], [0.9942]]]])
in0Max53917 = tf.constant([[[[[0.6847]]], [[[0.5678]]]]])
in1Max53917 = tf.constant([[[[[0.0176]]], [[[0.4713]]]]])
in0Con65916 = tf.constant([[[[0.6781], [0.9981], [0.1995]], [[0.5083], [0.6828], [0.7326]]]])
in0Ave55767 = tf.constant([[[[1.1849, 1.7522], [1.7321, 1.6916]]]])
print (np.array2string(model.predict([in0Dot45416,in1Dot45416,in0Con63087,in0Sub99527,in1Sub99527,in0Con8096,in0Max53917,in1Max53917,in0Con65916,in0Ave55767],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Max87937.png')

LDot45416 = dot_layer([[[0.4928, 0.8882, 0.6438], [0.2684, 0.4397, 0.7707], [0.6625, 0.6044, 0.934]]], [[[0.7233, 0.3245, 0.0117], [0.7154, 0.1974, 0.3392], [0.021, 0.6905, 0.4532]]], 2, 1, Dot45416), 
LMax52354 = max_pool1D_layer(Dot45416, 1, 1, false, Max52354), 
LRes29409 = reshape_layer(Max52354, [3, 3, 1], Res29409), 
LZer57186 = zero_padding2D_layer(Res29409, 0, 0, 24, 0, Zer57186), 
LCon63087 = concatenate_layer([Zer57186,[[[[0.9483], [0.9402], [0.3154], [0.1516], [0.8878], [0.569], [0.4121], [0.9184], [0.8496], [0.9796], [0.0667], [0.9408], [0.0394], [0.1829], [0.6267], [0.2929], [0.4799], [0.1046], [0.8354], [0.5887], [0.4104], [0.9402], [0.9913], [0.7564], [0.3547], [0.6387], [0.1424]], [[0.3273], [0.1777], [0.8568], [0.3593], [0.5523], [0.8083], [0.6495], [0.938], [0.1703], [0.819], [0.4996], [0.8493], [0.0579], [0.7204], [0.0234], [0.8757], [0.3105], [0.6561], [0.8407], [0.6527], [0.5279], [0.1626], [0.6435], [0.2676], [0.2058], [0.7975], [0.46]], [[0.1585], [0.1745], [0.7346], [0.4728], [0.8049], [0.9635], [0.8721], [0.5209], [0.102], [0.8235], [0.6085], [0.5921], [0.3743], [0.8899], [0.2023], [0.1959], [0.6949], [0.6341], [0.5521], [0.4945], [0.5537], [0.3151], [0.3069], [0.4677], [0.9436], [0.6202], [0.4495]]]]], 3, Con63087), 
LSub99527 = subtract_layer([[[[0.9372, 0.7014, 0.0592], [0.1699, 0.8206, 0.4821], [0.8896, 0.7016, 0.5987]], [[0.3278, 0.0583, 0.8441], [0.2892, 0.1605, 0.3109], [0.3547, 0.4435, 0.5646]]]], [[[[0.5636, 0.6226, 0.4662], [0.2298, 0.4683, 0.8282], [0.7337, 0.297, 0.6935]], [[0.648, 0.1938, 0.7527], [0.3337, 0.0624, 0.2271], [0.2855, 0.3565, 0.1071]]]], Sub99527), 
LRes67635 = reshape_layer(Sub99527, [2, 9], Res67635), 
LAve51330 = average_pooling1D_layer(Res67635, 2, Ave51330), 
LRes35354 = reshape_layer(Ave51330, [1, 9, 1], Res35354), 
LZer26979 = zero_padding2D_layer(Res35354, 1, 0, 6, 0, Zer26979), 
LCon8096 = concatenate_layer([Zer26979,[[[[0.9662], [0.0015], [0.5822], [0.0267], [0.025], [0.553], [0.2074], [0.0363], [0.7461], [0.1128], [0.6569], [0.381], [0.1414], [0.9016], [0.3589]], [[0.3093], [0.1598], [0.8023], [0.5694], [0.744], [0.5616], [0.1452], [0.9166], [0.3377], [0.8312], [0.8364], [0.4202], [0.8059], [0.3255], [0.9942]]]]], 3, Con8096), 
LMax53917 = maximum_layer([[[[[[0.6847]]], [[[0.5678]]]]], [[[[[0.0176]]], [[[0.4713]]]]]], Max53917), 
LRes47051 = reshape_layer(Max53917, [2, 1, 1], Res47051), 
LZer22760 = zero_padding2D_layer(Res47051, 0, 0, 2, 0, Zer22760), 
LCon65916 = concatenate_layer([Zer22760,[[[[0.6781], [0.9981], [0.1995]], [[0.5083], [0.6828], [0.7326]]]]], 3, Con65916), 
LAve55767 = average_pooling2D_layer([[[[1.1849, 1.7522], [1.7321, 1.6916]]]], 1, 1, 1, 1, true, Ave55767), 
LZer41028 = zero_padding2D_layer(Ave55767, 1, 0, 1, 0, Zer41028), 
LAve15452 = average_layer([Con65916,Zer41028], Ave15452), 
LZer84917 = zero_padding2D_layer(Ave15452, 0, 0, 12, 0, Zer84917), 
LMul17118 = multiply_layer([Con8096,Zer84917], Mul17118), 
LZer49382 = zero_padding2D_layer(Mul17118, 1, 0, 12, 0, Zer49382), 
LMax87937 = maximum_layer([Con63087,Zer49382], Max87937), 
exec_layers([LDot45416,LMax52354,LRes29409,LZer57186,LCon63087,LSub99527,LRes67635,LAve51330,LRes35354,LZer26979,LCon8096,LMax53917,LRes47051,LZer22760,LCon65916,LAve55767,LZer41028,LAve15452,LZer84917,LMul17118,LZer49382,LMax87937],["Dot45416","Max52354","Res29409","Zer57186","Con63087","Sub99527","Res67635","Ave51330","Res35354","Zer26979","Con8096","Max53917","Res47051","Zer22760","Con65916","Ave55767","Zer41028","Ave15452","Zer84917","Mul17118","Zer49382","Max87937"],Max87937,"Max87937")

Actual (Unparsed): [[[[0.0000000, 0.9483000], [0.0000000, 0.9402000], [0.0000000, 0.3154000], [0.0000000, 0.1516000], [0.0000000, 0.8878000], [0.0000000, 0.5690000], [0.0000000, 0.4121000], [0.0000000, 0.9184000], [0.0000000, 0.8496000], [0.0000000, 0.9796000], [0.0000000, 0.0667000], [0.0000000, 0.9408000], [0.0000000, 0.0394000], [0.0000000, 0.1829000], [0.0000000, 0.6267000], [0.0000000, 0.2929000], [0.0000000, 0.4799000], [0.0000000, 0.1046000], [0.0000000, 0.8354000], [0.0000000, 0.5887000], [0.0000000, 0.4104000], [0.0000000, 0.9402000], [0.0000000, 0.9913000], [0.0000000, 0.7564000], [1.0053803, 0.3547000], [0.7797882, 0.6387000], [0.5988134, 0.1424000]], [[0.0000000, 0.3273000], [0.0000000, 0.1777000], [0.0000000, 0.8568000], [0.0000000, 0.3593000], [0.0000000, 0.5523000], [0.0000000, 0.8083000], [0.0000000, 0.6495000], [0.0000000, 0.9380000], [0.0000000, 0.1703000], [0.0000000, 0.8190000], [0.0000000, 0.4996000], [0.0000000, 0.8493000], [0.0000000, 0.0579000], [0.0000000, 0.7204000], [0.0000000, 0.0234000], [0.0000000, 0.8757000], [0.0000000, 0.3105000], [0.0000000, 0.6561000], [0.0000000, 0.8407000], [0.0000000, 0.6527000], [0.0000000, 0.5279000], [0.0000000, 0.1626000], [0.0000000, 0.6435000], [0.0000000, 0.2676000], [0.5248798, 0.2058000], [0.7060609, 0.7975000], [0.5015678, 0.4600000]], [[0.0000000, 0.1585000], [0.0000000, 0.1745000], [0.0000000, 0.7346000], [0.0000000, 0.4728000], [0.0000000, 0.8049000], [0.0000000, 0.9635000], [0.0000000, 0.8721000], [0.0000000, 0.5209000], [0.0000000, 0.1020000], [0.0000000, 0.8235000], [0.0000000, 0.6085000], [0.0000000, 0.5921000], [0.0000000, 0.3743000], [0.0000000, 0.8899000], [0.0000000, 0.2023000], [0.0000000, 0.1959000], [0.0000000, 0.6949000], [0.0000000, 0.6341000], [0.0000000, 0.5521000], [-0.0000000, 0.4945000], [-0.0000000, 0.5537000], [-0.0000000, 0.3151000], [0.0000000, 0.3069000], [-0.0000000, 0.4677000], [0.9311880, 0.9436000], [0.9792168, 0.6202000], [0.6360525, 1.2050698]]]]

Expected (Unparsed): [[[[0,0.9483],[0,0.9402],[0,0.3154],[0,0.1516],[0,0.8878],[0,0.569],[0,0.4121],[0,0.9184],[0,0.8496],[0,0.9796],[0,0.0667],[0,0.9408],[0,0.0394],[0,0.1829],[0,0.6267],[0,0.2929],[0,0.4799],[0,0.1046],[0,0.8354],[0,0.5887],[0,0.4104],[0,0.9402],[0,0.9913],[0,0.7564],[1.00538032,0.3547],[0.77978818,0.6387],[0.5988133600000001,0.1424]],[[0,0.3273],[0,0.1777],[0,0.8568],[0,0.3593],[0,0.5523],[0,0.8083],[0,0.6495],[0,0.938],[0,0.1703],[0,0.819],[0,0.4996],[0,0.8493],[0,0.0579],[0,0.7204],[0,0.0234],[0,0.8757],[0,0.3105],[0,0.6561],[0,0.8407],[0,0.6527],[0,0.5279],[0,0.1626],[0,0.6435],[0,0.2676],[0.5248798000000001,0.2058],[0.70606093,0.7975],[0.5015677599999999,0.46]],[[0,0.1585],[0,0.1745],[0,0.7346],[0,0.4728],[0,0.8049],[0,0.9635],[0,0.8721],[0,0.5209],[0,0.102],[0,0.8235],[0,0.6085],[0,0.5921],[0,0.3743],[0,0.8899],[0,0.2023],[0,0.1959],[0,0.6949],[0,0.6341],[0,0.5521],[0,0.4945],[0,0.5537],[0,0.3151],[0,0.3069],[0,0.4677],[0.9311880100000001,0.9436],[0.97921681,0.6202],[0.6360525300000001,1.2050698199999998]]]]

Actual:   [[[[0, 0.9483], [0, 0.9402], [0, 0.3154], [0, 0.1516], [0, 0.8878], [0, 0.569], [0, 0.4121], [0, 0.9184], [0, 0.8496], [0, 0.9796], [0, 0.0667], [0, 0.9408], [0, 0.0394], [0, 0.1829], [0, 0.6267], [0, 0.2929], [0, 0.4799], [0, 0.1046], [0, 0.8354], [0, 0.5887], [0, 0.4104], [0, 0.9402], [0, 0.9913], [0, 0.7564], [1.0054, 0.3547], [0.7798, 0.6387], [0.5989, 0.1424]], [[0, 0.3273], [0, 0.1777], [0, 0.8568], [0, 0.3593], [0, 0.5523], [0, 0.8083], [0, 0.6495], [0, 0.938], [0, 0.1703], [0, 0.819], [0, 0.4996], [0, 0.8493], [0, 0.0579], [0, 0.7204], [0, 0.0234], [0, 0.8757], [0, 0.3105], [0, 0.6561], [0, 0.8407], [0, 0.6527], [0, 0.5279], [0, 0.1626], [0, 0.6435], [0, 0.2676], [0.5249, 0.2058], [0.7061, 0.7975], [0.5016, 0.46]], [[0, 0.1585], [0, 0.1745], [0, 0.7346], [0, 0.4728], [0, 0.8049], [0, 0.9635], [0, 0.8721], [0, 0.5209], [0, 0.102], [0, 0.8235], [0, 0.6085], [0, 0.5921], [0, 0.3743], [0, 0.8899], [0, 0.2023], [0, 0.1959], [0, 0.6949], [0, 0.6341], [0, 0.5521], [-0, 0.4945], [-0, 0.5537], [-0, 0.3151], [0, 0.3069], [-0, 0.4677], [0.9312, 0.9436], [0.9793, 0.6202], [0.6361, 1.2051]]]]

Expected: [[[[0, 0.9483], [0, 0.9402], [0, 0.3154], [0, 0.1516], [0, 0.8878], [0, 0.569], [0, 0.4121], [0, 0.9184], [0, 0.8496], [0, 0.9796], [0, 0.0667], [0, 0.9408], [0, 0.0394], [0, 0.1829], [0, 0.6267], [0, 0.2929], [0, 0.4799], [0, 0.1046], [0, 0.8354], [0, 0.5887], [0, 0.4104], [0, 0.9402], [0, 0.9913], [0, 0.7564], [1.0054, 0.3547], [0.7798, 0.6387], [0.5989, 0.1424]], [[0, 0.3273], [0, 0.1777], [0, 0.8568], [0, 0.3593], [0, 0.5523], [0, 0.8083], [0, 0.6495], [0, 0.938], [0, 0.1703], [0, 0.819], [0, 0.4996], [0, 0.8493], [0, 0.0579], [0, 0.7204], [0, 0.0234], [0, 0.8757], [0, 0.3105], [0, 0.6561], [0, 0.8407], [0, 0.6527], [0, 0.5279], [0, 0.1626], [0, 0.6435], [0, 0.2676], [0.5249, 0.2058], [0.7061, 0.7975], [0.5016, 0.46]], [[0, 0.1585], [0, 0.1745], [0, 0.7346], [0, 0.4728], [0, 0.8049], [0, 0.9635], [0, 0.8721], [0, 0.5209], [0, 0.102], [0, 0.8235], [0, 0.6085], [0, 0.5921], [0, 0.3743], [0, 0.8899], [0, 0.2023], [0, 0.1959], [0, 0.6949], [0, 0.6341], [0, 0.5521], [0, 0.4945], [0, 0.5537], [0, 0.3151], [0, 0.3069], [0, 0.4677], [0.9312, 0.9436], [0.9793, 0.6202], [0.6361, 1.2051]]]]