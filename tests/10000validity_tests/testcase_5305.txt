import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Ave81744 = tf.keras.layers.Input(shape=([2, 2]))
in1Ave81744 = tf.keras.layers.Input(shape=([2, 2]))
in0Ave58428 = tf.keras.layers.Input(shape=([1, 1]))
in1Ave58428 = tf.keras.layers.Input(shape=([1, 1]))
in0Con70475 = tf.keras.layers.Input(shape=([3]))
in0Con14288 = tf.keras.layers.Input(shape=([4, 2]))
in0Sub31167 = tf.keras.layers.Input(shape=([2, 2, 2]))
in1Sub31167 = tf.keras.layers.Input(shape=([2, 2, 2]))
in0Up_11431 = tf.keras.layers.Input(shape=([3, 3, 3, 1]))

Ave81744 = keras.layers.Average(name = 'Ave81744', )([in0Ave81744,in1Ave81744])
Fla59019 = keras.layers.Flatten(name = 'Fla59019', )(Ave81744)
Ave58428 = keras.layers.Average(name = 'Ave58428', )([in0Ave58428,in1Ave58428])
Res44262 = keras.layers.Reshape((1, 1, 1), name = 'Res44262', )(Ave58428)
Glo17143 = keras.layers.GlobalMaxPool2D(name = 'Glo17143', )(Res44262)
Con70475 = keras.layers.Concatenate(axis=1, name = 'Con70475', )([Glo17143,in0Con70475])
Mul18978 = keras.layers.Multiply(name = 'Mul18978', )([Fla59019,Con70475])
Res16860 = keras.layers.Reshape((4, 1), name = 'Res16860', )(Mul18978)
Con14288 = keras.layers.Concatenate(axis=2, name = 'Con14288', )([Res16860,in0Con14288])
Sub31167 = keras.layers.Subtract(name = 'Sub31167', )([in0Sub31167,in1Sub31167])
Res38770 = keras.layers.Reshape((2, 2, 2, 1), name = 'Res38770', )(Sub31167)
Zer27499 = keras.layers.ZeroPadding3D(padding=((1, 0), (4, 0), (4, 0)), name = 'Zer27499', )(Res38770)
Up_11431 = keras.layers.UpSampling3D(size=(1, 2, 2), name = 'Up_11431', )(in0Up_11431)
Max64542 = keras.layers.Maximum(name = 'Max64542', )([Zer27499,Up_11431])
Res73625 = keras.layers.Reshape((3, 6, 6), name = 'Res73625', )(Max64542)
Res60570 = keras.layers.Reshape((3, 36), name = 'Res60570', )(Res73625)
Sep44466 = keras.layers.SeparableConv1D(3, (1),strides=(1), padding='valid', name = 'Sep44466', )(Res60570)
Zer63191 = keras.layers.ZeroPadding1D(padding=((1, 0)), name = 'Zer63191', )(Sep44466)
Mul43949 = keras.layers.Multiply(name = 'Mul43949', )([Con14288,Zer63191])
model = tf.keras.models.Model(inputs=[in0Ave81744,in1Ave81744,in0Ave58428,in1Ave58428,in0Con70475,in0Con14288,in0Sub31167,in1Sub31167,in0Up_11431], outputs=Mul43949)
w = model.get_layer('Sep44466').get_weights() 
w[0] = np.array([[[0.007], [0.7699], [0.5739], [0.9982], [0.9238], [0.4261], [0.0232], [0.0878], [0.7535], [0.2069], [0.3927], [0.8021], [0.7795], [0.1831], [0.5254], [0.8757], [0.2497], [0.0448], [0.2173], [0.3048], [0.4433], [0.1532], [0.0792], [0.818], [0.1141], [0.4606], [0.2928], [0.7637], [0.9824], [0.5053], [0.1038], [0.7649], [0.3918], [0.6385], [0.1664], [0.3938]]])
w[1] = np.array([[[0.9744, 0.1309, 0.093], [0.7134, 0.9715, 0.5495], [0.9814, 0.1935, 0.3752], [0.6851, 0.7865, 0.035], [0.2583, 0.2101, 0.108], [0.6282, 0.5603, 0.4618], [0.1881, 0.0263, 0.8062], [0.1996, 0.3955, 0.1584], [0.8067, 0.8863, 0.6384], [0.5328, 0.6323, 0.107], [0.8097, 0.4553, 0.1239], [0.4712, 0.6677, 0.9682], [0.0869, 0.2311, 0.2651], [0.558, 0.0998, 0.8925], [0.1527, 0.1779, 0.5585], [0.2972, 0.1045, 0.2821], [0.1817, 0.0082, 0.0383], [0.3817, 0.7016, 0.3461], [0.1381, 0.0936, 0.8797], [0.0906, 0.9247, 0.7806], [0.3018, 0.6887, 0.166], [0.6554, 0.6325, 0.7901], [0.0703, 0.6577, 0.1382], [0.0714, 0.1628, 0.5041], [0.3219, 0.6006, 0.613], [0.0569, 0.4601, 0.4472], [0.5468, 0.5627, 0.6758], [0.847, 0.0579, 0.3695], [0.9391, 0.996, 0.2126], [0.4477, 0.0481, 0.463], [0.3349, 0.413, 0.2096], [0.2901, 0.2506, 0.7764], [0.3117, 0.0789, 0.9747], [0.832, 0.363, 0.7476], [0.5304, 0.933, 0.8559], [0.1905, 0.2061, 0.9051]]])
w[2] = np.array([0, 0, 0])
model.get_layer('Sep44466').set_weights(w) 
in0Ave81744 = tf.constant([[[0.6685, 0.538], [0.4505, 0.0658]]])
in1Ave81744 = tf.constant([[[0.5072, 0.4732], [0.0838, 0.896]]])
in0Ave58428 = tf.constant([[[0.3139]]])
in1Ave58428 = tf.constant([[[0.926]]])
in0Con70475 = tf.constant([[0.3242, 0.0261, 0.7247]])
in0Con14288 = tf.constant([[[0.243, 0.4945], [0.9131, 0.4744], [0.2596, 0.0668], [0.7304, 0.6537]]])
in0Sub31167 = tf.constant([[[[0.5042, 0.4493], [0.1699, 0.2182]], [[0.7245, 0.6496], [0.1814, 0.7159]]]])
in1Sub31167 = tf.constant([[[[0.1995, 0.6411], [0.0631, 0.3997]], [[0.1629, 0.4912], [0.6559, 0.9917]]]])
in0Up_11431 = tf.constant([[[[[1.8225], [1.6323], [1.2795]], [[1.3836], [1.4027], [1.3157]], [[1.7813], [1.018], [1.1876]]], [[[1.5866], [1.7709], [1.6947]], [[1.0489], [1.9404], [1.8036]], [[1.9969], [1.4183], [1.8674]]], [[[1.2116], [1.1616], [1.3063]], [[1.9528], [1.8755], [1.755]], [[1.7613], [1.064], [1.4702]]]]])
print (np.array2string(model.predict([in0Ave81744,in1Ave81744,in0Ave58428,in1Ave58428,in0Con70475,in0Con14288,in0Sub31167,in1Sub31167,in0Up_11431],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Mul43949.png')

LAve81744 = average_layer([[[[0.6685, 0.538], [0.4505, 0.0658]]], [[[0.5072, 0.4732], [0.0838, 0.896]]]], Ave81744), 
LFla59019 = flatten_layer(Ave81744, Fla59019), 
LAve58428 = average_layer([[[[0.3139]]], [[[0.926]]]], Ave58428), 
LRes44262 = reshape_layer(Ave58428, [1, 1, 1], Res44262), 
LGlo17143 = global_max_pool2D_layer(Res44262, Glo17143), 
LCon70475 = concatenate_layer([Glo17143,[[0.3242, 0.0261, 0.7247]]], 1, Con70475), 
LMul18978 = multiply_layer([Fla59019,Con70475], Mul18978), 
LRes16860 = reshape_layer(Mul18978, [4, 1], Res16860), 
LCon14288 = concatenate_layer([Res16860,[[[0.243, 0.4945], [0.9131, 0.4744], [0.2596, 0.0668], [0.7304, 0.6537]]]], 2, Con14288), 
LSub31167 = subtract_layer([[[[0.5042, 0.4493], [0.1699, 0.2182]], [[0.7245, 0.6496], [0.1814, 0.7159]]]], [[[[0.1995, 0.6411], [0.0631, 0.3997]], [[0.1629, 0.4912], [0.6559, 0.9917]]]], Sub31167), 
LRes38770 = reshape_layer(Sub31167, [2, 2, 2, 1], Res38770), 
LZer27499 = zero_padding3D_layer(Res38770, 1, 0, 4, 0, 4, 0, Zer27499), 
LUp_11431 = up_sampling3D_layer([[[[[1.8225], [1.6323], [1.2795]], [[1.3836], [1.4027], [1.3157]], [[1.7813], [1.018], [1.1876]]], [[[1.5866], [1.7709], [1.6947]], [[1.0489], [1.9404], [1.8036]], [[1.9969], [1.4183], [1.8674]]], [[[1.2116], [1.1616], [1.3063]], [[1.9528], [1.8755], [1.755]], [[1.7613], [1.064], [1.4702]]]]], 1, 2, 2, Up_11431), 
LMax64542 = maximum_layer([Zer27499,Up_11431], Max64542), 
LRes73625 = reshape_layer(Max64542, [3, 6, 6], Res73625), 
LRes60570 = reshape_layer(Res73625, [3, 36], Res60570), 
LSep44466 = separable_conv1D_layer(Res60570, 1,[[[[0.007], [0.7699], [0.5739], [0.9982], [0.9238], [0.4261], [0.0232], [0.0878], [0.7535], [0.2069], [0.3927], [0.8021], [0.7795], [0.1831], [0.5254], [0.8757], [0.2497], [0.0448], [0.2173], [0.3048], [0.4433], [0.1532], [0.0792], [0.818], [0.1141], [0.4606], [0.2928], [0.7637], [0.9824], [0.5053], [0.1038], [0.7649], [0.3918], [0.6385], [0.1664], [0.3938]]],[[[0.9744, 0.1309, 0.093], [0.7134, 0.9715, 0.5495], [0.9814, 0.1935, 0.3752], [0.6851, 0.7865, 0.035], [0.2583, 0.2101, 0.108], [0.6282, 0.5603, 0.4618], [0.1881, 0.0263, 0.8062], [0.1996, 0.3955, 0.1584], [0.8067, 0.8863, 0.6384], [0.5328, 0.6323, 0.107], [0.8097, 0.4553, 0.1239], [0.4712, 0.6677, 0.9682], [0.0869, 0.2311, 0.2651], [0.558, 0.0998, 0.8925], [0.1527, 0.1779, 0.5585], [0.2972, 0.1045, 0.2821], [0.1817, 0.0082, 0.0383], [0.3817, 0.7016, 0.3461], [0.1381, 0.0936, 0.8797], [0.0906, 0.9247, 0.7806], [0.3018, 0.6887, 0.166], [0.6554, 0.6325, 0.7901], [0.0703, 0.6577, 0.1382], [0.0714, 0.1628, 0.5041], [0.3219, 0.6006, 0.613], [0.0569, 0.4601, 0.4472], [0.5468, 0.5627, 0.6758], [0.847, 0.0579, 0.3695], [0.9391, 0.996, 0.2126], [0.4477, 0.0481, 0.463], [0.3349, 0.413, 0.2096], [0.2901, 0.2506, 0.7764], [0.3117, 0.0789, 0.9747], [0.832, 0.363, 0.7476], [0.5304, 0.933, 0.8559], [0.1905, 0.2061, 0.9051]]]],[0, 0, 0], 1, false, Sep44466), 
LZer63191 = zero_padding1D_layer(Sep44466, 1, 0, Zer63191), 
LMul43949 = multiply_layer([Con14288,Zer63191], Mul43949), 
exec_layers([LAve81744,LFla59019,LAve58428,LRes44262,LGlo17143,LCon70475,LMul18978,LRes16860,LCon14288,LSub31167,LRes38770,LZer27499,LUp_11431,LMax64542,LRes73625,LRes60570,LSep44466,LZer63191,LMul43949],["Ave81744","Fla59019","Ave58428","Res44262","Glo17143","Con70475","Mul18978","Res16860","Con14288","Sub31167","Res38770","Zer27499","Up_11431","Max64542","Res73625","Res60570","Sep44466","Zer63191","Mul43949"],Mul43949,"Mul43949")

Actual (Unparsed): [[[0.0000000, 0.0000000, 0.0000000], [1.7540124, 9.4384490, 4.8831864], [0.0918702, 3.1827132, 0.8330607], [3.6046863, 7.3849949, 7.1902669]]]

Expected (Unparsed): [[[0.0,0.0,0.0],[1.754012429128951,9.438448963395134,4.883186253874386],[0.09187020129785739,3.18271300481244,0.8330607180714539],[3.6046863473423048,7.384994723703192,7.19026702264435]]]

Actual:   [[[0, 0, 0], [1.7541, 9.4385, 4.8832], [0.0919, 3.1828, 0.8331], [3.6047, 7.385, 7.1903]]]

Expected: [[[0, 0, 0], [1.7541, 9.4385, 4.8832], [0.0919, 3.1828, 0.8331], [3.6047, 7.385, 7.1903]]]