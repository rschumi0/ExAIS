import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Sub71297 = tf.keras.layers.Input(shape=([2, 3, 2]))
in1Sub71297 = tf.keras.layers.Input(shape=([2, 3, 2]))
in0Up_73197 = tf.keras.layers.Input(shape=([3, 3, 1]))
in0Con81027 = tf.keras.layers.Input(shape=([6, 3, 1]))

Sub71297 = keras.layers.Subtract(name = 'Sub71297', )([in0Sub71297,in1Sub71297])
Zer85131 = keras.layers.ZeroPadding2D(padding=((4, 0), (0, 0)), name = 'Zer85131', )(Sub71297)
Up_73197 = keras.layers.UpSampling2D(size=(2, 1), name = 'Up_73197', )(in0Up_73197)
Con81027 = keras.layers.Concatenate(axis=3, name = 'Con81027', )([Up_73197,in0Con81027])
Mul32253 = keras.layers.Multiply(name = 'Mul32253', )([Zer85131,Con81027])
model = tf.keras.models.Model(inputs=[in0Sub71297,in1Sub71297,in0Up_73197,in0Con81027], outputs=Mul32253)
in0Sub71297 = tf.constant([[[[0.3425, 0.3207], [0.1476, 0.6856], [0.0343, 0.6385]], [[0.4004, 0.3016], [0.8804, 0.0029], [0.5879, 0.5782]]]])
in1Sub71297 = tf.constant([[[[0.0644, 0.9743], [0.7091, 0.1281], [0.2697, 0.7885]], [[0.7681, 0.0456], [0.3908, 0.5768], [0.3379, 0.4653]]]])
in0Up_73197 = tf.constant([[[[1.1516], [1.301], [1.5083]], [[1.7278], [1.007], [1.7386]], [[1.8975], [1.5772], [1.5388]]]])
in0Con81027 = tf.constant([[[[0.0639], [0.4191], [0.6869]], [[0.8351], [0.9874], [0.392]], [[0.9123], [0.8906], [0.8091]], [[0.3953], [0.1936], [0.2198]], [[0.8847], [0.9423], [0.528]], [[0.4588], [0.0969], [0.86]]]])
print (np.array2string(model.predict([in0Sub71297,in1Sub71297,in0Up_73197,in0Con81027],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Mul32253.png')

LSub71297 = subtract_layer([[[[0.3425, 0.3207], [0.1476, 0.6856], [0.0343, 0.6385]], [[0.4004, 0.3016], [0.8804, 0.0029], [0.5879, 0.5782]]]], [[[[0.0644, 0.9743], [0.7091, 0.1281], [0.2697, 0.7885]], [[0.7681, 0.0456], [0.3908, 0.5768], [0.3379, 0.4653]]]], Sub71297), 
LZer85131 = zero_padding2D_layer(Sub71297, 4, 0, 0, 0, Zer85131), 
LUp_73197 = up_sampling2D_layer([[[[1.1516], [1.301], [1.5083]], [[1.7278], [1.007], [1.7386]], [[1.8975], [1.5772], [1.5388]]]], 2, 1, Up_73197), 
LCon81027 = concatenate_layer([Up_73197,[[[[0.0639], [0.4191], [0.6869]], [[0.8351], [0.9874], [0.392]], [[0.9123], [0.8906], [0.8091]], [[0.3953], [0.1936], [0.2198]], [[0.8847], [0.9423], [0.528]], [[0.4588], [0.0969], [0.86]]]]], 3, Con81027), 
LMul32253 = multiply_layer([Zer85131,Con81027], Mul32253), 
exec_layers([LSub71297,LZer85131,LUp_73197,LCon81027,LMul32253],["Sub71297","Zer85131","Up_73197","Con81027","Mul32253"],Mul32253,"Mul32253")

Actual (Unparsed): [[[[0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000]], [[0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000]], [[0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000]], [[0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000]], [[0.5276948, -0.5782400], [-0.8855979, 0.5253323], [-0.3622335, -0.0792000]], [[-0.6977108, 0.1174528], [0.7721972, -0.0556109], [0.3847000, 0.0970940]]]]

Expected (Unparsed): [[[[0.0,0.0],[0.0,0.0],[0.0,0.0]],[[0.0,0.0],[0.0,0.0],[0.0,0.0]],[[0.0,0.0],[0.0,0.0],[0.0,0.0]],[[0.0,0.0],[0.0,0.0],[0.0,0.0]],[[0.52769475,-0.5782399200000001],[-0.8855977999999998,0.5253322500000001],[-0.36223352,-0.07920000000000002]],[[-0.69771075,0.1174528],[0.77219712,-0.05561091],[0.3847,0.09709400000000004]]]]

Actual:   [[[[0, 0], [0, 0], [0, 0]], [[0, 0], [0, 0], [0, 0]], [[0, 0], [0, 0], [0, 0]], [[0, 0], [0, 0], [0, 0]], [[0.5277, -0.5782], [-0.8855, 0.5254], [-0.3622, -0.0792]], [[-0.6977, 0.1175], [0.7722, -0.0556], [0.3847, 0.0971]]]]

Expected: [[[[0, 0], [0, 0], [0, 0]], [[0, 0], [0, 0], [0, 0]], [[0, 0], [0, 0], [0, 0]], [[0, 0], [0, 0], [0, 0]], [[0.5277, -0.5782], [-0.8855, 0.5254], [-0.3622, -0.0792]], [[-0.6977, 0.1175], [0.7722, -0.0556], [0.3847, 0.0971]]]]