import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Mul79359 = tf.keras.layers.Input(shape=([2, 1, 2]))
in1Mul79359 = tf.keras.layers.Input(shape=([2, 1, 2]))
in0Con85155 = tf.keras.layers.Input(shape=([1, 2, 2]))
in0Con23140 = tf.keras.layers.Input(shape=([3, 3, 1]))
in0Mul82874 = tf.keras.layers.Input(shape=([2, 2, 2]))
in1Mul82874 = tf.keras.layers.Input(shape=([2, 2, 2]))

Mul79359 = keras.layers.Multiply(name = 'Mul79359', )([in0Mul79359,in1Mul79359])
Res39373 = keras.layers.Reshape((2, 1, 2, 1), name = 'Res39373', )(Mul79359)
Cro16466 = keras.layers.Cropping3D(cropping=((1, 0), (0, 0), (0, 0)), name = 'Cro16466', )(Res39373)
Res17650 = keras.layers.Reshape((1, 1, 2), name = 'Res17650', )(Cro16466)
Zer71720 = keras.layers.ZeroPadding2D(padding=((0, 0), (2, 0)), name = 'Zer71720', )(Res17650)
Con85155 = keras.layers.Conv2DTranspose(2, (1, 2),strides=(1, 1), padding='valid', name = 'Con85155', )(in0Con85155)
Min10277 = keras.layers.Minimum(name = 'Min10277', )([Zer71720,Con85155])
Res67251 = keras.layers.Reshape((1, 6), name = 'Res67251', )(Min10277)
GRU20551 = keras.layers.GRU(3,reset_after=True, recurrent_activation='sigmoid', name = 'GRU20551', )(Res67251)
Res92014 = keras.layers.Reshape((3, 1), name = 'Res92014', )(GRU20551)
Res7536 = keras.layers.Reshape((3, 1, 1), name = 'Res7536', )(Res92014)
Zer6527 = keras.layers.ZeroPadding2D(padding=((0, 0), (2, 0)), name = 'Zer6527', )(Res7536)
Con23140 = keras.layers.Concatenate(axis=3, name = 'Con23140', )([Zer6527,in0Con23140])
Mul82874 = keras.layers.Multiply(name = 'Mul82874', )([in0Mul82874,in1Mul82874])
Zer20732 = keras.layers.ZeroPadding2D(padding=((1, 0), (1, 0)), name = 'Zer20732', )(Mul82874)
Max83232 = keras.layers.Maximum(name = 'Max83232', )([Con23140,Zer20732])
model = tf.keras.models.Model(inputs=[in0Mul79359,in1Mul79359,in0Con85155,in0Con23140,in0Mul82874,in1Mul82874], outputs=Max83232)
w = model.get_layer('Con85155').get_weights() 
w[0] = np.array([[[[0.5338, 0.1033], [0.6071, 0.1732]], [[0.4787, 0.8869], [0.6628, 0.2407]]]])
w[1] = np.array([0, 0])
model.get_layer('Con85155').set_weights(w) 
w = model.get_layer('GRU20551').get_weights() 
w[0] = np.array([[10, 9, 9, 8, 3, 7, 8, 1, 8], [6, 5, 9, 5, 5, 8, 3, 4, 2], [8, 6, 5, 4, 4, 5, 5, 8, 4], [3, 2, 10, 5, 3, 10, 3, 2, 2], [5, 7, 6, 4, 9, 10, 3, 9, 4], [10, 5, 1, 4, 4, 8, 5, 6, 6]])
w[1] = np.array([[9, 10, 9, 3, 4, 10, 8, 10, 3], [6, 8, 3, 9, 1, 2, 10, 1, 4], [5, 8, 7, 4, 7, 1, 2, 7, 7]])
w[2] = np.array([[10, 4, 7, 5, 9, 6, 8, 9, 6], [5, 3, 3, 9, 8, 6, 8, 9, 8]])
model.get_layer('GRU20551').set_weights(w) 
in0Mul79359 = tf.constant([[[[0.5395, 0.1405]], [[0.4457, 0.7692]]]])
in1Mul79359 = tf.constant([[[[0.7242, 0.3607]], [[0.0582, 0.9402]]]])
in0Con85155 = tf.constant([[[[0.4431, 0.173], [0.038, 0.1616]]]])
in0Con23140 = tf.constant([[[[0.0551], [0.2276], [0.2472]], [[0.2504], [0.5682], [0.3857]], [[0.4992], [0.1671], [0.4474]]]])
in0Mul82874 = tf.constant([[[[0.824, 0.6998], [0.9539, 0.6604]], [[0.5665, 0.5752], [0.3223, 0.8644]]]])
in1Mul82874 = tf.constant([[[[0.3922, 0.0176], [0.6495, 0.5342]], [[0.2918, 0.8078], [0.6403, 0.877]]]])
print (np.array2string(model.predict([in0Mul79359,in1Mul79359,in0Con85155,in0Con23140,in0Mul82874,in1Mul82874],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Max83232.png')

LMul79359 = multiply_layer([[[[[0.5395, 0.1405]], [[0.4457, 0.7692]]]], [[[[0.7242, 0.3607]], [[0.0582, 0.9402]]]]], Mul79359), 
LRes39373 = reshape_layer(Mul79359, [2, 1, 2, 1], Res39373), 
LCro16466 = cropping3D_layer(Res39373, 1, 0, 0, 0, 0, 0, Cro16466), 
LRes17650 = reshape_layer(Cro16466, [1, 1, 2], Res17650), 
LZer71720 = zero_padding2D_layer(Res17650, 0, 0, 2, 0, Zer71720), 
LCon85155 = conv2D_transpose_layer([[[[0.4431, 0.173], [0.038, 0.1616]]]], 1, 2,[[[[0.5338, 0.1033], [0.6071, 0.1732]], [[0.4787, 0.8869], [0.6628, 0.2407]]]],[0, 0], 1, 1, false, Con85155), 
LMin10277 = minimum_layer([Zer71720,Con85155], Min10277), 
LRes67251 = reshape_layer(Min10277, [1, 6], Res67251), 
LGRU20551 = gru_layer(Res67251,[[10, 9, 9, 8, 3, 7, 8, 1, 8], [6, 5, 9, 5, 5, 8, 3, 4, 2], [8, 6, 5, 4, 4, 5, 5, 8, 4], [3, 2, 10, 5, 3, 10, 3, 2, 2], [5, 7, 6, 4, 9, 10, 3, 9, 4], [10, 5, 1, 4, 4, 8, 5, 6, 6]],[[9, 10, 9, 3, 4, 10, 8, 10, 3], [6, 8, 3, 9, 1, 2, 10, 1, 4], [5, 8, 7, 4, 7, 1, 2, 7, 7]],[[10, 4, 7, 5, 9, 6, 8, 9, 6], [5, 3, 3, 9, 8, 6, 8, 9, 8]], true, GRU20551), 
LRes92014 = reshape_layer(GRU20551, [3, 1], Res92014), 
LRes7536 = reshape_layer(Res92014, [3, 1, 1], Res7536), 
LZer6527 = zero_padding2D_layer(Res7536, 0, 0, 2, 0, Zer6527), 
LCon23140 = concatenate_layer([Zer6527,[[[[0.0551], [0.2276], [0.2472]], [[0.2504], [0.5682], [0.3857]], [[0.4992], [0.1671], [0.4474]]]]], 3, Con23140), 
LMul82874 = multiply_layer([[[[[0.824, 0.6998], [0.9539, 0.6604]], [[0.5665, 0.5752], [0.3223, 0.8644]]]], [[[[0.3922, 0.0176], [0.6495, 0.5342]], [[0.2918, 0.8078], [0.6403, 0.877]]]]], Mul82874), 
LZer20732 = zero_padding2D_layer(Mul82874, 1, 0, 1, 0, Zer20732), 
LMax83232 = maximum_layer([Con23140,Zer20732], Max83232), 
exec_layers([LMul79359,LRes39373,LCro16466,LRes17650,LZer71720,LCon85155,LMin10277,LRes67251,LGRU20551,LRes92014,LRes7536,LZer6527,LCon23140,LMul82874,LZer20732,LMax83232],["Mul79359","Res39373","Cro16466","Res17650","Zer71720","Con85155","Min10277","Res67251","GRU20551","Res92014","Res7536","Zer6527","Con23140","Mul82874","Zer20732","Max83232"],Max83232,"Max83232")

Actual (Unparsed): [[[[0.0000000, 0.0551000], [0.0000000, 0.2276000], [0.0000001, 0.2472000]], [[0.0000000, 0.2504000], [0.3231728, 0.5682000], [0.6195580, 0.3857000]], [[0.0000000, 0.4992000], [0.1653047, 0.4646466], [0.2063687, 0.7580788]]]]

Expected (Unparsed): [[[[0,0.0551],[0,0.2276],[1.415611522448385e-7,0.2472]],[[0,0.2504],[0.3231728,0.5682],[0.61955805,0.3857]],[[0,0.4992],[0.1653047,0.46464656000000004],[0.20636868999999997,0.7580787999999999]]]]

Actual:   [[[[0, 0.0551], [0, 0.2276], [0, 0.2472]], [[0, 0.2504], [0.3232, 0.5682], [0.6196, 0.3857]], [[0, 0.4992], [0.1654, 0.4647], [0.2064, 0.7581]]]]

Expected: [[[[0, 0.0551], [0, 0.2276], [0, 0.2472]], [[0, 0.2504], [0.3232, 0.5682], [0.6196, 0.3857]], [[0, 0.4992], [0.1654, 0.4647], [0.2064, 0.7581]]]]