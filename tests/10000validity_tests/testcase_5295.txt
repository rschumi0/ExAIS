import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Ave99143 = tf.keras.layers.Input(shape=([2, 2]))
in1Ave99143 = tf.keras.layers.Input(shape=([2, 2]))

Ave99143 = keras.layers.Average(name = 'Ave99143', )([in0Ave99143,in1Ave99143])
Bat65593 = keras.layers.BatchNormalization(axis=2, epsilon=0.44326867395982905,  name = 'Bat65593', )(Ave99143)
model = tf.keras.models.Model(inputs=[in0Ave99143,in1Ave99143], outputs=Bat65593)
w = model.get_layer('Bat65593').get_weights() 
w[0] = np.array([0.0365, 0.045])
w[1] = np.array([0.7743, 0.7179])
w[2] = np.array([0.6648, 0.5817])
w[3] = np.array([0.0474, 0.4223])
model.get_layer('Bat65593').set_weights(w) 
in0Ave99143 = tf.constant([[[0.5245, 0.0483], [0.3707, 0.8484]]])
in1Ave99143 = tf.constant([[[0.4796, 0.8182], [0.1439, 0.1974]]])
print (np.array2string(model.predict([in0Ave99143,in1Ave99143],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Bat65593.png')

LAve99143 = average_layer([[[[0.5245, 0.0483], [0.3707, 0.8484]]], [[[0.4796, 0.8182], [0.1439, 0.1974]]]], Ave99143), 
LBat65593 = batch_normalization_layer(Ave99143, 2, 0.44326867395982905, [0.0365, 0.045], [0.7743, 0.7179], [0.6648, 0.5817], [0.0474, 0.4223], Bat65593), 
exec_layers([LAve99143,LBat65593],["Ave99143","Bat65593"],Bat65593,"Bat65593")

Actual (Unparsed): [[[0.7658195, 0.7107197], [0.7530663, 0.7150559]]]

Expected (Unparsed): [[[0.7658195344216456,0.7107197105705461],[0.7530662689820007,0.7150559379019744]]]

Actual:   [[[0.7659, 0.7108], [0.7531, 0.7151]]]

Expected: [[[0.7659, 0.7108], [0.7531, 0.7151]]]