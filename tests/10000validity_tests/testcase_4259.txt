import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Max95257 = tf.keras.layers.Input(shape=([1, 2]))
in1Max95257 = tf.keras.layers.Input(shape=([1, 2]))
in0Con9786 = tf.keras.layers.Input(shape=([8, 3, 2, 3]))
in0Up_93046 = tf.keras.layers.Input(shape=([4, 3, 1, 4]))
in0Max62082 = tf.keras.layers.Input(shape=([1, 1]))
in1Max62082 = tf.keras.layers.Input(shape=([1, 1]))
in0Con45287 = tf.keras.layers.Input(shape=([2, 1]))
in0Mul10313 = tf.keras.layers.Input(shape=([2, 2]))
in1Mul10313 = tf.keras.layers.Input(shape=([2, 2]))
in0Con90451 = tf.keras.layers.Input(shape=([8, 22]))

Max95257 = keras.layers.Maximum(name = 'Max95257', )([in0Max95257,in1Max95257])
Res49497 = keras.layers.Reshape((1, 2, 1), name = 'Res49497', )(Max95257)
Res58165 = keras.layers.Reshape((1, 2, 1, 1), name = 'Res58165', )(Res49497)
Zer18412 = keras.layers.ZeroPadding3D(padding=((7, 0), (1, 0), (1, 0)), name = 'Zer18412', )(Res58165)
Con9786 = keras.layers.Concatenate(axis=4, name = 'Con9786', )([Zer18412,in0Con9786])
Up_93046 = keras.layers.UpSampling3D(size=(2, 1, 2), name = 'Up_93046', )(in0Up_93046)
Min1605 = keras.layers.Minimum(name = 'Min1605', )([Con9786,Up_93046])
Res48407 = keras.layers.Reshape((8, 3, 8), name = 'Res48407', )(Min1605)
Res47194 = keras.layers.Reshape((8, 24), name = 'Res47194', )(Res48407)
Max62082 = keras.layers.Maximum(name = 'Max62082', )([in0Max62082,in1Max62082])
Zer59518 = keras.layers.ZeroPadding1D(padding=((1, 0)), name = 'Zer59518', )(Max62082)
Con45287 = keras.layers.Concatenate(axis=2, name = 'Con45287', )([Zer59518,in0Con45287])
Mul10313 = keras.layers.Multiply(name = 'Mul10313', )([in0Mul10313,in1Mul10313])
Dot50022 = keras.layers.Dot(axes=(1, 1), name = 'Dot50022', )([Con45287,Mul10313])
Zer220 = keras.layers.ZeroPadding1D(padding=((6, 0)), name = 'Zer220', )(Dot50022)
Con90451 = keras.layers.Concatenate(axis=2, name = 'Con90451', )([Zer220,in0Con90451])
Ave50485 = keras.layers.Average(name = 'Ave50485', )([Res47194,Con90451])
Sim1834 = keras.layers.SimpleRNN(1,name = 'Sim1834', )(Ave50485)
model = tf.keras.models.Model(inputs=[in0Max95257,in1Max95257,in0Con9786,in0Up_93046,in0Max62082,in1Max62082,in0Con45287,in0Mul10313,in1Mul10313,in0Con90451], outputs=Sim1834)
w = model.get_layer('Sim1834').get_weights() 
w[0] = np.array([[9], [5], [2], [10], [1], [1], [8], [9], [6], [4], [3], [9], [7], [3], [9], [4], [7], [6], [10], [6], [5], [6], [6], [1]])
w[1] = np.array([[8]])
w[2] = np.array([10])
model.get_layer('Sim1834').set_weights(w) 
in0Max95257 = tf.constant([[[0.4939, 0.1398]]])
in1Max95257 = tf.constant([[[0.3023, 0.7185]]])
in0Con9786 = tf.constant([[[[[0.0012, 0.8579, 0.7407], [0.3854, 0.4484, 0.5629]], [[0.7918, 0.6788, 0.5752], [0.8238, 0.6251, 0.0555]], [[0.7167, 0.7086, 0.042], [0.068, 0.263, 0.1747]]], [[[0.0237, 0.3846, 0.6514], [0.7938, 0.1929, 0.5413]], [[0.419, 0.6565, 0.8076], [0.8442, 0.0777, 0.7733]], [[0.6884, 0.8953, 0.9203], [0.9819, 0.0904, 0.8006]]], [[[0.991, 0.1005, 0.4203], [0.2363, 0.3617, 0.8248]], [[0.8755, 0.2001, 0.5419], [0.6549, 0.5328, 0.4546]], [[0.3237, 0.9633, 0.1518], [0.3801, 0.6098, 0.1631]]], [[[0.9738, 0.2015, 0.8082], [0.8238, 0.0959, 0.3221]], [[0.1887, 0.493, 0.5767], [0.8102, 0.1918, 0.932]], [[0.2932, 0.9134, 0.0569], [0.4489, 0.7089, 0.8517]]], [[[0.2926, 0.0221, 0.1351], [0.0328, 0.4531, 0.9472]], [[0.7726, 0.268, 0.3997], [0.8114, 0.8062, 0.5285]], [[0.7334, 0.7021, 0.0911], [0.2727, 0.3618, 0.6909]]], [[[0.5175, 0.4028, 0.229], [0.7981, 0.9685, 0.4617]], [[0.0833, 0.8386, 0.8996], [0.7708, 0.7797, 0.7813]], [[0.9549, 0.8245, 0.0258], [0.5071, 0.7131, 0.41]]], [[[0.6648, 0.1458, 0.6056], [0.5982, 0.561, 0.491]], [[0.2886, 0.9665, 0.9036], [0.3448, 0.2659, 0.155]], [[0.2753, 0.0278, 0.3545], [0.1339, 0.1497, 0.7067]]], [[[0.6702, 0.3646, 0.571], [0.635, 0.164, 0.3728]], [[0.6499, 0.8829, 0.3873], [0.1239, 0.1642, 0.6389]], [[0.0819, 0.9852, 0.9919], [0.7076, 0.3998, 0.9941]]]]])
in0Up_93046 = tf.constant([[[[[1.2327, 1.9796, 1.8651, 1.0975]], [[1.6701, 1.9089, 1.6639, 1.3608]], [[1.2041, 1.1068, 1.0841, 1.6552]]], [[[1.5008, 1.1217, 1.9618, 1.6327]], [[1.6665, 1.5363, 1.5219, 1.4453]], [[1.4182, 1.5616, 1.1509, 1.8804]]], [[[1.9052, 1.5826, 1.2451, 1.8942]], [[1.3313, 1.7804, 1.6411, 1.294]], [[1.8125, 1.0916, 1.685, 1.3454]]], [[[1.9681, 1.9282, 1.8242, 1.6345]], [[1.5858, 1.2785, 1.7169, 1.6038]], [[1.33, 1.0387, 1.2456, 1.7986]]]]])
in0Max62082 = tf.constant([[[0.8684]]])
in1Max62082 = tf.constant([[[0.6794]]])
in0Con45287 = tf.constant([[[0.9598], [0.4746]]])
in0Mul10313 = tf.constant([[[0.4947, 0.0071], [0.9803, 0.6474]]])
in1Mul10313 = tf.constant([[[0.7048, 0.1639], [0.1802, 0.2185]]])
in0Con90451 = tf.constant([[[0.9151, 0.5227, 0.7692, 0.4331, 0.6645, 0.1796, 0.1271, 0.7793, 0.6504, 0.469, 0.2736, 0.1194, 0.0388, 0.1432, 0.2524, 0.7538, 0.4063, 0.1842, 0.6605, 0.4696, 0.1057, 0.2703], [0.3092, 0.7719, 0.3584, 0.1047, 0.2095, 0.8184, 0.3765, 0.4249, 0.0946, 0.7455, 0.0858, 0.0069, 0.9778, 0.208, 0.5671, 0.0022, 0.3029, 0.1196, 0.1621, 0.5014, 0.0949, 0.7752], [0.3036, 0.3033, 0.1384, 0.7693, 0.5159, 0.4912, 0.6239, 0.3763, 0.7097, 0.5614, 0.8871, 0.3544, 0.8467, 0.5341, 0.8375, 0.4539, 0.2843, 0.6882, 0.4224, 0.2613, 0.6301, 0.3013], [0.0077, 0.3994, 0.7306, 0.0559, 0.865, 0.5119, 0.4986, 0.5739, 0.0555, 0.9149, 0.6469, 0.881, 0.8716, 0.2673, 0.0317, 0.4691, 0.6584, 0.1286, 0.2387, 0.0268, 0.2736, 0.8059], [0.2427, 0.8353, 0.664, 0.4679, 0.4625, 0.291, 0.0397, 0.1045, 0.2947, 0.0106, 0.9067, 0.5433, 0.2613, 0.4941, 0.7841, 0.4016, 0.2332, 0.3838, 0.7758, 0.5476, 0.8027, 0.9363], [0.2932, 0.371, 0.7694, 0.4505, 0.1319, 0.9248, 0.8781, 0.0377, 0.7941, 0.7863, 0.3988, 0.3046, 0.4198, 0.3112, 0.8759, 0.2298, 0.9365, 0.8027, 0.3919, 0.7583, 0.0756, 0.004], [0.9849, 0.4135, 0.7112, 0.2377, 0.441, 0.5301, 0.5753, 0.4601, 0.5429, 0.5506, 0.7785, 0.4776, 0.9975, 0.1938, 0.7224, 0.5805, 0.6858, 0.2052, 0.9276, 0.8897, 0.5873, 0.8286], [0.0231, 0.7826, 0.7112, 0.1007, 0.6411, 0.8686, 0.6372, 0.563, 0.2457, 0.1154, 0.8145, 0.0105, 0.9866, 0.8961, 0.5978, 0.4525, 0.5125, 0.9207, 0.1081, 0.5463, 0.3081, 0.2431]]])
print (np.array2string(model.predict([in0Max95257,in1Max95257,in0Con9786,in0Up_93046,in0Max62082,in1Max62082,in0Con45287,in0Mul10313,in1Mul10313,in0Con90451],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Sim1834.png')

LMax95257 = maximum_layer([[[[0.4939, 0.1398]]], [[[0.3023, 0.7185]]]], Max95257), 
LRes49497 = reshape_layer(Max95257, [1, 2, 1], Res49497), 
LRes58165 = reshape_layer(Res49497, [1, 2, 1, 1], Res58165), 
LZer18412 = zero_padding3D_layer(Res58165, 7, 0, 1, 0, 1, 0, Zer18412), 
LCon9786 = concatenate_layer([Zer18412,[[[[[0.0012, 0.8579, 0.7407], [0.3854, 0.4484, 0.5629]], [[0.7918, 0.6788, 0.5752], [0.8238, 0.6251, 0.0555]], [[0.7167, 0.7086, 0.042], [0.068, 0.263, 0.1747]]], [[[0.0237, 0.3846, 0.6514], [0.7938, 0.1929, 0.5413]], [[0.419, 0.6565, 0.8076], [0.8442, 0.0777, 0.7733]], [[0.6884, 0.8953, 0.9203], [0.9819, 0.0904, 0.8006]]], [[[0.991, 0.1005, 0.4203], [0.2363, 0.3617, 0.8248]], [[0.8755, 0.2001, 0.5419], [0.6549, 0.5328, 0.4546]], [[0.3237, 0.9633, 0.1518], [0.3801, 0.6098, 0.1631]]], [[[0.9738, 0.2015, 0.8082], [0.8238, 0.0959, 0.3221]], [[0.1887, 0.493, 0.5767], [0.8102, 0.1918, 0.932]], [[0.2932, 0.9134, 0.0569], [0.4489, 0.7089, 0.8517]]], [[[0.2926, 0.0221, 0.1351], [0.0328, 0.4531, 0.9472]], [[0.7726, 0.268, 0.3997], [0.8114, 0.8062, 0.5285]], [[0.7334, 0.7021, 0.0911], [0.2727, 0.3618, 0.6909]]], [[[0.5175, 0.4028, 0.229], [0.7981, 0.9685, 0.4617]], [[0.0833, 0.8386, 0.8996], [0.7708, 0.7797, 0.7813]], [[0.9549, 0.8245, 0.0258], [0.5071, 0.7131, 0.41]]], [[[0.6648, 0.1458, 0.6056], [0.5982, 0.561, 0.491]], [[0.2886, 0.9665, 0.9036], [0.3448, 0.2659, 0.155]], [[0.2753, 0.0278, 0.3545], [0.1339, 0.1497, 0.7067]]], [[[0.6702, 0.3646, 0.571], [0.635, 0.164, 0.3728]], [[0.6499, 0.8829, 0.3873], [0.1239, 0.1642, 0.6389]], [[0.0819, 0.9852, 0.9919], [0.7076, 0.3998, 0.9941]]]]]], 4, Con9786), 
LUp_93046 = up_sampling3D_layer([[[[[1.2327, 1.9796, 1.8651, 1.0975]], [[1.6701, 1.9089, 1.6639, 1.3608]], [[1.2041, 1.1068, 1.0841, 1.6552]]], [[[1.5008, 1.1217, 1.9618, 1.6327]], [[1.6665, 1.5363, 1.5219, 1.4453]], [[1.4182, 1.5616, 1.1509, 1.8804]]], [[[1.9052, 1.5826, 1.2451, 1.8942]], [[1.3313, 1.7804, 1.6411, 1.294]], [[1.8125, 1.0916, 1.685, 1.3454]]], [[[1.9681, 1.9282, 1.8242, 1.6345]], [[1.5858, 1.2785, 1.7169, 1.6038]], [[1.33, 1.0387, 1.2456, 1.7986]]]]], 2, 1, 2, Up_93046), 
LMin1605 = minimum_layer([Con9786,Up_93046], Min1605), 
LRes48407 = reshape_layer(Min1605, [8, 3, 8], Res48407), 
LRes47194 = reshape_layer(Res48407, [8, 24], Res47194), 
LMax62082 = maximum_layer([[[[0.8684]]], [[[0.6794]]]], Max62082), 
LZer59518 = zero_padding1D_layer(Max62082, 1, 0, Zer59518), 
LCon45287 = concatenate_layer([Zer59518,[[[0.9598], [0.4746]]]], 2, Con45287), 
LMul10313 = multiply_layer([[[[0.4947, 0.0071], [0.9803, 0.6474]]], [[[0.7048, 0.1639], [0.1802, 0.2185]]]], Mul10313), 
LDot50022 = dot_layer(Con45287,Mul10313, 1, 1, Dot50022), 
LZer220 = zero_padding1D_layer(Dot50022, 6, 0, Zer220), 
LCon90451 = concatenate_layer([Zer220,[[[0.9151, 0.5227, 0.7692, 0.4331, 0.6645, 0.1796, 0.1271, 0.7793, 0.6504, 0.469, 0.2736, 0.1194, 0.0388, 0.1432, 0.2524, 0.7538, 0.4063, 0.1842, 0.6605, 0.4696, 0.1057, 0.2703], [0.3092, 0.7719, 0.3584, 0.1047, 0.2095, 0.8184, 0.3765, 0.4249, 0.0946, 0.7455, 0.0858, 0.0069, 0.9778, 0.208, 0.5671, 0.0022, 0.3029, 0.1196, 0.1621, 0.5014, 0.0949, 0.7752], [0.3036, 0.3033, 0.1384, 0.7693, 0.5159, 0.4912, 0.6239, 0.3763, 0.7097, 0.5614, 0.8871, 0.3544, 0.8467, 0.5341, 0.8375, 0.4539, 0.2843, 0.6882, 0.4224, 0.2613, 0.6301, 0.3013], [0.0077, 0.3994, 0.7306, 0.0559, 0.865, 0.5119, 0.4986, 0.5739, 0.0555, 0.9149, 0.6469, 0.881, 0.8716, 0.2673, 0.0317, 0.4691, 0.6584, 0.1286, 0.2387, 0.0268, 0.2736, 0.8059], [0.2427, 0.8353, 0.664, 0.4679, 0.4625, 0.291, 0.0397, 0.1045, 0.2947, 0.0106, 0.9067, 0.5433, 0.2613, 0.4941, 0.7841, 0.4016, 0.2332, 0.3838, 0.7758, 0.5476, 0.8027, 0.9363], [0.2932, 0.371, 0.7694, 0.4505, 0.1319, 0.9248, 0.8781, 0.0377, 0.7941, 0.7863, 0.3988, 0.3046, 0.4198, 0.3112, 0.8759, 0.2298, 0.9365, 0.8027, 0.3919, 0.7583, 0.0756, 0.004], [0.9849, 0.4135, 0.7112, 0.2377, 0.441, 0.5301, 0.5753, 0.4601, 0.5429, 0.5506, 0.7785, 0.4776, 0.9975, 0.1938, 0.7224, 0.5805, 0.6858, 0.2052, 0.9276, 0.8897, 0.5873, 0.8286], [0.0231, 0.7826, 0.7112, 0.1007, 0.6411, 0.8686, 0.6372, 0.563, 0.2457, 0.1154, 0.8145, 0.0105, 0.9866, 0.8961, 0.5978, 0.4525, 0.5125, 0.9207, 0.1081, 0.5463, 0.3081, 0.2431]]]], 2, Con90451), 
LAve50485 = average_layer([Res47194,Con90451], Ave50485), 
LSim1834 = simple_rnn_layer(Ave50485,[[9], [5], [2], [10], [1], [1], [8], [9], [6], [4], [3], [9], [7], [3], [9], [4], [7], [6], [10], [6], [5], [6], [6], [1]],[[8]],[10], Sim1834), 
exec_layers([LMax95257,LRes49497,LRes58165,LZer18412,LCon9786,LUp_93046,LMin1605,LRes48407,LRes47194,LMax62082,LZer59518,LCon45287,LMul10313,LDot50022,LZer220,LCon90451,LAve50485,LSim1834],["Max95257","Res49497","Res58165","Zer18412","Con9786","Up_93046","Min1605","Res48407","Res47194","Max62082","Zer59518","Con45287","Mul10313","Dot50022","Zer220","Con90451","Ave50485","Sim1834"],Sim1834,"Sim1834")

Actual (Unparsed): [[1.0000000]]

Expected (Unparsed): [[1.0]]

Actual:   [[1]]

Expected: [[1]]