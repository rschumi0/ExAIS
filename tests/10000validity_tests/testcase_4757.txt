import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Con59358 = tf.keras.layers.Input(shape=([1, 2]))
in0Max46488 = tf.keras.layers.Input(shape=([2, 1, 1]))
in1Max46488 = tf.keras.layers.Input(shape=([2, 1, 1]))
in0Con88138 = tf.keras.layers.Input(shape=([3, 13, 3]))
in0Sim62591 = tf.keras.layers.Input(shape=([1, 3]))
in0Con77776 = tf.keras.layers.Input(shape=([3, 1, 3]))
in0Sep13037 = tf.keras.layers.Input(shape=([1, 1, 2]))

Con59358 = keras.layers.Conv1D(4, (1),strides=(1), padding='same', dilation_rate=(1), name = 'Con59358', )(in0Con59358)
Zer43019 = keras.layers.ZeroPadding1D(padding=((1, 1)), name = 'Zer43019', )(Con59358)
Ave34630 = keras.layers.AveragePooling1D(pool_size=(2), name = 'Ave34630', )(Zer43019)
Res14562 = keras.layers.Reshape((1, 4, 1), name = 'Res14562', )(Ave34630)
Zer5482 = keras.layers.ZeroPadding2D(padding=((1, 0), (3, 0)), name = 'Zer5482', )(Res14562)
Max46488 = keras.layers.Maximum(name = 'Max46488', )([in0Max46488,in1Max46488])
Zer6992 = keras.layers.ZeroPadding2D(padding=((0, 0), (6, 0)), name = 'Zer6992', )(Max46488)
Sub83510 = keras.layers.Subtract(name = 'Sub83510', )([Zer5482,Zer6992])
Zer58745 = keras.layers.ZeroPadding2D(padding=((1, 0), (6, 0)), name = 'Zer58745', )(Sub83510)
Con88138 = keras.layers.Concatenate(axis=3, name = 'Con88138', )([Zer58745,in0Con88138])
Sim62591 = keras.layers.SimpleRNN(1,name = 'Sim62591', )(in0Sim62591)
Res35756 = keras.layers.Reshape((1, 1), name = 'Res35756', )(Sim62591)
LST38404 = keras.layers.LSTM(3,recurrent_activation='sigmoid', name = 'LST38404', )(Res35756)
Res13838 = keras.layers.Reshape((3, 1), name = 'Res13838', )(LST38404)
Res73062 = keras.layers.Reshape((3, 1, 1), name = 'Res73062', )(Res13838)
Con77776 = keras.layers.Concatenate(axis=3, name = 'Con77776', )([Res73062,in0Con77776])
Sep13037 = keras.layers.SeparableConv2D(4, (1, 1),strides=(1, 1), padding='valid', name = 'Sep13037', )(in0Sep13037)
Zer76654 = keras.layers.ZeroPadding2D(padding=((2, 0), (0, 0)), name = 'Zer76654', )(Sep13037)
Add12436 = keras.layers.Add(name = 'Add12436', )([Con77776,Zer76654])
Zer31749 = keras.layers.ZeroPadding2D(padding=((0, 0), (12, 0)), name = 'Zer31749', )(Add12436)
Mul31921 = keras.layers.Multiply(name = 'Mul31921', )([Con88138,Zer31749])
Res88826 = keras.layers.Reshape((3, 52), name = 'Res88826', )(Mul31921)
Sep93548 = keras.layers.SeparableConv1D(4, (1),strides=(3), padding='same', name = 'Sep93548', )(Res88826)
Res25436 = keras.layers.Reshape((1, 4, 1), name = 'Res25436', )(Sep93548)
Res95424 = keras.layers.Reshape((1, 4, 1, 1), name = 'Res95424', )(Res25436)
Con66070 = keras.layers.Conv3D(3, (1, 1, 1),strides=(1, 4, 1), padding='valid', dilation_rate=(1, 1, 1), name = 'Con66070', )(Res95424)
model = tf.keras.models.Model(inputs=[in0Con59358,in0Max46488,in1Max46488,in0Con88138,in0Sim62591,in0Con77776,in0Sep13037], outputs=Con66070)
w = model.get_layer('Con59358').get_weights() 
w[0] = np.array([[[0.2645, 0.1155, 0.5917, 0.4007], [0.3028, 0.2569, 0.6821, 0.7209]]])
w[1] = np.array([0, 0, 0, 0])
model.get_layer('Con59358').set_weights(w) 
w = model.get_layer('Sim62591').get_weights() 
w[0] = np.array([[3], [3], [9]])
w[1] = np.array([[9]])
w[2] = np.array([7])
model.get_layer('Sim62591').set_weights(w) 
w = model.get_layer('LST38404').get_weights() 
w[0] = np.array([[3, 6, 5, 4, 6, 8, 1, 2, 1, 1, 6, 1]])
w[1] = np.array([[6, 9, 5, 1, 2, 8, 8, 10, 4, 3, 6, 10], [2, 9, 4, 8, 1, 1, 9, 10, 5, 2, 6, 1], [2, 5, 8, 8, 5, 1, 10, 5, 10, 9, 4, 8]])
w[2] = np.array([3, 1, 3, 8, 5, 8, 7, 4, 3, 6, 3, 10])
model.get_layer('LST38404').set_weights(w) 
w = model.get_layer('Sep13037').get_weights() 
w[0] = np.array([[[[0.5338], [0.6376]]]])
w[1] = np.array([[[[0.1098, 0.0552, 0.9836, 0.2384], [0.2727, 0.3512, 0.6989, 0.5057]]]])
w[2] = np.array([0, 0, 0, 0])
model.get_layer('Sep13037').set_weights(w) 
w = model.get_layer('Sep93548').get_weights() 
w[0] = np.array([[[0.1343], [0.6228], [0.0103], [0.0356], [0.8179], [0.4733], [0.5906], [0.392], [0.4046], [0.7286], [0.6968], [0.8805], [0.0817], [0.5392], [0.0182], [0.5673], [0.5026], [0.386], [0.5957], [0.5328], [0.9293], [0.6945], [0.3576], [0.3449], [0.9197], [0.3041], [0.1389], [0.9821], [0.1194], [0.6005], [0.6868], [0.3646], [0.0765], [0.8614], [0.0941], [0.1042], [0.775], [0.7748], [0.9546], [0.6894], [0.7536], [0.1429], [0.2873], [0.0847], [0.2633], [0.5048], [0.9369], [0.6425], [0.9039], [0.7814], [0.7275], [0.3001]]])
w[1] = np.array([[[0.844, 0.6367, 0.4386, 0.0343], [0.5563, 0.8999, 0.5899, 0.4428], [0.5548, 0.7818, 0.5362, 0.5283], [0.8073, 0.5106, 0.0792, 0.7732], [0.9313, 0.7643, 0.3046, 0.4305], [0.7821, 0.1948, 0.0804, 0.0918], [0.9169, 0.7435, 0.9466, 0.1358], [0.3637, 0.0188, 0.7063, 0.1231], [0.3637, 0.629, 0.8438, 0.5212], [0.3999, 0.6406, 0.6236, 0.6314], [0.8768, 0.269, 0.3476, 0.2221], [0.2755, 0.4962, 0.7916, 0.1696], [0.4699, 0.5605, 0.2762, 0.3578], [0.164, 0.1651, 0.1836, 0.1924], [0.0827, 0.8105, 0.9812, 0.3507], [0.6356, 0.8745, 0.9771, 0.8047], [0.2601, 0.9336, 0.0976, 0.7328], [0.546, 0.3473, 0.9535, 0.6635], [0.5458, 0.3153, 0.3391, 0.0861], [0.3835, 0.4517, 0.094, 0.804], [0.3881, 0.4249, 0.954, 0.509], [0.4982, 0.3595, 0.6098, 0.4086], [0.6123, 0.5085, 0.703, 0.2551], [0.891, 0.1704, 0.8963, 0.7886], [0.7573, 0.9458, 0.4734, 0.4379], [0.4866, 0.2086, 0.1483, 0.098], [0.8293, 0.1009, 0.8925, 0.9463], [0.0675, 0.449, 0.6251, 0.5496], [0.272, 0.7508, 0.5539, 0.9658], [0.2938, 0.7804, 0.8031, 0.1518], [0.2053, 0.4228, 0.7191, 0.7485], [0.4852, 0.0623, 0.9057, 0.2365], [0.2324, 0.2223, 0.6093, 0.5286], [0.0909, 0.1826, 0.5466, 0.2975], [0.366, 0.9843, 0.6481, 0.7261], [0.0232, 0.5731, 0.4766, 0.9085], [0.8751, 0.83, 0.2718, 0.8342], [0.2796, 0.8898, 0.6719, 0.7407], [0.103, 0.4601, 0.167, 0.6345], [0.5316, 0.8152, 0.2504, 0.9493], [0.5568, 0.7674, 0.0515, 0.6344], [0.6028, 0.1892, 0.9575, 0.4486], [0.8191, 0.6012, 0.3609, 0.8723], [0.0151, 0.9265, 0.2064, 0.8449], [0.084, 0.7634, 0.4529, 0.4835], [0.0262, 0.4265, 0.9137, 0.0473], [0.3663, 0.5719, 0.1955, 0.6727], [0.8361, 0.4332, 0.6163, 0.8251], [0.6863, 0.5694, 0.0487, 0.9867], [0.8876, 0.5529, 0.6109, 0.8323], [0.7796, 0.2126, 0.0066, 0.0326], [0.4367, 0.8847, 0.1007, 0.8679]]])
w[2] = np.array([0, 0, 0, 0])
model.get_layer('Sep93548').set_weights(w) 
w = model.get_layer('Con66070').get_weights() 
w[0] = np.array([[[[[0.3196, 0.7077, 0.8574]]]]])
w[1] = np.array([0, 0, 0])
model.get_layer('Con66070').set_weights(w) 
in0Con59358 = tf.constant([[[0.5164, 0.0377]]])
in0Max46488 = tf.constant([[[[0.4669]], [[0.4069]]]])
in1Max46488 = tf.constant([[[[0.0428]], [[0.8025]]]])
in0Con88138 = tf.constant([[[[0.1262, 0.3244, 0.5151], [0.1248, 0.8701, 0.7417], [0.9844, 0.7995, 0.9168], [0.7915, 0.5356, 0.5253], [0.4342, 0.8557, 0.0081], [0.5042, 0.4677, 0.6185], [0.8121, 0.0054, 0.7688], [0.4484, 0.8145, 0.0475], [0.233, 0.2705, 0.8072], [0.1307, 0.9341, 0.1993], [0.4249, 0.6731, 0.9099], [0.4439, 0.9952, 0.6217], [0.1817, 0.6439, 0.0903]], [[0.4331, 0.9694, 0.8435], [0.475, 0.2489, 0.7023], [0.7715, 0.7455, 0.6253], [0.2206, 0.9582, 0.1924], [0.6219, 0.5108, 0.4909], [0.3316, 0.3997, 0.4271], [0.8861, 0.1014, 0.7359], [0.1115, 0.6401, 0.9426], [0.023, 0.2452, 0.5089], [0.8489, 0.3879, 0.8395], [0.4635, 0.0052, 0.5383], [0.0043, 0.5677, 0.813], [0.8273, 0.0222, 0.7358]], [[0.9468, 0.809, 0.098], [0.4395, 0.5779, 0.2533], [0.3553, 0.9548, 0.0601], [0.1856, 0.0065, 0.6667], [0.1771, 0.0222, 0.138], [0.2818, 0.5204, 0.2826], [0.2181, 0.5391, 0.6869], [0.6788, 0.2621, 0.1536], [0.7636, 0.6043, 0.5716], [0.2802, 0.0029, 0.1744], [0.0991, 0.7427, 0.681], [0.0085, 0.7874, 0.6375], [0.8801, 0.8845, 0.6802]]]])
in0Sim62591 = tf.constant([[[9, 1, 10]]])
in0Con77776 = tf.constant([[[[0.3559, 0.4851, 0.479]], [[0.3181, 0.984, 0.5936]], [[0.5577, 0.6058, 0.6527]]]])
in0Sep13037 = tf.constant([[[[0.5668, 0.297]]]])
print (np.array2string(model.predict([in0Con59358,in0Max46488,in1Max46488,in0Con88138,in0Sim62591,in0Con77776,in0Sep13037],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Con66070.png')

LCon59358 = conv1D_layer([[[0.5164, 0.0377]]], 1,[[[0.2645, 0.1155, 0.5917, 0.4007], [0.3028, 0.2569, 0.6821, 0.7209]]],[0, 0, 0, 0], 1, true, 1, Con59358), 
LZer43019 = zero_padding1D_layer(Con59358, 1, 1, Zer43019), 
LAve34630 = average_pooling1D_layer(Zer43019, 2, Ave34630), 
LRes14562 = reshape_layer(Ave34630, [1, 4, 1], Res14562), 
LZer5482 = zero_padding2D_layer(Res14562, 1, 0, 3, 0, Zer5482), 
LMax46488 = maximum_layer([[[[[0.4669]], [[0.4069]]]], [[[[0.0428]], [[0.8025]]]]], Max46488), 
LZer6992 = zero_padding2D_layer(Max46488, 0, 0, 6, 0, Zer6992), 
LSub83510 = subtract_layer(Zer5482,Zer6992, Sub83510), 
LZer58745 = zero_padding2D_layer(Sub83510, 1, 0, 6, 0, Zer58745), 
LCon88138 = concatenate_layer([Zer58745,[[[[0.1262, 0.3244, 0.5151], [0.1248, 0.8701, 0.7417], [0.9844, 0.7995, 0.9168], [0.7915, 0.5356, 0.5253], [0.4342, 0.8557, 0.0081], [0.5042, 0.4677, 0.6185], [0.8121, 0.0054, 0.7688], [0.4484, 0.8145, 0.0475], [0.233, 0.2705, 0.8072], [0.1307, 0.9341, 0.1993], [0.4249, 0.6731, 0.9099], [0.4439, 0.9952, 0.6217], [0.1817, 0.6439, 0.0903]], [[0.4331, 0.9694, 0.8435], [0.475, 0.2489, 0.7023], [0.7715, 0.7455, 0.6253], [0.2206, 0.9582, 0.1924], [0.6219, 0.5108, 0.4909], [0.3316, 0.3997, 0.4271], [0.8861, 0.1014, 0.7359], [0.1115, 0.6401, 0.9426], [0.023, 0.2452, 0.5089], [0.8489, 0.3879, 0.8395], [0.4635, 0.0052, 0.5383], [0.0043, 0.5677, 0.813], [0.8273, 0.0222, 0.7358]], [[0.9468, 0.809, 0.098], [0.4395, 0.5779, 0.2533], [0.3553, 0.9548, 0.0601], [0.1856, 0.0065, 0.6667], [0.1771, 0.0222, 0.138], [0.2818, 0.5204, 0.2826], [0.2181, 0.5391, 0.6869], [0.6788, 0.2621, 0.1536], [0.7636, 0.6043, 0.5716], [0.2802, 0.0029, 0.1744], [0.0991, 0.7427, 0.681], [0.0085, 0.7874, 0.6375], [0.8801, 0.8845, 0.6802]]]]], 3, Con88138), 
LSim62591 = simple_rnn_layer([[[9, 1, 10]]],[[3], [3], [9]],[[9]],[7], Sim62591), 
LRes35756 = reshape_layer(Sim62591, [1, 1], Res35756), 
LLST38404 = lstm_layer(Res35756,[[3, 6, 5, 4, 6, 8, 1, 2, 1, 1, 6, 1]],[[6, 9, 5, 1, 2, 8, 8, 10, 4, 3, 6, 10], [2, 9, 4, 8, 1, 1, 9, 10, 5, 2, 6, 1], [2, 5, 8, 8, 5, 1, 10, 5, 10, 9, 4, 8]],[3, 1, 3, 8, 5, 8, 7, 4, 3, 6, 3, 10], LST38404), 
LRes13838 = reshape_layer(LST38404, [3, 1], Res13838), 
LRes73062 = reshape_layer(Res13838, [3, 1, 1], Res73062), 
LCon77776 = concatenate_layer([Res73062,[[[[0.3559, 0.4851, 0.479]], [[0.3181, 0.984, 0.5936]], [[0.5577, 0.6058, 0.6527]]]]], 3, Con77776), 
LSep13037 = separable_conv2D_layer([[[[0.5668, 0.297]]]], 1, 1,[[[[[0.5338], [0.6376]]]],[[[[0.1098, 0.0552, 0.9836, 0.2384], [0.2727, 0.3512, 0.6989, 0.5057]]]]],[0, 0, 0, 0], 1, 1, false, Sep13037), 
LZer76654 = zero_padding2D_layer(Sep13037, 2, 0, 0, 0, Zer76654), 
LAdd12436 = add_layer([Con77776,Zer76654], Add12436), 
LZer31749 = zero_padding2D_layer(Add12436, 0, 0, 12, 0, Zer31749), 
LMul31921 = multiply_layer([Con88138,Zer31749], Mul31921), 
LRes88826 = reshape_layer(Mul31921, [3, 52], Res88826), 
LSep93548 = separable_conv1D_layer(Res88826, 1,[[[[0.1343], [0.6228], [0.0103], [0.0356], [0.8179], [0.4733], [0.5906], [0.392], [0.4046], [0.7286], [0.6968], [0.8805], [0.0817], [0.5392], [0.0182], [0.5673], [0.5026], [0.386], [0.5957], [0.5328], [0.9293], [0.6945], [0.3576], [0.3449], [0.9197], [0.3041], [0.1389], [0.9821], [0.1194], [0.6005], [0.6868], [0.3646], [0.0765], [0.8614], [0.0941], [0.1042], [0.775], [0.7748], [0.9546], [0.6894], [0.7536], [0.1429], [0.2873], [0.0847], [0.2633], [0.5048], [0.9369], [0.6425], [0.9039], [0.7814], [0.7275], [0.3001]]],[[[0.844, 0.6367, 0.4386, 0.0343], [0.5563, 0.8999, 0.5899, 0.4428], [0.5548, 0.7818, 0.5362, 0.5283], [0.8073, 0.5106, 0.0792, 0.7732], [0.9313, 0.7643, 0.3046, 0.4305], [0.7821, 0.1948, 0.0804, 0.0918], [0.9169, 0.7435, 0.9466, 0.1358], [0.3637, 0.0188, 0.7063, 0.1231], [0.3637, 0.629, 0.8438, 0.5212], [0.3999, 0.6406, 0.6236, 0.6314], [0.8768, 0.269, 0.3476, 0.2221], [0.2755, 0.4962, 0.7916, 0.1696], [0.4699, 0.5605, 0.2762, 0.3578], [0.164, 0.1651, 0.1836, 0.1924], [0.0827, 0.8105, 0.9812, 0.3507], [0.6356, 0.8745, 0.9771, 0.8047], [0.2601, 0.9336, 0.0976, 0.7328], [0.546, 0.3473, 0.9535, 0.6635], [0.5458, 0.3153, 0.3391, 0.0861], [0.3835, 0.4517, 0.094, 0.804], [0.3881, 0.4249, 0.954, 0.509], [0.4982, 0.3595, 0.6098, 0.4086], [0.6123, 0.5085, 0.703, 0.2551], [0.891, 0.1704, 0.8963, 0.7886], [0.7573, 0.9458, 0.4734, 0.4379], [0.4866, 0.2086, 0.1483, 0.098], [0.8293, 0.1009, 0.8925, 0.9463], [0.0675, 0.449, 0.6251, 0.5496], [0.272, 0.7508, 0.5539, 0.9658], [0.2938, 0.7804, 0.8031, 0.1518], [0.2053, 0.4228, 0.7191, 0.7485], [0.4852, 0.0623, 0.9057, 0.2365], [0.2324, 0.2223, 0.6093, 0.5286], [0.0909, 0.1826, 0.5466, 0.2975], [0.366, 0.9843, 0.6481, 0.7261], [0.0232, 0.5731, 0.4766, 0.9085], [0.8751, 0.83, 0.2718, 0.8342], [0.2796, 0.8898, 0.6719, 0.7407], [0.103, 0.4601, 0.167, 0.6345], [0.5316, 0.8152, 0.2504, 0.9493], [0.5568, 0.7674, 0.0515, 0.6344], [0.6028, 0.1892, 0.9575, 0.4486], [0.8191, 0.6012, 0.3609, 0.8723], [0.0151, 0.9265, 0.2064, 0.8449], [0.084, 0.7634, 0.4529, 0.4835], [0.0262, 0.4265, 0.9137, 0.0473], [0.3663, 0.5719, 0.1955, 0.6727], [0.8361, 0.4332, 0.6163, 0.8251], [0.6863, 0.5694, 0.0487, 0.9867], [0.8876, 0.5529, 0.6109, 0.8323], [0.7796, 0.2126, 0.0066, 0.0326], [0.4367, 0.8847, 0.1007, 0.8679]]]],[0, 0, 0, 0], 3, true, Sep93548), 
LRes25436 = reshape_layer(Sep93548, [1, 4, 1], Res25436), 
LRes95424 = reshape_layer(Res25436, [1, 4, 1, 1], Res95424), 
LCon66070 = conv3D_layer(Res95424, 1, 1, 1,[[[[[0.3196, 0.7077, 0.8574]]]]],[0, 0, 0], 1, 4, 1, false, 1, 1, 1, Con66070), 
exec_layers([LCon59358,LZer43019,LAve34630,LRes14562,LZer5482,LMax46488,LZer6992,LSub83510,LZer58745,LCon88138,LSim62591,LRes35756,LLST38404,LRes13838,LRes73062,LCon77776,LSep13037,LZer76654,LAdd12436,LZer31749,LMul31921,LRes88826,LSep93548,LRes25436,LRes95424,LCon66070],["Con59358","Zer43019","Ave34630","Res14562","Zer5482","Max46488","Zer6992","Sub83510","Zer58745","Con88138","Sim62591","Res35756","LST38404","Res13838","Res73062","Con77776","Sep13037","Zer76654","Add12436","Zer31749","Mul31921","Res88826","Sep93548","Res25436","Res95424","Con66070"],Con66070,"Con66070")

Actual (Unparsed): [[[[[0.0727650, 0.1611257, 0.1952087]]]]]

Expected (Unparsed): [[[[[0.0727649823270176,0.16112571336930648,0.19520868537917674]]]]]

Actual:   [[[[[0.0728, 0.1612, 0.1953]]]]]

Expected: [[[[[0.0728, 0.1612, 0.1953]]]]]