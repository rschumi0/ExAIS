import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Add60443 = tf.keras.layers.Input(shape=([1, 1, 1, 2]))
in1Add60443 = tf.keras.layers.Input(shape=([1, 1, 1, 2]))
in0Glo6018 = tf.keras.layers.Input(shape=([1, 2]))
in0Con61863 = tf.keras.layers.Input(shape=([4, 3, 1]))
in0Bat56937 = tf.keras.layers.Input(shape=([4]))
in0Con2949 = tf.keras.layers.Input(shape=([4, 3, 1]))
in0Mul87470 = tf.keras.layers.Input(shape=([1, 2, 2]))
in1Mul87470 = tf.keras.layers.Input(shape=([1, 2, 2]))

Add60443 = keras.layers.Add(name = 'Add60443', )([in0Add60443,in1Add60443])
Lay67496 = keras.layers.LayerNormalization(axis=1, epsilon=1.9502395688749532, name = 'Lay67496', )(Add60443)
Res57715 = keras.layers.Reshape((1, 1, 2), name = 'Res57715', )(Lay67496)
Res76108 = keras.layers.Reshape((1, 2), name = 'Res76108', )(Res57715)
Fla27452 = keras.layers.Flatten(name = 'Fla27452', )(Res76108)
Glo6018 = keras.layers.GlobalMaxPool1D(name = 'Glo6018', )(in0Glo6018)
Dot25326 = keras.layers.Dot(axes=(1, 1), name = 'Dot25326', )([Fla27452,Glo6018])
Res91098 = keras.layers.Reshape((1, 1), name = 'Res91098', )(Dot25326)
Max40917 = keras.layers.MaxPool1D(pool_size=(1), name = 'Max40917', )(Res91098)
Res82796 = keras.layers.Reshape((1, 1, 1), name = 'Res82796', )(Max40917)
Zer69286 = keras.layers.ZeroPadding2D(padding=((3, 0), (2, 0)), name = 'Zer69286', )(Res82796)
Con61863 = keras.layers.Concatenate(axis=3, name = 'Con61863', )([Zer69286,in0Con61863])
Bat56937 = keras.layers.BatchNormalization(axis=1, epsilon=0.10110454179269825,  name = 'Bat56937', )(in0Bat56937)
Res25865 = keras.layers.Reshape((4, 1), name = 'Res25865', )(Bat56937)
Res30285 = keras.layers.Reshape((4, 1, 1), name = 'Res30285', )(Res25865)
Zer23633 = keras.layers.ZeroPadding2D(padding=((0, 0), (2, 0)), name = 'Zer23633', )(Res30285)
Con2949 = keras.layers.Concatenate(axis=3, name = 'Con2949', )([Zer23633,in0Con2949])
Mul87470 = keras.layers.Multiply(name = 'Mul87470', )([in0Mul87470,in1Mul87470])
Zer93089 = keras.layers.ZeroPadding2D(padding=((3, 0), (1, 0)), name = 'Zer93089', )(Mul87470)
Add70165 = keras.layers.Add(name = 'Add70165', )([Con2949,Zer93089])
Sub2825 = keras.layers.Subtract(name = 'Sub2825', )([Con61863,Add70165])
model = tf.keras.models.Model(inputs=[in0Add60443,in1Add60443,in0Glo6018,in0Con61863,in0Bat56937,in0Con2949,in0Mul87470,in1Mul87470], outputs=Sub2825)
w = model.get_layer('Bat56937').get_weights() 
w[0] = np.array([0.9924, 0.265, 0.4201, 0.1014])
w[1] = np.array([0.9773, 0.9007, 0.9452, 0.0678])
w[2] = np.array([0.1327, 0.7242, 0.728, 0.3722])
w[3] = np.array([0.2399, 0.1301, 0.9255, 0.8518])
model.get_layer('Bat56937').set_weights(w) 
in0Add60443 = tf.constant([[[[[0.2871, 0.0015]]]]])
in1Add60443 = tf.constant([[[[[0.6409, 0.5798]]]]])
in0Glo6018 = tf.constant([[[1.1014, 1.8887]]])
in0Con61863 = tf.constant([[[[0.0025], [0.8547], [0.5724]], [[0.1647], [0.001], [0.5914]], [[0.422], [0.9197], [0.8713]], [[0.7595], [0.9851], [0.8755]]]])
in0Bat56937 = tf.constant([[1.0851, 1.8299, 1.0015, 1.1779]])
in0Con2949 = tf.constant([[[[0.3125], [0.389], [0.2654]], [[0.2549], [0.5145], [0.6911]], [[0.6032], [0.9195], [0.2075]], [[0.6543], [0.7068], [0.8528]]]])
in0Mul87470 = tf.constant([[[[0.0333, 0.3498], [0.7586, 0.4803]]]])
in1Mul87470 = tf.constant([[[[0.1356, 0.9376], [0.9565, 0.0757]]]])
print (np.array2string(model.predict([in0Add60443,in1Add60443,in0Glo6018,in0Con61863,in0Bat56937,in0Con2949,in0Mul87470,in1Mul87470],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Sub2825.png')

LAdd60443 = add_layer([[[[[[0.2871, 0.0015]]]]], [[[[[0.6409, 0.5798]]]]]], Add60443), 
LLay67496 = layer_normalization_layer(Add60443, 1, 1.9502395688749532, Lay67496), 
LRes57715 = reshape_layer(Lay67496, [1, 1, 2], Res57715), 
LRes76108 = reshape_layer(Res57715, [1, 2], Res76108), 
LFla27452 = flatten_layer(Res76108, Fla27452), 
LGlo6018 = global_max_pool1D_layer([[[1.1014, 1.8887]]], Glo6018), 
LDot25326 = dot_layer(Fla27452,Glo6018, 1, 1, Dot25326), 
LRes91098 = reshape_layer(Dot25326, [1, 1], Res91098), 
LMax40917 = max_pool1D_layer(Res91098, 1, Max40917), 
LRes82796 = reshape_layer(Max40917, [1, 1, 1], Res82796), 
LZer69286 = zero_padding2D_layer(Res82796, 3, 0, 2, 0, Zer69286), 
LCon61863 = concatenate_layer([Zer69286,[[[[0.0025], [0.8547], [0.5724]], [[0.1647], [0.001], [0.5914]], [[0.422], [0.9197], [0.8713]], [[0.7595], [0.9851], [0.8755]]]]], 3, Con61863), 
LBat56937 = batch_normalization_layer([[1.0851, 1.8299, 1.0015, 1.1779]], 1, 0.10110454179269825, [0.9924, 0.265, 0.4201, 0.1014], [0.9773, 0.9007, 0.9452, 0.0678], [0.1327, 0.7242, 0.728, 0.3722], [0.2399, 0.1301, 0.9255, 0.8518], Bat56937), 
LRes25865 = reshape_layer(Bat56937, [4, 1], Res25865), 
LRes30285 = reshape_layer(Res25865, [4, 1, 1], Res30285), 
LZer23633 = zero_padding2D_layer(Res30285, 0, 0, 2, 0, Zer23633), 
LCon2949 = concatenate_layer([Zer23633,[[[[0.3125], [0.389], [0.2654]], [[0.2549], [0.5145], [0.6911]], [[0.6032], [0.9195], [0.2075]], [[0.6543], [0.7068], [0.8528]]]]], 3, Con2949), 
LMul87470 = multiply_layer([[[[[0.0333, 0.3498], [0.7586, 0.4803]]]], [[[[0.1356, 0.9376], [0.9565, 0.0757]]]]], Mul87470), 
LZer93089 = zero_padding2D_layer(Mul87470, 3, 0, 1, 0, Zer93089), 
LAdd70165 = add_layer([Con2949,Zer93089], Add70165), 
LSub2825 = subtract_layer(Con61863,Add70165, Sub2825), 
exec_layers([LAdd60443,LLay67496,LRes57715,LRes76108,LFla27452,LGlo6018,LDot25326,LRes91098,LMax40917,LRes82796,LZer69286,LCon61863,LBat56937,LRes25865,LRes30285,LZer23633,LCon2949,LMul87470,LZer93089,LAdd70165,LSub2825],["Add60443","Lay67496","Res57715","Res76108","Fla27452","Glo6018","Dot25326","Res91098","Max40917","Res82796","Zer69286","Con61863","Bat56937","Res25865","Res30285","Zer23633","Con2949","Mul87470","Zer93089","Add70165","Sub2825"],Sub2825,"Sub2825")

Actual (Unparsed): [[[[0.0000000, -0.3100000], [0.0000000, 0.4657000], [-2.5958499, 0.3070000]], [[0.0000000, -0.0902000], [0.0000000, -0.5135000], [-1.5100755, -0.0997000]], [[0.0000000, -0.1812000], [0.0000000, 0.0002000], [-1.0585988, 0.6638000]], [[0.0000000, 0.1052001], [-0.0045155, -0.0496725], [-0.8770934, -0.0136587]]]]

Expected (Unparsed): [[[[0,-0.31],[0,0.4657],[-2.5958497784701877,0.307]],[[0,-0.0902],[0,-0.5135],[-1.5100755190492214,-0.09970000000000001]],[[0,-0.18119999999999997],[0,0.00019999999999997797],[-1.05859879027099,0.6638]],[[0,0.10519999999999996],[-0.0045154800000000005,-0.04967248000000002],[-0.8770934152646422,-0.013658710000000074]]]]

Actual:   [[[[0, -0.31], [0, 0.4657], [-2.5958, 0.307]], [[0, -0.0902], [0, -0.5135], [-1.51, -0.0997]], [[0, -0.1812], [0, 0.0002], [-1.0585, 0.6638]], [[0, 0.1053], [-0.0045, -0.0496], [-0.877, -0.0136]]]]

Expected: [[[[0, -0.31], [0, 0.4657], [-2.5958, 0.307]], [[0, -0.0902], [0, -0.5135], [-1.51, -0.0997]], [[0, -0.1811], [0, 0.0002], [-1.0585, 0.6638]], [[0, 0.1052], [-0.0045, -0.0496], [-0.877, -0.0136]]]]