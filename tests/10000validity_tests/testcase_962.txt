import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Sub77687 = tf.keras.layers.Input(shape=([3, 3, 3]))
in1Sub77687 = tf.keras.layers.Input(shape=([3, 3, 3]))
in0Con38055 = tf.keras.layers.Input(shape=([2, 3, 1]))
in0Lay5279 = tf.keras.layers.Input(shape=([2]))
in0Con67355 = tf.keras.layers.Input(shape=([2, 1, 3]))
in0Mul41467 = tf.keras.layers.Input(shape=([2, 1, 1, 2]))
in1Mul41467 = tf.keras.layers.Input(shape=([2, 1, 1, 2]))
in0Ave65934 = tf.keras.layers.Input(shape=([1, 2]))
in0Con78346 = tf.keras.layers.Input(shape=([2, 2, 3]))
in0Sub44726 = tf.keras.layers.Input(shape=([2, 2, 2, 2]))
in1Sub44726 = tf.keras.layers.Input(shape=([2, 2, 2, 2]))
in0Min1463 = tf.keras.layers.Input(shape=([2, 1, 2]))
in1Min1463 = tf.keras.layers.Input(shape=([2, 1, 2]))
in0Con24816 = tf.keras.layers.Input(shape=([2, 2, 2]))

Sub77687 = keras.layers.Subtract(name = 'Sub77687', )([in0Sub77687,in1Sub77687])
Loc68235 = keras.layers.LocallyConnected2D(3, (2, 1),strides=(1, 1), name = 'Loc68235', )(Sub77687)
Con38055 = keras.layers.Concatenate(axis=3, name = 'Con38055', )([Loc68235,in0Con38055])
Lay5279 = keras.layers.LayerNormalization(axis=1, epsilon=2.8730642165877196, name = 'Lay5279', )(in0Lay5279)
Res16787 = keras.layers.Reshape((2, 1), name = 'Res16787', )(Lay5279)
Res58616 = keras.layers.Reshape((2, 1, 1), name = 'Res58616', )(Res16787)
Con67355 = keras.layers.Concatenate(axis=3, name = 'Con67355', )([Res58616,in0Con67355])
Mul41467 = keras.layers.Multiply(name = 'Mul41467', )([in0Mul41467,in1Mul41467])
Res35827 = keras.layers.Reshape((2, 1, 2), name = 'Res35827', )(Mul41467)
Loc75136 = keras.layers.LocallyConnected2D(4, (1, 1),strides=(2, 1), name = 'Loc75136', )(Res35827)
Zer24074 = keras.layers.ZeroPadding2D(padding=((1, 0), (0, 0)), name = 'Zer24074', )(Loc75136)
Max88975 = keras.layers.Maximum(name = 'Max88975', )([Con67355,Zer24074])
Zer53578 = keras.layers.ZeroPadding2D(padding=((0, 0), (2, 0)), name = 'Zer53578', )(Max88975)
Max24783 = keras.layers.Maximum(name = 'Max24783', )([Con38055,Zer53578])
Ave65934 = keras.layers.AveragePooling1D(pool_size=(1), strides=(1), padding='valid', name = 'Ave65934', )(in0Ave65934)
PRe67002 = keras.layers.PReLU(name = 'PRe67002', )(Ave65934)
Res85566 = keras.layers.Reshape((1, 2, 1), name = 'Res85566', )(PRe67002)
Zer44300 = keras.layers.ZeroPadding2D(padding=((1, 0), (0, 0)), name = 'Zer44300', )(Res85566)
Con78346 = keras.layers.Concatenate(axis=3, name = 'Con78346', )([Zer44300,in0Con78346])
Sub44726 = keras.layers.Subtract(name = 'Sub44726', )([in0Sub44726,in1Sub44726])
Res28254 = keras.layers.Reshape((2, 2, 4), name = 'Res28254', )(Sub44726)
Min1463 = keras.layers.Minimum(name = 'Min1463', )([in0Min1463,in1Min1463])
Sof55046 = keras.layers.Softmax(axis=1, name = 'Sof55046', )(Min1463)
Zer7845 = keras.layers.ZeroPadding2D(padding=((0, 0), (1, 0)), name = 'Zer7845', )(Sof55046)
Con24816 = keras.layers.Concatenate(axis=3, name = 'Con24816', )([Zer7845,in0Con24816])
Min82872 = keras.layers.Minimum(name = 'Min82872', )([Res28254,Con24816])
Sub82508 = keras.layers.Subtract(name = 'Sub82508', )([Con78346,Min82872])
Zer18388 = keras.layers.ZeroPadding2D(padding=((0, 0), (1, 0)), name = 'Zer18388', )(Sub82508)
Ave48466 = keras.layers.Average(name = 'Ave48466', )([Max24783,Zer18388])
model = tf.keras.models.Model(inputs=[in0Sub77687,in1Sub77687,in0Con38055,in0Lay5279,in0Con67355,in0Mul41467,in1Mul41467,in0Ave65934,in0Con78346,in0Sub44726,in1Sub44726,in0Min1463,in1Min1463,in0Con24816], outputs=Ave48466)
w = model.get_layer('Loc68235').get_weights() 
w[0] = np.array([[[0.3854, 0.7856, 0.203], [0.1621, 0.8326, 0.4775], [0.8497, 0.9699, 0.3105], [0.5607, 0.4618, 0.3866], [0.5991, 0.8289, 0.4672], [0.0331, 0.5421, 0.5808]], [[0.1601, 0.0413, 0.1037], [0.1309, 0.6685, 0.66], [0.7977, 0.1561, 0.8625], [0.3287, 0.4951, 0.4659], [0.3587, 0.518, 0.3051], [0.3954, 0.3698, 0.7541]], [[0.9592, 0.9081, 0.2617], [0.1593, 0.881, 0.6735], [0.3328, 0.5225, 0.9182], [0.8346, 0.5096, 0.3881], [0.5328, 0.9186, 0.3654], [0.9, 0.0981, 0.357]], [[0.1099, 0.1711, 0.8366], [0.3844, 0.976, 0.761], [0.8441, 0.6592, 0.7313], [0.4403, 0.5972, 0.8131], [0.8814, 0.7953, 0.3126], [0.277, 0.5004, 0.3846]], [[0.5417, 0.1524, 0.5208], [0.0966, 0.4182, 0.6045], [0.7497, 0.0786, 0.0524], [0.2347, 0.8357, 0.1059], [0.6656, 0.1613, 0.9085], [0.5461, 0.1921, 0.0797]], [[0.6329, 0.132, 0.2442], [0.4081, 0.9792, 0.606], [0.5257, 0.7304, 0.0957], [0.9218, 0.0153, 0.1429], [0.2883, 0.0976, 0.4921], [0.782, 0.2616, 0.0032]]])
w[1] = np.array([[[0, 0, 0], [0, 0, 0], [0, 0, 0]], [[0, 0, 0], [0, 0, 0], [0, 0, 0]]])
model.get_layer('Loc68235').set_weights(w) 
w = model.get_layer('Loc75136').get_weights() 
w[0] = np.array([[[0.7989, 0.398, 0.3687, 0.3164], [0.5455, 0.5243, 0.4419, 0.1724]]])
w[1] = np.array([[[0, 0, 0, 0]]])
model.get_layer('Loc75136').set_weights(w) 
w = model.get_layer('PRe67002').get_weights() 
w[0] = np.array([[0.3766, 0.6383]])
model.get_layer('PRe67002').set_weights(w) 
in0Sub77687 = tf.constant([[[[0.528, 0.4891, 0.9111], [0.0289, 0.9755, 0.2926], [0.8171, 0.9231, 0.6892]], [[0.4105, 0.1151, 0.2914], [0.2041, 0.6895, 0.7209], [0.4847, 0.0469, 0.5414]], [[0.4746, 0.2907, 0.793], [0.4554, 0.2705, 0.2828], [0.4406, 0.5049, 0.4914]]]])
in1Sub77687 = tf.constant([[[[0.5999, 0.1177, 0.2683], [0.8756, 0.3643, 0.9882], [0.6026, 0.1814, 0.9743]], [[0.1095, 0.0042, 0.7948], [0.3257, 0.9086, 0.8703], [0.7265, 0.6066, 0.889]], [[0.8377, 0.2845, 0.691], [0.1579, 0.5126, 0.0752], [0.3082, 0.3747, 0.3326]]]])
in0Con38055 = tf.constant([[[[0.0974], [0.7302], [0.973]], [[0.9093], [0.2621], [0.1008]]]])
in0Lay5279 = tf.constant([[1.8857, 1.1088]])
in0Con67355 = tf.constant([[[[0.4088, 0.869, 0.228]], [[0.332, 0.2415, 0.0924]]]])
in0Mul41467 = tf.constant([[[[[0.7583, 0.0021]]], [[[0.4314, 0.4648]]]]])
in1Mul41467 = tf.constant([[[[[0.8651, 0.9323]]], [[[0.9135, 0.3414]]]]])
in0Ave65934 = tf.constant([[[1.9491, 1.3771]]])
in0Con78346 = tf.constant([[[[0.3421, 0.8822, 0.2386], [0.2306, 0.2445, 0.9233]], [[0.2128, 0.3093, 0.4394], [0.9212, 0.912, 0.7818]]]])
in0Sub44726 = tf.constant([[[[[0.8248, 0.865], [0.8527, 0.512]], [[0.4677, 0.2687], [0.5385, 0.5246]]], [[[0.2023, 0.7479], [0.5712, 0.901]], [[0.5294, 0.3795], [0.085, 0.4822]]]]])
in1Sub44726 = tf.constant([[[[[0.7339, 0.6685], [0.0306, 0.5356]], [[0.96, 0.4728], [0.7871, 0.0451]]], [[[0.2726, 0.0278], [0.5439, 0.6537]], [[0.4707, 0.5416], [0.2109, 0.2132]]]]])
in0Min1463 = tf.constant([[[[0.1611, 0.3664]], [[0.9999, 0.6906]]]])
in1Min1463 = tf.constant([[[[0.8764, 0.0623]], [[0.2335, 0.2625]]]])
in0Con24816 = tf.constant([[[[0.2972, 0.1828], [0.1587, 0.6783]], [[0.0629, 0.5303], [0.3051, 0.4759]]]])
print (np.array2string(model.predict([in0Sub77687,in1Sub77687,in0Con38055,in0Lay5279,in0Con67355,in0Mul41467,in1Mul41467,in0Ave65934,in0Con78346,in0Sub44726,in1Sub44726,in0Min1463,in1Min1463,in0Con24816],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Ave48466.png')

LSub77687 = subtract_layer([[[[0.528, 0.4891, 0.9111], [0.0289, 0.9755, 0.2926], [0.8171, 0.9231, 0.6892]], [[0.4105, 0.1151, 0.2914], [0.2041, 0.6895, 0.7209], [0.4847, 0.0469, 0.5414]], [[0.4746, 0.2907, 0.793], [0.4554, 0.2705, 0.2828], [0.4406, 0.5049, 0.4914]]]], [[[[0.5999, 0.1177, 0.2683], [0.8756, 0.3643, 0.9882], [0.6026, 0.1814, 0.9743]], [[0.1095, 0.0042, 0.7948], [0.3257, 0.9086, 0.8703], [0.7265, 0.6066, 0.889]], [[0.8377, 0.2845, 0.691], [0.1579, 0.5126, 0.0752], [0.3082, 0.3747, 0.3326]]]], Sub77687), 
LLoc68235 = locally_connected2D_layer(Sub77687, 2, 1,[[[0.3854, 0.7856, 0.203], [0.1621, 0.8326, 0.4775], [0.8497, 0.9699, 0.3105], [0.5607, 0.4618, 0.3866], [0.5991, 0.8289, 0.4672], [0.0331, 0.5421, 0.5808]], [[0.1601, 0.0413, 0.1037], [0.1309, 0.6685, 0.66], [0.7977, 0.1561, 0.8625], [0.3287, 0.4951, 0.4659], [0.3587, 0.518, 0.3051], [0.3954, 0.3698, 0.7541]], [[0.9592, 0.9081, 0.2617], [0.1593, 0.881, 0.6735], [0.3328, 0.5225, 0.9182], [0.8346, 0.5096, 0.3881], [0.5328, 0.9186, 0.3654], [0.9, 0.0981, 0.357]], [[0.1099, 0.1711, 0.8366], [0.3844, 0.976, 0.761], [0.8441, 0.6592, 0.7313], [0.4403, 0.5972, 0.8131], [0.8814, 0.7953, 0.3126], [0.277, 0.5004, 0.3846]], [[0.5417, 0.1524, 0.5208], [0.0966, 0.4182, 0.6045], [0.7497, 0.0786, 0.0524], [0.2347, 0.8357, 0.1059], [0.6656, 0.1613, 0.9085], [0.5461, 0.1921, 0.0797]], [[0.6329, 0.132, 0.2442], [0.4081, 0.9792, 0.606], [0.5257, 0.7304, 0.0957], [0.9218, 0.0153, 0.1429], [0.2883, 0.0976, 0.4921], [0.782, 0.2616, 0.0032]]],[[[0, 0, 0], [0, 0, 0], [0, 0, 0]], [[0, 0, 0], [0, 0, 0], [0, 0, 0]]], 1, 1, Loc68235), 
LCon38055 = concatenate_layer([Loc68235,[[[[0.0974], [0.7302], [0.973]], [[0.9093], [0.2621], [0.1008]]]]], 3, Con38055), 
LLay5279 = layer_normalization_layer([[1.8857, 1.1088]], 1, 2.8730642165877196, Lay5279), 
LRes16787 = reshape_layer(Lay5279, [2, 1], Res16787), 
LRes58616 = reshape_layer(Res16787, [2, 1, 1], Res58616), 
LCon67355 = concatenate_layer([Res58616,[[[[0.4088, 0.869, 0.228]], [[0.332, 0.2415, 0.0924]]]]], 3, Con67355), 
LMul41467 = multiply_layer([[[[[[0.7583, 0.0021]]], [[[0.4314, 0.4648]]]]], [[[[[0.8651, 0.9323]]], [[[0.9135, 0.3414]]]]]], Mul41467), 
LRes35827 = reshape_layer(Mul41467, [2, 1, 2], Res35827), 
LLoc75136 = locally_connected2D_layer(Res35827, 1, 1,[[[0.7989, 0.398, 0.3687, 0.3164], [0.5455, 0.5243, 0.4419, 0.1724]]],[[[0, 0, 0, 0]]], 2, 1, Loc75136), 
LZer24074 = zero_padding2D_layer(Loc75136, 1, 0, 0, 0, Zer24074), 
LMax88975 = maximum_layer([Con67355,Zer24074], Max88975), 
LZer53578 = zero_padding2D_layer(Max88975, 0, 0, 2, 0, Zer53578), 
LMax24783 = maximum_layer([Con38055,Zer53578], Max24783), 
LAve65934 = average_pooling1D_layer([[[1.9491, 1.3771]]], 1, 1, false, Ave65934), 
LPRe67002 = prelu_layer(Ave65934, [[0.3766, 0.6383]], PRe67002), 
LRes85566 = reshape_layer(PRe67002, [1, 2, 1], Res85566), 
LZer44300 = zero_padding2D_layer(Res85566, 1, 0, 0, 0, Zer44300), 
LCon78346 = concatenate_layer([Zer44300,[[[[0.3421, 0.8822, 0.2386], [0.2306, 0.2445, 0.9233]], [[0.2128, 0.3093, 0.4394], [0.9212, 0.912, 0.7818]]]]], 3, Con78346), 
LSub44726 = subtract_layer([[[[[0.8248, 0.865], [0.8527, 0.512]], [[0.4677, 0.2687], [0.5385, 0.5246]]], [[[0.2023, 0.7479], [0.5712, 0.901]], [[0.5294, 0.3795], [0.085, 0.4822]]]]], [[[[[0.7339, 0.6685], [0.0306, 0.5356]], [[0.96, 0.4728], [0.7871, 0.0451]]], [[[0.2726, 0.0278], [0.5439, 0.6537]], [[0.4707, 0.5416], [0.2109, 0.2132]]]]], Sub44726), 
LRes28254 = reshape_layer(Sub44726, [2, 2, 4], Res28254), 
LMin1463 = minimum_layer([[[[[0.1611, 0.3664]], [[0.9999, 0.6906]]]], [[[[0.8764, 0.0623]], [[0.2335, 0.2625]]]]], Min1463), 
LSof55046 = softmax_layer(Min1463, 1, Sof55046), 
LZer7845 = zero_padding2D_layer(Sof55046, 0, 0, 1, 0, Zer7845), 
LCon24816 = concatenate_layer([Zer7845,[[[[0.2972, 0.1828], [0.1587, 0.6783]], [[0.0629, 0.5303], [0.3051, 0.4759]]]]], 3, Con24816), 
LMin82872 = minimum_layer([Res28254,Con24816], Min82872), 
LSub82508 = subtract_layer(Con78346,Min82872, Sub82508), 
LZer18388 = zero_padding2D_layer(Sub82508, 0, 0, 1, 0, Zer18388), 
LAve48466 = average_layer([Max24783,Zer18388], Ave48466), 
exec_layers([LSub77687,LLoc68235,LCon38055,LLay5279,LRes16787,LRes58616,LCon67355,LMul41467,LRes35827,LLoc75136,LZer24074,LMax88975,LZer53578,LMax24783,LAve65934,LPRe67002,LRes85566,LZer44300,LCon78346,LSub44726,LRes28254,LMin1463,LSof55046,LZer7845,LCon24816,LMin82872,LSub82508,LZer18388,LAve48466],["Sub77687","Loc68235","Con38055","Lay5279","Res16787","Res58616","Con67355","Mul41467","Res35827","Loc75136","Zer24074","Max88975","Zer53578","Max24783","Ave65934","PRe67002","Res85566","Zer44300","Con78346","Sub44726","Res28254","Min1463","Sof55046","Zer7845","Con24816","Min82872","Sub82508","Zer18388","Ave48466"],Ave48466,"Ave48466")

Actual (Unparsed): [[[[0.3986146, 0.4171142, 0.1190708, 0.0487000], [0.0000000, 0.1890946, 0.2925000, 0.4962000], [0.3578407, 0.4217500, 0.6810500, 0.7084000]], [[0.0000000, 0.0000000, 0.0000000, 0.4546500], [1.0097000, 0.1701738, 0.1410000, 0.2271000], [0.9217753, 0.7076500, 0.6403172, 0.3603488]]]]

Expected (Unparsed): [[[[0.39861459499999996,0.4171141950000001,0.11907077999999999,0.0487],[0,0.18909462500000002,0.2925,0.4962],[0.35784076872025977,0.42174999999999996,0.68105,0.7084]],[[0,0,0,0.45465],[1.0097,0.17017384000000002,0.14100000000000001,0.22709999999999997],[0.921775327201,0.70765,0.640317165124,0.360348808152]]]]

Actual:   [[[[0.3987, 0.4172, 0.1191, 0.0487], [0, 0.1891, 0.2925, 0.4962], [0.3579, 0.4218, 0.6811, 0.7084]], [[0, 0, 0, 0.4547], [1.0097, 0.1702, 0.141, 0.2271], [0.9218, 0.7077, 0.6404, 0.3604]]]]

Expected: [[[[0.3987, 0.4172, 0.1191, 0.0487], [0, 0.1891, 0.2925, 0.4962], [0.3579, 0.4218, 0.6811, 0.7084]], [[0, 0, 0, 0.4547], [1.0097, 0.1702, 0.1411, 0.2271], [0.9218, 0.7077, 0.6404, 0.3604]]]]