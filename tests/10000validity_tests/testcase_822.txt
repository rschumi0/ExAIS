import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Sub82362 = tf.keras.layers.Input(shape=([2, 3, 2, 2]))
in1Sub82362 = tf.keras.layers.Input(shape=([2, 3, 2, 2]))
in0Min99130 = tf.keras.layers.Input(shape=([2, 1, 2, 2]))
in1Min99130 = tf.keras.layers.Input(shape=([2, 1, 2, 2]))
in0Dot28511 = tf.keras.layers.Input(shape=([3, 2]))
in1Dot28511 = tf.keras.layers.Input(shape=([3, 2]))
in0Con76066 = tf.keras.layers.Input(shape=([23]))
in0Con15922 = tf.keras.layers.Input(shape=([24, 29]))
in0LST64814 = tf.keras.layers.Input(shape=([2, 1]))
in0Con25981 = tf.keras.layers.Input(shape=([1, 2]))
in0Sep97431 = tf.keras.layers.Input(shape=([2, 1]))
in0Con15256 = tf.keras.layers.Input(shape=([2, 10, 1]))
in0Den90778 = tf.keras.layers.Input(shape=([2, 2, 5]))

Sub82362 = keras.layers.Subtract(name = 'Sub82362', )([in0Sub82362,in1Sub82362])
Min99130 = keras.layers.Minimum(name = 'Min99130', )([in0Min99130,in1Min99130])
Zer37048 = keras.layers.ZeroPadding3D(padding=((0, 0), (2, 0), (0, 0)), name = 'Zer37048', )(Min99130)
Add70492 = keras.layers.Add(name = 'Add70492', )([Sub82362,Zer37048])
Res92516 = keras.layers.Reshape((2, 3, 4), name = 'Res92516', )(Add70492)
Res9871 = keras.layers.Reshape((2, 12), name = 'Res9871', )(Res92516)
Fla32389 = keras.layers.Flatten(name = 'Fla32389', )(Res9871)
Dot28511 = keras.layers.Dot(axes=(2, 2), name = 'Dot28511', )([in0Dot28511,in1Dot28511])
LST42073 = keras.layers.LSTM(1,recurrent_activation='sigmoid', name = 'LST42073', )(Dot28511)
Con76066 = keras.layers.Concatenate(axis=1, name = 'Con76066', )([LST42073,in0Con76066])
Ave82461 = keras.layers.Average(name = 'Ave82461', )([Fla32389,Con76066])
Res5178 = keras.layers.Reshape((24, 1), name = 'Res5178', )(Ave82461)
Con15922 = keras.layers.Concatenate(axis=2, name = 'Con15922', )([Res5178,in0Con15922])
LST64814 = keras.layers.LSTM(1,recurrent_activation='sigmoid', name = 'LST64814', )(in0LST64814)
Res99316 = keras.layers.Reshape((1, 1), name = 'Res99316', )(LST64814)
Con25981 = keras.layers.Concatenate(axis=2, name = 'Con25981', )([Res99316,in0Con25981])
Sep97431 = keras.layers.SeparableConv1D(3, (1),strides=(2), padding='same', name = 'Sep97431', )(in0Sep97431)
Ave86408 = keras.layers.Average(name = 'Ave86408', )([Con25981,Sep97431])
Res45014 = keras.layers.Reshape((1, 3, 1), name = 'Res45014', )(Ave86408)
Res16451 = keras.layers.Reshape((1, 3, 1, 1), name = 'Res16451', )(Res45014)
Up_35249 = keras.layers.UpSampling3D(size=(1, 2, 2), name = 'Up_35249', )(Res16451)
Res21629 = keras.layers.Reshape((1, 6, 2), name = 'Res21629', )(Up_35249)
Zer95717 = keras.layers.ZeroPadding2D(padding=((1, 0), (4, 0)), name = 'Zer95717', )(Res21629)
Con15256 = keras.layers.Concatenate(axis=3, name = 'Con15256', )([Zer95717,in0Con15256])
Den90778 = keras.layers.Dense(3,name = 'Den90778', )(in0Den90778)
Zer17000 = keras.layers.ZeroPadding2D(padding=((0, 0), (8, 0)), name = 'Zer17000', )(Den90778)
Ave83397 = keras.layers.Average(name = 'Ave83397', )([Con15256,Zer17000])
Res43902 = keras.layers.Reshape((2, 30), name = 'Res43902', )(Ave83397)
Dot2461 = keras.layers.Dot(axes=(2, 2), name = 'Dot2461', )([Con15922,Res43902])
model = tf.keras.models.Model(inputs=[in0Sub82362,in1Sub82362,in0Min99130,in1Min99130,in0Dot28511,in1Dot28511,in0Con76066,in0Con15922,in0LST64814,in0Con25981,in0Sep97431,in0Con15256,in0Den90778], outputs=Dot2461)
w = model.get_layer('LST42073').get_weights() 
w[0] = np.array([[9, 7, 10, 7], [10, 9, 8, 4], [7, 5, 7, 9]])
w[1] = np.array([[4, 4, 1, 9]])
w[2] = np.array([5, 3, 1, 1])
model.get_layer('LST42073').set_weights(w) 
w = model.get_layer('LST64814').get_weights() 
w[0] = np.array([[4, 5, 8, 4]])
w[1] = np.array([[8, 10, 4, 10]])
w[2] = np.array([6, 5, 10, 3])
model.get_layer('LST64814').set_weights(w) 
w = model.get_layer('Sep97431').get_weights() 
w[0] = np.array([[[0.1861]]])
w[1] = np.array([[[0.4028, 0.5519, 0.1774]]])
w[2] = np.array([0, 0, 0])
model.get_layer('Sep97431').set_weights(w) 
w = model.get_layer('Den90778').get_weights() 
w[0] = np.array([[0.1562, 0.9244, 0.3166], [0.2747, 0.9954, 0.1769], [0.2093, 0.4814, 0.1752], [0.0241, 0.3968, 0.5629], [0.6697, 0.3586, 0.8736]])
w[1] = np.array([0.0396, 0.0178, 0.7085])
model.get_layer('Den90778').set_weights(w) 
in0Sub82362 = tf.constant([[[[[0.9673, 0.1107], [0.1647, 0.9905]], [[0.1033, 0.3809], [0.2318, 0.5657]], [[0.9045, 0.1896], [0.2079, 0.4047]]], [[[0.5764, 0.4643], [0.5572, 0.3058]], [[0.6361, 0.668], [0.6192, 0.059]], [[0.2237, 0.9963], [0.9159, 0.7124]]]]])
in1Sub82362 = tf.constant([[[[[0.7056, 0.2919], [0.263, 0.6058]], [[0.9485, 0.5446], [0.8686, 0.8299]], [[0.0099, 0.999], [0.6138, 0.1956]]], [[[0.8941, 0.833], [0.7467, 0.4988]], [[0.4477, 0.0888], [0.2949, 0.8538]], [[0.4369, 0.0387], [0.6029, 0.1338]]]]])
in0Min99130 = tf.constant([[[[[0.3362, 0.452], [0.5353, 0.1056]]], [[[0.3869, 0.2907], [0.0506, 0.6733]]]]])
in1Min99130 = tf.constant([[[[[0.0371, 0.2072], [0.0485, 0.759]]], [[[0.9623, 0.8443], [0.6196, 0.7359]]]]])
in0Dot28511 = tf.constant([[[0.4841, 0.3427], [0.0858, 0.0065], [0.3543, 0.6522]]])
in1Dot28511 = tf.constant([[[0.5089, 0.2693], [0.5516, 0.2105], [0.6692, 0.2549]]])
in0Con76066 = tf.constant([[0.4437, 0.0325, 0.63, 0.0576, 0.8762, 0.9966, 0.4941, 0.9041, 0.1655, 0.8959, 0.467, 0.7507, 0.3974, 0.2523, 0.7753, 0.7398, 0.1355, 0.4662, 0.8731, 0.5248, 0.7838, 0.9197, 0.479]])
in0Con15922 = tf.constant([[[0.5636, 0.1524, 0.4042, 0.9812, 0.7666, 0.1358, 0.5536, 0.2803, 0.849, 0.3752, 0.1473, 0.3697, 0.3701, 0.0631, 0.4362, 0.234, 0.3013, 0.8472, 0.5096, 0.7862, 0.3805, 0.5243, 0.5719, 0.4934, 0.2993, 0.6789, 0.4294, 0.3816, 0.806], [0.8428, 0.8857, 0.8953, 0.2669, 0.3388, 0.2825, 0.8808, 0.0913, 0.2211, 0.8629, 0.9127, 0.6978, 0.6292, 0.9849, 0.2894, 0.3751, 0.4293, 0.4663, 0.2858, 0.4727, 0.2345, 0.5034, 0.6717, 0.849, 0.7672, 0.6743, 0.0773, 0.3962, 0.0539], [0.5109, 0.5209, 0.7664, 0.1301, 0.0017, 0.2996, 0.1286, 0.771, 0.1772, 0.4901, 0.903, 0.2609, 0.6187, 0.5047, 0.9375, 0.3713, 0.3315, 0.5044, 0.5193, 0.5208, 0.9294, 0.9853, 0.9469, 0.562, 0.4852, 0.5223, 0.1271, 0.7598, 0.7238], [0.4778, 0.8078, 0.3018, 0.4541, 0.4681, 0.6082, 0.121, 0.2674, 0.5147, 0.9666, 0.8981, 0.568, 0.1027, 0.4895, 0.8577, 0.9397, 0.8196, 0.958, 0.379, 0.7053, 0.8531, 0.422, 0.4979, 0.2873, 0.3891, 0.3967, 0.0955, 0.6418, 0.8711], [0.1667, 0.9378, 0.603, 0.1569, 0.5947, 0.763, 0.4511, 0.839, 0.6378, 0.2942, 0.3946, 0.3845, 0.9797, 0.3973, 0.9458, 0.293, 0.8023, 0.6017, 0.3582, 0.1719, 0.7403, 0.8537, 0.3972, 0.4837, 0.4898, 0.6825, 0.716, 0.735, 0.3741], [0.9246, 0.0218, 0.0427, 0.4101, 0.7741, 0.0361, 0.3417, 0.0634, 0.2047, 0.973, 0.9756, 0.9319, 0.7453, 0.8935, 0.0539, 0.0567, 0.1785, 0.8262, 0.7502, 0.422, 0.9828, 0.989, 0.667, 0.4781, 0.2388, 0.7961, 0.4998, 0.1956, 0.2809], [0.5864, 0.4942, 0.2445, 0.593, 0.1734, 0.6112, 0.3802, 0.3155, 0.3834, 0.8882, 0.013, 0.2632, 0.7202, 0.2169, 0.2415, 0.5351, 0.1789, 0.646, 0.336, 0.6388, 0.0119, 0.3605, 0.7741, 0.5511, 0.9489, 0.6903, 0.4499, 0.2867, 0.964], [0.8558, 0.6065, 0.3583, 0.1961, 0.6732, 0.3719, 0.9778, 0.032, 0.1083, 0.5217, 0.9683, 0.6851, 0.3958, 0.2321, 0.1363, 0.8227, 0.4192, 0.1444, 0.2887, 0.9265, 0.1883, 0.0156, 0.1681, 0.1055, 0.5405, 0.5952, 0.3283, 0.0249, 0.6461], [0.1415, 0.3762, 0.4613, 0.5026, 0.1622, 0.0617, 0.7511, 0.3651, 0.553, 0.4201, 0.0579, 0.9813, 0.2919, 0.5349, 0.955, 0.5713, 0.2462, 0.5257, 0.29, 0.7267, 0.4494, 0.0439, 0.68, 0.79, 0.412, 0.9033, 0.272, 0.8202, 0.6485], [0.4688, 0.5936, 0.9476, 0.6173, 0.0799, 0.4217, 0.7828, 0.7034, 0.0942, 0.5965, 0.5517, 0.7017, 0.1041, 0.624, 0.8011, 0.5013, 0.4995, 0.7248, 0.8437, 0.3148, 0.8294, 0.7114, 0.5919, 0.8487, 0.3498, 0.7069, 0.0685, 0.2704, 0.7337], [0.2515, 0.6758, 0.6897, 0.1708, 0.7901, 0.2553, 0.1434, 0.9819, 0.8778, 0.0766, 0.7502, 0.4382, 0.6987, 0.1551, 0.7842, 0.6877, 0.6535, 0.72, 0.9049, 0.5644, 0.8376, 0.2278, 0.678, 0.584, 0.2065, 0.0466, 0.822, 0.6153, 0.105], [0.8261, 0.3239, 0.5557, 0.6223, 0.6129, 0.6829, 0.8374, 0.9269, 0.9671, 0.0586, 0.7445, 0.3359, 0.6971, 0.03, 0.3289, 0.3764, 0.3395, 0.0029, 0.1819, 0.5078, 0.1801, 0.0423, 0.4364, 0.4924, 0.439, 0.0542, 0.1572, 0.6248, 0.2215], [0.7895, 0.7082, 0.1594, 0.9769, 0.1031, 0.7773, 0.3132, 0.4996, 0.2662, 0.4877, 0.1627, 0.9568, 0.8973, 0.4262, 0.6017, 0.0357, 0.2565, 0.4786, 0.2823, 0.0632, 0.2315, 0.0809, 0.1237, 0.8712, 0.3291, 0.8625, 0.5376, 0.2571, 0.3867], [0.6902, 0.9966, 0.1175, 0.5151, 0.8033, 0.9481, 0.7236, 0.9958, 0.0737, 0.3661, 0.1492, 0.4679, 0.4183, 0.4216, 0.5639, 0.761, 0.0489, 0.8548, 0.9579, 0.1574, 0.5496, 0.6343, 0.8798, 0.6994, 0.7419, 0.4016, 0.9384, 0.3976, 0.9163], [0.0151, 0.141, 0.8408, 0.2897, 0.2325, 0.626, 0.7599, 0.4815, 0.1993, 0.9839, 0.5564, 0.3917, 0.9492, 0.1534, 0.6718, 0.1139, 0.5619, 0.8327, 0.9408, 0.4152, 0.9746, 0.4483, 0.7529, 0.8781, 0.6971, 0.9905, 0.926, 0.0149, 0.8429], [0.4408, 0.6874, 0.5339, 0.9544, 0.0926, 0.0513, 0.4711, 0.0742, 0.7992, 0.1855, 0.0779, 0.3972, 0.0677, 0.0659, 0.2046, 0.6192, 0.9653, 0.8336, 0.4087, 0.7951, 0.0012, 0.7892, 0.1757, 0.1149, 0.5068, 0.8843, 0.4482, 0.5136, 0.5456], [0.9058, 0.1228, 0.4379, 0.0587, 0.2864, 0.3005, 0.4161, 0.7712, 0.619, 0.8498, 0.2943, 0.3707, 0.5073, 0.2811, 0.1388, 0.6037, 0.3407, 0.0175, 0.8343, 0.2323, 0.9463, 0.8976, 0.3546, 0.2412, 0.8423, 0.1468, 0.5298, 0.2936, 0.9919], [0.1148, 0.8865, 0.1963, 0.5426, 0.7914, 0.8033, 0.0524, 0.0217, 0.486, 0.7863, 0.8579, 0.8581, 0.0847, 0.1466, 0.5262, 0.8977, 0.9812, 0.7402, 0.7161, 0.7929, 0.1214, 0.7165, 0.3794, 0.7562, 0.5971, 0.4151, 0.6465, 0.1917, 0.8776], [0.6479, 0.5249, 0.1437, 0.078, 0.6095, 0.8964, 0.3339, 0.6285, 0.57, 0.4697, 0.8003, 0.3313, 0.3205, 0.6694, 0.7934, 0.0696, 0.0664, 0.9237, 0.6398, 0.3687, 0.093, 0.4513, 0.7396, 0.5988, 0.065, 0.4418, 0.7285, 0.8567, 0.2613], [0.473, 0.1068, 0.4675, 0.3985, 0.1183, 0.3134, 0.6062, 0.9488, 0.9543, 0.3061, 0.755, 0.0207, 0.6041, 0.1998, 0.5847, 0.9373, 0.023, 0.4068, 0.3762, 0.6204, 0.9644, 0.03, 0.2834, 0.771, 0.4549, 0.9622, 0.5785, 0.6183, 0.1481], [0.2635, 0.52, 0.7068, 0.6277, 0.9067, 0.6336, 0.7862, 0.0885, 0.9089, 0.0097, 0.3746, 0.3343, 0.1985, 0.6835, 0.9778, 0.7028, 0.3094, 0.2877, 0.2624, 0.3501, 0.1352, 0.9465, 0.7075, 0.3127, 0.5323, 0.8125, 0.3864, 0.8982, 0.5167], [0.74, 0.5668, 0.2536, 0.1622, 0.3354, 0.7629, 0.4077, 0.0825, 0.028, 0.7162, 0.6924, 0.5506, 0.865, 0.5428, 0.2089, 0.8981, 0.4493, 0.9409, 0.9244, 0.8208, 0.8113, 0.9227, 0.0609, 0.6167, 0.0346, 0.0082, 0.6672, 0.1807, 0.1396], [0.1961, 0.6551, 0.7922, 0.0689, 0.3162, 0.1226, 0.3421, 0.6179, 0.5581, 0.4897, 0.6689, 0.8053, 0.0698, 0.8253, 0.0997, 0.4875, 0.5259, 0.7601, 0.124, 0.9894, 0.4745, 0.5476, 0.3688, 0.142, 0.0903, 0.1586, 0.6884, 0.3998, 0.6855], [0.7809, 0.233, 0.6433, 0.9588, 0.7287, 0.8215, 0.8614, 0.4995, 0.5622, 0.8029, 0.1598, 0.5063, 0.1694, 0.8669, 0.4398, 0.0289, 0.6656, 0.9366, 0.656, 0.2948, 0.2316, 0.3624, 0.7732, 0.8459, 0.4284, 0.1223, 0.4181, 0.276, 0.1034]]])
in0LST64814 = tf.constant([[[2], [9]]])
in0Con25981 = tf.constant([[[0.2259, 0.7116]]])
in0Sep97431 = tf.constant([[[0.3058], [0.8632]]])
in0Con15256 = tf.constant([[[[0.0789], [0.6368], [0.9286], [0.7141], [0.1836], [0.9971], [0.1739], [0.2949], [0.4112], [0.7344]], [[0.8007], [0.216], [0.2344], [0.7541], [0.8752], [0.3981], [0.7337], [0.0834], [0.546], [0.5927]]]])
in0Den90778 = tf.constant([[[[0.227, 0.4586, 0.9709, 0.2581, 0.3445], [0.5229, 0.5702, 0.9544, 0.0567, 0.6464]], [[0.3354, 0.3517, 0.0665, 0.9757, 0.9835], [0.8952, 0.0371, 0.8241, 0.204, 0.7838]]]])
print (np.array2string(model.predict([in0Sub82362,in1Sub82362,in0Min99130,in1Min99130,in0Dot28511,in1Dot28511,in0Con76066,in0Con15922,in0LST64814,in0Con25981,in0Sep97431,in0Con15256,in0Den90778],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Dot2461.png')

LSub82362 = subtract_layer([[[[[0.9673, 0.1107], [0.1647, 0.9905]], [[0.1033, 0.3809], [0.2318, 0.5657]], [[0.9045, 0.1896], [0.2079, 0.4047]]], [[[0.5764, 0.4643], [0.5572, 0.3058]], [[0.6361, 0.668], [0.6192, 0.059]], [[0.2237, 0.9963], [0.9159, 0.7124]]]]], [[[[[0.7056, 0.2919], [0.263, 0.6058]], [[0.9485, 0.5446], [0.8686, 0.8299]], [[0.0099, 0.999], [0.6138, 0.1956]]], [[[0.8941, 0.833], [0.7467, 0.4988]], [[0.4477, 0.0888], [0.2949, 0.8538]], [[0.4369, 0.0387], [0.6029, 0.1338]]]]], Sub82362), 
LMin99130 = minimum_layer([[[[[[0.3362, 0.452], [0.5353, 0.1056]]], [[[0.3869, 0.2907], [0.0506, 0.6733]]]]], [[[[[0.0371, 0.2072], [0.0485, 0.759]]], [[[0.9623, 0.8443], [0.6196, 0.7359]]]]]], Min99130), 
LZer37048 = zero_padding3D_layer(Min99130, 0, 0, 2, 0, 0, 0, Zer37048), 
LAdd70492 = add_layer([Sub82362,Zer37048], Add70492), 
LRes92516 = reshape_layer(Add70492, [2, 3, 4], Res92516), 
LRes9871 = reshape_layer(Res92516, [2, 12], Res9871), 
LFla32389 = flatten_layer(Res9871, Fla32389), 
LDot28511 = dot_layer([[[0.4841, 0.3427], [0.0858, 0.0065], [0.3543, 0.6522]]], [[[0.5089, 0.2693], [0.5516, 0.2105], [0.6692, 0.2549]]], 2, 2, Dot28511), 
LLST42073 = lstm_layer(Dot28511,[[9, 7, 10, 7], [10, 9, 8, 4], [7, 5, 7, 9]],[[4, 4, 1, 9]],[5, 3, 1, 1], LST42073), 
LCon76066 = concatenate_layer([LST42073,[[0.4437, 0.0325, 0.63, 0.0576, 0.8762, 0.9966, 0.4941, 0.9041, 0.1655, 0.8959, 0.467, 0.7507, 0.3974, 0.2523, 0.7753, 0.7398, 0.1355, 0.4662, 0.8731, 0.5248, 0.7838, 0.9197, 0.479]]], 1, Con76066), 
LAve82461 = average_layer([Fla32389,Con76066], Ave82461), 
LRes5178 = reshape_layer(Ave82461, [24, 1], Res5178), 
LCon15922 = concatenate_layer([Res5178,[[[0.5636, 0.1524, 0.4042, 0.9812, 0.7666, 0.1358, 0.5536, 0.2803, 0.849, 0.3752, 0.1473, 0.3697, 0.3701, 0.0631, 0.4362, 0.234, 0.3013, 0.8472, 0.5096, 0.7862, 0.3805, 0.5243, 0.5719, 0.4934, 0.2993, 0.6789, 0.4294, 0.3816, 0.806], [0.8428, 0.8857, 0.8953, 0.2669, 0.3388, 0.2825, 0.8808, 0.0913, 0.2211, 0.8629, 0.9127, 0.6978, 0.6292, 0.9849, 0.2894, 0.3751, 0.4293, 0.4663, 0.2858, 0.4727, 0.2345, 0.5034, 0.6717, 0.849, 0.7672, 0.6743, 0.0773, 0.3962, 0.0539], [0.5109, 0.5209, 0.7664, 0.1301, 0.0017, 0.2996, 0.1286, 0.771, 0.1772, 0.4901, 0.903, 0.2609, 0.6187, 0.5047, 0.9375, 0.3713, 0.3315, 0.5044, 0.5193, 0.5208, 0.9294, 0.9853, 0.9469, 0.562, 0.4852, 0.5223, 0.1271, 0.7598, 0.7238], [0.4778, 0.8078, 0.3018, 0.4541, 0.4681, 0.6082, 0.121, 0.2674, 0.5147, 0.9666, 0.8981, 0.568, 0.1027, 0.4895, 0.8577, 0.9397, 0.8196, 0.958, 0.379, 0.7053, 0.8531, 0.422, 0.4979, 0.2873, 0.3891, 0.3967, 0.0955, 0.6418, 0.8711], [0.1667, 0.9378, 0.603, 0.1569, 0.5947, 0.763, 0.4511, 0.839, 0.6378, 0.2942, 0.3946, 0.3845, 0.9797, 0.3973, 0.9458, 0.293, 0.8023, 0.6017, 0.3582, 0.1719, 0.7403, 0.8537, 0.3972, 0.4837, 0.4898, 0.6825, 0.716, 0.735, 0.3741], [0.9246, 0.0218, 0.0427, 0.4101, 0.7741, 0.0361, 0.3417, 0.0634, 0.2047, 0.973, 0.9756, 0.9319, 0.7453, 0.8935, 0.0539, 0.0567, 0.1785, 0.8262, 0.7502, 0.422, 0.9828, 0.989, 0.667, 0.4781, 0.2388, 0.7961, 0.4998, 0.1956, 0.2809], [0.5864, 0.4942, 0.2445, 0.593, 0.1734, 0.6112, 0.3802, 0.3155, 0.3834, 0.8882, 0.013, 0.2632, 0.7202, 0.2169, 0.2415, 0.5351, 0.1789, 0.646, 0.336, 0.6388, 0.0119, 0.3605, 0.7741, 0.5511, 0.9489, 0.6903, 0.4499, 0.2867, 0.964], [0.8558, 0.6065, 0.3583, 0.1961, 0.6732, 0.3719, 0.9778, 0.032, 0.1083, 0.5217, 0.9683, 0.6851, 0.3958, 0.2321, 0.1363, 0.8227, 0.4192, 0.1444, 0.2887, 0.9265, 0.1883, 0.0156, 0.1681, 0.1055, 0.5405, 0.5952, 0.3283, 0.0249, 0.6461], [0.1415, 0.3762, 0.4613, 0.5026, 0.1622, 0.0617, 0.7511, 0.3651, 0.553, 0.4201, 0.0579, 0.9813, 0.2919, 0.5349, 0.955, 0.5713, 0.2462, 0.5257, 0.29, 0.7267, 0.4494, 0.0439, 0.68, 0.79, 0.412, 0.9033, 0.272, 0.8202, 0.6485], [0.4688, 0.5936, 0.9476, 0.6173, 0.0799, 0.4217, 0.7828, 0.7034, 0.0942, 0.5965, 0.5517, 0.7017, 0.1041, 0.624, 0.8011, 0.5013, 0.4995, 0.7248, 0.8437, 0.3148, 0.8294, 0.7114, 0.5919, 0.8487, 0.3498, 0.7069, 0.0685, 0.2704, 0.7337], [0.2515, 0.6758, 0.6897, 0.1708, 0.7901, 0.2553, 0.1434, 0.9819, 0.8778, 0.0766, 0.7502, 0.4382, 0.6987, 0.1551, 0.7842, 0.6877, 0.6535, 0.72, 0.9049, 0.5644, 0.8376, 0.2278, 0.678, 0.584, 0.2065, 0.0466, 0.822, 0.6153, 0.105], [0.8261, 0.3239, 0.5557, 0.6223, 0.6129, 0.6829, 0.8374, 0.9269, 0.9671, 0.0586, 0.7445, 0.3359, 0.6971, 0.03, 0.3289, 0.3764, 0.3395, 0.0029, 0.1819, 0.5078, 0.1801, 0.0423, 0.4364, 0.4924, 0.439, 0.0542, 0.1572, 0.6248, 0.2215], [0.7895, 0.7082, 0.1594, 0.9769, 0.1031, 0.7773, 0.3132, 0.4996, 0.2662, 0.4877, 0.1627, 0.9568, 0.8973, 0.4262, 0.6017, 0.0357, 0.2565, 0.4786, 0.2823, 0.0632, 0.2315, 0.0809, 0.1237, 0.8712, 0.3291, 0.8625, 0.5376, 0.2571, 0.3867], [0.6902, 0.9966, 0.1175, 0.5151, 0.8033, 0.9481, 0.7236, 0.9958, 0.0737, 0.3661, 0.1492, 0.4679, 0.4183, 0.4216, 0.5639, 0.761, 0.0489, 0.8548, 0.9579, 0.1574, 0.5496, 0.6343, 0.8798, 0.6994, 0.7419, 0.4016, 0.9384, 0.3976, 0.9163], [0.0151, 0.141, 0.8408, 0.2897, 0.2325, 0.626, 0.7599, 0.4815, 0.1993, 0.9839, 0.5564, 0.3917, 0.9492, 0.1534, 0.6718, 0.1139, 0.5619, 0.8327, 0.9408, 0.4152, 0.9746, 0.4483, 0.7529, 0.8781, 0.6971, 0.9905, 0.926, 0.0149, 0.8429], [0.4408, 0.6874, 0.5339, 0.9544, 0.0926, 0.0513, 0.4711, 0.0742, 0.7992, 0.1855, 0.0779, 0.3972, 0.0677, 0.0659, 0.2046, 0.6192, 0.9653, 0.8336, 0.4087, 0.7951, 0.0012, 0.7892, 0.1757, 0.1149, 0.5068, 0.8843, 0.4482, 0.5136, 0.5456], [0.9058, 0.1228, 0.4379, 0.0587, 0.2864, 0.3005, 0.4161, 0.7712, 0.619, 0.8498, 0.2943, 0.3707, 0.5073, 0.2811, 0.1388, 0.6037, 0.3407, 0.0175, 0.8343, 0.2323, 0.9463, 0.8976, 0.3546, 0.2412, 0.8423, 0.1468, 0.5298, 0.2936, 0.9919], [0.1148, 0.8865, 0.1963, 0.5426, 0.7914, 0.8033, 0.0524, 0.0217, 0.486, 0.7863, 0.8579, 0.8581, 0.0847, 0.1466, 0.5262, 0.8977, 0.9812, 0.7402, 0.7161, 0.7929, 0.1214, 0.7165, 0.3794, 0.7562, 0.5971, 0.4151, 0.6465, 0.1917, 0.8776], [0.6479, 0.5249, 0.1437, 0.078, 0.6095, 0.8964, 0.3339, 0.6285, 0.57, 0.4697, 0.8003, 0.3313, 0.3205, 0.6694, 0.7934, 0.0696, 0.0664, 0.9237, 0.6398, 0.3687, 0.093, 0.4513, 0.7396, 0.5988, 0.065, 0.4418, 0.7285, 0.8567, 0.2613], [0.473, 0.1068, 0.4675, 0.3985, 0.1183, 0.3134, 0.6062, 0.9488, 0.9543, 0.3061, 0.755, 0.0207, 0.6041, 0.1998, 0.5847, 0.9373, 0.023, 0.4068, 0.3762, 0.6204, 0.9644, 0.03, 0.2834, 0.771, 0.4549, 0.9622, 0.5785, 0.6183, 0.1481], [0.2635, 0.52, 0.7068, 0.6277, 0.9067, 0.6336, 0.7862, 0.0885, 0.9089, 0.0097, 0.3746, 0.3343, 0.1985, 0.6835, 0.9778, 0.7028, 0.3094, 0.2877, 0.2624, 0.3501, 0.1352, 0.9465, 0.7075, 0.3127, 0.5323, 0.8125, 0.3864, 0.8982, 0.5167], [0.74, 0.5668, 0.2536, 0.1622, 0.3354, 0.7629, 0.4077, 0.0825, 0.028, 0.7162, 0.6924, 0.5506, 0.865, 0.5428, 0.2089, 0.8981, 0.4493, 0.9409, 0.9244, 0.8208, 0.8113, 0.9227, 0.0609, 0.6167, 0.0346, 0.0082, 0.6672, 0.1807, 0.1396], [0.1961, 0.6551, 0.7922, 0.0689, 0.3162, 0.1226, 0.3421, 0.6179, 0.5581, 0.4897, 0.6689, 0.8053, 0.0698, 0.8253, 0.0997, 0.4875, 0.5259, 0.7601, 0.124, 0.9894, 0.4745, 0.5476, 0.3688, 0.142, 0.0903, 0.1586, 0.6884, 0.3998, 0.6855], [0.7809, 0.233, 0.6433, 0.9588, 0.7287, 0.8215, 0.8614, 0.4995, 0.5622, 0.8029, 0.1598, 0.5063, 0.1694, 0.8669, 0.4398, 0.0289, 0.6656, 0.9366, 0.656, 0.2948, 0.2316, 0.3624, 0.7732, 0.8459, 0.4284, 0.1223, 0.4181, 0.276, 0.1034]]]], 2, Con15922), 
LLST64814 = lstm_layer([[[2], [9]]],[[4, 5, 8, 4]],[[8, 10, 4, 10]],[6, 5, 10, 3], LST64814), 
LRes99316 = reshape_layer(LST64814, [1, 1], Res99316), 
LCon25981 = concatenate_layer([Res99316,[[[0.2259, 0.7116]]]], 2, Con25981), 
LSep97431 = separable_conv1D_layer([[[0.3058], [0.8632]]], 1,[[[[0.1861]]],[[[0.4028, 0.5519, 0.1774]]]],[0, 0, 0], 2, true, Sep97431), 
LAve86408 = average_layer([Con25981,Sep97431], Ave86408), 
LRes45014 = reshape_layer(Ave86408, [1, 3, 1], Res45014), 
LRes16451 = reshape_layer(Res45014, [1, 3, 1, 1], Res16451), 
LUp_35249 = up_sampling3D_layer(Res16451, 1, 2, 2, Up_35249), 
LRes21629 = reshape_layer(Up_35249, [1, 6, 2], Res21629), 
LZer95717 = zero_padding2D_layer(Res21629, 1, 0, 4, 0, Zer95717), 
LCon15256 = concatenate_layer([Zer95717,[[[[0.0789], [0.6368], [0.9286], [0.7141], [0.1836], [0.9971], [0.1739], [0.2949], [0.4112], [0.7344]], [[0.8007], [0.216], [0.2344], [0.7541], [0.8752], [0.3981], [0.7337], [0.0834], [0.546], [0.5927]]]]], 3, Con15256), 
LDen90778 = dense_layer([[[[0.227, 0.4586, 0.9709, 0.2581, 0.3445], [0.5229, 0.5702, 0.9544, 0.0567, 0.6464]], [[0.3354, 0.3517, 0.0665, 0.9757, 0.9835], [0.8952, 0.0371, 0.8241, 0.204, 0.7838]]]], [[0.1562, 0.9244, 0.3166], [0.2747, 0.9954, 0.1769], [0.2093, 0.4814, 0.1752], [0.0241, 0.3968, 0.5629], [0.6697, 0.3586, 0.8736]],[0.0396, 0.0178, 0.7085], Den90778), 
LZer17000 = zero_padding2D_layer(Den90778, 0, 0, 8, 0, Zer17000), 
LAve83397 = average_layer([Con15256,Zer17000], Ave83397), 
LRes43902 = reshape_layer(Ave83397, [2, 30], Res43902), 
LDot2461 = dot_layer(Con15922,Res43902, 2, 2, Dot2461), 
exec_layers([LSub82362,LMin99130,LZer37048,LAdd70492,LRes92516,LRes9871,LFla32389,LDot28511,LLST42073,LCon76066,LAve82461,LRes5178,LCon15922,LLST64814,LRes99316,LCon25981,LSep97431,LAve86408,LRes45014,LRes16451,LUp_35249,LRes21629,LZer95717,LCon15256,LDen90778,LZer17000,LAve83397,LRes43902,LDot2461],["Sub82362","Min99130","Zer37048","Add70492","Res92516","Res9871","Fla32389","Dot28511","LST42073","Con76066","Ave82461","Res5178","Con15922","LST64814","Res99316","Con25981","Sep97431","Ave86408","Res45014","Res16451","Up_35249","Res21629","Zer95717","Con15256","Den90778","Zer17000","Ave83397","Res43902","Dot2461"],Dot2461,"Dot2461")

Actual (Unparsed): [[[3.2796428, 4.3412858], [2.8481445, 4.7461996], [3.7358052, 5.1751927], [3.6415250, 5.0792396], [3.8479425, 5.2796967], [2.7504096, 4.2566067], [3.6395524, 5.1512043], [2.8736009, 4.2111955], [3.6391189, 5.5480656], [3.3535680, 4.8632049], [2.9175570, 3.8845876], [2.5984546, 3.1112363], [2.8146131, 4.5150257], [4.0470190, 5.5110081], [4.1181261, 5.6900965], [3.2591117, 4.5657751], [3.3532245, 4.1499786], [3.8274520, 5.3748913], [3.1008386, 4.3377705], [3.3447830, 4.8555496], [3.6857278, 5.2550449], [1.6360279, 3.2212308], [2.9059928, 4.0445607], [2.3274800, 3.1237273]]]

Expected (Unparsed): [[[3.2796428914095,4.341285821154719],[2.8481444579194997,4.746199587280846],[3.735805183402,5.175192612200924],[3.641525082646,5.079239672546902],[3.8479425317055003,5.279696609039203],[2.7504096123924997,4.25660671336597],[3.6395524347405,5.1512043014355555],[2.8736009466654995,4.211195530809341],[3.639118845479,5.548065513252773],[3.3535680315659997,4.863204958124192],[2.9175570649180003,3.8845875749914507],[2.5984545271775,3.1112362350545517],[2.8146131370679996,4.515025626485134],[4.0470189737375,5.511008080973595],[4.1181261360255,5.690096601771499],[3.2591117377459997,4.565775144568954],[3.3532244801135,4.149978592563696],[3.8274519942530003,5.3748912342727095],[3.1008385693219997,4.33777050598745],[3.344782940783,4.8555495738016505],[3.6857277542495,5.255044920300551],[1.6360278887825002,3.2212307490607643],[2.9059927973255,4.044560717665195],[2.3274800332784995,3.1237272558427165]]]

Actual:   [[[3.2797, 4.3413], [2.8482, 4.7462], [3.7359, 5.1752], [3.6416, 5.0793], [3.848, 5.2797], [2.7505, 4.2567], [3.6396, 5.1513], [2.8737, 4.2112], [3.6392, 5.5481], [3.3536, 4.8633], [2.9176, 3.8846], [2.5985, 3.1113], [2.8147, 4.5151], [4.0471, 5.5111], [4.1182, 5.6901], [3.2592, 4.5658], [3.3533, 4.15], [3.8275, 5.3749], [3.1009, 4.3378], [3.3448, 4.8556], [3.6858, 5.2551], [1.6361, 3.2213], [2.906, 4.0446], [2.3275, 3.1238]]]

Expected: [[[3.2797, 4.3413], [2.8482, 4.7462], [3.7359, 5.1752], [3.6416, 5.0793], [3.848, 5.2797], [2.7505, 4.2567], [3.6396, 5.1513], [2.8737, 4.2112], [3.6392, 5.5481], [3.3536, 4.8633], [2.9176, 3.8846], [2.5985, 3.1113], [2.8147, 4.5151], [4.0471, 5.5111], [4.1182, 5.6901], [3.2592, 4.5658], [3.3533, 4.15], [3.8275, 5.3749], [3.1009, 4.3378], [3.3448, 4.8556], [3.6858, 5.2551], [1.6361, 3.2213], [2.906, 4.0446], [2.3275, 3.1238]]]