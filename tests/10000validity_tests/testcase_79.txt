import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Dot68881 = tf.keras.layers.Input(shape=([2, 2]))
in1Dot68881 = tf.keras.layers.Input(shape=([2, 2]))
in0Max83875 = tf.keras.layers.Input(shape=([1, 1, 1]))
in1Max83875 = tf.keras.layers.Input(shape=([1, 1, 1]))
in0Con49729 = tf.keras.layers.Input(shape=([2, 1]))
in0Con18594 = tf.keras.layers.Input(shape=([2, 2]))
in0Con86307 = tf.keras.layers.Input(shape=([2, 2]))
in0Con54517 = tf.keras.layers.Input(shape=([2, 4, 3, 1]))
in0Mul63275 = tf.keras.layers.Input(shape=([2, 1, 2, 2]))
in1Mul63275 = tf.keras.layers.Input(shape=([2, 1, 2, 2]))

Dot68881 = keras.layers.Dot(axes=(2, 2), name = 'Dot68881', )([in0Dot68881,in1Dot68881])
Max83875 = keras.layers.Maximum(name = 'Max83875', )([in0Max83875,in1Max83875])
Res48083 = keras.layers.Reshape((1, 1), name = 'Res48083', )(Max83875)
Up_96205 = keras.layers.UpSampling1D(size=(2), name = 'Up_96205', )(Res48083)
Con49729 = keras.layers.Concatenate(axis=2, name = 'Con49729', )([Up_96205,in0Con49729])
Add14740 = keras.layers.Add(name = 'Add14740', )([Dot68881,Con49729])
Con18594 = keras.layers.Concatenate(axis=2, name = 'Con18594', )([Add14740,in0Con18594])
Con86307 = keras.layers.Conv1D(4, (1),strides=(1), padding='valid', dilation_rate=(1), name = 'Con86307', )(in0Con86307)
Sub71487 = keras.layers.Subtract(name = 'Sub71487', )([Con18594,Con86307])
Res90388 = keras.layers.Reshape((2, 4, 1), name = 'Res90388', )(Sub71487)
Res96141 = keras.layers.Reshape((2, 4, 1, 1), name = 'Res96141', )(Res90388)
Zer59603 = keras.layers.ZeroPadding3D(padding=((0, 0), (0, 0), (2, 0)), name = 'Zer59603', )(Res96141)
Con54517 = keras.layers.Concatenate(axis=4, name = 'Con54517', )([Zer59603,in0Con54517])
Mul63275 = keras.layers.Multiply(name = 'Mul63275', )([in0Mul63275,in1Mul63275])
Zer45615 = keras.layers.ZeroPadding3D(padding=((0, 0), (3, 0), (1, 0)), name = 'Zer45615', )(Mul63275)
Add64841 = keras.layers.Add(name = 'Add64841', )([Con54517,Zer45615])
model = tf.keras.models.Model(inputs=[in0Dot68881,in1Dot68881,in0Max83875,in1Max83875,in0Con49729,in0Con18594,in0Con86307,in0Con54517,in0Mul63275,in1Mul63275], outputs=Add64841)
w = model.get_layer('Con86307').get_weights() 
w[0] = np.array([[[0.7334, 0.6159, 0.8769, 0.3619], [0.6131, 0.5138, 0.4258, 0.8564]]])
w[1] = np.array([0, 0, 0, 0])
model.get_layer('Con86307').set_weights(w) 
in0Dot68881 = tf.constant([[[0.9877, 0.7429], [0.0363, 0.8575]]])
in1Dot68881 = tf.constant([[[0.1373, 0.4078], [0.7451, 0.8655]]])
in0Max83875 = tf.constant([[[[0.7454]]]])
in1Max83875 = tf.constant([[[[0.7937]]]])
in0Con49729 = tf.constant([[[0.6597], [0.4977]]])
in0Con18594 = tf.constant([[[0.788, 0.9034], [0.8014, 0.611]]])
in0Con86307 = tf.constant([[[0.4982, 0.8498], [0.3832, 0.0573]]])
in0Con54517 = tf.constant([[[[[0.3823], [0.6819], [0.6602]], [[0.9409], [0.14], [0.7072]], [[0.6898], [0.167], [0.9111]], [[0.7136], [0.5222], [0.2286]]], [[[0.5644], [0.4665], [0.9068]], [[0.5436], [0.0201], [0.3016]], [[0.7424], [0.1567], [0.0227]], [[0.229], [0.4823], [0.2821]]]]])
in0Mul63275 = tf.constant([[[[[0.1309, 0.7916], [0.8994, 0.8236]]], [[[0.5329, 0.9562], [0.356, 0.5299]]]]])
in1Mul63275 = tf.constant([[[[[0.9345, 0.8617], [0.5323, 0.4348]]], [[[0.1351, 0.0343], [0.3597, 0.5918]]]]])
print (np.array2string(model.predict([in0Dot68881,in1Dot68881,in0Max83875,in1Max83875,in0Con49729,in0Con18594,in0Con86307,in0Con54517,in0Mul63275,in1Mul63275],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Add64841.png')

LDot68881 = dot_layer([[[0.9877, 0.7429], [0.0363, 0.8575]]], [[[0.1373, 0.4078], [0.7451, 0.8655]]], 2, 2, Dot68881), 
LMax83875 = maximum_layer([[[[[0.7454]]]], [[[[0.7937]]]]], Max83875), 
LRes48083 = reshape_layer(Max83875, [1, 1], Res48083), 
LUp_96205 = up_sampling1D_layer(Res48083, 2, Up_96205), 
LCon49729 = concatenate_layer([Up_96205,[[[0.6597], [0.4977]]]], 2, Con49729), 
LAdd14740 = add_layer([Dot68881,Con49729], Add14740), 
LCon18594 = concatenate_layer([Add14740,[[[0.788, 0.9034], [0.8014, 0.611]]]], 2, Con18594), 
LCon86307 = conv1D_layer([[[0.4982, 0.8498], [0.3832, 0.0573]]], 1,[[[0.7334, 0.6159, 0.8769, 0.3619], [0.6131, 0.5138, 0.4258, 0.8564]]],[0, 0, 0, 0], 1, false, 1, Con86307), 
LSub71487 = subtract_layer(Con18594,Con86307, Sub71487), 
LRes90388 = reshape_layer(Sub71487, [2, 4, 1], Res90388), 
LRes96141 = reshape_layer(Res90388, [2, 4, 1, 1], Res96141), 
LZer59603 = zero_padding3D_layer(Res96141, 0, 0, 0, 0, 2, 0, Zer59603), 
LCon54517 = concatenate_layer([Zer59603,[[[[[0.3823], [0.6819], [0.6602]], [[0.9409], [0.14], [0.7072]], [[0.6898], [0.167], [0.9111]], [[0.7136], [0.5222], [0.2286]]], [[[0.5644], [0.4665], [0.9068]], [[0.5436], [0.0201], [0.3016]], [[0.7424], [0.1567], [0.0227]], [[0.229], [0.4823], [0.2821]]]]]], 4, Con54517), 
LMul63275 = multiply_layer([[[[[[0.1309, 0.7916], [0.8994, 0.8236]]], [[[0.5329, 0.9562], [0.356, 0.5299]]]]], [[[[[0.9345, 0.8617], [0.5323, 0.4348]]], [[[0.1351, 0.0343], [0.3597, 0.5918]]]]]], Mul63275), 
LZer45615 = zero_padding3D_layer(Mul63275, 0, 0, 3, 0, 1, 0, Zer45615), 
LAdd64841 = add_layer([Con54517,Zer45615], Add64841), 
exec_layers([LDot68881,LMax83875,LRes48083,LUp_96205,LCon49729,LAdd14740,LCon18594,LCon86307,LSub71487,LRes90388,LRes96141,LZer59603,LCon54517,LMul63275,LZer45615,LAdd64841],["Dot68881","Max83875","Res48083","Up_96205","Con49729","Add14740","Con18594","Con86307","Sub71487","Res90388","Res96141","Zer59603","Con54517","Mul63275","Zer45615","Add64841"],Add64841,"Add64841")

Actual (Unparsed): [[[[[0.0000000, 0.3823000], [0.0000000, 0.6819000], [0.3458736, 0.6602000]], [[0.0000000, 0.9409000], [0.0000000, 0.1400000], [1.2951466, 0.7072000]], [[0.0000000, 0.6898000], [0.0000000, 0.1670000], [-0.0107164, 0.9111000]], [[0.0000000, 0.7136000], [0.1223260, 1.2043217], [0.4740833, 0.5867013]]], [[[0.0000000, 0.5644000], [0.0000000, 0.4665000], [0.8322030, 0.9068000]], [[0.0000000, 0.5436000], [0.0000000, 0.0201000], [1.0014598, 0.3016000]], [[0.0000000, 0.7424000], [0.0000000, 0.1567000], [0.4409736, 0.0227000]], [[0.0000000, 0.2290000], [0.0719948, 0.5150977], [0.5513014, 0.5956948]]]]]

Expected (Unparsed): [[[[[0,0.3823],[0,0.6819],[0.3458735700000001,0.6602]],[[0,0.9409],[0,0.14],[1.2951466,0.7072]],[[0,0.6898],[0,0.167],[-0.010716419999999949,0.9111]],[[0,0.7136],[0.12232604999999999,1.20432172],[0.4740833199999999,0.58670128]]],[[[0,0.5644],[0,0.4665],[0.8322029799999999,0.9068]],[[0,0.5436],[0,0.0201],[1.0014597600000001,0.3016]],[[0,0.7424],[0,0.1567],[0.44097358,0.0227]],[[0,0.229],[0.07199479,0.51509766],[0.5513014,0.5956948200000001]]]]]

Actual:   [[[[[0, 0.3823], [0, 0.6819], [0.3459, 0.6602]], [[0, 0.9409], [0, 0.14], [1.2952, 0.7072]], [[0, 0.6898], [0, 0.167], [-0.0107, 0.9111]], [[0, 0.7136], [0.1224, 1.2044], [0.4741, 0.5868]]], [[[0, 0.5644], [0, 0.4665], [0.8323, 0.9068]], [[0, 0.5436], [0, 0.0201], [1.0015, 0.3016]], [[0, 0.7424], [0, 0.1567], [0.441, 0.0227]], [[0, 0.229], [0.072, 0.5151], [0.5514, 0.5957]]]]]

Expected: [[[[[0, 0.3823], [0, 0.6819], [0.3459, 0.6602]], [[0, 0.9409], [0, 0.14], [1.2952, 0.7072]], [[0, 0.6898], [0, 0.167], [-0.0107, 0.9111]], [[0, 0.7136], [0.1224, 1.2044], [0.4741, 0.5868]]], [[[0, 0.5644], [0, 0.4665], [0.8323, 0.9068]], [[0, 0.5436], [0, 0.0201], [1.0015, 0.3016]], [[0, 0.7424], [0, 0.1567], [0.441, 0.0227]], [[0, 0.229], [0.072, 0.5151], [0.5514, 0.5957]]]]]