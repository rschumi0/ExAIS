import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Cro58105 = tf.keras.layers.Input(shape=([1, 3, 4, 1]))
in0Con19503 = tf.keras.layers.Input(shape=([4, 14]))
in0Sub4486 = tf.keras.layers.Input(shape=([2, 3, 3, 2]))
in1Sub4486 = tf.keras.layers.Input(shape=([2, 3, 3, 2]))
in0Dot77800 = tf.keras.layers.Input(shape=([2, 3]))
in1Dot77800 = tf.keras.layers.Input(shape=([2, 3]))
in0Con14452 = tf.keras.layers.Input(shape=([2, 16]))

Cro58105 = keras.layers.Cropping3D(cropping=((0, 0), (1, 0), (1, 1)), name = 'Cro58105', )(in0Cro58105)
Res63561 = keras.layers.Reshape((1, 2, 2), name = 'Res63561', )(Cro58105)
Res73550 = keras.layers.Reshape((1, 4), name = 'Res73550', )(Res63561)
Cro74466 = keras.layers.Cropping1D(cropping=((0, 0)), name = 'Cro74466', )(Res73550)
Zer45079 = keras.layers.ZeroPadding1D(padding=((3, 0)), name = 'Zer45079', )(Cro74466)
Con19503 = keras.layers.Concatenate(axis=2, name = 'Con19503', )([Zer45079,in0Con19503])
Sub4486 = keras.layers.Subtract(name = 'Sub4486', )([in0Sub4486,in1Sub4486])
Res4154 = keras.layers.Reshape((2, 3, 6), name = 'Res4154', )(Sub4486)
Res9349 = keras.layers.Reshape((2, 18), name = 'Res9349', )(Res4154)
Dot77800 = keras.layers.Dot(axes=(2, 2), name = 'Dot77800', )([in0Dot77800,in1Dot77800])
Con14452 = keras.layers.Concatenate(axis=2, name = 'Con14452', )([Dot77800,in0Con14452])
Min6973 = keras.layers.Minimum(name = 'Min6973', )([Res9349,Con14452])
Zer22700 = keras.layers.ZeroPadding1D(padding=((1, 1)), name = 'Zer22700', )(Min6973)
Add57042 = keras.layers.Add(name = 'Add57042', )([Con19503,Zer22700])
model = tf.keras.models.Model(inputs=[in0Cro58105,in0Con19503,in0Sub4486,in1Sub4486,in0Dot77800,in1Dot77800,in0Con14452], outputs=Add57042)
in0Cro58105 = tf.constant([[[[[1.1635], [1.0672], [1.9896], [1.4286]], [[1.399], [1.3817], [1.8809], [1.2747]], [[1.6294], [1.8445], [1.1539], [1.8169]]]]])
in0Con19503 = tf.constant([[[0.993, 0.4411, 0.6925, 0.6123, 0.025, 0.1904, 0.5131, 0.7906, 0.7214, 0.5648, 0.1223, 0.3461, 0.8254, 0.9115], [0.2754, 0.3497, 0.8563, 0.5123, 0.1794, 0.0718, 0.3876, 0.8948, 0.0682, 0.2076, 0.8324, 0.5049, 0.5549, 0.8072], [0.9601, 0.8558, 0.2313, 0.1634, 0.6799, 0.6757, 0.0623, 0.7131, 0.723, 0.0287, 0.486, 0.3486, 0.7298, 0.858], [0.7672, 0.4004, 0.907, 0.9093, 0.0807, 0.954, 0.8574, 0.5345, 0.9998, 0.094, 0.4046, 0.4434, 0.5541, 0.1293]]])
in0Sub4486 = tf.constant([[[[[0.3583, 0.4443], [0.333, 0.5667], [0.5797, 0.4208]], [[0.5116, 0.5257], [0.0811, 0.12], [0.7444, 0.2649]], [[0.7023, 0.4747], [0.205, 0.5743], [0.4762, 0.054]]], [[[0.5288, 0.0141], [0.3899, 0.532], [0.3454, 0.0015]], [[0.1022, 0.3779], [0.8621, 0.9074], [0.3263, 0.5455]], [[0.5001, 0.003], [0.7453, 0.9474], [0.0135, 0.9967]]]]])
in1Sub4486 = tf.constant([[[[[0.2676, 0.5423], [0.2188, 0.3325], [0.1465, 0.9318]], [[0.4519, 0.3826], [0.9908, 0.4682], [0.1354, 0.1593]], [[0.9767, 0.0078], [0.387, 0.1991], [0.6311, 0.6077]]], [[[0.4272, 0.8218], [0.4056, 0.6633], [0.6576, 0.06]], [[0.8824, 0.2087], [0.6706, 0.1699], [0.8637, 0.3626]], [[0.1249, 0.7826], [0.7826, 0.1909], [0.3755, 0.4382]]]]])
in0Dot77800 = tf.constant([[[0.8442, 0.5799, 0.9819], [0.4565, 0.0565, 0.0663]]])
in1Dot77800 = tf.constant([[[0.7348, 0.8386, 0.8425], [0.9522, 0.6396, 0.1725]]])
in0Con14452 = tf.constant([[[0.5732, 0.3495, 0.1632, 0.4777, 0.697, 0.6496, 0.524, 0.9087, 0.6529, 0.4326, 0.4187, 0.2806, 0.2807, 0.2133, 0.3201, 0.0667], [0.0795, 0.276, 0.7467, 0.1747, 0.5234, 0.3072, 0.9972, 0.962, 0.9353, 0.65, 0.5865, 0.1367, 0.0655, 0.5935, 0.9418, 0.3266]]])
print (np.array2string(model.predict([in0Cro58105,in0Con19503,in0Sub4486,in1Sub4486,in0Dot77800,in1Dot77800,in0Con14452],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Add57042.png')

LCro58105 = cropping3D_layer([[[[[1.1635], [1.0672], [1.9896], [1.4286]], [[1.399], [1.3817], [1.8809], [1.2747]], [[1.6294], [1.8445], [1.1539], [1.8169]]]]], 0, 0, 1, 0, 1, 1, Cro58105), 
LRes63561 = reshape_layer(Cro58105, [1, 2, 2], Res63561), 
LRes73550 = reshape_layer(Res63561, [1, 4], Res73550), 
LCro74466 = cropping1D_layer(Res73550, 0, 0, Cro74466), 
LZer45079 = zero_padding1D_layer(Cro74466, 3, 0, Zer45079), 
LCon19503 = concatenate_layer([Zer45079,[[[0.993, 0.4411, 0.6925, 0.6123, 0.025, 0.1904, 0.5131, 0.7906, 0.7214, 0.5648, 0.1223, 0.3461, 0.8254, 0.9115], [0.2754, 0.3497, 0.8563, 0.5123, 0.1794, 0.0718, 0.3876, 0.8948, 0.0682, 0.2076, 0.8324, 0.5049, 0.5549, 0.8072], [0.9601, 0.8558, 0.2313, 0.1634, 0.6799, 0.6757, 0.0623, 0.7131, 0.723, 0.0287, 0.486, 0.3486, 0.7298, 0.858], [0.7672, 0.4004, 0.907, 0.9093, 0.0807, 0.954, 0.8574, 0.5345, 0.9998, 0.094, 0.4046, 0.4434, 0.5541, 0.1293]]]], 2, Con19503), 
LSub4486 = subtract_layer([[[[[0.3583, 0.4443], [0.333, 0.5667], [0.5797, 0.4208]], [[0.5116, 0.5257], [0.0811, 0.12], [0.7444, 0.2649]], [[0.7023, 0.4747], [0.205, 0.5743], [0.4762, 0.054]]], [[[0.5288, 0.0141], [0.3899, 0.532], [0.3454, 0.0015]], [[0.1022, 0.3779], [0.8621, 0.9074], [0.3263, 0.5455]], [[0.5001, 0.003], [0.7453, 0.9474], [0.0135, 0.9967]]]]], [[[[[0.2676, 0.5423], [0.2188, 0.3325], [0.1465, 0.9318]], [[0.4519, 0.3826], [0.9908, 0.4682], [0.1354, 0.1593]], [[0.9767, 0.0078], [0.387, 0.1991], [0.6311, 0.6077]]], [[[0.4272, 0.8218], [0.4056, 0.6633], [0.6576, 0.06]], [[0.8824, 0.2087], [0.6706, 0.1699], [0.8637, 0.3626]], [[0.1249, 0.7826], [0.7826, 0.1909], [0.3755, 0.4382]]]]], Sub4486), 
LRes4154 = reshape_layer(Sub4486, [2, 3, 6], Res4154), 
LRes9349 = reshape_layer(Res4154, [2, 18], Res9349), 
LDot77800 = dot_layer([[[0.8442, 0.5799, 0.9819], [0.4565, 0.0565, 0.0663]]], [[[0.7348, 0.8386, 0.8425], [0.9522, 0.6396, 0.1725]]], 2, 2, Dot77800), 
LCon14452 = concatenate_layer([Dot77800,[[[0.5732, 0.3495, 0.1632, 0.4777, 0.697, 0.6496, 0.524, 0.9087, 0.6529, 0.4326, 0.4187, 0.2806, 0.2807, 0.2133, 0.3201, 0.0667], [0.0795, 0.276, 0.7467, 0.1747, 0.5234, 0.3072, 0.9972, 0.962, 0.9353, 0.65, 0.5865, 0.1367, 0.0655, 0.5935, 0.9418, 0.3266]]]], 2, Con14452), 
LMin6973 = minimum_layer([Res9349,Con14452], Min6973), 
LZer22700 = zero_padding1D_layer(Min6973, 1, 1, Zer22700), 
LAdd57042 = add_layer([Con19503,Zer22700], Add57042), 
exec_layers([LCro58105,LRes63561,LRes73550,LCro74466,LZer45079,LCon19503,LSub4486,LRes4154,LRes9349,LDot77800,LCon14452,LMin6973,LZer22700,LAdd57042],["Cro58105","Res63561","Res73550","Cro74466","Zer45079","Con19503","Sub4486","Res4154","Res9349","Dot77800","Con14452","Min6973","Zer22700","Add57042"],Add57042,"Add57042")

Actual (Unparsed): [[[0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.9930000, 0.4411000, 0.6925000, 0.6123000, 0.0250000, 0.1904000, 0.5131000, 0.7906000, 0.7214000, 0.5648000, 0.1223000, 0.3461000, 0.8254000, 0.9115000], [0.0907000, -0.0980000, 0.1142000, 0.2342000, 0.4386000, -0.1613000, 0.9160000, 0.6554000, -0.7303000, -0.2764000, 0.9966000, 1.0004000, -0.2062000, 0.4882000, 0.6504000, 0.7182000, 0.4000000, 0.2535000], [0.1016000, -0.8077000, -0.0157000, -0.1313000, 0.6479000, 0.7973000, -0.5489000, 0.3326000, 0.8714000, 1.4132000, -0.4751000, 0.8960000, 1.0982000, -0.7509000, 0.4487000, 0.9421000, 0.3678000, 1.1846000], [1.3817000, 1.8809000, 1.8444999, 1.1539000, 0.7672000, 0.4004000, 0.9070000, 0.9093000, 0.0807000, 0.9540000, 0.8574000, 0.5345000, 0.9998000, 0.0940000, 0.4046000, 0.4434000, 0.5541000, 0.1293000]]]

Expected (Unparsed): [[[0,0,0,0,0.993,0.4411,0.6925,0.6123,0.025,0.1904,0.5131,0.7906,0.7214,0.5648,0.1223,0.3461,0.8254,0.9115],[0.0907,-0.09800000000000003,0.11420000000000002,0.23419999999999996,0.4386,-0.1612999999999999,0.9159999999999999,0.6554,-0.7303,-0.2764,0.9965999999999999,1.0004,-0.2062,0.4882,0.6504,0.7182,0.39999999999999997,0.25350000000000006],[0.10160000000000002,-0.8077,-0.015699999999999992,-0.13129999999999997,0.6478999999999999,0.7973,-0.5488999999999999,0.3326,0.8714,1.4132,-0.4751000000000001,0.8959999999999999,1.0981999999999998,-0.7509,0.4487,0.9421,0.3678,1.1846],[1.3817,1.8809,1.8445,1.1539,0.7672,0.4004,0.907,0.9093,0.0807,0.954,0.8574,0.5345,0.9998,0.094,0.4046,0.4434,0.5541,0.1293]]]

Actual:   [[[0, 0, 0, 0, 0.993, 0.4411, 0.6925, 0.6123, 0.025, 0.1904, 0.5131, 0.7906, 0.7214, 0.5648, 0.1223, 0.3461, 0.8254, 0.9115], [0.0907, -0.098, 0.1142, 0.2342, 0.4386, -0.1613, 0.916, 0.6554, -0.7303, -0.2764, 0.9966, 1.0004, -0.2062, 0.4882, 0.6504, 0.7182, 0.4, 0.2535], [0.1016, -0.8077, -0.0157, -0.1313, 0.6479, 0.7973, -0.5489, 0.3326, 0.8714, 1.4132, -0.4751, 0.896, 1.0982, -0.7509, 0.4487, 0.9421, 0.3678, 1.1846], [1.3817, 1.8809, 1.8445, 1.1539, 0.7672, 0.4004, 0.907, 0.9093, 0.0807, 0.954, 0.8574, 0.5345, 0.9998, 0.094, 0.4046, 0.4434, 0.5541, 0.1293]]]

Expected: [[[0, 0, 0, 0, 0.993, 0.4411, 0.6925, 0.6123, 0.025, 0.1904, 0.5131, 0.7906, 0.7214, 0.5648, 0.1223, 0.3461, 0.8254, 0.9115], [0.0907, -0.098, 0.1143, 0.2342, 0.4386, -0.1612, 0.916, 0.6554, -0.7303, -0.2764, 0.9966, 1.0004, -0.2062, 0.4882, 0.6504, 0.7182, 0.4, 0.2536], [0.1017, -0.8077, -0.0156, -0.1312, 0.6479, 0.7973, -0.5488, 0.3326, 0.8714, 1.4132, -0.4751, 0.896, 1.0982, -0.7509, 0.4487, 0.9421, 0.3678, 1.1846], [1.3817, 1.8809, 1.8445, 1.1539, 0.7672, 0.4004, 0.907, 0.9093, 0.0807, 0.954, 0.8574, 0.5345, 0.9998, 0.094, 0.4046, 0.4434, 0.5541, 0.1293]]]