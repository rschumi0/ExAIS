import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Mul31309 = tf.keras.layers.Input(shape=([1, 2, 1]))
in1Mul31309 = tf.keras.layers.Input(shape=([1, 2, 1]))
in0Con45792 = tf.keras.layers.Input(shape=([1, 11]))
in0Con9659 = tf.keras.layers.Input(shape=([2, 1, 1]))

Mul31309 = keras.layers.Multiply(name = 'Mul31309', )([in0Mul31309,in1Mul31309])
Res62748 = keras.layers.Reshape((1, 2), name = 'Res62748', )(Mul31309)
Con7436 = keras.layers.Conv1D(4, (1),strides=(1), padding='same', dilation_rate=(1), name = 'Con7436', )(Res62748)
Cro29000 = keras.layers.Cropping1D(cropping=((0, 0)), name = 'Cro29000', )(Con7436)
Con45792 = keras.layers.Concatenate(axis=2, name = 'Con45792', )([Cro29000,in0Con45792])
Con9659 = keras.layers.Conv2DTranspose(3, (2, 1),strides=(1, 1), padding='valid', name = 'Con9659', )(in0Con9659)
Res22516 = keras.layers.Reshape((3, 1, 3, 1), name = 'Res22516', )(Con9659)
Zer47383 = keras.layers.ZeroPadding3D(padding=((1, 1), (1, 1), (1, 1)), name = 'Zer47383', )(Res22516)
Res108 = keras.layers.Reshape((5, 3, 5), name = 'Res108', )(Zer47383)
Res14829 = keras.layers.Reshape((5, 15), name = 'Res14829', )(Res108)
Dot72411 = keras.layers.Dot(axes=(2, 2), name = 'Dot72411', )([Con45792,Res14829])
model = tf.keras.models.Model(inputs=[in0Mul31309,in1Mul31309,in0Con45792,in0Con9659], outputs=Dot72411)
w = model.get_layer('Con7436').get_weights() 
w[0] = np.array([[[0.8063, 0.7922, 0.2799, 0.4196], [0.4168, 0.3211, 0.0592, 0.0844]]])
w[1] = np.array([0, 0, 0, 0])
model.get_layer('Con7436').set_weights(w) 
w = model.get_layer('Con9659').get_weights() 
w[0] = np.array([[[[0.3245], [0.6797], [0.7063]]], [[[0.094], [0.6256], [0.5623]]]])
w[1] = np.array([0, 0, 0])
model.get_layer('Con9659').set_weights(w) 
in0Mul31309 = tf.constant([[[[0.2162], [0.972]]]])
in1Mul31309 = tf.constant([[[[0.9018], [0.1083]]]])
in0Con45792 = tf.constant([[[0.7028, 0.306, 0.8097, 0.3112, 0.5573, 0.5788, 0.2319, 0.2503, 0.4612, 0.8043, 0.8726]]])
in0Con9659 = tf.constant([[[[0.97]], [[0.5061]]]])
print (np.array2string(model.predict([in0Mul31309,in1Mul31309,in0Con45792,in0Con9659],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Dot72411.png')

LMul31309 = multiply_layer([[[[[0.2162], [0.972]]]], [[[[0.9018], [0.1083]]]]], Mul31309), 
LRes62748 = reshape_layer(Mul31309, [1, 2], Res62748), 
LCon7436 = conv1D_layer(Res62748, 1,[[[0.8063, 0.7922, 0.2799, 0.4196], [0.4168, 0.3211, 0.0592, 0.0844]]],[0, 0, 0, 0], 1, true, 1, Con7436), 
LCro29000 = cropping1D_layer(Con7436, 0, 0, Cro29000), 
LCon45792 = concatenate_layer([Cro29000,[[[0.7028, 0.306, 0.8097, 0.3112, 0.5573, 0.5788, 0.2319, 0.2503, 0.4612, 0.8043, 0.8726]]]], 2, Con45792), 
LCon9659 = conv2D_transpose_layer([[[[0.97]], [[0.5061]]]], 2, 1,[[[[0.3245], [0.6797], [0.7063]]], [[[0.094], [0.6256], [0.5623]]]],[0, 0, 0], 1, 1, false, Con9659), 
LRes22516 = reshape_layer(Con9659, [3, 1, 3, 1], Res22516), 
LZer47383 = zero_padding3D_layer(Res22516, 1, 1, 1, 1, 1, 1, Zer47383), 
LRes108 = reshape_layer(Zer47383, [5, 3, 5], Res108), 
LRes14829 = reshape_layer(Res108, [5, 15], Res14829), 
LDot72411 = dot_layer(Con45792,Res14829, 2, 2, Dot72411), 
exec_layers([LMul31309,LRes62748,LCon7436,LCro29000,LCon45792,LCon9659,LRes22516,LZer47383,LRes108,LRes14829,LDot72411],["Mul31309","Res62748","Con7436","Cro29000","Con45792","Con9659","Res22516","Zer47383","Res108","Res14829","Dot72411"],Dot72411,"Dot72411")

Actual (Unparsed): [[[0.0000000, 0.8418545, 1.0058830, 0.2956476, 0.0000000]]]

Expected (Unparsed): [[[0.0,0.8418545416000001,1.0058830375080001,0.295647581691,0.0]]]

Actual:   [[[0, 0.8419, 1.0059, 0.2957, 0]]]

Expected: [[[0, 0.8419, 1.0059, 0.2957, 0]]]