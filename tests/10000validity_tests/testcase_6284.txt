import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Min99402 = tf.keras.layers.Input(shape=([2, 2, 2, 2]))
in1Min99402 = tf.keras.layers.Input(shape=([2, 2, 2, 2]))
in0Cro90539 = tf.keras.layers.Input(shape=([1, 3, 3]))
in0Con17775 = tf.keras.layers.Input(shape=([3, 3, 5, 1]))

Min99402 = keras.layers.Minimum(name = 'Min99402', )([in0Min99402,in1Min99402])
Zer19230 = keras.layers.ZeroPadding3D(padding=((1, 0), (1, 0), (3, 0)), name = 'Zer19230', )(Min99402)
Cro90539 = keras.layers.Cropping2D(cropping=((0, 0), (1, 1)), name = 'Cro90539', )(in0Cro90539)
Res55461 = keras.layers.Reshape((1, 1, 3, 1), name = 'Res55461', )(Cro90539)
Zer26081 = keras.layers.ZeroPadding3D(padding=((1, 1), (1, 1), (1, 1)), name = 'Zer26081', )(Res55461)
Con17775 = keras.layers.Concatenate(axis=4, name = 'Con17775', )([Zer26081,in0Con17775])
Min852 = keras.layers.Minimum(name = 'Min852', )([Zer19230,Con17775])
model = tf.keras.models.Model(inputs=[in0Min99402,in1Min99402,in0Cro90539,in0Con17775], outputs=Min852)
in0Min99402 = tf.constant([[[[[0.0588, 0.1572], [0.345, 0.1213]], [[0.2745, 0.7288], [0.8255, 0.5878]]], [[[0.1251, 0.9599], [0.4982, 0.2032]], [[0.2649, 0.9128], [0.118, 0.461]]]]])
in1Min99402 = tf.constant([[[[[0.5298, 0.5384], [0.6408, 0.4052]], [[0.5559, 0.1078], [0.0766, 0.3013]]], [[[0.1138, 0.4316], [0.4366, 0.4339]], [[0.895, 0.3369], [0.7993, 0.9456]]]]])
in0Cro90539 = tf.constant([[[[1.0376, 1.3015, 1.647], [1.7719, 1.6356, 1.2419], [1.6628, 1.018, 1.8412]]]])
in0Con17775 = tf.constant([[[[[0.1476], [0.404], [0.3263], [0.4058], [0.4602]], [[0.1238], [0.394], [0.187], [0.8171], [0.209]], [[0.8387], [0.1145], [0.4655], [0.2175], [0.0374]]], [[[0.9026], [0.8143], [0.521], [0.4301], [0.4308]], [[0.9805], [0.3649], [0.2445], [0.4994], [0.3769]], [[0.6294], [0.2983], [0.7655], [0.6382], [0.6896]]], [[[0.1926], [0.6077], [0.4142], [0.9827], [0.9621]], [[0.0234], [0.077], [0.6357], [0.7802], [0.0422]], [[0.1871], [0.7816], [0.6312], [0.5583], [0.6413]]]]])
print (np.array2string(model.predict([in0Min99402,in1Min99402,in0Cro90539,in0Con17775],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Min852.png')

LMin99402 = minimum_layer([[[[[[0.0588, 0.1572], [0.345, 0.1213]], [[0.2745, 0.7288], [0.8255, 0.5878]]], [[[0.1251, 0.9599], [0.4982, 0.2032]], [[0.2649, 0.9128], [0.118, 0.461]]]]], [[[[[0.5298, 0.5384], [0.6408, 0.4052]], [[0.5559, 0.1078], [0.0766, 0.3013]]], [[[0.1138, 0.4316], [0.4366, 0.4339]], [[0.895, 0.3369], [0.7993, 0.9456]]]]]], Min99402), 
LZer19230 = zero_padding3D_layer(Min99402, 1, 0, 1, 0, 3, 0, Zer19230), 
LCro90539 = cropping2D_layer([[[[1.0376, 1.3015, 1.647], [1.7719, 1.6356, 1.2419], [1.6628, 1.018, 1.8412]]]], 0, 0, 1, 1, Cro90539), 
LRes55461 = reshape_layer(Cro90539, [1, 1, 3, 1], Res55461), 
LZer26081 = zero_padding3D_layer(Res55461, 1, 1, 1, 1, 1, 1, Zer26081), 
LCon17775 = concatenate_layer([Zer26081,[[[[[0.1476], [0.404], [0.3263], [0.4058], [0.4602]], [[0.1238], [0.394], [0.187], [0.8171], [0.209]], [[0.8387], [0.1145], [0.4655], [0.2175], [0.0374]]], [[[0.9026], [0.8143], [0.521], [0.4301], [0.4308]], [[0.9805], [0.3649], [0.2445], [0.4994], [0.3769]], [[0.6294], [0.2983], [0.7655], [0.6382], [0.6896]]], [[[0.1926], [0.6077], [0.4142], [0.9827], [0.9621]], [[0.0234], [0.077], [0.6357], [0.7802], [0.0422]], [[0.1871], [0.7816], [0.6312], [0.5583], [0.6413]]]]]], 4, Con17775), 
LMin852 = minimum_layer([Zer19230,Con17775], Min852), 
exec_layers([LMin99402,LZer19230,LCro90539,LRes55461,LZer26081,LCon17775,LMin852],["Min99402","Zer19230","Cro90539","Res55461","Zer26081","Con17775","Min852"],Min852,"Min852")

Actual (Unparsed): [[[[[0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000]], [[0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000]], [[0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000]]], [[[0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000]], [[0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0588000, 0.1572000], [0.0000000, 0.1213000]], [[0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.1078000], [0.0000000, 0.3013000]]], [[[0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000]], [[0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.4316000], [0.0000000, 0.0422000]], [[0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.3369000], [0.0000000, 0.4610000]]]]]

Expected (Unparsed): [[[[[0,0],[0,0],[0,0],[0,0],[0,0]],[[0,0],[0,0],[0,0],[0,0],[0,0]],[[0,0],[0,0],[0,0],[0,0],[0,0]]],[[[0,0],[0,0],[0,0],[0,0],[0,0]],[[0,0],[0,0],[0,0],[0.0588,0.1572],[0,0.1213]],[[0,0],[0,0],[0,0],[0,0.1078],[0,0.3013]]],[[[0,0],[0,0],[0,0],[0,0],[0,0]],[[0,0],[0,0],[0,0],[0,0.4316],[0,0.0422]],[[0,0],[0,0],[0,0],[0,0.3369],[0,0.461]]]]]

Actual:   [[[[[0, 0], [0, 0], [0, 0], [0, 0], [0, 0]], [[0, 0], [0, 0], [0, 0], [0, 0], [0, 0]], [[0, 0], [0, 0], [0, 0], [0, 0], [0, 0]]], [[[0, 0], [0, 0], [0, 0], [0, 0], [0, 0]], [[0, 0], [0, 0], [0, 0], [0.0588, 0.1572], [0, 0.1213]], [[0, 0], [0, 0], [0, 0], [0, 0.1078], [0, 0.3013]]], [[[0, 0], [0, 0], [0, 0], [0, 0], [0, 0]], [[0, 0], [0, 0], [0, 0], [0, 0.4316], [0, 0.0422]], [[0, 0], [0, 0], [0, 0], [0, 0.3369], [0, 0.461]]]]]

Expected: [[[[[0, 0], [0, 0], [0, 0], [0, 0], [0, 0]], [[0, 0], [0, 0], [0, 0], [0, 0], [0, 0]], [[0, 0], [0, 0], [0, 0], [0, 0], [0, 0]]], [[[0, 0], [0, 0], [0, 0], [0, 0], [0, 0]], [[0, 0], [0, 0], [0, 0], [0.0588, 0.1572], [0, 0.1213]], [[0, 0], [0, 0], [0, 0], [0, 0.1078], [0, 0.3013]]], [[[0, 0], [0, 0], [0, 0], [0, 0], [0, 0]], [[0, 0], [0, 0], [0, 0], [0, 0.4316], [0, 0.0422]], [[0, 0], [0, 0], [0, 0], [0, 0.3369], [0, 0.461]]]]]