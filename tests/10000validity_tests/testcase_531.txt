import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Sub88539 = tf.keras.layers.Input(shape=([3, 3, 3]))
in1Sub88539 = tf.keras.layers.Input(shape=([3, 3, 3]))

Sub88539 = keras.layers.Subtract(name = 'Sub88539', )([in0Sub88539,in1Sub88539])
Bat65503 = keras.layers.BatchNormalization(axis=3, epsilon=0.3173837938737421,  name = 'Bat65503', )(Sub88539)
model = tf.keras.models.Model(inputs=[in0Sub88539,in1Sub88539], outputs=Bat65503)
w = model.get_layer('Bat65503').get_weights() 
w[0] = np.array([0.5111, 0.3376, 0.939])
w[1] = np.array([0.5472, 0.9234, 0.4015])
w[2] = np.array([0.08, 0.8277, 0.7548])
w[3] = np.array([0.5443, 0.2983, 0.4788])
model.get_layer('Bat65503').set_weights(w) 
in0Sub88539 = tf.constant([[[[0.5357, 0.9996, 0.657], [0.2533, 0.1824, 0.6384], [0.8609, 0.4865, 0.9985]], [[0.6838, 0.4101, 0.2702], [0.1482, 0.7243, 0.9681], [0.4888, 0.2102, 0.0123]], [[0.3162, 0.9055, 0.054], [0.0042, 0.8234, 0.7627], [0.1913, 0.5121, 0.216]]]])
in1Sub88539 = tf.constant([[[[0.5541, 0.7217, 0.6634], [0.6811, 0.4406, 0.3304], [0.7354, 0.8156, 0.4242]], [[0.6628, 0.5932, 0.4427], [0.3135, 0.8007, 0.8961], [0.8566, 0.7234, 0.4953]], [[0.457, 0.6276, 0.8319], [0.2744, 0.1414, 0.7024], [0.3881, 0.5342, 0.4735]]]])
print (np.array2string(model.predict([in0Sub88539,in1Sub88539],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Bat65503.png')

LSub88539 = subtract_layer([[[[0.5357, 0.9996, 0.657], [0.2533, 0.1824, 0.6384], [0.8609, 0.4865, 0.9985]], [[0.6838, 0.4101, 0.2702], [0.1482, 0.7243, 0.9681], [0.4888, 0.2102, 0.0123]], [[0.3162, 0.9055, 0.054], [0.0042, 0.8234, 0.7627], [0.1913, 0.5121, 0.216]]]], [[[[0.5541, 0.7217, 0.6634], [0.6811, 0.4406, 0.3304], [0.7354, 0.8156, 0.4242]], [[0.6628, 0.5932, 0.4427], [0.3135, 0.8007, 0.8961], [0.8566, 0.7234, 0.4953]], [[0.457, 0.6276, 0.8319], [0.2744, 0.1414, 0.7024], [0.3881, 0.5342, 0.4735]]]], Sub88539), 
LBat65503 = batch_normalization_layer(Sub88539, 3, 0.3173837938737421, [0.5111, 0.3376, 0.939], [0.5472, 0.9234, 0.4015], [0.08, 0.8277, 0.7548], [0.5443, 0.2983, 0.4788], Bat65503), 
exec_layers([LSub88539,LBat65503],["Sub88539","Bat65503"],Bat65503,"Bat65503")

Actual (Unparsed): [[[[0.4930215, 0.6868471, -0.3995464], [0.2676081, 0.4561886, -0.0686886], [0.5722520, 0.4256837, 0.2115514]], [[0.5147149, 0.4885006, -0.5743413], [0.4121392, 0.5344086, -0.3170424], [0.3006438, 0.3464742, -0.9010950]], [[0.4256287, 0.6868471, -1.2114321], [0.3543818, 0.8607122, -0.3293549], [0.3947954, 0.5577713, -0.6637908]]]]

Expected (Unparsed): [[[[0.4930214950099429,0.6868470805216113,-0.3995464593967872],[0.26760808095578276,0.45618862265990834,-0.06868859440158254],[0.5722520526122723,0.42568370816187673,0.2115513847594324]],[[0.514714920788482,0.4885005983834933,-0.574341279294063],[0.4121391537188923,0.5344085585660034,-0.3170424625277541],[0.3006437547302078,0.3464741911084549,-0.9010949913837931]],[[0.42562872051011585,0.6868470805216111,-1.2114320918516235],[0.35438178406993925,0.8607121855802087,-0.3293549212441786],[0.3947954249873192,0.5577712786963718,-0.6637907656954383]]]]

Actual:   [[[[0.4931, 0.6869, -0.3995], [0.2677, 0.4562, -0.0686], [0.5723, 0.4257, 0.2116]], [[0.5148, 0.4886, -0.5743], [0.4122, 0.5345, -0.317], [0.3007, 0.3465, -0.901]], [[0.4257, 0.6869, -1.2114], [0.3544, 0.8608, -0.3293], [0.3948, 0.5578, -0.6637]]]]

Expected: [[[[0.4931, 0.6869, -0.3995], [0.2677, 0.4562, -0.0686], [0.5723, 0.4257, 0.2116]], [[0.5148, 0.4886, -0.5743], [0.4122, 0.5345, -0.317], [0.3007, 0.3465, -0.901]], [[0.4257, 0.6869, -1.2114], [0.3544, 0.8608, -0.3293], [0.3948, 0.5578, -0.6637]]]]