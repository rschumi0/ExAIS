import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Lay27446 = tf.keras.layers.Input(shape=([2]))

Lay27446 = keras.layers.LayerNormalization(axis=1, epsilon=1.2381364784566113, name = 'Lay27446', )(in0Lay27446)
Res37195 = keras.layers.Reshape((2, 1), name = 'Res37195', )(Lay27446)
Sim78428 = keras.layers.SimpleRNN(3,name = 'Sim78428', )(Res37195)
Res61665 = keras.layers.Reshape((3, 1), name = 'Res61665', )(Sim78428)
Glo87649 = keras.layers.GlobalAveragePooling1D(name = 'Glo87649', )(Res61665)
model = tf.keras.models.Model(inputs=[in0Lay27446], outputs=Glo87649)
w = model.get_layer('Sim78428').get_weights() 
w[0] = np.array([[7, 4, 7]])
w[1] = np.array([[9, 1, 7], [2, 8, 5], [2, 8, 5]])
w[2] = np.array([7, 1, 4])
model.get_layer('Sim78428').set_weights(w) 
in0Lay27446 = tf.constant([[1.9797, 1.8267]])
print (np.array2string(model.predict([in0Lay27446],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Glo87649.png')

LLay27446 = layer_normalization_layer([[1.9797, 1.8267]], 1, 1.2381364784566113, Lay27446), 
LRes37195 = reshape_layer(Lay27446, [2, 1], Res37195), 
LSim78428 = simple_rnn_layer(Res37195,[[7, 4, 7]],[[9, 1, 7], [2, 8, 5], [2, 8, 5]],[7, 1, 4], Sim78428), 
LRes61665 = reshape_layer(Sim78428, [3, 1], Res61665), 
LGlo87649 = global_average_pooling1D_layer(Res61665, Glo87649), 
exec_layers([LLay27446,LRes37195,LSim78428,LRes61665,LGlo87649],["Lay27446","Res37195","Sim78428","Res61665","Glo87649"],Glo87649,"Glo87649")

Actual (Unparsed): [[1.0000000]]

Expected (Unparsed): [[0.9999999999999973]]

Actual:   [[1]]

Expected: [[1]]