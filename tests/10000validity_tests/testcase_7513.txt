import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Dot98075 = tf.keras.layers.Input(shape=([2]))
in1Dot98075 = tf.keras.layers.Input(shape=([2]))

Dot98075 = keras.layers.Dot(axes=(1, 1), name = 'Dot98075', )([in0Dot98075,in1Dot98075])
Res82273 = keras.layers.Reshape((1, 1), name = 'Res82273', )(Dot98075)
Res23782 = keras.layers.Reshape((1, 1, 1), name = 'Res23782', )(Res82273)
Con21789 = keras.layers.Conv2DTranspose(4, (1, 1),strides=(1, 1), padding='same', name = 'Con21789', )(Res23782)
Ave54194 = keras.layers.AveragePooling2D(pool_size=(1, 1), name = 'Ave54194', )(Con21789)
model = tf.keras.models.Model(inputs=[in0Dot98075,in1Dot98075], outputs=Ave54194)
w = model.get_layer('Con21789').get_weights() 
w[0] = np.array([[[[0.867], [0.867], [0.7551], [0.9833]]]])
w[1] = np.array([0, 0, 0, 0])
model.get_layer('Con21789').set_weights(w) 
in0Dot98075 = tf.constant([[0.1294, 0.9824]])
in1Dot98075 = tf.constant([[0.8806, 0.5209]])
print (np.array2string(model.predict([in0Dot98075,in1Dot98075],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Ave54194.png')

LDot98075 = dot_layer([[0.1294, 0.9824]], [[0.8806, 0.5209]], 1, 1, Dot98075), 
LRes82273 = reshape_layer(Dot98075, [1, 1], Res82273), 
LRes23782 = reshape_layer(Res82273, [1, 1, 1], Res23782), 
LCon21789 = conv2D_transpose_layer(Res23782, 1, 1,[[[[0.867], [0.867], [0.7551], [0.9833]]]],[0, 0, 0, 0], 1, 1, true, Con21789), 
LAve54194 = average_pooling2D_layer(Con21789, 1, 1, Ave54194), 
exec_layers([LDot98075,LRes82273,LRes23782,LCon21789,LAve54194],["Dot98075","Res82273","Res23782","Con21789","Ave54194"],Ave54194,"Ave54194")

Actual (Unparsed): [[[[0.5424661, 0.5424661, 0.4724523, 0.6152329]]]]

Expected (Unparsed): [[[[0.5424661206000001,0.5424661206000001,0.47245232718,0.61523291394]]]]

Actual:   [[[[0.5425, 0.5425, 0.4725, 0.6153]]]]

Expected: [[[[0.5425, 0.5425, 0.4725, 0.6153]]]]