import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Sub98937 = tf.keras.layers.Input(shape=([3]))
in1Sub98937 = tf.keras.layers.Input(shape=([3]))
in0Con10788 = tf.keras.layers.Input(shape=([3, 3]))
in0Ave48500 = tf.keras.layers.Input(shape=([2, 2, 1, 2]))
in1Ave48500 = tf.keras.layers.Input(shape=([2, 2, 1, 2]))
in0Con74042 = tf.keras.layers.Input(shape=([3, 6]))
in0Ave56192 = tf.keras.layers.Input(shape=([1, 2, 2, 2]))
in1Ave56192 = tf.keras.layers.Input(shape=([1, 2, 2, 2]))
in0Glo90686 = tf.keras.layers.Input(shape=([2, 2, 1, 1]))
in0Con61520 = tf.keras.layers.Input(shape=([2, 1]))
in0Dot66005 = tf.keras.layers.Input(shape=([2, 3]))
in1Dot66005 = tf.keras.layers.Input(shape=([2, 3]))
in0Con61397 = tf.keras.layers.Input(shape=([2, 6]))

Sub98937 = keras.layers.Subtract(name = 'Sub98937', )([in0Sub98937,in1Sub98937])
Res95956 = keras.layers.Reshape((3, 1), name = 'Res95956', )(Sub98937)
Con10788 = keras.layers.Concatenate(axis=2, name = 'Con10788', )([Res95956,in0Con10788])
Ave48500 = keras.layers.Average(name = 'Ave48500', )([in0Ave48500,in1Ave48500])
Res57275 = keras.layers.Reshape((2, 2, 2), name = 'Res57275', )(Ave48500)
Res6739 = keras.layers.Reshape((2, 4), name = 'Res6739', )(Res57275)
Dot75538 = keras.layers.Dot(axes=(2, 2), name = 'Dot75538', )([Con10788,Res6739])
Con74042 = keras.layers.Concatenate(axis=2, name = 'Con74042', )([Dot75538,in0Con74042])
Ave56192 = keras.layers.Average(name = 'Ave56192', )([in0Ave56192,in1Ave56192])
Res18784 = keras.layers.Reshape((1, 2, 4), name = 'Res18784', )(Ave56192)
Res98418 = keras.layers.Reshape((1, 8), name = 'Res98418', )(Res18784)
Zer32556 = keras.layers.ZeroPadding1D(padding=((1, 0)), name = 'Zer32556', )(Res98418)
Glo90686 = keras.layers.GlobalAveragePooling3D(name = 'Glo90686', )(in0Glo90686)
Res53294 = keras.layers.Reshape((1, 1), name = 'Res53294', )(Glo90686)
Res5946 = keras.layers.Reshape((1, 1, 1), name = 'Res5946', )(Res53294)
Cro57679 = keras.layers.Cropping2D(cropping=((0, 0), (0, 0)), name = 'Cro57679', )(Res5946)
Res23506 = keras.layers.Reshape((1, 1), name = 'Res23506', )(Cro57679)
Zer27984 = keras.layers.ZeroPadding1D(padding=((1, 0)), name = 'Zer27984', )(Res23506)
Con61520 = keras.layers.Concatenate(axis=2, name = 'Con61520', )([Zer27984,in0Con61520])
Dot66005 = keras.layers.Dot(axes=(2, 2), name = 'Dot66005', )([in0Dot66005,in1Dot66005])
Mul81900 = keras.layers.Multiply(name = 'Mul81900', )([Con61520,Dot66005])
Con61397 = keras.layers.Concatenate(axis=2, name = 'Con61397', )([Mul81900,in0Con61397])
Mul13133 = keras.layers.Multiply(name = 'Mul13133', )([Zer32556,Con61397])
Zer85169 = keras.layers.ZeroPadding1D(padding=((1, 0)), name = 'Zer85169', )(Mul13133)
Mul51967 = keras.layers.Multiply(name = 'Mul51967', )([Con74042,Zer85169])
model = tf.keras.models.Model(inputs=[in0Sub98937,in1Sub98937,in0Con10788,in0Ave48500,in1Ave48500,in0Con74042,in0Ave56192,in1Ave56192,in0Glo90686,in0Con61520,in0Dot66005,in1Dot66005,in0Con61397], outputs=Mul51967)
in0Sub98937 = tf.constant([[0.3778, 0.7601, 0.1043]])
in1Sub98937 = tf.constant([[0.6258, 0.4673, 0.6726]])
in0Con10788 = tf.constant([[[0.1237, 0.4535, 0.3454], [0.5908, 0.01, 0.1491], [0.0783, 0.4715, 0.2348]]])
in0Ave48500 = tf.constant([[[[[0.6448, 0.8217]], [[0.7198, 0.68]]], [[[0.3508, 0.7705]], [[0.751, 0.5621]]]]])
in1Ave48500 = tf.constant([[[[[0.8603, 0.2914]], [[0.4234, 0.4453]]], [[[0.6699, 0.6417]], [[0.1494, 0.6224]]]]])
in0Con74042 = tf.constant([[[0.7582, 0.1058, 0.6036, 0.0976, 0.4825, 0.3567], [0.351, 0.5003, 0.4211, 0.724, 0.4287, 0.1109], [0.5033, 0.7867, 0.0468, 0.4582, 0.9784, 0.4488]]])
in0Ave56192 = tf.constant([[[[[0.339, 0.9888], [0.0528, 0.9369]], [[0.6596, 0.579], [0.221, 0.8892]]]]])
in1Ave56192 = tf.constant([[[[[0.0164, 0.0388], [0.4874, 0.9694]], [[0.4441, 0.7887], [0.801, 0.7109]]]]])
in0Glo90686 = tf.constant([[[[[1.085]], [[1.2504]]], [[[1.2549]], [[1.6201]]]]])
in0Con61520 = tf.constant([[[0.745], [0.7157]]])
in0Dot66005 = tf.constant([[[0.8473, 0.3843, 0.2794], [0.4406, 0.0679, 0.1051]]])
in1Dot66005 = tf.constant([[[0.3305, 0.1798, 0.8967], [0.2969, 0.6517, 0.9473]]])
in0Con61397 = tf.constant([[[0.5434, 0.3999, 0.0545, 0.3528, 0.5036, 0.0882], [0.9874, 0.2444, 0.5491, 0.2687, 0.4025, 0.0754]]])
print (np.array2string(model.predict([in0Sub98937,in1Sub98937,in0Con10788,in0Ave48500,in1Ave48500,in0Con74042,in0Ave56192,in1Ave56192,in0Glo90686,in0Con61520,in0Dot66005,in1Dot66005,in0Con61397],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Mul51967.png')

LSub98937 = subtract_layer([[0.3778, 0.7601, 0.1043]], [[0.6258, 0.4673, 0.6726]], Sub98937), 
LRes95956 = reshape_layer(Sub98937, [3, 1], Res95956), 
LCon10788 = concatenate_layer([Res95956,[[[0.1237, 0.4535, 0.3454], [0.5908, 0.01, 0.1491], [0.0783, 0.4715, 0.2348]]]], 2, Con10788), 
LAve48500 = average_layer([[[[[[0.6448, 0.8217]], [[0.7198, 0.68]]], [[[0.3508, 0.7705]], [[0.751, 0.5621]]]]], [[[[[0.8603, 0.2914]], [[0.4234, 0.4453]]], [[[0.6699, 0.6417]], [[0.1494, 0.6224]]]]]], Ave48500), 
LRes57275 = reshape_layer(Ave48500, [2, 2, 2], Res57275), 
LRes6739 = reshape_layer(Res57275, [2, 4], Res6739), 
LDot75538 = dot_layer(Con10788,Res6739, 2, 2, Dot75538), 
LCon74042 = concatenate_layer([Dot75538,[[[0.7582, 0.1058, 0.6036, 0.0976, 0.4825, 0.3567], [0.351, 0.5003, 0.4211, 0.724, 0.4287, 0.1109], [0.5033, 0.7867, 0.0468, 0.4582, 0.9784, 0.4488]]]], 2, Con74042), 
LAve56192 = average_layer([[[[[[0.339, 0.9888], [0.0528, 0.9369]], [[0.6596, 0.579], [0.221, 0.8892]]]]], [[[[[0.0164, 0.0388], [0.4874, 0.9694]], [[0.4441, 0.7887], [0.801, 0.7109]]]]]], Ave56192), 
LRes18784 = reshape_layer(Ave56192, [1, 2, 4], Res18784), 
LRes98418 = reshape_layer(Res18784, [1, 8], Res98418), 
LZer32556 = zero_padding1D_layer(Res98418, 1, 0, Zer32556), 
LGlo90686 = global_average_pooling3D_layer([[[[[1.085]], [[1.2504]]], [[[1.2549]], [[1.6201]]]]], Glo90686), 
LRes53294 = reshape_layer(Glo90686, [1, 1], Res53294), 
LRes5946 = reshape_layer(Res53294, [1, 1, 1], Res5946), 
LCro57679 = cropping2D_layer(Res5946, 0, 0, 0, 0, Cro57679), 
LRes23506 = reshape_layer(Cro57679, [1, 1], Res23506), 
LZer27984 = zero_padding1D_layer(Res23506, 1, 0, Zer27984), 
LCon61520 = concatenate_layer([Zer27984,[[[0.745], [0.7157]]]], 2, Con61520), 
LDot66005 = dot_layer([[[0.8473, 0.3843, 0.2794], [0.4406, 0.0679, 0.1051]]], [[[0.3305, 0.1798, 0.8967], [0.2969, 0.6517, 0.9473]]], 2, 2, Dot66005), 
LMul81900 = multiply_layer([Con61520,Dot66005], Mul81900), 
LCon61397 = concatenate_layer([Mul81900,[[[0.5434, 0.3999, 0.0545, 0.3528, 0.5036, 0.0882], [0.9874, 0.2444, 0.5491, 0.2687, 0.4025, 0.0754]]]], 2, Con61397), 
LMul13133 = multiply_layer([Zer32556,Con61397], Mul13133), 
LZer85169 = zero_padding1D_layer(Mul13133, 1, 0, Zer85169), 
LMul51967 = multiply_layer([Con74042,Zer85169], Mul51967), 
exec_layers([LSub98937,LRes95956,LCon10788,LAve48500,LRes57275,LRes6739,LDot75538,LCon74042,LAve56192,LRes18784,LRes98418,LZer32556,LGlo90686,LRes53294,LRes5946,LCro57679,LRes23506,LZer27984,LCon61520,LDot66005,LMul81900,LCon61397,LMul13133,LZer85169,LMul51967],["Sub98937","Res95956","Con10788","Ave48500","Res57275","Res6739","Dot75538","Con74042","Ave56192","Res18784","Res98418","Zer32556","Glo90686","Res53294","Res5946","Cro57679","Res23506","Zer27984","Con61520","Dot66005","Mul81900","Con61397","Mul13133","Zer85169","Mul51967"],Mul51967,"Mul51967")

Actual (Unparsed): [[[0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000], [0.0010224, 0.0117736, 0.1342285, 0.1832617, 0.0141814, 0.0841945, 0.2012349, 0.0270733]]]

Expected (Unparsed): [[[0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0],[0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0],[0.0010224353708336252,0.011773628818660743,0.13422846924200002,0.18326165486199997,0.014181375078,0.084194476809,0.201234866,0.027073307975999994]]]

Actual:   [[[0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0], [0.0011, 0.0118, 0.1343, 0.1833, 0.0142, 0.0842, 0.2013, 0.0271]]]

Expected: [[[0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0], [0.0011, 0.0118, 0.1343, 0.1833, 0.0142, 0.0842, 0.2013, 0.0271]]]