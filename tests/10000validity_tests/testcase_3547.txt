import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Max600 = tf.keras.layers.Input(shape=([1, 2, 2]))
in1Max600 = tf.keras.layers.Input(shape=([1, 2, 2]))
in0Ave12382 = tf.keras.layers.Input(shape=([2, 1, 2]))
in1Ave12382 = tf.keras.layers.Input(shape=([2, 1, 2]))
in0Con90800 = tf.keras.layers.Input(shape=([4, 6, 3]))

Max600 = keras.layers.Maximum(name = 'Max600', )([in0Max600,in1Max600])
Res39426 = keras.layers.Reshape((1, 2, 2, 1), name = 'Res39426', )(Max600)
Zer43467 = keras.layers.ZeroPadding3D(padding=((1, 1), (1, 1), (1, 1)), name = 'Zer43467', )(Res39426)
Res51584 = keras.layers.Reshape((3, 4, 4), name = 'Res51584', )(Zer43467)
Zer1625 = keras.layers.ZeroPadding2D(padding=((1, 0), (2, 0)), name = 'Zer1625', )(Res51584)
Ave12382 = keras.layers.Average(name = 'Ave12382', )([in0Ave12382,in1Ave12382])
Res87611 = keras.layers.Reshape((2, 2), name = 'Res87611', )(Ave12382)
Up_19310 = keras.layers.UpSampling1D(size=(2), name = 'Up_19310', )(Res87611)
Res12291 = keras.layers.Reshape((4, 2, 1), name = 'Res12291', )(Up_19310)
PRe81908 = keras.layers.PReLU(name = 'PRe81908', )(Res12291)
Zer45045 = keras.layers.ZeroPadding2D(padding=((0, 0), (4, 0)), name = 'Zer45045', )(PRe81908)
Con90800 = keras.layers.Concatenate(axis=3, name = 'Con90800', )([Zer45045,in0Con90800])
Mul38088 = keras.layers.Multiply(name = 'Mul38088', )([Zer1625,Con90800])
model = tf.keras.models.Model(inputs=[in0Max600,in1Max600,in0Ave12382,in1Ave12382,in0Con90800], outputs=Mul38088)
w = model.get_layer('PRe81908').get_weights() 
w[0] = np.array([[[0.1624], [0.5119]], [[0.4996], [0.689]], [[0.4891], [0.4016]], [[0.7399], [0.7422]]])
model.get_layer('PRe81908').set_weights(w) 
in0Max600 = tf.constant([[[[0.6302, 0.0117], [0.6566, 0.0976]]]])
in1Max600 = tf.constant([[[[0.9426, 0.4371], [0.9852, 0.42]]]])
in0Ave12382 = tf.constant([[[[0.6052, 0.2147]], [[0.3092, 0.8226]]]])
in1Ave12382 = tf.constant([[[[0.7072, 0.0457]], [[0.6356, 0.9311]]]])
in0Con90800 = tf.constant([[[[0.0793, 0.2682, 0.3699], [0.2306, 0.5934, 0.7361], [0.8322, 0.3837, 0.0574], [0.7338, 0.731, 0.1927], [0.3002, 0.0459, 0.3384], [0.0602, 0.5197, 0.6898]], [[0.2672, 0.0563, 0.5052], [0.525, 0.1091, 0.9823], [0.2582, 0.2504, 0.2443], [0.4674, 0.4105, 0.5393], [0.7281, 0.8515, 0.2625], [0.5498, 0.0286, 0.6782]], [[0.8334, 0.9445, 0.9205], [0.5936, 0.0529, 0.8548], [0.022, 0.3278, 0.1076], [0.9335, 0.3057, 0.2206], [0.9992, 0.7534, 0.4083], [0.4461, 0.5752, 0.3298]], [[0.7201, 0.6908, 0.6454], [0.4718, 0.0426, 0.5417], [0.3118, 0.0018, 0.0693], [0.2544, 0.3097, 0.618], [0.0671, 0.8891, 0.9803], [0.3249, 0.9143, 0.0223]]]])
print (np.array2string(model.predict([in0Max600,in1Max600,in0Ave12382,in1Ave12382,in0Con90800],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Mul38088.png')

LMax600 = maximum_layer([[[[[0.6302, 0.0117], [0.6566, 0.0976]]]], [[[[0.9426, 0.4371], [0.9852, 0.42]]]]], Max600), 
LRes39426 = reshape_layer(Max600, [1, 2, 2, 1], Res39426), 
LZer43467 = zero_padding3D_layer(Res39426, 1, 1, 1, 1, 1, 1, Zer43467), 
LRes51584 = reshape_layer(Zer43467, [3, 4, 4], Res51584), 
LZer1625 = zero_padding2D_layer(Res51584, 1, 0, 2, 0, Zer1625), 
LAve12382 = average_layer([[[[[0.6052, 0.2147]], [[0.3092, 0.8226]]]], [[[[0.7072, 0.0457]], [[0.6356, 0.9311]]]]], Ave12382), 
LRes87611 = reshape_layer(Ave12382, [2, 2], Res87611), 
LUp_19310 = up_sampling1D_layer(Res87611, 2, Up_19310), 
LRes12291 = reshape_layer(Up_19310, [4, 2, 1], Res12291), 
LPRe81908 = prelu_layer(Res12291, [[[0.1624], [0.5119]], [[0.4996], [0.689]], [[0.4891], [0.4016]], [[0.7399], [0.7422]]], PRe81908), 
LZer45045 = zero_padding2D_layer(PRe81908, 0, 0, 4, 0, Zer45045), 
LCon90800 = concatenate_layer([Zer45045,[[[[0.0793, 0.2682, 0.3699], [0.2306, 0.5934, 0.7361], [0.8322, 0.3837, 0.0574], [0.7338, 0.731, 0.1927], [0.3002, 0.0459, 0.3384], [0.0602, 0.5197, 0.6898]], [[0.2672, 0.0563, 0.5052], [0.525, 0.1091, 0.9823], [0.2582, 0.2504, 0.2443], [0.4674, 0.4105, 0.5393], [0.7281, 0.8515, 0.2625], [0.5498, 0.0286, 0.6782]], [[0.8334, 0.9445, 0.9205], [0.5936, 0.0529, 0.8548], [0.022, 0.3278, 0.1076], [0.9335, 0.3057, 0.2206], [0.9992, 0.7534, 0.4083], [0.4461, 0.5752, 0.3298]], [[0.7201, 0.6908, 0.6454], [0.4718, 0.0426, 0.5417], [0.3118, 0.0018, 0.0693], [0.2544, 0.3097, 0.618], [0.0671, 0.8891, 0.9803], [0.3249, 0.9143, 0.0223]]]]], 3, Con90800), 
LMul38088 = multiply_layer([Zer1625,Con90800], Mul38088), 
exec_layers([LMax600,LRes39426,LZer43467,LRes51584,LZer1625,LAve12382,LRes87611,LUp_19310,LRes12291,LPRe81908,LZer45045,LCon90800,LMul38088],["Max600","Res39426","Zer43467","Res51584","Zer1625","Ave12382","Res87611","Up_19310","Res12291","PRe81908","Zer45045","Con90800","Mul38088"],Mul38088,"Mul38088")

Actual (Unparsed): [[[[0.0000000, 0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000, 0.0000000]], [[0.0000000, 0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000, 0.0000000]], [[0.0000000, 0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.8799171, 0.1336215, 0.0000000], [0.0000000, 0.9844118, 0.3164280, 0.0000000], [0.0000000, 0.0000000, 0.0000000, 0.0000000]], [[0.0000000, 0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000, 0.0000000]]]]

Expected (Unparsed): [[[[0,0.0,0.0,0.0],[0,0.0,0.0,0.0],[0,0.0,0.0,0.0],[0,0.0,0.0,0.0],[0.0,0.0,0.0,0.0],[0.0,0.0,0.0,0.0]],[[0,0.0,0.0,0.0],[0,0.0,0.0,0.0],[0,0.0,0.0,0.0],[0,0.0,0.0,0.0],[0.0,0.0,0.0,0.0],[0.0,0.0,0.0,0.0]],[[0,0.0,0.0,0.0],[0,0.0,0.0,0.0],[0,0.0,0.0,0.0],[0,0.8799171,0.13362147000000002,0.0],[0.0,0.9844118399999999,0.316428,0.0],[0.0,0.0,0.0,0.0]],[[0,0.0,0.0,0.0],[0,0.0,0.0,0.0],[0,0.0,0.0,0.0],[0,0.0,0.0,0.0],[0.0,0.0,0.0,0.0],[0.0,0.0,0.0,0.0]]]]

Actual:   [[[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]], [[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]], [[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0.88, 0.1337, 0], [0, 0.9845, 0.3165, 0], [0, 0, 0, 0]], [[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]]]

Expected: [[[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]], [[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]], [[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0.88, 0.1337, 0], [0, 0.9845, 0.3165, 0], [0, 0, 0, 0]], [[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]]]