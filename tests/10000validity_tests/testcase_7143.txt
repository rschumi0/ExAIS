import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Dot20101 = tf.keras.layers.Input(shape=([3, 3]))
in1Dot20101 = tf.keras.layers.Input(shape=([3, 3]))
in0Con10159 = tf.keras.layers.Input(shape=([5, 5, 1]))
in0Dot65766 = tf.keras.layers.Input(shape=([3, 3]))
in1Dot65766 = tf.keras.layers.Input(shape=([3, 3]))
in0Con39439 = tf.keras.layers.Input(shape=([5, 5, 1]))
in0Den50926 = tf.keras.layers.Input(shape=([5, 5, 2]))
in0ELU38314 = tf.keras.layers.Input(shape=([1, 2, 1]))
in0Con44264 = tf.keras.layers.Input(shape=([5, 5, 1]))

Dot20101 = keras.layers.Dot(axes=(1, 2), name = 'Dot20101', )([in0Dot20101,in1Dot20101])
Res12085 = keras.layers.Reshape((3, 3, 1), name = 'Res12085', )(Dot20101)
Zer15223 = keras.layers.ZeroPadding2D(padding=((2, 0), (2, 0)), name = 'Zer15223', )(Res12085)
Con10159 = keras.layers.Concatenate(axis=3, name = 'Con10159', )([Zer15223,in0Con10159])
Dot65766 = keras.layers.Dot(axes=(1, 2), name = 'Dot65766', )([in0Dot65766,in1Dot65766])
Res58429 = keras.layers.Reshape((3, 3, 1), name = 'Res58429', )(Dot65766)
Zer81430 = keras.layers.ZeroPadding2D(padding=((2, 0), (2, 0)), name = 'Zer81430', )(Res58429)
Con39439 = keras.layers.Concatenate(axis=3, name = 'Con39439', )([Zer81430,in0Con39439])
Den50926 = keras.layers.Dense(2,name = 'Den50926', )(in0Den50926)
ELU38314 = keras.layers.ELU(alpha=9.437242012722976, name = 'ELU38314', input_shape=(1, 2, 1))(in0ELU38314)
Zer91537 = keras.layers.ZeroPadding2D(padding=((4, 0), (3, 0)), name = 'Zer91537', )(ELU38314)
Con44264 = keras.layers.Concatenate(axis=3, name = 'Con44264', )([Zer91537,in0Con44264])
Max75417 = keras.layers.Maximum(name = 'Max75417', )([Den50926,Con44264])
Sub12527 = keras.layers.Subtract(name = 'Sub12527', )([Con39439,Max75417])
Add41138 = keras.layers.Add(name = 'Add41138', )([Con10159,Sub12527])
model = tf.keras.models.Model(inputs=[in0Dot20101,in1Dot20101,in0Con10159,in0Dot65766,in1Dot65766,in0Con39439,in0Den50926,in0ELU38314,in0Con44264], outputs=Add41138)
w = model.get_layer('Den50926').get_weights() 
w[0] = np.array([[0.4523, 0.6946], [0.5338, 0.0213]])
w[1] = np.array([0.3791, 0.3405])
model.get_layer('Den50926').set_weights(w) 
in0Dot20101 = tf.constant([[[0.0658, 0.6164, 0.0321], [0.8037, 0.2248, 0.0248], [0.9997, 0.9395, 0.7152]]])
in1Dot20101 = tf.constant([[[0.0245, 0.0576, 0.1022], [0.7433, 0.8579, 0.1345], [0.1602, 0.9004, 0.1497]]])
in0Con10159 = tf.constant([[[[0.8718], [0.7691], [0.9557], [0.5433], [0.3739]], [[0.2632], [0.6341], [0.1644], [0.3751], [0.0181]], [[0.7875], [0.8372], [0.878], [0.0006], [0.127]], [[0.9385], [0.156], [0.2951], [0.3519], [0.0385]], [[0.5184], [0.2365], [0.9248], [0.6103], [0.1506]]]])
in0Dot65766 = tf.constant([[[0.8279, 0.6242, 0.8677], [0.2316, 0.6712, 0.0793], [0.2612, 0.2358, 0.1771]]])
in1Dot65766 = tf.constant([[[0.0936, 0.8751, 0.9887], [0.3451, 0.852, 0.6675], [0.9532, 0.4826, 0.176]]])
in0Con39439 = tf.constant([[[[0.8923], [0.7924], [0.0057], [0.7984], [0.6345]], [[0.6087], [0.4804], [0.9235], [0.479], [0.5434]], [[0.9643], [0.9265], [0.4836], [0.1702], [0.2095]], [[0.6486], [0.399], [0.2697], [0.1171], [0.0349]], [[0.3598], [0.6225], [0.9048], [0.7701], [0.2305]]]])
in0Den50926 = tf.constant([[[[0.3195, 0.337], [0.2565, 0.17], [0.0961, 0.0165], [0.864, 0.4636], [0.0373, 0.1073]], [[0.0933, 0.9084], [0.2164, 0.854], [0.8307, 0.632], [0.9182, 0.011], [0.2615, 0.5494]], [[0.1077, 0.0354], [0.6127, 0.7924], [0.4893, 0.2276], [0.7891, 0.0279], [0.7866, 0.4154]], [[0.6655, 0.3044], [0.616, 0.9057], [0.1163, 0.8936], [0.4683, 0.1999], [0.086, 0.5727]], [[0.8684, 0.4089], [0.1345, 0.9333], [0.7385, 0.3917], [0.9284, 0.5945], [0.3552, 0.3884]]]])
in0ELU38314 = tf.constant([[[[0.0886], [0.649]]]])
in0Con44264 = tf.constant([[[[0.8058], [0.0882], [0.9511], [0.1543], [0.9518]], [[0.1824], [0.0965], [0.5405], [0.5484], [0.054]], [[0.898], [0.7302], [0.0333], [0.8507], [0.1497]], [[0.2107], [0.3207], [0.9429], [0.7955], [0.3249]], [[0.5353], [0.9984], [0.8528], [0.989], [0.9791]]]])
print (np.array2string(model.predict([in0Dot20101,in1Dot20101,in0Con10159,in0Dot65766,in1Dot65766,in0Con39439,in0Den50926,in0ELU38314,in0Con44264],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Add41138.png')

LDot20101 = dot_layer([[[0.0658, 0.6164, 0.0321], [0.8037, 0.2248, 0.0248], [0.9997, 0.9395, 0.7152]]], [[[0.0245, 0.0576, 0.1022], [0.7433, 0.8579, 0.1345], [0.1602, 0.9004, 0.1497]]], 1, 2, Dot20101), 
LRes12085 = reshape_layer(Dot20101, [3, 3, 1], Res12085), 
LZer15223 = zero_padding2D_layer(Res12085, 2, 0, 2, 0, Zer15223), 
LCon10159 = concatenate_layer([Zer15223,[[[[0.8718], [0.7691], [0.9557], [0.5433], [0.3739]], [[0.2632], [0.6341], [0.1644], [0.3751], [0.0181]], [[0.7875], [0.8372], [0.878], [0.0006], [0.127]], [[0.9385], [0.156], [0.2951], [0.3519], [0.0385]], [[0.5184], [0.2365], [0.9248], [0.6103], [0.1506]]]]], 3, Con10159), 
LDot65766 = dot_layer([[[0.8279, 0.6242, 0.8677], [0.2316, 0.6712, 0.0793], [0.2612, 0.2358, 0.1771]]], [[[0.0936, 0.8751, 0.9887], [0.3451, 0.852, 0.6675], [0.9532, 0.4826, 0.176]]], 1, 2, Dot65766), 
LRes58429 = reshape_layer(Dot65766, [3, 3, 1], Res58429), 
LZer81430 = zero_padding2D_layer(Res58429, 2, 0, 2, 0, Zer81430), 
LCon39439 = concatenate_layer([Zer81430,[[[[0.8923], [0.7924], [0.0057], [0.7984], [0.6345]], [[0.6087], [0.4804], [0.9235], [0.479], [0.5434]], [[0.9643], [0.9265], [0.4836], [0.1702], [0.2095]], [[0.6486], [0.399], [0.2697], [0.1171], [0.0349]], [[0.3598], [0.6225], [0.9048], [0.7701], [0.2305]]]]], 3, Con39439), 
LDen50926 = dense_layer([[[[0.3195, 0.337], [0.2565, 0.17], [0.0961, 0.0165], [0.864, 0.4636], [0.0373, 0.1073]], [[0.0933, 0.9084], [0.2164, 0.854], [0.8307, 0.632], [0.9182, 0.011], [0.2615, 0.5494]], [[0.1077, 0.0354], [0.6127, 0.7924], [0.4893, 0.2276], [0.7891, 0.0279], [0.7866, 0.4154]], [[0.6655, 0.3044], [0.616, 0.9057], [0.1163, 0.8936], [0.4683, 0.1999], [0.086, 0.5727]], [[0.8684, 0.4089], [0.1345, 0.9333], [0.7385, 0.3917], [0.9284, 0.5945], [0.3552, 0.3884]]]], [[0.4523, 0.6946], [0.5338, 0.0213]],[0.3791, 0.3405], Den50926), 
LELU38314 = elu_layer([[[[0.0886], [0.649]]]], 9.437242012722976, ELU38314), 
LZer91537 = zero_padding2D_layer(ELU38314, 4, 0, 3, 0, Zer91537), 
LCon44264 = concatenate_layer([Zer91537,[[[[0.8058], [0.0882], [0.9511], [0.1543], [0.9518]], [[0.1824], [0.0965], [0.5405], [0.5484], [0.054]], [[0.898], [0.7302], [0.0333], [0.8507], [0.1497]], [[0.2107], [0.3207], [0.9429], [0.7955], [0.3249]], [[0.5353], [0.9984], [0.8528], [0.989], [0.9791]]]]], 3, Con44264), 
LMax75417 = maximum_layer([Den50926,Con44264], Max75417), 
LSub12527 = subtract_layer(Con39439,Max75417, Sub12527), 
LAdd41138 = add_layer([Con10159,Sub12527], Add41138), 
exec_layers([LDot20101,LRes12085,LZer15223,LCon10159,LDot65766,LRes58429,LZer81430,LCon39439,LDen50926,LELU38314,LZer91537,LCon44264,LMax75417,LSub12527,LAdd41138],["Dot20101","Res12085","Zer15223","Con10159","Dot65766","Res58429","Zer81430","Con39439","Den50926","ELU38314","Zer91537","Con44264","Max75417","Sub12527","Add41138"],Add41138,"Add41138")

Actual (Unparsed): [[[[-0.7035005, 0.9583000], [-0.5858610, 1.0392141], [-0.4313737, 0.0103000], [-1.0173569, 0.3911909], [-0.4532475, 0.0566000]], [[-0.9062035, 0.4472449], [-0.9328429, 0.6054984], [-1.0921872, 0.1569342], [-0.8002737, -0.1244160], [-0.7906462, 0.0276599]], [[-0.4467092, 0.8538000], [-1.0792073, 0.9807405], [-0.0334157, 0.6763843], [0.7793426, -0.7184031], [0.8741236, -0.5592204]], [[-0.8425944, 0.7778600], [-1.1411795, -0.2326650], [0.0942887, -0.3781000], [1.0244404, -0.3265000], [0.6785046, -0.3390341]], [[-0.9901481, -0.0742002], [-0.9381299, -0.1394000], [-0.5211937, 0.9677947], [-0.4898081, 0.3823705], [0.2839843, -0.5980000]]]]

Expected (Unparsed): [[[[-0.7035004499999999,0.9583],[-0.58586095,1.0392141],[-0.43137373,0.010300000000000087],[-1.01735688,0.39119092],[-0.45324753,0.056599999999999984]],[[-0.9062035100000001,0.4472449],[-0.93284292,0.6054983599999999],[-1.09218721,0.15693418000000003],[-0.80027366,-0.12441602000000007],[-0.79064617,0.027659879999999967]],[[-0.44670923,0.8538],[-1.07920733,0.98074046],[-0.03341566999999998,0.6763843399999998],[0.77934256,-0.71840313],[0.8741236699999999,-0.55922038]],[[-0.84259437,0.77785998],[-1.14117946,-0.23266500999999998],[0.09428870999999989,-0.37810000000000005],[1.0244404,-0.3265],[0.67850465,-0.33903411000000006]],[[-0.99014814,-0.07420020999999999],[-0.93812989,-0.1393999999999999],[-0.5211937199999999,0.96779469],[-0.48980804999999994,0.3823705099999999],[0.2839843200000001,-0.5979999999999999]]]]

Actual:   [[[[-0.7035, 0.9583], [-0.5858, 1.0393], [-0.4313, 0.0103], [-1.0173, 0.3912], [-0.4532, 0.0566]], [[-0.9062, 0.4473], [-0.9328, 0.6055], [-1.0921, 0.157], [-0.8002, -0.1244], [-0.7906, 0.0277]], [[-0.4467, 0.8538], [-1.0792, 0.9808], [-0.0334, 0.6764], [0.7794, -0.7184], [0.8742, -0.5592]], [[-0.8425, 0.7779], [-1.1411, -0.2326], [0.0943, -0.3781], [1.0245, -0.3265], [0.6786, -0.339]], [[-0.9901, -0.0742], [-0.9381, -0.1394], [-0.5211, 0.9678], [-0.4898, 0.3824], [0.284, -0.598]]]]

Expected: [[[[-0.7035, 0.9583], [-0.5858, 1.0393], [-0.4313, 0.0104], [-1.0173, 0.3912], [-0.4532, 0.0566]], [[-0.9062, 0.4473], [-0.9328, 0.6055], [-1.0921, 0.157], [-0.8002, -0.1244], [-0.7906, 0.0277]], [[-0.4467, 0.8538], [-1.0792, 0.9808], [-0.0334, 0.6764], [0.7794, -0.7184], [0.8742, -0.5592]], [[-0.8425, 0.7779], [-1.1411, -0.2326], [0.0943, -0.3781], [1.0245, -0.3265], [0.6786, -0.339]], [[-0.9901, -0.0742], [-0.9381, -0.1393], [-0.5211, 0.9678], [-0.4898, 0.3824], [0.284, -0.5979]]]]