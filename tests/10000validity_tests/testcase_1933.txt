import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Dep54461 = tf.keras.layers.Input(shape=([1, 1, 2]))
in0Con59985 = tf.keras.layers.Input(shape=([2, 3, 2]))
in0Sub58142 = tf.keras.layers.Input(shape=([2, 3, 3]))
in1Sub58142 = tf.keras.layers.Input(shape=([2, 3, 3]))

Dep54461 = keras.layers.DepthwiseConv2D((1, 1),strides=(1, 1), padding='valid', name = 'Dep54461', )(in0Dep54461)
Res7772 = keras.layers.Reshape((1, 1, 2, 1), name = 'Res7772', )(Dep54461)
Glo75601 = keras.layers.GlobalAveragePooling3D(name = 'Glo75601', )(Res7772)
Res30370 = keras.layers.Reshape((1, 1), name = 'Res30370', )(Glo75601)
Res35382 = keras.layers.Reshape((1, 1, 1), name = 'Res35382', )(Res30370)
Zer13081 = keras.layers.ZeroPadding2D(padding=((1, 0), (2, 0)), name = 'Zer13081', )(Res35382)
Con59985 = keras.layers.Concatenate(axis=3, name = 'Con59985', )([Zer13081,in0Con59985])
Sub58142 = keras.layers.Subtract(name = 'Sub58142', )([in0Sub58142,in1Sub58142])
Ave12125 = keras.layers.Average(name = 'Ave12125', )([Con59985,Sub58142])
model = tf.keras.models.Model(inputs=[in0Dep54461,in0Con59985,in0Sub58142,in1Sub58142], outputs=Ave12125)
w = model.get_layer('Dep54461').get_weights() 
w[0] = np.array([[[[0.8346], [0.6937]]]])
w[1] = np.array([0, 0])
model.get_layer('Dep54461').set_weights(w) 
in0Dep54461 = tf.constant([[[[0.0059, 0.2269]]]])
in0Con59985 = tf.constant([[[[0.6768, 0.7388], [0.4062, 0.1548], [0.3744, 0.8835]], [[0.4313, 0.3854], [0.5558, 0.6024], [0.7243, 0.2243]]]])
in0Sub58142 = tf.constant([[[[0.6417, 0.9894, 0.6075], [0.9147, 0.2147, 0.318], [0.4092, 0.7483, 0.9657]], [[0.3159, 0.3885, 0.5027], [0.507, 0.4834, 0.7718], [0.9352, 0.0504, 0.1751]]]])
in1Sub58142 = tf.constant([[[[0.9047, 0.0607, 0.2307], [0.0661, 0.0426, 0.0189], [0.552, 0.2157, 0.4848]], [[0.6465, 0.4083, 0.3123], [0.3222, 0.6552, 0.6747], [0.7926, 0.5587, 0.0063]]]])
print (np.array2string(model.predict([in0Dep54461,in0Con59985,in0Sub58142,in1Sub58142],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Ave12125.png')

LDep54461 = depthwise_conv2D_layer([[[[0.0059, 0.2269]]]], 1, 1,[[[[0.8346], [0.6937]]]],[0, 0], 1, 1, false, Dep54461), 
LRes7772 = reshape_layer(Dep54461, [1, 1, 2, 1], Res7772), 
LGlo75601 = global_average_pooling3D_layer(Res7772, Glo75601), 
LRes30370 = reshape_layer(Glo75601, [1, 1], Res30370), 
LRes35382 = reshape_layer(Res30370, [1, 1, 1], Res35382), 
LZer13081 = zero_padding2D_layer(Res35382, 1, 0, 2, 0, Zer13081), 
LCon59985 = concatenate_layer([Zer13081,[[[[0.6768, 0.7388], [0.4062, 0.1548], [0.3744, 0.8835]], [[0.4313, 0.3854], [0.5558, 0.6024], [0.7243, 0.2243]]]]], 3, Con59985), 
LSub58142 = subtract_layer([[[[0.6417, 0.9894, 0.6075], [0.9147, 0.2147, 0.318], [0.4092, 0.7483, 0.9657]], [[0.3159, 0.3885, 0.5027], [0.507, 0.4834, 0.7718], [0.9352, 0.0504, 0.1751]]]], [[[[0.9047, 0.0607, 0.2307], [0.0661, 0.0426, 0.0189], [0.552, 0.2157, 0.4848]], [[0.6465, 0.4083, 0.3123], [0.3222, 0.6552, 0.6747], [0.7926, 0.5587, 0.0063]]]], Sub58142), 
LAve12125 = average_layer([Con59985,Sub58142], Ave12125), 
exec_layers([LDep54461,LRes7772,LGlo75601,LRes30370,LRes35382,LZer13081,LCon59985,LSub58142,LAve12125],["Dep54461","Res7772","Glo75601","Res30370","Res35382","Zer13081","Con59985","Sub58142","Ave12125"],Ave12125,"Ave12125")

Actual (Unparsed): [[[[-0.1315000, 0.8027500, 0.5578000], [0.4243000, 0.2891500, 0.2269500], [-0.0714000, 0.4535000, 0.6822000]], [[-0.1653000, 0.2057500, 0.2879000], [0.0924000, 0.1920000, 0.3497500], [0.1118812, 0.1080000, 0.1965500]]]]

Expected (Unparsed): [[[[-0.13149999999999995,0.80275,0.5578000000000001],[0.42429999999999995,0.28915,0.22695],[-0.07140000000000002,0.4535,0.6821999999999999]],[[-0.16529999999999997,0.20575000000000002,0.28790000000000004],[0.09240000000000001,0.19199999999999998,0.34975000000000006],[0.11188116750000002,0.10800000000000004,0.19655]]]]

Actual:   [[[[-0.1315, 0.8028, 0.5578], [0.4243, 0.2892, 0.227], [-0.0714, 0.4535, 0.6822]], [[-0.1653, 0.2058, 0.2879], [0.0924, 0.192, 0.3498], [0.1119, 0.108, 0.1966]]]]

Expected: [[[[-0.1314, 0.8028, 0.5579], [0.4243, 0.2892, 0.227], [-0.0714, 0.4535, 0.6822]], [[-0.1652, 0.2058, 0.288], [0.0925, 0.192, 0.3498], [0.1119, 0.1081, 0.1966]]]]