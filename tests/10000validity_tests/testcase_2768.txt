import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Add98675 = tf.keras.layers.Input(shape=([2, 2, 1]))
in1Add98675 = tf.keras.layers.Input(shape=([2, 2, 1]))
in0Zer77103 = tf.keras.layers.Input(shape=([3, 2]))
in0Con41469 = tf.keras.layers.Input(shape=([5, 2, 1]))
in0Ave54900 = tf.keras.layers.Input(shape=([1, 2, 2]))
in1Ave54900 = tf.keras.layers.Input(shape=([1, 2, 2]))

Add98675 = keras.layers.Add(name = 'Add98675', )([in0Add98675,in1Add98675])
Res6613 = keras.layers.Reshape((2, 2), name = 'Res6613', )(Add98675)
Ave33971 = keras.layers.AveragePooling1D(pool_size=(2), name = 'Ave33971', )(Res6613)
Zer78278 = keras.layers.ZeroPadding1D(padding=((4, 0)), name = 'Zer78278', )(Ave33971)
Zer77103 = keras.layers.ZeroPadding1D(padding=((1, 1)), name = 'Zer77103', )(in0Zer77103)
Mul81470 = keras.layers.Multiply(name = 'Mul81470', )([Zer78278,Zer77103])
Res87747 = keras.layers.Reshape((5, 2, 1), name = 'Res87747', )(Mul81470)
Con41469 = keras.layers.Concatenate(axis=3, name = 'Con41469', )([Res87747,in0Con41469])
Ave54900 = keras.layers.Average(name = 'Ave54900', )([in0Ave54900,in1Ave54900])
Zer70897 = keras.layers.ZeroPadding2D(padding=((4, 0), (0, 0)), name = 'Zer70897', )(Ave54900)
Add15343 = keras.layers.Add(name = 'Add15343', )([Con41469,Zer70897])
model = tf.keras.models.Model(inputs=[in0Add98675,in1Add98675,in0Zer77103,in0Con41469,in0Ave54900,in1Ave54900], outputs=Add15343)
in0Add98675 = tf.constant([[[[0.4282], [0.5732]], [[0.9741], [0.1203]]]])
in1Add98675 = tf.constant([[[[0.6761], [0.1785]], [[0.2981], [0.18]]]])
in0Zer77103 = tf.constant([[[1.8247, 1.9396], [1.7322, 1.4758], [1.3646, 1.7336]]])
in0Con41469 = tf.constant([[[[0.8017], [0.2407]], [[0.432], [0.5191]], [[0.9226], [0.9325]], [[0.3806], [0.1311]], [[0.7324], [0.054]]]])
in0Ave54900 = tf.constant([[[[0.2087, 0.1033], [0.8352, 0.8586]]]])
in1Ave54900 = tf.constant([[[[0.1268, 0.1086], [0.1542, 0.8181]]]])
print (np.array2string(model.predict([in0Add98675,in1Add98675,in0Zer77103,in0Con41469,in0Ave54900,in1Ave54900],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Add15343.png')

LAdd98675 = add_layer([[[[[0.4282], [0.5732]], [[0.9741], [0.1203]]]], [[[[0.6761], [0.1785]], [[0.2981], [0.18]]]]], Add98675), 
LRes6613 = reshape_layer(Add98675, [2, 2], Res6613), 
LAve33971 = average_pooling1D_layer(Res6613, 2, Ave33971), 
LZer78278 = zero_padding1D_layer(Ave33971, 4, 0, Zer78278), 
LZer77103 = zero_padding1D_layer([[[1.8247, 1.9396], [1.7322, 1.4758], [1.3646, 1.7336]]], 1, 1, Zer77103), 
LMul81470 = multiply_layer([Zer78278,Zer77103], Mul81470), 
LRes87747 = reshape_layer(Mul81470, [5, 2, 1], Res87747), 
LCon41469 = concatenate_layer([Res87747,[[[[0.8017], [0.2407]], [[0.432], [0.5191]], [[0.9226], [0.9325]], [[0.3806], [0.1311]], [[0.7324], [0.054]]]]], 3, Con41469), 
LAve54900 = average_layer([[[[[0.2087, 0.1033], [0.8352, 0.8586]]]], [[[[0.1268, 0.1086], [0.1542, 0.8181]]]]], Ave54900), 
LZer70897 = zero_padding2D_layer(Ave54900, 4, 0, 0, 0, Zer70897), 
LAdd15343 = add_layer([Con41469,Zer70897], Add15343), 
exec_layers([LAdd98675,LRes6613,LAve33971,LZer78278,LZer77103,LMul81470,LRes87747,LCon41469,LAve54900,LZer70897,LAdd15343],["Add98675","Res6613","Ave33971","Zer78278","Zer77103","Mul81470","Res87747","Con41469","Ave54900","Zer70897","Add15343"],Add15343,"Add15343")

Actual (Unparsed): [[[[0.0000000, 0.8017000], [0.0000000, 0.2407000]], [[0.0000000, 0.4320000], [0.0000000, 0.5191000]], [[0.0000000, 0.9226000], [0.0000000, 0.9325000]], [[0.0000000, 0.3806000], [0.0000000, 0.1311000]], [[0.1677500, 0.8383500], [0.4947000, 0.8923500]]]]

Expected (Unparsed): [[[[0,0.8017],[0,0.2407]],[[0.0,0.432],[0.0,0.5191]],[[0.0,0.9226],[0.0,0.9325]],[[0.0,0.3806],[0.0,0.1311]],[[0.16775,0.83835],[0.49470000000000003,0.8923500000000001]]]]

Actual:   [[[[0, 0.8017], [0, 0.2407]], [[0, 0.432], [0, 0.5191]], [[0, 0.9226], [0, 0.9325]], [[0, 0.3806], [0, 0.1311]], [[0.1678, 0.8384], [0.4947, 0.8924]]]]

Expected: [[[[0, 0.8017], [0, 0.2407]], [[0, 0.432], [0, 0.5191]], [[0, 0.9226], [0, 0.9325]], [[0, 0.3806], [0, 0.1311]], [[0.1678, 0.8384], [0.4948, 0.8924]]]]