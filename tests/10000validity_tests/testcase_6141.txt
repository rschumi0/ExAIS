import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Sub68284 = tf.keras.layers.Input(shape=([3]))
in1Sub68284 = tf.keras.layers.Input(shape=([3]))
in0Sub14361 = tf.keras.layers.Input(shape=([3]))
in1Sub14361 = tf.keras.layers.Input(shape=([3]))
in0Dot2159 = tf.keras.layers.Input(shape=([3]))
in1Dot2159 = tf.keras.layers.Input(shape=([3]))
in0Con92486 = tf.keras.layers.Input(shape=([4, 2, 2, 2]))
in0Up_46035 = tf.keras.layers.Input(shape=([3, 2, 2]))

Sub68284 = keras.layers.Subtract(name = 'Sub68284', )([in0Sub68284,in1Sub68284])
ELU95635 = keras.layers.ELU(alpha=4.1231417020097965, name = 'ELU95635', )(Sub68284)
Res78181 = keras.layers.Reshape((3, 1), name = 'Res78181', )(ELU95635)
Res59576 = keras.layers.Reshape((3, 1, 1), name = 'Res59576', )(Res78181)
Sub14361 = keras.layers.Subtract(name = 'Sub14361', )([in0Sub14361,in1Sub14361])
Res61260 = keras.layers.Reshape((3, 1), name = 'Res61260', )(Sub14361)
Res13783 = keras.layers.Reshape((3, 1, 1), name = 'Res13783', )(Res61260)
Max94357 = keras.layers.MaxPool2D(pool_size=(3, 1), strides=(1, 1), padding='valid', name = 'Max94357', )(Res13783)
Zer85087 = keras.layers.ZeroPadding2D(padding=((2, 0), (0, 0)), name = 'Zer85087', )(Max94357)
Min3025 = keras.layers.Minimum(name = 'Min3025', )([Res59576,Zer85087])
Res62766 = keras.layers.Reshape((3, 1), name = 'Res62766', )(Min3025)
Dot2159 = keras.layers.Dot(axes=(1, 1), name = 'Dot2159', )([in0Dot2159,in1Dot2159])
Res79021 = keras.layers.Reshape((1, 1), name = 'Res79021', )(Dot2159)
Ave82254 = keras.layers.AveragePooling1D(pool_size=(1), name = 'Ave82254', )(Res79021)
Dot61392 = keras.layers.Dot(axes=(2, 2), name = 'Dot61392', )([Res62766,Ave82254])
Res64820 = keras.layers.Reshape((3, 1, 1), name = 'Res64820', )(Dot61392)
Res67868 = keras.layers.Reshape((3, 1, 1, 1), name = 'Res67868', )(Res64820)
Zer98561 = keras.layers.ZeroPadding3D(padding=((1, 0), (1, 0), (1, 0)), name = 'Zer98561', )(Res67868)
Con92486 = keras.layers.Concatenate(axis=4, name = 'Con92486', )([Zer98561,in0Con92486])
Up_46035 = keras.layers.UpSampling2D(size=(2, 1), name = 'Up_46035', )(in0Up_46035)
Res48834 = keras.layers.Reshape((6, 2, 2, 1), name = 'Res48834', )(Up_46035)
Con34741 = keras.layers.Conv3D(3, (3, 1, 1),strides=(1, 1, 1), padding='valid', dilation_rate=(1, 1, 1), name = 'Con34741', )(Res48834)
Sub79450 = keras.layers.Subtract(name = 'Sub79450', )([Con92486,Con34741])
model = tf.keras.models.Model(inputs=[in0Sub68284,in1Sub68284,in0Sub14361,in1Sub14361,in0Dot2159,in1Dot2159,in0Con92486,in0Up_46035], outputs=Sub79450)
w = model.get_layer('Con34741').get_weights() 
w[0] = np.array([[[[[0.428, 0.2763, 0.4315]]]], [[[[0.1963, 0.3606, 0.8868]]]], [[[[0.1942, 0.164, 0.7273]]]]])
w[1] = np.array([0, 0, 0])
model.get_layer('Con34741').set_weights(w) 
in0Sub68284 = tf.constant([[0.2441, 0.2842, 0.1897]])
in1Sub68284 = tf.constant([[0.6155, 0.2294, 0.4243]])
in0Sub14361 = tf.constant([[0.8383, 0.172, 0.9075]])
in1Sub14361 = tf.constant([[0.8469, 0.7055, 0.3295]])
in0Dot2159 = tf.constant([[0.8202, 0.2678, 0.9755]])
in1Dot2159 = tf.constant([[0.108, 0.1808, 0.0462]])
in0Con92486 = tf.constant([[[[[0.6796, 0.0136], [0.3795, 0.1205]], [[0.6441, 0.0545], [0.0584, 0.0694]]], [[[0.9311, 0.8175], [0.8953, 0.5188]], [[0.4713, 0.3615], [0.5763, 0.4892]]], [[[0.0896, 0.6218], [0.1623, 0.115]], [[0.2839, 0.405], [0.5937, 0.3842]]], [[[0.3549, 0.4099], [0.3513, 0.715]], [[0.5418, 0.8551], [0.1103, 0.1163]]]]])
in0Up_46035 = tf.constant([[[[1.4091, 1.622], [1.4128, 1.6187]], [[1.9813, 1.2207], [1.8539, 1.8233]], [[1.1165, 1.9961], [1.5758, 1.3448]]]])
print (np.array2string(model.predict([in0Sub68284,in1Sub68284,in0Sub14361,in1Sub14361,in0Dot2159,in1Dot2159,in0Con92486,in0Up_46035],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Sub79450.png')

LSub68284 = subtract_layer([[0.2441, 0.2842, 0.1897]], [[0.6155, 0.2294, 0.4243]], Sub68284), 
LELU95635 = elu_layer(Sub68284, 4.1231417020097965, ELU95635), 
LRes78181 = reshape_layer(ELU95635, [3, 1], Res78181), 
LRes59576 = reshape_layer(Res78181, [3, 1, 1], Res59576), 
LSub14361 = subtract_layer([[0.8383, 0.172, 0.9075]], [[0.8469, 0.7055, 0.3295]], Sub14361), 
LRes61260 = reshape_layer(Sub14361, [3, 1], Res61260), 
LRes13783 = reshape_layer(Res61260, [3, 1, 1], Res13783), 
LMax94357 = max_pool2D_layer(Res13783, 3, 1, 1, 1, false, Max94357), 
LZer85087 = zero_padding2D_layer(Max94357, 2, 0, 0, 0, Zer85087), 
LMin3025 = minimum_layer([Res59576,Zer85087], Min3025), 
LRes62766 = reshape_layer(Min3025, [3, 1], Res62766), 
LDot2159 = dot_layer([[0.8202, 0.2678, 0.9755]], [[0.108, 0.1808, 0.0462]], 1, 1, Dot2159), 
LRes79021 = reshape_layer(Dot2159, [1, 1], Res79021), 
LAve82254 = average_pooling1D_layer(Res79021, 1, Ave82254), 
LDot61392 = dot_layer(Res62766,Ave82254, 2, 2, Dot61392), 
LRes64820 = reshape_layer(Dot61392, [3, 1, 1], Res64820), 
LRes67868 = reshape_layer(Res64820, [3, 1, 1, 1], Res67868), 
LZer98561 = zero_padding3D_layer(Res67868, 1, 0, 1, 0, 1, 0, Zer98561), 
LCon92486 = concatenate_layer([Zer98561,[[[[[0.6796, 0.0136], [0.3795, 0.1205]], [[0.6441, 0.0545], [0.0584, 0.0694]]], [[[0.9311, 0.8175], [0.8953, 0.5188]], [[0.4713, 0.3615], [0.5763, 0.4892]]], [[[0.0896, 0.6218], [0.1623, 0.115]], [[0.2839, 0.405], [0.5937, 0.3842]]], [[[0.3549, 0.4099], [0.3513, 0.715]], [[0.5418, 0.8551], [0.1103, 0.1163]]]]]], 4, Con92486), 
LUp_46035 = up_sampling2D_layer([[[[1.4091, 1.622], [1.4128, 1.6187]], [[1.9813, 1.2207], [1.8539, 1.8233]], [[1.1165, 1.9961], [1.5758, 1.3448]]]], 2, 1, Up_46035), 
LRes48834 = reshape_layer(Up_46035, [6, 2, 2, 1], Res48834), 
LCon34741 = conv3D_layer(Res48834, 3, 1, 1,[[[[[0.428, 0.2763, 0.4315]]]], [[[[0.1963, 0.3606, 0.8868]]]], [[[[0.1942, 0.164, 0.7273]]]]],[0, 0, 0], 1, 1, 1, false, 1, 1, 1, Con34741), 
LSub79450 = subtract_layer(Con92486,Con34741, Sub79450), 
exec_layers([LSub68284,LELU95635,LRes78181,LRes59576,LSub14361,LRes61260,LRes13783,LMax94357,LZer85087,LMin3025,LRes62766,LDot2159,LRes79021,LAve82254,LDot61392,LRes64820,LRes67868,LZer98561,LCon92486,LUp_46035,LRes48834,LCon34741,LSub79450],["Sub68284","ELU95635","Res78181","Res59576","Sub14361","Res61260","Res13783","Max94357","Zer85087","Min3025","Res62766","Dot2159","Res79021","Ave82254","Dot61392","Res64820","Res67868","Zer98561","Con92486","Up_46035","Res48834","Con34741","Sub79450"],Sub79450,"Sub79450")

Actual (Unparsed): [[[[[-1.2644696, -0.5427890, -3.2850161], [-1.2496745, -0.8537466, -2.9055977]], [[-1.2420384, -0.5597519, -3.1563356], [-1.3646393, -1.2715712, -3.3906183]]], [[[-1.3767925, -0.4976243, -2.9885430], [-1.1708994, -0.1932379, -2.1514249]], [[-1.3286263, -0.8916125, -3.2405031], [-1.6376909, -0.8274500, -3.1522576]]], [[[-1.4537499, -1.3553960, -2.8021782], [-1.1497256, -0.9425242, -2.9460123]], [[-1.4634101, -1.1552801, -3.1850756], [-1.3994464, -0.7881070, -2.9975294]]], [[[-1.2839897, -0.7782491, -2.2471736], [-1.3019366, -1.0331334, -3.0336370]], [[-1.4088191, -0.7970972, -2.4883565], [-1.4624961, -1.0989599, -2.8410956]]]]]

Expected (Unparsed): [[[[[-1.26446959,-0.54278899,-3.28501602],[-1.24967454,-0.8537466,-2.9055977100000003]],[[-1.24203842,-0.55975192,-3.1563357100000005],[-1.3646392699999998,-1.27157123,-3.3906183]]],[[[-1.3767924500000002,-0.49762430999999996,-2.98854298],[-1.17089935,-0.19323782,-2.1514248699999996]],[[-1.3286263500000002,-0.8916125800000001,-3.2405031900000005],[-1.6376909201192165,-0.8274499899999996,-3.15225758]]],[[[-1.45374989,-1.35539597,-2.8021782400000004],[-1.1497256299999998,-0.9425242299999997,-2.9460123399999993]],[[-1.46341013,-1.15528011,-3.1850757100000004],[-1.39944635,-0.78810697,-2.99752943]]],[[[-1.28398965,-0.7782490900000001,-2.2471736],[-1.30193665,-1.0331334699999999,-3.03363706]],[[-1.4088190999999999,-0.7970972500000001,-2.48835663],[-1.4624961326184993,-1.0989598699999998,-2.84109563]]]]]

Actual:   [[[[[-1.2644, -0.5427, -3.285], [-1.2496, -0.8537, -2.9055]], [[-1.242, -0.5597, -3.1563], [-1.3646, -1.2715, -3.3906]]], [[[-1.3767, -0.4976, -2.9885], [-1.1708, -0.1932, -2.1514]], [[-1.3286, -0.8916, -3.2405], [-1.6376, -0.8274, -3.1522]]], [[[-1.4537, -1.3553, -2.8021], [-1.1497, -0.9425, -2.946]], [[-1.4634, -1.1552, -3.185], [-1.3994, -0.7881, -2.9975]]], [[[-1.2839, -0.7782, -2.2471], [-1.3019, -1.0331, -3.0336]], [[-1.4088, -0.797, -2.4883], [-1.4624, -1.0989, -2.841]]]]]

Expected: [[[[[-1.2644, -0.5427, -3.285], [-1.2496, -0.8537, -2.9055]], [[-1.242, -0.5597, -3.1563], [-1.3646, -1.2715, -3.3906]]], [[[-1.3767, -0.4976, -2.9885], [-1.1708, -0.1932, -2.1514]], [[-1.3286, -0.8916, -3.2405], [-1.6376, -0.8274, -3.1522]]], [[[-1.4537, -1.3553, -2.8021], [-1.1497, -0.9425, -2.946]], [[-1.4634, -1.1552, -3.185], [-1.3994, -0.7881, -2.9975]]], [[[-1.2839, -0.7782, -2.2471], [-1.3019, -1.0331, -3.0336]], [[-1.4088, -0.797, -2.4883], [-1.4624, -1.0989, -2.841]]]]]