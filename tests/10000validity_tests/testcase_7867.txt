import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Mul92443 = tf.keras.layers.Input(shape=([1, 1]))
in1Mul92443 = tf.keras.layers.Input(shape=([1, 1]))

Mul92443 = keras.layers.Multiply(name = 'Mul92443', )([in0Mul92443,in1Mul92443])
Res98861 = keras.layers.Reshape((1, 1, 1), name = 'Res98861', )(Mul92443)
Loc89900 = keras.layers.LocallyConnected2D(3, (1, 1),strides=(1, 1), name = 'Loc89900', )(Res98861)
Mas43877 = keras.layers.Masking(mask_value=2, name = 'Mas43877', )(Loc89900)
model = tf.keras.models.Model(inputs=[in0Mul92443,in1Mul92443], outputs=Mas43877)
w = model.get_layer('Loc89900').get_weights() 
w[0] = np.array([[[0.2665, 0.9256, 0.6005]]])
w[1] = np.array([[[0, 0, 0]]])
model.get_layer('Loc89900').set_weights(w) 
in0Mul92443 = tf.constant([[[0.3241]]])
in1Mul92443 = tf.constant([[[0.9436]]])
print (np.array2string(model.predict([in0Mul92443,in1Mul92443],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Mas43877.png')

LMul92443 = multiply_layer([[[[0.3241]]], [[[0.9436]]]], Mul92443), 
LRes98861 = reshape_layer(Mul92443, [1, 1, 1], Res98861), 
LLoc89900 = locally_connected2D_layer(Res98861, 1, 1,[[[0.2665, 0.9256, 0.6005]]],[[[0, 0, 0]]], 1, 1, Loc89900), 
LMas43877 = masking_layer(Loc89900, 2, Mas43877), 
exec_layers([LMul92443,LRes98861,LLoc89900,LMas43877],["Mul92443","Res98861","Loc89900","Mas43877"],Mas43877,"Mas43877")

Actual (Unparsed): [[[[0.0815012, 0.2830677, 0.1836454]]]]

Expected (Unparsed): [[[[0.08150123254000001,0.283067695456,0.18364536638000004]]]]

Actual:   [[[[0.0816, 0.2831, 0.1837]]]]

Expected: [[[[0.0816, 0.2831, 0.1837]]]]