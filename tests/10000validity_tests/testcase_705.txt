import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Con96937 = tf.keras.layers.Input(shape=([1, 2, 2]))
in0Ave79735 = tf.keras.layers.Input(shape=([2, 1, 2]))
in1Ave79735 = tf.keras.layers.Input(shape=([2, 1, 2]))
in0Cro76012 = tf.keras.layers.Input(shape=([4, 2, 3, 1]))
in0Con69466 = tf.keras.layers.Input(shape=([4, 3, 6, 2]))

Con96937 = keras.layers.Conv2DTranspose(4, (1, 2),strides=(1, 1), padding='same', name = 'Con96937', )(in0Con96937)
Res35737 = keras.layers.Reshape((1, 2, 4, 1), name = 'Res35737', )(Con96937)
Con76438 = keras.layers.Conv3DTranspose(3, (1, 1, 1),strides=(1, 1, 1), padding='same', name = 'Con76438', )(Res35737)
Zer98863 = keras.layers.ZeroPadding3D(padding=((3, 0), (1, 0), (2, 0)), name = 'Zer98863', )(Con76438)
Ave79735 = keras.layers.Average(name = 'Ave79735', )([in0Ave79735,in1Ave79735])
Res4711 = keras.layers.Reshape((2, 1, 2, 1), name = 'Res4711', )(Ave79735)
Zer90365 = keras.layers.ZeroPadding3D(padding=((2, 0), (0, 0), (0, 0)), name = 'Zer90365', )(Res4711)
Cro76012 = keras.layers.Cropping3D(cropping=((0, 0), (1, 0), (1, 0)), name = 'Cro76012', )(in0Cro76012)
Mul20690 = keras.layers.Multiply(name = 'Mul20690', )([Zer90365,Cro76012])
Zer9552 = keras.layers.ZeroPadding3D(padding=((0, 0), (2, 0), (4, 0)), name = 'Zer9552', )(Mul20690)
Con69466 = keras.layers.Concatenate(axis=4, name = 'Con69466', )([Zer9552,in0Con69466])
Max4590 = keras.layers.Maximum(name = 'Max4590', )([Zer98863,Con69466])
model = tf.keras.models.Model(inputs=[in0Con96937,in0Ave79735,in1Ave79735,in0Cro76012,in0Con69466], outputs=Max4590)
w = model.get_layer('Con96937').get_weights() 
w[0] = np.array([[[[0.6048, 0.9346], [0.5485, 0.0418], [0.2156, 0.4454], [0.3204, 0.5067]], [[0.5306, 0.0206], [0.1482, 0.6608], [0.7296, 0.1621], [0.6268, 0.0226]]]])
w[1] = np.array([0, 0, 0, 0])
model.get_layer('Con96937').set_weights(w) 
w = model.get_layer('Con76438').get_weights() 
w[0] = np.array([[[[[0.3048], [0.9053], [0.7226]]]]])
w[1] = np.array([0, 0, 0])
model.get_layer('Con76438').set_weights(w) 
in0Con96937 = tf.constant([[[[0.2275, 0.387], [0.0404, 0.3703]]]])
in0Ave79735 = tf.constant([[[[0.1799, 0.756]], [[0.9977, 0.9788]]]])
in1Ave79735 = tf.constant([[[[0.5177, 0.0509]], [[0.9066, 0.3309]]]])
in0Cro76012 = tf.constant([[[[[1.7474], [1.4348], [1.4344]], [[1.8582], [1.7873], [1.0988]]], [[[1.4526], [1.337], [1.4116]], [[1.8142], [1.9589], [1.7301]]], [[[1.4671], [1.8077], [1.6529]], [[1.208], [1.5606], [1.5542]]], [[[1.1456], [1.7766], [1.8608]], [[1.9443], [1.6181], [1.3159]]]]])
in0Con69466 = tf.constant([[[[[0.3101, 0.316], [0.0733, 0.0378], [0.4375, 0.1507], [0.9115, 0.2832], [0.4725, 0.0781], [0.5961, 0.8207]], [[0.991, 0.3445], [0.2089, 0.4467], [0.1234, 0.5694], [0.8116, 0.3385], [0.891, 0.0192], [0.2995, 0.1288]], [[0.6345, 0.4265], [0.965, 0.6502], [0.8099, 0.5605], [0.2268, 0.7204], [0.5493, 0.6556], [0.7426, 0.5109]]], [[[0.03, 0.4968], [0.9115, 0.4986], [0.8777, 0.4309], [0.5926, 0.7316], [0.543, 0.8215], [0.7212, 0.1608]], [[0.829, 0.4981], [0.3862, 0.0839], [0.5284, 0.5657], [0.8481, 0.3282], [0.4275, 0.5326], [0.9217, 0.6605]], [[0.7781, 0.0918], [0.128, 0.0523], [0.7002, 0.0496], [0.0256, 0.8503], [0.8832, 0.8311], [0.1749, 0.6114]]], [[[0.3793, 0.7136], [0.2553, 0.3389], [0.2493, 0.4397], [0.9645, 0.1309], [0.3096, 0.1446], [0.4562, 0.7951]], [[0.2573, 0.593], [0.2422, 0.8133], [0.0037, 0.5702], [0.6786, 0.1533], [0.1349, 0.8931], [0.3858, 0.8121]], [[0.0348, 0.9186], [0.2066, 0.6512], [0.357, 0.611], [0.6026, 0.0368], [0.2106, 0.2032], [0.7044, 0.0342]]], [[[0.6398, 0.2365], [0.5881, 0.4213], [0.717, 0.2938], [0.7327, 0.5854], [0.8457, 0.0588], [0.0264, 0.4436]], [[0.6753, 0.4239], [0.1403, 0.8927], [0.3649, 0.2495], [0.5608, 0.9296], [0.8034, 0.0309], [0.0839, 0.512]], [[0.7916, 0.1716], [0.1139, 0.4285], [0.1225, 0.7769], [0.6798, 0.937], [0.9591, 0.887], [0.6852, 0.6924]]]]])
print (np.array2string(model.predict([in0Con96937,in0Ave79735,in1Ave79735,in0Cro76012,in0Con69466],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Max4590.png')

LCon96937 = conv2D_transpose_layer([[[[0.2275, 0.387], [0.0404, 0.3703]]]], 1, 2,[[[[0.6048, 0.9346], [0.5485, 0.0418], [0.2156, 0.4454], [0.3204, 0.5067]], [[0.5306, 0.0206], [0.1482, 0.6608], [0.7296, 0.1621], [0.6268, 0.0226]]]],[0, 0, 0, 0], 1, 1, true, Con96937), 
LRes35737 = reshape_layer(Con96937, [1, 2, 4, 1], Res35737), 
LCon76438 = conv3D_transpose_layer(Res35737, 1, 1, 1,[[[[[0.3048], [0.9053], [0.7226]]]]],[0, 0, 0], 1, 1, 1, true, Con76438), 
LZer98863 = zero_padding3D_layer(Con76438, 3, 0, 1, 0, 2, 0, Zer98863), 
LAve79735 = average_layer([[[[[0.1799, 0.756]], [[0.9977, 0.9788]]]], [[[[0.5177, 0.0509]], [[0.9066, 0.3309]]]]], Ave79735), 
LRes4711 = reshape_layer(Ave79735, [2, 1, 2, 1], Res4711), 
LZer90365 = zero_padding3D_layer(Res4711, 2, 0, 0, 0, 0, 0, Zer90365), 
LCro76012 = cropping3D_layer([[[[[1.7474], [1.4348], [1.4344]], [[1.8582], [1.7873], [1.0988]]], [[[1.4526], [1.337], [1.4116]], [[1.8142], [1.9589], [1.7301]]], [[[1.4671], [1.8077], [1.6529]], [[1.208], [1.5606], [1.5542]]], [[[1.1456], [1.7766], [1.8608]], [[1.9443], [1.6181], [1.3159]]]]], 0, 0, 1, 0, 1, 0, Cro76012), 
LMul20690 = multiply_layer([Zer90365,Cro76012], Mul20690), 
LZer9552 = zero_padding3D_layer(Mul20690, 0, 0, 2, 0, 4, 0, Zer9552), 
LCon69466 = concatenate_layer([Zer9552,[[[[[0.3101, 0.316], [0.0733, 0.0378], [0.4375, 0.1507], [0.9115, 0.2832], [0.4725, 0.0781], [0.5961, 0.8207]], [[0.991, 0.3445], [0.2089, 0.4467], [0.1234, 0.5694], [0.8116, 0.3385], [0.891, 0.0192], [0.2995, 0.1288]], [[0.6345, 0.4265], [0.965, 0.6502], [0.8099, 0.5605], [0.2268, 0.7204], [0.5493, 0.6556], [0.7426, 0.5109]]], [[[0.03, 0.4968], [0.9115, 0.4986], [0.8777, 0.4309], [0.5926, 0.7316], [0.543, 0.8215], [0.7212, 0.1608]], [[0.829, 0.4981], [0.3862, 0.0839], [0.5284, 0.5657], [0.8481, 0.3282], [0.4275, 0.5326], [0.9217, 0.6605]], [[0.7781, 0.0918], [0.128, 0.0523], [0.7002, 0.0496], [0.0256, 0.8503], [0.8832, 0.8311], [0.1749, 0.6114]]], [[[0.3793, 0.7136], [0.2553, 0.3389], [0.2493, 0.4397], [0.9645, 0.1309], [0.3096, 0.1446], [0.4562, 0.7951]], [[0.2573, 0.593], [0.2422, 0.8133], [0.0037, 0.5702], [0.6786, 0.1533], [0.1349, 0.8931], [0.3858, 0.8121]], [[0.0348, 0.9186], [0.2066, 0.6512], [0.357, 0.611], [0.6026, 0.0368], [0.2106, 0.2032], [0.7044, 0.0342]]], [[[0.6398, 0.2365], [0.5881, 0.4213], [0.717, 0.2938], [0.7327, 0.5854], [0.8457, 0.0588], [0.0264, 0.4436]], [[0.6753, 0.4239], [0.1403, 0.8927], [0.3649, 0.2495], [0.5608, 0.9296], [0.8034, 0.0309], [0.0839, 0.512]], [[0.7916, 0.1716], [0.1139, 0.4285], [0.1225, 0.7769], [0.6798, 0.937], [0.9591, 0.887], [0.6852, 0.6924]]]]]], 4, Con69466), 
LMax4590 = maximum_layer([Zer98863,Con69466], Max4590), 
exec_layers([LCon96937,LRes35737,LCon76438,LZer98863,LAve79735,LRes4711,LZer90365,LCro76012,LMul20690,LZer9552,LCon69466,LMax4590],["Con96937","Res35737","Con76438","Zer98863","Ave79735","Res4711","Zer90365","Cro76012","Mul20690","Zer9552","Con69466","Max4590"],Max4590,"Max4590")

Actual (Unparsed): [[[[[0.0000000, 0.3101000, 0.3160000], [0.0000000, 0.0733000, 0.0378000], [0.0000000, 0.4375000, 0.1507000], [0.0000000, 0.9115000, 0.2832000], [0.0000000, 0.4725000, 0.0781000], [0.0000000, 0.5961000, 0.8207000]], [[0.0000000, 0.9910000, 0.3445000], [0.0000000, 0.2089000, 0.4467000], [0.0000000, 0.1234000, 0.5694000], [0.0000000, 0.8116000, 0.3385000], [0.0000000, 0.8910000, 0.0192000], [0.0000000, 0.2995000, 0.1288000]], [[0.0000000, 0.6345000, 0.4265000], [0.0000000, 0.9650000, 0.6502000], [0.0000000, 0.8099000, 0.5605000], [0.0000000, 0.2268000, 0.7204000], [0.0000000, 0.5493000, 0.6556000], [0.0000000, 0.7426000, 0.5109000]]], [[[0.0000000, 0.0300000, 0.4968000], [0.0000000, 0.9115000, 0.4986000], [0.0000000, 0.8777000, 0.4309000], [0.0000000, 0.5926000, 0.7316000], [0.0000000, 0.5430000, 0.8215000], [0.0000000, 0.7212000, 0.1608000]], [[0.0000000, 0.8290000, 0.4981000], [0.0000000, 0.3862000, 0.0839000], [0.0000000, 0.5284000, 0.5657000], [0.0000000, 0.8481000, 0.3282000], [0.0000000, 0.4275000, 0.5326000], [0.0000000, 0.9217000, 0.6605000]], [[0.0000000, 0.7781000, 0.0918000], [0.0000000, 0.1280000, 0.0523000], [0.0000000, 0.7002000, 0.0496000], [0.0000000, 0.0256000, 0.8503000], [0.0000000, 0.8832000, 0.8311000], [0.0000000, 0.1749000, 0.6114000]]], [[[0.0000000, 0.3793000, 0.7136000], [0.0000000, 0.2553000, 0.3389000], [0.0000000, 0.2493000, 0.4397000], [0.0000000, 0.9645000, 0.1309000], [0.0000000, 0.3096000, 0.1446000], [0.0000000, 0.4562000, 0.7951000]], [[0.0000000, 0.2573000, 0.5930000], [0.0000000, 0.2422000, 0.8133000], [0.0000000, 0.0037000, 0.5702000], [0.0000000, 0.6786000, 0.1533000], [0.0000000, 0.1349000, 0.8931000], [0.0000000, 0.3858000, 0.8121000]], [[0.0000000, 0.0348000, 0.9186000], [0.0000000, 0.2066000, 0.6512000], [0.0000000, 0.3570000, 0.6110000], [0.0000000, 0.6026000, 0.0368000], [0.5443373, 0.2106000, 0.2032000], [0.6270420, 0.7044000, 0.0342000]]], [[[0.0000000, 0.6398000, 0.2365000], [0.0000000, 0.5881000, 0.4213000], [0.0000000, 0.7170000, 0.2938000], [0.0000000, 0.7327000, 0.5854000], [0.0000000, 0.8457000, 0.0588000], [0.0000000, 0.0264000, 0.4436000]], [[0.0000000, 0.6753000, 0.4239000], [0.0000000, 0.1403000, 0.8927000], [0.1521812, 0.4520002, 0.3607813], [0.0429647, 0.5608000, 0.9296000], [0.0674884, 0.8034000, 0.1599972], [0.0819863, 0.2435111, 0.5120000]], [[0.0000000, 0.7916000, 0.1716000], [0.0000000, 0.1139000, 0.4285000], [0.1521562, 0.4519258, 0.7769000], [0.0996949, 0.6798000, 0.9370000], [1.5406739, 0.9591000, 0.8870000], [0.8617171, 0.6852000, 0.6924000]]]]]

Expected (Unparsed): [[[[[0,0.3101,0.316],[0,0.0733,0.0378],[0,0.4375,0.1507],[0,0.9115,0.2832],[0,0.4725,0.0781],[0,0.5961,0.8207]],[[0,0.991,0.3445],[0,0.2089,0.4467],[0,0.1234,0.5694],[0,0.8116,0.3385],[0,0.891,0.0192],[0,0.2995,0.1288]],[[0,0.6345,0.4265],[0,0.965,0.6502],[0,0.8099,0.5605],[0,0.2268,0.7204],[0,0.5493,0.6556],[0,0.7426,0.5109]]],[[[0,0.03,0.4968],[0,0.9115,0.4986],[0,0.8777,0.4309],[0,0.5926,0.7316],[0,0.543,0.8215],[0,0.7212,0.1608]],[[0,0.829,0.4981],[0,0.3862,0.0839],[0,0.5284,0.5657],[0,0.8481,0.3282],[0,0.4275,0.5326],[0,0.9217,0.6605]],[[0,0.7781,0.0918],[0,0.128,0.0523],[0,0.7002,0.0496],[0,0.0256,0.8503],[0,0.8832,0.8311],[0,0.1749,0.6114]]],[[[0,0.3793,0.7136],[0,0.2553,0.3389],[0,0.2493,0.4397],[0,0.9645,0.1309],[0,0.3096,0.1446],[0,0.4562,0.7951]],[[0,0.2573,0.593],[0,0.2422,0.8133],[0,0.0037,0.5702],[0,0.6786,0.1533],[0,0.1349,0.8931],[0,0.3858,0.8121]],[[0,0.0348,0.9186],[0,0.2066,0.6512],[0,0.357,0.611],[0,0.6026,0.0368],[0.54433728,0.2106,0.2032],[0.6270419899999999,0.7044,0.0342]]],[[[0,0.6398,0.2365],[0,0.5881,0.4213],[0,0.717,0.2938],[0,0.7327,0.5854],[0,0.8457,0.0588],[0,0.0264,0.4436]],[[0,0.6753,0.4239],[0,0.1403,0.8927],[0.15218121456,0.45200017566,0.36078131772],[0.04296471468000001,0.5608,0.9296],[0.06748845024000001,0.8034,0.15999722488],[0.08198629272000002,0.24351112467000005,0.512]],[[0,0.7916,0.1716],[0,0.1139,0.4285],[0.15215616,0.45192576,0.7769],[0.099694910592,0.6798,0.937],[1.5406739150000002,0.9591,0.887],[0.8617171150000001,0.6852,0.6924]]]]]

Actual:   [[[[[0, 0.3101, 0.316], [0, 0.0733, 0.0378], [0, 0.4375, 0.1507], [0, 0.9115, 0.2832], [0, 0.4725, 0.0781], [0, 0.5961, 0.8207]], [[0, 0.991, 0.3445], [0, 0.2089, 0.4467], [0, 0.1234, 0.5694], [0, 0.8116, 0.3385], [0, 0.891, 0.0192], [0, 0.2995, 0.1288]], [[0, 0.6345, 0.4265], [0, 0.965, 0.6502], [0, 0.8099, 0.5605], [0, 0.2268, 0.7204], [0, 0.5493, 0.6556], [0, 0.7426, 0.5109]]], [[[0, 0.03, 0.4968], [0, 0.9115, 0.4986], [0, 0.8777, 0.4309], [0, 0.5926, 0.7316], [0, 0.543, 0.8215], [0, 0.7212, 0.1608]], [[0, 0.829, 0.4981], [0, 0.3862, 0.0839], [0, 0.5284, 0.5657], [0, 0.8481, 0.3282], [0, 0.4275, 0.5326], [0, 0.9217, 0.6605]], [[0, 0.7781, 0.0918], [0, 0.128, 0.0523], [0, 0.7002, 0.0496], [0, 0.0256, 0.8503], [0, 0.8832, 0.8311], [0, 0.1749, 0.6114]]], [[[0, 0.3793, 0.7136], [0, 0.2553, 0.3389], [0, 0.2493, 0.4397], [0, 0.9645, 0.1309], [0, 0.3096, 0.1446], [0, 0.4562, 0.7951]], [[0, 0.2573, 0.593], [0, 0.2422, 0.8133], [0, 0.0037, 0.5702], [0, 0.6786, 0.1533], [0, 0.1349, 0.8931], [0, 0.3858, 0.8121]], [[0, 0.0348, 0.9186], [0, 0.2066, 0.6512], [0, 0.357, 0.611], [0, 0.6026, 0.0368], [0.5444, 0.2106, 0.2032], [0.6271, 0.7044, 0.0342]]], [[[0, 0.6398, 0.2365], [0, 0.5881, 0.4213], [0, 0.717, 0.2938], [0, 0.7327, 0.5854], [0, 0.8457, 0.0588], [0, 0.0264, 0.4436]], [[0, 0.6753, 0.4239], [0, 0.1403, 0.8927], [0.1522, 0.4521, 0.3608], [0.043, 0.5608, 0.9296], [0.0675, 0.8034, 0.16], [0.082, 0.2436, 0.512]], [[0, 0.7916, 0.1716], [0, 0.1139, 0.4285], [0.1522, 0.452, 0.7769], [0.0997, 0.6798, 0.937], [1.5407, 0.9591, 0.887], [0.8618, 0.6852, 0.6924]]]]]

Expected: [[[[[0, 0.3101, 0.316], [0, 0.0733, 0.0378], [0, 0.4375, 0.1507], [0, 0.9115, 0.2832], [0, 0.4725, 0.0781], [0, 0.5961, 0.8207]], [[0, 0.991, 0.3445], [0, 0.2089, 0.4467], [0, 0.1234, 0.5694], [0, 0.8116, 0.3385], [0, 0.891, 0.0192], [0, 0.2995, 0.1288]], [[0, 0.6345, 0.4265], [0, 0.965, 0.6502], [0, 0.8099, 0.5605], [0, 0.2268, 0.7204], [0, 0.5493, 0.6556], [0, 0.7426, 0.5109]]], [[[0, 0.03, 0.4968], [0, 0.9115, 0.4986], [0, 0.8777, 0.4309], [0, 0.5926, 0.7316], [0, 0.543, 0.8215], [0, 0.7212, 0.1608]], [[0, 0.829, 0.4981], [0, 0.3862, 0.0839], [0, 0.5284, 0.5657], [0, 0.8481, 0.3282], [0, 0.4275, 0.5326], [0, 0.9217, 0.6605]], [[0, 0.7781, 0.0918], [0, 0.128, 0.0523], [0, 0.7002, 0.0496], [0, 0.0256, 0.8503], [0, 0.8832, 0.8311], [0, 0.1749, 0.6114]]], [[[0, 0.3793, 0.7136], [0, 0.2553, 0.3389], [0, 0.2493, 0.4397], [0, 0.9645, 0.1309], [0, 0.3096, 0.1446], [0, 0.4562, 0.7951]], [[0, 0.2573, 0.593], [0, 0.2422, 0.8133], [0, 0.0037, 0.5702], [0, 0.6786, 0.1533], [0, 0.1349, 0.8931], [0, 0.3858, 0.8121]], [[0, 0.0348, 0.9186], [0, 0.2066, 0.6512], [0, 0.357, 0.611], [0, 0.6026, 0.0368], [0.5444, 0.2106, 0.2032], [0.6271, 0.7044, 0.0342]]], [[[0, 0.6398, 0.2365], [0, 0.5881, 0.4213], [0, 0.717, 0.2938], [0, 0.7327, 0.5854], [0, 0.8457, 0.0588], [0, 0.0264, 0.4436]], [[0, 0.6753, 0.4239], [0, 0.1403, 0.8927], [0.1522, 0.4521, 0.3608], [0.043, 0.5608, 0.9296], [0.0675, 0.8034, 0.16], [0.082, 0.2436, 0.512]], [[0, 0.7916, 0.1716], [0, 0.1139, 0.4285], [0.1522, 0.452, 0.7769], [0.0997, 0.6798, 0.937], [1.5407, 0.9591, 0.887], [0.8618, 0.6852, 0.6924]]]]]