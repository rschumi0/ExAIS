import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Con53982 = tf.keras.layers.Input(shape=([1, 1, 2]))
in0LST84857 = tf.keras.layers.Input(shape=([3, 1]))

Con53982 = keras.layers.Conv2D(3, (1, 1),strides=(1, 1), padding='valid', dilation_rate=(1, 1), name = 'Con53982', )(in0Con53982)
Res2699 = keras.layers.Reshape((1, 1, 3, 1), name = 'Res2699', )(Con53982)
Glo34259 = keras.layers.GlobalMaxPool3D(name = 'Glo34259', )(Res2699)
Lea19612 = keras.layers.LeakyReLU(alpha=4.828522836267681, name = 'Lea19612', )(Glo34259)
Res22554 = keras.layers.Reshape((1, 1), name = 'Res22554', )(Lea19612)
Res6956 = keras.layers.Reshape((1, 1, 1), name = 'Res6956', )(Res22554)
LST84857 = keras.layers.LSTM(2,recurrent_activation='sigmoid', name = 'LST84857', )(in0LST84857)
Res28336 = keras.layers.Reshape((2, 1), name = 'Res28336', )(LST84857)
Ave98990 = keras.layers.AveragePooling1D(pool_size=(1), name = 'Ave98990', )(Res28336)
Res83312 = keras.layers.Reshape((2, 1, 1), name = 'Res83312', )(Ave98990)
Dep11191 = keras.layers.DepthwiseConv2D((1, 1),strides=(2, 2), padding='valid', name = 'Dep11191', )(Res83312)
Mul76648 = keras.layers.Multiply(name = 'Mul76648', )([Res6956,Dep11191])
model = tf.keras.models.Model(inputs=[in0Con53982,in0LST84857], outputs=Mul76648)
w = model.get_layer('Con53982').get_weights() 
w[0] = np.array([[[[0.8048, 0.3866, 0.3092], [0.2844, 0.346, 0.7703]]]])
w[1] = np.array([0, 0, 0])
model.get_layer('Con53982').set_weights(w) 
w = model.get_layer('LST84857').get_weights() 
w[0] = np.array([[9, 6, 2, 1, 4, 7, 8, 7]])
w[1] = np.array([[2, 9, 5, 8, 7, 3, 6, 10], [7, 9, 10, 8, 3, 4, 7, 8]])
w[2] = np.array([6, 4, 2, 8, 4, 8, 7, 6])
model.get_layer('LST84857').set_weights(w) 
w = model.get_layer('Dep11191').get_weights() 
w[0] = np.array([[[[0.851]]]])
w[1] = np.array([0])
model.get_layer('Dep11191').set_weights(w) 
in0Con53982 = tf.constant([[[[0.1327, 0.1082]]]])
in0LST84857 = tf.constant([[[1], [5], [9]]])
print (np.array2string(model.predict([in0Con53982,in0LST84857],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Mul76648.png')

LCon53982 = conv2D_layer([[[[0.1327, 0.1082]]]], 1, 1,[[[[0.8048, 0.3866, 0.3092], [0.2844, 0.346, 0.7703]]]],[0, 0, 0], 1, 1, false, 1, 1, Con53982), 
LRes2699 = reshape_layer(Con53982, [1, 1, 3, 1], Res2699), 
LGlo34259 = global_max_pool3D_layer(Res2699, Glo34259), 
LLea19612 = leaky_relu_layer(Glo34259, 4.828522836267681, Lea19612), 
LRes22554 = reshape_layer(Lea19612, [1, 1], Res22554), 
LRes6956 = reshape_layer(Res22554, [1, 1, 1], Res6956), 
LLST84857 = lstm_layer([[[1], [5], [9]]],[[9, 6, 2, 1, 4, 7, 8, 7]],[[2, 9, 5, 8, 7, 3, 6, 10], [7, 9, 10, 8, 3, 4, 7, 8]],[6, 4, 2, 8, 4, 8, 7, 6], LST84857), 
LRes28336 = reshape_layer(LST84857, [2, 1], Res28336), 
LAve98990 = average_pooling1D_layer(Res28336, 1, Ave98990), 
LRes83312 = reshape_layer(Ave98990, [2, 1, 1], Res83312), 
LDep11191 = depthwise_conv2D_layer(Res83312, 1, 1,[[[[0.851]]]],[0], 2, 2, false, Dep11191), 
LMul76648 = multiply_layer([Res6956,Dep11191], Mul76648), 
exec_layers([LCon53982,LRes2699,LGlo34259,LLea19612,LRes22554,LRes6956,LLST84857,LRes28336,LAve98990,LRes83312,LDep11191,LMul76648],["Con53982","Res2699","Glo34259","Lea19612","Res22554","Res6956","LST84857","Res28336","Ave98990","Res83312","Dep11191","Mul76648"],Mul76648,"Mul76648")

Actual (Unparsed): [[[[0.1164923]]]]

Expected (Unparsed): [[[[0.11649230624414739]]]]

Actual:   [[[[0.1165]]]]

Expected: [[[[0.1165]]]]