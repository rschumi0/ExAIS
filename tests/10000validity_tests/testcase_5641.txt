import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Add49636 = tf.keras.layers.Input(shape=([1, 1]))
in1Add49636 = tf.keras.layers.Input(shape=([1, 1]))
in0Con81709 = tf.keras.layers.Input(shape=([2, 1]))
in0Dot88998 = tf.keras.layers.Input(shape=([3, 2]))
in1Dot88998 = tf.keras.layers.Input(shape=([3, 2]))

Add49636 = keras.layers.Add(name = 'Add49636', )([in0Add49636,in1Add49636])
Lay87477 = keras.layers.LayerNormalization(axis=1, epsilon=1.4920457155945424, name = 'Lay87477', )(Add49636)
Res14400 = keras.layers.Reshape((1, 1, 1), name = 'Res14400', )(Lay87477)
Loc40041 = keras.layers.LocallyConnected2D(2, (1, 1),strides=(1, 1), name = 'Loc40041', )(Res14400)
Res89370 = keras.layers.Reshape((1, 2), name = 'Res89370', )(Loc40041)
Glo73185 = keras.layers.GlobalMaxPool1D(name = 'Glo73185', )(Res89370)
Res58035 = keras.layers.Reshape((2, 1), name = 'Res58035', )(Glo73185)
Con81709 = keras.layers.Concatenate(axis=2, name = 'Con81709', )([Res58035,in0Con81709])
Dot88998 = keras.layers.Dot(axes=(2, 2), name = 'Dot88998', )([in0Dot88998,in1Dot88998])
Sep6311 = keras.layers.SeparableConv1D(2, (1),strides=(3), padding='valid', name = 'Sep6311', )(Dot88998)
Zer20419 = keras.layers.ZeroPadding1D(padding=((1, 0)), name = 'Zer20419', )(Sep6311)
Min78840 = keras.layers.Minimum(name = 'Min78840', )([Con81709,Zer20419])
model = tf.keras.models.Model(inputs=[in0Add49636,in1Add49636,in0Con81709,in0Dot88998,in1Dot88998], outputs=Min78840)
w = model.get_layer('Loc40041').get_weights() 
w[0] = np.array([[[0.2557, 0.7741]]])
w[1] = np.array([[[0, 0]]])
model.get_layer('Loc40041').set_weights(w) 
w = model.get_layer('Sep6311').get_weights() 
w[0] = np.array([[[0.3414], [0.5032], [0.2845]]])
w[1] = np.array([[[0.294, 0.0182], [0.8436, 0.9711], [0.9867, 0.5529]]])
w[2] = np.array([0, 0])
model.get_layer('Sep6311').set_weights(w) 
in0Add49636 = tf.constant([[[0.4002]]])
in1Add49636 = tf.constant([[[0.1206]]])
in0Con81709 = tf.constant([[[0.7953], [0.5419]]])
in0Dot88998 = tf.constant([[[0.4622, 0.2136], [0.5639, 0.4258], [0.7216, 0.8125]]])
in1Dot88998 = tf.constant([[[0.1524, 0.3104], [0.9817, 0.0881], [0.2748, 0.7059]]])
print (np.array2string(model.predict([in0Add49636,in1Add49636,in0Con81709,in0Dot88998,in1Dot88998],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Min78840.png')

LAdd49636 = add_layer([[[[0.4002]]], [[[0.1206]]]], Add49636), 
LLay87477 = layer_normalization_layer(Add49636, 1, 1.4920457155945424, Lay87477), 
LRes14400 = reshape_layer(Lay87477, [1, 1, 1], Res14400), 
LLoc40041 = locally_connected2D_layer(Res14400, 1, 1,[[[0.2557, 0.7741]]],[[[0, 0]]], 1, 1, Loc40041), 
LRes89370 = reshape_layer(Loc40041, [1, 2], Res89370), 
LGlo73185 = global_max_pool1D_layer(Res89370, Glo73185), 
LRes58035 = reshape_layer(Glo73185, [2, 1], Res58035), 
LCon81709 = concatenate_layer([Res58035,[[[0.7953], [0.5419]]]], 2, Con81709), 
LDot88998 = dot_layer([[[0.4622, 0.2136], [0.5639, 0.4258], [0.7216, 0.8125]]], [[[0.1524, 0.3104], [0.9817, 0.0881], [0.2748, 0.7059]]], 2, 2, Dot88998), 
LSep6311 = separable_conv1D_layer(Dot88998, 1,[[[[0.3414], [0.5032], [0.2845]]],[[[0.294, 0.0182], [0.8436, 0.9711], [0.9867, 0.5529]]]],[0, 0], 3, false, Sep6311), 
LZer20419 = zero_padding1D_layer(Sep6311, 1, 0, Zer20419), 
LMin78840 = minimum_layer([Con81709,Zer20419], Min78840), 
exec_layers([LAdd49636,LLay87477,LRes14400,LLoc40041,LRes89370,LGlo73185,LRes58035,LCon81709,LDot88998,LSep6311,LZer20419,LMin78840],["Add49636","Lay87477","Res14400","Loc40041","Res89370","Glo73185","Res58035","Con81709","Dot88998","Sep6311","Zer20419","Min78840"],Min78840,"Min78840")

Actual (Unparsed): [[[0.0000000, 0.0000000], [0.0000000, 0.2754664]]]

Expected (Unparsed): [[[0.0,0],[0.0,0.27546640584399357]]]

Actual:   [[[0, 0], [0, 0.2755]]]

Expected: [[[0, 0], [0, 0.2755]]]