import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Max94032 = tf.keras.layers.Input(shape=([2, 2]))
in1Max94032 = tf.keras.layers.Input(shape=([2, 2]))
in0Sof74837 = tf.keras.layers.Input(shape=([1, 2, 2]))
in0Con75646 = tf.keras.layers.Input(shape=([4, 4, 1]))

Max94032 = keras.layers.Maximum(name = 'Max94032', )([in0Max94032,in1Max94032])
Res49915 = keras.layers.Reshape((2, 2, 1), name = 'Res49915', )(Max94032)
Res95065 = keras.layers.Reshape((2, 2, 1, 1), name = 'Res95065', )(Res49915)
Zer21800 = keras.layers.ZeroPadding3D(padding=((1, 1), (1, 1), (1, 1)), name = 'Zer21800', )(Res95065)
Res87877 = keras.layers.Reshape((4, 4, 3), name = 'Res87877', )(Zer21800)
Sof74837 = keras.layers.Softmax(axis=1, name = 'Sof74837', input_shape=(1, 2, 2))(in0Sof74837)
Zer82477 = keras.layers.ZeroPadding2D(padding=((3, 0), (2, 0)), name = 'Zer82477', )(Sof74837)
Con75646 = keras.layers.Concatenate(axis=3, name = 'Con75646', )([Zer82477,in0Con75646])
Sub79433 = keras.layers.Subtract(name = 'Sub79433', )([Res87877,Con75646])
Sep43367 = keras.layers.SeparableConv2D(4, (3, 1),strides=(2, 2), padding='same', name = 'Sep43367', )(Sub79433)
model = tf.keras.models.Model(inputs=[in0Max94032,in1Max94032,in0Sof74837,in0Con75646], outputs=Sep43367)
w = model.get_layer('Sep43367').get_weights() 
w[0] = np.array([[[[0.2219], [0.9153], [0.6375]]], [[[0.0116], [0.738], [0.3124]]], [[[0.8227], [0.041], [0.9243]]]])
w[1] = np.array([[[[0.2744, 0.4273, 0.668, 0.0296], [0.2855, 0.1627, 0.9487, 0.2692], [0.596, 0.2145, 0.5411, 0.6418]]]])
w[2] = np.array([0, 0, 0, 0])
model.get_layer('Sep43367').set_weights(w) 
in0Max94032 = tf.constant([[[0.0656, 0.5967], [0.1905, 0.1483]]])
in1Max94032 = tf.constant([[[0.9537, 0.154], [0.0383, 0.7647]]])
in0Sof74837 = tf.constant([[[[0.3679, 0.4994], [0.6256, 0.8393]]]])
in0Con75646 = tf.constant([[[[0.6121], [0.9851], [0.6467], [0.9357]], [[0.3368], [0.0019], [0.5041], [0.5146]], [[0.5735], [0.995], [0.6804], [0.1366]], [[0.8074], [0.7768], [0.7145], [0.3486]]]])
print (np.array2string(model.predict([in0Max94032,in1Max94032,in0Sof74837,in0Con75646],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Sep43367.png')

LMax94032 = maximum_layer([[[[0.0656, 0.5967], [0.1905, 0.1483]]], [[[0.9537, 0.154], [0.0383, 0.7647]]]], Max94032), 
LRes49915 = reshape_layer(Max94032, [2, 2, 1], Res49915), 
LRes95065 = reshape_layer(Res49915, [2, 2, 1, 1], Res95065), 
LZer21800 = zero_padding3D_layer(Res95065, 1, 1, 1, 1, 1, 1, Zer21800), 
LRes87877 = reshape_layer(Zer21800, [4, 4, 3], Res87877), 
LSof74837 = softmax_layer([[[[0.3679, 0.4994], [0.6256, 0.8393]]]], 1, Sof74837), 
LZer82477 = zero_padding2D_layer(Sof74837, 3, 0, 2, 0, Zer82477), 
LCon75646 = concatenate_layer([Zer82477,[[[[0.6121], [0.9851], [0.6467], [0.9357]], [[0.3368], [0.0019], [0.5041], [0.5146]], [[0.5735], [0.995], [0.6804], [0.1366]], [[0.8074], [0.7768], [0.7145], [0.3486]]]]], 3, Con75646), 
LSub79433 = subtract_layer(Res87877,Con75646, Sub79433), 
LSep43367 = separable_conv2D_layer(Sub79433, 3, 1,[[[[[0.2219], [0.9153], [0.6375]]], [[[0.0116], [0.738], [0.3124]]], [[[0.8227], [0.041], [0.9243]]]],[[[[0.2744, 0.4273, 0.668, 0.0296], [0.2855, 0.1627, 0.9487, 0.2692], [0.596, 0.2145, 0.5411, 0.6418]]]]],[0, 0, 0, 0], 2, 2, true, Sep43367), 
exec_layers([LMax94032,LRes49915,LRes95065,LZer21800,LRes87877,LSof74837,LZer82477,LCon75646,LSub79433,LSep43367],["Max94032","Res49915","Res95065","Zer21800","Res87877","Sof74837","Zer82477","Con75646","Sub79433","Sep43367"],Sep43367,"Sep43367")

Actual (Unparsed): [[[[-0.6112076, -0.2199732, -0.5549068, -0.6581762], [-0.5797176, -0.1803611, -0.2010691, -0.6423046]], [[-0.3682314, -0.1325262, -0.3343121, -0.3965284], [-0.4056031, -0.1520696, -0.3993496, -0.4322318]]]]

Expected (Unparsed): [[[[-0.6112076075199999,-0.21997320774,-0.554906772532,-0.658176245816],[-0.57971761361,-0.180361121535,-0.20106904528100006,-0.642304583698]],[[-0.36823145396,-0.132526253145,-0.334312147211,-0.39652843481800004],[-0.40560307149499997,-0.152069633243,-0.39934954766299996,-0.43223183686799993]]]]

Actual:   [[[[-0.6112, -0.2199, -0.5549, -0.6581], [-0.5797, -0.1803, -0.201, -0.6423]], [[-0.3682, -0.1325, -0.3343, -0.3965], [-0.4056, -0.152, -0.3993, -0.4322]]]]

Expected: [[[[-0.6112, -0.2199, -0.5549, -0.6581], [-0.5797, -0.1803, -0.201, -0.6423]], [[-0.3682, -0.1325, -0.3343, -0.3965], [-0.4056, -0.152, -0.3993, -0.4322]]]]