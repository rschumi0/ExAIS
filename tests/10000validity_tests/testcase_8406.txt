import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Mul47100 = tf.keras.layers.Input(shape=([1, 2]))
in1Mul47100 = tf.keras.layers.Input(shape=([1, 2]))

Mul47100 = keras.layers.Multiply(name = 'Mul47100', )([in0Mul47100,in1Mul47100])
Res32178 = keras.layers.Reshape((1, 2, 1), name = 'Res32178', )(Mul47100)
Res43410 = keras.layers.Reshape((1, 2, 1, 1), name = 'Res43410', )(Res32178)
Zer82606 = keras.layers.ZeroPadding3D(padding=((1, 1), (1, 1), (1, 1)), name = 'Zer82606', )(Res43410)
Res88121 = keras.layers.Reshape((3, 4, 3), name = 'Res88121', )(Zer82606)
Glo61091 = keras.layers.GlobalAveragePooling2D(name = 'Glo61091', )(Res88121)
model = tf.keras.models.Model(inputs=[in0Mul47100,in1Mul47100], outputs=Glo61091)
in0Mul47100 = tf.constant([[[0.3172, 0.2633]]])
in1Mul47100 = tf.constant([[[0.0775, 0.2627]]])
print (np.array2string(model.predict([in0Mul47100,in1Mul47100],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Glo61091.png')

LMul47100 = multiply_layer([[[[0.3172, 0.2633]]], [[[0.0775, 0.2627]]]], Mul47100), 
LRes32178 = reshape_layer(Mul47100, [1, 2, 1], Res32178), 
LRes43410 = reshape_layer(Res32178, [1, 2, 1, 1], Res43410), 
LZer82606 = zero_padding3D_layer(Res43410, 1, 1, 1, 1, 1, 1, Zer82606), 
LRes88121 = reshape_layer(Zer82606, [3, 4, 3], Res88121), 
LGlo61091 = global_average_pooling2D_layer(Res88121, Glo61091), 
exec_layers([LMul47100,LRes32178,LRes43410,LZer82606,LRes88121,LGlo61091],["Mul47100","Res32178","Res43410","Zer82606","Res88121","Glo61091"],Glo61091,"Glo61091")

Actual (Unparsed): [[0.0000000, 0.0078127, 0.0000000]]

Expected (Unparsed): [[0,0.007812659166666664,0]]

Actual:   [[0, 0.0079, 0]]

Expected: [[0, 0.0079, 0]]