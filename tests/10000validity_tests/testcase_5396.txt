import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Dot98640 = tf.keras.layers.Input(shape=([3]))
in1Dot98640 = tf.keras.layers.Input(shape=([3]))
in0Ave23437 = tf.keras.layers.Input(shape=([1, 1, 2]))
in1Ave23437 = tf.keras.layers.Input(shape=([1, 1, 2]))
in0ReL5904 = tf.keras.layers.Input(shape=([2, 1, 2]))
in0Con81210 = tf.keras.layers.Input(shape=([3, 3, 2]))

Dot98640 = keras.layers.Dot(axes=(1, 1), name = 'Dot98640', )([in0Dot98640,in1Dot98640])
Den82413 = keras.layers.Dense(1,name = 'Den82413', )(Dot98640)
Res87585 = keras.layers.Reshape((1, 1), name = 'Res87585', )(Den82413)
Res50465 = keras.layers.Reshape((1, 1, 1), name = 'Res50465', )(Res87585)
Res87713 = keras.layers.Reshape((1, 1, 1, 1), name = 'Res87713', )(Res50465)
Zer26547 = keras.layers.ZeroPadding3D(padding=((2, 0), (2, 0), (3, 0)), name = 'Zer26547', )(Res87713)
Ave23437 = keras.layers.Average(name = 'Ave23437', )([in0Ave23437,in1Ave23437])
Res40616 = keras.layers.Reshape((1, 1, 2, 1), name = 'Res40616', )(Ave23437)
Zer37701 = keras.layers.ZeroPadding3D(padding=((1, 1), (1, 1), (1, 1)), name = 'Zer37701', )(Res40616)
Sub42885 = keras.layers.Subtract(name = 'Sub42885', )([Zer26547,Zer37701])
Res1605 = keras.layers.Reshape((3, 3, 4), name = 'Res1605', )(Sub42885)
ReL5904 = keras.layers.ReLU(max_value=8.51673331243886, negative_slope=7.22341917319055, threshold=6.995036774278445, name = 'ReL5904', input_shape=(2, 1, 2))(in0ReL5904)
Zer53666 = keras.layers.ZeroPadding2D(padding=((1, 0), (2, 0)), name = 'Zer53666', )(ReL5904)
Con81210 = keras.layers.Concatenate(axis=3, name = 'Con81210', )([Zer53666,in0Con81210])
Sub75956 = keras.layers.Subtract(name = 'Sub75956', )([Res1605,Con81210])
model = tf.keras.models.Model(inputs=[in0Dot98640,in1Dot98640,in0Ave23437,in1Ave23437,in0ReL5904,in0Con81210], outputs=Sub75956)
w = model.get_layer('Den82413').get_weights() 
w[0] = np.array([[0.3582]])
w[1] = np.array([0.6784])
model.get_layer('Den82413').set_weights(w) 
in0Dot98640 = tf.constant([[0.351, 0.6074, 0.5155]])
in1Dot98640 = tf.constant([[0.1329, 0.1538, 0.7402]])
in0Ave23437 = tf.constant([[[[0.3702, 0.8045]]]])
in1Ave23437 = tf.constant([[[[0.292, 0.6923]]]])
in0ReL5904 = tf.constant([[[[0.9525, 0.6409]], [[0.5577, 0.5212]]]])
in0Con81210 = tf.constant([[[[0.1569, 0.1158], [0.3685, 0.788], [0.5727, 0.5672]], [[0.3848, 0.1666], [0.5331, 0.6129], [0.4303, 0.7132]], [[0.4736, 0.0252], [0.2536, 0.5419], [0.2543, 0.1723]]]])
print (np.array2string(model.predict([in0Dot98640,in1Dot98640,in0Ave23437,in1Ave23437,in0ReL5904,in0Con81210],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Sub75956.png')

LDot98640 = dot_layer([[0.351, 0.6074, 0.5155]], [[0.1329, 0.1538, 0.7402]], 1, 1, Dot98640), 
LDen82413 = dense_layer(Dot98640, [[0.3582]],[0.6784], Den82413), 
LRes87585 = reshape_layer(Den82413, [1, 1], Res87585), 
LRes50465 = reshape_layer(Res87585, [1, 1, 1], Res50465), 
LRes87713 = reshape_layer(Res50465, [1, 1, 1, 1], Res87713), 
LZer26547 = zero_padding3D_layer(Res87713, 2, 0, 2, 0, 3, 0, Zer26547), 
LAve23437 = average_layer([[[[[0.3702, 0.8045]]]], [[[[0.292, 0.6923]]]]], Ave23437), 
LRes40616 = reshape_layer(Ave23437, [1, 1, 2, 1], Res40616), 
LZer37701 = zero_padding3D_layer(Res40616, 1, 1, 1, 1, 1, 1, Zer37701), 
LSub42885 = subtract_layer(Zer26547,Zer37701, Sub42885), 
LRes1605 = reshape_layer(Sub42885, [3, 3, 4], Res1605), 
LReL5904 = relu_layer([[[[0.9525, 0.6409]], [[0.5577, 0.5212]]]], 8.51673331243886, 7.22341917319055, 6.995036774278445, ReL5904), 
LZer53666 = zero_padding2D_layer(ReL5904, 1, 0, 2, 0, Zer53666), 
LCon81210 = concatenate_layer([Zer53666,[[[[0.1569, 0.1158], [0.3685, 0.788], [0.5727, 0.5672]], [[0.3848, 0.1666], [0.5331, 0.6129], [0.4303, 0.7132]], [[0.4736, 0.0252], [0.2536, 0.5419], [0.2543, 0.1723]]]]], 3, Con81210), 
LSub75956 = subtract_layer(Res1605,Con81210, Sub75956), 
exec_layers([LDot98640,LDen82413,LRes87585,LRes50465,LRes87713,LZer26547,LAve23437,LRes40616,LZer37701,LSub42885,LRes1605,LReL5904,LZer53666,LCon81210,LSub75956],["Dot98640","Den82413","Res87585","Res50465","Res87713","Zer26547","Ave23437","Res40616","Zer37701","Sub42885","Res1605","ReL5904","Zer53666","Con81210","Sub75956"],Sub75956,"Sub75956")

Actual (Unparsed): [[[[0.0000000, 0.0000000, -0.1569000, -0.1158000], [0.0000000, 0.0000000, -0.3685000, -0.7880000], [0.0000000, 0.0000000, -0.5727000, -0.5672000]], [[0.0000000, 0.0000000, -0.3848000, -0.1666000], [0.0000000, -0.3311000, -1.2815000, -0.6129000], [43.6477761, 45.8985933, -0.4303000, -0.7132000]], [[0.0000000, 0.0000000, -0.4736000, -0.0252000], [0.0000000, 0.0000000, -0.2536000, -0.5419000], [46.4995820, 46.7632367, -0.2543000, 0.6929511]]]]

Expected (Unparsed): [[[[0,0,-0.1569,-0.1158],[0,0,-0.3685,-0.788],[0,0,-0.5727,-0.5672]],[[0,0,-0.3848,-0.1666],[0,-0.33109999999999995,-1.2814999999999999,-0.6129],[43.64777599003189,45.89859340439807,-0.4303,-0.7132]],[[0,0,-0.4736,-0.0252],[0,0,-0.2536,-0.5419],[46.49958187960752,46.76323667942898,-0.2543,0.692951132784]]]]

Actual:   [[[[0, 0, -0.1569, -0.1158], [0, 0, -0.3685, -0.788], [0, 0, -0.5727, -0.5672]], [[0, 0, -0.3848, -0.1666], [0, -0.3311, -1.2815, -0.6129], [43.6478, 45.8986, -0.4303, -0.7132]], [[0, 0, -0.4736, -0.0252], [0, 0, -0.2536, -0.5419], [46.4996, 46.7633, -0.2543, 0.693]]]]

Expected: [[[[0, 0, -0.1569, -0.1158], [0, 0, -0.3685, -0.788], [0, 0, -0.5727, -0.5672]], [[0, 0, -0.3848, -0.1666], [0, -0.331, -1.2814, -0.6129], [43.6478, 45.8986, -0.4303, -0.7132]], [[0, 0, -0.4736, -0.0252], [0, 0, -0.2536, -0.5419], [46.4996, 46.7633, -0.2543, 0.693]]]]