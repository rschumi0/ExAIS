import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Dep28637 = tf.keras.layers.Input(shape=([2, 1, 1]))

Dep28637 = keras.layers.DepthwiseConv2D((2, 1),strides=(2, 2), padding='valid', name = 'Dep28637', )(in0Dep28637)
ELU58843 = keras.layers.ELU(alpha=-8.06496315038185, name = 'ELU58843', )(Dep28637)
Res23912 = keras.layers.Reshape((1, 1), name = 'Res23912', )(ELU58843)
Glo68789 = keras.layers.GlobalMaxPool1D(name = 'Glo68789', )(Res23912)
Thr19811 = keras.layers.ThresholdedReLU(theta=3.6420510614530763, name = 'Thr19811', )(Glo68789)
model = tf.keras.models.Model(inputs=[in0Dep28637], outputs=Thr19811)
w = model.get_layer('Dep28637').get_weights() 
w[0] = np.array([[[[0.0831]]], [[[0.0625]]]])
w[1] = np.array([0])
model.get_layer('Dep28637').set_weights(w) 
in0Dep28637 = tf.constant([[[[0.4718]], [[0.2485]]]])
print (np.array2string(model.predict([in0Dep28637],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Thr19811.png')

LDep28637 = depthwise_conv2D_layer([[[[0.4718]], [[0.2485]]]], 2, 1,[[[[0.0831]]], [[[0.0625]]]],[0], 2, 2, false, Dep28637), 
LELU58843 = elu_layer(Dep28637, -8.06496315038185, ELU58843), 
LRes23912 = reshape_layer(ELU58843, [1, 1], Res23912), 
LGlo68789 = global_max_pool1D_layer(Res23912, Glo68789), 
LThr19811 = thresholded_relu_layer(Glo68789, 3.6420510614530763, Thr19811), 
exec_layers([LDep28637,LELU58843,LRes23912,LGlo68789,LThr19811],["Dep28637","ELU58843","Res23912","Glo68789","Thr19811"],Thr19811,"Thr19811")

Actual (Unparsed): [[0.0000000]]

Expected (Unparsed): [[0]]

Actual:   [[0]]

Expected: [[0]]