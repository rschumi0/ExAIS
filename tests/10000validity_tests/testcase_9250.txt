import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Dot82069 = tf.keras.layers.Input(shape=([2]))
in1Dot82069 = tf.keras.layers.Input(shape=([2]))

Dot82069 = keras.layers.Dot(axes=(1, 1), name = 'Dot82069', )([in0Dot82069,in1Dot82069])
Res21771 = keras.layers.Reshape((1, 1), name = 'Res21771', )(Dot82069)
Res9142 = keras.layers.Reshape((1, 1, 1), name = 'Res9142', )(Res21771)
Res99007 = keras.layers.Reshape((1, 1, 1, 1), name = 'Res99007', )(Res9142)
Con82928 = keras.layers.Conv3D(4, (1, 1, 1),strides=(1, 1, 1), padding='valid', dilation_rate=(1, 1, 1), name = 'Con82928', )(Res99007)
model = tf.keras.models.Model(inputs=[in0Dot82069,in1Dot82069], outputs=Con82928)
w = model.get_layer('Con82928').get_weights() 
w[0] = np.array([[[[[0.7071, 0.4206, 0.1204, 0.4691]]]]])
w[1] = np.array([0, 0, 0, 0])
model.get_layer('Con82928').set_weights(w) 
in0Dot82069 = tf.constant([[0.8892, 0.6906]])
in1Dot82069 = tf.constant([[0.7856, 0.3051]])
print (np.array2string(model.predict([in0Dot82069,in1Dot82069],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Con82928.png')

LDot82069 = dot_layer([[0.8892, 0.6906]], [[0.7856, 0.3051]], 1, 1, Dot82069), 
LRes21771 = reshape_layer(Dot82069, [1, 1], Res21771), 
LRes9142 = reshape_layer(Res21771, [1, 1, 1], Res9142), 
LRes99007 = reshape_layer(Res9142, [1, 1, 1, 1], Res99007), 
LCon82928 = conv3D_layer(Res99007, 1, 1, 1,[[[[[0.7071, 0.4206, 0.1204, 0.4691]]]]],[0, 0, 0, 0], 1, 1, 1, false, 1, 1, 1, Con82928), 
exec_layers([LDot82069,LRes21771,LRes9142,LRes99007,LCon82928],["Dot82069","Res21771","Res9142","Res99007","Con82928"],Con82928,"Con82928")

Actual (Unparsed): [[[[[0.6429360, 0.3824337, 0.1094746, 0.4265327]]]]]

Expected (Unparsed): [[[[[0.642936034818,0.38243373814799997,0.10947461263199999,0.426532730778]]]]]

Actual:   [[[[[0.643, 0.3825, 0.1095, 0.4266]]]]]

Expected: [[[[[0.643, 0.3825, 0.1095, 0.4266]]]]]