import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Den3217 = tf.keras.layers.Input(shape=([2, 4]))

Den3217 = keras.layers.Dense(4,name = 'Den3217', )(in0Den3217)
Lea80079 = keras.layers.LeakyReLU(alpha=9.904856434032641, name = 'Lea80079', )(Den3217)
Fla31330 = keras.layers.Flatten(name = 'Fla31330', )(Lea80079)
model = tf.keras.models.Model(inputs=[in0Den3217], outputs=Fla31330)
w = model.get_layer('Den3217').get_weights() 
w[0] = np.array([[0.8536, 0.8617, 0.8072, 0.5413], [0.1043, 0.999, 0.5691, 0.723], [0.3407, 0.1258, 0.1587, 0.0133], [0.0924, 0.6692, 0.0558, 0.913]])
w[1] = np.array([0.8661, 0.5732, 0.0213, 0.7663])
model.get_layer('Den3217').set_weights(w) 
in0Den3217 = tf.constant([[[0.925, 0.0502, 0.644, 0.9534], [0.6177, 0.2637, 0.5019, 0.2183]]])
print (np.array2string(model.predict([in0Den3217],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Fla31330.png')

LDen3217 = dense_layer([[[0.925, 0.0502, 0.644, 0.9534], [0.6177, 0.2637, 0.5019, 0.2183]]], [[0.8536, 0.8617, 0.8072, 0.5413], [0.1043, 0.999, 0.5691, 0.723], [0.3407, 0.1258, 0.1587, 0.0133], [0.0924, 0.6692, 0.0558, 0.913]],[0.8661, 0.5732, 0.0213, 0.7663], Den3217), 
LLea80079 = leaky_relu_layer(Den3217, 9.904856434032641, Lea80079), 
LFla31330 = flatten_layer(Lea80079, Fla31330), 
exec_layers([LDen3217,LLea80079,LFla31330],["Den3217","Lea80079","Fla31330"],Fla31330,"Fla31330")

Actual (Unparsed): [[1.9684208, 2.1394528, 0.9519313, 2.1823165, 1.6120409, 1.5781338, 0.7618118, 1.4972993]]

Expected (Unparsed): [[1.9684208200000002,2.13945278,0.9519313400000002,2.1823165,1.6120408800000001,1.57813377,0.76181178,1.49729928]]

Actual:   [[1.9685, 2.1395, 0.952, 2.1824, 1.6121, 1.5782, 0.7619, 1.4973]]

Expected: [[1.9685, 2.1395, 0.952, 2.1824, 1.6121, 1.5782, 0.7619, 1.4973]]