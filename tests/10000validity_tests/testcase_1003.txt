import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Sub80444 = tf.keras.layers.Input(shape=([2, 2, 3, 3]))
in1Sub80444 = tf.keras.layers.Input(shape=([2, 2, 3, 3]))
in0Dot96336 = tf.keras.layers.Input(shape=([2]))
in1Dot96336 = tf.keras.layers.Input(shape=([2]))
in0Con57112 = tf.keras.layers.Input(shape=([17]))

Sub80444 = keras.layers.Subtract(name = 'Sub80444', )([in0Sub80444,in1Sub80444])
Res95611 = keras.layers.Reshape((2, 2, 9), name = 'Res95611', )(Sub80444)
Cro3167 = keras.layers.Cropping2D(cropping=((0, 0), (0, 1)), name = 'Cro3167', )(Res95611)
Res3587 = keras.layers.Reshape((2, 9), name = 'Res3587', )(Cro3167)
Fla91198 = keras.layers.Flatten(name = 'Fla91198', )(Res3587)
Dot96336 = keras.layers.Dot(axes=(1, 1), name = 'Dot96336', )([in0Dot96336,in1Dot96336])
Con57112 = keras.layers.Concatenate(axis=1, name = 'Con57112', )([Dot96336,in0Con57112])
Max89480 = keras.layers.Maximum(name = 'Max89480', )([Fla91198,Con57112])
Res50112 = keras.layers.Reshape((18, 1), name = 'Res50112', )(Max89480)
Res62780 = keras.layers.Reshape((18, 1, 1), name = 'Res62780', )(Res50112)
Res74761 = keras.layers.Reshape((18, 1, 1, 1), name = 'Res74761', )(Res62780)
Up_18694 = keras.layers.UpSampling3D(size=(2, 1, 1), name = 'Up_18694', )(Res74761)
model = tf.keras.models.Model(inputs=[in0Sub80444,in1Sub80444,in0Dot96336,in1Dot96336,in0Con57112], outputs=Up_18694)
in0Sub80444 = tf.constant([[[[[0.9592, 0.6121, 0.6588], [0.1601, 0.6948, 0.8942], [0.2248, 0.6538, 0.7663]], [[0.3269, 0.8537, 0.6599], [0.1642, 0.6683, 0.0348], [0.4283, 0.7773, 0.1093]]], [[[0.3094, 0.4084, 0.7482], [0.0311, 0.886, 0.9023], [0.0542, 0.3984, 0.1984]], [[0.9615, 0.9715, 0.0302], [0.015, 0.7338, 0.0506], [0.3089, 0.9398, 0.6856]]]]])
in1Sub80444 = tf.constant([[[[[0.9795, 0.2443, 0.6662], [0.8622, 0.2464, 0.189], [0.1394, 0.6268, 0.8254]], [[0.9193, 0.864, 0.123], [0.204, 0.2418, 0.9531], [0.0435, 0.9466, 0.7621]]], [[[0.1573, 0.1537, 0.6464], [0.9618, 0.034, 0.4216], [0.5551, 0.2711, 0.6223]], [[0.5332, 0.4023, 0.3916], [0.4743, 0.0359, 0.9129], [0.7327, 0.6584, 0.3454]]]]])
in0Dot96336 = tf.constant([[0.3183, 0.4521]])
in1Dot96336 = tf.constant([[0.4015, 0.3759]])
in0Con57112 = tf.constant([[0.9423, 0.088, 0.95, 0.469, 0.8761, 0.7132, 0.7339, 0.9537, 0.3754, 0.8521, 0.1542, 0.8152, 0.3824, 0.0242, 0.5106, 0.1762, 0.3849]])
print (np.array2string(model.predict([in0Sub80444,in1Sub80444,in0Dot96336,in1Dot96336,in0Con57112],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Up_18694.png')

LSub80444 = subtract_layer([[[[[0.9592, 0.6121, 0.6588], [0.1601, 0.6948, 0.8942], [0.2248, 0.6538, 0.7663]], [[0.3269, 0.8537, 0.6599], [0.1642, 0.6683, 0.0348], [0.4283, 0.7773, 0.1093]]], [[[0.3094, 0.4084, 0.7482], [0.0311, 0.886, 0.9023], [0.0542, 0.3984, 0.1984]], [[0.9615, 0.9715, 0.0302], [0.015, 0.7338, 0.0506], [0.3089, 0.9398, 0.6856]]]]], [[[[[0.9795, 0.2443, 0.6662], [0.8622, 0.2464, 0.189], [0.1394, 0.6268, 0.8254]], [[0.9193, 0.864, 0.123], [0.204, 0.2418, 0.9531], [0.0435, 0.9466, 0.7621]]], [[[0.1573, 0.1537, 0.6464], [0.9618, 0.034, 0.4216], [0.5551, 0.2711, 0.6223]], [[0.5332, 0.4023, 0.3916], [0.4743, 0.0359, 0.9129], [0.7327, 0.6584, 0.3454]]]]], Sub80444), 
LRes95611 = reshape_layer(Sub80444, [2, 2, 9], Res95611), 
LCro3167 = cropping2D_layer(Res95611, 0, 0, 0, 1, Cro3167), 
LRes3587 = reshape_layer(Cro3167, [2, 9], Res3587), 
LFla91198 = flatten_layer(Res3587, Fla91198), 
LDot96336 = dot_layer([[0.3183, 0.4521]], [[0.4015, 0.3759]], 1, 1, Dot96336), 
LCon57112 = concatenate_layer([Dot96336,[[0.9423, 0.088, 0.95, 0.469, 0.8761, 0.7132, 0.7339, 0.9537, 0.3754, 0.8521, 0.1542, 0.8152, 0.3824, 0.0242, 0.5106, 0.1762, 0.3849]]], 1, Con57112), 
LMax89480 = maximum_layer([Fla91198,Con57112], Max89480), 
LRes50112 = reshape_layer(Max89480, [18, 1], Res50112), 
LRes62780 = reshape_layer(Res50112, [18, 1, 1], Res62780), 
LRes74761 = reshape_layer(Res62780, [18, 1, 1, 1], Res74761), 
LUp_18694 = up_sampling3D_layer(Res74761, 2, 1, 1, Up_18694), 
exec_layers([LSub80444,LRes95611,LCro3167,LRes3587,LFla91198,LDot96336,LCon57112,LMax89480,LRes50112,LRes62780,LRes74761,LUp_18694],["Sub80444","Res95611","Cro3167","Res3587","Fla91198","Dot96336","Con57112","Max89480","Res50112","Res62780","Res74761","Up_18694"],Up_18694,"Up_18694")

Actual (Unparsed): [[[[[0.2977418]]], [[[0.2977418]]], [[[0.9423000]]], [[[0.9423000]]], [[[0.0880000]]], [[[0.0880000]]], [[[0.9500000]]], [[[0.9500000]]], [[[0.4690000]]], [[[0.4690000]]], [[[0.8761000]]], [[[0.8761000]]], [[[0.7132000]]], [[[0.7132000]]], [[[0.7339000]]], [[[0.7339000]]], [[[0.9537000]]], [[[0.9537000]]], [[[0.3754000]]], [[[0.3754000]]], [[[0.8521000]]], [[[0.8521000]]], [[[0.1542000]]], [[[0.1542000]]], [[[0.8152000]]], [[[0.8152000]]], [[[0.8520000]]], [[[0.8520000]]], [[[0.4807000]]], [[[0.4807000]]], [[[0.5106000]]], [[[0.5106000]]], [[[0.1762000]]], [[[0.1762000]]], [[[0.3849000]]], [[[0.3849000]]]]]

Expected (Unparsed): [[[[[0.29774184000000004]]],[[[0.29774184000000004]]],[[[0.9423]]],[[[0.9423]]],[[[0.088]]],[[[0.088]]],[[[0.95]]],[[[0.95]]],[[[0.469]]],[[[0.469]]],[[[0.8761]]],[[[0.8761]]],[[[0.7132]]],[[[0.7132]]],[[[0.7339]]],[[[0.7339]]],[[[0.9537]]],[[[0.9537]]],[[[0.3754]]],[[[0.3754]]],[[[0.8521]]],[[[0.8521]]],[[[0.1542]]],[[[0.1542]]],[[[0.8152]]],[[[0.8152]]],[[[0.852]]],[[[0.852]]],[[[0.4807]]],[[[0.4807]]],[[[0.5106]]],[[[0.5106]]],[[[0.1762]]],[[[0.1762]]],[[[0.3849]]],[[[0.3849]]]]]

Actual:   [[[[[0.2978]]], [[[0.2978]]], [[[0.9423]]], [[[0.9423]]], [[[0.088]]], [[[0.088]]], [[[0.95]]], [[[0.95]]], [[[0.469]]], [[[0.469]]], [[[0.8761]]], [[[0.8761]]], [[[0.7132]]], [[[0.7132]]], [[[0.7339]]], [[[0.7339]]], [[[0.9537]]], [[[0.9537]]], [[[0.3754]]], [[[0.3754]]], [[[0.8521]]], [[[0.8521]]], [[[0.1542]]], [[[0.1542]]], [[[0.8152]]], [[[0.8152]]], [[[0.852]]], [[[0.852]]], [[[0.4807]]], [[[0.4807]]], [[[0.5106]]], [[[0.5106]]], [[[0.1762]]], [[[0.1762]]], [[[0.3849]]], [[[0.3849]]]]]

Expected: [[[[[0.2978]]], [[[0.2978]]], [[[0.9423]]], [[[0.9423]]], [[[0.088]]], [[[0.088]]], [[[0.95]]], [[[0.95]]], [[[0.469]]], [[[0.469]]], [[[0.8761]]], [[[0.8761]]], [[[0.7132]]], [[[0.7132]]], [[[0.7339]]], [[[0.7339]]], [[[0.9537]]], [[[0.9537]]], [[[0.3754]]], [[[0.3754]]], [[[0.8521]]], [[[0.8521]]], [[[0.1542]]], [[[0.1542]]], [[[0.8152]]], [[[0.8152]]], [[[0.852]]], [[[0.852]]], [[[0.4807]]], [[[0.4807]]], [[[0.5106]]], [[[0.5106]]], [[[0.1762]]], [[[0.1762]]], [[[0.3849]]], [[[0.3849]]]]]