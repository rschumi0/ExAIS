import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Ave59839 = tf.keras.layers.Input(shape=([1, 2]))
in1Ave59839 = tf.keras.layers.Input(shape=([1, 2]))
in0Mul13835 = tf.keras.layers.Input(shape=([1, 2]))
in1Mul13835 = tf.keras.layers.Input(shape=([1, 2]))
in0LST24590 = tf.keras.layers.Input(shape=([2, 2]))
in0Con61163 = tf.keras.layers.Input(shape=([1, 1]))
in0Con44086 = tf.keras.layers.Input(shape=([3, 1]))

Ave59839 = keras.layers.Average(name = 'Ave59839', )([in0Ave59839,in1Ave59839])
Lay96433 = keras.layers.LayerNormalization(axis=1, epsilon=1.2378033256337106, name = 'Lay96433', )(Ave59839)
Res95170 = keras.layers.Reshape((1, 2, 1), name = 'Res95170', )(Lay96433)
Ave7460 = keras.layers.AveragePooling2D(pool_size=(1, 2), name = 'Ave7460', )(Res95170)
Zer13819 = keras.layers.ZeroPadding2D(padding=((1, 1), (1, 1)), name = 'Zer13819', )(Ave7460)
Res64164 = keras.layers.Reshape((3, 3), name = 'Res64164', )(Zer13819)
Mul13835 = keras.layers.Multiply(name = 'Mul13835', )([in0Mul13835,in1Mul13835])
LST24590 = keras.layers.LSTM(1,recurrent_activation='sigmoid', name = 'LST24590', )(in0LST24590)
Res51310 = keras.layers.Reshape((1, 1), name = 'Res51310', )(LST24590)
Up_60368 = keras.layers.UpSampling1D(size=(1), name = 'Up_60368', )(Res51310)
Con61163 = keras.layers.Concatenate(axis=2, name = 'Con61163', )([Up_60368,in0Con61163])
Min39388 = keras.layers.Minimum(name = 'Min39388', )([Mul13835,Con61163])
Zer26917 = keras.layers.ZeroPadding1D(padding=((2, 0)), name = 'Zer26917', )(Min39388)
Con44086 = keras.layers.Concatenate(axis=2, name = 'Con44086', )([Zer26917,in0Con44086])
Min71988 = keras.layers.Minimum(name = 'Min71988', )([Res64164,Con44086])
model = tf.keras.models.Model(inputs=[in0Ave59839,in1Ave59839,in0Mul13835,in1Mul13835,in0LST24590,in0Con61163,in0Con44086], outputs=Min71988)
w = model.get_layer('LST24590').get_weights() 
w[0] = np.array([[5, 4, 2, 8], [7, 4, 1, 9]])
w[1] = np.array([[2, 8, 7, 1]])
w[2] = np.array([10, 3, 6, 4])
model.get_layer('LST24590').set_weights(w) 
in0Ave59839 = tf.constant([[[0.6836, 0.2865]]])
in1Ave59839 = tf.constant([[[0.5682, 0.009]]])
in0Mul13835 = tf.constant([[[0.2691, 0.6582]]])
in1Mul13835 = tf.constant([[[0.8311, 0.7815]]])
in0LST24590 = tf.constant([[[7, 10], [9, 3]]])
in0Con61163 = tf.constant([[[0.8061]]])
in0Con44086 = tf.constant([[[0.6952], [0.4537], [0.8624]]])
print (np.array2string(model.predict([in0Ave59839,in1Ave59839,in0Mul13835,in1Mul13835,in0LST24590,in0Con61163,in0Con44086],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Min71988.png')

LAve59839 = average_layer([[[[0.6836, 0.2865]]], [[[0.5682, 0.009]]]], Ave59839), 
LLay96433 = layer_normalization_layer(Ave59839, 1, 1.2378033256337106, Lay96433), 
LRes95170 = reshape_layer(Lay96433, [1, 2, 1], Res95170), 
LAve7460 = average_pooling2D_layer(Res95170, 1, 2, Ave7460), 
LZer13819 = zero_padding2D_layer(Ave7460, 1, 1, 1, 1, Zer13819), 
LRes64164 = reshape_layer(Zer13819, [3, 3], Res64164), 
LMul13835 = multiply_layer([[[[0.2691, 0.6582]]], [[[0.8311, 0.7815]]]], Mul13835), 
LLST24590 = lstm_layer([[[7, 10], [9, 3]]],[[5, 4, 2, 8], [7, 4, 1, 9]],[[2, 8, 7, 1]],[10, 3, 6, 4], LST24590), 
LRes51310 = reshape_layer(LST24590, [1, 1], Res51310), 
LUp_60368 = up_sampling1D_layer(Res51310, 1, Up_60368), 
LCon61163 = concatenate_layer([Up_60368,[[[0.8061]]]], 2, Con61163), 
LMin39388 = minimum_layer([Mul13835,Con61163], Min39388), 
LZer26917 = zero_padding1D_layer(Min39388, 2, 0, Zer26917), 
LCon44086 = concatenate_layer([Zer26917,[[[0.6952], [0.4537], [0.8624]]]], 2, Con44086), 
LMin71988 = minimum_layer([Res64164,Con44086], Min71988), 
exec_layers([LAve59839,LLay96433,LRes95170,LAve7460,LZer13819,LRes64164,LMul13835,LLST24590,LRes51310,LUp_60368,LCon61163,LMin39388,LZer26917,LCon44086,LMin71988],["Ave59839","Lay96433","Res95170","Ave7460","Zer13819","Res64164","Mul13835","LST24590","Res51310","Up_60368","Con61163","Min39388","Zer26917","Con44086","Min71988"],Min71988,"Min71988")

Actual (Unparsed): [[[0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000]]]

Expected (Unparsed): [[[0,0,0],[0,0.0,0],[0,0,0]]]

Actual:   [[[0, 0, 0], [0, 0, 0], [0, 0, 0]]]

Expected: [[[0, 0, 0], [0, 0, 0], [0, 0, 0]]]