import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Mul17226 = tf.keras.layers.Input(shape=([1, 1, 2, 2]))
in1Mul17226 = tf.keras.layers.Input(shape=([1, 1, 2, 2]))

Mul17226 = keras.layers.Multiply(name = 'Mul17226', )([in0Mul17226,in1Mul17226])
Con64479 = keras.layers.Conv3DTranspose(2, (1, 1, 1),strides=(1, 1, 1), padding='valid', name = 'Con64479', )(Mul17226)
model = tf.keras.models.Model(inputs=[in0Mul17226,in1Mul17226], outputs=Con64479)
w = model.get_layer('Con64479').get_weights() 
w[0] = np.array([[[[[0.385, 0.1069], [0.3669, 0.1333]]]]])
w[1] = np.array([0, 0])
model.get_layer('Con64479').set_weights(w) 
in0Mul17226 = tf.constant([[[[[0.5879, 0.6052], [0.7937, 0.1716]]]]])
in1Mul17226 = tf.constant([[[[[0.9839, 0.9681], [0.5872, 0.5091]]]]])
print (np.array2string(model.predict([in0Mul17226,in1Mul17226],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Con64479.png')

LMul17226 = multiply_layer([[[[[[0.5879, 0.6052], [0.7937, 0.1716]]]]], [[[[[0.9839, 0.9681], [0.5872, 0.5091]]]]]], Mul17226), 
LCon64479 = conv3D_transpose_layer(Mul17226, 1, 1, 1,[[[[[0.385, 0.1069], [0.3669, 0.1333]]]]],[0, 0], 1, 1, 1, false, Con64479), 
exec_layers([LMul17226,LCon64479],["Mul17226","Con64479"],Con64479,"Con64479")

Actual (Unparsed): [[[[[0.2853295, 0.2903274], [0.1887723, 0.1826429]]]]]

Expected (Unparsed): [[[[[0.285329483278,0.29032741798499995],[0.188772297164,0.18264294476400003]]]]]

Actual:   [[[[[0.2854, 0.2904], [0.1888, 0.1827]]]]]

Expected: [[[[[0.2854, 0.2904], [0.1888, 0.1827]]]]]