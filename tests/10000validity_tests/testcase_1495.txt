import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Max61107 = tf.keras.layers.Input(shape=([2, 1]))
in1Max61107 = tf.keras.layers.Input(shape=([2, 1]))
in0Con19105 = tf.keras.layers.Input(shape=([2, 2]))
in0Mul70870 = tf.keras.layers.Input(shape=([2, 2, 1, 2]))
in1Mul70870 = tf.keras.layers.Input(shape=([2, 2, 1, 2]))

Max61107 = keras.layers.Maximum(name = 'Max61107', )([in0Max61107,in1Max61107])
Con19105 = keras.layers.Concatenate(axis=2, name = 'Con19105', )([Max61107,in0Con19105])
Mul70870 = keras.layers.Multiply(name = 'Mul70870', )([in0Mul70870,in1Mul70870])
Res63867 = keras.layers.Reshape((2, 2, 2), name = 'Res63867', )(Mul70870)
Res81821 = keras.layers.Reshape((2, 4), name = 'Res81821', )(Res63867)
Up_37475 = keras.layers.UpSampling1D(size=(1), name = 'Up_37475', )(Res81821)
Sep84314 = keras.layers.SeparableConv1D(3, (2),strides=(2), padding='valid', name = 'Sep84314', )(Up_37475)
Zer1511 = keras.layers.ZeroPadding1D(padding=((1, 0)), name = 'Zer1511', )(Sep84314)
Sub70743 = keras.layers.Subtract(name = 'Sub70743', )([Con19105,Zer1511])
Res33923 = keras.layers.Reshape((2, 3, 1), name = 'Res33923', )(Sub70743)
Res31463 = keras.layers.Reshape((2, 3, 1, 1), name = 'Res31463', )(Res33923)
Cro67650 = keras.layers.Cropping3D(cropping=((0, 0), (2, 0), (0, 0)), name = 'Cro67650', )(Res31463)
model = tf.keras.models.Model(inputs=[in0Max61107,in1Max61107,in0Con19105,in0Mul70870,in1Mul70870], outputs=Cro67650)
w = model.get_layer('Sep84314').get_weights() 
w[0] = np.array([[[0.4862], [0.185], [0.3816], [0.1481]], [[0.5553], [0.6443], [0.7325], [0.1477]]])
w[1] = np.array([[[0.9085, 0.189, 0.9386], [0.9818, 0.2327, 0.9905], [0.0947, 0.4946, 0.8736], [0.7524, 0.2938, 0.2218]]])
w[2] = np.array([0, 0, 0])
model.get_layer('Sep84314').set_weights(w) 
in0Max61107 = tf.constant([[[0.7185], [0.7394]]])
in1Max61107 = tf.constant([[[0.653], [0.9481]]])
in0Con19105 = tf.constant([[[0.8136, 0.5057], [0.1617, 0.6375]]])
in0Mul70870 = tf.constant([[[[[0.2901, 0.9288]], [[0.9079, 0.4741]]], [[[0.3359, 0.0224]], [[0.033, 0.6238]]]]])
in1Mul70870 = tf.constant([[[[[0.5134, 0.9691]], [[0.7304, 0.8106]]], [[[0.5649, 0.1664]], [[0.3558, 0.9931]]]]])
print (np.array2string(model.predict([in0Max61107,in1Max61107,in0Con19105,in0Mul70870,in1Mul70870],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Cro67650.png')

LMax61107 = maximum_layer([[[[0.7185], [0.7394]]], [[[0.653], [0.9481]]]], Max61107), 
LCon19105 = concatenate_layer([Max61107,[[[0.8136, 0.5057], [0.1617, 0.6375]]]], 2, Con19105), 
LMul70870 = multiply_layer([[[[[[0.2901, 0.9288]], [[0.9079, 0.4741]]], [[[0.3359, 0.0224]], [[0.033, 0.6238]]]]], [[[[[0.5134, 0.9691]], [[0.7304, 0.8106]]], [[[0.5649, 0.1664]], [[0.3558, 0.9931]]]]]], Mul70870), 
LRes63867 = reshape_layer(Mul70870, [2, 2, 2], Res63867), 
LRes81821 = reshape_layer(Res63867, [2, 4], Res81821), 
LUp_37475 = up_sampling1D_layer(Res81821, 1, Up_37475), 
LSep84314 = separable_conv1D_layer(Up_37475, 2,[[[[0.4862], [0.185], [0.3816], [0.1481]], [[0.5553], [0.6443], [0.7325], [0.1477]]],[[[0.9085, 0.189, 0.9386], [0.9818, 0.2327, 0.9905], [0.0947, 0.4946, 0.8736], [0.7524, 0.2938, 0.2218]]]],[0, 0, 0], 2, false, Sep84314), 
LZer1511 = zero_padding1D_layer(Sep84314, 1, 0, Zer1511), 
LSub70743 = subtract_layer(Con19105,Zer1511, Sub70743), 
LRes33923 = reshape_layer(Sub70743, [2, 3, 1], Res33923), 
LRes31463 = reshape_layer(Res33923, [2, 3, 1, 1], Res31463), 
LCro67650 = cropping3D_layer(Res31463, 0, 0, 2, 0, 0, 0, Cro67650), 
exec_layers([LMax61107,LCon19105,LMul70870,LRes63867,LRes81821,LUp_37475,LSep84314,LZer1511,LSub70743,LRes33923,LRes31463,LCro67650],["Max61107","Con19105","Mul70870","Res63867","Res81821","Up_37475","Sep84314","Zer1511","Sub70743","Res33923","Res31463","Cro67650"],Cro67650,"Cro67650")

Actual (Unparsed): [[[[[0.5057000]]], [[[0.0418222]]]]]

Expected (Unparsed): [[[[[0.5057]]],[[[0.0418221733557802]]]]]

Actual:   [[[[[0.5057]]], [[[0.0419]]]]]

Expected: [[[[[0.5057]]], [[[0.0419]]]]]