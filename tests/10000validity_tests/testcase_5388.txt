import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Sub76387 = tf.keras.layers.Input(shape=([3]))
in1Sub76387 = tf.keras.layers.Input(shape=([3]))
in0Con56630 = tf.keras.layers.Input(shape=([5, 3]))
in0Con96697 = tf.keras.layers.Input(shape=([1, 2, 1, 1]))

Sub76387 = keras.layers.Subtract(name = 'Sub76387', )([in0Sub76387,in1Sub76387])
Res1648 = keras.layers.Reshape((3, 1), name = 'Res1648', )(Sub76387)
Zer55983 = keras.layers.ZeroPadding1D(padding=((2, 0)), name = 'Zer55983', )(Res1648)
Con56630 = keras.layers.Concatenate(axis=2, name = 'Con56630', )([Zer55983,in0Con56630])
Con96697 = keras.layers.Conv3D(2, (1, 1, 1),strides=(1, 1, 1), padding='valid', dilation_rate=(1, 1, 1), name = 'Con96697', )(in0Con96697)
Bat33099 = keras.layers.BatchNormalization(axis=3, epsilon=0.704247431473429,  name = 'Bat33099', )(Con96697)
Res86367 = keras.layers.Reshape((1, 2, 2), name = 'Res86367', )(Bat33099)
Res34681 = keras.layers.Reshape((1, 4), name = 'Res34681', )(Res86367)
Dot77911 = keras.layers.Dot(axes=(2, 2), name = 'Dot77911', )([Con56630,Res34681])
Zer55528 = keras.layers.ZeroPadding1D(padding=((1, 1)), name = 'Zer55528', )(Dot77911)
model = tf.keras.models.Model(inputs=[in0Sub76387,in1Sub76387,in0Con56630,in0Con96697], outputs=Zer55528)
w = model.get_layer('Con96697').get_weights() 
w[0] = np.array([[[[[0.14, 0.9723]]]]])
w[1] = np.array([0, 0])
model.get_layer('Con96697').set_weights(w) 
w = model.get_layer('Bat33099').get_weights() 
w[0] = np.array([0.4043])
w[1] = np.array([0.3035])
w[2] = np.array([0.8233])
w[3] = np.array([0.4328])
model.get_layer('Bat33099').set_weights(w) 
in0Sub76387 = tf.constant([[0.3136, 0.7052, 0.33]])
in1Sub76387 = tf.constant([[0.5564, 0.1624, 0.7576]])
in0Con56630 = tf.constant([[[0.0585, 0.4544, 0.2892], [0.1862, 0.4085, 0.6363], [0.4417, 0.6992, 0.302], [0.0865, 0.8644, 0.6911], [0.9751, 0.4944, 0.9054]]])
in0Con96697 = tf.constant([[[[[0.9271]], [[0.8701]]]]])
print (np.array2string(model.predict([in0Sub76387,in1Sub76387,in0Con56630,in0Con96697],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Zer55528.png')

LSub76387 = subtract_layer([[0.3136, 0.7052, 0.33]], [[0.5564, 0.1624, 0.7576]], Sub76387), 
LRes1648 = reshape_layer(Sub76387, [3, 1], Res1648), 
LZer55983 = zero_padding1D_layer(Res1648, 2, 0, Zer55983), 
LCon56630 = concatenate_layer([Zer55983,[[[0.0585, 0.4544, 0.2892], [0.1862, 0.4085, 0.6363], [0.4417, 0.6992, 0.302], [0.0865, 0.8644, 0.6911], [0.9751, 0.4944, 0.9054]]]], 2, Con56630), 
LCon96697 = conv3D_layer([[[[[0.9271]], [[0.8701]]]]], 1, 1, 1,[[[[[0.14, 0.9723]]]]],[0, 0], 1, 1, 1, false, 1, 1, 1, Con96697), 
LBat33099 = batch_normalization_layer(Con96697, 3, 0.704247431473429, [0.4043], [0.3035], [0.8233], [0.4328], Bat33099), 
LRes86367 = reshape_layer(Bat33099, [1, 2, 2], Res86367), 
LRes34681 = reshape_layer(Res86367, [1, 4], Res34681), 
LDot77911 = dot_layer(Con56630,Res34681, 2, 2, Dot77911), 
LZer55528 = zero_padding1D_layer(Dot77911, 1, 1, Zer55528), 
exec_layers([LSub76387,LRes1648,LZer55983,LCon56630,LCon96697,LBat33099,LRes86367,LRes34681,LDot77911,LZer55528],["Sub76387","Res1648","Zer55983","Con56630","Con96697","Bat33099","Res86367","Res34681","Dot77911","Zer55528"],Zer55528,"Zer55528")

Actual (Unparsed): [[[0.0000000], [0.1268020], [0.2759507], [0.2577886], [0.2989652], [0.6086186], [0.0000000]]]

Expected (Unparsed): [[[0],[0.12680196409110922],[0.2759507060857476],[0.25778862358809773],[0.2989651748689494],[0.6086185787771837],[0]]]

Actual:   [[[0], [0.1269], [0.276], [0.2578], [0.299], [0.6087], [0]]]

Expected: [[[0], [0.1269], [0.276], [0.2578], [0.299], [0.6087], [0]]]