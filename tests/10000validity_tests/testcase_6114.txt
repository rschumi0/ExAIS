import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Ave38548 = tf.keras.layers.Input(shape=([2, 1, 2, 1]))
in1Ave38548 = tf.keras.layers.Input(shape=([2, 1, 2, 1]))

Ave38548 = keras.layers.Average(name = 'Ave38548', )([in0Ave38548,in1Ave38548])
ELU83673 = keras.layers.ELU(alpha=2.6140456395272498, name = 'ELU83673', )(Ave38548)
Con5107 = keras.layers.Conv3DTranspose(2, (2, 1, 2),strides=(1, 1, 1), padding='same', name = 'Con5107', )(ELU83673)
model = tf.keras.models.Model(inputs=[in0Ave38548,in1Ave38548], outputs=Con5107)
w = model.get_layer('Con5107').get_weights() 
w[0] = np.array([[[[[0.2547], [0.2752]], [[0.6505], [0.3505]]]], [[[[0.7409], [0.1597]], [[0.3827], [0.2968]]]]])
w[1] = np.array([0, 0])
model.get_layer('Con5107').set_weights(w) 
in0Ave38548 = tf.constant([[[[[0.9203], [0.4461]]], [[[0.1128], [0.4656]]]]])
in1Ave38548 = tf.constant([[[[[0.3861], [0.8426]]], [[[0.0659], [0.7451]]]]])
print (np.array2string(model.predict([in0Ave38548,in1Ave38548],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Con5107.png')

LAve38548 = average_layer([[[[[[0.9203], [0.4461]]], [[[0.1128], [0.4656]]]]], [[[[[0.3861], [0.8426]]], [[[0.0659], [0.7451]]]]]], Ave38548), 
LELU83673 = elu_layer(Ave38548, 2.6140456395272498, ELU83673), 
LCon5107 = conv3D_transpose_layer(ELU83673, 2, 1, 2,[[[[[0.2547], [0.2752]], [[0.6505], [0.3505]]]], [[[[0.7409], [0.1597]], [[0.3827], [0.2968]]]]],[0, 0], 1, 1, 1, true, Con5107), 
exec_layers([LAve38548,LELU83673,LCon5107],["Ave38548","ELU83673","Con5107"],Con5107,"Con5107")

Actual (Unparsed): [[[[[0.1663700, 0.1797606], [0.5890225, 0.4062717]]], [[[0.5067133, 0.1289052], [0.9396834, 0.4946820]]]]]

Expected (Unparsed): [[[[[0.16637004,0.17976064],[0.589022545,0.40627172]]],[[[0.506713325,0.12890516000000002],[0.939683375,0.49468195000000004]]]]]

Actual:   [[[[[0.1664, 0.1798], [0.5891, 0.4063]]], [[[0.5068, 0.129], [0.9397, 0.4947]]]]]

Expected: [[[[[0.1664, 0.1798], [0.5891, 0.4063]]], [[[0.5068, 0.129], [0.9397, 0.4947]]]]]