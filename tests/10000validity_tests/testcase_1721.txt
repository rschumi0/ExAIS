import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Min55542 = tf.keras.layers.Input(shape=([1, 2]))
in1Min55542 = tf.keras.layers.Input(shape=([1, 2]))

Min55542 = keras.layers.Minimum(name = 'Min55542', )([in0Min55542,in1Min55542])
Bat45546 = keras.layers.BatchNormalization(axis=1, epsilon=0.5110528501062187,  name = 'Bat45546', )(Min55542)
model = tf.keras.models.Model(inputs=[in0Min55542,in1Min55542], outputs=Bat45546)
w = model.get_layer('Bat45546').get_weights() 
w[0] = np.array([0.6173])
w[1] = np.array([0.1183])
w[2] = np.array([0.4752])
w[3] = np.array([0.7571])
model.get_layer('Bat45546').set_weights(w) 
in0Min55542 = tf.constant([[[0.325, 0.4824]]])
in1Min55542 = tf.constant([[[0.8175, 0.8498]]])
print (np.array2string(model.predict([in0Min55542,in1Min55542],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Bat45546.png')

LMin55542 = minimum_layer([[[[0.325, 0.4824]]], [[[0.8175, 0.8498]]]], Min55542), 
LBat45546 = batch_normalization_layer(Min55542, 1, 0.5110528501062187, [0.6173], [0.1183], [0.4752], [0.7571], Bat45546), 
exec_layers([LMin55542,LBat45546],["Min55542","Bat45546"],Bat45546,"Bat45546")

Actual (Unparsed): [[[0.0359658, 0.1222468]]]

Expected (Unparsed): [[[0.0359657737330388,0.12224678048683169]]]

Actual:   [[[0.036, 0.1223]]]

Expected: [[[0.036, 0.1223]]]