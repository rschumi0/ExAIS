import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Con75590 = tf.keras.layers.Input(shape=([1, 1, 1]))
in0Max30696 = tf.keras.layers.Input(shape=([1, 2, 1]))
in1Max30696 = tf.keras.layers.Input(shape=([1, 2, 1]))
in0Con36345 = tf.keras.layers.Input(shape=([1, 2, 1]))
in0Min64510 = tf.keras.layers.Input(shape=([1, 2, 1]))
in1Min64510 = tf.keras.layers.Input(shape=([1, 2, 1]))

Con75590 = keras.layers.Conv2DTranspose(2, (1, 1),strides=(1, 1), padding='same', name = 'Con75590', )(in0Con75590)
Zer51601 = keras.layers.ZeroPadding2D(padding=((0, 0), (1, 0)), name = 'Zer51601', )(Con75590)
Max30696 = keras.layers.Maximum(name = 'Max30696', )([in0Max30696,in1Max30696])
Con36345 = keras.layers.Concatenate(axis=3, name = 'Con36345', )([Max30696,in0Con36345])
Mul47951 = keras.layers.Multiply(name = 'Mul47951', )([Zer51601,Con36345])
Res2997 = keras.layers.Reshape((1, 2, 2, 1), name = 'Res2997', )(Mul47951)
Zer4615 = keras.layers.ZeroPadding3D(padding=((2, 0), (2, 0), (1, 0)), name = 'Zer4615', )(Res2997)
Min64510 = keras.layers.Minimum(name = 'Min64510', )([in0Min64510,in1Min64510])
Res89424 = keras.layers.Reshape((1, 2, 1, 1), name = 'Res89424', )(Min64510)
Zer11288 = keras.layers.ZeroPadding3D(padding=((1, 1), (1, 1), (1, 1)), name = 'Zer11288', )(Res89424)
Max19815 = keras.layers.Maximum(name = 'Max19815', )([Zer4615,Zer11288])
model = tf.keras.models.Model(inputs=[in0Con75590,in0Max30696,in1Max30696,in0Con36345,in0Min64510,in1Min64510], outputs=Max19815)
w = model.get_layer('Con75590').get_weights() 
w[0] = np.array([[[[0.1844], [0.1003]]]])
w[1] = np.array([0, 0])
model.get_layer('Con75590').set_weights(w) 
in0Con75590 = tf.constant([[[[0.2077]]]])
in0Max30696 = tf.constant([[[[0.2583], [0.5047]]]])
in1Max30696 = tf.constant([[[[0.5853], [0.398]]]])
in0Con36345 = tf.constant([[[[0.7929], [0.9335]]]])
in0Min64510 = tf.constant([[[[0.9785], [0.057]]]])
in1Min64510 = tf.constant([[[[0.5824], [0.4358]]]])
print (np.array2string(model.predict([in0Con75590,in0Max30696,in1Max30696,in0Con36345,in0Min64510,in1Min64510],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Max19815.png')

LCon75590 = conv2D_transpose_layer([[[[0.2077]]]], 1, 1,[[[[0.1844], [0.1003]]]],[0, 0], 1, 1, true, Con75590), 
LZer51601 = zero_padding2D_layer(Con75590, 0, 0, 1, 0, Zer51601), 
LMax30696 = maximum_layer([[[[[0.2583], [0.5047]]]], [[[[0.5853], [0.398]]]]], Max30696), 
LCon36345 = concatenate_layer([Max30696,[[[[0.7929], [0.9335]]]]], 3, Con36345), 
LMul47951 = multiply_layer([Zer51601,Con36345], Mul47951), 
LRes2997 = reshape_layer(Mul47951, [1, 2, 2, 1], Res2997), 
LZer4615 = zero_padding3D_layer(Res2997, 2, 0, 2, 0, 1, 0, Zer4615), 
LMin64510 = minimum_layer([[[[[0.9785], [0.057]]]], [[[[0.5824], [0.4358]]]]], Min64510), 
LRes89424 = reshape_layer(Min64510, [1, 2, 1, 1], Res89424), 
LZer11288 = zero_padding3D_layer(Res89424, 1, 1, 1, 1, 1, 1, Zer11288), 
LMax19815 = maximum_layer([Zer4615,Zer11288], Max19815), 
exec_layers([LCon75590,LZer51601,LMax30696,LCon36345,LMul47951,LRes2997,LZer4615,LMin64510,LRes89424,LZer11288,LMax19815],["Con75590","Zer51601","Max30696","Con36345","Mul47951","Res2997","Zer4615","Min64510","Res89424","Zer11288","Max19815"],Max19815,"Max19815")

Actual (Unparsed): [[[[[0.0000000], [0.0000000], [0.0000000]], [[0.0000000], [0.0000000], [0.0000000]], [[0.0000000], [0.0000000], [0.0000000]], [[0.0000000], [0.0000000], [0.0000000]]], [[[0.0000000], [0.0000000], [0.0000000]], [[0.0000000], [0.5824000], [0.0000000]], [[0.0000000], [0.0570000], [0.0000000]], [[0.0000000], [0.0000000], [0.0000000]]], [[[0.0000000], [0.0000000], [0.0000000]], [[0.0000000], [0.0000000], [0.0000000]], [[0.0000000], [0.0000000], [0.0000000]], [[0.0000000], [0.0193299], [0.0194470]]]]]

Expected (Unparsed): [[[[[0],[0],[0]],[[0],[0],[0]],[[0],[0],[0]],[[0],[0],[0]]],[[[0],[0],[0]],[[0],[0.5824],[0]],[[0],[0.057],[0]],[[0],[0],[0]]],[[[0],[0],[0]],[[0],[0],[0]],[[0],[0.0],[0.0]],[[0],[0.019329949436000003],[0.019446961385]]]]]

Actual:   [[[[[0], [0], [0]], [[0], [0], [0]], [[0], [0], [0]], [[0], [0], [0]]], [[[0], [0], [0]], [[0], [0.5824], [0]], [[0], [0.057], [0]], [[0], [0], [0]]], [[[0], [0], [0]], [[0], [0], [0]], [[0], [0], [0]], [[0], [0.0194], [0.0195]]]]]

Expected: [[[[[0], [0], [0]], [[0], [0], [0]], [[0], [0], [0]], [[0], [0], [0]]], [[[0], [0], [0]], [[0], [0.5824], [0]], [[0], [0.057], [0]], [[0], [0], [0]]], [[[0], [0], [0]], [[0], [0], [0]], [[0], [0], [0]], [[0], [0.0194], [0.0195]]]]]