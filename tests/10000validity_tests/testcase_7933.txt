import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Mul84471 = tf.keras.layers.Input(shape=([1, 1]))
in1Mul84471 = tf.keras.layers.Input(shape=([1, 1]))
in0Con79213 = tf.keras.layers.Input(shape=([2, 2, 1, 1]))
in0Ave6463 = tf.keras.layers.Input(shape=([2, 2, 1, 2]))
in1Ave6463 = tf.keras.layers.Input(shape=([2, 2, 1, 2]))

Mul84471 = keras.layers.Multiply(name = 'Mul84471', )([in0Mul84471,in1Mul84471])
Res42234 = keras.layers.Reshape((1, 1, 1), name = 'Res42234', )(Mul84471)
Res63003 = keras.layers.Reshape((1, 1, 1, 1), name = 'Res63003', )(Res42234)
Zer36395 = keras.layers.ZeroPadding3D(padding=((1, 0), (1, 0), (0, 0)), name = 'Zer36395', )(Res63003)
Con79213 = keras.layers.Concatenate(axis=4, name = 'Con79213', )([Zer36395,in0Con79213])
Ave6463 = keras.layers.Average(name = 'Ave6463', )([in0Ave6463,in1Ave6463])
Mul67542 = keras.layers.Multiply(name = 'Mul67542', )([Con79213,Ave6463])
Res85954 = keras.layers.Reshape((2, 2, 2), name = 'Res85954', )(Mul67542)
PRe20732 = keras.layers.PReLU(name = 'PRe20732', )(Res85954)
Res11659 = keras.layers.Reshape((2, 4), name = 'Res11659', )(PRe20732)
Ave76564 = keras.layers.AveragePooling1D(pool_size=(2), strides=(1), padding='valid', name = 'Ave76564', )(Res11659)
model = tf.keras.models.Model(inputs=[in0Mul84471,in1Mul84471,in0Con79213,in0Ave6463,in1Ave6463], outputs=Ave76564)
w = model.get_layer('PRe20732').get_weights() 
w[0] = np.array([[[0.1825, 0.2243], [0.5486, 0.9635]], [[0.0832, 0.0722], [0.7704, 0.2887]]])
model.get_layer('PRe20732').set_weights(w) 
in0Mul84471 = tf.constant([[[0.4741]]])
in1Mul84471 = tf.constant([[[0.807]]])
in0Con79213 = tf.constant([[[[[0.4245]], [[0.5482]]], [[[0.2065]], [[0.2689]]]]])
in0Ave6463 = tf.constant([[[[[0.8193, 0.7145]], [[0.1792, 0.4191]]], [[[0.0253, 0.8171]], [[0.2849, 0.3112]]]]])
in1Ave6463 = tf.constant([[[[[0.2859, 0.0799]], [[0.462, 0.791]]], [[[0.3954, 0.9628]], [[0.2029, 0.115]]]]])
print (np.array2string(model.predict([in0Mul84471,in1Mul84471,in0Con79213,in0Ave6463,in1Ave6463],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Ave76564.png')

LMul84471 = multiply_layer([[[[0.4741]]], [[[0.807]]]], Mul84471), 
LRes42234 = reshape_layer(Mul84471, [1, 1, 1], Res42234), 
LRes63003 = reshape_layer(Res42234, [1, 1, 1, 1], Res63003), 
LZer36395 = zero_padding3D_layer(Res63003, 1, 0, 1, 0, 0, 0, Zer36395), 
LCon79213 = concatenate_layer([Zer36395,[[[[[0.4245]], [[0.5482]]], [[[0.2065]], [[0.2689]]]]]], 4, Con79213), 
LAve6463 = average_layer([[[[[[0.8193, 0.7145]], [[0.1792, 0.4191]]], [[[0.0253, 0.8171]], [[0.2849, 0.3112]]]]], [[[[[0.2859, 0.0799]], [[0.462, 0.791]]], [[[0.3954, 0.9628]], [[0.2029, 0.115]]]]]], Ave6463), 
LMul67542 = multiply_layer([Con79213,Ave6463], Mul67542), 
LRes85954 = reshape_layer(Mul67542, [2, 2, 2], Res85954), 
LPRe20732 = prelu_layer(Res85954, [[[0.1825, 0.2243], [0.5486, 0.9635]], [[0.0832, 0.0722], [0.7704, 0.2887]]], PRe20732), 
LRes11659 = reshape_layer(PRe20732, [2, 4], Res11659), 
LAve76564 = average_pooling1D_layer(Res11659, 2, 1, false, Ave76564), 
exec_layers([LMul84471,LRes42234,LRes63003,LZer36395,LCon79213,LAve6463,LMul67542,LRes85954,LPRe20732,LRes11659,LAve76564],["Mul84471","Res42234","Res63003","Zer36395","Con79213","Ave6463","Mul67542","Res85954","PRe20732","Res11659","Ave76564"],Ave76564,"Ave76564")

Actual (Unparsed): [[[0.0000000, 0.1761930, 0.0466579, 0.1944955]]]

Expected (Unparsed): [[[0.0,0.17619303749999998,0.046657911465,0.1944955]]]

Actual:   [[[0, 0.1762, 0.0467, 0.1945]]]

Expected: [[[0, 0.1762, 0.0467, 0.1945]]]