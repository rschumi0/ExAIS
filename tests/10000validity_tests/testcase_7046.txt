import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Mul58175 = tf.keras.layers.Input(shape=([2, 1, 1, 1]))
in1Mul58175 = tf.keras.layers.Input(shape=([2, 1, 1, 1]))
in0Con5333 = tf.keras.layers.Input(shape=([2, 1, 3]))
in0Con60545 = tf.keras.layers.Input(shape=([1, 1, 1]))

Mul58175 = keras.layers.Multiply(name = 'Mul58175', )([in0Mul58175,in1Mul58175])
Res70990 = keras.layers.Reshape((2, 1, 1), name = 'Res70990', )(Mul58175)
Con5333 = keras.layers.Concatenate(axis=3, name = 'Con5333', )([Res70990,in0Con5333])
Con60545 = keras.layers.Conv2DTranspose(4, (1, 1),strides=(1, 1), padding='valid', name = 'Con60545', )(in0Con60545)
Zer49122 = keras.layers.ZeroPadding2D(padding=((1, 0), (0, 0)), name = 'Zer49122', )(Con60545)
Mul81589 = keras.layers.Multiply(name = 'Mul81589', )([Con5333,Zer49122])
Res43351 = keras.layers.Reshape((2, 4), name = 'Res43351', )(Mul81589)
Loc43028 = keras.layers.LocallyConnected1D(4, (2),strides=(1), name = 'Loc43028', )(Res43351)
Res63630 = keras.layers.Reshape((1, 4, 1), name = 'Res63630', )(Loc43028)
Res9915 = keras.layers.Reshape((1, 4, 1, 1), name = 'Res9915', )(Res63630)
Zer38717 = keras.layers.ZeroPadding3D(padding=((1, 1), (1, 1), (1, 1)), name = 'Zer38717', )(Res9915)
Res94372 = keras.layers.Reshape((3, 6, 3), name = 'Res94372', )(Zer38717)
Res37486 = keras.layers.Reshape((3, 18), name = 'Res37486', )(Res94372)
Loc25325 = keras.layers.LocallyConnected1D(4, (3),strides=(1), name = 'Loc25325', )(Res37486)
model = tf.keras.models.Model(inputs=[in0Mul58175,in1Mul58175,in0Con5333,in0Con60545], outputs=Loc25325)
w = model.get_layer('Con60545').get_weights() 
w[0] = np.array([[[[0.5636], [0.4198], [0.7606], [0.6633]]]])
w[1] = np.array([0, 0, 0, 0])
model.get_layer('Con60545').set_weights(w) 
w = model.get_layer('Loc43028').get_weights() 
w[0] = np.array([[[0.3032, 0.4427, 0.3966, 0.3279], [0.0907, 0.4381, 0.2456, 0.4468], [0.9253, 0.2502, 0.013, 0.5761], [0.7496, 0.3987, 0.5996, 0.006], [0.7148, 0.4005, 0.1223, 0.4034], [0.2328, 0.1586, 0.3181, 0.4618], [0.8996, 0.5301, 0.0279, 0.0403], [0.8937, 0.8251, 0.1467, 0.8739]]])
w[1] = np.array([[0, 0, 0, 0]])
model.get_layer('Loc43028').set_weights(w) 
w = model.get_layer('Loc25325').get_weights() 
w[0] = np.array([[[0.6692, 0.8609, 0.5799, 0.3131], [0.2829, 0.5016, 0.1956, 0.0695], [0.3897, 0.9443, 0.1136, 0.8713], [0.9423, 0.8087, 0.9428, 0.9101], [0.8187, 0.7175, 0.1361, 0.0221], [0.875, 0.3372, 0.7534, 0.0605], [0.0149, 0.6764, 0.737, 0.03], [0.7206, 0.0827, 0.776, 0.1691], [0.7658, 0.693, 0.2577, 0.25], [0.6387, 0.1871, 0.2436, 0.722], [0.536, 0.5717, 0.8911, 0.9678], [0.6616, 0.3759, 0.2472, 0.8668], [0.9592, 0.0811, 0.8804, 0.0589], [0.3417, 0.8269, 0.3921, 0.7927], [0.9399, 0.4334, 0.4456, 0.0048], [0.8871, 0.5672, 0.59, 0.3273], [0.682, 0.4357, 0.8177, 0.0484], [0.2243, 0.746, 0.4918, 0.6609], [0.2093, 0.784, 0.0082, 0.5268], [0.6809, 0.3815, 0.3137, 0.3575], [0.1959, 0.2247, 0.1938, 0.6635], [0.2301, 0.4287, 0.0627, 0.0633], [0.1717, 0.5533, 0.8445, 0.3577], [0.4866, 0.2663, 0.4124, 0.5728], [0.4198, 0.6765, 0.9746, 0.7552], [0.8971, 0.9507, 0.7358, 0.1626], [0.1329, 0.2072, 0.145, 0.6347], [0.8159, 0.8338, 0.0472, 0.3524], [0.6435, 0.3173, 0.0962, 0.8966], [0.4077, 0.3928, 0.8584, 0.5048], [0.7962, 0.819, 0.1399, 0.6882], [0.5672, 0.3702, 0.2012, 0.9225], [0.777, 0.6996, 0.6905, 0.9512], [0.3003, 0.5704, 0.3232, 0.3545], [0.9666, 0.5805, 0.5614, 0.4255], [0.254, 0.9115, 0.8068, 0.0696], [0.6344, 0.823, 0.9096, 0.3964], [0.3404, 0.58, 0.1195, 0.9099], [0.5395, 0.2561, 0.9539, 0.718], [0.6435, 0.3849, 0.8459, 0.9816], [0.7538, 0.7451, 0.8471, 0.9003], [0.0515, 0.6613, 0.1073, 0.8961], [0.276, 0.0774, 0.3317, 0.293], [0.3055, 0.3173, 0.9227, 0.7186], [0.251, 0.885, 0.0566, 0.6527], [0.4067, 0.8766, 0.5136, 0.0376], [0.8619, 0.5792, 0.6845, 0.6284], [0.5718, 0.61, 0.809, 0.8121], [0.2102, 0.5174, 0.1691, 0.9495], [0.1806, 0.1062, 0.6519, 0.9097], [0.7526, 0.8773, 0.8303, 0.3526], [0.4048, 0.8795, 0.4628, 0.4933], [0.1079, 0.9588, 0.1072, 0.5317], [0.4606, 0.8599, 0.364, 0.6686]]])
w[1] = np.array([[0, 0, 0, 0]])
model.get_layer('Loc25325').set_weights(w) 
in0Mul58175 = tf.constant([[[[[0.3371]]], [[[0.1721]]]]])
in1Mul58175 = tf.constant([[[[[0.5339]]], [[[0.4762]]]]])
in0Con5333 = tf.constant([[[[0.3181, 0.4567, 0.5597]], [[0.9057, 0.0529, 0.1586]]]])
in0Con60545 = tf.constant([[[[0.4507]]]])
print (np.array2string(model.predict([in0Mul58175,in1Mul58175,in0Con5333,in0Con60545],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Loc25325.png')

LMul58175 = multiply_layer([[[[[[0.3371]]], [[[0.1721]]]]], [[[[[0.5339]]], [[[0.4762]]]]]], Mul58175), 
LRes70990 = reshape_layer(Mul58175, [2, 1, 1], Res70990), 
LCon5333 = concatenate_layer([Res70990,[[[[0.3181, 0.4567, 0.5597]], [[0.9057, 0.0529, 0.1586]]]]], 3, Con5333), 
LCon60545 = conv2D_transpose_layer([[[[0.4507]]]], 1, 1,[[[[0.5636], [0.4198], [0.7606], [0.6633]]]],[0, 0, 0, 0], 1, 1, false, Con60545), 
LZer49122 = zero_padding2D_layer(Con60545, 1, 0, 0, 0, Zer49122), 
LMul81589 = multiply_layer([Con5333,Zer49122], Mul81589), 
LRes43351 = reshape_layer(Mul81589, [2, 4], Res43351), 
LLoc43028 = locally_connected1D_layer(Res43351, 2,[[[0.3032, 0.4427, 0.3966, 0.3279], [0.0907, 0.4381, 0.2456, 0.4468], [0.9253, 0.2502, 0.013, 0.5761], [0.7496, 0.3987, 0.5996, 0.006], [0.7148, 0.4005, 0.1223, 0.4034], [0.2328, 0.1586, 0.3181, 0.4618], [0.8996, 0.5301, 0.0279, 0.0403], [0.8937, 0.8251, 0.1467, 0.8739]]],[[0, 0, 0, 0]], 1, Loc43028), 
LRes63630 = reshape_layer(Loc43028, [1, 4, 1], Res63630), 
LRes9915 = reshape_layer(Res63630, [1, 4, 1, 1], Res9915), 
LZer38717 = zero_padding3D_layer(Res9915, 1, 1, 1, 1, 1, 1, Zer38717), 
LRes94372 = reshape_layer(Zer38717, [3, 6, 3], Res94372), 
LRes37486 = reshape_layer(Res94372, [3, 18], Res37486), 
LLoc25325 = locally_connected1D_layer(Res37486, 3,[[[0.6692, 0.8609, 0.5799, 0.3131], [0.2829, 0.5016, 0.1956, 0.0695], [0.3897, 0.9443, 0.1136, 0.8713], [0.9423, 0.8087, 0.9428, 0.9101], [0.8187, 0.7175, 0.1361, 0.0221], [0.875, 0.3372, 0.7534, 0.0605], [0.0149, 0.6764, 0.737, 0.03], [0.7206, 0.0827, 0.776, 0.1691], [0.7658, 0.693, 0.2577, 0.25], [0.6387, 0.1871, 0.2436, 0.722], [0.536, 0.5717, 0.8911, 0.9678], [0.6616, 0.3759, 0.2472, 0.8668], [0.9592, 0.0811, 0.8804, 0.0589], [0.3417, 0.8269, 0.3921, 0.7927], [0.9399, 0.4334, 0.4456, 0.0048], [0.8871, 0.5672, 0.59, 0.3273], [0.682, 0.4357, 0.8177, 0.0484], [0.2243, 0.746, 0.4918, 0.6609], [0.2093, 0.784, 0.0082, 0.5268], [0.6809, 0.3815, 0.3137, 0.3575], [0.1959, 0.2247, 0.1938, 0.6635], [0.2301, 0.4287, 0.0627, 0.0633], [0.1717, 0.5533, 0.8445, 0.3577], [0.4866, 0.2663, 0.4124, 0.5728], [0.4198, 0.6765, 0.9746, 0.7552], [0.8971, 0.9507, 0.7358, 0.1626], [0.1329, 0.2072, 0.145, 0.6347], [0.8159, 0.8338, 0.0472, 0.3524], [0.6435, 0.3173, 0.0962, 0.8966], [0.4077, 0.3928, 0.8584, 0.5048], [0.7962, 0.819, 0.1399, 0.6882], [0.5672, 0.3702, 0.2012, 0.9225], [0.777, 0.6996, 0.6905, 0.9512], [0.3003, 0.5704, 0.3232, 0.3545], [0.9666, 0.5805, 0.5614, 0.4255], [0.254, 0.9115, 0.8068, 0.0696], [0.6344, 0.823, 0.9096, 0.3964], [0.3404, 0.58, 0.1195, 0.9099], [0.5395, 0.2561, 0.9539, 0.718], [0.6435, 0.3849, 0.8459, 0.9816], [0.7538, 0.7451, 0.8471, 0.9003], [0.0515, 0.6613, 0.1073, 0.8961], [0.276, 0.0774, 0.3317, 0.293], [0.3055, 0.3173, 0.9227, 0.7186], [0.251, 0.885, 0.0566, 0.6527], [0.4067, 0.8766, 0.5136, 0.0376], [0.8619, 0.5792, 0.6845, 0.6284], [0.5718, 0.61, 0.809, 0.8121], [0.2102, 0.5174, 0.1691, 0.9495], [0.1806, 0.1062, 0.6519, 0.9097], [0.7526, 0.8773, 0.8303, 0.3526], [0.4048, 0.8795, 0.4628, 0.4933], [0.1079, 0.9588, 0.1072, 0.5317], [0.4606, 0.8599, 0.364, 0.6686]]],[[0, 0, 0, 0]], 1, Loc25325), 
exec_layers([LMul58175,LRes70990,LCon5333,LCon60545,LZer49122,LMul81589,LRes43351,LLoc43028,LRes63630,LRes9915,LZer38717,LRes94372,LRes37486,LLoc25325],["Mul58175","Res70990","Con5333","Con60545","Zer49122","Mul81589","Res43351","Loc43028","Res63630","Res9915","Zer38717","Res94372","Res37486","Loc25325"],Loc25325,"Loc25325")

Actual (Unparsed): [[[0.2101429, 0.2113590, 0.1901096, 0.2317767]]]

Expected (Unparsed): [[[0.2101429280571712,0.21135894120221954,0.1901096035038627,0.23177670252758212]]]

Actual:   [[[0.2102, 0.2114, 0.1902, 0.2318]]]

Expected: [[[0.2102, 0.2114, 0.1902, 0.2318]]]