import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Ave52523 = tf.keras.layers.Input(shape=([2, 1, 2]))
in1Ave52523 = tf.keras.layers.Input(shape=([2, 1, 2]))

Ave52523 = keras.layers.Average(name = 'Ave52523', )([in0Ave52523,in1Ave52523])
Res13174 = keras.layers.Reshape((2, 2), name = 'Res13174', )(Ave52523)
Fla48921 = keras.layers.Flatten(name = 'Fla48921', )(Res13174)
Res58996 = keras.layers.Reshape((4, 1), name = 'Res58996', )(Fla48921)
Res23726 = keras.layers.Reshape((4, 1, 1), name = 'Res23726', )(Res58996)
Res83602 = keras.layers.Reshape((4, 1, 1, 1), name = 'Res83602', )(Res23726)
Up_29338 = keras.layers.UpSampling3D(size=(1, 2, 2), name = 'Up_29338', )(Res83602)
model = tf.keras.models.Model(inputs=[in0Ave52523,in1Ave52523], outputs=Up_29338)
in0Ave52523 = tf.constant([[[[0.4491, 0.1258]], [[0.1336, 0.6874]]]])
in1Ave52523 = tf.constant([[[[0.2687, 0.7177]], [[0.2868, 0.6884]]]])
print (np.array2string(model.predict([in0Ave52523,in1Ave52523],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Up_29338.png')

LAve52523 = average_layer([[[[[0.4491, 0.1258]], [[0.1336, 0.6874]]]], [[[[0.2687, 0.7177]], [[0.2868, 0.6884]]]]], Ave52523), 
LRes13174 = reshape_layer(Ave52523, [2, 2], Res13174), 
LFla48921 = flatten_layer(Res13174, Fla48921), 
LRes58996 = reshape_layer(Fla48921, [4, 1], Res58996), 
LRes23726 = reshape_layer(Res58996, [4, 1, 1], Res23726), 
LRes83602 = reshape_layer(Res23726, [4, 1, 1, 1], Res83602), 
LUp_29338 = up_sampling3D_layer(Res83602, 1, 2, 2, Up_29338), 
exec_layers([LAve52523,LRes13174,LFla48921,LRes58996,LRes23726,LRes83602,LUp_29338],["Ave52523","Res13174","Fla48921","Res58996","Res23726","Res83602","Up_29338"],Up_29338,"Up_29338")

Actual (Unparsed): [[[[[0.3589000], [0.3589000]], [[0.3589000], [0.3589000]]], [[[0.4217500], [0.4217500]], [[0.4217500], [0.4217500]]], [[[0.2102000], [0.2102000]], [[0.2102000], [0.2102000]]], [[[0.6879000], [0.6879000]], [[0.6879000], [0.6879000]]]]]

Expected (Unparsed): [[[[[0.3589],[0.3589]],[[0.3589],[0.3589]]],[[[0.42175],[0.42175]],[[0.42175],[0.42175]]],[[[0.2102],[0.2102]],[[0.2102],[0.2102]]],[[[0.6879],[0.6879]],[[0.6879],[0.6879]]]]]

Actual:   [[[[[0.3589], [0.3589]], [[0.3589], [0.3589]]], [[[0.4218], [0.4218]], [[0.4218], [0.4218]]], [[[0.2102], [0.2102]], [[0.2102], [0.2102]]], [[[0.6879], [0.6879]], [[0.6879], [0.6879]]]]]

Expected: [[[[[0.3589], [0.3589]], [[0.3589], [0.3589]]], [[[0.4218], [0.4218]], [[0.4218], [0.4218]]], [[[0.2102], [0.2102]], [[0.2102], [0.2102]]], [[[0.6879], [0.6879]], [[0.6879], [0.6879]]]]]