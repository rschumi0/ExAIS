import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Mul98790 = tf.keras.layers.Input(shape=([2, 2, 2, 2]))
in1Mul98790 = tf.keras.layers.Input(shape=([2, 2, 2, 2]))

Mul98790 = keras.layers.Multiply(name = 'Mul98790', )([in0Mul98790,in1Mul98790])
Glo91267 = keras.layers.GlobalMaxPool3D(name = 'Glo91267', )(Mul98790)
Lea51913 = keras.layers.LeakyReLU(alpha=1.6113711400218573, name = 'Lea51913', )(Glo91267)
model = tf.keras.models.Model(inputs=[in0Mul98790,in1Mul98790], outputs=Lea51913)
in0Mul98790 = tf.constant([[[[[0.4237, 0.4703], [0.2317, 0.3764]], [[0.3475, 0.9638], [0.8904, 0.4671]]], [[[0.3826, 0.6911], [0.3444, 0.7899]], [[0.5951, 0.5895], [0.4273, 0.7062]]]]])
in1Mul98790 = tf.constant([[[[[0.9304, 0.7475], [0.3595, 0.0258]], [[0.4457, 0.9975], [0.9224, 0.7859]]], [[[0.5838, 0.8519], [0.7841, 0.0119]], [[0.1377, 0.4316], [0.0704, 0.9653]]]]])
print (np.array2string(model.predict([in0Mul98790,in1Mul98790],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Lea51913.png')

LMul98790 = multiply_layer([[[[[[0.4237, 0.4703], [0.2317, 0.3764]], [[0.3475, 0.9638], [0.8904, 0.4671]]], [[[0.3826, 0.6911], [0.3444, 0.7899]], [[0.5951, 0.5895], [0.4273, 0.7062]]]]], [[[[[0.9304, 0.7475], [0.3595, 0.0258]], [[0.4457, 0.9975], [0.9224, 0.7859]]], [[[0.5838, 0.8519], [0.7841, 0.0119]], [[0.1377, 0.4316], [0.0704, 0.9653]]]]]], Mul98790), 
LGlo91267 = global_max_pool3D_layer(Mul98790, Glo91267), 
LLea51913 = leaky_relu_layer(Glo91267, 1.6113711400218573, Lea51913), 
exec_layers([LMul98790,LGlo91267,LLea51913],["Mul98790","Glo91267","Lea51913"],Lea51913,"Lea51913")

Actual (Unparsed): [[0.8213050, 0.9613905]]

Expected (Unparsed): [[0.82130496,0.9613905]]

Actual:   [[0.8214, 0.9614]]

Expected: [[0.8214, 0.9614]]