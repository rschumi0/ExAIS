import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Mul99210 = tf.keras.layers.Input(shape=([1, 2, 2, 2]))
in1Mul99210 = tf.keras.layers.Input(shape=([1, 2, 2, 2]))

Mul99210 = keras.layers.Multiply(name = 'Mul99210', )([in0Mul99210,in1Mul99210])
Res80716 = keras.layers.Reshape((1, 2, 4), name = 'Res80716', )(Mul99210)
Res62216 = keras.layers.Reshape((1, 8), name = 'Res62216', )(Res80716)
GRU53974 = keras.layers.GRU(1,reset_after=True, recurrent_activation='sigmoid', name = 'GRU53974', )(Res62216)
Res80198 = keras.layers.Reshape((1, 1), name = 'Res80198', )(GRU53974)
Res13031 = keras.layers.Reshape((1, 1, 1), name = 'Res13031', )(Res80198)
Res64092 = keras.layers.Reshape((1, 1, 1, 1), name = 'Res64092', )(Res13031)
Zer82165 = keras.layers.ZeroPadding3D(padding=((1, 1), (1, 1), (1, 1)), name = 'Zer82165', )(Res64092)
Glo75665 = keras.layers.GlobalAveragePooling3D(name = 'Glo75665', )(Zer82165)
Res10567 = keras.layers.Reshape((1, 1), name = 'Res10567', )(Glo75665)
Res57864 = keras.layers.Reshape((1, 1, 1), name = 'Res57864', )(Res10567)
Loc12949 = keras.layers.LocallyConnected2D(4, (1, 1),strides=(1, 1), name = 'Loc12949', )(Res57864)
model = tf.keras.models.Model(inputs=[in0Mul99210,in1Mul99210], outputs=Loc12949)
w = model.get_layer('GRU53974').get_weights() 
w[0] = np.array([[2, 5, 2], [7, 4, 10], [5, 7, 3], [3, 1, 8], [6, 8, 3], [9, 2, 4], [7, 9, 2], [5, 8, 4]])
w[1] = np.array([[7, 10, 10]])
w[2] = np.array([[6, 9, 8], [4, 1, 2]])
model.get_layer('GRU53974').set_weights(w) 
w = model.get_layer('Loc12949').get_weights() 
w[0] = np.array([[[0.9827, 0.8105, 0.4539, 0.0231]]])
w[1] = np.array([[[0, 0, 0, 0]]])
model.get_layer('Loc12949').set_weights(w) 
in0Mul99210 = tf.constant([[[[[0.4953, 0.9145], [0.042, 0.3103]], [[0.9308, 0.469], [0.6918, 0.526]]]]])
in1Mul99210 = tf.constant([[[[[0.1215, 0.8649], [0.5793, 0.4394]], [[0.4298, 0.057], [0.8055, 0.1894]]]]])
print (np.array2string(model.predict([in0Mul99210,in1Mul99210],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Loc12949.png')

LMul99210 = multiply_layer([[[[[[0.4953, 0.9145], [0.042, 0.3103]], [[0.9308, 0.469], [0.6918, 0.526]]]]], [[[[[0.1215, 0.8649], [0.5793, 0.4394]], [[0.4298, 0.057], [0.8055, 0.1894]]]]]], Mul99210), 
LRes80716 = reshape_layer(Mul99210, [1, 2, 4], Res80716), 
LRes62216 = reshape_layer(Res80716, [1, 8], Res62216), 
LGRU53974 = gru_layer(Res62216,[[2, 5, 2], [7, 4, 10], [5, 7, 3], [3, 1, 8], [6, 8, 3], [9, 2, 4], [7, 9, 2], [5, 8, 4]],[[7, 10, 10]],[[6, 9, 8], [4, 1, 2]], true, GRU53974), 
LRes80198 = reshape_layer(GRU53974, [1, 1], Res80198), 
LRes13031 = reshape_layer(Res80198, [1, 1, 1], Res13031), 
LRes64092 = reshape_layer(Res13031, [1, 1, 1, 1], Res64092), 
LZer82165 = zero_padding3D_layer(Res64092, 1, 1, 1, 1, 1, 1, Zer82165), 
LGlo75665 = global_average_pooling3D_layer(Zer82165, Glo75665), 
LRes10567 = reshape_layer(Glo75665, [1, 1], Res10567), 
LRes57864 = reshape_layer(Res10567, [1, 1, 1], Res57864), 
LLoc12949 = locally_connected2D_layer(Res57864, 1, 1,[[[0.9827, 0.8105, 0.4539, 0.0231]]],[[[0, 0, 0, 0]]], 1, 1, Loc12949), 
exec_layers([LMul99210,LRes80716,LRes62216,LGRU53974,LRes80198,LRes13031,LRes64092,LZer82165,LGlo75665,LRes10567,LRes57864,LLoc12949],["Mul99210","Res80716","Res62216","GRU53974","Res80198","Res13031","Res64092","Zer82165","Glo75665","Res10567","Res57864","Loc12949"],Loc12949,"Loc12949")

Actual (Unparsed): [[[[0.0000000, 0.0000000, 0.0000000, 0.0000000]]]]

Expected (Unparsed): [[[[2.975007127068194e-12,2.453692150695809e-12,1.3741281520059565e-12,6.993249683044193e-14]]]]

Actual:   [[[[0, 0, 0, 0]]]]

Expected: [[[[0, 0, 0, 0]]]]