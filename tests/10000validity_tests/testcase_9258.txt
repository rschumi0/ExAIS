import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Glo34757 = tf.keras.layers.Input(shape=([1, 1]))
in0Min50576 = tf.keras.layers.Input(shape=([2, 2, 1]))
in1Min50576 = tf.keras.layers.Input(shape=([2, 2, 1]))

Glo34757 = keras.layers.GlobalAveragePooling1D(name = 'Glo34757', )(in0Glo34757)
Res75593 = keras.layers.Reshape((1, 1), name = 'Res75593', )(Glo34757)
Res3019 = keras.layers.Reshape((1, 1, 1), name = 'Res3019', )(Res75593)
Zer77142 = keras.layers.ZeroPadding2D(padding=((1, 0), (1, 0)), name = 'Zer77142', )(Res3019)
Min50576 = keras.layers.Minimum(name = 'Min50576', )([in0Min50576,in1Min50576])
Min5289 = keras.layers.Minimum(name = 'Min5289', )([Zer77142,Min50576])
Res48825 = keras.layers.Reshape((2, 2, 1, 1), name = 'Res48825', )(Min5289)
Con71807 = keras.layers.Conv3DTranspose(2, (2, 2, 1),strides=(1, 1, 1), padding='valid', name = 'Con71807', )(Res48825)
Res53155 = keras.layers.Reshape((3, 3, 2), name = 'Res53155', )(Con71807)
Loc19015 = keras.layers.LocallyConnected2D(2, (3, 3),strides=(3, 1), name = 'Loc19015', )(Res53155)
model = tf.keras.models.Model(inputs=[in0Glo34757,in0Min50576,in1Min50576], outputs=Loc19015)
w = model.get_layer('Con71807').get_weights() 
w[0] = np.array([[[[[0.8494], [0.1835]]], [[[0.0835], [0.9998]]]], [[[[0.0785], [0.9518]]], [[[0.3925], [0.3227]]]]])
w[1] = np.array([0, 0])
model.get_layer('Con71807').set_weights(w) 
w = model.get_layer('Loc19015').get_weights() 
w[0] = np.array([[[0.867, 0.2348], [0.6326, 0.0043], [0.8326, 0.894], [0.0104, 0.66], [0.1943, 0.8384], [0.7172, 0.6202], [0.1292, 0.6897], [0.7134, 0.302], [0.8826, 0.1083], [0.2336, 0.5253], [0.129, 0.2629], [0.0281, 0.8414], [0.0297, 0.0603], [0.1656, 0.812], [0.3162, 0.9207], [0.4278, 0.7462], [0.1972, 0.709], [0.0584, 0.1125]]])
w[1] = np.array([[[0, 0]]])
model.get_layer('Loc19015').set_weights(w) 
in0Glo34757 = tf.constant([[[1.2672]]])
in0Min50576 = tf.constant([[[[0.6669], [0.3941]], [[0.4985], [0.3853]]]])
in1Min50576 = tf.constant([[[[0.1232], [0.3224]], [[0.0059], [0.5528]]]])
print (np.array2string(model.predict([in0Glo34757,in0Min50576,in1Min50576],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Loc19015.png')

LGlo34757 = global_average_pooling1D_layer([[[1.2672]]], Glo34757), 
LRes75593 = reshape_layer(Glo34757, [1, 1], Res75593), 
LRes3019 = reshape_layer(Res75593, [1, 1, 1], Res3019), 
LZer77142 = zero_padding2D_layer(Res3019, 1, 0, 1, 0, Zer77142), 
LMin50576 = minimum_layer([[[[[0.6669], [0.3941]], [[0.4985], [0.3853]]]], [[[[0.1232], [0.3224]], [[0.0059], [0.5528]]]]], Min50576), 
LMin5289 = minimum_layer([Zer77142,Min50576], Min5289), 
LRes48825 = reshape_layer(Min5289, [2, 2, 1, 1], Res48825), 
LCon71807 = conv3D_transpose_layer(Res48825, 2, 2, 1,[[[[[0.8494], [0.1835]]], [[[0.0835], [0.9998]]]], [[[[0.0785], [0.9518]]], [[[0.3925], [0.3227]]]]],[0, 0], 1, 1, 1, false, Con71807), 
LRes53155 = reshape_layer(Con71807, [3, 3, 2], Res53155), 
LLoc19015 = locally_connected2D_layer(Res53155, 3, 3,[[[0.867, 0.2348], [0.6326, 0.0043], [0.8326, 0.894], [0.0104, 0.66], [0.1943, 0.8384], [0.7172, 0.6202], [0.1292, 0.6897], [0.7134, 0.302], [0.8826, 0.1083], [0.2336, 0.5253], [0.129, 0.2629], [0.0281, 0.8414], [0.0297, 0.0603], [0.1656, 0.812], [0.3162, 0.9207], [0.4278, 0.7462], [0.1972, 0.709], [0.0584, 0.1125]]],[[[0, 0]]], 3, 1, Loc19015), 
exec_layers([LGlo34757,LRes75593,LRes3019,LZer77142,LMin50576,LMin5289,LRes48825,LCon71807,LRes53155,LLoc19015],["Glo34757","Res75593","Res3019","Zer77142","Min50576","Min5289","Res48825","Con71807","Res53155","Loc19015"],Loc19015,"Loc19015")

Actual (Unparsed): [[[[0.5238771, 0.8278790]]]]

Expected (Unparsed): [[[[0.5238771290019999,0.8278790062399999]]]]

Actual:   [[[[0.5239, 0.8279]]]]

Expected: [[[[0.5239, 0.8279]]]]