import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Con17864 = tf.keras.layers.Input(shape=([2, 2, 1, 2]))

Con17864 = keras.layers.Conv3D(2, (2, 2, 1),strides=(1, 1, 5), padding='same', dilation_rate=(1, 1, 1), name = 'Con17864', )(in0Con17864)
Res84633 = keras.layers.Reshape((2, 2, 2), name = 'Res84633', )(Con17864)
Res26791 = keras.layers.Reshape((2, 4), name = 'Res26791', )(Res84633)
Per23213 = keras.layers.Permute((1,2), name = 'Per23213',)(Res26791)
model = tf.keras.models.Model(inputs=[in0Con17864], outputs=Per23213)
w = model.get_layer('Con17864').get_weights() 
w[0] = np.array([[[[[0.7163, 0.8942], [0.8845, 0.2389]]], [[[0.2174, 0.3196], [0.2406, 0.1158]]]], [[[[0.706, 0.8703], [0.0247, 0.7154]]], [[[0.5559, 0.1624], [0.8482, 0.0503]]]]])
w[1] = np.array([0, 0])
model.get_layer('Con17864').set_weights(w) 
in0Con17864 = tf.constant([[[[[0.4997, 0.5827]], [[0.5967, 0.5806]]], [[[0.7878, 0.8836]], [[0.8296, 0.983]]]]])
print (np.array2string(model.predict([in0Con17864],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Per23213.png')

LCon17864 = conv3D_layer([[[[[0.4997, 0.5827]], [[0.5967, 0.5806]]], [[[0.7878, 0.8836]], [[0.8296, 0.983]]]]], 2, 2, 1,[[[[[0.7163, 0.8942], [0.8845, 0.2389]]], [[[0.2174, 0.3196], [0.2406, 0.1158]]]], [[[[0.706, 0.8703], [0.0247, 0.7154]]], [[[0.5559, 0.1624], [0.8482, 0.0503]]]]],[0, 0], 1, 1, 5, true, 1, 1, 1, Con17864), 
LRes84633 = reshape_layer(Con17864, [2, 2, 2], Res84633), 
LRes26791 = reshape_layer(Res84633, [2, 4], Res26791), 
LPer23213 = permute_layer(Res26791, 1,2, Per23213), 
exec_layers([LCon17864,LRes84633,LRes26791,LPer23213],["Con17864","Res84633","Res26791","Per23213"],Per23213,"Per23213")

Actual (Unparsed): [[[3.0157152, 2.3458993, 1.5509346, 2.0975135], [1.7627102, 1.2945144, 1.4637059, 0.9766670]]]

Expected (Unparsed): [[[3.01571516,2.34589929,1.5509346099999997,2.09751356],[1.76271018,1.29451436,1.4637059799999999,0.97666702]]]

Actual:   [[[3.0158, 2.3459, 1.551, 2.0976], [1.7628, 1.2946, 1.4638, 0.9767]]]

Expected: [[[3.0158, 2.3459, 1.551, 2.0976], [1.7628, 1.2946, 1.4638, 0.9767]]]