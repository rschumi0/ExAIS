import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Sub64903 = tf.keras.layers.Input(shape=([3, 2, 3, 2]))
in1Sub64903 = tf.keras.layers.Input(shape=([3, 2, 3, 2]))

Sub64903 = keras.layers.Subtract(name = 'Sub64903', )([in0Sub64903,in1Sub64903])
Res26938 = keras.layers.Reshape((3, 2, 6), name = 'Res26938', )(Sub64903)
Loc81207 = keras.layers.LocallyConnected2D(4, (1, 2),strides=(1, 1), name = 'Loc81207', )(Res26938)
Res94301 = keras.layers.Reshape((3, 1, 4, 1), name = 'Res94301', )(Loc81207)
Cro34309 = keras.layers.Cropping3D(cropping=((2, 0), (0, 0), (0, 1)), name = 'Cro34309', )(Res94301)
Res7058 = keras.layers.Reshape((1, 1, 3), name = 'Res7058', )(Cro34309)
Res24097 = keras.layers.Reshape((1, 3), name = 'Res24097', )(Res7058)
Glo60798 = keras.layers.GlobalMaxPool1D(name = 'Glo60798', )(Res24097)
model = tf.keras.models.Model(inputs=[in0Sub64903,in1Sub64903], outputs=Glo60798)
w = model.get_layer('Loc81207').get_weights() 
w[0] = np.array([[[0.6939, 0.068, 0.6132, 0.8447], [0.6676, 0.3343, 0.5986, 0.4034], [0.3932, 0.5635, 0.1106, 0.7391], [0.5782, 0.7273, 0.3361, 0.3863], [0.6411, 0.2203, 0.9968, 0.1506], [0.2627, 0.9223, 0.5649, 0.8765], [0.8338, 0.1485, 0.1514, 0.7462], [0.203, 0.2381, 0.9708, 0.8662], [0.5416, 0.0171, 0.1564, 0.9632], [0.7229, 0.272, 0.2328, 0.986], [0.3419, 0.6666, 0.7306, 0.2901], [0.3893, 0.248, 0.2755, 0.8666]], [[0.6384, 0.7981, 0.9762, 0.77], [0.0038, 0.8093, 0.0922, 0.4993], [0.4855, 0.7895, 0.7689, 0.5889], [0.8279, 0.9336, 0.097, 0.0809], [0.6882, 0.94, 0.8722, 0.8628], [0.9376, 0.8941, 0.2107, 0.0835], [0.6972, 0.6931, 0.6107, 0.9863], [0.8507, 0.445, 0.1406, 0.5358], [0.0673, 0.6392, 0.1818, 0.1571], [0.8217, 0.6543, 0.5578, 0.7554], [0.5003, 0.349, 0.9391, 0.9377], [0.4499, 0.0621, 0.1322, 0.0196]], [[0.7409, 0.3377, 0.2298, 0.9695], [0.4935, 0.0889, 0.6301, 0.9131], [0.8462, 0.7112, 0.6169, 0.2024], [0.0355, 0.8698, 0.5318, 0.3418], [0.5961, 0.2949, 0.5695, 0.251], [0.3952, 0.9412, 0.8774, 0.4493], [0.0673, 0.2966, 0.953, 0.7442], [0.4309, 0.454, 0.2966, 0.9258], [0.6375, 0.8029, 0.9, 0.778], [0.1261, 0.8414, 0.4294, 0.4475], [0.9413, 0.6611, 0.8957, 0.8377], [0.6071, 0.1155, 0.1962, 0.2332]]])
w[1] = np.array([[[0, 0, 0, 0]], [[0, 0, 0, 0]], [[0, 0, 0, 0]]])
model.get_layer('Loc81207').set_weights(w) 
in0Sub64903 = tf.constant([[[[[0.613, 0.4861], [0.4203, 0.8465], [0.1344, 0.8224]], [[0.8744, 0.3032], [0.2773, 0.4614], [0.4958, 0.2018]]], [[[0.1916, 0.0481], [0.8877, 0.63], [0.1218, 0.75]], [[0.7087, 0.5757], [0.6418, 0.7128], [0.2708, 0.7415]]], [[[0.1211, 0.5456], [0.2505, 0.3096], [0.2546, 0.1106]], [[0.7874, 0.3797], [0.7869, 0.2597], [0.9916, 0.7402]]]]])
in1Sub64903 = tf.constant([[[[[0.0091, 0.9261], [0.2857, 0.4849], [0.2126, 0.1625]], [[0.0647, 0.7416], [0.0487, 0.2932], [0.8758, 0.4388]]], [[[0.6606, 0.3423], [0.6888, 0.6059], [0.5295, 0.2929]], [[0.859, 0.1741], [0.2088, 0.5344], [0.0672, 0.6271]]], [[[0.5076, 0.0637], [0.8639, 0.1353], [0.2275, 0.6199]], [[0.4395, 0.9998], [0.2601, 0.9517], [0.8982, 0.332]]]]])
print (np.array2string(model.predict([in0Sub64903,in1Sub64903],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Glo60798.png')

LSub64903 = subtract_layer([[[[[0.613, 0.4861], [0.4203, 0.8465], [0.1344, 0.8224]], [[0.8744, 0.3032], [0.2773, 0.4614], [0.4958, 0.2018]]], [[[0.1916, 0.0481], [0.8877, 0.63], [0.1218, 0.75]], [[0.7087, 0.5757], [0.6418, 0.7128], [0.2708, 0.7415]]], [[[0.1211, 0.5456], [0.2505, 0.3096], [0.2546, 0.1106]], [[0.7874, 0.3797], [0.7869, 0.2597], [0.9916, 0.7402]]]]], [[[[[0.0091, 0.9261], [0.2857, 0.4849], [0.2126, 0.1625]], [[0.0647, 0.7416], [0.0487, 0.2932], [0.8758, 0.4388]]], [[[0.6606, 0.3423], [0.6888, 0.6059], [0.5295, 0.2929]], [[0.859, 0.1741], [0.2088, 0.5344], [0.0672, 0.6271]]], [[[0.5076, 0.0637], [0.8639, 0.1353], [0.2275, 0.6199]], [[0.4395, 0.9998], [0.2601, 0.9517], [0.8982, 0.332]]]]], Sub64903), 
LRes26938 = reshape_layer(Sub64903, [3, 2, 6], Res26938), 
LLoc81207 = locally_connected2D_layer(Res26938, 1, 2,[[[0.6939, 0.068, 0.6132, 0.8447], [0.6676, 0.3343, 0.5986, 0.4034], [0.3932, 0.5635, 0.1106, 0.7391], [0.5782, 0.7273, 0.3361, 0.3863], [0.6411, 0.2203, 0.9968, 0.1506], [0.2627, 0.9223, 0.5649, 0.8765], [0.8338, 0.1485, 0.1514, 0.7462], [0.203, 0.2381, 0.9708, 0.8662], [0.5416, 0.0171, 0.1564, 0.9632], [0.7229, 0.272, 0.2328, 0.986], [0.3419, 0.6666, 0.7306, 0.2901], [0.3893, 0.248, 0.2755, 0.8666]], [[0.6384, 0.7981, 0.9762, 0.77], [0.0038, 0.8093, 0.0922, 0.4993], [0.4855, 0.7895, 0.7689, 0.5889], [0.8279, 0.9336, 0.097, 0.0809], [0.6882, 0.94, 0.8722, 0.8628], [0.9376, 0.8941, 0.2107, 0.0835], [0.6972, 0.6931, 0.6107, 0.9863], [0.8507, 0.445, 0.1406, 0.5358], [0.0673, 0.6392, 0.1818, 0.1571], [0.8217, 0.6543, 0.5578, 0.7554], [0.5003, 0.349, 0.9391, 0.9377], [0.4499, 0.0621, 0.1322, 0.0196]], [[0.7409, 0.3377, 0.2298, 0.9695], [0.4935, 0.0889, 0.6301, 0.9131], [0.8462, 0.7112, 0.6169, 0.2024], [0.0355, 0.8698, 0.5318, 0.3418], [0.5961, 0.2949, 0.5695, 0.251], [0.3952, 0.9412, 0.8774, 0.4493], [0.0673, 0.2966, 0.953, 0.7442], [0.4309, 0.454, 0.2966, 0.9258], [0.6375, 0.8029, 0.9, 0.778], [0.1261, 0.8414, 0.4294, 0.4475], [0.9413, 0.6611, 0.8957, 0.8377], [0.6071, 0.1155, 0.1962, 0.2332]]],[[[0, 0, 0, 0]], [[0, 0, 0, 0]], [[0, 0, 0, 0]]], 1, 1, Loc81207), 
LRes94301 = reshape_layer(Loc81207, [3, 1, 4, 1], Res94301), 
LCro34309 = cropping3D_layer(Res94301, 2, 0, 0, 0, 0, 1, Cro34309), 
LRes7058 = reshape_layer(Cro34309, [1, 1, 3], Res7058), 
LRes24097 = reshape_layer(Res7058, [1, 3], Res24097), 
LGlo60798 = global_max_pool1D_layer(Res24097, Glo60798), 
exec_layers([LSub64903,LRes26938,LLoc81207,LRes94301,LCro34309,LRes7058,LRes24097,LGlo60798],["Sub64903","Res26938","Loc81207","Res94301","Cro34309","Res7058","Res24097","Glo60798"],Glo60798,"Glo60798")

Actual (Unparsed): [[-0.4060107, -1.0724110, -0.0139632]]

Expected (Unparsed): [[-0.40601065999999997,-1.07241095,-0.013963139999999818]]

Actual:   [[-0.406, -1.0724, -0.0139]]

Expected: [[-0.406, -1.0724, -0.0139]]