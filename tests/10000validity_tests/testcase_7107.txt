import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Mul44028 = tf.keras.layers.Input(shape=([2, 2]))
in1Mul44028 = tf.keras.layers.Input(shape=([2, 2]))
in0Max29156 = tf.keras.layers.Input(shape=([2, 1]))
in1Max29156 = tf.keras.layers.Input(shape=([2, 1]))
in0Min9015 = tf.keras.layers.Input(shape=([2, 1]))
in1Min9015 = tf.keras.layers.Input(shape=([2, 1]))
in0Con55387 = tf.keras.layers.Input(shape=([2, 1]))

Mul44028 = keras.layers.Multiply(name = 'Mul44028', )([in0Mul44028,in1Mul44028])
Res67687 = keras.layers.Reshape((2, 2, 1), name = 'Res67687', )(Mul44028)
Max29156 = keras.layers.Maximum(name = 'Max29156', )([in0Max29156,in1Max29156])
Res99847 = keras.layers.Reshape((2, 1, 1), name = 'Res99847', )(Max29156)
Res7724 = keras.layers.Reshape((2, 1, 1, 1), name = 'Res7724', )(Res99847)
Con67311 = keras.layers.Conv3D(4, (1, 1, 1),strides=(2, 1, 1), padding='valid', dilation_rate=(1, 1, 1), name = 'Con67311', )(Res7724)
Res54600 = keras.layers.Reshape((2, 2, 1), name = 'Res54600', )(Con67311)
Ave63595 = keras.layers.Average(name = 'Ave63595', )([Res67687,Res54600])
Res20976 = keras.layers.Reshape((2, 2), name = 'Res20976', )(Ave63595)
Min9015 = keras.layers.Minimum(name = 'Min9015', )([in0Min9015,in1Min9015])
ELU10911 = keras.layers.ELU(alpha=1.0610367919343684, name = 'ELU10911', )(Min9015)
Con55387 = keras.layers.Concatenate(axis=2, name = 'Con55387', )([ELU10911,in0Con55387])
Mul56556 = keras.layers.Multiply(name = 'Mul56556', )([Res20976,Con55387])
model = tf.keras.models.Model(inputs=[in0Mul44028,in1Mul44028,in0Max29156,in1Max29156,in0Min9015,in1Min9015,in0Con55387], outputs=Mul56556)
w = model.get_layer('Con67311').get_weights() 
w[0] = np.array([[[[[0.1943, 0.0234, 0.9545, 0.3112]]]]])
w[1] = np.array([0, 0, 0, 0])
model.get_layer('Con67311').set_weights(w) 
in0Mul44028 = tf.constant([[[0.0809, 0.1065], [0.3027, 0.8203]]])
in1Mul44028 = tf.constant([[[0.2655, 0.35], [0.7765, 0.6445]]])
in0Max29156 = tf.constant([[[0.3601], [0.2799]]])
in1Max29156 = tf.constant([[[0.4306], [0.1714]]])
in0Min9015 = tf.constant([[[0.2282], [0.2396]]])
in1Min9015 = tf.constant([[[0.5507], [0.4448]]])
in0Con55387 = tf.constant([[[0.8419], [0.934]]])
print (np.array2string(model.predict([in0Mul44028,in1Mul44028,in0Max29156,in1Max29156,in0Min9015,in1Min9015,in0Con55387],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Mul56556.png')

LMul44028 = multiply_layer([[[[0.0809, 0.1065], [0.3027, 0.8203]]], [[[0.2655, 0.35], [0.7765, 0.6445]]]], Mul44028), 
LRes67687 = reshape_layer(Mul44028, [2, 2, 1], Res67687), 
LMax29156 = maximum_layer([[[[0.3601], [0.2799]]], [[[0.4306], [0.1714]]]], Max29156), 
LRes99847 = reshape_layer(Max29156, [2, 1, 1], Res99847), 
LRes7724 = reshape_layer(Res99847, [2, 1, 1, 1], Res7724), 
LCon67311 = conv3D_layer(Res7724, 1, 1, 1,[[[[[0.1943, 0.0234, 0.9545, 0.3112]]]]],[0, 0, 0, 0], 2, 1, 1, false, 1, 1, 1, Con67311), 
LRes54600 = reshape_layer(Con67311, [2, 2, 1], Res54600), 
LAve63595 = average_layer([Res67687,Res54600], Ave63595), 
LRes20976 = reshape_layer(Ave63595, [2, 2], Res20976), 
LMin9015 = minimum_layer([[[[0.2282], [0.2396]]], [[[0.5507], [0.4448]]]], Min9015), 
LELU10911 = elu_layer(Min9015, 1.0610367919343684, ELU10911), 
LCon55387 = concatenate_layer([ELU10911,[[[0.8419], [0.934]]]], 2, Con55387), 
LMul56556 = multiply_layer([Res20976,Con55387], Mul56556), 
exec_layers([LMul44028,LRes67687,LMax29156,LRes99847,LRes7724,LCon67311,LRes54600,LAve63595,LRes20976,LMin9015,LELU10911,LCon55387,LMul56556],["Mul44028","Res67687","Max29156","Res99847","Res7724","Con67311","Res54600","Ave63595","Res20976","Min9015","ELU10911","Con55387","Mul56556"],Mul56556,"Mul56556")

Actual (Unparsed): [[[0.0119970, 0.0199324], [0.0773973, 0.3094744]]]

Expected (Unparsed): [[[0.011996990873,0.019932420287999998],[0.07739729915,0.30947439469000004]]]

Actual:   [[[0.012, 0.02], [0.0774, 0.3095]]]

Expected: [[[0.012, 0.02], [0.0774, 0.3095]]]