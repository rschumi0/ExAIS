import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Sub32593 = tf.keras.layers.Input(shape=([3, 3]))
in1Sub32593 = tf.keras.layers.Input(shape=([3, 3]))

Sub32593 = keras.layers.Subtract(name = 'Sub32593', )([in0Sub32593,in1Sub32593])
Res13461 = keras.layers.Reshape((3, 3, 1), name = 'Res13461', )(Sub32593)
PRe24893 = keras.layers.PReLU(name = 'PRe24893', )(Res13461)
Cro73198 = keras.layers.Cropping2D(cropping=((2, 0), (0, 0)), name = 'Cro73198', )(PRe24893)
model = tf.keras.models.Model(inputs=[in0Sub32593,in1Sub32593], outputs=Cro73198)
w = model.get_layer('PRe24893').get_weights() 
w[0] = np.array([[[0.0846], [0.4928], [0.9398]], [[0.7017], [0.5155], [0.8083]], [[0.9528], [0.8101], [0.413]]])
model.get_layer('PRe24893').set_weights(w) 
in0Sub32593 = tf.constant([[[0.3716, 0.4518, 0.1691], [0.8962, 0.4526, 0.9678], [0.6571, 0.883, 0.9822]]])
in1Sub32593 = tf.constant([[[0.096, 0.057, 0.6101], [0.8464, 0.7831, 0.1608], [0.644, 0.3003, 0.0463]]])
print (np.array2string(model.predict([in0Sub32593,in1Sub32593],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Cro73198.png')

LSub32593 = subtract_layer([[[0.3716, 0.4518, 0.1691], [0.8962, 0.4526, 0.9678], [0.6571, 0.883, 0.9822]]], [[[0.096, 0.057, 0.6101], [0.8464, 0.7831, 0.1608], [0.644, 0.3003, 0.0463]]], Sub32593), 
LRes13461 = reshape_layer(Sub32593, [3, 3, 1], Res13461), 
LPRe24893 = prelu_layer(Res13461, [[[0.0846], [0.4928], [0.9398]], [[0.7017], [0.5155], [0.8083]], [[0.9528], [0.8101], [0.413]]], PRe24893), 
LCro73198 = cropping2D_layer(PRe24893, 2, 0, 0, 0, Cro73198), 
exec_layers([LSub32593,LRes13461,LPRe24893,LCro73198],["Sub32593","Res13461","PRe24893","Cro73198"],Cro73198,"Cro73198")

Actual (Unparsed): [[[[0.0131000], [0.5827000], [0.9359000]]]]

Expected (Unparsed): [[[[0.0131],[0.5827],[0.9359]]]]

Actual:   [[[[0.0131], [0.5827], [0.9359]]]]

Expected: [[[[0.0131], [0.5827], [0.9359]]]]