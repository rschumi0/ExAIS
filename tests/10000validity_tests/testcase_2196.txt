import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Mul96196 = tf.keras.layers.Input(shape=([2, 1, 2, 1]))
in1Mul96196 = tf.keras.layers.Input(shape=([2, 1, 2, 1]))
in0Con32558 = tf.keras.layers.Input(shape=([2, 1, 2, 1]))
in0Min47400 = tf.keras.layers.Input(shape=([1, 1, 1, 2]))
in1Min47400 = tf.keras.layers.Input(shape=([1, 1, 1, 2]))
in0Dot59193 = tf.keras.layers.Input(shape=([2]))
in1Dot59193 = tf.keras.layers.Input(shape=([2]))
in0Con67237 = tf.keras.layers.Input(shape=([35]))

Mul96196 = keras.layers.Multiply(name = 'Mul96196', )([in0Mul96196,in1Mul96196])
Con32558 = keras.layers.Concatenate(axis=4, name = 'Con32558', )([Mul96196,in0Con32558])
Min47400 = keras.layers.Minimum(name = 'Min47400', )([in0Min47400,in1Min47400])
Zer42683 = keras.layers.ZeroPadding3D(padding=((1, 0), (0, 0), (1, 0)), name = 'Zer42683', )(Min47400)
Add70475 = keras.layers.Add(name = 'Add70475', )([Con32558,Zer42683])
Res98703 = keras.layers.Reshape((2, 1, 4), name = 'Res98703', )(Add70475)
Con17080 = keras.layers.Conv2D(2, (2, 1),strides=(1, 1), padding='valid', dilation_rate=(1, 1), name = 'Con17080', )(Res98703)
Res14597 = keras.layers.Reshape((1, 1, 2, 1), name = 'Res14597', )(Con17080)
Zer69816 = keras.layers.ZeroPadding3D(padding=((1, 1), (1, 1), (1, 1)), name = 'Zer69816', )(Res14597)
Res38923 = keras.layers.Reshape((3, 3, 4), name = 'Res38923', )(Zer69816)
Res52590 = keras.layers.Reshape((3, 12), name = 'Res52590', )(Res38923)
Fla12786 = keras.layers.Flatten(name = 'Fla12786', )(Res52590)
Dot59193 = keras.layers.Dot(axes=(1, 1), name = 'Dot59193', )([in0Dot59193,in1Dot59193])
Lay98684 = keras.layers.LayerNormalization(axis=1, epsilon=2.371542373571482, name = 'Lay98684', )(Dot59193)
Con67237 = keras.layers.Concatenate(axis=1, name = 'Con67237', )([Lay98684,in0Con67237])
Add10875 = keras.layers.Add(name = 'Add10875', )([Fla12786,Con67237])
model = tf.keras.models.Model(inputs=[in0Mul96196,in1Mul96196,in0Con32558,in0Min47400,in1Min47400,in0Dot59193,in1Dot59193,in0Con67237], outputs=Add10875)
w = model.get_layer('Con17080').get_weights() 
w[0] = np.array([[[[0.5117, 0.4224], [0.3696, 0.8214], [0.5406, 0.8155], [0.1049, 0.7777]]], [[[0.4048, 0.021], [0.9345, 0.5108], [0.4509, 0.6722], [0.0547, 0.9059]]]])
w[1] = np.array([0, 0])
model.get_layer('Con17080').set_weights(w) 
in0Mul96196 = tf.constant([[[[[0.2078], [0.4742]]], [[[0.4809], [0.9265]]]]])
in1Mul96196 = tf.constant([[[[[0.4679], [0.9435]]], [[[0.5737], [0.8164]]]]])
in0Con32558 = tf.constant([[[[[0.9088], [0.6321]]], [[[0.4872], [0.513]]]]])
in0Min47400 = tf.constant([[[[[0.2494, 0.4386]]]]])
in1Min47400 = tf.constant([[[[[0.1219, 0.3393]]]]])
in0Dot59193 = tf.constant([[0.0416, 0.7104]])
in1Dot59193 = tf.constant([[0.4672, 0.1985]])
in0Con67237 = tf.constant([[0.9136, 0.0348, 0.3678, 0.0128, 0.1662, 0.0937, 0.765, 0.8095, 0.1373, 0.1086, 0.4217, 0.8415, 0.5822, 0.225, 0.4236, 0.4827, 0.1063, 0.6532, 0.9294, 0.2225, 0.6339, 0.2316, 0.0453, 0.6461, 0.217, 0.4295, 0.731, 0.1373, 0.8158, 0.244, 0.9783, 0.4294, 0.9348, 0.8876, 0.4482]])
print (np.array2string(model.predict([in0Mul96196,in1Mul96196,in0Con32558,in0Min47400,in1Min47400,in0Dot59193,in1Dot59193,in0Con67237],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Add10875.png')

LMul96196 = multiply_layer([[[[[[0.2078], [0.4742]]], [[[0.4809], [0.9265]]]]], [[[[[0.4679], [0.9435]]], [[[0.5737], [0.8164]]]]]], Mul96196), 
LCon32558 = concatenate_layer([Mul96196,[[[[[0.9088], [0.6321]]], [[[0.4872], [0.513]]]]]], 4, Con32558), 
LMin47400 = minimum_layer([[[[[[0.2494, 0.4386]]]]], [[[[[0.1219, 0.3393]]]]]], Min47400), 
LZer42683 = zero_padding3D_layer(Min47400, 1, 0, 0, 0, 1, 0, Zer42683), 
LAdd70475 = add_layer([Con32558,Zer42683], Add70475), 
LRes98703 = reshape_layer(Add70475, [2, 1, 4], Res98703), 
LCon17080 = conv2D_layer(Res98703, 2, 1,[[[[0.5117, 0.4224], [0.3696, 0.8214], [0.5406, 0.8155], [0.1049, 0.7777]]], [[[0.4048, 0.021], [0.9345, 0.5108], [0.4509, 0.6722], [0.0547, 0.9059]]]],[0, 0], 1, 1, false, 1, 1, Con17080), 
LRes14597 = reshape_layer(Con17080, [1, 1, 2, 1], Res14597), 
LZer69816 = zero_padding3D_layer(Res14597, 1, 1, 1, 1, 1, 1, Zer69816), 
LRes38923 = reshape_layer(Zer69816, [3, 3, 4], Res38923), 
LRes52590 = reshape_layer(Res38923, [3, 12], Res52590), 
LFla12786 = flatten_layer(Res52590, Fla12786), 
LDot59193 = dot_layer([[0.0416, 0.7104]], [[0.4672, 0.1985]], 1, 1, Dot59193), 
LLay98684 = layer_normalization_layer(Dot59193, 1, 2.371542373571482, Lay98684), 
LCon67237 = concatenate_layer([Lay98684,[[0.9136, 0.0348, 0.3678, 0.0128, 0.1662, 0.0937, 0.765, 0.8095, 0.1373, 0.1086, 0.4217, 0.8415, 0.5822, 0.225, 0.4236, 0.4827, 0.1063, 0.6532, 0.9294, 0.2225, 0.6339, 0.2316, 0.0453, 0.6461, 0.217, 0.4295, 0.731, 0.1373, 0.8158, 0.244, 0.9783, 0.4294, 0.9348, 0.8876, 0.4482]]], 1, Con67237), 
LAdd10875 = add_layer([Fla12786,Con67237], Add10875), 
exec_layers([LMul96196,LCon32558,LMin47400,LZer42683,LAdd70475,LRes98703,LCon17080,LRes14597,LZer69816,LRes38923,LRes52590,LFla12786,LDot59193,LLay98684,LCon67237,LAdd10875],["Mul96196","Con32558","Min47400","Zer42683","Add70475","Res98703","Con17080","Res14597","Zer69816","Res38923","Res52590","Fla12786","Dot59193","Lay98684","Con67237","Add10875"],Add10875,"Add10875")

Actual (Unparsed): [[0.0000000, 0.9136000, 0.0348000, 0.3678000, 0.0128000, 0.1662000, 0.0937000, 0.7650000, 0.8095000, 0.1373000, 0.1086000, 0.4217000, 0.8415000, 0.5822000, 0.2250000, 0.4236000, 0.4827000, 1.8097342, 3.9143469, 0.9294000, 0.2225000, 0.6339000, 0.2316000, 0.0453000, 0.6461000, 0.2170000, 0.4295000, 0.7310000, 0.1373000, 0.8158000, 0.2440000, 0.9783000, 0.4294000, 0.9348000, 0.8876000, 0.4482000]]

Expected (Unparsed): [[0.0,0.9136,0.0348,0.3678,0.0128,0.1662,0.0937,0.765,0.8095,0.1373,0.1086,0.4217,0.8415,0.5822,0.225,0.4236,0.4827,1.8097342294980001,3.9143469598880003,0.9294,0.2225,0.6339,0.2316,0.0453,0.6461,0.217,0.4295,0.731,0.1373,0.8158,0.244,0.9783,0.4294,0.9348,0.8876,0.4482]]

Actual:   [[0, 0.9136, 0.0348, 0.3678, 0.0128, 0.1662, 0.0937, 0.765, 0.8095, 0.1373, 0.1086, 0.4217, 0.8415, 0.5822, 0.225, 0.4236, 0.4827, 1.8098, 3.9144, 0.9294, 0.2225, 0.6339, 0.2316, 0.0453, 0.6461, 0.217, 0.4295, 0.731, 0.1373, 0.8158, 0.244, 0.9783, 0.4294, 0.9348, 0.8876, 0.4482]]

Expected: [[0, 0.9136, 0.0348, 0.3678, 0.0128, 0.1662, 0.0937, 0.765, 0.8095, 0.1373, 0.1086, 0.4217, 0.8415, 0.5822, 0.225, 0.4236, 0.4827, 1.8098, 3.9144, 0.9294, 0.2225, 0.6339, 0.2316, 0.0453, 0.6461, 0.217, 0.4295, 0.731, 0.1373, 0.8158, 0.244, 0.9783, 0.4294, 0.9348, 0.8876, 0.4482]]