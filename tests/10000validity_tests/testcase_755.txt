import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Mul7775 = tf.keras.layers.Input(shape=([1, 2, 2]))
in1Mul7775 = tf.keras.layers.Input(shape=([1, 2, 2]))
in0Max19984 = tf.keras.layers.Input(shape=([1, 1]))
in1Max19984 = tf.keras.layers.Input(shape=([1, 1]))
in0Con71432 = tf.keras.layers.Input(shape=([1, 3]))

Mul7775 = keras.layers.Multiply(name = 'Mul7775', )([in0Mul7775,in1Mul7775])
Res54767 = keras.layers.Reshape((1, 4), name = 'Res54767', )(Mul7775)
Max19984 = keras.layers.Maximum(name = 'Max19984', )([in0Max19984,in1Max19984])
Con71432 = keras.layers.Concatenate(axis=2, name = 'Con71432', )([Max19984,in0Con71432])
Max28902 = keras.layers.Maximum(name = 'Max28902', )([Res54767,Con71432])
model = tf.keras.models.Model(inputs=[in0Mul7775,in1Mul7775,in0Max19984,in1Max19984,in0Con71432], outputs=Max28902)
in0Mul7775 = tf.constant([[[[0.9881, 0.7095], [0.5428, 0.0576]]]])
in1Mul7775 = tf.constant([[[[0.8162, 0.3157], [0.7265, 0.3096]]]])
in0Max19984 = tf.constant([[[0.3883]]])
in1Max19984 = tf.constant([[[0.3863]]])
in0Con71432 = tf.constant([[[0.2931, 0.8263, 0.9765]]])
print (np.array2string(model.predict([in0Mul7775,in1Mul7775,in0Max19984,in1Max19984,in0Con71432],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Max28902.png')

LMul7775 = multiply_layer([[[[[0.9881, 0.7095], [0.5428, 0.0576]]]], [[[[0.8162, 0.3157], [0.7265, 0.3096]]]]], Mul7775), 
LRes54767 = reshape_layer(Mul7775, [1, 4], Res54767), 
LMax19984 = maximum_layer([[[[0.3883]]], [[[0.3863]]]], Max19984), 
LCon71432 = concatenate_layer([Max19984,[[[0.2931, 0.8263, 0.9765]]]], 2, Con71432), 
LMax28902 = maximum_layer([Res54767,Con71432], Max28902), 
exec_layers([LMul7775,LRes54767,LMax19984,LCon71432,LMax28902],["Mul7775","Res54767","Max19984","Con71432","Max28902"],Max28902,"Max28902")

Actual (Unparsed): [[[0.8064872, 0.2931000, 0.8263000, 0.9765000]]]

Expected (Unparsed): [[[0.8064872200000001,0.2931,0.8263,0.9765]]]

Actual:   [[[0.8065, 0.2931, 0.8263, 0.9765]]]

Expected: [[[0.8065, 0.2931, 0.8263, 0.9765]]]