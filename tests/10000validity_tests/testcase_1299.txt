import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Mul15199 = tf.keras.layers.Input(shape=([2, 1]))
in1Mul15199 = tf.keras.layers.Input(shape=([2, 1]))

Mul15199 = keras.layers.Multiply(name = 'Mul15199', )([in0Mul15199,in1Mul15199])
Ave39092 = keras.layers.AveragePooling1D(pool_size=(1), name = 'Ave39092', )(Mul15199)
Res70127 = keras.layers.Reshape((2, 1, 1), name = 'Res70127', )(Ave39092)
Zer33535 = keras.layers.ZeroPadding2D(padding=((1, 1), (1, 1)), name = 'Zer33535', )(Res70127)
model = tf.keras.models.Model(inputs=[in0Mul15199,in1Mul15199], outputs=Zer33535)
in0Mul15199 = tf.constant([[[0.541], [0.745]]])
in1Mul15199 = tf.constant([[[0.888], [0.0111]]])
print (np.array2string(model.predict([in0Mul15199,in1Mul15199],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Zer33535.png')

LMul15199 = multiply_layer([[[[0.541], [0.745]]], [[[0.888], [0.0111]]]], Mul15199), 
LAve39092 = average_pooling1D_layer(Mul15199, 1, Ave39092), 
LRes70127 = reshape_layer(Ave39092, [2, 1, 1], Res70127), 
LZer33535 = zero_padding2D_layer(Res70127, 1, 1, 1, 1, Zer33535), 
exec_layers([LMul15199,LAve39092,LRes70127,LZer33535],["Mul15199","Ave39092","Res70127","Zer33535"],Zer33535,"Zer33535")

Actual (Unparsed): [[[[0.0000000], [0.0000000], [0.0000000]], [[0.0000000], [0.4804080], [0.0000000]], [[0.0000000], [0.0082695], [0.0000000]], [[0.0000000], [0.0000000], [0.0000000]]]]

Expected (Unparsed): [[[[0],[0],[0]],[[0],[0.48040800000000006],[0]],[[0],[0.0082695],[0]],[[0],[0],[0]]]]

Actual:   [[[[0], [0], [0]], [[0], [0.4805], [0]], [[0], [0.0083], [0]], [[0], [0], [0]]]]

Expected: [[[[0], [0], [0]], [[0], [0.4805], [0]], [[0], [0.0083], [0]], [[0], [0], [0]]]]