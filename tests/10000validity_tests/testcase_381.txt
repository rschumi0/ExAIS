import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Dot9419 = tf.keras.layers.Input(shape=([2, 3]))
in1Dot9419 = tf.keras.layers.Input(shape=([2, 3]))
in0Con3619 = tf.keras.layers.Input(shape=([3, 97]))
in0Glo12649 = tf.keras.layers.Input(shape=([1, 2, 1]))
in0Con67850 = tf.keras.layers.Input(shape=([5, 5, 5, 3]))
in0Con28500 = tf.keras.layers.Input(shape=([1, 2, 1, 2]))
in0Zer18733 = tf.keras.layers.Input(shape=([3, 3, 3, 4]))
in0Max12371 = tf.keras.layers.Input(shape=([1, 1, 1, 2]))
in1Max12371 = tf.keras.layers.Input(shape=([1, 1, 1, 2]))
in0Con9684 = tf.keras.layers.Input(shape=([5, 5, 5, 2]))

Dot9419 = keras.layers.Dot(axes=(1, 1), name = 'Dot9419', )([in0Dot9419,in1Dot9419])
Con3619 = keras.layers.Concatenate(axis=2, name = 'Con3619', )([Dot9419,in0Con3619])
Glo12649 = keras.layers.GlobalAveragePooling2D(name = 'Glo12649', )(in0Glo12649)
ReL19841 = keras.layers.ReLU(max_value=8.837191663885624, negative_slope=7.2508978032166045, threshold=2.712182838455268, name = 'ReL19841', )(Glo12649)
Res52448 = keras.layers.Reshape((1, 1), name = 'Res52448', )(ReL19841)
Res39531 = keras.layers.Reshape((1, 1, 1), name = 'Res39531', )(Res52448)
Res21422 = keras.layers.Reshape((1, 1, 1, 1), name = 'Res21422', )(Res39531)
Zer47426 = keras.layers.ZeroPadding3D(padding=((4, 0), (4, 0), (4, 0)), name = 'Zer47426', )(Res21422)
Con67850 = keras.layers.Concatenate(axis=4, name = 'Con67850', )([Zer47426,in0Con67850])
Con28500 = keras.layers.Conv3DTranspose(4, (1, 1, 1),strides=(1, 1, 1), padding='valid', name = 'Con28500', )(in0Con28500)
Zer73954 = keras.layers.ZeroPadding3D(padding=((4, 0), (3, 0), (4, 0)), name = 'Zer73954', )(Con28500)
Zer18733 = keras.layers.ZeroPadding3D(padding=((1, 1), (1, 1), (1, 1)), name = 'Zer18733', )(in0Zer18733)
Sub57066 = keras.layers.Subtract(name = 'Sub57066', )([Zer73954,Zer18733])
Max12371 = keras.layers.Maximum(name = 'Max12371', )([in0Max12371,in1Max12371])
Zer40673 = keras.layers.ZeroPadding3D(padding=((4, 0), (4, 0), (4, 0)), name = 'Zer40673', )(Max12371)
Con9684 = keras.layers.Concatenate(axis=4, name = 'Con9684', )([Zer40673,in0Con9684])
Sub87817 = keras.layers.Subtract(name = 'Sub87817', )([Sub57066,Con9684])
Mul94320 = keras.layers.Multiply(name = 'Mul94320', )([Con67850,Sub87817])
Res86664 = keras.layers.Reshape((5, 5, 20), name = 'Res86664', )(Mul94320)
Res99459 = keras.layers.Reshape((5, 100), name = 'Res99459', )(Res86664)
Zer34292 = keras.layers.ZeroPadding1D(padding=((2, 0)), name = 'Zer34292', )(Res99459)
Dot44039 = keras.layers.Dot(axes=(2, 2), name = 'Dot44039', )([Con3619,Zer34292])
model = tf.keras.models.Model(inputs=[in0Dot9419,in1Dot9419,in0Con3619,in0Glo12649,in0Con67850,in0Con28500,in0Zer18733,in0Max12371,in1Max12371,in0Con9684], outputs=Dot44039)
w = model.get_layer('Con28500').get_weights() 
w[0] = np.array([[[[[0.5095, 0.2869], [0.5109, 0.6197], [0.2137, 0.6034], [0.5474, 0.7341]]]]])
w[1] = np.array([0, 0, 0, 0])
model.get_layer('Con28500').set_weights(w) 
in0Dot9419 = tf.constant([[[0.0243, 0.9301, 0.5431], [0.6679, 0.5955, 0.2358]]])
in1Dot9419 = tf.constant([[[0.7922, 0.0187, 0.9561], [0.0219, 0.0947, 0.9611]]])
in0Con3619 = tf.constant([[[0.4688, 0.8605, 0.7995, 0.0166, 0.3573, 0.7579, 0.1247, 0.1986, 0.5474, 0.8767, 0.9988, 0.1361, 0.8223, 0.768, 0.1979, 0.9149, 0.2937, 0.4633, 0.2987, 0.9939, 0.0032, 0.8456, 0.4278, 0.9262, 0.5129, 0.7625, 0.3061, 0.523, 0.2436, 0.7133, 0.6597, 0.2027, 0.2956, 0.675, 0.3717, 0.4505, 0.3657, 0.5173, 0.4524, 0.1555, 0.1592, 0.5053, 0.0275, 0.0893, 0.3906, 0.5821, 0.0566, 0.9425, 0.0624, 0.4874, 0.426, 0.1474, 0.2186, 0.2746, 0.3909, 0.177, 0.7796, 0.4611, 0.0823, 0.138, 0.3825, 0.8723, 0.938, 0.2471, 0.3747, 0.2177, 0.4705, 0.222, 0.2387, 0.5795, 0.7409, 0.7018, 0.762, 0.285, 0.2746, 0.565, 0.2077, 0.0856, 0.9215, 0.4118, 0.5924, 0.1713, 0.3444, 0.5406, 0.9285, 0.3121, 0.3989, 0.4611, 0.9542, 0.3376, 0.6581, 0.3623, 0.4388, 0.2399, 0.7337, 0.9774, 0.6244], [0.4176, 0.8414, 0.9765, 0.7465, 0.9647, 0.2728, 0.357, 0.862, 0.4553, 0.0446, 0.297, 0.4033, 0.3713, 0.0209, 0.5934, 0.9791, 0.1794, 0.228, 0.1149, 0.945, 0.0756, 0.9155, 0.6637, 0.1786, 0.5841, 0.157, 0.2655, 0.3123, 0.5241, 0.429, 0.1827, 0.3982, 0.3359, 0.6566, 0.8824, 0.6137, 0.4004, 0.6765, 0.7796, 0.1465, 0.776, 0.9275, 0.8244, 0.8457, 0.7287, 0.4527, 0.9059, 0.5718, 0.5378, 0.973, 0.603, 0.4318, 0.322, 0.8743, 0.0301, 0.2508, 0.049, 0.4395, 0.3966, 0.6948, 0.4683, 0.555, 0.4277, 0.4353, 0.4373, 0.4185, 0.9798, 0.6258, 0.9986, 0.4869, 0.0217, 0.7457, 0.6106, 0.0146, 0.653, 0.5614, 0.1335, 0.0555, 0.983, 0.5494, 0.5297, 0.7263, 0.5021, 0.6353, 0.7499, 0.8634, 0.0457, 0.5119, 0.9442, 0.944, 0.5709, 0.1145, 0.9654, 0.2887, 0.7448, 0.0605, 0.1099], [0.1129, 0.779, 0.9856, 0.1821, 0.954, 0.0342, 0.7464, 0.2591, 0.3643, 0.6666, 0.4036, 0.9868, 0.5314, 0.9914, 0.7452, 0.8409, 0.6635, 0.2979, 0.8666, 0.5506, 0.5599, 0.5656, 0.9845, 0.8035, 0.7778, 0.9057, 0.2294, 0.4222, 0.2002, 0.5765, 0.6346, 0.4361, 0.6125, 0.1094, 0.9199, 0.8613, 0.1031, 0.4216, 0.9537, 0.5411, 0.7179, 0.7876, 0.9711, 0.1048, 0.8178, 0.1977, 0.7225, 0.9553, 0.0176, 0.938, 0.7321, 0.2103, 0.4148, 0.1947, 0.7597, 0.6906, 0.0579, 0.1066, 0.3714, 0.3736, 0.2497, 0.9679, 0.2544, 0.2129, 0.33, 0.218, 0.5356, 0.8614, 0.0443, 0.4467, 0.9044, 0.6289, 0.4656, 0.8887, 0.7776, 0.9572, 0.7094, 0.786, 0.0992, 0.8006, 0.3571, 0.5559, 0.6159, 0.5621, 0.5869, 0.9177, 0.6356, 0.657, 0.5015, 0.0037, 0.3406, 0.3468, 0.0344, 0.0091, 0.7029, 0.2223, 0.1216]]])
in0Glo12649 = tf.constant([[[[1.4544], [1.3842]]]])
in0Con67850 = tf.constant([[[[[0.8696, 0.8947, 0.5377], [0.9354, 0.8068, 0.8293], [0.7361, 0.1267, 0.6004], [0.2832, 0.9907, 0.0175], [0.1071, 0.6612, 0.9231]], [[0.9647, 0.3981, 0.2989], [0.1366, 0.4451, 0.179], [0.5007, 0.4945, 0.4483], [0.2446, 0.8393, 0.6793], [0.8462, 0.2835, 0.7419]], [[0.3578, 0.0964, 0.908], [0.6455, 0.5418, 0.7117], [0.0009, 0.1643, 0.1506], [0.4251, 0.341, 0.7778], [0.3597, 0.8694, 0.9998]], [[0.5264, 0.0475, 0.8941], [0.1846, 0.0744, 0.5448], [0.3531, 0.0452, 0.2936], [0.9291, 0.3047, 0.4576], [0.2074, 0.3139, 0.0927]], [[0.9527, 0.7376, 0.9311], [0.6999, 0.765, 0.1989], [0.3259, 0.0993, 0.4461], [0.8978, 0.6439, 0.0681], [0.6059, 0.5109, 0.8236]]], [[[0.0745, 0.1248, 0.1402], [0.4819, 0.4, 0.6151], [0.0719, 0.4229, 0.6159], [0.9987, 0.305, 0.9917], [0.9002, 0.818, 0.8533]], [[0.9453, 0.4473, 0.297], [0.6781, 0.1201, 0.4046], [0.2326, 0.8596, 0.9376], [0.3482, 0.5086, 0.2781], [0.7089, 0.3035, 0.4]], [[0.6452, 0.7734, 0.7085], [0.8607, 0.1937, 0.7392], [0.5218, 0.6751, 0.721], [0.4809, 0.8843, 0.6924], [0.9625, 0.0918, 0.357]], [[0.3606, 0.4646, 0.6919], [0.7808, 0.4313, 0.2285], [0.8453, 0.2258, 0.0145], [0.3962, 0.356, 0.3375], [0.1289, 0.1655, 0.3801]], [[0.6194, 0.5158, 0.9352], [0.1146, 0.8423, 0.7626], [0.407, 0.8092, 0.82], [0.717, 0.9996, 0.48], [0.2492, 0.7615, 0.4683]]], [[[0.5034, 0.1767, 0.7694], [0.0616, 0.2129, 0.9263], [0.4619, 0.9015, 0.7328], [0.9946, 0.449, 0.5225], [0.5437, 0.5099, 0.451]], [[0.6696, 0.6916, 0.3348], [0.0692, 0.5216, 0.1322], [0.7897, 0.0051, 0.4795], [0.4281, 0.2786, 0.8086], [0.5403, 0.9095, 0.8013]], [[0.079, 0.0615, 0.4478], [0.4558, 0.5389, 0.416], [0.1971, 0.5522, 0.5542], [0.6332, 0.0096, 0.8865], [0.483, 0.6289, 0.7481]], [[0.0565, 0.7027, 0.0373], [0.3851, 0.4401, 0.286], [0.9747, 0.604, 0.604], [0.0739, 0.2903, 0.5999], [0.4592, 0.3317, 0.9867]], [[0.9131, 0.4406, 0.2601], [0.5312, 0.4264, 0.3517], [0.3852, 0.7203, 0.1028], [0.2838, 0.2502, 0.608], [0.6489, 0.1998, 0.8954]]], [[[0.764, 0.0536, 0.3509], [0.3257, 0.7904, 0.8678], [0.6886, 0.5378, 0.5887], [0.1659, 0.8255, 0.7089], [0.3478, 0.366, 0.9037]], [[0.8308, 0.6001, 0.4662], [0.936, 0.4175, 0.979], [0.8043, 0.7984, 0.9069], [0.5065, 0.1467, 0.0753], [0.0356, 0.3336, 0.7659]], [[0.3834, 0.7711, 0.8659], [0.1834, 0.6346, 0.3548], [0.1135, 0.4205, 0.9368], [0.6282, 0.9255, 0.9253], [0.478, 0.0961, 0.4905]], [[0.8268, 0.7878, 0.112], [0.1157, 0.8023, 0.2345], [0.1661, 0.8315, 0.6426], [0.4726, 0.4967, 0.8147], [0.5432, 0.8322, 0.1574]], [[0.9667, 0.2632, 0.3158], [0.2243, 0.2437, 0.5506], [0.9505, 0.0484, 0.4912], [0.6556, 0.7354, 0.329], [0.6085, 0.3259, 0.3165]]], [[[0.3102, 0.8369, 0.411], [0.8247, 0.5911, 0.8494], [0.0902, 0.0216, 0.8776], [0.1036, 0.782, 0.0093], [0.5019, 0.6128, 0.9938]], [[0.2832, 0.6912, 0.8877], [0.7263, 0.8329, 0.3722], [0.3088, 0.5607, 0.3284], [0.7682, 0.5964, 0.2252], [0.17, 0.1661, 0.367]], [[0.2616, 0.3239, 0.0071], [0.9856, 0.3972, 0.4178], [0.8926, 0.0537, 0.36], [0.5299, 0.1858, 0.9104], [0.1753, 0.4675, 0.6361]], [[0.4647, 0.426, 0.1022], [0.8586, 0.5261, 0.5691], [0.5068, 0.5587, 0.5567], [0.1632, 0.2192, 0.1088], [0.4275, 0.7789, 0.9522]], [[0.4559, 0.3297, 0.4412], [0.4582, 0.3659, 0.4658], [0.6836, 0.0645, 0.6983], [0.5247, 0.6805, 0.5994], [0.7416, 0.2306, 0.471]]]]])
in0Con28500 = tf.constant([[[[[0.481, 0.1988]], [[0.0033, 0.3404]]]]])
in0Zer18733 = tf.constant([[[[[1.999, 1.5997, 1.3453, 1.2385], [1.6807, 1.7138, 1.0248, 1.8994], [1.9489, 1.8081, 1.637, 1.182]], [[1.1064, 1.9957, 1.6092, 1.0375], [1.9371, 1.2422, 1.1068, 1.4053], [1.993, 1.6482, 1.6579, 1.4962]], [[1.8418, 1.4272, 1.7412, 1.1069], [1.4045, 1.4233, 1.8918, 1.6143], [1.5275, 1.8487, 1.8456, 1.2099]]], [[[1.1001, 1.1578, 1.8657, 1.7517], [1.3561, 1.622, 1.6707, 1.3342], [1.4765, 1.2197, 1.3213, 1.3074]], [[1.2522, 1.9154, 1.012, 1.0123], [1.3549, 1.265, 1.96, 1.9422], [1.7179, 1.5541, 1.4901, 1.3867]], [[1.6341, 1.3567, 1.9697, 1.873], [1.4404, 1.4788, 1.4686, 1.8773], [1.0774, 1.7461, 1.8854, 1.3483]]], [[[1.3885, 1.9871, 1.8158, 1.5573], [1.7538, 1.8668, 1.6171, 1.6708], [1.5412, 1.9314, 1.9692, 1.2254]], [[1.903, 1.3432, 1.7264, 1.3795], [1.6437, 1.3, 1.0074, 1.4132], [1.2437, 1.0641, 1.2839, 1.454]], [[1.635, 1.8577, 1.6884, 1.8155], [1.994, 1.6205, 1.8899, 1.6556], [1.6419, 1.7702, 1.6601, 1.8822]]]]])
in0Max12371 = tf.constant([[[[[0.1249, 0.6612]]]]])
in1Max12371 = tf.constant([[[[[0.6893, 0.3669]]]]])
in0Con9684 = tf.constant([[[[[0.9669, 0.7664], [0.4862, 0.8547], [0.3149, 0.5493], [0.5618, 0.3065], [0.7494, 0.6404]], [[0.0024, 0.5354], [0.9851, 0.8124], [0.0214, 0.8719], [0.6314, 0.766], [0.3844, 0.4356]], [[0.5511, 0.9387], [0.303, 0.1642], [0.8723, 0.5498], [0.0665, 0.6818], [0.2018, 0.9158]], [[0.9558, 0.7217], [0.8678, 0.7941], [0.4644, 0.8794], [0.9545, 0.1422], [0.489, 0.9221]], [[0.4798, 0.2138], [0.947, 0.7496], [0.3167, 0.36], [0.227, 0.3716], [0.3617, 0.2482]]], [[[0.9864, 0.9403], [0.0121, 0.4679], [0.0713, 0.9636], [0.2318, 0.6552], [0.7547, 0.3125]], [[0.3545, 0.3308], [0.062, 0.5298], [0.3048, 0.6265], [0.6868, 0.252], [0.1002, 0.9476]], [[0.8848, 0.2624], [0.337, 0.4116], [0.7804, 0.8076], [0.8633, 0.5911], [0.7183, 0.3316]], [[0.9926, 0.6894], [0.6512, 0.7066], [0.4225, 0.7832], [0.0646, 0.374], [0.4884, 0.1751]], [[0.6127, 0.5482], [0.5046, 0.2188], [0.4589, 0.7791], [0.7231, 0.2017], [0.3021, 0.7261]]], [[[0.8749, 0.0009], [0.2026, 0.9477], [0.3496, 0.2628], [0.6189, 0.8805], [0.8171, 0.8016]], [[0.514, 0.9499], [0.4959, 0.7571], [0.9987, 0.9301], [0.3353, 0.8113], [0.7412, 0.2573]], [[0.0925, 0.4204], [0.2895, 0.9858], [0.6582, 0.5889], [0.5322, 0.4753], [0.0129, 0.1853]], [[0.7508, 0.6964], [0.8802, 0.1779], [0.1061, 0.2521], [0.4848, 0.4567], [0.9459, 0.8263]], [[0.8195, 0.1001], [0.0199, 0.7887], [0.4786, 0.0401], [0.5451, 0.1175], [0.4258, 0.0912]]], [[[0.0768, 0.6274], [0.0294, 0.2118], [0.3113, 0.7358], [0.3197, 0.6908], [0.2682, 0.6429]], [[0.7022, 0.6704], [0.7858, 0.8512], [0.2959, 0.051], [0.8961, 0.4135], [0.6535, 0.3554]], [[0.445, 0.1554], [0.872, 0.5758], [0.2689, 0.3967], [0.0001, 0.3732], [0.3476, 0.3651]], [[0.215, 0.2553], [0.6167, 0.5857], [0.4493, 0.5184], [0.54, 0.0129], [0.028, 0.8085]], [[0.1183, 0.5723], [0.3991, 0.1279], [0.7426, 0.0766], [0.2278, 0.9959], [0.1874, 0.1927]]], [[[0.965, 0.2565], [0.0833, 0.2472], [0.4974, 0.7182], [0.4095, 0.1807], [0.6403, 0.4132]], [[0.9002, 0.8868], [0.0436, 0.7615], [0.7767, 0.5052], [0.5469, 0.3448], [0.8809, 0.9771]], [[0.1428, 0.3041], [0.113, 0.3174], [0.4841, 0.6062], [0.0602, 0.6091], [0.307, 0.5477]], [[0.8353, 0.6834], [0.232, 0.9058], [0.444, 0.8149], [0.1512, 0.0859], [0.4454, 0.5279]], [[0.816, 0.4632], [0.2794, 0.7925], [0.295, 0.8739], [0.396, 0.4651], [0.6915, 0.8687]]]]])
print (np.array2string(model.predict([in0Dot9419,in1Dot9419,in0Con3619,in0Glo12649,in0Con67850,in0Con28500,in0Zer18733,in0Max12371,in1Max12371,in0Con9684],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Dot44039.png')

LDot9419 = dot_layer([[[0.0243, 0.9301, 0.5431], [0.6679, 0.5955, 0.2358]]], [[[0.7922, 0.0187, 0.9561], [0.0219, 0.0947, 0.9611]]], 1, 1, Dot9419), 
LCon3619 = concatenate_layer([Dot9419,[[[0.4688, 0.8605, 0.7995, 0.0166, 0.3573, 0.7579, 0.1247, 0.1986, 0.5474, 0.8767, 0.9988, 0.1361, 0.8223, 0.768, 0.1979, 0.9149, 0.2937, 0.4633, 0.2987, 0.9939, 0.0032, 0.8456, 0.4278, 0.9262, 0.5129, 0.7625, 0.3061, 0.523, 0.2436, 0.7133, 0.6597, 0.2027, 0.2956, 0.675, 0.3717, 0.4505, 0.3657, 0.5173, 0.4524, 0.1555, 0.1592, 0.5053, 0.0275, 0.0893, 0.3906, 0.5821, 0.0566, 0.9425, 0.0624, 0.4874, 0.426, 0.1474, 0.2186, 0.2746, 0.3909, 0.177, 0.7796, 0.4611, 0.0823, 0.138, 0.3825, 0.8723, 0.938, 0.2471, 0.3747, 0.2177, 0.4705, 0.222, 0.2387, 0.5795, 0.7409, 0.7018, 0.762, 0.285, 0.2746, 0.565, 0.2077, 0.0856, 0.9215, 0.4118, 0.5924, 0.1713, 0.3444, 0.5406, 0.9285, 0.3121, 0.3989, 0.4611, 0.9542, 0.3376, 0.6581, 0.3623, 0.4388, 0.2399, 0.7337, 0.9774, 0.6244], [0.4176, 0.8414, 0.9765, 0.7465, 0.9647, 0.2728, 0.357, 0.862, 0.4553, 0.0446, 0.297, 0.4033, 0.3713, 0.0209, 0.5934, 0.9791, 0.1794, 0.228, 0.1149, 0.945, 0.0756, 0.9155, 0.6637, 0.1786, 0.5841, 0.157, 0.2655, 0.3123, 0.5241, 0.429, 0.1827, 0.3982, 0.3359, 0.6566, 0.8824, 0.6137, 0.4004, 0.6765, 0.7796, 0.1465, 0.776, 0.9275, 0.8244, 0.8457, 0.7287, 0.4527, 0.9059, 0.5718, 0.5378, 0.973, 0.603, 0.4318, 0.322, 0.8743, 0.0301, 0.2508, 0.049, 0.4395, 0.3966, 0.6948, 0.4683, 0.555, 0.4277, 0.4353, 0.4373, 0.4185, 0.9798, 0.6258, 0.9986, 0.4869, 0.0217, 0.7457, 0.6106, 0.0146, 0.653, 0.5614, 0.1335, 0.0555, 0.983, 0.5494, 0.5297, 0.7263, 0.5021, 0.6353, 0.7499, 0.8634, 0.0457, 0.5119, 0.9442, 0.944, 0.5709, 0.1145, 0.9654, 0.2887, 0.7448, 0.0605, 0.1099], [0.1129, 0.779, 0.9856, 0.1821, 0.954, 0.0342, 0.7464, 0.2591, 0.3643, 0.6666, 0.4036, 0.9868, 0.5314, 0.9914, 0.7452, 0.8409, 0.6635, 0.2979, 0.8666, 0.5506, 0.5599, 0.5656, 0.9845, 0.8035, 0.7778, 0.9057, 0.2294, 0.4222, 0.2002, 0.5765, 0.6346, 0.4361, 0.6125, 0.1094, 0.9199, 0.8613, 0.1031, 0.4216, 0.9537, 0.5411, 0.7179, 0.7876, 0.9711, 0.1048, 0.8178, 0.1977, 0.7225, 0.9553, 0.0176, 0.938, 0.7321, 0.2103, 0.4148, 0.1947, 0.7597, 0.6906, 0.0579, 0.1066, 0.3714, 0.3736, 0.2497, 0.9679, 0.2544, 0.2129, 0.33, 0.218, 0.5356, 0.8614, 0.0443, 0.4467, 0.9044, 0.6289, 0.4656, 0.8887, 0.7776, 0.9572, 0.7094, 0.786, 0.0992, 0.8006, 0.3571, 0.5559, 0.6159, 0.5621, 0.5869, 0.9177, 0.6356, 0.657, 0.5015, 0.0037, 0.3406, 0.3468, 0.0344, 0.0091, 0.7029, 0.2223, 0.1216]]]], 2, Con3619), 
LGlo12649 = global_average_pooling2D_layer([[[[1.4544], [1.3842]]]], Glo12649), 
LReL19841 = relu_layer(Glo12649, 8.837191663885624, 7.2508978032166045, 2.712182838455268, ReL19841), 
LRes52448 = reshape_layer(ReL19841, [1, 1], Res52448), 
LRes39531 = reshape_layer(Res52448, [1, 1, 1], Res39531), 
LRes21422 = reshape_layer(Res39531, [1, 1, 1, 1], Res21422), 
LZer47426 = zero_padding3D_layer(Res21422, 4, 0, 4, 0, 4, 0, Zer47426), 
LCon67850 = concatenate_layer([Zer47426,[[[[[0.8696, 0.8947, 0.5377], [0.9354, 0.8068, 0.8293], [0.7361, 0.1267, 0.6004], [0.2832, 0.9907, 0.0175], [0.1071, 0.6612, 0.9231]], [[0.9647, 0.3981, 0.2989], [0.1366, 0.4451, 0.179], [0.5007, 0.4945, 0.4483], [0.2446, 0.8393, 0.6793], [0.8462, 0.2835, 0.7419]], [[0.3578, 0.0964, 0.908], [0.6455, 0.5418, 0.7117], [0.0009, 0.1643, 0.1506], [0.4251, 0.341, 0.7778], [0.3597, 0.8694, 0.9998]], [[0.5264, 0.0475, 0.8941], [0.1846, 0.0744, 0.5448], [0.3531, 0.0452, 0.2936], [0.9291, 0.3047, 0.4576], [0.2074, 0.3139, 0.0927]], [[0.9527, 0.7376, 0.9311], [0.6999, 0.765, 0.1989], [0.3259, 0.0993, 0.4461], [0.8978, 0.6439, 0.0681], [0.6059, 0.5109, 0.8236]]], [[[0.0745, 0.1248, 0.1402], [0.4819, 0.4, 0.6151], [0.0719, 0.4229, 0.6159], [0.9987, 0.305, 0.9917], [0.9002, 0.818, 0.8533]], [[0.9453, 0.4473, 0.297], [0.6781, 0.1201, 0.4046], [0.2326, 0.8596, 0.9376], [0.3482, 0.5086, 0.2781], [0.7089, 0.3035, 0.4]], [[0.6452, 0.7734, 0.7085], [0.8607, 0.1937, 0.7392], [0.5218, 0.6751, 0.721], [0.4809, 0.8843, 0.6924], [0.9625, 0.0918, 0.357]], [[0.3606, 0.4646, 0.6919], [0.7808, 0.4313, 0.2285], [0.8453, 0.2258, 0.0145], [0.3962, 0.356, 0.3375], [0.1289, 0.1655, 0.3801]], [[0.6194, 0.5158, 0.9352], [0.1146, 0.8423, 0.7626], [0.407, 0.8092, 0.82], [0.717, 0.9996, 0.48], [0.2492, 0.7615, 0.4683]]], [[[0.5034, 0.1767, 0.7694], [0.0616, 0.2129, 0.9263], [0.4619, 0.9015, 0.7328], [0.9946, 0.449, 0.5225], [0.5437, 0.5099, 0.451]], [[0.6696, 0.6916, 0.3348], [0.0692, 0.5216, 0.1322], [0.7897, 0.0051, 0.4795], [0.4281, 0.2786, 0.8086], [0.5403, 0.9095, 0.8013]], [[0.079, 0.0615, 0.4478], [0.4558, 0.5389, 0.416], [0.1971, 0.5522, 0.5542], [0.6332, 0.0096, 0.8865], [0.483, 0.6289, 0.7481]], [[0.0565, 0.7027, 0.0373], [0.3851, 0.4401, 0.286], [0.9747, 0.604, 0.604], [0.0739, 0.2903, 0.5999], [0.4592, 0.3317, 0.9867]], [[0.9131, 0.4406, 0.2601], [0.5312, 0.4264, 0.3517], [0.3852, 0.7203, 0.1028], [0.2838, 0.2502, 0.608], [0.6489, 0.1998, 0.8954]]], [[[0.764, 0.0536, 0.3509], [0.3257, 0.7904, 0.8678], [0.6886, 0.5378, 0.5887], [0.1659, 0.8255, 0.7089], [0.3478, 0.366, 0.9037]], [[0.8308, 0.6001, 0.4662], [0.936, 0.4175, 0.979], [0.8043, 0.7984, 0.9069], [0.5065, 0.1467, 0.0753], [0.0356, 0.3336, 0.7659]], [[0.3834, 0.7711, 0.8659], [0.1834, 0.6346, 0.3548], [0.1135, 0.4205, 0.9368], [0.6282, 0.9255, 0.9253], [0.478, 0.0961, 0.4905]], [[0.8268, 0.7878, 0.112], [0.1157, 0.8023, 0.2345], [0.1661, 0.8315, 0.6426], [0.4726, 0.4967, 0.8147], [0.5432, 0.8322, 0.1574]], [[0.9667, 0.2632, 0.3158], [0.2243, 0.2437, 0.5506], [0.9505, 0.0484, 0.4912], [0.6556, 0.7354, 0.329], [0.6085, 0.3259, 0.3165]]], [[[0.3102, 0.8369, 0.411], [0.8247, 0.5911, 0.8494], [0.0902, 0.0216, 0.8776], [0.1036, 0.782, 0.0093], [0.5019, 0.6128, 0.9938]], [[0.2832, 0.6912, 0.8877], [0.7263, 0.8329, 0.3722], [0.3088, 0.5607, 0.3284], [0.7682, 0.5964, 0.2252], [0.17, 0.1661, 0.367]], [[0.2616, 0.3239, 0.0071], [0.9856, 0.3972, 0.4178], [0.8926, 0.0537, 0.36], [0.5299, 0.1858, 0.9104], [0.1753, 0.4675, 0.6361]], [[0.4647, 0.426, 0.1022], [0.8586, 0.5261, 0.5691], [0.5068, 0.5587, 0.5567], [0.1632, 0.2192, 0.1088], [0.4275, 0.7789, 0.9522]], [[0.4559, 0.3297, 0.4412], [0.4582, 0.3659, 0.4658], [0.6836, 0.0645, 0.6983], [0.5247, 0.6805, 0.5994], [0.7416, 0.2306, 0.471]]]]]], 4, Con67850), 
LCon28500 = conv3D_transpose_layer([[[[[0.481, 0.1988]], [[0.0033, 0.3404]]]]], 1, 1, 1,[[[[[0.5095, 0.2869], [0.5109, 0.6197], [0.2137, 0.6034], [0.5474, 0.7341]]]]],[0, 0, 0, 0], 1, 1, 1, false, Con28500), 
LZer73954 = zero_padding3D_layer(Con28500, 4, 0, 3, 0, 4, 0, Zer73954), 
LZer18733 = zero_padding3D_layer([[[[[1.999, 1.5997, 1.3453, 1.2385], [1.6807, 1.7138, 1.0248, 1.8994], [1.9489, 1.8081, 1.637, 1.182]], [[1.1064, 1.9957, 1.6092, 1.0375], [1.9371, 1.2422, 1.1068, 1.4053], [1.993, 1.6482, 1.6579, 1.4962]], [[1.8418, 1.4272, 1.7412, 1.1069], [1.4045, 1.4233, 1.8918, 1.6143], [1.5275, 1.8487, 1.8456, 1.2099]]], [[[1.1001, 1.1578, 1.8657, 1.7517], [1.3561, 1.622, 1.6707, 1.3342], [1.4765, 1.2197, 1.3213, 1.3074]], [[1.2522, 1.9154, 1.012, 1.0123], [1.3549, 1.265, 1.96, 1.9422], [1.7179, 1.5541, 1.4901, 1.3867]], [[1.6341, 1.3567, 1.9697, 1.873], [1.4404, 1.4788, 1.4686, 1.8773], [1.0774, 1.7461, 1.8854, 1.3483]]], [[[1.3885, 1.9871, 1.8158, 1.5573], [1.7538, 1.8668, 1.6171, 1.6708], [1.5412, 1.9314, 1.9692, 1.2254]], [[1.903, 1.3432, 1.7264, 1.3795], [1.6437, 1.3, 1.0074, 1.4132], [1.2437, 1.0641, 1.2839, 1.454]], [[1.635, 1.8577, 1.6884, 1.8155], [1.994, 1.6205, 1.8899, 1.6556], [1.6419, 1.7702, 1.6601, 1.8822]]]]], 1, 1, 1, 1, 1, 1, Zer18733), 
LSub57066 = subtract_layer(Zer73954,Zer18733, Sub57066), 
LMax12371 = maximum_layer([[[[[[0.1249, 0.6612]]]]], [[[[[0.6893, 0.3669]]]]]], Max12371), 
LZer40673 = zero_padding3D_layer(Max12371, 4, 0, 4, 0, 4, 0, Zer40673), 
LCon9684 = concatenate_layer([Zer40673,[[[[[0.9669, 0.7664], [0.4862, 0.8547], [0.3149, 0.5493], [0.5618, 0.3065], [0.7494, 0.6404]], [[0.0024, 0.5354], [0.9851, 0.8124], [0.0214, 0.8719], [0.6314, 0.766], [0.3844, 0.4356]], [[0.5511, 0.9387], [0.303, 0.1642], [0.8723, 0.5498], [0.0665, 0.6818], [0.2018, 0.9158]], [[0.9558, 0.7217], [0.8678, 0.7941], [0.4644, 0.8794], [0.9545, 0.1422], [0.489, 0.9221]], [[0.4798, 0.2138], [0.947, 0.7496], [0.3167, 0.36], [0.227, 0.3716], [0.3617, 0.2482]]], [[[0.9864, 0.9403], [0.0121, 0.4679], [0.0713, 0.9636], [0.2318, 0.6552], [0.7547, 0.3125]], [[0.3545, 0.3308], [0.062, 0.5298], [0.3048, 0.6265], [0.6868, 0.252], [0.1002, 0.9476]], [[0.8848, 0.2624], [0.337, 0.4116], [0.7804, 0.8076], [0.8633, 0.5911], [0.7183, 0.3316]], [[0.9926, 0.6894], [0.6512, 0.7066], [0.4225, 0.7832], [0.0646, 0.374], [0.4884, 0.1751]], [[0.6127, 0.5482], [0.5046, 0.2188], [0.4589, 0.7791], [0.7231, 0.2017], [0.3021, 0.7261]]], [[[0.8749, 0.0009], [0.2026, 0.9477], [0.3496, 0.2628], [0.6189, 0.8805], [0.8171, 0.8016]], [[0.514, 0.9499], [0.4959, 0.7571], [0.9987, 0.9301], [0.3353, 0.8113], [0.7412, 0.2573]], [[0.0925, 0.4204], [0.2895, 0.9858], [0.6582, 0.5889], [0.5322, 0.4753], [0.0129, 0.1853]], [[0.7508, 0.6964], [0.8802, 0.1779], [0.1061, 0.2521], [0.4848, 0.4567], [0.9459, 0.8263]], [[0.8195, 0.1001], [0.0199, 0.7887], [0.4786, 0.0401], [0.5451, 0.1175], [0.4258, 0.0912]]], [[[0.0768, 0.6274], [0.0294, 0.2118], [0.3113, 0.7358], [0.3197, 0.6908], [0.2682, 0.6429]], [[0.7022, 0.6704], [0.7858, 0.8512], [0.2959, 0.051], [0.8961, 0.4135], [0.6535, 0.3554]], [[0.445, 0.1554], [0.872, 0.5758], [0.2689, 0.3967], [0.0001, 0.3732], [0.3476, 0.3651]], [[0.215, 0.2553], [0.6167, 0.5857], [0.4493, 0.5184], [0.54, 0.0129], [0.028, 0.8085]], [[0.1183, 0.5723], [0.3991, 0.1279], [0.7426, 0.0766], [0.2278, 0.9959], [0.1874, 0.1927]]], [[[0.965, 0.2565], [0.0833, 0.2472], [0.4974, 0.7182], [0.4095, 0.1807], [0.6403, 0.4132]], [[0.9002, 0.8868], [0.0436, 0.7615], [0.7767, 0.5052], [0.5469, 0.3448], [0.8809, 0.9771]], [[0.1428, 0.3041], [0.113, 0.3174], [0.4841, 0.6062], [0.0602, 0.6091], [0.307, 0.5477]], [[0.8353, 0.6834], [0.232, 0.9058], [0.444, 0.8149], [0.1512, 0.0859], [0.4454, 0.5279]], [[0.816, 0.4632], [0.2794, 0.7925], [0.295, 0.8739], [0.396, 0.4651], [0.6915, 0.8687]]]]]], 4, Con9684), 
LSub87817 = subtract_layer(Sub57066,Con9684, Sub87817), 
LMul94320 = multiply_layer([Con67850,Sub87817], Mul94320), 
LRes86664 = reshape_layer(Mul94320, [5, 5, 20], Res86664), 
LRes99459 = reshape_layer(Res86664, [5, 100], Res99459), 
LZer34292 = zero_padding1D_layer(Res99459, 2, 0, Zer34292), 
LDot44039 = dot_layer(Con3619,Zer34292, 2, 2, Dot44039), 
exec_layers([LDot9419,LCon3619,LGlo12649,LReL19841,LRes52448,LRes39531,LRes21422,LZer47426,LCon67850,LCon28500,LZer73954,LZer18733,LSub57066,LMax12371,LZer40673,LCon9684,LSub87817,LMul94320,LRes86664,LRes99459,LZer34292,LDot44039],["Dot9419","Con3619","Glo12649","ReL19841","Res52448","Res39531","Res21422","Zer47426","Con67850","Con28500","Zer73954","Zer18733","Sub57066","Max12371","Zer40673","Con9684","Sub87817","Mul94320","Res86664","Res99459","Zer34292","Dot44039"],Dot44039,"Dot44039")

Actual (Unparsed): [[[0.0000000, 0.0000000, -6.3334002, -14.4099063, -12.8278177, -14.2618731, -4.6298023], [0.0000000, 0.0000000, -7.9615527, -18.4720380, -17.1892336, -18.3459732, -5.6713380], [0.0000000, 0.0000000, -7.3895566, -17.5689857, -16.5215041, -17.3042416, -6.0549427]]]

Expected (Unparsed): [[[0.0,0.0,-6.333400194216527,-14.409906224997224,-12.827817617047574,-14.26187326630564,-4.629802239889438],[0.0,0.0,-7.961552675228675,-18.47203794701395,-17.189233496236078,-18.34597342623132,-5.6713382355185855],[0.0,0.0,-7.389556622374326,-17.56898572453399,-16.521503935456053,-17.304241833076574,-6.0549427301491106]]]

Actual:   [[[0, 0, -6.3334, -14.4099, -12.8278, -14.2618, -4.6298], [0, 0, -7.9615, -18.472, -17.1892, -18.3459, -5.6713], [0, 0, -7.3895, -17.5689, -16.5215, -17.3042, -6.0549]]]

Expected: [[[0, 0, -6.3334, -14.4099, -12.8278, -14.2618, -4.6298], [0, 0, -7.9615, -18.472, -17.1892, -18.3459, -5.6713], [0, 0, -7.3895, -17.5689, -16.5215, -17.3042, -6.0549]]]