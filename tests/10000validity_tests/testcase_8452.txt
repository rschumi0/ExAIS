import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Dot13773 = tf.keras.layers.Input(shape=([2, 3]))
in1Dot13773 = tf.keras.layers.Input(shape=([2, 3]))
in0Con86170 = tf.keras.layers.Input(shape=([6, 4, 3, 1]))
in0Zer83543 = tf.keras.layers.Input(shape=([4, 2, 1, 2]))

Dot13773 = keras.layers.Dot(axes=(1, 1), name = 'Dot13773', )([in0Dot13773,in1Dot13773])
Res37820 = keras.layers.Reshape((3, 3, 1), name = 'Res37820', )(Dot13773)
PRe3656 = keras.layers.PReLU(name = 'PRe3656', )(Res37820)
Res26644 = keras.layers.Reshape((3, 3, 1, 1), name = 'Res26644', )(PRe3656)
Zer65911 = keras.layers.ZeroPadding3D(padding=((3, 0), (1, 0), (2, 0)), name = 'Zer65911', )(Res26644)
Con86170 = keras.layers.Concatenate(axis=4, name = 'Con86170', )([Zer65911,in0Con86170])
Zer83543 = keras.layers.ZeroPadding3D(padding=((1, 1), (1, 1), (1, 1)), name = 'Zer83543', )(in0Zer83543)
Ave23516 = keras.layers.Average(name = 'Ave23516', )([Con86170,Zer83543])
model = tf.keras.models.Model(inputs=[in0Dot13773,in1Dot13773,in0Con86170,in0Zer83543], outputs=Ave23516)
w = model.get_layer('PRe3656').get_weights() 
w[0] = np.array([[[0.8765], [0.1432], [0.3369]], [[0.6176], [0.8482], [0.6302]], [[0.0606], [0.0096], [0.2397]]])
model.get_layer('PRe3656').set_weights(w) 
in0Dot13773 = tf.constant([[[0.283, 0.3907, 0.4648], [0.7965, 0.2854, 0.385]]])
in1Dot13773 = tf.constant([[[0.9846, 0.8076, 0.0643], [0.1763, 0.1391, 0.5216]]])
in0Con86170 = tf.constant([[[[[0.7588], [0.4881], [0.1707]], [[0.2655], [0.7298], [0.8464]], [[0.8359], [0.2448], [0.9871]], [[0.4794], [0.7851], [0.3042]]], [[[0.8867], [0.5075], [0.4197]], [[0.9939], [0.5205], [0.5717]], [[0.6414], [0.771], [0.2549]], [[0.0261], [0.2854], [0.3476]]], [[[0.7022], [0.8595], [0.976]], [[0.7574], [0.7318], [0.8068]], [[0.7413], [0.1944], [0.0931]], [[0.6158], [0.8231], [0.9443]]], [[[0.7122], [0.7157], [0.2557]], [[0.2772], [0.7513], [0.5965]], [[0.949], [0.9966], [0.0743]], [[0.0543], [0.2104], [0.4545]]], [[[0.8483], [0.0831], [0.8648]], [[0.2296], [0.6303], [0.6004]], [[0.3932], [0.3419], [0.4379]], [[0.3839], [0.7989], [0.8287]]], [[[0.9806], [0.564], [0.232]], [[0.7443], [0.4448], [0.7696]], [[0.7561], [0.1597], [0.9649]], [[0.5569], [0.0239], [0.5403]]]]])
in0Zer83543 = tf.constant([[[[[1.3404, 1.831]], [[1.5346, 1.2819]]], [[[1.1244, 1.1607]], [[1.037, 1.7508]]], [[[1.2909, 1.5892]], [[1.5187, 1.6077]]], [[[1.1695, 1.971]], [[1.1059, 1.8679]]]]])
print (np.array2string(model.predict([in0Dot13773,in1Dot13773,in0Con86170,in0Zer83543],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Ave23516.png')

LDot13773 = dot_layer([[[0.283, 0.3907, 0.4648], [0.7965, 0.2854, 0.385]]], [[[0.9846, 0.8076, 0.0643], [0.1763, 0.1391, 0.5216]]], 1, 1, Dot13773), 
LRes37820 = reshape_layer(Dot13773, [3, 3, 1], Res37820), 
LPRe3656 = prelu_layer(Res37820, [[[0.8765], [0.1432], [0.3369]], [[0.6176], [0.8482], [0.6302]], [[0.0606], [0.0096], [0.2397]]], PRe3656), 
LRes26644 = reshape_layer(PRe3656, [3, 3, 1, 1], Res26644), 
LZer65911 = zero_padding3D_layer(Res26644, 3, 0, 1, 0, 2, 0, Zer65911), 
LCon86170 = concatenate_layer([Zer65911,[[[[[0.7588], [0.4881], [0.1707]], [[0.2655], [0.7298], [0.8464]], [[0.8359], [0.2448], [0.9871]], [[0.4794], [0.7851], [0.3042]]], [[[0.8867], [0.5075], [0.4197]], [[0.9939], [0.5205], [0.5717]], [[0.6414], [0.771], [0.2549]], [[0.0261], [0.2854], [0.3476]]], [[[0.7022], [0.8595], [0.976]], [[0.7574], [0.7318], [0.8068]], [[0.7413], [0.1944], [0.0931]], [[0.6158], [0.8231], [0.9443]]], [[[0.7122], [0.7157], [0.2557]], [[0.2772], [0.7513], [0.5965]], [[0.949], [0.9966], [0.0743]], [[0.0543], [0.2104], [0.4545]]], [[[0.8483], [0.0831], [0.8648]], [[0.2296], [0.6303], [0.6004]], [[0.3932], [0.3419], [0.4379]], [[0.3839], [0.7989], [0.8287]]], [[[0.9806], [0.564], [0.232]], [[0.7443], [0.4448], [0.7696]], [[0.7561], [0.1597], [0.9649]], [[0.5569], [0.0239], [0.5403]]]]]], 4, Con86170), 
LZer83543 = zero_padding3D_layer([[[[[1.3404, 1.831]], [[1.5346, 1.2819]]], [[[1.1244, 1.1607]], [[1.037, 1.7508]]], [[[1.2909, 1.5892]], [[1.5187, 1.6077]]], [[[1.1695, 1.971]], [[1.1059, 1.8679]]]]], 1, 1, 1, 1, 1, 1, Zer83543), 
LAve23516 = average_layer([Con86170,Zer83543], Ave23516), 
exec_layers([LDot13773,LRes37820,LPRe3656,LRes26644,LZer65911,LCon86170,LZer83543,LAve23516],["Dot13773","Res37820","PRe3656","Res26644","Zer65911","Con86170","Zer83543","Ave23516"],Ave23516,"Ave23516")

Actual (Unparsed): [[[[[0.0000000, 0.3794000], [0.0000000, 0.2440500], [0.0000000, 0.0853500]], [[0.0000000, 0.1327500], [0.0000000, 0.3649000], [0.0000000, 0.4232000]], [[0.0000000, 0.4179500], [0.0000000, 0.1224000], [0.0000000, 0.4935500]], [[0.0000000, 0.2397000], [0.0000000, 0.3925500], [0.0000000, 0.1521000]]], [[[0.0000000, 0.4433500], [0.0000000, 0.2537500], [0.0000000, 0.2098500]], [[0.0000000, 0.4969500], [0.6702000, 1.1757500], [0.0000000, 0.2858500]], [[0.0000000, 0.3207000], [0.7673000, 1.0264500], [0.0000000, 0.1274500]], [[0.0000000, 0.0130500], [0.0000000, 0.1427000], [0.0000000, 0.1738000]]], [[[0.0000000, 0.3511000], [0.0000000, 0.4297500], [0.0000000, 0.4880000]], [[0.0000000, 0.3787000], [0.5622000, 0.9462500], [0.0000000, 0.4034000]], [[0.0000000, 0.3706500], [0.5185000, 0.9726000], [0.0000000, 0.0465500]], [[0.0000000, 0.3079000], [0.0000000, 0.4115500], [0.0000000, 0.4721500]]], [[[0.0000000, 0.3561000], [0.0000000, 0.3578500], [0.0000000, 0.1278500]], [[0.0000000, 0.1386000], [0.6454500, 1.1702500], [0.2095324, 0.2982500]], [[0.0000000, 0.4745000], [0.7593500, 1.3021500], [0.1696720, 0.0371500]], [[0.0000000, 0.0271500], [0.0000000, 0.1052000], [0.2168257, 0.2272500]]], [[[0.0000000, 0.4241500], [0.0000000, 0.0415500], [0.0000000, 0.4324000]], [[0.0000000, 0.1148000], [0.5847500, 1.3006500], [0.2174996, 0.3002000]], [[0.0000000, 0.1966000], [0.5529500, 1.1049000], [0.1776142, 0.2189500]], [[0.0000000, 0.1919500], [0.0000000, 0.3994500], [0.0869933, 0.4143500]]], [[[0.0000000, 0.4903000], [0.0000000, 0.2820000], [0.0000000, 0.1160000]], [[0.0000000, 0.3721500], [0.0000000, 0.2224000], [0.2627588, 0.3848000]], [[0.0000000, 0.3780500], [0.0000000, 0.0798500], [0.2144630, 0.4824500]], [[0.0000000, 0.2784500], [0.0000000, 0.0119500], [0.1153513, 0.2701500]]]]]

Expected (Unparsed): [[[[[0,0.3794],[0,0.24405],[0,0.08535]],[[0,0.13275],[0,0.3649],[0,0.4232]],[[0,0.41795],[0,0.1224],[0,0.49355]],[[0,0.2397],[0,0.39255],[0,0.1521]]],[[[0,0.44335],[0,0.25375],[0,0.20985]],[[0,0.49695],[0.6702,1.1757499999999999],[0,0.28585]],[[0,0.3207],[0.7673,1.02645],[0,0.12745]],[[0,0.01305],[0,0.1427],[0,0.1738]]],[[[0,0.3511],[0,0.42975],[0,0.488]],[[0,0.3787],[0.5622,0.94625],[0,0.4034]],[[0,0.37065],[0.5185,0.9725999999999999],[0,0.04655]],[[0,0.3079],[0,0.41155],[0,0.47215]]],[[[0,0.3561],[0,0.35785],[0,0.12785]],[[0,0.1386],[0.64545,1.17025],[0.209532375,0.29825]],[[0,0.4745],[0.75935,1.30215],[0.16967197499999997,0.03715]],[[0,0.02715],[0,0.1052],[0.21682564999999998,0.22725]]],[[[0,0.42415],[0,0.04155],[0,0.4324]],[[0,0.1148],[0.58475,1.30065],[0.21749962,0.3002]],[[0,0.1966],[0.55295,1.1049],[0.17761423,0.21895]],[[0,0.19195],[0,0.39945],[0.086993325,0.41435]]],[[[0,0.4903],[0,0.282],[0,0.116]],[[0,0.37215],[0,0.2224],[0.26275879,0.3848]],[[0,0.37805],[0,0.07985],[0.21446299000000002,0.48245]],[[0,0.27845],[0,0.01195],[0.11535132,0.27015]]]]]

Actual:   [[[[[0, 0.3794], [0, 0.2441], [0, 0.0854]], [[0, 0.1328], [0, 0.3649], [0, 0.4232]], [[0, 0.418], [0, 0.1224], [0, 0.4936]], [[0, 0.2397], [0, 0.3926], [0, 0.1521]]], [[[0, 0.4434], [0, 0.2538], [0, 0.2099]], [[0, 0.497], [0.6702, 1.1758], [0, 0.2859]], [[0, 0.3207], [0.7673, 1.0265], [0, 0.1275]], [[0, 0.0131], [0, 0.1427], [0, 0.1738]]], [[[0, 0.3511], [0, 0.4298], [0, 0.488]], [[0, 0.3787], [0.5622, 0.9463], [0, 0.4034]], [[0, 0.3707], [0.5185, 0.9726], [0, 0.0466]], [[0, 0.3079], [0, 0.4116], [0, 0.4722]]], [[[0, 0.3561], [0, 0.3579], [0, 0.1279]], [[0, 0.1386], [0.6455, 1.1703], [0.2096, 0.2983]], [[0, 0.4745], [0.7594, 1.3022], [0.1697, 0.0372]], [[0, 0.0272], [0, 0.1052], [0.2169, 0.2273]]], [[[0, 0.4242], [0, 0.0416], [0, 0.4324]], [[0, 0.1148], [0.5848, 1.3007], [0.2175, 0.3002]], [[0, 0.1966], [0.553, 1.1049], [0.1777, 0.219]], [[0, 0.192], [0, 0.3995], [0.087, 0.4144]]], [[[0, 0.4903], [0, 0.282], [0, 0.116]], [[0, 0.3722], [0, 0.2224], [0.2628, 0.3848]], [[0, 0.3781], [0, 0.0799], [0.2145, 0.4825]], [[0, 0.2785], [0, 0.012], [0.1154, 0.2702]]]]]

Expected: [[[[[0, 0.3794], [0, 0.2441], [0, 0.0854]], [[0, 0.1328], [0, 0.3649], [0, 0.4232]], [[0, 0.418], [0, 0.1224], [0, 0.4936]], [[0, 0.2397], [0, 0.3926], [0, 0.1521]]], [[[0, 0.4434], [0, 0.2538], [0, 0.2099]], [[0, 0.497], [0.6702, 1.1758], [0, 0.2859]], [[0, 0.3207], [0.7673, 1.0265], [0, 0.1275]], [[0, 0.0131], [0, 0.1427], [0, 0.1738]]], [[[0, 0.3511], [0, 0.4298], [0, 0.488]], [[0, 0.3787], [0.5622, 0.9463], [0, 0.4034]], [[0, 0.3707], [0.5185, 0.9726], [0, 0.0466]], [[0, 0.3079], [0, 0.4116], [0, 0.4722]]], [[[0, 0.3561], [0, 0.3579], [0, 0.1279]], [[0, 0.1386], [0.6455, 1.1703], [0.2096, 0.2983]], [[0, 0.4745], [0.7594, 1.3022], [0.1697, 0.0372]], [[0, 0.0272], [0, 0.1052], [0.2169, 0.2273]]], [[[0, 0.4242], [0, 0.0416], [0, 0.4324]], [[0, 0.1148], [0.5848, 1.3007], [0.2175, 0.3002]], [[0, 0.1966], [0.553, 1.1049], [0.1777, 0.219]], [[0, 0.192], [0, 0.3995], [0.087, 0.4144]]], [[[0, 0.4903], [0, 0.282], [0, 0.116]], [[0, 0.3722], [0, 0.2224], [0.2628, 0.3848]], [[0, 0.3781], [0, 0.0799], [0.2145, 0.4825]], [[0, 0.2785], [0, 0.012], [0.1154, 0.2702]]]]]