import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Add81806 = tf.keras.layers.Input(shape=([2, 1]))
in1Add81806 = tf.keras.layers.Input(shape=([2, 1]))
in0Glo80666 = tf.keras.layers.Input(shape=([1, 1]))
in0Con79156 = tf.keras.layers.Input(shape=([1]))

Add81806 = keras.layers.Add(name = 'Add81806', )([in0Add81806,in1Add81806])
Fla46538 = keras.layers.Flatten(name = 'Fla46538', )(Add81806)
Glo80666 = keras.layers.GlobalAveragePooling1D(name = 'Glo80666', )(in0Glo80666)
Con79156 = keras.layers.Concatenate(axis=1, name = 'Con79156', )([Glo80666,in0Con79156])
Mul99670 = keras.layers.Multiply(name = 'Mul99670', )([Fla46538,Con79156])
model = tf.keras.models.Model(inputs=[in0Add81806,in1Add81806,in0Glo80666,in0Con79156], outputs=Mul99670)
in0Add81806 = tf.constant([[[0.3688], [0.1526]]])
in1Add81806 = tf.constant([[[0.6236], [0.9465]]])
in0Glo80666 = tf.constant([[[1.5032]]])
in0Con79156 = tf.constant([[0.8821]])
print (np.array2string(model.predict([in0Add81806,in1Add81806,in0Glo80666,in0Con79156],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Mul99670.png')

LAdd81806 = add_layer([[[[0.3688], [0.1526]]], [[[0.6236], [0.9465]]]], Add81806), 
LFla46538 = flatten_layer(Add81806, Fla46538), 
LGlo80666 = global_average_pooling1D_layer([[[1.5032]]], Glo80666), 
LCon79156 = concatenate_layer([Glo80666,[[0.8821]]], 1, Con79156), 
LMul99670 = multiply_layer([Fla46538,Con79156], Mul99670), 
exec_layers([LAdd81806,LFla46538,LGlo80666,LCon79156,LMul99670],["Add81806","Fla46538","Glo80666","Con79156","Mul99670"],Mul99670,"Mul99670")

Actual (Unparsed): [[1.4917758, 0.9695161]]

Expected (Unparsed): [[1.4917756800000002,0.9695161099999999]]

Actual:   [[1.4918, 0.9696]]

Expected: [[1.4918, 0.9696]]