import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Cro1330 = tf.keras.layers.Input(shape=([1, 1, 3]))
in0Con78014 = tf.keras.layers.Input(shape=([1, 1, 5]))
in0Con98821 = tf.keras.layers.Input(shape=([1, 1, 2, 2]))

Cro1330 = keras.layers.Cropping2D(cropping=((0, 0), (0, 0)), name = 'Cro1330', )(in0Cro1330)
Con78014 = keras.layers.Concatenate(axis=3, name = 'Con78014', )([Cro1330,in0Con78014])
Con98821 = keras.layers.Conv3D(4, (1, 1, 1),strides=(1, 1, 1), padding='valid', dilation_rate=(1, 1, 1), name = 'Con98821', )(in0Con98821)
Res11783 = keras.layers.Reshape((1, 1, 8), name = 'Res11783', )(Con98821)
Ave23270 = keras.layers.AveragePooling2D(pool_size=(1, 1), strides=(1, 1), padding='same', name = 'Ave23270', )(Res11783)
Mul57517 = keras.layers.Multiply(name = 'Mul57517', )([Con78014,Ave23270])
Con79134 = keras.layers.Conv2DTranspose(3, (1, 1),strides=(1, 1), padding='valid', name = 'Con79134', )(Mul57517)
model = tf.keras.models.Model(inputs=[in0Cro1330,in0Con78014,in0Con98821], outputs=Con79134)
w = model.get_layer('Con98821').get_weights() 
w[0] = np.array([[[[[0.0663, 0.8734, 0.2978, 0.7816], [0.9883, 0.5847, 0.9184, 0.2214]]]]])
w[1] = np.array([0, 0, 0, 0])
model.get_layer('Con98821').set_weights(w) 
w = model.get_layer('Con79134').get_weights() 
w[0] = np.array([[[[0.3501, 0.8975, 0.8943, 0.7382, 0.0142, 0.2754, 0.2475, 0.5339], [0.2247, 0.8216, 0.8441, 0.3743, 0.6469, 0.0492, 0.6036, 0.6288], [0.1741, 0.068, 0.3235, 0.3519, 0.4658, 0.8822, 0.8059, 0.434]]]])
w[1] = np.array([0, 0, 0])
model.get_layer('Con79134').set_weights(w) 
in0Cro1330 = tf.constant([[[[1.188, 1.2221, 1.3421]]]])
in0Con78014 = tf.constant([[[[0.42, 0.6811, 0.6067, 0.5651, 0.787]]]])
in0Con98821 = tf.constant([[[[[0.2372, 0.5313], [0.7254, 0.4099]]]]])
print (np.array2string(model.predict([in0Cro1330,in0Con78014,in0Con98821],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Con79134.png')

LCro1330 = cropping2D_layer([[[[1.188, 1.2221, 1.3421]]]], 0, 0, 0, 0, Cro1330), 
LCon78014 = concatenate_layer([Cro1330,[[[[0.42, 0.6811, 0.6067, 0.5651, 0.787]]]]], 3, Con78014), 
LCon98821 = conv3D_layer([[[[[0.2372, 0.5313], [0.7254, 0.4099]]]]], 1, 1, 1,[[[[[0.0663, 0.8734, 0.2978, 0.7816], [0.9883, 0.5847, 0.9184, 0.2214]]]]],[0, 0, 0, 0], 1, 1, 1, false, 1, 1, 1, Con98821), 
LRes11783 = reshape_layer(Con98821, [1, 1, 8], Res11783), 
LAve23270 = average_pooling2D_layer(Res11783, 1, 1, 1, 1, true, Ave23270), 
LMul57517 = multiply_layer([Con78014,Ave23270], Mul57517), 
LCon79134 = conv2D_transpose_layer(Mul57517, 1, 1,[[[[0.3501, 0.8975, 0.8943, 0.7382, 0.0142, 0.2754, 0.2475, 0.5339], [0.2247, 0.8216, 0.8441, 0.3743, 0.6469, 0.0492, 0.6036, 0.6288], [0.1741, 0.068, 0.3235, 0.3519, 0.4658, 0.8822, 0.8059, 0.434]]]],[0, 0, 0], 1, 1, false, Con79134), 
exec_layers([LCro1330,LCon78014,LCon98821,LRes11783,LAve23270,LMul57517,LCon79134],["Cro1330","Con78014","Con98821","Res11783","Ave23270","Mul57517","Con79134"],Con79134,"Con79134")

Actual (Unparsed): [[[[2.0667987, 2.0980594, 1.5478295]]]]

Expected (Unparsed): [[[[2.0667987051609726,2.0980593818724937,1.547829459900116]]]]

Actual:   [[[[2.0668, 2.0981, 1.5479]]]]

Expected: [[[[2.0668, 2.0981, 1.5479]]]]