import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Dot89669 = tf.keras.layers.Input(shape=([2]))
in1Dot89669 = tf.keras.layers.Input(shape=([2]))
in0Ave71559 = tf.keras.layers.Input(shape=([1, 1, 1, 1]))
in1Ave71559 = tf.keras.layers.Input(shape=([1, 1, 1, 1]))
in0Glo92853 = tf.keras.layers.Input(shape=([2, 2, 2, 2]))
in0Con20991 = tf.keras.layers.Input(shape=([3, 2, 2, 1]))
in0Dot22109 = tf.keras.layers.Input(shape=([2, 2]))
in1Dot22109 = tf.keras.layers.Input(shape=([2, 2]))
in0Con21681 = tf.keras.layers.Input(shape=([3, 2, 2, 1]))
in0Add36499 = tf.keras.layers.Input(shape=([1, 1]))
in1Add36499 = tf.keras.layers.Input(shape=([1, 1]))
in0Con29281 = tf.keras.layers.Input(shape=([3, 2, 2, 1]))
in0Sub73948 = tf.keras.layers.Input(shape=([3, 2, 2, 2]))
in1Sub73948 = tf.keras.layers.Input(shape=([3, 2, 2, 2]))

Dot89669 = keras.layers.Dot(axes=(1, 1), name = 'Dot89669', )([in0Dot89669,in1Dot89669])
Ave71559 = keras.layers.Average(name = 'Ave71559', )([in0Ave71559,in1Ave71559])
Res70448 = keras.layers.Reshape((1, 1, 1), name = 'Res70448', )(Ave71559)
Res41270 = keras.layers.Reshape((1, 1), name = 'Res41270', )(Res70448)
Glo79850 = keras.layers.GlobalAveragePooling1D(name = 'Glo79850', )(Res41270)
Dot64747 = keras.layers.Dot(axes=(1, 1), name = 'Dot64747', )([Dot89669,Glo79850])
Res68214 = keras.layers.Reshape((1, 1), name = 'Res68214', )(Dot64747)
Glo92853 = keras.layers.GlobalAveragePooling3D(name = 'Glo92853', )(in0Glo92853)
Res51977 = keras.layers.Reshape((2, 1), name = 'Res51977', )(Glo92853)
PRe99350 = keras.layers.PReLU(name = 'PRe99350', )(Res51977)
Dot50265 = keras.layers.Dot(axes=(1, 2), name = 'Dot50265', )([Res68214,PRe99350])
Res53634 = keras.layers.Reshape((1, 2, 1), name = 'Res53634', )(Dot50265)
Res18465 = keras.layers.Reshape((1, 2, 1, 1), name = 'Res18465', )(Res53634)
Zer66713 = keras.layers.ZeroPadding3D(padding=((2, 0), (0, 0), (1, 0)), name = 'Zer66713', )(Res18465)
Con20991 = keras.layers.Concatenate(axis=4, name = 'Con20991', )([Zer66713,in0Con20991])
Dot22109 = keras.layers.Dot(axes=(1, 2), name = 'Dot22109', )([in0Dot22109,in1Dot22109])
Res62545 = keras.layers.Reshape((2, 2, 1), name = 'Res62545', )(Dot22109)
Res84749 = keras.layers.Reshape((2, 2, 1, 1), name = 'Res84749', )(Res62545)
Zer24396 = keras.layers.ZeroPadding3D(padding=((1, 0), (0, 0), (1, 0)), name = 'Zer24396', )(Res84749)
Con21681 = keras.layers.Concatenate(axis=4, name = 'Con21681', )([Zer24396,in0Con21681])
Add36499 = keras.layers.Add(name = 'Add36499', )([in0Add36499,in1Add36499])
Res25302 = keras.layers.Reshape((1, 1, 1), name = 'Res25302', )(Add36499)
Res40061 = keras.layers.Reshape((1, 1, 1, 1), name = 'Res40061', )(Res25302)
Zer24444 = keras.layers.ZeroPadding3D(padding=((2, 0), (1, 0), (1, 0)), name = 'Zer24444', )(Res40061)
Con29281 = keras.layers.Concatenate(axis=4, name = 'Con29281', )([Zer24444,in0Con29281])
Sub73948 = keras.layers.Subtract(name = 'Sub73948', )([in0Sub73948,in1Sub73948])
Mul90806 = keras.layers.Multiply(name = 'Mul90806', )([Con29281,Sub73948])
Max19668 = keras.layers.Maximum(name = 'Max19668', )([Con21681,Mul90806])
Sub44147 = keras.layers.Subtract(name = 'Sub44147', )([Con20991,Max19668])
model = tf.keras.models.Model(inputs=[in0Dot89669,in1Dot89669,in0Ave71559,in1Ave71559,in0Glo92853,in0Con20991,in0Dot22109,in1Dot22109,in0Con21681,in0Add36499,in1Add36499,in0Con29281,in0Sub73948,in1Sub73948], outputs=Sub44147)
w = model.get_layer('PRe99350').get_weights() 
w[0] = np.array([[0.9645], [0.7951]])
model.get_layer('PRe99350').set_weights(w) 
in0Dot89669 = tf.constant([[0.5087, 0.9851]])
in1Dot89669 = tf.constant([[0.9763, 0.4922]])
in0Ave71559 = tf.constant([[[[[0.563]]]]])
in1Ave71559 = tf.constant([[[[[0.2075]]]]])
in0Glo92853 = tf.constant([[[[[1.1566, 1.639], [1.5474, 1.709]], [[1.5489, 1.9676], [1.6939, 1.983]]], [[[1.7523, 1.6518], [1.437, 1.5037]], [[1.0637, 1.1938], [1.1129, 1.1872]]]]])
in0Con20991 = tf.constant([[[[[0.5354], [0.6111]], [[0.546], [0.9487]]], [[[0.0043], [0.4152]], [[0.6501], [0.6164]]], [[[0.0073], [0.02]], [[0.1227], [0.3302]]]]])
in0Dot22109 = tf.constant([[[0.0064, 0.5942], [0.4993, 0.4116]]])
in1Dot22109 = tf.constant([[[0.8307, 0.2827], [0.7439, 0.7956]]])
in0Con21681 = tf.constant([[[[[0.0784], [0.7918]], [[0.2968], [0.1605]]], [[[0.1441], [0.1675]], [[0.7335], [0.1924]]], [[[0.596], [0.2409]], [[0.0598], [0.1768]]]]])
in0Add36499 = tf.constant([[[0.1409]]])
in1Add36499 = tf.constant([[[0.2956]]])
in0Con29281 = tf.constant([[[[[0.4221], [0.0319]], [[0.2331], [0.8838]]], [[[0.4651], [0.4059]], [[0.0049], [0.6658]]], [[[0.3652], [0.9673]], [[0.962], [0.2981]]]]])
in0Sub73948 = tf.constant([[[[[0.0795, 0.9556], [0.0498, 0.2214]], [[0.6082, 0.7573], [0.033, 0.2464]]], [[[0.354, 0.1567], [0.964, 0.2297]], [[0.7258, 0.5879], [0.6459, 0.1099]]], [[[0.5142, 0.9931], [0.5232, 0.1067]], [[0.5516, 0.0163], [0.1603, 0.1151]]]]])
in1Sub73948 = tf.constant([[[[[0.2059, 0.586], [0.4988, 0.4137]], [[0.9506, 0.0935], [0.8715, 0.305]]], [[[0.3535, 0.6473], [0.2429, 0.593]], [[0.9651, 0.4246], [0.1693, 0.8619]]], [[[0.7465, 0.9741], [0.5305, 0.3681]], [[0.8787, 0.4349], [0.1668, 0.982]]]]])
print (np.array2string(model.predict([in0Dot89669,in1Dot89669,in0Ave71559,in1Ave71559,in0Glo92853,in0Con20991,in0Dot22109,in1Dot22109,in0Con21681,in0Add36499,in1Add36499,in0Con29281,in0Sub73948,in1Sub73948],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Sub44147.png')

LDot89669 = dot_layer([[0.5087, 0.9851]], [[0.9763, 0.4922]], 1, 1, Dot89669), 
LAve71559 = average_layer([[[[[[0.563]]]]], [[[[[0.2075]]]]]], Ave71559), 
LRes70448 = reshape_layer(Ave71559, [1, 1, 1], Res70448), 
LRes41270 = reshape_layer(Res70448, [1, 1], Res41270), 
LGlo79850 = global_average_pooling1D_layer(Res41270, Glo79850), 
LDot64747 = dot_layer(Dot89669,Glo79850, 1, 1, Dot64747), 
LRes68214 = reshape_layer(Dot64747, [1, 1], Res68214), 
LGlo92853 = global_average_pooling3D_layer([[[[[1.1566, 1.639], [1.5474, 1.709]], [[1.5489, 1.9676], [1.6939, 1.983]]], [[[1.7523, 1.6518], [1.437, 1.5037]], [[1.0637, 1.1938], [1.1129, 1.1872]]]]], Glo92853), 
LRes51977 = reshape_layer(Glo92853, [2, 1], Res51977), 
LPRe99350 = prelu_layer(Res51977, [[0.9645], [0.7951]], PRe99350), 
LDot50265 = dot_layer(Res68214,PRe99350, 1, 2, Dot50265), 
LRes53634 = reshape_layer(Dot50265, [1, 2, 1], Res53634), 
LRes18465 = reshape_layer(Res53634, [1, 2, 1, 1], Res18465), 
LZer66713 = zero_padding3D_layer(Res18465, 2, 0, 0, 0, 1, 0, Zer66713), 
LCon20991 = concatenate_layer([Zer66713,[[[[[0.5354], [0.6111]], [[0.546], [0.9487]]], [[[0.0043], [0.4152]], [[0.6501], [0.6164]]], [[[0.0073], [0.02]], [[0.1227], [0.3302]]]]]], 4, Con20991), 
LDot22109 = dot_layer([[[0.0064, 0.5942], [0.4993, 0.4116]]], [[[0.8307, 0.2827], [0.7439, 0.7956]]], 1, 2, Dot22109), 
LRes62545 = reshape_layer(Dot22109, [2, 2, 1], Res62545), 
LRes84749 = reshape_layer(Res62545, [2, 2, 1, 1], Res84749), 
LZer24396 = zero_padding3D_layer(Res84749, 1, 0, 0, 0, 1, 0, Zer24396), 
LCon21681 = concatenate_layer([Zer24396,[[[[[0.0784], [0.7918]], [[0.2968], [0.1605]]], [[[0.1441], [0.1675]], [[0.7335], [0.1924]]], [[[0.596], [0.2409]], [[0.0598], [0.1768]]]]]], 4, Con21681), 
LAdd36499 = add_layer([[[[0.1409]]], [[[0.2956]]]], Add36499), 
LRes25302 = reshape_layer(Add36499, [1, 1, 1], Res25302), 
LRes40061 = reshape_layer(Res25302, [1, 1, 1, 1], Res40061), 
LZer24444 = zero_padding3D_layer(Res40061, 2, 0, 1, 0, 1, 0, Zer24444), 
LCon29281 = concatenate_layer([Zer24444,[[[[[0.4221], [0.0319]], [[0.2331], [0.8838]]], [[[0.4651], [0.4059]], [[0.0049], [0.6658]]], [[[0.3652], [0.9673]], [[0.962], [0.2981]]]]]], 4, Con29281), 
LSub73948 = subtract_layer([[[[[0.0795, 0.9556], [0.0498, 0.2214]], [[0.6082, 0.7573], [0.033, 0.2464]]], [[[0.354, 0.1567], [0.964, 0.2297]], [[0.7258, 0.5879], [0.6459, 0.1099]]], [[[0.5142, 0.9931], [0.5232, 0.1067]], [[0.5516, 0.0163], [0.1603, 0.1151]]]]], [[[[[0.2059, 0.586], [0.4988, 0.4137]], [[0.9506, 0.0935], [0.8715, 0.305]]], [[[0.3535, 0.6473], [0.2429, 0.593]], [[0.9651, 0.4246], [0.1693, 0.8619]]], [[[0.7465, 0.9741], [0.5305, 0.3681]], [[0.8787, 0.4349], [0.1668, 0.982]]]]], Sub73948), 
LMul90806 = multiply_layer([Con29281,Sub73948], Mul90806), 
LMax19668 = maximum_layer([Con21681,Mul90806], Max19668), 
LSub44147 = subtract_layer(Con20991,Max19668, Sub44147), 
exec_layers([LDot89669,LAve71559,LRes70448,LRes41270,LGlo79850,LDot64747,LRes68214,LGlo92853,LRes51977,LPRe99350,LDot50265,LRes53634,LRes18465,LZer66713,LCon20991,LDot22109,LRes62545,LRes84749,LZer24396,LCon21681,LAdd36499,LRes25302,LRes40061,LZer24444,LCon29281,LSub73948,LMul90806,LMax19668,LSub44147],["Dot89669","Ave71559","Res70448","Res41270","Glo79850","Dot64747","Res68214","Glo92853","Res51977","PRe99350","Dot50265","Res53634","Res18465","Zer66713","Con20991","Dot22109","Res62545","Res84749","Zer24396","Con21681","Add36499","Res25302","Res40061","Zer24444","Con29281","Sub73948","Mul90806","Max19668","Sub44147"],Sub44147,"Sub44147")

Actual (Unparsed): [[[[[0.0000000, 0.3793918], [0.0000000, -0.1807000]], [[0.0000000, 0.2492000], [0.0000000, 0.7882000]]], [[[0.0000000, -0.1398000], [-0.1464686, 0.2477000]], [[0.0000000, -0.0834000], [-0.4020040, 0.4240000]]], [[[0.0000000, -0.5887000], [-0.0752570, -0.2209000]], [[0.0000000, 0.0629000], [-0.1628325, 0.1534000]]]]]

Expected (Unparsed): [[[[[0,0.37939184],[0,-0.18069999999999997]],[[0,0.24920000000000003],[0,0.7882]]],[[[0,-0.1398],[-0.14646859,0.2477]],[[0,-0.08340000000000003],[-0.40200404,0.42399999999999993]]],[[[0,-0.5887],[-0.07525696488302758,-0.2209]],[[0,0.06290000000000001],[-0.16283252644038526,0.15339999999999998]]]]]

Actual:   [[[[[0, 0.3794], [0, -0.1807]], [[0, 0.2492], [0, 0.7882]]], [[[0, -0.1398], [-0.1464, 0.2477]], [[0, -0.0834], [-0.402, 0.424]]], [[[0, -0.5887], [-0.0752, -0.2209]], [[0, 0.0629], [-0.1628, 0.1534]]]]]

Expected: [[[[[0, 0.3794], [0, -0.1806]], [[0, 0.2493], [0, 0.7882]]], [[[0, -0.1398], [-0.1464, 0.2477]], [[0, -0.0834], [-0.402, 0.424]]], [[[0, -0.5887], [-0.0752, -0.2209]], [[0, 0.063], [-0.1628, 0.1534]]]]]