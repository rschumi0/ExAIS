import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Ave85695 = tf.keras.layers.Input(shape=([2, 1, 2]))
in1Ave85695 = tf.keras.layers.Input(shape=([2, 1, 2]))

Ave85695 = keras.layers.Average(name = 'Ave85695', )([in0Ave85695,in1Ave85695])
Den11175 = keras.layers.Dense(2,name = 'Den11175', )(Ave85695)
model = tf.keras.models.Model(inputs=[in0Ave85695,in1Ave85695], outputs=Den11175)
w = model.get_layer('Den11175').get_weights() 
w[0] = np.array([[0.286, 0.2254], [0.5639, 0.4247]])
w[1] = np.array([0.7269, 0.0754])
model.get_layer('Den11175').set_weights(w) 
in0Ave85695 = tf.constant([[[[0.7102, 0.4737]], [[0.0435, 0.1213]]]])
in1Ave85695 = tf.constant([[[[0.4177, 0.9369]], [[0.0952, 0.7287]]]])
print (np.array2string(model.predict([in0Ave85695,in1Ave85695],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Den11175.png')

LAve85695 = average_layer([[[[[0.7102, 0.4737]], [[0.0435, 0.1213]]]], [[[[0.4177, 0.9369]], [[0.0952, 0.7287]]]]], Ave85695), 
LDen11175 = dense_layer(Ave85695, [[0.286, 0.2254], [0.5639, 0.4247]],[0.7269, 0.0754], Den11175), 
exec_layers([LAve85695,LDen11175],["Ave85695","Den11175"],Den11175,"Den11175")

Actual (Unparsed): [[[[1.2859084, 0.5020552]], [[0.9863916, 0.2715290]]]]

Expected (Unparsed): [[[[1.28590837,0.50205524]],[[0.9863915999999999,0.27152898999999997]]]]

Actual:   [[[[1.286, 0.5021]], [[0.9864, 0.2716]]]]

Expected: [[[[1.286, 0.5021]], [[0.9864, 0.2716]]]]