import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Glo6532 = tf.keras.layers.Input(shape=([2, 2]))
in0Con24320 = tf.keras.layers.Input(shape=([3, 15]))
in0Max95190 = tf.keras.layers.Input(shape=([2, 2, 2, 1]))
in1Max95190 = tf.keras.layers.Input(shape=([2, 2, 2, 1]))
in0Con47093 = tf.keras.layers.Input(shape=([3, 13]))
in0Con11241 = tf.keras.layers.Input(shape=([1, 2, 1]))
in0Dot27246 = tf.keras.layers.Input(shape=([2, 2]))
in1Dot27246 = tf.keras.layers.Input(shape=([2, 2]))
in0Con33594 = tf.keras.layers.Input(shape=([2, 14]))

Glo6532 = keras.layers.GlobalAveragePooling1D(name = 'Glo6532', )(in0Glo6532)
Res86105 = keras.layers.Reshape((2, 1), name = 'Res86105', )(Glo6532)
Zer14891 = keras.layers.ZeroPadding1D(padding=((1, 0)), name = 'Zer14891', )(Res86105)
Con24320 = keras.layers.Concatenate(axis=2, name = 'Con24320', )([Zer14891,in0Con24320])
Max95190 = keras.layers.Maximum(name = 'Max95190', )([in0Max95190,in1Max95190])
Res88725 = keras.layers.Reshape((2, 2, 2), name = 'Res88725', )(Max95190)
Res4007 = keras.layers.Reshape((2, 4), name = 'Res4007', )(Res88725)
Sim94364 = keras.layers.SimpleRNN(2,name = 'Sim94364', )(Res4007)
Res45985 = keras.layers.Reshape((2, 1), name = 'Res45985', )(Sim94364)
Res60994 = keras.layers.Reshape((2, 1, 1), name = 'Res60994', )(Res45985)
Con29979 = keras.layers.Conv2DTranspose(3, (2, 1),strides=(1, 1), padding='valid', name = 'Con29979', )(Res60994)
Res87230 = keras.layers.Reshape((3, 3), name = 'Res87230', )(Con29979)
Con47093 = keras.layers.Concatenate(axis=2, name = 'Con47093', )([Res87230,in0Con47093])
Con11241 = keras.layers.Conv2DTranspose(4, (1, 2),strides=(1, 2), padding='same', name = 'Con11241', )(in0Con11241)
Res39393 = keras.layers.Reshape((1, 16), name = 'Res39393', )(Con11241)
Zer38988 = keras.layers.ZeroPadding1D(padding=((1, 0)), name = 'Zer38988', )(Res39393)
Dot27246 = keras.layers.Dot(axes=(1, 2), name = 'Dot27246', )([in0Dot27246,in1Dot27246])
Con33594 = keras.layers.Concatenate(axis=2, name = 'Con33594', )([Dot27246,in0Con33594])
Sub90917 = keras.layers.Subtract(name = 'Sub90917', )([Zer38988,Con33594])
Zer83584 = keras.layers.ZeroPadding1D(padding=((1, 0)), name = 'Zer83584', )(Sub90917)
Min42746 = keras.layers.Minimum(name = 'Min42746', )([Con47093,Zer83584])
Mul68620 = keras.layers.Multiply(name = 'Mul68620', )([Con24320,Min42746])
model = tf.keras.models.Model(inputs=[in0Glo6532,in0Con24320,in0Max95190,in1Max95190,in0Con47093,in0Con11241,in0Dot27246,in1Dot27246,in0Con33594], outputs=Mul68620)
w = model.get_layer('Sim94364').get_weights() 
w[0] = np.array([[9, 10], [5, 4], [9, 8], [4, 9]])
w[1] = np.array([[8, 9], [10, 9]])
w[2] = np.array([9, 3])
model.get_layer('Sim94364').set_weights(w) 
w = model.get_layer('Con29979').get_weights() 
w[0] = np.array([[[[0.6109], [0.157], [0.8733]]], [[[0.1346], [0.7524], [0.3789]]]])
w[1] = np.array([0, 0, 0])
model.get_layer('Con29979').set_weights(w) 
w = model.get_layer('Con11241').get_weights() 
w[0] = np.array([[[[0.1878], [0.3008], [0.6058], [0.2527]], [[0.0879], [0.8377], [0.4777], [0.1484]]]])
w[1] = np.array([0, 0, 0, 0])
model.get_layer('Con11241').set_weights(w) 
in0Glo6532 = tf.constant([[[1.0472, 1.3997], [1.534, 1.8997]]])
in0Con24320 = tf.constant([[[0.7713, 0.3417, 0.9551, 0.9567, 0.9804, 0.975, 0.2019, 0.3916, 0.2518, 0.3369, 0.6845, 0.2051, 0.769, 0.1876, 0.6212], [0.8639, 0.7932, 0.4872, 0.5559, 0.2726, 0.7012, 0.5266, 0.6461, 0.7445, 0.6504, 0.681, 0.8344, 0.9159, 0.5415, 0.0893], [0.0977, 0.966, 0.7221, 0.9652, 0.8161, 0.1071, 0.0497, 0.3061, 0.0589, 0.0752, 0.517, 0.4818, 0.2457, 0.2694, 0.6289]]])
in0Max95190 = tf.constant([[[[[0.8941], [0.3194]], [[0.755], [0.2102]]], [[[0.5681], [0.8404]], [[0.9821], [0.0536]]]]])
in1Max95190 = tf.constant([[[[[0.1266], [0.7311]], [[0.6622], [0.0017]]], [[[0.4217], [0.2251]], [[0.8363], [0.3323]]]]])
in0Con47093 = tf.constant([[[0.3047, 0.5939, 0.9792, 0.5029, 0.7457, 0.8724, 0.5248, 0.5457, 0.9769, 0.5897, 0.1042, 0.4131, 0.2234], [0.8264, 0.1266, 0.288, 0.1542, 0.6774, 0.4969, 0.6602, 0.0207, 0.3098, 0.133, 0.1477, 0.9146, 0.1803], [0.822, 0.1599, 0.4842, 0.9716, 0.4018, 0.3523, 0.0009, 0.6521, 0.4504, 0.928, 0.7587, 0.6907, 0.8947]]])
in0Con11241 = tf.constant([[[[0.7453], [0.9551]]]])
in0Dot27246 = tf.constant([[[0.0835, 0.5188], [0.8639, 0.8987]]])
in1Dot27246 = tf.constant([[[0.6872, 0.6001], [0.1613, 0.6567]]])
in0Con33594 = tf.constant([[[0.7611, 0.2743, 0.4433, 0.0977, 0.6094, 0.6165, 0.6536, 0.7521, 0.7623, 0.9765, 0.2474, 0.4886, 0.5272, 0.9566], [0.5365, 0.6835, 0.4144, 0.2281, 0.9177, 0.1918, 0.7127, 0.9475, 0.0429, 0.5261, 0.9793, 0.9803, 0.7255, 0.202]]])
print (np.array2string(model.predict([in0Glo6532,in0Con24320,in0Max95190,in1Max95190,in0Con47093,in0Con11241,in0Dot27246,in1Dot27246,in0Con33594],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Mul68620.png')

LGlo6532 = global_average_pooling1D_layer([[[1.0472, 1.3997], [1.534, 1.8997]]], Glo6532), 
LRes86105 = reshape_layer(Glo6532, [2, 1], Res86105), 
LZer14891 = zero_padding1D_layer(Res86105, 1, 0, Zer14891), 
LCon24320 = concatenate_layer([Zer14891,[[[0.7713, 0.3417, 0.9551, 0.9567, 0.9804, 0.975, 0.2019, 0.3916, 0.2518, 0.3369, 0.6845, 0.2051, 0.769, 0.1876, 0.6212], [0.8639, 0.7932, 0.4872, 0.5559, 0.2726, 0.7012, 0.5266, 0.6461, 0.7445, 0.6504, 0.681, 0.8344, 0.9159, 0.5415, 0.0893], [0.0977, 0.966, 0.7221, 0.9652, 0.8161, 0.1071, 0.0497, 0.3061, 0.0589, 0.0752, 0.517, 0.4818, 0.2457, 0.2694, 0.6289]]]], 2, Con24320), 
LMax95190 = maximum_layer([[[[[[0.8941], [0.3194]], [[0.755], [0.2102]]], [[[0.5681], [0.8404]], [[0.9821], [0.0536]]]]], [[[[[0.1266], [0.7311]], [[0.6622], [0.0017]]], [[[0.4217], [0.2251]], [[0.8363], [0.3323]]]]]], Max95190), 
LRes88725 = reshape_layer(Max95190, [2, 2, 2], Res88725), 
LRes4007 = reshape_layer(Res88725, [2, 4], Res4007), 
LSim94364 = simple_rnn_layer(Res4007,[[9, 10], [5, 4], [9, 8], [4, 9]],[[8, 9], [10, 9]],[9, 3], Sim94364), 
LRes45985 = reshape_layer(Sim94364, [2, 1], Res45985), 
LRes60994 = reshape_layer(Res45985, [2, 1, 1], Res60994), 
LCon29979 = conv2D_transpose_layer(Res60994, 2, 1,[[[[0.6109], [0.157], [0.8733]]], [[[0.1346], [0.7524], [0.3789]]]],[0, 0, 0], 1, 1, false, Con29979), 
LRes87230 = reshape_layer(Con29979, [3, 3], Res87230), 
LCon47093 = concatenate_layer([Res87230,[[[0.3047, 0.5939, 0.9792, 0.5029, 0.7457, 0.8724, 0.5248, 0.5457, 0.9769, 0.5897, 0.1042, 0.4131, 0.2234], [0.8264, 0.1266, 0.288, 0.1542, 0.6774, 0.4969, 0.6602, 0.0207, 0.3098, 0.133, 0.1477, 0.9146, 0.1803], [0.822, 0.1599, 0.4842, 0.9716, 0.4018, 0.3523, 0.0009, 0.6521, 0.4504, 0.928, 0.7587, 0.6907, 0.8947]]]], 2, Con47093), 
LCon11241 = conv2D_transpose_layer([[[[0.7453], [0.9551]]]], 1, 2,[[[[0.1878], [0.3008], [0.6058], [0.2527]], [[0.0879], [0.8377], [0.4777], [0.1484]]]],[0, 0, 0, 0], 1, 2, true, Con11241), 
LRes39393 = reshape_layer(Con11241, [1, 16], Res39393), 
LZer38988 = zero_padding1D_layer(Res39393, 1, 0, Zer38988), 
LDot27246 = dot_layer([[[0.0835, 0.5188], [0.8639, 0.8987]]], [[[0.6872, 0.6001], [0.1613, 0.6567]]], 1, 2, Dot27246), 
LCon33594 = concatenate_layer([Dot27246,[[[0.7611, 0.2743, 0.4433, 0.0977, 0.6094, 0.6165, 0.6536, 0.7521, 0.7623, 0.9765, 0.2474, 0.4886, 0.5272, 0.9566], [0.5365, 0.6835, 0.4144, 0.2281, 0.9177, 0.1918, 0.7127, 0.9475, 0.0429, 0.5261, 0.9793, 0.9803, 0.7255, 0.202]]]], 2, Con33594), 
LSub90917 = subtract_layer(Zer38988,Con33594, Sub90917), 
LZer83584 = zero_padding1D_layer(Sub90917, 1, 0, Zer83584), 
LMin42746 = minimum_layer([Con47093,Zer83584], Min42746), 
LMul68620 = multiply_layer([Con24320,Min42746], Mul68620), 
exec_layers([LGlo6532,LRes86105,LZer14891,LCon24320,LMax95190,LRes88725,LRes4007,LSim94364,LRes45985,LRes60994,LCon29979,LRes87230,LCon47093,LCon11241,LRes39393,LZer38988,LDot27246,LCon33594,LSub90917,LZer83584,LMin42746,LMul68620],["Glo6532","Res86105","Zer14891","Con24320","Max95190","Res88725","Res4007","Sim94364","Res45985","Res60994","Con29979","Res87230","Con47093","Con11241","Res39393","Zer38988","Dot27246","Con33594","Sub90917","Zer83584","Min42746","Mul68620"],Mul68620,"Mul68620")

Actual (Unparsed): [[[0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000], [-0.7431373, -0.5017460, -0.6037045, -0.1336390, -0.2464305, -0.0266330, -0.4273113, -0.3246489, -0.4222909, -0.5599384, -0.4957999, -0.6649965, -0.2064306, -0.4475087, -0.2854788, -0.0854244], [-1.2469454, -0.0439330, -0.0821073, -0.3575570, -0.3367468, 0.3233697, -0.0601549, -0.0040355, -0.1632530, -0.0388861, 0.0402846, -0.1472138, -0.4313780, -0.0442783, -0.0725356, -0.0378995]]]

Expected (Unparsed): [[[0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0],[-0.743137275654,-0.501745932352,-0.60370452,-0.13363896,-0.24643046999999998,-0.02663302,-0.42731128000000007,-0.3246489,-0.42229096,-0.55993845,-0.49579991999999995,-0.6649965000000001,-0.20643056,-0.44750874,-0.2854788,-0.08542438000000001],[-1.246945359933,-0.043933002272999996,-0.08210735316000002,-0.357556978449,-0.33674682307599996,0.32336967674100003,-0.060154877349,-0.004035514756,-0.16325299254199999,-0.038886128688,0.040284608416,-0.14721380091000003,-0.431378044878,-0.04427826776100001,-0.072535607862,-0.03789950132400001]]]

Actual:   [[[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [-0.7431, -0.5017, -0.6037, -0.1336, -0.2464, -0.0266, -0.4273, -0.3246, -0.4222, -0.5599, -0.4957, -0.6649, -0.2064, -0.4475, -0.2854, -0.0854], [-1.2469, -0.0439, -0.0821, -0.3575, -0.3367, 0.3234, -0.0601, -0.004, -0.1632, -0.0388, 0.0403, -0.1472, -0.4313, -0.0442, -0.0725, -0.0378]]]

Expected: [[[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [-0.7431, -0.5017, -0.6037, -0.1336, -0.2464, -0.0266, -0.4273, -0.3246, -0.4222, -0.5599, -0.4957, -0.6649, -0.2064, -0.4475, -0.2854, -0.0854], [-1.2469, -0.0439, -0.0821, -0.3575, -0.3367, 0.3234, -0.0601, -0.004, -0.1632, -0.0388, 0.0403, -0.1472, -0.4313, -0.0442, -0.0725, -0.0378]]]