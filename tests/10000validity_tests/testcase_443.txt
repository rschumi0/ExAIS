import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Add12345 = tf.keras.layers.Input(shape=([2, 1]))
in1Add12345 = tf.keras.layers.Input(shape=([2, 1]))
in0Con54291 = tf.keras.layers.Input(shape=([2, 1, 1, 2]))
in0Min90958 = tf.keras.layers.Input(shape=([2, 1, 1, 1]))
in1Min90958 = tf.keras.layers.Input(shape=([2, 1, 1, 1]))
in0Min32568 = tf.keras.layers.Input(shape=([2, 1, 1]))
in1Min32568 = tf.keras.layers.Input(shape=([2, 1, 1]))
in0Con39508 = tf.keras.layers.Input(shape=([4, 3, 3, 2]))

Add12345 = keras.layers.Add(name = 'Add12345', )([in0Add12345,in1Add12345])
Res52371 = keras.layers.Reshape((2, 1, 1), name = 'Res52371', )(Add12345)
Res41931 = keras.layers.Reshape((2, 1, 1, 1), name = 'Res41931', )(Res52371)
Con54291 = keras.layers.Concatenate(axis=4, name = 'Con54291', )([Res41931,in0Con54291])
Min90958 = keras.layers.Minimum(name = 'Min90958', )([in0Min90958,in1Min90958])
Den75714 = keras.layers.Dense(3,name = 'Den75714', )(Min90958)
Max80581 = keras.layers.Maximum(name = 'Max80581', )([Con54291,Den75714])
Zer15013 = keras.layers.ZeroPadding3D(padding=((2, 0), (2, 0), (2, 0)), name = 'Zer15013', )(Max80581)
Min32568 = keras.layers.Minimum(name = 'Min32568', )([in0Min32568,in1Min32568])
Res32084 = keras.layers.Reshape((2, 1, 1, 1), name = 'Res32084', )(Min32568)
Zer89486 = keras.layers.ZeroPadding3D(padding=((1, 1), (1, 1), (1, 1)), name = 'Zer89486', )(Res32084)
Con39508 = keras.layers.Concatenate(axis=4, name = 'Con39508', )([Zer89486,in0Con39508])
Ave90266 = keras.layers.Average(name = 'Ave90266', )([Zer15013,Con39508])
model = tf.keras.models.Model(inputs=[in0Add12345,in1Add12345,in0Con54291,in0Min90958,in1Min90958,in0Min32568,in1Min32568,in0Con39508], outputs=Ave90266)
w = model.get_layer('Den75714').get_weights() 
w[0] = np.array([[0.8394, 0.369, 0.9636]])
w[1] = np.array([0.6801, 0.314, 0.4206])
model.get_layer('Den75714').set_weights(w) 
in0Add12345 = tf.constant([[[0.6253], [0.6752]]])
in1Add12345 = tf.constant([[[0.0482], [0.4217]]])
in0Con54291 = tf.constant([[[[[0.7853, 0.297]]], [[[0.2616, 0.249]]]]])
in0Min90958 = tf.constant([[[[[0.1582]]], [[[0.6618]]]]])
in1Min90958 = tf.constant([[[[[0.4304]]], [[[0.297]]]]])
in0Min32568 = tf.constant([[[[0.5069]], [[0.1002]]]])
in1Min32568 = tf.constant([[[[0.33]], [[0.3007]]]])
in0Con39508 = tf.constant([[[[[0.9826, 0.3668], [0.9405, 0.6156], [0.7331, 0.0349]], [[0.795, 0.2512], [0.7314, 0.3227], [0.3685, 0.1254]], [[0.3629, 0.0047], [0.6263, 0.9402], [0.2164, 0.3317]]], [[[0.178, 0.2528], [0.3626, 0.3942], [0.3475, 0.8556]], [[0.7742, 0.7514], [0.3443, 0.203], [0.1956, 0.5561]], [[0.8141, 0.5474], [0.1607, 0.0236], [0.4594, 0.7018]]], [[[0.5312, 0.2434], [0.6037, 0.6401], [0.8808, 0.0127]], [[0.5474, 0.4646], [0.2868, 0.5811], [0.3105, 0.6258]], [[0.6077, 0.9416], [0.8931, 0.6597], [0.1209, 0.5753]]], [[[0.4946, 0.1253], [0.4775, 0.3644], [0.2304, 0.8724]], [[0.2877, 0.7236], [0.7591, 0.2427], [0.2942, 0.869]], [[0.8895, 0.3218], [0.0137, 0.5439], [0.6789, 0.8953]]]]])
print (np.array2string(model.predict([in0Add12345,in1Add12345,in0Con54291,in0Min90958,in1Min90958,in0Min32568,in1Min32568,in0Con39508],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Ave90266.png')

LAdd12345 = add_layer([[[[0.6253], [0.6752]]], [[[0.0482], [0.4217]]]], Add12345), 
LRes52371 = reshape_layer(Add12345, [2, 1, 1], Res52371), 
LRes41931 = reshape_layer(Res52371, [2, 1, 1, 1], Res41931), 
LCon54291 = concatenate_layer([Res41931,[[[[[0.7853, 0.297]]], [[[0.2616, 0.249]]]]]], 4, Con54291), 
LMin90958 = minimum_layer([[[[[[0.1582]]], [[[0.6618]]]]], [[[[[0.4304]]], [[[0.297]]]]]], Min90958), 
LDen75714 = dense_layer(Min90958, [[0.8394, 0.369, 0.9636]],[0.6801, 0.314, 0.4206], Den75714), 
LMax80581 = maximum_layer([Con54291,Den75714], Max80581), 
LZer15013 = zero_padding3D_layer(Max80581, 2, 0, 2, 0, 2, 0, Zer15013), 
LMin32568 = minimum_layer([[[[[0.5069]], [[0.1002]]]], [[[[0.33]], [[0.3007]]]]], Min32568), 
LRes32084 = reshape_layer(Min32568, [2, 1, 1, 1], Res32084), 
LZer89486 = zero_padding3D_layer(Res32084, 1, 1, 1, 1, 1, 1, Zer89486), 
LCon39508 = concatenate_layer([Zer89486,[[[[[0.9826, 0.3668], [0.9405, 0.6156], [0.7331, 0.0349]], [[0.795, 0.2512], [0.7314, 0.3227], [0.3685, 0.1254]], [[0.3629, 0.0047], [0.6263, 0.9402], [0.2164, 0.3317]]], [[[0.178, 0.2528], [0.3626, 0.3942], [0.3475, 0.8556]], [[0.7742, 0.7514], [0.3443, 0.203], [0.1956, 0.5561]], [[0.8141, 0.5474], [0.1607, 0.0236], [0.4594, 0.7018]]], [[[0.5312, 0.2434], [0.6037, 0.6401], [0.8808, 0.0127]], [[0.5474, 0.4646], [0.2868, 0.5811], [0.3105, 0.6258]], [[0.6077, 0.9416], [0.8931, 0.6597], [0.1209, 0.5753]]], [[[0.4946, 0.1253], [0.4775, 0.3644], [0.2304, 0.8724]], [[0.2877, 0.7236], [0.7591, 0.2427], [0.2942, 0.869]], [[0.8895, 0.3218], [0.0137, 0.5439], [0.6789, 0.8953]]]]]], 4, Con39508), 
LAve90266 = average_layer([Zer15013,Con39508], Ave90266), 
exec_layers([LAdd12345,LRes52371,LRes41931,LCon54291,LMin90958,LDen75714,LMax80581,LZer15013,LMin32568,LRes32084,LZer89486,LCon39508,LAve90266],["Add12345","Res52371","Res41931","Con54291","Min90958","Den75714","Max80581","Zer15013","Min32568","Res32084","Zer89486","Con39508","Ave90266"],Ave90266,"Ave90266")

Actual (Unparsed): [[[[[0.0000000, 0.4913000, 0.1834000], [0.0000000, 0.4702500, 0.3078000], [0.0000000, 0.3665500, 0.0174500]], [[0.0000000, 0.3975000, 0.1256000], [0.0000000, 0.3657000, 0.1613500], [0.0000000, 0.1842500, 0.0627000]], [[0.0000000, 0.1814500, 0.0023500], [0.0000000, 0.3131500, 0.4701000], [0.0000000, 0.1082000, 0.1658500]]], [[[0.0000000, 0.0890000, 0.1264000], [0.0000000, 0.1813000, 0.1971000], [0.0000000, 0.1737500, 0.4278000]], [[0.0000000, 0.3871000, 0.3757000], [0.1650000, 0.1721500, 0.1015000], [0.0000000, 0.0978000, 0.2780500]], [[0.0000000, 0.4070500, 0.2737000], [0.0000000, 0.0803500, 0.0118000], [0.0000000, 0.2297000, 0.3509000]]], [[[0.0000000, 0.2656000, 0.1217000], [0.0000000, 0.3018500, 0.3200500], [0.0000000, 0.4404000, 0.0063500]], [[0.0000000, 0.2737000, 0.2323000], [0.0501000, 0.1434000, 0.2905500], [0.0000000, 0.1552500, 0.3129000]], [[0.0000000, 0.3038500, 0.4708000], [0.0000000, 0.4465500, 0.3298500], [0.4064465, 0.4531000, 0.5741707]]], [[[0.0000000, 0.2473000, 0.0626500], [0.0000000, 0.2387500, 0.1822000], [0.0000000, 0.1152000, 0.4362000]], [[0.0000000, 0.1438500, 0.3618000], [0.0000000, 0.3795500, 0.1213500], [0.0000000, 0.1471000, 0.4345000]], [[0.0000000, 0.4447500, 0.1609000], [0.0000000, 0.0068500, 0.2719500], [0.5484500, 0.5512465, 0.8010446]]]]]

Expected (Unparsed): [[[[[0,0.4913,0.1834],[0,0.47025,0.3078],[0,0.36655,0.01745]],[[0,0.3975,0.1256],[0,0.3657,0.16135],[0,0.18425,0.0627]],[[0,0.18145,0.00235],[0,0.31315,0.4701],[0,0.1082,0.16585]]],[[[0,0.089,0.1264],[0,0.1813,0.1971],[0,0.17375,0.4278]],[[0,0.3871,0.3757],[0.165,0.17215,0.1015],[0,0.0978,0.27805]],[[0,0.40705,0.2737],[0,0.08035,0.0118],[0,0.2297,0.3509]]],[[[0,0.2656,0.1217],[0,0.30185,0.32005],[0,0.4404,0.00635]],[[0,0.2737,0.2323],[0.0501,0.1434,0.29055],[0,0.15525,0.3129]],[[0,0.30385,0.4708],[0,0.44655,0.32985],[0.40644654,0.4531,0.57417076]]],[[[0,0.2473,0.06265],[0,0.23875,0.1822],[0,0.1152,0.4362]],[[0,0.14385,0.3618],[0,0.37955,0.12135],[0,0.1471,0.4345]],[[0,0.44475,0.1609],[0,0.00685,0.27195],[0.54845,0.5512465,0.8010446]]]]]

Actual:   [[[[[0, 0.4913, 0.1834], [0, 0.4703, 0.3078], [0, 0.3666, 0.0175]], [[0, 0.3975, 0.1256], [0, 0.3657, 0.1614], [0, 0.1843, 0.0627]], [[0, 0.1815, 0.0024], [0, 0.3132, 0.4701], [0, 0.1082, 0.1659]]], [[[0, 0.089, 0.1264], [0, 0.1813, 0.1971], [0, 0.1738, 0.4278]], [[0, 0.3871, 0.3757], [0.165, 0.1722, 0.1015], [0, 0.0978, 0.2781]], [[0, 0.4071, 0.2737], [0, 0.0804, 0.0118], [0, 0.2297, 0.3509]]], [[[0, 0.2656, 0.1217], [0, 0.3019, 0.3201], [0, 0.4404, 0.0064]], [[0, 0.2737, 0.2323], [0.0501, 0.1434, 0.2906], [0, 0.1553, 0.3129]], [[0, 0.3039, 0.4708], [0, 0.4466, 0.3299], [0.4065, 0.4531, 0.5742]]], [[[0, 0.2473, 0.0627], [0, 0.2388, 0.1822], [0, 0.1152, 0.4362]], [[0, 0.1439, 0.3618], [0, 0.3796, 0.1214], [0, 0.1471, 0.4345]], [[0, 0.4448, 0.1609], [0, 0.0069, 0.272], [0.5485, 0.5513, 0.8011]]]]]

Expected: [[[[[0, 0.4913, 0.1834], [0, 0.4703, 0.3078], [0, 0.3666, 0.0175]], [[0, 0.3975, 0.1256], [0, 0.3657, 0.1614], [0, 0.1843, 0.0627]], [[0, 0.1815, 0.0024], [0, 0.3132, 0.4701], [0, 0.1082, 0.1659]]], [[[0, 0.089, 0.1264], [0, 0.1813, 0.1971], [0, 0.1738, 0.4278]], [[0, 0.3871, 0.3757], [0.165, 0.1722, 0.1015], [0, 0.0978, 0.2781]], [[0, 0.4071, 0.2737], [0, 0.0804, 0.0118], [0, 0.2297, 0.3509]]], [[[0, 0.2656, 0.1217], [0, 0.3019, 0.3201], [0, 0.4404, 0.0064]], [[0, 0.2737, 0.2323], [0.0501, 0.1434, 0.2906], [0, 0.1553, 0.3129]], [[0, 0.3039, 0.4708], [0, 0.4466, 0.3299], [0.4065, 0.4531, 0.5742]]], [[[0, 0.2473, 0.0627], [0, 0.2388, 0.1822], [0, 0.1152, 0.4362]], [[0, 0.1439, 0.3618], [0, 0.3796, 0.1214], [0, 0.1471, 0.4345]], [[0, 0.4448, 0.1609], [0, 0.0069, 0.272], [0.5485, 0.5513, 0.8011]]]]]