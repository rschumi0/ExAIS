import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Ave30907 = tf.keras.layers.Input(shape=([1, 2, 2]))
in1Ave30907 = tf.keras.layers.Input(shape=([1, 2, 2]))
in0Sim50757 = tf.keras.layers.Input(shape=([3, 2]))
in0Con66597 = tf.keras.layers.Input(shape=([3]))
in0Con38321 = tf.keras.layers.Input(shape=([4, 3, 3, 1]))
in0Sep21501 = tf.keras.layers.Input(shape=([1, 1, 1]))
in0Con76541 = tf.keras.layers.Input(shape=([2, 2, 2, 1]))
in0Max29615 = tf.keras.layers.Input(shape=([2, 2, 2, 2]))
in1Max29615 = tf.keras.layers.Input(shape=([2, 2, 2, 2]))

Ave30907 = keras.layers.Average(name = 'Ave30907', )([in0Ave30907,in1Ave30907])
Res58461 = keras.layers.Reshape((1, 4), name = 'Res58461', )(Ave30907)
Fla75673 = keras.layers.Flatten(name = 'Fla75673', )(Res58461)
Sim50757 = keras.layers.SimpleRNN(3,name = 'Sim50757', )(in0Sim50757)
Res74782 = keras.layers.Reshape((3, 1), name = 'Res74782', )(Sim50757)
Res68829 = keras.layers.Reshape((3, 1, 1), name = 'Res68829', )(Res74782)
Glo4490 = keras.layers.GlobalMaxPool2D(name = 'Glo4490', )(Res68829)
Con66597 = keras.layers.Concatenate(axis=1, name = 'Con66597', )([Glo4490,in0Con66597])
Min74872 = keras.layers.Minimum(name = 'Min74872', )([Fla75673,Con66597])
Res83934 = keras.layers.Reshape((4, 1), name = 'Res83934', )(Min74872)
Res29634 = keras.layers.Reshape((4, 1, 1), name = 'Res29634', )(Res83934)
Res87764 = keras.layers.Reshape((4, 1, 1, 1), name = 'Res87764', )(Res29634)
Zer53210 = keras.layers.ZeroPadding3D(padding=((0, 0), (2, 0), (2, 0)), name = 'Zer53210', )(Res87764)
Con38321 = keras.layers.Concatenate(axis=4, name = 'Con38321', )([Zer53210,in0Con38321])
Sep21501 = keras.layers.SeparableConv2D(2, (1, 1),strides=(1, 1), padding='same', name = 'Sep21501', )(in0Sep21501)
Res95189 = keras.layers.Reshape((1, 1, 2, 1), name = 'Res95189', )(Sep21501)
Zer64859 = keras.layers.ZeroPadding3D(padding=((1, 0), (1, 0), (0, 0)), name = 'Zer64859', )(Res95189)
Con76541 = keras.layers.Concatenate(axis=4, name = 'Con76541', )([Zer64859,in0Con76541])
Max29615 = keras.layers.Maximum(name = 'Max29615', )([in0Max29615,in1Max29615])
PRe4698 = keras.layers.PReLU(name = 'PRe4698', )(Max29615)
Ave34646 = keras.layers.Average(name = 'Ave34646', )([Con76541,PRe4698])
Zer36302 = keras.layers.ZeroPadding3D(padding=((2, 0), (1, 0), (1, 0)), name = 'Zer36302', )(Ave34646)
Mul44115 = keras.layers.Multiply(name = 'Mul44115', )([Con38321,Zer36302])
model = tf.keras.models.Model(inputs=[in0Ave30907,in1Ave30907,in0Sim50757,in0Con66597,in0Con38321,in0Sep21501,in0Con76541,in0Max29615,in1Max29615], outputs=Mul44115)
w = model.get_layer('Sim50757').get_weights() 
w[0] = np.array([[6, 2, 5], [9, 3, 1]])
w[1] = np.array([[10, 2, 7], [9, 9, 3], [10, 5, 5]])
w[2] = np.array([7, 9, 6])
model.get_layer('Sim50757').set_weights(w) 
w = model.get_layer('Sep21501').get_weights() 
w[0] = np.array([[[[0.087]]]])
w[1] = np.array([[[[0.0926, 0.9693]]]])
w[2] = np.array([0, 0])
model.get_layer('Sep21501').set_weights(w) 
w = model.get_layer('PRe4698').get_weights() 
w[0] = np.array([[[[0.837, 0.9322], [0.7302, 0.9934]], [[0.3179, 0.9335], [0.459, 0.2646]]], [[[0.7916, 0.3029], [0.9548, 0.3759]], [[0.0945, 0.9257], [0.9761, 0.3867]]]])
model.get_layer('PRe4698').set_weights(w) 
in0Ave30907 = tf.constant([[[[0.073, 0.2585], [0.8405, 0.7719]]]])
in1Ave30907 = tf.constant([[[[0.5219, 0.116], [0.3821, 0.5744]]]])
in0Sim50757 = tf.constant([[[6, 4], [3, 5], [4, 9]]])
in0Con66597 = tf.constant([[0.6256, 0.695, 0.9471]])
in0Con38321 = tf.constant([[[[[0.8922], [0.8204], [0.25]], [[0.295], [0.4735], [0.5959]], [[0.6445], [0.9014], [0.0357]]], [[[0.2097], [0.9937], [0.2063]], [[0.3104], [0.9766], [0.6071]], [[0.7297], [0.9851], [0.2303]]], [[[0.6164], [0.6152], [0.8881]], [[0.0688], [0.1552], [0.5997]], [[0.4696], [0.0427], [0.8357]]], [[[0.8445], [0.5139], [0.0978]], [[0.6698], [0.393], [0.6988]], [[0.0574], [0.9036], [0.2511]]]]])
in0Sep21501 = tf.constant([[[[0.6433]]]])
in0Con76541 = tf.constant([[[[[0.271], [0.8992]], [[0.7449], [0.1781]]], [[[0.3231], [0.775]], [[0.3651], [0.0031]]]]])
in0Max29615 = tf.constant([[[[[0.4661, 0.811], [0.651, 0.3835]], [[0.1616, 0.2619], [0.0057, 0.1734]]], [[[0.0892, 0.6511], [0.3743, 0.6933]], [[0.8754, 0.8298], [0.3901, 0.0194]]]]])
in1Max29615 = tf.constant([[[[[0.4776, 0.8039], [0.0362, 0.8209]], [[0.6223, 0.0716], [0.8702, 0.0147]]], [[[0.3924, 0.4732], [0.9931, 0.6626]], [[0.9558, 0.1418], [0.3444, 0.7259]]]]])
print (np.array2string(model.predict([in0Ave30907,in1Ave30907,in0Sim50757,in0Con66597,in0Con38321,in0Sep21501,in0Con76541,in0Max29615,in1Max29615],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Mul44115.png')

LAve30907 = average_layer([[[[[0.073, 0.2585], [0.8405, 0.7719]]]], [[[[0.5219, 0.116], [0.3821, 0.5744]]]]], Ave30907), 
LRes58461 = reshape_layer(Ave30907, [1, 4], Res58461), 
LFla75673 = flatten_layer(Res58461, Fla75673), 
LSim50757 = simple_rnn_layer([[[6, 4], [3, 5], [4, 9]]],[[6, 2, 5], [9, 3, 1]],[[10, 2, 7], [9, 9, 3], [10, 5, 5]],[7, 9, 6], Sim50757), 
LRes74782 = reshape_layer(Sim50757, [3, 1], Res74782), 
LRes68829 = reshape_layer(Res74782, [3, 1, 1], Res68829), 
LGlo4490 = global_max_pool2D_layer(Res68829, Glo4490), 
LCon66597 = concatenate_layer([Glo4490,[[0.6256, 0.695, 0.9471]]], 1, Con66597), 
LMin74872 = minimum_layer([Fla75673,Con66597], Min74872), 
LRes83934 = reshape_layer(Min74872, [4, 1], Res83934), 
LRes29634 = reshape_layer(Res83934, [4, 1, 1], Res29634), 
LRes87764 = reshape_layer(Res29634, [4, 1, 1, 1], Res87764), 
LZer53210 = zero_padding3D_layer(Res87764, 0, 0, 2, 0, 2, 0, Zer53210), 
LCon38321 = concatenate_layer([Zer53210,[[[[[0.8922], [0.8204], [0.25]], [[0.295], [0.4735], [0.5959]], [[0.6445], [0.9014], [0.0357]]], [[[0.2097], [0.9937], [0.2063]], [[0.3104], [0.9766], [0.6071]], [[0.7297], [0.9851], [0.2303]]], [[[0.6164], [0.6152], [0.8881]], [[0.0688], [0.1552], [0.5997]], [[0.4696], [0.0427], [0.8357]]], [[[0.8445], [0.5139], [0.0978]], [[0.6698], [0.393], [0.6988]], [[0.0574], [0.9036], [0.2511]]]]]], 4, Con38321), 
LSep21501 = separable_conv2D_layer([[[[0.6433]]]], 1, 1,[[[[[0.087]]]],[[[[0.0926, 0.9693]]]]],[0, 0], 1, 1, true, Sep21501), 
LRes95189 = reshape_layer(Sep21501, [1, 1, 2, 1], Res95189), 
LZer64859 = zero_padding3D_layer(Res95189, 1, 0, 1, 0, 0, 0, Zer64859), 
LCon76541 = concatenate_layer([Zer64859,[[[[[0.271], [0.8992]], [[0.7449], [0.1781]]], [[[0.3231], [0.775]], [[0.3651], [0.0031]]]]]], 4, Con76541), 
LMax29615 = maximum_layer([[[[[[0.4661, 0.811], [0.651, 0.3835]], [[0.1616, 0.2619], [0.0057, 0.1734]]], [[[0.0892, 0.6511], [0.3743, 0.6933]], [[0.8754, 0.8298], [0.3901, 0.0194]]]]], [[[[[0.4776, 0.8039], [0.0362, 0.8209]], [[0.6223, 0.0716], [0.8702, 0.0147]]], [[[0.3924, 0.4732], [0.9931, 0.6626]], [[0.9558, 0.1418], [0.3444, 0.7259]]]]]], Max29615), 
LPRe4698 = prelu_layer(Max29615, [[[[0.837, 0.9322], [0.7302, 0.9934]], [[0.3179, 0.9335], [0.459, 0.2646]]], [[[0.7916, 0.3029], [0.9548, 0.3759]], [[0.0945, 0.9257], [0.9761, 0.3867]]]], PRe4698), 
LAve34646 = average_layer([Con76541,PRe4698], Ave34646), 
LZer36302 = zero_padding3D_layer(Ave34646, 2, 0, 1, 0, 1, 0, Zer36302), 
LMul44115 = multiply_layer([Con38321,Zer36302], Mul44115), 
exec_layers([LAve30907,LRes58461,LFla75673,LSim50757,LRes74782,LRes68829,LGlo4490,LCon66597,LMin74872,LRes83934,LRes29634,LRes87764,LZer53210,LCon38321,LSep21501,LRes95189,LZer64859,LCon76541,LMax29615,LPRe4698,LAve34646,LZer36302,LMul44115],["Ave30907","Res58461","Fla75673","Sim50757","Res74782","Res68829","Glo4490","Con66597","Min74872","Res83934","Res29634","Res87764","Zer53210","Con38321","Sep21501","Res95189","Zer64859","Con76541","Max29615","PRe4698","Ave34646","Zer36302","Mul44115"],Mul44115,"Mul44115")

Actual (Unparsed): [[[[[0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000]], [[0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000]], [[0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000]]], [[[0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000]], [[0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000]], [[0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000]]], [[[0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000]], [[0.0000000, 0.0000000], [0.0000000, 0.0839632], [0.0000000, 0.5157720]], [[0.0000000, 0.0000000], [0.0000000, 0.0214952], [0.2659766, 0.1468743]]], [[[0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000]], [[0.0000000, 0.0000000], [0.0000000, 0.1914303], [0.0000000, 0.5130240]], [[0.0000000, 0.0000000], [0.0000000, 0.5398558], [0.1495567, 0.0915260]]]]]

Expected (Unparsed): [[[[[0,0.0],[0,0.0],[0,0.0]],[[0,0.0],[0,0.0],[0,0.0]],[[0,0.0],[0,0.0],[0.0,0.0]]],[[[0,0.0],[0,0.0],[0,0.0]],[[0,0.0],[0,0.0],[0,0.0]],[[0,0.0],[0,0.0],[0.0,0.0]]],[[[0,0.0],[0,0.0],[0,0.0]],[[0,0.0],[0.0,0.0839632],[0.0,0.515771985]],[[0,0.0],[0.0,0.021495180000000003],[0.26597663,0.14687427500000003]]],[[[0,0.0],[0,0.0],[0,0.0]],[[0,0.0],[0.0,0.1914303],[0.0,0.51302402]],[[0,0.0],[0.0,0.53985582],[0.14955673439334724,0.09152595]]]]]

Actual:   [[[[[0, 0], [0, 0], [0, 0]], [[0, 0], [0, 0], [0, 0]], [[0, 0], [0, 0], [0, 0]]], [[[0, 0], [0, 0], [0, 0]], [[0, 0], [0, 0], [0, 0]], [[0, 0], [0, 0], [0, 0]]], [[[0, 0], [0, 0], [0, 0]], [[0, 0], [0, 0.084], [0, 0.5158]], [[0, 0], [0, 0.0215], [0.266, 0.1469]]], [[[0, 0], [0, 0], [0, 0]], [[0, 0], [0, 0.1915], [0, 0.5131]], [[0, 0], [0, 0.5399], [0.1496, 0.0916]]]]]

Expected: [[[[[0, 0], [0, 0], [0, 0]], [[0, 0], [0, 0], [0, 0]], [[0, 0], [0, 0], [0, 0]]], [[[0, 0], [0, 0], [0, 0]], [[0, 0], [0, 0], [0, 0]], [[0, 0], [0, 0], [0, 0]]], [[[0, 0], [0, 0], [0, 0]], [[0, 0], [0, 0.084], [0, 0.5158]], [[0, 0], [0, 0.0215], [0.266, 0.1469]]], [[[0, 0], [0, 0], [0, 0]], [[0, 0], [0, 0.1915], [0, 0.5131]], [[0, 0], [0, 0.5399], [0.1496, 0.0916]]]]]