import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Sof63653 = tf.keras.layers.Input(shape=([2, 1, 1, 1]))

Sof63653 = keras.layers.Softmax(axis=1, name = 'Sof63653', input_shape=(2, 1, 1, 1))(in0Sof63653)
Res37439 = keras.layers.Reshape((2, 1, 1), name = 'Res37439', )(Sof63653)
Sep92105 = keras.layers.SeparableConv2D(4, (2, 1),strides=(2, 2), padding='same', name = 'Sep92105', )(Res37439)
Res21389 = keras.layers.Reshape((1, 4), name = 'Res21389', )(Sep92105)
Up_77635 = keras.layers.UpSampling1D(size=(1), name = 'Up_77635', )(Res21389)
model = tf.keras.models.Model(inputs=[in0Sof63653], outputs=Up_77635)
w = model.get_layer('Sep92105').get_weights() 
w[0] = np.array([[[[0.9009]]], [[[0.4889]]]])
w[1] = np.array([[[[0.3486, 0.1003, 0.9947, 0.1723]]]])
w[2] = np.array([0, 0, 0, 0])
model.get_layer('Sep92105').set_weights(w) 
in0Sof63653 = tf.constant([[[[[0.0725]]], [[[0.4192]]]]])
print (np.array2string(model.predict([in0Sof63653],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Up_77635.png')

LSof63653 = softmax_layer([[[[[0.0725]]], [[[0.4192]]]]], 1, Sof63653), 
LRes37439 = reshape_layer(Sof63653, [2, 1, 1], Res37439), 
LSep92105 = separable_conv2D_layer(Res37439, 2, 1,[[[[[0.9009]]], [[[0.4889]]]],[[[[0.3486, 0.1003, 0.9947, 0.1723]]]]],[0, 0, 0, 0], 2, 2, true, Sep92105), 
LRes21389 = reshape_layer(Sep92105, [1, 4], Res21389), 
LUp_77635 = up_sampling1D_layer(Res21389, 1, Up_77635), 
exec_layers([LSof63653,LRes37439,LSep92105,LRes21389,LUp_77635],["Sof63653","Res37439","Sep92105","Res21389","Up_77635"],Up_77635,"Up_77635")

Actual (Unparsed): [[[0.2299168, 0.0661522, 0.6560478, 0.1136393]]]

Expected (Unparsed): [[[0.22991681212811216,0.06615219809652798,0.6560477711527056,0.11363931936223101]]]

Actual:   [[[0.23, 0.0662, 0.6561, 0.1137]]]

Expected: [[[0.23, 0.0662, 0.6561, 0.1137]]]