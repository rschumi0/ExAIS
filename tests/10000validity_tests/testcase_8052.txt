import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Mas40275 = tf.keras.layers.Input(shape=([1]))
in0Con38505 = tf.keras.layers.Input(shape=([5, 5]))
in0Den64365 = tf.keras.layers.Input(shape=([5, 3]))
in0Con10758 = tf.keras.layers.Input(shape=([5, 2]))
in0Min37650 = tf.keras.layers.Input(shape=([2, 1]))
in1Min37650 = tf.keras.layers.Input(shape=([2, 1]))

Mas40275 = keras.layers.Masking(mask_value=2, name = 'Mas40275', )(in0Mas40275)
Res64537 = keras.layers.Reshape((1, 1), name = 'Res64537', )(Mas40275)
Res55712 = keras.layers.Reshape((1, 1, 1), name = 'Res55712', )(Res64537)
Res52213 = keras.layers.Reshape((1, 1, 1, 1), name = 'Res52213', )(Res55712)
Cro90261 = keras.layers.Cropping3D(cropping=((0, 0), (0, 0), (0, 0)), name = 'Cro90261', )(Res52213)
Res70919 = keras.layers.Reshape((1, 1, 1), name = 'Res70919', )(Cro90261)
Con28615 = keras.layers.Conv2D(2, (1, 1),strides=(1, 1), padding='valid', dilation_rate=(1, 1), name = 'Con28615', )(Res70919)
Res71044 = keras.layers.Reshape((1, 2), name = 'Res71044', )(Con28615)
Zer75463 = keras.layers.ZeroPadding1D(padding=((4, 0)), name = 'Zer75463', )(Res71044)
Con38505 = keras.layers.Concatenate(axis=2, name = 'Con38505', )([Zer75463,in0Con38505])
Den64365 = keras.layers.Dense(1,name = 'Den64365', )(in0Den64365)
Con10758 = keras.layers.Concatenate(axis=2, name = 'Con10758', )([Den64365,in0Con10758])
Min37650 = keras.layers.Minimum(name = 'Min37650', )([in0Min37650,in1Min37650])
Res69092 = keras.layers.Reshape((2, 1, 1), name = 'Res69092', )(Min37650)
Max71558 = keras.layers.MaxPool2D(pool_size=(1, 1), strides=(2, 4), padding='valid', name = 'Max71558', )(Res69092)
Res77869 = keras.layers.Reshape((1, 1, 1, 1), name = 'Res77869', )(Max71558)
Con44098 = keras.layers.Conv3D(3, (1, 1, 1),strides=(1, 1, 5), padding='same', dilation_rate=(1, 1, 1), name = 'Con44098', )(Res77869)
Res50192 = keras.layers.Reshape((1, 1, 3), name = 'Res50192', )(Con44098)
Res43434 = keras.layers.Reshape((1, 3), name = 'Res43434', )(Res50192)
Zer2890 = keras.layers.ZeroPadding1D(padding=((4, 0)), name = 'Zer2890', )(Res43434)
Zer3986 = keras.layers.ZeroPadding1D(padding=((2, 0)), name = 'Zer3986', )(Zer2890)
Dot96833 = keras.layers.Dot(axes=(2, 2), name = 'Dot96833', )([Con10758,Zer3986])
Add30113 = keras.layers.Add(name = 'Add30113', )([Con38505,Dot96833])
model = tf.keras.models.Model(inputs=[in0Mas40275,in0Con38505,in0Den64365,in0Con10758,in0Min37650,in1Min37650], outputs=Add30113)
w = model.get_layer('Con28615').get_weights() 
w[0] = np.array([[[[0.3147, 0.0367]]]])
w[1] = np.array([0, 0])
model.get_layer('Con28615').set_weights(w) 
w = model.get_layer('Den64365').get_weights() 
w[0] = np.array([[0.5087], [0.3893], [0.1178]])
w[1] = np.array([0.6399])
model.get_layer('Den64365').set_weights(w) 
w = model.get_layer('Con44098').get_weights() 
w[0] = np.array([[[[[0.2623, 0.7582, 0.1354]]]]])
w[1] = np.array([0, 0, 0])
model.get_layer('Con44098').set_weights(w) 
in0Mas40275 = tf.constant([[1.3699]])
in0Con38505 = tf.constant([[[0.1027, 0.8471, 0.17, 0.8057, 0.4186], [0.4084, 0.9343, 0.2533, 0.2884, 0.9485], [0.8235, 0.6817, 0.74, 0.6512, 0.7024], [0.937, 0.4805, 0.6984, 0.2812, 0.2521], [0.0775, 0.452, 0.966, 0.6933, 0.5673]]])
in0Den64365 = tf.constant([[[0.8354, 0.8415, 0.2094], [0.1969, 0.6677, 0.2493], [0.8288, 0.9629, 0.9099], [0.1495, 0.7658, 0.4942], [0.0451, 0.9538, 0.0339]]])
in0Con10758 = tf.constant([[[0.5446, 0.551], [0.6105, 0.3854], [0.3325, 0.3416], [0.029, 0.3323], [0.8191, 0.4923]]])
in0Min37650 = tf.constant([[[0.2512], [0.2821]]])
in1Min37650 = tf.constant([[[0.3932], [0.3945]]])
print (np.array2string(model.predict([in0Mas40275,in0Con38505,in0Den64365,in0Con10758,in0Min37650,in1Min37650],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Add30113.png')

LMas40275 = masking_layer([[1.3699]], 2, Mas40275), 
LRes64537 = reshape_layer(Mas40275, [1, 1], Res64537), 
LRes55712 = reshape_layer(Res64537, [1, 1, 1], Res55712), 
LRes52213 = reshape_layer(Res55712, [1, 1, 1, 1], Res52213), 
LCro90261 = cropping3D_layer(Res52213, 0, 0, 0, 0, 0, 0, Cro90261), 
LRes70919 = reshape_layer(Cro90261, [1, 1, 1], Res70919), 
LCon28615 = conv2D_layer(Res70919, 1, 1,[[[[0.3147, 0.0367]]]],[0, 0], 1, 1, false, 1, 1, Con28615), 
LRes71044 = reshape_layer(Con28615, [1, 2], Res71044), 
LZer75463 = zero_padding1D_layer(Res71044, 4, 0, Zer75463), 
LCon38505 = concatenate_layer([Zer75463,[[[0.1027, 0.8471, 0.17, 0.8057, 0.4186], [0.4084, 0.9343, 0.2533, 0.2884, 0.9485], [0.8235, 0.6817, 0.74, 0.6512, 0.7024], [0.937, 0.4805, 0.6984, 0.2812, 0.2521], [0.0775, 0.452, 0.966, 0.6933, 0.5673]]]], 2, Con38505), 
LDen64365 = dense_layer([[[0.8354, 0.8415, 0.2094], [0.1969, 0.6677, 0.2493], [0.8288, 0.9629, 0.9099], [0.1495, 0.7658, 0.4942], [0.0451, 0.9538, 0.0339]]], [[0.5087], [0.3893], [0.1178]],[0.6399], Den64365), 
LCon10758 = concatenate_layer([Den64365,[[[0.5446, 0.551], [0.6105, 0.3854], [0.3325, 0.3416], [0.029, 0.3323], [0.8191, 0.4923]]]], 2, Con10758), 
LMin37650 = minimum_layer([[[[0.2512], [0.2821]]], [[[0.3932], [0.3945]]]], Min37650), 
LRes69092 = reshape_layer(Min37650, [2, 1, 1], Res69092), 
LMax71558 = max_pool2D_layer(Res69092, 1, 1, 2, 4, false, Max71558), 
LRes77869 = reshape_layer(Max71558, [1, 1, 1, 1], Res77869), 
LCon44098 = conv3D_layer(Res77869, 1, 1, 1,[[[[[0.2623, 0.7582, 0.1354]]]]],[0, 0, 0], 1, 1, 5, true, 1, 1, 1, Con44098), 
LRes50192 = reshape_layer(Con44098, [1, 1, 3], Res50192), 
LRes43434 = reshape_layer(Res50192, [1, 3], Res43434), 
LZer2890 = zero_padding1D_layer(Res43434, 4, 0, Zer2890), 
LZer3986 = zero_padding1D_layer(Zer2890, 2, 0, Zer3986), 
LDot96833 = dot_layer(Con10758,Zer3986, 2, 2, Dot96833), 
LAdd30113 = add_layer([Con38505,Dot96833], Add30113), 
exec_layers([LMas40275,LRes64537,LRes55712,LRes52213,LCro90261,LRes70919,LCon28615,LRes71044,LZer75463,LCon38505,LDen64365,LCon10758,LMin37650,LRes69092,LMax71558,LRes77869,LCon44098,LRes50192,LRes43434,LZer2890,LZer3986,LDot96833,LAdd30113],["Mas40275","Res64537","Res55712","Res52213","Cro90261","Res70919","Con28615","Res71044","Zer75463","Con38505","Den64365","Con10758","Min37650","Res69092","Max71558","Res77869","Con44098","Res50192","Res43434","Zer2890","Zer3986","Dot96833","Add30113"],Add30113,"Add30113")

Actual (Unparsed): [[[0.0000000, 0.0000000, 0.1027000, 0.8471000, 0.1700000, 0.8057000, 0.6344397], [0.0000000, 0.0000000, 0.4084000, 0.9343000, 0.2533000, 0.2884000, 1.1457088], [0.0000000, 0.0000000, 0.8235000, 0.6817000, 0.7400000, 0.6512000, 0.8790510], [0.0000000, 0.0000000, 0.9370000, 0.4805000, 0.6984000, 0.2812000, 0.3395788], [0.4311075, 0.0502753, 0.0775000, 0.4520000, 0.9660000, 0.6933000, 0.8084535]]]

Expected (Unparsed): [[[0.0,0.0,0.1027,0.8471,0.17,0.8057,0.634439743295],[0.0,0.0,0.4084,0.9343,0.2533,0.2884,1.1457088326643168],[0.0,0.0,0.8235,0.6817,0.74,0.6512,0.8790509461026],[0.0,0.0,0.937,0.4805,0.6984,0.2812,0.33957883394509597],[0.43110752999999996,0.05027533,0.0775,0.452,0.966,0.6933,0.8084534617576689]]]

Actual:   [[[0, 0, 0.1027, 0.8471, 0.17, 0.8057, 0.6345], [0, 0, 0.4084, 0.9343, 0.2533, 0.2884, 1.1458], [0, 0, 0.8235, 0.6817, 0.74, 0.6512, 0.8791], [0, 0, 0.937, 0.4805, 0.6984, 0.2812, 0.3396], [0.4312, 0.0503, 0.0775, 0.452, 0.966, 0.6933, 0.8085]]]

Expected: [[[0, 0, 0.1027, 0.8471, 0.17, 0.8057, 0.6345], [0, 0, 0.4084, 0.9343, 0.2533, 0.2884, 1.1458], [0, 0, 0.8235, 0.6817, 0.74, 0.6512, 0.8791], [0, 0, 0.937, 0.4805, 0.6984, 0.2812, 0.3396], [0.4312, 0.0503, 0.0775, 0.452, 0.966, 0.6933, 0.8085]]]