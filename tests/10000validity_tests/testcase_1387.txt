import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Max19593 = tf.keras.layers.Input(shape=([2, 2]))
in0Con76643 = tf.keras.layers.Input(shape=([2, 6, 3]))
in0Ave25099 = tf.keras.layers.Input(shape=([1, 1, 1, 1]))
in1Ave25099 = tf.keras.layers.Input(shape=([1, 1, 1, 1]))
in0Con51 = tf.keras.layers.Input(shape=([1, 4, 3]))
in0Con48696 = tf.keras.layers.Input(shape=([1, 2, 1]))
in0Glo78246 = tf.keras.layers.Input(shape=([1, 2]))
in0Con82231 = tf.keras.layers.Input(shape=([4, 8, 2]))

Max19593 = keras.layers.MaxPool1D(pool_size=(1), strides=(1), padding='same', name = 'Max19593', )(in0Max19593)
Ave43252 = keras.layers.AveragePooling1D(pool_size=(1), name = 'Ave43252', )(Max19593)
Res36864 = keras.layers.Reshape((2, 2, 1), name = 'Res36864', )(Ave43252)
Zer75650 = keras.layers.ZeroPadding2D(padding=((0, 0), (4, 0)), name = 'Zer75650', )(Res36864)
Con76643 = keras.layers.Concatenate(axis=3, name = 'Con76643', )([Zer75650,in0Con76643])
Ave25099 = keras.layers.Average(name = 'Ave25099', )([in0Ave25099,in1Ave25099])
Res460 = keras.layers.Reshape((1, 1, 1), name = 'Res460', )(Ave25099)
Zer83211 = keras.layers.ZeroPadding2D(padding=((0, 0), (3, 0)), name = 'Zer83211', )(Res460)
Con51 = keras.layers.Concatenate(axis=3, name = 'Con51', )([Zer83211,in0Con51])
Con48696 = keras.layers.Conv2DTranspose(4, (1, 1),strides=(1, 2), padding='same', name = 'Con48696', )(in0Con48696)
Max35140 = keras.layers.Maximum(name = 'Max35140', )([Con51,Con48696])
Zer59609 = keras.layers.ZeroPadding2D(padding=((1, 0), (2, 0)), name = 'Zer59609', )(Max35140)
Min40691 = keras.layers.Minimum(name = 'Min40691', )([Con76643,Zer59609])
Zer31657 = keras.layers.ZeroPadding2D(padding=((1, 1), (1, 1)), name = 'Zer31657', )(Min40691)
Glo78246 = keras.layers.GlobalAveragePooling1D(name = 'Glo78246', )(in0Glo78246)
Res76492 = keras.layers.Reshape((2, 1), name = 'Res76492', )(Glo78246)
Res64738 = keras.layers.Reshape((2, 1, 1), name = 'Res64738', )(Res76492)
Sep69997 = keras.layers.SeparableConv2D(2, (2, 1),strides=(2, 2), padding='same', name = 'Sep69997', )(Res64738)
Zer15401 = keras.layers.ZeroPadding2D(padding=((3, 0), (7, 0)), name = 'Zer15401', )(Sep69997)
Con82231 = keras.layers.Concatenate(axis=3, name = 'Con82231', )([Zer15401,in0Con82231])
Max39864 = keras.layers.Maximum(name = 'Max39864', )([Zer31657,Con82231])
model = tf.keras.models.Model(inputs=[in0Max19593,in0Con76643,in0Ave25099,in1Ave25099,in0Con51,in0Con48696,in0Glo78246,in0Con82231], outputs=Max39864)
w = model.get_layer('Con48696').get_weights() 
w[0] = np.array([[[[0.3318], [0.6453], [0.9243], [0.606]]]])
w[1] = np.array([0, 0, 0, 0])
model.get_layer('Con48696').set_weights(w) 
w = model.get_layer('Sep69997').get_weights() 
w[0] = np.array([[[[0.1594]]], [[[0.3341]]]])
w[1] = np.array([[[[0.4125, 0.7829]]]])
w[2] = np.array([0, 0])
model.get_layer('Sep69997').set_weights(w) 
in0Max19593 = tf.constant([[[1.1621, 1.2456], [1.8085, 1.3605]]])
in0Con76643 = tf.constant([[[[0.7935, 0.0379, 0.6578], [0.4927, 0.943, 0.7584], [0.9006, 0.0169, 0.0613], [0.9592, 0.1847, 0.371], [0.139, 0.4831, 0.641], [0.2925, 0.254, 0.8757]], [[0.2662, 0.1436, 0.6412], [0.2949, 0.1545, 0.1885], [0.7228, 0.0326, 0.3373], [0.731, 0.5792, 0.2764], [0.4905, 0.0703, 0.2852], [0.5973, 0.6095, 0.6111]]]])
in0Ave25099 = tf.constant([[[[[0.9252]]]]])
in1Ave25099 = tf.constant([[[[[0.0184]]]]])
in0Con51 = tf.constant([[[[0.8136, 0.2609, 0.2567], [0.667, 0.8742, 0.0894], [0.7063, 0.2928, 0.1952], [0.7039, 0.7322, 0.0448]]]])
in0Con48696 = tf.constant([[[[0.2984], [0.0385]]]])
in0Glo78246 = tf.constant([[[1.2462, 1.8689]]])
in0Con82231 = tf.constant([[[[0.5081, 0.7912], [0.5619, 0.6751], [0.7889, 0.3091], [0.0107, 0.1922], [0.0584, 0.1671], [0.1185, 0.2344], [0.3441, 0.4278], [0.483, 0.3299]], [[0.0972, 0.1216], [0.6286, 0.6156], [0.9826, 0.4102], [0.1614, 0.9505], [0.5745, 0.9503], [0.086, 0.8049], [0.3378, 0.5053], [0.9169, 0.3184]], [[0.1262, 0.4589], [0.3892, 0.9801], [0.1811, 0.647], [0.1587, 0.1004], [0.2777, 0.8449], [0.8704, 0.6152], [0.2313, 0.3174], [0.3694, 0.7926]], [[0.4503, 0.0785], [0.6308, 0.0953], [0.6043, 0.8863], [0.1915, 0.7942], [0.7575, 0.55], [0.4843, 0.9249], [0.5161, 0.8217], [0.4906, 0.8326]]]])
print (np.array2string(model.predict([in0Max19593,in0Con76643,in0Ave25099,in1Ave25099,in0Con51,in0Con48696,in0Glo78246,in0Con82231],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Max39864.png')

LMax19593 = max_pool1D_layer([[[1.1621, 1.2456], [1.8085, 1.3605]]], 1, 1, true, Max19593), 
LAve43252 = average_pooling1D_layer(Max19593, 1, Ave43252), 
LRes36864 = reshape_layer(Ave43252, [2, 2, 1], Res36864), 
LZer75650 = zero_padding2D_layer(Res36864, 0, 0, 4, 0, Zer75650), 
LCon76643 = concatenate_layer([Zer75650,[[[[0.7935, 0.0379, 0.6578], [0.4927, 0.943, 0.7584], [0.9006, 0.0169, 0.0613], [0.9592, 0.1847, 0.371], [0.139, 0.4831, 0.641], [0.2925, 0.254, 0.8757]], [[0.2662, 0.1436, 0.6412], [0.2949, 0.1545, 0.1885], [0.7228, 0.0326, 0.3373], [0.731, 0.5792, 0.2764], [0.4905, 0.0703, 0.2852], [0.5973, 0.6095, 0.6111]]]]], 3, Con76643), 
LAve25099 = average_layer([[[[[[0.9252]]]]], [[[[[0.0184]]]]]], Ave25099), 
LRes460 = reshape_layer(Ave25099, [1, 1, 1], Res460), 
LZer83211 = zero_padding2D_layer(Res460, 0, 0, 3, 0, Zer83211), 
LCon51 = concatenate_layer([Zer83211,[[[[0.8136, 0.2609, 0.2567], [0.667, 0.8742, 0.0894], [0.7063, 0.2928, 0.1952], [0.7039, 0.7322, 0.0448]]]]], 3, Con51), 
LCon48696 = conv2D_transpose_layer([[[[0.2984], [0.0385]]]], 1, 1,[[[[0.3318], [0.6453], [0.9243], [0.606]]]],[0, 0, 0, 0], 1, 2, true, Con48696), 
LMax35140 = maximum_layer([Con51,Con48696], Max35140), 
LZer59609 = zero_padding2D_layer(Max35140, 1, 0, 2, 0, Zer59609), 
LMin40691 = minimum_layer([Con76643,Zer59609], Min40691), 
LZer31657 = zero_padding2D_layer(Min40691, 1, 1, 1, 1, Zer31657), 
LGlo78246 = global_average_pooling1D_layer([[[1.2462, 1.8689]]], Glo78246), 
LRes76492 = reshape_layer(Glo78246, [2, 1], Res76492), 
LRes64738 = reshape_layer(Res76492, [2, 1, 1], Res64738), 
LSep69997 = separable_conv2D_layer(Res64738, 2, 1,[[[[[0.1594]]], [[[0.3341]]]],[[[[0.4125, 0.7829]]]]],[0, 0], 2, 2, true, Sep69997), 
LZer15401 = zero_padding2D_layer(Sep69997, 3, 0, 7, 0, Zer15401), 
LCon82231 = concatenate_layer([Zer15401,[[[[0.5081, 0.7912], [0.5619, 0.6751], [0.7889, 0.3091], [0.0107, 0.1922], [0.0584, 0.1671], [0.1185, 0.2344], [0.3441, 0.4278], [0.483, 0.3299]], [[0.0972, 0.1216], [0.6286, 0.6156], [0.9826, 0.4102], [0.1614, 0.9505], [0.5745, 0.9503], [0.086, 0.8049], [0.3378, 0.5053], [0.9169, 0.3184]], [[0.1262, 0.4589], [0.3892, 0.9801], [0.1811, 0.647], [0.1587, 0.1004], [0.2777, 0.8449], [0.8704, 0.6152], [0.2313, 0.3174], [0.3694, 0.7926]], [[0.4503, 0.0785], [0.6308, 0.0953], [0.6043, 0.8863], [0.1915, 0.7942], [0.7575, 0.55], [0.4843, 0.9249], [0.5161, 0.8217], [0.4906, 0.8326]]]]], 3, Con82231), 
LMax39864 = maximum_layer([Zer31657,Con82231], Max39864), 
exec_layers([LMax19593,LAve43252,LRes36864,LZer75650,LCon76643,LAve25099,LRes460,LZer83211,LCon51,LCon48696,LMax35140,LZer59609,LMin40691,LZer31657,LGlo78246,LRes76492,LRes64738,LSep69997,LZer15401,LCon82231,LMax39864],["Max19593","Ave43252","Res36864","Zer75650","Con76643","Ave25099","Res460","Zer83211","Con51","Con48696","Max35140","Zer59609","Min40691","Zer31657","Glo78246","Res76492","Res64738","Sep69997","Zer15401","Con82231","Max39864"],Max39864,"Max39864")

Actual (Unparsed): [[[[0.0000000, 0.0000000, 0.5081000, 0.7912000], [0.0000000, 0.0000000, 0.5619000, 0.6751000], [0.0000000, 0.0000000, 0.7889000, 0.3091000], [0.0000000, 0.0000000, 0.0107000, 0.1922000], [0.0000000, 0.0000000, 0.0584000, 0.1671000], [0.0000000, 0.0000000, 0.1185000, 0.2344000], [0.0000000, 0.0000000, 0.3441000, 0.4278000], [0.0000000, 0.0000000, 0.4830000, 0.3299000]], [[0.0000000, 0.0000000, 0.0972000, 0.1216000], [0.0000000, 0.0000000, 0.6286000, 0.6156000], [0.0000000, 0.0000000, 0.9826000, 0.4102000], [0.0000000, 0.0000000, 0.1614000, 0.9505000], [0.0000000, 0.0000000, 0.5745000, 0.9503000], [0.0000000, 0.0000000, 0.0860000, 0.8049000], [0.0000000, 0.0000000, 0.3378000, 0.5053000], [0.0000000, 0.0000000, 0.9169000, 0.3184000]], [[0.0000000, 0.0000000, 0.1262000, 0.4589000], [0.0000000, 0.0000000, 0.3892000, 0.9801000], [0.0000000, 0.0000000, 0.1811000, 0.6470000], [0.0000000, 0.7228000, 0.1587000, 0.2567000], [0.0000000, 0.6670000, 0.5792000, 0.8449000], [0.0127743, 0.4905000, 0.8704000, 0.6152000], [0.4718000, 0.5973000, 0.6095000, 0.3174000], [0.0000000, 0.0000000, 0.3694000, 0.7926000]], [[0.0000000, 0.0000000, 0.4503000, 0.0785000], [0.0000000, 0.0000000, 0.6308000, 0.0953000], [0.0000000, 0.0000000, 0.6043000, 0.8863000], [0.0000000, 0.0000000, 0.1915000, 0.7942000], [0.0000000, 0.0000000, 0.7575000, 0.5500000], [0.0000000, 0.0000000, 0.4843000, 0.9249000], [0.0000000, 0.0000000, 0.5161000, 0.8217000], [0.3395055, 0.6443609, 0.4906000, 0.8326000]]]]

Expected (Unparsed): [[[[0,0,0.5081,0.7912],[0,0,0.5619,0.6751],[0,0,0.7889,0.3091],[0,0,0.0107,0.1922],[0,0,0.0584,0.1671],[0,0,0.1185,0.2344],[0,0,0.3441,0.4278],[0,0,0.483,0.3299]],[[0,0,0.0972,0.1216],[0,0,0.6286,0.6156],[0,0,0.9826,0.4102],[0,0,0.1614,0.9505],[0,0,0.5745,0.9503],[0,0,0.086,0.8049],[0,0,0.3378,0.5053],[0,0,0.9169,0.3184]],[[0,0,0.1262,0.4589],[0,0,0.3892,0.9801],[0,0,0.1811,0.647],[0,0.7228,0.1587,0.2567],[0,0.667,0.5792,0.8449],[0.012774299999999999,0.4905,0.8704,0.6152],[0.4718,0.5973,0.6095,0.3174],[0,0,0.3694,0.7926]],[[0,0,0.4503,0.0785],[0,0,0.6308,0.0953],[0,0,0.6043,0.8863],[0,0,0.1915,0.7942],[0,0,0.7575,0.55],[0,0,0.4843,0.9249],[0,0,0.5161,0.8217],[0.339505555125,0.6443609675330001,0.4906,0.8326]]]]

Actual:   [[[[0, 0, 0.5081, 0.7912], [0, 0, 0.5619, 0.6751], [0, 0, 0.7889, 0.3091], [0, 0, 0.0107, 0.1922], [0, 0, 0.0584, 0.1671], [0, 0, 0.1185, 0.2344], [0, 0, 0.3441, 0.4278], [0, 0, 0.483, 0.3299]], [[0, 0, 0.0972, 0.1216], [0, 0, 0.6286, 0.6156], [0, 0, 0.9826, 0.4102], [0, 0, 0.1614, 0.9505], [0, 0, 0.5745, 0.9503], [0, 0, 0.086, 0.8049], [0, 0, 0.3378, 0.5053], [0, 0, 0.9169, 0.3184]], [[0, 0, 0.1262, 0.4589], [0, 0, 0.3892, 0.9801], [0, 0, 0.1811, 0.647], [0, 0.7228, 0.1587, 0.2567], [0, 0.667, 0.5792, 0.8449], [0.0128, 0.4905, 0.8704, 0.6152], [0.4718, 0.5973, 0.6095, 0.3174], [0, 0, 0.3694, 0.7926]], [[0, 0, 0.4503, 0.0785], [0, 0, 0.6308, 0.0953], [0, 0, 0.6043, 0.8863], [0, 0, 0.1915, 0.7942], [0, 0, 0.7575, 0.55], [0, 0, 0.4843, 0.9249], [0, 0, 0.5161, 0.8217], [0.3396, 0.6444, 0.4906, 0.8326]]]]

Expected: [[[[0, 0, 0.5081, 0.7912], [0, 0, 0.5619, 0.6751], [0, 0, 0.7889, 0.3091], [0, 0, 0.0107, 0.1922], [0, 0, 0.0584, 0.1671], [0, 0, 0.1185, 0.2344], [0, 0, 0.3441, 0.4278], [0, 0, 0.483, 0.3299]], [[0, 0, 0.0972, 0.1216], [0, 0, 0.6286, 0.6156], [0, 0, 0.9826, 0.4102], [0, 0, 0.1614, 0.9505], [0, 0, 0.5745, 0.9503], [0, 0, 0.086, 0.8049], [0, 0, 0.3378, 0.5053], [0, 0, 0.9169, 0.3184]], [[0, 0, 0.1262, 0.4589], [0, 0, 0.3892, 0.9801], [0, 0, 0.1811, 0.647], [0, 0.7228, 0.1587, 0.2567], [0, 0.667, 0.5792, 0.8449], [0.0128, 0.4905, 0.8704, 0.6152], [0.4718, 0.5973, 0.6095, 0.3174], [0, 0, 0.3694, 0.7926]], [[0, 0, 0.4503, 0.0785], [0, 0, 0.6308, 0.0953], [0, 0, 0.6043, 0.8863], [0, 0, 0.1915, 0.7942], [0, 0, 0.7575, 0.55], [0, 0, 0.4843, 0.9249], [0, 0, 0.5161, 0.8217], [0.3396, 0.6444, 0.4906, 0.8326]]]]