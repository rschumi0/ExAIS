import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Cro42788 = tf.keras.layers.Input(shape=([4, 3, 3, 4]))
in0Mul45737 = tf.keras.layers.Input(shape=([1, 1]))
in1Mul45737 = tf.keras.layers.Input(shape=([1, 1]))
in0Con47849 = tf.keras.layers.Input(shape=([1, 7]))
in0Bat24685 = tf.keras.layers.Input(shape=([4, 1]))
in0Con89182 = tf.keras.layers.Input(shape=([4, 7]))
in0Con78217 = tf.keras.layers.Input(shape=([4, 8, 1]))
in0Cro89040 = tf.keras.layers.Input(shape=([3, 2, 2]))

Cro42788 = keras.layers.Cropping3D(cropping=((0, 3), (0, 1), (2, 0)), name = 'Cro42788', )(in0Cro42788)
Res69551 = keras.layers.Reshape((1, 2, 4), name = 'Res69551', )(Cro42788)
Res7435 = keras.layers.Reshape((1, 8), name = 'Res7435', )(Res69551)
Mul45737 = keras.layers.Multiply(name = 'Mul45737', )([in0Mul45737,in1Mul45737])
Con47849 = keras.layers.Concatenate(axis=2, name = 'Con47849', )([Mul45737,in0Con47849])
Ave42841 = keras.layers.Average(name = 'Ave42841', )([Res7435,Con47849])
Zer12589 = keras.layers.ZeroPadding1D(padding=((3, 0)), name = 'Zer12589', )(Ave42841)
Bat24685 = keras.layers.BatchNormalization(axis=2, epsilon=0.5488736963011962,  name = 'Bat24685', )(in0Bat24685)
Con89182 = keras.layers.Concatenate(axis=2, name = 'Con89182', )([Bat24685,in0Con89182])
Sub55237 = keras.layers.Subtract(name = 'Sub55237', )([Zer12589,Con89182])
Res15942 = keras.layers.Reshape((4, 8, 1), name = 'Res15942', )(Sub55237)
Con78217 = keras.layers.Concatenate(axis=3, name = 'Con78217', )([Res15942,in0Con78217])
Cro89040 = keras.layers.Cropping2D(cropping=((1, 0), (1, 0)), name = 'Cro89040', )(in0Cro89040)
Zer51957 = keras.layers.ZeroPadding2D(padding=((2, 0), (7, 0)), name = 'Zer51957', )(Cro89040)
Max41127 = keras.layers.Maximum(name = 'Max41127', )([Con78217,Zer51957])
Res5756 = keras.layers.Reshape((4, 16), name = 'Res5756', )(Max41127)
LST87499 = keras.layers.LSTM(2,recurrent_activation='sigmoid', name = 'LST87499', )(Res5756)
model = tf.keras.models.Model(inputs=[in0Cro42788,in0Mul45737,in1Mul45737,in0Con47849,in0Bat24685,in0Con89182,in0Con78217,in0Cro89040], outputs=LST87499)
w = model.get_layer('Bat24685').get_weights() 
w[0] = np.array([0.5521])
w[1] = np.array([0.6328])
w[2] = np.array([0.3084])
w[3] = np.array([0.4454])
model.get_layer('Bat24685').set_weights(w) 
w = model.get_layer('LST87499').get_weights() 
w[0] = np.array([[7, 2, 4, 1, 4, 7, 7, 6], [9, 1, 8, 8, 8, 5, 10, 4], [6, 8, 3, 1, 9, 4, 5, 6], [9, 8, 5, 3, 10, 1, 10, 6], [5, 1, 10, 6, 1, 6, 9, 2], [8, 7, 7, 1, 8, 7, 6, 10], [1, 3, 9, 9, 4, 3, 7, 8], [3, 6, 9, 3, 4, 9, 4, 9], [7, 2, 3, 5, 6, 5, 4, 6], [2, 8, 9, 1, 6, 3, 4, 7], [2, 2, 4, 9, 1, 2, 6, 6], [3, 4, 7, 10, 1, 8, 6, 10], [1, 9, 9, 9, 2, 1, 9, 6], [4, 5, 4, 7, 7, 5, 7, 6], [10, 8, 8, 8, 2, 9, 10, 1], [6, 10, 1, 5, 7, 5, 10, 1]])
w[1] = np.array([[1, 10, 10, 6, 10, 3, 1, 7], [7, 2, 6, 9, 2, 9, 1, 2]])
w[2] = np.array([4, 9, 1, 4, 5, 2, 2, 3])
model.get_layer('LST87499').set_weights(w) 
in0Cro42788 = tf.constant([[[[[1.1327, 1.6751, 1.4793, 1.3132], [1.3969, 1.9683, 1.4074, 1.3642], [1.6534, 1.2596, 1.5251, 1.2755]], [[1.5325, 1.9884, 1.1349, 1.1838], [1.8245, 1.5458, 1.7781, 1.1809], [1.2736, 1.56, 1.8253, 1.7233]], [[1.4429, 1.8893, 1.4908, 1.1168], [1.547, 1.0011, 1.2508, 1.8807], [1.0394, 1.9506, 1.6181, 1.5218]]], [[[1.0494, 1.3505, 1.1055, 1.1401], [1.4657, 1.5697, 1.9964, 1.3304], [1.5822, 1.8925, 1.2331, 1.0444]], [[1.7395, 1.524, 1.3338, 1.4349], [1.325, 1.1378, 1.7508, 1.215], [1.8231, 1.1269, 1.4975, 1.7361]], [[1.3515, 1.8414, 1.1853, 1.8122], [1.2618, 1.8741, 1.8385, 1.2999], [1.9346, 1.8912, 1.9827, 1.5815]]], [[[1.8584, 1.5944, 1.5401, 1.3919], [1.4454, 1.1484, 1.006, 1.8807], [1.8078, 1.8127, 1.2303, 1.4077]], [[1.8941, 1.5719, 1.8835, 1.3311], [1.9698, 1.2813, 1.3449, 1.9692], [1.4146, 1.2083, 1.3218, 1.9885]], [[1.2038, 1.8872, 1.9801, 1.706], [1.2441, 1.8808, 1.7454, 1.1777], [1.9423, 1.3921, 1.2235, 1.4922]]], [[[1.9972, 1.6573, 1.8778, 1.3861], [1.4294, 1.7125, 1.201, 1.157], [1.2868, 1.4312, 1.1263, 1.8592]], [[1.2987, 1.6965, 1.3275, 1.9398], [1.9908, 1.1963, 1.8841, 1.7947], [1.4171, 1.6043, 1.5012, 1.2086]], [[1.7177, 1.8475, 1.1131, 1.2778], [1.171, 1.7502, 1.2283, 1.2112], [1.2691, 1.5905, 1.8204, 1.3532]]]]])
in0Mul45737 = tf.constant([[[0.6196]]])
in1Mul45737 = tf.constant([[[0.0122]]])
in0Con47849 = tf.constant([[[0.7568, 0.9146, 0.5586, 0.4586, 0.5327, 0.224, 0.9487]]])
in0Bat24685 = tf.constant([[[1.917], [1.8794], [1.1523], [1.2904]]])
in0Con89182 = tf.constant([[[0.0232, 0.3863, 0.4191, 0.3938, 0.2347, 0.3705, 0.3417], [0.9012, 0.7096, 0.8462, 0.281, 0.5533, 0.4688, 0.8531], [0.1203, 0.287, 0.5888, 0.5209, 0.1023, 0.4114, 0.7497], [0.0895, 0.1019, 0.8515, 0.1104, 0.7542, 0.4942, 0.0286]]])
in0Con78217 = tf.constant([[[[0.7813], [0.2141], [0.5448], [0.7202], [0.106], [0.9601], [0.1903], [0.5677]], [[0.6491], [0.6491], [0.258], [0.8357], [0.4854], [0.6677], [0.3868], [0.7939]], [[0.2665], [0.6449], [0.9594], [0.2567], [0.8638], [0.4882], [0.8217], [0.5715]], [[0.7071], [0.4948], [0.0538], [0.2514], [0.1223], [0.2612], [0.6584], [0.9314]]]])
in0Cro89040 = tf.constant([[[[1.292, 1.8787], [1.191, 1.1667]], [[1.8297, 1.9547], [1.4426, 1.3441]], [[1.1968, 1.0534], [1.8484, 1.2551]]]])
print (np.array2string(model.predict([in0Cro42788,in0Mul45737,in1Mul45737,in0Con47849,in0Bat24685,in0Con89182,in0Con78217,in0Cro89040],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='LST87499.png')

LCro42788 = cropping3D_layer([[[[[1.1327, 1.6751, 1.4793, 1.3132], [1.3969, 1.9683, 1.4074, 1.3642], [1.6534, 1.2596, 1.5251, 1.2755]], [[1.5325, 1.9884, 1.1349, 1.1838], [1.8245, 1.5458, 1.7781, 1.1809], [1.2736, 1.56, 1.8253, 1.7233]], [[1.4429, 1.8893, 1.4908, 1.1168], [1.547, 1.0011, 1.2508, 1.8807], [1.0394, 1.9506, 1.6181, 1.5218]]], [[[1.0494, 1.3505, 1.1055, 1.1401], [1.4657, 1.5697, 1.9964, 1.3304], [1.5822, 1.8925, 1.2331, 1.0444]], [[1.7395, 1.524, 1.3338, 1.4349], [1.325, 1.1378, 1.7508, 1.215], [1.8231, 1.1269, 1.4975, 1.7361]], [[1.3515, 1.8414, 1.1853, 1.8122], [1.2618, 1.8741, 1.8385, 1.2999], [1.9346, 1.8912, 1.9827, 1.5815]]], [[[1.8584, 1.5944, 1.5401, 1.3919], [1.4454, 1.1484, 1.006, 1.8807], [1.8078, 1.8127, 1.2303, 1.4077]], [[1.8941, 1.5719, 1.8835, 1.3311], [1.9698, 1.2813, 1.3449, 1.9692], [1.4146, 1.2083, 1.3218, 1.9885]], [[1.2038, 1.8872, 1.9801, 1.706], [1.2441, 1.8808, 1.7454, 1.1777], [1.9423, 1.3921, 1.2235, 1.4922]]], [[[1.9972, 1.6573, 1.8778, 1.3861], [1.4294, 1.7125, 1.201, 1.157], [1.2868, 1.4312, 1.1263, 1.8592]], [[1.2987, 1.6965, 1.3275, 1.9398], [1.9908, 1.1963, 1.8841, 1.7947], [1.4171, 1.6043, 1.5012, 1.2086]], [[1.7177, 1.8475, 1.1131, 1.2778], [1.171, 1.7502, 1.2283, 1.2112], [1.2691, 1.5905, 1.8204, 1.3532]]]]], 0, 3, 0, 1, 2, 0, Cro42788), 
LRes69551 = reshape_layer(Cro42788, [1, 2, 4], Res69551), 
LRes7435 = reshape_layer(Res69551, [1, 8], Res7435), 
LMul45737 = multiply_layer([[[[0.6196]]], [[[0.0122]]]], Mul45737), 
LCon47849 = concatenate_layer([Mul45737,[[[0.7568, 0.9146, 0.5586, 0.4586, 0.5327, 0.224, 0.9487]]]], 2, Con47849), 
LAve42841 = average_layer([Res7435,Con47849], Ave42841), 
LZer12589 = zero_padding1D_layer(Ave42841, 3, 0, Zer12589), 
LBat24685 = batch_normalization_layer([[[1.917], [1.8794], [1.1523], [1.2904]]], 2, 0.5488736963011962, [0.5521], [0.6328], [0.3084], [0.4454], Bat24685), 
LCon89182 = concatenate_layer([Bat24685,[[[0.0232, 0.3863, 0.4191, 0.3938, 0.2347, 0.3705, 0.3417], [0.9012, 0.7096, 0.8462, 0.281, 0.5533, 0.4688, 0.8531], [0.1203, 0.287, 0.5888, 0.5209, 0.1023, 0.4114, 0.7497], [0.0895, 0.1019, 0.8515, 0.1104, 0.7542, 0.4942, 0.0286]]]], 2, Con89182), 
LSub55237 = subtract_layer(Zer12589,Con89182, Sub55237), 
LRes15942 = reshape_layer(Sub55237, [4, 8, 1], Res15942), 
LCon78217 = concatenate_layer([Res15942,[[[[0.7813], [0.2141], [0.5448], [0.7202], [0.106], [0.9601], [0.1903], [0.5677]], [[0.6491], [0.6491], [0.258], [0.8357], [0.4854], [0.6677], [0.3868], [0.7939]], [[0.2665], [0.6449], [0.9594], [0.2567], [0.8638], [0.4882], [0.8217], [0.5715]], [[0.7071], [0.4948], [0.0538], [0.2514], [0.1223], [0.2612], [0.6584], [0.9314]]]]], 3, Con78217), 
LCro89040 = cropping2D_layer([[[[1.292, 1.8787], [1.191, 1.1667]], [[1.8297, 1.9547], [1.4426, 1.3441]], [[1.1968, 1.0534], [1.8484, 1.2551]]]], 1, 0, 1, 0, Cro89040), 
LZer51957 = zero_padding2D_layer(Cro89040, 2, 0, 7, 0, Zer51957), 
LMax41127 = maximum_layer([Con78217,Zer51957], Max41127), 
LRes5756 = reshape_layer(Max41127, [4, 16], Res5756), 
LLST87499 = lstm_layer(Res5756,[[7, 2, 4, 1, 4, 7, 7, 6], [9, 1, 8, 8, 8, 5, 10, 4], [6, 8, 3, 1, 9, 4, 5, 6], [9, 8, 5, 3, 10, 1, 10, 6], [5, 1, 10, 6, 1, 6, 9, 2], [8, 7, 7, 1, 8, 7, 6, 10], [1, 3, 9, 9, 4, 3, 7, 8], [3, 6, 9, 3, 4, 9, 4, 9], [7, 2, 3, 5, 6, 5, 4, 6], [2, 8, 9, 1, 6, 3, 4, 7], [2, 2, 4, 9, 1, 2, 6, 6], [3, 4, 7, 10, 1, 8, 6, 10], [1, 9, 9, 9, 2, 1, 9, 6], [4, 5, 4, 7, 7, 5, 7, 6], [10, 8, 8, 8, 2, 9, 10, 1], [6, 10, 1, 5, 7, 5, 10, 1]],[[1, 10, 10, 6, 10, 3, 1, 7], [7, 2, 6, 9, 2, 9, 1, 2]],[4, 9, 1, 4, 5, 2, 2, 3], LST87499), 
exec_layers([LCro42788,LRes69551,LRes7435,LMul45737,LCon47849,LAve42841,LZer12589,LBat24685,LCon89182,LSub55237,LRes15942,LCon78217,LCro89040,LZer51957,LMax41127,LRes5756,LLST87499],["Cro42788","Res69551","Res7435","Mul45737","Con47849","Ave42841","Zer12589","Bat24685","Con89182","Sub55237","Res15942","Con78217","Cro89040","Zer51957","Max41127","Res5756","LST87499"],LST87499,"LST87499")

Actual (Unparsed): [[0.9993293, 0.9993293]]

Expected (Unparsed): [[0.9993292997390638,0.999329299739067]]

Actual:   [[0.9994, 0.9994]]

Expected: [[0.9994, 0.9994]]