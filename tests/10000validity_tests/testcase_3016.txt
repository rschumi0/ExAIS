import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Max37221 = tf.keras.layers.Input(shape=([2, 1]))
in1Max37221 = tf.keras.layers.Input(shape=([2, 1]))
in0Con92238 = tf.keras.layers.Input(shape=([2, 3, 3]))
in0Up_69395 = tf.keras.layers.Input(shape=([2, 3, 4]))
in0Cro93384 = tf.keras.layers.Input(shape=([1, 2]))
in0Con68652 = tf.keras.layers.Input(shape=([2, 5, 3]))

Max37221 = keras.layers.Maximum(name = 'Max37221', )([in0Max37221,in1Max37221])
Res92994 = keras.layers.Reshape((2, 1, 1), name = 'Res92994', )(Max37221)
Res24919 = keras.layers.Reshape((2, 1, 1, 1), name = 'Res24919', )(Res92994)
Cro65993 = keras.layers.Cropping3D(cropping=((0, 0), (0, 0), (0, 0)), name = 'Cro65993', )(Res24919)
Res88121 = keras.layers.Reshape((2, 1, 1), name = 'Res88121', )(Cro65993)
Zer30457 = keras.layers.ZeroPadding2D(padding=((0, 0), (2, 0)), name = 'Zer30457', )(Res88121)
Con92238 = keras.layers.Concatenate(axis=3, name = 'Con92238', )([Zer30457,in0Con92238])
Up_69395 = keras.layers.UpSampling2D(size=(1, 1), name = 'Up_69395', )(in0Up_69395)
Max17093 = keras.layers.Maximum(name = 'Max17093', )([Con92238,Up_69395])
Zer33248 = keras.layers.ZeroPadding2D(padding=((0, 0), (2, 0)), name = 'Zer33248', )(Max17093)
Cro93384 = keras.layers.Cropping1D(cropping=((0, 0)), name = 'Cro93384', )(in0Cro93384)
Res5922 = keras.layers.Reshape((1, 2, 1), name = 'Res5922', )(Cro93384)
PRe29444 = keras.layers.PReLU(name = 'PRe29444', )(Res5922)
Up_31452 = keras.layers.UpSampling2D(size=(1, 2), name = 'Up_31452', )(PRe29444)
Zer12801 = keras.layers.ZeroPadding2D(padding=((1, 0), (1, 0)), name = 'Zer12801', )(Up_31452)
Con68652 = keras.layers.Concatenate(axis=3, name = 'Con68652', )([Zer12801,in0Con68652])
Add44771 = keras.layers.Add(name = 'Add44771', )([Zer33248,Con68652])
model = tf.keras.models.Model(inputs=[in0Max37221,in1Max37221,in0Con92238,in0Up_69395,in0Cro93384,in0Con68652], outputs=Add44771)
w = model.get_layer('PRe29444').get_weights() 
w[0] = np.array([[[0.3991], [0.486]]])
model.get_layer('PRe29444').set_weights(w) 
in0Max37221 = tf.constant([[[0.9536], [0.564]]])
in1Max37221 = tf.constant([[[0.7417], [0.3939]]])
in0Con92238 = tf.constant([[[[0.0836, 0.8708, 0.3775], [0.0178, 0.361, 0.998], [0.4763, 0.7259, 0.3196]], [[0.297, 0.8873, 0.835], [0.5199, 0.4321, 0.2769], [0.8332, 0.9366, 0.3143]]]])
in0Up_69395 = tf.constant([[[[1.3556, 1.6352, 1.8889, 1.865], [1.8855, 1.5599, 1.88, 1.825], [1.5959, 1.4419, 1.1301, 1.8847]], [[1.6755, 1.5842, 1.084, 1.0999], [1.1427, 1.1262, 1.3713, 1.4358], [1.509, 1.1138, 1.477, 1.317]]]])
in0Cro93384 = tf.constant([[[1.3278, 1.5024]]])
in0Con68652 = tf.constant([[[[0.3052, 0.5214, 0.3484], [0.1539, 0.1079, 0.8586], [0.5212, 0.8725, 0.8852], [0.3944, 0.5749, 0.469], [0.6102, 0.4116, 0.0564]], [[0.478, 0.6176, 0.9962], [0.1367, 0.6646, 0.5323], [0.423, 0.7854, 0.9006], [0.3111, 0.3268, 0.6232], [0.2967, 0.9153, 0.4591]]]])
print (np.array2string(model.predict([in0Max37221,in1Max37221,in0Con92238,in0Up_69395,in0Cro93384,in0Con68652],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Add44771.png')

LMax37221 = maximum_layer([[[[0.9536], [0.564]]], [[[0.7417], [0.3939]]]], Max37221), 
LRes92994 = reshape_layer(Max37221, [2, 1, 1], Res92994), 
LRes24919 = reshape_layer(Res92994, [2, 1, 1, 1], Res24919), 
LCro65993 = cropping3D_layer(Res24919, 0, 0, 0, 0, 0, 0, Cro65993), 
LRes88121 = reshape_layer(Cro65993, [2, 1, 1], Res88121), 
LZer30457 = zero_padding2D_layer(Res88121, 0, 0, 2, 0, Zer30457), 
LCon92238 = concatenate_layer([Zer30457,[[[[0.0836, 0.8708, 0.3775], [0.0178, 0.361, 0.998], [0.4763, 0.7259, 0.3196]], [[0.297, 0.8873, 0.835], [0.5199, 0.4321, 0.2769], [0.8332, 0.9366, 0.3143]]]]], 3, Con92238), 
LUp_69395 = up_sampling2D_layer([[[[1.3556, 1.6352, 1.8889, 1.865], [1.8855, 1.5599, 1.88, 1.825], [1.5959, 1.4419, 1.1301, 1.8847]], [[1.6755, 1.5842, 1.084, 1.0999], [1.1427, 1.1262, 1.3713, 1.4358], [1.509, 1.1138, 1.477, 1.317]]]], 1, 1, Up_69395), 
LMax17093 = maximum_layer([Con92238,Up_69395], Max17093), 
LZer33248 = zero_padding2D_layer(Max17093, 0, 0, 2, 0, Zer33248), 
LCro93384 = cropping1D_layer([[[1.3278, 1.5024]]], 0, 0, Cro93384), 
LRes5922 = reshape_layer(Cro93384, [1, 2, 1], Res5922), 
LPRe29444 = prelu_layer(Res5922, [[[0.3991], [0.486]]], PRe29444), 
LUp_31452 = up_sampling2D_layer(PRe29444, 1, 2, Up_31452), 
LZer12801 = zero_padding2D_layer(Up_31452, 1, 0, 1, 0, Zer12801), 
LCon68652 = concatenate_layer([Zer12801,[[[[0.3052, 0.5214, 0.3484], [0.1539, 0.1079, 0.8586], [0.5212, 0.8725, 0.8852], [0.3944, 0.5749, 0.469], [0.6102, 0.4116, 0.0564]], [[0.478, 0.6176, 0.9962], [0.1367, 0.6646, 0.5323], [0.423, 0.7854, 0.9006], [0.3111, 0.3268, 0.6232], [0.2967, 0.9153, 0.4591]]]]], 3, Con68652), 
LAdd44771 = add_layer([Zer33248,Con68652], Add44771), 
exec_layers([LMax37221,LRes92994,LRes24919,LCro65993,LRes88121,LZer30457,LCon92238,LUp_69395,LMax17093,LZer33248,LCro93384,LRes5922,LPRe29444,LUp_31452,LZer12801,LCon68652,LAdd44771],["Max37221","Res92994","Res24919","Cro65993","Res88121","Zer30457","Con92238","Up_69395","Max17093","Zer33248","Cro93384","Res5922","PRe29444","Up_31452","Zer12801","Con68652","Add44771"],Add44771,"Add44771")

Actual (Unparsed): [[[[0.0000000, 0.3052000, 0.5214000, 0.3484000], [0.0000000, 0.1539000, 0.1079000, 0.8586000], [1.3556000, 2.1564000, 2.7614000, 2.7502000], [1.8855000, 1.9543000, 2.4549000, 2.2940001], [1.5959001, 2.0521000, 1.5417000, 1.9410999]], [[0.0000000, 0.4780000, 0.6176000, 0.9962000], [1.3278000, 0.1367000, 0.6646000, 0.5323000], [3.0033001, 2.0072000, 1.8694000, 2.0005000], [2.6451000, 1.4373000, 1.6981000, 2.0590000], [3.0114000, 1.4105000, 2.3923000, 1.7761000]]]]

Expected (Unparsed): [[[[0,0.3052,0.5214,0.3484],[0,0.1539,0.1079,0.8586],[1.3556,2.1564,2.7614,2.7502],[1.8855,1.9543,2.4549,2.294],[1.5959,2.0521,1.5417,1.9411]],[[0,0.478,0.6176,0.9962],[1.3278,0.1367,0.6646,0.5323],[3.0033000000000003,2.0072,1.8694000000000002,2.0005],[2.6451000000000002,1.4373,1.6981,2.059],[3.0114,1.4104999999999999,2.3923,1.7761]]]]

Actual:   [[[[0, 0.3052, 0.5214, 0.3484], [0, 0.1539, 0.1079, 0.8586], [1.3556, 2.1564, 2.7614, 2.7502], [1.8855, 1.9543, 2.4549, 2.2941], [1.596, 2.0521, 1.5417, 1.9411]], [[0, 0.478, 0.6176, 0.9962], [1.3278, 0.1367, 0.6646, 0.5323], [3.0034, 2.0072, 1.8694, 2.0005], [2.6451, 1.4373, 1.6981, 2.059], [3.0114, 1.4105, 2.3923, 1.7761]]]]

Expected: [[[[0, 0.3052, 0.5214, 0.3484], [0, 0.1539, 0.1079, 0.8586], [1.3556, 2.1564, 2.7614, 2.7502], [1.8855, 1.9543, 2.4549, 2.294], [1.5959, 2.0521, 1.5417, 1.9411]], [[0, 0.478, 0.6176, 0.9962], [1.3278, 0.1367, 0.6646, 0.5323], [3.0034, 2.0072, 1.8695, 2.0005], [2.6452, 1.4373, 1.6981, 2.059], [3.0114, 1.4105, 2.3923, 1.7761]]]]