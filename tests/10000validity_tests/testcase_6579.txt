import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Mul86059 = tf.keras.layers.Input(shape=([1, 1]))
in1Mul86059 = tf.keras.layers.Input(shape=([1, 1]))

Mul86059 = keras.layers.Multiply(name = 'Mul86059', )([in0Mul86059,in1Mul86059])
Res65311 = keras.layers.Reshape((1, 1, 1), name = 'Res65311', )(Mul86059)
Zer70354 = keras.layers.ZeroPadding2D(padding=((1, 1), (1, 1)), name = 'Zer70354', )(Res65311)
model = tf.keras.models.Model(inputs=[in0Mul86059,in1Mul86059], outputs=Zer70354)
in0Mul86059 = tf.constant([[[0.0938]]])
in1Mul86059 = tf.constant([[[0.8104]]])
print (np.array2string(model.predict([in0Mul86059,in1Mul86059],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Zer70354.png')

LMul86059 = multiply_layer([[[[0.0938]]], [[[0.8104]]]], Mul86059), 
LRes65311 = reshape_layer(Mul86059, [1, 1, 1], Res65311), 
LZer70354 = zero_padding2D_layer(Res65311, 1, 1, 1, 1, Zer70354), 
exec_layers([LMul86059,LRes65311,LZer70354],["Mul86059","Res65311","Zer70354"],Zer70354,"Zer70354")

Actual (Unparsed): [[[[0.0000000], [0.0000000], [0.0000000]], [[0.0000000], [0.0760155], [0.0000000]], [[0.0000000], [0.0000000], [0.0000000]]]]

Expected (Unparsed): [[[[0],[0],[0]],[[0],[0.07601552],[0]],[[0],[0],[0]]]]

Actual:   [[[[0], [0], [0]], [[0], [0.0761], [0]], [[0], [0], [0]]]]

Expected: [[[[0], [0], [0]], [[0], [0.0761], [0]], [[0], [0], [0]]]]