import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Zer97998 = tf.keras.layers.Input(shape=([2, 1, 3, 3]))
in0Mul44470 = tf.keras.layers.Input(shape=([1, 1, 2, 1]))
in1Mul44470 = tf.keras.layers.Input(shape=([1, 1, 2, 1]))
in0Glo80070 = tf.keras.layers.Input(shape=([2, 1]))

Zer97998 = keras.layers.ZeroPadding3D(padding=((1, 1), (1, 1), (1, 1)), name = 'Zer97998', )(in0Zer97998)
ReL90890 = keras.layers.ReLU(max_value=3.4844937267157086, negative_slope=4.707992044577832, threshold=4.590056622961254, name = 'ReL90890', )(Zer97998)
Res22733 = keras.layers.Reshape((4, 3, 15), name = 'Res22733', )(ReL90890)
Max36448 = keras.layers.MaxPool2D(pool_size=(4, 2), strides=(1, 1), padding='valid', name = 'Max36448', )(Res22733)
Res30668 = keras.layers.Reshape((1, 2, 15, 1), name = 'Res30668', )(Max36448)
Mul44470 = keras.layers.Multiply(name = 'Mul44470', )([in0Mul44470,in1Mul44470])
Zer57483 = keras.layers.ZeroPadding3D(padding=((0, 0), (1, 0), (13, 0)), name = 'Zer57483', )(Mul44470)
Mul8296 = keras.layers.Multiply(name = 'Mul8296', )([Res30668,Zer57483])
Glo80070 = keras.layers.GlobalMaxPool1D(name = 'Glo80070', )(in0Glo80070)
Res1004 = keras.layers.Reshape((1, 1), name = 'Res1004', )(Glo80070)
Res91981 = keras.layers.Reshape((1, 1, 1), name = 'Res91981', )(Res1004)
Res56754 = keras.layers.Reshape((1, 1, 1, 1), name = 'Res56754', )(Res91981)
Cro30454 = keras.layers.Cropping3D(cropping=((0, 0), (0, 0), (0, 0)), name = 'Cro30454', )(Res56754)
Zer61699 = keras.layers.ZeroPadding3D(padding=((0, 0), (1, 0), (14, 0)), name = 'Zer61699', )(Cro30454)
Ave14660 = keras.layers.Average(name = 'Ave14660', )([Mul8296,Zer61699])
model = tf.keras.models.Model(inputs=[in0Zer97998,in0Mul44470,in1Mul44470,in0Glo80070], outputs=Ave14660)
in0Zer97998 = tf.constant([[[[[1.6049, 1.3377, 1.9501], [1.792, 1.5814, 1.7352], [1.3078, 1.1549, 1.3157]]], [[[1.7188, 1.1002, 1.1266], [1.7434, 1.0518, 1.3101], [1.2402, 1.5828, 1.2168]]]]])
in0Mul44470 = tf.constant([[[[[0.682], [0.8821]]]]])
in1Mul44470 = tf.constant([[[[[0.4578], [0.5924]]]]])
in0Glo80070 = tf.constant([[[1.9059], [1.1912]]])
print (np.array2string(model.predict([in0Zer97998,in0Mul44470,in1Mul44470,in0Glo80070],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Ave14660.png')

LZer97998 = zero_padding3D_layer([[[[[1.6049, 1.3377, 1.9501], [1.792, 1.5814, 1.7352], [1.3078, 1.1549, 1.3157]]], [[[1.7188, 1.1002, 1.1266], [1.7434, 1.0518, 1.3101], [1.2402, 1.5828, 1.2168]]]]], 1, 1, 1, 1, 1, 1, Zer97998), 
LReL90890 = relu_layer(Zer97998, 3.4844937267157086, 4.707992044577832, 4.590056622961254, ReL90890), 
LRes22733 = reshape_layer(ReL90890, [4, 3, 15], Res22733), 
LMax36448 = max_pool2D_layer(Res22733, 4, 2, 1, 1, false, Max36448), 
LRes30668 = reshape_layer(Max36448, [1, 2, 15, 1], Res30668), 
LMul44470 = multiply_layer([[[[[[0.682], [0.8821]]]]], [[[[[0.4578], [0.5924]]]]]], Mul44470), 
LZer57483 = zero_padding3D_layer(Mul44470, 0, 0, 1, 0, 13, 0, Zer57483), 
LMul8296 = multiply_layer([Res30668,Zer57483], Mul8296), 
LGlo80070 = global_max_pool1D_layer([[[1.9059], [1.1912]]], Glo80070), 
LRes1004 = reshape_layer(Glo80070, [1, 1], Res1004), 
LRes91981 = reshape_layer(Res1004, [1, 1, 1], Res91981), 
LRes56754 = reshape_layer(Res91981, [1, 1, 1, 1], Res56754), 
LCro30454 = cropping3D_layer(Res56754, 0, 0, 0, 0, 0, 0, Cro30454), 
LZer61699 = zero_padding3D_layer(Cro30454, 0, 0, 1, 0, 14, 0, Zer61699), 
LAve14660 = average_layer([Mul8296,Zer61699], Ave14660), 
exec_layers([LZer97998,LReL90890,LRes22733,LMax36448,LRes30668,LMul44470,LZer57483,LMul8296,LGlo80070,LRes1004,LRes91981,LRes56754,LCro30454,LZer61699,LAve14660],["Zer97998","ReL90890","Res22733","Max36448","Res30668","Mul44470","Zer57483","Mul8296","Glo80070","Res1004","Res91981","Res56754","Cro30454","Zer61699","Ave14660"],Ave14660,"Ave14660")

Actual (Unparsed): [[[[[0.0000000], [0.0000000], [0.0000000], [0.0000000], [0.0000000], [0.0000000], [0.0000000], [0.0000000], [0.0000000], [0.0000000], [0.0000000], [0.0000000], [0.0000000], [0.0000000], [0.0000000]], [[0.0000000], [0.0000000], [0.0000000], [0.0000000], [0.0000000], [0.0000000], [0.0000000], [0.0000000], [0.0000000], [0.0000000], [0.0000000], [0.0000000], [0.0000000], [-3.3735249], [-4.6932550]]]]]

Expected (Unparsed): [[[[[0.0],[0.0],[0.0],[0.0],[0.0],[0.0],[0.0],[0.0],[0.0],[0.0],[0.0],[0.0],[0.0],[0.0],[0.0]],[[0.0],[0.0],[0.0],[0.0],[0.0],[0.0],[0.0],[0.0],[0.0],[0.0],[0.0],[0.0],[0.0],[-3.37352498266703],[-4.69325496529863]]]]]

Actual:   [[[[[0], [0], [0], [0], [0], [0], [0], [0], [0], [0], [0], [0], [0], [0], [0]], [[0], [0], [0], [0], [0], [0], [0], [0], [0], [0], [0], [0], [0], [-3.3735], [-4.6932]]]]]

Expected: [[[[[0], [0], [0], [0], [0], [0], [0], [0], [0], [0], [0], [0], [0], [0], [0]], [[0], [0], [0], [0], [0], [0], [0], [0], [0], [0], [0], [0], [0], [-3.3735], [-4.6932]]]]]