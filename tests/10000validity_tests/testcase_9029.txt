import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Mul23459 = tf.keras.layers.Input(shape=([2, 1]))
in1Mul23459 = tf.keras.layers.Input(shape=([2, 1]))
in0Con63501 = tf.keras.layers.Input(shape=([3, 1, 3]))
in0Sub38019 = tf.keras.layers.Input(shape=([3, 3, 2, 2]))
in1Sub38019 = tf.keras.layers.Input(shape=([3, 3, 2, 2]))
in0Min64221 = tf.keras.layers.Input(shape=([1, 2]))
in1Min64221 = tf.keras.layers.Input(shape=([1, 2]))
in0Con36797 = tf.keras.layers.Input(shape=([3, 2]))

Mul23459 = keras.layers.Multiply(name = 'Mul23459', )([in0Mul23459,in1Mul23459])
Res23563 = keras.layers.Reshape((2, 1, 1), name = 'Res23563', )(Mul23459)
Zer83883 = keras.layers.ZeroPadding2D(padding=((1, 0), (0, 0)), name = 'Zer83883', )(Res23563)
Con63501 = keras.layers.Concatenate(axis=3, name = 'Con63501', )([Zer83883,in0Con63501])
Sub38019 = keras.layers.Subtract(name = 'Sub38019', )([in0Sub38019,in1Sub38019])
Res54113 = keras.layers.Reshape((3, 3, 4), name = 'Res54113', )(Sub38019)
Ave35743 = keras.layers.AveragePooling2D(pool_size=(1, 2), name = 'Ave35743', )(Res54113)
Max69192 = keras.layers.Maximum(name = 'Max69192', )([Con63501,Ave35743])
Res29473 = keras.layers.Reshape((3, 4), name = 'Res29473', )(Max69192)
Min64221 = keras.layers.Minimum(name = 'Min64221', )([in0Min64221,in1Min64221])
Zer88061 = keras.layers.ZeroPadding1D(padding=((2, 0)), name = 'Zer88061', )(Min64221)
Con36797 = keras.layers.Concatenate(axis=2, name = 'Con36797', )([Zer88061,in0Con36797])
Mul26510 = keras.layers.Multiply(name = 'Mul26510', )([Res29473,Con36797])
model = tf.keras.models.Model(inputs=[in0Mul23459,in1Mul23459,in0Con63501,in0Sub38019,in1Sub38019,in0Min64221,in1Min64221,in0Con36797], outputs=Mul26510)
in0Mul23459 = tf.constant([[[0.5345], [0.8073]]])
in1Mul23459 = tf.constant([[[0.8649], [0.9872]]])
in0Con63501 = tf.constant([[[[0.1815, 0.2252, 0.0277]], [[0.5285, 0.8205, 0.8005]], [[0.4302, 0.5054, 0.1816]]]])
in0Sub38019 = tf.constant([[[[[0.8728, 0.8679], [0.2884, 0.51]], [[0.7668, 0.5664], [0.5061, 0.9758]], [[0.5176, 0.8259], [0.1843, 0.8509]]], [[[0.3566, 0.2461], [0.1809, 0.7285]], [[0.9324, 0.3119], [0.6414, 0.5304]], [[0.3446, 0.6204], [0.4527, 0.9215]]], [[[0.3596, 0.809], [0.9114, 0.3031]], [[0.3357, 0.9869], [0.3727, 0.5054]], [[0.5578, 0.1204], [0.3365, 0.0941]]]]])
in1Sub38019 = tf.constant([[[[[0.1353, 0.005], [0.8912, 0.0232]], [[0.3533, 0.1679], [0.6931, 0.2211]], [[0.3822, 0.2859], [0.6883, 0.5808]]], [[[0.5506, 0.4838], [0.5961, 0.7386]], [[0.9633, 0.1763], [0.7718, 0.9733]], [[0.1093, 0.9605], [0.4387, 0.5348]]], [[[0.2434, 0.4285], [0.4387, 0.7205]], [[0.7496, 0.6746], [0.5884, 0.0573]], [[0.3983, 0.696], [0.4486, 0.0169]]]]])
in0Min64221 = tf.constant([[[0.395, 0.8532]]])
in1Min64221 = tf.constant([[[0.8127, 0.7996]]])
in0Con36797 = tf.constant([[[0.7489, 0.9766], [0.9616, 0.5416], [0.2962, 0.6589]]])
print (np.array2string(model.predict([in0Mul23459,in1Mul23459,in0Con63501,in0Sub38019,in1Sub38019,in0Min64221,in1Min64221,in0Con36797],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Mul26510.png')

LMul23459 = multiply_layer([[[[0.5345], [0.8073]]], [[[0.8649], [0.9872]]]], Mul23459), 
LRes23563 = reshape_layer(Mul23459, [2, 1, 1], Res23563), 
LZer83883 = zero_padding2D_layer(Res23563, 1, 0, 0, 0, Zer83883), 
LCon63501 = concatenate_layer([Zer83883,[[[[0.1815, 0.2252, 0.0277]], [[0.5285, 0.8205, 0.8005]], [[0.4302, 0.5054, 0.1816]]]]], 3, Con63501), 
LSub38019 = subtract_layer([[[[[0.8728, 0.8679], [0.2884, 0.51]], [[0.7668, 0.5664], [0.5061, 0.9758]], [[0.5176, 0.8259], [0.1843, 0.8509]]], [[[0.3566, 0.2461], [0.1809, 0.7285]], [[0.9324, 0.3119], [0.6414, 0.5304]], [[0.3446, 0.6204], [0.4527, 0.9215]]], [[[0.3596, 0.809], [0.9114, 0.3031]], [[0.3357, 0.9869], [0.3727, 0.5054]], [[0.5578, 0.1204], [0.3365, 0.0941]]]]], [[[[[0.1353, 0.005], [0.8912, 0.0232]], [[0.3533, 0.1679], [0.6931, 0.2211]], [[0.3822, 0.2859], [0.6883, 0.5808]]], [[[0.5506, 0.4838], [0.5961, 0.7386]], [[0.9633, 0.1763], [0.7718, 0.9733]], [[0.1093, 0.9605], [0.4387, 0.5348]]], [[[0.2434, 0.4285], [0.4387, 0.7205]], [[0.7496, 0.6746], [0.5884, 0.0573]], [[0.3983, 0.696], [0.4486, 0.0169]]]]], Sub38019), 
LRes54113 = reshape_layer(Sub38019, [3, 3, 4], Res54113), 
LAve35743 = average_pooling2D_layer(Res54113, 1, 2, Ave35743), 
LMax69192 = maximum_layer([Con63501,Ave35743], Max69192), 
LRes29473 = reshape_layer(Max69192, [3, 4], Res29473), 
LMin64221 = minimum_layer([[[[0.395, 0.8532]]], [[[0.8127, 0.7996]]]], Min64221), 
LZer88061 = zero_padding1D_layer(Min64221, 2, 0, Zer88061), 
LCon36797 = concatenate_layer([Zer88061,[[[0.7489, 0.9766], [0.9616, 0.5416], [0.2962, 0.6589]]]], 2, Con36797), 
LMul26510 = multiply_layer([Res29473,Con36797], Mul26510), 
exec_layers([LMul23459,LRes23563,LZer83883,LCon63501,LSub38019,LRes54113,LAve35743,LMax69192,LRes29473,LMin64221,LZer88061,LCon36797,LMul26510],["Mul23459","Res23563","Zer83883","Con63501","Sub38019","Res54113","Ave35743","Max69192","Res29473","Min64221","Zer88061","Con36797","Mul26510"],Mul26510,"Mul26510")

Actual (Unparsed): [[[0.0000000, 0.0000000, 0.1686523, 0.6062244], [0.0000000, 0.0000000, 0.7889928, 0.4335508], [0.3148018, 0.3439879, 0.1496995, 0.1196562]]]

Expected (Unparsed): [[[0.0,0.0,0.16865228000000002,0.60622445],[0.0,0.0,0.7889928,0.43355079999999996],[0.3148017912,0.34398792,0.14969948,0.11965624000000001]]]

Actual:   [[[0, 0, 0.1687, 0.6063], [0, 0, 0.789, 0.4336], [0.3149, 0.344, 0.1497, 0.1197]]]

Expected: [[[0, 0, 0.1687, 0.6063], [0, 0, 0.789, 0.4336], [0.3149, 0.344, 0.1497, 0.1197]]]