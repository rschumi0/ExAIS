import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Min45849 = tf.keras.layers.Input(shape=([1, 1, 2, 2]))
in1Min45849 = tf.keras.layers.Input(shape=([1, 1, 2, 2]))

Min45849 = keras.layers.Minimum(name = 'Min45849', )([in0Min45849,in1Min45849])
Den27395 = keras.layers.Dense(2,name = 'Den27395', )(Min45849)
Den56752 = keras.layers.Dense(2,name = 'Den56752', )(Den27395)
model = tf.keras.models.Model(inputs=[in0Min45849,in1Min45849], outputs=Den56752)
w = model.get_layer('Den27395').get_weights() 
w[0] = np.array([[0.3339, 0.7337], [0.5285, 0.234]])
w[1] = np.array([0.239, 0.3501])
model.get_layer('Den27395').set_weights(w) 
w = model.get_layer('Den56752').get_weights() 
w[0] = np.array([[0.8736, 0.9632], [0.9262, 0.4281]])
w[1] = np.array([0.3155, 0.0997])
model.get_layer('Den56752').set_weights(w) 
in0Min45849 = tf.constant([[[[[0.4404, 0.6903], [0.3052, 0.225]]]]])
in1Min45849 = tf.constant([[[[[0.4222, 0.7557], [0.7709, 0.6334]]]]])
print (np.array2string(model.predict([in0Min45849,in1Min45849],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Den56752.png')

LMin45849 = minimum_layer([[[[[[0.4404, 0.6903], [0.3052, 0.225]]]]], [[[[[0.4222, 0.7557], [0.7709, 0.6334]]]]]], Min45849), 
LDen27395 = dense_layer(Min45849, [[0.3339, 0.7337], [0.5285, 0.234]],[0.239, 0.3501], Den27395), 
LDen56752 = dense_layer(Den27395, [[0.8736, 0.9632], [0.9262, 0.4281]],[0.3155, 0.0997], Den56752), 
exec_layers([LMin45849,LDen27395,LDen56752],["Min45849","Den27395","Den56752"],Den56752,"Den56752")

Actual (Unparsed): [[[[[1.7269330, 1.1687283], [1.2976243, 0.8108771]]]]]

Expected (Unparsed): [[[[[1.726933041676,1.16872826177],[1.2976242934960003,0.8108771191399999]]]]]

Actual:   [[[[[1.727, 1.1688], [1.2977, 0.8109]]]]]

Expected: [[[[[1.727, 1.1688], [1.2977, 0.8109]]]]]