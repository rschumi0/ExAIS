import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Mul51308 = tf.keras.layers.Input(shape=([2, 1]))
in1Mul51308 = tf.keras.layers.Input(shape=([2, 1]))
in0Con75606 = tf.keras.layers.Input(shape=([6]))
in0Min48600 = tf.keras.layers.Input(shape=([2, 1, 2]))
in1Min48600 = tf.keras.layers.Input(shape=([2, 1, 2]))
in0Ave27308 = tf.keras.layers.Input(shape=([2, 2, 1]))
in1Ave27308 = tf.keras.layers.Input(shape=([2, 2, 1]))
in0Con16437 = tf.keras.layers.Input(shape=([2, 2, 1]))

Mul51308 = keras.layers.Multiply(name = 'Mul51308', )([in0Mul51308,in1Mul51308])
Fla65093 = keras.layers.Flatten(name = 'Fla65093', )(Mul51308)
Con75606 = keras.layers.Concatenate(axis=1, name = 'Con75606', )([Fla65093,in0Con75606])
Min48600 = keras.layers.Minimum(name = 'Min48600', )([in0Min48600,in1Min48600])
Zer50627 = keras.layers.ZeroPadding2D(padding=((0, 0), (1, 0)), name = 'Zer50627', )(Min48600)
Ave27308 = keras.layers.Average(name = 'Ave27308', )([in0Ave27308,in1Ave27308])
Con16437 = keras.layers.Concatenate(axis=3, name = 'Con16437', )([Ave27308,in0Con16437])
Max84698 = keras.layers.Maximum(name = 'Max84698', )([Zer50627,Con16437])
Fla78354 = keras.layers.Flatten(name = 'Fla78354', )(Max84698)
Add52613 = keras.layers.Add(name = 'Add52613', )([Con75606,Fla78354])
model = tf.keras.models.Model(inputs=[in0Mul51308,in1Mul51308,in0Con75606,in0Min48600,in1Min48600,in0Ave27308,in1Ave27308,in0Con16437], outputs=Add52613)
in0Mul51308 = tf.constant([[[0.7449], [0.8423]]])
in1Mul51308 = tf.constant([[[0.8804], [0.2655]]])
in0Con75606 = tf.constant([[0.5686, 0.8027, 0.449, 0.591, 0.5502, 0.1759]])
in0Min48600 = tf.constant([[[[0.5128, 0.9744]], [[0.7015, 0.7453]]]])
in1Min48600 = tf.constant([[[[0.6026, 0.0552]], [[0.2823, 0.6366]]]])
in0Ave27308 = tf.constant([[[[0.0317], [0.1264]], [[0.0553], [0.3275]]]])
in1Ave27308 = tf.constant([[[[0.6268], [0.625]], [[0.6658], [0.3439]]]])
in0Con16437 = tf.constant([[[[0.7839], [0.6835]], [[0.848], [0.8922]]]])
print (np.array2string(model.predict([in0Mul51308,in1Mul51308,in0Con75606,in0Min48600,in1Min48600,in0Ave27308,in1Ave27308,in0Con16437],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Add52613.png')

LMul51308 = multiply_layer([[[[0.7449], [0.8423]]], [[[0.8804], [0.2655]]]], Mul51308), 
LFla65093 = flatten_layer(Mul51308, Fla65093), 
LCon75606 = concatenate_layer([Fla65093,[[0.5686, 0.8027, 0.449, 0.591, 0.5502, 0.1759]]], 1, Con75606), 
LMin48600 = minimum_layer([[[[[0.5128, 0.9744]], [[0.7015, 0.7453]]]], [[[[0.6026, 0.0552]], [[0.2823, 0.6366]]]]], Min48600), 
LZer50627 = zero_padding2D_layer(Min48600, 0, 0, 1, 0, Zer50627), 
LAve27308 = average_layer([[[[[0.0317], [0.1264]], [[0.0553], [0.3275]]]], [[[[0.6268], [0.625]], [[0.6658], [0.3439]]]]], Ave27308), 
LCon16437 = concatenate_layer([Ave27308,[[[[0.7839], [0.6835]], [[0.848], [0.8922]]]]], 3, Con16437), 
LMax84698 = maximum_layer([Zer50627,Con16437], Max84698), 
LFla78354 = flatten_layer(Max84698, Fla78354), 
LAdd52613 = add_layer([Con75606,Fla78354], Add52613), 
exec_layers([LMul51308,LFla65093,LCon75606,LMin48600,LZer50627,LAve27308,LCon16437,LMax84698,LFla78354,LAdd52613],["Mul51308","Fla65093","Con75606","Min48600","Zer50627","Ave27308","Con16437","Max84698","Fla78354","Add52613"],Add52613,"Add52613")

Actual (Unparsed): [[0.9850600, 1.0075307, 1.0814000, 1.4862000, 0.8095500, 1.4390000, 0.8859000, 1.0681000]]

Expected (Unparsed): [[0.9850599600000001,1.00753065,1.0814,1.4862,0.80955,1.439,0.8859,1.0681]]

Actual:   [[0.9851, 1.0076, 1.0814, 1.4862, 0.8096, 1.439, 0.8859, 1.0681]]

Expected: [[0.9851, 1.0076, 1.0814, 1.4862, 0.8096, 1.439, 0.8859, 1.0681]]