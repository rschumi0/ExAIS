import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Up_12406 = tf.keras.layers.Input(shape=([2, 4]))
in0Con92002 = tf.keras.layers.Input(shape=([8, 8, 1]))
in0Add46730 = tf.keras.layers.Input(shape=([1, 2, 1]))
in1Add46730 = tf.keras.layers.Input(shape=([1, 2, 1]))
in0Con57767 = tf.keras.layers.Input(shape=([8, 8, 1]))
in0Up_8562 = tf.keras.layers.Input(shape=([4, 4, 2]))

Up_12406 = keras.layers.UpSampling1D(size=(2), name = 'Up_12406', )(in0Up_12406)
Res69275 = keras.layers.Reshape((4, 4, 1), name = 'Res69275', )(Up_12406)
Zer13667 = keras.layers.ZeroPadding2D(padding=((4, 0), (4, 0)), name = 'Zer13667', )(Res69275)
Con92002 = keras.layers.Concatenate(axis=3, name = 'Con92002', )([Zer13667,in0Con92002])
Add46730 = keras.layers.Add(name = 'Add46730', )([in0Add46730,in1Add46730])
Zer54076 = keras.layers.ZeroPadding2D(padding=((7, 0), (6, 0)), name = 'Zer54076', )(Add46730)
Con57767 = keras.layers.Concatenate(axis=3, name = 'Con57767', )([Zer54076,in0Con57767])
Up_8562 = keras.layers.UpSampling2D(size=(2, 2), name = 'Up_8562', )(in0Up_8562)
Add35607 = keras.layers.Add(name = 'Add35607', )([Con57767,Up_8562])
Sub32498 = keras.layers.Subtract(name = 'Sub32498', )([Con92002,Add35607])
Up_79135 = keras.layers.UpSampling2D(size=(2, 1), name = 'Up_79135', )(Sub32498)
Res84939 = keras.layers.Reshape((16, 8, 2, 1), name = 'Res84939', )(Up_79135)
Con55915 = keras.layers.Conv3D(2, (13, 5, 1),strides=(6, 8, 1), padding='valid', dilation_rate=(1, 1, 1), name = 'Con55915', )(Res84939)
model = tf.keras.models.Model(inputs=[in0Up_12406,in0Con92002,in0Add46730,in1Add46730,in0Con57767,in0Up_8562], outputs=Con55915)
w = model.get_layer('Con55915').get_weights() 
w[0] = np.array([[[[[0.9359, 0.6784]]], [[[0.6176, 0.5128]]], [[[0.7803, 0.5521]]], [[[0.4346, 0.33]]], [[[0.3571, 0.1308]]]], [[[[0.7283, 0.1554]]], [[[0.951, 0.6685]]], [[[0.6471, 0.2402]]], [[[0.322, 0.7933]]], [[[0.4231, 0.2709]]]], [[[[0.9243, 0.2406]]], [[[0.0826, 0.6999]]], [[[0.3392, 0.1629]]], [[[0.1904, 0.8734]]], [[[0.2331, 0.6554]]]], [[[[0.9733, 0.5898]]], [[[0.6673, 0.8829]]], [[[0.703, 0.1069]]], [[[0.3863, 0.4647]]], [[[0.5308, 0.0287]]]], [[[[0.7897, 0.5829]]], [[[0.0612, 0.9511]]], [[[0.6522, 0.6132]]], [[[0.8282, 0.2218]]], [[[0.2987, 0.9487]]]], [[[[0.4945, 0.6804]]], [[[0.8647, 0.0844]]], [[[0.033, 0.7819]]], [[[0.4753, 0.9615]]], [[[0.3689, 0.0808]]]], [[[[0.6613, 0.032]]], [[[0.963, 0.6545]]], [[[0.0999, 0.4996]]], [[[0.5972, 0.6774]]], [[[0.8117, 0.7122]]]], [[[[0.1884, 0.0247]]], [[[0.2779, 0.7438]]], [[[0.8008, 0.4779]]], [[[0.55, 0.784]]], [[[0.1525, 0.835]]]], [[[[0.317, 0.0765]]], [[[0.8202, 0.9845]]], [[[0.0678, 0.7937]]], [[[0.0335, 0.793]]], [[[0.9398, 0.4179]]]], [[[[0.4212, 0.4792]]], [[[0.5806, 0.9097]]], [[[0.3205, 0.9971]]], [[[0.3678, 0.1887]]], [[[0.296, 0.8361]]]], [[[[0.6257, 0.2244]]], [[[0.3256, 0.5613]]], [[[0.0621, 0.3428]]], [[[0.7056, 0.3638]]], [[[0.5038, 0.1894]]]], [[[[0.1061, 0.8651]]], [[[0.1549, 0.1591]]], [[[0.3609, 0.4339]]], [[[0.0223, 0.0006]]], [[[0.5176, 0.3092]]]], [[[[0.858, 0.7365]]], [[[0.392, 0.8964]]], [[[0.9528, 0.9995]]], [[[0.3724, 0.7063]]], [[[0.3831, 0.3804]]]]])
w[1] = np.array([0, 0])
model.get_layer('Con55915').set_weights(w) 
in0Up_12406 = tf.constant([[[1.2995, 1.7876, 1.9475, 1.1432], [1.7506, 1.0339, 1.1803, 1.1143]]])
in0Con92002 = tf.constant([[[[0.4971], [0.7125], [0.2519], [0.4423], [0.9972], [0.971], [0.1966], [0.4052]], [[0.7878], [0.1182], [0.8105], [0.5322], [0.6421], [0.6937], [0.8876], [0.0987]], [[0.7241], [0.0806], [0.2389], [0.8048], [0.1583], [0.857], [0.1487], [0.694]], [[0.381], [0.0825], [0.2448], [0.6303], [0.4338], [0.7423], [0.2209], [0.7761]], [[0.7007], [0.859], [0.3901], [0.1237], [0.5868], [0.9729], [0.7509], [0.1565]], [[0.2898], [0.7903], [0.1009], [0.1418], [0.1264], [0.8074], [0.7493], [0.3899]], [[0.8389], [0.6228], [0.5459], [0.0529], [0.9326], [0.475], [0.2697], [0.6839]], [[0.3707], [0.2597], [0.9035], [0.828], [0.8874], [0.9164], [0.9559], [0.3731]]]])
in0Add46730 = tf.constant([[[[0.3616], [0.9742]]]])
in1Add46730 = tf.constant([[[[0.7285], [0.702]]]])
in0Con57767 = tf.constant([[[[0.4421], [0.4406], [0.8967], [0.2294], [0.9817], [0.9344], [0.3783], [0.2234]], [[0.9689], [0.0694], [0.0492], [0.6635], [0.5128], [0.3278], [0.946], [0.6841]], [[0.3021], [0.2455], [0.1933], [0.1792], [0.4542], [0.2383], [0.6973], [0.4709]], [[0.1024], [0.9497], [0.7779], [0.2727], [0.1043], [0.2792], [0.5493], [0.3183]], [[0.3404], [0.4618], [0.0247], [0.4428], [0.5583], [0.4435], [0.9857], [0.482]], [[0.6165], [0.3256], [0.6321], [0.0848], [0.2808], [0.8346], [0.9067], [0.4203]], [[0.4365], [0.6158], [0.1757], [0.8092], [0.692], [0.6462], [0.6395], [0.5037]], [[0.8713], [0.2138], [0.4438], [0.2026], [0.8192], [0.7231], [0.9708], [0.3952]]]])
in0Up_8562 = tf.constant([[[[1.0482, 1.6705], [1.7588, 1.8096], [1.3486, 1.8961], [1.3751, 1.4313]], [[1.4664, 1.7677], [1.5906, 1.7043], [1.0924, 1.5948], [1.5745, 1.5615]], [[1.0131, 1.0039], [1.4061, 1.7235], [1.4095, 1.5166], [1.4795, 1.528]], [[1.9202, 1.4045], [1.3851, 1.8837], [1.9993, 1.831], [1.5699, 1.4578]]]])
print (np.array2string(model.predict([in0Up_12406,in0Con92002,in0Add46730,in1Add46730,in0Con57767,in0Up_8562],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Con55915.png')

LUp_12406 = up_sampling1D_layer([[[1.2995, 1.7876, 1.9475, 1.1432], [1.7506, 1.0339, 1.1803, 1.1143]]], 2, Up_12406), 
LRes69275 = reshape_layer(Up_12406, [4, 4, 1], Res69275), 
LZer13667 = zero_padding2D_layer(Res69275, 4, 0, 4, 0, Zer13667), 
LCon92002 = concatenate_layer([Zer13667,[[[[0.4971], [0.7125], [0.2519], [0.4423], [0.9972], [0.971], [0.1966], [0.4052]], [[0.7878], [0.1182], [0.8105], [0.5322], [0.6421], [0.6937], [0.8876], [0.0987]], [[0.7241], [0.0806], [0.2389], [0.8048], [0.1583], [0.857], [0.1487], [0.694]], [[0.381], [0.0825], [0.2448], [0.6303], [0.4338], [0.7423], [0.2209], [0.7761]], [[0.7007], [0.859], [0.3901], [0.1237], [0.5868], [0.9729], [0.7509], [0.1565]], [[0.2898], [0.7903], [0.1009], [0.1418], [0.1264], [0.8074], [0.7493], [0.3899]], [[0.8389], [0.6228], [0.5459], [0.0529], [0.9326], [0.475], [0.2697], [0.6839]], [[0.3707], [0.2597], [0.9035], [0.828], [0.8874], [0.9164], [0.9559], [0.3731]]]]], 3, Con92002), 
LAdd46730 = add_layer([[[[[0.3616], [0.9742]]]], [[[[0.7285], [0.702]]]]], Add46730), 
LZer54076 = zero_padding2D_layer(Add46730, 7, 0, 6, 0, Zer54076), 
LCon57767 = concatenate_layer([Zer54076,[[[[0.4421], [0.4406], [0.8967], [0.2294], [0.9817], [0.9344], [0.3783], [0.2234]], [[0.9689], [0.0694], [0.0492], [0.6635], [0.5128], [0.3278], [0.946], [0.6841]], [[0.3021], [0.2455], [0.1933], [0.1792], [0.4542], [0.2383], [0.6973], [0.4709]], [[0.1024], [0.9497], [0.7779], [0.2727], [0.1043], [0.2792], [0.5493], [0.3183]], [[0.3404], [0.4618], [0.0247], [0.4428], [0.5583], [0.4435], [0.9857], [0.482]], [[0.6165], [0.3256], [0.6321], [0.0848], [0.2808], [0.8346], [0.9067], [0.4203]], [[0.4365], [0.6158], [0.1757], [0.8092], [0.692], [0.6462], [0.6395], [0.5037]], [[0.8713], [0.2138], [0.4438], [0.2026], [0.8192], [0.7231], [0.9708], [0.3952]]]]], 3, Con57767), 
LUp_8562 = up_sampling2D_layer([[[[1.0482, 1.6705], [1.7588, 1.8096], [1.3486, 1.8961], [1.3751, 1.4313]], [[1.4664, 1.7677], [1.5906, 1.7043], [1.0924, 1.5948], [1.5745, 1.5615]], [[1.0131, 1.0039], [1.4061, 1.7235], [1.4095, 1.5166], [1.4795, 1.528]], [[1.9202, 1.4045], [1.3851, 1.8837], [1.9993, 1.831], [1.5699, 1.4578]]]], 2, 2, Up_8562), 
LAdd35607 = add_layer([Con57767,Up_8562], Add35607), 
LSub32498 = subtract_layer(Con92002,Add35607, Sub32498), 
LUp_79135 = up_sampling2D_layer(Sub32498, 2, 1, Up_79135), 
LRes84939 = reshape_layer(Up_79135, [16, 8, 2, 1], Res84939), 
LCon55915 = conv3D_layer(Res84939, 13, 5, 1,[[[[[0.9359, 0.6784]]], [[[0.6176, 0.5128]]], [[[0.7803, 0.5521]]], [[[0.4346, 0.33]]], [[[0.3571, 0.1308]]]], [[[[0.7283, 0.1554]]], [[[0.951, 0.6685]]], [[[0.6471, 0.2402]]], [[[0.322, 0.7933]]], [[[0.4231, 0.2709]]]], [[[[0.9243, 0.2406]]], [[[0.0826, 0.6999]]], [[[0.3392, 0.1629]]], [[[0.1904, 0.8734]]], [[[0.2331, 0.6554]]]], [[[[0.9733, 0.5898]]], [[[0.6673, 0.8829]]], [[[0.703, 0.1069]]], [[[0.3863, 0.4647]]], [[[0.5308, 0.0287]]]], [[[[0.7897, 0.5829]]], [[[0.0612, 0.9511]]], [[[0.6522, 0.6132]]], [[[0.8282, 0.2218]]], [[[0.2987, 0.9487]]]], [[[[0.4945, 0.6804]]], [[[0.8647, 0.0844]]], [[[0.033, 0.7819]]], [[[0.4753, 0.9615]]], [[[0.3689, 0.0808]]]], [[[[0.6613, 0.032]]], [[[0.963, 0.6545]]], [[[0.0999, 0.4996]]], [[[0.5972, 0.6774]]], [[[0.8117, 0.7122]]]], [[[[0.1884, 0.0247]]], [[[0.2779, 0.7438]]], [[[0.8008, 0.4779]]], [[[0.55, 0.784]]], [[[0.1525, 0.835]]]], [[[[0.317, 0.0765]]], [[[0.8202, 0.9845]]], [[[0.0678, 0.7937]]], [[[0.0335, 0.793]]], [[[0.9398, 0.4179]]]], [[[[0.4212, 0.4792]]], [[[0.5806, 0.9097]]], [[[0.3205, 0.9971]]], [[[0.3678, 0.1887]]], [[[0.296, 0.8361]]]], [[[[0.6257, 0.2244]]], [[[0.3256, 0.5613]]], [[[0.0621, 0.3428]]], [[[0.7056, 0.3638]]], [[[0.5038, 0.1894]]]], [[[[0.1061, 0.8651]]], [[[0.1549, 0.1591]]], [[[0.3609, 0.4339]]], [[[0.0223, 0.0006]]], [[[0.5176, 0.3092]]]], [[[[0.858, 0.7365]]], [[[0.392, 0.8964]]], [[[0.9528, 0.9995]]], [[[0.3724, 0.7063]]], [[[0.3831, 0.3804]]]]],[0, 0], 6, 8, 1, false, 1, 1, 1, Con55915), 
exec_layers([LUp_12406,LRes69275,LZer13667,LCon92002,LAdd46730,LZer54076,LCon57767,LUp_8562,LAdd35607,LSub32498,LUp_79135,LRes84939,LCon55915],["Up_12406","Res69275","Zer13667","Con92002","Add46730","Zer54076","Con57767","Up_8562","Add35607","Sub32498","Up_79135","Res84939","Con55915"],Con55915,"Con55915")

Actual (Unparsed): [[[[[-40.1474781, -44.2071690], [-50.0492739, -53.6187686]]]]]

Expected (Unparsed): [[[[[-40.14747757,-44.20716849999998],[-50.04927325,-53.61876784999998]]]]]

Actual:   [[[[[-40.1474, -44.2071], [-50.0492, -53.6187]]]]]

Expected: [[[[[-40.1474, -44.2071], [-50.0492, -53.6187]]]]]