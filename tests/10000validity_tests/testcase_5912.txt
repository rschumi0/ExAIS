import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Max86334 = tf.keras.layers.Input(shape=([1, 2]))

Max86334 = keras.layers.MaxPool1D(pool_size=(1), strides=(7), padding='valid', name = 'Max86334', )(in0Max86334)
Con31171 = keras.layers.Conv1D(2, (1),strides=(1), padding='valid', dilation_rate=(1), name = 'Con31171', )(Max86334)
Bat31688 = keras.layers.BatchNormalization(axis=1, epsilon=0.49825817426161856,  name = 'Bat31688', )(Con31171)
model = tf.keras.models.Model(inputs=[in0Max86334], outputs=Bat31688)
w = model.get_layer('Con31171').get_weights() 
w[0] = np.array([[[0.8468, 0.5617], [0.0859, 0.4857]]])
w[1] = np.array([0, 0])
model.get_layer('Con31171').set_weights(w) 
w = model.get_layer('Bat31688').get_weights() 
w[0] = np.array([0.2775])
w[1] = np.array([0.0516])
w[2] = np.array([0.1153])
w[3] = np.array([0.7134])
model.get_layer('Bat31688').set_weights(w) 
in0Max86334 = tf.constant([[[1.7158, 1.0835]]])
print (np.array2string(model.predict([in0Max86334],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Bat31688.png')

LMax86334 = max_pool1D_layer([[[1.7158, 1.0835]]], 1, 7, false, Max86334), 
LCon31171 = conv1D_layer(Max86334, 1,[[[0.8468, 0.5617], [0.0859, 0.4857]]],[0, 0], 1, false, 1, Con31171), 
LBat31688 = batch_normalization_layer(Con31171, 1, 0.49825817426161856, [0.2775], [0.0516], [0.1153], [0.7134], Bat31688), 
exec_layers([LMax86334,LCon31171,LBat31688],["Max86334","Con31171","Bat31688"],Bat31688,"Bat31688")

Actual (Unparsed): [[[0.4122826, 0.3981672]]]

Expected (Unparsed): [[[0.41228258724012284,0.398167182838049]]]

Actual:   [[[0.4123, 0.3982]]]

Expected: [[[0.4123, 0.3982]]]