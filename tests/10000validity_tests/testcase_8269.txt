import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Dot89370 = tf.keras.layers.Input(shape=([2, 3]))
in1Dot89370 = tf.keras.layers.Input(shape=([2, 3]))
in0Per1 = tf.keras.layers.Input(shape=([4, 1]))
in0Mul52418 = tf.keras.layers.Input(shape=([1, 1, 2]))
in1Mul52418 = tf.keras.layers.Input(shape=([1, 1, 2]))

Dot89370 = keras.layers.Dot(axes=(2, 2), name = 'Dot89370', )([in0Dot89370,in1Dot89370])
Res39624 = keras.layers.Reshape((2, 2, 1), name = 'Res39624', )(Dot89370)
Glo91815 = keras.layers.GlobalMaxPool2D(name = 'Glo91815', )(Res39624)
Res80173 = keras.layers.Reshape((1, 1), name = 'Res80173', )(Glo91815)
Zer73406 = keras.layers.ZeroPadding1D(padding=((3, 0)), name = 'Zer73406', )(Res80173)
Per1 = keras.layers.Permute((1,2), name = 'Per1',)(in0Per1)
Cro54123 = keras.layers.Cropping1D(cropping=((0, 0)), name = 'Cro54123', )(Per1)
Max28930 = keras.layers.Maximum(name = 'Max28930', )([Zer73406,Cro54123])
Mul52418 = keras.layers.Multiply(name = 'Mul52418', )([in0Mul52418,in1Mul52418])
Res45955 = keras.layers.Reshape((1, 1, 2, 1), name = 'Res45955', )(Mul52418)
Cro45253 = keras.layers.Cropping3D(cropping=((0, 0), (0, 0), (1, 0)), name = 'Cro45253', )(Res45955)
Res29747 = keras.layers.Reshape((1, 1, 1), name = 'Res29747', )(Cro45253)
Res78569 = keras.layers.Reshape((1, 1), name = 'Res78569', )(Res29747)
Dot6104 = keras.layers.Dot(axes=(2, 2), name = 'Dot6104', )([Max28930,Res78569])
model = tf.keras.models.Model(inputs=[in0Dot89370,in1Dot89370,in0Per1,in0Mul52418,in1Mul52418], outputs=Dot6104)
in0Dot89370 = tf.constant([[[0.0029, 0.7516, 0.8847], [0.6833, 0.3675, 0.3923]]])
in1Dot89370 = tf.constant([[[0.7026, 0.3004, 0.3214], [0.8669, 0.4731, 0.6901]]])
in0Per1 = tf.constant([[[1.0421], [1.6429], [1.4029], [1.5775]]])
in0Mul52418 = tf.constant([[[[0.3382, 0.3879]]]])
in1Mul52418 = tf.constant([[[[0.2423, 0.0079]]]])
print (np.array2string(model.predict([in0Dot89370,in1Dot89370,in0Per1,in0Mul52418,in1Mul52418],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Dot6104.png')

LDot89370 = dot_layer([[[0.0029, 0.7516, 0.8847], [0.6833, 0.3675, 0.3923]]], [[[0.7026, 0.3004, 0.3214], [0.8669, 0.4731, 0.6901]]], 2, 2, Dot89370), 
LRes39624 = reshape_layer(Dot89370, [2, 2, 1], Res39624), 
LGlo91815 = global_max_pool2D_layer(Res39624, Glo91815), 
LRes80173 = reshape_layer(Glo91815, [1, 1], Res80173), 
LZer73406 = zero_padding1D_layer(Res80173, 3, 0, Zer73406), 
LPer1 = permute_layer([[[1.0421], [1.6429], [1.4029], [1.5775]]], 1,2, Per1), 
LCro54123 = cropping1D_layer(Per1, 0, 0, Cro54123), 
LMax28930 = maximum_layer([Zer73406,Cro54123], Max28930), 
LMul52418 = multiply_layer([[[[[0.3382, 0.3879]]]], [[[[0.2423, 0.0079]]]]], Mul52418), 
LRes45955 = reshape_layer(Mul52418, [1, 1, 2, 1], Res45955), 
LCro45253 = cropping3D_layer(Res45955, 0, 0, 0, 0, 1, 0, Cro45253), 
LRes29747 = reshape_layer(Cro45253, [1, 1, 1], Res29747), 
LRes78569 = reshape_layer(Res29747, [1, 1], Res78569), 
LDot6104 = dot_layer(Max28930,Res78569, 2, 2, Dot6104), 
exec_layers([LDot89370,LRes39624,LGlo91815,LRes80173,LZer73406,LPer1,LCro54123,LMax28930,LMul52418,LRes45955,LCro45253,LRes29747,LRes78569,LDot6104],["Dot89370","Res39624","Glo91815","Res80173","Zer73406","Per1","Cro54123","Max28930","Mul52418","Res45955","Cro45253","Res29747","Res78569","Dot6104"],Dot6104,"Dot6104")

Actual (Unparsed): [[[0.0031934], [0.0050345], [0.0042991], [0.0048341]]]

Expected (Unparsed): [[[0.0031934216610000005],[0.005034519189000001],[0.004299060789000001],[0.004834106775]]]

Actual:   [[[0.0032], [0.0051], [0.0043], [0.0049]]]

Expected: [[[0.0032], [0.0051], [0.0043], [0.0049]]]