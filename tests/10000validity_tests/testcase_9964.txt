import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Sep39685 = tf.keras.layers.Input(shape=([2, 1]))

Sep39685 = keras.layers.SeparableConv1D(3, (2),strides=(2), padding='valid', name = 'Sep39685', )(in0Sep39685)
Res38358 = keras.layers.Reshape((1, 3, 1), name = 'Res38358', )(Sep39685)
Res84636 = keras.layers.Reshape((1, 3, 1, 1), name = 'Res84636', )(Res38358)
Zer69435 = keras.layers.ZeroPadding3D(padding=((1, 1), (1, 1), (1, 1)), name = 'Zer69435', )(Res84636)
Glo68952 = keras.layers.GlobalMaxPool3D(name = 'Glo68952', )(Zer69435)
model = tf.keras.models.Model(inputs=[in0Sep39685], outputs=Glo68952)
w = model.get_layer('Sep39685').get_weights() 
w[0] = np.array([[[0.4165]], [[0.0714]]])
w[1] = np.array([[[0.4418, 0.388, 0.187]]])
w[2] = np.array([0, 0, 0])
model.get_layer('Sep39685').set_weights(w) 
in0Sep39685 = tf.constant([[[0.4464], [0.6699]]])
print (np.array2string(model.predict([in0Sep39685],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Glo68952.png')

LSep39685 = separable_conv1D_layer([[[0.4464], [0.6699]]], 2,[[[[0.4165]], [[0.0714]]],[[[0.4418, 0.388, 0.187]]]],[0, 0, 0], 2, false, Sep39685), 
LRes38358 = reshape_layer(Sep39685, [1, 3, 1], Res38358), 
LRes84636 = reshape_layer(Res38358, [1, 3, 1, 1], Res84636), 
LZer69435 = zero_padding3D_layer(Res84636, 1, 1, 1, 1, 1, 1, Zer69435), 
LGlo68952 = global_max_pool3D_layer(Zer69435, Glo68952), 
exec_layers([LSep39685,LRes38358,LRes84636,LZer69435,LGlo68952],["Sep39685","Res38358","Res84636","Zer69435","Glo68952"],Glo68952,"Glo68952")

Actual (Unparsed): [[0.1032736]]

Expected (Unparsed): [[0.10327360402800001]]

Actual:   [[0.1033]]

Expected: [[0.1033]]