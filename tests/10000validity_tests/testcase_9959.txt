import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Sep36021 = tf.keras.layers.Input(shape=([2, 2, 1]))

Sep36021 = keras.layers.SeparableConv2D(3, (1, 2),strides=(2, 2), padding='same', name = 'Sep36021', )(in0Sep36021)
Lay26441 = keras.layers.LayerNormalization(axis=1, epsilon=2.2075122665955655, name = 'Lay26441', )(Sep36021)
Res61184 = keras.layers.Reshape((1, 1, 3, 1), name = 'Res61184', )(Lay26441)
Up_96471 = keras.layers.UpSampling3D(size=(1, 2, 2), name = 'Up_96471', )(Res61184)
model = tf.keras.models.Model(inputs=[in0Sep36021], outputs=Up_96471)
w = model.get_layer('Sep36021').get_weights() 
w[0] = np.array([[[[0.0814]], [[0.5041]]]])
w[1] = np.array([[[[0.4346, 0.3271, 0.5412]]]])
w[2] = np.array([0, 0, 0])
model.get_layer('Sep36021').set_weights(w) 
in0Sep36021 = tf.constant([[[[0.0762], [0.8828]], [[0.2219], [0.909]]]])
print (np.array2string(model.predict([in0Sep36021],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Up_96471.png')

LSep36021 = separable_conv2D_layer([[[[0.0762], [0.8828]], [[0.2219], [0.909]]]], 1, 2,[[[[[0.0814]], [[0.5041]]]],[[[[0.4346, 0.3271, 0.5412]]]]],[0, 0, 0], 2, 2, true, Sep36021), 
LLay26441 = layer_normalization_layer(Sep36021, 1, 2.2075122665955655, Lay26441), 
LRes61184 = reshape_layer(Lay26441, [1, 1, 3, 1], Res61184), 
LUp_96471 = up_sampling3D_layer(Res61184, 1, 2, 2, Up_96471), 
exec_layers([LSep36021,LLay26441,LRes61184,LUp_96471],["Sep36021","Lay26441","Res61184","Up_96471"],Up_96471,"Up_96471")

Actual (Unparsed): [[[[[0.0000000], [0.0000000], [0.0000000], [0.0000000], [0.0000000], [0.0000000]], [[0.0000000], [0.0000000], [0.0000000], [0.0000000], [0.0000000], [0.0000000]]]]]

Expected (Unparsed): [[[[[0.0],[0.0],[0.0],[0.0],[0.0],[0.0]],[[0.0],[0.0],[0.0],[0.0],[0.0],[0.0]]]]]

Actual:   [[[[[0], [0], [0], [0], [0], [0]], [[0], [0], [0], [0], [0], [0]]]]]

Expected: [[[[[0], [0], [0], [0], [0], [0]], [[0], [0], [0], [0], [0], [0]]]]]