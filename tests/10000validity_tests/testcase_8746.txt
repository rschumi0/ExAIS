import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Mul96684 = tf.keras.layers.Input(shape=([2, 2, 2]))
in1Mul96684 = tf.keras.layers.Input(shape=([2, 2, 2]))

Mul96684 = keras.layers.Multiply(name = 'Mul96684', )([in0Mul96684,in1Mul96684])
Con19928 = keras.layers.Conv2D(2, (2, 1),strides=(1, 1), padding='valid', dilation_rate=(1, 1), name = 'Con19928', )(Mul96684)
model = tf.keras.models.Model(inputs=[in0Mul96684,in1Mul96684], outputs=Con19928)
w = model.get_layer('Con19928').get_weights() 
w[0] = np.array([[[[0.3477, 0.3234], [0.5727, 0.5815]]], [[[0.7493, 0.7858], [0.5515, 0.1542]]]])
w[1] = np.array([0, 0])
model.get_layer('Con19928').set_weights(w) 
in0Mul96684 = tf.constant([[[[0.3557, 0.1539], [0.8625, 0.1261]], [[0.9829, 0.5338], [0.6509, 0.7637]]]])
in1Mul96684 = tf.constant([[[[0.3336, 0.4163], [0.3955, 0.6564]], [[0.5945, 0.2871], [0.3264, 0.2663]]]])
print (np.array2string(model.predict([in0Mul96684,in1Mul96684],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Con19928.png')

LMul96684 = multiply_layer([[[[[0.3557, 0.1539], [0.8625, 0.1261]], [[0.9829, 0.5338], [0.6509, 0.7637]]]], [[[[0.3336, 0.4163], [0.3955, 0.6564]], [[0.5945, 0.2871], [0.3264, 0.2663]]]]], Mul96684), 
LCon19928 = conv2D_layer(Mul96684, 2, 1,[[[[0.3477, 0.3234], [0.5727, 0.5815]]], [[[0.7493, 0.7858], [0.5515, 0.1542]]]],[0, 0], 1, 1, false, 1, 1, Con19928), 
exec_layers([LMul96684,LCon19928],["Mul96684","Con19928"],Con19928,"Con19928")

Actual (Unparsed): [[[[0.6003118, 0.5584325], [0.4373625, 0.3567561]]]]

Expected (Unparsed): [[[[0.600311754178,0.558432469229],[0.437362519516,0.35675607402000004]]]]

Actual:   [[[[0.6004, 0.5585], [0.4374, 0.3568]]]]

Expected: [[[[0.6004, 0.5585], [0.4374, 0.3568]]]]