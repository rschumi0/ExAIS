import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Con26105 = tf.keras.layers.Input(shape=([2, 2, 2, 2]))
in0Dot88521 = tf.keras.layers.Input(shape=([3, 3]))
in1Dot88521 = tf.keras.layers.Input(shape=([3, 3]))
in0Con50667 = tf.keras.layers.Input(shape=([3, 5]))
in0Dot36328 = tf.keras.layers.Input(shape=([2]))
in1Dot36328 = tf.keras.layers.Input(shape=([2]))
in0Con7269 = tf.keras.layers.Input(shape=([23]))

Con26105 = keras.layers.Conv3D(2, (2, 2, 2),strides=(2, 1, 1), padding='same', dilation_rate=(1, 1, 1), name = 'Con26105', )(in0Con26105)
Res71103 = keras.layers.Reshape((1, 2, 4), name = 'Res71103', )(Con26105)
Sep80027 = keras.layers.SeparableConv2D(4, (1, 1),strides=(1, 1), padding='valid', name = 'Sep80027', )(Res71103)
Res29536 = keras.layers.Reshape((1, 8), name = 'Res29536', )(Sep80027)
Zer26759 = keras.layers.ZeroPadding1D(padding=((2, 0)), name = 'Zer26759', )(Res29536)
Dot88521 = keras.layers.Dot(axes=(2, 2), name = 'Dot88521', )([in0Dot88521,in1Dot88521])
Con50667 = keras.layers.Concatenate(axis=2, name = 'Con50667', )([Dot88521,in0Con50667])
Min33984 = keras.layers.Minimum(name = 'Min33984', )([Zer26759,Con50667])
Bat39390 = keras.layers.BatchNormalization(axis=1, epsilon=0.15231216688798282,  name = 'Bat39390', )(Min33984)
Fla48625 = keras.layers.Flatten(name = 'Fla48625', )(Bat39390)
Dot36328 = keras.layers.Dot(axes=(1, 1), name = 'Dot36328', )([in0Dot36328,in1Dot36328])
Res28027 = keras.layers.Reshape((1, 1), name = 'Res28027', )(Dot36328)
Res54279 = keras.layers.Reshape((1, 1, 1), name = 'Res54279', )(Res28027)
Glo54986 = keras.layers.GlobalAveragePooling2D(name = 'Glo54986', )(Res54279)
Con7269 = keras.layers.Concatenate(axis=1, name = 'Con7269', )([Glo54986,in0Con7269])
Sub66674 = keras.layers.Subtract(name = 'Sub66674', )([Fla48625,Con7269])
model = tf.keras.models.Model(inputs=[in0Con26105,in0Dot88521,in1Dot88521,in0Con50667,in0Dot36328,in1Dot36328,in0Con7269], outputs=Sub66674)
w = model.get_layer('Con26105').get_weights() 
w[0] = np.array([[[[[0.6263, 0.779], [0.8412, 0.25]], [[0.9929, 0.0234], [0.407, 0.5473]]], [[[0.4941, 0.6408], [0.4033, 0.2955]], [[0.3625, 0.5226], [0.495, 0.3471]]]], [[[[0.1216, 0.9438], [0.8567, 0.7482]], [[0.0114, 0.355], [0.0534, 0.2188]]], [[[0.7544, 0.8282], [0.5814, 0.7574]], [[0.2657, 0.054], [0.978, 0.9673]]]]])
w[1] = np.array([0, 0])
model.get_layer('Con26105').set_weights(w) 
w = model.get_layer('Sep80027').get_weights() 
w[0] = np.array([[[[0.9435], [0.6032], [0.554], [0.4059]]]])
w[1] = np.array([[[[0.6544, 0.0261, 0.2783, 0.55], [0.8121, 0.6516, 0.4242, 0.0402], [0.6292, 0.2026, 0.3562, 0.16], [0.4338, 0.5132, 0.1534, 0.2084]]]])
w[2] = np.array([0, 0, 0, 0])
model.get_layer('Sep80027').set_weights(w) 
w = model.get_layer('Bat39390').get_weights() 
w[0] = np.array([0.7863, 0.9058, 0.4127])
w[1] = np.array([0.2612, 0.0712, 0.5259])
w[2] = np.array([0.5648, 0.9211, 0.3465])
w[3] = np.array([0.8828, 0.7569, 0.7063])
model.get_layer('Bat39390').set_weights(w) 
in0Con26105 = tf.constant([[[[[0.8367, 0.0807], [0.6715, 0.4599]], [[0.8197, 0.1152], [0.2934, 0.0274]]], [[[0.766, 0.6848], [0.6404, 0.6747]], [[0.0121, 0.9708], [0.0773, 0.2055]]]]])
in0Dot88521 = tf.constant([[[0.4782, 0.8993, 0.7584], [0.8268, 0.4605, 0.8813], [0.2042, 0.3614, 0.188]]])
in1Dot88521 = tf.constant([[[0.1494, 0.1351, 0.8438], [0.5113, 0.3041, 0.4615], [0.9913, 0.0026, 0.8505]]])
in0Con50667 = tf.constant([[[0.8144, 0.9629, 0.8407, 0.216, 0.0273], [0.3062, 0.4929, 0.4057, 0.4246, 0.6766], [0.3936, 0.4535, 0.9769, 0.003, 0.6899]]])
in0Dot36328 = tf.constant([[0.5657, 0.6587]])
in1Dot36328 = tf.constant([[0.5623, 0.8318]])
in0Con7269 = tf.constant([[0.288, 0.6551, 0.2832, 0.3729, 0.0911, 0.5041, 0.0057, 0.1555, 0.1249, 0.0497, 0.5243, 0.3942, 0.1126, 0.1491, 0.0807, 0.6899, 0.3306, 0.9253, 0.7516, 0.4125, 0.8787, 0.6088, 0.3601]])
print (np.array2string(model.predict([in0Con26105,in0Dot88521,in1Dot88521,in0Con50667,in0Dot36328,in1Dot36328,in0Con7269],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Sub66674.png')

LCon26105 = conv3D_layer([[[[[0.8367, 0.0807], [0.6715, 0.4599]], [[0.8197, 0.1152], [0.2934, 0.0274]]], [[[0.766, 0.6848], [0.6404, 0.6747]], [[0.0121, 0.9708], [0.0773, 0.2055]]]]], 2, 2, 2,[[[[[0.6263, 0.779], [0.8412, 0.25]], [[0.9929, 0.0234], [0.407, 0.5473]]], [[[0.4941, 0.6408], [0.4033, 0.2955]], [[0.3625, 0.5226], [0.495, 0.3471]]]], [[[[0.1216, 0.9438], [0.8567, 0.7482]], [[0.0114, 0.355], [0.0534, 0.2188]]], [[[0.7544, 0.8282], [0.5814, 0.7574]], [[0.2657, 0.054], [0.978, 0.9673]]]]],[0, 0], 2, 1, 1, true, 1, 1, 1, Con26105), 
LRes71103 = reshape_layer(Con26105, [1, 2, 4], Res71103), 
LSep80027 = separable_conv2D_layer(Res71103, 1, 1,[[[[[0.9435], [0.6032], [0.554], [0.4059]]]],[[[[0.6544, 0.0261, 0.2783, 0.55], [0.8121, 0.6516, 0.4242, 0.0402], [0.6292, 0.2026, 0.3562, 0.16], [0.4338, 0.5132, 0.1534, 0.2084]]]]],[0, 0, 0, 0], 1, 1, false, Sep80027), 
LRes29536 = reshape_layer(Sep80027, [1, 8], Res29536), 
LZer26759 = zero_padding1D_layer(Res29536, 2, 0, Zer26759), 
LDot88521 = dot_layer([[[0.4782, 0.8993, 0.7584], [0.8268, 0.4605, 0.8813], [0.2042, 0.3614, 0.188]]], [[[0.1494, 0.1351, 0.8438], [0.5113, 0.3041, 0.4615], [0.9913, 0.0026, 0.8505]]], 2, 2, Dot88521), 
LCon50667 = concatenate_layer([Dot88521,[[[0.8144, 0.9629, 0.8407, 0.216, 0.0273], [0.3062, 0.4929, 0.4057, 0.4246, 0.6766], [0.3936, 0.4535, 0.9769, 0.003, 0.6899]]]], 2, Con50667), 
LMin33984 = minimum_layer([Zer26759,Con50667], Min33984), 
LBat39390 = batch_normalization_layer(Min33984, 1, 0.15231216688798282, [0.7863, 0.9058, 0.4127], [0.2612, 0.0712, 0.5259], [0.5648, 0.9211, 0.3465], [0.8828, 0.7569, 0.7063], Bat39390), 
LFla48625 = flatten_layer(Bat39390, Fla48625), 
LDot36328 = dot_layer([[0.5657, 0.6587]], [[0.5623, 0.8318]], 1, 1, Dot36328), 
LRes28027 = reshape_layer(Dot36328, [1, 1], Res28027), 
LRes54279 = reshape_layer(Res28027, [1, 1, 1], Res54279), 
LGlo54986 = global_average_pooling2D_layer(Res54279, Glo54986), 
LCon7269 = concatenate_layer([Glo54986,[[0.288, 0.6551, 0.2832, 0.3729, 0.0911, 0.5041, 0.0057, 0.1555, 0.1249, 0.0497, 0.5243, 0.3942, 0.1126, 0.1491, 0.0807, 0.6899, 0.3306, 0.9253, 0.7516, 0.4125, 0.8787, 0.6088, 0.3601]]], 1, Con7269), 
LSub66674 = subtract_layer(Fla48625,Con7269, Sub66674), 
exec_layers([LCon26105,LRes71103,LSep80027,LRes29536,LZer26759,LDot88521,LCon50667,LMin33984,LBat39390,LFla48625,LDot36328,LRes28027,LRes54279,LGlo54986,LCon7269,LSub66674],["Con26105","Res71103","Sep80027","Res29536","Zer26759","Dot88521","Con50667","Min33984","Bat39390","Fla48625","Dot36328","Res28027","Res54279","Glo54986","Con7269","Sub66674"],Sub66674,"Sub66674")

Actual (Unparsed): [[-1.0413048, -0.4633050, -0.8304050, -0.4585050, -0.5482050, -0.2664050, -0.6794051, -0.1810050, -0.9592968, -0.9286968, -0.8534968, -1.3280968, -1.1979968, -0.9163968, -0.9528968, -0.8844968, -0.2123390, 0.1750667, -0.3919366, -0.2047224, 0.1610562, -0.1628869, -0.2358899, 0.3187453]]

Expected (Unparsed): [[-1.041304804440912,-0.4633050344409119,-0.830405034440912,-0.45850503444091195,-0.548205034440912,-0.26640503444091196,-0.6794050344409119,-0.18100503444091195,-0.9592968293012524,-0.9286968293012524,-0.8534968293012524,-1.3280968293012525,-1.1979968293012524,-0.9163968293012524,-0.9528968293012524,-0.8844968293012524,-0.21233900172972964,0.17506667698814182,-0.3919366327738789,-0.2047223489535599,0.1610562348613397,-0.1628868698989372,-0.23588987546607626,0.3187453369288228]]

Actual:   [[-1.0413, -0.4633, -0.8304, -0.4585, -0.5482, -0.2664, -0.6794, -0.181, -0.9592, -0.9286, -0.8534, -1.328, -1.1979, -0.9163, -0.9528, -0.8844, -0.2123, 0.1751, -0.3919, -0.2047, 0.1611, -0.1628, -0.2358, 0.3188]]

Expected: [[-1.0413, -0.4633, -0.8304, -0.4585, -0.5482, -0.2664, -0.6794, -0.181, -0.9592, -0.9286, -0.8534, -1.328, -1.1979, -0.9163, -0.9528, -0.8844, -0.2123, 0.1751, -0.3919, -0.2047, 0.1611, -0.1628, -0.2358, 0.3188]]