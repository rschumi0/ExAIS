import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Sim8313 = tf.keras.layers.Input(shape=([3, 3]))
in0Con89371 = tf.keras.layers.Input(shape=([1, 3]))
in0PRe76067 = tf.keras.layers.Input(shape=([1, 2, 2]))
in0Con6470 = tf.keras.layers.Input(shape=([4, 68]))
in0Zer13086 = tf.keras.layers.Input(shape=([1, 4, 2, 3]))

Sim8313 = keras.layers.SimpleRNN(1,name = 'Sim8313', )(in0Sim8313)
Res61100 = keras.layers.Reshape((1, 1), name = 'Res61100', )(Sim8313)
Con89371 = keras.layers.Concatenate(axis=2, name = 'Con89371', )([Res61100,in0Con89371])
PRe76067 = keras.layers.PReLU(name = 'PRe76067', input_shape=(1, 2, 2))(in0PRe76067)
Res29732 = keras.layers.Reshape((1, 4), name = 'Res29732', )(PRe76067)
Dot7238 = keras.layers.Dot(axes=(1, 1), name = 'Dot7238', )([Con89371,Res29732])
Con6470 = keras.layers.Concatenate(axis=2, name = 'Con6470', )([Dot7238,in0Con6470])
Zer13086 = keras.layers.ZeroPadding3D(padding=((1, 1), (1, 1), (1, 1)), name = 'Zer13086', )(in0Zer13086)
Res86537 = keras.layers.Reshape((3, 6, 12), name = 'Res86537', )(Zer13086)
Res2497 = keras.layers.Reshape((3, 72), name = 'Res2497', )(Res86537)
Dot59534 = keras.layers.Dot(axes=(2, 2), name = 'Dot59534', )([Con6470,Res2497])
Res73567 = keras.layers.Reshape((4, 3, 1), name = 'Res73567', )(Dot59534)
Res92299 = keras.layers.Reshape((4, 3, 1, 1), name = 'Res92299', )(Res73567)
Cro94337 = keras.layers.Cropping3D(cropping=((3, 0), (1, 1), (0, 0)), name = 'Cro94337', )(Res92299)
model = tf.keras.models.Model(inputs=[in0Sim8313,in0Con89371,in0PRe76067,in0Con6470,in0Zer13086], outputs=Cro94337)
w = model.get_layer('Sim8313').get_weights() 
w[0] = np.array([[3], [1], [3]])
w[1] = np.array([[6]])
w[2] = np.array([8])
model.get_layer('Sim8313').set_weights(w) 
w = model.get_layer('PRe76067').get_weights() 
w[0] = np.array([[[0.9624, 0.77], [0.1653, 0.9876]]])
model.get_layer('PRe76067').set_weights(w) 
in0Sim8313 = tf.constant([[[6, 5, 7], [8, 9, 2], [5, 5, 4]]])
in0Con89371 = tf.constant([[[0.1344, 0.9682, 0.9679]]])
in0PRe76067 = tf.constant([[[[0.2066, 0.7265], [0.6357, 0.9632]]]])
in0Con6470 = tf.constant([[[0.9492, 0.4324, 0.9925, 0.5659, 0.4971, 0.8198, 0.9136, 0.3981, 0.9124, 0.7028, 0.8284, 0.026, 0.5333, 0.8971, 0.9075, 0.9411, 0.3753, 0.7872, 0.1399, 0.3539, 0.1298, 0.5674, 0.392, 0.0095, 0.9591, 0.1306, 0.6346, 0.9299, 0.8065, 0.5448, 0.2789, 0.0844, 0.2345, 0.5941, 0.1769, 0.9855, 0.9899, 0.5666, 0.8601, 0.8623, 0.5981, 0.3249, 0.0194, 0.3732, 0.2901, 0.7097, 0.0599, 0.7832, 0.4792, 0.4936, 0.8063, 0.1562, 0.821, 0.4299, 0.0773, 0.3888, 0.6135, 0.421, 0.9001, 0.8483, 0.9251, 0.4685, 0.5964, 0.9661, 0.373, 0.8631, 0.8307, 0.388], [0.918, 0.0198, 0.9879, 0.1836, 0.3904, 0.4727, 0.9191, 0.177, 0.7146, 0.805, 0.18, 0.6785, 0.9655, 0.7089, 0.3761, 0.7666, 0.4507, 0.9467, 0.1222, 0.8, 0.9932, 0.7129, 0.4266, 0.023, 0.4635, 0.7886, 0.0202, 0.9675, 0.3997, 0.92, 0.2602, 0.8545, 0.2441, 0.0548, 0.7655, 0.3488, 0.3265, 0.4272, 0.8593, 0.8311, 0.225, 0.9929, 0.2366, 0.8178, 0.5506, 0.3862, 0.0049, 0.2806, 0.5165, 0.3965, 0.398, 0.3961, 0.8774, 0.941, 0.0119, 0.6911, 0.9545, 0.6508, 0.3707, 0.6378, 0.4969, 0.4795, 0.9932, 0.5041, 0.0739, 0.1951, 0.9035, 0.6629], [0.54, 0.2197, 0.7046, 0.628, 0.8701, 0.0491, 0.9167, 0.7972, 0.3235, 0.398, 0.2711, 0.256, 0.4621, 0.295, 0.0479, 0.0254, 0.0224, 0.582, 0.3444, 0.8185, 0.0207, 0.6611, 0.3724, 0.7147, 0.7571, 0.8739, 0.4939, 0.1548, 0.5752, 0.6016, 0.7269, 0.3157, 0.3351, 0.0272, 0.8808, 0.2322, 0.5608, 0.5169, 0.3095, 0.9974, 0.1334, 0.7442, 0.5166, 0.999, 0.2217, 0.0082, 0.4841, 0.4238, 0.862, 0.6748, 0.6566, 0.1993, 0.2319, 0.3128, 0.9633, 0.1296, 0.1959, 0.8854, 0.1294, 0.2348, 0.1471, 0.3119, 0.7971, 0.1999, 0.5128, 0.8182, 0.6528, 0.4039], [0.5518, 0.7586, 0.8416, 0.214, 0.2275, 0.0103, 0.4375, 0.1002, 0.0139, 0.6175, 0.6348, 0.6576, 0.458, 0.0912, 0.6283, 0.8035, 0.2105, 0.663, 0.8543, 0.2623, 0.014, 0.8296, 0.3852, 0.944, 0.8385, 0.7295, 0.7834, 0.9781, 0.9455, 0.248, 0.6536, 0.973, 0.1728, 0.2578, 0.4611, 0.5373, 0.1389, 0.0752, 0.9252, 0.2212, 0.3854, 0.0332, 0.4416, 0.8151, 0.6998, 0.0563, 0.54, 0.3764, 0.9888, 0.2596, 0.3395, 0.4459, 0.1109, 0.8883, 0.3313, 0.6643, 0.0176, 0.363, 0.5861, 0.4003, 0.4023, 0.804, 0.6622, 0.0624, 0.8102, 0.1707, 0.0724, 0.4821]]])
in0Zer13086 = tf.constant([[[[[1.5788, 1.2534, 1.939], [1.1774, 1.3916, 1.189]], [[1.7842, 1.5262, 1.1021], [1.4719, 1.4675, 1.9589]], [[1.5035, 1.3121, 1.0089], [1.1008, 1.8161, 1.0755]], [[1.0756, 1.1136, 1.9694], [1.1063, 1.0599, 1.055]]]]])
print (np.array2string(model.predict([in0Sim8313,in0Con89371,in0PRe76067,in0Con6470,in0Zer13086],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Cro94337.png')

LSim8313 = simple_rnn_layer([[[6, 5, 7], [8, 9, 2], [5, 5, 4]]],[[3], [1], [3]],[[6]],[8], Sim8313), 
LRes61100 = reshape_layer(Sim8313, [1, 1], Res61100), 
LCon89371 = concatenate_layer([Res61100,[[[0.1344, 0.9682, 0.9679]]]], 2, Con89371), 
LPRe76067 = prelu_layer([[[[0.2066, 0.7265], [0.6357, 0.9632]]]], [[[0.9624, 0.77], [0.1653, 0.9876]]], PRe76067), 
LRes29732 = reshape_layer(PRe76067, [1, 4], Res29732), 
LDot7238 = dot_layer(Con89371,Res29732, 1, 1, Dot7238), 
LCon6470 = concatenate_layer([Dot7238,[[[0.9492, 0.4324, 0.9925, 0.5659, 0.4971, 0.8198, 0.9136, 0.3981, 0.9124, 0.7028, 0.8284, 0.026, 0.5333, 0.8971, 0.9075, 0.9411, 0.3753, 0.7872, 0.1399, 0.3539, 0.1298, 0.5674, 0.392, 0.0095, 0.9591, 0.1306, 0.6346, 0.9299, 0.8065, 0.5448, 0.2789, 0.0844, 0.2345, 0.5941, 0.1769, 0.9855, 0.9899, 0.5666, 0.8601, 0.8623, 0.5981, 0.3249, 0.0194, 0.3732, 0.2901, 0.7097, 0.0599, 0.7832, 0.4792, 0.4936, 0.8063, 0.1562, 0.821, 0.4299, 0.0773, 0.3888, 0.6135, 0.421, 0.9001, 0.8483, 0.9251, 0.4685, 0.5964, 0.9661, 0.373, 0.8631, 0.8307, 0.388], [0.918, 0.0198, 0.9879, 0.1836, 0.3904, 0.4727, 0.9191, 0.177, 0.7146, 0.805, 0.18, 0.6785, 0.9655, 0.7089, 0.3761, 0.7666, 0.4507, 0.9467, 0.1222, 0.8, 0.9932, 0.7129, 0.4266, 0.023, 0.4635, 0.7886, 0.0202, 0.9675, 0.3997, 0.92, 0.2602, 0.8545, 0.2441, 0.0548, 0.7655, 0.3488, 0.3265, 0.4272, 0.8593, 0.8311, 0.225, 0.9929, 0.2366, 0.8178, 0.5506, 0.3862, 0.0049, 0.2806, 0.5165, 0.3965, 0.398, 0.3961, 0.8774, 0.941, 0.0119, 0.6911, 0.9545, 0.6508, 0.3707, 0.6378, 0.4969, 0.4795, 0.9932, 0.5041, 0.0739, 0.1951, 0.9035, 0.6629], [0.54, 0.2197, 0.7046, 0.628, 0.8701, 0.0491, 0.9167, 0.7972, 0.3235, 0.398, 0.2711, 0.256, 0.4621, 0.295, 0.0479, 0.0254, 0.0224, 0.582, 0.3444, 0.8185, 0.0207, 0.6611, 0.3724, 0.7147, 0.7571, 0.8739, 0.4939, 0.1548, 0.5752, 0.6016, 0.7269, 0.3157, 0.3351, 0.0272, 0.8808, 0.2322, 0.5608, 0.5169, 0.3095, 0.9974, 0.1334, 0.7442, 0.5166, 0.999, 0.2217, 0.0082, 0.4841, 0.4238, 0.862, 0.6748, 0.6566, 0.1993, 0.2319, 0.3128, 0.9633, 0.1296, 0.1959, 0.8854, 0.1294, 0.2348, 0.1471, 0.3119, 0.7971, 0.1999, 0.5128, 0.8182, 0.6528, 0.4039], [0.5518, 0.7586, 0.8416, 0.214, 0.2275, 0.0103, 0.4375, 0.1002, 0.0139, 0.6175, 0.6348, 0.6576, 0.458, 0.0912, 0.6283, 0.8035, 0.2105, 0.663, 0.8543, 0.2623, 0.014, 0.8296, 0.3852, 0.944, 0.8385, 0.7295, 0.7834, 0.9781, 0.9455, 0.248, 0.6536, 0.973, 0.1728, 0.2578, 0.4611, 0.5373, 0.1389, 0.0752, 0.9252, 0.2212, 0.3854, 0.0332, 0.4416, 0.8151, 0.6998, 0.0563, 0.54, 0.3764, 0.9888, 0.2596, 0.3395, 0.4459, 0.1109, 0.8883, 0.3313, 0.6643, 0.0176, 0.363, 0.5861, 0.4003, 0.4023, 0.804, 0.6622, 0.0624, 0.8102, 0.1707, 0.0724, 0.4821]]]], 2, Con6470), 
LZer13086 = zero_padding3D_layer([[[[[1.5788, 1.2534, 1.939], [1.1774, 1.3916, 1.189]], [[1.7842, 1.5262, 1.1021], [1.4719, 1.4675, 1.9589]], [[1.5035, 1.3121, 1.0089], [1.1008, 1.8161, 1.0755]], [[1.0756, 1.1136, 1.9694], [1.1063, 1.0599, 1.055]]]]], 1, 1, 1, 1, 1, 1, Zer13086), 
LRes86537 = reshape_layer(Zer13086, [3, 6, 12], Res86537), 
LRes2497 = reshape_layer(Res86537, [3, 72], Res2497), 
LDot59534 = dot_layer(Con6470,Res2497, 2, 2, Dot59534), 
LRes73567 = reshape_layer(Dot59534, [4, 3, 1], Res73567), 
LRes92299 = reshape_layer(Res73567, [4, 3, 1, 1], Res92299), 
LCro94337 = cropping3D_layer(Res92299, 3, 0, 1, 1, 0, 0, Cro94337), 
exec_layers([LSim8313,LRes61100,LCon89371,LPRe76067,LRes29732,LDot7238,LCon6470,LZer13086,LRes86537,LRes2497,LDot59534,LRes73567,LRes92299,LCro94337],["Sim8313","Res61100","Con89371","PRe76067","Res29732","Dot7238","Con6470","Zer13086","Res86537","Res2497","Dot59534","Res73567","Res92299","Cro94337"],Cro94337,"Cro94337")

Actual (Unparsed): [[[[[17.9889493]]]]]

Expected (Unparsed): [[[[[17.98894923]]]]]

Actual:   [[[[[17.989]]]]]

Expected: [[[[[17.989]]]]]