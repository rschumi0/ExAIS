import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Add98082 = tf.keras.layers.Input(shape=([1, 2, 1]))
in1Add98082 = tf.keras.layers.Input(shape=([1, 2, 1]))

Add98082 = keras.layers.Add(name = 'Add98082', )([in0Add98082,in1Add98082])
Bat17308 = keras.layers.BatchNormalization(axis=2, epsilon=0.7161420857967942,  name = 'Bat17308', )(Add98082)
model = tf.keras.models.Model(inputs=[in0Add98082,in1Add98082], outputs=Bat17308)
w = model.get_layer('Bat17308').get_weights() 
w[0] = np.array([0.7384, 0.6729])
w[1] = np.array([0.4686, 0.6402])
w[2] = np.array([0.2813, 0.1533])
w[3] = np.array([0.8377, 0.8491])
model.get_layer('Bat17308').set_weights(w) 
in0Add98082 = tf.constant([[[[0.4531], [0.5269]]]])
in1Add98082 = tf.constant([[[[0.7006], [0.319]]]])
print (np.array2string(model.predict([in0Add98082,in1Add98082],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Bat17308.png')

LAdd98082 = add_layer([[[[[0.4531], [0.5269]]]], [[[[0.7006], [0.319]]]]], Add98082), 
LBat17308 = batch_normalization_layer(Add98082, 2, 0.7161420857967942, [0.7384, 0.6729], [0.4686, 0.6402], [0.2813, 0.1533], [0.8377, 0.8491], Bat17308), 
exec_layers([LAdd98082,LBat17308],["Add98082","Bat17308"],Bat17308,"Bat17308")

Actual (Unparsed): [[[[0.9853779], [1.0127137]]]]

Expected (Unparsed): [[[[0.9853778667673261],[1.0127137066285066]]]]

Actual:   [[[[0.9854], [1.0128]]]]

Expected: [[[[0.9854], [1.0128]]]]