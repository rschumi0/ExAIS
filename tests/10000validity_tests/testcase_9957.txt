import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0ReL31520 = tf.keras.layers.Input(shape=([1, 1, 1]))

ReL31520 = keras.layers.ReLU(max_value=1.6981033842890856, negative_slope=1.788150598975704, threshold=7.576284895326521, name = 'ReL31520', input_shape=(1, 1, 1))(in0ReL31520)
Mas3850 = keras.layers.Masking(mask_value=2, name = 'Mas3850', )(ReL31520)
Res83400 = keras.layers.Reshape((1, 1), name = 'Res83400', )(Mas3850)
Zer56053 = keras.layers.ZeroPadding1D(padding=((1, 1)), name = 'Zer56053', )(Res83400)
model = tf.keras.models.Model(inputs=[in0ReL31520], outputs=Zer56053)
in0ReL31520 = tf.constant([[[[0.4827]]]])
print (np.array2string(model.predict([in0ReL31520],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Zer56053.png')

LReL31520 = relu_layer([[[[0.4827]]]], 1.6981033842890856, 1.788150598975704, 7.576284895326521, ReL31520), 
LMas3850 = masking_layer(ReL31520, 2, Mas3850), 
LRes83400 = reshape_layer(Mas3850, [1, 1], Res83400), 
LZer56053 = zero_padding1D_layer(Res83400, 1, 1, Zer56053), 
exec_layers([LReL31520,LMas3850,LRes83400,LZer56053],["ReL31520","Mas3850","Res83400","Zer56053"],Zer56053,"Zer56053")

Actual (Unparsed): [[[0.0000000], [-12.6843981], [0.0000000]]]

Expected (Unparsed): [[[0],[-12.684398079463126],[0]]]

Actual:   [[[0], [-12.6843], [0]]]

Expected: [[[0], [-12.6843], [0]]]