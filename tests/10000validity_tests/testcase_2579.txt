import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Mul47918 = tf.keras.layers.Input(shape=([2, 1, 1]))
in1Mul47918 = tf.keras.layers.Input(shape=([2, 1, 1]))
in0Glo13535 = tf.keras.layers.Input(shape=([2, 2, 2]))
in0Con7305 = tf.keras.layers.Input(shape=([2, 1, 2]))
in0Ave46423 = tf.keras.layers.Input(shape=([2, 1, 2]))
in1Ave46423 = tf.keras.layers.Input(shape=([2, 1, 2]))

Mul47918 = keras.layers.Multiply(name = 'Mul47918', )([in0Mul47918,in1Mul47918])
Res21044 = keras.layers.Reshape((2, 1), name = 'Res21044', )(Mul47918)
Fla31713 = keras.layers.Flatten(name = 'Fla31713', )(Res21044)
Glo13535 = keras.layers.GlobalAveragePooling2D(name = 'Glo13535', )(in0Glo13535)
Mul104 = keras.layers.Multiply(name = 'Mul104', )([Fla31713,Glo13535])
Res39201 = keras.layers.Reshape((2, 1), name = 'Res39201', )(Mul104)
Res66751 = keras.layers.Reshape((2, 1, 1), name = 'Res66751', )(Res39201)
Con7305 = keras.layers.Concatenate(axis=3, name = 'Con7305', )([Res66751,in0Con7305])
Ave46423 = keras.layers.Average(name = 'Ave46423', )([in0Ave46423,in1Ave46423])
Con14683 = keras.layers.Conv2DTranspose(3, (1, 1),strides=(6, 1), padding='valid', name = 'Con14683', )(Ave46423)
Cro91813 = keras.layers.Cropping2D(cropping=((8, 2), (0, 0)), name = 'Cro91813', )(Con14683)
Mul25207 = keras.layers.Multiply(name = 'Mul25207', )([Con7305,Cro91813])
model = tf.keras.models.Model(inputs=[in0Mul47918,in1Mul47918,in0Glo13535,in0Con7305,in0Ave46423,in1Ave46423], outputs=Mul25207)
w = model.get_layer('Con14683').get_weights() 
w[0] = np.array([[[[0.6914, 0.5908], [0.2223, 0.0387], [0.9296, 0.3651]]]])
w[1] = np.array([0, 0, 0])
model.get_layer('Con14683').set_weights(w) 
in0Mul47918 = tf.constant([[[[0.8623]], [[0.3215]]]])
in1Mul47918 = tf.constant([[[[0.8471]], [[0.6587]]]])
in0Glo13535 = tf.constant([[[[1.5919, 1.6891], [1.9446, 1.1057]], [[1.9326, 1.8955], [1.4153, 1.1647]]]])
in0Con7305 = tf.constant([[[[0.9049, 0.2188]], [[0.7268, 0.1689]]]])
in0Ave46423 = tf.constant([[[[0.9855, 0.4011]], [[0.8987, 0.9498]]]])
in1Ave46423 = tf.constant([[[[0.0073, 0.7292]], [[0.8044, 0.1909]]]])
print (np.array2string(model.predict([in0Mul47918,in1Mul47918,in0Glo13535,in0Con7305,in0Ave46423,in1Ave46423],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Mul25207.png')

LMul47918 = multiply_layer([[[[[0.8623]], [[0.3215]]]], [[[[0.8471]], [[0.6587]]]]], Mul47918), 
LRes21044 = reshape_layer(Mul47918, [2, 1], Res21044), 
LFla31713 = flatten_layer(Res21044, Fla31713), 
LGlo13535 = global_average_pooling2D_layer([[[[1.5919, 1.6891], [1.9446, 1.1057]], [[1.9326, 1.8955], [1.4153, 1.1647]]]], Glo13535), 
LMul104 = multiply_layer([Fla31713,Glo13535], Mul104), 
LRes39201 = reshape_layer(Mul104, [2, 1], Res39201), 
LRes66751 = reshape_layer(Res39201, [2, 1, 1], Res66751), 
LCon7305 = concatenate_layer([Res66751,[[[[0.9049, 0.2188]], [[0.7268, 0.1689]]]]], 3, Con7305), 
LAve46423 = average_layer([[[[[0.9855, 0.4011]], [[0.8987, 0.9498]]]], [[[[0.0073, 0.7292]], [[0.8044, 0.1909]]]]], Ave46423), 
LCon14683 = conv2D_transpose_layer(Ave46423, 1, 1,[[[[0.6914, 0.5908], [0.2223, 0.0387], [0.9296, 0.3651]]]],[0, 0, 0], 6, 1, false, Con14683), 
LCro91813 = cropping2D_layer(Con14683, 8, 2, 0, 0, Cro91813), 
LMul25207 = multiply_layer([Con7305,Cro91813], Mul25207), 
exec_layers([LMul47918,LRes21044,LFla31713,LGlo13535,LMul104,LRes39201,LRes66751,LCon7305,LAve46423,LCon14683,LCro91813,LMul25207],["Mul47918","Res21044","Fla31713","Glo13535","Mul104","Res39201","Res66751","Con7305","Ave46423","Con14683","Cro91813","Mul25207"],Mul25207,"Mul25207")

Actual (Unparsed): [[[[0.0000000, 0.0000000, 0.0000000]], [[0.0000000, 0.0000000, 0.0000000]]]]

Expected (Unparsed): [[[[0.0,0.0,0.0]],[[0.0,0.0,0.0]]]]

Actual:   [[[[0, 0, 0]], [[0, 0, 0]]]]

Expected: [[[[0, 0, 0]], [[0, 0, 0]]]]