import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Ave76305 = tf.keras.layers.Input(shape=([1, 1]))
in1Ave76305 = tf.keras.layers.Input(shape=([1, 1]))

Ave76305 = keras.layers.Average(name = 'Ave76305', )([in0Ave76305,in1Ave76305])
Res4330 = keras.layers.Reshape((1, 1, 1), name = 'Res4330', )(Ave76305)
Res17116 = keras.layers.Reshape((1, 1, 1, 1), name = 'Res17116', )(Res4330)
Zer62865 = keras.layers.ZeroPadding3D(padding=((1, 1), (1, 1), (1, 1)), name = 'Zer62865', )(Res17116)
Res7075 = keras.layers.Reshape((3, 3, 3), name = 'Res7075', )(Zer62865)
Dep21894 = keras.layers.DepthwiseConv2D((1, 3),strides=(1, 1), padding='valid', name = 'Dep21894', )(Res7075)
Fla38783 = keras.layers.Flatten(name = 'Fla38783', )(Dep21894)
Bat67691 = keras.layers.BatchNormalization(axis=1, epsilon=0.7569940079113204,  name = 'Bat67691', )(Fla38783)
model = tf.keras.models.Model(inputs=[in0Ave76305,in1Ave76305], outputs=Bat67691)
w = model.get_layer('Dep21894').get_weights() 
w[0] = np.array([[[[0.4071], [0.5856], [0.7312]], [[0.2839], [0.9967], [0.3601]], [[0.9717], [0.0711], [0.8464]]]])
w[1] = np.array([0, 0, 0])
model.get_layer('Dep21894').set_weights(w) 
w = model.get_layer('Bat67691').get_weights() 
w[0] = np.array([0.101, 0.2688, 0.0753, 0.6223, 0.2019, 0.7661, 0.474, 0.0154, 0.7169])
w[1] = np.array([0.1175, 0.7188, 0.8586, 0.4246, 0.613, 0.9908, 0.7663, 0.6168, 0.7478])
w[2] = np.array([0.4126, 0.7276, 0.8383, 0.8762, 0.1011, 0.5512, 0.1966, 0.3, 0.3151])
w[3] = np.array([0.1386, 0.1411, 0.0419, 0.1007, 0.8413, 0.0335, 0.0407, 0.7109, 0.2247])
model.get_layer('Bat67691').set_weights(w) 
in0Ave76305 = tf.constant([[[0.7675]]])
in1Ave76305 = tf.constant([[[0.7292]]])
print (np.array2string(model.predict([in0Ave76305,in1Ave76305],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Bat67691.png')

LAve76305 = average_layer([[[[0.7675]]], [[[0.7292]]]], Ave76305), 
LRes4330 = reshape_layer(Ave76305, [1, 1, 1], Res4330), 
LRes17116 = reshape_layer(Res4330, [1, 1, 1, 1], Res17116), 
LZer62865 = zero_padding3D_layer(Res17116, 1, 1, 1, 1, 1, 1, Zer62865), 
LRes7075 = reshape_layer(Zer62865, [3, 3, 3], Res7075), 
LDep21894 = depthwise_conv2D_layer(Res7075, 1, 3,[[[[0.4071], [0.5856], [0.7312]], [[0.2839], [0.9967], [0.3601]], [[0.9717], [0.0711], [0.8464]]]],[0, 0, 0], 1, 1, false, Dep21894), 
LFla38783 = flatten_layer(Dep21894, Fla38783), 
LBat67691 = batch_normalization_layer(Fla38783, 1, 0.7569940079113204, [0.101, 0.2688, 0.0753, 0.6223, 0.2019, 0.7661, 0.474, 0.0154, 0.7169], [0.1175, 0.7188, 0.8586, 0.4246, 0.613, 0.9908, 0.7663, 0.6168, 0.7478], [0.4126, 0.7276, 0.8383, 0.8762, 0.1011, 0.5512, 0.1966, 0.3, 0.3151], [0.1386, 0.1411, 0.0419, 0.1007, 0.8413, 0.0335, 0.0407, 0.7109, 0.2247], Bat67691), 
exec_layers([LAve76305,LRes4330,LRes17116,LZer62865,LRes7075,LDep21894,LFla38783,LBat67691],["Ave76305","Res4330","Res17116","Zer62865","Res7075","Dep21894","Fla38783","Bat67691"],Bat67691,"Bat67691")

Actual (Unparsed): [[0.0734653, 0.5124231, 0.7879764, -0.1641581, 0.7159722, 0.5158527, 0.6619617, 0.6129868, 0.5198084]]

Expected (Unparsed): [[0.07346530345859467,0.5124231138858734,0.7879763985748619,-0.16415805489800106,0.7159721642970672,0.515852747033047,0.6619617158851648,0.6129867557265418,0.5198083647719727]]

Actual:   [[0.0735, 0.5125, 0.788, -0.1641, 0.716, 0.5159, 0.662, 0.613, 0.5199]]

Expected: [[0.0735, 0.5125, 0.788, -0.1641, 0.716, 0.5159, 0.662, 0.613, 0.5199]]