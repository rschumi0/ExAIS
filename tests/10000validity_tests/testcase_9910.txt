import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Min75876 = tf.keras.layers.Input(shape=([1, 1, 1, 1]))
in1Min75876 = tf.keras.layers.Input(shape=([1, 1, 1, 1]))

Min75876 = keras.layers.Minimum(name = 'Min75876', )([in0Min75876,in1Min75876])
Fla80166 = keras.layers.Flatten(name = 'Fla80166', )(Min75876)
Thr28949 = keras.layers.ThresholdedReLU(theta=7.463669121172495, name = 'Thr28949', )(Fla80166)
model = tf.keras.models.Model(inputs=[in0Min75876,in1Min75876], outputs=Thr28949)
in0Min75876 = tf.constant([[[[[0.5945]]]]])
in1Min75876 = tf.constant([[[[[0.2246]]]]])
print (np.array2string(model.predict([in0Min75876,in1Min75876],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Thr28949.png')

LMin75876 = minimum_layer([[[[[[0.5945]]]]], [[[[[0.2246]]]]]], Min75876), 
LFla80166 = flatten_layer(Min75876, Fla80166), 
LThr28949 = thresholded_relu_layer(Fla80166, 7.463669121172495, Thr28949), 
exec_layers([LMin75876,LFla80166,LThr28949],["Min75876","Fla80166","Thr28949"],Thr28949,"Thr28949")

Actual (Unparsed): [[0.0000000]]

Expected (Unparsed): [[0]]

Actual:   [[0]]

Expected: [[0]]