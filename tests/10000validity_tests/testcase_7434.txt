import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Sub47693 = tf.keras.layers.Input(shape=([3, 2, 2]))
in1Sub47693 = tf.keras.layers.Input(shape=([3, 2, 2]))
in0Con30571 = tf.keras.layers.Input(shape=([3, 2, 2, 1]))
in0Ave13127 = tf.keras.layers.Input(shape=([1, 2, 1, 2]))
in1Ave13127 = tf.keras.layers.Input(shape=([1, 2, 1, 2]))

Sub47693 = keras.layers.Subtract(name = 'Sub47693', )([in0Sub47693,in1Sub47693])
Max88245 = keras.layers.MaxPool2D(pool_size=(1, 1), name = 'Max88245', )(Sub47693)
Res40734 = keras.layers.Reshape((3, 2, 2, 1), name = 'Res40734', )(Max88245)
Con30571 = keras.layers.Concatenate(axis=4, name = 'Con30571', )([Res40734,in0Con30571])
Ave13127 = keras.layers.Average(name = 'Ave13127', )([in0Ave13127,in1Ave13127])
Zer21109 = keras.layers.ZeroPadding3D(padding=((2, 0), (0, 0), (1, 0)), name = 'Zer21109', )(Ave13127)
Mul85018 = keras.layers.Multiply(name = 'Mul85018', )([Con30571,Zer21109])
model = tf.keras.models.Model(inputs=[in0Sub47693,in1Sub47693,in0Con30571,in0Ave13127,in1Ave13127], outputs=Mul85018)
in0Sub47693 = tf.constant([[[[0.936, 0.5304], [0.329, 0.8178]], [[0.6273, 0.7802], [0.1862, 0.1419]], [[0.9541, 0.3923], [0.8527, 0.2808]]]])
in1Sub47693 = tf.constant([[[[0.283, 0.7685], [0.9953, 0.445]], [[0.8755, 0.3094], [0.2929, 0.2135]], [[0.9026, 0.3961], [0.5438, 0.6787]]]])
in0Con30571 = tf.constant([[[[[0.6093], [0.5915]], [[0.8159], [0.4087]]], [[[0.4277], [0.0253]], [[0.6281], [0.6746]]], [[[0.2962], [0.1319]], [[0.8589], [0.4119]]]]])
in0Ave13127 = tf.constant([[[[[0.6679, 0.658]], [[0.5648, 0.8198]]]]])
in1Ave13127 = tf.constant([[[[[0.2273, 0.9206]], [[0.6656, 0.3492]]]]])
print (np.array2string(model.predict([in0Sub47693,in1Sub47693,in0Con30571,in0Ave13127,in1Ave13127],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Mul85018.png')

LSub47693 = subtract_layer([[[[0.936, 0.5304], [0.329, 0.8178]], [[0.6273, 0.7802], [0.1862, 0.1419]], [[0.9541, 0.3923], [0.8527, 0.2808]]]], [[[[0.283, 0.7685], [0.9953, 0.445]], [[0.8755, 0.3094], [0.2929, 0.2135]], [[0.9026, 0.3961], [0.5438, 0.6787]]]], Sub47693), 
LMax88245 = max_pool2D_layer(Sub47693, 1, 1, Max88245), 
LRes40734 = reshape_layer(Max88245, [3, 2, 2, 1], Res40734), 
LCon30571 = concatenate_layer([Res40734,[[[[[0.6093], [0.5915]], [[0.8159], [0.4087]]], [[[0.4277], [0.0253]], [[0.6281], [0.6746]]], [[[0.2962], [0.1319]], [[0.8589], [0.4119]]]]]], 4, Con30571), 
LAve13127 = average_layer([[[[[[0.6679, 0.658]], [[0.5648, 0.8198]]]]], [[[[[0.2273, 0.9206]], [[0.6656, 0.3492]]]]]], Ave13127), 
LZer21109 = zero_padding3D_layer(Ave13127, 2, 0, 0, 0, 1, 0, Zer21109), 
LMul85018 = multiply_layer([Con30571,Zer21109], Mul85018), 
exec_layers([LSub47693,LMax88245,LRes40734,LCon30571,LAve13127,LZer21109,LMul85018],["Sub47693","Max88245","Res40734","Con30571","Ave13127","Zer21109","Mul85018"],Mul85018,"Mul85018")

Actual (Unparsed): [[[[[0.0000000, 0.0000000], [-0.0000000, 0.0000000]], [[-0.0000000, 0.0000000], [0.0000000, 0.0000000]]], [[[-0.0000000, 0.0000000], [0.0000000, 0.0000000]], [[-0.0000000, 0.0000000], [-0.0000000, 0.0000000]]], [[[0.0000000, 0.0000000], [-0.0017009, 0.1041087]], [[0.0000000, 0.0000000], [-0.2447881, 0.2407556]]]]]

Expected (Unparsed): [[[[[0.0,0.0],[-0.0,0.0]],[[-0.0,0.0],[0.0,0.0]]],[[[-0.0,0.0],[0.0,0.0]],[[-0.0,0.0],[-0.0,0.0]]],[[[0.0,0.0],[-0.0017008800000000114,0.10410866999999999]],[[0.0,0.0],[-0.24478807999999996,0.24075555]]]]]

Actual:   [[[[[0, 0], [-0, 0]], [[-0, 0], [0, 0]]], [[[-0, 0], [0, 0]], [[-0, 0], [-0, 0]]], [[[0, 0], [-0.0017, 0.1042]], [[0, 0], [-0.2447, 0.2408]]]]]

Expected: [[[[[0, 0], [-0, 0]], [[-0, 0], [0, 0]]], [[[-0, 0], [0, 0]], [[-0, 0], [-0, 0]]], [[[0, 0], [-0.0017, 0.1042]], [[0, 0], [-0.2447, 0.2408]]]]]