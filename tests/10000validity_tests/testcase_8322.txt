import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Fla36983 = tf.keras.layers.Input(shape=([4]))
in0Con99986 = tf.keras.layers.Input(shape=([4, 5, 3]))
in0Zer2510 = tf.keras.layers.Input(shape=([1, 1, 4]))

Fla36983 = keras.layers.Flatten(name = 'Fla36983', )(in0Fla36983)
Res25976 = keras.layers.Reshape((4, 1), name = 'Res25976', )(Fla36983)
Res41880 = keras.layers.Reshape((4, 1, 1), name = 'Res41880', )(Res25976)
Zer23538 = keras.layers.ZeroPadding2D(padding=((0, 0), (4, 0)), name = 'Zer23538', )(Res41880)
Con99986 = keras.layers.Concatenate(axis=3, name = 'Con99986', )([Zer23538,in0Con99986])
Zer2510 = keras.layers.ZeroPadding2D(padding=((1, 1), (1, 1)), name = 'Zer2510', )(in0Zer2510)
Zer34948 = keras.layers.ZeroPadding2D(padding=((1, 0), (2, 0)), name = 'Zer34948', )(Zer2510)
Mul76578 = keras.layers.Multiply(name = 'Mul76578', )([Con99986,Zer34948])
Glo38184 = keras.layers.GlobalMaxPool2D(name = 'Glo38184', )(Mul76578)
Res76296 = keras.layers.Reshape((4, 1), name = 'Res76296', )(Glo38184)
Sim17770 = keras.layers.SimpleRNN(3,name = 'Sim17770', )(Res76296)
Res33769 = keras.layers.Reshape((3, 1), name = 'Res33769', )(Sim17770)
Res68037 = keras.layers.Reshape((3, 1, 1), name = 'Res68037', )(Res33769)
Res21640 = keras.layers.Reshape((3, 1, 1, 1), name = 'Res21640', )(Res68037)
Con83298 = keras.layers.Conv3DTranspose(4, (1, 1, 1),strides=(1, 8, 1), padding='same', name = 'Con83298', )(Res21640)
model = tf.keras.models.Model(inputs=[in0Fla36983,in0Con99986,in0Zer2510], outputs=Con83298)
w = model.get_layer('Sim17770').get_weights() 
w[0] = np.array([[6, 2, 5]])
w[1] = np.array([[8, 3, 1], [8, 5, 10], [2, 10, 4]])
w[2] = np.array([9, 3, 7])
model.get_layer('Sim17770').set_weights(w) 
w = model.get_layer('Con83298').get_weights() 
w[0] = np.array([[[[[0.5472], [0.2392], [0.4065], [0.4387]]]]])
w[1] = np.array([0, 0, 0, 0])
model.get_layer('Con83298').set_weights(w) 
in0Fla36983 = tf.constant([[1.5695, 1.0542, 1.5059, 1.6842]])
in0Con99986 = tf.constant([[[[0.5067, 0.9558, 0.4903], [0.8142, 0.8184, 0.4399], [0.6485, 0.1774, 0.9877], [0.5832, 0.0019, 0.0164], [0.7156, 0.525, 0.0278]], [[0.4986, 0.3117, 0.1853], [0.564, 0.472, 0.1649], [0.1469, 0.7519, 0.1083], [0.6708, 0.8928, 0.576], [0.2917, 0.3231, 0.3428]], [[0.6146, 0.3601, 0.4083], [0.9394, 0.8039, 0.689], [0.6303, 0.2365, 0.8576], [0.3913, 0.0356, 0.0641], [0.479, 0.1023, 0.8109]], [[0.8568, 0.6602, 0.4137], [0.8788, 0.6656, 0.1671], [0.028, 0.7338, 0.7025], [0.7816, 0.1161, 0.6259], [0.0087, 0.9865, 0.6759]]]])
in0Zer2510 = tf.constant([[[[1.8441, 1.4209, 1.1289, 1.0225]]]])
print (np.array2string(model.predict([in0Fla36983,in0Con99986,in0Zer2510],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Con83298.png')

LFla36983 = flatten_layer([[1.5695, 1.0542, 1.5059, 1.6842]], Fla36983), 
LRes25976 = reshape_layer(Fla36983, [4, 1], Res25976), 
LRes41880 = reshape_layer(Res25976, [4, 1, 1], Res41880), 
LZer23538 = zero_padding2D_layer(Res41880, 0, 0, 4, 0, Zer23538), 
LCon99986 = concatenate_layer([Zer23538,[[[[0.5067, 0.9558, 0.4903], [0.8142, 0.8184, 0.4399], [0.6485, 0.1774, 0.9877], [0.5832, 0.0019, 0.0164], [0.7156, 0.525, 0.0278]], [[0.4986, 0.3117, 0.1853], [0.564, 0.472, 0.1649], [0.1469, 0.7519, 0.1083], [0.6708, 0.8928, 0.576], [0.2917, 0.3231, 0.3428]], [[0.6146, 0.3601, 0.4083], [0.9394, 0.8039, 0.689], [0.6303, 0.2365, 0.8576], [0.3913, 0.0356, 0.0641], [0.479, 0.1023, 0.8109]], [[0.8568, 0.6602, 0.4137], [0.8788, 0.6656, 0.1671], [0.028, 0.7338, 0.7025], [0.7816, 0.1161, 0.6259], [0.0087, 0.9865, 0.6759]]]]], 3, Con99986), 
LZer2510 = zero_padding2D_layer([[[[1.8441, 1.4209, 1.1289, 1.0225]]]], 1, 1, 1, 1, Zer2510), 
LZer34948 = zero_padding2D_layer(Zer2510, 1, 0, 2, 0, Zer34948), 
LMul76578 = multiply_layer([Con99986,Zer34948], Mul76578), 
LGlo38184 = global_max_pool2D_layer(Mul76578, Glo38184), 
LRes76296 = reshape_layer(Glo38184, [4, 1], Res76296), 
LSim17770 = simple_rnn_layer(Res76296,[[6, 2, 5]],[[8, 3, 1], [8, 5, 10], [2, 10, 4]],[9, 3, 7], Sim17770), 
LRes33769 = reshape_layer(Sim17770, [3, 1], Res33769), 
LRes68037 = reshape_layer(Res33769, [3, 1, 1], Res68037), 
LRes21640 = reshape_layer(Res68037, [3, 1, 1, 1], Res21640), 
LCon83298 = conv3D_transpose_layer(Res21640, 1, 1, 1,[[[[[0.5472], [0.2392], [0.4065], [0.4387]]]]],[0, 0, 0, 0], 1, 8, 1, true, Con83298), 
exec_layers([LFla36983,LRes25976,LRes41880,LZer23538,LCon99986,LZer2510,LZer34948,LMul76578,LGlo38184,LRes76296,LSim17770,LRes33769,LRes68037,LRes21640,LCon83298],["Fla36983","Res25976","Res41880","Zer23538","Con99986","Zer2510","Zer34948","Mul76578","Glo38184","Res76296","Sim17770","Res33769","Res68037","Res21640","Con83298"],Con83298,"Con83298")

Actual (Unparsed): [[[[[0.5472000, 0.2392000, 0.4065000, 0.4387000]], [[0.0000000, 0.0000000, 0.0000000, 0.0000000]], [[0.0000000, 0.0000000, 0.0000000, 0.0000000]], [[0.0000000, 0.0000000, 0.0000000, 0.0000000]], [[0.0000000, 0.0000000, 0.0000000, 0.0000000]], [[0.0000000, 0.0000000, 0.0000000, 0.0000000]], [[0.0000000, 0.0000000, 0.0000000, 0.0000000]], [[0.0000000, 0.0000000, 0.0000000, 0.0000000]]], [[[0.5472000, 0.2392000, 0.4065000, 0.4387000]], [[0.0000000, 0.0000000, 0.0000000, 0.0000000]], [[0.0000000, 0.0000000, 0.0000000, 0.0000000]], [[0.0000000, 0.0000000, 0.0000000, 0.0000000]], [[0.0000000, 0.0000000, 0.0000000, 0.0000000]], [[0.0000000, 0.0000000, 0.0000000, 0.0000000]], [[0.0000000, 0.0000000, 0.0000000, 0.0000000]], [[0.0000000, 0.0000000, 0.0000000, 0.0000000]]], [[[0.5472000, 0.2392000, 0.4065000, 0.4387000]], [[0.0000000, 0.0000000, 0.0000000, 0.0000000]], [[0.0000000, 0.0000000, 0.0000000, 0.0000000]], [[0.0000000, 0.0000000, 0.0000000, 0.0000000]], [[0.0000000, 0.0000000, 0.0000000, 0.0000000]], [[0.0000000, 0.0000000, 0.0000000, 0.0000000]], [[0.0000000, 0.0000000, 0.0000000, 0.0000000]], [[0.0000000, 0.0000000, 0.0000000, 0.0000000]]]]]

Expected (Unparsed): [[[[[0.5472,0.2392,0.4065,0.4387]],[[0,0,0,0]],[[0,0,0,0]],[[0,0,0,0]],[[0,0,0,0]],[[0,0,0,0]],[[0,0,0,0]],[[0,0,0,0]]],[[[0.5472,0.2392,0.4065,0.4387]],[[0,0,0,0]],[[0,0,0,0]],[[0,0,0,0]],[[0,0,0,0]],[[0,0,0,0]],[[0,0,0,0]],[[0,0,0,0]]],[[[0.5472,0.2392,0.4065,0.4387]],[[0,0,0,0]],[[0,0,0,0]],[[0,0,0,0]],[[0,0,0,0]],[[0,0,0,0]],[[0,0,0,0]],[[0,0,0,0]]]]]

Actual:   [[[[[0.5472, 0.2392, 0.4065, 0.4387]], [[0, 0, 0, 0]], [[0, 0, 0, 0]], [[0, 0, 0, 0]], [[0, 0, 0, 0]], [[0, 0, 0, 0]], [[0, 0, 0, 0]], [[0, 0, 0, 0]]], [[[0.5472, 0.2392, 0.4065, 0.4387]], [[0, 0, 0, 0]], [[0, 0, 0, 0]], [[0, 0, 0, 0]], [[0, 0, 0, 0]], [[0, 0, 0, 0]], [[0, 0, 0, 0]], [[0, 0, 0, 0]]], [[[0.5472, 0.2392, 0.4065, 0.4387]], [[0, 0, 0, 0]], [[0, 0, 0, 0]], [[0, 0, 0, 0]], [[0, 0, 0, 0]], [[0, 0, 0, 0]], [[0, 0, 0, 0]], [[0, 0, 0, 0]]]]]

Expected: [[[[[0.5472, 0.2392, 0.4065, 0.4387]], [[0, 0, 0, 0]], [[0, 0, 0, 0]], [[0, 0, 0, 0]], [[0, 0, 0, 0]], [[0, 0, 0, 0]], [[0, 0, 0, 0]], [[0, 0, 0, 0]]], [[[0.5472, 0.2392, 0.4065, 0.4387]], [[0, 0, 0, 0]], [[0, 0, 0, 0]], [[0, 0, 0, 0]], [[0, 0, 0, 0]], [[0, 0, 0, 0]], [[0, 0, 0, 0]], [[0, 0, 0, 0]]], [[[0.5472, 0.2392, 0.4065, 0.4387]], [[0, 0, 0, 0]], [[0, 0, 0, 0]], [[0, 0, 0, 0]], [[0, 0, 0, 0]], [[0, 0, 0, 0]], [[0, 0, 0, 0]], [[0, 0, 0, 0]]]]]