import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Glo63868 = tf.keras.layers.Input(shape=([2, 2]))

Glo63868 = keras.layers.GlobalMaxPool1D(name = 'Glo63868', )(in0Glo63868)
Res91134 = keras.layers.Reshape((2, 1), name = 'Res91134', )(Glo63868)
Cro6990 = keras.layers.Cropping1D(cropping=((1, 0)), name = 'Cro6990', )(Res91134)
model = tf.keras.models.Model(inputs=[in0Glo63868], outputs=Cro6990)
in0Glo63868 = tf.constant([[[1.2892, 1.4407], [1.3738, 1.5162]]])
print (np.array2string(model.predict([in0Glo63868],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Cro6990.png')

LGlo63868 = global_max_pool1D_layer([[[1.2892, 1.4407], [1.3738, 1.5162]]], Glo63868), 
LRes91134 = reshape_layer(Glo63868, [2, 1], Res91134), 
LCro6990 = cropping1D_layer(Res91134, 1, 0, Cro6990), 
exec_layers([LGlo63868,LRes91134,LCro6990],["Glo63868","Res91134","Cro6990"],Cro6990,"Cro6990")

Actual (Unparsed): [[[1.5161999]]]

Expected (Unparsed): [[[1.5162]]]

Actual:   [[[1.5162]]]

Expected: [[[1.5162]]]