import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Mul27904 = tf.keras.layers.Input(shape=([2, 1, 2]))
in1Mul27904 = tf.keras.layers.Input(shape=([2, 1, 2]))

Mul27904 = keras.layers.Multiply(name = 'Mul27904', )([in0Mul27904,in1Mul27904])
Res68100 = keras.layers.Reshape((2, 1, 2, 1), name = 'Res68100', )(Mul27904)
Up_77679 = keras.layers.UpSampling3D(size=(1, 2, 2), name = 'Up_77679', )(Res68100)
model = tf.keras.models.Model(inputs=[in0Mul27904,in1Mul27904], outputs=Up_77679)
in0Mul27904 = tf.constant([[[[0.4937, 0.4981]], [[0.2301, 0.6021]]]])
in1Mul27904 = tf.constant([[[[0.4654, 0.6886]], [[0.2557, 0.1433]]]])
print (np.array2string(model.predict([in0Mul27904,in1Mul27904],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Up_77679.png')

LMul27904 = multiply_layer([[[[[0.4937, 0.4981]], [[0.2301, 0.6021]]]], [[[[0.4654, 0.6886]], [[0.2557, 0.1433]]]]], Mul27904), 
LRes68100 = reshape_layer(Mul27904, [2, 1, 2, 1], Res68100), 
LUp_77679 = up_sampling3D_layer(Res68100, 1, 2, 2, Up_77679), 
exec_layers([LMul27904,LRes68100,LUp_77679],["Mul27904","Res68100","Up_77679"],Up_77679,"Up_77679")

Actual (Unparsed): [[[[[0.2297680], [0.2297680], [0.3429917], [0.3429917]], [[0.2297680], [0.2297680], [0.3429917], [0.3429917]]], [[[0.0588366], [0.0588366], [0.0862809], [0.0862809]], [[0.0588366], [0.0588366], [0.0862809], [0.0862809]]]]]

Expected (Unparsed): [[[[[0.22976798],[0.22976798],[0.34299166],[0.34299166]],[[0.22976798],[0.22976798],[0.34299166],[0.34299166]]],[[[0.05883657],[0.05883657],[0.08628093],[0.08628093]],[[0.05883657],[0.05883657],[0.08628093],[0.08628093]]]]]

Actual:   [[[[[0.2298], [0.2298], [0.343], [0.343]], [[0.2298], [0.2298], [0.343], [0.343]]], [[[0.0589], [0.0589], [0.0863], [0.0863]], [[0.0589], [0.0589], [0.0863], [0.0863]]]]]

Expected: [[[[[0.2298], [0.2298], [0.343], [0.343]], [[0.2298], [0.2298], [0.343], [0.343]]], [[[0.0589], [0.0589], [0.0863], [0.0863]], [[0.0589], [0.0589], [0.0863], [0.0863]]]]]