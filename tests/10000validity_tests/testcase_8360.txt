import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0PRe27702 = tf.keras.layers.Input(shape=([1, 1, 2, 1]))

PRe27702 = keras.layers.PReLU(name = 'PRe27702', input_shape=(1, 1, 2, 1))(in0PRe27702)
Res74699 = keras.layers.Reshape((1, 1, 2), name = 'Res74699', )(PRe27702)
Res34739 = keras.layers.Reshape((1, 2), name = 'Res34739', )(Res74699)
Up_70013 = keras.layers.UpSampling1D(size=(1), name = 'Up_70013', )(Res34739)
model = tf.keras.models.Model(inputs=[in0PRe27702], outputs=Up_70013)
w = model.get_layer('PRe27702').get_weights() 
w[0] = np.array([[[[0.2432], [0.4307]]]])
model.get_layer('PRe27702').set_weights(w) 
in0PRe27702 = tf.constant([[[[[0.3164], [0.6441]]]]])
print (np.array2string(model.predict([in0PRe27702],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Up_70013.png')

LPRe27702 = prelu_layer([[[[[0.3164], [0.6441]]]]], [[[[0.2432], [0.4307]]]], PRe27702), 
LRes74699 = reshape_layer(PRe27702, [1, 1, 2], Res74699), 
LRes34739 = reshape_layer(Res74699, [1, 2], Res34739), 
LUp_70013 = up_sampling1D_layer(Res34739, 1, Up_70013), 
exec_layers([LPRe27702,LRes74699,LRes34739,LUp_70013],["PRe27702","Res74699","Res34739","Up_70013"],Up_70013,"Up_70013")

Actual (Unparsed): [[[0.3164000, 0.6441000]]]

Expected (Unparsed): [[[0.3164,0.6441]]]

Actual:   [[[0.3164, 0.6441]]]

Expected: [[[0.3164, 0.6441]]]