import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Dot20033 = tf.keras.layers.Input(shape=([2]))
in1Dot20033 = tf.keras.layers.Input(shape=([2]))

Dot20033 = keras.layers.Dot(axes=(1, 1), name = 'Dot20033', )([in0Dot20033,in1Dot20033])
Res86195 = keras.layers.Reshape((1, 1), name = 'Res86195', )(Dot20033)
Res83608 = keras.layers.Reshape((1, 1, 1), name = 'Res83608', )(Res86195)
Con73877 = keras.layers.Conv2DTranspose(2, (1, 1),strides=(1, 1), padding='valid', name = 'Con73877', )(Res83608)
model = tf.keras.models.Model(inputs=[in0Dot20033,in1Dot20033], outputs=Con73877)
w = model.get_layer('Con73877').get_weights() 
w[0] = np.array([[[[0.5492], [0.7998]]]])
w[1] = np.array([0, 0])
model.get_layer('Con73877').set_weights(w) 
in0Dot20033 = tf.constant([[0.0234, 0.5827]])
in1Dot20033 = tf.constant([[0.6323, 0.4663]])
print (np.array2string(model.predict([in0Dot20033,in1Dot20033],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Con73877.png')

LDot20033 = dot_layer([[0.0234, 0.5827]], [[0.6323, 0.4663]], 1, 1, Dot20033), 
LRes86195 = reshape_layer(Dot20033, [1, 1], Res86195), 
LRes83608 = reshape_layer(Res86195, [1, 1, 1], Res83608), 
LCon73877 = conv2D_transpose_layer(Res83608, 1, 1,[[[[0.5492], [0.7998]]]],[0, 0], 1, 1, false, Con73877), 
exec_layers([LDot20033,LRes86195,LRes83608,LCon73877],["Dot20033","Res86195","Res83608","Con73877"],Con73877,"Con73877")

Actual (Unparsed): [[[[0.1573507, 0.2291498]]]]

Expected (Unparsed): [[[[0.157350649436,0.229149762234]]]]

Actual:   [[[[0.1574, 0.2292]]]]

Expected: [[[[0.1574, 0.2292]]]]