import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Sub27870 = tf.keras.layers.Input(shape=([3, 3, 2, 3]))
in1Sub27870 = tf.keras.layers.Input(shape=([3, 3, 2, 3]))
in0Ave94123 = tf.keras.layers.Input(shape=([2, 1, 2, 2]))
in1Ave94123 = tf.keras.layers.Input(shape=([2, 1, 2, 2]))
in0Con80194 = tf.keras.layers.Input(shape=([3, 3, 2, 1]))

Sub27870 = keras.layers.Subtract(name = 'Sub27870', )([in0Sub27870,in1Sub27870])
Ave94123 = keras.layers.Average(name = 'Ave94123', )([in0Ave94123,in1Ave94123])
Zer44063 = keras.layers.ZeroPadding3D(padding=((1, 0), (2, 0), (0, 0)), name = 'Zer44063', )(Ave94123)
Con80194 = keras.layers.Concatenate(axis=4, name = 'Con80194', )([Zer44063,in0Con80194])
Mul37073 = keras.layers.Multiply(name = 'Mul37073', )([Sub27870,Con80194])
Res67676 = keras.layers.Reshape((3, 3, 6), name = 'Res67676', )(Mul37073)
Cro15315 = keras.layers.Cropping2D(cropping=((2, 0), (2, 0)), name = 'Cro15315', )(Res67676)
model = tf.keras.models.Model(inputs=[in0Sub27870,in1Sub27870,in0Ave94123,in1Ave94123,in0Con80194], outputs=Cro15315)
in0Sub27870 = tf.constant([[[[[0.751, 0.4238, 0.6572], [0.8997, 0.223, 0.9938]], [[0.096, 0.5568, 0.9846], [0.1866, 0.2095, 0.4634]], [[0.3829, 0.8564, 0.7894], [0.6436, 0.9703, 0.2591]]], [[[0.964, 0.4848, 0.2086], [0.3381, 0.7297, 0.3557]], [[0.5136, 0.0248, 0.9067], [0.1209, 0.1093, 0.7585]], [[0.8781, 0.5753, 0.0772], [0.0081, 0.7815, 0.4131]]], [[[0.932, 0.4391, 0.656], [0.7226, 0.0338, 0.5111]], [[0.4159, 0.1555, 0.1532], [0.7137, 0.4255, 0.8588]], [[0.5489, 0.3518, 0.8731], [0.9747, 0.9851, 0.7787]]]]])
in1Sub27870 = tf.constant([[[[[0.1117, 0.0179, 0.2229], [0.24, 0.6225, 0.7193]], [[0.6486, 0.0404, 0.2816], [0.9906, 0.8716, 0.5741]], [[0.17, 0.5071, 0.318], [0.8703, 0.248, 0.0338]]], [[[0.0736, 0.6955, 0.839], [0.0264, 0.4912, 0.9298]], [[0.0131, 0.2265, 0.3639], [0.8853, 0.6433, 0.9411]], [[0.7894, 0.4729, 0.1192], [0.4472, 0.2029, 0.6382]]], [[[0.4446, 0.4948, 0.4389], [0.2873, 0.7227, 0.193]], [[0.0982, 0.9991, 0.8345], [0.6636, 0.9415, 0.1852]], [[0.4574, 0.7149, 0.5105], [0.997, 0.4335, 0.4544]]]]])
in0Ave94123 = tf.constant([[[[[0.6843, 0.2026], [0.904, 0.1906]]], [[[0.4198, 0.4629], [0.5475, 0.1963]]]]])
in1Ave94123 = tf.constant([[[[[0.4959, 0.9178], [0.7321, 0.9091]]], [[[0.6837, 0.7641], [0.3742, 0.9224]]]]])
in0Con80194 = tf.constant([[[[[0.9164], [0.4522]], [[0.0028], [0.2033]], [[0.0904], [0.9985]]], [[[0.7916], [0.0162]], [[0.1479], [0.552]], [[0.1672], [0.9342]]], [[[0.437], [0.2996]], [[0.8271], [0.977]], [[0.4898], [0.8745]]]]])
print (np.array2string(model.predict([in0Sub27870,in1Sub27870,in0Ave94123,in1Ave94123,in0Con80194],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Cro15315.png')

LSub27870 = subtract_layer([[[[[0.751, 0.4238, 0.6572], [0.8997, 0.223, 0.9938]], [[0.096, 0.5568, 0.9846], [0.1866, 0.2095, 0.4634]], [[0.3829, 0.8564, 0.7894], [0.6436, 0.9703, 0.2591]]], [[[0.964, 0.4848, 0.2086], [0.3381, 0.7297, 0.3557]], [[0.5136, 0.0248, 0.9067], [0.1209, 0.1093, 0.7585]], [[0.8781, 0.5753, 0.0772], [0.0081, 0.7815, 0.4131]]], [[[0.932, 0.4391, 0.656], [0.7226, 0.0338, 0.5111]], [[0.4159, 0.1555, 0.1532], [0.7137, 0.4255, 0.8588]], [[0.5489, 0.3518, 0.8731], [0.9747, 0.9851, 0.7787]]]]], [[[[[0.1117, 0.0179, 0.2229], [0.24, 0.6225, 0.7193]], [[0.6486, 0.0404, 0.2816], [0.9906, 0.8716, 0.5741]], [[0.17, 0.5071, 0.318], [0.8703, 0.248, 0.0338]]], [[[0.0736, 0.6955, 0.839], [0.0264, 0.4912, 0.9298]], [[0.0131, 0.2265, 0.3639], [0.8853, 0.6433, 0.9411]], [[0.7894, 0.4729, 0.1192], [0.4472, 0.2029, 0.6382]]], [[[0.4446, 0.4948, 0.4389], [0.2873, 0.7227, 0.193]], [[0.0982, 0.9991, 0.8345], [0.6636, 0.9415, 0.1852]], [[0.4574, 0.7149, 0.5105], [0.997, 0.4335, 0.4544]]]]], Sub27870), 
LAve94123 = average_layer([[[[[[0.6843, 0.2026], [0.904, 0.1906]]], [[[0.4198, 0.4629], [0.5475, 0.1963]]]]], [[[[[0.4959, 0.9178], [0.7321, 0.9091]]], [[[0.6837, 0.7641], [0.3742, 0.9224]]]]]], Ave94123), 
LZer44063 = zero_padding3D_layer(Ave94123, 1, 0, 2, 0, 0, 0, Zer44063), 
LCon80194 = concatenate_layer([Zer44063,[[[[[0.9164], [0.4522]], [[0.0028], [0.2033]], [[0.0904], [0.9985]]], [[[0.7916], [0.0162]], [[0.1479], [0.552]], [[0.1672], [0.9342]]], [[[0.437], [0.2996]], [[0.8271], [0.977]], [[0.4898], [0.8745]]]]]], 4, Con80194), 
LMul37073 = multiply_layer([Sub27870,Con80194], Mul37073), 
LRes67676 = reshape_layer(Mul37073, [3, 3, 6], Res67676), 
LCro15315 = cropping2D_layer(Res67676, 2, 0, 2, 0, Cro15315), 
exec_layers([LSub27870,LAve94123,LZer44063,LCon80194,LMul37073,LRes67676,LCro15315],["Sub27870","Ave94123","Zer44063","Con80194","Mul37073","Res67676","Cro15315"],Cro15315,"Cro15315")

Actual (Unparsed): [[[[0.0504851, -0.2227619, 0.1776015, -0.0102770, 0.3085374, 0.2836003]]]]

Expected (Unparsed): [[[[0.05048512500000004,-0.22276184999999996,0.17760148000000003,-0.010276954999999994,0.30853746,0.28360034999999995]]]]

Actual:   [[[[0.0505, -0.2227, 0.1777, -0.0102, 0.3086, 0.2837]]]]

Expected: [[[[0.0505, -0.2227, 0.1777, -0.0102, 0.3086, 0.2837]]]]