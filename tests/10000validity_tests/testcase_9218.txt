import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Min81463 = tf.keras.layers.Input(shape=([1, 1, 1]))
in1Min81463 = tf.keras.layers.Input(shape=([1, 1, 1]))
in0Con47468 = tf.keras.layers.Input(shape=([1]))
in0Ave55805 = tf.keras.layers.Input(shape=([1, 2, 2, 2]))
in1Ave55805 = tf.keras.layers.Input(shape=([1, 2, 2, 2]))

Min81463 = keras.layers.Minimum(name = 'Min81463', )([in0Min81463,in1Min81463])
Res28688 = keras.layers.Reshape((1, 1), name = 'Res28688', )(Min81463)
Fla25625 = keras.layers.Flatten(name = 'Fla25625', )(Res28688)
Con47468 = keras.layers.Concatenate(axis=1, name = 'Con47468', )([Fla25625,in0Con47468])
Ave55805 = keras.layers.Average(name = 'Ave55805', )([in0Ave55805,in1Ave55805])
Res44042 = keras.layers.Reshape((1, 2, 4), name = 'Res44042', )(Ave55805)
Res97376 = keras.layers.Reshape((1, 8), name = 'Res97376', )(Res44042)
LST89317 = keras.layers.LSTM(2,recurrent_activation='sigmoid', name = 'LST89317', )(Res97376)
Dot54402 = keras.layers.Dot(axes=(1, 1), name = 'Dot54402', )([Con47468,LST89317])
model = tf.keras.models.Model(inputs=[in0Min81463,in1Min81463,in0Con47468,in0Ave55805,in1Ave55805], outputs=Dot54402)
w = model.get_layer('LST89317').get_weights() 
w[0] = np.array([[1, 3, 3, 5, 1, 7, 2, 4], [2, 2, 3, 2, 8, 7, 3, 9], [8, 2, 2, 5, 4, 5, 4, 9], [8, 10, 10, 4, 9, 9, 5, 8], [4, 10, 5, 4, 3, 7, 3, 3], [2, 7, 10, 9, 1, 7, 9, 5], [1, 6, 8, 9, 2, 3, 5, 8], [4, 10, 3, 9, 5, 6, 8, 3]])
w[1] = np.array([[6, 1, 2, 2, 9, 1, 6, 9], [6, 5, 5, 4, 3, 5, 10, 4]])
w[2] = np.array([1, 6, 5, 2, 4, 9, 8, 2])
model.get_layer('LST89317').set_weights(w) 
in0Min81463 = tf.constant([[[[0.3575]]]])
in1Min81463 = tf.constant([[[[0.5878]]]])
in0Con47468 = tf.constant([[0.8643]])
in0Ave55805 = tf.constant([[[[[0.0298, 0.1738], [0.4075, 0.1829]], [[0.0789, 0.4393], [0.4893, 0.8696]]]]])
in1Ave55805 = tf.constant([[[[[0.2953, 0.7545], [0.9679, 0.013]], [[0.0684, 0.9049], [0.4779, 0.2878]]]]])
print (np.array2string(model.predict([in0Min81463,in1Min81463,in0Con47468,in0Ave55805,in1Ave55805],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Dot54402.png')

LMin81463 = minimum_layer([[[[[0.3575]]]], [[[[0.5878]]]]], Min81463), 
LRes28688 = reshape_layer(Min81463, [1, 1], Res28688), 
LFla25625 = flatten_layer(Res28688, Fla25625), 
LCon47468 = concatenate_layer([Fla25625,[[0.8643]]], 1, Con47468), 
LAve55805 = average_layer([[[[[[0.0298, 0.1738], [0.4075, 0.1829]], [[0.0789, 0.4393], [0.4893, 0.8696]]]]], [[[[[0.2953, 0.7545], [0.9679, 0.013]], [[0.0684, 0.9049], [0.4779, 0.2878]]]]]], Ave55805), 
LRes44042 = reshape_layer(Ave55805, [1, 2, 4], Res44042), 
LRes97376 = reshape_layer(Res44042, [1, 8], Res97376), 
LLST89317 = lstm_layer(Res97376,[[1, 3, 3, 5, 1, 7, 2, 4], [2, 2, 3, 2, 8, 7, 3, 9], [8, 2, 2, 5, 4, 5, 4, 9], [8, 10, 10, 4, 9, 9, 5, 8], [4, 10, 5, 4, 3, 7, 3, 3], [2, 7, 10, 9, 1, 7, 9, 5], [1, 6, 8, 9, 2, 3, 5, 8], [4, 10, 3, 9, 5, 6, 8, 3]],[[6, 1, 2, 2, 9, 1, 6, 9], [6, 5, 5, 4, 3, 5, 10, 4]],[1, 6, 5, 2, 4, 9, 8, 2], LST89317), 
LDot54402 = dot_layer(Con47468,LST89317, 1, 1, Dot54402), 
exec_layers([LMin81463,LRes28688,LFla25625,LCon47468,LAve55805,LRes44042,LRes97376,LLST89317,LDot54402],["Min81463","Res28688","Fla25625","Con47468","Ave55805","Res44042","Res97376","LST89317","Dot54402"],Dot54402,"Dot54402")

Actual (Unparsed): [[0.9305153]]

Expected (Unparsed): [[0.9305153306136644]]

Actual:   [[0.9306]]

Expected: [[0.9306]]