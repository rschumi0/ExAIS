import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Sub1660 = tf.keras.layers.Input(shape=([3, 3, 3]))
in1Sub1660 = tf.keras.layers.Input(shape=([3, 3, 3]))
in0Den42314 = tf.keras.layers.Input(shape=([4, 2]))
in0Con64083 = tf.keras.layers.Input(shape=([26]))

Sub1660 = keras.layers.Subtract(name = 'Sub1660', )([in0Sub1660,in1Sub1660])
Lay89485 = keras.layers.LayerNormalization(axis=1, epsilon=1.7123824292810987, name = 'Lay89485', )(Sub1660)
Res39049 = keras.layers.Reshape((3, 9), name = 'Res39049', )(Lay89485)
Fla48250 = keras.layers.Flatten(name = 'Fla48250', )(Res39049)
Den42314 = keras.layers.Dense(3,name = 'Den42314', )(in0Den42314)
LST10608 = keras.layers.LSTM(1,recurrent_activation='sigmoid', name = 'LST10608', )(Den42314)
Con64083 = keras.layers.Concatenate(axis=1, name = 'Con64083', )([LST10608,in0Con64083])
Sub95768 = keras.layers.Subtract(name = 'Sub95768', )([Fla48250,Con64083])
model = tf.keras.models.Model(inputs=[in0Sub1660,in1Sub1660,in0Den42314,in0Con64083], outputs=Sub95768)
w = model.get_layer('Den42314').get_weights() 
w[0] = np.array([[0.7601, 0.6077, 0.5978], [0.2333, 0.3708, 0.5398]])
w[1] = np.array([0.206, 0.9374, 0.6706])
model.get_layer('Den42314').set_weights(w) 
w = model.get_layer('LST10608').get_weights() 
w[0] = np.array([[3, 8, 10, 9], [1, 10, 3, 5], [10, 3, 1, 1]])
w[1] = np.array([[3, 10, 3, 4]])
w[2] = np.array([7, 9, 10, 2])
model.get_layer('LST10608').set_weights(w) 
in0Sub1660 = tf.constant([[[[0.9001, 0.8683, 0.5844], [0.7789, 0.6625, 0.8069], [0.3647, 0.1459, 0.7271]], [[0.34, 0.6026, 0.4176], [0.6452, 0.2045, 0.4856], [0.4933, 0.0107, 0.7511]], [[0.0958, 0.0399, 0.485], [0.2717, 0.6157, 0.5512], [0.7226, 0.4359, 0.4115]]]])
in1Sub1660 = tf.constant([[[[0.4693, 0.293, 0.3644], [0.0954, 0.0169, 0.717], [0.9302, 0.8372, 0.2207]], [[0.2927, 0.7233, 0.3874], [0.7114, 0.4735, 0.741], [0.5052, 0.2842, 0.1767]], [[0.273, 0.7418, 0.8699], [0.554, 0.6381, 0.8188], [0.5256, 0.4312, 0.4002]]]])
in0Den42314 = tf.constant([[[0.1656, 0.2868], [0.8423, 0.4419], [0.5282, 0.24], [0.8194, 0.8059]]])
in0Con64083 = tf.constant([[0.2371, 0.6068, 0.3007, 0.0663, 0.0274, 0.3286, 0.9584, 0.7715, 0.1923, 0.1541, 0.5974, 0.7242, 0.7293, 0.8074, 0.64, 0.0942, 0.192, 0.4967, 0.1652, 0.8232, 0.7424, 0.7624, 0.8759, 0.2088, 0.4927, 0.7322]])
print (np.array2string(model.predict([in0Sub1660,in1Sub1660,in0Den42314,in0Con64083],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Sub95768.png')

LSub1660 = subtract_layer([[[[0.9001, 0.8683, 0.5844], [0.7789, 0.6625, 0.8069], [0.3647, 0.1459, 0.7271]], [[0.34, 0.6026, 0.4176], [0.6452, 0.2045, 0.4856], [0.4933, 0.0107, 0.7511]], [[0.0958, 0.0399, 0.485], [0.2717, 0.6157, 0.5512], [0.7226, 0.4359, 0.4115]]]], [[[[0.4693, 0.293, 0.3644], [0.0954, 0.0169, 0.717], [0.9302, 0.8372, 0.2207]], [[0.2927, 0.7233, 0.3874], [0.7114, 0.4735, 0.741], [0.5052, 0.2842, 0.1767]], [[0.273, 0.7418, 0.8699], [0.554, 0.6381, 0.8188], [0.5256, 0.4312, 0.4002]]]], Sub1660), 
LLay89485 = layer_normalization_layer(Sub1660, 1, 1.7123824292810987, Lay89485), 
LRes39049 = reshape_layer(Lay89485, [3, 9], Res39049), 
LFla48250 = flatten_layer(Res39049, Fla48250), 
LDen42314 = dense_layer([[[0.1656, 0.2868], [0.8423, 0.4419], [0.5282, 0.24], [0.8194, 0.8059]]], [[0.7601, 0.6077, 0.5978], [0.2333, 0.3708, 0.5398]],[0.206, 0.9374, 0.6706], Den42314), 
LLST10608 = lstm_layer(Den42314,[[3, 8, 10, 9], [1, 10, 3, 5], [10, 3, 1, 1]],[[3, 10, 3, 4]],[7, 9, 10, 2], LST10608), 
LCon64083 = concatenate_layer([LST10608,[[0.2371, 0.6068, 0.3007, 0.0663, 0.0274, 0.3286, 0.9584, 0.7715, 0.1923, 0.1541, 0.5974, 0.7242, 0.7293, 0.8074, 0.64, 0.0942, 0.192, 0.4967, 0.1652, 0.8232, 0.7424, 0.7624, 0.8759, 0.2088, 0.4927, 0.7322]]], 1, Con64083), 
LSub95768 = subtract_layer(Fla48250,Con64083, Sub95768), 
exec_layers([LSub1660,LLay89485,LRes39049,LFla48250,LDen42314,LLST10608,LCon64083,LSub95768],["Sub1660","Lay89485","Res39049","Fla48250","Den42314","LST10608","Con64083","Sub95768"],Sub95768,"Sub95768")

Actual (Unparsed): [[-0.7512882, 0.2297431, -0.4080360, 0.1159467, 0.3203334, 0.1502049, -0.6541543, -1.2355727, -0.6646524, -0.2320766, -0.1812607, -0.5410498, -0.8537964, -1.0129843, -0.8915778, -0.5547340, -0.0594601, -0.0341178, -0.7049645, -0.6048823, -1.0783142, -1.0294503, -0.8653491, -0.9693270, 0.0314884, -0.2502672, -0.9969299]]

Expected (Unparsed): [[-0.7512881989069973,0.22974307355754178,-0.40803602030480146,0.11594669716486267,0.32033336256399325,0.15020487606538252,-0.654154367834227,-1.2355726658821364,-0.6646524241230255,-0.2320766364387314,-0.18126074642428835,-0.5410497739708969,-0.8537964311321309,-1.0129842288697768,-0.8915778375318425,-0.5547339939271652,-0.05946009682425366,-0.034117758988624236,-0.7049644643726031,-0.6048823271332534,-1.0783142057243018,-1.0294502660327316,-0.8653491336942163,-0.96932703853354,0.03148836176139197,-0.2502672372936099,-0.99692981688835]]

Actual:   [[-0.7512, 0.2298, -0.408, 0.116, 0.3204, 0.1503, -0.6541, -1.2355, -0.6646, -0.232, -0.1812, -0.541, -0.8537, -1.0129, -0.8915, -0.5547, -0.0594, -0.0341, -0.7049, -0.6048, -1.0783, -1.0294, -0.8653, -0.9693, 0.0315, -0.2502, -0.9969]]

Expected: [[-0.7512, 0.2298, -0.408, 0.116, 0.3204, 0.1503, -0.6541, -1.2355, -0.6646, -0.232, -0.1812, -0.541, -0.8537, -1.0129, -0.8915, -0.5547, -0.0594, -0.0341, -0.7049, -0.6048, -1.0783, -1.0294, -0.8653, -0.9693, 0.0315, -0.2502, -0.9969]]