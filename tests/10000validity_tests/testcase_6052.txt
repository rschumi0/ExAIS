import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Min34503 = tf.keras.layers.Input(shape=([2, 2]))
in1Min34503 = tf.keras.layers.Input(shape=([2, 2]))
in0Con29096 = tf.keras.layers.Input(shape=([2]))
in0Zer12096 = tf.keras.layers.Input(shape=([3, 4, 1]))

Min34503 = keras.layers.Minimum(name = 'Min34503', )([in0Min34503,in1Min34503])
GRU38666 = keras.layers.GRU(2,reset_after=False, recurrent_activation='sigmoid', name = 'GRU38666', )(Min34503)
Den32361 = keras.layers.Dense(4,name = 'Den32361', )(GRU38666)
Con29096 = keras.layers.Concatenate(axis=1, name = 'Con29096', )([Den32361,in0Con29096])
Zer12096 = keras.layers.ZeroPadding2D(padding=((1, 1), (1, 1)), name = 'Zer12096', )(in0Zer12096)
Res23912 = keras.layers.Reshape((5, 6), name = 'Res23912', )(Zer12096)
Glo58947 = keras.layers.GlobalMaxPool1D(name = 'Glo58947', )(Res23912)
Ave54762 = keras.layers.Average(name = 'Ave54762', )([Con29096,Glo58947])
model = tf.keras.models.Model(inputs=[in0Min34503,in1Min34503,in0Con29096,in0Zer12096], outputs=Ave54762)
w = model.get_layer('GRU38666').get_weights() 
w[0] = np.array([[1, 10, 6, 8, 9, 5], [6, 1, 6, 8, 7, 2]])
w[1] = np.array([[7, 9, 10, 7, 10, 6], [7, 6, 1, 10, 3, 9]])
w[2] = np.array([5, 2, 3, 3, 1, 8])
model.get_layer('GRU38666').set_weights(w) 
w = model.get_layer('Den32361').get_weights() 
w[0] = np.array([[0.5223, 0.2197, 0.3818, 0.9427], [0.2967, 0.638, 0.2573, 0.6228]])
w[1] = np.array([0.3582, 0.5975, 0.0927, 0.2571])
model.get_layer('Den32361').set_weights(w) 
in0Min34503 = tf.constant([[[0.8709, 0.6446], [0.9831, 0.4862]]])
in1Min34503 = tf.constant([[[0.1039, 0.6061], [0.2615, 0.3257]]])
in0Con29096 = tf.constant([[0.2279, 0.7255]])
in0Zer12096 = tf.constant([[[[1.5528], [1.2013], [1.8237], [1.8151]], [[1.1404], [1.8236], [1.6012], [1.9087]], [[1.6177], [1.2348], [1.6213], [1.0256]]]])
print (np.array2string(model.predict([in0Min34503,in1Min34503,in0Con29096,in0Zer12096],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Ave54762.png')

LMin34503 = minimum_layer([[[[0.8709, 0.6446], [0.9831, 0.4862]]], [[[0.1039, 0.6061], [0.2615, 0.3257]]]], Min34503), 
LGRU38666 = gru_layer(Min34503,[[1, 10, 6, 8, 9, 5], [6, 1, 6, 8, 7, 2]],[[7, 9, 10, 7, 10, 6], [7, 6, 1, 10, 3, 9]],[5, 2, 3, 3, 1, 8], false, GRU38666), 
LDen32361 = dense_layer(GRU38666, [[0.5223, 0.2197, 0.3818, 0.9427], [0.2967, 0.638, 0.2573, 0.6228]],[0.3582, 0.5975, 0.0927, 0.2571], Den32361), 
LCon29096 = concatenate_layer([Den32361,[[0.2279, 0.7255]]], 1, Con29096), 
LZer12096 = zero_padding2D_layer([[[[1.5528], [1.2013], [1.8237], [1.8151]], [[1.1404], [1.8236], [1.6012], [1.9087]], [[1.6177], [1.2348], [1.6213], [1.0256]]]], 1, 1, 1, 1, Zer12096), 
LRes23912 = reshape_layer(Zer12096, [5, 6], Res23912), 
LGlo58947 = global_max_pool1D_layer(Res23912, Glo58947), 
LAve54762 = average_layer([Con29096,Glo58947], Ave54762), 
exec_layers([LMin34503,LGRU38666,LDen32361,LCon29096,LZer12096,LRes23912,LGlo58947,LAve54762],["Min34503","GRU38666","Den32361","Con29096","Zer12096","Res23912","Glo58947","Ave54762"],Ave54762,"Ave54762")

Actual (Unparsed): [[0.1839587, 1.1176983, 0.9623360, 1.0505395, 1.0683000, 0.3627500]]

Expected (Unparsed): [[0.18395874165221618,1.1176983307395678,0.9623360057148456,1.0505394887757105,1.0683,0.36275]]

Actual:   [[0.184, 1.1177, 0.9624, 1.0506, 1.0683, 0.3628]]

Expected: [[0.184, 1.1177, 0.9624, 1.0506, 1.0683, 0.3628]]