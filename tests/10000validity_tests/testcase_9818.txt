import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Up_71858 = tf.keras.layers.Input(shape=([2, 4, 1, 2]))

Up_71858 = keras.layers.UpSampling3D(size=(2, 2, 2), name = 'Up_71858', )(in0Up_71858)
Res43341 = keras.layers.Reshape((4, 8, 4), name = 'Res43341', )(Up_71858)
Ave65836 = keras.layers.AveragePooling2D(pool_size=(1, 8), name = 'Ave65836', )(Res43341)
Lay2 = keras.layers.LayerNormalization(axis=2, epsilon=1.2346172930236043, name = 'Lay2', )(Ave65836)
model = tf.keras.models.Model(inputs=[in0Up_71858], outputs=Lay2)
in0Up_71858 = tf.constant([[[[[1.5442, 1.4095]], [[1.3712, 1.1058]], [[1.6564, 1.0691]], [[1.4789, 1.6106]]], [[[1.8928, 1.1286]], [[1.4163, 1.3809]], [[1.7013, 1.1009]], [[1.7953, 1.6534]]]]])
print (np.array2string(model.predict([in0Up_71858],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Lay2.png')

LUp_71858 = up_sampling3D_layer([[[[[1.5442, 1.4095]], [[1.3712, 1.1058]], [[1.6564, 1.0691]], [[1.4789, 1.6106]]], [[[1.8928, 1.1286]], [[1.4163, 1.3809]], [[1.7013, 1.1009]], [[1.7953, 1.6534]]]]], 2, 2, 2, Up_71858), 
LRes43341 = reshape_layer(Up_71858, [4, 8, 4], Res43341), 
LAve65836 = average_pooling2D_layer(Res43341, 1, 8, Ave65836), 
LLay2 = layer_normalization_layer(Ave65836, 2, 1.2346172930236043, Lay2), 
exec_layers([LUp_71858,LRes43341,LAve65836,LLay2],["Up_71858","Res43341","Ave65836","Lay2"],Lay2,"Lay2")

Actual (Unparsed): [[[[0.0000000, 0.0000000, 0.0000000, 0.0000000]], [[0.0000000, 0.0000000, 0.0000000, 0.0000000]], [[0.0000000, 0.0000000, 0.0000000, 0.0000000]], [[0.0000000, 0.0000000, 0.0000000, 0.0000000]]]]

Expected (Unparsed): [[[[0.0,0.0,0.0,0.0]],[[0.0,0.0,0.0,0.0]],[[0.0,0.0,0.0,0.0]],[[0.0,0.0,0.0,0.0]]]]

Actual:   [[[[0, 0, 0, 0]], [[0, 0, 0, 0]], [[0, 0, 0, 0]], [[0, 0, 0, 0]]]]

Expected: [[[[0, 0, 0, 0]], [[0, 0, 0, 0]], [[0, 0, 0, 0]], [[0, 0, 0, 0]]]]