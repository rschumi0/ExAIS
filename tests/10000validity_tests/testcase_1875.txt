import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Ave27424 = tf.keras.layers.Input(shape=([2, 2, 1, 1]))
in1Ave27424 = tf.keras.layers.Input(shape=([2, 2, 1, 1]))
in0Den11094 = tf.keras.layers.Input(shape=([2, 5]))
in0Con26120 = tf.keras.layers.Input(shape=([2, 1]))
in0Con18118 = tf.keras.layers.Input(shape=([6, 1]))
in0Dot64247 = tf.keras.layers.Input(shape=([3, 3]))
in1Dot64247 = tf.keras.layers.Input(shape=([3, 3]))

Ave27424 = keras.layers.Average(name = 'Ave27424', )([in0Ave27424,in1Ave27424])
Sof87394 = keras.layers.Softmax(axis=1, name = 'Sof87394', )(Ave27424)
Res72942 = keras.layers.Reshape((2, 2, 1), name = 'Res72942', )(Sof87394)
Res69980 = keras.layers.Reshape((2, 2), name = 'Res69980', )(Res72942)
Den11094 = keras.layers.Dense(1,name = 'Den11094', )(in0Den11094)
Con26120 = keras.layers.Concatenate(axis=2, name = 'Con26120', )([Den11094,in0Con26120])
Add51301 = keras.layers.Add(name = 'Add51301', )([Res69980,Con26120])
Zer96128 = keras.layers.ZeroPadding1D(padding=((4, 0)), name = 'Zer96128', )(Add51301)
Con18118 = keras.layers.Concatenate(axis=2, name = 'Con18118', )([Zer96128,in0Con18118])
Dot64247 = keras.layers.Dot(axes=(2, 1), name = 'Dot64247', )([in0Dot64247,in1Dot64247])
Up_97689 = keras.layers.UpSampling1D(size=(2), name = 'Up_97689', )(Dot64247)
Max4887 = keras.layers.Maximum(name = 'Max4887', )([Con18118,Up_97689])
model = tf.keras.models.Model(inputs=[in0Ave27424,in1Ave27424,in0Den11094,in0Con26120,in0Con18118,in0Dot64247,in1Dot64247], outputs=Max4887)
w = model.get_layer('Den11094').get_weights() 
w[0] = np.array([[0.7682], [0.9784], [0.5576], [0.6815], [0.2121]])
w[1] = np.array([0.0693])
model.get_layer('Den11094').set_weights(w) 
in0Ave27424 = tf.constant([[[[[0.2075]], [[0.7894]]], [[[0.9607]], [[0.452]]]]])
in1Ave27424 = tf.constant([[[[[0.3659]], [[0.8765]]], [[[0.7506]], [[0.1504]]]]])
in0Den11094 = tf.constant([[[0.5001, 0.1634, 0.1019, 0.4681, 0.7706], [0.0737, 0.3711, 0.138, 0.1026, 0.3686]]])
in0Con26120 = tf.constant([[[0.0013], [0.0182]]])
in0Con18118 = tf.constant([[[0.248], [0.6715], [0.7567], [0.2796], [0.618], [0.7381]]])
in0Dot64247 = tf.constant([[[0.4412, 0.858, 0.8678], [0.0789, 0.5802, 0.9609], [0.5573, 0.7714, 0.332]]])
in1Dot64247 = tf.constant([[[0.9511, 0.6294, 0.9306], [0.6254, 0.1974, 0.1333], [0.7242, 0.1566, 0.1355]]])
print (np.array2string(model.predict([in0Ave27424,in1Ave27424,in0Den11094,in0Con26120,in0Con18118,in0Dot64247,in1Dot64247],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Max4887.png')

LAve27424 = average_layer([[[[[[0.2075]], [[0.7894]]], [[[0.9607]], [[0.452]]]]], [[[[[0.3659]], [[0.8765]]], [[[0.7506]], [[0.1504]]]]]], Ave27424), 
LSof87394 = softmax_layer(Ave27424, 1, Sof87394), 
LRes72942 = reshape_layer(Sof87394, [2, 2, 1], Res72942), 
LRes69980 = reshape_layer(Res72942, [2, 2], Res69980), 
LDen11094 = dense_layer([[[0.5001, 0.1634, 0.1019, 0.4681, 0.7706], [0.0737, 0.3711, 0.138, 0.1026, 0.3686]]], [[0.7682], [0.9784], [0.5576], [0.6815], [0.2121]],[0.0693], Den11094), 
LCon26120 = concatenate_layer([Den11094,[[[0.0013], [0.0182]]]], 2, Con26120), 
LAdd51301 = add_layer([Res69980,Con26120], Add51301), 
LZer96128 = zero_padding1D_layer(Add51301, 4, 0, Zer96128), 
LCon18118 = concatenate_layer([Zer96128,[[[0.248], [0.6715], [0.7567], [0.2796], [0.618], [0.7381]]]], 2, Con18118), 
LDot64247 = dot_layer([[[0.4412, 0.858, 0.8678], [0.0789, 0.5802, 0.9609], [0.5573, 0.7714, 0.332]]], [[[0.9511, 0.6294, 0.9306], [0.6254, 0.1974, 0.1333], [0.7242, 0.1566, 0.1355]]], 2, 1, Dot64247), 
LUp_97689 = up_sampling1D_layer(Dot64247, 2, Up_97689), 
LMax4887 = maximum_layer([Con18118,Up_97689], Max4887), 
exec_layers([LAve27424,LSof87394,LRes72942,LRes69980,LDen11094,LCon26120,LAdd51301,LZer96128,LCon18118,LDot64247,LUp_97689,LMax4887],["Ave27424","Sof87394","Res72942","Res69980","Den11094","Con26120","Add51301","Zer96128","Con18118","Dot64247","Up_97689","Max4887"],Max4887,"Max4887")

Actual (Unparsed): [[[1.5846793, 0.5829580, 0.6425390], [1.5846793, 0.5829580, 0.6715000], [1.1337827, 0.3146681, 0.7567000], [1.1337827, 0.3146681, 0.2809670], [1.5141004, 0.6311912, 0.6664370], [1.3525722, 0.5550302, 0.7381000]]]

Expected (Unparsed): [[[1.58467928,0.58295796,0.64253902],[1.58467928,0.58295796,0.6715],[1.13378265,0.31466808,0.7567],[1.13378265,0.31466808,0.28096695],[1.5141003721551332,0.6311911791135975,0.666437],[1.3525721978448666,0.5550301799999999,0.7381]]]

Actual:   [[[1.5847, 0.583, 0.6426], [1.5847, 0.583, 0.6715], [1.1338, 0.3147, 0.7567], [1.1338, 0.3147, 0.281], [1.5142, 0.6312, 0.6665], [1.3526, 0.5551, 0.7381]]]

Expected: [[[1.5847, 0.583, 0.6426], [1.5847, 0.583, 0.6715], [1.1338, 0.3147, 0.7567], [1.1338, 0.3147, 0.281], [1.5142, 0.6312, 0.6665], [1.3526, 0.5551, 0.7381]]]