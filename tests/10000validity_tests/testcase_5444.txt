import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Glo34320 = tf.keras.layers.Input(shape=([2, 1]))

Glo34320 = keras.layers.GlobalMaxPool1D(name = 'Glo34320', )(in0Glo34320)
Res32771 = keras.layers.Reshape((1, 1), name = 'Res32771', )(Glo34320)
Cro85069 = keras.layers.Cropping1D(cropping=((0, 0)), name = 'Cro85069', )(Res32771)
Lay95855 = keras.layers.LayerNormalization(axis=1, epsilon=1.7382148284682182, name = 'Lay95855', )(Cro85069)
model = tf.keras.models.Model(inputs=[in0Glo34320], outputs=Lay95855)
in0Glo34320 = tf.constant([[[1.2814], [1.422]]])
print (np.array2string(model.predict([in0Glo34320],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Lay95855.png')

LGlo34320 = global_max_pool1D_layer([[[1.2814], [1.422]]], Glo34320), 
LRes32771 = reshape_layer(Glo34320, [1, 1], Res32771), 
LCro85069 = cropping1D_layer(Res32771, 0, 0, Cro85069), 
LLay95855 = layer_normalization_layer(Cro85069, 1, 1.7382148284682182, Lay95855), 
exec_layers([LGlo34320,LRes32771,LCro85069,LLay95855],["Glo34320","Res32771","Cro85069","Lay95855"],Lay95855,"Lay95855")

Actual (Unparsed): [[[0.0000000]]]

Expected (Unparsed): [[[0.0]]]

Actual:   [[[0]]]

Expected: [[[0]]]