import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Sub22909 = tf.keras.layers.Input(shape=([2, 2]))
in1Sub22909 = tf.keras.layers.Input(shape=([2, 2]))
in0Ave91044 = tf.keras.layers.Input(shape=([1, 2]))
in1Ave91044 = tf.keras.layers.Input(shape=([1, 2]))

Sub22909 = keras.layers.Subtract(name = 'Sub22909', )([in0Sub22909,in1Sub22909])
Ave91044 = keras.layers.Average(name = 'Ave91044', )([in0Ave91044,in1Ave91044])
Zer57764 = keras.layers.ZeroPadding1D(padding=((1, 0)), name = 'Zer57764', )(Ave91044)
Max82693 = keras.layers.Maximum(name = 'Max82693', )([Sub22909,Zer57764])
Zer79764 = keras.layers.ZeroPadding1D(padding=((1, 1)), name = 'Zer79764', )(Max82693)
model = tf.keras.models.Model(inputs=[in0Sub22909,in1Sub22909,in0Ave91044,in1Ave91044], outputs=Zer79764)
in0Sub22909 = tf.constant([[[0.0771, 0.141], [0.1602, 0.3836]]])
in1Sub22909 = tf.constant([[[0.0675, 0.5721], [0.5066, 0.99]]])
in0Ave91044 = tf.constant([[[0.3232, 0.5156]]])
in1Ave91044 = tf.constant([[[0.2081, 0.6315]]])
print (np.array2string(model.predict([in0Sub22909,in1Sub22909,in0Ave91044,in1Ave91044],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Zer79764.png')

LSub22909 = subtract_layer([[[0.0771, 0.141], [0.1602, 0.3836]]], [[[0.0675, 0.5721], [0.5066, 0.99]]], Sub22909), 
LAve91044 = average_layer([[[[0.3232, 0.5156]]], [[[0.2081, 0.6315]]]], Ave91044), 
LZer57764 = zero_padding1D_layer(Ave91044, 1, 0, Zer57764), 
LMax82693 = maximum_layer([Sub22909,Zer57764], Max82693), 
LZer79764 = zero_padding1D_layer(Max82693, 1, 1, Zer79764), 
exec_layers([LSub22909,LAve91044,LZer57764,LMax82693,LZer79764],["Sub22909","Ave91044","Zer57764","Max82693","Zer79764"],Zer79764,"Zer79764")

Actual (Unparsed): [[[0.0000000, 0.0000000], [0.0096000, 0.0000000], [0.2656500, 0.5735500], [0.0000000, 0.0000000]]]

Expected (Unparsed): [[[0,0],[0.009599999999999997,0],[0.26565,0.57355],[0,0]]]

Actual:   [[[0, 0], [0.0096, 0], [0.2657, 0.5736], [0, 0]]]

Expected: [[[0, 0], [0.0096, 0], [0.2657, 0.5736], [0, 0]]]