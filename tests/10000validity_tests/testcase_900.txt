import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Sof15080 = tf.keras.layers.Input(shape=([2, 1, 2, 1]))
in0Con83851 = tf.keras.layers.Input(shape=([2, 2, 1]))
in0Ave1365 = tf.keras.layers.Input(shape=([2, 2]))
in0Con57310 = tf.keras.layers.Input(shape=([2, 2, 1]))
in0Max62334 = tf.keras.layers.Input(shape=([1, 2, 2]))
in1Max62334 = tf.keras.layers.Input(shape=([1, 2, 2]))

Sof15080 = keras.layers.Softmax(axis=1, name = 'Sof15080', input_shape=(2, 1, 2, 1))(in0Sof15080)
Res63236 = keras.layers.Reshape((2, 1, 2), name = 'Res63236', )(Sof15080)
Ave2882 = keras.layers.AveragePooling2D(pool_size=(2, 1), name = 'Ave2882', )(Res63236)
Res45629 = keras.layers.Reshape((1, 2), name = 'Res45629', )(Ave2882)
Up_47050 = keras.layers.UpSampling1D(size=(2), name = 'Up_47050', )(Res45629)
Res94122 = keras.layers.Reshape((2, 2, 1), name = 'Res94122', )(Up_47050)
Con83851 = keras.layers.Concatenate(axis=3, name = 'Con83851', )([Res94122,in0Con83851])
Ave1365 = keras.layers.AveragePooling1D(pool_size=(2), strides=(1), padding='same', name = 'Ave1365', )(in0Ave1365)
Res69270 = keras.layers.Reshape((2, 2, 1), name = 'Res69270', )(Ave1365)
Con57310 = keras.layers.Concatenate(axis=3, name = 'Con57310', )([Res69270,in0Con57310])
Max62334 = keras.layers.Maximum(name = 'Max62334', )([in0Max62334,in1Max62334])
Zer65471 = keras.layers.ZeroPadding2D(padding=((1, 0), (0, 0)), name = 'Zer65471', )(Max62334)
Ave27474 = keras.layers.Average(name = 'Ave27474', )([Con57310,Zer65471])
ELU56604 = keras.layers.ELU(alpha=-2.9137065453443416, name = 'ELU56604', )(Ave27474)
Max16504 = keras.layers.Maximum(name = 'Max16504', )([Con83851,ELU56604])
model = tf.keras.models.Model(inputs=[in0Sof15080,in0Con83851,in0Ave1365,in0Con57310,in0Max62334,in1Max62334], outputs=Max16504)
in0Sof15080 = tf.constant([[[[[0.6891], [0.6172]]], [[[0.4057], [0.8578]]]]])
in0Con83851 = tf.constant([[[[0.2671], [0.8347]], [[0.4376], [0.1942]]]])
in0Ave1365 = tf.constant([[[1.6248, 1.3798], [1.7093, 1.1604]]])
in0Con57310 = tf.constant([[[[0.8282], [0.3119]], [[0.5392], [0.0848]]]])
in0Max62334 = tf.constant([[[[0.1022, 0.3461], [0.8041, 0.854]]]])
in1Max62334 = tf.constant([[[[0.3724, 0.3827], [0.3183, 0.5759]]]])
print (np.array2string(model.predict([in0Sof15080,in0Con83851,in0Ave1365,in0Con57310,in0Max62334,in1Max62334],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Max16504.png')

LSof15080 = softmax_layer([[[[[0.6891], [0.6172]]], [[[0.4057], [0.8578]]]]], 1, Sof15080), 
LRes63236 = reshape_layer(Sof15080, [2, 1, 2], Res63236), 
LAve2882 = average_pooling2D_layer(Res63236, 2, 1, Ave2882), 
LRes45629 = reshape_layer(Ave2882, [1, 2], Res45629), 
LUp_47050 = up_sampling1D_layer(Res45629, 2, Up_47050), 
LRes94122 = reshape_layer(Up_47050, [2, 2, 1], Res94122), 
LCon83851 = concatenate_layer([Res94122,[[[[0.2671], [0.8347]], [[0.4376], [0.1942]]]]], 3, Con83851), 
LAve1365 = average_pooling1D_layer([[[1.6248, 1.3798], [1.7093, 1.1604]]], 2, 1, true, Ave1365), 
LRes69270 = reshape_layer(Ave1365, [2, 2, 1], Res69270), 
LCon57310 = concatenate_layer([Res69270,[[[[0.8282], [0.3119]], [[0.5392], [0.0848]]]]], 3, Con57310), 
LMax62334 = maximum_layer([[[[[0.1022, 0.3461], [0.8041, 0.854]]]], [[[[0.3724, 0.3827], [0.3183, 0.5759]]]]], Max62334), 
LZer65471 = zero_padding2D_layer(Max62334, 1, 0, 0, 0, Zer65471), 
LAve27474 = average_layer([Con57310,Zer65471], Ave27474), 
LELU56604 = elu_layer(Ave27474, -2.9137065453443416, ELU56604), 
LMax16504 = maximum_layer([Con83851,ELU56604], Max16504), 
exec_layers([LSof15080,LRes63236,LAve2882,LRes45629,LUp_47050,LRes94122,LCon83851,LAve1365,LRes69270,LCon57310,LMax62334,LZer65471,LAve27474,LELU56604,LMax16504],["Sof15080","Res63236","Ave2882","Res45629","Up_47050","Res94122","Con83851","Ave1365","Res69270","Con57310","Max62334","Zer65471","Ave27474","ELU56604","Max16504"],Max16504,"Max16504")

Actual (Unparsed): [[[[0.8335250, 0.4141000], [0.6350500, 0.8347000]], [[1.0408500, 0.4609500], [0.9822500, 0.4694000]]]]

Expected (Unparsed): [[[[0.8335250000000001,0.4141],[0.63505,0.8347]],[[1.04085,0.46094999999999997],[0.9822500000000001,0.4694]]]]

Actual:   [[[[0.8336, 0.4141], [0.6351, 0.8347]], [[1.0409, 0.461], [0.9823, 0.4694]]]]

Expected: [[[[0.8336, 0.4141], [0.6351, 0.8347]], [[1.0409, 0.461], [0.9823, 0.4694]]]]