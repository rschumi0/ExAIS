import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Dot99114 = tf.keras.layers.Input(shape=([3, 2]))
in1Dot99114 = tf.keras.layers.Input(shape=([3, 2]))
in0Con78457 = tf.keras.layers.Input(shape=([2, 2, 1]))
in0Add36249 = tf.keras.layers.Input(shape=([1, 1, 2]))
in1Add36249 = tf.keras.layers.Input(shape=([1, 1, 2]))
in0Ave18693 = tf.keras.layers.Input(shape=([1, 2, 2]))
in1Ave18693 = tf.keras.layers.Input(shape=([1, 2, 2]))

Dot99114 = keras.layers.Dot(axes=(1, 1), name = 'Dot99114', )([in0Dot99114,in1Dot99114])
Res33569 = keras.layers.Reshape((2, 2, 1), name = 'Res33569', )(Dot99114)
Con78457 = keras.layers.Concatenate(axis=3, name = 'Con78457', )([Res33569,in0Con78457])
Add36249 = keras.layers.Add(name = 'Add36249', )([in0Add36249,in1Add36249])
Zer72661 = keras.layers.ZeroPadding2D(padding=((1, 0), (1, 0)), name = 'Zer72661', )(Add36249)
Add88891 = keras.layers.Add(name = 'Add88891', )([Con78457,Zer72661])
Res374 = keras.layers.Reshape((2, 4), name = 'Res374', )(Add88891)
Ave18693 = keras.layers.Average(name = 'Ave18693', )([in0Ave18693,in1Ave18693])
Res90695 = keras.layers.Reshape((1, 4), name = 'Res90695', )(Ave18693)
Ave71017 = keras.layers.AveragePooling1D(pool_size=(1), strides=(1), padding='same', name = 'Ave71017', )(Res90695)
ReL97133 = keras.layers.ReLU(max_value=3.183075489526783, negative_slope=7.335574436657996, threshold=6.327074387683515, name = 'ReL97133', )(Ave71017)
Zer57162 = keras.layers.ZeroPadding1D(padding=((1, 0)), name = 'Zer57162', )(ReL97133)
Mul57857 = keras.layers.Multiply(name = 'Mul57857', )([Res374,Zer57162])
model = tf.keras.models.Model(inputs=[in0Dot99114,in1Dot99114,in0Con78457,in0Add36249,in1Add36249,in0Ave18693,in1Ave18693], outputs=Mul57857)
in0Dot99114 = tf.constant([[[0.6794, 0.1415], [0.863, 0.77], [0.9674, 0.6115]]])
in1Dot99114 = tf.constant([[[0.8231, 0.7472], [0.9228, 0.1373], [0.3928, 0.8222]]])
in0Con78457 = tf.constant([[[[0.7957], [0.8883]], [[0.2616], [0.0729]]]])
in0Add36249 = tf.constant([[[[0.3632, 0.3187]]]])
in1Add36249 = tf.constant([[[[0.6929, 0.6247]]]])
in0Ave18693 = tf.constant([[[[0.139, 0.0686], [0.8154, 0.2052]]]])
in1Ave18693 = tf.constant([[[[0.712, 0.6672], [0.1342, 0.5407]]]])
print (np.array2string(model.predict([in0Dot99114,in1Dot99114,in0Con78457,in0Add36249,in1Add36249,in0Ave18693,in1Ave18693],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Mul57857.png')

LDot99114 = dot_layer([[[0.6794, 0.1415], [0.863, 0.77], [0.9674, 0.6115]]], [[[0.8231, 0.7472], [0.9228, 0.1373], [0.3928, 0.8222]]], 1, 1, Dot99114), 
LRes33569 = reshape_layer(Dot99114, [2, 2, 1], Res33569), 
LCon78457 = concatenate_layer([Res33569,[[[[0.7957], [0.8883]], [[0.2616], [0.0729]]]]], 3, Con78457), 
LAdd36249 = add_layer([[[[[0.3632, 0.3187]]]], [[[[0.6929, 0.6247]]]]], Add36249), 
LZer72661 = zero_padding2D_layer(Add36249, 1, 0, 1, 0, Zer72661), 
LAdd88891 = add_layer([Con78457,Zer72661], Add88891), 
LRes374 = reshape_layer(Add88891, [2, 4], Res374), 
LAve18693 = average_layer([[[[[0.139, 0.0686], [0.8154, 0.2052]]]], [[[[0.712, 0.6672], [0.1342, 0.5407]]]]], Ave18693), 
LRes90695 = reshape_layer(Ave18693, [1, 4], Res90695), 
LAve71017 = average_pooling1D_layer(Res90695, 1, 1, true, Ave71017), 
LReL97133 = relu_layer(Ave71017, 3.183075489526783, 7.335574436657996, 6.327074387683515, ReL97133), 
LZer57162 = zero_padding1D_layer(ReL97133, 1, 0, Zer57162), 
LMul57857 = multiply_layer([Res374,Zer57162], Mul57857), 
exec_layers([LDot99114,LRes33569,LCon78457,LAdd36249,LZer72661,LAdd88891,LRes374,LAve18693,LRes90695,LAve71017,LReL97133,LZer57162,LMul57857],["Dot99114","Res33569","Con78457","Add36249","Zer72661","Add88891","Res374","Ave18693","Res90695","Ave71017","ReL97133","Zer57162","Mul57857"],Mul57857,"Mul57857")

Actual (Unparsed): [[[0.0000000, 0.0000000, 0.0000000, 0.0000000], [-46.2015683, -11.4355733, -75.9996937, -44.3888561]]]

Expected (Unparsed): [[[0.0,0.0,0.0,0.0],[-46.2015687802545,-11.435573846171353,-75.99969255459884,-44.388856490184004]]]

Actual:   [[[0, 0, 0, 0], [-46.2015, -11.4355, -75.9996, -44.3888]]]

Expected: [[[0, 0, 0, 0], [-46.2015, -11.4355, -75.9996, -44.3888]]]