import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Mul11114 = tf.keras.layers.Input(shape=([2, 1]))
in1Mul11114 = tf.keras.layers.Input(shape=([2, 1]))
in0Con58311 = tf.keras.layers.Input(shape=([4, 2]))
in0Sof97491 = tf.keras.layers.Input(shape=([2, 1]))
in0Max3843 = tf.keras.layers.Input(shape=([1, 1, 1]))
in1Max3843 = tf.keras.layers.Input(shape=([1, 1, 1]))
in0Con10913 = tf.keras.layers.Input(shape=([4, 2]))
in0Mul2269 = tf.keras.layers.Input(shape=([2, 1, 1, 2]))
in1Mul2269 = tf.keras.layers.Input(shape=([2, 1, 1, 2]))
in0Con75614 = tf.keras.layers.Input(shape=([3, 1]))
in0Sub42619 = tf.keras.layers.Input(shape=([3, 3]))
in1Sub42619 = tf.keras.layers.Input(shape=([3, 3]))

Mul11114 = keras.layers.Multiply(name = 'Mul11114', )([in0Mul11114,in1Mul11114])
Sep16233 = keras.layers.SeparableConv1D(2, (2),strides=(2), padding='valid', name = 'Sep16233', )(Mul11114)
Sim8343 = keras.layers.SimpleRNN(2,name = 'Sim8343', )(Sep16233)
Res89720 = keras.layers.Reshape((2, 1), name = 'Res89720', )(Sim8343)
Zer97388 = keras.layers.ZeroPadding1D(padding=((2, 0)), name = 'Zer97388', )(Res89720)
Con58311 = keras.layers.Concatenate(axis=2, name = 'Con58311', )([Zer97388,in0Con58311])
Sof97491 = keras.layers.Softmax(axis=1, name = 'Sof97491', input_shape=(2, 1))(in0Sof97491)
Up_65396 = keras.layers.UpSampling1D(size=(2), name = 'Up_65396', )(Sof97491)
Max3843 = keras.layers.Maximum(name = 'Max3843', )([in0Max3843,in1Max3843])
Res67599 = keras.layers.Reshape((1, 1), name = 'Res67599', )(Max3843)
Dot738 = keras.layers.Dot(axes=(2, 1), name = 'Dot738', )([Up_65396,Res67599])
Con10913 = keras.layers.Concatenate(axis=2, name = 'Con10913', )([Dot738,in0Con10913])
Mul2269 = keras.layers.Multiply(name = 'Mul2269', )([in0Mul2269,in1Mul2269])
Res18881 = keras.layers.Reshape((2, 1, 2), name = 'Res18881', )(Mul2269)
Ave53610 = keras.layers.AveragePooling2D(pool_size=(1, 1), name = 'Ave53610', )(Res18881)
Res79132 = keras.layers.Reshape((2, 2), name = 'Res79132', )(Ave53610)
Zer87321 = keras.layers.ZeroPadding1D(padding=((1, 0)), name = 'Zer87321', )(Res79132)
Con75614 = keras.layers.Concatenate(axis=2, name = 'Con75614', )([Zer87321,in0Con75614])
Sub42619 = keras.layers.Subtract(name = 'Sub42619', )([in0Sub42619,in1Sub42619])
Ave26007 = keras.layers.Average(name = 'Ave26007', )([Con75614,Sub42619])
Zer26402 = keras.layers.ZeroPadding1D(padding=((1, 0)), name = 'Zer26402', )(Ave26007)
Sub27739 = keras.layers.Subtract(name = 'Sub27739', )([Con10913,Zer26402])
Sub80386 = keras.layers.Subtract(name = 'Sub80386', )([Con58311,Sub27739])
model = tf.keras.models.Model(inputs=[in0Mul11114,in1Mul11114,in0Con58311,in0Sof97491,in0Max3843,in1Max3843,in0Con10913,in0Mul2269,in1Mul2269,in0Con75614,in0Sub42619,in1Sub42619], outputs=Sub80386)
w = model.get_layer('Sep16233').get_weights() 
w[0] = np.array([[[0.5856]], [[0.074]]])
w[1] = np.array([[[0.3313, 0.1288]]])
w[2] = np.array([0, 0])
model.get_layer('Sep16233').set_weights(w) 
w = model.get_layer('Sim8343').get_weights() 
w[0] = np.array([[2, 7], [8, 8]])
w[1] = np.array([[6, 1], [6, 6]])
w[2] = np.array([3, 2])
model.get_layer('Sim8343').set_weights(w) 
in0Mul11114 = tf.constant([[[0.8827], [0.118]]])
in1Mul11114 = tf.constant([[[0.3194], [0.0128]]])
in0Con58311 = tf.constant([[[0.5132, 0.8377], [0.6745, 0.7492], [0.315, 0.5347], [0.0452, 0.5569]]])
in0Sof97491 = tf.constant([[[0.2351], [0.8111]]])
in0Max3843 = tf.constant([[[[0.031]]]])
in1Max3843 = tf.constant([[[[0.488]]]])
in0Con10913 = tf.constant([[[0.7391, 0.2255], [0.2709, 0.0684], [0.6846, 0.8289], [0.4336, 0.1412]]])
in0Mul2269 = tf.constant([[[[[0.3579, 0.3437]]], [[[0.7145, 0.9976]]]]])
in1Mul2269 = tf.constant([[[[[0.6287, 0.1589]]], [[[0.7466, 0.7628]]]]])
in0Con75614 = tf.constant([[[0.3676], [0.228], [0.029]]])
in0Sub42619 = tf.constant([[[0.4343, 0.2543, 0.9925], [0.4543, 0.6724, 0.7492], [0.7045, 0.6139, 0.063]]])
in1Sub42619 = tf.constant([[[0.2994, 0.6722, 0.0999], [0.9245, 0.9728, 0.3777], [0.5208, 0.1814, 0.876]]])
print (np.array2string(model.predict([in0Mul11114,in1Mul11114,in0Con58311,in0Sof97491,in0Max3843,in1Max3843,in0Con10913,in0Mul2269,in1Mul2269,in0Con75614,in0Sub42619,in1Sub42619],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Sub80386.png')

LMul11114 = multiply_layer([[[[0.8827], [0.118]]], [[[0.3194], [0.0128]]]], Mul11114), 
LSep16233 = separable_conv1D_layer(Mul11114, 2,[[[[0.5856]], [[0.074]]],[[[0.3313, 0.1288]]]],[0, 0], 2, false, Sep16233), 
LSim8343 = simple_rnn_layer(Sep16233,[[2, 7], [8, 8]],[[6, 1], [6, 6]],[3, 2], Sim8343), 
LRes89720 = reshape_layer(Sim8343, [2, 1], Res89720), 
LZer97388 = zero_padding1D_layer(Res89720, 2, 0, Zer97388), 
LCon58311 = concatenate_layer([Zer97388,[[[0.5132, 0.8377], [0.6745, 0.7492], [0.315, 0.5347], [0.0452, 0.5569]]]], 2, Con58311), 
LSof97491 = softmax_layer([[[0.2351], [0.8111]]], 1, Sof97491), 
LUp_65396 = up_sampling1D_layer(Sof97491, 2, Up_65396), 
LMax3843 = maximum_layer([[[[[0.031]]]], [[[[0.488]]]]], Max3843), 
LRes67599 = reshape_layer(Max3843, [1, 1], Res67599), 
LDot738 = dot_layer(Up_65396,Res67599, 2, 1, Dot738), 
LCon10913 = concatenate_layer([Dot738,[[[0.7391, 0.2255], [0.2709, 0.0684], [0.6846, 0.8289], [0.4336, 0.1412]]]], 2, Con10913), 
LMul2269 = multiply_layer([[[[[[0.3579, 0.3437]]], [[[0.7145, 0.9976]]]]], [[[[[0.6287, 0.1589]]], [[[0.7466, 0.7628]]]]]], Mul2269), 
LRes18881 = reshape_layer(Mul2269, [2, 1, 2], Res18881), 
LAve53610 = average_pooling2D_layer(Res18881, 1, 1, Ave53610), 
LRes79132 = reshape_layer(Ave53610, [2, 2], Res79132), 
LZer87321 = zero_padding1D_layer(Res79132, 1, 0, Zer87321), 
LCon75614 = concatenate_layer([Zer87321,[[[0.3676], [0.228], [0.029]]]], 2, Con75614), 
LSub42619 = subtract_layer([[[0.4343, 0.2543, 0.9925], [0.4543, 0.6724, 0.7492], [0.7045, 0.6139, 0.063]]], [[[0.2994, 0.6722, 0.0999], [0.9245, 0.9728, 0.3777], [0.5208, 0.1814, 0.876]]], Sub42619), 
LAve26007 = average_layer([Con75614,Sub42619], Ave26007), 
LZer26402 = zero_padding1D_layer(Ave26007, 1, 0, Zer26402), 
LSub27739 = subtract_layer(Con10913,Zer26402, Sub27739), 
LSub80386 = subtract_layer(Con58311,Sub27739, Sub80386), 
exec_layers([LMul11114,LSep16233,LSim8343,LRes89720,LZer97388,LCon58311,LSof97491,LUp_65396,LMax3843,LRes67599,LDot738,LCon10913,LMul2269,LRes18881,LAve53610,LRes79132,LZer87321,LCon75614,LSub42619,LAve26007,LZer26402,LSub27739,LSub80386],["Mul11114","Sep16233","Sim8343","Res89720","Zer97388","Con58311","Sof97491","Up_65396","Max3843","Res67599","Dot738","Con10913","Mul2269","Res18881","Ave53610","Res79132","Zer87321","Con75614","Sub42619","Ave26007","Zer26402","Sub27739","Sub80386"],Sub80386,"Sub80386")

Actual (Unparsed): [[[-0.1756085, -0.2259000, 0.6122000], [-0.1081585, 0.1946500, 1.3109000], [0.5621849, -0.4924930, 0.0055500], [1.0341429, 0.2083346, 0.0237000]]]

Expected (Unparsed): [[[-0.1756085138711442,-0.2259,0.6122],[-0.1081585138711442,0.19465,1.3109],[0.5621849437968223,-0.492493035,0.005549999999999944],[1.0341429075347168,0.20833464,0.023700000000000054]]]

Actual:   [[[-0.1756, -0.2259, 0.6122], [-0.1081, 0.1947, 1.3109], [0.5622, -0.4924, 0.0056], [1.0342, 0.2084, 0.0237]]]

Expected: [[[-0.1756, -0.2259, 0.6122], [-0.1081, 0.1947, 1.3109], [0.5622, -0.4924, 0.0056], [1.0342, 0.2084, 0.0238]]]