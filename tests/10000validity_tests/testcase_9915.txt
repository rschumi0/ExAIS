import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0GRU13034 = tf.keras.layers.Input(shape=([2, 1]))
in0Con43260 = tf.keras.layers.Input(shape=([2, 1]))
in0Mul77968 = tf.keras.layers.Input(shape=([2, 1]))
in1Mul77968 = tf.keras.layers.Input(shape=([2, 1]))

GRU13034 = keras.layers.GRU(3,reset_after=False, recurrent_activation='sigmoid', name = 'GRU13034', )(in0GRU13034)
Res41239 = keras.layers.Reshape((3, 1), name = 'Res41239', )(GRU13034)
Res38781 = keras.layers.Reshape((3, 1, 1), name = 'Res38781', )(Res41239)
Cro34261 = keras.layers.Cropping2D(cropping=((0, 2), (0, 0)), name = 'Cro34261', )(Res38781)
Res25289 = keras.layers.Reshape((1, 1), name = 'Res25289', )(Cro34261)
Zer82617 = keras.layers.ZeroPadding1D(padding=((1, 0)), name = 'Zer82617', )(Res25289)
Con43260 = keras.layers.Concatenate(axis=2, name = 'Con43260', )([Zer82617,in0Con43260])
Mul77968 = keras.layers.Multiply(name = 'Mul77968', )([in0Mul77968,in1Mul77968])
Con53543 = keras.layers.Conv1D(2, (2),strides=(1), padding='same', dilation_rate=(1), name = 'Con53543', )(Mul77968)
ReL84914 = keras.layers.ReLU(max_value=8.254715743966987, negative_slope=7.679825774283733, threshold=3.0399652438894584, name = 'ReL84914', )(Con53543)
Mul28472 = keras.layers.Multiply(name = 'Mul28472', )([Con43260,ReL84914])
model = tf.keras.models.Model(inputs=[in0GRU13034,in0Con43260,in0Mul77968,in1Mul77968], outputs=Mul28472)
w = model.get_layer('GRU13034').get_weights() 
w[0] = np.array([[9, 5, 6, 1, 10, 4, 9, 4, 4]])
w[1] = np.array([[9, 8, 3, 9, 4, 3, 10, 1, 5], [1, 5, 10, 7, 7, 2, 6, 8, 9], [1, 3, 1, 1, 2, 9, 5, 3, 1]])
w[2] = np.array([3, 2, 7, 7, 9, 7, 8, 5, 3])
model.get_layer('GRU13034').set_weights(w) 
w = model.get_layer('Con53543').get_weights() 
w[0] = np.array([[[0.9086, 0.0217]], [[0.8971, 0.9588]]])
w[1] = np.array([0, 0])
model.get_layer('Con53543').set_weights(w) 
in0GRU13034 = tf.constant([[[8], [2]]])
in0Con43260 = tf.constant([[[0.2064], [0.9335]]])
in0Mul77968 = tf.constant([[[0.9106], [0.4529]]])
in1Mul77968 = tf.constant([[[0.9624], [0.1281]]])
print (np.array2string(model.predict([in0GRU13034,in0Con43260,in0Mul77968,in1Mul77968],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Mul28472.png')

LGRU13034 = gru_layer([[[8], [2]]],[[9, 5, 6, 1, 10, 4, 9, 4, 4]],[[9, 8, 3, 9, 4, 3, 10, 1, 5], [1, 5, 10, 7, 7, 2, 6, 8, 9], [1, 3, 1, 1, 2, 9, 5, 3, 1]],[3, 2, 7, 7, 9, 7, 8, 5, 3], false, GRU13034), 
LRes41239 = reshape_layer(GRU13034, [3, 1], Res41239), 
LRes38781 = reshape_layer(Res41239, [3, 1, 1], Res38781), 
LCro34261 = cropping2D_layer(Res38781, 0, 2, 0, 0, Cro34261), 
LRes25289 = reshape_layer(Cro34261, [1, 1], Res25289), 
LZer82617 = zero_padding1D_layer(Res25289, 1, 0, Zer82617), 
LCon43260 = concatenate_layer([Zer82617,[[[0.2064], [0.9335]]]], 2, Con43260), 
LMul77968 = multiply_layer([[[[0.9106], [0.4529]]], [[[0.9624], [0.1281]]]], Mul77968), 
LCon53543 = conv1D_layer(Mul77968, 2,[[[0.9086, 0.0217]], [[0.8971, 0.9588]]],[0, 0], 1, true, 1, Con53543), 
LReL84914 = relu_layer(Con53543, 8.254715743966987, 7.679825774283733, 3.0399652438894584, ReL84914), 
LMul28472 = multiply_layer([Con43260,ReL84914], Mul28472), 
exec_layers([LGRU13034,LRes41239,LRes38781,LCro34261,LRes25289,LZer82617,LCon43260,LMul77968,LCon53543,LReL84914,LMul28472],["GRU13034","Res41239","Res38781","Cro34261","Res25289","Zer82617","Con43260","Mul77968","Con53543","ReL84914","Mul28472"],Mul28472,"Mul28472")

Actual (Unparsed): [[[-0.0000000, -4.7003796], [-0.0000000, -21.7848418]]]

Expected (Unparsed): [[[-0.0,-4.700379449603417],[-1.7395586539512785e-8,-21.784841988201453]]]

Actual:   [[[-0, -4.7003], [-0, -21.7848]]]

Expected: [[[-0, -4.7003], [-0, -21.7848]]]