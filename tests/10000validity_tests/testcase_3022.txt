import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Zer47073 = tf.keras.layers.Input(shape=([3, 3, 1]))
in0Bat4399 = tf.keras.layers.Input(shape=([1, 3]))
in0Con57465 = tf.keras.layers.Input(shape=([5, 2]))

Zer47073 = keras.layers.ZeroPadding2D(padding=((1, 1), (1, 1)), name = 'Zer47073', )(in0Zer47073)
Res99224 = keras.layers.Reshape((5, 5), name = 'Res99224', )(Zer47073)
Bat4399 = keras.layers.BatchNormalization(axis=2, epsilon=0.7434028828699434,  name = 'Bat4399', )(in0Bat4399)
Zer34795 = keras.layers.ZeroPadding1D(padding=((4, 0)), name = 'Zer34795', )(Bat4399)
Con57465 = keras.layers.Concatenate(axis=2, name = 'Con57465', )([Zer34795,in0Con57465])
Sub73762 = keras.layers.Subtract(name = 'Sub73762', )([Res99224,Con57465])
model = tf.keras.models.Model(inputs=[in0Zer47073,in0Bat4399,in0Con57465], outputs=Sub73762)
w = model.get_layer('Bat4399').get_weights() 
w[0] = np.array([0.4683, 0.5186, 0.657])
w[1] = np.array([0.9317, 0.6598, 0.3505])
w[2] = np.array([0.2157, 0.9306, 0.2178])
w[3] = np.array([0.7461, 0.1752, 0.3127])
model.get_layer('Bat4399').set_weights(w) 
in0Zer47073 = tf.constant([[[[1.7418], [1.7327], [1.7579]], [[1.7974], [1.3887], [1.8316]], [[1.2252], [1.3614], [1.5696]]]])
in0Bat4399 = tf.constant([[[1.4752, 1.6084, 1.8801]]])
in0Con57465 = tf.constant([[[0.9958, 0.3422], [0.1266, 0.8535], [0.7871, 0.4088], [0.3931, 0.8766], [0.1098, 0.9061]]])
print (np.array2string(model.predict([in0Zer47073,in0Bat4399,in0Con57465],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Sub73762.png')

LZer47073 = zero_padding2D_layer([[[[1.7418], [1.7327], [1.7579]], [[1.7974], [1.3887], [1.8316]], [[1.2252], [1.3614], [1.5696]]]], 1, 1, 1, 1, Zer47073), 
LRes99224 = reshape_layer(Zer47073, [5, 5], Res99224), 
LBat4399 = batch_normalization_layer([[[1.4752, 1.6084, 1.8801]]], 2, 0.7434028828699434, [0.4683, 0.5186, 0.657], [0.9317, 0.6598, 0.3505], [0.2157, 0.9306, 0.2178], [0.7461, 0.1752, 0.3127], Bat4399), 
LZer34795 = zero_padding1D_layer(Bat4399, 4, 0, Zer34795), 
LCon57465 = concatenate_layer([Zer34795,[[[0.9958, 0.3422], [0.1266, 0.8535], [0.7871, 0.4088], [0.3931, 0.8766], [0.1098, 0.9061]]]], 2, Con57465), 
LSub73762 = subtract_layer(Res99224,Con57465, Sub73762), 
exec_layers([LZer47073,LRes99224,LBat4399,LZer34795,LCon57465,LSub73762],["Zer47073","Res99224","Bat4399","Zer34795","Con57465","Sub73762"],Sub73762,"Sub73762")

Actual (Unparsed): [[[0.0000000, 0.0000000, 0.0000000, -0.9958000, -0.3422000], [0.0000000, 1.7418000, 1.7327000, 1.6313000, -0.8535000], [0.0000000, 1.7974000, 1.3887000, 1.0444999, -0.4088000], [0.0000000, 1.2252001, 1.3614000, 1.1765000, -0.8766000], [-1.4149832, -1.0265500, -1.4132269, -0.1098000, -0.9061000]]]

Expected (Unparsed): [[[0,0,0,-0.9958,-0.3422],[0,1.7418,1.7327,1.6313,-0.8535],[0,1.7974,1.3887,1.0444999999999998,-0.4088],[0,1.2252,1.3614,1.1765,-0.8766],[-1.4149831523752163,-1.0265500442502122,-1.4132268674317248,-0.1098,-0.9061]]]

Actual:   [[[0, 0, 0, -0.9958, -0.3422], [0, 1.7418, 1.7327, 1.6313, -0.8535], [0, 1.7974, 1.3887, 1.0445, -0.4088], [0, 1.2253, 1.3614, 1.1765, -0.8766], [-1.4149, -1.0265, -1.4132, -0.1098, -0.9061]]]

Expected: [[[0, 0, 0, -0.9958, -0.3422], [0, 1.7418, 1.7327, 1.6313, -0.8535], [0, 1.7974, 1.3887, 1.0445, -0.4088], [0, 1.2252, 1.3614, 1.1765, -0.8766], [-1.4149, -1.0265, -1.4132, -0.1098, -0.9061]]]