import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Min77118 = tf.keras.layers.Input(shape=([2, 2, 1, 2]))
in1Min77118 = tf.keras.layers.Input(shape=([2, 2, 1, 2]))

Min77118 = keras.layers.Minimum(name = 'Min77118', )([in0Min77118,in1Min77118])
Den78982 = keras.layers.Dense(3,name = 'Den78982', )(Min77118)
model = tf.keras.models.Model(inputs=[in0Min77118,in1Min77118], outputs=Den78982)
w = model.get_layer('Den78982').get_weights() 
w[0] = np.array([[0.1635, 0.697, 0.6441], [0.6997, 0.1486, 0.9819]])
w[1] = np.array([0.8041, 0.1384, 0.1223])
model.get_layer('Den78982').set_weights(w) 
in0Min77118 = tf.constant([[[[[0.949, 0.4333]], [[0.5026, 0.0351]]], [[[0.951, 0.1961]], [[0.4506, 0.4275]]]]])
in1Min77118 = tf.constant([[[[[0.4184, 0.3151]], [[0.034, 0.4943]]], [[[0.2328, 0.263]], [[0.969, 0.3817]]]]])
print (np.array2string(model.predict([in0Min77118,in1Min77118],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Den78982.png')

LMin77118 = minimum_layer([[[[[[0.949, 0.4333]], [[0.5026, 0.0351]]], [[[0.951, 0.1961]], [[0.4506, 0.4275]]]]], [[[[[0.4184, 0.3151]], [[0.034, 0.4943]]], [[[0.2328, 0.263]], [[0.969, 0.3817]]]]]], Min77118), 
LDen78982 = dense_layer(Min77118, [[0.1635, 0.697, 0.6441], [0.6997, 0.1486, 0.9819]],[0.8041, 0.1384, 0.1223], Den78982), 
exec_layers([LMin77118,LDen78982],["Min77118","Den78982"],Den78982,"Den78982")

Actual (Unparsed): [[[[[1.0929839, 0.4768487, 0.7011881]], [[0.8342185, 0.1673139, 0.1786641]]], [[[0.9793740, 0.3298021, 0.4647971]], [[1.1448486, 0.5091888, 0.7873227]]]]]

Expected (Unparsed): [[[[[1.09298387,0.47684866,0.70118813]],[[0.83421847,0.16731385999999998,0.17866409]]],[[[0.9793739699999999,0.32980205999999995,0.46479707000000003]],[[1.14484859,0.50918882,0.78732269]]]]]

Actual:   [[[[[1.093, 0.4769, 0.7012]], [[0.8343, 0.1674, 0.1787]]], [[[0.9794, 0.3299, 0.4648]], [[1.1449, 0.5092, 0.7874]]]]]

Expected: [[[[[1.093, 0.4769, 0.7012]], [[0.8343, 0.1674, 0.1787]]], [[[0.9794, 0.3299, 0.4648]], [[1.1449, 0.5092, 0.7874]]]]]