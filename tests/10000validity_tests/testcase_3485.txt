import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Loc21334 = tf.keras.layers.Input(shape=([2, 1, 1]))
in0Con37334 = tf.keras.layers.Input(shape=([2, 3, 3, 1]))
in0Min76088 = tf.keras.layers.Input(shape=([1, 2, 2, 2]))
in1Min76088 = tf.keras.layers.Input(shape=([1, 2, 2, 2]))

Loc21334 = keras.layers.LocallyConnected2D(3, (1, 1),strides=(1, 1), name = 'Loc21334', )(in0Loc21334)
Res37500 = keras.layers.Reshape((2, 1, 3, 1), name = 'Res37500', )(Loc21334)
Zer96159 = keras.layers.ZeroPadding3D(padding=((0, 0), (2, 0), (0, 0)), name = 'Zer96159', )(Res37500)
Con37334 = keras.layers.Concatenate(axis=4, name = 'Con37334', )([Zer96159,in0Con37334])
Min76088 = keras.layers.Minimum(name = 'Min76088', )([in0Min76088,in1Min76088])
Zer11320 = keras.layers.ZeroPadding3D(padding=((1, 0), (1, 0), (1, 0)), name = 'Zer11320', )(Min76088)
Max66068 = keras.layers.Maximum(name = 'Max66068', )([Con37334,Zer11320])
Res63037 = keras.layers.Reshape((2, 3, 6), name = 'Res63037', )(Max66068)
Res56321 = keras.layers.Reshape((2, 18), name = 'Res56321', )(Res63037)
Up_67630 = keras.layers.UpSampling1D(size=(2), name = 'Up_67630', )(Res56321)
model = tf.keras.models.Model(inputs=[in0Loc21334,in0Con37334,in0Min76088,in1Min76088], outputs=Up_67630)
w = model.get_layer('Loc21334').get_weights() 
w[0] = np.array([[[0.6509, 0.7618, 0.8935]], [[0.4898, 0.5284, 0.3641]]])
w[1] = np.array([[[0, 0, 0]], [[0, 0, 0]]])
model.get_layer('Loc21334').set_weights(w) 
in0Loc21334 = tf.constant([[[[0.3991]], [[0.7598]]]])
in0Con37334 = tf.constant([[[[[0.5802], [0.7519], [0.4211]], [[0.975], [0.6067], [0.8766]], [[0.0159], [0.2283], [0.2353]]], [[[0.7205], [0.0478], [0.3474]], [[0.3071], [0.4527], [0.6946]], [[0.6167], [0.8704], [0.0768]]]]])
in0Min76088 = tf.constant([[[[[0.3123, 0.6513], [0.3699, 0.8145]], [[0.7842, 0.148], [0.2132, 0.2444]]]]])
in1Min76088 = tf.constant([[[[[0.2889, 0.0532], [0.0008, 0.6668]], [[0.1682, 0.5443], [0.1134, 0.8992]]]]])
print (np.array2string(model.predict([in0Loc21334,in0Con37334,in0Min76088,in1Min76088],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Up_67630.png')

LLoc21334 = locally_connected2D_layer([[[[0.3991]], [[0.7598]]]], 1, 1,[[[0.6509, 0.7618, 0.8935]], [[0.4898, 0.5284, 0.3641]]],[[[0, 0, 0]], [[0, 0, 0]]], 1, 1, Loc21334), 
LRes37500 = reshape_layer(Loc21334, [2, 1, 3, 1], Res37500), 
LZer96159 = zero_padding3D_layer(Res37500, 0, 0, 2, 0, 0, 0, Zer96159), 
LCon37334 = concatenate_layer([Zer96159,[[[[[0.5802], [0.7519], [0.4211]], [[0.975], [0.6067], [0.8766]], [[0.0159], [0.2283], [0.2353]]], [[[0.7205], [0.0478], [0.3474]], [[0.3071], [0.4527], [0.6946]], [[0.6167], [0.8704], [0.0768]]]]]], 4, Con37334), 
LMin76088 = minimum_layer([[[[[[0.3123, 0.6513], [0.3699, 0.8145]], [[0.7842, 0.148], [0.2132, 0.2444]]]]], [[[[[0.2889, 0.0532], [0.0008, 0.6668]], [[0.1682, 0.5443], [0.1134, 0.8992]]]]]], Min76088), 
LZer11320 = zero_padding3D_layer(Min76088, 1, 0, 1, 0, 1, 0, Zer11320), 
LMax66068 = maximum_layer([Con37334,Zer11320], Max66068), 
LRes63037 = reshape_layer(Max66068, [2, 3, 6], Res63037), 
LRes56321 = reshape_layer(Res63037, [2, 18], Res56321), 
LUp_67630 = up_sampling1D_layer(Res56321, 2, Up_67630), 
exec_layers([LLoc21334,LRes37500,LZer96159,LCon37334,LMin76088,LZer11320,LMax66068,LRes63037,LRes56321,LUp_67630],["Loc21334","Res37500","Zer96159","Con37334","Min76088","Zer11320","Max66068","Res63037","Res56321","Up_67630"],Up_67630,"Up_67630")

Actual (Unparsed): [[[0.0000000, 0.5802000, 0.0000000, 0.7519000, 0.0000000, 0.4211000, 0.0000000, 0.9750000, 0.0000000, 0.6067000, 0.0000000, 0.8766000, 0.2597742, 0.0159000, 0.3040344, 0.2283000, 0.3565959, 0.2353000], [0.0000000, 0.5802000, 0.0000000, 0.7519000, 0.0000000, 0.4211000, 0.0000000, 0.9750000, 0.0000000, 0.6067000, 0.0000000, 0.8766000, 0.2597742, 0.0159000, 0.3040344, 0.2283000, 0.3565959, 0.2353000], [0.0000000, 0.7205000, 0.0000000, 0.0478000, 0.0000000, 0.3474000, 0.0000000, 0.3071000, 0.2889000, 0.4527000, 0.0008000, 0.6946000, 0.3721500, 0.6167000, 0.4014783, 0.8704000, 0.2766432, 0.2444000], [0.0000000, 0.7205000, 0.0000000, 0.0478000, 0.0000000, 0.3474000, 0.0000000, 0.3071000, 0.2889000, 0.4527000, 0.0008000, 0.6946000, 0.3721500, 0.6167000, 0.4014783, 0.8704000, 0.2766432, 0.2444000]]]

Expected (Unparsed): [[[0,0.5802,0,0.7519,0,0.4211,0,0.975,0,0.6067,0,0.8766,0.25977419,0.0159,0.30403438000000005,0.2283,0.35659585,0.2353],[0,0.5802,0,0.7519,0,0.4211,0,0.975,0,0.6067,0,0.8766,0.25977419,0.0159,0.30403438000000005,0.2283,0.35659585,0.2353],[0,0.7205,0,0.0478,0,0.3474,0,0.3071,0.2889,0.4527,0.0008,0.6946,0.37215004,0.6167,0.40147832,0.8704,0.27664318,0.2444],[0,0.7205,0,0.0478,0,0.3474,0,0.3071,0.2889,0.4527,0.0008,0.6946,0.37215004,0.6167,0.40147832,0.8704,0.27664318,0.2444]]]

Actual:   [[[0, 0.5802, 0, 0.7519, 0, 0.4211, 0, 0.975, 0, 0.6067, 0, 0.8766, 0.2598, 0.0159, 0.3041, 0.2283, 0.3566, 0.2353], [0, 0.5802, 0, 0.7519, 0, 0.4211, 0, 0.975, 0, 0.6067, 0, 0.8766, 0.2598, 0.0159, 0.3041, 0.2283, 0.3566, 0.2353], [0, 0.7205, 0, 0.0478, 0, 0.3474, 0, 0.3071, 0.2889, 0.4527, 0.0008, 0.6946, 0.3722, 0.6167, 0.4015, 0.8704, 0.2767, 0.2444], [0, 0.7205, 0, 0.0478, 0, 0.3474, 0, 0.3071, 0.2889, 0.4527, 0.0008, 0.6946, 0.3722, 0.6167, 0.4015, 0.8704, 0.2767, 0.2444]]]

Expected: [[[0, 0.5802, 0, 0.7519, 0, 0.4211, 0, 0.975, 0, 0.6067, 0, 0.8766, 0.2598, 0.0159, 0.3041, 0.2283, 0.3566, 0.2353], [0, 0.5802, 0, 0.7519, 0, 0.4211, 0, 0.975, 0, 0.6067, 0, 0.8766, 0.2598, 0.0159, 0.3041, 0.2283, 0.3566, 0.2353], [0, 0.7205, 0, 0.0478, 0, 0.3474, 0, 0.3071, 0.2889, 0.4527, 0.0008, 0.6946, 0.3722, 0.6167, 0.4015, 0.8704, 0.2767, 0.2444], [0, 0.7205, 0, 0.0478, 0, 0.3474, 0, 0.3071, 0.2889, 0.4527, 0.0008, 0.6946, 0.3722, 0.6167, 0.4015, 0.8704, 0.2767, 0.2444]]]