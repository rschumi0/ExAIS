import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Mul4500 = tf.keras.layers.Input(shape=([1, 2, 2, 2]))
in1Mul4500 = tf.keras.layers.Input(shape=([1, 2, 2, 2]))
in0Zer7980 = tf.keras.layers.Input(shape=([4, 1, 4]))
in0Dep994 = tf.keras.layers.Input(shape=([1, 1, 1]))
in0Con8761 = tf.keras.layers.Input(shape=([6, 3, 3]))
in0Con83809 = tf.keras.layers.Input(shape=([6, 3, 4, 1]))
in0Mul75593 = tf.keras.layers.Input(shape=([1, 2, 1, 2]))
in1Mul75593 = tf.keras.layers.Input(shape=([1, 2, 1, 2]))

Mul4500 = keras.layers.Multiply(name = 'Mul4500', )([in0Mul4500,in1Mul4500])
Res23385 = keras.layers.Reshape((1, 2, 4), name = 'Res23385', )(Mul4500)
Zer1207 = keras.layers.ZeroPadding2D(padding=((5, 0), (1, 0)), name = 'Zer1207', )(Res23385)
Zer7980 = keras.layers.ZeroPadding2D(padding=((1, 1), (1, 1)), name = 'Zer7980', )(in0Zer7980)
Dep994 = keras.layers.DepthwiseConv2D((1, 1),strides=(1, 1), padding='valid', name = 'Dep994', )(in0Dep994)
Zer15404 = keras.layers.ZeroPadding2D(padding=((5, 0), (2, 0)), name = 'Zer15404', )(Dep994)
Con8761 = keras.layers.Concatenate(axis=3, name = 'Con8761', )([Zer15404,in0Con8761])
Add14454 = keras.layers.Add(name = 'Add14454', )([Zer7980,Con8761])
Add59562 = keras.layers.Add(name = 'Add59562', )([Zer1207,Add14454])
Res41247 = keras.layers.Reshape((6, 3, 4, 1), name = 'Res41247', )(Add59562)
Con83809 = keras.layers.Concatenate(axis=4, name = 'Con83809', )([Res41247,in0Con83809])
Mul75593 = keras.layers.Multiply(name = 'Mul75593', )([in0Mul75593,in1Mul75593])
Zer8906 = keras.layers.ZeroPadding3D(padding=((5, 0), (1, 0), (3, 0)), name = 'Zer8906', )(Mul75593)
Sub7487 = keras.layers.Subtract(name = 'Sub7487', )([Con83809,Zer8906])
model = tf.keras.models.Model(inputs=[in0Mul4500,in1Mul4500,in0Zer7980,in0Dep994,in0Con8761,in0Con83809,in0Mul75593,in1Mul75593], outputs=Sub7487)
w = model.get_layer('Dep994').get_weights() 
w[0] = np.array([[[[0.7322]]]])
w[1] = np.array([0])
model.get_layer('Dep994').set_weights(w) 
in0Mul4500 = tf.constant([[[[[0.1324, 0.1611], [0.2079, 0.6798]], [[0.1787, 0.2376], [0.5087, 0.5553]]]]])
in1Mul4500 = tf.constant([[[[[0.8538, 0.4835], [0.2902, 0.4347]], [[0.8399, 0.8772], [0.3501, 0.5519]]]]])
in0Zer7980 = tf.constant([[[[1.2207, 1.0017, 1.0422, 1.245]], [[1.054, 1.3495, 1.6129, 1.2754]], [[1.9986, 1.559, 1.8132, 1.244]], [[1.6654, 1.3541, 1.4757, 1.2306]]]])
in0Dep994 = tf.constant([[[[0.597]]]])
in0Con8761 = tf.constant([[[[0.3868, 0.1834, 0.8727], [0.845, 0.8801, 0.5046], [0.7159, 0.6519, 0.9775]], [[0.1171, 0.5461, 0.0568], [0.2206, 0.524, 0.6951], [0.7329, 0.8034, 0.9496]], [[0.9568, 0.9044, 0.2961], [0.2328, 0.7759, 0.0545], [0.6695, 0.7898, 0.4899]], [[0.4405, 0.1909, 0.1424], [0.5673, 0.9709, 0.795], [0.9773, 0.0144, 0.8026]], [[0.2118, 0.0869, 0.5127], [0.2223, 0.4809, 0.8251], [0.3914, 0.9933, 0.4723]], [[0.9032, 0.2415, 0.3663], [0.6929, 0.4538, 0.8313], [0.382, 0.9631, 0.2904]]]])
in0Con83809 = tf.constant([[[[[0.6824], [0.6433], [0.4988], [0.9561]], [[0.5533], [0.9843], [0.3339], [0.044]], [[0.9284], [0.9322], [0.4709], [0.4895]]], [[[0.4006], [0.1829], [0.527], [0.1173]], [[0.8275], [0.8759], [0.7845], [0.9878]], [[0.8392], [0.6236], [0.5557], [0.886]]], [[[0.4356], [0.1905], [0.0229], [0.1999]], [[0.2266], [0.3783], [0.3471], [0.8538]], [[0.5102], [0.1245], [0.4294], [0.5044]]], [[[0.1778], [0.6916], [0.9564], [0.6435]], [[0.3819], [0.0914], [0.263], [0.6051]], [[0.0135], [0.5663], [0.1074], [0.7257]]], [[[0.2952], [0.0336], [0.6677], [0.0709]], [[0.2164], [0.8865], [0.9419], [0.2055]], [[0.1121], [0.4421], [0.2609], [0.4606]]], [[[0.4179], [0.6285], [0.8109], [0.0306]], [[0.5228], [0.2093], [0.898], [0.0173]], [[0.6827], [0.9613], [0.1904], [0.2336]]]]])
in0Mul75593 = tf.constant([[[[[0.1727, 0.4988]], [[0.1315, 0.2992]]]]])
in1Mul75593 = tf.constant([[[[[0.2117, 0.2091]], [[0.5594, 0.5417]]]]])
print (np.array2string(model.predict([in0Mul4500,in1Mul4500,in0Zer7980,in0Dep994,in0Con8761,in0Con83809,in0Mul75593,in1Mul75593],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Sub7487.png')

LMul4500 = multiply_layer([[[[[[0.1324, 0.1611], [0.2079, 0.6798]], [[0.1787, 0.2376], [0.5087, 0.5553]]]]], [[[[[0.8538, 0.4835], [0.2902, 0.4347]], [[0.8399, 0.8772], [0.3501, 0.5519]]]]]], Mul4500), 
LRes23385 = reshape_layer(Mul4500, [1, 2, 4], Res23385), 
LZer1207 = zero_padding2D_layer(Res23385, 5, 0, 1, 0, Zer1207), 
LZer7980 = zero_padding2D_layer([[[[1.2207, 1.0017, 1.0422, 1.245]], [[1.054, 1.3495, 1.6129, 1.2754]], [[1.9986, 1.559, 1.8132, 1.244]], [[1.6654, 1.3541, 1.4757, 1.2306]]]], 1, 1, 1, 1, Zer7980), 
LDep994 = depthwise_conv2D_layer([[[[0.597]]]], 1, 1,[[[[0.7322]]]],[0], 1, 1, false, Dep994), 
LZer15404 = zero_padding2D_layer(Dep994, 5, 0, 2, 0, Zer15404), 
LCon8761 = concatenate_layer([Zer15404,[[[[0.3868, 0.1834, 0.8727], [0.845, 0.8801, 0.5046], [0.7159, 0.6519, 0.9775]], [[0.1171, 0.5461, 0.0568], [0.2206, 0.524, 0.6951], [0.7329, 0.8034, 0.9496]], [[0.9568, 0.9044, 0.2961], [0.2328, 0.7759, 0.0545], [0.6695, 0.7898, 0.4899]], [[0.4405, 0.1909, 0.1424], [0.5673, 0.9709, 0.795], [0.9773, 0.0144, 0.8026]], [[0.2118, 0.0869, 0.5127], [0.2223, 0.4809, 0.8251], [0.3914, 0.9933, 0.4723]], [[0.9032, 0.2415, 0.3663], [0.6929, 0.4538, 0.8313], [0.382, 0.9631, 0.2904]]]]], 3, Con8761), 
LAdd14454 = add_layer([Zer7980,Con8761], Add14454), 
LAdd59562 = add_layer([Zer1207,Add14454], Add59562), 
LRes41247 = reshape_layer(Add59562, [6, 3, 4, 1], Res41247), 
LCon83809 = concatenate_layer([Res41247,[[[[[0.6824], [0.6433], [0.4988], [0.9561]], [[0.5533], [0.9843], [0.3339], [0.044]], [[0.9284], [0.9322], [0.4709], [0.4895]]], [[[0.4006], [0.1829], [0.527], [0.1173]], [[0.8275], [0.8759], [0.7845], [0.9878]], [[0.8392], [0.6236], [0.5557], [0.886]]], [[[0.4356], [0.1905], [0.0229], [0.1999]], [[0.2266], [0.3783], [0.3471], [0.8538]], [[0.5102], [0.1245], [0.4294], [0.5044]]], [[[0.1778], [0.6916], [0.9564], [0.6435]], [[0.3819], [0.0914], [0.263], [0.6051]], [[0.0135], [0.5663], [0.1074], [0.7257]]], [[[0.2952], [0.0336], [0.6677], [0.0709]], [[0.2164], [0.8865], [0.9419], [0.2055]], [[0.1121], [0.4421], [0.2609], [0.4606]]], [[[0.4179], [0.6285], [0.8109], [0.0306]], [[0.5228], [0.2093], [0.898], [0.0173]], [[0.6827], [0.9613], [0.1904], [0.2336]]]]]], 4, Con83809), 
LMul75593 = multiply_layer([[[[[[0.1727, 0.4988]], [[0.1315, 0.2992]]]]], [[[[[0.2117, 0.2091]], [[0.5594, 0.5417]]]]]], Mul75593), 
LZer8906 = zero_padding3D_layer(Mul75593, 5, 0, 1, 0, 3, 0, Zer8906), 
LSub7487 = subtract_layer(Con83809,Zer8906, Sub7487), 
exec_layers([LMul4500,LRes23385,LZer1207,LZer7980,LDep994,LZer15404,LCon8761,LAdd14454,LAdd59562,LRes41247,LCon83809,LMul75593,LZer8906,LSub7487],["Mul4500","Res23385","Zer1207","Zer7980","Dep994","Zer15404","Con8761","Add14454","Add59562","Res41247","Con83809","Mul75593","Zer8906","Sub7487"],Sub7487,"Sub7487")

Actual (Unparsed): [[[[[0.0000000, 0.6824000], [0.3868000, 0.6433000], [0.1834000, 0.4988000], [0.8727000, 0.9561000]], [[0.0000000, 0.5533000], [0.8450000, 0.9843000], [0.8801000, 0.3339000], [0.5046000, 0.0440000]], [[0.0000000, 0.9284000], [0.7159000, 0.9322000], [0.6519000, 0.4709000], [0.9775000, 0.4895000]]], [[[0.0000000, 0.4006000], [0.1171000, 0.1829000], [0.5461000, 0.5270000], [0.0568000, 0.1173000]], [[1.2207000, 0.8275000], [1.2223000, 0.8759000], [1.5662000, 0.7845000], [1.9401000, 0.9878000]], [[0.0000000, 0.8392000], [0.7329000, 0.6236000], [0.8034000, 0.5557000], [0.9496000, 0.8860000]]], [[[0.0000000, 0.4356000], [0.9568000, 0.1905000], [0.9044000, 0.0229000], [0.2961000, 0.1999000]], [[1.0540000, 0.2266000], [1.5822999, 0.3783000], [2.3888000, 0.3471000], [1.3299000, 0.8538000]], [[0.0000000, 0.5102000], [0.6695000, 0.1245000], [0.7898000, 0.4294000], [0.4899000, 0.5044000]]], [[[0.0000000, 0.1778000], [0.4405000, 0.6916000], [0.1909000, 0.9564000], [0.1424000, 0.6435000]], [[1.9986000, 0.3819000], [2.1263000, 0.0914000], [2.7841000, 0.2630000], [2.0390000, 0.6051000]], [[0.0000000, 0.0135000], [0.9773000, 0.5663000], [0.0144000, 0.1074000], [0.8026000, 0.7257000]]], [[[0.0000000, 0.2952000], [0.2118000, 0.0336000], [0.0869000, 0.6677000], [0.5127000, 0.0709000]], [[1.6654000, 0.2164000], [1.5764000, 0.8865000], [1.9566000, 0.9419000], [2.0557000, 0.2055000]], [[0.0000000, 0.1121000], [0.3914000, 0.4421000], [0.9933000, 0.2609000], [0.4723000, 0.4606000]]], [[[0.0000000, 0.4179000], [0.9032000, 0.6285000], [0.2415000, 0.8109000], [0.3663000, 0.0306000]], [[0.1130431, 0.5228000], [0.7707919, 0.2093000], [0.5141326, 0.8980000], [1.0902485, -0.0869991]], [[0.5872135, 0.6827000], [0.5904227, 0.9613000], [1.1411959, 0.1904000], [0.5233090, 0.0715234]]]]]

Expected (Unparsed): [[[[[0,0.6824],[0.3868,0.6433],[0.1834,0.4988],[0.8727,0.9561]],[[0,0.5533],[0.845,0.9843],[0.8801,0.3339],[0.5046,0.044]],[[0,0.9284],[0.7159,0.9322],[0.6519,0.4709],[0.9775,0.4895]]],[[[0,0.4006],[0.1171,0.1829],[0.5461,0.527],[0.0568,0.1173]],[[1.2207,0.8275],[1.2223,0.8759],[1.5662,0.7845],[1.9401000000000002,0.9878]],[[0,0.8392],[0.7329,0.6236],[0.8034,0.5557],[0.9496,0.886]]],[[[0,0.4356],[0.9568,0.1905],[0.9044,0.0229],[0.2961,0.1999]],[[1.054,0.2266],[1.5823,0.3783],[2.3888,0.3471],[1.3299,0.8538]],[[0,0.5102],[0.6695,0.1245],[0.7898,0.4294],[0.4899,0.5044]]],[[[0,0.1778],[0.4405,0.6916],[0.1909,0.9564],[0.1424,0.6435]],[[1.9986,0.3819],[2.1263,0.0914],[2.7841,0.263],[2.039,0.6051]],[[0,0.0135],[0.9773,0.5663],[0.0144,0.1074],[0.8026,0.7257]]],[[[0,0.2952],[0.2118,0.0336],[0.0869,0.6677],[0.5127,0.0709]],[[1.6654,0.2164],[1.5764,0.8865],[1.9566,0.9419],[2.0557,0.2055]],[[0,0.1121],[0.3914,0.4421],[0.9933,0.2609],[0.4723,0.4606]]],[[[0,0.4179],[0.9032,0.6285],[0.2415,0.8109],[0.3663,0.0306]],[[0.11304312,0.5228],[0.77079185,0.2093],[0.51413258,0.898],[1.0902484700000001,-0.08699908]],[[0.5872135299999999,0.6827],[0.5904227200000001,0.9613],[1.14119587,0.1904],[0.52330897,0.07152336000000001]]]]]

Actual:   [[[[[0, 0.6824], [0.3868, 0.6433], [0.1834, 0.4988], [0.8727, 0.9561]], [[0, 0.5533], [0.845, 0.9843], [0.8801, 0.3339], [0.5046, 0.044]], [[0, 0.9284], [0.7159, 0.9322], [0.6519, 0.4709], [0.9775, 0.4895]]], [[[0, 0.4006], [0.1171, 0.1829], [0.5461, 0.527], [0.0568, 0.1173]], [[1.2207, 0.8275], [1.2223, 0.8759], [1.5662, 0.7845], [1.9401, 0.9878]], [[0, 0.8392], [0.7329, 0.6236], [0.8034, 0.5557], [0.9496, 0.886]]], [[[0, 0.4356], [0.9568, 0.1905], [0.9044, 0.0229], [0.2961, 0.1999]], [[1.054, 0.2266], [1.5823, 0.3783], [2.3888, 0.3471], [1.3299, 0.8538]], [[0, 0.5102], [0.6695, 0.1245], [0.7898, 0.4294], [0.4899, 0.5044]]], [[[0, 0.1778], [0.4405, 0.6916], [0.1909, 0.9564], [0.1424, 0.6435]], [[1.9986, 0.3819], [2.1263, 0.0914], [2.7841, 0.263], [2.039, 0.6051]], [[0, 0.0135], [0.9773, 0.5663], [0.0144, 0.1074], [0.8026, 0.7257]]], [[[0, 0.2952], [0.2118, 0.0336], [0.0869, 0.6677], [0.5127, 0.0709]], [[1.6654, 0.2164], [1.5764, 0.8865], [1.9566, 0.9419], [2.0557, 0.2055]], [[0, 0.1121], [0.3914, 0.4421], [0.9933, 0.2609], [0.4723, 0.4606]]], [[[0, 0.4179], [0.9032, 0.6285], [0.2415, 0.8109], [0.3663, 0.0306]], [[0.1131, 0.5228], [0.7708, 0.2093], [0.5142, 0.898], [1.0903, -0.0869]], [[0.5873, 0.6827], [0.5905, 0.9613], [1.1412, 0.1904], [0.5234, 0.0716]]]]]

Expected: [[[[[0, 0.6824], [0.3868, 0.6433], [0.1834, 0.4988], [0.8727, 0.9561]], [[0, 0.5533], [0.845, 0.9843], [0.8801, 0.3339], [0.5046, 0.044]], [[0, 0.9284], [0.7159, 0.9322], [0.6519, 0.4709], [0.9775, 0.4895]]], [[[0, 0.4006], [0.1171, 0.1829], [0.5461, 0.527], [0.0568, 0.1173]], [[1.2207, 0.8275], [1.2223, 0.8759], [1.5662, 0.7845], [1.9402, 0.9878]], [[0, 0.8392], [0.7329, 0.6236], [0.8034, 0.5557], [0.9496, 0.886]]], [[[0, 0.4356], [0.9568, 0.1905], [0.9044, 0.0229], [0.2961, 0.1999]], [[1.054, 0.2266], [1.5823, 0.3783], [2.3888, 0.3471], [1.3299, 0.8538]], [[0, 0.5102], [0.6695, 0.1245], [0.7898, 0.4294], [0.4899, 0.5044]]], [[[0, 0.1778], [0.4405, 0.6916], [0.1909, 0.9564], [0.1424, 0.6435]], [[1.9986, 0.3819], [2.1263, 0.0914], [2.7841, 0.263], [2.039, 0.6051]], [[0, 0.0135], [0.9773, 0.5663], [0.0144, 0.1074], [0.8026, 0.7257]]], [[[0, 0.2952], [0.2118, 0.0336], [0.0869, 0.6677], [0.5127, 0.0709]], [[1.6654, 0.2164], [1.5764, 0.8865], [1.9566, 0.9419], [2.0557, 0.2055]], [[0, 0.1121], [0.3914, 0.4421], [0.9933, 0.2609], [0.4723, 0.4606]]], [[[0, 0.4179], [0.9032, 0.6285], [0.2415, 0.8109], [0.3663, 0.0306]], [[0.1131, 0.5228], [0.7708, 0.2093], [0.5142, 0.898], [1.0903, -0.0869]], [[0.5873, 0.6827], [0.5905, 0.9613], [1.1412, 0.1904], [0.5234, 0.0716]]]]]