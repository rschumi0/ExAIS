import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Loc58107 = tf.keras.layers.Input(shape=([1, 1, 2]))

Loc58107 = keras.layers.LocallyConnected2D(4, (1, 1),strides=(1, 1), name = 'Loc58107', )(in0Loc58107)
Res15709 = keras.layers.Reshape((1, 4), name = 'Res15709', )(Loc58107)
Con7230 = keras.layers.Conv1D(3, (1),strides=(1), padding='same', dilation_rate=(1), name = 'Con7230', )(Res15709)
Glo67288 = keras.layers.GlobalMaxPool1D(name = 'Glo67288', )(Con7230)
Res80572 = keras.layers.Reshape((3, 1), name = 'Res80572', )(Glo67288)
Ave43659 = keras.layers.AveragePooling1D(pool_size=(2), name = 'Ave43659', )(Res80572)
model = tf.keras.models.Model(inputs=[in0Loc58107], outputs=Ave43659)
w = model.get_layer('Loc58107').get_weights() 
w[0] = np.array([[[0.1949, 0.2802, 0.6453, 0.6587], [0.4925, 0.6801, 0.752, 0.0404]]])
w[1] = np.array([[[0, 0, 0, 0]]])
model.get_layer('Loc58107').set_weights(w) 
w = model.get_layer('Con7230').get_weights() 
w[0] = np.array([[[0.1309, 0.6501, 0.4384], [0.9279, 0.8061, 0.7785], [0.1722, 0.8238, 0.9416], [0.3325, 0.0396, 0.3207]]])
w[1] = np.array([0, 0, 0])
model.get_layer('Con7230').set_weights(w) 
in0Loc58107 = tf.constant([[[[0.1236, 0.0105]]]])
print (np.array2string(model.predict([in0Loc58107],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Ave43659.png')

LLoc58107 = locally_connected2D_layer([[[[0.1236, 0.0105]]]], 1, 1,[[[0.1949, 0.2802, 0.6453, 0.6587], [0.4925, 0.6801, 0.752, 0.0404]]],[[[0, 0, 0, 0]]], 1, 1, Loc58107), 
LRes15709 = reshape_layer(Loc58107, [1, 4], Res15709), 
LCon7230 = conv1D_layer(Res15709, 1,[[[0.1309, 0.6501, 0.4384], [0.9279, 0.8061, 0.7785], [0.1722, 0.8238, 0.9416], [0.3325, 0.0396, 0.3207]]],[0, 0, 0], 1, true, 1, Con7230), 
LGlo67288 = global_max_pool1D_layer(Con7230, Glo67288), 
LRes80572 = reshape_layer(Glo67288, [3, 1], Res80572), 
LAve43659 = average_pooling1D_layer(Res80572, 2, Ave43659), 
exec_layers([LLoc58107,LRes15709,LCon7230,LGlo67288,LRes80572,LAve43659],["Loc58107","Res15709","Con7230","Glo67288","Res80572","Ave43659"],Ave43659,"Ave43659")

Actual (Unparsed): [[[0.1065227]]]

Expected (Unparsed): [[[0.106522708671]]]

Actual:   [[[0.1066]]]

Expected: [[[0.1066]]]