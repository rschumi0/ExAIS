import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Sof3605 = tf.keras.layers.Input(shape=([1, 2, 1, 1]))
in0Con82189 = tf.keras.layers.Input(shape=([2, 1]))
in0Mul75778 = tf.keras.layers.Input(shape=([2, 2, 1]))
in1Mul75778 = tf.keras.layers.Input(shape=([2, 2, 1]))

Sof3605 = keras.layers.Softmax(axis=1, name = 'Sof3605', input_shape=(1, 2, 1, 1))(in0Sof3605)
Den12389 = keras.layers.Dense(1,name = 'Den12389', )(Sof3605)
Glo12287 = keras.layers.GlobalMaxPool3D(name = 'Glo12287', )(Den12389)
Res37592 = keras.layers.Reshape((1, 1), name = 'Res37592', )(Glo12287)
Zer61076 = keras.layers.ZeroPadding1D(padding=((1, 0)), name = 'Zer61076', )(Res37592)
Con82189 = keras.layers.Concatenate(axis=2, name = 'Con82189', )([Zer61076,in0Con82189])
Mul75778 = keras.layers.Multiply(name = 'Mul75778', )([in0Mul75778,in1Mul75778])
Ave361 = keras.layers.AveragePooling2D(pool_size=(1, 1), strides=(1, 1), padding='valid', name = 'Ave361', )(Mul75778)
Res7393 = keras.layers.Reshape((2, 2), name = 'Res7393', )(Ave361)
Max61715 = keras.layers.MaxPool1D(pool_size=(2), name = 'Max61715', )(Res7393)
Up_22879 = keras.layers.UpSampling1D(size=(2), name = 'Up_22879', )(Max61715)
Mul7011 = keras.layers.Multiply(name = 'Mul7011', )([Con82189,Up_22879])
model = tf.keras.models.Model(inputs=[in0Sof3605,in0Con82189,in0Mul75778,in1Mul75778], outputs=Mul7011)
w = model.get_layer('Den12389').get_weights() 
w[0] = np.array([[0.1441]])
w[1] = np.array([0.026])
model.get_layer('Den12389').set_weights(w) 
in0Sof3605 = tf.constant([[[[[0.3447]], [[0.5179]]]]])
in0Con82189 = tf.constant([[[0.5858], [0.8993]]])
in0Mul75778 = tf.constant([[[[0.7152], [0.8709]], [[0.5393], [0.1056]]]])
in1Mul75778 = tf.constant([[[[0.4365], [0.4378]], [[0.7989], [0.953]]]])
print (np.array2string(model.predict([in0Sof3605,in0Con82189,in0Mul75778,in1Mul75778],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Mul7011.png')

LSof3605 = softmax_layer([[[[[0.3447]], [[0.5179]]]]], 1, Sof3605), 
LDen12389 = dense_layer(Sof3605, [[0.1441]],[0.026], Den12389), 
LGlo12287 = global_max_pool3D_layer(Den12389, Glo12287), 
LRes37592 = reshape_layer(Glo12287, [1, 1], Res37592), 
LZer61076 = zero_padding1D_layer(Res37592, 1, 0, Zer61076), 
LCon82189 = concatenate_layer([Zer61076,[[[0.5858], [0.8993]]]], 2, Con82189), 
LMul75778 = multiply_layer([[[[[0.7152], [0.8709]], [[0.5393], [0.1056]]]], [[[[0.4365], [0.4378]], [[0.7989], [0.953]]]]], Mul75778), 
LAve361 = average_pooling2D_layer(Mul75778, 1, 1, 1, 1, false, Ave361), 
LRes7393 = reshape_layer(Ave361, [2, 2], Res7393), 
LMax61715 = max_pool1D_layer(Res7393, 2, Max61715), 
LUp_22879 = up_sampling1D_layer(Max61715, 2, Up_22879), 
LMul7011 = multiply_layer([Con82189,Up_22879], Mul7011), 
exec_layers([LSof3605,LDen12389,LGlo12287,LRes37592,LZer61076,LCon82189,LMul75778,LAve361,LRes7393,LMax61715,LUp_22879,LMul7011],["Sof3605","Den12389","Glo12287","Res37592","Zer61076","Con82189","Mul75778","Ave361","Res7393","Max61715","Up_22879","Mul7011"],Mul7011,"Mul7011")

Actual (Unparsed): [[[0.0000000, 0.2233538], [0.0732870, 0.3428851]]]

Expected (Unparsed): [[[0.0,0.22335383571599998],[0.073287035577,0.342885121986]]]

Actual:   [[[0, 0.2234], [0.0733, 0.3429]]]

Expected: [[[0, 0.2234], [0.0733, 0.3429]]]