import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Dot23564 = tf.keras.layers.Input(shape=([3, 3]))
in1Dot23564 = tf.keras.layers.Input(shape=([3, 3]))
in0Up_45526 = tf.keras.layers.Input(shape=([1, 2, 3]))
in0Ave67419 = tf.keras.layers.Input(shape=([2, 1]))
in1Ave67419 = tf.keras.layers.Input(shape=([2, 1]))
in0Con12693 = tf.keras.layers.Input(shape=([2, 1]))
in0Dot47236 = tf.keras.layers.Input(shape=([3, 2]))
in1Dot47236 = tf.keras.layers.Input(shape=([3, 2]))
in0Con39945 = tf.keras.layers.Input(shape=([2, 10]))
in0Glo63056 = tf.keras.layers.Input(shape=([1, 1]))
in0Con40301 = tf.keras.layers.Input(shape=([23]))

Dot23564 = keras.layers.Dot(axes=(1, 1), name = 'Dot23564', )([in0Dot23564,in1Dot23564])
Res4746 = keras.layers.Reshape((3, 3, 1), name = 'Res4746', )(Dot23564)
Con43912 = keras.layers.Conv2D(2, (1, 1),strides=(4, 11), padding='valid', dilation_rate=(1, 1), name = 'Con43912', )(Res4746)
Lea22628 = keras.layers.LeakyReLU(alpha=7.28336118146543, name = 'Lea22628', )(Con43912)
Res36769 = keras.layers.Reshape((1, 2), name = 'Res36769', )(Lea22628)
Zer7548 = keras.layers.ZeroPadding1D(padding=((1, 0)), name = 'Zer7548', )(Res36769)
Up_45526 = keras.layers.UpSampling2D(size=(1, 2), name = 'Up_45526', )(in0Up_45526)
Res58729 = keras.layers.Reshape((1, 12), name = 'Res58729', )(Up_45526)
Zer12584 = keras.layers.ZeroPadding1D(padding=((1, 0)), name = 'Zer12584', )(Res58729)
Ave67419 = keras.layers.Average(name = 'Ave67419', )([in0Ave67419,in1Ave67419])
Con12693 = keras.layers.Concatenate(axis=2, name = 'Con12693', )([Ave67419,in0Con12693])
Dot47236 = keras.layers.Dot(axes=(1, 1), name = 'Dot47236', )([in0Dot47236,in1Dot47236])
Sub63456 = keras.layers.Subtract(name = 'Sub63456', )([Con12693,Dot47236])
Con39945 = keras.layers.Concatenate(axis=2, name = 'Con39945', )([Sub63456,in0Con39945])
Max99357 = keras.layers.Maximum(name = 'Max99357', )([Zer12584,Con39945])
Dot91061 = keras.layers.Dot(axes=(1, 1), name = 'Dot91061', )([Zer7548,Max99357])
Fla72477 = keras.layers.Flatten(name = 'Fla72477', )(Dot91061)
Glo63056 = keras.layers.GlobalMaxPool1D(name = 'Glo63056', )(in0Glo63056)
Con40301 = keras.layers.Concatenate(axis=1, name = 'Con40301', )([Glo63056,in0Con40301])
Mul37148 = keras.layers.Multiply(name = 'Mul37148', )([Fla72477,Con40301])
model = tf.keras.models.Model(inputs=[in0Dot23564,in1Dot23564,in0Up_45526,in0Ave67419,in1Ave67419,in0Con12693,in0Dot47236,in1Dot47236,in0Con39945,in0Glo63056,in0Con40301], outputs=Mul37148)
w = model.get_layer('Con43912').get_weights() 
w[0] = np.array([[[[0.8345, 0.9707]]]])
w[1] = np.array([0, 0])
model.get_layer('Con43912').set_weights(w) 
in0Dot23564 = tf.constant([[[0.0818, 0.0605, 0.8093], [0.573, 0.798, 0.9646], [0.4904, 0.2428, 0.9589]]])
in1Dot23564 = tf.constant([[[0.2002, 0.3373, 0.1633], [0.9798, 0.3966, 0.3648], [0.6081, 0.4232, 0.0424]]])
in0Up_45526 = tf.constant([[[[1.6861, 1.8506, 1.4874], [1.3577, 1.3123, 1.0419]]]])
in0Ave67419 = tf.constant([[[0.2372], [0.2306]]])
in1Ave67419 = tf.constant([[[0.5486], [0.8803]]])
in0Con12693 = tf.constant([[[0.6351], [0.5269]]])
in0Dot47236 = tf.constant([[[0.948, 0.24], [0.9529, 0.5332], [0.9714, 0.0809]]])
in1Dot47236 = tf.constant([[[0.1817, 0.0206], [0.4725, 0.1589], [0.8257, 0.6739]]])
in0Con39945 = tf.constant([[[0.8059, 0.4901, 0.5171, 0.1055, 0.8627, 0.8178, 0.4955, 0.3537, 0.2816, 0.715], [0.9515, 0.6046, 0.2039, 0.258, 0.611, 0.5347, 0.4707, 0.1244, 0.8788, 0.2531]]])
in0Glo63056 = tf.constant([[[1.2367]]])
in0Con40301 = tf.constant([[0.4143, 0.26, 0.9812, 0.2639, 0.6636, 0.1156, 0.5925, 0.8633, 0.9812, 0.1442, 0.0139, 0.572, 0.9674, 0.1389, 0.3004, 0.2753, 0.5858, 0.2065, 0.1058, 0.6529, 0.17, 0.7946, 0.6775]])
print (np.array2string(model.predict([in0Dot23564,in1Dot23564,in0Up_45526,in0Ave67419,in1Ave67419,in0Con12693,in0Dot47236,in1Dot47236,in0Con39945,in0Glo63056,in0Con40301],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Mul37148.png')

LDot23564 = dot_layer([[[0.0818, 0.0605, 0.8093], [0.573, 0.798, 0.9646], [0.4904, 0.2428, 0.9589]]], [[[0.2002, 0.3373, 0.1633], [0.9798, 0.3966, 0.3648], [0.6081, 0.4232, 0.0424]]], 1, 1, Dot23564), 
LRes4746 = reshape_layer(Dot23564, [3, 3, 1], Res4746), 
LCon43912 = conv2D_layer(Res4746, 1, 1,[[[[0.8345, 0.9707]]]],[0, 0], 4, 11, false, 1, 1, Con43912), 
LLea22628 = leaky_relu_layer(Con43912, 7.28336118146543, Lea22628), 
LRes36769 = reshape_layer(Lea22628, [1, 2], Res36769), 
LZer7548 = zero_padding1D_layer(Res36769, 1, 0, Zer7548), 
LUp_45526 = up_sampling2D_layer([[[[1.6861, 1.8506, 1.4874], [1.3577, 1.3123, 1.0419]]]], 1, 2, Up_45526), 
LRes58729 = reshape_layer(Up_45526, [1, 12], Res58729), 
LZer12584 = zero_padding1D_layer(Res58729, 1, 0, Zer12584), 
LAve67419 = average_layer([[[[0.2372], [0.2306]]], [[[0.5486], [0.8803]]]], Ave67419), 
LCon12693 = concatenate_layer([Ave67419,[[[0.6351], [0.5269]]]], 2, Con12693), 
LDot47236 = dot_layer([[[0.948, 0.24], [0.9529, 0.5332], [0.9714, 0.0809]]], [[[0.1817, 0.0206], [0.4725, 0.1589], [0.8257, 0.6739]]], 1, 1, Dot47236), 
LSub63456 = subtract_layer(Con12693,Dot47236, Sub63456), 
LCon39945 = concatenate_layer([Sub63456,[[[0.8059, 0.4901, 0.5171, 0.1055, 0.8627, 0.8178, 0.4955, 0.3537, 0.2816, 0.715], [0.9515, 0.6046, 0.2039, 0.258, 0.611, 0.5347, 0.4707, 0.1244, 0.8788, 0.2531]]]], 2, Con39945), 
LMax99357 = maximum_layer([Zer12584,Con39945], Max99357), 
LDot91061 = dot_layer(Zer7548,Max99357, 1, 1, Dot91061), 
LFla72477 = flatten_layer(Dot91061, Fla72477), 
LGlo63056 = global_max_pool1D_layer([[[1.2367]]], Glo63056), 
LCon40301 = concatenate_layer([Glo63056,[[0.4143, 0.26, 0.9812, 0.2639, 0.6636, 0.1156, 0.5925, 0.8633, 0.9812, 0.1442, 0.0139, 0.572, 0.9674, 0.1389, 0.3004, 0.2753, 0.5858, 0.2065, 0.1058, 0.6529, 0.17, 0.7946, 0.6775]]], 1, Con40301), 
LMul37148 = multiply_layer([Fla72477,Con40301], Mul37148), 
exec_layers([LDot23564,LRes4746,LCon43912,LLea22628,LRes36769,LZer7548,LUp_45526,LRes58729,LZer12584,LAve67419,LCon12693,LDot47236,LSub63456,LCon39945,LMax99357,LDot91061,LFla72477,LGlo63056,LCon40301,LMul37148],["Dot23564","Res4746","Con43912","Lea22628","Res36769","Zer7548","Up_45526","Res58729","Zer12584","Ave67419","Con12693","Dot47236","Sub63456","Con39945","Max99357","Dot91061","Fla72477","Glo63056","Con40301","Mul37148"],Mul37148,"Mul37148")

Actual (Unparsed): [[1.5243514, 0.5604861, 0.2827083, 1.2094231, 0.3570174, 0.7215585, 0.1147358, 0.5684062, 0.6575446, 0.9738649, 0.1383362, 0.0105871, 0.8201163, 1.5223507, 0.1756815, 0.4307044, 0.4332263, 0.7409233, 0.2384075, 0.1180633, 0.5784539, 0.1962677, 0.8867021, 0.6002490]]

Expected (Unparsed): [[1.524351340757221,0.5604861418566851,0.282708270024492,1.2094230901196614,0.3570173614192112,0.721558492262511,0.11473582427089193,0.5684062850540332,0.6575445262944704,0.9738649720986088,0.13833617941736975,0.010587129521016028,0.820116281145178,1.5223507215278334,0.17568152772412943,0.43070442457344665,0.4332263320618281,0.740923246514003,0.23840752023961645,0.11806328776053034,0.5784539395190517,0.19626769220694817,0.8867021593054574,0.60024895699825]]

Actual:   [[1.5244, 0.5605, 0.2828, 1.2095, 0.3571, 0.7216, 0.1148, 0.5685, 0.6576, 0.9739, 0.1384, 0.0106, 0.8202, 1.5224, 0.1757, 0.4308, 0.4333, 0.741, 0.2385, 0.1181, 0.5785, 0.1963, 0.8868, 0.6003]]

Expected: [[1.5244, 0.5605, 0.2828, 1.2095, 0.3571, 0.7216, 0.1148, 0.5685, 0.6576, 0.9739, 0.1384, 0.0106, 0.8202, 1.5224, 0.1757, 0.4308, 0.4333, 0.741, 0.2385, 0.1181, 0.5785, 0.1963, 0.8868, 0.6003]]