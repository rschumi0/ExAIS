import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Con62656 = tf.keras.layers.Input(shape=([1, 1, 1]))
in0Con90134 = tf.keras.layers.Input(shape=([2, 7]))
in0Lea81590 = tf.keras.layers.Input(shape=([1, 2]))
in0Con19575 = tf.keras.layers.Input(shape=([2, 6]))
in0Den86835 = tf.keras.layers.Input(shape=([2, 2, 5]))

Con62656 = keras.layers.Conv2DTranspose(2, (1, 1),strides=(1, 1), padding='same', name = 'Con62656', )(in0Con62656)
Res1121 = keras.layers.Reshape((1, 2), name = 'Res1121', )(Con62656)
Res78961 = keras.layers.Reshape((1, 2, 1), name = 'Res78961', )(Res1121)
Res20281 = keras.layers.Reshape((1, 2, 1, 1), name = 'Res20281', )(Res78961)
Glo63334 = keras.layers.GlobalAveragePooling3D(name = 'Glo63334', )(Res20281)
Res36611 = keras.layers.Reshape((1, 1), name = 'Res36611', )(Glo63334)
Zer69240 = keras.layers.ZeroPadding1D(padding=((1, 0)), name = 'Zer69240', )(Res36611)
Con90134 = keras.layers.Concatenate(axis=2, name = 'Con90134', )([Zer69240,in0Con90134])
Lea81590 = keras.layers.LeakyReLU(alpha=0.034433973158175805, name = 'Lea81590', input_shape=(1, 2))(in0Lea81590)
Zer40690 = keras.layers.ZeroPadding1D(padding=((1, 0)), name = 'Zer40690', )(Lea81590)
Con19575 = keras.layers.Concatenate(axis=2, name = 'Con19575', )([Zer40690,in0Con19575])
Den86835 = keras.layers.Dense(4,name = 'Den86835', )(in0Den86835)
Res44425 = keras.layers.Reshape((2, 8), name = 'Res44425', )(Den86835)
Max52383 = keras.layers.MaxPool1D(pool_size=(1), strides=(1), padding='same', name = 'Max52383', )(Res44425)
Min78263 = keras.layers.Minimum(name = 'Min78263', )([Con19575,Max52383])
Mul57604 = keras.layers.Multiply(name = 'Mul57604', )([Con90134,Min78263])
Res81256 = keras.layers.Reshape((2, 8, 1), name = 'Res81256', )(Mul57604)
Ave90837 = keras.layers.AveragePooling2D(pool_size=(2, 7), name = 'Ave90837', )(Res81256)
model = tf.keras.models.Model(inputs=[in0Con62656,in0Con90134,in0Lea81590,in0Con19575,in0Den86835], outputs=Ave90837)
w = model.get_layer('Con62656').get_weights() 
w[0] = np.array([[[[0.3437], [0.0979]]]])
w[1] = np.array([0, 0])
model.get_layer('Con62656').set_weights(w) 
w = model.get_layer('Den86835').get_weights() 
w[0] = np.array([[0.8557, 0.2105, 0.105, 0.736], [0.2546, 0.1844, 0.6547, 0.625], [0.0473, 0.6307, 0.2148, 0.9236], [0.4634, 0.4821, 0.3766, 0.6243], [0.909, 0.9433, 0.7107, 0.2358]])
w[1] = np.array([0.0812, 0.6189, 0.205, 0.4379])
model.get_layer('Den86835').set_weights(w) 
in0Con62656 = tf.constant([[[[0.0603]]]])
in0Con90134 = tf.constant([[[0.4052, 0.6427, 0.7914, 0.9482, 0.4648, 0.3204, 0.2248], [0.0539, 0.8023, 0.2075, 0.491, 0.5333, 0.4498, 0.9777]]])
in0Lea81590 = tf.constant([[[0.6053, 0.3883]]])
in0Con19575 = tf.constant([[[0.2056, 0.6488, 0.819, 0.3981, 0.4385, 0.0205], [0.9268, 0.8763, 0.0436, 0.4098, 0.2184, 0.7549]]])
in0Den86835 = tf.constant([[[[0.893, 0.5382, 0.8135, 0.4239, 0.1446], [0.756, 0.4824, 0.5123, 0.1298, 0.5716]], [[0.1881, 0.688, 0.4066, 0.6453, 0.5195], [0.1876, 0.9662, 0.6556, 0.44, 0.829]]]])
print (np.array2string(model.predict([in0Con62656,in0Con90134,in0Lea81590,in0Con19575,in0Den86835],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Ave90837.png')

LCon62656 = conv2D_transpose_layer([[[[0.0603]]]], 1, 1,[[[[0.3437], [0.0979]]]],[0, 0], 1, 1, true, Con62656), 
LRes1121 = reshape_layer(Con62656, [1, 2], Res1121), 
LRes78961 = reshape_layer(Res1121, [1, 2, 1], Res78961), 
LRes20281 = reshape_layer(Res78961, [1, 2, 1, 1], Res20281), 
LGlo63334 = global_average_pooling3D_layer(Res20281, Glo63334), 
LRes36611 = reshape_layer(Glo63334, [1, 1], Res36611), 
LZer69240 = zero_padding1D_layer(Res36611, 1, 0, Zer69240), 
LCon90134 = concatenate_layer([Zer69240,[[[0.4052, 0.6427, 0.7914, 0.9482, 0.4648, 0.3204, 0.2248], [0.0539, 0.8023, 0.2075, 0.491, 0.5333, 0.4498, 0.9777]]]], 2, Con90134), 
LLea81590 = leaky_relu_layer([[[0.6053, 0.3883]]], 0.034433973158175805, Lea81590), 
LZer40690 = zero_padding1D_layer(Lea81590, 1, 0, Zer40690), 
LCon19575 = concatenate_layer([Zer40690,[[[0.2056, 0.6488, 0.819, 0.3981, 0.4385, 0.0205], [0.9268, 0.8763, 0.0436, 0.4098, 0.2184, 0.7549]]]], 2, Con19575), 
LDen86835 = dense_layer([[[[0.893, 0.5382, 0.8135, 0.4239, 0.1446], [0.756, 0.4824, 0.5123, 0.1298, 0.5716]], [[0.1881, 0.688, 0.4066, 0.6453, 0.5195], [0.1876, 0.9662, 0.6556, 0.44, 0.829]]]], [[0.8557, 0.2105, 0.105, 0.736], [0.2546, 0.1844, 0.6547, 0.625], [0.0473, 0.6307, 0.2148, 0.9236], [0.4634, 0.4821, 0.3766, 0.6243], [0.909, 0.9433, 0.7107, 0.2358]],[0.0812, 0.6189, 0.205, 0.4379], Den86835), 
LRes44425 = reshape_layer(Den86835, [2, 8], Res44425), 
LMax52383 = max_pool1D_layer(Res44425, 1, 1, true, Max52383), 
LMin78263 = minimum_layer([Con19575,Max52383], Min78263), 
LMul57604 = multiply_layer([Con90134,Min78263], Mul57604), 
LRes81256 = reshape_layer(Mul57604, [2, 8, 1], Res81256), 
LAve90837 = average_pooling2D_layer(Res81256, 2, 7, Ave90837), 
exec_layers([LCon62656,LRes1121,LRes78961,LRes20281,LGlo63334,LRes36611,LZer69240,LCon90134,LLea81590,LZer40690,LCon19575,LDen86835,LRes44425,LMax52383,LMin78263,LMul57604,LRes81256,LAve90837],["Con62656","Res1121","Res78961","Res20281","Glo63334","Res36611","Zer69240","Con90134","Lea81590","Zer40690","Con19575","Den86835","Res44425","Max52383","Min78263","Mul57604","Res81256","Ave90837"],Ave90837,"Ave90837")

Actual (Unparsed): [[[[0.2171636]]]]

Expected (Unparsed): [[[[0.21716358210514283]]]]

Actual:   [[[[0.2172]]]]

Expected: [[[[0.2172]]]]