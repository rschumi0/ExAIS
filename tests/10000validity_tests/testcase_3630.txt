import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Min54275 = tf.keras.layers.Input(shape=([2, 2, 1]))
in1Min54275 = tf.keras.layers.Input(shape=([2, 2, 1]))
in0Ave70925 = tf.keras.layers.Input(shape=([1, 1, 2]))
in1Ave70925 = tf.keras.layers.Input(shape=([1, 1, 2]))

Min54275 = keras.layers.Minimum(name = 'Min54275', )([in0Min54275,in1Min54275])
Res85531 = keras.layers.Reshape((2, 2), name = 'Res85531', )(Min54275)
LST42674 = keras.layers.LSTM(2,recurrent_activation='sigmoid', name = 'LST42674', )(Res85531)
Res22743 = keras.layers.Reshape((2, 1), name = 'Res22743', )(LST42674)
Res69169 = keras.layers.Reshape((2, 1, 1), name = 'Res69169', )(Res22743)
Cro49514 = keras.layers.Cropping2D(cropping=((0, 1), (0, 0)), name = 'Cro49514', )(Res69169)
Res42817 = keras.layers.Reshape((1, 1), name = 'Res42817', )(Cro49514)
Ave70925 = keras.layers.Average(name = 'Ave70925', )([in0Ave70925,in1Ave70925])
Res4450 = keras.layers.Reshape((1, 1, 2, 1), name = 'Res4450', )(Ave70925)
Con11849 = keras.layers.Conv3D(2, (1, 1, 1),strides=(1, 1, 1), padding='valid', dilation_rate=(1, 1, 1), name = 'Con11849', )(Res4450)
Res34955 = keras.layers.Reshape((1, 1, 4), name = 'Res34955', )(Con11849)
Res95675 = keras.layers.Reshape((1, 4), name = 'Res95675', )(Res34955)
Dot88040 = keras.layers.Dot(axes=(1, 1), name = 'Dot88040', )([Res42817,Res95675])
model = tf.keras.models.Model(inputs=[in0Min54275,in1Min54275,in0Ave70925,in1Ave70925], outputs=Dot88040)
w = model.get_layer('LST42674').get_weights() 
w[0] = np.array([[3, 6, 6, 3, 4, 8, 9, 5], [10, 7, 5, 3, 9, 1, 1, 10]])
w[1] = np.array([[8, 2, 2, 9, 2, 8, 7, 2], [7, 9, 1, 10, 4, 7, 9, 9]])
w[2] = np.array([6, 5, 6, 8, 3, 10, 5, 5])
model.get_layer('LST42674').set_weights(w) 
w = model.get_layer('Con11849').get_weights() 
w[0] = np.array([[[[[0.0462, 0.5669]]]]])
w[1] = np.array([0, 0])
model.get_layer('Con11849').set_weights(w) 
in0Min54275 = tf.constant([[[[0.6098], [0.4012]], [[0.8404], [0.215]]]])
in1Min54275 = tf.constant([[[[0.6116], [0.0199]], [[0.1984], [0.9938]]]])
in0Ave70925 = tf.constant([[[[0.0428, 0.0218]]]])
in1Ave70925 = tf.constant([[[[0.4877, 0.837]]]])
print (np.array2string(model.predict([in0Min54275,in1Min54275,in0Ave70925,in1Ave70925],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Dot88040.png')

LMin54275 = minimum_layer([[[[[0.6098], [0.4012]], [[0.8404], [0.215]]]], [[[[0.6116], [0.0199]], [[0.1984], [0.9938]]]]], Min54275), 
LRes85531 = reshape_layer(Min54275, [2, 2], Res85531), 
LLST42674 = lstm_layer(Res85531,[[3, 6, 6, 3, 4, 8, 9, 5], [10, 7, 5, 3, 9, 1, 1, 10]],[[8, 2, 2, 9, 2, 8, 7, 2], [7, 9, 1, 10, 4, 7, 9, 9]],[6, 5, 6, 8, 3, 10, 5, 5], LST42674), 
LRes22743 = reshape_layer(LST42674, [2, 1], Res22743), 
LRes69169 = reshape_layer(Res22743, [2, 1, 1], Res69169), 
LCro49514 = cropping2D_layer(Res69169, 0, 1, 0, 0, Cro49514), 
LRes42817 = reshape_layer(Cro49514, [1, 1], Res42817), 
LAve70925 = average_layer([[[[[0.0428, 0.0218]]]], [[[[0.4877, 0.837]]]]], Ave70925), 
LRes4450 = reshape_layer(Ave70925, [1, 1, 2, 1], Res4450), 
LCon11849 = conv3D_layer(Res4450, 1, 1, 1,[[[[[0.0462, 0.5669]]]]],[0, 0], 1, 1, 1, false, 1, 1, 1, Con11849), 
LRes34955 = reshape_layer(Con11849, [1, 1, 4], Res34955), 
LRes95675 = reshape_layer(Res34955, [1, 4], Res95675), 
LDot88040 = dot_layer(Res42817,Res95675, 1, 1, Dot88040), 
exec_layers([LMin54275,LRes85531,LLST42674,LRes22743,LRes69169,LCro49514,LRes42817,LAve70925,LRes4450,LCon11849,LRes34955,LRes95675,LDot88040],["Min54275","Res85531","LST42674","Res22743","Res69169","Cro49514","Res42817","Ave70925","Res4450","Con11849","Res34955","Res95675","Dot88040"],Dot88040,"Dot88040")

Actual (Unparsed): [[[0.0118134, 0.1449570, 0.0191241, 0.2346637]]]

Expected (Unparsed): [[[0.011813396287724964,0.14495702068206234,0.019124118250514983,0.2346636934246092]]]

Actual:   [[[0.0119, 0.145, 0.0192, 0.2347]]]

Expected: [[[0.0119, 0.145, 0.0192, 0.2347]]]