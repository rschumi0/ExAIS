import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Add45573 = tf.keras.layers.Input(shape=([1, 1, 1]))
in1Add45573 = tf.keras.layers.Input(shape=([1, 1, 1]))
in0Min82944 = tf.keras.layers.Input(shape=([2, 2, 1, 2]))
in1Min82944 = tf.keras.layers.Input(shape=([2, 2, 1, 2]))
in0Con28198 = tf.keras.layers.Input(shape=([3, 5]))

Add45573 = keras.layers.Add(name = 'Add45573', )([in0Add45573,in1Add45573])
Res17117 = keras.layers.Reshape((1, 1, 1, 1), name = 'Res17117', )(Add45573)
Zer27456 = keras.layers.ZeroPadding3D(padding=((1, 1), (1, 1), (1, 1)), name = 'Zer27456', )(Res17117)
Res10732 = keras.layers.Reshape((3, 3, 3), name = 'Res10732', )(Zer27456)
Res70611 = keras.layers.Reshape((3, 9), name = 'Res70611', )(Res10732)
Min82944 = keras.layers.Minimum(name = 'Min82944', )([in0Min82944,in1Min82944])
Res68036 = keras.layers.Reshape((2, 2, 2), name = 'Res68036', )(Min82944)
Res77548 = keras.layers.Reshape((2, 4), name = 'Res77548', )(Res68036)
Max77491 = keras.layers.MaxPool1D(pool_size=(1), name = 'Max77491', )(Res77548)
Zer36784 = keras.layers.ZeroPadding1D(padding=((1, 0)), name = 'Zer36784', )(Max77491)
Con28198 = keras.layers.Concatenate(axis=2, name = 'Con28198', )([Zer36784,in0Con28198])
Add2727 = keras.layers.Add(name = 'Add2727', )([Res70611,Con28198])
model = tf.keras.models.Model(inputs=[in0Add45573,in1Add45573,in0Min82944,in1Min82944,in0Con28198], outputs=Add2727)
in0Add45573 = tf.constant([[[[0.4879]]]])
in1Add45573 = tf.constant([[[[0.662]]]])
in0Min82944 = tf.constant([[[[[0.7908, 0.6717]], [[0.8831, 0.7514]]], [[[0.0175, 0.6578]], [[0.7592, 0.0845]]]]])
in1Min82944 = tf.constant([[[[[0.4832, 0.8874]], [[0.4741, 0.5567]]], [[[0.4541, 0.8061]], [[0.0509, 0.7603]]]]])
in0Con28198 = tf.constant([[[0.4254, 0.5744, 0.7304, 0.7417, 0.9366], [0.9255, 0.5661, 0.3946, 0.7504, 0.6062], [0.7482, 0.595, 0.247, 0.2938, 0.2315]]])
print (np.array2string(model.predict([in0Add45573,in1Add45573,in0Min82944,in1Min82944,in0Con28198],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Add2727.png')

LAdd45573 = add_layer([[[[[0.4879]]]], [[[[0.662]]]]], Add45573), 
LRes17117 = reshape_layer(Add45573, [1, 1, 1, 1], Res17117), 
LZer27456 = zero_padding3D_layer(Res17117, 1, 1, 1, 1, 1, 1, Zer27456), 
LRes10732 = reshape_layer(Zer27456, [3, 3, 3], Res10732), 
LRes70611 = reshape_layer(Res10732, [3, 9], Res70611), 
LMin82944 = minimum_layer([[[[[[0.7908, 0.6717]], [[0.8831, 0.7514]]], [[[0.0175, 0.6578]], [[0.7592, 0.0845]]]]], [[[[[0.4832, 0.8874]], [[0.4741, 0.5567]]], [[[0.4541, 0.8061]], [[0.0509, 0.7603]]]]]], Min82944), 
LRes68036 = reshape_layer(Min82944, [2, 2, 2], Res68036), 
LRes77548 = reshape_layer(Res68036, [2, 4], Res77548), 
LMax77491 = max_pool1D_layer(Res77548, 1, Max77491), 
LZer36784 = zero_padding1D_layer(Max77491, 1, 0, Zer36784), 
LCon28198 = concatenate_layer([Zer36784,[[[0.4254, 0.5744, 0.7304, 0.7417, 0.9366], [0.9255, 0.5661, 0.3946, 0.7504, 0.6062], [0.7482, 0.595, 0.247, 0.2938, 0.2315]]]], 2, Con28198), 
LAdd2727 = add_layer([Res70611,Con28198], Add2727), 
exec_layers([LAdd45573,LRes17117,LZer27456,LRes10732,LRes70611,LMin82944,LRes68036,LRes77548,LMax77491,LZer36784,LCon28198,LAdd2727],["Add45573","Res17117","Zer27456","Res10732","Res70611","Min82944","Res68036","Res77548","Max77491","Zer36784","Con28198","Add2727"],Add2727,"Add2727")

Actual (Unparsed): [[[0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.4254000, 0.5744000, 0.7304000, 0.7417000, 0.9366000], [0.4832000, 0.6717000, 0.4741000, 0.5567000, 2.0754000, 0.5661000, 0.3946000, 0.7504000, 0.6062000], [0.0175000, 0.6578000, 0.0509000, 0.0845000, 0.7482000, 0.5950000, 0.2470000, 0.2938000, 0.2315000]]]

Expected (Unparsed): [[[0,0,0,0,0.4254,0.5744,0.7304,0.7417,0.9366],[0.4832,0.6717,0.4741,0.5567,2.0754,0.5661,0.3946,0.7504,0.6062],[0.0175,0.6578,0.0509,0.0845,0.7482,0.595,0.247,0.2938,0.2315]]]

Actual:   [[[0, 0, 0, 0, 0.4254, 0.5744, 0.7304, 0.7417, 0.9366], [0.4832, 0.6717, 0.4741, 0.5567, 2.0754, 0.5661, 0.3946, 0.7504, 0.6062], [0.0175, 0.6578, 0.0509, 0.0845, 0.7482, 0.595, 0.247, 0.2938, 0.2315]]]

Expected: [[[0, 0, 0, 0, 0.4254, 0.5744, 0.7304, 0.7417, 0.9366], [0.4832, 0.6717, 0.4741, 0.5567, 2.0754, 0.5661, 0.3946, 0.7504, 0.6062], [0.0175, 0.6578, 0.0509, 0.0845, 0.7482, 0.595, 0.247, 0.2938, 0.2315]]]