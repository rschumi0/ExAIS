import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Min5859 = tf.keras.layers.Input(shape=([1, 2, 1]))
in1Min5859 = tf.keras.layers.Input(shape=([1, 2, 1]))

Min5859 = keras.layers.Minimum(name = 'Min5859', )([in0Min5859,in1Min5859])
Res39904 = keras.layers.Reshape((1, 2), name = 'Res39904', )(Min5859)
Zer50539 = keras.layers.ZeroPadding1D(padding=((1, 1)), name = 'Zer50539', )(Res39904)
Sim89526 = keras.layers.SimpleRNN(2,name = 'Sim89526', )(Zer50539)
model = tf.keras.models.Model(inputs=[in0Min5859,in1Min5859], outputs=Sim89526)
w = model.get_layer('Sim89526').get_weights() 
w[0] = np.array([[2, 8], [10, 8]])
w[1] = np.array([[7, 10], [10, 6]])
w[2] = np.array([3, 6])
model.get_layer('Sim89526').set_weights(w) 
in0Min5859 = tf.constant([[[[0.4178], [0.1467]]]])
in1Min5859 = tf.constant([[[[0.4581], [0.8156]]]])
print (np.array2string(model.predict([in0Min5859,in1Min5859],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Sim89526.png')

LMin5859 = minimum_layer([[[[[0.4178], [0.1467]]]], [[[[0.4581], [0.8156]]]]], Min5859), 
LRes39904 = reshape_layer(Min5859, [1, 2], Res39904), 
LZer50539 = zero_padding1D_layer(Res39904, 1, 1, Zer50539), 
LSim89526 = simple_rnn_layer(Zer50539,[[2, 8], [10, 8]],[[7, 10], [10, 6]],[3, 6], Sim89526), 
exec_layers([LMin5859,LRes39904,LZer50539,LSim89526],["Min5859","Res39904","Zer50539","Sim89526"],Sim89526,"Sim89526")

Actual (Unparsed): [[1.0000000, 1.0000000]]

Expected (Unparsed): [[1.0,1.0]]

Actual:   [[1, 1]]

Expected: [[1, 1]]