import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Bat27452 = tf.keras.layers.Input(shape=([3, 3]))

Bat27452 = keras.layers.BatchNormalization(axis=1, epsilon=0.19990524110426078,  name = 'Bat27452', )(in0Bat27452)
Res22046 = keras.layers.Reshape((3, 3, 1), name = 'Res22046', )(Bat27452)
Con12726 = keras.layers.Conv2DTranspose(4, (2, 2),strides=(3, 2), padding='same', name = 'Con12726', )(Res22046)
Res42191 = keras.layers.Reshape((9, 24), name = 'Res42191', )(Con12726)
Fla42525 = keras.layers.Flatten(name = 'Fla42525', )(Res42191)
Res70011 = keras.layers.Reshape((216, 1), name = 'Res70011', )(Fla42525)
Sep43738 = keras.layers.SeparableConv1D(4, (166),strides=(145), padding='valid', name = 'Sep43738', )(Res70011)
model = tf.keras.models.Model(inputs=[in0Bat27452], outputs=Sep43738)
w = model.get_layer('Bat27452').get_weights() 
w[0] = np.array([0.0782, 0.4054, 0.6694])
w[1] = np.array([0.9799, 0.587, 0.3701])
w[2] = np.array([0.5399, 0.1716, 0.4958])
w[3] = np.array([0.1733, 0.0349, 0.648])
model.get_layer('Bat27452').set_weights(w) 
w = model.get_layer('Con12726').get_weights() 
w[0] = np.array([[[[0.2043], [0.6473], [0.9544], [0.9279]], [[0.0497], [0.7405], [0.8362], [0.8166]]], [[[0.6047], [0.8265], [0.8419], [0.647]], [[0.7873], [0.034], [0.3071], [0.1726]]]])
w[1] = np.array([0, 0, 0, 0])
model.get_layer('Con12726').set_weights(w) 
w = model.get_layer('Sep43738').get_weights() 
w[0] = np.array([[[0.1327]], [[0.9117]], [[0.6965]], [[0.1006]], [[0.8635]], [[0.7451]], [[0.4868]], [[0.4282]], [[0.9876]], [[0.221]], [[0.7215]], [[0.3796]], [[0.7082]], [[0.6518]], [[0.4774]], [[0.4554]], [[0.2429]], [[0.9498]], [[0.604]], [[0.7089]], [[0.6466]], [[0.3359]], [[0.0889]], [[0.8268]], [[0.9451]], [[0.8372]], [[0.7449]], [[0.6683]], [[0.3941]], [[0.8233]], [[0.2487]], [[0.3714]], [[0.4303]], [[0.1843]], [[0.0782]], [[0.8783]], [[0.4107]], [[0.1344]], [[0.6928]], [[0.0086]], [[0.5539]], [[0.0437]], [[0.3802]], [[0.0112]], [[0.5877]], [[0.1453]], [[0.5537]], [[0.8653]], [[0.4856]], [[0.4408]], [[0.926]], [[0.4687]], [[0.3318]], [[0.6401]], [[0.9072]], [[0.2491]], [[0.7928]], [[0.5071]], [[0.7799]], [[0.6679]], [[0.8914]], [[0.5572]], [[0.6893]], [[0.5445]], [[0.7848]], [[0.6541]], [[0.2528]], [[0.1259]], [[0.0239]], [[0.6855]], [[0.6413]], [[0.3472]], [[0.3406]], [[0.1669]], [[0.3134]], [[0.7863]], [[0.3517]], [[0.3125]], [[0.1951]], [[0.4041]], [[0.6924]], [[0.846]], [[0.9874]], [[0.2763]], [[0.0046]], [[0.5791]], [[0.4582]], [[0.1751]], [[0.8879]], [[0.576]], [[0.0303]], [[0.0392]], [[0.3955]], [[0.5454]], [[0.7082]], [[0.082]], [[0.9048]], [[0.9514]], [[0.4093]], [[0.5305]], [[0.2281]], [[0.2206]], [[0.0573]], [[0.7634]], [[0.6384]], [[0.3367]], [[0.378]], [[0.9212]], [[0.0837]], [[0.0608]], [[0.1973]], [[0.8988]], [[0.2364]], [[0.9913]], [[0.1814]], [[0.9985]], [[0.1841]], [[0.69]], [[0.3848]], [[0.4213]], [[0.5032]], [[0.1363]], [[0.6735]], [[0.2058]], [[0.1805]], [[0.8462]], [[0.0762]], [[0.1832]], [[0.3459]], [[0.0941]], [[0.3855]], [[0.0138]], [[0.0628]], [[0.8084]], [[0.8745]], [[0.3918]], [[0.4855]], [[0.8786]], [[0.828]], [[0.0626]], [[0.5398]], [[0.8068]], [[0.6954]], [[0.3821]], [[0.9049]], [[0.8642]], [[0.0624]], [[0.7684]], [[0.4866]], [[0.1716]], [[0.316]], [[0.542]], [[0.7572]], [[0.4146]], [[0.8273]], [[0.3345]], [[0.3071]], [[0.2229]], [[0.7131]], [[0.4566]], [[0.7071]], [[0.5981]], [[0.7553]], [[0.3581]], [[0.3088]], [[0.1566]]])
w[1] = np.array([[[0.2508, 0.1609, 0.2087, 0.9281]]])
w[2] = np.array([0, 0, 0, 0])
model.get_layer('Sep43738').set_weights(w) 
in0Bat27452 = tf.constant([[[1.1688, 1.2045, 1.4821], [1.1703, 1.293, 1.6011], [1.9318, 1.0636, 1.7333]]])
print (np.array2string(model.predict([in0Bat27452],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Sep43738.png')

LBat27452 = batch_normalization_layer([[[1.1688, 1.2045, 1.4821], [1.1703, 1.293, 1.6011], [1.9318, 1.0636, 1.7333]]], 1, 0.19990524110426078, [0.0782, 0.4054, 0.6694], [0.9799, 0.587, 0.3701], [0.5399, 0.1716, 0.4958], [0.1733, 0.0349, 0.648], Bat27452), 
LRes22046 = reshape_layer(Bat27452, [3, 3, 1], Res22046), 
LCon12726 = conv2D_transpose_layer(Res22046, 2, 2,[[[[0.2043], [0.6473], [0.9544], [0.9279]], [[0.0497], [0.7405], [0.8362], [0.8166]]], [[[0.6047], [0.8265], [0.8419], [0.647]], [[0.7873], [0.034], [0.3071], [0.1726]]]],[0, 0, 0, 0], 3, 2, true, Con12726), 
LRes42191 = reshape_layer(Con12726, [9, 24], Res42191), 
LFla42525 = flatten_layer(Res42191, Fla42525), 
LRes70011 = reshape_layer(Fla42525, [216, 1], Res70011), 
LSep43738 = separable_conv1D_layer(Res70011, 166,[[[[0.1327]], [[0.9117]], [[0.6965]], [[0.1006]], [[0.8635]], [[0.7451]], [[0.4868]], [[0.4282]], [[0.9876]], [[0.221]], [[0.7215]], [[0.3796]], [[0.7082]], [[0.6518]], [[0.4774]], [[0.4554]], [[0.2429]], [[0.9498]], [[0.604]], [[0.7089]], [[0.6466]], [[0.3359]], [[0.0889]], [[0.8268]], [[0.9451]], [[0.8372]], [[0.7449]], [[0.6683]], [[0.3941]], [[0.8233]], [[0.2487]], [[0.3714]], [[0.4303]], [[0.1843]], [[0.0782]], [[0.8783]], [[0.4107]], [[0.1344]], [[0.6928]], [[0.0086]], [[0.5539]], [[0.0437]], [[0.3802]], [[0.0112]], [[0.5877]], [[0.1453]], [[0.5537]], [[0.8653]], [[0.4856]], [[0.4408]], [[0.926]], [[0.4687]], [[0.3318]], [[0.6401]], [[0.9072]], [[0.2491]], [[0.7928]], [[0.5071]], [[0.7799]], [[0.6679]], [[0.8914]], [[0.5572]], [[0.6893]], [[0.5445]], [[0.7848]], [[0.6541]], [[0.2528]], [[0.1259]], [[0.0239]], [[0.6855]], [[0.6413]], [[0.3472]], [[0.3406]], [[0.1669]], [[0.3134]], [[0.7863]], [[0.3517]], [[0.3125]], [[0.1951]], [[0.4041]], [[0.6924]], [[0.846]], [[0.9874]], [[0.2763]], [[0.0046]], [[0.5791]], [[0.4582]], [[0.1751]], [[0.8879]], [[0.576]], [[0.0303]], [[0.0392]], [[0.3955]], [[0.5454]], [[0.7082]], [[0.082]], [[0.9048]], [[0.9514]], [[0.4093]], [[0.5305]], [[0.2281]], [[0.2206]], [[0.0573]], [[0.7634]], [[0.6384]], [[0.3367]], [[0.378]], [[0.9212]], [[0.0837]], [[0.0608]], [[0.1973]], [[0.8988]], [[0.2364]], [[0.9913]], [[0.1814]], [[0.9985]], [[0.1841]], [[0.69]], [[0.3848]], [[0.4213]], [[0.5032]], [[0.1363]], [[0.6735]], [[0.2058]], [[0.1805]], [[0.8462]], [[0.0762]], [[0.1832]], [[0.3459]], [[0.0941]], [[0.3855]], [[0.0138]], [[0.0628]], [[0.8084]], [[0.8745]], [[0.3918]], [[0.4855]], [[0.8786]], [[0.828]], [[0.0626]], [[0.5398]], [[0.8068]], [[0.6954]], [[0.3821]], [[0.9049]], [[0.8642]], [[0.0624]], [[0.7684]], [[0.4866]], [[0.1716]], [[0.316]], [[0.542]], [[0.7572]], [[0.4146]], [[0.8273]], [[0.3345]], [[0.3071]], [[0.2229]], [[0.7131]], [[0.4566]], [[0.7071]], [[0.5981]], [[0.7553]], [[0.3581]], [[0.3088]], [[0.1566]]],[[[0.2508, 0.1609, 0.2087, 0.9281]]]],[0, 0, 0, 0], 145, false, Sep43738), 
exec_layers([LBat27452,LRes22046,LCon12726,LRes42191,LFla42525,LRes70011,LSep43738],["Bat27452","Res22046","Con12726","Res42191","Fla42525","Res70011","Sep43738"],Sep43738,"Sep43738")

Actual (Unparsed): [[[10.7863015, 6.9199199, 8.9756823, 39.9153367]]]

Expected (Unparsed): [[[10.78630159645719,6.91991996359634,8.975682389077415,39.915336968388836]]]

Actual:   [[[10.7864, 6.92, 8.9757, 39.9154]]]

Expected: [[[10.7864, 6.92, 8.9757, 39.9154]]]