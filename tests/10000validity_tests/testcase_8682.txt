import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Con55978 = tf.keras.layers.Input(shape=([1, 1, 2, 1]))

Con55978 = keras.layers.Conv3D(2, (1, 1, 1),strides=(1, 1, 1), padding='valid', dilation_rate=(1, 1, 1), name = 'Con55978', )(in0Con55978)
Fla93345 = keras.layers.Flatten(name = 'Fla93345', )(Con55978)
Res73184 = keras.layers.Reshape((4, 1), name = 'Res73184', )(Fla93345)
Glo63766 = keras.layers.GlobalAveragePooling1D(name = 'Glo63766', )(Res73184)
Res98642 = keras.layers.Reshape((1, 1), name = 'Res98642', )(Glo63766)
Per80354 = keras.layers.Permute((2,1), name = 'Per80354',)(Res98642)
model = tf.keras.models.Model(inputs=[in0Con55978], outputs=Per80354)
w = model.get_layer('Con55978').get_weights() 
w[0] = np.array([[[[[0.0619, 0.4937]]]]])
w[1] = np.array([0, 0])
model.get_layer('Con55978').set_weights(w) 
in0Con55978 = tf.constant([[[[[0.9662], [0.0877]]]]])
print (np.array2string(model.predict([in0Con55978],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Per80354.png')

LCon55978 = conv3D_layer([[[[[0.9662], [0.0877]]]]], 1, 1, 1,[[[[[0.0619, 0.4937]]]]],[0, 0], 1, 1, 1, false, 1, 1, 1, Con55978), 
LFla93345 = flatten_layer(Con55978, Fla93345), 
LRes73184 = reshape_layer(Fla93345, [4, 1], Res73184), 
LGlo63766 = global_average_pooling1D_layer(Res73184, Glo63766), 
LRes98642 = reshape_layer(Glo63766, [1, 1], Res98642), 
LPer80354 = permute_layer(Res98642, 2,1, Per80354), 
exec_layers([LCon55978,LFla93345,LRes73184,LGlo63766,LRes98642,LPer80354],["Con55978","Fla93345","Res73184","Glo63766","Res98642","Per80354"],Per80354,"Per80354")

Actual (Unparsed): [[[0.1463867]]]

Expected (Unparsed): [[[0.14638671000000003]]]

Actual:   [[[0.1464]]]

Expected: [[[0.1464]]]