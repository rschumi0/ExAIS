import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Sub7688 = tf.keras.layers.Input(shape=([3, 3, 3, 3]))
in1Sub7688 = tf.keras.layers.Input(shape=([3, 3, 3, 3]))
in0Con24193 = tf.keras.layers.Input(shape=([1, 27, 1]))
in0Min31677 = tf.keras.layers.Input(shape=([1, 1]))
in1Min31677 = tf.keras.layers.Input(shape=([1, 1]))
in0Con34089 = tf.keras.layers.Input(shape=([1, 2, 1, 1]))
in0Ave3504 = tf.keras.layers.Input(shape=([1, 2, 1, 2]))
in1Ave3504 = tf.keras.layers.Input(shape=([1, 2, 1, 2]))

Sub7688 = keras.layers.Subtract(name = 'Sub7688', )([in0Sub7688,in1Sub7688])
Res54587 = keras.layers.Reshape((3, 3, 9), name = 'Res54587', )(Sub7688)
Res36089 = keras.layers.Reshape((3, 27), name = 'Res36089', )(Res54587)
Cro54638 = keras.layers.Cropping1D(cropping=((1, 1)), name = 'Cro54638', )(Res36089)
Res1555 = keras.layers.Reshape((1, 27, 1), name = 'Res1555', )(Cro54638)
Con24193 = keras.layers.Concatenate(axis=3, name = 'Con24193', )([Res1555,in0Con24193])
Min31677 = keras.layers.Minimum(name = 'Min31677', )([in0Min31677,in1Min31677])
Res83064 = keras.layers.Reshape((1, 1, 1), name = 'Res83064', )(Min31677)
Res13604 = keras.layers.Reshape((1, 1, 1, 1), name = 'Res13604', )(Res83064)
Zer66194 = keras.layers.ZeroPadding3D(padding=((0, 0), (1, 0), (0, 0)), name = 'Zer66194', )(Res13604)
Con34089 = keras.layers.Concatenate(axis=4, name = 'Con34089', )([Zer66194,in0Con34089])
Ave3504 = keras.layers.Average(name = 'Ave3504', )([in0Ave3504,in1Ave3504])
Min5199 = keras.layers.Minimum(name = 'Min5199', )([Con34089,Ave3504])
Res49384 = keras.layers.Reshape((1, 2, 2), name = 'Res49384', )(Min5199)
Ave39581 = keras.layers.AveragePooling2D(pool_size=(1, 1), strides=(1, 2), padding='same', name = 'Ave39581', )(Res49384)
Zer39704 = keras.layers.ZeroPadding2D(padding=((0, 0), (26, 0)), name = 'Zer39704', )(Ave39581)
Mul15596 = keras.layers.Multiply(name = 'Mul15596', )([Con24193,Zer39704])
model = tf.keras.models.Model(inputs=[in0Sub7688,in1Sub7688,in0Con24193,in0Min31677,in1Min31677,in0Con34089,in0Ave3504,in1Ave3504], outputs=Mul15596)
in0Sub7688 = tf.constant([[[[[0.4111, 0.3611, 0.5946], [0.485, 0.0269, 0.0103], [0.0594, 0.2826, 0.0767]], [[0.2949, 0.792, 0.4757], [0.3785, 0.5513, 0.272], [0.7368, 0.4254, 0.7013]], [[0.2506, 0.3553, 0.2069], [0.7421, 0.9819, 0.7349], [0.8883, 0.9738, 0.6126]]], [[[0.4872, 0.8787, 0.754], [0.2395, 0.9547, 0.8191], [0.7633, 0.8472, 0.0211]], [[0.6721, 0.8618, 0.1936], [0.4905, 0.4057, 0.6242], [0.7247, 0.154, 0.7293]], [[0.5501, 0.7672, 0.8961], [0.9634, 0.7648, 0.5753], [0.8444, 0.399, 0.7488]]], [[[0.2857, 0.6138, 0.4425], [0.2652, 0.4779, 0.1557], [0.428, 0.1875, 0.8245]], [[0.5887, 0.2301, 0.3776], [0.2725, 0.6543, 0.7083], [0.1065, 0.2975, 0.1205]], [[0.5814, 0.7706, 0.0411], [0.5393, 0.5365, 0.8133], [0.5545, 0.2512, 0.2596]]]]])
in1Sub7688 = tf.constant([[[[[0.8318, 0.9524, 0.4278], [0.5929, 0.8217, 0.0083], [0.2428, 0.2181, 0.3909]], [[0.6129, 0.9732, 0.0971], [0.5628, 0.5597, 0.9424], [0.4062, 0.4782, 0.3217]], [[0.7414, 0.8471, 0.9065], [0.8419, 0.0882, 0.0313], [0.9804, 0.8704, 0.0207]]], [[[0.0994, 0.9797, 0.051], [0.8553, 0.8581, 0.3071], [0.7856, 0.4916, 0.4964]], [[0.0225, 0.8854, 0.1931], [0.3784, 0.4325, 0.1564], [0.9324, 0.4984, 0.2681]], [[0.3604, 0.7551, 0.933], [0.9241, 0.442, 0.385], [0.028, 0.0861, 0.5203]]], [[[0.471, 0.1167, 0.8219], [0.9049, 0.4592, 0.2825], [0.8772, 0.316, 0.0628]], [[0.0506, 0.4833, 0.563], [0.6981, 0.9225, 0.4569], [0.1675, 0.0553, 0.351]], [[0.7533, 0.805, 0.1838], [0.0933, 0.9178, 0.9817], [0.0819, 0.8798, 0.0774]]]]])
in0Con24193 = tf.constant([[[[0.7664], [0.0195], [0.5726], [0.6251], [0.5758], [0.2265], [0.252], [0.615], [0.298], [0.8067], [0.1882], [0.675], [0.4549], [0.7196], [0.0395], [0.2442], [0.6679], [0.773], [0.1427], [0.0479], [0.8444], [0.6817], [0.0552], [0.7799], [0.1303], [0.1352], [0.0346]]]])
in0Min31677 = tf.constant([[[0.0656]]])
in1Min31677 = tf.constant([[[0.8061]]])
in0Con34089 = tf.constant([[[[[0.561]], [[0.6619]]]]])
in0Ave3504 = tf.constant([[[[[0.9859, 0.2073]], [[0.645, 0.5363]]]]])
in1Ave3504 = tf.constant([[[[[0.6062, 0.4174]], [[0.2024, 0.8723]]]]])
print (np.array2string(model.predict([in0Sub7688,in1Sub7688,in0Con24193,in0Min31677,in1Min31677,in0Con34089,in0Ave3504,in1Ave3504],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Mul15596.png')

LSub7688 = subtract_layer([[[[[0.4111, 0.3611, 0.5946], [0.485, 0.0269, 0.0103], [0.0594, 0.2826, 0.0767]], [[0.2949, 0.792, 0.4757], [0.3785, 0.5513, 0.272], [0.7368, 0.4254, 0.7013]], [[0.2506, 0.3553, 0.2069], [0.7421, 0.9819, 0.7349], [0.8883, 0.9738, 0.6126]]], [[[0.4872, 0.8787, 0.754], [0.2395, 0.9547, 0.8191], [0.7633, 0.8472, 0.0211]], [[0.6721, 0.8618, 0.1936], [0.4905, 0.4057, 0.6242], [0.7247, 0.154, 0.7293]], [[0.5501, 0.7672, 0.8961], [0.9634, 0.7648, 0.5753], [0.8444, 0.399, 0.7488]]], [[[0.2857, 0.6138, 0.4425], [0.2652, 0.4779, 0.1557], [0.428, 0.1875, 0.8245]], [[0.5887, 0.2301, 0.3776], [0.2725, 0.6543, 0.7083], [0.1065, 0.2975, 0.1205]], [[0.5814, 0.7706, 0.0411], [0.5393, 0.5365, 0.8133], [0.5545, 0.2512, 0.2596]]]]], [[[[[0.8318, 0.9524, 0.4278], [0.5929, 0.8217, 0.0083], [0.2428, 0.2181, 0.3909]], [[0.6129, 0.9732, 0.0971], [0.5628, 0.5597, 0.9424], [0.4062, 0.4782, 0.3217]], [[0.7414, 0.8471, 0.9065], [0.8419, 0.0882, 0.0313], [0.9804, 0.8704, 0.0207]]], [[[0.0994, 0.9797, 0.051], [0.8553, 0.8581, 0.3071], [0.7856, 0.4916, 0.4964]], [[0.0225, 0.8854, 0.1931], [0.3784, 0.4325, 0.1564], [0.9324, 0.4984, 0.2681]], [[0.3604, 0.7551, 0.933], [0.9241, 0.442, 0.385], [0.028, 0.0861, 0.5203]]], [[[0.471, 0.1167, 0.8219], [0.9049, 0.4592, 0.2825], [0.8772, 0.316, 0.0628]], [[0.0506, 0.4833, 0.563], [0.6981, 0.9225, 0.4569], [0.1675, 0.0553, 0.351]], [[0.7533, 0.805, 0.1838], [0.0933, 0.9178, 0.9817], [0.0819, 0.8798, 0.0774]]]]], Sub7688), 
LRes54587 = reshape_layer(Sub7688, [3, 3, 9], Res54587), 
LRes36089 = reshape_layer(Res54587, [3, 27], Res36089), 
LCro54638 = cropping1D_layer(Res36089, 1, 1, Cro54638), 
LRes1555 = reshape_layer(Cro54638, [1, 27, 1], Res1555), 
LCon24193 = concatenate_layer([Res1555,[[[[0.7664], [0.0195], [0.5726], [0.6251], [0.5758], [0.2265], [0.252], [0.615], [0.298], [0.8067], [0.1882], [0.675], [0.4549], [0.7196], [0.0395], [0.2442], [0.6679], [0.773], [0.1427], [0.0479], [0.8444], [0.6817], [0.0552], [0.7799], [0.1303], [0.1352], [0.0346]]]]], 3, Con24193), 
LMin31677 = minimum_layer([[[[0.0656]]], [[[0.8061]]]], Min31677), 
LRes83064 = reshape_layer(Min31677, [1, 1, 1], Res83064), 
LRes13604 = reshape_layer(Res83064, [1, 1, 1, 1], Res13604), 
LZer66194 = zero_padding3D_layer(Res13604, 0, 0, 1, 0, 0, 0, Zer66194), 
LCon34089 = concatenate_layer([Zer66194,[[[[[0.561]], [[0.6619]]]]]], 4, Con34089), 
LAve3504 = average_layer([[[[[[0.9859, 0.2073]], [[0.645, 0.5363]]]]], [[[[[0.6062, 0.4174]], [[0.2024, 0.8723]]]]]], Ave3504), 
LMin5199 = minimum_layer([Con34089,Ave3504], Min5199), 
LRes49384 = reshape_layer(Min5199, [1, 2, 2], Res49384), 
LAve39581 = average_pooling2D_layer(Res49384, 1, 1, 1, 2, true, Ave39581), 
LZer39704 = zero_padding2D_layer(Ave39581, 0, 0, 26, 0, Zer39704), 
LMul15596 = multiply_layer([Con24193,Zer39704], Mul15596), 
exec_layers([LSub7688,LRes54587,LRes36089,LCro54638,LRes1555,LCon24193,LMin31677,LRes83064,LRes13604,LZer66194,LCon34089,LAve3504,LMin5199,LRes49384,LAve39581,LZer39704,LMul15596],["Sub7688","Res54587","Res36089","Cro54638","Res1555","Con24193","Min31677","Res83064","Res13604","Zer66194","Con34089","Ave3504","Min5199","Res49384","Ave39581","Zer39704","Mul15596"],Mul15596,"Mul15596")

Actual (Unparsed): [[[[0.0000000, 0.0000000], [-0.0000000, 0.0000000], [0.0000000, 0.0000000], [-0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000], [-0.0000000, 0.0000000], [0.0000000, 0.0000000], [-0.0000000, 0.0000000], [0.0000000, 0.0000000], [-0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000], [-0.0000000, 0.0000000], [0.0000000, 0.0000000], [-0.0000000, 0.0000000], [-0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000], [-0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0108073]]]]

Expected (Unparsed): [[[[0.0,0.0],[-0.0,0.0],[0.0,0.0],[-0.0,0.0],[0.0,0.0],[0.0,0.0],[-0.0,0.0],[0.0,0.0],[-0.0,0.0],[0.0,0.0],[-0.0,0.0],[0.0,0.0],[0.0,0.0],[-0.0,0.0],[0.0,0.0],[-0.0,0.0],[-0.0,0.0],[0.0,0.0],[0.0,0.0],[0.0,0.0],[-0.0,0.0],[0.0,0.0],[0.0,0.0],[0.0,0.0],[0.0,0.0],[0.0,0.0],[0.0,0.01080731]]]]

Actual:   [[[[0, 0], [-0, 0], [0, 0], [-0, 0], [0, 0], [0, 0], [-0, 0], [0, 0], [-0, 0], [0, 0], [-0, 0], [0, 0], [0, 0], [-0, 0], [0, 0], [-0, 0], [-0, 0], [0, 0], [0, 0], [0, 0], [-0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0.0109]]]]

Expected: [[[[0, 0], [-0, 0], [0, 0], [-0, 0], [0, 0], [0, 0], [-0, 0], [0, 0], [-0, 0], [0, 0], [-0, 0], [0, 0], [0, 0], [-0, 0], [0, 0], [-0, 0], [-0, 0], [0, 0], [0, 0], [0, 0], [-0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0.0109]]]]