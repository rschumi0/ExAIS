import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Dot10656 = tf.keras.layers.Input(shape=([2]))
in1Dot10656 = tf.keras.layers.Input(shape=([2]))
in0Thr12514 = tf.keras.layers.Input(shape=([1, 2]))
in0Con62112 = tf.keras.layers.Input(shape=([2, 2]))
in0Max63967 = tf.keras.layers.Input(shape=([2, 2, 2, 1]))
in1Max63967 = tf.keras.layers.Input(shape=([2, 2, 2, 1]))
in0Con13684 = tf.keras.layers.Input(shape=([4, 10]))

Dot10656 = keras.layers.Dot(axes=(1, 1), name = 'Dot10656', )([in0Dot10656,in1Dot10656])
Res20436 = keras.layers.Reshape((1, 1), name = 'Res20436', )(Dot10656)
Res30917 = keras.layers.Reshape((1, 1, 1), name = 'Res30917', )(Res20436)
Con42895 = keras.layers.Conv2DTranspose(2, (1, 1),strides=(1, 7), padding='valid', name = 'Con42895', )(Res30917)
Res54147 = keras.layers.Reshape((1, 14), name = 'Res54147', )(Con42895)
Zer402 = keras.layers.ZeroPadding1D(padding=((3, 0)), name = 'Zer402', )(Res54147)
Thr12514 = keras.layers.ThresholdedReLU(theta=9.153547702273155, name = 'Thr12514', input_shape=(1, 2))(in0Thr12514)
Zer72436 = keras.layers.ZeroPadding1D(padding=((1, 0)), name = 'Zer72436', )(Thr12514)
Con62112 = keras.layers.Concatenate(axis=2, name = 'Con62112', )([Zer72436,in0Con62112])
Max63967 = keras.layers.Maximum(name = 'Max63967', )([in0Max63967,in1Max63967])
Res57741 = keras.layers.Reshape((2, 2, 2), name = 'Res57741', )(Max63967)
Res12320 = keras.layers.Reshape((2, 4), name = 'Res12320', )(Res57741)
Mas19011 = keras.layers.Masking(mask_value=1, name = 'Mas19011', )(Res12320)
Ave2219 = keras.layers.Average(name = 'Ave2219', )([Con62112,Mas19011])
Zer99723 = keras.layers.ZeroPadding1D(padding=((1, 1)), name = 'Zer99723', )(Ave2219)
Con13684 = keras.layers.Concatenate(axis=2, name = 'Con13684', )([Zer99723,in0Con13684])
Min23048 = keras.layers.Minimum(name = 'Min23048', )([Zer402,Con13684])
model = tf.keras.models.Model(inputs=[in0Dot10656,in1Dot10656,in0Thr12514,in0Con62112,in0Max63967,in1Max63967,in0Con13684], outputs=Min23048)
w = model.get_layer('Con42895').get_weights() 
w[0] = np.array([[[[0.5323], [0.9793]]]])
w[1] = np.array([0, 0])
model.get_layer('Con42895').set_weights(w) 
in0Dot10656 = tf.constant([[0.7893, 0.547]])
in1Dot10656 = tf.constant([[0.8263, 0.4606]])
in0Thr12514 = tf.constant([[[0.4642, 0.0432]]])
in0Con62112 = tf.constant([[[0.1767, 0.9061], [0.7399, 0.5947]]])
in0Max63967 = tf.constant([[[[[0.4223], [0.9705]], [[0.4583], [0.8472]]], [[[0.1778], [0.2644]], [[0.8616], [0.244]]]]])
in1Max63967 = tf.constant([[[[[0.6108], [0.8311]], [[0.032], [0.0939]]], [[[0.7608], [0.9056]], [[0.5188], [0.0339]]]]])
in0Con13684 = tf.constant([[[0.4846, 0.2543, 0.8607, 0.0844, 0.7703, 0.6275, 0.0914, 0.9779, 0.9282, 0.2987], [0.6305, 0.3026, 0.0867, 0.5935, 0.9941, 0.0952, 0.7912, 0.7321, 0.966, 0.2385], [0.042, 0.0134, 0.3733, 0.6461, 0.9826, 0.4529, 0.775, 0.6968, 0.1187, 0.2382], [0.7479, 0.0809, 0.3133, 0.5281, 0.4635, 0.6399, 0.7053, 0.0563, 0.2878, 0.4858]]])
print (np.array2string(model.predict([in0Dot10656,in1Dot10656,in0Thr12514,in0Con62112,in0Max63967,in1Max63967,in0Con13684],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Min23048.png')

LDot10656 = dot_layer([[0.7893, 0.547]], [[0.8263, 0.4606]], 1, 1, Dot10656), 
LRes20436 = reshape_layer(Dot10656, [1, 1], Res20436), 
LRes30917 = reshape_layer(Res20436, [1, 1, 1], Res30917), 
LCon42895 = conv2D_transpose_layer(Res30917, 1, 1,[[[[0.5323], [0.9793]]]],[0, 0], 1, 7, false, Con42895), 
LRes54147 = reshape_layer(Con42895, [1, 14], Res54147), 
LZer402 = zero_padding1D_layer(Res54147, 3, 0, Zer402), 
LThr12514 = thresholded_relu_layer([[[0.4642, 0.0432]]], 9.153547702273155, Thr12514), 
LZer72436 = zero_padding1D_layer(Thr12514, 1, 0, Zer72436), 
LCon62112 = concatenate_layer([Zer72436,[[[0.1767, 0.9061], [0.7399, 0.5947]]]], 2, Con62112), 
LMax63967 = maximum_layer([[[[[[0.4223], [0.9705]], [[0.4583], [0.8472]]], [[[0.1778], [0.2644]], [[0.8616], [0.244]]]]], [[[[[0.6108], [0.8311]], [[0.032], [0.0939]]], [[[0.7608], [0.9056]], [[0.5188], [0.0339]]]]]], Max63967), 
LRes57741 = reshape_layer(Max63967, [2, 2, 2], Res57741), 
LRes12320 = reshape_layer(Res57741, [2, 4], Res12320), 
LMas19011 = masking_layer(Res12320, 1, Mas19011), 
LAve2219 = average_layer([Con62112,Mas19011], Ave2219), 
LZer99723 = zero_padding1D_layer(Ave2219, 1, 1, Zer99723), 
LCon13684 = concatenate_layer([Zer99723,[[[0.4846, 0.2543, 0.8607, 0.0844, 0.7703, 0.6275, 0.0914, 0.9779, 0.9282, 0.2987], [0.6305, 0.3026, 0.0867, 0.5935, 0.9941, 0.0952, 0.7912, 0.7321, 0.966, 0.2385], [0.042, 0.0134, 0.3733, 0.6461, 0.9826, 0.4529, 0.775, 0.6968, 0.1187, 0.2382], [0.7479, 0.0809, 0.3133, 0.5281, 0.4635, 0.6399, 0.7053, 0.0563, 0.2878, 0.4858]]]], 2, Con13684), 
LMin23048 = minimum_layer([Zer402,Con13684], Min23048), 
exec_layers([LDot10656,LRes20436,LRes30917,LCon42895,LRes54147,LZer402,LThr12514,LZer72436,LCon62112,LMax63967,LRes57741,LRes12320,LMas19011,LAve2219,LZer99723,LCon13684,LMin23048],["Dot10656","Res20436","Res30917","Con42895","Res54147","Zer402","Thr12514","Zer72436","Con62112","Max63967","Res57741","Res12320","Mas19011","Ave2219","Zer99723","Con13684","Min23048"],Min23048,"Min23048")

Actual (Unparsed

Expected (Unparsed): [[[0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0]]]

Actual:   [[[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]]]

Expected: [[[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]]]