import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0LST60428 = tf.keras.layers.Input(shape=([3, 1]))

LST60428 = keras.layers.LSTM(3,recurrent_activation='sigmoid', name = 'LST60428', )(in0LST60428)
Fla81429 = keras.layers.Flatten(name = 'Fla81429', )(LST60428)
model = tf.keras.models.Model(inputs=[in0LST60428], outputs=Fla81429)
w = model.get_layer('LST60428').get_weights() 
w[0] = np.array([[5, 7, 6, 6, 1, 8, 7, 9, 8, 2, 10, 5]])
w[1] = np.array([[4, 10, 4, 2, 8, 3, 7, 6, 1, 4, 10, 7], [3, 7, 7, 6, 3, 3, 4, 1, 10, 1, 7, 2], [3, 7, 1, 8, 2, 10, 4, 5, 7, 2, 9, 10]])
w[2] = np.array([3, 4, 6, 7, 6, 5, 6, 6, 9, 8, 7, 1])
model.get_layer('LST60428').set_weights(w) 
in0LST60428 = tf.constant([[[8], [2], [3]]])
print (np.array2string(model.predict([in0LST60428],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Fla81429.png')

LLST60428 = lstm_layer([[[8], [2], [3]]],[[5, 7, 6, 6, 1, 8, 7, 9, 8, 2, 10, 5]],[[4, 10, 4, 2, 8, 3, 7, 6, 1, 4, 10, 7], [3, 7, 7, 6, 3, 3, 4, 1, 10, 1, 7, 2], [3, 7, 1, 8, 2, 10, 4, 5, 7, 2, 9, 10]],[3, 4, 6, 7, 6, 5, 6, 6, 9, 8, 7, 1], LST60428), 
LFla81429 = flatten_layer(LST60428, Fla81429), 
exec_layers([LLST60428,LFla81429],["LST60428","Fla81429"],Fla81429,"Fla81429")

Actual (Unparsed): [[0.9950548, 0.9950548, 0.9950548]]

Expected (Unparsed): [[0.995054752705179,0.9950547535120022,0.9950547536867129]]

Actual:   [[0.9951, 0.9951, 0.9951]]

Expected: [[0.9951, 0.9951, 0.9951]]