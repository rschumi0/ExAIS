import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0ReL96348 = tf.keras.layers.Input(shape=([1, 1]))
in0Con50050 = tf.keras.layers.Input(shape=([1, 2, 9]))
in0Con6999 = tf.keras.layers.Input(shape=([2, 2]))
in0Con51604 = tf.keras.layers.Input(shape=([2, 3, 5, 1]))
in0Sub85187 = tf.keras.layers.Input(shape=([2, 2, 3, 2]))
in1Sub85187 = tf.keras.layers.Input(shape=([2, 2, 3, 2]))

ReL96348 = keras.layers.ReLU(max_value=4.212936503434957, negative_slope=0.44124676659387774, threshold=5.172690609326651, name = 'ReL96348', input_shape=(1, 1))(in0ReL96348)
Res95303 = keras.layers.Reshape((1, 1, 1), name = 'Res95303', )(ReL96348)
Zer86214 = keras.layers.ZeroPadding2D(padding=((0, 0), (1, 0)), name = 'Zer86214', )(Res95303)
Con50050 = keras.layers.Concatenate(axis=3, name = 'Con50050', )([Zer86214,in0Con50050])
Con6999 = keras.layers.Conv1D(3, (2),strides=(1), padding='same', dilation_rate=(1), name = 'Con6999', )(in0Con6999)
Thr64355 = keras.layers.ThresholdedReLU(theta=1.6678790771588372, name = 'Thr64355', )(Con6999)
Res30157 = keras.layers.Reshape((2, 3, 1), name = 'Res30157', )(Thr64355)
Res75911 = keras.layers.Reshape((2, 3, 1, 1), name = 'Res75911', )(Res30157)
Zer15540 = keras.layers.ZeroPadding3D(padding=((0, 0), (0, 0), (4, 0)), name = 'Zer15540', )(Res75911)
Con51604 = keras.layers.Concatenate(axis=4, name = 'Con51604', )([Zer15540,in0Con51604])
Sub85187 = keras.layers.Subtract(name = 'Sub85187', )([in0Sub85187,in1Sub85187])
Zer89912 = keras.layers.ZeroPadding3D(padding=((0, 0), (1, 0), (2, 0)), name = 'Zer89912', )(Sub85187)
Ave80259 = keras.layers.Average(name = 'Ave80259', )([Con51604,Zer89912])
Res21937 = keras.layers.Reshape((2, 3, 10), name = 'Res21937', )(Ave80259)
Dep68178 = keras.layers.DepthwiseConv2D((2, 1),strides=(2, 2), padding='same', name = 'Dep68178', )(Res21937)
Mul84774 = keras.layers.Multiply(name = 'Mul84774', )([Con50050,Dep68178])
model = tf.keras.models.Model(inputs=[in0ReL96348,in0Con50050,in0Con6999,in0Con51604,in0Sub85187,in1Sub85187], outputs=Mul84774)
w = model.get_layer('Con6999').get_weights() 
w[0] = np.array([[[0.5233, 0.5881, 0.1873], [0.1205, 0.0951, 0.8536]], [[0.9106, 0.6897, 0.5577], [0.2372, 0.7117, 0.3179]]])
w[1] = np.array([0, 0, 0])
model.get_layer('Con6999').set_weights(w) 
w = model.get_layer('Dep68178').get_weights() 
w[0] = np.array([[[[0.7947], [0.7403], [0.902], [0.1067], [0.0128], [0.4334], [0.7618], [0.4461], [0.2574], [0.9328]]], [[[0.1538], [0.4944], [0.5006], [0.8832], [0.5571], [0.7959], [0.8993], [0.0955], [0.4046], [0.9658]]]])
w[1] = np.array([0, 0, 0, 0, 0, 0, 0, 0, 0, 0])
model.get_layer('Dep68178').set_weights(w) 
in0ReL96348 = tf.constant([[[0.5787]]])
in0Con50050 = tf.constant([[[[0.2925, 0.8215, 0.1293, 0.152, 0.9363, 0.5318, 0.4184, 0.6631, 0.5397], [0.119, 0.785, 0.9015, 0.4307, 0.7182, 0.7564, 0.992, 0.3808, 0.6433]]]])
in0Con6999 = tf.constant([[[0.637, 0.4102], [0.0141, 0.4691]]])
in0Con51604 = tf.constant([[[[[0.477], [0.3526], [0.8083], [0.0098], [0.4097]], [[0.9263], [0.6243], [0.8373], [0.8273], [0.688]], [[0.2899], [0.2221], [0.9463], [0.7197], [0.7667]]], [[[0.0198], [0.1033], [0.2282], [0.584], [0.8075]], [[0.5316], [0.3485], [0.1987], [0.7176], [0.3894]], [[0.3916], [0.9172], [0.273], [0.2776], [0.7094]]]]])
in0Sub85187 = tf.constant([[[[[0.9393, 0.6447], [0.1226, 0.2349], [0.9902, 0.6303]], [[0.8194, 0.2698], [0.7392, 0.0676], [0.6702, 0.3638]]], [[[0.703, 0.6949], [0.5763, 0.6485], [0.4471, 0.02]], [[0.7908, 0.9306], [0.0566, 0.4125], [0.2806, 0.8649]]]]])
in1Sub85187 = tf.constant([[[[[0.6787, 0.3241], [0.8338, 0.4644], [0.3295, 0.8995]], [[0.0057, 0.6417], [0.6837, 0.3966], [0.5931, 0.8342]]], [[[0.4873, 0.6405], [0.833, 0.2798], [0.5704, 0.2073]], [[0.9326, 0.1747], [0.1744, 0.1477], [0.8554, 0.7754]]]]])
print (np.array2string(model.predict([in0ReL96348,in0Con50050,in0Con6999,in0Con51604,in0Sub85187,in1Sub85187],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Mul84774.png')

LReL96348 = relu_layer([[[0.5787]]], 4.212936503434957, 0.44124676659387774, 5.172690609326651, ReL96348), 
LRes95303 = reshape_layer(ReL96348, [1, 1, 1], Res95303), 
LZer86214 = zero_padding2D_layer(Res95303, 0, 0, 1, 0, Zer86214), 
LCon50050 = concatenate_layer([Zer86214,[[[[0.2925, 0.8215, 0.1293, 0.152, 0.9363, 0.5318, 0.4184, 0.6631, 0.5397], [0.119, 0.785, 0.9015, 0.4307, 0.7182, 0.7564, 0.992, 0.3808, 0.6433]]]]], 3, Con50050), 
LCon6999 = conv1D_layer([[[0.637, 0.4102], [0.0141, 0.4691]]], 2,[[[0.5233, 0.5881, 0.1873], [0.1205, 0.0951, 0.8536]], [[0.9106, 0.6897, 0.5577], [0.2372, 0.7117, 0.3179]]],[0, 0, 0], 1, true, 1, Con6999), 
LThr64355 = thresholded_relu_layer(Con6999, 1.6678790771588372, Thr64355), 
LRes30157 = reshape_layer(Thr64355, [2, 3, 1], Res30157), 
LRes75911 = reshape_layer(Res30157, [2, 3, 1, 1], Res75911), 
LZer15540 = zero_padding3D_layer(Res75911, 0, 0, 0, 0, 4, 0, Zer15540), 
LCon51604 = concatenate_layer([Zer15540,[[[[[0.477], [0.3526], [0.8083], [0.0098], [0.4097]], [[0.9263], [0.6243], [0.8373], [0.8273], [0.688]], [[0.2899], [0.2221], [0.9463], [0.7197], [0.7667]]], [[[0.0198], [0.1033], [0.2282], [0.584], [0.8075]], [[0.5316], [0.3485], [0.1987], [0.7176], [0.3894]], [[0.3916], [0.9172], [0.273], [0.2776], [0.7094]]]]]], 4, Con51604), 
LSub85187 = subtract_layer([[[[[0.9393, 0.6447], [0.1226, 0.2349], [0.9902, 0.6303]], [[0.8194, 0.2698], [0.7392, 0.0676], [0.6702, 0.3638]]], [[[0.703, 0.6949], [0.5763, 0.6485], [0.4471, 0.02]], [[0.7908, 0.9306], [0.0566, 0.4125], [0.2806, 0.8649]]]]], [[[[[0.6787, 0.3241], [0.8338, 0.4644], [0.3295, 0.8995]], [[0.0057, 0.6417], [0.6837, 0.3966], [0.5931, 0.8342]]], [[[0.4873, 0.6405], [0.833, 0.2798], [0.5704, 0.2073]], [[0.9326, 0.1747], [0.1744, 0.1477], [0.8554, 0.7754]]]]], Sub85187), 
LZer89912 = zero_padding3D_layer(Sub85187, 0, 0, 1, 0, 2, 0, Zer89912), 
LAve80259 = average_layer([Con51604,Zer89912], Ave80259), 
LRes21937 = reshape_layer(Ave80259, [2, 3, 10], Res21937), 
LDep68178 = depthwise_conv2D_layer(Res21937, 2, 1,[[[[0.7947], [0.7403], [0.902], [0.1067], [0.0128], [0.4334], [0.7618], [0.4461], [0.2574], [0.9328]]], [[[0.1538], [0.4944], [0.5006], [0.8832], [0.5571], [0.7959], [0.8993], [0.0955], [0.4046], [0.9658]]]],[0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 2, 2, true, Dep68178), 
LMul84774 = multiply_layer([Con50050,Dep68178], Mul84774), 
exec_layers([LReL96348,LRes95303,LZer86214,LCon50050,LCon6999,LThr64355,LRes30157,LRes75911,LZer15540,LCon51604,LSub85187,LZer89912,LAve80259,LRes21937,LDep68178,LMul84774],["ReL96348","Res95303","Zer86214","Con50050","Con6999","Thr64355","Res30157","Res75911","Zer15540","Con51604","Sub85187","Zer89912","Ave80259","Res21937","Dep68178","Mul84774"],Mul84774,"Mul84774")

Actual (Unparsed): [[[[0.0000000, 0.0530759, 0.0000000, 0.0083306, 0.0000000, 0.2490285, 0.0000000, 0.0125821, 0.0000000, 0.3135796], [-0.0000000, 0.0242891, 0.0000000, 0.3758214, -0.0147690, 0.3834637, -0.0240753, 0.1121409, -0.0405016, 0.3370783]]]]

Expected (Unparsed): [[[[0.0,0.05307591217499999,0.0,0.008330603757,0.0,0.24902846004,0.0,0.012582078775999999,0.0,0.31357964045099995],[-0.0,0.024289090594999996,0.0,0.3758214263325,-0.014769008797000008,0.3834636673770001,-0.024075319448,0.11214087312,-0.040501610016,0.33707834752900007]]]]

Actual:   [[[[0, 0.0531, 0, 0.0084, 0, 0.2491, 0, 0.0126, 0, 0.3136], [-0, 0.0243, 0, 0.3759, -0.0147, 0.3835, -0.024, 0.1122, -0.0405, 0.3371]]]]

Expected: [[[[0, 0.0531, 0, 0.0084, 0, 0.2491, 0, 0.0126, 0, 0.3136], [-0, 0.0243, 0, 0.3759, -0.0147, 0.3835, -0.024, 0.1122, -0.0405, 0.3371]]]]