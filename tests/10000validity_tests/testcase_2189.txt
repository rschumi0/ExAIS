import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Mul62066 = tf.keras.layers.Input(shape=([1, 2, 2, 2]))
in1Mul62066 = tf.keras.layers.Input(shape=([1, 2, 2, 2]))

Mul62066 = keras.layers.Multiply(name = 'Mul62066', )([in0Mul62066,in1Mul62066])
Thr66825 = keras.layers.ThresholdedReLU(theta=1.4542620243530369, name = 'Thr66825', )(Mul62066)
model = tf.keras.models.Model(inputs=[in0Mul62066,in1Mul62066], outputs=Thr66825)
in0Mul62066 = tf.constant([[[[[0.22, 0.8199], [0.7317, 0.1334]], [[0.5344, 0.7184], [0.293, 0.4254]]]]])
in1Mul62066 = tf.constant([[[[[0.437, 0.525], [0.1683, 0.3911]], [[0.0383, 0.1526], [0.6953, 0.3649]]]]])
print (np.array2string(model.predict([in0Mul62066,in1Mul62066],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Thr66825.png')

LMul62066 = multiply_layer([[[[[[0.22, 0.8199], [0.7317, 0.1334]], [[0.5344, 0.7184], [0.293, 0.4254]]]]], [[[[[0.437, 0.525], [0.1683, 0.3911]], [[0.0383, 0.1526], [0.6953, 0.3649]]]]]], Mul62066), 
LThr66825 = thresholded_relu_layer(Mul62066, 1.4542620243530369, Thr66825), 
exec_layers([LMul62066,LThr66825],["Mul62066","Thr66825"],Thr66825,"Thr66825")

Actual (Unparsed): [[[[[0.0000000, 0.0000000], [0.0000000, 0.0000000]], [[0.0000000, 0.0000000], [0.0000000, 0.0000000]]]]]

Expected (Unparsed): [[[[[0,0],[0,0]],[[0,0],[0,0]]]]]

Actual:   [[[[[0, 0], [0, 0]], [[0, 0], [0, 0]]]]]

Expected: [[[[[0, 0], [0, 0]], [[0, 0], [0, 0]]]]]