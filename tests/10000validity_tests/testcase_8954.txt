import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Mul90279 = tf.keras.layers.Input(shape=([1, 1]))
in1Mul90279 = tf.keras.layers.Input(shape=([1, 1]))

Mul90279 = keras.layers.Multiply(name = 'Mul90279', )([in0Mul90279,in1Mul90279])
Res79365 = keras.layers.Reshape((1, 1, 1), name = 'Res79365', )(Mul90279)
Res62374 = keras.layers.Reshape((1, 1, 1, 1), name = 'Res62374', )(Res79365)
Glo93988 = keras.layers.GlobalAveragePooling3D(name = 'Glo93988', )(Res62374)
Res21367 = keras.layers.Reshape((1, 1), name = 'Res21367', )(Glo93988)
Zer55109 = keras.layers.ZeroPadding1D(padding=((1, 1)), name = 'Zer55109', )(Res21367)
Ave46579 = keras.layers.AveragePooling1D(pool_size=(1), name = 'Ave46579', )(Zer55109)
model = tf.keras.models.Model(inputs=[in0Mul90279,in1Mul90279], outputs=Ave46579)
in0Mul90279 = tf.constant([[[0.0311]]])
in1Mul90279 = tf.constant([[[0.8732]]])
print (np.array2string(model.predict([in0Mul90279,in1Mul90279],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Ave46579.png')

LMul90279 = multiply_layer([[[[0.0311]]], [[[0.8732]]]], Mul90279), 
LRes79365 = reshape_layer(Mul90279, [1, 1, 1], Res79365), 
LRes62374 = reshape_layer(Res79365, [1, 1, 1, 1], Res62374), 
LGlo93988 = global_average_pooling3D_layer(Res62374, Glo93988), 
LRes21367 = reshape_layer(Glo93988, [1, 1], Res21367), 
LZer55109 = zero_padding1D_layer(Res21367, 1, 1, Zer55109), 
LAve46579 = average_pooling1D_layer(Zer55109, 1, Ave46579), 
exec_layers([LMul90279,LRes79365,LRes62374,LGlo93988,LRes21367,LZer55109,LAve46579],["Mul90279","Res79365","Res62374","Glo93988","Res21367","Zer55109","Ave46579"],Ave46579,"Ave46579")

Actual (Unparsed): [[[0.0000000], [0.0271565], [0.0000000]]]

Expected (Unparsed): [[[0],[0.02715652],[0]]]

Actual:   [[[0], [0.0272], [0]]]

Expected: [[[0], [0.0272], [0]]]