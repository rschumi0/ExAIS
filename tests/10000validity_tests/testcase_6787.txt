import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Max93432 = tf.keras.layers.Input(shape=([2, 2]))
in1Max93432 = tf.keras.layers.Input(shape=([2, 2]))
in0Con91221 = tf.keras.layers.Input(shape=([18, 2, 2, 1]))
in0Mul58163 = tf.keras.layers.Input(shape=([1, 1, 1, 2]))
in1Mul58163 = tf.keras.layers.Input(shape=([1, 1, 1, 2]))

Max93432 = keras.layers.Maximum(name = 'Max93432', )([in0Max93432,in1Max93432])
Res50984 = keras.layers.Reshape((2, 2, 1), name = 'Res50984', )(Max93432)
Con58450 = keras.layers.Conv2DTranspose(2, (1, 2),strides=(9, 1), padding='same', name = 'Con58450', )(Res50984)
Res5893 = keras.layers.Reshape((18, 2, 2, 1), name = 'Res5893', )(Con58450)
Con91221 = keras.layers.Concatenate(axis=4, name = 'Con91221', )([Res5893,in0Con91221])
Mul58163 = keras.layers.Multiply(name = 'Mul58163', )([in0Mul58163,in1Mul58163])
Zer64126 = keras.layers.ZeroPadding3D(padding=((17, 0), (1, 0), (1, 0)), name = 'Zer64126', )(Mul58163)
Sub55284 = keras.layers.Subtract(name = 'Sub55284', )([Con91221,Zer64126])
model = tf.keras.models.Model(inputs=[in0Max93432,in1Max93432,in0Con91221,in0Mul58163,in1Mul58163], outputs=Sub55284)
w = model.get_layer('Con58450').get_weights() 
w[0] = np.array([[[[0.838], [0.5176]], [[0.3098], [0.8876]]]])
w[1] = np.array([0, 0])
model.get_layer('Con58450').set_weights(w) 
in0Max93432 = tf.constant([[[0.5636, 0.758], [0.3851, 0.5107]]])
in1Max93432 = tf.constant([[[0.3579, 0.6543], [0.5353, 0.0233]]])
in0Con91221 = tf.constant([[[[[0.2958], [0.7002]], [[0.3755], [0.5779]]], [[[0.6492], [0.5602]], [[0.0091], [0.7769]]], [[[0.7375], [0.9993]], [[0.2048], [0.932]]], [[[0.6349], [0.5082]], [[0.4567], [0.0658]]], [[[0.837], [0.3381]], [[0.5005], [0.0197]]], [[[0.1548], [0.5162]], [[0.8307], [0.5797]]], [[[0.3794], [0.2834]], [[0.7364], [0.0755]]], [[[0.4208], [0.047]], [[0.9972], [0.5767]]], [[[0.8524], [0.9186]], [[0.9311], [0.2444]]], [[[0.9173], [0.0479]], [[0.4488], [0.4893]]], [[[0.0945], [0.2553]], [[0.1257], [0.3305]]], [[[0.2601], [0.9172]], [[0.0822], [0.7578]]], [[[0.3308], [0.6651]], [[0.6305], [0.9545]]], [[[0.0309], [0.2196]], [[0.238], [0.9575]]], [[[0.0845], [0.6032]], [[0.3393], [0.7021]]], [[[0.7019], [0.047]], [[0.9286], [0.4264]]], [[[0.7045], [0.1418]], [[0.6646], [0.0961]]], [[[0.0112], [0.1674]], [[0.4289], [0.8514]]]]])
in0Mul58163 = tf.constant([[[[[0.2504, 0.5268]]]]])
in1Mul58163 = tf.constant([[[[[0.6758, 0.5759]]]]])
print (np.array2string(model.predict([in0Max93432,in1Max93432,in0Con91221,in0Mul58163,in1Mul58163],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Sub55284.png')

LMax93432 = maximum_layer([[[[0.5636, 0.758], [0.3851, 0.5107]]], [[[0.3579, 0.6543], [0.5353, 0.0233]]]], Max93432), 
LRes50984 = reshape_layer(Max93432, [2, 2, 1], Res50984), 
LCon58450 = conv2D_transpose_layer(Res50984, 1, 2,[[[[0.838], [0.5176]], [[0.3098], [0.8876]]]],[0, 0], 9, 1, true, Con58450), 
LRes5893 = reshape_layer(Con58450, [18, 2, 2, 1], Res5893), 
LCon91221 = concatenate_layer([Res5893,[[[[[0.2958], [0.7002]], [[0.3755], [0.5779]]], [[[0.6492], [0.5602]], [[0.0091], [0.7769]]], [[[0.7375], [0.9993]], [[0.2048], [0.932]]], [[[0.6349], [0.5082]], [[0.4567], [0.0658]]], [[[0.837], [0.3381]], [[0.5005], [0.0197]]], [[[0.1548], [0.5162]], [[0.8307], [0.5797]]], [[[0.3794], [0.2834]], [[0.7364], [0.0755]]], [[[0.4208], [0.047]], [[0.9972], [0.5767]]], [[[0.8524], [0.9186]], [[0.9311], [0.2444]]], [[[0.9173], [0.0479]], [[0.4488], [0.4893]]], [[[0.0945], [0.2553]], [[0.1257], [0.3305]]], [[[0.2601], [0.9172]], [[0.0822], [0.7578]]], [[[0.3308], [0.6651]], [[0.6305], [0.9545]]], [[[0.0309], [0.2196]], [[0.238], [0.9575]]], [[[0.0845], [0.6032]], [[0.3393], [0.7021]]], [[[0.7019], [0.047]], [[0.9286], [0.4264]]], [[[0.7045], [0.1418]], [[0.6646], [0.0961]]], [[[0.0112], [0.1674]], [[0.4289], [0.8514]]]]]], 4, Con91221), 
LMul58163 = multiply_layer([[[[[[0.2504, 0.5268]]]]], [[[[[0.6758, 0.5759]]]]]], Mul58163), 
LZer64126 = zero_padding3D_layer(Mul58163, 17, 0, 1, 0, 1, 0, Zer64126), 
LSub55284 = subtract_layer(Con91221,Zer64126, Sub55284), 
exec_layers([LMax93432,LRes50984,LCon58450,LRes5893,LCon91221,LMul58163,LZer64126,LSub55284],["Max93432","Res50984","Con58450","Res5893","Con91221","Mul58163","Zer64126","Sub55284"],Sub55284,"Sub55284")

Actual (Unparsed): [[[[[0.4722968, 0.2958000], [0.2917194, 0.7002000]], [[0.8098073, 0.3755000], [0.8925922, 0.5779000]]], [[[0.0000000, 0.6492000], [0.0000000, 0.5602000]], [[0.0000000, 0.0091000], [0.0000000, 0.7769000]]], [[[0.0000000, 0.7375000], [0.0000000, 0.9993000]], [[0.0000000, 0.2048000], [0.0000000, 0.9320000]]], [[[0.0000000, 0.6349000], [0.0000000, 0.5082000]], [[0.0000000, 0.4567000], [0.0000000, 0.0658000]]], [[[0.0000000, 0.8370000], [0.0000000, 0.3381000]], [[0.0000000, 0.5005000], [0.0000000, 0.0197000]]], [[[0.0000000, 0.1548000], [0.0000000, 0.5162000]], [[0.0000000, 0.8307000], [0.0000000, 0.5797000]]], [[[0.0000000, 0.3794000], [0.0000000, 0.2834000]], [[0.0000000, 0.7364000], [0.0000000, 0.0755000]]], [[[0.0000000, 0.4208000], [0.0000000, 0.0470000]], [[0.0000000, 0.9972000], [0.0000000, 0.5767000]]], [[[0.0000000, 0.8524000], [0.0000000, 0.9186000]], [[0.0000000, 0.9311000], [0.0000000, 0.2444000]]], [[[0.4485814, 0.9173000], [0.2770713, 0.0479000]], [[0.5938025, 0.4488000], [0.7394706, 0.4893000]]], [[[0.0000000, 0.0945000], [0.0000000, 0.2553000]], [[0.0000000, 0.1257000], [0.0000000, 0.3305000]]], [[[0.0000000, 0.2601000], [0.0000000, 0.9172000]], [[0.0000000, 0.0822000], [0.0000000, 0.7578000]]], [[[0.0000000, 0.3308000], [0.0000000, 0.6651000]], [[0.0000000, 0.6305000], [0.0000000, 0.9545000]]], [[[0.0000000, 0.0309000], [0.0000000, 0.2196000]], [[0.0000000, 0.2380000], [0.0000000, 0.9575000]]], [[[0.0000000, 0.0845000], [0.0000000, 0.6032000]], [[0.0000000, 0.3393000], [0.0000000, 0.7021000]]], [[[0.0000000, 0.7019000], [0.0000000, 0.0470000]], [[0.0000000, 0.9286000], [0.0000000, 0.4264000]]], [[[0.0000000, 0.7045000], [0.0000000, 0.1418000]], [[0.0000000, 0.6646000], [0.0000000, 0.0961000]]], [[[0.0000000, 0.0112000], [0.0000000, 0.1674000]], [[0.0000000, 0.4289000], [-0.1692203, 0.5480159]]]]]

Expected (Unparsed): [[[[[0.47229679999999996,0.2958],[0.29171936,0.7002]],[[0.80980728,0.3755],[0.89259216,0.5779]]],[[[0,0.6492],[0,0.5602]],[[0,0.0091],[0,0.7769]]],[[[0,0.7375],[0,0.9993]],[[0,0.2048],[0,0.932]]],[[[0,0.6349],[0,0.5082]],[[0,0.4567],[0,0.0658]]],[[[0,0.837],[0,0.3381]],[[0,0.5005],[0,0.0197]]],[[[0,0.1548],[0,0.5162]],[[0,0.8307],[0,0.5797]]],[[[0,0.3794],[0,0.2834]],[[0,0.7364],[0,0.0755]]],[[[0,0.4208],[0,0.047]],[[0,0.9972],[0,0.5767]]],[[[0,0.8524],[0,0.9186]],[[0,0.9311],[0,0.2444]]],[[[0.44858139999999996,0.9173],[0.27707128,0.0479]],[[0.59380254,0.4488],[0.7394706,0.4893]]],[[[0,0.0945],[0,0.2553]],[[0,0.1257],[0,0.3305]]],[[[0,0.2601],[0,0.9172]],[[0,0.0822],[0,0.7578]]],[[[0,0.3308],[0,0.6651]],[[0,0.6305],[0,0.9545]]],[[[0,0.0309],[0,0.2196]],[[0,0.238],[0,0.9575]]],[[[0,0.0845],[0,0.6032]],[[0,0.3393],[0,0.7021]]],[[[0,0.7019],[0,0.047]],[[0,0.9286],[0,0.4264]]],[[[0,0.7045],[0,0.1418]],[[0,0.6646],[0,0.0961]]],[[[0,0.0112],[0,0.1674]],[[0,0.4289],[-0.16922032,0.54801588]]]]]

Actual:   [[[[[0.4723, 0.2958], [0.2918, 0.7002]], [[0.8099, 0.3755], [0.8926, 0.5779]]], [[[0, 0.6492], [0, 0.5602]], [[0, 0.0091], [0, 0.7769]]], [[[0, 0.7375], [0, 0.9993]], [[0, 0.2048], [0, 0.932]]], [[[0, 0.6349], [0, 0.5082]], [[0, 0.4567], [0, 0.0658]]], [[[0, 0.837], [0, 0.3381]], [[0, 0.5005], [0, 0.0197]]], [[[0, 0.1548], [0, 0.5162]], [[0, 0.8307], [0, 0.5797]]], [[[0, 0.3794], [0, 0.2834]], [[0, 0.7364], [0, 0.0755]]], [[[0, 0.4208], [0, 0.047]], [[0, 0.9972], [0, 0.5767]]], [[[0, 0.8524], [0, 0.9186]], [[0, 0.9311], [0, 0.2444]]], [[[0.4486, 0.9173], [0.2771, 0.0479]], [[0.5939, 0.4488], [0.7395, 0.4893]]], [[[0, 0.0945], [0, 0.2553]], [[0, 0.1257], [0, 0.3305]]], [[[0, 0.2601], [0, 0.9172]], [[0, 0.0822], [0, 0.7578]]], [[[0, 0.3308], [0, 0.6651]], [[0, 0.6305], [0, 0.9545]]], [[[0, 0.0309], [0, 0.2196]], [[0, 0.238], [0, 0.9575]]], [[[0, 0.0845], [0, 0.6032]], [[0, 0.3393], [0, 0.7021]]], [[[0, 0.7019], [0, 0.047]], [[0, 0.9286], [0, 0.4264]]], [[[0, 0.7045], [0, 0.1418]], [[0, 0.6646], [0, 0.0961]]], [[[0, 0.0112], [0, 0.1674]], [[0, 0.4289], [-0.1692, 0.5481]]]]]

Expected: [[[[[0.4723, 0.2958], [0.2918, 0.7002]], [[0.8099, 0.3755], [0.8926, 0.5779]]], [[[0, 0.6492], [0, 0.5602]], [[0, 0.0091], [0, 0.7769]]], [[[0, 0.7375], [0, 0.9993]], [[0, 0.2048], [0, 0.932]]], [[[0, 0.6349], [0, 0.5082]], [[0, 0.4567], [0, 0.0658]]], [[[0, 0.837], [0, 0.3381]], [[0, 0.5005], [0, 0.0197]]], [[[0, 0.1548], [0, 0.5162]], [[0, 0.8307], [0, 0.5797]]], [[[0, 0.3794], [0, 0.2834]], [[0, 0.7364], [0, 0.0755]]], [[[0, 0.4208], [0, 0.047]], [[0, 0.9972], [0, 0.5767]]], [[[0, 0.8524], [0, 0.9186]], [[0, 0.9311], [0, 0.2444]]], [[[0.4486, 0.9173], [0.2771, 0.0479]], [[0.5939, 0.4488], [0.7395, 0.4893]]], [[[0, 0.0945], [0, 0.2553]], [[0, 0.1257], [0, 0.3305]]], [[[0, 0.2601], [0, 0.9172]], [[0, 0.0822], [0, 0.7578]]], [[[0, 0.3308], [0, 0.6651]], [[0, 0.6305], [0, 0.9545]]], [[[0, 0.0309], [0, 0.2196]], [[0, 0.238], [0, 0.9575]]], [[[0, 0.0845], [0, 0.6032]], [[0, 0.3393], [0, 0.7021]]], [[[0, 0.7019], [0, 0.047]], [[0, 0.9286], [0, 0.4264]]], [[[0, 0.7045], [0, 0.1418]], [[0, 0.6646], [0, 0.0961]]], [[[0, 0.0112], [0, 0.1674]], [[0, 0.4289], [-0.1692, 0.5481]]]]]