import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Zer47689 = tf.keras.layers.Input(shape=([2, 1, 3, 1]))

Zer47689 = keras.layers.ZeroPadding3D(padding=((1, 1), (1, 1), (1, 1)), name = 'Zer47689', )(in0Zer47689)
Res70933 = keras.layers.Reshape((4, 3, 5), name = 'Res70933', )(Zer47689)
Con13912 = keras.layers.Conv2DTranspose(4, (1, 1),strides=(1, 1), padding='valid', name = 'Con13912', )(Res70933)
model = tf.keras.models.Model(inputs=[in0Zer47689], outputs=Con13912)
w = model.get_layer('Con13912').get_weights() 
w[0] = np.array([[[[0.378, 0.0031, 0.4522, 0.303, 0.5552], [0.3879, 0.5529, 0.6714, 0.2261, 0.9925], [0.6153, 0.1817, 0.4766, 0.9763, 0.745], [0.8042, 0.0946, 0.2673, 0.921, 0.6308]]]])
w[1] = np.array([0, 0, 0, 0])
model.get_layer('Con13912').set_weights(w) 
in0Zer47689 = tf.constant([[[[[1.8008], [1.867], [1.5249]]], [[[1.301], [1.9721], [1.3658]]]]])
print (np.array2string(model.predict([in0Zer47689],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Con13912.png')

LZer47689 = zero_padding3D_layer([[[[[1.8008], [1.867], [1.5249]]], [[[1.301], [1.9721], [1.3658]]]]], 1, 1, 1, 1, 1, 1, Zer47689), 
LRes70933 = reshape_layer(Zer47689, [4, 3, 5], Res70933), 
LCon13912 = conv2D_transpose_layer(Res70933, 1, 1,[[[[0.378, 0.0031, 0.4522, 0.303, 0.5552], [0.3879, 0.5529, 0.6714, 0.2261, 0.9925], [0.6153, 0.1817, 0.4766, 0.9763, 0.745], [0.8042, 0.0946, 0.2673, 0.921, 0.6308]]]],[0, 0, 0, 0], 1, 1, false, Con13912), 
exec_layers([LZer47689,LRes70933,LCon13912],["Zer47689","Res70933","Con13912"],Con13912,"Con13912")

Actual (Unparsed): [[[[0.0000000, 0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000, 0.0000000]], [[0.0000000, 0.0000000, 0.0000000, 0.0000000], [1.3118846, 2.5939460, 2.7057774, 2.0738376], [0.0000000, 0.0000000, 0.0000000, 0.0000000]], [[0.0000000, 0.0000000, 0.0000000, 0.0000000], [1.3096541, 2.3521982, 2.5097251, 1.9081188], [0.0000000, 0.0000000, 0.0000000, 0.0000000]], [[0.0000000, 0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000, 0.0000000]]]]

Expected (Unparsed): [[[[0.0,0.0,0.0,0.0],[0.0,0.0,0.0,0.0],[0.0,0.0,0.0,0.0]],[[0.0,0.0,0.0,0.0],[1.3118845799999999,2.59394601,2.7057774299999995,2.07383768],[0.0,0.0,0.0,0.0]],[[0.0,0.0,0.0,0.0],[1.30965412,2.35219822,2.5097251,1.90811873],[0.0,0.0,0.0,0.0]],[[0.0,0.0,0.0,0.0],[0.0,0.0,0.0,0.0],[0.0,0.0,0.0,0.0]]]]

Actual:   [[[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]], [[0, 0, 0, 0], [1.3119, 2.594, 2.7058, 2.0739], [0, 0, 0, 0]], [[0, 0, 0, 0], [1.3097, 2.3522, 2.5098, 1.9082], [0, 0, 0, 0]], [[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]]]

Expected: [[[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]], [[0, 0, 0, 0], [1.3119, 2.594, 2.7058, 2.0739], [0, 0, 0, 0]], [[0, 0, 0, 0], [1.3097, 2.3522, 2.5098, 1.9082], [0, 0, 0, 0]], [[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]]]