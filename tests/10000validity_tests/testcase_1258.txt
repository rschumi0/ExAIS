import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Mul74483 = tf.keras.layers.Input(shape=([2, 2, 1]))
in1Mul74483 = tf.keras.layers.Input(shape=([2, 2, 1]))
in0Cro72573 = tf.keras.layers.Input(shape=([2, 2]))
in0Con36323 = tf.keras.layers.Input(shape=([2, 1, 1]))
in0Cro91988 = tf.keras.layers.Input(shape=([2, 4, 1, 2]))
in0Sep61217 = tf.keras.layers.Input(shape=([2, 1, 1]))
in0Ave55731 = tf.keras.layers.Input(shape=([2, 2, 1]))
in0Con60975 = tf.keras.layers.Input(shape=([2, 1, 3]))
in0Mul32524 = tf.keras.layers.Input(shape=([2, 1, 1, 1]))
in1Mul32524 = tf.keras.layers.Input(shape=([2, 1, 1, 1]))

Mul74483 = keras.layers.Multiply(name = 'Mul74483', )([in0Mul74483,in1Mul74483])
Res21484 = keras.layers.Reshape((2, 2), name = 'Res21484', )(Mul74483)
Cro72573 = keras.layers.Cropping1D(cropping=((1, 0)), name = 'Cro72573', )(in0Cro72573)
Zer90740 = keras.layers.ZeroPadding1D(padding=((1, 0)), name = 'Zer90740', )(Cro72573)
Min53582 = keras.layers.Minimum(name = 'Min53582', )([Res21484,Zer90740])
Res63036 = keras.layers.Reshape((2, 2, 1), name = 'Res63036', )(Min53582)
Max31302 = keras.layers.MaxPool2D(pool_size=(1, 2), strides=(1, 2), padding='valid', name = 'Max31302', )(Res63036)
Con36323 = keras.layers.Concatenate(axis=3, name = 'Con36323', )([Max31302,in0Con36323])
Cro91988 = keras.layers.Cropping3D(cropping=((1, 0), (2, 1), (0, 0)), name = 'Cro91988', )(in0Cro91988)
Res26201 = keras.layers.Reshape((1, 1, 2), name = 'Res26201', )(Cro91988)
Dep12297 = keras.layers.DepthwiseConv2D((1, 1),strides=(1, 1), padding='same', name = 'Dep12297', )(Res26201)
Zer14922 = keras.layers.ZeroPadding2D(padding=((1, 0), (0, 0)), name = 'Zer14922', )(Dep12297)
Min79427 = keras.layers.Minimum(name = 'Min79427', )([Con36323,Zer14922])
Res32120 = keras.layers.Reshape((2, 1, 2, 1), name = 'Res32120', )(Min79427)
Zer15291 = keras.layers.ZeroPadding3D(padding=((0, 0), (0, 0), (2, 0)), name = 'Zer15291', )(Res32120)
Sep61217 = keras.layers.SeparableConv2D(4, (2, 1),strides=(1, 1), padding='same', name = 'Sep61217', )(in0Sep61217)
Ave55731 = keras.layers.AveragePooling2D(pool_size=(1, 2), name = 'Ave55731', )(in0Ave55731)
Con60975 = keras.layers.Concatenate(axis=3, name = 'Con60975', )([Ave55731,in0Con60975])
Min29182 = keras.layers.Minimum(name = 'Min29182', )([Sep61217,Con60975])
Res66292 = keras.layers.Reshape((2, 1, 4, 1), name = 'Res66292', )(Min29182)
Mul32524 = keras.layers.Multiply(name = 'Mul32524', )([in0Mul32524,in1Mul32524])
Zer5271 = keras.layers.ZeroPadding3D(padding=((0, 0), (0, 0), (3, 0)), name = 'Zer5271', )(Mul32524)
Ave74482 = keras.layers.Average(name = 'Ave74482', )([Res66292,Zer5271])
ReL25862 = keras.layers.ReLU(max_value=1.6337005612991933, negative_slope=7.726018786893587, threshold=1.7276949681509124, name = 'ReL25862', )(Ave74482)
Min96691 = keras.layers.Minimum(name = 'Min96691', )([Zer15291,ReL25862])
model = tf.keras.models.Model(inputs=[in0Mul74483,in1Mul74483,in0Cro72573,in0Con36323,in0Cro91988,in0Sep61217,in0Ave55731,in0Con60975,in0Mul32524,in1Mul32524], outputs=Min96691)
w = model.get_layer('Dep12297').get_weights() 
w[0] = np.array([[[[0.9756], [0.8292]]]])
w[1] = np.array([0, 0])
model.get_layer('Dep12297').set_weights(w) 
w = model.get_layer('Sep61217').get_weights() 
w[0] = np.array([[[[0.4025]]], [[[0.7513]]]])
w[1] = np.array([[[[0.9163, 0.4835, 0.7562, 0.4908]]]])
w[2] = np.array([0, 0, 0, 0])
model.get_layer('Sep61217').set_weights(w) 
in0Mul74483 = tf.constant([[[[0.3595], [0.5889]], [[0.1407], [0.2635]]]])
in1Mul74483 = tf.constant([[[[0.9735], [0.7311]], [[0.3646], [0.3344]]]])
in0Cro72573 = tf.constant([[[1.1377, 1.6654], [1.0179, 1.6215]]])
in0Con36323 = tf.constant([[[[0.9684]], [[0.2121]]]])
in0Cro91988 = tf.constant([[[[[1.3939, 1.6685]], [[1.3938, 1.8147]], [[1.4287, 1.4622]], [[1.8722, 1.865]]], [[[1.9218, 1.1393]], [[1.8659, 1.0881]], [[1.7302, 1.9194]], [[1.4566, 1.867]]]]])
in0Sep61217 = tf.constant([[[[0.5359]], [[0.824]]]])
in0Ave55731 = tf.constant([[[[1.1471], [1.1282]], [[1.9168], [1.3194]]]])
in0Con60975 = tf.constant([[[[0.2101, 0.1393, 0.1198]], [[0.8017, 0.6006, 0.2986]]]])
in0Mul32524 = tf.constant([[[[[0.0758]]], [[[0.9362]]]]])
in1Mul32524 = tf.constant([[[[[0.0405]]], [[[0.6045]]]]])
print (np.array2string(model.predict([in0Mul74483,in1Mul74483,in0Cro72573,in0Con36323,in0Cro91988,in0Sep61217,in0Ave55731,in0Con60975,in0Mul32524,in1Mul32524],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Min96691.png')

LMul74483 = multiply_layer([[[[[0.3595], [0.5889]], [[0.1407], [0.2635]]]], [[[[0.9735], [0.7311]], [[0.3646], [0.3344]]]]], Mul74483), 
LRes21484 = reshape_layer(Mul74483, [2, 2], Res21484), 
LCro72573 = cropping1D_layer([[[1.1377, 1.6654], [1.0179, 1.6215]]], 1, 0, Cro72573), 
LZer90740 = zero_padding1D_layer(Cro72573, 1, 0, Zer90740), 
LMin53582 = minimum_layer([Res21484,Zer90740], Min53582), 
LRes63036 = reshape_layer(Min53582, [2, 2, 1], Res63036), 
LMax31302 = max_pool2D_layer(Res63036, 1, 2, 1, 2, false, Max31302), 
LCon36323 = concatenate_layer([Max31302,[[[[0.9684]], [[0.2121]]]]], 3, Con36323), 
LCro91988 = cropping3D_layer([[[[[1.3939, 1.6685]], [[1.3938, 1.8147]], [[1.4287, 1.4622]], [[1.8722, 1.865]]], [[[1.9218, 1.1393]], [[1.8659, 1.0881]], [[1.7302, 1.9194]], [[1.4566, 1.867]]]]], 1, 0, 2, 1, 0, 0, Cro91988), 
LRes26201 = reshape_layer(Cro91988, [1, 1, 2], Res26201), 
LDep12297 = depthwise_conv2D_layer(Res26201, 1, 1,[[[[0.9756], [0.8292]]]],[0, 0], 1, 1, true, Dep12297), 
LZer14922 = zero_padding2D_layer(Dep12297, 1, 0, 0, 0, Zer14922), 
LMin79427 = minimum_layer([Con36323,Zer14922], Min79427), 
LRes32120 = reshape_layer(Min79427, [2, 1, 2, 1], Res32120), 
LZer15291 = zero_padding3D_layer(Res32120, 0, 0, 0, 0, 2, 0, Zer15291), 
LSep61217 = separable_conv2D_layer([[[[0.5359]], [[0.824]]]], 2, 1,[[[[[0.4025]]], [[[0.7513]]]],[[[[0.9163, 0.4835, 0.7562, 0.4908]]]]],[0, 0, 0, 0], 1, 1, true, Sep61217), 
LAve55731 = average_pooling2D_layer([[[[1.1471], [1.1282]], [[1.9168], [1.3194]]]], 1, 2, Ave55731), 
LCon60975 = concatenate_layer([Ave55731,[[[[0.2101, 0.1393, 0.1198]], [[0.8017, 0.6006, 0.2986]]]]], 3, Con60975), 
LMin29182 = minimum_layer([Sep61217,Con60975], Min29182), 
LRes66292 = reshape_layer(Min29182, [2, 1, 4, 1], Res66292), 
LMul32524 = multiply_layer([[[[[[0.0758]]], [[[0.9362]]]]], [[[[[0.0405]]], [[[0.6045]]]]]], Mul32524), 
LZer5271 = zero_padding3D_layer(Mul32524, 0, 0, 0, 0, 3, 0, Zer5271), 
LAve74482 = average_layer([Res66292,Zer5271], Ave74482), 
LReL25862 = relu_layer(Ave74482, 1.6337005612991933, 7.726018786893587, 1.7276949681509124, ReL25862), 
LMin96691 = minimum_layer([Zer15291,ReL25862], Min96691), 
exec_layers([LMul74483,LRes21484,LCro72573,LZer90740,LMin53582,LRes63036,LMax31302,LCon36323,LCro91988,LRes26201,LDep12297,LZer14922,LMin79427,LRes32120,LZer15291,LSep61217,LAve55731,LCon60975,LMin29182,LRes66292,LMul32524,LZer5271,LAve74482,LReL25862,LMin96691],["Mul74483","Res21484","Cro72573","Zer90740","Min53582","Res63036","Max31302","Con36323","Cro91988","Res26201","Dep12297","Zer14922","Min79427","Res32120","Zer15291","Sep61217","Ave55731","Con60975","Min29182","Res66292","Mul32524","Zer5271","Ave74482","ReL25862","Min96691"],Min96691,"Min96691")

Actual (Unparsed): [[[[[-10.3933855], [-12.5365855], [-12.8100866], [-12.8735562]]], [[[-12.1742350], [-12.7287408], [-12.3793560], [-10.5331839]]]]]

Expected (Unparsed): [[[[[-10.393385496105621],[-12.536585508392294],[-12.810086573448327],[-12.873556204083597]]],[[[-12.17423500323244],[-12.728740828214788],[-12.379356035070874],[-10.53318391787756]]]]]

Actual:   [[[[[-10.3933], [-12.5365], [-12.81], [-12.8735]]], [[[-12.1742], [-12.7287], [-12.3793], [-10.5331]]]]]

Expected: [[[[[-10.3933], [-12.5365], [-12.81], [-12.8735]]], [[[-12.1742], [-12.7287], [-12.3793], [-10.5331]]]]]