import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Dot59052 = tf.keras.layers.Input(shape=([3, 3]))
in1Dot59052 = tf.keras.layers.Input(shape=([3, 3]))
in0Con81757 = tf.keras.layers.Input(shape=([3, 1]))
in0ELU54355 = tf.keras.layers.Input(shape=([2, 2, 2]))
in0Con30644 = tf.keras.layers.Input(shape=([9, 7, 2]))
in0Sub42227 = tf.keras.layers.Input(shape=([3]))
in1Sub42227 = tf.keras.layers.Input(shape=([3]))

Dot59052 = keras.layers.Dot(axes=(1, 1), name = 'Dot59052', )([in0Dot59052,in1Dot59052])
Con81757 = keras.layers.Concatenate(axis=2, name = 'Con81757', )([Dot59052,in0Con81757])
ELU54355 = keras.layers.ELU(alpha=2.6135457488086704, name = 'ELU54355', input_shape=(2, 2, 2))(in0ELU54355)
Res48276 = keras.layers.Reshape((2, 4), name = 'Res48276', )(ELU54355)
Per7219 = keras.layers.Permute((1,2), name = 'Per7219',)(Res48276)
Zer7872 = keras.layers.ZeroPadding1D(padding=((1, 0)), name = 'Zer7872', )(Per7219)
Add83291 = keras.layers.Add(name = 'Add83291', )([Con81757,Zer7872])
Res78835 = keras.layers.Reshape((3, 4, 1), name = 'Res78835', )(Add83291)
Zer41407 = keras.layers.ZeroPadding2D(padding=((6, 0), (3, 0)), name = 'Zer41407', )(Res78835)
Con30644 = keras.layers.Concatenate(axis=3, name = 'Con30644', )([Zer41407,in0Con30644])
Sub42227 = keras.layers.Subtract(name = 'Sub42227', )([in0Sub42227,in1Sub42227])
Res76340 = keras.layers.Reshape((3, 1), name = 'Res76340', )(Sub42227)
Res32893 = keras.layers.Reshape((3, 1, 1), name = 'Res32893', )(Res76340)
Con35292 = keras.layers.Conv2DTranspose(3, (3, 1),strides=(3, 1), padding='same', name = 'Con35292', )(Res32893)
Zer3363 = keras.layers.ZeroPadding2D(padding=((0, 0), (6, 0)), name = 'Zer3363', )(Con35292)
Sub69188 = keras.layers.Subtract(name = 'Sub69188', )([Con30644,Zer3363])
model = tf.keras.models.Model(inputs=[in0Dot59052,in1Dot59052,in0Con81757,in0ELU54355,in0Con30644,in0Sub42227,in1Sub42227], outputs=Sub69188)
w = model.get_layer('Con35292').get_weights() 
w[0] = np.array([[[[0.066], [0.2632], [0.0304]]], [[[0.2096], [0.7348], [0.4672]]], [[[0.9616], [0.7759], [0.9646]]]])
w[1] = np.array([0, 0, 0])
model.get_layer('Con35292').set_weights(w) 
in0Dot59052 = tf.constant([[[0.9179, 0.3107, 0.2574], [0.3225, 0.3446, 0.0229], [0.0951, 0.6933, 0.4969]]])
in1Dot59052 = tf.constant([[[0.4378, 0.2631, 0.7867], [0.1548, 0.6919, 0.2334], [0.0865, 0.7221, 0.6042]]])
in0Con81757 = tf.constant([[[0.5016], [0.7202], [0.7451]]])
in0ELU54355 = tf.constant([[[[0.4135, 0.3392], [0.6609, 0.1505]], [[0.1889, 0.7739], [0.9222, 0.2838]]]])
in0Con30644 = tf.constant([[[[0.9703, 0.8447], [0.6086, 0.7624], [0.3353, 0.165], [0.0903, 0.886], [0.1666, 0.0596], [0.4766, 0.1105], [0.3317, 0.9323]], [[0.6705, 0.7466], [0.7968, 0.2998], [0.9924, 0.8434], [0.9823, 0.4948], [0.0425, 0.2072], [0.4523, 0.4422], [0.1903, 0.391]], [[0.935, 0.0219], [0.0091, 0.514], [0.3848, 0.6045], [0.9605, 0.7312], [0.3009, 0.4465], [0.8969, 0.6665], [0.7996, 0.7681]], [[0.5023, 0.1467], [0.9983, 0.5003], [0.6162, 0.1312], [0.118, 0.8833], [0.4994, 0.8171], [0.3333, 0.3287], [0.4907, 0.5178]], [[0.8077, 0.2131], [0.1753, 0.065], [0.5416, 0.5643], [0.1419, 0.1605], [0.6277, 0.919], [0.6398, 0.3207], [0.2616, 0.9879]], [[0.9628, 0.7957], [0.3864, 0.142], [0.1873, 0.1227], [0.164, 0.1559], [0.9676, 0.777], [0.5604, 0.0832], [0.4559, 0.7208]], [[0.2089, 0.6227], [0.051, 0.52], [0.3706, 0.8382], [0.6083, 0.0967], [0.2531, 0.6378], [0.9428, 0.1164], [0.1642, 0.9887]], [[0.9445, 0.4709], [0.9818, 0.4454], [0.3936, 0.3114], [0.201, 0.2051], [0.6061, 0.6098], [0.3852, 0.5664], [0.3758, 0.283]], [[0.1894, 0.3653], [0.2828, 0.5008], [0.2543, 0.6911], [0.3352, 0.9169], [0.1721, 0.9408], [0.0807, 0.212], [0.4179, 0.0621]]]])
in0Sub42227 = tf.constant([[0.1548, 0.4505, 0.0057]])
in1Sub42227 = tf.constant([[0.5545, 0.776, 0.8622]])
print (np.array2string(model.predict([in0Dot59052,in1Dot59052,in0Con81757,in0ELU54355,in0Con30644,in0Sub42227,in1Sub42227],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Sub69188.png')

LDot59052 = dot_layer([[[0.9179, 0.3107, 0.2574], [0.3225, 0.3446, 0.0229], [0.0951, 0.6933, 0.4969]]], [[[0.4378, 0.2631, 0.7867], [0.1548, 0.6919, 0.2334], [0.0865, 0.7221, 0.6042]]], 1, 1, Dot59052), 
LCon81757 = concatenate_layer([Dot59052,[[[0.5016], [0.7202], [0.7451]]]], 2, Con81757), 
LELU54355 = elu_layer([[[[0.4135, 0.3392], [0.6609, 0.1505]], [[0.1889, 0.7739], [0.9222, 0.2838]]]], 2.6135457488086704, ELU54355), 
LRes48276 = reshape_layer(ELU54355, [2, 4], Res48276), 
LPer7219 = permute_layer(Res48276, 1,2, Per7219), 
LZer7872 = zero_padding1D_layer(Per7219, 1, 0, Zer7872), 
LAdd83291 = add_layer([Con81757,Zer7872], Add83291), 
LRes78835 = reshape_layer(Add83291, [3, 4, 1], Res78835), 
LZer41407 = zero_padding2D_layer(Res78835, 6, 0, 3, 0, Zer41407), 
LCon30644 = concatenate_layer([Zer41407,[[[[0.9703, 0.8447], [0.6086, 0.7624], [0.3353, 0.165], [0.0903, 0.886], [0.1666, 0.0596], [0.4766, 0.1105], [0.3317, 0.9323]], [[0.6705, 0.7466], [0.7968, 0.2998], [0.9924, 0.8434], [0.9823, 0.4948], [0.0425, 0.2072], [0.4523, 0.4422], [0.1903, 0.391]], [[0.935, 0.0219], [0.0091, 0.514], [0.3848, 0.6045], [0.9605, 0.7312], [0.3009, 0.4465], [0.8969, 0.6665], [0.7996, 0.7681]], [[0.5023, 0.1467], [0.9983, 0.5003], [0.6162, 0.1312], [0.118, 0.8833], [0.4994, 0.8171], [0.3333, 0.3287], [0.4907, 0.5178]], [[0.8077, 0.2131], [0.1753, 0.065], [0.5416, 0.5643], [0.1419, 0.1605], [0.6277, 0.919], [0.6398, 0.3207], [0.2616, 0.9879]], [[0.9628, 0.7957], [0.3864, 0.142], [0.1873, 0.1227], [0.164, 0.1559], [0.9676, 0.777], [0.5604, 0.0832], [0.4559, 0.7208]], [[0.2089, 0.6227], [0.051, 0.52], [0.3706, 0.8382], [0.6083, 0.0967], [0.2531, 0.6378], [0.9428, 0.1164], [0.1642, 0.9887]], [[0.9445, 0.4709], [0.9818, 0.4454], [0.3936, 0.3114], [0.201, 0.2051], [0.6061, 0.6098], [0.3852, 0.5664], [0.3758, 0.283]], [[0.1894, 0.3653], [0.2828, 0.5008], [0.2543, 0.6911], [0.3352, 0.9169], [0.1721, 0.9408], [0.0807, 0.212], [0.4179, 0.0621]]]]], 3, Con30644), 
LSub42227 = subtract_layer([[0.1548, 0.4505, 0.0057]], [[0.5545, 0.776, 0.8622]], Sub42227), 
LRes76340 = reshape_layer(Sub42227, [3, 1], Res76340), 
LRes32893 = reshape_layer(Res76340, [3, 1, 1], Res32893), 
LCon35292 = conv2D_transpose_layer(Res32893, 3, 1,[[[[0.066], [0.2632], [0.0304]]], [[[0.2096], [0.7348], [0.4672]]], [[[0.9616], [0.7759], [0.9646]]]],[0, 0, 0], 3, 1, true, Con35292), 
LZer3363 = zero_padding2D_layer(Con35292, 0, 0, 6, 0, Zer3363), 
LSub69188 = subtract_layer(Con30644,Zer3363, Sub69188), 
exec_layers([LDot59052,LCon81757,LELU54355,LRes48276,LPer7219,LZer7872,LAdd83291,LRes78835,LZer41407,LCon30644,LSub42227,LRes76340,LRes32893,LCon35292,LZer3363,LSub69188],["Dot59052","Con81757","ELU54355","Res48276","Per7219","Zer7872","Add83291","Res78835","Zer41407","Con30644","Sub42227","Res76340","Res32893","Con35292","Zer3363","Sub69188"],Sub69188,"Sub69188")

Actual (Unparsed): [[[[0.0000000, 0.9703000, 0.8447000], [0.0000000, 0.6086000, 0.7624000], [0.0000000, 0.3353000, 0.1650000], [0.0000000, 0.0903000, 0.8860000], [0.0000000, 0.1666000, 0.0596000], [0.0000000, 0.4766000, 0.1105000], [0.0263802, 0.4369010, 0.9444509]], [[0.0000000, 0.6705000, 0.7466000], [0.0000000, 0.7968000, 0.2998000], [0.0000000, 0.9924000, 0.8434000], [0.0000000, 0.9823000, 0.4948000], [0.0000000, 0.0425000, 0.2072000], [0.0000000, 0.4523000, 0.4422000], [0.0837771, 0.4839996, 0.5777398]], [[0.0000000, 0.9350000, 0.0219000], [0.0000000, 0.0091000, 0.5140000], [0.0000000, 0.3848000, 0.6045000], [0.0000000, 0.9605000, 0.7312000], [0.0000000, 0.3009000, 0.4465000], [0.0000000, 0.8969000, 0.6665000], [0.3843515, 1.1097272, 1.1536506]], [[0.0000000, 0.5023000, 0.1467000], [0.0000000, 0.9983000, 0.5003000], [0.0000000, 0.6162000, 0.1312000], [0.0000000, 0.1180000, 0.8833000], [0.0000000, 0.4994000, 0.8171000], [0.0000000, 0.3333000, 0.3287000], [0.0214830, 0.5763716, 0.5276952]], [[0.0000000, 0.8077000, 0.2131000], [0.0000000, 0.1753000, 0.0650000], [0.0000000, 0.5416000, 0.5643000], [0.0000000, 0.1419000, 0.1605000], [0.0000000, 0.6277000, 0.9190000], [0.0000000, 0.6398000, 0.3207000], [0.0682248, 0.5007774, 1.1399736]], [[0.0000000, 0.9628000, 0.7957000], [0.0000000, 0.3864000, 0.1420000], [0.0000000, 0.1873000, 0.1227000], [0.0000000, 0.1640000, 0.1559000], [0.0000000, 0.9676000, 0.7770000], [0.0000000, 0.5604000, 0.0832000], [0.3130008, 0.7084555, 1.0347773]], [[0.0000000, 0.2089000, 0.6227000], [0.0000000, 0.0510000, 0.5200000], [0.0000000, 0.3706000, 0.8382000], [0.4600058, 0.6083000, 0.0967000], [0.5333090, 0.2531000, 0.6378000], [0.8548429, 0.9428000, 0.1164000], [0.5581290, 0.3896308, 1.0147376]], [[0.0000000, 0.9445000, 0.4709000], [0.0000000, 0.9818000, 0.4454000], [0.0000000, 0.3936000, 0.3114000], [0.6628390, 0.2010000, 0.2051000], [1.1600058, 0.6061000, 0.6098000], [1.4046492, 0.3852000, 0.5664000], [1.0502224, 1.0051562, 0.6831568]], [[0.0000000, 0.1894000, 0.3653000], [0.0000000, 0.2828000, 0.5008000], [0.0000000, 0.2543000, 0.6911000], [0.3481165, 0.3352000, 0.9169000], [1.2162779, 0.1721000, 0.9408000], [1.4302684, 0.0807000, 0.2120000], [1.8525104, 1.0824584, 0.8882799]]]]

Expected (Unparsed): [[[[0,0.9703,0.8447],[0,0.6086,0.7624],[0,0.3353,0.165],[0,0.0903,0.886],[0,0.1666,0.0596],[0,0.4766,0.1105],[0.026380200000000003,0.43690103999999996,0.94445088]],[[0,0.6705,0.7466],[0,0.7968,0.2998],[0,0.9924,0.8434],[0,0.9823,0.4948],[0,0.0425,0.2072],[0,0.4523,0.4422],[0.08377712,0.48399956,0.57773984]],[[0,0.935,0.0219],[0,0.0091,0.514],[0,0.3848,0.6045],[0,0.9605,0.7312],[0,0.3009,0.4465],[0,0.8969,0.6665],[0.38435152,1.10972723,1.15365062]],[[0,0.5023,0.1467],[0,0.9983,0.5003],[0,0.6162,0.1312],[0,0.118,0.8833],[0,0.4994,0.8171],[0,0.3333,0.3287],[0.021483000000000002,0.5763716,0.5276952]],[[0,0.8077,0.2131],[0,0.1753,0.065],[0,0.5416,0.5643],[0,0.1419,0.1605],[0,0.6277,0.919],[0,0.6398,0.3207],[0.0682248,0.5007774,1.1399736]],[[0,0.9628,0.7957],[0,0.3864,0.142],[0,0.1873,0.1227],[0,0.164,0.1559],[0,0.9676,0.777],[0,0.5604,0.0832],[0.3130008,0.70845545,1.0347773]],[[0,0.2089,0.6227],[0,0.051,0.52],[0,0.3706,0.8382],[0.46000577000000004,0.6083,0.0967],[0.53330895,0.2531,0.6378],[0.85484285,0.9428,0.1164],[0.5581290000000001,0.38963079999999994,1.0147376000000001]],[[0,0.9445,0.4709],[0,0.9818,0.4454],[0,0.3936,0.3114],[0.66283899,0.201,0.2051],[1.16000584,0.6061,0.6098],[1.40464919,0.3852,0.5664],[1.0502224,1.0051562,0.6831567999999999]],[[0,0.1894,0.3653],[0,0.2828,0.5008],[0,0.2543,0.6911],[0.34811649,0.3352,0.9169],[1.2162779400000001,0.1721,0.9408],[1.43026842,0.0807,0.212],[1.8525104,1.08245835,0.8882799]]]]

Actual:   [[[[0, 0.9703, 0.8447], [0, 0.6086, 0.7624], [0, 0.3353, 0.165], [0, 0.0903, 0.886], [0, 0.1666, 0.0596], [0, 0.4766, 0.1105], [0.0264, 0.437, 0.9445]], [[0, 0.6705, 0.7466], [0, 0.7968, 0.2998], [0, 0.9924, 0.8434], [0, 0.9823, 0.4948], [0, 0.0425, 0.2072], [0, 0.4523, 0.4422], [0.0838, 0.484, 0.5778]], [[0, 0.935, 0.0219], [0, 0.0091, 0.514], [0, 0.3848, 0.6045], [0, 0.9605, 0.7312], [0, 0.3009, 0.4465], [0, 0.8969, 0.6665], [0.3844, 1.1098, 1.1537]], [[0, 0.5023, 0.1467], [0, 0.9983, 0.5003], [0, 0.6162, 0.1312], [0, 0.118, 0.8833], [0, 0.4994, 0.8171], [0, 0.3333, 0.3287], [0.0215, 0.5764, 0.5277]], [[0, 0.8077, 0.2131], [0, 0.1753, 0.065], [0, 0.5416, 0.5643], [0, 0.1419, 0.1605], [0, 0.6277, 0.919], [0, 0.6398, 0.3207], [0.0683, 0.5008, 1.14]], [[0, 0.9628, 0.7957], [0, 0.3864, 0.142], [0, 0.1873, 0.1227], [0, 0.164, 0.1559], [0, 0.9676, 0.777], [0, 0.5604, 0.0832], [0.3131, 0.7085, 1.0348]], [[0, 0.2089, 0.6227], [0, 0.051, 0.52], [0, 0.3706, 0.8382], [0.4601, 0.6083, 0.0967], [0.5334, 0.2531, 0.6378], [0.8549, 0.9428, 0.1164], [0.5582, 0.3897, 1.0148]], [[0, 0.9445, 0.4709], [0, 0.9818, 0.4454], [0, 0.3936, 0.3114], [0.6629, 0.201, 0.2051], [1.1601, 0.6061, 0.6098], [1.4047, 0.3852, 0.5664], [1.0503, 1.0052, 0.6832]], [[0, 0.1894, 0.3653], [0, 0.2828, 0.5008], [0, 0.2543, 0.6911], [0.3482, 0.3352, 0.9169], [1.2163, 0.1721, 0.9408], [1.4303, 0.0807, 0.212], [1.8526, 1.0825, 0.8883]]]]

Expected: [[[[0, 0.9703, 0.8447], [0, 0.6086, 0.7624], [0, 0.3353, 0.165], [0, 0.0903, 0.886], [0, 0.1666, 0.0596], [0, 0.4766, 0.1105], [0.0264, 0.437, 0.9445]], [[0, 0.6705, 0.7466], [0, 0.7968, 0.2998], [0, 0.9924, 0.8434], [0, 0.9823, 0.4948], [0, 0.0425, 0.2072], [0, 0.4523, 0.4422], [0.0838, 0.484, 0.5778]], [[0, 0.935, 0.0219], [0, 0.0091, 0.514], [0, 0.3848, 0.6045], [0, 0.9605, 0.7312], [0, 0.3009, 0.4465], [0, 0.8969, 0.6665], [0.3844, 1.1098, 1.1537]], [[0, 0.5023, 0.1467], [0, 0.9983, 0.5003], [0, 0.6162, 0.1312], [0, 0.118, 0.8833], [0, 0.4994, 0.8171], [0, 0.3333, 0.3287], [0.0215, 0.5764, 0.5277]], [[0, 0.8077, 0.2131], [0, 0.1753, 0.065], [0, 0.5416, 0.5643], [0, 0.1419, 0.1605], [0, 0.6277, 0.919], [0, 0.6398, 0.3207], [0.0683, 0.5008, 1.14]], [[0, 0.9628, 0.7957], [0, 0.3864, 0.142], [0, 0.1873, 0.1227], [0, 0.164, 0.1559], [0, 0.9676, 0.777], [0, 0.5604, 0.0832], [0.3131, 0.7085, 1.0348]], [[0, 0.2089, 0.6227], [0, 0.051, 0.52], [0, 0.3706, 0.8382], [0.4601, 0.6083, 0.0967], [0.5334, 0.2531, 0.6378], [0.8549, 0.9428, 0.1164], [0.5582, 0.3897, 1.0148]], [[0, 0.9445, 0.4709], [0, 0.9818, 0.4454], [0, 0.3936, 0.3114], [0.6629, 0.201, 0.2051], [1.1601, 0.6061, 0.6098], [1.4047, 0.3852, 0.5664], [1.0503, 1.0052, 0.6832]], [[0, 0.1894, 0.3653], [0, 0.2828, 0.5008], [0, 0.2543, 0.6911], [0.3482, 0.3352, 0.9169], [1.2163, 0.1721, 0.9408], [1.4303, 0.0807, 0.212], [1.8526, 1.0825, 0.8883]]]]