import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Mul34507 = tf.keras.layers.Input(shape=([2, 1]))
in1Mul34507 = tf.keras.layers.Input(shape=([2, 1]))

Mul34507 = keras.layers.Multiply(name = 'Mul34507', )([in0Mul34507,in1Mul34507])
Up_21365 = keras.layers.UpSampling1D(size=(1), name = 'Up_21365', )(Mul34507)
model = tf.keras.models.Model(inputs=[in0Mul34507,in1Mul34507], outputs=Up_21365)
in0Mul34507 = tf.constant([[[0.1465], [0.4176]]])
in1Mul34507 = tf.constant([[[0.4733], [0.1053]]])
print (np.array2string(model.predict([in0Mul34507,in1Mul34507],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Up_21365.png')

LMul34507 = multiply_layer([[[[0.1465], [0.4176]]], [[[0.4733], [0.1053]]]], Mul34507), 
LUp_21365 = up_sampling1D_layer(Mul34507, 1, Up_21365), 
exec_layers([LMul34507,LUp_21365],["Mul34507","Up_21365"],Up_21365,"Up_21365")

Actual (Unparsed): [[[0.0693385], [0.0439733]]]

Expected (Unparsed): [[[0.06933845],[0.043973280000000003]]]

Actual:   [[[0.0694], [0.044]]]

Expected: [[[0.0694], [0.044]]]