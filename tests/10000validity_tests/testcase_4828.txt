import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Min68921 = tf.keras.layers.Input(shape=([1, 1]))
in1Min68921 = tf.keras.layers.Input(shape=([1, 1]))
in0Add59361 = tf.keras.layers.Input(shape=([1, 1, 1]))
in1Add59361 = tf.keras.layers.Input(shape=([1, 1, 1]))
in0Con74043 = tf.keras.layers.Input(shape=([3, 17]))
in0Sep55055 = tf.keras.layers.Input(shape=([1, 2, 2]))
in0Con99702 = tf.keras.layers.Input(shape=([2, 2, 5, 1]))
in0Max72987 = tf.keras.layers.Input(shape=([2, 2, 1, 2]))
in1Max72987 = tf.keras.layers.Input(shape=([2, 2, 1, 2]))

Min68921 = keras.layers.Minimum(name = 'Min68921', )([in0Min68921,in1Min68921])
Res56167 = keras.layers.Reshape((1, 1, 1), name = 'Res56167', )(Min68921)
Zer16085 = keras.layers.ZeroPadding2D(padding=((1, 1), (1, 1)), name = 'Zer16085', )(Res56167)
Add59361 = keras.layers.Add(name = 'Add59361', )([in0Add59361,in1Add59361])
Bat73186 = keras.layers.BatchNormalization(axis=2, epsilon=0.8757085344530807,  name = 'Bat73186', )(Add59361)
Zer72759 = keras.layers.ZeroPadding2D(padding=((2, 0), (2, 0)), name = 'Zer72759', )(Bat73186)
Max75703 = keras.layers.Maximum(name = 'Max75703', )([Zer16085,Zer72759])
Res89726 = keras.layers.Reshape((3, 3), name = 'Res89726', )(Max75703)
Con74043 = keras.layers.Concatenate(axis=2, name = 'Con74043', )([Res89726,in0Con74043])
Sep55055 = keras.layers.SeparableConv2D(3, (1, 1),strides=(1, 1), padding='valid', name = 'Sep55055', )(in0Sep55055)
Res37438 = keras.layers.Reshape((1, 2, 3, 1), name = 'Res37438', )(Sep55055)
Zer28648 = keras.layers.ZeroPadding3D(padding=((1, 0), (0, 0), (2, 0)), name = 'Zer28648', )(Res37438)
Con99702 = keras.layers.Concatenate(axis=4, name = 'Con99702', )([Zer28648,in0Con99702])
Max72987 = keras.layers.Maximum(name = 'Max72987', )([in0Max72987,in1Max72987])
Zer75141 = keras.layers.ZeroPadding3D(padding=((0, 0), (0, 0), (4, 0)), name = 'Zer75141', )(Max72987)
Sub65482 = keras.layers.Subtract(name = 'Sub65482', )([Con99702,Zer75141])
ELU57154 = keras.layers.ELU(alpha=-9.749175075200514, name = 'ELU57154', )(Sub65482)
Res56172 = keras.layers.Reshape((2, 2, 10), name = 'Res56172', )(ELU57154)
Res62067 = keras.layers.Reshape((2, 20), name = 'Res62067', )(Res56172)
Dot81275 = keras.layers.Dot(axes=(2, 2), name = 'Dot81275', )([Con74043,Res62067])
Bat12441 = keras.layers.BatchNormalization(axis=1, epsilon=0.1114293344230391,  name = 'Bat12441', )(Dot81275)
model = tf.keras.models.Model(inputs=[in0Min68921,in1Min68921,in0Add59361,in1Add59361,in0Con74043,in0Sep55055,in0Con99702,in0Max72987,in1Max72987], outputs=Bat12441)
w = model.get_layer('Bat73186').get_weights() 
w[0] = np.array([0.432])
w[1] = np.array([0.9542])
w[2] = np.array([0.2967])
w[3] = np.array([0.0194])
model.get_layer('Bat73186').set_weights(w) 
w = model.get_layer('Sep55055').get_weights() 
w[0] = np.array([[[[0.0555], [0.0327]]]])
w[1] = np.array([[[[0.3099, 0.268, 0.0029], [0.2861, 0.206, 0.0141]]]])
w[2] = np.array([0, 0, 0])
model.get_layer('Sep55055').set_weights(w) 
w = model.get_layer('Bat12441').get_weights() 
w[0] = np.array([0.9524, 0.716, 0.1551])
w[1] = np.array([0.5574, 0.9232, 0.4601])
w[2] = np.array([0.8358, 0.3548, 0.7898])
w[3] = np.array([0.7854, 0.6448, 0.844])
model.get_layer('Bat12441').set_weights(w) 
in0Min68921 = tf.constant([[[0.5818]]])
in1Min68921 = tf.constant([[[0.0068]]])
in0Add59361 = tf.constant([[[[0.7242]]]])
in1Add59361 = tf.constant([[[[0.7646]]]])
in0Con74043 = tf.constant([[[0.942, 0.6399, 0.1128, 0.3007, 0.9237, 0.1026, 0.349, 0.9405, 0.0078, 0.0518, 0.4906, 0.3221, 0.9192, 0.0216, 0.4859, 0.3007, 0.8703], [0.0939, 0.2519, 0.7104, 0.1274, 0.9359, 0.083, 0.9242, 0.8228, 0.1512, 0.1879, 0.7645, 0.159, 0.4556, 0.2644, 0.5571, 0.7447, 0.1328], [0.8798, 0.9564, 0.1794, 0.2053, 0.5661, 0.5406, 0.1609, 0.7624, 0.9644, 0.0718, 0.3271, 0.9295, 0.0535, 0.749, 0.7638, 0.0314, 0.487]]])
in0Sep55055 = tf.constant([[[[0.8113, 0.7806], [0.5063, 0.7073]]]])
in0Con99702 = tf.constant([[[[[0.674], [0.6269], [0.6757], [0.1266], [0.3631]], [[0.4372], [0.0344], [0.2835], [0.9578], [0.3212]]], [[[0.2821], [0.9023], [0.2573], [0.8561], [0.6112]], [[0.7988], [0.1517], [0.7815], [0.6396], [0.3708]]]]])
in0Max72987 = tf.constant([[[[[0.8494, 0.6641]], [[0.2787, 0.7319]]], [[[0.8011, 0.261]], [[0.4641, 0.3374]]]]])
in1Max72987 = tf.constant([[[[[0.1482, 0.1032]], [[0.1334, 0.5607]]], [[[0.2678, 0.5859]], [[0.953, 0.5136]]]]])
print (np.array2string(model.predict([in0Min68921,in1Min68921,in0Add59361,in1Add59361,in0Con74043,in0Sep55055,in0Con99702,in0Max72987,in1Max72987],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Bat12441.png')

LMin68921 = minimum_layer([[[[0.5818]]], [[[0.0068]]]], Min68921), 
LRes56167 = reshape_layer(Min68921, [1, 1, 1], Res56167), 
LZer16085 = zero_padding2D_layer(Res56167, 1, 1, 1, 1, Zer16085), 
LAdd59361 = add_layer([[[[[0.7242]]]], [[[[0.7646]]]]], Add59361), 
LBat73186 = batch_normalization_layer(Add59361, 2, 0.8757085344530807, [0.432], [0.9542], [0.2967], [0.0194], Bat73186), 
LZer72759 = zero_padding2D_layer(Bat73186, 2, 0, 2, 0, Zer72759), 
LMax75703 = maximum_layer([Zer16085,Zer72759], Max75703), 
LRes89726 = reshape_layer(Max75703, [3, 3], Res89726), 
LCon74043 = concatenate_layer([Res89726,[[[0.942, 0.6399, 0.1128, 0.3007, 0.9237, 0.1026, 0.349, 0.9405, 0.0078, 0.0518, 0.4906, 0.3221, 0.9192, 0.0216, 0.4859, 0.3007, 0.8703], [0.0939, 0.2519, 0.7104, 0.1274, 0.9359, 0.083, 0.9242, 0.8228, 0.1512, 0.1879, 0.7645, 0.159, 0.4556, 0.2644, 0.5571, 0.7447, 0.1328], [0.8798, 0.9564, 0.1794, 0.2053, 0.5661, 0.5406, 0.1609, 0.7624, 0.9644, 0.0718, 0.3271, 0.9295, 0.0535, 0.749, 0.7638, 0.0314, 0.487]]]], 2, Con74043), 
LSep55055 = separable_conv2D_layer([[[[0.8113, 0.7806], [0.5063, 0.7073]]]], 1, 1,[[[[[0.0555], [0.0327]]]],[[[[0.3099, 0.268, 0.0029], [0.2861, 0.206, 0.0141]]]]],[0, 0, 0], 1, 1, false, Sep55055), 
LRes37438 = reshape_layer(Sep55055, [1, 2, 3, 1], Res37438), 
LZer28648 = zero_padding3D_layer(Res37438, 1, 0, 0, 0, 2, 0, Zer28648), 
LCon99702 = concatenate_layer([Zer28648,[[[[[0.674], [0.6269], [0.6757], [0.1266], [0.3631]], [[0.4372], [0.0344], [0.2835], [0.9578], [0.3212]]], [[[0.2821], [0.9023], [0.2573], [0.8561], [0.6112]], [[0.7988], [0.1517], [0.7815], [0.6396], [0.3708]]]]]], 4, Con99702), 
LMax72987 = maximum_layer([[[[[[0.8494, 0.6641]], [[0.2787, 0.7319]]], [[[0.8011, 0.261]], [[0.4641, 0.3374]]]]], [[[[[0.1482, 0.1032]], [[0.1334, 0.5607]]], [[[0.2678, 0.5859]], [[0.953, 0.5136]]]]]], Max72987), 
LZer75141 = zero_padding3D_layer(Max72987, 0, 0, 0, 0, 4, 0, Zer75141), 
LSub65482 = subtract_layer(Con99702,Zer75141, Sub65482), 
LELU57154 = elu_layer(Sub65482, -9.749175075200514, ELU57154), 
LRes56172 = reshape_layer(ELU57154, [2, 2, 10], Res56172), 
LRes62067 = reshape_layer(Res56172, [2, 20], Res62067), 
LDot81275 = dot_layer(Con74043,Res62067, 2, 2, Dot81275), 
LBat12441 = batch_normalization_layer(Dot81275, 1, 0.1114293344230391, [0.9524, 0.716, 0.1551], [0.5574, 0.9232, 0.4601], [0.8358, 0.3548, 0.7898], [0.7854, 0.6448, 0.844], Bat12441), 
exec_layers([LMin68921,LRes56167,LZer16085,LAdd59361,LBat73186,LZer72759,LMax75703,LRes89726,LCon74043,LSep55055,LRes37438,LZer28648,LCon99702,LMax72987,LZer75141,LSub65482,LELU57154,LRes56172,LRes62067,LDot81275,LBat12441],["Min68921","Res56167","Zer16085","Add59361","Bat73186","Zer72759","Max75703","Res89726","Con74043","Sep55055","Res37438","Zer28648","Con99702","Max72987","Zer75141","Sub65482","ELU57154","Res56172","Res62067","Dot81275","Bat12441"],Bat12441,"Bat12441")

Actual (Unparsed): [[[6.3118178, 6.0459860], [5.9204337, 6.5050193], [1.4489698, 1.3582284]]]

Expected (Unparsed): [[[6.311818059820126,6.045986007644099],[5.920433777727798,6.505019291666798],[1.4489697966172548,1.358228382596503]]]

Actual:   [[[6.3119, 6.046], [5.9205, 6.5051], [1.449, 1.3583]]]

Expected: [[[6.3119, 6.046], [5.9205, 6.5051], [1.449, 1.3583]]]