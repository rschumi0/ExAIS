import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Fla67838 = tf.keras.layers.Input(shape=([1]))

Fla67838 = keras.layers.Flatten(name = 'Fla67838', )(in0Fla67838)
Res24342 = keras.layers.Reshape((1, 1), name = 'Res24342', )(Fla67838)
Up_56200 = keras.layers.UpSampling1D(size=(2), name = 'Up_56200', )(Res24342)
Con17895 = keras.layers.Conv1D(4, (1),strides=(3), padding='same', dilation_rate=(1), name = 'Con17895', )(Up_56200)
model = tf.keras.models.Model(inputs=[in0Fla67838], outputs=Con17895)
w = model.get_layer('Con17895').get_weights() 
w[0] = np.array([[[0.3141, 0.8381, 0.5707, 0.9036]]])
w[1] = np.array([0, 0, 0, 0])
model.get_layer('Con17895').set_weights(w) 
in0Fla67838 = tf.constant([[1.5255]])
print (np.array2string(model.predict([in0Fla67838],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Con17895.png')

LFla67838 = flatten_layer([[1.5255]], Fla67838), 
LRes24342 = reshape_layer(Fla67838, [1, 1], Res24342), 
LUp_56200 = up_sampling1D_layer(Res24342, 2, Up_56200), 
LCon17895 = conv1D_layer(Up_56200, 1,[[[0.3141, 0.8381, 0.5707, 0.9036]]],[0, 0, 0, 0], 3, true, 1, Con17895), 
exec_layers([LFla67838,LRes24342,LUp_56200,LCon17895],["Fla67838","Res24342","Up_56200","Con17895"],Con17895,"Con17895")

Actual (Unparsed): [[[0.4791596, 1.2785216, 0.8706029, 1.3784419]]]

Expected (Unparsed): [[[0.47915955,1.27852155,0.87060285,1.3784418]]]

Actual:   [[[0.4792, 1.2786, 0.8707, 1.3785]]]

Expected: [[[0.4792, 1.2786, 0.8707, 1.3785]]]