import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Cro97401 = tf.keras.layers.Input(shape=([4, 4, 1, 1]))

Cro97401 = keras.layers.Cropping3D(cropping=((3, 0), (2, 0), (0, 0)), name = 'Cro97401', )(in0Cro97401)
Zer92439 = keras.layers.ZeroPadding3D(padding=((1, 1), (1, 1), (1, 1)), name = 'Zer92439', )(Cro97401)
Res94711 = keras.layers.Reshape((3, 4, 3), name = 'Res94711', )(Zer92439)
Dep53073 = keras.layers.DepthwiseConv2D((2, 1),strides=(3, 3), padding='same', name = 'Dep53073', )(Res94711)
model = tf.keras.models.Model(inputs=[in0Cro97401], outputs=Dep53073)
w = model.get_layer('Dep53073').get_weights() 
w[0] = np.array([[[[0.0042], [0.6247], [0.6422]]], [[[0.4454], [0.4361], [0.2426]]]])
w[1] = np.array([0, 0, 0])
model.get_layer('Dep53073').set_weights(w) 
in0Cro97401 = tf.constant([[[[[1.3173]], [[1.7821]], [[1.8517]], [[1.2341]]], [[[1.3981]], [[1.1447]], [[1.7667]], [[1.1731]]], [[[1.4513]], [[1.13]], [[1.6677]], [[1.4885]]], [[[1.332]], [[1.9723]], [[1.0545]], [[1.4103]]]]])
print (np.array2string(model.predict([in0Cro97401],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Dep53073.png')

LCro97401 = cropping3D_layer([[[[[1.3173]], [[1.7821]], [[1.8517]], [[1.2341]]], [[[1.3981]], [[1.1447]], [[1.7667]], [[1.1731]]], [[[1.4513]], [[1.13]], [[1.6677]], [[1.4885]]], [[[1.332]], [[1.9723]], [[1.0545]], [[1.4103]]]]], 3, 0, 2, 0, 0, 0, Cro97401), 
LZer92439 = zero_padding3D_layer(Cro97401, 1, 1, 1, 1, 1, 1, Zer92439), 
LRes94711 = reshape_layer(Zer92439, [3, 4, 3], Res94711), 
LDep53073 = depthwise_conv2D_layer(Res94711, 2, 1,[[[[0.0042], [0.6247], [0.6422]]], [[[0.4454], [0.4361], [0.2426]]]],[0, 0, 0], 3, 3, true, Dep53073), 
exec_layers([LCro97401,LZer92439,LRes94711,LDep53073],["Cro97401","Zer92439","Res94711","Dep53073"],Dep53073,"Dep53073")

Actual (Unparsed): [[[[0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000]]]]

Expected (Unparsed): [[[[0.0,0.0,0.0],[0.0,0.0,0.0]]]]

Actual:   [[[[0, 0, 0], [0, 0, 0]]]]

Expected: [[[[0, 0, 0], [0, 0, 0]]]]