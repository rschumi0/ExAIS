import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Add66771 = tf.keras.layers.Input(shape=([1, 1, 2, 1]))
in1Add66771 = tf.keras.layers.Input(shape=([1, 1, 2, 1]))

Add66771 = keras.layers.Add(name = 'Add66771', )([in0Add66771,in1Add66771])
Res88979 = keras.layers.Reshape((1, 1, 2), name = 'Res88979', )(Add66771)
Sep97054 = keras.layers.SeparableConv2D(4, (1, 1),strides=(1, 1), padding='same', name = 'Sep97054', )(Res88979)
Glo30020 = keras.layers.GlobalMaxPool2D(name = 'Glo30020', )(Sep97054)
model = tf.keras.models.Model(inputs=[in0Add66771,in1Add66771], outputs=Glo30020)
w = model.get_layer('Sep97054').get_weights() 
w[0] = np.array([[[[0.5695], [0.5659]]]])
w[1] = np.array([[[[0.5065, 0.302, 0.5163, 0.3484], [0.8698, 0.6208, 0.353, 0.4814]]]])
w[2] = np.array([0, 0, 0, 0])
model.get_layer('Sep97054').set_weights(w) 
in0Add66771 = tf.constant([[[[[0.3305], [0.2024]]]]])
in1Add66771 = tf.constant([[[[[0.2996], [0.8409]]]]])
print (np.array2string(model.predict([in0Add66771,in1Add66771],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Glo30020.png')

LAdd66771 = add_layer([[[[[[0.3305], [0.2024]]]]], [[[[[0.2996], [0.8409]]]]]], Add66771), 
LRes88979 = reshape_layer(Add66771, [1, 1, 2], Res88979), 
LSep97054 = separable_conv2D_layer(Res88979, 1, 1,[[[[[0.5695], [0.5659]]]],[[[[0.5065, 0.302, 0.5163, 0.3484], [0.8698, 0.6208, 0.353, 0.4814]]]]],[0, 0, 0, 0], 1, 1, true, Sep97054), 
LGlo30020 = global_max_pool2D_layer(Sep97054, Glo30020), 
exec_layers([LAdd66771,LRes88979,LSep97054,LGlo30020],["Add66771","Res88979","Sep97054","Glo30020"],Glo30020,"Glo30020")

Actual (Unparsed): [[0.6952864, 0.4748927, 0.3936825, 0.4092408]]

Expected (Unparsed): [[0.695286385881,0.474892743076,0.393682523695,0.40924076583799995]]

Actual:   [[0.6953, 0.4749, 0.3937, 0.4093]]

Expected: [[0.6953, 0.4749, 0.3937, 0.4093]]