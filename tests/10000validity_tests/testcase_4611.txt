import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Mul56562 = tf.keras.layers.Input(shape=([2, 2]))
in1Mul56562 = tf.keras.layers.Input(shape=([2, 2]))
in0Sub10306 = tf.keras.layers.Input(shape=([2, 3, 3, 3]))
in1Sub10306 = tf.keras.layers.Input(shape=([2, 3, 3, 3]))
in0Mas39802 = tf.keras.layers.Input(shape=([2, 1, 4]))
in0Con55279 = tf.keras.layers.Input(shape=([2, 3, 5]))

Mul56562 = keras.layers.Multiply(name = 'Mul56562', )([in0Mul56562,in1Mul56562])
Sub10306 = keras.layers.Subtract(name = 'Sub10306', )([in0Sub10306,in1Sub10306])
Res27602 = keras.layers.Reshape((2, 3, 9), name = 'Res27602', )(Sub10306)
Mas39802 = keras.layers.Masking(mask_value=2, name = 'Mas39802', )(in0Mas39802)
Zer5421 = keras.layers.ZeroPadding2D(padding=((0, 0), (2, 0)), name = 'Zer5421', )(Mas39802)
Con55279 = keras.layers.Concatenate(axis=3, name = 'Con55279', )([Zer5421,in0Con55279])
Add73268 = keras.layers.Add(name = 'Add73268', )([Res27602,Con55279])
Res5968 = keras.layers.Reshape((2, 27), name = 'Res5968', )(Add73268)
Dot16779 = keras.layers.Dot(axes=(1, 1), name = 'Dot16779', )([Mul56562,Res5968])
model = tf.keras.models.Model(inputs=[in0Mul56562,in1Mul56562,in0Sub10306,in1Sub10306,in0Mas39802,in0Con55279], outputs=Dot16779)
in0Mul56562 = tf.constant([[[0.5607, 0.1666], [0.9997, 0.6288]]])
in1Mul56562 = tf.constant([[[0.1527, 0.4707], [0.3528, 0.8725]]])
in0Sub10306 = tf.constant([[[[[0.4318, 0.61, 0.7187], [0.8933, 0.6262, 0.8116], [0.6004, 0.6122, 0.0757]], [[0.3178, 0.9252, 0.0718], [0.4843, 0.2645, 0.1947], [0.6226, 0.0641, 0.4962]], [[0.6438, 0.0174, 0.9061], [0.3732, 0.9798, 0.3807], [0.0165, 0.8892, 0.7635]]], [[[0.298, 0.589, 0.9691], [0.5232, 0.3344, 0.2521], [0.6424, 0.242, 0.1389]], [[0.2217, 0.9008, 0.9507], [0.9131, 0.5226, 0.4381], [0.7751, 0.4328, 0.6955]], [[0.1448, 0.9341, 0.9991], [0.7023, 0.1836, 0.8699], [0.6644, 0.0566, 0.7062]]]]])
in1Sub10306 = tf.constant([[[[[0.8982, 0.8305, 0.5666], [0.7903, 0.5146, 0.8482], [0.4545, 0.9718, 0.7638]], [[0.5603, 0.0364, 0.8276], [0.8861, 0.8267, 0.5902], [0.424, 0.7924, 0.9431]], [[0.5179, 0.0872, 0.7861], [0.5264, 0.4173, 0.8763], [0.3499, 0.8728, 0.2167]]], [[[0.3422, 0.7484, 0.0201], [0.1009, 0.6408, 0.6546], [0.7428, 0.5547, 0.8376]], [[0.0076, 0.4916, 0.4879], [0.2868, 0.8272, 0.8535], [0.0691, 0.2959, 0.7716]], [[0.4524, 0.5916, 0.9025], [0.8081, 0.3368, 0.4228], [0.4735, 0.4876, 0.8066]]]]])
in0Mas39802 = tf.constant([[[[1.8471, 1.018, 1.9589, 1.3233]], [[1.4036, 1.5532, 1.0458, 1.6124]]]])
in0Con55279 = tf.constant([[[[0.4277, 0.5867, 0.1618, 0.2125, 0.0006], [0.2072, 0.5768, 0.0376, 0.1578, 0.6727], [0.6269, 0.1761, 0.8681, 0.2639, 0.7683]], [[0.7732, 0.4831, 0.4291, 0.7296, 0.6651], [0.2551, 0.495, 0.1506, 0.3863, 0.7132], [0.7278, 0.2379, 0.1777, 0.6167, 0.9445]]]])
print (np.array2string(model.predict([in0Mul56562,in1Mul56562,in0Sub10306,in1Sub10306,in0Mas39802,in0Con55279],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Dot16779.png')

LMul56562 = multiply_layer([[[[0.5607, 0.1666], [0.9997, 0.6288]]], [[[0.1527, 0.4707], [0.3528, 0.8725]]]], Mul56562), 
LSub10306 = subtract_layer([[[[[0.4318, 0.61, 0.7187], [0.8933, 0.6262, 0.8116], [0.6004, 0.6122, 0.0757]], [[0.3178, 0.9252, 0.0718], [0.4843, 0.2645, 0.1947], [0.6226, 0.0641, 0.4962]], [[0.6438, 0.0174, 0.9061], [0.3732, 0.9798, 0.3807], [0.0165, 0.8892, 0.7635]]], [[[0.298, 0.589, 0.9691], [0.5232, 0.3344, 0.2521], [0.6424, 0.242, 0.1389]], [[0.2217, 0.9008, 0.9507], [0.9131, 0.5226, 0.4381], [0.7751, 0.4328, 0.6955]], [[0.1448, 0.9341, 0.9991], [0.7023, 0.1836, 0.8699], [0.6644, 0.0566, 0.7062]]]]], [[[[[0.8982, 0.8305, 0.5666], [0.7903, 0.5146, 0.8482], [0.4545, 0.9718, 0.7638]], [[0.5603, 0.0364, 0.8276], [0.8861, 0.8267, 0.5902], [0.424, 0.7924, 0.9431]], [[0.5179, 0.0872, 0.7861], [0.5264, 0.4173, 0.8763], [0.3499, 0.8728, 0.2167]]], [[[0.3422, 0.7484, 0.0201], [0.1009, 0.6408, 0.6546], [0.7428, 0.5547, 0.8376]], [[0.0076, 0.4916, 0.4879], [0.2868, 0.8272, 0.8535], [0.0691, 0.2959, 0.7716]], [[0.4524, 0.5916, 0.9025], [0.8081, 0.3368, 0.4228], [0.4735, 0.4876, 0.8066]]]]], Sub10306), 
LRes27602 = reshape_layer(Sub10306, [2, 3, 9], Res27602), 
LMas39802 = masking_layer([[[[1.8471, 1.018, 1.9589, 1.3233]], [[1.4036, 1.5532, 1.0458, 1.6124]]]], 2, Mas39802), 
LZer5421 = zero_padding2D_layer(Mas39802, 0, 0, 2, 0, Zer5421), 
LCon55279 = concatenate_layer([Zer5421,[[[[0.4277, 0.5867, 0.1618, 0.2125, 0.0006], [0.2072, 0.5768, 0.0376, 0.1578, 0.6727], [0.6269, 0.1761, 0.8681, 0.2639, 0.7683]], [[0.7732, 0.4831, 0.4291, 0.7296, 0.6651], [0.2551, 0.495, 0.1506, 0.3863, 0.7132], [0.7278, 0.2379, 0.1777, 0.6167, 0.9445]]]]], 3, Con55279), 
LAdd73268 = add_layer([Res27602,Con55279], Add73268), 
LRes5968 = reshape_layer(Add73268, [2, 27], Res5968), 
LDot16779 = dot_layer(Mul56562,Res5968, 1, 1, Dot16779), 
exec_layers([LMul56562,LSub10306,LRes27602,LMas39802,LZer5421,LCon55279,LAdd73268,LRes5968,LDot16779],["Mul56562","Sub10306","Res27602","Mas39802","Zer5421","Con55279","Add73268","Res5968","Dot16779"],Dot16779,"Dot16779")

Actual (Unparsed): [[[-0.0555217, -0.0750984, 0.3477294, 0.1577615, 0.2108119, 0.0755261, 0.1422755, 0.1344437, -0.0707135, 0.0547492, 0.2204205, 0.0985161, 0.1864907, -0.0478531, 0.0435972, 0.3223410, 0.1356840, 0.2440342, 0.5554789, 0.7497862, 0.5809110, 0.6315517, 0.3044932, 0.2142403, 0.1757835, 0.0894943, 0.4103066], [-0.0608238, -0.1047426, 0.5325754, 0.2397627, 0.2983907, 0.0873575, 0.2044634, 0.2171876, -0.0723467, 0.0984447, 0.2941970, 0.1946362, 0.3120971, -0.0549957, 0.0578881, 0.4884772, 0.2423043, 0.3672378, 0.7560162, 1.1143906, 0.7897771, 0.9183206, 0.4085127, 0.3507554, 0.2441547, 0.1238610, 0.5662252]]]

Expected (Unparsed): [[[-0.05552173216800001,-0.075098414349,0.347729391009,0.157761489438,0.210811901265,0.07552610068500001,0.14227550284499998,0.13444365658500002,-0.07071351065099998,0.05474923883100001,0.22042051970400003,0.098516100186,0.18649068240600003,-0.047853066870000044,0.04359715989299999,0.322340999274,0.13568400776700001,0.24403419469800003,0.5554788693300001,0.7497861506100001,0.580910918805,0.6315516846450001,0.30449317210200005,0.21424026424500003,0.17578348785900003,0.08949428037900001,0.41030654269500005],[-0.06082380196800001,-0.10474260890999999,0.532575444102,0.23976272226,0.298390712166,0.087357499662,0.204463432974,0.21718763419800002,-0.07234670204999998,0.09844473945000001,0.294197047056,0.194636245404,0.31209711488400005,-0.05499569610000006,0.05788808460599997,0.488477222844,0.24230434689000002,0.36723782319599996,0.75601622526,1.1143906350839998,0.789777096318,0.9183205720620001,0.408512755428,0.35075543091000005,0.244154716914,0.12386095878600001,0.5662252219620001]]]

Actual:   [[[-0.0555, -0.075, 0.3478, 0.1578, 0.2109, 0.0756, 0.1423, 0.1345, -0.0707, 0.0548, 0.2205, 0.0986, 0.1865, -0.0478, 0.0436, 0.3224, 0.1357, 0.2441, 0.5555, 0.7498, 0.581, 0.6316, 0.3045, 0.2143, 0.1758, 0.0895, 0.4104], [-0.0608, -0.1047, 0.5326, 0.2398, 0.2984, 0.0874, 0.2045, 0.2172, -0.0723, 0.0985, 0.2942, 0.1947, 0.3121, -0.0549, 0.0579, 0.4885, 0.2424, 0.3673, 0.7561, 1.1144, 0.7898, 0.9184, 0.4086, 0.3508, 0.2442, 0.1239, 0.5663]]]

Expected: [[[-0.0555, -0.075, 0.3478, 0.1578, 0.2109, 0.0756, 0.1423, 0.1345, -0.0707, 0.0548, 0.2205, 0.0986, 0.1865, -0.0478, 0.0436, 0.3224, 0.1357, 0.2441, 0.5555, 0.7498, 0.581, 0.6316, 0.3045, 0.2143, 0.1758, 0.0895, 0.4104], [-0.0608, -0.1047, 0.5326, 0.2398, 0.2984, 0.0874, 0.2045, 0.2172, -0.0723, 0.0985, 0.2942, 0.1947, 0.3121, -0.0549, 0.0579, 0.4885, 0.2424, 0.3673, 0.7561, 1.1144, 0.7898, 0.9184, 0.4086, 0.3508, 0.2442, 0.1239, 0.5663]]]