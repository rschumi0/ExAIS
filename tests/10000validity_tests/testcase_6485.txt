import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Den73250 = tf.keras.layers.Input(shape=([3, 4]))
in0Ave57258 = tf.keras.layers.Input(shape=([1, 1]))
in1Ave57258 = tf.keras.layers.Input(shape=([1, 1]))
in0Add76091 = tf.keras.layers.Input(shape=([2, 2, 2, 1]))
in1Add76091 = tf.keras.layers.Input(shape=([2, 2, 2, 1]))

Den73250 = keras.layers.Dense(4,name = 'Den73250', )(in0Den73250)
Den43865 = keras.layers.Dense(1,name = 'Den43865', )(Den73250)
Res90317 = keras.layers.Reshape((3, 1, 1), name = 'Res90317', )(Den43865)
Res34417 = keras.layers.Reshape((3, 1, 1, 1), name = 'Res34417', )(Res90317)
Zer10710 = keras.layers.ZeroPadding3D(padding=((0, 0), (2, 0), (2, 0)), name = 'Zer10710', )(Res34417)
Ave57258 = keras.layers.Average(name = 'Ave57258', )([in0Ave57258,in1Ave57258])
ELU33310 = keras.layers.ELU(alpha=-9.952770103285339, name = 'ELU33310', )(Ave57258)
Res9305 = keras.layers.Reshape((1, 1, 1), name = 'Res9305', )(ELU33310)
Res80742 = keras.layers.Reshape((1, 1, 1, 1), name = 'Res80742', )(Res9305)
Zer79910 = keras.layers.ZeroPadding3D(padding=((1, 0), (1, 0), (1, 0)), name = 'Zer79910', )(Res80742)
Add76091 = keras.layers.Add(name = 'Add76091', )([in0Add76091,in1Add76091])
Lay78739 = keras.layers.LayerNormalization(axis=2, epsilon=2.9099189042691083, name = 'Lay78739', )(Add76091)
Max88010 = keras.layers.Maximum(name = 'Max88010', )([Zer79910,Lay78739])
Zer27847 = keras.layers.ZeroPadding3D(padding=((1, 0), (1, 0), (1, 0)), name = 'Zer27847', )(Max88010)
Mul42109 = keras.layers.Multiply(name = 'Mul42109', )([Zer10710,Zer27847])
model = tf.keras.models.Model(inputs=[in0Den73250,in0Ave57258,in1Ave57258,in0Add76091,in1Add76091], outputs=Mul42109)
w = model.get_layer('Den73250').get_weights() 
w[0] = np.array([[0.6322, 0.7376, 0.032, 0.1716], [0.452, 0.8786, 0.4887, 0.8432], [0.0458, 0.0441, 0.1489, 0.4622], [0.9764, 0.6336, 0.7652, 0.2757]])
w[1] = np.array([0.941, 0.6517, 0.1749, 0.1498])
model.get_layer('Den73250').set_weights(w) 
w = model.get_layer('Den43865').get_weights() 
w[0] = np.array([[0.8632], [0.3053], [0.1236], [0.2119]])
w[1] = np.array([0.8161])
model.get_layer('Den43865').set_weights(w) 
in0Den73250 = tf.constant([[[0.8292, 0.8843, 0.2341, 0.7394], [0.1464, 0.0028, 0.2603, 0.4322], [0.1674, 0.2123, 0.191, 0.4189]]])
in0Ave57258 = tf.constant([[[0.5257]]])
in1Ave57258 = tf.constant([[[0.9919]]])
in0Add76091 = tf.constant([[[[[0.7303], [0.1148]], [[0.3972], [0.0346]]], [[[0.9958], [0.7555]], [[0.0314], [0.7536]]]]])
in1Add76091 = tf.constant([[[[[0.1626], [0.9428]], [[0.2649], [0.7753]]], [[[0.4048], [0.3037]], [[0.685], [0.6147]]]]])
print (np.array2string(model.predict([in0Den73250,in0Ave57258,in1Ave57258,in0Add76091,in1Add76091],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Mul42109.png')

LDen73250 = dense_layer([[[0.8292, 0.8843, 0.2341, 0.7394], [0.1464, 0.0028, 0.2603, 0.4322], [0.1674, 0.2123, 0.191, 0.4189]]], [[0.6322, 0.7376, 0.032, 0.1716], [0.452, 0.8786, 0.4887, 0.8432], [0.0458, 0.0441, 0.1489, 0.4622], [0.9764, 0.6336, 0.7652, 0.2757]],[0.941, 0.6517, 0.1749, 0.1498], Den73250), 
LDen43865 = dense_layer(Den73250, [[0.8632], [0.3053], [0.1236], [0.2119]],[0.8161], Den43865), 
LRes90317 = reshape_layer(Den43865, [3, 1, 1], Res90317), 
LRes34417 = reshape_layer(Res90317, [3, 1, 1, 1], Res34417), 
LZer10710 = zero_padding3D_layer(Res34417, 0, 0, 2, 0, 2, 0, Zer10710), 
LAve57258 = average_layer([[[[0.5257]]], [[[0.9919]]]], Ave57258), 
LELU33310 = elu_layer(Ave57258, -9.952770103285339, ELU33310), 
LRes9305 = reshape_layer(ELU33310, [1, 1, 1], Res9305), 
LRes80742 = reshape_layer(Res9305, [1, 1, 1, 1], Res80742), 
LZer79910 = zero_padding3D_layer(Res80742, 1, 0, 1, 0, 1, 0, Zer79910), 
LAdd76091 = add_layer([[[[[[0.7303], [0.1148]], [[0.3972], [0.0346]]], [[[0.9958], [0.7555]], [[0.0314], [0.7536]]]]], [[[[[0.1626], [0.9428]], [[0.2649], [0.7753]]], [[[0.4048], [0.3037]], [[0.685], [0.6147]]]]]], Add76091), 
LLay78739 = layer_normalization_layer(Add76091, 2, 2.9099189042691083, Lay78739), 
LMax88010 = maximum_layer([Zer79910,Lay78739], Max88010), 
LZer27847 = zero_padding3D_layer(Max88010, 1, 0, 1, 0, 1, 0, Zer27847), 
LMul42109 = multiply_layer([Zer10710,Zer27847], Mul42109), 
exec_layers([LDen73250,LDen43865,LRes90317,LRes34417,LZer10710,LAve57258,LELU33310,LRes9305,LRes80742,LZer79910,LAdd76091,LLay78739,LMax88010,LZer27847,LMul42109],["Den73250","Den43865","Res90317","Res34417","Zer10710","Ave57258","ELU33310","Res9305","Res80742","Zer79910","Add76091","Lay78739","Max88010","Zer27847","Mul42109"],Mul42109,"Mul42109")

Actual (Unparsed): [[[[[0.0000000], [0.0000000], [0.0000000]], [[0.0000000], [0.0000000], [0.0000000]], [[0.0000000], [0.0000000], [0.0000000]]], [[[0.0000000], [0.0000000], [0.0000000]], [[0.0000000], [0.0000000], [0.0000000]], [[0.0000000], [0.0000000], [0.0000000]]], [[[0.0000000], [0.0000000], [0.0000000]], [[0.0000000], [0.0000000], [0.0000000]], [[0.0000000], [0.0000000], [2.0772583]]]]]

Expected (Unparsed): [[[[[0],[0],[0]],[[0],[0],[0]],[[0],[0],[0.0]]],[[[0],[0],[0]],[[0],[0.0],[0.0]],[[0],[0],[0.0]]],[[[0],[0],[0]],[[0],[0.0],[0]],[[0],[0],[2.0772582794532712]]]]]

Actual:   [[[[[0], [0], [0]], [[0], [0], [0]], [[0], [0], [0]]], [[[0], [0], [0]], [[0], [0], [0]], [[0], [0], [0]]], [[[0], [0], [0]], [[0], [0], [0]], [[0], [0], [2.0773]]]]]

Expected: [[[[[0], [0], [0]], [[0], [0], [0]], [[0], [0], [0]]], [[[0], [0], [0]], [[0], [0], [0]], [[0], [0], [0]]], [[[0], [0], [0]], [[0], [0], [0]], [[0], [0], [2.0773]]]]]