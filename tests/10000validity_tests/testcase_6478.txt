import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Lay4952 = tf.keras.layers.Input(shape=([1, 4]))

Lay4952 = keras.layers.LayerNormalization(axis=1, epsilon=2.1729845438311295, name = 'Lay4952', )(in0Lay4952)
Thr31111 = keras.layers.ThresholdedReLU(theta=2.712465742043121, name = 'Thr31111', )(Lay4952)
Bat74815 = keras.layers.BatchNormalization(axis=1, epsilon=0.39884916788266633,  name = 'Bat74815', )(Thr31111)
model = tf.keras.models.Model(inputs=[in0Lay4952], outputs=Bat74815)
w = model.get_layer('Bat74815').get_weights() 
w[0] = np.array([0.5528])
w[1] = np.array([0.805])
w[2] = np.array([0.2661])
w[3] = np.array([0.634])
model.get_layer('Bat74815').set_weights(w) 
in0Lay4952 = tf.constant([[[1.7269, 1.0985, 1.8719, 1.5152]]])
print (np.array2string(model.predict([in0Lay4952],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Bat74815.png')

LLay4952 = layer_normalization_layer([[[1.7269, 1.0985, 1.8719, 1.5152]]], 1, 2.1729845438311295, Lay4952), 
LThr31111 = thresholded_relu_layer(Lay4952, 2.712465742043121, Thr31111), 
LBat74815 = batch_normalization_layer(Thr31111, 1, 0.39884916788266633, [0.5528], [0.805], [0.2661], [0.634], Bat74815), 
exec_layers([LLay4952,LThr31111,LBat74815],["Lay4952","Thr31111","Bat74815"],Bat74815,"Bat74815")

Actual (Unparsed): [[[0.6602580, 0.6602580, 0.6602580, 0.6602580]]]

Expected (Unparsed): [[[0.6602580374408351,0.6602580374408351,0.6602580374408351,0.6602580374408351]]]

Actual:   [[[0.6603, 0.6603, 0.6603, 0.6603]]]

Expected: [[[0.6603, 0.6603, 0.6603, 0.6603]]]