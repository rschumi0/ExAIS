import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Loc13193 = tf.keras.layers.Input(shape=([2, 1, 1]))

Loc13193 = keras.layers.LocallyConnected2D(3, (1, 1),strides=(1, 1), name = 'Loc13193', )(in0Loc13193)
Res95011 = keras.layers.Reshape((2, 3), name = 'Res95011', )(Loc13193)
Sep16943 = keras.layers.SeparableConv1D(3, (1),strides=(2), padding='same', name = 'Sep16943', )(Res95011)
model = tf.keras.models.Model(inputs=[in0Loc13193], outputs=Sep16943)
w = model.get_layer('Loc13193').get_weights() 
w[0] = np.array([[[0.0853, 0.2223, 0.6825]], [[0.9782, 0.8256, 0.4241]]])
w[1] = np.array([[[0, 0, 0]], [[0, 0, 0]]])
model.get_layer('Loc13193').set_weights(w) 
w = model.get_layer('Sep16943').get_weights() 
w[0] = np.array([[[0.7508], [0.5076], [0.5982]]])
w[1] = np.array([[[0.4733, 0.6969, 0.8686], [0.3116, 0.9245, 0.3968], [0.0017, 0.9159, 0.0846]]])
w[2] = np.array([0, 0, 0])
model.get_layer('Sep16943').set_weights(w) 
in0Loc13193 = tf.constant([[[[0.4248]], [[0.0953]]]])
print (np.array2string(model.predict([in0Loc13193],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Sep16943.png')

LLoc13193 = locally_connected2D_layer([[[[0.4248]], [[0.0953]]]], 1, 1,[[[0.0853, 0.2223, 0.6825]], [[0.9782, 0.8256, 0.4241]]],[[[0, 0, 0]], [[0, 0, 0]]], 1, 1, Loc13193), 
LRes95011 = reshape_layer(Loc13193, [2, 3], Res95011), 
LSep16943 = separable_conv1D_layer(Res95011, 1,[[[[0.7508], [0.5076], [0.5982]]],[[[0.4733, 0.6969, 0.8686], [0.3116, 0.9245, 0.3968], [0.0017, 0.9159, 0.0846]]]],[0, 0, 0], 2, true, Sep16943), 
exec_layers([LLoc13193,LRes95011,LSep16943],["Loc13193","Res95011","Sep16943"],Sep16943,"Sep16943")

Actual (Unparsed): [[[0.0281075, 0.2221227, 0.0573235]]]

Expected (Unparsed): [[[0.028107533027448,0.2221226949880368,0.0573235454653344]]]

Actual:   [[[0.0282, 0.2222, 0.0574]]]

Expected: [[[0.0282, 0.2222, 0.0574]]]