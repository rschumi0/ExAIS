import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Con70596 = tf.keras.layers.Input(shape=([1, 2, 2]))
in0Mul63272 = tf.keras.layers.Input(shape=([2, 1]))
in1Mul63272 = tf.keras.layers.Input(shape=([2, 1]))
in0Con95817 = tf.keras.layers.Input(shape=([2, 3]))
in0Sub36195 = tf.keras.layers.Input(shape=([2, 2, 2]))
in1Sub36195 = tf.keras.layers.Input(shape=([2, 2, 2]))
in0Sep54402 = tf.keras.layers.Input(shape=([2, 2]))
in0Con64890 = tf.keras.layers.Input(shape=([7]))

Con70596 = keras.layers.Conv2DTranspose(4, (1, 2),strides=(1, 2), padding='valid', name = 'Con70596', )(in0Con70596)
Den14996 = keras.layers.Dense(1,name = 'Den14996', )(Con70596)
Res93567 = keras.layers.Reshape((1, 4), name = 'Res93567', )(Den14996)
Zer99617 = keras.layers.ZeroPadding1D(padding=((1, 0)), name = 'Zer99617', )(Res93567)
Mul63272 = keras.layers.Multiply(name = 'Mul63272', )([in0Mul63272,in1Mul63272])
Con95817 = keras.layers.Concatenate(axis=2, name = 'Con95817', )([Mul63272,in0Con95817])
Mul43292 = keras.layers.Multiply(name = 'Mul43292', )([Zer99617,Con95817])
Fla51823 = keras.layers.Flatten(name = 'Fla51823', )(Mul43292)
Sub36195 = keras.layers.Subtract(name = 'Sub36195', )([in0Sub36195,in1Sub36195])
Res11519 = keras.layers.Reshape((2, 4), name = 'Res11519', )(Sub36195)
Fla33160 = keras.layers.Flatten(name = 'Fla33160', )(Res11519)
Sep54402 = keras.layers.SeparableConv1D(2, (2),strides=(2), padding='same', name = 'Sep54402', )(in0Sep54402)
ReL19725 = keras.layers.ReLU(max_value=7.4451986325797845, negative_slope=9.258949090069478, threshold=9.881198007743262, name = 'ReL19725', )(Sep54402)
Res30343 = keras.layers.Reshape((1, 2, 1), name = 'Res30343', )(ReL19725)
Glo86249 = keras.layers.GlobalMaxPool2D(name = 'Glo86249', )(Res30343)
Con64890 = keras.layers.Concatenate(axis=1, name = 'Con64890', )([Glo86249,in0Con64890])
Max88034 = keras.layers.Maximum(name = 'Max88034', )([Fla33160,Con64890])
Ave22127 = keras.layers.Average(name = 'Ave22127', )([Fla51823,Max88034])
model = tf.keras.models.Model(inputs=[in0Con70596,in0Mul63272,in1Mul63272,in0Con95817,in0Sub36195,in1Sub36195,in0Sep54402,in0Con64890], outputs=Ave22127)
w = model.get_layer('Con70596').get_weights() 
w[0] = np.array([[[[0.3548, 0.3023], [0.5607, 0.0817], [0.6474, 0.1448], [0.3129, 0.6436]], [[0.585, 0.1407], [0.8272, 0.0805], [0.8834, 0.0275], [0.9194, 0.2929]]]])
w[1] = np.array([0, 0, 0, 0])
model.get_layer('Con70596').set_weights(w) 
w = model.get_layer('Den14996').get_weights() 
w[0] = np.array([[0.5825], [0.6845], [0.4176], [0.2376]])
w[1] = np.array([0.4452])
model.get_layer('Den14996').set_weights(w) 
w = model.get_layer('Sep54402').get_weights() 
w[0] = np.array([[[0.6063], [0.3124]], [[0.4658], [0.9822]]])
w[1] = np.array([[[0.0488, 0.9916], [0.698, 0.263]]])
w[2] = np.array([0, 0])
model.get_layer('Sep54402').set_weights(w) 
in0Con70596 = tf.constant([[[[0.176, 0.4372], [0.9439, 0.5414]]]])
in0Mul63272 = tf.constant([[[0.7412], [0.8867]]])
in1Mul63272 = tf.constant([[[0.461], [0.222]]])
in0Con95817 = tf.constant([[[0.3654, 0.8144, 0.6337], [0.1133, 0.7038, 0.5691]]])
in0Sub36195 = tf.constant([[[[0.7937, 0.3448], [0.0555, 0.1096]], [[0.005, 0.1551], [0.5462, 0.0067]]]])
in1Sub36195 = tf.constant([[[[0.164, 0.8459], [0.5665, 0.0862]], [[0.2904, 0.0392], [0.9914, 0.682]]]])
in0Sep54402 = tf.constant([[[0.1521, 0.6128], [0.9421, 0.1384]]])
in0Con64890 = tf.constant([[0.1108, 0.8856, 0.841, 0.4913, 0.36, 0.2862, 0.7227]])
print (np.array2string(model.predict([in0Con70596,in0Mul63272,in1Mul63272,in0Con95817,in0Sub36195,in1Sub36195,in0Sep54402,in0Con64890],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Ave22127.png')

LCon70596 = conv2D_transpose_layer([[[[0.176, 0.4372], [0.9439, 0.5414]]]], 1, 2,[[[[0.3548, 0.3023], [0.5607, 0.0817], [0.6474, 0.1448], [0.3129, 0.6436]], [[0.585, 0.1407], [0.8272, 0.0805], [0.8834, 0.0275], [0.9194, 0.2929]]]],[0, 0, 0, 0], 1, 2, false, Con70596), 
LDen14996 = dense_layer(Con70596, [[0.5825], [0.6845], [0.4176], [0.2376]],[0.4452], Den14996), 
LRes93567 = reshape_layer(Den14996, [1, 4], Res93567), 
LZer99617 = zero_padding1D_layer(Res93567, 1, 0, Zer99617), 
LMul63272 = multiply_layer([[[[0.7412], [0.8867]]], [[[0.461], [0.222]]]], Mul63272), 
LCon95817 = concatenate_layer([Mul63272,[[[0.3654, 0.8144, 0.6337], [0.1133, 0.7038, 0.5691]]]], 2, Con95817), 
LMul43292 = multiply_layer([Zer99617,Con95817], Mul43292), 
LFla51823 = flatten_layer(Mul43292, Fla51823), 
LSub36195 = subtract_layer([[[[0.7937, 0.3448], [0.0555, 0.1096]], [[0.005, 0.1551], [0.5462, 0.0067]]]], [[[[0.164, 0.8459], [0.5665, 0.0862]], [[0.2904, 0.0392], [0.9914, 0.682]]]], Sub36195), 
LRes11519 = reshape_layer(Sub36195, [2, 4], Res11519), 
LFla33160 = flatten_layer(Res11519, Fla33160), 
LSep54402 = separable_conv1D_layer([[[0.1521, 0.6128], [0.9421, 0.1384]]], 2,[[[[0.6063], [0.3124]], [[0.4658], [0.9822]]],[[[0.0488, 0.9916], [0.698, 0.263]]]],[0, 0], 2, true, Sep54402), 
LReL19725 = relu_layer(Sep54402, 7.4451986325797845, 9.258949090069478, 9.881198007743262, ReL19725), 
LRes30343 = reshape_layer(ReL19725, [1, 2, 1], Res30343), 
LGlo86249 = global_max_pool2D_layer(Res30343, Glo86249), 
LCon64890 = concatenate_layer([Glo86249,[[0.1108, 0.8856, 0.841, 0.4913, 0.36, 0.2862, 0.7227]]], 1, Con64890), 
LMax88034 = maximum_layer([Fla33160,Con64890], Max88034), 
LAve22127 = average_layer([Fla51823,Max88034], Ave22127), 
exec_layers([LCon70596,LDen14996,LRes93567,LZer99617,LMul63272,LCon95817,LMul43292,LFla51823,LSub36195,LRes11519,LFla33160,LSep54402,LReL19725,LRes30343,LGlo86249,LCon64890,LMax88034,LAve22127],["Con70596","Den14996","Res93567","Zer99617","Mul63272","Con95817","Mul43292","Fla51823","Sub36195","Res11519","Fla33160","Sep54402","ReL19725","Res30343","Glo86249","Con64890","Max88034","Ave22127"],Ave22127,"Ave22127")

Actual (Unparsed): [[0.3148500, 0.0554000, 0.4428000, 0.4205000, 0.3248338, 0.2255224, 0.6952475, 0.9229963]]

Expected (Unparsed): [[0.31484999999999996,0.0554,0.4428,0.4205,0.32483376049993806,0.22552241235162718,0.6952475183565446,0.922996270103329]]

Actual:   [[0.3149, 0.0554, 0.4428, 0.4205, 0.3249, 0.2256, 0.6953, 0.923]]

Expected: [[0.3149, 0.0554, 0.4428, 0.4205, 0.3249, 0.2256, 0.6953, 0.923]]