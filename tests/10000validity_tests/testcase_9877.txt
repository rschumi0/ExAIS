import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Min50768 = tf.keras.layers.Input(shape=([1, 1, 1, 1]))
in1Min50768 = tf.keras.layers.Input(shape=([1, 1, 1, 1]))
in0Con73117 = tf.keras.layers.Input(shape=([2, 1]))
in0Mul98725 = tf.keras.layers.Input(shape=([1, 1]))
in1Mul98725 = tf.keras.layers.Input(shape=([1, 1]))
in0Con77020 = tf.keras.layers.Input(shape=([2, 1]))
in0Con8647 = tf.keras.layers.Input(shape=([2, 1]))

Min50768 = keras.layers.Minimum(name = 'Min50768', )([in0Min50768,in1Min50768])
Res4598 = keras.layers.Reshape((1, 1, 1), name = 'Res4598', )(Min50768)
Res14646 = keras.layers.Reshape((1, 1), name = 'Res14646', )(Res4598)
Per19003 = keras.layers.Permute((1,2), name = 'Per19003',)(Res14646)
Zer2664 = keras.layers.ZeroPadding1D(padding=((1, 0)), name = 'Zer2664', )(Per19003)
Con73117 = keras.layers.Concatenate(axis=2, name = 'Con73117', )([Zer2664,in0Con73117])
Mul98725 = keras.layers.Multiply(name = 'Mul98725', )([in0Mul98725,in1Mul98725])
Zer12325 = keras.layers.ZeroPadding1D(padding=((1, 0)), name = 'Zer12325', )(Mul98725)
Con77020 = keras.layers.Concatenate(axis=2, name = 'Con77020', )([Zer12325,in0Con77020])
Con8647 = keras.layers.Conv1D(2, (2),strides=(1), padding='same', dilation_rate=(1), name = 'Con8647', )(in0Con8647)
Min38831 = keras.layers.Minimum(name = 'Min38831', )([Con77020,Con8647])
Add75893 = keras.layers.Add(name = 'Add75893', )([Con73117,Min38831])
model = tf.keras.models.Model(inputs=[in0Min50768,in1Min50768,in0Con73117,in0Mul98725,in1Mul98725,in0Con77020,in0Con8647], outputs=Add75893)
w = model.get_layer('Con8647').get_weights() 
w[0] = np.array([[[0.0261, 0.6876]], [[0.3676, 0.1774]]])
w[1] = np.array([0, 0])
model.get_layer('Con8647').set_weights(w) 
in0Min50768 = tf.constant([[[[[0.538]]]]])
in1Min50768 = tf.constant([[[[[0.2991]]]]])
in0Con73117 = tf.constant([[[0.6634], [0.7962]]])
in0Mul98725 = tf.constant([[[0.3301]]])
in1Mul98725 = tf.constant([[[0.9505]]])
in0Con77020 = tf.constant([[[0.295], [0.529]]])
in0Con8647 = tf.constant([[[0.3606], [0.8879]]])
print (np.array2string(model.predict([in0Min50768,in1Min50768,in0Con73117,in0Mul98725,in1Mul98725,in0Con77020,in0Con8647],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Add75893.png')

LMin50768 = minimum_layer([[[[[[0.538]]]]], [[[[[0.2991]]]]]], Min50768), 
LRes4598 = reshape_layer(Min50768, [1, 1, 1], Res4598), 
LRes14646 = reshape_layer(Res4598, [1, 1], Res14646), 
LPer19003 = permute_layer(Res14646, 1,2, Per19003), 
LZer2664 = zero_padding1D_layer(Per19003, 1, 0, Zer2664), 
LCon73117 = concatenate_layer([Zer2664,[[[0.6634], [0.7962]]]], 2, Con73117), 
LMul98725 = multiply_layer([[[[0.3301]]], [[[0.9505]]]], Mul98725), 
LZer12325 = zero_padding1D_layer(Mul98725, 1, 0, Zer12325), 
LCon77020 = concatenate_layer([Zer12325,[[[0.295], [0.529]]]], 2, Con77020), 
LCon8647 = conv1D_layer([[[0.3606], [0.8879]]], 2,[[[0.0261, 0.6876]], [[0.3676, 0.1774]]],[0, 0], 1, true, 1, Con8647), 
LMin38831 = minimum_layer([Con77020,Con8647], Min38831), 
LAdd75893 = add_layer([Con73117,Min38831], Add75893), 
exec_layers([LMin50768,LRes4598,LRes14646,LPer19003,LZer2664,LCon73117,LMul98725,LZer12325,LCon77020,LCon8647,LMin38831,LAdd75893],["Min50768","Res4598","Res14646","Per19003","Zer2664","Con73117","Mul98725","Zer12325","Con77020","Con8647","Min38831","Add75893"],Add75893,"Add75893")

Actual (Unparsed): [[[0.0000000, 0.9584000], [0.3222742, 1.3252000]]]

Expected (Unparsed): [[[0,0.9583999999999999],[0.32227418999999996,1.3252000000000002]]]

Actual:   [[[0, 0.9584], [0.3223, 1.3252]]]

Expected: [[[0, 0.9584], [0.3223, 1.3253]]]