import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Mul21732 = tf.keras.layers.Input(shape=([1, 2, 1]))
in1Mul21732 = tf.keras.layers.Input(shape=([1, 2, 1]))
in0Sub25604 = tf.keras.layers.Input(shape=([3, 3, 3]))
in1Sub25604 = tf.keras.layers.Input(shape=([3, 3, 3]))
in0Ave59594 = tf.keras.layers.Input(shape=([1, 2, 2, 1]))
in1Ave59594 = tf.keras.layers.Input(shape=([1, 2, 2, 1]))

Mul21732 = keras.layers.Multiply(name = 'Mul21732', )([in0Mul21732,in1Mul21732])
Lea54729 = keras.layers.LeakyReLU(alpha=6.0808472733157615, name = 'Lea54729', )(Mul21732)
Res29735 = keras.layers.Reshape((1, 2, 1, 1), name = 'Res29735', )(Lea54729)
Zer8179 = keras.layers.ZeroPadding3D(padding=((2, 0), (4, 0), (2, 0)), name = 'Zer8179', )(Res29735)
Sub25604 = keras.layers.Subtract(name = 'Sub25604', )([in0Sub25604,in1Sub25604])
Sep41570 = keras.layers.SeparableConv2D(2, (3, 3),strides=(3, 3), padding='same', name = 'Sep41570', )(Sub25604)
Zer41117 = keras.layers.ZeroPadding2D(padding=((1, 1), (1, 1)), name = 'Zer41117', )(Sep41570)
Res2375 = keras.layers.Reshape((3, 6), name = 'Res2375', )(Zer41117)
Per45527 = keras.layers.Permute((1,2), name = 'Per45527',)(Res2375)
Res60530 = keras.layers.Reshape((3, 6, 1), name = 'Res60530', )(Per45527)
Res21295 = keras.layers.Reshape((3, 6, 1, 1), name = 'Res21295', )(Res60530)
Zer49565 = keras.layers.ZeroPadding3D(padding=((0, 0), (0, 0), (2, 0)), name = 'Zer49565', )(Res21295)
Ave59594 = keras.layers.Average(name = 'Ave59594', )([in0Ave59594,in1Ave59594])
Zer43996 = keras.layers.ZeroPadding3D(padding=((2, 0), (4, 0), (1, 0)), name = 'Zer43996', )(Ave59594)
Max7133 = keras.layers.Maximum(name = 'Max7133', )([Zer49565,Zer43996])
Min58924 = keras.layers.Minimum(name = 'Min58924', )([Zer8179,Max7133])
model = tf.keras.models.Model(inputs=[in0Mul21732,in1Mul21732,in0Sub25604,in1Sub25604,in0Ave59594,in1Ave59594], outputs=Min58924)
w = model.get_layer('Sep41570').get_weights() 
w[0] = np.array([[[[0.5121], [0.5438], [0.5674]], [[0.18], [0.9541], [0.502]], [[0.9259], [0.0221], [0.8149]]], [[[0.044], [0.1106], [0.9469]], [[0.1584], [0.0684], [0.2312]], [[0.7538], [0.1969], [0.4082]]], [[[0.7936], [0.5906], [0.9305]], [[0.3197], [0.4783], [0.6598]], [[0.6575], [0.2255], [0.5504]]]])
w[1] = np.array([[[[0.9879, 0.8096], [0.9648, 0.7769], [0.4184, 0.3983]]]])
w[2] = np.array([0, 0])
model.get_layer('Sep41570').set_weights(w) 
in0Mul21732 = tf.constant([[[[0.6], [0.7507]]]])
in1Mul21732 = tf.constant([[[[0.2946], [0.4598]]]])
in0Sub25604 = tf.constant([[[[0.1673, 0.0939, 0.8932], [0.4322, 0.6891, 0.0668], [0.2165, 0.1679, 0.3095]], [[0.6812, 0.0386, 0.4382], [0.2446, 0.9671, 0.4266], [0.5866, 0.9218, 0.9194]], [[0.6406, 0.9774, 0.1757], [0.7511, 0.1305, 0.0022], [0.7596, 0.0632, 0.999]]]])
in1Sub25604 = tf.constant([[[[0.6292, 0.2177, 0.1741], [0.3442, 0.0063, 0.7236], [0.5189, 0.2256, 0.6813]], [[0.8368, 0.7219, 0.6092], [0.594, 0.2548, 0.6758], [0.5359, 0.1087, 0.5457]], [[0.7184, 0.9328, 0.0085], [0.5333, 0.7893, 0.9402], [0.5511, 0.4791, 0.2674]]]])
in0Ave59594 = tf.constant([[[[[0.3624], [0.399]], [[0.4536], [0.0463]]]]])
in1Ave59594 = tf.constant([[[[[0.867], [0.4802]], [[0.3245], [0.285]]]]])
print (np.array2string(model.predict([in0Mul21732,in1Mul21732,in0Sub25604,in1Sub25604,in0Ave59594,in1Ave59594],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Min58924.png')

LMul21732 = multiply_layer([[[[[0.6], [0.7507]]]], [[[[0.2946], [0.4598]]]]], Mul21732), 
LLea54729 = leaky_relu_layer(Mul21732, 6.0808472733157615, Lea54729), 
LRes29735 = reshape_layer(Lea54729, [1, 2, 1, 1], Res29735), 
LZer8179 = zero_padding3D_layer(Res29735, 2, 0, 4, 0, 2, 0, Zer8179), 
LSub25604 = subtract_layer([[[[0.1673, 0.0939, 0.8932], [0.4322, 0.6891, 0.0668], [0.2165, 0.1679, 0.3095]], [[0.6812, 0.0386, 0.4382], [0.2446, 0.9671, 0.4266], [0.5866, 0.9218, 0.9194]], [[0.6406, 0.9774, 0.1757], [0.7511, 0.1305, 0.0022], [0.7596, 0.0632, 0.999]]]], [[[[0.6292, 0.2177, 0.1741], [0.3442, 0.0063, 0.7236], [0.5189, 0.2256, 0.6813]], [[0.8368, 0.7219, 0.6092], [0.594, 0.2548, 0.6758], [0.5359, 0.1087, 0.5457]], [[0.7184, 0.9328, 0.0085], [0.5333, 0.7893, 0.9402], [0.5511, 0.4791, 0.2674]]]], Sub25604), 
LSep41570 = separable_conv2D_layer(Sub25604, 3, 3,[[[[[0.5121], [0.5438], [0.5674]], [[0.18], [0.9541], [0.502]], [[0.9259], [0.0221], [0.8149]]], [[[0.044], [0.1106], [0.9469]], [[0.1584], [0.0684], [0.2312]], [[0.7538], [0.1969], [0.4082]]], [[[0.7936], [0.5906], [0.9305]], [[0.3197], [0.4783], [0.6598]], [[0.6575], [0.2255], [0.5504]]]],[[[[0.9879, 0.8096], [0.9648, 0.7769], [0.4184, 0.3983]]]]],[0, 0], 3, 3, true, Sep41570), 
LZer41117 = zero_padding2D_layer(Sep41570, 1, 1, 1, 1, Zer41117), 
LRes2375 = reshape_layer(Zer41117, [3, 6], Res2375), 
LPer45527 = permute_layer(Res2375, 1,2, Per45527), 
LRes60530 = reshape_layer(Per45527, [3, 6, 1], Res60530), 
LRes21295 = reshape_layer(Res60530, [3, 6, 1, 1], Res21295), 
LZer49565 = zero_padding3D_layer(Res21295, 0, 0, 0, 0, 2, 0, Zer49565), 
LAve59594 = average_layer([[[[[[0.3624], [0.399]], [[0.4536], [0.0463]]]]], [[[[[0.867], [0.4802]], [[0.3245], [0.285]]]]]], Ave59594), 
LZer43996 = zero_padding3D_layer(Ave59594, 2, 0, 4, 0, 1, 0, Zer43996), 
LMax7133 = maximum_layer([Zer49565,Zer43996], Max7133), 
LMin58924 = minimum_layer([Zer8179,Max7133], Min58924), 
exec_layers([LMul21732,LLea54729,LRes29735,LZer8179,LSub25604,LSep41570,LZer41117,LRes2375,LPer45527,LRes60530,LRes21295,LZer49565,LAve59594,LZer43996,LMax7133,LMin58924],["Mul21732","Lea54729","Res29735","Zer8179","Sub25604","Sep41570","Zer41117","Res2375","Per45527","Res60530","Res21295","Zer49565","Ave59594","Zer43996","Max7133","Min58924"],Min58924,"Min58924")

Actual (Unparsed): [[[[[0.0000000], [0.0000000], [0.0000000]], [[0.0000000], [0.0000000], [0.0000000]], [[0.0000000], [0.0000000], [0.0000000]], [[0.0000000], [0.0000000], [0.0000000]], [[0.0000000], [0.0000000], [0.0000000]], [[0.0000000], [0.0000000], [0.0000000]]], [[[0.0000000], [0.0000000], [0.0000000]], [[0.0000000], [0.0000000], [0.0000000]], [[0.0000000], [0.0000000], [0.0000000]], [[0.0000000], [0.0000000], [0.0000000]], [[0.0000000], [0.0000000], [0.0000000]], [[0.0000000], [0.0000000], [0.0000000]]], [[[0.0000000], [0.0000000], [0.0000000]], [[0.0000000], [0.0000000], [0.0000000]], [[0.0000000], [0.0000000], [0.0000000]], [[0.0000000], [0.0000000], [0.0000000]], [[0.0000000], [0.0000000], [0.1767600]], [[0.0000000], [0.0000000], [0.1656500]]]]]

Expected (Unparsed): [[[[[0],[0],[0]],[[0],[0],[0]],[[0],[0],[0]],[[0],[0],[0]],[[0],[0],[0]],[[0],[0],[0]]],[[[0],[0],[0]],[[0],[0],[0]],[[0],[0],[0]],[[0],[0],[0]],[[0],[0],[0]],[[0],[0],[0]]],[[[0],[0],[0]],[[0],[0],[0]],[[0],[0],[0]],[[0],[0],[0]],[[0],[0],[0.17675999999999997]],[[0],[0],[0.16565]]]]]

Actual:   [[[[[0], [0], [0]], [[0], [0], [0]], [[0], [0], [0]], [[0], [0], [0]], [[0], [0], [0]], [[0], [0], [0]]], [[[0], [0], [0]], [[0], [0], [0]], [[0], [0], [0]], [[0], [0], [0]], [[0], [0], [0]], [[0], [0], [0]]], [[[0], [0], [0]], [[0], [0], [0]], [[0], [0], [0]], [[0], [0], [0]], [[0], [0], [0.1768]], [[0], [0], [0.1657]]]]]

Expected: [[[[[0], [0], [0]], [[0], [0], [0]], [[0], [0], [0]], [[0], [0], [0]], [[0], [0], [0]], [[0], [0], [0]]], [[[0], [0], [0]], [[0], [0], [0]], [[0], [0], [0]], [[0], [0], [0]], [[0], [0], [0]], [[0], [0], [0]]], [[[0], [0], [0]], [[0], [0], [0]], [[0], [0], [0]], [[0], [0], [0]], [[0], [0], [0.1768]], [[0], [0], [0.1657]]]]]