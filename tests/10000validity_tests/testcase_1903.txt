import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Mul36069 = tf.keras.layers.Input(shape=([1, 1]))
in1Mul36069 = tf.keras.layers.Input(shape=([1, 1]))
in0Dot30049 = tf.keras.layers.Input(shape=([2]))
in1Dot30049 = tf.keras.layers.Input(shape=([2]))
in0Con29637 = tf.keras.layers.Input(shape=([95]))

Mul36069 = keras.layers.Multiply(name = 'Mul36069', )([in0Mul36069,in1Mul36069])
Res84310 = keras.layers.Reshape((1, 1, 1), name = 'Res84310', )(Mul36069)
Con55778 = keras.layers.Conv2DTranspose(2, (1, 1),strides=(1, 12), padding='same', name = 'Con55778', )(Res84310)
Res42079 = keras.layers.Reshape((1, 12, 2, 1), name = 'Res42079', )(Con55778)
Up_84927 = keras.layers.UpSampling3D(size=(2, 1, 2), name = 'Up_84927', )(Res42079)
Res12915 = keras.layers.Reshape((2, 12, 4), name = 'Res12915', )(Up_84927)
Res39886 = keras.layers.Reshape((2, 48), name = 'Res39886', )(Res12915)
Fla70828 = keras.layers.Flatten(name = 'Fla70828', )(Res39886)
Dot30049 = keras.layers.Dot(axes=(1, 1), name = 'Dot30049', )([in0Dot30049,in1Dot30049])
Con29637 = keras.layers.Concatenate(axis=1, name = 'Con29637', )([Dot30049,in0Con29637])
Add12023 = keras.layers.Add(name = 'Add12023', )([Fla70828,Con29637])
model = tf.keras.models.Model(inputs=[in0Mul36069,in1Mul36069,in0Dot30049,in1Dot30049,in0Con29637], outputs=Add12023)
w = model.get_layer('Con55778').get_weights() 
w[0] = np.array([[[[0.0628], [0.7049]]]])
w[1] = np.array([0, 0])
model.get_layer('Con55778').set_weights(w) 
in0Mul36069 = tf.constant([[[0.5335]]])
in1Mul36069 = tf.constant([[[0.2578]]])
in0Dot30049 = tf.constant([[0.1565, 0.0776]])
in1Dot30049 = tf.constant([[0.5038, 0.1014]])
in0Con29637 = tf.constant([[0.0901, 0.3056, 0.4804, 0.7644, 0.5384, 0.5267, 0.3685, 0.4512, 0.3139, 0.6633, 0.1176, 0.1792, 0.2365, 0.4072, 0.2328, 0.4932, 0.8982, 0.9544, 0.6553, 0.1103, 0.6452, 0.3766, 0.3288, 0.8484, 0.9968, 0.7107, 0.1597, 0.7054, 0.7475, 0.1462, 0.5392, 0.1576, 0.4107, 0.9484, 0.267, 0.8929, 0.8487, 0.0464, 0.6718, 0.8768, 0.9024, 0.5338, 0.9589, 0.8614, 0.5885, 0.6867, 0.3309, 0.1881, 0.9607, 0.4822, 0.2267, 0.013, 0.046, 0.02, 0.1017, 0.8861, 0.364, 0.6939, 0.5343, 0.9551, 0.4093, 0.4383, 0.0823, 0.9305, 0.138, 0.8814, 0.2404, 0.3493, 0.9344, 0.7819, 0.0482, 0.6066, 0.7575, 0.6909, 0.3897, 0.6817, 0.1639, 0.388, 0.7855, 0.4855, 0.6889, 0.2732, 0.5335, 0.2729, 0.63, 0.5589, 0.3765, 0.6252, 0.6211, 0.8071, 0.4901, 0.0927, 0.5131, 0.0791, 0.4743]])
print (np.array2string(model.predict([in0Mul36069,in1Mul36069,in0Dot30049,in1Dot30049,in0Con29637],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Add12023.png')

LMul36069 = multiply_layer([[[[0.5335]]], [[[0.2578]]]], Mul36069), 
LRes84310 = reshape_layer(Mul36069, [1, 1, 1], Res84310), 
LCon55778 = conv2D_transpose_layer(Res84310, 1, 1,[[[[0.0628], [0.7049]]]],[0, 0], 1, 12, true, Con55778), 
LRes42079 = reshape_layer(Con55778, [1, 12, 2, 1], Res42079), 
LUp_84927 = up_sampling3D_layer(Res42079, 2, 1, 2, Up_84927), 
LRes12915 = reshape_layer(Up_84927, [2, 12, 4], Res12915), 
LRes39886 = reshape_layer(Res12915, [2, 48], Res39886), 
LFla70828 = flatten_layer(Res39886, Fla70828), 
LDot30049 = dot_layer([[0.1565, 0.0776]], [[0.5038, 0.1014]], 1, 1, Dot30049), 
LCon29637 = concatenate_layer([Dot30049,[[0.0901, 0.3056, 0.4804, 0.7644, 0.5384, 0.5267, 0.3685, 0.4512, 0.3139, 0.6633, 0.1176, 0.1792, 0.2365, 0.4072, 0.2328, 0.4932, 0.8982, 0.9544, 0.6553, 0.1103, 0.6452, 0.3766, 0.3288, 0.8484, 0.9968, 0.7107, 0.1597, 0.7054, 0.7475, 0.1462, 0.5392, 0.1576, 0.4107, 0.9484, 0.267, 0.8929, 0.8487, 0.0464, 0.6718, 0.8768, 0.9024, 0.5338, 0.9589, 0.8614, 0.5885, 0.6867, 0.3309, 0.1881, 0.9607, 0.4822, 0.2267, 0.013, 0.046, 0.02, 0.1017, 0.8861, 0.364, 0.6939, 0.5343, 0.9551, 0.4093, 0.4383, 0.0823, 0.9305, 0.138, 0.8814, 0.2404, 0.3493, 0.9344, 0.7819, 0.0482, 0.6066, 0.7575, 0.6909, 0.3897, 0.6817, 0.1639, 0.388, 0.7855, 0.4855, 0.6889, 0.2732, 0.5335, 0.2729, 0.63, 0.5589, 0.3765, 0.6252, 0.6211, 0.8071, 0.4901, 0.0927, 0.5131, 0.0791, 0.4743]]], 1, Con29637), 
LAdd12023 = add_layer([Fla70828,Con29637], Add12023), 
exec_layers([LMul36069,LRes84310,LCon55778,LRes42079,LUp_84927,LRes12915,LRes39886,LFla70828,LDot30049,LCon29637,LAdd12023],["Mul36069","Res84310","Con55778","Res42079","Up_84927","Res12915","Res39886","Fla70828","Dot30049","Con29637","Add12023"],Add12023,"Add12023")

Actual (Unparsed): [[0.0953506, 0.0987373, 0.4025493, 0.5773493, 0.7644000, 0.5384000, 0.5267000, 0.3685000, 0.4512000, 0.3139000, 0.6633000, 0.1176000, 0.1792000, 0.2365000, 0.4072000, 0.2328000, 0.4932000, 0.8982000, 0.9544000, 0.6553000, 0.1103000, 0.6452000, 0.3766000, 0.3288000, 0.8484000, 0.9968000, 0.7107000, 0.1597000, 0.7054000, 0.7475000, 0.1462000, 0.5392000, 0.1576000, 0.4107000, 0.9484000, 0.2670000, 0.8929000, 0.8487000, 0.0464000, 0.6718000, 0.8768000, 0.9024000, 0.5338000, 0.9589000, 0.8614000, 0.5885000, 0.6867000, 0.3309000, 0.1967373, 0.9693373, 0.5791493, 0.3236493, 0.0130000, 0.0460000, 0.0200000, 0.1017000, 0.8861000, 0.3640000, 0.6939000, 0.5343000, 0.9551000, 0.4093000, 0.4383000, 0.0823000, 0.9305000, 0.1380000, 0.8814000, 0.2404000, 0.3493000, 0.9344000, 0.7819000, 0.0482000, 0.6066000, 0.7575000, 0.6909000, 0.3897000, 0.6817000, 0.1639000, 0.3880000, 0.7855000, 0.4855000, 0.6889000, 0.2732000, 0.5335000, 0.2729000, 0.6300000, 0.5589000, 0.3765000, 0.6252000, 0.6211000, 0.8071000, 0.4901000, 0.0927000, 0.5131000, 0.0791000, 0.4743000]]

Expected (Unparsed): [[0.09535061964,0.09873727964,0.40254933786999997,0.57734933787,0.7644,0.5384,0.5267,0.3685,0.4512,0.3139,0.6633,0.1176,0.1792,0.2365,0.4072,0.2328,0.4932,0.8982,0.9544,0.6553,0.1103,0.6452,0.3766,0.3288,0.8484,0.9968,0.7107,0.1597,0.7054,0.7475,0.1462,0.5392,0.1576,0.4107,0.9484,0.267,0.8929,0.8487,0.0464,0.6718,0.8768,0.9024,0.5338,0.9589,0.8614,0.5885,0.6867,0.3309,0.19673727963999998,0.96933727964,0.57914933787,0.32364933787,0.013,0.046,0.02,0.1017,0.8861,0.364,0.6939,0.5343,0.9551,0.4093,0.4383,0.0823,0.9305,0.138,0.8814,0.2404,0.3493,0.9344,0.7819,0.0482,0.6066,0.7575,0.6909,0.3897,0.6817,0.1639,0.388,0.7855,0.4855,0.6889,0.2732,0.5335,0.2729,0.63,0.5589,0.3765,0.6252,0.6211,0.8071,0.4901,0.0927,0.5131,0.0791,0.4743]]

Actual:   [[0.0954, 0.0988, 0.4026, 0.5774, 0.7644, 0.5384, 0.5267, 0.3685, 0.4512, 0.3139, 0.6633, 0.1176, 0.1792, 0.2365, 0.4072, 0.2328, 0.4932, 0.8982, 0.9544, 0.6553, 0.1103, 0.6452, 0.3766, 0.3288, 0.8484, 0.9968, 0.7107, 0.1597, 0.7054, 0.7475, 0.1462, 0.5392, 0.1576, 0.4107, 0.9484, 0.267, 0.8929, 0.8487, 0.0464, 0.6718, 0.8768, 0.9024, 0.5338, 0.9589, 0.8614, 0.5885, 0.6867, 0.3309, 0.1968, 0.9694, 0.5792, 0.3237, 0.013, 0.046, 0.02, 0.1017, 0.8861, 0.364, 0.6939, 0.5343, 0.9551, 0.4093, 0.4383, 0.0823, 0.9305, 0.138, 0.8814, 0.2404, 0.3493, 0.9344, 0.7819, 0.0482, 0.6066, 0.7575, 0.6909, 0.3897, 0.6817, 0.1639, 0.388, 0.7855, 0.4855, 0.6889, 0.2732, 0.5335, 0.2729, 0.63, 0.5589, 0.3765, 0.6252, 0.6211, 0.8071, 0.4901, 0.0927, 0.5131, 0.0791, 0.4743]]

Expected: [[0.0954, 0.0988, 0.4026, 0.5774, 0.7644, 0.5384, 0.5267, 0.3685, 0.4512, 0.3139, 0.6633, 0.1176, 0.1792, 0.2365, 0.4072, 0.2328, 0.4932, 0.8982, 0.9544, 0.6553, 0.1103, 0.6452, 0.3766, 0.3288, 0.8484, 0.9968, 0.7107, 0.1597, 0.7054, 0.7475, 0.1462, 0.5392, 0.1576, 0.4107, 0.9484, 0.267, 0.8929, 0.8487, 0.0464, 0.6718, 0.8768, 0.9024, 0.5338, 0.9589, 0.8614, 0.5885, 0.6867, 0.3309, 0.1968, 0.9694, 0.5792, 0.3237, 0.013, 0.046, 0.02, 0.1017, 0.8861, 0.364, 0.6939, 0.5343, 0.9551, 0.4093, 0.4383, 0.0823, 0.9305, 0.138, 0.8814, 0.2404, 0.3493, 0.9344, 0.7819, 0.0482, 0.6066, 0.7575, 0.6909, 0.3897, 0.6817, 0.1639, 0.388, 0.7855, 0.4855, 0.6889, 0.2732, 0.5335, 0.2729, 0.63, 0.5589, 0.3765, 0.6252, 0.6211, 0.8071, 0.4901, 0.0927, 0.5131, 0.0791, 0.4743]]