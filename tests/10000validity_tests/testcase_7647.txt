import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Loc87313 = tf.keras.layers.Input(shape=([2, 1, 1]))

Loc87313 = keras.layers.LocallyConnected2D(3, (2, 1),strides=(1, 1), name = 'Loc87313', )(in0Loc87313)
Res2928 = keras.layers.Reshape((1, 3), name = 'Res2928', )(Loc87313)
Up_82031 = keras.layers.UpSampling1D(size=(1), name = 'Up_82031', )(Res2928)
ReL36490 = keras.layers.ReLU(max_value=4.030184069381978, negative_slope=1.251980811977172, threshold=0.444828791970443, name = 'ReL36490', )(Up_82031)
model = tf.keras.models.Model(inputs=[in0Loc87313], outputs=ReL36490)
w = model.get_layer('Loc87313').get_weights() 
w[0] = np.array([[[0.0249, 0.178, 0.8978], [0.0028, 0.9481, 0.2097]]])
w[1] = np.array([[[0, 0, 0]]])
model.get_layer('Loc87313').set_weights(w) 
in0Loc87313 = tf.constant([[[[0.3986]], [[0.1779]]]])
print (np.array2string(model.predict([in0Loc87313],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='ReL36490.png')

LLoc87313 = locally_connected2D_layer([[[[0.3986]], [[0.1779]]]], 2, 1,[[[0.0249, 0.178, 0.8978], [0.0028, 0.9481, 0.2097]]],[[[0, 0, 0]]], 1, 1, Loc87313), 
LRes2928 = reshape_layer(Loc87313, [1, 3], Res2928), 
LUp_82031 = up_sampling1D_layer(Res2928, 1, Up_82031), 
LReL36490 = relu_layer(Up_82031, 4.030184069381978, 1.251980811977172, 0.444828791970443, ReL36490), 
exec_layers([LLoc87313,LRes2928,LUp_82031,LReL36490],["Loc87313","Res2928","Up_82031","ReL36490"],ReL36490,"ReL36490")

Actual (Unparsed): [[[-0.5438674, -0.2569202, -0.0621735]]]

Expected (Unparsed): [[[-0.5438673906437307,-0.2569202368736043,-0.0621734697482082]]]

Actual:   [[[-0.5438, -0.2569, -0.0621]]]

Expected: [[[-0.5438, -0.2569, -0.0621]]]