import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Dot95704 = tf.keras.layers.Input(shape=([2]))
in1Dot95704 = tf.keras.layers.Input(shape=([2]))

Dot95704 = keras.layers.Dot(axes=(1, 1), name = 'Dot95704', )([in0Dot95704,in1Dot95704])
Fla64792 = keras.layers.Flatten(name = 'Fla64792', )(Dot95704)
model = tf.keras.models.Model(inputs=[in0Dot95704,in1Dot95704], outputs=Fla64792)
in0Dot95704 = tf.constant([[0.1195, 0.8881]])
in1Dot95704 = tf.constant([[0.4684, 0.0272]])
print (np.array2string(model.predict([in0Dot95704,in1Dot95704],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Fla64792.png')

LDot95704 = dot_layer([[0.1195, 0.8881]], [[0.4684, 0.0272]], 1, 1, Dot95704), 
LFla64792 = flatten_layer(Dot95704, Fla64792), 
exec_layers([LDot95704,LFla64792],["Dot95704","Fla64792"],Fla64792,"Fla64792")

Actual (Unparsed): [[0.0801301]]

Expected (Unparsed): [[0.08013012]]

Actual:   [[0.0802]]

Expected: [[0.0802]]