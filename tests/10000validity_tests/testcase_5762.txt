import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Add85562 = tf.keras.layers.Input(shape=([2, 1, 1, 2]))
in1Add85562 = tf.keras.layers.Input(shape=([2, 1, 1, 2]))
in0Con80874 = tf.keras.layers.Input(shape=([1]))
in0Loc14456 = tf.keras.layers.Input(shape=([1, 2]))
in0Cro31409 = tf.keras.layers.Input(shape=([1, 4, 2]))
in0Con86232 = tf.keras.layers.Input(shape=([2]))

Add85562 = keras.layers.Add(name = 'Add85562', )([in0Add85562,in1Add85562])
Res32812 = keras.layers.Reshape((2, 1, 2), name = 'Res32812', )(Add85562)
Glo38918 = keras.layers.GlobalMaxPool2D(name = 'Glo38918', )(Res32812)
Con80874 = keras.layers.Concatenate(axis=1, name = 'Con80874', )([Glo38918,in0Con80874])
Loc14456 = keras.layers.LocallyConnected1D(3, (1),strides=(12), name = 'Loc14456', )(in0Loc14456)
Fla8283 = keras.layers.Flatten(name = 'Fla8283', )(Loc14456)
Cro31409 = keras.layers.Cropping2D(cropping=((0, 0), (2, 0)), name = 'Cro31409', )(in0Cro31409)
Res64255 = keras.layers.Reshape((1, 4), name = 'Res64255', )(Cro31409)
Sim81896 = keras.layers.SimpleRNN(1,name = 'Sim81896', )(Res64255)
Con86232 = keras.layers.Concatenate(axis=1, name = 'Con86232', )([Sim81896,in0Con86232])
Min78121 = keras.layers.Minimum(name = 'Min78121', )([Fla8283,Con86232])
Add95345 = keras.layers.Add(name = 'Add95345', )([Con80874,Min78121])
Mas37002 = keras.layers.Masking(mask_value=2, name = 'Mas37002', )(Add95345)
model = tf.keras.models.Model(inputs=[in0Add85562,in1Add85562,in0Con80874,in0Loc14456,in0Cro31409,in0Con86232], outputs=Mas37002)
w = model.get_layer('Loc14456').get_weights() 
w[0] = np.array([[[0.7235, 0.8912, 0.9857], [0.5257, 0.3119, 0.2341]]])
w[1] = np.array([[0, 0, 0]])
model.get_layer('Loc14456').set_weights(w) 
w = model.get_layer('Sim81896').get_weights() 
w[0] = np.array([[2], [4], [3], [1]])
w[1] = np.array([[3]])
w[2] = np.array([7])
model.get_layer('Sim81896').set_weights(w) 
in0Add85562 = tf.constant([[[[[0.2908, 0.355]]], [[[0.9065, 0.9522]]]]])
in1Add85562 = tf.constant([[[[[0.9059, 0.8634]]], [[[0.1214, 0.1813]]]]])
in0Con80874 = tf.constant([[0.3245]])
in0Loc14456 = tf.constant([[[0.3141, 0.1053]]])
in0Cro31409 = tf.constant([[[[1.5808, 1.9859], [1.9313, 1.4549], [1.4448, 1.7882], [1.4153, 1.4974]]]])
in0Con86232 = tf.constant([[0.4062, 0.7581]])
print (np.array2string(model.predict([in0Add85562,in1Add85562,in0Con80874,in0Loc14456,in0Cro31409,in0Con86232],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Mas37002.png')

LAdd85562 = add_layer([[[[[[0.2908, 0.355]]], [[[0.9065, 0.9522]]]]], [[[[[0.9059, 0.8634]]], [[[0.1214, 0.1813]]]]]], Add85562), 
LRes32812 = reshape_layer(Add85562, [2, 1, 2], Res32812), 
LGlo38918 = global_max_pool2D_layer(Res32812, Glo38918), 
LCon80874 = concatenate_layer([Glo38918,[[0.3245]]], 1, Con80874), 
LLoc14456 = locally_connected1D_layer([[[0.3141, 0.1053]]], 1,[[[0.7235, 0.8912, 0.9857], [0.5257, 0.3119, 0.2341]]],[[0, 0, 0]], 12, Loc14456), 
LFla8283 = flatten_layer(Loc14456, Fla8283), 
LCro31409 = cropping2D_layer([[[[1.5808, 1.9859], [1.9313, 1.4549], [1.4448, 1.7882], [1.4153, 1.4974]]]], 0, 0, 2, 0, Cro31409), 
LRes64255 = reshape_layer(Cro31409, [1, 4], Res64255), 
LSim81896 = simple_rnn_layer(Res64255,[[2], [4], [3], [1]],[[3]],[7], Sim81896), 
LCon86232 = concatenate_layer([Sim81896,[[0.4062, 0.7581]]], 1, Con86232), 
LMin78121 = minimum_layer([Fla8283,Con86232], Min78121), 
LAdd95345 = add_layer([Con80874,Min78121], Add95345), 
LMas37002 = masking_layer(Add95345, 2, Mas37002), 
exec_layers([LAdd85562,LRes32812,LGlo38918,LCon80874,LLoc14456,LFla8283,LCro31409,LRes64255,LSim81896,LCon86232,LMin78121,LAdd95345,LMas37002],["Add85562","Res32812","Glo38918","Con80874","Loc14456","Fla8283","Cro31409","Res64255","Sim81896","Con86232","Min78121","Add95345","Mas37002"],Mas37002,"Mas37002")

Actual (Unparsed): [[1.4793076, 1.5311690, 0.6587591]]

Expected (Unparsed): [[1.47930756,1.5311689899999998,0.6587591]]

Actual:   [[1.4794, 1.5312, 0.6588]]

Expected: [[1.4794, 1.5312, 0.6588]]