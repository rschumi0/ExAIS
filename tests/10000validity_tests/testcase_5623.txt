import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Con69747 = tf.keras.layers.Input(shape=([1, 1]))

Con69747 = keras.layers.Conv1D(3, (1),strides=(1), padding='valid', dilation_rate=(1), name = 'Con69747', )(in0Con69747)
Bat89167 = keras.layers.BatchNormalization(axis=2, epsilon=0.5697244062697903,  name = 'Bat89167', )(Con69747)
model = tf.keras.models.Model(inputs=[in0Con69747], outputs=Bat89167)
w = model.get_layer('Con69747').get_weights() 
w[0] = np.array([[[0.4902, 0.7066, 0.068]]])
w[1] = np.array([0, 0, 0])
model.get_layer('Con69747').set_weights(w) 
w = model.get_layer('Bat89167').get_weights() 
w[0] = np.array([0.5947, 0.9615, 0.277])
w[1] = np.array([0.3539, 0.8394, 0.8695])
w[2] = np.array([0.5889, 0.0868, 0.9276])
w[3] = np.array([0.7947, 0.502, 0.444])
model.get_layer('Bat89167').set_weights(w) 
in0Con69747 = tf.constant([[[0.519]]])
print (np.array2string(model.predict([in0Con69747],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Bat89167.png')

LCon69747 = conv1D_layer([[[0.519]]], 1,[[[0.4902, 0.7066, 0.068]]],[0, 0, 0], 1, false, 1, Con69747), 
LBat89167 = batch_normalization_layer(Con69747, 2, 0.5697244062697903, [0.5947, 0.9615, 0.277], [0.3539, 0.8394, 0.8695], [0.5889, 0.0868, 0.9276], [0.7947, 0.502, 0.444], Bat89167), 
exec_layers([LCon69747,LBat89167],["Con69747","Bat89167"],Bat89167,"Bat89167")

Actual (Unparsed): [[[0.1836052, 1.0993860, 0.6240095]]]

Expected (Unparsed): [[[0.18360519347212256,1.0993860438823928,0.6240095486199069]]]

Actual:   [[[0.1837, 1.0994, 0.6241]]]

Expected: [[[0.1837, 1.0994, 0.6241]]]