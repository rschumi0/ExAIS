import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Ave65215 = tf.keras.layers.Input(shape=([1, 1, 1, 1]))
in1Ave65215 = tf.keras.layers.Input(shape=([1, 1, 1, 1]))
in0LST9937 = tf.keras.layers.Input(shape=([2, 1]))

Ave65215 = keras.layers.Average(name = 'Ave65215', )([in0Ave65215,in1Ave65215])
Mas8501 = keras.layers.Masking(mask_value=2, name = 'Mas8501', )(Ave65215)
Res89300 = keras.layers.Reshape((1, 1, 1), name = 'Res89300', )(Mas8501)
Res23176 = keras.layers.Reshape((1, 1), name = 'Res23176', )(Res89300)
LST9937 = keras.layers.LSTM(3,recurrent_activation='sigmoid', name = 'LST9937', )(in0LST9937)
Res27223 = keras.layers.Reshape((3, 1), name = 'Res27223', )(LST9937)
LST12811 = keras.layers.LSTM(1,recurrent_activation='sigmoid', name = 'LST12811', )(Res27223)
Res37360 = keras.layers.Reshape((1, 1), name = 'Res37360', )(LST12811)
Max95813 = keras.layers.MaxPool1D(pool_size=(1), strides=(4), padding='same', name = 'Max95813', )(Res37360)
Mul22948 = keras.layers.Multiply(name = 'Mul22948', )([Res23176,Max95813])
Lea89983 = keras.layers.LeakyReLU(alpha=9.536289030838343, name = 'Lea89983', )(Mul22948)
model = tf.keras.models.Model(inputs=[in0Ave65215,in1Ave65215,in0LST9937], outputs=Lea89983)
w = model.get_layer('LST9937').get_weights() 
w[0] = np.array([[5, 10, 8, 2, 7, 6, 8, 9, 6, 6, 7, 2]])
w[1] = np.array([[1, 6, 3, 1, 3, 4, 3, 10, 3, 3, 1, 9], [3, 9, 1, 1, 1, 1, 8, 6, 2, 7, 7, 6], [9, 2, 5, 5, 1, 2, 5, 9, 5, 9, 4, 5]])
w[2] = np.array([7, 5, 4, 6, 4, 10, 6, 4, 9, 4, 8, 6])
model.get_layer('LST9937').set_weights(w) 
w = model.get_layer('LST12811').get_weights() 
w[0] = np.array([[7, 4, 6, 4]])
w[1] = np.array([[5, 7, 1, 8]])
w[2] = np.array([9, 6, 2, 7])
model.get_layer('LST12811').set_weights(w) 
in0Ave65215 = tf.constant([[[[[0.7031]]]]])
in1Ave65215 = tf.constant([[[[[0.0029]]]]])
in0LST9937 = tf.constant([[[5], [2]]])
print (np.array2string(model.predict([in0Ave65215,in1Ave65215,in0LST9937],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Lea89983.png')

LAve65215 = average_layer([[[[[[0.7031]]]]], [[[[[0.0029]]]]]], Ave65215), 
LMas8501 = masking_layer(Ave65215, 2, Mas8501), 
LRes89300 = reshape_layer(Mas8501, [1, 1, 1], Res89300), 
LRes23176 = reshape_layer(Res89300, [1, 1], Res23176), 
LLST9937 = lstm_layer([[[5], [2]]],[[5, 10, 8, 2, 7, 6, 8, 9, 6, 6, 7, 2]],[[1, 6, 3, 1, 3, 4, 3, 10, 3, 3, 1, 9], [3, 9, 1, 1, 1, 1, 8, 6, 2, 7, 7, 6], [9, 2, 5, 5, 1, 2, 5, 9, 5, 9, 4, 5]],[7, 5, 4, 6, 4, 10, 6, 4, 9, 4, 8, 6], LST9937), 
LRes27223 = reshape_layer(LST9937, [3, 1], Res27223), 
LLST12811 = lstm_layer(Res27223,[[7, 4, 6, 4]],[[5, 7, 1, 8]],[9, 6, 2, 7], LST12811), 
LRes37360 = reshape_layer(LST12811, [1, 1], Res37360), 
LMax95813 = max_pool1D_layer(Res37360, 1, 4, true, Max95813), 
LMul22948 = multiply_layer([Res23176,Max95813], Mul22948), 
LLea89983 = leaky_relu_layer(Mul22948, 9.536289030838343, Lea89983), 
exec_layers([LAve65215,LMas8501,LRes89300,LRes23176,LLST9937,LRes27223,LLST12811,LRes37360,LMax95813,LMul22948,LLea89983],["Ave65215","Mas8501","Res89300","Res23176","LST9937","Res27223","LST12811","Res37360","Max95813","Mul22948","Lea89983"],Lea89983,"Lea89983")

Actual (Unparsed): [[[0.3512543]]]

Expected (Unparsed): [[[0.3512543215440663]]]

Actual:   [[[0.3513]]]

Expected: [[[0.3513]]]