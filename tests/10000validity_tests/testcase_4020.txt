import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Min84315 = tf.keras.layers.Input(shape=([2, 2, 1]))
in1Min84315 = tf.keras.layers.Input(shape=([2, 2, 1]))
in0Con69095 = tf.keras.layers.Input(shape=([2, 2]))
in0Cro41207 = tf.keras.layers.Input(shape=([1, 4]))
in0Con54831 = tf.keras.layers.Input(shape=([1]))
in0Cro16482 = tf.keras.layers.Input(shape=([4, 4, 2, 3]))
in0Bat8615 = tf.keras.layers.Input(shape=([2]))
in0Con81658 = tf.keras.layers.Input(shape=([7]))

Min84315 = keras.layers.Minimum(name = 'Min84315', )([in0Min84315,in1Min84315])
Res68377 = keras.layers.Reshape((2, 2), name = 'Res68377', )(Min84315)
Con69095 = keras.layers.Concatenate(axis=2, name = 'Con69095', )([Res68377,in0Con69095])
Cro41207 = keras.layers.Cropping1D(cropping=((0, 0)), name = 'Cro41207', )(in0Cro41207)
Zer1751 = keras.layers.ZeroPadding1D(padding=((1, 0)), name = 'Zer1751', )(Cro41207)
Add26028 = keras.layers.Add(name = 'Add26028', )([Con69095,Zer1751])
Fla46903 = keras.layers.Flatten(name = 'Fla46903', )(Add26028)
Con54831 = keras.layers.Concatenate(axis=1, name = 'Con54831', )([Fla46903,in0Con54831])
Cro16482 = keras.layers.Cropping3D(cropping=((1, 0), (3, 0), (1, 0)), name = 'Cro16482', )(in0Cro16482)
Res28428 = keras.layers.Reshape((3, 1, 3), name = 'Res28428', )(Cro16482)
Res24462 = keras.layers.Reshape((3, 3), name = 'Res24462', )(Res28428)
Fla77526 = keras.layers.Flatten(name = 'Fla77526', )(Res24462)
Bat8615 = keras.layers.BatchNormalization(axis=1, epsilon=0.27672168823525795,  name = 'Bat8615', )(in0Bat8615)
Con81658 = keras.layers.Concatenate(axis=1, name = 'Con81658', )([Bat8615,in0Con81658])
Add40575 = keras.layers.Add(name = 'Add40575', )([Fla77526,Con81658])
Max41928 = keras.layers.Maximum(name = 'Max41928', )([Con54831,Add40575])
model = tf.keras.models.Model(inputs=[in0Min84315,in1Min84315,in0Con69095,in0Cro41207,in0Con54831,in0Cro16482,in0Bat8615,in0Con81658], outputs=Max41928)
w = model.get_layer('Bat8615').get_weights() 
w[0] = np.array([0.9457, 0.9691])
w[1] = np.array([0.6143, 0.7014])
w[2] = np.array([0.6175, 0.0106])
w[3] = np.array([0.8911, 0.8929])
model.get_layer('Bat8615').set_weights(w) 
in0Min84315 = tf.constant([[[[0.0989], [0.5696]], [[0.6548], [0.1225]]]])
in1Min84315 = tf.constant([[[[0.8137], [0.9485]], [[0.5115], [0.2825]]]])
in0Con69095 = tf.constant([[[0.3023, 0.288], [0.2743, 0.1906]]])
in0Cro41207 = tf.constant([[[1.136, 1.8584, 1.5929, 1.7568]]])
in0Con54831 = tf.constant([[0.701]])
in0Cro16482 = tf.constant([[[[[1.3983, 1.2706, 1.8722], [1.8316, 1.6134, 1.4874]], [[1.86, 1.147, 1.28], [1.9463, 1.2736, 1.2419]], [[1.2394, 1.3148, 1.0703], [1.2653, 1.6668, 1.4737]], [[1.6303, 1.5843, 1.8207], [1.1913, 1.8083, 1.233]]], [[[1.7454, 1.7775, 1.033], [1.1546, 1.7246, 1.7698]], [[1.6273, 1.9641, 1.9156], [1.7567, 1.0468, 1.5279]], [[1.2621, 1.7675, 1.7894], [1.9983, 1.4775, 1.271]], [[1.3156, 1.0685, 1.6182], [1.7172, 1.438, 1.1192]]], [[[1.5263, 1.7272, 1.2874], [1.6192, 1.2107, 1.4919]], [[1.1431, 1.6074, 1.0562], [1.6756, 1.1281, 1.3418]], [[1.604, 1.137, 1.012], [1.2241, 1.5294, 1.0761]], [[1.1393, 1.9317, 1.3588], [1.7983, 1.8065, 1.2747]]], [[[1.4135, 1.1444, 1.2476], [1.6791, 1.4458, 1.7769]], [[1.7578, 1.3486, 1.4414], [1.9387, 1.3808, 1.0999]], [[1.1022, 1.9997, 1.0208], [1.584, 1.596, 1.0971]], [[1.7974, 1.1081, 1.2594], [1.4384, 1.9584, 1.5542]]]]])
in0Bat8615 = tf.constant([[1.0769, 1.3848]])
in0Con81658 = tf.constant([[0.2445, 0.1421, 0.8248, 0.7724, 0.3157, 0.8353, 0.8846]])
print (np.array2string(model.predict([in0Min84315,in1Min84315,in0Con69095,in0Cro41207,in0Con54831,in0Cro16482,in0Bat8615,in0Con81658],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Max41928.png')

LMin84315 = minimum_layer([[[[[0.0989], [0.5696]], [[0.6548], [0.1225]]]], [[[[0.8137], [0.9485]], [[0.5115], [0.2825]]]]], Min84315), 
LRes68377 = reshape_layer(Min84315, [2, 2], Res68377), 
LCon69095 = concatenate_layer([Res68377,[[[0.3023, 0.288], [0.2743, 0.1906]]]], 2, Con69095), 
LCro41207 = cropping1D_layer([[[1.136, 1.8584, 1.5929, 1.7568]]], 0, 0, Cro41207), 
LZer1751 = zero_padding1D_layer(Cro41207, 1, 0, Zer1751), 
LAdd26028 = add_layer([Con69095,Zer1751], Add26028), 
LFla46903 = flatten_layer(Add26028, Fla46903), 
LCon54831 = concatenate_layer([Fla46903,[[0.701]]], 1, Con54831), 
LCro16482 = cropping3D_layer([[[[[1.3983, 1.2706, 1.8722], [1.8316, 1.6134, 1.4874]], [[1.86, 1.147, 1.28], [1.9463, 1.2736, 1.2419]], [[1.2394, 1.3148, 1.0703], [1.2653, 1.6668, 1.4737]], [[1.6303, 1.5843, 1.8207], [1.1913, 1.8083, 1.233]]], [[[1.7454, 1.7775, 1.033], [1.1546, 1.7246, 1.7698]], [[1.6273, 1.9641, 1.9156], [1.7567, 1.0468, 1.5279]], [[1.2621, 1.7675, 1.7894], [1.9983, 1.4775, 1.271]], [[1.3156, 1.0685, 1.6182], [1.7172, 1.438, 1.1192]]], [[[1.5263, 1.7272, 1.2874], [1.6192, 1.2107, 1.4919]], [[1.1431, 1.6074, 1.0562], [1.6756, 1.1281, 1.3418]], [[1.604, 1.137, 1.012], [1.2241, 1.5294, 1.0761]], [[1.1393, 1.9317, 1.3588], [1.7983, 1.8065, 1.2747]]], [[[1.4135, 1.1444, 1.2476], [1.6791, 1.4458, 1.7769]], [[1.7578, 1.3486, 1.4414], [1.9387, 1.3808, 1.0999]], [[1.1022, 1.9997, 1.0208], [1.584, 1.596, 1.0971]], [[1.7974, 1.1081, 1.2594], [1.4384, 1.9584, 1.5542]]]]], 1, 0, 3, 0, 1, 0, Cro16482), 
LRes28428 = reshape_layer(Cro16482, [3, 1, 3], Res28428), 
LRes24462 = reshape_layer(Res28428, [3, 3], Res24462), 
LFla77526 = flatten_layer(Res24462, Fla77526), 
LBat8615 = batch_normalization_layer([[1.0769, 1.3848]], 1, 0.27672168823525795, [0.9457, 0.9691], [0.6143, 0.7014], [0.6175, 0.0106], [0.8911, 0.8929], Bat8615), 
LCon81658 = concatenate_layer([Bat8615,[[0.2445, 0.1421, 0.8248, 0.7724, 0.3157, 0.8353, 0.8846]]], 1, Con81658), 
LAdd40575 = add_layer([Fla77526,Con81658], Add40575), 
LMax41928 = maximum_layer([Con54831,Add40575], Max41928), 
exec_layers([LMin84315,LRes68377,LCon69095,LCro41207,LZer1751,LAdd26028,LFla46903,LCon54831,LCro16482,LRes28428,LRes24462,LFla77526,LBat8615,LCon81658,LAdd40575,LMax41928],["Min84315","Res68377","Con69095","Cro41207","Zer1751","Add26028","Fla46903","Con54831","Cro16482","Res28428","Res24462","Fla77526","Bat8615","Con81658","Add40575","Max41928"],Max41928,"Max41928")

Actual (Unparsed): [[2.7335279, 3.3707905, 1.3637000, 1.9404000, 2.6313000, 2.0471001, 1.8672000, 2.7937000, 2.4388000]]

Expected (Unparsed): [[2.7335278243438808,3.370790592523033,1.3637,1.9404,2.6313,2.0471,1.8672,2.7937,2.4388]]

Actual:   [[2.7336, 3.3708, 1.3637, 1.9404, 2.6313, 2.0472, 1.8672, 2.7937, 2.4388]]

Expected: [[2.7336, 3.3708, 1.3637, 1.9404, 2.6313, 2.0471, 1.8672, 2.7937, 2.4388]]