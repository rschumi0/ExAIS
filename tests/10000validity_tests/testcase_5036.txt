import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Min32471 = tf.keras.layers.Input(shape=([2, 1, 2]))
in1Min32471 = tf.keras.layers.Input(shape=([2, 1, 2]))

Min32471 = keras.layers.Minimum(name = 'Min32471', )([in0Min32471,in1Min32471])
Res70704 = keras.layers.Reshape((2, 2), name = 'Res70704', )(Min32471)
Loc14325 = keras.layers.LocallyConnected1D(4, (2),strides=(1), name = 'Loc14325', )(Res70704)
model = tf.keras.models.Model(inputs=[in0Min32471,in1Min32471], outputs=Loc14325)
w = model.get_layer('Loc14325').get_weights() 
w[0] = np.array([[[0.5874, 0.9657, 0.6401, 0.2354], [0.761, 0.9399, 0.5652, 0.5826], [0.2527, 0.0557, 0.6182, 0.5113], [0.9832, 0.3906, 0.1755, 0.4328]]])
w[1] = np.array([[0, 0, 0, 0]])
model.get_layer('Loc14325').set_weights(w) 
in0Min32471 = tf.constant([[[[0.0116, 0.8046]], [[0.7965, 0.9732]]]])
in1Min32471 = tf.constant([[[[0.1688, 0.6177]], [[0.9335, 0.4485]]]])
print (np.array2string(model.predict([in0Min32471,in1Min32471],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Loc14325.png')

LMin32471 = minimum_layer([[[[[0.0116, 0.8046]], [[0.7965, 0.9732]]]], [[[[0.1688, 0.6177]], [[0.9335, 0.4485]]]]], Min32471), 
LRes70704 = reshape_layer(Min32471, [2, 2], Res70704), 
LLoc14325 = locally_connected1D_layer(Res70704, 2,[[[0.5874, 0.9657, 0.6401, 0.2354], [0.761, 0.9399, 0.5652, 0.5826], [0.2527, 0.0557, 0.6182, 0.5113], [0.9832, 0.3906, 0.1755, 0.4328]]],[[0, 0, 0, 0]], 1, Loc14325), 
exec_layers([LMin32471,LRes70704,LLoc14325],["Min32471","Res70704","Loc14325"],Loc14325,"Loc14325")

Actual (Unparsed): [[[1.1191243, 0.8113275, 0.9276573, 0.9639639]]]

Expected (Unparsed): [[[1.11912429,0.8113275,0.9276572499999999,0.96396391]]]

Actual:   [[[1.1192, 0.8114, 0.9277, 0.964]]]

Expected: [[[1.1192, 0.8114, 0.9277, 0.964]]]