import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Add9038 = tf.keras.layers.Input(shape=([2, 2, 1]))
in1Add9038 = tf.keras.layers.Input(shape=([2, 2, 1]))
in0Con94087 = tf.keras.layers.Input(shape=([2, 2, 3, 2]))
in0Con81254 = tf.keras.layers.Input(shape=([2, 1, 2, 1]))

Add9038 = keras.layers.Add(name = 'Add9038', )([in0Add9038,in1Add9038])
Res40989 = keras.layers.Reshape((2, 2, 1, 1), name = 'Res40989', )(Add9038)
Zer92243 = keras.layers.ZeroPadding3D(padding=((0, 0), (0, 0), (2, 0)), name = 'Zer92243', )(Res40989)
Con94087 = keras.layers.Concatenate(axis=4, name = 'Con94087', )([Zer92243,in0Con94087])
Con81254 = keras.layers.Conv3DTranspose(3, (1, 1, 1),strides=(1, 1, 1), padding='same', name = 'Con81254', )(in0Con81254)
Zer53562 = keras.layers.ZeroPadding3D(padding=((0, 0), (1, 0), (1, 0)), name = 'Zer53562', )(Con81254)
Ave41325 = keras.layers.Average(name = 'Ave41325', )([Con94087,Zer53562])
model = tf.keras.models.Model(inputs=[in0Add9038,in1Add9038,in0Con94087,in0Con81254], outputs=Ave41325)
w = model.get_layer('Con81254').get_weights() 
w[0] = np.array([[[[[0.9713], [0.8128], [0.9893]]]]])
w[1] = np.array([0, 0, 0])
model.get_layer('Con81254').set_weights(w) 
in0Add9038 = tf.constant([[[[0.8618], [0.1969]], [[0.3599], [0.4703]]]])
in1Add9038 = tf.constant([[[[0.6191], [0.1391]], [[0.5002], [0.4655]]]])
in0Con94087 = tf.constant([[[[[0.7345, 0.541], [0.5411, 0.559], [0.4095, 0.1441]], [[0.0499, 0.3533], [0.259, 0.6371], [0.5286, 0.4166]]], [[[0.0174, 0.5965], [0.4922, 0.0311], [0.4408, 0.9753]], [[0.8427, 0.5668], [0.4865, 0.7181], [0.2372, 0.4388]]]]])
in0Con81254 = tf.constant([[[[[0.9328], [0.7167]]], [[[0.4873], [0.1653]]]]])
print (np.array2string(model.predict([in0Add9038,in1Add9038,in0Con94087,in0Con81254],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Ave41325.png')

LAdd9038 = add_layer([[[[[0.8618], [0.1969]], [[0.3599], [0.4703]]]], [[[[0.6191], [0.1391]], [[0.5002], [0.4655]]]]], Add9038), 
LRes40989 = reshape_layer(Add9038, [2, 2, 1, 1], Res40989), 
LZer92243 = zero_padding3D_layer(Res40989, 0, 0, 0, 0, 2, 0, Zer92243), 
LCon94087 = concatenate_layer([Zer92243,[[[[[0.7345, 0.541], [0.5411, 0.559], [0.4095, 0.1441]], [[0.0499, 0.3533], [0.259, 0.6371], [0.5286, 0.4166]]], [[[0.0174, 0.5965], [0.4922, 0.0311], [0.4408, 0.9753]], [[0.8427, 0.5668], [0.4865, 0.7181], [0.2372, 0.4388]]]]]], 4, Con94087), 
LCon81254 = conv3D_transpose_layer([[[[[0.9328], [0.7167]]], [[[0.4873], [0.1653]]]]], 1, 1, 1,[[[[[0.9713], [0.8128], [0.9893]]]]],[0, 0, 0], 1, 1, 1, true, Con81254), 
LZer53562 = zero_padding3D_layer(Con81254, 0, 0, 1, 0, 1, 0, Zer53562), 
LAve41325 = average_layer([Con94087,Zer53562], Ave41325), 
exec_layers([LAdd9038,LRes40989,LZer92243,LCon94087,LCon81254,LZer53562,LAve41325],["Add9038","Res40989","Zer92243","Con94087","Con81254","Zer53562","Ave41325"],Ave41325,"Ave41325")

Actual (Unparsed): [[[[[0.0000000, 0.3672500, 0.2705000], [0.0000000, 0.2705500, 0.2795000], [0.7404500, 0.2047500, 0.0720500]], [[0.0000000, 0.0249500, 0.1766500], [0.4530143, 0.5085899, 0.7799595], [0.5160654, 0.5555669, 0.5628157]]], [[[0.0000000, 0.0087000, 0.2982500], [0.0000000, 0.2461000, 0.0155500], [0.4300500, 0.2204000, 0.4876500]], [[0.0000000, 0.4213500, 0.2834000], [0.2366572, 0.4412887, 0.6000930], [0.5481779, 0.1857779, 0.3011656]]]]]

Expected (Unparsed): [[[[[0,0.36725,0.2705],[0,0.27055,0.2795],[0.74045,0.20475,0.07205]],[[0,0.02495,0.17665],[0.45301432,0.5085899199999999,0.77995952],[0.5160653550000001,0.55556688,0.562815655]]],[[[0,0.0087,0.29825],[0,0.2461,0.01555],[0.43005,0.2204,0.48765]],[[0,0.42135,0.2834],[0.23665724500000002,0.44128871999999997,0.600092945],[0.5481779449999999,0.18577791999999999,0.301165645]]]]]

Actual:   [[[[[0, 0.3673, 0.2705], [0, 0.2706, 0.2795], [0.7405, 0.2048, 0.0721]], [[0, 0.025, 0.1767], [0.4531, 0.5086, 0.78], [0.5161, 0.5556, 0.5629]]], [[[0, 0.0087, 0.2983], [0, 0.2461, 0.0156], [0.4301, 0.2204, 0.4877]], [[0, 0.4214, 0.2834], [0.2367, 0.4413, 0.6001], [0.5482, 0.1858, 0.3012]]]]]

Expected: [[[[[0, 0.3673, 0.2705], [0, 0.2706, 0.2795], [0.7405, 0.2048, 0.0721]], [[0, 0.025, 0.1767], [0.4531, 0.5086, 0.78], [0.5161, 0.5556, 0.5629]]], [[[0, 0.0087, 0.2983], [0, 0.2461, 0.0156], [0.4301, 0.2204, 0.4877]], [[0, 0.4214, 0.2834], [0.2367, 0.4413, 0.6001], [0.5482, 0.1858, 0.3012]]]]]