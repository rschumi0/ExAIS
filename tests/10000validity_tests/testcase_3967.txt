import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Ave85683 = tf.keras.layers.Input(shape=([2, 1]))
in1Ave85683 = tf.keras.layers.Input(shape=([2, 1]))

Ave85683 = keras.layers.Average(name = 'Ave85683', )([in0Ave85683,in1Ave85683])
Lea25801 = keras.layers.LeakyReLU(alpha=0.7348280204488052, name = 'Lea25801', )(Ave85683)
Cro70200 = keras.layers.Cropping1D(cropping=((0, 0)), name = 'Cro70200', )(Lea25801)
model = tf.keras.models.Model(inputs=[in0Ave85683,in1Ave85683], outputs=Cro70200)
in0Ave85683 = tf.constant([[[0.5701], [0.9421]]])
in1Ave85683 = tf.constant([[[0.7258], [0.3994]]])
print (np.array2string(model.predict([in0Ave85683,in1Ave85683],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Cro70200.png')

LAve85683 = average_layer([[[[0.5701], [0.9421]]], [[[0.7258], [0.3994]]]], Ave85683), 
LLea25801 = leaky_relu_layer(Ave85683, 0.7348280204488052, Lea25801), 
LCro70200 = cropping1D_layer(Lea25801, 0, 0, Cro70200), 
exec_layers([LAve85683,LLea25801,LCro70200],["Ave85683","Lea25801","Cro70200"],Cro70200,"Cro70200")

Actual (Unparsed): [[[0.6479500], [0.6707500]]]

Expected (Unparsed): [[[0.64795],[0.67075]]]

Actual:   [[[0.648], [0.6708]]]

Expected: [[[0.648], [0.6708]]]