import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Sub69390 = tf.keras.layers.Input(shape=([3, 2]))
in1Sub69390 = tf.keras.layers.Input(shape=([3, 2]))
in0Con11672 = tf.keras.layers.Input(shape=([3, 3, 1, 1]))
in0Glo47432 = tf.keras.layers.Input(shape=([1, 1, 2]))
in0Con809 = tf.keras.layers.Input(shape=([3, 3, 1, 1]))
in0Min21098 = tf.keras.layers.Input(shape=([2, 2, 1, 2]))
in1Min21098 = tf.keras.layers.Input(shape=([2, 2, 1, 2]))

Sub69390 = keras.layers.Subtract(name = 'Sub69390', )([in0Sub69390,in1Sub69390])
Res36290 = keras.layers.Reshape((3, 2, 1), name = 'Res36290', )(Sub69390)
Res54747 = keras.layers.Reshape((3, 2, 1, 1), name = 'Res54747', )(Res36290)
Zer35169 = keras.layers.ZeroPadding3D(padding=((0, 0), (1, 0), (0, 0)), name = 'Zer35169', )(Res54747)
Con11672 = keras.layers.Concatenate(axis=4, name = 'Con11672', )([Zer35169,in0Con11672])
Glo47432 = keras.layers.GlobalMaxPool2D(name = 'Glo47432', )(in0Glo47432)
Res39235 = keras.layers.Reshape((2, 1), name = 'Res39235', )(Glo47432)
LST4752 = keras.layers.LSTM(3,recurrent_activation='sigmoid', name = 'LST4752', )(Res39235)
Res95793 = keras.layers.Reshape((3, 1), name = 'Res95793', )(LST4752)
Res56000 = keras.layers.Reshape((3, 1, 1), name = 'Res56000', )(Res95793)
Res6474 = keras.layers.Reshape((3, 1, 1, 1), name = 'Res6474', )(Res56000)
Zer89813 = keras.layers.ZeroPadding3D(padding=((0, 0), (2, 0), (0, 0)), name = 'Zer89813', )(Res6474)
Con809 = keras.layers.Concatenate(axis=4, name = 'Con809', )([Zer89813,in0Con809])
Min21098 = keras.layers.Minimum(name = 'Min21098', )([in0Min21098,in1Min21098])
Zer58746 = keras.layers.ZeroPadding3D(padding=((1, 0), (1, 0), (0, 0)), name = 'Zer58746', )(Min21098)
Ave12832 = keras.layers.Average(name = 'Ave12832', )([Con809,Zer58746])
Sub73308 = keras.layers.Subtract(name = 'Sub73308', )([Con11672,Ave12832])
model = tf.keras.models.Model(inputs=[in0Sub69390,in1Sub69390,in0Con11672,in0Glo47432,in0Con809,in0Min21098,in1Min21098], outputs=Sub73308)
w = model.get_layer('LST4752').get_weights() 
w[0] = np.array([[10, 8, 2, 5, 10, 5, 10, 4, 4, 9, 5, 3]])
w[1] = np.array([[9, 2, 3, 4, 1, 1, 10, 5, 2, 4, 2, 3], [3, 1, 8, 3, 5, 7, 4, 4, 8, 1, 10, 1], [6, 2, 9, 9, 3, 7, 2, 5, 10, 6, 7, 10]])
w[2] = np.array([6, 5, 1, 6, 5, 1, 9, 9, 7, 5, 6, 6])
model.get_layer('LST4752').set_weights(w) 
in0Sub69390 = tf.constant([[[0.5949, 0.203], [0.2988, 0.4632], [0.7422, 0.4421]]])
in1Sub69390 = tf.constant([[[0.5298, 0.1848], [0.7813, 0.9866], [0.6655, 0.1887]]])
in0Con11672 = tf.constant([[[[[0.9847]], [[0.8971]], [[0.9089]]], [[[0.977]], [[0.7371]], [[0.9792]]], [[[0.1351]], [[0.3411]], [[0.6844]]]]])
in0Glo47432 = tf.constant([[[[1.5272, 1.1532]]]])
in0Con809 = tf.constant([[[[[0.4805]], [[0.8292]], [[0.9743]]], [[[0.6567]], [[0.1116]], [[0.3265]]], [[[0.3392]], [[0.0455]], [[0.1966]]]]])
in0Min21098 = tf.constant([[[[[0.8989, 0.2977]], [[0.706, 0.2987]]], [[[0.4589, 0.057]], [[0.4766, 0.2984]]]]])
in1Min21098 = tf.constant([[[[[0.8157, 0.7447]], [[0.7698, 0.3541]]], [[[0.5927, 0.83]], [[0.5674, 0.3019]]]]])
print (np.array2string(model.predict([in0Sub69390,in1Sub69390,in0Con11672,in0Glo47432,in0Con809,in0Min21098,in1Min21098],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Sub73308.png')

LSub69390 = subtract_layer([[[0.5949, 0.203], [0.2988, 0.4632], [0.7422, 0.4421]]], [[[0.5298, 0.1848], [0.7813, 0.9866], [0.6655, 0.1887]]], Sub69390), 
LRes36290 = reshape_layer(Sub69390, [3, 2, 1], Res36290), 
LRes54747 = reshape_layer(Res36290, [3, 2, 1, 1], Res54747), 
LZer35169 = zero_padding3D_layer(Res54747, 0, 0, 1, 0, 0, 0, Zer35169), 
LCon11672 = concatenate_layer([Zer35169,[[[[[0.9847]], [[0.8971]], [[0.9089]]], [[[0.977]], [[0.7371]], [[0.9792]]], [[[0.1351]], [[0.3411]], [[0.6844]]]]]], 4, Con11672), 
LGlo47432 = global_max_pool2D_layer([[[[1.5272, 1.1532]]]], Glo47432), 
LRes39235 = reshape_layer(Glo47432, [2, 1], Res39235), 
LLST4752 = lstm_layer(Res39235,[[10, 8, 2, 5, 10, 5, 10, 4, 4, 9, 5, 3]],[[9, 2, 3, 4, 1, 1, 10, 5, 2, 4, 2, 3], [3, 1, 8, 3, 5, 7, 4, 4, 8, 1, 10, 1], [6, 2, 9, 9, 3, 7, 2, 5, 10, 6, 7, 10]],[6, 5, 1, 6, 5, 1, 9, 9, 7, 5, 6, 6], LST4752), 
LRes95793 = reshape_layer(LST4752, [3, 1], Res95793), 
LRes56000 = reshape_layer(Res95793, [3, 1, 1], Res56000), 
LRes6474 = reshape_layer(Res56000, [3, 1, 1, 1], Res6474), 
LZer89813 = zero_padding3D_layer(Res6474, 0, 0, 2, 0, 0, 0, Zer89813), 
LCon809 = concatenate_layer([Zer89813,[[[[[0.4805]], [[0.8292]], [[0.9743]]], [[[0.6567]], [[0.1116]], [[0.3265]]], [[[0.3392]], [[0.0455]], [[0.1966]]]]]], 4, Con809), 
LMin21098 = minimum_layer([[[[[[0.8989, 0.2977]], [[0.706, 0.2987]]], [[[0.4589, 0.057]], [[0.4766, 0.2984]]]]], [[[[[0.8157, 0.7447]], [[0.7698, 0.3541]]], [[[0.5927, 0.83]], [[0.5674, 0.3019]]]]]], Min21098), 
LZer58746 = zero_padding3D_layer(Min21098, 1, 0, 1, 0, 0, 0, Zer58746), 
LAve12832 = average_layer([Con809,Zer58746], Ave12832), 
LSub73308 = subtract_layer(Con11672,Ave12832, Sub73308), 
exec_layers([LSub69390,LRes36290,LRes54747,LZer35169,LCon11672,LGlo47432,LRes39235,LLST4752,LRes95793,LRes56000,LRes6474,LZer89813,LCon809,LMin21098,LZer58746,LAve12832,LSub73308],["Sub69390","Res36290","Res54747","Zer35169","Con11672","Glo47432","Res39235","LST4752","Res95793","Res56000","Res6474","Zer89813","Con809","Min21098","Zer58746","Ave12832","Sub73308"],Sub73308,"Sub73308")

Actual (Unparsed): [[[[[0.0000000, 0.7444500]], [[0.0651000, 0.4825000]], [[-0.4638138, 0.4217500]]], [[[0.0000000, 0.6486500]], [[-0.8903500, 0.5324500]], [[-1.3584138, 0.6666000]]], [[[0.0000000, -0.0345000]], [[-0.1527500, 0.2898500]], [[-0.4663015, 0.4369000]]]]]

Expected (Unparsed): [[[[[0,0.7444500000000001]],[[0.06509999999999994,0.4825]],[[-0.46381378999175293,0.42175]]],[[[0,0.64865]],[[-0.89035,0.53245]],[[-1.3584137883290084,0.6666]]],[[[0,-0.0345]],[[-0.15275,0.28985]],[[-0.4663014801699026,0.4369]]]]]

Actual:   [[[[[0, 0.7445]], [[0.0651, 0.4825]], [[-0.4638, 0.4218]]], [[[0, 0.6487]], [[-0.8903, 0.5325]], [[-1.3584, 0.6666]]], [[[0, -0.0345]], [[-0.1527, 0.2899]], [[-0.4663, 0.4369]]]]]

Expected: [[[[[0, 0.7445]], [[0.0651, 0.4825]], [[-0.4638, 0.4218]]], [[[0, 0.6487]], [[-0.8903, 0.5325]], [[-1.3584, 0.6666]]], [[[0, -0.0345]], [[-0.1527, 0.2899]], [[-0.4663, 0.4369]]]]]