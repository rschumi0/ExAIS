import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Add46015 = tf.keras.layers.Input(shape=([2, 1]))
in1Add46015 = tf.keras.layers.Input(shape=([2, 1]))
in0Con51663 = tf.keras.layers.Input(shape=([2, 1]))
in0Den71078 = tf.keras.layers.Input(shape=([5, 4, 5]))
in0Mul93624 = tf.keras.layers.Input(shape=([1, 2, 1]))
in1Mul93624 = tf.keras.layers.Input(shape=([1, 2, 1]))
in0Con75913 = tf.keras.layers.Input(shape=([23]))

Add46015 = keras.layers.Add(name = 'Add46015', )([in0Add46015,in1Add46015])
Con51663 = keras.layers.Concatenate(axis=2, name = 'Con51663', )([Add46015,in0Con51663])
Den71078 = keras.layers.Dense(1,name = 'Den71078', )(in0Den71078)
Res62030 = keras.layers.Reshape((5, 4), name = 'Res62030', )(Den71078)
Loc89817 = keras.layers.LocallyConnected1D(2, (3),strides=(10), name = 'Loc89817', )(Res62030)
Zer37609 = keras.layers.ZeroPadding1D(padding=((1, 0)), name = 'Zer37609', )(Loc89817)
Min46495 = keras.layers.Minimum(name = 'Min46495', )([Con51663,Zer37609])
Res3200 = keras.layers.Reshape((2, 2, 1), name = 'Res3200', )(Min46495)
Up_68144 = keras.layers.UpSampling2D(size=(2, 2), name = 'Up_68144', )(Res3200)
Res70168 = keras.layers.Reshape((4, 4), name = 'Res70168', )(Up_68144)
Zer74955 = keras.layers.ZeroPadding1D(padding=((1, 1)), name = 'Zer74955', )(Res70168)
Fla26996 = keras.layers.Flatten(name = 'Fla26996', )(Zer74955)
Mul93624 = keras.layers.Multiply(name = 'Mul93624', )([in0Mul93624,in1Mul93624])
Cro19013 = keras.layers.Cropping2D(cropping=((0, 0), (0, 0)), name = 'Cro19013', )(Mul93624)
Res35187 = keras.layers.Reshape((1, 2), name = 'Res35187', )(Cro19013)
LST20829 = keras.layers.LSTM(1,recurrent_activation='sigmoid', name = 'LST20829', )(Res35187)
Con75913 = keras.layers.Concatenate(axis=1, name = 'Con75913', )([LST20829,in0Con75913])
Max85739 = keras.layers.Maximum(name = 'Max85739', )([Fla26996,Con75913])
model = tf.keras.models.Model(inputs=[in0Add46015,in1Add46015,in0Con51663,in0Den71078,in0Mul93624,in1Mul93624,in0Con75913], outputs=Max85739)
w = model.get_layer('Den71078').get_weights() 
w[0] = np.array([[0.2403], [0.7478], [0.2926], [0.3389], [0.8223]])
w[1] = np.array([0.0948])
model.get_layer('Den71078').set_weights(w) 
w = model.get_layer('Loc89817').get_weights() 
w[0] = np.array([[[0.3807, 0.2399], [0.4948, 0.2206], [0.5471, 0.9893], [0.0465, 0.0093], [0.242, 0.9436], [0.8344, 0.859], [0.054, 0.8435], [0.5912, 0.3874], [0.2778, 0.7201], [0.7369, 0.4558], [0.4239, 0.3434], [0.0888, 0.7389]]])
w[1] = np.array([[0, 0]])
model.get_layer('Loc89817').set_weights(w) 
w = model.get_layer('LST20829').get_weights() 
w[0] = np.array([[9, 5, 8, 6], [7, 8, 1, 3]])
w[1] = np.array([[7, 6, 2, 9]])
w[2] = np.array([5, 9, 1, 4])
model.get_layer('LST20829').set_weights(w) 
in0Add46015 = tf.constant([[[0.2487], [0.1359]]])
in1Add46015 = tf.constant([[[0.3865], [0.6137]]])
in0Con51663 = tf.constant([[[0.4484], [0.7944]]])
in0Den71078 = tf.constant([[[[0.5158, 0.8502, 0.8651, 0.1716, 0.2155], [0.9116, 0.5871, 0.9085, 0.6923, 0.3909], [0.5898, 0.8345, 0.8083, 0.2536, 0.8628], [0.9638, 0.4021, 0.3123, 0.3233, 0.3138]], [[0.6775, 0.7676, 0.4772, 0.8988, 0.0017], [0.1084, 0.5524, 0.1921, 0.0243, 0.6824], [0.0964, 0.4624, 0.256, 0.8191, 0.5097], [0.8516, 0.2401, 0.9911, 0.7609, 0.0539]], [[0.2374, 0.1304, 0.5706, 0.9817, 0.9039], [0.8862, 0.6847, 0.8589, 0.7898, 0.3016], [0.4648, 0.7672, 0.611, 0.1182, 0.9188], [0.7936, 0.153, 0.6749, 0.4623, 0.5722]], [[0.3556, 0.1565, 0.1625, 0.1964, 0.596], [0.7702, 0.9439, 0.1887, 0.4393, 0.2813], [0.2586, 0.4603, 0.1571, 0.2191, 0.0173], [0.9629, 0.1293, 0.9862, 0.1575, 0.0465]], [[0.8378, 0.0424, 0.0879, 0.3683, 0.5379], [0.3192, 0.3849, 0.5706, 0.8491, 0.0249], [0.5452, 0.8412, 0.447, 0.0422, 0.299], [0.9036, 0.7565, 0.1916, 0.9744, 0.9442]]]])
in0Mul93624 = tf.constant([[[[0.0485], [0.7366]]]])
in1Mul93624 = tf.constant([[[[0.672], [0.4777]]]])
in0Con75913 = tf.constant([[0.09, 0.3364, 0.6013, 0.8412, 0.0359, 0.2846, 0.3481, 0.1344, 0.6202, 0.6976, 0.5611, 0.1944, 0.5334, 0.1155, 0.8037, 0.0184, 0.215, 0.9036, 0.9206, 0.3992, 0.1006, 0.1196, 0.7414]])
print (np.array2string(model.predict([in0Add46015,in1Add46015,in0Con51663,in0Den71078,in0Mul93624,in1Mul93624,in0Con75913],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Max85739.png')

LAdd46015 = add_layer([[[[0.2487], [0.1359]]], [[[0.3865], [0.6137]]]], Add46015), 
LCon51663 = concatenate_layer([Add46015,[[[0.4484], [0.7944]]]], 2, Con51663), 
LDen71078 = dense_layer([[[[0.5158, 0.8502, 0.8651, 0.1716, 0.2155], [0.9116, 0.5871, 0.9085, 0.6923, 0.3909], [0.5898, 0.8345, 0.8083, 0.2536, 0.8628], [0.9638, 0.4021, 0.3123, 0.3233, 0.3138]], [[0.6775, 0.7676, 0.4772, 0.8988, 0.0017], [0.1084, 0.5524, 0.1921, 0.0243, 0.6824], [0.0964, 0.4624, 0.256, 0.8191, 0.5097], [0.8516, 0.2401, 0.9911, 0.7609, 0.0539]], [[0.2374, 0.1304, 0.5706, 0.9817, 0.9039], [0.8862, 0.6847, 0.8589, 0.7898, 0.3016], [0.4648, 0.7672, 0.611, 0.1182, 0.9188], [0.7936, 0.153, 0.6749, 0.4623, 0.5722]], [[0.3556, 0.1565, 0.1625, 0.1964, 0.596], [0.7702, 0.9439, 0.1887, 0.4393, 0.2813], [0.2586, 0.4603, 0.1571, 0.2191, 0.0173], [0.9629, 0.1293, 0.9862, 0.1575, 0.0465]], [[0.8378, 0.0424, 0.0879, 0.3683, 0.5379], [0.3192, 0.3849, 0.5706, 0.8491, 0.0249], [0.5452, 0.8412, 0.447, 0.0422, 0.299], [0.9036, 0.7565, 0.1916, 0.9744, 0.9442]]]], [[0.2403], [0.7478], [0.2926], [0.3389], [0.8223]],[0.0948], Den71078), 
LRes62030 = reshape_layer(Den71078, [5, 4], Res62030), 
LLoc89817 = locally_connected1D_layer(Res62030, 3,[[[0.3807, 0.2399], [0.4948, 0.2206], [0.5471, 0.9893], [0.0465, 0.0093], [0.242, 0.9436], [0.8344, 0.859], [0.054, 0.8435], [0.5912, 0.3874], [0.2778, 0.7201], [0.7369, 0.4558], [0.4239, 0.3434], [0.0888, 0.7389]]],[[0, 0]], 10, Loc89817), 
LZer37609 = zero_padding1D_layer(Loc89817, 1, 0, Zer37609), 
LMin46495 = minimum_layer([Con51663,Zer37609], Min46495), 
LRes3200 = reshape_layer(Min46495, [2, 2, 1], Res3200), 
LUp_68144 = up_sampling2D_layer(Res3200, 2, 2, Up_68144), 
LRes70168 = reshape_layer(Up_68144, [4, 4], Res70168), 
LZer74955 = zero_padding1D_layer(Res70168, 1, 1, Zer74955), 
LFla26996 = flatten_layer(Zer74955, Fla26996), 
LMul93624 = multiply_layer([[[[[0.0485], [0.7366]]]], [[[[0.672], [0.4777]]]]], Mul93624), 
LCro19013 = cropping2D_layer(Mul93624, 0, 0, 0, 0, Cro19013), 
LRes35187 = reshape_layer(Cro19013, [1, 2], Res35187), 
LLST20829 = lstm_layer(Res35187,[[9, 5, 8, 6], [7, 8, 1, 3]],[[7, 6, 2, 9]],[5, 9, 1, 4], LST20829), 
LCon75913 = concatenate_layer([LST20829,[[0.09, 0.3364, 0.6013, 0.8412, 0.0359, 0.2846, 0.3481, 0.1344, 0.6202, 0.6976, 0.5611, 0.1944, 0.5334, 0.1155, 0.8037, 0.0184, 0.215, 0.9036, 0.9206, 0.3992, 0.1006, 0.1196, 0.7414]]], 1, Con75913), 
LMax85739 = maximum_layer([Fla26996,Con75913], Max85739), 
exec_layers([LAdd46015,LCon51663,LDen71078,LRes62030,LLoc89817,LZer37609,LMin46495,LRes3200,LUp_68144,LRes70168,LZer74955,LFla26996,LMul93624,LCro19013,LRes35187,LLST20829,LCon75913,LMax85739],["Add46015","Con51663","Den71078","Res62030","Loc89817","Zer37609","Min46495","Res3200","Up_68144","Res70168","Zer74955","Fla26996","Mul93624","Cro19013","Res35187","LST20829","Con75913","Max85739"],Max85739,"Max85739")

Actual (Unparsed): [[0.7235914, 0.0900000, 0.3364000, 0.6013000, 0.8412000, 0.0359000, 0.2846000, 0.3481000, 0.1344000, 0.6202000, 0.6976000, 0.5611000, 0.7496000, 0.7496000, 0.7944000, 0.8037000, 0.7496000, 0.7496000, 0.9036000, 0.9206000, 0.3992000, 0.1006000, 0.1196000, 0.7414000]]

Expected (Unparsed): [[0.7235914347009291,0.09,0.3364,0.6013,0.8412,0.0359,0.2846,0.3481,0.1344,0.6202,0.6976,0.5611,0.7496,0.7496,0.7944,0.8037,0.7496,0.7496,0.9036,0.9206,0.3992,0.1006,0.1196,0.7414]]

Actual:   [[0.7236, 0.09, 0.3364, 0.6013, 0.8412, 0.0359, 0.2846, 0.3481, 0.1344, 0.6202, 0.6976, 0.5611, 0.7496, 0.7496, 0.7944, 0.8037, 0.7496, 0.7496, 0.9036, 0.9206, 0.3992, 0.1006, 0.1196, 0.7414]]

Expected: [[0.7236, 0.09, 0.3364, 0.6013, 0.8412, 0.0359, 0.2846, 0.3481, 0.1344, 0.6202, 0.6976, 0.5611, 0.7496, 0.7496, 0.7944, 0.8037, 0.7496, 0.7496, 0.9036, 0.9206, 0.3992, 0.1006, 0.1196, 0.7414]]