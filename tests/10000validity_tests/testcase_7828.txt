import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Den25272 = tf.keras.layers.Input(shape=([3, 3, 3]))
in0Mul46222 = tf.keras.layers.Input(shape=([2, 1]))
in1Mul46222 = tf.keras.layers.Input(shape=([2, 1]))
in0Con82736 = tf.keras.layers.Input(shape=([3, 11]))
in0Sep18242 = tf.keras.layers.Input(shape=([2, 1]))
in0Con16636 = tf.keras.layers.Input(shape=([3, 9]))
in0Dot94981 = tf.keras.layers.Input(shape=([3]))
in1Dot94981 = tf.keras.layers.Input(shape=([3]))
in0Con51287 = tf.keras.layers.Input(shape=([32]))

Den25272 = keras.layers.Dense(4,name = 'Den25272', )(in0Den25272)
Res1795 = keras.layers.Reshape((3, 12), name = 'Res1795', )(Den25272)
Mul46222 = keras.layers.Multiply(name = 'Mul46222', )([in0Mul46222,in1Mul46222])
Max26828 = keras.layers.MaxPool1D(pool_size=(1), strides=(1), padding='valid', name = 'Max26828', )(Mul46222)
Zer44809 = keras.layers.ZeroPadding1D(padding=((1, 0)), name = 'Zer44809', )(Max26828)
Con82736 = keras.layers.Concatenate(axis=2, name = 'Con82736', )([Zer44809,in0Con82736])
Sub86237 = keras.layers.Subtract(name = 'Sub86237', )([Res1795,Con82736])
Sep18242 = keras.layers.SeparableConv1D(3, (1),strides=(1), padding='valid', name = 'Sep18242', )(in0Sep18242)
Cro46121 = keras.layers.Cropping1D(cropping=((1, 0)), name = 'Cro46121', )(Sep18242)
Zer32200 = keras.layers.ZeroPadding1D(padding=((2, 0)), name = 'Zer32200', )(Cro46121)
Con16636 = keras.layers.Concatenate(axis=2, name = 'Con16636', )([Zer32200,in0Con16636])
Min20008 = keras.layers.Minimum(name = 'Min20008', )([Sub86237,Con16636])
Fla42883 = keras.layers.Flatten(name = 'Fla42883', )(Min20008)
Dot94981 = keras.layers.Dot(axes=(1, 1), name = 'Dot94981', )([in0Dot94981,in1Dot94981])
Res46860 = keras.layers.Reshape((1, 1), name = 'Res46860', )(Dot94981)
Loc24511 = keras.layers.LocallyConnected1D(4, (1),strides=(1), name = 'Loc24511', )(Res46860)
Cro30145 = keras.layers.Cropping1D(cropping=((0, 0)), name = 'Cro30145', )(Loc24511)
Fla22677 = keras.layers.Flatten(name = 'Fla22677', )(Cro30145)
Con51287 = keras.layers.Concatenate(axis=1, name = 'Con51287', )([Fla22677,in0Con51287])
Max10744 = keras.layers.Maximum(name = 'Max10744', )([Fla42883,Con51287])
model = tf.keras.models.Model(inputs=[in0Den25272,in0Mul46222,in1Mul46222,in0Con82736,in0Sep18242,in0Con16636,in0Dot94981,in1Dot94981,in0Con51287], outputs=Max10744)
w = model.get_layer('Den25272').get_weights() 
w[0] = np.array([[0.0679, 0.1654, 0.656, 0.025], [0.2404, 0.4657, 0.7081, 0.5161], [0.6761, 0.8604, 0.7825, 0.1759]])
w[1] = np.array([0.9188, 0.5776, 0.172, 0.2457])
model.get_layer('Den25272').set_weights(w) 
w = model.get_layer('Sep18242').get_weights() 
w[0] = np.array([[[0.852]]])
w[1] = np.array([[[0.163, 0.9649, 0.0657]]])
w[2] = np.array([0, 0, 0])
model.get_layer('Sep18242').set_weights(w) 
w = model.get_layer('Loc24511').get_weights() 
w[0] = np.array([[[0.2922, 0.9771, 0.0887, 0.9712]]])
w[1] = np.array([[0, 0, 0, 0]])
model.get_layer('Loc24511').set_weights(w) 
in0Den25272 = tf.constant([[[[0.9131, 0.4874, 0.559], [0.0964, 0.2713, 0.8424], [0.3258, 0.9086, 0.6211]], [[0.2225, 0.7919, 0.9955], [0.9931, 0.6631, 0.4104], [0.8489, 0.9101, 0.8506]], [[0.133, 0.595, 0.1802], [0.2867, 0.507, 0.2348], [0.9151, 0.8696, 0.5744]]]])
in0Mul46222 = tf.constant([[[0.4421], [0.784]]])
in1Mul46222 = tf.constant([[[0.6489], [0.9233]]])
in0Con82736 = tf.constant([[[0.5787, 0.5314, 0.2482, 0.2657, 0.6289, 0.1329, 0.5665, 0.7448, 0.3472, 0.1063, 0.7421], [0.32, 0.0216, 0.3178, 0.6054, 0.9423, 0.1949, 0.852, 0.7296, 0.1883, 0.024, 0.3742], [0.3998, 0.8171, 0.3988, 0.2107, 0.8274, 0.9867, 0.9581, 0.7166, 0.9462, 0.7153, 0.0798]]])
in0Sep18242 = tf.constant([[[0.6619], [0.5133]]])
in0Con16636 = tf.constant([[[0.5298, 0.9328, 0.0707, 0.5486, 0.5212, 0.4536, 0.145, 0.9966, 0.229], [0.6749, 0.2626, 0.7297, 0.3888, 0.7876, 0.0788, 0.5869, 0.1358, 0.1486], [0.5009, 0.9372, 0.2028, 0.3589, 0.6322, 0.3885, 0.0804, 0.8509, 0.7828]]])
in0Dot94981 = tf.constant([[0.1143, 0.0102, 0.2437]])
in1Dot94981 = tf.constant([[0.4267, 0.0117, 0.9164]])
in0Con51287 = tf.constant([[0.7107, 0.3536, 0.746, 0.5942, 0.6428, 0.7675, 0.4117, 0.5281, 0.7173, 0.7175, 0.6794, 0.1398, 0.3261, 0.1016, 0.5102, 0.9596, 0.2119, 0.4878, 0.1658, 0.1352, 0.5541, 0.2463, 0.6657, 0.9654, 0.4692, 0.8082, 0.7095, 0.072, 0.6077, 0.2347, 0.3979, 0.9862]])
print (np.array2string(model.predict([in0Den25272,in0Mul46222,in1Mul46222,in0Con82736,in0Sep18242,in0Con16636,in0Dot94981,in1Dot94981,in0Con51287],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Max10744.png')

LDen25272 = dense_layer([[[[0.9131, 0.4874, 0.559], [0.0964, 0.2713, 0.8424], [0.3258, 0.9086, 0.6211]], [[0.2225, 0.7919, 0.9955], [0.9931, 0.6631, 0.4104], [0.8489, 0.9101, 0.8506]], [[0.133, 0.595, 0.1802], [0.2867, 0.507, 0.2348], [0.9151, 0.8696, 0.5744]]]], [[0.0679, 0.1654, 0.656, 0.025], [0.2404, 0.4657, 0.7081, 0.5161], [0.6761, 0.8604, 0.7825, 0.1759]],[0.9188, 0.5776, 0.172, 0.2457], Den25272), 
LRes1795 = reshape_layer(Den25272, [3, 12], Res1795), 
LMul46222 = multiply_layer([[[[0.4421], [0.784]]], [[[0.6489], [0.9233]]]], Mul46222), 
LMax26828 = max_pool1D_layer(Mul46222, 1, 1, false, Max26828), 
LZer44809 = zero_padding1D_layer(Max26828, 1, 0, Zer44809), 
LCon82736 = concatenate_layer([Zer44809,[[[0.5787, 0.5314, 0.2482, 0.2657, 0.6289, 0.1329, 0.5665, 0.7448, 0.3472, 0.1063, 0.7421], [0.32, 0.0216, 0.3178, 0.6054, 0.9423, 0.1949, 0.852, 0.7296, 0.1883, 0.024, 0.3742], [0.3998, 0.8171, 0.3988, 0.2107, 0.8274, 0.9867, 0.9581, 0.7166, 0.9462, 0.7153, 0.0798]]]], 2, Con82736), 
LSub86237 = subtract_layer(Res1795,Con82736, Sub86237), 
LSep18242 = separable_conv1D_layer([[[0.6619], [0.5133]]], 1,[[[[0.852]]],[[[0.163, 0.9649, 0.0657]]]],[0, 0, 0], 1, false, Sep18242), 
LCro46121 = cropping1D_layer(Sep18242, 1, 0, Cro46121), 
LZer32200 = zero_padding1D_layer(Cro46121, 2, 0, Zer32200), 
LCon16636 = concatenate_layer([Zer32200,[[[0.5298, 0.9328, 0.0707, 0.5486, 0.5212, 0.4536, 0.145, 0.9966, 0.229], [0.6749, 0.2626, 0.7297, 0.3888, 0.7876, 0.0788, 0.5869, 0.1358, 0.1486], [0.5009, 0.9372, 0.2028, 0.3589, 0.6322, 0.3885, 0.0804, 0.8509, 0.7828]]]], 2, Con16636), 
LMin20008 = minimum_layer([Sub86237,Con16636], Min20008), 
LFla42883 = flatten_layer(Min20008, Fla42883), 
LDot94981 = dot_layer([[0.1143, 0.0102, 0.2437]], [[0.4267, 0.0117, 0.9164]], 1, 1, Dot94981), 
LRes46860 = reshape_layer(Dot94981, [1, 1], Res46860), 
LLoc24511 = locally_connected1D_layer(Res46860, 1,[[[0.2922, 0.9771, 0.0887, 0.9712]]],[[0, 0, 0, 0]], 1, Loc24511), 
LCro30145 = cropping1D_layer(Loc24511, 0, 0, Cro30145), 
LFla22677 = flatten_layer(Cro30145, Fla22677), 
LCon51287 = concatenate_layer([Fla22677,[[0.7107, 0.3536, 0.746, 0.5942, 0.6428, 0.7675, 0.4117, 0.5281, 0.7173, 0.7175, 0.6794, 0.1398, 0.3261, 0.1016, 0.5102, 0.9596, 0.2119, 0.4878, 0.1658, 0.1352, 0.5541, 0.2463, 0.6657, 0.9654, 0.4692, 0.8082, 0.7095, 0.072, 0.6077, 0.2347, 0.3979, 0.9862]]], 1, Con51287), 
LMax10744 = maximum_layer([Fla42883,Con51287], Max10744), 
exec_layers([LDen25272,LRes1795,LMul46222,LMax26828,LZer44809,LCon82736,LSub86237,LSep18242,LCro46121,LZer32200,LCon16636,LMin20008,LFla42883,LDot94981,LRes46860,LLoc24511,LCro30145,LFla22677,LCon51287,LMax10744],["Den25272","Res1795","Mul46222","Max26828","Zer44809","Con82736","Sub86237","Sep18242","Cro46121","Zer32200","Con16636","Min20008","Fla42883","Dot94981","Res46860","Loc24511","Cro30145","Fla22677","Con51287","Max10744"],Max10744,"Max10744")

Actual (Unparsed): [[0.0795420, 0.2659840, 0.0241457, 0.3702027, 0.9328000, 0.3536000, 0.7460000, 0.5942000, 0.6428000, 0.7675000, 0.9966000, 0.5281000, 0.7173000, 0.7175000, 0.6794000, 0.5172705, 0.3261000, 0.4614726, 0.5102000, 0.9596000, 0.2119000, 0.5869000, 0.1658000, 0.1486000, 0.5541000, 0.4219813, 0.6657000, 0.9654000, 0.9372000, 0.8082000, 0.7095000, 0.0720000, 0.6077000, 0.2347000, 0.8509000, 0.9862000]]

Expected (Unparsed): [[0.079542049926,0.265984041693,0.024145721521,0.3702027400000001,0.9328,0.3536,0.746,0.5942,0.6428,0.7675,0.9966,0.5281,0.7173,0.7175,0.6794,0.51727054,0.3261,0.4614725700000001,0.5102,0.9596,0.2119,0.5869,0.1658,0.1486,0.5541,0.42198126084,0.6657,0.9654,0.9372,0.8082,0.7095,0.072,0.6077,0.2347,0.8509,0.9862]]

Actual:   [[0.0796, 0.266, 0.0242, 0.3703, 0.9328, 0.3536, 0.746, 0.5942, 0.6428, 0.7675, 0.9966, 0.5281, 0.7173, 0.7175, 0.6794, 0.5173, 0.3261, 0.4615, 0.5102, 0.9596, 0.2119, 0.5869, 0.1658, 0.1486, 0.5541, 0.422, 0.6657, 0.9654, 0.9372, 0.8082, 0.7095, 0.072, 0.6077, 0.2347, 0.8509, 0.9862]]

Expected: [[0.0796, 0.266, 0.0242, 0.3703, 0.9328, 0.3536, 0.746, 0.5942, 0.6428, 0.7675, 0.9966, 0.5281, 0.7173, 0.7175, 0.6794, 0.5173, 0.3261, 0.4615, 0.5102, 0.9596, 0.2119, 0.5869, 0.1658, 0.1486, 0.5541, 0.422, 0.6657, 0.9654, 0.9372, 0.8082, 0.7095, 0.072, 0.6077, 0.2347, 0.8509, 0.9862]]