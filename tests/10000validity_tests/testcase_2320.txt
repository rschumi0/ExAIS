import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Max23389 = tf.keras.layers.Input(shape=([2, 2]))

Max23389 = keras.layers.MaxPool1D(pool_size=(2), name = 'Max23389', )(in0Max23389)
Bat22781 = keras.layers.BatchNormalization(axis=2, epsilon=0.7373348250148851,  name = 'Bat22781', )(Max23389)
model = tf.keras.models.Model(inputs=[in0Max23389], outputs=Bat22781)
w = model.get_layer('Bat22781').get_weights() 
w[0] = np.array([0.9635, 0.3951])
w[1] = np.array([0.4477, 0.04])
w[2] = np.array([0.5745, 0.8357])
w[3] = np.array([0.701, 0.8913])
model.get_layer('Bat22781').set_weights(w) 
in0Max23389 = tf.constant([[[1.1965, 1.7165], [1.4229, 1.7638]]])
print (np.array2string(model.predict([in0Max23389],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Bat22781.png')

LMax23389 = max_pool1D_layer([[[1.1965, 1.7165], [1.4229, 1.7638]]], 2, Max23389), 
LBat22781 = batch_normalization_layer(Max23389, 2, 0.7373348250148851, [0.9635, 0.3951], [0.4477, 0.04], [0.5745, 0.8357], [0.701, 0.8913], Bat22781), 
exec_layers([LMax23389,LBat22781],["Max23389","Bat22781"],Bat22781,"Bat22781")

Actual (Unparsed): [[[1.1292887, 0.3273359]]]

Expected (Unparsed): [[[1.1292886988720439,0.3273359352711027]]]

Actual:   [[[1.1293, 0.3274]]]

Expected: [[[1.1293, 0.3274]]]