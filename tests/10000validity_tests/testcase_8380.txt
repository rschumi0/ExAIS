import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Min37588 = tf.keras.layers.Input(shape=([2, 1, 2, 2]))
in1Min37588 = tf.keras.layers.Input(shape=([2, 1, 2, 2]))
in0Cro87351 = tf.keras.layers.Input(shape=([1, 2, 1]))
in0Mul68795 = tf.keras.layers.Input(shape=([2, 2, 1, 1]))
in1Mul68795 = tf.keras.layers.Input(shape=([2, 2, 1, 1]))
in0Con48712 = tf.keras.layers.Input(shape=([2, 2, 3, 1]))
in0Max50391 = tf.keras.layers.Input(shape=([2, 1, 1, 2]))
in1Max50391 = tf.keras.layers.Input(shape=([2, 1, 1, 2]))

Min37588 = keras.layers.Minimum(name = 'Min37588', )([in0Min37588,in1Min37588])
Zer92520 = keras.layers.ZeroPadding3D(padding=((0, 0), (1, 0), (1, 0)), name = 'Zer92520', )(Min37588)
Cro87351 = keras.layers.Cropping2D(cropping=((0, 0), (1, 0)), name = 'Cro87351', )(in0Cro87351)
Res89698 = keras.layers.Reshape((1, 1, 1, 1), name = 'Res89698', )(Cro87351)
Zer12476 = keras.layers.ZeroPadding3D(padding=((1, 0), (1, 0), (0, 0)), name = 'Zer12476', )(Res89698)
Mul68795 = keras.layers.Multiply(name = 'Mul68795', )([in0Mul68795,in1Mul68795])
Sub17864 = keras.layers.Subtract(name = 'Sub17864', )([Zer12476,Mul68795])
Zer83060 = keras.layers.ZeroPadding3D(padding=((0, 0), (0, 0), (2, 0)), name = 'Zer83060', )(Sub17864)
Con48712 = keras.layers.Concatenate(axis=4, name = 'Con48712', )([Zer83060,in0Con48712])
Min80526 = keras.layers.Minimum(name = 'Min80526', )([Zer92520,Con48712])
Res46677 = keras.layers.Reshape((2, 2, 6), name = 'Res46677', )(Min80526)
Res16515 = keras.layers.Reshape((2, 12), name = 'Res16515', )(Res46677)
Max50391 = keras.layers.Maximum(name = 'Max50391', )([in0Max50391,in1Max50391])
Res14031 = keras.layers.Reshape((2, 1, 2), name = 'Res14031', )(Max50391)
Res13425 = keras.layers.Reshape((2, 2), name = 'Res13425', )(Res14031)
Dot70224 = keras.layers.Dot(axes=(1, 1), name = 'Dot70224', )([Res16515,Res13425])
Zer44079 = keras.layers.ZeroPadding1D(padding=((1, 1)), name = 'Zer44079', )(Dot70224)
model = tf.keras.models.Model(inputs=[in0Min37588,in1Min37588,in0Cro87351,in0Mul68795,in1Mul68795,in0Con48712,in0Max50391,in1Max50391], outputs=Zer44079)
in0Min37588 = tf.constant([[[[[0.7084, 0.0928], [0.8062, 0.8547]]], [[[0.9179, 0.5719], [0.7728, 0.5887]]]]])
in1Min37588 = tf.constant([[[[[0.7159, 0.3312], [0.2964, 0.8106]]], [[[0.9134, 0.4854], [0.6144, 0.9759]]]]])
in0Cro87351 = tf.constant([[[[1.0183], [1.5816]]]])
in0Mul68795 = tf.constant([[[[[0.8221]], [[0.3158]]], [[[0.8781]], [[0.7526]]]]])
in1Mul68795 = tf.constant([[[[[0.2644]], [[0.4253]]], [[[0.6849]], [[0.7383]]]]])
in0Con48712 = tf.constant([[[[[0.6713], [0.157], [0.227]], [[0.933], [0.4448], [0.8097]]], [[[0.1723], [0.304], [0.147]], [[0.2822], [0.6116], [0.4098]]]]])
in0Max50391 = tf.constant([[[[[0.4681, 0.3078]]], [[[0.1044, 0.658]]]]])
in1Max50391 = tf.constant([[[[[0.8604, 0.1234]]], [[[0.4248, 0.3696]]]]])
print (np.array2string(model.predict([in0Min37588,in1Min37588,in0Cro87351,in0Mul68795,in1Mul68795,in0Con48712,in0Max50391,in1Max50391],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Zer44079.png')

LMin37588 = minimum_layer([[[[[[0.7084, 0.0928], [0.8062, 0.8547]]], [[[0.9179, 0.5719], [0.7728, 0.5887]]]]], [[[[[0.7159, 0.3312], [0.2964, 0.8106]]], [[[0.9134, 0.4854], [0.6144, 0.9759]]]]]], Min37588), 
LZer92520 = zero_padding3D_layer(Min37588, 0, 0, 1, 0, 1, 0, Zer92520), 
LCro87351 = cropping2D_layer([[[[1.0183], [1.5816]]]], 0, 0, 1, 0, Cro87351), 
LRes89698 = reshape_layer(Cro87351, [1, 1, 1, 1], Res89698), 
LZer12476 = zero_padding3D_layer(Res89698, 1, 0, 1, 0, 0, 0, Zer12476), 
LMul68795 = multiply_layer([[[[[[0.8221]], [[0.3158]]], [[[0.8781]], [[0.7526]]]]], [[[[[0.2644]], [[0.4253]]], [[[0.6849]], [[0.7383]]]]]], Mul68795), 
LSub17864 = subtract_layer(Zer12476,Mul68795, Sub17864), 
LZer83060 = zero_padding3D_layer(Sub17864, 0, 0, 0, 0, 2, 0, Zer83060), 
LCon48712 = concatenate_layer([Zer83060,[[[[[0.6713], [0.157], [0.227]], [[0.933], [0.4448], [0.8097]]], [[[0.1723], [0.304], [0.147]], [[0.2822], [0.6116], [0.4098]]]]]], 4, Con48712), 
LMin80526 = minimum_layer([Zer92520,Con48712], Min80526), 
LRes46677 = reshape_layer(Min80526, [2, 2, 6], Res46677), 
LRes16515 = reshape_layer(Res46677, [2, 12], Res16515), 
LMax50391 = maximum_layer([[[[[[0.4681, 0.3078]]], [[[0.1044, 0.658]]]]], [[[[[0.8604, 0.1234]]], [[[0.4248, 0.3696]]]]]], Max50391), 
LRes14031 = reshape_layer(Max50391, [2, 1, 2], Res14031), 
LRes13425 = reshape_layer(Res14031, [2, 2], Res13425), 
LDot70224 = dot_layer(Res16515,Res13425, 1, 1, Dot70224), 
LZer44079 = zero_padding1D_layer(Dot70224, 1, 1, Zer44079), 
exec_layers([LMin37588,LZer92520,LCro87351,LRes89698,LZer12476,LMul68795,LSub17864,LZer83060,LCon48712,LMin80526,LRes46677,LRes16515,LMax50391,LRes14031,LRes13425,LDot70224,LZer44079],["Min37588","Zer92520","Cro87351","Res89698","Zer12476","Mul68795","Sub17864","Zer83060","Con48712","Min80526","Res46677","Res16515","Max50391","Res14031","Res13425","Dot70224","Zer44079"],Zer44079,"Zer44079")

Actual (Unparsed): [[[0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000], [-0.4424986, -0.4626326], [0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.2860430, 0.3479570], [0.1454370, 0.3629347], [0.8707489, 0.5188741], [0.0000000, 0.0000000]]]

Expected (Unparsed): [[[0,0],[0.0,0.0],[0.0,0.0],[0.0,0.0],[0.0,0.0],[-0.442498592808,-0.462632639292],[0.0,0.0],[0.0,0.0],[0.0,0.0],[0.0,0.0],[0.28604304,0.34795704],[0.14543701970399997,0.362934662028],[0.87074892,0.51887406],[0,0]]]

Actual:   [[[0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [-0.4424, -0.4626], [0, 0], [0, 0], [0, 0], [0, 0], [0.2861, 0.348], [0.1455, 0.363], [0.8708, 0.5189], [0, 0]]]

Expected: [[[0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [-0.4424, -0.4626], [0, 0], [0, 0], [0, 0], [0, 0], [0.2861, 0.348], [0.1455, 0.363], [0.8708, 0.5189], [0, 0]]]