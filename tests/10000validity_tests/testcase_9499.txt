import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0ELU10922 = tf.keras.layers.Input(shape=([1, 2, 1, 2]))

ELU10922 = keras.layers.ELU(alpha=4.892265719154196, name = 'ELU10922', input_shape=(1, 2, 1, 2))(in0ELU10922)
Thr46105 = keras.layers.ThresholdedReLU(theta=5.865639378827886, name = 'Thr46105', )(ELU10922)
ELU60329 = keras.layers.ELU(alpha=-0.969580083128692, name = 'ELU60329', )(Thr46105)
Res67912 = keras.layers.Reshape((1, 2, 2), name = 'Res67912', )(ELU60329)
Con95141 = keras.layers.Conv2DTranspose(3, (1, 1),strides=(1, 1), padding='same', name = 'Con95141', )(Res67912)
model = tf.keras.models.Model(inputs=[in0ELU10922], outputs=Con95141)
w = model.get_layer('Con95141').get_weights() 
w[0] = np.array([[[[0.8896, 0.5215], [0.5535, 0.691], [0.4933, 0.7578]]]])
w[1] = np.array([0, 0, 0])
model.get_layer('Con95141').set_weights(w) 
in0ELU10922 = tf.constant([[[[[0.4211, 0.1138]], [[0.3093, 0.107]]]]])
print (np.array2string(model.predict([in0ELU10922],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Con95141.png')

LELU10922 = elu_layer([[[[[0.4211, 0.1138]], [[0.3093, 0.107]]]]], 4.892265719154196, ELU10922), 
LThr46105 = thresholded_relu_layer(ELU10922, 5.865639378827886, Thr46105), 
LELU60329 = elu_layer(Thr46105, -0.969580083128692, ELU60329), 
LRes67912 = reshape_layer(ELU60329, [1, 2, 2], Res67912), 
LCon95141 = conv2D_transpose_layer(Res67912, 1, 1,[[[[0.8896, 0.5215], [0.5535, 0.691], [0.4933, 0.7578]]]],[0, 0, 0], 1, 1, true, Con95141), 
exec_layers([LELU10922,LThr46105,LELU60329,LRes67912,LCon95141],["ELU10922","Thr46105","ELU60329","Res67912","Con95141"],Con95141,"Con95141")

Actual (Unparsed): [[[[0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000]]]]

Expected (Unparsed): [[[[0.0,0.0,0.0],[0.0,0.0,0.0]]]]

Actual:   [[[[0, 0, 0], [0, 0, 0]]]]

Expected: [[[[0, 0, 0], [0, 0, 0]]]]