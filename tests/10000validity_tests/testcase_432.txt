import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Max29560 = tf.keras.layers.Input(shape=([2, 2]))
in0Con89523 = tf.keras.layers.Input(shape=([3, 2, 2]))
in0Sub77842 = tf.keras.layers.Input(shape=([3, 2, 3]))
in1Sub77842 = tf.keras.layers.Input(shape=([3, 2, 3]))
in0Max58939 = tf.keras.layers.Input(shape=([1, 1]))
in0Max40418 = tf.keras.layers.Input(shape=([2, 2, 1]))
in1Max40418 = tf.keras.layers.Input(shape=([2, 2, 1]))
in0Con56392 = tf.keras.layers.Input(shape=([3, 2, 2]))

Max29560 = keras.layers.MaxPool1D(pool_size=(2), strides=(1), padding='valid', name = 'Max29560', )(in0Max29560)
Res73699 = keras.layers.Reshape((1, 2, 1), name = 'Res73699', )(Max29560)
Res88529 = keras.layers.Reshape((1, 2, 1, 1), name = 'Res88529', )(Res73699)
Cro98109 = keras.layers.Cropping3D(cropping=((0, 0), (0, 0), (0, 0)), name = 'Cro98109', )(Res88529)
Res27471 = keras.layers.Reshape((1, 2, 1), name = 'Res27471', )(Cro98109)
Zer96887 = keras.layers.ZeroPadding2D(padding=((2, 0), (0, 0)), name = 'Zer96887', )(Res27471)
Con89523 = keras.layers.Concatenate(axis=3, name = 'Con89523', )([Zer96887,in0Con89523])
Sub77842 = keras.layers.Subtract(name = 'Sub77842', )([in0Sub77842,in1Sub77842])
Mul40245 = keras.layers.Multiply(name = 'Mul40245', )([Con89523,Sub77842])
Max58939 = keras.layers.MaxPool1D(pool_size=(1), strides=(9), padding='same', name = 'Max58939', )(in0Max58939)
Res37562 = keras.layers.Reshape((1, 1, 1), name = 'Res37562', )(Max58939)
Zer35648 = keras.layers.ZeroPadding2D(padding=((1, 0), (1, 0)), name = 'Zer35648', )(Res37562)
Max40418 = keras.layers.Maximum(name = 'Max40418', )([in0Max40418,in1Max40418])
Max40267 = keras.layers.Maximum(name = 'Max40267', )([Zer35648,Max40418])
Zer13722 = keras.layers.ZeroPadding2D(padding=((1, 0), (0, 0)), name = 'Zer13722', )(Max40267)
Con56392 = keras.layers.Concatenate(axis=3, name = 'Con56392', )([Zer13722,in0Con56392])
Min45701 = keras.layers.Minimum(name = 'Min45701', )([Mul40245,Con56392])
model = tf.keras.models.Model(inputs=[in0Max29560,in0Con89523,in0Sub77842,in1Sub77842,in0Max58939,in0Max40418,in1Max40418,in0Con56392], outputs=Min45701)
in0Max29560 = tf.constant([[[1.1508, 1.8003], [1.8166, 1.9456]]])
in0Con89523 = tf.constant([[[[0.9148, 0.0382], [0.7062, 0.1612]], [[0.4924, 0.9994], [0.5569, 0.3517]], [[0.2816, 0.2048], [0.8992, 0.6689]]]])
in0Sub77842 = tf.constant([[[[0.53, 0.8397, 0.9966], [0.4628, 0.9457, 0.1961]], [[0.3522, 0.2577, 0.337], [0.4141, 0.7049, 0.2784]], [[0.1837, 0.3954, 0.261], [0.555, 0.8351, 0.5522]]]])
in1Sub77842 = tf.constant([[[[0.3511, 0.5964, 0.4774], [0.2376, 0.8645, 0.4735]], [[0.949, 0.3826, 0.8198], [0.4288, 0.7164, 0.5337]], [[0.0142, 0.1332, 0.4588], [0.0351, 0.711, 0.7756]]]])
in0Max58939 = tf.constant([[[1.872]]])
in0Max40418 = tf.constant([[[[0.9267], [0.8864]], [[0.014], [0.5003]]]])
in1Max40418 = tf.constant([[[[0.2411], [0.6398]], [[0.4443], [0.6319]]]])
in0Con56392 = tf.constant([[[[0.5384, 0.1808], [0.0972, 0.668]], [[0.1224, 0.5348], [0.7192, 0.8095]], [[0.3324, 0.0692], [0.3427, 0.9411]]]])
print (np.array2string(model.predict([in0Max29560,in0Con89523,in0Sub77842,in1Sub77842,in0Max58939,in0Max40418,in1Max40418,in0Con56392],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Min45701.png')

LMax29560 = max_pool1D_layer([[[1.1508, 1.8003], [1.8166, 1.9456]]], 2, 1, false, Max29560), 
LRes73699 = reshape_layer(Max29560, [1, 2, 1], Res73699), 
LRes88529 = reshape_layer(Res73699, [1, 2, 1, 1], Res88529), 
LCro98109 = cropping3D_layer(Res88529, 0, 0, 0, 0, 0, 0, Cro98109), 
LRes27471 = reshape_layer(Cro98109, [1, 2, 1], Res27471), 
LZer96887 = zero_padding2D_layer(Res27471, 2, 0, 0, 0, Zer96887), 
LCon89523 = concatenate_layer([Zer96887,[[[[0.9148, 0.0382], [0.7062, 0.1612]], [[0.4924, 0.9994], [0.5569, 0.3517]], [[0.2816, 0.2048], [0.8992, 0.6689]]]]], 3, Con89523), 
LSub77842 = subtract_layer([[[[0.53, 0.8397, 0.9966], [0.4628, 0.9457, 0.1961]], [[0.3522, 0.2577, 0.337], [0.4141, 0.7049, 0.2784]], [[0.1837, 0.3954, 0.261], [0.555, 0.8351, 0.5522]]]], [[[[0.3511, 0.5964, 0.4774], [0.2376, 0.8645, 0.4735]], [[0.949, 0.3826, 0.8198], [0.4288, 0.7164, 0.5337]], [[0.0142, 0.1332, 0.4588], [0.0351, 0.711, 0.7756]]]], Sub77842), 
LMul40245 = multiply_layer([Con89523,Sub77842], Mul40245), 
LMax58939 = max_pool1D_layer([[[1.872]]], 1, 9, true, Max58939), 
LRes37562 = reshape_layer(Max58939, [1, 1, 1], Res37562), 
LZer35648 = zero_padding2D_layer(Res37562, 1, 0, 1, 0, Zer35648), 
LMax40418 = maximum_layer([[[[[0.9267], [0.8864]], [[0.014], [0.5003]]]], [[[[0.2411], [0.6398]], [[0.4443], [0.6319]]]]], Max40418), 
LMax40267 = maximum_layer([Zer35648,Max40418], Max40267), 
LZer13722 = zero_padding2D_layer(Max40267, 1, 0, 0, 0, Zer13722), 
LCon56392 = concatenate_layer([Zer13722,[[[[0.5384, 0.1808], [0.0972, 0.668]], [[0.1224, 0.5348], [0.7192, 0.8095]], [[0.3324, 0.0692], [0.3427, 0.9411]]]]], 3, Con56392), 
LMin45701 = minimum_layer([Mul40245,Con56392], Min45701), 
exec_layers([LMax29560,LRes73699,LRes88529,LCro98109,LRes27471,LZer96887,LCon89523,LSub77842,LMul40245,LMax58939,LRes37562,LZer35648,LMax40418,LMax40267,LZer13722,LCon56392,LMin45701],["Max29560","Res73699","Res88529","Cro98109","Res27471","Zer96887","Con89523","Sub77842","Mul40245","Max58939","Res37562","Zer35648","Max40418","Max40267","Zer13722","Con56392","Min45701"],Min45701,"Min45701")

Actual (Unparsed): [[[[0.0000000, 0.2225708, 0.0198334], [0.0000000, 0.0573434, -0.0447169]], [[-0.0000000, -0.0615008, -0.4825103], [-0.0000000, -0.0064044, -0.0897890]], [[0.3079137, 0.0738355, -0.0405094], [1.0115175, 0.1115907, -0.1494323]]]]

Expected (Unparsed): [[[[0.0,0.22257083999999996,0.019833440000000004],[0.0,0.05734343999999996,-0.04471688]],[[-0.0,-0.06150076000000001,-0.48251031999999994],[-0.0,-0.006404350000000036,-0.08978900999999999]],[[0.3079137,0.07383552,-0.040509439999999994],[1.01151744,0.11159071999999999,-0.14943225999999996]]]]

Actual:   [[[[0, 0.2226, 0.0199], [0, 0.0574, -0.0447]], [[-0, -0.0615, -0.4825], [-0, -0.0064, -0.0897]], [[0.308, 0.0739, -0.0405], [1.0116, 0.1116, -0.1494]]]]

Expected: [[[[0, 0.2226, 0.0199], [0, 0.0574, -0.0447]], [[-0, -0.0615, -0.4825], [-0, -0.0064, -0.0897]], [[0.308, 0.0739, -0.0405], [1.0116, 0.1116, -0.1494]]]]