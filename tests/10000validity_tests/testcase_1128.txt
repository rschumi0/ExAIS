import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Dot87564 = tf.keras.layers.Input(shape=([2, 2]))
in1Dot87564 = tf.keras.layers.Input(shape=([2, 2]))

Dot87564 = keras.layers.Dot(axes=(2, 2), name = 'Dot87564', )([in0Dot87564,in1Dot87564])
Sim75921 = keras.layers.SimpleRNN(2,name = 'Sim75921', )(Dot87564)
Res36925 = keras.layers.Reshape((2, 1), name = 'Res36925', )(Sim75921)
Ave97294 = keras.layers.AveragePooling1D(pool_size=(2), name = 'Ave97294', )(Res36925)
model = tf.keras.models.Model(inputs=[in0Dot87564,in1Dot87564], outputs=Ave97294)
w = model.get_layer('Sim75921').get_weights() 
w[0] = np.array([[1, 2], [4, 7]])
w[1] = np.array([[5, 10], [4, 2]])
w[2] = np.array([9, 6])
model.get_layer('Sim75921').set_weights(w) 
in0Dot87564 = tf.constant([[[0.3786, 0.9969], [0.4559, 0.4433]]])
in1Dot87564 = tf.constant([[[0.7964, 0.5668], [0.3334, 0.8269]]])
print (np.array2string(model.predict([in0Dot87564,in1Dot87564],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Ave97294.png')

LDot87564 = dot_layer([[[0.3786, 0.9969], [0.4559, 0.4433]]], [[[0.7964, 0.5668], [0.3334, 0.8269]]], 2, 2, Dot87564), 
LSim75921 = simple_rnn_layer(Dot87564,[[1, 2], [4, 7]],[[5, 10], [4, 2]],[9, 6], Sim75921), 
LRes36925 = reshape_layer(Sim75921, [2, 1], Res36925), 
LAve97294 = average_pooling1D_layer(Res36925, 2, Ave97294), 
exec_layers([LDot87564,LSim75921,LRes36925,LAve97294],["Dot87564","Sim75921","Res36925","Ave97294"],Ave97294,"Ave97294")

Actual (Unparsed): [[[1.0000000]]]

Expected (Unparsed): [[[1.0]]]

Actual:   [[[1]]]

Expected: [[[1]]]