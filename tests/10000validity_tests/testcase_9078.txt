import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0ReL38379 = tf.keras.layers.Input(shape=([1, 2, 2]))

ReL38379 = keras.layers.ReLU(max_value=9.990017287951751, negative_slope=6.339379278679285, threshold=2.5536587826234625, name = 'ReL38379', input_shape=(1, 2, 2))(in0ReL38379)
Res22195 = keras.layers.Reshape((1, 4), name = 'Res22195', )(ReL38379)
Per85063 = keras.layers.Permute((2,1), name = 'Per85063',)(Res22195)
Fla35062 = keras.layers.Flatten(name = 'Fla35062', )(Per85063)
Res11083 = keras.layers.Reshape((4, 1), name = 'Res11083', )(Fla35062)
PRe9552 = keras.layers.PReLU(name = 'PRe9552', )(Res11083)
model = tf.keras.models.Model(inputs=[in0ReL38379], outputs=PRe9552)
w = model.get_layer('PRe9552').get_weights() 
w[0] = np.array([[0.5657], [0.9169], [0.1865], [0.9473]])
model.get_layer('PRe9552').set_weights(w) 
in0ReL38379 = tf.constant([[[[0.0498, 0.6739], [0.9676, 0.1775]]]])
print (np.array2string(model.predict([in0ReL38379],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='PRe9552.png')

LReL38379 = relu_layer([[[[0.0498, 0.6739], [0.9676, 0.1775]]]], 9.990017287951751, 6.339379278679285, 2.5536587826234625, ReL38379), 
LRes22195 = reshape_layer(ReL38379, [1, 4], Res22195), 
LPer85063 = permute_layer(Res22195, 2,1, Per85063), 
LFla35062 = flatten_layer(Per85063, Fla35062), 
LRes11083 = reshape_layer(Fla35062, [4, 1], Res11083), 
LPRe9552 = prelu_layer(Res11083, [[0.5657], [0.9169], [0.1865], [0.9473]], PRe9552), 
exec_layers([LReL38379,LRes22195,LPer85063,LFla35062,LRes11083,LPRe9552],["ReL38379","Res22195","Per85063","Fla35062","Res11083","PRe9552"],PRe9552,"PRe9552")

Actual (Unparsed): [[[-8.9793055], [-10.9262424], [-1.8751882], [-14.2695321]]]

Expected (Unparsed): [[[-8.979305460404122],[-10.926242403426308],[-1.875188155818133],[-14.269532058220806]]]

Actual:   [[[-8.9793], [-10.9262], [-1.8751], [-14.2695]]]

Expected: [[[-8.9793], [-10.9262], [-1.8751], [-14.2695]]]