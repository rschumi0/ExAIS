import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Max73111 = tf.keras.layers.Input(shape=([2, 2, 2, 2]))
in1Max73111 = tf.keras.layers.Input(shape=([2, 2, 2, 2]))
in0Cro58001 = tf.keras.layers.Input(shape=([4, 4, 4, 1]))
in0Con2024 = tf.keras.layers.Input(shape=([3, 2]))
in0Dot51697 = tf.keras.layers.Input(shape=([3, 3]))
in1Dot51697 = tf.keras.layers.Input(shape=([3, 3]))
in0Min42774 = tf.keras.layers.Input(shape=([1, 1]))
in1Min42774 = tf.keras.layers.Input(shape=([1, 1]))
in0Con48838 = tf.keras.layers.Input(shape=([3, 2]))
in0Con46115 = tf.keras.layers.Input(shape=([4, 29]))

Max73111 = keras.layers.Maximum(name = 'Max73111', )([in0Max73111,in1Max73111])
Zer30049 = keras.layers.ZeroPadding3D(padding=((1, 1), (1, 1), (1, 1)), name = 'Zer30049', )(Max73111)
Res17628 = keras.layers.Reshape((4, 4, 8), name = 'Res17628', )(Zer30049)
Res34246 = keras.layers.Reshape((4, 32), name = 'Res34246', )(Res17628)
Cro58001 = keras.layers.Cropping3D(cropping=((1, 2), (1, 2), (2, 1)), name = 'Cro58001', )(in0Cro58001)
Res62859 = keras.layers.Reshape((1, 1, 1), name = 'Res62859', )(Cro58001)
Res95628 = keras.layers.Reshape((1, 1), name = 'Res95628', )(Res62859)
Zer60171 = keras.layers.ZeroPadding1D(padding=((2, 0)), name = 'Zer60171', )(Res95628)
Con2024 = keras.layers.Concatenate(axis=2, name = 'Con2024', )([Zer60171,in0Con2024])
Dot51697 = keras.layers.Dot(axes=(2, 2), name = 'Dot51697', )([in0Dot51697,in1Dot51697])
Sub90756 = keras.layers.Subtract(name = 'Sub90756', )([Con2024,Dot51697])
Min42774 = keras.layers.Minimum(name = 'Min42774', )([in0Min42774,in1Min42774])
Zer56819 = keras.layers.ZeroPadding1D(padding=((2, 0)), name = 'Zer56819', )(Min42774)
Con48838 = keras.layers.Concatenate(axis=2, name = 'Con48838', )([Zer56819,in0Con48838])
Mul84011 = keras.layers.Multiply(name = 'Mul84011', )([Sub90756,Con48838])
Zer17007 = keras.layers.ZeroPadding1D(padding=((1, 0)), name = 'Zer17007', )(Mul84011)
Con46115 = keras.layers.Concatenate(axis=2, name = 'Con46115', )([Zer17007,in0Con46115])
Min13090 = keras.layers.Minimum(name = 'Min13090', )([Res34246,Con46115])
model = tf.keras.models.Model(inputs=[in0Max73111,in1Max73111,in0Cro58001,in0Con2024,in0Dot51697,in1Dot51697,in0Min42774,in1Min42774,in0Con48838,in0Con46115], outputs=Min13090)
in0Max73111 = tf.constant([[[[[0.18, 0.9908], [0.1547, 0.4992]], [[0.1672, 0.735], [0.3002, 0.4422]]], [[[0.4773, 0.51], [0.3517, 0.1682]], [[0.8262, 0.4245], [0.8974, 0.3321]]]]])
in1Max73111 = tf.constant([[[[[0.499, 0.8765], [0.5619, 0.3198]], [[0.3638, 0.1427], [0.2818, 0.8918]]], [[[0.4394, 0.3192], [0.227, 0.9707]], [[0.8511, 0.5404], [0.5839, 0.7931]]]]])
in0Cro58001 = tf.constant([[[[[1.2485], [1.0246], [1.2347], [1.9673]], [[1.4052], [1.7736], [1.0891], [1.4644]], [[1.7715], [1.6894], [1.4563], [1.2034]], [[1.2106], [1.4588], [1.3803], [1.688]]], [[[1.0101], [1.8071], [1.3036], [1.1017]], [[1.5345], [1.6231], [1.7747], [1.3747]], [[1.559], [1.0191], [1.1674], [1.999]], [[1.4089], [1.6027], [1.5429], [1.7854]]], [[[1.5169], [1.1132], [1.8519], [1.3341]], [[1.9083], [1.0991], [1.6489], [1.7195]], [[1.4233], [1.502], [1.3678], [1.7793]], [[1.1961], [1.8498], [1.9993], [1.4397]]], [[[1.0218], [1.2619], [1.6966], [1.7125]], [[1.7668], [1.6193], [1.4399], [1.3515]], [[1.9002], [1.0658], [1.3916], [1.6729]], [[1.5605], [1.4686], [1.9876], [1.7093]]]]])
in0Con2024 = tf.constant([[[0.673, 0.4587], [0.3025, 0.2178], [0.6505, 0.6817]]])
in0Dot51697 = tf.constant([[[0.3098, 0.5914, 0.1258], [0.6961, 0.8731, 0.5102], [0.0368, 0.8661, 0.7119]]])
in1Dot51697 = tf.constant([[[0.2365, 0.5532, 0.6713], [0.2406, 0.6045, 0.5275], [0.8379, 0.8555, 0.224]]])
in0Min42774 = tf.constant([[[0.0938]]])
in1Min42774 = tf.constant([[[0.118]]])
in0Con48838 = tf.constant([[[0.8375, 0.5801], [0.7021, 0.3639], [0.447, 0.6731]]])
in0Con46115 = tf.constant([[[0.7287, 0.7945, 0.3005, 0.6511, 0.7963, 0.0443, 0.5334, 0.6278, 0.095, 0.5743, 0.5555, 0.9471, 0.4535, 0.4635, 0.6459, 0.4811, 0.1331, 0.0233, 0.6394, 0.1022, 0.0923, 0.547, 0.8815, 0.4327, 0.6048, 0.0929, 0.9206, 0.5612, 0.6105], [0.2149, 0.2956, 0.8919, 0.7094, 0.9385, 0.5764, 0.5668, 0.0218, 0.6966, 0.893, 0.7042, 0.2345, 0.3839, 0.5504, 0.0372, 0.0265, 0.1682, 0.9663, 0.4017, 0.727, 0.2024, 0.0937, 0.9236, 0.4953, 0.9271, 0.6924, 0.6858, 0.5328, 0.2166], [0.3004, 0.1164, 0.8388, 0.232, 0.5219, 0.3347, 0.802, 0.4728, 0.2971, 0.2141, 0.4857, 0.1869, 0.1468, 0.9765, 0.8075, 0.993, 0.9975, 0.7232, 0.9414, 0.2993, 0.0814, 0.4193, 0.1755, 0.8582, 0.5812, 0.5046, 0.1514, 0.5902, 0.1419], [0.4801, 0.8742, 0.6275, 0.1076, 0.5326, 0.1406, 0.3853, 0.3594, 0.504, 0.0589, 0.3465, 0.9246, 0.2842, 0.1513, 0.1669, 0.112, 0.0143, 0.1222, 0.6489, 0.7825, 0.323, 0.7538, 0.1137, 0.5108, 0.1855, 0.5449, 0.7057, 0.8134, 0.8969]]])
print (np.array2string(model.predict([in0Max73111,in1Max73111,in0Cro58001,in0Con2024,in0Dot51697,in1Dot51697,in0Min42774,in1Min42774,in0Con48838,in0Con46115],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Min13090.png')

LMax73111 = maximum_layer([[[[[[0.18, 0.9908], [0.1547, 0.4992]], [[0.1672, 0.735], [0.3002, 0.4422]]], [[[0.4773, 0.51], [0.3517, 0.1682]], [[0.8262, 0.4245], [0.8974, 0.3321]]]]], [[[[[0.499, 0.8765], [0.5619, 0.3198]], [[0.3638, 0.1427], [0.2818, 0.8918]]], [[[0.4394, 0.3192], [0.227, 0.9707]], [[0.8511, 0.5404], [0.5839, 0.7931]]]]]], Max73111), 
LZer30049 = zero_padding3D_layer(Max73111, 1, 1, 1, 1, 1, 1, Zer30049), 
LRes17628 = reshape_layer(Zer30049, [4, 4, 8], Res17628), 
LRes34246 = reshape_layer(Res17628, [4, 32], Res34246), 
LCro58001 = cropping3D_layer([[[[[1.2485], [1.0246], [1.2347], [1.9673]], [[1.4052], [1.7736], [1.0891], [1.4644]], [[1.7715], [1.6894], [1.4563], [1.2034]], [[1.2106], [1.4588], [1.3803], [1.688]]], [[[1.0101], [1.8071], [1.3036], [1.1017]], [[1.5345], [1.6231], [1.7747], [1.3747]], [[1.559], [1.0191], [1.1674], [1.999]], [[1.4089], [1.6027], [1.5429], [1.7854]]], [[[1.5169], [1.1132], [1.8519], [1.3341]], [[1.9083], [1.0991], [1.6489], [1.7195]], [[1.4233], [1.502], [1.3678], [1.7793]], [[1.1961], [1.8498], [1.9993], [1.4397]]], [[[1.0218], [1.2619], [1.6966], [1.7125]], [[1.7668], [1.6193], [1.4399], [1.3515]], [[1.9002], [1.0658], [1.3916], [1.6729]], [[1.5605], [1.4686], [1.9876], [1.7093]]]]], 1, 2, 1, 2, 2, 1, Cro58001), 
LRes62859 = reshape_layer(Cro58001, [1, 1, 1], Res62859), 
LRes95628 = reshape_layer(Res62859, [1, 1], Res95628), 
LZer60171 = zero_padding1D_layer(Res95628, 2, 0, Zer60171), 
LCon2024 = concatenate_layer([Zer60171,[[[0.673, 0.4587], [0.3025, 0.2178], [0.6505, 0.6817]]]], 2, Con2024), 
LDot51697 = dot_layer([[[0.3098, 0.5914, 0.1258], [0.6961, 0.8731, 0.5102], [0.0368, 0.8661, 0.7119]]], [[[0.2365, 0.5532, 0.6713], [0.2406, 0.6045, 0.5275], [0.8379, 0.8555, 0.224]]], 2, 2, Dot51697), 
LSub90756 = subtract_layer(Con2024,Dot51697, Sub90756), 
LMin42774 = minimum_layer([[[[0.0938]]], [[[0.118]]]], Min42774), 
LZer56819 = zero_padding1D_layer(Min42774, 2, 0, Zer56819), 
LCon48838 = concatenate_layer([Zer56819,[[[0.8375, 0.5801], [0.7021, 0.3639], [0.447, 0.6731]]]], 2, Con48838), 
LMul84011 = multiply_layer([Sub90756,Con48838], Mul84011), 
LZer17007 = zero_padding1D_layer(Mul84011, 1, 0, Zer17007), 
LCon46115 = concatenate_layer([Zer17007,[[[0.7287, 0.7945, 0.3005, 0.6511, 0.7963, 0.0443, 0.5334, 0.6278, 0.095, 0.5743, 0.5555, 0.9471, 0.4535, 0.4635, 0.6459, 0.4811, 0.1331, 0.0233, 0.6394, 0.1022, 0.0923, 0.547, 0.8815, 0.4327, 0.6048, 0.0929, 0.9206, 0.5612, 0.6105], [0.2149, 0.2956, 0.8919, 0.7094, 0.9385, 0.5764, 0.5668, 0.0218, 0.6966, 0.893, 0.7042, 0.2345, 0.3839, 0.5504, 0.0372, 0.0265, 0.1682, 0.9663, 0.4017, 0.727, 0.2024, 0.0937, 0.9236, 0.4953, 0.9271, 0.6924, 0.6858, 0.5328, 0.2166], [0.3004, 0.1164, 0.8388, 0.232, 0.5219, 0.3347, 0.802, 0.4728, 0.2971, 0.2141, 0.4857, 0.1869, 0.1468, 0.9765, 0.8075, 0.993, 0.9975, 0.7232, 0.9414, 0.2993, 0.0814, 0.4193, 0.1755, 0.8582, 0.5812, 0.5046, 0.1514, 0.5902, 0.1419], [0.4801, 0.8742, 0.6275, 0.1076, 0.5326, 0.1406, 0.3853, 0.3594, 0.504, 0.0589, 0.3465, 0.9246, 0.2842, 0.1513, 0.1669, 0.112, 0.0143, 0.1222, 0.6489, 0.7825, 0.323, 0.7538, 0.1137, 0.5108, 0.1855, 0.5449, 0.7057, 0.8134, 0.8969]]]], 2, Con46115), 
LMin13090 = minimum_layer([Res34246,Con46115], Min13090), 
exec_layers([LMax73111,LZer30049,LRes17628,LRes34246,LCro58001,LRes62859,LRes95628,LZer60171,LCon2024,LDot51697,LSub90756,LMin42774,LZer56819,LCon48838,LMul84011,LZer17007,LCon46115,LMin13090],["Max73111","Zer30049","Res17628","Res34246","Cro58001","Res62859","Res95628","Zer60171","Con2024","Dot51697","Sub90756","Min42774","Zer56819","Con48838","Mul84011","Zer17007","Con46115","Min13090"],Min13090,"Min13090")

Actual (Unparsed): [[[0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000], [-0.0000000, 0.0000000, -0.1943354, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0218000, 0.6966000, 0.5619000, 0.4992000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0265000, 0.1682000, 0.3002000, 0.4017000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000], [-0.0000000, -0.4647207, -0.4463903, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.4728000, 0.2971000, 0.2141000, 0.4857000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.8511000, 0.5404000, 0.7232000, 0.7931000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000], [0.0000000, -0.1150751, -0.1679713, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000]]]

Expected (Unparsed): [[[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,-0.19433542593199998,0,0,0,0,0,0,0,0.0218,0.6966,0.5619,0.4992,0,0,0,0,0.0265,0.1682,0.3002,0.4017,0,0,0,0,0,0,0,0,0,0],[0,-0.46472076933100004,-0.44639032215600005,0,0,0,0,0,0,0,0.4728,0.2971,0.2141,0.4857,0,0,0,0,0.8511,0.5404,0.7232,0.7931,0,0,0,0,0,0,0,0,0,0],[0,-0.11507513466,-0.16797134439700004,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]]]

Actual:   [[[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [-0, 0, -0.1943, 0, 0, 0, 0, 0, 0, 0, 0.0218, 0.6966, 0.5619, 0.4992, 0, 0, 0, 0, 0.0265, 0.1682, 0.3002, 0.4017, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [-0, -0.4647, -0.4463, 0, 0, 0, 0, 0, 0, 0, 0.4728, 0.2971, 0.2141, 0.4857, 0, 0, 0, 0, 0.8511, 0.5404, 0.7232, 0.7931, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, -0.115, -0.1679, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]]]

Expected: [[[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, -0.1943, 0, 0, 0, 0, 0, 0, 0, 0.0218, 0.6966, 0.5619, 0.4992, 0, 0, 0, 0, 0.0265, 0.1682, 0.3002, 0.4017, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, -0.4647, -0.4463, 0, 0, 0, 0, 0, 0, 0, 0.4728, 0.2971, 0.2141, 0.4857, 0, 0, 0, 0, 0.8511, 0.5404, 0.7232, 0.7931, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, -0.115, -0.1679, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]]]