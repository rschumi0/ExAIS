import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Loc10725 = tf.keras.layers.Input(shape=([2, 2, 2]))
in0Sub56693 = tf.keras.layers.Input(shape=([3, 3, 2, 3]))
in1Sub56693 = tf.keras.layers.Input(shape=([3, 3, 2, 3]))

Loc10725 = keras.layers.LocallyConnected2D(4, (2, 2),strides=(6, 2), name = 'Loc10725', )(in0Loc10725)
Res617 = keras.layers.Reshape((1, 4), name = 'Res617', )(Loc10725)
Zer89359 = keras.layers.ZeroPadding1D(padding=((1, 0)), name = 'Zer89359', )(Res617)
Sub56693 = keras.layers.Subtract(name = 'Sub56693', )([in0Sub56693,in1Sub56693])
Res2495 = keras.layers.Reshape((3, 3, 6), name = 'Res2495', )(Sub56693)
Res20236 = keras.layers.Reshape((3, 18), name = 'Res20236', )(Res2495)
Sep42420 = keras.layers.SeparableConv1D(4, (3),strides=(2), padding='same', name = 'Sep42420', )(Res20236)
Add67653 = keras.layers.Add(name = 'Add67653', )([Zer89359,Sep42420])
Lea28570 = keras.layers.LeakyReLU(alpha=2.9576599123441647, name = 'Lea28570', )(Add67653)
model = tf.keras.models.Model(inputs=[in0Loc10725,in0Sub56693,in1Sub56693], outputs=Lea28570)
w = model.get_layer('Loc10725').get_weights() 
w[0] = np.array([[[0.3865, 0.2695, 0.8574, 0.351], [0.3272, 0.4025, 0.3573, 0.8931], [0.7512, 0.0428, 0.0302, 0.9412], [0.2603, 0.2433, 0.0887, 0.0123], [0.9075, 0.7962, 0.3322, 0.6716], [0.6656, 0.7335, 0.1984, 0.4465], [0.3544, 0.8994, 0.0998, 0.457], [0.243, 0.5976, 0.3324, 0.0379]]])
w[1] = np.array([[[0, 0, 0, 0]]])
model.get_layer('Loc10725').set_weights(w) 
w = model.get_layer('Sep42420').get_weights() 
w[0] = np.array([[[0.0476], [0.4323], [0.0157], [0.6201], [0.6676], [0.9348], [0.4019], [0.9212], [0.4875], [0.3266], [0.1102], [0.3181], [0.6018], [0.5598], [0.6444], [0.62], [0.5759], [0.0826]], [[0.2275], [0.6372], [0.1675], [0.1347], [0.3587], [0.9799], [0.2637], [0.3833], [0.4306], [0.554], [0.7977], [0.2599], [0.9809], [0.7291], [0.9147], [0.2865], [0.5536], [0.5964]], [[0.1995], [0.8797], [0.0751], [0.9492], [0.3469], [0.608], [0.1115], [0.6234], [0.2604], [0.6453], [0.3694], [0.616], [0.1983], [0.2091], [0.3228], [0.9629], [0.2493], [0.1042]]])
w[1] = np.array([[[0.9835, 0.4857, 0.5411, 0.9691], [0.3332, 0.7065, 0.2181, 0.5825], [0.7601, 0.6559, 0.8815, 0.314], [0.3127, 0.1819, 0.1848, 0.0227], [0.7947, 0.2414, 0.4474, 0.5265], [0.9403, 0.4049, 0.7028, 0.8229], [0.4641, 0.3478, 0.1272, 0.7772], [0.9337, 0.1741, 0.0784, 0.9563], [0.3573, 0.2779, 0.8101, 0.6631], [0.3605, 0.5906, 0.2981, 0.3811], [0.8295, 0.4832, 0.5101, 0.7806], [0.9448, 0.2993, 0.8862, 0.1542], [0.5937, 0.4774, 0.7548, 0.6535], [0.2584, 0.4902, 0.9049, 0.9786], [0.6059, 0.3732, 0.5579, 0.2372], [0.1747, 0.4483, 0.5399, 0.5335], [0.7456, 0.9531, 0.5402, 0.474], [0.2153, 0.6846, 0.9614, 0.1845]]])
w[2] = np.array([0, 0, 0, 0])
model.get_layer('Sep42420').set_weights(w) 
in0Loc10725 = tf.constant([[[[0.9591, 0.3592], [0.3034, 0.3886]], [[0.6218, 0.273], [0.315, 0.2107]]]])
in0Sub56693 = tf.constant([[[[[0.8835, 0.5378, 0.2711], [0.7155, 0.8592, 0.5806]], [[0.0883, 0.588, 0.1537], [0.7703, 0.2129, 0.597]], [[0.1414, 0.866, 0.376], [0.5752, 0.5364, 0.3381]]], [[[0.771, 0.0951, 0.5271], [0.4873, 0.3138, 0.4678]], [[0.0632, 0.2913, 0.6621], [0.5248, 0.847, 0.8207]], [[0.8363, 0.8809, 0.2013], [0.8823, 0.6103, 0.0238]]], [[[0.2685, 0.2728, 0.3232], [0.6267, 0.9261, 0.6541]], [[0.3984, 0.9374, 0.3965], [0.5989, 0.6533, 0.9643]], [[0.7772, 0.7977, 0.4299], [0.4463, 0.617, 0.7652]]]]])
in1Sub56693 = tf.constant([[[[[0.6861, 0.2745, 0.2288], [0.6419, 0.4476, 0.1131]], [[0.6404, 0.8442, 0.441], [0.459, 0.9585, 0.388]], [[0.3028, 0.2724, 0.4527], [0.68, 0.492, 0.6154]]], [[[0.8441, 0.4539, 0.919], [0.4407, 0.1304, 0.3138]], [[0.3499, 0.7889, 0.7731], [0.0393, 0.8458, 0.1723]], [[0.2258, 0.4056, 0.849], [0.8508, 0.5943, 0.777]]], [[[0.0473, 0.0364, 0.6815], [0.1427, 0.8098, 0.8056]], [[0.796, 0.5824, 0.8182], [0.6409, 0.4794, 0.3712]], [[0.4958, 0.0764, 0.7408], [0.0646, 0.9743, 0.8803]]]]])
print (np.array2string(model.predict([in0Loc10725,in0Sub56693,in1Sub56693],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Lea28570.png')

LLoc10725 = locally_connected2D_layer([[[[0.9591, 0.3592], [0.3034, 0.3886]], [[0.6218, 0.273], [0.315, 0.2107]]]], 2, 2,[[[0.3865, 0.2695, 0.8574, 0.351], [0.3272, 0.4025, 0.3573, 0.8931], [0.7512, 0.0428, 0.0302, 0.9412], [0.2603, 0.2433, 0.0887, 0.0123], [0.9075, 0.7962, 0.3322, 0.6716], [0.6656, 0.7335, 0.1984, 0.4465], [0.3544, 0.8994, 0.0998, 0.457], [0.243, 0.5976, 0.3324, 0.0379]]],[[[0, 0, 0, 0]]], 6, 2, Loc10725), 
LRes617 = reshape_layer(Loc10725, [1, 4], Res617), 
LZer89359 = zero_padding1D_layer(Res617, 1, 0, Zer89359), 
LSub56693 = subtract_layer([[[[[0.8835, 0.5378, 0.2711], [0.7155, 0.8592, 0.5806]], [[0.0883, 0.588, 0.1537], [0.7703, 0.2129, 0.597]], [[0.1414, 0.866, 0.376], [0.5752, 0.5364, 0.3381]]], [[[0.771, 0.0951, 0.5271], [0.4873, 0.3138, 0.4678]], [[0.0632, 0.2913, 0.6621], [0.5248, 0.847, 0.8207]], [[0.8363, 0.8809, 0.2013], [0.8823, 0.6103, 0.0238]]], [[[0.2685, 0.2728, 0.3232], [0.6267, 0.9261, 0.6541]], [[0.3984, 0.9374, 0.3965], [0.5989, 0.6533, 0.9643]], [[0.7772, 0.7977, 0.4299], [0.4463, 0.617, 0.7652]]]]], [[[[[0.6861, 0.2745, 0.2288], [0.6419, 0.4476, 0.1131]], [[0.6404, 0.8442, 0.441], [0.459, 0.9585, 0.388]], [[0.3028, 0.2724, 0.4527], [0.68, 0.492, 0.6154]]], [[[0.8441, 0.4539, 0.919], [0.4407, 0.1304, 0.3138]], [[0.3499, 0.7889, 0.7731], [0.0393, 0.8458, 0.1723]], [[0.2258, 0.4056, 0.849], [0.8508, 0.5943, 0.777]]], [[[0.0473, 0.0364, 0.6815], [0.1427, 0.8098, 0.8056]], [[0.796, 0.5824, 0.8182], [0.6409, 0.4794, 0.3712]], [[0.4958, 0.0764, 0.7408], [0.0646, 0.9743, 0.8803]]]]], Sub56693), 
LRes2495 = reshape_layer(Sub56693, [3, 3, 6], Res2495), 
LRes20236 = reshape_layer(Res2495, [3, 18], Res20236), 
LSep42420 = separable_conv1D_layer(Res20236, 3,[[[[0.0476], [0.4323], [0.0157], [0.6201], [0.6676], [0.9348], [0.4019], [0.9212], [0.4875], [0.3266], [0.1102], [0.3181], [0.6018], [0.5598], [0.6444], [0.62], [0.5759], [0.0826]], [[0.2275], [0.6372], [0.1675], [0.1347], [0.3587], [0.9799], [0.2637], [0.3833], [0.4306], [0.554], [0.7977], [0.2599], [0.9809], [0.7291], [0.9147], [0.2865], [0.5536], [0.5964]], [[0.1995], [0.8797], [0.0751], [0.9492], [0.3469], [0.608], [0.1115], [0.6234], [0.2604], [0.6453], [0.3694], [0.616], [0.1983], [0.2091], [0.3228], [0.9629], [0.2493], [0.1042]]],[[[0.9835, 0.4857, 0.5411, 0.9691], [0.3332, 0.7065, 0.2181, 0.5825], [0.7601, 0.6559, 0.8815, 0.314], [0.3127, 0.1819, 0.1848, 0.0227], [0.7947, 0.2414, 0.4474, 0.5265], [0.9403, 0.4049, 0.7028, 0.8229], [0.4641, 0.3478, 0.1272, 0.7772], [0.9337, 0.1741, 0.0784, 0.9563], [0.3573, 0.2779, 0.8101, 0.6631], [0.3605, 0.5906, 0.2981, 0.3811], [0.8295, 0.4832, 0.5101, 0.7806], [0.9448, 0.2993, 0.8862, 0.1542], [0.5937, 0.4774, 0.7548, 0.6535], [0.2584, 0.4902, 0.9049, 0.9786], [0.6059, 0.3732, 0.5579, 0.2372], [0.1747, 0.4483, 0.5399, 0.5335], [0.7456, 0.9531, 0.5402, 0.474], [0.2153, 0.6846, 0.9614, 0.1845]]]],[0, 0, 0, 0], 2, true, Sep42420), 
LAdd67653 = add_layer([Zer89359,Sep42420], Add67653), 
LLea28570 = leaky_relu_layer(Add67653, 2.9576599123441647, Lea28570), 
exec_layers([LLoc10725,LRes617,LZer89359,LSub56693,LRes2495,LRes20236,LSep42420,LAdd67653,LLea28570],["Loc10725","Res617","Zer89359","Sub56693","Res2495","Res20236","Sep42420","Add67653","Lea28570"],Lea28570,"Lea28570")

Actual (Unparsed): [[[0.1747987, 0.1393901, 0.6010560, 0.0630497], [1.9083979, 1.9249099, 2.2492733, 2.3103313]]]

Expected (Unparsed): [[[0.17479868898399992,0.13939005126299994,0.6010559973849998,0.06304967022100003],[1.9083979211959998,1.924909923505,2.249273243716,2.310331312511]]]

Actual:   [[[0.1748, 0.1394, 0.6011, 0.0631], [1.9084, 1.925, 2.2493, 2.3104]]]

Expected: [[[0.1748, 0.1394, 0.6011, 0.0631], [1.9084, 1.925, 2.2493, 2.3104]]]