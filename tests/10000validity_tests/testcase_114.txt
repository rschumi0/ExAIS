import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Con93093 = tf.keras.layers.Input(shape=([1, 1]))
in0Min34159 = tf.keras.layers.Input(shape=([1, 2]))
in1Min34159 = tf.keras.layers.Input(shape=([1, 2]))
in0Con24192 = tf.keras.layers.Input(shape=([1, 1]))
in0Ave70100 = tf.keras.layers.Input(shape=([2, 1, 1]))
in0Con41357 = tf.keras.layers.Input(shape=([3, 3]))

Con93093 = keras.layers.Conv1D(4, (1),strides=(1), padding='valid', dilation_rate=(1), name = 'Con93093', )(in0Con93093)
Zer3965 = keras.layers.ZeroPadding1D(padding=((1, 1)), name = 'Zer3965', )(Con93093)
Min34159 = keras.layers.Minimum(name = 'Min34159', )([in0Min34159,in1Min34159])
Con24192 = keras.layers.Concatenate(axis=2, name = 'Con24192', )([Min34159,in0Con24192])
Ave70100 = keras.layers.AveragePooling2D(pool_size=(1, 1), strides=(11, 1), padding='same', name = 'Ave70100', )(in0Ave70100)
Res75254 = keras.layers.Reshape((1, 1), name = 'Res75254', )(Ave70100)
Dot16969 = keras.layers.Dot(axes=(1, 1), name = 'Dot16969', )([Con24192,Res75254])
Con41357 = keras.layers.Concatenate(axis=2, name = 'Con41357', )([Dot16969,in0Con41357])
Mul26029 = keras.layers.Multiply(name = 'Mul26029', )([Zer3965,Con41357])
model = tf.keras.models.Model(inputs=[in0Con93093,in0Min34159,in1Min34159,in0Con24192,in0Ave70100,in0Con41357], outputs=Mul26029)
w = model.get_layer('Con93093').get_weights() 
w[0] = np.array([[[0.8214, 0.733, 0.8495, 0.8413]]])
w[1] = np.array([0, 0, 0, 0])
model.get_layer('Con93093').set_weights(w) 
in0Con93093 = tf.constant([[[0.9346]]])
in0Min34159 = tf.constant([[[0.1959, 0.3123]]])
in1Min34159 = tf.constant([[[0.0359, 0.1994]]])
in0Con24192 = tf.constant([[[0.6456]]])
in0Ave70100 = tf.constant([[[[1.1977]], [[1.217]]]])
in0Con41357 = tf.constant([[[0.6706, 0.1148, 0.3512], [0.5471, 0.8865, 0.6915], [0.8136, 0.669, 0.5226]]])
print (np.array2string(model.predict([in0Con93093,in0Min34159,in1Min34159,in0Con24192,in0Ave70100,in0Con41357],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Mul26029.png')

LCon93093 = conv1D_layer([[[0.9346]]], 1,[[[0.8214, 0.733, 0.8495, 0.8413]]],[0, 0, 0, 0], 1, false, 1, Con93093), 
LZer3965 = zero_padding1D_layer(Con93093, 1, 1, Zer3965), 
LMin34159 = minimum_layer([[[[0.1959, 0.3123]]], [[[0.0359, 0.1994]]]], Min34159), 
LCon24192 = concatenate_layer([Min34159,[[[0.6456]]]], 2, Con24192), 
LAve70100 = average_pooling2D_layer([[[[1.1977]], [[1.217]]]], 1, 1, 11, 1, true, Ave70100), 
LRes75254 = reshape_layer(Ave70100, [1, 1], Res75254), 
LDot16969 = dot_layer(Con24192,Res75254, 1, 1, Dot16969), 
LCon41357 = concatenate_layer([Dot16969,[[[0.6706, 0.1148, 0.3512], [0.5471, 0.8865, 0.6915], [0.8136, 0.669, 0.5226]]]], 2, Con41357), 
LMul26029 = multiply_layer([Zer3965,Con41357], Mul26029), 
exec_layers([LCon93093,LZer3965,LMin34159,LCon24192,LAve70100,LRes75254,LDot16969,LCon41357,LMul26029],["Con93093","Zer3965","Min34159","Con24192","Ave70100","Res75254","Dot16969","Con41357","Mul26029"],Mul26029,"Mul26029")

Actual (Unparsed): [[[0.0000000, 0.0000000, 0.0000000, 0.0000000], [0.1833385, 0.3747973, 0.7038302, 0.5437119], [0.0000000, 0.0000000, 0.0000000, 0.0000000]]]

Expected (Unparsed): [[[0.0,0.0,0.0,0.0],[0.1833385020798072,0.37479731078,0.7038302035499999,0.54371191467],[0.0,0.0,0.0,0.0]]]

Actual:   [[[0, 0, 0, 0], [0.1834, 0.3748, 0.7039, 0.5438], [0, 0, 0, 0]]]

Expected: [[[0, 0, 0, 0], [0.1834, 0.3748, 0.7039, 0.5438], [0, 0, 0, 0]]]