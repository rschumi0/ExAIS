import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Add26665 = tf.keras.layers.Input(shape=([1, 1]))
in1Add26665 = tf.keras.layers.Input(shape=([1, 1]))
in0Con15616 = tf.keras.layers.Input(shape=([2, 2, 1]))
in0Lay71154 = tf.keras.layers.Input(shape=([2, 2, 2]))

Add26665 = keras.layers.Add(name = 'Add26665', )([in0Add26665,in1Add26665])
Res82666 = keras.layers.Reshape((1, 1, 1), name = 'Res82666', )(Add26665)
Dep80243 = keras.layers.DepthwiseConv2D((1, 1),strides=(1, 1), padding='valid', name = 'Dep80243', )(Res82666)
Zer15653 = keras.layers.ZeroPadding2D(padding=((1, 0), (1, 0)), name = 'Zer15653', )(Dep80243)
Con15616 = keras.layers.Concatenate(axis=3, name = 'Con15616', )([Zer15653,in0Con15616])
Lay71154 = keras.layers.LayerNormalization(axis=1, epsilon=2.3803286980182796, name = 'Lay71154', )(in0Lay71154)
Bat31263 = keras.layers.BatchNormalization(axis=1, epsilon=0.2948016830363037,  name = 'Bat31263', )(Lay71154)
Mul99032 = keras.layers.Multiply(name = 'Mul99032', )([Con15616,Bat31263])
model = tf.keras.models.Model(inputs=[in0Add26665,in1Add26665,in0Con15616,in0Lay71154], outputs=Mul99032)
w = model.get_layer('Dep80243').get_weights() 
w[0] = np.array([[[[0.4947]]]])
w[1] = np.array([0])
model.get_layer('Dep80243').set_weights(w) 
w = model.get_layer('Bat31263').get_weights() 
w[0] = np.array([0.632, 0.6826])
w[1] = np.array([0.0134, 0.0971])
w[2] = np.array([0.4924, 0.0012])
w[3] = np.array([0.6255, 0.5137])
model.get_layer('Bat31263').set_weights(w) 
in0Add26665 = tf.constant([[[0.9483]]])
in1Add26665 = tf.constant([[[0.2]]])
in0Con15616 = tf.constant([[[[0.7014], [0.5893]], [[0.0891], [0.839]]]])
in0Lay71154 = tf.constant([[[[1.2443, 1.6949], [1.9293, 1.5946]], [[1.7794, 1.8267], [1.4634, 1.2614]]]])
print (np.array2string(model.predict([in0Add26665,in1Add26665,in0Con15616,in0Lay71154],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Mul99032.png')

LAdd26665 = add_layer([[[[0.9483]]], [[[0.2]]]], Add26665), 
LRes82666 = reshape_layer(Add26665, [1, 1, 1], Res82666), 
LDep80243 = depthwise_conv2D_layer(Res82666, 1, 1,[[[[0.4947]]]],[0], 1, 1, false, Dep80243), 
LZer15653 = zero_padding2D_layer(Dep80243, 1, 0, 1, 0, Zer15653), 
LCon15616 = concatenate_layer([Zer15653,[[[[0.7014], [0.5893]], [[0.0891], [0.839]]]]], 3, Con15616), 
LLay71154 = layer_normalization_layer([[[[1.2443, 1.6949], [1.9293, 1.5946]], [[1.7794, 1.8267], [1.4634, 1.2614]]]], 1, 2.3803286980182796, Lay71154), 
LBat31263 = batch_normalization_layer(Lay71154, 1, 0.2948016830363037, [0.632, 0.6826], [0.0134, 0.0971], [0.4924, 0.0012], [0.6255, 0.5137], Bat31263), 
LMul99032 = multiply_layer([Con15616,Bat31263], Mul99032), 
exec_layers([LAdd26665,LRes82666,LDep80243,LZer15653,LCon15616,LLay71154,LBat31263,LMul99032],["Add26665","Res82666","Dep80243","Zer15653","Con15616","Lay71154","Bat31263","Mul99032"],Mul99032,"Mul99032")

Actual (Unparsed): [[[[-0.0000000, -0.2378489], [-0.0000000, -0.1415875]], [[0.0000000, 0.0114570], [-0.0097417, 0.0123229]]]]

Expected (Unparsed): [[[[-0.0,-0.23784890607738113],[-0.0,-0.14158754594574524]],[[0.0,0.011456962586009182],[-0.009741668863691808,0.012322930700376088]]]]

Actual:   [[[[-0, -0.2378], [-0, -0.1415]], [[0, 0.0115], [-0.0097, 0.0124]]]]

Expected: [[[[-0, -0.2378], [-0, -0.1415]], [[0, 0.0115], [-0.0097, 0.0124]]]]