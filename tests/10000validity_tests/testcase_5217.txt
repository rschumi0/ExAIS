import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Add14853 = tf.keras.layers.Input(shape=([1, 2, 1, 2]))
in1Add14853 = tf.keras.layers.Input(shape=([1, 2, 1, 2]))
in0Min79336 = tf.keras.layers.Input(shape=([2, 1, 1, 1]))
in1Min79336 = tf.keras.layers.Input(shape=([2, 1, 1, 1]))
in0Ave82557 = tf.keras.layers.Input(shape=([1, 1, 1, 1]))
in1Ave82557 = tf.keras.layers.Input(shape=([1, 1, 1, 1]))
in0Con10813 = tf.keras.layers.Input(shape=([2, 3, 1, 1]))

Add14853 = keras.layers.Add(name = 'Add14853', )([in0Add14853,in1Add14853])
Sof23163 = keras.layers.Softmax(axis=1, name = 'Sof23163', )(Add14853)
Zer93064 = keras.layers.ZeroPadding3D(padding=((1, 0), (1, 0), (0, 0)), name = 'Zer93064', )(Sof23163)
Min79336 = keras.layers.Minimum(name = 'Min79336', )([in0Min79336,in1Min79336])
Ave82557 = keras.layers.Average(name = 'Ave82557', )([in0Ave82557,in1Ave82557])
Zer27794 = keras.layers.ZeroPadding3D(padding=((1, 0), (0, 0), (0, 0)), name = 'Zer27794', )(Ave82557)
Mul13972 = keras.layers.Multiply(name = 'Mul13972', )([Min79336,Zer27794])
Zer58942 = keras.layers.ZeroPadding3D(padding=((0, 0), (2, 0), (0, 0)), name = 'Zer58942', )(Mul13972)
Con10813 = keras.layers.Concatenate(axis=4, name = 'Con10813', )([Zer58942,in0Con10813])
Ave72494 = keras.layers.Average(name = 'Ave72494', )([Zer93064,Con10813])
model = tf.keras.models.Model(inputs=[in0Add14853,in1Add14853,in0Min79336,in1Min79336,in0Ave82557,in1Ave82557,in0Con10813], outputs=Ave72494)
in0Add14853 = tf.constant([[[[[0.9259, 0.8533]], [[0.257, 0.1267]]]]])
in1Add14853 = tf.constant([[[[[0.9743, 0.6942]], [[0.0691, 0.6916]]]]])
in0Min79336 = tf.constant([[[[[0.3001]]], [[[0.3683]]]]])
in1Min79336 = tf.constant([[[[[0.3507]]], [[[0.6472]]]]])
in0Ave82557 = tf.constant([[[[[0.1099]]]]])
in1Ave82557 = tf.constant([[[[[0.7358]]]]])
in0Con10813 = tf.constant([[[[[0.531]], [[0.2596]], [[0.8879]]], [[[0.7171]], [[0.3189]], [[0.0012]]]]])
print (np.array2string(model.predict([in0Add14853,in1Add14853,in0Min79336,in1Min79336,in0Ave82557,in1Ave82557,in0Con10813],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Ave72494.png')

LAdd14853 = add_layer([[[[[[0.9259, 0.8533]], [[0.257, 0.1267]]]]], [[[[[0.9743, 0.6942]], [[0.0691, 0.6916]]]]]], Add14853), 
LSof23163 = softmax_layer(Add14853, 1, Sof23163), 
LZer93064 = zero_padding3D_layer(Sof23163, 1, 0, 1, 0, 0, 0, Zer93064), 
LMin79336 = minimum_layer([[[[[[0.3001]]], [[[0.3683]]]]], [[[[[0.3507]]], [[[0.6472]]]]]], Min79336), 
LAve82557 = average_layer([[[[[[0.1099]]]]], [[[[[0.7358]]]]]], Ave82557), 
LZer27794 = zero_padding3D_layer(Ave82557, 1, 0, 0, 0, 0, 0, Zer27794), 
LMul13972 = multiply_layer([Min79336,Zer27794], Mul13972), 
LZer58942 = zero_padding3D_layer(Mul13972, 0, 0, 2, 0, 0, 0, Zer58942), 
LCon10813 = concatenate_layer([Zer58942,[[[[[0.531]], [[0.2596]], [[0.8879]]], [[[0.7171]], [[0.3189]], [[0.0012]]]]]], 4, Con10813), 
LAve72494 = average_layer([Zer93064,Con10813], Ave72494), 
exec_layers([LAdd14853,LSof23163,LZer93064,LMin79336,LAve82557,LZer27794,LMul13972,LZer58942,LCon10813,LAve72494],["Add14853","Sof23163","Zer93064","Min79336","Ave82557","Zer27794","Mul13972","Zer58942","Con10813","Ave72494"],Ave72494,"Ave72494")

Actual (Unparsed): [[[[[0.0000000, 0.2655000]], [[0.0000000, 0.1298000]], [[0.0000000, 0.4439500]]], [[[0.0000000, 0.3585500]], [[0.5000000, 0.6594500]], [[0.5778678, 0.5006000]]]]]

Expected (Unparsed): [[[[[0,0.2655]],[[0,0.1298]],[[0.0,0.44395]]],[[[0,0.35855]],[[0.5,0.65945]],[[0.5778678275,0.5006]]]]]

Actual:   [[[[[0, 0.2655]], [[0, 0.1298]], [[0, 0.444]]], [[[0, 0.3586]], [[0.5, 0.6595]], [[0.5779, 0.5006]]]]]

Expected: [[[[[0, 0.2655]], [[0, 0.1298]], [[0, 0.444]]], [[[0, 0.3586]], [[0.5, 0.6595]], [[0.5779, 0.5006]]]]]