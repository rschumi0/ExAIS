import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Sub6577 = tf.keras.layers.Input(shape=([3, 3, 3]))
in1Sub6577 = tf.keras.layers.Input(shape=([3, 3, 3]))
in0Con88291 = tf.keras.layers.Input(shape=([2, 1]))
in0Mul23466 = tf.keras.layers.Input(shape=([2, 2]))
in1Mul23466 = tf.keras.layers.Input(shape=([2, 2]))

Sub6577 = keras.layers.Subtract(name = 'Sub6577', )([in0Sub6577,in1Sub6577])
Res35539 = keras.layers.Reshape((3, 9), name = 'Res35539', )(Sub6577)
Sim28188 = keras.layers.SimpleRNN(2,name = 'Sim28188', )(Res35539)
Res41675 = keras.layers.Reshape((2, 1), name = 'Res41675', )(Sim28188)
Con88291 = keras.layers.Concatenate(axis=2, name = 'Con88291', )([Res41675,in0Con88291])
Mul23466 = keras.layers.Multiply(name = 'Mul23466', )([in0Mul23466,in1Mul23466])
Sub41534 = keras.layers.Subtract(name = 'Sub41534', )([Con88291,Mul23466])
Up_19397 = keras.layers.UpSampling1D(size=(1), name = 'Up_19397', )(Sub41534)
model = tf.keras.models.Model(inputs=[in0Sub6577,in1Sub6577,in0Con88291,in0Mul23466,in1Mul23466], outputs=Up_19397)
w = model.get_layer('Sim28188').get_weights() 
w[0] = np.array([[5, 5], [10, 1], [9, 1], [7, 9], [3, 7], [5, 9], [10, 8], [7, 2], [3, 3]])
w[1] = np.array([[10, 5], [9, 3]])
w[2] = np.array([9, 5])
model.get_layer('Sim28188').set_weights(w) 
in0Sub6577 = tf.constant([[[[0.4211, 0.1541, 0.3255], [0.5831, 0.8723, 0.6906], [0.0427, 0.2854, 0.4418]], [[0.4378, 0.066, 0.2975], [0.15, 0.0728, 0.0432], [0.3574, 0.1303, 0.142]], [[0.5198, 0.4167, 0.306], [0.9875, 0.9207, 0.8354], [0.4451, 0.2895, 0.7812]]]])
in1Sub6577 = tf.constant([[[[0.348, 0.586, 0.4371], [0.6619, 0.6635, 0.655], [0.4966, 0.0268, 0.7576]], [[0.2102, 0.6329, 0.9906], [0.1428, 0.6334, 0.4574], [0.2479, 0.66, 0.7688]], [[0.9248, 0.6854, 0.6269], [0.9577, 0.0843, 0.1481], [0.4996, 0.658, 0.1993]]]])
in0Con88291 = tf.constant([[[0.3576], [0.8133]]])
in0Mul23466 = tf.constant([[[0.5814, 0.5534], [0.348, 0.4943]]])
in1Mul23466 = tf.constant([[[0.3037, 0.4781], [0.2185, 0.0641]]])
print (np.array2string(model.predict([in0Sub6577,in1Sub6577,in0Con88291,in0Mul23466,in1Mul23466],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Up_19397.png')

LSub6577 = subtract_layer([[[[0.4211, 0.1541, 0.3255], [0.5831, 0.8723, 0.6906], [0.0427, 0.2854, 0.4418]], [[0.4378, 0.066, 0.2975], [0.15, 0.0728, 0.0432], [0.3574, 0.1303, 0.142]], [[0.5198, 0.4167, 0.306], [0.9875, 0.9207, 0.8354], [0.4451, 0.2895, 0.7812]]]], [[[[0.348, 0.586, 0.4371], [0.6619, 0.6635, 0.655], [0.4966, 0.0268, 0.7576]], [[0.2102, 0.6329, 0.9906], [0.1428, 0.6334, 0.4574], [0.2479, 0.66, 0.7688]], [[0.9248, 0.6854, 0.6269], [0.9577, 0.0843, 0.1481], [0.4996, 0.658, 0.1993]]]], Sub6577), 
LRes35539 = reshape_layer(Sub6577, [3, 9], Res35539), 
LSim28188 = simple_rnn_layer(Res35539,[[5, 5], [10, 1], [9, 1], [7, 9], [3, 7], [5, 9], [10, 8], [7, 2], [3, 3]],[[10, 5], [9, 3]],[9, 5], Sim28188), 
LRes41675 = reshape_layer(Sim28188, [2, 1], Res41675), 
LCon88291 = concatenate_layer([Res41675,[[[0.3576], [0.8133]]]], 2, Con88291), 
LMul23466 = multiply_layer([[[[0.5814, 0.5534], [0.348, 0.4943]]], [[[0.3037, 0.4781], [0.2185, 0.0641]]]], Mul23466), 
LSub41534 = subtract_layer(Con88291,Mul23466, Sub41534), 
LUp_19397 = up_sampling1D_layer(Sub41534, 1, Up_19397), 
exec_layers([LSub6577,LRes35539,LSim28188,LRes41675,LCon88291,LMul23466,LSub41534,LUp_19397],["Sub6577","Res35539","Sim28188","Res41675","Con88291","Mul23466","Sub41534","Up_19397"],Up_19397,"Up_19397")

Actual (Unparsed): [[[0.8234288, 0.0930195], [0.9239620, 0.7816154]]]

Expected (Unparsed): [[[0.82342882,0.09301945999999994],[0.923962,0.78161537]]]

Actual:   [[[0.8235, 0.0931], [0.924, 0.7817]]]

Expected: [[[0.8235, 0.0931], [0.924, 0.7817]]]