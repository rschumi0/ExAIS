import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Glo41754 = tf.keras.layers.Input(shape=([1, 2, 1]))
in0Con64820 = tf.keras.layers.Input(shape=([3, 3]))
in0ELU74306 = tf.keras.layers.Input(shape=([1, 1]))
in0Con19904 = tf.keras.layers.Input(shape=([3, 2]))
in0Mas3084 = tf.keras.layers.Input(shape=([1, 3]))
in0Con47102 = tf.keras.layers.Input(shape=([3, 1]))
in0Sep90696 = tf.keras.layers.Input(shape=([1, 2]))

Glo41754 = keras.layers.GlobalAveragePooling2D(name = 'Glo41754', )(in0Glo41754)
Res46092 = keras.layers.Reshape((1, 1), name = 'Res46092', )(Glo41754)
Zer47969 = keras.layers.ZeroPadding1D(padding=((2, 0)), name = 'Zer47969', )(Res46092)
Con64820 = keras.layers.Concatenate(axis=2, name = 'Con64820', )([Zer47969,in0Con64820])
ELU74306 = keras.layers.ELU(alpha=4.016171524956524, name = 'ELU74306', input_shape=(1, 1))(in0ELU74306)
GRU8358 = keras.layers.GRU(3,reset_after=True, recurrent_activation='sigmoid', name = 'GRU8358', )(ELU74306)
Res685 = keras.layers.Reshape((3, 1), name = 'Res685', )(GRU8358)
Con19904 = keras.layers.Concatenate(axis=2, name = 'Con19904', )([Res685,in0Con19904])
Mas3084 = keras.layers.Masking(mask_value=1, name = 'Mas3084', )(in0Mas3084)
Zer99118 = keras.layers.ZeroPadding1D(padding=((2, 0)), name = 'Zer99118', )(Mas3084)
Add4523 = keras.layers.Add(name = 'Add4523', )([Con19904,Zer99118])
Con47102 = keras.layers.Concatenate(axis=2, name = 'Con47102', )([Add4523,in0Con47102])
Sep90696 = keras.layers.SeparableConv1D(4, (1),strides=(1), padding='valid', name = 'Sep90696', )(in0Sep90696)
Zer51927 = keras.layers.ZeroPadding1D(padding=((2, 0)), name = 'Zer51927', )(Sep90696)
Ave74060 = keras.layers.Average(name = 'Ave74060', )([Con47102,Zer51927])
Mul81004 = keras.layers.Multiply(name = 'Mul81004', )([Con64820,Ave74060])
model = tf.keras.models.Model(inputs=[in0Glo41754,in0Con64820,in0ELU74306,in0Con19904,in0Mas3084,in0Con47102,in0Sep90696], outputs=Mul81004)
w = model.get_layer('GRU8358').get_weights() 
w[0] = np.array([[5, 6, 6, 7, 10, 5, 5, 6, 10]])
w[1] = np.array([[10, 4, 1, 10, 8, 6, 9, 3, 8], [10, 10, 4, 5, 8, 1, 3, 2, 8], [6, 1, 1, 6, 10, 8, 3, 7, 7]])
w[2] = np.array([[6, 2, 8, 5, 6, 10, 6, 10, 8], [4, 9, 6, 1, 8, 6, 5, 2, 2]])
model.get_layer('GRU8358').set_weights(w) 
w = model.get_layer('Sep90696').get_weights() 
w[0] = np.array([[[0.3403], [0.0659]]])
w[1] = np.array([[[0.1573, 0.8521, 0.4887, 0.9094], [0.0301, 0.7655, 0.6262, 0.0191]]])
w[2] = np.array([0, 0, 0, 0])
model.get_layer('Sep90696').set_weights(w) 
in0Glo41754 = tf.constant([[[[1.7358], [1.2575]]]])
in0Con64820 = tf.constant([[[0.4523, 0.9754, 0.7236], [0.451, 0.5928, 0.667], [0.0339, 0.2873, 0.176]]])
in0ELU74306 = tf.constant([[[0.6915]]])
in0Con19904 = tf.constant([[[0.4814, 0.3467], [0.7405, 0.1185], [0.1466, 0.3858]]])
in0Mas3084 = tf.constant([[[1.6709, 1.8314, 1.9863]]])
in0Con47102 = tf.constant([[[0.5991], [0.2864], [0.858]]])
in0Sep90696 = tf.constant([[[0.344, 0.4328]]])
print (np.array2string(model.predict([in0Glo41754,in0Con64820,in0ELU74306,in0Con19904,in0Mas3084,in0Con47102,in0Sep90696],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Mul81004.png')

LGlo41754 = global_average_pooling2D_layer([[[[1.7358], [1.2575]]]], Glo41754), 
LRes46092 = reshape_layer(Glo41754, [1, 1], Res46092), 
LZer47969 = zero_padding1D_layer(Res46092, 2, 0, Zer47969), 
LCon64820 = concatenate_layer([Zer47969,[[[0.4523, 0.9754, 0.7236], [0.451, 0.5928, 0.667], [0.0339, 0.2873, 0.176]]]], 2, Con64820), 
LELU74306 = elu_layer([[[0.6915]]], 4.016171524956524, ELU74306), 
LGRU8358 = gru_layer(ELU74306,[[5, 6, 6, 7, 10, 5, 5, 6, 10]],[[10, 4, 1, 10, 8, 6, 9, 3, 8], [10, 10, 4, 5, 8, 1, 3, 2, 8], [6, 1, 1, 6, 10, 8, 3, 7, 7]],[[6, 2, 8, 5, 6, 10, 6, 10, 8], [4, 9, 6, 1, 8, 6, 5, 2, 2]], true, GRU8358), 
LRes685 = reshape_layer(GRU8358, [3, 1], Res685), 
LCon19904 = concatenate_layer([Res685,[[[0.4814, 0.3467], [0.7405, 0.1185], [0.1466, 0.3858]]]], 2, Con19904), 
LMas3084 = masking_layer([[[1.6709, 1.8314, 1.9863]]], 1, Mas3084), 
LZer99118 = zero_padding1D_layer(Mas3084, 2, 0, Zer99118), 
LAdd4523 = add_layer([Con19904,Zer99118], Add4523), 
LCon47102 = concatenate_layer([Add4523,[[[0.5991], [0.2864], [0.858]]]], 2, Con47102), 
LSep90696 = separable_conv1D_layer([[[0.344, 0.4328]]], 1,[[[[0.3403], [0.0659]]],[[[0.1573, 0.8521, 0.4887, 0.9094], [0.0301, 0.7655, 0.6262, 0.0191]]]],[0, 0, 0, 0], 1, false, Sep90696), 
LZer51927 = zero_padding1D_layer(Sep90696, 2, 0, Zer51927), 
LAve74060 = average_layer([Con47102,Zer51927], Ave74060), 
LMul81004 = multiply_layer([Con64820,Ave74060], Mul81004), 
exec_layers([LGlo41754,LRes46092,LZer47969,LCon64820,LELU74306,LGRU8358,LRes685,LCon19904,LMas3084,LZer99118,LAdd4523,LCon47102,LSep90696,LZer51927,LAve74060,LMul81004],["Glo41754","Res46092","Zer47969","Con64820","ELU74306","GRU8358","Res685","Con19904","Mas3084","Zer99118","Add4523","Con47102","Sep90696","Zer51927","Ave74060","Mul81004"],Mul81004,"Mul81004")

Actual (Unparsed): [[[0.0000000, 0.1088686, 0.1690856, 0.2167544], [0.0000000, 0.1669827, 0.0351234, 0.0955144], [1.2647984, 0.0355879, 0.3515358, 0.0849202]]]

Expected (Unparsed): [[[0.0,0.10886860999999999,0.16908559,0.21675438],[0.0,0.16698275,0.0351234,0.0955144],[1.2647983751502687,0.035587928057946,0.35153582134303357,0.084920179089856]]]

Actual:   [[[0, 0.1089, 0.1691, 0.2168], [0, 0.167, 0.0352, 0.0956], [1.2648, 0.0356, 0.3516, 0.085]]]

Expected: [[[0, 0.1089, 0.1691, 0.2168], [0, 0.167, 0.0352, 0.0956], [1.2648, 0.0356, 0.3516, 0.085]]]