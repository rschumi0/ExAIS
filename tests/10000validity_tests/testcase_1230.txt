import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Mul2261 = tf.keras.layers.Input(shape=([2, 2, 1]))
in1Mul2261 = tf.keras.layers.Input(shape=([2, 2, 1]))

Mul2261 = keras.layers.Multiply(name = 'Mul2261', )([in0Mul2261,in1Mul2261])
Lay87606 = keras.layers.LayerNormalization(axis=3, epsilon=2.3390918789510753, name = 'Lay87606', )(Mul2261)
model = tf.keras.models.Model(inputs=[in0Mul2261,in1Mul2261], outputs=Lay87606)
in0Mul2261 = tf.constant([[[[0.0508], [0.335]], [[0.5927], [0.2014]]]])
in1Mul2261 = tf.constant([[[[0.5506], [0.8846]], [[0.9875], [0.7132]]]])
print (np.array2string(model.predict([in0Mul2261,in1Mul2261],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Lay87606.png')

LMul2261 = multiply_layer([[[[[0.0508], [0.335]], [[0.5927], [0.2014]]]], [[[[0.5506], [0.8846]], [[0.9875], [0.7132]]]]], Mul2261), 
LLay87606 = layer_normalization_layer(Mul2261, 3, 2.3390918789510753, Lay87606), 
exec_layers([LMul2261,LLay87606],["Mul2261","Lay87606"],Lay87606,"Lay87606")

Actual (Unparsed): [[[[0.0000000], [0.0000000]], [[0.0000000], [0.0000000]]]]

Expected (Unparsed): [[[[0.0],[0.0]],[[0.0],[0.0]]]]

Actual:   [[[[0], [0]], [[0], [0]]]]

Expected: [[[[0], [0]], [[0], [0]]]]