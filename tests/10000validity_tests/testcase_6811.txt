import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0GRU42267 = tf.keras.layers.Input(shape=([2, 2]))

GRU42267 = keras.layers.GRU(2,reset_after=True, recurrent_activation='sigmoid', name = 'GRU42267', )(in0GRU42267)
Lay16274 = keras.layers.LayerNormalization(axis=1, epsilon=1.8012566542656647, name = 'Lay16274', )(GRU42267)
Thr65187 = keras.layers.ThresholdedReLU(theta=5.283872743632719, name = 'Thr65187', )(Lay16274)
model = tf.keras.models.Model(inputs=[in0GRU42267], outputs=Thr65187)
w = model.get_layer('GRU42267').get_weights() 
w[0] = np.array([[7, 10, 7, 7, 5, 3], [8, 2, 3, 9, 4, 4]])
w[1] = np.array([[8, 3, 8, 6, 3, 3], [2, 10, 6, 2, 6, 8]])
w[2] = np.array([[1, 4, 2, 3, 6, 5], [9, 4, 1, 3, 4, 3]])
model.get_layer('GRU42267').set_weights(w) 
in0GRU42267 = tf.constant([[[4, 3], [2, 8]]])
print (np.array2string(model.predict([in0GRU42267],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Thr65187.png')

LGRU42267 = gru_layer([[[4, 3], [2, 8]]],[[7, 10, 7, 7, 5, 3], [8, 2, 3, 9, 4, 4]],[[8, 3, 8, 6, 3, 3], [2, 10, 6, 2, 6, 8]],[[1, 4, 2, 3, 6, 5], [9, 4, 1, 3, 4, 3]], true, GRU42267), 
LLay16274 = layer_normalization_layer(GRU42267, 1, 1.8012566542656647, Lay16274), 
LThr65187 = thresholded_relu_layer(Lay16274, 5.283872743632719, Thr65187), 
exec_layers([LGRU42267,LLay16274,LThr65187],["GRU42267","Lay16274","Thr65187"],Thr65187,"Thr65187")

Actual (Unparsed): [[0.0000000, 0.0000000]]

Expected (Unparsed): [[0,0]]

Actual:   [[0, 0]]

Expected: [[0, 0]]