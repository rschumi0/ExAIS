import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Dot7185 = tf.keras.layers.Input(shape=([2]))
in1Dot7185 = tf.keras.layers.Input(shape=([2]))
in0Mul84087 = tf.keras.layers.Input(shape=([1, 2]))
in1Mul84087 = tf.keras.layers.Input(shape=([1, 2]))

Dot7185 = keras.layers.Dot(axes=(1, 1), name = 'Dot7185', )([in0Dot7185,in1Dot7185])
Res65380 = keras.layers.Reshape((1, 1), name = 'Res65380', )(Dot7185)
Mul84087 = keras.layers.Multiply(name = 'Mul84087', )([in0Mul84087,in1Mul84087])
Dot84243 = keras.layers.Dot(axes=(2, 1), name = 'Dot84243', )([Res65380,Mul84087])
Glo21771 = keras.layers.GlobalMaxPool1D(name = 'Glo21771', )(Dot84243)
model = tf.keras.models.Model(inputs=[in0Dot7185,in1Dot7185,in0Mul84087,in1Mul84087], outputs=Glo21771)
in0Dot7185 = tf.constant([[0.6397, 0.959]])
in1Dot7185 = tf.constant([[0.521, 0.3371]])
in0Mul84087 = tf.constant([[[0.9556, 0.0159]]])
in1Mul84087 = tf.constant([[[0.6576, 0.562]]])
print (np.array2string(model.predict([in0Dot7185,in1Dot7185,in0Mul84087,in1Mul84087],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Glo21771.png')

LDot7185 = dot_layer([[0.6397, 0.959]], [[0.521, 0.3371]], 1, 1, Dot7185), 
LRes65380 = reshape_layer(Dot7185, [1, 1], Res65380), 
LMul84087 = multiply_layer([[[[0.9556, 0.0159]]], [[[0.6576, 0.562]]]], Mul84087), 
LDot84243 = dot_layer(Res65380,Mul84087, 2, 1, Dot84243), 
LGlo21771 = global_max_pool1D_layer(Dot84243, Glo21771), 
exec_layers([LDot7185,LRes65380,LMul84087,LDot84243,LGlo21771],["Dot7185","Res65380","Mul84087","Dot84243","Glo21771"],Glo21771,"Glo21771")

Actual (Unparsed): [[0.4125856, 0.0058669]]

Expected (Unparsed): [[0.41258561864025595,0.0058669120810800005]]

Actual:   [[0.4126, 0.0059]]

Expected: [[0.4126, 0.0059]]