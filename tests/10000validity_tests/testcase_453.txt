import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Min8597 = tf.keras.layers.Input(shape=([2, 2, 1]))
in1Min8597 = tf.keras.layers.Input(shape=([2, 2, 1]))
in0Con90790 = tf.keras.layers.Input(shape=([7, 7, 3]))
in0Max39171 = tf.keras.layers.Input(shape=([2, 2, 2, 2]))
in1Max39171 = tf.keras.layers.Input(shape=([2, 2, 2, 2]))
in0Ave32783 = tf.keras.layers.Input(shape=([2, 2, 2]))
in0Con67859 = tf.keras.layers.Input(shape=([3, 4, 2]))

Min8597 = keras.layers.Minimum(name = 'Min8597', )([in0Min8597,in1Min8597])
Res2308 = keras.layers.Reshape((2, 2, 1, 1), name = 'Res2308', )(Min8597)
Up_43080 = keras.layers.UpSampling3D(size=(2, 1, 1), name = 'Up_43080', )(Res2308)
Res21915 = keras.layers.Reshape((4, 2, 1), name = 'Res21915', )(Up_43080)
Res24346 = keras.layers.Reshape((4, 2), name = 'Res24346', )(Res21915)
Fla99131 = keras.layers.Flatten(name = 'Fla99131', )(Res24346)
Res63523 = keras.layers.Reshape((8, 1), name = 'Res63523', )(Fla99131)
Cro33214 = keras.layers.Cropping1D(cropping=((1, 0)), name = 'Cro33214', )(Res63523)
Res89436 = keras.layers.Reshape((7, 1, 1), name = 'Res89436', )(Cro33214)
Zer95864 = keras.layers.ZeroPadding2D(padding=((0, 0), (6, 0)), name = 'Zer95864', )(Res89436)
Con90790 = keras.layers.Concatenate(axis=3, name = 'Con90790', )([Zer95864,in0Con90790])
Max39171 = keras.layers.Maximum(name = 'Max39171', )([in0Max39171,in1Max39171])
Res52243 = keras.layers.Reshape((2, 2, 4), name = 'Res52243', )(Max39171)
Zer88617 = keras.layers.ZeroPadding2D(padding=((1, 0), (2, 0)), name = 'Zer88617', )(Res52243)
Ave32783 = keras.layers.AveragePooling2D(pool_size=(2, 1), name = 'Ave32783', )(in0Ave32783)
Zer94344 = keras.layers.ZeroPadding2D(padding=((1, 1), (1, 1)), name = 'Zer94344', )(Ave32783)
Con67859 = keras.layers.Concatenate(axis=3, name = 'Con67859', )([Zer94344,in0Con67859])
Min4011 = keras.layers.Minimum(name = 'Min4011', )([Zer88617,Con67859])
Zer1420 = keras.layers.ZeroPadding2D(padding=((4, 0), (3, 0)), name = 'Zer1420', )(Min4011)
Max6794 = keras.layers.Maximum(name = 'Max6794', )([Con90790,Zer1420])
model = tf.keras.models.Model(inputs=[in0Min8597,in1Min8597,in0Con90790,in0Max39171,in1Max39171,in0Ave32783,in0Con67859], outputs=Max6794)
in0Min8597 = tf.constant([[[[0.3453], [0.3774]], [[0.6316], [0.9593]]]])
in1Min8597 = tf.constant([[[[0.1069], [0.9696]], [[0.2054], [0.2683]]]])
in0Con90790 = tf.constant([[[[0.8428, 0.068, 0.0656], [0.754, 0.8014, 0.7529], [0.0222, 0.6609, 0.6146], [0.0276, 0.6552, 0.9925], [0.8281, 0.797, 0.5633], [0.4669, 0.8029, 0.3816], [0.2454, 0.4938, 0.6181]], [[0.7827, 0.9393, 0.2012], [0.8833, 0.2082, 0.6317], [0.7067, 0.9119, 0.2905], [0.065, 0.5379, 0.8056], [0.2825, 0.9925, 0.4111], [0.0048, 0.531, 0.767], [0.5462, 0.7714, 0.6973]], [[0.5873, 0.3157, 0.8876], [0.5165, 0.3714, 0.3065], [0.5778, 0.3726, 0.2786], [0.8053, 0.2912, 0.6006], [0.3593, 0.311, 0.5176], [0.2231, 0.6767, 0.923], [0.2521, 0.7784, 0.514]], [[0.3591, 0.0742, 0.0028], [0.9585, 0.9163, 0.0583], [0.3935, 0.2365, 0.9011], [0.8983, 0.0974, 0.6615], [0.9317, 0.6917, 0.1452], [0.9556, 0.0401, 0.806], [0.7829, 0.0034, 0.6875]], [[0.1285, 0.5405, 0.8074], [0.6476, 0.7855, 0.7201], [0.5279, 0.2086, 0.1124], [0.1871, 0.0102, 0.2997], [0.2515, 0.7055, 0.1286], [0.9545, 0.2619, 0.5686], [0.6116, 0.9927, 0.0351]], [[0.9468, 0.7496, 0.9226], [0.6277, 0.2003, 0.532], [0.8425, 0.8481, 0.3832], [0.3161, 0.5592, 0.0603], [0.3069, 0.0814, 0.2267], [0.2084, 0.8204, 0.6945], [0.5597, 0.0037, 0.4191]], [[0.3748, 0.0767, 0.0676], [0.8986, 0.7316, 0.8903], [0.5776, 0.5312, 0.3225], [0.2746, 0.6253, 0.1649], [0.6769, 0.6137, 0.0605], [0.717, 0.12, 0.3646], [0.0726, 0.7677, 0.5354]]]])
in0Max39171 = tf.constant([[[[[0.8026, 0.6977], [0.8202, 0.9739]], [[0.4598, 0.0197], [0.413, 0.8104]]], [[[0.5342, 0.2744], [0.7248, 0.7518]], [[0.5818, 0.8868], [0.8602, 0.907]]]]])
in1Max39171 = tf.constant([[[[[0.6438, 0.7755], [0.169, 0.303]], [[0.1621, 0.1474], [0.531, 0.9834]]], [[[0.2484, 0.6825], [0.2387, 0.4249]], [[0.2817, 0.4751], [0.1156, 0.2572]]]]])
in0Ave32783 = tf.constant([[[[1.576, 1.0924], [1.2867, 1.9049]], [[1.9091, 1.6359], [1.5838, 1.4347]]]])
in0Con67859 = tf.constant([[[[0.3579, 0.7859], [0.5698, 0.5514], [0.4162, 0.7125], [0.872, 0.6322]], [[0.4949, 0.5105], [0.2059, 0.1477], [0.7694, 0.6691], [0.1943, 0.7496]], [[0.7644, 0.3158], [0.6072, 0.6179], [0.2625, 0.5927], [0.0598, 0.168]]]])
print (np.array2string(model.predict([in0Min8597,in1Min8597,in0Con90790,in0Max39171,in1Max39171,in0Ave32783,in0Con67859],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Max6794.png')

LMin8597 = minimum_layer([[[[[0.3453], [0.3774]], [[0.6316], [0.9593]]]], [[[[0.1069], [0.9696]], [[0.2054], [0.2683]]]]], Min8597), 
LRes2308 = reshape_layer(Min8597, [2, 2, 1, 1], Res2308), 
LUp_43080 = up_sampling3D_layer(Res2308, 2, 1, 1, Up_43080), 
LRes21915 = reshape_layer(Up_43080, [4, 2, 1], Res21915), 
LRes24346 = reshape_layer(Res21915, [4, 2], Res24346), 
LFla99131 = flatten_layer(Res24346, Fla99131), 
LRes63523 = reshape_layer(Fla99131, [8, 1], Res63523), 
LCro33214 = cropping1D_layer(Res63523, 1, 0, Cro33214), 
LRes89436 = reshape_layer(Cro33214, [7, 1, 1], Res89436), 
LZer95864 = zero_padding2D_layer(Res89436, 0, 0, 6, 0, Zer95864), 
LCon90790 = concatenate_layer([Zer95864,[[[[0.8428, 0.068, 0.0656], [0.754, 0.8014, 0.7529], [0.0222, 0.6609, 0.6146], [0.0276, 0.6552, 0.9925], [0.8281, 0.797, 0.5633], [0.4669, 0.8029, 0.3816], [0.2454, 0.4938, 0.6181]], [[0.7827, 0.9393, 0.2012], [0.8833, 0.2082, 0.6317], [0.7067, 0.9119, 0.2905], [0.065, 0.5379, 0.8056], [0.2825, 0.9925, 0.4111], [0.0048, 0.531, 0.767], [0.5462, 0.7714, 0.6973]], [[0.5873, 0.3157, 0.8876], [0.5165, 0.3714, 0.3065], [0.5778, 0.3726, 0.2786], [0.8053, 0.2912, 0.6006], [0.3593, 0.311, 0.5176], [0.2231, 0.6767, 0.923], [0.2521, 0.7784, 0.514]], [[0.3591, 0.0742, 0.0028], [0.9585, 0.9163, 0.0583], [0.3935, 0.2365, 0.9011], [0.8983, 0.0974, 0.6615], [0.9317, 0.6917, 0.1452], [0.9556, 0.0401, 0.806], [0.7829, 0.0034, 0.6875]], [[0.1285, 0.5405, 0.8074], [0.6476, 0.7855, 0.7201], [0.5279, 0.2086, 0.1124], [0.1871, 0.0102, 0.2997], [0.2515, 0.7055, 0.1286], [0.9545, 0.2619, 0.5686], [0.6116, 0.9927, 0.0351]], [[0.9468, 0.7496, 0.9226], [0.6277, 0.2003, 0.532], [0.8425, 0.8481, 0.3832], [0.3161, 0.5592, 0.0603], [0.3069, 0.0814, 0.2267], [0.2084, 0.8204, 0.6945], [0.5597, 0.0037, 0.4191]], [[0.3748, 0.0767, 0.0676], [0.8986, 0.7316, 0.8903], [0.5776, 0.5312, 0.3225], [0.2746, 0.6253, 0.1649], [0.6769, 0.6137, 0.0605], [0.717, 0.12, 0.3646], [0.0726, 0.7677, 0.5354]]]]], 3, Con90790), 
LMax39171 = maximum_layer([[[[[[0.8026, 0.6977], [0.8202, 0.9739]], [[0.4598, 0.0197], [0.413, 0.8104]]], [[[0.5342, 0.2744], [0.7248, 0.7518]], [[0.5818, 0.8868], [0.8602, 0.907]]]]], [[[[[0.6438, 0.7755], [0.169, 0.303]], [[0.1621, 0.1474], [0.531, 0.9834]]], [[[0.2484, 0.6825], [0.2387, 0.4249]], [[0.2817, 0.4751], [0.1156, 0.2572]]]]]], Max39171), 
LRes52243 = reshape_layer(Max39171, [2, 2, 4], Res52243), 
LZer88617 = zero_padding2D_layer(Res52243, 1, 0, 2, 0, Zer88617), 
LAve32783 = average_pooling2D_layer([[[[1.576, 1.0924], [1.2867, 1.9049]], [[1.9091, 1.6359], [1.5838, 1.4347]]]], 2, 1, Ave32783), 
LZer94344 = zero_padding2D_layer(Ave32783, 1, 1, 1, 1, Zer94344), 
LCon67859 = concatenate_layer([Zer94344,[[[[0.3579, 0.7859], [0.5698, 0.5514], [0.4162, 0.7125], [0.872, 0.6322]], [[0.4949, 0.5105], [0.2059, 0.1477], [0.7694, 0.6691], [0.1943, 0.7496]], [[0.7644, 0.3158], [0.6072, 0.6179], [0.2625, 0.5927], [0.0598, 0.168]]]]], 3, Con67859), 
LMin4011 = minimum_layer([Zer88617,Con67859], Min4011), 
LZer1420 = zero_padding2D_layer(Min4011, 4, 0, 3, 0, Zer1420), 
LMax6794 = maximum_layer([Con90790,Zer1420], Max6794), 
exec_layers([LMin8597,LRes2308,LUp_43080,LRes21915,LRes24346,LFla99131,LRes63523,LCro33214,LRes89436,LZer95864,LCon90790,LMax39171,LRes52243,LZer88617,LAve32783,LZer94344,LCon67859,LMin4011,LZer1420,LMax6794],["Min8597","Res2308","Up_43080","Res21915","Res24346","Fla99131","Res63523","Cro33214","Res89436","Zer95864","Con90790","Max39171","Res52243","Zer88617","Ave32783","Zer94344","Con67859","Min4011","Zer1420","Max6794"],Max6794,"Max6794")

Actual (Unparsed): [[[[0.0000000, 0.8428000, 0.0680000, 0.0656000], [0.0000000, 0.7540000, 0.8014000, 0.7529000], [0.0000000, 0.0222000, 0.6609000, 0.6146000], [0.0000000, 0.0276000, 0.6552000, 0.9925000], [0.0000000, 0.8281000, 0.7970000, 0.5633000], [0.0000000, 0.4669000, 0.8029000, 0.3816000], [0.3774000, 0.2454000, 0.4938000, 0.6181000]], [[0.0000000, 0.7827000, 0.9393000, 0.2012000], [0.0000000, 0.8833000, 0.2082000, 0.6317000], [0.0000000, 0.7067000, 0.9119000, 0.2905000], [0.0000000, 0.0650000, 0.5379000, 0.8056000], [0.0000000, 0.2825000, 0.9925000, 0.4111000], [0.0000000, 0.0048000, 0.5310000, 0.7670000], [0.1069000, 0.5462000, 0.7714000, 0.6973000]], [[0.0000000, 0.5873000, 0.3157000, 0.8876000], [0.0000000, 0.5165000, 0.3714000, 0.3065000], [0.0000000, 0.5778000, 0.3726000, 0.2786000], [0.0000000, 0.8053000, 0.2912000, 0.6006000], [0.0000000, 0.3593000, 0.3110000, 0.5176000], [0.0000000, 0.2231000, 0.6767000, 0.9230000], [0.3774000, 0.2521000, 0.7784000, 0.5140000]], [[0.0000000, 0.3591000, 0.0742000, 0.0028000], [0.0000000, 0.9585000, 0.9163000, 0.0583000], [0.0000000, 0.3935000, 0.2365000, 0.9011000], [0.0000000, 0.8983000, 0.0974000, 0.6615000], [0.0000000, 0.9317000, 0.6917000, 0.1452000], [0.0000000, 0.9556000, 0.0401000, 0.8060000], [0.2054000, 0.7829000, 0.0034000, 0.6875000]], [[0.0000000, 0.1285000, 0.5405000, 0.8074000], [0.0000000, 0.6476000, 0.7855000, 0.7201000], [0.0000000, 0.5279000, 0.2086000, 0.1124000], [0.0000000, 0.1871000, 0.0102000, 0.2997000], [0.0000000, 0.2515000, 0.7055000, 0.1286000], [0.0000000, 0.9545000, 0.2619000, 0.5686000], [0.2683000, 0.6116000, 0.9927000, 0.0351000]], [[0.0000000, 0.9468000, 0.7496000, 0.9226000], [0.0000000, 0.6277000, 0.2003000, 0.5320000], [0.0000000, 0.8425000, 0.8481000, 0.3832000], [0.0000000, 0.3161000, 0.5592000, 0.0603000], [0.0000000, 0.3069000, 0.0814000, 0.2267000], [0.8026000, 0.7755000, 0.8204000, 0.6945000], [0.2054000, 0.5597000, 0.1943000, 0.7496000]], [[0.0000000, 0.3748000, 0.0767000, 0.0676000], [0.0000000, 0.8986000, 0.7316000, 0.8903000], [0.0000000, 0.5776000, 0.5312000, 0.3225000], [0.0000000, 0.2746000, 0.6253000, 0.1649000], [0.0000000, 0.6769000, 0.6137000, 0.0605000], [0.0000000, 0.7170000, 0.2625000, 0.5927000], [0.2683000, 0.0726000, 0.7677000, 0.5354000]]]]

Expected (Unparsed): [[[[0,0.8428,0.068,0.0656],[0,0.754,0.8014,0.7529],[0,0.0222,0.6609,0.6146],[0,0.0276,0.6552,0.9925],[0,0.8281,0.797,0.5633],[0,0.4669,0.8029,0.3816],[0.3774,0.2454,0.4938,0.6181]],[[0,0.7827,0.9393,0.2012],[0,0.8833,0.2082,0.6317],[0,0.7067,0.9119,0.2905],[0,0.065,0.5379,0.8056],[0,0.2825,0.9925,0.4111],[0,0.0048,0.531,0.767],[0.1069,0.5462,0.7714,0.6973]],[[0,0.5873,0.3157,0.8876],[0,0.5165,0.3714,0.3065],[0,0.5778,0.3726,0.2786],[0,0.8053,0.2912,0.6006],[0,0.3593,0.311,0.5176],[0,0.2231,0.6767,0.923],[0.3774,0.2521,0.7784,0.514]],[[0,0.3591,0.0742,0.0028],[0,0.9585,0.9163,0.0583],[0,0.3935,0.2365,0.9011],[0,0.8983,0.0974,0.6615],[0,0.9317,0.6917,0.1452],[0,0.9556,0.0401,0.806],[0.2054,0.7829,0.0034,0.6875]],[[0,0.1285,0.5405,0.8074],[0,0.6476,0.7855,0.7201],[0,0.5279,0.2086,0.1124],[0,0.1871,0.0102,0.2997],[0,0.2515,0.7055,0.1286],[0,0.9545,0.2619,0.5686],[0.2683,0.6116,0.9927,0.0351]],[[0,0.9468,0.7496,0.9226],[0,0.6277,0.2003,0.532],[0,0.8425,0.8481,0.3832],[0,0.3161,0.5592,0.0603],[0,0.3069,0.0814,0.2267],[0.8026,0.7755,0.8204,0.6945],[0.2054,0.5597,0.1943,0.7496]],[[0,0.3748,0.0767,0.0676],[0,0.8986,0.7316,0.8903],[0,0.5776,0.5312,0.3225],[0,0.2746,0.6253,0.1649],[0,0.6769,0.6137,0.0605],[0,0.717,0.2625,0.5927],[0.2683,0.0726,0.7677,0.5354]]]]

Actual:   [[[[0, 0.8428, 0.068, 0.0656], [0, 0.754, 0.8014, 0.7529], [0, 0.0222, 0.6609, 0.6146], [0, 0.0276, 0.6552, 0.9925], [0, 0.8281, 0.797, 0.5633], [0, 0.4669, 0.8029, 0.3816], [0.3774, 0.2454, 0.4938, 0.6181]], [[0, 0.7827, 0.9393, 0.2012], [0, 0.8833, 0.2082, 0.6317], [0, 0.7067, 0.9119, 0.2905], [0, 0.065, 0.5379, 0.8056], [0, 0.2825, 0.9925, 0.4111], [0, 0.0048, 0.531, 0.767], [0.1069, 0.5462, 0.7714, 0.6973]], [[0, 0.5873, 0.3157, 0.8876], [0, 0.5165, 0.3714, 0.3065], [0, 0.5778, 0.3726, 0.2786], [0, 0.8053, 0.2912, 0.6006], [0, 0.3593, 0.311, 0.5176], [0, 0.2231, 0.6767, 0.923], [0.3774, 0.2521, 0.7784, 0.514]], [[0, 0.3591, 0.0742, 0.0028], [0, 0.9585, 0.9163, 0.0583], [0, 0.3935, 0.2365, 0.9011], [0, 0.8983, 0.0974, 0.6615], [0, 0.9317, 0.6917, 0.1452], [0, 0.9556, 0.0401, 0.806], [0.2054, 0.7829, 0.0034, 0.6875]], [[0, 0.1285, 0.5405, 0.8074], [0, 0.6476, 0.7855, 0.7201], [0, 0.5279, 0.2086, 0.1124], [0, 0.1871, 0.0102, 0.2997], [0, 0.2515, 0.7055, 0.1286], [0, 0.9545, 0.2619, 0.5686], [0.2683, 0.6116, 0.9927, 0.0351]], [[0, 0.9468, 0.7496, 0.9226], [0, 0.6277, 0.2003, 0.532], [0, 0.8425, 0.8481, 0.3832], [0, 0.3161, 0.5592, 0.0603], [0, 0.3069, 0.0814, 0.2267], [0.8026, 0.7755, 0.8204, 0.6945], [0.2054, 0.5597, 0.1943, 0.7496]], [[0, 0.3748, 0.0767, 0.0676], [0, 0.8986, 0.7316, 0.8903], [0, 0.5776, 0.5312, 0.3225], [0, 0.2746, 0.6253, 0.1649], [0, 0.6769, 0.6137, 0.0605], [0, 0.717, 0.2625, 0.5927], [0.2683, 0.0726, 0.7677, 0.5354]]]]

Expected: [[[[0, 0.8428, 0.068, 0.0656], [0, 0.754, 0.8014, 0.7529], [0, 0.0222, 0.6609, 0.6146], [0, 0.0276, 0.6552, 0.9925], [0, 0.8281, 0.797, 0.5633], [0, 0.4669, 0.8029, 0.3816], [0.3774, 0.2454, 0.4938, 0.6181]], [[0, 0.7827, 0.9393, 0.2012], [0, 0.8833, 0.2082, 0.6317], [0, 0.7067, 0.9119, 0.2905], [0, 0.065, 0.5379, 0.8056], [0, 0.2825, 0.9925, 0.4111], [0, 0.0048, 0.531, 0.767], [0.1069, 0.5462, 0.7714, 0.6973]], [[0, 0.5873, 0.3157, 0.8876], [0, 0.5165, 0.3714, 0.3065], [0, 0.5778, 0.3726, 0.2786], [0, 0.8053, 0.2912, 0.6006], [0, 0.3593, 0.311, 0.5176], [0, 0.2231, 0.6767, 0.923], [0.3774, 0.2521, 0.7784, 0.514]], [[0, 0.3591, 0.0742, 0.0028], [0, 0.9585, 0.9163, 0.0583], [0, 0.3935, 0.2365, 0.9011], [0, 0.8983, 0.0974, 0.6615], [0, 0.9317, 0.6917, 0.1452], [0, 0.9556, 0.0401, 0.806], [0.2054, 0.7829, 0.0034, 0.6875]], [[0, 0.1285, 0.5405, 0.8074], [0, 0.6476, 0.7855, 0.7201], [0, 0.5279, 0.2086, 0.1124], [0, 0.1871, 0.0102, 0.2997], [0, 0.2515, 0.7055, 0.1286], [0, 0.9545, 0.2619, 0.5686], [0.2683, 0.6116, 0.9927, 0.0351]], [[0, 0.9468, 0.7496, 0.9226], [0, 0.6277, 0.2003, 0.532], [0, 0.8425, 0.8481, 0.3832], [0, 0.3161, 0.5592, 0.0603], [0, 0.3069, 0.0814, 0.2267], [0.8026, 0.7755, 0.8204, 0.6945], [0.2054, 0.5597, 0.1943, 0.7496]], [[0, 0.3748, 0.0767, 0.0676], [0, 0.8986, 0.7316, 0.8903], [0, 0.5776, 0.5312, 0.3225], [0, 0.2746, 0.6253, 0.1649], [0, 0.6769, 0.6137, 0.0605], [0, 0.717, 0.2625, 0.5927], [0.2683, 0.0726, 0.7677, 0.5354]]]]