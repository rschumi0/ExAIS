import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Loc4303 = tf.keras.layers.Input(shape=([2, 1]))

Loc4303 = keras.layers.LocallyConnected1D(4, (2),strides=(1), name = 'Loc4303', )(in0Loc4303)
Fla390 = keras.layers.Flatten(name = 'Fla390', )(Loc4303)
Res98950 = keras.layers.Reshape((4, 1), name = 'Res98950', )(Fla390)
Ave33216 = keras.layers.AveragePooling1D(pool_size=(4), strides=(1), padding='valid', name = 'Ave33216', )(Res98950)
model = tf.keras.models.Model(inputs=[in0Loc4303], outputs=Ave33216)
w = model.get_layer('Loc4303').get_weights() 
w[0] = np.array([[[0.9187, 0.9568, 0.0732, 0.4846], [0.7991, 0.2459, 0.0324, 0.6978]]])
w[1] = np.array([[0, 0, 0, 0]])
model.get_layer('Loc4303').set_weights(w) 
in0Loc4303 = tf.constant([[[0.004], [0.3148]]])
print (np.array2string(model.predict([in0Loc4303],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Ave33216.png')

LLoc4303 = locally_connected1D_layer([[[0.004], [0.3148]]], 2,[[[0.9187, 0.9568, 0.0732, 0.4846], [0.7991, 0.2459, 0.0324, 0.6978]]],[[0, 0, 0, 0]], 1, Loc4303), 
LFla390 = flatten_layer(Loc4303, Fla390), 
LRes98950 = reshape_layer(Fla390, [4, 1], Res98950), 
LAve33216 = average_pooling1D_layer(Res98950, 4, 1, false, Ave33216), 
exec_layers([LLoc4303,LFla390,LRes98950,LAve33216],["Loc4303","Fla390","Res98950","Ave33216"],Ave33216,"Ave33216")

Actual (Unparsed): [[[0.1421415]]]

Expected (Unparsed): [[[0.14214154]]]

Actual:   [[[0.1422]]]

Expected: [[[0.1422]]]