import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Up_98684 = tf.keras.layers.Input(shape=([2, 3, 1]))
in0Zer60227 = tf.keras.layers.Input(shape=([4, 3, 2]))
in0Con19448 = tf.keras.layers.Input(shape=([4]))

Up_98684 = keras.layers.UpSampling2D(size=(1, 1), name = 'Up_98684', )(in0Up_98684)
Res93249 = keras.layers.Reshape((2, 3), name = 'Res93249', )(Up_98684)
Fla93843 = keras.layers.Flatten(name = 'Fla93843', )(Res93249)
Zer60227 = keras.layers.ZeroPadding2D(padding=((1, 1), (1, 1)), name = 'Zer60227', )(in0Zer60227)
Glo42118 = keras.layers.GlobalAveragePooling2D(name = 'Glo42118', )(Zer60227)
Con19448 = keras.layers.Concatenate(axis=1, name = 'Con19448', )([Glo42118,in0Con19448])
Max46781 = keras.layers.Maximum(name = 'Max46781', )([Fla93843,Con19448])
Mas83365 = keras.layers.Masking(mask_value=1, name = 'Mas83365', )(Max46781)
model = tf.keras.models.Model(inputs=[in0Up_98684,in0Zer60227,in0Con19448], outputs=Mas83365)
in0Up_98684 = tf.constant([[[[1.4782], [1.7083], [1.0783]], [[1.1335], [1.218], [1.1628]]]])
in0Zer60227 = tf.constant([[[[1.8945, 1.9837], [1.2092, 1.3001], [1.9143, 1.4512]], [[1.2815, 1.587], [1.6424, 1.4723], [1.2733, 1.0038]], [[1.4681, 1.4365], [1.583, 1.4534], [1.0532, 1.0733]], [[1.2048, 1.4486], [1.5337, 1.5277], [1.7213, 1.4647]]]])
in0Con19448 = tf.constant([[0.7996, 0.7857, 0.6219, 0.1348]])
print (np.array2string(model.predict([in0Up_98684,in0Zer60227,in0Con19448],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Mas83365.png')

LUp_98684 = up_sampling2D_layer([[[[1.4782], [1.7083], [1.0783]], [[1.1335], [1.218], [1.1628]]]], 1, 1, Up_98684), 
LRes93249 = reshape_layer(Up_98684, [2, 3], Res93249), 
LFla93843 = flatten_layer(Res93249, Fla93843), 
LZer60227 = zero_padding2D_layer([[[[1.8945, 1.9837], [1.2092, 1.3001], [1.9143, 1.4512]], [[1.2815, 1.587], [1.6424, 1.4723], [1.2733, 1.0038]], [[1.4681, 1.4365], [1.583, 1.4534], [1.0532, 1.0733]], [[1.2048, 1.4486], [1.5337, 1.5277], [1.7213, 1.4647]]]], 1, 1, 1, 1, Zer60227), 
LGlo42118 = global_average_pooling2D_layer(Zer60227, Glo42118), 
LCon19448 = concatenate_layer([Glo42118,[[0.7996, 0.7857, 0.6219, 0.1348]]], 1, Con19448), 
LMax46781 = maximum_layer([Fla93843,Con19448], Max46781), 
LMas83365 = masking_layer(Max46781, 1, Mas83365), 
exec_layers([LUp_98684,LRes93249,LFla93843,LZer60227,LGlo42118,LCon19448,LMax46781,LMas83365],["Up_98684","Res93249","Fla93843","Zer60227","Glo42118","Con19448","Max46781","Mas83365"],Mas83365,"Mas83365")

Actual (Unparsed): [[1.4782000, 1.7083000, 1.0783000, 1.1335000, 1.2180001, 1.1628000]]

Expected (Unparsed): [[1.4782,1.7083,1.0783,1.1335,1.218,1.1628]]

Actual:   [[1.4782, 1.7083, 1.0783, 1.1335, 1.2181, 1.1628]]

Expected: [[1.4782, 1.7083, 1.0783, 1.1335, 1.218, 1.1628]]