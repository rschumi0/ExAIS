import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Up_20281 = tf.keras.layers.Input(shape=([3, 1, 4]))

Up_20281 = keras.layers.UpSampling2D(size=(1, 1), name = 'Up_20281', )(in0Up_20281)
Res81182 = keras.layers.Reshape((3, 4), name = 'Res81182', )(Up_20281)
Sim39419 = keras.layers.SimpleRNN(2,name = 'Sim39419', )(Res81182)
model = tf.keras.models.Model(inputs=[in0Up_20281], outputs=Sim39419)
w = model.get_layer('Sim39419').get_weights() 
w[0] = np.array([[1, 2], [5, 1], [10, 10], [9, 5]])
w[1] = np.array([[7, 4], [8, 2]])
w[2] = np.array([6, 7])
model.get_layer('Sim39419').set_weights(w) 
in0Up_20281 = tf.constant([[[[1.7594, 1.6685, 1.5692, 1.7477]], [[1.8322, 1.9223, 1.1982, 1.6228]], [[1.1545, 1.0156, 1.857, 1.2883]]]])
print (np.array2string(model.predict([in0Up_20281],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Sim39419.png')

LUp_20281 = up_sampling2D_layer([[[[1.7594, 1.6685, 1.5692, 1.7477]], [[1.8322, 1.9223, 1.1982, 1.6228]], [[1.1545, 1.0156, 1.857, 1.2883]]]], 1, 1, Up_20281), 
LRes81182 = reshape_layer(Up_20281, [3, 4], Res81182), 
LSim39419 = simple_rnn_layer(Res81182,[[1, 2], [5, 1], [10, 10], [9, 5]],[[7, 4], [8, 2]],[6, 7], Sim39419), 
exec_layers([LUp_20281,LRes81182,LSim39419],["Up_20281","Res81182","Sim39419"],Sim39419,"Sim39419")

Actual (Unparsed): [[1.0000000, 1.0000000]]

Expected (Unparsed): [[1.0,1.0]]

Actual:   [[1, 1]]

Expected: [[1, 1]]