import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Mul50635 = tf.keras.layers.Input(shape=([2, 2, 2, 1]))
in1Mul50635 = tf.keras.layers.Input(shape=([2, 2, 2, 1]))

Mul50635 = keras.layers.Multiply(name = 'Mul50635', )([in0Mul50635,in1Mul50635])
Lea79027 = keras.layers.LeakyReLU(alpha=7.536212038797492, name = 'Lea79027', )(Mul50635)
model = tf.keras.models.Model(inputs=[in0Mul50635,in1Mul50635], outputs=Lea79027)
in0Mul50635 = tf.constant([[[[[0.3586], [0.6286]], [[0.2099], [0.392]]], [[[0.2227], [0.0434]], [[0.8623], [0.0759]]]]])
in1Mul50635 = tf.constant([[[[[0.9851], [0.0233]], [[0.4966], [0.007]]], [[[0.7424], [0.3639]], [[0.7394], [0.6602]]]]])
print (np.array2string(model.predict([in0Mul50635,in1Mul50635],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Lea79027.png')

LMul50635 = multiply_layer([[[[[[0.3586], [0.6286]], [[0.2099], [0.392]]], [[[0.2227], [0.0434]], [[0.8623], [0.0759]]]]], [[[[[0.9851], [0.0233]], [[0.4966], [0.007]]], [[[0.7424], [0.3639]], [[0.7394], [0.6602]]]]]], Mul50635), 
LLea79027 = leaky_relu_layer(Mul50635, 7.536212038797492, Lea79027), 
exec_layers([LMul50635,LLea79027],["Mul50635","Lea79027"],Lea79027,"Lea79027")

Actual (Unparsed): [[[[[0.3532568], [0.0146464]], [[0.1042363], [0.0027440]]], [[[0.1653325], [0.0157933]], [[0.6375846], [0.0501092]]]]]

Expected (Unparsed): [[[[[0.35325685999999995],[0.014646380000000002]],[[0.10423634],[0.0027440000000000003]]],[[[0.16533248],[0.01579326]],[[0.6375846199999999],[0.050109179999999996]]]]]

Actual:   [[[[[0.3533], [0.0147]], [[0.1043], [0.0028]]], [[[0.1654], [0.0158]], [[0.6376], [0.0502]]]]]

Expected: [[[[[0.3533], [0.0147]], [[0.1043], [0.0028]]], [[[0.1654], [0.0158]], [[0.6376], [0.0502]]]]]