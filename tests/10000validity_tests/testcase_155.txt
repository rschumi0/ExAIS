import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Add43293 = tf.keras.layers.Input(shape=([2, 1]))
in1Add43293 = tf.keras.layers.Input(shape=([2, 1]))
in0Con39233 = tf.keras.layers.Input(shape=([4, 10]))
in0Sub12968 = tf.keras.layers.Input(shape=([2, 3, 2, 2]))
in1Sub12968 = tf.keras.layers.Input(shape=([2, 3, 2, 2]))
in0Sep30463 = tf.keras.layers.Input(shape=([1, 2]))
in0Min79374 = tf.keras.layers.Input(shape=([2, 2]))
in1Min79374 = tf.keras.layers.Input(shape=([2, 2]))
in0Con81416 = tf.keras.layers.Input(shape=([2, 10]))

Add43293 = keras.layers.Add(name = 'Add43293', )([in0Add43293,in1Add43293])
Res18319 = keras.layers.Reshape((2, 1, 1), name = 'Res18319', )(Add43293)
Up_25560 = keras.layers.UpSampling2D(size=(2, 2), name = 'Up_25560', )(Res18319)
Res55974 = keras.layers.Reshape((4, 2), name = 'Res55974', )(Up_25560)
Con39233 = keras.layers.Concatenate(axis=2, name = 'Con39233', )([Res55974,in0Con39233])
Sub12968 = keras.layers.Subtract(name = 'Sub12968', )([in0Sub12968,in1Sub12968])
Res41477 = keras.layers.Reshape((2, 3, 4), name = 'Res41477', )(Sub12968)
Res52570 = keras.layers.Reshape((2, 12), name = 'Res52570', )(Res41477)
Sep30463 = keras.layers.SeparableConv1D(2, (1),strides=(1), padding='same', name = 'Sep30463', )(in0Sep30463)
Zer2629 = keras.layers.ZeroPadding1D(padding=((1, 0)), name = 'Zer2629', )(Sep30463)
Min79374 = keras.layers.Minimum(name = 'Min79374', )([in0Min79374,in1Min79374])
Sub78541 = keras.layers.Subtract(name = 'Sub78541', )([Zer2629,Min79374])
Sof11887 = keras.layers.Softmax(axis=1, name = 'Sof11887', )(Sub78541)
Con81416 = keras.layers.Concatenate(axis=2, name = 'Con81416', )([Sof11887,in0Con81416])
Sub12121 = keras.layers.Subtract(name = 'Sub12121', )([Res52570,Con81416])
Zer72152 = keras.layers.ZeroPadding1D(padding=((2, 0)), name = 'Zer72152', )(Sub12121)
Add41410 = keras.layers.Add(name = 'Add41410', )([Con39233,Zer72152])
model = tf.keras.models.Model(inputs=[in0Add43293,in1Add43293,in0Con39233,in0Sub12968,in1Sub12968,in0Sep30463,in0Min79374,in1Min79374,in0Con81416], outputs=Add41410)
w = model.get_layer('Sep30463').get_weights() 
w[0] = np.array([[[0.8627], [0.9879]]])
w[1] = np.array([[[0.7195, 0.087], [0.6015, 0.315]]])
w[2] = np.array([0, 0])
model.get_layer('Sep30463').set_weights(w) 
in0Add43293 = tf.constant([[[0.0927], [0.3461]]])
in1Add43293 = tf.constant([[[0.6401], [0.0463]]])
in0Con39233 = tf.constant([[[0.766, 0.302, 0.2594, 0.1379, 0.1501, 0.9673, 0.6332, 0.1641, 0.7599, 0.1885], [0.0959, 0.8312, 0.0205, 0.8678, 0.3314, 0.3151, 0.1513, 0.5967, 0.7748, 0.6607], [0.644, 0.793, 0.0206, 0.3493, 0.6448, 0.4038, 0.0602, 0.8421, 0.76, 0.3822], [0.6017, 0.5138, 0.3748, 0.2259, 0.1226, 0.4227, 0.0463, 0.0946, 0.1063, 0.045]]])
in0Sub12968 = tf.constant([[[[[0.0759, 0.9472], [0.9929, 0.5034]], [[0.1926, 0.906], [0.3759, 0.9066]], [[0.5811, 0.7917], [0.8045, 0.8103]]], [[[0.7634, 0.4875], [0.2338, 0.6369]], [[0.5658, 0.2064], [0.0798, 0.2283]], [[0.1097, 0.3235], [0.5095, 0.3232]]]]])
in1Sub12968 = tf.constant([[[[[0.7713, 0.3925], [0.3423, 0.4777]], [[0.8393, 0.2736], [0.2469, 0.1437]], [[0.7086, 0.3822], [0.5478, 0.8472]]], [[[0.8412, 0.6895], [0.3577, 0.6666]], [[0.3954, 0.2545], [0.9463, 0.503]], [[0.3829, 0.7466], [0.2195, 0.9525]]]]])
in0Sep30463 = tf.constant([[[0.4452, 0.6317]]])
in0Min79374 = tf.constant([[[0.9402, 0.9478], [0.858, 0.4356]]])
in1Min79374 = tf.constant([[[0.8488, 0.7144], [0.1717, 0.7754]]])
in0Con81416 = tf.constant([[[0.4532, 0.9573, 0.4555, 0.627, 0.5239, 0.5256, 0.6264, 0.8615, 0.4875, 0.7212], [0.1017, 0.0949, 0.5273, 0.6397, 0.8819, 0.6069, 0.0785, 0.0923, 0.5585, 0.4043]]])
print (np.array2string(model.predict([in0Add43293,in1Add43293,in0Con39233,in0Sub12968,in1Sub12968,in0Sep30463,in0Min79374,in1Min79374,in0Con81416],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Add41410.png')

LAdd43293 = add_layer([[[[0.0927], [0.3461]]], [[[0.6401], [0.0463]]]], Add43293), 
LRes18319 = reshape_layer(Add43293, [2, 1, 1], Res18319), 
LUp_25560 = up_sampling2D_layer(Res18319, 2, 2, Up_25560), 
LRes55974 = reshape_layer(Up_25560, [4, 2], Res55974), 
LCon39233 = concatenate_layer([Res55974,[[[0.766, 0.302, 0.2594, 0.1379, 0.1501, 0.9673, 0.6332, 0.1641, 0.7599, 0.1885], [0.0959, 0.8312, 0.0205, 0.8678, 0.3314, 0.3151, 0.1513, 0.5967, 0.7748, 0.6607], [0.644, 0.793, 0.0206, 0.3493, 0.6448, 0.4038, 0.0602, 0.8421, 0.76, 0.3822], [0.6017, 0.5138, 0.3748, 0.2259, 0.1226, 0.4227, 0.0463, 0.0946, 0.1063, 0.045]]]], 2, Con39233), 
LSub12968 = subtract_layer([[[[[0.0759, 0.9472], [0.9929, 0.5034]], [[0.1926, 0.906], [0.3759, 0.9066]], [[0.5811, 0.7917], [0.8045, 0.8103]]], [[[0.7634, 0.4875], [0.2338, 0.6369]], [[0.5658, 0.2064], [0.0798, 0.2283]], [[0.1097, 0.3235], [0.5095, 0.3232]]]]], [[[[[0.7713, 0.3925], [0.3423, 0.4777]], [[0.8393, 0.2736], [0.2469, 0.1437]], [[0.7086, 0.3822], [0.5478, 0.8472]]], [[[0.8412, 0.6895], [0.3577, 0.6666]], [[0.3954, 0.2545], [0.9463, 0.503]], [[0.3829, 0.7466], [0.2195, 0.9525]]]]], Sub12968), 
LRes41477 = reshape_layer(Sub12968, [2, 3, 4], Res41477), 
LRes52570 = reshape_layer(Res41477, [2, 12], Res52570), 
LSep30463 = separable_conv1D_layer([[[0.4452, 0.6317]]], 1,[[[[0.8627], [0.9879]]],[[[0.7195, 0.087], [0.6015, 0.315]]]],[0, 0], 1, true, Sep30463), 
LZer2629 = zero_padding1D_layer(Sep30463, 1, 0, Zer2629), 
LMin79374 = minimum_layer([[[[0.9402, 0.9478], [0.858, 0.4356]]], [[[0.8488, 0.7144], [0.1717, 0.7754]]]], Min79374), 
LSub78541 = subtract_layer(Zer2629,Min79374, Sub78541), 
LSof11887 = softmax_layer(Sub78541, 1, Sof11887), 
LCon81416 = concatenate_layer([Sof11887,[[[0.4532, 0.9573, 0.4555, 0.627, 0.5239, 0.5256, 0.6264, 0.8615, 0.4875, 0.7212], [0.1017, 0.0949, 0.5273, 0.6397, 0.8819, 0.6069, 0.0785, 0.0923, 0.5585, 0.4043]]]], 2, Con81416), 
LSub12121 = subtract_layer(Res52570,Con81416, Sub12121), 
LZer72152 = zero_padding1D_layer(Sub12121, 2, 0, Zer72152), 
LAdd41410 = add_layer([Con39233,Zer72152], Add41410), 
exec_layers([LAdd43293,LRes18319,LUp_25560,LRes55974,LCon39233,LSub12968,LRes41477,LRes52570,LSep30463,LZer2629,LMin79374,LSub78541,LSof11887,LCon81416,LSub12121,LZer72152,LAdd41410],["Add43293","Res18319","Up_25560","Res55974","Con39233","Sub12968","Res41477","Res52570","Sep30463","Zer2629","Min79374","Sub78541","Sof11887","Con81416","Sub12121","Zer72152","Add41410"],Add41410,"Add41410")

Actual (Unparsed): [[[0.7328000, 0.7328000, 0.7660000, 0.3020000, 0.2594000, 0.1379000, 0.1501000, 0.9673000, 0.6332000, 0.1641000, 0.7599000, 0.1885000], [0.7328000, 0.7328000, 0.0959000, 0.8312000, 0.0205000, 0.8678000, 0.3314000, 0.3151000, 0.1513000, 0.5967000, 0.7748000, 0.6607000], [-0.5123561, 0.5716233, 0.8414000, -0.1386000, -1.0816000, 0.3547000, 0.2499000, 0.6411000, -0.6937000, 0.3901000, 0.5292000, -0.3759000], [-0.4760439, -0.4341233, 0.3761000, 0.3892000, 0.0179000, -0.4619000, -1.6258000, -0.4589000, -0.3054000, -0.4208000, -0.1622000, -0.9886000]]]

Expected (Unparsed): [[[0.7328,0.7328,0.766,0.302,0.2594,0.1379,0.1501,0.9673,0.6332,0.1641,0.7599,0.1885],[0.7328,0.7328,0.0959,0.8312,0.0205,0.8678,0.3314,0.3151,0.1513,0.5967,0.7748,0.6607],[-0.5123560722736056,0.5716232992712524,0.8414000000000001,-0.13860000000000006,-1.0816000000000001,0.35470000000000007,0.2499,0.6411,-0.6937,0.3900999999999999,0.5292000000000001,-0.3758999999999999],[-0.4760439277263943,-0.43412329927125254,0.3761,0.3892000000000001,0.017900000000000027,-0.4619000000000001,-1.6258000000000001,-0.4588999999999999,-0.3054,-0.42080000000000006,-0.16220000000000007,-0.9885999999999998]]]

Actual:   [[[0.7328, 0.7328, 0.766, 0.302, 0.2594, 0.1379, 0.1501, 0.9673, 0.6332, 0.1641, 0.7599, 0.1885], [0.7328, 0.7328, 0.0959, 0.8312, 0.0205, 0.8678, 0.3314, 0.3151, 0.1513, 0.5967, 0.7748, 0.6607], [-0.5123, 0.5717, 0.8414, -0.1386, -1.0816, 0.3547, 0.2499, 0.6411, -0.6937, 0.3901, 0.5292, -0.3759], [-0.476, -0.4341, 0.3761, 0.3892, 0.0179, -0.4619, -1.6258, -0.4589, -0.3054, -0.4208, -0.1622, -0.9886]]]

Expected: [[[0.7328, 0.7328, 0.766, 0.302, 0.2594, 0.1379, 0.1501, 0.9673, 0.6332, 0.1641, 0.7599, 0.1885], [0.7328, 0.7328, 0.0959, 0.8312, 0.0205, 0.8678, 0.3314, 0.3151, 0.1513, 0.5967, 0.7748, 0.6607], [-0.5123, 0.5717, 0.8415, -0.1386, -1.0816, 0.3548, 0.2499, 0.6411, -0.6937, 0.3901, 0.5293, -0.3758], [-0.476, -0.4341, 0.3761, 0.3893, 0.018, -0.4619, -1.6258, -0.4588, -0.3054, -0.4208, -0.1622, -0.9885]]]