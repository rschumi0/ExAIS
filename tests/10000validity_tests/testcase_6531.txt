import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Glo40688 = tf.keras.layers.Input(shape=([1, 1]))
in0Con43248 = tf.keras.layers.Input(shape=([2, 1, 2]))
in0Cro40581 = tf.keras.layers.Input(shape=([2, 3, 4, 3]))

Glo40688 = keras.layers.GlobalMaxPool1D(name = 'Glo40688', )(in0Glo40688)
Lay90337 = keras.layers.LayerNormalization(axis=1, epsilon=1.3663132544151784, name = 'Lay90337', )(Glo40688)
Res37984 = keras.layers.Reshape((1, 1), name = 'Res37984', )(Lay90337)
Sim56376 = keras.layers.SimpleRNN(2,name = 'Sim56376', )(Res37984)
Res56210 = keras.layers.Reshape((2, 1), name = 'Res56210', )(Sim56376)
Res30984 = keras.layers.Reshape((2, 1, 1), name = 'Res30984', )(Res56210)
Con43248 = keras.layers.Concatenate(axis=3, name = 'Con43248', )([Res30984,in0Con43248])
Cro40581 = keras.layers.Cropping3D(cropping=((0, 0), (1, 1), (1, 2)), name = 'Cro40581', )(in0Cro40581)
Res91268 = keras.layers.Reshape((2, 1, 3), name = 'Res91268', )(Cro40581)
Con56666 = keras.layers.Conv2DTranspose(3, (1, 1),strides=(1, 1), padding='same', name = 'Con56666', )(Res91268)
Ave87841 = keras.layers.Average(name = 'Ave87841', )([Con43248,Con56666])
model = tf.keras.models.Model(inputs=[in0Glo40688,in0Con43248,in0Cro40581], outputs=Ave87841)
w = model.get_layer('Sim56376').get_weights() 
w[0] = np.array([[1, 4]])
w[1] = np.array([[8, 4], [6, 5]])
w[2] = np.array([5, 1])
model.get_layer('Sim56376').set_weights(w) 
w = model.get_layer('Con56666').get_weights() 
w[0] = np.array([[[[0.6759, 0.9236, 0.0097], [0.6709, 0.4884, 0.9494], [0.772, 0.1315, 0.3562]]]])
w[1] = np.array([0, 0, 0])
model.get_layer('Con56666').set_weights(w) 
in0Glo40688 = tf.constant([[[1.4701]]])
in0Con43248 = tf.constant([[[[0.4539, 0.5556]], [[0.9826, 0.4269]]]])
in0Cro40581 = tf.constant([[[[[1.2782, 1.9111, 1.2481], [1.736, 1.8325, 1.368], [1.8438, 1.3847, 1.8205], [1.7641, 1.7783, 1.9665]], [[1.612, 1.7808, 1.2073], [1.1673, 1.9879, 1.7947], [1.6872, 1.5466, 1.6424], [1.6595, 1.2909, 1.0756]], [[1.8737, 1.0266, 1.5785], [1.3197, 1.5971, 1.5349], [1.3112, 1.6457, 1.1952], [1.9942, 1.0628, 1.1477]]], [[[1.1404, 1.7677, 1.696], [1.0758, 1.7655, 1.918], [1.0013, 1.4344, 1.0403], [1.3243, 1.6697, 1.0685]], [[1.718, 1.9005, 1.1671], [1.998, 1.7561, 1.2466], [1.0083, 1.9787, 1.4889], [1.5548, 1.3927, 1.2687]], [[1.6288, 1.3534, 1.1565], [1.3647, 1.8105, 1.7246], [1.5174, 1.0305, 1.0538], [1.9569, 1.1489, 1.2906]]]]])
print (np.array2string(model.predict([in0Glo40688,in0Con43248,in0Cro40581],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Ave87841.png')

LGlo40688 = global_max_pool1D_layer([[[1.4701]]], Glo40688), 
LLay90337 = layer_normalization_layer(Glo40688, 1, 1.3663132544151784, Lay90337), 
LRes37984 = reshape_layer(Lay90337, [1, 1], Res37984), 
LSim56376 = simple_rnn_layer(Res37984,[[1, 4]],[[8, 4], [6, 5]],[5, 1], Sim56376), 
LRes56210 = reshape_layer(Sim56376, [2, 1], Res56210), 
LRes30984 = reshape_layer(Res56210, [2, 1, 1], Res30984), 
LCon43248 = concatenate_layer([Res30984,[[[[0.4539, 0.5556]], [[0.9826, 0.4269]]]]], 3, Con43248), 
LCro40581 = cropping3D_layer([[[[[1.2782, 1.9111, 1.2481], [1.736, 1.8325, 1.368], [1.8438, 1.3847, 1.8205], [1.7641, 1.7783, 1.9665]], [[1.612, 1.7808, 1.2073], [1.1673, 1.9879, 1.7947], [1.6872, 1.5466, 1.6424], [1.6595, 1.2909, 1.0756]], [[1.8737, 1.0266, 1.5785], [1.3197, 1.5971, 1.5349], [1.3112, 1.6457, 1.1952], [1.9942, 1.0628, 1.1477]]], [[[1.1404, 1.7677, 1.696], [1.0758, 1.7655, 1.918], [1.0013, 1.4344, 1.0403], [1.3243, 1.6697, 1.0685]], [[1.718, 1.9005, 1.1671], [1.998, 1.7561, 1.2466], [1.0083, 1.9787, 1.4889], [1.5548, 1.3927, 1.2687]], [[1.6288, 1.3534, 1.1565], [1.3647, 1.8105, 1.7246], [1.5174, 1.0305, 1.0538], [1.9569, 1.1489, 1.2906]]]]], 0, 0, 1, 1, 1, 2, Cro40581), 
LRes91268 = reshape_layer(Cro40581, [2, 1, 3], Res91268), 
LCon56666 = conv2D_transpose_layer(Res91268, 1, 1,[[[[0.6759, 0.9236, 0.0097], [0.6709, 0.4884, 0.9494], [0.772, 0.1315, 0.3562]]]],[0, 0, 0], 1, 1, true, Con56666), 
LAve87841 = average_layer([Con43248,Con56666], Ave87841), 
exec_layers([LGlo40688,LLay90337,LRes37984,LSim56376,LRes56210,LRes30984,LCon43248,LCro40581,LRes91268,LCon56666,LAve87841],["Glo40688","Lay90337","Res37984","Sim56376","Res56210","Res30984","Con43248","Cro40581","Res91268","Con56666","Ave87841"],Ave87841,"Ave87841")

Actual (Unparsed): [[[[1.8211602, 1.9559101, 1.1787183]], [[1.8730342, 2.1821298, 1.3221611]]]]

Expected (Unparsed): [[[[1.8211601521312974,1.955910055,1.1787182950000001]],[[1.8730341679778824,2.1821297399999997,1.322161035]]]]

Actual:   [[[[1.8212, 1.956, 1.1788]], [[1.8731, 2.1822, 1.3222]]]]

Expected: [[[[1.8212, 1.956, 1.1788]], [[1.8731, 2.1822, 1.3222]]]]