import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Con97897 = tf.keras.layers.Input(shape=([1, 1, 2, 1]))
in0Dot67131 = tf.keras.layers.Input(shape=([2, 3]))
in1Dot67131 = tf.keras.layers.Input(shape=([2, 3]))
in0Con64340 = tf.keras.layers.Input(shape=([3, 1]))

Con97897 = keras.layers.Conv3D(2, (1, 1, 2),strides=(3, 1, 1), padding='same', dilation_rate=(1, 1, 1), name = 'Con97897', )(in0Con97897)
Res41501 = keras.layers.Reshape((1, 1, 4), name = 'Res41501', )(Con97897)
Res79070 = keras.layers.Reshape((1, 4), name = 'Res79070', )(Res41501)
Zer87146 = keras.layers.ZeroPadding1D(padding=((2, 0)), name = 'Zer87146', )(Res79070)
Dot67131 = keras.layers.Dot(axes=(1, 1), name = 'Dot67131', )([in0Dot67131,in1Dot67131])
Con64340 = keras.layers.Concatenate(axis=2, name = 'Con64340', )([Dot67131,in0Con64340])
Mul11353 = keras.layers.Multiply(name = 'Mul11353', )([Zer87146,Con64340])
LST35262 = keras.layers.LSTM(2,recurrent_activation='sigmoid', name = 'LST35262', )(Mul11353)
Res65995 = keras.layers.Reshape((2, 1), name = 'Res65995', )(LST35262)
Sim6356 = keras.layers.SimpleRNN(1,name = 'Sim6356', )(Res65995)
model = tf.keras.models.Model(inputs=[in0Con97897,in0Dot67131,in1Dot67131,in0Con64340], outputs=Sim6356)
w = model.get_layer('Con97897').get_weights() 
w[0] = np.array([[[[[0.8813, 0.7682]], [[0.322, 0.4013]]]]])
w[1] = np.array([0, 0])
model.get_layer('Con97897').set_weights(w) 
w = model.get_layer('LST35262').get_weights() 
w[0] = np.array([[8, 4, 7, 3, 1, 2, 4, 5], [6, 2, 8, 8, 5, 5, 5, 5], [2, 1, 10, 8, 5, 5, 7, 9], [6, 10, 4, 7, 4, 4, 2, 7]])
w[1] = np.array([[8, 2, 8, 5, 3, 8, 10, 10], [10, 10, 8, 10, 10, 5, 2, 1]])
w[2] = np.array([9, 2, 6, 7, 2, 1, 2, 7])
model.get_layer('LST35262').set_weights(w) 
w = model.get_layer('Sim6356').get_weights() 
w[0] = np.array([[8]])
w[1] = np.array([[7]])
w[2] = np.array([2])
model.get_layer('Sim6356').set_weights(w) 
in0Con97897 = tf.constant([[[[[0.7015], [0.4771]]]]])
in0Dot67131 = tf.constant([[[0.8264, 0.042, 0.0686], [0.4044, 0.666, 0.8944]]])
in1Dot67131 = tf.constant([[[0.4581, 0.9469, 0.6309], [0.5393, 0.9486, 0.3924]]])
in0Con64340 = tf.constant([[[0.4976], [0.1586], [0.4241]]])
print (np.array2string(model.predict([in0Con97897,in0Dot67131,in1Dot67131,in0Con64340],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Sim6356.png')

LCon97897 = conv3D_layer([[[[[0.7015], [0.4771]]]]], 1, 1, 2,[[[[[0.8813, 0.7682]], [[0.322, 0.4013]]]]],[0, 0], 3, 1, 1, true, 1, 1, 1, Con97897), 
LRes41501 = reshape_layer(Con97897, [1, 1, 4], Res41501), 
LRes79070 = reshape_layer(Res41501, [1, 4], Res79070), 
LZer87146 = zero_padding1D_layer(Res79070, 2, 0, Zer87146), 
LDot67131 = dot_layer([[[0.8264, 0.042, 0.0686], [0.4044, 0.666, 0.8944]]], [[[0.4581, 0.9469, 0.6309], [0.5393, 0.9486, 0.3924]]], 1, 1, Dot67131), 
LCon64340 = concatenate_layer([Dot67131,[[[0.4976], [0.1586], [0.4241]]]], 2, Con64340), 
LMul11353 = multiply_layer([Zer87146,Con64340], Mul11353), 
LLST35262 = lstm_layer(Mul11353,[[8, 4, 7, 3, 1, 2, 4, 5], [6, 2, 8, 8, 5, 5, 5, 5], [2, 1, 10, 8, 5, 5, 7, 9], [6, 10, 4, 7, 4, 4, 2, 7]],[[8, 2, 8, 5, 3, 8, 10, 10], [10, 10, 8, 10, 10, 5, 2, 1]],[9, 2, 6, 7, 2, 1, 2, 7], LST35262), 
LRes65995 = reshape_layer(LST35262, [2, 1], Res65995), 
LSim6356 = simple_rnn_layer(Res65995,[[8]],[[7]],[2], Sim6356), 
exec_layers([LCon97897,LRes41501,LRes79070,LZer87146,LDot67131,LCon64340,LMul11353,LLST35262,LRes65995,LSim6356],["Con97897","Res41501","Res79070","Zer87146","Dot67131","Con64340","Mul11353","LST35262","Res65995","Sim6356"],Sim6356,"Sim6356")

Actual (Unparsed): [[1.0000000]]

Expected (Unparsed): [[0.999999999999996]]

Actual:   [[1]]

Expected: [[1]]