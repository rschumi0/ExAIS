import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Mul472 = tf.keras.layers.Input(shape=([1, 1, 1]))
in1Mul472 = tf.keras.layers.Input(shape=([1, 1, 1]))

Mul472 = keras.layers.Multiply(name = 'Mul472', )([in0Mul472,in1Mul472])
Res71582 = keras.layers.Reshape((1, 1), name = 'Res71582', )(Mul472)
Con44122 = keras.layers.Conv1D(4, (1),strides=(1), padding='same', dilation_rate=(1), name = 'Con44122', )(Res71582)
model = tf.keras.models.Model(inputs=[in0Mul472,in1Mul472], outputs=Con44122)
w = model.get_layer('Con44122').get_weights() 
w[0] = np.array([[[0.569, 0.2827, 0.7388, 0.1467]]])
w[1] = np.array([0, 0, 0, 0])
model.get_layer('Con44122').set_weights(w) 
in0Mul472 = tf.constant([[[[0.3078]]]])
in1Mul472 = tf.constant([[[[0.7236]]]])
print (np.array2string(model.predict([in0Mul472,in1Mul472],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Con44122.png')

LMul472 = multiply_layer([[[[[0.3078]]]], [[[[0.7236]]]]], Mul472), 
LRes71582 = reshape_layer(Mul472, [1, 1], Res71582), 
LCon44122 = conv1D_layer(Res71582, 1,[[[0.569, 0.2827, 0.7388, 0.1467]]],[0, 0, 0, 0], 1, true, 1, Con44122), 
exec_layers([LMul472,LRes71582,LCon44122],["Mul472","Res71582","Con44122"],Con44122,"Con44122")

Actual (Unparsed): [[[0.1267300, 0.0629641, 0.1645485, 0.0326736]]]

Expected (Unparsed): [[[0.12673000152,0.06296409741600001,0.164548550304,0.032673622536]]]

Actual:   [[[0.1268, 0.063, 0.1646, 0.0327]]]

Expected: [[[0.1268, 0.063, 0.1646, 0.0327]]]