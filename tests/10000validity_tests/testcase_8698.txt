import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Sim76919 = tf.keras.layers.Input(shape=([1, 3]))
in0Con97436 = tf.keras.layers.Input(shape=([4, 15, 1, 1]))
in0Dot94638 = tf.keras.layers.Input(shape=([2, 2]))
in1Dot94638 = tf.keras.layers.Input(shape=([2, 2]))
in0Sof23225 = tf.keras.layers.Input(shape=([2, 1]))
in0Con90032 = tf.keras.layers.Input(shape=([2, 1]))
in0Con67911 = tf.keras.layers.Input(shape=([4, 3, 1, 1]))
in0Lay29296 = tf.keras.layers.Input(shape=([3]))

Sim76919 = keras.layers.SimpleRNN(1,name = 'Sim76919', )(in0Sim76919)
Res48961 = keras.layers.Reshape((1, 1), name = 'Res48961', )(Sim76919)
Res80970 = keras.layers.Reshape((1, 1, 1), name = 'Res80970', )(Res48961)
Res29916 = keras.layers.Reshape((1, 1, 1, 1), name = 'Res29916', )(Res80970)
Zer34136 = keras.layers.ZeroPadding3D(padding=((1, 1), (1, 1), (1, 1)), name = 'Zer34136', )(Res29916)
Res15986 = keras.layers.Reshape((3, 3, 3), name = 'Res15986', )(Zer34136)
Res3455 = keras.layers.Reshape((3, 9), name = 'Res3455', )(Res15986)
Cro6762 = keras.layers.Cropping1D(cropping=((1, 1)), name = 'Cro6762', )(Res3455)
Res66591 = keras.layers.Reshape((1, 9, 1), name = 'Res66591', )(Cro6762)
Res17876 = keras.layers.Reshape((1, 9, 1, 1), name = 'Res17876', )(Res66591)
Zer25879 = keras.layers.ZeroPadding3D(padding=((3, 0), (6, 0), (0, 0)), name = 'Zer25879', )(Res17876)
Con97436 = keras.layers.Concatenate(axis=4, name = 'Con97436', )([Zer25879,in0Con97436])
Dot94638 = keras.layers.Dot(axes=(2, 2), name = 'Dot94638', )([in0Dot94638,in1Dot94638])
Sof23225 = keras.layers.Softmax(axis=1, name = 'Sof23225', input_shape=(2, 1))(in0Sof23225)
Con90032 = keras.layers.Concatenate(axis=2, name = 'Con90032', )([Sof23225,in0Con90032])
Ave98281 = keras.layers.Average(name = 'Ave98281', )([Dot94638,Con90032])
Res28061 = keras.layers.Reshape((2, 2, 1), name = 'Res28061', )(Ave98281)
Res43181 = keras.layers.Reshape((2, 2, 1, 1), name = 'Res43181', )(Res28061)
Zer70963 = keras.layers.ZeroPadding3D(padding=((2, 0), (1, 0), (0, 0)), name = 'Zer70963', )(Res43181)
Con67911 = keras.layers.Concatenate(axis=4, name = 'Con67911', )([Zer70963,in0Con67911])
Lay29296 = keras.layers.LayerNormalization(axis=1, epsilon=1.830071046662998, name = 'Lay29296', )(in0Lay29296)
Res17138 = keras.layers.Reshape((3, 1), name = 'Res17138', )(Lay29296)
Res53399 = keras.layers.Reshape((3, 1, 1), name = 'Res53399', )(Res17138)
Res51330 = keras.layers.Reshape((3, 1, 1, 1), name = 'Res51330', )(Res53399)
Con63524 = keras.layers.Conv3DTranspose(2, (2, 1, 1),strides=(1, 1, 1), padding='valid', name = 'Con63524', )(Res51330)
Zer99368 = keras.layers.ZeroPadding3D(padding=((0, 0), (2, 0), (0, 0)), name = 'Zer99368', )(Con63524)
Mul78289 = keras.layers.Multiply(name = 'Mul78289', )([Con67911,Zer99368])
Zer95857 = keras.layers.ZeroPadding3D(padding=((0, 0), (12, 0), (0, 0)), name = 'Zer95857', )(Mul78289)
Max99033 = keras.layers.Maximum(name = 'Max99033', )([Con97436,Zer95857])
model = tf.keras.models.Model(inputs=[in0Sim76919,in0Con97436,in0Dot94638,in1Dot94638,in0Sof23225,in0Con90032,in0Con67911,in0Lay29296], outputs=Max99033)
w = model.get_layer('Sim76919').get_weights() 
w[0] = np.array([[6], [9], [4]])
w[1] = np.array([[8]])
w[2] = np.array([3])
model.get_layer('Sim76919').set_weights(w) 
w = model.get_layer('Con63524').get_weights() 
w[0] = np.array([[[[[0.5925], [0.8258]]]], [[[[0.5354], [0.5434]]]]])
w[1] = np.array([0, 0])
model.get_layer('Con63524').set_weights(w) 
in0Sim76919 = tf.constant([[[6, 2, 4]]])
in0Con97436 = tf.constant([[[[[0.7267]], [[0.4379]], [[0.2362]], [[0.0535]], [[0.0404]], [[0.6126]], [[0.6742]], [[0.4503]], [[0.8736]], [[0.2106]], [[0.1226]], [[0.9182]], [[0.5733]], [[0.3239]], [[0.9398]]], [[[0.8636]], [[0.4444]], [[0.7437]], [[0.2009]], [[0.7102]], [[0.4195]], [[0.4096]], [[0.809]], [[0.9024]], [[0.5613]], [[0.6887]], [[0.2797]], [[0.4497]], [[0.3446]], [[0.8458]]], [[[0.1004]], [[0.9596]], [[0.2366]], [[0.9645]], [[0.0927]], [[0.081]], [[0.8279]], [[0.8797]], [[0.3912]], [[0.158]], [[0.6533]], [[0.3895]], [[0.4932]], [[0.6829]], [[0.8854]]], [[[0.129]], [[0.3303]], [[0.8265]], [[0.2851]], [[0.0105]], [[0.4679]], [[0.9259]], [[0.1482]], [[0.0581]], [[0.344]], [[0.3111]], [[0.501]], [[0.8021]], [[0.9307]], [[0.2657]]]]])
in0Dot94638 = tf.constant([[[0.532, 0.6458], [0.2331, 0.4032]]])
in1Dot94638 = tf.constant([[[0.8211, 0.7027], [0.7112, 0.8518]]])
in0Sof23225 = tf.constant([[[0.8036], [0.2559]]])
in0Con90032 = tf.constant([[[0.2049], [0.8384]]])
in0Con67911 = tf.constant([[[[[0.2417]], [[0.5687]], [[0.4606]]], [[[0.3931]], [[0.6796]], [[0.5016]]], [[[0.9408]], [[0.7145]], [[0.2385]]], [[[0.4854]], [[0.8866]], [[0.3698]]]]])
in0Lay29296 = tf.constant([[1.4216, 1.8928, 1.4084]])
print (np.array2string(model.predict([in0Sim76919,in0Con97436,in0Dot94638,in1Dot94638,in0Sof23225,in0Con90032,in0Con67911,in0Lay29296],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Max99033.png')

LSim76919 = simple_rnn_layer([[[6, 2, 4]]],[[6], [9], [4]],[[8]],[3], Sim76919), 
LRes48961 = reshape_layer(Sim76919, [1, 1], Res48961), 
LRes80970 = reshape_layer(Res48961, [1, 1, 1], Res80970), 
LRes29916 = reshape_layer(Res80970, [1, 1, 1, 1], Res29916), 
LZer34136 = zero_padding3D_layer(Res29916, 1, 1, 1, 1, 1, 1, Zer34136), 
LRes15986 = reshape_layer(Zer34136, [3, 3, 3], Res15986), 
LRes3455 = reshape_layer(Res15986, [3, 9], Res3455), 
LCro6762 = cropping1D_layer(Res3455, 1, 1, Cro6762), 
LRes66591 = reshape_layer(Cro6762, [1, 9, 1], Res66591), 
LRes17876 = reshape_layer(Res66591, [1, 9, 1, 1], Res17876), 
LZer25879 = zero_padding3D_layer(Res17876, 3, 0, 6, 0, 0, 0, Zer25879), 
LCon97436 = concatenate_layer([Zer25879,[[[[[0.7267]], [[0.4379]], [[0.2362]], [[0.0535]], [[0.0404]], [[0.6126]], [[0.6742]], [[0.4503]], [[0.8736]], [[0.2106]], [[0.1226]], [[0.9182]], [[0.5733]], [[0.3239]], [[0.9398]]], [[[0.8636]], [[0.4444]], [[0.7437]], [[0.2009]], [[0.7102]], [[0.4195]], [[0.4096]], [[0.809]], [[0.9024]], [[0.5613]], [[0.6887]], [[0.2797]], [[0.4497]], [[0.3446]], [[0.8458]]], [[[0.1004]], [[0.9596]], [[0.2366]], [[0.9645]], [[0.0927]], [[0.081]], [[0.8279]], [[0.8797]], [[0.3912]], [[0.158]], [[0.6533]], [[0.3895]], [[0.4932]], [[0.6829]], [[0.8854]]], [[[0.129]], [[0.3303]], [[0.8265]], [[0.2851]], [[0.0105]], [[0.4679]], [[0.9259]], [[0.1482]], [[0.0581]], [[0.344]], [[0.3111]], [[0.501]], [[0.8021]], [[0.9307]], [[0.2657]]]]]], 4, Con97436), 
LDot94638 = dot_layer([[[0.532, 0.6458], [0.2331, 0.4032]]], [[[0.8211, 0.7027], [0.7112, 0.8518]]], 2, 2, Dot94638), 
LSof23225 = softmax_layer([[[0.8036], [0.2559]]], 1, Sof23225), 
LCon90032 = concatenate_layer([Sof23225,[[[0.2049], [0.8384]]]], 2, Con90032), 
LAve98281 = average_layer([Dot94638,Con90032], Ave98281), 
LRes28061 = reshape_layer(Ave98281, [2, 2, 1], Res28061), 
LRes43181 = reshape_layer(Res28061, [2, 2, 1, 1], Res43181), 
LZer70963 = zero_padding3D_layer(Res43181, 2, 0, 1, 0, 0, 0, Zer70963), 
LCon67911 = concatenate_layer([Zer70963,[[[[[0.2417]], [[0.5687]], [[0.4606]]], [[[0.3931]], [[0.6796]], [[0.5016]]], [[[0.9408]], [[0.7145]], [[0.2385]]], [[[0.4854]], [[0.8866]], [[0.3698]]]]]], 4, Con67911), 
LLay29296 = layer_normalization_layer([[1.4216, 1.8928, 1.4084]], 1, 1.830071046662998, Lay29296), 
LRes17138 = reshape_layer(Lay29296, [3, 1], Res17138), 
LRes53399 = reshape_layer(Res17138, [3, 1, 1], Res53399), 
LRes51330 = reshape_layer(Res53399, [3, 1, 1, 1], Res51330), 
LCon63524 = conv3D_transpose_layer(Res51330, 2, 1, 1,[[[[[0.5925], [0.8258]]]], [[[[0.5354], [0.5434]]]]],[0, 0], 1, 1, 1, false, Con63524), 
LZer99368 = zero_padding3D_layer(Con63524, 0, 0, 2, 0, 0, 0, Zer99368), 
LMul78289 = multiply_layer([Con67911,Zer99368], Mul78289), 
LZer95857 = zero_padding3D_layer(Mul78289, 0, 0, 12, 0, 0, 0, Zer95857), 
LMax99033 = maximum_layer([Con97436,Zer95857], Max99033), 
exec_layers([LSim76919,LRes48961,LRes80970,LRes29916,LZer34136,LRes15986,LRes3455,LCro6762,LRes66591,LRes17876,LZer25879,LCon97436,LDot94638,LSof23225,LCon90032,LAve98281,LRes28061,LRes43181,LZer70963,LCon67911,LLay29296,LRes17138,LRes53399,LRes51330,LCon63524,LZer99368,LMul78289,LZer95857,LMax99033],["Sim76919","Res48961","Res80970","Res29916","Zer34136","Res15986","Res3455","Cro6762","Res66591","Res17876","Zer25879","Con97436","Dot94638","Sof23225","Con90032","Ave98281","Res28061","Res43181","Zer70963","Con67911","Lay29296","Res17138","Res53399","Res51330","Con63524","Zer99368","Mul78289","Zer95857","Max99033"],Max99033,"Max99033")

Actual (Unparsed): [[[[[0.0000000, 0.7267000]], [[0.0000000, 0.4379000]], [[0.0000000, 0.2362000]], [[0.0000000, 0.0535000]], [[0.0000000, 0.0404000]], [[0.0000000, 0.6126000]], [[0.0000000, 0.6742000]], [[0.0000000, 0.4503000]], [[0.0000000, 0.8736000]], [[0.0000000, 0.2106000]], [[0.0000000, 0.1226000]], [[0.0000000, 0.9182000]], [[0.0000000, 0.5733000]], [[0.0000000, 0.3239000]], [[-0.0000000, 0.9398000]]], [[[0.0000000, 0.8636000]], [[0.0000000, 0.4444000]], [[0.0000000, 0.7437000]], [[0.0000000, 0.2009000]], [[0.0000000, 0.7102000]], [[0.0000000, 0.4195000]], [[0.0000000, 0.4096000]], [[0.0000000, 0.8090000]], [[0.0000000, 0.9024000]], [[0.0000000, 0.5613000]], [[0.0000000, 0.6887000]], [[0.0000000, 0.2797000]], [[0.0000000, 0.4497000]], [[0.0000000, 0.3446000]], [[0.0000000, 0.8458000]]], [[[0.0000000, 0.1004000]], [[0.0000000, 0.9596000]], [[0.0000000, 0.2366000]], [[0.0000000, 0.9645000]], [[0.0000000, 0.0927000]], [[0.0000000, 0.0810000]], [[0.0000000, 0.8279000]], [[0.0000000, 0.8797000]], [[0.0000000, 0.3912000]], [[0.0000000, 0.1580000]], [[0.0000000, 0.6533000]], [[0.0000000, 0.3895000]], [[0.0000000, 0.4932000]], [[0.0000000, 0.6829000]], [[0.0298606, 0.8854000]]], [[[0.0000000, 0.1290000]], [[0.0000000, 0.3303000]], [[0.0000000, 0.8265000]], [[0.0000000, 0.2851000]], [[0.0000000, 0.0105000]], [[0.0000000, 0.4679000]], [[0.0000000, 0.9259000]], [[0.0000000, 0.1482000]], [[0.0000000, 0.0581000]], [[0.0000000, 0.3440000]], [[1.0000000, 0.3111000]], [[0.0000000, 0.5010000]], [[0.0000000, 0.8021000]], [[0.0000000, 0.9307000]], [[0.0000000, 0.2657000]]]]]

Expected (Unparsed): [[[[[0,0.7267]],[[0,0.4379]],[[0,0.2362]],[[0,0.0535]],[[0,0.0404]],[[0,0.6126]],[[0,0.6742]],[[0,0.4503]],[[0,0.8736]],[[0,0.2106]],[[0,0.1226]],[[0,0.9182]],[[0,0.5733]],[[0,0.3239]],[[0,0.9398]]],[[[0,0.8636]],[[0,0.4444]],[[0,0.7437]],[[0,0.2009]],[[0,0.7102]],[[0,0.4195]],[[0,0.4096]],[[0,0.809]],[[0,0.9024]],[[0,0.5613]],[[0,0.6887]],[[0,0.2797]],[[0,0.4497]],[[0,0.3446]],[[0,0.8458]]],[[[0,0.1004]],[[0,0.9596]],[[0,0.2366]],[[0,0.9645]],[[0,0.0927]],[[0,0.081]],[[0,0.8279]],[[0,0.8797]],[[0,0.3912]],[[0,0.158]],[[0,0.6533]],[[0,0.3895]],[[0,0.4932]],[[0,0.6829]],[[0.029860556432898557,0.8854]]],[[[0,0.129]],[[0,0.3303]],[[0,0.8265]],[[0,0.2851]],[[0,0.0105]],[[0,0.4679]],[[0,0.9259]],[[0,0.1482]],[[0,0.0581]],[[0,0.344]],[[1.0,0.3111]],[[0,0.501]],[[0,0.8021]],[[0,0.9307]],[[0,0.2657]]]]]

Actual:   [[[[[0, 0.7267]], [[0, 0.4379]], [[0, 0.2362]], [[0, 0.0535]], [[0, 0.0404]], [[0, 0.6126]], [[0, 0.6742]], [[0, 0.4503]], [[0, 0.8736]], [[0, 0.2106]], [[0, 0.1226]], [[0, 0.9182]], [[0, 0.5733]], [[0, 0.3239]], [[-0, 0.9398]]], [[[0, 0.8636]], [[0, 0.4444]], [[0, 0.7437]], [[0, 0.2009]], [[0, 0.7102]], [[0, 0.4195]], [[0, 0.4096]], [[0, 0.809]], [[0, 0.9024]], [[0, 0.5613]], [[0, 0.6887]], [[0, 0.2797]], [[0, 0.4497]], [[0, 0.3446]], [[0, 0.8458]]], [[[0, 0.1004]], [[0, 0.9596]], [[0, 0.2366]], [[0, 0.9645]], [[0, 0.0927]], [[0, 0.081]], [[0, 0.8279]], [[0, 0.8797]], [[0, 0.3912]], [[0, 0.158]], [[0, 0.6533]], [[0, 0.3895]], [[0, 0.4932]], [[0, 0.6829]], [[0.0299, 0.8854]]], [[[0, 0.129]], [[0, 0.3303]], [[0, 0.8265]], [[0, 0.2851]], [[0, 0.0105]], [[0, 0.4679]], [[0, 0.9259]], [[0, 0.1482]], [[0, 0.0581]], [[0, 0.344]], [[1, 0.3111]], [[0, 0.501]], [[0, 0.8021]], [[0, 0.9307]], [[0, 0.2657]]]]]

Expected: [[[[[0, 0.7267]], [[0, 0.4379]], [[0, 0.2362]], [[0, 0.0535]], [[0, 0.0404]], [[0, 0.6126]], [[0, 0.6742]], [[0, 0.4503]], [[0, 0.8736]], [[0, 0.2106]], [[0, 0.1226]], [[0, 0.9182]], [[0, 0.5733]], [[0, 0.3239]], [[0, 0.9398]]], [[[0, 0.8636]], [[0, 0.4444]], [[0, 0.7437]], [[0, 0.2009]], [[0, 0.7102]], [[0, 0.4195]], [[0, 0.4096]], [[0, 0.809]], [[0, 0.9024]], [[0, 0.5613]], [[0, 0.6887]], [[0, 0.2797]], [[0, 0.4497]], [[0, 0.3446]], [[0, 0.8458]]], [[[0, 0.1004]], [[0, 0.9596]], [[0, 0.2366]], [[0, 0.9645]], [[0, 0.0927]], [[0, 0.081]], [[0, 0.8279]], [[0, 0.8797]], [[0, 0.3912]], [[0, 0.158]], [[0, 0.6533]], [[0, 0.3895]], [[0, 0.4932]], [[0, 0.6829]], [[0.0299, 0.8854]]], [[[0, 0.129]], [[0, 0.3303]], [[0, 0.8265]], [[0, 0.2851]], [[0, 0.0105]], [[0, 0.4679]], [[0, 0.9259]], [[0, 0.1482]], [[0, 0.0581]], [[0, 0.344]], [[1, 0.3111]], [[0, 0.501]], [[0, 0.8021]], [[0, 0.9307]], [[0, 0.2657]]]]]