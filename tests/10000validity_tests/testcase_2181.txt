import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Max72003 = tf.keras.layers.Input(shape=([2, 2, 2, 2]))
in1Max72003 = tf.keras.layers.Input(shape=([2, 2, 2, 2]))
in0Mul39584 = tf.keras.layers.Input(shape=([1, 1]))
in1Mul39584 = tf.keras.layers.Input(shape=([1, 1]))
in0Con76098 = tf.keras.layers.Input(shape=([2, 7]))
in0Min48978 = tf.keras.layers.Input(shape=([2, 1, 2]))
in1Min48978 = tf.keras.layers.Input(shape=([2, 1, 2]))
in0GRU66887 = tf.keras.layers.Input(shape=([2, 3]))
in0Con82627 = tf.keras.layers.Input(shape=([1]))
in0Con88336 = tf.keras.layers.Input(shape=([12]))

Max72003 = keras.layers.Maximum(name = 'Max72003', )([in0Max72003,in1Max72003])
Res49163 = keras.layers.Reshape((2, 2, 4), name = 'Res49163', )(Max72003)
Res50268 = keras.layers.Reshape((2, 8), name = 'Res50268', )(Res49163)
Mul39584 = keras.layers.Multiply(name = 'Mul39584', )([in0Mul39584,in1Mul39584])
Zer49246 = keras.layers.ZeroPadding1D(padding=((1, 0)), name = 'Zer49246', )(Mul39584)
Con76098 = keras.layers.Concatenate(axis=2, name = 'Con76098', )([Zer49246,in0Con76098])
Min53184 = keras.layers.Minimum(name = 'Min53184', )([Res50268,Con76098])
Fla3915 = keras.layers.Flatten(name = 'Fla3915', )(Min53184)
Min48978 = keras.layers.Minimum(name = 'Min48978', )([in0Min48978,in1Min48978])
Res32899 = keras.layers.Reshape((2, 2), name = 'Res32899', )(Min48978)
Fla53770 = keras.layers.Flatten(name = 'Fla53770', )(Res32899)
GRU66887 = keras.layers.GRU(3,reset_after=True, recurrent_activation='sigmoid', name = 'GRU66887', )(in0GRU66887)
Con82627 = keras.layers.Concatenate(axis=1, name = 'Con82627', )([GRU66887,in0Con82627])
Max90672 = keras.layers.Maximum(name = 'Max90672', )([Fla53770,Con82627])
Con88336 = keras.layers.Concatenate(axis=1, name = 'Con88336', )([Max90672,in0Con88336])
Ave43748 = keras.layers.Average(name = 'Ave43748', )([Fla3915,Con88336])
Sof10291 = keras.layers.Softmax(axis=1, name = 'Sof10291', )(Ave43748)
model = tf.keras.models.Model(inputs=[in0Max72003,in1Max72003,in0Mul39584,in1Mul39584,in0Con76098,in0Min48978,in1Min48978,in0GRU66887,in0Con82627,in0Con88336], outputs=Sof10291)
w = model.get_layer('GRU66887').get_weights() 
w[0] = np.array([[3, 4, 5, 7, 8, 7, 2, 1, 4], [5, 1, 7, 10, 3, 9, 4, 1, 2], [6, 5, 10, 7, 4, 6, 10, 6, 8]])
w[1] = np.array([[3, 10, 4, 3, 2, 7, 10, 5, 1], [6, 9, 1, 2, 6, 6, 4, 2, 8], [1, 2, 5, 10, 6, 4, 2, 2, 2]])
w[2] = np.array([[5, 4, 9, 2, 10, 5, 5, 9, 4], [7, 10, 3, 8, 4, 3, 6, 9, 6]])
model.get_layer('GRU66887').set_weights(w) 
in0Max72003 = tf.constant([[[[[0.5528, 0.8526], [0.4246, 0.1984]], [[0.6759, 0.4784], [0.1237, 0.0033]]], [[[0.9929, 0.7128], [0.984, 0.4846]], [[0.7093, 0.319], [0.7547, 0.9295]]]]])
in1Max72003 = tf.constant([[[[[0.6829, 0.289], [0.8616, 0.1701]], [[0.845, 0.309], [0.2218, 0.0459]]], [[[0.9205, 0.807], [0.2678, 0.6586]], [[0.9681, 0.0719], [0.2322, 0.5799]]]]])
in0Mul39584 = tf.constant([[[0.6392]]])
in1Mul39584 = tf.constant([[[0.9077]]])
in0Con76098 = tf.constant([[[0.6191, 0.9894, 0.4958, 0.9969, 0.5357, 0.0467, 0.1009], [0.4322, 0.0724, 0.4943, 0.2883, 0.1442, 0.1059, 0.9358]]])
in0Min48978 = tf.constant([[[[0.8824, 0.5396]], [[0.2103, 0.2986]]]])
in1Min48978 = tf.constant([[[[0.3212, 0.0231]], [[0.3819, 0.5977]]]])
in0GRU66887 = tf.constant([[[4, 3, 2], [4, 2, 2]]])
in0Con82627 = tf.constant([[0.4281]])
in0Con88336 = tf.constant([[0.1305, 0.8256, 0.5629, 0.3959, 0.3069, 0.4606, 0.2655, 0.3854, 0.8135, 0.8189, 0.4307, 0.0769]])
print (np.array2string(model.predict([in0Max72003,in1Max72003,in0Mul39584,in1Mul39584,in0Con76098,in0Min48978,in1Min48978,in0GRU66887,in0Con82627,in0Con88336],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Sof10291.png')

LMax72003 = maximum_layer([[[[[[0.5528, 0.8526], [0.4246, 0.1984]], [[0.6759, 0.4784], [0.1237, 0.0033]]], [[[0.9929, 0.7128], [0.984, 0.4846]], [[0.7093, 0.319], [0.7547, 0.9295]]]]], [[[[[0.6829, 0.289], [0.8616, 0.1701]], [[0.845, 0.309], [0.2218, 0.0459]]], [[[0.9205, 0.807], [0.2678, 0.6586]], [[0.9681, 0.0719], [0.2322, 0.5799]]]]]], Max72003), 
LRes49163 = reshape_layer(Max72003, [2, 2, 4], Res49163), 
LRes50268 = reshape_layer(Res49163, [2, 8], Res50268), 
LMul39584 = multiply_layer([[[[0.6392]]], [[[0.9077]]]], Mul39584), 
LZer49246 = zero_padding1D_layer(Mul39584, 1, 0, Zer49246), 
LCon76098 = concatenate_layer([Zer49246,[[[0.6191, 0.9894, 0.4958, 0.9969, 0.5357, 0.0467, 0.1009], [0.4322, 0.0724, 0.4943, 0.2883, 0.1442, 0.1059, 0.9358]]]], 2, Con76098), 
LMin53184 = minimum_layer([Res50268,Con76098], Min53184), 
LFla3915 = flatten_layer(Min53184, Fla3915), 
LMin48978 = minimum_layer([[[[[0.8824, 0.5396]], [[0.2103, 0.2986]]]], [[[[0.3212, 0.0231]], [[0.3819, 0.5977]]]]], Min48978), 
LRes32899 = reshape_layer(Min48978, [2, 2], Res32899), 
LFla53770 = flatten_layer(Res32899, Fla53770), 
LGRU66887 = gru_layer([[[4, 3, 2], [4, 2, 2]]],[[3, 4, 5, 7, 8, 7, 2, 1, 4], [5, 1, 7, 10, 3, 9, 4, 1, 2], [6, 5, 10, 7, 4, 6, 10, 6, 8]],[[3, 10, 4, 3, 2, 7, 10, 5, 1], [6, 9, 1, 2, 6, 6, 4, 2, 8], [1, 2, 5, 10, 6, 4, 2, 2, 2]],[[5, 4, 9, 2, 10, 5, 5, 9, 4], [7, 10, 3, 8, 4, 3, 6, 9, 6]], true, GRU66887), 
LCon82627 = concatenate_layer([GRU66887,[[0.4281]]], 1, Con82627), 
LMax90672 = maximum_layer([Fla53770,Con82627], Max90672), 
LCon88336 = concatenate_layer([Max90672,[[0.1305, 0.8256, 0.5629, 0.3959, 0.3069, 0.4606, 0.2655, 0.3854, 0.8135, 0.8189, 0.4307, 0.0769]]], 1, Con88336), 
LAve43748 = average_layer([Fla3915,Con88336], Ave43748), 
LSof10291 = softmax_layer(Ave43748, 1, Sof10291), 
exec_layers([LMax72003,LRes49163,LRes50268,LMul39584,LZer49246,LCon76098,LMin53184,LFla3915,LMin48978,LRes32899,LFla53770,LGRU66887,LCon82627,LMax90672,LCon88336,LAve43748,LSof10291],["Max72003","Res49163","Res50268","Mul39584","Zer49246","Con76098","Min53184","Fla3915","Min48978","Res32899","Fla53770","GRU66887","Con82627","Max90672","Con88336","Ave43748","Sof10291"],Sof10291,"Sof10291")

Actual (Unparsed): [[0.0490197, 0.0575539, 0.0713482, 0.0571039, 0.0679908, 0.0801277, 0.0566234, 0.0520665, 0.0650511, 0.0652367, 0.0494307, 0.0648108, 0.0724229, 0.0675705, 0.0545939, 0.0690494]]

Expected (Unparsed): [[0.04901968707117985,0.05755390543032213,0.07134819133323725,0.05710387594939948,0.06799077229221427,0.08012773063777298,0.056623381147207094,0.052066512843490086,0.06505108695712637,0.06523668697705969,0.049430715112139444,0.06481078303546291,0.07242285992554477,0.06757053359014274,0.05459389123685624,0.06904938646084471]]

Actual:   [[0.0491, 0.0576, 0.0714, 0.0572, 0.068, 0.0802, 0.0567, 0.0521, 0.0651, 0.0653, 0.0495, 0.0649, 0.0725, 0.0676, 0.0546, 0.0691]]

Expected: [[0.0491, 0.0576, 0.0714, 0.0572, 0.068, 0.0802, 0.0567, 0.0521, 0.0651, 0.0653, 0.0495, 0.0649, 0.0725, 0.0676, 0.0546, 0.0691]]