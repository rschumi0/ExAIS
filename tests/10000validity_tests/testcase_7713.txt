import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Max80320 = tf.keras.layers.Input(shape=([1, 1, 1]))
in1Max80320 = tf.keras.layers.Input(shape=([1, 1, 1]))
in0Con50565 = tf.keras.layers.Input(shape=([2, 2, 1, 1]))
in0Dep84571 = tf.keras.layers.Input(shape=([1, 2, 1]))
in0Cro56265 = tf.keras.layers.Input(shape=([4, 3, 4, 1]))

Max80320 = keras.layers.Maximum(name = 'Max80320', )([in0Max80320,in1Max80320])
Res91113 = keras.layers.Reshape((1, 1), name = 'Res91113', )(Max80320)
Glo59724 = keras.layers.GlobalAveragePooling1D(name = 'Glo59724', )(Res91113)
Res58090 = keras.layers.Reshape((1, 1), name = 'Res58090', )(Glo59724)
Res68869 = keras.layers.Reshape((1, 1, 1), name = 'Res68869', )(Res58090)
Res4534 = keras.layers.Reshape((1, 1, 1, 1), name = 'Res4534', )(Res68869)
Zer20685 = keras.layers.ZeroPadding3D(padding=((1, 0), (1, 0), (0, 0)), name = 'Zer20685', )(Res4534)
Con50565 = keras.layers.Concatenate(axis=4, name = 'Con50565', )([Zer20685,in0Con50565])
Dep84571 = keras.layers.DepthwiseConv2D((1, 2),strides=(1, 1), padding='same', name = 'Dep84571', )(in0Dep84571)
Res18169 = keras.layers.Reshape((1, 2, 1, 1), name = 'Res18169', )(Dep84571)
Zer65145 = keras.layers.ZeroPadding3D(padding=((1, 0), (0, 0), (0, 0)), name = 'Zer65145', )(Res18169)
Cro56265 = keras.layers.Cropping3D(cropping=((2, 0), (1, 0), (1, 2)), name = 'Cro56265', )(in0Cro56265)
Mul76089 = keras.layers.Multiply(name = 'Mul76089', )([Zer65145,Cro56265])
Con38702 = keras.layers.Conv3DTranspose(2, (1, 1, 1),strides=(1, 1, 1), padding='valid', name = 'Con38702', )(Mul76089)
Add61843 = keras.layers.Add(name = 'Add61843', )([Con50565,Con38702])
model = tf.keras.models.Model(inputs=[in0Max80320,in1Max80320,in0Con50565,in0Dep84571,in0Cro56265], outputs=Add61843)
w = model.get_layer('Dep84571').get_weights() 
w[0] = np.array([[[[0.6114]], [[0.3314]]]])
w[1] = np.array([0])
model.get_layer('Dep84571').set_weights(w) 
w = model.get_layer('Con38702').get_weights() 
w[0] = np.array([[[[[0.2931], [0.5059]]]]])
w[1] = np.array([0, 0])
model.get_layer('Con38702').set_weights(w) 
in0Max80320 = tf.constant([[[[0.614]]]])
in1Max80320 = tf.constant([[[[0.0629]]]])
in0Con50565 = tf.constant([[[[[0.3461]], [[0.6119]]], [[[0.1257]], [[0.5633]]]]])
in0Dep84571 = tf.constant([[[[0.6959], [0.0052]]]])
in0Cro56265 = tf.constant([[[[[1.4112], [1.6689], [1.2855], [1.4411]], [[1.4861], [1.2829], [1.1968], [1.4151]], [[1.8302], [1.882], [1.3747], [1.8112]]], [[[1.5562], [1.3454], [1.4759], [1.0109]], [[1.6253], [1.0976], [1.089], [1.662]], [[1.6491], [1.3088], [1.9529], [1.5838]]], [[[1.8974], [1.8004], [1.6115], [1.4543]], [[1.5454], [1.151], [1.0482], [1.6021]], [[1.7547], [1.7531], [1.1085], [1.3072]]], [[[1.398], [1.7319], [1.9371], [1.5059]], [[1.1088], [1.7056], [1.2294], [1.6899]], [[1.8667], [1.339], [1.8328], [1.0901]]]]])
print (np.array2string(model.predict([in0Max80320,in1Max80320,in0Con50565,in0Dep84571,in0Cro56265],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Add61843.png')

LMax80320 = maximum_layer([[[[[0.614]]]], [[[[0.0629]]]]], Max80320), 
LRes91113 = reshape_layer(Max80320, [1, 1], Res91113), 
LGlo59724 = global_average_pooling1D_layer(Res91113, Glo59724), 
LRes58090 = reshape_layer(Glo59724, [1, 1], Res58090), 
LRes68869 = reshape_layer(Res58090, [1, 1, 1], Res68869), 
LRes4534 = reshape_layer(Res68869, [1, 1, 1, 1], Res4534), 
LZer20685 = zero_padding3D_layer(Res4534, 1, 0, 1, 0, 0, 0, Zer20685), 
LCon50565 = concatenate_layer([Zer20685,[[[[[0.3461]], [[0.6119]]], [[[0.1257]], [[0.5633]]]]]], 4, Con50565), 
LDep84571 = depthwise_conv2D_layer([[[[0.6959], [0.0052]]]], 1, 2,[[[[0.6114]], [[0.3314]]]],[0], 1, 1, true, Dep84571), 
LRes18169 = reshape_layer(Dep84571, [1, 2, 1, 1], Res18169), 
LZer65145 = zero_padding3D_layer(Res18169, 1, 0, 0, 0, 0, 0, Zer65145), 
LCro56265 = cropping3D_layer([[[[[1.4112], [1.6689], [1.2855], [1.4411]], [[1.4861], [1.2829], [1.1968], [1.4151]], [[1.8302], [1.882], [1.3747], [1.8112]]], [[[1.5562], [1.3454], [1.4759], [1.0109]], [[1.6253], [1.0976], [1.089], [1.662]], [[1.6491], [1.3088], [1.9529], [1.5838]]], [[[1.8974], [1.8004], [1.6115], [1.4543]], [[1.5454], [1.151], [1.0482], [1.6021]], [[1.7547], [1.7531], [1.1085], [1.3072]]], [[[1.398], [1.7319], [1.9371], [1.5059]], [[1.1088], [1.7056], [1.2294], [1.6899]], [[1.8667], [1.339], [1.8328], [1.0901]]]]], 2, 0, 1, 0, 1, 2, Cro56265), 
LMul76089 = multiply_layer([Zer65145,Cro56265], Mul76089), 
LCon38702 = conv3D_transpose_layer(Mul76089, 1, 1, 1,[[[[[0.2931], [0.5059]]]]],[0, 0], 1, 1, 1, false, Con38702), 
LAdd61843 = add_layer([Con50565,Con38702], Add61843), 
exec_layers([LMax80320,LRes91113,LGlo59724,LRes58090,LRes68869,LRes4534,LZer20685,LCon50565,LDep84571,LRes18169,LZer65145,LCro56265,LMul76089,LCon38702,LAdd61843],["Max80320","Res91113","Glo59724","Res58090","Res68869","Res4534","Zer20685","Con50565","Dep84571","Res18169","Zer65145","Cro56265","Mul76089","Con38702","Add61843"],Add61843,"Add61843")

Actual (Unparsed): [[[[[0.0000000, 0.3461000]], [[0.0000000, 0.6119000]]], [[[0.2135604, 0.4943121]], [[0.6152478, 0.5654537]]]]]

Expected (Unparsed): [[[[[0.0,0.3461]],[[0.0,0.6119]]],[[[0.2135604032986944,0.4943121051818816]],[[0.615247743090152,0.565453644589928]]]]]

Actual:   [[[[[0, 0.3461]], [[0, 0.6119]]], [[[0.2136, 0.4944]], [[0.6153, 0.5655]]]]]

Expected: [[[[[0, 0.3461]], [[0, 0.6119]]], [[[0.2136, 0.4944]], [[0.6153, 0.5655]]]]]