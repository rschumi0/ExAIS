import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Dot75498 = tf.keras.layers.Input(shape=([2]))
in1Dot75498 = tf.keras.layers.Input(shape=([2]))
in0Con85364 = tf.keras.layers.Input(shape=([12]))
in0Up_70131 = tf.keras.layers.Input(shape=([1, 4]))
in0Glo85569 = tf.keras.layers.Input(shape=([1, 1, 1]))
in0Con99647 = tf.keras.layers.Input(shape=([15]))

Dot75498 = keras.layers.Dot(axes=(1, 1), name = 'Dot75498', )([in0Dot75498,in1Dot75498])
Den90666 = keras.layers.Dense(4,name = 'Den90666', )(Dot75498)
Con85364 = keras.layers.Concatenate(axis=1, name = 'Con85364', )([Den90666,in0Con85364])
Up_70131 = keras.layers.UpSampling1D(size=(2), name = 'Up_70131', )(in0Up_70131)
Res93291 = keras.layers.Reshape((2, 4, 1), name = 'Res93291', )(Up_70131)
Up_36989 = keras.layers.UpSampling2D(size=(1, 2), name = 'Up_36989', )(Res93291)
Res49263 = keras.layers.Reshape((2, 8), name = 'Res49263', )(Up_36989)
Fla26760 = keras.layers.Flatten(name = 'Fla26760', )(Res49263)
Glo85569 = keras.layers.GlobalMaxPool2D(name = 'Glo85569', )(in0Glo85569)
Con99647 = keras.layers.Concatenate(axis=1, name = 'Con99647', )([Glo85569,in0Con99647])
Add74746 = keras.layers.Add(name = 'Add74746', )([Fla26760,Con99647])
Max95719 = keras.layers.Maximum(name = 'Max95719', )([Con85364,Add74746])
Res83414 = keras.layers.Reshape((16, 1), name = 'Res83414', )(Max95719)
Max4525 = keras.layers.MaxPool1D(pool_size=(3), name = 'Max4525', )(Res83414)
model = tf.keras.models.Model(inputs=[in0Dot75498,in1Dot75498,in0Con85364,in0Up_70131,in0Glo85569,in0Con99647], outputs=Max4525)
w = model.get_layer('Den90666').get_weights() 
w[0] = np.array([[0.261, 0.405, 0.8589, 0.8171]])
w[1] = np.array([0.8178, 0.0412, 0.7068, 0.196])
model.get_layer('Den90666').set_weights(w) 
in0Dot75498 = tf.constant([[0.3198, 0.425]])
in1Dot75498 = tf.constant([[0.6426, 0.9537]])
in0Con85364 = tf.constant([[0.6654, 0.3001, 0.4193, 0.5671, 0.9074, 0.5085, 0.4939, 0.6178, 0.7507, 0.3925, 0.5019, 0.7681]])
in0Up_70131 = tf.constant([[[1.2568, 1.9453, 1.3301, 1.4452]]])
in0Glo85569 = tf.constant([[[[1.149]]]])
in0Con99647 = tf.constant([[0.0622, 0.9524, 0.133, 0.2714, 0.1132, 0.535, 0.5564, 0.7135, 0.37, 0.5277, 0.0084, 0.4027, 0.3415, 0.963, 0.278]])
print (np.array2string(model.predict([in0Dot75498,in1Dot75498,in0Con85364,in0Up_70131,in0Glo85569,in0Con99647],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Max4525.png')

LDot75498 = dot_layer([[0.3198, 0.425]], [[0.6426, 0.9537]], 1, 1, Dot75498), 
LDen90666 = dense_layer(Dot75498, [[0.261, 0.405, 0.8589, 0.8171]],[0.8178, 0.0412, 0.7068, 0.196], Den90666), 
LCon85364 = concatenate_layer([Den90666,[[0.6654, 0.3001, 0.4193, 0.5671, 0.9074, 0.5085, 0.4939, 0.6178, 0.7507, 0.3925, 0.5019, 0.7681]]], 1, Con85364), 
LUp_70131 = up_sampling1D_layer([[[1.2568, 1.9453, 1.3301, 1.4452]]], 2, Up_70131), 
LRes93291 = reshape_layer(Up_70131, [2, 4, 1], Res93291), 
LUp_36989 = up_sampling2D_layer(Res93291, 1, 2, Up_36989), 
LRes49263 = reshape_layer(Up_36989, [2, 8], Res49263), 
LFla26760 = flatten_layer(Res49263, Fla26760), 
LGlo85569 = global_max_pool2D_layer([[[[1.149]]]], Glo85569), 
LCon99647 = concatenate_layer([Glo85569,[[0.0622, 0.9524, 0.133, 0.2714, 0.1132, 0.535, 0.5564, 0.7135, 0.37, 0.5277, 0.0084, 0.4027, 0.3415, 0.963, 0.278]]], 1, Con99647), 
LAdd74746 = add_layer([Fla26760,Con99647], Add74746), 
LMax95719 = maximum_layer([Con85364,Add74746], Max95719), 
LRes83414 = reshape_layer(Max95719, [16, 1], Res83414), 
LMax4525 = max_pool1D_layer(Res83414, 3, Max4525), 
exec_layers([LDot75498,LDen90666,LCon85364,LUp_70131,LRes93291,LUp_36989,LRes49263,LFla26760,LGlo85569,LCon99647,LAdd74746,LMax95719,LRes83414,LMax4525],["Dot75498","Den90666","Con85364","Up_70131","Res93291","Up_36989","Res49263","Fla26760","Glo85569","Con99647","Add74746","Max95719","Res83414","Max4525"],Max4525,"Max4525")

Actual (Unparsed): [[[2.8977000], [2.0783000], [2.0016000], [2.4730000], [2.4082000]]]

Expected (Unparsed): [[[2.8977],[2.0783],[2.0016],[2.473],[2.4082]]]

Actual:   [[[2.8977], [2.0783], [2.0016], [2.473], [2.4082]]]

Expected: [[[2.8977], [2.0783], [2.0016], [2.473], [2.4082]]]