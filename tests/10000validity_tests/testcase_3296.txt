import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0GRU39020 = tf.keras.layers.Input(shape=([3, 2]))

GRU39020 = keras.layers.GRU(2,reset_after=True, recurrent_activation='sigmoid', name = 'GRU39020', )(in0GRU39020)
Res49070 = keras.layers.Reshape((2, 1), name = 'Res49070', )(GRU39020)
Res46512 = keras.layers.Reshape((2, 1, 1), name = 'Res46512', )(Res49070)
Zer93475 = keras.layers.ZeroPadding2D(padding=((1, 1), (1, 1)), name = 'Zer93475', )(Res46512)
model = tf.keras.models.Model(inputs=[in0GRU39020], outputs=Zer93475)
w = model.get_layer('GRU39020').get_weights() 
w[0] = np.array([[9, 3, 6, 1, 1, 2], [4, 4, 1, 2, 10, 6]])
w[1] = np.array([[10, 1, 1, 8, 9, 8], [7, 4, 5, 6, 4, 5]])
w[2] = np.array([[6, 7, 3, 5, 7, 10], [6, 10, 5, 9, 4, 7]])
model.get_layer('GRU39020').set_weights(w) 
in0GRU39020 = tf.constant([[[10, 5], [8, 4], [2, 5]]])
print (np.array2string(model.predict([in0GRU39020],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Zer93475.png')

LGRU39020 = gru_layer([[[10, 5], [8, 4], [2, 5]]],[[9, 3, 6, 1, 1, 2], [4, 4, 1, 2, 10, 6]],[[10, 1, 1, 8, 9, 8], [7, 4, 5, 6, 4, 5]],[[6, 7, 3, 5, 7, 10], [6, 10, 5, 9, 4, 7]], true, GRU39020), 
LRes49070 = reshape_layer(GRU39020, [2, 1], Res49070), 
LRes46512 = reshape_layer(Res49070, [2, 1, 1], Res46512), 
LZer93475 = zero_padding2D_layer(Res46512, 1, 1, 1, 1, Zer93475), 
exec_layers([LGRU39020,LRes49070,LRes46512,LZer93475],["GRU39020","Res49070","Res46512","Zer93475"],Zer93475,"Zer93475")

Actual (Unparsed): [[[[0.0000000], [0.0000000], [0.0000000]], [[0.0000000], [0.0000000], [0.0000000]], [[0.0000000], [0.0000000], [0.0000000]], [[0.0000000], [0.0000000], [0.0000000]]]]

Expected (Unparsed): [[[[0],[0],[0]],[[0],[0.0],[0]],[[0],[0.0],[0]],[[0],[0],[0]]]]

Actual:   [[[[0], [0], [0]], [[0], [0], [0]], [[0], [0], [0]], [[0], [0], [0]]]]

Expected: [[[[0], [0], [0]], [[0], [0], [0]], [[0], [0], [0]], [[0], [0], [0]]]]