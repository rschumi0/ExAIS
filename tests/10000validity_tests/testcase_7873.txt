import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0ELU41691 = tf.keras.layers.Input(shape=([2, 2, 1]))
in0Con86067 = tf.keras.layers.Input(shape=([2, 2, 3]))
in0Glo41865 = tf.keras.layers.Input(shape=([1, 1, 1]))
in0Con21869 = tf.keras.layers.Input(shape=([2, 2, 3]))
in0Mul70158 = tf.keras.layers.Input(shape=([2, 2, 2, 2]))
in1Mul70158 = tf.keras.layers.Input(shape=([2, 2, 2, 2]))
in0Ave8078 = tf.keras.layers.Input(shape=([2, 2, 2]))
in1Ave8078 = tf.keras.layers.Input(shape=([2, 2, 2]))

ELU41691 = keras.layers.ELU(alpha=-1.3540838454937898, name = 'ELU41691', input_shape=(2, 2, 1))(in0ELU41691)
Con86067 = keras.layers.Concatenate(axis=3, name = 'Con86067', )([ELU41691,in0Con86067])
Glo41865 = keras.layers.GlobalMaxPool2D(name = 'Glo41865', )(in0Glo41865)
Res42538 = keras.layers.Reshape((1, 1), name = 'Res42538', )(Glo41865)
Res86757 = keras.layers.Reshape((1, 1, 1), name = 'Res86757', )(Res42538)
Zer86151 = keras.layers.ZeroPadding2D(padding=((1, 0), (1, 0)), name = 'Zer86151', )(Res86757)
Con21869 = keras.layers.Concatenate(axis=3, name = 'Con21869', )([Zer86151,in0Con21869])
Mul70158 = keras.layers.Multiply(name = 'Mul70158', )([in0Mul70158,in1Mul70158])
Res61548 = keras.layers.Reshape((2, 2, 4), name = 'Res61548', )(Mul70158)
Max95765 = keras.layers.MaxPool2D(pool_size=(1, 1), strides=(1, 1), padding='valid', name = 'Max95765', )(Res61548)
Min3 = keras.layers.Minimum(name = 'Min3', )([Con21869,Max95765])
Mul90946 = keras.layers.Multiply(name = 'Mul90946', )([Con86067,Min3])
Res50454 = keras.layers.Reshape((2, 2, 4, 1), name = 'Res50454', )(Mul90946)
Zer14105 = keras.layers.ZeroPadding3D(padding=((2, 0), (2, 0), (1, 0)), name = 'Zer14105', )(Res50454)
Ave8078 = keras.layers.Average(name = 'Ave8078', )([in0Ave8078,in1Ave8078])
Con90022 = keras.layers.Conv2D(3, (1, 1),strides=(1, 1), padding='valid', dilation_rate=(1, 1), name = 'Con90022', )(Ave8078)
Res55750 = keras.layers.Reshape((2, 2, 3, 1), name = 'Res55750', )(Con90022)
Zer6841 = keras.layers.ZeroPadding3D(padding=((1, 1), (1, 1), (1, 1)), name = 'Zer6841', )(Res55750)
Max21937 = keras.layers.Maximum(name = 'Max21937', )([Zer14105,Zer6841])
model = tf.keras.models.Model(inputs=[in0ELU41691,in0Con86067,in0Glo41865,in0Con21869,in0Mul70158,in1Mul70158,in0Ave8078,in1Ave8078], outputs=Max21937)
w = model.get_layer('Con90022').get_weights() 
w[0] = np.array([[[[0.7875, 0.3162, 0.1218], [0.0264, 0.4747, 0.3158]]]])
w[1] = np.array([0, 0, 0])
model.get_layer('Con90022').set_weights(w) 
in0ELU41691 = tf.constant([[[[0.3156], [0.4849]], [[0.2446], [0.6024]]]])
in0Con86067 = tf.constant([[[[0.0565, 0.0103, 0.8775], [0.8955, 0.3802, 0.7074]], [[0.1768, 0.329, 0.1804], [0.4105, 0.3821, 0.5906]]]])
in0Glo41865 = tf.constant([[[[1.7696]]]])
in0Con21869 = tf.constant([[[[0.7143, 0.7175, 0.3645], [0.9774, 0.292, 0.927]], [[0.5842, 0.4775, 0.2954], [0.3937, 0.1788, 0.3968]]]])
in0Mul70158 = tf.constant([[[[[0.6717, 0.5244], [0.6823, 0.0203]], [[0.2722, 0.3047], [0.3969, 0.2085]]], [[[0.6021, 0.6991], [0.489, 0.4002]], [[0.494, 0.5572], [0.2585, 0.5087]]]]])
in1Mul70158 = tf.constant([[[[[0.9246, 0.8295], [0.4799, 0.6683]], [[0.3652, 0.7083], [0.5471, 0.5895]]], [[[0.006, 0.3682], [0.4712, 0.6479]], [[0.3972, 0.7503], [0.7617, 0.7209]]]]])
in0Ave8078 = tf.constant([[[[0.7232, 0.9802], [0.4121, 0.0756]], [[0.8784, 0.6938], [0.1788, 0.9322]]]])
in1Ave8078 = tf.constant([[[[0.7507, 0.7536], [0.0953, 0.6794]], [[0.6332, 0.5848], [0.692, 0.1042]]]])
print (np.array2string(model.predict([in0ELU41691,in0Con86067,in0Glo41865,in0Con21869,in0Mul70158,in1Mul70158,in0Ave8078,in1Ave8078],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Max21937.png')

LELU41691 = elu_layer([[[[0.3156], [0.4849]], [[0.2446], [0.6024]]]], -1.3540838454937898, ELU41691), 
LCon86067 = concatenate_layer([ELU41691,[[[[0.0565, 0.0103, 0.8775], [0.8955, 0.3802, 0.7074]], [[0.1768, 0.329, 0.1804], [0.4105, 0.3821, 0.5906]]]]], 3, Con86067), 
LGlo41865 = global_max_pool2D_layer([[[[1.7696]]]], Glo41865), 
LRes42538 = reshape_layer(Glo41865, [1, 1], Res42538), 
LRes86757 = reshape_layer(Res42538, [1, 1, 1], Res86757), 
LZer86151 = zero_padding2D_layer(Res86757, 1, 0, 1, 0, Zer86151), 
LCon21869 = concatenate_layer([Zer86151,[[[[0.7143, 0.7175, 0.3645], [0.9774, 0.292, 0.927]], [[0.5842, 0.4775, 0.2954], [0.3937, 0.1788, 0.3968]]]]], 3, Con21869), 
LMul70158 = multiply_layer([[[[[[0.6717, 0.5244], [0.6823, 0.0203]], [[0.2722, 0.3047], [0.3969, 0.2085]]], [[[0.6021, 0.6991], [0.489, 0.4002]], [[0.494, 0.5572], [0.2585, 0.5087]]]]], [[[[[0.9246, 0.8295], [0.4799, 0.6683]], [[0.3652, 0.7083], [0.5471, 0.5895]]], [[[0.006, 0.3682], [0.4712, 0.6479]], [[0.3972, 0.7503], [0.7617, 0.7209]]]]]], Mul70158), 
LRes61548 = reshape_layer(Mul70158, [2, 2, 4], Res61548), 
LMax95765 = max_pool2D_layer(Res61548, 1, 1, 1, 1, false, Max95765), 
LMin3 = minimum_layer([Con21869,Max95765], Min3), 
LMul90946 = multiply_layer([Con86067,Min3], Mul90946), 
LRes50454 = reshape_layer(Mul90946, [2, 2, 4, 1], Res50454), 
LZer14105 = zero_padding3D_layer(Res50454, 2, 0, 2, 0, 1, 0, Zer14105), 
LAve8078 = average_layer([[[[[0.7232, 0.9802], [0.4121, 0.0756]], [[0.8784, 0.6938], [0.1788, 0.9322]]]], [[[[0.7507, 0.7536], [0.0953, 0.6794]], [[0.6332, 0.5848], [0.692, 0.1042]]]]], Ave8078), 
LCon90022 = conv2D_layer(Ave8078, 1, 1,[[[[0.7875, 0.3162, 0.1218], [0.0264, 0.4747, 0.3158]]]],[0, 0, 0], 1, 1, false, 1, 1, Con90022), 
LRes55750 = reshape_layer(Con90022, [2, 2, 3, 1], Res55750), 
LZer6841 = zero_padding3D_layer(Res55750, 1, 1, 1, 1, 1, 1, Zer6841), 
LMax21937 = maximum_layer([Zer14105,Zer6841], Max21937), 
exec_layers([LELU41691,LCon86067,LGlo41865,LRes42538,LRes86757,LZer86151,LCon21869,LMul70158,LRes61548,LMax95765,LMin3,LMul90946,LRes50454,LZer14105,LAve8078,LCon90022,LRes55750,LZer6841,LMax21937],["ELU41691","Con86067","Glo41865","Res42538","Res86757","Zer86151","Con21869","Mul70158","Res61548","Max95765","Min3","Mul90946","Res50454","Zer14105","Ave8078","Con90022","Res55750","Zer6841","Max21937"],Max21937,"Max21937")

Actual (Unparsed): [[[[[0.0000000], [0.0000000], [0.0000000], [0.0000000], [0.0000000]], [[0.0000000], [0.0000000], [0.0000000], [0.0000000], [0.0000000]], [[0.0000000], [0.0000000], [0.0000000], [0.0000000], [0.0000000]], [[0.0000000], [0.0000000], [0.0000000], [0.0000000], [0.0000000]]], [[[0.0000000], [0.0000000], [0.0000000], [0.0000000], [0.0000000]], [[0.0000000], [0.6032343], [0.6445410], [0.3635275], [0.0000000]], [[0.0000000], [0.2097547], [0.2594192], [0.1501152], [0.0000000]], [[0.0000000], [0.0000000], [0.0000000], [0.0000000], [0.0000000]]], [[[0.0000000], [0.0000000], [0.0000000], [0.0000000], [0.0000000]], [[0.0000000], [0.6120700], [0.5424597], [0.2939474], [0.0000000]], [[0.0000000], [0.3565580], [0.3836630], [0.2166793], [0.0119046]], [[0.0000000], [0.0000000], [0.1932659], [0.0825581], [0.0869471]]], [[[0.0000000], [0.0000000], [0.0000000], [0.0000000], [0.0000000]], [[0.0000000], [0.0000000], [0.0000000], [0.0000000], [0.0000000]], [[0.0000000], [0.0000000], [0.0455098], [0.0758071], [0.0467758]], [[0.0000000], [0.1182010], [0.1616138], [0.0683195], [0.2165859]]]]]

Expected (Unparsed): [[[[[0],[0],[0],[0],[0]],[[0],[0],[0],[0],[0]],[[0],[0],[0],[0],[0]],[[0],[0],[0],[0],[0]]],[[[0],[0],[0],[0],[0]],[[0],[0.603234285],[0.64454102],[0.36352753000000004],[0]],[[0],[0.20975475000000002],[0.25941919],[0.15011516000000003],[0]],[[0],[0],[0],[0],[0]]],[[[0],[0],[0],[0],[0]],[[0],[0.61207002],[0.54245967],[0.29394738000000004],[0]],[[0],[0.35655797999999994],[0.38366301999999997],[0.21667928],[0.011904594974999998]],[[0],[0.0],[0.19326592345500002],[0.082558144998],[0.08694706455000001]]],[[[0],[0],[0],[0],[0]],[[0],[0],[0],[0],[0]],[[0],[0.0],[0.04550984401600001],[0.0758071272],[0.046775840232]],[[0],[0.11820100032000001],[0.16161384999999998],[0.06831947999999999],[0.21658591279800002]]]]]

Actual:   [[[[[0], [0], [0], [0], [0]], [[0], [0], [0], [0], [0]], [[0], [0], [0], [0], [0]], [[0], [0], [0], [0], [0]]], [[[0], [0], [0], [0], [0]], [[0], [0.6033], [0.6446], [0.3636], [0]], [[0], [0.2098], [0.2595], [0.1502], [0]], [[0], [0], [0], [0], [0]]], [[[0], [0], [0], [0], [0]], [[0], [0.6121], [0.5425], [0.294], [0]], [[0], [0.3566], [0.3837], [0.2167], [0.012]], [[0], [0], [0.1933], [0.0826], [0.087]]], [[[0], [0], [0], [0], [0]], [[0], [0], [0], [0], [0]], [[0], [0], [0.0456], [0.0759], [0.0468]], [[0], [0.1183], [0.1617], [0.0684], [0.2166]]]]]

Expected: [[[[[0], [0], [0], [0], [0]], [[0], [0], [0], [0], [0]], [[0], [0], [0], [0], [0]], [[0], [0], [0], [0], [0]]], [[[0], [0], [0], [0], [0]], [[0], [0.6033], [0.6446], [0.3636], [0]], [[0], [0.2098], [0.2595], [0.1502], [0]], [[0], [0], [0], [0], [0]]], [[[0], [0], [0], [0], [0]], [[0], [0.6121], [0.5425], [0.294], [0]], [[0], [0.3566], [0.3837], [0.2167], [0.012]], [[0], [0], [0.1933], [0.0826], [0.087]]], [[[0], [0], [0], [0], [0]], [[0], [0], [0], [0], [0]], [[0], [0], [0.0456], [0.0759], [0.0468]], [[0], [0.1183], [0.1617], [0.0684], [0.2166]]]]]