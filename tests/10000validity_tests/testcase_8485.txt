import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Add75392 = tf.keras.layers.Input(shape=([2, 2]))
in1Add75392 = tf.keras.layers.Input(shape=([2, 2]))
in0Add18824 = tf.keras.layers.Input(shape=([1, 2, 1]))
in1Add18824 = tf.keras.layers.Input(shape=([1, 2, 1]))
in0Add86531 = tf.keras.layers.Input(shape=([1, 2]))
in1Add86531 = tf.keras.layers.Input(shape=([1, 2]))
in0Add18264 = tf.keras.layers.Input(shape=([2, 1, 1, 2]))
in1Add18264 = tf.keras.layers.Input(shape=([2, 1, 1, 2]))
in0Min38889 = tf.keras.layers.Input(shape=([1, 1, 2, 1]))
in1Min38889 = tf.keras.layers.Input(shape=([1, 1, 2, 1]))

Add75392 = keras.layers.Add(name = 'Add75392', )([in0Add75392,in1Add75392])
Bat21736 = keras.layers.BatchNormalization(axis=1, epsilon=0.4552249924761922,  name = 'Bat21736', )(Add75392)
Res23899 = keras.layers.Reshape((2, 2, 1), name = 'Res23899', )(Bat21736)
Add18824 = keras.layers.Add(name = 'Add18824', )([in0Add18824,in1Add18824])
Zer16417 = keras.layers.ZeroPadding2D(padding=((1, 0), (0, 0)), name = 'Zer16417', )(Add18824)
Max54458 = keras.layers.Maximum(name = 'Max54458', )([Res23899,Zer16417])
Res48538 = keras.layers.Reshape((2, 2), name = 'Res48538', )(Max54458)
Add86531 = keras.layers.Add(name = 'Add86531', )([in0Add86531,in1Add86531])
Zer33278 = keras.layers.ZeroPadding1D(padding=((1, 0)), name = 'Zer33278', )(Add86531)
Add15535 = keras.layers.Add(name = 'Add15535', )([Res48538,Zer33278])
Res58236 = keras.layers.Reshape((2, 2, 1), name = 'Res58236', )(Add15535)
Add18264 = keras.layers.Add(name = 'Add18264', )([in0Add18264,in1Add18264])
Res98800 = keras.layers.Reshape((2, 1, 2), name = 'Res98800', )(Add18264)
Res72812 = keras.layers.Reshape((2, 2), name = 'Res72812', )(Res98800)
Min38889 = keras.layers.Minimum(name = 'Min38889', )([in0Min38889,in1Min38889])
Thr69211 = keras.layers.ThresholdedReLU(theta=5.859786148794839, name = 'Thr69211', )(Min38889)
Res57596 = keras.layers.Reshape((1, 1, 2), name = 'Res57596', )(Thr69211)
Res23335 = keras.layers.Reshape((1, 2), name = 'Res23335', )(Res57596)
Dot61827 = keras.layers.Dot(axes=(1, 2), name = 'Dot61827', )([Res72812,Res23335])
Res89685 = keras.layers.Reshape((2, 1, 1), name = 'Res89685', )(Dot61827)
Cro86367 = keras.layers.Cropping2D(cropping=((0, 1), (0, 0)), name = 'Cro86367', )(Res89685)
Zer50894 = keras.layers.ZeroPadding2D(padding=((1, 0), (1, 0)), name = 'Zer50894', )(Cro86367)
Sub80235 = keras.layers.Subtract(name = 'Sub80235', )([Res58236,Zer50894])
model = tf.keras.models.Model(inputs=[in0Add75392,in1Add75392,in0Add18824,in1Add18824,in0Add86531,in1Add86531,in0Add18264,in1Add18264,in0Min38889,in1Min38889], outputs=Sub80235)
w = model.get_layer('Bat21736').get_weights() 
w[0] = np.array([0.92, 0.997])
w[1] = np.array([0.7641, 0.1203])
w[2] = np.array([0.7752, 0.3229])
w[3] = np.array([0.9772, 0.3912])
model.get_layer('Bat21736').set_weights(w) 
in0Add75392 = tf.constant([[[0.5499, 0.5373], [0.7218, 0.634]]])
in1Add75392 = tf.constant([[[0.3709, 0.6466], [0.6286, 0.5814]]])
in0Add18824 = tf.constant([[[[0.5384], [0.7078]]]])
in1Add18824 = tf.constant([[[[0.5351], [0.8]]]])
in0Add86531 = tf.constant([[[0.0456, 0.5822]]])
in1Add86531 = tf.constant([[[0.3295, 0.6364]]])
in0Add18264 = tf.constant([[[[[0.4884, 0.3873]]], [[[0.0453, 0.3118]]]]])
in1Add18264 = tf.constant([[[[[0.7964, 0.063]]], [[[0.3123, 0.5894]]]]])
in0Min38889 = tf.constant([[[[[0.722], [0.6847]]]]])
in1Min38889 = tf.constant([[[[[0.3325], [0.3448]]]]])
print (np.array2string(model.predict([in0Add75392,in1Add75392,in0Add18824,in1Add18824,in0Add86531,in1Add86531,in0Add18264,in1Add18264,in0Min38889,in1Min38889],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Sub80235.png')

LAdd75392 = add_layer([[[[0.5499, 0.5373], [0.7218, 0.634]]], [[[0.3709, 0.6466], [0.6286, 0.5814]]]], Add75392), 
LBat21736 = batch_normalization_layer(Add75392, 1, 0.4552249924761922, [0.92, 0.997], [0.7641, 0.1203], [0.7752, 0.3229], [0.9772, 0.3912], Bat21736), 
LRes23899 = reshape_layer(Bat21736, [2, 2, 1], Res23899), 
LAdd18824 = add_layer([[[[[0.5384], [0.7078]]]], [[[[0.5351], [0.8]]]]], Add18824), 
LZer16417 = zero_padding2D_layer(Add18824, 1, 0, 0, 0, Zer16417), 
LMax54458 = maximum_layer([Res23899,Zer16417], Max54458), 
LRes48538 = reshape_layer(Max54458, [2, 2], Res48538), 
LAdd86531 = add_layer([[[[0.0456, 0.5822]]], [[[0.3295, 0.6364]]]], Add86531), 
LZer33278 = zero_padding1D_layer(Add86531, 1, 0, Zer33278), 
LAdd15535 = add_layer([Res48538,Zer33278], Add15535), 
LRes58236 = reshape_layer(Add15535, [2, 2, 1], Res58236), 
LAdd18264 = add_layer([[[[[[0.4884, 0.3873]]], [[[0.0453, 0.3118]]]]], [[[[[0.7964, 0.063]]], [[[0.3123, 0.5894]]]]]], Add18264), 
LRes98800 = reshape_layer(Add18264, [2, 1, 2], Res98800), 
LRes72812 = reshape_layer(Res98800, [2, 2], Res72812), 
LMin38889 = minimum_layer([[[[[[0.722], [0.6847]]]]], [[[[[0.3325], [0.3448]]]]]], Min38889), 
LThr69211 = thresholded_relu_layer(Min38889, 5.859786148794839, Thr69211), 
LRes57596 = reshape_layer(Thr69211, [1, 1, 2], Res57596), 
LRes23335 = reshape_layer(Res57596, [1, 2], Res23335), 
LDot61827 = dot_layer(Res72812,Res23335, 1, 2, Dot61827), 
LRes89685 = reshape_layer(Dot61827, [2, 1, 1], Res89685), 
LCro86367 = cropping2D_layer(Res89685, 0, 1, 0, 0, Cro86367), 
LZer50894 = zero_padding2D_layer(Cro86367, 1, 0, 1, 0, Zer50894), 
LSub80235 = subtract_layer(Res58236,Zer50894, Sub80235), 
exec_layers([LAdd75392,LBat21736,LRes23899,LAdd18824,LZer16417,LMax54458,LRes48538,LAdd86531,LZer33278,LAdd15535,LRes58236,LAdd18264,LRes98800,LRes72812,LMin38889,LThr69211,LRes57596,LRes23335,LDot61827,LRes89685,LCro86367,LZer50894,LSub80235],["Add75392","Bat21736","Res23899","Add18824","Zer16417","Max54458","Res48538","Add86531","Zer33278","Add15535","Res58236","Add18264","Res98800","Res72812","Min38889","Thr69211","Res57596","Res23335","Dot61827","Res89685","Cro86367","Zer50894","Sub80235"],Sub80235,"Sub80235")

Actual (Unparsed): [[[[0.8760214], [1.0782641]], [[1.6088809], [2.7264000]]]]

Expected (Unparsed): [[[[0.8760214318000354],[1.0782640740156213]],[[1.608880843314013],[2.7264]]]]

Actual:   [[[[0.8761], [1.0783]], [[1.6089], [2.7264]]]]

Expected: [[[[0.8761], [1.0783]], [[1.6089], [2.7264]]]]