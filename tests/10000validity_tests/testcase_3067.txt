import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Dot88289 = tf.keras.layers.Input(shape=([3]))
in1Dot88289 = tf.keras.layers.Input(shape=([3]))
in0Con40516 = tf.keras.layers.Input(shape=([1, 3]))
in0Cro58832 = tf.keras.layers.Input(shape=([2, 4]))

Dot88289 = keras.layers.Dot(axes=(1, 1), name = 'Dot88289', )([in0Dot88289,in1Dot88289])
Res29768 = keras.layers.Reshape((1, 1), name = 'Res29768', )(Dot88289)
Con40516 = keras.layers.Concatenate(axis=2, name = 'Con40516', )([Res29768,in0Con40516])
Cro58832 = keras.layers.Cropping1D(cropping=((0, 1)), name = 'Cro58832', )(in0Cro58832)
Mul26592 = keras.layers.Multiply(name = 'Mul26592', )([Con40516,Cro58832])
Res82704 = keras.layers.Reshape((1, 4, 1), name = 'Res82704', )(Mul26592)
Loc21114 = keras.layers.LocallyConnected2D(2, (1, 3),strides=(1, 1), name = 'Loc21114', )(Res82704)
Res91507 = keras.layers.Reshape((1, 2, 2, 1), name = 'Res91507', )(Loc21114)
Con18825 = keras.layers.Conv3D(3, (1, 2, 2),strides=(1, 1, 7), padding='valid', dilation_rate=(1, 1, 1), name = 'Con18825', )(Res91507)
Res8390 = keras.layers.Reshape((1, 1, 3), name = 'Res8390', )(Con18825)
Res35953 = keras.layers.Reshape((1, 3), name = 'Res35953', )(Res8390)
Sim30242 = keras.layers.SimpleRNN(3,name = 'Sim30242', )(Res35953)
model = tf.keras.models.Model(inputs=[in0Dot88289,in1Dot88289,in0Con40516,in0Cro58832], outputs=Sim30242)
w = model.get_layer('Loc21114').get_weights() 
w[0] = np.array([[[0.6551, 0.0891], [0.8871, 0.2183], [0.2232, 0.2573]], [[0.5834, 0.3659], [0.4749, 0.9474], [0.5296, 0.9943]]])
w[1] = np.array([[[0, 0], [0, 0]]])
model.get_layer('Loc21114').set_weights(w) 
w = model.get_layer('Con18825').get_weights() 
w[0] = np.array([[[[[0.4904, 0.5227, 0.9086]], [[0.8401, 0.1028, 0.1046]]], [[[0.7938, 0.0802, 0.4071]], [[0.1076, 0.9008, 0.1943]]]]])
w[1] = np.array([0, 0, 0])
model.get_layer('Con18825').set_weights(w) 
w = model.get_layer('Sim30242').get_weights() 
w[0] = np.array([[10, 1, 2], [4, 7, 7], [3, 5, 9]])
w[1] = np.array([[5, 1, 3], [4, 7, 3], [4, 4, 1]])
w[2] = np.array([1, 4, 9])
model.get_layer('Sim30242').set_weights(w) 
in0Dot88289 = tf.constant([[0.3004, 0.76, 0.6768]])
in1Dot88289 = tf.constant([[0.7147, 0.8892, 0.2426]])
in0Con40516 = tf.constant([[[0.995, 0.1732, 0.7732]]])
in0Cro58832 = tf.constant([[[1.6971, 1.5142, 1.0531, 1.2476], [1.5219, 1.5138, 1.1533, 1.7883]]])
print (np.array2string(model.predict([in0Dot88289,in1Dot88289,in0Con40516,in0Cro58832],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Sim30242.png')

LDot88289 = dot_layer([[0.3004, 0.76, 0.6768]], [[0.7147, 0.8892, 0.2426]], 1, 1, Dot88289), 
LRes29768 = reshape_layer(Dot88289, [1, 1], Res29768), 
LCon40516 = concatenate_layer([Res29768,[[[0.995, 0.1732, 0.7732]]]], 2, Con40516), 
LCro58832 = cropping1D_layer([[[1.6971, 1.5142, 1.0531, 1.2476], [1.5219, 1.5138, 1.1533, 1.7883]]], 0, 1, Cro58832), 
LMul26592 = multiply_layer([Con40516,Cro58832], Mul26592), 
LRes82704 = reshape_layer(Mul26592, [1, 4, 1], Res82704), 
LLoc21114 = locally_connected2D_layer(Res82704, 1, 3,[[[0.6551, 0.0891], [0.8871, 0.2183], [0.2232, 0.2573]], [[0.5834, 0.3659], [0.4749, 0.9474], [0.5296, 0.9943]]],[[[0, 0], [0, 0]]], 1, 1, Loc21114), 
LRes91507 = reshape_layer(Loc21114, [1, 2, 2, 1], Res91507), 
LCon18825 = conv3D_layer(Res91507, 1, 2, 2,[[[[[0.4904, 0.5227, 0.9086]], [[0.8401, 0.1028, 0.1046]]], [[[0.7938, 0.0802, 0.4071]], [[0.1076, 0.9008, 0.1943]]]]],[0, 0, 0], 1, 1, 7, false, 1, 1, 1, Con18825), 
LRes8390 = reshape_layer(Con18825, [1, 1, 3], Res8390), 
LRes35953 = reshape_layer(Res8390, [1, 3], Res35953), 
LSim30242 = simple_rnn_layer(Res35953,[[10, 1, 2], [4, 7, 7], [3, 5, 9]],[[5, 1, 3], [4, 7, 3], [4, 4, 1]],[1, 4, 9], Sim30242), 
exec_layers([LDot88289,LRes29768,LCon40516,LCro58832,LMul26592,LRes82704,LLoc21114,LRes91507,LCon18825,LRes8390,LRes35953,LSim30242],["Dot88289","Res29768","Con40516","Cro58832","Mul26592","Res82704","Loc21114","Res91507","Con18825","Res8390","Res35953","Sim30242"],Sim30242,"Sim30242")

Actual (Unparsed): [[1.0000000, 1.0000000, 1.0000000]]

Expected (Unparsed): [[1.0,1.0,1.0]]

Actual:   [[1, 1, 1]]

Expected: [[1, 1, 1]]