import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Max82209 = tf.keras.layers.Input(shape=([1, 2, 1]))
in0Den49842 = tf.keras.layers.Input(shape=([3, 2, 5]))
in0Con7402 = tf.keras.layers.Input(shape=([1]))
in0Mul53946 = tf.keras.layers.Input(shape=([1, 2, 1]))
in1Mul53946 = tf.keras.layers.Input(shape=([1, 2, 1]))

Max82209 = keras.layers.MaxPool2D(pool_size=(1, 1), name = 'Max82209', )(in0Max82209)
Res19026 = keras.layers.Reshape((1, 2), name = 'Res19026', )(Max82209)
Fla87578 = keras.layers.Flatten(name = 'Fla87578', )(Res19026)
Den49842 = keras.layers.Dense(3,name = 'Den49842', )(in0Den49842)
Res82759 = keras.layers.Reshape((3, 6), name = 'Res82759', )(Den49842)
LST70117 = keras.layers.LSTM(1,recurrent_activation='sigmoid', name = 'LST70117', )(Res82759)
Con7402 = keras.layers.Concatenate(axis=1, name = 'Con7402', )([LST70117,in0Con7402])
Max67325 = keras.layers.Maximum(name = 'Max67325', )([Fla87578,Con7402])
Res62779 = keras.layers.Reshape((2, 1), name = 'Res62779', )(Max67325)
Mul53946 = keras.layers.Multiply(name = 'Mul53946', )([in0Mul53946,in1Mul53946])
Res40037 = keras.layers.Reshape((2, 1), name = 'Res40037', )(Mul53946)
Mul46811 = keras.layers.Multiply(name = 'Mul46811', )([Res62779,Res40037])
model = tf.keras.models.Model(inputs=[in0Max82209,in0Den49842,in0Con7402,in0Mul53946,in1Mul53946], outputs=Mul46811)
w = model.get_layer('Den49842').get_weights() 
w[0] = np.array([[0.1456, 0.7354, 0.5334], [0.8272, 0.0256, 0.1893], [0.2048, 0.1645, 0.8022], [0.3805, 0.1742, 0.4861], [0.4682, 0.9154, 0.2267]])
w[1] = np.array([0.2225, 0.4037, 0.1512])
model.get_layer('Den49842').set_weights(w) 
w = model.get_layer('LST70117').get_weights() 
w[0] = np.array([[3, 10, 10, 9], [3, 9, 8, 7], [6, 9, 3, 9], [5, 2, 3, 4], [2, 8, 7, 6], [10, 10, 4, 5]])
w[1] = np.array([[2, 3, 6, 5]])
w[2] = np.array([8, 5, 5, 10])
model.get_layer('LST70117').set_weights(w) 
in0Max82209 = tf.constant([[[[1.7964], [1.5717]]]])
in0Den49842 = tf.constant([[[[0.1643, 0.7103, 0.2303, 0.8471, 0.3101], [0.6014, 0.8822, 0.8936, 0.4896, 0.5218]], [[0.0118, 0.0358, 0.5386, 0.3876, 0.5434], [0.8054, 0.892, 0.3012, 0.0064, 0.6418]], [[0.3443, 0.6008, 0.2211, 0.9796, 0.9276], [0.5135, 0.4437, 0.1255, 0.7641, 0.4952]]]])
in0Con7402 = tf.constant([[0.0525]])
in0Mul53946 = tf.constant([[[[0.699], [0.9839]]]])
in1Mul53946 = tf.constant([[[[0.8508], [0.2041]]]])
print (np.array2string(model.predict([in0Max82209,in0Den49842,in0Con7402,in0Mul53946,in1Mul53946],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Mul46811.png')

LMax82209 = max_pool2D_layer([[[[1.7964], [1.5717]]]], 1, 1, Max82209), 
LRes19026 = reshape_layer(Max82209, [1, 2], Res19026), 
LFla87578 = flatten_layer(Res19026, Fla87578), 
LDen49842 = dense_layer([[[[0.1643, 0.7103, 0.2303, 0.8471, 0.3101], [0.6014, 0.8822, 0.8936, 0.4896, 0.5218]], [[0.0118, 0.0358, 0.5386, 0.3876, 0.5434], [0.8054, 0.892, 0.3012, 0.0064, 0.6418]], [[0.3443, 0.6008, 0.2211, 0.9796, 0.9276], [0.5135, 0.4437, 0.1255, 0.7641, 0.4952]]]], [[0.1456, 0.7354, 0.5334], [0.8272, 0.0256, 0.1893], [0.2048, 0.1645, 0.8022], [0.3805, 0.1742, 0.4861], [0.4682, 0.9154, 0.2267]],[0.2225, 0.4037, 0.1512], Den49842), 
LRes82759 = reshape_layer(Den49842, [3, 6], Res82759), 
LLST70117 = lstm_layer(Res82759,[[3, 10, 10, 9], [3, 9, 8, 7], [6, 9, 3, 9], [5, 2, 3, 4], [2, 8, 7, 6], [10, 10, 4, 5]],[[2, 3, 6, 5]],[8, 5, 5, 10], LST70117), 
LCon7402 = concatenate_layer([LST70117,[[0.0525]]], 1, Con7402), 
LMax67325 = maximum_layer([Fla87578,Con7402], Max67325), 
LRes62779 = reshape_layer(Max67325, [2, 1], Res62779), 
LMul53946 = multiply_layer([[[[[0.699], [0.9839]]]], [[[[0.8508], [0.2041]]]]], Mul53946), 
LRes40037 = reshape_layer(Mul53946, [2, 1], Res40037), 
LMul46811 = multiply_layer([Res62779,Res40037], Mul46811), 
exec_layers([LMax82209,LRes19026,LFla87578,LDen49842,LRes82759,LLST70117,LCon7402,LMax67325,LRes62779,LMul53946,LRes40037,LMul46811],["Max82209","Res19026","Fla87578","Den49842","Res82759","LST70117","Con7402","Max67325","Res62779","Mul53946","Res40037","Mul46811"],Mul46811,"Mul46811")

Actual (Unparsed): [[[1.0683356], [0.3156193]]]

Expected (Unparsed): [[[1.0683356068799998],[0.315619348083]]]

Actual:   [[[1.0684], [0.3157]]]

Expected: [[[1.0684], [0.3157]]]