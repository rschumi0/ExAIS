import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Mul5734 = tf.keras.layers.Input(shape=([1, 2, 2]))
in1Mul5734 = tf.keras.layers.Input(shape=([1, 2, 2]))
in0Glo40955 = tf.keras.layers.Input(shape=([1, 2, 2]))
in0Con15660 = tf.keras.layers.Input(shape=([4]))
in0Con87912 = tf.keras.layers.Input(shape=([6, 3]))
in0Glo80491 = tf.keras.layers.Input(shape=([1, 1, 2]))
in0Cro95442 = tf.keras.layers.Input(shape=([3, 2, 4]))
in0Ave64614 = tf.keras.layers.Input(shape=([2, 2, 1]))
in1Ave64614 = tf.keras.layers.Input(shape=([2, 2, 1]))
in0Add26254 = tf.keras.layers.Input(shape=([2, 1]))
in1Add26254 = tf.keras.layers.Input(shape=([2, 1]))
in0Con61276 = tf.keras.layers.Input(shape=([2, 1]))
in0Con6323 = tf.keras.layers.Input(shape=([6, 2]))

Mul5734 = keras.layers.Multiply(name = 'Mul5734', )([in0Mul5734,in1Mul5734])
Con17958 = keras.layers.Conv2DTranspose(2, (1, 2),strides=(1, 1), padding='valid', name = 'Con17958', )(Mul5734)
Res7563 = keras.layers.Reshape((1, 6), name = 'Res7563', )(Con17958)
Fla91002 = keras.layers.Flatten(name = 'Fla91002', )(Res7563)
Glo40955 = keras.layers.GlobalMaxPool2D(name = 'Glo40955', )(in0Glo40955)
Con15660 = keras.layers.Concatenate(axis=1, name = 'Con15660', )([Glo40955,in0Con15660])
Min85740 = keras.layers.Minimum(name = 'Min85740', )([Fla91002,Con15660])
Res61607 = keras.layers.Reshape((6, 1), name = 'Res61607', )(Min85740)
Con87912 = keras.layers.Concatenate(axis=2, name = 'Con87912', )([Res61607,in0Con87912])
Glo80491 = keras.layers.GlobalMaxPool2D(name = 'Glo80491', )(in0Glo80491)
Res95007 = keras.layers.Reshape((2, 1), name = 'Res95007', )(Glo80491)
Cro95442 = keras.layers.Cropping2D(cropping=((0, 1), (1, 0)), name = 'Cro95442', )(in0Cro95442)
Res48264 = keras.layers.Reshape((2, 4), name = 'Res48264', )(Cro95442)
Dot43507 = keras.layers.Dot(axes=(1, 1), name = 'Dot43507', )([Res95007,Res48264])
ELU13622 = keras.layers.ELU(alpha=0.8749250633134054, name = 'ELU13622', )(Dot43507)
Zer37578 = keras.layers.ZeroPadding1D(padding=((5, 0)), name = 'Zer37578', )(ELU13622)
Ave10275 = keras.layers.Average(name = 'Ave10275', )([Con87912,Zer37578])
Ave64614 = keras.layers.Average(name = 'Ave64614', )([in0Ave64614,in1Ave64614])
Res11321 = keras.layers.Reshape((2, 2), name = 'Res11321', )(Ave64614)
Add26254 = keras.layers.Add(name = 'Add26254', )([in0Add26254,in1Add26254])
Con61276 = keras.layers.Concatenate(axis=2, name = 'Con61276', )([Add26254,in0Con61276])
Mul73464 = keras.layers.Multiply(name = 'Mul73464', )([Res11321,Con61276])
Zer1899 = keras.layers.ZeroPadding1D(padding=((4, 0)), name = 'Zer1899', )(Mul73464)
Con6323 = keras.layers.Concatenate(axis=2, name = 'Con6323', )([Zer1899,in0Con6323])
Sub37051 = keras.layers.Subtract(name = 'Sub37051', )([Ave10275,Con6323])
model = tf.keras.models.Model(inputs=[in0Mul5734,in1Mul5734,in0Glo40955,in0Con15660,in0Con87912,in0Glo80491,in0Cro95442,in0Ave64614,in1Ave64614,in0Add26254,in1Add26254,in0Con61276,in0Con6323], outputs=Sub37051)
w = model.get_layer('Con17958').get_weights() 
w[0] = np.array([[[[0.2268, 0.5445], [0.107, 0.8235]], [[0.5907, 0.5317], [0.3814, 0.2252]]]])
w[1] = np.array([0, 0])
model.get_layer('Con17958').set_weights(w) 
in0Mul5734 = tf.constant([[[[0.7335, 0.1329], [0.6277, 0.6834]]]])
in1Mul5734 = tf.constant([[[[0.168, 0.381], [0.9311, 0.2244]]]])
in0Glo40955 = tf.constant([[[[1.932, 1.652], [1.6783, 1.9756]]]])
in0Con15660 = tf.constant([[0.2496, 0.3672, 0.341, 0.7032]])
in0Con87912 = tf.constant([[[0.5152, 0.5582, 0.7006], [0.3862, 0.3341, 0.1221], [0.2779, 0.3932, 0.2203], [0.7903, 0.2886, 0.9606], [0.1701, 0.0899, 0.7024], [0.0595, 0.2617, 0.4416]]])
in0Glo80491 = tf.constant([[[[1.4777, 1.2376]]]])
in0Cro95442 = tf.constant([[[[1.338, 1.6564, 1.3582, 1.4645], [1.0074, 1.1917, 1.4506, 1.7293]], [[1.168, 1.6215, 1.6404, 1.4222], [1.1823, 1.9673, 1.9852, 1.5132]], [[1.7172, 1.7621, 1.2781, 1.3269], [1.4467, 1.6029, 1.6209, 1.8259]]]])
in0Ave64614 = tf.constant([[[[0.8485], [0.2621]], [[0.09], [0.543]]]])
in1Ave64614 = tf.constant([[[[0.6367], [0.61]], [[0.8232], [0.155]]]])
in0Add26254 = tf.constant([[[0.3947], [0.8396]]])
in1Add26254 = tf.constant([[[0.8934], [0.5738]]])
in0Con61276 = tf.constant([[[0.9139], [0.2543]]])
in0Con6323 = tf.constant([[[0.4002, 0.0946], [0.5427, 0.3479], [0.0511, 0.0815], [0.1903, 0.8742], [0.7258, 0.3056], [0.5829, 0.6731]]])
print (np.array2string(model.predict([in0Mul5734,in1Mul5734,in0Glo40955,in0Con15660,in0Con87912,in0Glo80491,in0Cro95442,in0Ave64614,in1Ave64614,in0Add26254,in1Add26254,in0Con61276,in0Con6323],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Sub37051.png')

LMul5734 = multiply_layer([[[[[0.7335, 0.1329], [0.6277, 0.6834]]]], [[[[0.168, 0.381], [0.9311, 0.2244]]]]], Mul5734), 
LCon17958 = conv2D_transpose_layer(Mul5734, 1, 2,[[[[0.2268, 0.5445], [0.107, 0.8235]], [[0.5907, 0.5317], [0.3814, 0.2252]]]],[0, 0], 1, 1, false, Con17958), 
LRes7563 = reshape_layer(Con17958, [1, 6], Res7563), 
LFla91002 = flatten_layer(Res7563, Fla91002), 
LGlo40955 = global_max_pool2D_layer([[[[1.932, 1.652], [1.6783, 1.9756]]]], Glo40955), 
LCon15660 = concatenate_layer([Glo40955,[[0.2496, 0.3672, 0.341, 0.7032]]], 1, Con15660), 
LMin85740 = minimum_layer([Fla91002,Con15660], Min85740), 
LRes61607 = reshape_layer(Min85740, [6, 1], Res61607), 
LCon87912 = concatenate_layer([Res61607,[[[0.5152, 0.5582, 0.7006], [0.3862, 0.3341, 0.1221], [0.2779, 0.3932, 0.2203], [0.7903, 0.2886, 0.9606], [0.1701, 0.0899, 0.7024], [0.0595, 0.2617, 0.4416]]]], 2, Con87912), 
LGlo80491 = global_max_pool2D_layer([[[[1.4777, 1.2376]]]], Glo80491), 
LRes95007 = reshape_layer(Glo80491, [2, 1], Res95007), 
LCro95442 = cropping2D_layer([[[[1.338, 1.6564, 1.3582, 1.4645], [1.0074, 1.1917, 1.4506, 1.7293]], [[1.168, 1.6215, 1.6404, 1.4222], [1.1823, 1.9673, 1.9852, 1.5132]], [[1.7172, 1.7621, 1.2781, 1.3269], [1.4467, 1.6029, 1.6209, 1.8259]]]], 0, 1, 1, 0, Cro95442), 
LRes48264 = reshape_layer(Cro95442, [2, 4], Res48264), 
LDot43507 = dot_layer(Res95007,Res48264, 1, 1, Dot43507), 
LELU13622 = elu_layer(Dot43507, 0.8749250633134054, ELU13622), 
LZer37578 = zero_padding1D_layer(ELU13622, 5, 0, Zer37578), 
LAve10275 = average_layer([Con87912,Zer37578], Ave10275), 
LAve64614 = average_layer([[[[[0.8485], [0.2621]], [[0.09], [0.543]]]], [[[[0.6367], [0.61]], [[0.8232], [0.155]]]]], Ave64614), 
LRes11321 = reshape_layer(Ave64614, [2, 2], Res11321), 
LAdd26254 = add_layer([[[[0.3947], [0.8396]]], [[[0.8934], [0.5738]]]], Add26254), 
LCon61276 = concatenate_layer([Add26254,[[[0.9139], [0.2543]]]], 2, Con61276), 
LMul73464 = multiply_layer([Res11321,Con61276], Mul73464), 
LZer1899 = zero_padding1D_layer(Mul73464, 4, 0, Zer1899), 
LCon6323 = concatenate_layer([Zer1899,[[[0.4002, 0.0946], [0.5427, 0.3479], [0.0511, 0.0815], [0.1903, 0.8742], [0.7258, 0.3056], [0.5829, 0.6731]]]], 2, Con6323), 
LSub37051 = subtract_layer(Ave10275,Con6323, Sub37051), 
exec_layers([LMul5734,LCon17958,LRes7563,LFla91002,LGlo40955,LCon15660,LMin85740,LRes61607,LCon87912,LGlo80491,LRes95007,LCro95442,LRes48264,LDot43507,LELU13622,LZer37578,LAve10275,LAve64614,LRes11321,LAdd26254,LCon61276,LMul73464,LZer1899,LCon6323,LSub37051],["Mul5734","Con17958","Res7563","Fla91002","Glo40955","Con15660","Min85740","Res61607","Con87912","Glo80491","Res95007","Cro95442","Res48264","Dot43507","ELU13622","Zer37578","Ave10275","Ave64614","Res11321","Add26254","Con61276","Mul73464","Zer1899","Con6323","Sub37051"],Sub37051,"Sub37051")

Actual (Unparsed): [[[0.0277594, 0.2576000, -0.1211000, 0.2557000], [0.0274416, 0.1931000, -0.3756500, -0.2868500], [0.1248000, 0.1389500, 0.1455000, 0.0286500], [0.1236131, 0.3951500, -0.0460000, -0.3939000], [-0.7860431, -0.3134561, -0.6808500, 0.0456000], [0.9592889, 2.0388521, 1.8481676, 1.7617615]]]

Expected (Unparsed): [[[0.027759406724999998,0.2576,-0.12109999999999999,0.2557],[0.027441618075,0.1931,-0.37564999999999993,-0.28685],[0.1248,0.13895,0.1455,0.028649999999999995],[0.123613127765,0.39515,-0.045999999999999985,-0.3939],[-0.7860430600000001,-0.313456095,-0.68085,0.04560000000000003],[0.9592889538250001,2.0388520850000003,1.8481675700000002,1.7617614650000004]]]

Actual:   [[[0.0278, 0.2576, -0.1211, 0.2557], [0.0275, 0.1931, -0.3756, -0.2868], [0.1248, 0.139, 0.1455, 0.0287], [0.1237, 0.3952, -0.046, -0.3939], [-0.786, -0.3134, -0.6808, 0.0456], [0.9593, 2.0389, 1.8482, 1.7618]]]

Expected: [[[0.0278, 0.2576, -0.121, 0.2557], [0.0275, 0.1931, -0.3756, -0.2868], [0.1248, 0.139, 0.1455, 0.0287], [0.1237, 0.3952, -0.0459, -0.3939], [-0.786, -0.3134, -0.6808, 0.0457], [0.9593, 2.0389, 1.8482, 1.7618]]]