import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Min93799 = tf.keras.layers.Input(shape=([1, 1, 1, 2]))
in1Min93799 = tf.keras.layers.Input(shape=([1, 1, 1, 2]))
in0Con28147 = tf.keras.layers.Input(shape=([2, 5, 14]))
in0Up_39489 = tf.keras.layers.Input(shape=([1, 3, 4, 4]))
in0PRe54041 = tf.keras.layers.Input(shape=([1, 1, 1]))
in0Ave65700 = tf.keras.layers.Input(shape=([2, 1, 1]))
in0Con46616 = tf.keras.layers.Input(shape=([2, 5, 15]))

Min93799 = keras.layers.Minimum(name = 'Min93799', )([in0Min93799,in1Min93799])
Res92450 = keras.layers.Reshape((1, 1, 2), name = 'Res92450', )(Min93799)
Zer78416 = keras.layers.ZeroPadding2D(padding=((1, 0), (4, 0)), name = 'Zer78416', )(Res92450)
Con28147 = keras.layers.Concatenate(axis=3, name = 'Con28147', )([Zer78416,in0Con28147])
Up_39489 = keras.layers.UpSampling3D(size=(1, 1, 1), name = 'Up_39489', )(in0Up_39489)
Res97737 = keras.layers.Reshape((1, 3, 16), name = 'Res97737', )(Up_39489)
Cro73626 = keras.layers.Cropping2D(cropping=((0, 0), (0, 0)), name = 'Cro73626', )(Res97737)
Zer42679 = keras.layers.ZeroPadding2D(padding=((1, 0), (2, 0)), name = 'Zer42679', )(Cro73626)
PRe54041 = keras.layers.PReLU(name = 'PRe54041', input_shape=(1, 1, 1))(in0PRe54041)
Zer35325 = keras.layers.ZeroPadding2D(padding=((1, 0), (0, 0)), name = 'Zer35325', )(PRe54041)
Ave65700 = keras.layers.AveragePooling2D(pool_size=(1, 1), name = 'Ave65700', )(in0Ave65700)
Ave80395 = keras.layers.Average(name = 'Ave80395', )([Zer35325,Ave65700])
Zer25972 = keras.layers.ZeroPadding2D(padding=((0, 0), (4, 0)), name = 'Zer25972', )(Ave80395)
Con46616 = keras.layers.Concatenate(axis=3, name = 'Con46616', )([Zer25972,in0Con46616])
Add35175 = keras.layers.Add(name = 'Add35175', )([Zer42679,Con46616])
Mul20211 = keras.layers.Multiply(name = 'Mul20211', )([Con28147,Add35175])
model = tf.keras.models.Model(inputs=[in0Min93799,in1Min93799,in0Con28147,in0Up_39489,in0PRe54041,in0Ave65700,in0Con46616], outputs=Mul20211)
w = model.get_layer('PRe54041').get_weights() 
w[0] = np.array([[[0.5778]]])
model.get_layer('PRe54041').set_weights(w) 
in0Min93799 = tf.constant([[[[[0.4108, 0.5433]]]]])
in1Min93799 = tf.constant([[[[[0.5771, 0.0784]]]]])
in0Con28147 = tf.constant([[[[0.8705, 0.2072, 0.7839, 0.9741, 0.7144, 0.6777, 0.4641, 0.8492, 0.7583, 0.779, 0.9161, 0.0679, 0.9367, 0.9963], [0.2204, 0.333, 0.6014, 0.5934, 0.6587, 0.128, 0.4389, 0.0742, 0.119, 0.8799, 0.7195, 0.2597, 0.4993, 0.473], [0.9904, 0.3299, 0.9246, 0.3908, 0.3312, 0.1921, 0.4237, 0.7227, 0.1992, 0.707, 0.9536, 0.8988, 0.7117, 0.6277], [0.3027, 0.2911, 0.9355, 0.5915, 0.4569, 0.7569, 0.3806, 0.1361, 0.4711, 0.7889, 0.4377, 0.5131, 0.751, 0.1839], [0.9341, 0.0157, 0.9237, 0.046, 0.3368, 0.6476, 0.1483, 0.5005, 0.3843, 0.2212, 0.8051, 0.7071, 0.0885, 0.3926]], [[0.9873, 0.6379, 0.1189, 0.7165, 0.118, 0.6102, 0.551, 0.5344, 0.3137, 0.7503, 0.8441, 0.3981, 0.827, 0.4048], [0.697, 0.7755, 0.0124, 0.0141, 0.1252, 0.9823, 0.782, 0.1145, 0.6985, 0.6441, 0.4425, 0.9454, 0.3872, 0.5028], [0.1395, 0.6049, 0.8714, 0.0521, 0.8748, 0.8179, 0.4888, 0.3108, 0.2045, 0.1596, 0.2195, 0.0245, 0.2833, 0.0127], [0.2333, 0.7245, 0.8714, 0.6248, 0.5661, 0.3666, 0.2915, 0.3838, 0.4297, 0.7205, 0.0882, 0.8277, 0.5104, 0.2913], [0.3235, 0.9688, 0.3671, 0.3128, 0.0205, 0.2258, 0.698, 0.2739, 0.262, 0.629, 0.816, 0.514, 0.8406, 0.9952]]]])
in0Up_39489 = tf.constant([[[[[1.6242, 1.2152, 1.0599, 1.505], [1.3152, 1.1248, 1.32, 1.336], [1.1517, 1.9282, 1.3574, 1.1091], [1.8854, 1.6786, 1.0374, 1.6925]], [[1.2137, 1.299, 1.7908, 1.847], [1.374, 1.4929, 1.1552, 1.3593], [1.7046, 1.254, 1.3806, 1.1833], [1.6116, 1.4753, 1.6082, 1.5687]], [[1.9959, 1.1557, 1.3241, 1.8584], [1.2163, 1.3568, 1.8885, 1.4898], [1.0904, 1.3691, 1.9443, 1.7518], [1.2673, 1.5169, 1.4235, 1.0132]]]]])
in0PRe54041 = tf.constant([[[[0.5477]]]])
in0Ave65700 = tf.constant([[[[1.6482]], [[1.6819]]]])
in0Con46616 = tf.constant([[[[0.3942, 0.9503, 0.0568, 0.0916, 0.6945, 0.4117, 0.7545, 0.3829, 0.2411, 0.1687, 0.8345, 0.2961, 0.8856, 0.2186, 0.534], [0.4816, 0.8085, 0.9289, 0.6136, 0.321, 0.4888, 0.8489, 0.6985, 0.6208, 0.7412, 0.1543, 0.6555, 0.9342, 0.376, 0.9749], [0.9139, 0.1796, 0.7843, 0.8, 0.0913, 0.0005, 0.1559, 0.0035, 0.8901, 0.4853, 0.0941, 0.2861, 0.9944, 0.4478, 0.1105], [0.493, 0.6158, 0.4617, 0.8524, 0.8329, 0.4095, 0.2343, 0.9452, 0.9974, 0.718, 0.7087, 0.0165, 0.061, 0.4832, 0.4913], [0.809, 0.3256, 0.7131, 0.8147, 0.2867, 0.4694, 0.0911, 0.2681, 0.2924, 0.4544, 0.1695, 0.9529, 0.6235, 0.6556, 0.6039]], [[0.5546, 0.3595, 0.5834, 0.0524, 0.0616, 0.8965, 0.3898, 0.6902, 0.5069, 0.4215, 0.0705, 0.7697, 0.1597, 0.4965, 0.9081], [0.2974, 0.053, 0.0086, 0.2347, 0.6874, 0.5976, 0.9943, 0.0359, 0.2075, 0.3021, 0.7473, 0.267, 0.136, 0.2957, 0.1763], [0.007, 0.8112, 0.4362, 0.6009, 0.7359, 0.1763, 0.2694, 0.0399, 0.0904, 0.9946, 0.0075, 0.5784, 0.4253, 0.6439, 0.9923], [0.582, 0.3874, 0.2847, 0.8175, 0.3709, 0.4956, 0.2429, 0.3995, 0.4593, 0.4145, 0.6457, 0.806, 0.6215, 0.2033, 0.7074], [0.5791, 0.8563, 0.3332, 0.5732, 0.6218, 0.7849, 0.6695, 0.3006, 0.4555, 0.1403, 0.9412, 0.3786, 0.8049, 0.7862, 0.4347]]]])
print (np.array2string(model.predict([in0Min93799,in1Min93799,in0Con28147,in0Up_39489,in0PRe54041,in0Ave65700,in0Con46616],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Mul20211.png')

LMin93799 = minimum_layer([[[[[[0.4108, 0.5433]]]]], [[[[[0.5771, 0.0784]]]]]], Min93799), 
LRes92450 = reshape_layer(Min93799, [1, 1, 2], Res92450), 
LZer78416 = zero_padding2D_layer(Res92450, 1, 0, 4, 0, Zer78416), 
LCon28147 = concatenate_layer([Zer78416,[[[[0.8705, 0.2072, 0.7839, 0.9741, 0.7144, 0.6777, 0.4641, 0.8492, 0.7583, 0.779, 0.9161, 0.0679, 0.9367, 0.9963], [0.2204, 0.333, 0.6014, 0.5934, 0.6587, 0.128, 0.4389, 0.0742, 0.119, 0.8799, 0.7195, 0.2597, 0.4993, 0.473], [0.9904, 0.3299, 0.9246, 0.3908, 0.3312, 0.1921, 0.4237, 0.7227, 0.1992, 0.707, 0.9536, 0.8988, 0.7117, 0.6277], [0.3027, 0.2911, 0.9355, 0.5915, 0.4569, 0.7569, 0.3806, 0.1361, 0.4711, 0.7889, 0.4377, 0.5131, 0.751, 0.1839], [0.9341, 0.0157, 0.9237, 0.046, 0.3368, 0.6476, 0.1483, 0.5005, 0.3843, 0.2212, 0.8051, 0.7071, 0.0885, 0.3926]], [[0.9873, 0.6379, 0.1189, 0.7165, 0.118, 0.6102, 0.551, 0.5344, 0.3137, 0.7503, 0.8441, 0.3981, 0.827, 0.4048], [0.697, 0.7755, 0.0124, 0.0141, 0.1252, 0.9823, 0.782, 0.1145, 0.6985, 0.6441, 0.4425, 0.9454, 0.3872, 0.5028], [0.1395, 0.6049, 0.8714, 0.0521, 0.8748, 0.8179, 0.4888, 0.3108, 0.2045, 0.1596, 0.2195, 0.0245, 0.2833, 0.0127], [0.2333, 0.7245, 0.8714, 0.6248, 0.5661, 0.3666, 0.2915, 0.3838, 0.4297, 0.7205, 0.0882, 0.8277, 0.5104, 0.2913], [0.3235, 0.9688, 0.3671, 0.3128, 0.0205, 0.2258, 0.698, 0.2739, 0.262, 0.629, 0.816, 0.514, 0.8406, 0.9952]]]]], 3, Con28147), 
LUp_39489 = up_sampling3D_layer([[[[[1.6242, 1.2152, 1.0599, 1.505], [1.3152, 1.1248, 1.32, 1.336], [1.1517, 1.9282, 1.3574, 1.1091], [1.8854, 1.6786, 1.0374, 1.6925]], [[1.2137, 1.299, 1.7908, 1.847], [1.374, 1.4929, 1.1552, 1.3593], [1.7046, 1.254, 1.3806, 1.1833], [1.6116, 1.4753, 1.6082, 1.5687]], [[1.9959, 1.1557, 1.3241, 1.8584], [1.2163, 1.3568, 1.8885, 1.4898], [1.0904, 1.3691, 1.9443, 1.7518], [1.2673, 1.5169, 1.4235, 1.0132]]]]], 1, 1, 1, Up_39489), 
LRes97737 = reshape_layer(Up_39489, [1, 3, 16], Res97737), 
LCro73626 = cropping2D_layer(Res97737, 0, 0, 0, 0, Cro73626), 
LZer42679 = zero_padding2D_layer(Cro73626, 1, 0, 2, 0, Zer42679), 
LPRe54041 = prelu_layer([[[[0.5477]]]], [[[0.5778]]], PRe54041), 
LZer35325 = zero_padding2D_layer(PRe54041, 1, 0, 0, 0, Zer35325), 
LAve65700 = average_pooling2D_layer([[[[1.6482]], [[1.6819]]]], 1, 1, Ave65700), 
LAve80395 = average_layer([Zer35325,Ave65700], Ave80395), 
LZer25972 = zero_padding2D_layer(Ave80395, 0, 0, 4, 0, Zer25972), 
LCon46616 = concatenate_layer([Zer25972,[[[[0.3942, 0.9503, 0.0568, 0.0916, 0.6945, 0.4117, 0.7545, 0.3829, 0.2411, 0.1687, 0.8345, 0.2961, 0.8856, 0.2186, 0.534], [0.4816, 0.8085, 0.9289, 0.6136, 0.321, 0.4888, 0.8489, 0.6985, 0.6208, 0.7412, 0.1543, 0.6555, 0.9342, 0.376, 0.9749], [0.9139, 0.1796, 0.7843, 0.8, 0.0913, 0.0005, 0.1559, 0.0035, 0.8901, 0.4853, 0.0941, 0.2861, 0.9944, 0.4478, 0.1105], [0.493, 0.6158, 0.4617, 0.8524, 0.8329, 0.4095, 0.2343, 0.9452, 0.9974, 0.718, 0.7087, 0.0165, 0.061, 0.4832, 0.4913], [0.809, 0.3256, 0.7131, 0.8147, 0.2867, 0.4694, 0.0911, 0.2681, 0.2924, 0.4544, 0.1695, 0.9529, 0.6235, 0.6556, 0.6039]], [[0.5546, 0.3595, 0.5834, 0.0524, 0.0616, 0.8965, 0.3898, 0.6902, 0.5069, 0.4215, 0.0705, 0.7697, 0.1597, 0.4965, 0.9081], [0.2974, 0.053, 0.0086, 0.2347, 0.6874, 0.5976, 0.9943, 0.0359, 0.2075, 0.3021, 0.7473, 0.267, 0.136, 0.2957, 0.1763], [0.007, 0.8112, 0.4362, 0.6009, 0.7359, 0.1763, 0.2694, 0.0399, 0.0904, 0.9946, 0.0075, 0.5784, 0.4253, 0.6439, 0.9923], [0.582, 0.3874, 0.2847, 0.8175, 0.3709, 0.4956, 0.2429, 0.3995, 0.4593, 0.4145, 0.6457, 0.806, 0.6215, 0.2033, 0.7074], [0.5791, 0.8563, 0.3332, 0.5732, 0.6218, 0.7849, 0.6695, 0.3006, 0.4555, 0.1403, 0.9412, 0.3786, 0.8049, 0.7862, 0.4347]]]]], 3, Con46616), 
LAdd35175 = add_layer([Zer42679,Con46616], Add35175), 
LMul20211 = multiply_layer([Con28147,Add35175], Mul20211), 
exec_layers([LMin93799,LRes92450,LZer78416,LCon28147,LUp_39489,LRes97737,LCro73626,LZer42679,LPRe54041,LZer35325,LAve65700,LAve80395,LZer25972,LCon46616,LAdd35175,LMul20211],["Min93799","Res92450","Zer78416","Con28147","Up_39489","Res97737","Cro73626","Zer42679","PRe54041","Zer35325","Ave65700","Ave80395","Zer25972","Con46616","Add35175","Mul20211"],Mul20211,"Mul20211")

Actual (Unparsed): [[[[0.0000000, 0.0000000, 0.8272362, 0.0117690, 0.0718052, 0.6765125, 0.2941185, 0.5113246, 0.1777039, 0.2047421, 0.1279252, 0.6500755, 0.2712572, 0.0601322, 0.2047626, 0.5320242], [0.0000000, 0.0000000, 0.1781934, 0.3093237, 0.3690191, 0.1904814, 0.3219725, 0.1086592, 0.3065716, 0.0460634, 0.0882028, 0.1357686, 0.4716322, 0.2426117, 0.1877368, 0.4611277], [0.0000000, 0.0000000, 0.1778758, 0.2587406, 0.7396800, 0.0356800, 0.0001656, 0.0299484, 0.0014830, 0.6432753, 0.0966718, 0.0665287, 0.2728250, 0.8937668, 0.3186993, 0.0693608], [0.0000000, 0.0000000, 0.1864027, 0.1344009, 0.7974202, 0.4926603, 0.1871006, 0.1773417, 0.3597431, 0.1357461, 0.3382498, 0.5590934, 0.0072221, 0.0312991, 0.3628832, 0.0903501], [0.0000000, 0.0000000, 0.3041429, 0.0111957, 0.7525384, 0.0131882, 0.1580939, 0.0589964, 0.0397592, 0.1463462, 0.1746259, 0.0374934, 0.7671798, 0.4408768, 0.0580206, 0.2370911]], [[0.0000000, 0.0000000, 0.3549343, 0.3721509, 0.0062304, 0.0441364, 0.1057870, 0.2378560, 0.3803002, 0.2708874, 0.1322245, 0.0528962, 0.6497038, 0.0635766, 0.4106055, 0.3675989], [0.0000000, 0.0000000, 0.0369410, 0.0066693, 0.0029103, 0.0096923, 0.0748195, 0.9767009, 0.0280738, 0.0237587, 0.2110168, 0.4813360, 0.1181475, 0.1285744, 0.1144950, 0.0886436], [0.0000000, 0.0000000, 0.2610185, 1.1742319, 1.6696895, 0.0969425, 1.3089633, 1.3130566, 0.5824541, 0.6273809, 0.4809840, 0.1782094, 0.5408041, 0.0515455, 0.4763123, 0.0340970], [0.0000000, 0.0000000, 0.5081741, 1.5444167, 1.9096731, 1.1645023, 0.9345179, 0.5873665, 0.6133452, 0.6575645, 0.7713544, 1.3177945, 0.2132323, 1.7355214, 0.9245896, 0.6630279], [1.2778756, 0.1360083, 0.7053594, 2.1232221, 0.6569254, 0.6189060, 0.0548047, 0.4875699, 0.9709180, 0.4997579, 0.5461652, 1.6938970, 1.3430544, 1.1934052, 1.8574738, 1.4409501]]]]

Expected (Unparsed): [[[[0,0.0,0.8272361500000001,0.01176896,0.07180524,0.6765124499999999,0.29411848,0.5113246499999999,0.17770389,0.20474212,0.12792520999999998,0.6500755,0.27125720999999997,0.06013224,0.20476261999999998,0.5320242000000001],[0,0.0,0.1781934,0.3093237,0.3690190400000001,0.19048140000000002,0.32197255999999996,0.1086592,0.30657165000000003,0.046063360000000005,0.0882028,0.13576857,0.47163225,0.24261174,0.1877368,0.4611277],[0,0.0,0.17787584,0.25874057,0.73968,0.03568004,0.00016560000000000001,0.029948390000000002,0.00148295,0.64327527,0.09667176,0.0665287,0.27282496,0.89376672,0.31869926,0.06936085],[0,0.0,0.18640266000000003,0.13440087,0.7974202,0.49266035,0.18710054999999998,0.17734167,0.35974312,0.13574614,0.3382498,0.55909343,0.00722205,0.031299099999999996,0.3628832,0.09035007],[0.0,0.0,0.30414296,0.011195669999999998,0.75253839,0.0131882,0.15809392,0.05899636,0.03975923,0.14634619999999998,0.17462592,0.0374934,0.76717979,0.44087685,0.05802059999999999,0.23709114]],[[0,0.0,0.35493434999999995,0.37215086,0.006230360000000001,0.044136400000000006,0.10578699999999999,0.23785595999999998,0.38030020000000003,0.27088736,0.13222455,0.052896149999999996,0.64970377,0.06357657,0.41060549999999996,0.36759888],[0,0.0,0.036940999999999995,0.0066692999999999995,0.00291028,0.00969234,0.07481952,0.9767008899999999,0.028073800000000003,0.02375875,0.21101684999999998,0.48133592999999997,0.1181475,0.1285744,0.11449504,0.08864364000000001],[0.0,0.0,0.26101845000000007,1.1742318799999998,1.6696895399999998,0.09694247,1.3089632400000002,1.31305666,0.58245408,0.6273808799999999,0.48098399999999997,0.17820935999999998,0.5408041,0.05154555000000001,0.4763122900000001,0.03409696],[0.0,0.0,0.50817406,1.54441665,1.9096730999999998,1.16450224,0.9345178800000001,0.5873665199999999,0.6133451499999999,0.65756454,0.7713544700000001,1.3177945000000002,0.21323232000000003,1.73552136,0.9245896,0.66302793],[1.27787556,0.13600832,0.7053594000000001,2.12322208,0.6569254499999999,0.6189060800000001,0.054804700000000005,0.48756994,0.970918,0.49975793999999996,0.5461652,1.693897,1.3430544,1.1934052,1.8574738199999998,1.4409500800000001]]]]

Actual:   [[[[0, 0, 0.8273, 0.0118, 0.0719, 0.6766, 0.2942, 0.5114, 0.1778, 0.2048, 0.128, 0.6501, 0.2713, 0.0602, 0.2048, 0.5321], [0, 0, 0.1782, 0.3094, 0.3691, 0.1905, 0.322, 0.1087, 0.3066, 0.0461, 0.0883, 0.1358, 0.4717, 0.2427, 0.1878, 0.4612], [0, 0, 0.1779, 0.2588, 0.7397, 0.0357, 0.0002, 0.03, 0.0015, 0.6433, 0.0967, 0.0666, 0.2729, 0.8938, 0.3187, 0.0694], [0, 0, 0.1865, 0.1345, 0.7975, 0.4927, 0.1872, 0.1774, 0.3598, 0.1358, 0.3383, 0.5591, 0.0073, 0.0313, 0.3629, 0.0904], [0, 0, 0.3042, 0.0112, 0.7526, 0.0132, 0.1581, 0.059, 0.0398, 0.1464, 0.1747, 0.0375, 0.7672, 0.4409, 0.0581, 0.2371]], [[0, 0, 0.355, 0.3722, 0.0063, 0.0442, 0.1058, 0.2379, 0.3804, 0.2709, 0.1323, 0.0529, 0.6498, 0.0636, 0.4107, 0.3676], [0, 0, 0.037, 0.0067, 0.003, 0.0097, 0.0749, 0.9768, 0.0281, 0.0238, 0.2111, 0.4814, 0.1182, 0.1286, 0.1145, 0.0887], [0, 0, 0.2611, 1.1743, 1.6697, 0.097, 1.309, 1.3131, 0.5825, 0.6274, 0.481, 0.1783, 0.5409, 0.0516, 0.4764, 0.0341], [0, 0, 0.5082, 1.5445, 1.9097, 1.1646, 0.9346, 0.5874, 0.6134, 0.6576, 0.7714, 1.3178, 0.2133, 1.7356, 0.9246, 0.6631], [1.2779, 0.1361, 0.7054, 2.1233, 0.657, 0.619, 0.0549, 0.4876, 0.971, 0.4998, 0.5462, 1.6939, 1.3431, 1.1935, 1.8575, 1.441]]]]

Expected: [[[[0, 0, 0.8273, 0.0118, 0.0719, 0.6766, 0.2942, 0.5114, 0.1778, 0.2048, 0.128, 0.6501, 0.2713, 0.0602, 0.2048, 0.5321], [0, 0, 0.1782, 0.3094, 0.3691, 0.1905, 0.322, 0.1087, 0.3066, 0.0461, 0.0883, 0.1358, 0.4717, 0.2427, 0.1878, 0.4612], [0, 0, 0.1779, 0.2588, 0.7397, 0.0357, 0.0002, 0.03, 0.0015, 0.6433, 0.0967, 0.0666, 0.2729, 0.8938, 0.3187, 0.0694], [0, 0, 0.1865, 0.1345, 0.7975, 0.4927, 0.1872, 0.1774, 0.3598, 0.1358, 0.3383, 0.5591, 0.0073, 0.0313, 0.3629, 0.0904], [0, 0, 0.3042, 0.0112, 0.7526, 0.0132, 0.1581, 0.059, 0.0398, 0.1464, 0.1747, 0.0375, 0.7672, 0.4409, 0.0581, 0.2371]], [[0, 0, 0.355, 0.3722, 0.0063, 0.0442, 0.1058, 0.2379, 0.3804, 0.2709, 0.1323, 0.0529, 0.6498, 0.0636, 0.4107, 0.3676], [0, 0, 0.037, 0.0067, 0.003, 0.0097, 0.0749, 0.9768, 0.0281, 0.0238, 0.2111, 0.4814, 0.1182, 0.1286, 0.1145, 0.0887], [0, 0, 0.2611, 1.1743, 1.6697, 0.097, 1.309, 1.3131, 0.5825, 0.6274, 0.481, 0.1783, 0.5409, 0.0516, 0.4764, 0.0341], [0, 0, 0.5082, 1.5445, 1.9097, 1.1646, 0.9346, 0.5874, 0.6134, 0.6576, 0.7714, 1.3178, 0.2133, 1.7356, 0.9246, 0.6631], [1.2779, 0.1361, 0.7054, 2.1233, 0.657, 0.619, 0.0549, 0.4876, 0.971, 0.4998, 0.5462, 1.6939, 1.3431, 1.1935, 1.8575, 1.441]]]]