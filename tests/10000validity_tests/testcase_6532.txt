import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Ave92690 = tf.keras.layers.Input(shape=([2, 1, 2, 1]))
in1Ave92690 = tf.keras.layers.Input(shape=([2, 1, 2, 1]))

Ave92690 = keras.layers.Average(name = 'Ave92690', )([in0Ave92690,in1Ave92690])
Con39060 = keras.layers.Conv3DTranspose(4, (2, 1, 2),strides=(2, 1, 2), padding='valid', name = 'Con39060', )(Ave92690)
model = tf.keras.models.Model(inputs=[in0Ave92690,in1Ave92690], outputs=Con39060)
w = model.get_layer('Con39060').get_weights() 
w[0] = np.array([[[[[0.1164], [0.9062], [0.4369], [0.6877]], [[0.9678], [0.4795], [0.5205], [0.2564]]]], [[[[0.7201], [0.3326], [0.5263], [0.5156]], [[0.9923], [0.2441], [0.8053], [0.3611]]]]])
w[1] = np.array([0, 0, 0, 0])
model.get_layer('Con39060').set_weights(w) 
in0Ave92690 = tf.constant([[[[[0.9758], [0.4486]]], [[[0.8803], [0.765]]]]])
in1Ave92690 = tf.constant([[[[[0.217], [0.6604]]], [[[0.0796], [0.8295]]]]])
print (np.array2string(model.predict([in0Ave92690,in1Ave92690],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Con39060.png')

LAve92690 = average_layer([[[[[[0.9758], [0.4486]]], [[[0.8803], [0.765]]]]], [[[[[0.217], [0.6604]]], [[[0.0796], [0.8295]]]]]], Ave92690), 
LCon39060 = conv3D_transpose_layer(Ave92690, 2, 1, 2,[[[[[0.1164], [0.9062], [0.4369], [0.6877]], [[0.9678], [0.4795], [0.5205], [0.2564]]]], [[[[0.7201], [0.3326], [0.5263], [0.5156]], [[0.9923], [0.2441], [0.8053], [0.3611]]]]],[0, 0, 0, 0], 2, 1, 2, false, Con39060), 
exec_layers([LAve92690,LCon39060],["Ave92690","Con39060"],Con39060,"Con39060")

Actual (Unparsed): [[[[[0.0694210, 0.5404577, 0.2605672, 0.4101443], [0.5771959, 0.2859738, 0.3104262, 0.1529170], [0.0645438, 0.5024879, 0.2422610, 0.3813296], [0.5366451, 0.2658827, 0.2886172, 0.1421738]]], [[[0.4294676, 0.1983626, 0.3138853, 0.3075038], [0.5918077, 0.1455812, 0.4802809, 0.2153600], [0.3992954, 0.1844267, 0.2918333, 0.2859002], [0.5502303, 0.1353534, 0.4465388, 0.2002299]]], [[[0.0558662, 0.4349307, 0.2096902, 0.3300616], [0.4644956, 0.2301360, 0.2498140, 0.1230592], [0.0927999, 0.7224680, 0.3483185, 0.5482688], [0.7715786, 0.3822814, 0.4149686, 0.2044149]]], [[[0.3456120, 0.1596314, 0.2525977, 0.2474622], [0.4762544, 0.1171558, 0.3865037, 0.1733099], [0.5740997, 0.2651654, 0.4195927, 0.4110621], [0.7911112, 0.1946087, 0.6420254, 0.2878870]]]]]

Expected (Unparsed): [[[[[0.06942096,0.54045768,0.26056716,0.41014428],[0.5771959200000001,0.2859738,0.3104262,0.15291696000000002],[0.0645438,0.5024879,0.24226105,0.38132964999999996],[0.5366451,0.26588275,0.28861725,0.14217380000000002]]],[[[0.42946764,0.19836264,0.31388532,0.30750384],[0.59180772,0.14558124000000003,0.48028092000000006,0.21536004],[0.39929545,0.1844267,0.29183335,0.2859002],[0.55023035,0.13535345000000001,0.44653885,0.20022995]]],[[[0.05586618,0.43493069,0.209690155,0.330061615],[0.46449561,0.230136025,0.24981397499999997,0.12305918],[0.0927999,0.72246795,0.348318525,0.548268825],[0.77157855,0.382281375,0.414968625,0.2044149]]],[[[0.34561199499999995,0.15963137,0.252597685,0.24746221999999996],[0.47625438499999995,0.11715579500000001,0.386503735,0.173309945],[0.574099725,0.26516535,0.419592675,0.4110621],[0.7911111749999999,0.194608725,0.642025425,0.287886975]]]]]

Actual:   [[[[[0.0695, 0.5405, 0.2606, 0.4102], [0.5772, 0.286, 0.3105, 0.153], [0.0646, 0.5025, 0.2423, 0.3814], [0.5367, 0.2659, 0.2887, 0.1422]]], [[[0.4295, 0.1984, 0.3139, 0.3076], [0.5919, 0.1456, 0.4803, 0.2154], [0.3993, 0.1845, 0.2919, 0.286], [0.5503, 0.1354, 0.4466, 0.2003]]], [[[0.0559, 0.435, 0.2097, 0.3301], [0.4645, 0.2302, 0.2499, 0.1231], [0.0928, 0.7225, 0.3484, 0.5483], [0.7716, 0.3823, 0.415, 0.2045]]], [[[0.3457, 0.1597, 0.2526, 0.2475], [0.4763, 0.1172, 0.3866, 0.1734], [0.5741, 0.2652, 0.4196, 0.4111], [0.7912, 0.1947, 0.6421, 0.2879]]]]]

Expected: [[[[[0.0695, 0.5405, 0.2606, 0.4102], [0.5772, 0.286, 0.3105, 0.153], [0.0646, 0.5025, 0.2423, 0.3814], [0.5367, 0.2659, 0.2887, 0.1422]]], [[[0.4295, 0.1984, 0.3139, 0.3076], [0.5919, 0.1456, 0.4803, 0.2154], [0.3993, 0.1845, 0.2919, 0.286], [0.5503, 0.1354, 0.4466, 0.2003]]], [[[0.0559, 0.435, 0.2097, 0.3301], [0.4645, 0.2302, 0.2499, 0.1231], [0.0928, 0.7225, 0.3484, 0.5483], [0.7716, 0.3823, 0.415, 0.2045]]], [[[0.3457, 0.1597, 0.2526, 0.2475], [0.4763, 0.1172, 0.3866, 0.1734], [0.5741, 0.2652, 0.4196, 0.4111], [0.7912, 0.1947, 0.6421, 0.2879]]]]]