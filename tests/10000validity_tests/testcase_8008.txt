import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Cro26686 = tf.keras.layers.Input(shape=([1, 2, 1, 1]))

Cro26686 = keras.layers.Cropping3D(cropping=((0, 0), (1, 0), (0, 0)), name = 'Cro26686', )(in0Cro26686)
Res57833 = keras.layers.Reshape((1, 1, 1), name = 'Res57833', )(Cro26686)
Res42703 = keras.layers.Reshape((1, 1), name = 'Res42703', )(Res57833)
Glo16906 = keras.layers.GlobalMaxPool1D(name = 'Glo16906', )(Res42703)
Res34345 = keras.layers.Reshape((1, 1), name = 'Res34345', )(Glo16906)
Sep61633 = keras.layers.SeparableConv1D(3, (1),strides=(1), padding='valid', name = 'Sep61633', )(Res34345)
model = tf.keras.models.Model(inputs=[in0Cro26686], outputs=Sep61633)
w = model.get_layer('Sep61633').get_weights() 
w[0] = np.array([[[0.2436]]])
w[1] = np.array([[[0.5686, 0.649, 0.973]]])
w[2] = np.array([0, 0, 0])
model.get_layer('Sep61633').set_weights(w) 
in0Cro26686 = tf.constant([[[[[1.608]], [[1.1894]]]]])
print (np.array2string(model.predict([in0Cro26686],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Sep61633.png')

LCro26686 = cropping3D_layer([[[[[1.608]], [[1.1894]]]]], 0, 0, 1, 0, 0, 0, Cro26686), 
LRes57833 = reshape_layer(Cro26686, [1, 1, 1], Res57833), 
LRes42703 = reshape_layer(Res57833, [1, 1], Res42703), 
LGlo16906 = global_max_pool1D_layer(Res42703, Glo16906), 
LRes34345 = reshape_layer(Glo16906, [1, 1], Res34345), 
LSep61633 = separable_conv1D_layer(Res34345, 1,[[[[0.2436]]],[[[0.5686, 0.649, 0.973]]]],[0, 0, 0], 1, false, Sep61633), 
exec_layers([LCro26686,LRes57833,LRes42703,LGlo16906,LRes34345,LSep61633],["Cro26686","Res57833","Res42703","Glo16906","Res34345","Sep61633"],Sep61633,"Sep61633")

Actual (Unparsed): [[[0.1647449, 0.1880399, 0.2819149]]]

Expected (Unparsed): [[[0.16474493582400002,0.18803985816000002,0.28191491832000004]]]

Actual:   [[[0.1648, 0.1881, 0.282]]]

Expected: [[[0.1648, 0.1881, 0.282]]]