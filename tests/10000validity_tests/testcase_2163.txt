import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0ELU18411 = tf.keras.layers.Input(shape=([1, 2, 2]))
in0Up_31005 = tf.keras.layers.Input(shape=([4, 1, 1]))
in0Con48596 = tf.keras.layers.Input(shape=([8, 2, 1]))

ELU18411 = keras.layers.ELU(alpha=-2.3070180348639635, name = 'ELU18411', input_shape=(1, 2, 2))(in0ELU18411)
Sof59710 = keras.layers.Softmax(axis=1, name = 'Sof59710', )(ELU18411)
Zer39148 = keras.layers.ZeroPadding2D(padding=((7, 0), (0, 0)), name = 'Zer39148', )(Sof59710)
Up_31005 = keras.layers.UpSampling2D(size=(2, 2), name = 'Up_31005', )(in0Up_31005)
Con48596 = keras.layers.Concatenate(axis=3, name = 'Con48596', )([Up_31005,in0Con48596])
Min93917 = keras.layers.Minimum(name = 'Min93917', )([Zer39148,Con48596])
Loc6312 = keras.layers.LocallyConnected2D(3, (5, 1),strides=(1, 1), name = 'Loc6312', )(Min93917)
model = tf.keras.models.Model(inputs=[in0ELU18411,in0Up_31005,in0Con48596], outputs=Loc6312)
w = model.get_layer('Loc6312').get_weights() 
w[0] = np.array([[[0.3734, 0.5248, 0.2982], [0.5693, 0.7261, 0.0654], [0.9199, 0.5656, 0.2391], [0.411, 0.4965, 0.6164], [0.2935, 0.1943, 0.8733], [0.6563, 0.5869, 0.2982], [0.4803, 0.5347, 0.0918], [0.8063, 0.0977, 0.322], [0.5533, 0.452, 0.7286], [0.8813, 0.8026, 0.5164]], [[0.3281, 0.5847, 0.5535], [0.7407, 0.5456, 0.3119], [0.0236, 0.9713, 0.8239], [0.1608, 0.6726, 0.9345], [0.1725, 0.618, 0.5914], [0.7504, 0.6776, 0.2925], [0.5842, 0.5384, 0.3493], [0.6979, 0.7924, 0.7411], [0.2165, 0.9839, 0.7812], [0.6002, 0.6744, 0.9647]], [[0.3729, 0.5524, 0.9698], [0.2691, 0.1549, 0.185], [0.3596, 0.945, 0.5075], [0.7858, 0.9238, 0.3928], [0.2066, 0.4579, 0.2285], [0.0725, 0.1379, 0.2272], [0.0378, 0.0309, 0.4273], [0.5658, 0.0561, 0.9311], [0.3401, 0.2793, 0.2439], [0.9305, 0.6302, 0.7602]], [[0.5966, 0.4493, 0.6313], [0.1977, 0.4021, 0.5993], [0.2727, 0.4519, 0.8971], [0.803, 0.3771, 0.9495], [0.9352, 0.9208, 0.0502], [0.1398, 0.7457, 0.0269], [0.7073, 0.7599, 0.1145], [0.8268, 0.3002, 0.4042], [0.3511, 0.5921, 0.6032], [0.663, 0.2192, 0.405]], [[0.9992, 0.4068, 0.6008], [0.4505, 0.0636, 0.6235], [0.0438, 0.07, 0.3888], [0.5885, 0.4966, 0.3027], [0.5121, 0.0456, 0.4735], [0.6775, 0.516, 0.5059], [0.6145, 0.0911, 0.8544], [0.7361, 0.1026, 0.7107], [0.2231, 0.9995, 0.6866], [0.9733, 0.8463, 0.637]], [[0.1172, 0.9171, 0.3711], [0.1329, 0.6529, 0.28], [0.6825, 0.8946, 0.9153], [0.0248, 0.3336, 0.596], [0.7808, 0.21, 0.9662], [0.0819, 0.1871, 0.4177], [0.0452, 0.5128, 0.6987], [0.2671, 0.4701, 0.64], [0.428, 0.8983, 0.1398], [0.8457, 0.4437, 0.6932]], [[0.348, 0.8553, 0.1061], [0.9159, 0.9633, 0.8371], [0.8689, 0.4003, 0.7087], [0.9387, 0.9594, 0.8915], [0.4981, 0.1804, 0.009], [0.1563, 0.7103, 0.0234], [0.1418, 0.5159, 0.4812], [0.8614, 0.2513, 0.0286], [0.5875, 0.1477, 0.1936], [0.1509, 0.2538, 0.8612]], [[0.4106, 0.3379, 0.2696], [0.5392, 0.0575, 0.713], [0.1267, 0.1632, 0.055], [0.6281, 0.5013, 0.7663], [0.6134, 0.6678, 0.2957], [0.7538, 0.68, 0.4054], [0.6253, 0.5742, 0.4542], [0.0139, 0.5944, 0.5601], [0.5793, 0.6496, 0.437], [0.4716, 0.8759, 0.3859]]])
w[1] = np.array([[[0, 0, 0], [0, 0, 0]], [[0, 0, 0], [0, 0, 0]], [[0, 0, 0], [0, 0, 0]], [[0, 0, 0], [0, 0, 0]]])
model.get_layer('Loc6312').set_weights(w) 
in0ELU18411 = tf.constant([[[[0.0753, 0.4791], [0.286, 0.6471]]]])
in0Up_31005 = tf.constant([[[[1.4268]], [[1.2612]], [[1.6626]], [[1.8262]]]])
in0Con48596 = tf.constant([[[[0.0809], [0.5528]], [[0.3816], [0.251]], [[0.3678], [0.4228]], [[0.8764], [0.3977]], [[0.5778], [0.7747]], [[0.5455], [0.7335]], [[0.0201], [0.4734]], [[0.5761], [0.5312]]]])
print (np.array2string(model.predict([in0ELU18411,in0Up_31005,in0Con48596],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Loc6312.png')

LELU18411 = elu_layer([[[[0.0753, 0.4791], [0.286, 0.6471]]]], -2.3070180348639635, ELU18411), 
LSof59710 = softmax_layer(ELU18411, 1, Sof59710), 
LZer39148 = zero_padding2D_layer(Sof59710, 7, 0, 0, 0, Zer39148), 
LUp_31005 = up_sampling2D_layer([[[[1.4268]], [[1.2612]], [[1.6626]], [[1.8262]]]], 2, 2, Up_31005), 
LCon48596 = concatenate_layer([Up_31005,[[[[0.0809], [0.5528]], [[0.3816], [0.251]], [[0.3678], [0.4228]], [[0.8764], [0.3977]], [[0.5778], [0.7747]], [[0.5455], [0.7335]], [[0.0201], [0.4734]], [[0.5761], [0.5312]]]]], 3, Con48596), 
LMin93917 = minimum_layer([Zer39148,Con48596], Min93917), 
LLoc6312 = locally_connected2D_layer(Min93917, 5, 1,[[[0.3734, 0.5248, 0.2982], [0.5693, 0.7261, 0.0654], [0.9199, 0.5656, 0.2391], [0.411, 0.4965, 0.6164], [0.2935, 0.1943, 0.8733], [0.6563, 0.5869, 0.2982], [0.4803, 0.5347, 0.0918], [0.8063, 0.0977, 0.322], [0.5533, 0.452, 0.7286], [0.8813, 0.8026, 0.5164]], [[0.3281, 0.5847, 0.5535], [0.7407, 0.5456, 0.3119], [0.0236, 0.9713, 0.8239], [0.1608, 0.6726, 0.9345], [0.1725, 0.618, 0.5914], [0.7504, 0.6776, 0.2925], [0.5842, 0.5384, 0.3493], [0.6979, 0.7924, 0.7411], [0.2165, 0.9839, 0.7812], [0.6002, 0.6744, 0.9647]], [[0.3729, 0.5524, 0.9698], [0.2691, 0.1549, 0.185], [0.3596, 0.945, 0.5075], [0.7858, 0.9238, 0.3928], [0.2066, 0.4579, 0.2285], [0.0725, 0.1379, 0.2272], [0.0378, 0.0309, 0.4273], [0.5658, 0.0561, 0.9311], [0.3401, 0.2793, 0.2439], [0.9305, 0.6302, 0.7602]], [[0.5966, 0.4493, 0.6313], [0.1977, 0.4021, 0.5993], [0.2727, 0.4519, 0.8971], [0.803, 0.3771, 0.9495], [0.9352, 0.9208, 0.0502], [0.1398, 0.7457, 0.0269], [0.7073, 0.7599, 0.1145], [0.8268, 0.3002, 0.4042], [0.3511, 0.5921, 0.6032], [0.663, 0.2192, 0.405]], [[0.9992, 0.4068, 0.6008], [0.4505, 0.0636, 0.6235], [0.0438, 0.07, 0.3888], [0.5885, 0.4966, 0.3027], [0.5121, 0.0456, 0.4735], [0.6775, 0.516, 0.5059], [0.6145, 0.0911, 0.8544], [0.7361, 0.1026, 0.7107], [0.2231, 0.9995, 0.6866], [0.9733, 0.8463, 0.637]], [[0.1172, 0.9171, 0.3711], [0.1329, 0.6529, 0.28], [0.6825, 0.8946, 0.9153], [0.0248, 0.3336, 0.596], [0.7808, 0.21, 0.9662], [0.0819, 0.1871, 0.4177], [0.0452, 0.5128, 0.6987], [0.2671, 0.4701, 0.64], [0.428, 0.8983, 0.1398], [0.8457, 0.4437, 0.6932]], [[0.348, 0.8553, 0.1061], [0.9159, 0.9633, 0.8371], [0.8689, 0.4003, 0.7087], [0.9387, 0.9594, 0.8915], [0.4981, 0.1804, 0.009], [0.1563, 0.7103, 0.0234], [0.1418, 0.5159, 0.4812], [0.8614, 0.2513, 0.0286], [0.5875, 0.1477, 0.1936], [0.1509, 0.2538, 0.8612]], [[0.4106, 0.3379, 0.2696], [0.5392, 0.0575, 0.713], [0.1267, 0.1632, 0.055], [0.6281, 0.5013, 0.7663], [0.6134, 0.6678, 0.2957], [0.7538, 0.68, 0.4054], [0.6253, 0.5742, 0.4542], [0.0139, 0.5944, 0.5601], [0.5793, 0.6496, 0.437], [0.4716, 0.8759, 0.3859]]],[[[0, 0, 0], [0, 0, 0]], [[0, 0, 0], [0, 0, 0]], [[0, 0, 0], [0, 0, 0]], [[0, 0, 0], [0, 0, 0]]], 1, 1, Loc6312), 
exec_layers([LELU18411,LSof59710,LZer39148,LUp_31005,LCon48596,LMin93917,LLoc6312],["ELU18411","Sof59710","Zer39148","Up_31005","Con48596","Min93917","Loc6312"],Loc6312,"Loc6312")

Actual (Unparsed): [[[[0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000]], [[0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000]], [[0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000]], [[0.6744335, 0.2939142, 0.6897373], [0.8298139, 1.1148781, 0.6419901]]]]

Expected (Unparsed): [[[[0.0,0.0,0.0],[0.0,0.0,0.0]],[[0.0,0.0,0.0],[0.0,0.0,0.0]],[[0.0,0.0,0.0],[0.0,0.0,0.0]],[[0.67443349,0.29391418,0.6897373199999999],[0.8298139200000001,1.11487808,0.64199008]]]]

Actual:   [[[[0, 0, 0], [0, 0, 0]], [[0, 0, 0], [0, 0, 0]], [[0, 0, 0], [0, 0, 0]], [[0.6745, 0.294, 0.6898], [0.8299, 1.1149, 0.642]]]]

Expected: [[[[0, 0, 0], [0, 0, 0]], [[0, 0, 0], [0, 0, 0]], [[0, 0, 0], [0, 0, 0]], [[0.6745, 0.294, 0.6898], [0.8299, 1.1149, 0.642]]]]