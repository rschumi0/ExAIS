import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Bat34371 = tf.keras.layers.Input(shape=([1, 2]))
in0Con71542 = tf.keras.layers.Input(shape=([2, 2]))
in0Cro38183 = tf.keras.layers.Input(shape=([4, 4]))

Bat34371 = keras.layers.BatchNormalization(axis=2, epsilon=0.7153981761086406,  name = 'Bat34371', )(in0Bat34371)
Zer35316 = keras.layers.ZeroPadding1D(padding=((1, 0)), name = 'Zer35316', )(Bat34371)
Con71542 = keras.layers.Concatenate(axis=2, name = 'Con71542', )([Zer35316,in0Con71542])
Cro38183 = keras.layers.Cropping1D(cropping=((1, 1)), name = 'Cro38183', )(in0Cro38183)
Mul16308 = keras.layers.Multiply(name = 'Mul16308', )([Con71542,Cro38183])
Con16888 = keras.layers.Conv1D(3, (2),strides=(1), padding='same', dilation_rate=(1), name = 'Con16888', )(Mul16308)
model = tf.keras.models.Model(inputs=[in0Bat34371,in0Con71542,in0Cro38183], outputs=Con16888)
w = model.get_layer('Bat34371').get_weights() 
w[0] = np.array([0.4642, 0.8916])
w[1] = np.array([0.9703, 0.3946])
w[2] = np.array([0.7602, 0.9725])
w[3] = np.array([0.7854, 0.7153])
model.get_layer('Bat34371').set_weights(w) 
w = model.get_layer('Con16888').get_weights() 
w[0] = np.array([[[0.0271, 0.5308, 0.2276], [0.8253, 0.8496, 0.1554], [0.3178, 0.5473, 0.9297], [0.8513, 0.6972, 0.8581]], [[0.5838, 0.8346, 0.4696], [0.335, 0.799, 0.7303], [0.8588, 0.8726, 0.1321], [0.8007, 0.1261, 0.4912]]])
w[1] = np.array([0, 0, 0])
model.get_layer('Con16888').set_weights(w) 
in0Bat34371 = tf.constant([[[1.7046, 1.6466]]])
in0Con71542 = tf.constant([[[0.9488, 0.1063], [0.1078, 0.7847]]])
in0Cro38183 = tf.constant([[[1.4413, 1.5544, 1.654, 1.6925], [1.0258, 1.5166, 1.7305, 1.9298], [1.8352, 1.8954, 1.5177, 1.0374], [1.2295, 1.9401, 1.3931, 1.8528]]])
print (np.array2string(model.predict([in0Bat34371,in0Con71542,in0Cro38183],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Con16888.png')

LBat34371 = batch_normalization_layer([[[1.7046, 1.6466]]], 2, 0.7153981761086406, [0.4642, 0.8916], [0.9703, 0.3946], [0.7602, 0.9725], [0.7854, 0.7153], Bat34371), 
LZer35316 = zero_padding1D_layer(Bat34371, 1, 0, Zer35316), 
LCon71542 = concatenate_layer([Zer35316,[[[0.9488, 0.1063], [0.1078, 0.7847]]]], 2, Con71542), 
LCro38183 = cropping1D_layer([[[1.4413, 1.5544, 1.654, 1.6925], [1.0258, 1.5166, 1.7305, 1.9298], [1.8352, 1.8954, 1.5177, 1.0374], [1.2295, 1.9401, 1.3931, 1.8528]]], 1, 1, Cro38183), 
LMul16308 = multiply_layer([Con71542,Cro38183], Mul16308), 
LCon16888 = conv1D_layer(Mul16308, 2,[[[0.0271, 0.5308, 0.2276], [0.8253, 0.8496, 0.1554], [0.3178, 0.5473, 0.9297], [0.8513, 0.6972, 0.8581]], [[0.5838, 0.8346, 0.4696], [0.335, 0.799, 0.7303], [0.8588, 0.8726, 0.1321], [0.8007, 0.1261, 0.4912]]],[0, 0, 0], 1, true, 1, Con16888), 
exec_layers([LBat34371,LZer35316,LCon71542,LCro38183,LMul16308,LCon16888],["Bat34371","Zer35316","Con71542","Cro38183","Mul16308","Con16888"],Con16888,"Con16888")

Actual (Unparsed): [[[3.4813193, 4.6798818, 4.5103369], [2.2143291, 3.3954784, 1.6696285]]]

Expected (Unparsed): [[[3.4813192998786477,4.679881796121561,4.510336845597777],[2.214329044664387,3.395478419236873,1.669628558680333]]]

Actual:   [[[3.4814, 4.6799, 4.5104], [2.2144, 3.3955, 1.6697]]]

Expected: [[[3.4814, 4.6799, 4.5104], [2.2144, 3.3955, 1.6697]]]