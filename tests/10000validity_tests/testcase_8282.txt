import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Dot14438 = tf.keras.layers.Input(shape=([3]))
in1Dot14438 = tf.keras.layers.Input(shape=([3]))
in0Con47541 = tf.keras.layers.Input(shape=([2, 2, 3]))
in0Lay18380 = tf.keras.layers.Input(shape=([2, 2, 4]))

Dot14438 = keras.layers.Dot(axes=(1, 1), name = 'Dot14438', )([in0Dot14438,in1Dot14438])
Res60478 = keras.layers.Reshape((1, 1), name = 'Res60478', )(Dot14438)
Res51902 = keras.layers.Reshape((1, 1, 1), name = 'Res51902', )(Res60478)
Zer63653 = keras.layers.ZeroPadding2D(padding=((1, 0), (1, 0)), name = 'Zer63653', )(Res51902)
Con47541 = keras.layers.Concatenate(axis=3, name = 'Con47541', )([Zer63653,in0Con47541])
Lay18380 = keras.layers.LayerNormalization(axis=2, epsilon=1.8764466375827047, name = 'Lay18380', )(in0Lay18380)
Mul67171 = keras.layers.Multiply(name = 'Mul67171', )([Con47541,Lay18380])
Thr44690 = keras.layers.ThresholdedReLU(theta=9.82304586143454, name = 'Thr44690', )(Mul67171)
model = tf.keras.models.Model(inputs=[in0Dot14438,in1Dot14438,in0Con47541,in0Lay18380], outputs=Thr44690)
in0Dot14438 = tf.constant([[0.627, 0.2345, 0.738]])
in1Dot14438 = tf.constant([[0.4242, 0.9078, 0.0217]])
in0Con47541 = tf.constant([[[[0.1836, 0.741, 0.9902], [0.7967, 0.1234, 0.6599]], [[0.4231, 0.4776, 0.5773], [0.6051, 0.2329, 0.2476]]]])
in0Lay18380 = tf.constant([[[[1.4301, 1.3522, 1.9401, 1.6815], [1.9607, 1.7026, 1.0426, 1.68]], [[1.5614, 1.6846, 1.171, 1.9617], [1.4287, 1.9521, 1.9383, 1.539]]]])
print (np.array2string(model.predict([in0Dot14438,in1Dot14438,in0Con47541,in0Lay18380],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Thr44690.png')

LDot14438 = dot_layer([[0.627, 0.2345, 0.738]], [[0.4242, 0.9078, 0.0217]], 1, 1, Dot14438), 
LRes60478 = reshape_layer(Dot14438, [1, 1], Res60478), 
LRes51902 = reshape_layer(Res60478, [1, 1, 1], Res51902), 
LZer63653 = zero_padding2D_layer(Res51902, 1, 0, 1, 0, Zer63653), 
LCon47541 = concatenate_layer([Zer63653,[[[[0.1836, 0.741, 0.9902], [0.7967, 0.1234, 0.6599]], [[0.4231, 0.4776, 0.5773], [0.6051, 0.2329, 0.2476]]]]], 3, Con47541), 
LLay18380 = layer_normalization_layer([[[[1.4301, 1.3522, 1.9401, 1.6815], [1.9607, 1.7026, 1.0426, 1.68]], [[1.5614, 1.6846, 1.171, 1.9617], [1.4287, 1.9521, 1.9383, 1.539]]]], 2, 1.8764466375827047, Lay18380), 
LMul67171 = multiply_layer([Con47541,Lay18380], Mul67171), 
LThr44690 = thresholded_relu_layer(Mul67171, 9.82304586143454, Thr44690), 
exec_layers([LDot14438,LRes60478,LRes51902,LZer63653,LCon47541,LLay18380,LMul67171,LThr44690],["Dot14438","Res60478","Res51902","Zer63653","Con47541","Lay18380","Mul67171","Thr44690"],Thr44690,"Thr44690")

Actual (Unparsed): [[[[-0.0000000, -0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, -0.0000000, -0.0000000]], [[0.0000000, -0.0000000, -0.0000000, 0.0000000], [-0.0000000, 0.0000000, 0.0000000, -0.0000000]]]]

Expected (Unparsed): [[[[0,0,0,0],[0,0,0,0]],[[0,0,0,0],[0,0,0,0]]]]

Actual:   [[[[-0, -0, 0, 0], [0, 0, -0, -0]], [[0, -0, -0, 0], [-0, 0, 0, -0]]]]

Expected: [[[[0, 0, 0, 0], [0, 0, 0, 0]], [[0, 0, 0, 0], [0, 0, 0, 0]]]]