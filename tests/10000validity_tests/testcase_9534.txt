import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Min56450 = tf.keras.layers.Input(shape=([1, 1, 2, 1]))
in1Min56450 = tf.keras.layers.Input(shape=([1, 1, 2, 1]))

Min56450 = keras.layers.Minimum(name = 'Min56450', )([in0Min56450,in1Min56450])
Res3868 = keras.layers.Reshape((1, 1, 2), name = 'Res3868', )(Min56450)
Glo86948 = keras.layers.GlobalAveragePooling2D(name = 'Glo86948', )(Res3868)
Res2600 = keras.layers.Reshape((2, 1), name = 'Res2600', )(Glo86948)
Res48043 = keras.layers.Reshape((2, 1, 1), name = 'Res48043', )(Res2600)
Res96234 = keras.layers.Reshape((2, 1, 1, 1), name = 'Res96234', )(Res48043)
Up_80233 = keras.layers.UpSampling3D(size=(1, 2, 2), name = 'Up_80233', )(Res96234)
model = tf.keras.models.Model(inputs=[in0Min56450,in1Min56450], outputs=Up_80233)
in0Min56450 = tf.constant([[[[[0.1068], [0.0224]]]]])
in1Min56450 = tf.constant([[[[[0.0099], [0.3972]]]]])
print (np.array2string(model.predict([in0Min56450,in1Min56450],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Up_80233.png')

LMin56450 = minimum_layer([[[[[[0.1068], [0.0224]]]]], [[[[[0.0099], [0.3972]]]]]], Min56450), 
LRes3868 = reshape_layer(Min56450, [1, 1, 2], Res3868), 
LGlo86948 = global_average_pooling2D_layer(Res3868, Glo86948), 
LRes2600 = reshape_layer(Glo86948, [2, 1], Res2600), 
LRes48043 = reshape_layer(Res2600, [2, 1, 1], Res48043), 
LRes96234 = reshape_layer(Res48043, [2, 1, 1, 1], Res96234), 
LUp_80233 = up_sampling3D_layer(Res96234, 1, 2, 2, Up_80233), 
exec_layers([LMin56450,LRes3868,LGlo86948,LRes2600,LRes48043,LRes96234,LUp_80233],["Min56450","Res3868","Glo86948","Res2600","Res48043","Res96234","Up_80233"],Up_80233,"Up_80233")

Actual (Unparsed): [[[[[0.0099000], [0.0099000]], [[0.0099000], [0.0099000]]], [[[0.0224000], [0.0224000]], [[0.0224000], [0.0224000]]]]]

Expected (Unparsed): [[[[[0.0099],[0.0099]],[[0.0099],[0.0099]]],[[[0.0224],[0.0224]],[[0.0224],[0.0224]]]]]

Actual:   [[[[[0.0099], [0.0099]], [[0.0099], [0.0099]]], [[[0.0224], [0.0224]], [[0.0224], [0.0224]]]]]

Expected: [[[[[0.0099], [0.0099]], [[0.0099], [0.0099]]], [[[0.0224], [0.0224]], [[0.0224], [0.0224]]]]]