import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Ave53211 = tf.keras.layers.Input(shape=([1, 1, 2, 2]))
in1Ave53211 = tf.keras.layers.Input(shape=([1, 1, 2, 2]))
in0Sub38969 = tf.keras.layers.Input(shape=([3, 3, 3]))
in1Sub38969 = tf.keras.layers.Input(shape=([3, 3, 3]))
in0Con7137 = tf.keras.layers.Input(shape=([3, 3, 1]))

Ave53211 = keras.layers.Average(name = 'Ave53211', )([in0Ave53211,in1Ave53211])
Res7429 = keras.layers.Reshape((1, 1, 4), name = 'Res7429', )(Ave53211)
Zer15024 = keras.layers.ZeroPadding2D(padding=((2, 0), (2, 0)), name = 'Zer15024', )(Res7429)
Sub38969 = keras.layers.Subtract(name = 'Sub38969', )([in0Sub38969,in1Sub38969])
Con7137 = keras.layers.Concatenate(axis=3, name = 'Con7137', )([Sub38969,in0Con7137])
Add25352 = keras.layers.Add(name = 'Add25352', )([Zer15024,Con7137])
Res41653 = keras.layers.Reshape((3, 3, 4, 1), name = 'Res41653', )(Add25352)
Zer36237 = keras.layers.ZeroPadding3D(padding=((1, 1), (1, 1), (1, 1)), name = 'Zer36237', )(Res41653)
Res92173 = keras.layers.Reshape((5, 5, 6), name = 'Res92173', )(Zer36237)
Res36374 = keras.layers.Reshape((5, 30), name = 'Res36374', )(Res92173)
LST8059 = keras.layers.LSTM(3,recurrent_activation='sigmoid', name = 'LST8059', )(Res36374)
model = tf.keras.models.Model(inputs=[in0Ave53211,in1Ave53211,in0Sub38969,in1Sub38969,in0Con7137], outputs=LST8059)
w = model.get_layer('LST8059').get_weights() 
w[0] = np.array([[5, 4, 1, 1, 5, 10, 5, 9, 2, 3, 2, 8], [9, 4, 5, 4, 2, 9, 8, 5, 2, 2, 1, 9], [10, 5, 2, 8, 1, 6, 9, 9, 7, 5, 2, 7], [3, 8, 10, 4, 8, 9, 9, 9, 5, 10, 2, 3], [5, 9, 4, 7, 6, 10, 6, 4, 2, 9, 5, 1], [4, 5, 9, 3, 6, 5, 3, 2, 7, 5, 3, 9], [7, 10, 2, 4, 3, 6, 3, 6, 5, 3, 8, 3], [9, 1, 4, 2, 10, 2, 4, 1, 9, 7, 1, 5], [4, 8, 5, 8, 6, 1, 2, 6, 4, 7, 6, 8], [6, 5, 6, 9, 10, 10, 1, 6, 4, 10, 7, 8], [3, 10, 8, 9, 5, 5, 5, 4, 7, 5, 6, 9], [8, 9, 2, 4, 9, 6, 3, 4, 2, 10, 7, 3], [2, 2, 2, 5, 2, 10, 8, 2, 1, 2, 10, 4], [1, 4, 5, 2, 9, 5, 3, 10, 2, 2, 1, 9], [10, 2, 3, 6, 2, 8, 1, 4, 7, 6, 6, 4], [7, 3, 3, 10, 8, 4, 10, 10, 8, 6, 8, 9], [8, 10, 9, 8, 9, 3, 3, 1, 10, 7, 6, 10], [3, 10, 10, 10, 4, 8, 1, 1, 8, 7, 4, 4], [1, 1, 3, 10, 4, 7, 6, 3, 3, 4, 4, 7], [9, 9, 10, 1, 7, 2, 2, 9, 9, 2, 2, 4], [2, 10, 2, 6, 4, 3, 1, 7, 2, 7, 6, 6], [3, 4, 7, 7, 1, 1, 1, 5, 9, 9, 2, 2], [7, 7, 10, 6, 7, 3, 5, 4, 4, 10, 6, 5], [9, 1, 2, 4, 9, 9, 6, 10, 10, 6, 7, 10], [10, 8, 4, 9, 6, 10, 6, 6, 1, 5, 6, 9], [6, 7, 3, 4, 6, 8, 4, 2, 4, 5, 8, 7], [7, 3, 6, 3, 4, 8, 2, 8, 8, 9, 6, 10], [1, 3, 2, 5, 1, 7, 9, 10, 8, 9, 8, 10], [4, 5, 1, 8, 2, 6, 7, 1, 2, 4, 10, 10], [8, 3, 3, 1, 9, 1, 9, 2, 6, 3, 10, 8]])
w[1] = np.array([[3, 7, 6, 10, 6, 5, 3, 4, 2, 3, 1, 10], [9, 6, 5, 4, 10, 3, 9, 8, 7, 5, 10, 2], [7, 4, 7, 4, 2, 7, 8, 3, 5, 1, 4, 2]])
w[2] = np.array([3, 2, 2, 6, 5, 5, 1, 3, 4, 2, 6, 6])
model.get_layer('LST8059').set_weights(w) 
in0Ave53211 = tf.constant([[[[[0.7917, 0.3552], [0.5702, 0.8335]]]]])
in1Ave53211 = tf.constant([[[[[0.5944, 0.0883], [0.9442, 0.9211]]]]])
in0Sub38969 = tf.constant([[[[0.8246, 0.7553, 0.8793], [0.179, 0.1762, 0.0701], [0.874, 0.5, 0.4115]], [[0.0421, 0.9559, 0.7608], [0.8667, 0.0108, 0.0521], [0.7354, 0.4075, 0.4817]], [[0.5254, 0.138, 0.6953], [0.9818, 0.8795, 0.0809], [0.0395, 0.2347, 0.438]]]])
in1Sub38969 = tf.constant([[[[0.3295, 0.5573, 0.3134], [0.1452, 0.6113, 0.8434], [0.0715, 0.4988, 0.8928]], [[0.8549, 0.076, 0.0273], [0.9776, 0.2621, 0.4706], [0.6561, 0.9975, 0.0844]], [[0.6797, 0.7655, 0.3717], [0.0339, 0.6354, 0.7388], [0.5879, 0.6217, 0.2534]]]])
in0Con7137 = tf.constant([[[[0.4834], [0.6729], [0.647]], [[0.9389], [0.6651], [0.8854]], [[0.3749], [0.5883], [0.5533]]]])
print (np.array2string(model.predict([in0Ave53211,in1Ave53211,in0Sub38969,in1Sub38969,in0Con7137],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='LST8059.png')

LAve53211 = average_layer([[[[[[0.7917, 0.3552], [0.5702, 0.8335]]]]], [[[[[0.5944, 0.0883], [0.9442, 0.9211]]]]]], Ave53211), 
LRes7429 = reshape_layer(Ave53211, [1, 1, 4], Res7429), 
LZer15024 = zero_padding2D_layer(Res7429, 2, 0, 2, 0, Zer15024), 
LSub38969 = subtract_layer([[[[0.8246, 0.7553, 0.8793], [0.179, 0.1762, 0.0701], [0.874, 0.5, 0.4115]], [[0.0421, 0.9559, 0.7608], [0.8667, 0.0108, 0.0521], [0.7354, 0.4075, 0.4817]], [[0.5254, 0.138, 0.6953], [0.9818, 0.8795, 0.0809], [0.0395, 0.2347, 0.438]]]], [[[[0.3295, 0.5573, 0.3134], [0.1452, 0.6113, 0.8434], [0.0715, 0.4988, 0.8928]], [[0.8549, 0.076, 0.0273], [0.9776, 0.2621, 0.4706], [0.6561, 0.9975, 0.0844]], [[0.6797, 0.7655, 0.3717], [0.0339, 0.6354, 0.7388], [0.5879, 0.6217, 0.2534]]]], Sub38969), 
LCon7137 = concatenate_layer([Sub38969,[[[[0.4834], [0.6729], [0.647]], [[0.9389], [0.6651], [0.8854]], [[0.3749], [0.5883], [0.5533]]]]], 3, Con7137), 
LAdd25352 = add_layer([Zer15024,Con7137], Add25352), 
LRes41653 = reshape_layer(Add25352, [3, 3, 4, 1], Res41653), 
LZer36237 = zero_padding3D_layer(Res41653, 1, 1, 1, 1, 1, 1, Zer36237), 
LRes92173 = reshape_layer(Zer36237, [5, 5, 6], Res92173), 
LRes36374 = reshape_layer(Res92173, [5, 30], Res36374), 
LLST8059 = lstm_layer(Res36374,[[5, 4, 1, 1, 5, 10, 5, 9, 2, 3, 2, 8], [9, 4, 5, 4, 2, 9, 8, 5, 2, 2, 1, 9], [10, 5, 2, 8, 1, 6, 9, 9, 7, 5, 2, 7], [3, 8, 10, 4, 8, 9, 9, 9, 5, 10, 2, 3], [5, 9, 4, 7, 6, 10, 6, 4, 2, 9, 5, 1], [4, 5, 9, 3, 6, 5, 3, 2, 7, 5, 3, 9], [7, 10, 2, 4, 3, 6, 3, 6, 5, 3, 8, 3], [9, 1, 4, 2, 10, 2, 4, 1, 9, 7, 1, 5], [4, 8, 5, 8, 6, 1, 2, 6, 4, 7, 6, 8], [6, 5, 6, 9, 10, 10, 1, 6, 4, 10, 7, 8], [3, 10, 8, 9, 5, 5, 5, 4, 7, 5, 6, 9], [8, 9, 2, 4, 9, 6, 3, 4, 2, 10, 7, 3], [2, 2, 2, 5, 2, 10, 8, 2, 1, 2, 10, 4], [1, 4, 5, 2, 9, 5, 3, 10, 2, 2, 1, 9], [10, 2, 3, 6, 2, 8, 1, 4, 7, 6, 6, 4], [7, 3, 3, 10, 8, 4, 10, 10, 8, 6, 8, 9], [8, 10, 9, 8, 9, 3, 3, 1, 10, 7, 6, 10], [3, 10, 10, 10, 4, 8, 1, 1, 8, 7, 4, 4], [1, 1, 3, 10, 4, 7, 6, 3, 3, 4, 4, 7], [9, 9, 10, 1, 7, 2, 2, 9, 9, 2, 2, 4], [2, 10, 2, 6, 4, 3, 1, 7, 2, 7, 6, 6], [3, 4, 7, 7, 1, 1, 1, 5, 9, 9, 2, 2], [7, 7, 10, 6, 7, 3, 5, 4, 4, 10, 6, 5], [9, 1, 2, 4, 9, 9, 6, 10, 10, 6, 7, 10], [10, 8, 4, 9, 6, 10, 6, 6, 1, 5, 6, 9], [6, 7, 3, 4, 6, 8, 4, 2, 4, 5, 8, 7], [7, 3, 6, 3, 4, 8, 2, 8, 8, 9, 6, 10], [1, 3, 2, 5, 1, 7, 9, 10, 8, 9, 8, 10], [4, 5, 1, 8, 2, 6, 7, 1, 2, 4, 10, 10], [8, 3, 3, 1, 9, 1, 9, 2, 6, 3, 10, 8]],[[3, 7, 6, 10, 6, 5, 3, 4, 2, 3, 1, 10], [9, 6, 5, 4, 10, 3, 9, 8, 7, 5, 10, 2], [7, 4, 7, 4, 2, 7, 8, 3, 5, 1, 4, 2]],[3, 2, 2, 6, 5, 5, 1, 3, 4, 2, 6, 6], LST8059), 
exec_layers([LAve53211,LRes7429,LZer15024,LSub38969,LCon7137,LAdd25352,LRes41653,LZer36237,LRes92173,LRes36374,LLST8059],["Ave53211","Res7429","Zer15024","Sub38969","Con7137","Add25352","Res41653","Zer36237","Res92173","Res36374","LST8059"],LST8059,"LST8059")

Actual (Unparsed): [[0.9998259, 0.9998838, 0.9998846]]

Expected (Unparsed): [[0.9998259391270181,0.9998837522609787,0.9998846229398373]]

Actual:   [[0.9999, 0.9999, 0.9999]]

Expected: [[0.9999, 0.9999, 0.9999]]