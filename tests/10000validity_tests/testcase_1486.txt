import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Lay10615 = tf.keras.layers.Input(shape=([2, 1]))
in0Con14846 = tf.keras.layers.Input(shape=([6, 1, 1]))
in0Fla68030 = tf.keras.layers.Input(shape=([3, 2, 1]))
in0Con43796 = tf.keras.layers.Input(shape=([6, 18]))
in0Zer12350 = tf.keras.layers.Input(shape=([3, 3, 4]))
in0Mul76606 = tf.keras.layers.Input(shape=([1, 2]))
in1Mul76606 = tf.keras.layers.Input(shape=([1, 2]))
in0Con32460 = tf.keras.layers.Input(shape=([5, 18]))

Lay10615 = keras.layers.LayerNormalization(axis=2, epsilon=2.1445377803017527, name = 'Lay10615', )(in0Lay10615)
Res8212 = keras.layers.Reshape((2, 1, 1), name = 'Res8212', )(Lay10615)
Zer78928 = keras.layers.ZeroPadding2D(padding=((4, 0), (0, 0)), name = 'Zer78928', )(Res8212)
Con14846 = keras.layers.Concatenate(axis=3, name = 'Con14846', )([Zer78928,in0Con14846])
Fla68030 = keras.layers.Flatten(name = 'Fla68030', )(in0Fla68030)
Res36806 = keras.layers.Reshape((6, 1), name = 'Res36806', )(Fla68030)
Res10138 = keras.layers.Reshape((6, 1, 1), name = 'Res10138', )(Res36806)
Con82550 = keras.layers.Conv2DTranspose(2, (1, 1),strides=(1, 1), padding='same', name = 'Con82550', )(Res10138)
Sub89407 = keras.layers.Subtract(name = 'Sub89407', )([Con14846,Con82550])
Res11524 = keras.layers.Reshape((6, 2), name = 'Res11524', )(Sub89407)
Con43796 = keras.layers.Concatenate(axis=2, name = 'Con43796', )([Res11524,in0Con43796])
Zer12350 = keras.layers.ZeroPadding2D(padding=((1, 1), (1, 1)), name = 'Zer12350', )(in0Zer12350)
Res57850 = keras.layers.Reshape((5, 20), name = 'Res57850', )(Zer12350)
Mul76606 = keras.layers.Multiply(name = 'Mul76606', )([in0Mul76606,in1Mul76606])
Zer95505 = keras.layers.ZeroPadding1D(padding=((4, 0)), name = 'Zer95505', )(Mul76606)
Con32460 = keras.layers.Concatenate(axis=2, name = 'Con32460', )([Zer95505,in0Con32460])
Add44618 = keras.layers.Add(name = 'Add44618', )([Res57850,Con32460])
Zer36496 = keras.layers.ZeroPadding1D(padding=((1, 0)), name = 'Zer36496', )(Add44618)
Max38643 = keras.layers.Maximum(name = 'Max38643', )([Con43796,Zer36496])
model = tf.keras.models.Model(inputs=[in0Lay10615,in0Con14846,in0Fla68030,in0Con43796,in0Zer12350,in0Mul76606,in1Mul76606,in0Con32460], outputs=Max38643)
w = model.get_layer('Con82550').get_weights() 
w[0] = np.array([[[[0.5016], [0.7692]]]])
w[1] = np.array([0, 0])
model.get_layer('Con82550').set_weights(w) 
in0Lay10615 = tf.constant([[[1.1502], [1.3449]]])
in0Con14846 = tf.constant([[[[0.5619]], [[0.3112]], [[0.0402]], [[0.3187]], [[0.4862]], [[0.7066]]]])
in0Fla68030 = tf.constant([[[[1.5984], [1.8243]], [[1.4389], [1.1623]], [[1.0019], [1.9346]]]])
in0Con43796 = tf.constant([[[0.0175, 0.4878, 0.5186, 0.6071, 0.7521, 0.8165, 0.0949, 0.843, 0.2226, 0.2677, 0.6038, 0.4822, 0.6925, 0.6724, 0.8757, 0.021, 0.7212, 0.9663], [0.4854, 0.9649, 0.407, 0.9787, 0.7935, 0.2161, 0.8094, 0.2205, 0.7318, 0.6237, 0.059, 0.0257, 0.5355, 0.9498, 0.992, 0.4536, 0.9673, 0.2001], [0.7592, 0.9502, 0.7025, 0.9945, 0.7463, 0.881, 0.4567, 0.4139, 0.3209, 0.7003, 0.12, 0.5484, 0.3712, 0.701, 0.6363, 0.7912, 0.3376, 0.0005], [0.6138, 0.7805, 0.4584, 0.6636, 0.6885, 0.7694, 0.243, 0.6345, 0.4711, 0.1224, 0.7696, 0.4585, 0.5087, 0.5834, 0.2639, 0.6104, 0.0617, 0.9361], [0.5543, 0.6122, 0.6608, 0.6862, 0.4258, 0.0266, 0.3405, 0.4385, 0.5958, 0.8385, 0.1705, 0.7078, 0.0217, 0.7033, 0.2051, 0.0095, 0.5175, 0.0305], [0.2524, 0.2075, 0.2029, 0.8967, 0.9304, 0.2629, 0.1374, 0.3387, 0.3201, 0.7219, 0.605, 0.6624, 0.1528, 0.5107, 0.9033, 0.0235, 0.8755, 0.8634]]])
in0Zer12350 = tf.constant([[[[1.3318, 1.6622, 1.6918, 1.3055], [1.5879, 1.7219, 1.8481, 1.7397], [1.9158, 1.2789, 1.3125, 1.0633]], [[1.1124, 1.5576, 1.9042, 1.28], [1.6686, 1.1221, 1.0814, 1.6185], [1.1979, 1.6931, 1.24, 1.5336]], [[1.201, 1.2608, 1.2942, 1.6463], [1.4851, 1.5349, 1.6989, 1.9431], [1.0242, 1.1825, 1.7408, 1.292]]]])
in0Mul76606 = tf.constant([[[0.1707, 0.6206]]])
in1Mul76606 = tf.constant([[[0.7525, 0.4801]]])
in0Con32460 = tf.constant([[[0.2981, 0.1636, 0.0631, 0.9975, 0.9389, 0.5977, 0.8957, 0.6123, 0.1503, 0.3151, 0.7139, 0.8406, 0.6351, 0.3684, 0.2093, 0.1226, 0.1797, 0.601], [0.8139, 0.189, 0.7003, 0.4354, 0.8778, 0.7906, 0.1309, 0.6264, 0.8208, 0.3146, 0.7802, 0.0143, 0.5958, 0.4737, 0.9952, 0.4688, 0.2227, 0.7433], [0.8479, 0.2847, 0.7236, 0.1194, 0.0843, 0.2634, 0.5254, 0.0684, 0.7619, 0.5922, 0.2803, 0.2513, 0.8436, 0.4237, 0.1004, 0.716, 0.5103, 0.7456], [0.4023, 0.7755, 0.1107, 0.7327, 0.9142, 0.7121, 0.4738, 0.2761, 0.9104, 0.7848, 0.7777, 0.7968, 0.4074, 0.7537, 0.2886, 0.7687, 0.8807, 0.283], [0.0633, 0.5968, 0.0435, 0.1325, 0.1424, 0.631, 0.3643, 0.0094, 0.8526, 0.1272, 0.2975, 0.3142, 0.584, 0.9125, 0.6486, 0.7851, 0.8102, 0.3608]]])
print (np.array2string(model.predict([in0Lay10615,in0Con14846,in0Fla68030,in0Con43796,in0Zer12350,in0Mul76606,in1Mul76606,in0Con32460],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Max38643.png')

LLay10615 = layer_normalization_layer([[[1.1502], [1.3449]]], 2, 2.1445377803017527, Lay10615), 
LRes8212 = reshape_layer(Lay10615, [2, 1, 1], Res8212), 
LZer78928 = zero_padding2D_layer(Res8212, 4, 0, 0, 0, Zer78928), 
LCon14846 = concatenate_layer([Zer78928,[[[[0.5619]], [[0.3112]], [[0.0402]], [[0.3187]], [[0.4862]], [[0.7066]]]]], 3, Con14846), 
LFla68030 = flatten_layer([[[[1.5984], [1.8243]], [[1.4389], [1.1623]], [[1.0019], [1.9346]]]], Fla68030), 
LRes36806 = reshape_layer(Fla68030, [6, 1], Res36806), 
LRes10138 = reshape_layer(Res36806, [6, 1, 1], Res10138), 
LCon82550 = conv2D_transpose_layer(Res10138, 1, 1,[[[[0.5016], [0.7692]]]],[0, 0], 1, 1, true, Con82550), 
LSub89407 = subtract_layer(Con14846,Con82550, Sub89407), 
LRes11524 = reshape_layer(Sub89407, [6, 2], Res11524), 
LCon43796 = concatenate_layer([Res11524,[[[0.0175, 0.4878, 0.5186, 0.6071, 0.7521, 0.8165, 0.0949, 0.843, 0.2226, 0.2677, 0.6038, 0.4822, 0.6925, 0.6724, 0.8757, 0.021, 0.7212, 0.9663], [0.4854, 0.9649, 0.407, 0.9787, 0.7935, 0.2161, 0.8094, 0.2205, 0.7318, 0.6237, 0.059, 0.0257, 0.5355, 0.9498, 0.992, 0.4536, 0.9673, 0.2001], [0.7592, 0.9502, 0.7025, 0.9945, 0.7463, 0.881, 0.4567, 0.4139, 0.3209, 0.7003, 0.12, 0.5484, 0.3712, 0.701, 0.6363, 0.7912, 0.3376, 0.0005], [0.6138, 0.7805, 0.4584, 0.6636, 0.6885, 0.7694, 0.243, 0.6345, 0.4711, 0.1224, 0.7696, 0.4585, 0.5087, 0.5834, 0.2639, 0.6104, 0.0617, 0.9361], [0.5543, 0.6122, 0.6608, 0.6862, 0.4258, 0.0266, 0.3405, 0.4385, 0.5958, 0.8385, 0.1705, 0.7078, 0.0217, 0.7033, 0.2051, 0.0095, 0.5175, 0.0305], [0.2524, 0.2075, 0.2029, 0.8967, 0.9304, 0.2629, 0.1374, 0.3387, 0.3201, 0.7219, 0.605, 0.6624, 0.1528, 0.5107, 0.9033, 0.0235, 0.8755, 0.8634]]]], 2, Con43796), 
LZer12350 = zero_padding2D_layer([[[[1.3318, 1.6622, 1.6918, 1.3055], [1.5879, 1.7219, 1.8481, 1.7397], [1.9158, 1.2789, 1.3125, 1.0633]], [[1.1124, 1.5576, 1.9042, 1.28], [1.6686, 1.1221, 1.0814, 1.6185], [1.1979, 1.6931, 1.24, 1.5336]], [[1.201, 1.2608, 1.2942, 1.6463], [1.4851, 1.5349, 1.6989, 1.9431], [1.0242, 1.1825, 1.7408, 1.292]]]], 1, 1, 1, 1, Zer12350), 
LRes57850 = reshape_layer(Zer12350, [5, 20], Res57850), 
LMul76606 = multiply_layer([[[[0.1707, 0.6206]]], [[[0.7525, 0.4801]]]], Mul76606), 
LZer95505 = zero_padding1D_layer(Mul76606, 4, 0, Zer95505), 
LCon32460 = concatenate_layer([Zer95505,[[[0.2981, 0.1636, 0.0631, 0.9975, 0.9389, 0.5977, 0.8957, 0.6123, 0.1503, 0.3151, 0.7139, 0.8406, 0.6351, 0.3684, 0.2093, 0.1226, 0.1797, 0.601], [0.8139, 0.189, 0.7003, 0.4354, 0.8778, 0.7906, 0.1309, 0.6264, 0.8208, 0.3146, 0.7802, 0.0143, 0.5958, 0.4737, 0.9952, 0.4688, 0.2227, 0.7433], [0.8479, 0.2847, 0.7236, 0.1194, 0.0843, 0.2634, 0.5254, 0.0684, 0.7619, 0.5922, 0.2803, 0.2513, 0.8436, 0.4237, 0.1004, 0.716, 0.5103, 0.7456], [0.4023, 0.7755, 0.1107, 0.7327, 0.9142, 0.7121, 0.4738, 0.2761, 0.9104, 0.7848, 0.7777, 0.7968, 0.4074, 0.7537, 0.2886, 0.7687, 0.8807, 0.283], [0.0633, 0.5968, 0.0435, 0.1325, 0.1424, 0.631, 0.3643, 0.0094, 0.8526, 0.1272, 0.2975, 0.3142, 0.584, 0.9125, 0.6486, 0.7851, 0.8102, 0.3608]]]], 2, Con32460), 
LAdd44618 = add_layer([Res57850,Con32460], Add44618), 
LZer36496 = zero_padding1D_layer(Add44618, 1, 0, Zer36496), 
LMax38643 = maximum_layer([Con43796,Zer36496], Max38643), 
exec_layers([LLay10615,LRes8212,LZer78928,LCon14846,LFla68030,LRes36806,LRes10138,LCon82550,LSub89407,LRes11524,LCon43796,LZer12350,LRes57850,LMul76606,LZer95505,LCon32460,LAdd44618,LZer36496,LMax38643],["Lay10615","Res8212","Zer78928","Con14846","Fla68030","Res36806","Res10138","Con82550","Sub89407","Res11524","Con43796","Zer12350","Res57850","Mul76606","Zer95505","Con32460","Add44618","Zer36496","Max38643"],Max38643,"Max38643")

Actual (Unparsed): [[[0.0000000, 0.0000000, 0.0175000, 0.4878000, 0.5186000, 0.6071000, 0.7521000, 0.8165000, 0.0949000, 0.8430000, 0.2226000, 0.2677000, 0.6038000, 0.4822000, 0.6925000, 0.6724000, 0.8757000, 0.0210000, 0.7212000, 0.9663000], [0.0000000, 0.0000000, 0.4854000, 0.9649000, 0.4070000, 0.9975000, 0.9389000, 0.5977000, 0.8957000, 0.6123000, 0.7318000, 0.6237000, 0.7139000, 0.8406000, 0.6351000, 0.9498000, 0.9920000, 0.4536000, 0.9673000, 0.6010000], [0.0000000, 0.0000000, 0.8139000, 0.9502000, 2.0321000, 2.0976000, 2.5696000, 2.0961000, 1.7188000, 2.3483000, 2.6689000, 2.0543000, 2.6960000, 1.2932000, 1.9083000, 1.5370000, 0.9952000, 0.7912000, 0.3376000, 0.7433000], [0.0000000, 0.0000000, 0.8479000, 0.7805000, 1.8360000, 1.6770000, 1.9885000, 1.5434000, 2.1939999, 1.1905000, 1.8433000, 2.2107000, 1.4782000, 1.9444000, 2.0836000, 1.9573000, 0.2639000, 0.7160000, 0.5103000, 0.9361000], [0.0000000, 0.0000000, 0.5543000, 0.7755000, 1.3117000, 1.9935000, 2.2084000, 2.3584000, 1.9589000, 1.8110000, 2.6093000, 2.7279000, 1.8019000, 1.9793000, 2.1482000, 2.0457001, 0.2886000, 0.7687000, 0.8807000, 0.2830000], [0.1284517, 0.2979501, 0.2524000, 0.5968000, 0.2029000, 0.8967000, 0.9304000, 0.6310000, 0.3643000, 0.3387000, 0.8526000, 0.7219000, 0.6050000, 0.6624000, 0.5840000, 0.9125000, 0.9033000, 0.7851000, 0.8755000, 0.8634000]]]

Expected (Unparsed): [[[0,0,0.0175,0.4878,0.5186,0.6071,0.7521,0.8165,0.0949,0.843,0.2226,0.2677,0.6038,0.4822,0.6925,0.6724,0.8757,0.021,0.7212,0.9663],[0,0,0.4854,0.9649,0.407,0.9975,0.9389,0.5977,0.8957,0.6123,0.7318,0.6237,0.7139,0.8406,0.6351,0.9498,0.992,0.4536,0.9673,0.601],[0,0,0.8139,0.9502,2.0321000000000002,2.0976,2.5696,2.0961,1.7188,2.3483,2.6689,2.0543,2.6959999999999997,1.2932,1.9083,1.537,0.9952,0.7912,0.3376,0.7433],[0,0,0.8479,0.7805,1.836,1.677,1.9885,1.5434,2.194,1.1905000000000001,1.8433,2.2107,1.4782,1.9444000000000001,2.0836,1.9573,0.2639,0.716,0.5103,0.9361],[0,0,0.5543,0.7755,1.3117,1.9935,2.2084,2.3584,1.9589,1.811,2.6093,2.7279,1.8018999999999998,1.9793,2.1482,2.0457,0.2886,0.7687,0.8807,0.283],[0.12845174999999998,0.29795006,0.2524,0.5968,0.2029,0.8967,0.9304,0.631,0.3643,0.3387,0.8526,0.7219,0.605,0.6624,0.584,0.9125,0.9033,0.7851,0.8755,0.8634]]]

Actual:   [[[0, 0, 0.0175, 0.4878, 0.5186, 0.6071, 0.7521, 0.8165, 0.0949, 0.843, 0.2226, 0.2677, 0.6038, 0.4822, 0.6925, 0.6724, 0.8757, 0.021, 0.7212, 0.9663], [0, 0, 0.4854, 0.9649, 0.407, 0.9975, 0.9389, 0.5977, 0.8957, 0.6123, 0.7318, 0.6237, 0.7139, 0.8406, 0.6351, 0.9498, 0.992, 0.4536, 0.9673, 0.601], [0, 0, 0.8139, 0.9502, 2.0321, 2.0976, 2.5696, 2.0961, 1.7188, 2.3483, 2.6689, 2.0543, 2.696, 1.2932, 1.9083, 1.537, 0.9952, 0.7912, 0.3376, 0.7433], [0, 0, 0.8479, 0.7805, 1.836, 1.677, 1.9885, 1.5434, 2.194, 1.1905, 1.8433, 2.2107, 1.4782, 1.9444, 2.0836, 1.9573, 0.2639, 0.716, 0.5103, 0.9361], [0, 0, 0.5543, 0.7755, 1.3117, 1.9935, 2.2084, 2.3584, 1.9589, 1.811, 2.6093, 2.7279, 1.8019, 1.9793, 2.1482, 2.0458, 0.2886, 0.7687, 0.8807, 0.283], [0.1285, 0.298, 0.2524, 0.5968, 0.2029, 0.8967, 0.9304, 0.631, 0.3643, 0.3387, 0.8526, 0.7219, 0.605, 0.6624, 0.584, 0.9125, 0.9033, 0.7851, 0.8755, 0.8634]]]

Expected: [[[0, 0, 0.0175, 0.4878, 0.5186, 0.6071, 0.7521, 0.8165, 0.0949, 0.843, 0.2226, 0.2677, 0.6038, 0.4822, 0.6925, 0.6724, 0.8757, 0.021, 0.7212, 0.9663], [0, 0, 0.4854, 0.9649, 0.407, 0.9975, 0.9389, 0.5977, 0.8957, 0.6123, 0.7318, 0.6237, 0.7139, 0.8406, 0.6351, 0.9498, 0.992, 0.4536, 0.9673, 0.601], [0, 0, 0.8139, 0.9502, 2.0322, 2.0976, 2.5696, 2.0961, 1.7188, 2.3483, 2.6689, 2.0543, 2.696, 1.2932, 1.9083, 1.537, 0.9952, 0.7912, 0.3376, 0.7433], [0, 0, 0.8479, 0.7805, 1.836, 1.677, 1.9885, 1.5434, 2.194, 1.1906, 1.8433, 2.2107, 1.4782, 1.9445, 2.0836, 1.9573, 0.2639, 0.716, 0.5103, 0.9361], [0, 0, 0.5543, 0.7755, 1.3117, 1.9935, 2.2084, 2.3584, 1.9589, 1.811, 2.6093, 2.7279, 1.8019, 1.9793, 2.1482, 2.0457, 0.2886, 0.7687, 0.8807, 0.283], [0.1285, 0.298, 0.2524, 0.5968, 0.2029, 0.8967, 0.9304, 0.631, 0.3643, 0.3387, 0.8526, 0.7219, 0.605, 0.6624, 0.584, 0.9125, 0.9033, 0.7851, 0.8755, 0.8634]]]