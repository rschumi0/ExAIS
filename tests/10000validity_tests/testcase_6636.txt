import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Ave98935 = tf.keras.layers.Input(shape=([1, 2]))
in1Ave98935 = tf.keras.layers.Input(shape=([1, 2]))
in0Glo11681 = tf.keras.layers.Input(shape=([2, 2, 1, 2]))

Ave98935 = keras.layers.Average(name = 'Ave98935', )([in0Ave98935,in1Ave98935])
Fla21417 = keras.layers.Flatten(name = 'Fla21417', )(Ave98935)
Glo11681 = keras.layers.GlobalAveragePooling3D(name = 'Glo11681', )(in0Glo11681)
Min56889 = keras.layers.Minimum(name = 'Min56889', )([Fla21417,Glo11681])
model = tf.keras.models.Model(inputs=[in0Ave98935,in1Ave98935,in0Glo11681], outputs=Min56889)
in0Ave98935 = tf.constant([[[0.3165, 0.7797]]])
in1Ave98935 = tf.constant([[[0.4822, 0.5721]]])
in0Glo11681 = tf.constant([[[[[1.5195, 1.9409]], [[1.4121, 1.2656]]], [[[1.0243, 1.6668]], [[1.7533, 1.3294]]]]])
print (np.array2string(model.predict([in0Ave98935,in1Ave98935,in0Glo11681],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Min56889.png')

LAve98935 = average_layer([[[[0.3165, 0.7797]]], [[[0.4822, 0.5721]]]], Ave98935), 
LFla21417 = flatten_layer(Ave98935, Fla21417), 
LGlo11681 = global_average_pooling3D_layer([[[[[1.5195, 1.9409]], [[1.4121, 1.2656]]], [[[1.0243, 1.6668]], [[1.7533, 1.3294]]]]], Glo11681), 
LMin56889 = minimum_layer([Fla21417,Glo11681], Min56889), 
exec_layers([LAve98935,LFla21417,LGlo11681,LMin56889],["Ave98935","Fla21417","Glo11681","Min56889"],Min56889,"Min56889")

Actual (Unparsed): [[0.3993500, 0.6759000]]

Expected (Unparsed): [[0.39935,0.6759]]

Actual:   [[0.3994, 0.6759]]

Expected: [[0.3994, 0.6759]]