import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Con11945 = tf.keras.layers.Input(shape=([1, 1, 1, 1]))

Con11945 = keras.layers.Conv3D(3, (1, 1, 1),strides=(1, 1, 1), padding='valid', dilation_rate=(1, 1, 1), name = 'Con11945', )(in0Con11945)
Res54969 = keras.layers.Reshape((1, 1, 3), name = 'Res54969', )(Con11945)
Res18792 = keras.layers.Reshape((1, 3), name = 'Res18792', )(Res54969)
Sim85867 = keras.layers.SimpleRNN(1,name = 'Sim85867', )(Res18792)
ELU20670 = keras.layers.ELU(alpha=3.0859300347469887, name = 'ELU20670', )(Sim85867)
model = tf.keras.models.Model(inputs=[in0Con11945], outputs=ELU20670)
w = model.get_layer('Con11945').get_weights() 
w[0] = np.array([[[[[0.449, 0.827, 0.5461]]]]])
w[1] = np.array([0, 0, 0])
model.get_layer('Con11945').set_weights(w) 
w = model.get_layer('Sim85867').get_weights() 
w[0] = np.array([[10], [3], [7]])
w[1] = np.array([[5]])
w[2] = np.array([6])
model.get_layer('Sim85867').set_weights(w) 
in0Con11945 = tf.constant([[[[[0.4574]]]]])
print (np.array2string(model.predict([in0Con11945],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='ELU20670.png')

LCon11945 = conv3D_layer([[[[[0.4574]]]]], 1, 1, 1,[[[[[0.449, 0.827, 0.5461]]]]],[0, 0, 0], 1, 1, 1, false, 1, 1, 1, Con11945), 
LRes54969 = reshape_layer(Con11945, [1, 1, 3], Res54969), 
LRes18792 = reshape_layer(Res54969, [1, 3], Res18792), 
LSim85867 = simple_rnn_layer(Res18792,[[10], [3], [7]],[[5]],[6], Sim85867), 
LELU20670 = elu_layer(Sim85867, 3.0859300347469887, ELU20670), 
exec_layers([LCon11945,LRes54969,LRes18792,LSim85867,LELU20670],["Con11945","Res54969","Res18792","Sim85867","ELU20670"],ELU20670,"ELU20670")

Actual (Unparsed): [[1.0000000]]

Expected (Unparsed): [[0.9999999993672398]]

Actual:   [[1]]

Expected: [[1]]