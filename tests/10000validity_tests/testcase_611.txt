import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0ELU36641 = tf.keras.layers.Input(shape=([2, 1, 1, 1]))

ELU36641 = keras.layers.ELU(alpha=9.537850742135987, name = 'ELU36641', input_shape=(2, 1, 1, 1))(in0ELU36641)
Res99403 = keras.layers.Reshape((2, 1, 1), name = 'Res99403', )(ELU36641)
Res99123 = keras.layers.Reshape((2, 1), name = 'Res99123', )(Res99403)
Zer7964 = keras.layers.ZeroPadding1D(padding=((1, 1)), name = 'Zer7964', )(Res99123)
model = tf.keras.models.Model(inputs=[in0ELU36641], outputs=Zer7964)
in0ELU36641 = tf.constant([[[[[0.6092]]], [[[0.6805]]]]])
print (np.array2string(model.predict([in0ELU36641],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Zer7964.png')

LELU36641 = elu_layer([[[[[0.6092]]], [[[0.6805]]]]], 9.537850742135987, ELU36641), 
LRes99403 = reshape_layer(ELU36641, [2, 1, 1], Res99403), 
LRes99123 = reshape_layer(Res99403, [2, 1], Res99123), 
LZer7964 = zero_padding1D_layer(Res99123, 1, 1, Zer7964), 
exec_layers([LELU36641,LRes99403,LRes99123,LZer7964],["ELU36641","Res99403","Res99123","Zer7964"],Zer7964,"Zer7964")

Actual (Unparsed): [[[0.0000000], [0.6092000], [0.6805000], [0.0000000]]]

Expected (Unparsed): [[[0],[0.6092],[0.6805],[0]]]

Actual:   [[[0], [0.6092], [0.6805], [0]]]

Expected: [[[0], [0.6092], [0.6805], [0]]]