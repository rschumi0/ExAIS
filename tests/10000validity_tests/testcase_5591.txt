import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Sub81101 = tf.keras.layers.Input(shape=([3, 3, 2, 2]))
in1Sub81101 = tf.keras.layers.Input(shape=([3, 3, 2, 2]))
in0Dot84104 = tf.keras.layers.Input(shape=([3]))
in1Dot84104 = tf.keras.layers.Input(shape=([3]))
in0Con14165 = tf.keras.layers.Input(shape=([1, 1]))
in0Ave76430 = tf.keras.layers.Input(shape=([1, 2, 1, 1]))
in1Ave76430 = tf.keras.layers.Input(shape=([1, 2, 1, 1]))
in0Con89250 = tf.keras.layers.Input(shape=([3, 10]))

Sub81101 = keras.layers.Subtract(name = 'Sub81101', )([in0Sub81101,in1Sub81101])
Res98434 = keras.layers.Reshape((3, 3, 4), name = 'Res98434', )(Sub81101)
Res33894 = keras.layers.Reshape((3, 12), name = 'Res33894', )(Res98434)
Dot84104 = keras.layers.Dot(axes=(1, 1), name = 'Dot84104', )([in0Dot84104,in1Dot84104])
Res43103 = keras.layers.Reshape((1, 1), name = 'Res43103', )(Dot84104)
Con14165 = keras.layers.Concatenate(axis=2, name = 'Con14165', )([Res43103,in0Con14165])
Ave76430 = keras.layers.Average(name = 'Ave76430', )([in0Ave76430,in1Ave76430])
Res71224 = keras.layers.Reshape((1, 2, 1), name = 'Res71224', )(Ave76430)
Res37758 = keras.layers.Reshape((1, 2), name = 'Res37758', )(Res71224)
Sep76583 = keras.layers.SeparableConv1D(2, (1),strides=(1), padding='same', name = 'Sep76583', )(Res37758)
Add17312 = keras.layers.Add(name = 'Add17312', )([Con14165,Sep76583])
Zer98553 = keras.layers.ZeroPadding1D(padding=((2, 0)), name = 'Zer98553', )(Add17312)
Con89250 = keras.layers.Concatenate(axis=2, name = 'Con89250', )([Zer98553,in0Con89250])
Ave70124 = keras.layers.Average(name = 'Ave70124', )([Res33894,Con89250])
model = tf.keras.models.Model(inputs=[in0Sub81101,in1Sub81101,in0Dot84104,in1Dot84104,in0Con14165,in0Ave76430,in1Ave76430,in0Con89250], outputs=Ave70124)
w = model.get_layer('Sep76583').get_weights() 
w[0] = np.array([[[0.9172], [0.5574]]])
w[1] = np.array([[[0.1759, 0.0601], [0.5897, 0.4626]]])
w[2] = np.array([0, 0])
model.get_layer('Sep76583').set_weights(w) 
in0Sub81101 = tf.constant([[[[[0.265, 0.176], [0.4642, 0.5128]], [[0.0705, 0.5955], [0.4679, 0.7997]], [[0.9015, 0.0313], [0.4837, 0.0886]]], [[[0.4466, 0.2847], [0.7292, 0.7189]], [[0.6201, 0.648], [0.7962, 0.3795]], [[0.1667, 0.8336], [0.1904, 0.0865]]], [[[0.0337, 0.6871], [0.0914, 0.5627]], [[0.0345, 0.7859], [0.9786, 0.1383]], [[0.3968, 0.193], [0.6045, 0.8477]]]]])
in1Sub81101 = tf.constant([[[[[0.6312, 0.8292], [0.9017, 0.4839]], [[0.7807, 0.1554], [0.8057, 0.9902]], [[0.5217, 0.1172], [0.6452, 0.72]]], [[[0.7726, 0.5911], [0.7078, 0.7721]], [[0.4384, 0.8947], [0.8234, 0.8262]], [[0.6686, 0.2764], [0.3253, 0.6415]]], [[[0.5397, 0.6813], [0.5438, 0.659]], [[0.3852, 0.5083], [0.0718, 0.9524]], [[0.0926, 0.5173], [0.3953, 0.1097]]]]])
in0Dot84104 = tf.constant([[0.5614, 0.5234, 0.1297]])
in1Dot84104 = tf.constant([[0.4955, 0.1745, 0.0255]])
in0Con14165 = tf.constant([[[0.2197]]])
in0Ave76430 = tf.constant([[[[[0.021]], [[0.744]]]]])
in1Ave76430 = tf.constant([[[[[0.573]], [[0.4535]]]]])
in0Con89250 = tf.constant([[[0.7318, 0.1873, 0.1909, 0.612, 0.1097, 0.5564, 0.6842, 0.8547, 0.2443, 0.9454], [0.0043, 0.3517, 0.9159, 0.7281, 0.1425, 0.9392, 0.0368, 0.5479, 0.5117, 0.9022], [0.989, 0.3805, 0.1486, 0.861, 0.0133, 0.9237, 0.3604, 0.9147, 0.4907, 0.7614]]])
print (np.array2string(model.predict([in0Sub81101,in1Sub81101,in0Dot84104,in1Dot84104,in0Con14165,in0Ave76430,in1Ave76430,in0Con89250],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Ave70124.png')

LSub81101 = subtract_layer([[[[[0.265, 0.176], [0.4642, 0.5128]], [[0.0705, 0.5955], [0.4679, 0.7997]], [[0.9015, 0.0313], [0.4837, 0.0886]]], [[[0.4466, 0.2847], [0.7292, 0.7189]], [[0.6201, 0.648], [0.7962, 0.3795]], [[0.1667, 0.8336], [0.1904, 0.0865]]], [[[0.0337, 0.6871], [0.0914, 0.5627]], [[0.0345, 0.7859], [0.9786, 0.1383]], [[0.3968, 0.193], [0.6045, 0.8477]]]]], [[[[[0.6312, 0.8292], [0.9017, 0.4839]], [[0.7807, 0.1554], [0.8057, 0.9902]], [[0.5217, 0.1172], [0.6452, 0.72]]], [[[0.7726, 0.5911], [0.7078, 0.7721]], [[0.4384, 0.8947], [0.8234, 0.8262]], [[0.6686, 0.2764], [0.3253, 0.6415]]], [[[0.5397, 0.6813], [0.5438, 0.659]], [[0.3852, 0.5083], [0.0718, 0.9524]], [[0.0926, 0.5173], [0.3953, 0.1097]]]]], Sub81101), 
LRes98434 = reshape_layer(Sub81101, [3, 3, 4], Res98434), 
LRes33894 = reshape_layer(Res98434, [3, 12], Res33894), 
LDot84104 = dot_layer([[0.5614, 0.5234, 0.1297]], [[0.4955, 0.1745, 0.0255]], 1, 1, Dot84104), 
LRes43103 = reshape_layer(Dot84104, [1, 1], Res43103), 
LCon14165 = concatenate_layer([Res43103,[[[0.2197]]]], 2, Con14165), 
LAve76430 = average_layer([[[[[[0.021]], [[0.744]]]]], [[[[[0.573]], [[0.4535]]]]]], Ave76430), 
LRes71224 = reshape_layer(Ave76430, [1, 2, 1], Res71224), 
LRes37758 = reshape_layer(Res71224, [1, 2], Res37758), 
LSep76583 = separable_conv1D_layer(Res37758, 1,[[[[0.9172], [0.5574]]],[[[0.1759, 0.0601], [0.5897, 0.4626]]]],[0, 0], 1, true, Sep76583), 
LAdd17312 = add_layer([Con14165,Sep76583], Add17312), 
LZer98553 = zero_padding1D_layer(Add17312, 2, 0, Zer98553), 
LCon89250 = concatenate_layer([Zer98553,[[[0.7318, 0.1873, 0.1909, 0.612, 0.1097, 0.5564, 0.6842, 0.8547, 0.2443, 0.9454], [0.0043, 0.3517, 0.9159, 0.7281, 0.1425, 0.9392, 0.0368, 0.5479, 0.5117, 0.9022], [0.989, 0.3805, 0.1486, 0.861, 0.0133, 0.9237, 0.3604, 0.9147, 0.4907, 0.7614]]]], 2, Con89250), 
LAve70124 = average_layer([Res33894,Con89250], Ave70124), 
exec_layers([LSub81101,LRes98434,LRes33894,LDot84104,LRes43103,LCon14165,LAve76430,LRes71224,LRes37758,LSep76583,LAdd17312,LZer98553,LCon89250,LAve70124],["Sub81101","Res98434","Res33894","Dot84104","Res43103","Con14165","Ave76430","Res71224","Res37758","Sep76583","Add17312","Zer98553","Con89250","Ave70124"],Ave70124,"Ave70124")

Actual (Unparsed): [[[-0.1831000, -0.3266000, 0.1471500, 0.1081000, -0.2596500, 0.5260500, -0.1140500, 0.1829500, 0.5320000, 0.3844000, 0.0414000, 0.1570000], [-0.1630000, -0.1532000, 0.0128500, 0.1492500, 0.5488000, 0.2407000, 0.0576500, 0.2462500, -0.2325500, 0.5525500, 0.1884000, 0.1736000], [0.0557697, 0.1981307, 0.2683000, 0.1421000, -0.1010500, 0.5693000, 0.4600500, 0.0548000, 0.3323000, 0.2952000, 0.3499500, 0.7497000]]]

Expected (Unparsed): [[[-0.18309999999999998,-0.3266,0.14715000000000003,0.10810000000000002,-0.25965,0.52605,-0.11404999999999998,0.18295,0.532,0.3844,0.041400000000000006,0.15700000000000003],[-0.16299999999999998,-0.15319999999999998,0.012849999999999986,0.14925,0.5488,0.24069999999999997,0.05764999999999999,0.24625,-0.23255,0.5525500000000001,0.18840000000000004,0.17360000000000003],[0.055769691042500014,0.198130686145,0.2683,0.14209999999999998,-0.10105,0.5693,0.46005,0.05479999999999996,0.3323,0.2952,0.34995000000000004,0.7497]]]

Actual:   [[[-0.1831, -0.3266, 0.1472, 0.1081, -0.2596, 0.5261, -0.114, 0.183, 0.532, 0.3844, 0.0414, 0.157], [-0.163, -0.1532, 0.0129, 0.1493, 0.5488, 0.2407, 0.0577, 0.2463, -0.2325, 0.5526, 0.1884, 0.1736], [0.0558, 0.1982, 0.2683, 0.1421, -0.101, 0.5693, 0.4601, 0.0548, 0.3323, 0.2952, 0.35, 0.7497]]]

Expected: [[[-0.183, -0.3266, 0.1472, 0.1082, -0.2596, 0.5261, -0.114, 0.183, 0.532, 0.3844, 0.0415, 0.1571], [-0.1629, -0.1531, 0.0129, 0.1493, 0.5488, 0.2407, 0.0577, 0.2463, -0.2325, 0.5526, 0.1885, 0.1737], [0.0558, 0.1982, 0.2683, 0.1421, -0.101, 0.5693, 0.4601, 0.0548, 0.3323, 0.2952, 0.35, 0.7497]]]