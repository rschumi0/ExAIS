import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Sub46830 = tf.keras.layers.Input(shape=([2, 3, 3, 2]))
in1Sub46830 = tf.keras.layers.Input(shape=([2, 3, 3, 2]))
in0Glo57519 = tf.keras.layers.Input(shape=([1, 1]))
in0Con62609 = tf.keras.layers.Input(shape=([35]))
in0Con18003 = tf.keras.layers.Input(shape=([36, 2]))
in0Sep7347 = tf.keras.layers.Input(shape=([1, 2]))

Sub46830 = keras.layers.Subtract(name = 'Sub46830', )([in0Sub46830,in1Sub46830])
Res21202 = keras.layers.Reshape((2, 3, 6), name = 'Res21202', )(Sub46830)
Res6196 = keras.layers.Reshape((2, 18), name = 'Res6196', )(Res21202)
Fla66670 = keras.layers.Flatten(name = 'Fla66670', )(Res6196)
Glo57519 = keras.layers.GlobalMaxPool1D(name = 'Glo57519', )(in0Glo57519)
Con62609 = keras.layers.Concatenate(axis=1, name = 'Con62609', )([Glo57519,in0Con62609])
Add48386 = keras.layers.Add(name = 'Add48386', )([Fla66670,Con62609])
Res57614 = keras.layers.Reshape((36, 1), name = 'Res57614', )(Add48386)
Con18003 = keras.layers.Concatenate(axis=2, name = 'Con18003', )([Res57614,in0Con18003])
Sep7347 = keras.layers.SeparableConv1D(3, (1),strides=(1), padding='same', name = 'Sep7347', )(in0Sep7347)
Zer20588 = keras.layers.ZeroPadding1D(padding=((35, 0)), name = 'Zer20588', )(Sep7347)
Mul40606 = keras.layers.Multiply(name = 'Mul40606', )([Con18003,Zer20588])
model = tf.keras.models.Model(inputs=[in0Sub46830,in1Sub46830,in0Glo57519,in0Con62609,in0Con18003,in0Sep7347], outputs=Mul40606)
w = model.get_layer('Sep7347').get_weights() 
w[0] = np.array([[[0.6905], [0.3282]]])
w[1] = np.array([[[0.7144, 0.1818, 0.2266], [0.7007, 0.442, 0.8642]]])
w[2] = np.array([0, 0, 0])
model.get_layer('Sep7347').set_weights(w) 
in0Sub46830 = tf.constant([[[[[0.888, 0.7161], [0.7137, 0.6138], [0.8393, 0.7311]], [[0.544, 0.2631], [0.2567, 0.9572], [0.6119, 0.7253]], [[0.2904, 0.0956], [0.2573, 0.9594], [0.1405, 0.2027]]], [[[0.383, 0.0589], [0.7933, 0.0184], [0.4727, 0.6008]], [[0.309, 0.3044], [0.2266, 0.2058], [0.7981, 0.462]], [[0.267, 0.898], [0.2717, 0.8129], [0.8669, 0.541]]]]])
in1Sub46830 = tf.constant([[[[[0.7483, 0.4449], [0.8043, 0.2319], [0.3562, 0.4536]], [[0.2588, 0.0345], [0.686, 0.742], [0.1284, 0.8462]], [[0.3124, 0.2815], [0.2696, 0.5113], [0.2347, 0.881]]], [[[0.9414, 0.5148], [0.9611, 0.0641], [0.1676, 0.7229]], [[0.1057, 0.6123], [0.8236, 0.6709], [0.6562, 0.6947]], [[0.0008, 0.8433], [0.5223, 0.2782], [0.6035, 0.2367]]]]])
in0Glo57519 = tf.constant([[[1.5822]]])
in0Con62609 = tf.constant([[0.6997, 0.4194, 0.3282, 0.8875, 0.931, 0.8839, 0.5975, 0.3829, 0.281, 0.413, 0.3591, 0.4967, 0.207, 0.0751, 0.0353, 0.4706, 0.1096, 0.9505, 0.6137, 0.6156, 0.9157, 0.1085, 0.4548, 0.1377, 0.3602, 0.1459, 0.7704, 0.9051, 0.5057, 0.6425, 0.7081, 0.444, 0.5585, 0.0449, 0.5771]])
in0Con18003 = tf.constant([[[0.0654, 0.1036], [0.4096, 0.1736], [0.1724, 0.4141], [0.0588, 0.3055], [0.4027, 0.8108], [0.2506, 0.9437], [0.9551, 0.7718], [0.9281, 0.3991], [0.2867, 0.0261], [0.3483, 0.2627], [0.8008, 0.5909], [0.1489, 0.7109], [0.0063, 0.6101], [0.5117, 0.5794], [0.6545, 0.2393], [0.4415, 0.4808], [0.4522, 0.2674], [0.5368, 0.5819], [0.8292, 0.6447], [0.2732, 0.5196], [0.89, 0.5931], [0.7405, 0.3377], [0.1242, 0.5168], [0.9795, 0.2559], [0.665, 0.5024], [0.552, 0.544], [0.8899, 0.7976], [0.7398, 0.7689], [0.9351, 0.2965], [0.8207, 0.2043], [0.2654, 0.7184], [0.1953, 0.2505], [0.7793, 0.8686], [0.7511, 0.2979], [0.0588, 0.0936], [0.741, 0.5859]]])
in0Sep7347 = tf.constant([[[0.6856, 0.1967]]])
print (np.array2string(model.predict([in0Sub46830,in1Sub46830,in0Glo57519,in0Con62609,in0Con18003,in0Sep7347],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Mul40606.png')

LSub46830 = subtract_layer([[[[[0.888, 0.7161], [0.7137, 0.6138], [0.8393, 0.7311]], [[0.544, 0.2631], [0.2567, 0.9572], [0.6119, 0.7253]], [[0.2904, 0.0956], [0.2573, 0.9594], [0.1405, 0.2027]]], [[[0.383, 0.0589], [0.7933, 0.0184], [0.4727, 0.6008]], [[0.309, 0.3044], [0.2266, 0.2058], [0.7981, 0.462]], [[0.267, 0.898], [0.2717, 0.8129], [0.8669, 0.541]]]]], [[[[[0.7483, 0.4449], [0.8043, 0.2319], [0.3562, 0.4536]], [[0.2588, 0.0345], [0.686, 0.742], [0.1284, 0.8462]], [[0.3124, 0.2815], [0.2696, 0.5113], [0.2347, 0.881]]], [[[0.9414, 0.5148], [0.9611, 0.0641], [0.1676, 0.7229]], [[0.1057, 0.6123], [0.8236, 0.6709], [0.6562, 0.6947]], [[0.0008, 0.8433], [0.5223, 0.2782], [0.6035, 0.2367]]]]], Sub46830), 
LRes21202 = reshape_layer(Sub46830, [2, 3, 6], Res21202), 
LRes6196 = reshape_layer(Res21202, [2, 18], Res6196), 
LFla66670 = flatten_layer(Res6196, Fla66670), 
LGlo57519 = global_max_pool1D_layer([[[1.5822]]], Glo57519), 
LCon62609 = concatenate_layer([Glo57519,[[0.6997, 0.4194, 0.3282, 0.8875, 0.931, 0.8839, 0.5975, 0.3829, 0.281, 0.413, 0.3591, 0.4967, 0.207, 0.0751, 0.0353, 0.4706, 0.1096, 0.9505, 0.6137, 0.6156, 0.9157, 0.1085, 0.4548, 0.1377, 0.3602, 0.1459, 0.7704, 0.9051, 0.5057, 0.6425, 0.7081, 0.444, 0.5585, 0.0449, 0.5771]]], 1, Con62609), 
LAdd48386 = add_layer([Fla66670,Con62609], Add48386), 
LRes57614 = reshape_layer(Add48386, [36, 1], Res57614), 
LCon18003 = concatenate_layer([Res57614,[[[0.0654, 0.1036], [0.4096, 0.1736], [0.1724, 0.4141], [0.0588, 0.3055], [0.4027, 0.8108], [0.2506, 0.9437], [0.9551, 0.7718], [0.9281, 0.3991], [0.2867, 0.0261], [0.3483, 0.2627], [0.8008, 0.5909], [0.1489, 0.7109], [0.0063, 0.6101], [0.5117, 0.5794], [0.6545, 0.2393], [0.4415, 0.4808], [0.4522, 0.2674], [0.5368, 0.5819], [0.8292, 0.6447], [0.2732, 0.5196], [0.89, 0.5931], [0.7405, 0.3377], [0.1242, 0.5168], [0.9795, 0.2559], [0.665, 0.5024], [0.552, 0.544], [0.8899, 0.7976], [0.7398, 0.7689], [0.9351, 0.2965], [0.8207, 0.2043], [0.2654, 0.7184], [0.1953, 0.2505], [0.7793, 0.8686], [0.7511, 0.2979], [0.0588, 0.0936], [0.741, 0.5859]]]], 2, Con18003), 
LSep7347 = separable_conv1D_layer([[[0.6856, 0.1967]]], 1,[[[[0.6905], [0.3282]]],[[[0.7144, 0.1818, 0.2266], [0.7007, 0.442, 0.8642]]]],[0, 0, 0], 1, true, Sep7347), 
LZer20588 = zero_padding1D_layer(Sep7347, 35, 0, Zer20588), 
LMul40606 = multiply_layer([Con18003,Zer20588], Mul40606), 
exec_layers([LSub46830,LRes21202,LRes6196,LFla66670,LGlo57519,LCon62609,LAdd48386,LRes57614,LCon18003,LSep7347,LZer20588,LMul40606],["Sub46830","Res21202","Res6196","Fla66670","Glo57519","Con62609","Add48386","Res57614","Con18003","Sep7347","Zer20588","Mul40606"],Mul40606,"Mul40606")

Actual (Unparsed): [[[0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000], [-0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000], [-0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000], [-0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000], [0.3379612, 0.0849182, 0.0955393]]]

Expected (Unparsed): [[[0.0,0.0,0.0],[0.0,0.0,0.0],[0.0,0.0,0.0],[0.0,0.0,0.0],[0.0,0.0,0.0],[0.0,0.0,0.0],[0.0,0.0,0.0],[0.0,0.0,0.0],[-0.0,0.0,0.0],[0.0,0.0,0.0],[0.0,0.0,0.0],[0.0,0.0,0.0],[0.0,0.0,0.0],[0.0,0.0,0.0],[0.0,0.0,0.0],[0.0,0.0,0.0],[0.0,0.0,0.0],[-0.0,0.0,0.0],[0.0,0.0,0.0],[0.0,0.0,0.0],[0.0,0.0,0.0],[0.0,0.0,0.0],[0.0,0.0,0.0],[0.0,0.0,0.0],[0.0,0.0,0.0],[0.0,0.0,0.0],[-0.0,0.0,0.0],[0.0,0.0,0.0],[0.0,0.0,0.0],[0.0,0.0,0.0],[0.0,0.0,0.0],[0.0,0.0,0.0],[0.0,0.0,0.0],[0.0,0.0,0.0],[0.0,0.0,0.0],[0.33796125349672923,0.08491824707652001,0.09553924940996521]]]

Actual:   [[[0, 0, 0], [0, 0, 0], [0, 0, 0], [0, 0, 0], [0, 0, 0], [0, 0, 0], [0, 0, 0], [0, 0, 0], [-0, 0, 0], [0, 0, 0], [0, 0, 0], [0, 0, 0], [0, 0, 0], [0, 0, 0], [0, 0, 0], [0, 0, 0], [0, 0, 0], [-0, 0, 0], [0, 0, 0], [0, 0, 0], [0, 0, 0], [0, 0, 0], [0, 0, 0], [0, 0, 0], [0, 0, 0], [0, 0, 0], [-0, 0, 0], [0, 0, 0], [0, 0, 0], [0, 0, 0], [0, 0, 0], [0, 0, 0], [0, 0, 0], [0, 0, 0], [0, 0, 0], [0.338, 0.085, 0.0956]]]

Expected: [[[0, 0, 0], [0, 0, 0], [0, 0, 0], [0, 0, 0], [0, 0, 0], [0, 0, 0], [0, 0, 0], [0, 0, 0], [-0, 0, 0], [0, 0, 0], [0, 0, 0], [0, 0, 0], [0, 0, 0], [0, 0, 0], [0, 0, 0], [0, 0, 0], [0, 0, 0], [-0, 0, 0], [0, 0, 0], [0, 0, 0], [0, 0, 0], [0, 0, 0], [0, 0, 0], [0, 0, 0], [0, 0, 0], [0, 0, 0], [-0, 0, 0], [0, 0, 0], [0, 0, 0], [0, 0, 0], [0, 0, 0], [0, 0, 0], [0, 0, 0], [0, 0, 0], [0, 0, 0], [0.338, 0.085, 0.0956]]]