import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Ave93644 = tf.keras.layers.Input(shape=([2, 2]))
in0Cro61020 = tf.keras.layers.Input(shape=([1, 3, 3, 1]))

Ave93644 = keras.layers.AveragePooling1D(pool_size=(1), name = 'Ave93644', )(in0Ave93644)
Res66098 = keras.layers.Reshape((2, 2, 1), name = 'Res66098', )(Ave93644)
Res13743 = keras.layers.Reshape((2, 2, 1, 1), name = 'Res13743', )(Res66098)
Glo24348 = keras.layers.GlobalMaxPool3D(name = 'Glo24348', )(Res13743)
Res67794 = keras.layers.Reshape((1, 1), name = 'Res67794', )(Glo24348)
Res41466 = keras.layers.Reshape((1, 1, 1), name = 'Res41466', )(Res67794)
Res5727 = keras.layers.Reshape((1, 1, 1, 1), name = 'Res5727', )(Res41466)
Zer35375 = keras.layers.ZeroPadding3D(padding=((1, 0), (0, 0), (1, 0)), name = 'Zer35375', )(Res5727)
Cro61020 = keras.layers.Cropping3D(cropping=((0, 0), (1, 1), (2, 0)), name = 'Cro61020', )(in0Cro61020)
Lea43058 = keras.layers.LeakyReLU(alpha=0.13769458450817287, name = 'Lea43058', )(Cro61020)
Up_8830 = keras.layers.UpSampling3D(size=(2, 1, 2), name = 'Up_8830', )(Lea43058)
Min59774 = keras.layers.Minimum(name = 'Min59774', )([Zer35375,Up_8830])
model = tf.keras.models.Model(inputs=[in0Ave93644,in0Cro61020], outputs=Min59774)
in0Ave93644 = tf.constant([[[1.7846, 1.4041], [1.5183, 1.1675]]])
in0Cro61020 = tf.constant([[[[[1.1566], [1.4905], [1.4506]], [[1.4488], [1.2126], [1.5806]], [[1.8382], [1.9848], [1.2472]]]]])
print (np.array2string(model.predict([in0Ave93644,in0Cro61020],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Min59774.png')

LAve93644 = average_pooling1D_layer([[[1.7846, 1.4041], [1.5183, 1.1675]]], 1, Ave93644), 
LRes66098 = reshape_layer(Ave93644, [2, 2, 1], Res66098), 
LRes13743 = reshape_layer(Res66098, [2, 2, 1, 1], Res13743), 
LGlo24348 = global_max_pool3D_layer(Res13743, Glo24348), 
LRes67794 = reshape_layer(Glo24348, [1, 1], Res67794), 
LRes41466 = reshape_layer(Res67794, [1, 1, 1], Res41466), 
LRes5727 = reshape_layer(Res41466, [1, 1, 1, 1], Res5727), 
LZer35375 = zero_padding3D_layer(Res5727, 1, 0, 0, 0, 1, 0, Zer35375), 
LCro61020 = cropping3D_layer([[[[[1.1566], [1.4905], [1.4506]], [[1.4488], [1.2126], [1.5806]], [[1.8382], [1.9848], [1.2472]]]]], 0, 0, 1, 1, 2, 0, Cro61020), 
LLea43058 = leaky_relu_layer(Cro61020, 0.13769458450817287, Lea43058), 
LUp_8830 = up_sampling3D_layer(Lea43058, 2, 1, 2, Up_8830), 
LMin59774 = minimum_layer([Zer35375,Up_8830], Min59774), 
exec_layers([LAve93644,LRes66098,LRes13743,LGlo24348,LRes67794,LRes41466,LRes5727,LZer35375,LCro61020,LLea43058,LUp_8830,LMin59774],["Ave93644","Res66098","Res13743","Glo24348","Res67794","Res41466","Res5727","Zer35375","Cro61020","Lea43058","Up_8830","Min59774"],Min59774,"Min59774")

Actual (Unparsed): [[[[[0.0000000], [0.0000000]]], [[[0.0000000], [1.5806000]]]]]

Expected (Unparsed): [[[[[0],[0]]],[[[0],[1.5806]]]]]

Actual:   [[[[[0], [0]]], [[[0], [1.5806]]]]]

Expected: [[[[[0], [0]]], [[[0], [1.5806]]]]]