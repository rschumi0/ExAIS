import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Mul2319 = tf.keras.layers.Input(shape=([1, 1, 2, 2]))
in1Mul2319 = tf.keras.layers.Input(shape=([1, 1, 2, 2]))

Mul2319 = keras.layers.Multiply(name = 'Mul2319', )([in0Mul2319,in1Mul2319])
Res20179 = keras.layers.Reshape((1, 1, 4), name = 'Res20179', )(Mul2319)
Max80593 = keras.layers.MaxPool2D(pool_size=(1, 1), strides=(1, 9), padding='valid', name = 'Max80593', )(Res20179)
Sof44028 = keras.layers.Softmax(axis=1, name = 'Sof44028', )(Max80593)
model = tf.keras.models.Model(inputs=[in0Mul2319,in1Mul2319], outputs=Sof44028)
in0Mul2319 = tf.constant([[[[[0.821, 0.157], [0.7743, 0.9861]]]]])
in1Mul2319 = tf.constant([[[[[0.3309, 0.0347], [0.1271, 0.6683]]]]])
print (np.array2string(model.predict([in0Mul2319,in1Mul2319],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Sof44028.png')

LMul2319 = multiply_layer([[[[[[0.821, 0.157], [0.7743, 0.9861]]]]], [[[[[0.3309, 0.0347], [0.1271, 0.6683]]]]]], Mul2319), 
LRes20179 = reshape_layer(Mul2319, [1, 1, 4], Res20179), 
LMax80593 = max_pool2D_layer(Res20179, 1, 1, 1, 9, false, Max80593), 
LSof44028 = softmax_layer(Max80593, 1, Sof44028), 
exec_layers([LMul2319,LRes20179,LMax80593,LSof44028],["Mul2319","Res20179","Max80593","Sof44028"],Sof44028,"Sof44028")

Actual (Unparsed): [[[[1.0000000, 1.0000000, 1.0000000, 1.0000000]]]]

Expected (Unparsed): [[[[1.0,1.0,1.0,1.0]]]]

Actual:   [[[[1, 1, 1, 1]]]]

Expected: [[[[1, 1, 1, 1]]]]