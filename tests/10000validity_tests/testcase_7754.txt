import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Mul26498 = tf.keras.layers.Input(shape=([2, 1, 2, 2]))
in1Mul26498 = tf.keras.layers.Input(shape=([2, 1, 2, 2]))
in0Con5762 = tf.keras.layers.Input(shape=([4, 1, 3, 1]))
in0Con57615 = tf.keras.layers.Input(shape=([2, 1, 1, 1]))
in0Con529 = tf.keras.layers.Input(shape=([2, 1, 2, 1]))
in0Ave39208 = tf.keras.layers.Input(shape=([2, 1, 2, 2]))
in1Ave39208 = tf.keras.layers.Input(shape=([2, 1, 2, 2]))

Mul26498 = keras.layers.Multiply(name = 'Mul26498', )([in0Mul26498,in1Mul26498])
Res82191 = keras.layers.Reshape((2, 1, 4), name = 'Res82191', )(Mul26498)
Glo31009 = keras.layers.GlobalAveragePooling2D(name = 'Glo31009', )(Res82191)
Res41068 = keras.layers.Reshape((4, 1), name = 'Res41068', )(Glo31009)
Res79889 = keras.layers.Reshape((4, 1, 1), name = 'Res79889', )(Res41068)
Res5740 = keras.layers.Reshape((4, 1, 1, 1), name = 'Res5740', )(Res79889)
Zer45442 = keras.layers.ZeroPadding3D(padding=((0, 0), (0, 0), (2, 0)), name = 'Zer45442', )(Res5740)
Con5762 = keras.layers.Concatenate(axis=4, name = 'Con5762', )([Zer45442,in0Con5762])
Con57615 = keras.layers.Conv3DTranspose(2, (1, 1, 1),strides=(1, 1, 1), padding='valid', name = 'Con57615', )(in0Con57615)
Res67132 = keras.layers.Reshape((2, 1, 2), name = 'Res67132', )(Con57615)
Zer64648 = keras.layers.ZeroPadding2D(padding=((1, 1), (1, 1)), name = 'Zer64648', )(Res67132)
Glo12398 = keras.layers.GlobalAveragePooling2D(name = 'Glo12398', )(Zer64648)
Res58830 = keras.layers.Reshape((2, 1), name = 'Res58830', )(Glo12398)
Res48125 = keras.layers.Reshape((2, 1, 1), name = 'Res48125', )(Res58830)
Res13540 = keras.layers.Reshape((2, 1, 1, 1), name = 'Res13540', )(Res48125)
Zer62113 = keras.layers.ZeroPadding3D(padding=((0, 0), (0, 0), (1, 0)), name = 'Zer62113', )(Res13540)
Con529 = keras.layers.Concatenate(axis=4, name = 'Con529', )([Zer62113,in0Con529])
Ave39208 = keras.layers.Average(name = 'Ave39208', )([in0Ave39208,in1Ave39208])
Ave37625 = keras.layers.Average(name = 'Ave37625', )([Con529,Ave39208])
Zer76735 = keras.layers.ZeroPadding3D(padding=((2, 0), (0, 0), (1, 0)), name = 'Zer76735', )(Ave37625)
Ave64627 = keras.layers.Average(name = 'Ave64627', )([Con5762,Zer76735])
model = tf.keras.models.Model(inputs=[in0Mul26498,in1Mul26498,in0Con5762,in0Con57615,in0Con529,in0Ave39208,in1Ave39208], outputs=Ave64627)
w = model.get_layer('Con57615').get_weights() 
w[0] = np.array([[[[[0.3811], [0.1455]]]]])
w[1] = np.array([0, 0])
model.get_layer('Con57615').set_weights(w) 
in0Mul26498 = tf.constant([[[[[0.0741, 0.5159], [0.6103, 0.5744]]], [[[0.2161, 0.9469], [0.0852, 0.8672]]]]])
in1Mul26498 = tf.constant([[[[[0.4626, 0.4094], [0.1878, 0.2297]]], [[[0.2874, 0.7003], [0.3872, 0.7304]]]]])
in0Con5762 = tf.constant([[[[[0.6008], [0.034], [0.1754]]], [[[0.6781], [0.7128], [0.2082]]], [[[0.767], [0.894], [0.6403]]], [[[0.4338], [0.9767], [0.8575]]]]])
in0Con57615 = tf.constant([[[[[0.0429]]], [[[0.0114]]]]])
in0Con529 = tf.constant([[[[[0.59], [0.9531]]], [[[0.0185], [0.7598]]]]])
in0Ave39208 = tf.constant([[[[[0.3509, 0.9908], [0.8069, 0.0713]]], [[[0.2103, 0.4048], [0.035, 0.105]]]]])
in1Ave39208 = tf.constant([[[[[0.6388, 0.7177], [0.6848, 0.6501]]], [[[0.3931, 0.8689], [0.6152, 0.2241]]]]])
print (np.array2string(model.predict([in0Mul26498,in1Mul26498,in0Con5762,in0Con57615,in0Con529,in0Ave39208,in1Ave39208],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Ave64627.png')

LMul26498 = multiply_layer([[[[[[0.0741, 0.5159], [0.6103, 0.5744]]], [[[0.2161, 0.9469], [0.0852, 0.8672]]]]], [[[[[0.4626, 0.4094], [0.1878, 0.2297]]], [[[0.2874, 0.7003], [0.3872, 0.7304]]]]]], Mul26498), 
LRes82191 = reshape_layer(Mul26498, [2, 1, 4], Res82191), 
LGlo31009 = global_average_pooling2D_layer(Res82191, Glo31009), 
LRes41068 = reshape_layer(Glo31009, [4, 1], Res41068), 
LRes79889 = reshape_layer(Res41068, [4, 1, 1], Res79889), 
LRes5740 = reshape_layer(Res79889, [4, 1, 1, 1], Res5740), 
LZer45442 = zero_padding3D_layer(Res5740, 0, 0, 0, 0, 2, 0, Zer45442), 
LCon5762 = concatenate_layer([Zer45442,[[[[[0.6008], [0.034], [0.1754]]], [[[0.6781], [0.7128], [0.2082]]], [[[0.767], [0.894], [0.6403]]], [[[0.4338], [0.9767], [0.8575]]]]]], 4, Con5762), 
LCon57615 = conv3D_transpose_layer([[[[[0.0429]]], [[[0.0114]]]]], 1, 1, 1,[[[[[0.3811], [0.1455]]]]],[0, 0], 1, 1, 1, false, Con57615), 
LRes67132 = reshape_layer(Con57615, [2, 1, 2], Res67132), 
LZer64648 = zero_padding2D_layer(Res67132, 1, 1, 1, 1, Zer64648), 
LGlo12398 = global_average_pooling2D_layer(Zer64648, Glo12398), 
LRes58830 = reshape_layer(Glo12398, [2, 1], Res58830), 
LRes48125 = reshape_layer(Res58830, [2, 1, 1], Res48125), 
LRes13540 = reshape_layer(Res48125, [2, 1, 1, 1], Res13540), 
LZer62113 = zero_padding3D_layer(Res13540, 0, 0, 0, 0, 1, 0, Zer62113), 
LCon529 = concatenate_layer([Zer62113,[[[[[0.59], [0.9531]]], [[[0.0185], [0.7598]]]]]], 4, Con529), 
LAve39208 = average_layer([[[[[[0.3509, 0.9908], [0.8069, 0.0713]]], [[[0.2103, 0.4048], [0.035, 0.105]]]]], [[[[[0.6388, 0.7177], [0.6848, 0.6501]]], [[[0.3931, 0.8689], [0.6152, 0.2241]]]]]], Ave39208), 
LAve37625 = average_layer([Con529,Ave39208], Ave37625), 
LZer76735 = zero_padding3D_layer(Ave37625, 2, 0, 0, 0, 1, 0, Zer76735), 
LAve64627 = average_layer([Con5762,Zer76735], Ave64627), 
exec_layers([LMul26498,LRes82191,LGlo31009,LRes41068,LRes79889,LRes5740,LZer45442,LCon5762,LCon57615,LRes67132,LZer64648,LGlo12398,LRes58830,LRes48125,LRes13540,LZer62113,LCon529,LAve39208,LAve37625,LZer76735,LAve64627],["Mul26498","Res82191","Glo31009","Res41068","Res79889","Res5740","Zer45442","Con5762","Con57615","Res67132","Zer64648","Glo12398","Res58830","Res48125","Res13540","Zer62113","Con529","Ave39208","Ave37625","Zer76735","Ave64627"],Ave64627,"Ave64627")

Actual (Unparsed): [[[[[0.0000000, 0.3004000], [0.0000000, 0.0170000], [0.0240965, 0.0877000]]], [[[0.0000000, 0.3390500], [0.0000000, 0.3564000], [0.2185809, 0.1041000]]], [[[0.0000000, 0.3835000], [0.1237125, 0.8080625], [0.2237946, 0.6486000]]], [[[0.0000000, 0.2169000], [0.0754250, 0.6521875], [0.2727752, 0.6598375]]]]]

Expected (Unparsed): [[[[[0,0.3004],[0,0.017],[0.02409645,0.0877]]],[[[0,0.33905],[0,0.3564],[0.21858088250000002,0.1041]]],[[[0,0.3835],[0.1237125,0.8080624999999999],[0.22379456437499998,0.6486000000000001]]],[[[0,0.2169],[0.07542499999999999,0.6521875],[0.272775236875,0.6598375000000001]]]]]

Actual:   [[[[[0, 0.3004], [0, 0.017], [0.0241, 0.0877]]], [[[0, 0.3391], [0, 0.3564], [0.2186, 0.1041]]], [[[0, 0.3835], [0.1238, 0.8081], [0.2238, 0.6486]]], [[[0, 0.2169], [0.0755, 0.6522], [0.2728, 0.6599]]]]]

Expected: [[[[[0, 0.3004], [0, 0.017], [0.0241, 0.0877]]], [[[0, 0.3391], [0, 0.3564], [0.2186, 0.1041]]], [[[0, 0.3835], [0.1238, 0.8081], [0.2238, 0.6487]]], [[[0, 0.2169], [0.0755, 0.6522], [0.2728, 0.6599]]]]]