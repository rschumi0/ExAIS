import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Cro98426 = tf.keras.layers.Input(shape=([2, 2, 2, 1]))
in0Max35804 = tf.keras.layers.Input(shape=([1, 2, 2, 1]))
in1Max35804 = tf.keras.layers.Input(shape=([1, 2, 2, 1]))
in0Con64277 = tf.keras.layers.Input(shape=([7, 3, 3, 1]))

Cro98426 = keras.layers.Cropping3D(cropping=((0, 1), (1, 0), (1, 0)), name = 'Cro98426', )(in0Cro98426)
Con78212 = keras.layers.Conv3DTranspose(2, (1, 1, 1),strides=(7, 1, 1), padding='valid', name = 'Con78212', )(Cro98426)
Zer93387 = keras.layers.ZeroPadding3D(padding=((0, 0), (2, 0), (2, 0)), name = 'Zer93387', )(Con78212)
Max35804 = keras.layers.Maximum(name = 'Max35804', )([in0Max35804,in1Max35804])
Lea92470 = keras.layers.LeakyReLU(alpha=0.15641757588971156, name = 'Lea92470', )(Max35804)
Zer66955 = keras.layers.ZeroPadding3D(padding=((6, 0), (1, 0), (1, 0)), name = 'Zer66955', )(Lea92470)
Con64277 = keras.layers.Concatenate(axis=4, name = 'Con64277', )([Zer66955,in0Con64277])
Sub9205 = keras.layers.Subtract(name = 'Sub9205', )([Zer93387,Con64277])
model = tf.keras.models.Model(inputs=[in0Cro98426,in0Max35804,in1Max35804,in0Con64277], outputs=Sub9205)
w = model.get_layer('Con78212').get_weights() 
w[0] = np.array([[[[[0.4942], [0.6091]]]]])
w[1] = np.array([0, 0])
model.get_layer('Con78212').set_weights(w) 
in0Cro98426 = tf.constant([[[[[1.6922], [1.7009]], [[1.9892], [1.6196]]], [[[1.2269], [1.3949]], [[1.7466], [1.3368]]]]])
in0Max35804 = tf.constant([[[[[0.9621], [0.5237]], [[0.7882], [0.7759]]]]])
in1Max35804 = tf.constant([[[[[0.4815], [0.3713]], [[0.6065], [0.7079]]]]])
in0Con64277 = tf.constant([[[[[0.9514], [0.8537], [0.3911]], [[0.9691], [0.6856], [0.1082]], [[0.1367], [0.23], [0.4958]]], [[[0.2227], [0.9797], [0.8847]], [[0.7084], [0.2567], [0.227]], [[0.307], [0.7971], [0.7207]]], [[[0.1987], [0.272], [0.9502]], [[0.3023], [0.8052], [0.8072]], [[0.7264], [0.6668], [0.9843]]], [[[0.5375], [0.7039], [0.7612]], [[0.848], [0.5127], [0.9242]], [[0.9907], [0.4274], [0.211]]], [[[0.3659], [0.3551], [0.977]], [[0.3976], [0.6417], [0.1357]], [[0.9011], [0.782], [0.6084]]], [[[0.0024], [0.4985], [0.9688]], [[0.6029], [0.477], [0.8889]], [[0.0221], [0.5721], [0.5312]]], [[[0.6773], [0.0776], [0.4526]], [[0.7267], [0.143], [0.8256]], [[0.7739], [0.7077], [0.9983]]]]])
print (np.array2string(model.predict([in0Cro98426,in0Max35804,in1Max35804,in0Con64277],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Sub9205.png')

LCro98426 = cropping3D_layer([[[[[1.6922], [1.7009]], [[1.9892], [1.6196]]], [[[1.2269], [1.3949]], [[1.7466], [1.3368]]]]], 0, 1, 1, 0, 1, 0, Cro98426), 
LCon78212 = conv3D_transpose_layer(Cro98426, 1, 1, 1,[[[[[0.4942], [0.6091]]]]],[0, 0], 7, 1, 1, false, Con78212), 
LZer93387 = zero_padding3D_layer(Con78212, 0, 0, 2, 0, 2, 0, Zer93387), 
LMax35804 = maximum_layer([[[[[[0.9621], [0.5237]], [[0.7882], [0.7759]]]]], [[[[[0.4815], [0.3713]], [[0.6065], [0.7079]]]]]], Max35804), 
LLea92470 = leaky_relu_layer(Max35804, 0.15641757588971156, Lea92470), 
LZer66955 = zero_padding3D_layer(Lea92470, 6, 0, 1, 0, 1, 0, Zer66955), 
LCon64277 = concatenate_layer([Zer66955,[[[[[0.9514], [0.8537], [0.3911]], [[0.9691], [0.6856], [0.1082]], [[0.1367], [0.23], [0.4958]]], [[[0.2227], [0.9797], [0.8847]], [[0.7084], [0.2567], [0.227]], [[0.307], [0.7971], [0.7207]]], [[[0.1987], [0.272], [0.9502]], [[0.3023], [0.8052], [0.8072]], [[0.7264], [0.6668], [0.9843]]], [[[0.5375], [0.7039], [0.7612]], [[0.848], [0.5127], [0.9242]], [[0.9907], [0.4274], [0.211]]], [[[0.3659], [0.3551], [0.977]], [[0.3976], [0.6417], [0.1357]], [[0.9011], [0.782], [0.6084]]], [[[0.0024], [0.4985], [0.9688]], [[0.6029], [0.477], [0.8889]], [[0.0221], [0.5721], [0.5312]]], [[[0.6773], [0.0776], [0.4526]], [[0.7267], [0.143], [0.8256]], [[0.7739], [0.7077], [0.9983]]]]]], 4, Con64277), 
LSub9205 = subtract_layer(Zer93387,Con64277, Sub9205), 
exec_layers([LCro98426,LCon78212,LZer93387,LMax35804,LLea92470,LZer66955,LCon64277,LSub9205],["Cro98426","Con78212","Zer93387","Max35804","Lea92470","Zer66955","Con64277","Sub9205"],Sub9205,"Sub9205")

Actual (Unparsed): [[[[[0.0000000, -0.9514000], [0.0000000, -0.8537000], [0.0000000, -0.3911000]], [[0.0000000, -0.9691000], [0.0000000, -0.6856000], [0.0000000, -0.1082000]], [[0.0000000, -0.1367000], [0.0000000, -0.2300000], [0.8004063, 0.4906984]]], [[[0.0000000, -0.2227000], [0.0000000, -0.9797000], [0.0000000, -0.8847000]], [[0.0000000, -0.7084000], [0.0000000, -0.2567000], [0.0000000, -0.2270000]], [[0.0000000, -0.3070000], [0.0000000, -0.7971000], [0.0000000, -0.7207000]]], [[[0.0000000, -0.1987000], [0.0000000, -0.2720000], [0.0000000, -0.9502000]], [[0.0000000, -0.3023000], [0.0000000, -0.8052000], [0.0000000, -0.8072000]], [[0.0000000, -0.7264000], [0.0000000, -0.6668000], [0.0000000, -0.9843000]]], [[[0.0000000, -0.5375000], [0.0000000, -0.7039000], [0.0000000, -0.7612000]], [[0.0000000, -0.8480000], [0.0000000, -0.5127000], [0.0000000, -0.9242000]], [[0.0000000, -0.9907000], [0.0000000, -0.4274000], [0.0000000, -0.2110000]]], [[[0.0000000, -0.3659000], [0.0000000, -0.3551000], [0.0000000, -0.9770000]], [[0.0000000, -0.3976000], [0.0000000, -0.6417000], [0.0000000, -0.1357000]], [[0.0000000, -0.9011000], [0.0000000, -0.7820000], [0.0000000, -0.6084000]]], [[[0.0000000, -0.0024000], [0.0000000, -0.4985000], [0.0000000, -0.9688000]], [[0.0000000, -0.6029000], [0.0000000, -0.4770000], [0.0000000, -0.8889000]], [[0.0000000, -0.0221000], [0.0000000, -0.5721000], [0.0000000, -0.5312000]]], [[[0.0000000, -0.6773000], [0.0000000, -0.0776000], [0.0000000, -0.4526000]], [[0.0000000, -0.7267000], [-0.9621000, -0.1430000], [-0.5237000, -0.8256000]], [[0.0000000, -0.7739000], [-0.7882000, -0.7077000], [-0.7759000, -0.9983000]]]]]

Expected (Unparsed): [[[[[0,-0.9514],[0,-0.8537],[0,-0.3911]],[[0,-0.9691],[0,-0.6856],[0,-0.1082]],[[0,-0.1367],[0,-0.23],[0.8004063199999999,0.4906983599999999]]],[[[0,-0.2227],[0,-0.9797],[0,-0.8847]],[[0,-0.7084],[0,-0.2567],[0,-0.227]],[[0,-0.307],[0,-0.7971],[0,-0.7207]]],[[[0,-0.1987],[0,-0.272],[0,-0.9502]],[[0,-0.3023],[0,-0.8052],[0,-0.8072]],[[0,-0.7264],[0,-0.6668],[0,-0.9843]]],[[[0,-0.5375],[0,-0.7039],[0,-0.7612]],[[0,-0.848],[0,-0.5127],[0,-0.9242]],[[0,-0.9907],[0,-0.4274],[0,-0.211]]],[[[0,-0.3659],[0,-0.3551],[0,-0.977]],[[0,-0.3976],[0,-0.6417],[0,-0.1357]],[[0,-0.9011],[0,-0.782],[0,-0.6084]]],[[[0,-0.0024],[0,-0.4985],[0,-0.9688]],[[0,-0.6029],[0,-0.477],[0,-0.8889]],[[0,-0.0221],[0,-0.5721],[0,-0.5312]]],[[[0,-0.6773],[0,-0.0776],[0,-0.4526]],[[0,-0.7267],[-0.9621,-0.143],[-0.5237,-0.8256]],[[0,-0.7739],[-0.7882,-0.7077],[-0.7759,-0.9983]]]]]

Actual:   [[[[[0, -0.9514], [0, -0.8537], [0, -0.3911]], [[0, -0.9691], [0, -0.6856], [0, -0.1082]], [[0, -0.1367], [0, -0.23], [0.8005, 0.4907]]], [[[0, -0.2227], [0, -0.9797], [0, -0.8847]], [[0, -0.7084], [0, -0.2567], [0, -0.227]], [[0, -0.307], [0, -0.7971], [0, -0.7207]]], [[[0, -0.1987], [0, -0.272], [0, -0.9502]], [[0, -0.3023], [0, -0.8052], [0, -0.8072]], [[0, -0.7264], [0, -0.6668], [0, -0.9843]]], [[[0, -0.5375], [0, -0.7039], [0, -0.7612]], [[0, -0.848], [0, -0.5127], [0, -0.9242]], [[0, -0.9907], [0, -0.4274], [0, -0.211]]], [[[0, -0.3659], [0, -0.3551], [0, -0.977]], [[0, -0.3976], [0, -0.6417], [0, -0.1357]], [[0, -0.9011], [0, -0.782], [0, -0.6084]]], [[[0, -0.0024], [0, -0.4985], [0, -0.9688]], [[0, -0.6029], [0, -0.477], [0, -0.8889]], [[0, -0.0221], [0, -0.5721], [0, -0.5312]]], [[[0, -0.6773], [0, -0.0776], [0, -0.4526]], [[0, -0.7267], [-0.9621, -0.143], [-0.5237, -0.8256]], [[0, -0.7739], [-0.7882, -0.7077], [-0.7759, -0.9983]]]]]

Expected: [[[[[0, -0.9514], [0, -0.8537], [0, -0.3911]], [[0, -0.9691], [0, -0.6856], [0, -0.1082]], [[0, -0.1367], [0, -0.23], [0.8005, 0.4907]]], [[[0, -0.2227], [0, -0.9797], [0, -0.8847]], [[0, -0.7084], [0, -0.2567], [0, -0.227]], [[0, -0.307], [0, -0.7971], [0, -0.7207]]], [[[0, -0.1987], [0, -0.272], [0, -0.9502]], [[0, -0.3023], [0, -0.8052], [0, -0.8072]], [[0, -0.7264], [0, -0.6668], [0, -0.9843]]], [[[0, -0.5375], [0, -0.7039], [0, -0.7612]], [[0, -0.848], [0, -0.5127], [0, -0.9242]], [[0, -0.9907], [0, -0.4274], [0, -0.211]]], [[[0, -0.3659], [0, -0.3551], [0, -0.977]], [[0, -0.3976], [0, -0.6417], [0, -0.1357]], [[0, -0.9011], [0, -0.782], [0, -0.6084]]], [[[0, -0.0024], [0, -0.4985], [0, -0.9688]], [[0, -0.6029], [0, -0.477], [0, -0.8889]], [[0, -0.0221], [0, -0.5721], [0, -0.5312]]], [[[0, -0.6773], [0, -0.0776], [0, -0.4526]], [[0, -0.7267], [-0.9621, -0.143], [-0.5237, -0.8256]], [[0, -0.7739], [-0.7882, -0.7077], [-0.7759, -0.9983]]]]]