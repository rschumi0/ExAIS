import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Add52745 = tf.keras.layers.Input(shape=([2, 2, 2, 2]))
in1Add52745 = tf.keras.layers.Input(shape=([2, 2, 2, 2]))
in0Con41382 = tf.keras.layers.Input(shape=([2, 2, 2, 1]))
in0Mul27496 = tf.keras.layers.Input(shape=([1, 1, 1, 1]))
in1Mul27496 = tf.keras.layers.Input(shape=([1, 1, 1, 1]))

Add52745 = keras.layers.Add(name = 'Add52745', )([in0Add52745,in1Add52745])
Con41382 = keras.layers.Concatenate(axis=4, name = 'Con41382', )([Add52745,in0Con41382])
Mul27496 = keras.layers.Multiply(name = 'Mul27496', )([in0Mul27496,in1Mul27496])
Con7139 = keras.layers.Conv3D(3, (1, 2, 1),strides=(1, 1, 1), padding='same', dilation_rate=(1, 1, 1), name = 'Con7139', )(Mul27496)
Mas29158 = keras.layers.Masking(mask_value=2, name = 'Mas29158', )(Con7139)
Zer40332 = keras.layers.ZeroPadding3D(padding=((1, 0), (1, 0), (1, 0)), name = 'Zer40332', )(Mas29158)
Mul90227 = keras.layers.Multiply(name = 'Mul90227', )([Con41382,Zer40332])
model = tf.keras.models.Model(inputs=[in0Add52745,in1Add52745,in0Con41382,in0Mul27496,in1Mul27496], outputs=Mul90227)
w = model.get_layer('Con7139').get_weights() 
w[0] = np.array([[[[[0.3353, 0.925, 0.5084]]], [[[0.5646, 0.4012, 0.7238]]]]])
w[1] = np.array([0, 0, 0])
model.get_layer('Con7139').set_weights(w) 
in0Add52745 = tf.constant([[[[[0.1024, 0.017], [0.8677, 0.8864]], [[0.7593, 0.638], [0.8534, 0.1327]]], [[[0.9268, 0.9131], [0.5856, 0.0127]], [[0.0686, 0.7236], [0.3727, 0.4602]]]]])
in1Add52745 = tf.constant([[[[[0.4938, 0.6616], [0.5323, 0.8888]], [[0.8206, 0.9813], [0.9547, 0.7777]]], [[[0.9559, 0.4702], [0.775, 0.0034]], [[0.928, 0.9335], [0.4118, 0.091]]]]])
in0Con41382 = tf.constant([[[[[0.9301], [0.7912]], [[0.8761], [0.897]]], [[[0.3718], [0.4064]], [[0.1181], [0.6742]]]]])
in0Mul27496 = tf.constant([[[[[0.79]]]]])
in1Mul27496 = tf.constant([[[[[0.0526]]]]])
print (np.array2string(model.predict([in0Add52745,in1Add52745,in0Con41382,in0Mul27496,in1Mul27496],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Mul90227.png')

LAdd52745 = add_layer([[[[[[0.1024, 0.017], [0.8677, 0.8864]], [[0.7593, 0.638], [0.8534, 0.1327]]], [[[0.9268, 0.9131], [0.5856, 0.0127]], [[0.0686, 0.7236], [0.3727, 0.4602]]]]], [[[[[0.4938, 0.6616], [0.5323, 0.8888]], [[0.8206, 0.9813], [0.9547, 0.7777]]], [[[0.9559, 0.4702], [0.775, 0.0034]], [[0.928, 0.9335], [0.4118, 0.091]]]]]], Add52745), 
LCon41382 = concatenate_layer([Add52745,[[[[[0.9301], [0.7912]], [[0.8761], [0.897]]], [[[0.3718], [0.4064]], [[0.1181], [0.6742]]]]]], 4, Con41382), 
LMul27496 = multiply_layer([[[[[[0.79]]]]], [[[[[0.0526]]]]]], Mul27496), 
LCon7139 = conv3D_layer(Mul27496, 1, 2, 1,[[[[[0.3353, 0.925, 0.5084]]], [[[0.5646, 0.4012, 0.7238]]]]],[0, 0, 0], 1, 1, 1, true, 1, 1, 1, Con7139), 
LMas29158 = masking_layer(Con7139, 2, Mas29158), 
LZer40332 = zero_padding3D_layer(Mas29158, 1, 0, 1, 0, 1, 0, Zer40332), 
LMul90227 = multiply_layer([Con41382,Zer40332], Mul90227), 
exec_layers([LAdd52745,LCon41382,LMul27496,LCon7139,LMas29158,LZer40332,LMul90227],["Add52745","Con41382","Mul27496","Con7139","Mas29158","Zer40332","Mul90227"],Mul90227,"Mul90227")

Actual (Unparsed): [[[[[0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000]], [[0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000]]], [[[0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000]], [[0.0000000, 0.0000000, 0.0000000], [0.0109305, 0.0211867, 0.0142432]]]]]

Expected (Unparsed): [[[[[0.0,0.0,0.0],[0.0,0.0,0.0]],[[0.0,0.0,0.0],[0.0,0.0,0.0]]],[[[0.0,0.0,0.0],[0.0,0.0,0.0]],[[0.0,0.0,0.0],[0.0109304825889,0.021186722440000003,0.01424318533712]]]]]

Actual:   [[[[[0, 0, 0], [0, 0, 0]], [[0, 0, 0], [0, 0, 0]]], [[[0, 0, 0], [0, 0, 0]], [[0, 0, 0], [0.011, 0.0212, 0.0143]]]]]

Expected: [[[[[0, 0, 0], [0, 0, 0]], [[0, 0, 0], [0, 0, 0]]], [[[0, 0, 0], [0, 0, 0]], [[0, 0, 0], [0.011, 0.0212, 0.0143]]]]]