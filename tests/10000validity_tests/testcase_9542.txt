import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Max56560 = tf.keras.layers.Input(shape=([1, 1]))
in1Max56560 = tf.keras.layers.Input(shape=([1, 1]))
in0Con9028 = tf.keras.layers.Input(shape=([2]))
in0Den46267 = tf.keras.layers.Input(shape=([5, 4, 3]))

Max56560 = keras.layers.Maximum(name = 'Max56560', )([in0Max56560,in1Max56560])
Fla33099 = keras.layers.Flatten(name = 'Fla33099', )(Max56560)
Con9028 = keras.layers.Concatenate(axis=1, name = 'Con9028', )([Fla33099,in0Con9028])
Den46267 = keras.layers.Dense(1,name = 'Den46267', )(in0Den46267)
Res20268 = keras.layers.Reshape((5, 4), name = 'Res20268', )(Den46267)
Sim23478 = keras.layers.SimpleRNN(3,name = 'Sim23478', )(Res20268)
Max49914 = keras.layers.Maximum(name = 'Max49914', )([Con9028,Sim23478])
Thr50064 = keras.layers.ThresholdedReLU(theta=6.923868397619275, name = 'Thr50064', )(Max49914)
model = tf.keras.models.Model(inputs=[in0Max56560,in1Max56560,in0Con9028,in0Den46267], outputs=Thr50064)
w = model.get_layer('Den46267').get_weights() 
w[0] = np.array([[0.8142], [0.1602], [0.4707]])
w[1] = np.array([0.5434])
model.get_layer('Den46267').set_weights(w) 
w = model.get_layer('Sim23478').get_weights() 
w[0] = np.array([[3, 5, 2], [2, 3, 10], [4, 1, 8], [3, 3, 6]])
w[1] = np.array([[6, 4, 6], [1, 2, 9], [9, 3, 9]])
w[2] = np.array([2, 3, 5])
model.get_layer('Sim23478').set_weights(w) 
in0Max56560 = tf.constant([[[0.4755]]])
in1Max56560 = tf.constant([[[0.575]]])
in0Con9028 = tf.constant([[0.2995, 0.555]])
in0Den46267 = tf.constant([[[[0.6575, 0.1738, 0.8919], [0.3712, 0.1343, 0.6033], [0.2938, 0.9051, 0.1457], [0.1489, 0.1491, 0.8451]], [[0.803, 0.151, 0.7546], [0.5936, 0.6685, 0.3099], [0.7567, 0.9867, 0.35], [0.0824, 0.3673, 0.7584]], [[0.5592, 0.4534, 0.8764], [0.4083, 0.8358, 0.1911], [0.7734, 0.3702, 0.9927], [0.71, 0.0325, 0.4055]], [[0.2227, 0.9638, 0.8932], [0.9612, 0.7187, 0.3718], [0.7706, 0.8277, 0.6092], [0.639, 0.7687, 0.8055]], [[0.9861, 0.4739, 0.6381], [0.2494, 0.8118, 0.6321], [0.9175, 0.2944, 0.5331], [0.4142, 0.4299, 0.2914]]]])
print (np.array2string(model.predict([in0Max56560,in1Max56560,in0Con9028,in0Den46267],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Thr50064.png')

LMax56560 = maximum_layer([[[[0.4755]]], [[[0.575]]]], Max56560), 
LFla33099 = flatten_layer(Max56560, Fla33099), 
LCon9028 = concatenate_layer([Fla33099,[[0.2995, 0.555]]], 1, Con9028), 
LDen46267 = dense_layer([[[[0.6575, 0.1738, 0.8919], [0.3712, 0.1343, 0.6033], [0.2938, 0.9051, 0.1457], [0.1489, 0.1491, 0.8451]], [[0.803, 0.151, 0.7546], [0.5936, 0.6685, 0.3099], [0.7567, 0.9867, 0.35], [0.0824, 0.3673, 0.7584]], [[0.5592, 0.4534, 0.8764], [0.4083, 0.8358, 0.1911], [0.7734, 0.3702, 0.9927], [0.71, 0.0325, 0.4055]], [[0.2227, 0.9638, 0.8932], [0.9612, 0.7187, 0.3718], [0.7706, 0.8277, 0.6092], [0.639, 0.7687, 0.8055]], [[0.9861, 0.4739, 0.6381], [0.2494, 0.8118, 0.6321], [0.9175, 0.2944, 0.5331], [0.4142, 0.4299, 0.2914]]]], [[0.8142], [0.1602], [0.4707]],[0.5434], Den46267), 
LRes20268 = reshape_layer(Den46267, [5, 4], Res20268), 
LSim23478 = simple_rnn_layer(Res20268,[[3, 5, 2], [2, 3, 10], [4, 1, 8], [3, 3, 6]],[[6, 4, 6], [1, 2, 9], [9, 3, 9]],[2, 3, 5], Sim23478), 
LMax49914 = maximum_layer([Con9028,Sim23478], Max49914), 
LThr50064 = thresholded_relu_layer(Max49914, 6.923868397619275, Thr50064), 
exec_layers([LMax56560,LFla33099,LCon9028,LDen46267,LRes20268,LSim23478,LMax49914,LThr50064],["Max56560","Fla33099","Con9028","Den46267","Res20268","Sim23478","Max49914","Thr50064"],Thr50064,"Thr50064")

Actual (Unparsed): [[0.0000000, 0.0000000, 0.0000000]]

Expected (Unparsed): [[0,0,0]]

Actual:   [[0, 0, 0]]

Expected: [[0, 0, 0]]