import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Up_64581 = tf.keras.layers.Input(shape=([2, 2, 3, 1]))

Up_64581 = keras.layers.UpSampling3D(size=(2, 1, 2), name = 'Up_64581', )(in0Up_64581)
Fla85113 = keras.layers.Flatten(name = 'Fla85113', )(Up_64581)
model = tf.keras.models.Model(inputs=[in0Up_64581], outputs=Fla85113)
in0Up_64581 = tf.constant([[[[[1.8315], [1.5852], [1.2648]], [[1.8187], [1.438], [1.2796]]], [[[1.9517], [1.3613], [1.1103]], [[1.7913], [1.7705], [1.2805]]]]])
print (np.array2string(model.predict([in0Up_64581],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Fla85113.png')

LUp_64581 = up_sampling3D_layer([[[[[1.8315], [1.5852], [1.2648]], [[1.8187], [1.438], [1.2796]]], [[[1.9517], [1.3613], [1.1103]], [[1.7913], [1.7705], [1.2805]]]]], 2, 1, 2, Up_64581), 
LFla85113 = flatten_layer(Up_64581, Fla85113), 
exec_layers([LUp_64581,LFla85113],["Up_64581","Fla85113"],Fla85113,"Fla85113")

Actual (Unparsed): [[1.8315001, 1.8315001, 1.5852000, 1.5852000, 1.2648000, 1.2648000, 1.8187000, 1.8187000, 1.4380000, 1.4380000, 1.2796000, 1.2796000, 1.8315001, 1.8315001, 1.5852000, 1.5852000, 1.2648000, 1.2648000, 1.8187000, 1.8187000, 1.4380000, 1.4380000, 1.2796000, 1.2796000, 1.9517000, 1.9517000, 1.3613000, 1.3613000, 1.1102999, 1.1102999, 1.7913001, 1.7913001, 1.7704999, 1.7704999, 1.2805001, 1.2805001, 1.9517000, 1.9517000, 1.3613000, 1.3613000, 1.1102999, 1.1102999, 1.7913001, 1.7913001, 1.7704999, 1.7704999, 1.2805001, 1.2805001]]

Expected (Unparsed): [[1.8315,1.8315,1.5852,1.5852,1.2648,1.2648,1.8187,1.8187,1.438,1.438,1.2796,1.2796,1.8315,1.8315,1.5852,1.5852,1.2648,1.2648,1.8187,1.8187,1.438,1.438,1.2796,1.2796,1.9517,1.9517,1.3613,1.3613,1.1103,1.1103,1.7913,1.7913,1.7705,1.7705,1.2805,1.2805,1.9517,1.9517,1.3613,1.3613,1.1103,1.1103,1.7913,1.7913,1.7705,1.7705,1.2805,1.2805]]

Actual:   [[1.8316, 1.8316, 1.5852, 1.5852, 1.2648, 1.2648, 1.8187, 1.8187, 1.438, 1.438, 1.2796, 1.2796, 1.8316, 1.8316, 1.5852, 1.5852, 1.2648, 1.2648, 1.8187, 1.8187, 1.438, 1.438, 1.2796, 1.2796, 1.9517, 1.9517, 1.3613, 1.3613, 1.1103, 1.1103, 1.7914, 1.7914, 1.7705, 1.7705, 1.2806, 1.2806, 1.9517, 1.9517, 1.3613, 1.3613, 1.1103, 1.1103, 1.7914, 1.7914, 1.7705, 1.7705, 1.2806, 1.2806]]

Expected: [[1.8315, 1.8315, 1.5852, 1.5852, 1.2648, 1.2648, 1.8187, 1.8187, 1.438, 1.438, 1.2796, 1.2796, 1.8315, 1.8315, 1.5852, 1.5852, 1.2648, 1.2648, 1.8187, 1.8187, 1.438, 1.438, 1.2796, 1.2796, 1.9517, 1.9517, 1.3613, 1.3613, 1.1103, 1.1103, 1.7913, 1.7913, 1.7705, 1.7705, 1.2805, 1.2805, 1.9517, 1.9517, 1.3613, 1.3613, 1.1103, 1.1103, 1.7913, 1.7913, 1.7705, 1.7705, 1.2805, 1.2805]]