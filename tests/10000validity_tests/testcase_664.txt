import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Up_26567 = tf.keras.layers.Input(shape=([3, 4, 3]))
in0Up_74733 = tf.keras.layers.Input(shape=([2, 3]))
in0Con93982 = tf.keras.layers.Input(shape=([70]))

Up_26567 = keras.layers.UpSampling2D(size=(2, 1), name = 'Up_26567', )(in0Up_26567)
Res32357 = keras.layers.Reshape((6, 12), name = 'Res32357', )(Up_26567)
Fla8169 = keras.layers.Flatten(name = 'Fla8169', )(Res32357)
Up_74733 = keras.layers.UpSampling1D(size=(2), name = 'Up_74733', )(in0Up_74733)
Sim67288 = keras.layers.SimpleRNN(2,name = 'Sim67288', )(Up_74733)
Con93982 = keras.layers.Concatenate(axis=1, name = 'Con93982', )([Sim67288,in0Con93982])
Mul96321 = keras.layers.Multiply(name = 'Mul96321', )([Fla8169,Con93982])
Res1060 = keras.layers.Reshape((72, 1), name = 'Res1060', )(Mul96321)
Res11588 = keras.layers.Reshape((72, 1, 1), name = 'Res11588', )(Res1060)
Res73807 = keras.layers.Reshape((72, 1, 1, 1), name = 'Res73807', )(Res11588)
Glo35459 = keras.layers.GlobalAveragePooling3D(name = 'Glo35459', )(Res73807)
model = tf.keras.models.Model(inputs=[in0Up_26567,in0Up_74733,in0Con93982], outputs=Glo35459)
w = model.get_layer('Sim67288').get_weights() 
w[0] = np.array([[5, 2], [3, 4], [3, 10]])
w[1] = np.array([[2, 7], [10, 9]])
w[2] = np.array([1, 8])
model.get_layer('Sim67288').set_weights(w) 
in0Up_26567 = tf.constant([[[[1.7476, 1.626, 1.9764], [1.5095, 1.2587, 1.9079], [1.8826, 1.1632, 1.4931], [1.6088, 1.4013, 1.6771]], [[1.0173, 1.6656, 1.9714], [1.4087, 1.5268, 1.6287], [1.5163, 1.7037, 1.3983], [1.5818, 1.4902, 1.5272]], [[1.7985, 1.7933, 1.6456], [1.5348, 1.9587, 1.6861], [1.2979, 1.9007, 1.5916], [1.2742, 1.9333, 1.6144]]]])
in0Up_74733 = tf.constant([[[1.4582, 1.6914, 1.2416], [1.7601, 1.7771, 1.817]]])
in0Con93982 = tf.constant([[0.2865, 0.9341, 0.2688, 0.3897, 0.9801, 0.1115, 0.3106, 0.1635, 0.5506, 0.4719, 0.5765, 0.962, 0.7955, 0.3585, 0.0452, 0.4168, 0.3605, 0.2507, 0.8329, 0.774, 0.6633, 0.6163, 0.3986, 0.3448, 0.3696, 0.3863, 0.6113, 0.715, 0.3389, 0.5451, 0.1177, 0.8526, 0.6595, 0.3473, 0.097, 0.3509, 0.2443, 0.1024, 0.8025, 0.0505, 0.477, 0.2985, 0.2547, 0.1918, 0.5632, 0.0759, 0.0713, 0.0723, 0.5677, 0.7108, 0.7, 0.9007, 0.6006, 0.8136, 0.2527, 0.1735, 0.2526, 0.4127, 0.7317, 0.4349, 0.1741, 0.9527, 0.685, 0.7232, 0.6407, 0.5091, 0.2318, 0.3549, 0.059, 0.198]])
print (np.array2string(model.predict([in0Up_26567,in0Up_74733,in0Con93982],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Glo35459.png')

LUp_26567 = up_sampling2D_layer([[[[1.7476, 1.626, 1.9764], [1.5095, 1.2587, 1.9079], [1.8826, 1.1632, 1.4931], [1.6088, 1.4013, 1.6771]], [[1.0173, 1.6656, 1.9714], [1.4087, 1.5268, 1.6287], [1.5163, 1.7037, 1.3983], [1.5818, 1.4902, 1.5272]], [[1.7985, 1.7933, 1.6456], [1.5348, 1.9587, 1.6861], [1.2979, 1.9007, 1.5916], [1.2742, 1.9333, 1.6144]]]], 2, 1, Up_26567), 
LRes32357 = reshape_layer(Up_26567, [6, 12], Res32357), 
LFla8169 = flatten_layer(Res32357, Fla8169), 
LUp_74733 = up_sampling1D_layer([[[1.4582, 1.6914, 1.2416], [1.7601, 1.7771, 1.817]]], 2, Up_74733), 
LSim67288 = simple_rnn_layer(Up_74733,[[5, 2], [3, 4], [3, 10]],[[2, 7], [10, 9]],[1, 8], Sim67288), 
LCon93982 = concatenate_layer([Sim67288,[[0.2865, 0.9341, 0.2688, 0.3897, 0.9801, 0.1115, 0.3106, 0.1635, 0.5506, 0.4719, 0.5765, 0.962, 0.7955, 0.3585, 0.0452, 0.4168, 0.3605, 0.2507, 0.8329, 0.774, 0.6633, 0.6163, 0.3986, 0.3448, 0.3696, 0.3863, 0.6113, 0.715, 0.3389, 0.5451, 0.1177, 0.8526, 0.6595, 0.3473, 0.097, 0.3509, 0.2443, 0.1024, 0.8025, 0.0505, 0.477, 0.2985, 0.2547, 0.1918, 0.5632, 0.0759, 0.0713, 0.0723, 0.5677, 0.7108, 0.7, 0.9007, 0.6006, 0.8136, 0.2527, 0.1735, 0.2526, 0.4127, 0.7317, 0.4349, 0.1741, 0.9527, 0.685, 0.7232, 0.6407, 0.5091, 0.2318, 0.3549, 0.059, 0.198]]], 1, Con93982), 
LMul96321 = multiply_layer([Fla8169,Con93982], Mul96321), 
LRes1060 = reshape_layer(Mul96321, [72, 1], Res1060), 
LRes11588 = reshape_layer(Res1060, [72, 1, 1], Res11588), 
LRes73807 = reshape_layer(Res11588, [72, 1, 1, 1], Res73807), 
LGlo35459 = global_average_pooling3D_layer(Res73807, Glo35459), 
exec_layers([LUp_26567,LRes32357,LFla8169,LUp_74733,LSim67288,LCon93982,LMul96321,LRes1060,LRes11588,LRes73807,LGlo35459],["Up_26567","Res32357","Fla8169","Up_74733","Sim67288","Con93982","Mul96321","Res1060","Res11588","Res73807","Glo35459"],Glo35459,"Glo35459")

Actual (Unparsed): [[0.7593685]]

Expected (Unparsed): [[0.7593685384722222]]

Actual:   [[0.7594]]

Expected: [[0.7594]]