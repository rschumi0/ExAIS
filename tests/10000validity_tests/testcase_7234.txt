import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Min74813 = tf.keras.layers.Input(shape=([1, 2, 2, 2]))
in1Min74813 = tf.keras.layers.Input(shape=([1, 2, 2, 2]))
in0Dot27325 = tf.keras.layers.Input(shape=([3]))
in1Dot27325 = tf.keras.layers.Input(shape=([3]))
in0Con23022 = tf.keras.layers.Input(shape=([15]))

Min74813 = keras.layers.Minimum(name = 'Min74813', )([in0Min74813,in1Min74813])
Res22763 = keras.layers.Reshape((1, 2, 4), name = 'Res22763', )(Min74813)
Res73508 = keras.layers.Reshape((1, 8), name = 'Res73508', )(Res22763)
Up_63573 = keras.layers.UpSampling1D(size=(2), name = 'Up_63573', )(Res73508)
Fla65474 = keras.layers.Flatten(name = 'Fla65474', )(Up_63573)
Dot27325 = keras.layers.Dot(axes=(1, 1), name = 'Dot27325', )([in0Dot27325,in1Dot27325])
Con23022 = keras.layers.Concatenate(axis=1, name = 'Con23022', )([Dot27325,in0Con23022])
Ave16747 = keras.layers.Average(name = 'Ave16747', )([Fla65474,Con23022])
model = tf.keras.models.Model(inputs=[in0Min74813,in1Min74813,in0Dot27325,in1Dot27325,in0Con23022], outputs=Ave16747)
in0Min74813 = tf.constant([[[[[0.8891, 0.5858], [0.1071, 0.9984]], [[0.5312, 0.5279], [0.0063, 0.1236]]]]])
in1Min74813 = tf.constant([[[[[0.4101, 0.8515], [0.3308, 0.8782]], [[0.0579, 0.9394], [0.8084, 0.2979]]]]])
in0Dot27325 = tf.constant([[0.2174, 0.2947, 0.257]])
in1Dot27325 = tf.constant([[0.5565, 0.8059, 0.2314]])
in0Con23022 = tf.constant([[0.1095, 0.255, 0.4511, 0.2013, 0.5892, 0.8023, 0.849, 0.3213, 0.5961, 0.6693, 0.244, 0.3075, 0.7384, 0.9683, 0.8234]])
print (np.array2string(model.predict([in0Min74813,in1Min74813,in0Dot27325,in1Dot27325,in0Con23022],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Ave16747.png')

LMin74813 = minimum_layer([[[[[[0.8891, 0.5858], [0.1071, 0.9984]], [[0.5312, 0.5279], [0.0063, 0.1236]]]]], [[[[[0.4101, 0.8515], [0.3308, 0.8782]], [[0.0579, 0.9394], [0.8084, 0.2979]]]]]], Min74813), 
LRes22763 = reshape_layer(Min74813, [1, 2, 4], Res22763), 
LRes73508 = reshape_layer(Res22763, [1, 8], Res73508), 
LUp_63573 = up_sampling1D_layer(Res73508, 2, Up_63573), 
LFla65474 = flatten_layer(Up_63573, Fla65474), 
LDot27325 = dot_layer([[0.2174, 0.2947, 0.257]], [[0.5565, 0.8059, 0.2314]], 1, 1, Dot27325), 
LCon23022 = concatenate_layer([Dot27325,[[0.1095, 0.255, 0.4511, 0.2013, 0.5892, 0.8023, 0.849, 0.3213, 0.5961, 0.6693, 0.244, 0.3075, 0.7384, 0.9683, 0.8234]]], 1, Con23022), 
LAve16747 = average_layer([Fla65474,Con23022], Ave16747), 
exec_layers([LMin74813,LRes22763,LRes73508,LUp_63573,LFla65474,LDot27325,LCon23022,LAve16747],["Min74813","Res22763","Res73508","Up_63573","Fla65474","Dot27325","Con23022","Ave16747"],Ave16747,"Ave16747")

Actual (Unparsed): [[0.4140258, 0.3476500, 0.1810500, 0.6646500, 0.1296000, 0.5585500, 0.4043000, 0.4863000, 0.3657000, 0.5909500, 0.3882000, 0.5611000, 0.1827000, 0.6331500, 0.4873000, 0.4735000]]

Expected (Unparsed): [[0.414025815,0.34765,0.18105,0.66465,0.1296,0.55855,0.4043,0.4863,0.3657,0.59095,0.3882,0.5610999999999999,0.1827,0.63315,0.4873,0.47350000000000003]]

Actual:   [[0.4141, 0.3477, 0.1811, 0.6647, 0.1296, 0.5586, 0.4043, 0.4863, 0.3657, 0.591, 0.3882, 0.5611, 0.1827, 0.6332, 0.4873, 0.4735]]

Expected: [[0.4141, 0.3477, 0.1811, 0.6647, 0.1296, 0.5586, 0.4043, 0.4863, 0.3657, 0.591, 0.3882, 0.5611, 0.1827, 0.6332, 0.4873, 0.4736]]