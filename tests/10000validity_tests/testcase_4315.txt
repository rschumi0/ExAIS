import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Glo30716 = tf.keras.layers.Input(shape=([1, 1, 2, 2]))
in0Con64760 = tf.keras.layers.Input(shape=([48, 1]))
in0Con51814 = tf.keras.layers.Input(shape=([1, 2, 2, 1]))
in0Con7598 = tf.keras.layers.Input(shape=([48, 1]))
in0Glo90841 = tf.keras.layers.Input(shape=([2, 1]))
in0Con40401 = tf.keras.layers.Input(shape=([2, 1]))
in0Ave59346 = tf.keras.layers.Input(shape=([2, 2]))
in1Ave59346 = tf.keras.layers.Input(shape=([2, 2]))

Glo30716 = keras.layers.GlobalMaxPool3D(name = 'Glo30716', )(in0Glo30716)
Res80755 = keras.layers.Reshape((2, 1), name = 'Res80755', )(Glo30716)
Zer65375 = keras.layers.ZeroPadding1D(padding=((46, 0)), name = 'Zer65375', )(Res80755)
Con64760 = keras.layers.Concatenate(axis=2, name = 'Con64760', )([Zer65375,in0Con64760])
Con51814 = keras.layers.Conv3DTranspose(4, (1, 1, 1),strides=(1, 1, 3), padding='valid', name = 'Con51814', )(in0Con51814)
Res59595 = keras.layers.Reshape((1, 2, 24), name = 'Res59595', )(Con51814)
Res45533 = keras.layers.Reshape((1, 48), name = 'Res45533', )(Res59595)
Glo34746 = keras.layers.GlobalMaxPool1D(name = 'Glo34746', )(Res45533)
Res51984 = keras.layers.Reshape((48, 1), name = 'Res51984', )(Glo34746)
Con7598 = keras.layers.Concatenate(axis=2, name = 'Con7598', )([Res51984,in0Con7598])
Glo90841 = keras.layers.GlobalMaxPool1D(name = 'Glo90841', )(in0Glo90841)
Res20846 = keras.layers.Reshape((1, 1), name = 'Res20846', )(Glo90841)
Zer77107 = keras.layers.ZeroPadding1D(padding=((1, 0)), name = 'Zer77107', )(Res20846)
Con40401 = keras.layers.Concatenate(axis=2, name = 'Con40401', )([Zer77107,in0Con40401])
Ave59346 = keras.layers.Average(name = 'Ave59346', )([in0Ave59346,in1Ave59346])
ELU18572 = keras.layers.ELU(alpha=3.3791843032134175, name = 'ELU18572', )(Ave59346)
Max6998 = keras.layers.Maximum(name = 'Max6998', )([Con40401,ELU18572])
Zer65947 = keras.layers.ZeroPadding1D(padding=((46, 0)), name = 'Zer65947', )(Max6998)
Ave39436 = keras.layers.Average(name = 'Ave39436', )([Con7598,Zer65947])
Ave97660 = keras.layers.Average(name = 'Ave97660', )([Con64760,Ave39436])
model = tf.keras.models.Model(inputs=[in0Glo30716,in0Con64760,in0Con51814,in0Con7598,in0Glo90841,in0Con40401,in0Ave59346,in1Ave59346], outputs=Ave97660)
w = model.get_layer('Con51814').get_weights() 
w[0] = np.array([[[[[0.5353], [0.5018], [0.2732], [0.3671]]]]])
w[1] = np.array([0, 0, 0, 0])
model.get_layer('Con51814').set_weights(w) 
in0Glo30716 = tf.constant([[[[[1.3589, 1.5029], [1.762, 1.1713]]]]])
in0Con64760 = tf.constant([[[0.3266], [0.5135], [0.5857], [0.105], [0.6494], [0.7203], [0.8207], [0.5685], [0.3999], [0.0153], [0.3045], [0.9942], [0.1398], [0.6848], [0.5391], [0.0313], [0.6951], [0.2797], [0.3649], [0.5096], [0.6812], [0.2442], [0.9937], [0.6049], [0.7622], [0.1657], [0.5537], [0.03], [0.1727], [0.6287], [0.3578], [0.1052], [0.6855], [0.7545], [0.9645], [0.9925], [0.5171], [0.5123], [0.111], [0.2097], [0.6293], [0.7995], [0.7678], [0.7795], [0.5077], [0.1068], [0.892], [0.0147]]])
in0Con51814 = tf.constant([[[[[0.8596], [0.0568]], [[0.1782], [0.1376]]]]])
in0Con7598 = tf.constant([[[0.9546], [0.3258], [0.2671], [0.8802], [0.3032], [0.8879], [0.5187], [0.4623], [0.1675], [0.3338], [0.5154], [0.5756], [0.8712], [0.3633], [0.7788], [0.6416], [0.9599], [0.8283], [0.5878], [0.9401], [0.2146], [0.195], [0.0692], [0.1747], [0.5285], [0.7248], [0.775], [0.6377], [0.0548], [0.8074], [0.5112], [0.4464], [0.3828], [0.4011], [0.9275], [0.8546], [0.8843], [0.3302], [0.6505], [0.9577], [0.7888], [0.2693], [0.5499], [0.2027], [0.9887], [0.6051], [0.0636], [0.9929]]])
in0Glo90841 = tf.constant([[[1.2543], [1.6802]]])
in0Con40401 = tf.constant([[[0.0012], [0.628]]])
in0Ave59346 = tf.constant([[[0.2664, 0.8992], [0.7118, 0.7298]]])
in1Ave59346 = tf.constant([[[0.5316, 0.1244], [0.7981, 0.3289]]])
print (np.array2string(model.predict([in0Glo30716,in0Con64760,in0Con51814,in0Con7598,in0Glo90841,in0Con40401,in0Ave59346,in1Ave59346],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Ave97660.png')

LGlo30716 = global_max_pool3D_layer([[[[[1.3589, 1.5029], [1.762, 1.1713]]]]], Glo30716), 
LRes80755 = reshape_layer(Glo30716, [2, 1], Res80755), 
LZer65375 = zero_padding1D_layer(Res80755, 46, 0, Zer65375), 
LCon64760 = concatenate_layer([Zer65375,[[[0.3266], [0.5135], [0.5857], [0.105], [0.6494], [0.7203], [0.8207], [0.5685], [0.3999], [0.0153], [0.3045], [0.9942], [0.1398], [0.6848], [0.5391], [0.0313], [0.6951], [0.2797], [0.3649], [0.5096], [0.6812], [0.2442], [0.9937], [0.6049], [0.7622], [0.1657], [0.5537], [0.03], [0.1727], [0.6287], [0.3578], [0.1052], [0.6855], [0.7545], [0.9645], [0.9925], [0.5171], [0.5123], [0.111], [0.2097], [0.6293], [0.7995], [0.7678], [0.7795], [0.5077], [0.1068], [0.892], [0.0147]]]], 2, Con64760), 
LCon51814 = conv3D_transpose_layer([[[[[0.8596], [0.0568]], [[0.1782], [0.1376]]]]], 1, 1, 1,[[[[[0.5353], [0.5018], [0.2732], [0.3671]]]]],[0, 0, 0, 0], 1, 1, 3, false, Con51814), 
LRes59595 = reshape_layer(Con51814, [1, 2, 24], Res59595), 
LRes45533 = reshape_layer(Res59595, [1, 48], Res45533), 
LGlo34746 = global_max_pool1D_layer(Res45533, Glo34746), 
LRes51984 = reshape_layer(Glo34746, [48, 1], Res51984), 
LCon7598 = concatenate_layer([Res51984,[[[0.9546], [0.3258], [0.2671], [0.8802], [0.3032], [0.8879], [0.5187], [0.4623], [0.1675], [0.3338], [0.5154], [0.5756], [0.8712], [0.3633], [0.7788], [0.6416], [0.9599], [0.8283], [0.5878], [0.9401], [0.2146], [0.195], [0.0692], [0.1747], [0.5285], [0.7248], [0.775], [0.6377], [0.0548], [0.8074], [0.5112], [0.4464], [0.3828], [0.4011], [0.9275], [0.8546], [0.8843], [0.3302], [0.6505], [0.9577], [0.7888], [0.2693], [0.5499], [0.2027], [0.9887], [0.6051], [0.0636], [0.9929]]]], 2, Con7598), 
LGlo90841 = global_max_pool1D_layer([[[1.2543], [1.6802]]], Glo90841), 
LRes20846 = reshape_layer(Glo90841, [1, 1], Res20846), 
LZer77107 = zero_padding1D_layer(Res20846, 1, 0, Zer77107), 
LCon40401 = concatenate_layer([Zer77107,[[[0.0012], [0.628]]]], 2, Con40401), 
LAve59346 = average_layer([[[[0.2664, 0.8992], [0.7118, 0.7298]]], [[[0.5316, 0.1244], [0.7981, 0.3289]]]], Ave59346), 
LELU18572 = elu_layer(Ave59346, 3.3791843032134175, ELU18572), 
LMax6998 = maximum_layer([Con40401,ELU18572], Max6998), 
LZer65947 = zero_padding1D_layer(Max6998, 46, 0, Zer65947), 
LAve39436 = average_layer([Con7598,Zer65947], Ave39436), 
LAve97660 = average_layer([Con64760,Ave39436], Ave97660), 
exec_layers([LGlo30716,LRes80755,LZer65375,LCon64760,LCon51814,LRes59595,LRes45533,LGlo34746,LRes51984,LCon7598,LGlo90841,LRes20846,LZer77107,LCon40401,LAve59346,LELU18572,LMax6998,LZer65947,LAve39436,LAve97660],["Glo30716","Res80755","Zer65375","Con64760","Con51814","Res59595","Res45533","Glo34746","Res51984","Con7598","Glo90841","Res20846","Zer77107","Con40401","Ave59346","ELU18572","Max6998","Zer65947","Ave39436","Ave97660"],Ave97660,"Ave97660")

Actual (Unparsed): [[[0.1150360, 0.4019500], [0.1078368, 0.3382000], [0.0587107, 0.3596250], [0.0788898, 0.2725500], [0.0000000, 0.4005000], [0.0000000, 0.5821250], [0.0000000, 0.5400250], [0.0000000, 0.3998250], [0.0000000, 0.2418250], [0.0000000, 0.0911000], [0.0000000, 0.2811000], [0.0000000, 0.6410000], [0.0076013, 0.2877000], [0.0071256, 0.4332250], [0.0038794, 0.4642500], [0.0052128, 0.1760500], [0.0000000, 0.5875250], [0.0000000, 0.3469250], [0.0000000, 0.3294000], [0.0000000, 0.4898250], [0.0000000, 0.3942500], [0.0000000, 0.1708500], [0.0000000, 0.5141500], [0.0000000, 0.3461250], [0.0238476, 0.5132250], [0.0223552, 0.2640500], [0.0121711, 0.4706000], [0.0163543, 0.1744250], [0.0000000, 0.1000500], [0.0000000, 0.5162000], [0.0000000, 0.3067000], [0.0000000, 0.1642000], [0.0000000, 0.4384500], [0.0000000, 0.4775250], [0.0000000, 0.7141250], [0.0000000, 0.7099000], [0.0184143, 0.4796250], [0.0172619, 0.3387000], [0.0093981, 0.2181250], [0.0126282, 0.3442750], [0.0000000, 0.5118500], [0.0000000, 0.4670750], [0.0000000, 0.5213750], [0.0000000, 0.4404250], [0.0000000, 0.5010250], [0.0000000, 0.2046750], [0.9807500, 0.5898500], [1.1715000, 0.4125750]]]

Expected (Unparsed): [[[0.11503597,0.40195000000000003],[0.10783682000000001,0.33819999999999995],[0.05871068,0.359625],[0.07888979,0.27255],[0,0.40049999999999997],[0,0.582125],[0,0.540025],[0,0.399825],[0,0.24182499999999998],[0,0.0911],[0,0.2811],[0,0.641],[0.00760126,0.2877],[0.00712556,0.43322499999999997],[0.00387944,0.46425000000000005],[0.00521282,0.17604999999999998],[0,0.5875250000000001],[0,0.34692500000000004],[0,0.3294],[0,0.48982500000000007],[0,0.39425],[0,0.17085],[0,0.51415],[0,0.346125],[0.023847615,0.513225],[0.02235519,0.26405],[0.01217106,0.4706],[0.016354305,0.174425],[0,0.10005],[0,0.5162],[0,0.3067],[0,0.1642],[0,0.43845],[0,0.477525],[0,0.714125],[0,0.7099],[0.01841432,0.47962499999999997],[0.01726192,0.3387],[0.00939808,0.21812499999999999],[0.012628239999999999,0.344275],[0,0.5118499999999999],[0,0.467075],[0,0.521375],[0,0.44042499999999996],[0,0.501025],[0,0.204675],[0.98075,0.58985],[1.1715,0.412575]]]

Actual:   [[[0.1151, 0.402], [0.1079, 0.3382], [0.0588, 0.3597], [0.0789, 0.2726], [0, 0.4005], [0, 0.5822], [0, 0.5401], [0, 0.3999], [0, 0.2419], [0, 0.0911], [0, 0.2811], [0, 0.641], [0.0077, 0.2877], [0.0072, 0.4333], [0.0039, 0.4643], [0.0053, 0.1761], [0, 0.5876], [0, 0.347], [0, 0.3294], [0, 0.4899], [0, 0.3943], [0, 0.1709], [0, 0.5142], [0, 0.3462], [0.0239, 0.5133], [0.0224, 0.2641], [0.0122, 0.4706], [0.0164, 0.1745], [0, 0.1001], [0, 0.5162], [0, 0.3067], [0, 0.1642], [0, 0.4385], [0, 0.4776], [0, 0.7142], [0, 0.7099], [0.0185, 0.4797], [0.0173, 0.3387], [0.0094, 0.2182], [0.0127, 0.3443], [0, 0.5119], [0, 0.4671], [0, 0.5214], [0, 0.4405], [0, 0.5011], [0, 0.2047], [0.9808, 0.5899], [1.1715, 0.4126]]]

Expected: [[[0.1151, 0.402], [0.1079, 0.3382], [0.0588, 0.3597], [0.0789, 0.2726], [0, 0.4005], [0, 0.5822], [0, 0.5401], [0, 0.3999], [0, 0.2419], [0, 0.0911], [0, 0.2811], [0, 0.641], [0.0077, 0.2877], [0.0072, 0.4333], [0.0039, 0.4643], [0.0053, 0.1761], [0, 0.5876], [0, 0.347], [0, 0.3294], [0, 0.4899], [0, 0.3943], [0, 0.1709], [0, 0.5142], [0, 0.3462], [0.0239, 0.5133], [0.0224, 0.2641], [0.0122, 0.4706], [0.0164, 0.1745], [0, 0.1001], [0, 0.5162], [0, 0.3067], [0, 0.1642], [0, 0.4385], [0, 0.4776], [0, 0.7142], [0, 0.7099], [0.0185, 0.4797], [0.0173, 0.3387], [0.0094, 0.2182], [0.0127, 0.3443], [0, 0.5119], [0, 0.4671], [0, 0.5214], [0, 0.4405], [0, 0.5011], [0, 0.2047], [0.9808, 0.5899], [1.1715, 0.4126]]]