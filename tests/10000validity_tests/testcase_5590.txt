import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Loc67340 = tf.keras.layers.Input(shape=([1, 1]))

Loc67340 = keras.layers.LocallyConnected1D(4, (1),strides=(1), name = 'Loc67340', )(in0Loc67340)
Sim54285 = keras.layers.SimpleRNN(2,name = 'Sim54285', )(Loc67340)
ReL29546 = keras.layers.ReLU(max_value=4.978844524376547, negative_slope=8.574926295483618, threshold=4.89390120483919, name = 'ReL29546', )(Sim54285)
model = tf.keras.models.Model(inputs=[in0Loc67340], outputs=ReL29546)
w = model.get_layer('Loc67340').get_weights() 
w[0] = np.array([[[0.1135, 0.3956, 0.3433, 0.5453]]])
w[1] = np.array([[0, 0, 0, 0]])
model.get_layer('Loc67340').set_weights(w) 
w = model.get_layer('Sim54285').get_weights() 
w[0] = np.array([[10, 2], [2, 1], [6, 1], [10, 9]])
w[1] = np.array([[7, 4], [10, 4]])
w[2] = np.array([9, 9])
model.get_layer('Sim54285').set_weights(w) 
in0Loc67340 = tf.constant([[[0.8326]]])
print (np.array2string(model.predict([in0Loc67340],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='ReL29546.png')

LLoc67340 = locally_connected1D_layer([[[0.8326]]], 1,[[[0.1135, 0.3956, 0.3433, 0.5453]]],[[0, 0, 0, 0]], 1, Loc67340), 
LSim54285 = simple_rnn_layer(Loc67340,[[10, 2], [2, 1], [6, 1], [10, 9]],[[7, 4], [10, 4]],[9, 9], Sim54285), 
LReL29546 = relu_layer(Sim54285, 4.978844524376547, 8.574926295483618, 4.89390120483919, ReL29546), 
exec_layers([LLoc67340,LSim54285,LReL29546],["Loc67340","Sim54285","ReL29546"],ReL29546,"ReL29546")

Actual (Unparsed): [[-33.3899158, -33.3899158]]

Expected (Unparsed): [[-33.389915833390944,-33.38991583340567]]

Actual:   [[-33.3899, -33.3899]]

Expected: [[-33.3899, -33.3899]]