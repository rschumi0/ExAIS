import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Ave62937 = tf.keras.layers.Input(shape=([2, 1]))
in1Ave62937 = tf.keras.layers.Input(shape=([2, 1]))

Ave62937 = keras.layers.Average(name = 'Ave62937', )([in0Ave62937,in1Ave62937])
Up_84341 = keras.layers.UpSampling1D(size=(1), name = 'Up_84341', )(Ave62937)
Sep70316 = keras.layers.SeparableConv1D(4, (2),strides=(1), padding='valid', name = 'Sep70316', )(Up_84341)
model = tf.keras.models.Model(inputs=[in0Ave62937,in1Ave62937], outputs=Sep70316)
w = model.get_layer('Sep70316').get_weights() 
w[0] = np.array([[[0.1151]], [[0.6949]]])
w[1] = np.array([[[0.5644, 0.0043, 0.838, 0.9645]]])
w[2] = np.array([0, 0, 0, 0])
model.get_layer('Sep70316').set_weights(w) 
in0Ave62937 = tf.constant([[[0.9873], [0.1938]]])
in1Ave62937 = tf.constant([[[0.4671], [0.0322]]])
print (np.array2string(model.predict([in0Ave62937,in1Ave62937],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Sep70316.png')

LAve62937 = average_layer([[[[0.9873], [0.1938]]], [[[0.4671], [0.0322]]]], Ave62937), 
LUp_84341 = up_sampling1D_layer(Ave62937, 1, Up_84341), 
LSep70316 = separable_conv1D_layer(Up_84341, 2,[[[[0.1151]], [[0.6949]]],[[[0.5644, 0.0043, 0.838, 0.9645]]]],[0, 0, 0, 0], 1, false, Sep70316), 
exec_layers([LAve62937,LUp_84341,LSep70316],["Ave62937","Up_84341","Sep70316"],Sep70316,"Sep70316")

Actual (Unparsed): [[[0.0915595, 0.0006976, 0.1359441, 0.1564655]]]

Expected (Unparsed): [[[0.091559462648,0.000697565006,0.13594406395999997,0.15646545308999998]]]

Actual:   [[[0.0916, 0.0007, 0.136, 0.1565]]]

Expected: [[[0.0916, 0.0007, 0.136, 0.1565]]]