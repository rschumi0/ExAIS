import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Dot44385 = tf.keras.layers.Input(shape=([3]))
in1Dot44385 = tf.keras.layers.Input(shape=([3]))
in0Con61844 = tf.keras.layers.Input(shape=([3, 3, 3, 1]))
in0Sub37286 = tf.keras.layers.Input(shape=([2, 2, 3]))
in1Sub37286 = tf.keras.layers.Input(shape=([2, 2, 3]))
in0Con23289 = tf.keras.layers.Input(shape=([3, 3, 3, 1]))
in0Con40007 = tf.keras.layers.Input(shape=([2, 1, 2, 2]))

Dot44385 = keras.layers.Dot(axes=(1, 1), name = 'Dot44385', )([in0Dot44385,in1Dot44385])
Res41894 = keras.layers.Reshape((1, 1), name = 'Res41894', )(Dot44385)
Res22817 = keras.layers.Reshape((1, 1, 1), name = 'Res22817', )(Res41894)
Res95507 = keras.layers.Reshape((1, 1, 1, 1), name = 'Res95507', )(Res22817)
Zer82423 = keras.layers.ZeroPadding3D(padding=((2, 0), (2, 0), (2, 0)), name = 'Zer82423', )(Res95507)
Con61844 = keras.layers.Concatenate(axis=4, name = 'Con61844', )([Zer82423,in0Con61844])
Sub37286 = keras.layers.Subtract(name = 'Sub37286', )([in0Sub37286,in1Sub37286])
Res46596 = keras.layers.Reshape((2, 2, 3, 1), name = 'Res46596', )(Sub37286)
Zer20235 = keras.layers.ZeroPadding3D(padding=((1, 0), (1, 0), (0, 0)), name = 'Zer20235', )(Res46596)
Con23289 = keras.layers.Concatenate(axis=4, name = 'Con23289', )([Zer20235,in0Con23289])
Con40007 = keras.layers.Conv3DTranspose(2, (2, 1, 2),strides=(1, 1, 1), padding='valid', name = 'Con40007', )(in0Con40007)
Zer29735 = keras.layers.ZeroPadding3D(padding=((0, 0), (2, 0), (0, 0)), name = 'Zer29735', )(Con40007)
Mul60350 = keras.layers.Multiply(name = 'Mul60350', )([Con23289,Zer29735])
Sub27806 = keras.layers.Subtract(name = 'Sub27806', )([Con61844,Mul60350])
model = tf.keras.models.Model(inputs=[in0Dot44385,in1Dot44385,in0Con61844,in0Sub37286,in1Sub37286,in0Con23289,in0Con40007], outputs=Sub27806)
w = model.get_layer('Con40007').get_weights() 
w[0] = np.array([[[[[0.3038, 0.0754], [0.7993, 0.6597]], [[0.531, 0.9057], [0.9428, 0.797]]]], [[[[0.6313, 0.654], [0.3245, 0.6138]], [[0.7217, 0.614], [0.6276, 0.7694]]]]])
w[1] = np.array([0, 0])
model.get_layer('Con40007').set_weights(w) 
in0Dot44385 = tf.constant([[0.1024, 0.7825, 0.691]])
in1Dot44385 = tf.constant([[0.427, 0.8838, 0.1912]])
in0Con61844 = tf.constant([[[[[0.4448], [0.0237], [0.1865]], [[0.7279], [0.7658], [0.2181]], [[0.5731], [0.2199], [0.9699]]], [[[0.2187], [0.1769], [0.3363]], [[0.7153], [0.6218], [0.7595]], [[0.5271], [0.8023], [0.6579]]], [[[0.6786], [0.429], [0.1628]], [[0.2295], [0.6317], [0.6013]], [[0.1134], [0.756], [0.0442]]]]])
in0Sub37286 = tf.constant([[[[0.7714, 0.1288, 0.3302], [0.0638, 0.8234, 0.2923]], [[0.1657, 0.7122, 0.0705], [0.3543, 0.1971, 0.6694]]]])
in1Sub37286 = tf.constant([[[[0.0124, 0.9334, 0.2564], [0.0587, 0.3542, 0.9089]], [[0.6966, 0.7268, 0.8086], [0.4901, 0.1682, 0.268]]]])
in0Con23289 = tf.constant([[[[[0.688], [0.5833], [0.3945]], [[0.8011], [0.1092], [0.1924]], [[0.3547], [0.2334], [0.9328]]], [[[0.8721], [0.3694], [0.032]], [[0.0469], [0.5104], [0.7697]], [[0.2394], [0.9617], [0.5592]]], [[[0.8719], [0.5313], [0.2191]], [[0.7789], [0.1286], [0.7859]], [[0.0732], [0.5669], [0.7213]]]]])
in0Con40007 = tf.constant([[[[[0.9909, 0.9767], [0.0824, 0.2208]]], [[[0.8153, 0.2008], [0.1157, 0.3955]]]]])
print (np.array2string(model.predict([in0Dot44385,in1Dot44385,in0Con61844,in0Sub37286,in1Sub37286,in0Con23289,in0Con40007],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Sub27806.png')

LDot44385 = dot_layer([[0.1024, 0.7825, 0.691]], [[0.427, 0.8838, 0.1912]], 1, 1, Dot44385), 
LRes41894 = reshape_layer(Dot44385, [1, 1], Res41894), 
LRes22817 = reshape_layer(Res41894, [1, 1, 1], Res22817), 
LRes95507 = reshape_layer(Res22817, [1, 1, 1, 1], Res95507), 
LZer82423 = zero_padding3D_layer(Res95507, 2, 0, 2, 0, 2, 0, Zer82423), 
LCon61844 = concatenate_layer([Zer82423,[[[[[0.4448], [0.0237], [0.1865]], [[0.7279], [0.7658], [0.2181]], [[0.5731], [0.2199], [0.9699]]], [[[0.2187], [0.1769], [0.3363]], [[0.7153], [0.6218], [0.7595]], [[0.5271], [0.8023], [0.6579]]], [[[0.6786], [0.429], [0.1628]], [[0.2295], [0.6317], [0.6013]], [[0.1134], [0.756], [0.0442]]]]]], 4, Con61844), 
LSub37286 = subtract_layer([[[[0.7714, 0.1288, 0.3302], [0.0638, 0.8234, 0.2923]], [[0.1657, 0.7122, 0.0705], [0.3543, 0.1971, 0.6694]]]], [[[[0.0124, 0.9334, 0.2564], [0.0587, 0.3542, 0.9089]], [[0.6966, 0.7268, 0.8086], [0.4901, 0.1682, 0.268]]]], Sub37286), 
LRes46596 = reshape_layer(Sub37286, [2, 2, 3, 1], Res46596), 
LZer20235 = zero_padding3D_layer(Res46596, 1, 0, 1, 0, 0, 0, Zer20235), 
LCon23289 = concatenate_layer([Zer20235,[[[[[0.688], [0.5833], [0.3945]], [[0.8011], [0.1092], [0.1924]], [[0.3547], [0.2334], [0.9328]]], [[[0.8721], [0.3694], [0.032]], [[0.0469], [0.5104], [0.7697]], [[0.2394], [0.9617], [0.5592]]], [[[0.8719], [0.5313], [0.2191]], [[0.7789], [0.1286], [0.7859]], [[0.0732], [0.5669], [0.7213]]]]]], 4, Con23289), 
LCon40007 = conv3D_transpose_layer([[[[[0.9909, 0.9767], [0.0824, 0.2208]]], [[[0.8153, 0.2008], [0.1157, 0.3955]]]]], 2, 1, 2,[[[[[0.3038, 0.0754], [0.7993, 0.6597]], [[0.531, 0.9057], [0.9428, 0.797]]]], [[[[0.6313, 0.654], [0.3245, 0.6138]], [[0.7217, 0.614], [0.6276, 0.7694]]]]],[0, 0], 1, 1, 1, false, Con40007), 
LZer29735 = zero_padding3D_layer(Con40007, 0, 0, 2, 0, 0, 0, Zer29735), 
LMul60350 = multiply_layer([Con23289,Zer29735], Mul60350), 
LSub27806 = subtract_layer(Con61844,Mul60350, Sub27806), 
exec_layers([LDot44385,LRes41894,LRes22817,LRes95507,LZer82423,LCon61844,LSub37286,LRes46596,LZer20235,LCon23289,LCon40007,LZer29735,LMul60350,LSub27806],["Dot44385","Res41894","Res22817","Res95507","Zer82423","Con61844","Sub37286","Res46596","Zer20235","Con23289","Con40007","Zer29735","Mul60350","Sub27806"],Sub27806,"Sub27806")

Actual (Unparsed): [[[[[0.0000000, 0.4448000], [0.0000000, 0.0237000], [0.0000000, 0.1865000]], [[0.0000000, 0.7279000], [0.0000000, 0.7658000], [0.0000000, 0.2181000]], [[0.0000000, 0.0636247], [0.0000000, -0.2292023], [0.0000000, 0.7332819]]], [[[0.0000000, 0.2187000], [0.0000000, 0.1769000], [0.0000000, 0.3363000]], [[0.0000000, 0.7153000], [0.0000000, 0.6218000], [0.0000000, 0.7595000]], [[-0.0077884, 0.1188793], [-1.0280209, -1.9075018], [0.3790119, 0.2967165]]], [[[0.0000000, 0.6786000], [0.0000000, 0.4290000], [0.0000000, 0.1628000]], [[0.0000000, 0.2295000], [0.0000000, 0.6317000], [0.0000000, 0.6013000]], [[0.0877298, 0.0850119], [-0.0301540, 0.2194403], [0.7364256, -0.2276659]]]]]

Expected (Unparsed): [[[[[0,0.4448],[0,0.0237],[0,0.1865]],[[0,0.7279],[0,0.7658],[0,0.2181]],[[0.0,0.06362475380800003],[0.0,-0.22920232829999995],[0.0,0.733281922304]]],[[[0,0.2187],[0,0.1769],[0,0.3363]],[[0.0,0.7153],[0.0,0.6218],[0.0,0.7595]],[[-0.007788441692999989,0.11887929513599998],[-1.028020892604,-1.9075017663819993],[0.379011891478,0.29671651137599997]]],[[[0,0.6786],[0,0.429],[0,0.1628]],[[0.0,0.2295],[0.0,0.6317],[0.0,0.6013]],[[0.08772979982199998,0.085011876852],[-0.03015401781800001,0.21944028958499995],[0.7364255512339999,-0.227665918726]]]]]

Actual:   [[[[[0, 0.4448], [0, 0.0237], [0, 0.1865]], [[0, 0.7279], [0, 0.7658], [0, 0.2181]], [[0, 0.0637], [0, -0.2292], [0, 0.7333]]], [[[0, 0.2187], [0, 0.1769], [0, 0.3363]], [[0, 0.7153], [0, 0.6218], [0, 0.7595]], [[-0.0077, 0.1189], [-1.028, -1.9075], [0.3791, 0.2968]]], [[[0, 0.6786], [0, 0.429], [0, 0.1628]], [[0, 0.2295], [0, 0.6317], [0, 0.6013]], [[0.0878, 0.0851], [-0.0301, 0.2195], [0.7365, -0.2276]]]]]

Expected: [[[[[0, 0.4448], [0, 0.0237], [0, 0.1865]], [[0, 0.7279], [0, 0.7658], [0, 0.2181]], [[0, 0.0637], [0, -0.2292], [0, 0.7333]]], [[[0, 0.2187], [0, 0.1769], [0, 0.3363]], [[0, 0.7153], [0, 0.6218], [0, 0.7595]], [[-0.0077, 0.1189], [-1.028, -1.9075], [0.3791, 0.2968]]], [[[0, 0.6786], [0, 0.429], [0, 0.1628]], [[0, 0.2295], [0, 0.6317], [0, 0.6013]], [[0.0878, 0.0851], [-0.0301, 0.2195], [0.7365, -0.2276]]]]]