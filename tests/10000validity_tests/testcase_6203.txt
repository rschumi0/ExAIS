import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Add7636 = tf.keras.layers.Input(shape=([1, 1]))
in1Add7636 = tf.keras.layers.Input(shape=([1, 1]))

Add7636 = keras.layers.Add(name = 'Add7636', )([in0Add7636,in1Add7636])
Res406 = keras.layers.Reshape((1, 1, 1), name = 'Res406', )(Add7636)
Max1011 = keras.layers.MaxPool2D(pool_size=(1, 1), strides=(1, 11), padding='valid', name = 'Max1011', )(Res406)
Res74753 = keras.layers.Reshape((1, 1), name = 'Res74753', )(Max1011)
Up_10733 = keras.layers.UpSampling1D(size=(2), name = 'Up_10733', )(Res74753)
model = tf.keras.models.Model(inputs=[in0Add7636,in1Add7636], outputs=Up_10733)
in0Add7636 = tf.constant([[[0.0504]]])
in1Add7636 = tf.constant([[[0.5531]]])
print (np.array2string(model.predict([in0Add7636,in1Add7636],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Up_10733.png')

LAdd7636 = add_layer([[[[0.0504]]], [[[0.5531]]]], Add7636), 
LRes406 = reshape_layer(Add7636, [1, 1, 1], Res406), 
LMax1011 = max_pool2D_layer(Res406, 1, 1, 1, 11, false, Max1011), 
LRes74753 = reshape_layer(Max1011, [1, 1], Res74753), 
LUp_10733 = up_sampling1D_layer(Res74753, 2, Up_10733), 
exec_layers([LAdd7636,LRes406,LMax1011,LRes74753,LUp_10733],["Add7636","Res406","Max1011","Res74753","Up_10733"],Up_10733,"Up_10733")

Actual (Unparsed): [[[0.6035000], [0.6035000]]]

Expected (Unparsed): [[[0.6035],[0.6035]]]

Actual:   [[[0.6035], [0.6035]]]

Expected: [[[0.6035], [0.6035]]]