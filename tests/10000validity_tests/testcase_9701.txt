import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Zer78853 = tf.keras.layers.Input(shape=([1, 3, 4]))
in0Min258 = tf.keras.layers.Input(shape=([1, 2]))
in1Min258 = tf.keras.layers.Input(shape=([1, 2]))
in0Con58520 = tf.keras.layers.Input(shape=([1]))
in0Sub84871 = tf.keras.layers.Input(shape=([2]))
in1Sub84871 = tf.keras.layers.Input(shape=([2]))
in0Con47462 = tf.keras.layers.Input(shape=([18]))
in0Ave10026 = tf.keras.layers.Input(shape=([1, 1, 2]))
in1Ave10026 = tf.keras.layers.Input(shape=([1, 1, 2]))
in0Con67127 = tf.keras.layers.Input(shape=([40, 1]))

Zer78853 = keras.layers.ZeroPadding2D(padding=((1, 1), (1, 1)), name = 'Zer78853', )(in0Zer78853)
Res51745 = keras.layers.Reshape((3, 20), name = 'Res51745', )(Zer78853)
Cro15959 = keras.layers.Cropping1D(cropping=((2, 0)), name = 'Cro15959', )(Res51745)
Fla45280 = keras.layers.Flatten(name = 'Fla45280', )(Cro15959)
Min258 = keras.layers.Minimum(name = 'Min258', )([in0Min258,in1Min258])
Res91157 = keras.layers.Reshape((1, 2, 1), name = 'Res91157', )(Min258)
Cro36358 = keras.layers.Cropping2D(cropping=((0, 0), (1, 0)), name = 'Cro36358', )(Res91157)
Res99928 = keras.layers.Reshape((1, 1), name = 'Res99928', )(Cro36358)
Fla36247 = keras.layers.Flatten(name = 'Fla36247', )(Res99928)
Con58520 = keras.layers.Concatenate(axis=1, name = 'Con58520', )([Fla36247,in0Con58520])
Sub84871 = keras.layers.Subtract(name = 'Sub84871', )([in0Sub84871,in1Sub84871])
Min94235 = keras.layers.Minimum(name = 'Min94235', )([Con58520,Sub84871])
Con47462 = keras.layers.Concatenate(axis=1, name = 'Con47462', )([Min94235,in0Con47462])
Ave35333 = keras.layers.Average(name = 'Ave35333', )([Fla45280,Con47462])
Res93435 = keras.layers.Reshape((20, 1), name = 'Res93435', )(Ave35333)
Res31614 = keras.layers.Reshape((20, 1, 1), name = 'Res31614', )(Res93435)
Res16815 = keras.layers.Reshape((20, 1, 1, 1), name = 'Res16815', )(Res31614)
Up_8955 = keras.layers.UpSampling3D(size=(2, 2, 2), name = 'Up_8955', )(Res16815)
Res42903 = keras.layers.Reshape((40, 2, 2), name = 'Res42903', )(Up_8955)
Res49947 = keras.layers.Reshape((40, 4), name = 'Res49947', )(Res42903)
Ave10026 = keras.layers.Average(name = 'Ave10026', )([in0Ave10026,in1Ave10026])
Res69710 = keras.layers.Reshape((1, 2), name = 'Res69710', )(Ave10026)
Sep94251 = keras.layers.SeparableConv1D(3, (1),strides=(1), padding='same', name = 'Sep94251', )(Res69710)
Zer80772 = keras.layers.ZeroPadding1D(padding=((39, 0)), name = 'Zer80772', )(Sep94251)
Con67127 = keras.layers.Concatenate(axis=2, name = 'Con67127', )([Zer80772,in0Con67127])
Add53888 = keras.layers.Add(name = 'Add53888', )([Res49947,Con67127])
model = tf.keras.models.Model(inputs=[in0Zer78853,in0Min258,in1Min258,in0Con58520,in0Sub84871,in1Sub84871,in0Con47462,in0Ave10026,in1Ave10026,in0Con67127], outputs=Add53888)
w = model.get_layer('Sep94251').get_weights() 
w[0] = np.array([[[0.1479], [0.5516]]])
w[1] = np.array([[[0.0293, 0.7004, 0.5492], [0.4745, 0.2108, 0.3783]]])
w[2] = np.array([0, 0, 0])
model.get_layer('Sep94251').set_weights(w) 
in0Zer78853 = tf.constant([[[[1.6438, 1.4332, 1.0161, 1.0632], [1.375, 1.5725, 1.3158, 1.9766], [1.6446, 1.4788, 1.5082, 1.4176]]]])
in0Min258 = tf.constant([[[0.1832, 0.0822]]])
in1Min258 = tf.constant([[[0.7895, 0.3871]]])
in0Con58520 = tf.constant([[0.1595]])
in0Sub84871 = tf.constant([[0.3546, 0.8086]])
in1Sub84871 = tf.constant([[0.829, 0.7197]])
in0Con47462 = tf.constant([[0.3763, 0.0413, 0.3454, 0.6465, 0.1764, 0.8088, 0.9276, 0.9876, 0.4755, 0.5509, 0.1589, 0.375, 0.8646, 0.4094, 0.2911, 0.6655, 0.1442, 0.3754]])
in0Ave10026 = tf.constant([[[[0.498, 0.0751]]]])
in1Ave10026 = tf.constant([[[[0.8825, 0.5952]]]])
in0Con67127 = tf.constant([[[0.3103], [0.3553], [0.019], [0.6927], [0.8926], [0.9421], [0.8788], [0.6292], [0.7709], [0.4256], [0.045], [0.9998], [0.6376], [0.8033], [0.6849], [0.3154], [0.549], [0.6509], [0.8742], [0.4676], [0.0136], [0.9709], [0.7682], [0.0556], [0.8364], [0.4399], [0.7877], [0.1277], [0.3804], [0.9118], [0.0248], [0.5048], [0.5674], [0.5409], [0.9998], [0.2563], [0.3761], [0.4291], [0.1025], [0.8263]]])
print (np.array2string(model.predict([in0Zer78853,in0Min258,in1Min258,in0Con58520,in0Sub84871,in1Sub84871,in0Con47462,in0Ave10026,in1Ave10026,in0Con67127],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Add53888.png')

LZer78853 = zero_padding2D_layer([[[[1.6438, 1.4332, 1.0161, 1.0632], [1.375, 1.5725, 1.3158, 1.9766], [1.6446, 1.4788, 1.5082, 1.4176]]]], 1, 1, 1, 1, Zer78853), 
LRes51745 = reshape_layer(Zer78853, [3, 20], Res51745), 
LCro15959 = cropping1D_layer(Res51745, 2, 0, Cro15959), 
LFla45280 = flatten_layer(Cro15959, Fla45280), 
LMin258 = minimum_layer([[[[0.1832, 0.0822]]], [[[0.7895, 0.3871]]]], Min258), 
LRes91157 = reshape_layer(Min258, [1, 2, 1], Res91157), 
LCro36358 = cropping2D_layer(Res91157, 0, 0, 1, 0, Cro36358), 
LRes99928 = reshape_layer(Cro36358, [1, 1], Res99928), 
LFla36247 = flatten_layer(Res99928, Fla36247), 
LCon58520 = concatenate_layer([Fla36247,[[0.1595]]], 1, Con58520), 
LSub84871 = subtract_layer([[0.3546, 0.8086]], [[0.829, 0.7197]], Sub84871), 
LMin94235 = minimum_layer([Con58520,Sub84871], Min94235), 
LCon47462 = concatenate_layer([Min94235,[[0.3763, 0.0413, 0.3454, 0.6465, 0.1764, 0.8088, 0.9276, 0.9876, 0.4755, 0.5509, 0.1589, 0.375, 0.8646, 0.4094, 0.2911, 0.6655, 0.1442, 0.3754]]], 1, Con47462), 
LAve35333 = average_layer([Fla45280,Con47462], Ave35333), 
LRes93435 = reshape_layer(Ave35333, [20, 1], Res93435), 
LRes31614 = reshape_layer(Res93435, [20, 1, 1], Res31614), 
LRes16815 = reshape_layer(Res31614, [20, 1, 1, 1], Res16815), 
LUp_8955 = up_sampling3D_layer(Res16815, 2, 2, 2, Up_8955), 
LRes42903 = reshape_layer(Up_8955, [40, 2, 2], Res42903), 
LRes49947 = reshape_layer(Res42903, [40, 4], Res49947), 
LAve10026 = average_layer([[[[[0.498, 0.0751]]]], [[[[0.8825, 0.5952]]]]], Ave10026), 
LRes69710 = reshape_layer(Ave10026, [1, 2], Res69710), 
LSep94251 = separable_conv1D_layer(Res69710, 1,[[[[0.1479], [0.5516]]],[[[0.0293, 0.7004, 0.5492], [0.4745, 0.2108, 0.3783]]]],[0, 0, 0], 1, true, Sep94251), 
LZer80772 = zero_padding1D_layer(Sep94251, 39, 0, Zer80772), 
LCon67127 = concatenate_layer([Zer80772,[[[0.3103], [0.3553], [0.019], [0.6927], [0.8926], [0.9421], [0.8788], [0.6292], [0.7709], [0.4256], [0.045], [0.9998], [0.6376], [0.8033], [0.6849], [0.3154], [0.549], [0.6509], [0.8742], [0.4676], [0.0136], [0.9709], [0.7682], [0.0556], [0.8364], [0.4399], [0.7877], [0.1277], [0.3804], [0.9118], [0.0248], [0.5048], [0.5674], [0.5409], [0.9998], [0.2563], [0.3761], [0.4291], [0.1025], [0.8263]]]], 2, Con67127), 
LAdd53888 = add_layer([Res49947,Con67127], Add53888), 
exec_layers([LZer78853,LRes51745,LCro15959,LFla45280,LMin258,LRes91157,LCro36358,LRes99928,LFla36247,LCon58520,LSub84871,LMin94235,LCon47462,LAve35333,LRes93435,LRes31614,LRes16815,LUp_8955,LRes42903,LRes49947,LAve10026,LRes69710,LSep94251,LZer80772,LCon67127,LAdd53888],["Zer78853","Res51745","Cro15959","Fla45280","Min258","Res91157","Cro36358","Res99928","Fla36247","Con58520","Sub84871","Min94235","Con47462","Ave35333","Res93435","Res31614","Res16815","Up_8955","Res42903","Res49947","Ave10026","Res69710","Sep94251","Zer80772","Con67127","Add53888"],Add53888,"Add53888")

Actual (Unparsed): [[[-0.2372000, -0.2372000, -0.2372000, 0.0731000], [-0.2372000, -0.2372000, -0.2372000, 0.1181000], [0.0444500, 0.0444500, 0.0444500, 0.0634500], [0.0444500, 0.0444500, 0.0444500, 0.7371500], [0.1881500, 0.1881500, 0.1881500, 1.0807500], [0.1881500, 0.1881500, 0.1881500, 1.1302500], [0.0206500, 0.0206500, 0.0206500, 0.8994500], [0.0206500, 0.0206500, 0.0206500, 0.6498500], [0.1727000, 0.1727000, 0.1727000, 0.9436000], [0.1727000, 0.1727000, 0.1727000, 0.5983000], [0.3232500, 0.3232500, 0.3232500, 0.3682500], [0.3232500, 0.3232500, 0.3232500, 1.3230500], [0.0882000, 0.0882000, 0.0882000, 0.7258000], [0.0882000, 0.0882000, 0.0882000, 0.8915000], [0.4044000, 0.4044000, 0.4044000, 1.0893000], [0.4044000, 0.4044000, 0.4044000, 0.7198000], [0.4638000, 0.4638000, 0.4638000, 1.0128000], [0.4638000, 0.4638000, 0.4638000, 1.1147000], [0.4938000, 0.4938000, 0.4938000, 1.3680000], [0.4938000, 0.4938000, 0.4938000, 0.9614000], [0.2377500, 0.2377500, 0.2377500, 0.2513500], [0.2377500, 0.2377500, 0.2377500, 1.2086500], [0.2754500, 0.2754500, 0.2754500, 1.0436500], [0.2754500, 0.2754500, 0.2754500, 0.3310500], [0.0794500, 0.0794500, 0.0794500, 0.9158500], [0.0794500, 0.0794500, 0.0794500, 0.5193500], [0.1875000, 0.1875000, 0.1875000, 0.9752000], [0.1875000, 0.1875000, 0.1875000, 0.3152000], [0.4323000, 0.4323000, 0.4323000, 0.8127000], [0.4323000, 0.4323000, 0.4323000, 1.3441000], [0.2047000, 0.2047000, 0.2047000, 0.2295000], [0.2047000, 0.2047000, 0.2047000, 0.7095000], [0.1455500, 0.1455500, 0.1455500, 0.7129500], [0.1455500, 0.1455500, 0.1455500, 0.6864500], [0.3327500, 0.3327500, 0.3327500, 1.3325500], [0.3327500, 0.3327500, 0.3327500, 0.5890500], [0.0721000, 0.0721000, 0.0721000, 0.4482000], [0.0721000, 0.0721000, 0.0721000, 0.5012000], [0.1877000, 0.1877000, 0.1877000, 0.2902000], [0.2784114, 0.2981728, 0.3137026, 1.0140000]]]

Expected (Unparsed): [[[-0.23719999999999997,-0.23719999999999997,-0.23719999999999997,0.07310000000000005],[-0.23719999999999997,-0.23719999999999997,-0.23719999999999997,0.11810000000000004],[0.04444999999999999,0.04444999999999999,0.04444999999999999,0.06344999999999999],[0.04444999999999999,0.04444999999999999,0.04444999999999999,0.73715],[0.18815,0.18815,0.18815,1.0807499999999999],[0.18815,0.18815,0.18815,1.13025],[0.02065,0.02065,0.02065,0.8994500000000001],[0.02065,0.02065,0.02065,0.64985],[0.1727,0.1727,0.1727,0.9436],[0.1727,0.1727,0.1727,0.5982999999999999],[0.32325,0.32325,0.32325,0.36824999999999997],[0.32325,0.32325,0.32325,1.32305],[0.0882,0.0882,0.0882,0.7258],[0.0882,0.0882,0.0882,0.8915],[0.4044,0.4044,0.4044,1.0893],[0.4044,0.4044,0.4044,0.7198],[0.4638,0.4638,0.4638,1.0128],[0.4638,0.4638,0.4638,1.1147],[0.4938,0.4938,0.4938,1.3679999999999999],[0.4938,0.4938,0.4938,0.9614],[0.23775,0.23775,0.23775,0.25134999999999996],[0.23775,0.23775,0.23775,1.20865],[0.27545,0.27545,0.27545,1.04365],[0.27545,0.27545,0.27545,0.33104999999999996],[0.07945,0.07945,0.07945,0.91585],[0.07945,0.07945,0.07945,0.51935],[0.1875,0.1875,0.1875,0.9752],[0.1875,0.1875,0.1875,0.31520000000000004],[0.4323,0.4323,0.4323,0.8127],[0.4323,0.4323,0.4323,1.3441],[0.2047,0.2047,0.2047,0.22949999999999998],[0.2047,0.2047,0.2047,0.7095],[0.14555,0.14555,0.14555,0.71295],[0.14555,0.14555,0.14555,0.68645],[0.33275,0.33275,0.33275,1.33255],[0.33275,0.33275,0.33275,0.58905],[0.0721,0.0721,0.0721,0.4482],[0.0721,0.0721,0.0721,0.5012],[0.1877,0.1877,0.1877,0.2902],[0.2784113947975,0.298172748082,0.31370256021200005,1.014]]]

Actual:   [[[-0.2372, -0.2372, -0.2372, 0.0731], [-0.2372, -0.2372, -0.2372, 0.1181], [0.0445, 0.0445, 0.0445, 0.0635], [0.0445, 0.0445, 0.0445, 0.7372], [0.1882, 0.1882, 0.1882, 1.0808], [0.1882, 0.1882, 0.1882, 1.1303], [0.0207, 0.0207, 0.0207, 0.8995], [0.0207, 0.0207, 0.0207, 0.6499], [0.1727, 0.1727, 0.1727, 0.9436], [0.1727, 0.1727, 0.1727, 0.5983], [0.3233, 0.3233, 0.3233, 0.3683], [0.3233, 0.3233, 0.3233, 1.3231], [0.0882, 0.0882, 0.0882, 0.7258], [0.0882, 0.0882, 0.0882, 0.8915], [0.4044, 0.4044, 0.4044, 1.0893], [0.4044, 0.4044, 0.4044, 0.7198], [0.4638, 0.4638, 0.4638, 1.0128], [0.4638, 0.4638, 0.4638, 1.1147], [0.4938, 0.4938, 0.4938, 1.368], [0.4938, 0.4938, 0.4938, 0.9614], [0.2378, 0.2378, 0.2378, 0.2514], [0.2378, 0.2378, 0.2378, 1.2087], [0.2755, 0.2755, 0.2755, 1.0437], [0.2755, 0.2755, 0.2755, 0.3311], [0.0795, 0.0795, 0.0795, 0.9159], [0.0795, 0.0795, 0.0795, 0.5194], [0.1875, 0.1875, 0.1875, 0.9752], [0.1875, 0.1875, 0.1875, 0.3152], [0.4323, 0.4323, 0.4323, 0.8127], [0.4323, 0.4323, 0.4323, 1.3441], [0.2047, 0.2047, 0.2047, 0.2295], [0.2047, 0.2047, 0.2047, 0.7095], [0.1456, 0.1456, 0.1456, 0.713], [0.1456, 0.1456, 0.1456, 0.6865], [0.3328, 0.3328, 0.3328, 1.3326], [0.3328, 0.3328, 0.3328, 0.5891], [0.0721, 0.0721, 0.0721, 0.4482], [0.0721, 0.0721, 0.0721, 0.5012], [0.1877, 0.1877, 0.1877, 0.2902], [0.2785, 0.2982, 0.3138, 1.014]]]

Expected: [[[-0.2371, -0.2371, -0.2371, 0.0732], [-0.2371, -0.2371, -0.2371, 0.1182], [0.0445, 0.0445, 0.0445, 0.0635], [0.0445, 0.0445, 0.0445, 0.7372], [0.1882, 0.1882, 0.1882, 1.0808], [0.1882, 0.1882, 0.1882, 1.1303], [0.0207, 0.0207, 0.0207, 0.8995], [0.0207, 0.0207, 0.0207, 0.6499], [0.1727, 0.1727, 0.1727, 0.9436], [0.1727, 0.1727, 0.1727, 0.5983], [0.3233, 0.3233, 0.3233, 0.3683], [0.3233, 0.3233, 0.3233, 1.3231], [0.0882, 0.0882, 0.0882, 0.7258], [0.0882, 0.0882, 0.0882, 0.8915], [0.4044, 0.4044, 0.4044, 1.0893], [0.4044, 0.4044, 0.4044, 0.7198], [0.4638, 0.4638, 0.4638, 1.0128], [0.4638, 0.4638, 0.4638, 1.1147], [0.4938, 0.4938, 0.4938, 1.368], [0.4938, 0.4938, 0.4938, 0.9614], [0.2378, 0.2378, 0.2378, 0.2514], [0.2378, 0.2378, 0.2378, 1.2087], [0.2755, 0.2755, 0.2755, 1.0437], [0.2755, 0.2755, 0.2755, 0.3311], [0.0795, 0.0795, 0.0795, 0.9159], [0.0795, 0.0795, 0.0795, 0.5194], [0.1875, 0.1875, 0.1875, 0.9752], [0.1875, 0.1875, 0.1875, 0.3153], [0.4323, 0.4323, 0.4323, 0.8127], [0.4323, 0.4323, 0.4323, 1.3441], [0.2047, 0.2047, 0.2047, 0.2295], [0.2047, 0.2047, 0.2047, 0.7095], [0.1456, 0.1456, 0.1456, 0.713], [0.1456, 0.1456, 0.1456, 0.6865], [0.3328, 0.3328, 0.3328, 1.3326], [0.3328, 0.3328, 0.3328, 0.5891], [0.0721, 0.0721, 0.0721, 0.4482], [0.0721, 0.0721, 0.0721, 0.5012], [0.1877, 0.1877, 0.1877, 0.2902], [0.2785, 0.2982, 0.3138, 1.014]]]