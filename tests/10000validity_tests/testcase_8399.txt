import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Dot62022 = tf.keras.layers.Input(shape=([2]))
in1Dot62022 = tf.keras.layers.Input(shape=([2]))

Dot62022 = keras.layers.Dot(axes=(1, 1), name = 'Dot62022', )([in0Dot62022,in1Dot62022])
Res39867 = keras.layers.Reshape((1, 1), name = 'Res39867', )(Dot62022)
Max36692 = keras.layers.MaxPool1D(pool_size=(1), strides=(1), padding='valid', name = 'Max36692', )(Res39867)
Res33625 = keras.layers.Reshape((1, 1, 1), name = 'Res33625', )(Max36692)
Loc77438 = keras.layers.LocallyConnected2D(4, (1, 1),strides=(1, 1), name = 'Loc77438', )(Res33625)
model = tf.keras.models.Model(inputs=[in0Dot62022,in1Dot62022], outputs=Loc77438)
w = model.get_layer('Loc77438').get_weights() 
w[0] = np.array([[[0.8946, 0.8002, 0.4924, 0.4211]]])
w[1] = np.array([[[0, 0, 0, 0]]])
model.get_layer('Loc77438').set_weights(w) 
in0Dot62022 = tf.constant([[0.9542, 0.7879]])
in1Dot62022 = tf.constant([[0.9534, 0.9978]])
print (np.array2string(model.predict([in0Dot62022,in1Dot62022],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Loc77438.png')

LDot62022 = dot_layer([[0.9542, 0.7879]], [[0.9534, 0.9978]], 1, 1, Dot62022), 
LRes39867 = reshape_layer(Dot62022, [1, 1], Res39867), 
LMax36692 = max_pool1D_layer(Res39867, 1, 1, false, Max36692), 
LRes33625 = reshape_layer(Max36692, [1, 1, 1], Res33625), 
LLoc77438 = locally_connected2D_layer(Res33625, 1, 1,[[[0.8946, 0.8002, 0.4924, 0.4211]]],[[[0, 0, 0, 0]]], 1, 1, Loc77438), 
exec_layers([LDot62022,LRes39867,LMax36692,LRes33625,LLoc77438],["Dot62022","Res39867","Max36692","Res33625","Loc77438"],Loc77438,"Loc77438")

Actual (Unparsed): [[[[1.5171530, 1.3570599, 0.8350616, 0.7141439]]]]

Expected (Unparsed): [[[[1.51715294514,1.3570599001800003,0.8350616031600001,0.71414386899]]]]

Actual:   [[[[1.5172, 1.3571, 0.8351, 0.7142]]]]

Expected: [[[[1.5172, 1.3571, 0.8351, 0.7142]]]]