import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0GRU64296 = tf.keras.layers.Input(shape=([2, 3]))
in0Ave6656 = tf.keras.layers.Input(shape=([2, 1]))

GRU64296 = keras.layers.GRU(1,reset_after=True, recurrent_activation='sigmoid', name = 'GRU64296', )(in0GRU64296)
Res2915 = keras.layers.Reshape((1, 1), name = 'Res2915', )(GRU64296)
Ave6656 = keras.layers.AveragePooling1D(pool_size=(2), name = 'Ave6656', )(in0Ave6656)
Dot3105 = keras.layers.Dot(axes=(1, 1), name = 'Dot3105', )([Res2915,Ave6656])
Res64935 = keras.layers.Reshape((1, 1, 1), name = 'Res64935', )(Dot3105)
Zer11834 = keras.layers.ZeroPadding2D(padding=((1, 1), (1, 1)), name = 'Zer11834', )(Res64935)
model = tf.keras.models.Model(inputs=[in0GRU64296,in0Ave6656], outputs=Zer11834)
w = model.get_layer('GRU64296').get_weights() 
w[0] = np.array([[10, 8, 7], [7, 2, 3], [9, 4, 8]])
w[1] = np.array([[3, 3, 9]])
w[2] = np.array([[6, 2, 2], [7, 5, 8]])
model.get_layer('GRU64296').set_weights(w) 
in0GRU64296 = tf.constant([[[5, 10, 4], [6, 1, 3]]])
in0Ave6656 = tf.constant([[[1.0101], [1.678]]])
print (np.array2string(model.predict([in0GRU64296,in0Ave6656],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Zer11834.png')

LGRU64296 = gru_layer([[[5, 10, 4], [6, 1, 3]]],[[10, 8, 7], [7, 2, 3], [9, 4, 8]],[[3, 3, 9]],[[6, 2, 2], [7, 5, 8]], true, GRU64296), 
LRes2915 = reshape_layer(GRU64296, [1, 1], Res2915), 
LAve6656 = average_pooling1D_layer([[[1.0101], [1.678]]], 2, Ave6656), 
LDot3105 = dot_layer(Res2915,Ave6656, 1, 1, Dot3105), 
LRes64935 = reshape_layer(Dot3105, [1, 1, 1], Res64935), 
LZer11834 = zero_padding2D_layer(Res64935, 1, 1, 1, 1, Zer11834), 
exec_layers([LGRU64296,LRes2915,LAve6656,LDot3105,LRes64935,LZer11834],["GRU64296","Res2915","Ave6656","Dot3105","Res64935","Zer11834"],Zer11834,"Zer11834")

Actual (Unparsed): [[[[0.0000000], [0.0000000], [0.0000000]], [[0.0000000], [0.0000000], [0.0000000]], [[0.0000000], [0.0000000], [0.0000000]]]]

Expected (Unparsed): [[[[0],[0],[0]],[[0],[0.0],[0]],[[0],[0],[0]]]]

Actual:   [[[[0], [0], [0]], [[0], [0], [0]], [[0], [0], [0]]]]

Expected: [[[[0], [0], [0]], [[0], [0], [0]], [[0], [0], [0]]]]