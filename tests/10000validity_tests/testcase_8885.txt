import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Sep44686 = tf.keras.layers.Input(shape=([2, 2, 2]))
in0Con49919 = tf.keras.layers.Input(shape=([2]))
in0Con52718 = tf.keras.layers.Input(shape=([1, 1, 2, 2]))
in0Con85610 = tf.keras.layers.Input(shape=([4, 1, 2]))
in0Max19240 = tf.keras.layers.Input(shape=([2, 2, 2, 2]))
in1Max19240 = tf.keras.layers.Input(shape=([2, 2, 2, 2]))

Sep44686 = keras.layers.SeparableConv2D(3, (2, 2),strides=(2, 2), padding='valid', name = 'Sep44686', )(in0Sep44686)
Res94241 = keras.layers.Reshape((1, 1, 3, 1), name = 'Res94241', )(Sep44686)
Cro20665 = keras.layers.Cropping3D(cropping=((0, 0), (0, 0), (1, 0)), name = 'Cro20665', )(Res94241)
Res3242 = keras.layers.Reshape((1, 1, 2), name = 'Res3242', )(Cro20665)
Res14474 = keras.layers.Reshape((1, 2), name = 'Res14474', )(Res3242)
Fla60602 = keras.layers.Flatten(name = 'Fla60602', )(Res14474)
Con49919 = keras.layers.Concatenate(axis=1, name = 'Con49919', )([Fla60602,in0Con49919])
Con52718 = keras.layers.Conv3DTranspose(2, (1, 1, 2),strides=(1, 12, 1), padding='same', name = 'Con52718', )(in0Con52718)
Res91971 = keras.layers.Reshape((1, 12, 4), name = 'Res91971', )(Con52718)
Glo86071 = keras.layers.GlobalAveragePooling2D(name = 'Glo86071', )(Res91971)
Mul39189 = keras.layers.Multiply(name = 'Mul39189', )([Con49919,Glo86071])
Res63902 = keras.layers.Reshape((4, 1), name = 'Res63902', )(Mul39189)
Res69903 = keras.layers.Reshape((4, 1, 1), name = 'Res69903', )(Res63902)
Con85610 = keras.layers.Concatenate(axis=3, name = 'Con85610', )([Res69903,in0Con85610])
Max19240 = keras.layers.Maximum(name = 'Max19240', )([in0Max19240,in1Max19240])
Res8753 = keras.layers.Reshape((2, 2, 4), name = 'Res8753', )(Max19240)
Sep43041 = keras.layers.SeparableConv2D(3, (2, 2),strides=(2, 2), padding='valid', name = 'Sep43041', )(Res8753)
Zer69196 = keras.layers.ZeroPadding2D(padding=((3, 0), (0, 0)), name = 'Zer69196', )(Sep43041)
Min65068 = keras.layers.Minimum(name = 'Min65068', )([Con85610,Zer69196])
model = tf.keras.models.Model(inputs=[in0Sep44686,in0Con49919,in0Con52718,in0Con85610,in0Max19240,in1Max19240], outputs=Min65068)
w = model.get_layer('Sep44686').get_weights() 
w[0] = np.array([[[[0.4158], [0.8936]], [[0.6099], [0.4187]]], [[[0.9211], [0.6802]], [[0.397], [0.6441]]]])
w[1] = np.array([[[[0.7611, 0.6528, 0.2797], [0.0589, 0.5815, 0.932]]]])
w[2] = np.array([0, 0, 0])
model.get_layer('Sep44686').set_weights(w) 
w = model.get_layer('Con52718').get_weights() 
w[0] = np.array([[[[[0.7551, 0.2148], [0.8214, 0.7501]], [[0.257, 0.29], [0.4323, 0.2214]]]]])
w[1] = np.array([0, 0])
model.get_layer('Con52718').set_weights(w) 
w = model.get_layer('Sep43041').get_weights() 
w[0] = np.array([[[[0.2628], [0.0236], [0.2825], [0.6583]], [[0.3508], [0.7835], [0.33], [0.1133]]], [[[0.8411], [0.5209], [0.544], [0.4624]], [[0.093], [0.4123], [0.5386], [0.2896]]]])
w[1] = np.array([[[[0.013, 0.3953, 0.1413], [0.9625, 0.699, 0.7624], [0.207, 0.4211, 0.0125], [0.3805, 0.8019, 0.5193]]]])
w[2] = np.array([0, 0, 0])
model.get_layer('Sep43041').set_weights(w) 
in0Sep44686 = tf.constant([[[[0.0572, 0.1736], [0.6409, 0.4834]], [[0.813, 0.8001], [0.3107, 0.0465]]]])
in0Con49919 = tf.constant([[0.958, 0.0914]])
in0Con52718 = tf.constant([[[[[0.3244, 0.7079], [0.8452, 0.306]]]]])
in0Con85610 = tf.constant([[[[0.1819, 0.3995]], [[0.9122, 0.0121]], [[0.231, 0.1472]], [[0.0755, 0.1148]]]])
in0Max19240 = tf.constant([[[[[0.3153, 0.6942], [0.9061, 0.6412]], [[0.9827, 0.3642], [0.0355, 0.0686]]], [[[0.8358, 0.5979], [0.7337, 0.2549]], [[0.7803, 0.0856], [0.8243, 0.086]]]]])
in1Max19240 = tf.constant([[[[[0.4587, 0.1589], [0.9555, 0.2968]], [[0.3188, 0.5559], [0.7497, 0.4082]]], [[[0.0067, 0.0752], [0.9451, 0.3636]], [[0.4589, 0.2989], [0.8487, 0.8076]]]]])
print (np.array2string(model.predict([in0Sep44686,in0Con49919,in0Con52718,in0Con85610,in0Max19240,in1Max19240],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Min65068.png')

LSep44686 = separable_conv2D_layer([[[[0.0572, 0.1736], [0.6409, 0.4834]], [[0.813, 0.8001], [0.3107, 0.0465]]]], 2, 2,[[[[[0.4158], [0.8936]], [[0.6099], [0.4187]]], [[[0.9211], [0.6802]], [[0.397], [0.6441]]]],[[[[0.7611, 0.6528, 0.2797], [0.0589, 0.5815, 0.932]]]]],[0, 0, 0], 2, 2, false, Sep44686), 
LRes94241 = reshape_layer(Sep44686, [1, 1, 3, 1], Res94241), 
LCro20665 = cropping3D_layer(Res94241, 0, 0, 0, 0, 1, 0, Cro20665), 
LRes3242 = reshape_layer(Cro20665, [1, 1, 2], Res3242), 
LRes14474 = reshape_layer(Res3242, [1, 2], Res14474), 
LFla60602 = flatten_layer(Res14474, Fla60602), 
LCon49919 = concatenate_layer([Fla60602,[[0.958, 0.0914]]], 1, Con49919), 
LCon52718 = conv3D_transpose_layer([[[[[0.3244, 0.7079], [0.8452, 0.306]]]]], 1, 1, 2,[[[[[0.7551, 0.2148], [0.8214, 0.7501]], [[0.257, 0.29], [0.4323, 0.2214]]]]],[0, 0], 1, 12, 1, true, Con52718), 
LRes91971 = reshape_layer(Con52718, [1, 12, 4], Res91971), 
LGlo86071 = global_average_pooling2D_layer(Res91971, Glo86071), 
LMul39189 = multiply_layer([Con49919,Glo86071], Mul39189), 
LRes63902 = reshape_layer(Mul39189, [4, 1], Res63902), 
LRes69903 = reshape_layer(Res63902, [4, 1, 1], Res69903), 
LCon85610 = concatenate_layer([Res69903,[[[[0.1819, 0.3995]], [[0.9122, 0.0121]], [[0.231, 0.1472]], [[0.0755, 0.1148]]]]], 3, Con85610), 
LMax19240 = maximum_layer([[[[[[0.3153, 0.6942], [0.9061, 0.6412]], [[0.9827, 0.3642], [0.0355, 0.0686]]], [[[0.8358, 0.5979], [0.7337, 0.2549]], [[0.7803, 0.0856], [0.8243, 0.086]]]]], [[[[[0.4587, 0.1589], [0.9555, 0.2968]], [[0.3188, 0.5559], [0.7497, 0.4082]]], [[[0.0067, 0.0752], [0.9451, 0.3636]], [[0.4589, 0.2989], [0.8487, 0.8076]]]]]], Max19240), 
LRes8753 = reshape_layer(Max19240, [2, 2, 4], Res8753), 
LSep43041 = separable_conv2D_layer(Res8753, 2, 2,[[[[[0.2628], [0.0236], [0.2825], [0.6583]], [[0.3508], [0.7835], [0.33], [0.1133]]], [[[0.8411], [0.5209], [0.544], [0.4624]], [[0.093], [0.4123], [0.5386], [0.2896]]]],[[[[0.013, 0.3953, 0.1413], [0.9625, 0.699, 0.7624], [0.207, 0.4211, 0.0125], [0.3805, 0.8019, 0.5193]]]]],[0, 0, 0], 2, 2, false, Sep43041), 
LZer69196 = zero_padding2D_layer(Sep43041, 3, 0, 0, 0, Zer69196), 
LMin65068 = minimum_layer([Con85610,Zer69196], Min65068), 
exec_layers([LSep44686,LRes94241,LCro20665,LRes3242,LRes14474,LFla60602,LCon49919,LCon52718,LRes91971,LGlo86071,LMul39189,LRes63902,LRes69903,LCon85610,LMax19240,LRes8753,LSep43041,LZer69196,LMin65068],["Sep44686","Res94241","Cro20665","Res3242","Res14474","Fla60602","Con49919","Con52718","Res91971","Glo86071","Mul39189","Res63902","Res69903","Con85610","Max19240","Res8753","Sep43041","Zer69196","Min65068"],Min65068,"Min65068")

Actual (Unparsed): [[[[0.0000000, 0.0000000, 0.0000000]], [[0.0000000, 0.0000000, 0.0000000]], [[0.0000000, 0.0000000, 0.0000000]], [[0.0092980, 0.0755000, 0.1148000]]]]

Expected (Unparsed): [[[[0,0,0]],[[0,0,0]],[[0,0,0]],[[0.009298008207,0.0755,0.1148]]]]

Actual:   [[[[0, 0, 0]], [[0, 0, 0]], [[0, 0, 0]], [[0.0093, 0.0755, 0.1148]]]]

Expected: [[[[0, 0, 0]], [[0, 0, 0]], [[0, 0, 0]], [[0.0093, 0.0755, 0.1148]]]]