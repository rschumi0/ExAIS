import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Dot9402 = tf.keras.layers.Input(shape=([3]))
in1Dot9402 = tf.keras.layers.Input(shape=([3]))
in0Con87243 = tf.keras.layers.Input(shape=([1, 1, 1, 1]))
in0Con60260 = tf.keras.layers.Input(shape=([1, 1, 1, 1]))
in0Mul17793 = tf.keras.layers.Input(shape=([1, 1, 2, 2]))
in1Mul17793 = tf.keras.layers.Input(shape=([1, 1, 2, 2]))
in0Con73890 = tf.keras.layers.Input(shape=([2, 2, 2]))
in0Con24204 = tf.keras.layers.Input(shape=([4]))

Dot9402 = keras.layers.Dot(axes=(1, 1), name = 'Dot9402', )([in0Dot9402,in1Dot9402])
Res14498 = keras.layers.Reshape((1, 1), name = 'Res14498', )(Dot9402)
Res46628 = keras.layers.Reshape((1, 1, 1), name = 'Res46628', )(Res14498)
Res92316 = keras.layers.Reshape((1, 1, 1, 1), name = 'Res92316', )(Res46628)
Con87243 = keras.layers.Concatenate(axis=4, name = 'Con87243', )([Res92316,in0Con87243])
Con60260 = keras.layers.Conv3DTranspose(2, (1, 1, 1),strides=(1, 1, 1), padding='valid', name = 'Con60260', )(in0Con60260)
Max15523 = keras.layers.Maximum(name = 'Max15523', )([Con87243,Con60260])
Res77948 = keras.layers.Reshape((1, 1, 2), name = 'Res77948', )(Max15523)
Res41943 = keras.layers.Reshape((1, 2), name = 'Res41943', )(Res77948)
Mul17793 = keras.layers.Multiply(name = 'Mul17793', )([in0Mul17793,in1Mul17793])
Res56425 = keras.layers.Reshape((1, 1, 4), name = 'Res56425', )(Mul17793)
Res16708 = keras.layers.Reshape((1, 4), name = 'Res16708', )(Res56425)
Dot16878 = keras.layers.Dot(axes=(1, 1), name = 'Dot16878', )([Res41943,Res16708])
Fla86063 = keras.layers.Flatten(name = 'Fla86063', )(Dot16878)
Con73890 = keras.layers.Conv2D(4, (2, 2),strides=(1, 1), padding='valid', dilation_rate=(1, 1), name = 'Con73890', )(in0Con73890)
Res64739 = keras.layers.Reshape((1, 4), name = 'Res64739', )(Con73890)
Glo67960 = keras.layers.GlobalMaxPool1D(name = 'Glo67960', )(Res64739)
Con24204 = keras.layers.Concatenate(axis=1, name = 'Con24204', )([Glo67960,in0Con24204])
Add68354 = keras.layers.Add(name = 'Add68354', )([Fla86063,Con24204])
model = tf.keras.models.Model(inputs=[in0Dot9402,in1Dot9402,in0Con87243,in0Con60260,in0Mul17793,in1Mul17793,in0Con73890,in0Con24204], outputs=Add68354)
w = model.get_layer('Con60260').get_weights() 
w[0] = np.array([[[[[0.3035], [0.9535]]]]])
w[1] = np.array([0, 0])
model.get_layer('Con60260').set_weights(w) 
w = model.get_layer('Con73890').get_weights() 
w[0] = np.array([[[[0.7931, 0.777, 0.0985, 0.0945], [0.451, 0.7454, 0.8883, 0.1926]], [[0.5566, 0.0572, 0.3787, 0.0127], [0.9799, 0.2941, 0.9005, 0.137]]], [[[0.5357, 0.0705, 0.2582, 0.206], [0.2911, 0.7157, 0.8893, 0.2682]], [[0.6516, 0.6743, 0.5245, 0.725], [0.5573, 0.736, 0.3475, 0.6243]]]])
w[1] = np.array([0, 0, 0, 0])
model.get_layer('Con73890').set_weights(w) 
in0Dot9402 = tf.constant([[0.1578, 0.9249, 0.9645]])
in1Dot9402 = tf.constant([[0.8919, 0.8498, 0.8541]])
in0Con87243 = tf.constant([[[[[0.8163]]]]])
in0Con60260 = tf.constant([[[[[0.2263]]]]])
in0Mul17793 = tf.constant([[[[[0.9373, 0.055], [0.1587, 0.5675]]]]])
in1Mul17793 = tf.constant([[[[[0.5812, 0.3755], [0.9509, 0.9878]]]]])
in0Con73890 = tf.constant([[[[0.1022, 0.5712], [0.7763, 0.2985]], [[0.1492, 0.2889], [0.3574, 0.9167]]]])
in0Con24204 = tf.constant([[0.1589, 0.6239, 0.6114, 0.549]])
print (np.array2string(model.predict([in0Dot9402,in1Dot9402,in0Con87243,in0Con60260,in0Mul17793,in1Mul17793,in0Con73890,in0Con24204],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Add68354.png')

LDot9402 = dot_layer([[0.1578, 0.9249, 0.9645]], [[0.8919, 0.8498, 0.8541]], 1, 1, Dot9402), 
LRes14498 = reshape_layer(Dot9402, [1, 1], Res14498), 
LRes46628 = reshape_layer(Res14498, [1, 1, 1], Res46628), 
LRes92316 = reshape_layer(Res46628, [1, 1, 1, 1], Res92316), 
LCon87243 = concatenate_layer([Res92316,[[[[[0.8163]]]]]], 4, Con87243), 
LCon60260 = conv3D_transpose_layer([[[[[0.2263]]]]], 1, 1, 1,[[[[[0.3035], [0.9535]]]]],[0, 0], 1, 1, 1, false, Con60260), 
LMax15523 = maximum_layer([Con87243,Con60260], Max15523), 
LRes77948 = reshape_layer(Max15523, [1, 1, 2], Res77948), 
LRes41943 = reshape_layer(Res77948, [1, 2], Res41943), 
LMul17793 = multiply_layer([[[[[[0.9373, 0.055], [0.1587, 0.5675]]]]], [[[[[0.5812, 0.3755], [0.9509, 0.9878]]]]]], Mul17793), 
LRes56425 = reshape_layer(Mul17793, [1, 1, 4], Res56425), 
LRes16708 = reshape_layer(Res56425, [1, 4], Res16708), 
LDot16878 = dot_layer(Res41943,Res16708, 1, 1, Dot16878), 
LFla86063 = flatten_layer(Dot16878, Fla86063), 
LCon73890 = conv2D_layer([[[[0.1022, 0.5712], [0.7763, 0.2985]], [[0.1492, 0.2889], [0.3574, 0.9167]]]], 2, 2,[[[[0.7931, 0.777, 0.0985, 0.0945], [0.451, 0.7454, 0.8883, 0.1926]], [[0.5566, 0.0572, 0.3787, 0.0127], [0.9799, 0.2941, 0.9005, 0.137]]], [[[0.5357, 0.0705, 0.2582, 0.206], [0.2911, 0.7157, 0.8893, 0.2682]], [[0.6516, 0.6743, 0.5245, 0.725], [0.5573, 0.736, 0.3475, 0.6243]]]],[0, 0, 0, 0], 1, 1, false, 1, 1, Con73890), 
LRes64739 = reshape_layer(Con73890, [1, 4], Res64739), 
LGlo67960 = global_max_pool1D_layer(Res64739, Glo67960), 
LCon24204 = concatenate_layer([Glo67960,[[0.1589, 0.6239, 0.6114, 0.549]]], 1, Con24204), 
LAdd68354 = add_layer([Fla86063,Con24204], Add68354), 
exec_layers([LDot9402,LRes14498,LRes46628,LRes92316,LCon87243,LCon60260,LMax15523,LRes77948,LRes41943,LMul17793,LRes56425,LRes16708,LDot16878,LFla86063,LCon73890,LRes64739,LGlo67960,LCon24204,LAdd68354],["Dot9402","Res14498","Res46628","Res92316","Con87243","Con60260","Max15523","Res77948","Res41943","Mul17793","Res56425","Res16708","Dot16878","Fla86063","Con73890","Res64739","Glo67960","Con24204","Add68354"],Add68354,"Add68354")

Actual (Unparsed): [[2.9246397, 1.8064977, 2.1458639, 2.0913434, 0.6035866, 0.6407586, 0.7345861, 1.0065986]]

Expected (Unparsed): [[2.9246396421188003,1.8064976678917248,2.1458638310861002,2.091343406393685,0.603586575788,0.64075863575,0.7345860616290001,1.00659859695]]

Actual:   [[2.9247, 1.8065, 2.1459, 2.0914, 0.6036, 0.6408, 0.7346, 1.0066]]

Expected: [[2.9247, 1.8065, 2.1459, 2.0914, 0.6036, 0.6408, 0.7346, 1.0066]]