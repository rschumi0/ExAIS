import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Sub3442 = tf.keras.layers.Input(shape=([2, 2]))
in1Sub3442 = tf.keras.layers.Input(shape=([2, 2]))

Sub3442 = keras.layers.Subtract(name = 'Sub3442', )([in0Sub3442,in1Sub3442])
Sim11201 = keras.layers.SimpleRNN(1,name = 'Sim11201', )(Sub3442)
Res47132 = keras.layers.Reshape((1, 1), name = 'Res47132', )(Sim11201)
Glo44265 = keras.layers.GlobalAveragePooling1D(name = 'Glo44265', )(Res47132)
model = tf.keras.models.Model(inputs=[in0Sub3442,in1Sub3442], outputs=Glo44265)
w = model.get_layer('Sim11201').get_weights() 
w[0] = np.array([[9], [1]])
w[1] = np.array([[1]])
w[2] = np.array([3])
model.get_layer('Sim11201').set_weights(w) 
in0Sub3442 = tf.constant([[[0.3505, 0.329], [0.958, 0.7067]]])
in1Sub3442 = tf.constant([[[0.6739, 0.2961], [0.6864, 0.8147]]])
print (np.array2string(model.predict([in0Sub3442,in1Sub3442],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Glo44265.png')

LSub3442 = subtract_layer([[[0.3505, 0.329], [0.958, 0.7067]]], [[[0.6739, 0.2961], [0.6864, 0.8147]]], Sub3442), 
LSim11201 = simple_rnn_layer(Sub3442,[[9], [1]],[[1]],[3], Sim11201), 
LRes47132 = reshape_layer(Sim11201, [1, 1], Res47132), 
LGlo44265 = global_average_pooling1D_layer(Res47132, Glo44265), 
exec_layers([LSub3442,LSim11201,LRes47132,LGlo44265],["Sub3442","Sim11201","Res47132","Glo44265"],Glo44265,"Glo44265")

Actual (Unparsed): [[0.9999637]]

Expected (Unparsed): [[0.9999636769748371]]

Actual:   [[1]]

Expected: [[1]]