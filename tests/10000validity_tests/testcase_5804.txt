import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Sub7549 = tf.keras.layers.Input(shape=([3, 3, 2, 3]))
in1Sub7549 = tf.keras.layers.Input(shape=([3, 3, 2, 3]))
in0Min86929 = tf.keras.layers.Input(shape=([2, 2, 1]))
in1Min86929 = tf.keras.layers.Input(shape=([2, 2, 1]))
in0Con37304 = tf.keras.layers.Input(shape=([3, 3, 2]))

Sub7549 = keras.layers.Subtract(name = 'Sub7549', )([in0Sub7549,in1Sub7549])
Res58669 = keras.layers.Reshape((3, 3, 6), name = 'Res58669', )(Sub7549)
Min86929 = keras.layers.Minimum(name = 'Min86929', )([in0Min86929,in1Min86929])
Con32915 = keras.layers.Conv2D(4, (2, 1),strides=(12, 1), padding='valid', dilation_rate=(1, 1), name = 'Con32915', )(Min86929)
Zer49135 = keras.layers.ZeroPadding2D(padding=((2, 0), (1, 0)), name = 'Zer49135', )(Con32915)
Con37304 = keras.layers.Concatenate(axis=3, name = 'Con37304', )([Zer49135,in0Con37304])
Mul14890 = keras.layers.Multiply(name = 'Mul14890', )([Res58669,Con37304])
Max31695 = keras.layers.MaxPool2D(pool_size=(1, 1), strides=(7, 2), padding='same', name = 'Max31695', )(Mul14890)
model = tf.keras.models.Model(inputs=[in0Sub7549,in1Sub7549,in0Min86929,in1Min86929,in0Con37304], outputs=Max31695)
w = model.get_layer('Con32915').get_weights() 
w[0] = np.array([[[[0.8796, 0.6101, 0.5373, 0.8083]]], [[[0.6241, 0.513, 0.1328, 0.5656]]]])
w[1] = np.array([0, 0, 0, 0])
model.get_layer('Con32915').set_weights(w) 
in0Sub7549 = tf.constant([[[[[0.3661, 0.414, 0.4654], [0.6373, 0.2161, 0.6682]], [[0.9697, 0.7758, 0.9287], [0.6304, 0.8604, 0.8467]], [[0.1766, 0.6617, 0.5993], [0.9229, 0.9046, 0.6045]]], [[[0.1467, 0.9666, 0.6228], [0.0614, 0.7967, 0.3384]], [[0.6781, 0.6018, 0.301], [0.9474, 0.101, 0.7053]], [[0.099, 0.9192, 0.9129], [0.8, 0.0824, 0.6552]]], [[[0.9701, 0.4478, 0.3444], [0.8085, 0.5189, 0.5915]], [[0.7914, 0.0136, 0.6439], [0.7853, 0.3262, 0.1714]], [[0.6981, 0.5051, 0.5512], [0.7135, 0.6257, 0.954]]]]])
in1Sub7549 = tf.constant([[[[[0.5885, 0.5483, 0.8083], [0.2662, 0.6606, 0.325]], [[0.698, 0.6445, 0.538], [0.2448, 0.0334, 0.765]], [[0.8215, 0.8918, 0.8822], [0.7289, 0.2985, 0.4642]]], [[[0.0969, 0.9523, 0.2895], [0.3413, 0.0293, 0.6425]], [[0.9833, 0.1407, 0.5087], [0.9323, 0.2498, 0.2918]], [[0.1564, 0.3172, 0.3127], [0.6785, 0.0825, 0.7718]]], [[[0.9693, 0.0895, 0.8922], [0.8098, 0.7497, 0.0565]], [[0.7122, 0.7962, 0.5238], [0.1556, 0.6441, 0.0196]], [[0.5832, 0.0024, 0.6457], [0.3903, 0.1545, 0.9784]]]]])
in0Min86929 = tf.constant([[[[0.3508], [0.1407]], [[0.6309], [0.1964]]]])
in1Min86929 = tf.constant([[[[0.7447], [0.5754]], [[0.5501], [0.3292]]]])
in0Con37304 = tf.constant([[[[0.4252, 0.3921], [0.7518, 0.0913], [0.3033, 0.6457]], [[0.3302, 0.245], [0.5502, 0.6045], [0.0568, 0.1756]], [[0.8969, 0.0395], [0.6892, 0.4042], [0.4666, 0.5652]]]])
print (np.array2string(model.predict([in0Sub7549,in1Sub7549,in0Min86929,in1Min86929,in0Con37304],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Max31695.png')

LSub7549 = subtract_layer([[[[[0.3661, 0.414, 0.4654], [0.6373, 0.2161, 0.6682]], [[0.9697, 0.7758, 0.9287], [0.6304, 0.8604, 0.8467]], [[0.1766, 0.6617, 0.5993], [0.9229, 0.9046, 0.6045]]], [[[0.1467, 0.9666, 0.6228], [0.0614, 0.7967, 0.3384]], [[0.6781, 0.6018, 0.301], [0.9474, 0.101, 0.7053]], [[0.099, 0.9192, 0.9129], [0.8, 0.0824, 0.6552]]], [[[0.9701, 0.4478, 0.3444], [0.8085, 0.5189, 0.5915]], [[0.7914, 0.0136, 0.6439], [0.7853, 0.3262, 0.1714]], [[0.6981, 0.5051, 0.5512], [0.7135, 0.6257, 0.954]]]]], [[[[[0.5885, 0.5483, 0.8083], [0.2662, 0.6606, 0.325]], [[0.698, 0.6445, 0.538], [0.2448, 0.0334, 0.765]], [[0.8215, 0.8918, 0.8822], [0.7289, 0.2985, 0.4642]]], [[[0.0969, 0.9523, 0.2895], [0.3413, 0.0293, 0.6425]], [[0.9833, 0.1407, 0.5087], [0.9323, 0.2498, 0.2918]], [[0.1564, 0.3172, 0.3127], [0.6785, 0.0825, 0.7718]]], [[[0.9693, 0.0895, 0.8922], [0.8098, 0.7497, 0.0565]], [[0.7122, 0.7962, 0.5238], [0.1556, 0.6441, 0.0196]], [[0.5832, 0.0024, 0.6457], [0.3903, 0.1545, 0.9784]]]]], Sub7549), 
LRes58669 = reshape_layer(Sub7549, [3, 3, 6], Res58669), 
LMin86929 = minimum_layer([[[[[0.3508], [0.1407]], [[0.6309], [0.1964]]]], [[[[0.7447], [0.5754]], [[0.5501], [0.3292]]]]], Min86929), 
LCon32915 = conv2D_layer(Min86929, 2, 1,[[[[0.8796, 0.6101, 0.5373, 0.8083]]], [[[0.6241, 0.513, 0.1328, 0.5656]]]],[0, 0, 0, 0], 12, 1, false, 1, 1, Con32915), 
LZer49135 = zero_padding2D_layer(Con32915, 2, 0, 1, 0, Zer49135), 
LCon37304 = concatenate_layer([Zer49135,[[[[0.4252, 0.3921], [0.7518, 0.0913], [0.3033, 0.6457]], [[0.3302, 0.245], [0.5502, 0.6045], [0.0568, 0.1756]], [[0.8969, 0.0395], [0.6892, 0.4042], [0.4666, 0.5652]]]]], 3, Con37304), 
LMul14890 = multiply_layer([Res58669,Con37304], Mul14890), 
LMax31695 = max_pool2D_layer(Mul14890, 1, 1, 7, 2, true, Max31695), 
exec_layers([LSub7549,LRes58669,LMin86929,LCon32915,LZer49135,LCon37304,LMul14890,LMax31695],["Sub7549","Res58669","Min86929","Con32915","Zer49135","Con37304","Mul14890","Max31695"],Max31695,"Max31695")

Actual (Unparsed): [[[[-0.0000000, -0.0000000, -0.0000000, 0.0000000, -0.1890014, 0.1345687], [-0.0000000, -0.0000000, -0.0000000, 0.0000000, 0.1838301, 0.0905917]]]]

Expected (Unparsed): [[[[-0.0,-0.0,-0.0,0.0,-0.1890014,0.13456872],[-0.0,-0.0,-0.0,0.0,0.18383013,0.09059171000000003]]]]

Actual:   [[[[-0, -0, -0, 0, -0.189, 0.1346], [-0, -0, -0, 0, 0.1839, 0.0906]]]]

Expected: [[[[-0, -0, -0, 0, -0.189, 0.1346], [-0, -0, -0, 0, 0.1839, 0.0906]]]]