import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Max17901 = tf.keras.layers.Input(shape=([1, 2, 1, 2]))
in1Max17901 = tf.keras.layers.Input(shape=([1, 2, 1, 2]))
in0Con30956 = tf.keras.layers.Input(shape=([2, 3, 2, 1]))
in0Sub22632 = tf.keras.layers.Input(shape=([2, 3, 2, 3]))
in1Sub22632 = tf.keras.layers.Input(shape=([2, 3, 2, 3]))

Max17901 = keras.layers.Maximum(name = 'Max17901', )([in0Max17901,in1Max17901])
Lay79754 = keras.layers.LayerNormalization(axis=2, epsilon=1.5045244340882558, name = 'Lay79754', )(Max17901)
Zer33753 = keras.layers.ZeroPadding3D(padding=((1, 0), (1, 0), (1, 0)), name = 'Zer33753', )(Lay79754)
Con30956 = keras.layers.Concatenate(axis=4, name = 'Con30956', )([Zer33753,in0Con30956])
Sub22632 = keras.layers.Subtract(name = 'Sub22632', )([in0Sub22632,in1Sub22632])
Add47398 = keras.layers.Add(name = 'Add47398', )([Con30956,Sub22632])
model = tf.keras.models.Model(inputs=[in0Max17901,in1Max17901,in0Con30956,in0Sub22632,in1Sub22632], outputs=Add47398)
in0Max17901 = tf.constant([[[[[0.7818, 0.5245]], [[0.609, 0.162]]]]])
in1Max17901 = tf.constant([[[[[0.8211, 0.2325]], [[0.0431, 0.8228]]]]])
in0Con30956 = tf.constant([[[[[0.9852], [0.7971]], [[0.846], [0.7072]], [[0.1574], [0.7252]]], [[[0.7196], [0.7208]], [[0.6446], [0.5171]], [[0.784], [0.2967]]]]])
in0Sub22632 = tf.constant([[[[[0.4933, 0.9575, 0.8005], [0.5988, 0.9621, 0.6739]], [[0.8991, 0.6856, 0.7901], [0.0824, 0.23, 0.5862]], [[0.2434, 0.803, 0.5851], [0.882, 0.4634, 0.6105]]], [[[0.5285, 0.9927, 0.4734], [0.0887, 0.0024, 0.1966]], [[0.9335, 0.5351, 0.3296], [0.5871, 0.4054, 0.5484]], [[0.4486, 0.6991, 0.6425], [0.4992, 0.8046, 0.2556]]]]])
in1Sub22632 = tf.constant([[[[[0.0826, 0.9988, 0.3036], [0.858, 0.2875, 0.5589]], [[0.1372, 0.4693, 0.5487], [0.8666, 0.085, 0.2269]], [[0.2555, 0.4841, 0.1097], [0.4602, 0.9111, 0.3296]]], [[[0.6741, 0.7863, 0.8736], [0.9941, 0.2308, 0.8114]], [[0.9948, 0.8065, 0.7618], [0.2719, 0.3396, 0.5702]], [[0.0763, 0.4196, 0.076], [0.0665, 0.8178, 0.0728]]]]])
print (np.array2string(model.predict([in0Max17901,in1Max17901,in0Con30956,in0Sub22632,in1Sub22632],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Add47398.png')

LMax17901 = maximum_layer([[[[[[0.7818, 0.5245]], [[0.609, 0.162]]]]], [[[[[0.8211, 0.2325]], [[0.0431, 0.8228]]]]]], Max17901), 
LLay79754 = layer_normalization_layer(Max17901, 2, 1.5045244340882558, Lay79754), 
LZer33753 = zero_padding3D_layer(Lay79754, 1, 0, 1, 0, 1, 0, Zer33753), 
LCon30956 = concatenate_layer([Zer33753,[[[[[0.9852], [0.7971]], [[0.846], [0.7072]], [[0.1574], [0.7252]]], [[[0.7196], [0.7208]], [[0.6446], [0.5171]], [[0.784], [0.2967]]]]]], 4, Con30956), 
LSub22632 = subtract_layer([[[[[0.4933, 0.9575, 0.8005], [0.5988, 0.9621, 0.6739]], [[0.8991, 0.6856, 0.7901], [0.0824, 0.23, 0.5862]], [[0.2434, 0.803, 0.5851], [0.882, 0.4634, 0.6105]]], [[[0.5285, 0.9927, 0.4734], [0.0887, 0.0024, 0.1966]], [[0.9335, 0.5351, 0.3296], [0.5871, 0.4054, 0.5484]], [[0.4486, 0.6991, 0.6425], [0.4992, 0.8046, 0.2556]]]]], [[[[[0.0826, 0.9988, 0.3036], [0.858, 0.2875, 0.5589]], [[0.1372, 0.4693, 0.5487], [0.8666, 0.085, 0.2269]], [[0.2555, 0.4841, 0.1097], [0.4602, 0.9111, 0.3296]]], [[[0.6741, 0.7863, 0.8736], [0.9941, 0.2308, 0.8114]], [[0.9948, 0.8065, 0.7618], [0.2719, 0.3396, 0.5702]], [[0.0763, 0.4196, 0.076], [0.0665, 0.8178, 0.0728]]]]], Sub22632), 
LAdd47398 = add_layer([Con30956,Sub22632], Add47398), 
exec_layers([LMax17901,LLay79754,LZer33753,LCon30956,LSub22632,LAdd47398],["Max17901","Lay79754","Zer33753","Con30956","Sub22632","Add47398"],Add47398,"Add47398")

Actual (Unparsed): [[[[[0.4107000, -0.0413000, 1.4821000], [-0.2592000, 0.6746000, 0.9121000]], [[0.7619000, 0.2163000, 1.0874000], [-0.7842000, 0.1450000, 1.0665000]], [[-0.0121000, 0.3189000, 0.6328000], [0.4218000, -0.4477000, 1.0061000]]], [[[-0.1456000, 0.2064000, 0.3194000], [-0.9054000, -0.2284000, 0.1060000]], [[-0.0613000, -0.2714000, 0.2124000], [0.4013378, -0.0549081, 0.4952999]], [[0.3723000, 0.2795000, 1.3505000], [0.3465622, 0.1075081, 0.4795000]]]]]

Expected (Unparsed): [[[[[0.4107,-0.0413,1.4821],[-0.2592,0.6746,0.9121000000000001]],[[0.7619,0.2163,1.0874000000000001],[-0.7842,0.14500000000000002,1.0665]],[[-0.0121,0.3189000000000001,0.6327999999999999],[0.4218,-0.44770000000000004,1.0061]]],[[[-0.14560000000000006,0.20640000000000003,0.31939999999999996],[-0.9054,-0.2284,0.10599999999999998]],[[-0.06130000000000002,-0.2714,0.21239999999999992],[0.4013378188865751,-0.05490810349039986,0.49529999999999996]],[[0.37229999999999996,0.2795000000000001,1.3505],[0.34656218111342496,0.10750810349039984,0.47950000000000004]]]]]

Actual:   [[[[[0.4107, -0.0413, 1.4821], [-0.2592, 0.6746, 0.9121]], [[0.7619, 0.2163, 1.0874], [-0.7842, 0.145, 1.0665]], [[-0.0121, 0.3189, 0.6328], [0.4218, -0.4477, 1.0061]]], [[[-0.1456, 0.2064, 0.3194], [-0.9054, -0.2284, 0.106]], [[-0.0613, -0.2714, 0.2124], [0.4014, -0.0549, 0.4953]], [[0.3723, 0.2795, 1.3505], [0.3466, 0.1076, 0.4795]]]]]

Expected: [[[[[0.4107, -0.0413, 1.4821], [-0.2592, 0.6746, 0.9122]], [[0.7619, 0.2163, 1.0875], [-0.7842, 0.1451, 1.0665]], [[-0.0121, 0.319, 0.6328], [0.4218, -0.4477, 1.0061]]], [[[-0.1456, 0.2065, 0.3194], [-0.9054, -0.2284, 0.106]], [[-0.0613, -0.2714, 0.2124], [0.4014, -0.0549, 0.4953]], [[0.3723, 0.2796, 1.3505], [0.3466, 0.1076, 0.4796]]]]]