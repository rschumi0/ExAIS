import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Den34022 = tf.keras.layers.Input(shape=([5, 5]))
in0Max47602 = tf.keras.layers.Input(shape=([1, 2, 2, 1]))
in1Max47602 = tf.keras.layers.Input(shape=([1, 2, 2, 1]))
in0Con53437 = tf.keras.layers.Input(shape=([1]))

Den34022 = keras.layers.Dense(2,name = 'Den34022', )(in0Den34022)
Sim16170 = keras.layers.SimpleRNN(2,name = 'Sim16170', )(Den34022)
Max47602 = keras.layers.Maximum(name = 'Max47602', )([in0Max47602,in1Max47602])
Glo51142 = keras.layers.GlobalMaxPool3D(name = 'Glo51142', )(Max47602)
Con53437 = keras.layers.Concatenate(axis=1, name = 'Con53437', )([Glo51142,in0Con53437])
Ave59701 = keras.layers.Average(name = 'Ave59701', )([Sim16170,Con53437])
model = tf.keras.models.Model(inputs=[in0Den34022,in0Max47602,in1Max47602,in0Con53437], outputs=Ave59701)
w = model.get_layer('Den34022').get_weights() 
w[0] = np.array([[0.1752, 0.8472], [0.4711, 0.1992], [0.0211, 0.3833], [0.4149, 0.0335], [0.3591, 0.6784]])
w[1] = np.array([0.3534, 0.2385])
model.get_layer('Den34022').set_weights(w) 
w = model.get_layer('Sim16170').get_weights() 
w[0] = np.array([[7, 6], [6, 7]])
w[1] = np.array([[5, 7], [2, 9]])
w[2] = np.array([10, 10])
model.get_layer('Sim16170').set_weights(w) 
in0Den34022 = tf.constant([[[0.6503, 0.9103, 0.6245, 0.9787, 0.5006], [0.5068, 0.2026, 0.9329, 0.7799, 0.6008], [0.1359, 0.6448, 0.1004, 0.2623, 0.6148], [0.7705, 0.9935, 0.4788, 0.6263, 0.2767], [0.1179, 0.4252, 0.951, 0.1309, 0.9983]]])
in0Max47602 = tf.constant([[[[[0.4754], [0.9811]], [[0.3592], [0.6195]]]]])
in1Max47602 = tf.constant([[[[[0.598], [0.2841]], [[0.7871], [0.442]]]]])
in0Con53437 = tf.constant([[0.2646]])
print (np.array2string(model.predict([in0Den34022,in0Max47602,in1Max47602,in0Con53437],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Ave59701.png')

LDen34022 = dense_layer([[[0.6503, 0.9103, 0.6245, 0.9787, 0.5006], [0.5068, 0.2026, 0.9329, 0.7799, 0.6008], [0.1359, 0.6448, 0.1004, 0.2623, 0.6148], [0.7705, 0.9935, 0.4788, 0.6263, 0.2767], [0.1179, 0.4252, 0.951, 0.1309, 0.9983]]], [[0.1752, 0.8472], [0.4711, 0.1992], [0.0211, 0.3833], [0.4149, 0.0335], [0.3591, 0.6784]],[0.3534, 0.2385], Den34022), 
LSim16170 = simple_rnn_layer(Den34022,[[7, 6], [6, 7]],[[5, 7], [2, 9]],[10, 10], Sim16170), 
LMax47602 = maximum_layer([[[[[[0.4754], [0.9811]], [[0.3592], [0.6195]]]]], [[[[[0.598], [0.2841]], [[0.7871], [0.442]]]]]], Max47602), 
LGlo51142 = global_max_pool3D_layer(Max47602, Glo51142), 
LCon53437 = concatenate_layer([Glo51142,[[0.2646]]], 1, Con53437), 
LAve59701 = average_layer([Sim16170,Con53437], Ave59701), 
exec_layers([LDen34022,LSim16170,LMax47602,LGlo51142,LCon53437,LAve59701],["Den34022","Sim16170","Max47602","Glo51142","Con53437","Ave59701"],Ave59701,"Ave59701")

Actual (Unparsed): [[0.9905500, 0.6323000]]

Expected (Unparsed): [[0.99055,0.6323]]

Actual:   [[0.9906, 0.6323]]

Expected: [[0.9906, 0.6323]]