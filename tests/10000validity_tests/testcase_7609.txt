import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Mul85784 = tf.keras.layers.Input(shape=([2, 1]))
in1Mul85784 = tf.keras.layers.Input(shape=([2, 1]))
in0Con97870 = tf.keras.layers.Input(shape=([2, 1, 3, 1]))
in0Max9551 = tf.keras.layers.Input(shape=([1, 1, 2, 2]))
in1Max9551 = tf.keras.layers.Input(shape=([1, 1, 2, 2]))

Mul85784 = keras.layers.Multiply(name = 'Mul85784', )([in0Mul85784,in1Mul85784])
PRe48276 = keras.layers.PReLU(name = 'PRe48276', )(Mul85784)
Res59233 = keras.layers.Reshape((2, 1, 1), name = 'Res59233', )(PRe48276)
Res20934 = keras.layers.Reshape((2, 1, 1, 1), name = 'Res20934', )(Res59233)
Zer31245 = keras.layers.ZeroPadding3D(padding=((0, 0), (0, 0), (2, 0)), name = 'Zer31245', )(Res20934)
Con97870 = keras.layers.Concatenate(axis=4, name = 'Con97870', )([Zer31245,in0Con97870])
Max9551 = keras.layers.Maximum(name = 'Max9551', )([in0Max9551,in1Max9551])
Zer29487 = keras.layers.ZeroPadding3D(padding=((1, 0), (0, 0), (1, 0)), name = 'Zer29487', )(Max9551)
Ave50119 = keras.layers.Average(name = 'Ave50119', )([Con97870,Zer29487])
Con34946 = keras.layers.Conv3DTranspose(3, (1, 1, 1),strides=(1, 1, 1), padding='valid', name = 'Con34946', )(Ave50119)
model = tf.keras.models.Model(inputs=[in0Mul85784,in1Mul85784,in0Con97870,in0Max9551,in1Max9551], outputs=Con34946)
w = model.get_layer('PRe48276').get_weights() 
w[0] = np.array([[0.1301], [0.8808]])
model.get_layer('PRe48276').set_weights(w) 
w = model.get_layer('Con34946').get_weights() 
w[0] = np.array([[[[[0.7018, 0.7093], [0.5255, 0.3362], [0.3209, 0.6847]]]]])
w[1] = np.array([0, 0, 0])
model.get_layer('Con34946').set_weights(w) 
in0Mul85784 = tf.constant([[[0.9587], [0.1742]]])
in1Mul85784 = tf.constant([[[0.1126], [0.8469]]])
in0Con97870 = tf.constant([[[[[0.5019], [0.779], [0.4061]]], [[[0.7508], [0.1291], [0.8134]]]]])
in0Max9551 = tf.constant([[[[[0.3791, 0.2759], [0.022, 0.9494]]]]])
in1Max9551 = tf.constant([[[[[0.6687, 0.5314], [0.4857, 0.892]]]]])
print (np.array2string(model.predict([in0Mul85784,in1Mul85784,in0Con97870,in0Max9551,in1Max9551],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Con34946.png')

LMul85784 = multiply_layer([[[[0.9587], [0.1742]]], [[[0.1126], [0.8469]]]], Mul85784), 
LPRe48276 = prelu_layer(Mul85784, [[0.1301], [0.8808]], PRe48276), 
LRes59233 = reshape_layer(PRe48276, [2, 1, 1], Res59233), 
LRes20934 = reshape_layer(Res59233, [2, 1, 1, 1], Res20934), 
LZer31245 = zero_padding3D_layer(Res20934, 0, 0, 0, 0, 2, 0, Zer31245), 
LCon97870 = concatenate_layer([Zer31245,[[[[[0.5019], [0.779], [0.4061]]], [[[0.7508], [0.1291], [0.8134]]]]]], 4, Con97870), 
LMax9551 = maximum_layer([[[[[[0.3791, 0.2759], [0.022, 0.9494]]]]], [[[[[0.6687, 0.5314], [0.4857, 0.892]]]]]], Max9551), 
LZer29487 = zero_padding3D_layer(Max9551, 1, 0, 0, 0, 1, 0, Zer29487), 
LAve50119 = average_layer([Con97870,Zer29487], Ave50119), 
LCon34946 = conv3D_transpose_layer(Ave50119, 1, 1, 1,[[[[[0.7018, 0.7093], [0.5255, 0.3362], [0.3209, 0.6847]]]]],[0, 0, 0], 1, 1, 1, false, Con34946), 
exec_layers([LMul85784,LPRe48276,LRes59233,LRes20934,LZer31245,LCon97870,LMax9551,LZer29487,LAve50119,LCon34946],["Mul85784","PRe48276","Res59233","Res20934","Zer31245","Con97870","Max9551","Zer29487","Ave50119","Con34946"],Con34946,"Con34946")

Actual (Unparsed): [[[[[0.1779988, 0.0843694, 0.1718255], [0.2762723, 0.1309499, 0.2666906], [0.1819029, 0.0966292, 0.1563489]]], [[[0.2662712, 0.1262095, 0.2570364], [0.4688932, 0.2867310, 0.3334151], [0.8473774, 0.4627079, 0.7050963]]]]]

Expected (Unparsed): [[[[[0.17799883500000002,0.08436939,0.171825465],[0.27627235,0.1309499,0.26669065],[0.18190288665800003,0.096629172655,0.156348851529]]],[[[0.26627122000000003,0.12620948,0.25703638],[0.46889315499999995,0.286730975,0.33341508999999997],[0.847377419982,0.462707857245,0.705096330291]]]]]

Actual:   [[[[[0.178, 0.0844, 0.1719], [0.2763, 0.131, 0.2667], [0.182, 0.0967, 0.1564]]], [[[0.2663, 0.1263, 0.2571], [0.4689, 0.2868, 0.3335], [0.8474, 0.4628, 0.7051]]]]]

Expected: [[[[[0.178, 0.0844, 0.1719], [0.2763, 0.131, 0.2667], [0.182, 0.0967, 0.1564]]], [[[0.2663, 0.1263, 0.2571], [0.4689, 0.2868, 0.3335], [0.8474, 0.4628, 0.7051]]]]]