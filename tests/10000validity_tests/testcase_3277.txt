import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Sub12529 = tf.keras.layers.Input(shape=([2]))
in1Sub12529 = tf.keras.layers.Input(shape=([2]))
in0Con8760 = tf.keras.layers.Input(shape=([5, 1]))
in0Sep3275 = tf.keras.layers.Input(shape=([2, 2, 1]))
in0Con4022 = tf.keras.layers.Input(shape=([2, 2]))
in0Mul36561 = tf.keras.layers.Input(shape=([2, 1]))
in1Mul36561 = tf.keras.layers.Input(shape=([2, 1]))
in0Con91291 = tf.keras.layers.Input(shape=([5, 1]))
in0Ave91461 = tf.keras.layers.Input(shape=([2, 2]))
in1Ave91461 = tf.keras.layers.Input(shape=([2, 2]))

Sub12529 = keras.layers.Subtract(name = 'Sub12529', )([in0Sub12529,in1Sub12529])
Res89065 = keras.layers.Reshape((2, 1), name = 'Res89065', )(Sub12529)
Zer50196 = keras.layers.ZeroPadding1D(padding=((3, 0)), name = 'Zer50196', )(Res89065)
Con8760 = keras.layers.Concatenate(axis=2, name = 'Con8760', )([Zer50196,in0Con8760])
Sep3275 = keras.layers.SeparableConv2D(3, (2, 2),strides=(2, 2), padding='valid', name = 'Sep3275', )(in0Sep3275)
Res54574 = keras.layers.Reshape((1, 3), name = 'Res54574', )(Sep3275)
Zer79368 = keras.layers.ZeroPadding1D(padding=((1, 0)), name = 'Zer79368', )(Res54574)
Con4022 = keras.layers.Concatenate(axis=2, name = 'Con4022', )([Zer79368,in0Con4022])
Mul36561 = keras.layers.Multiply(name = 'Mul36561', )([in0Mul36561,in1Mul36561])
Dot92025 = keras.layers.Dot(axes=(1, 1), name = 'Dot92025', )([Con4022,Mul36561])
Con91291 = keras.layers.Concatenate(axis=2, name = 'Con91291', )([Dot92025,in0Con91291])
Ave91461 = keras.layers.Average(name = 'Ave91461', )([in0Ave91461,in1Ave91461])
Cro69100 = keras.layers.Cropping1D(cropping=((1, 0)), name = 'Cro69100', )(Ave91461)
Zer38018 = keras.layers.ZeroPadding1D(padding=((4, 0)), name = 'Zer38018', )(Cro69100)
Mul21580 = keras.layers.Multiply(name = 'Mul21580', )([Con91291,Zer38018])
Min53963 = keras.layers.Minimum(name = 'Min53963', )([Con8760,Mul21580])
model = tf.keras.models.Model(inputs=[in0Sub12529,in1Sub12529,in0Con8760,in0Sep3275,in0Con4022,in0Mul36561,in1Mul36561,in0Con91291,in0Ave91461,in1Ave91461], outputs=Min53963)
w = model.get_layer('Sep3275').get_weights() 
w[0] = np.array([[[[0.1043]], [[0.8302]]], [[[0.4432]], [[0.7818]]]])
w[1] = np.array([[[[0.4745, 0.7587, 0.0934]]]])
w[2] = np.array([0, 0, 0])
model.get_layer('Sep3275').set_weights(w) 
in0Sub12529 = tf.constant([[0.1225, 0.8074]])
in1Sub12529 = tf.constant([[0.0542, 0.0683]])
in0Con8760 = tf.constant([[[0.7977], [0.4787], [0.2657], [0.0847], [0.6475]]])
in0Sep3275 = tf.constant([[[[0.5733], [0.7019]], [[0.2834], [0.4852]]]])
in0Con4022 = tf.constant([[[0.4169, 0.9603], [0.6605, 0.5789]]])
in0Mul36561 = tf.constant([[[0.8213], [0.5151]]])
in1Mul36561 = tf.constant([[[0.5007], [0.4604]]])
in0Con91291 = tf.constant([[[0.575], [0.3281], [0.0071], [0.8567], [0.5497]]])
in0Ave91461 = tf.constant([[[0.2939, 0.8297], [0.6307, 0.3068]]])
in1Ave91461 = tf.constant([[[0.8046, 0.0799], [0.4833, 0.9705]]])
print (np.array2string(model.predict([in0Sub12529,in1Sub12529,in0Con8760,in0Sep3275,in0Con4022,in0Mul36561,in1Mul36561,in0Con91291,in0Ave91461,in1Ave91461],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Min53963.png')

LSub12529 = subtract_layer([[0.1225, 0.8074]], [[0.0542, 0.0683]], Sub12529), 
LRes89065 = reshape_layer(Sub12529, [2, 1], Res89065), 
LZer50196 = zero_padding1D_layer(Res89065, 3, 0, Zer50196), 
LCon8760 = concatenate_layer([Zer50196,[[[0.7977], [0.4787], [0.2657], [0.0847], [0.6475]]]], 2, Con8760), 
LSep3275 = separable_conv2D_layer([[[[0.5733], [0.7019]], [[0.2834], [0.4852]]]], 2, 2,[[[[[0.1043]], [[0.8302]]], [[[0.4432]], [[0.7818]]]],[[[[0.4745, 0.7587, 0.0934]]]]],[0, 0, 0], 2, 2, false, Sep3275), 
LRes54574 = reshape_layer(Sep3275, [1, 3], Res54574), 
LZer79368 = zero_padding1D_layer(Res54574, 1, 0, Zer79368), 
LCon4022 = concatenate_layer([Zer79368,[[[0.4169, 0.9603], [0.6605, 0.5789]]]], 2, Con4022), 
LMul36561 = multiply_layer([[[[0.8213], [0.5151]]], [[[0.5007], [0.4604]]]], Mul36561), 
LDot92025 = dot_layer(Con4022,Mul36561, 1, 1, Dot92025), 
LCon91291 = concatenate_layer([Dot92025,[[[0.575], [0.3281], [0.0071], [0.8567], [0.5497]]]], 2, Con91291), 
LAve91461 = average_layer([[[[0.2939, 0.8297], [0.6307, 0.3068]]], [[[0.8046, 0.0799], [0.4833, 0.9705]]]], Ave91461), 
LCro69100 = cropping1D_layer(Ave91461, 1, 0, Cro69100), 
LZer38018 = zero_padding1D_layer(Cro69100, 4, 0, Zer38018), 
LMul21580 = multiply_layer([Con91291,Zer38018], Mul21580), 
LMin53963 = minimum_layer([Con8760,Mul21580], Min53963), 
exec_layers([LSub12529,LRes89065,LZer50196,LCon8760,LSep3275,LRes54574,LZer79368,LCon4022,LMul36561,LDot92025,LCon91291,LAve91461,LCro69100,LZer38018,LMul21580,LMin53963],["Sub12529","Res89065","Zer50196","Con8760","Sep3275","Res54574","Zer79368","Con4022","Mul36561","Dot92025","Con91291","Ave91461","Cro69100","Zer38018","Mul21580","Min53963"],Min53963,"Min53963")

Actual (Unparsed): [[[0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.2964279, 0.3510659]]]

Expected (Unparsed): [[[0,0.0],[0,0.0],[0,0.0],[0.0,0.0],[0.29642793454515304,0.351065905]]]

Actual:   [[[0, 0], [0, 0], [0, 0], [0, 0], [0.2965, 0.3511]]]

Expected: [[[0, 0], [0, 0], [0, 0], [0, 0], [0.2965, 0.3511]]]