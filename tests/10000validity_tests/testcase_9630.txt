import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Mul31135 = tf.keras.layers.Input(shape=([2, 2, 2]))
in1Mul31135 = tf.keras.layers.Input(shape=([2, 2, 2]))
in0Cro8788 = tf.keras.layers.Input(shape=([3, 1]))
in0Con7431 = tf.keras.layers.Input(shape=([1, 3]))
in0Glo6262 = tf.keras.layers.Input(shape=([2, 1]))
in0Con63963 = tf.keras.layers.Input(shape=([11]))

Mul31135 = keras.layers.Multiply(name = 'Mul31135', )([in0Mul31135,in1Mul31135])
Sep6605 = keras.layers.SeparableConv2D(4, (2, 2),strides=(2, 2), padding='same', name = 'Sep6605', )(Mul31135)
Res6304 = keras.layers.Reshape((1, 4), name = 'Res6304', )(Sep6605)
Cro8788 = keras.layers.Cropping1D(cropping=((1, 1)), name = 'Cro8788', )(in0Cro8788)
Con7431 = keras.layers.Concatenate(axis=2, name = 'Con7431', )([Cro8788,in0Con7431])
Min19244 = keras.layers.Minimum(name = 'Min19244', )([Res6304,Con7431])
Zer49447 = keras.layers.ZeroPadding1D(padding=((1, 1)), name = 'Zer49447', )(Min19244)
Fla50682 = keras.layers.Flatten(name = 'Fla50682', )(Zer49447)
Glo6262 = keras.layers.GlobalAveragePooling1D(name = 'Glo6262', )(in0Glo6262)
Con63963 = keras.layers.Concatenate(axis=1, name = 'Con63963', )([Glo6262,in0Con63963])
Mul86818 = keras.layers.Multiply(name = 'Mul86818', )([Fla50682,Con63963])
model = tf.keras.models.Model(inputs=[in0Mul31135,in1Mul31135,in0Cro8788,in0Con7431,in0Glo6262,in0Con63963], outputs=Mul86818)
w = model.get_layer('Sep6605').get_weights() 
w[0] = np.array([[[[0.2267], [0.0752]], [[0.3539], [0.618]]], [[[0.5823], [0.3516]], [[0.6697], [0.2613]]]])
w[1] = np.array([[[[0.3804, 0.3268, 0.8678, 0.0938], [0.539, 0.2621, 0.7749, 0.447]]]])
w[2] = np.array([0, 0, 0, 0])
model.get_layer('Sep6605').set_weights(w) 
in0Mul31135 = tf.constant([[[[0.8572, 0.6923], [0.2663, 0.901]], [[0.4208, 0.0492], [0.9491, 0.0542]]]])
in1Mul31135 = tf.constant([[[[0.5267, 0.1069], [0.2645, 0.5788]], [[0.8249, 0.3965], [0.6464, 0.6653]]]])
in0Cro8788 = tf.constant([[[1.1544], [1.8014], [1.538]]])
in0Con7431 = tf.constant([[[0.2877, 0.9697, 0.7454]]])
in0Glo6262 = tf.constant([[[1.2447], [1.9556]]])
in0Con63963 = tf.constant([[0.327, 0.0886, 0.224, 0.1712, 0.4601, 0.4994, 0.1194, 0.8978, 0.255, 0.5427, 0.2047]])
print (np.array2string(model.predict([in0Mul31135,in1Mul31135,in0Cro8788,in0Con7431,in0Glo6262,in0Con63963],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Mul86818.png')

LMul31135 = multiply_layer([[[[[0.8572, 0.6923], [0.2663, 0.901]], [[0.4208, 0.0492], [0.9491, 0.0542]]]], [[[[0.5267, 0.1069], [0.2645, 0.5788]], [[0.8249, 0.3965], [0.6464, 0.6653]]]]], Mul31135), 
LSep6605 = separable_conv2D_layer(Mul31135, 2, 2,[[[[[0.2267], [0.0752]], [[0.3539], [0.618]]], [[[0.5823], [0.3516]], [[0.6697], [0.2613]]]],[[[[0.3804, 0.3268, 0.8678, 0.0938], [0.539, 0.2621, 0.7749, 0.447]]]]],[0, 0, 0, 0], 2, 2, true, Sep6605), 
LRes6304 = reshape_layer(Sep6605, [1, 4], Res6304), 
LCro8788 = cropping1D_layer([[[1.1544], [1.8014], [1.538]]], 1, 1, Cro8788), 
LCon7431 = concatenate_layer([Cro8788,[[[0.2877, 0.9697, 0.7454]]]], 2, Con7431), 
LMin19244 = minimum_layer([Res6304,Con7431], Min19244), 
LZer49447 = zero_padding1D_layer(Min19244, 1, 1, Zer49447), 
LFla50682 = flatten_layer(Zer49447, Fla50682), 
LGlo6262 = global_average_pooling1D_layer([[[1.2447], [1.9556]]], Glo6262), 
LCon63963 = concatenate_layer([Glo6262,[[0.327, 0.0886, 0.224, 0.1712, 0.4601, 0.4994, 0.1194, 0.8978, 0.255, 0.5427, 0.2047]]], 1, Con63963), 
LMul86818 = multiply_layer([Fla50682,Con63963], Mul86818), 
exec_layers([LMul31135,LSep6605,LRes6304,LCro8788,LCon7431,LMin19244,LZer49447,LFla50682,LGlo6262,LCon63963,LMul86818],["Mul31135","Sep6605","Res6304","Cro8788","Con7431","Min19244","Zer49447","Fla50682","Glo6262","Con63963","Mul86818"],Mul86818,"Mul86818")

Actual (Unparsed): [[0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0799649, 0.1323708, 0.4539903, 0.0266578, 0.0000000, 0.0000000, 0.0000000, 0.0000000]]

Expected (Unparsed): [[0.0,0.0,0.0,0.0,0.07996491973463532,0.13237077,0.45399027980012335,0.026657760333279837,0.0,0.0,0.0,0.0]]

Actual:   [[0, 0, 0, 0, 0.08, 0.1324, 0.454, 0.0267, 0, 0, 0, 0]]

Expected: [[0, 0, 0, 0, 0.08, 0.1324, 0.454, 0.0267, 0, 0, 0, 0]]