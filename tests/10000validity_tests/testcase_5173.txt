import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Min66647 = tf.keras.layers.Input(shape=([2, 1]))
in1Min66647 = tf.keras.layers.Input(shape=([2, 1]))

Min66647 = keras.layers.Minimum(name = 'Min66647', )([in0Min66647,in1Min66647])
Zer73613 = keras.layers.ZeroPadding1D(padding=((1, 1)), name = 'Zer73613', )(Min66647)
Bat94745 = keras.layers.BatchNormalization(axis=2, epsilon=0.341178361893375,  name = 'Bat94745', )(Zer73613)
model = tf.keras.models.Model(inputs=[in0Min66647,in1Min66647], outputs=Bat94745)
w = model.get_layer('Bat94745').get_weights() 
w[0] = np.array([0.0163])
w[1] = np.array([0.2719])
w[2] = np.array([0.1427])
w[3] = np.array([0.4458])
model.get_layer('Bat94745').set_weights(w) 
in0Min66647 = tf.constant([[[0.0356], [0.3414]]])
in1Min66647 = tf.constant([[[0.2125], [0.6518]]])
print (np.array2string(model.predict([in0Min66647,in1Min66647],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Bat94745.png')

LMin66647 = minimum_layer([[[[0.0356], [0.3414]]], [[[0.2125], [0.6518]]]], Min66647), 
LZer73613 = zero_padding1D_layer(Min66647, 1, 1, Zer73613), 
LBat94745 = batch_normalization_layer(Zer73613, 2, 0.341178361893375, [0.0163], [0.2719], [0.1427], [0.4458], Bat94745), 
exec_layers([LMin66647,LZer73613,LBat94745],["Min66647","Zer73613","Bat94745"],Bat94745,"Bat94745")

Actual (Unparsed): [[[0.2692780], [0.2699321], [0.2755509], [0.2692780]]]

Expected (Unparsed): [[[0.2692780151271868],[0.2699321332874681],[0.27555093478786247],[0.2692780151271868]]]

Actual:   [[[0.2693], [0.27], [0.2756], [0.2693]]]

Expected: [[[0.2693], [0.27], [0.2756], [0.2693]]]