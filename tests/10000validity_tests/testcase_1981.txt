import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Mul83964 = tf.keras.layers.Input(shape=([1, 2, 1]))
in1Mul83964 = tf.keras.layers.Input(shape=([1, 2, 1]))

Mul83964 = keras.layers.Multiply(name = 'Mul83964', )([in0Mul83964,in1Mul83964])
Res2889 = keras.layers.Reshape((1, 2), name = 'Res2889', )(Mul83964)
Zer48945 = keras.layers.ZeroPadding1D(padding=((1, 1)), name = 'Zer48945', )(Res2889)
model = tf.keras.models.Model(inputs=[in0Mul83964,in1Mul83964], outputs=Zer48945)
in0Mul83964 = tf.constant([[[[0.1884], [0.5295]]]])
in1Mul83964 = tf.constant([[[[0.7912], [0.2082]]]])
print (np.array2string(model.predict([in0Mul83964,in1Mul83964],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Zer48945.png')

LMul83964 = multiply_layer([[[[[0.1884], [0.5295]]]], [[[[0.7912], [0.2082]]]]], Mul83964), 
LRes2889 = reshape_layer(Mul83964, [1, 2], Res2889), 
LZer48945 = zero_padding1D_layer(Res2889, 1, 1, Zer48945), 
exec_layers([LMul83964,LRes2889,LZer48945],["Mul83964","Res2889","Zer48945"],Zer48945,"Zer48945")

Actual (Unparsed): [[[0.0000000, 0.0000000], [0.1490621, 0.1102419], [0.0000000, 0.0000000]]]

Expected (Unparsed): [[[0,0],[0.14906208,0.11024189999999999],[0,0]]]

Actual:   [[[0, 0], [0.1491, 0.1103], [0, 0]]]

Expected: [[[0, 0], [0.1491, 0.1103], [0, 0]]]