import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Mul76064 = tf.keras.layers.Input(shape=([2, 1, 1, 1]))
in1Mul76064 = tf.keras.layers.Input(shape=([2, 1, 1, 1]))
in0Con1434 = tf.keras.layers.Input(shape=([2, 1]))
in0Lea11102 = tf.keras.layers.Input(shape=([2, 1]))

Mul76064 = keras.layers.Multiply(name = 'Mul76064', )([in0Mul76064,in1Mul76064])
Res43741 = keras.layers.Reshape((2, 1, 1), name = 'Res43741', )(Mul76064)
Res15817 = keras.layers.Reshape((2, 1), name = 'Res15817', )(Res43741)
Con1434 = keras.layers.Concatenate(axis=2, name = 'Con1434', )([Res15817,in0Con1434])
Lea11102 = keras.layers.LeakyReLU(alpha=4.672946561342212, name = 'Lea11102', input_shape=(2, 1))(in0Lea11102)
Loc76546 = keras.layers.LocallyConnected1D(2, (1),strides=(3), name = 'Loc76546', )(Lea11102)
Zer88034 = keras.layers.ZeroPadding1D(padding=((1, 0)), name = 'Zer88034', )(Loc76546)
Mul59795 = keras.layers.Multiply(name = 'Mul59795', )([Con1434,Zer88034])
Con1746 = keras.layers.Conv1D(4, (1),strides=(2), padding='same', dilation_rate=(1), name = 'Con1746', )(Mul59795)
Sep86390 = keras.layers.SeparableConv1D(2, (1),strides=(1), padding='same', name = 'Sep86390', )(Con1746)
model = tf.keras.models.Model(inputs=[in0Mul76064,in1Mul76064,in0Con1434,in0Lea11102], outputs=Sep86390)
w = model.get_layer('Loc76546').get_weights() 
w[0] = np.array([[[0.6138, 0.3386]]])
w[1] = np.array([[0, 0]])
model.get_layer('Loc76546').set_weights(w) 
w = model.get_layer('Con1746').get_weights() 
w[0] = np.array([[[0.2924, 0.3296, 0.1892, 0.928], [0.9462, 0.1727, 0.4016, 0.4842]]])
w[1] = np.array([0, 0, 0, 0])
model.get_layer('Con1746').set_weights(w) 
w = model.get_layer('Sep86390').get_weights() 
w[0] = np.array([[[0.7586], [0.0442], [0.5853], [0.3738]]])
w[1] = np.array([[[0.5833, 0.1213], [0.204, 0.9149], [0.6367, 0.7044], [0.9354, 0.7155]]])
w[2] = np.array([0, 0])
model.get_layer('Sep86390').set_weights(w) 
in0Mul76064 = tf.constant([[[[[0.9169]]], [[[0.4825]]]]])
in1Mul76064 = tf.constant([[[[[0.9465]]], [[[0.2485]]]]])
in0Con1434 = tf.constant([[[0.6431], [0.672]]])
in0Lea11102 = tf.constant([[[0.0996], [0.5022]]])
print (np.array2string(model.predict([in0Mul76064,in1Mul76064,in0Con1434,in0Lea11102],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Sep86390.png')

LMul76064 = multiply_layer([[[[[[0.9169]]], [[[0.4825]]]]], [[[[[0.9465]]], [[[0.2485]]]]]], Mul76064), 
LRes43741 = reshape_layer(Mul76064, [2, 1, 1], Res43741), 
LRes15817 = reshape_layer(Res43741, [2, 1], Res15817), 
LCon1434 = concatenate_layer([Res15817,[[[0.6431], [0.672]]]], 2, Con1434), 
LLea11102 = leaky_relu_layer([[[0.0996], [0.5022]]], 4.672946561342212, Lea11102), 
LLoc76546 = locally_connected1D_layer(Lea11102, 1,[[[0.6138, 0.3386]]],[[0, 0]], 3, Loc76546), 
LZer88034 = zero_padding1D_layer(Loc76546, 1, 0, Zer88034), 
LMul59795 = multiply_layer([Con1434,Zer88034], Mul59795), 
LCon1746 = conv1D_layer(Mul59795, 1,[[[0.2924, 0.3296, 0.1892, 0.928], [0.9462, 0.1727, 0.4016, 0.4842]]],[0, 0, 0, 0], 2, true, 1, Con1746), 
LSep86390 = separable_conv1D_layer(Con1746, 1,[[[[0.7586], [0.0442], [0.5853], [0.3738]]],[[[0.5833, 0.1213], [0.204, 0.9149], [0.6367, 0.7044], [0.9354, 0.7155]]]],[0, 0], 1, true, Sep86390), 
exec_layers([LMul76064,LRes43741,LRes15817,LCon1434,LLea11102,LLoc76546,LZer88034,LMul59795,LCon1746,LSep86390],["Mul76064","Res43741","Res15817","Con1434","Lea11102","Loc76546","Zer88034","Mul59795","Con1746","Sep86390"],Sep86390,"Sep86390")

Actual (Unparsed): [[[0.0000000, 0.0000000]]]

Expected (Unparsed): [[[0.0,0.0]]]

Actual:   [[[0, 0]]]

Expected: [[[0, 0]]]