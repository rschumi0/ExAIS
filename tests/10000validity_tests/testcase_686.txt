import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Dot12176 = tf.keras.layers.Input(shape=([3]))
in1Dot12176 = tf.keras.layers.Input(shape=([3]))
in0Con50350 = tf.keras.layers.Input(shape=([2, 1, 3]))
in0Glo88906 = tf.keras.layers.Input(shape=([2, 2, 1, 2]))

Dot12176 = keras.layers.Dot(axes=(1, 1), name = 'Dot12176', )([in0Dot12176,in1Dot12176])
Res26449 = keras.layers.Reshape((1, 1), name = 'Res26449', )(Dot12176)
Res8944 = keras.layers.Reshape((1, 1, 1), name = 'Res8944', )(Res26449)
Ave10438 = keras.layers.AveragePooling2D(pool_size=(1, 1), strides=(8, 1), padding='same', name = 'Ave10438', )(Res8944)
Zer17254 = keras.layers.ZeroPadding2D(padding=((1, 0), (0, 0)), name = 'Zer17254', )(Ave10438)
Con50350 = keras.layers.Concatenate(axis=3, name = 'Con50350', )([Zer17254,in0Con50350])
Glo88906 = keras.layers.GlobalMaxPool3D(name = 'Glo88906', )(in0Glo88906)
Res82668 = keras.layers.Reshape((2, 1), name = 'Res82668', )(Glo88906)
Res5415 = keras.layers.Reshape((2, 1, 1), name = 'Res5415', )(Res82668)
Con96620 = keras.layers.Conv2D(4, (2, 1),strides=(1, 4), padding='same', dilation_rate=(1, 1), name = 'Con96620', )(Res5415)
Mul32818 = keras.layers.Multiply(name = 'Mul32818', )([Con50350,Con96620])
model = tf.keras.models.Model(inputs=[in0Dot12176,in1Dot12176,in0Con50350,in0Glo88906], outputs=Mul32818)
w = model.get_layer('Con96620').get_weights() 
w[0] = np.array([[[[0.5108, 0.2108, 0.6275, 0.4621]]], [[[0.6104, 0.0619, 0.7894, 0.3578]]]])
w[1] = np.array([0, 0, 0, 0])
model.get_layer('Con96620').set_weights(w) 
in0Dot12176 = tf.constant([[0.8458, 0.3192, 0.4481]])
in1Dot12176 = tf.constant([[0.7684, 0.828, 0.1823]])
in0Con50350 = tf.constant([[[[0.0817, 0.8567, 0.6529]], [[0.7527, 0.9088, 0.7912]]]])
in0Glo88906 = tf.constant([[[[[1.3899, 1.1178]], [[1.9747, 1.7767]]], [[[1.2455, 1.178]], [[1.3289, 1.9622]]]]])
print (np.array2string(model.predict([in0Dot12176,in1Dot12176,in0Con50350,in0Glo88906],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Mul32818.png')

LDot12176 = dot_layer([[0.8458, 0.3192, 0.4481]], [[0.7684, 0.828, 0.1823]], 1, 1, Dot12176), 
LRes26449 = reshape_layer(Dot12176, [1, 1], Res26449), 
LRes8944 = reshape_layer(Res26449, [1, 1, 1], Res8944), 
LAve10438 = average_pooling2D_layer(Res8944, 1, 1, 8, 1, true, Ave10438), 
LZer17254 = zero_padding2D_layer(Ave10438, 1, 0, 0, 0, Zer17254), 
LCon50350 = concatenate_layer([Zer17254,[[[[0.0817, 0.8567, 0.6529]], [[0.7527, 0.9088, 0.7912]]]]], 3, Con50350), 
LGlo88906 = global_max_pool3D_layer([[[[[1.3899, 1.1178]], [[1.9747, 1.7767]]], [[[1.2455, 1.178]], [[1.3289, 1.9622]]]]], Glo88906), 
LRes82668 = reshape_layer(Glo88906, [2, 1], Res82668), 
LRes5415 = reshape_layer(Res82668, [2, 1, 1], Res5415), 
LCon96620 = conv2D_layer(Res5415, 2, 1,[[[[0.5108, 0.2108, 0.6275, 0.4621]]], [[[0.6104, 0.0619, 0.7894, 0.3578]]]],[0, 0, 0, 0], 1, 4, true, 1, 1, Con96620), 
LMul32818 = multiply_layer([Con50350,Con96620], Mul32818), 
exec_layers([LDot12176,LRes26449,LRes8944,LAve10438,LZer17254,LCon50350,LGlo88906,LRes82668,LRes5415,LCon96620,LMul32818],["Dot12176","Res26449","Res8944","Ave10438","Zer17254","Con50350","Glo88906","Res82668","Res5415","Con96620","Mul32818"],Mul32818,"Mul32818")

Actual (Unparsed): [[[[0.0000000, 0.0439323, 2.3885524, 1.0541619]], [[0.9981813, 0.3113406, 1.1189878, 0.7174068]]]]

Expected (Unparsed): [[[[0.0,0.043932290997999994,2.3885523595310003,1.0541619131870001]],[[0.9981813113776522,0.311340625752,1.1189877183999999,0.717406848944]]]]

Actual:   [[[[0, 0.044, 2.3886, 1.0542]], [[0.9982, 0.3114, 1.119, 0.7175]]]]

Expected: [[[[0, 0.044, 2.3886, 1.0542]], [[0.9982, 0.3114, 1.119, 0.7175]]]]