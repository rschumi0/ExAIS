import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Fla69404 = tf.keras.layers.Input(shape=([2, 3, 3]))
in0Con37585 = tf.keras.layers.Input(shape=([18, 3]))
in0Dot74163 = tf.keras.layers.Input(shape=([2, 2]))
in1Dot74163 = tf.keras.layers.Input(shape=([2, 2]))
in0Max25290 = tf.keras.layers.Input(shape=([2, 2, 2]))
in1Max25290 = tf.keras.layers.Input(shape=([2, 2, 2]))
in0Con48058 = tf.keras.layers.Input(shape=([18, 4, 3, 1]))
in0Max90739 = tf.keras.layers.Input(shape=([2, 2, 2, 2]))
in1Max90739 = tf.keras.layers.Input(shape=([2, 2, 2, 2]))

Fla69404 = keras.layers.Flatten(name = 'Fla69404', )(in0Fla69404)
Res39648 = keras.layers.Reshape((18, 1), name = 'Res39648', )(Fla69404)
Con37585 = keras.layers.Concatenate(axis=2, name = 'Con37585', )([Res39648,in0Con37585])
Dot74163 = keras.layers.Dot(axes=(1, 2), name = 'Dot74163', )([in0Dot74163,in1Dot74163])
Mas54864 = keras.layers.Masking(mask_value=2, name = 'Mas54864', )(Dot74163)
Max25290 = keras.layers.Maximum(name = 'Max25290', )([in0Max25290,in1Max25290])
Res6658 = keras.layers.Reshape((2, 4), name = 'Res6658', )(Max25290)
Dot93447 = keras.layers.Dot(axes=(1, 1), name = 'Dot93447', )([Mas54864,Res6658])
Zer30732 = keras.layers.ZeroPadding1D(padding=((16, 0)), name = 'Zer30732', )(Dot93447)
Min66891 = keras.layers.Minimum(name = 'Min66891', )([Con37585,Zer30732])
Res64126 = keras.layers.Reshape((18, 4, 1), name = 'Res64126', )(Min66891)
Res93242 = keras.layers.Reshape((18, 4, 1, 1), name = 'Res93242', )(Res64126)
Zer90707 = keras.layers.ZeroPadding3D(padding=((0, 0), (0, 0), (2, 0)), name = 'Zer90707', )(Res93242)
Con48058 = keras.layers.Concatenate(axis=4, name = 'Con48058', )([Zer90707,in0Con48058])
Max90739 = keras.layers.Maximum(name = 'Max90739', )([in0Max90739,in1Max90739])
Zer95864 = keras.layers.ZeroPadding3D(padding=((16, 0), (2, 0), (1, 0)), name = 'Zer95864', )(Max90739)
Min97885 = keras.layers.Minimum(name = 'Min97885', )([Con48058,Zer95864])
model = tf.keras.models.Model(inputs=[in0Fla69404,in0Con37585,in0Dot74163,in1Dot74163,in0Max25290,in1Max25290,in0Con48058,in0Max90739,in1Max90739], outputs=Min97885)
in0Fla69404 = tf.constant([[[[1.2264, 1.4449, 1.115], [1.8634, 1.3594, 1.7954], [1.1209, 1.5848, 1.0611]], [[1.5124, 1.5853, 1.9987], [1.4573, 1.5028, 1.6], [1.067, 1.7287, 1.7001]]]])
in0Con37585 = tf.constant([[[0.4626, 0.8322, 0.4466], [0.4461, 0.9096, 0.159], [0.5141, 0.1174, 0.1647], [0.9497, 0.272, 0.841], [0.1657, 0.4988, 0.3916], [0.6831, 0.046, 0.1838], [0.1837, 0.4578, 0.9704], [0.3263, 0.1048, 0.222], [0.0616, 0.0981, 0.5202], [0.7257, 0.5604, 0.2476], [0.5974, 0.3916, 0.8568], [0.1132, 0.3978, 0.9118], [0.1855, 0.9896, 0.5975], [0.4807, 0.5875, 0.4177], [0.7738, 0.0142, 0.2038], [0.3803, 0.8687, 0.4447], [0.0928, 0.7021, 0.2636], [0.3273, 0.5379, 0.178]]])
in0Dot74163 = tf.constant([[[0.7816, 0.5656], [0.5708, 0.9296]]])
in1Dot74163 = tf.constant([[[0.4577, 0.4839], [0.3455, 0.4604]]])
in0Max25290 = tf.constant([[[[0.7007, 0.6301], [0.3715, 0.0836]], [[0.5227, 0.6382], [0.2918, 0.8386]]]])
in1Max25290 = tf.constant([[[[0.6789, 0.1184], [0.4805, 0.5702]], [[0.6899, 0.5244], [0.0076, 0.3496]]]])
in0Con48058 = tf.constant([[[[[0.5108], [0.0117], [0.1655]], [[0.3454], [0.741], [0.3454]], [[0.6412], [0.1176], [0.6601]], [[0.7114], [0.9216], [0.2021]]], [[[0.2039], [0.9308], [0.1197]], [[0.4542], [0.0074], [0.8341]], [[0.3939], [0.1054], [0.0648]], [[0.7247], [0.1203], [0.7087]]], [[[0.5994], [0.0406], [0.9853]], [[0.8568], [0.0025], [0.3494]], [[0.9078], [0.2356], [0.9607]], [[0.8929], [0.9095], [0.7373]]], [[[0.3098], [0.3896], [0.9317]], [[0.4243], [0.7292], [0.6972]], [[0.1173], [0.1094], [0.1239]], [[0.2383], [0.2682], [0.197]]], [[[0.4237], [0.8035], [0.0245]], [[0.216], [0.5807], [0.4563]], [[0.8106], [0.1681], [0.7389]], [[0.7882], [0.7481], [0.4144]]], [[[0.9116], [0.6972], [0.541]], [[0.3251], [0.0123], [0.1961]], [[0.8091], [0.3332], [0.7536]], [[0.4975], [0.4647], [0.3455]]], [[[0.7569], [0.7664], [0.5066]], [[0.6907], [0.1913], [0.4834]], [[0.0399], [0.9139], [0.4051]], [[0.3203], [0.4226], [0.7627]]], [[[0.3006], [0.7939], [0.1836]], [[0.6512], [0.6575], [0.7331]], [[0.7633], [0.7394], [0.2143]], [[0.7729], [0.187], [0.5192]]], [[[0.0816], [0.6704], [0.4939]], [[0.457], [0.9777], [0.2291]], [[0.1224], [0.8154], [0.8551]], [[0.0103], [0.4745], [0.2449]]], [[[0.7152], [0.8157], [0.5719]], [[0.1196], [0.7979], [0.1301]], [[0.0534], [0.8759], [0.8765]], [[0.33], [0.7625], [0.8062]]], [[[0.0874], [0.4823], [0.8262]], [[0.8567], [0.5823], [0.9849]], [[0.4374], [0.9858], [0.3017]], [[0.1356], [0.5155], [0.5482]]], [[[0.3388], [0.951], [0.0469]], [[0.989], [0.686], [0.207]], [[0.1805], [0.854], [0.6412]], [[0.7219], [0.0907], [0.7556]]], [[[0.7848], [0.3602], [0.2121]], [[0.464], [0.2346], [0.1029]], [[0.6926], [0.7432], [0.8365]], [[0.7969], [0.8211], [0.8927]]], [[[0.0526], [0.874], [0.7409]], [[0.2169], [0.5741], [0.4163]], [[0.9767], [0.8], [0.1034]], [[0.427], [0.177], [0.0359]]], [[[0.3258], [0.0688], [0.001]], [[0.3331], [0.822], [0.929]], [[0.2612], [0.2972], [0.5614]], [[0.0789], [0.2791], [0.4766]]], [[[0.6587], [0.8124], [0.9022]], [[0.4526], [0.278], [0.4644]], [[0.7894], [0.6511], [0.9236]], [[0.6418], [0.378], [0.7601]]], [[[0.8704], [0.5269], [0.4117]], [[0.0466], [0.1558], [0.6591]], [[0.0334], [0.1846], [0.3792]], [[0.7391], [0.2213], [0.4305]]], [[[0.5376], [0.5577], [0.7848]], [[0.1096], [0.2633], [0.1054]], [[0.2251], [0.4169], [0.123]], [[0.2853], [0.5139], [0.4744]]]]])
in0Max90739 = tf.constant([[[[[0.8927, 0.4182], [0.7686, 0.4114]], [[0.5549, 0.2088], [0.0005, 0.6711]]], [[[0.347, 0.1092], [0.559, 0.0752]], [[0.7571, 0.0146], [0.0094, 0.002]]]]])
in1Max90739 = tf.constant([[[[[0.3546, 0.2364], [0.7986, 0.6882]], [[0.1597, 0.5468], [0.5141, 0.1836]]], [[[0.7626, 0.7831], [0.5165, 0.6522]], [[0.2474, 0.3423], [0.0322, 0.9318]]]]])
print (np.array2string(model.predict([in0Fla69404,in0Con37585,in0Dot74163,in1Dot74163,in0Max25290,in1Max25290,in0Con48058,in0Max90739,in1Max90739],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Min97885.png')

LFla69404 = flatten_layer([[[[1.2264, 1.4449, 1.115], [1.8634, 1.3594, 1.7954], [1.1209, 1.5848, 1.0611]], [[1.5124, 1.5853, 1.9987], [1.4573, 1.5028, 1.6], [1.067, 1.7287, 1.7001]]]], Fla69404), 
LRes39648 = reshape_layer(Fla69404, [18, 1], Res39648), 
LCon37585 = concatenate_layer([Res39648,[[[0.4626, 0.8322, 0.4466], [0.4461, 0.9096, 0.159], [0.5141, 0.1174, 0.1647], [0.9497, 0.272, 0.841], [0.1657, 0.4988, 0.3916], [0.6831, 0.046, 0.1838], [0.1837, 0.4578, 0.9704], [0.3263, 0.1048, 0.222], [0.0616, 0.0981, 0.5202], [0.7257, 0.5604, 0.2476], [0.5974, 0.3916, 0.8568], [0.1132, 0.3978, 0.9118], [0.1855, 0.9896, 0.5975], [0.4807, 0.5875, 0.4177], [0.7738, 0.0142, 0.2038], [0.3803, 0.8687, 0.4447], [0.0928, 0.7021, 0.2636], [0.3273, 0.5379, 0.178]]]], 2, Con37585), 
LDot74163 = dot_layer([[[0.7816, 0.5656], [0.5708, 0.9296]]], [[[0.4577, 0.4839], [0.3455, 0.4604]]], 1, 2, Dot74163), 
LMas54864 = masking_layer(Dot74163, 2, Mas54864), 
LMax25290 = maximum_layer([[[[[0.7007, 0.6301], [0.3715, 0.0836]], [[0.5227, 0.6382], [0.2918, 0.8386]]]], [[[[0.6789, 0.1184], [0.4805, 0.5702]], [[0.6899, 0.5244], [0.0076, 0.3496]]]]], Max25290), 
LRes6658 = reshape_layer(Max25290, [2, 4], Res6658), 
LDot93447 = dot_layer(Mas54864,Res6658, 1, 1, Dot93447), 
LZer30732 = zero_padding1D_layer(Dot93447, 16, 0, Zer30732), 
LMin66891 = minimum_layer([Con37585,Zer30732], Min66891), 
LRes64126 = reshape_layer(Min66891, [18, 4, 1], Res64126), 
LRes93242 = reshape_layer(Res64126, [18, 4, 1, 1], Res93242), 
LZer90707 = zero_padding3D_layer(Res93242, 0, 0, 0, 0, 2, 0, Zer90707), 
LCon48058 = concatenate_layer([Zer90707,[[[[[0.5108], [0.0117], [0.1655]], [[0.3454], [0.741], [0.3454]], [[0.6412], [0.1176], [0.6601]], [[0.7114], [0.9216], [0.2021]]], [[[0.2039], [0.9308], [0.1197]], [[0.4542], [0.0074], [0.8341]], [[0.3939], [0.1054], [0.0648]], [[0.7247], [0.1203], [0.7087]]], [[[0.5994], [0.0406], [0.9853]], [[0.8568], [0.0025], [0.3494]], [[0.9078], [0.2356], [0.9607]], [[0.8929], [0.9095], [0.7373]]], [[[0.3098], [0.3896], [0.9317]], [[0.4243], [0.7292], [0.6972]], [[0.1173], [0.1094], [0.1239]], [[0.2383], [0.2682], [0.197]]], [[[0.4237], [0.8035], [0.0245]], [[0.216], [0.5807], [0.4563]], [[0.8106], [0.1681], [0.7389]], [[0.7882], [0.7481], [0.4144]]], [[[0.9116], [0.6972], [0.541]], [[0.3251], [0.0123], [0.1961]], [[0.8091], [0.3332], [0.7536]], [[0.4975], [0.4647], [0.3455]]], [[[0.7569], [0.7664], [0.5066]], [[0.6907], [0.1913], [0.4834]], [[0.0399], [0.9139], [0.4051]], [[0.3203], [0.4226], [0.7627]]], [[[0.3006], [0.7939], [0.1836]], [[0.6512], [0.6575], [0.7331]], [[0.7633], [0.7394], [0.2143]], [[0.7729], [0.187], [0.5192]]], [[[0.0816], [0.6704], [0.4939]], [[0.457], [0.9777], [0.2291]], [[0.1224], [0.8154], [0.8551]], [[0.0103], [0.4745], [0.2449]]], [[[0.7152], [0.8157], [0.5719]], [[0.1196], [0.7979], [0.1301]], [[0.0534], [0.8759], [0.8765]], [[0.33], [0.7625], [0.8062]]], [[[0.0874], [0.4823], [0.8262]], [[0.8567], [0.5823], [0.9849]], [[0.4374], [0.9858], [0.3017]], [[0.1356], [0.5155], [0.5482]]], [[[0.3388], [0.951], [0.0469]], [[0.989], [0.686], [0.207]], [[0.1805], [0.854], [0.6412]], [[0.7219], [0.0907], [0.7556]]], [[[0.7848], [0.3602], [0.2121]], [[0.464], [0.2346], [0.1029]], [[0.6926], [0.7432], [0.8365]], [[0.7969], [0.8211], [0.8927]]], [[[0.0526], [0.874], [0.7409]], [[0.2169], [0.5741], [0.4163]], [[0.9767], [0.8], [0.1034]], [[0.427], [0.177], [0.0359]]], [[[0.3258], [0.0688], [0.001]], [[0.3331], [0.822], [0.929]], [[0.2612], [0.2972], [0.5614]], [[0.0789], [0.2791], [0.4766]]], [[[0.6587], [0.8124], [0.9022]], [[0.4526], [0.278], [0.4644]], [[0.7894], [0.6511], [0.9236]], [[0.6418], [0.378], [0.7601]]], [[[0.8704], [0.5269], [0.4117]], [[0.0466], [0.1558], [0.6591]], [[0.0334], [0.1846], [0.3792]], [[0.7391], [0.2213], [0.4305]]], [[[0.5376], [0.5577], [0.7848]], [[0.1096], [0.2633], [0.1054]], [[0.2251], [0.4169], [0.123]], [[0.2853], [0.5139], [0.4744]]]]]], 4, Con48058), 
LMax90739 = maximum_layer([[[[[[0.8927, 0.4182], [0.7686, 0.4114]], [[0.5549, 0.2088], [0.0005, 0.6711]]], [[[0.347, 0.1092], [0.559, 0.0752]], [[0.7571, 0.0146], [0.0094, 0.002]]]]], [[[[[0.3546, 0.2364], [0.7986, 0.6882]], [[0.1597, 0.5468], [0.5141, 0.1836]]], [[[0.7626, 0.7831], [0.5165, 0.6522]], [[0.2474, 0.3423], [0.0322, 0.9318]]]]]], Max90739), 
LZer95864 = zero_padding3D_layer(Max90739, 16, 0, 2, 0, 1, 0, Zer95864), 
LMin97885 = minimum_layer([Con48058,Zer95864], Min97885), 
exec_layers([LFla69404,LRes39648,LCon37585,LDot74163,LMas54864,LMax25290,LRes6658,LDot93447,LZer30732,LMin66891,LRes64126,LRes93242,LZer90707,LCon48058,LMax90739,LZer95864,LMin97885],["Fla69404","Res39648","Con37585","Dot74163","Mas54864","Max25290","Res6658","Dot93447","Zer30732","Min66891","Res64126","Res93242","Zer90707","Con48058","Max90739","Zer95864","Min97885"],Min97885,"Min97885")

Actual (Unparsed): [[[[[0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000]], [[0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000]], [[0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000]], [[0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000]]], [[[0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000]], [[0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000]], [[0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000]], [[0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000]]], [[[0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000]], [[0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000]], [[0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000]], [[0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000]]], [[[0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000]], [[0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000]], [[0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000]], [[0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000]]], [[[0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000]], [[0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000]], [[0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000]], [[0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000]]], [[[0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000]], [[0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000]], [[0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000]], [[0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000]]], [[[0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000]], [[0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000]], [[0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000]], [[0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000]]], [[[0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000]], [[0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000]], [[0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000]], [[0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000]]], [[[0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000]], [[0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000]], [[0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000]], [[0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000]]], [[[0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000]], [[0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000]], [[0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000]], [[0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000]]], [[[0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000]], [[0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000]], [[0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000]], [[0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000]]], [[[0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000]], [[0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000]], [[0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000]], [[0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000]]], [[[0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000]], [[0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000]], [[0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000]], [[0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000]]], [[[0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000]], [[0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000]], [[0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000]], [[0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000]]], [[[0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000]], [[0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000]], [[0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000]], [[0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000]]], [[[0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000]], [[0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000]], [[0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000]], [[0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000]]], [[[0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000]], [[0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000]], [[0.0000000, 0.0000000], [0.0000000, 0.1846000], [0.5114134, 0.3792000]], [[0.0000000, 0.0000000], [0.0000000, 0.2213000], [0.2636000, 0.4305000]]], [[[0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000]], [[0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000]], [[0.0000000, 0.0000000], [0.0000000, 0.4169000], [0.4379381, 0.1230000]], [[0.0000000, 0.0000000], [0.0000000, 0.3423000], [0.0322000, 0.4744000]]]]]

Expected (Unparsed): [[[[[0,0],[0,0],[0,0]],[[0,0],[0,0],[0,0]],[[0,0],[0,0],[0,0]],[[0,0],[0,0],[0,0]]],[[[0,0],[0,0],[0,0]],[[0,0],[0,0],[0,0]],[[0,0],[0,0],[0,0]],[[0,0],[0,0],[0,0]]],[[[0,0],[0,0],[0,0]],[[0,0],[0,0],[0,0]],[[0,0],[0,0],[0,0]],[[0,0],[0,0],[0,0]]],[[[0,0],[0,0],[0,0]],[[0,0],[0,0],[0,0]],[[0,0],[0,0],[0,0]],[[0,0],[0,0],[0,0]]],[[[0,0],[0,0],[0,0]],[[0,0],[0,0],[0,0]],[[0,0],[0,0],[0,0]],[[0,0],[0,0],[0,0]]],[[[0,0],[0,0],[0,0]],[[0,0],[0,0],[0,0]],[[0,0],[0,0],[0,0]],[[0,0],[0,0],[0,0]]],[[[0,0],[0,0],[0,0]],[[0,0],[0,0],[0,0]],[[0,0],[0,0],[0,0]],[[0,0],[0,0],[0,0]]],[[[0,0],[0,0],[0,0]],[[0,0],[0,0],[0,0]],[[0,0],[0,0],[0,0]],[[0,0],[0,0],[0,0]]],[[[0,0],[0,0],[0,0]],[[0,0],[0,0],[0,0]],[[0,0],[0,0],[0,0]],[[0,0],[0,0],[0,0]]],[[[0,0],[0,0],[0,0]],[[0,0],[0,0],[0,0]],[[0,0],[0,0],[0,0]],[[0,0],[0,0],[0,0]]],[[[0,0],[0,0],[0,0]],[[0,0],[0,0],[0,0]],[[0,0],[0,0],[0,0]],[[0,0],[0,0],[0,0]]],[[[0,0],[0,0],[0,0]],[[0,0],[0,0],[0,0]],[[0,0],[0,0],[0,0]],[[0,0],[0,0],[0,0]]],[[[0,0],[0,0],[0,0]],[[0,0],[0,0],[0,0]],[[0,0],[0,0],[0,0]],[[0,0],[0,0],[0,0]]],[[[0,0],[0,0],[0,0]],[[0,0],[0,0],[0,0]],[[0,0],[0,0],[0,0]],[[0,0],[0,0],[0,0]]],[[[0,0],[0,0],[0,0]],[[0,0],[0,0],[0,0]],[[0,0],[0,0],[0,0]],[[0,0],[0,0],[0,0]]],[[[0,0],[0,0],[0,0]],[[0,0],[0,0],[0,0]],[[0,0],[0,0],[0,0]],[[0,0],[0,0],[0,0]]],[[[0,0],[0,0],[0,0]],[[0,0],[0,0],[0,0]],[[0,0],[0,0.1846],[0.5114133832279999,0.3792]],[[0,0],[0,0.2213],[0.2636,0.4305]]],[[[0,0],[0,0],[0,0]],[[0,0],[0,0],[0,0]],[[0,0],[0,0.4169],[0.437938087512,0.123]],[[0,0],[0,0.3423],[0.0322,0.4744]]]]]

Actual

Expected