import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Mas27889 = tf.keras.layers.Input(shape=([3, 4]))

Mas27889 = keras.layers.Masking(mask_value=1, name = 'Mas27889', )(in0Mas27889)
Res73327 = keras.layers.Reshape((3, 4, 1), name = 'Res73327', )(Mas27889)
Con46033 = keras.layers.Conv2DTranspose(2, (2, 4),strides=(2, 1), padding='valid', name = 'Con46033', )(Res73327)
model = tf.keras.models.Model(inputs=[in0Mas27889], outputs=Con46033)
w = model.get_layer('Con46033').get_weights() 
w[0] = np.array([[[[0.9876], [0.1485]], [[0.1455], [0.1737]], [[0.7368], [0.4471]], [[0.2347], [0.5623]]], [[[0.6062], [0.6617]], [[0.8948], [0.4312]], [[0.8985], [0.4255]], [[0.0934], [0.5959]]]])
w[1] = np.array([0, 0])
model.get_layer('Con46033').set_weights(w) 
in0Mas27889 = tf.constant([[[1.5574, 1.4722, 1.2303, 1.9122], [1.8927, 1.0042, 1.937, 1.4981], [1.4522, 1.7651, 1.4359, 1.8156]]])
print (np.array2string(model.predict([in0Mas27889],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Con46033.png')

LMas27889 = masking_layer([[[1.5574, 1.4722, 1.2303, 1.9122], [1.8927, 1.0042, 1.937, 1.4981], [1.4522, 1.7651, 1.4359, 1.8156]]], 1, Mas27889), 
LRes73327 = reshape_layer(Mas27889, [3, 4, 1], Res73327), 
LCon46033 = conv2D_transpose_layer(Res73327, 2, 4,[[[[0.9876], [0.1485]], [[0.1455], [0.1737]], [[0.7368], [0.4471]], [[0.2347], [0.5623]]], [[[0.6062], [0.6617]], [[0.8948], [0.4312]], [[0.8985], [0.4255]], [[0.0934], [0.5959]]]],[0, 0], 2, 1, false, Con46033), 
exec_layers([LMas27889,LRes73327,LCon46033],["Mas27889","Res73327","Con46033"],Con46033,"Con46033")

Actual (Unparsed): [[[[1.5380882, 0.2312739], [1.6805465, 0.4891421], [2.5767416, 1.1347342], [3.5177361, 2.0316114], [1.5302354, 1.7100343], [1.6976603, 1.5467423], [0.4487933, 1.0752300]], [[0.9440959, 1.0305316], [2.2860092, 1.6457056], [3.4624563, 2.1115758], [3.7282809, 3.3502838], [2.9539645, 2.2253173], [1.8330217, 1.5467768], [0.1785995, 1.1394800]], [[1.8692305, 0.2810659], [1.2671357, 0.4778857], [3.4536337, 1.3083002], [2.9454683, 2.0721678], [1.8808409, 1.6909143], [1.5584140, 1.7589756], [0.3516041, 0.8423817]], [[1.1473547, 1.2523996], [2.3023340, 1.4806113], [3.7733585, 2.5200678], [3.7204277, 3.3816742], [3.1746867, 2.0685770], [1.5269587, 1.7916999], [0.1399225, 0.8927178]], [[1.4341928, 0.2156517], [1.9545079, 0.5143645], [2.7448979, 1.1691077], [3.6433671, 2.1247807], [1.7364099, 1.9498763], [1.6747398, 1.6191613], [0.4261213, 1.0209119]], [[0.8803237, 0.9609208], [2.3694322, 1.7941553], [3.7546558, 2.3291573], [4.1070379, 3.4369587], [3.0796154, 2.4456853], [1.7654297, 1.6281906], [0.1695770, 1.0819161]]]]

Expected (Unparsed): [[[[1.53808824,0.23127389999999998],[1.68054642,0.4891420799999999],[2.5767417000000004,1.1347342299999998],[3.5177361099999995,2.0316114499999998],[1.53023548,1.71003433],[1.69766037,1.54674231],[0.44879334,1.07523006]],[[0.9440958799999999,1.03053158],[2.28600916,1.6457056199999998],[3.46245632,2.11157585],[3.72828094,3.3502838600000002],[2.95396459,2.22531727],[1.8330217199999999,1.54677687],[0.17859947999999998,1.13947998]],[[1.8692305200000001,0.28106595],[1.2671357699999999,0.47788569000000003],[3.4536336600000004,1.30830021],[2.94546831,2.07216778],[1.88084089,1.69091433],[1.55841398,1.75897561],[0.35160407,0.84238163]],[[1.14735474,1.25239959],[2.302334,1.48061138],[3.7733585099999996,2.52006779],[3.7204277,3.3816742],[3.17468666,2.0685770000000003],[1.5269586499999999,1.79169985],[0.13992253999999998,0.89271779]],[[1.43419272,0.21565169999999997],[1.95450786,0.51436449],[2.74489785,1.1691076399999998],[3.6433670300000003,2.1247806999999996],[1.73640989,1.9498763399999999],[1.6747398100000002,1.61916133],[0.42612132,1.02091188]],[[0.8803236399999999,0.9609207399999999],[2.3694321799999996,1.7941553099999998],[3.7546557599999995,2.3291572499999997],[4.107037869999999,3.4369586299999995],[3.07961537,2.44568526],[1.7654296600000001,1.6281906099999999],[0.16957704,1.08191604]]]]

Actual:   [[[[1.5381, 0.2313], [1.6806, 0.4892], [2.5768, 1.1348], [3.5178, 2.0317], [1.5303, 1.7101], [1.6977, 1.5468], [0.4488, 1.0753]], [[0.9441, 1.0306], [2.2861, 1.6458], [3.4625, 2.1116], [3.7283, 3.3503], [2.954, 2.2254], [1.8331, 1.5468], [0.1786, 1.1395]], [[1.8693, 0.2811], [1.2672, 0.4779], [3.4537, 1.3084], [2.9455, 2.0722], [1.8809, 1.691], [1.5585, 1.759], [0.3517, 0.8424]], [[1.1474, 1.2524], [2.3024, 1.4807], [3.7734, 2.5201], [3.7205, 3.3817], [3.1747, 2.0686], [1.527, 1.7917], [0.14, 0.8928]], [[1.4342, 0.2157], [1.9546, 0.5144], [2.7449, 1.1692], [3.6434, 2.1248], [1.7365, 1.9499], [1.6748, 1.6192], [0.4262, 1.021]], [[0.8804, 0.961], [2.3695, 1.7942], [3.7547, 2.3292], [4.1071, 3.437], [3.0797, 2.4457], [1.7655, 1.6282], [0.1696, 1.082]]]]

Expected: [[[[1.5381, 0.2313], [1.6806, 0.4892], [2.5768, 1.1348], [3.5178, 2.0317], [1.5303, 1.7101], [1.6977, 1.5468], [0.4488, 1.0753]], [[0.9441, 1.0306], [2.2861, 1.6458], [3.4625, 2.1116], [3.7283, 3.3503], [2.954, 2.2254], [1.8331, 1.5468], [0.1786, 1.1395]], [[1.8693, 0.2811], [1.2672, 0.4779], [3.4537, 1.3084], [2.9455, 2.0722], [1.8809, 1.691], [1.5585, 1.759], [0.3517, 0.8424]], [[1.1474, 1.2524], [2.3024, 1.4807], [3.7734, 2.5201], [3.7205, 3.3817], [3.1747, 2.0686], [1.527, 1.7917], [0.14, 0.8928]], [[1.4342, 0.2157], [1.9546, 0.5144], [2.7449, 1.1692], [3.6434, 2.1248], [1.7365, 1.9499], [1.6748, 1.6192], [0.4262, 1.021]], [[0.8804, 0.961], [2.3695, 1.7942], [3.7547, 2.3292], [4.1071, 3.437], [3.0797, 2.4457], [1.7655, 1.6282], [0.1696, 1.082]]]]