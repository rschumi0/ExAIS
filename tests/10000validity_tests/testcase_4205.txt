import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Den40012 = tf.keras.layers.Input(shape=([2, 5]))
in0Ave46063 = tf.keras.layers.Input(shape=([1, 1]))
in0Con38374 = tf.keras.layers.Input(shape=([2, 3]))

Den40012 = keras.layers.Dense(4,name = 'Den40012', )(in0Den40012)
Ave46063 = keras.layers.AveragePooling1D(pool_size=(1), name = 'Ave46063', )(in0Ave46063)
Zer1686 = keras.layers.ZeroPadding1D(padding=((1, 0)), name = 'Zer1686', )(Ave46063)
Con38374 = keras.layers.Concatenate(axis=2, name = 'Con38374', )([Zer1686,in0Con38374])
Min62094 = keras.layers.Minimum(name = 'Min62094', )([Den40012,Con38374])
ELU41574 = keras.layers.ELU(alpha=-4.958233086437717, name = 'ELU41574', )(Min62094)
Res43835 = keras.layers.Reshape((2, 4, 1), name = 'Res43835', )(ELU41574)
Res92463 = keras.layers.Reshape((2, 4, 1, 1), name = 'Res92463', )(Res43835)
Cro72495 = keras.layers.Cropping3D(cropping=((0, 1), (3, 0), (0, 0)), name = 'Cro72495', )(Res92463)
model = tf.keras.models.Model(inputs=[in0Den40012,in0Ave46063,in0Con38374], outputs=Cro72495)
w = model.get_layer('Den40012').get_weights() 
w[0] = np.array([[0.9093, 0.6827, 0.1277, 0.6167], [0.3117, 0.4332, 0.786, 0.1302], [0.7879, 0.3743, 0.6873, 0.6659], [0.9357, 0.5614, 0.7336, 0.717], [0.4284, 0.0272, 0.5183, 0.0416]])
w[1] = np.array([0.9389, 0.9956, 0.4713, 0.5136])
model.get_layer('Den40012').set_weights(w) 
in0Den40012 = tf.constant([[[0.564, 0.4533, 0.4399, 0.9011, 0.6151], [0.0916, 0.8499, 0.4076, 0.4073, 0.803]]])
in0Ave46063 = tf.constant([[[1.5202]]])
in0Con38374 = tf.constant([[[0.7257, 0.7672, 0.7395], [0.838, 0.717, 0.9746]]])
print (np.array2string(model.predict([in0Den40012,in0Ave46063,in0Con38374],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Cro72495.png')

LDen40012 = dense_layer([[[0.564, 0.4533, 0.4399, 0.9011, 0.6151], [0.0916, 0.8499, 0.4076, 0.4073, 0.803]]], [[0.9093, 0.6827, 0.1277, 0.6167], [0.3117, 0.4332, 0.786, 0.1302], [0.7879, 0.3743, 0.6873, 0.6659], [0.9357, 0.5614, 0.7336, 0.717], [0.4284, 0.0272, 0.5183, 0.0416]],[0.9389, 0.9956, 0.4713, 0.5136], Den40012), 
LAve46063 = average_pooling1D_layer([[[1.5202]]], 1, Ave46063), 
LZer1686 = zero_padding1D_layer(Ave46063, 1, 0, Zer1686), 
LCon38374 = concatenate_layer([Zer1686,[[[0.7257, 0.7672, 0.7395], [0.838, 0.717, 0.9746]]]], 2, Con38374), 
LMin62094 = minimum_layer([Den40012,Con38374], Min62094), 
LELU41574 = elu_layer(Min62094, -4.958233086437717, ELU41574), 
LRes43835 = reshape_layer(ELU41574, [2, 4, 1], Res43835), 
LRes92463 = reshape_layer(Res43835, [2, 4, 1, 1], Res92463), 
LCro72495 = cropping3D_layer(Res92463, 0, 1, 3, 0, 0, 0, Cro72495), 
exec_layers([LDen40012,LAve46063,LZer1686,LCon38374,LMin62094,LELU41574,LRes43835,LRes92463,LCro72495],["Den40012","Ave46063","Zer1686","Con38374","Min62094","ELU41574","Res43835","Res92463","Cro72495"],Cro72495,"Cro72495")

Actual (Unparsed): [[[[[0.7395000]]]]]

Expected (Unparsed): [[[[[0.7395]]]]]

Actual:   [[[[[0.7395]]]]]

Expected: [[[[[0.7395]]]]]