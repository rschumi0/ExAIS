import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Thr83824 = tf.keras.layers.Input(shape=([2, 2, 2, 2]))
in0Max44056 = tf.keras.layers.Input(shape=([2, 2]))
in1Max44056 = tf.keras.layers.Input(shape=([2, 2]))
in0Con41476 = tf.keras.layers.Input(shape=([2, 6]))
in0Add67434 = tf.keras.layers.Input(shape=([1, 1, 2]))
in1Add67434 = tf.keras.layers.Input(shape=([1, 1, 2]))
in0Add24104 = tf.keras.layers.Input(shape=([2, 1, 1, 1]))
in1Add24104 = tf.keras.layers.Input(shape=([2, 1, 1, 1]))

Thr83824 = keras.layers.ThresholdedReLU(theta=7.155583505384943, name = 'Thr83824', input_shape=(2, 2, 2, 2))(in0Thr83824)
Res22947 = keras.layers.Reshape((2, 2, 4), name = 'Res22947', )(Thr83824)
Res15844 = keras.layers.Reshape((2, 8), name = 'Res15844', )(Res22947)
Max44056 = keras.layers.Maximum(name = 'Max44056', )([in0Max44056,in1Max44056])
Con41476 = keras.layers.Concatenate(axis=2, name = 'Con41476', )([Max44056,in0Con41476])
Add67474 = keras.layers.Add(name = 'Add67474', )([Res15844,Con41476])
Res71875 = keras.layers.Reshape((2, 8, 1), name = 'Res71875', )(Add67474)
Res15037 = keras.layers.Reshape((2, 8, 1, 1), name = 'Res15037', )(Res71875)
Zer83750 = keras.layers.ZeroPadding3D(padding=((0, 0), (0, 0), (4, 0)), name = 'Zer83750', )(Res15037)
Add67434 = keras.layers.Add(name = 'Add67434', )([in0Add67434,in1Add67434])
Res57413 = keras.layers.Reshape((1, 1, 2, 1), name = 'Res57413', )(Add67434)
Zer3158 = keras.layers.ZeroPadding3D(padding=((1, 0), (0, 0), (1, 0)), name = 'Zer3158', )(Res57413)
Add24104 = keras.layers.Add(name = 'Add24104', )([in0Add24104,in1Add24104])
Zer32995 = keras.layers.ZeroPadding3D(padding=((0, 0), (0, 0), (2, 0)), name = 'Zer32995', )(Add24104)
Mul95065 = keras.layers.Multiply(name = 'Mul95065', )([Zer3158,Zer32995])
Zer48945 = keras.layers.ZeroPadding3D(padding=((0, 0), (7, 0), (2, 0)), name = 'Zer48945', )(Mul95065)
Max8175 = keras.layers.Maximum(name = 'Max8175', )([Zer83750,Zer48945])
model = tf.keras.models.Model(inputs=[in0Thr83824,in0Max44056,in1Max44056,in0Con41476,in0Add67434,in1Add67434,in0Add24104,in1Add24104], outputs=Max8175)
in0Thr83824 = tf.constant([[[[[0.0153, 0.2941], [0.0053, 0.403]], [[0.3061, 0.6314], [0.5774, 0.5796]]], [[[0.6414, 0.8129], [0.2573, 0.1917]], [[0.7652, 0.7776], [0.3414, 0.5054]]]]])
in0Max44056 = tf.constant([[[0.8502, 0.065], [0.9115, 0.2769]]])
in1Max44056 = tf.constant([[[0.6376, 0.951], [0.8227, 0.2011]]])
in0Con41476 = tf.constant([[[0.3279, 0.6254, 0.6528, 0.5314, 0.8575, 0.2793], [0.9565, 0.7958, 0.2314, 0.8876, 0.279, 0.6616]]])
in0Add67434 = tf.constant([[[[0.295, 0.2506]]]])
in1Add67434 = tf.constant([[[[0.7354, 0.3646]]]])
in0Add24104 = tf.constant([[[[[0.9118]]], [[[0.0029]]]]])
in1Add24104 = tf.constant([[[[[0.8331]]], [[[0.0969]]]]])
print (np.array2string(model.predict([in0Thr83824,in0Max44056,in1Max44056,in0Con41476,in0Add67434,in1Add67434,in0Add24104,in1Add24104],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Max8175.png')

LThr83824 = thresholded_relu_layer([[[[[0.0153, 0.2941], [0.0053, 0.403]], [[0.3061, 0.6314], [0.5774, 0.5796]]], [[[0.6414, 0.8129], [0.2573, 0.1917]], [[0.7652, 0.7776], [0.3414, 0.5054]]]]], 7.155583505384943, Thr83824), 
LRes22947 = reshape_layer(Thr83824, [2, 2, 4], Res22947), 
LRes15844 = reshape_layer(Res22947, [2, 8], Res15844), 
LMax44056 = maximum_layer([[[[0.8502, 0.065], [0.9115, 0.2769]]], [[[0.6376, 0.951], [0.8227, 0.2011]]]], Max44056), 
LCon41476 = concatenate_layer([Max44056,[[[0.3279, 0.6254, 0.6528, 0.5314, 0.8575, 0.2793], [0.9565, 0.7958, 0.2314, 0.8876, 0.279, 0.6616]]]], 2, Con41476), 
LAdd67474 = add_layer([Res15844,Con41476], Add67474), 
LRes71875 = reshape_layer(Add67474, [2, 8, 1], Res71875), 
LRes15037 = reshape_layer(Res71875, [2, 8, 1, 1], Res15037), 
LZer83750 = zero_padding3D_layer(Res15037, 0, 0, 0, 0, 4, 0, Zer83750), 
LAdd67434 = add_layer([[[[[0.295, 0.2506]]]], [[[[0.7354, 0.3646]]]]], Add67434), 
LRes57413 = reshape_layer(Add67434, [1, 1, 2, 1], Res57413), 
LZer3158 = zero_padding3D_layer(Res57413, 1, 0, 0, 0, 1, 0, Zer3158), 
LAdd24104 = add_layer([[[[[[0.9118]]], [[[0.0029]]]]], [[[[[0.8331]]], [[[0.0969]]]]]], Add24104), 
LZer32995 = zero_padding3D_layer(Add24104, 0, 0, 0, 0, 2, 0, Zer32995), 
LMul95065 = multiply_layer([Zer3158,Zer32995], Mul95065), 
LZer48945 = zero_padding3D_layer(Mul95065, 0, 0, 7, 0, 2, 0, Zer48945), 
LMax8175 = maximum_layer([Zer83750,Zer48945], Max8175), 
exec_layers([LThr83824,LRes22947,LRes15844,LMax44056,LCon41476,LAdd67474,LRes71875,LRes15037,LZer83750,LAdd67434,LRes57413,LZer3158,LAdd24104,LZer32995,LMul95065,LZer48945,LMax8175],["Thr83824","Res22947","Res15844","Max44056","Con41476","Add67474","Res71875","Res15037","Zer83750","Add67434","Res57413","Zer3158","Add24104","Zer32995","Mul95065","Zer48945","Max8175"],Max8175,"Max8175")

Actual (Unparsed): [[[[[0.0000000], [0.0000000], [0.0000000], [0.0000000], [0.8502000]], [[0.0000000], [0.0000000], [0.0000000], [0.0000000], [0.9510000]], [[0.0000000], [0.0000000], [0.0000000], [0.0000000], [0.3279000]], [[0.0000000], [0.0000000], [0.0000000], [0.0000000], [0.6254000]], [[0.0000000], [0.0000000], [0.0000000], [0.0000000], [0.6528000]], [[0.0000000], [0.0000000], [0.0000000], [0.0000000], [0.5314000]], [[0.0000000], [0.0000000], [0.0000000], [0.0000000], [0.8575000]], [[0.0000000], [0.0000000], [0.0000000], [0.0000000], [0.2793000]]], [[[0.0000000], [0.0000000], [0.0000000], [0.0000000], [0.9115000]], [[0.0000000], [0.0000000], [0.0000000], [0.0000000], [0.2769000]], [[0.0000000], [0.0000000], [0.0000000], [0.0000000], [0.9565000]], [[0.0000000], [0.0000000], [0.0000000], [0.0000000], [0.7958000]], [[0.0000000], [0.0000000], [0.0000000], [0.0000000], [0.2314000]], [[0.0000000], [0.0000000], [0.0000000], [0.0000000], [0.8876000]], [[0.0000000], [0.0000000], [0.0000000], [0.0000000], [0.2790000]], [[0.0000000], [0.0000000], [0.0000000], [0.0000000], [0.6616000]]]]]

Expected (Unparsed): [[[[[0],[0],[0],[0],[0.8502]],[[0],[0],[0],[0],[0.951]],[[0],[0],[0],[0],[0.3279]],[[0],[0],[0],[0],[0.6254]],[[0],[0],[0],[0],[0.6528]],[[0],[0],[0],[0],[0.5314]],[[0],[0],[0],[0],[0.8575]],[[0],[0],[0],[0],[0.2793]]],[[[0],[0],[0],[0],[0.9115]],[[0],[0],[0],[0],[0.2769]],[[0],[0],[0],[0],[0.9565]],[[0],[0],[0],[0],[0.7958]],[[0],[0],[0],[0],[0.2314]],[[0],[0],[0],[0],[0.8876]],[[0],[0],[0],[0],[0.279]],[[0],[0],[0],[0],[0.6616]]]]]

Actual:   [[[[[0], [0], [0], [0], [0.8502]], [[0], [0], [0], [0], [0.951]], [[0], [0], [0], [0], [0.3279]], [[0], [0], [0], [0], [0.6254]], [[0], [0], [0], [0], [0.6528]], [[0], [0], [0], [0], [0.5314]], [[0], [0], [0], [0], [0.8575]], [[0], [0], [0], [0], [0.2793]]], [[[0], [0], [0], [0], [0.9115]], [[0], [0], [0], [0], [0.2769]], [[0], [0], [0], [0], [0.9565]], [[0], [0], [0], [0], [0.7958]], [[0], [0], [0], [0], [0.2314]], [[0], [0], [0], [0], [0.8876]], [[0], [0], [0], [0], [0.279]], [[0], [0], [0], [0], [0.6616]]]]]

Expected: [[[[[0], [0], [0], [0], [0.8502]], [[0], [0], [0], [0], [0.951]], [[0], [0], [0], [0], [0.3279]], [[0], [0], [0], [0], [0.6254]], [[0], [0], [0], [0], [0.6528]], [[0], [0], [0], [0], [0.5314]], [[0], [0], [0], [0], [0.8575]], [[0], [0], [0], [0], [0.2793]]], [[[0], [0], [0], [0], [0.9115]], [[0], [0], [0], [0], [0.2769]], [[0], [0], [0], [0], [0.9565]], [[0], [0], [0], [0], [0.7958]], [[0], [0], [0], [0], [0.2314]], [[0], [0], [0], [0], [0.8876]], [[0], [0], [0], [0], [0.279]], [[0], [0], [0], [0], [0.6616]]]]]