import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Sub39697 = tf.keras.layers.Input(shape=([3]))
in1Sub39697 = tf.keras.layers.Input(shape=([3]))
in0Add81425 = tf.keras.layers.Input(shape=([1, 2]))
in1Add81425 = tf.keras.layers.Input(shape=([1, 2]))
in0Con76293 = tf.keras.layers.Input(shape=([1, 16]))

Sub39697 = keras.layers.Subtract(name = 'Sub39697', )([in0Sub39697,in1Sub39697])
Res90594 = keras.layers.Reshape((3, 1), name = 'Res90594', )(Sub39697)
Res44052 = keras.layers.Reshape((3, 1, 1), name = 'Res44052', )(Res90594)
Res38396 = keras.layers.Reshape((3, 1, 1, 1), name = 'Res38396', )(Res44052)
Con77692 = keras.layers.Conv3D(2, (3, 1, 1),strides=(1, 1, 1), padding='valid', dilation_rate=(1, 1, 1), name = 'Con77692', )(Res38396)
Zer54542 = keras.layers.ZeroPadding3D(padding=((1, 1), (1, 1), (1, 1)), name = 'Zer54542', )(Con77692)
Con23294 = keras.layers.Conv3D(2, (2, 1, 1),strides=(7, 1, 1), padding='valid', dilation_rate=(1, 1, 1), name = 'Con23294', )(Zer54542)
Res45653 = keras.layers.Reshape((1, 3, 6), name = 'Res45653', )(Con23294)
Res26250 = keras.layers.Reshape((1, 18), name = 'Res26250', )(Res45653)
Add81425 = keras.layers.Add(name = 'Add81425', )([in0Add81425,in1Add81425])
Con76293 = keras.layers.Concatenate(axis=2, name = 'Con76293', )([Add81425,in0Con76293])
Min66525 = keras.layers.Minimum(name = 'Min66525', )([Res26250,Con76293])
Bat88026 = keras.layers.BatchNormalization(axis=1, epsilon=0.2113222718826264,  name = 'Bat88026', )(Min66525)
model = tf.keras.models.Model(inputs=[in0Sub39697,in1Sub39697,in0Add81425,in1Add81425,in0Con76293], outputs=Bat88026)
w = model.get_layer('Con77692').get_weights() 
w[0] = np.array([[[[[0.7262, 0.9314]]]], [[[[0.5565, 0.9914]]]], [[[[0.3043, 0.9248]]]]])
w[1] = np.array([0, 0])
model.get_layer('Con77692').set_weights(w) 
w = model.get_layer('Con23294').get_weights() 
w[0] = np.array([[[[[0.2808, 0.7942], [0.6188, 0.0878]]]], [[[[0.5237, 0.7863], [0.997, 0.8033]]]]])
w[1] = np.array([0, 0])
model.get_layer('Con23294').set_weights(w) 
w = model.get_layer('Bat88026').get_weights() 
w[0] = np.array([0.0277])
w[1] = np.array([0.496])
w[2] = np.array([0.3734])
w[3] = np.array([0.7091])
model.get_layer('Bat88026').set_weights(w) 
in0Sub39697 = tf.constant([[0.8523, 0.7878, 0.9004]])
in1Sub39697 = tf.constant([[0.4846, 0.6845, 0.1084]])
in0Add81425 = tf.constant([[[0.8904, 0.5927]]])
in1Add81425 = tf.constant([[[0.6381, 0.1544]]])
in0Con76293 = tf.constant([[[0.8048, 0.8399, 0.8622, 0.0646, 0.075, 0.2754, 0.3632, 0.3181, 0.6416, 0.3888, 0.8347, 0.9394, 0.8514, 0.1433, 0.749, 0.3297]]])
print (np.array2string(model.predict([in0Sub39697,in1Sub39697,in0Add81425,in1Add81425,in0Con76293],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Bat88026.png')

LSub39697 = subtract_layer([[0.8523, 0.7878, 0.9004]], [[0.4846, 0.6845, 0.1084]], Sub39697), 
LRes90594 = reshape_layer(Sub39697, [3, 1], Res90594), 
LRes44052 = reshape_layer(Res90594, [3, 1, 1], Res44052), 
LRes38396 = reshape_layer(Res44052, [3, 1, 1, 1], Res38396), 
LCon77692 = conv3D_layer(Res38396, 3, 1, 1,[[[[[0.7262, 0.9314]]]], [[[[0.5565, 0.9914]]]], [[[[0.3043, 0.9248]]]]],[0, 0], 1, 1, 1, false, 1, 1, 1, Con77692), 
LZer54542 = zero_padding3D_layer(Con77692, 1, 1, 1, 1, 1, 1, Zer54542), 
LCon23294 = conv3D_layer(Zer54542, 2, 1, 1,[[[[[0.2808, 0.7942], [0.6188, 0.0878]]]], [[[[0.5237, 0.7863], [0.997, 0.8033]]]]],[0, 0], 7, 1, 1, false, 1, 1, 1, Con23294), 
LRes45653 = reshape_layer(Con23294, [1, 3, 6], Res45653), 
LRes26250 = reshape_layer(Res45653, [1, 18], Res26250), 
LAdd81425 = add_layer([[[[0.8904, 0.5927]]], [[[0.6381, 0.1544]]]], Add81425), 
LCon76293 = concatenate_layer([Add81425,[[[0.8048, 0.8399, 0.8622, 0.0646, 0.075, 0.2754, 0.3632, 0.3181, 0.6416, 0.3888, 0.8347, 0.9394, 0.8514, 0.1433, 0.749, 0.3297]]]], 2, Con76293), 
LMin66525 = minimum_layer([Res26250,Con76293], Min66525), 
LBat88026 = batch_normalization_layer(Min66525, 1, 0.2113222718826264, [0.0277], [0.496], [0.3734], [0.7091], Bat88026), 
exec_layers([LSub39697,LRes90594,LRes44052,LRes38396,LCon77692,LZer54542,LCon23294,LRes45653,LRes26250,LAdd81425,LCon76293,LMin66525,LBat88026],["Sub39697","Res90594","Res44052","Res38396","Con77692","Zer54542","Con23294","Res45653","Res26250","Add81425","Con76293","Min66525","Bat88026"],Bat88026,"Bat88026")

Actual (Unparsed): [[[0.4852190, 0.4852190, 0.4852190, 0.4852190, 0.4852190, 0.4852190, 0.4852190, 0.4852190, 0.4957055, 0.4944033, 0.4852190, 0.4852190, 0.4852190, 0.4852190, 0.4852190, 0.4852190, 0.4852190, 0.4852190]]]

Expected (Unparsed): [[[0.4852189633305757,0.4852189633305757,0.4852189633305757,0.4852189633305757,0.4852189633305757,0.4852189633305757,0.4852189633305757,0.4852189633305757,0.4957054992661271,0.4944033440604736,0.4852189633305757,0.4852189633305757,0.4852189633305757,0.4852189633305757,0.4852189633305757,0.4852189633305757,0.4852189633305757,0.4852189633305757]]]

Actual:   [[[0.4853, 0.4853, 0.4853, 0.4853, 0.4853, 0.4853, 0.4853, 0.4853, 0.4958, 0.4945, 0.4853, 0.4853, 0.4853, 0.4853, 0.4853, 0.4853, 0.4853, 0.4853]]]

Expected: [[[0.4853, 0.4853, 0.4853, 0.4853, 0.4853, 0.4853, 0.4853, 0.4853, 0.4958, 0.4945, 0.4853, 0.4853, 0.4853, 0.4853, 0.4853, 0.4853, 0.4853, 0.4853]]]