import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Glo55580 = tf.keras.layers.Input(shape=([1, 1]))

Glo55580 = keras.layers.GlobalMaxPool1D(name = 'Glo55580', )(in0Glo55580)
Res3330 = keras.layers.Reshape((1, 1), name = 'Res3330', )(Glo55580)
LST25003 = keras.layers.LSTM(2,recurrent_activation='sigmoid', name = 'LST25003', )(Res3330)
Res36824 = keras.layers.Reshape((2, 1), name = 'Res36824', )(LST25003)
Sim61033 = keras.layers.SimpleRNN(1,name = 'Sim61033', )(Res36824)
Mas47029 = keras.layers.Masking(mask_value=1, name = 'Mas47029', )(Sim61033)
model = tf.keras.models.Model(inputs=[in0Glo55580], outputs=Mas47029)
w = model.get_layer('LST25003').get_weights() 
w[0] = np.array([[8, 2, 2, 7, 9, 5, 7, 6]])
w[1] = np.array([[7, 7, 9, 5, 7, 2, 2, 7], [7, 7, 7, 9, 5, 10, 9, 9]])
w[2] = np.array([10, 5, 3, 10, 2, 4, 1, 1])
model.get_layer('LST25003').set_weights(w) 
w = model.get_layer('Sim61033').get_weights() 
w[0] = np.array([[1]])
w[1] = np.array([[10]])
w[2] = np.array([2])
model.get_layer('Sim61033').set_weights(w) 
in0Glo55580 = tf.constant([[[1.158]]])
print (np.array2string(model.predict([in0Glo55580],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Mas47029.png')

LGlo55580 = global_max_pool1D_layer([[[1.158]]], Glo55580), 
LRes3330 = reshape_layer(Glo55580, [1, 1], Res3330), 
LLST25003 = lstm_layer(Res3330,[[8, 2, 2, 7, 9, 5, 7, 6]],[[7, 7, 9, 5, 7, 2, 2, 7], [7, 7, 7, 9, 5, 10, 9, 9]],[10, 5, 3, 10, 2, 4, 1, 1], LST25003), 
LRes36824 = reshape_layer(LST25003, [2, 1], Res36824), 
LSim61033 = simple_rnn_layer(Res36824,[[1]],[[10]],[2], Sim61033), 
LMas47029 = masking_layer(Sim61033, 1, Mas47029), 
exec_layers([LGlo55580,LRes3330,LLST25003,LRes36824,LSim61033,LMas47029],["Glo55580","Res3330","LST25003","Res36824","Sim61033","Mas47029"],Mas47029,"Mas47029")

Actual (Unparsed): [[1.0000000]]

Expected (Unparsed): [[0.999999999980679]]

Actual:   [[1]]

Expected: [[1]]