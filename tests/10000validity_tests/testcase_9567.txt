import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Sub58296 = tf.keras.layers.Input(shape=([3, 3]))
in1Sub58296 = tf.keras.layers.Input(shape=([3, 3]))
in0Cro27552 = tf.keras.layers.Input(shape=([3, 4, 1, 3]))
in0Max44454 = tf.keras.layers.Input(shape=([2, 1]))
in1Max44454 = tf.keras.layers.Input(shape=([2, 1]))
in0Con30242 = tf.keras.layers.Input(shape=([2]))
in0Con235 = tf.keras.layers.Input(shape=([3]))

Sub58296 = keras.layers.Subtract(name = 'Sub58296', )([in0Sub58296,in1Sub58296])
Res86905 = keras.layers.Reshape((3, 3, 1), name = 'Res86905', )(Sub58296)
Con34594 = keras.layers.Conv2D(2, (2, 2),strides=(2, 10), padding='same', dilation_rate=(1, 1), name = 'Con34594', )(Res86905)
Sof58500 = keras.layers.Softmax(axis=1, name = 'Sof58500', )(Con34594)
Res78081 = keras.layers.Reshape((2, 2), name = 'Res78081', )(Sof58500)
Fla68002 = keras.layers.Flatten(name = 'Fla68002', )(Res78081)
Cro27552 = keras.layers.Cropping3D(cropping=((2, 0), (3, 0), (0, 0)), name = 'Cro27552', )(in0Cro27552)
Res42174 = keras.layers.Reshape((1, 1, 3), name = 'Res42174', )(Cro27552)
Res75335 = keras.layers.Reshape((1, 3), name = 'Res75335', )(Res42174)
Fla41883 = keras.layers.Flatten(name = 'Fla41883', )(Res75335)
Max44454 = keras.layers.Maximum(name = 'Max44454', )([in0Max44454,in1Max44454])
Res25663 = keras.layers.Reshape((2, 1, 1), name = 'Res25663', )(Max44454)
Res23645 = keras.layers.Reshape((2, 1, 1, 1), name = 'Res23645', )(Res25663)
Glo99503 = keras.layers.GlobalMaxPool3D(name = 'Glo99503', )(Res23645)
Con30242 = keras.layers.Concatenate(axis=1, name = 'Con30242', )([Glo99503,in0Con30242])
Min31668 = keras.layers.Minimum(name = 'Min31668', )([Fla41883,Con30242])
Res56875 = keras.layers.Reshape((3, 1), name = 'Res56875', )(Min31668)
Res6011 = keras.layers.Reshape((3, 1, 1), name = 'Res6011', )(Res56875)
Res60372 = keras.layers.Reshape((3, 1, 1, 1), name = 'Res60372', )(Res6011)
Glo85442 = keras.layers.GlobalAveragePooling3D(name = 'Glo85442', )(Res60372)
Con235 = keras.layers.Concatenate(axis=1, name = 'Con235', )([Glo85442,in0Con235])
Max73558 = keras.layers.Maximum(name = 'Max73558', )([Fla68002,Con235])
model = tf.keras.models.Model(inputs=[in0Sub58296,in1Sub58296,in0Cro27552,in0Max44454,in1Max44454,in0Con30242,in0Con235], outputs=Max73558)
w = model.get_layer('Con34594').get_weights() 
w[0] = np.array([[[[0.9056, 0.0584]], [[0.6766, 0.9256]]], [[[0.3666, 0.8982]], [[0.1617, 0.1877]]]])
w[1] = np.array([0, 0])
model.get_layer('Con34594').set_weights(w) 
in0Sub58296 = tf.constant([[[0.6357, 0.9847, 0.355], [0.1491, 0.8087, 0.1494], [0.0594, 0.8602, 0.5264]]])
in1Sub58296 = tf.constant([[[0.3826, 0.5956, 0.9298], [0.7995, 0.6539, 0.0026], [0.7416, 0.2194, 0.2731]]])
in0Cro27552 = tf.constant([[[[[1.1428, 1.9108, 1.9731]], [[1.3259, 1.9568, 1.8143]], [[1.1194, 1.084, 1.9115]], [[1.0516, 1.9894, 1.3463]]], [[[1.6795, 1.3417, 1.0902]], [[1.999, 1.5581, 1.777]], [[1.5585, 1.8209, 1.2504]], [[1.6712, 1.0348, 1.7082]]], [[[1.4186, 1.4601, 1.8121]], [[1.042, 1.8458, 1.247]], [[1.2498, 1.8818, 1.1392]], [[1.6184, 1.7383, 1.031]]]]])
in0Max44454 = tf.constant([[[0.6521], [0.2982]]])
in1Max44454 = tf.constant([[[0.9473], [0.793]]])
in0Con30242 = tf.constant([[0.2333, 0.3039]])
in0Con235 = tf.constant([[0.2152, 0.5468, 0.406]])
print (np.array2string(model.predict([in0Sub58296,in1Sub58296,in0Cro27552,in0Max44454,in1Max44454,in0Con30242,in0Con235],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Max73558.png')

LSub58296 = subtract_layer([[[0.6357, 0.9847, 0.355], [0.1491, 0.8087, 0.1494], [0.0594, 0.8602, 0.5264]]], [[[0.3826, 0.5956, 0.9298], [0.7995, 0.6539, 0.0026], [0.7416, 0.2194, 0.2731]]], Sub58296), 
LRes86905 = reshape_layer(Sub58296, [3, 3, 1], Res86905), 
LCon34594 = conv2D_layer(Res86905, 2, 2,[[[[0.9056, 0.0584]], [[0.6766, 0.9256]]], [[[0.3666, 0.8982]], [[0.1617, 0.1877]]]],[0, 0], 2, 10, true, 1, 1, Con34594), 
LSof58500 = softmax_layer(Con34594, 1, Sof58500), 
LRes78081 = reshape_layer(Sof58500, [2, 2], Res78081), 
LFla68002 = flatten_layer(Res78081, Fla68002), 
LCro27552 = cropping3D_layer([[[[[1.1428, 1.9108, 1.9731]], [[1.3259, 1.9568, 1.8143]], [[1.1194, 1.084, 1.9115]], [[1.0516, 1.9894, 1.3463]]], [[[1.6795, 1.3417, 1.0902]], [[1.999, 1.5581, 1.777]], [[1.5585, 1.8209, 1.2504]], [[1.6712, 1.0348, 1.7082]]], [[[1.4186, 1.4601, 1.8121]], [[1.042, 1.8458, 1.247]], [[1.2498, 1.8818, 1.1392]], [[1.6184, 1.7383, 1.031]]]]], 2, 0, 3, 0, 0, 0, Cro27552), 
LRes42174 = reshape_layer(Cro27552, [1, 1, 3], Res42174), 
LRes75335 = reshape_layer(Res42174, [1, 3], Res75335), 
LFla41883 = flatten_layer(Res75335, Fla41883), 
LMax44454 = maximum_layer([[[[0.6521], [0.2982]]], [[[0.9473], [0.793]]]], Max44454), 
LRes25663 = reshape_layer(Max44454, [2, 1, 1], Res25663), 
LRes23645 = reshape_layer(Res25663, [2, 1, 1, 1], Res23645), 
LGlo99503 = global_max_pool3D_layer(Res23645, Glo99503), 
LCon30242 = concatenate_layer([Glo99503,[[0.2333, 0.3039]]], 1, Con30242), 
LMin31668 = minimum_layer([Fla41883,Con30242], Min31668), 
LRes56875 = reshape_layer(Min31668, [3, 1], Res56875), 
LRes6011 = reshape_layer(Res56875, [3, 1, 1], Res6011), 
LRes60372 = reshape_layer(Res6011, [3, 1, 1, 1], Res60372), 
LGlo85442 = global_average_pooling3D_layer(Res60372, Glo85442), 
LCon235 = concatenate_layer([Glo85442,[[0.2152, 0.5468, 0.406]]], 1, Con235), 
LMax73558 = maximum_layer([Fla68002,Con235], Max73558), 
exec_layers([LSub58296,LRes86905,LCon34594,LSof58500,LRes78081,LFla68002,LCro27552,LRes42174,LRes75335,LFla41883,LMax44454,LRes25663,LRes23645,LGlo99503,LCon30242,LMin31668,LRes56875,LRes6011,LRes60372,LGlo85442,LCon235,LMax73558],["Sub58296","Res86905","Con34594","Sof58500","Res78081","Fla68002","Cro27552","Res42174","Res75335","Fla41883","Max44454","Res25663","Res23645","Glo99503","Con30242","Min31668","Res56875","Res6011","Res60372","Glo85442","Con235","Max73558"],Max73558,"Max73558")

Actual (Unparsed): [[0.6137972, 0.3244304, 0.5468000, 0.6755696]]

Expected (Unparsed): [[0.6137972046625083,0.32443036439796114,0.5468,0.6755696356020389]]

Actual:   [[0.6138, 0.3245, 0.5468, 0.6756]]

Expected: [[0.6138, 0.3245, 0.5468, 0.6756]]