import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Zer24097 = tf.keras.layers.Input(shape=([4, 4, 2]))
in0Mul95624 = tf.keras.layers.Input(shape=([2, 2, 1]))
in1Mul95624 = tf.keras.layers.Input(shape=([2, 2, 1]))
in0Con46500 = tf.keras.layers.Input(shape=([6, 6, 1]))
in0Con22530 = tf.keras.layers.Input(shape=([6, 6, 4, 1]))
in0Up_51611 = tf.keras.layers.Input(shape=([2, 3, 3, 2]))
in0Max78685 = tf.keras.layers.Input(shape=([2, 2]))
in1Max78685 = tf.keras.layers.Input(shape=([2, 2]))
in0Dot24851 = tf.keras.layers.Input(shape=([3]))
in1Dot24851 = tf.keras.layers.Input(shape=([3]))
in0Glo13494 = tf.keras.layers.Input(shape=([2, 2]))
in0Con64251 = tf.keras.layers.Input(shape=([6, 6, 7]))

Zer24097 = keras.layers.ZeroPadding2D(padding=((1, 1), (1, 1)), name = 'Zer24097', )(in0Zer24097)
Mul95624 = keras.layers.Multiply(name = 'Mul95624', )([in0Mul95624,in1Mul95624])
Zer97267 = keras.layers.ZeroPadding2D(padding=((4, 0), (4, 0)), name = 'Zer97267', )(Mul95624)
Con46500 = keras.layers.Concatenate(axis=3, name = 'Con46500', )([Zer97267,in0Con46500])
Add38934 = keras.layers.Add(name = 'Add38934', )([Zer24097,Con46500])
Res87236 = keras.layers.Reshape((6, 6, 2, 1), name = 'Res87236', )(Add38934)
Zer33365 = keras.layers.ZeroPadding3D(padding=((0, 0), (0, 0), (2, 0)), name = 'Zer33365', )(Res87236)
Con22530 = keras.layers.Concatenate(axis=4, name = 'Con22530', )([Zer33365,in0Con22530])
Up_51611 = keras.layers.UpSampling3D(size=(2, 2, 1), name = 'Up_51611', )(in0Up_51611)
Zer70535 = keras.layers.ZeroPadding3D(padding=((2, 0), (0, 0), (1, 0)), name = 'Zer70535', )(Up_51611)
Mul90154 = keras.layers.Multiply(name = 'Mul90154', )([Con22530,Zer70535])
Res82148 = keras.layers.Reshape((6, 6, 8), name = 'Res82148', )(Mul90154)
Max78685 = keras.layers.Maximum(name = 'Max78685', )([in0Max78685,in1Max78685])
Per7287 = keras.layers.Permute((2,1), name = 'Per7287',)(Max78685)
Res25678 = keras.layers.Reshape((2, 2, 1), name = 'Res25678', )(Per7287)
Dot24851 = keras.layers.Dot(axes=(1, 1), name = 'Dot24851', )([in0Dot24851,in1Dot24851])
Res82272 = keras.layers.Reshape((1, 1), name = 'Res82272', )(Dot24851)
Res50614 = keras.layers.Reshape((1, 1, 1), name = 'Res50614', )(Res82272)
Zer72263 = keras.layers.ZeroPadding2D(padding=((1, 0), (0, 0)), name = 'Zer72263', )(Res50614)
Glo13494 = keras.layers.GlobalAveragePooling1D(name = 'Glo13494', )(in0Glo13494)
Res58745 = keras.layers.Reshape((2, 1), name = 'Res58745', )(Glo13494)
Res40476 = keras.layers.Reshape((2, 1, 1), name = 'Res40476', )(Res58745)
Up_3033 = keras.layers.UpSampling2D(size=(1, 1), name = 'Up_3033', )(Res40476)
Ave41882 = keras.layers.Average(name = 'Ave41882', )([Zer72263,Up_3033])
Zer86043 = keras.layers.ZeroPadding2D(padding=((0, 0), (1, 0)), name = 'Zer86043', )(Ave41882)
Add69808 = keras.layers.Add(name = 'Add69808', )([Res25678,Zer86043])
Zer11044 = keras.layers.ZeroPadding2D(padding=((4, 0), (4, 0)), name = 'Zer11044', )(Add69808)
Con64251 = keras.layers.Concatenate(axis=3, name = 'Con64251', )([Zer11044,in0Con64251])
Mul11187 = keras.layers.Multiply(name = 'Mul11187', )([Res82148,Con64251])
Res64876 = keras.layers.Reshape((6, 48), name = 'Res64876', )(Mul11187)
Per13535 = keras.layers.Permute((2,1), name = 'Per13535',)(Res64876)
model = tf.keras.models.Model(inputs=[in0Zer24097,in0Mul95624,in1Mul95624,in0Con46500,in0Con22530,in0Up_51611,in0Max78685,in1Max78685,in0Dot24851,in1Dot24851,in0Glo13494,in0Con64251], outputs=Per13535)
in0Zer24097 = tf.constant([[[[1.7153, 1.8307], [1.9589, 1.7619], [1.7499, 1.8386], [1.3082, 1.19]], [[1.5816, 1.4608], [1.2204, 1.3425], [1.0614, 1.6563], [1.0733, 1.757]], [[1.4891, 1.2541], [1.575, 1.6048], [1.4102, 1.6816], [1.3343, 1.1568]], [[1.6479, 1.4234], [1.402, 1.7558], [1.015, 1.7485], [1.2116, 1.4948]]]])
in0Mul95624 = tf.constant([[[[0.7523], [0.0094]], [[0.342], [0.5808]]]])
in1Mul95624 = tf.constant([[[[0.3758], [0.8669]], [[0.0502], [0.9294]]]])
in0Con46500 = tf.constant([[[[0.1375], [0.6157], [0.924], [0.9798], [0.3292], [0.432]], [[0.3558], [0.1032], [0.7049], [0.2269], [0.335], [0.5725]], [[0.6956], [0.6265], [0.6937], [0.6544], [0.6083], [0.5873]], [[0.4706], [0.3004], [0.7531], [0.5253], [0.9921], [0.3267]], [[0.4796], [0.6659], [0.7527], [0.1842], [0.9523], [0.5294]], [[0.4797], [0.5708], [0.829], [0.9301], [0.1748], [0.8088]]]])
in0Con22530 = tf.constant([[[[[0.7976], [0.2783], [0.0327], [0.7397]], [[0.2017], [0.3929], [0.4424], [0.0853]], [[0.963], [0.3152], [0.9566], [0.5591]], [[0.2013], [0.4208], [0.783], [0.982]], [[0.2878], [0.5638], [0.4079], [0.9329]], [[0.6178], [0.1307], [0.4082], [0.5611]]], [[[0.3482], [0.7268], [0.8953], [0.2127]], [[0.6217], [0.8006], [0.1952], [0.299]], [[0.6921], [0.0424], [0.3409], [0.5632]], [[0.6662], [0.5755], [0.8365], [0.7924]], [[0.2892], [0.8026], [0.9353], [0.0635]], [[0.3103], [0.2619], [0.3676], [0.813]]], [[[0.4894], [0.0067], [0.0538], [0.3767]], [[0.2312], [0.8275], [0.8418], [0.1587]], [[0.1645], [0.1034], [0.7191], [0.2567]], [[0.7275], [0.1899], [0.2675], [0.1967]], [[0.9604], [0.0323], [0.3524], [0.4126]], [[0.2638], [0.1235], [0.1682], [0.2414]]], [[[0.8341], [0.0193], [0.7972], [0.5004]], [[0.8567], [0.3704], [0.3813], [0.1637]], [[0.3023], [0.8336], [0.8574], [0.2595]], [[0.3548], [0.2834], [0.957], [0.8741]], [[0.0768], [0.4637], [0.8368], [0.0668]], [[0.9115], [0.5865], [0.2719], [0.5758]]], [[[0.0133], [0.4196], [0.8168], [0.425]], [[0.2026], [0.0825], [0.72], [0.9315]], [[0.5475], [0.1169], [0.6639], [0.1559]], [[0.1889], [0.391], [0.5941], [0.5383]], [[0.0472], [0.0517], [0.0013], [0.319]], [[0.4751], [0.0491], [0.0215], [0.3563]]], [[[0.7532], [0.7217], [0.6364], [0.1227]], [[0.5655], [0.5549], [0.0668], [0.9838]], [[0.237], [0.5015], [0.1807], [0.3501]], [[0.5669], [0.1888], [0.3655], [0.9248]], [[0.5496], [0.9289], [0.8497], [0.0675]], [[0.1399], [0.6917], [0.9016], [0.2437]]]]])
in0Up_51611 = tf.constant([[[[[1.2777, 1.1201], [1.5764, 1.8781], [1.1252, 1.4358]], [[1.812, 1.0343], [1.8254, 1.1581], [1.0381, 1.179]], [[1.5868, 1.5565], [1.0912, 1.8385], [1.3948, 1.3215]]], [[[1.4967, 1.6019], [1.0431, 1.8547], [1.8165, 1.5189]], [[1.7117, 1.9137], [1.7079, 1.9382], [1.9694, 1.4741]], [[1.9582, 1.9664], [1.9921, 1.2466], [1.07, 1.3169]]]]])
in0Max78685 = tf.constant([[[0.7344, 0.1488], [0.8068, 0.6983]]])
in1Max78685 = tf.constant([[[0.7698, 0.1734], [0.4775, 0.046]]])
in0Dot24851 = tf.constant([[0.5243, 0.5166, 0.6375]])
in1Dot24851 = tf.constant([[0.841, 0.6668, 0.5347]])
in0Glo13494 = tf.constant([[[1.3145, 1.4792], [1.4923, 1.0827]]])
in0Con64251 = tf.constant([[[[0.6894, 0.0269, 0.5119, 0.1107, 0.4607, 0.9084, 0.2293], [0.7014, 0.2295, 0.7979, 0.2808, 0.3611, 0.421, 0.1973], [0.5656, 0.4865, 0.246, 0.4514, 0.3089, 0.4444, 0.9107], [0.9416, 0.9031, 0.0196, 0.4508, 0.3981, 0.5051, 0.3889], [0.2716, 0.7249, 0.6434, 0.364, 0.4549, 0.873, 0.4585], [0.8012, 0.8976, 0.7177, 0.0962, 0.0146, 0.3933, 0.604]], [[0.2076, 0.7513, 0.8331, 0.2064, 0.4689, 0.7847, 0.8096], [0.6165, 0.5284, 0.467, 0.0384, 0.1209, 0.8131, 0.6447], [0.1783, 0.9603, 0.1811, 0.1848, 0.8265, 0.4696, 0.4952], [0.9859, 0.6945, 0.3938, 0.8089, 0.7569, 0.2257, 0.8435], [0.0077, 0.0317, 0.2103, 0.3104, 0.4279, 0.8605, 0.2707], [0.3987, 0.1865, 0.369, 0.4448, 0.4419, 0.7016, 0.9067]], [[0.4778, 0.9773, 0.1525, 0.8225, 0.8492, 0.1246, 0.4406], [0.9979, 0.0063, 0.278, 0.542, 0.1444, 0.7542, 0.1637], [0.018, 0.5309, 0.2615, 0.2344, 0.8431, 0.2423, 0.6789], [0.5797, 0.6441, 0.2928, 0.9421, 0.0142, 0.9055, 0.9177], [0.9305, 0.7737, 0.6889, 0.1479, 0.7872, 0.2963, 0.9378], [0.3385, 0.8738, 0.8949, 0.4969, 0.6633, 0.5248, 0.738]], [[0.5608, 0.7171, 0.4985, 0.4472, 0.3832, 0.2707, 0.7778], [0.7923, 0.7324, 0.9172, 0.164, 0.4194, 0.7531, 0.8116], [0.9303, 0.2839, 0.6107, 0.9627, 0.6508, 0.4733, 0.5375], [0.5647, 0.2084, 0.4067, 0.6707, 0.67, 0.8965, 0.9759], [0.3838, 0.1018, 0.4789, 0.0499, 0.643, 0.8771, 0.0462], [0.9116, 0.2954, 0.5712, 0.5206, 0.6152, 0.089, 0.9926]], [[0.6954, 0.9564, 0.6597, 0.2549, 0.772, 0.7348, 0.68], [0.8365, 0.4555, 0.2537, 0.8574, 0.4983, 0.8081, 0.5493], [0.4966, 0.9952, 0.2191, 0.6728, 0.8931, 0.3597, 0.0524], [0.4563, 0.9141, 0.1648, 0.7556, 0.5878, 0.7402, 0.5771], [0.4756, 0.4908, 0.8914, 0.2036, 0.5152, 0.4612, 0.3401], [0.7002, 0.2868, 0.7458, 0.7285, 0.8677, 0.7704, 0.7672]], [[0.4474, 0.4851, 0.87, 0.4945, 0.6105, 0.452, 0.4735], [0.0402, 0.7635, 0.8994, 0.4706, 0.9238, 0.5029, 0.8089], [0.46, 0.0833, 0.0488, 0.3355, 0.3846, 0.6396, 0.216], [0.4678, 0.8758, 0.6227, 0.1553, 0.8796, 0.6563, 0.3533], [0.7039, 0.8278, 0.9574, 0.9418, 0.1713, 0.7336, 0.5359], [0.4108, 0.9155, 0.6466, 0.5444, 0.282, 0.1193, 0.1389]]]])
print (np.array2string(model.predict([in0Zer24097,in0Mul95624,in1Mul95624,in0Con46500,in0Con22530,in0Up_51611,in0Max78685,in1Max78685,in0Dot24851,in1Dot24851,in0Glo13494,in0Con64251],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Per13535.png')

LZer24097 = zero_padding2D_layer([[[[1.7153, 1.8307], [1.9589, 1.7619], [1.7499, 1.8386], [1.3082, 1.19]], [[1.5816, 1.4608], [1.2204, 1.3425], [1.0614, 1.6563], [1.0733, 1.757]], [[1.4891, 1.2541], [1.575, 1.6048], [1.4102, 1.6816], [1.3343, 1.1568]], [[1.6479, 1.4234], [1.402, 1.7558], [1.015, 1.7485], [1.2116, 1.4948]]]], 1, 1, 1, 1, Zer24097), 
LMul95624 = multiply_layer([[[[[0.7523], [0.0094]], [[0.342], [0.5808]]]], [[[[0.3758], [0.8669]], [[0.0502], [0.9294]]]]], Mul95624), 
LZer97267 = zero_padding2D_layer(Mul95624, 4, 0, 4, 0, Zer97267), 
LCon46500 = concatenate_layer([Zer97267,[[[[0.1375], [0.6157], [0.924], [0.9798], [0.3292], [0.432]], [[0.3558], [0.1032], [0.7049], [0.2269], [0.335], [0.5725]], [[0.6956], [0.6265], [0.6937], [0.6544], [0.6083], [0.5873]], [[0.4706], [0.3004], [0.7531], [0.5253], [0.9921], [0.3267]], [[0.4796], [0.6659], [0.7527], [0.1842], [0.9523], [0.5294]], [[0.4797], [0.5708], [0.829], [0.9301], [0.1748], [0.8088]]]]], 3, Con46500), 
LAdd38934 = add_layer([Zer24097,Con46500], Add38934), 
LRes87236 = reshape_layer(Add38934, [6, 6, 2, 1], Res87236), 
LZer33365 = zero_padding3D_layer(Res87236, 0, 0, 0, 0, 2, 0, Zer33365), 
LCon22530 = concatenate_layer([Zer33365,[[[[[0.7976], [0.2783], [0.0327], [0.7397]], [[0.2017], [0.3929], [0.4424], [0.0853]], [[0.963], [0.3152], [0.9566], [0.5591]], [[0.2013], [0.4208], [0.783], [0.982]], [[0.2878], [0.5638], [0.4079], [0.9329]], [[0.6178], [0.1307], [0.4082], [0.5611]]], [[[0.3482], [0.7268], [0.8953], [0.2127]], [[0.6217], [0.8006], [0.1952], [0.299]], [[0.6921], [0.0424], [0.3409], [0.5632]], [[0.6662], [0.5755], [0.8365], [0.7924]], [[0.2892], [0.8026], [0.9353], [0.0635]], [[0.3103], [0.2619], [0.3676], [0.813]]], [[[0.4894], [0.0067], [0.0538], [0.3767]], [[0.2312], [0.8275], [0.8418], [0.1587]], [[0.1645], [0.1034], [0.7191], [0.2567]], [[0.7275], [0.1899], [0.2675], [0.1967]], [[0.9604], [0.0323], [0.3524], [0.4126]], [[0.2638], [0.1235], [0.1682], [0.2414]]], [[[0.8341], [0.0193], [0.7972], [0.5004]], [[0.8567], [0.3704], [0.3813], [0.1637]], [[0.3023], [0.8336], [0.8574], [0.2595]], [[0.3548], [0.2834], [0.957], [0.8741]], [[0.0768], [0.4637], [0.8368], [0.0668]], [[0.9115], [0.5865], [0.2719], [0.5758]]], [[[0.0133], [0.4196], [0.8168], [0.425]], [[0.2026], [0.0825], [0.72], [0.9315]], [[0.5475], [0.1169], [0.6639], [0.1559]], [[0.1889], [0.391], [0.5941], [0.5383]], [[0.0472], [0.0517], [0.0013], [0.319]], [[0.4751], [0.0491], [0.0215], [0.3563]]], [[[0.7532], [0.7217], [0.6364], [0.1227]], [[0.5655], [0.5549], [0.0668], [0.9838]], [[0.237], [0.5015], [0.1807], [0.3501]], [[0.5669], [0.1888], [0.3655], [0.9248]], [[0.5496], [0.9289], [0.8497], [0.0675]], [[0.1399], [0.6917], [0.9016], [0.2437]]]]]], 4, Con22530), 
LUp_51611 = up_sampling3D_layer([[[[[1.2777, 1.1201], [1.5764, 1.8781], [1.1252, 1.4358]], [[1.812, 1.0343], [1.8254, 1.1581], [1.0381, 1.179]], [[1.5868, 1.5565], [1.0912, 1.8385], [1.3948, 1.3215]]], [[[1.4967, 1.6019], [1.0431, 1.8547], [1.8165, 1.5189]], [[1.7117, 1.9137], [1.7079, 1.9382], [1.9694, 1.4741]], [[1.9582, 1.9664], [1.9921, 1.2466], [1.07, 1.3169]]]]], 2, 2, 1, Up_51611), 
LZer70535 = zero_padding3D_layer(Up_51611, 2, 0, 0, 0, 1, 0, Zer70535), 
LMul90154 = multiply_layer([Con22530,Zer70535], Mul90154), 
LRes82148 = reshape_layer(Mul90154, [6, 6, 8], Res82148), 
LMax78685 = maximum_layer([[[[0.7344, 0.1488], [0.8068, 0.6983]]], [[[0.7698, 0.1734], [0.4775, 0.046]]]], Max78685), 
LPer7287 = permute_layer(Max78685, 2,1, Per7287), 
LRes25678 = reshape_layer(Per7287, [2, 2, 1], Res25678), 
LDot24851 = dot_layer([[0.5243, 0.5166, 0.6375]], [[0.841, 0.6668, 0.5347]], 1, 1, Dot24851), 
LRes82272 = reshape_layer(Dot24851, [1, 1], Res82272), 
LRes50614 = reshape_layer(Res82272, [1, 1, 1], Res50614), 
LZer72263 = zero_padding2D_layer(Res50614, 1, 0, 0, 0, Zer72263), 
LGlo13494 = global_average_pooling1D_layer([[[1.3145, 1.4792], [1.4923, 1.0827]]], Glo13494), 
LRes58745 = reshape_layer(Glo13494, [2, 1], Res58745), 
LRes40476 = reshape_layer(Res58745, [2, 1, 1], Res40476), 
LUp_3033 = up_sampling2D_layer(Res40476, 1, 1, Up_3033), 
LAve41882 = average_layer([Zer72263,Up_3033], Ave41882), 
LZer86043 = zero_padding2D_layer(Ave41882, 0, 0, 1, 0, Zer86043), 
LAdd69808 = add_layer([Res25678,Zer86043], Add69808), 
LZer11044 = zero_padding2D_layer(Add69808, 4, 0, 4, 0, Zer11044), 
LCon64251 = concatenate_layer([Zer11044,[[[[0.6894, 0.0269, 0.5119, 0.1107, 0.4607, 0.9084, 0.2293], [0.7014, 0.2295, 0.7979, 0.2808, 0.3611, 0.421, 0.1973], [0.5656, 0.4865, 0.246, 0.4514, 0.3089, 0.4444, 0.9107], [0.9416, 0.9031, 0.0196, 0.4508, 0.3981, 0.5051, 0.3889], [0.2716, 0.7249, 0.6434, 0.364, 0.4549, 0.873, 0.4585], [0.8012, 0.8976, 0.7177, 0.0962, 0.0146, 0.3933, 0.604]], [[0.2076, 0.7513, 0.8331, 0.2064, 0.4689, 0.7847, 0.8096], [0.6165, 0.5284, 0.467, 0.0384, 0.1209, 0.8131, 0.6447], [0.1783, 0.9603, 0.1811, 0.1848, 0.8265, 0.4696, 0.4952], [0.9859, 0.6945, 0.3938, 0.8089, 0.7569, 0.2257, 0.8435], [0.0077, 0.0317, 0.2103, 0.3104, 0.4279, 0.8605, 0.2707], [0.3987, 0.1865, 0.369, 0.4448, 0.4419, 0.7016, 0.9067]], [[0.4778, 0.9773, 0.1525, 0.8225, 0.8492, 0.1246, 0.4406], [0.9979, 0.0063, 0.278, 0.542, 0.1444, 0.7542, 0.1637], [0.018, 0.5309, 0.2615, 0.2344, 0.8431, 0.2423, 0.6789], [0.5797, 0.6441, 0.2928, 0.9421, 0.0142, 0.9055, 0.9177], [0.9305, 0.7737, 0.6889, 0.1479, 0.7872, 0.2963, 0.9378], [0.3385, 0.8738, 0.8949, 0.4969, 0.6633, 0.5248, 0.738]], [[0.5608, 0.7171, 0.4985, 0.4472, 0.3832, 0.2707, 0.7778], [0.7923, 0.7324, 0.9172, 0.164, 0.4194, 0.7531, 0.8116], [0.9303, 0.2839, 0.6107, 0.9627, 0.6508, 0.4733, 0.5375], [0.5647, 0.2084, 0.4067, 0.6707, 0.67, 0.8965, 0.9759], [0.3838, 0.1018, 0.4789, 0.0499, 0.643, 0.8771, 0.0462], [0.9116, 0.2954, 0.5712, 0.5206, 0.6152, 0.089, 0.9926]], [[0.6954, 0.9564, 0.6597, 0.2549, 0.772, 0.7348, 0.68], [0.8365, 0.4555, 0.2537, 0.8574, 0.4983, 0.8081, 0.5493], [0.4966, 0.9952, 0.2191, 0.6728, 0.8931, 0.3597, 0.0524], [0.4563, 0.9141, 0.1648, 0.7556, 0.5878, 0.7402, 0.5771], [0.4756, 0.4908, 0.8914, 0.2036, 0.5152, 0.4612, 0.3401], [0.7002, 0.2868, 0.7458, 0.7285, 0.8677, 0.7704, 0.7672]], [[0.4474, 0.4851, 0.87, 0.4945, 0.6105, 0.452, 0.4735], [0.0402, 0.7635, 0.8994, 0.4706, 0.9238, 0.5029, 0.8089], [0.46, 0.0833, 0.0488, 0.3355, 0.3846, 0.6396, 0.216], [0.4678, 0.8758, 0.6227, 0.1553, 0.8796, 0.6563, 0.3533], [0.7039, 0.8278, 0.9574, 0.9418, 0.1713, 0.7336, 0.5359], [0.4108, 0.9155, 0.6466, 0.5444, 0.282, 0.1193, 0.1389]]]]], 3, Con64251), 
LMul11187 = multiply_layer([Res82148,Con64251], Mul11187), 
LRes64876 = reshape_layer(Mul11187, [6, 48], Res64876), 
LPer13535 = permute_layer(Res64876, 2,1, Per13535), 
exec_layers([LZer24097,LMul95624,LZer97267,LCon46500,LAdd38934,LRes87236,LZer33365,LCon22530,LUp_51611,LZer70535,LMul90154,LRes82148,LMax78685,LPer7287,LRes25678,LDot24851,LRes82272,LRes50614,LZer72263,LGlo13494,LRes58745,LRes40476,LUp_3033,LAve41882,LZer86043,LAdd69808,LZer11044,LCon64251,LMul11187,LRes64876,LPer13535],["Zer24097","Mul95624","Zer97267","Con46500","Add38934","Res87236","Zer33365","Con22530","Up_51611","Zer70535","Mul90154","Res82148","Max78685","Per7287","Res25678","Dot24851","Res82272","Res50614","Zer72263","Glo13494","Res58745","Res40476","Up_3033","Ave41882","Zer86043","Add69808","Zer11044","Con64251","Mul11187","Res64876","Per13535"],Per13535,"Per13535")

Actual (Unparsed): [[[0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0011445, 0.0107765, 0.4434221, 1.0057994], [0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0858047, 0.5737352, 1.1695174, 0.7205921], [0.0000000, 0.0000000, 0.0975231, 0.1433408, 0.6401529, 0.3938615], [0.0000000, 0.0000000, 0.2383055, 0.5588293, 0.4389621, 0.0882457], [0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.2576734, 0.3805326, 0.0335282, 0.7994715], [0.0000000, 0.0000000, 1.3513329, 0.3849764, 1.4738058, 0.0000000], [0.0000000, 0.0000000, 0.2282942, 0.3003405, 0.6654218, 0.1144532], [0.0000000, 0.0000000, 1.7713368, 1.3172648, 3.0669119, 0.5214360], [0.0000000, 0.0000000, 0.0373009, 0.1907588, 0.7771801, 1.2087343], [0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0279665, 0.5265409, 0.0490152, 0.0468344], [0.0000000, 0.0000000, 0.5221771, 2.7677674, 1.6110033, 0.0000000], [0.0000000, 0.0000000, 0.7021250, 0.6462151, 1.1492152, 0.1346995], [0.0000000, 0.0000000, 0.5121687, 1.1585135, 1.7770043, 1.0442318], [0.0000000, 0.0000000, 0.2054686, 0.1644484, 0.0120422, 0.1114738], [0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0575099, 0.1192121, 0.1233127, 0.2249856], [0.0000000, 0.0000000, 1.8252996, 1.7265019, 1.3098466, 0.0000000], [0.0000000, 0.0000000, 0.0043990, 0.7425622, 0.6768427, 0.6231193], [0.0000000, 0.0000000, 2.1720569, 2.0538662, 2.8173932, 1.2021703], [0.0000000, 0.0000000, 0.2128232, 1.0057274, 0.4579334, 0.4816354], [0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0346344, 0.3456456, 0.0906223, 1.7487763], [0.0000000, 0.0000000, 0.1732183, 0.0726538, 0.6060813, 0.0322107], [0.0000000, 0.0000000, 0.5100170, 0.9892277, 0.0008349, 0.1814471], [0.0000000, 0.0000000, 0.9775293, 2.6289192, 1.2076047, 0.1372096], [0.0000000, 0.0000000, 0.5113363, 0.0040784, 0.1428730, 0.0476366], [0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.1720246, 0.5214412, 0.0720072, 0.8794787], [0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0118260, 0.5854078], [0.0000000, 0.0000000, 0.2051160, 0.3075312, 0.0232560, 0.3169496], [0.0000000, 0.0000000, 0.4298983, 0.0405556, 0.4363993, 0.1032441], [0.0000000, 0.0000000, 0.2354294, 0.7552889, 0.3599790, 0.0445770]]]

Expected (Unparsed): [[[0,0,0,0,0,0],[0.0,0.0,0.0,0.0,0.0,0.0],[0.0,0.0,0.0,0.0,0.0,0.0],[0.0,0.0,0.0011444621750000001,0.010776538105000002,0.44342213122799995,1.0057993701],[0.0,0.0,0.0,0.0,0.0,0.0],[0.0,0.0,0.085804679576,0.5737352098240001,1.16951743712,0.7205921243400001],[0.0,0.0,0.097523064352,0.143340825784,0.64015291032,0.3938615226],[0.0,0.0,0.23830549791599995,0.558829326096,0.4389621,0.088245735705],[0,0,0,0,0,0],[0.0,0.0,0.0,0.0,0.0,0.0],[0.0,0.0,0.0,0.0,0.0,0.0],[0.0,0.0,0.25767340450000004,0.38053255868800007,0.033528167475,0.799471542414],[0.0,0.0,1.3513329580800002,0.38497642736,1.4738058577259998,0.0],[0.0,0.0,0.228294173352,0.30034053088199997,0.6654218472,0.114453240248],[0.0,0.0,1.7713367158319997,1.31726483254,3.0669119889450003,0.52143598878],[0.0,0.0,0.037300921002000005,0.190758837336,0.7771800437549999,1.208734270998],[0,0,0,0,0,0],[0.0,0.0,0.0,0.0,0.0,0.0],[0.0,0.0,0.0,0.0,0.0,0.0],[0.0,0.0,0.02796654113,0.526540947536,0.049015196223,0.04683436284],[0.0,0.0,0.5221771367039999,2.7677673135,1.6110033182399999,0.0],[0.0,0.0,0.7021250045009999,0.646215074952,1.149215162238,0.134699511804],[0.0,0.0,0.512168705006,1.158513444067,1.7770042920300004,1.04423181096],[0.0,0.0,0.20546860977,0.16444839375,0.012042158756000001,0.11147380056],[0,0,0,0,0,0],[0.0,0.0,0.0,0.0,0.0,0.0],[0.0,0.0,0.0,0.0,0.0,0.0],[0.0,0.0,0.057509893296,0.119212156154,0.12331270416,0.22498559491200001],[0.0,0.0,1.8252994934759998,1.7265019089559996,1.3098465786,0.0],[0.0,0.0,0.00439904285,0.742562139,0.676842659636,0.62311928316],[0.0,0.0,2.172056960185,2.0538661608849997,2.8173931930759997,1.2021702663220002],[0.0,0.0,0.21282316461,1.00572731001,0.457933484113,0.481635405344],[0,0,0,0,0.0,0.0],[0.0,0.0,0.0,0.0,0.0,0.0],[0.0,0.0,0.0,0.0,0.0,0.0],[0.0,0.0,0.034634413055,0.345645620045,0.090622291232,1.748776270304],[0.0,0.0,0.173218255584,0.072653809184,0.6060812842909704,0.032210661566952],[0.0,0.0,0.51001696128,0.9892277224000001,0.000834922816,0.181447130226],[0.0,0.0,0.9775293863719999,2.6289193050120003,1.2076046964,0.13720960960000003],[0.0,0.0,0.5113362940199999,0.004078360439999999,0.14287298311,0.047636552925000006],[0,0,0,0,0.0,0.0],[0.0,0.0,0.0,0.0,0.0,0.0],[0.0,0.0,0.0,0.0,0.0,0.0],[0.0,0.0,0.172024613475,0.5214411972,0.07200716899199999,0.879478731808],[0.0,0.0,0.0,0.0,0.011825991108371002,0.5854078311954048],[0.0,0.0,0.20511603981,0.30753118987999994,0.023256008629999998,0.31694954591999996],[0.0,0.0,0.42989833779200004,0.04055562324,0.4363992432,0.1032441288],[0.0,0.0,0.23542945379999997,0.7552888942199999,0.35997903978400003,0.044576972816999995]]]

Actual:   [[[0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0], [0, 0, 0.0012, 0.0108, 0.4435, 1.0058], [0, 0, 0, 0, 0, 0], [0, 0, 0.0859, 0.5738, 1.1696, 0.7206], [0, 0, 0.0976, 0.1434, 0.6402, 0.3939], [0, 0, 0.2384, 0.5589, 0.439, 0.0883], [0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0], [0, 0, 0.2577, 0.3806, 0.0336, 0.7995], [0, 0, 1.3514, 0.385, 1.4739, 0], [0, 0, 0.2283, 0.3004, 0.6655, 0.1145], [0, 0, 1.7714, 1.3173, 3.067, 0.5215], [0, 0, 0.0374, 0.1908, 0.7772, 1.2088], [0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0], [0, 0, 0.028, 0.5266, 0.0491, 0.0469], [0, 0, 0.5222, 2.7678, 1.6111, 0], [0, 0, 0.7022, 0.6463, 1.1493, 0.1347], [0, 0, 0.5122, 1.1586, 1.7771, 1.0443], [0, 0, 0.2055, 0.1645, 0.0121, 0.1115], [0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0], [0, 0, 0.0576, 0.1193, 0.1234, 0.225], [0, 0, 1.8253, 1.7266, 1.3099, 0], [0, 0, 0.0044, 0.7426, 0.6769, 0.6232], [0, 0, 2.1721, 2.0539, 2.8174, 1.2022], [0, 0, 0.2129, 1.0058, 0.458, 0.4817], [0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0], [0, 0, 0.0347, 0.3457, 0.0907, 1.7488], [0, 0, 0.1733, 0.0727, 0.6061, 0.0323], [0, 0, 0.5101, 0.9893, 0.0009, 0.1815], [0, 0, 0.9776, 2.629, 1.2077, 0.1373], [0, 0, 0.5114, 0.0041, 0.1429, 0.0477], [0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0], [0, 0, 0.1721, 0.5215, 0.0721, 0.8795], [0, 0, 0, 0, 0.0119, 0.5855], [0, 0, 0.2052, 0.3076, 0.0233, 0.317], [0, 0, 0.4299, 0.0406, 0.4364, 0.1033], [0, 0, 0.2355, 0.7553, 0.36, 0.0446]]]

Expected: [[[0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0], [0, 0, 0.0012, 0.0108, 0.4435, 1.0058], [0, 0, 0, 0, 0, 0], [0, 0, 0.0859, 0.5738, 1.1696, 0.7206], [0, 0, 0.0976, 0.1434, 0.6402, 0.3939], [0, 0, 0.2384, 0.5589, 0.439, 0.0883], [0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0], [0, 0, 0.2577, 0.3806, 0.0336, 0.7995], [0, 0, 1.3514, 0.385, 1.4739, 0], [0, 0, 0.2283, 0.3004, 0.6655, 0.1145], [0, 0, 1.7714, 1.3173, 3.067, 0.5215], [0, 0, 0.0374, 0.1908, 0.7772, 1.2088], [0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0], [0, 0, 0.028, 0.5266, 0.0491, 0.0469], [0, 0, 0.5222, 2.7678, 1.6111, 0], [0, 0, 0.7022, 0.6463, 1.1493, 0.1347], [0, 0, 0.5122, 1.1586, 1.7771, 1.0443], [0, 0, 0.2055, 0.1645, 0.0121, 0.1115], [0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0], [0, 0, 0.0576, 0.1193, 0.1234, 0.225], [0, 0, 1.8253, 1.7266, 1.3099, 0], [0, 0, 0.0044, 0.7426, 0.6769, 0.6232], [0, 0, 2.1721, 2.0539, 2.8174, 1.2022], [0, 0, 0.2129, 1.0058, 0.458, 0.4817], [0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0], [0, 0, 0.0347, 0.3457, 0.0907, 1.7488], [0, 0, 0.1733, 0.0727, 0.6061, 0.0323], [0, 0, 0.5101, 0.9893, 0.0009, 0.1815], [0, 0, 0.9776, 2.629, 1.2077, 0.1373], [0, 0, 0.5114, 0.0041, 0.1429, 0.0477], [0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0], [0, 0, 0.1721, 0.5215, 0.0721, 0.8795], [0, 0, 0, 0, 0.0119, 0.5855], [0, 0, 0.2052, 0.3076, 0.0233, 0.317], [0, 0, 0.4299, 0.0406, 0.4364, 0.1033], [0, 0, 0.2355, 0.7553, 0.36, 0.0446]]]