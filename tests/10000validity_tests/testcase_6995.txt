import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Glo95750 = tf.keras.layers.Input(shape=([1, 2, 2]))

Glo95750 = keras.layers.GlobalAveragePooling2D(name = 'Glo95750', )(in0Glo95750)
Lea48426 = keras.layers.LeakyReLU(alpha=2.3731073212097393, name = 'Lea48426', )(Glo95750)
Res49794 = keras.layers.Reshape((2, 1), name = 'Res49794', )(Lea48426)
Zer4543 = keras.layers.ZeroPadding1D(padding=((3, 0)), name = 'Zer4543', )(Res49794)
Res76510 = keras.layers.Reshape((5, 1, 1), name = 'Res76510', )(Zer4543)
Res67206 = keras.layers.Reshape((5, 1, 1, 1), name = 'Res67206', )(Res76510)
Up_86774 = keras.layers.UpSampling3D(size=(2, 2, 1), name = 'Up_86774', )(Res67206)
model = tf.keras.models.Model(inputs=[in0Glo95750], outputs=Up_86774)
in0Glo95750 = tf.constant([[[[1.7739, 1.5988], [1.7782, 1.9005]]]])
print (np.array2string(model.predict([in0Glo95750],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Up_86774.png')

LGlo95750 = global_average_pooling2D_layer([[[[1.7739, 1.5988], [1.7782, 1.9005]]]], Glo95750), 
LLea48426 = leaky_relu_layer(Glo95750, 2.3731073212097393, Lea48426), 
LRes49794 = reshape_layer(Lea48426, [2, 1], Res49794), 
LZer4543 = zero_padding1D_layer(Res49794, 3, 0, Zer4543), 
LRes76510 = reshape_layer(Zer4543, [5, 1, 1], Res76510), 
LRes67206 = reshape_layer(Res76510, [5, 1, 1, 1], Res67206), 
LUp_86774 = up_sampling3D_layer(Res67206, 2, 2, 1, Up_86774), 
exec_layers([LGlo95750,LLea48426,LRes49794,LZer4543,LRes76510,LRes67206,LUp_86774],["Glo95750","Lea48426","Res49794","Zer4543","Res76510","Res67206","Up_86774"],Up_86774,"Up_86774")

Actual (Unparsed): [[[[[0.0000000]], [[0.0000000]]], [[[0.0000000]], [[0.0000000]]], [[[0.0000000]], [[0.0000000]]], [[[0.0000000]], [[0.0000000]]], [[[0.0000000]], [[0.0000000]]], [[[0.0000000]], [[0.0000000]]], [[[1.7760500]], [[1.7760500]]], [[[1.7760500]], [[1.7760500]]], [[[1.7496500]], [[1.7496500]]], [[[1.7496500]], [[1.7496500]]]]]

Expected (Unparsed): [[[[[0]],[[0]]],[[[0]],[[0]]],[[[0]],[[0]]],[[[0]],[[0]]],[[[0]],[[0]]],[[[0]],[[0]]],[[[1.7760500000000001]],[[1.7760500000000001]]],[[[1.7760500000000001]],[[1.7760500000000001]]],[[[1.74965]],[[1.74965]]],[[[1.74965]],[[1.74965]]]]]

Actual:   [[[[[0]], [[0]]], [[[0]], [[0]]], [[[0]], [[0]]], [[[0]], [[0]]], [[[0]], [[0]]], [[[0]], [[0]]], [[[1.7761]], [[1.7761]]], [[[1.7761]], [[1.7761]]], [[[1.7497]], [[1.7497]]], [[[1.7497]], [[1.7497]]]]]

Expected: [[[[[0]], [[0]]], [[[0]], [[0]]], [[[0]], [[0]]], [[[0]], [[0]]], [[[0]], [[0]]], [[[0]], [[0]]], [[[1.7761]], [[1.7761]]], [[[1.7761]], [[1.7761]]], [[[1.7497]], [[1.7497]]], [[[1.7497]], [[1.7497]]]]]