import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Min62589 = tf.keras.layers.Input(shape=([2, 2]))
in1Min62589 = tf.keras.layers.Input(shape=([2, 2]))
in0Ave11908 = tf.keras.layers.Input(shape=([2, 1]))
in0Con29803 = tf.keras.layers.Input(shape=([2, 1]))
in0Max92650 = tf.keras.layers.Input(shape=([1, 1]))
in1Max92650 = tf.keras.layers.Input(shape=([1, 1]))
in0Con3430 = tf.keras.layers.Input(shape=([1, 3]))
in0Max86568 = tf.keras.layers.Input(shape=([1, 1]))
in0Con82364 = tf.keras.layers.Input(shape=([1]))

Min62589 = keras.layers.Minimum(name = 'Min62589', )([in0Min62589,in1Min62589])
Ave11908 = keras.layers.AveragePooling1D(pool_size=(1), name = 'Ave11908', )(in0Ave11908)
Con29803 = keras.layers.Concatenate(axis=2, name = 'Con29803', )([Ave11908,in0Con29803])
Ave35932 = keras.layers.Average(name = 'Ave35932', )([Min62589,Con29803])
Fla68947 = keras.layers.Flatten(name = 'Fla68947', )(Ave35932)
Max92650 = keras.layers.Maximum(name = 'Max92650', )([in0Max92650,in1Max92650])
Con3430 = keras.layers.Concatenate(axis=2, name = 'Con3430', )([Max92650,in0Con3430])
Max86568 = keras.layers.MaxPool1D(pool_size=(1), name = 'Max86568', )(in0Max86568)
Con2645 = keras.layers.Conv1D(4, (1),strides=(1), padding='same', dilation_rate=(1), name = 'Con2645', )(Max86568)
Min40484 = keras.layers.Minimum(name = 'Min40484', )([Con3430,Con2645])
GRU37272 = keras.layers.GRU(3,reset_after=True, recurrent_activation='sigmoid', name = 'GRU37272', )(Min40484)
Con82364 = keras.layers.Concatenate(axis=1, name = 'Con82364', )([GRU37272,in0Con82364])
Min75477 = keras.layers.Minimum(name = 'Min75477', )([Fla68947,Con82364])
model = tf.keras.models.Model(inputs=[in0Min62589,in1Min62589,in0Ave11908,in0Con29803,in0Max92650,in1Max92650,in0Con3430,in0Max86568,in0Con82364], outputs=Min75477)
w = model.get_layer('Con2645').get_weights() 
w[0] = np.array([[[0.7038, 0.7669, 0.8683, 0.1106]]])
w[1] = np.array([0, 0, 0, 0])
model.get_layer('Con2645').set_weights(w) 
w = model.get_layer('GRU37272').get_weights() 
w[0] = np.array([[9, 6, 7, 1, 3, 4, 5, 3, 1], [9, 5, 6, 4, 6, 5, 10, 3, 7], [7, 8, 2, 8, 3, 9, 6, 1, 6], [3, 2, 10, 6, 6, 6, 6, 5, 10]])
w[1] = np.array([[9, 10, 7, 9, 9, 5, 3, 8, 7], [1, 5, 2, 5, 7, 9, 4, 1, 4], [5, 2, 5, 4, 1, 8, 2, 2, 5]])
w[2] = np.array([[1, 10, 2, 9, 5, 8, 6, 8, 1], [9, 2, 6, 5, 4, 9, 3, 2, 4]])
model.get_layer('GRU37272').set_weights(w) 
in0Min62589 = tf.constant([[[0.2581, 0.2221], [0.0421, 0.3286]]])
in1Min62589 = tf.constant([[[0.7127, 0.4935], [0.564, 0.7783]]])
in0Ave11908 = tf.constant([[[1.394], [1.3298]]])
in0Con29803 = tf.constant([[[0.8458], [0.0073]]])
in0Max92650 = tf.constant([[[0.0547]]])
in1Max92650 = tf.constant([[[0.3832]]])
in0Con3430 = tf.constant([[[0.5803, 0.8167, 0.1173]]])
in0Max86568 = tf.constant([[[1.4074]]])
in0Con82364 = tf.constant([[0.415]])
print (np.array2string(model.predict([in0Min62589,in1Min62589,in0Ave11908,in0Con29803,in0Max92650,in1Max92650,in0Con3430,in0Max86568,in0Con82364],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Min75477.png')

LMin62589 = minimum_layer([[[[0.2581, 0.2221], [0.0421, 0.3286]]], [[[0.7127, 0.4935], [0.564, 0.7783]]]], Min62589), 
LAve11908 = average_pooling1D_layer([[[1.394], [1.3298]]], 1, Ave11908), 
LCon29803 = concatenate_layer([Ave11908,[[[0.8458], [0.0073]]]], 2, Con29803), 
LAve35932 = average_layer([Min62589,Con29803], Ave35932), 
LFla68947 = flatten_layer(Ave35932, Fla68947), 
LMax92650 = maximum_layer([[[[0.0547]]], [[[0.3832]]]], Max92650), 
LCon3430 = concatenate_layer([Max92650,[[[0.5803, 0.8167, 0.1173]]]], 2, Con3430), 
LMax86568 = max_pool1D_layer([[[1.4074]]], 1, Max86568), 
LCon2645 = conv1D_layer(Max86568, 1,[[[0.7038, 0.7669, 0.8683, 0.1106]]],[0, 0, 0, 0], 1, true, 1, Con2645), 
LMin40484 = minimum_layer([Con3430,Con2645], Min40484), 
LGRU37272 = gru_layer(Min40484,[[9, 6, 7, 1, 3, 4, 5, 3, 1], [9, 5, 6, 4, 6, 5, 10, 3, 7], [7, 8, 2, 8, 3, 9, 6, 1, 6], [3, 2, 10, 6, 6, 6, 6, 5, 10]],[[9, 10, 7, 9, 9, 5, 3, 8, 7], [1, 5, 2, 5, 7, 9, 4, 1, 4], [5, 2, 5, 4, 1, 8, 2, 2, 5]],[[1, 10, 2, 9, 5, 8, 6, 8, 1], [9, 2, 6, 5, 4, 9, 3, 2, 4]], true, GRU37272), 
LCon82364 = concatenate_layer([GRU37272,[[0.415]]], 1, Con82364), 
LMin75477 = minimum_layer([Fla68947,Con82364], Min75477), 
exec_layers([LMin62589,LAve11908,LCon29803,LAve35932,LFla68947,LMax92650,LCon3430,LMax86568,LCon2645,LMin40484,LGRU37272,LCon82364,LMin75477],["Min62589","Ave11908","Con29803","Ave35932","Fla68947","Max92650","Con3430","Max86568","Con2645","Min40484","GRU37272","Con82364","Min75477"],Min75477,"Min75477")

Actual (Unparsed): [[0.0000000, 0.0000000, 0.0000000, 0.1679500]]

Expected (Unparsed): [[1.8006263147185564e-11,3.894395916856146e-11,4.2634585639686416e-8,0.16795]]

Actual:   [[0, 0, 0, 0.168]]

Expected: [[0, 0, 0, 0.168]]