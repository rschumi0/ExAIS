import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Lea64347 = tf.keras.layers.Input(shape=([2, 1, 1, 2]))

Lea64347 = keras.layers.LeakyReLU(alpha=2.974020506361593, name = 'Lea64347', input_shape=(2, 1, 1, 2))(in0Lea64347)
Res8652 = keras.layers.Reshape((2, 1, 2), name = 'Res8652', )(Lea64347)
Res61797 = keras.layers.Reshape((2, 2), name = 'Res61797', )(Res8652)
Con18886 = keras.layers.Conv1D(2, (2),strides=(1), padding='same', dilation_rate=(1), name = 'Con18886', )(Res61797)
model = tf.keras.models.Model(inputs=[in0Lea64347], outputs=Con18886)
w = model.get_layer('Con18886').get_weights() 
w[0] = np.array([[[0.5783, 0.6539], [0.0896, 0.2164]], [[0.3463, 0.6078], [0.4208, 0.9627]]])
w[1] = np.array([0, 0])
model.get_layer('Con18886').set_weights(w) 
in0Lea64347 = tf.constant([[[[[0.1896, 0.4828]]], [[[0.2892, 0.1465]]]]])
print (np.array2string(model.predict([in0Lea64347],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Con18886.png')

LLea64347 = leaky_relu_layer([[[[[0.1896, 0.4828]]], [[[0.2892, 0.1465]]]]], 2.974020506361593, Lea64347), 
LRes8652 = reshape_layer(Lea64347, [2, 1, 2], Res8652), 
LRes61797 = reshape_layer(Res8652, [2, 2], Res61797), 
LCon18886 = conv1D_layer(Res61797, 2,[[[0.5783, 0.6539], [0.0896, 0.2164]], [[0.3463, 0.6078], [0.4208, 0.9627]]],[0, 0], 1, true, 1, Con18886), 
exec_layers([LLea64347,LRes8652,LRes61797,LCon18886],["Lea64347","Res8652","Res61797","Con18886"],Con18886,"Con18886")

Actual (Unparsed): [[[0.3147017, 0.5452687], [0.1803708, 0.2208105]]]

Expected (Unparsed): [[[0.31470172,0.54526867],[0.18037076000000002,0.22081048]]]

Actual:   [[[0.3148, 0.5453], [0.1804, 0.2209]]]

Expected: [[[0.3148, 0.5453], [0.1804, 0.2209]]]