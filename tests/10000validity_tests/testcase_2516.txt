import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Min11854 = tf.keras.layers.Input(shape=([1, 2, 2]))
in1Min11854 = tf.keras.layers.Input(shape=([1, 2, 2]))
in0Min93102 = tf.keras.layers.Input(shape=([2, 2, 2]))
in1Min93102 = tf.keras.layers.Input(shape=([2, 2, 2]))
in0Sub28446 = tf.keras.layers.Input(shape=([3, 3]))
in1Sub28446 = tf.keras.layers.Input(shape=([3, 3]))
in0Con2991 = tf.keras.layers.Input(shape=([3, 1]))
in0Con40523 = tf.keras.layers.Input(shape=([3, 4, 2]))
in0Add91214 = tf.keras.layers.Input(shape=([1, 1]))
in1Add91214 = tf.keras.layers.Input(shape=([1, 1]))

Min11854 = keras.layers.Minimum(name = 'Min11854', )([in0Min11854,in1Min11854])
Res45489 = keras.layers.Reshape((1, 4), name = 'Res45489', )(Min11854)
Zer51534 = keras.layers.ZeroPadding1D(padding=((2, 0)), name = 'Zer51534', )(Res45489)
Min93102 = keras.layers.Minimum(name = 'Min93102', )([in0Min93102,in1Min93102])
Res75165 = keras.layers.Reshape((2, 4), name = 'Res75165', )(Min93102)
Zer50200 = keras.layers.ZeroPadding1D(padding=((1, 0)), name = 'Zer50200', )(Res75165)
Sub28446 = keras.layers.Subtract(name = 'Sub28446', )([in0Sub28446,in1Sub28446])
Con2991 = keras.layers.Concatenate(axis=2, name = 'Con2991', )([Sub28446,in0Con2991])
Add18441 = keras.layers.Add(name = 'Add18441', )([Zer50200,Con2991])
Min35411 = keras.layers.Minimum(name = 'Min35411', )([Zer51534,Add18441])
Res40927 = keras.layers.Reshape((3, 4, 1), name = 'Res40927', )(Min35411)
Con40523 = keras.layers.Concatenate(axis=3, name = 'Con40523', )([Res40927,in0Con40523])
Add91214 = keras.layers.Add(name = 'Add91214', )([in0Add91214,in1Add91214])
Res26006 = keras.layers.Reshape((1, 1, 1), name = 'Res26006', )(Add91214)
Max38076 = keras.layers.MaxPool2D(pool_size=(1, 1), name = 'Max38076', )(Res26006)
Con28034 = keras.layers.Conv2D(3, (1, 2),strides=(1, 1), padding='same', dilation_rate=(1, 1), name = 'Con28034', )(Max38076)
Zer61783 = keras.layers.ZeroPadding2D(padding=((2, 0), (3, 0)), name = 'Zer61783', )(Con28034)
Sub11539 = keras.layers.Subtract(name = 'Sub11539', )([Con40523,Zer61783])
model = tf.keras.models.Model(inputs=[in0Min11854,in1Min11854,in0Min93102,in1Min93102,in0Sub28446,in1Sub28446,in0Con2991,in0Con40523,in0Add91214,in1Add91214], outputs=Sub11539)
w = model.get_layer('Con28034').get_weights() 
w[0] = np.array([[[[0.2263, 0.2146, 0.9973]], [[0.6597, 0.2732, 0.8532]]]])
w[1] = np.array([0, 0, 0])
model.get_layer('Con28034').set_weights(w) 
in0Min11854 = tf.constant([[[[0.8644, 0.172], [0.7033, 0.7362]]]])
in1Min11854 = tf.constant([[[[0.8626, 0.7373], [0.5801, 0.8365]]]])
in0Min93102 = tf.constant([[[[0.1521, 0.975], [0.3433, 0.1265]], [[0.083, 0.7292], [0.339, 0.387]]]])
in1Min93102 = tf.constant([[[[0.9747, 0.5436], [0.6218, 0.3766]], [[0.034, 0.6424], [0.9968, 0.3723]]]])
in0Sub28446 = tf.constant([[[0.9676, 0.3546, 0.0697], [0.1207, 0.5961, 0.5354], [0.5547, 0.1077, 0.141]]])
in1Sub28446 = tf.constant([[[0.2881, 0.0362, 0.509], [0.6275, 0.6938, 0.2232], [0.7857, 0.0219, 0.313]]])
in0Con2991 = tf.constant([[[0.2673], [0.1165], [0.5698]]])
in0Con40523 = tf.constant([[[[0.6349, 0.3766], [0.7946, 0.7126], [0.9816, 0.5248], [0.633, 0.5475]], [[0.3696, 0.09], [0.7853, 0.7689], [0.8469, 0.4178], [0.7043, 0.9279]], [[0.6069, 0.8091], [0.0382, 0.1535], [0.6107, 0.4407], [0.2849, 0.0076]]]])
in0Add91214 = tf.constant([[[0.4979]]])
in1Add91214 = tf.constant([[[0.6554]]])
print (np.array2string(model.predict([in0Min11854,in1Min11854,in0Min93102,in1Min93102,in0Sub28446,in1Sub28446,in0Con2991,in0Con40523,in0Add91214,in1Add91214],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Sub11539.png')

LMin11854 = minimum_layer([[[[[0.8644, 0.172], [0.7033, 0.7362]]]], [[[[0.8626, 0.7373], [0.5801, 0.8365]]]]], Min11854), 
LRes45489 = reshape_layer(Min11854, [1, 4], Res45489), 
LZer51534 = zero_padding1D_layer(Res45489, 2, 0, Zer51534), 
LMin93102 = minimum_layer([[[[[0.1521, 0.975], [0.3433, 0.1265]], [[0.083, 0.7292], [0.339, 0.387]]]], [[[[0.9747, 0.5436], [0.6218, 0.3766]], [[0.034, 0.6424], [0.9968, 0.3723]]]]], Min93102), 
LRes75165 = reshape_layer(Min93102, [2, 4], Res75165), 
LZer50200 = zero_padding1D_layer(Res75165, 1, 0, Zer50200), 
LSub28446 = subtract_layer([[[0.9676, 0.3546, 0.0697], [0.1207, 0.5961, 0.5354], [0.5547, 0.1077, 0.141]]], [[[0.2881, 0.0362, 0.509], [0.6275, 0.6938, 0.2232], [0.7857, 0.0219, 0.313]]], Sub28446), 
LCon2991 = concatenate_layer([Sub28446,[[[0.2673], [0.1165], [0.5698]]]], 2, Con2991), 
LAdd18441 = add_layer([Zer50200,Con2991], Add18441), 
LMin35411 = minimum_layer([Zer51534,Add18441], Min35411), 
LRes40927 = reshape_layer(Min35411, [3, 4, 1], Res40927), 
LCon40523 = concatenate_layer([Res40927,[[[[0.6349, 0.3766], [0.7946, 0.7126], [0.9816, 0.5248], [0.633, 0.5475]], [[0.3696, 0.09], [0.7853, 0.7689], [0.8469, 0.4178], [0.7043, 0.9279]], [[0.6069, 0.8091], [0.0382, 0.1535], [0.6107, 0.4407], [0.2849, 0.0076]]]]], 3, Con40523), 
LAdd91214 = add_layer([[[[0.4979]]], [[[0.6554]]]], Add91214), 
LRes26006 = reshape_layer(Add91214, [1, 1, 1], Res26006), 
LMax38076 = max_pool2D_layer(Res26006, 1, 1, Max38076), 
LCon28034 = conv2D_layer(Max38076, 1, 2,[[[[0.2263, 0.2146, 0.9973]], [[0.6597, 0.2732, 0.8532]]]],[0, 0, 0], 1, 1, true, 1, 1, Con28034), 
LZer61783 = zero_padding2D_layer(Con28034, 2, 0, 3, 0, Zer61783), 
LSub11539 = subtract_layer(Con40523,Zer61783, Sub11539), 
exec_layers([LMin11854,LRes45489,LZer51534,LMin93102,LRes75165,LZer50200,LSub28446,LCon2991,LAdd18441,LMin35411,LRes40927,LCon40523,LAdd91214,LRes26006,LMax38076,LCon28034,LZer61783,LSub11539],["Min11854","Res45489","Zer51534","Min93102","Res75165","Zer50200","Sub28446","Con2991","Add18441","Min35411","Res40927","Con40523","Add91214","Res26006","Max38076","Con28034","Zer61783","Sub11539"],Sub11539,"Sub11539")

Actual (Unparsed): [[[[0.0000000, 0.6349000, 0.3766000], [0.0000000, 0.7946000, 0.7126000], [-0.4393000, 0.9816000, 0.5248000], [0.0000000, 0.6330000, 0.5475000]], [[-0.3547000, 0.3696000, 0.0900000], [0.0000000, 0.7853000, 0.7689000], [0.0000000, 0.8469000, 0.4178000], [0.0000000, 0.7043000, 0.9279000]], [[-0.1970000, 0.6069000, 0.8091000], [0.1720000, 0.0382000, 0.1535000], [0.1670000, 0.6107000, 0.4407000], [0.4752082, 0.0374018, -1.1425861]]]]

Expected (Unparsed): [[[[0,0.6349,0.3766],[0,0.7946,0.7126],[-0.4393,0.9816,0.5248],[0,0.633,0.5475]],[[-0.3546999999999999,0.3696,0.09],[0,0.7853,0.7689],[0,0.8469,0.4178],[0,0.7043,0.9279]],[[-0.19699999999999998,0.6069,0.8091],[0.172,0.0382,0.1535],[0.167,0.6107,0.4407],[0.47520820999999996,0.037401819999999975,-1.14258609]]]]

Actual:   [[[[0, 0.6349, 0.3766], [0, 0.7946, 0.7126], [-0.4393, 0.9816, 0.5248], [0, 0.633, 0.5475]], [[-0.3547, 0.3696, 0.09], [0, 0.7853, 0.7689], [0, 0.8469, 0.4178], [0, 0.7043, 0.9279]], [[-0.197, 0.6069, 0.8091], [0.172, 0.0382, 0.1535], [0.167, 0.6107, 0.4407], [0.4753, 0.0375, -1.1425]]]]

Expected: [[[[0, 0.6349, 0.3766], [0, 0.7946, 0.7126], [-0.4393, 0.9816, 0.5248], [0, 0.633, 0.5475]], [[-0.3546, 0.3696, 0.09], [0, 0.7853, 0.7689], [0, 0.8469, 0.4178], [0, 0.7043, 0.9279]], [[-0.1969, 0.6069, 0.8091], [0.172, 0.0382, 0.1535], [0.167, 0.6107, 0.4407], [0.4753, 0.0375, -1.1425]]]]