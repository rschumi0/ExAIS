import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Ave5584 = tf.keras.layers.Input(shape=([1, 2, 2]))
in1Ave5584 = tf.keras.layers.Input(shape=([1, 2, 2]))
in0Cro35481 = tf.keras.layers.Input(shape=([4, 2]))
in0Max83253 = tf.keras.layers.Input(shape=([2, 2, 1, 1]))
in1Max83253 = tf.keras.layers.Input(shape=([2, 2, 1, 1]))
in0Con23329 = tf.keras.layers.Input(shape=([2, 3, 1]))

Ave5584 = keras.layers.Average(name = 'Ave5584', )([in0Ave5584,in1Ave5584])
Zer83868 = keras.layers.ZeroPadding2D(padding=((1, 0), (1, 0)), name = 'Zer83868', )(Ave5584)
Cro35481 = keras.layers.Cropping1D(cropping=((2, 0)), name = 'Cro35481', )(in0Cro35481)
Res67766 = keras.layers.Reshape((2, 2, 1), name = 'Res67766', )(Cro35481)
Res48312 = keras.layers.Reshape((2, 2, 1, 1), name = 'Res48312', )(Res67766)
Max83253 = keras.layers.Maximum(name = 'Max83253', )([in0Max83253,in1Max83253])
Max32336 = keras.layers.Maximum(name = 'Max32336', )([Res48312,Max83253])
Res38085 = keras.layers.Reshape((2, 2, 1), name = 'Res38085', )(Max32336)
Cro28581 = keras.layers.Cropping2D(cropping=((0, 0), (1, 0)), name = 'Cro28581', )(Res38085)
Zer98432 = keras.layers.ZeroPadding2D(padding=((0, 0), (2, 0)), name = 'Zer98432', )(Cro28581)
Con23329 = keras.layers.Concatenate(axis=3, name = 'Con23329', )([Zer98432,in0Con23329])
Add20046 = keras.layers.Add(name = 'Add20046', )([Zer83868,Con23329])
model = tf.keras.models.Model(inputs=[in0Ave5584,in1Ave5584,in0Cro35481,in0Max83253,in1Max83253,in0Con23329], outputs=Add20046)
in0Ave5584 = tf.constant([[[[0.8219, 0.556], [0.0106, 0.9096]]]])
in1Ave5584 = tf.constant([[[[0.4027, 0.4175], [0.1847, 0.6566]]]])
in0Cro35481 = tf.constant([[[1.9963, 1.6266], [1.8279, 1.4087], [1.5911, 1.6888], [1.4538, 1.5295]]])
in0Max83253 = tf.constant([[[[[0.9551]], [[0.7593]]], [[[0.7704]], [[0.6302]]]]])
in1Max83253 = tf.constant([[[[[0.3961]], [[0.7442]]], [[[0.9516]], [[0.4468]]]]])
in0Con23329 = tf.constant([[[[0.1828], [0.2243], [0.3695]], [[0.2894], [0.2157], [0.874]]]])
print (np.array2string(model.predict([in0Ave5584,in1Ave5584,in0Cro35481,in0Max83253,in1Max83253,in0Con23329],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Add20046.png')

LAve5584 = average_layer([[[[[0.8219, 0.556], [0.0106, 0.9096]]]], [[[[0.4027, 0.4175], [0.1847, 0.6566]]]]], Ave5584), 
LZer83868 = zero_padding2D_layer(Ave5584, 1, 0, 1, 0, Zer83868), 
LCro35481 = cropping1D_layer([[[1.9963, 1.6266], [1.8279, 1.4087], [1.5911, 1.6888], [1.4538, 1.5295]]], 2, 0, Cro35481), 
LRes67766 = reshape_layer(Cro35481, [2, 2, 1], Res67766), 
LRes48312 = reshape_layer(Res67766, [2, 2, 1, 1], Res48312), 
LMax83253 = maximum_layer([[[[[[0.9551]], [[0.7593]]], [[[0.7704]], [[0.6302]]]]], [[[[[0.3961]], [[0.7442]]], [[[0.9516]], [[0.4468]]]]]], Max83253), 
LMax32336 = maximum_layer([Res48312,Max83253], Max32336), 
LRes38085 = reshape_layer(Max32336, [2, 2, 1], Res38085), 
LCro28581 = cropping2D_layer(Res38085, 0, 0, 1, 0, Cro28581), 
LZer98432 = zero_padding2D_layer(Cro28581, 0, 0, 2, 0, Zer98432), 
LCon23329 = concatenate_layer([Zer98432,[[[[0.1828], [0.2243], [0.3695]], [[0.2894], [0.2157], [0.874]]]]], 3, Con23329), 
LAdd20046 = add_layer([Zer83868,Con23329], Add20046), 
exec_layers([LAve5584,LZer83868,LCro35481,LRes67766,LRes48312,LMax83253,LMax32336,LRes38085,LCro28581,LZer98432,LCon23329,LAdd20046],["Ave5584","Zer83868","Cro35481","Res67766","Res48312","Max83253","Max32336","Res38085","Cro28581","Zer98432","Con23329","Add20046"],Add20046,"Add20046")

Actual (Unparsed): [[[[0.0000000, 0.1828000], [0.0000000, 0.2243000], [1.6888000, 0.3695000]], [[0.0000000, 0.2894000], [0.6123000, 0.7024500], [1.6271500, 1.6571000]]]]

Expected (Unparsed): [[[[0,0.1828],[0,0.2243],[1.6888,0.3695]],[[0,0.2894],[0.6123,0.70245],[1.62715,1.6570999999999998]]]]

Actual:   [[[[0, 0.1828], [0, 0.2243], [1.6888, 0.3695]], [[0, 0.2894], [0.6123, 0.7025], [1.6272, 1.6571]]]]

Expected: [[[[0, 0.1828], [0, 0.2243], [1.6888, 0.3695]], [[0, 0.2894], [0.6123, 0.7025], [1.6272, 1.6571]]]]