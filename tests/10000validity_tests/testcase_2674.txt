import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Sub65615 = tf.keras.layers.Input(shape=([2, 3, 2, 3]))
in1Sub65615 = tf.keras.layers.Input(shape=([2, 3, 2, 3]))
in0Min97410 = tf.keras.layers.Input(shape=([1, 1]))
in1Min97410 = tf.keras.layers.Input(shape=([1, 1]))
in0Con25780 = tf.keras.layers.Input(shape=([1, 35]))
in0Zer99797 = tf.keras.layers.Input(shape=([3, 2, 1, 3]))
in0Con81344 = tf.keras.layers.Input(shape=([2, 13]))
in0Min51486 = tf.keras.layers.Input(shape=([2, 2, 1, 1]))
in1Min51486 = tf.keras.layers.Input(shape=([2, 2, 1, 1]))

Sub65615 = keras.layers.Subtract(name = 'Sub65615', )([in0Sub65615,in1Sub65615])
Res62682 = keras.layers.Reshape((2, 3, 6), name = 'Res62682', )(Sub65615)
Res54536 = keras.layers.Reshape((2, 18), name = 'Res54536', )(Res62682)
Min97410 = keras.layers.Minimum(name = 'Min97410', )([in0Min97410,in1Min97410])
Con25780 = keras.layers.Concatenate(axis=2, name = 'Con25780', )([Min97410,in0Con25780])
Zer99797 = keras.layers.ZeroPadding3D(padding=((1, 1), (1, 1), (1, 1)), name = 'Zer99797', )(in0Zer99797)
Res61693 = keras.layers.Reshape((5, 4, 9), name = 'Res61693', )(Zer99797)
Res90753 = keras.layers.Reshape((5, 36), name = 'Res90753', )(Res61693)
Dot9245 = keras.layers.Dot(axes=(2, 2), name = 'Dot9245', )([Con25780,Res90753])
Zer15485 = keras.layers.ZeroPadding1D(padding=((1, 0)), name = 'Zer15485', )(Dot9245)
Con81344 = keras.layers.Concatenate(axis=2, name = 'Con81344', )([Zer15485,in0Con81344])
Min53993 = keras.layers.Minimum(name = 'Min53993', )([Res54536,Con81344])
Res94747 = keras.layers.Reshape((2, 18, 1), name = 'Res94747', )(Min53993)
Res31631 = keras.layers.Reshape((2, 18, 1, 1), name = 'Res31631', )(Res94747)
Min51486 = keras.layers.Minimum(name = 'Min51486', )([in0Min51486,in1Min51486])
Zer41580 = keras.layers.ZeroPadding3D(padding=((0, 0), (16, 0), (0, 0)), name = 'Zer41580', )(Min51486)
Sub77010 = keras.layers.Subtract(name = 'Sub77010', )([Res31631,Zer41580])
model = tf.keras.models.Model(inputs=[in0Sub65615,in1Sub65615,in0Min97410,in1Min97410,in0Con25780,in0Zer99797,in0Con81344,in0Min51486,in1Min51486], outputs=Sub77010)
in0Sub65615 = tf.constant([[[[[0.527, 0.1804, 0.8055], [0.8916, 0.1969, 0.9437]], [[0.8619, 0.6037, 0.6786], [0.7795, 0.8549, 0.2923]], [[0.2105, 0.6205, 0.7446], [0.2183, 0.8812, 0.9341]]], [[[0.1102, 0.6018, 0.6054], [0.7438, 0.5071, 0.5355]], [[0.557, 0.8196, 0.5219], [0.4706, 0.6561, 0.789]], [[0.3354, 0.6808, 0.9174], [0.0782, 0.0172, 0.599]]]]])
in1Sub65615 = tf.constant([[[[[0.3427, 0.6634, 0.3554], [0.8169, 0.5676, 0.5844]], [[0.7525, 0.8383, 0.6574], [0.0542, 0.6098, 0.3869]], [[0.2865, 0.7804, 0.6634], [0.1818, 0.0358, 0.8123]]], [[[0.937, 0.6155, 0.6915], [0.8219, 0.3333, 0.6955]], [[0.2437, 0.2326, 0.3967], [0.9439, 0.7431, 0.0228]], [[0.4503, 0.6888, 0.3017], [0.3462, 0.1369, 0.325]]]]])
in0Min97410 = tf.constant([[[0.2973]]])
in1Min97410 = tf.constant([[[0.3353]]])
in0Con25780 = tf.constant([[[0.3087, 0.4779, 0.2655, 0.6186, 0.76, 0.3096, 0.6161, 0.2171, 0.9303, 0.0431, 0.1254, 0.6487, 0.2242, 0.554, 0.7873, 0.9262, 0.9012, 0.161, 0.0967, 0.3634, 0.9538, 0.9801, 0.2534, 0.7436, 0.9761, 0.0276, 0.8509, 0.9215, 0.914, 0.4268, 0.06, 0.4098, 0.516, 0.4762, 0.7543]]])
in0Zer99797 = tf.constant([[[[[1.3702, 1.6774, 1.2796]], [[1.5862, 1.8466, 1.5531]]], [[[1.1632, 1.8549, 1.5569]], [[1.9373, 1.0435, 1.4421]]], [[[1.1888, 1.0556, 1.3715]], [[1.5891, 1.9195, 1.7027]]]]])
in0Con81344 = tf.constant([[[0.4344, 0.622, 0.8024, 0.9871, 0.5976, 0.0401, 0.0764, 0.108, 0.8594, 0.7031, 0.229, 0.643, 0.2597], [0.7068, 0.5085, 0.7211, 0.8836, 0.0635, 0.7407, 0.9362, 0.756, 0.9643, 0.3549, 0.0341, 0.4881, 0.1576]]])
in0Min51486 = tf.constant([[[[[0.2858]], [[0.9641]]], [[[0.8578]], [[0.8218]]]]])
in1Min51486 = tf.constant([[[[[0.6127]], [[0.9769]]], [[[0.3145]], [[0.3065]]]]])
print (np.array2string(model.predict([in0Sub65615,in1Sub65615,in0Min97410,in1Min97410,in0Con25780,in0Zer99797,in0Con81344,in0Min51486,in1Min51486],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Sub77010.png')

LSub65615 = subtract_layer([[[[[0.527, 0.1804, 0.8055], [0.8916, 0.1969, 0.9437]], [[0.8619, 0.6037, 0.6786], [0.7795, 0.8549, 0.2923]], [[0.2105, 0.6205, 0.7446], [0.2183, 0.8812, 0.9341]]], [[[0.1102, 0.6018, 0.6054], [0.7438, 0.5071, 0.5355]], [[0.557, 0.8196, 0.5219], [0.4706, 0.6561, 0.789]], [[0.3354, 0.6808, 0.9174], [0.0782, 0.0172, 0.599]]]]], [[[[[0.3427, 0.6634, 0.3554], [0.8169, 0.5676, 0.5844]], [[0.7525, 0.8383, 0.6574], [0.0542, 0.6098, 0.3869]], [[0.2865, 0.7804, 0.6634], [0.1818, 0.0358, 0.8123]]], [[[0.937, 0.6155, 0.6915], [0.8219, 0.3333, 0.6955]], [[0.2437, 0.2326, 0.3967], [0.9439, 0.7431, 0.0228]], [[0.4503, 0.6888, 0.3017], [0.3462, 0.1369, 0.325]]]]], Sub65615), 
LRes62682 = reshape_layer(Sub65615, [2, 3, 6], Res62682), 
LRes54536 = reshape_layer(Res62682, [2, 18], Res54536), 
LMin97410 = minimum_layer([[[[0.2973]]], [[[0.3353]]]], Min97410), 
LCon25780 = concatenate_layer([Min97410,[[[0.3087, 0.4779, 0.2655, 0.6186, 0.76, 0.3096, 0.6161, 0.2171, 0.9303, 0.0431, 0.1254, 0.6487, 0.2242, 0.554, 0.7873, 0.9262, 0.9012, 0.161, 0.0967, 0.3634, 0.9538, 0.9801, 0.2534, 0.7436, 0.9761, 0.0276, 0.8509, 0.9215, 0.914, 0.4268, 0.06, 0.4098, 0.516, 0.4762, 0.7543]]]], 2, Con25780), 
LZer99797 = zero_padding3D_layer([[[[[1.3702, 1.6774, 1.2796]], [[1.5862, 1.8466, 1.5531]]], [[[1.1632, 1.8549, 1.5569]], [[1.9373, 1.0435, 1.4421]]], [[[1.1888, 1.0556, 1.3715]], [[1.5891, 1.9195, 1.7027]]]]], 1, 1, 1, 1, 1, 1, Zer99797), 
LRes61693 = reshape_layer(Zer99797, [5, 4, 9], Res61693), 
LRes90753 = reshape_layer(Res61693, [5, 36], Res90753), 
LDot9245 = dot_layer(Con25780,Res90753, 2, 2, Dot9245), 
LZer15485 = zero_padding1D_layer(Dot9245, 1, 0, Zer15485), 
LCon81344 = concatenate_layer([Zer15485,[[[0.4344, 0.622, 0.8024, 0.9871, 0.5976, 0.0401, 0.0764, 0.108, 0.8594, 0.7031, 0.229, 0.643, 0.2597], [0.7068, 0.5085, 0.7211, 0.8836, 0.0635, 0.7407, 0.9362, 0.756, 0.9643, 0.3549, 0.0341, 0.4881, 0.1576]]]], 2, Con81344), 
LMin53993 = minimum_layer([Res54536,Con81344], Min53993), 
LRes94747 = reshape_layer(Min53993, [2, 18, 1], Res94747), 
LRes31631 = reshape_layer(Res94747, [2, 18, 1, 1], Res31631), 
LMin51486 = minimum_layer([[[[[[0.2858]], [[0.9641]]], [[[0.8578]], [[0.8218]]]]], [[[[[0.6127]], [[0.9769]]], [[[0.3145]], [[0.3065]]]]]], Min51486), 
LZer41580 = zero_padding3D_layer(Min51486, 0, 0, 16, 0, 0, 0, Zer41580), 
LSub77010 = subtract_layer(Res31631,Zer41580, Sub77010), 
exec_layers([LSub65615,LRes62682,LRes54536,LMin97410,LCon25780,LZer99797,LRes61693,LRes90753,LDot9245,LZer15485,LCon81344,LMin53993,LRes94747,LRes31631,LMin51486,LZer41580,LSub77010],["Sub65615","Res62682","Res54536","Min97410","Con25780","Zer99797","Res61693","Res90753","Dot9245","Zer15485","Con81344","Min53993","Res94747","Res31631","Min51486","Zer41580","Sub77010"],Sub77010,"Sub77010")

Actual (Unparsed): [[[[[0.0000000]], [[-0.4830000]], [[0.0000000]], [[0.0000000]], [[-0.3707000]], [[0.3593000]], [[0.1094000]], [[-0.2346000]], [[0.0212000]], [[0.5976000]], [[0.0401000]], [[-0.0946000]], [[-0.0760000]], [[-0.1599000]], [[0.0812000]], [[0.0365000]], [[0.3572000]], [[-0.8423001]]], [[[-0.8268000]], [[-0.0136999]], [[-0.0861000]], [[-0.0781000]], [[0.0000000]], [[-0.1600000]], [[0.3133000]], [[0.5870000]], [[0.1252000]], [[-0.4733000]], [[-0.0870000]], [[0.7662000]], [[-0.1149000]], [[-0.0080000]], [[0.3549000]], [[-0.2680000]], [[-0.4342000]], [[-0.1489000]]]]]

Expected (Unparsed): [[[[[0]],[[-0.483]],[[0]],[[0]],[[-0.37070000000000003]],[[0.35929999999999995]],[[0.10940000000000005]],[[-0.23460000000000003]],[[0.021199999999999997]],[[0.5976]],[[0.0401]],[[-0.09460000000000002]],[[-0.07599999999999998]],[[-0.15989999999999993]],[[0.08120000000000005]],[[0.036500000000000005]],[[0.3572]],[[-0.8422999999999999]]],[[[-0.8268000000000001]],[[-0.013700000000000045]],[[-0.08609999999999995]],[[-0.07809999999999995]],[[0.0]],[[-0.16000000000000003]],[[0.3133]],[[0.587]],[[0.12520000000000003]],[[-0.47329999999999994]],[[-0.08699999999999997]],[[0.7662]],[[-0.1149]],[[-0.008000000000000007]],[[0.3549]],[[-0.268]],[[-0.43420000000000003]],[[-0.1489]]]]]

Actual:   [[[[[0]], [[-0.483]], [[0]], [[0]], [[-0.3707]], [[0.3593]], [[0.1094]], [[-0.2346]], [[0.0212]], [[0.5976]], [[0.0401]], [[-0.0946]], [[-0.076]], [[-0.1599]], [[0.0812]], [[0.0365]], [[0.3572]], [[-0.8423]]], [[[-0.8268]], [[-0.0136]], [[-0.0861]], [[-0.0781]], [[0]], [[-0.16]], [[0.3133]], [[0.587]], [[0.1252]], [[-0.4733]], [[-0.087]], [[0.7662]], [[-0.1149]], [[-0.008]], [[0.3549]], [[-0.268]], [[-0.4342]], [[-0.1489]]]]]

Expected: [[[[[0]], [[-0.483]], [[0]], [[0]], [[-0.3707]], [[0.3593]], [[0.1095]], [[-0.2346]], [[0.0212]], [[0.5976]], [[0.0401]], [[-0.0946]], [[-0.0759]], [[-0.1598]], [[0.0813]], [[0.0366]], [[0.3572]], [[-0.8422]]], [[[-0.8268]], [[-0.0137]], [[-0.086]], [[-0.078]], [[0]], [[-0.16]], [[0.3133]], [[0.587]], [[0.1253]], [[-0.4732]], [[-0.0869]], [[0.7662]], [[-0.1149]], [[-0.008]], [[0.3549]], [[-0.268]], [[-0.4342]], [[-0.1489]]]]]