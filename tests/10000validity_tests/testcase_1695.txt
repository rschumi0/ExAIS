import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Thr81343 = tf.keras.layers.Input(shape=([2, 2]))
in0Glo59016 = tf.keras.layers.Input(shape=([2, 1]))
in0Con56195 = tf.keras.layers.Input(shape=([3]))
in0Con79119 = tf.keras.layers.Input(shape=([4, 3, 5, 1]))
in0Cro60733 = tf.keras.layers.Input(shape=([1, 2]))
in0Con72696 = tf.keras.layers.Input(shape=([2, 2, 3, 1]))
in0Sub87470 = tf.keras.layers.Input(shape=([2, 2, 3, 2]))
in1Sub87470 = tf.keras.layers.Input(shape=([2, 2, 3, 2]))

Thr81343 = keras.layers.ThresholdedReLU(theta=1.2109931832144987, name = 'Thr81343', input_shape=(2, 2))(in0Thr81343)
Fla77377 = keras.layers.Flatten(name = 'Fla77377', )(Thr81343)
Glo59016 = keras.layers.GlobalMaxPool1D(name = 'Glo59016', )(in0Glo59016)
Fla66517 = keras.layers.Flatten(name = 'Fla66517', )(Glo59016)
Con56195 = keras.layers.Concatenate(axis=1, name = 'Con56195', )([Fla66517,in0Con56195])
Add16019 = keras.layers.Add(name = 'Add16019', )([Fla77377,Con56195])
Res90215 = keras.layers.Reshape((4, 1), name = 'Res90215', )(Add16019)
Res63173 = keras.layers.Reshape((4, 1, 1), name = 'Res63173', )(Res90215)
Res56008 = keras.layers.Reshape((4, 1, 1, 1), name = 'Res56008', )(Res63173)
Zer90284 = keras.layers.ZeroPadding3D(padding=((0, 0), (2, 0), (4, 0)), name = 'Zer90284', )(Res56008)
Con79119 = keras.layers.Concatenate(axis=4, name = 'Con79119', )([Zer90284,in0Con79119])
Cro60733 = keras.layers.Cropping1D(cropping=((0, 0)), name = 'Cro60733', )(in0Cro60733)
Res12770 = keras.layers.Reshape((1, 2, 1), name = 'Res12770', )(Cro60733)
Res45367 = keras.layers.Reshape((1, 2, 1, 1), name = 'Res45367', )(Res12770)
Zer5164 = keras.layers.ZeroPadding3D(padding=((1, 0), (0, 0), (2, 0)), name = 'Zer5164', )(Res45367)
Con72696 = keras.layers.Concatenate(axis=4, name = 'Con72696', )([Zer5164,in0Con72696])
Sub87470 = keras.layers.Subtract(name = 'Sub87470', )([in0Sub87470,in1Sub87470])
Add94769 = keras.layers.Add(name = 'Add94769', )([Con72696,Sub87470])
Zer52929 = keras.layers.ZeroPadding3D(padding=((2, 0), (1, 0), (2, 0)), name = 'Zer52929', )(Add94769)
Max75306 = keras.layers.Maximum(name = 'Max75306', )([Con79119,Zer52929])
model = tf.keras.models.Model(inputs=[in0Thr81343,in0Glo59016,in0Con56195,in0Con79119,in0Cro60733,in0Con72696,in0Sub87470,in1Sub87470], outputs=Max75306)
in0Thr81343 = tf.constant([[[0.76, 0.673], [0.4848, 0.7122]]])
in0Glo59016 = tf.constant([[[1.734], [1.467]]])
in0Con56195 = tf.constant([[0.288, 0.7547, 0.87]])
in0Con79119 = tf.constant([[[[[0.8336], [0.0068], [0.2527], [0.44], [0.5064]], [[0.5456], [0.2441], [0.055], [0.187], [0.2096]], [[0.2238], [0.936], [0.517], [0.3672], [0.9166]]], [[[0.7523], [0.2777], [0.018], [0.3383], [0.7963]], [[0.0112], [0.6035], [0.412], [0.4023], [0.8532]], [[0.0176], [0.795], [0.704], [0.2986], [0.6227]]], [[[0.5869], [0.5004], [0.5883], [0.3926], [0.8214]], [[0.2177], [0.1589], [0.6627], [0.1671], [0.6932]], [[0.1274], [0.3458], [0.0532], [0.7823], [0.0986]]], [[[0.8907], [0.5214], [0.5988], [0.6745], [0.7057]], [[0.4617], [0.5301], [0.9244], [0.2459], [0.5329]], [[0.0427], [0.7291], [0.4745], [0.9913], [0.6878]]]]])
in0Cro60733 = tf.constant([[[1.3469, 1.7079]]])
in0Con72696 = tf.constant([[[[[0.6939], [0.1289], [0.7816]], [[0.684], [0.4189], [0.6686]]], [[[0.6352], [0.2397], [0.9509]], [[0.7312], [0.3158], [0.2622]]]]])
in0Sub87470 = tf.constant([[[[[0.2816, 0.6703], [0.1265, 0.0941], [0.2262, 0.8861]], [[0.9017, 0.4578], [0.8122, 0.3113], [0.7942, 0.6967]]], [[[0.6909, 0.9951], [0.3056, 0.7173], [0.8685, 0.7768]], [[0.3958, 0.6053], [0.2538, 0.1409], [0.7552, 0.1223]]]]])
in1Sub87470 = tf.constant([[[[[0.953, 0.1503], [0.1202, 0.819], [0.9951, 0.8219]], [[0.4111, 0.273], [0.7481, 0.797], [0.9366, 0.9647]]], [[[0.8834, 0.9208], [0.8986, 0.0831], [0.3841, 0.3978]], [[0.9576, 0.1181], [0.7541, 0.5164], [0.6748, 0.4421]]]]])
print (np.array2string(model.predict([in0Thr81343,in0Glo59016,in0Con56195,in0Con79119,in0Cro60733,in0Con72696,in0Sub87470,in1Sub87470],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Max75306.png')

LThr81343 = thresholded_relu_layer([[[0.76, 0.673], [0.4848, 0.7122]]], 1.2109931832144987, Thr81343), 
LFla77377 = flatten_layer(Thr81343, Fla77377), 
LGlo59016 = global_max_pool1D_layer([[[1.734], [1.467]]], Glo59016), 
LFla66517 = flatten_layer(Glo59016, Fla66517), 
LCon56195 = concatenate_layer([Fla66517,[[0.288, 0.7547, 0.87]]], 1, Con56195), 
LAdd16019 = add_layer([Fla77377,Con56195], Add16019), 
LRes90215 = reshape_layer(Add16019, [4, 1], Res90215), 
LRes63173 = reshape_layer(Res90215, [4, 1, 1], Res63173), 
LRes56008 = reshape_layer(Res63173, [4, 1, 1, 1], Res56008), 
LZer90284 = zero_padding3D_layer(Res56008, 0, 0, 2, 0, 4, 0, Zer90284), 
LCon79119 = concatenate_layer([Zer90284,[[[[[0.8336], [0.0068], [0.2527], [0.44], [0.5064]], [[0.5456], [0.2441], [0.055], [0.187], [0.2096]], [[0.2238], [0.936], [0.517], [0.3672], [0.9166]]], [[[0.7523], [0.2777], [0.018], [0.3383], [0.7963]], [[0.0112], [0.6035], [0.412], [0.4023], [0.8532]], [[0.0176], [0.795], [0.704], [0.2986], [0.6227]]], [[[0.5869], [0.5004], [0.5883], [0.3926], [0.8214]], [[0.2177], [0.1589], [0.6627], [0.1671], [0.6932]], [[0.1274], [0.3458], [0.0532], [0.7823], [0.0986]]], [[[0.8907], [0.5214], [0.5988], [0.6745], [0.7057]], [[0.4617], [0.5301], [0.9244], [0.2459], [0.5329]], [[0.0427], [0.7291], [0.4745], [0.9913], [0.6878]]]]]], 4, Con79119), 
LCro60733 = cropping1D_layer([[[1.3469, 1.7079]]], 0, 0, Cro60733), 
LRes12770 = reshape_layer(Cro60733, [1, 2, 1], Res12770), 
LRes45367 = reshape_layer(Res12770, [1, 2, 1, 1], Res45367), 
LZer5164 = zero_padding3D_layer(Res45367, 1, 0, 0, 0, 2, 0, Zer5164), 
LCon72696 = concatenate_layer([Zer5164,[[[[[0.6939], [0.1289], [0.7816]], [[0.684], [0.4189], [0.6686]]], [[[0.6352], [0.2397], [0.9509]], [[0.7312], [0.3158], [0.2622]]]]]], 4, Con72696), 
LSub87470 = subtract_layer([[[[[0.2816, 0.6703], [0.1265, 0.0941], [0.2262, 0.8861]], [[0.9017, 0.4578], [0.8122, 0.3113], [0.7942, 0.6967]]], [[[0.6909, 0.9951], [0.3056, 0.7173], [0.8685, 0.7768]], [[0.3958, 0.6053], [0.2538, 0.1409], [0.7552, 0.1223]]]]], [[[[[0.953, 0.1503], [0.1202, 0.819], [0.9951, 0.8219]], [[0.4111, 0.273], [0.7481, 0.797], [0.9366, 0.9647]]], [[[0.8834, 0.9208], [0.8986, 0.0831], [0.3841, 0.3978]], [[0.9576, 0.1181], [0.7541, 0.5164], [0.6748, 0.4421]]]]], Sub87470), 
LAdd94769 = add_layer([Con72696,Sub87470], Add94769), 
LZer52929 = zero_padding3D_layer(Add94769, 2, 0, 1, 0, 2, 0, Zer52929), 
LMax75306 = maximum_layer([Con79119,Zer52929], Max75306), 
exec_layers([LThr81343,LFla77377,LGlo59016,LFla66517,LCon56195,LAdd16019,LRes90215,LRes63173,LRes56008,LZer90284,LCon79119,LCro60733,LRes12770,LRes45367,LZer5164,LCon72696,LSub87470,LAdd94769,LZer52929,LMax75306],["Thr81343","Fla77377","Glo59016","Fla66517","Con56195","Add16019","Res90215","Res63173","Res56008","Zer90284","Con79119","Cro60733","Res12770","Res45367","Zer5164","Con72696","Sub87470","Add94769","Zer52929","Max75306"],Max75306,"Max75306")

Actual (Unparsed): [[[[[0.0000000, 0.8336000], [0.0000000, 0.0068000], [0.0000000, 0.2527000], [0.0000000, 0.4400000], [0.0000000, 0.5064000]], [[0.0000000, 0.5456000], [0.0000000, 0.2441000], [0.0000000, 0.0550000], [0.0000000, 0.1870000], [0.0000000, 0.2096000]], [[0.0000000, 0.2238000], [0.0000000, 0.9360000], [0.0000000, 0.5170000], [0.0000000, 0.3672000], [1.7340000, 0.9166000]]], [[[0.0000000, 0.7523000], [0.0000000, 0.2777000], [0.0000000, 0.0180000], [0.0000000, 0.3383000], [0.0000000, 0.7963000]], [[0.0000000, 0.0112000], [0.0000000, 0.6035000], [0.0000000, 0.4120000], [0.0000000, 0.4023000], [0.0000000, 0.8532000]], [[0.0000000, 0.0176000], [0.0000000, 0.7950000], [0.0000000, 0.7040000], [0.0000000, 0.2986000], [0.2880000, 0.6227000]]], [[[0.0000000, 0.5869000], [0.0000000, 0.5004000], [0.0000000, 0.5883000], [0.0000000, 0.3926000], [0.0000000, 0.8214000]], [[0.0000000, 0.2177000], [0.0000000, 0.1589000], [0.0000000, 1.2139000], [0.0063000, 0.1671000], [0.0000000, 0.8458000]], [[0.0000000, 0.1274000], [0.0000000, 0.3458000], [0.4906000, 0.8688000], [0.0641000, 0.7823000], [0.7547000, 0.4006000]]], [[[0.0000000, 0.8907000], [0.0000000, 0.5214000], [0.0000000, 0.5988000], [0.0000000, 0.6745000], [0.0000000, 0.7057000]], [[0.0000000, 0.4617000], [0.0000000, 0.5301000], [0.0000000, 0.9244000], [0.0000000, 0.8739000], [1.8313000, 1.3299000]], [[0.0000000, 0.0427000], [0.0000000, 0.7291000], [0.0000000, 1.2184000], [0.0000000, 0.9913000], [1.7883001, 0.6878000]]]]]

Expected (Unparsed): [[[[[0,0.8336],[0,0.0068],[0,0.2527],[0,0.44],[0,0.5064]],[[0,0.5456],[0,0.2441],[0,0.055],[0,0.187],[0,0.2096]],[[0,0.2238],[0,0.936],[0,0.517],[0,0.3672],[1.734,0.9166]]],[[[0,0.7523],[0,0.2777],[0,0.018],[0,0.3383],[0,0.7963]],[[0,0.0112],[0,0.6035],[0,0.412],[0,0.4023],[0,0.8532]],[[0,0.0176],[0,0.795],[0,0.704],[0,0.2986],[0.288,0.6227]]],[[[0,0.5869],[0,0.5004],[0,0.5883],[0,0.3926],[0,0.8214]],[[0,0.2177],[0,0.1589],[0,1.2139],[0.0063,0.1671],[0,0.8458]],[[0,0.1274],[0,0.3458],[0.4905999999999999,0.8688],[0.06410000000000005,0.7823],[0.7547,0.40059999999999996]]],[[[0,0.8907],[0,0.5214],[0,0.5988],[0,0.6745],[0,0.7057]],[[0,0.4617],[0,0.5301],[0,0.9244],[0,0.8739000000000001],[1.8313000000000001,1.3299]],[[0,0.0427],[0,0.7291],[0,1.2184],[0,0.9913],[1.7883,0.6878]]]]]

Actual:   [[[[[0, 0.8336], [0, 0.0068], [0, 0.2527], [0, 0.44], [0, 0.5064]], [[0, 0.5456], [0, 0.2441], [0, 0.055], [0, 0.187], [0, 0.2096]], [[0, 0.2238], [0, 0.936], [0, 0.517], [0, 0.3672], [1.734, 0.9166]]], [[[0, 0.7523], [0, 0.2777], [0, 0.018], [0, 0.3383], [0, 0.7963]], [[0, 0.0112], [0, 0.6035], [0, 0.412], [0, 0.4023], [0, 0.8532]], [[0, 0.0176], [0, 0.795], [0, 0.704], [0, 0.2986], [0.288, 0.6227]]], [[[0, 0.5869], [0, 0.5004], [0, 0.5883], [0, 0.3926], [0, 0.8214]], [[0, 0.2177], [0, 0.1589], [0, 1.2139], [0.0063, 0.1671], [0, 0.8458]], [[0, 0.1274], [0, 0.3458], [0.4906, 0.8688], [0.0641, 0.7823], [0.7547, 0.4006]]], [[[0, 0.8907], [0, 0.5214], [0, 0.5988], [0, 0.6745], [0, 0.7057]], [[0, 0.4617], [0, 0.5301], [0, 0.9244], [0, 0.8739], [1.8313, 1.3299]], [[0, 0.0427], [0, 0.7291], [0, 1.2184], [0, 0.9913], [1.7884, 0.6878]]]]]

Expected: [[[[[0, 0.8336], [0, 0.0068], [0, 0.2527], [0, 0.44], [0, 0.5064]], [[0, 0.5456], [0, 0.2441], [0, 0.055], [0, 0.187], [0, 0.2096]], [[0, 0.2238], [0, 0.936], [0, 0.517], [0, 0.3672], [1.734, 0.9166]]], [[[0, 0.7523], [0, 0.2777], [0, 0.018], [0, 0.3383], [0, 0.7963]], [[0, 0.0112], [0, 0.6035], [0, 0.412], [0, 0.4023], [0, 0.8532]], [[0, 0.0176], [0, 0.795], [0, 0.704], [0, 0.2986], [0.288, 0.6227]]], [[[0, 0.5869], [0, 0.5004], [0, 0.5883], [0, 0.3926], [0, 0.8214]], [[0, 0.2177], [0, 0.1589], [0, 1.2139], [0.0063, 0.1671], [0, 0.8458]], [[0, 0.1274], [0, 0.3458], [0.4906, 0.8688], [0.0642, 0.7823], [0.7547, 0.4006]]], [[[0, 0.8907], [0, 0.5214], [0, 0.5988], [0, 0.6745], [0, 0.7057]], [[0, 0.4617], [0, 0.5301], [0, 0.9244], [0, 0.874], [1.8314, 1.3299]], [[0, 0.0427], [0, 0.7291], [0, 1.2184], [0, 0.9913], [1.7883, 0.6878]]]]]