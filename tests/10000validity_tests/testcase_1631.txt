import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Zer18283 = tf.keras.layers.Input(shape=([3, 3, 1, 4]))
in0Min73550 = tf.keras.layers.Input(shape=([2, 2]))
in1Min73550 = tf.keras.layers.Input(shape=([2, 2]))
in0Add87330 = tf.keras.layers.Input(shape=([1, 1]))
in1Add87330 = tf.keras.layers.Input(shape=([1, 1]))
in0Con14401 = tf.keras.layers.Input(shape=([2, 1]))
in0PRe58390 = tf.keras.layers.Input(shape=([1, 1, 1]))

Zer18283 = keras.layers.ZeroPadding3D(padding=((1, 1), (1, 1), (1, 1)), name = 'Zer18283', )(in0Zer18283)
Res61040 = keras.layers.Reshape((5, 5, 12), name = 'Res61040', )(Zer18283)
PRe92608 = keras.layers.PReLU(name = 'PRe92608', )(Res61040)
Res80689 = keras.layers.Reshape((5, 60), name = 'Res80689', )(PRe92608)
Sim35479 = keras.layers.SimpleRNN(3,name = 'Sim35479', )(Res80689)
Res44809 = keras.layers.Reshape((3, 1), name = 'Res44809', )(Sim35479)
Res88005 = keras.layers.Reshape((3, 1, 1), name = 'Res88005', )(Res44809)
Zer85729 = keras.layers.ZeroPadding2D(padding=((0, 0), (2, 0)), name = 'Zer85729', )(Res88005)
Min73550 = keras.layers.Minimum(name = 'Min73550', )([in0Min73550,in1Min73550])
Add87330 = keras.layers.Add(name = 'Add87330', )([in0Add87330,in1Add87330])
Zer58177 = keras.layers.ZeroPadding1D(padding=((1, 0)), name = 'Zer58177', )(Add87330)
Con14401 = keras.layers.Concatenate(axis=2, name = 'Con14401', )([Zer58177,in0Con14401])
Ave59654 = keras.layers.Average(name = 'Ave59654', )([Min73550,Con14401])
Res95450 = keras.layers.Reshape((2, 2, 1), name = 'Res95450', )(Ave59654)
PRe58390 = keras.layers.PReLU(name = 'PRe58390', input_shape=(1, 1, 1))(in0PRe58390)
Zer68295 = keras.layers.ZeroPadding2D(padding=((1, 0), (1, 0)), name = 'Zer68295', )(PRe58390)
Add78082 = keras.layers.Add(name = 'Add78082', )([Res95450,Zer68295])
Zer56263 = keras.layers.ZeroPadding2D(padding=((1, 0), (1, 0)), name = 'Zer56263', )(Add78082)
Max47029 = keras.layers.Maximum(name = 'Max47029', )([Zer85729,Zer56263])
model = tf.keras.models.Model(inputs=[in0Zer18283,in0Min73550,in1Min73550,in0Add87330,in1Add87330,in0Con14401,in0PRe58390], outputs=Max47029)
w = model.get_layer('PRe92608').get_weights() 
w[0] = np.array([[[0.7179, 0.8739, 0.087, 0.1193, 0.2845, 0.709, 0.2379, 0.5997, 0.3421, 0.254, 0.2552, 0.2047], [0.037, 0.7132, 0.6823, 0.3836, 0.1433, 0.0905, 0.993, 0.7311, 0.1694, 0.47, 0.0356, 0.8412], [0.9136, 0.3142, 0.4958, 0.4081, 0.1144, 0.8153, 0.8716, 0.1212, 0.5174, 0.8917, 0.7112, 0.1598], [0.7646, 0.6415, 0.0265, 0.5147, 0.999, 0.9334, 0.8595, 0.9375, 0.9771, 0.3451, 0.9559, 0.051], [0.7779, 0.8451, 0.3764, 0.0404, 0.9107, 0.4514, 0.6657, 0.3916, 0.7337, 0.6023, 0.8898, 0.3384]], [[0.6201, 0.1222, 0.4508, 0.043, 0.23, 0.4808, 0.0942, 0.0412, 0.5854, 0.5046, 0.9337, 0.1564], [0.3795, 0.8253, 0.6368, 0.9095, 0.1004, 0.1271, 0.1383, 0.4352, 0.0999, 0.6875, 0.3768, 0.0508], [0.6962, 0.8008, 0.5889, 0.9192, 0.7626, 0.4165, 0.6335, 0.6967, 0.0273, 0.7318, 0.6725, 0.6647], [0.4833, 0.5333, 0.2845, 0.6039, 0.8928, 0.803, 0.7518, 0.5913, 0.3571, 0.4711, 0.8284, 0.9752], [0.3222, 0.2311, 0.768, 0.0127, 0.1878, 0.0135, 0.7749, 0.0445, 0.8989, 0.057, 0.3217, 0.624]], [[0.512, 0.5134, 0.9756, 0.7195, 0.7477, 0.1752, 0.4693, 0.9622, 0.97, 0.2234, 0.759, 0.9283], [0.8638, 0.8613, 0.7247, 0.6111, 0.3231, 0.3203, 0.9823, 0.5626, 0.7062, 0.0021, 0.0029, 0.6698], [0.6679, 0.4568, 0.3643, 0.1632, 0.2337, 0.4879, 0.4948, 0.254, 0.65, 0.9201, 0.7122, 0.7425], [0.8084, 0.4717, 0.7115, 0.05, 0.7262, 0.7313, 0.9049, 0.3871, 0.6417, 0.4541, 0.1857, 0.1907], [0.7766, 0.2675, 0.7474, 0.5374, 0.7108, 0.4002, 0.5697, 0.9733, 0.6179, 0.2377, 0.0585, 0.0856]], [[0.3182, 0.3449, 0.116, 0.1879, 0.2172, 0.0948, 0.6059, 0.6897, 0.7234, 0.1955, 0.7823, 0.0773], [0.6594, 0.2169, 0.7509, 0.9464, 0.5202, 0.686, 0.4452, 0.1962, 0.1662, 0.4379, 0.9172, 0.3172], [0.6864, 0.6931, 0.9644, 0.6911, 0.7201, 0.7615, 0.2468, 0.9534, 0.481, 0.368, 0.0828, 0.7686], [0.0926, 0.3389, 0.0546, 0.8134, 0.6164, 0.7933, 0.4032, 0.3732, 0.3273, 0.0434, 0.9484, 0.7178], [0.3783, 0.1211, 0.9284, 0.3427, 0.9799, 0.2238, 0.7239, 0.2358, 0.6226, 0.3986, 0.9026, 0.5624]], [[0.6647, 0.4675, 0.4007, 0.5484, 0.8224, 0.5405, 0.9448, 0.8856, 0.709, 0.457, 0.0105, 0.6825], [0.5922, 0.1521, 0.7091, 0.8422, 0.966, 0.2507, 0.0034, 0.76, 0.3645, 0.163, 0.5627, 0.4026], [0.0868, 0.5704, 0.3821, 0.1573, 0.1452, 0.4768, 0.0197, 0.3185, 0.8029, 0.9273, 0.9308, 0.7194], [0.5232, 0.0939, 0.9171, 0.8087, 0.019, 0.6691, 0.1494, 0.4226, 0.3593, 0.4157, 0.5731, 0.6101], [0.7678, 0.2794, 0.7577, 0.1308, 0.8319, 0.685, 0.4161, 0.6636, 0.3273, 0.5123, 0.8831, 0.3408]]])
model.get_layer('PRe92608').set_weights(w) 
w = model.get_layer('Sim35479').get_weights() 
w[0] = np.array([[2, 4, 1], [9, 8, 1], [10, 3, 5], [2, 9, 9], [5, 10, 10], [5, 8, 9], [10, 5, 3], [2, 7, 5], [8, 8, 6], [9, 5, 6], [9, 10, 3], [8, 5, 10], [9, 6, 1], [8, 8, 2], [3, 3, 9], [4, 2, 9], [8, 8, 1], [1, 3, 3], [3, 3, 8], [8, 6, 6], [5, 10, 4], [5, 10, 4], [5, 3, 7], [4, 5, 9], [2, 5, 8], [6, 7, 1], [3, 4, 5], [4, 7, 7], [10, 1, 9], [6, 10, 8], [7, 4, 6], [5, 8, 2], [10, 9, 5], [9, 9, 6], [5, 3, 7], [1, 9, 10], [3, 9, 4], [4, 4, 3], [6, 9, 9], [9, 2, 2], [6, 3, 6], [6, 1, 4], [9, 7, 9], [9, 2, 5], [4, 9, 2], [3, 2, 2], [1, 10, 3], [9, 6, 10], [1, 10, 8], [2, 4, 6], [7, 9, 7], [4, 7, 5], [3, 10, 9], [2, 3, 10], [2, 8, 7], [9, 5, 9], [5, 9, 4], [10, 5, 5], [5, 2, 3], [8, 7, 1]])
w[1] = np.array([[7, 5, 3], [10, 8, 7], [4, 2, 4]])
w[2] = np.array([9, 9, 2])
model.get_layer('Sim35479').set_weights(w) 
w = model.get_layer('PRe58390').get_weights() 
w[0] = np.array([[[0.0509]]])
model.get_layer('PRe58390').set_weights(w) 
in0Zer18283 = tf.constant([[[[[1.8497, 1.4704, 1.6919, 1.1091]], [[1.1308, 1.0755, 1.434, 1.3189]], [[1.3337, 1.8635, 1.0911, 1.4254]]], [[[1.7368, 1.1973, 1.754, 1.7686]], [[1.8983, 1.5467, 1.2406, 1.3441]], [[1.3703, 1.5176, 1.3465, 1.6428]]], [[[1.8397, 1.8619, 1.7116, 1.8684]], [[1.3453, 1.8157, 1.5152, 1.0395]], [[1.6974, 1.346, 1.0121, 1.1671]]]]])
in0Min73550 = tf.constant([[[0.6024, 0.2737], [0.1327, 0.0412]]])
in1Min73550 = tf.constant([[[0.2836, 0.7829], [0.9814, 0.155]]])
in0Add87330 = tf.constant([[[0.5817]]])
in1Add87330 = tf.constant([[[0.5296]]])
in0Con14401 = tf.constant([[[0.8557], [0.613]]])
in0PRe58390 = tf.constant([[[[0.0916]]]])
print (np.array2string(model.predict([in0Zer18283,in0Min73550,in1Min73550,in0Add87330,in1Add87330,in0Con14401,in0PRe58390],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Max47029.png')

LZer18283 = zero_padding3D_layer([[[[[1.8497, 1.4704, 1.6919, 1.1091]], [[1.1308, 1.0755, 1.434, 1.3189]], [[1.3337, 1.8635, 1.0911, 1.4254]]], [[[1.7368, 1.1973, 1.754, 1.7686]], [[1.8983, 1.5467, 1.2406, 1.3441]], [[1.3703, 1.5176, 1.3465, 1.6428]]], [[[1.8397, 1.8619, 1.7116, 1.8684]], [[1.3453, 1.8157, 1.5152, 1.0395]], [[1.6974, 1.346, 1.0121, 1.1671]]]]], 1, 1, 1, 1, 1, 1, Zer18283), 
LRes61040 = reshape_layer(Zer18283, [5, 5, 12], Res61040), 
LPRe92608 = prelu_layer(Res61040, [[[0.7179, 0.8739, 0.087, 0.1193, 0.2845, 0.709, 0.2379, 0.5997, 0.3421, 0.254, 0.2552, 0.2047], [0.037, 0.7132, 0.6823, 0.3836, 0.1433, 0.0905, 0.993, 0.7311, 0.1694, 0.47, 0.0356, 0.8412], [0.9136, 0.3142, 0.4958, 0.4081, 0.1144, 0.8153, 0.8716, 0.1212, 0.5174, 0.8917, 0.7112, 0.1598], [0.7646, 0.6415, 0.0265, 0.5147, 0.999, 0.9334, 0.8595, 0.9375, 0.9771, 0.3451, 0.9559, 0.051], [0.7779, 0.8451, 0.3764, 0.0404, 0.9107, 0.4514, 0.6657, 0.3916, 0.7337, 0.6023, 0.8898, 0.3384]], [[0.6201, 0.1222, 0.4508, 0.043, 0.23, 0.4808, 0.0942, 0.0412, 0.5854, 0.5046, 0.9337, 0.1564], [0.3795, 0.8253, 0.6368, 0.9095, 0.1004, 0.1271, 0.1383, 0.4352, 0.0999, 0.6875, 0.3768, 0.0508], [0.6962, 0.8008, 0.5889, 0.9192, 0.7626, 0.4165, 0.6335, 0.6967, 0.0273, 0.7318, 0.6725, 0.6647], [0.4833, 0.5333, 0.2845, 0.6039, 0.8928, 0.803, 0.7518, 0.5913, 0.3571, 0.4711, 0.8284, 0.9752], [0.3222, 0.2311, 0.768, 0.0127, 0.1878, 0.0135, 0.7749, 0.0445, 0.8989, 0.057, 0.3217, 0.624]], [[0.512, 0.5134, 0.9756, 0.7195, 0.7477, 0.1752, 0.4693, 0.9622, 0.97, 0.2234, 0.759, 0.9283], [0.8638, 0.8613, 0.7247, 0.6111, 0.3231, 0.3203, 0.9823, 0.5626, 0.7062, 0.0021, 0.0029, 0.6698], [0.6679, 0.4568, 0.3643, 0.1632, 0.2337, 0.4879, 0.4948, 0.254, 0.65, 0.9201, 0.7122, 0.7425], [0.8084, 0.4717, 0.7115, 0.05, 0.7262, 0.7313, 0.9049, 0.3871, 0.6417, 0.4541, 0.1857, 0.1907], [0.7766, 0.2675, 0.7474, 0.5374, 0.7108, 0.4002, 0.5697, 0.9733, 0.6179, 0.2377, 0.0585, 0.0856]], [[0.3182, 0.3449, 0.116, 0.1879, 0.2172, 0.0948, 0.6059, 0.6897, 0.7234, 0.1955, 0.7823, 0.0773], [0.6594, 0.2169, 0.7509, 0.9464, 0.5202, 0.686, 0.4452, 0.1962, 0.1662, 0.4379, 0.9172, 0.3172], [0.6864, 0.6931, 0.9644, 0.6911, 0.7201, 0.7615, 0.2468, 0.9534, 0.481, 0.368, 0.0828, 0.7686], [0.0926, 0.3389, 0.0546, 0.8134, 0.6164, 0.7933, 0.4032, 0.3732, 0.3273, 0.0434, 0.9484, 0.7178], [0.3783, 0.1211, 0.9284, 0.3427, 0.9799, 0.2238, 0.7239, 0.2358, 0.6226, 0.3986, 0.9026, 0.5624]], [[0.6647, 0.4675, 0.4007, 0.5484, 0.8224, 0.5405, 0.9448, 0.8856, 0.709, 0.457, 0.0105, 0.6825], [0.5922, 0.1521, 0.7091, 0.8422, 0.966, 0.2507, 0.0034, 0.76, 0.3645, 0.163, 0.5627, 0.4026], [0.0868, 0.5704, 0.3821, 0.1573, 0.1452, 0.4768, 0.0197, 0.3185, 0.8029, 0.9273, 0.9308, 0.7194], [0.5232, 0.0939, 0.9171, 0.8087, 0.019, 0.6691, 0.1494, 0.4226, 0.3593, 0.4157, 0.5731, 0.6101], [0.7678, 0.2794, 0.7577, 0.1308, 0.8319, 0.685, 0.4161, 0.6636, 0.3273, 0.5123, 0.8831, 0.3408]]], PRe92608), 
LRes80689 = reshape_layer(PRe92608, [5, 60], Res80689), 
LSim35479 = simple_rnn_layer(Res80689,[[2, 4, 1], [9, 8, 1], [10, 3, 5], [2, 9, 9], [5, 10, 10], [5, 8, 9], [10, 5, 3], [2, 7, 5], [8, 8, 6], [9, 5, 6], [9, 10, 3], [8, 5, 10], [9, 6, 1], [8, 8, 2], [3, 3, 9], [4, 2, 9], [8, 8, 1], [1, 3, 3], [3, 3, 8], [8, 6, 6], [5, 10, 4], [5, 10, 4], [5, 3, 7], [4, 5, 9], [2, 5, 8], [6, 7, 1], [3, 4, 5], [4, 7, 7], [10, 1, 9], [6, 10, 8], [7, 4, 6], [5, 8, 2], [10, 9, 5], [9, 9, 6], [5, 3, 7], [1, 9, 10], [3, 9, 4], [4, 4, 3], [6, 9, 9], [9, 2, 2], [6, 3, 6], [6, 1, 4], [9, 7, 9], [9, 2, 5], [4, 9, 2], [3, 2, 2], [1, 10, 3], [9, 6, 10], [1, 10, 8], [2, 4, 6], [7, 9, 7], [4, 7, 5], [3, 10, 9], [2, 3, 10], [2, 8, 7], [9, 5, 9], [5, 9, 4], [10, 5, 5], [5, 2, 3], [8, 7, 1]],[[7, 5, 3], [10, 8, 7], [4, 2, 4]],[9, 9, 2], Sim35479), 
LRes44809 = reshape_layer(Sim35479, [3, 1], Res44809), 
LRes88005 = reshape_layer(Res44809, [3, 1, 1], Res88005), 
LZer85729 = zero_padding2D_layer(Res88005, 0, 0, 2, 0, Zer85729), 
LMin73550 = minimum_layer([[[[0.6024, 0.2737], [0.1327, 0.0412]]], [[[0.2836, 0.7829], [0.9814, 0.155]]]], Min73550), 
LAdd87330 = add_layer([[[[0.5817]]], [[[0.5296]]]], Add87330), 
LZer58177 = zero_padding1D_layer(Add87330, 1, 0, Zer58177), 
LCon14401 = concatenate_layer([Zer58177,[[[0.8557], [0.613]]]], 2, Con14401), 
LAve59654 = average_layer([Min73550,Con14401], Ave59654), 
LRes95450 = reshape_layer(Ave59654, [2, 2, 1], Res95450), 
LPRe58390 = prelu_layer([[[[0.0916]]]], [[[0.0509]]], PRe58390), 
LZer68295 = zero_padding2D_layer(PRe58390, 1, 0, 1, 0, Zer68295), 
LAdd78082 = add_layer([Res95450,Zer68295], Add78082), 
LZer56263 = zero_padding2D_layer(Add78082, 1, 0, 1, 0, Zer56263), 
LMax47029 = maximum_layer([Zer85729,Zer56263], Max47029), 
exec_layers([LZer18283,LRes61040,LPRe92608,LRes80689,LSim35479,LRes44809,LRes88005,LZer85729,LMin73550,LAdd87330,LZer58177,LCon14401,LAve59654,LRes95450,LPRe58390,LZer68295,LAdd78082,LZer56263,LMax47029],["Zer18283","Res61040","PRe92608","Res80689","Sim35479","Res44809","Res88005","Zer85729","Min73550","Add87330","Zer58177","Con14401","Ave59654","Res95450","PRe58390","Zer68295","Add78082","Zer56263","Max47029"],Max47029,"Max47029")

Actual (Unparsed): [[[[0.0000000], [0.0000000], [1.0000000]], [[0.0000000], [0.1418000], [1.0000000]], [[0.0000000], [0.6220000], [1.0000000]]]]

Expected (Unparsed): [[[[0],[0],[1.0]],[[0],[0.1418],[1.0]],[[0],[0.622],[0.9999999999999747]]]]

Actual:   [[[[0], [0], [1]], [[0], [0.1418], [1]], [[0], [0.622], [1]]]]

Expected: [[[[0], [0], [1]], [[0], [0.1418], [1]], [[0], [0.622], [1]]]]