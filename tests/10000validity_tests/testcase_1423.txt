import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Loc46826 = tf.keras.layers.Input(shape=([2, 1, 2]))
in0Cro25790 = tf.keras.layers.Input(shape=([2, 4, 3, 4]))
in0Con88083 = tf.keras.layers.Input(shape=([3, 3, 2]))
in0Con80910 = tf.keras.layers.Input(shape=([1, 2, 1]))

Loc46826 = keras.layers.LocallyConnected2D(2, (1, 1),strides=(1, 1), name = 'Loc46826', )(in0Loc46826)
Zer88585 = keras.layers.ZeroPadding2D(padding=((1, 0), (2, 0)), name = 'Zer88585', )(Loc46826)
Cro25790 = keras.layers.Cropping3D(cropping=((1, 0), (2, 1), (2, 0)), name = 'Cro25790', )(in0Cro25790)
Res57237 = keras.layers.Reshape((1, 1, 4), name = 'Res57237', )(Cro25790)
Con35955 = keras.layers.Conv2D(2, (1, 1),strides=(1, 5), padding='same', dilation_rate=(1, 1), name = 'Con35955', )(Res57237)
Zer42829 = keras.layers.ZeroPadding2D(padding=((1, 1), (1, 1)), name = 'Zer42829', )(Con35955)
Add97359 = keras.layers.Add(name = 'Add97359', )([Zer88585,Zer42829])
Con88083 = keras.layers.Concatenate(axis=3, name = 'Con88083', )([Add97359,in0Con88083])
Con80910 = keras.layers.Conv2DTranspose(4, (1, 1),strides=(1, 1), padding='same', name = 'Con80910', )(in0Con80910)
Mas68124 = keras.layers.Masking(mask_value=1, name = 'Mas68124', )(Con80910)
Zer5526 = keras.layers.ZeroPadding2D(padding=((2, 0), (1, 0)), name = 'Zer5526', )(Mas68124)
Max10883 = keras.layers.Maximum(name = 'Max10883', )([Con88083,Zer5526])
model = tf.keras.models.Model(inputs=[in0Loc46826,in0Cro25790,in0Con88083,in0Con80910], outputs=Max10883)
w = model.get_layer('Loc46826').get_weights() 
w[0] = np.array([[[0.2663, 0.9704], [0.9937, 0.723]], [[0.7453, 0.7161], [0.6056, 0.1541]]])
w[1] = np.array([[[0, 0]], [[0, 0]]])
model.get_layer('Loc46826').set_weights(w) 
w = model.get_layer('Con35955').get_weights() 
w[0] = np.array([[[[0.733, 0.3788], [0.3874, 0.0519], [0.3192, 0.139], [0.7712, 0.7138]]]])
w[1] = np.array([0, 0])
model.get_layer('Con35955').set_weights(w) 
w = model.get_layer('Con80910').get_weights() 
w[0] = np.array([[[[0.0657], [0.781], [0.5124], [0.3731]]]])
w[1] = np.array([0, 0, 0, 0])
model.get_layer('Con80910').set_weights(w) 
in0Loc46826 = tf.constant([[[[0.3217, 0.2308]], [[0.7873, 0.1512]]]])
in0Cro25790 = tf.constant([[[[[1.1133, 1.3308, 1.5479, 1.2942], [1.4444, 1.9454, 1.3781, 1.224], [1.3818, 1.2108, 1.9424, 1.7148]], [[1.5952, 1.2251, 1.7833, 1.8403], [1.1055, 1.1436, 1.4446, 1.1434], [1.6413, 1.2456, 1.0549, 1.5984]], [[1.3232, 1.1009, 1.0142, 1.3897], [1.3385, 1.4146, 1.1925, 1.9297], [1.1178, 1.7366, 1.2299, 1.6025]], [[1.279, 1.9818, 1.1085, 1.4324], [1.2665, 1.6298, 1.155, 1.2498], [1.1789, 1.5443, 1.0319, 1.9565]]], [[[1.7556, 1.5876, 1.0724, 1.1729], [1.8676, 1.5898, 1.5252, 1.897], [1.1488, 1.7785, 1.8898, 1.7949]], [[1.5935, 1.4742, 1.5404, 1.4015], [1.0455, 1.7141, 1.2666, 1.8167], [1.5085, 1.4763, 1.191, 1.4492]], [[1.1196, 1.3512, 1.7615, 1.9818], [1.4444, 1.8256, 1.1643, 1.0102], [1.4752, 1.8315, 1.5533, 1.743]], [[1.3455, 1.8467, 1.9503, 1.7394], [1.3085, 1.6289, 1.535, 1.9111], [1.9698, 1.6153, 1.3136, 1.914]]]]])
in0Con88083 = tf.constant([[[[0.5989, 0.262], [0.2074, 0.0359], [0.1629, 0.2817]], [[0.3097, 0.6745], [0.8888, 0.0547], [0.6622, 0.243]], [[0.0123, 0.5635], [0.7183, 0.7027], [0.3911, 0.2468]]]])
in0Con80910 = tf.constant([[[[0.1145], [0.1258]]]])
print (np.array2string(model.predict([in0Loc46826,in0Cro25790,in0Con88083,in0Con80910],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Max10883.png')

LLoc46826 = locally_connected2D_layer([[[[0.3217, 0.2308]], [[0.7873, 0.1512]]]], 1, 1,[[[0.2663, 0.9704], [0.9937, 0.723]], [[0.7453, 0.7161], [0.6056, 0.1541]]],[[[0, 0]], [[0, 0]]], 1, 1, Loc46826), 
LZer88585 = zero_padding2D_layer(Loc46826, 1, 0, 2, 0, Zer88585), 
LCro25790 = cropping3D_layer([[[[[1.1133, 1.3308, 1.5479, 1.2942], [1.4444, 1.9454, 1.3781, 1.224], [1.3818, 1.2108, 1.9424, 1.7148]], [[1.5952, 1.2251, 1.7833, 1.8403], [1.1055, 1.1436, 1.4446, 1.1434], [1.6413, 1.2456, 1.0549, 1.5984]], [[1.3232, 1.1009, 1.0142, 1.3897], [1.3385, 1.4146, 1.1925, 1.9297], [1.1178, 1.7366, 1.2299, 1.6025]], [[1.279, 1.9818, 1.1085, 1.4324], [1.2665, 1.6298, 1.155, 1.2498], [1.1789, 1.5443, 1.0319, 1.9565]]], [[[1.7556, 1.5876, 1.0724, 1.1729], [1.8676, 1.5898, 1.5252, 1.897], [1.1488, 1.7785, 1.8898, 1.7949]], [[1.5935, 1.4742, 1.5404, 1.4015], [1.0455, 1.7141, 1.2666, 1.8167], [1.5085, 1.4763, 1.191, 1.4492]], [[1.1196, 1.3512, 1.7615, 1.9818], [1.4444, 1.8256, 1.1643, 1.0102], [1.4752, 1.8315, 1.5533, 1.743]], [[1.3455, 1.8467, 1.9503, 1.7394], [1.3085, 1.6289, 1.535, 1.9111], [1.9698, 1.6153, 1.3136, 1.914]]]]], 1, 0, 2, 1, 2, 0, Cro25790), 
LRes57237 = reshape_layer(Cro25790, [1, 1, 4], Res57237), 
LCon35955 = conv2D_layer(Res57237, 1, 1,[[[[0.733, 0.3788], [0.3874, 0.0519], [0.3192, 0.139], [0.7712, 0.7138]]]],[0, 0], 1, 5, true, 1, 1, Con35955), 
LZer42829 = zero_padding2D_layer(Con35955, 1, 1, 1, 1, Zer42829), 
LAdd97359 = add_layer([Zer88585,Zer42829], Add97359), 
LCon88083 = concatenate_layer([Add97359,[[[[0.5989, 0.262], [0.2074, 0.0359], [0.1629, 0.2817]], [[0.3097, 0.6745], [0.8888, 0.0547], [0.6622, 0.243]], [[0.0123, 0.5635], [0.7183, 0.7027], [0.3911, 0.2468]]]]], 3, Con88083), 
LCon80910 = conv2D_transpose_layer([[[[0.1145], [0.1258]]]], 1, 1,[[[[0.0657], [0.781], [0.5124], [0.3731]]]],[0, 0, 0, 0], 1, 1, true, Con80910), 
LMas68124 = masking_layer(Con80910, 1, Mas68124), 
LZer5526 = zero_padding2D_layer(Mas68124, 2, 0, 1, 0, Zer5526), 
LMax10883 = maximum_layer([Con88083,Zer5526], Max10883), 
exec_layers([LLoc46826,LZer88585,LCro25790,LRes57237,LCon35955,LZer42829,LAdd97359,LCon88083,LCon80910,LMas68124,LZer5526,LMax10883],["Loc46826","Zer88585","Cro25790","Res57237","Con35955","Zer42829","Add97359","Con88083","Con80910","Mas68124","Zer5526","Max10883"],Max10883,"Max10883")

Actual (Unparsed): [[[[0.0000000, 0.0000000, 0.5989000, 0.2620000], [0.0000000, 0.0000000, 0.2074000, 0.0359000], [0.0000000, 0.0000000, 0.1629000, 0.2817000]], [[0.0000000, 0.0000000, 0.3097000, 0.6745000], [3.6308598, 2.1139228, 0.8888000, 0.0547000], [0.3150147, 0.4790461, 0.6622000, 0.2430000]], [[0.0000000, 0.0000000, 0.0123000, 0.5635000], [0.0075227, 0.0894245, 0.7183000, 0.7027000], [0.6783414, 0.5870854, 0.3911000, 0.2468000]]]]

Expected (Unparsed): [[[[0,0,0.5989,0.262],[0,0,0.2074,0.0359],[0,0,0.1629,0.2817]],[[0,0,0.3097,0.6745],[3.6308596600000005,2.11392271,0.8888,0.0547],[0.31501467,0.47904608000000004,0.6622,0.243]],[[0,0,0.0123,0.5635],[0.00752265,0.0894245,0.7183,0.7027],[0.6783414099999999,0.58708545,0.3911,0.2468]]]]

Actual:   [[[[0, 0, 0.5989, 0.262], [0, 0, 0.2074, 0.0359], [0, 0, 0.1629, 0.2817]], [[0, 0, 0.3097, 0.6745], [3.6309, 2.114, 0.8888, 0.0547], [0.3151, 0.4791, 0.6622, 0.243]], [[0, 0, 0.0123, 0.5635], [0.0076, 0.0895, 0.7183, 0.7027], [0.6784, 0.5871, 0.3911, 0.2468]]]]

Expected: [[[[0, 0, 0.5989, 0.262], [0, 0, 0.2074, 0.0359], [0, 0, 0.1629, 0.2817]], [[0, 0, 0.3097, 0.6745], [3.6309, 2.114, 0.8888, 0.0547], [0.3151, 0.4791, 0.6622, 0.243]], [[0, 0, 0.0123, 0.5635], [0.0076, 0.0895, 0.7183, 0.7027], [0.6784, 0.5871, 0.3911, 0.2468]]]]