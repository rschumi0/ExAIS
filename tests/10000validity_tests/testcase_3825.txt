import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Add96132 = tf.keras.layers.Input(shape=([2, 2, 1]))
in1Add96132 = tf.keras.layers.Input(shape=([2, 2, 1]))

Add96132 = keras.layers.Add(name = 'Add96132', )([in0Add96132,in1Add96132])
Ave90301 = keras.layers.AveragePooling2D(pool_size=(1, 1), strides=(1, 1), padding='same', name = 'Ave90301', )(Add96132)
Sep34759 = keras.layers.SeparableConv2D(2, (1, 1),strides=(1, 1), padding='valid', name = 'Sep34759', )(Ave90301)
model = tf.keras.models.Model(inputs=[in0Add96132,in1Add96132], outputs=Sep34759)
w = model.get_layer('Sep34759').get_weights() 
w[0] = np.array([[[[0.9177]]]])
w[1] = np.array([[[[0.2139, 0.2606]]]])
w[2] = np.array([0, 0])
model.get_layer('Sep34759').set_weights(w) 
in0Add96132 = tf.constant([[[[0.9978], [0.1087]], [[0.9404], [0.9398]]]])
in1Add96132 = tf.constant([[[[0.2749], [0.8057]], [[0.5842], [0.2968]]]])
print (np.array2string(model.predict([in0Add96132,in1Add96132],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Sep34759.png')

LAdd96132 = add_layer([[[[[0.9978], [0.1087]], [[0.9404], [0.9398]]]], [[[[0.2749], [0.8057]], [[0.5842], [0.2968]]]]], Add96132), 
LAve90301 = average_pooling2D_layer(Add96132, 1, 1, 1, 1, true, Ave90301), 
LSep34759 = separable_conv2D_layer(Ave90301, 1, 1,[[[[[0.9177]]]],[[[[0.2139, 0.2606]]]]],[0, 0], 1, 1, false, Sep34759), 
exec_layers([LAdd96132,LAve90301,LSep34759],["Add96132","Ave90301","Sep34759"],Sep34759,"Sep34759")

Actual (Unparsed): [[[[0.2498260, 0.3043695], [0.1794931, 0.2186812]], [[0.2992729, 0.3646121], [0.2427397, 0.2957361]]]]

Expected (Unparsed): [[[[0.24982595738099997,0.304369539474],[0.179493089832,0.21868115572799998]],[[0.299272927338,0.36461208445199994],[0.24273967069799998,0.295736129892]]]]

Actual:   [[[[0.2499, 0.3044], [0.1795, 0.2187]], [[0.2993, 0.3647], [0.2428, 0.2958]]]]

Expected: [[[[0.2499, 0.3044], [0.1795, 0.2187]], [[0.2993, 0.3647], [0.2428, 0.2958]]]]