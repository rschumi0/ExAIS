import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Ave77030 = tf.keras.layers.Input(shape=([1, 2, 2, 2]))
in1Ave77030 = tf.keras.layers.Input(shape=([1, 2, 2, 2]))
in0Min72169 = tf.keras.layers.Input(shape=([2, 2]))
in1Min72169 = tf.keras.layers.Input(shape=([2, 2]))
in0Mul8400 = tf.keras.layers.Input(shape=([2, 1]))
in1Mul8400 = tf.keras.layers.Input(shape=([2, 1]))
in0Con5166 = tf.keras.layers.Input(shape=([4, 1]))
in0Den96192 = tf.keras.layers.Input(shape=([2, 2, 5]))
in0Con82645 = tf.keras.layers.Input(shape=([16, 8, 1, 1]))
in0Con45654 = tf.keras.layers.Input(shape=([2, 1]))

Ave77030 = keras.layers.Average(name = 'Ave77030', )([in0Ave77030,in1Ave77030])
Res3958 = keras.layers.Reshape((1, 2, 4), name = 'Res3958', )(Ave77030)
Zer48816 = keras.layers.ZeroPadding2D(padding=((1, 1), (1, 1)), name = 'Zer48816', )(Res3958)
Res48556 = keras.layers.Reshape((3, 16), name = 'Res48556', )(Zer48816)
Zer28600 = keras.layers.ZeroPadding1D(padding=((1, 0)), name = 'Zer28600', )(Res48556)
Min72169 = keras.layers.Minimum(name = 'Min72169', )([in0Min72169,in1Min72169])
Up_54026 = keras.layers.UpSampling1D(size=(2), name = 'Up_54026', )(Min72169)
Dot92295 = keras.layers.Dot(axes=(1, 1), name = 'Dot92295', )([Zer28600,Up_54026])
Mul8400 = keras.layers.Multiply(name = 'Mul8400', )([in0Mul8400,in1Mul8400])
Zer89033 = keras.layers.ZeroPadding1D(padding=((2, 0)), name = 'Zer89033', )(Mul8400)
Con5166 = keras.layers.Concatenate(axis=2, name = 'Con5166', )([Zer89033,in0Con5166])
Den96192 = keras.layers.Dense(1,name = 'Den96192', )(in0Den96192)
Res85745 = keras.layers.Reshape((2, 2), name = 'Res85745', )(Den96192)
Zer99490 = keras.layers.ZeroPadding1D(padding=((1, 1)), name = 'Zer99490', )(Res85745)
Min38775 = keras.layers.Minimum(name = 'Min38775', )([Con5166,Zer99490])
Zer85821 = keras.layers.ZeroPadding1D(padding=((12, 0)), name = 'Zer85821', )(Min38775)
Max55736 = keras.layers.Maximum(name = 'Max55736', )([Dot92295,Zer85821])
Res34929 = keras.layers.Reshape((16, 2, 1), name = 'Res34929', )(Max55736)
Res95420 = keras.layers.Reshape((16, 2, 1, 1), name = 'Res95420', )(Res34929)
Zer13624 = keras.layers.ZeroPadding3D(padding=((0, 0), (6, 0), (0, 0)), name = 'Zer13624', )(Res95420)
Con82645 = keras.layers.Concatenate(axis=4, name = 'Con82645', )([Zer13624,in0Con82645])
Con45654 = keras.layers.Conv1D(3, (1),strides=(1), padding='valid', dilation_rate=(1), name = 'Con45654', )(in0Con45654)
Res3782 = keras.layers.Reshape((2, 3, 1), name = 'Res3782', )(Con45654)
Res39102 = keras.layers.Reshape((2, 3, 1, 1), name = 'Res39102', )(Res3782)
Con40785 = keras.layers.Conv3DTranspose(2, (2, 3, 1),strides=(1, 1, 1), padding='valid', name = 'Con40785', )(Res39102)
Zer5667 = keras.layers.ZeroPadding3D(padding=((13, 0), (3, 0), (0, 0)), name = 'Zer5667', )(Con40785)
Max49369 = keras.layers.Maximum(name = 'Max49369', )([Con82645,Zer5667])
model = tf.keras.models.Model(inputs=[in0Ave77030,in1Ave77030,in0Min72169,in1Min72169,in0Mul8400,in1Mul8400,in0Con5166,in0Den96192,in0Con82645,in0Con45654], outputs=Max49369)
w = model.get_layer('Den96192').get_weights() 
w[0] = np.array([[0.8394], [0.1321], [0.262], [0.3984], [0.6161]])
w[1] = np.array([0.0971])
model.get_layer('Den96192').set_weights(w) 
w = model.get_layer('Con45654').get_weights() 
w[0] = np.array([[[0.5527, 0.8163, 0.6182]]])
w[1] = np.array([0, 0, 0])
model.get_layer('Con45654').set_weights(w) 
w = model.get_layer('Con40785').get_weights() 
w[0] = np.array([[[[[0.3065], [0.2603]]], [[[0.4785], [0.479]]], [[[0.2754], [0.2241]]]], [[[[0.0793], [0.5231]]], [[[0.1517], [0.0269]]], [[[0.2076], [0.969]]]]])
w[1] = np.array([0, 0])
model.get_layer('Con40785').set_weights(w) 
in0Ave77030 = tf.constant([[[[[0.146, 0.4634], [0.5281, 0.8381]], [[0.5318, 0.9533], [0.1225, 0.0048]]]]])
in1Ave77030 = tf.constant([[[[[0.7147, 0.0145], [0.3782, 0.9424]], [[0.1607, 0.4614], [0.8779, 0.919]]]]])
in0Min72169 = tf.constant([[[0.9629, 0.9627], [0.9521, 0.416]]])
in1Min72169 = tf.constant([[[0.9477, 0.6134], [0.6476, 0.143]]])
in0Mul8400 = tf.constant([[[0.8497], [0.9269]]])
in1Mul8400 = tf.constant([[[0.459], [0.689]]])
in0Con5166 = tf.constant([[[0.3462], [0.8017], [0.9789], [0.8647]]])
in0Den96192 = tf.constant([[[[0.0519, 0.0222, 0.7635, 0.6447, 0.2896], [0.7168, 0.9436, 0.7314, 0.1424, 0.9585]], [[0.2519, 0.4593, 0.1062, 0.5283, 0.573], [0.1042, 0.5257, 0.2291, 0.3762, 0.3382]]]])
in0Con82645 = tf.constant([[[[[0.9536]], [[0.5871]], [[0.9085]], [[0.4562]], [[0.7095]], [[0.3881]], [[0.3655]], [[0.8627]]], [[[0.6681]], [[0.68]], [[0.2287]], [[0.9586]], [[0.464]], [[0.1821]], [[0.8605]], [[0.6373]]], [[[0.638]], [[0.3186]], [[0.5226]], [[0.4486]], [[0.3749]], [[0.8646]], [[0.699]], [[0.1097]]], [[[0.7518]], [[0.6042]], [[0.9113]], [[0.5006]], [[0.8484]], [[0.9963]], [[0.7482]], [[0.995]]], [[[0.5631]], [[0.1261]], [[0.9603]], [[0.5259]], [[0.0068]], [[0.2814]], [[0.6389]], [[0.6157]]], [[[0.895]], [[0.3431]], [[0.6933]], [[0.706]], [[0.4544]], [[0.7976]], [[0.0687]], [[0.5219]]], [[[0.9707]], [[0.5939]], [[0.4048]], [[0.8697]], [[0.2582]], [[0.2495]], [[0.1266]], [[0.2279]]], [[[0.0116]], [[0.5856]], [[0.2786]], [[0.7233]], [[0.2108]], [[0.2166]], [[0.7677]], [[0.6011]]], [[[0.4942]], [[0.4573]], [[0.063]], [[0.0955]], [[0.6911]], [[0.6193]], [[0.8158]], [[0.6891]]], [[[0.5062]], [[0.7669]], [[0.3093]], [[0.1047]], [[0.6902]], [[0.8758]], [[0.1255]], [[0.0193]]], [[[0.8956]], [[0.9979]], [[0.9255]], [[0.4115]], [[0.8179]], [[0.4712]], [[0.779]], [[0.6558]]], [[[0.1519]], [[0.4352]], [[0.0502]], [[0.9654]], [[0.3566]], [[0.9135]], [[0.4502]], [[0.5503]]], [[[0.2118]], [[0.506]], [[0.5]], [[0.905]], [[0.6792]], [[0.2975]], [[0.312]], [[0.9703]]], [[[0.6305]], [[0.9348]], [[0.2953]], [[0.5233]], [[0.5972]], [[0.9492]], [[0.1179]], [[0.0412]]], [[[0.811]], [[0.3091]], [[0.0165]], [[0.458]], [[0.4557]], [[0.8757]], [[0.3354]], [[0.6868]]], [[[0.2309]], [[0.9048]], [[0.9973]], [[0.5158]], [[0.0404]], [[0.9894]], [[0.461]], [[0.5032]]]]])
in0Con45654 = tf.constant([[[0.694], [0.8407]]])
print (np.array2string(model.predict([in0Ave77030,in1Ave77030,in0Min72169,in1Min72169,in0Mul8400,in1Mul8400,in0Con5166,in0Den96192,in0Con82645,in0Con45654],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Max49369.png')

LAve77030 = average_layer([[[[[[0.146, 0.4634], [0.5281, 0.8381]], [[0.5318, 0.9533], [0.1225, 0.0048]]]]], [[[[[0.7147, 0.0145], [0.3782, 0.9424]], [[0.1607, 0.4614], [0.8779, 0.919]]]]]], Ave77030), 
LRes3958 = reshape_layer(Ave77030, [1, 2, 4], Res3958), 
LZer48816 = zero_padding2D_layer(Res3958, 1, 1, 1, 1, Zer48816), 
LRes48556 = reshape_layer(Zer48816, [3, 16], Res48556), 
LZer28600 = zero_padding1D_layer(Res48556, 1, 0, Zer28600), 
LMin72169 = minimum_layer([[[[0.9629, 0.9627], [0.9521, 0.416]]], [[[0.9477, 0.6134], [0.6476, 0.143]]]], Min72169), 
LUp_54026 = up_sampling1D_layer(Min72169, 2, Up_54026), 
LDot92295 = dot_layer(Zer28600,Up_54026, 1, 1, Dot92295), 
LMul8400 = multiply_layer([[[[0.8497], [0.9269]]], [[[0.459], [0.689]]]], Mul8400), 
LZer89033 = zero_padding1D_layer(Mul8400, 2, 0, Zer89033), 
LCon5166 = concatenate_layer([Zer89033,[[[0.3462], [0.8017], [0.9789], [0.8647]]]], 2, Con5166), 
LDen96192 = dense_layer([[[[0.0519, 0.0222, 0.7635, 0.6447, 0.2896], [0.7168, 0.9436, 0.7314, 0.1424, 0.9585]], [[0.2519, 0.4593, 0.1062, 0.5283, 0.573], [0.1042, 0.5257, 0.2291, 0.3762, 0.3382]]]], [[0.8394], [0.1321], [0.262], [0.3984], [0.6161]],[0.0971], Den96192), 
LRes85745 = reshape_layer(Den96192, [2, 2], Res85745), 
LZer99490 = zero_padding1D_layer(Res85745, 1, 1, Zer99490), 
LMin38775 = minimum_layer([Con5166,Zer99490], Min38775), 
LZer85821 = zero_padding1D_layer(Min38775, 12, 0, Zer85821), 
LMax55736 = maximum_layer([Dot92295,Zer85821], Max55736), 
LRes34929 = reshape_layer(Max55736, [16, 2, 1], Res34929), 
LRes95420 = reshape_layer(Res34929, [16, 2, 1, 1], Res95420), 
LZer13624 = zero_padding3D_layer(Res95420, 0, 0, 6, 0, 0, 0, Zer13624), 
LCon82645 = concatenate_layer([Zer13624,[[[[[0.9536]], [[0.5871]], [[0.9085]], [[0.4562]], [[0.7095]], [[0.3881]], [[0.3655]], [[0.8627]]], [[[0.6681]], [[0.68]], [[0.2287]], [[0.9586]], [[0.464]], [[0.1821]], [[0.8605]], [[0.6373]]], [[[0.638]], [[0.3186]], [[0.5226]], [[0.4486]], [[0.3749]], [[0.8646]], [[0.699]], [[0.1097]]], [[[0.7518]], [[0.6042]], [[0.9113]], [[0.5006]], [[0.8484]], [[0.9963]], [[0.7482]], [[0.995]]], [[[0.5631]], [[0.1261]], [[0.9603]], [[0.5259]], [[0.0068]], [[0.2814]], [[0.6389]], [[0.6157]]], [[[0.895]], [[0.3431]], [[0.6933]], [[0.706]], [[0.4544]], [[0.7976]], [[0.0687]], [[0.5219]]], [[[0.9707]], [[0.5939]], [[0.4048]], [[0.8697]], [[0.2582]], [[0.2495]], [[0.1266]], [[0.2279]]], [[[0.0116]], [[0.5856]], [[0.2786]], [[0.7233]], [[0.2108]], [[0.2166]], [[0.7677]], [[0.6011]]], [[[0.4942]], [[0.4573]], [[0.063]], [[0.0955]], [[0.6911]], [[0.6193]], [[0.8158]], [[0.6891]]], [[[0.5062]], [[0.7669]], [[0.3093]], [[0.1047]], [[0.6902]], [[0.8758]], [[0.1255]], [[0.0193]]], [[[0.8956]], [[0.9979]], [[0.9255]], [[0.4115]], [[0.8179]], [[0.4712]], [[0.779]], [[0.6558]]], [[[0.1519]], [[0.4352]], [[0.0502]], [[0.9654]], [[0.3566]], [[0.9135]], [[0.4502]], [[0.5503]]], [[[0.2118]], [[0.506]], [[0.5]], [[0.905]], [[0.6792]], [[0.2975]], [[0.312]], [[0.9703]]], [[[0.6305]], [[0.9348]], [[0.2953]], [[0.5233]], [[0.5972]], [[0.9492]], [[0.1179]], [[0.0412]]], [[[0.811]], [[0.3091]], [[0.0165]], [[0.458]], [[0.4557]], [[0.8757]], [[0.3354]], [[0.6868]]], [[[0.2309]], [[0.9048]], [[0.9973]], [[0.5158]], [[0.0404]], [[0.9894]], [[0.461]], [[0.5032]]]]]], 4, Con82645), 
LCon45654 = conv1D_layer([[[0.694], [0.8407]]], 1,[[[0.5527, 0.8163, 0.6182]]],[0, 0, 0], 1, false, 1, Con45654), 
LRes3782 = reshape_layer(Con45654, [2, 3, 1], Res3782), 
LRes39102 = reshape_layer(Res3782, [2, 3, 1, 1], Res39102), 
LCon40785 = conv3D_transpose_layer(Res39102, 2, 3, 1,[[[[[0.3065], [0.2603]]], [[[0.4785], [0.479]]], [[[0.2754], [0.2241]]]], [[[[0.0793], [0.5231]]], [[[0.1517], [0.0269]]], [[[0.2076], [0.969]]]]],[0, 0], 1, 1, 1, false, Con40785), 
LZer5667 = zero_padding3D_layer(Con40785, 13, 0, 3, 0, 0, 0, Zer5667), 
LMax49369 = maximum_layer([Con82645,Zer5667], Max49369), 
exec_layers([LAve77030,LRes3958,LZer48816,LRes48556,LZer28600,LMin72169,LUp_54026,LDot92295,LMul8400,LZer89033,LCon5166,LDen96192,LRes85745,LZer99490,LMin38775,LZer85821,LMax55736,LRes34929,LRes95420,LZer13624,LCon82645,LCon45654,LRes3782,LRes39102,LCon40785,LZer5667,LMax49369],["Ave77030","Res3958","Zer48816","Res48556","Zer28600","Min72169","Up_54026","Dot92295","Mul8400","Zer89033","Con5166","Den96192","Res85745","Zer99490","Min38775","Zer85821","Max55736","Res34929","Res95420","Zer13624","Con82645","Con45654","Res3782","Res39102","Con40785","Zer5667","Max49369"],Max49369,"Max49369")

Actual (Unparsed): [[[[[0.0000000, 0.9536000]], [[0.0000000, 0.5871000]], [[0.0000000, 0.9085000]], [[0.0000000, 0.4562000]], [[0.0000000, 0.7095000]], [[0.0000000, 0.3881000]], [[0.0000000, 0.3655000]], [[0.0000000, 0.8627000]]], [[[0.0000000, 0.6681000]], [[0.0000000, 0.6800000]], [[0.0000000, 0.2287000]], [[0.0000000, 0.9586000]], [[0.0000000, 0.4640000]], [[0.0000000, 0.1821000]], [[0.0000000, 0.8605000]], [[0.0000000, 0.6373000]]], [[[0.0000000, 0.6380000]], [[0.0000000, 0.3186000]], [[0.0000000, 0.5226000]], [[0.0000000, 0.4486000]], [[0.0000000, 0.3749000]], [[0.0000000, 0.8646000]], [[0.0000000, 0.6990000]], [[0.0000000, 0.1097000]]], [[[0.0000000, 0.7518000]], [[0.0000000, 0.6042000]], [[0.0000000, 0.9113000]], [[0.0000000, 0.5006000]], [[0.0000000, 0.8484000]], [[0.0000000, 0.9963000]], [[0.0000000, 0.7482000]], [[0.0000000, 0.9950000]]], [[[0.0000000, 0.5631000]], [[0.0000000, 0.1261000]], [[0.0000000, 0.9603000]], [[0.0000000, 0.5259000]], [[0.0000000, 0.0068000]], [[0.0000000, 0.2814000]], [[0.2786947, 0.6389000]], [[0.0615401, 0.6157000]]], [[[0.0000000, 0.8950000]], [[0.0000000, 0.3431000]], [[0.0000000, 0.6933000]], [[0.0000000, 0.7060000]], [[0.0000000, 0.4544000]], [[0.0000000, 0.7976000]], [[0.1547440, 0.0687000]], [[0.0341699, 0.5219000]]], [[[0.0000000, 0.9707000]], [[0.0000000, 0.5939000]], [[0.0000000, 0.4048000]], [[0.0000000, 0.8697000]], [[0.0000000, 0.2582000]], [[0.0000000, 0.2495000]], [[0.2934599, 0.1266000]], [[0.0648005, 0.2279000]]], [[[0.0000000, 0.0116000]], [[0.0000000, 0.5856000]], [[0.0000000, 0.2786000]], [[0.0000000, 0.7233000]], [[0.0000000, 0.2108000]], [[0.0000000, 0.2166000]], [[0.5765259, 0.7677000]], [[0.1273058, 0.6011000]]], [[[0.0000000, 0.4942000]], [[0.0000000, 0.4573000]], [[0.0000000, 0.0630000]], [[0.0000000, 0.0955000]], [[0.0000000, 0.6911000]], [[0.0000000, 0.6193000]], [[0.2242315, 0.8158000]], [[0.0495137, 0.6891000]]], [[[0.0000000, 0.5062000]], [[0.0000000, 0.7669000]], [[0.0000000, 0.3093000]], [[0.0000000, 0.1047000]], [[0.0000000, 0.6902000]], [[0.0000000, 0.8758000]], [[0.4580799, 0.1255000]], [[0.1011511, 0.0193000]]], [[[0.0000000, 0.8956000]], [[0.0000000, 0.9979000]], [[0.0000000, 0.9255000]], [[0.0000000, 0.4115000]], [[0.0000000, 0.8179000]], [[0.0000000, 0.4712000]], [[0.3239295, 0.7790000]], [[0.0715286, 0.6558000]]], [[[0.0000000, 0.1519000]], [[0.0000000, 0.4352000]], [[0.0000000, 0.0502000]], [[0.0000000, 0.9654000]], [[0.0000000, 0.3566000]], [[0.0000000, 0.9135000]], [[0.2991264, 0.4502000]], [[0.0660517, 0.5503000]]], [[[0.0000000, 0.2118000]], [[0.0000000, 0.5060000]], [[0.0000000, 0.5000000]], [[0.0000000, 0.9050000]], [[0.0000000, 0.6792000]], [[0.0000000, 0.2975000]], [[0.0000000, 0.3120000]], [[0.0000000, 0.9703000]]], [[[0.0000000, 0.6305000]], [[0.0000000, 0.9348000]], [[0.0000000, 0.2953000]], [[0.1175654, 0.5233000]], [[0.3571761, 0.5972000]], [[0.5082103, 0.9492000]], [[0.3613087, 0.3324611]], [[0.8017000, 0.0961458]]], [[[0.0000000, 0.8110000]], [[0.0000000, 0.3091000]], [[0.0000000, 0.0165000]], [[0.1728341, 0.4580000]], [[0.5357896, 0.7078647]], [[0.8152293, 1.1794808]], [[0.6203752, 0.9632291]], [[0.6722777, 0.6868000]]], [[[0.0000000, 0.2309000]], [[0.0000000, 0.9048000]], [[0.0000000, 0.9973000]], [[0.0368471, 0.5158000]], [[0.1249088, 0.3714836]], [[0.2417824, 0.9894000]], [[0.2213099, 0.6789697]], [[0.1078940, 0.5036094]]]]]

Expected (Unparsed): [[[[[0,0.9536]],[[0,0.5871]],[[0,0.9085]],[[0,0.4562]],[[0,0.7095]],[[0,0.3881]],[[0.0,0.3655]],[[0.0,0.8627]]],[[[0,0.6681]],[[0,0.68]],[[0,0.2287]],[[0,0.9586]],[[0,0.464]],[[0,0.1821]],[[0.0,0.8605]],[[0.0,0.6373]]],[[[0,0.638]],[[0,0.3186]],[[0,0.5226]],[[0,0.4486]],[[0,0.3749]],[[0,0.8646]],[[0.0,0.699]],[[0.0,0.1097]]],[[[0,0.7518]],[[0,0.6042]],[[0,0.9113]],[[0,0.5006]],[[0,0.8484]],[[0,0.9963]],[[0.0,0.7482]],[[0.0,0.995]]],[[[0,0.5631]],[[0,0.1261]],[[0,0.9603]],[[0,0.5259]],[[0,0.0068]],[[0,0.2814]],[[0.27869466,0.6389]],[[0.06154005,0.6157]]],[[[0,0.895]],[[0,0.3431]],[[0,0.6933]],[[0,0.706]],[[0,0.4544]],[[0,0.7976]],[[0.15474401999999998,0.0687]],[[0.034169849999999995,0.5219]]],[[[0,0.9707]],[[0,0.5939]],[[0,0.4048]],[[0,0.8697]],[[0,0.2582]],[[0,0.2495]],[[0.29345994,0.1266]],[[0.06480045,0.2279]]],[[[0,0.0116]],[[0,0.5856]],[[0,0.2786]],[[0,0.7233]],[[0,0.2108]],[[0,0.2166]],[[0.5765258999999999,0.7677]],[[0.12730575,0.6011]]],[[[0,0.4942]],[[0,0.4573]],[[0,0.063]],[[0,0.0955]],[[0,0.6911]],[[0,0.6193]],[[0.22423150000000003,0.8158]],[[0.04951375,0.6891]]],[[[0,0.5062]],[[0,0.7669]],[[0,0.3093]],[[0,0.1047]],[[0,0.6902]],[[0,0.8758]],[[0.45807986,0.1255]],[[0.10115104999999999,0.0193]]],[[[0,0.8956]],[[0,0.9979]],[[0,0.9255]],[[0,0.4115]],[[0,0.8179]],[[0,0.4712]],[[0.32392951999999997,0.779]],[[0.0715286,0.6558]]],[[[0,0.1519]],[[0,0.4352]],[[0,0.0502]],[[0,0.9654]],[[0,0.3566]],[[0,0.9135]],[[0.29912644,0.4502]],[[0.0660517,0.5503]]],[[[0,0.2118]],[[0,0.506]],[[0,0.5]],[[0,0.905]],[[0,0.6792]],[[0,0.2975]],[[0.0,0.312]],[[0.0,0.9703]]],[[[0,0.6305]],[[0,0.9348]],[[0,0.2953]],[[0.11756536969999999,0.5233]],[[0.35717605259999996,0.5972]],[[0.50821025242,0.9492]],[[0.36130869767999996,0.33246113722]],[[0.8017,0.09614580227999998]]],[[[0,0.811]],[[0,0.3091]],[[0,0.0165]],[[0.172834126125,0.458]],[[0.53578966295,0.707864724973]],[[0.815229369261,1.179480844721]],[[0.620375222284,0.963229114961]],[[0.6722777499999999,0.6868]]],[[[0,0.2309]],[[0,0.9048]],[[0,0.9973]],[[0.036847132777,0.5158]],[[0.12490883522599999,0.371483606312]],[[0.241782369143,0.9894]],[[0.221309920174,0.678969732196]],[[0.10789402562400001,0.50360939706]]]]]

Actual:   [[[[[0, 0.9536]], [[0, 0.5871]], [[0, 0.9085]], [[0, 0.4562]], [[0, 0.7095]], [[0, 0.3881]], [[0, 0.3655]], [[0, 0.8627]]], [[[0, 0.6681]], [[0, 0.68]], [[0, 0.2287]], [[0, 0.9586]], [[0, 0.464]], [[0, 0.1821]], [[0, 0.8605]], [[0, 0.6373]]], [[[0, 0.638]], [[0, 0.3186]], [[0, 0.5226]], [[0, 0.4486]], [[0, 0.3749]], [[0, 0.8646]], [[0, 0.699]], [[0, 0.1097]]], [[[0, 0.7518]], [[0, 0.6042]], [[0, 0.9113]], [[0, 0.5006]], [[0, 0.8484]], [[0, 0.9963]], [[0, 0.7482]], [[0, 0.995]]], [[[0, 0.5631]], [[0, 0.1261]], [[0, 0.9603]], [[0, 0.5259]], [[0, 0.0068]], [[0, 0.2814]], [[0.2787, 0.6389]], [[0.0616, 0.6157]]], [[[0, 0.895]], [[0, 0.3431]], [[0, 0.6933]], [[0, 0.706]], [[0, 0.4544]], [[0, 0.7976]], [[0.1548, 0.0687]], [[0.0342, 0.5219]]], [[[0, 0.9707]], [[0, 0.5939]], [[0, 0.4048]], [[0, 0.8697]], [[0, 0.2582]], [[0, 0.2495]], [[0.2935, 0.1266]], [[0.0649, 0.2279]]], [[[0, 0.0116]], [[0, 0.5856]], [[0, 0.2786]], [[0, 0.7233]], [[0, 0.2108]], [[0, 0.2166]], [[0.5766, 0.7677]], [[0.1274, 0.6011]]], [[[0, 0.4942]], [[0, 0.4573]], [[0, 0.063]], [[0, 0.0955]], [[0, 0.6911]], [[0, 0.6193]], [[0.2243, 0.8158]], [[0.0496, 0.6891]]], [[[0, 0.5062]], [[0, 0.7669]], [[0, 0.3093]], [[0, 0.1047]], [[0, 0.6902]], [[0, 0.8758]], [[0.4581, 0.1255]], [[0.1012, 0.0193]]], [[[0, 0.8956]], [[0, 0.9979]], [[0, 0.9255]], [[0, 0.4115]], [[0, 0.8179]], [[0, 0.4712]], [[0.324, 0.779]], [[0.0716, 0.6558]]], [[[0, 0.1519]], [[0, 0.4352]], [[0, 0.0502]], [[0, 0.9654]], [[0, 0.3566]], [[0, 0.9135]], [[0.2992, 0.4502]], [[0.0661, 0.5503]]], [[[0, 0.2118]], [[0, 0.506]], [[0, 0.5]], [[0, 0.905]], [[0, 0.6792]], [[0, 0.2975]], [[0, 0.312]], [[0, 0.9703]]], [[[0, 0.6305]], [[0, 0.9348]], [[0, 0.2953]], [[0.1176, 0.5233]], [[0.3572, 0.5972]], [[0.5083, 0.9492]], [[0.3614, 0.3325]], [[0.8017, 0.0962]]], [[[0, 0.811]], [[0, 0.3091]], [[0, 0.0165]], [[0.1729, 0.458]], [[0.5358, 0.7079]], [[0.8153, 1.1795]], [[0.6204, 0.9633]], [[0.6723, 0.6868]]], [[[0, 0.2309]], [[0, 0.9048]], [[0, 0.9973]], [[0.0369, 0.5158]], [[0.125, 0.3715]], [[0.2418, 0.9894]], [[0.2214, 0.679]], [[0.1079, 0.5037]]]]]

Expected: [[[[[0, 0.9536]], [[0, 0.5871]], [[0, 0.9085]], [[0, 0.4562]], [[0, 0.7095]], [[0, 0.3881]], [[0, 0.3655]], [[0, 0.8627]]], [[[0, 0.6681]], [[0, 0.68]], [[0, 0.2287]], [[0, 0.9586]], [[0, 0.464]], [[0, 0.1821]], [[0, 0.8605]], [[0, 0.6373]]], [[[0, 0.638]], [[0, 0.3186]], [[0, 0.5226]], [[0, 0.4486]], [[0, 0.3749]], [[0, 0.8646]], [[0, 0.699]], [[0, 0.1097]]], [[[0, 0.7518]], [[0, 0.6042]], [[0, 0.9113]], [[0, 0.5006]], [[0, 0.8484]], [[0, 0.9963]], [[0, 0.7482]], [[0, 0.995]]], [[[0, 0.5631]], [[0, 0.1261]], [[0, 0.9603]], [[0, 0.5259]], [[0, 0.0068]], [[0, 0.2814]], [[0.2787, 0.6389]], [[0.0616, 0.6157]]], [[[0, 0.895]], [[0, 0.3431]], [[0, 0.6933]], [[0, 0.706]], [[0, 0.4544]], [[0, 0.7976]], [[0.1548, 0.0687]], [[0.0342, 0.5219]]], [[[0, 0.9707]], [[0, 0.5939]], [[0, 0.4048]], [[0, 0.8697]], [[0, 0.2582]], [[0, 0.2495]], [[0.2935, 0.1266]], [[0.0649, 0.2279]]], [[[0, 0.0116]], [[0, 0.5856]], [[0, 0.2786]], [[0, 0.7233]], [[0, 0.2108]], [[0, 0.2166]], [[0.5766, 0.7677]], [[0.1274, 0.6011]]], [[[0, 0.4942]], [[0, 0.4573]], [[0, 0.063]], [[0, 0.0955]], [[0, 0.6911]], [[0, 0.6193]], [[0.2243, 0.8158]], [[0.0496, 0.6891]]], [[[0, 0.5062]], [[0, 0.7669]], [[0, 0.3093]], [[0, 0.1047]], [[0, 0.6902]], [[0, 0.8758]], [[0.4581, 0.1255]], [[0.1012, 0.0193]]], [[[0, 0.8956]], [[0, 0.9979]], [[0, 0.9255]], [[0, 0.4115]], [[0, 0.8179]], [[0, 0.4712]], [[0.324, 0.779]], [[0.0716, 0.6558]]], [[[0, 0.1519]], [[0, 0.4352]], [[0, 0.0502]], [[0, 0.9654]], [[0, 0.3566]], [[0, 0.9135]], [[0.2992, 0.4502]], [[0.0661, 0.5503]]], [[[0, 0.2118]], [[0, 0.506]], [[0, 0.5]], [[0, 0.905]], [[0, 0.6792]], [[0, 0.2975]], [[0, 0.312]], [[0, 0.9703]]], [[[0, 0.6305]], [[0, 0.9348]], [[0, 0.2953]], [[0.1176, 0.5233]], [[0.3572, 0.5972]], [[0.5083, 0.9492]], [[0.3614, 0.3325]], [[0.8017, 0.0962]]], [[[0, 0.811]], [[0, 0.3091]], [[0, 0.0165]], [[0.1729, 0.458]], [[0.5358, 0.7079]], [[0.8153, 1.1795]], [[0.6204, 0.9633]], [[0.6723, 0.6868]]], [[[0, 0.2309]], [[0, 0.9048]], [[0, 0.9973]], [[0.0369, 0.5158]], [[0.125, 0.3715]], [[0.2418, 0.9894]], [[0.2214, 0.679]], [[0.1079, 0.5037]]]]]