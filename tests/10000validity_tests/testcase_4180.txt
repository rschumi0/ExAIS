import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Zer61714 = tf.keras.layers.Input(shape=([4, 1, 1, 1]))

Zer61714 = keras.layers.ZeroPadding3D(padding=((1, 1), (1, 1), (1, 1)), name = 'Zer61714', )(in0Zer61714)
Den54134 = keras.layers.Dense(2,name = 'Den54134', )(Zer61714)
Res40337 = keras.layers.Reshape((6, 3, 6), name = 'Res40337', )(Den54134)
Res18996 = keras.layers.Reshape((6, 18), name = 'Res18996', )(Res40337)
Max14783 = keras.layers.MaxPool1D(pool_size=(1), name = 'Max14783', )(Res18996)
model = tf.keras.models.Model(inputs=[in0Zer61714], outputs=Max14783)
w = model.get_layer('Den54134').get_weights() 
w[0] = np.array([[0.0125, 0.8057]])
w[1] = np.array([0.3228, 0.8323])
model.get_layer('Den54134').set_weights(w) 
in0Zer61714 = tf.constant([[[[[1.8078]]], [[[1.1155]]], [[[1.227]]], [[[1.5437]]]]])
print (np.array2string(model.predict([in0Zer61714],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Max14783.png')

LZer61714 = zero_padding3D_layer([[[[[1.8078]]], [[[1.1155]]], [[[1.227]]], [[[1.5437]]]]], 1, 1, 1, 1, 1, 1, Zer61714), 
LDen54134 = dense_layer(Zer61714, [[0.0125, 0.8057]],[0.3228, 0.8323], Den54134), 
LRes40337 = reshape_layer(Den54134, [6, 3, 6], Res40337), 
LRes18996 = reshape_layer(Res40337, [6, 18], Res18996), 
LMax14783 = max_pool1D_layer(Res18996, 1, Max14783), 
exec_layers([LZer61714,LDen54134,LRes40337,LRes18996,LMax14783],["Zer61714","Den54134","Res40337","Res18996","Max14783"],Max14783,"Max14783")

Actual (Unparsed): [[[0.3228000, 0.8323000, 0.3228000, 0.8323000, 0.3228000, 0.8323000, 0.3228000, 0.8323000, 0.3228000, 0.8323000, 0.3228000, 0.8323000, 0.3228000, 0.8323000, 0.3228000, 0.8323000, 0.3228000, 0.8323000], [0.3228000, 0.8323000, 0.3228000, 0.8323000, 0.3228000, 0.8323000, 0.3228000, 0.8323000, 0.3453975, 2.2888445, 0.3228000, 0.8323000, 0.3228000, 0.8323000, 0.3228000, 0.8323000, 0.3228000, 0.8323000], [0.3228000, 0.8323000, 0.3228000, 0.8323000, 0.3228000, 0.8323000, 0.3228000, 0.8323000, 0.3367437, 1.7310583, 0.3228000, 0.8323000, 0.3228000, 0.8323000, 0.3228000, 0.8323000, 0.3228000, 0.8323000], [0.3228000, 0.8323000, 0.3228000, 0.8323000, 0.3228000, 0.8323000, 0.3228000, 0.8323000, 0.3381375, 1.8208939, 0.3228000, 0.8323000, 0.3228000, 0.8323000, 0.3228000, 0.8323000, 0.3228000, 0.8323000], [0.3228000, 0.8323000, 0.3228000, 0.8323000, 0.3228000, 0.8323000, 0.3228000, 0.8323000, 0.3420962, 2.0760591, 0.3228000, 0.8323000, 0.3228000, 0.8323000, 0.3228000, 0.8323000, 0.3228000, 0.8323000], [0.3228000, 0.8323000, 0.3228000, 0.8323000, 0.3228000, 0.8323000, 0.3228000, 0.8323000, 0.3228000, 0.8323000, 0.3228000, 0.8323000, 0.3228000, 0.8323000, 0.3228000, 0.8323000, 0.3228000, 0.8323000]]]

Expected (Unparsed): [[[0.3228,0.8323,0.3228,0.8323,0.3228,0.8323,0.3228,0.8323,0.3228,0.8323,0.3228,0.8323,0.3228,0.8323,0.3228,0.8323,0.3228,0.8323],[0.3228,0.8323,0.3228,0.8323,0.3228,0.8323,0.3228,0.8323,0.34539749999999997,2.28884446,0.3228,0.8323,0.3228,0.8323,0.3228,0.8323,0.3228,0.8323],[0.3228,0.8323,0.3228,0.8323,0.3228,0.8323,0.3228,0.8323,0.33674374999999995,1.73105835,0.3228,0.8323,0.3228,0.8323,0.3228,0.8323,0.3228,0.8323],[0.3228,0.8323,0.3228,0.8323,0.3228,0.8323,0.3228,0.8323,0.3381375,1.8208939000000002,0.3228,0.8323,0.3228,0.8323,0.3228,0.8323,0.3228,0.8323],[0.3228,0.8323,0.3228,0.8323,0.3228,0.8323,0.3228,0.8323,0.34209625,2.07605909,0.3228,0.8323,0.3228,0.8323,0.3228,0.8323,0.3228,0.8323],[0.3228,0.8323,0.3228,0.8323,0.3228,0.8323,0.3228,0.8323,0.3228,0.8323,0.3228,0.8323,0.3228,0.8323,0.3228,0.8323,0.3228,0.8323]]]

Actual:   [[[0.3228, 0.8323, 0.3228, 0.8323, 0.3228, 0.8323, 0.3228, 0.8323, 0.3228, 0.8323, 0.3228, 0.8323, 0.3228, 0.8323, 0.3228, 0.8323, 0.3228, 0.8323], [0.3228, 0.8323, 0.3228, 0.8323, 0.3228, 0.8323, 0.3228, 0.8323, 0.3454, 2.2889, 0.3228, 0.8323, 0.3228, 0.8323, 0.3228, 0.8323, 0.3228, 0.8323], [0.3228, 0.8323, 0.3228, 0.8323, 0.3228, 0.8323, 0.3228, 0.8323, 0.3368, 1.7311, 0.3228, 0.8323, 0.3228, 0.8323, 0.3228, 0.8323, 0.3228, 0.8323], [0.3228, 0.8323, 0.3228, 0.8323, 0.3228, 0.8323, 0.3228, 0.8323, 0.3382, 1.8209, 0.3228, 0.8323, 0.3228, 0.8323, 0.3228, 0.8323, 0.3228, 0.8323], [0.3228, 0.8323, 0.3228, 0.8323, 0.3228, 0.8323, 0.3228, 0.8323, 0.3421, 2.0761, 0.3228, 0.8323, 0.3228, 0.8323, 0.3228, 0.8323, 0.3228, 0.8323], [0.3228, 0.8323, 0.3228, 0.8323, 0.3228, 0.8323, 0.3228, 0.8323, 0.3228, 0.8323, 0.3228, 0.8323, 0.3228, 0.8323, 0.3228, 0.8323, 0.3228, 0.8323]]]

Expected: [[[0.3228, 0.8323, 0.3228, 0.8323, 0.3228, 0.8323, 0.3228, 0.8323, 0.3228, 0.8323, 0.3228, 0.8323, 0.3228, 0.8323, 0.3228, 0.8323, 0.3228, 0.8323], [0.3228, 0.8323, 0.3228, 0.8323, 0.3228, 0.8323, 0.3228, 0.8323, 0.3454, 2.2889, 0.3228, 0.8323, 0.3228, 0.8323, 0.3228, 0.8323, 0.3228, 0.8323], [0.3228, 0.8323, 0.3228, 0.8323, 0.3228, 0.8323, 0.3228, 0.8323, 0.3368, 1.7311, 0.3228, 0.8323, 0.3228, 0.8323, 0.3228, 0.8323, 0.3228, 0.8323], [0.3228, 0.8323, 0.3228, 0.8323, 0.3228, 0.8323, 0.3228, 0.8323, 0.3382, 1.8209, 0.3228, 0.8323, 0.3228, 0.8323, 0.3228, 0.8323, 0.3228, 0.8323], [0.3228, 0.8323, 0.3228, 0.8323, 0.3228, 0.8323, 0.3228, 0.8323, 0.3421, 2.0761, 0.3228, 0.8323, 0.3228, 0.8323, 0.3228, 0.8323, 0.3228, 0.8323], [0.3228, 0.8323, 0.3228, 0.8323, 0.3228, 0.8323, 0.3228, 0.8323, 0.3228, 0.8323, 0.3228, 0.8323, 0.3228, 0.8323, 0.3228, 0.8323, 0.3228, 0.8323]]]