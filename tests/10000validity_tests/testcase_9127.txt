import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Sub48231 = tf.keras.layers.Input(shape=([3]))
in1Sub48231 = tf.keras.layers.Input(shape=([3]))
in0Con3806 = tf.keras.layers.Input(shape=([2, 2]))
in0Con58917 = tf.keras.layers.Input(shape=([2, 1]))

Sub48231 = keras.layers.Subtract(name = 'Sub48231', )([in0Sub48231,in1Sub48231])
Res55983 = keras.layers.Reshape((3, 1), name = 'Res55983', )(Sub48231)
Res59924 = keras.layers.Reshape((3, 1, 1), name = 'Res59924', )(Res55983)
Res94216 = keras.layers.Reshape((3, 1, 1, 1), name = 'Res94216', )(Res59924)
Cro78490 = keras.layers.Cropping3D(cropping=((2, 0), (0, 0), (0, 0)), name = 'Cro78490', )(Res94216)
Res7545 = keras.layers.Reshape((1, 1, 1), name = 'Res7545', )(Cro78490)
Res77425 = keras.layers.Reshape((1, 1), name = 'Res77425', )(Res7545)
Zer51877 = keras.layers.ZeroPadding1D(padding=((1, 0)), name = 'Zer51877', )(Res77425)
Con3806 = keras.layers.Concatenate(axis=2, name = 'Con3806', )([Zer51877,in0Con3806])
Con58917 = keras.layers.Conv1D(3, (1),strides=(1), padding='valid', dilation_rate=(1), name = 'Con58917', )(in0Con58917)
Add76492 = keras.layers.Add(name = 'Add76492', )([Con3806,Con58917])
Res80109 = keras.layers.Reshape((2, 3, 1), name = 'Res80109', )(Add76492)
Ave52283 = keras.layers.AveragePooling2D(pool_size=(1, 2), strides=(6, 1), padding='valid', name = 'Ave52283', )(Res80109)
model = tf.keras.models.Model(inputs=[in0Sub48231,in1Sub48231,in0Con3806,in0Con58917], outputs=Ave52283)
w = model.get_layer('Con58917').get_weights() 
w[0] = np.array([[[0.2241, 0.248, 0.5981]]])
w[1] = np.array([0, 0, 0])
model.get_layer('Con58917').set_weights(w) 
in0Sub48231 = tf.constant([[0.9788, 0.3001, 0.6578]])
in1Sub48231 = tf.constant([[0.9687, 0.1103, 0.399]])
in0Con3806 = tf.constant([[[0.0889, 0.5241], [0.9448, 0.9132]]])
in0Con58917 = tf.constant([[[0.1012], [0.5571]]])
print (np.array2string(model.predict([in0Sub48231,in1Sub48231,in0Con3806,in0Con58917],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Ave52283.png')

LSub48231 = subtract_layer([[0.9788, 0.3001, 0.6578]], [[0.9687, 0.1103, 0.399]], Sub48231), 
LRes55983 = reshape_layer(Sub48231, [3, 1], Res55983), 
LRes59924 = reshape_layer(Res55983, [3, 1, 1], Res59924), 
LRes94216 = reshape_layer(Res59924, [3, 1, 1, 1], Res94216), 
LCro78490 = cropping3D_layer(Res94216, 2, 0, 0, 0, 0, 0, Cro78490), 
LRes7545 = reshape_layer(Cro78490, [1, 1, 1], Res7545), 
LRes77425 = reshape_layer(Res7545, [1, 1], Res77425), 
LZer51877 = zero_padding1D_layer(Res77425, 1, 0, Zer51877), 
LCon3806 = concatenate_layer([Zer51877,[[[0.0889, 0.5241], [0.9448, 0.9132]]]], 2, Con3806), 
LCon58917 = conv1D_layer([[[0.1012], [0.5571]]], 1,[[[0.2241, 0.248, 0.5981]]],[0, 0, 0], 1, false, 1, Con58917), 
LAdd76492 = add_layer([Con3806,Con58917], Add76492), 
LRes80109 = reshape_layer(Add76492, [2, 3, 1], Res80109), 
LAve52283 = average_pooling2D_layer(Res80109, 1, 2, 6, 1, false, Ave52283), 
exec_layers([LSub48231,LRes55983,LRes59924,LRes94216,LCro78490,LRes7545,LRes77425,LZer51877,LCon3806,LCon58917,LAdd76492,LRes80109,LAve52283],["Sub48231","Res55983","Res59924","Res94216","Cro78490","Res7545","Res77425","Zer51877","Con3806","Con58917","Add76492","Res80109","Ave52283"],Ave52283,"Ave52283")

Actual (Unparsed): [[[[0.0683383], [0.3493127]]]]

Expected (Unparsed): [[[[0.06833826],[0.34931266]]]]

Actual:   [[[[0.0684], [0.3494]]]]

Expected: [[[[0.0684], [0.3494]]]]