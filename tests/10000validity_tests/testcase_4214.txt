import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Max21707 = tf.keras.layers.Input(shape=([2, 2]))
in0Up_21195 = tf.keras.layers.Input(shape=([4, 4]))
in0Con1650 = tf.keras.layers.Input(shape=([4, 4]))
in0Con8234 = tf.keras.layers.Input(shape=([4, 8, 1, 3]))
in0Con15096 = tf.keras.layers.Input(shape=([2, 2, 1, 2]))
in0Mul21471 = tf.keras.layers.Input(shape=([2, 2, 2]))
in1Mul21471 = tf.keras.layers.Input(shape=([2, 2, 2]))
in0Con32409 = tf.keras.layers.Input(shape=([4, 8, 2]))
in0Glo69333 = tf.keras.layers.Input(shape=([1, 2, 2, 1]))
in0Con76713 = tf.keras.layers.Input(shape=([4, 8, 3]))

Max21707 = keras.layers.MaxPool1D(pool_size=(2), strides=(2), padding='same', name = 'Max21707', )(in0Max21707)
Res72743 = keras.layers.Reshape((1, 2, 1), name = 'Res72743', )(Max21707)
Res90785 = keras.layers.Reshape((1, 2, 1, 1), name = 'Res90785', )(Res72743)
Up_61787 = keras.layers.UpSampling3D(size=(2, 2, 2), name = 'Up_61787', )(Res90785)
Res20057 = keras.layers.Reshape((2, 4, 2), name = 'Res20057', )(Up_61787)
Res38776 = keras.layers.Reshape((2, 8), name = 'Res38776', )(Res20057)
Zer42855 = keras.layers.ZeroPadding1D(padding=((2, 0)), name = 'Zer42855', )(Res38776)
Up_21195 = keras.layers.UpSampling1D(size=(1), name = 'Up_21195', )(in0Up_21195)
Con1650 = keras.layers.Concatenate(axis=2, name = 'Con1650', )([Up_21195,in0Con1650])
Add69857 = keras.layers.Add(name = 'Add69857', )([Zer42855,Con1650])
Res63987 = keras.layers.Reshape((4, 8, 1), name = 'Res63987', )(Add69857)
Res84148 = keras.layers.Reshape((4, 8, 1, 1), name = 'Res84148', )(Res63987)
Con8234 = keras.layers.Concatenate(axis=4, name = 'Con8234', )([Res84148,in0Con8234])
Con15096 = keras.layers.Conv3D(4, (2, 1, 1),strides=(1, 1, 1), padding='valid', dilation_rate=(1, 1, 1), name = 'Con15096', )(in0Con15096)
Zer88164 = keras.layers.ZeroPadding3D(padding=((3, 0), (6, 0), (0, 0)), name = 'Zer88164', )(Con15096)
Max11071 = keras.layers.Maximum(name = 'Max11071', )([Con8234,Zer88164])
Res60493 = keras.layers.Reshape((4, 8, 4), name = 'Res60493', )(Max11071)
Mul21471 = keras.layers.Multiply(name = 'Mul21471', )([in0Mul21471,in1Mul21471])
Zer25126 = keras.layers.ZeroPadding2D(padding=((2, 0), (6, 0)), name = 'Zer25126', )(Mul21471)
Con32409 = keras.layers.Concatenate(axis=3, name = 'Con32409', )([Zer25126,in0Con32409])
Max478 = keras.layers.Maximum(name = 'Max478', )([Res60493,Con32409])
Glo69333 = keras.layers.GlobalAveragePooling3D(name = 'Glo69333', )(in0Glo69333)
Res97735 = keras.layers.Reshape((1, 1), name = 'Res97735', )(Glo69333)
Res41381 = keras.layers.Reshape((1, 1, 1), name = 'Res41381', )(Res97735)
Cro18603 = keras.layers.Cropping2D(cropping=((0, 0), (0, 0)), name = 'Cro18603', )(Res41381)
Zer52907 = keras.layers.ZeroPadding2D(padding=((3, 0), (7, 0)), name = 'Zer52907', )(Cro18603)
Con76713 = keras.layers.Concatenate(axis=3, name = 'Con76713', )([Zer52907,in0Con76713])
Max61004 = keras.layers.Maximum(name = 'Max61004', )([Max478,Con76713])
model = tf.keras.models.Model(inputs=[in0Max21707,in0Up_21195,in0Con1650,in0Con8234,in0Con15096,in0Mul21471,in1Mul21471,in0Con32409,in0Glo69333,in0Con76713], outputs=Max61004)
w = model.get_layer('Con15096').get_weights() 
w[0] = np.array([[[[[0.5326, 0.8313, 0.8126, 0.5879], [0.5475, 0.4474, 0.0118, 0.7926]]]], [[[[0.0876, 0.3287, 0.0645, 0.753], [0.6969, 0.4229, 0.2766, 0.5504]]]]])
w[1] = np.array([0, 0, 0, 0])
model.get_layer('Con15096').set_weights(w) 
in0Max21707 = tf.constant([[[1.2239, 1.2745], [1.2602, 1.261]]])
in0Up_21195 = tf.constant([[[1.685, 1.1317, 1.6992, 1.3415], [1.6263, 1.3962, 1.1095, 1.2059], [1.8514, 1.4579, 1.967, 1.7715], [1.3696, 1.1097, 1.6648, 1.329]]])
in0Con1650 = tf.constant([[[0.4714, 0.2187, 0.6209, 0.9999], [0.4831, 0.0133, 0.214, 0.854], [0.0349, 0.7826, 0.4819, 0.3654], [0.4484, 0.6967, 0.7793, 0.2104]]])
in0Con8234 = tf.constant([[[[[0.0023, 0.3768, 0.4231]], [[0.1937, 0.0087, 0.6086]], [[0.7438, 0.3819, 0.9115]], [[0.8488, 0.7584, 0.1875]], [[0.4221, 0.6403, 0.1875]], [[0.9285, 0.7918, 0.9467]], [[0.258, 0.6181, 0.7242]], [[0.4422, 0.7154, 0.9435]]], [[[0.9121, 0.6288, 0.513]], [[0.6233, 0.931, 0.3656]], [[0.6378, 0.3232, 0.1848]], [[0.9017, 0.6367, 0.5735]], [[0.0929, 0.7826, 0.5403]], [[0.6835, 0.7305, 0.0661]], [[0.045, 0.4719, 0.6914]], [[0.126, 0.0118, 0.7494]]], [[[0.0291, 0.9505, 0.5683]], [[0.8734, 0.7489, 0.247]], [[0.3581, 0.3755, 0.4747]], [[0.8547, 0.7707, 0.6092]], [[0.5942, 0.9373, 0.3098]], [[0.6075, 0.3983, 0.1755]], [[0.6069, 0.8504, 0.473]], [[0.7152, 0.9733, 0.4451]]], [[[0.8775, 0.9386, 0.7961]], [[0.2974, 0.4473, 0.2206]], [[0.5337, 0.2159, 0.8977]], [[0.7081, 0.5403, 0.529]], [[0.2727, 0.8194, 0.4594]], [[0.7215, 0.6816, 0.5961]], [[0.4673, 0.7972, 0.1975]], [[0.2627, 0.2151, 0.5644]]]]])
in0Con15096 = tf.constant([[[[[0.471, 0.8408]], [[0.2411, 0.3408]]], [[[0.7337, 0.2194]], [[0.6306, 0.0865]]]]])
in0Mul21471 = tf.constant([[[[0.1671, 0.3765], [0.4041, 0.0383]], [[0.2192, 0.1657], [0.6223, 0.1803]]]])
in1Mul21471 = tf.constant([[[[0.433, 0.9209], [0.1288, 0.0931]], [[0.1219, 0.8558], [0.3323, 0.5205]]]])
in0Con32409 = tf.constant([[[[0.7616, 0.8158], [0.2154, 0.3317], [0.5752, 0.9494], [0.4731, 0.605], [0.7661, 0.2978], [0.1318, 0.7675], [0.6928, 0.8328], [0.5318, 0.1643]], [[0.9352, 0.7051], [0.7103, 0.5528], [0.3195, 0.5808], [0.4585, 0.9753], [0.2148, 0.9487], [0.9596, 0.2514], [0.56, 0.5279], [0.5275, 0.6721]], [[0.0221, 0.9479], [0.6712, 0.912], [0.4055, 0.9409], [0.6941, 0.135], [0.9311, 0.3917], [0.3046, 0.7641], [0.2898, 0.7238], [0.2635, 0.4084]], [[0.435, 0.263], [0.9188, 0.9987], [0.9263, 0.4196], [0.5945, 0.2667], [0.2592, 0.7555], [0.1866, 0.3244], [0.0269, 0.2616], [0.9955, 0.2464]]]])
in0Glo69333 = tf.constant([[[[[1.5551], [1.0608]], [[1.2892], [1.3036]]]]])
in0Con76713 = tf.constant([[[[0.3183, 0.3803, 0.3851], [0.095, 0.7969, 0.8064], [0.2851, 0.7334, 0.5659], [0.8366, 0.9021, 0.7767], [0.6391, 0.2431, 0.4518], [0.6927, 0.1834, 0.425], [0.5024, 0.0321, 0.3422], [0.1167, 0.3795, 0.374]], [[0.0052, 0.6054, 0.1579], [0.4764, 0.5304, 0.1909], [0.5021, 0.1259, 0.3512], [0.6104, 0.9905, 0.7389], [0.4709, 0.5461, 0.5871], [0.249, 0.0816, 0.1358], [0.6085, 0.1887, 0.9316], [0.6138, 0.8737, 0.1625]], [[0.607, 0.8252, 0.724], [0.1017, 0.5982, 0.3751], [0.2511, 0.7868, 0.8728], [0.6023, 0.3817, 0.1314], [0.6936, 0.4006, 0.4342], [0.631, 0.5872, 0.1484], [0.3825, 0.1969, 0.6944], [0.6546, 0.3426, 0.3222]], [[0.2137, 0.0787, 0.7322], [0.1514, 0.2907, 0.2426], [0.1406, 0.567, 0.4951], [0.6159, 0.1999, 0.845], [0.981, 0.5248, 0.6452], [0.7809, 0.5314, 0.8142], [0.3153, 0.4439, 0.9493], [0.2742, 0.0597, 0.876]]]])
print (np.array2string(model.predict([in0Max21707,in0Up_21195,in0Con1650,in0Con8234,in0Con15096,in0Mul21471,in1Mul21471,in0Con32409,in0Glo69333,in0Con76713],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Max61004.png')

LMax21707 = max_pool1D_layer([[[1.2239, 1.2745], [1.2602, 1.261]]], 2, 2, true, Max21707), 
LRes72743 = reshape_layer(Max21707, [1, 2, 1], Res72743), 
LRes90785 = reshape_layer(Res72743, [1, 2, 1, 1], Res90785), 
LUp_61787 = up_sampling3D_layer(Res90785, 2, 2, 2, Up_61787), 
LRes20057 = reshape_layer(Up_61787, [2, 4, 2], Res20057), 
LRes38776 = reshape_layer(Res20057, [2, 8], Res38776), 
LZer42855 = zero_padding1D_layer(Res38776, 2, 0, Zer42855), 
LUp_21195 = up_sampling1D_layer([[[1.685, 1.1317, 1.6992, 1.3415], [1.6263, 1.3962, 1.1095, 1.2059], [1.8514, 1.4579, 1.967, 1.7715], [1.3696, 1.1097, 1.6648, 1.329]]], 1, Up_21195), 
LCon1650 = concatenate_layer([Up_21195,[[[0.4714, 0.2187, 0.6209, 0.9999], [0.4831, 0.0133, 0.214, 0.854], [0.0349, 0.7826, 0.4819, 0.3654], [0.4484, 0.6967, 0.7793, 0.2104]]]], 2, Con1650), 
LAdd69857 = add_layer([Zer42855,Con1650], Add69857), 
LRes63987 = reshape_layer(Add69857, [4, 8, 1], Res63987), 
LRes84148 = reshape_layer(Res63987, [4, 8, 1, 1], Res84148), 
LCon8234 = concatenate_layer([Res84148,[[[[[0.0023, 0.3768, 0.4231]], [[0.1937, 0.0087, 0.6086]], [[0.7438, 0.3819, 0.9115]], [[0.8488, 0.7584, 0.1875]], [[0.4221, 0.6403, 0.1875]], [[0.9285, 0.7918, 0.9467]], [[0.258, 0.6181, 0.7242]], [[0.4422, 0.7154, 0.9435]]], [[[0.9121, 0.6288, 0.513]], [[0.6233, 0.931, 0.3656]], [[0.6378, 0.3232, 0.1848]], [[0.9017, 0.6367, 0.5735]], [[0.0929, 0.7826, 0.5403]], [[0.6835, 0.7305, 0.0661]], [[0.045, 0.4719, 0.6914]], [[0.126, 0.0118, 0.7494]]], [[[0.0291, 0.9505, 0.5683]], [[0.8734, 0.7489, 0.247]], [[0.3581, 0.3755, 0.4747]], [[0.8547, 0.7707, 0.6092]], [[0.5942, 0.9373, 0.3098]], [[0.6075, 0.3983, 0.1755]], [[0.6069, 0.8504, 0.473]], [[0.7152, 0.9733, 0.4451]]], [[[0.8775, 0.9386, 0.7961]], [[0.2974, 0.4473, 0.2206]], [[0.5337, 0.2159, 0.8977]], [[0.7081, 0.5403, 0.529]], [[0.2727, 0.8194, 0.4594]], [[0.7215, 0.6816, 0.5961]], [[0.4673, 0.7972, 0.1975]], [[0.2627, 0.2151, 0.5644]]]]]], 4, Con8234), 
LCon15096 = conv3D_layer([[[[[0.471, 0.8408]], [[0.2411, 0.3408]]], [[[0.7337, 0.2194]], [[0.6306, 0.0865]]]]], 2, 1, 1,[[[[[0.5326, 0.8313, 0.8126, 0.5879], [0.5475, 0.4474, 0.0118, 0.7926]]]], [[[[0.0876, 0.3287, 0.0645, 0.753], [0.6969, 0.4229, 0.2766, 0.5504]]]]],[0, 0, 0, 0], 1, 1, 1, false, 1, 1, 1, Con15096), 
LZer88164 = zero_padding3D_layer(Con15096, 3, 0, 6, 0, 0, 0, Zer88164), 
LMax11071 = maximum_layer([Con8234,Zer88164], Max11071), 
LRes60493 = reshape_layer(Max11071, [4, 8, 4], Res60493), 
LMul21471 = multiply_layer([[[[[0.1671, 0.3765], [0.4041, 0.0383]], [[0.2192, 0.1657], [0.6223, 0.1803]]]], [[[[0.433, 0.9209], [0.1288, 0.0931]], [[0.1219, 0.8558], [0.3323, 0.5205]]]]], Mul21471), 
LZer25126 = zero_padding2D_layer(Mul21471, 2, 0, 6, 0, Zer25126), 
LCon32409 = concatenate_layer([Zer25126,[[[[0.7616, 0.8158], [0.2154, 0.3317], [0.5752, 0.9494], [0.4731, 0.605], [0.7661, 0.2978], [0.1318, 0.7675], [0.6928, 0.8328], [0.5318, 0.1643]], [[0.9352, 0.7051], [0.7103, 0.5528], [0.3195, 0.5808], [0.4585, 0.9753], [0.2148, 0.9487], [0.9596, 0.2514], [0.56, 0.5279], [0.5275, 0.6721]], [[0.0221, 0.9479], [0.6712, 0.912], [0.4055, 0.9409], [0.6941, 0.135], [0.9311, 0.3917], [0.3046, 0.7641], [0.2898, 0.7238], [0.2635, 0.4084]], [[0.435, 0.263], [0.9188, 0.9987], [0.9263, 0.4196], [0.5945, 0.2667], [0.2592, 0.7555], [0.1866, 0.3244], [0.0269, 0.2616], [0.9955, 0.2464]]]]], 3, Con32409), 
LMax478 = maximum_layer([Res60493,Con32409], Max478), 
LGlo69333 = global_average_pooling3D_layer([[[[[1.5551], [1.0608]], [[1.2892], [1.3036]]]]], Glo69333), 
LRes97735 = reshape_layer(Glo69333, [1, 1], Res97735), 
LRes41381 = reshape_layer(Res97735, [1, 1, 1], Res41381), 
LCro18603 = cropping2D_layer(Res41381, 0, 0, 0, 0, Cro18603), 
LZer52907 = zero_padding2D_layer(Cro18603, 3, 0, 7, 0, Zer52907), 
LCon76713 = concatenate_layer([Zer52907,[[[[0.3183, 0.3803, 0.3851], [0.095, 0.7969, 0.8064], [0.2851, 0.7334, 0.5659], [0.8366, 0.9021, 0.7767], [0.6391, 0.2431, 0.4518], [0.6927, 0.1834, 0.425], [0.5024, 0.0321, 0.3422], [0.1167, 0.3795, 0.374]], [[0.0052, 0.6054, 0.1579], [0.4764, 0.5304, 0.1909], [0.5021, 0.1259, 0.3512], [0.6104, 0.9905, 0.7389], [0.4709, 0.5461, 0.5871], [0.249, 0.0816, 0.1358], [0.6085, 0.1887, 0.9316], [0.6138, 0.8737, 0.1625]], [[0.607, 0.8252, 0.724], [0.1017, 0.5982, 0.3751], [0.2511, 0.7868, 0.8728], [0.6023, 0.3817, 0.1314], [0.6936, 0.4006, 0.4342], [0.631, 0.5872, 0.1484], [0.3825, 0.1969, 0.6944], [0.6546, 0.3426, 0.3222]], [[0.2137, 0.0787, 0.7322], [0.1514, 0.2907, 0.2426], [0.1406, 0.567, 0.4951], [0.6159, 0.1999, 0.845], [0.981, 0.5248, 0.6452], [0.7809, 0.5314, 0.8142], [0.3153, 0.4439, 0.9493], [0.2742, 0.0597, 0.876]]]]], 3, Con76713), 
LMax61004 = maximum_layer([Max478,Con76713], Max61004), 
exec_layers([LMax21707,LRes72743,LRes90785,LUp_61787,LRes20057,LRes38776,LZer42855,LUp_21195,LCon1650,LAdd69857,LRes63987,LRes84148,LCon8234,LCon15096,LZer88164,LMax11071,LRes60493,LMul21471,LZer25126,LCon32409,LMax478,LGlo69333,LRes97735,LRes41381,LCro18603,LZer52907,LCon76713,LMax61004],["Max21707","Res72743","Res90785","Up_61787","Res20057","Res38776","Zer42855","Up_21195","Con1650","Add69857","Res63987","Res84148","Con8234","Con15096","Zer88164","Max11071","Res60493","Mul21471","Zer25126","Con32409","Max478","Glo69333","Res97735","Res41381","Cro18603","Zer52907","Con76713","Max61004"],Max61004,"Max61004")

Actual (Unparsed): [[[[1.6849999, 0.3183000, 0.7616000, 0.8158000], [1.1317000, 0.1937000, 0.7969000, 0.8064000], [1.6992000, 0.7438000, 0.7334000, 0.9494000], [1.3415000, 0.8488000, 0.9021000, 0.7767000], [0.4714000, 0.6391000, 0.7661000, 0.4518000], [0.2187000, 0.9285000, 0.7918000, 0.9467000], [0.6209000, 0.5024000, 0.6928000, 0.8328000], [0.9999000, 0.4422000, 0.7154000, 0.9435000]], [[1.6263000, 0.9121000, 0.9352000, 0.7051000], [1.3961999, 0.6233000, 0.9310000, 0.5528000], [1.1095001, 0.6378000, 0.3232000, 0.5808000], [1.2059000, 0.9017000, 0.9905000, 0.9753000], [0.4831000, 0.4709000, 0.7826000, 0.9487000], [0.0133000, 0.6835000, 0.9596000, 0.2514000], [0.2140000, 0.6085000, 0.5600000, 0.9316000], [0.8540000, 0.6138000, 0.8737000, 0.7494000]], [[3.1116000, 0.6070000, 0.9505000, 0.9479000], [2.7181001, 0.8734000, 0.7489000, 0.9120000], [3.2272000, 0.3581000, 0.7868000, 0.9409000], [3.0317000, 0.8547000, 0.7707000, 0.6092000], [1.3094000, 0.6936000, 0.9373000, 0.4342000], [2.0571000, 0.6310000, 0.5872000, 0.7641000], [1.7564000, 0.6069000, 0.8504000, 0.7238000], [1.6399000, 0.7152000, 0.9733000, 0.4451000]], [[2.6298001, 0.8775000, 0.9386000, 0.7961000], [2.3699000, 0.2974000, 0.9188000, 0.9987000], [2.9250001, 0.5337000, 0.9263000, 0.8977000], [2.5892000, 0.7081000, 0.5945000, 0.8450000], [1.7229000, 0.9810000, 0.8194000, 0.7555000], [1.9712000, 0.7809000, 0.6816000, 0.8142000], [2.0538000, 1.1016676, 0.7972000, 1.6165528], [1.4849000, 0.5967594, 0.9955000, 0.9343121]]]]

Expected (Unparsed): [[[[1.685,0.3183,0.7616,0.8158],[1.1317,0.1937,0.7969,0.8064],[1.6992,0.7438,0.7334,0.9494],[1.3415,0.8488,0.9021,0.7767],[0.4714,0.6391,0.7661,0.4518],[0.2187,0.9285,0.7918,0.9467],[0.6209,0.5024,0.6928,0.8328],[0.9999,0.4422,0.7154,0.9435]],[[1.6263,0.9121,0.9352,0.7051],[1.3962,0.6233,0.931,0.5528],[1.1095,0.6378,0.3232,0.5808],[1.2059,0.9017,0.9905,0.9753],[0.4831,0.4709,0.7826,0.9487],[0.0133,0.6835,0.9596,0.2514],[0.214,0.6085,0.56,0.9316],[0.854,0.6138,0.8737,0.7494]],[[3.1116,0.607,0.9505,0.9479],[2.7180999999999997,0.8734,0.7489,0.912],[3.2272,0.3581,0.7868,0.9409],[3.0317,0.8547,0.7707,0.6092],[1.3094,0.6936,0.9373,0.4342],[2.0571,0.631,0.5872,0.7641],[1.7564,0.6069,0.8504,0.7238],[1.6399,0.7152,0.9733,0.4451]],[[2.6298,0.8775,0.9386,0.7961],[2.3699,0.2974,0.9188,0.9987],[2.925,0.5337,0.9263,0.8977],[2.5892,0.7081,0.5945,0.845],[1.7229,0.981,0.8194,0.7555],[1.9712,0.7809,0.6816,0.8142],[2.0538,1.1016676699999999,0.7972,1.6165528400000002],[1.4848999999999999,0.59675942,0.9955,0.93431217]]]]

Actual:   [[[[1.685, 0.3183, 0.7616, 0.8158], [1.1317, 0.1937, 0.7969, 0.8064], [1.6992, 0.7438, 0.7334, 0.9494], [1.3415, 0.8488, 0.9021, 0.7767], [0.4714, 0.6391, 0.7661, 0.4518], [0.2187, 0.9285, 0.7918, 0.9467], [0.6209, 0.5024, 0.6928, 0.8328], [0.9999, 0.4422, 0.7154, 0.9435]], [[1.6263, 0.9121, 0.9352, 0.7051], [1.3962, 0.6233, 0.931, 0.5528], [1.1096, 0.6378, 0.3232, 0.5808], [1.2059, 0.9017, 0.9905, 0.9753], [0.4831, 0.4709, 0.7826, 0.9487], [0.0133, 0.6835, 0.9596, 0.2514], [0.214, 0.6085, 0.56, 0.9316], [0.854, 0.6138, 0.8737, 0.7494]], [[3.1116, 0.607, 0.9505, 0.9479], [2.7182, 0.8734, 0.7489, 0.912], [3.2272, 0.3581, 0.7868, 0.9409], [3.0317, 0.8547, 0.7707, 0.6092], [1.3094, 0.6936, 0.9373, 0.4342], [2.0571, 0.631, 0.5872, 0.7641], [1.7564, 0.6069, 0.8504, 0.7238], [1.6399, 0.7152, 0.9733, 0.4451]], [[2.6299, 0.8775, 0.9386, 0.7961], [2.3699, 0.2974, 0.9188, 0.9987], [2.9251, 0.5337, 0.9263, 0.8977], [2.5892, 0.7081, 0.5945, 0.845], [1.7229, 0.981, 0.8194, 0.7555], [1.9712, 0.7809, 0.6816, 0.8142], [2.0538, 1.1017, 0.7972, 1.6166], [1.4849, 0.5968, 0.9955, 0.9344]]]]

Expected: [[[[1.685, 0.3183, 0.7616, 0.8158], [1.1317, 0.1937, 0.7969, 0.8064], [1.6992, 0.7438, 0.7334, 0.9494], [1.3415, 0.8488, 0.9021, 0.7767], [0.4714, 0.6391, 0.7661, 0.4518], [0.2187, 0.9285, 0.7918, 0.9467], [0.6209, 0.5024, 0.6928, 0.8328], [0.9999, 0.4422, 0.7154, 0.9435]], [[1.6263, 0.9121, 0.9352, 0.7051], [1.3962, 0.6233, 0.931, 0.5528], [1.1095, 0.6378, 0.3232, 0.5808], [1.2059, 0.9017, 0.9905, 0.9753], [0.4831, 0.4709, 0.7826, 0.9487], [0.0133, 0.6835, 0.9596, 0.2514], [0.214, 0.6085, 0.56, 0.9316], [0.854, 0.6138, 0.8737, 0.7494]], [[3.1116, 0.607, 0.9505, 0.9479], [2.7181, 0.8734, 0.7489, 0.912], [3.2272, 0.3581, 0.7868, 0.9409], [3.0317, 0.8547, 0.7707, 0.6092], [1.3094, 0.6936, 0.9373, 0.4342], [2.0571, 0.631, 0.5872, 0.7641], [1.7564, 0.6069, 0.8504, 0.7238], [1.6399, 0.7152, 0.9733, 0.4451]], [[2.6298, 0.8775, 0.9386, 0.7961], [2.3699, 0.2974, 0.9188, 0.9987], [2.925, 0.5337, 0.9263, 0.8977], [2.5892, 0.7081, 0.5945, 0.845], [1.7229, 0.981, 0.8194, 0.7555], [1.9712, 0.7809, 0.6816, 0.8142], [2.0538, 1.1017, 0.7972, 1.6166], [1.4849, 0.5968, 0.9955, 0.9344]]]]