import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Glo98232 = tf.keras.layers.Input(shape=([1, 1, 2, 2]))
in0Con49584 = tf.keras.layers.Input(shape=([1]))
in0Lay69659 = tf.keras.layers.Input(shape=([3]))

Glo98232 = keras.layers.GlobalAveragePooling3D(name = 'Glo98232', )(in0Glo98232)
Con49584 = keras.layers.Concatenate(axis=1, name = 'Con49584', )([Glo98232,in0Con49584])
Lay69659 = keras.layers.LayerNormalization(axis=1, epsilon=1.5679557645595739, name = 'Lay69659', )(in0Lay69659)
Max10567 = keras.layers.Maximum(name = 'Max10567', )([Con49584,Lay69659])
Res78584 = keras.layers.Reshape((3, 1), name = 'Res78584', )(Max10567)
Res6003 = keras.layers.Reshape((3, 1, 1), name = 'Res6003', )(Res78584)
Con13445 = keras.layers.Conv2DTranspose(2, (1, 1),strides=(1, 11), padding='same', name = 'Con13445', )(Res6003)
Res59240 = keras.layers.Reshape((3, 22), name = 'Res59240', )(Con13445)
Con98875 = keras.layers.Conv1D(2, (3),strides=(1), padding='valid', dilation_rate=(1), name = 'Con98875', )(Res59240)
model = tf.keras.models.Model(inputs=[in0Glo98232,in0Con49584,in0Lay69659], outputs=Con98875)
w = model.get_layer('Con13445').get_weights() 
w[0] = np.array([[[[0.5425], [0.0638]]]])
w[1] = np.array([0, 0])
model.get_layer('Con13445').set_weights(w) 
w = model.get_layer('Con98875').get_weights() 
w[0] = np.array([[[0.3191, 0.6785], [0.7285, 0.6672], [0.3948, 0.9643], [0.2152, 0.3997], [0.5712, 0.5598], [0.5809, 0.4962], [0.0072, 0.982], [0.6338, 0.8259], [0.2806, 0.3989], [0.1598, 0.1276], [0.6702, 0.2617], [0.6378, 0.8466], [0.3033, 0.9415], [0.3311, 0.7282], [0.7877, 0.088], [0.3744, 0.394], [0.3684, 0.9179], [0.3532, 0.1893], [0.2211, 0.5349], [0.3964, 0.5703], [0.2296, 0.6854], [0.9905, 0.1725]], [[0.4789, 0.0628], [0.5623, 0.4939], [0.7415, 0.3857], [0.3764, 0.8152], [0.4341, 0.9982], [0.4446, 0.5797], [0.8786, 0.6657], [0.9564, 0.9589], [0.2125, 0.5719], [0.2035, 0.7433], [0.9667, 0.2651], [0.0945, 0.0127], [0.1474, 0.4426], [0.1339, 0.2659], [0.6475, 0.0196], [0.1744, 0.8175], [0.9451, 0.8806], [0.3416, 0.3095], [0.3435, 0.0817], [0.2781, 0.1217], [0.456, 0.0377], [0.2566, 0.3202]], [[0.246, 0.4087], [0.7725, 0.5332], [0.6952, 0.9794], [0.9395, 0.8068], [0.0922, 0.82], [0.3881, 0.0606], [0.0073, 0.4045], [0.3897, 0.2352], [0.2538, 0.1736], [0.6202, 0.6067], [0.5203, 0.2285], [0.3105, 0.0249], [0.9052, 0.4629], [0.5354, 0.0283], [0.2832, 0.4567], [0.0397, 0.8866], [0.2909, 0.8842], [0.3149, 0.6237], [0.7308, 0.0215], [0.6014, 0.9899], [0.3621, 0.1765], [0.1172, 0.1643]]])
w[1] = np.array([0, 0])
model.get_layer('Con98875').set_weights(w) 
in0Glo98232 = tf.constant([[[[[1.0695, 1.7688], [1.93, 1.6659]]]]])
in0Con49584 = tf.constant([[0.4007]])
in0Lay69659 = tf.constant([[1.8583, 1.1181, 1.9069]])
print (np.array2string(model.predict([in0Glo98232,in0Con49584,in0Lay69659],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Con98875.png')

LGlo98232 = global_average_pooling3D_layer([[[[[1.0695, 1.7688], [1.93, 1.6659]]]]], Glo98232), 
LCon49584 = concatenate_layer([Glo98232,[[0.4007]]], 1, Con49584), 
LLay69659 = layer_normalization_layer([[1.8583, 1.1181, 1.9069]], 1, 1.5679557645595739, Lay69659), 
LMax10567 = maximum_layer([Con49584,Lay69659], Max10567), 
LRes78584 = reshape_layer(Max10567, [3, 1], Res78584), 
LRes6003 = reshape_layer(Res78584, [3, 1, 1], Res6003), 
LCon13445 = conv2D_transpose_layer(Res6003, 1, 1,[[[[0.5425], [0.0638]]]],[0, 0], 1, 11, true, Con13445), 
LRes59240 = reshape_layer(Con13445, [3, 22], Res59240), 
LCon98875 = conv1D_layer(Res59240, 3,[[[0.3191, 0.6785], [0.7285, 0.6672], [0.3948, 0.9643], [0.2152, 0.3997], [0.5712, 0.5598], [0.5809, 0.4962], [0.0072, 0.982], [0.6338, 0.8259], [0.2806, 0.3989], [0.1598, 0.1276], [0.6702, 0.2617], [0.6378, 0.8466], [0.3033, 0.9415], [0.3311, 0.7282], [0.7877, 0.088], [0.3744, 0.394], [0.3684, 0.9179], [0.3532, 0.1893], [0.2211, 0.5349], [0.3964, 0.5703], [0.2296, 0.6854], [0.9905, 0.1725]], [[0.4789, 0.0628], [0.5623, 0.4939], [0.7415, 0.3857], [0.3764, 0.8152], [0.4341, 0.9982], [0.4446, 0.5797], [0.8786, 0.6657], [0.9564, 0.9589], [0.2125, 0.5719], [0.2035, 0.7433], [0.9667, 0.2651], [0.0945, 0.0127], [0.1474, 0.4426], [0.1339, 0.2659], [0.6475, 0.0196], [0.1744, 0.8175], [0.9451, 0.8806], [0.3416, 0.3095], [0.3435, 0.0817], [0.2781, 0.1217], [0.456, 0.0377], [0.2566, 0.3202]], [[0.246, 0.4087], [0.7725, 0.5332], [0.6952, 0.9794], [0.9395, 0.8068], [0.0922, 0.82], [0.3881, 0.0606], [0.0073, 0.4045], [0.3897, 0.2352], [0.2538, 0.1736], [0.6202, 0.6067], [0.5203, 0.2285], [0.3105, 0.0249], [0.9052, 0.4629], [0.5354, 0.0283], [0.2832, 0.4567], [0.0397, 0.8866], [0.2909, 0.8842], [0.3149, 0.6237], [0.7308, 0.0215], [0.6014, 0.9899], [0.3621, 0.1765], [0.1172, 0.1643]]],[0, 0], 1, false, 1, Con98875), 
exec_layers([LGlo98232,LCon49584,LLay69659,LMax10567,LRes78584,LRes6003,LCon13445,LRes59240,LCon98875],["Glo98232","Con49584","Lay69659","Max10567","Res78584","Res6003","Con13445","Res59240","Con98875"],Con98875,"Con98875")

Actual (Unparsed): [[[0.9103369, 0.8309754]]]

Expected (Unparsed): [[[0.910336891964,0.8309754360115]]]

Actual:   [[[0.9104, 0.831]]]

Expected: [[[0.9104, 0.831]]]