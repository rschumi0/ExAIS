import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Ave61511 = tf.keras.layers.Input(shape=([1, 1, 1, 1]))
in1Ave61511 = tf.keras.layers.Input(shape=([1, 1, 1, 1]))
in0Con58488 = tf.keras.layers.Input(shape=([1, 2]))
in0Con48391 = tf.keras.layers.Input(shape=([1, 1]))
in0Per12292 = tf.keras.layers.Input(shape=([3, 2]))

Ave61511 = keras.layers.Average(name = 'Ave61511', )([in0Ave61511,in1Ave61511])
Res2360 = keras.layers.Reshape((1, 1, 1), name = 'Res2360', )(Ave61511)
Res37780 = keras.layers.Reshape((1, 1), name = 'Res37780', )(Res2360)
Con58488 = keras.layers.Concatenate(axis=2, name = 'Con58488', )([Res37780,in0Con58488])
Con48391 = keras.layers.Conv1D(3, (1),strides=(1), padding='same', dilation_rate=(1), name = 'Con48391', )(in0Con48391)
Bat76887 = keras.layers.BatchNormalization(axis=2, epsilon=0.28440097198610215,  name = 'Bat76887', )(Con48391)
Mul79039 = keras.layers.Multiply(name = 'Mul79039', )([Con58488,Bat76887])
Res15554 = keras.layers.Reshape((1, 3, 1), name = 'Res15554', )(Mul79039)
Zer12343 = keras.layers.ZeroPadding2D(padding=((1, 0), (0, 0)), name = 'Zer12343', )(Res15554)
Per12292 = keras.layers.Permute((2,1), name = 'Per12292',)(in0Per12292)
Res60035 = keras.layers.Reshape((2, 3, 1), name = 'Res60035', )(Per12292)
PRe72471 = keras.layers.PReLU(name = 'PRe72471', )(Res60035)
Min67966 = keras.layers.Minimum(name = 'Min67966', )([Zer12343,PRe72471])
Res43547 = keras.layers.Reshape((2, 3, 1, 1), name = 'Res43547', )(Min67966)
Glo19439 = keras.layers.GlobalAveragePooling3D(name = 'Glo19439', )(Res43547)
model = tf.keras.models.Model(inputs=[in0Ave61511,in1Ave61511,in0Con58488,in0Con48391,in0Per12292], outputs=Glo19439)
w = model.get_layer('Con48391').get_weights() 
w[0] = np.array([[[0.3511, 0.648, 0.5356]]])
w[1] = np.array([0, 0, 0])
model.get_layer('Con48391').set_weights(w) 
w = model.get_layer('Bat76887').get_weights() 
w[0] = np.array([0.6322, 0.017, 0.3965])
w[1] = np.array([0.3399, 0.3073, 0.0541])
w[2] = np.array([0.4939, 0.7202, 0.8709])
w[3] = np.array([0.7654, 0.3055, 0.7121])
model.get_layer('Bat76887').set_weights(w) 
w = model.get_layer('PRe72471').get_weights() 
w[0] = np.array([[[0.7849], [0.3213], [0.044]], [[0.1626], [0.1063], [0.8773]]])
model.get_layer('PRe72471').set_weights(w) 
in0Ave61511 = tf.constant([[[[[0.5482]]]]])
in1Ave61511 = tf.constant([[[[[0.798]]]]])
in0Con58488 = tf.constant([[[0.8353, 0.343]]])
in0Con48391 = tf.constant([[[0.9259]]])
in0Per12292 = tf.constant([[[1.7185, 1.3223], [1.4382, 1.751], [1.5605, 1.9179]]])
print (np.array2string(model.predict([in0Ave61511,in1Ave61511,in0Con58488,in0Con48391,in0Per12292],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Glo19439.png')

LAve61511 = average_layer([[[[[[0.5482]]]]], [[[[[0.798]]]]]], Ave61511), 
LRes2360 = reshape_layer(Ave61511, [1, 1, 1], Res2360), 
LRes37780 = reshape_layer(Res2360, [1, 1], Res37780), 
LCon58488 = concatenate_layer([Res37780,[[[0.8353, 0.343]]]], 2, Con58488), 
LCon48391 = conv1D_layer([[[0.9259]]], 1,[[[0.3511, 0.648, 0.5356]]],[0, 0, 0], 1, true, 1, Con48391), 
LBat76887 = batch_normalization_layer(Con48391, 2, 0.28440097198610215, [0.6322, 0.017, 0.3965], [0.3399, 0.3073, 0.0541], [0.4939, 0.7202, 0.8709], [0.7654, 0.3055, 0.7121], Bat76887), 
LMul79039 = multiply_layer([Con58488,Bat76887], Mul79039), 
LRes15554 = reshape_layer(Mul79039, [1, 3, 1], Res15554), 
LZer12343 = zero_padding2D_layer(Res15554, 1, 0, 0, 0, Zer12343), 
LPer12292 = permute_layer([[[1.7185, 1.3223], [1.4382, 1.751], [1.5605, 1.9179]]], 2,1, Per12292), 
LRes60035 = reshape_layer(Per12292, [2, 3, 1], Res60035), 
LPRe72471 = prelu_layer(Res60035, [[[0.7849], [0.3213], [0.044]], [[0.1626], [0.1063], [0.8773]]], PRe72471), 
LMin67966 = minimum_layer([Zer12343,PRe72471], Min67966), 
LRes43547 = reshape_layer(Min67966, [2, 3, 1, 1], Res43547), 
LGlo19439 = global_average_pooling3D_layer(Res43547, Glo19439), 
exec_layers([LAve61511,LRes2360,LRes37780,LCon58488,LCon48391,LBat76887,LMul79039,LRes15554,LZer12343,LPer12292,LRes60035,LPRe72471,LMin67966,LRes43547,LGlo19439],["Ave61511","Res2360","Res37780","Con58488","Con48391","Bat76887","Mul79039","Res15554","Zer12343","Per12292","Res60035","PRe72471","Min67966","Res43547","Glo19439"],Glo19439,"Glo19439")

Actual (Unparsed): [[0.0634347]]

Expected (Unparsed): [[0.06343465149753047]]

Actual:   [[0.0635]]

Expected: [[0.0635]]