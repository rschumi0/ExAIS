import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Sub50817 = tf.keras.layers.Input(shape=([3]))
in1Sub50817 = tf.keras.layers.Input(shape=([3]))

Sub50817 = keras.layers.Subtract(name = 'Sub50817', )([in0Sub50817,in1Sub50817])
Lea37954 = keras.layers.LeakyReLU(alpha=8.411911967612003, name = 'Lea37954', )(Sub50817)
Res17750 = keras.layers.Reshape((3, 1), name = 'Res17750', )(Lea37954)
Res21246 = keras.layers.Reshape((3, 1, 1), name = 'Res21246', )(Res17750)
Dep66851 = keras.layers.DepthwiseConv2D((3, 1),strides=(3, 3), padding='same', name = 'Dep66851', )(Res21246)
model = tf.keras.models.Model(inputs=[in0Sub50817,in1Sub50817], outputs=Dep66851)
w = model.get_layer('Dep66851').get_weights() 
w[0] = np.array([[[[0.2252]]], [[[0.1317]]], [[[0.3882]]]])
w[1] = np.array([0])
model.get_layer('Dep66851').set_weights(w) 
in0Sub50817 = tf.constant([[0.7484, 0.8044, 0.2016]])
in1Sub50817 = tf.constant([[0.6465, 0.0367, 0.2572]])
print (np.array2string(model.predict([in0Sub50817,in1Sub50817],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Dep66851.png')

LSub50817 = subtract_layer([[0.7484, 0.8044, 0.2016]], [[0.6465, 0.0367, 0.2572]], Sub50817), 
LLea37954 = leaky_relu_layer(Sub50817, 8.411911967612003, Lea37954), 
LRes17750 = reshape_layer(Lea37954, [3, 1], Res17750), 
LRes21246 = reshape_layer(Res17750, [3, 1, 1], Res21246), 
LDep66851 = depthwise_conv2D_layer(Res21246, 3, 1,[[[[0.2252]]], [[[0.1317]]], [[[0.3882]]]],[0], 3, 3, true, Dep66851), 
exec_layers([LSub50817,LLea37954,LRes17750,LRes21246,LDep66851],["Sub50817","Lea37954","Res17750","Res21246","Dep66851"],Dep66851,"Dep66851")

Actual (Unparsed): [[[[-0.0575081]]]]

Expected (Unparsed): [[[[-0.05750806495597999]]]]

Actual:   [[[[-0.0575]]]]

Expected: [[[[-0.0575]]]]