import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Mul61248 = tf.keras.layers.Input(shape=([2, 2, 1, 2]))
in1Mul61248 = tf.keras.layers.Input(shape=([2, 2, 1, 2]))

Mul61248 = keras.layers.Multiply(name = 'Mul61248', )([in0Mul61248,in1Mul61248])
Res75794 = keras.layers.Reshape((2, 2, 2), name = 'Res75794', )(Mul61248)
Max67944 = keras.layers.MaxPool2D(pool_size=(1, 1), strides=(11, 11), padding='valid', name = 'Max67944', )(Res75794)
Res82845 = keras.layers.Reshape((1, 1, 2, 1), name = 'Res82845', )(Max67944)
Up_55207 = keras.layers.UpSampling3D(size=(1, 1, 1), name = 'Up_55207', )(Res82845)
model = tf.keras.models.Model(inputs=[in0Mul61248,in1Mul61248], outputs=Up_55207)
in0Mul61248 = tf.constant([[[[[0.914, 0.3836]], [[0.7439, 0.941]]], [[[0.4363, 0.0266]], [[0.2543, 0.0036]]]]])
in1Mul61248 = tf.constant([[[[[0.6217, 0.3388]], [[0.402, 0.3628]]], [[[0.726, 0.9355]], [[0.3735, 0.7389]]]]])
print (np.array2string(model.predict([in0Mul61248,in1Mul61248],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Up_55207.png')

LMul61248 = multiply_layer([[[[[[0.914, 0.3836]], [[0.7439, 0.941]]], [[[0.4363, 0.0266]], [[0.2543, 0.0036]]]]], [[[[[0.6217, 0.3388]], [[0.402, 0.3628]]], [[[0.726, 0.9355]], [[0.3735, 0.7389]]]]]], Mul61248), 
LRes75794 = reshape_layer(Mul61248, [2, 2, 2], Res75794), 
LMax67944 = max_pool2D_layer(Res75794, 1, 1, 11, 11, false, Max67944), 
LRes82845 = reshape_layer(Max67944, [1, 1, 2, 1], Res82845), 
LUp_55207 = up_sampling3D_layer(Res82845, 1, 1, 1, Up_55207), 
exec_layers([LMul61248,LRes75794,LMax67944,LRes82845,LUp_55207],["Mul61248","Res75794","Max67944","Res82845","Up_55207"],Up_55207,"Up_55207")

Actual (Unparsed): [[[[[0.5682338], [0.1299637]]]]]

Expected (Unparsed): [[[[[0.5682338],[0.12996368]]]]]

Actual:   [[[[[0.5683], [0.13]]]]]

Expected: [[[[[0.5683], [0.13]]]]]