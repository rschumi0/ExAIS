import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Add61035 = tf.keras.layers.Input(shape=([2, 1]))
in1Add61035 = tf.keras.layers.Input(shape=([2, 1]))
in0Con64476 = tf.keras.layers.Input(shape=([2, 1]))
in0Ave15262 = tf.keras.layers.Input(shape=([2, 2]))
in1Ave15262 = tf.keras.layers.Input(shape=([2, 2]))
in0Con63155 = tf.keras.layers.Input(shape=([2, 2]))
in0Ave6828 = tf.keras.layers.Input(shape=([1, 2]))
in1Ave6828 = tf.keras.layers.Input(shape=([1, 2]))

Add61035 = keras.layers.Add(name = 'Add61035', )([in0Add61035,in1Add61035])
Con64476 = keras.layers.Concatenate(axis=2, name = 'Con64476', )([Add61035,in0Con64476])
Ave15262 = keras.layers.Average(name = 'Ave15262', )([in0Ave15262,in1Ave15262])
Mul25939 = keras.layers.Multiply(name = 'Mul25939', )([Con64476,Ave15262])
Con63155 = keras.layers.Concatenate(axis=2, name = 'Con63155', )([Mul25939,in0Con63155])
Ave6828 = keras.layers.Average(name = 'Ave6828', )([in0Ave6828,in1Ave6828])
Con82030 = keras.layers.Conv1D(4, (1),strides=(1), padding='same', dilation_rate=(1), name = 'Con82030', )(Ave6828)
Zer1910 = keras.layers.ZeroPadding1D(padding=((1, 0)), name = 'Zer1910', )(Con82030)
Sub48414 = keras.layers.Subtract(name = 'Sub48414', )([Con63155,Zer1910])
model = tf.keras.models.Model(inputs=[in0Add61035,in1Add61035,in0Con64476,in0Ave15262,in1Ave15262,in0Con63155,in0Ave6828,in1Ave6828], outputs=Sub48414)
w = model.get_layer('Con82030').get_weights() 
w[0] = np.array([[[0.9101, 0.6448, 0.7317, 0.1208], [0.6824, 0.2473, 0.7106, 0.4061]]])
w[1] = np.array([0, 0, 0, 0])
model.get_layer('Con82030').set_weights(w) 
in0Add61035 = tf.constant([[[0.7612], [0.1687]]])
in1Add61035 = tf.constant([[[0.5668], [0.2974]]])
in0Con64476 = tf.constant([[[0.4159], [0.6274]]])
in0Ave15262 = tf.constant([[[0.8824, 0.5048], [0.5163, 0.3882]]])
in1Ave15262 = tf.constant([[[0.9039, 0.4581], [0.2166, 0.5901]]])
in0Con63155 = tf.constant([[[0.3571, 0.5284], [0.0024, 0.7093]]])
in0Ave6828 = tf.constant([[[0.7609, 0.3369]]])
in1Ave6828 = tf.constant([[[0.5173, 0.0417]]])
print (np.array2string(model.predict([in0Add61035,in1Add61035,in0Con64476,in0Ave15262,in1Ave15262,in0Con63155,in0Ave6828,in1Ave6828],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Sub48414.png')

LAdd61035 = add_layer([[[[0.7612], [0.1687]]], [[[0.5668], [0.2974]]]], Add61035), 
LCon64476 = concatenate_layer([Add61035,[[[0.4159], [0.6274]]]], 2, Con64476), 
LAve15262 = average_layer([[[[0.8824, 0.5048], [0.5163, 0.3882]]], [[[0.9039, 0.4581], [0.2166, 0.5901]]]], Ave15262), 
LMul25939 = multiply_layer([Con64476,Ave15262], Mul25939), 
LCon63155 = concatenate_layer([Mul25939,[[[0.3571, 0.5284], [0.0024, 0.7093]]]], 2, Con63155), 
LAve6828 = average_layer([[[[0.7609, 0.3369]]], [[[0.5173, 0.0417]]]], Ave6828), 
LCon82030 = conv1D_layer(Ave6828, 1,[[[0.9101, 0.6448, 0.7317, 0.1208], [0.6824, 0.2473, 0.7106, 0.4061]]],[0, 0, 0, 0], 1, true, 1, Con82030), 
LZer1910 = zero_padding1D_layer(Con82030, 1, 0, Zer1910), 
LSub48414 = subtract_layer(Con63155,Zer1910, Sub48414), 
exec_layers([LAdd61035,LCon64476,LAve15262,LMul25939,LCon63155,LAve6828,LCon82030,LZer1910,LSub48414],["Add61035","Con64476","Ave15262","Mul25939","Con63155","Ave6828","Con82030","Zer1910","Sub48414"],Sub48414,"Sub48414")

Actual (Unparsed): [[[1.1861032, 0.2002351, 0.3571000, 0.5284000], [-0.5400209, -0.1520129, -0.5997461, 0.5552220]]]

Expected (Unparsed): [[[1.1861031999999998,0.20023505500000002,0.3571,0.5284],[-0.5400208849999999,-0.15201286000000003,-0.59974605,0.55522199]]]

Actual:   [[[1.1862, 0.2003, 0.3571, 0.5284], [-0.54, -0.152, -0.5997, 0.5553]]]

Expected: [[[1.1862, 0.2003, 0.3571, 0.5284], [-0.54, -0.152, -0.5997, 0.5553]]]