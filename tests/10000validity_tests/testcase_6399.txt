import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Up_11864 = tf.keras.layers.Input(shape=([4, 1, 1]))

Up_11864 = keras.layers.UpSampling2D(size=(1, 1), name = 'Up_11864', )(in0Up_11864)
Loc3316 = keras.layers.LocallyConnected2D(4, (4, 1),strides=(7, 1), name = 'Loc3316', )(Up_11864)
Res90134 = keras.layers.Reshape((1, 1, 4, 1), name = 'Res90134', )(Loc3316)
Glo72306 = keras.layers.GlobalMaxPool3D(name = 'Glo72306', )(Res90134)
model = tf.keras.models.Model(inputs=[in0Up_11864], outputs=Glo72306)
w = model.get_layer('Loc3316').get_weights() 
w[0] = np.array([[[0.426, 0.7221, 0.4686, 0.0638], [0.9989, 0.9245, 0.8458, 0.0416], [0.9154, 0.8901, 0.9164, 0.5856], [0.5581, 0.9124, 0.76, 0.2626]]])
w[1] = np.array([[[0, 0, 0, 0]]])
model.get_layer('Loc3316').set_weights(w) 
in0Up_11864 = tf.constant([[[[1.7403]], [[1.6563]], [[1.1704]], [[1.7563]]]])
print (np.array2string(model.predict([in0Up_11864],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Glo72306.png')

LUp_11864 = up_sampling2D_layer([[[[1.7403]], [[1.6563]], [[1.1704]], [[1.7563]]]], 1, 1, Up_11864), 
LLoc3316 = locally_connected2D_layer(Up_11864, 4, 1,[[[0.426, 0.7221, 0.4686, 0.0638], [0.9989, 0.9245, 0.8458, 0.0416], [0.9154, 0.8901, 0.9164, 0.5856], [0.5581, 0.9124, 0.76, 0.2626]]],[[[0, 0, 0, 0]]], 7, 1, Loc3316), 
LRes90134 = reshape_layer(Loc3316, [1, 1, 4, 1], Res90134), 
LGlo72306 = global_max_pool3D_layer(Res90134, Glo72306), 
exec_layers([LUp_11864,LLoc3316,LRes90134,LGlo72306],["Up_11864","Loc3316","Res90134","Glo72306"],Glo72306,"Glo72306")

Actual (Unparsed): [[5.4321411]]

Expected (Unparsed): [[5.43214114]]

Actual:   [[5.4322]]

Expected: [[5.4322]]