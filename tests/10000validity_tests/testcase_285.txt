import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Sub34257 = tf.keras.layers.Input(shape=([3, 3, 2, 3]))
in1Sub34257 = tf.keras.layers.Input(shape=([3, 3, 2, 3]))

Sub34257 = keras.layers.Subtract(name = 'Sub34257', )([in0Sub34257,in1Sub34257])
Res81488 = keras.layers.Reshape((3, 3, 6), name = 'Res81488', )(Sub34257)
Sep52465 = keras.layers.SeparableConv2D(2, (3, 2),strides=(3, 3), padding='valid', name = 'Sep52465', )(Res81488)
Res32868 = keras.layers.Reshape((1, 2), name = 'Res32868', )(Sep52465)
Cro48322 = keras.layers.Cropping1D(cropping=((0, 0)), name = 'Cro48322', )(Res32868)
Thr80655 = keras.layers.ThresholdedReLU(theta=5.735515930735093, name = 'Thr80655', )(Cro48322)
model = tf.keras.models.Model(inputs=[in0Sub34257,in1Sub34257], outputs=Thr80655)
w = model.get_layer('Sep52465').get_weights() 
w[0] = np.array([[[[0.1996], [0.1461], [0.2094], [0.1906], [0.5767], [0.8262]], [[0.8343], [0.5847], [0.4109], [0.0469], [0.7831], [0.194]]], [[[0.6254], [0.2477], [0.5562], [0.623], [0.4808], [0.3931]], [[0.8126], [0.2375], [0.6184], [0.394], [0.0439], [0.4063]]], [[[0.9935], [0.0528], [0.6778], [0.3956], [0.228], [0.4175]], [[0.4699], [0.7628], [0.2397], [0.0773], [0.3269], [0.8188]]]])
w[1] = np.array([[[[0.5429, 0.3912], [0.9006, 0.1534], [0.8889, 0.0559], [0.7248, 0.2422], [0.1771, 0.5453], [0.081, 0.5518]]]])
w[2] = np.array([0, 0])
model.get_layer('Sep52465').set_weights(w) 
in0Sub34257 = tf.constant([[[[[0.4279, 0.7979, 0.0286], [0.5838, 0.3919, 0.9251]], [[0.2924, 0.1415, 0.3129], [0.2549, 0.2561, 0.9666]], [[0.749, 0.4454, 0.3406], [0.2369, 0.8103, 0.949]]], [[[0.3667, 0.7821, 0.9077], [0.2283, 0.1712, 0.4216]], [[0.9569, 0.2342, 0.3059], [0.6144, 0.6401, 0.1978]], [[0.0911, 0.5027, 0.1698], [0.1639, 0.2666, 0.5716]]], [[[0.3613, 0.855, 0.499], [0.5692, 0.7251, 0.3881]], [[0.0388, 0.0384, 0.7177], [0.09, 0.8947, 0.7927]], [[0.2529, 0.1558, 0.9938], [0.9398, 0.0681, 0.179]]]]])
in1Sub34257 = tf.constant([[[[[0.9321, 0.6006, 0.5648], [0.6435, 0.0811, 0.3022]], [[0.2988, 0.3137, 0.0181], [0.1338, 0.3802, 0.0846]], [[0.468, 0.1461, 0.6655], [0.2605, 0.2121, 0.1463]]], [[[0.7685, 0.4204, 0.6998], [0.9967, 0.6022, 0.9971]], [[0.4296, 0.7595, 0.3725], [0.4474, 0.5103, 0.5463]], [[0.6886, 0.4254, 0.204], [0.7299, 0.7306, 0.6812]]], [[[0.6612, 0.2546, 0.2181], [0.5053, 0.5106, 0.1405]], [[0.2631, 0.4115, 0.4387], [0.9216, 0.0568, 0.4115]], [[0.4063, 0.6765, 0.7398], [0.6707, 0.6877, 0.5186]]]]])
print (np.array2string(model.predict([in0Sub34257,in1Sub34257],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Thr80655.png')

LSub34257 = subtract_layer([[[[[0.4279, 0.7979, 0.0286], [0.5838, 0.3919, 0.9251]], [[0.2924, 0.1415, 0.3129], [0.2549, 0.2561, 0.9666]], [[0.749, 0.4454, 0.3406], [0.2369, 0.8103, 0.949]]], [[[0.3667, 0.7821, 0.9077], [0.2283, 0.1712, 0.4216]], [[0.9569, 0.2342, 0.3059], [0.6144, 0.6401, 0.1978]], [[0.0911, 0.5027, 0.1698], [0.1639, 0.2666, 0.5716]]], [[[0.3613, 0.855, 0.499], [0.5692, 0.7251, 0.3881]], [[0.0388, 0.0384, 0.7177], [0.09, 0.8947, 0.7927]], [[0.2529, 0.1558, 0.9938], [0.9398, 0.0681, 0.179]]]]], [[[[[0.9321, 0.6006, 0.5648], [0.6435, 0.0811, 0.3022]], [[0.2988, 0.3137, 0.0181], [0.1338, 0.3802, 0.0846]], [[0.468, 0.1461, 0.6655], [0.2605, 0.2121, 0.1463]]], [[[0.7685, 0.4204, 0.6998], [0.9967, 0.6022, 0.9971]], [[0.4296, 0.7595, 0.3725], [0.4474, 0.5103, 0.5463]], [[0.6886, 0.4254, 0.204], [0.7299, 0.7306, 0.6812]]], [[[0.6612, 0.2546, 0.2181], [0.5053, 0.5106, 0.1405]], [[0.2631, 0.4115, 0.4387], [0.9216, 0.0568, 0.4115]], [[0.4063, 0.6765, 0.7398], [0.6707, 0.6877, 0.5186]]]]], Sub34257), 
LRes81488 = reshape_layer(Sub34257, [3, 3, 6], Res81488), 
LSep52465 = separable_conv2D_layer(Res81488, 3, 2,[[[[[0.1996], [0.1461], [0.2094], [0.1906], [0.5767], [0.8262]], [[0.8343], [0.5847], [0.4109], [0.0469], [0.7831], [0.194]]], [[[0.6254], [0.2477], [0.5562], [0.623], [0.4808], [0.3931]], [[0.8126], [0.2375], [0.6184], [0.394], [0.0439], [0.4063]]], [[[0.9935], [0.0528], [0.6778], [0.3956], [0.228], [0.4175]], [[0.4699], [0.7628], [0.2397], [0.0773], [0.3269], [0.8188]]]],[[[[0.5429, 0.3912], [0.9006, 0.1534], [0.8889, 0.0559], [0.7248, 0.2422], [0.1771, 0.5453], [0.081, 0.5518]]]]],[0, 0], 3, 3, false, Sep52465), 
LRes32868 = reshape_layer(Sep52465, [1, 2], Res32868), 
LCro48322 = cropping1D_layer(Res32868, 0, 0, Cro48322), 
LThr80655 = thresholded_relu_layer(Cro48322, 5.735515930735093, Thr80655), 
exec_layers([LSub34257,LRes81488,LSep52465,LRes32868,LCro48322,LThr80655],["Sub34257","Res81488","Sep52465","Res32868","Cro48322","Thr80655"],Thr80655,"Thr80655")

Actual (Unparsed): [[[-0.0000000, 0.0000000]]]

Expected (Unparsed): [[[0,0]]]

Actual:   [[[-0, 0]]]

Expected: [[[0, 0]]]