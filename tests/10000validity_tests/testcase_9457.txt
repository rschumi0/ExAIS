import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Mul40517 = tf.keras.layers.Input(shape=([1, 2, 1]))
in1Mul40517 = tf.keras.layers.Input(shape=([1, 2, 1]))
in0Con83395 = tf.keras.layers.Input(shape=([4, 3, 2]))
in0Ave76802 = tf.keras.layers.Input(shape=([2, 1]))
in1Ave76802 = tf.keras.layers.Input(shape=([2, 1]))
in0Con74284 = tf.keras.layers.Input(shape=([4, 3, 2]))
in0Add73350 = tf.keras.layers.Input(shape=([2, 1, 2, 2]))
in1Add73350 = tf.keras.layers.Input(shape=([2, 1, 2, 2]))

Mul40517 = keras.layers.Multiply(name = 'Mul40517', )([in0Mul40517,in1Mul40517])
Zer35911 = keras.layers.ZeroPadding2D(padding=((3, 0), (1, 0)), name = 'Zer35911', )(Mul40517)
Con83395 = keras.layers.Concatenate(axis=3, name = 'Con83395', )([Zer35911,in0Con83395])
Ave76802 = keras.layers.Average(name = 'Ave76802', )([in0Ave76802,in1Ave76802])
Res17287 = keras.layers.Reshape((2, 1, 1), name = 'Res17287', )(Ave76802)
Zer90659 = keras.layers.ZeroPadding2D(padding=((2, 0), (2, 0)), name = 'Zer90659', )(Res17287)
Con74284 = keras.layers.Concatenate(axis=3, name = 'Con74284', )([Zer90659,in0Con74284])
Add73350 = keras.layers.Add(name = 'Add73350', )([in0Add73350,in1Add73350])
Res87622 = keras.layers.Reshape((2, 1, 4), name = 'Res87622', )(Add73350)
Con6828 = keras.layers.Conv2DTranspose(3, (1, 1),strides=(1, 1), padding='same', name = 'Con6828', )(Res87622)
Zer50794 = keras.layers.ZeroPadding2D(padding=((1, 1), (1, 1)), name = 'Zer50794', )(Con6828)
Ave2757 = keras.layers.Average(name = 'Ave2757', )([Con74284,Zer50794])
Sub84214 = keras.layers.Subtract(name = 'Sub84214', )([Con83395,Ave2757])
model = tf.keras.models.Model(inputs=[in0Mul40517,in1Mul40517,in0Con83395,in0Ave76802,in1Ave76802,in0Con74284,in0Add73350,in1Add73350], outputs=Sub84214)
w = model.get_layer('Con6828').get_weights() 
w[0] = np.array([[[[0.823, 0.8603, 0.2098, 0.6201], [0.9354, 0.3079, 0.1671, 0.8744], [0.4119, 0.0656, 0.1459, 0.5178]]]])
w[1] = np.array([0, 0, 0])
model.get_layer('Con6828').set_weights(w) 
in0Mul40517 = tf.constant([[[[0.6314], [0.5877]]]])
in1Mul40517 = tf.constant([[[[0.646], [0.3784]]]])
in0Con83395 = tf.constant([[[[0.9824, 0.8478], [0.3894, 0.7377], [0.1619, 0.3065]], [[0.9808, 0.3469], [0.618, 0.1704], [0.0348, 0.0215]], [[0.5245, 0.1213], [0.2453, 0.3167], [0.8208, 0.3494]], [[0.5884, 0.1823], [0.3775, 0.403], [0.4568, 0.6024]]]])
in0Ave76802 = tf.constant([[[0.8726], [0.5588]]])
in1Ave76802 = tf.constant([[[0.5521], [0.6227]]])
in0Con74284 = tf.constant([[[[0.7254, 0.4103], [0.4623, 0.142], [0.6826, 0.6956]], [[0.9422, 0.7631], [0.9011, 0.709], [0.5992, 0.6876]], [[0.6492, 0.8345], [0.8653, 0.7514], [0.1103, 0.3507]], [[0.0958, 0.6186], [0.8822, 0.1598], [0.8979, 0.9221]]]])
in0Add73350 = tf.constant([[[[[0.1972, 0.1833], [0.2343, 0.0186]]], [[[0.5659, 0.6299], [0.3857, 0.8574]]]]])
in1Add73350 = tf.constant([[[[[0.8374, 0.4451], [0.5765, 0.9521]]], [[[0.4732, 0.5818], [0.9263, 0.7978]]]]])
print (np.array2string(model.predict([in0Mul40517,in1Mul40517,in0Con83395,in0Ave76802,in1Ave76802,in0Con74284,in0Add73350,in1Add73350],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Sub84214.png')

LMul40517 = multiply_layer([[[[[0.6314], [0.5877]]]], [[[[0.646], [0.3784]]]]], Mul40517), 
LZer35911 = zero_padding2D_layer(Mul40517, 3, 0, 1, 0, Zer35911), 
LCon83395 = concatenate_layer([Zer35911,[[[[0.9824, 0.8478], [0.3894, 0.7377], [0.1619, 0.3065]], [[0.9808, 0.3469], [0.618, 0.1704], [0.0348, 0.0215]], [[0.5245, 0.1213], [0.2453, 0.3167], [0.8208, 0.3494]], [[0.5884, 0.1823], [0.3775, 0.403], [0.4568, 0.6024]]]]], 3, Con83395), 
LAve76802 = average_layer([[[[0.8726], [0.5588]]], [[[0.5521], [0.6227]]]], Ave76802), 
LRes17287 = reshape_layer(Ave76802, [2, 1, 1], Res17287), 
LZer90659 = zero_padding2D_layer(Res17287, 2, 0, 2, 0, Zer90659), 
LCon74284 = concatenate_layer([Zer90659,[[[[0.7254, 0.4103], [0.4623, 0.142], [0.6826, 0.6956]], [[0.9422, 0.7631], [0.9011, 0.709], [0.5992, 0.6876]], [[0.6492, 0.8345], [0.8653, 0.7514], [0.1103, 0.3507]], [[0.0958, 0.6186], [0.8822, 0.1598], [0.8979, 0.9221]]]]], 3, Con74284), 
LAdd73350 = add_layer([[[[[[0.1972, 0.1833], [0.2343, 0.0186]]], [[[0.5659, 0.6299], [0.3857, 0.8574]]]]], [[[[[0.8374, 0.4451], [0.5765, 0.9521]]], [[[0.4732, 0.5818], [0.9263, 0.7978]]]]]], Add73350), 
LRes87622 = reshape_layer(Add73350, [2, 1, 4], Res87622), 
LCon6828 = conv2D_transpose_layer(Res87622, 1, 1,[[[[0.823, 0.8603, 0.2098, 0.6201], [0.9354, 0.3079, 0.1671, 0.8744], [0.4119, 0.0656, 0.1459, 0.5178]]]],[0, 0, 0], 1, 1, true, Con6828), 
LZer50794 = zero_padding2D_layer(Con6828, 1, 1, 1, 1, Zer50794), 
LAve2757 = average_layer([Con74284,Zer50794], Ave2757), 
LSub84214 = subtract_layer(Con83395,Ave2757, Sub84214), 
exec_layers([LMul40517,LZer35911,LCon83395,LAve76802,LRes17287,LZer90659,LCon74284,LAdd73350,LRes87622,LCon6828,LZer50794,LAve2757,LSub84214],["Mul40517","Zer35911","Con83395","Ave76802","Res17287","Zer90659","Con74284","Add73350","Res87622","Con6828","Zer50794","Ave2757","Sub84214"],Sub84214,"Sub84214")

Actual (Unparsed): [[[[0.0000000, 0.6197000, 0.6426500], [0.0000000, 0.1582500, 0.6667000], [0.0000000, -0.1794000, -0.0413000]], [[0.0000000, 0.5097000, -0.0346500], [-1.0820626, -0.9053070, -0.7282495], [0.0000000, -0.2648000, -0.3223000]], [[0.0000000, 0.1999000, -0.2959500], [-1.5996260, -1.6931493, -0.8369881], [-0.3561750, 0.7656500, 0.1740500]], [[0.0000000, 0.5405000, -0.1270000], [0.4078844, -0.0636000, 0.3231000], [-0.0729893, 0.0078500, 0.1413500]]]]

Expected (Unparsed): [[[[0,0.6197,0.6426499999999999],[0,0.15825000000000003,0.6667000000000001],[0,-0.1794,-0.0413]],[[0,0.5097,-0.034650000000000014],[-1.082062615,-0.9053069799999999,-0.72824948],[0,-0.2648,-0.3223]],[[0,0.19989999999999997,-0.29595],[-1.5996259649999998,-1.6931493249999998,-0.836988085],[-0.356175,0.7656499999999999,0.17404999999999998]],[[0,0.5405,-0.12700000000000003],[0.4078844,-0.06359999999999999,0.32310000000000005],[-0.07298932,0.007849999999999968,0.14135000000000003]]]]

Actual:   [[[[0, 0.6197, 0.6427], [0, 0.1583, 0.6667], [0, -0.1794, -0.0413]], [[0, 0.5097, -0.0346], [-1.082, -0.9053, -0.7282], [0, -0.2648, -0.3223]], [[0, 0.1999, -0.2959], [-1.5996, -1.6931, -0.8369], [-0.3561, 0.7657, 0.1741]], [[0, 0.5405, -0.127], [0.4079, -0.0636, 0.3231], [-0.0729, 0.0079, 0.1414]]]]

Expected: [[[[0, 0.6197, 0.6427], [0, 0.1583, 0.6668], [0, -0.1794, -0.0413]], [[0, 0.5097, -0.0346], [-1.082, -0.9053, -0.7282], [0, -0.2648, -0.3223]], [[0, 0.1999, -0.2959], [-1.5996, -1.6931, -0.8369], [-0.3561, 0.7657, 0.1741]], [[0, 0.5405, -0.127], [0.4079, -0.0635, 0.3232], [-0.0729, 0.0079, 0.1414]]]]