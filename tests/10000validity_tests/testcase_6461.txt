import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Mul70115 = tf.keras.layers.Input(shape=([2, 2, 2]))
in1Mul70115 = tf.keras.layers.Input(shape=([2, 2, 2]))
in0Sub58502 = tf.keras.layers.Input(shape=([3, 2, 2, 2]))
in1Sub58502 = tf.keras.layers.Input(shape=([3, 2, 2, 2]))
in0Con73139 = tf.keras.layers.Input(shape=([4, 2]))

Mul70115 = keras.layers.Multiply(name = 'Mul70115', )([in0Mul70115,in1Mul70115])
Res27484 = keras.layers.Reshape((2, 4), name = 'Res27484', )(Mul70115)
Zer42672 = keras.layers.ZeroPadding1D(padding=((2, 0)), name = 'Zer42672', )(Res27484)
Sub58502 = keras.layers.Subtract(name = 'Sub58502', )([in0Sub58502,in1Sub58502])
Res42425 = keras.layers.Reshape((3, 2, 4), name = 'Res42425', )(Sub58502)
Con13521 = keras.layers.Conv2DTranspose(2, (3, 2),strides=(2, 1), padding='same', name = 'Con13521', )(Res42425)
Res5553 = keras.layers.Reshape((6, 4), name = 'Res5553', )(Con13521)
Loc81833 = keras.layers.LocallyConnected1D(2, (3),strides=(1), name = 'Loc81833', )(Res5553)
Con73139 = keras.layers.Concatenate(axis=2, name = 'Con73139', )([Loc81833,in0Con73139])
Max99697 = keras.layers.Maximum(name = 'Max99697', )([Zer42672,Con73139])
model = tf.keras.models.Model(inputs=[in0Mul70115,in1Mul70115,in0Sub58502,in1Sub58502,in0Con73139], outputs=Max99697)
w = model.get_layer('Con13521').get_weights() 
w[0] = np.array([[[[0.042, 0.0059, 0.6542, 0.7168], [0.8987, 0.6456, 0.279, 0.0367]], [[0.8116, 0.7952, 0.1045, 0.2266], [0.7349, 0.1315, 0.3192, 0.0894]]], [[[0.4542, 0.4551, 0.8935, 0.8897], [0.3733, 0.3428, 0.8758, 0.1154]], [[0.5561, 0.667, 0.3121, 0.0527], [0.0641, 0.5163, 0.252, 0.7134]]], [[[0.1747, 0.0718, 0.3725, 0.821], [0.8967, 0.5533, 0.5912, 0.758]], [[0.3097, 0.4328, 0.6686, 0.6022], [0.6438, 0.7346, 0.2063, 0.6417]]]])
w[1] = np.array([0, 0])
model.get_layer('Con13521').set_weights(w) 
w = model.get_layer('Loc81833').get_weights() 
w[0] = np.array([[[0.7908, 0.8218], [0.6268, 0.7846], [0.4539, 0.1771], [0.7934, 0.3755], [0.7578, 0.6936], [0.621, 0.5391], [0.0967, 0.4002], [0.5063, 0.4459], [0.65, 0.9271], [0.1925, 0.3416], [0.044, 0.6496], [0.4356, 0.5946]], [[0.8604, 0.2315], [0.5726, 0.1359], [0.0096, 0.9639], [0.03, 0.2466], [0.7536, 0.7002], [0.6577, 0.251], [0.3409, 0.2465], [0.5301, 0.4404], [0.8003, 0.7819], [0.5158, 0.4678], [0.4277, 0.2581], [0.4861, 0.5318]], [[0.8977, 0.752], [0.5058, 0.8968], [0.7303, 0.4323], [0.7276, 0.6873], [0.0553, 0.1423], [0.0018, 0.4351], [0.2275, 0.5953], [0.4001, 0.5602], [0.8686, 0.8354], [0.9568, 0.8228], [0.3365, 0.9244], [0.9293, 0.7947]], [[0.4589, 0.7811], [0.7968, 0.5692], [0.6032, 0.724], [0.0288, 0.2531], [0.8038, 0.5414], [0.3821, 0.2661], [0.7168, 0.8542], [0.1126, 0.1092], [0.6339, 0.1217], [0.025, 0.0605], [0.646, 0.8913], [0.727, 0.2038]]])
w[1] = np.array([[0, 0], [0, 0], [0, 0], [0, 0]])
model.get_layer('Loc81833').set_weights(w) 
in0Mul70115 = tf.constant([[[[0.0154, 0.3304], [0.02, 0.1524]], [[0.1588, 0.8636], [0.4605, 0.0215]]]])
in1Mul70115 = tf.constant([[[[0.4995, 0.3467], [0.3701, 0.0692]], [[0.6646, 0.1177], [0.5559, 0.1039]]]])
in0Sub58502 = tf.constant([[[[[0.5177, 0.8218], [0.9791, 0.3046]], [[0.0279, 0.6641], [0.3294, 0.8513]]], [[[0.6169, 0.8412], [0.2598, 0.3348]], [[0.581, 0.0105], [0.272, 0.3285]]], [[[0.6366, 0.4293], [0.6448, 0.351]], [[0.2422, 0.5673], [0.8612, 0.205]]]]])
in1Sub58502 = tf.constant([[[[[0.1145, 0.5845], [0.7009, 0.3383]], [[0.2731, 0.0516], [0.5407, 0.4396]]], [[[0.0254, 0.689], [0.4322, 0.957]], [[0.5339, 0.6978], [0.2104, 0.6049]]], [[[0.9953, 0.4705], [0.2282, 0.2137]], [[0.0061, 0.0758], [0.3091, 0.4656]]]]])
in0Con73139 = tf.constant([[[0.319, 0.9919], [0.2287, 0.86], [0.9235, 0.479], [0.4377, 0.0366]]])
print (np.array2string(model.predict([in0Mul70115,in1Mul70115,in0Sub58502,in1Sub58502,in0Con73139],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Max99697.png')

LMul70115 = multiply_layer([[[[[0.0154, 0.3304], [0.02, 0.1524]], [[0.1588, 0.8636], [0.4605, 0.0215]]]], [[[[0.4995, 0.3467], [0.3701, 0.0692]], [[0.6646, 0.1177], [0.5559, 0.1039]]]]], Mul70115), 
LRes27484 = reshape_layer(Mul70115, [2, 4], Res27484), 
LZer42672 = zero_padding1D_layer(Res27484, 2, 0, Zer42672), 
LSub58502 = subtract_layer([[[[[0.5177, 0.8218], [0.9791, 0.3046]], [[0.0279, 0.6641], [0.3294, 0.8513]]], [[[0.6169, 0.8412], [0.2598, 0.3348]], [[0.581, 0.0105], [0.272, 0.3285]]], [[[0.6366, 0.4293], [0.6448, 0.351]], [[0.2422, 0.5673], [0.8612, 0.205]]]]], [[[[[0.1145, 0.5845], [0.7009, 0.3383]], [[0.2731, 0.0516], [0.5407, 0.4396]]], [[[0.0254, 0.689], [0.4322, 0.957]], [[0.5339, 0.6978], [0.2104, 0.6049]]], [[[0.9953, 0.4705], [0.2282, 0.2137]], [[0.0061, 0.0758], [0.3091, 0.4656]]]]], Sub58502), 
LRes42425 = reshape_layer(Sub58502, [3, 2, 4], Res42425), 
LCon13521 = conv2D_transpose_layer(Res42425, 3, 2,[[[[0.042, 0.0059, 0.6542, 0.7168], [0.8987, 0.6456, 0.279, 0.0367]], [[0.8116, 0.7952, 0.1045, 0.2266], [0.7349, 0.1315, 0.3192, 0.0894]]], [[[0.4542, 0.4551, 0.8935, 0.8897], [0.3733, 0.3428, 0.8758, 0.1154]], [[0.5561, 0.667, 0.3121, 0.0527], [0.0641, 0.5163, 0.252, 0.7134]]], [[[0.1747, 0.0718, 0.3725, 0.821], [0.8967, 0.5533, 0.5912, 0.758]], [[0.3097, 0.4328, 0.6686, 0.6022], [0.6438, 0.7346, 0.2063, 0.6417]]]],[0, 0], 2, 1, true, Con13521), 
LRes5553 = reshape_layer(Con13521, [6, 4], Res5553), 
LLoc81833 = locally_connected1D_layer(Res5553, 3,[[[0.7908, 0.8218], [0.6268, 0.7846], [0.4539, 0.1771], [0.7934, 0.3755], [0.7578, 0.6936], [0.621, 0.5391], [0.0967, 0.4002], [0.5063, 0.4459], [0.65, 0.9271], [0.1925, 0.3416], [0.044, 0.6496], [0.4356, 0.5946]], [[0.8604, 0.2315], [0.5726, 0.1359], [0.0096, 0.9639], [0.03, 0.2466], [0.7536, 0.7002], [0.6577, 0.251], [0.3409, 0.2465], [0.5301, 0.4404], [0.8003, 0.7819], [0.5158, 0.4678], [0.4277, 0.2581], [0.4861, 0.5318]], [[0.8977, 0.752], [0.5058, 0.8968], [0.7303, 0.4323], [0.7276, 0.6873], [0.0553, 0.1423], [0.0018, 0.4351], [0.2275, 0.5953], [0.4001, 0.5602], [0.8686, 0.8354], [0.9568, 0.8228], [0.3365, 0.9244], [0.9293, 0.7947]], [[0.4589, 0.7811], [0.7968, 0.5692], [0.6032, 0.724], [0.0288, 0.2531], [0.8038, 0.5414], [0.3821, 0.2661], [0.7168, 0.8542], [0.1126, 0.1092], [0.6339, 0.1217], [0.025, 0.0605], [0.646, 0.8913], [0.727, 0.2038]]],[[0, 0], [0, 0], [0, 0], [0, 0]], 1, Loc81833), 
LCon73139 = concatenate_layer([Loc81833,[[[0.319, 0.9919], [0.2287, 0.86], [0.9235, 0.479], [0.4377, 0.0366]]]], 2, Con73139), 
LMax99697 = maximum_layer([Zer42672,Con73139], Max99697), 
exec_layers([LMul70115,LRes27484,LZer42672,LSub58502,LRes42425,LCon13521,LRes5553,LLoc81833,LCon73139,LMax99697],["Mul70115","Res27484","Zer42672","Sub58502","Res42425","Con13521","Res5553","Loc81833","Con73139","Max99697"],Max99697,"Max99697")

Actual (Unparsed): [[[2.4471198, 3.0500046, 0.3190000, 0.9919000], [1.3252219, 0.9959915, 0.2287000, 0.8600000], [0.8389261, 0.5914046, 0.9235000, 0.4790000], [0.3931347, 0.1016457, 0.4377000, 0.0366000]]]

Expected (Unparsed): [[[2.447119924312,3.0500047260940004,0.319,0.9919],[1.3252220546280002,0.9959915733360002,0.2287,0.86],[0.8389261553710008,0.5914046452830009,0.9235,0.479],[0.39313469936600076,0.10164572000000001,0.4377,0.0366]]]

Actual:   [[[2.4472, 3.0501, 0.319, 0.9919], [1.3253, 0.996, 0.2287, 0.86], [0.839, 0.5915, 0.9235, 0.479], [0.3932, 0.1017, 0.4377, 0.0366]]]

Expected: [[[2.4472, 3.0501, 0.319, 0.9919], [1.3253, 0.996, 0.2287, 0.86], [0.839, 0.5915, 0.9235, 0.479], [0.3932, 0.1017, 0.4377, 0.0366]]]