import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0PRe9867 = tf.keras.layers.Input(shape=([1, 1, 1, 2]))
in0Con17227 = tf.keras.layers.Input(shape=([1, 1]))
in0Zer87331 = tf.keras.layers.Input(shape=([2, 1]))

PRe9867 = keras.layers.PReLU(name = 'PRe9867', input_shape=(1, 1, 1, 2))(in0PRe9867)
Res66636 = keras.layers.Reshape((1, 1, 2), name = 'Res66636', )(PRe9867)
Max6861 = keras.layers.MaxPool2D(pool_size=(1, 1), strides=(1, 6), padding='valid', name = 'Max6861', )(Res66636)
Res17657 = keras.layers.Reshape((1, 2), name = 'Res17657', )(Max6861)
Con17227 = keras.layers.Concatenate(axis=2, name = 'Con17227', )([Res17657,in0Con17227])
Zer87331 = keras.layers.ZeroPadding1D(padding=((1, 1)), name = 'Zer87331', )(in0Zer87331)
Res82051 = keras.layers.Reshape((4, 1, 1), name = 'Res82051', )(Zer87331)
Con81299 = keras.layers.Conv2DTranspose(2, (4, 1),strides=(1, 1), padding='same', name = 'Con81299', )(Res82051)
Ave44625 = keras.layers.AveragePooling2D(pool_size=(1, 1), name = 'Ave44625', )(Con81299)
Res71297 = keras.layers.Reshape((4, 2), name = 'Res71297', )(Ave44625)
Con75176 = keras.layers.Conv1D(2, (1),strides=(1), padding='valid', dilation_rate=(1), name = 'Con75176', )(Res71297)
Sep96017 = keras.layers.SeparableConv1D(3, (3),strides=(4), padding='same', name = 'Sep96017', )(Con75176)
Mul98626 = keras.layers.Multiply(name = 'Mul98626', )([Con17227,Sep96017])
model = tf.keras.models.Model(inputs=[in0PRe9867,in0Con17227,in0Zer87331], outputs=Mul98626)
w = model.get_layer('PRe9867').get_weights() 
w[0] = np.array([[[[0.7069, 0.8341]]]])
model.get_layer('PRe9867').set_weights(w) 
w = model.get_layer('Con81299').get_weights() 
w[0] = np.array([[[[0.4723], [0.7741]]], [[[0.3199], [0.3056]]], [[[0.4787], [0.5854]]], [[[0.3463], [0.1178]]]])
w[1] = np.array([0, 0])
model.get_layer('Con81299').set_weights(w) 
w = model.get_layer('Con75176').get_weights() 
w[0] = np.array([[[0.9452, 0.587], [0.0425, 0.1138]]])
w[1] = np.array([0, 0])
model.get_layer('Con75176').set_weights(w) 
w = model.get_layer('Sep96017').get_weights() 
w[0] = np.array([[[0.5715], [0.5704]], [[0.546], [0.7461]], [[0.6707], [0.5817]]])
w[1] = np.array([[[0.3841, 0.309, 0.2699], [0.7162, 0.9165, 0.6997]]])
w[2] = np.array([0, 0, 0])
model.get_layer('Sep96017').set_weights(w) 
in0PRe9867 = tf.constant([[[[[0.2494, 0.3962]]]]])
in0Con17227 = tf.constant([[[0.9415]]])
in0Zer87331 = tf.constant([[[1.5238], [1.8031]]])
print (np.array2string(model.predict([in0PRe9867,in0Con17227,in0Zer87331],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Mul98626.png')

LPRe9867 = prelu_layer([[[[[0.2494, 0.3962]]]]], [[[[0.7069, 0.8341]]]], PRe9867), 
LRes66636 = reshape_layer(PRe9867, [1, 1, 2], Res66636), 
LMax6861 = max_pool2D_layer(Res66636, 1, 1, 1, 6, false, Max6861), 
LRes17657 = reshape_layer(Max6861, [1, 2], Res17657), 
LCon17227 = concatenate_layer([Res17657,[[[0.9415]]]], 2, Con17227), 
LZer87331 = zero_padding1D_layer([[[1.5238], [1.8031]]], 1, 1, Zer87331), 
LRes82051 = reshape_layer(Zer87331, [4, 1, 1], Res82051), 
LCon81299 = conv2D_transpose_layer(Res82051, 4, 1,[[[[0.4723], [0.7741]]], [[[0.3199], [0.3056]]], [[[0.4787], [0.5854]]], [[[0.3463], [0.1178]]]],[0, 0], 1, 1, true, Con81299), 
LAve44625 = average_pooling2D_layer(Con81299, 1, 1, Ave44625), 
LRes71297 = reshape_layer(Ave44625, [4, 2], Res71297), 
LCon75176 = conv1D_layer(Res71297, 1,[[[0.9452, 0.587], [0.0425, 0.1138]]],[0, 0], 1, false, 1, Con75176), 
LSep96017 = separable_conv1D_layer(Con75176, 3,[[[[0.5715], [0.5704]], [[0.546], [0.7461]], [[0.6707], [0.5817]]],[[[0.3841, 0.309, 0.2699], [0.7162, 0.9165, 0.6997]]]],[0, 0, 0], 4, true, Sep96017), 
LMul98626 = multiply_layer([Con17227,Sep96017], Mul98626), 
exec_layers([LPRe9867,LRes66636,LMax6861,LRes17657,LCon17227,LZer87331,LRes82051,LCon81299,LAve44625,LRes71297,LCon75176,LSep96017,LMul98626],["PRe9867","Res66636","Max6861","Res17657","Con17227","Zer87331","Res82051","Con81299","Ave44625","Res71297","Con75176","Sep96017","Mul98626"],Mul98626,"Mul98626")

Actual (Unparsed): [[[0.4800277, 0.8297070, 1.5699356]]]

Expected (Unparsed): [[[0.4800276562458075,0.8297070101583169,1.5699356308805361]]]

Actual:   [[[0.4801, 0.8298, 1.57]]]

Expected: [[[0.4801, 0.8298, 1.57]]]