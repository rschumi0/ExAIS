import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0LST67678 = tf.keras.layers.Input(shape=([1, 1]))

LST67678 = keras.layers.LSTM(1,recurrent_activation='sigmoid', name = 'LST67678', )(in0LST67678)
Res57457 = keras.layers.Reshape((1, 1), name = 'Res57457', )(LST67678)
Res56275 = keras.layers.Reshape((1, 1, 1), name = 'Res56275', )(Res57457)
Res34581 = keras.layers.Reshape((1, 1, 1, 1), name = 'Res34581', )(Res56275)
Up_15692 = keras.layers.UpSampling3D(size=(1, 2, 2), name = 'Up_15692', )(Res34581)
model = tf.keras.models.Model(inputs=[in0LST67678], outputs=Up_15692)
w = model.get_layer('LST67678').get_weights() 
w[0] = np.array([[10, 1, 2, 6]])
w[1] = np.array([[9, 1, 4, 2]])
w[2] = np.array([1, 9, 8, 1])
model.get_layer('LST67678').set_weights(w) 
in0LST67678 = tf.constant([[[3]]])
print (np.array2string(model.predict([in0LST67678],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Up_15692.png')

LLST67678 = lstm_layer([[[3]]],[[10, 1, 2, 6]],[[9, 1, 4, 2]],[1, 9, 8, 1], LST67678), 
LRes57457 = reshape_layer(LST67678, [1, 1], Res57457), 
LRes56275 = reshape_layer(Res57457, [1, 1, 1], Res56275), 
LRes34581 = reshape_layer(Res56275, [1, 1, 1, 1], Res34581), 
LUp_15692 = up_sampling3D_layer(Res34581, 1, 2, 2, Up_15692), 
exec_layers([LLST67678,LRes57457,LRes56275,LRes34581,LUp_15692],["LST67678","Res57457","Res56275","Res34581","Up_15692"],Up_15692,"Up_15692")

Actual (Unparsed): [[[[[0.7615942], [0.7615942]], [[0.7615942], [0.7615942]]]]]

Expected (Unparsed): [[[[[0.7615941516881126],[0.7615941516881126]],[[0.7615941516881126],[0.7615941516881126]]]]]

Actual:   [[[[[0.7616], [0.7616]], [[0.7616], [0.7616]]]]]

Expected: [[[[[0.7616], [0.7616]], [[0.7616], [0.7616]]]]]