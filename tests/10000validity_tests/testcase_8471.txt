import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Glo89814 = tf.keras.layers.Input(shape=([2, 1]))
in0Con78136 = tf.keras.layers.Input(shape=([2, 1, 1, 1]))
in0Max57494 = tf.keras.layers.Input(shape=([2, 1, 1, 2]))
in1Max57494 = tf.keras.layers.Input(shape=([2, 1, 1, 2]))

Glo89814 = keras.layers.GlobalMaxPool1D(name = 'Glo89814', )(in0Glo89814)
Res13524 = keras.layers.Reshape((1, 1), name = 'Res13524', )(Glo89814)
Res14836 = keras.layers.Reshape((1, 1, 1), name = 'Res14836', )(Res13524)
Res7275 = keras.layers.Reshape((1, 1, 1, 1), name = 'Res7275', )(Res14836)
Zer81750 = keras.layers.ZeroPadding3D(padding=((1, 0), (0, 0), (0, 0)), name = 'Zer81750', )(Res7275)
Con78136 = keras.layers.Concatenate(axis=4, name = 'Con78136', )([Zer81750,in0Con78136])
Max57494 = keras.layers.Maximum(name = 'Max57494', )([in0Max57494,in1Max57494])
Sub10778 = keras.layers.Subtract(name = 'Sub10778', )([Con78136,Max57494])
Zer94259 = keras.layers.ZeroPadding3D(padding=((1, 1), (1, 1), (1, 1)), name = 'Zer94259', )(Sub10778)
model = tf.keras.models.Model(inputs=[in0Glo89814,in0Con78136,in0Max57494,in1Max57494], outputs=Zer94259)
in0Glo89814 = tf.constant([[[1.7112], [1.5874]]])
in0Con78136 = tf.constant([[[[[0.2879]]], [[[0.5567]]]]])
in0Max57494 = tf.constant([[[[[0.3144, 0.1093]]], [[[0.2452, 0.2446]]]]])
in1Max57494 = tf.constant([[[[[0.0563, 0.5394]]], [[[0.8599, 0.033]]]]])
print (np.array2string(model.predict([in0Glo89814,in0Con78136,in0Max57494,in1Max57494],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Zer94259.png')

LGlo89814 = global_max_pool1D_layer([[[1.7112], [1.5874]]], Glo89814), 
LRes13524 = reshape_layer(Glo89814, [1, 1], Res13524), 
LRes14836 = reshape_layer(Res13524, [1, 1, 1], Res14836), 
LRes7275 = reshape_layer(Res14836, [1, 1, 1, 1], Res7275), 
LZer81750 = zero_padding3D_layer(Res7275, 1, 0, 0, 0, 0, 0, Zer81750), 
LCon78136 = concatenate_layer([Zer81750,[[[[[0.2879]]], [[[0.5567]]]]]], 4, Con78136), 
LMax57494 = maximum_layer([[[[[[0.3144, 0.1093]]], [[[0.2452, 0.2446]]]]], [[[[[0.0563, 0.5394]]], [[[0.8599, 0.033]]]]]], Max57494), 
LSub10778 = subtract_layer(Con78136,Max57494, Sub10778), 
LZer94259 = zero_padding3D_layer(Sub10778, 1, 1, 1, 1, 1, 1, Zer94259), 
exec_layers([LGlo89814,LRes13524,LRes14836,LRes7275,LZer81750,LCon78136,LMax57494,LSub10778,LZer94259],["Glo89814","Res13524","Res14836","Res7275","Zer81750","Con78136","Max57494","Sub10778","Zer94259"],Zer94259,"Zer94259")

Actual (Unparsed): [[[[[0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000]], [[0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000]], [[0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000]]], [[[0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000]], [[0.0000000, 0.0000000], [-0.3144000, -0.2515000], [0.0000000, 0.0000000]], [[0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000]]], [[[0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000]], [[0.0000000, 0.0000000], [0.8513000, 0.3121000], [0.0000000, 0.0000000]], [[0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000]]], [[[0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000]], [[0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000]], [[0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000]]]]]

Expected (Unparsed): [[[[[0,0],[0,0],[0,0]],[[0,0],[0,0],[0,0]],[[0,0],[0,0],[0,0]]],[[[0,0],[0,0],[0,0]],[[0,0],[-0.3144,-0.2515],[0,0]],[[0,0],[0,0],[0,0]]],[[[0,0],[0,0],[0,0]],[[0,0],[0.8513000000000001,0.31209999999999993],[0,0]],[[0,0],[0,0],[0,0]]],[[[0,0],[0,0],[0,0]],[[0,0],[0,0],[0,0]],[[0,0],[0,0],[0,0]]]]]

Actual:   [[[[[0, 0], [0, 0], [0, 0]], [[0, 0], [0, 0], [0, 0]], [[0, 0], [0, 0], [0, 0]]], [[[0, 0], [0, 0], [0, 0]], [[0, 0], [-0.3144, -0.2515], [0, 0]], [[0, 0], [0, 0], [0, 0]]], [[[0, 0], [0, 0], [0, 0]], [[0, 0], [0.8513, 0.3121], [0, 0]], [[0, 0], [0, 0], [0, 0]]], [[[0, 0], [0, 0], [0, 0]], [[0, 0], [0, 0], [0, 0]], [[0, 0], [0, 0], [0, 0]]]]]

Expected: [[[[[0, 0], [0, 0], [0, 0]], [[0, 0], [0, 0], [0, 0]], [[0, 0], [0, 0], [0, 0]]], [[[0, 0], [0, 0], [0, 0]], [[0, 0], [-0.3144, -0.2515], [0, 0]], [[0, 0], [0, 0], [0, 0]]], [[[0, 0], [0, 0], [0, 0]], [[0, 0], [0.8514, 0.3121], [0, 0]], [[0, 0], [0, 0], [0, 0]]], [[[0, 0], [0, 0], [0, 0]], [[0, 0], [0, 0], [0, 0]], [[0, 0], [0, 0], [0, 0]]]]]