import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Mul22706 = tf.keras.layers.Input(shape=([2, 1, 2]))
in1Mul22706 = tf.keras.layers.Input(shape=([2, 1, 2]))
in0Con12334 = tf.keras.layers.Input(shape=([1, 8, 1]))
in0Min80635 = tf.keras.layers.Input(shape=([1, 2, 2]))
in1Min80635 = tf.keras.layers.Input(shape=([1, 2, 2]))

Mul22706 = keras.layers.Multiply(name = 'Mul22706', )([in0Mul22706,in1Mul22706])
Res2048 = keras.layers.Reshape((2, 1, 2, 1), name = 'Res2048', )(Mul22706)
Up_60148 = keras.layers.UpSampling3D(size=(2, 2, 1), name = 'Up_60148', )(Res2048)
Res79207 = keras.layers.Reshape((4, 2, 2), name = 'Res79207', )(Up_60148)
Loc39684 = keras.layers.LocallyConnected2D(4, (2, 1),strides=(1, 1), name = 'Loc39684', )(Res79207)
Res82493 = keras.layers.Reshape((3, 8), name = 'Res82493', )(Loc39684)
Ave53586 = keras.layers.AveragePooling1D(pool_size=(1), strides=(3), padding='valid', name = 'Ave53586', )(Res82493)
Res49773 = keras.layers.Reshape((1, 8, 1), name = 'Res49773', )(Ave53586)
Con12334 = keras.layers.Concatenate(axis=3, name = 'Con12334', )([Res49773,in0Con12334])
Min80635 = keras.layers.Minimum(name = 'Min80635', )([in0Min80635,in1Min80635])
Zer39485 = keras.layers.ZeroPadding2D(padding=((0, 0), (6, 0)), name = 'Zer39485', )(Min80635)
Min53594 = keras.layers.Minimum(name = 'Min53594', )([Con12334,Zer39485])
model = tf.keras.models.Model(inputs=[in0Mul22706,in1Mul22706,in0Con12334,in0Min80635,in1Min80635], outputs=Min53594)
w = model.get_layer('Loc39684').get_weights() 
w[0] = np.array([[[0.9849, 0.311, 0.4668, 0.2018], [0.9478, 0.3779, 0.241, 0.7271], [0.9642, 0.024, 0.9648, 0.6919], [0.9765, 0.9106, 0.2896, 0.454]], [[0.2407, 0.4458, 0.625, 0.69], [0.1954, 0.4542, 0.5124, 0.0601], [0.8187, 0.4934, 0.8936, 0.5186], [0.0441, 0.6251, 0.357, 0.1087]], [[0.8946, 0.8942, 0.7986, 0.4173], [0.8753, 0.2465, 0.5828, 0.734], [0.8199, 0.1255, 0.2048, 0.3573], [0.8239, 0.5267, 0.6653, 0.4233]], [[0.1202, 0.8622, 0.2506, 0.0904], [0.7502, 0.5885, 0.18, 0.9121], [0.6679, 0.1843, 0.6267, 0.7493], [0.4785, 0.7321, 0.9534, 0.6319]], [[0.3548, 0.0511, 0.6067, 0.5664], [0.8045, 0.0584, 0.0137, 0.4027], [0.8648, 0.7935, 0.99, 0.5253], [0.9938, 0.3315, 0.6281, 0.3116]], [[0.392, 0.63, 0.3669, 0.0145], [0.7447, 0.2111, 0.9609, 0.9692], [0.403, 0.4589, 0.3662, 0.7967], [0.8372, 0.2316, 0.1379, 0.5848]]])
w[1] = np.array([[[0, 0, 0, 0], [0, 0, 0, 0]], [[0, 0, 0, 0], [0, 0, 0, 0]], [[0, 0, 0, 0], [0, 0, 0, 0]]])
model.get_layer('Loc39684').set_weights(w) 
in0Mul22706 = tf.constant([[[[0.7405, 0.4975]], [[0.3369, 0.3919]]]])
in1Mul22706 = tf.constant([[[[0.7277, 0.6762]], [[0.2855, 0.5341]]]])
in0Con12334 = tf.constant([[[[0.2665], [0.8876], [0.172], [0.8849], [0.1374], [0.5241], [0.7063], [0.4785]]]])
in0Min80635 = tf.constant([[[[0.6798, 0.7172], [0.09, 0.5036]]]])
in1Min80635 = tf.constant([[[[0.9549, 0.3709], [0.0389, 0.7488]]]])
print (np.array2string(model.predict([in0Mul22706,in1Mul22706,in0Con12334,in0Min80635,in1Min80635],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Min53594.png')

LMul22706 = multiply_layer([[[[[0.7405, 0.4975]], [[0.3369, 0.3919]]]], [[[[0.7277, 0.6762]], [[0.2855, 0.5341]]]]], Mul22706), 
LRes2048 = reshape_layer(Mul22706, [2, 1, 2, 1], Res2048), 
LUp_60148 = up_sampling3D_layer(Res2048, 2, 2, 1, Up_60148), 
LRes79207 = reshape_layer(Up_60148, [4, 2, 2], Res79207), 
LLoc39684 = locally_connected2D_layer(Res79207, 2, 1,[[[0.9849, 0.311, 0.4668, 0.2018], [0.9478, 0.3779, 0.241, 0.7271], [0.9642, 0.024, 0.9648, 0.6919], [0.9765, 0.9106, 0.2896, 0.454]], [[0.2407, 0.4458, 0.625, 0.69], [0.1954, 0.4542, 0.5124, 0.0601], [0.8187, 0.4934, 0.8936, 0.5186], [0.0441, 0.6251, 0.357, 0.1087]], [[0.8946, 0.8942, 0.7986, 0.4173], [0.8753, 0.2465, 0.5828, 0.734], [0.8199, 0.1255, 0.2048, 0.3573], [0.8239, 0.5267, 0.6653, 0.4233]], [[0.1202, 0.8622, 0.2506, 0.0904], [0.7502, 0.5885, 0.18, 0.9121], [0.6679, 0.1843, 0.6267, 0.7493], [0.4785, 0.7321, 0.9534, 0.6319]], [[0.3548, 0.0511, 0.6067, 0.5664], [0.8045, 0.0584, 0.0137, 0.4027], [0.8648, 0.7935, 0.99, 0.5253], [0.9938, 0.3315, 0.6281, 0.3116]], [[0.392, 0.63, 0.3669, 0.0145], [0.7447, 0.2111, 0.9609, 0.9692], [0.403, 0.4589, 0.3662, 0.7967], [0.8372, 0.2316, 0.1379, 0.5848]]],[[[0, 0, 0, 0], [0, 0, 0, 0]], [[0, 0, 0, 0], [0, 0, 0, 0]], [[0, 0, 0, 0], [0, 0, 0, 0]]], 1, 1, Loc39684), 
LRes82493 = reshape_layer(Loc39684, [3, 8], Res82493), 
LAve53586 = average_pooling1D_layer(Res82493, 1, 3, false, Ave53586), 
LRes49773 = reshape_layer(Ave53586, [1, 8, 1], Res49773), 
LCon12334 = concatenate_layer([Res49773,[[[[0.2665], [0.8876], [0.172], [0.8849], [0.1374], [0.5241], [0.7063], [0.4785]]]]], 3, Con12334), 
LMin80635 = minimum_layer([[[[[0.6798, 0.7172], [0.09, 0.5036]]]], [[[[0.9549, 0.3709], [0.0389, 0.7488]]]]], Min80635), 
LZer39485 = zero_padding2D_layer(Min80635, 0, 0, 6, 0, Zer39485), 
LMin53594 = minimum_layer([Con12334,Zer39485], Min53594), 
exec_layers([LMul22706,LRes2048,LUp_60148,LRes79207,LLoc39684,LRes82493,LAve53586,LRes49773,LCon12334,LMin80635,LZer39485,LMin53594],["Mul22706","Res2048","Up_60148","Res79207","Loc39684","Res82493","Ave53586","Res49773","Con12334","Min80635","Zer39485","Min53594"],Min53594,"Min53594")

Actual (Unparsed): [[[[0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.6798000, 0.3709000], [0.0389000, 0.4785000]]]]

Expected (Unparsed): [[[[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0.6798,0.3709],[0.0389,0.4785]]]]

Actual:   [[[[0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0.6798, 0.3709], [0.0389, 0.4785]]]]

Expected: [[[[0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0.6798, 0.3709], [0.0389, 0.4785]]]]