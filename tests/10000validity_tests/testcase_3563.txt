import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Ave68704 = tf.keras.layers.Input(shape=([1, 1, 1, 1]))
in1Ave68704 = tf.keras.layers.Input(shape=([1, 1, 1, 1]))
in0Con85706 = tf.keras.layers.Input(shape=([1, 1, 3]))
in0Loc20638 = tf.keras.layers.Input(shape=([2, 2, 1]))

Ave68704 = keras.layers.Average(name = 'Ave68704', )([in0Ave68704,in1Ave68704])
Res55892 = keras.layers.Reshape((1, 1, 1), name = 'Res55892', )(Ave68704)
Con85706 = keras.layers.Concatenate(axis=3, name = 'Con85706', )([Res55892,in0Con85706])
Loc20638 = keras.layers.LocallyConnected2D(4, (2, 2),strides=(1, 1), name = 'Loc20638', )(in0Loc20638)
Sof33158 = keras.layers.Softmax(axis=1, name = 'Sof33158', )(Loc20638)
Mul78505 = keras.layers.Multiply(name = 'Mul78505', )([Con85706,Sof33158])
Zer42394 = keras.layers.ZeroPadding2D(padding=((1, 1), (1, 1)), name = 'Zer42394', )(Mul78505)
Max32670 = keras.layers.MaxPool2D(pool_size=(2, 1), name = 'Max32670', )(Zer42394)
model = tf.keras.models.Model(inputs=[in0Ave68704,in1Ave68704,in0Con85706,in0Loc20638], outputs=Max32670)
w = model.get_layer('Loc20638').get_weights() 
w[0] = np.array([[[0.3778, 0.1911, 0.9403, 0.6706], [0.2185, 0.0734, 0.6749, 0.377], [0.1605, 0.003, 0.0283, 0.2557], [0.8627, 0.0136, 0.1961, 0.3674]]])
w[1] = np.array([[[0, 0, 0, 0]]])
model.get_layer('Loc20638').set_weights(w) 
in0Ave68704 = tf.constant([[[[[0.8568]]]]])
in1Ave68704 = tf.constant([[[[[0.9835]]]]])
in0Con85706 = tf.constant([[[[0.7808, 0.9449, 0.6955]]]])
in0Loc20638 = tf.constant([[[[0.325], [0.9297]], [[0.8856], [0.0076]]]])
print (np.array2string(model.predict([in0Ave68704,in1Ave68704,in0Con85706,in0Loc20638],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Max32670.png')

LAve68704 = average_layer([[[[[[0.8568]]]]], [[[[[0.9835]]]]]], Ave68704), 
LRes55892 = reshape_layer(Ave68704, [1, 1, 1], Res55892), 
LCon85706 = concatenate_layer([Res55892,[[[[0.7808, 0.9449, 0.6955]]]]], 3, Con85706), 
LLoc20638 = locally_connected2D_layer([[[[0.325], [0.9297]], [[0.8856], [0.0076]]]], 2, 2,[[[0.3778, 0.1911, 0.9403, 0.6706], [0.2185, 0.0734, 0.6749, 0.377], [0.1605, 0.003, 0.0283, 0.2557], [0.8627, 0.0136, 0.1961, 0.3674]]],[[[0, 0, 0, 0]]], 1, 1, Loc20638), 
LSof33158 = softmax_layer(Loc20638, 1, Sof33158), 
LMul78505 = multiply_layer([Con85706,Sof33158], Mul78505), 
LZer42394 = zero_padding2D_layer(Mul78505, 1, 1, 1, 1, Zer42394), 
LMax32670 = max_pool2D_layer(Zer42394, 2, 1, Max32670), 
exec_layers([LAve68704,LRes55892,LCon85706,LLoc20638,LSof33158,LMul78505,LZer42394,LMax32670],["Ave68704","Res55892","Con85706","Loc20638","Sof33158","Mul78505","Zer42394","Max32670"],Max32670,"Max32670")

Actual (Unparsed): [[[[0.0000000, 0.0000000, 0.0000000, 0.0000000], [0.9201500, 0.7808000, 0.9449000, 0.6955000], [0.0000000, 0.0000000, 0.0000000, 0.0000000]]]]

Expected (Unparsed): [[[[0,0,0,0],[0.92015,0.7808,0.9449,0.6955],[0,0,0,0]]]]

Actual:   [[[[0, 0, 0, 0], [0.9202, 0.7808, 0.9449, 0.6955], [0, 0, 0, 0]]]]

Expected: [[[[0, 0, 0, 0], [0.9202, 0.7808, 0.9449, 0.6955], [0, 0, 0, 0]]]]