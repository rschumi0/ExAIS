import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Min8408 = tf.keras.layers.Input(shape=([2, 2]))
in1Min8408 = tf.keras.layers.Input(shape=([2, 2]))
in0Glo25340 = tf.keras.layers.Input(shape=([1, 2, 2, 1]))
in0Con61928 = tf.keras.layers.Input(shape=([3]))
in0Con58444 = tf.keras.layers.Input(shape=([6, 5, 2]))
in0Zer30409 = tf.keras.layers.Input(shape=([4, 3, 3]))

Min8408 = keras.layers.Minimum(name = 'Min8408', )([in0Min8408,in1Min8408])
Fla78119 = keras.layers.Flatten(name = 'Fla78119', )(Min8408)
Glo25340 = keras.layers.GlobalAveragePooling3D(name = 'Glo25340', )(in0Glo25340)
Con61928 = keras.layers.Concatenate(axis=1, name = 'Con61928', )([Glo25340,in0Con61928])
Min92944 = keras.layers.Minimum(name = 'Min92944', )([Fla78119,Con61928])
Res7731 = keras.layers.Reshape((4, 1), name = 'Res7731', )(Min92944)
Res66152 = keras.layers.Reshape((4, 1, 1), name = 'Res66152', )(Res7731)
Zer53826 = keras.layers.ZeroPadding2D(padding=((2, 0), (4, 0)), name = 'Zer53826', )(Res66152)
Con58444 = keras.layers.Concatenate(axis=3, name = 'Con58444', )([Zer53826,in0Con58444])
Zer30409 = keras.layers.ZeroPadding2D(padding=((1, 1), (1, 1)), name = 'Zer30409', )(in0Zer30409)
Lay49523 = keras.layers.LayerNormalization(axis=2, epsilon=1.271405818972305, name = 'Lay49523', )(Zer30409)
Max2710 = keras.layers.Maximum(name = 'Max2710', )([Con58444,Lay49523])
Res80179 = keras.layers.Reshape((6, 5, 3, 1), name = 'Res80179', )(Max2710)
Con39874 = keras.layers.Conv3D(2, (4, 5, 1),strides=(1, 1, 1), padding='same', dilation_rate=(1, 1, 1), name = 'Con39874', )(Res80179)
Glo2588 = keras.layers.GlobalMaxPool3D(name = 'Glo2588', )(Con39874)
model = tf.keras.models.Model(inputs=[in0Min8408,in1Min8408,in0Glo25340,in0Con61928,in0Con58444,in0Zer30409], outputs=Glo2588)
w = model.get_layer('Con39874').get_weights() 
w[0] = np.array([[[[[0.9228, 0.9002]]], [[[0.2236, 0.0676]]], [[[0.8377, 0.6474]]], [[[0.1494, 0.283]]], [[[0.0755, 0.4717]]]], [[[[0.9677, 0.5137]]], [[[0.8274, 0.3298]]], [[[0.9278, 0.5737]]], [[[0.3553, 0.8834]]], [[[0.885, 0.9923]]]], [[[[0.7944, 0.0761]]], [[[0.3572, 0.4207]]], [[[0.5576, 0.7564]]], [[[0.0791, 0.3233]]], [[[0.4844, 0.5792]]]], [[[[0.1679, 0.9999]]], [[[0.6665, 0.4624]]], [[[0.1257, 0.4851]]], [[[0.5731, 0.0772]]], [[[0.4259, 0.0223]]]]])
w[1] = np.array([0, 0])
model.get_layer('Con39874').set_weights(w) 
in0Min8408 = tf.constant([[[0.5174, 0.8764], [0.8143, 0.5088]]])
in1Min8408 = tf.constant([[[0.6875, 0.0987], [0.79, 0.3275]]])
in0Glo25340 = tf.constant([[[[[1.9779], [1.4865]], [[1.9222], [1.9106]]]]])
in0Con61928 = tf.constant([[0.9766, 0.1816, 0.4947]])
in0Con58444 = tf.constant([[[[0.9989, 0.3209], [0.4592, 0.0276], [0.319, 0.8596], [0.4664, 0.7343], [0.7809, 0.7761]], [[0.7265, 0.244], [0.5996, 0.3068], [0.572, 0.8847], [0.535, 0.1174], [0.7039, 0.3989]], [[0.3181, 0.811], [0.9818, 0.8528], [0.9674, 0.7286], [0.4717, 0.9457], [0.5227, 0.3639]], [[0.1891, 0.1138], [0.5204, 0.3941], [0.3557, 0.2054], [0.7444, 0.6736], [0.2701, 0.0547]], [[0.4025, 0.5308], [0.0905, 0.9755], [0.8955, 0.3642], [0.9206, 0.0572], [0.7755, 0.8433]], [[0.6002, 0.1548], [0.3217, 0.9831], [0.5086, 0.637], [0.402, 0.9868], [0.5085, 0.2773]]]])
in0Zer30409 = tf.constant([[[[1.4405, 1.6995, 1.368], [1.8114, 1.4294, 1.16], [1.1008, 1.7299, 1.6335]], [[1.5928, 1.3079, 1.576], [1.146, 1.8727, 1.0805], [1.1448, 1.2842, 1.3548]], [[1.6362, 1.2488, 1.2417], [1.8406, 1.4506, 1.5257], [1.8172, 1.3404, 1.1004]], [[1.0355, 1.4006, 1.836], [1.3232, 1.1921, 1.1158], [1.3144, 1.7864, 1.5403]]]])
print (np.array2string(model.predict([in0Min8408,in1Min8408,in0Glo25340,in0Con61928,in0Con58444,in0Zer30409],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Glo2588.png')

LMin8408 = minimum_layer([[[[0.5174, 0.8764], [0.8143, 0.5088]]], [[[0.6875, 0.0987], [0.79, 0.3275]]]], Min8408), 
LFla78119 = flatten_layer(Min8408, Fla78119), 
LGlo25340 = global_average_pooling3D_layer([[[[[1.9779], [1.4865]], [[1.9222], [1.9106]]]]], Glo25340), 
LCon61928 = concatenate_layer([Glo25340,[[0.9766, 0.1816, 0.4947]]], 1, Con61928), 
LMin92944 = minimum_layer([Fla78119,Con61928], Min92944), 
LRes7731 = reshape_layer(Min92944, [4, 1], Res7731), 
LRes66152 = reshape_layer(Res7731, [4, 1, 1], Res66152), 
LZer53826 = zero_padding2D_layer(Res66152, 2, 0, 4, 0, Zer53826), 
LCon58444 = concatenate_layer([Zer53826,[[[[0.9989, 0.3209], [0.4592, 0.0276], [0.319, 0.8596], [0.4664, 0.7343], [0.7809, 0.7761]], [[0.7265, 0.244], [0.5996, 0.3068], [0.572, 0.8847], [0.535, 0.1174], [0.7039, 0.3989]], [[0.3181, 0.811], [0.9818, 0.8528], [0.9674, 0.7286], [0.4717, 0.9457], [0.5227, 0.3639]], [[0.1891, 0.1138], [0.5204, 0.3941], [0.3557, 0.2054], [0.7444, 0.6736], [0.2701, 0.0547]], [[0.4025, 0.5308], [0.0905, 0.9755], [0.8955, 0.3642], [0.9206, 0.0572], [0.7755, 0.8433]], [[0.6002, 0.1548], [0.3217, 0.9831], [0.5086, 0.637], [0.402, 0.9868], [0.5085, 0.2773]]]]], 3, Con58444), 
LZer30409 = zero_padding2D_layer([[[[1.4405, 1.6995, 1.368], [1.8114, 1.4294, 1.16], [1.1008, 1.7299, 1.6335]], [[1.5928, 1.3079, 1.576], [1.146, 1.8727, 1.0805], [1.1448, 1.2842, 1.3548]], [[1.6362, 1.2488, 1.2417], [1.8406, 1.4506, 1.5257], [1.8172, 1.3404, 1.1004]], [[1.0355, 1.4006, 1.836], [1.3232, 1.1921, 1.1158], [1.3144, 1.7864, 1.5403]]]], 1, 1, 1, 1, Zer30409), 
LLay49523 = layer_normalization_layer(Zer30409, 2, 1.271405818972305, Lay49523), 
LMax2710 = maximum_layer([Con58444,Lay49523], Max2710), 
LRes80179 = reshape_layer(Max2710, [6, 5, 3, 1], Res80179), 
LCon39874 = conv3D_layer(Res80179, 4, 5, 1,[[[[[0.9228, 0.9002]]], [[[0.2236, 0.0676]]], [[[0.8377, 0.6474]]], [[[0.1494, 0.283]]], [[[0.0755, 0.4717]]]], [[[[0.9677, 0.5137]]], [[[0.8274, 0.3298]]], [[[0.9278, 0.5737]]], [[[0.3553, 0.8834]]], [[[0.885, 0.9923]]]], [[[[0.7944, 0.0761]]], [[[0.3572, 0.4207]]], [[[0.5576, 0.7564]]], [[[0.0791, 0.3233]]], [[[0.4844, 0.5792]]]], [[[[0.1679, 0.9999]]], [[[0.6665, 0.4624]]], [[[0.1257, 0.4851]]], [[[0.5731, 0.0772]]], [[[0.4259, 0.0223]]]]],[0, 0], 1, 1, 1, true, 1, 1, 1, Con39874), 
LGlo2588 = global_max_pool3D_layer(Con39874, Glo2588), 
exec_layers([LMin8408,LFla78119,LGlo25340,LCon61928,LMin92944,LRes7731,LRes66152,LZer53826,LCon58444,LZer30409,LLay49523,LMax2710,LRes80179,LCon39874,LGlo2588],["Min8408","Fla78119","Glo25340","Con61928","Min92944","Res7731","Res66152","Zer53826","Con58444","Zer30409","Lay49523","Max2710","Res80179","Con39874","Glo2588"],Glo2588,"Glo2588")

Actual (Unparsed): [[6.3832696, 6.0748632]]

Expected (Unparsed): [[6.383269551680324,6.074863177569414]]

Actual:   [[6.3833, 6.0749]]

Expected: [[6.3833, 6.0749]]