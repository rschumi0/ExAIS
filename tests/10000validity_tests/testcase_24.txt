import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Con42495 = tf.keras.layers.Input(shape=([2, 2, 1, 1]))
in0Cro24134 = tf.keras.layers.Input(shape=([4, 2]))
in0Ave52693 = tf.keras.layers.Input(shape=([2, 2]))
in1Ave52693 = tf.keras.layers.Input(shape=([2, 2]))
in0Con40375 = tf.keras.layers.Input(shape=([2, 2, 2, 1]))
in0Thr56700 = tf.keras.layers.Input(shape=([1, 2, 2, 2]))
in0Thr7943 = tf.keras.layers.Input(shape=([2, 2, 2, 1]))
in0Con29866 = tf.keras.layers.Input(shape=([2, 2, 2, 1]))

Con42495 = keras.layers.Conv3D(2, (2, 1, 1),strides=(1, 1, 1), padding='valid', dilation_rate=(1, 1, 1), name = 'Con42495', )(in0Con42495)
Res33825 = keras.layers.Reshape((1, 2, 2), name = 'Res33825', )(Con42495)
Cro24134 = keras.layers.Cropping1D(cropping=((2, 1)), name = 'Cro24134', )(in0Cro24134)
Zer18143 = keras.layers.ZeroPadding1D(padding=((1, 0)), name = 'Zer18143', )(Cro24134)
Ave52693 = keras.layers.Average(name = 'Ave52693', )([in0Ave52693,in1Ave52693])
Sub98904 = keras.layers.Subtract(name = 'Sub98904', )([Zer18143,Ave52693])
Res97577 = keras.layers.Reshape((1, 2, 2), name = 'Res97577', )(Sub98904)
Sub70516 = keras.layers.Subtract(name = 'Sub70516', )([Res33825,Res97577])
Res63713 = keras.layers.Reshape((1, 2, 2, 1), name = 'Res63713', )(Sub70516)
Zer26307 = keras.layers.ZeroPadding3D(padding=((1, 0), (0, 0), (0, 0)), name = 'Zer26307', )(Res63713)
Con40375 = keras.layers.Concatenate(axis=4, name = 'Con40375', )([Zer26307,in0Con40375])
Thr56700 = keras.layers.ThresholdedReLU(theta=8.233373071754173, name = 'Thr56700', input_shape=(1, 2, 2, 2))(in0Thr56700)
Zer80929 = keras.layers.ZeroPadding3D(padding=((1, 0), (0, 0), (0, 0)), name = 'Zer80929', )(Thr56700)
Thr7943 = keras.layers.ThresholdedReLU(theta=5.060679810249548, name = 'Thr7943', input_shape=(2, 2, 2, 1))(in0Thr7943)
Con29866 = keras.layers.Concatenate(axis=4, name = 'Con29866', )([Thr7943,in0Con29866])
Min82903 = keras.layers.Minimum(name = 'Min82903', )([Zer80929,Con29866])
Mul41663 = keras.layers.Multiply(name = 'Mul41663', )([Con40375,Min82903])
model = tf.keras.models.Model(inputs=[in0Con42495,in0Cro24134,in0Ave52693,in1Ave52693,in0Con40375,in0Thr56700,in0Thr7943,in0Con29866], outputs=Mul41663)
w = model.get_layer('Con42495').get_weights() 
w[0] = np.array([[[[[0.3634, 0.2318]]]], [[[[0.2446, 0.8683]]]]])
w[1] = np.array([0, 0])
model.get_layer('Con42495').set_weights(w) 
in0Con42495 = tf.constant([[[[[0.6398]], [[0.7068]]], [[[0.6878]], [[0.9104]]]]])
in0Cro24134 = tf.constant([[[1.6214, 1.5702], [1.1931, 1.7776], [1.2487, 1.8636], [1.2585, 1.3695]]])
in0Ave52693 = tf.constant([[[0.4492, 0.4719], [0.6262, 0.8617]]])
in1Ave52693 = tf.constant([[[0.2031, 0.7622], [0.7522, 0.5165]]])
in0Con40375 = tf.constant([[[[[0.9242], [0.0855]], [[0.044], [0.2842]]], [[[0.672], [0.63]], [[0.6164], [0.7251]]]]])
in0Thr56700 = tf.constant([[[[[0.1328, 0.5085], [0.7465, 0.9662]], [[0.9579, 0.8859], [0.1466, 0.1622]]]]])
in0Thr7943 = tf.constant([[[[[0.1371], [0.381]], [[0.9836], [0.2899]]], [[[0.833], [0.9711]], [[0.112], [0.2789]]]]])
in0Con29866 = tf.constant([[[[[0.244], [0.9389]], [[0.0756], [0.0737]]], [[[0.761], [0.7315]], [[0.6898], [0.9639]]]]])
print (np.array2string(model.predict([in0Con42495,in0Cro24134,in0Ave52693,in1Ave52693,in0Con40375,in0Thr56700,in0Thr7943,in0Con29866],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Mul41663.png')

LCon42495 = conv3D_layer([[[[[0.6398]], [[0.7068]]], [[[0.6878]], [[0.9104]]]]], 2, 1, 1,[[[[[0.3634, 0.2318]]]], [[[[0.2446, 0.8683]]]]],[0, 0], 1, 1, 1, false, 1, 1, 1, Con42495), 
LRes33825 = reshape_layer(Con42495, [1, 2, 2], Res33825), 
LCro24134 = cropping1D_layer([[[1.6214, 1.5702], [1.1931, 1.7776], [1.2487, 1.8636], [1.2585, 1.3695]]], 2, 1, Cro24134), 
LZer18143 = zero_padding1D_layer(Cro24134, 1, 0, Zer18143), 
LAve52693 = average_layer([[[[0.4492, 0.4719], [0.6262, 0.8617]]], [[[0.2031, 0.7622], [0.7522, 0.5165]]]], Ave52693), 
LSub98904 = subtract_layer(Zer18143,Ave52693, Sub98904), 
LRes97577 = reshape_layer(Sub98904, [1, 2, 2], Res97577), 
LSub70516 = subtract_layer(Res33825,Res97577, Sub70516), 
LRes63713 = reshape_layer(Sub70516, [1, 2, 2, 1], Res63713), 
LZer26307 = zero_padding3D_layer(Res63713, 1, 0, 0, 0, 0, 0, Zer26307), 
LCon40375 = concatenate_layer([Zer26307,[[[[[0.9242], [0.0855]], [[0.044], [0.2842]]], [[[0.672], [0.63]], [[0.6164], [0.7251]]]]]], 4, Con40375), 
LThr56700 = thresholded_relu_layer([[[[[0.1328, 0.5085], [0.7465, 0.9662]], [[0.9579, 0.8859], [0.1466, 0.1622]]]]], 8.233373071754173, Thr56700), 
LZer80929 = zero_padding3D_layer(Thr56700, 1, 0, 0, 0, 0, 0, Zer80929), 
LThr7943 = thresholded_relu_layer([[[[[0.1371], [0.381]], [[0.9836], [0.2899]]], [[[0.833], [0.9711]], [[0.112], [0.2789]]]]], 5.060679810249548, Thr7943), 
LCon29866 = concatenate_layer([Thr7943,[[[[[0.244], [0.9389]], [[0.0756], [0.0737]]], [[[0.761], [0.7315]], [[0.6898], [0.9639]]]]]], 4, Con29866), 
LMin82903 = minimum_layer([Zer80929,Con29866], Min82903), 
LMul41663 = multiply_layer([Con40375,Min82903], Mul41663), 
exec_layers([LCon42495,LRes33825,LCro24134,LZer18143,LAve52693,LSub98904,LRes97577,LSub70516,LRes63713,LZer26307,LCon40375,LThr56700,LZer80929,LThr7943,LCon29866,LMin82903,LMul41663],["Con42495","Res33825","Cro24134","Zer18143","Ave52693","Sub98904","Res97577","Sub70516","Res63713","Zer26307","Con40375","Thr56700","Zer80929","Thr7943","Con29866","Min82903","Mul41663"],Mul41663,"Mul41663")

Actual (Unparsed): [[[[[0.0000000, 0.0000000], [0.0000000, 0.0000000]], [[0.0000000, 0.0000000], [0.0000000, 0.0000000]]], [[[0.0000000, 0.0000000], [0.0000000, 0.0000000]], [[-0.0000000, 0.0000000], [-0.0000000, 0.0000000]]]]]

Expected (Unparsed): [[[[[0,0.0],[0,0.0]],[[0,0.0],[0,0.0]]],[[[0.0,0.0],[0.0,0.0]],[[-0.0,0.0],[-0.0,0.0]]]]]

Actual:   [[[[[0, 0], [0, 0]], [[0, 0], [0, 0]]], [[[0, 0], [0, 0]], [[-0, 0], [-0, 0]]]]]

Expected: [[[[[0, 0], [0, 0]], [[0, 0], [0, 0]]], [[[0, 0], [0, 0]], [[-0, 0], [-0, 0]]]]]