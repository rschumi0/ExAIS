import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Add58271 = tf.keras.layers.Input(shape=([2, 2]))
in1Add58271 = tf.keras.layers.Input(shape=([2, 2]))
in0Con30978 = tf.keras.layers.Input(shape=([4, 4, 1]))
in0Max65990 = tf.keras.layers.Input(shape=([2, 1]))
in1Max65990 = tf.keras.layers.Input(shape=([2, 1]))
in0Con95814 = tf.keras.layers.Input(shape=([2, 3, 1]))
in0Max81326 = tf.keras.layers.Input(shape=([1, 2, 2]))
in1Max81326 = tf.keras.layers.Input(shape=([1, 2, 2]))

Add58271 = keras.layers.Add(name = 'Add58271', )([in0Add58271,in1Add58271])
Res85605 = keras.layers.Reshape((2, 2, 1), name = 'Res85605', )(Add58271)
Zer97489 = keras.layers.ZeroPadding2D(padding=((1, 1), (1, 1)), name = 'Zer97489', )(Res85605)
Con30978 = keras.layers.Concatenate(axis=3, name = 'Con30978', )([Zer97489,in0Con30978])
Max65990 = keras.layers.Maximum(name = 'Max65990', )([in0Max65990,in1Max65990])
Res97167 = keras.layers.Reshape((2, 1, 1), name = 'Res97167', )(Max65990)
Zer93008 = keras.layers.ZeroPadding2D(padding=((0, 0), (2, 0)), name = 'Zer93008', )(Res97167)
Con95814 = keras.layers.Concatenate(axis=3, name = 'Con95814', )([Zer93008,in0Con95814])
Max81326 = keras.layers.Maximum(name = 'Max81326', )([in0Max81326,in1Max81326])
Zer23725 = keras.layers.ZeroPadding2D(padding=((1, 0), (1, 0)), name = 'Zer23725', )(Max81326)
Min94005 = keras.layers.Minimum(name = 'Min94005', )([Con95814,Zer23725])
Zer74634 = keras.layers.ZeroPadding2D(padding=((2, 0), (1, 0)), name = 'Zer74634', )(Min94005)
Add9632 = keras.layers.Add(name = 'Add9632', )([Con30978,Zer74634])
model = tf.keras.models.Model(inputs=[in0Add58271,in1Add58271,in0Con30978,in0Max65990,in1Max65990,in0Con95814,in0Max81326,in1Max81326], outputs=Add9632)
in0Add58271 = tf.constant([[[0.3614, 0.2945], [0.2243, 0.0606]]])
in1Add58271 = tf.constant([[[0.2363, 0.4856], [0.0489, 0.8534]]])
in0Con30978 = tf.constant([[[[0.814], [0.9173], [0.3507], [0.2656]], [[0.2264], [0.1477], [0.1947], [0.5071]], [[0.7845], [0.1885], [0.1357], [0.7032]], [[0.6181], [0.4746], [0.0574], [0.2293]]]])
in0Max65990 = tf.constant([[[0.7359], [0.2596]]])
in1Max65990 = tf.constant([[[0.6574], [0.8922]]])
in0Con95814 = tf.constant([[[[0.0866], [0.3837], [0.2053]], [[0.6152], [0.8948], [0.7648]]]])
in0Max81326 = tf.constant([[[[0.6596, 0.1451], [0.2766, 0.6431]]]])
in1Max81326 = tf.constant([[[[0.1018, 0.6027], [0.4767, 0.0943]]]])
print (np.array2string(model.predict([in0Add58271,in1Add58271,in0Con30978,in0Max65990,in1Max65990,in0Con95814,in0Max81326,in1Max81326],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Add9632.png')

LAdd58271 = add_layer([[[[0.3614, 0.2945], [0.2243, 0.0606]]], [[[0.2363, 0.4856], [0.0489, 0.8534]]]], Add58271), 
LRes85605 = reshape_layer(Add58271, [2, 2, 1], Res85605), 
LZer97489 = zero_padding2D_layer(Res85605, 1, 1, 1, 1, Zer97489), 
LCon30978 = concatenate_layer([Zer97489,[[[[0.814], [0.9173], [0.3507], [0.2656]], [[0.2264], [0.1477], [0.1947], [0.5071]], [[0.7845], [0.1885], [0.1357], [0.7032]], [[0.6181], [0.4746], [0.0574], [0.2293]]]]], 3, Con30978), 
LMax65990 = maximum_layer([[[[0.7359], [0.2596]]], [[[0.6574], [0.8922]]]], Max65990), 
LRes97167 = reshape_layer(Max65990, [2, 1, 1], Res97167), 
LZer93008 = zero_padding2D_layer(Res97167, 0, 0, 2, 0, Zer93008), 
LCon95814 = concatenate_layer([Zer93008,[[[[0.0866], [0.3837], [0.2053]], [[0.6152], [0.8948], [0.7648]]]]], 3, Con95814), 
LMax81326 = maximum_layer([[[[[0.6596, 0.1451], [0.2766, 0.6431]]]], [[[[0.1018, 0.6027], [0.4767, 0.0943]]]]], Max81326), 
LZer23725 = zero_padding2D_layer(Max81326, 1, 0, 1, 0, Zer23725), 
LMin94005 = minimum_layer([Con95814,Zer23725], Min94005), 
LZer74634 = zero_padding2D_layer(Min94005, 2, 0, 1, 0, Zer74634), 
LAdd9632 = add_layer([Con30978,Zer74634], Add9632), 
exec_layers([LAdd58271,LRes85605,LZer97489,LCon30978,LMax65990,LRes97167,LZer93008,LCon95814,LMax81326,LZer23725,LMin94005,LZer74634,LAdd9632],["Add58271","Res85605","Zer97489","Con30978","Max65990","Res97167","Zer93008","Con95814","Max81326","Zer23725","Min94005","Zer74634","Add9632"],Add9632,"Add9632")

Actual (Unparsed): [[[[0.0000000, 0.8140000], [0.0000000, 0.9173000], [0.0000000, 0.3507000], [0.0000000, 0.2656000]], [[0.0000000, 0.2264000], [0.5977000, 0.1477000], [0.7801000, 0.1947000], [0.0000000, 0.5071000]], [[0.0000000, 0.7845000], [0.2732000, 0.1885000], [0.9140000, 0.1357000], [0.0000000, 0.7032000]], [[0.0000000, 0.6181000], [0.0000000, 0.4746000], [0.0000000, 0.6601000], [0.4767000, 0.8724000]]]]

Expected (Unparsed): [[[[0,0.814],[0,0.9173],[0,0.3507],[0,0.2656]],[[0,0.2264],[0.5977,0.1477],[0.7801,0.1947],[0,0.5071]],[[0,0.7845],[0.2732,0.1885],[0.914,0.1357],[0,0.7032]],[[0,0.6181],[0,0.4746],[0,0.6601],[0.4767,0.8724000000000001]]]]

Actual:   [[[[0, 0.814], [0, 0.9173], [0, 0.3507], [0, 0.2656]], [[0, 0.2264], [0.5977, 0.1477], [0.7801, 0.1947], [0, 0.5071]], [[0, 0.7845], [0.2732, 0.1885], [0.914, 0.1357], [0, 0.7032]], [[0, 0.6181], [0, 0.4746], [0, 0.6601], [0.4767, 0.8724]]]]

Expected: [[[[0, 0.814], [0, 0.9173], [0, 0.3507], [0, 0.2656]], [[0, 0.2264], [0.5977, 0.1477], [0.7801, 0.1947], [0, 0.5071]], [[0, 0.7845], [0.2732, 0.1885], [0.914, 0.1357], [0, 0.7032]], [[0, 0.6181], [0, 0.4746], [0, 0.6601], [0.4767, 0.8725]]]]