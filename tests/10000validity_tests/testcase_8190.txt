import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Mul53543 = tf.keras.layers.Input(shape=([1, 1]))
in1Mul53543 = tf.keras.layers.Input(shape=([1, 1]))

Mul53543 = keras.layers.Multiply(name = 'Mul53543', )([in0Mul53543,in1Mul53543])
Bat61578 = keras.layers.BatchNormalization(axis=1, epsilon=0.31847407506013053,  name = 'Bat61578', )(Mul53543)
Res30156 = keras.layers.Reshape((1, 1, 1), name = 'Res30156', )(Bat61578)
Up_43568 = keras.layers.UpSampling2D(size=(2, 1), name = 'Up_43568', )(Res30156)
model = tf.keras.models.Model(inputs=[in0Mul53543,in1Mul53543], outputs=Up_43568)
w = model.get_layer('Bat61578').get_weights() 
w[0] = np.array([0.2126])
w[1] = np.array([0.6642])
w[2] = np.array([0.0718])
w[3] = np.array([0.7743])
model.get_layer('Bat61578').set_weights(w) 
in0Mul53543 = tf.constant([[[0.0009]]])
in1Mul53543 = tf.constant([[[0.925]]])
print (np.array2string(model.predict([in0Mul53543,in1Mul53543],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Up_43568.png')

LMul53543 = multiply_layer([[[[0.0009]]], [[[0.925]]]], Mul53543), 
LBat61578 = batch_normalization_layer(Mul53543, 1, 0.31847407506013053, [0.2126], [0.6642], [0.0718], [0.7743], Bat61578), 
LRes30156 = reshape_layer(Bat61578, [1, 1, 1], Res30156), 
LUp_43568 = up_sampling2D_layer(Res30156, 2, 1, Up_43568), 
exec_layers([LMul53543,LBat61578,LRes30156,LUp_43568],["Mul53543","Bat61578","Res30156","Up_43568"],Up_43568,"Up_43568")

Actual (Unparsed): [[[[0.6497670]], [[0.6497670]]]]

Expected (Unparsed): [[[[0.6497669679842198]],[[0.6497669679842198]]]]

Actual:   [[[[0.6498]], [[0.6498]]]]

Expected: [[[[0.6498]], [[0.6498]]]]