import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Ave87986 = tf.keras.layers.Input(shape=([2, 1, 2]))
in1Ave87986 = tf.keras.layers.Input(shape=([2, 1, 2]))

Ave87986 = keras.layers.Average(name = 'Ave87986', )([in0Ave87986,in1Ave87986])
Res15867 = keras.layers.Reshape((2, 1, 2, 1), name = 'Res15867', )(Ave87986)
Up_88938 = keras.layers.UpSampling3D(size=(1, 1, 2), name = 'Up_88938', )(Res15867)
Res22993 = keras.layers.Reshape((2, 1, 4), name = 'Res22993', )(Up_88938)
Res33683 = keras.layers.Reshape((2, 4), name = 'Res33683', )(Res22993)
Per36270 = keras.layers.Permute((2,1), name = 'Per36270',)(Res33683)
model = tf.keras.models.Model(inputs=[in0Ave87986,in1Ave87986], outputs=Per36270)
in0Ave87986 = tf.constant([[[[0.1491, 0.1939]], [[0.5072, 0.5753]]]])
in1Ave87986 = tf.constant([[[[0.4389, 0.3151]], [[0.5434, 0.3162]]]])
print (np.array2string(model.predict([in0Ave87986,in1Ave87986],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Per36270.png')

LAve87986 = average_layer([[[[[0.1491, 0.1939]], [[0.5072, 0.5753]]]], [[[[0.4389, 0.3151]], [[0.5434, 0.3162]]]]], Ave87986), 
LRes15867 = reshape_layer(Ave87986, [2, 1, 2, 1], Res15867), 
LUp_88938 = up_sampling3D_layer(Res15867, 1, 1, 2, Up_88938), 
LRes22993 = reshape_layer(Up_88938, [2, 1, 4], Res22993), 
LRes33683 = reshape_layer(Res22993, [2, 4], Res33683), 
LPer36270 = permute_layer(Res33683, 2,1, Per36270), 
exec_layers([LAve87986,LRes15867,LUp_88938,LRes22993,LRes33683,LPer36270],["Ave87986","Res15867","Up_88938","Res22993","Res33683","Per36270"],Per36270,"Per36270")

Actual (Unparsed): [[[0.2940000, 0.5253000], [0.2940000, 0.5253000], [0.2545000, 0.4457500], [0.2545000, 0.4457500]]]

Expected (Unparsed): [[[0.29400000000000004,0.5253],[0.29400000000000004,0.5253],[0.2545,0.44575],[0.2545,0.44575]]]

Actual:   [[[0.294, 0.5253], [0.294, 0.5253], [0.2545, 0.4458], [0.2545, 0.4458]]]

Expected: [[[0.2941, 0.5253], [0.2941, 0.5253], [0.2545, 0.4458], [0.2545, 0.4458]]]