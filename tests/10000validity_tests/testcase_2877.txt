import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0GRU73012 = tf.keras.layers.Input(shape=([3, 2]))

GRU73012 = keras.layers.GRU(2,reset_after=False, recurrent_activation='sigmoid', name = 'GRU73012', )(in0GRU73012)
Fla97357 = keras.layers.Flatten(name = 'Fla97357', )(GRU73012)
Res93983 = keras.layers.Reshape((2, 1), name = 'Res93983', )(Fla97357)
Res60395 = keras.layers.Reshape((2, 1, 1), name = 'Res60395', )(Res93983)
Up_60507 = keras.layers.UpSampling2D(size=(1, 2), name = 'Up_60507', )(Res60395)
model = tf.keras.models.Model(inputs=[in0GRU73012], outputs=Up_60507)
w = model.get_layer('GRU73012').get_weights() 
w[0] = np.array([[9, 10, 3, 1, 7, 1], [9, 4, 10, 9, 8, 3]])
w[1] = np.array([[4, 5, 7, 4, 9, 4], [2, 10, 7, 5, 3, 4]])
w[2] = np.array([7, 7, 5, 5, 9, 6])
model.get_layer('GRU73012').set_weights(w) 
in0GRU73012 = tf.constant([[[2, 5], [10, 10], [5, 8]]])
print (np.array2string(model.predict([in0GRU73012],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Up_60507.png')

LGRU73012 = gru_layer([[[2, 5], [10, 10], [5, 8]]],[[9, 10, 3, 1, 7, 1], [9, 4, 10, 9, 8, 3]],[[4, 5, 7, 4, 9, 4], [2, 10, 7, 5, 3, 4]],[7, 7, 5, 5, 9, 6], false, GRU73012), 
LFla97357 = flatten_layer(GRU73012, Fla97357), 
LRes93983 = reshape_layer(Fla97357, [2, 1], Res93983), 
LRes60395 = reshape_layer(Res93983, [2, 1, 1], Res60395), 
LUp_60507 = up_sampling2D_layer(Res60395, 1, 2, Up_60507), 
exec_layers([LGRU73012,LFla97357,LRes93983,LRes60395,LUp_60507],["GRU73012","Fla97357","Res93983","Res60395","Up_60507"],Up_60507,"Up_60507")

Actual (Unparsed): [[[[0.0000000], [0.0000000]], [[0.0000000], [0.0000000]]]]

Expected (Unparsed): [[[[0.0],[0.0]],[[0.0],[0.0]]]]

Actual:   [[[[0], [0]], [[0], [0]]]]

Expected: [[[[0], [0]], [[0], [0]]]]