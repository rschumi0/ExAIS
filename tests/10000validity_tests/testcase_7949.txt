import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Sep24520 = tf.keras.layers.Input(shape=([2, 1]))
in0Ave51109 = tf.keras.layers.Input(shape=([1, 2]))
in1Ave51109 = tf.keras.layers.Input(shape=([1, 2]))
in0Con3903 = tf.keras.layers.Input(shape=([1, 4]))

Sep24520 = keras.layers.SeparableConv1D(2, (1),strides=(1), padding='same', name = 'Sep24520', )(in0Sep24520)
Loc10486 = keras.layers.LocallyConnected1D(3, (2),strides=(1), name = 'Loc10486', )(Sep24520)
Res84062 = keras.layers.Reshape((1, 3, 1), name = 'Res84062', )(Loc10486)
Con84573 = keras.layers.Conv2DTranspose(2, (1, 1),strides=(1, 1), padding='same', name = 'Con84573', )(Res84062)
Res53853 = keras.layers.Reshape((1, 6), name = 'Res53853', )(Con84573)
Ave51109 = keras.layers.Average(name = 'Ave51109', )([in0Ave51109,in1Ave51109])
Con3903 = keras.layers.Concatenate(axis=2, name = 'Con3903', )([Ave51109,in0Con3903])
Max81466 = keras.layers.Maximum(name = 'Max81466', )([Res53853,Con3903])
model = tf.keras.models.Model(inputs=[in0Sep24520,in0Ave51109,in1Ave51109,in0Con3903], outputs=Max81466)
w = model.get_layer('Sep24520').get_weights() 
w[0] = np.array([[[0.6441]]])
w[1] = np.array([[[0.5817, 0.0894]]])
w[2] = np.array([0, 0])
model.get_layer('Sep24520').set_weights(w) 
w = model.get_layer('Loc10486').get_weights() 
w[0] = np.array([[[0.2157, 0.7474, 0.3006], [0.8994, 0.1947, 0.8545], [0.9293, 0.2343, 0.0434], [0.3695, 0.0044, 0.875]]])
w[1] = np.array([[0, 0, 0]])
model.get_layer('Loc10486').set_weights(w) 
w = model.get_layer('Con84573').get_weights() 
w[0] = np.array([[[[0.3458], [0.7401]]]])
w[1] = np.array([0, 0])
model.get_layer('Con84573').set_weights(w) 
in0Sep24520 = tf.constant([[[0.5004], [0.8937]]])
in0Ave51109 = tf.constant([[[0.5651, 0.9348]]])
in1Ave51109 = tf.constant([[[0.0083, 0.8039]]])
in0Con3903 = tf.constant([[[0.543, 0.9337, 0.5786, 0.0172]]])
print (np.array2string(model.predict([in0Sep24520,in0Ave51109,in1Ave51109,in0Con3903],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Max81466.png')

LSep24520 = separable_conv1D_layer([[[0.5004], [0.8937]]], 1,[[[[0.6441]]],[[[0.5817, 0.0894]]]],[0, 0], 1, true, Sep24520), 
LLoc10486 = locally_connected1D_layer(Sep24520, 2,[[[0.2157, 0.7474, 0.3006], [0.8994, 0.1947, 0.8545], [0.9293, 0.2343, 0.0434], [0.3695, 0.0044, 0.875]]],[[0, 0, 0]], 1, Loc10486), 
LRes84062 = reshape_layer(Loc10486, [1, 3, 1], Res84062), 
LCon84573 = conv2D_transpose_layer(Res84062, 1, 1,[[[[0.3458], [0.7401]]]],[0, 0], 1, 1, true, Con84573), 
LRes53853 = reshape_layer(Con84573, [1, 6], Res53853), 
LAve51109 = average_layer([[[[0.5651, 0.9348]]], [[[0.0083, 0.8039]]]], Ave51109), 
LCon3903 = concatenate_layer([Ave51109,[[[0.543, 0.9337, 0.5786, 0.0172]]]], 2, Con3903), 
LMax81466 = maximum_layer([Res53853,Con3903], Max81466), 
exec_layers([LSep24520,LLoc10486,LRes84062,LCon84573,LRes53853,LAve51109,LCon3903,LMax81466],["Sep24520","Loc10486","Res84062","Con84573","Res53853","Ave51109","Con3903","Max81466"],Max81466,"Max81466")

Actual (Unparsed): [[[0.2867000, 0.8693500, 0.5430000, 0.9337000, 0.5786000, 0.1040146]]]

Expected (Unparsed): [[[0.2867,0.86935,0.543,0.9337,0.5786,0.10401463805107918]]]

Actual:   [[[0.2867, 0.8694, 0.543, 0.9337, 0.5786, 0.1041]]]

Expected: [[[0.2867, 0.8694, 0.543, 0.9337, 0.5786, 0.1041]]]