import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Mas79701 = tf.keras.layers.Input(shape=([4]))
in0Con98174 = tf.keras.layers.Input(shape=([4, 6, 3, 1]))
in0Add91667 = tf.keras.layers.Input(shape=([1, 2, 2, 2]))
in1Add91667 = tf.keras.layers.Input(shape=([1, 2, 2, 2]))
in0Zer99322 = tf.keras.layers.Input(shape=([2, 4, 3]))
in0Con88330 = tf.keras.layers.Input(shape=([4, 6, 3, 1]))
in0Min52770 = tf.keras.layers.Input(shape=([1, 2, 1, 1]))
in1Min52770 = tf.keras.layers.Input(shape=([1, 2, 1, 1]))
in0Add22249 = tf.keras.layers.Input(shape=([2, 2, 1]))
in1Add22249 = tf.keras.layers.Input(shape=([2, 2, 1]))
in0Con95699 = tf.keras.layers.Input(shape=([2, 2, 3]))
in0Con20722 = tf.keras.layers.Input(shape=([4, 6, 2]))

Mas79701 = keras.layers.Masking(mask_value=2, name = 'Mas79701', )(in0Mas79701)
Res96683 = keras.layers.Reshape((4, 1), name = 'Res96683', )(Mas79701)
Res48361 = keras.layers.Reshape((4, 1, 1), name = 'Res48361', )(Res96683)
Res99029 = keras.layers.Reshape((4, 1, 1, 1), name = 'Res99029', )(Res48361)
Zer58837 = keras.layers.ZeroPadding3D(padding=((0, 0), (5, 0), (2, 0)), name = 'Zer58837', )(Res99029)
Con98174 = keras.layers.Concatenate(axis=4, name = 'Con98174', )([Zer58837,in0Con98174])
Add91667 = keras.layers.Add(name = 'Add91667', )([in0Add91667,in1Add91667])
Zer16952 = keras.layers.ZeroPadding3D(padding=((3, 0), (4, 0), (1, 0)), name = 'Zer16952', )(Add91667)
Zer99322 = keras.layers.ZeroPadding2D(padding=((1, 1), (1, 1)), name = 'Zer99322', )(in0Zer99322)
Res62842 = keras.layers.Reshape((4, 6, 3, 1), name = 'Res62842', )(Zer99322)
PRe90957 = keras.layers.PReLU(name = 'PRe90957', )(Res62842)
Con88330 = keras.layers.Concatenate(axis=4, name = 'Con88330', )([PRe90957,in0Con88330])
Ave2785 = keras.layers.Average(name = 'Ave2785', )([Zer16952,Con88330])
Min57438 = keras.layers.Minimum(name = 'Min57438', )([Con98174,Ave2785])
Res80252 = keras.layers.Reshape((4, 6, 6), name = 'Res80252', )(Min57438)
Min52770 = keras.layers.Minimum(name = 'Min52770', )([in0Min52770,in1Min52770])
Den17491 = keras.layers.Dense(4,name = 'Den17491', )(Min52770)
Res50832 = keras.layers.Reshape((1, 2, 4), name = 'Res50832', )(Den17491)
Zer58666 = keras.layers.ZeroPadding2D(padding=((1, 0), (0, 0)), name = 'Zer58666', )(Res50832)
Add22249 = keras.layers.Add(name = 'Add22249', )([in0Add22249,in1Add22249])
Con95699 = keras.layers.Concatenate(axis=3, name = 'Con95699', )([Add22249,in0Con95699])
Min80686 = keras.layers.Minimum(name = 'Min80686', )([Zer58666,Con95699])
Zer16254 = keras.layers.ZeroPadding2D(padding=((2, 0), (4, 0)), name = 'Zer16254', )(Min80686)
Con20722 = keras.layers.Concatenate(axis=3, name = 'Con20722', )([Zer16254,in0Con20722])
Ave25107 = keras.layers.Average(name = 'Ave25107', )([Res80252,Con20722])
model = tf.keras.models.Model(inputs=[in0Mas79701,in0Con98174,in0Add91667,in1Add91667,in0Zer99322,in0Con88330,in0Min52770,in1Min52770,in0Add22249,in1Add22249,in0Con95699,in0Con20722], outputs=Ave25107)
w = model.get_layer('PRe90957').get_weights() 
w[0] = np.array([[[[0.9266], [0.8336], [0.9828]], [[0.868], [0.0771], [0.8365]], [[0.0562], [0.0019], [0.7125]], [[0.6775], [0.9538], [0.1928]], [[0.7648], [0.502], [0.0288]], [[0.3265], [0.0311], [0.1599]]], [[[0.0136], [0.085], [0.7892]], [[0.5205], [0.9007], [0.674]], [[0.5743], [0.3994], [0.1748]], [[0.1857], [0.6195], [0.3192]], [[0.3242], [0.6234], [0.4796]], [[0.1569], [0.5277], [0.5211]]], [[[0.5257], [0.9721], [0.0349]], [[0.9105], [0.3214], [0.9529]], [[0.0351], [0.1123], [0.3763]], [[0.4707], [0.7471], [0.457]], [[0.407], [0.6912], [0.0494]], [[0.577], [0.0312], [0.0554]]], [[[0.2204], [0.3555], [0.7716]], [[0.2112], [0.2608], [0.9637]], [[0.3497], [0.6583], [0.8285]], [[0.6752], [0.5166], [0.4461]], [[0.0336], [0.3063], [0.0829]], [[0.7587], [0.2137], [0.1991]]]])
model.get_layer('PRe90957').set_weights(w) 
w = model.get_layer('Den17491').get_weights() 
w[0] = np.array([[0.3051, 0.4574, 0.5159, 0.2016]])
w[1] = np.array([0.9223, 0.4844, 0.5641, 0.7784])
model.get_layer('Den17491').set_weights(w) 
in0Mas79701 = tf.constant([[1.1095, 1.5517, 1.6292, 1.8543]])
in0Con98174 = tf.constant([[[[[0.1774], [0.5927], [0.9445]], [[0.3096], [0.7334], [0.708]], [[0.5347], [0.6359], [0.7939]], [[0.1365], [0.5039], [0.7863]], [[0.7812], [0.5026], [0.307]], [[0.0233], [0.5409], [0.2094]]], [[[0.067], [0.3752], [0.4025]], [[0.5673], [0.8765], [0.941]], [[0.0182], [0.5711], [0.2388]], [[0.4543], [0.338], [0.4535]], [[0.6376], [0.1901], [0.8825]], [[0.6497], [0.7387], [0.6236]]], [[[0.945], [0.2151], [0.3954]], [[0.9962], [0.4746], [0.0596]], [[0.4534], [0.0848], [0.1705]], [[0.5836], [0.3345], [0.0249]], [[0.7531], [0.4301], [0.514]], [[0.9941], [0.4668], [0.1053]]], [[[0.3022], [0.9283], [0.6186]], [[0.1606], [0.79], [0.2135]], [[0.357], [0.4789], [0.4249]], [[0.4705], [0.959], [0.9627]], [[0.4464], [0.1368], [0.6052]], [[0.5815], [0.3292], [0.535]]]]])
in0Add91667 = tf.constant([[[[[0.8216, 0.0035], [0.0949, 0.5343]], [[0.9062, 0.9856], [0.3158, 0.9195]]]]])
in1Add91667 = tf.constant([[[[[0.985, 0.0085], [0.0776, 0.1114]], [[0.3308, 0.9745], [0.4396, 0.5437]]]]])
in0Zer99322 = tf.constant([[[[1.1414, 1.7576, 1.3272], [1.2145, 1.8286, 1.8354], [1.4886, 1.8326, 1.7963], [1.1629, 1.924, 1.6135]], [[1.9248, 1.6052, 1.2108], [1.2831, 1.1193, 1.0209], [1.3727, 1.8309, 1.8361], [1.5233, 1.0705, 1.69]]]])
in0Con88330 = tf.constant([[[[[0.1416], [0.3861], [0.4248]], [[0.7043], [0.4416], [0.0071]], [[0.8104], [0.7628], [0.6534]], [[0.1926], [0.7608], [0.9678]], [[0.1056], [0.1633], [0.4925]], [[0.4304], [0.4375], [0.3747]]], [[[0.8332], [0.7814], [0.2394]], [[0.5984], [0.0684], [0.6988]], [[0.7263], [0.1557], [0.2728]], [[0.5788], [0.1161], [0.5315]], [[0.0583], [0.9516], [0.9103]], [[0.1645], [0.3333], [0.5745]]], [[[0.3308], [0.5512], [0.3674]], [[0.7421], [0.7512], [0.9305]], [[0.1813], [0.2497], [0.0821]], [[0.7186], [0.039], [0.6136]], [[0.7169], [0.5573], [0.6143]], [[0.6106], [0.8269], [0.3041]]], [[[0.2184], [0.9306], [0.5048]], [[0.5469], [0.3342], [0.7562]], [[0.5008], [0.2558], [0.5813]], [[0.3787], [0.0688], [0.9994]], [[0.1559], [0.5393], [0.7445]], [[0.7475], [0.7304], [0.046]]]]])
in0Min52770 = tf.constant([[[[[0.4557]], [[0.5392]]]]])
in1Min52770 = tf.constant([[[[[0.9289]], [[0.3174]]]]])
in0Add22249 = tf.constant([[[[0.7374], [0.0291]], [[0.7546], [0.5956]]]])
in1Add22249 = tf.constant([[[[0.3606], [0.6381]], [[0.2515], [0.0864]]]])
in0Con95699 = tf.constant([[[[0.4028, 0.3787, 0.6106], [0.0565, 0.1224, 0.9617]], [[0.9855, 0.9636, 0.4123], [0.9425, 0.1, 0.9164]]]])
in0Con20722 = tf.constant([[[[0.7641, 0.7335], [0.442, 0.431], [0.3699, 0.4414], [0.6963, 0.3982], [0.0926, 0.9738], [0.2863, 0.3067]], [[0.312, 0.7925], [0.815, 0.4206], [0.0093, 0.0539], [0.668, 0.0073], [0.1249, 0.7942], [0.8414, 0.7669]], [[0.8616, 0.5552], [0.9959, 0.1361], [0.9678, 0.1997], [0.9883, 0.2794], [0.3221, 0.2089], [0.7489, 0.5785]], [[0.3344, 0.4536], [0.3921, 0.0843], [0.7753, 0.291], [0.8736, 0.7042], [0.6518, 0.846], [0.3432, 0.865]]]])
print (np.array2string(model.predict([in0Mas79701,in0Con98174,in0Add91667,in1Add91667,in0Zer99322,in0Con88330,in0Min52770,in1Min52770,in0Add22249,in1Add22249,in0Con95699,in0Con20722],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Ave25107.png')

LMas79701 = masking_layer([[1.1095, 1.5517, 1.6292, 1.8543]], 2, Mas79701), 
LRes96683 = reshape_layer(Mas79701, [4, 1], Res96683), 
LRes48361 = reshape_layer(Res96683, [4, 1, 1], Res48361), 
LRes99029 = reshape_layer(Res48361, [4, 1, 1, 1], Res99029), 
LZer58837 = zero_padding3D_layer(Res99029, 0, 0, 5, 0, 2, 0, Zer58837), 
LCon98174 = concatenate_layer([Zer58837,[[[[[0.1774], [0.5927], [0.9445]], [[0.3096], [0.7334], [0.708]], [[0.5347], [0.6359], [0.7939]], [[0.1365], [0.5039], [0.7863]], [[0.7812], [0.5026], [0.307]], [[0.0233], [0.5409], [0.2094]]], [[[0.067], [0.3752], [0.4025]], [[0.5673], [0.8765], [0.941]], [[0.0182], [0.5711], [0.2388]], [[0.4543], [0.338], [0.4535]], [[0.6376], [0.1901], [0.8825]], [[0.6497], [0.7387], [0.6236]]], [[[0.945], [0.2151], [0.3954]], [[0.9962], [0.4746], [0.0596]], [[0.4534], [0.0848], [0.1705]], [[0.5836], [0.3345], [0.0249]], [[0.7531], [0.4301], [0.514]], [[0.9941], [0.4668], [0.1053]]], [[[0.3022], [0.9283], [0.6186]], [[0.1606], [0.79], [0.2135]], [[0.357], [0.4789], [0.4249]], [[0.4705], [0.959], [0.9627]], [[0.4464], [0.1368], [0.6052]], [[0.5815], [0.3292], [0.535]]]]]], 4, Con98174), 
LAdd91667 = add_layer([[[[[[0.8216, 0.0035], [0.0949, 0.5343]], [[0.9062, 0.9856], [0.3158, 0.9195]]]]], [[[[[0.985, 0.0085], [0.0776, 0.1114]], [[0.3308, 0.9745], [0.4396, 0.5437]]]]]], Add91667), 
LZer16952 = zero_padding3D_layer(Add91667, 3, 0, 4, 0, 1, 0, Zer16952), 
LZer99322 = zero_padding2D_layer([[[[1.1414, 1.7576, 1.3272], [1.2145, 1.8286, 1.8354], [1.4886, 1.8326, 1.7963], [1.1629, 1.924, 1.6135]], [[1.9248, 1.6052, 1.2108], [1.2831, 1.1193, 1.0209], [1.3727, 1.8309, 1.8361], [1.5233, 1.0705, 1.69]]]], 1, 1, 1, 1, Zer99322), 
LRes62842 = reshape_layer(Zer99322, [4, 6, 3, 1], Res62842), 
LPRe90957 = prelu_layer(Res62842, [[[[0.9266], [0.8336], [0.9828]], [[0.868], [0.0771], [0.8365]], [[0.0562], [0.0019], [0.7125]], [[0.6775], [0.9538], [0.1928]], [[0.7648], [0.502], [0.0288]], [[0.3265], [0.0311], [0.1599]]], [[[0.0136], [0.085], [0.7892]], [[0.5205], [0.9007], [0.674]], [[0.5743], [0.3994], [0.1748]], [[0.1857], [0.6195], [0.3192]], [[0.3242], [0.6234], [0.4796]], [[0.1569], [0.5277], [0.5211]]], [[[0.5257], [0.9721], [0.0349]], [[0.9105], [0.3214], [0.9529]], [[0.0351], [0.1123], [0.3763]], [[0.4707], [0.7471], [0.457]], [[0.407], [0.6912], [0.0494]], [[0.577], [0.0312], [0.0554]]], [[[0.2204], [0.3555], [0.7716]], [[0.2112], [0.2608], [0.9637]], [[0.3497], [0.6583], [0.8285]], [[0.6752], [0.5166], [0.4461]], [[0.0336], [0.3063], [0.0829]], [[0.7587], [0.2137], [0.1991]]]], PRe90957), 
LCon88330 = concatenate_layer([PRe90957,[[[[[0.1416], [0.3861], [0.4248]], [[0.7043], [0.4416], [0.0071]], [[0.8104], [0.7628], [0.6534]], [[0.1926], [0.7608], [0.9678]], [[0.1056], [0.1633], [0.4925]], [[0.4304], [0.4375], [0.3747]]], [[[0.8332], [0.7814], [0.2394]], [[0.5984], [0.0684], [0.6988]], [[0.7263], [0.1557], [0.2728]], [[0.5788], [0.1161], [0.5315]], [[0.0583], [0.9516], [0.9103]], [[0.1645], [0.3333], [0.5745]]], [[[0.3308], [0.5512], [0.3674]], [[0.7421], [0.7512], [0.9305]], [[0.1813], [0.2497], [0.0821]], [[0.7186], [0.039], [0.6136]], [[0.7169], [0.5573], [0.6143]], [[0.6106], [0.8269], [0.3041]]], [[[0.2184], [0.9306], [0.5048]], [[0.5469], [0.3342], [0.7562]], [[0.5008], [0.2558], [0.5813]], [[0.3787], [0.0688], [0.9994]], [[0.1559], [0.5393], [0.7445]], [[0.7475], [0.7304], [0.046]]]]]], 4, Con88330), 
LAve2785 = average_layer([Zer16952,Con88330], Ave2785), 
LMin57438 = minimum_layer([Con98174,Ave2785], Min57438), 
LRes80252 = reshape_layer(Min57438, [4, 6, 6], Res80252), 
LMin52770 = minimum_layer([[[[[[0.4557]], [[0.5392]]]]], [[[[[0.9289]], [[0.3174]]]]]], Min52770), 
LDen17491 = dense_layer(Min52770, [[0.3051, 0.4574, 0.5159, 0.2016]],[0.9223, 0.4844, 0.5641, 0.7784], Den17491), 
LRes50832 = reshape_layer(Den17491, [1, 2, 4], Res50832), 
LZer58666 = zero_padding2D_layer(Res50832, 1, 0, 0, 0, Zer58666), 
LAdd22249 = add_layer([[[[[0.7374], [0.0291]], [[0.7546], [0.5956]]]], [[[[0.3606], [0.6381]], [[0.2515], [0.0864]]]]], Add22249), 
LCon95699 = concatenate_layer([Add22249,[[[[0.4028, 0.3787, 0.6106], [0.0565, 0.1224, 0.9617]], [[0.9855, 0.9636, 0.4123], [0.9425, 0.1, 0.9164]]]]], 3, Con95699), 
LMin80686 = minimum_layer([Zer58666,Con95699], Min80686), 
LZer16254 = zero_padding2D_layer(Min80686, 2, 0, 4, 0, Zer16254), 
LCon20722 = concatenate_layer([Zer16254,[[[[0.7641, 0.7335], [0.442, 0.431], [0.3699, 0.4414], [0.6963, 0.3982], [0.0926, 0.9738], [0.2863, 0.3067]], [[0.312, 0.7925], [0.815, 0.4206], [0.0093, 0.0539], [0.668, 0.0073], [0.1249, 0.7942], [0.8414, 0.7669]], [[0.8616, 0.5552], [0.9959, 0.1361], [0.9678, 0.1997], [0.9883, 0.2794], [0.3221, 0.2089], [0.7489, 0.5785]], [[0.3344, 0.4536], [0.3921, 0.0843], [0.7753, 0.291], [0.8736, 0.7042], [0.6518, 0.846], [0.3432, 0.865]]]]], 3, Con20722), 
LAve25107 = average_layer([Res80252,Con20722], Ave25107), 
exec_layers([LMas79701,LRes96683,LRes48361,LRes99029,LZer58837,LCon98174,LAdd91667,LZer16952,LZer99322,LRes62842,LPRe90957,LCon88330,LAve2785,LMin57438,LRes80252,LMin52770,LDen17491,LRes50832,LZer58666,LAdd22249,LCon95699,LMin80686,LZer16254,LCon20722,LAve25107],["Mas79701","Res96683","Res48361","Res99029","Zer58837","Con98174","Add91667","Zer16952","Zer99322","Res62842","PRe90957","Con88330","Ave2785","Min57438","Res80252","Min52770","Den17491","Res50832","Zer58666","Add22249","Con95699","Min80686","Zer16254","Con20722","Ave25107"],Ave25107,"Ave25107")

Actual (Unparsed): [[[[0.0000000, 0.0354000, 0.0000000, 0.0965250, 0.3820500, 0.4729500], [0.0000000, 0.1548000, 0.0000000, 0.1104000, 0.2210000, 0.2172750], [0.0000000, 0.2026000, 0.0000000, 0.1907000, 0.1849500, 0.3840500], [0.0000000, 0.0481500, 0.0000000, 0.1902000, 0.3481500, 0.4410500], [0.0000000, 0.0264000, 0.0000000, 0.0408250, 0.0463000, 0.6100250], [0.0000000, 0.0116500, 0.0000000, 0.1093750, 0.1431500, 0.2470250]], [[0.0000000, 0.0335000, 0.0000000, 0.1876000, 0.1560000, 0.4561000], [0.0000000, 0.1496000, 0.0000000, 0.0171000, 0.4075000, 0.3850000], [0.0000000, 0.0091000, 0.0000000, 0.0389250, 0.0046500, 0.0951500], [0.0000000, 0.1447000, 0.0000000, 0.0290250, 0.3340000, 0.1365250], [0.0000000, 0.0145750, 0.0000000, 0.0950500, 0.0624500, 0.6246750], [0.0000000, 0.0411250, 0.0000000, 0.0833250, 0.4207000, 0.5270750]], [[0.0000000, 0.0827000, 0.0000000, 0.1075500, 0.4308000, 0.3694500], [0.0000000, 0.1855250, 0.0000000, 0.1878000, 0.4979500, 0.0978500], [0.0000000, 0.0453250, 0.0000000, 0.0424000, 0.4839000, 0.1203750], [0.0000000, 0.1796500, 0.0000000, 0.0097500, 0.4941500, 0.1521500], [0.0000000, 0.1792250, 0.0000000, 0.1393250, 0.1610500, 0.2580250], [0.0000000, 0.1526500, 0.0000000, 0.2067250, 0.3744500, 0.3419000]], [[0.0000000, 0.0546000, 0.0000000, 0.2326500, 0.1672000, 0.3530000], [0.0000000, 0.0803000, 0.0000000, 0.0835500, 0.1960500, 0.1489000], [0.0000000, 0.1252000, 0.0000000, 0.0639500, 0.3876500, 0.2908250], [0.0000000, 0.0946750, 0.0000000, 0.0172000, 0.4368000, 0.6019500], [0.5030500, 0.3853936, 0.3995978, 0.2745500, 0.3259000, 0.7256000], [0.3410000, 0.5016644, 0.0500000, 0.5857939, 0.3604500, 0.7000000]]]]

Expected (Unparsed): [[[[0,0.0354,0,0.096525,0.38205,0.47295000000000004],[0,0.1548,0,0.1104,0.221,0.217275],[0,0.2026,0,0.1907,0.18495,0.38405],[0,0.04815,0,0.1902,0.34815,0.44105],[0,0.0264,0,0.040825,0.0463,0.610025],[0,0.01165,0,0.109375,0.14315,0.247025]],[[0,0.0335,0,0.1876,0.156,0.4561],[0,0.1496,0,0.0171,0.4075,0.385],[0,0.0091,0,0.038925,0.00465,0.09515],[0,0.1447,0,0.029025,0.334,0.13652499999999998],[0,0.014575,0,0.09505,0.06245,0.624675],[0,0.041125,0,0.083325,0.4207,0.527075]],[[0,0.0827,0,0.10755,0.4308,0.36945],[0,0.185525,0,0.1878,0.49795,0.09784999999999999],[0,0.045325,0,0.0424,0.4839,0.120375],[0,0.17965,0,0.00975,0.49415,0.15214999999999998],[0,0.179225,0,0.139325,0.16105,0.258025],[0,0.15265,0,0.206725,0.37445,0.3419]],[[0,0.0546,0,0.23265,0.1672,0.353],[0,0.0803,0,0.08355,0.19605,0.1489],[0,0.1252,0,0.06395,0.38765,0.290825],[0,0.094675,0,0.0172,0.4368,0.60195],[0.50305,0.38539358999999995,0.399597815,0.27455,0.3259,0.7256],[0.341,0.50166438,0.05,0.58579392,0.36045000000000005,0.7]]]]

Actual:   [[[[0, 0.0354, 0, 0.0966, 0.3821, 0.473], [0, 0.1548, 0, 0.1104, 0.221, 0.2173], [0, 0.2026, 0, 0.1907, 0.185, 0.3841], [0, 0.0482, 0, 0.1902, 0.3482, 0.4411], [0, 0.0264, 0, 0.0409, 0.0463, 0.6101], [0, 0.0117, 0, 0.1094, 0.1432, 0.2471]], [[0, 0.0335, 0, 0.1876, 0.156, 0.4561], [0, 0.1496, 0, 0.0171, 0.4075, 0.385], [0, 0.0091, 0, 0.039, 0.0047, 0.0952], [0, 0.1447, 0, 0.0291, 0.334, 0.1366], [0, 0.0146, 0, 0.0951, 0.0625, 0.6247], [0, 0.0412, 0, 0.0834, 0.4207, 0.5271]], [[0, 0.0827, 0, 0.1076, 0.4308, 0.3695], [0, 0.1856, 0, 0.1878, 0.498, 0.0979], [0, 0.0454, 0, 0.0424, 0.4839, 0.1204], [0, 0.1797, 0, 0.0098, 0.4942, 0.1522], [0, 0.1793, 0, 0.1394, 0.1611, 0.2581], [0, 0.1527, 0, 0.2068, 0.3745, 0.3419]], [[0, 0.0546, 0, 0.2327, 0.1672, 0.353], [0, 0.0803, 0, 0.0836, 0.1961, 0.1489], [0, 0.1252, 0, 0.064, 0.3877, 0.2909], [0, 0.0947, 0, 0.0172, 0.4368, 0.602], [0.5031, 0.3854, 0.3996, 0.2746, 0.3259, 0.7256], [0.341, 0.5017, 0.05, 0.5858, 0.3605, 0.7]]]]

Expected: [[[[0, 0.0354, 0, 0.0966, 0.3821, 0.473], [0, 0.1548, 0, 0.1104, 0.221, 0.2173], [0, 0.2026, 0, 0.1907, 0.185, 0.3841], [0, 0.0482, 0, 0.1902, 0.3482, 0.4411], [0, 0.0264, 0, 0.0409, 0.0463, 0.6101], [0, 0.0117, 0, 0.1094, 0.1432, 0.2471]], [[0, 0.0335, 0, 0.1876, 0.156, 0.4561], [0, 0.1496, 0, 0.0171, 0.4075, 0.385], [0, 0.0091, 0, 0.039, 0.0047, 0.0952], [0, 0.1447, 0, 0.0291, 0.334, 0.1366], [0, 0.0146, 0, 0.0951, 0.0625, 0.6247], [0, 0.0412, 0, 0.0834, 0.4207, 0.5271]], [[0, 0.0827, 0, 0.1076, 0.4308, 0.3695], [0, 0.1856, 0, 0.1878, 0.498, 0.0979], [0, 0.0454, 0, 0.0424, 0.4839, 0.1204], [0, 0.1797, 0, 0.0098, 0.4942, 0.1522], [0, 0.1793, 0, 0.1394, 0.1611, 0.2581], [0, 0.1527, 0, 0.2068, 0.3745, 0.3419]], [[0, 0.0546, 0, 0.2327, 0.1672, 0.353], [0, 0.0803, 0, 0.0836, 0.1961, 0.1489], [0, 0.1252, 0, 0.064, 0.3877, 0.2909], [0, 0.0947, 0, 0.0172, 0.4368, 0.602], [0.5031, 0.3854, 0.3996, 0.2746, 0.3259, 0.7256], [0.341, 0.5017, 0.05, 0.5858, 0.3605, 0.7]]]]