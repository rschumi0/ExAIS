import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Dot80263 = tf.keras.layers.Input(shape=([2, 2]))
in1Dot80263 = tf.keras.layers.Input(shape=([2, 2]))

Dot80263 = keras.layers.Dot(axes=(2, 2), name = 'Dot80263', )([in0Dot80263,in1Dot80263])
LST58000 = keras.layers.LSTM(1,recurrent_activation='sigmoid', name = 'LST58000', )(Dot80263)
Res7990 = keras.layers.Reshape((1, 1), name = 'Res7990', )(LST58000)
Zer61227 = keras.layers.ZeroPadding1D(padding=((1, 1)), name = 'Zer61227', )(Res7990)
model = tf.keras.models.Model(inputs=[in0Dot80263,in1Dot80263], outputs=Zer61227)
w = model.get_layer('LST58000').get_weights() 
w[0] = np.array([[3, 10, 7, 9], [6, 10, 1, 2]])
w[1] = np.array([[7, 7, 9, 8]])
w[2] = np.array([4, 2, 5, 3])
model.get_layer('LST58000').set_weights(w) 
in0Dot80263 = tf.constant([[[0.9302, 0.2664], [0.134, 0.2923]]])
in1Dot80263 = tf.constant([[[0.4481, 0.1263], [0.2483, 0.8177]]])
print (np.array2string(model.predict([in0Dot80263,in1Dot80263],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Zer61227.png')

LDot80263 = dot_layer([[[0.9302, 0.2664], [0.134, 0.2923]]], [[[0.4481, 0.1263], [0.2483, 0.8177]]], 2, 2, Dot80263), 
LLST58000 = lstm_layer(Dot80263,[[3, 10, 7, 9], [6, 10, 1, 2]],[[7, 7, 9, 8]],[4, 2, 5, 3], LST58000), 
LRes7990 = reshape_layer(LST58000, [1, 1], Res7990), 
LZer61227 = zero_padding1D_layer(Res7990, 1, 1, Zer61227), 
exec_layers([LDot80263,LLST58000,LRes7990,LZer61227],["Dot80263","LST58000","Res7990","Zer61227"],Zer61227,"Zer61227")

Actual (Unparsed): [[[0.0000000], [0.9639765], [0.0000000]]]

Expected (Unparsed): [[[0],[0.9639764620062377],[0]]]

Actual:   [[[0], [0.964], [0]]]

Expected: [[[0], [0.964], [0]]]