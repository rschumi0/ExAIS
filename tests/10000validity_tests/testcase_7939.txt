import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Add58917 = tf.keras.layers.Input(shape=([2, 2, 2]))
in1Add58917 = tf.keras.layers.Input(shape=([2, 2, 2]))
in0Con9546 = tf.keras.layers.Input(shape=([12, 3, 2]))
in0Sub98218 = tf.keras.layers.Input(shape=([3, 3, 2]))
in1Sub98218 = tf.keras.layers.Input(shape=([3, 3, 2]))

Add58917 = keras.layers.Add(name = 'Add58917', )([in0Add58917,in1Add58917])
Zer42993 = keras.layers.ZeroPadding2D(padding=((10, 0), (1, 0)), name = 'Zer42993', )(Add58917)
Con9546 = keras.layers.Concatenate(axis=3, name = 'Con9546', )([Zer42993,in0Con9546])
Sub98218 = keras.layers.Subtract(name = 'Sub98218', )([in0Sub98218,in1Sub98218])
Lea9995 = keras.layers.LeakyReLU(alpha=9.665771039159074, name = 'Lea9995', )(Sub98218)
Con5145 = keras.layers.Conv2DTranspose(4, (2, 2),strides=(4, 1), padding='same', name = 'Con5145', )(Lea9995)
Mul61975 = keras.layers.Multiply(name = 'Mul61975', )([Con9546,Con5145])
Max28679 = keras.layers.MaxPool2D(pool_size=(1, 1), strides=(1, 1), padding='same', name = 'Max28679', )(Mul61975)
Res95491 = keras.layers.Reshape((12, 3, 4, 1), name = 'Res95491', )(Max28679)
Up_82737 = keras.layers.UpSampling3D(size=(1, 1, 1), name = 'Up_82737', )(Res95491)
model = tf.keras.models.Model(inputs=[in0Add58917,in1Add58917,in0Con9546,in0Sub98218,in1Sub98218], outputs=Up_82737)
w = model.get_layer('Con5145').get_weights() 
w[0] = np.array([[[[0.3789, 0.8942], [0.6492, 0.2129], [0.5586, 0.1009], [0.1853, 0.7198]], [[0.1796, 0.6878], [0.1373, 0.6238], [0.8142, 0.7368], [0.2962, 0.2652]]], [[[0.1634, 0.6404], [0.8393, 0.3999], [0.3233, 0.5922], [0.9736, 0.2157]], [[0.714, 0.9894], [0.2499, 0.9102], [0.5205, 0.8679], [0.6189, 0.4275]]]])
w[1] = np.array([0, 0, 0, 0])
model.get_layer('Con5145').set_weights(w) 
in0Add58917 = tf.constant([[[[0.4342, 0.3332], [0.8672, 0.8464]], [[0.7823, 0.9002], [0.7196, 0.2599]]]])
in1Add58917 = tf.constant([[[[0.8498, 0.7948], [0.6727, 0.5475]], [[0.3829, 0.0874], [0.9839, 0.0039]]]])
in0Con9546 = tf.constant([[[[0.2714, 0.6503], [0.71, 0.1869], [0.7169, 0.4392]], [[0.4758, 0.4753], [0.563, 0.7869], [0.9967, 0.0538]], [[0.068, 0.0923], [0.0364, 0.14], [0.6691, 0.3477]], [[0.8844, 0.9621], [0.1268, 0.1544], [0.8566, 0.0121]], [[0.9085, 0.6288], [0.8003, 0.9929], [0.1099, 0.0523]], [[0.1597, 0.6858], [0.7349, 0.6848], [0.8233, 0.2955]], [[0.2143, 0.507], [0.6703, 0.44], [0.6258, 0.7799]], [[0.4619, 0.842], [0.1998, 0.2187], [0.4807, 0.9544]], [[0.3434, 0.2687], [0.111, 0.2056], [0.5946, 0.4355]], [[0.3785, 0.2836], [0.6335, 0.8783], [0.313, 0.8978]], [[0.7166, 0.504], [0.8883, 0.7529], [0.6787, 0.6137]], [[0.2053, 0.049], [0.9499, 0.7491], [0.5308, 0.6833]]]])
in0Sub98218 = tf.constant([[[[0.3724, 0.5568], [0.8488, 0.3852], [0.7779, 0.9947]], [[0.987, 0.9859], [0.4187, 0.6525], [0.1465, 0.4343]], [[0.1139, 0.5408], [0.4949, 0.9098], [0.9372, 0.1003]]]])
in1Sub98218 = tf.constant([[[[0.7845, 0.0659], [0.7497, 0.3605], [0.1224, 0.8008]], [[0.0176, 0.0776], [0.1539, 0.1624], [0.285, 0.5003]], [[0.4786, 0.0943], [0.5743, 0.3508], [0.1551, 0.4342]]]])
print (np.array2string(model.predict([in0Add58917,in1Add58917,in0Con9546,in0Sub98218,in1Sub98218],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Up_82737.png')

LAdd58917 = add_layer([[[[[0.4342, 0.3332], [0.8672, 0.8464]], [[0.7823, 0.9002], [0.7196, 0.2599]]]], [[[[0.8498, 0.7948], [0.6727, 0.5475]], [[0.3829, 0.0874], [0.9839, 0.0039]]]]], Add58917), 
LZer42993 = zero_padding2D_layer(Add58917, 10, 0, 1, 0, Zer42993), 
LCon9546 = concatenate_layer([Zer42993,[[[[0.2714, 0.6503], [0.71, 0.1869], [0.7169, 0.4392]], [[0.4758, 0.4753], [0.563, 0.7869], [0.9967, 0.0538]], [[0.068, 0.0923], [0.0364, 0.14], [0.6691, 0.3477]], [[0.8844, 0.9621], [0.1268, 0.1544], [0.8566, 0.0121]], [[0.9085, 0.6288], [0.8003, 0.9929], [0.1099, 0.0523]], [[0.1597, 0.6858], [0.7349, 0.6848], [0.8233, 0.2955]], [[0.2143, 0.507], [0.6703, 0.44], [0.6258, 0.7799]], [[0.4619, 0.842], [0.1998, 0.2187], [0.4807, 0.9544]], [[0.3434, 0.2687], [0.111, 0.2056], [0.5946, 0.4355]], [[0.3785, 0.2836], [0.6335, 0.8783], [0.313, 0.8978]], [[0.7166, 0.504], [0.8883, 0.7529], [0.6787, 0.6137]], [[0.2053, 0.049], [0.9499, 0.7491], [0.5308, 0.6833]]]]], 3, Con9546), 
LSub98218 = subtract_layer([[[[0.3724, 0.5568], [0.8488, 0.3852], [0.7779, 0.9947]], [[0.987, 0.9859], [0.4187, 0.6525], [0.1465, 0.4343]], [[0.1139, 0.5408], [0.4949, 0.9098], [0.9372, 0.1003]]]], [[[[0.7845, 0.0659], [0.7497, 0.3605], [0.1224, 0.8008]], [[0.0176, 0.0776], [0.1539, 0.1624], [0.285, 0.5003]], [[0.4786, 0.0943], [0.5743, 0.3508], [0.1551, 0.4342]]]], Sub98218), 
LLea9995 = leaky_relu_layer(Sub98218, 9.665771039159074, Lea9995), 
LCon5145 = conv2D_transpose_layer(Lea9995, 2, 2,[[[[0.3789, 0.8942], [0.6492, 0.2129], [0.5586, 0.1009], [0.1853, 0.7198]], [[0.1796, 0.6878], [0.1373, 0.6238], [0.8142, 0.7368], [0.2962, 0.2652]]], [[[0.1634, 0.6404], [0.8393, 0.3999], [0.3233, 0.5922], [0.9736, 0.2157]], [[0.714, 0.9894], [0.2499, 0.9102], [0.5205, 0.8679], [0.6189, 0.4275]]]],[0, 0, 0, 0], 4, 1, true, Con5145), 
LMul61975 = multiply_layer([Con9546,Con5145], Mul61975), 
LMax28679 = max_pool2D_layer(Mul61975, 1, 1, 1, 1, true, Max28679), 
LRes95491 = reshape_layer(Max28679, [12, 3, 4, 1], Res95491), 
LUp_82737 = up_sampling3D_layer(Res95491, 1, 1, 1, Up_82737), 
exec_layers([LAdd58917,LZer42993,LCon9546,LSub98218,LLea9995,LCon5145,LMul61975,LMax28679,LRes95491,LUp_82737],["Add58917","Zer42993","Con9546","Sub98218","Lea9995","Con5145","Mul61975","Max28679","Res95491","Up_82737"],Up_82737,"Up_82737")

Actual (Unparsed): [[[[[-0.0000000], [-0.0000000], [-0.5904361], [-0.2502024]], [[-0.0000000], [-0.0000000], [-2.0047768], [-0.1894258]], [[0.0000000], [0.0000000], [0.3474190], [0.1304148]]], [[[-0.0000000], [-0.0000000], [-0.4744099], [-1.7929359]], [[-0.0000000], [-0.0000000], [-0.9011214], [-1.6946451]], [[0.0000000], [0.0000000], [0.3984501], [0.0404528]]], [[[0.0000000], [0.0000000], [0.0000000], [0.0000000]], [[0.0000000], [0.0000000], [0.0000000], [0.0000000]], [[0.0000000], [0.0000000], [0.0000000], [0.0000000]]], [[[0.0000000], [0.0000000], [0.0000000], [0.0000000]], [[0.0000000], [0.0000000], [0.0000000], [0.0000000]], [[0.0000000], [0.0000000], [0.0000000], [0.0000000]]], [[[0.0000000], [0.0000000], [0.5752207], [0.5240571]], [[0.0000000], [0.0000000], [1.3252082], [0.9232568]], [[-0.0000000], [-0.0000000], [-0.0258776], [-0.0260896]]], [[[0.0000000], [0.0000000], [0.1359530], [0.7816256]], [[0.0000000], [0.0000000], [1.2263521], [0.9257016]], [[0.0000000], [-0.0000000], [-0.2036902], [-0.3154666]]], [[[0.0000000], [0.0000000], [0.0000000], [0.0000000]], [[0.0000000], [0.0000000], [0.0000000], [0.0000000]], [[0.0000000], [0.0000000], [0.0000000], [0.0000000]]], [[[0.0000000], [0.0000000], [0.0000000], [0.0000000]], [[0.0000000], [0.0000000], [0.0000000], [0.0000000]], [[0.0000000], [0.0000000], [0.0000000], [0.0000000]]], [[[-0.0000000], [-0.0000000], [-0.6607266], [-0.0891578]], [[-0.0000000], [-0.0000000], [-0.3233943], [-0.1368407]], [[-0.0000000], [0.0000000], [-0.0605067], [-0.9830261]]], [[[-0.0000000], [-0.0000000], [-0.3312820], [-0.9460142]], [[-0.0000000], [-0.0000000], [-0.8643357], [-2.2988931]], [[-0.0000000], [-0.0000000], [-0.4922620], [-0.1532614]]], [[[0.0000000], [0.0000000], [0.0000000], [0.0000000]], [[0.0000000], [0.0000000], [0.0000000], [0.0000000]], [[0.0000000], [0.0000000], [0.0000000], [0.0000000]]], [[[0.0000000], [0.0000000], [0.0000000], [0.0000000]], [[0.0000000], [0.0000000], [0.0000000], [0.0000000]], [[0.0000000], [0.0000000], [0.0000000], [0.0000000]]]]]

Expected (Unparsed): [[[[[-0.0],[-0.0],[-0.5904360187315487],[-0.25020230373101787]],[[-0.0],[-0.0],[-2.004776688315358],[-0.1894257478052115]],[[0.0],[0.0],[0.347419052531],[0.13041483141600002]]],[[[-0.0],[-0.0],[-0.4744098791608909],[-1.7929356617842618]],[[-0.0],[-0.0],[-0.9011212250807512],[-1.6946449737699236]],[[0.0],[0.0],[0.398450170947],[0.040452826326]]],[[[0],[0],[0.0],[0.0]],[[0],[0],[0.0],[0.0]],[[0],[0],[0.0],[0.0]]],[[[0],[0],[0.0],[0.0]],[[0],[0],[0.0],[0.0]],[[0],[0],[0.0],[0.0]]],[[[0.0],[0.0],[0.575220690635],[0.5240571118080001]],[[0.0],[0.0],[1.3252081987870001],[0.9232568620939999]],[[-0.0],[-0.0],[-0.025877647949149575],[-0.026089562268566114]]],[[[0.0],[0.0],[0.135952974116],[0.78162556527]],[[0.0],[0.0],[1.226352124217],[0.925701518848]],[[0.0],[-0.0],[-0.20369027969673326],[-0.3154665636639516]]],[[[0],[0],[0.0],[0.0]],[[0],[0],[0.0],[0.0]],[[0],[0],[0.0],[0.0]]],[[[0],[0],[0.0],[0.0]],[[0],[0],[0.0],[0.0]],[[0],[0],[0.0],[0.0]]],[[[-0.0],[-0.0],[-0.6607265828624772],[-0.08915776916422642]],[[-0.0],[-0.0],[-0.3233942786558856],[-0.13684064785953878]],[[-0.0],[0.0],[-0.06050663620139684],[-0.9830260966172957]]],[[[-0.0],[-0.0],[-0.33128200973061034],[-0.9460141145154469]],[[-0.0],[-0.0],[-0.8643356309573068],[-2.2988928998806553]],[[-0.0],[-0.0],[-0.49226195418366775],[-0.1532613669395328]]],[[[0],[0],[0.0],[0.0]],[[0.0],[0.0],[0.0],[0.0]],[[0.0],[0.0],[0.0],[0.0]]],[[[0],[0],[0.0],[0.0]],[[0.0],[0.0],[0.0],[0.0]],[[0.0],[0.0],[0.0],[0.0]]]]]

Actual:   [[[[[-0], [-0], [-0.5904], [-0.2502]], [[-0], [-0], [-2.0047], [-0.1894]], [[0], [0], [0.3475], [0.1305]]], [[[-0], [-0], [-0.4744], [-1.7929]], [[-0], [-0], [-0.9011], [-1.6946]], [[0], [0], [0.3985], [0.0405]]], [[[0], [0], [0], [0]], [[0], [0], [0], [0]], [[0], [0], [0], [0]]], [[[0], [0], [0], [0]], [[0], [0], [0], [0]], [[0], [0], [0], [0]]], [[[0], [0], [0.5753], [0.5241]], [[0], [0], [1.3253], [0.9233]], [[-0], [-0], [-0.0258], [-0.026]]], [[[0], [0], [0.136], [0.7817]], [[0], [0], [1.2264], [0.9258]], [[0], [-0], [-0.2036], [-0.3154]]], [[[0], [0], [0], [0]], [[0], [0], [0], [0]], [[0], [0], [0], [0]]], [[[0], [0], [0], [0]], [[0], [0], [0], [0]], [[0], [0], [0], [0]]], [[[-0], [-0], [-0.6607], [-0.0891]], [[-0], [-0], [-0.3233], [-0.1368]], [[-0], [0], [-0.0605], [-0.983]]], [[[-0], [-0], [-0.3312], [-0.946]], [[-0], [-0], [-0.8643], [-2.2988]], [[-0], [-0], [-0.4922], [-0.1532]]], [[[0], [0], [0], [0]], [[0], [0], [0], [0]], [[0], [0], [0], [0]]], [[[0], [0], [0], [0]], [[0], [0], [0], [0]], [[0], [0], [0], [0]]]]]

Expected: [[[[[-0], [-0], [-0.5904], [-0.2502]], [[-0], [-0], [-2.0047], [-0.1894]], [[0], [0], [0.3475], [0.1305]]], [[[-0], [-0], [-0.4744], [-1.7929]], [[-0], [-0], [-0.9011], [-1.6946]], [[0], [0], [0.3985], [0.0405]]], [[[0], [0], [0], [0]], [[0], [0], [0], [0]], [[0], [0], [0], [0]]], [[[0], [0], [0], [0]], [[0], [0], [0], [0]], [[0], [0], [0], [0]]], [[[0], [0], [0.5753], [0.5241]], [[0], [0], [1.3253], [0.9233]], [[-0], [-0], [-0.0258], [-0.026]]], [[[0], [0], [0.136], [0.7817]], [[0], [0], [1.2264], [0.9258]], [[0], [-0], [-0.2036], [-0.3154]]], [[[0], [0], [0], [0]], [[0], [0], [0], [0]], [[0], [0], [0], [0]]], [[[0], [0], [0], [0]], [[0], [0], [0], [0]], [[0], [0], [0], [0]]], [[[-0], [-0], [-0.6607], [-0.0891]], [[-0], [-0], [-0.3233], [-0.1368]], [[-0], [0], [-0.0605], [-0.983]]], [[[-0], [-0], [-0.3312], [-0.946]], [[-0], [-0], [-0.8643], [-2.2988]], [[-0], [-0], [-0.4922], [-0.1532]]], [[[0], [0], [0], [0]], [[0], [0], [0], [0]], [[0], [0], [0], [0]]], [[[0], [0], [0], [0]], [[0], [0], [0], [0]], [[0], [0], [0], [0]]]]]