import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0PRe9688 = tf.keras.layers.Input(shape=([2, 2]))
in0Con52684 = tf.keras.layers.Input(shape=([2, 1]))

PRe9688 = keras.layers.PReLU(name = 'PRe9688', input_shape=(2, 2))(in0PRe9688)
Con52684 = keras.layers.Conv1D(4, (1),strides=(1), padding='valid', dilation_rate=(1), name = 'Con52684', )(in0Con52684)
Dot47765 = keras.layers.Dot(axes=(1, 1), name = 'Dot47765', )([PRe9688,Con52684])
model = tf.keras.models.Model(inputs=[in0PRe9688,in0Con52684], outputs=Dot47765)
w = model.get_layer('PRe9688').get_weights() 
w[0] = np.array([[0.0872, 0.3852], [0.7043, 0.2733]])
model.get_layer('PRe9688').set_weights(w) 
w = model.get_layer('Con52684').get_weights() 
w[0] = np.array([[[0.0144, 0.432, 0.8846, 0.1576]]])
w[1] = np.array([0, 0, 0, 0])
model.get_layer('Con52684').set_weights(w) 
in0PRe9688 = tf.constant([[[0.2377, 0.1179], [0.4788, 0.4948]]])
in0Con52684 = tf.constant([[[0.377], [0.8078]]])
print (np.array2string(model.predict([in0PRe9688,in0Con52684],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Dot47765.png')

LPRe9688 = prelu_layer([[[0.2377, 0.1179], [0.4788, 0.4948]]], [[0.0872, 0.3852], [0.7043, 0.2733]], PRe9688), 
LCon52684 = conv1D_layer([[[0.377], [0.8078]]], 1,[[[0.0144, 0.432, 0.8846, 0.1576]]],[0, 0, 0, 0], 1, false, 1, Con52684), 
LDot47765 = dot_layer(PRe9688,Con52684, 1, 1, Dot47765), 
exec_layers([LPRe9688,LCon52684,LDot47765],["PRe9688","Con52684","Dot47765"],Dot47765,"Dot47765")

Actual (Unparsed): [[[0.0068600, 0.2057994, 0.4214124, 0.0750787], [0.0063957, 0.1918718, 0.3928931, 0.0699977]]]

Expected (Unparsed): [[[0.006859980576,0.20579941728,0.421412417884,0.075078676304],[0.006395727456,0.19187182368,0.3928930908040001,0.069997683824]]]

Actual:   [[[0.0069, 0.2058, 0.4215, 0.0751], [0.0064, 0.1919, 0.3929, 0.07]]]

Expected: [[[0.0069, 0.2058, 0.4215, 0.0751], [0.0064, 0.1919, 0.3929, 0.07]]]