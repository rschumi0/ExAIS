import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Min28732 = tf.keras.layers.Input(shape=([2, 1, 1, 2]))
in1Min28732 = tf.keras.layers.Input(shape=([2, 1, 1, 2]))
in0Add55504 = tf.keras.layers.Input(shape=([2, 1]))
in1Add55504 = tf.keras.layers.Input(shape=([2, 1]))
in0Con24155 = tf.keras.layers.Input(shape=([3, 1]))
in0Zer25194 = tf.keras.layers.Input(shape=([1, 2]))

Min28732 = keras.layers.Minimum(name = 'Min28732', )([in0Min28732,in1Min28732])
Res86084 = keras.layers.Reshape((2, 1, 2), name = 'Res86084', )(Min28732)
Res4180 = keras.layers.Reshape((2, 2), name = 'Res4180', )(Res86084)
Add55504 = keras.layers.Add(name = 'Add55504', )([in0Add55504,in1Add55504])
Dot75461 = keras.layers.Dot(axes=(1, 1), name = 'Dot75461', )([Res4180,Add55504])
Zer99664 = keras.layers.ZeroPadding1D(padding=((1, 0)), name = 'Zer99664', )(Dot75461)
Con24155 = keras.layers.Concatenate(axis=2, name = 'Con24155', )([Zer99664,in0Con24155])
Zer25194 = keras.layers.ZeroPadding1D(padding=((1, 1)), name = 'Zer25194', )(in0Zer25194)
Add42900 = keras.layers.Add(name = 'Add42900', )([Con24155,Zer25194])
Den78846 = keras.layers.Dense(3,name = 'Den78846', )(Add42900)
model = tf.keras.models.Model(inputs=[in0Min28732,in1Min28732,in0Add55504,in1Add55504,in0Con24155,in0Zer25194], outputs=Den78846)
w = model.get_layer('Den78846').get_weights() 
w[0] = np.array([[0.5376, 0.5266, 0.1965], [0.0925, 0.6409, 0.7067]])
w[1] = np.array([0.2106, 0.3549, 0.3603])
model.get_layer('Den78846').set_weights(w) 
in0Min28732 = tf.constant([[[[[0.988, 0.9186]]], [[[0.3884, 0.5268]]]]])
in1Min28732 = tf.constant([[[[[0.0184, 0.1273]]], [[[0.7637, 0.8127]]]]])
in0Add55504 = tf.constant([[[0.1144], [0.6265]]])
in1Add55504 = tf.constant([[[0.4646], [0.2533]]])
in0Con24155 = tf.constant([[[0.346], [0.5478], [0.3198]]])
in0Zer25194 = tf.constant([[[1.1402, 1.1564]]])
print (np.array2string(model.predict([in0Min28732,in1Min28732,in0Add55504,in1Add55504,in0Con24155,in0Zer25194],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Den78846.png')

LMin28732 = minimum_layer([[[[[[0.988, 0.9186]]], [[[0.3884, 0.5268]]]]], [[[[[0.0184, 0.1273]]], [[[0.7637, 0.8127]]]]]], Min28732), 
LRes86084 = reshape_layer(Min28732, [2, 1, 2], Res86084), 
LRes4180 = reshape_layer(Res86084, [2, 2], Res4180), 
LAdd55504 = add_layer([[[[0.1144], [0.6265]]], [[[0.4646], [0.2533]]]], Add55504), 
LDot75461 = dot_layer(Res4180,Add55504, 1, 1, Dot75461), 
LZer99664 = zero_padding1D_layer(Dot75461, 1, 0, Zer99664), 
LCon24155 = concatenate_layer([Zer99664,[[[0.346], [0.5478], [0.3198]]]], 2, Con24155), 
LZer25194 = zero_padding1D_layer([[[1.1402, 1.1564]]], 1, 1, Zer25194), 
LAdd42900 = add_layer([Con24155,Zer25194], Add42900), 
LDen78846 = dense_layer(Add42900, [[0.5376, 0.5266, 0.1965], [0.0925, 0.6409, 0.7067]],[0.2106, 0.3549, 0.3603], Den78846), 
exec_layers([LMin28732,LRes86084,LRes4180,LAdd55504,LDot75461,LZer99664,LCon24155,LZer25194,LAdd42900,LDen78846],["Min28732","Res86084","Res4180","Add55504","Dot75461","Zer99664","Con24155","Zer25194","Add42900","Den78846"],Den78846,"Den78846")

Actual (Unparsed): [[[0.2426050, 0.5766514, 0.6048182], [1.1706430, 2.2331080, 1.8579477], [0.5289723, 0.8427416, 0.6918596]]]

Expected (Unparsed): [[[0.24260500000000002,0.5766514,0.6048182],[1.170643013792,2.233108046672,1.85794773628],[0.528972338784,0.8427416200439999,0.69185957931]]]

Actual:   [[[0.2427, 0.5767, 0.6049], [1.1707, 2.2332, 1.858], [0.529, 0.8428, 0.6919]]]

Expected: [[[0.2427, 0.5767, 0.6049], [1.1707, 2.2332, 1.858], [0.529, 0.8428, 0.6919]]]