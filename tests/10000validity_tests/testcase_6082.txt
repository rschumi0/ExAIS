import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Min32563 = tf.keras.layers.Input(shape=([1, 1, 1, 1]))
in1Min32563 = tf.keras.layers.Input(shape=([1, 1, 1, 1]))

Min32563 = keras.layers.Minimum(name = 'Min32563', )([in0Min32563,in1Min32563])
Res71465 = keras.layers.Reshape((1, 1, 1), name = 'Res71465', )(Min32563)
Loc31135 = keras.layers.LocallyConnected2D(3, (1, 1),strides=(1, 1), name = 'Loc31135', )(Res71465)
model = tf.keras.models.Model(inputs=[in0Min32563,in1Min32563], outputs=Loc31135)
w = model.get_layer('Loc31135').get_weights() 
w[0] = np.array([[[0.4783, 0.403, 0.9781]]])
w[1] = np.array([[[0, 0, 0]]])
model.get_layer('Loc31135').set_weights(w) 
in0Min32563 = tf.constant([[[[[0.8318]]]]])
in1Min32563 = tf.constant([[[[[0.4148]]]]])
print (np.array2string(model.predict([in0Min32563,in1Min32563],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Loc31135.png')

LMin32563 = minimum_layer([[[[[[0.8318]]]]], [[[[[0.4148]]]]]], Min32563), 
LRes71465 = reshape_layer(Min32563, [1, 1, 1], Res71465), 
LLoc31135 = locally_connected2D_layer(Res71465, 1, 1,[[[0.4783, 0.403, 0.9781]]],[[[0, 0, 0]]], 1, 1, Loc31135), 
exec_layers([LMin32563,LRes71465,LLoc31135],["Min32563","Res71465","Loc31135"],Loc31135,"Loc31135")

Actual (Unparsed): [[[[0.1983988, 0.1671644, 0.4057159]]]]

Expected (Unparsed): [[[[0.19839884,0.16716440000000002,0.40571588]]]]

Actual:   [[[[0.1984, 0.1672, 0.4058]]]]

Expected: [[[[0.1984, 0.1672, 0.4058]]]]