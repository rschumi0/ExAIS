import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Sub20484 = tf.keras.layers.Input(shape=([2, 2, 2]))
in1Sub20484 = tf.keras.layers.Input(shape=([2, 2, 2]))
in0Dot69442 = tf.keras.layers.Input(shape=([3, 3]))
in1Dot69442 = tf.keras.layers.Input(shape=([3, 3]))
in0Sub88968 = tf.keras.layers.Input(shape=([3, 3]))
in1Sub88968 = tf.keras.layers.Input(shape=([3, 3]))
in0Con6529 = tf.keras.layers.Input(shape=([3, 1]))

Sub20484 = keras.layers.Subtract(name = 'Sub20484', )([in0Sub20484,in1Sub20484])
ReL80083 = keras.layers.ReLU(max_value=8.758315632211799, negative_slope=8.46506045824056, threshold=7.816730455700468, name = 'ReL80083', )(Sub20484)
Res36197 = keras.layers.Reshape((2, 4), name = 'Res36197', )(ReL80083)
Zer59348 = keras.layers.ZeroPadding1D(padding=((1, 0)), name = 'Zer59348', )(Res36197)
Dot69442 = keras.layers.Dot(axes=(1, 2), name = 'Dot69442', )([in0Dot69442,in1Dot69442])
Sub88968 = keras.layers.Subtract(name = 'Sub88968', )([in0Sub88968,in1Sub88968])
Loc48180 = keras.layers.LocallyConnected1D(3, (2),strides=(1), name = 'Loc48180', )(Sub88968)
Zer94497 = keras.layers.ZeroPadding1D(padding=((1, 0)), name = 'Zer94497', )(Loc48180)
Min3311 = keras.layers.Minimum(name = 'Min3311', )([Dot69442,Zer94497])
Con6529 = keras.layers.Concatenate(axis=2, name = 'Con6529', )([Min3311,in0Con6529])
Max9384 = keras.layers.Maximum(name = 'Max9384', )([Zer59348,Con6529])
model = tf.keras.models.Model(inputs=[in0Sub20484,in1Sub20484,in0Dot69442,in1Dot69442,in0Sub88968,in1Sub88968,in0Con6529], outputs=Max9384)
w = model.get_layer('Loc48180').get_weights() 
w[0] = np.array([[[0.3324, 0.7891, 0.3715], [0.0859, 0.5532, 0.212], [0.0633, 0.5487, 0.46], [0.0858, 0.6735, 0.3791], [0.4972, 0.1705, 0.1057], [0.0512, 0.0266, 0.0218]], [[0.9246, 0.3343, 0.104], [0.8964, 0.3948, 0.7265], [0.9156, 0.3011, 0.4861], [0.1201, 0.3246, 0.7851], [0.283, 0.3683, 0.6475], [0.7232, 0.4255, 0.7121]]])
w[1] = np.array([[0, 0, 0], [0, 0, 0]])
model.get_layer('Loc48180').set_weights(w) 
in0Sub20484 = tf.constant([[[[0.2294, 0.3389], [0.3378, 0.3604]], [[0.4462, 0.3953], [0.9471, 0.8191]]]])
in1Sub20484 = tf.constant([[[[0.8849, 0.2023], [0.6181, 0.7961]], [[0.0745, 0.6312], [0.7173, 0.4703]]]])
in0Dot69442 = tf.constant([[[0.4146, 0.7123, 0.6138], [0.4476, 0.6927, 0.181], [0.1965, 0.3014, 0.1533]]])
in1Dot69442 = tf.constant([[[0.548, 0.5518, 0.4502], [0.7964, 0.7673, 0.9532], [0.173, 0.444, 0.0046]]])
in0Sub88968 = tf.constant([[[0.6236, 0.5666, 0.1232], [0.8404, 0.698, 0.1634], [0.4849, 0.4822, 0.4341]]])
in1Sub88968 = tf.constant([[[0.7401, 0.301, 0.2057], [0.0005, 0.5772, 0.5658], [0.2957, 0.1012, 0.055]]])
in0Con6529 = tf.constant([[[0.2239], [0.2122], [0.434]]])
print (np.array2string(model.predict([in0Sub20484,in1Sub20484,in0Dot69442,in1Dot69442,in0Sub88968,in1Sub88968,in0Con6529],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Max9384.png')

LSub20484 = subtract_layer([[[[0.2294, 0.3389], [0.3378, 0.3604]], [[0.4462, 0.3953], [0.9471, 0.8191]]]], [[[[0.8849, 0.2023], [0.6181, 0.7961]], [[0.0745, 0.6312], [0.7173, 0.4703]]]], Sub20484), 
LReL80083 = relu_layer(Sub20484, 8.758315632211799, 8.46506045824056, 7.816730455700468, ReL80083), 
LRes36197 = reshape_layer(ReL80083, [2, 4], Res36197), 
LZer59348 = zero_padding1D_layer(Res36197, 1, 0, Zer59348), 
LDot69442 = dot_layer([[[0.4146, 0.7123, 0.6138], [0.4476, 0.6927, 0.181], [0.1965, 0.3014, 0.1533]]], [[[0.548, 0.5518, 0.4502], [0.7964, 0.7673, 0.9532], [0.173, 0.444, 0.0046]]], 1, 2, Dot69442), 
LSub88968 = subtract_layer([[[0.6236, 0.5666, 0.1232], [0.8404, 0.698, 0.1634], [0.4849, 0.4822, 0.4341]]], [[[0.7401, 0.301, 0.2057], [0.0005, 0.5772, 0.5658], [0.2957, 0.1012, 0.055]]], Sub88968), 
LLoc48180 = locally_connected1D_layer(Sub88968, 2,[[[0.3324, 0.7891, 0.3715], [0.0859, 0.5532, 0.212], [0.0633, 0.5487, 0.46], [0.0858, 0.6735, 0.3791], [0.4972, 0.1705, 0.1057], [0.0512, 0.0266, 0.0218]], [[0.9246, 0.3343, 0.104], [0.8964, 0.3948, 0.7265], [0.9156, 0.3011, 0.4861], [0.1201, 0.3246, 0.7851], [0.283, 0.3683, 0.6475], [0.7232, 0.4255, 0.7121]]],[[0, 0, 0], [0, 0, 0]], 1, Loc48180), 
LZer94497 = zero_padding1D_layer(Loc48180, 1, 0, Zer94497), 
LMin3311 = minimum_layer([Dot69442,Zer94497], Min3311), 
LCon6529 = concatenate_layer([Min3311,[[[0.2239], [0.2122], [0.434]]]], 2, Con6529), 
LMax9384 = maximum_layer([Zer59348,Con6529], Max9384), 
exec_layers([LSub20484,LReL80083,LRes36197,LZer59348,LDot69442,LSub88968,LLoc48180,LZer94497,LMin3311,LCon6529,LMax9384],["Sub20484","ReL80083","Res36197","Zer59348","Dot69442","Sub88968","Loc48180","Zer94497","Min3311","Con6529","Max9384"],Max9384,"Max9384")

Actual (Unparsed): [[[0.0000000, 0.0000000, 0.0000000, 0.2239000], [0.0903905, 0.5852972, 0.2974798, 0.2122000], [0.5052538, 0.5703514, 0.1872566, 0.4340000]]]

Expected (Unparsed): [[[0,0,0,0.2239],[0.09039048999999998,0.5852972300000001,0.29747978,0.2122],[0.50525386,0.5703514399999999,0.18725657999999998,0.434]]]

Actual:   [[[0, 0, 0, 0.2239], [0.0904, 0.5853, 0.2975, 0.2122], [0.5053, 0.5704, 0.1873, 0.434]]]

Expected: [[[0, 0, 0, 0.2239], [0.0904, 0.5853, 0.2975, 0.2122], [0.5053, 0.5704, 0.1873, 0.434]]]