import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Mul90398 = tf.keras.layers.Input(shape=([2, 1, 2, 1]))
in1Mul90398 = tf.keras.layers.Input(shape=([2, 1, 2, 1]))

Mul90398 = keras.layers.Multiply(name = 'Mul90398', )([in0Mul90398,in1Mul90398])
Up_55009 = keras.layers.UpSampling3D(size=(2, 2, 1), name = 'Up_55009', )(Mul90398)
model = tf.keras.models.Model(inputs=[in0Mul90398,in1Mul90398], outputs=Up_55009)
in0Mul90398 = tf.constant([[[[[0.6404], [0.1002]]], [[[0.1153], [0.5375]]]]])
in1Mul90398 = tf.constant([[[[[0.6162], [0.1534]]], [[[0.9719], [0.8152]]]]])
print (np.array2string(model.predict([in0Mul90398,in1Mul90398],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Up_55009.png')

LMul90398 = multiply_layer([[[[[[0.6404], [0.1002]]], [[[0.1153], [0.5375]]]]], [[[[[0.6162], [0.1534]]], [[[0.9719], [0.8152]]]]]], Mul90398), 
LUp_55009 = up_sampling3D_layer(Mul90398, 2, 2, 1, Up_55009), 
exec_layers([LMul90398,LUp_55009],["Mul90398","Up_55009"],Up_55009,"Up_55009")

Actual (Unparsed): [[[[[0.3946145], [0.0153707]], [[0.3946145], [0.0153707]]], [[[0.3946145], [0.0153707]], [[0.3946145], [0.0153707]]], [[[0.1120601], [0.4381700]], [[0.1120601], [0.4381700]]], [[[0.1120601], [0.4381700]], [[0.1120601], [0.4381700]]]]]

Expected (Unparsed): [[[[[0.39461447999999993],[0.015370680000000001]],[[0.39461447999999993],[0.015370680000000001]]],[[[0.39461447999999993],[0.015370680000000001]],[[0.39461447999999993],[0.015370680000000001]]],[[[0.11206007],[0.43817]],[[0.11206007],[0.43817]]],[[[0.11206007],[0.43817]],[[0.11206007],[0.43817]]]]]

Actual:   [[[[[0.3947], [0.0154]], [[0.3947], [0.0154]]], [[[0.3947], [0.0154]], [[0.3947], [0.0154]]], [[[0.1121], [0.4382]], [[0.1121], [0.4382]]], [[[0.1121], [0.4382]], [[0.1121], [0.4382]]]]]

Expected: [[[[[0.3947], [0.0154]], [[0.3947], [0.0154]]], [[[0.3947], [0.0154]], [[0.3947], [0.0154]]], [[[0.1121], [0.4382]], [[0.1121], [0.4382]]], [[[0.1121], [0.4382]], [[0.1121], [0.4382]]]]]