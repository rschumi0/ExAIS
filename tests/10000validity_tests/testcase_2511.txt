import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Min7291 = tf.keras.layers.Input(shape=([2, 1, 2, 1]))
in1Min7291 = tf.keras.layers.Input(shape=([2, 1, 2, 1]))
in0Up_67906 = tf.keras.layers.Input(shape=([3, 2, 2]))
in0Cro17238 = tf.keras.layers.Input(shape=([4, 1]))
in0Mul3396 = tf.keras.layers.Input(shape=([2, 2, 1]))
in1Mul3396 = tf.keras.layers.Input(shape=([2, 2, 1]))
in0Dot45573 = tf.keras.layers.Input(shape=([2]))
in1Dot45573 = tf.keras.layers.Input(shape=([2]))
in0Con72377 = tf.keras.layers.Input(shape=([6]))
in0Con61551 = tf.keras.layers.Input(shape=([15]))

Min7291 = keras.layers.Minimum(name = 'Min7291', )([in0Min7291,in1Min7291])
Res1552 = keras.layers.Reshape((2, 1, 2), name = 'Res1552', )(Min7291)
Zer91101 = keras.layers.ZeroPadding2D(padding=((1, 0), (3, 0)), name = 'Zer91101', )(Res1552)
Up_67906 = keras.layers.UpSampling2D(size=(1, 2), name = 'Up_67906', )(in0Up_67906)
Add99452 = keras.layers.Add(name = 'Add99452', )([Zer91101,Up_67906])
Res14312 = keras.layers.Reshape((3, 8), name = 'Res14312', )(Add99452)
Fla14355 = keras.layers.Flatten(name = 'Fla14355', )(Res14312)
Cro17238 = keras.layers.Cropping1D(cropping=((1, 0)), name = 'Cro17238', )(in0Cro17238)
Res86870 = keras.layers.Reshape((3, 1, 1), name = 'Res86870', )(Cro17238)
Zer28501 = keras.layers.ZeroPadding2D(padding=((0, 0), (2, 0)), name = 'Zer28501', )(Res86870)
Mul3396 = keras.layers.Multiply(name = 'Mul3396', )([in0Mul3396,in1Mul3396])
Zer85835 = keras.layers.ZeroPadding2D(padding=((1, 0), (1, 0)), name = 'Zer85835', )(Mul3396)
Min25121 = keras.layers.Minimum(name = 'Min25121', )([Zer28501,Zer85835])
Res81655 = keras.layers.Reshape((3, 3), name = 'Res81655', )(Min25121)
Fla27964 = keras.layers.Flatten(name = 'Fla27964', )(Res81655)
Dot45573 = keras.layers.Dot(axes=(1, 1), name = 'Dot45573', )([in0Dot45573,in1Dot45573])
Res67994 = keras.layers.Reshape((1, 1), name = 'Res67994', )(Dot45573)
LST98709 = keras.layers.LSTM(3,recurrent_activation='sigmoid', name = 'LST98709', )(Res67994)
Con72377 = keras.layers.Concatenate(axis=1, name = 'Con72377', )([LST98709,in0Con72377])
Max21360 = keras.layers.Maximum(name = 'Max21360', )([Fla27964,Con72377])
Con61551 = keras.layers.Concatenate(axis=1, name = 'Con61551', )([Max21360,in0Con61551])
Min60846 = keras.layers.Minimum(name = 'Min60846', )([Fla14355,Con61551])
model = tf.keras.models.Model(inputs=[in0Min7291,in1Min7291,in0Up_67906,in0Cro17238,in0Mul3396,in1Mul3396,in0Dot45573,in1Dot45573,in0Con72377,in0Con61551], outputs=Min60846)
w = model.get_layer('LST98709').get_weights() 
w[0] = np.array([[7, 1, 5, 10, 3, 8, 6, 9, 7, 9, 5, 9]])
w[1] = np.array([[10, 7, 5, 3, 5, 5, 4, 3, 8, 1, 4, 6], [1, 3, 9, 8, 8, 5, 7, 9, 10, 10, 2, 6], [7, 3, 4, 7, 4, 3, 1, 10, 7, 3, 10, 7]])
w[2] = np.array([5, 6, 6, 6, 4, 10, 7, 8, 9, 8, 3, 8])
model.get_layer('LST98709').set_weights(w) 
in0Min7291 = tf.constant([[[[[0.9784], [0.0895]]], [[[0.4643], [0.1846]]]]])
in1Min7291 = tf.constant([[[[[0.3166], [0.9219]]], [[[0.7511], [0.8714]]]]])
in0Up_67906 = tf.constant([[[[1.642, 1.7836], [1.2618, 1.1344]], [[1.0125, 1.7849], [1.1126, 1.598]], [[1.8715, 1.2941], [1.0338, 1.0057]]]])
in0Cro17238 = tf.constant([[[1.0181], [1.5091], [1.6515], [1.8238]]])
in0Mul3396 = tf.constant([[[[0.0521], [0.1533]], [[0.6119], [0.1429]]]])
in1Mul3396 = tf.constant([[[[0.9538], [0.2969]], [[0.2805], [0.5635]]]])
in0Dot45573 = tf.constant([[0.6112, 0.4927]])
in1Dot45573 = tf.constant([[0.0389, 0.7026]])
in0Con72377 = tf.constant([[0.5821, 0.9079, 0.7209, 0.512, 0.9099, 0.6325]])
in0Con61551 = tf.constant([[0.388, 0.2888, 0.0916, 0.8222, 0.4253, 0.2111, 0.9494, 0.805, 0.3076, 0.2335, 0.5357, 0.4743, 0.6522, 0.0763, 0.9246]])
print (np.array2string(model.predict([in0Min7291,in1Min7291,in0Up_67906,in0Cro17238,in0Mul3396,in1Mul3396,in0Dot45573,in1Dot45573,in0Con72377,in0Con61551],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Min60846.png')

LMin7291 = minimum_layer([[[[[[0.9784], [0.0895]]], [[[0.4643], [0.1846]]]]], [[[[[0.3166], [0.9219]]], [[[0.7511], [0.8714]]]]]], Min7291), 
LRes1552 = reshape_layer(Min7291, [2, 1, 2], Res1552), 
LZer91101 = zero_padding2D_layer(Res1552, 1, 0, 3, 0, Zer91101), 
LUp_67906 = up_sampling2D_layer([[[[1.642, 1.7836], [1.2618, 1.1344]], [[1.0125, 1.7849], [1.1126, 1.598]], [[1.8715, 1.2941], [1.0338, 1.0057]]]], 1, 2, Up_67906), 
LAdd99452 = add_layer([Zer91101,Up_67906], Add99452), 
LRes14312 = reshape_layer(Add99452, [3, 8], Res14312), 
LFla14355 = flatten_layer(Res14312, Fla14355), 
LCro17238 = cropping1D_layer([[[1.0181], [1.5091], [1.6515], [1.8238]]], 1, 0, Cro17238), 
LRes86870 = reshape_layer(Cro17238, [3, 1, 1], Res86870), 
LZer28501 = zero_padding2D_layer(Res86870, 0, 0, 2, 0, Zer28501), 
LMul3396 = multiply_layer([[[[[0.0521], [0.1533]], [[0.6119], [0.1429]]]], [[[[0.9538], [0.2969]], [[0.2805], [0.5635]]]]], Mul3396), 
LZer85835 = zero_padding2D_layer(Mul3396, 1, 0, 1, 0, Zer85835), 
LMin25121 = minimum_layer([Zer28501,Zer85835], Min25121), 
LRes81655 = reshape_layer(Min25121, [3, 3], Res81655), 
LFla27964 = flatten_layer(Res81655, Fla27964), 
LDot45573 = dot_layer([[0.6112, 0.4927]], [[0.0389, 0.7026]], 1, 1, Dot45573), 
LRes67994 = reshape_layer(Dot45573, [1, 1], Res67994), 
LLST98709 = lstm_layer(Res67994,[[7, 1, 5, 10, 3, 8, 6, 9, 7, 9, 5, 9]],[[10, 7, 5, 3, 5, 5, 4, 3, 8, 1, 4, 6], [1, 3, 9, 8, 8, 5, 7, 9, 10, 10, 2, 6], [7, 3, 4, 7, 4, 3, 1, 10, 7, 3, 10, 7]],[5, 6, 6, 6, 4, 10, 7, 8, 9, 8, 3, 8], LST98709), 
LCon72377 = concatenate_layer([LST98709,[[0.5821, 0.9079, 0.7209, 0.512, 0.9099, 0.6325]]], 1, Con72377), 
LMax21360 = maximum_layer([Fla27964,Con72377], Max21360), 
LCon61551 = concatenate_layer([Max21360,[[0.388, 0.2888, 0.0916, 0.8222, 0.4253, 0.2111, 0.9494, 0.805, 0.3076, 0.2335, 0.5357, 0.4743, 0.6522, 0.0763, 0.9246]]], 1, Con61551), 
LMin60846 = minimum_layer([Fla14355,Con61551], Min60846), 
exec_layers([LMin7291,LRes1552,LZer91101,LUp_67906,LAdd99452,LRes14312,LFla14355,LCro17238,LRes86870,LZer28501,LMul3396,LZer85835,LMin25121,LRes81655,LFla27964,LDot45573,LRes67994,LLST98709,LCon72377,LMax21360,LCon61551,LMin60846],["Min7291","Res1552","Zer91101","Up_67906","Add99452","Res14312","Fla14355","Cro17238","Res86870","Zer28501","Mul3396","Zer85835","Min25121","Res81655","Fla27964","Dot45573","Res67994","LST98709","Con72377","Max21360","Con61551","Min60846"],Min60846,"Min60846")

Actual (Unparsed): [[0.7613727, 0.7549636, 0.7614213, 0.5821000, 0.9079000, 0.7209000, 0.5120000, 0.9099000, 0.6325000, 0.3880000, 0.2888000, 0.0916000, 0.8222000, 0.4253000, 0.2111000, 0.9494000, 0.8050000, 0.3076000, 0.2335000, 0.5357000, 0.4743000, 0.6522000, 0.0763000, 0.9246000]]

Expected (Unparsed): [[0.7613726586562275,0.7549636330718553,0.7614212946919965,0.5821,0.9079,0.7209,0.512,0.9099,0.6325,0.388,0.2888,0.0916,0.8222,0.4253,0.2111,0.9494,0.805,0.3076,0.2335,0.5357,0.4743,0.6522,0.0763,0.9246]]

Actual:   [[0.7614, 0.755, 0.7615, 0.5821, 0.9079, 0.7209, 0.512, 0.9099, 0.6325, 0.388, 0.2888, 0.0916, 0.8222, 0.4253, 0.2111, 0.9494, 0.805, 0.3076, 0.2335, 0.5357, 0.4743, 0.6522, 0.0763, 0.9246]]

Expected: [[0.7614, 0.755, 0.7615, 0.5821, 0.9079, 0.7209, 0.512, 0.9099, 0.6325, 0.388, 0.2888, 0.0916, 0.8222, 0.4253, 0.2111, 0.9494, 0.805, 0.3076, 0.2335, 0.5357, 0.4743, 0.6522, 0.0763, 0.9246]]