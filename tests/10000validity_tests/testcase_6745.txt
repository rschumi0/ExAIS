import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Sub43106 = tf.keras.layers.Input(shape=([2, 3, 2, 3]))
in1Sub43106 = tf.keras.layers.Input(shape=([2, 3, 2, 3]))
in0Min39484 = tf.keras.layers.Input(shape=([2, 2]))
in1Min39484 = tf.keras.layers.Input(shape=([2, 2]))
in0Con28398 = tf.keras.layers.Input(shape=([2, 16]))

Sub43106 = keras.layers.Subtract(name = 'Sub43106', )([in0Sub43106,in1Sub43106])
Res60088 = keras.layers.Reshape((2, 3, 6), name = 'Res60088', )(Sub43106)
Res95482 = keras.layers.Reshape((2, 18), name = 'Res95482', )(Res60088)
Min39484 = keras.layers.Minimum(name = 'Min39484', )([in0Min39484,in1Min39484])
Con28398 = keras.layers.Concatenate(axis=2, name = 'Con28398', )([Min39484,in0Con28398])
Ave24670 = keras.layers.Average(name = 'Ave24670', )([Res95482,Con28398])
model = tf.keras.models.Model(inputs=[in0Sub43106,in1Sub43106,in0Min39484,in1Min39484,in0Con28398], outputs=Ave24670)
in0Sub43106 = tf.constant([[[[[0.7667, 0.6666, 0.7284], [0.2902, 0.3884, 0.783]], [[0.4692, 0.3301, 0.1877], [0.2732, 0.7395, 0.8587]], [[0.0002, 0.5348, 0.5552], [0.1816, 0.3585, 0.6275]]], [[[0.9484, 0.2138, 0.9205], [0.6736, 0.2007, 0.1864]], [[0.9381, 0.7148, 0.6356], [0.0302, 0.4708, 0.6534]], [[0.8712, 0.0836, 0.9808], [0.5434, 0.0685, 0.2295]]]]])
in1Sub43106 = tf.constant([[[[[0.5353, 0.0281, 0.5105], [0.4298, 0.094, 0.1653]], [[0.7902, 0.8962, 0.2566], [0.2288, 0.9991, 0.8132]], [[0.4104, 0.3309, 0.5646], [0.6135, 0.4305, 0.8719]]], [[[0.809, 0.2918, 0.9578], [0.8871, 0.8719, 0.1426]], [[0.809, 0.3399, 0.3762], [0.6072, 0.2579, 0.2856]], [[0.0992, 0.6216, 0.7656], [0.6196, 0.9586, 0.9758]]]]])
in0Min39484 = tf.constant([[[0.2372, 0.8126], [0.8211, 0.7102]]])
in1Min39484 = tf.constant([[[0.0339, 0.6389], [0.9995, 0.506]]])
in0Con28398 = tf.constant([[[0.8534, 0.2775, 0.6281, 0.5627, 0.3406, 0.5053, 0.6236, 0.9972, 0.9669, 0.749, 0.3498, 0.5213, 0.1273, 0.0749, 0.5999, 0.5111], [0.2131, 0.251, 0.6682, 0.2311, 0.4022, 0.6105, 0.0076, 0.252, 0.6385, 0.7724, 0.2989, 0.057, 0.9571, 0.7788, 0.5927, 0.8081]]])
print (np.array2string(model.predict([in0Sub43106,in1Sub43106,in0Min39484,in1Min39484,in0Con28398],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Ave24670.png')

LSub43106 = subtract_layer([[[[[0.7667, 0.6666, 0.7284], [0.2902, 0.3884, 0.783]], [[0.4692, 0.3301, 0.1877], [0.2732, 0.7395, 0.8587]], [[0.0002, 0.5348, 0.5552], [0.1816, 0.3585, 0.6275]]], [[[0.9484, 0.2138, 0.9205], [0.6736, 0.2007, 0.1864]], [[0.9381, 0.7148, 0.6356], [0.0302, 0.4708, 0.6534]], [[0.8712, 0.0836, 0.9808], [0.5434, 0.0685, 0.2295]]]]], [[[[[0.5353, 0.0281, 0.5105], [0.4298, 0.094, 0.1653]], [[0.7902, 0.8962, 0.2566], [0.2288, 0.9991, 0.8132]], [[0.4104, 0.3309, 0.5646], [0.6135, 0.4305, 0.8719]]], [[[0.809, 0.2918, 0.9578], [0.8871, 0.8719, 0.1426]], [[0.809, 0.3399, 0.3762], [0.6072, 0.2579, 0.2856]], [[0.0992, 0.6216, 0.7656], [0.6196, 0.9586, 0.9758]]]]], Sub43106), 
LRes60088 = reshape_layer(Sub43106, [2, 3, 6], Res60088), 
LRes95482 = reshape_layer(Res60088, [2, 18], Res95482), 
LMin39484 = minimum_layer([[[[0.2372, 0.8126], [0.8211, 0.7102]]], [[[0.0339, 0.6389], [0.9995, 0.506]]]], Min39484), 
LCon28398 = concatenate_layer([Min39484,[[[0.8534, 0.2775, 0.6281, 0.5627, 0.3406, 0.5053, 0.6236, 0.9972, 0.9669, 0.749, 0.3498, 0.5213, 0.1273, 0.0749, 0.5999, 0.5111], [0.2131, 0.251, 0.6682, 0.2311, 0.4022, 0.6105, 0.0076, 0.252, 0.6385, 0.7724, 0.2989, 0.057, 0.9571, 0.7788, 0.5927, 0.8081]]]], 2, Con28398), 
LAve24670 = average_layer([Res95482,Con28398], Ave24670), 
exec_layers([LSub43106,LRes60088,LRes95482,LMin39484,LCon28398,LAve24670],["Sub43106","Res60088","Res95482","Min39484","Con28398","Ave24670"],Ave24670,"Ave24670")

Actual (Unparsed): [[[0.1326500, 0.6387000, 0.5356500, 0.0689500, 0.4612500, 0.5902000, 0.0098000, -0.0304000, 0.2773500, 0.5208000, 0.3536500, 0.3972500, -0.0302000, 0.3626000, 0.0589500, -0.1785000, 0.2639500, 0.1333500], [0.4802500, 0.2140000, 0.0879000, 0.0187500, -0.0015000, 0.1374500, 0.2656500, 0.4927000, 0.1335000, -0.1625000, 0.4257000, 0.5701000, 0.5354500, -0.2405000, 0.5861500, 0.3513000, -0.1487000, 0.0309000]]]

Expected (Unparsed): [[[0.13265000000000002,0.6387,0.5356500000000001,0.06895000000000001,0.46125,0.5902000000000001,0.009800000000000003,-0.030400000000000038,0.27735000000000004,0.5207999999999999,0.35365,0.39725,-0.030200000000000005,0.36260000000000003,0.058950000000000016,-0.17850000000000005,0.26395,0.13334999999999997],[0.48025,0.214,0.0879,0.01874999999999999,-0.0015000000000000013,0.13745000000000002,0.26565,0.4927,0.13350000000000004,-0.16249999999999998,0.42569999999999997,0.5700999999999999,0.53545,-0.24050000000000002,0.58615,0.3513,-0.1487,0.03090000000000004]]]

Actual:   [[[0.1327, 0.6387, 0.5357, 0.069, 0.4613, 0.5902, 0.0098, -0.0304, 0.2774, 0.5208, 0.3537, 0.3973, -0.0302, 0.3626, 0.059, -0.1785, 0.264, 0.1334], [0.4803, 0.214, 0.0879, 0.0188, -0.0015, 0.1375, 0.2657, 0.4927, 0.1335, -0.1625, 0.4257, 0.5701, 0.5355, -0.2405, 0.5862, 0.3513, -0.1487, 0.0309]]]

Expected: [[[0.1327, 0.6387, 0.5357, 0.069, 0.4613, 0.5903, 0.0099, -0.0304, 0.2774, 0.5208, 0.3537, 0.3973, -0.0302, 0.3627, 0.059, -0.1785, 0.264, 0.1334], [0.4803, 0.214, 0.0879, 0.0188, -0.0015, 0.1375, 0.2657, 0.4927, 0.1336, -0.1624, 0.4257, 0.5701, 0.5355, -0.2405, 0.5862, 0.3513, -0.1487, 0.031]]]