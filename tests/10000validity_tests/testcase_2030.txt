import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Dot23734 = tf.keras.layers.Input(shape=([2]))
in1Dot23734 = tf.keras.layers.Input(shape=([2]))

Dot23734 = keras.layers.Dot(axes=(1, 1), name = 'Dot23734', )([in0Dot23734,in1Dot23734])
Res37125 = keras.layers.Reshape((1, 1), name = 'Res37125', )(Dot23734)
Res71172 = keras.layers.Reshape((1, 1, 1), name = 'Res71172', )(Res37125)
Res39662 = keras.layers.Reshape((1, 1, 1, 1), name = 'Res39662', )(Res71172)
Con22387 = keras.layers.Conv3DTranspose(2, (1, 1, 1),strides=(1, 1, 1), padding='valid', name = 'Con22387', )(Res39662)
model = tf.keras.models.Model(inputs=[in0Dot23734,in1Dot23734], outputs=Con22387)
w = model.get_layer('Con22387').get_weights() 
w[0] = np.array([[[[[0.3068], [0.7715]]]]])
w[1] = np.array([0, 0])
model.get_layer('Con22387').set_weights(w) 
in0Dot23734 = tf.constant([[0.8925, 0.6988]])
in1Dot23734 = tf.constant([[0.9388, 0.6319]])
print (np.array2string(model.predict([in0Dot23734,in1Dot23734],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Con22387.png')

LDot23734 = dot_layer([[0.8925, 0.6988]], [[0.9388, 0.6319]], 1, 1, Dot23734), 
LRes37125 = reshape_layer(Dot23734, [1, 1], Res37125), 
LRes71172 = reshape_layer(Res37125, [1, 1, 1], Res71172), 
LRes39662 = reshape_layer(Res71172, [1, 1, 1, 1], Res39662), 
LCon22387 = conv3D_transpose_layer(Res39662, 1, 1, 1,[[[[[0.3068], [0.7715]]]]],[0, 0], 1, 1, 1, false, Con22387), 
exec_layers([LDot23734,LRes37125,LRes71172,LRes39662,LCon22387],["Dot23734","Res37125","Res71172","Res39662","Con22387"],Con22387,"Con22387")

Actual (Unparsed): [[[[[0.3925355, 0.9870962]]]]]

Expected (Unparsed): [[[[[0.392535480896,0.9870962304799998]]]]]

Actual:   [[[[[0.3926, 0.9871]]]]]

Expected: [[[[[0.3926, 0.9871]]]]]