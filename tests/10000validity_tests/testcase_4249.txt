import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0PRe65256 = tf.keras.layers.Input(shape=([2, 1]))

PRe65256 = keras.layers.PReLU(name = 'PRe65256', input_shape=(2, 1))(in0PRe65256)
Lay43354 = keras.layers.LayerNormalization(axis=2, epsilon=1.400998174791943, name = 'Lay43354', )(PRe65256)
Mas50326 = keras.layers.Masking(mask_value=1, name = 'Mas50326', )(Lay43354)
Res81107 = keras.layers.Reshape((2, 1, 1), name = 'Res81107', )(Mas50326)
Res70365 = keras.layers.Reshape((2, 1, 1, 1), name = 'Res70365', )(Res81107)
Con22970 = keras.layers.Conv3DTranspose(2, (1, 1, 1),strides=(1, 1, 1), padding='same', name = 'Con22970', )(Res70365)
model = tf.keras.models.Model(inputs=[in0PRe65256], outputs=Con22970)
w = model.get_layer('PRe65256').get_weights() 
w[0] = np.array([[0.0858], [0.5859]])
model.get_layer('PRe65256').set_weights(w) 
w = model.get_layer('Con22970').get_weights() 
w[0] = np.array([[[[[0.2028], [0.7916]]]]])
w[1] = np.array([0, 0])
model.get_layer('Con22970').set_weights(w) 
in0PRe65256 = tf.constant([[[0.2404], [0.8516]]])
print (np.array2string(model.predict([in0PRe65256],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Con22970.png')

LPRe65256 = prelu_layer([[[0.2404], [0.8516]]], [[0.0858], [0.5859]], PRe65256), 
LLay43354 = layer_normalization_layer(PRe65256, 2, 1.400998174791943, Lay43354), 
LMas50326 = masking_layer(Lay43354, 1, Mas50326), 
LRes81107 = reshape_layer(Mas50326, [2, 1, 1], Res81107), 
LRes70365 = reshape_layer(Res81107, [2, 1, 1, 1], Res70365), 
LCon22970 = conv3D_transpose_layer(Res70365, 1, 1, 1,[[[[[0.2028], [0.7916]]]]],[0, 0], 1, 1, 1, true, Con22970), 
exec_layers([LPRe65256,LLay43354,LMas50326,LRes81107,LRes70365,LCon22970],["PRe65256","Lay43354","Mas50326","Res81107","Res70365","Con22970"],Con22970,"Con22970")

Actual (Unparsed): [[[[[0.0000000, 0.0000000]]], [[[0.0000000, 0.0000000]]]]]

Expected (Unparsed): [[[[[0.0,0.0]]],[[[0.0,0.0]]]]]

Actual:   [[[[[0, 0]]], [[[0, 0]]]]]

Expected: [[[[[0, 0]]], [[[0, 0]]]]]