import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Lea91806 = tf.keras.layers.Input(shape=([2, 2]))

Lea91806 = keras.layers.LeakyReLU(alpha=4.043330305455005, name = 'Lea91806', input_shape=(2, 2))(in0Lea91806)
Res59533 = keras.layers.Reshape((2, 2, 1), name = 'Res59533', )(Lea91806)
Res38307 = keras.layers.Reshape((2, 2, 1, 1), name = 'Res38307', )(Res59533)
Glo90550 = keras.layers.GlobalMaxPool3D(name = 'Glo90550', )(Res38307)
Lay44066 = keras.layers.LayerNormalization(axis=1, epsilon=1.457975696992467, name = 'Lay44066', )(Glo90550)
model = tf.keras.models.Model(inputs=[in0Lea91806], outputs=Lay44066)
in0Lea91806 = tf.constant([[[0.9652, 0.3142], [0.604, 0.1632]]])
print (np.array2string(model.predict([in0Lea91806],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Lay44066.png')

LLea91806 = leaky_relu_layer([[[0.9652, 0.3142], [0.604, 0.1632]]], 4.043330305455005, Lea91806), 
LRes59533 = reshape_layer(Lea91806, [2, 2, 1], Res59533), 
LRes38307 = reshape_layer(Res59533, [2, 2, 1, 1], Res38307), 
LGlo90550 = global_max_pool3D_layer(Res38307, Glo90550), 
LLay44066 = layer_normalization_layer(Glo90550, 1, 1.457975696992467, Lay44066), 
exec_layers([LLea91806,LRes59533,LRes38307,LGlo90550,LLay44066],["Lea91806","Res59533","Res38307","Glo90550","Lay44066"],Lay44066,"Lay44066")

Actual (Unparsed): [[0.0000000]]

Expected (Unparsed): [[0.0]]

Actual:   [[0]]

Expected: [[0]]