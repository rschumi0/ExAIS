import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0ELU23292 = tf.keras.layers.Input(shape=([2, 1, 1, 2]))
in0Max65789 = tf.keras.layers.Input(shape=([1, 2, 1]))
in1Max65789 = tf.keras.layers.Input(shape=([1, 2, 1]))
in0Con53343 = tf.keras.layers.Input(shape=([2, 3, 1]))
in0Con93708 = tf.keras.layers.Input(shape=([2, 3, 3, 2]))
in0Ave58291 = tf.keras.layers.Input(shape=([1, 1, 2, 2]))
in1Ave58291 = tf.keras.layers.Input(shape=([1, 1, 2, 2]))
in0Con22819 = tf.keras.layers.Input(shape=([2, 3, 3, 1]))
in0Sub89648 = tf.keras.layers.Input(shape=([2, 3, 3, 3]))
in1Sub89648 = tf.keras.layers.Input(shape=([2, 3, 3, 3]))

ELU23292 = keras.layers.ELU(alpha=-8.77116681009772, name = 'ELU23292', input_shape=(2, 1, 1, 2))(in0ELU23292)
Res30018 = keras.layers.Reshape((2, 1, 2), name = 'Res30018', )(ELU23292)
Zer92321 = keras.layers.ZeroPadding2D(padding=((0, 0), (2, 0)), name = 'Zer92321', )(Res30018)
Max65789 = keras.layers.Maximum(name = 'Max65789', )([in0Max65789,in1Max65789])
Zer40084 = keras.layers.ZeroPadding2D(padding=((1, 0), (1, 0)), name = 'Zer40084', )(Max65789)
Con53343 = keras.layers.Concatenate(axis=3, name = 'Con53343', )([Zer40084,in0Con53343])
Min49597 = keras.layers.Minimum(name = 'Min49597', )([Zer92321,Con53343])
Res18028 = keras.layers.Reshape((2, 3, 2, 1), name = 'Res18028', )(Min49597)
PRe39669 = keras.layers.PReLU(name = 'PRe39669', )(Res18028)
Zer8214 = keras.layers.ZeroPadding3D(padding=((0, 0), (0, 0), (1, 0)), name = 'Zer8214', )(PRe39669)
Con93708 = keras.layers.Concatenate(axis=4, name = 'Con93708', )([Zer8214,in0Con93708])
Ave58291 = keras.layers.Average(name = 'Ave58291', )([in0Ave58291,in1Ave58291])
Zer20530 = keras.layers.ZeroPadding3D(padding=((1, 0), (2, 0), (1, 0)), name = 'Zer20530', )(Ave58291)
Con22819 = keras.layers.Concatenate(axis=4, name = 'Con22819', )([Zer20530,in0Con22819])
Sub89648 = keras.layers.Subtract(name = 'Sub89648', )([in0Sub89648,in1Sub89648])
Mul47170 = keras.layers.Multiply(name = 'Mul47170', )([Con22819,Sub89648])
Mas45232 = keras.layers.Masking(mask_value=2, name = 'Mas45232', )(Mul47170)
Max13521 = keras.layers.Maximum(name = 'Max13521', )([Con93708,Mas45232])
model = tf.keras.models.Model(inputs=[in0ELU23292,in0Max65789,in1Max65789,in0Con53343,in0Con93708,in0Ave58291,in1Ave58291,in0Con22819,in0Sub89648,in1Sub89648], outputs=Max13521)
w = model.get_layer('PRe39669').get_weights() 
w[0] = np.array([[[[0.4797], [0.1015]], [[0.6285], [0.8363]], [[0.3192], [0.7751]]], [[[0.7139], [0.3689]], [[0.5968], [0.3778]], [[0.6111], [0.553]]]])
model.get_layer('PRe39669').set_weights(w) 
in0ELU23292 = tf.constant([[[[[0.5243, 0.3269]]], [[[0.3117, 0.39]]]]])
in0Max65789 = tf.constant([[[[0.9791], [0.3225]]]])
in1Max65789 = tf.constant([[[[0.6798], [0.2263]]]])
in0Con53343 = tf.constant([[[[0.7754], [0.1338], [0.617]], [[0.0674], [0.9648], [0.716]]]])
in0Con93708 = tf.constant([[[[[0.795, 0.0149], [0.0322, 0.9297], [0.7188, 0.8764]], [[0.7246, 0.7499], [0.8703, 0.5495], [0.0506, 0.9047]], [[0.8858, 0.0198], [0.2421, 0.2585], [0.0447, 0.4101]]], [[[0.0245, 0.6564], [0.1753, 0.4362], [0.8648, 0.2776]], [[0.4361, 0.4405], [0.2743, 0.0343], [0.2953, 0.5025]], [[0.565, 0.8159], [0.7887, 0.8867], [0.0444, 0.0894]]]]])
in0Ave58291 = tf.constant([[[[[0.1868, 0.4447], [0.0293, 0.5408]]]]])
in1Ave58291 = tf.constant([[[[[0.2139, 0.1072], [0.8877, 0.0393]]]]])
in0Con22819 = tf.constant([[[[[0.4392], [0.5449], [0.2777]], [[0.4785], [0.394], [0.3315]], [[0.1301], [0.4481], [0.1692]]], [[[0.6246], [0.1685], [0.324]], [[0.9892], [0.8057], [0.8414]], [[0.4338], [0.5305], [0.7107]]]]])
in0Sub89648 = tf.constant([[[[[0.0764, 0.8138, 0.0564], [0.3207, 0.3327, 0.3843], [0.9979, 0.9225, 0.1876]], [[0.8807, 0.7412, 0.4402], [0.1606, 0.3356, 0.7723], [0.3938, 0.1774, 0.0661]], [[0.7579, 0.9023, 0.15], [0.7025, 0.2386, 0.773], [0.7234, 0.0513, 0.6146]]], [[[0.3078, 0.8907, 0.5721], [0.8525, 0.9922, 0.6032], [0.5526, 0.3411, 0.2381]], [[0.3341, 0.0344, 0.2387], [0.5255, 0.7963, 0.164], [0.4692, 0.6116, 0.6588]], [[0.9194, 0.2506, 0.9567], [0.1571, 0.1021, 0.6674], [0.1557, 0.9532, 0.0692]]]]])
in1Sub89648 = tf.constant([[[[[0.3347, 0.9553, 0.4628], [0.9331, 0.6458, 0.3912], [0.1399, 0.8541, 0.4407]], [[0.6804, 0.884, 0.616], [0.1923, 0.773, 0.819], [0.8874, 0.9627, 0.8809]], [[0.1817, 0.4425, 0.4546], [0.8803, 0.955, 0.1488], [0.4524, 0.2131, 0.1786]]], [[[0.7063, 0.8306, 0.8031], [0.5839, 0.9705, 0.0906], [0.5439, 0.3078, 0.1838]], [[0.0811, 0.1177, 0.9657], [0.5952, 0.1562, 0.2599], [0.2882, 0.7584, 0.5276]], [[0.0966, 0.8584, 0.262], [0.9817, 0.8518, 0.2287], [0.7699, 0.4485, 0.0468]]]]])
print (np.array2string(model.predict([in0ELU23292,in0Max65789,in1Max65789,in0Con53343,in0Con93708,in0Ave58291,in1Ave58291,in0Con22819,in0Sub89648,in1Sub89648],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Max13521.png')

LELU23292 = elu_layer([[[[[0.5243, 0.3269]]], [[[0.3117, 0.39]]]]], -8.77116681009772, ELU23292), 
LRes30018 = reshape_layer(ELU23292, [2, 1, 2], Res30018), 
LZer92321 = zero_padding2D_layer(Res30018, 0, 0, 2, 0, Zer92321), 
LMax65789 = maximum_layer([[[[[0.9791], [0.3225]]]], [[[[0.6798], [0.2263]]]]], Max65789), 
LZer40084 = zero_padding2D_layer(Max65789, 1, 0, 1, 0, Zer40084), 
LCon53343 = concatenate_layer([Zer40084,[[[[0.7754], [0.1338], [0.617]], [[0.0674], [0.9648], [0.716]]]]], 3, Con53343), 
LMin49597 = minimum_layer([Zer92321,Con53343], Min49597), 
LRes18028 = reshape_layer(Min49597, [2, 3, 2, 1], Res18028), 
LPRe39669 = prelu_layer(Res18028, [[[[0.4797], [0.1015]], [[0.6285], [0.8363]], [[0.3192], [0.7751]]], [[[0.7139], [0.3689]], [[0.5968], [0.3778]], [[0.6111], [0.553]]]], PRe39669), 
LZer8214 = zero_padding3D_layer(PRe39669, 0, 0, 0, 0, 1, 0, Zer8214), 
LCon93708 = concatenate_layer([Zer8214,[[[[[0.795, 0.0149], [0.0322, 0.9297], [0.7188, 0.8764]], [[0.7246, 0.7499], [0.8703, 0.5495], [0.0506, 0.9047]], [[0.8858, 0.0198], [0.2421, 0.2585], [0.0447, 0.4101]]], [[[0.0245, 0.6564], [0.1753, 0.4362], [0.8648, 0.2776]], [[0.4361, 0.4405], [0.2743, 0.0343], [0.2953, 0.5025]], [[0.565, 0.8159], [0.7887, 0.8867], [0.0444, 0.0894]]]]]], 4, Con93708), 
LAve58291 = average_layer([[[[[[0.1868, 0.4447], [0.0293, 0.5408]]]]], [[[[[0.2139, 0.1072], [0.8877, 0.0393]]]]]], Ave58291), 
LZer20530 = zero_padding3D_layer(Ave58291, 1, 0, 2, 0, 1, 0, Zer20530), 
LCon22819 = concatenate_layer([Zer20530,[[[[[0.4392], [0.5449], [0.2777]], [[0.4785], [0.394], [0.3315]], [[0.1301], [0.4481], [0.1692]]], [[[0.6246], [0.1685], [0.324]], [[0.9892], [0.8057], [0.8414]], [[0.4338], [0.5305], [0.7107]]]]]], 4, Con22819), 
LSub89648 = subtract_layer([[[[[0.0764, 0.8138, 0.0564], [0.3207, 0.3327, 0.3843], [0.9979, 0.9225, 0.1876]], [[0.8807, 0.7412, 0.4402], [0.1606, 0.3356, 0.7723], [0.3938, 0.1774, 0.0661]], [[0.7579, 0.9023, 0.15], [0.7025, 0.2386, 0.773], [0.7234, 0.0513, 0.6146]]], [[[0.3078, 0.8907, 0.5721], [0.8525, 0.9922, 0.6032], [0.5526, 0.3411, 0.2381]], [[0.3341, 0.0344, 0.2387], [0.5255, 0.7963, 0.164], [0.4692, 0.6116, 0.6588]], [[0.9194, 0.2506, 0.9567], [0.1571, 0.1021, 0.6674], [0.1557, 0.9532, 0.0692]]]]], [[[[[0.3347, 0.9553, 0.4628], [0.9331, 0.6458, 0.3912], [0.1399, 0.8541, 0.4407]], [[0.6804, 0.884, 0.616], [0.1923, 0.773, 0.819], [0.8874, 0.9627, 0.8809]], [[0.1817, 0.4425, 0.4546], [0.8803, 0.955, 0.1488], [0.4524, 0.2131, 0.1786]]], [[[0.7063, 0.8306, 0.8031], [0.5839, 0.9705, 0.0906], [0.5439, 0.3078, 0.1838]], [[0.0811, 0.1177, 0.9657], [0.5952, 0.1562, 0.2599], [0.2882, 0.7584, 0.5276]], [[0.0966, 0.8584, 0.262], [0.9817, 0.8518, 0.2287], [0.7699, 0.4485, 0.0468]]]]], Sub89648), 
LMul47170 = multiply_layer([Con22819,Sub89648], Mul47170), 
LMas45232 = masking_layer(Mul47170, 2, Mas45232), 
LMax13521 = maximum_layer([Con93708,Mas45232], Max13521), 
exec_layers([LELU23292,LRes30018,LZer92321,LMax65789,LZer40084,LCon53343,LMin49597,LRes18028,LPRe39669,LZer8214,LCon93708,LAve58291,LZer20530,LCon22819,LSub89648,LMul47170,LMas45232,LMax13521],["ELU23292","Res30018","Zer92321","Max65789","Zer40084","Con53343","Min49597","Res18028","PRe39669","Zer8214","Con93708","Ave58291","Zer20530","Con22819","Sub89648","Mul47170","Mas45232","Max13521"],Max13521,"Max13521")

Actual (Unparsed): [[[[[-0.0000000, 0.7950000, 0.0149000], [-0.0000000, 0.0322000, 0.9297000], [0.0000000, 0.7188000, 0.8764000]], [[0.0000000, 0.7246000, 0.7499000], [-0.0000000, 0.8703000, 0.5495000], [-0.0000000, 0.0506000, 0.9047000]], [[0.0000000, 0.8858000, 0.0198000], [-0.0000000, 0.2421000, 0.2797040], [0.3269000, 0.0447000, 0.4101000]]], [[[-0.0000000, 0.0245000, 0.6564000], [0.0000000, 0.1753000, 0.4362000], [0.0000000, 0.8648000, 0.2776000]], [[0.0000000, 0.4361000, 0.4405000], [-0.0000000, 0.2743000, 0.0343000], [0.0000000, 0.2953000, 0.5025000]], [[0.0000000, 0.5650000, 0.8159000], [0.3117000, 0.7887000, 0.8867000], [0.3900000, 0.1463882, 0.0894000]]]]]

Expected (Unparsed): [[[[[0,0.795,0.0149],[0,0.0322,0.9297],[0,0.7188,0.8764]],[[0,0.7246,0.7499],[0,0.8703,0.5495],[0,0.0506,0.9047]],[[0,0.8858,0.0198],[0,0.2421,0.27970402000000005],[0.3269,0.0447,0.4101]]],[[[0,0.0245,0.6564],[0,0.1753,0.4362],[0,0.8648,0.2776]],[[0,0.4361,0.4405],[0,0.2743,0.0343],[0,0.2953,0.5025]],[[0,0.565,0.8159],[0.3117,0.7887,0.8867],[0.39,0.146388235,0.0894]]]]]

Actual:   [[[[[-0, 0.795, 0.0149], [-0, 0.0322, 0.9297], [0, 0.7188, 0.8764]], [[0, 0.7246, 0.7499], [-0, 0.8703, 0.5495], [-0, 0.0506, 0.9047]], [[0, 0.8858, 0.0198], [-0, 0.2421, 0.2798], [0.3269, 0.0447, 0.4101]]], [[[-0, 0.0245, 0.6564], [0, 0.1753, 0.4362], [0, 0.8648, 0.2776]], [[0, 0.4361, 0.4405], [-0, 0.2743, 0.0343], [0, 0.2953, 0.5025]], [[0, 0.565, 0.8159], [0.3117, 0.7887, 0.8867], [0.39, 0.1464, 0.0894]]]]]

Expected: [[[[[0, 0.795, 0.0149], [0, 0.0322, 0.9297], [0, 0.7188, 0.8764]], [[0, 0.7246, 0.7499], [0, 0.8703, 0.5495], [0, 0.0506, 0.9047]], [[0, 0.8858, 0.0198], [0, 0.2421, 0.2798], [0.3269, 0.0447, 0.4101]]], [[[0, 0.0245, 0.6564], [0, 0.1753, 0.4362], [0, 0.8648, 0.2776]], [[0, 0.4361, 0.4405], [0, 0.2743, 0.0343], [0, 0.2953, 0.5025]], [[0, 0.565, 0.8159], [0.3117, 0.7887, 0.8867], [0.39, 0.1464, 0.0894]]]]]