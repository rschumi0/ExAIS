import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Min73977 = tf.keras.layers.Input(shape=([1, 1, 2]))
in1Min73977 = tf.keras.layers.Input(shape=([1, 1, 2]))
in0Glo86348 = tf.keras.layers.Input(shape=([2, 1, 2, 1]))
in0Con94330 = tf.keras.layers.Input(shape=([1, 1]))
in0Sof81269 = tf.keras.layers.Input(shape=([2, 2]))

Min73977 = keras.layers.Minimum(name = 'Min73977', )([in0Min73977,in1Min73977])
Dep2638 = keras.layers.DepthwiseConv2D((1, 2),strides=(1, 1), padding='same', name = 'Dep2638', )(Min73977)
Res51633 = keras.layers.Reshape((1, 2), name = 'Res51633', )(Dep2638)
Zer13294 = keras.layers.ZeroPadding1D(padding=((1, 1)), name = 'Zer13294', )(Res51633)
Res28652 = keras.layers.Reshape((3, 2, 1), name = 'Res28652', )(Zer13294)
Glo86348 = keras.layers.GlobalMaxPool3D(name = 'Glo86348', )(in0Glo86348)
Res25062 = keras.layers.Reshape((1, 1), name = 'Res25062', )(Glo86348)
Con94330 = keras.layers.Concatenate(axis=2, name = 'Con94330', )([Res25062,in0Con94330])
Sof81269 = keras.layers.Softmax(axis=1, name = 'Sof81269', input_shape=(2, 2))(in0Sof81269)
Dot91427 = keras.layers.Dot(axes=(2, 2), name = 'Dot91427', )([Con94330,Sof81269])
Res86799 = keras.layers.Reshape((1, 2, 1), name = 'Res86799', )(Dot91427)
Cro39025 = keras.layers.Cropping2D(cropping=((0, 0), (1, 0)), name = 'Cro39025', )(Res86799)
Zer56289 = keras.layers.ZeroPadding2D(padding=((2, 0), (1, 0)), name = 'Zer56289', )(Cro39025)
Sub86617 = keras.layers.Subtract(name = 'Sub86617', )([Res28652,Zer56289])
model = tf.keras.models.Model(inputs=[in0Min73977,in1Min73977,in0Glo86348,in0Con94330,in0Sof81269], outputs=Sub86617)
w = model.get_layer('Dep2638').get_weights() 
w[0] = np.array([[[[0.3313], [0.7728]], [[0.6048], [0.5159]]]])
w[1] = np.array([0, 0])
model.get_layer('Dep2638').set_weights(w) 
in0Min73977 = tf.constant([[[[0.828, 0.0988]]]])
in1Min73977 = tf.constant([[[[0.1344, 0.3882]]]])
in0Glo86348 = tf.constant([[[[[1.9489], [1.1696]]], [[[1.983], [1.7531]]]]])
in0Con94330 = tf.constant([[[0.8818]]])
in0Sof81269 = tf.constant([[[0.8359, 0.1899], [0.9558, 0.1694]]])
print (np.array2string(model.predict([in0Min73977,in1Min73977,in0Glo86348,in0Con94330,in0Sof81269],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Sub86617.png')

LMin73977 = minimum_layer([[[[[0.828, 0.0988]]]], [[[[0.1344, 0.3882]]]]], Min73977), 
LDep2638 = depthwise_conv2D_layer(Min73977, 1, 2,[[[[0.3313], [0.7728]], [[0.6048], [0.5159]]]],[0, 0], 1, 1, true, Dep2638), 
LRes51633 = reshape_layer(Dep2638, [1, 2], Res51633), 
LZer13294 = zero_padding1D_layer(Res51633, 1, 1, Zer13294), 
LRes28652 = reshape_layer(Zer13294, [3, 2, 1], Res28652), 
LGlo86348 = global_max_pool3D_layer([[[[[1.9489], [1.1696]]], [[[1.983], [1.7531]]]]], Glo86348), 
LRes25062 = reshape_layer(Glo86348, [1, 1], Res25062), 
LCon94330 = concatenate_layer([Res25062,[[[0.8818]]]], 2, Con94330), 
LSof81269 = softmax_layer([[[0.8359, 0.1899], [0.9558, 0.1694]]], 1, Sof81269), 
LDot91427 = dot_layer(Con94330,Sof81269, 2, 2, Dot91427), 
LRes86799 = reshape_layer(Dot91427, [1, 2, 1], Res86799), 
LCro39025 = cropping2D_layer(Res86799, 0, 0, 1, 0, Cro39025), 
LZer56289 = zero_padding2D_layer(Cro39025, 2, 0, 1, 0, Zer56289), 
LSub86617 = subtract_layer(Res28652,Zer56289, Sub86617), 
exec_layers([LMin73977,LDep2638,LRes51633,LZer13294,LRes28652,LGlo86348,LRes25062,LCon94330,LSof81269,LDot91427,LRes86799,LCro39025,LZer56289,LSub86617],["Min73977","Dep2638","Res51633","Zer13294","Res28652","Glo86348","Res25062","Con94330","Sof81269","Dot91427","Res86799","Cro39025","Zer56289","Sub86617"],Sub86617,"Sub86617")

Actual (Unparsed): [[[[0.0000000], [0.0000000]], [[0.0445267], [0.0763526]], [[0.0000000], [-1.4872503]]]]

Expected (Unparsed): [[[[0],[0]],[[0.04452671999999999],[0.07635264]],[[0],[-1.487250250804092]]]]

Actual:   [[[[0], [0]], [[0.0446], [0.0764]], [[0], [-1.4872]]]]

Expected: [[[[0], [0]], [[0.0446], [0.0764]], [[0], [-1.4872]]]]