import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Ave88638 = tf.keras.layers.Input(shape=([1, 2, 2]))
in1Ave88638 = tf.keras.layers.Input(shape=([1, 2, 2]))

Ave88638 = keras.layers.Average(name = 'Ave88638', )([in0Ave88638,in1Ave88638])
Res90045 = keras.layers.Reshape((1, 4), name = 'Res90045', )(Ave88638)
Loc39313 = keras.layers.LocallyConnected1D(3, (1),strides=(1), name = 'Loc39313', )(Res90045)
model = tf.keras.models.Model(inputs=[in0Ave88638,in1Ave88638], outputs=Loc39313)
w = model.get_layer('Loc39313').get_weights() 
w[0] = np.array([[[0.0845, 0.8086, 0.963], [0.4326, 0.931, 0.0604], [0.3242, 0.3398, 0.6607], [0.9951, 0.728, 0.5132]]])
w[1] = np.array([[0, 0, 0]])
model.get_layer('Loc39313').set_weights(w) 
in0Ave88638 = tf.constant([[[[0.3437, 0.628], [0.0762, 0.7482]]]])
in1Ave88638 = tf.constant([[[[0.9787, 0.3242], [0.4056, 0.8386]]]])
print (np.array2string(model.predict([in0Ave88638,in1Ave88638],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Loc39313.png')

LAve88638 = average_layer([[[[[0.3437, 0.628], [0.0762, 0.7482]]]], [[[[0.9787, 0.3242], [0.4056, 0.8386]]]]], Ave88638), 
LRes90045 = reshape_layer(Ave88638, [1, 4], Res90045), 
LLoc39313 = locally_connected1D_layer(Res90045, 1,[[[0.0845, 0.8086, 0.963], [0.4326, 0.931, 0.0604], [0.3242, 0.3398, 0.6607], [0.9951, 0.728, 0.5132]]],[[0, 0, 0]], 1, Loc39313), 
exec_layers([LAve88638,LRes90045,LLoc39313],["Ave88638","Res90045","Loc39313"],Loc39313,"Loc39313")

Actual (Unparsed): [[[1.1294444, 1.6373484, 1.2318275]]]

Expected (Unparsed): [[[1.12944438,1.63734844,1.23182755]]]

Actual:   [[[1.1295, 1.6374, 1.2319]]]

Expected: [[[1.1295, 1.6374, 1.2319]]]