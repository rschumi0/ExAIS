import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Loc68782 = tf.keras.layers.Input(shape=([1, 2]))

Loc68782 = keras.layers.LocallyConnected1D(3, (1),strides=(1), name = 'Loc68782', )(in0Loc68782)
Zer72718 = keras.layers.ZeroPadding1D(padding=((1, 1)), name = 'Zer72718', )(Loc68782)
Res82111 = keras.layers.Reshape((3, 3, 1), name = 'Res82111', )(Zer72718)
Sep36161 = keras.layers.SeparableConv2D(4, (2, 1),strides=(1, 1), padding='same', name = 'Sep36161', )(Res82111)
model = tf.keras.models.Model(inputs=[in0Loc68782], outputs=Sep36161)
w = model.get_layer('Loc68782').get_weights() 
w[0] = np.array([[[0.525, 0.8579, 0.4454], [0.0145, 0.3144, 0.0485]]])
w[1] = np.array([[0, 0, 0]])
model.get_layer('Loc68782').set_weights(w) 
w = model.get_layer('Sep36161').get_weights() 
w[0] = np.array([[[[0.7134]]], [[[0.1007]]]])
w[1] = np.array([[[[0.5449, 0.023, 0.9636, 0.5436]]]])
w[2] = np.array([0, 0, 0, 0])
model.get_layer('Sep36161').set_weights(w) 
in0Loc68782 = tf.constant([[[0.3924, 0.4465]]])
print (np.array2string(model.predict([in0Loc68782],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Sep36161.png')

LLoc68782 = locally_connected1D_layer([[[0.3924, 0.4465]]], 1,[[[0.525, 0.8579, 0.4454], [0.0145, 0.3144, 0.0485]]],[[0, 0, 0]], 1, Loc68782), 
LZer72718 = zero_padding1D_layer(Loc68782, 1, 1, Zer72718), 
LRes82111 = reshape_layer(Zer72718, [3, 3, 1], Res82111), 
LSep36161 = separable_conv2D_layer(Res82111, 2, 1,[[[[[0.7134]]], [[[0.1007]]]],[[[[0.5449, 0.023, 0.9636, 0.5436]]]]],[0, 0, 0, 0], 1, 1, true, Sep36161), 
exec_layers([LLoc68782,LZer72718,LRes82111,LSep36161],["Loc68782","Zer72718","Res82111","Sep36161"],Sep36161,"Sep36161")

Actual (Unparsed): [[[[0.0116593, 0.0004921, 0.0206183, 0.0116315], [0.0261747, 0.0011048, 0.0462874, 0.0261123], [0.0107784, 0.0004550, 0.0190605, 0.0107527]], [[0.0825994, 0.0034865, 0.1460685, 0.0824023], [0.1854326, 0.0078270, 0.3279186, 0.1849902], [0.0763586, 0.0032231, 0.1350325, 0.0761765]], [[0.0000000, 0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000, 0.0000000]]]]

Expected (Unparsed): [[[[0.011659314649977503,0.0004921347714250001,0.020618307206310006,0.011631498336810002],[0.0261747453951708,0.001104825002916,0.0462873640352112,0.0261122987645712],[0.0107784065179003,0.00045495200938099994,0.0190605111408492,0.010752691839109199]],[[0.08259935522635503,0.003486484070850001,0.14606852394222006,0.08240229308322003],[0.18543260541126963,0.007827032344392,0.32791862465461447,0.1849902079309344],[0.0763586416074486,0.0032230661717219996,0.1350324592639704,0.07617646830209039]],[[0.0,0.0,0.0,0.0],[0.0,0.0,0.0,0.0],[0.0,0.0,0.0,0.0]]]]

Actual:   [[[[0.0117, 0.0005, 0.0207, 0.0117], [0.0262, 0.0012, 0.0463, 0.0262], [0.0108, 0.0005, 0.0191, 0.0108]], [[0.0826, 0.0035, 0.1461, 0.0825], [0.1855, 0.0079, 0.328, 0.185], [0.0764, 0.0033, 0.1351, 0.0762]], [[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]]]

Expected: [[[[0.0117, 0.0005, 0.0207, 0.0117], [0.0262, 0.0012, 0.0463, 0.0262], [0.0108, 0.0005, 0.0191, 0.0108]], [[0.0826, 0.0035, 0.1461, 0.0825], [0.1855, 0.0079, 0.328, 0.185], [0.0764, 0.0033, 0.1351, 0.0762]], [[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]]]