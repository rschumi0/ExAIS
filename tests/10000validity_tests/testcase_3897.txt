import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Sep56904 = tf.keras.layers.Input(shape=([1, 1, 2]))
in0Sub7930 = tf.keras.layers.Input(shape=([2]))
in1Sub7930 = tf.keras.layers.Input(shape=([2]))
in0Dot42034 = tf.keras.layers.Input(shape=([3, 3]))
in1Dot42034 = tf.keras.layers.Input(shape=([3, 3]))
in0Con47312 = tf.keras.layers.Input(shape=([4, 6, 2]))

Sep56904 = keras.layers.SeparableConv2D(3, (1, 1),strides=(1, 1), padding='valid', name = 'Sep56904', )(in0Sep56904)
Res64680 = keras.layers.Reshape((1, 1, 3, 1), name = 'Res64680', )(Sep56904)
Zer12488 = keras.layers.ZeroPadding3D(padding=((3, 0), (2, 0), (0, 0)), name = 'Zer12488', )(Res64680)
Sub7930 = keras.layers.Subtract(name = 'Sub7930', )([in0Sub7930,in1Sub7930])
Res78747 = keras.layers.Reshape((2, 1), name = 'Res78747', )(Sub7930)
Res34375 = keras.layers.Reshape((2, 1, 1), name = 'Res34375', )(Res78747)
Res65685 = keras.layers.Reshape((2, 1, 1, 1), name = 'Res65685', )(Res34375)
Zer7664 = keras.layers.ZeroPadding3D(padding=((1, 1), (1, 1), (1, 1)), name = 'Zer7664', )(Res65685)
Min83645 = keras.layers.Minimum(name = 'Min83645', )([Zer12488,Zer7664])
Res30228 = keras.layers.Reshape((4, 3, 3), name = 'Res30228', )(Min83645)
Up_99649 = keras.layers.UpSampling2D(size=(1, 2), name = 'Up_99649', )(Res30228)
Dot42034 = keras.layers.Dot(axes=(1, 1), name = 'Dot42034', )([in0Dot42034,in1Dot42034])
Sof82255 = keras.layers.Softmax(axis=1, name = 'Sof82255', )(Dot42034)
Res23224 = keras.layers.Reshape((3, 3, 1), name = 'Res23224', )(Sof82255)
Cro34695 = keras.layers.Cropping2D(cropping=((2, 0), (0, 0)), name = 'Cro34695', )(Res23224)
Zer18680 = keras.layers.ZeroPadding2D(padding=((3, 0), (3, 0)), name = 'Zer18680', )(Cro34695)
Con47312 = keras.layers.Concatenate(axis=3, name = 'Con47312', )([Zer18680,in0Con47312])
Max19043 = keras.layers.Maximum(name = 'Max19043', )([Up_99649,Con47312])
model = tf.keras.models.Model(inputs=[in0Sep56904,in0Sub7930,in1Sub7930,in0Dot42034,in1Dot42034,in0Con47312], outputs=Max19043)
w = model.get_layer('Sep56904').get_weights() 
w[0] = np.array([[[[0.1572], [0.0338]]]])
w[1] = np.array([[[[0.6093, 0.6274, 0.5257], [0.3482, 0.5156, 0.0014]]]])
w[2] = np.array([0, 0, 0])
model.get_layer('Sep56904').set_weights(w) 
in0Sep56904 = tf.constant([[[[0.4167, 0.0198]]]])
in0Sub7930 = tf.constant([[0.3196, 0.8027]])
in1Sub7930 = tf.constant([[0.3003, 0.8362]])
in0Dot42034 = tf.constant([[[0.196, 0.6241, 0.6062], [0.4096, 0.395, 0.3115], [0.345, 0.6762, 0.7018]]])
in1Dot42034 = tf.constant([[[0.7193, 0.3491, 0.4311], [0.6165, 0.5728, 0.8061], [0.2261, 0.6112, 0.8984]]])
in0Con47312 = tf.constant([[[[0.3545, 0.2966], [0.8659, 0.2961], [0.9814, 0.3674], [0.893, 0.836], [0.088, 0.1595], [0.8134, 0.118]], [[0.1788, 0.4746], [0.5253, 0.8703], [0.1638, 0.8408], [0.3649, 0.9678], [0.4035, 0.2904], [0.4332, 0.3471]], [[0.2271, 0.2438], [0.1919, 0.2524], [0.183, 0.927], [0.252, 0.0624], [0.5814, 0.9377], [0.1533, 0.8388]], [[0.5975, 0.4129], [0.7246, 0.779], [0.319, 0.7506], [0.3028, 0.9559], [0.6395, 0.989], [0.6901, 0.0864]]]])
print (np.array2string(model.predict([in0Sep56904,in0Sub7930,in1Sub7930,in0Dot42034,in1Dot42034,in0Con47312],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Max19043.png')

LSep56904 = separable_conv2D_layer([[[[0.4167, 0.0198]]]], 1, 1,[[[[[0.1572], [0.0338]]]],[[[[0.6093, 0.6274, 0.5257], [0.3482, 0.5156, 0.0014]]]]],[0, 0, 0], 1, 1, false, Sep56904), 
LRes64680 = reshape_layer(Sep56904, [1, 1, 3, 1], Res64680), 
LZer12488 = zero_padding3D_layer(Res64680, 3, 0, 2, 0, 0, 0, Zer12488), 
LSub7930 = subtract_layer([[0.3196, 0.8027]], [[0.3003, 0.8362]], Sub7930), 
LRes78747 = reshape_layer(Sub7930, [2, 1], Res78747), 
LRes34375 = reshape_layer(Res78747, [2, 1, 1], Res34375), 
LRes65685 = reshape_layer(Res34375, [2, 1, 1, 1], Res65685), 
LZer7664 = zero_padding3D_layer(Res65685, 1, 1, 1, 1, 1, 1, Zer7664), 
LMin83645 = minimum_layer([Zer12488,Zer7664], Min83645), 
LRes30228 = reshape_layer(Min83645, [4, 3, 3], Res30228), 
LUp_99649 = up_sampling2D_layer(Res30228, 1, 2, Up_99649), 
LDot42034 = dot_layer([[[0.196, 0.6241, 0.6062], [0.4096, 0.395, 0.3115], [0.345, 0.6762, 0.7018]]], [[[0.7193, 0.3491, 0.4311], [0.6165, 0.5728, 0.8061], [0.2261, 0.6112, 0.8984]]], 1, 1, Dot42034), 
LSof82255 = softmax_layer(Dot42034, 1, Sof82255), 
LRes23224 = reshape_layer(Sof82255, [3, 3, 1], Res23224), 
LCro34695 = cropping2D_layer(Res23224, 2, 0, 0, 0, Cro34695), 
LZer18680 = zero_padding2D_layer(Cro34695, 3, 0, 3, 0, Zer18680), 
LCon47312 = concatenate_layer([Zer18680,[[[[0.3545, 0.2966], [0.8659, 0.2961], [0.9814, 0.3674], [0.893, 0.836], [0.088, 0.1595], [0.8134, 0.118]], [[0.1788, 0.4746], [0.5253, 0.8703], [0.1638, 0.8408], [0.3649, 0.9678], [0.4035, 0.2904], [0.4332, 0.3471]], [[0.2271, 0.2438], [0.1919, 0.2524], [0.183, 0.927], [0.252, 0.0624], [0.5814, 0.9377], [0.1533, 0.8388]], [[0.5975, 0.4129], [0.7246, 0.779], [0.319, 0.7506], [0.3028, 0.9559], [0.6395, 0.989], [0.6901, 0.0864]]]]], 3, Con47312), 
LMax19043 = maximum_layer([Up_99649,Con47312], Max19043), 
exec_layers([LSep56904,LRes64680,LZer12488,LSub7930,LRes78747,LRes34375,LRes65685,LZer7664,LMin83645,LRes30228,LUp_99649,LDot42034,LSof82255,LRes23224,LCro34695,LZer18680,LCon47312,LMax19043],["Sep56904","Res64680","Zer12488","Sub7930","Res78747","Res34375","Res65685","Zer7664","Min83645","Res30228","Up_99649","Dot42034","Sof82255","Res23224","Cro34695","Zer18680","Con47312","Max19043"],Max19043,"Max19043")

Actual (Unparsed): [[[[0.0000000, 0.3545000, 0.2966000], [0.0000000, 0.8659000, 0.2961000], [0.0000000, 0.9814000, 0.3674000], [0.0000000, 0.8930000, 0.8360000], [0.0000000, 0.0880000, 0.1595000], [0.0000000, 0.8134000, 0.1180000]], [[0.0000000, 0.1788000, 0.4746000], [0.0000000, 0.5253000, 0.8703000], [0.0000000, 0.1638000, 0.8408000], [0.0000000, 0.3649000, 0.9678000], [0.0000000, 0.4035000, 0.2904000], [0.0000000, 0.4332000, 0.3471000]], [[0.0000000, 0.2271000, 0.2438000], [0.0000000, 0.1919000, 0.2524000], [0.0000000, 0.1830000, 0.9270000], [0.0000000, 0.2520000, 0.0624000], [0.0000000, 0.5814000, 0.9377000], [0.0000000, 0.1533000, 0.8388000]], [[0.0000000, 0.5975000, 0.4129000], [0.0000000, 0.7246000, 0.7790000], [0.0000000, 0.3190000, 0.7506000], [0.3584332, 0.3028000, 0.9559000], [0.3601995, 0.6395000, 0.9890000], [0.3687909, 0.6901000, 0.0864000]]]]

Expected (Unparsed): [[[[0,0.3545,0.2966],[0,0.8659,0.2961],[0,0.9814,0.3674],[0,0.893,0.836],[0,0.088,0.1595],[0,0.8134,0.118]],[[0,0.1788,0.4746],[0,0.5253,0.8703],[0,0.1638,0.8408],[0,0.3649,0.9678],[0,0.4035,0.2904],[0,0.4332,0.3471]],[[0,0.2271,0.2438],[0,0.1919,0.2524],[0,0.183,0.927],[0,0.252,0.0624],[0,0.5814,0.9377],[0,0.1533,0.8388]],[[0,0.5975,0.4129],[0,0.7246,0.779],[0,0.319,0.7506],[0.35843322778424974,0.3028,0.9559],[0.3601994723263623,0.6395,0.989],[0.368790891677948,0.6901,0.0864]]]]

Actual:   [[[[0, 0.3545, 0.2966], [0, 0.8659, 0.2961], [0, 0.9814, 0.3674], [0, 0.893, 0.836], [0, 0.088, 0.1595], [0, 0.8134, 0.118]], [[0, 0.1788, 0.4746], [0, 0.5253, 0.8703], [0, 0.1638, 0.8408], [0, 0.3649, 0.9678], [0, 0.4035, 0.2904], [0, 0.4332, 0.3471]], [[0, 0.2271, 0.2438], [0, 0.1919, 0.2524], [0, 0.183, 0.927], [0, 0.252, 0.0624], [0, 0.5814, 0.9377], [0, 0.1533, 0.8388]], [[0, 0.5975, 0.4129], [0, 0.7246, 0.779], [0, 0.319, 0.7506], [0.3585, 0.3028, 0.9559], [0.3602, 0.6395, 0.989], [0.3688, 0.6901, 0.0864]]]]

Expected: [[[[0, 0.3545, 0.2966], [0, 0.8659, 0.2961], [0, 0.9814, 0.3674], [0, 0.893, 0.836], [0, 0.088, 0.1595], [0, 0.8134, 0.118]], [[0, 0.1788, 0.4746], [0, 0.5253, 0.8703], [0, 0.1638, 0.8408], [0, 0.3649, 0.9678], [0, 0.4035, 0.2904], [0, 0.4332, 0.3471]], [[0, 0.2271, 0.2438], [0, 0.1919, 0.2524], [0, 0.183, 0.927], [0, 0.252, 0.0624], [0, 0.5814, 0.9377], [0, 0.1533, 0.8388]], [[0, 0.5975, 0.4129], [0, 0.7246, 0.779], [0, 0.319, 0.7506], [0.3585, 0.3028, 0.9559], [0.3602, 0.6395, 0.989], [0.3688, 0.6901, 0.0864]]]]