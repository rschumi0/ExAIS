import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Min53898 = tf.keras.layers.Input(shape=([2, 2, 1, 1]))
in1Min53898 = tf.keras.layers.Input(shape=([2, 2, 1, 1]))
in0Con84053 = tf.keras.layers.Input(shape=([8, 3, 3]))
in0Up_59984 = tf.keras.layers.Input(shape=([4, 3, 4]))

Min53898 = keras.layers.Minimum(name = 'Min53898', )([in0Min53898,in1Min53898])
Thr52202 = keras.layers.ThresholdedReLU(theta=5.695790313996083, name = 'Thr52202', )(Min53898)
Res77934 = keras.layers.Reshape((2, 2, 1), name = 'Res77934', )(Thr52202)
Zer44716 = keras.layers.ZeroPadding2D(padding=((6, 0), (1, 0)), name = 'Zer44716', )(Res77934)
Con84053 = keras.layers.Concatenate(axis=3, name = 'Con84053', )([Zer44716,in0Con84053])
Up_59984 = keras.layers.UpSampling2D(size=(2, 1), name = 'Up_59984', )(in0Up_59984)
Sof74974 = keras.layers.Softmax(axis=1, name = 'Sof74974', )(Up_59984)
Sub601 = keras.layers.Subtract(name = 'Sub601', )([Con84053,Sof74974])
Res10845 = keras.layers.Reshape((8, 3, 4, 1), name = 'Res10845', )(Sub601)
Cro11058 = keras.layers.Cropping3D(cropping=((3, 2), (1, 1), (2, 0)), name = 'Cro11058', )(Res10845)
model = tf.keras.models.Model(inputs=[in0Min53898,in1Min53898,in0Con84053,in0Up_59984], outputs=Cro11058)
in0Min53898 = tf.constant([[[[[0.2043]], [[0.4651]]], [[[0.0379]], [[0.5796]]]]])
in1Min53898 = tf.constant([[[[[0.4869]], [[0.3376]]], [[[0.8546]], [[0.0669]]]]])
in0Con84053 = tf.constant([[[[0.5823, 0.8847, 0.5677], [0.7582, 0.8509, 0.8489], [0.7477, 0.7184, 0.8167]], [[0.5788, 0.5628, 0.9035], [0.2705, 0.1843, 0.6643], [0.9525, 0.8064, 0.3542]], [[0.8074, 0.5743, 0.968], [0.2582, 0.3396, 0.0251], [0.2001, 0.8813, 0.9726]], [[0.2142, 0.8671, 0.4255], [0.2904, 0.6735, 0.463], [0.6586, 0.8935, 0.581]], [[0.4077, 0.9954, 0.4223], [0.1317, 0.5021, 0.6545], [0.9614, 0.8135, 0.1984]], [[0.4514, 0.4851, 0.5643], [0.3277, 0.6583, 0.0749], [0.362, 0.8264, 0.8919]], [[0.6098, 0.5294, 0.3038], [0.1733, 0.512, 0.926], [0.9981, 0.1459, 0.9185]], [[0.2396, 0.7876, 0.9334], [0.3363, 0.7939, 0.4393], [0.274, 0.4439, 0.6419]]]])
in0Up_59984 = tf.constant([[[[1.5582, 1.5942, 1.3536, 1.1784], [1.6742, 1.3031, 1.3708, 1.0485], [1.7704, 1.7498, 1.4227, 1.8945]], [[1.4444, 1.8015, 1.218, 1.717], [1.7696, 1.0508, 1.3168, 1.6247], [1.8116, 1.9073, 1.3396, 1.245]], [[1.6992, 1.3657, 1.5681, 1.8085], [1.2429, 1.1289, 1.8685, 1.5362], [1.3841, 1.1363, 1.6137, 1.8969]], [[1.2108, 1.3123, 1.688, 1.152], [1.8812, 1.5305, 1.7124, 1.3608], [1.5589, 1.3695, 1.3494, 1.6785]]]])
print (np.array2string(model.predict([in0Min53898,in1Min53898,in0Con84053,in0Up_59984],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Cro11058.png')

LMin53898 = minimum_layer([[[[[[0.2043]], [[0.4651]]], [[[0.0379]], [[0.5796]]]]], [[[[[0.4869]], [[0.3376]]], [[[0.8546]], [[0.0669]]]]]], Min53898), 
LThr52202 = thresholded_relu_layer(Min53898, 5.695790313996083, Thr52202), 
LRes77934 = reshape_layer(Thr52202, [2, 2, 1], Res77934), 
LZer44716 = zero_padding2D_layer(Res77934, 6, 0, 1, 0, Zer44716), 
LCon84053 = concatenate_layer([Zer44716,[[[[0.5823, 0.8847, 0.5677], [0.7582, 0.8509, 0.8489], [0.7477, 0.7184, 0.8167]], [[0.5788, 0.5628, 0.9035], [0.2705, 0.1843, 0.6643], [0.9525, 0.8064, 0.3542]], [[0.8074, 0.5743, 0.968], [0.2582, 0.3396, 0.0251], [0.2001, 0.8813, 0.9726]], [[0.2142, 0.8671, 0.4255], [0.2904, 0.6735, 0.463], [0.6586, 0.8935, 0.581]], [[0.4077, 0.9954, 0.4223], [0.1317, 0.5021, 0.6545], [0.9614, 0.8135, 0.1984]], [[0.4514, 0.4851, 0.5643], [0.3277, 0.6583, 0.0749], [0.362, 0.8264, 0.8919]], [[0.6098, 0.5294, 0.3038], [0.1733, 0.512, 0.926], [0.9981, 0.1459, 0.9185]], [[0.2396, 0.7876, 0.9334], [0.3363, 0.7939, 0.4393], [0.274, 0.4439, 0.6419]]]]], 3, Con84053), 
LUp_59984 = up_sampling2D_layer([[[[1.5582, 1.5942, 1.3536, 1.1784], [1.6742, 1.3031, 1.3708, 1.0485], [1.7704, 1.7498, 1.4227, 1.8945]], [[1.4444, 1.8015, 1.218, 1.717], [1.7696, 1.0508, 1.3168, 1.6247], [1.8116, 1.9073, 1.3396, 1.245]], [[1.6992, 1.3657, 1.5681, 1.8085], [1.2429, 1.1289, 1.8685, 1.5362], [1.3841, 1.1363, 1.6137, 1.8969]], [[1.2108, 1.3123, 1.688, 1.152], [1.8812, 1.5305, 1.7124, 1.3608], [1.5589, 1.3695, 1.3494, 1.6785]]]], 2, 1, Up_59984), 
LSof74974 = softmax_layer(Up_59984, 1, Sof74974), 
LSub601 = subtract_layer(Con84053,Sof74974, Sub601), 
LRes10845 = reshape_layer(Sub601, [8, 3, 4, 1], Res10845), 
LCro11058 = cropping3D_layer(Res10845, 3, 2, 1, 1, 2, 0, Cro11058), 
exec_layers([LMin53898,LThr52202,LRes77934,LZer44716,LCon84053,LUp_59984,LSof74974,LSub601,LRes10845,LCro11058],["Min53898","Thr52202","Res77934","Zer44716","Con84053","Up_59984","Sof74974","Sub601","Res10845","Cro11058"],Cro11058,"Cro11058")

Actual (Unparsed): [[[[[0.5787485], [0.3089350]]], [[[0.3375923], [0.5134838]]], [[[0.4937922], [-0.0661162]]]]]

Expected (Unparsed): [[[[[0.5787485077246244],[0.3089350017793886]]],[[[0.33759226449493807],[0.5134838278731384]]],[[[0.49379226449493807],[-0.06611617212686163]]]]]

Actual:   [[[[[0.5788], [0.309]]], [[[0.3376], [0.5135]]], [[[0.4938], [-0.0661]]]]]

Expected: [[[[[0.5788], [0.309]]], [[[0.3376], [0.5135]]], [[[0.4938], [-0.0661]]]]]