import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Sub14435 = tf.keras.layers.Input(shape=([2, 2, 2, 2]))
in1Sub14435 = tf.keras.layers.Input(shape=([2, 2, 2, 2]))
in0Max33677 = tf.keras.layers.Input(shape=([1, 1, 1, 1]))
in1Max33677 = tf.keras.layers.Input(shape=([1, 1, 1, 1]))
in0Min58236 = tf.keras.layers.Input(shape=([2, 2]))
in1Min58236 = tf.keras.layers.Input(shape=([2, 2]))
in0Con19972 = tf.keras.layers.Input(shape=([4, 4, 3]))

Sub14435 = keras.layers.Subtract(name = 'Sub14435', )([in0Sub14435,in1Sub14435])
Res46897 = keras.layers.Reshape((2, 2, 4), name = 'Res46897', )(Sub14435)
Zer91504 = keras.layers.ZeroPadding2D(padding=((1, 1), (1, 1)), name = 'Zer91504', )(Res46897)
Max33677 = keras.layers.Maximum(name = 'Max33677', )([in0Max33677,in1Max33677])
Res65249 = keras.layers.Reshape((1, 1, 1), name = 'Res65249', )(Max33677)
Zer41225 = keras.layers.ZeroPadding2D(padding=((3, 0), (3, 0)), name = 'Zer41225', )(Res65249)
Min58236 = keras.layers.Minimum(name = 'Min58236', )([in0Min58236,in1Min58236])
Res25893 = keras.layers.Reshape((2, 2, 1), name = 'Res25893', )(Min58236)
Zer62166 = keras.layers.ZeroPadding2D(padding=((1, 1), (1, 1)), name = 'Zer62166', )(Res25893)
Sub67284 = keras.layers.Subtract(name = 'Sub67284', )([Zer41225,Zer62166])
Con19972 = keras.layers.Concatenate(axis=3, name = 'Con19972', )([Sub67284,in0Con19972])
Mul19758 = keras.layers.Multiply(name = 'Mul19758', )([Zer91504,Con19972])
Res90783 = keras.layers.Reshape((4, 16), name = 'Res90783', )(Mul19758)
PRe60693 = keras.layers.PReLU(name = 'PRe60693', )(Res90783)
model = tf.keras.models.Model(inputs=[in0Sub14435,in1Sub14435,in0Max33677,in1Max33677,in0Min58236,in1Min58236,in0Con19972], outputs=PRe60693)
w = model.get_layer('PRe60693').get_weights() 
w[0] = np.array([[0.9314, 0.2907, 0.6755, 0.4227, 0.8327, 0.0669, 0.7403, 0.6506, 0.302, 0.0439, 0.8618, 0.7866, 0.6935, 0.1485, 0.3776, 0.206], [0.9018, 0.5343, 0.2337, 0.2424, 0.59, 0.9024, 0.2333, 0.8848, 0.4833, 0.8298, 0.6901, 0.5741, 0.2354, 0.0859, 0.5439, 0.5977], [0.5693, 0.6172, 0.0107, 0.2329, 0.4944, 0.7365, 0.2708, 0.1019, 0.4024, 0.0668, 0.5298, 0.1625, 0.7609, 0.9575, 0.0255, 0.3872], [0.9364, 0.4178, 0.2015, 0.4538, 0.4041, 0.0908, 0.3183, 0.7134, 0.2335, 0.432, 0.231, 0.2853, 0.27, 0.0488, 0.9289, 0.3807]])
model.get_layer('PRe60693').set_weights(w) 
in0Sub14435 = tf.constant([[[[[0.965, 0.5504], [0.1416, 0.6336]], [[0.8147, 0.7144], [0.0319, 0.6521]]], [[[0.6385, 0.0113], [0.9718, 0.8387]], [[0.8112, 0.6703], [0.4526, 0.0534]]]]])
in1Sub14435 = tf.constant([[[[[0.8634, 0.7307], [0.3705, 0.2413]], [[0.3697, 0.6412], [0.4963, 0.2727]]], [[[0.3595, 0.5029], [0.8368, 0.4637]], [[0.5154, 0.4473], [0.8179, 0.4985]]]]])
in0Max33677 = tf.constant([[[[[0.7922]]]]])
in1Max33677 = tf.constant([[[[[0.2053]]]]])
in0Min58236 = tf.constant([[[0.2926, 0.8733], [0.1215, 0.3985]]])
in1Min58236 = tf.constant([[[0.6117, 0.7793], [0.5474, 0.4623]]])
in0Con19972 = tf.constant([[[[0.3051, 0.1686, 0.8657], [0.7899, 0.8094, 0.9262], [0.4566, 0.9695, 0.511], [0.5903, 0.9442, 0.9046]], [[0.2501, 0.5238, 0.6718], [0.1933, 0.8537, 0.3603], [0.923, 0.8877, 0.7064], [0.2041, 0.9044, 0.3453]], [[0.9302, 0.7197, 0.4454], [0.5624, 0.6482, 0.2078], [0.1748, 0.7131, 0.2214], [0.4326, 0.6679, 0.7383]], [[0.6644, 0.7914, 0.2071], [0.611, 0.6679, 0.3982], [0.349, 0.3356, 0.7878], [0.7907, 0.4485, 0.8298]]]])
print (np.array2string(model.predict([in0Sub14435,in1Sub14435,in0Max33677,in1Max33677,in0Min58236,in1Min58236,in0Con19972],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='PRe60693.png')

LSub14435 = subtract_layer([[[[[0.965, 0.5504], [0.1416, 0.6336]], [[0.8147, 0.7144], [0.0319, 0.6521]]], [[[0.6385, 0.0113], [0.9718, 0.8387]], [[0.8112, 0.6703], [0.4526, 0.0534]]]]], [[[[[0.8634, 0.7307], [0.3705, 0.2413]], [[0.3697, 0.6412], [0.4963, 0.2727]]], [[[0.3595, 0.5029], [0.8368, 0.4637]], [[0.5154, 0.4473], [0.8179, 0.4985]]]]], Sub14435), 
LRes46897 = reshape_layer(Sub14435, [2, 2, 4], Res46897), 
LZer91504 = zero_padding2D_layer(Res46897, 1, 1, 1, 1, Zer91504), 
LMax33677 = maximum_layer([[[[[[0.7922]]]]], [[[[[0.2053]]]]]], Max33677), 
LRes65249 = reshape_layer(Max33677, [1, 1, 1], Res65249), 
LZer41225 = zero_padding2D_layer(Res65249, 3, 0, 3, 0, Zer41225), 
LMin58236 = minimum_layer([[[[0.2926, 0.8733], [0.1215, 0.3985]]], [[[0.6117, 0.7793], [0.5474, 0.4623]]]], Min58236), 
LRes25893 = reshape_layer(Min58236, [2, 2, 1], Res25893), 
LZer62166 = zero_padding2D_layer(Res25893, 1, 1, 1, 1, Zer62166), 
LSub67284 = subtract_layer(Zer41225,Zer62166, Sub67284), 
LCon19972 = concatenate_layer([Sub67284,[[[[0.3051, 0.1686, 0.8657], [0.7899, 0.8094, 0.9262], [0.4566, 0.9695, 0.511], [0.5903, 0.9442, 0.9046]], [[0.2501, 0.5238, 0.6718], [0.1933, 0.8537, 0.3603], [0.923, 0.8877, 0.7064], [0.2041, 0.9044, 0.3453]], [[0.9302, 0.7197, 0.4454], [0.5624, 0.6482, 0.2078], [0.1748, 0.7131, 0.2214], [0.4326, 0.6679, 0.7383]], [[0.6644, 0.7914, 0.2071], [0.611, 0.6679, 0.3982], [0.349, 0.3356, 0.7878], [0.7907, 0.4485, 0.8298]]]]], 3, Con19972), 
LMul19758 = multiply_layer([Zer91504,Con19972], Mul19758), 
LRes90783 = reshape_layer(Mul19758, [4, 16], Res90783), 
LPRe60693 = prelu_layer(Res90783, [[0.9314, 0.2907, 0.6755, 0.4227, 0.8327, 0.0669, 0.7403, 0.6506, 0.302, 0.0439, 0.8618, 0.7866, 0.6935, 0.1485, 0.3776, 0.206], [0.9018, 0.5343, 0.2337, 0.2424, 0.59, 0.9024, 0.2333, 0.8848, 0.4833, 0.8298, 0.6901, 0.5741, 0.2354, 0.0859, 0.5439, 0.5977], [0.5693, 0.6172, 0.0107, 0.2329, 0.4944, 0.7365, 0.2708, 0.1019, 0.4024, 0.0668, 0.5298, 0.1625, 0.7609, 0.9575, 0.0255, 0.3872], [0.9364, 0.4178, 0.2015, 0.4538, 0.4041, 0.0908, 0.3183, 0.7134, 0.2335, 0.432, 0.231, 0.2853, 0.27, 0.0488, 0.9289, 0.3807]], PRe60693), 
exec_layers([LSub14435,LRes46897,LZer91504,LMax33677,LRes65249,LZer41225,LMin58236,LRes25893,LZer62166,LSub67284,LCon19972,LMul19758,LRes90783,LPRe60693],["Sub14435","Res46897","Zer91504","Max33677","Res65249","Zer41225","Min58236","Res25893","Zer62166","Sub67284","Con19972","Mul19758","Res90783","PRe60693"],PRe60693,"PRe60693")

Actual (Unparsed): [[[0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000, 0.0000000, -0.0175396, -0.0314504, -0.0455896, 0.1413457, -0.1676029, 0.0675636, -0.2844923, 0.2680082, 0.0000000, 0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000, 0.0000000, -0.0167594, -0.2036245, 0.0875070, 0.0779250, -0.0474334, 0.0389804, -0.1380105, -0.0160136, 0.0000000, 0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000]]]

Expected (Unparsed): [[[0,0.0,0.0,0.0,0,0.0,0.0,0.0,0,0.0,0.0,0.0,0,0.0,0.0,0.0],[0,0.0,0.0,0.0,-0.017539614400000004,-0.031450435776000006,-0.045589603268999995,0.14134569000000002,-0.16760288205,0.06756360000000004,-0.28449226198800004,0.26800816,0,0.0,0.0,0.0],[0,0.0,0.0,0.0,-0.0167594184,-0.20362445616000002,0.087507,0.07792500000000001,-0.04743342312000001,0.038980400000000005,-0.138010478814,-0.01601358525,0,0.0,0.0,0.0],[0,0.0,0.0,0.0,0,0.0,0.0,0.0,0,0.0,0.0,0.0,0.0,0.0,0.0,0.0]]]

Actual:   [[[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, -0.0175, -0.0314, -0.0455, 0.1414, -0.1676, 0.0676, -0.2844, 0.2681, 0, 0, 0, 0], [0, 0, 0, 0, -0.0167, -0.2036, 0.0876, 0.078, -0.0474, 0.039, -0.138, -0.016, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]]]

Expected: [[[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, -0.0175, -0.0314, -0.0455, 0.1414, -0.1676, 0.0676, -0.2844, 0.2681, 0, 0, 0, 0], [0, 0, 0, 0, -0.0167, -0.2036, 0.0876, 0.078, -0.0474, 0.039, -0.138, -0.016, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]]]