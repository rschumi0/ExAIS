import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Min27033 = tf.keras.layers.Input(shape=([2, 1]))
in1Min27033 = tf.keras.layers.Input(shape=([2, 1]))

Min27033 = keras.layers.Minimum(name = 'Min27033', )([in0Min27033,in1Min27033])
Sim82816 = keras.layers.SimpleRNN(3,name = 'Sim82816', )(Min27033)
Res38677 = keras.layers.Reshape((3, 1), name = 'Res38677', )(Sim82816)
Res67892 = keras.layers.Reshape((3, 1, 1), name = 'Res67892', )(Res38677)
Con75550 = keras.layers.Conv2DTranspose(3, (1, 1),strides=(1, 1), padding='valid', name = 'Con75550', )(Res67892)
model = tf.keras.models.Model(inputs=[in0Min27033,in1Min27033], outputs=Con75550)
w = model.get_layer('Sim82816').get_weights() 
w[0] = np.array([[5, 6, 10]])
w[1] = np.array([[3, 1, 5], [8, 3, 4], [7, 9, 8]])
w[2] = np.array([1, 1, 4])
model.get_layer('Sim82816').set_weights(w) 
w = model.get_layer('Con75550').get_weights() 
w[0] = np.array([[[[0.72], [0.4817], [0.1965]]]])
w[1] = np.array([0, 0, 0])
model.get_layer('Con75550').set_weights(w) 
in0Min27033 = tf.constant([[[0.5094], [0.2297]]])
in1Min27033 = tf.constant([[[0.3344], [0.3791]]])
print (np.array2string(model.predict([in0Min27033,in1Min27033],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Con75550.png')

LMin27033 = minimum_layer([[[[0.5094], [0.2297]]], [[[0.3344], [0.3791]]]], Min27033), 
LSim82816 = simple_rnn_layer(Min27033,[[5, 6, 10]],[[3, 1, 5], [8, 3, 4], [7, 9, 8]],[1, 1, 4], Sim82816), 
LRes38677 = reshape_layer(Sim82816, [3, 1], Res38677), 
LRes67892 = reshape_layer(Res38677, [3, 1, 1], Res67892), 
LCon75550 = conv2D_transpose_layer(Res67892, 1, 1,[[[[0.72], [0.4817], [0.1965]]]],[0, 0, 0], 1, 1, false, Con75550), 
exec_layers([LMin27033,LSim82816,LRes38677,LRes67892,LCon75550],["Min27033","Sim82816","Res38677","Res67892","Con75550"],Con75550,"Con75550")

Actual (Unparsed): [[[[0.7200000, 0.4817000, 0.1965000]], [[0.7200000, 0.4817000, 0.1965000]], [[0.7200000, 0.4817000, 0.1965000]]]]

Expected (Unparsed): [[[[0.72,0.4817,0.1965]],[[0.7199999999999336,0.4816999999999556,0.1964999999999819]],[[0.72,0.4817,0.1965]]]]

Actual:   [[[[0.72, 0.4817, 0.1965]], [[0.72, 0.4817, 0.1965]], [[0.72, 0.4817, 0.1965]]]]

Expected: [[[[0.72, 0.4817, 0.1965]], [[0.72, 0.4817, 0.1965]], [[0.72, 0.4817, 0.1965]]]]