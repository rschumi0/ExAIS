import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Add27009 = tf.keras.layers.Input(shape=([1, 2]))
in1Add27009 = tf.keras.layers.Input(shape=([1, 2]))
in0Den37042 = tf.keras.layers.Input(shape=([2, 2, 3]))
in0Con78155 = tf.keras.layers.Input(shape=([4, 2]))
in0Max12051 = tf.keras.layers.Input(shape=([1, 2]))
in0Con82663 = tf.keras.layers.Input(shape=([4, 2]))
in0Max69928 = tf.keras.layers.Input(shape=([1, 2, 2, 1]))
in1Max69928 = tf.keras.layers.Input(shape=([1, 2, 2, 1]))
in0Sof28043 = tf.keras.layers.Input(shape=([1, 2, 2, 1]))
in0Min82794 = tf.keras.layers.Input(shape=([1, 1]))
in1Min82794 = tf.keras.layers.Input(shape=([1, 1]))
in0Con23111 = tf.keras.layers.Input(shape=([4, 3]))
in0Mul80981 = tf.keras.layers.Input(shape=([2, 2, 1, 1]))
in1Mul80981 = tf.keras.layers.Input(shape=([2, 2, 1, 1]))
in0Con52953 = tf.keras.layers.Input(shape=([2, 2, 1]))
in0Max56002 = tf.keras.layers.Input(shape=([2, 2, 2]))
in1Max56002 = tf.keras.layers.Input(shape=([2, 2, 2]))

Add27009 = keras.layers.Add(name = 'Add27009', )([in0Add27009,in1Add27009])
Den37042 = keras.layers.Dense(1,name = 'Den37042', )(in0Den37042)
Res83594 = keras.layers.Reshape((2, 2), name = 'Res83594', )(Den37042)
Dot60355 = keras.layers.Dot(axes=(2, 2), name = 'Dot60355', )([Add27009,Res83594])
Zer80931 = keras.layers.ZeroPadding1D(padding=((3, 0)), name = 'Zer80931', )(Dot60355)
Con78155 = keras.layers.Concatenate(axis=2, name = 'Con78155', )([Zer80931,in0Con78155])
Max12051 = keras.layers.MaxPool1D(pool_size=(1), name = 'Max12051', )(in0Max12051)
Zer12498 = keras.layers.ZeroPadding1D(padding=((3, 0)), name = 'Zer12498', )(Max12051)
Con82663 = keras.layers.Concatenate(axis=2, name = 'Con82663', )([Zer12498,in0Con82663])
Max69928 = keras.layers.Maximum(name = 'Max69928', )([in0Max69928,in1Max69928])
Res84214 = keras.layers.Reshape((1, 2, 2), name = 'Res84214', )(Max69928)
Res67507 = keras.layers.Reshape((1, 4), name = 'Res67507', )(Res84214)
Sof28043 = keras.layers.Softmax(axis=1, name = 'Sof28043', input_shape=(1, 2, 2, 1))(in0Sof28043)
Res72085 = keras.layers.Reshape((1, 2, 2), name = 'Res72085', )(Sof28043)
Res33940 = keras.layers.Reshape((1, 4), name = 'Res33940', )(Res72085)
Dot36481 = keras.layers.Dot(axes=(1, 1), name = 'Dot36481', )([Res67507,Res33940])
Min82794 = keras.layers.Minimum(name = 'Min82794', )([in0Min82794,in1Min82794])
Zer3587 = keras.layers.ZeroPadding1D(padding=((3, 0)), name = 'Zer3587', )(Min82794)
Con23111 = keras.layers.Concatenate(axis=2, name = 'Con23111', )([Zer3587,in0Con23111])
Mul23968 = keras.layers.Multiply(name = 'Mul23968', )([Dot36481,Con23111])
Min91147 = keras.layers.Minimum(name = 'Min91147', )([Con82663,Mul23968])
Mul80981 = keras.layers.Multiply(name = 'Mul80981', )([in0Mul80981,in1Mul80981])
Res95561 = keras.layers.Reshape((2, 2, 1), name = 'Res95561', )(Mul80981)
Res4251 = keras.layers.Reshape((2, 2), name = 'Res4251', )(Res95561)
Sim97176 = keras.layers.SimpleRNN(1,name = 'Sim97176', )(Res4251)
Res42999 = keras.layers.Reshape((1, 1), name = 'Res42999', )(Sim97176)
Res7400 = keras.layers.Reshape((1, 1, 1), name = 'Res7400', )(Res42999)
Zer11795 = keras.layers.ZeroPadding2D(padding=((1, 0), (1, 0)), name = 'Zer11795', )(Res7400)
Con52953 = keras.layers.Concatenate(axis=3, name = 'Con52953', )([Zer11795,in0Con52953])
Max56002 = keras.layers.Maximum(name = 'Max56002', )([in0Max56002,in1Max56002])
Add7758 = keras.layers.Add(name = 'Add7758', )([Con52953,Max56002])
Res55181 = keras.layers.Reshape((2, 4), name = 'Res55181', )(Add7758)
Per82513 = keras.layers.Permute((1,2), name = 'Per82513',)(Res55181)
Zer19738 = keras.layers.ZeroPadding1D(padding=((2, 0)), name = 'Zer19738', )(Per82513)
Ave20223 = keras.layers.Average(name = 'Ave20223', )([Min91147,Zer19738])
Ave26499 = keras.layers.Average(name = 'Ave26499', )([Con78155,Ave20223])
model = tf.keras.models.Model(inputs=[in0Add27009,in1Add27009,in0Den37042,in0Con78155,in0Max12051,in0Con82663,in0Max69928,in1Max69928,in0Sof28043,in0Min82794,in1Min82794,in0Con23111,in0Mul80981,in1Mul80981,in0Con52953,in0Max56002,in1Max56002], outputs=Ave26499)
w = model.get_layer('Den37042').get_weights() 
w[0] = np.array([[0.416], [0.4064], [0.5518]])
w[1] = np.array([0.0614])
model.get_layer('Den37042').set_weights(w) 
w = model.get_layer('Sim97176').get_weights() 
w[0] = np.array([[6], [6]])
w[1] = np.array([[5]])
w[2] = np.array([4])
model.get_layer('Sim97176').set_weights(w) 
in0Add27009 = tf.constant([[[0.7413, 0.921]]])
in1Add27009 = tf.constant([[[0.461, 0.8999]]])
in0Den37042 = tf.constant([[[[0.4493, 0.117, 0.6892], [0.0355, 0.4512, 0.0341]], [[0.5908, 0.6482, 0.9552], [0.3196, 0.0615, 0.4381]]]])
in0Con78155 = tf.constant([[[0.5063, 0.6553], [0.1392, 0.8653], [0.9151, 0.598], [0.6065, 0.5584]]])
in0Max12051 = tf.constant([[[1.3802, 1.2095]]])
in0Con82663 = tf.constant([[[0.3131, 0.1179], [0.5437, 0.0068], [0.1018, 0.5568], [0.1705, 0.1068]]])
in0Max69928 = tf.constant([[[[[0.0095], [0.396]], [[0.2597], [0.6054]]]]])
in1Max69928 = tf.constant([[[[[0.2345], [0.651]], [[0.3099], [0.5623]]]]])
in0Sof28043 = tf.constant([[[[[0.9272], [0.3653]], [[0.1545], [0.4186]]]]])
in0Min82794 = tf.constant([[[0.3955]]])
in1Min82794 = tf.constant([[[0.3093]]])
in0Con23111 = tf.constant([[[0.9127, 0.3523, 0.9307], [0.2294, 0.2009, 0.3294], [0.2915, 0.6209, 0.51], [0.3941, 0.5632, 0.5254]]])
in0Mul80981 = tf.constant([[[[[0.6516]], [[0.389]]], [[[0.1592]], [[0.542]]]]])
in1Mul80981 = tf.constant([[[[[0.638]], [[0.6889]]], [[[0.9976]], [[0.5717]]]]])
in0Con52953 = tf.constant([[[[0.6771], [0.1432]], [[0.8471], [0.8708]]]])
in0Max56002 = tf.constant([[[[0.1711, 0.1629], [0.8826, 0.4804]], [[0.0301, 0.9474], [0.9864, 0.7555]]]])
in1Max56002 = tf.constant([[[[0.3185, 0.9162], [0.1116, 0.993]], [[0.4992, 0.5272], [0.9601, 0.2108]]]])
print (np.array2string(model.predict([in0Add27009,in1Add27009,in0Den37042,in0Con78155,in0Max12051,in0Con82663,in0Max69928,in1Max69928,in0Sof28043,in0Min82794,in1Min82794,in0Con23111,in0Mul80981,in1Mul80981,in0Con52953,in0Max56002,in1Max56002],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Ave26499.png')

LAdd27009 = add_layer([[[[0.7413, 0.921]]], [[[0.461, 0.8999]]]], Add27009), 
LDen37042 = dense_layer([[[[0.4493, 0.117, 0.6892], [0.0355, 0.4512, 0.0341]], [[0.5908, 0.6482, 0.9552], [0.3196, 0.0615, 0.4381]]]], [[0.416], [0.4064], [0.5518]],[0.0614], Den37042), 
LRes83594 = reshape_layer(Den37042, [2, 2], Res83594), 
LDot60355 = dot_layer(Add27009,Res83594, 2, 2, Dot60355), 
LZer80931 = zero_padding1D_layer(Dot60355, 3, 0, Zer80931), 
LCon78155 = concatenate_layer([Zer80931,[[[0.5063, 0.6553], [0.1392, 0.8653], [0.9151, 0.598], [0.6065, 0.5584]]]], 2, Con78155), 
LMax12051 = max_pool1D_layer([[[1.3802, 1.2095]]], 1, Max12051), 
LZer12498 = zero_padding1D_layer(Max12051, 3, 0, Zer12498), 
LCon82663 = concatenate_layer([Zer12498,[[[0.3131, 0.1179], [0.5437, 0.0068], [0.1018, 0.5568], [0.1705, 0.1068]]]], 2, Con82663), 
LMax69928 = maximum_layer([[[[[[0.0095], [0.396]], [[0.2597], [0.6054]]]]], [[[[[0.2345], [0.651]], [[0.3099], [0.5623]]]]]], Max69928), 
LRes84214 = reshape_layer(Max69928, [1, 2, 2], Res84214), 
LRes67507 = reshape_layer(Res84214, [1, 4], Res67507), 
LSof28043 = softmax_layer([[[[[0.9272], [0.3653]], [[0.1545], [0.4186]]]]], 1, Sof28043), 
LRes72085 = reshape_layer(Sof28043, [1, 2, 2], Res72085), 
LRes33940 = reshape_layer(Res72085, [1, 4], Res33940), 
LDot36481 = dot_layer(Res67507,Res33940, 1, 1, Dot36481), 
LMin82794 = minimum_layer([[[[0.3955]]], [[[0.3093]]]], Min82794), 
LZer3587 = zero_padding1D_layer(Min82794, 3, 0, Zer3587), 
LCon23111 = concatenate_layer([Zer3587,[[[0.9127, 0.3523, 0.9307], [0.2294, 0.2009, 0.3294], [0.2915, 0.6209, 0.51], [0.3941, 0.5632, 0.5254]]]], 2, Con23111), 
LMul23968 = multiply_layer([Dot36481,Con23111], Mul23968), 
LMin91147 = minimum_layer([Con82663,Mul23968], Min91147), 
LMul80981 = multiply_layer([[[[[[0.6516]], [[0.389]]], [[[0.1592]], [[0.542]]]]], [[[[[0.638]], [[0.6889]]], [[[0.9976]], [[0.5717]]]]]], Mul80981), 
LRes95561 = reshape_layer(Mul80981, [2, 2, 1], Res95561), 
LRes4251 = reshape_layer(Res95561, [2, 2], Res4251), 
LSim97176 = simple_rnn_layer(Res4251,[[6], [6]],[[5]],[4], Sim97176), 
LRes42999 = reshape_layer(Sim97176, [1, 1], Res42999), 
LRes7400 = reshape_layer(Res42999, [1, 1, 1], Res7400), 
LZer11795 = zero_padding2D_layer(Res7400, 1, 0, 1, 0, Zer11795), 
LCon52953 = concatenate_layer([Zer11795,[[[[0.6771], [0.1432]], [[0.8471], [0.8708]]]]], 3, Con52953), 
LMax56002 = maximum_layer([[[[[0.1711, 0.1629], [0.8826, 0.4804]], [[0.0301, 0.9474], [0.9864, 0.7555]]]], [[[[0.3185, 0.9162], [0.1116, 0.993]], [[0.4992, 0.5272], [0.9601, 0.2108]]]]], Max56002), 
LAdd7758 = add_layer([Con52953,Max56002], Add7758), 
LRes55181 = reshape_layer(Add7758, [2, 4], Res55181), 
LPer82513 = permute_layer(Res55181, 1,2, Per82513), 
LZer19738 = zero_padding1D_layer(Per82513, 2, 0, Zer19738), 
LAve20223 = average_layer([Min91147,Zer19738], Ave20223), 
LAve26499 = average_layer([Con78155,Ave20223], Ave26499), 
exec_layers([LAdd27009,LDen37042,LRes83594,LDot60355,LZer80931,LCon78155,LMax12051,LZer12498,LCon82663,LMax69928,LRes84214,LRes67507,LSof28043,LRes72085,LRes33940,LDot36481,LMin82794,LZer3587,LCon23111,LMul23968,LMin91147,LMul80981,LRes95561,LRes4251,LSim97176,LRes42999,LRes7400,LZer11795,LCon52953,LMax56002,LAdd7758,LRes55181,LPer82513,LZer19738,LAve20223,LAve26499],["Add27009","Den37042","Res83594","Dot60355","Zer80931","Con78155","Max12051","Zer12498","Con82663","Max69928","Res84214","Res67507","Sof28043","Res72085","Res33940","Dot36481","Min82794","Zer3587","Con23111","Mul23968","Min91147","Mul80981","Res95561","Res4251","Sim97176","Res42999","Res7400","Zer11795","Con52953","Max56002","Add7758","Res55181","Per82513","Zer19738","Ave20223","Ave26499"],Ave26499,"Ave26499")

Actual (Unparsed): [[[0.0000000, 0.0000000, 0.2738036, 0.3571250], [0.0000000, 0.0000000, 0.1022965, 0.4343500], [0.0796250, 0.3983250, 0.7036500, 0.6225622], [0.8315107, 1.5879428, 0.8424750, 0.7124750]]]

Expected (Unparsed): [[[0,0,0.2738035875,0.357125],[0,0,0.102296475,0.43434999999999996],[0.079625,0.39832500000000004,0.70365,0.6225622500000001],[0.8315106659109999,1.587942852387,0.8424749999725127,0.712475]]]

Actual:   [[[0, 0, 0.2739, 0.3572], [0, 0, 0.1023, 0.4344], [0.0797, 0.3984, 0.7037, 0.6226], [0.8316, 1.588, 0.8425, 0.7125]]]

Expected: [[[0, 0, 0.2739, 0.3572], [0, 0, 0.1023, 0.4344], [0.0797, 0.3984, 0.7037, 0.6226], [0.8316, 1.588, 0.8425, 0.7125]]]