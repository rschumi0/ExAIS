import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Add39436 = tf.keras.layers.Input(shape=([2, 2, 2, 2]))
in1Add39436 = tf.keras.layers.Input(shape=([2, 2, 2, 2]))
in0Con72601 = tf.keras.layers.Input(shape=([2, 2, 2, 1]))
in0Mul19850 = tf.keras.layers.Input(shape=([1, 1]))
in1Mul19850 = tf.keras.layers.Input(shape=([1, 1]))

Add39436 = keras.layers.Add(name = 'Add39436', )([in0Add39436,in1Add39436])
Con72601 = keras.layers.Concatenate(axis=4, name = 'Con72601', )([Add39436,in0Con72601])
Mul19850 = keras.layers.Multiply(name = 'Mul19850', )([in0Mul19850,in1Mul19850])
Up_63991 = keras.layers.UpSampling1D(size=(2), name = 'Up_63991', )(Mul19850)
Res76134 = keras.layers.Reshape((2, 1, 1), name = 'Res76134', )(Up_63991)
Res22301 = keras.layers.Reshape((2, 1, 1, 1), name = 'Res22301', )(Res76134)
Con20007 = keras.layers.Conv3DTranspose(3, (1, 1, 1),strides=(1, 1, 1), padding='same', name = 'Con20007', )(Res22301)
Zer95182 = keras.layers.ZeroPadding3D(padding=((0, 0), (1, 0), (1, 0)), name = 'Zer95182', )(Con20007)
Sub57906 = keras.layers.Subtract(name = 'Sub57906', )([Con72601,Zer95182])
model = tf.keras.models.Model(inputs=[in0Add39436,in1Add39436,in0Con72601,in0Mul19850,in1Mul19850], outputs=Sub57906)
w = model.get_layer('Con20007').get_weights() 
w[0] = np.array([[[[[0.984], [0.5915], [0.3055]]]]])
w[1] = np.array([0, 0, 0])
model.get_layer('Con20007').set_weights(w) 
in0Add39436 = tf.constant([[[[[0.7624, 0.5154], [0.3153, 0.0727]], [[0.9693, 0.6708], [0.1227, 0.7993]]], [[[0.9965, 0.4276], [0.6403, 0.1958]], [[0.9951, 0.5755], [0.5625, 0.5571]]]]])
in1Add39436 = tf.constant([[[[[0.3916, 0.1289], [0.474, 0.8402]], [[0.9184, 0.8868], [0.9166, 0.5951]]], [[[0.9834, 0.7349], [0.9842, 0.4735]], [[0.3096, 0.8455], [0.2377, 0.5985]]]]])
in0Con72601 = tf.constant([[[[[0.8683], [0.8104]], [[0.8312], [0.0874]]], [[[0.0766], [0.3357]], [[0.46], [0.5886]]]]])
in0Mul19850 = tf.constant([[[0.0626]]])
in1Mul19850 = tf.constant([[[0.0671]]])
print (np.array2string(model.predict([in0Add39436,in1Add39436,in0Con72601,in0Mul19850,in1Mul19850],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Sub57906.png')

LAdd39436 = add_layer([[[[[[0.7624, 0.5154], [0.3153, 0.0727]], [[0.9693, 0.6708], [0.1227, 0.7993]]], [[[0.9965, 0.4276], [0.6403, 0.1958]], [[0.9951, 0.5755], [0.5625, 0.5571]]]]], [[[[[0.3916, 0.1289], [0.474, 0.8402]], [[0.9184, 0.8868], [0.9166, 0.5951]]], [[[0.9834, 0.7349], [0.9842, 0.4735]], [[0.3096, 0.8455], [0.2377, 0.5985]]]]]], Add39436), 
LCon72601 = concatenate_layer([Add39436,[[[[[0.8683], [0.8104]], [[0.8312], [0.0874]]], [[[0.0766], [0.3357]], [[0.46], [0.5886]]]]]], 4, Con72601), 
LMul19850 = multiply_layer([[[[0.0626]]], [[[0.0671]]]], Mul19850), 
LUp_63991 = up_sampling1D_layer(Mul19850, 2, Up_63991), 
LRes76134 = reshape_layer(Up_63991, [2, 1, 1], Res76134), 
LRes22301 = reshape_layer(Res76134, [2, 1, 1, 1], Res22301), 
LCon20007 = conv3D_transpose_layer(Res22301, 1, 1, 1,[[[[[0.984], [0.5915], [0.3055]]]]],[0, 0, 0], 1, 1, 1, true, Con20007), 
LZer95182 = zero_padding3D_layer(Con20007, 0, 0, 1, 0, 1, 0, Zer95182), 
LSub57906 = subtract_layer(Con72601,Zer95182, Sub57906), 
exec_layers([LAdd39436,LCon72601,LMul19850,LUp_63991,LRes76134,LRes22301,LCon20007,LZer95182,LSub57906],["Add39436","Con72601","Mul19850","Up_63991","Res76134","Res22301","Con20007","Zer95182","Sub57906"],Sub57906,"Sub57906")

Actual (Unparsed): [[[[[1.1540000, 0.6443000, 0.8683000], [0.7893000, 0.9129000, 0.8104000]], [[1.8877000, 1.5576000, 0.8312000], [1.0351667, 1.3919154, 0.0861168]]], [[[1.9799000, 1.1625000, 0.0766000], [1.6245000, 0.6693000, 0.3357000]], [[1.3047000, 1.4210000, 0.4600000], [0.7960667, 1.1531154, 0.5873167]]]]]

Expected (Unparsed): [[[[[1.154,0.6443,0.8683],[0.7893,0.9128999999999999,0.8104]],[[1.8877000000000002,1.5575999999999999,0.8312],[1.03516674736,1.3919154279100001,0.08611675947]]],[[[1.9799000000000002,1.1625,0.0766],[1.6244999999999998,0.6693,0.3357]],[[1.3047,1.421,0.46],[0.79606674736,1.1531154279100002,0.5873167594700001]]]]]

Actual:   [[[[[1.154, 0.6443, 0.8683], [0.7893, 0.9129, 0.8104]], [[1.8877, 1.5576, 0.8312], [1.0352, 1.392, 0.0862]]], [[[1.9799, 1.1625, 0.0766], [1.6245, 0.6693, 0.3357]], [[1.3047, 1.421, 0.46], [0.7961, 1.1532, 0.5874]]]]]

Expected: [[[[[1.154, 0.6443, 0.8683], [0.7893, 0.9129, 0.8104]], [[1.8878, 1.5576, 0.8312], [1.0352, 1.392, 0.0862]]], [[[1.98, 1.1625, 0.0766], [1.6245, 0.6693, 0.3357]], [[1.3047, 1.421, 0.46], [0.7961, 1.1532, 0.5874]]]]]