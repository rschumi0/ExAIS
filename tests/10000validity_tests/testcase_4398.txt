import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Add78278 = tf.keras.layers.Input(shape=([1, 2, 2]))
in1Add78278 = tf.keras.layers.Input(shape=([1, 2, 2]))
in0Glo86823 = tf.keras.layers.Input(shape=([1, 2, 2]))
in0ReL45703 = tf.keras.layers.Input(shape=([1, 2, 1]))
in0Ave14456 = tf.keras.layers.Input(shape=([1, 2]))
in0Con87731 = tf.keras.layers.Input(shape=([2, 1]))
in0Con73358 = tf.keras.layers.Input(shape=([3, 13]))

Add78278 = keras.layers.Add(name = 'Add78278', )([in0Add78278,in1Add78278])
Res5581 = keras.layers.Reshape((1, 2, 2, 1), name = 'Res5581', )(Add78278)
Zer97078 = keras.layers.ZeroPadding3D(padding=((1, 1), (1, 1), (1, 1)), name = 'Zer97078', )(Res5581)
Mas21486 = keras.layers.Masking(mask_value=1, name = 'Mas21486', )(Zer97078)
Res37681 = keras.layers.Reshape((3, 4, 4), name = 'Res37681', )(Mas21486)
Res2068 = keras.layers.Reshape((3, 16), name = 'Res2068', )(Res37681)
Glo86823 = keras.layers.GlobalAveragePooling2D(name = 'Glo86823', )(in0Glo86823)
Res74391 = keras.layers.Reshape((2, 1), name = 'Res74391', )(Glo86823)
Res7164 = keras.layers.Reshape((2, 1, 1), name = 'Res7164', )(Res74391)
Zer11422 = keras.layers.ZeroPadding2D(padding=((0, 0), (2, 0)), name = 'Zer11422', )(Res7164)
ReL45703 = keras.layers.ReLU(max_value=9.630106635402036, negative_slope=4.2760494270675675, threshold=6.1675722477011625, name = 'ReL45703', input_shape=(1, 2, 1))(in0ReL45703)
Lay91964 = keras.layers.LayerNormalization(axis=3, epsilon=1.1266551988508018, name = 'Lay91964', )(ReL45703)
Zer90768 = keras.layers.ZeroPadding2D(padding=((1, 0), (1, 0)), name = 'Zer90768', )(Lay91964)
Mul32378 = keras.layers.Multiply(name = 'Mul32378', )([Zer11422,Zer90768])
Res84796 = keras.layers.Reshape((2, 3), name = 'Res84796', )(Mul32378)
Ave14456 = keras.layers.AveragePooling1D(pool_size=(1), name = 'Ave14456', )(in0Ave14456)
Zer58452 = keras.layers.ZeroPadding1D(padding=((1, 0)), name = 'Zer58452', )(Ave14456)
Con87731 = keras.layers.Concatenate(axis=2, name = 'Con87731', )([Zer58452,in0Con87731])
Add53175 = keras.layers.Add(name = 'Add53175', )([Res84796,Con87731])
Zer77861 = keras.layers.ZeroPadding1D(padding=((1, 0)), name = 'Zer77861', )(Add53175)
Con73358 = keras.layers.Concatenate(axis=2, name = 'Con73358', )([Zer77861,in0Con73358])
Sub69944 = keras.layers.Subtract(name = 'Sub69944', )([Res2068,Con73358])
model = tf.keras.models.Model(inputs=[in0Add78278,in1Add78278,in0Glo86823,in0ReL45703,in0Ave14456,in0Con87731,in0Con73358], outputs=Sub69944)
in0Add78278 = tf.constant([[[[0.3506, 0.2232], [0.6465, 0.4321]]]])
in1Add78278 = tf.constant([[[[0.0422, 0.3248], [0.409, 0.3502]]]])
in0Glo86823 = tf.constant([[[[1.2877, 1.8609], [1.4581, 1.2663]]]])
in0ReL45703 = tf.constant([[[[0.0258], [0.3086]]]])
in0Ave14456 = tf.constant([[[1.3241, 1.9089]]])
in0Con87731 = tf.constant([[[0.7861], [0.5236]]])
in0Con73358 = tf.constant([[[0.4729, 0.3275, 0.158, 0.4761, 0.9168, 0.0808, 0.4139, 0.2997, 0.2058, 0.8182, 0.6897, 0.2757, 0.8833], [0.2963, 0.9226, 0.6753, 0.1348, 0.1555, 0.8758, 0.6657, 0.3639, 0.293, 0.5439, 0.4288, 0.6915, 0.9229], [0.3706, 0.0175, 0.3617, 0.8108, 0.9283, 0.8749, 0.9452, 0.9322, 0.8868, 0.5933, 0.9195, 0.5909, 0.5492]]])
print (np.array2string(model.predict([in0Add78278,in1Add78278,in0Glo86823,in0ReL45703,in0Ave14456,in0Con87731,in0Con73358],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Sub69944.png')

LAdd78278 = add_layer([[[[[0.3506, 0.2232], [0.6465, 0.4321]]]], [[[[0.0422, 0.3248], [0.409, 0.3502]]]]], Add78278), 
LRes5581 = reshape_layer(Add78278, [1, 2, 2, 1], Res5581), 
LZer97078 = zero_padding3D_layer(Res5581, 1, 1, 1, 1, 1, 1, Zer97078), 
LMas21486 = masking_layer(Zer97078, 1, Mas21486), 
LRes37681 = reshape_layer(Mas21486, [3, 4, 4], Res37681), 
LRes2068 = reshape_layer(Res37681, [3, 16], Res2068), 
LGlo86823 = global_average_pooling2D_layer([[[[1.2877, 1.8609], [1.4581, 1.2663]]]], Glo86823), 
LRes74391 = reshape_layer(Glo86823, [2, 1], Res74391), 
LRes7164 = reshape_layer(Res74391, [2, 1, 1], Res7164), 
LZer11422 = zero_padding2D_layer(Res7164, 0, 0, 2, 0, Zer11422), 
LReL45703 = relu_layer([[[[0.0258], [0.3086]]]], 9.630106635402036, 4.2760494270675675, 6.1675722477011625, ReL45703), 
LLay91964 = layer_normalization_layer(ReL45703, 3, 1.1266551988508018, Lay91964), 
LZer90768 = zero_padding2D_layer(Lay91964, 1, 0, 1, 0, Zer90768), 
LMul32378 = multiply_layer([Zer11422,Zer90768], Mul32378), 
LRes84796 = reshape_layer(Mul32378, [2, 3], Res84796), 
LAve14456 = average_pooling1D_layer([[[1.3241, 1.9089]]], 1, Ave14456), 
LZer58452 = zero_padding1D_layer(Ave14456, 1, 0, Zer58452), 
LCon87731 = concatenate_layer([Zer58452,[[[0.7861], [0.5236]]]], 2, Con87731), 
LAdd53175 = add_layer([Res84796,Con87731], Add53175), 
LZer77861 = zero_padding1D_layer(Add53175, 1, 0, Zer77861), 
LCon73358 = concatenate_layer([Zer77861,[[[0.4729, 0.3275, 0.158, 0.4761, 0.9168, 0.0808, 0.4139, 0.2997, 0.2058, 0.8182, 0.6897, 0.2757, 0.8833], [0.2963, 0.9226, 0.6753, 0.1348, 0.1555, 0.8758, 0.6657, 0.3639, 0.293, 0.5439, 0.4288, 0.6915, 0.9229], [0.3706, 0.0175, 0.3617, 0.8108, 0.9283, 0.8749, 0.9452, 0.9322, 0.8868, 0.5933, 0.9195, 0.5909, 0.5492]]]], 2, Con73358), 
LSub69944 = subtract_layer(Res2068,Con73358, Sub69944), 
exec_layers([LAdd78278,LRes5581,LZer97078,LMas21486,LRes37681,LRes2068,LGlo86823,LRes74391,LRes7164,LZer11422,LReL45703,LLay91964,LZer90768,LMul32378,LRes84796,LAve14456,LZer58452,LCon87731,LAdd53175,LZer77861,LCon73358,LSub69944],["Add78278","Res5581","Zer97078","Mas21486","Res37681","Res2068","Glo86823","Res74391","Res7164","Zer11422","ReL45703","Lay91964","Zer90768","Mul32378","Res84796","Ave14456","Zer58452","Con87731","Add53175","Zer77861","Con73358","Sub69944"],Sub69944,"Sub69944")

Actual (Unparsed): [[[0.0000000, 0.0000000, 0.0000000, -0.4729000, -0.3275000, -0.1580000, -0.4761000, -0.9168000, -0.0808000, -0.4139000, -0.2997000, -0.2058000, -0.8182000, -0.6897000, -0.2757000, -0.8833000], [0.0000000, 0.0000000, -0.7861000, -0.2963000, -0.9226000, -0.2825000, 0.4132000, -0.1555000, -0.8758000, 0.3898000, 0.4184000, -0.2930000, -0.5439000, -0.4288000, -0.6915000, -0.9229000], [-1.3241000, -1.9089000, -0.5236000, -0.3706000, -0.0175000, -0.3617000, -0.8108000, -0.9283000, -0.8749000, -0.9452000, -0.9322000, -0.8868000, -0.5933000, -0.9195000, -0.5909000, -0.5492000]]]

Expected (Unparsed): [[[0,0,0,-0.4729,-0.3275,-0.158,-0.4761,-0.9168,-0.0808,-0.4139,-0.2997,-0.2058,-0.8182,-0.6897,-0.2757,-0.8833],[0,0,-0.7861,-0.2963,-0.9226,-0.2825,0.4132,-0.1555,-0.8758,0.3897999999999999,0.4184,-0.293,-0.5439,-0.4288,-0.6915,-0.9229],[-1.3241,-1.9089,-0.5236,-0.3706,-0.0175,-0.3617,-0.8108,-0.9283,-0.8749,-0.9452,-0.9322,-0.8868,-0.5933,-0.9195,-0.5909,-0.5492]]]

Actual:   [[[0, 0, 0, -0.4729, -0.3275, -0.158, -0.4761, -0.9168, -0.0808, -0.4139, -0.2997, -0.2058, -0.8182, -0.6897, -0.2757, -0.8833], [0, 0, -0.7861, -0.2963, -0.9226, -0.2825, 0.4132, -0.1555, -0.8758, 0.3898, 0.4184, -0.293, -0.5439, -0.4288, -0.6915, -0.9229], [-1.3241, -1.9089, -0.5236, -0.3706, -0.0175, -0.3617, -0.8108, -0.9283, -0.8749, -0.9452, -0.9322, -0.8868, -0.5933, -0.9195, -0.5909, -0.5492]]]

Expected: [[[0, 0, 0, -0.4729, -0.3275, -0.158, -0.4761, -0.9168, -0.0808, -0.4139, -0.2997, -0.2058, -0.8182, -0.6897, -0.2757, -0.8833], [0, 0, -0.7861, -0.2963, -0.9226, -0.2825, 0.4132, -0.1555, -0.8758, 0.3898, 0.4184, -0.293, -0.5439, -0.4288, -0.6915, -0.9229], [-1.3241, -1.9089, -0.5236, -0.3706, -0.0175, -0.3617, -0.8108, -0.9283, -0.8749, -0.9452, -0.9322, -0.8868, -0.5933, -0.9195, -0.5909, -0.5492]]]