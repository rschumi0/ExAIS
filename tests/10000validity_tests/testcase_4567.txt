import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Bat80080 = tf.keras.layers.Input(shape=([4]))
in0Con8317 = tf.keras.layers.Input(shape=([4, 3]))
in0Per3685 = tf.keras.layers.Input(shape=([4, 4]))
in0Con55383 = tf.keras.layers.Input(shape=([4, 4, 1, 1]))
in0Con87038 = tf.keras.layers.Input(shape=([1, 2, 2, 1]))

Bat80080 = keras.layers.BatchNormalization(axis=1, epsilon=0.4859630637412695,  name = 'Bat80080', )(in0Bat80080)
Res19009 = keras.layers.Reshape((4, 1), name = 'Res19009', )(Bat80080)
Con8317 = keras.layers.Concatenate(axis=2, name = 'Con8317', )([Res19009,in0Con8317])
Per3685 = keras.layers.Permute((2,1), name = 'Per3685',)(in0Per3685)
Mul97 = keras.layers.Multiply(name = 'Mul97', )([Con8317,Per3685])
Res89968 = keras.layers.Reshape((4, 4, 1), name = 'Res89968', )(Mul97)
Res27366 = keras.layers.Reshape((4, 4, 1, 1), name = 'Res27366', )(Res89968)
Con55383 = keras.layers.Concatenate(axis=4, name = 'Con55383', )([Res27366,in0Con55383])
Con87038 = keras.layers.Conv3D(2, (1, 1, 2),strides=(1, 1, 1), padding='valid', dilation_rate=(1, 1, 1), name = 'Con87038', )(in0Con87038)
Zer18565 = keras.layers.ZeroPadding3D(padding=((3, 0), (2, 0), (0, 0)), name = 'Zer18565', )(Con87038)
Ave54556 = keras.layers.Average(name = 'Ave54556', )([Con55383,Zer18565])
model = tf.keras.models.Model(inputs=[in0Bat80080,in0Con8317,in0Per3685,in0Con55383,in0Con87038], outputs=Ave54556)
w = model.get_layer('Bat80080').get_weights() 
w[0] = np.array([0.296, 0.0545, 0.2394, 0.1033])
w[1] = np.array([0.4331, 0.3174, 0.0852, 0.2716])
w[2] = np.array([0.1526, 0.7907, 0.3198, 0.2598])
w[3] = np.array([0.5981, 0.6425, 0.0214, 0.5519])
model.get_layer('Bat80080').set_weights(w) 
w = model.get_layer('Con87038').get_weights() 
w[0] = np.array([[[[[0.4874, 0.3984]], [[0.2824, 0.4331]]]]])
w[1] = np.array([0, 0])
model.get_layer('Con87038').set_weights(w) 
in0Bat80080 = tf.constant([[1.9817, 1.9267, 1.1256, 1.3237]])
in0Con8317 = tf.constant([[[0.649, 0.7784, 0.9965], [0.7924, 0.9622, 0.4351], [0.4412, 0.6801, 0.9203], [0.8837, 0.1252, 0.4573]]])
in0Per3685 = tf.constant([[[1.191, 1.1193, 1.5843, 1.529], [1.9114, 1.5008, 1.8639, 1.1324], [1.3276, 1.636, 1.6096, 1.3971], [1.7007, 1.0887, 1.6513, 1.2834]]])
in0Con55383 = tf.constant([[[[[0.9325]], [[0.1989]], [[0.7675]], [[0.3711]]], [[[0.9594]], [[0.8157]], [[0.8437]], [[0.3398]]], [[[0.7332]], [[0.6373]], [[0.6012]], [[0.062]]], [[[0.2113]], [[0.9626]], [[0.3306]], [[0.7122]]]]])
in0Con87038 = tf.constant([[[[[0.6993], [0.6495]], [[0.9641], [0.7717]]]]])
print (np.array2string(model.predict([in0Bat80080,in0Con8317,in0Per3685,in0Con55383,in0Con87038],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Ave54556.png')

LBat80080 = batch_normalization_layer([[1.9817, 1.9267, 1.1256, 1.3237]], 1, 0.4859630637412695, [0.296, 0.0545, 0.2394, 0.1033], [0.4331, 0.3174, 0.0852, 0.2716], [0.1526, 0.7907, 0.3198, 0.2598], [0.5981, 0.6425, 0.0214, 0.5519], Bat80080), 
LRes19009 = reshape_layer(Bat80080, [4, 1], Res19009), 
LCon8317 = concatenate_layer([Res19009,[[[0.649, 0.7784, 0.9965], [0.7924, 0.9622, 0.4351], [0.4412, 0.6801, 0.9203], [0.8837, 0.1252, 0.4573]]]], 2, Con8317), 
LPer3685 = permute_layer([[[1.191, 1.1193, 1.5843, 1.529], [1.9114, 1.5008, 1.8639, 1.1324], [1.3276, 1.636, 1.6096, 1.3971], [1.7007, 1.0887, 1.6513, 1.2834]]], 2,1, Per3685), 
LMul97 = multiply_layer([Con8317,Per3685], Mul97), 
LRes89968 = reshape_layer(Mul97, [4, 4, 1], Res89968), 
LRes27366 = reshape_layer(Res89968, [4, 4, 1, 1], Res27366), 
LCon55383 = concatenate_layer([Res27366,[[[[[0.9325]], [[0.1989]], [[0.7675]], [[0.3711]]], [[[0.9594]], [[0.8157]], [[0.8437]], [[0.3398]]], [[[0.7332]], [[0.6373]], [[0.6012]], [[0.062]]], [[[0.2113]], [[0.9626]], [[0.3306]], [[0.7122]]]]]], 4, Con55383), 
LCon87038 = conv3D_layer([[[[[0.6993], [0.6495]], [[0.9641], [0.7717]]]]], 1, 1, 2,[[[[[0.4874, 0.3984]], [[0.2824, 0.4331]]]]],[0, 0], 1, 1, 1, false, 1, 1, 1, Con87038), 
LZer18565 = zero_padding3D_layer(Con87038, 3, 0, 2, 0, 0, 0, Zer18565), 
LAve54556 = average_layer([Con55383,Zer18565], Ave54556), 
exec_layers([LBat80080,LRes19009,LCon8317,LPer3685,LMul97,LRes89968,LRes27366,LCon55383,LCon87038,LZer18565,LAve54556],["Bat80080","Res19009","Con8317","Per3685","Mul97","Res89968","Res27366","Con55383","Con87038","Zer18565","Ave54556"],Ave54556,"Ave54556")

Actual (Unparsed): [[[[[0.5675700, 0.4662500]], [[0.6202493, 0.0994500]], [[0.5167019, 0.3837500]], [[0.8473738, 0.1855500]]], [[[0.2102502, 0.4797000]], [[0.5946170, 0.4078500]], [[0.7870796, 0.4218500]], [[0.2368467, 0.1699000]]], [[[0.2820268, 0.3666000]], [[0.4111763, 0.3186500]], [[0.5473445, 0.3006000]], [[0.7598457, 0.0310000]]], [[[0.2901106, 0.1056500]], [[0.5003510, 0.4813000]], [[0.3495873, 0.4452498]], [[0.6373646, 0.7152604]]]]]

Expected (Unparsed): [[[[[0.5675700114777088,0.46625]],[[0.6202493,0.09945]],[[0.5167019199999999,0.38375]],[[0.8473737750000001,0.18555]]],[[[0.210250184417976,0.4797]],[[0.59461696,0.40785]],[[0.7870796,0.42185]],[[0.236846685,0.1699]]],[[[0.2820268011495361,0.3666]],[[0.41117634,0.31865]],[[0.54734448,0.3006]],[[0.759845695,0.031]]],[[[0.29011059222350705,0.10565]],[[0.50035094,0.4813]],[[0.34958727,0.445249785]],[[0.63736462,0.7152603550000001]]]]]

Actual:   [[[[[0.5676, 0.4663]], [[0.6203, 0.0995]], [[0.5168, 0.3838]], [[0.8474, 0.1856]]], [[[0.2103, 0.4797]], [[0.5947, 0.4079]], [[0.7871, 0.4219]], [[0.2369, 0.1699]]], [[[0.2821, 0.3666]], [[0.4112, 0.3187]], [[0.5474, 0.3006]], [[0.7599, 0.031]]], [[[0.2902, 0.1057]], [[0.5004, 0.4813]], [[0.3496, 0.4453]], [[0.6374, 0.7153]]]]]

Expected: [[[[[0.5676, 0.4663]], [[0.6203, 0.0995]], [[0.5168, 0.3838]], [[0.8474, 0.1856]]], [[[0.2103, 0.4797]], [[0.5947, 0.4079]], [[0.7871, 0.4219]], [[0.2369, 0.1699]]], [[[0.2821, 0.3666]], [[0.4112, 0.3187]], [[0.5474, 0.3006]], [[0.7599, 0.031]]], [[[0.2902, 0.1057]], [[0.5004, 0.4813]], [[0.3496, 0.4453]], [[0.6374, 0.7153]]]]]