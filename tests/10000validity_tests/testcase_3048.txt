import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Sub13817 = tf.keras.layers.Input(shape=([3, 2, 3]))
in1Sub13817 = tf.keras.layers.Input(shape=([3, 2, 3]))
in0Sub62705 = tf.keras.layers.Input(shape=([3, 3, 2, 3]))
in1Sub62705 = tf.keras.layers.Input(shape=([3, 3, 2, 3]))
in0Dot16019 = tf.keras.layers.Input(shape=([3, 3]))
in1Dot16019 = tf.keras.layers.Input(shape=([3, 3]))
in0Sep17239 = tf.keras.layers.Input(shape=([1, 1, 1]))
in0Per57551 = tf.keras.layers.Input(shape=([2, 1]))
in0Con11108 = tf.keras.layers.Input(shape=([3, 1]))
in0Con18394 = tf.keras.layers.Input(shape=([3, 15]))
in0Max23370 = tf.keras.layers.Input(shape=([1, 1, 1]))
in1Max23370 = tf.keras.layers.Input(shape=([1, 1, 1]))
in0Con25695 = tf.keras.layers.Input(shape=([1, 1]))
in0Min41889 = tf.keras.layers.Input(shape=([1, 2]))
in1Min41889 = tf.keras.layers.Input(shape=([1, 2]))
in0Con4671 = tf.keras.layers.Input(shape=([6, 16]))

Sub13817 = keras.layers.Subtract(name = 'Sub13817', )([in0Sub13817,in1Sub13817])
Res1321 = keras.layers.Reshape((3, 6), name = 'Res1321', )(Sub13817)
Sub62705 = keras.layers.Subtract(name = 'Sub62705', )([in0Sub62705,in1Sub62705])
Res44701 = keras.layers.Reshape((3, 3, 6), name = 'Res44701', )(Sub62705)
Res98393 = keras.layers.Reshape((3, 18), name = 'Res98393', )(Res44701)
Dot16019 = keras.layers.Dot(axes=(2, 2), name = 'Dot16019', )([in0Dot16019,in1Dot16019])
Sep17239 = keras.layers.SeparableConv2D(2, (1, 1),strides=(1, 1), padding='same', name = 'Sep17239', )(in0Sep17239)
Res79261 = keras.layers.Reshape((1, 2), name = 'Res79261', )(Sep17239)
Per57551 = keras.layers.Permute((2,1), name = 'Per57551',)(in0Per57551)
Add57452 = keras.layers.Add(name = 'Add57452', )([Res79261,Per57551])
Zer55632 = keras.layers.ZeroPadding1D(padding=((2, 0)), name = 'Zer55632', )(Add57452)
Con11108 = keras.layers.Concatenate(axis=2, name = 'Con11108', )([Zer55632,in0Con11108])
Add10855 = keras.layers.Add(name = 'Add10855', )([Dot16019,Con11108])
Con18394 = keras.layers.Concatenate(axis=2, name = 'Con18394', )([Add10855,in0Con18394])
Min69569 = keras.layers.Minimum(name = 'Min69569', )([Res98393,Con18394])
Dot69529 = keras.layers.Dot(axes=(1, 1), name = 'Dot69529', )([Res1321,Min69569])
Max23370 = keras.layers.Maximum(name = 'Max23370', )([in0Max23370,in1Max23370])
Res95446 = keras.layers.Reshape((1, 1), name = 'Res95446', )(Max23370)
Con25695 = keras.layers.Concatenate(axis=2, name = 'Con25695', )([Res95446,in0Con25695])
Min41889 = keras.layers.Minimum(name = 'Min41889', )([in0Min41889,in1Min41889])
Max38822 = keras.layers.Maximum(name = 'Max38822', )([Con25695,Min41889])
Zer65901 = keras.layers.ZeroPadding1D(padding=((5, 0)), name = 'Zer65901', )(Max38822)
Con4671 = keras.layers.Concatenate(axis=2, name = 'Con4671', )([Zer65901,in0Con4671])
Sub84023 = keras.layers.Subtract(name = 'Sub84023', )([Dot69529,Con4671])
model = tf.keras.models.Model(inputs=[in0Sub13817,in1Sub13817,in0Sub62705,in1Sub62705,in0Dot16019,in1Dot16019,in0Sep17239,in0Per57551,in0Con11108,in0Con18394,in0Max23370,in1Max23370,in0Con25695,in0Min41889,in1Min41889,in0Con4671], outputs=Sub84023)
w = model.get_layer('Sep17239').get_weights() 
w[0] = np.array([[[[0.1748]]]])
w[1] = np.array([[[[0.8805, 0.1875]]]])
w[2] = np.array([0, 0])
model.get_layer('Sep17239').set_weights(w) 
in0Sub13817 = tf.constant([[[[0.7034, 0.403, 0.7285], [0.0569, 0.8297, 0.603]], [[0.9269, 0.6983, 0.9402], [0.1789, 0.7886, 0.3401]], [[0.5001, 0.8073, 0.7297], [0.2537, 0.9124, 0.3031]]]])
in1Sub13817 = tf.constant([[[[0.5105, 0.3694, 0.9105], [0.5324, 0.4704, 0.0289]], [[0.7188, 0.574, 0.4128], [0.6055, 0.9338, 0.1065]], [[0.6418, 0.9023, 0.3381], [0.0839, 0.8661, 0.3925]]]])
in0Sub62705 = tf.constant([[[[[0.2805, 0.2489, 0.5576], [0.4392, 0.8295, 0.9314]], [[0.882, 0.603, 0.6389], [0.8794, 0.5012, 0.0258]], [[0.3538, 0.5785, 0.3906], [0.6659, 0.4254, 0.63]]], [[[0.3092, 0.8514, 0.4084], [0.2789, 0.7143, 0.2177]], [[0.1656, 0.1084, 0.7244], [0.6001, 0.9222, 0.2521]], [[0.1947, 0.8635, 0.7765], [0.2141, 0.0987, 0.9667]]], [[[0.1038, 0.5301, 0.1798], [0.7877, 0.2671, 0.0595]], [[0.2787, 0.3585, 0.1885], [0.6515, 0.8281, 0.2017]], [[0.6295, 0.2945, 0.7553], [0.3982, 0.4768, 0.6303]]]]])
in1Sub62705 = tf.constant([[[[[0.4372, 0.8667, 0.9378], [0.8871, 0.4102, 0.0895]], [[0.3121, 0.8733, 0.254], [0.1807, 0.9261, 0.6595]], [[0.4412, 0.7597, 0.8888], [0.9731, 0.972, 0.5676]]], [[[0.564, 0.1322, 0.2971], [0.1423, 0.0369, 0.5525]], [[0.3753, 0.1563, 0.3995], [0.4751, 0.7062, 0.2122]], [[0.3787, 0.5853, 0.8343], [0.9889, 0.6887, 0.6168]]], [[[0.1288, 0.6389, 0.4991], [0.8701, 0.6104, 0.2453]], [[0.5825, 0.8141, 0.2167], [0.9673, 0.0277, 0.5823]], [[0.1784, 0.2231, 0.8887], [0.2309, 0.1112, 0.8937]]]]])
in0Dot16019 = tf.constant([[[0.774, 0.0804, 0.0206], [0.0617, 0.1796, 0.3283], [0.6617, 0.2471, 0.3125]]])
in1Dot16019 = tf.constant([[[0.3922, 0.6029, 0.4467], [0.2655, 0.1159, 0.8974], [0.5399, 0.6608, 0.0574]]])
in0Sep17239 = tf.constant([[[[0.4876]]]])
in0Per57551 = tf.constant([[[1.7858], [1.3017]]])
in0Con11108 = tf.constant([[[0.9528], [0.1035], [0.8192]]])
in0Con18394 = tf.constant([[[0.6758, 0.0747, 0.3429, 0.1418, 0.7957, 0.9041, 0.6613, 0.8715, 0.8806, 0.7929, 0.9425, 0.6337, 0.5061, 0.7672, 0.1228], [0.6857, 0.002, 0.2179, 0.3023, 0.9237, 0.2731, 0.0306, 0.5518, 0.9419, 0.9594, 0.1654, 0.4596, 0.0889, 0.3796, 0.7075], [0.1747, 0.4483, 0.6835, 0.1404, 0.0088, 0.8584, 0.5111, 0.4805, 0.3645, 0.924, 0.2476, 0.9567, 0.8725, 0.4728, 0.6535]]])
in0Max23370 = tf.constant([[[[0.566]]]])
in1Max23370 = tf.constant([[[[0.3336]]]])
in0Con25695 = tf.constant([[[0.9777]]])
in0Min41889 = tf.constant([[[0.2023, 0.9464]]])
in1Min41889 = tf.constant([[[0.2503, 0.7911]]])
in0Con4671 = tf.constant([[[0.1637, 0.9627, 0.826, 0.6903, 0.2073, 0.2302, 0.3591, 0.5216, 0.2431, 0.9872, 0.5928, 0.2599, 0.7363, 0.9924, 0.4886, 0.1638], [0.114, 0.8687, 0.2824, 0.6974, 0.9102, 0.2998, 0.399, 0.5942, 0.6078, 0.9182, 0.5674, 0.5379, 0.5317, 0.6857, 0.1565, 0.2922], [0.9846, 0.9477, 0.7271, 0.2501, 0.1851, 0.4951, 0.8057, 0.7995, 0.467, 0.9101, 0.927, 0.6049, 0.6294, 0.1898, 0.0588, 0.8874], [0.2896, 0.1428, 0.6323, 0.0575, 0.5834, 0.3371, 0.5277, 0.5979, 0.5813, 0.4391, 0.5349, 0.9248, 0.3466, 0.6316, 0.0032, 0.0676], [0.6462, 0.4196, 0.6223, 0.3957, 0.9448, 0.5466, 0.5341, 0.2958, 0.4607, 0.9254, 0.268, 0.6587, 0.7443, 0.4632, 0.31, 0.265], [0.4513, 0.4075, 0.4711, 0.6818, 0.7238, 0.3744, 0.6032, 0.0759, 0.8717, 0.5327, 0.6257, 0.4296, 0.8467, 0.5123, 0.2725, 0.0064]]])
print (np.array2string(model.predict([in0Sub13817,in1Sub13817,in0Sub62705,in1Sub62705,in0Dot16019,in1Dot16019,in0Sep17239,in0Per57551,in0Con11108,in0Con18394,in0Max23370,in1Max23370,in0Con25695,in0Min41889,in1Min41889,in0Con4671],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Sub84023.png')

LSub13817 = subtract_layer([[[[0.7034, 0.403, 0.7285], [0.0569, 0.8297, 0.603]], [[0.9269, 0.6983, 0.9402], [0.1789, 0.7886, 0.3401]], [[0.5001, 0.8073, 0.7297], [0.2537, 0.9124, 0.3031]]]], [[[[0.5105, 0.3694, 0.9105], [0.5324, 0.4704, 0.0289]], [[0.7188, 0.574, 0.4128], [0.6055, 0.9338, 0.1065]], [[0.6418, 0.9023, 0.3381], [0.0839, 0.8661, 0.3925]]]], Sub13817), 
LRes1321 = reshape_layer(Sub13817, [3, 6], Res1321), 
LSub62705 = subtract_layer([[[[[0.2805, 0.2489, 0.5576], [0.4392, 0.8295, 0.9314]], [[0.882, 0.603, 0.6389], [0.8794, 0.5012, 0.0258]], [[0.3538, 0.5785, 0.3906], [0.6659, 0.4254, 0.63]]], [[[0.3092, 0.8514, 0.4084], [0.2789, 0.7143, 0.2177]], [[0.1656, 0.1084, 0.7244], [0.6001, 0.9222, 0.2521]], [[0.1947, 0.8635, 0.7765], [0.2141, 0.0987, 0.9667]]], [[[0.1038, 0.5301, 0.1798], [0.7877, 0.2671, 0.0595]], [[0.2787, 0.3585, 0.1885], [0.6515, 0.8281, 0.2017]], [[0.6295, 0.2945, 0.7553], [0.3982, 0.4768, 0.6303]]]]], [[[[[0.4372, 0.8667, 0.9378], [0.8871, 0.4102, 0.0895]], [[0.3121, 0.8733, 0.254], [0.1807, 0.9261, 0.6595]], [[0.4412, 0.7597, 0.8888], [0.9731, 0.972, 0.5676]]], [[[0.564, 0.1322, 0.2971], [0.1423, 0.0369, 0.5525]], [[0.3753, 0.1563, 0.3995], [0.4751, 0.7062, 0.2122]], [[0.3787, 0.5853, 0.8343], [0.9889, 0.6887, 0.6168]]], [[[0.1288, 0.6389, 0.4991], [0.8701, 0.6104, 0.2453]], [[0.5825, 0.8141, 0.2167], [0.9673, 0.0277, 0.5823]], [[0.1784, 0.2231, 0.8887], [0.2309, 0.1112, 0.8937]]]]], Sub62705), 
LRes44701 = reshape_layer(Sub62705, [3, 3, 6], Res44701), 
LRes98393 = reshape_layer(Res44701, [3, 18], Res98393), 
LDot16019 = dot_layer([[[0.774, 0.0804, 0.0206], [0.0617, 0.1796, 0.3283], [0.6617, 0.2471, 0.3125]]], [[[0.3922, 0.6029, 0.4467], [0.2655, 0.1159, 0.8974], [0.5399, 0.6608, 0.0574]]], 2, 2, Dot16019), 
LSep17239 = separable_conv2D_layer([[[[0.4876]]]], 1, 1,[[[[[0.1748]]]],[[[[0.8805, 0.1875]]]]],[0, 0], 1, 1, true, Sep17239), 
LRes79261 = reshape_layer(Sep17239, [1, 2], Res79261), 
LPer57551 = permute_layer([[[1.7858], [1.3017]]], 2,1, Per57551), 
LAdd57452 = add_layer([Res79261,Per57551], Add57452), 
LZer55632 = zero_padding1D_layer(Add57452, 2, 0, Zer55632), 
LCon11108 = concatenate_layer([Zer55632,[[[0.9528], [0.1035], [0.8192]]]], 2, Con11108), 
LAdd10855 = add_layer([Dot16019,Con11108], Add10855), 
LCon18394 = concatenate_layer([Add10855,[[[0.6758, 0.0747, 0.3429, 0.1418, 0.7957, 0.9041, 0.6613, 0.8715, 0.8806, 0.7929, 0.9425, 0.6337, 0.5061, 0.7672, 0.1228], [0.6857, 0.002, 0.2179, 0.3023, 0.9237, 0.2731, 0.0306, 0.5518, 0.9419, 0.9594, 0.1654, 0.4596, 0.0889, 0.3796, 0.7075], [0.1747, 0.4483, 0.6835, 0.1404, 0.0088, 0.8584, 0.5111, 0.4805, 0.3645, 0.924, 0.2476, 0.9567, 0.8725, 0.4728, 0.6535]]]], 2, Con18394), 
LMin69569 = minimum_layer([Res98393,Con18394], Min69569), 
LDot69529 = dot_layer(Res1321,Min69569, 1, 1, Dot69529), 
LMax23370 = maximum_layer([[[[[0.566]]]], [[[[0.3336]]]]], Max23370), 
LRes95446 = reshape_layer(Max23370, [1, 1], Res95446), 
LCon25695 = concatenate_layer([Res95446,[[[0.9777]]]], 2, Con25695), 
LMin41889 = minimum_layer([[[[0.2023, 0.9464]]], [[[0.2503, 0.7911]]]], Min41889), 
LMax38822 = maximum_layer([Con25695,Min41889], Max38822), 
LZer65901 = zero_padding1D_layer(Max38822, 5, 0, Zer65901), 
LCon4671 = concatenate_layer([Zer65901,[[[0.1637, 0.9627, 0.826, 0.6903, 0.2073, 0.2302, 0.3591, 0.5216, 0.2431, 0.9872, 0.5928, 0.2599, 0.7363, 0.9924, 0.4886, 0.1638], [0.114, 0.8687, 0.2824, 0.6974, 0.9102, 0.2998, 0.399, 0.5942, 0.6078, 0.9182, 0.5674, 0.5379, 0.5317, 0.6857, 0.1565, 0.2922], [0.9846, 0.9477, 0.7271, 0.2501, 0.1851, 0.4951, 0.8057, 0.7995, 0.467, 0.9101, 0.927, 0.6049, 0.6294, 0.1898, 0.0588, 0.8874], [0.2896, 0.1428, 0.6323, 0.0575, 0.5834, 0.3371, 0.5277, 0.5979, 0.5813, 0.4391, 0.5349, 0.9248, 0.3466, 0.6316, 0.0032, 0.0676], [0.6462, 0.4196, 0.6223, 0.3957, 0.9448, 0.5466, 0.5341, 0.2958, 0.4607, 0.9254, 0.268, 0.6587, 0.7443, 0.4632, 0.31, 0.265], [0.4513, 0.4075, 0.4711, 0.6818, 0.7238, 0.3744, 0.6032, 0.0759, 0.8717, 0.5327, 0.6257, 0.4296, 0.8467, 0.5123, 0.2725, 0.0064]]]], 2, Con4671), 
LSub84023 = subtract_layer(Dot69529,Con4671, Sub84023), 
exec_layers([LSub13817,LRes1321,LSub62705,LRes44701,LRes98393,LDot16019,LSep17239,LRes79261,LPer57551,LAdd57452,LZer55632,LCon11108,LAdd10855,LCon18394,LMin69569,LDot69529,LMax23370,LRes95446,LCon25695,LMin41889,LMax38822,LZer65901,LCon4671,LSub84023],["Sub13817","Res1321","Sub62705","Res44701","Res98393","Dot16019","Sep17239","Res79261","Per57551","Add57452","Zer55632","Con11108","Add10855","Con18394","Min69569","Dot69529","Max23370","Res95446","Con25695","Min41889","Max38822","Zer65901","Con4671","Sub84023"],Sub84023,"Sub84023")

Actual (Unparsed): [[[-0.0797088, -0.0347063, -0.1686342, -1.0089974, -0.7625285, -0.6674986, -0.1805369, -0.2277503, -0.2240248, -0.3429185, -0.3482004, -1.0472066, -0.7118707, -0.2705511, -0.8255282, -1.2366012, -0.7686237, -0.0416251], [-0.0345618, 0.0308223, -0.0826066, -0.8589421, -0.2470280, -0.7098432, -0.9026402, -0.2715540, -0.3494420, -0.5381757, -0.6408754, -0.8983758, -0.6360623, -0.5302121, -0.5429511, -0.8082231, -0.2829348, -0.2215878], [-0.1156521, 0.2448319, -0.9817419, -0.8264073, -0.8740769, -0.5618406, -0.4404715, -0.6495808, -0.7427620, -1.0273854, -0.0875860, -0.9227663, -0.8314840, -0.4567294, -0.6214508, -0.4770044, -0.1273158, -0.8173670], [0.1789635, 0.1337381, -0.2105126, -0.0020886, -0.7269654, -0.1092721, -0.6129531, -0.2654991, -0.8320128, -0.9790249, -0.3898168, -0.2194229, -0.3382502, -0.8970753, -0.1076997, -0.1265892, 0.5704812, -0.2912638], [-0.0204629, -0.2751923, -0.8137502, -0.6041799, -0.6116455, -0.2324856, -0.8774688, -0.6578580, -0.4367652, -0.0772596, -0.6224826, -1.1765037, -0.2518001, -0.7445154, -0.9210871, -0.4533301, -0.4037981, -0.3055806], [-0.7132477, -1.2451406, -0.6150277, -0.6253630, -0.3970565, -0.5465399, -0.6642188, -0.5000380, -0.3159117, 0.3391330, -1.1081342, -0.8531609, -0.7591871, -0.5013727, -1.1342928, -0.8846134, -0.7568117, 0.1347084]]]

Expected (Unparsed): [[[-0.07970880999999998,-0.03470628937900007,-0.16863424000000002,-1.0089973700000001,-0.7625285599999999,-0.66749861,-0.18053688999999998,-0.22775033999999997,-0.22402473999999994,-0.34291850999999984,-0.34820046000000004,-1.04720652,-0.71187073,-0.27055112000000003,-0.82552818,-1.23660117,-0.76862366,-0.041625069999999986],[-0.03456176000000001,0.03082232686300001,-0.08260663000000001,-0.8589420600000001,-0.24702797999999998,-0.7098432,-0.90264023,-0.27155405000000005,-0.34944202999999996,-0.5381757399999999,-0.64087534,-0.89837575,-0.6360623400000001,-0.5302121000000001,-0.5429510599999999,-0.80822306,-0.28293476000000006,-0.22158778999999998],[-0.11565212000000001,0.244831912434,-0.9817418600000001,-0.8264072,-0.87407688,-0.5618406,-0.44047146,-0.6495808200000001,-0.7427619799999999,-1.02738544,-0.08758600000000005,-0.9227663000000002,-0.8314840400000001,-0.4567294,-0.6214507600000001,-0.4770044400000001,-0.12731584000000007,-0.81736698],[0.17896352999999998,0.13373805929399996,-0.21051262000000004,-0.002088630000000008,-0.7269653899999999,-0.10927210999999998,-0.61295312,-0.26549909000000005,-0.83201277,-0.9790249499999999,-0.38981675000000005,-0.21942287000000002,-0.3382501200000001,-0.89707532,-0.10769974000000002,-0.12658918000000008,0.57048118,-0.29126386000000004],[-0.020462849999999984,-0.275192287132,-0.81375021,-0.60417991,-0.61164548,-0.23248561,-0.87746876,-0.65785799,-0.43676521,-0.07725957,-0.62248262,-1.17650367,-0.25180009000000003,-0.7445154199999999,-0.9210871199999999,-0.45333001,-0.4037981,-0.30558058],[-0.71324775,-1.2451406474239999,-0.6150277199999999,-0.6253630699999999,-0.39705651,-0.5465398699999999,-0.66421882,-0.50003803,-0.31591167,0.33913301000000007,-1.1081341900000001,-0.8531608899999998,-0.75918708,-0.50137264,-1.13429274,-0.88461342,-0.7568117000000001,0.13470844000000004]]]

Actual:   [[[-0.0797, -0.0347, -0.1686, -1.0089, -0.7625, -0.6674, -0.1805, -0.2277, -0.224, -0.3429, -0.3482, -1.0472, -0.7118, -0.2705, -0.8255, -1.2366, -0.7686, -0.0416], [-0.0345, 0.0309, -0.0826, -0.8589, -0.247, -0.7098, -0.9026, -0.2715, -0.3494, -0.5381, -0.6408, -0.8983, -0.636, -0.5302, -0.5429, -0.8082, -0.2829, -0.2215], [-0.1156, 0.2449, -0.9817, -0.8264, -0.874, -0.5618, -0.4404, -0.6495, -0.7427, -1.0273, -0.0875, -0.9227, -0.8314, -0.4567, -0.6214, -0.477, -0.1273, -0.8173], [0.179, 0.1338, -0.2105, -0.002, -0.7269, -0.1092, -0.6129, -0.2654, -0.832, -0.979, -0.3898, -0.2194, -0.3382, -0.897, -0.1076, -0.1265, 0.5705, -0.2912], [-0.0204, -0.2751, -0.8137, -0.6041, -0.6116, -0.2324, -0.8774, -0.6578, -0.4367, -0.0772, -0.6224, -1.1765, -0.2518, -0.7445, -0.921, -0.4533, -0.4037, -0.3055], [-0.7132, -1.2451, -0.615, -0.6253, -0.397, -0.5465, -0.6642, -0.5, -0.3159, 0.3392, -1.1081, -0.8531, -0.7591, -0.5013, -1.1342, -0.8846, -0.7568, 0.1348]]]

Expected: [[[-0.0797, -0.0347, -0.1686, -1.0089, -0.7625, -0.6674, -0.1805, -0.2277, -0.224, -0.3429, -0.3482, -1.0472, -0.7118, -0.2705, -0.8255, -1.2366, -0.7686, -0.0416], [-0.0345, 0.0309, -0.0826, -0.8589, -0.247, -0.7098, -0.9026, -0.2715, -0.3494, -0.5381, -0.6408, -0.8983, -0.636, -0.5302, -0.5429, -0.8082, -0.2829, -0.2215], [-0.1156, 0.2449, -0.9817, -0.8264, -0.874, -0.5618, -0.4404, -0.6495, -0.7427, -1.0273, -0.0875, -0.9227, -0.8314, -0.4567, -0.6214, -0.477, -0.1273, -0.8173], [0.179, 0.1338, -0.2105, -0.002, -0.7269, -0.1092, -0.6129, -0.2654, -0.832, -0.979, -0.3898, -0.2194, -0.3382, -0.897, -0.1076, -0.1265, 0.5705, -0.2912], [-0.0204, -0.2751, -0.8137, -0.6041, -0.6116, -0.2324, -0.8774, -0.6578, -0.4367, -0.0772, -0.6224, -1.1765, -0.2518, -0.7445, -0.921, -0.4533, -0.4037, -0.3055], [-0.7132, -1.2451, -0.615, -0.6253, -0.397, -0.5465, -0.6642, -0.5, -0.3159, 0.3392, -1.1081, -0.8531, -0.7591, -0.5013, -1.1342, -0.8846, -0.7568, 0.1348]]]