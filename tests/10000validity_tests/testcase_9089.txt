import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Sep7481 = tf.keras.layers.Input(shape=([2, 2, 1]))
in0GRU29134 = tf.keras.layers.Input(shape=([1, 3]))
in0Con58569 = tf.keras.layers.Input(shape=([4, 3, 2]))

Sep7481 = keras.layers.SeparableConv2D(3, (2, 1),strides=(1, 1), padding='valid', name = 'Sep7481', )(in0Sep7481)
Zer76310 = keras.layers.ZeroPadding2D(padding=((3, 0), (1, 0)), name = 'Zer76310', )(Sep7481)
GRU29134 = keras.layers.GRU(2,reset_after=True, recurrent_activation='sigmoid', name = 'GRU29134', )(in0GRU29134)
Res54195 = keras.layers.Reshape((2, 1), name = 'Res54195', )(GRU29134)
Res44958 = keras.layers.Reshape((2, 1, 1), name = 'Res44958', )(Res54195)
Zer42571 = keras.layers.ZeroPadding2D(padding=((1, 1), (1, 1)), name = 'Zer42571', )(Res44958)
Con58569 = keras.layers.Concatenate(axis=3, name = 'Con58569', )([Zer42571,in0Con58569])
Add23507 = keras.layers.Add(name = 'Add23507', )([Zer76310,Con58569])
Res20588 = keras.layers.Reshape((4, 9), name = 'Res20588', )(Add23507)
Glo15971 = keras.layers.GlobalAveragePooling1D(name = 'Glo15971', )(Res20588)
model = tf.keras.models.Model(inputs=[in0Sep7481,in0GRU29134,in0Con58569], outputs=Glo15971)
w = model.get_layer('Sep7481').get_weights() 
w[0] = np.array([[[[0.7615]]], [[[0.7569]]]])
w[1] = np.array([[[[0.6207, 0.9539, 0.0634]]]])
w[2] = np.array([0, 0, 0])
model.get_layer('Sep7481').set_weights(w) 
w = model.get_layer('GRU29134').get_weights() 
w[0] = np.array([[10, 1, 7, 3, 2, 10], [1, 1, 6, 5, 6, 1], [8, 8, 3, 7, 8, 6]])
w[1] = np.array([[8, 8, 4, 6, 2, 4], [6, 9, 8, 8, 2, 4]])
w[2] = np.array([[8, 9, 1, 9, 2, 6], [7, 10, 7, 3, 9, 8]])
model.get_layer('GRU29134').set_weights(w) 
in0Sep7481 = tf.constant([[[[0.4349], [0.176]], [[0.4003], [0.7707]]]])
in0GRU29134 = tf.constant([[[5, 3, 2]]])
in0Con58569 = tf.constant([[[[0.4963, 0.3953], [0.9659, 0.2335], [0.7717, 0.3768]], [[0.0362, 0.9949], [0.5906, 0.4769], [0.5469, 0.5448]], [[0.0346, 0.0381], [0.3349, 0.4346], [0.8181, 0.5372]], [[0.1138, 0.1085], [0.9966, 0.2182], [0.2419, 0.4867]]]])
print (np.array2string(model.predict([in0Sep7481,in0GRU29134,in0Con58569],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Glo15971.png')

LSep7481 = separable_conv2D_layer([[[[0.4349], [0.176]], [[0.4003], [0.7707]]]], 2, 1,[[[[[0.7615]]], [[[0.7569]]]],[[[[0.6207, 0.9539, 0.0634]]]]],[0, 0, 0], 1, 1, false, Sep7481), 
LZer76310 = zero_padding2D_layer(Sep7481, 3, 0, 1, 0, Zer76310), 
LGRU29134 = gru_layer([[[5, 3, 2]]],[[10, 1, 7, 3, 2, 10], [1, 1, 6, 5, 6, 1], [8, 8, 3, 7, 8, 6]],[[8, 8, 4, 6, 2, 4], [6, 9, 8, 8, 2, 4]],[[8, 9, 1, 9, 2, 6], [7, 10, 7, 3, 9, 8]], true, GRU29134), 
LRes54195 = reshape_layer(GRU29134, [2, 1], Res54195), 
LRes44958 = reshape_layer(Res54195, [2, 1, 1], Res44958), 
LZer42571 = zero_padding2D_layer(Res44958, 1, 1, 1, 1, Zer42571), 
LCon58569 = concatenate_layer([Zer42571,[[[[0.4963, 0.3953], [0.9659, 0.2335], [0.7717, 0.3768]], [[0.0362, 0.9949], [0.5906, 0.4769], [0.5469, 0.5448]], [[0.0346, 0.0381], [0.3349, 0.4346], [0.8181, 0.5372]], [[0.1138, 0.1085], [0.9966, 0.2182], [0.2419, 0.4867]]]]], 3, Con58569), 
LAdd23507 = add_layer([Zer76310,Con58569], Add23507), 
LRes20588 = reshape_layer(Add23507, [4, 9], Res20588), 
LGlo15971 = global_average_pooling1D_layer(Res20588, Glo15971), 
exec_layers([LSep7481,LZer76310,LGRU29134,LRes54195,LRes44958,LZer42571,LCon58569,LAdd23507,LRes20588,LGlo15971],["Sep7481","Zer76310","GRU29134","Res54195","Res44958","Zer42571","Con58569","Add23507","Res20588","Glo15971"],Glo15971,"Glo15971")

Actual (Unparsed): [[0.0000000, 0.1702250, 0.3842000, 0.0984063, 0.8732321, 0.3508515, 0.1113174, 0.7657240, 0.4977453]]

Expected (Unparsed): [[0,0.170225,0.38420000000000004,0.0984063086985,0.8732321215845,0.350851490207,0.11131739784525002,0.7657240547842501,0.49774526425550003]]

Actual:   [[0, 0.1703, 0.3842, 0.0985, 0.8733, 0.3509, 0.1114, 0.7658, 0.4978]]

Expected: [[0, 0.1703, 0.3843, 0.0985, 0.8733, 0.3509, 0.1114, 0.7658, 0.4978]]