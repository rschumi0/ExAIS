import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Dot53006 = tf.keras.layers.Input(shape=([3, 3]))
in1Dot53006 = tf.keras.layers.Input(shape=([3, 3]))
in0Con77362 = tf.keras.layers.Input(shape=([3, 3]))
in0Dot14217 = tf.keras.layers.Input(shape=([3]))
in1Dot14217 = tf.keras.layers.Input(shape=([3]))
in0Con46845 = tf.keras.layers.Input(shape=([99]))
in0Con37619 = tf.keras.layers.Input(shape=([13, 3, 1]))
in0Add25585 = tf.keras.layers.Input(shape=([1, 2, 2]))
in1Add25585 = tf.keras.layers.Input(shape=([1, 2, 2]))
in0Con88955 = tf.keras.layers.Input(shape=([3, 13, 1, 3]))
in0Cro31834 = tf.keras.layers.Input(shape=([1, 4, 2, 4]))

Dot53006 = keras.layers.Dot(axes=(1, 1), name = 'Dot53006', )([in0Dot53006,in1Dot53006])
Con77362 = keras.layers.Concatenate(axis=2, name = 'Con77362', )([Dot53006,in0Con77362])
Dot14217 = keras.layers.Dot(axes=(1, 1), name = 'Dot14217', )([in0Dot14217,in1Dot14217])
Con46845 = keras.layers.Concatenate(axis=1, name = 'Con46845', )([Dot14217,in0Con46845])
Res33769 = keras.layers.Reshape((100, 1), name = 'Res33769', )(Con46845)
Sep80144 = keras.layers.SeparableConv1D(3, (32),strides=(8), padding='same', name = 'Sep80144', )(Res33769)
Res79876 = keras.layers.Reshape((13, 3, 1), name = 'Res79876', )(Sep80144)
Con37619 = keras.layers.Concatenate(axis=3, name = 'Con37619', )([Res79876,in0Con37619])
Add25585 = keras.layers.Add(name = 'Add25585', )([in0Add25585,in1Add25585])
Zer32678 = keras.layers.ZeroPadding2D(padding=((12, 0), (1, 0)), name = 'Zer32678', )(Add25585)
Max98096 = keras.layers.Maximum(name = 'Max98096', )([Con37619,Zer32678])
Res20395 = keras.layers.Reshape((13, 6), name = 'Res20395', )(Max98096)
Dot38007 = keras.layers.Dot(axes=(2, 2), name = 'Dot38007', )([Con77362,Res20395])
Res92181 = keras.layers.Reshape((3, 13, 1), name = 'Res92181', )(Dot38007)
Res73478 = keras.layers.Reshape((3, 13, 1, 1), name = 'Res73478', )(Res92181)
Con88955 = keras.layers.Concatenate(axis=4, name = 'Con88955', )([Res73478,in0Con88955])
Cro31834 = keras.layers.Cropping3D(cropping=((0, 0), (1, 1), (0, 1)), name = 'Cro31834', )(in0Cro31834)
Zer5457 = keras.layers.ZeroPadding3D(padding=((2, 0), (11, 0), (0, 0)), name = 'Zer5457', )(Cro31834)
Mul51402 = keras.layers.Multiply(name = 'Mul51402', )([Con88955,Zer5457])
model = tf.keras.models.Model(inputs=[in0Dot53006,in1Dot53006,in0Con77362,in0Dot14217,in1Dot14217,in0Con46845,in0Con37619,in0Add25585,in1Add25585,in0Con88955,in0Cro31834], outputs=Mul51402)
w = model.get_layer('Sep80144').get_weights() 
w[0] = np.array([[[0.2954]], [[0.8728]], [[0.7544]], [[0.8955]], [[0.9262]], [[0.1591]], [[0.3214]], [[0.0485]], [[0.874]], [[0.1876]], [[0.3517]], [[0.0465]], [[0.1058]], [[0.86]], [[0.9907]], [[0.2834]], [[0.3017]], [[0.3089]], [[0.3402]], [[0.7828]], [[0.5245]], [[0.0336]], [[0.844]], [[0.17]], [[0.489]], [[0.2024]], [[0.9965]], [[0.3308]], [[0.5772]], [[0.2314]], [[0.0499]], [[0.5427]]])
w[1] = np.array([[[0.519, 0.5856, 0.5905]]])
w[2] = np.array([0, 0, 0])
model.get_layer('Sep80144').set_weights(w) 
in0Dot53006 = tf.constant([[[0.5102, 0.6152, 0.4506], [0.9086, 0.4363, 0.7292], [0.1775, 0.6761, 0.8018]]])
in1Dot53006 = tf.constant([[[0.5062, 0.4718, 0.5006], [0.2209, 0.237, 0.2969], [0.9861, 0.3511, 0.9056]]])
in0Con77362 = tf.constant([[[0.6341, 0.3755, 0.9366], [0.0435, 0.8176, 0.8572], [0.8259, 0.2824, 0.5141]]])
in0Dot14217 = tf.constant([[0.7856, 0.542, 0.6083]])
in1Dot14217 = tf.constant([[0.6028, 0.1245, 0.6332]])
in0Con46845 = tf.constant([[0.0863, 0.6215, 0.264, 0.6555, 0.8639, 0.3624, 0.1605, 0.4923, 0.1633, 0.8888, 0.8455, 0.7464, 0.0685, 0.6998, 0.9065, 0.8037, 0.2167, 0.4062, 0.9496, 0.6753, 0.6777, 0.9067, 0.2016, 0.8228, 0.3509, 0.5759, 0.4442, 0.5948, 0.457, 0.3796, 0.1214, 0.7695, 0.7693, 0.5915, 0.2248, 0.2801, 0.9374, 0.4437, 0.4791, 0.1891, 0.635, 0.6124, 0.427, 0.3737, 0.2867, 0.9121, 0.2428, 0.1851, 0.8167, 0.9543, 0.4913, 0.5552, 0.2008, 0.8096, 0.5956, 0.6336, 0.6021, 0.9069, 0.4728, 0.0641, 0.5224, 0.5009, 0.6574, 0.4319, 0.7117, 0.0439, 0.2421, 0.2489, 0.5446, 0.7102, 0.1372, 0.0812, 0.1931, 0.137, 0.4705, 0.071, 0.205, 0.171, 0.438, 0.1545, 0.0301, 0.0388, 0.5454, 0.7368, 0.6293, 0.895, 0.9814, 0.4497, 0.5467, 0.1466, 0.8092, 0.8853, 0.7294, 0.2968, 0.7718, 0.8806, 0.9391, 0.3108, 0.7671]])
in0Con37619 = tf.constant([[[[0.3157], [0.184], [0.2312]], [[0.7997], [0.2129], [0.3161]], [[0.8723], [0.6455], [0.6146]], [[0.6715], [0.3221], [0.8861]], [[0.0471], [1], [0.5549]], [[0.3506], [0.5374], [0.0633]], [[0.0101], [0.5304], [0.2859]], [[0.4659], [0.5067], [0.3556]], [[0.8865], [0.8056], [0.0112]], [[0.0407], [0.0261], [0.5306]], [[0.6657], [0.5221], [0.5264]], [[0.6973], [0.9949], [0.52]], [[0.9221], [0.291], [0.6134]]]])
in0Add25585 = tf.constant([[[[0.8888, 0.0678], [0.493, 0.6144]]]])
in1Add25585 = tf.constant([[[[0.4474, 0.1129], [0.5225, 0.9653]]]])
in0Con88955 = tf.constant([[[[[0.0702, 0.4891, 0.8807]], [[0.94, 0.7411, 0.6016]], [[0.9301, 0.5806, 0.4304]], [[0.2626, 0.5948, 0.7119]], [[0.1333, 0.7555, 0.9386]], [[0.4574, 0.6372, 0.3817]], [[0.3257, 0.9978, 0.4271]], [[0.1814, 0.3564, 0.2115]], [[0.068, 0.2532, 0.1074]], [[0.6496, 0.5041, 0.6324]], [[0.4271, 0.3014, 0.624]], [[0.0348, 0.1426, 0.2878]], [[0.9972, 0.0309, 0.2996]]], [[[0.6979, 0.9049, 0.3725]], [[0.972, 0.2776, 0.6587]], [[0.2647, 0.7569, 0.5707]], [[0.7298, 0.3471, 0.7988]], [[0.419, 0.3966, 0.03]], [[0.0776, 0.4314, 0.4582]], [[0.6165, 0.7361, 0.1501]], [[0.0586, 0.3334, 0.4249]], [[0.1602, 0.8207, 0.9936]], [[0.9983, 0.3158, 0.2975]], [[0.5169, 0.407, 0.5914]], [[0.2146, 0.9468, 0.3042]], [[0.8017, 0.0995, 0.9191]]], [[[0.7036, 0.5838, 0.6725]], [[0.762, 0.0132, 0.5841]], [[0.8071, 0.5353, 0.9034]], [[0.7507, 0.9604, 0.355]], [[0.7628, 0.9978, 0.7194]], [[0.2906, 0.9468, 0.2775]], [[0.5132, 0.9708, 0.6274]], [[0.2715, 0.6012, 0.7888]], [[0.8185, 0.4999, 0.1626]], [[0.26, 0.0682, 0.6309]], [[0.6832, 0.6504, 0.3845]], [[0.1713, 0.8674, 0.4698]], [[0.1936, 0.5231, 0.9847]]]]])
in0Cro31834 = tf.constant([[[[[1.6048, 1.6749, 1.746, 1.0341], [1.145, 1.0007, 1.4469, 1.9999]], [[1.2186, 1.3468, 1.3093, 1.5477], [1.6054, 1.3703, 1.3185, 1.5992]], [[1.7679, 1.2945, 1.7829, 1.5183], [1.5083, 1.894, 1.9744, 1.9112]], [[1.2308, 1.633, 1.8364, 1.8288], [1.7796, 1.6126, 1.4477, 1.3832]]]]])
print (np.array2string(model.predict([in0Dot53006,in1Dot53006,in0Con77362,in0Dot14217,in1Dot14217,in0Con46845,in0Con37619,in0Add25585,in1Add25585,in0Con88955,in0Cro31834],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Mul51402.png')

LDot53006 = dot_layer([[[0.5102, 0.6152, 0.4506], [0.9086, 0.4363, 0.7292], [0.1775, 0.6761, 0.8018]]], [[[0.5062, 0.4718, 0.5006], [0.2209, 0.237, 0.2969], [0.9861, 0.3511, 0.9056]]], 1, 1, Dot53006), 
LCon77362 = concatenate_layer([Dot53006,[[[0.6341, 0.3755, 0.9366], [0.0435, 0.8176, 0.8572], [0.8259, 0.2824, 0.5141]]]], 2, Con77362), 
LDot14217 = dot_layer([[0.7856, 0.542, 0.6083]], [[0.6028, 0.1245, 0.6332]], 1, 1, Dot14217), 
LCon46845 = concatenate_layer([Dot14217,[[0.0863, 0.6215, 0.264, 0.6555, 0.8639, 0.3624, 0.1605, 0.4923, 0.1633, 0.8888, 0.8455, 0.7464, 0.0685, 0.6998, 0.9065, 0.8037, 0.2167, 0.4062, 0.9496, 0.6753, 0.6777, 0.9067, 0.2016, 0.8228, 0.3509, 0.5759, 0.4442, 0.5948, 0.457, 0.3796, 0.1214, 0.7695, 0.7693, 0.5915, 0.2248, 0.2801, 0.9374, 0.4437, 0.4791, 0.1891, 0.635, 0.6124, 0.427, 0.3737, 0.2867, 0.9121, 0.2428, 0.1851, 0.8167, 0.9543, 0.4913, 0.5552, 0.2008, 0.8096, 0.5956, 0.6336, 0.6021, 0.9069, 0.4728, 0.0641, 0.5224, 0.5009, 0.6574, 0.4319, 0.7117, 0.0439, 0.2421, 0.2489, 0.5446, 0.7102, 0.1372, 0.0812, 0.1931, 0.137, 0.4705, 0.071, 0.205, 0.171, 0.438, 0.1545, 0.0301, 0.0388, 0.5454, 0.7368, 0.6293, 0.895, 0.9814, 0.4497, 0.5467, 0.1466, 0.8092, 0.8853, 0.7294, 0.2968, 0.7718, 0.8806, 0.9391, 0.3108, 0.7671]]], 1, Con46845), 
LRes33769 = reshape_layer(Con46845, [100, 1], Res33769), 
LSep80144 = separable_conv1D_layer(Res33769, 32,[[[[0.2954]], [[0.8728]], [[0.7544]], [[0.8955]], [[0.9262]], [[0.1591]], [[0.3214]], [[0.0485]], [[0.874]], [[0.1876]], [[0.3517]], [[0.0465]], [[0.1058]], [[0.86]], [[0.9907]], [[0.2834]], [[0.3017]], [[0.3089]], [[0.3402]], [[0.7828]], [[0.5245]], [[0.0336]], [[0.844]], [[0.17]], [[0.489]], [[0.2024]], [[0.9965]], [[0.3308]], [[0.5772]], [[0.2314]], [[0.0499]], [[0.5427]]],[[[0.519, 0.5856, 0.5905]]]],[0, 0, 0], 8, true, Sep80144), 
LRes79876 = reshape_layer(Sep80144, [13, 3, 1], Res79876), 
LCon37619 = concatenate_layer([Res79876,[[[[0.3157], [0.184], [0.2312]], [[0.7997], [0.2129], [0.3161]], [[0.8723], [0.6455], [0.6146]], [[0.6715], [0.3221], [0.8861]], [[0.0471], [1], [0.5549]], [[0.3506], [0.5374], [0.0633]], [[0.0101], [0.5304], [0.2859]], [[0.4659], [0.5067], [0.3556]], [[0.8865], [0.8056], [0.0112]], [[0.0407], [0.0261], [0.5306]], [[0.6657], [0.5221], [0.5264]], [[0.6973], [0.9949], [0.52]], [[0.9221], [0.291], [0.6134]]]]], 3, Con37619), 
LAdd25585 = add_layer([[[[[0.8888, 0.0678], [0.493, 0.6144]]]], [[[[0.4474, 0.1129], [0.5225, 0.9653]]]]], Add25585), 
LZer32678 = zero_padding2D_layer(Add25585, 12, 0, 1, 0, Zer32678), 
LMax98096 = maximum_layer([Con37619,Zer32678], Max98096), 
LRes20395 = reshape_layer(Max98096, [13, 6], Res20395), 
LDot38007 = dot_layer(Con77362,Res20395, 2, 2, Dot38007), 
LRes92181 = reshape_layer(Dot38007, [3, 13, 1], Res92181), 
LRes73478 = reshape_layer(Res92181, [3, 13, 1, 1], Res73478), 
LCon88955 = concatenate_layer([Res73478,[[[[[0.0702, 0.4891, 0.8807]], [[0.94, 0.7411, 0.6016]], [[0.9301, 0.5806, 0.4304]], [[0.2626, 0.5948, 0.7119]], [[0.1333, 0.7555, 0.9386]], [[0.4574, 0.6372, 0.3817]], [[0.3257, 0.9978, 0.4271]], [[0.1814, 0.3564, 0.2115]], [[0.068, 0.2532, 0.1074]], [[0.6496, 0.5041, 0.6324]], [[0.4271, 0.3014, 0.624]], [[0.0348, 0.1426, 0.2878]], [[0.9972, 0.0309, 0.2996]]], [[[0.6979, 0.9049, 0.3725]], [[0.972, 0.2776, 0.6587]], [[0.2647, 0.7569, 0.5707]], [[0.7298, 0.3471, 0.7988]], [[0.419, 0.3966, 0.03]], [[0.0776, 0.4314, 0.4582]], [[0.6165, 0.7361, 0.1501]], [[0.0586, 0.3334, 0.4249]], [[0.1602, 0.8207, 0.9936]], [[0.9983, 0.3158, 0.2975]], [[0.5169, 0.407, 0.5914]], [[0.2146, 0.9468, 0.3042]], [[0.8017, 0.0995, 0.9191]]], [[[0.7036, 0.5838, 0.6725]], [[0.762, 0.0132, 0.5841]], [[0.8071, 0.5353, 0.9034]], [[0.7507, 0.9604, 0.355]], [[0.7628, 0.9978, 0.7194]], [[0.2906, 0.9468, 0.2775]], [[0.5132, 0.9708, 0.6274]], [[0.2715, 0.6012, 0.7888]], [[0.8185, 0.4999, 0.1626]], [[0.26, 0.0682, 0.6309]], [[0.6832, 0.6504, 0.3845]], [[0.1713, 0.8674, 0.4698]], [[0.1936, 0.5231, 0.9847]]]]]], 4, Con88955), 
LCro31834 = cropping3D_layer([[[[[1.6048, 1.6749, 1.746, 1.0341], [1.145, 1.0007, 1.4469, 1.9999]], [[1.2186, 1.3468, 1.3093, 1.5477], [1.6054, 1.3703, 1.3185, 1.5992]], [[1.7679, 1.2945, 1.7829, 1.5183], [1.5083, 1.894, 1.9744, 1.9112]], [[1.2308, 1.633, 1.8364, 1.8288], [1.7796, 1.6126, 1.4477, 1.3832]]]]], 0, 0, 1, 1, 0, 1, Cro31834), 
LZer5457 = zero_padding3D_layer(Cro31834, 2, 0, 11, 0, 0, 0, Zer5457), 
LMul51402 = multiply_layer([Con88955,Zer5457], Mul51402), 
exec_layers([LDot53006,LCon77362,LDot14217,LCon46845,LRes33769,LSep80144,LRes79876,LCon37619,LAdd25585,LZer32678,LMax98096,LRes20395,LDot38007,LRes92181,LRes73478,LCon88955,LCro31834,LZer5457,LMul51402],["Dot53006","Con77362","Dot14217","Con46845","Res33769","Sep80144","Res79876","Con37619","Add25585","Zer32678","Max98096","Res20395","Dot38007","Res92181","Res73478","Con88955","Cro31834","Zer5457","Mul51402"],Mul51402,"Mul51402")

Actual (Unparsed): [[[[[0.0000000, 0.0000000, 0.0000000, 0.0000000]], [[0.0000000, 0.0000000, 0.0000000, 0.0000000]], [[0.0000000, 0.0000000, 0.0000000, 0.0000000]], [[0.0000000, 0.0000000, 0.0000000, 0.0000000]], [[0.0000000, 0.0000000, 0.0000000, 0.0000000]], [[0.0000000, 0.0000000, 0.0000000, 0.0000000]], [[0.0000000, 0.0000000, 0.0000000, 0.0000000]], [[0.0000000, 0.0000000, 0.0000000, 0.0000000]], [[0.0000000, 0.0000000, 0.0000000, 0.0000000]], [[0.0000000, 0.0000000, 0.0000000, 0.0000000]], [[0.0000000, 0.0000000, 0.0000000, 0.0000000]], [[0.0000000, 0.0000000, 0.0000000, 0.0000000]], [[0.0000000, 0.0000000, 0.0000000, 0.0000000]]], [[[0.0000000, 0.0000000, 0.0000000, 0.0000000]], [[0.0000000, 0.0000000, 0.0000000, 0.0000000]], [[0.0000000, 0.0000000, 0.0000000, 0.0000000]], [[0.0000000, 0.0000000, 0.0000000, 0.0000000]], [[0.0000000, 0.0000000, 0.0000000, 0.0000000]], [[0.0000000, 0.0000000, 0.0000000, 0.0000000]], [[0.0000000, 0.0000000, 0.0000000, 0.0000000]], [[0.0000000, 0.0000000, 0.0000000, 0.0000000]], [[0.0000000, 0.0000000, 0.0000000, 0.0000000]], [[0.0000000, 0.0000000, 0.0000000, 0.0000000]], [[0.0000000, 0.0000000, 0.0000000, 0.0000000]], [[0.0000000, 0.0000000, 0.0000000, 0.0000000]], [[0.0000000, 0.0000000, 0.0000000, 0.0000000]]], [[[0.0000000, 0.0000000, 0.0000000, 0.0000000]], [[0.0000000, 0.0000000, 0.0000000, 0.0000000]], [[0.0000000, 0.0000000, 0.0000000, 0.0000000]], [[0.0000000, 0.0000000, 0.0000000, 0.0000000]], [[0.0000000, 0.0000000, 0.0000000, 0.0000000]], [[0.0000000, 0.0000000, 0.0000000, 0.0000000]], [[0.0000000, 0.0000000, 0.0000000, 0.0000000]], [[0.0000000, 0.0000000, 0.0000000, 0.0000000]], [[0.0000000, 0.0000000, 0.0000000, 0.0000000]], [[0.0000000, 0.0000000, 0.0000000, 0.0000000]], [[0.0000000, 0.0000000, 0.0000000, 0.0000000]], [[11.6813064, 0.2307068, 1.1356868, 0.7271095]], [[17.3111330, 0.2506152, 0.9326350, 1.4950701]]]]]

Expected (Unparsed): [[[[[0.0,0.0,0.0,0.0]],[[0.0,0.0,0.0,0.0]],[[0.0,0.0,0.0,0.0]],[[0.0,0.0,0.0,0.0]],[[0.0,0.0,0.0,0.0]],[[0.0,0.0,0.0,0.0]],[[0.0,0.0,0.0,0.0]],[[0.0,0.0,0.0,0.0]],[[0.0,0.0,0.0,0.0]],[[0.0,0.0,0.0,0.0]],[[0.0,0.0,0.0,0.0]],[[0.0,0.0,0.0,0.0]],[[0.0,0.0,0.0,0.0]]],[[[0.0,0.0,0.0,0.0]],[[0.0,0.0,0.0,0.0]],[[0.0,0.0,0.0,0.0]],[[0.0,0.0,0.0,0.0]],[[0.0,0.0,0.0,0.0]],[[0.0,0.0,0.0,0.0]],[[0.0,0.0,0.0,0.0]],[[0.0,0.0,0.0,0.0]],[[0.0,0.0,0.0,0.0]],[[0.0,0.0,0.0,0.0]],[[0.0,0.0,0.0,0.0]],[[0.0,0.0,0.0,0.0]],[[0.0,0.0,0.0,0.0]]],[[[0.0,0.0,0.0,0.0]],[[0.0,0.0,0.0,0.0]],[[0.0,0.0,0.0,0.0]],[[0.0,0.0,0.0,0.0]],[[0.0,0.0,0.0,0.0]],[[0.0,0.0,0.0,0.0]],[[0.0,0.0,0.0,0.0]],[[0.0,0.0,0.0,0.0]],[[0.0,0.0,0.0,0.0]],[[0.0,0.0,0.0,0.0]],[[0.0,0.0,0.0,0.0]],[[11.681305895189347,0.23070684,1.1356868199999999,0.72710946]],[[17.31113270874458,0.2506152,0.9326349899999999,1.49507001]]]]]

Actual:   [[[[[0, 0, 0, 0]], [[0, 0, 0, 0]], [[0, 0, 0, 0]], [[0, 0, 0, 0]], [[0, 0, 0, 0]], [[0, 0, 0, 0]], [[0, 0, 0, 0]], [[0, 0, 0, 0]], [[0, 0, 0, 0]], [[0, 0, 0, 0]], [[0, 0, 0, 0]], [[0, 0, 0, 0]], [[0, 0, 0, 0]]], [[[0, 0, 0, 0]], [[0, 0, 0, 0]], [[0, 0, 0, 0]], [[0, 0, 0, 0]], [[0, 0, 0, 0]], [[0, 0, 0, 0]], [[0, 0, 0, 0]], [[0, 0, 0, 0]], [[0, 0, 0, 0]], [[0, 0, 0, 0]], [[0, 0, 0, 0]], [[0, 0, 0, 0]], [[0, 0, 0, 0]]], [[[0, 0, 0, 0]], [[0, 0, 0, 0]], [[0, 0, 0, 0]], [[0, 0, 0, 0]], [[0, 0, 0, 0]], [[0, 0, 0, 0]], [[0, 0, 0, 0]], [[0, 0, 0, 0]], [[0, 0, 0, 0]], [[0, 0, 0, 0]], [[0, 0, 0, 0]], [[11.6814, 0.2308, 1.1357, 0.7272]], [[17.3112, 0.2507, 0.9327, 1.4951]]]]]

Expected: [[[[[0, 0, 0, 0]], [[0, 0, 0, 0]], [[0, 0, 0, 0]], [[0, 0, 0, 0]], [[0, 0, 0, 0]], [[0, 0, 0, 0]], [[0, 0, 0, 0]], [[0, 0, 0, 0]], [[0, 0, 0, 0]], [[0, 0, 0, 0]], [[0, 0, 0, 0]], [[0, 0, 0, 0]], [[0, 0, 0, 0]]], [[[0, 0, 0, 0]], [[0, 0, 0, 0]], [[0, 0, 0, 0]], [[0, 0, 0, 0]], [[0, 0, 0, 0]], [[0, 0, 0, 0]], [[0, 0, 0, 0]], [[0, 0, 0, 0]], [[0, 0, 0, 0]], [[0, 0, 0, 0]], [[0, 0, 0, 0]], [[0, 0, 0, 0]], [[0, 0, 0, 0]]], [[[0, 0, 0, 0]], [[0, 0, 0, 0]], [[0, 0, 0, 0]], [[0, 0, 0, 0]], [[0, 0, 0, 0]], [[0, 0, 0, 0]], [[0, 0, 0, 0]], [[0, 0, 0, 0]], [[0, 0, 0, 0]], [[0, 0, 0, 0]], [[0, 0, 0, 0]], [[11.6814, 0.2308, 1.1357, 0.7272]], [[17.3112, 0.2507, 0.9327, 1.4951]]]]]