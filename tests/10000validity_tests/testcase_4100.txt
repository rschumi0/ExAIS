import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Sub64369 = tf.keras.layers.Input(shape=([2, 3, 2, 2]))
in1Sub64369 = tf.keras.layers.Input(shape=([2, 3, 2, 2]))
in0Con67543 = tf.keras.layers.Input(shape=([2, 2, 6, 1]))
in0Ave31595 = tf.keras.layers.Input(shape=([2, 2, 2, 2]))
in1Ave31595 = tf.keras.layers.Input(shape=([2, 2, 2, 2]))
in0Bat17117 = tf.keras.layers.Input(shape=([2, 2]))
in0Con95815 = tf.keras.layers.Input(shape=([2, 22]))

Sub64369 = keras.layers.Subtract(name = 'Sub64369', )([in0Sub64369,in1Sub64369])
Res54504 = keras.layers.Reshape((2, 3, 4), name = 'Res54504', )(Sub64369)
Max87307 = keras.layers.MaxPool2D(pool_size=(1, 2), strides=(10, 3), padding='valid', name = 'Max87307', )(Res54504)
Res1649 = keras.layers.Reshape((1, 1, 4, 1), name = 'Res1649', )(Max87307)
Zer20450 = keras.layers.ZeroPadding3D(padding=((1, 0), (1, 0), (2, 0)), name = 'Zer20450', )(Res1649)
Con67543 = keras.layers.Concatenate(axis=4, name = 'Con67543', )([Zer20450,in0Con67543])
Ave31595 = keras.layers.Average(name = 'Ave31595', )([in0Ave31595,in1Ave31595])
Zer48778 = keras.layers.ZeroPadding3D(padding=((0, 0), (0, 0), (4, 0)), name = 'Zer48778', )(Ave31595)
Sub38806 = keras.layers.Subtract(name = 'Sub38806', )([Con67543,Zer48778])
Res65865 = keras.layers.Reshape((2, 2, 12), name = 'Res65865', )(Sub38806)
Res30667 = keras.layers.Reshape((2, 24), name = 'Res30667', )(Res65865)
Ave60934 = keras.layers.AveragePooling1D(pool_size=(2), name = 'Ave60934', )(Res30667)
Zer12799 = keras.layers.ZeroPadding1D(padding=((1, 0)), name = 'Zer12799', )(Ave60934)
Bat17117 = keras.layers.BatchNormalization(axis=1, epsilon=0.46010305108115634,  name = 'Bat17117', )(in0Bat17117)
Lay60387 = keras.layers.LayerNormalization(axis=1, epsilon=1.3810457151591933, name = 'Lay60387', )(Bat17117)
Con95815 = keras.layers.Concatenate(axis=2, name = 'Con95815', )([Lay60387,in0Con95815])
Sub21807 = keras.layers.Subtract(name = 'Sub21807', )([Zer12799,Con95815])
model = tf.keras.models.Model(inputs=[in0Sub64369,in1Sub64369,in0Con67543,in0Ave31595,in1Ave31595,in0Bat17117,in0Con95815], outputs=Sub21807)
w = model.get_layer('Bat17117').get_weights() 
w[0] = np.array([0.2802, 0.1025])
w[1] = np.array([0.596, 0.3592])
w[2] = np.array([0.1368, 0.5814])
w[3] = np.array([0.9514, 0.9639])
model.get_layer('Bat17117').set_weights(w) 
in0Sub64369 = tf.constant([[[[[0.4343, 0.4813], [0.8728, 0.6049]], [[0.5463, 0.9837], [0.9734, 0.8783]], [[0.4646, 0.5661], [0.0432, 0.3697]]], [[[0.4536, 0.6792], [0.3467, 0.5398]], [[0.2611, 0.1001], [0.6859, 0.0071]], [[0.7234, 0.8059], [0.8088, 0.5291]]]]])
in1Sub64369 = tf.constant([[[[[0.681, 0.968], [0.6251, 0.9741]], [[0.6701, 0.4849], [0.3788, 0.5781]], [[0.5112, 0.5735], [0.7809, 0.2068]]], [[[0.2247, 0.9439], [0.1239, 0.1765]], [[0.6681, 0.9897], [0.5623, 0.4275]], [[0.914, 0.2499], [0.0726, 0.4869]]]]])
in0Con67543 = tf.constant([[[[[0.825], [0.227], [0.1793], [0.0786], [0.1097], [0.7764]], [[0.5608], [0.0805], [0.5567], [0.3209], [0.8619], [0.4023]]], [[[0.7674], [0.7543], [0.175], [0.2702], [0.5322], [0.6114]], [[0.3344], [0.3929], [0.4432], [0.0235], [0.9621], [0.2874]]]]])
in0Ave31595 = tf.constant([[[[[0.6636, 0.1148], [0.0871, 0.7125]], [[0.9276, 0.3848], [0.432, 0.7646]]], [[[0.7947, 0.8215], [0.9961, 0.1197]], [[0.3568, 0.2779], [0.5052, 0.707]]]]])
in1Ave31595 = tf.constant([[[[[0.7634, 0.3382], [0.8839, 0.4292]], [[0.9351, 0.6577], [0.9513, 0.4091]]], [[[0.6846, 0.3497], [0.6123, 0.2949]], [[0.8644, 0.8369], [0.2843, 0.8504]]]]])
in0Bat17117 = tf.constant([[[1.6878, 1.5569], [1.03, 1.3605]]])
in0Con95815 = tf.constant([[[0.5249, 0.4124, 0.7763, 0.2463, 0.1224, 0.5339, 0.0848, 0.3579, 0.4617, 0.5428, 0.4385, 0.9832, 0.8324, 0.7605, 0.7386, 0.1158, 0.6548, 0.7731, 0.8629, 0.2785, 0.0253, 0.0227], [0.9837, 0.473, 0.1261, 0.0826, 0.1918, 0.0606, 0.4188, 0.0594, 0.6864, 0.2108, 0.0751, 0.3594, 0.6573, 0.7973, 0.5425, 0.0094, 0.2527, 0.5255, 0.4893, 0.8241, 0.7068, 0.6369]]])
print (np.array2string(model.predict([in0Sub64369,in1Sub64369,in0Con67543,in0Ave31595,in1Ave31595,in0Bat17117,in0Con95815],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Sub21807.png')

LSub64369 = subtract_layer([[[[[0.4343, 0.4813], [0.8728, 0.6049]], [[0.5463, 0.9837], [0.9734, 0.8783]], [[0.4646, 0.5661], [0.0432, 0.3697]]], [[[0.4536, 0.6792], [0.3467, 0.5398]], [[0.2611, 0.1001], [0.6859, 0.0071]], [[0.7234, 0.8059], [0.8088, 0.5291]]]]], [[[[[0.681, 0.968], [0.6251, 0.9741]], [[0.6701, 0.4849], [0.3788, 0.5781]], [[0.5112, 0.5735], [0.7809, 0.2068]]], [[[0.2247, 0.9439], [0.1239, 0.1765]], [[0.6681, 0.9897], [0.5623, 0.4275]], [[0.914, 0.2499], [0.0726, 0.4869]]]]], Sub64369), 
LRes54504 = reshape_layer(Sub64369, [2, 3, 4], Res54504), 
LMax87307 = max_pool2D_layer(Res54504, 1, 2, 10, 3, false, Max87307), 
LRes1649 = reshape_layer(Max87307, [1, 1, 4, 1], Res1649), 
LZer20450 = zero_padding3D_layer(Res1649, 1, 0, 1, 0, 2, 0, Zer20450), 
LCon67543 = concatenate_layer([Zer20450,[[[[[0.825], [0.227], [0.1793], [0.0786], [0.1097], [0.7764]], [[0.5608], [0.0805], [0.5567], [0.3209], [0.8619], [0.4023]]], [[[0.7674], [0.7543], [0.175], [0.2702], [0.5322], [0.6114]], [[0.3344], [0.3929], [0.4432], [0.0235], [0.9621], [0.2874]]]]]], 4, Con67543), 
LAve31595 = average_layer([[[[[[0.6636, 0.1148], [0.0871, 0.7125]], [[0.9276, 0.3848], [0.432, 0.7646]]], [[[0.7947, 0.8215], [0.9961, 0.1197]], [[0.3568, 0.2779], [0.5052, 0.707]]]]], [[[[[0.7634, 0.3382], [0.8839, 0.4292]], [[0.9351, 0.6577], [0.9513, 0.4091]]], [[[0.6846, 0.3497], [0.6123, 0.2949]], [[0.8644, 0.8369], [0.2843, 0.8504]]]]]], Ave31595), 
LZer48778 = zero_padding3D_layer(Ave31595, 0, 0, 0, 0, 4, 0, Zer48778), 
LSub38806 = subtract_layer(Con67543,Zer48778, Sub38806), 
LRes65865 = reshape_layer(Sub38806, [2, 2, 12], Res65865), 
LRes30667 = reshape_layer(Res65865, [2, 24], Res30667), 
LAve60934 = average_pooling1D_layer(Res30667, 2, Ave60934), 
LZer12799 = zero_padding1D_layer(Ave60934, 1, 0, Zer12799), 
LBat17117 = batch_normalization_layer([[[1.6878, 1.5569], [1.03, 1.3605]]], 1, 0.46010305108115634, [0.2802, 0.1025], [0.596, 0.3592], [0.1368, 0.5814], [0.9514, 0.9639], Bat17117), 
LLay60387 = layer_normalization_layer(Bat17117, 1, 1.3810457151591933, Lay60387), 
LCon95815 = concatenate_layer([Lay60387,[[[0.5249, 0.4124, 0.7763, 0.2463, 0.1224, 0.5339, 0.0848, 0.3579, 0.4617, 0.5428, 0.4385, 0.9832, 0.8324, 0.7605, 0.7386, 0.1158, 0.6548, 0.7731, 0.8629, 0.2785, 0.0253, 0.0227], [0.9837, 0.473, 0.1261, 0.0826, 0.1918, 0.0606, 0.4188, 0.0594, 0.6864, 0.2108, 0.0751, 0.3594, 0.6573, 0.7973, 0.5425, 0.0094, 0.2527, 0.5255, 0.4893, 0.8241, 0.7068, 0.6369]]]], 2, Con95815), 
LSub21807 = subtract_layer(Zer12799,Con95815, Sub21807), 
exec_layers([LSub64369,LRes54504,LMax87307,LRes1649,LZer20450,LCon67543,LAve31595,LZer48778,LSub38806,LRes65865,LRes30667,LAve60934,LZer12799,LBat17117,LLay60387,LCon95815,LSub21807],["Sub64369","Res54504","Max87307","Res1649","Zer20450","Con67543","Ave31595","Zer48778","Sub38806","Res65865","Res30667","Ave60934","Zer12799","Bat17117","Lay60387","Con95815","Sub21807"],Sub21807,"Sub21807")

Actual (Unparsed): [[[-0.2333642, -0.2099884, -0.5249000, -0.4124000, -0.7763000, -0.2463000, -0.1224000, -0.5339000, -0.0848000, -0.3579000, -0.4617000, -0.5428000, -0.4385000, -0.9832000, -0.8324000, -0.7605000, -0.7386000, -0.1158000, -0.6548000, -0.7731000, -0.8629000, -0.2785000, -0.0253000, -0.0227000], [0.2333642, 1.0061884, -0.9837000, 0.0176500, -0.1261000, 0.0945500, -0.1918000, 0.1138000, -1.1453750, -0.1445000, -1.3312500, 0.0940250, -0.0751000, 0.0882000, -0.6573000, -0.5606000, -0.6044000, 0.4905500, -0.0033000, -0.3533000, -0.9629750, -0.4514250, -1.0999000, -0.9748250]]]

Expected (Unparsed): [[[-0.23336418422435362,-0.20998838345774018,-0.5249,-0.4124,-0.7763,-0.2463,-0.1224,-0.5339,-0.0848,-0.3579,-0.4617,-0.5428,-0.4385,-0.9832,-0.8324,-0.7605,-0.7386,-0.1158,-0.6548,-0.7731,-0.8629,-0.2785,-0.0253,-0.0227],[0.2333641842243537,1.00618838345774,-0.9837,0.01765,-0.1261,0.09454999999999997,-0.1918,0.1138,-1.145375,-0.14450000000000002,-1.33125,0.09402500000000003,-0.0751,0.0882,-0.6573,-0.5606,-0.6044,0.49055,-0.0032999999999999696,-0.35329999999999995,-0.962975,-0.4514250000000001,-1.0998999999999999,-0.974825]]]

Actual:   [[[-0.2333, -0.2099, -0.5249, -0.4124, -0.7763, -0.2463, -0.1224, -0.5339, -0.0848, -0.3579, -0.4617, -0.5428, -0.4385, -0.9832, -0.8324, -0.7605, -0.7386, -0.1158, -0.6548, -0.7731, -0.8629, -0.2785, -0.0253, -0.0227], [0.2334, 1.0062, -0.9837, 0.0177, -0.1261, 0.0946, -0.1918, 0.1138, -1.1453, -0.1445, -1.3312, 0.0941, -0.0751, 0.0882, -0.6573, -0.5606, -0.6044, 0.4906, -0.0033, -0.3533, -0.9629, -0.4514, -1.0999, -0.9748]]]

Expected: [[[-0.2333, -0.2099, -0.5249, -0.4124, -0.7763, -0.2463, -0.1224, -0.5339, -0.0848, -0.3579, -0.4617, -0.5428, -0.4385, -0.9832, -0.8324, -0.7605, -0.7386, -0.1158, -0.6548, -0.7731, -0.8629, -0.2785, -0.0253, -0.0227], [0.2334, 1.0062, -0.9837, 0.0177, -0.1261, 0.0946, -0.1918, 0.1138, -1.1453, -0.1445, -1.3312, 0.0941, -0.0751, 0.0882, -0.6573, -0.5606, -0.6044, 0.4906, -0.0032, -0.3532, -0.9629, -0.4514, -1.0998, -0.9748]]]