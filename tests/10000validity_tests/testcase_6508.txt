import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Dot93284 = tf.keras.layers.Input(shape=([2]))
in1Dot93284 = tf.keras.layers.Input(shape=([2]))

Dot93284 = keras.layers.Dot(axes=(1, 1), name = 'Dot93284', )([in0Dot93284,in1Dot93284])
Res42942 = keras.layers.Reshape((1, 1), name = 'Res42942', )(Dot93284)
Res16773 = keras.layers.Reshape((1, 1, 1), name = 'Res16773', )(Res42942)
Res92447 = keras.layers.Reshape((1, 1, 1, 1), name = 'Res92447', )(Res16773)
Con18393 = keras.layers.Conv3DTranspose(3, (1, 1, 1),strides=(1, 1, 1), padding='same', name = 'Con18393', )(Res92447)
model = tf.keras.models.Model(inputs=[in0Dot93284,in1Dot93284], outputs=Con18393)
w = model.get_layer('Con18393').get_weights() 
w[0] = np.array([[[[[0.8612], [0.1991], [0.3241]]]]])
w[1] = np.array([0, 0, 0])
model.get_layer('Con18393').set_weights(w) 
in0Dot93284 = tf.constant([[0.1776, 0.9066]])
in1Dot93284 = tf.constant([[0.3389, 0.3373]])
print (np.array2string(model.predict([in0Dot93284,in1Dot93284],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Con18393.png')

LDot93284 = dot_layer([[0.1776, 0.9066]], [[0.3389, 0.3373]], 1, 1, Dot93284), 
LRes42942 = reshape_layer(Dot93284, [1, 1], Res42942), 
LRes16773 = reshape_layer(Res42942, [1, 1, 1], Res16773), 
LRes92447 = reshape_layer(Res16773, [1, 1, 1, 1], Res92447), 
LCon18393 = conv3D_transpose_layer(Res92447, 1, 1, 1,[[[[[0.8612], [0.1991], [0.3241]]]]],[0, 0, 0], 1, 1, 1, true, Con18393), 
exec_layers([LDot93284,LRes42942,LRes16773,LRes92447,LCon18393],["Dot93284","Res42942","Res16773","Res92447","Con18393"],Con18393,"Con18393")

Actual (Unparsed): [[[[[0.3151861, 0.0728676, 0.1186157]]]]]

Expected (Unparsed): [[[[[0.315186126984,0.072867577662,0.118615680162]]]]]

Actual:   [[[[[0.3152, 0.0729, 0.1187]]]]]

Expected: [[[[[0.3152, 0.0729, 0.1187]]]]]