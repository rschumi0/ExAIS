import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Loc46080 = tf.keras.layers.Input(shape=([1, 2, 2]))

Loc46080 = keras.layers.LocallyConnected2D(3, (1, 2),strides=(1, 1), name = 'Loc46080', )(in0Loc46080)
Con49718 = keras.layers.Conv2DTranspose(2, (1, 1),strides=(1, 1), padding='same', name = 'Con49718', )(Loc46080)
model = tf.keras.models.Model(inputs=[in0Loc46080], outputs=Con49718)
w = model.get_layer('Loc46080').get_weights() 
w[0] = np.array([[[0.6291, 0.8757, 0.213], [0.4973, 0.4296, 0.8441], [0.3183, 0.6494, 0.0383], [0.5874, 0.083, 0.2424]]])
w[1] = np.array([[[0, 0, 0]]])
model.get_layer('Loc46080').set_weights(w) 
w = model.get_layer('Con49718').get_weights() 
w[0] = np.array([[[[0.1468, 0.5806, 0.6219], [0.3719, 0.1448, 0.356]]]])
w[1] = np.array([0, 0])
model.get_layer('Con49718').set_weights(w) 
in0Loc46080 = tf.constant([[[[0.4916, 0.7364], [0.0958, 0.0015]]]])
print (np.array2string(model.predict([in0Loc46080],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Con49718.png')

LLoc46080 = locally_connected2D_layer([[[[0.4916, 0.7364], [0.0958, 0.0015]]]], 1, 2,[[[0.6291, 0.8757, 0.213], [0.4973, 0.4296, 0.8441], [0.3183, 0.6494, 0.0383], [0.5874, 0.083, 0.2424]]],[[[0, 0, 0]]], 1, 1, Loc46080), 
LCon49718 = conv2D_transpose_layer(Loc46080, 1, 1,[[[[0.1468, 0.5806, 0.6219], [0.3719, 0.1448, 0.356]]]],[0, 0], 1, 1, true, Con49718), 
exec_layers([LLoc46080,LCon49718],["Loc46080","Con49718"],Con49718,"Con49718")

Actual (Unparsed): [[[[1.0277784, 0.6400492]]]]

Expected (Unparsed): [[[[1.027778379966,0.640049192352]]]]

Actual:   [[[[1.0278, 0.6401]]]]

Expected: [[[[1.0278, 0.6401]]]]