import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Fla48597 = tf.keras.layers.Input(shape=([2, 2, 2]))
in0Con39473 = tf.keras.layers.Input(shape=([8, 1, 1, 2]))
in0Cro34156 = tf.keras.layers.Input(shape=([2, 2, 3, 3]))
in0Dot10750 = tf.keras.layers.Input(shape=([2, 3]))
in1Dot10750 = tf.keras.layers.Input(shape=([2, 3]))
in0Con43656 = tf.keras.layers.Input(shape=([1, 2, 2, 2]))
in0Dot61000 = tf.keras.layers.Input(shape=([3]))
in1Dot61000 = tf.keras.layers.Input(shape=([3]))
in0Con95449 = tf.keras.layers.Input(shape=([7]))
in0Sub76695 = tf.keras.layers.Input(shape=([2]))
in1Sub76695 = tf.keras.layers.Input(shape=([2]))
in0Con58117 = tf.keras.layers.Input(shape=([6]))
in0Con11786 = tf.keras.layers.Input(shape=([16]))

Fla48597 = keras.layers.Flatten(name = 'Fla48597', )(in0Fla48597)
Res16973 = keras.layers.Reshape((8, 1), name = 'Res16973', )(Fla48597)
Res46849 = keras.layers.Reshape((8, 1, 1), name = 'Res46849', )(Res16973)
Res27124 = keras.layers.Reshape((8, 1, 1, 1), name = 'Res27124', )(Res46849)
Con39473 = keras.layers.Concatenate(axis=4, name = 'Con39473', )([Res27124,in0Con39473])
Cro34156 = keras.layers.Cropping3D(cropping=((0, 1), (1, 0), (2, 0)), name = 'Cro34156', )(in0Cro34156)
Zer66186 = keras.layers.ZeroPadding3D(padding=((7, 0), (0, 0), (0, 0)), name = 'Zer66186', )(Cro34156)
Ave32480 = keras.layers.Average(name = 'Ave32480', )([Con39473,Zer66186])
Res86199 = keras.layers.Reshape((8, 1, 3), name = 'Res86199', )(Ave32480)
Res13489 = keras.layers.Reshape((8, 3), name = 'Res13489', )(Res86199)
Dot10750 = keras.layers.Dot(axes=(1, 1), name = 'Dot10750', )([in0Dot10750,in1Dot10750])
ELU24067 = keras.layers.ELU(alpha=-5.323250467686355, name = 'ELU24067', )(Dot10750)
Zer56344 = keras.layers.ZeroPadding1D(padding=((5, 0)), name = 'Zer56344', )(ELU24067)
Mul24152 = keras.layers.Multiply(name = 'Mul24152', )([Res13489,Zer56344])
Fla42415 = keras.layers.Flatten(name = 'Fla42415', )(Mul24152)
Con43656 = keras.layers.Conv3D(2, (1, 2, 2),strides=(1, 1, 1), padding='same', dilation_rate=(1, 1, 1), name = 'Con43656', )(in0Con43656)
Res97903 = keras.layers.Reshape((1, 2, 4), name = 'Res97903', )(Con43656)
Res47505 = keras.layers.Reshape((1, 8), name = 'Res47505', )(Res97903)
Fla48435 = keras.layers.Flatten(name = 'Fla48435', )(Res47505)
Dot61000 = keras.layers.Dot(axes=(1, 1), name = 'Dot61000', )([in0Dot61000,in1Dot61000])
Con95449 = keras.layers.Concatenate(axis=1, name = 'Con95449', )([Dot61000,in0Con95449])
Ave95428 = keras.layers.Average(name = 'Ave95428', )([Fla48435,Con95449])
Sub76695 = keras.layers.Subtract(name = 'Sub76695', )([in0Sub76695,in1Sub76695])
Con58117 = keras.layers.Concatenate(axis=1, name = 'Con58117', )([Sub76695,in0Con58117])
Sub15490 = keras.layers.Subtract(name = 'Sub15490', )([Ave95428,Con58117])
Con11786 = keras.layers.Concatenate(axis=1, name = 'Con11786', )([Sub15490,in0Con11786])
Ave66479 = keras.layers.Average(name = 'Ave66479', )([Fla42415,Con11786])
model = tf.keras.models.Model(inputs=[in0Fla48597,in0Con39473,in0Cro34156,in0Dot10750,in1Dot10750,in0Con43656,in0Dot61000,in1Dot61000,in0Con95449,in0Sub76695,in1Sub76695,in0Con58117,in0Con11786], outputs=Ave66479)
w = model.get_layer('Con43656').get_weights() 
w[0] = np.array([[[[[0.0221, 0.735], [0.3133, 0.9826]], [[0.2483, 0.0184], [0.7038, 0.5582]]], [[[0.101, 0.5168], [0.6277, 0.5002]], [[0.7391, 0.4053], [0.4547, 0.3409]]]]])
w[1] = np.array([0, 0])
model.get_layer('Con43656').set_weights(w) 
in0Fla48597 = tf.constant([[[[1.6474, 1.2109], [1.8543, 1.1811]], [[1.437, 1.6864], [1.626, 1.3993]]]])
in0Con39473 = tf.constant([[[[[0.2758, 0.8481]]], [[[0.3703, 0.7071]]], [[[0.2887, 0.5704]]], [[[0.6874, 0.7338]]], [[[0.0564, 0.0128]]], [[[0.3968, 0.0316]]], [[[0.7741, 0.6478]]], [[[0.8347, 0.7766]]]]])
in0Cro34156 = tf.constant([[[[[1.3112, 1.0628, 1.0946], [1.9131, 1.8425, 1.5242], [1.6812, 1.1245, 1.5078]], [[1.4646, 1.7966, 1.581], [1.2311, 1.0825, 1.8838], [1.7246, 1.8992, 1.2121]]], [[[1.9873, 1.1397, 1.2441], [1.3181, 1.6187, 1.1127], [1.6549, 1.8237, 1.3112]], [[1.1275, 1.805, 1.5838], [1.5348, 1.6518, 1.4648], [1.3693, 1.5776, 1.1907]]]]])
in0Dot10750 = tf.constant([[[0.5059, 0.6852, 0.5892], [0.1284, 0.8969, 0.1105]]])
in1Dot10750 = tf.constant([[[0.2301, 0.315, 0.4422], [0.6169, 0.2736, 0.7075]]])
in0Con43656 = tf.constant([[[[[0.12, 0.0022], [0.0677, 0.6272]], [[0.1406, 0.6545], [0.9769, 0.3583]]]]])
in0Dot61000 = tf.constant([[0.2614, 0.3563, 0.8012]])
in1Dot61000 = tf.constant([[0.8785, 0.4759, 0.7282]])
in0Con95449 = tf.constant([[0.3905, 0.9443, 0.6394, 0.3883, 0.2171, 0.6494, 0.0681]])
in0Sub76695 = tf.constant([[0.6925, 0.4872]])
in1Sub76695 = tf.constant([[0.9183, 0.2192]])
in0Con58117 = tf.constant([[0.9392, 0.2716, 0.5762, 0.6688, 0.8216, 0.4204]])
in0Con11786 = tf.constant([[0.1627, 0.0887, 0.5378, 0.688, 0.3561, 0.98, 0.7608, 0.2554, 0.819, 0.0904, 0.8287, 0.1262, 0.4399, 0.1247, 0.335, 0.5191]])
print (np.array2string(model.predict([in0Fla48597,in0Con39473,in0Cro34156,in0Dot10750,in1Dot10750,in0Con43656,in0Dot61000,in1Dot61000,in0Con95449,in0Sub76695,in1Sub76695,in0Con58117,in0Con11786],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Ave66479.png')

LFla48597 = flatten_layer([[[[1.6474, 1.2109], [1.8543, 1.1811]], [[1.437, 1.6864], [1.626, 1.3993]]]], Fla48597), 
LRes16973 = reshape_layer(Fla48597, [8, 1], Res16973), 
LRes46849 = reshape_layer(Res16973, [8, 1, 1], Res46849), 
LRes27124 = reshape_layer(Res46849, [8, 1, 1, 1], Res27124), 
LCon39473 = concatenate_layer([Res27124,[[[[[0.2758, 0.8481]]], [[[0.3703, 0.7071]]], [[[0.2887, 0.5704]]], [[[0.6874, 0.7338]]], [[[0.0564, 0.0128]]], [[[0.3968, 0.0316]]], [[[0.7741, 0.6478]]], [[[0.8347, 0.7766]]]]]], 4, Con39473), 
LCro34156 = cropping3D_layer([[[[[1.3112, 1.0628, 1.0946], [1.9131, 1.8425, 1.5242], [1.6812, 1.1245, 1.5078]], [[1.4646, 1.7966, 1.581], [1.2311, 1.0825, 1.8838], [1.7246, 1.8992, 1.2121]]], [[[1.9873, 1.1397, 1.2441], [1.3181, 1.6187, 1.1127], [1.6549, 1.8237, 1.3112]], [[1.1275, 1.805, 1.5838], [1.5348, 1.6518, 1.4648], [1.3693, 1.5776, 1.1907]]]]], 0, 1, 1, 0, 2, 0, Cro34156), 
LZer66186 = zero_padding3D_layer(Cro34156, 7, 0, 0, 0, 0, 0, Zer66186), 
LAve32480 = average_layer([Con39473,Zer66186], Ave32480), 
LRes86199 = reshape_layer(Ave32480, [8, 1, 3], Res86199), 
LRes13489 = reshape_layer(Res86199, [8, 3], Res13489), 
LDot10750 = dot_layer([[[0.5059, 0.6852, 0.5892], [0.1284, 0.8969, 0.1105]]], [[[0.2301, 0.315, 0.4422], [0.6169, 0.2736, 0.7075]]], 1, 1, Dot10750), 
LELU24067 = elu_layer(Dot10750, -5.323250467686355, ELU24067), 
LZer56344 = zero_padding1D_layer(ELU24067, 5, 0, Zer56344), 
LMul24152 = multiply_layer([Res13489,Zer56344], Mul24152), 
LFla42415 = flatten_layer(Mul24152, Fla42415), 
LCon43656 = conv3D_layer([[[[[0.12, 0.0022], [0.0677, 0.6272]], [[0.1406, 0.6545], [0.9769, 0.3583]]]]], 1, 2, 2,[[[[[0.0221, 0.735], [0.3133, 0.9826]], [[0.2483, 0.0184], [0.7038, 0.5582]]], [[[0.101, 0.5168], [0.6277, 0.5002]], [[0.7391, 0.4053], [0.4547, 0.3409]]]]],[0, 0], 1, 1, 1, true, 1, 1, 1, Con43656), 
LRes97903 = reshape_layer(Con43656, [1, 2, 4], Res97903), 
LRes47505 = reshape_layer(Res97903, [1, 8], Res47505), 
LFla48435 = flatten_layer(Res47505, Fla48435), 
LDot61000 = dot_layer([[0.2614, 0.3563, 0.8012]], [[0.8785, 0.4759, 0.7282]], 1, 1, Dot61000), 
LCon95449 = concatenate_layer([Dot61000,[[0.3905, 0.9443, 0.6394, 0.3883, 0.2171, 0.6494, 0.0681]]], 1, Con95449), 
LAve95428 = average_layer([Fla48435,Con95449], Ave95428), 
LSub76695 = subtract_layer([[0.6925, 0.4872]], [[0.9183, 0.2192]], Sub76695), 
LCon58117 = concatenate_layer([Sub76695,[[0.9392, 0.2716, 0.5762, 0.6688, 0.8216, 0.4204]]], 1, Con58117), 
LSub15490 = subtract_layer(Ave95428,Con58117, Sub15490), 
LCon11786 = concatenate_layer([Sub15490,[[0.1627, 0.0887, 0.5378, 0.688, 0.3561, 0.98, 0.7608, 0.2554, 0.819, 0.0904, 0.8287, 0.1262, 0.4399, 0.1247, 0.335, 0.5191]]], 1, Con11786), 
LAve66479 = average_layer([Fla42415,Con11786], Ave66479), 
exec_layers([LFla48597,LRes16973,LRes46849,LRes27124,LCon39473,LCro34156,LZer66186,LAve32480,LRes86199,LRes13489,LDot10750,LELU24067,LZer56344,LMul24152,LFla42415,LCon43656,LRes97903,LRes47505,LFla48435,LDot61000,LCon95449,LAve95428,LSub76695,LCon58117,LSub15490,LCon11786,LAve66479],["Fla48597","Res16973","Res46849","Res27124","Con39473","Cro34156","Zer66186","Ave32480","Res86199","Res13489","Dot10750","ELU24067","Zer56344","Mul24152","Fla42415","Con43656","Res97903","Res47505","Fla48435","Dot61000","Con95449","Ave95428","Sub76695","Con58117","Sub15490","Con11786","Ave66479"],Ave66479,"Ave66479")

Actual (Unparsed): [[0.8014469, 0.3035839, -0.1031326, 0.3615824, -0.0153005, -0.0390173, -0.2149888, 0.0743468, 0.0813500, 0.0443500, 0.2689000, 0.3440000, 0.1780500, 0.4900000, 0.3804000, 0.2101724, 0.4287933, 0.0476850, 0.7033561, 0.1523595, 0.3717866, 0.2214677, 0.3150150, 0.4279546]]

Expected (Unparsed): [[0.8014468724999999,0.303583865,-0.10313256500000001,0.36158245,-0.01530052000000004,-0.039017319999999966,-0.21498878,0.07434677,0.08135,0.04435,0.2689,0.344,0.17805,0.49,0.3804,0.21017235908,0.42879328300799996,0.047684960642,0.703356105845,0.15235950478600002,0.3717865771705,0.22146769741075,0.31501495603,0.42795460255325]]

Actual:   [[0.8015, 0.3036, -0.1031, 0.3616, -0.0153, -0.039, -0.2149, 0.0744, 0.0814, 0.0444, 0.2689, 0.344, 0.1781, 0.49, 0.3804, 0.2102, 0.4288, 0.0477, 0.7034, 0.1524, 0.3718, 0.2215, 0.3151, 0.428]]

Expected: [[0.8015, 0.3036, -0.1031, 0.3616, -0.0153, -0.039, -0.2149, 0.0744, 0.0814, 0.0444, 0.2689, 0.344, 0.1781, 0.49, 0.3804, 0.2102, 0.4288, 0.0477, 0.7034, 0.1524, 0.3718, 0.2215, 0.3151, 0.428]]