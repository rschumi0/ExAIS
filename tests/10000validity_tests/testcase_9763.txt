import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Sub22960 = tf.keras.layers.Input(shape=([3, 2]))
in1Sub22960 = tf.keras.layers.Input(shape=([3, 2]))
in0Con65504 = tf.keras.layers.Input(shape=([3, 4, 1]))
in0Cro97526 = tf.keras.layers.Input(shape=([4, 4, 2]))
in0Dot96153 = tf.keras.layers.Input(shape=([2]))
in1Dot96153 = tf.keras.layers.Input(shape=([2]))
in0Con33714 = tf.keras.layers.Input(shape=([22]))

Sub22960 = keras.layers.Subtract(name = 'Sub22960', )([in0Sub22960,in1Sub22960])
Res71427 = keras.layers.Reshape((3, 2, 1), name = 'Res71427', )(Sub22960)
Zer66372 = keras.layers.ZeroPadding2D(padding=((0, 0), (2, 0)), name = 'Zer66372', )(Res71427)
Con65504 = keras.layers.Concatenate(axis=3, name = 'Con65504', )([Zer66372,in0Con65504])
Cro97526 = keras.layers.Cropping2D(cropping=((2, 1), (0, 1)), name = 'Cro97526', )(in0Cro97526)
Zer61208 = keras.layers.ZeroPadding2D(padding=((2, 0), (1, 0)), name = 'Zer61208', )(Cro97526)
Max18260 = keras.layers.Maximum(name = 'Max18260', )([Con65504,Zer61208])
Res67738 = keras.layers.Reshape((3, 8), name = 'Res67738', )(Max18260)
Fla94130 = keras.layers.Flatten(name = 'Fla94130', )(Res67738)
Dot96153 = keras.layers.Dot(axes=(1, 1), name = 'Dot96153', )([in0Dot96153,in1Dot96153])
Den7011 = keras.layers.Dense(2,name = 'Den7011', )(Dot96153)
Sof94260 = keras.layers.Softmax(axis=1, name = 'Sof94260', )(Den7011)
Con33714 = keras.layers.Concatenate(axis=1, name = 'Con33714', )([Sof94260,in0Con33714])
Min25528 = keras.layers.Minimum(name = 'Min25528', )([Fla94130,Con33714])
model = tf.keras.models.Model(inputs=[in0Sub22960,in1Sub22960,in0Con65504,in0Cro97526,in0Dot96153,in1Dot96153,in0Con33714], outputs=Min25528)
w = model.get_layer('Den7011').get_weights() 
w[0] = np.array([[0.5736, 0.7329]])
w[1] = np.array([0.1611, 0.1432])
model.get_layer('Den7011').set_weights(w) 
in0Sub22960 = tf.constant([[[0.1364, 0.1554], [0.5497, 0.5127], [0.2135, 0.0996]]])
in1Sub22960 = tf.constant([[[0.5068, 0.3018], [0.0557, 0.062], [0.0959, 0.0813]]])
in0Con65504 = tf.constant([[[[0.0396], [0.7349], [0.5535], [0.4665]], [[0.4452], [0.4394], [0.8586], [0.8332]], [[0.566], [0.7261], [0.3886], [0.6969]]]])
in0Cro97526 = tf.constant([[[[1.9965, 1.8866], [1.7673, 1.0375], [1.4903, 1.9517], [1.5145, 1.448]], [[1.2897, 1.8275], [1.4922, 1.7382], [1.7427, 1.9088], [1.6251, 1.2217]], [[1.7915, 1.2775], [1.8523, 1.2361], [1.2024, 1.0896], [1.358, 1.811]], [[1.2669, 1.8555], [1.1221, 1.9731], [1.7228, 1.0809], [1.3926, 1.2799]]]])
in0Dot96153 = tf.constant([[0.9201, 0.8716]])
in1Dot96153 = tf.constant([[0.2289, 0.2035]])
in0Con33714 = tf.constant([[0.2254, 0.3536, 0.643, 0.9081, 0.0224, 0.928, 0.8512, 0.414, 0.9624, 0.9996, 0.6444, 0.6992, 0.5969, 0.1979, 0.7333, 0.0401, 0.9647, 0.429, 0.0403, 0.2515, 0.4356, 0.8621]])
print (np.array2string(model.predict([in0Sub22960,in1Sub22960,in0Con65504,in0Cro97526,in0Dot96153,in1Dot96153,in0Con33714],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Min25528.png')

LSub22960 = subtract_layer([[[0.1364, 0.1554], [0.5497, 0.5127], [0.2135, 0.0996]]], [[[0.5068, 0.3018], [0.0557, 0.062], [0.0959, 0.0813]]], Sub22960), 
LRes71427 = reshape_layer(Sub22960, [3, 2, 1], Res71427), 
LZer66372 = zero_padding2D_layer(Res71427, 0, 0, 2, 0, Zer66372), 
LCon65504 = concatenate_layer([Zer66372,[[[[0.0396], [0.7349], [0.5535], [0.4665]], [[0.4452], [0.4394], [0.8586], [0.8332]], [[0.566], [0.7261], [0.3886], [0.6969]]]]], 3, Con65504), 
LCro97526 = cropping2D_layer([[[[1.9965, 1.8866], [1.7673, 1.0375], [1.4903, 1.9517], [1.5145, 1.448]], [[1.2897, 1.8275], [1.4922, 1.7382], [1.7427, 1.9088], [1.6251, 1.2217]], [[1.7915, 1.2775], [1.8523, 1.2361], [1.2024, 1.0896], [1.358, 1.811]], [[1.2669, 1.8555], [1.1221, 1.9731], [1.7228, 1.0809], [1.3926, 1.2799]]]], 2, 1, 0, 1, Cro97526), 
LZer61208 = zero_padding2D_layer(Cro97526, 2, 0, 1, 0, Zer61208), 
LMax18260 = maximum_layer([Con65504,Zer61208], Max18260), 
LRes67738 = reshape_layer(Max18260, [3, 8], Res67738), 
LFla94130 = flatten_layer(Res67738, Fla94130), 
LDot96153 = dot_layer([[0.9201, 0.8716]], [[0.2289, 0.2035]], 1, 1, Dot96153), 
LDen7011 = dense_layer(Dot96153, [[0.5736, 0.7329]],[0.1611, 0.1432], Den7011), 
LSof94260 = softmax_layer(Den7011, 1, Sof94260), 
LCon33714 = concatenate_layer([Sof94260,[[0.2254, 0.3536, 0.643, 0.9081, 0.0224, 0.928, 0.8512, 0.414, 0.9624, 0.9996, 0.6444, 0.6992, 0.5969, 0.1979, 0.7333, 0.0401, 0.9647, 0.429, 0.0403, 0.2515, 0.4356, 0.8621]]], 1, Con33714), 
LMin25528 = minimum_layer([Fla94130,Con33714], Min25528), 
exec_layers([LSub22960,LRes71427,LZer66372,LCon65504,LCro97526,LZer61208,LMax18260,LRes67738,LFla94130,LDot96153,LDen7011,LSof94260,LCon33714,LMin25528],["Sub22960","Res71427","Zer66372","Con65504","Cro97526","Zer61208","Max18260","Res67738","Fla94130","Dot96153","Den7011","Sof94260","Con33714","Min25528"],Min25528,"Min25528")

Actual (Unparsed): [[0.0000000, 0.0396000, 0.0000000, 0.3536000, 0.0000000, 0.5535000, 0.0000000, 0.4665000, 0.0000000, 0.4140000, 0.0000000, 0.4394000, 0.4940000, 0.6992000, 0.4507000, 0.1979000, 0.0000000, 0.0401000, 0.9647000, 0.4290000, 0.0403000, 0.2515000, 0.4356000, 0.8621000]]

Expected (Unparsed): [[0,0.0396,0,0.3536,0,0.5535,0,0.4665,0,0.414,0,0.4394,0.494,0.6992,0.45070000000000005,0.1979,0,0.0401,0.9647,0.429,0.0403,0.2515,0.4356,0.8621]]

Actual:   [[0, 0.0396, 0, 0.3536, 0, 0.5535, 0, 0.4665, 0, 0.414, 0, 0.4394, 0.494, 0.6992, 0.4507, 0.1979, 0, 0.0401, 0.9647, 0.429, 0.0403, 0.2515, 0.4356, 0.8621]]

Expected: [[0, 0.0396, 0, 0.3536, 0, 0.5535, 0, 0.4665, 0, 0.414, 0, 0.4394, 0.494, 0.6992, 0.4508, 0.1979, 0, 0.0401, 0.9647, 0.429, 0.0403, 0.2515, 0.4356, 0.8621]]