import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0ReL23651 = tf.keras.layers.Input(shape=([2, 1, 1, 1]))

ReL23651 = keras.layers.ReLU(max_value=4.663382221927222, negative_slope=1.0473340625647383, threshold=5.371076735475999, name = 'ReL23651', input_shape=(2, 1, 1, 1))(in0ReL23651)
Res77848 = keras.layers.Reshape((2, 1, 1), name = 'Res77848', )(ReL23651)
Res44950 = keras.layers.Reshape((2, 1), name = 'Res44950', )(Res77848)
Zer72120 = keras.layers.ZeroPadding1D(padding=((1, 1)), name = 'Zer72120', )(Res44950)
model = tf.keras.models.Model(inputs=[in0ReL23651], outputs=Zer72120)
in0ReL23651 = tf.constant([[[[[0.4073]]], [[[0.4349]]]]])
print (np.array2string(model.predict([in0ReL23651],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Zer72120.png')

LReL23651 = relu_layer([[[[[0.4073]]], [[[0.4349]]]]], 4.663382221927222, 1.0473340625647383, 5.371076735475999, ReL23651), 
LRes77848 = reshape_layer(ReL23651, [2, 1, 1], Res77848), 
LRes44950 = reshape_layer(Res77848, [2, 1], Res44950), 
LZer72120 = zero_padding1D_layer(Res44950, 1, 1, Zer72120), 
exec_layers([LReL23651,LRes77848,LRes44950,LZer72120],["ReL23651","Res77848","Res44950","Zer72120"],Zer72120,"Zer72120")

Actual (Unparsed): [[[0.0000000], [-5.1987325], [-5.1698260], [0.0000000]]]

Expected (Unparsed): [[[0],[-5.198732454030412],[-5.169826033903625],[0]]]

Actual:   [[[0], [-5.1987], [-5.1698], [0]]]

Expected: [[[0], [-5.1987], [-5.1698], [0]]]