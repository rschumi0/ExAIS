import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Max49104 = tf.keras.layers.Input(shape=([1, 1]))
in1Max49104 = tf.keras.layers.Input(shape=([1, 1]))
in0Con22010 = tf.keras.layers.Input(shape=([2, 2]))
in0Mul34066 = tf.keras.layers.Input(shape=([1, 1, 1, 1]))
in1Mul34066 = tf.keras.layers.Input(shape=([1, 1, 1, 1]))
in0Con66270 = tf.keras.layers.Input(shape=([2, 2]))
in0Sub39447 = tf.keras.layers.Input(shape=([2, 3]))
in1Sub39447 = tf.keras.layers.Input(shape=([2, 3]))

Max49104 = keras.layers.Maximum(name = 'Max49104', )([in0Max49104,in1Max49104])
Zer58212 = keras.layers.ZeroPadding1D(padding=((1, 0)), name = 'Zer58212', )(Max49104)
Con22010 = keras.layers.Concatenate(axis=2, name = 'Con22010', )([Zer58212,in0Con22010])
Mul34066 = keras.layers.Multiply(name = 'Mul34066', )([in0Mul34066,in1Mul34066])
Res7584 = keras.layers.Reshape((1, 1, 1), name = 'Res7584', )(Mul34066)
Max83621 = keras.layers.MaxPool2D(pool_size=(1, 1), name = 'Max83621', )(Res7584)
Res54103 = keras.layers.Reshape((1, 1, 1, 1), name = 'Res54103', )(Max83621)
Glo86826 = keras.layers.GlobalAveragePooling3D(name = 'Glo86826', )(Res54103)
Res61408 = keras.layers.Reshape((1, 1), name = 'Res61408', )(Glo86826)
Zer86450 = keras.layers.ZeroPadding1D(padding=((1, 0)), name = 'Zer86450', )(Res61408)
Con66270 = keras.layers.Concatenate(axis=2, name = 'Con66270', )([Zer86450,in0Con66270])
Sub39447 = keras.layers.Subtract(name = 'Sub39447', )([in0Sub39447,in1Sub39447])
Max76563 = keras.layers.Maximum(name = 'Max76563', )([Con66270,Sub39447])
Max20846 = keras.layers.Maximum(name = 'Max20846', )([Con22010,Max76563])
model = tf.keras.models.Model(inputs=[in0Max49104,in1Max49104,in0Con22010,in0Mul34066,in1Mul34066,in0Con66270,in0Sub39447,in1Sub39447], outputs=Max20846)
in0Max49104 = tf.constant([[[0.7845]]])
in1Max49104 = tf.constant([[[0.5962]]])
in0Con22010 = tf.constant([[[0.3628, 0.4748], [0.4416, 0.2913]]])
in0Mul34066 = tf.constant([[[[[0.7283]]]]])
in1Mul34066 = tf.constant([[[[[0.9582]]]]])
in0Con66270 = tf.constant([[[0.0757, 0.8493], [0.197, 0.2182]]])
in0Sub39447 = tf.constant([[[0.8543, 0.3669, 0.3346], [0.9384, 0.6294, 0.7424]]])
in1Sub39447 = tf.constant([[[0.1281, 0.1395, 0.0293], [0.42, 0.6587, 0.9046]]])
print (np.array2string(model.predict([in0Max49104,in1Max49104,in0Con22010,in0Mul34066,in1Mul34066,in0Con66270,in0Sub39447,in1Sub39447],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Max20846.png')

LMax49104 = maximum_layer([[[[0.7845]]], [[[0.5962]]]], Max49104), 
LZer58212 = zero_padding1D_layer(Max49104, 1, 0, Zer58212), 
LCon22010 = concatenate_layer([Zer58212,[[[0.3628, 0.4748], [0.4416, 0.2913]]]], 2, Con22010), 
LMul34066 = multiply_layer([[[[[[0.7283]]]]], [[[[[0.9582]]]]]], Mul34066), 
LRes7584 = reshape_layer(Mul34066, [1, 1, 1], Res7584), 
LMax83621 = max_pool2D_layer(Res7584, 1, 1, Max83621), 
LRes54103 = reshape_layer(Max83621, [1, 1, 1, 1], Res54103), 
LGlo86826 = global_average_pooling3D_layer(Res54103, Glo86826), 
LRes61408 = reshape_layer(Glo86826, [1, 1], Res61408), 
LZer86450 = zero_padding1D_layer(Res61408, 1, 0, Zer86450), 
LCon66270 = concatenate_layer([Zer86450,[[[0.0757, 0.8493], [0.197, 0.2182]]]], 2, Con66270), 
LSub39447 = subtract_layer([[[0.8543, 0.3669, 0.3346], [0.9384, 0.6294, 0.7424]]], [[[0.1281, 0.1395, 0.0293], [0.42, 0.6587, 0.9046]]], Sub39447), 
LMax76563 = maximum_layer([Con66270,Sub39447], Max76563), 
LMax20846 = maximum_layer([Con22010,Max76563], Max20846), 
exec_layers([LMax49104,LZer58212,LCon22010,LMul34066,LRes7584,LMax83621,LRes54103,LGlo86826,LRes61408,LZer86450,LCon66270,LSub39447,LMax76563,LMax20846],["Max49104","Zer58212","Con22010","Mul34066","Res7584","Max83621","Res54103","Glo86826","Res61408","Zer86450","Con66270","Sub39447","Max76563","Max20846"],Max20846,"Max20846")

Actual (Unparsed): [[[0.7262000, 0.3628000, 0.8493000], [0.7845000, 0.4416000, 0.2913000]]]

Expected (Unparsed): [[[0.7262,0.3628,0.8493],[0.7845,0.4416,0.2913]]]

Actual:   [[[0.7262, 0.3628, 0.8493], [0.7845, 0.4416, 0.2913]]]

Expected: [[[0.7262, 0.3628, 0.8493], [0.7845, 0.4416, 0.2913]]]