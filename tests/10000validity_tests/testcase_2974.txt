import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Sub91075 = tf.keras.layers.Input(shape=([2, 3, 3]))
in1Sub91075 = tf.keras.layers.Input(shape=([2, 3, 3]))
in0Con37191 = tf.keras.layers.Input(shape=([9, 3]))
in0Mul83110 = tf.keras.layers.Input(shape=([1, 1, 2]))
in1Mul83110 = tf.keras.layers.Input(shape=([1, 1, 2]))
in0Ave48784 = tf.keras.layers.Input(shape=([1, 1, 1, 1]))
in1Ave48784 = tf.keras.layers.Input(shape=([1, 1, 1, 1]))
in0Con90953 = tf.keras.layers.Input(shape=([1, 1, 1]))

Sub91075 = keras.layers.Subtract(name = 'Sub91075', )([in0Sub91075,in1Sub91075])
Res10043 = keras.layers.Reshape((2, 9), name = 'Res10043', )(Sub91075)
PRe47337 = keras.layers.PReLU(name = 'PRe47337', )(Res10043)
Glo73243 = keras.layers.GlobalMaxPool1D(name = 'Glo73243', )(PRe47337)
Res41609 = keras.layers.Reshape((9, 1), name = 'Res41609', )(Glo73243)
Con37191 = keras.layers.Concatenate(axis=2, name = 'Con37191', )([Res41609,in0Con37191])
Mul83110 = keras.layers.Multiply(name = 'Mul83110', )([in0Mul83110,in1Mul83110])
Ave48784 = keras.layers.Average(name = 'Ave48784', )([in0Ave48784,in1Ave48784])
Res74283 = keras.layers.Reshape((1, 1, 1), name = 'Res74283', )(Ave48784)
Cro59972 = keras.layers.Cropping2D(cropping=((0, 0), (0, 0)), name = 'Cro59972', )(Res74283)
Con90953 = keras.layers.Concatenate(axis=3, name = 'Con90953', )([Cro59972,in0Con90953])
Ave54981 = keras.layers.Average(name = 'Ave54981', )([Mul83110,Con90953])
Res83127 = keras.layers.Reshape((1, 2), name = 'Res83127', )(Ave54981)
Loc71967 = keras.layers.LocallyConnected1D(4, (1),strides=(1), name = 'Loc71967', )(Res83127)
Zer94026 = keras.layers.ZeroPadding1D(padding=((8, 0)), name = 'Zer94026', )(Loc71967)
Sub94282 = keras.layers.Subtract(name = 'Sub94282', )([Con37191,Zer94026])
model = tf.keras.models.Model(inputs=[in0Sub91075,in1Sub91075,in0Con37191,in0Mul83110,in1Mul83110,in0Ave48784,in1Ave48784,in0Con90953], outputs=Sub94282)
w = model.get_layer('PRe47337').get_weights() 
w[0] = np.array([[0.5663, 0.522, 0.3009, 0.2022, 0.6877, 0.8822, 0.2518, 0.1499, 0.8501], [0.6095, 0.8613, 0.5872, 0.5054, 0.0837, 0.5628, 0.2005, 0.6345, 0.7711]])
model.get_layer('PRe47337').set_weights(w) 
w = model.get_layer('Loc71967').get_weights() 
w[0] = np.array([[[0.7832, 0.7933, 0.3452, 0.1556], [0.5302, 0.2523, 0.7475, 0.4406]]])
w[1] = np.array([[0, 0, 0, 0]])
model.get_layer('Loc71967').set_weights(w) 
in0Sub91075 = tf.constant([[[[0.6217, 0.6331, 0.4845], [0.52, 0.6417, 0.5048], [0.8366, 0.1788, 0.0148]], [[0.5432, 0.9279, 0.7615], [0.5514, 0.8636, 0.3769], [0.7117, 0.2715, 0.6343]]]])
in1Sub91075 = tf.constant([[[[0.5872, 0.7701, 0.8929], [0.4389, 0.7771, 0.3299], [0.873, 0.2416, 0.6861]], [[0.7236, 0.1084, 0.6887], [0.1733, 0.7549, 0.7198], [0.3056, 0.0694, 0.5694]]]])
in0Con37191 = tf.constant([[[0.7992, 0.0108, 0.1948], [0.3885, 0.7181, 0.1036], [0.9381, 0.7917, 0.9336], [0.8276, 0.4004, 0.4099], [0.0486, 0.1417, 0.3119], [0.7934, 0.5355, 0.6682], [0.2765, 0.1762, 0.6859], [0.2905, 0.28, 0.6402], [0.7133, 0.1891, 0.4557]]])
in0Mul83110 = tf.constant([[[[0.5674, 0.1311]]]])
in1Mul83110 = tf.constant([[[[0.1927, 0.3904]]]])
in0Ave48784 = tf.constant([[[[[0.2755]]]]])
in1Ave48784 = tf.constant([[[[[0.4657]]]]])
in0Con90953 = tf.constant([[[[0.3112]]]])
print (np.array2string(model.predict([in0Sub91075,in1Sub91075,in0Con37191,in0Mul83110,in1Mul83110,in0Ave48784,in1Ave48784,in0Con90953],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Sub94282.png')

LSub91075 = subtract_layer([[[[0.6217, 0.6331, 0.4845], [0.52, 0.6417, 0.5048], [0.8366, 0.1788, 0.0148]], [[0.5432, 0.9279, 0.7615], [0.5514, 0.8636, 0.3769], [0.7117, 0.2715, 0.6343]]]], [[[[0.5872, 0.7701, 0.8929], [0.4389, 0.7771, 0.3299], [0.873, 0.2416, 0.6861]], [[0.7236, 0.1084, 0.6887], [0.1733, 0.7549, 0.7198], [0.3056, 0.0694, 0.5694]]]], Sub91075), 
LRes10043 = reshape_layer(Sub91075, [2, 9], Res10043), 
LPRe47337 = prelu_layer(Res10043, [[0.5663, 0.522, 0.3009, 0.2022, 0.6877, 0.8822, 0.2518, 0.1499, 0.8501], [0.6095, 0.8613, 0.5872, 0.5054, 0.0837, 0.5628, 0.2005, 0.6345, 0.7711]], PRe47337), 
LGlo73243 = global_max_pool1D_layer(PRe47337, Glo73243), 
LRes41609 = reshape_layer(Glo73243, [9, 1], Res41609), 
LCon37191 = concatenate_layer([Res41609,[[[0.7992, 0.0108, 0.1948], [0.3885, 0.7181, 0.1036], [0.9381, 0.7917, 0.9336], [0.8276, 0.4004, 0.4099], [0.0486, 0.1417, 0.3119], [0.7934, 0.5355, 0.6682], [0.2765, 0.1762, 0.6859], [0.2905, 0.28, 0.6402], [0.7133, 0.1891, 0.4557]]]], 2, Con37191), 
LMul83110 = multiply_layer([[[[[0.5674, 0.1311]]]], [[[[0.1927, 0.3904]]]]], Mul83110), 
LAve48784 = average_layer([[[[[[0.2755]]]]], [[[[[0.4657]]]]]], Ave48784), 
LRes74283 = reshape_layer(Ave48784, [1, 1, 1], Res74283), 
LCro59972 = cropping2D_layer(Res74283, 0, 0, 0, 0, Cro59972), 
LCon90953 = concatenate_layer([Cro59972,[[[[0.3112]]]]], 3, Con90953), 
LAve54981 = average_layer([Mul83110,Con90953], Ave54981), 
LRes83127 = reshape_layer(Ave54981, [1, 2], Res83127), 
LLoc71967 = locally_connected1D_layer(Res83127, 1,[[[0.7832, 0.7933, 0.3452, 0.1556], [0.5302, 0.2523, 0.7475, 0.4406]]],[[0, 0, 0, 0]], 1, Loc71967), 
LZer94026 = zero_padding1D_layer(Loc71967, 8, 0, Zer94026), 
LSub94282 = subtract_layer(Con37191,Zer94026, Sub94282), 
exec_layers([LSub91075,LRes10043,LPRe47337,LGlo73243,LRes41609,LCon37191,LMul83110,LAve48784,LRes74283,LCro59972,LCon90953,LAve54981,LRes83127,LLoc71967,LZer94026,LSub94282],["Sub91075","Res10043","PRe47337","Glo73243","Res41609","Con37191","Mul83110","Ave48784","Res74283","Cro59972","Con90953","Ave54981","Res83127","Loc71967","Zer94026","Sub94282"],Sub94282,"Sub94282")

Actual (Unparsed): [[[0.0345000, 0.7992000, 0.0108000, 0.1948000], [0.8195000, 0.3885000, 0.7181000, 0.1036000], [0.0728000, 0.9381000, 0.7917000, 0.9336000], [0.3781000, 0.8276000, 0.4004000, 0.4099000], [0.1087000, 0.0486000, 0.1417000, 0.3119000], [0.1749000, 0.7934000, 0.5355000, 0.6682000], [0.4061000, 0.2765000, 0.1762000, 0.6859000], [0.2021000, 0.2905000, 0.2800000, 0.6402000], [-0.2191110, 0.4772182, -0.0291774, 0.3385282]]]

Expected (Unparsed): [[[0.034499999999999975,0.7992,0.0108,0.1948],[0.8194999999999999,0.3885,0.7181,0.1036],[0.07279999999999998,0.9381,0.7917,0.9336],[0.3781,0.8276,0.4004,0.4099],[0.10870000000000002,0.0486,0.1417,0.3119],[0.1749,0.7934,0.5355,0.6682],[0.4061,0.2765,0.1762,0.6859],[0.2021,0.2905,0.28,0.6402],[-0.21911103271200005,0.477218181577,-0.02917735854800002,0.338528193924]]]

Actual:   [[[0.0345, 0.7992, 0.0108, 0.1948], [0.8195, 0.3885, 0.7181, 0.1036], [0.0728, 0.9381, 0.7917, 0.9336], [0.3781, 0.8276, 0.4004, 0.4099], [0.1087, 0.0486, 0.1417, 0.3119], [0.1749, 0.7934, 0.5355, 0.6682], [0.4061, 0.2765, 0.1762, 0.6859], [0.2021, 0.2905, 0.28, 0.6402], [-0.2191, 0.4773, -0.0291, 0.3386]]]

Expected: [[[0.0345, 0.7992, 0.0108, 0.1948], [0.8195, 0.3885, 0.7181, 0.1036], [0.0728, 0.9381, 0.7917, 0.9336], [0.3781, 0.8276, 0.4004, 0.4099], [0.1088, 0.0486, 0.1417, 0.3119], [0.1749, 0.7934, 0.5355, 0.6682], [0.4061, 0.2765, 0.1762, 0.6859], [0.2021, 0.2905, 0.28, 0.6402], [-0.2191, 0.4773, -0.0291, 0.3386]]]