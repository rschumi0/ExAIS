import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Bat39391 = tf.keras.layers.Input(shape=([2, 1]))
in0Con74811 = tf.keras.layers.Input(shape=([3, 5]))
in0Thr4403 = tf.keras.layers.Input(shape=([2, 1, 2]))
in0Ave62864 = tf.keras.layers.Input(shape=([2, 2]))
in0Con10944 = tf.keras.layers.Input(shape=([3, 4]))

Bat39391 = keras.layers.BatchNormalization(axis=1, epsilon=0.4816504173267324,  name = 'Bat39391', )(in0Bat39391)
Zer71421 = keras.layers.ZeroPadding1D(padding=((1, 0)), name = 'Zer71421', )(Bat39391)
Con74811 = keras.layers.Concatenate(axis=2, name = 'Con74811', )([Zer71421,in0Con74811])
Thr4403 = keras.layers.ThresholdedReLU(theta=6.144952361990578, name = 'Thr4403', input_shape=(2, 1, 2))(in0Thr4403)
ELU52657 = keras.layers.ELU(alpha=3.7783376610213253, name = 'ELU52657', )(Thr4403)
Zer33575 = keras.layers.ZeroPadding2D(padding=((1, 1), (1, 1)), name = 'Zer33575', )(ELU52657)
Sep22467 = keras.layers.SeparableConv2D(3, (2, 2),strides=(1, 1), padding='valid', name = 'Sep22467', )(Zer33575)
Res30660 = keras.layers.Reshape((3, 6), name = 'Res30660', )(Sep22467)
Ave62864 = keras.layers.AveragePooling1D(pool_size=(1), strides=(2), padding='same', name = 'Ave62864', )(in0Ave62864)
Per36788 = keras.layers.Permute((1,2), name = 'Per36788',)(Ave62864)
Zer50215 = keras.layers.ZeroPadding1D(padding=((2, 0)), name = 'Zer50215', )(Per36788)
Con10944 = keras.layers.Concatenate(axis=2, name = 'Con10944', )([Zer50215,in0Con10944])
Max24472 = keras.layers.Maximum(name = 'Max24472', )([Res30660,Con10944])
Add4424 = keras.layers.Add(name = 'Add4424', )([Con74811,Max24472])
model = tf.keras.models.Model(inputs=[in0Bat39391,in0Con74811,in0Thr4403,in0Ave62864,in0Con10944], outputs=Add4424)
w = model.get_layer('Bat39391').get_weights() 
w[0] = np.array([0.1073, 0.2124])
w[1] = np.array([0.7546, 0.6422])
w[2] = np.array([0.4273, 0.7833])
w[3] = np.array([0.936, 0.9118])
model.get_layer('Bat39391').set_weights(w) 
w = model.get_layer('Sep22467').get_weights() 
w[0] = np.array([[[[0.9105], [0.9547]], [[0.6396], [0.6728]]], [[[0.1033], [0.3615]], [[0.0966], [0.218]]]])
w[1] = np.array([[[[0.6004, 0.9331, 0.3986], [0.8549, 0.0824, 0.9947]]]])
w[2] = np.array([0, 0, 0])
model.get_layer('Sep22467').set_weights(w) 
in0Bat39391 = tf.constant([[[1.1053], [1.2979]]])
in0Con74811 = tf.constant([[[0.542, 0.8422, 0.0398, 0.1327, 0.0506], [0.7514, 0.0925, 0.1267, 0.0186, 0.1708], [0.9817, 0.375, 0.0776, 0.3329, 0.2743]]])
in0Thr4403 = tf.constant([[[[0.024, 0.596]], [[0.1115, 0.8911]]]])
in0Ave62864 = tf.constant([[[1.2967, 1.5257], [1.3917, 1.605]]])
in0Con10944 = tf.constant([[[0.2101, 0.4239, 0.9391, 0.5086], [0.3633, 0.2091, 0.666, 0.9263], [0.657, 0.7669, 0.4261, 0.1383]]])
print (np.array2string(model.predict([in0Bat39391,in0Con74811,in0Thr4403,in0Ave62864,in0Con10944],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Add4424.png')

LBat39391 = batch_normalization_layer([[[1.1053], [1.2979]]], 1, 0.4816504173267324, [0.1073, 0.2124], [0.7546, 0.6422], [0.4273, 0.7833], [0.936, 0.9118], Bat39391), 
LZer71421 = zero_padding1D_layer(Bat39391, 1, 0, Zer71421), 
LCon74811 = concatenate_layer([Zer71421,[[[0.542, 0.8422, 0.0398, 0.1327, 0.0506], [0.7514, 0.0925, 0.1267, 0.0186, 0.1708], [0.9817, 0.375, 0.0776, 0.3329, 0.2743]]]], 2, Con74811), 
LThr4403 = thresholded_relu_layer([[[[0.024, 0.596]], [[0.1115, 0.8911]]]], 6.144952361990578, Thr4403), 
LELU52657 = elu_layer(Thr4403, 3.7783376610213253, ELU52657), 
LZer33575 = zero_padding2D_layer(ELU52657, 1, 1, 1, 1, Zer33575), 
LSep22467 = separable_conv2D_layer(Zer33575, 2, 2,[[[[[0.9105], [0.9547]], [[0.6396], [0.6728]]], [[[0.1033], [0.3615]], [[0.0966], [0.218]]]],[[[[0.6004, 0.9331, 0.3986], [0.8549, 0.0824, 0.9947]]]]],[0, 0, 0], 1, 1, false, Sep22467), 
LRes30660 = reshape_layer(Sep22467, [3, 6], Res30660), 
LAve62864 = average_pooling1D_layer([[[1.2967, 1.5257], [1.3917, 1.605]]], 1, 2, true, Ave62864), 
LPer36788 = permute_layer(Ave62864, 1,2, Per36788), 
LZer50215 = zero_padding1D_layer(Per36788, 2, 0, Zer50215), 
LCon10944 = concatenate_layer([Zer50215,[[[0.2101, 0.4239, 0.9391, 0.5086], [0.3633, 0.2091, 0.666, 0.9263], [0.657, 0.7669, 0.4261, 0.1383]]]], 2, Con10944), 
LMax24472 = maximum_layer([Res30660,Con10944], Max24472), 
LAdd4424 = add_layer([Con74811,Max24472], Add4424), 
exec_layers([LBat39391,LZer71421,LCon74811,LThr4403,LELU52657,LZer33575,LSep22467,LRes30660,LAve62864,LPer36788,LZer50215,LCon10944,LMax24472,LAdd4424],["Bat39391","Zer71421","Con74811","Thr4403","ELU52657","Zer33575","Sep22467","Res30660","Ave62864","Per36788","Zer50215","Con10944","Max24472","Add4424"],Add4424,"Add4424")

Actual (Unparsed): [[[0.0000000, 0.5420000, 1.0523000, 0.4637000, 1.0718000, 0.5592000], [0.8157005, 0.7514000, 0.4558000, 0.3358000, 0.6846000, 1.0971000], [2.0314931, 2.5074000, 1.0320000, 0.8445000, 0.7590000, 0.4126000]]]

Expected (Unparsed): [[[0.0,0.542,1.0523,0.4637,1.0718,0.5592],[0.8157005107776203,0.7514,0.4558,0.3358,0.6846,1.0971],[2.0314930807813956,2.5074,1.032,0.8445,0.7589999999999999,0.41259999999999997]]]

Actual:   [[[0, 0.542, 1.0523, 0.4637, 1.0718, 0.5592], [0.8158, 0.7514, 0.4558, 0.3358, 0.6846, 1.0971], [2.0315, 2.5074, 1.032, 0.8445, 0.759, 0.4126]]]

Expected: [[[0, 0.542, 1.0523, 0.4637, 1.0718, 0.5592], [0.8158, 0.7514, 0.4558, 0.3358, 0.6846, 1.0971], [2.0315, 2.5074, 1.032, 0.8445, 0.759, 0.4126]]]