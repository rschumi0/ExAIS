import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Min16365 = tf.keras.layers.Input(shape=([1, 2, 1, 1]))
in1Min16365 = tf.keras.layers.Input(shape=([1, 2, 1, 1]))
in0Sub85755 = tf.keras.layers.Input(shape=([2, 3]))
in1Sub85755 = tf.keras.layers.Input(shape=([2, 3]))
in0Con31502 = tf.keras.layers.Input(shape=([2, 1]))
in0Mul82677 = tf.keras.layers.Input(shape=([2, 2]))
in1Mul82677 = tf.keras.layers.Input(shape=([2, 2]))

Min16365 = keras.layers.Minimum(name = 'Min16365', )([in0Min16365,in1Min16365])
Res19403 = keras.layers.Reshape((1, 2, 1), name = 'Res19403', )(Min16365)
Res45298 = keras.layers.Reshape((1, 2), name = 'Res45298', )(Res19403)
Zer71907 = keras.layers.ZeroPadding1D(padding=((1, 0)), name = 'Zer71907', )(Res45298)
Sub85755 = keras.layers.Subtract(name = 'Sub85755', )([in0Sub85755,in1Sub85755])
Res88186 = keras.layers.Reshape((2, 3, 1), name = 'Res88186', )(Sub85755)
Cro62273 = keras.layers.Cropping2D(cropping=((0, 0), (1, 1)), name = 'Cro62273', )(Res88186)
Res28984 = keras.layers.Reshape((2, 1), name = 'Res28984', )(Cro62273)
Con31502 = keras.layers.Concatenate(axis=2, name = 'Con31502', )([Res28984,in0Con31502])
Mul82677 = keras.layers.Multiply(name = 'Mul82677', )([in0Mul82677,in1Mul82677])
Max29993 = keras.layers.Maximum(name = 'Max29993', )([Con31502,Mul82677])
Add38159 = keras.layers.Add(name = 'Add38159', )([Zer71907,Max29993])
Res47414 = keras.layers.Reshape((2, 2, 1), name = 'Res47414', )(Add38159)
Res26344 = keras.layers.Reshape((2, 2, 1, 1), name = 'Res26344', )(Res47414)
Up_10130 = keras.layers.UpSampling3D(size=(1, 2, 2), name = 'Up_10130', )(Res26344)
model = tf.keras.models.Model(inputs=[in0Min16365,in1Min16365,in0Sub85755,in1Sub85755,in0Con31502,in0Mul82677,in1Mul82677], outputs=Up_10130)
in0Min16365 = tf.constant([[[[[0.1429]], [[0.7204]]]]])
in1Min16365 = tf.constant([[[[[0.696]], [[0.4659]]]]])
in0Sub85755 = tf.constant([[[0.1835, 0.3056, 0.3651], [0.5521, 0.8844, 0.5056]]])
in1Sub85755 = tf.constant([[[0.3553, 0.656, 0.7098], [0.093, 0.1926, 0.9082]]])
in0Con31502 = tf.constant([[[0.4961], [0.786]]])
in0Mul82677 = tf.constant([[[0.9426, 0.8919], [0.1357, 0.6928]]])
in1Mul82677 = tf.constant([[[0.6419, 0.2561], [0.7459, 0.5011]]])
print (np.array2string(model.predict([in0Min16365,in1Min16365,in0Sub85755,in1Sub85755,in0Con31502,in0Mul82677,in1Mul82677],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Up_10130.png')

LMin16365 = minimum_layer([[[[[[0.1429]], [[0.7204]]]]], [[[[[0.696]], [[0.4659]]]]]], Min16365), 
LRes19403 = reshape_layer(Min16365, [1, 2, 1], Res19403), 
LRes45298 = reshape_layer(Res19403, [1, 2], Res45298), 
LZer71907 = zero_padding1D_layer(Res45298, 1, 0, Zer71907), 
LSub85755 = subtract_layer([[[0.1835, 0.3056, 0.3651], [0.5521, 0.8844, 0.5056]]], [[[0.3553, 0.656, 0.7098], [0.093, 0.1926, 0.9082]]], Sub85755), 
LRes88186 = reshape_layer(Sub85755, [2, 3, 1], Res88186), 
LCro62273 = cropping2D_layer(Res88186, 0, 0, 1, 1, Cro62273), 
LRes28984 = reshape_layer(Cro62273, [2, 1], Res28984), 
LCon31502 = concatenate_layer([Res28984,[[[0.4961], [0.786]]]], 2, Con31502), 
LMul82677 = multiply_layer([[[[0.9426, 0.8919], [0.1357, 0.6928]]], [[[0.6419, 0.2561], [0.7459, 0.5011]]]], Mul82677), 
LMax29993 = maximum_layer([Con31502,Mul82677], Max29993), 
LAdd38159 = add_layer([Zer71907,Max29993], Add38159), 
LRes47414 = reshape_layer(Add38159, [2, 2, 1], Res47414), 
LRes26344 = reshape_layer(Res47414, [2, 2, 1, 1], Res26344), 
LUp_10130 = up_sampling3D_layer(Res26344, 1, 2, 2, Up_10130), 
exec_layers([LMin16365,LRes19403,LRes45298,LZer71907,LSub85755,LRes88186,LCro62273,LRes28984,LCon31502,LMul82677,LMax29993,LAdd38159,LRes47414,LRes26344,LUp_10130],["Min16365","Res19403","Res45298","Zer71907","Sub85755","Res88186","Cro62273","Res28984","Con31502","Mul82677","Max29993","Add38159","Res47414","Res26344","Up_10130"],Up_10130,"Up_10130")

Actual (Unparsed): [[[[[0.6050550], [0.6050550]], [[0.6050550], [0.6050550]], [[0.4961000], [0.4961000]], [[0.4961000], [0.4961000]]], [[[0.8347000], [0.8347000]], [[0.8347000], [0.8347000]], [[1.2519000], [1.2519000]], [[1.2519000], [1.2519000]]]]]

Expected (Unparsed): [[[[[0.60505494],[0.60505494]],[[0.60505494],[0.60505494]],[[0.4961],[0.4961]],[[0.4961],[0.4961]]],[[[0.8347],[0.8347]],[[0.8347],[0.8347]],[[1.2519],[1.2519]],[[1.2519],[1.2519]]]]]

Actual:   [[[[[0.6051], [0.6051]], [[0.6051], [0.6051]], [[0.4961], [0.4961]], [[0.4961], [0.4961]]], [[[0.8347], [0.8347]], [[0.8347], [0.8347]], [[1.2519], [1.2519]], [[1.2519], [1.2519]]]]]

Expected: [[[[[0.6051], [0.6051]], [[0.6051], [0.6051]], [[0.4961], [0.4961]], [[0.4961], [0.4961]]], [[[0.8347], [0.8347]], [[0.8347], [0.8347]], [[1.2519], [1.2519]], [[1.2519], [1.2519]]]]]