import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0GRU17326 = tf.keras.layers.Input(shape=([3, 3]))
in0Cro89244 = tf.keras.layers.Input(shape=([4, 2]))
in0Con56222 = tf.keras.layers.Input(shape=([3, 2]))

GRU17326 = keras.layers.GRU(3,reset_after=False, recurrent_activation='sigmoid', name = 'GRU17326', )(in0GRU17326)
Res28711 = keras.layers.Reshape((3, 1), name = 'Res28711', )(GRU17326)
Res2799 = keras.layers.Reshape((3, 1, 1), name = 'Res2799', )(Res28711)
Res63874 = keras.layers.Reshape((3, 1, 1, 1), name = 'Res63874', )(Res2799)
Up_32988 = keras.layers.UpSampling3D(size=(1, 2, 2), name = 'Up_32988', )(Res63874)
Res77058 = keras.layers.Reshape((3, 2, 2), name = 'Res77058', )(Up_32988)
Res37920 = keras.layers.Reshape((3, 4), name = 'Res37920', )(Res77058)
Cro89244 = keras.layers.Cropping1D(cropping=((2, 1)), name = 'Cro89244', )(in0Cro89244)
Zer86906 = keras.layers.ZeroPadding1D(padding=((2, 0)), name = 'Zer86906', )(Cro89244)
Con56222 = keras.layers.Concatenate(axis=2, name = 'Con56222', )([Zer86906,in0Con56222])
Ave18227 = keras.layers.Average(name = 'Ave18227', )([Res37920,Con56222])
ELU54558 = keras.layers.ELU(alpha=5.087538675787739, name = 'ELU54558', )(Ave18227)
model = tf.keras.models.Model(inputs=[in0GRU17326,in0Cro89244,in0Con56222], outputs=ELU54558)
w = model.get_layer('GRU17326').get_weights() 
w[0] = np.array([[1, 8, 7, 9, 8, 5, 7, 7, 7], [6, 1, 4, 8, 8, 10, 1, 4, 8], [2, 5, 7, 7, 2, 9, 9, 9, 7]])
w[1] = np.array([[1, 4, 10, 2, 7, 9, 5, 6, 4], [10, 9, 2, 5, 10, 10, 6, 4, 6], [10, 7, 3, 8, 5, 7, 1, 6, 5]])
w[2] = np.array([2, 3, 9, 3, 7, 7, 1, 9, 9])
model.get_layer('GRU17326').set_weights(w) 
in0GRU17326 = tf.constant([[[1, 4, 1], [7, 6, 5], [10, 5, 4]]])
in0Cro89244 = tf.constant([[[1.468, 1.2249], [1.5631, 1.1115], [1.0387, 1.8008], [1.6527, 1.3284]]])
in0Con56222 = tf.constant([[[0.1776, 0.1407], [0.4395, 0.3975], [0.6844, 0.6485]]])
print (np.array2string(model.predict([in0GRU17326,in0Cro89244,in0Con56222],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='ELU54558.png')

LGRU17326 = gru_layer([[[1, 4, 1], [7, 6, 5], [10, 5, 4]]],[[1, 8, 7, 9, 8, 5, 7, 7, 7], [6, 1, 4, 8, 8, 10, 1, 4, 8], [2, 5, 7, 7, 2, 9, 9, 9, 7]],[[1, 4, 10, 2, 7, 9, 5, 6, 4], [10, 9, 2, 5, 10, 10, 6, 4, 6], [10, 7, 3, 8, 5, 7, 1, 6, 5]],[2, 3, 9, 3, 7, 7, 1, 9, 9], false, GRU17326), 
LRes28711 = reshape_layer(GRU17326, [3, 1], Res28711), 
LRes2799 = reshape_layer(Res28711, [3, 1, 1], Res2799), 
LRes63874 = reshape_layer(Res2799, [3, 1, 1, 1], Res63874), 
LUp_32988 = up_sampling3D_layer(Res63874, 1, 2, 2, Up_32988), 
LRes77058 = reshape_layer(Up_32988, [3, 2, 2], Res77058), 
LRes37920 = reshape_layer(Res77058, [3, 4], Res37920), 
LCro89244 = cropping1D_layer([[[1.468, 1.2249], [1.5631, 1.1115], [1.0387, 1.8008], [1.6527, 1.3284]]], 2, 1, Cro89244), 
LZer86906 = zero_padding1D_layer(Cro89244, 2, 0, Zer86906), 
LCon56222 = concatenate_layer([Zer86906,[[[0.1776, 0.1407], [0.4395, 0.3975], [0.6844, 0.6485]]]], 2, Con56222), 
LAve18227 = average_layer([Res37920,Con56222], Ave18227), 
LELU54558 = elu_layer(Ave18227, 5.087538675787739, ELU54558), 
exec_layers([LGRU17326,LRes28711,LRes2799,LRes63874,LUp_32988,LRes77058,LRes37920,LCro89244,LZer86906,LCon56222,LAve18227,LELU54558],["GRU17326","Res28711","Res2799","Res63874","Up_32988","Res77058","Res37920","Cro89244","Zer86906","Con56222","Ave18227","ELU54558"],ELU54558,"ELU54558")

Actual (Unparsed): [[[0.0000000, 0.0000000, 0.0888000, 0.0703500], [0.0000000, 0.0000000, 0.2197500, 0.1987500], [0.5193500, 0.9004000, 0.3422000, 0.3242500]]]

Expected (Unparsed): [[[1.2723155862204294e-13,1.2723155862204294e-13,0.08880000000012724,0.07035000000012723],[1.030576846083875e-9,1.030576846083875e-9,0.21975000103057685,0.19875000103057686],[0.51935,0.9004,0.3422,0.32425]]]

Actual:   [[[0, 0, 0.0888, 0.0704], [0, 0, 0.2198, 0.1988], [0.5194, 0.9004, 0.3422, 0.3243]]]

Expected: [[[0, 0, 0.0889, 0.0704], [0, 0, 0.2198, 0.1988], [0.5194, 0.9004, 0.3422, 0.3243]]]