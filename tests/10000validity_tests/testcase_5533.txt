import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Sub44249 = tf.keras.layers.Input(shape=([3, 3, 3]))
in1Sub44249 = tf.keras.layers.Input(shape=([3, 3, 3]))
in0Min37225 = tf.keras.layers.Input(shape=([2, 2, 1]))
in1Min37225 = tf.keras.layers.Input(shape=([2, 2, 1]))
in0Con35934 = tf.keras.layers.Input(shape=([3, 3, 2]))

Sub44249 = keras.layers.Subtract(name = 'Sub44249', )([in0Sub44249,in1Sub44249])
Mas81807 = keras.layers.Masking(mask_value=2, name = 'Mas81807', )(Sub44249)
Min37225 = keras.layers.Minimum(name = 'Min37225', )([in0Min37225,in1Min37225])
Zer23257 = keras.layers.ZeroPadding2D(padding=((1, 0), (1, 0)), name = 'Zer23257', )(Min37225)
Con35934 = keras.layers.Concatenate(axis=3, name = 'Con35934', )([Zer23257,in0Con35934])
Min65302 = keras.layers.Minimum(name = 'Min65302', )([Mas81807,Con35934])
Mas12413 = keras.layers.Masking(mask_value=1, name = 'Mas12413', )(Min65302)
model = tf.keras.models.Model(inputs=[in0Sub44249,in1Sub44249,in0Min37225,in1Min37225,in0Con35934], outputs=Mas12413)
in0Sub44249 = tf.constant([[[[0.98, 0.962, 0.1201], [0.1363, 0.1455, 0.3889], [0.5395, 0.0682, 0.3421]], [[0.2356, 0.2383, 0.1669], [0.9757, 0.7048, 0.2051], [0.9789, 0.9642, 0.2442]], [[0.9465, 0.5479, 0.4666], [0.969, 0.3491, 0.8819], [0.4159, 0.2175, 0.5543]]]])
in1Sub44249 = tf.constant([[[[0.9104, 0.6346, 0.5427], [0.5691, 0.7954, 0.2106], [0.3866, 0.3789, 0.164]], [[0.2413, 0.3966, 0.3958], [0.8176, 0.0178, 0.8518], [0.1816, 0.7358, 0.2106]], [[0.9425, 0.517, 0.7445], [0.6463, 0.7151, 0.0539], [0.0445, 0.8185, 0.3354]]]])
in0Min37225 = tf.constant([[[[0.9843], [0.9084]], [[0.363], [0.951]]]])
in1Min37225 = tf.constant([[[[0.3848], [0.2441]], [[0.3463], [0.8424]]]])
in0Con35934 = tf.constant([[[[0.1275, 0.3998], [0.0691, 0.4736], [0.2118, 0.1014]], [[0.4884, 0.2562], [0.5481, 0.7432], [0.0061, 0.3557]], [[0.9036, 0.8923], [0.4368, 0.1703], [0.8128, 0.0884]]]])
print (np.array2string(model.predict([in0Sub44249,in1Sub44249,in0Min37225,in1Min37225,in0Con35934],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Mas12413.png')

LSub44249 = subtract_layer([[[[0.98, 0.962, 0.1201], [0.1363, 0.1455, 0.3889], [0.5395, 0.0682, 0.3421]], [[0.2356, 0.2383, 0.1669], [0.9757, 0.7048, 0.2051], [0.9789, 0.9642, 0.2442]], [[0.9465, 0.5479, 0.4666], [0.969, 0.3491, 0.8819], [0.4159, 0.2175, 0.5543]]]], [[[[0.9104, 0.6346, 0.5427], [0.5691, 0.7954, 0.2106], [0.3866, 0.3789, 0.164]], [[0.2413, 0.3966, 0.3958], [0.8176, 0.0178, 0.8518], [0.1816, 0.7358, 0.2106]], [[0.9425, 0.517, 0.7445], [0.6463, 0.7151, 0.0539], [0.0445, 0.8185, 0.3354]]]], Sub44249), 
LMas81807 = masking_layer(Sub44249, 2, Mas81807), 
LMin37225 = minimum_layer([[[[[0.9843], [0.9084]], [[0.363], [0.951]]]], [[[[0.3848], [0.2441]], [[0.3463], [0.8424]]]]], Min37225), 
LZer23257 = zero_padding2D_layer(Min37225, 1, 0, 1, 0, Zer23257), 
LCon35934 = concatenate_layer([Zer23257,[[[[0.1275, 0.3998], [0.0691, 0.4736], [0.2118, 0.1014]], [[0.4884, 0.2562], [0.5481, 0.7432], [0.0061, 0.3557]], [[0.9036, 0.8923], [0.4368, 0.1703], [0.8128, 0.0884]]]]], 3, Con35934), 
LMin65302 = minimum_layer([Mas81807,Con35934], Min65302), 
LMas12413 = masking_layer(Min65302, 1, Mas12413), 
exec_layers([LSub44249,LMas81807,LMin37225,LZer23257,LCon35934,LMin65302,LMas12413],["Sub44249","Mas81807","Min37225","Zer23257","Con35934","Min65302","Mas12413"],Mas12413,"Mas12413")

Actual (Unparsed): [[[[0.0000000, 0.1275000, -0.4226000], [-0.4328000, -0.6499000, 0.1783000], [0.0000000, -0.3107000, 0.1014000]], [[-0.0057000, -0.1583000, -0.2289000], [0.1581000, 0.5481000, -0.6467000], [0.2441000, 0.0061000, 0.0336000]], [[0.0000000, 0.0309000, -0.2779000], [0.3227000, -0.3660000, 0.1703000], [0.3714000, -0.6010000, 0.0884000]]]]

Expected (Unparsed): [[[[0,0.1275,-0.4226],[-0.4328000000000001,-0.6499,0.17830000000000001],[0,-0.31070000000000003,0.1014]],[[-0.005699999999999983,-0.1583,-0.2289],[0.15810000000000002,0.5481,-0.6467],[0.2441,0.0061,0.03359999999999999]],[[0,0.03090000000000004,-0.27790000000000004],[0.3227,-0.36599999999999994,0.1703],[0.3714,-0.601,0.0884]]]]

Actual:   [[[[0, 0.1275, -0.4226], [-0.4328, -0.6499, 0.1783], [0, -0.3107, 0.1014]], [[-0.0057, -0.1583, -0.2289], [0.1581, 0.5481, -0.6467], [0.2441, 0.0061, 0.0336]], [[0, 0.0309, -0.2779], [0.3227, -0.366, 0.1703], [0.3714, -0.601, 0.0884]]]]

Expected: [[[[0, 0.1275, -0.4226], [-0.4328, -0.6499, 0.1784], [0, -0.3107, 0.1014]], [[-0.0056, -0.1583, -0.2289], [0.1582, 0.5481, -0.6467], [0.2441, 0.0061, 0.0336]], [[0, 0.031, -0.2779], [0.3227, -0.3659, 0.1703], [0.3714, -0.601, 0.0884]]]]