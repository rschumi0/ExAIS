import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Sub82113 = tf.keras.layers.Input(shape=([2, 3]))
in1Sub82113 = tf.keras.layers.Input(shape=([2, 3]))
in0Con27708 = tf.keras.layers.Input(shape=([3, 3]))
in0Thr93985 = tf.keras.layers.Input(shape=([2, 1, 2, 2]))
in0Min25891 = tf.keras.layers.Input(shape=([1, 2, 2, 2]))
in1Min25891 = tf.keras.layers.Input(shape=([1, 2, 2, 2]))
in0Mul87169 = tf.keras.layers.Input(shape=([1, 2, 2, 2]))
in1Mul87169 = tf.keras.layers.Input(shape=([1, 2, 2, 2]))
in0Con50206 = tf.keras.layers.Input(shape=([2, 3]))

Sub82113 = keras.layers.Subtract(name = 'Sub82113', )([in0Sub82113,in1Sub82113])
Sim63580 = keras.layers.SimpleRNN(3,name = 'Sim63580', )(Sub82113)
Res27129 = keras.layers.Reshape((3, 1), name = 'Res27129', )(Sim63580)
Con27708 = keras.layers.Concatenate(axis=2, name = 'Con27708', )([Res27129,in0Con27708])
Thr93985 = keras.layers.ThresholdedReLU(theta=1.6535096417257136, name = 'Thr93985', input_shape=(2, 1, 2, 2))(in0Thr93985)
Res84882 = keras.layers.Reshape((2, 1, 4), name = 'Res84882', )(Thr93985)
Res70211 = keras.layers.Reshape((2, 4), name = 'Res70211', )(Res84882)
Min25891 = keras.layers.Minimum(name = 'Min25891', )([in0Min25891,in1Min25891])
Res22759 = keras.layers.Reshape((1, 2, 4), name = 'Res22759', )(Min25891)
Res72714 = keras.layers.Reshape((1, 8), name = 'Res72714', )(Res22759)
Mul87169 = keras.layers.Multiply(name = 'Mul87169', )([in0Mul87169,in1Mul87169])
Res48614 = keras.layers.Reshape((1, 2, 4), name = 'Res48614', )(Mul87169)
Res93991 = keras.layers.Reshape((1, 8), name = 'Res93991', )(Res48614)
Dot17439 = keras.layers.Dot(axes=(2, 2), name = 'Dot17439', )([Res72714,Res93991])
Zer21067 = keras.layers.ZeroPadding1D(padding=((1, 0)), name = 'Zer21067', )(Dot17439)
Con50206 = keras.layers.Concatenate(axis=2, name = 'Con50206', )([Zer21067,in0Con50206])
Add10220 = keras.layers.Add(name = 'Add10220', )([Res70211,Con50206])
Zer91288 = keras.layers.ZeroPadding1D(padding=((1, 0)), name = 'Zer91288', )(Add10220)
Min91406 = keras.layers.Minimum(name = 'Min91406', )([Con27708,Zer91288])
model = tf.keras.models.Model(inputs=[in0Sub82113,in1Sub82113,in0Con27708,in0Thr93985,in0Min25891,in1Min25891,in0Mul87169,in1Mul87169,in0Con50206], outputs=Min91406)
w = model.get_layer('Sim63580').get_weights() 
w[0] = np.array([[2, 10, 2], [10, 4, 4], [8, 8, 7]])
w[1] = np.array([[8, 5, 9], [4, 2, 5], [3, 8, 6]])
w[2] = np.array([2, 8, 1])
model.get_layer('Sim63580').set_weights(w) 
in0Sub82113 = tf.constant([[[0.9358, 0.82, 0.0845], [0.6214, 0.2169, 0.812]]])
in1Sub82113 = tf.constant([[[0.6826, 0.5049, 0.1084], [0.0864, 0.2422, 0.3568]]])
in0Con27708 = tf.constant([[[0.1291, 0.3421, 0.1478], [0.8796, 0.7448, 0.2583], [0.0167, 0.3189, 0.7734]]])
in0Thr93985 = tf.constant([[[[[0.829, 0.7552], [0.7913, 0.4959]]], [[[0.9129, 0.584], [0.9926, 0.0016]]]]])
in0Min25891 = tf.constant([[[[[0.6001, 0.9522], [0.5378, 0.9285]], [[0.3578, 0.7841], [0.5959, 0.6013]]]]])
in1Min25891 = tf.constant([[[[[0.1672, 0.3639], [0.7964, 0.5934]], [[0.7507, 0.7412], [0.0898, 0.2367]]]]])
in0Mul87169 = tf.constant([[[[[0.3542, 0.3842], [0.1009, 0.4187]], [[0.0492, 0.8436], [0.2645, 0.9769]]]]])
in1Mul87169 = tf.constant([[[[[0.774, 0.4532], [0.1177, 0.2205]], [[0.4938, 0.5123], [0.6132, 0.9797]]]]])
in0Con50206 = tf.constant([[[0.5273, 0.0263, 0.6906], [0.4783, 0.2821, 0.7471]]])
print (np.array2string(model.predict([in0Sub82113,in1Sub82113,in0Con27708,in0Thr93985,in0Min25891,in1Min25891,in0Mul87169,in1Mul87169,in0Con50206],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Min91406.png')

LSub82113 = subtract_layer([[[0.9358, 0.82, 0.0845], [0.6214, 0.2169, 0.812]]], [[[0.6826, 0.5049, 0.1084], [0.0864, 0.2422, 0.3568]]], Sub82113), 
LSim63580 = simple_rnn_layer(Sub82113,[[2, 10, 2], [10, 4, 4], [8, 8, 7]],[[8, 5, 9], [4, 2, 5], [3, 8, 6]],[2, 8, 1], Sim63580), 
LRes27129 = reshape_layer(Sim63580, [3, 1], Res27129), 
LCon27708 = concatenate_layer([Res27129,[[[0.1291, 0.3421, 0.1478], [0.8796, 0.7448, 0.2583], [0.0167, 0.3189, 0.7734]]]], 2, Con27708), 
LThr93985 = thresholded_relu_layer([[[[[0.829, 0.7552], [0.7913, 0.4959]]], [[[0.9129, 0.584], [0.9926, 0.0016]]]]], 1.6535096417257136, Thr93985), 
LRes84882 = reshape_layer(Thr93985, [2, 1, 4], Res84882), 
LRes70211 = reshape_layer(Res84882, [2, 4], Res70211), 
LMin25891 = minimum_layer([[[[[[0.6001, 0.9522], [0.5378, 0.9285]], [[0.3578, 0.7841], [0.5959, 0.6013]]]]], [[[[[0.1672, 0.3639], [0.7964, 0.5934]], [[0.7507, 0.7412], [0.0898, 0.2367]]]]]], Min25891), 
LRes22759 = reshape_layer(Min25891, [1, 2, 4], Res22759), 
LRes72714 = reshape_layer(Res22759, [1, 8], Res72714), 
LMul87169 = multiply_layer([[[[[[0.3542, 0.3842], [0.1009, 0.4187]], [[0.0492, 0.8436], [0.2645, 0.9769]]]]], [[[[[0.774, 0.4532], [0.1177, 0.2205]], [[0.4938, 0.5123], [0.6132, 0.9797]]]]]], Mul87169), 
LRes48614 = reshape_layer(Mul87169, [1, 2, 4], Res48614), 
LRes93991 = reshape_layer(Res48614, [1, 8], Res93991), 
LDot17439 = dot_layer(Res72714,Res93991, 2, 2, Dot17439), 
LZer21067 = zero_padding1D_layer(Dot17439, 1, 0, Zer21067), 
LCon50206 = concatenate_layer([Zer21067,[[[0.5273, 0.0263, 0.6906], [0.4783, 0.2821, 0.7471]]]], 2, Con50206), 
LAdd10220 = add_layer([Res70211,Con50206], Add10220), 
LZer91288 = zero_padding1D_layer(Add10220, 1, 0, Zer91288), 
LMin91406 = minimum_layer([Con27708,Zer91288], Min91406), 
exec_layers([LSub82113,LSim63580,LRes27129,LCon27708,LThr93985,LRes84882,LRes70211,LMin25891,LRes22759,LRes72714,LMul87169,LRes48614,LRes93991,LDot17439,LZer21067,LCon50206,LAdd10220,LZer91288,LMin91406],["Sub82113","Sim63580","Res27129","Con27708","Thr93985","Res84882","Res70211","Min25891","Res22759","Res72714","Mul87169","Res48614","Res93991","Dot17439","Zer21067","Con50206","Add10220","Zer91288","Min91406"],Min91406,"Min91406")

Actual (Unparsed): [[[0.0000000, 0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.5273000, 0.0263000, 0.2583000], [0.7404964, 0.0167000, 0.2821000, 0.7471000]]]

Expected (Unparsed): [[[0,0,0,0],[0,0.5273,0.0263,0.2583],[0.7404964278949999,0.0167,0.2821,0.7471]]]

Actual:   [[[0, 0, 0, 0], [0, 0.5273, 0.0263, 0.2583], [0.7405, 0.0167, 0.2821, 0.7471]]]

Expected: [[[0, 0, 0, 0], [0, 0.5273, 0.0263, 0.2583], [0.7405, 0.0167, 0.2821, 0.7471]]]