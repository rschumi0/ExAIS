import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Min7827 = tf.keras.layers.Input(shape=([2, 2, 1, 1]))
in1Min7827 = tf.keras.layers.Input(shape=([2, 2, 1, 1]))
in0Bat58403 = tf.keras.layers.Input(shape=([2]))
in0Con82663 = tf.keras.layers.Input(shape=([2]))

Min7827 = keras.layers.Minimum(name = 'Min7827', )([in0Min7827,in1Min7827])
Res49237 = keras.layers.Reshape((2, 2, 1), name = 'Res49237', )(Min7827)
Dep78401 = keras.layers.DepthwiseConv2D((1, 1),strides=(1, 1), padding='valid', name = 'Dep78401', )(Res49237)
Res13855 = keras.layers.Reshape((2, 2), name = 'Res13855', )(Dep78401)
Fla31780 = keras.layers.Flatten(name = 'Fla31780', )(Res13855)
Bat58403 = keras.layers.BatchNormalization(axis=1, epsilon=0.7597423007567331,  name = 'Bat58403', )(in0Bat58403)
Con82663 = keras.layers.Concatenate(axis=1, name = 'Con82663', )([Bat58403,in0Con82663])
Mul37391 = keras.layers.Multiply(name = 'Mul37391', )([Fla31780,Con82663])
Res23078 = keras.layers.Reshape((4, 1), name = 'Res23078', )(Mul37391)
Per80172 = keras.layers.Permute((1,2), name = 'Per80172',)(Res23078)
model = tf.keras.models.Model(inputs=[in0Min7827,in1Min7827,in0Bat58403,in0Con82663], outputs=Per80172)
w = model.get_layer('Dep78401').get_weights() 
w[0] = np.array([[[[0.5682]]]])
w[1] = np.array([0])
model.get_layer('Dep78401').set_weights(w) 
w = model.get_layer('Bat58403').get_weights() 
w[0] = np.array([0.0653, 0.1944])
w[1] = np.array([0.5588, 0.3185])
w[2] = np.array([0.0765, 0.311])
w[3] = np.array([0.0473, 0.9479])
model.get_layer('Bat58403').set_weights(w) 
in0Min7827 = tf.constant([[[[[0.7962]], [[0.1185]]], [[[0.429]], [[0.3444]]]]])
in1Min7827 = tf.constant([[[[[0.1327]], [[0.3346]]], [[[0.8839]], [[0.0536]]]]])
in0Bat58403 = tf.constant([[1.0646, 1.2168]])
in0Con82663 = tf.constant([[0.3257, 0.7223]])
print (np.array2string(model.predict([in0Min7827,in1Min7827,in0Bat58403,in0Con82663],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Per80172.png')

LMin7827 = minimum_layer([[[[[[0.7962]], [[0.1185]]], [[[0.429]], [[0.3444]]]]], [[[[[0.1327]], [[0.3346]]], [[[0.8839]], [[0.0536]]]]]], Min7827), 
LRes49237 = reshape_layer(Min7827, [2, 2, 1], Res49237), 
LDep78401 = depthwise_conv2D_layer(Res49237, 1, 1,[[[[0.5682]]]],[0], 1, 1, false, Dep78401), 
LRes13855 = reshape_layer(Dep78401, [2, 2], Res13855), 
LFla31780 = flatten_layer(Res13855, Fla31780), 
LBat58403 = batch_normalization_layer([[1.0646, 1.2168]], 1, 0.7597423007567331, [0.0653, 0.1944], [0.5588, 0.3185], [0.0765, 0.311], [0.0473, 0.9479], Bat58403), 
LCon82663 = concatenate_layer([Bat58403,[[0.3257, 0.7223]]], 1, Con82663), 
LMul37391 = multiply_layer([Fla31780,Con82663], Mul37391), 
LRes23078 = reshape_layer(Mul37391, [4, 1], Res23078), 
LPer80172 = permute_layer(Res23078, 1,2, Per80172), 
exec_layers([LMin7827,LRes49237,LDep78401,LRes13855,LFla31780,LBat58403,LCon82663,LMul37391,LRes23078,LPer80172],["Min7827","Res49237","Dep78401","Res13855","Fla31780","Bat58403","Con82663","Mul37391","Res23078","Per80172"],Per80172,"Per80172")

Actual (Unparsed): [[[0.0475491], [0.0305181], [0.0793919], [0.0219980]]]

Expected (Unparsed): [[[0.04754909228793506],[0.030518121246930242],[0.07939191546],[0.021998022096000006]]]

Actual:   [[[0.0476], [0.0306], [0.0794], [0.022]]]

Expected: [[[0.0476], [0.0306], [0.0794], [0.022]]]