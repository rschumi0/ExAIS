import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Ave40958 = tf.keras.layers.Input(shape=([1, 2, 2, 1]))
in1Ave40958 = tf.keras.layers.Input(shape=([1, 2, 2, 1]))
in0Con81352 = tf.keras.layers.Input(shape=([2, 3, 3, 1]))
in0Bat36298 = tf.keras.layers.Input(shape=([2, 3]))
in0Con47363 = tf.keras.layers.Input(shape=([2, 3, 3, 1]))
in0Min40262 = tf.keras.layers.Input(shape=([2, 2, 2, 2]))
in1Min40262 = tf.keras.layers.Input(shape=([2, 2, 2, 2]))

Ave40958 = keras.layers.Average(name = 'Ave40958', )([in0Ave40958,in1Ave40958])
Zer34997 = keras.layers.ZeroPadding3D(padding=((1, 0), (1, 0), (1, 0)), name = 'Zer34997', )(Ave40958)
Con81352 = keras.layers.Concatenate(axis=4, name = 'Con81352', )([Zer34997,in0Con81352])
Bat36298 = keras.layers.BatchNormalization(axis=2, epsilon=0.9879754399041064,  name = 'Bat36298', )(in0Bat36298)
Res24058 = keras.layers.Reshape((2, 3, 1), name = 'Res24058', )(Bat36298)
Res93746 = keras.layers.Reshape((2, 3, 1, 1), name = 'Res93746', )(Res24058)
Zer342 = keras.layers.ZeroPadding3D(padding=((0, 0), (0, 0), (2, 0)), name = 'Zer342', )(Res93746)
Con47363 = keras.layers.Concatenate(axis=4, name = 'Con47363', )([Zer342,in0Con47363])
Min40262 = keras.layers.Minimum(name = 'Min40262', )([in0Min40262,in1Min40262])
Zer89239 = keras.layers.ZeroPadding3D(padding=((0, 0), (1, 0), (1, 0)), name = 'Zer89239', )(Min40262)
Sub72999 = keras.layers.Subtract(name = 'Sub72999', )([Con47363,Zer89239])
Min90715 = keras.layers.Minimum(name = 'Min90715', )([Con81352,Sub72999])
model = tf.keras.models.Model(inputs=[in0Ave40958,in1Ave40958,in0Con81352,in0Bat36298,in0Con47363,in0Min40262,in1Min40262], outputs=Min90715)
w = model.get_layer('Bat36298').get_weights() 
w[0] = np.array([0.148, 0.882, 0.4345])
w[1] = np.array([0.7208, 0.4091, 0.9668])
w[2] = np.array([0.1919, 0.7348, 0.7818])
w[3] = np.array([0.986, 0.7528, 0.5954])
model.get_layer('Bat36298').set_weights(w) 
in0Ave40958 = tf.constant([[[[[0.6999], [0.4572]], [[0.1892], [0.8997]]]]])
in1Ave40958 = tf.constant([[[[[0.0861], [0.2975]], [[0.3307], [0.0485]]]]])
in0Con81352 = tf.constant([[[[[0.2038], [0.8018], [0.1801]], [[0.4547], [0.5396], [0.917]], [[0.5231], [0.1288], [0.3842]]], [[[0.0499], [0.1197], [0.3605]], [[0.8429], [0.2057], [0.8983]], [[0.467], [0.4665], [0.2749]]]]])
in0Bat36298 = tf.constant([[[1.0701, 1.9629, 1.7125], [1.8146, 1.7313, 1.3645]]])
in0Con47363 = tf.constant([[[[[0.3245], [0.2163], [0.628]], [[0.2279], [0.992], [0.1626]], [[0.7825], [0.5907], [0.8966]]], [[[0.9719], [0.0639], [0.1622]], [[0.6822], [0.0444], [0.8291]], [[0.6625], [0.9888], [0.8319]]]]])
in0Min40262 = tf.constant([[[[[0.3417, 0.2986], [0.4562, 0.5471]], [[0.1714, 0.2141], [0.1911, 0.7475]]], [[[0.1483, 0.922], [0.5319, 0.8681]], [[0.4805, 0.4419], [0.8842, 0.1534]]]]])
in1Min40262 = tf.constant([[[[[0.203, 0.1223], [0.9975, 0.8403]], [[0.0791, 0.1523], [0.2813, 0.8226]]], [[[0.3714, 0.38], [0.4426, 0.9153]], [[0.0376, 0.9662], [0.1506, 0.1349]]]]])
print (np.array2string(model.predict([in0Ave40958,in1Ave40958,in0Con81352,in0Bat36298,in0Con47363,in0Min40262,in1Min40262],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Min90715.png')

LAve40958 = average_layer([[[[[[0.6999], [0.4572]], [[0.1892], [0.8997]]]]], [[[[[0.0861], [0.2975]], [[0.3307], [0.0485]]]]]], Ave40958), 
LZer34997 = zero_padding3D_layer(Ave40958, 1, 0, 1, 0, 1, 0, Zer34997), 
LCon81352 = concatenate_layer([Zer34997,[[[[[0.2038], [0.8018], [0.1801]], [[0.4547], [0.5396], [0.917]], [[0.5231], [0.1288], [0.3842]]], [[[0.0499], [0.1197], [0.3605]], [[0.8429], [0.2057], [0.8983]], [[0.467], [0.4665], [0.2749]]]]]], 4, Con81352), 
LBat36298 = batch_normalization_layer([[[1.0701, 1.9629, 1.7125], [1.8146, 1.7313, 1.3645]]], 2, 0.9879754399041064, [0.148, 0.882, 0.4345], [0.7208, 0.4091, 0.9668], [0.1919, 0.7348, 0.7818], [0.986, 0.7528, 0.5954], Bat36298), 
LRes24058 = reshape_layer(Bat36298, [2, 3, 1], Res24058), 
LRes93746 = reshape_layer(Res24058, [2, 3, 1, 1], Res93746), 
LZer342 = zero_padding3D_layer(Res93746, 0, 0, 0, 0, 2, 0, Zer342), 
LCon47363 = concatenate_layer([Zer342,[[[[[0.3245], [0.2163], [0.628]], [[0.2279], [0.992], [0.1626]], [[0.7825], [0.5907], [0.8966]]], [[[0.9719], [0.0639], [0.1622]], [[0.6822], [0.0444], [0.8291]], [[0.6625], [0.9888], [0.8319]]]]]], 4, Con47363), 
LMin40262 = minimum_layer([[[[[[0.3417, 0.2986], [0.4562, 0.5471]], [[0.1714, 0.2141], [0.1911, 0.7475]]], [[[0.1483, 0.922], [0.5319, 0.8681]], [[0.4805, 0.4419], [0.8842, 0.1534]]]]], [[[[[0.203, 0.1223], [0.9975, 0.8403]], [[0.0791, 0.1523], [0.2813, 0.8226]]], [[[0.3714, 0.38], [0.4426, 0.9153]], [[0.0376, 0.9662], [0.1506, 0.1349]]]]]], Min40262), 
LZer89239 = zero_padding3D_layer(Min40262, 0, 0, 1, 0, 1, 0, Zer89239), 
LSub72999 = subtract_layer(Con47363,Zer89239, Sub72999), 
LMin90715 = minimum_layer([Con81352,Sub72999], Min90715), 
exec_layers([LAve40958,LZer34997,LCon81352,LBat36298,LRes24058,LRes93746,LZer342,LCon47363,LMin40262,LZer89239,LSub72999,LMin90715],["Ave40958","Zer34997","Con81352","Bat36298","Res24058","Res93746","Zer342","Con47363","Min40262","Zer89239","Sub72999","Min90715"],Min90715,"Min90715")

Actual (Unparsed): [[[[[0.0000000, 0.2038000], [0.0000000, 0.2163000], [0.0000000, 0.1801000]], [[0.0000000, 0.2279000], [-0.2030000, 0.5396000], [0.0000000, -0.3845000]], [[0.0000000, 0.5231000], [-0.0791000, 0.1288000], [0.0000000, 0.1491000]]], [[[0.0000000, 0.0499000], [0.0000000, 0.0639000], [0.0000000, 0.1622000]], [[0.0000000, 0.6822000], [-0.1483000, -0.3356000], [0.3773500, -0.0390000]], [[0.0000000, 0.4670000], [-0.0376000, 0.4665000], [0.4741000, 0.2749000]]]]]

Expected (Unparsed): [[[[[0,0.2038],[0,0.2163],[0,0.1801]],[[0,0.2279],[-0.203,0.5396],[0,-0.38450000000000006]],[[0,0.5231],[-0.0791,0.1288],[0,0.1490999999999999]]],[[[0,0.0499],[0,0.0639],[0,0.1622]],[[0,0.6822],[-0.1483,-0.3356],[0.37734999999999996,-0.039000000000000035]],[[0,0.467],[-0.0376,0.4665],[0.4741,0.2749]]]]]

Actual:   [[[[[0, 0.2038], [0, 0.2163], [0, 0.1801]], [[0, 0.2279], [-0.203, 0.5396], [0, -0.3845]], [[0, 0.5231], [-0.0791, 0.1288], [0, 0.1491]]], [[[0, 0.0499], [0, 0.0639], [0, 0.1622]], [[0, 0.6822], [-0.1483, -0.3356], [0.3774, -0.039]], [[0, 0.467], [-0.0376, 0.4665], [0.4741, 0.2749]]]]]

Expected: [[[[[0, 0.2038], [0, 0.2163], [0, 0.1801]], [[0, 0.2279], [-0.203, 0.5396], [0, -0.3845]], [[0, 0.5231], [-0.0791, 0.1288], [0, 0.1491]]], [[[0, 0.0499], [0, 0.0639], [0, 0.1622]], [[0, 0.6822], [-0.1483, -0.3356], [0.3774, -0.039]], [[0, 0.467], [-0.0376, 0.4665], [0.4741, 0.2749]]]]]