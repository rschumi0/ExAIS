import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Cro25738 = tf.keras.layers.Input(shape=([3, 4, 2, 2]))
in0Mul11250 = tf.keras.layers.Input(shape=([2, 1]))
in1Mul11250 = tf.keras.layers.Input(shape=([2, 1]))
in0Con24553 = tf.keras.layers.Input(shape=([4, 7]))
in0Add84669 = tf.keras.layers.Input(shape=([2, 2, 2, 2]))
in1Add84669 = tf.keras.layers.Input(shape=([2, 2, 2, 2]))
in0Max48524 = tf.keras.layers.Input(shape=([2, 2]))
in1Max48524 = tf.keras.layers.Input(shape=([2, 2]))
in0Con57408 = tf.keras.layers.Input(shape=([2, 6]))

Cro25738 = keras.layers.Cropping3D(cropping=((2, 0), (1, 2), (0, 0)), name = 'Cro25738', )(in0Cro25738)
Res84533 = keras.layers.Reshape((1, 1, 4), name = 'Res84533', )(Cro25738)
Res9892 = keras.layers.Reshape((1, 4), name = 'Res9892', )(Res84533)
Zer76130 = keras.layers.ZeroPadding1D(padding=((1, 0)), name = 'Zer76130', )(Res9892)
Mul11250 = keras.layers.Multiply(name = 'Mul11250', )([in0Mul11250,in1Mul11250])
Dot45807 = keras.layers.Dot(axes=(1, 1), name = 'Dot45807', )([Zer76130,Mul11250])
Con24553 = keras.layers.Concatenate(axis=2, name = 'Con24553', )([Dot45807,in0Con24553])
Add84669 = keras.layers.Add(name = 'Add84669', )([in0Add84669,in1Add84669])
Res88218 = keras.layers.Reshape((2, 2, 4), name = 'Res88218', )(Add84669)
Res56594 = keras.layers.Reshape((2, 8), name = 'Res56594', )(Res88218)
Max48524 = keras.layers.Maximum(name = 'Max48524', )([in0Max48524,in1Max48524])
Cro6157 = keras.layers.Cropping1D(cropping=((0, 0)), name = 'Cro6157', )(Max48524)
Con57408 = keras.layers.Concatenate(axis=2, name = 'Con57408', )([Cro6157,in0Con57408])
Max13644 = keras.layers.Maximum(name = 'Max13644', )([Res56594,Con57408])
Zer55439 = keras.layers.ZeroPadding1D(padding=((2, 0)), name = 'Zer55439', )(Max13644)
Sub37526 = keras.layers.Subtract(name = 'Sub37526', )([Con24553,Zer55439])
model = tf.keras.models.Model(inputs=[in0Cro25738,in0Mul11250,in1Mul11250,in0Con24553,in0Add84669,in1Add84669,in0Max48524,in1Max48524,in0Con57408], outputs=Sub37526)
in0Cro25738 = tf.constant([[[[[1.5182, 1.5785], [1.5296, 1.52]], [[1.8739, 1.4649], [1.3481, 1.3163]], [[1.5663, 1.5759], [1.9347, 1.0049]], [[1.7476, 1.6538], [1.9774, 1.7672]]], [[[1.8759, 1.4239], [1.2437, 1.0673]], [[1.1535, 1.0676], [1.3166, 1.2977]], [[1.0526, 1.3083], [1.6599, 1.8745]], [[1.6762, 1.5201], [1.1854, 1.5874]]], [[[1.6507, 1.7194], [1.2637, 1.4097]], [[1.091, 1.9051], [1.297, 1.0331]], [[1.9353, 1.9777], [1.5578, 1.1119]], [[1.6093, 1.3848], [1.9832, 1.5661]]]]])
in0Mul11250 = tf.constant([[[0.5447], [0.716]]])
in1Mul11250 = tf.constant([[[0.0117], [0.3293]]])
in0Con24553 = tf.constant([[[0.007, 0.1007, 0.8103, 0.3794, 0.4396, 0.9236, 0.0293], [0.9829, 0.0365, 0.4248, 0.7325, 0.6334, 0.0014, 0.7323], [0.9419, 0.3174, 0.4923, 0.3442, 0.197, 0.6483, 0.7315], [0.2813, 0.7753, 0.489, 0.8326, 0.6235, 0.1954, 0.5634]]])
in0Add84669 = tf.constant([[[[[0.5507, 0.7025], [0.3527, 0.6054]], [[0.4195, 0.4635], [0.7828, 0.0424]]], [[[0.43, 0.3862], [0.682, 0.2281]], [[0.6082, 0.7252], [0.0397, 0.5648]]]]])
in1Add84669 = tf.constant([[[[[0.6993, 0.8652], [0.0894, 0.8903]], [[0.8157, 0.2021], [0.5626, 0.179]]], [[[0.6301, 0.7676], [0.7933, 0.2782]], [[0.8059, 0.0465], [0.5474, 0.9123]]]]])
in0Max48524 = tf.constant([[[0.0771, 0.9191], [0.5062, 0.1243]]])
in1Max48524 = tf.constant([[[0.022, 0.2962], [0.7888, 0.9125]]])
in0Con57408 = tf.constant([[[0.9774, 0.798, 0.8786, 0.2534, 0.5241, 0.2852], [0.8505, 0.0188, 0.6847, 0.5561, 0.4192, 0.7749]]])
print (np.array2string(model.predict([in0Cro25738,in0Mul11250,in1Mul11250,in0Con24553,in0Add84669,in1Add84669,in0Max48524,in1Max48524,in0Con57408],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Sub37526.png')

LCro25738 = cropping3D_layer([[[[[1.5182, 1.5785], [1.5296, 1.52]], [[1.8739, 1.4649], [1.3481, 1.3163]], [[1.5663, 1.5759], [1.9347, 1.0049]], [[1.7476, 1.6538], [1.9774, 1.7672]]], [[[1.8759, 1.4239], [1.2437, 1.0673]], [[1.1535, 1.0676], [1.3166, 1.2977]], [[1.0526, 1.3083], [1.6599, 1.8745]], [[1.6762, 1.5201], [1.1854, 1.5874]]], [[[1.6507, 1.7194], [1.2637, 1.4097]], [[1.091, 1.9051], [1.297, 1.0331]], [[1.9353, 1.9777], [1.5578, 1.1119]], [[1.6093, 1.3848], [1.9832, 1.5661]]]]], 2, 0, 1, 2, 0, 0, Cro25738), 
LRes84533 = reshape_layer(Cro25738, [1, 1, 4], Res84533), 
LRes9892 = reshape_layer(Res84533, [1, 4], Res9892), 
LZer76130 = zero_padding1D_layer(Res9892, 1, 0, Zer76130), 
LMul11250 = multiply_layer([[[[0.5447], [0.716]]], [[[0.0117], [0.3293]]]], Mul11250), 
LDot45807 = dot_layer(Zer76130,Mul11250, 1, 1, Dot45807), 
LCon24553 = concatenate_layer([Dot45807,[[[0.007, 0.1007, 0.8103, 0.3794, 0.4396, 0.9236, 0.0293], [0.9829, 0.0365, 0.4248, 0.7325, 0.6334, 0.0014, 0.7323], [0.9419, 0.3174, 0.4923, 0.3442, 0.197, 0.6483, 0.7315], [0.2813, 0.7753, 0.489, 0.8326, 0.6235, 0.1954, 0.5634]]]], 2, Con24553), 
LAdd84669 = add_layer([[[[[[0.5507, 0.7025], [0.3527, 0.6054]], [[0.4195, 0.4635], [0.7828, 0.0424]]], [[[0.43, 0.3862], [0.682, 0.2281]], [[0.6082, 0.7252], [0.0397, 0.5648]]]]], [[[[[0.6993, 0.8652], [0.0894, 0.8903]], [[0.8157, 0.2021], [0.5626, 0.179]]], [[[0.6301, 0.7676], [0.7933, 0.2782]], [[0.8059, 0.0465], [0.5474, 0.9123]]]]]], Add84669), 
LRes88218 = reshape_layer(Add84669, [2, 2, 4], Res88218), 
LRes56594 = reshape_layer(Res88218, [2, 8], Res56594), 
LMax48524 = maximum_layer([[[[0.0771, 0.9191], [0.5062, 0.1243]]], [[[0.022, 0.2962], [0.7888, 0.9125]]]], Max48524), 
LCro6157 = cropping1D_layer(Max48524, 0, 0, Cro6157), 
LCon57408 = concatenate_layer([Cro6157,[[[0.9774, 0.798, 0.8786, 0.2534, 0.5241, 0.2852], [0.8505, 0.0188, 0.6847, 0.5561, 0.4192, 0.7749]]]], 2, Con57408), 
LMax13644 = maximum_layer([Res56594,Con57408], Max13644), 
LZer55439 = zero_padding1D_layer(Max13644, 2, 0, Zer55439), 
LSub37526 = subtract_layer(Con24553,Zer55439, Sub37526), 
exec_layers([LCro25738,LRes84533,LRes9892,LZer76130,LMul11250,LDot45807,LCon24553,LAdd84669,LRes88218,LRes56594,LMax48524,LCro6157,LCon57408,LMax13644,LZer55439,LSub37526],["Cro25738","Res84533","Res9892","Zer76130","Mul11250","Dot45807","Con24553","Add84669","Res88218","Res56594","Max48524","Cro6157","Con57408","Max13644","Zer55439","Sub37526"],Sub37526,"Sub37526")

Actual (Unparsed): [[[0.2572347, 0.0070000, 0.1007000, 0.8103000, 0.3794000, 0.4396000, 0.9236000, 0.0293000], [0.4491822, 0.9829000, 0.0365000, 0.4248000, 0.7325000, 0.6334000, 0.0014000, 0.7323000], [-0.9441949, -0.6258000, -0.6600000, -1.0034000, -0.8910000, -0.4686000, -0.6971000, 0.4463000], [-0.8165169, -0.8725000, -0.6999999, -0.0173000, -0.5815000, -0.1482000, -0.3917000, -0.9137000]]]

Expected (Unparsed): [[[0.25723467079999995,0.007,0.1007,0.8103,0.3794,0.4396,0.9236,0.0293],[0.44918219187999997,0.9829,0.0365,0.4248,0.7325,0.6334,0.0014,0.7323],[-0.9441948964,-0.6257999999999999,-0.66,-1.0034,-0.8909999999999998,-0.46859999999999996,-0.6971000000000002,0.44630000000000003],[-0.8165169217200001,-0.8724999999999999,-0.7000000000000001,-0.017299999999999982,-0.5814999999999999,-0.1481999999999999,-0.39169999999999994,-0.9137000000000001]]]

Actual:   [[[0.2573, 0.007, 0.1007, 0.8103, 0.3794, 0.4396, 0.9236, 0.0293], [0.4492, 0.9829, 0.0365, 0.4248, 0.7325, 0.6334, 0.0014, 0.7323], [-0.9441, -0.6258, -0.66, -1.0034, -0.891, -0.4686, -0.6971, 0.4463], [-0.8165, -0.8725, -0.6999, -0.0173, -0.5815, -0.1482, -0.3917, -0.9137]]]

Expected: [[[0.2573, 0.007, 0.1007, 0.8103, 0.3794, 0.4396, 0.9236, 0.0293], [0.4492, 0.9829, 0.0365, 0.4248, 0.7325, 0.6334, 0.0014, 0.7323], [-0.9441, -0.6257, -0.66, -1.0034, -0.8909, -0.4685, -0.6971, 0.4464], [-0.8165, -0.8724, -0.7, -0.0172, -0.5814, -0.1481, -0.3916, -0.9137]]]