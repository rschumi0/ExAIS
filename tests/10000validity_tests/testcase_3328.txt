import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Max92064 = tf.keras.layers.Input(shape=([2, 2]))
in1Max92064 = tf.keras.layers.Input(shape=([2, 2]))
in0Con41618 = tf.keras.layers.Input(shape=([2, 2, 2]))
in0Add50977 = tf.keras.layers.Input(shape=([2, 1]))
in1Add50977 = tf.keras.layers.Input(shape=([2, 1]))
in0Con31812 = tf.keras.layers.Input(shape=([2, 2, 2]))
in0Con29618 = tf.keras.layers.Input(shape=([2, 2, 1]))

Max92064 = keras.layers.Maximum(name = 'Max92064', )([in0Max92064,in1Max92064])
Res44706 = keras.layers.Reshape((2, 2, 1), name = 'Res44706', )(Max92064)
Con41618 = keras.layers.Concatenate(axis=3, name = 'Con41618', )([Res44706,in0Con41618])
Add50977 = keras.layers.Add(name = 'Add50977', )([in0Add50977,in1Add50977])
Res42827 = keras.layers.Reshape((2, 1, 1), name = 'Res42827', )(Add50977)
Zer42712 = keras.layers.ZeroPadding2D(padding=((0, 0), (1, 0)), name = 'Zer42712', )(Res42827)
Con31812 = keras.layers.Concatenate(axis=3, name = 'Con31812', )([Zer42712,in0Con31812])
Con29618 = keras.layers.Conv2DTranspose(3, (2, 1),strides=(1, 1), padding='same', name = 'Con29618', )(in0Con29618)
Mul19159 = keras.layers.Multiply(name = 'Mul19159', )([Con31812,Con29618])
Thr30957 = keras.layers.ThresholdedReLU(theta=5.567326892507522, name = 'Thr30957', )(Mul19159)
Sub42852 = keras.layers.Subtract(name = 'Sub42852', )([Con41618,Thr30957])
model = tf.keras.models.Model(inputs=[in0Max92064,in1Max92064,in0Con41618,in0Add50977,in1Add50977,in0Con31812,in0Con29618], outputs=Sub42852)
w = model.get_layer('Con29618').get_weights() 
w[0] = np.array([[[[0.652], [0.2131], [0.49]]], [[[0.9209], [0.8714], [0.7655]]]])
w[1] = np.array([0, 0, 0])
model.get_layer('Con29618').set_weights(w) 
in0Max92064 = tf.constant([[[0.5818, 0.2638], [0.8544, 0.5436]]])
in1Max92064 = tf.constant([[[0.5552, 0.7067], [0.6597, 0.5183]]])
in0Con41618 = tf.constant([[[[0.7836, 0.1822], [0.1451, 0.4736]], [[0.5385, 0.3969], [0.6743, 0.0003]]]])
in0Add50977 = tf.constant([[[0.4026], [0.8211]]])
in1Add50977 = tf.constant([[[0.1433], [0.8033]]])
in0Con31812 = tf.constant([[[[0.6561, 0.7724], [0.79, 0.5773]], [[0.0914, 0.3058], [0.6851, 0.6764]]]])
in0Con29618 = tf.constant([[[[0.3549], [0.591]], [[0.3755], [0.8437]]]])
print (np.array2string(model.predict([in0Max92064,in1Max92064,in0Con41618,in0Add50977,in1Add50977,in0Con31812,in0Con29618],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Sub42852.png')

LMax92064 = maximum_layer([[[[0.5818, 0.2638], [0.8544, 0.5436]]], [[[0.5552, 0.7067], [0.6597, 0.5183]]]], Max92064), 
LRes44706 = reshape_layer(Max92064, [2, 2, 1], Res44706), 
LCon41618 = concatenate_layer([Res44706,[[[[0.7836, 0.1822], [0.1451, 0.4736]], [[0.5385, 0.3969], [0.6743, 0.0003]]]]], 3, Con41618), 
LAdd50977 = add_layer([[[[0.4026], [0.8211]]], [[[0.1433], [0.8033]]]], Add50977), 
LRes42827 = reshape_layer(Add50977, [2, 1, 1], Res42827), 
LZer42712 = zero_padding2D_layer(Res42827, 0, 0, 1, 0, Zer42712), 
LCon31812 = concatenate_layer([Zer42712,[[[[0.6561, 0.7724], [0.79, 0.5773]], [[0.0914, 0.3058], [0.6851, 0.6764]]]]], 3, Con31812), 
LCon29618 = conv2D_transpose_layer([[[[0.3549], [0.591]], [[0.3755], [0.8437]]]], 2, 1,[[[[0.652], [0.2131], [0.49]]], [[[0.9209], [0.8714], [0.7655]]]],[0, 0, 0], 1, 1, true, Con29618), 
LMul19159 = multiply_layer([Con31812,Con29618], Mul19159), 
LThr30957 = thresholded_relu_layer(Mul19159, 5.567326892507522, Thr30957), 
LSub42852 = subtract_layer(Con41618,Thr30957, Sub42852), 
exec_layers([LMax92064,LRes44706,LCon41618,LAdd50977,LRes42827,LZer42712,LCon31812,LCon29618,LMul19159,LThr30957,LSub42852],["Max92064","Res44706","Con41618","Add50977","Res42827","Zer42712","Con31812","Con29618","Mul19159","Thr30957","Sub42852"],Sub42852,"Sub42852")

Actual (Unparsed): [[[[0.5818000, 0.7836000, 0.1822000], [0.7067000, 0.1451000, 0.4736000]], [[0.8544000, 0.5385000, 0.3969000], [0.5436000, 0.6743000, 0.0003000]]]]

Expected (Unparsed): [[[[0.5818,0.7836,0.1822],[0.7067,0.1451,0.4736]],[[0.8544,0.5385,0.3969],[0.5436,0.6743,0.0003]]]]

Actual:   [[[[0.5818, 0.7836, 0.1822], [0.7067, 0.1451, 0.4736]], [[0.8544, 0.5385, 0.3969], [0.5436, 0.6743, 0.0003]]]]

Expected: [[[[0.5818, 0.7836, 0.1822], [0.7067, 0.1451, 0.4736]], [[0.8544, 0.5385, 0.3969], [0.5436, 0.6743, 0.0003]]]]