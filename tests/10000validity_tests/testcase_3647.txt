import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0LST42799 = tf.keras.layers.Input(shape=([3, 3]))
in0Con96153 = tf.keras.layers.Input(shape=([3, 3, 3]))
in0Loc10329 = tf.keras.layers.Input(shape=([1, 2, 1]))

LST42799 = keras.layers.LSTM(3,recurrent_activation='sigmoid', name = 'LST42799', )(in0LST42799)
Res53177 = keras.layers.Reshape((3, 1), name = 'Res53177', )(LST42799)
Res17805 = keras.layers.Reshape((3, 1, 1), name = 'Res17805', )(Res53177)
Zer62563 = keras.layers.ZeroPadding2D(padding=((0, 0), (2, 0)), name = 'Zer62563', )(Res17805)
Con96153 = keras.layers.Concatenate(axis=3, name = 'Con96153', )([Zer62563,in0Con96153])
Loc10329 = keras.layers.LocallyConnected2D(4, (1, 1),strides=(1, 1), name = 'Loc10329', )(in0Loc10329)
Zer51190 = keras.layers.ZeroPadding2D(padding=((2, 0), (1, 0)), name = 'Zer51190', )(Loc10329)
Max87861 = keras.layers.Maximum(name = 'Max87861', )([Con96153,Zer51190])
model = tf.keras.models.Model(inputs=[in0LST42799,in0Con96153,in0Loc10329], outputs=Max87861)
w = model.get_layer('LST42799').get_weights() 
w[0] = np.array([[5, 1, 9, 3, 2, 4, 6, 5, 8, 4, 7, 2], [6, 3, 8, 8, 2, 7, 3, 3, 3, 8, 10, 3], [4, 5, 8, 2, 8, 5, 1, 6, 7, 6, 1, 2]])
w[1] = np.array([[5, 4, 8, 5, 1, 3, 10, 10, 5, 3, 3, 8], [5, 9, 7, 1, 9, 8, 3, 1, 9, 8, 10, 8], [8, 7, 7, 4, 7, 8, 6, 10, 7, 6, 10, 1]])
w[2] = np.array([3, 7, 9, 5, 6, 10, 6, 3, 9, 8, 6, 4])
model.get_layer('LST42799').set_weights(w) 
w = model.get_layer('Loc10329').get_weights() 
w[0] = np.array([[[0.7927, 0.4795, 0.3147, 0.7464]], [[0.007, 0.949, 0.3027, 0.1874]]])
w[1] = np.array([[[0, 0, 0, 0], [0, 0, 0, 0]]])
model.get_layer('Loc10329').set_weights(w) 
in0LST42799 = tf.constant([[[6, 8, 2], [4, 6, 6], [8, 3, 5]]])
in0Con96153 = tf.constant([[[[0.4564, 0.9049, 0.784], [0.617, 0.1919, 0.0961], [0.1316, 0.4836, 0.6599]], [[0.4161, 0.6409, 0.117], [0.5591, 0.2423, 0.9291], [0.7074, 0.2322, 0.4041]], [[0.9911, 0.9264, 0.9505], [0.6021, 0.1423, 0.6939], [0.7125, 0.1747, 0.9705]]]])
in0Loc10329 = tf.constant([[[[0.1292], [0.2509]]]])
print (np.array2string(model.predict([in0LST42799,in0Con96153,in0Loc10329],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Max87861.png')

LLST42799 = lstm_layer([[[6, 8, 2], [4, 6, 6], [8, 3, 5]]],[[5, 1, 9, 3, 2, 4, 6, 5, 8, 4, 7, 2], [6, 3, 8, 8, 2, 7, 3, 3, 3, 8, 10, 3], [4, 5, 8, 2, 8, 5, 1, 6, 7, 6, 1, 2]],[[5, 4, 8, 5, 1, 3, 10, 10, 5, 3, 3, 8], [5, 9, 7, 1, 9, 8, 3, 1, 9, 8, 10, 8], [8, 7, 7, 4, 7, 8, 6, 10, 7, 6, 10, 1]],[3, 7, 9, 5, 6, 10, 6, 3, 9, 8, 6, 4], LST42799), 
LRes53177 = reshape_layer(LST42799, [3, 1], Res53177), 
LRes17805 = reshape_layer(Res53177, [3, 1, 1], Res17805), 
LZer62563 = zero_padding2D_layer(Res17805, 0, 0, 2, 0, Zer62563), 
LCon96153 = concatenate_layer([Zer62563,[[[[0.4564, 0.9049, 0.784], [0.617, 0.1919, 0.0961], [0.1316, 0.4836, 0.6599]], [[0.4161, 0.6409, 0.117], [0.5591, 0.2423, 0.9291], [0.7074, 0.2322, 0.4041]], [[0.9911, 0.9264, 0.9505], [0.6021, 0.1423, 0.6939], [0.7125, 0.1747, 0.9705]]]]], 3, Con96153), 
LLoc10329 = locally_connected2D_layer([[[[0.1292], [0.2509]]]], 1, 1,[[[0.7927, 0.4795, 0.3147, 0.7464]], [[0.007, 0.949, 0.3027, 0.1874]]],[[[0, 0, 0, 0], [0, 0, 0, 0]]], 1, 1, Loc10329), 
LZer51190 = zero_padding2D_layer(Loc10329, 2, 0, 1, 0, Zer51190), 
LMax87861 = maximum_layer([Con96153,Zer51190], Max87861), 
exec_layers([LLST42799,LRes53177,LRes17805,LZer62563,LCon96153,LLoc10329,LZer51190,LMax87861],["LST42799","Res53177","Res17805","Zer62563","Con96153","Loc10329","Zer51190","Max87861"],Max87861,"Max87861")

Actual (Unparsed): [[[[0.0000000, 0.4564000, 0.9049000, 0.7840000], [0.0000000, 0.6170000, 0.1919000, 0.0961000], [0.9950548, 0.1316000, 0.4836000, 0.6599000]], [[0.0000000, 0.4161000, 0.6409000, 0.1170000], [0.0000000, 0.5591000, 0.2423000, 0.9291000], [0.9950548, 0.7074000, 0.2322000, 0.4041000]], [[0.0000000, 0.9911000, 0.9264000, 0.9505000], [0.1024168, 0.6021000, 0.1423000, 0.6939000], [0.9950548, 0.7125000, 0.1747000, 0.9705000]]]]

Expected (Unparsed): [[[[0,0.4564,0.9049,0.784],[0,0.617,0.1919,0.0961],[0.9950547536867305,0.1316,0.4836,0.6599]],[[0,0.4161,0.6409,0.117],[0,0.5591,0.2423,0.9291],[0.9950547536867305,0.7074,0.2322,0.4041]],[[0,0.9911,0.9264,0.9505],[0.10241684000000001,0.6021,0.1423,0.6939],[0.9950547536867305,0.7125,0.1747,0.9705]]]]

Actual:   [[[[0, 0.4564, 0.9049, 0.784], [0, 0.617, 0.1919, 0.0961], [0.9951, 0.1316, 0.4836, 0.6599]], [[0, 0.4161, 0.6409, 0.117], [0, 0.5591, 0.2423, 0.9291], [0.9951, 0.7074, 0.2322, 0.4041]], [[0, 0.9911, 0.9264, 0.9505], [0.1025, 0.6021, 0.1423, 0.6939], [0.9951, 0.7125, 0.1747, 0.9705]]]]

Expected: [[[[0, 0.4564, 0.9049, 0.784], [0, 0.617, 0.1919, 0.0961], [0.9951, 0.1316, 0.4836, 0.6599]], [[0, 0.4161, 0.6409, 0.117], [0, 0.5591, 0.2423, 0.9291], [0.9951, 0.7074, 0.2322, 0.4041]], [[0, 0.9911, 0.9264, 0.9505], [0.1025, 0.6021, 0.1423, 0.6939], [0.9951, 0.7125, 0.1747, 0.9705]]]]