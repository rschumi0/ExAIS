import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Max69742 = tf.keras.layers.Input(shape=([2, 2]))
in1Max69742 = tf.keras.layers.Input(shape=([2, 2]))
in0Con30041 = tf.keras.layers.Input(shape=([3, 3]))
in0Mas63289 = tf.keras.layers.Input(shape=([3, 4]))

Max69742 = keras.layers.Maximum(name = 'Max69742', )([in0Max69742,in1Max69742])
Zer12387 = keras.layers.ZeroPadding1D(padding=((1, 1)), name = 'Zer12387', )(Max69742)
Sim21925 = keras.layers.SimpleRNN(1,name = 'Sim21925', )(Zer12387)
Res6800 = keras.layers.Reshape((1, 1), name = 'Res6800', )(Sim21925)
Zer38091 = keras.layers.ZeroPadding1D(padding=((2, 0)), name = 'Zer38091', )(Res6800)
Con30041 = keras.layers.Concatenate(axis=2, name = 'Con30041', )([Zer38091,in0Con30041])
Mas63289 = keras.layers.Masking(mask_value=2, name = 'Mas63289', )(in0Mas63289)
Mul77368 = keras.layers.Multiply(name = 'Mul77368', )([Con30041,Mas63289])
model = tf.keras.models.Model(inputs=[in0Max69742,in1Max69742,in0Con30041,in0Mas63289], outputs=Mul77368)
w = model.get_layer('Sim21925').get_weights() 
w[0] = np.array([[3], [10]])
w[1] = np.array([[9]])
w[2] = np.array([3])
model.get_layer('Sim21925').set_weights(w) 
in0Max69742 = tf.constant([[[0.3912, 0.5683], [0.0484, 0.4909]]])
in1Max69742 = tf.constant([[[0.0378, 0.0784], [0.9269, 0.3004]]])
in0Con30041 = tf.constant([[[0.7883, 0.9677, 0.7965], [0.7912, 0.06, 0.6991], [0.6245, 0.7081, 0.6214]]])
in0Mas63289 = tf.constant([[[1.1005, 1.5095, 1.1218, 1.3837], [1.2168, 1.9768, 1.1263, 1.8708], [1.2743, 1.1761, 1.8263, 1.6016]]])
print (np.array2string(model.predict([in0Max69742,in1Max69742,in0Con30041,in0Mas63289],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Mul77368.png')

LMax69742 = maximum_layer([[[[0.3912, 0.5683], [0.0484, 0.4909]]], [[[0.0378, 0.0784], [0.9269, 0.3004]]]], Max69742), 
LZer12387 = zero_padding1D_layer(Max69742, 1, 1, Zer12387), 
LSim21925 = simple_rnn_layer(Zer12387,[[3], [10]],[[9]],[3], Sim21925), 
LRes6800 = reshape_layer(Sim21925, [1, 1], Res6800), 
LZer38091 = zero_padding1D_layer(Res6800, 2, 0, Zer38091), 
LCon30041 = concatenate_layer([Zer38091,[[[0.7883, 0.9677, 0.7965], [0.7912, 0.06, 0.6991], [0.6245, 0.7081, 0.6214]]]], 2, Con30041), 
LMas63289 = masking_layer([[[1.1005, 1.5095, 1.1218, 1.3837], [1.2168, 1.9768, 1.1263, 1.8708], [1.2743, 1.1761, 1.8263, 1.6016]]], 2, Mas63289), 
LMul77368 = multiply_layer([Con30041,Mas63289], Mul77368), 
exec_layers([LMax69742,LZer12387,LSim21925,LRes6800,LZer38091,LCon30041,LMas63289,LMul77368],["Max69742","Zer12387","Sim21925","Res6800","Zer38091","Con30041","Mas63289","Mul77368"],Mul77368,"Mul77368")

Actual (Unparsed): [[[0.0000000, 1.1899388, 1.0855658, 1.1021171], [0.0000000, 1.5640441, 0.0675780, 1.3078763], [1.2743000, 0.7344744, 1.2932031, 0.9952343]]]

Expected (Unparsed): [[[0.0,1.18993885,1.08556586,1.10211705],[0.0,1.56404416,0.067578,1.3078762800000001],[1.274299999903787,0.73447445,1.29320303,0.9952342399999998]]]

Actual:   [[[0, 1.19, 1.0856, 1.1022], [0, 1.5641, 0.0676, 1.3079], [1.2743, 0.7345, 1.2933, 0.9953]]]

Expected: [[[0, 1.19, 1.0856, 1.1022], [0, 1.5641, 0.0676, 1.3079], [1.2743, 0.7345, 1.2933, 0.9953]]]