import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Dep24192 = tf.keras.layers.Input(shape=([2, 2, 2]))

Dep24192 = keras.layers.DepthwiseConv2D((1, 1),strides=(1, 1), padding='same', name = 'Dep24192', )(in0Dep24192)
Res18658 = keras.layers.Reshape((2, 2, 2, 1), name = 'Res18658', )(Dep24192)
Con3749 = keras.layers.Conv3DTranspose(2, (1, 1, 1),strides=(1, 1, 1), padding='same', name = 'Con3749', )(Res18658)
model = tf.keras.models.Model(inputs=[in0Dep24192], outputs=Con3749)
w = model.get_layer('Dep24192').get_weights() 
w[0] = np.array([[[[0.3948], [0.2583]]]])
w[1] = np.array([0, 0])
model.get_layer('Dep24192').set_weights(w) 
w = model.get_layer('Con3749').get_weights() 
w[0] = np.array([[[[[0.9199], [0.5659]]]]])
w[1] = np.array([0, 0])
model.get_layer('Con3749').set_weights(w) 
in0Dep24192 = tf.constant([[[[0.7276, 0.3753], [0.1824, 0.3309]], [[0.2794, 0.2226], [0.7298, 0.7266]]]])
print (np.array2string(model.predict([in0Dep24192],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Con3749.png')

LDep24192 = depthwise_conv2D_layer([[[[0.7276, 0.3753], [0.1824, 0.3309]], [[0.2794, 0.2226], [0.7298, 0.7266]]]], 1, 1,[[[[0.3948], [0.2583]]]],[0, 0], 1, 1, true, Dep24192), 
LRes18658 = reshape_layer(Dep24192, [2, 2, 2, 1], Res18658), 
LCon3749 = conv3D_transpose_layer(Res18658, 1, 1, 1,[[[[[0.9199], [0.5659]]]]],[0, 0], 1, 1, 1, true, Con3749), 
exec_layers([LDep24192,LRes18658,LCon3749],["Dep24192","Res18658","Con3749"],Con3749,"Con3749")

Actual (Unparsed): [[[[[0.2642472, 0.1625584], [0.0891751, 0.0548583]], [[0.0662434, 0.0407513], [0.0786252, 0.0483683]]], [[[0.1014715, 0.0624228], [0.0528920, 0.0325379]], [[0.2650462, 0.1630500], [0.1726475, 0.1062086]]]]]

Expected (Unparsed): [[[[[0.264247235952,0.16255844203199998],[0.089175096801,0.05485834034099999]],[[0.066243397248,0.040751319168],[0.078625205253,0.04836830487299999]]],[[[0.101471519688,0.06242279920799999],[0.052892023841999994,0.03253788052199999]],[[0.265046224296,0.16304996013599998],[0.172647549522,0.10620855340199999]]]]]

Actual:   [[[[[0.2643, 0.1626], [0.0892, 0.0549]], [[0.0663, 0.0408], [0.0787, 0.0484]]], [[[0.1015, 0.0625], [0.0529, 0.0326]], [[0.2651, 0.1631], [0.1727, 0.1063]]]]]

Expected: [[[[[0.2643, 0.1626], [0.0892, 0.0549]], [[0.0663, 0.0408], [0.0787, 0.0484]]], [[[0.1015, 0.0625], [0.0529, 0.0326]], [[0.2651, 0.1631], [0.1727, 0.1063]]]]]