import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Add522 = tf.keras.layers.Input(shape=([1, 1, 2]))
in1Add522 = tf.keras.layers.Input(shape=([1, 1, 2]))
in0Sim2347 = tf.keras.layers.Input(shape=([2, 3]))
in0LST94965 = tf.keras.layers.Input(shape=([3, 3]))
in0Con96733 = tf.keras.layers.Input(shape=([1]))

Add522 = keras.layers.Add(name = 'Add522', )([in0Add522,in1Add522])
Res47851 = keras.layers.Reshape((1, 2), name = 'Res47851', )(Add522)
Fla73868 = keras.layers.Flatten(name = 'Fla73868', )(Res47851)
Sim2347 = keras.layers.SimpleRNN(3,name = 'Sim2347', )(in0Sim2347)
LST94965 = keras.layers.LSTM(3,recurrent_activation='sigmoid', name = 'LST94965', )(in0LST94965)
Dot12922 = keras.layers.Dot(axes=(1, 1), name = 'Dot12922', )([Sim2347,LST94965])
Con96733 = keras.layers.Concatenate(axis=1, name = 'Con96733', )([Dot12922,in0Con96733])
Mul40481 = keras.layers.Multiply(name = 'Mul40481', )([Fla73868,Con96733])
model = tf.keras.models.Model(inputs=[in0Add522,in1Add522,in0Sim2347,in0LST94965,in0Con96733], outputs=Mul40481)
w = model.get_layer('Sim2347').get_weights() 
w[0] = np.array([[2, 2, 3], [6, 8, 3], [3, 4, 5]])
w[1] = np.array([[3, 1, 2], [2, 9, 4], [7, 6, 1]])
w[2] = np.array([6, 7, 1])
model.get_layer('Sim2347').set_weights(w) 
w = model.get_layer('LST94965').get_weights() 
w[0] = np.array([[5, 3, 1, 4, 6, 5, 10, 5, 7, 8, 10, 4], [8, 6, 4, 9, 10, 10, 3, 7, 3, 9, 3, 7], [9, 1, 10, 4, 8, 9, 9, 3, 5, 7, 6, 6]])
w[1] = np.array([[6, 10, 5, 2, 3, 1, 7, 9, 3, 10, 7, 9], [5, 2, 7, 10, 9, 3, 3, 7, 7, 9, 9, 10], [10, 5, 9, 8, 6, 4, 4, 10, 8, 8, 3, 2]])
w[2] = np.array([5, 3, 7, 9, 2, 1, 3, 10, 9, 1, 6, 8])
model.get_layer('LST94965').set_weights(w) 
in0Add522 = tf.constant([[[[0.0898, 0.9423]]]])
in1Add522 = tf.constant([[[[0.708, 0.4958]]]])
in0Sim2347 = tf.constant([[[1, 4, 9], [4, 6, 10]]])
in0LST94965 = tf.constant([[[4, 5, 10], [9, 7, 4], [3, 10, 3]]])
in0Con96733 = tf.constant([[0.3988]])
print (np.array2string(model.predict([in0Add522,in1Add522,in0Sim2347,in0LST94965,in0Con96733],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Mul40481.png')

LAdd522 = add_layer([[[[[0.0898, 0.9423]]]], [[[[0.708, 0.4958]]]]], Add522), 
LRes47851 = reshape_layer(Add522, [1, 2], Res47851), 
LFla73868 = flatten_layer(Res47851, Fla73868), 
LSim2347 = simple_rnn_layer([[[1, 4, 9], [4, 6, 10]]],[[2, 2, 3], [6, 8, 3], [3, 4, 5]],[[3, 1, 2], [2, 9, 4], [7, 6, 1]],[6, 7, 1], Sim2347), 
LLST94965 = lstm_layer([[[4, 5, 10], [9, 7, 4], [3, 10, 3]]],[[5, 3, 1, 4, 6, 5, 10, 5, 7, 8, 10, 4], [8, 6, 4, 9, 10, 10, 3, 7, 3, 9, 3, 7], [9, 1, 10, 4, 8, 9, 9, 3, 5, 7, 6, 6]],[[6, 10, 5, 2, 3, 1, 7, 9, 3, 10, 7, 9], [5, 2, 7, 10, 9, 3, 3, 7, 7, 9, 9, 10], [10, 5, 9, 8, 6, 4, 4, 10, 8, 8, 3, 2]],[5, 3, 7, 9, 2, 1, 3, 10, 9, 1, 6, 8], LST94965), 
LDot12922 = dot_layer(Sim2347,LST94965, 1, 1, Dot12922), 
LCon96733 = concatenate_layer([Dot12922,[[0.3988]]], 1, Con96733), 
LMul40481 = multiply_layer([Fla73868,Con96733], Mul40481), 
exec_layers([LAdd522,LRes47851,LFla73868,LSim2347,LLST94965,LDot12922,LCon96733,LMul40481],["Add522","Res47851","Fla73868","Sim2347","LST94965","Dot12922","Con96733","Mul40481"],Mul40481,"Mul40481")

Actual (Unparsed): [[2.3815641, 0.5735143]]

Expected (Unparsed): [[2.3815640474738204,0.5735142799999999]]

Actual:   [[2.3816, 0.5736]]

Expected: [[2.3816, 0.5736]]