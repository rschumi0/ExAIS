import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Mul22844 = tf.keras.layers.Input(shape=([1, 2, 2, 1]))
in1Mul22844 = tf.keras.layers.Input(shape=([1, 2, 2, 1]))

Mul22844 = keras.layers.Multiply(name = 'Mul22844', )([in0Mul22844,in1Mul22844])
Res65545 = keras.layers.Reshape((1, 2, 2), name = 'Res65545', )(Mul22844)
Up_37357 = keras.layers.UpSampling2D(size=(1, 2), name = 'Up_37357', )(Res65545)
Res17233 = keras.layers.Reshape((1, 4, 2, 1), name = 'Res17233', )(Up_37357)
Zer81303 = keras.layers.ZeroPadding3D(padding=((1, 1), (1, 1), (1, 1)), name = 'Zer81303', )(Res17233)
model = tf.keras.models.Model(inputs=[in0Mul22844,in1Mul22844], outputs=Zer81303)
in0Mul22844 = tf.constant([[[[[0.9753], [0.2903]], [[0.5446], [0.5778]]]]])
in1Mul22844 = tf.constant([[[[[0.2157], [0.0077]], [[0.9642], [0.8935]]]]])
print (np.array2string(model.predict([in0Mul22844,in1Mul22844],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Zer81303.png')

LMul22844 = multiply_layer([[[[[[0.9753], [0.2903]], [[0.5446], [0.5778]]]]], [[[[[0.2157], [0.0077]], [[0.9642], [0.8935]]]]]], Mul22844), 
LRes65545 = reshape_layer(Mul22844, [1, 2, 2], Res65545), 
LUp_37357 = up_sampling2D_layer(Res65545, 1, 2, Up_37357), 
LRes17233 = reshape_layer(Up_37357, [1, 4, 2, 1], Res17233), 
LZer81303 = zero_padding3D_layer(Res17233, 1, 1, 1, 1, 1, 1, Zer81303), 
exec_layers([LMul22844,LRes65545,LUp_37357,LRes17233,LZer81303],["Mul22844","Res65545","Up_37357","Res17233","Zer81303"],Zer81303,"Zer81303")

Actual (Unparsed): [[[[[0.0000000], [0.0000000], [0.0000000], [0.0000000]], [[0.0000000], [0.0000000], [0.0000000], [0.0000000]], [[0.0000000], [0.0000000], [0.0000000], [0.0000000]], [[0.0000000], [0.0000000], [0.0000000], [0.0000000]], [[0.0000000], [0.0000000], [0.0000000], [0.0000000]], [[0.0000000], [0.0000000], [0.0000000], [0.0000000]]], [[[0.0000000], [0.0000000], [0.0000000], [0.0000000]], [[0.0000000], [0.2103722], [0.0022353], [0.0000000]], [[0.0000000], [0.2103722], [0.0022353], [0.0000000]], [[0.0000000], [0.5251033], [0.5162643], [0.0000000]], [[0.0000000], [0.5251033], [0.5162643], [0.0000000]], [[0.0000000], [0.0000000], [0.0000000], [0.0000000]]], [[[0.0000000], [0.0000000], [0.0000000], [0.0000000]], [[0.0000000], [0.0000000], [0.0000000], [0.0000000]], [[0.0000000], [0.0000000], [0.0000000], [0.0000000]], [[0.0000000], [0.0000000], [0.0000000], [0.0000000]], [[0.0000000], [0.0000000], [0.0000000], [0.0000000]], [[0.0000000], [0.0000000], [0.0000000], [0.0000000]]]]]

Expected (Unparsed): [[[[[0],[0],[0],[0]],[[0],[0],[0],[0]],[[0],[0],[0],[0]],[[0],[0],[0],[0]],[[0],[0],[0],[0]],[[0],[0],[0],[0]]],[[[0],[0],[0],[0]],[[0],[0.21037221],[0.00223531],[0]],[[0],[0.21037221],[0.00223531],[0]],[[0],[0.5251033199999999],[0.5162643],[0]],[[0],[0.5251033199999999],[0.5162643],[0]],[[0],[0],[0],[0]]],[[[0],[0],[0],[0]],[[0],[0],[0],[0]],[[0],[0],[0],[0]],[[0],[0],[0],[0]],[[0],[0],[0],[0]],[[0],[0],[0],[0]]]]]

Actual:   [[[[[0], [0], [0], [0]], [[0], [0], [0], [0]], [[0], [0], [0], [0]], [[0], [0], [0], [0]], [[0], [0], [0], [0]], [[0], [0], [0], [0]]], [[[0], [0], [0], [0]], [[0], [0.2104], [0.0023], [0]], [[0], [0.2104], [0.0023], [0]], [[0], [0.5252], [0.5163], [0]], [[0], [0.5252], [0.5163], [0]], [[0], [0], [0], [0]]], [[[0], [0], [0], [0]], [[0], [0], [0], [0]], [[0], [0], [0], [0]], [[0], [0], [0], [0]], [[0], [0], [0], [0]], [[0], [0], [0], [0]]]]]

Expected: [[[[[0], [0], [0], [0]], [[0], [0], [0], [0]], [[0], [0], [0], [0]], [[0], [0], [0], [0]], [[0], [0], [0], [0]], [[0], [0], [0], [0]]], [[[0], [0], [0], [0]], [[0], [0.2104], [0.0023], [0]], [[0], [0.2104], [0.0023], [0]], [[0], [0.5252], [0.5163], [0]], [[0], [0.5252], [0.5163], [0]], [[0], [0], [0], [0]]], [[[0], [0], [0], [0]], [[0], [0], [0], [0]], [[0], [0], [0], [0]], [[0], [0], [0], [0]], [[0], [0], [0], [0]], [[0], [0], [0], [0]]]]]