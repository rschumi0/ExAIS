import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0LST5337 = tf.keras.layers.Input(shape=([2, 2]))
in0Con28254 = tf.keras.layers.Input(shape=([2, 2, 1]))
in0Max82945 = tf.keras.layers.Input(shape=([2, 2, 2]))
in1Max82945 = tf.keras.layers.Input(shape=([2, 2, 2]))
in0Max3733 = tf.keras.layers.Input(shape=([2, 2]))
in1Max3733 = tf.keras.layers.Input(shape=([2, 2]))
in0Con17177 = tf.keras.layers.Input(shape=([2, 2]))

LST5337 = keras.layers.LSTM(1,recurrent_activation='sigmoid', name = 'LST5337', )(in0LST5337)
Res32784 = keras.layers.Reshape((1, 1), name = 'Res32784', )(LST5337)
Res61207 = keras.layers.Reshape((1, 1, 1), name = 'Res61207', )(Res32784)
Zer13756 = keras.layers.ZeroPadding2D(padding=((1, 0), (1, 0)), name = 'Zer13756', )(Res61207)
Con28254 = keras.layers.Concatenate(axis=3, name = 'Con28254', )([Zer13756,in0Con28254])
Max82945 = keras.layers.Maximum(name = 'Max82945', )([in0Max82945,in1Max82945])
Sub33926 = keras.layers.Subtract(name = 'Sub33926', )([Con28254,Max82945])
Res30266 = keras.layers.Reshape((2, 4), name = 'Res30266', )(Sub33926)
Max3733 = keras.layers.Maximum(name = 'Max3733', )([in0Max3733,in1Max3733])
Con17177 = keras.layers.Concatenate(axis=2, name = 'Con17177', )([Max3733,in0Con17177])
Mul1002 = keras.layers.Multiply(name = 'Mul1002', )([Res30266,Con17177])
model = tf.keras.models.Model(inputs=[in0LST5337,in0Con28254,in0Max82945,in1Max82945,in0Max3733,in1Max3733,in0Con17177], outputs=Mul1002)
w = model.get_layer('LST5337').get_weights() 
w[0] = np.array([[1, 3, 3, 1], [5, 6, 4, 4]])
w[1] = np.array([[8, 6, 3, 1]])
w[2] = np.array([6, 10, 10, 8])
model.get_layer('LST5337').set_weights(w) 
in0LST5337 = tf.constant([[[7, 6], [2, 2]]])
in0Con28254 = tf.constant([[[[0.0372], [0.3703]], [[0.6194], [0.5742]]]])
in0Max82945 = tf.constant([[[[0.7534, 0.1289], [0.219, 0.0148]], [[0.8947, 0.0409], [0.0897, 0.4622]]]])
in1Max82945 = tf.constant([[[[0.1985, 0.6451], [0.1461, 0.4822]], [[0.8806, 0.1672], [0.1047, 0.5202]]]])
in0Max3733 = tf.constant([[[0.2219, 0.4709], [0.3479, 0.4166]]])
in1Max3733 = tf.constant([[[0.4714, 0.2927], [0.8627, 0.3902]]])
in0Con17177 = tf.constant([[[0.253, 0.737], [0.9313, 0.9118]]])
print (np.array2string(model.predict([in0LST5337,in0Con28254,in0Max82945,in1Max82945,in0Max3733,in1Max3733,in0Con17177],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Mul1002.png')

LLST5337 = lstm_layer([[[7, 6], [2, 2]]],[[1, 3, 3, 1], [5, 6, 4, 4]],[[8, 6, 3, 1]],[6, 10, 10, 8], LST5337), 
LRes32784 = reshape_layer(LST5337, [1, 1], Res32784), 
LRes61207 = reshape_layer(Res32784, [1, 1, 1], Res61207), 
LZer13756 = zero_padding2D_layer(Res61207, 1, 0, 1, 0, Zer13756), 
LCon28254 = concatenate_layer([Zer13756,[[[[0.0372], [0.3703]], [[0.6194], [0.5742]]]]], 3, Con28254), 
LMax82945 = maximum_layer([[[[[0.7534, 0.1289], [0.219, 0.0148]], [[0.8947, 0.0409], [0.0897, 0.4622]]]], [[[[0.1985, 0.6451], [0.1461, 0.4822]], [[0.8806, 0.1672], [0.1047, 0.5202]]]]], Max82945), 
LSub33926 = subtract_layer(Con28254,Max82945, Sub33926), 
LRes30266 = reshape_layer(Sub33926, [2, 4], Res30266), 
LMax3733 = maximum_layer([[[[0.2219, 0.4709], [0.3479, 0.4166]]], [[[0.4714, 0.2927], [0.8627, 0.3902]]]], Max3733), 
LCon17177 = concatenate_layer([Max3733,[[[0.253, 0.737], [0.9313, 0.9118]]]], 2, Con17177), 
LMul1002 = multiply_layer([Res30266,Con17177], Mul1002), 
exec_layers([LLST5337,LRes32784,LRes61207,LZer13756,LCon28254,LMax82945,LSub33926,LRes30266,LMax3733,LCon17177,LMul1002],["LST5337","Res32784","Res61207","Zer13756","Con28254","Max82945","Sub33926","Res30266","Max3733","Con17177","Mul1002"],Mul1002,"Mul1002")

Actual (Unparsed): [[[-0.3551528, -0.2862601, -0.0554070, -0.0824703], [-0.7718577, 0.1883865, 0.8002918, 0.0492372]]]

Expected (Unparsed): [[[-0.35515275999999996,-0.28626011,-0.055407,-0.0824703],[-0.77185769,0.18838651999999997,0.8002917689379123,0.04923720000000004]]]

Actual:   [[[-0.3551, -0.2862, -0.0554, -0.0824], [-0.7718, 0.1884, 0.8003, 0.0493]]]

Expected: [[[-0.3551, -0.2862, -0.0554, -0.0824], [-0.7718, 0.1884, 0.8003, 0.0493]]]