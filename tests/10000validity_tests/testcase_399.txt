import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Ave78938 = tf.keras.layers.Input(shape=([1, 2, 1, 2]))
in1Ave78938 = tf.keras.layers.Input(shape=([1, 2, 1, 2]))

Ave78938 = keras.layers.Average(name = 'Ave78938', )([in0Ave78938,in1Ave78938])
Res46736 = keras.layers.Reshape((1, 2, 2), name = 'Res46736', )(Ave78938)
Res87155 = keras.layers.Reshape((1, 4), name = 'Res87155', )(Res46736)
Zer51778 = keras.layers.ZeroPadding1D(padding=((1, 1)), name = 'Zer51778', )(Res87155)
model = tf.keras.models.Model(inputs=[in0Ave78938,in1Ave78938], outputs=Zer51778)
in0Ave78938 = tf.constant([[[[[0.6302, 0.2468]], [[0.6004, 0.7926]]]]])
in1Ave78938 = tf.constant([[[[[0.9529, 0.3087]], [[0.4389, 0.1312]]]]])
print (np.array2string(model.predict([in0Ave78938,in1Ave78938],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Zer51778.png')

LAve78938 = average_layer([[[[[[0.6302, 0.2468]], [[0.6004, 0.7926]]]]], [[[[[0.9529, 0.3087]], [[0.4389, 0.1312]]]]]], Ave78938), 
LRes46736 = reshape_layer(Ave78938, [1, 2, 2], Res46736), 
LRes87155 = reshape_layer(Res46736, [1, 4], Res87155), 
LZer51778 = zero_padding1D_layer(Res87155, 1, 1, Zer51778), 
exec_layers([LAve78938,LRes46736,LRes87155,LZer51778],["Ave78938","Res46736","Res87155","Zer51778"],Zer51778,"Zer51778")

Actual (Unparsed): [[[0.0000000, 0.0000000, 0.0000000, 0.0000000], [0.7915500, 0.2777500, 0.5196500, 0.4619000], [0.0000000, 0.0000000, 0.0000000, 0.0000000]]]

Expected (Unparsed): [[[0,0,0,0],[0.79155,0.27775,0.5196500000000001,0.4619],[0,0,0,0]]]

Actual:   [[[0, 0, 0, 0], [0.7916, 0.2778, 0.5197, 0.4619], [0, 0, 0, 0]]]

Expected: [[[0, 0, 0, 0], [0.7916, 0.2778, 0.5197, 0.4619], [0, 0, 0, 0]]]