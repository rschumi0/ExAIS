import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Dot71361 = tf.keras.layers.Input(shape=([3]))
in1Dot71361 = tf.keras.layers.Input(shape=([3]))
in0Con85927 = tf.keras.layers.Input(shape=([2, 1]))
in0Dot30342 = tf.keras.layers.Input(shape=([3, 2]))
in1Dot30342 = tf.keras.layers.Input(shape=([3, 2]))
in0Glo49430 = tf.keras.layers.Input(shape=([2, 2]))
in0Con20680 = tf.keras.layers.Input(shape=([2]))

Dot71361 = keras.layers.Dot(axes=(1, 1), name = 'Dot71361', )([in0Dot71361,in1Dot71361])
Res18927 = keras.layers.Reshape((1, 1), name = 'Res18927', )(Dot71361)
Zer79275 = keras.layers.ZeroPadding1D(padding=((1, 0)), name = 'Zer79275', )(Res18927)
Con85927 = keras.layers.Concatenate(axis=2, name = 'Con85927', )([Zer79275,in0Con85927])
Dot30342 = keras.layers.Dot(axes=(1, 1), name = 'Dot30342', )([in0Dot30342,in1Dot30342])
Thr13176 = keras.layers.ThresholdedReLU(theta=1.100862801223844, name = 'Thr13176', )(Dot30342)
Min17093 = keras.layers.Minimum(name = 'Min17093', )([Con85927,Thr13176])
Fla62371 = keras.layers.Flatten(name = 'Fla62371', )(Min17093)
Glo49430 = keras.layers.GlobalAveragePooling1D(name = 'Glo49430', )(in0Glo49430)
Con20680 = keras.layers.Concatenate(axis=1, name = 'Con20680', )([Glo49430,in0Con20680])
Ave17782 = keras.layers.Average(name = 'Ave17782', )([Fla62371,Con20680])
model = tf.keras.models.Model(inputs=[in0Dot71361,in1Dot71361,in0Con85927,in0Dot30342,in1Dot30342,in0Glo49430,in0Con20680], outputs=Ave17782)
in0Dot71361 = tf.constant([[0.9994, 0.1779, 0.743]])
in1Dot71361 = tf.constant([[0.7878, 0.8745, 0.2848]])
in0Con85927 = tf.constant([[[0.797], [0.7499]]])
in0Dot30342 = tf.constant([[[0.2125, 0.1479], [0.2662, 0.4058], [0.1931, 0.8853]]])
in1Dot30342 = tf.constant([[[0.1694, 0.2025], [0.9926, 0.0911], [0.8633, 0.5257]]])
in0Glo49430 = tf.constant([[[1.8365, 1.0371], [1.2431, 1.1851]]])
in0Con20680 = tf.constant([[0.8415, 0.9744]])
print (np.array2string(model.predict([in0Dot71361,in1Dot71361,in0Con85927,in0Dot30342,in1Dot30342,in0Glo49430,in0Con20680],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Ave17782.png')

LDot71361 = dot_layer([[0.9994, 0.1779, 0.743]], [[0.7878, 0.8745, 0.2848]], 1, 1, Dot71361), 
LRes18927 = reshape_layer(Dot71361, [1, 1], Res18927), 
LZer79275 = zero_padding1D_layer(Res18927, 1, 0, Zer79275), 
LCon85927 = concatenate_layer([Zer79275,[[[0.797], [0.7499]]]], 2, Con85927), 
LDot30342 = dot_layer([[[0.2125, 0.1479], [0.2662, 0.4058], [0.1931, 0.8853]]], [[[0.1694, 0.2025], [0.9926, 0.0911], [0.8633, 0.5257]]], 1, 1, Dot30342), 
LThr13176 = thresholded_relu_layer(Dot30342, 1.100862801223844, Thr13176), 
LMin17093 = minimum_layer([Con85927,Thr13176], Min17093), 
LFla62371 = flatten_layer(Min17093, Fla62371), 
LGlo49430 = global_average_pooling1D_layer([[[1.8365, 1.0371], [1.2431, 1.1851]]], Glo49430), 
LCon20680 = concatenate_layer([Glo49430,[[0.8415, 0.9744]]], 1, Con20680), 
LAve17782 = average_layer([Fla62371,Con20680], Ave17782), 
exec_layers([LDot71361,LRes18927,LZer79275,LCon85927,LDot30342,LThr13176,LMin17093,LFla62371,LGlo49430,LCon20680,LAve17782],["Dot71361","Res18927","Zer79275","Con85927","Dot30342","Thr13176","Min17093","Fla62371","Glo49430","Con20680","Ave17782"],Ave17782,"Ave17782")

Actual (Unparsed): [[0.7699000, 0.5555500, 0.9980036, 0.4872000]]

Expected (Unparsed): [[0.7699,0.55555,0.9980036349999999,0.4872]]

Actual:   [[0.7699, 0.5556, 0.9981, 0.4872]]

Expected: [[0.7699, 0.5556, 0.9981, 0.4872]]