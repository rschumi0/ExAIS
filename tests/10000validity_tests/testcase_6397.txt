import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Add51226 = tf.keras.layers.Input(shape=([2, 1, 2, 1]))
in1Add51226 = tf.keras.layers.Input(shape=([2, 1, 2, 1]))
in0Ave94640 = tf.keras.layers.Input(shape=([2, 2, 1, 1]))
in1Ave94640 = tf.keras.layers.Input(shape=([2, 2, 1, 1]))
in0Con97854 = tf.keras.layers.Input(shape=([3, 4, 5, 1]))
in0Zer85976 = tf.keras.layers.Input(shape=([1, 2, 3, 2]))

Add51226 = keras.layers.Add(name = 'Add51226', )([in0Add51226,in1Add51226])
Res6088 = keras.layers.Reshape((2, 1, 2), name = 'Res6088', )(Add51226)
Res66873 = keras.layers.Reshape((2, 2), name = 'Res66873', )(Res6088)
Loc83265 = keras.layers.LocallyConnected1D(3, (1),strides=(2), name = 'Loc83265', )(Res66873)
Ave94640 = keras.layers.Average(name = 'Ave94640', )([in0Ave94640,in1Ave94640])
Res21972 = keras.layers.Reshape((2, 2, 1), name = 'Res21972', )(Ave94640)
Cro78311 = keras.layers.Cropping2D(cropping=((1, 0), (0, 0)), name = 'Cro78311', )(Res21972)
Res94364 = keras.layers.Reshape((1, 2), name = 'Res94364', )(Cro78311)
Dot59776 = keras.layers.Dot(axes=(1, 1), name = 'Dot59776', )([Loc83265,Res94364])
Res28929 = keras.layers.Reshape((3, 2, 1), name = 'Res28929', )(Dot59776)
Res82120 = keras.layers.Reshape((3, 2, 1, 1), name = 'Res82120', )(Res28929)
Zer23711 = keras.layers.ZeroPadding3D(padding=((0, 0), (2, 0), (4, 0)), name = 'Zer23711', )(Res82120)
Con97854 = keras.layers.Concatenate(axis=4, name = 'Con97854', )([Zer23711,in0Con97854])
Zer85976 = keras.layers.ZeroPadding3D(padding=((1, 1), (1, 1), (1, 1)), name = 'Zer85976', )(in0Zer85976)
Ave18944 = keras.layers.Average(name = 'Ave18944', )([Con97854,Zer85976])
model = tf.keras.models.Model(inputs=[in0Add51226,in1Add51226,in0Ave94640,in1Ave94640,in0Con97854,in0Zer85976], outputs=Ave18944)
w = model.get_layer('Loc83265').get_weights() 
w[0] = np.array([[[0.8114, 0.453, 0.6837], [0.6778, 0.0905, 0.6866]]])
w[1] = np.array([[0, 0, 0]])
model.get_layer('Loc83265').set_weights(w) 
in0Add51226 = tf.constant([[[[[0.1301], [0.3198]]], [[[0.0459], [0.4304]]]]])
in1Add51226 = tf.constant([[[[[0.0156], [0.6806]]], [[[0.6946], [0.4763]]]]])
in0Ave94640 = tf.constant([[[[[0.9043]], [[0.5789]]], [[[0.3966]], [[0.1228]]]]])
in1Ave94640 = tf.constant([[[[[0.8933]], [[0.426]]], [[[0.2495]], [[0.5755]]]]])
in0Con97854 = tf.constant([[[[[0.4512], [0.2356], [0.5442], [0.5731], [0.9102]], [[0.5091], [0.7969], [0.6038], [0.258], [0.1993]], [[0.6635], [0.2683], [0.9383], [0.3762], [0.1382]], [[0.0491], [0.2967], [0.3498], [0.9701], [0.6731]]], [[[0.3898], [0.4231], [0.3194], [0.5724], [0.4567]], [[0.1497], [0.757], [0.4862], [0.2816], [0.8686]], [[0.8518], [0.9194], [0.8382], [0.1205], [0.146]], [[0.0186], [0.8076], [0.6587], [0.4034], [0.0524]]], [[[0.7861], [0.1607], [0.6374], [0.0907], [0.2571]], [[0.4174], [0.5728], [0.6643], [0.6954], [0.7327]], [[0.8749], [0.1578], [0.4883], [0.5017], [0.6951]], [[0.4391], [0.7156], [0.4504], [0.8209], [0.7601]]]]])
in0Zer85976 = tf.constant([[[[[1.2072, 1.464], [1.3533, 1.7875], [1.2612, 1.2666]], [[1.8293, 1.2233], [1.0054, 1.4325], [1.1401, 1.6056]]]]])
print (np.array2string(model.predict([in0Add51226,in1Add51226,in0Ave94640,in1Ave94640,in0Con97854,in0Zer85976],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Ave18944.png')

LAdd51226 = add_layer([[[[[[0.1301], [0.3198]]], [[[0.0459], [0.4304]]]]], [[[[[0.0156], [0.6806]]], [[[0.6946], [0.4763]]]]]], Add51226), 
LRes6088 = reshape_layer(Add51226, [2, 1, 2], Res6088), 
LRes66873 = reshape_layer(Res6088, [2, 2], Res66873), 
LLoc83265 = locally_connected1D_layer(Res66873, 1,[[[0.8114, 0.453, 0.6837], [0.6778, 0.0905, 0.6866]]],[[0, 0, 0]], 2, Loc83265), 
LAve94640 = average_layer([[[[[[0.9043]], [[0.5789]]], [[[0.3966]], [[0.1228]]]]], [[[[[0.8933]], [[0.426]]], [[[0.2495]], [[0.5755]]]]]], Ave94640), 
LRes21972 = reshape_layer(Ave94640, [2, 2, 1], Res21972), 
LCro78311 = cropping2D_layer(Res21972, 1, 0, 0, 0, Cro78311), 
LRes94364 = reshape_layer(Cro78311, [1, 2], Res94364), 
LDot59776 = dot_layer(Loc83265,Res94364, 1, 1, Dot59776), 
LRes28929 = reshape_layer(Dot59776, [3, 2, 1], Res28929), 
LRes82120 = reshape_layer(Res28929, [3, 2, 1, 1], Res82120), 
LZer23711 = zero_padding3D_layer(Res82120, 0, 0, 2, 0, 4, 0, Zer23711), 
LCon97854 = concatenate_layer([Zer23711,[[[[[0.4512], [0.2356], [0.5442], [0.5731], [0.9102]], [[0.5091], [0.7969], [0.6038], [0.258], [0.1993]], [[0.6635], [0.2683], [0.9383], [0.3762], [0.1382]], [[0.0491], [0.2967], [0.3498], [0.9701], [0.6731]]], [[[0.3898], [0.4231], [0.3194], [0.5724], [0.4567]], [[0.1497], [0.757], [0.4862], [0.2816], [0.8686]], [[0.8518], [0.9194], [0.8382], [0.1205], [0.146]], [[0.0186], [0.8076], [0.6587], [0.4034], [0.0524]]], [[[0.7861], [0.1607], [0.6374], [0.0907], [0.2571]], [[0.4174], [0.5728], [0.6643], [0.6954], [0.7327]], [[0.8749], [0.1578], [0.4883], [0.5017], [0.6951]], [[0.4391], [0.7156], [0.4504], [0.8209], [0.7601]]]]]], 4, Con97854), 
LZer85976 = zero_padding3D_layer([[[[[1.2072, 1.464], [1.3533, 1.7875], [1.2612, 1.2666]], [[1.8293, 1.2233], [1.0054, 1.4325], [1.1401, 1.6056]]]]], 1, 1, 1, 1, 1, 1, Zer85976), 
LAve18944 = average_layer([Con97854,Zer85976], Ave18944), 
exec_layers([LAdd51226,LRes6088,LRes66873,LLoc83265,LAve94640,LRes21972,LCro78311,LRes94364,LDot59776,LRes28929,LRes82120,LZer23711,LCon97854,LZer85976,LAve18944],["Add51226","Res6088","Res66873","Loc83265","Ave94640","Res21972","Cro78311","Res94364","Dot59776","Res28929","Res82120","Zer23711","Con97854","Zer85976","Ave18944"],Ave18944,"Ave18944")

Actual (Unparsed): [[[[[0.0000000, 0.2256000], [0.0000000, 0.1178000], [0.0000000, 0.2721000], [0.0000000, 0.2865500], [0.0000000, 0.4551000]], [[0.0000000, 0.2545500], [0.0000000, 0.3984500], [0.0000000, 0.3019000], [0.0000000, 0.1290000], [0.0000000, 0.0996500]], [[0.0000000, 0.3317500], [0.0000000, 0.1341500], [0.0000000, 0.4691500], [0.0000000, 0.1881000], [0.1286211, 0.0691000]], [[0.0000000, 0.0245500], [0.0000000, 0.1483500], [0.0000000, 0.1749000], [0.0000000, 0.4850500], [0.1390127, 0.3365500]]], [[[0.0000000, 0.1949000], [0.0000000, 0.2115500], [0.0000000, 0.1597000], [0.0000000, 0.2862000], [0.0000000, 0.2283500]], [[0.0000000, 0.0748500], [0.6036000, 1.1105000], [0.6766500, 1.1368500], [0.6306000, 0.7741000], [0.0000000, 0.4343000]], [[0.0000000, 0.4259000], [0.9146500, 1.0713500], [0.5027000, 1.1353500], [0.5700500, 0.8630500], [0.0252848, 0.0730000]], [[0.0000000, 0.0093000], [0.0000000, 0.4038000], [0.0000000, 0.3293500], [0.0000000, 0.2017000], [0.0273277, 0.0262000]]], [[[0.0000000, 0.3930500], [0.0000000, 0.0803500], [0.0000000, 0.3187000], [0.0000000, 0.0453500], [0.0000000, 0.1285500]], [[0.0000000, 0.2087000], [0.0000000, 0.2864000], [0.0000000, 0.3321500], [0.0000000, 0.3477000], [0.0000000, 0.3663500]], [[0.0000000, 0.4374500], [0.0000000, 0.0789000], [0.0000000, 0.2441500], [0.0000000, 0.2508500], [0.1270378, 0.3475500]], [[0.0000000, 0.2195500], [0.0000000, 0.3578000], [0.0000000, 0.2252000], [0.0000000, 0.4104500], [0.1373014, 0.3800500]]]]]

Expected (Unparsed): [[[[[0,0.2256],[0,0.1178],[0,0.2721],[0,0.28655],[0,0.4551]],[[0,0.25455],[0,0.39845],[0,0.3019],[0,0.129],[0,0.09965]],[[0,0.33175],[0,0.13415],[0,0.46915],[0,0.1881],[0.12862108145249998,0.0691]],[[0,0.02455],[0,0.14835],[0,0.1749],[0,0.48505],[0.1390126933575,0.33655]]],[[[0,0.1949],[0,0.21155],[0,0.1597],[0,0.2862],[0,0.22835]],[[0,0.07485],[0.6036,1.1105],[0.67665,1.1368500000000001],[0.6306,0.7741],[0,0.4343]],[[0,0.4259],[0.91465,1.07135],[0.5027,1.13535],[0.57005,0.86305],[0.025284848907499997,0.073]],[[0,0.0093],[0,0.4038],[0,0.32935],[0,0.2017],[0.0273276737225,0.0262]]],[[[0,0.39305],[0,0.08035],[0,0.3187],[0,0.04535],[0,0.12855]],[[0,0.2087],[0,0.2864],[0,0.33215],[0,0.3477],[0,0.36635]],[[0,0.43745],[0,0.0789],[0,0.24415],[0,0.25085],[0.12703775363825,0.34755]],[[0,0.21955],[0,0.3578],[0,0.2252],[0,0.41045],[0.13730144461475,0.38005]]]]]

Actual:   [[[[[0, 0.2256], [0, 0.1178], [0, 0.2721], [0, 0.2866], [0, 0.4551]], [[0, 0.2546], [0, 0.3985], [0, 0.3019], [0, 0.129], [0, 0.0997]], [[0, 0.3318], [0, 0.1342], [0, 0.4692], [0, 0.1881], [0.1287, 0.0691]], [[0, 0.0246], [0, 0.1484], [0, 0.1749], [0, 0.4851], [0.1391, 0.3366]]], [[[0, 0.1949], [0, 0.2116], [0, 0.1597], [0, 0.2862], [0, 0.2284]], [[0, 0.0749], [0.6036, 1.1105], [0.6767, 1.1369], [0.6306, 0.7741], [0, 0.4343]], [[0, 0.4259], [0.9147, 1.0714], [0.5027, 1.1354], [0.5701, 0.8631], [0.0253, 0.073]], [[0, 0.0093], [0, 0.4038], [0, 0.3294], [0, 0.2017], [0.0274, 0.0262]]], [[[0, 0.3931], [0, 0.0804], [0, 0.3187], [0, 0.0454], [0, 0.1286]], [[0, 0.2087], [0, 0.2864], [0, 0.3322], [0, 0.3477], [0, 0.3664]], [[0, 0.4375], [0, 0.0789], [0, 0.2442], [0, 0.2509], [0.1271, 0.3476]], [[0, 0.2196], [0, 0.3578], [0, 0.2252], [0, 0.4105], [0.1374, 0.3801]]]]]

Expected: [[[[[0, 0.2256], [0, 0.1178], [0, 0.2721], [0, 0.2866], [0, 0.4551]], [[0, 0.2546], [0, 0.3985], [0, 0.3019], [0, 0.129], [0, 0.0997]], [[0, 0.3318], [0, 0.1342], [0, 0.4692], [0, 0.1881], [0.1287, 0.0691]], [[0, 0.0246], [0, 0.1484], [0, 0.1749], [0, 0.4851], [0.1391, 0.3366]]], [[[0, 0.1949], [0, 0.2116], [0, 0.1597], [0, 0.2862], [0, 0.2284]], [[0, 0.0749], [0.6036, 1.1105], [0.6767, 1.1369], [0.6306, 0.7741], [0, 0.4343]], [[0, 0.4259], [0.9147, 1.0714], [0.5027, 1.1354], [0.5701, 0.8631], [0.0253, 0.073]], [[0, 0.0093], [0, 0.4038], [0, 0.3294], [0, 0.2017], [0.0274, 0.0262]]], [[[0, 0.3931], [0, 0.0804], [0, 0.3187], [0, 0.0454], [0, 0.1286]], [[0, 0.2087], [0, 0.2864], [0, 0.3322], [0, 0.3477], [0, 0.3664]], [[0, 0.4375], [0, 0.0789], [0, 0.2442], [0, 0.2509], [0.1271, 0.3476]], [[0, 0.2196], [0, 0.3578], [0, 0.2252], [0, 0.4105], [0.1374, 0.3801]]]]]