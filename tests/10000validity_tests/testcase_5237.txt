import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Min63265 = tf.keras.layers.Input(shape=([2, 1, 1, 1]))
in1Min63265 = tf.keras.layers.Input(shape=([2, 1, 1, 1]))
in0Con78441 = tf.keras.layers.Input(shape=([4, 2]))
in0Dep12010 = tf.keras.layers.Input(shape=([2, 2, 1]))
in0Con4828 = tf.keras.layers.Input(shape=([5, 1, 3]))
in0Add12293 = tf.keras.layers.Input(shape=([2, 1, 2]))
in1Add12293 = tf.keras.layers.Input(shape=([2, 1, 2]))

Min63265 = keras.layers.Minimum(name = 'Min63265', )([in0Min63265,in1Min63265])
Res8608 = keras.layers.Reshape((2, 1, 1), name = 'Res8608', )(Min63265)
Zer95429 = keras.layers.ZeroPadding2D(padding=((1, 1), (1, 1)), name = 'Zer95429', )(Res8608)
Res30019 = keras.layers.Reshape((4, 3), name = 'Res30019', )(Zer95429)
Con78441 = keras.layers.Concatenate(axis=2, name = 'Con78441', )([Res30019,in0Con78441])
Dep12010 = keras.layers.DepthwiseConv2D((1, 2),strides=(2, 2), padding='same', name = 'Dep12010', )(in0Dep12010)
Res76915 = keras.layers.Reshape((1, 1), name = 'Res76915', )(Dep12010)
Zer52477 = keras.layers.ZeroPadding1D(padding=((3, 0)), name = 'Zer52477', )(Res76915)
Dot95513 = keras.layers.Dot(axes=(1, 1), name = 'Dot95513', )([Con78441,Zer52477])
Res40766 = keras.layers.Reshape((5, 1, 1), name = 'Res40766', )(Dot95513)
Con4828 = keras.layers.Concatenate(axis=3, name = 'Con4828', )([Res40766,in0Con4828])
Add12293 = keras.layers.Add(name = 'Add12293', )([in0Add12293,in1Add12293])
Res68683 = keras.layers.Reshape((2, 2), name = 'Res68683', )(Add12293)
GRU88682 = keras.layers.GRU(1,reset_after=False, recurrent_activation='sigmoid', name = 'GRU88682', )(Res68683)
Res39484 = keras.layers.Reshape((1, 1), name = 'Res39484', )(GRU88682)
Res79601 = keras.layers.Reshape((1, 1, 1), name = 'Res79601', )(Res39484)
Sep97795 = keras.layers.SeparableConv2D(4, (1, 1),strides=(1, 1), padding='same', name = 'Sep97795', )(Res79601)
Zer66435 = keras.layers.ZeroPadding2D(padding=((4, 0), (0, 0)), name = 'Zer66435', )(Sep97795)
Max84645 = keras.layers.Maximum(name = 'Max84645', )([Con4828,Zer66435])
model = tf.keras.models.Model(inputs=[in0Min63265,in1Min63265,in0Con78441,in0Dep12010,in0Con4828,in0Add12293,in1Add12293], outputs=Max84645)
w = model.get_layer('Dep12010').get_weights() 
w[0] = np.array([[[[0.0135]], [[0.7071]]]])
w[1] = np.array([0])
model.get_layer('Dep12010').set_weights(w) 
w = model.get_layer('GRU88682').get_weights() 
w[0] = np.array([[8, 1, 5], [7, 8, 9]])
w[1] = np.array([[7, 8, 10]])
w[2] = np.array([7, 8, 7])
model.get_layer('GRU88682').set_weights(w) 
w = model.get_layer('Sep97795').get_weights() 
w[0] = np.array([[[[0.2165]]]])
w[1] = np.array([[[[0.5112, 0.4547, 0.3894, 0.8472]]]])
w[2] = np.array([0, 0, 0, 0])
model.get_layer('Sep97795').set_weights(w) 
in0Min63265 = tf.constant([[[[[0.2036]]], [[[0.2623]]]]])
in1Min63265 = tf.constant([[[[[0.35]]], [[[0.7232]]]]])
in0Con78441 = tf.constant([[[0.5386, 0.8511], [0.374, 0.3462], [0.8287, 0.1878], [0.5263, 0.4082]]])
in0Dep12010 = tf.constant([[[[0.9508], [0.0683]], [[0.3931], [0.1221]]]])
in0Con4828 = tf.constant([[[[0.157, 0.8909, 0.3419]], [[0.5588, 0.9662, 0.8602]], [[0.8238, 0.8296, 0.3901]], [[0.4094, 0.1948, 0.4145]], [[0.5274, 0.4459, 0.6403]]]])
in0Add12293 = tf.constant([[[[0.1177, 0.3935]], [[0.7172, 0.6344]]]])
in1Add12293 = tf.constant([[[[0.9331, 0.9324]], [[0.5574, 0.8422]]]])
print (np.array2string(model.predict([in0Min63265,in1Min63265,in0Con78441,in0Dep12010,in0Con4828,in0Add12293,in1Add12293],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Max84645.png')

LMin63265 = minimum_layer([[[[[[0.2036]]], [[[0.2623]]]]], [[[[[0.35]]], [[[0.7232]]]]]], Min63265), 
LRes8608 = reshape_layer(Min63265, [2, 1, 1], Res8608), 
LZer95429 = zero_padding2D_layer(Res8608, 1, 1, 1, 1, Zer95429), 
LRes30019 = reshape_layer(Zer95429, [4, 3], Res30019), 
LCon78441 = concatenate_layer([Res30019,[[[0.5386, 0.8511], [0.374, 0.3462], [0.8287, 0.1878], [0.5263, 0.4082]]]], 2, Con78441), 
LDep12010 = depthwise_conv2D_layer([[[[0.9508], [0.0683]], [[0.3931], [0.1221]]]], 1, 2,[[[[0.0135]], [[0.7071]]]],[0], 2, 2, true, Dep12010), 
LRes76915 = reshape_layer(Dep12010, [1, 1], Res76915), 
LZer52477 = zero_padding1D_layer(Res76915, 3, 0, Zer52477), 
LDot95513 = dot_layer(Con78441,Zer52477, 1, 1, Dot95513), 
LRes40766 = reshape_layer(Dot95513, [5, 1, 1], Res40766), 
LCon4828 = concatenate_layer([Res40766,[[[[0.157, 0.8909, 0.3419]], [[0.5588, 0.9662, 0.8602]], [[0.8238, 0.8296, 0.3901]], [[0.4094, 0.1948, 0.4145]], [[0.5274, 0.4459, 0.6403]]]]], 3, Con4828), 
LAdd12293 = add_layer([[[[[0.1177, 0.3935]], [[0.7172, 0.6344]]]], [[[[0.9331, 0.9324]], [[0.5574, 0.8422]]]]], Add12293), 
LRes68683 = reshape_layer(Add12293, [2, 2], Res68683), 
LGRU88682 = gru_layer(Res68683,[[8, 1, 5], [7, 8, 9]],[[7, 8, 10]],[7, 8, 7], false, GRU88682), 
LRes39484 = reshape_layer(GRU88682, [1, 1], Res39484), 
LRes79601 = reshape_layer(Res39484, [1, 1, 1], Res79601), 
LSep97795 = separable_conv2D_layer(Res79601, 1, 1,[[[[[0.2165]]]],[[[[0.5112, 0.4547, 0.3894, 0.8472]]]]],[0, 0, 0, 0], 1, 1, true, Sep97795), 
LZer66435 = zero_padding2D_layer(Sep97795, 4, 0, 0, 0, Zer66435), 
LMax84645 = maximum_layer([Con4828,Zer66435], Max84645), 
exec_layers([LMin63265,LRes8608,LZer95429,LRes30019,LCon78441,LDep12010,LRes76915,LZer52477,LDot95513,LRes40766,LCon4828,LAdd12293,LRes68683,LGRU88682,LRes39484,LRes79601,LSep97795,LZer66435,LMax84645],["Min63265","Res8608","Zer95429","Res30019","Con78441","Dep12010","Res76915","Zer52477","Dot95513","Res40766","Con4828","Add12293","Res68683","GRU88682","Res39484","Res79601","Sep97795","Zer66435","Max84645"],Max84645,"Max84645")

Actual (Unparsed): [[[[0.0000000, 0.1570000, 0.8909000, 0.3419000]], [[0.0000000, 0.5588000, 0.9662000, 0.8602000]], [[0.0000000, 0.8238000, 0.8296000, 0.3901000]], [[0.0321731, 0.4094000, 0.1948000, 0.4145000]], [[0.0249536, 0.5274000, 0.4459000, 0.6403000]]]]

Expected (Unparsed): [[[[0.0,0.157,0.8909,0.3419]],[[0.0,0.5588,0.9662,0.8602]],[[0.0,0.8238,0.8296,0.3901]],[[0.032173103199,0.4094,0.1948,0.4145]],[[0.024953563986000002,0.5274,0.4459,0.6403]]]]

Actual:   [[[[0, 0.157, 0.8909, 0.3419]], [[0, 0.5588, 0.9662, 0.8602]], [[0, 0.8238, 0.8296, 0.3901]], [[0.0322, 0.4094, 0.1948, 0.4145]], [[0.025, 0.5274, 0.4459, 0.6403]]]]

Expected: [[[[0, 0.157, 0.8909, 0.3419]], [[0, 0.5588, 0.9662, 0.8602]], [[0, 0.8238, 0.8296, 0.3901]], [[0.0322, 0.4094, 0.1948, 0.4145]], [[0.025, 0.5274, 0.4459, 0.6403]]]]