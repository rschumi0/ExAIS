import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Min87530 = tf.keras.layers.Input(shape=([1, 2, 1]))
in1Min87530 = tf.keras.layers.Input(shape=([1, 2, 1]))

Min87530 = keras.layers.Minimum(name = 'Min87530', )([in0Min87530,in1Min87530])
Res66050 = keras.layers.Reshape((1, 2, 1, 1), name = 'Res66050', )(Min87530)
Up_25061 = keras.layers.UpSampling3D(size=(2, 2, 2), name = 'Up_25061', )(Res66050)
model = tf.keras.models.Model(inputs=[in0Min87530,in1Min87530], outputs=Up_25061)
in0Min87530 = tf.constant([[[[0.4561], [0.4892]]]])
in1Min87530 = tf.constant([[[[0.8591], [0.9629]]]])
print (np.array2string(model.predict([in0Min87530,in1Min87530],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Up_25061.png')

LMin87530 = minimum_layer([[[[[0.4561], [0.4892]]]], [[[[0.8591], [0.9629]]]]], Min87530), 
LRes66050 = reshape_layer(Min87530, [1, 2, 1, 1], Res66050), 
LUp_25061 = up_sampling3D_layer(Res66050, 2, 2, 2, Up_25061), 
exec_layers([LMin87530,LRes66050,LUp_25061],["Min87530","Res66050","Up_25061"],Up_25061,"Up_25061")

Actual (Unparsed): [[[[[0.4561000], [0.4561000]], [[0.4561000], [0.4561000]], [[0.4892000], [0.4892000]], [[0.4892000], [0.4892000]]], [[[0.4561000], [0.4561000]], [[0.4561000], [0.4561000]], [[0.4892000], [0.4892000]], [[0.4892000], [0.4892000]]]]]

Expected (Unparsed): [[[[[0.4561],[0.4561]],[[0.4561],[0.4561]],[[0.4892],[0.4892]],[[0.4892],[0.4892]]],[[[0.4561],[0.4561]],[[0.4561],[0.4561]],[[0.4892],[0.4892]],[[0.4892],[0.4892]]]]]

Actual:   [[[[[0.4561], [0.4561]], [[0.4561], [0.4561]], [[0.4892], [0.4892]], [[0.4892], [0.4892]]], [[[0.4561], [0.4561]], [[0.4561], [0.4561]], [[0.4892], [0.4892]], [[0.4892], [0.4892]]]]]

Expected: [[[[[0.4561], [0.4561]], [[0.4561], [0.4561]], [[0.4892], [0.4892]], [[0.4892], [0.4892]]], [[[0.4561], [0.4561]], [[0.4561], [0.4561]], [[0.4892], [0.4892]], [[0.4892], [0.4892]]]]]