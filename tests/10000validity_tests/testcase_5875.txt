import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Max67606 = tf.keras.layers.Input(shape=([1, 2, 2]))
in1Max67606 = tf.keras.layers.Input(shape=([1, 2, 2]))
in0Ave60006 = tf.keras.layers.Input(shape=([1, 2]))
in1Ave60006 = tf.keras.layers.Input(shape=([1, 2]))
in0Con68150 = tf.keras.layers.Input(shape=([2]))
in0Ave81162 = tf.keras.layers.Input(shape=([1, 1, 2, 1]))
in1Ave81162 = tf.keras.layers.Input(shape=([1, 1, 2, 1]))

Max67606 = keras.layers.Maximum(name = 'Max67606', )([in0Max67606,in1Max67606])
Res8588 = keras.layers.Reshape((1, 4), name = 'Res8588', )(Max67606)
Fla99124 = keras.layers.Flatten(name = 'Fla99124', )(Res8588)
Ave60006 = keras.layers.Average(name = 'Ave60006', )([in0Ave60006,in1Ave60006])
Fla31987 = keras.layers.Flatten(name = 'Fla31987', )(Ave60006)
Con68150 = keras.layers.Concatenate(axis=1, name = 'Con68150', )([Fla31987,in0Con68150])
Add69830 = keras.layers.Add(name = 'Add69830', )([Fla99124,Con68150])
Res28907 = keras.layers.Reshape((4, 1), name = 'Res28907', )(Add69830)
Res92090 = keras.layers.Reshape((4, 1, 1), name = 'Res92090', )(Res28907)
Res86851 = keras.layers.Reshape((4, 1, 1, 1), name = 'Res86851', )(Res92090)
Zer11456 = keras.layers.ZeroPadding3D(padding=((0, 0), (0, 0), (2, 0)), name = 'Zer11456', )(Res86851)
Ave81162 = keras.layers.Average(name = 'Ave81162', )([in0Ave81162,in1Ave81162])
Zer94569 = keras.layers.ZeroPadding3D(padding=((3, 0), (0, 0), (1, 0)), name = 'Zer94569', )(Ave81162)
Ave43639 = keras.layers.Average(name = 'Ave43639', )([Zer11456,Zer94569])
model = tf.keras.models.Model(inputs=[in0Max67606,in1Max67606,in0Ave60006,in1Ave60006,in0Con68150,in0Ave81162,in1Ave81162], outputs=Ave43639)
in0Max67606 = tf.constant([[[[0.7162, 0.3262], [0.0469, 0.1701]]]])
in1Max67606 = tf.constant([[[[0.6058, 0.9351], [0.6488, 0.7278]]]])
in0Ave60006 = tf.constant([[[0.5393, 0.8096]]])
in1Ave60006 = tf.constant([[[0.2172, 0.7067]]])
in0Con68150 = tf.constant([[0.7245, 0.0182]])
in0Ave81162 = tf.constant([[[[[0.328], [0.3646]]]]])
in1Ave81162 = tf.constant([[[[[0.9966], [0.2257]]]]])
print (np.array2string(model.predict([in0Max67606,in1Max67606,in0Ave60006,in1Ave60006,in0Con68150,in0Ave81162,in1Ave81162],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Ave43639.png')

LMax67606 = maximum_layer([[[[[0.7162, 0.3262], [0.0469, 0.1701]]]], [[[[0.6058, 0.9351], [0.6488, 0.7278]]]]], Max67606), 
LRes8588 = reshape_layer(Max67606, [1, 4], Res8588), 
LFla99124 = flatten_layer(Res8588, Fla99124), 
LAve60006 = average_layer([[[[0.5393, 0.8096]]], [[[0.2172, 0.7067]]]], Ave60006), 
LFla31987 = flatten_layer(Ave60006, Fla31987), 
LCon68150 = concatenate_layer([Fla31987,[[0.7245, 0.0182]]], 1, Con68150), 
LAdd69830 = add_layer([Fla99124,Con68150], Add69830), 
LRes28907 = reshape_layer(Add69830, [4, 1], Res28907), 
LRes92090 = reshape_layer(Res28907, [4, 1, 1], Res92090), 
LRes86851 = reshape_layer(Res92090, [4, 1, 1, 1], Res86851), 
LZer11456 = zero_padding3D_layer(Res86851, 0, 0, 0, 0, 2, 0, Zer11456), 
LAve81162 = average_layer([[[[[[0.328], [0.3646]]]]], [[[[[0.9966], [0.2257]]]]]], Ave81162), 
LZer94569 = zero_padding3D_layer(Ave81162, 3, 0, 0, 0, 1, 0, Zer94569), 
LAve43639 = average_layer([Zer11456,Zer94569], Ave43639), 
exec_layers([LMax67606,LRes8588,LFla99124,LAve60006,LFla31987,LCon68150,LAdd69830,LRes28907,LRes92090,LRes86851,LZer11456,LAve81162,LZer94569,LAve43639],["Max67606","Res8588","Fla99124","Ave60006","Fla31987","Con68150","Add69830","Res28907","Res92090","Res86851","Zer11456","Ave81162","Zer94569","Ave43639"],Ave43639,"Ave43639")

Actual (Unparsed): [[[[[0.0000000], [0.0000000], [0.5472250]]], [[[0.0000000], [0.0000000], [0.8466250]]], [[[0.0000000], [0.0000000], [0.6866500]]], [[[0.0000000], [0.3311500], [0.5205750]]]]]

Expected (Unparsed): [[[[[0],[0],[0.547225]]],[[[0],[0],[0.846625]]],[[[0],[0],[0.68665]]],[[[0],[0.33115],[0.520575]]]]]

Actual:   [[[[[0], [0], [0.5473]]], [[[0], [0], [0.8467]]], [[[0], [0], [0.6867]]], [[[0], [0.3312], [0.5206]]]]]

Expected: [[[[[0], [0], [0.5473]]], [[[0], [0], [0.8467]]], [[[0], [0], [0.6867]]], [[[0], [0.3312], [0.5206]]]]]