import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Sep63111 = tf.keras.layers.Input(shape=([1, 2, 2]))
in0Mul33302 = tf.keras.layers.Input(shape=([1, 1]))
in1Mul33302 = tf.keras.layers.Input(shape=([1, 1]))
in0Con85821 = tf.keras.layers.Input(shape=([1, 3]))

Sep63111 = keras.layers.SeparableConv2D(2, (1, 1),strides=(1, 1), padding='same', name = 'Sep63111', )(in0Sep63111)
Res91022 = keras.layers.Reshape((1, 4), name = 'Res91022', )(Sep63111)
Mul33302 = keras.layers.Multiply(name = 'Mul33302', )([in0Mul33302,in1Mul33302])
Con85821 = keras.layers.Concatenate(axis=2, name = 'Con85821', )([Mul33302,in0Con85821])
Add42448 = keras.layers.Add(name = 'Add42448', )([Res91022,Con85821])
Res59018 = keras.layers.Reshape((1, 4, 1), name = 'Res59018', )(Add42448)
Res58696 = keras.layers.Reshape((1, 4, 1, 1), name = 'Res58696', )(Res59018)
Glo2902 = keras.layers.GlobalMaxPool3D(name = 'Glo2902', )(Res58696)
Res36362 = keras.layers.Reshape((1, 1), name = 'Res36362', )(Glo2902)
Res62215 = keras.layers.Reshape((1, 1, 1), name = 'Res62215', )(Res36362)
Con96780 = keras.layers.Conv2D(2, (1, 1),strides=(1, 1), padding='valid', dilation_rate=(1, 1), name = 'Con96780', )(Res62215)
model = tf.keras.models.Model(inputs=[in0Sep63111,in0Mul33302,in1Mul33302,in0Con85821], outputs=Con96780)
w = model.get_layer('Sep63111').get_weights() 
w[0] = np.array([[[[0.9117], [0.3151]]]])
w[1] = np.array([[[[0.1991, 0.2824], [0.2468, 0.0111]]]])
w[2] = np.array([0, 0])
model.get_layer('Sep63111').set_weights(w) 
w = model.get_layer('Con96780').get_weights() 
w[0] = np.array([[[[0.5737, 0.1554]]]])
w[1] = np.array([0, 0])
model.get_layer('Con96780').set_weights(w) 
in0Sep63111 = tf.constant([[[[0.0696, 0.7778], [0.7347, 0.2203]]]])
in0Mul33302 = tf.constant([[[0.0139]]])
in1Mul33302 = tf.constant([[[0.6402]]])
in0Con85821 = tf.constant([[[0.6673, 0.8756, 0.0763]]])
print (np.array2string(model.predict([in0Sep63111,in0Mul33302,in1Mul33302,in0Con85821],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Con96780.png')

LSep63111 = separable_conv2D_layer([[[[0.0696, 0.7778], [0.7347, 0.2203]]]], 1, 1,[[[[[0.9117], [0.3151]]]],[[[[0.1991, 0.2824], [0.2468, 0.0111]]]]],[0, 0], 1, 1, true, Sep63111), 
LRes91022 = reshape_layer(Sep63111, [1, 4], Res91022), 
LMul33302 = multiply_layer([[[[0.0139]]], [[[0.6402]]]], Mul33302), 
LCon85821 = concatenate_layer([Mul33302,[[[0.6673, 0.8756, 0.0763]]]], 2, Con85821), 
LAdd42448 = add_layer([Res91022,Con85821], Add42448), 
LRes59018 = reshape_layer(Add42448, [1, 4, 1], Res59018), 
LRes58696 = reshape_layer(Res59018, [1, 4, 1, 1], Res58696), 
LGlo2902 = global_max_pool3D_layer(Res58696, Glo2902), 
LRes36362 = reshape_layer(Glo2902, [1, 1], Res36362), 
LRes62215 = reshape_layer(Res36362, [1, 1, 1], Res62215), 
LCon96780 = conv2D_layer(Res62215, 1, 1,[[[[0.5737, 0.1554]]]],[0, 0], 1, 1, false, 1, 1, Con96780), 
exec_layers([LSep63111,LRes91022,LMul33302,LCon85821,LAdd42448,LRes59018,LRes58696,LGlo2902,LRes36362,LRes62215,LCon96780],["Sep63111","Res91022","Mul33302","Con85821","Add42448","Res59018","Res58696","Glo2902","Res36362","Res62215","Con96780"],Con96780,"Con96780")

Actual (Unparsed): [[[[0.5886703, 0.1594551]]]]

Expected (Unparsed): [[[[0.5886703310119982,0.15945506264470022]]]]

Actual:   [[[[0.5887, 0.1595]]]]

Expected: [[[[0.5887, 0.1595]]]]