import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Mul11446 = tf.keras.layers.Input(shape=([2, 2, 2, 2]))
in1Mul11446 = tf.keras.layers.Input(shape=([2, 2, 2, 2]))
in0Loc90372 = tf.keras.layers.Input(shape=([2, 1, 2]))
in0Con82805 = tf.keras.layers.Input(shape=([2, 2, 1]))
in0Min39862 = tf.keras.layers.Input(shape=([2, 2]))
in1Min39862 = tf.keras.layers.Input(shape=([2, 2]))
in0Add21706 = tf.keras.layers.Input(shape=([2, 2]))
in1Add21706 = tf.keras.layers.Input(shape=([2, 2]))
in0Con24518 = tf.keras.layers.Input(shape=([2]))
in0Con97549 = tf.keras.layers.Input(shape=([12]))

Mul11446 = keras.layers.Multiply(name = 'Mul11446', )([in0Mul11446,in1Mul11446])
Res8908 = keras.layers.Reshape((2, 2, 4), name = 'Res8908', )(Mul11446)
Loc90372 = keras.layers.LocallyConnected2D(3, (2, 1),strides=(1, 1), name = 'Loc90372', )(in0Loc90372)
Thr7943 = keras.layers.ThresholdedReLU(theta=8.72245361980691, name = 'Thr7943', )(Loc90372)
Zer87757 = keras.layers.ZeroPadding2D(padding=((1, 0), (1, 0)), name = 'Zer87757', )(Thr7943)
Con82805 = keras.layers.Concatenate(axis=3, name = 'Con82805', )([Zer87757,in0Con82805])
Sub14298 = keras.layers.Subtract(name = 'Sub14298', )([Res8908,Con82805])
Res40667 = keras.layers.Reshape((2, 8), name = 'Res40667', )(Sub14298)
Fla38535 = keras.layers.Flatten(name = 'Fla38535', )(Res40667)
Min39862 = keras.layers.Minimum(name = 'Min39862', )([in0Min39862,in1Min39862])
Fla71259 = keras.layers.Flatten(name = 'Fla71259', )(Min39862)
Add21706 = keras.layers.Add(name = 'Add21706', )([in0Add21706,in1Add21706])
Glo14214 = keras.layers.GlobalMaxPool1D(name = 'Glo14214', )(Add21706)
Con24518 = keras.layers.Concatenate(axis=1, name = 'Con24518', )([Glo14214,in0Con24518])
Ave97656 = keras.layers.Average(name = 'Ave97656', )([Fla71259,Con24518])
Con97549 = keras.layers.Concatenate(axis=1, name = 'Con97549', )([Ave97656,in0Con97549])
Max209 = keras.layers.Maximum(name = 'Max209', )([Fla38535,Con97549])
model = tf.keras.models.Model(inputs=[in0Mul11446,in1Mul11446,in0Loc90372,in0Con82805,in0Min39862,in1Min39862,in0Add21706,in1Add21706,in0Con24518,in0Con97549], outputs=Max209)
w = model.get_layer('Loc90372').get_weights() 
w[0] = np.array([[[0.5868, 0.3443, 0.956], [0.8547, 0.6618, 0.2803], [0.1104, 0.7264, 0.3906], [0.6021, 0.9214, 0.3657]]])
w[1] = np.array([[[0, 0, 0]]])
model.get_layer('Loc90372').set_weights(w) 
in0Mul11446 = tf.constant([[[[[0.0575, 0.9856], [0.0819, 0.9791]], [[0.3101, 0.6292], [0.2551, 0.8252]]], [[[0.6826, 0.6984], [0.1201, 0.6669]], [[0.1, 0.3649], [0.0084, 0.3839]]]]])
in1Mul11446 = tf.constant([[[[[0.2191, 0.106], [0.7617, 0.4718]], [[0.7865, 0.8486], [0.8014, 0.5141]]], [[[0.1443, 0.8641], [0.5939, 0.7024]], [[0.8789, 0.7622], [0.2156, 0.4958]]]]])
in0Loc90372 = tf.constant([[[[0.755, 0.7066]], [[0.9477, 0.4909]]]])
in0Con82805 = tf.constant([[[[0.4542], [0.486]], [[0.5822], [0.1793]]]])
in0Min39862 = tf.constant([[[0.6277, 0.4112], [0.9586, 0.7126]]])
in1Min39862 = tf.constant([[[0.984, 0.5672], [0.1707, 0.8287]]])
in0Add21706 = tf.constant([[[0.1289, 0.0976], [0.3476, 0.2428]]])
in1Add21706 = tf.constant([[[0.8032, 0.0378], [0.2882, 0.6244]]])
in0Con24518 = tf.constant([[0.6091, 0.8663]])
in0Con97549 = tf.constant([[0.9404, 0.3626, 0.0634, 0.4853, 0.4341, 0.5177, 0.972, 0.0246, 0.1745, 0.4996, 0.791, 0.6039]])
print (np.array2string(model.predict([in0Mul11446,in1Mul11446,in0Loc90372,in0Con82805,in0Min39862,in1Min39862,in0Add21706,in1Add21706,in0Con24518,in0Con97549],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Max209.png')

LMul11446 = multiply_layer([[[[[[0.0575, 0.9856], [0.0819, 0.9791]], [[0.3101, 0.6292], [0.2551, 0.8252]]], [[[0.6826, 0.6984], [0.1201, 0.6669]], [[0.1, 0.3649], [0.0084, 0.3839]]]]], [[[[[0.2191, 0.106], [0.7617, 0.4718]], [[0.7865, 0.8486], [0.8014, 0.5141]]], [[[0.1443, 0.8641], [0.5939, 0.7024]], [[0.8789, 0.7622], [0.2156, 0.4958]]]]]], Mul11446), 
LRes8908 = reshape_layer(Mul11446, [2, 2, 4], Res8908), 
LLoc90372 = locally_connected2D_layer([[[[0.755, 0.7066]], [[0.9477, 0.4909]]]], 2, 1,[[[0.5868, 0.3443, 0.956], [0.8547, 0.6618, 0.2803], [0.1104, 0.7264, 0.3906], [0.6021, 0.9214, 0.3657]]],[[[0, 0, 0]]], 1, 1, Loc90372), 
LThr7943 = thresholded_relu_layer(Loc90372, 8.72245361980691, Thr7943), 
LZer87757 = zero_padding2D_layer(Thr7943, 1, 0, 1, 0, Zer87757), 
LCon82805 = concatenate_layer([Zer87757,[[[[0.4542], [0.486]], [[0.5822], [0.1793]]]]], 3, Con82805), 
LSub14298 = subtract_layer(Res8908,Con82805, Sub14298), 
LRes40667 = reshape_layer(Sub14298, [2, 8], Res40667), 
LFla38535 = flatten_layer(Res40667, Fla38535), 
LMin39862 = minimum_layer([[[[0.6277, 0.4112], [0.9586, 0.7126]]], [[[0.984, 0.5672], [0.1707, 0.8287]]]], Min39862), 
LFla71259 = flatten_layer(Min39862, Fla71259), 
LAdd21706 = add_layer([[[[0.1289, 0.0976], [0.3476, 0.2428]]], [[[0.8032, 0.0378], [0.2882, 0.6244]]]], Add21706), 
LGlo14214 = global_max_pool1D_layer(Add21706, Glo14214), 
LCon24518 = concatenate_layer([Glo14214,[[0.6091, 0.8663]]], 1, Con24518), 
LAve97656 = average_layer([Fla71259,Con24518], Ave97656), 
LCon97549 = concatenate_layer([Ave97656,[[0.9404, 0.3626, 0.0634, 0.4853, 0.4341, 0.5177, 0.972, 0.0246, 0.1745, 0.4996, 0.791, 0.6039]]], 1, Con97549), 
LMax209 = maximum_layer([Fla38535,Con97549], Max209), 
exec_layers([LMul11446,LRes8908,LLoc90372,LThr7943,LZer87757,LCon82805,LSub14298,LRes40667,LFla38535,LMin39862,LFla71259,LAdd21706,LGlo14214,LCon24518,LAve97656,LCon97549,LMax209],["Mul11446","Res8908","Loc90372","Thr7943","Zer87757","Con82805","Sub14298","Res40667","Fla38535","Min39862","Fla71259","Add21706","Glo14214","Con24518","Ave97656","Con97549","Max209"],Max209,"Max209")

Actual (Unparsed): [[0.7799000, 0.6392000, 0.3899000, 0.7894500, 0.9404000, 0.5339391, 0.2044372, 0.4853000, 0.4341000, 0.6034874, 0.9720000, 0.0246000, 0.1745000, 0.4996000, 0.7910000, 0.6039000]]

Expected (Unparsed): [[0.7799,0.6392,0.38989999999999997,0.78945,0.9404,0.53393912,0.20443714,0.4853,0.4341,0.60348744,0.972,0.0246,0.1745,0.4996,0.791,0.6039]]

Actual:   [[0.7799, 0.6392, 0.3899, 0.7895, 0.9404, 0.534, 0.2045, 0.4853, 0.4341, 0.6035, 0.972, 0.0246, 0.1745, 0.4996, 0.791, 0.6039]]

Expected: [[0.7799, 0.6392, 0.3899, 0.7895, 0.9404, 0.534, 0.2045, 0.4853, 0.4341, 0.6035, 0.972, 0.0246, 0.1745, 0.4996, 0.791, 0.6039]]