import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Mul32723 = tf.keras.layers.Input(shape=([2, 1, 2]))
in1Mul32723 = tf.keras.layers.Input(shape=([2, 1, 2]))
in0Zer83737 = tf.keras.layers.Input(shape=([1, 4, 2]))
in0Con64879 = tf.keras.layers.Input(shape=([5]))
in0Mul5535 = tf.keras.layers.Input(shape=([2, 1, 1]))
in1Mul5535 = tf.keras.layers.Input(shape=([2, 1, 1]))

Mul32723 = keras.layers.Multiply(name = 'Mul32723', )([in0Mul32723,in1Mul32723])
Den50763 = keras.layers.Dense(4,name = 'Den50763', )(Mul32723)
Res89928 = keras.layers.Reshape((2, 4), name = 'Res89928', )(Den50763)
Fla31364 = keras.layers.Flatten(name = 'Fla31364', )(Res89928)
Zer83737 = keras.layers.ZeroPadding2D(padding=((1, 1), (1, 1)), name = 'Zer83737', )(in0Zer83737)
Res86461 = keras.layers.Reshape((3, 12), name = 'Res86461', )(Zer83737)
LST31912 = keras.layers.LSTM(3,recurrent_activation='sigmoid', name = 'LST31912', )(Res86461)
Con64879 = keras.layers.Concatenate(axis=1, name = 'Con64879', )([LST31912,in0Con64879])
Max11284 = keras.layers.Maximum(name = 'Max11284', )([Fla31364,Con64879])
Res32365 = keras.layers.Reshape((8, 1), name = 'Res32365', )(Max11284)
Res23753 = keras.layers.Reshape((8, 1, 1), name = 'Res23753', )(Res32365)
Mul5535 = keras.layers.Multiply(name = 'Mul5535', )([in0Mul5535,in1Mul5535])
Max32457 = keras.layers.MaxPool2D(pool_size=(1, 1), strides=(1, 10), padding='same', name = 'Max32457', )(Mul5535)
Zer89092 = keras.layers.ZeroPadding2D(padding=((6, 0), (0, 0)), name = 'Zer89092', )(Max32457)
Add55670 = keras.layers.Add(name = 'Add55670', )([Res23753,Zer89092])
model = tf.keras.models.Model(inputs=[in0Mul32723,in1Mul32723,in0Zer83737,in0Con64879,in0Mul5535,in1Mul5535], outputs=Add55670)
w = model.get_layer('Den50763').get_weights() 
w[0] = np.array([[0.1745, 0.8184, 0.778, 0.6611], [0.5043, 0.0564, 0.4881, 0.5469]])
w[1] = np.array([0.8298, 0.2964, 0.2724, 0.075])
model.get_layer('Den50763').set_weights(w) 
w = model.get_layer('LST31912').get_weights() 
w[0] = np.array([[2, 5, 8, 7, 7, 10, 1, 2, 4, 3, 3, 7], [4, 5, 2, 4, 8, 9, 9, 9, 9, 3, 7, 5], [10, 9, 1, 5, 6, 10, 7, 10, 6, 4, 3, 8], [3, 2, 10, 6, 4, 6, 6, 10, 1, 9, 10, 8], [8, 10, 2, 8, 10, 7, 3, 8, 3, 10, 8, 6], [2, 2, 7, 4, 9, 3, 3, 1, 2, 8, 6, 8], [7, 8, 5, 6, 2, 3, 5, 1, 1, 8, 9, 9], [4, 2, 2, 10, 3, 3, 7, 3, 8, 2, 5, 3], [6, 4, 2, 9, 9, 10, 2, 10, 4, 3, 10, 3], [1, 6, 9, 2, 9, 9, 2, 7, 5, 10, 7, 10], [2, 8, 8, 8, 4, 3, 8, 4, 1, 5, 2, 5], [10, 8, 5, 10, 1, 10, 6, 9, 8, 8, 2, 3]])
w[1] = np.array([[5, 7, 5, 7, 2, 1, 4, 5, 1, 1, 10, 8], [8, 10, 3, 7, 4, 10, 6, 9, 7, 7, 6, 5], [1, 6, 3, 10, 10, 2, 10, 6, 8, 7, 1, 1]])
w[2] = np.array([3, 9, 9, 9, 4, 3, 7, 1, 2, 5, 2, 10])
model.get_layer('LST31912').set_weights(w) 
in0Mul32723 = tf.constant([[[[0.7976, 0.6466]], [[0.5525, 0.7375]]]])
in1Mul32723 = tf.constant([[[[0.8588, 0.5805]], [[0.3247, 0.0414]]]])
in0Zer83737 = tf.constant([[[[1.138, 1.2142], [1.5023, 1.6051], [1.6162, 1.1348], [1.5496, 1.9537]]]])
in0Con64879 = tf.constant([[0.2456, 0.0748, 0.8508, 0.087, 0.6392]])
in0Mul5535 = tf.constant([[[[0.1712]], [[0.0294]]]])
in1Mul5535 = tf.constant([[[[0.3935]], [[0.7479]]]])
print (np.array2string(model.predict([in0Mul32723,in1Mul32723,in0Zer83737,in0Con64879,in0Mul5535,in1Mul5535],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Add55670.png')

LMul32723 = multiply_layer([[[[[0.7976, 0.6466]], [[0.5525, 0.7375]]]], [[[[0.8588, 0.5805]], [[0.3247, 0.0414]]]]], Mul32723), 
LDen50763 = dense_layer(Mul32723, [[0.1745, 0.8184, 0.778, 0.6611], [0.5043, 0.0564, 0.4881, 0.5469]],[0.8298, 0.2964, 0.2724, 0.075], Den50763), 
LRes89928 = reshape_layer(Den50763, [2, 4], Res89928), 
LFla31364 = flatten_layer(Res89928, Fla31364), 
LZer83737 = zero_padding2D_layer([[[[1.138, 1.2142], [1.5023, 1.6051], [1.6162, 1.1348], [1.5496, 1.9537]]]], 1, 1, 1, 1, Zer83737), 
LRes86461 = reshape_layer(Zer83737, [3, 12], Res86461), 
LLST31912 = lstm_layer(Res86461,[[2, 5, 8, 7, 7, 10, 1, 2, 4, 3, 3, 7], [4, 5, 2, 4, 8, 9, 9, 9, 9, 3, 7, 5], [10, 9, 1, 5, 6, 10, 7, 10, 6, 4, 3, 8], [3, 2, 10, 6, 4, 6, 6, 10, 1, 9, 10, 8], [8, 10, 2, 8, 10, 7, 3, 8, 3, 10, 8, 6], [2, 2, 7, 4, 9, 3, 3, 1, 2, 8, 6, 8], [7, 8, 5, 6, 2, 3, 5, 1, 1, 8, 9, 9], [4, 2, 2, 10, 3, 3, 7, 3, 8, 2, 5, 3], [6, 4, 2, 9, 9, 10, 2, 10, 4, 3, 10, 3], [1, 6, 9, 2, 9, 9, 2, 7, 5, 10, 7, 10], [2, 8, 8, 8, 4, 3, 8, 4, 1, 5, 2, 5], [10, 8, 5, 10, 1, 10, 6, 9, 8, 8, 2, 3]],[[5, 7, 5, 7, 2, 1, 4, 5, 1, 1, 10, 8], [8, 10, 3, 7, 4, 10, 6, 9, 7, 7, 6, 5], [1, 6, 3, 10, 10, 2, 10, 6, 8, 7, 1, 1]],[3, 9, 9, 9, 4, 3, 7, 1, 2, 5, 2, 10], LST31912), 
LCon64879 = concatenate_layer([LST31912,[[0.2456, 0.0748, 0.8508, 0.087, 0.6392]]], 1, Con64879), 
LMax11284 = maximum_layer([Fla31364,Con64879], Max11284), 
LRes32365 = reshape_layer(Max11284, [8, 1], Res32365), 
LRes23753 = reshape_layer(Res32365, [8, 1, 1], Res23753), 
LMul5535 = multiply_layer([[[[[0.1712]], [[0.0294]]]], [[[[0.3935]], [[0.7479]]]]], Mul5535), 
LMax32457 = max_pool2D_layer(Mul5535, 1, 1, 1, 10, true, Max32457), 
LZer89092 = zero_padding2D_layer(Max32457, 6, 0, 0, 0, Zer89092), 
LAdd55670 = add_layer([Res23753,Zer89092], Add55670), 
exec_layers([LMul32723,LDen50763,LRes89928,LFla31364,LZer83737,LRes86461,LLST31912,LCon64879,LMax11284,LRes32365,LRes23753,LMul5535,LMax32457,LZer89092,LAdd55670],["Mul32723","Den50763","Res89928","Fla31364","Zer83737","Res86461","LST31912","Con64879","Max11284","Res32365","Res23753","Mul5535","Max32457","Zer89092","Add55670"],Add55670,"Add55670")

Actual (Unparsed): [[[[1.1386185]], [[0.9920441]], [[0.9946856]], [[0.7331191]], [[0.8765023]], [[0.8508000]], [[0.4942408]], [[0.6611882]]]]

Expected (Unparsed): [[[[1.13861847515]],[[0.9920440685673899]],[[0.9946855721291732]],[[0.733119163538]],[[0.876502272625]],[[0.8508]],[[0.49424078475]],[[0.66118826]]]]

Actual:   [[[[1.1387]], [[0.9921]], [[0.9947]], [[0.7332]], [[0.8766]], [[0.8508]], [[0.4943]], [[0.6612]]]]

Expected: [[[[1.1387]], [[0.9921]], [[0.9947]], [[0.7332]], [[0.8766]], [[0.8508]], [[0.4943]], [[0.6612]]]]