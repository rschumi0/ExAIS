import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Add2908 = tf.keras.layers.Input(shape=([1, 1, 2]))
in1Add2908 = tf.keras.layers.Input(shape=([1, 1, 2]))

Add2908 = keras.layers.Add(name = 'Add2908', )([in0Add2908,in1Add2908])
Lay84345 = keras.layers.LayerNormalization(axis=2, epsilon=1.9392751614091426, name = 'Lay84345', )(Add2908)
model = tf.keras.models.Model(inputs=[in0Add2908,in1Add2908], outputs=Lay84345)
in0Add2908 = tf.constant([[[[0.7526, 0.6182]]]])
in1Add2908 = tf.constant([[[[0.3546, 0.1997]]]])
print (np.array2string(model.predict([in0Add2908,in1Add2908],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Lay84345.png')

LAdd2908 = add_layer([[[[[0.7526, 0.6182]]]], [[[[0.3546, 0.1997]]]]], Add2908), 
LLay84345 = layer_normalization_layer(Add2908, 2, 1.9392751614091426, Lay84345), 
exec_layers([LAdd2908,LLay84345],["Add2908","Lay84345"],Lay84345,"Lay84345")

Actual (Unparsed): [[[[0.0000000, 0.0000000]]]]

Expected (Unparsed): [[[[0.0,0.0]]]]

Actual:   [[[[0, 0]]]]

Expected: [[[[0, 0]]]]