import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Ave33598 = tf.keras.layers.Input(shape=([1, 1, 1]))
in1Ave33598 = tf.keras.layers.Input(shape=([1, 1, 1]))
in0Con6826 = tf.keras.layers.Input(shape=([2, 2, 4, 1]))
in0Up_4735 = tf.keras.layers.Input(shape=([1, 1, 4, 2]))

Ave33598 = keras.layers.Average(name = 'Ave33598', )([in0Ave33598,in1Ave33598])
Res22710 = keras.layers.Reshape((1, 1, 1, 1), name = 'Res22710', )(Ave33598)
Zer54054 = keras.layers.ZeroPadding3D(padding=((1, 0), (1, 0), (3, 0)), name = 'Zer54054', )(Res22710)
Con6826 = keras.layers.Concatenate(axis=4, name = 'Con6826', )([Zer54054,in0Con6826])
Up_4735 = keras.layers.UpSampling3D(size=(2, 2, 1), name = 'Up_4735', )(in0Up_4735)
Sub3516 = keras.layers.Subtract(name = 'Sub3516', )([Con6826,Up_4735])
Res13935 = keras.layers.Reshape((2, 2, 8), name = 'Res13935', )(Sub3516)
Con29303 = keras.layers.Conv2DTranspose(2, (2, 1),strides=(7, 1), padding='valid', name = 'Con29303', )(Res13935)
model = tf.keras.models.Model(inputs=[in0Ave33598,in1Ave33598,in0Con6826,in0Up_4735], outputs=Con29303)
w = model.get_layer('Con29303').get_weights() 
w[0] = np.array([[[[0.9117, 0.9909, 0.8322, 0.2403, 0.1585, 0.841, 0.099, 0.9134], [0.7574, 0.0899, 0.0356, 0.5378, 0.8604, 0.1106, 0.6913, 0.198]]], [[[0.3357, 0.732, 0.3593, 0.2812, 0.9257, 0.5147, 0.5796, 0.7125], [0.0652, 0.6448, 0.7318, 0.603, 0.8631, 0.7615, 0.4975, 0.347]]]])
w[1] = np.array([0, 0])
model.get_layer('Con29303').set_weights(w) 
in0Ave33598 = tf.constant([[[[0.5978]]]])
in1Ave33598 = tf.constant([[[[0.0346]]]])
in0Con6826 = tf.constant([[[[[0.5082], [0.9961], [0.117], [0.2533]], [[0.0256], [0.1944], [0.3964], [0.3464]]], [[[0.8335], [0.3748], [0.7241], [0.667]], [[0.6388], [0.2849], [0.2952], [0.1243]]]]])
in0Up_4735 = tf.constant([[[[[1.9028, 1.4428], [1.4436, 1.6218], [1.2284, 1.4572], [1.7328, 1.1605]]]]])
print (np.array2string(model.predict([in0Ave33598,in1Ave33598,in0Con6826,in0Up_4735],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Con29303.png')

LAve33598 = average_layer([[[[[0.5978]]]], [[[[0.0346]]]]], Ave33598), 
LRes22710 = reshape_layer(Ave33598, [1, 1, 1, 1], Res22710), 
LZer54054 = zero_padding3D_layer(Res22710, 1, 0, 1, 0, 3, 0, Zer54054), 
LCon6826 = concatenate_layer([Zer54054,[[[[[0.5082], [0.9961], [0.117], [0.2533]], [[0.0256], [0.1944], [0.3964], [0.3464]]], [[[0.8335], [0.3748], [0.7241], [0.667]], [[0.6388], [0.2849], [0.2952], [0.1243]]]]]], 4, Con6826), 
LUp_4735 = up_sampling3D_layer([[[[[1.9028, 1.4428], [1.4436, 1.6218], [1.2284, 1.4572], [1.7328, 1.1605]]]]], 2, 2, 1, Up_4735), 
LSub3516 = subtract_layer(Con6826,Up_4735, Sub3516), 
LRes13935 = reshape_layer(Sub3516, [2, 2, 8], Res13935), 
LCon29303 = conv2D_transpose_layer(Res13935, 2, 1,[[[[0.9117, 0.9909, 0.8322, 0.2403, 0.1585, 0.841, 0.099, 0.9134], [0.7574, 0.0899, 0.0356, 0.5378, 0.8604, 0.1106, 0.6913, 0.198]]], [[[0.3357, 0.732, 0.3593, 0.2812, 0.9257, 0.5147, 0.5796, 0.7125], [0.0652, 0.6448, 0.7318, 0.603, 0.8631, 0.7615, 0.4975, 0.347]]]],[0, 0], 7, 1, false, Con29303), 
exec_layers([LAve33598,LRes22710,LZer54054,LCon6826,LUp_4735,LSub3516,LRes13935,LCon29303],["Ave33598","Res22710","Zer54054","Con6826","Up_4735","Sub3516","Res13935","Con29303"],Con29303,"Con29303")

Actual (Unparsed): [[[[-6.3345909, -4.4957466], [-6.6854349, -4.9209511]], [[-5.4951713, -5.4180770], [-5.8637316, -5.9676138]], [[0.0000000, 0.0000000], [0.0000000, 0.0000000]], [[0.0000000, 0.0000000], [0.0000000, 0.0000000]], [[0.0000000, 0.0000000], [0.0000000, 0.0000000]], [[0.0000000, 0.0000000], [0.0000000, 0.0000000]], [[0.0000000, 0.0000000], [0.0000000, 0.0000000]], [[-5.2731049, -4.6515794], [-6.3127393, -4.6537330]], [[-4.8245256, -4.9771069], [-5.4164849, -5.5144739]], [[0.0000000, 0.0000000], [0.0000000, 0.0000000]], [[0.0000000, 0.0000000], [0.0000000, 0.0000000]], [[0.0000000, 0.0000000], [0.0000000, 0.0000000]], [[0.0000000, 0.0000000], [0.0000000, 0.0000000]], [[0.0000000, 0.0000000], [0.0000000, 0.0000000]]]]

Expected (Unparsed): [[[[-6.334590810000001,-4.4957465999999995],[-6.68543472,-4.92095116]],[[-5.49517118,-5.41807696],[-5.863731490000001,-5.967613739999999]],[[0,0],[0,0]],[[0,0],[0,0]],[[0,0],[0,0]],[[0,0],[0,0]],[[0,0],[0,0]],[[-5.273104750000001,-4.65157941],[-6.31273923,-4.6537330400000005]],[[-4.82452552,-4.97710687],[-5.41648486,-5.514473879999999]],[[0,0],[0,0]],[[0,0],[0,0]],[[0,0],[0,0]],[[0,0],[0,0]],[[0,0],[0,0]]]]

Actual:   [[[[-6.3345, -4.4957], [-6.6854, -4.9209]], [[-5.4951, -5.418], [-5.8637, -5.9676]], [[0, 0], [0, 0]], [[0, 0], [0, 0]], [[0, 0], [0, 0]], [[0, 0], [0, 0]], [[0, 0], [0, 0]], [[-5.2731, -4.6515], [-6.3127, -4.6537]], [[-4.8245, -4.9771], [-5.4164, -5.5144]], [[0, 0], [0, 0]], [[0, 0], [0, 0]], [[0, 0], [0, 0]], [[0, 0], [0, 0]], [[0, 0], [0, 0]]]]

Expected: [[[[-6.3345, -4.4957], [-6.6854, -4.9209]], [[-5.4951, -5.418], [-5.8637, -5.9676]], [[0, 0], [0, 0]], [[0, 0], [0, 0]], [[0, 0], [0, 0]], [[0, 0], [0, 0]], [[0, 0], [0, 0]], [[-5.2731, -4.6515], [-6.3127, -4.6537]], [[-4.8245, -4.9771], [-5.4164, -5.5144]], [[0, 0], [0, 0]], [[0, 0], [0, 0]], [[0, 0], [0, 0]], [[0, 0], [0, 0]], [[0, 0], [0, 0]]]]