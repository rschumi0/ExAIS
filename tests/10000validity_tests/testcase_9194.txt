import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Min88702 = tf.keras.layers.Input(shape=([1, 1, 2]))
in1Min88702 = tf.keras.layers.Input(shape=([1, 1, 2]))

Min88702 = keras.layers.Minimum(name = 'Min88702', )([in0Min88702,in1Min88702])
Res80149 = keras.layers.Reshape((1, 1, 2, 1), name = 'Res80149', )(Min88702)
Up_43588 = keras.layers.UpSampling3D(size=(1, 2, 1), name = 'Up_43588', )(Res80149)
model = tf.keras.models.Model(inputs=[in0Min88702,in1Min88702], outputs=Up_43588)
in0Min88702 = tf.constant([[[[0.1981, 0.1988]]]])
in1Min88702 = tf.constant([[[[0.9553, 0.4166]]]])
print (np.array2string(model.predict([in0Min88702,in1Min88702],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Up_43588.png')

LMin88702 = minimum_layer([[[[[0.1981, 0.1988]]]], [[[[0.9553, 0.4166]]]]], Min88702), 
LRes80149 = reshape_layer(Min88702, [1, 1, 2, 1], Res80149), 
LUp_43588 = up_sampling3D_layer(Res80149, 1, 2, 1, Up_43588), 
exec_layers([LMin88702,LRes80149,LUp_43588],["Min88702","Res80149","Up_43588"],Up_43588,"Up_43588")

Actual (Unparsed): [[[[[0.1981000], [0.1988000]], [[0.1981000], [0.1988000]]]]]

Expected (Unparsed): [[[[[0.1981],[0.1988]],[[0.1981],[0.1988]]]]]

Actual:   [[[[[0.1981], [0.1988]], [[0.1981], [0.1988]]]]]

Expected: [[[[[0.1981], [0.1988]], [[0.1981], [0.1988]]]]]