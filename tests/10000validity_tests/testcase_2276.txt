import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Dot92802 = tf.keras.layers.Input(shape=([2]))
in1Dot92802 = tf.keras.layers.Input(shape=([2]))
in0Con88167 = tf.keras.layers.Input(shape=([2]))
in0Con73468 = tf.keras.layers.Input(shape=([1, 2, 2]))

Dot92802 = keras.layers.Dot(axes=(1, 1), name = 'Dot92802', )([in0Dot92802,in1Dot92802])
Con88167 = keras.layers.Concatenate(axis=1, name = 'Con88167', )([Dot92802,in0Con88167])
Con73468 = keras.layers.Conv2DTranspose(4, (1, 2),strides=(1, 1), padding='same', name = 'Con73468', )(in0Con73468)
Res33802 = keras.layers.Reshape((1, 8), name = 'Res33802', )(Con73468)
GRU28788 = keras.layers.GRU(3,reset_after=False, recurrent_activation='sigmoid', name = 'GRU28788', )(Res33802)
Dot68665 = keras.layers.Dot(axes=(1, 1), name = 'Dot68665', )([Con88167,GRU28788])
Lea41777 = keras.layers.LeakyReLU(alpha=8.096559360449206, name = 'Lea41777', )(Dot68665)
model = tf.keras.models.Model(inputs=[in0Dot92802,in1Dot92802,in0Con88167,in0Con73468], outputs=Lea41777)
w = model.get_layer('Con73468').get_weights() 
w[0] = np.array([[[[0.8834, 0.4214], [0.788, 0.8624], [0.4017, 0.3213], [0.383, 0.5752]], [[0.8354, 0.0663], [0.1047, 0.4722], [0.137, 0.386], [0.6225, 0.2944]]]])
w[1] = np.array([0, 0, 0, 0])
model.get_layer('Con73468').set_weights(w) 
w = model.get_layer('GRU28788').get_weights() 
w[0] = np.array([[8, 5, 7, 9, 10, 7, 4, 9, 10], [6, 2, 6, 6, 8, 3, 6, 7, 10], [3, 3, 8, 2, 3, 3, 10, 6, 1], [4, 7, 7, 6, 7, 9, 9, 1, 3], [7, 5, 5, 7, 5, 4, 3, 9, 1], [5, 2, 8, 1, 8, 9, 4, 2, 5], [9, 8, 1, 3, 10, 2, 2, 6, 7], [7, 4, 1, 5, 7, 2, 8, 9, 1]])
w[1] = np.array([[4, 1, 9, 2, 2, 6, 5, 1, 3], [9, 6, 8, 10, 8, 6, 9, 1, 1], [9, 4, 5, 10, 10, 8, 3, 7, 8]])
w[2] = np.array([9, 8, 4, 10, 10, 2, 4, 2, 3])
model.get_layer('GRU28788').set_weights(w) 
in0Dot92802 = tf.constant([[0.2154, 0.5677]])
in1Dot92802 = tf.constant([[0.7685, 0.1188]])
in0Con88167 = tf.constant([[0.2055, 0.0564]])
in0Con73468 = tf.constant([[[[0.9333, 0.8662], [0.1479, 0.5603]]]])
print (np.array2string(model.predict([in0Dot92802,in1Dot92802,in0Con88167,in0Con73468],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Lea41777.png')

LDot92802 = dot_layer([[0.2154, 0.5677]], [[0.7685, 0.1188]], 1, 1, Dot92802), 
LCon88167 = concatenate_layer([Dot92802,[[0.2055, 0.0564]]], 1, Con88167), 
LCon73468 = conv2D_transpose_layer([[[[0.9333, 0.8662], [0.1479, 0.5603]]]], 1, 2,[[[[0.8834, 0.4214], [0.788, 0.8624], [0.4017, 0.3213], [0.383, 0.5752]], [[0.8354, 0.0663], [0.1047, 0.4722], [0.137, 0.386], [0.6225, 0.2944]]]],[0, 0, 0, 0], 1, 1, true, Con73468), 
LRes33802 = reshape_layer(Con73468, [1, 8], Res33802), 
LGRU28788 = gru_layer(Res33802,[[8, 5, 7, 9, 10, 7, 4, 9, 10], [6, 2, 6, 6, 8, 3, 6, 7, 10], [3, 3, 8, 2, 3, 3, 10, 6, 1], [4, 7, 7, 6, 7, 9, 9, 1, 3], [7, 5, 5, 7, 5, 4, 3, 9, 1], [5, 2, 8, 1, 8, 9, 4, 2, 5], [9, 8, 1, 3, 10, 2, 2, 6, 7], [7, 4, 1, 5, 7, 2, 8, 9, 1]],[[4, 1, 9, 2, 2, 6, 5, 1, 3], [9, 6, 8, 10, 8, 6, 9, 1, 1], [9, 4, 5, 10, 10, 8, 3, 7, 8]],[9, 8, 4, 10, 10, 2, 4, 2, 3], false, GRU28788), 
LDot68665 = dot_layer(Con88167,GRU28788, 1, 1, Dot68665), 
LLea41777 = leaky_relu_layer(Dot68665, 8.096559360449206, Lea41777), 
exec_layers([LDot92802,LCon88167,LCon73468,LRes33802,LGRU28788,LDot68665,LLea41777],["Dot92802","Con88167","Con73468","Res33802","GRU28788","Dot68665","Lea41777"],Lea41777,"Lea41777")

Actual (Unparsed): [[0.0000000]]

Expected (Unparsed): [[0.0]]

Actual:   [[0]]

Expected: [[0]]