import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Max1040 = tf.keras.layers.Input(shape=([1, 1]))
in1Max1040 = tf.keras.layers.Input(shape=([1, 1]))
in0Con31416 = tf.keras.layers.Input(shape=([3]))
in0Mas64296 = tf.keras.layers.Input(shape=([2, 2]))
in0Glo61440 = tf.keras.layers.Input(shape=([2, 2, 1]))
in0Con95248 = tf.keras.layers.Input(shape=([3]))

Max1040 = keras.layers.Maximum(name = 'Max1040', )([in0Max1040,in1Max1040])
Fla25367 = keras.layers.Flatten(name = 'Fla25367', )(Max1040)
Con31416 = keras.layers.Concatenate(axis=1, name = 'Con31416', )([Fla25367,in0Con31416])
Mas64296 = keras.layers.Masking(mask_value=2, name = 'Mas64296', )(in0Mas64296)
Lea14434 = keras.layers.LeakyReLU(alpha=5.179724032883358, name = 'Lea14434', )(Mas64296)
Fla66656 = keras.layers.Flatten(name = 'Fla66656', )(Lea14434)
Glo61440 = keras.layers.GlobalMaxPool2D(name = 'Glo61440', )(in0Glo61440)
Con95248 = keras.layers.Concatenate(axis=1, name = 'Con95248', )([Glo61440,in0Con95248])
Ave89629 = keras.layers.Average(name = 'Ave89629', )([Fla66656,Con95248])
Max42393 = keras.layers.Maximum(name = 'Max42393', )([Con31416,Ave89629])
model = tf.keras.models.Model(inputs=[in0Max1040,in1Max1040,in0Con31416,in0Mas64296,in0Glo61440,in0Con95248], outputs=Max42393)
in0Max1040 = tf.constant([[[0.3421]]])
in1Max1040 = tf.constant([[[0.0345]]])
in0Con31416 = tf.constant([[0.2274, 0.3427, 0.1854]])
in0Mas64296 = tf.constant([[[1.8439, 1.7819], [1.1712, 1.6705]]])
in0Glo61440 = tf.constant([[[[1.7819], [1.0447]], [[1.5055], [1.4668]]]])
in0Con95248 = tf.constant([[0.2417, 0.2899, 0.7576]])
print (np.array2string(model.predict([in0Max1040,in1Max1040,in0Con31416,in0Mas64296,in0Glo61440,in0Con95248],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Max42393.png')

LMax1040 = maximum_layer([[[[0.3421]]], [[[0.0345]]]], Max1040), 
LFla25367 = flatten_layer(Max1040, Fla25367), 
LCon31416 = concatenate_layer([Fla25367,[[0.2274, 0.3427, 0.1854]]], 1, Con31416), 
LMas64296 = masking_layer([[[1.8439, 1.7819], [1.1712, 1.6705]]], 2, Mas64296), 
LLea14434 = leaky_relu_layer(Mas64296, 5.179724032883358, Lea14434), 
LFla66656 = flatten_layer(Lea14434, Fla66656), 
LGlo61440 = global_max_pool2D_layer([[[[1.7819], [1.0447]], [[1.5055], [1.4668]]]], Glo61440), 
LCon95248 = concatenate_layer([Glo61440,[[0.2417, 0.2899, 0.7576]]], 1, Con95248), 
LAve89629 = average_layer([Fla66656,Con95248], Ave89629), 
LMax42393 = maximum_layer([Con31416,Ave89629], Max42393), 
exec_layers([LMax1040,LFla25367,LCon31416,LMas64296,LLea14434,LFla66656,LGlo61440,LCon95248,LAve89629,LMax42393],["Max1040","Fla25367","Con31416","Mas64296","Lea14434","Fla66656","Glo61440","Con95248","Ave89629","Max42393"],Max42393,"Max42393")

Actual (Unparsed): [[1.8129000, 1.0118000, 0.7305500, 1.2140500]]

Expected (Unparsed): [[1.8129,1.0118,0.73055,1.21405]]

Actual:   [[1.8129, 1.0118, 0.7306, 1.2141]]

Expected: [[1.8129, 1.0118, 0.7306, 1.2141]]