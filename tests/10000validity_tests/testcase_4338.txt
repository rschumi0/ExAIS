import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Ave54416 = tf.keras.layers.Input(shape=([1, 1]))
in1Ave54416 = tf.keras.layers.Input(shape=([1, 1]))
in0Con99253 = tf.keras.layers.Input(shape=([9, 5, 2]))
in0Dot75290 = tf.keras.layers.Input(shape=([3, 2]))
in1Dot75290 = tf.keras.layers.Input(shape=([3, 2]))
in0Glo91623 = tf.keras.layers.Input(shape=([2, 2, 1]))
in0Con49152 = tf.keras.layers.Input(shape=([8]))
in0Con51050 = tf.keras.layers.Input(shape=([9, 5, 2]))
in0Sub40656 = tf.keras.layers.Input(shape=([3, 3, 3]))
in1Sub40656 = tf.keras.layers.Input(shape=([3, 3, 3]))

Ave54416 = keras.layers.Average(name = 'Ave54416', )([in0Ave54416,in1Ave54416])
Res5391 = keras.layers.Reshape((1, 1, 1), name = 'Res5391', )(Ave54416)
Zer54498 = keras.layers.ZeroPadding2D(padding=((8, 0), (4, 0)), name = 'Zer54498', )(Res5391)
Con99253 = keras.layers.Concatenate(axis=3, name = 'Con99253', )([Zer54498,in0Con99253])
Dot75290 = keras.layers.Dot(axes=(2, 2), name = 'Dot75290', )([in0Dot75290,in1Dot75290])
Fla41473 = keras.layers.Flatten(name = 'Fla41473', )(Dot75290)
Glo91623 = keras.layers.GlobalMaxPool2D(name = 'Glo91623', )(in0Glo91623)
Con49152 = keras.layers.Concatenate(axis=1, name = 'Con49152', )([Glo91623,in0Con49152])
Ave87622 = keras.layers.Average(name = 'Ave87622', )([Fla41473,Con49152])
Res15293 = keras.layers.Reshape((9, 1), name = 'Res15293', )(Ave87622)
Res26753 = keras.layers.Reshape((9, 1, 1), name = 'Res26753', )(Res15293)
Zer36736 = keras.layers.ZeroPadding2D(padding=((0, 0), (4, 0)), name = 'Zer36736', )(Res26753)
Con51050 = keras.layers.Concatenate(axis=3, name = 'Con51050', )([Zer36736,in0Con51050])
Sub40656 = keras.layers.Subtract(name = 'Sub40656', )([in0Sub40656,in1Sub40656])
Zer36390 = keras.layers.ZeroPadding2D(padding=((6, 0), (2, 0)), name = 'Zer36390', )(Sub40656)
Sub67984 = keras.layers.Subtract(name = 'Sub67984', )([Con51050,Zer36390])
Mul50550 = keras.layers.Multiply(name = 'Mul50550', )([Con99253,Sub67984])
model = tf.keras.models.Model(inputs=[in0Ave54416,in1Ave54416,in0Con99253,in0Dot75290,in1Dot75290,in0Glo91623,in0Con49152,in0Con51050,in0Sub40656,in1Sub40656], outputs=Mul50550)
in0Ave54416 = tf.constant([[[0.591]]])
in1Ave54416 = tf.constant([[[0.5151]]])
in0Con99253 = tf.constant([[[[0.8195, 0.2242], [0.0754, 0.7063], [0.8131, 0.1277], [0.3038, 0.1379], [0.7793, 0.4043]], [[0.1911, 0.0694], [0.0024, 0.7876], [0.1882, 0.1794], [0.1725, 0.3993], [0.1706, 0.4747]], [[0.5245, 0.8411], [0.1448, 0.7179], [0.1932, 0.5099], [0.0905, 0.5722], [0.8182, 0.4761]], [[0.1268, 0.3054], [0.5894, 0.6806], [0.6757, 0.7649], [0.9939, 0.7847], [0.1967, 0.8656]], [[0.4992, 0.7367], [0.363, 0.017], [0.2844, 0.0061], [0.2624, 0.7559], [0.9208, 0.4827]], [[0.3165, 0.3482], [0.5934, 0.235], [0.1345, 0.2774], [0.0542, 0.6814], [0.445, 0.3465]], [[0.0033, 0.2388], [0.5792, 0.586], [0.0043, 0.1827], [0.7226, 0.2814], [0.3579, 0.2785]], [[0.2937, 0.2153], [0.5829, 0.7231], [0.3627, 0.6493], [0.2806, 0.0781], [0.9797, 0.6657]], [[0.1975, 0.1635], [0.6472, 0.2337], [0.2432, 0.3368], [0.9407, 0.7684], [0.0658, 0.1862]]]])
in0Dot75290 = tf.constant([[[0.1668, 0.8809], [0.0618, 0.6637], [0.7946, 0.9037]]])
in1Dot75290 = tf.constant([[[0.5696, 0.4269], [0.0088, 0.2193], [0.6802, 0.4885]]])
in0Glo91623 = tf.constant([[[[1.2173], [1.4288]], [[1.8487], [1.8055]]]])
in0Con49152 = tf.constant([[0.7246, 0.0697, 0.4507, 0.7747, 0.0101, 0.3536, 0.848, 0.976]])
in0Con51050 = tf.constant([[[[0.541, 0.6874], [0.4529, 0.0005], [0.8433, 0.2053], [0.7843, 0.5934], [0.0486, 0.3249]], [[0.1433, 0.7285], [0.8048, 0.2381], [0.5301, 0.1105], [0.8842, 0.1464], [0.1672, 0.7194]], [[0.9886, 0.8013], [0.3764, 0.3895], [0.0832, 0.7394], [0.6491, 0.2664], [0.7788, 0.5186]], [[0.5159, 0.5677], [0.1774, 0.79], [0.7916, 0.8049], [0.8979, 0.226], [0.653, 0.5129]], [[0.7069, 0.1646], [0.794, 0.5762], [0.2924, 0.3279], [0.5934, 0.4408], [0.2416, 0.1248]], [[0.8296, 0.8597], [0.2077, 0.8599], [0.9825, 0.3287], [0.5853, 0.6331], [0.5724, 0.0423]], [[0.7536, 0.8395], [0.3042, 0.0208], [0.0901, 0.9561], [0.0091, 0.0452], [0.5116, 0.736]], [[0.5039, 0.1693], [0.2562, 0.0226], [0.5268, 0.8779], [0.9835, 0.1431], [0.8495, 0.4053]], [[0.0429, 0.2433], [0.5132, 0.3377], [0.9338, 0.9856], [0.8934, 0.385], [0.5669, 0.7493]]]])
in0Sub40656 = tf.constant([[[[0.9509, 0.4096, 0.9077], [0.0547, 0.5371, 0.4072], [0.6224, 0.5712, 0.5085]], [[0.9584, 0.1933, 0.7202], [0.1091, 0.5441, 0.6533], [0.2245, 0.1582, 0.4018]], [[0.0812, 0.6995, 0.8314], [0.1108, 0.4327, 0.5325], [0.6267, 0.4051, 0.5761]]]])
in1Sub40656 = tf.constant([[[[0.2932, 0.9008, 0.1635], [0.8124, 0.0555, 0.8751], [0.6841, 0.7579, 0.3728]], [[0.9453, 0.1553, 0.9727], [0.1579, 0.4549, 0.7043], [0.1301, 0.3905, 0.8352]], [[0.5247, 0.8374, 0.3972], [0.1615, 0.3649, 0.444], [0.4342, 0.7221, 0.0901]]]])
print (np.array2string(model.predict([in0Ave54416,in1Ave54416,in0Con99253,in0Dot75290,in1Dot75290,in0Glo91623,in0Con49152,in0Con51050,in0Sub40656,in1Sub40656],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Mul50550.png')

LAve54416 = average_layer([[[[0.591]]], [[[0.5151]]]], Ave54416), 
LRes5391 = reshape_layer(Ave54416, [1, 1, 1], Res5391), 
LZer54498 = zero_padding2D_layer(Res5391, 8, 0, 4, 0, Zer54498), 
LCon99253 = concatenate_layer([Zer54498,[[[[0.8195, 0.2242], [0.0754, 0.7063], [0.8131, 0.1277], [0.3038, 0.1379], [0.7793, 0.4043]], [[0.1911, 0.0694], [0.0024, 0.7876], [0.1882, 0.1794], [0.1725, 0.3993], [0.1706, 0.4747]], [[0.5245, 0.8411], [0.1448, 0.7179], [0.1932, 0.5099], [0.0905, 0.5722], [0.8182, 0.4761]], [[0.1268, 0.3054], [0.5894, 0.6806], [0.6757, 0.7649], [0.9939, 0.7847], [0.1967, 0.8656]], [[0.4992, 0.7367], [0.363, 0.017], [0.2844, 0.0061], [0.2624, 0.7559], [0.9208, 0.4827]], [[0.3165, 0.3482], [0.5934, 0.235], [0.1345, 0.2774], [0.0542, 0.6814], [0.445, 0.3465]], [[0.0033, 0.2388], [0.5792, 0.586], [0.0043, 0.1827], [0.7226, 0.2814], [0.3579, 0.2785]], [[0.2937, 0.2153], [0.5829, 0.7231], [0.3627, 0.6493], [0.2806, 0.0781], [0.9797, 0.6657]], [[0.1975, 0.1635], [0.6472, 0.2337], [0.2432, 0.3368], [0.9407, 0.7684], [0.0658, 0.1862]]]]], 3, Con99253), 
LDot75290 = dot_layer([[[0.1668, 0.8809], [0.0618, 0.6637], [0.7946, 0.9037]]], [[[0.5696, 0.4269], [0.0088, 0.2193], [0.6802, 0.4885]]], 2, 2, Dot75290), 
LFla41473 = flatten_layer(Dot75290, Fla41473), 
LGlo91623 = global_max_pool2D_layer([[[[1.2173], [1.4288]], [[1.8487], [1.8055]]]], Glo91623), 
LCon49152 = concatenate_layer([Glo91623,[[0.7246, 0.0697, 0.4507, 0.7747, 0.0101, 0.3536, 0.848, 0.976]]], 1, Con49152), 
LAve87622 = average_layer([Fla41473,Con49152], Ave87622), 
LRes15293 = reshape_layer(Ave87622, [9, 1], Res15293), 
LRes26753 = reshape_layer(Res15293, [9, 1, 1], Res26753), 
LZer36736 = zero_padding2D_layer(Res26753, 0, 0, 4, 0, Zer36736), 
LCon51050 = concatenate_layer([Zer36736,[[[[0.541, 0.6874], [0.4529, 0.0005], [0.8433, 0.2053], [0.7843, 0.5934], [0.0486, 0.3249]], [[0.1433, 0.7285], [0.8048, 0.2381], [0.5301, 0.1105], [0.8842, 0.1464], [0.1672, 0.7194]], [[0.9886, 0.8013], [0.3764, 0.3895], [0.0832, 0.7394], [0.6491, 0.2664], [0.7788, 0.5186]], [[0.5159, 0.5677], [0.1774, 0.79], [0.7916, 0.8049], [0.8979, 0.226], [0.653, 0.5129]], [[0.7069, 0.1646], [0.794, 0.5762], [0.2924, 0.3279], [0.5934, 0.4408], [0.2416, 0.1248]], [[0.8296, 0.8597], [0.2077, 0.8599], [0.9825, 0.3287], [0.5853, 0.6331], [0.5724, 0.0423]], [[0.7536, 0.8395], [0.3042, 0.0208], [0.0901, 0.9561], [0.0091, 0.0452], [0.5116, 0.736]], [[0.5039, 0.1693], [0.2562, 0.0226], [0.5268, 0.8779], [0.9835, 0.1431], [0.8495, 0.4053]], [[0.0429, 0.2433], [0.5132, 0.3377], [0.9338, 0.9856], [0.8934, 0.385], [0.5669, 0.7493]]]]], 3, Con51050), 
LSub40656 = subtract_layer([[[[0.9509, 0.4096, 0.9077], [0.0547, 0.5371, 0.4072], [0.6224, 0.5712, 0.5085]], [[0.9584, 0.1933, 0.7202], [0.1091, 0.5441, 0.6533], [0.2245, 0.1582, 0.4018]], [[0.0812, 0.6995, 0.8314], [0.1108, 0.4327, 0.5325], [0.6267, 0.4051, 0.5761]]]], [[[[0.2932, 0.9008, 0.1635], [0.8124, 0.0555, 0.8751], [0.6841, 0.7579, 0.3728]], [[0.9453, 0.1553, 0.9727], [0.1579, 0.4549, 0.7043], [0.1301, 0.3905, 0.8352]], [[0.5247, 0.8374, 0.3972], [0.1615, 0.3649, 0.444], [0.4342, 0.7221, 0.0901]]]], Sub40656), 
LZer36390 = zero_padding2D_layer(Sub40656, 6, 0, 2, 0, Zer36390), 
LSub67984 = subtract_layer(Con51050,Zer36390, Sub67984), 
LMul50550 = multiply_layer([Con99253,Sub67984], Mul50550), 
exec_layers([LAve54416,LRes5391,LZer54498,LCon99253,LDot75290,LFla41473,LGlo91623,LCon49152,LAve87622,LRes15293,LRes26753,LZer36736,LCon51050,LSub40656,LZer36390,LSub67984,LMul50550],["Ave54416","Res5391","Zer54498","Con99253","Dot75290","Fla41473","Glo91623","Con49152","Ave87622","Res15293","Res26753","Zer36736","Con51050","Sub40656","Zer36390","Sub67984","Mul50550"],Mul50550,"Mul50550")

Actual (Unparsed): [[[[0.0000000, 0.4433495, 0.1541151], [0.0000000, 0.0341487, 0.0003532], [0.0000000, 0.6856872, 0.0262168], [0.0000000, 0.2382703, 0.0818299], [0.0000000, 0.0378740, 0.1313571]], [[0.0000000, 0.0273846, 0.0505579], [0.0000000, 0.0019315, 0.1875276], [0.0000000, 0.0997648, 0.0198237], [0.0000000, 0.1525245, 0.0584575], [0.0000000, 0.0285243, 0.3414992]], [[0.0000000, 0.5185207, 0.6739734], [0.0000000, 0.0545027, 0.2796220], [0.0000000, 0.0160742, 0.3770201], [0.0000000, 0.0587435, 0.1524341], [0.0000000, 0.6372142, 0.2469055]], [[0.0000000, 0.0654161, 0.1733756], [0.0000000, 0.1045596, 0.5376740], [0.0000000, 0.5348841, 0.6156680], [0.0000000, 0.8924228, 0.1773422], [0.0000000, 0.1284451, 0.4439662]], [[0.0000000, 0.3528845, 0.1212608], [0.0000000, 0.2882220, 0.0097954], [0.0000000, 0.0831586, 0.0020002], [0.0000000, 0.1557082, 0.3332007], [0.0000000, 0.2224653, 0.0602410]], [[0.0000000, 0.2625684, 0.2993475], [0.0000000, 0.1232492, 0.2020765], [0.0000000, 0.1321462, 0.0911814], [0.0000000, 0.0317233, 0.4313943], [0.0000000, 0.2547180, 0.0146570]], [[0.0000000, 0.0024869, 0.2004726], [0.0000000, 0.1761926, 0.0121888], [-0.0000000, 0.0024996, 0.0387141], [0.0000000, -0.3414285, 0.1443863], [0.0000000, 0.2499216, 0.1671835]], [[0.0000000, 0.1479954, 0.0364503], [0.0000000, 0.1493390, 0.0163421], [-0.0000000, 0.1772877, 0.7339687], [0.0000000, 0.2509406, 0.0151592], [0.0000000, 1.0598395, 0.5583226]], [[0.0000000, 0.0084728, 0.0397795], [0.0000000, 0.3321430, 0.0789205], [0.0000000, 0.2606374, 0.1857115], [0.0000000, 0.7766419, 0.2278306], [0.4349585, 0.0581606, 0.0490265]]]]

Expected (Unparsed): [[[[0,0.4433495,0.15411508000000002],[0,0.03414866,0.00035315000000000005],[0,0.6856872300000001,0.026216810000000004],[0,0.23827034,0.08182986],[0.0,0.037873979999999995,0.13135707000000002]],[[0,0.02738463,0.0505579],[0,0.0019315199999999997,0.18752756],[0,0.09976482,0.0198237],[0,0.15252449999999998,0.05845752],[0.0,0.02852432,0.34149918]],[[0,0.5185207,0.67397343],[0,0.054502720000000004,0.27962205],[0,0.01607424,0.37702006],[0,0.05874355,0.15243408000000003],[0.0,0.6372141600000001,0.24690546]],[[0,0.06541612,0.17337558],[0,0.10455956000000001,0.537674],[0,0.53488412,0.6156680099999999],[0,0.89242281,0.1773422],[0.0,0.1284451,0.44396624]],[[0,0.35288447999999994,0.12126082],[0,0.288222,0.009795400000000001],[0,0.08315855999999999,0.00200019],[0,0.15570816,0.33320072],[0.0,0.22246528,0.060240959999999996]],[[0,0.2625684,0.29934754],[0,0.12324918,0.2020765],[0,0.13214625000000002,0.09118137999999999],[0,0.03172326,0.43139434],[0.0,0.254718,0.014656949999999998]],[[0,0.0024868800000000003,0.20047260000000003],[0,0.17619264000000004,0.012188799999999998],[-0.0,0.0024995900000000003,0.03871413],[0.0,-0.3414285,0.14438634],[0.0,0.24992157,0.16718355000000004]],[[0,0.14799543,0.03645029],[0,0.14933897999999998,0.01634206],[-0.0,0.17728776000000002,0.73396872],[0.0,0.25094058,0.015159210000000005],[0.0,1.05983946,0.55832259]],[[0,0.008472750000000001,0.03977955],[0,0.33214304,0.07892049],[0.0,0.26063743999999994,0.18571152],[0.0,0.77664192,0.22783060000000002],[0.4349584419142499,0.05816061999999999,0.04902646000000001]]]]

Actual:   [[[[0, 0.4434, 0.1542], [0, 0.0342, 0.0004], [0, 0.6857, 0.0263], [0, 0.2383, 0.0819], [0, 0.0379, 0.1314]], [[0, 0.0274, 0.0506], [0, 0.002, 0.1876], [0, 0.0998, 0.0199], [0, 0.1526, 0.0585], [0, 0.0286, 0.3415]], [[0, 0.5186, 0.674], [0, 0.0546, 0.2797], [0, 0.0161, 0.3771], [0, 0.0588, 0.1525], [0, 0.6373, 0.247]], [[0, 0.0655, 0.1734], [0, 0.1046, 0.5377], [0, 0.5349, 0.6157], [0, 0.8925, 0.1774], [0, 0.1285, 0.444]], [[0, 0.3529, 0.1213], [0, 0.2883, 0.0098], [0, 0.0832, 0.0021], [0, 0.1558, 0.3333], [0, 0.2225, 0.0603]], [[0, 0.2626, 0.2994], [0, 0.1233, 0.2021], [0, 0.1322, 0.0912], [0, 0.0318, 0.4314], [0, 0.2548, 0.0147]], [[0, 0.0025, 0.2005], [0, 0.1762, 0.0122], [-0, 0.0025, 0.0388], [0, -0.3414, 0.1444], [0, 0.25, 0.1672]], [[0, 0.148, 0.0365], [0, 0.1494, 0.0164], [-0, 0.1773, 0.734], [0, 0.251, 0.0152], [0, 1.0599, 0.5584]], [[0, 0.0085, 0.0398], [0, 0.3322, 0.079], [0, 0.2607, 0.1858], [0, 0.7767, 0.2279], [0.435, 0.0582, 0.0491]]]]

Expected: [[[[0, 0.4434, 0.1542], [0, 0.0342, 0.0004], [0, 0.6857, 0.0263], [0, 0.2383, 0.0819], [0, 0.0379, 0.1314]], [[0, 0.0274, 0.0506], [0, 0.002, 0.1876], [0, 0.0998, 0.0199], [0, 0.1526, 0.0585], [0, 0.0286, 0.3415]], [[0, 0.5186, 0.674], [0, 0.0546, 0.2797], [0, 0.0161, 0.3771], [0, 0.0588, 0.1525], [0, 0.6373, 0.247]], [[0, 0.0655, 0.1734], [0, 0.1046, 0.5377], [0, 0.5349, 0.6157], [0, 0.8925, 0.1774], [0, 0.1285, 0.444]], [[0, 0.3529, 0.1213], [0, 0.2883, 0.0098], [0, 0.0832, 0.0021], [0, 0.1558, 0.3333], [0, 0.2225, 0.0603]], [[0, 0.2626, 0.2994], [0, 0.1233, 0.2021], [0, 0.1322, 0.0912], [0, 0.0318, 0.4314], [0, 0.2548, 0.0147]], [[0, 0.0025, 0.2005], [0, 0.1762, 0.0122], [-0, 0.0025, 0.0388], [0, -0.3414, 0.1444], [0, 0.25, 0.1672]], [[0, 0.148, 0.0365], [0, 0.1494, 0.0164], [-0, 0.1773, 0.734], [0, 0.251, 0.0152], [0, 1.0599, 0.5584]], [[0, 0.0085, 0.0398], [0, 0.3322, 0.079], [0, 0.2607, 0.1858], [0, 0.7767, 0.2279], [0.435, 0.0582, 0.0491]]]]