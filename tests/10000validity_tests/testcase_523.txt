import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Min31336 = tf.keras.layers.Input(shape=([1, 1, 2]))
in1Min31336 = tf.keras.layers.Input(shape=([1, 1, 2]))

Min31336 = keras.layers.Minimum(name = 'Min31336', )([in0Min31336,in1Min31336])
Bat23654 = keras.layers.BatchNormalization(axis=1, epsilon=0.9325968194543978,  name = 'Bat23654', )(Min31336)
Res11215 = keras.layers.Reshape((1, 1, 2, 1), name = 'Res11215', )(Bat23654)
Up_730 = keras.layers.UpSampling3D(size=(1, 1, 2), name = 'Up_730', )(Res11215)
Res50006 = keras.layers.Reshape((1, 1, 4), name = 'Res50006', )(Up_730)
Res58355 = keras.layers.Reshape((1, 4), name = 'Res58355', )(Res50006)
GRU72235 = keras.layers.GRU(3,reset_after=True, recurrent_activation='sigmoid', name = 'GRU72235', )(Res58355)
Res32679 = keras.layers.Reshape((3, 1), name = 'Res32679', )(GRU72235)
Sep79382 = keras.layers.SeparableConv1D(4, (2),strides=(3), padding='same', name = 'Sep79382', )(Res32679)
model = tf.keras.models.Model(inputs=[in0Min31336,in1Min31336], outputs=Sep79382)
w = model.get_layer('Bat23654').get_weights() 
w[0] = np.array([0.6122])
w[1] = np.array([0.2673])
w[2] = np.array([0.969])
w[3] = np.array([0.6307])
model.get_layer('Bat23654').set_weights(w) 
w = model.get_layer('GRU72235').get_weights() 
w[0] = np.array([[7, 1, 10, 8, 8, 1, 3, 5, 5], [2, 6, 4, 5, 9, 5, 7, 10, 8], [4, 6, 9, 10, 9, 4, 6, 3, 7], [3, 3, 8, 3, 5, 8, 8, 6, 2]])
w[1] = np.array([[4, 10, 6, 4, 2, 5, 4, 4, 2], [9, 3, 2, 4, 3, 6, 5, 5, 10], [2, 3, 5, 2, 8, 6, 10, 9, 3]])
w[2] = np.array([[2, 6, 1, 9, 9, 8, 9, 7, 5], [9, 7, 6, 9, 3, 1, 8, 10, 7]])
model.get_layer('GRU72235').set_weights(w) 
w = model.get_layer('Sep79382').get_weights() 
w[0] = np.array([[[0.9473]], [[0.5045]]])
w[1] = np.array([[[0.4236, 0.9048, 0.4653, 0.9444]]])
w[2] = np.array([0, 0, 0, 0])
model.get_layer('Sep79382').set_weights(w) 
in0Min31336 = tf.constant([[[[0.0017, 0.9248]]]])
in1Min31336 = tf.constant([[[[0.2105, 0.5546]]]])
print (np.array2string(model.predict([in0Min31336,in1Min31336],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Sep79382.png')

LMin31336 = minimum_layer([[[[[0.0017, 0.9248]]]], [[[[0.2105, 0.5546]]]]], Min31336), 
LBat23654 = batch_normalization_layer(Min31336, 1, 0.9325968194543978, [0.6122], [0.2673], [0.969], [0.6307], Bat23654), 
LRes11215 = reshape_layer(Bat23654, [1, 1, 2, 1], Res11215), 
LUp_730 = up_sampling3D_layer(Res11215, 1, 1, 2, Up_730), 
LRes50006 = reshape_layer(Up_730, [1, 1, 4], Res50006), 
LRes58355 = reshape_layer(Res50006, [1, 4], Res58355), 
LGRU72235 = gru_layer(Res58355,[[7, 1, 10, 8, 8, 1, 3, 5, 5], [2, 6, 4, 5, 9, 5, 7, 10, 8], [4, 6, 9, 10, 9, 4, 6, 3, 7], [3, 3, 8, 3, 5, 8, 8, 6, 2]],[[4, 10, 6, 4, 2, 5, 4, 4, 2], [9, 3, 2, 4, 3, 6, 5, 5, 10], [2, 3, 5, 2, 8, 6, 10, 9, 3]],[[2, 6, 1, 9, 9, 8, 9, 7, 5], [9, 7, 6, 9, 3, 1, 8, 10, 7]], true, GRU72235), 
LRes32679 = reshape_layer(GRU72235, [3, 1], Res32679), 
LSep79382 = separable_conv1D_layer(Res32679, 2,[[[[0.9473]], [[0.5045]]],[[[0.4236, 0.9048, 0.4653, 0.9444]]]],[0, 0, 0, 0], 3, true, Sep79382), 
exec_layers([LMin31336,LBat23654,LRes11215,LUp_730,LRes50006,LRes58355,LGRU72235,LRes32679,LSep79382],["Min31336","Bat23654","Res11215","Up_730","Res50006","Res58355","GRU72235","Res32679","Sep79382"],Sep79382,"Sep79382")

Actual (Unparsed): [[[0.0000285, 0.0000609, 0.0000313, 0.0000635]]]

Expected (Unparsed): [[[2.849064870244894e-5,6.085537994800709e-5,3.129532304355404e-5,6.351881169639467e-5]]]

Actual:   [[[0.0001, 0.0001, 0.0001, 0.0001]]]

Expected: [[[0.0001, 0.0001, 0.0001, 0.0001]]]