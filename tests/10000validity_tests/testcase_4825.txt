import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Max29871 = tf.keras.layers.Input(shape=([2, 1, 2, 2]))
in1Max29871 = tf.keras.layers.Input(shape=([2, 1, 2, 2]))
in0Glo41016 = tf.keras.layers.Input(shape=([2, 2]))
in0Con98765 = tf.keras.layers.Input(shape=([4, 3]))

Max29871 = keras.layers.Maximum(name = 'Max29871', )([in0Max29871,in1Max29871])
Res37416 = keras.layers.Reshape((2, 1, 4), name = 'Res37416', )(Max29871)
Res69710 = keras.layers.Reshape((2, 4), name = 'Res69710', )(Res37416)
Up_61016 = keras.layers.UpSampling1D(size=(2), name = 'Up_61016', )(Res69710)
Glo41016 = keras.layers.GlobalMaxPool1D(name = 'Glo41016', )(in0Glo41016)
Res36373 = keras.layers.Reshape((2, 1), name = 'Res36373', )(Glo41016)
Sep6635 = keras.layers.SeparableConv1D(4, (2),strides=(1), padding='valid', name = 'Sep6635', )(Res36373)
Den96910 = keras.layers.Dense(1,name = 'Den96910', )(Sep6635)
Zer99691 = keras.layers.ZeroPadding1D(padding=((3, 0)), name = 'Zer99691', )(Den96910)
Con98765 = keras.layers.Concatenate(axis=2, name = 'Con98765', )([Zer99691,in0Con98765])
Mul46366 = keras.layers.Multiply(name = 'Mul46366', )([Up_61016,Con98765])
Cro67017 = keras.layers.Cropping1D(cropping=((0, 0)), name = 'Cro67017', )(Mul46366)
model = tf.keras.models.Model(inputs=[in0Max29871,in1Max29871,in0Glo41016,in0Con98765], outputs=Cro67017)
w = model.get_layer('Sep6635').get_weights() 
w[0] = np.array([[[0.6345]], [[0.7826]]])
w[1] = np.array([[[0.431, 0.6987, 0.4042, 0.4197]]])
w[2] = np.array([0, 0, 0, 0])
model.get_layer('Sep6635').set_weights(w) 
w = model.get_layer('Den96910').get_weights() 
w[0] = np.array([[0.6315], [0.7463], [0.1546], [0.422]])
w[1] = np.array([0.7599])
model.get_layer('Den96910').set_weights(w) 
in0Max29871 = tf.constant([[[[[0.9383, 0.4915], [0.6459, 0.8817]]], [[[0.7949, 0.2998], [0.5682, 0.2843]]]]])
in1Max29871 = tf.constant([[[[[0.9313, 0.1838], [0.0017, 0.3668]]], [[[0.2787, 0.7702], [0.0245, 0.944]]]]])
in0Glo41016 = tf.constant([[[1.8363, 1.5969], [1.9638, 1.1232]]])
in0Con98765 = tf.constant([[[0.9554, 0.2848, 0.3176], [0.2897, 0.0194, 0.5392], [0.9821, 0.9072, 0.6509], [0.6004, 0.0572, 0.8648]]])
print (np.array2string(model.predict([in0Max29871,in1Max29871,in0Glo41016,in0Con98765],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Cro67017.png')

LMax29871 = maximum_layer([[[[[[0.9383, 0.4915], [0.6459, 0.8817]]], [[[0.7949, 0.2998], [0.5682, 0.2843]]]]], [[[[[0.9313, 0.1838], [0.0017, 0.3668]]], [[[0.2787, 0.7702], [0.0245, 0.944]]]]]], Max29871), 
LRes37416 = reshape_layer(Max29871, [2, 1, 4], Res37416), 
LRes69710 = reshape_layer(Res37416, [2, 4], Res69710), 
LUp_61016 = up_sampling1D_layer(Res69710, 2, Up_61016), 
LGlo41016 = global_max_pool1D_layer([[[1.8363, 1.5969], [1.9638, 1.1232]]], Glo41016), 
LRes36373 = reshape_layer(Glo41016, [2, 1], Res36373), 
LSep6635 = separable_conv1D_layer(Res36373, 2,[[[[0.6345]], [[0.7826]]],[[[0.431, 0.6987, 0.4042, 0.4197]]]],[0, 0, 0, 0], 1, false, Sep6635), 
LDen96910 = dense_layer(Sep6635, [[0.6315], [0.7463], [0.1546], [0.422]],[0.7599], Den96910), 
LZer99691 = zero_padding1D_layer(Den96910, 3, 0, Zer99691), 
LCon98765 = concatenate_layer([Zer99691,[[[0.9554, 0.2848, 0.3176], [0.2897, 0.0194, 0.5392], [0.9821, 0.9072, 0.6509], [0.6004, 0.0572, 0.8648]]]], 2, Con98765), 
LMul46366 = multiply_layer([Up_61016,Con98765], Mul46366), 
LCro67017 = cropping1D_layer(Mul46366, 0, 0, Cro67017), 
exec_layers([LMax29871,LRes37416,LRes69710,LUp_61016,LGlo41016,LRes36373,LSep6635,LDen96910,LZer99691,LCon98765,LMul46366,LCro67017],["Max29871","Res37416","Res69710","Up_61016","Glo41016","Res36373","Sep6635","Den96910","Zer99691","Con98765","Mul46366","Cro67017"],Cro67017,"Cro67017")

Actual (Unparsed): [[[0.0000000, 0.4695791, 0.1839523, 0.2800279], [0.0000000, 0.1423875, 0.0125305, 0.4754126], [0.0000000, 0.7564134, 0.5154710, 0.6144496], [2.6538308, 0.4624281, 0.0325010, 0.8163712]]]

Expected (Unparsed): [[[0.0,0.4695791,0.18395232,0.28002792],[0.0,0.14238755,0.01253046,0.47541264000000005],[0.0,0.75641342,0.51547104,0.6144496],[2.6538308301273115,0.46242808,0.03250104,0.8163712]]]

Actual:   [[[0, 0.4696, 0.184, 0.2801], [0, 0.1424, 0.0126, 0.4755], [0, 0.7565, 0.5155, 0.6145], [2.6539, 0.4625, 0.0326, 0.8164]]]

Expected: [[[0, 0.4696, 0.184, 0.2801], [0, 0.1424, 0.0126, 0.4755], [0, 0.7565, 0.5155, 0.6145], [2.6539, 0.4625, 0.0326, 0.8164]]]