import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Cro99385 = tf.keras.layers.Input(shape=([1, 1, 3, 3]))
in0Sub58694 = tf.keras.layers.Input(shape=([2, 2, 3]))
in1Sub58694 = tf.keras.layers.Input(shape=([2, 2, 3]))
in0Per2150 = tf.keras.layers.Input(shape=([2, 3]))
in0Con96989 = tf.keras.layers.Input(shape=([3, 4]))
in0Mul23249 = tf.keras.layers.Input(shape=([2, 1, 2]))
in1Mul23249 = tf.keras.layers.Input(shape=([2, 1, 2]))

Cro99385 = keras.layers.Cropping3D(cropping=((0, 0), (0, 0), (2, 0)), name = 'Cro99385', )(in0Cro99385)
Res50026 = keras.layers.Reshape((1, 1, 3), name = 'Res50026', )(Cro99385)
Zer86594 = keras.layers.ZeroPadding2D(padding=((1, 0), (1, 0)), name = 'Zer86594', )(Res50026)
Sub58694 = keras.layers.Subtract(name = 'Sub58694', )([in0Sub58694,in1Sub58694])
Mul62649 = keras.layers.Multiply(name = 'Mul62649', )([Zer86594,Sub58694])
Res91515 = keras.layers.Reshape((2, 6), name = 'Res91515', )(Mul62649)
Zer29048 = keras.layers.ZeroPadding1D(padding=((1, 0)), name = 'Zer29048', )(Res91515)
Per2150 = keras.layers.Permute((2,1), name = 'Per2150',)(in0Per2150)
Con96989 = keras.layers.Concatenate(axis=2, name = 'Con96989', )([Per2150,in0Con96989])
Mul47199 = keras.layers.Multiply(name = 'Mul47199', )([Zer29048,Con96989])
Res95468 = keras.layers.Reshape((3, 6, 1), name = 'Res95468', )(Mul47199)
Res4805 = keras.layers.Reshape((3, 6, 1, 1), name = 'Res4805', )(Res95468)
Zer28309 = keras.layers.ZeroPadding3D(padding=((1, 0), (5, 0), (3, 0)), name = 'Zer28309', )(Res4805)
Mul23249 = keras.layers.Multiply(name = 'Mul23249', )([in0Mul23249,in1Mul23249])
Con1435 = keras.layers.Conv2DTranspose(4, (1, 1),strides=(1, 1), padding='valid', name = 'Con1435', )(Mul23249)
Res86729 = keras.layers.Reshape((2, 1, 4, 1), name = 'Res86729', )(Con1435)
Up_98518 = keras.layers.UpSampling3D(size=(2, 1, 1), name = 'Up_98518', )(Res86729)
Zer73764 = keras.layers.ZeroPadding3D(padding=((0, 0), (10, 0), (0, 0)), name = 'Zer73764', )(Up_98518)
Min72302 = keras.layers.Minimum(name = 'Min72302', )([Zer28309,Zer73764])
model = tf.keras.models.Model(inputs=[in0Cro99385,in0Sub58694,in1Sub58694,in0Per2150,in0Con96989,in0Mul23249,in1Mul23249], outputs=Min72302)
w = model.get_layer('Con1435').get_weights() 
w[0] = np.array([[[[0.0472, 0.3607], [0.4696, 0.4311], [0.2454, 0.299], [0.2931, 0.4633]]]])
w[1] = np.array([0, 0, 0, 0])
model.get_layer('Con1435').set_weights(w) 
in0Cro99385 = tf.constant([[[[[1.5972, 1.0239, 1.4924], [1.8806, 1.0784, 1.4205], [1.5159, 1.1379, 1.585]]]]])
in0Sub58694 = tf.constant([[[[0.7796, 0.1828, 0.2744], [0.4264, 0.4858, 0.3755]], [[0.0707, 0.7301, 0.1803], [0.1765, 0.5433, 0.4029]]]])
in1Sub58694 = tf.constant([[[[0.5622, 0.8125, 0.0681], [0.081, 0.9108, 0.4833]], [[0.402, 0.2048, 0.026], [0.1033, 0.7327, 0.8688]]]])
in0Per2150 = tf.constant([[[1.4466, 1.5872, 1.2496], [1.0294, 1.6057, 1.8102]]])
in0Con96989 = tf.constant([[[0.9273, 0.4107, 0.7136, 0.2854], [0.5657, 0.1498, 0.2072, 0.5793], [0.1866, 0.616, 0.1081, 0.716]]])
in0Mul23249 = tf.constant([[[[0.2364, 0.9806]], [[0.0575, 0.7879]]]])
in1Mul23249 = tf.constant([[[[0.3584, 0.7527]], [[0.0244, 0.9395]]]])
print (np.array2string(model.predict([in0Cro99385,in0Sub58694,in1Sub58694,in0Per2150,in0Con96989,in0Mul23249,in1Mul23249],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Min72302.png')

LCro99385 = cropping3D_layer([[[[[1.5972, 1.0239, 1.4924], [1.8806, 1.0784, 1.4205], [1.5159, 1.1379, 1.585]]]]], 0, 0, 0, 0, 2, 0, Cro99385), 
LRes50026 = reshape_layer(Cro99385, [1, 1, 3], Res50026), 
LZer86594 = zero_padding2D_layer(Res50026, 1, 0, 1, 0, Zer86594), 
LSub58694 = subtract_layer([[[[0.7796, 0.1828, 0.2744], [0.4264, 0.4858, 0.3755]], [[0.0707, 0.7301, 0.1803], [0.1765, 0.5433, 0.4029]]]], [[[[0.5622, 0.8125, 0.0681], [0.081, 0.9108, 0.4833]], [[0.402, 0.2048, 0.026], [0.1033, 0.7327, 0.8688]]]], Sub58694), 
LMul62649 = multiply_layer([Zer86594,Sub58694], Mul62649), 
LRes91515 = reshape_layer(Mul62649, [2, 6], Res91515), 
LZer29048 = zero_padding1D_layer(Res91515, 1, 0, Zer29048), 
LPer2150 = permute_layer([[[1.4466, 1.5872, 1.2496], [1.0294, 1.6057, 1.8102]]], 2,1, Per2150), 
LCon96989 = concatenate_layer([Per2150,[[[0.9273, 0.4107, 0.7136, 0.2854], [0.5657, 0.1498, 0.2072, 0.5793], [0.1866, 0.616, 0.1081, 0.716]]]], 2, Con96989), 
LMul47199 = multiply_layer([Zer29048,Con96989], Mul47199), 
LRes95468 = reshape_layer(Mul47199, [3, 6, 1], Res95468), 
LRes4805 = reshape_layer(Res95468, [3, 6, 1, 1], Res4805), 
LZer28309 = zero_padding3D_layer(Res4805, 1, 0, 5, 0, 3, 0, Zer28309), 
LMul23249 = multiply_layer([[[[[0.2364, 0.9806]], [[0.0575, 0.7879]]]], [[[[0.3584, 0.7527]], [[0.0244, 0.9395]]]]], Mul23249), 
LCon1435 = conv2D_transpose_layer(Mul23249, 1, 1,[[[[0.0472, 0.3607], [0.4696, 0.4311], [0.2454, 0.299], [0.2931, 0.4633]]]],[0, 0, 0, 0], 1, 1, false, Con1435), 
LRes86729 = reshape_layer(Con1435, [2, 1, 4, 1], Res86729), 
LUp_98518 = up_sampling3D_layer(Res86729, 2, 1, 1, Up_98518), 
LZer73764 = zero_padding3D_layer(Up_98518, 0, 0, 10, 0, 0, 0, Zer73764), 
LMin72302 = minimum_layer([Zer28309,Zer73764], Min72302), 
exec_layers([LCro99385,LRes50026,LZer86594,LSub58694,LMul62649,LRes91515,LZer29048,LPer2150,LCon96989,LMul47199,LRes95468,LRes4805,LZer28309,LMul23249,LCon1435,LRes86729,LUp_98518,LZer73764,LMin72302],["Cro99385","Res50026","Zer86594","Sub58694","Mul62649","Res91515","Zer29048","Per2150","Con96989","Mul47199","Res95468","Res4805","Zer28309","Mul23249","Con1435","Res86729","Up_98518","Zer73764","Min72302"],Min72302,"Min72302")

Actual (Unparsed): [[[[[0.0000000], [0.0000000], [0.0000000], [0.0000000]], [[0.0000000], [0.0000000], [0.0000000], [0.0000000]], [[0.0000000], [0.0000000], [0.0000000], [0.0000000]], [[0.0000000], [0.0000000], [0.0000000], [0.0000000]], [[0.0000000], [0.0000000], [0.0000000], [0.0000000]], [[0.0000000], [0.0000000], [0.0000000], [0.0000000]], [[0.0000000], [0.0000000], [0.0000000], [0.0000000]], [[0.0000000], [0.0000000], [0.0000000], [0.0000000]], [[0.0000000], [0.0000000], [0.0000000], [0.0000000]], [[0.0000000], [0.0000000], [0.0000000], [0.0000000]], [[0.0000000], [0.0000000], [0.0000000], [0.0000000]]], [[[0.0000000], [0.0000000], [0.0000000], [0.0000000]], [[0.0000000], [0.0000000], [0.0000000], [0.0000000]], [[0.0000000], [0.0000000], [0.0000000], [0.0000000]], [[0.0000000], [0.0000000], [0.0000000], [0.0000000]], [[0.0000000], [0.0000000], [0.0000000], [0.0000000]], [[0.0000000], [0.0000000], [0.0000000], [0.0000000]], [[0.0000000], [0.0000000], [0.0000000], [0.0000000]], [[0.0000000], [0.0000000], [0.0000000], [0.0000000]], [[0.0000000], [0.0000000], [0.0000000], [0.0000000]], [[0.0000000], [0.0000000], [0.0000000], [0.0000000]], [[0.0000000], [0.0000000], [0.0000000], [0.0000000]]], [[[0.0000000], [0.0000000], [0.0000000], [0.0000000]], [[0.0000000], [0.0000000], [0.0000000], [0.0000000]], [[0.0000000], [0.0000000], [0.0000000], [0.0000000]], [[0.0000000], [0.0000000], [0.0000000], [0.0000000]], [[0.0000000], [0.0000000], [0.0000000], [0.0000000]], [[0.0000000], [0.0000000], [0.0000000], [0.0000000]], [[0.0000000], [0.0000000], [0.0000000], [0.0000000]], [[0.0000000], [0.0000000], [0.0000000], [0.0000000]], [[0.0000000], [0.0000000], [0.0000000], [0.0000000]], [[0.0000000], [0.0000000], [0.0000000], [0.0000000]], [[0.0000000], [0.0000000], [0.0000000], [-0.0000000]]], [[[0.0000000], [0.0000000], [0.0000000], [0.0000000]], [[0.0000000], [0.0000000], [0.0000000], [0.0000000]], [[0.0000000], [0.0000000], [0.0000000], [0.0000000]], [[0.0000000], [0.0000000], [0.0000000], [0.0000000]], [[0.0000000], [0.0000000], [0.0000000], [0.0000000]], [[0.0000000], [0.0000000], [0.0000000], [0.0000000]], [[0.0000000], [0.0000000], [0.0000000], [0.0000000]], [[0.0000000], [0.0000000], [0.0000000], [0.0000000]], [[0.0000000], [0.0000000], [0.0000000], [0.0000000]], [[0.0000000], [0.0000000], [0.0000000], [-0.0232975]], [[0.0000000], [0.0000000], [0.0000000], [-0.5287313]]]]]

Expected (Unparsed): [[[[[0],[0],[0],[0]],[[0],[0],[0],[0]],[[0],[0],[0],[0]],[[0],[0],[0],[0]],[[0],[0],[0],[0]],[[0],[0],[0],[0]],[[0],[0],[0],[0]],[[0],[0],[0],[0]],[[0],[0],[0],[0]],[[0],[0],[0],[0]],[[0],[0],[0],[0]]],[[[0],[0],[0],[0]],[[0],[0],[0],[0]],[[0],[0],[0],[0]],[[0],[0],[0],[0]],[[0],[0],[0],[0]],[[0],[0],[0],[0.0]],[[0],[0],[0],[0.0]],[[0],[0],[0],[0.0]],[[0],[0],[0],[0.0]],[[0],[0],[0],[0.0]],[[0],[0],[0],[0.0]]],[[[0],[0],[0],[0]],[[0],[0],[0],[0]],[[0],[0],[0],[0]],[[0],[0],[0],[0]],[[0],[0],[0],[0]],[[0],[0],[0],[0.0]],[[0],[0],[0],[-0.0]],[[0],[0],[0],[0.0]],[[0],[0],[0],[0.0]],[[0],[0],[0],[-0.0]],[[0],[0],[0],[-0.0]]],[[[0],[0],[0],[0]],[[0],[0],[0],[0]],[[0],[0],[0],[0]],[[0],[0],[0],[0]],[[0],[0],[0],[0]],[[0],[0],[0],[-0.0]],[[0],[0],[0],[0.0]],[[0],[0],[0],[0.0]],[[0],[0],[0],[0]],[[0],[0],[0],[-0.023297523905999998]],[[0],[0],[0],[-0.528731274]]]]]

Actual

Expected