import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Mul971 = tf.keras.layers.Input(shape=([2, 1]))
in1Mul971 = tf.keras.layers.Input(shape=([2, 1]))
in0Con44001 = tf.keras.layers.Input(shape=([2, 2, 1]))
in0Max72315 = tf.keras.layers.Input(shape=([2, 2, 2]))
in1Max72315 = tf.keras.layers.Input(shape=([2, 2, 2]))

Mul971 = keras.layers.Multiply(name = 'Mul971', )([in0Mul971,in1Mul971])
Res56275 = keras.layers.Reshape((2, 1, 1), name = 'Res56275', )(Mul971)
Up_89982 = keras.layers.UpSampling2D(size=(1, 1), name = 'Up_89982', )(Res56275)
Lay10111 = keras.layers.LayerNormalization(axis=1, epsilon=2.6853944156429765, name = 'Lay10111', )(Up_89982)
Zer38952 = keras.layers.ZeroPadding2D(padding=((0, 0), (1, 0)), name = 'Zer38952', )(Lay10111)
Con44001 = keras.layers.Concatenate(axis=3, name = 'Con44001', )([Zer38952,in0Con44001])
Max72315 = keras.layers.Maximum(name = 'Max72315', )([in0Max72315,in1Max72315])
Mul78738 = keras.layers.Multiply(name = 'Mul78738', )([Con44001,Max72315])
Res86373 = keras.layers.Reshape((2, 2, 2, 1), name = 'Res86373', )(Mul78738)
Glo38107 = keras.layers.GlobalAveragePooling3D(name = 'Glo38107', )(Res86373)
Res82285 = keras.layers.Reshape((1, 1), name = 'Res82285', )(Glo38107)
Res83333 = keras.layers.Reshape((1, 1, 1), name = 'Res83333', )(Res82285)
Zer86558 = keras.layers.ZeroPadding2D(padding=((1, 1), (1, 1)), name = 'Zer86558', )(Res83333)
model = tf.keras.models.Model(inputs=[in0Mul971,in1Mul971,in0Con44001,in0Max72315,in1Max72315], outputs=Zer86558)
in0Mul971 = tf.constant([[[0.8062], [0.9363]]])
in1Mul971 = tf.constant([[[0.2375], [0.9907]]])
in0Con44001 = tf.constant([[[[0.8078], [0.0722]], [[0.5075], [0.0179]]]])
in0Max72315 = tf.constant([[[[0.3306, 0.4009], [0.8686, 0.1129]], [[0.2341, 0.1059], [0.0876, 0.2723]]]])
in1Max72315 = tf.constant([[[[0.526, 0.8221], [0.5201, 0.9503]], [[0.0717, 0.2018], [0.5109, 0.8657]]]])
print (np.array2string(model.predict([in0Mul971,in1Mul971,in0Con44001,in0Max72315,in1Max72315],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Zer86558.png')

LMul971 = multiply_layer([[[[0.8062], [0.9363]]], [[[0.2375], [0.9907]]]], Mul971), 
LRes56275 = reshape_layer(Mul971, [2, 1, 1], Res56275), 
LUp_89982 = up_sampling2D_layer(Res56275, 1, 1, Up_89982), 
LLay10111 = layer_normalization_layer(Up_89982, 1, 2.6853944156429765, Lay10111), 
LZer38952 = zero_padding2D_layer(Lay10111, 0, 0, 1, 0, Zer38952), 
LCon44001 = concatenate_layer([Zer38952,[[[[0.8078], [0.0722]], [[0.5075], [0.0179]]]]], 3, Con44001), 
LMax72315 = maximum_layer([[[[[0.3306, 0.4009], [0.8686, 0.1129]], [[0.2341, 0.1059], [0.0876, 0.2723]]]], [[[[0.526, 0.8221], [0.5201, 0.9503]], [[0.0717, 0.2018], [0.5109, 0.8657]]]]], Max72315), 
LMul78738 = multiply_layer([Con44001,Max72315], Mul78738), 
LRes86373 = reshape_layer(Mul78738, [2, 2, 2, 1], Res86373), 
LGlo38107 = global_average_pooling3D_layer(Res86373, Glo38107), 
LRes82285 = reshape_layer(Glo38107, [1, 1], Res82285), 
LRes83333 = reshape_layer(Res82285, [1, 1, 1], Res83333), 
LZer86558 = zero_padding2D_layer(Res83333, 1, 1, 1, 1, Zer86558), 
exec_layers([LMul971,LRes56275,LUp_89982,LLay10111,LZer38952,LCon44001,LMax72315,LMul78738,LRes86373,LGlo38107,LRes82285,LRes83333,LZer86558],["Mul971","Res56275","Up_89982","Lay10111","Zer38952","Con44001","Max72315","Mul78738","Res86373","Glo38107","Res82285","Res83333","Zer86558"],Zer86558,"Zer86558")

Actual (Unparsed): [[[[0.0000000], [0.0000000], [0.0000000]], [[0.0000000], [0.0965283], [0.0000000]], [[0.0000000], [0.0000000], [0.0000000]]]]

Expected (Unparsed): [[[[0],[0],[0]],[[0],[0.09652826477889628],[0]],[[0],[0],[0]]]]

Actual:   [[[[0], [0], [0]], [[0], [0.0966], [0]], [[0], [0], [0]]]]

Expected: [[[[0], [0], [0]], [[0], [0.0966], [0]], [[0], [0], [0]]]]