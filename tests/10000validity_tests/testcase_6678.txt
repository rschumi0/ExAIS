import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Zer83672 = tf.keras.layers.Input(shape=([3, 2, 1, 1]))
in0Ave39963 = tf.keras.layers.Input(shape=([1, 1, 1]))
in1Ave39963 = tf.keras.layers.Input(shape=([1, 1, 1]))
in0Con41617 = tf.keras.layers.Input(shape=([5, 4, 2]))
in0Con73974 = tf.keras.layers.Input(shape=([1, 2, 2]))
in0Max37618 = tf.keras.layers.Input(shape=([2, 1]))
in1Max37618 = tf.keras.layers.Input(shape=([2, 1]))
in0Con94399 = tf.keras.layers.Input(shape=([2, 7]))
in0Con77649 = tf.keras.layers.Input(shape=([5, 4]))

Zer83672 = keras.layers.ZeroPadding3D(padding=((1, 1), (1, 1), (1, 1)), name = 'Zer83672', )(in0Zer83672)
Res18013 = keras.layers.Reshape((5, 4, 3), name = 'Res18013', )(Zer83672)
Ave39963 = keras.layers.Average(name = 'Ave39963', )([in0Ave39963,in1Ave39963])
Zer68750 = keras.layers.ZeroPadding2D(padding=((4, 0), (3, 0)), name = 'Zer68750', )(Ave39963)
Con41617 = keras.layers.Concatenate(axis=3, name = 'Con41617', )([Zer68750,in0Con41617])
Sub34025 = keras.layers.Subtract(name = 'Sub34025', )([Res18013,Con41617])
Res46083 = keras.layers.Reshape((5, 12), name = 'Res46083', )(Sub34025)
Con73974 = keras.layers.Conv2D(4, (1, 2),strides=(1, 1), padding='same', dilation_rate=(1, 1), name = 'Con73974', )(in0Con73974)
Res42233 = keras.layers.Reshape((1, 8), name = 'Res42233', )(Con73974)
Zer38368 = keras.layers.ZeroPadding1D(padding=((1, 0)), name = 'Zer38368', )(Res42233)
Max37618 = keras.layers.Maximum(name = 'Max37618', )([in0Max37618,in1Max37618])
Con94399 = keras.layers.Concatenate(axis=2, name = 'Con94399', )([Max37618,in0Con94399])
Max84671 = keras.layers.Maximum(name = 'Max84671', )([Zer38368,Con94399])
Zer67932 = keras.layers.ZeroPadding1D(padding=((3, 0)), name = 'Zer67932', )(Max84671)
Con77649 = keras.layers.Concatenate(axis=2, name = 'Con77649', )([Zer67932,in0Con77649])
Ave2940 = keras.layers.Average(name = 'Ave2940', )([Res46083,Con77649])
Res53999 = keras.layers.Reshape((5, 12, 1), name = 'Res53999', )(Ave2940)
Res64098 = keras.layers.Reshape((5, 12, 1, 1), name = 'Res64098', )(Res53999)
Glo44481 = keras.layers.GlobalAveragePooling3D(name = 'Glo44481', )(Res64098)
Res6404 = keras.layers.Reshape((1, 1), name = 'Res6404', )(Glo44481)
Res42889 = keras.layers.Reshape((1, 1, 1), name = 'Res42889', )(Res6404)
Glo53773 = keras.layers.GlobalMaxPool2D(name = 'Glo53773', )(Res42889)
model = tf.keras.models.Model(inputs=[in0Zer83672,in0Ave39963,in1Ave39963,in0Con41617,in0Con73974,in0Max37618,in1Max37618,in0Con94399,in0Con77649], outputs=Glo53773)
w = model.get_layer('Con73974').get_weights() 
w[0] = np.array([[[[0.3391, 0.7439, 0.7097, 0.7994], [0.4917, 0.0319, 0.0923, 0.1016]], [[0.39, 0.0314, 0.3398, 0.8163], [0.7829, 0.185, 0.7045, 0.372]]]])
w[1] = np.array([0, 0, 0, 0])
model.get_layer('Con73974').set_weights(w) 
in0Zer83672 = tf.constant([[[[[1.2169]], [[1.0535]]], [[[1.4945]], [[1.078]]], [[[1.9141]], [[1.7407]]]]])
in0Ave39963 = tf.constant([[[[0.1067]]]])
in1Ave39963 = tf.constant([[[[0.7229]]]])
in0Con41617 = tf.constant([[[[0.725, 0.6395], [0.2865, 0.6341], [0.0294, 0.8918], [0.22, 0.1615]], [[0.2001, 0.2324], [0.3319, 0.4586], [0.3687, 0.4445], [0.6122, 0.2439]], [[0.582, 0.8836], [0.7187, 0.4721], [0.0138, 0.1703], [0.4312, 0.9158]], [[0.7135, 0.869], [0.2175, 0.899], [0.9865, 0.1883], [0.4308, 0.8159]], [[0.9823, 0.3771], [0.5278, 0.7221], [0.5737, 0.4159], [0.0924, 0.7281]]]])
in0Con73974 = tf.constant([[[[0.2954, 0.7126], [0.5628, 0.4531]]]])
in0Max37618 = tf.constant([[[0.8393], [0.5741]]])
in1Max37618 = tf.constant([[[0.9396], [0.0588]]])
in0Con94399 = tf.constant([[[0.9685, 0.7671, 0.5289, 0.4764, 0.8715, 0.5292, 0.5784], [0.7852, 0.7949, 0.5848, 0.8102, 0.3715, 0.3812, 0.9501]]])
in0Con77649 = tf.constant([[[0.2791, 0.103, 0.3613, 0.7046], [0.2061, 0.7604, 0.1795, 0.639], [0.7148, 0.8096, 0.7732, 0.6746], [0.7648, 0.7096, 0.5289, 0.0345], [0.9234, 0.1018, 0.1685, 0.544]]])
print (np.array2string(model.predict([in0Zer83672,in0Ave39963,in1Ave39963,in0Con41617,in0Con73974,in0Max37618,in1Max37618,in0Con94399,in0Con77649],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Glo53773.png')

LZer83672 = zero_padding3D_layer([[[[[1.2169]], [[1.0535]]], [[[1.4945]], [[1.078]]], [[[1.9141]], [[1.7407]]]]], 1, 1, 1, 1, 1, 1, Zer83672), 
LRes18013 = reshape_layer(Zer83672, [5, 4, 3], Res18013), 
LAve39963 = average_layer([[[[[0.1067]]]], [[[[0.7229]]]]], Ave39963), 
LZer68750 = zero_padding2D_layer(Ave39963, 4, 0, 3, 0, Zer68750), 
LCon41617 = concatenate_layer([Zer68750,[[[[0.725, 0.6395], [0.2865, 0.6341], [0.0294, 0.8918], [0.22, 0.1615]], [[0.2001, 0.2324], [0.3319, 0.4586], [0.3687, 0.4445], [0.6122, 0.2439]], [[0.582, 0.8836], [0.7187, 0.4721], [0.0138, 0.1703], [0.4312, 0.9158]], [[0.7135, 0.869], [0.2175, 0.899], [0.9865, 0.1883], [0.4308, 0.8159]], [[0.9823, 0.3771], [0.5278, 0.7221], [0.5737, 0.4159], [0.0924, 0.7281]]]]], 3, Con41617), 
LSub34025 = subtract_layer(Res18013,Con41617, Sub34025), 
LRes46083 = reshape_layer(Sub34025, [5, 12], Res46083), 
LCon73974 = conv2D_layer([[[[0.2954, 0.7126], [0.5628, 0.4531]]]], 1, 2,[[[[0.3391, 0.7439, 0.7097, 0.7994], [0.4917, 0.0319, 0.0923, 0.1016]], [[0.39, 0.0314, 0.3398, 0.8163], [0.7829, 0.185, 0.7045, 0.372]]]],[0, 0, 0, 0], 1, 1, true, 1, 1, Con73974), 
LRes42233 = reshape_layer(Con73974, [1, 8], Res42233), 
LZer38368 = zero_padding1D_layer(Res42233, 1, 0, Zer38368), 
LMax37618 = maximum_layer([[[[0.8393], [0.5741]]], [[[0.9396], [0.0588]]]], Max37618), 
LCon94399 = concatenate_layer([Max37618,[[[0.9685, 0.7671, 0.5289, 0.4764, 0.8715, 0.5292, 0.5784], [0.7852, 0.7949, 0.5848, 0.8102, 0.3715, 0.3812, 0.9501]]]], 2, Con94399), 
LMax84671 = maximum_layer([Zer38368,Con94399], Max84671), 
LZer67932 = zero_padding1D_layer(Max84671, 3, 0, Zer67932), 
LCon77649 = concatenate_layer([Zer67932,[[[0.2791, 0.103, 0.3613, 0.7046], [0.2061, 0.7604, 0.1795, 0.639], [0.7148, 0.8096, 0.7732, 0.6746], [0.7648, 0.7096, 0.5289, 0.0345], [0.9234, 0.1018, 0.1685, 0.544]]]], 2, Con77649), 
LAve2940 = average_layer([Res46083,Con77649], Ave2940), 
LRes53999 = reshape_layer(Ave2940, [5, 12, 1], Res53999), 
LRes64098 = reshape_layer(Res53999, [5, 12, 1, 1], Res64098), 
LGlo44481 = global_average_pooling3D_layer(Res64098, Glo44481), 
LRes6404 = reshape_layer(Glo44481, [1, 1], Res6404), 
LRes42889 = reshape_layer(Res6404, [1, 1, 1], Res42889), 
LGlo53773 = global_max_pool2D_layer(Res42889, Glo53773), 
exec_layers([LZer83672,LRes18013,LAve39963,LZer68750,LCon41617,LSub34025,LRes46083,LCon73974,LRes42233,LZer38368,LMax37618,LCon94399,LMax84671,LZer67932,LCon77649,LAve2940,LRes53999,LRes64098,LGlo44481,LRes6404,LRes42889,LGlo53773],["Zer83672","Res18013","Ave39963","Zer68750","Con41617","Sub34025","Res46083","Con73974","Res42233","Zer38368","Max37618","Con94399","Max84671","Zer67932","Con77649","Ave2940","Res53999","Res64098","Glo44481","Res6404","Res42889","Glo53773"],Glo53773,"Glo53773")

Actual (Unparsed): [[0.0807646]]

Expected (Unparsed): [[0.08076458675]]

Actual:   [[0.0808]]

Expected: [[0.0808]]