import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Ave27656 = tf.keras.layers.Input(shape=([2, 2, 1]))
in0Ave48219 = tf.keras.layers.Input(shape=([1, 2]))
in1Ave48219 = tf.keras.layers.Input(shape=([1, 2]))

Ave27656 = keras.layers.AveragePooling2D(pool_size=(1, 1), name = 'Ave27656', )(in0Ave27656)
Res30121 = keras.layers.Reshape((2, 2), name = 'Res30121', )(Ave27656)
Ave48219 = keras.layers.Average(name = 'Ave48219', )([in0Ave48219,in1Ave48219])
Zer16179 = keras.layers.ZeroPadding1D(padding=((1, 0)), name = 'Zer16179', )(Ave48219)
Ave47173 = keras.layers.Average(name = 'Ave47173', )([Res30121,Zer16179])
Res21153 = keras.layers.Reshape((2, 2, 1), name = 'Res21153', )(Ave47173)
Res34589 = keras.layers.Reshape((2, 2, 1, 1), name = 'Res34589', )(Res21153)
Up_38539 = keras.layers.UpSampling3D(size=(2, 2, 2), name = 'Up_38539', )(Res34589)
model = tf.keras.models.Model(inputs=[in0Ave27656,in0Ave48219,in1Ave48219], outputs=Up_38539)
in0Ave27656 = tf.constant([[[[1.7734], [1.9585]], [[1.7719], [1.6484]]]])
in0Ave48219 = tf.constant([[[0.661, 0.4425]]])
in1Ave48219 = tf.constant([[[0.5415, 0.0401]]])
print (np.array2string(model.predict([in0Ave27656,in0Ave48219,in1Ave48219],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Up_38539.png')

LAve27656 = average_pooling2D_layer([[[[1.7734], [1.9585]], [[1.7719], [1.6484]]]], 1, 1, Ave27656), 
LRes30121 = reshape_layer(Ave27656, [2, 2], Res30121), 
LAve48219 = average_layer([[[[0.661, 0.4425]]], [[[0.5415, 0.0401]]]], Ave48219), 
LZer16179 = zero_padding1D_layer(Ave48219, 1, 0, Zer16179), 
LAve47173 = average_layer([Res30121,Zer16179], Ave47173), 
LRes21153 = reshape_layer(Ave47173, [2, 2, 1], Res21153), 
LRes34589 = reshape_layer(Res21153, [2, 2, 1, 1], Res34589), 
LUp_38539 = up_sampling3D_layer(Res34589, 2, 2, 2, Up_38539), 
exec_layers([LAve27656,LRes30121,LAve48219,LZer16179,LAve47173,LRes21153,LRes34589,LUp_38539],["Ave27656","Res30121","Ave48219","Zer16179","Ave47173","Res21153","Res34589","Up_38539"],Up_38539,"Up_38539")

Actual (Unparsed): [[[[[0.8867000], [0.8867000]], [[0.8867000], [0.8867000]], [[0.9792500], [0.9792500]], [[0.9792500], [0.9792500]]], [[[0.8867000], [0.8867000]], [[0.8867000], [0.8867000]], [[0.9792500], [0.9792500]], [[0.9792500], [0.9792500]]], [[[1.1865750], [1.1865750]], [[1.1865750], [1.1865750]], [[0.9448500], [0.9448500]], [[0.9448500], [0.9448500]]], [[[1.1865750], [1.1865750]], [[1.1865750], [1.1865750]], [[0.9448500], [0.9448500]], [[0.9448500], [0.9448500]]]]]

Expected (Unparsed): [[[[[0.8867],[0.8867]],[[0.8867],[0.8867]],[[0.97925],[0.97925]],[[0.97925],[0.97925]]],[[[0.8867],[0.8867]],[[0.8867],[0.8867]],[[0.97925],[0.97925]],[[0.97925],[0.97925]]],[[[1.186575],[1.186575]],[[1.186575],[1.186575]],[[0.9448500000000001],[0.9448500000000001]],[[0.9448500000000001],[0.9448500000000001]]],[[[1.186575],[1.186575]],[[1.186575],[1.186575]],[[0.9448500000000001],[0.9448500000000001]],[[0.9448500000000001],[0.9448500000000001]]]]]

Actual:   [[[[[0.8867], [0.8867]], [[0.8867], [0.8867]], [[0.9793], [0.9793]], [[0.9793], [0.9793]]], [[[0.8867], [0.8867]], [[0.8867], [0.8867]], [[0.9793], [0.9793]], [[0.9793], [0.9793]]], [[[1.1866], [1.1866]], [[1.1866], [1.1866]], [[0.9449], [0.9449]], [[0.9449], [0.9449]]], [[[1.1866], [1.1866]], [[1.1866], [1.1866]], [[0.9449], [0.9449]], [[0.9449], [0.9449]]]]]

Expected: [[[[[0.8867], [0.8867]], [[0.8867], [0.8867]], [[0.9793], [0.9793]], [[0.9793], [0.9793]]], [[[0.8867], [0.8867]], [[0.8867], [0.8867]], [[0.9793], [0.9793]], [[0.9793], [0.9793]]], [[[1.1866], [1.1866]], [[1.1866], [1.1866]], [[0.9449], [0.9449]], [[0.9449], [0.9449]]], [[[1.1866], [1.1866]], [[1.1866], [1.1866]], [[0.9449], [0.9449]], [[0.9449], [0.9449]]]]]