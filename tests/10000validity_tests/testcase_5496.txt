import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Con13892 = tf.keras.layers.Input(shape=([2, 1, 1]))
in0Lea93845 = tf.keras.layers.Input(shape=([2, 1]))
in0Con47482 = tf.keras.layers.Input(shape=([2, 2]))
in0Con63170 = tf.keras.layers.Input(shape=([2, 3, 3]))
in0Ave4334 = tf.keras.layers.Input(shape=([2, 2]))
in1Ave4334 = tf.keras.layers.Input(shape=([2, 2]))
in0Con55301 = tf.keras.layers.Input(shape=([2, 2, 3]))
in0Loc86307 = tf.keras.layers.Input(shape=([1, 2, 2]))

Con13892 = keras.layers.Conv2DTranspose(3, (1, 1),strides=(1, 1), padding='same', name = 'Con13892', )(in0Con13892)
Ave91474 = keras.layers.AveragePooling2D(pool_size=(2, 1), name = 'Ave91474', )(Con13892)
Res36671 = keras.layers.Reshape((1, 3), name = 'Res36671', )(Ave91474)
Zer6450 = keras.layers.ZeroPadding1D(padding=((1, 0)), name = 'Zer6450', )(Res36671)
Lea93845 = keras.layers.LeakyReLU(alpha=9.837838340579712, name = 'Lea93845', input_shape=(2, 1))(in0Lea93845)
Con47482 = keras.layers.Concatenate(axis=2, name = 'Con47482', )([Lea93845,in0Con47482])
Max87219 = keras.layers.Maximum(name = 'Max87219', )([Zer6450,Con47482])
Res77699 = keras.layers.Reshape((2, 3, 1), name = 'Res77699', )(Max87219)
Con63170 = keras.layers.Concatenate(axis=3, name = 'Con63170', )([Res77699,in0Con63170])
Ave4334 = keras.layers.Average(name = 'Ave4334', )([in0Ave4334,in1Ave4334])
Res18378 = keras.layers.Reshape((2, 2, 1), name = 'Res18378', )(Ave4334)
Con55301 = keras.layers.Concatenate(axis=3, name = 'Con55301', )([Res18378,in0Con55301])
Loc86307 = keras.layers.LocallyConnected2D(4, (1, 1),strides=(1, 12), name = 'Loc86307', )(in0Loc86307)
Zer34512 = keras.layers.ZeroPadding2D(padding=((1, 0), (1, 0)), name = 'Zer34512', )(Loc86307)
Mul41226 = keras.layers.Multiply(name = 'Mul41226', )([Con55301,Zer34512])
Zer75628 = keras.layers.ZeroPadding2D(padding=((0, 0), (1, 0)), name = 'Zer75628', )(Mul41226)
Sub51248 = keras.layers.Subtract(name = 'Sub51248', )([Con63170,Zer75628])
model = tf.keras.models.Model(inputs=[in0Con13892,in0Lea93845,in0Con47482,in0Con63170,in0Ave4334,in1Ave4334,in0Con55301,in0Loc86307], outputs=Sub51248)
w = model.get_layer('Con13892').get_weights() 
w[0] = np.array([[[[0.4044], [0.5346], [0.7795]]]])
w[1] = np.array([0, 0, 0])
model.get_layer('Con13892').set_weights(w) 
w = model.get_layer('Loc86307').get_weights() 
w[0] = np.array([[[0.0822, 0.9587, 0.274, 0.6564], [0.1446, 0.9009, 0.0555, 0.7635]]])
w[1] = np.array([[[0, 0, 0, 0]]])
model.get_layer('Loc86307').set_weights(w) 
in0Con13892 = tf.constant([[[[0.1349]], [[0.385]]]])
in0Lea93845 = tf.constant([[[0.1492], [0.7745]]])
in0Con47482 = tf.constant([[[0.7644, 0.2781], [0.0773, 0.5584]]])
in0Con63170 = tf.constant([[[[0.9849, 0.704, 0.8422], [0.4483, 0.1876, 0.6369], [0.3889, 0.9005, 0.3738]], [[0.951, 0.8899, 0.2165], [0.8741, 0.5316, 0.1897], [0.0095, 0.785, 0.3937]]]])
in0Ave4334 = tf.constant([[[0.0791, 0.2354], [0.1981, 0.3081]]])
in1Ave4334 = tf.constant([[[0.8025, 0.0715], [0.0559, 0.1324]]])
in0Con55301 = tf.constant([[[[0.0045, 0.9875, 0.7275], [0.0227, 0.5103, 0.033]], [[0.1575, 0.4376, 0.4464], [0.4212, 0.2285, 0.2834]]]])
in0Loc86307 = tf.constant([[[[0.7754, 0.1955], [0.0661, 0.3613]]]])
print (np.array2string(model.predict([in0Con13892,in0Lea93845,in0Con47482,in0Con63170,in0Ave4334,in1Ave4334,in0Con55301,in0Loc86307],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Sub51248.png')

LCon13892 = conv2D_transpose_layer([[[[0.1349]], [[0.385]]]], 1, 1,[[[[0.4044], [0.5346], [0.7795]]]],[0, 0, 0], 1, 1, true, Con13892), 
LAve91474 = average_pooling2D_layer(Con13892, 2, 1, Ave91474), 
LRes36671 = reshape_layer(Ave91474, [1, 3], Res36671), 
LZer6450 = zero_padding1D_layer(Res36671, 1, 0, Zer6450), 
LLea93845 = leaky_relu_layer([[[0.1492], [0.7745]]], 9.837838340579712, Lea93845), 
LCon47482 = concatenate_layer([Lea93845,[[[0.7644, 0.2781], [0.0773, 0.5584]]]], 2, Con47482), 
LMax87219 = maximum_layer([Zer6450,Con47482], Max87219), 
LRes77699 = reshape_layer(Max87219, [2, 3, 1], Res77699), 
LCon63170 = concatenate_layer([Res77699,[[[[0.9849, 0.704, 0.8422], [0.4483, 0.1876, 0.6369], [0.3889, 0.9005, 0.3738]], [[0.951, 0.8899, 0.2165], [0.8741, 0.5316, 0.1897], [0.0095, 0.785, 0.3937]]]]], 3, Con63170), 
LAve4334 = average_layer([[[[0.0791, 0.2354], [0.1981, 0.3081]]], [[[0.8025, 0.0715], [0.0559, 0.1324]]]], Ave4334), 
LRes18378 = reshape_layer(Ave4334, [2, 2, 1], Res18378), 
LCon55301 = concatenate_layer([Res18378,[[[[0.0045, 0.9875, 0.7275], [0.0227, 0.5103, 0.033]], [[0.1575, 0.4376, 0.4464], [0.4212, 0.2285, 0.2834]]]]], 3, Con55301), 
LLoc86307 = locally_connected2D_layer([[[[0.7754, 0.1955], [0.0661, 0.3613]]]], 1, 1,[[[0.0822, 0.9587, 0.274, 0.6564], [0.1446, 0.9009, 0.0555, 0.7635]]],[[[0, 0, 0, 0]]], 1, 12, Loc86307), 
LZer34512 = zero_padding2D_layer(Loc86307, 1, 0, 1, 0, Zer34512), 
LMul41226 = multiply_layer([Con55301,Zer34512], Mul41226), 
LZer75628 = zero_padding2D_layer(Mul41226, 0, 0, 1, 0, Zer75628), 
LSub51248 = subtract_layer(Con63170,Zer75628, Sub51248), 
exec_layers([LCon13892,LAve91474,LRes36671,LZer6450,LLea93845,LCon47482,LMax87219,LRes77699,LCon63170,LAve4334,LRes18378,LCon55301,LLoc86307,LZer34512,LMul41226,LZer75628,LSub51248],["Con13892","Ave91474","Res36671","Zer6450","Lea93845","Con47482","Max87219","Res77699","Con63170","Ave4334","Res18378","Con55301","Loc86307","Zer34512","Mul41226","Zer75628","Sub51248"],Sub51248,"Sub51248")

Actual (Unparsed): [[[[0.1492000, 0.9849000, 0.7040000, 0.8422000], [0.7644000, 0.4483000, 0.1876000, 0.6369000], [0.2781000, 0.3889000, 0.9005000, 0.3738000]], [[0.7745000, 0.9510000, 0.8899000, 0.2165000], [0.1389693, 0.8741000, 0.5316000, 0.1897000], [0.5381354, -0.3777942, 0.7339737, 0.2071557]]]]

Expected (Unparsed): [[[[0.1492,0.9849,0.704,0.8422],[0.7644,0.4483,0.1876,0.6369],[0.2781,0.3889,0.9005,0.3738]],[[0.7745,0.951,0.8899,0.2165],[0.13896927,0.8741,0.5316,0.1897],[0.538135418605,-0.37779421291599996,0.733973699275,0.207155688046]]]]

Actual:   [[[[0.1492, 0.9849, 0.704, 0.8422], [0.7644, 0.4483, 0.1876, 0.6369], [0.2781, 0.3889, 0.9005, 0.3738]], [[0.7745, 0.951, 0.8899, 0.2165], [0.139, 0.8741, 0.5316, 0.1897], [0.5382, -0.3777, 0.734, 0.2072]]]]

Expected: [[[[0.1492, 0.9849, 0.704, 0.8422], [0.7644, 0.4483, 0.1876, 0.6369], [0.2781, 0.3889, 0.9005, 0.3738]], [[0.7745, 0.951, 0.8899, 0.2165], [0.139, 0.8741, 0.5316, 0.1897], [0.5382, -0.3777, 0.734, 0.2072]]]]