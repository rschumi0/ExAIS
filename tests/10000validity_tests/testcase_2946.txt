import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Up_74863 = tf.keras.layers.Input(shape=([3, 4]))
in0Min87923 = tf.keras.layers.Input(shape=([1, 2]))
in1Min87923 = tf.keras.layers.Input(shape=([1, 2]))
in0Glo70541 = tf.keras.layers.Input(shape=([1, 1, 1, 2]))
in0Con36910 = tf.keras.layers.Input(shape=([3, 2]))

Up_74863 = keras.layers.UpSampling1D(size=(1), name = 'Up_74863', )(in0Up_74863)
Min87923 = keras.layers.Minimum(name = 'Min87923', )([in0Min87923,in1Min87923])
Res36712 = keras.layers.Reshape((1, 2, 1), name = 'Res36712', )(Min87923)
Up_72420 = keras.layers.UpSampling2D(size=(1, 1), name = 'Up_72420', )(Res36712)
Res89489 = keras.layers.Reshape((1, 2), name = 'Res89489', )(Up_72420)
Glo70541 = keras.layers.GlobalAveragePooling3D(name = 'Glo70541', )(in0Glo70541)
Res67574 = keras.layers.Reshape((1, 2), name = 'Res67574', )(Glo70541)
Mul68320 = keras.layers.Multiply(name = 'Mul68320', )([Res89489,Res67574])
Zer80025 = keras.layers.ZeroPadding1D(padding=((2, 0)), name = 'Zer80025', )(Mul68320)
Con36910 = keras.layers.Concatenate(axis=2, name = 'Con36910', )([Zer80025,in0Con36910])
Sub52501 = keras.layers.Subtract(name = 'Sub52501', )([Up_74863,Con36910])
model = tf.keras.models.Model(inputs=[in0Up_74863,in0Min87923,in1Min87923,in0Glo70541,in0Con36910], outputs=Sub52501)
in0Up_74863 = tf.constant([[[1.4801, 1.3588, 1.114, 1.0079], [1.5809, 1.0021, 1.0969, 1.4727], [1.9345, 1.039, 1.2783, 1.1355]]])
in0Min87923 = tf.constant([[[0.0271, 0.0736]]])
in1Min87923 = tf.constant([[[0.4685, 0.3683]]])
in0Glo70541 = tf.constant([[[[[1.6489, 1.7152]]]]])
in0Con36910 = tf.constant([[[0.4183, 0.6858], [0.0337, 0.2215], [0.764, 0.9952]]])
print (np.array2string(model.predict([in0Up_74863,in0Min87923,in1Min87923,in0Glo70541,in0Con36910],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Sub52501.png')

LUp_74863 = up_sampling1D_layer([[[1.4801, 1.3588, 1.114, 1.0079], [1.5809, 1.0021, 1.0969, 1.4727], [1.9345, 1.039, 1.2783, 1.1355]]], 1, Up_74863), 
LMin87923 = minimum_layer([[[[0.0271, 0.0736]]], [[[0.4685, 0.3683]]]], Min87923), 
LRes36712 = reshape_layer(Min87923, [1, 2, 1], Res36712), 
LUp_72420 = up_sampling2D_layer(Res36712, 1, 1, Up_72420), 
LRes89489 = reshape_layer(Up_72420, [1, 2], Res89489), 
LGlo70541 = global_average_pooling3D_layer([[[[[1.6489, 1.7152]]]]], Glo70541), 
LRes67574 = reshape_layer(Glo70541, [1, 2], Res67574), 
LMul68320 = multiply_layer([Res89489,Res67574], Mul68320), 
LZer80025 = zero_padding1D_layer(Mul68320, 2, 0, Zer80025), 
LCon36910 = concatenate_layer([Zer80025,[[[0.4183, 0.6858], [0.0337, 0.2215], [0.764, 0.9952]]]], 2, Con36910), 
LSub52501 = subtract_layer(Up_74863,Con36910, Sub52501), 
exec_layers([LUp_74863,LMin87923,LRes36712,LUp_72420,LRes89489,LGlo70541,LRes67574,LMul68320,LZer80025,LCon36910,LSub52501],["Up_74863","Min87923","Res36712","Up_72420","Res89489","Glo70541","Res67574","Mul68320","Zer80025","Con36910","Sub52501"],Sub52501,"Sub52501")

Actual (Unparsed): [[[1.4801000, 1.3588001, 0.6957000, 0.3221000], [1.5809000, 1.0021000, 1.0632000, 1.2512000], [1.8898148, 0.9127613, 0.5143000, 0.1403000]]]

Expected (Unparsed): [[[1.4801,1.3588,0.6957000000000001,0.32210000000000005],[1.5809,1.0021,1.0632,1.2511999999999999],[1.88981481,0.9127612799999999,0.5143,0.14029999999999998]]]

Actual:   [[[1.4801, 1.3589, 0.6957, 0.3221], [1.5809, 1.0021, 1.0632, 1.2512], [1.8899, 0.9128, 0.5143, 0.1403]]]

Expected: [[[1.4801, 1.3588, 0.6958, 0.3222], [1.5809, 1.0021, 1.0632, 1.2512], [1.8899, 0.9128, 0.5143, 0.1403]]]