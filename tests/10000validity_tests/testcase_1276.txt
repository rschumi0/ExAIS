import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0PRe26616 = tf.keras.layers.Input(shape=([2, 2]))
in0Con2518 = tf.keras.layers.Input(shape=([6, 4, 6, 1]))
in0Glo13979 = tf.keras.layers.Input(shape=([2, 2, 1]))
in0Con56986 = tf.keras.layers.Input(shape=([6, 4, 6, 1]))
in0Zer93110 = tf.keras.layers.Input(shape=([4, 2, 4, 2]))
in0Sub13349 = tf.keras.layers.Input(shape=([3, 3, 2]))
in1Sub13349 = tf.keras.layers.Input(shape=([3, 3, 2]))
in0Con69048 = tf.keras.layers.Input(shape=([6, 4, 10]))

PRe26616 = keras.layers.PReLU(name = 'PRe26616', input_shape=(2, 2))(in0PRe26616)
Ave94282 = keras.layers.AveragePooling1D(pool_size=(1), strides=(3), padding='valid', name = 'Ave94282', )(PRe26616)
Res56293 = keras.layers.Reshape((1, 2, 1), name = 'Res56293', )(Ave94282)
Res81142 = keras.layers.Reshape((1, 2, 1, 1), name = 'Res81142', )(Res56293)
Zer86140 = keras.layers.ZeroPadding3D(padding=((5, 0), (2, 0), (5, 0)), name = 'Zer86140', )(Res81142)
Con2518 = keras.layers.Concatenate(axis=4, name = 'Con2518', )([Zer86140,in0Con2518])
Glo13979 = keras.layers.GlobalMaxPool2D(name = 'Glo13979', )(in0Glo13979)
Res92771 = keras.layers.Reshape((1, 1), name = 'Res92771', )(Glo13979)
Res96381 = keras.layers.Reshape((1, 1, 1), name = 'Res96381', )(Res92771)
Res86665 = keras.layers.Reshape((1, 1, 1, 1), name = 'Res86665', )(Res96381)
Zer91759 = keras.layers.ZeroPadding3D(padding=((5, 0), (3, 0), (5, 0)), name = 'Zer91759', )(Res86665)
Con56986 = keras.layers.Concatenate(axis=4, name = 'Con56986', )([Zer91759,in0Con56986])
Zer93110 = keras.layers.ZeroPadding3D(padding=((1, 1), (1, 1), (1, 1)), name = 'Zer93110', )(in0Zer93110)
Mul68583 = keras.layers.Multiply(name = 'Mul68583', )([Con56986,Zer93110])
Lea59846 = keras.layers.LeakyReLU(alpha=8.07162054835251, name = 'Lea59846', )(Mul68583)
Sub74050 = keras.layers.Subtract(name = 'Sub74050', )([Con2518,Lea59846])
Res83331 = keras.layers.Reshape((6, 4, 12), name = 'Res83331', )(Sub74050)
Sub13349 = keras.layers.Subtract(name = 'Sub13349', )([in0Sub13349,in1Sub13349])
Zer78732 = keras.layers.ZeroPadding2D(padding=((3, 0), (1, 0)), name = 'Zer78732', )(Sub13349)
Con69048 = keras.layers.Concatenate(axis=3, name = 'Con69048', )([Zer78732,in0Con69048])
Min59825 = keras.layers.Minimum(name = 'Min59825', )([Res83331,Con69048])
Res38769 = keras.layers.Reshape((6, 48), name = 'Res38769', )(Min59825)
Cro11853 = keras.layers.Cropping1D(cropping=((4, 0)), name = 'Cro11853', )(Res38769)
model = tf.keras.models.Model(inputs=[in0PRe26616,in0Con2518,in0Glo13979,in0Con56986,in0Zer93110,in0Sub13349,in1Sub13349,in0Con69048], outputs=Cro11853)
w = model.get_layer('PRe26616').get_weights() 
w[0] = np.array([[0.8075, 0.9057], [0.53, 0.9984]])
model.get_layer('PRe26616').set_weights(w) 
in0PRe26616 = tf.constant([[[0.5, 0.223], [0.006, 0.2329]]])
in0Con2518 = tf.constant([[[[[0.9055], [0.6162], [0.4876], [0.8468], [0.4653], [0.3853]], [[0.5515], [0.2202], [0.8431], [0.3828], [0.7971], [0.3334]], [[0.3646], [0.8056], [0.8232], [0.3609], [0.3668], [0.4469]], [[0.1188], [0.0072], [0.8788], [0.8863], [0.1519], [0.8921]]], [[[0.3119], [0.4162], [0.7203], [0.747], [0.2438], [0.4143]], [[0.5337], [0.1275], [0.1603], [0.6817], [0.9126], [0.9249]], [[0.3193], [0.8624], [0.4363], [0.8203], [0.7434], [0.4355]], [[0.3486], [0.9648], [0.7112], [0.9294], [0.5381], [0.5966]]], [[[0.0198], [0.9446], [0.9534], [0.0028], [0.7209], [0.292]], [[0.3803], [0.2271], [0.9938], [0.0551], [0.6133], [0.1844]], [[0.313], [0.6659], [0.1877], [0.3958], [0.0921], [0.148]], [[0.0025], [0.3837], [0.5416], [0.5251], [0.36], [0.8782]]], [[[0.5638], [0.0202], [0.1784], [0.3793], [0.1287], [0.0751]], [[0.3888], [0.287], [0.7214], [0.4127], [0.8214], [0.7732]], [[0.1342], [0.3294], [0.2038], [0.7968], [0.0879], [0.1598]], [[0.2506], [0.1863], [0.9096], [0.3862], [0.2024], [0.5077]]], [[[0.7683], [0.1796], [0.5933], [0.5171], [0.7777], [0.2526]], [[0.466], [0.3572], [0.609], [0.7819], [0.7368], [0.2974]], [[0.1275], [0.815], [0.9174], [0.7418], [0.9648], [0.0126]], [[0.9425], [0.4318], [0.8687], [0.8018], [0.4234], [0.2573]]], [[[0.1375], [0.0098], [0.2499], [0.8545], [0.434], [0.8382]], [[0.0958], [0.2189], [0.8036], [0.5931], [0.0508], [0.8894]], [[0.7732], [0.9384], [0.295], [0.8703], [0.9968], [0.5591]], [[0.4615], [0.349], [0.0293], [0.0348], [0.0909], [0.4427]]]]])
in0Glo13979 = tf.constant([[[[1.6218], [1.431]], [[1.5152], [1.1325]]]])
in0Con56986 = tf.constant([[[[[0.6632], [0.8603], [0.8634], [0.7935], [0.5546], [0.4171]], [[0.2017], [0.2061], [0.2908], [0.9993], [0.7539], [0.2761]], [[0.6852], [0.631], [0.9328], [0.0307], [0.9067], [0.6087]], [[0.2077], [0.3057], [0.8753], [0.3019], [0.2615], [0.9085]]], [[[0.7045], [0.8896], [0.4225], [0.3298], [0.8536], [0.442]], [[0.1706], [0.6622], [0.9308], [0.0728], [0.9304], [0.4591]], [[0.8919], [0.9795], [0.8123], [0.634], [0.7158], [0.0671]], [[0.4375], [0.1344], [0.5086], [0.5072], [0.4928], [0.0549]]], [[[0.3843], [0.0213], [0.2027], [0.0512], [0.4041], [0.9007]], [[0.475], [0.4082], [0.3145], [0.7717], [0.0797], [0.8771]], [[0.8217], [0.9013], [0.856], [0.4475], [0.6605], [0.3984]], [[0.6048], [0.5478], [0.7738], [0.0133], [0.0225], [0.7789]]], [[[0.5053], [0.3624], [0.7583], [0.176], [0.8252], [0.3123]], [[0.4369], [0.1684], [0.2599], [0.947], [0.2771], [0.8592]], [[0.3751], [0.0117], [0.7598], [0.9836], [0.3759], [0.9747]], [[0.6498], [0.9207], [0.629], [0.8868], [0.5613], [0.4307]]], [[[0.6874], [0.0241], [0.1705], [0.3701], [0.7027], [0.9021]], [[0.1258], [0.4965], [0.9489], [0.6179], [0.6832], [0.6169]], [[0.5477], [0.641], [0.1043], [0.7558], [0.3852], [0.106]], [[0.8928], [0.724], [0.6424], [0.3849], [0.0177], [0.454]]], [[[0.3202], [0.2147], [0.3739], [0.7347], [0.6376], [0.939]], [[0.8646], [0.5257], [0.2006], [0.4865], [0.6544], [0.8603]], [[0.4002], [0.5534], [0.3389], [0.4588], [0.5813], [0.0818]], [[0.0047], [0.561], [0.1441], [0.5364], [0.41], [0.1647]]]]])
in0Zer93110 = tf.constant([[[[[1.3328, 1.6079], [1.3628, 1.123], [1.5532, 1.3507], [1.2826, 1.1374]], [[1.2469, 1.1779], [1.2695, 1.0845], [1.3118, 1.5518], [1.0954, 1.458]]], [[[1.9926, 1.3999], [1.7396, 1.1243], [1.9486, 1.8395], [1.7651, 1.4205]], [[1.628, 1.9576], [1.2688, 1.0546], [1.5313, 1.3128], [1.5379, 1.8079]]], [[[1.2741, 1.2866], [1.9581, 1.7142], [1.1036, 1.5387], [1.0343, 1.2098]], [[1.6658, 1.5948], [1.61, 1.7342], [1.3727, 1.033], [1.5001, 1.3966]]], [[[1.677, 1.8246], [1.7881, 1.6181], [1.9273, 1.1311], [1.9829, 1.1103]], [[1.2436, 1.2651], [1.0759, 1.1553], [1.0353, 1.58], [1.2967, 1.9184]]]]])
in0Sub13349 = tf.constant([[[[0.3611, 0.7698], [0.0255, 0.4387], [0.3234, 0.434]], [[0.8881, 0.0244], [0.0835, 0.7879], [0.5326, 0.0042]], [[0.8874, 0.086], [0.9677, 0.1796], [0.6967, 0.6658]]]])
in1Sub13349 = tf.constant([[[[0.6273, 0.8634], [0.637, 0.516], [0.5199, 0.091]], [[0.495, 0.9265], [0.9184, 0.448], [0.922, 0.0897]], [[0.0532, 0.9694], [0.8349, 0.4825], [0.1791, 0.7353]]]])
in0Con69048 = tf.constant([[[[0.2258, 0.0806, 0.773, 0.344, 0.7692, 0.7716, 0.346, 0.1183, 0.6551, 0.4162], [0.958, 0.612, 0.4027, 0.2229, 0.754, 0.6189, 0.5246, 0.4847, 0.2371, 0.7802], [0.0442, 0.2077, 0.262, 0.0164, 0.9405, 0.5604, 0.7873, 0.629, 0.2757, 0.3386], [0.77, 0.6032, 0.9639, 0.5679, 0.8059, 0.2123, 0.6257, 0.8324, 0.1211, 0.6274]], [[0.738, 0.906, 0.3009, 0.87, 0.3398, 0.7913, 0.7073, 0.1098, 0.8797, 0.3258], [0.8805, 0.0067, 0.4038, 0.0999, 0.3439, 0.5224, 0.1739, 0.5526, 0.1432, 0.3887], [0.9784, 0.7577, 0.1353, 0.2053, 0.8519, 0.5946, 0.5131, 0.9647, 0.6566, 0.7116], [0.3052, 0.6538, 0.9924, 0.9285, 0.6192, 0.4628, 0.2039, 0.5054, 0.2123, 0.0521]], [[0.8281, 0.0044, 0.5671, 0.2686, 0.6903, 0.3128, 0.0264, 0.6843, 0.9938, 0.761], [0.6991, 0.3381, 0.1758, 0.1699, 0.7855, 0.0999, 0.0016, 0.0922, 0.6923, 0.1494], [0.3588, 0.4741, 0.8081, 0.1645, 0.477, 0.4574, 0.0903, 0.9462, 0.8469, 0.0657], [0.6821, 0.3735, 0.9428, 0.0755, 0.6178, 0.7787, 0.9619, 0.4579, 0.3045, 0.0577]], [[0.185, 0.396, 0.875, 0.0942, 0.2379, 0.0331, 0.6923, 0.3601, 0.485, 0.7861], [0.2599, 0.8822, 0.0224, 0.2702, 0.5398, 0.1126, 0.2556, 0.6275, 0.215, 0.6276], [0.8422, 0.3205, 0.7432, 0.9921, 0.8634, 0.2635, 0.1479, 0.5761, 0.4421, 0.4978], [0.3652, 0.5834, 0.6747, 0.4863, 0.6221, 0.0654, 0.6585, 0.5006, 0.7641, 0.2296]], [[0.6087, 0.5092, 0.6654, 0.9263, 0.5367, 0.4301, 0.8574, 0.7977, 0.7343, 0.6116], [0.2955, 0.208, 0.3527, 0.9234, 0.7442, 0.739, 0.6945, 0.9006, 0.6078, 0.7302], [0.4497, 0.9664, 0.1591, 0.0723, 0.9945, 0.8797, 0.0254, 0.218, 0.0488, 0.2031], [0.4798, 0.1702, 0.4382, 0.7655, 0.5571, 0.0212, 0.4452, 0.8084, 0.2605, 0.4761]], [[0.2485, 0.7454, 0.1628, 0.6734, 0.2487, 0.2404, 0.5151, 0.5312, 0.6562, 0.616], [0.5723, 0.7952, 0.5796, 0.438, 0.2218, 0.9412, 0.9927, 0.4942, 0.1563, 0.0933], [0.3805, 0.2809, 0.7724, 0.1601, 0.5725, 0.5435, 0.6967, 0.4614, 0.2521, 0.3793], [0.3381, 0.2214, 0.8995, 0.9043, 0.1543, 0.4366, 0.4763, 0.5071, 0.3756, 0.7949]]]])
print (np.array2string(model.predict([in0PRe26616,in0Con2518,in0Glo13979,in0Con56986,in0Zer93110,in0Sub13349,in1Sub13349,in0Con69048],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Cro11853.png')

LPRe26616 = prelu_layer([[[0.5, 0.223], [0.006, 0.2329]]], [[0.8075, 0.9057], [0.53, 0.9984]], PRe26616), 
LAve94282 = average_pooling1D_layer(PRe26616, 1, 3, false, Ave94282), 
LRes56293 = reshape_layer(Ave94282, [1, 2, 1], Res56293), 
LRes81142 = reshape_layer(Res56293, [1, 2, 1, 1], Res81142), 
LZer86140 = zero_padding3D_layer(Res81142, 5, 0, 2, 0, 5, 0, Zer86140), 
LCon2518 = concatenate_layer([Zer86140,[[[[[0.9055], [0.6162], [0.4876], [0.8468], [0.4653], [0.3853]], [[0.5515], [0.2202], [0.8431], [0.3828], [0.7971], [0.3334]], [[0.3646], [0.8056], [0.8232], [0.3609], [0.3668], [0.4469]], [[0.1188], [0.0072], [0.8788], [0.8863], [0.1519], [0.8921]]], [[[0.3119], [0.4162], [0.7203], [0.747], [0.2438], [0.4143]], [[0.5337], [0.1275], [0.1603], [0.6817], [0.9126], [0.9249]], [[0.3193], [0.8624], [0.4363], [0.8203], [0.7434], [0.4355]], [[0.3486], [0.9648], [0.7112], [0.9294], [0.5381], [0.5966]]], [[[0.0198], [0.9446], [0.9534], [0.0028], [0.7209], [0.292]], [[0.3803], [0.2271], [0.9938], [0.0551], [0.6133], [0.1844]], [[0.313], [0.6659], [0.1877], [0.3958], [0.0921], [0.148]], [[0.0025], [0.3837], [0.5416], [0.5251], [0.36], [0.8782]]], [[[0.5638], [0.0202], [0.1784], [0.3793], [0.1287], [0.0751]], [[0.3888], [0.287], [0.7214], [0.4127], [0.8214], [0.7732]], [[0.1342], [0.3294], [0.2038], [0.7968], [0.0879], [0.1598]], [[0.2506], [0.1863], [0.9096], [0.3862], [0.2024], [0.5077]]], [[[0.7683], [0.1796], [0.5933], [0.5171], [0.7777], [0.2526]], [[0.466], [0.3572], [0.609], [0.7819], [0.7368], [0.2974]], [[0.1275], [0.815], [0.9174], [0.7418], [0.9648], [0.0126]], [[0.9425], [0.4318], [0.8687], [0.8018], [0.4234], [0.2573]]], [[[0.1375], [0.0098], [0.2499], [0.8545], [0.434], [0.8382]], [[0.0958], [0.2189], [0.8036], [0.5931], [0.0508], [0.8894]], [[0.7732], [0.9384], [0.295], [0.8703], [0.9968], [0.5591]], [[0.4615], [0.349], [0.0293], [0.0348], [0.0909], [0.4427]]]]]], 4, Con2518), 
LGlo13979 = global_max_pool2D_layer([[[[1.6218], [1.431]], [[1.5152], [1.1325]]]], Glo13979), 
LRes92771 = reshape_layer(Glo13979, [1, 1], Res92771), 
LRes96381 = reshape_layer(Res92771, [1, 1, 1], Res96381), 
LRes86665 = reshape_layer(Res96381, [1, 1, 1, 1], Res86665), 
LZer91759 = zero_padding3D_layer(Res86665, 5, 0, 3, 0, 5, 0, Zer91759), 
LCon56986 = concatenate_layer([Zer91759,[[[[[0.6632], [0.8603], [0.8634], [0.7935], [0.5546], [0.4171]], [[0.2017], [0.2061], [0.2908], [0.9993], [0.7539], [0.2761]], [[0.6852], [0.631], [0.9328], [0.0307], [0.9067], [0.6087]], [[0.2077], [0.3057], [0.8753], [0.3019], [0.2615], [0.9085]]], [[[0.7045], [0.8896], [0.4225], [0.3298], [0.8536], [0.442]], [[0.1706], [0.6622], [0.9308], [0.0728], [0.9304], [0.4591]], [[0.8919], [0.9795], [0.8123], [0.634], [0.7158], [0.0671]], [[0.4375], [0.1344], [0.5086], [0.5072], [0.4928], [0.0549]]], [[[0.3843], [0.0213], [0.2027], [0.0512], [0.4041], [0.9007]], [[0.475], [0.4082], [0.3145], [0.7717], [0.0797], [0.8771]], [[0.8217], [0.9013], [0.856], [0.4475], [0.6605], [0.3984]], [[0.6048], [0.5478], [0.7738], [0.0133], [0.0225], [0.7789]]], [[[0.5053], [0.3624], [0.7583], [0.176], [0.8252], [0.3123]], [[0.4369], [0.1684], [0.2599], [0.947], [0.2771], [0.8592]], [[0.3751], [0.0117], [0.7598], [0.9836], [0.3759], [0.9747]], [[0.6498], [0.9207], [0.629], [0.8868], [0.5613], [0.4307]]], [[[0.6874], [0.0241], [0.1705], [0.3701], [0.7027], [0.9021]], [[0.1258], [0.4965], [0.9489], [0.6179], [0.6832], [0.6169]], [[0.5477], [0.641], [0.1043], [0.7558], [0.3852], [0.106]], [[0.8928], [0.724], [0.6424], [0.3849], [0.0177], [0.454]]], [[[0.3202], [0.2147], [0.3739], [0.7347], [0.6376], [0.939]], [[0.8646], [0.5257], [0.2006], [0.4865], [0.6544], [0.8603]], [[0.4002], [0.5534], [0.3389], [0.4588], [0.5813], [0.0818]], [[0.0047], [0.561], [0.1441], [0.5364], [0.41], [0.1647]]]]]], 4, Con56986), 
LZer93110 = zero_padding3D_layer([[[[[1.3328, 1.6079], [1.3628, 1.123], [1.5532, 1.3507], [1.2826, 1.1374]], [[1.2469, 1.1779], [1.2695, 1.0845], [1.3118, 1.5518], [1.0954, 1.458]]], [[[1.9926, 1.3999], [1.7396, 1.1243], [1.9486, 1.8395], [1.7651, 1.4205]], [[1.628, 1.9576], [1.2688, 1.0546], [1.5313, 1.3128], [1.5379, 1.8079]]], [[[1.2741, 1.2866], [1.9581, 1.7142], [1.1036, 1.5387], [1.0343, 1.2098]], [[1.6658, 1.5948], [1.61, 1.7342], [1.3727, 1.033], [1.5001, 1.3966]]], [[[1.677, 1.8246], [1.7881, 1.6181], [1.9273, 1.1311], [1.9829, 1.1103]], [[1.2436, 1.2651], [1.0759, 1.1553], [1.0353, 1.58], [1.2967, 1.9184]]]]], 1, 1, 1, 1, 1, 1, Zer93110), 
LMul68583 = multiply_layer([Con56986,Zer93110], Mul68583), 
LLea59846 = leaky_relu_layer(Mul68583, 8.07162054835251, Lea59846), 
LSub74050 = subtract_layer(Con2518,Lea59846, Sub74050), 
LRes83331 = reshape_layer(Sub74050, [6, 4, 12], Res83331), 
LSub13349 = subtract_layer([[[[0.3611, 0.7698], [0.0255, 0.4387], [0.3234, 0.434]], [[0.8881, 0.0244], [0.0835, 0.7879], [0.5326, 0.0042]], [[0.8874, 0.086], [0.9677, 0.1796], [0.6967, 0.6658]]]], [[[[0.6273, 0.8634], [0.637, 0.516], [0.5199, 0.091]], [[0.495, 0.9265], [0.9184, 0.448], [0.922, 0.0897]], [[0.0532, 0.9694], [0.8349, 0.4825], [0.1791, 0.7353]]]], Sub13349), 
LZer78732 = zero_padding2D_layer(Sub13349, 3, 0, 1, 0, Zer78732), 
LCon69048 = concatenate_layer([Zer78732,[[[[0.2258, 0.0806, 0.773, 0.344, 0.7692, 0.7716, 0.346, 0.1183, 0.6551, 0.4162], [0.958, 0.612, 0.4027, 0.2229, 0.754, 0.6189, 0.5246, 0.4847, 0.2371, 0.7802], [0.0442, 0.2077, 0.262, 0.0164, 0.9405, 0.5604, 0.7873, 0.629, 0.2757, 0.3386], [0.77, 0.6032, 0.9639, 0.5679, 0.8059, 0.2123, 0.6257, 0.8324, 0.1211, 0.6274]], [[0.738, 0.906, 0.3009, 0.87, 0.3398, 0.7913, 0.7073, 0.1098, 0.8797, 0.3258], [0.8805, 0.0067, 0.4038, 0.0999, 0.3439, 0.5224, 0.1739, 0.5526, 0.1432, 0.3887], [0.9784, 0.7577, 0.1353, 0.2053, 0.8519, 0.5946, 0.5131, 0.9647, 0.6566, 0.7116], [0.3052, 0.6538, 0.9924, 0.9285, 0.6192, 0.4628, 0.2039, 0.5054, 0.2123, 0.0521]], [[0.8281, 0.0044, 0.5671, 0.2686, 0.6903, 0.3128, 0.0264, 0.6843, 0.9938, 0.761], [0.6991, 0.3381, 0.1758, 0.1699, 0.7855, 0.0999, 0.0016, 0.0922, 0.6923, 0.1494], [0.3588, 0.4741, 0.8081, 0.1645, 0.477, 0.4574, 0.0903, 0.9462, 0.8469, 0.0657], [0.6821, 0.3735, 0.9428, 0.0755, 0.6178, 0.7787, 0.9619, 0.4579, 0.3045, 0.0577]], [[0.185, 0.396, 0.875, 0.0942, 0.2379, 0.0331, 0.6923, 0.3601, 0.485, 0.7861], [0.2599, 0.8822, 0.0224, 0.2702, 0.5398, 0.1126, 0.2556, 0.6275, 0.215, 0.6276], [0.8422, 0.3205, 0.7432, 0.9921, 0.8634, 0.2635, 0.1479, 0.5761, 0.4421, 0.4978], [0.3652, 0.5834, 0.6747, 0.4863, 0.6221, 0.0654, 0.6585, 0.5006, 0.7641, 0.2296]], [[0.6087, 0.5092, 0.6654, 0.9263, 0.5367, 0.4301, 0.8574, 0.7977, 0.7343, 0.6116], [0.2955, 0.208, 0.3527, 0.9234, 0.7442, 0.739, 0.6945, 0.9006, 0.6078, 0.7302], [0.4497, 0.9664, 0.1591, 0.0723, 0.9945, 0.8797, 0.0254, 0.218, 0.0488, 0.2031], [0.4798, 0.1702, 0.4382, 0.7655, 0.5571, 0.0212, 0.4452, 0.8084, 0.2605, 0.4761]], [[0.2485, 0.7454, 0.1628, 0.6734, 0.2487, 0.2404, 0.5151, 0.5312, 0.6562, 0.616], [0.5723, 0.7952, 0.5796, 0.438, 0.2218, 0.9412, 0.9927, 0.4942, 0.1563, 0.0933], [0.3805, 0.2809, 0.7724, 0.1601, 0.5725, 0.5435, 0.6967, 0.4614, 0.2521, 0.3793], [0.3381, 0.2214, 0.8995, 0.9043, 0.1543, 0.4366, 0.4763, 0.5071, 0.3756, 0.7949]]]]], 3, Con69048), 
LMin59825 = minimum_layer([Res83331,Con69048], Min59825), 
LRes38769 = reshape_layer(Min59825, [6, 48], Res38769), 
LCro11853 = cropping1D_layer(Res38769, 4, 0, Cro11853), 
exec_layers([LPRe26616,LAve94282,LRes56293,LRes81142,LZer86140,LCon2518,LGlo13979,LRes92771,LRes96381,LRes86665,LZer91759,LCon56986,LZer93110,LMul68583,LLea59846,LSub74050,LRes83331,LSub13349,LZer78732,LCon69048,LMin59825,LRes38769,LCro11853],["PRe26616","Ave94282","Res56293","Res81142","Zer86140","Con2518","Glo13979","Res92771","Res96381","Res86665","Zer91759","Con56986","Zer93110","Mul68583","Lea59846","Sub74050","Res83331","Sub13349","Zer78732","Con69048","Min59825","Res38769","Cro11853"],Cro11853,"Cro11853")

Actual (Unparsed): [[[0.0000000, 0.0000000, 0.0000000, 0.1796000, 0.0000000, 0.5933000, 0.0000000, 0.4301000, 0.0000000, 0.7777000, 0.0000000, 0.2526000, 0.0000000, -0.9021000, 0.0000000, -0.5487139, 0.0000000, -0.9264151, 0.0000000, 0.0829932, 0.0000000, -0.0217569, 0.0000000, 0.2974000, -0.8349000, 0.1275000, 0.0000000, 0.0040709, 0.0000000, 0.0723000, 0.0000000, -0.4523640, 0.0000000, 0.2180000, 0.0000000, 0.0126000, -0.3894000, -0.0855000, 0.0000000, 0.1702000, 0.0000000, 0.7655000, 0.0000000, 0.0212000, 0.0000000, 0.4234000, 0.0000000, 0.2573000], [0.0000000, 0.0000000, 0.0000000, 0.0098000, 0.0000000, 0.2499000, 0.0000000, 0.2404000, 0.0000000, 0.4340000, 0.0000000, 0.6160000, 0.0000000, -0.8834000, 0.0000000, 0.2189000, 0.0000000, 0.4380000, 0.0000000, 0.5931000, 0.0000000, 0.0508000, 0.0000000, 0.0933000, 0.0000000, -0.3029000, 0.0000000, 0.2809000, 0.0000000, 0.1601000, 0.0000000, 0.5435000, 0.0000000, 0.4614000, 0.2521000, 0.3793000, 0.0000000, -0.0695000, 0.0000000, 0.2214000, 0.0000000, 0.0293000, 0.0000000, 0.0348000, 0.0000000, 0.0909000, 0.2230000, 0.4427000]]]

Expected (Unparsed): [[[0,0,0,0.1796,0,0.5933,0,0.4301,0,0.7777,0,0.2526,0,-0.9021,0.0,-0.5487138999999999,0.0,-0.9264150900000001,0.0,0.08299330999999999,0.0,-0.021756960000000047,0,0.2974,-0.8349,0.1275,0.0,0.004070899999999988,0.0,0.0723,0.0,-0.452364,0.0,0.218,0,0.0126,-0.3894000000000001,-0.0855,0,0.1702,0,0.7655,0,0.0212,0,0.4234,0,0.2573],[0,0,0,0.0098,0,0.2499,0,0.2404,0,0.434,0,0.616,0,-0.8834000000000001,0,0.2189,0,0.438,0,0.5931,0,0.0508,0,0.0933,0,-0.30289999999999995,0,0.2809,0,0.1601,0,0.5435,0,0.4614,0.2521,0.3793,0,-0.0695,0,0.2214,0,0.0293,0,0.0348,0,0.0909,0.223,0.4427]]]

Actual:   [[[0, 0, 0, 0.1796, 0, 0.5933, 0, 0.4301, 0, 0.7777, 0, 0.2526, 0, -0.9021, 0, -0.5487, 0, -0.9264, 0, 0.083, 0, -0.0217, 0, 0.2974, -0.8349, 0.1275, 0, 0.0041, 0, 0.0723, 0, -0.4523, 0, 0.218, 0, 0.0126, -0.3894, -0.0855, 0, 0.1702, 0, 0.7655, 0, 0.0212, 0, 0.4234, 0, 0.2573], [0, 0, 0, 0.0098, 0, 0.2499, 0, 0.2404, 0, 0.434, 0, 0.616, 0, -0.8834, 0, 0.2189, 0, 0.438, 0, 0.5931, 0, 0.0508, 0, 0.0933, 0, -0.3029, 0, 0.2809, 0, 0.1601, 0, 0.5435, 0, 0.4614, 0.2521, 0.3793, 0, -0.0695, 0, 0.2214, 0, 0.0293, 0, 0.0348, 0, 0.0909, 0.223, 0.4427]]]

Expected: [[[0, 0, 0, 0.1796, 0, 0.5933, 0, 0.4301, 0, 0.7777, 0, 0.2526, 0, -0.9021, 0, -0.5487, 0, -0.9264, 0, 0.083, 0, -0.0217, 0, 0.2974, -0.8349, 0.1275, 0, 0.0041, 0, 0.0723, 0, -0.4523, 0, 0.218, 0, 0.0126, -0.3894, -0.0855, 0, 0.1702, 0, 0.7655, 0, 0.0212, 0, 0.4234, 0, 0.2573], [0, 0, 0, 0.0098, 0, 0.2499, 0, 0.2404, 0, 0.434, 0, 0.616, 0, -0.8834, 0, 0.2189, 0, 0.438, 0, 0.5931, 0, 0.0508, 0, 0.0933, 0, -0.3028, 0, 0.2809, 0, 0.1601, 0, 0.5435, 0, 0.4614, 0.2521, 0.3793, 0, -0.0695, 0, 0.2214, 0, 0.0293, 0, 0.0348, 0, 0.0909, 0.223, 0.4427]]]