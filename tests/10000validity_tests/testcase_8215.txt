import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Mul65710 = tf.keras.layers.Input(shape=([2, 1, 2]))
in1Mul65710 = tf.keras.layers.Input(shape=([2, 1, 2]))
in0Den56307 = tf.keras.layers.Input(shape=([5, 5]))
in0Con41980 = tf.keras.layers.Input(shape=([5, 1]))

Mul65710 = keras.layers.Multiply(name = 'Mul65710', )([in0Mul65710,in1Mul65710])
Res52571 = keras.layers.Reshape((2, 2), name = 'Res52571', )(Mul65710)
Zer88696 = keras.layers.ZeroPadding1D(padding=((3, 0)), name = 'Zer88696', )(Res52571)
Den56307 = keras.layers.Dense(1,name = 'Den56307', )(in0Den56307)
Con41980 = keras.layers.Concatenate(axis=2, name = 'Con41980', )([Den56307,in0Con41980])
Max68599 = keras.layers.Maximum(name = 'Max68599', )([Zer88696,Con41980])
model = tf.keras.models.Model(inputs=[in0Mul65710,in1Mul65710,in0Den56307,in0Con41980], outputs=Max68599)
w = model.get_layer('Den56307').get_weights() 
w[0] = np.array([[0.869], [0.5576], [0.0425], [0.0057], [0.5109]])
w[1] = np.array([0.38])
model.get_layer('Den56307').set_weights(w) 
in0Mul65710 = tf.constant([[[[0.5718, 0.3897]], [[0.0987, 0.9424]]]])
in1Mul65710 = tf.constant([[[[0.056, 0.5903]], [[0.7565, 0.6619]]]])
in0Den56307 = tf.constant([[[0.478, 0.0232, 0.5433, 0.9626, 0.808], [0.6573, 0.8433, 0.1587, 0.5522, 0.7999], [0.3445, 0.3604, 0.1259, 0.2739, 0.3193], [0.1172, 0.6459, 0.7872, 0.9566, 0.3005], [0.6224, 0.3997, 0.8012, 0.9283, 0.7838]]])
in0Con41980 = tf.constant([[[0.2763], [0.6494], [0.9379], [0.5737], [0.2981]]])
print (np.array2string(model.predict([in0Mul65710,in1Mul65710,in0Den56307,in0Con41980],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Max68599.png')

LMul65710 = multiply_layer([[[[[0.5718, 0.3897]], [[0.0987, 0.9424]]]], [[[[0.056, 0.5903]], [[0.7565, 0.6619]]]]], Mul65710), 
LRes52571 = reshape_layer(Mul65710, [2, 2], Res52571), 
LZer88696 = zero_padding1D_layer(Res52571, 3, 0, Zer88696), 
LDen56307 = dense_layer([[[0.478, 0.0232, 0.5433, 0.9626, 0.808], [0.6573, 0.8433, 0.1587, 0.5522, 0.7999], [0.3445, 0.3604, 0.1259, 0.2739, 0.3193], [0.1172, 0.6459, 0.7872, 0.9566, 0.3005], [0.6224, 0.3997, 0.8012, 0.9283, 0.7838]]], [[0.869], [0.5576], [0.0425], [0.0057], [0.5109]],[0.38], Den56307), 
LCon41980 = concatenate_layer([Den56307,[[[0.2763], [0.6494], [0.9379], [0.5737], [0.2981]]]], 2, Con41980), 
LMax68599 = maximum_layer([Zer88696,Con41980], Max68599), 
exec_layers([LMul65710,LRes52571,LZer88696,LDen56307,LCon41980,LMax68599],["Mul65710","Res52571","Zer88696","Den56307","Con41980","Max68599"],Max68599,"Max68599")

Actual (Unparsed): [[[1.2497026, 0.2763000], [1.8399790, 0.6494000], [1.0503719, 0.9379000], [1.0344347, 0.5737000], [1.5835240, 0.6237745]]]

Expected (Unparsed): [[[1.24970259,0.2763],[1.8399789800000002,0.6494],[1.0503718899999999,0.9379],[1.03443471,0.5737],[1.58352405,0.6237745600000001]]]

Actual:   [[[1.2498, 0.2763], [1.84, 0.6494], [1.0504, 0.9379], [1.0345, 0.5737], [1.5836, 0.6238]]]

Expected: [[[1.2498, 0.2763], [1.84, 0.6494], [1.0504, 0.9379], [1.0345, 0.5737], [1.5836, 0.6238]]]