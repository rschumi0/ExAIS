import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Ave20143 = tf.keras.layers.Input(shape=([1, 2, 1]))
in1Ave20143 = tf.keras.layers.Input(shape=([1, 2, 1]))
in0Con66109 = tf.keras.layers.Input(shape=([3, 2, 2]))
in0Den86778 = tf.keras.layers.Input(shape=([2, 2, 5]))
in0Mul39626 = tf.keras.layers.Input(shape=([2, 1]))
in1Mul39626 = tf.keras.layers.Input(shape=([2, 1]))
in0Con44613 = tf.keras.layers.Input(shape=([2, 1]))
in0Mul51823 = tf.keras.layers.Input(shape=([1, 2]))
in1Mul51823 = tf.keras.layers.Input(shape=([1, 2]))
in0Con5022 = tf.keras.layers.Input(shape=([3, 4]))
in0Sub96671 = tf.keras.layers.Input(shape=([2]))
in1Sub96671 = tf.keras.layers.Input(shape=([2]))
in0Con47590 = tf.keras.layers.Input(shape=([3, 5]))

Ave20143 = keras.layers.Average(name = 'Ave20143', )([in0Ave20143,in1Ave20143])
Res41671 = keras.layers.Reshape((1, 2), name = 'Res41671', )(Ave20143)
Zer26544 = keras.layers.ZeroPadding1D(padding=((1, 1)), name = 'Zer26544', )(Res41671)
Res49103 = keras.layers.Reshape((3, 2, 1), name = 'Res49103', )(Zer26544)
Con66109 = keras.layers.Concatenate(axis=3, name = 'Con66109', )([Res49103,in0Con66109])
Den86778 = keras.layers.Dense(3,name = 'Den86778', )(in0Den86778)
Zer76814 = keras.layers.ZeroPadding2D(padding=((1, 0), (0, 0)), name = 'Zer76814', )(Den86778)
Mul47698 = keras.layers.Multiply(name = 'Mul47698', )([Con66109,Zer76814])
Res76671 = keras.layers.Reshape((3, 6), name = 'Res76671', )(Mul47698)
Mul39626 = keras.layers.Multiply(name = 'Mul39626', )([in0Mul39626,in1Mul39626])
Ave72216 = keras.layers.AveragePooling1D(pool_size=(1), name = 'Ave72216', )(Mul39626)
Con44613 = keras.layers.Concatenate(axis=2, name = 'Con44613', )([Ave72216,in0Con44613])
Mul51823 = keras.layers.Multiply(name = 'Mul51823', )([in0Mul51823,in1Mul51823])
Zer65967 = keras.layers.ZeroPadding1D(padding=((1, 0)), name = 'Zer65967', )(Mul51823)
Sub68031 = keras.layers.Subtract(name = 'Sub68031', )([Con44613,Zer65967])
Zer53262 = keras.layers.ZeroPadding1D(padding=((1, 0)), name = 'Zer53262', )(Sub68031)
Con5022 = keras.layers.Concatenate(axis=2, name = 'Con5022', )([Zer53262,in0Con5022])
Sub34865 = keras.layers.Subtract(name = 'Sub34865', )([Res76671,Con5022])
Sub96671 = keras.layers.Subtract(name = 'Sub96671', )([in0Sub96671,in1Sub96671])
Res52195 = keras.layers.Reshape((2, 1), name = 'Res52195', )(Sub96671)
Max78210 = keras.layers.MaxPool1D(pool_size=(1), name = 'Max78210', )(Res52195)
Zer45426 = keras.layers.ZeroPadding1D(padding=((1, 0)), name = 'Zer45426', )(Max78210)
Con47590 = keras.layers.Concatenate(axis=2, name = 'Con47590', )([Zer45426,in0Con47590])
Add63390 = keras.layers.Add(name = 'Add63390', )([Sub34865,Con47590])
model = tf.keras.models.Model(inputs=[in0Ave20143,in1Ave20143,in0Con66109,in0Den86778,in0Mul39626,in1Mul39626,in0Con44613,in0Mul51823,in1Mul51823,in0Con5022,in0Sub96671,in1Sub96671,in0Con47590], outputs=Add63390)
w = model.get_layer('Den86778').get_weights() 
w[0] = np.array([[0.4467, 0.5783, 0.6998], [0.3627, 0.4711, 0.9128], [0.2903, 0.4739, 0.6487], [0.9048, 0.7901, 0.6339], [0.3143, 0.5796, 0.3637]])
w[1] = np.array([0.1565, 0.7871, 0.2429])
model.get_layer('Den86778').set_weights(w) 
in0Ave20143 = tf.constant([[[[0.3269], [0.3268]]]])
in1Ave20143 = tf.constant([[[[0.5244], [0.3979]]]])
in0Con66109 = tf.constant([[[[0.5618, 0.4572], [0.1227, 0.842]], [[0.4419, 0.0776], [0.0776, 0.6572]], [[0.3318, 0.8751], [0.7557, 0.3657]]]])
in0Den86778 = tf.constant([[[[0.4512, 0.7957, 0.8842, 0.1642, 0.9806], [0.0985, 0.468, 0.9083, 0.4056, 0.1058]], [[0.8024, 0.569, 0.371, 0.1361, 0.5789], [0.1058, 0.5468, 0.7595, 0.4177, 0.2733]]]])
in0Mul39626 = tf.constant([[[0.6144], [0.9105]]])
in1Mul39626 = tf.constant([[[0.0104], [0.0379]]])
in0Con44613 = tf.constant([[[0.5751], [0.1767]]])
in0Mul51823 = tf.constant([[[0.8786, 0.589]]])
in1Mul51823 = tf.constant([[[0.5778, 0.1322]]])
in0Con5022 = tf.constant([[[0.0828, 0.1377, 0.4788, 0.8423], [0.3068, 0.9669, 0.7873, 0.7175], [0.661, 0.5247, 0.3389, 0.2842]]])
in0Sub96671 = tf.constant([[0.098, 0.6499]])
in1Sub96671 = tf.constant([[0.7435, 0.6598]])
in0Con47590 = tf.constant([[[0.2927, 0.4932, 0.9905, 0.693, 0.8207], [0.2804, 0.9463, 0.1439, 0.3723, 0.5225], [0.8772, 0.2898, 0.9499, 0.038, 0.3263]]])
print (np.array2string(model.predict([in0Ave20143,in1Ave20143,in0Con66109,in0Den86778,in0Mul39626,in1Mul39626,in0Con44613,in0Mul51823,in1Mul51823,in0Con5022,in0Sub96671,in1Sub96671,in0Con47590],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Add63390.png')

LAve20143 = average_layer([[[[[0.3269], [0.3268]]]], [[[[0.5244], [0.3979]]]]], Ave20143), 
LRes41671 = reshape_layer(Ave20143, [1, 2], Res41671), 
LZer26544 = zero_padding1D_layer(Res41671, 1, 1, Zer26544), 
LRes49103 = reshape_layer(Zer26544, [3, 2, 1], Res49103), 
LCon66109 = concatenate_layer([Res49103,[[[[0.5618, 0.4572], [0.1227, 0.842]], [[0.4419, 0.0776], [0.0776, 0.6572]], [[0.3318, 0.8751], [0.7557, 0.3657]]]]], 3, Con66109), 
LDen86778 = dense_layer([[[[0.4512, 0.7957, 0.8842, 0.1642, 0.9806], [0.0985, 0.468, 0.9083, 0.4056, 0.1058]], [[0.8024, 0.569, 0.371, 0.1361, 0.5789], [0.1058, 0.5468, 0.7595, 0.4177, 0.2733]]]], [[0.4467, 0.5783, 0.6998], [0.3627, 0.4711, 0.9128], [0.2903, 0.4739, 0.6487], [0.9048, 0.7901, 0.6339], [0.3143, 0.5796, 0.3637]],[0.1565, 0.7871, 0.2429], Den86778), 
LZer76814 = zero_padding2D_layer(Den86778, 1, 0, 0, 0, Zer76814), 
LMul47698 = multiply_layer([Con66109,Zer76814], Mul47698), 
LRes76671 = reshape_layer(Mul47698, [3, 6], Res76671), 
LMul39626 = multiply_layer([[[[0.6144], [0.9105]]], [[[0.0104], [0.0379]]]], Mul39626), 
LAve72216 = average_pooling1D_layer(Mul39626, 1, Ave72216), 
LCon44613 = concatenate_layer([Ave72216,[[[0.5751], [0.1767]]]], 2, Con44613), 
LMul51823 = multiply_layer([[[[0.8786, 0.589]]], [[[0.5778, 0.1322]]]], Mul51823), 
LZer65967 = zero_padding1D_layer(Mul51823, 1, 0, Zer65967), 
LSub68031 = subtract_layer(Con44613,Zer65967, Sub68031), 
LZer53262 = zero_padding1D_layer(Sub68031, 1, 0, Zer53262), 
LCon5022 = concatenate_layer([Zer53262,[[[0.0828, 0.1377, 0.4788, 0.8423], [0.3068, 0.9669, 0.7873, 0.7175], [0.661, 0.5247, 0.3389, 0.2842]]]], 2, Con5022), 
LSub34865 = subtract_layer(Res76671,Con5022, Sub34865), 
LSub96671 = subtract_layer([[0.098, 0.6499]], [[0.7435, 0.6598]], Sub96671), 
LRes52195 = reshape_layer(Sub96671, [2, 1], Res52195), 
LMax78210 = max_pool1D_layer(Res52195, 1, Max78210), 
LZer45426 = zero_padding1D_layer(Max78210, 1, 0, Zer45426), 
LCon47590 = concatenate_layer([Zer45426,[[[0.2927, 0.4932, 0.9905, 0.693, 0.8207], [0.2804, 0.9463, 0.1439, 0.3723, 0.5225], [0.8772, 0.2898, 0.9499, 0.038, 0.3263]]]], 2, Con47590), 
LAdd63390 = add_layer([Sub34865,Con47590], Add63390), 
exec_layers([LAve20143,LRes41671,LZer26544,LRes49103,LCon66109,LDen86778,LZer76814,LMul47698,LRes76671,LMul39626,LAve72216,LCon44613,LMul51823,LZer65967,LSub68031,LZer53262,LCon5022,LSub34865,LSub96671,LRes52195,LMax78210,LZer45426,LCon47590,LAdd63390],["Ave20143","Res41671","Zer26544","Res49103","Con66109","Den86778","Zer76814","Mul47698","Res76671","Mul39626","Ave72216","Con44613","Mul51823","Zer65967","Sub68031","Zer53262","Con5022","Sub34865","Sub96671","Res52195","Max78210","Zer45426","Con47590","Add63390"],Add63390,"Add63390")

Actual (Unparsed): [[[0.0000000, 0.2927000, 0.4104000, 0.8528000, 0.2142000, -0.0216000], [-0.0729609, 0.8277242, 0.8194758, -0.4482711, -0.2693629, 0.8721772], [0.4632471, 1.4877754, 1.2576150, 0.4252000, 1.1759177, 0.6538886]]]

Expected (Unparsed): [[[0,0.2927,0.41040000000000004,0.8528,0.21419999999999995,-0.021600000000000064],[-0.07296088372050014,0.827724139601,0.8194758067360001,-0.44827108767900004,-0.26936288390399993,0.8721772708119999],[0.46324713,1.487775358886,1.2576150015139995,0.4251999999999999,1.1759177472840003,0.653888588389]]]

Actual:   [[[0, 0.2927, 0.4104, 0.8528, 0.2142, -0.0216], [-0.0729, 0.8278, 0.8195, -0.4482, -0.2693, 0.8722], [0.4633, 1.4878, 1.2577, 0.4252, 1.176, 0.6539]]]

Expected: [[[0, 0.2927, 0.4105, 0.8528, 0.2142, -0.0216], [-0.0729, 0.8278, 0.8195, -0.4482, -0.2693, 0.8722], [0.4633, 1.4878, 1.2577, 0.4252, 1.176, 0.6539]]]