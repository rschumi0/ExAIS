import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Mul56278 = tf.keras.layers.Input(shape=([1, 2]))
in1Mul56278 = tf.keras.layers.Input(shape=([1, 2]))

Mul56278 = keras.layers.Multiply(name = 'Mul56278', )([in0Mul56278,in1Mul56278])
Res87542 = keras.layers.Reshape((1, 2, 1), name = 'Res87542', )(Mul56278)
Res80409 = keras.layers.Reshape((1, 2, 1, 1), name = 'Res80409', )(Res87542)
Zer24735 = keras.layers.ZeroPadding3D(padding=((1, 1), (1, 1), (1, 1)), name = 'Zer24735', )(Res80409)
model = tf.keras.models.Model(inputs=[in0Mul56278,in1Mul56278], outputs=Zer24735)
in0Mul56278 = tf.constant([[[0.338, 0.6595]]])
in1Mul56278 = tf.constant([[[0.4369, 0.4666]]])
print (np.array2string(model.predict([in0Mul56278,in1Mul56278],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Zer24735.png')

LMul56278 = multiply_layer([[[[0.338, 0.6595]]], [[[0.4369, 0.4666]]]], Mul56278), 
LRes87542 = reshape_layer(Mul56278, [1, 2, 1], Res87542), 
LRes80409 = reshape_layer(Res87542, [1, 2, 1, 1], Res80409), 
LZer24735 = zero_padding3D_layer(Res80409, 1, 1, 1, 1, 1, 1, Zer24735), 
exec_layers([LMul56278,LRes87542,LRes80409,LZer24735],["Mul56278","Res87542","Res80409","Zer24735"],Zer24735,"Zer24735")

Actual (Unparsed): [[[[[0.0000000], [0.0000000], [0.0000000]], [[0.0000000], [0.0000000], [0.0000000]], [[0.0000000], [0.0000000], [0.0000000]], [[0.0000000], [0.0000000], [0.0000000]]], [[[0.0000000], [0.0000000], [0.0000000]], [[0.0000000], [0.1476722], [0.0000000]], [[0.0000000], [0.3077227], [0.0000000]], [[0.0000000], [0.0000000], [0.0000000]]], [[[0.0000000], [0.0000000], [0.0000000]], [[0.0000000], [0.0000000], [0.0000000]], [[0.0000000], [0.0000000], [0.0000000]], [[0.0000000], [0.0000000], [0.0000000]]]]]

Expected (Unparsed): [[[[[0],[0],[0]],[[0],[0],[0]],[[0],[0],[0]],[[0],[0],[0]]],[[[0],[0],[0]],[[0],[0.1476722],[0]],[[0],[0.3077227],[0]],[[0],[0],[0]]],[[[0],[0],[0]],[[0],[0],[0]],[[0],[0],[0]],[[0],[0],[0]]]]]

Actual:   [[[[[0], [0], [0]], [[0], [0], [0]], [[0], [0], [0]], [[0], [0], [0]]], [[[0], [0], [0]], [[0], [0.1477], [0]], [[0], [0.3078], [0]], [[0], [0], [0]]], [[[0], [0], [0]], [[0], [0], [0]], [[0], [0], [0]], [[0], [0], [0]]]]]

Expected: [[[[[0], [0], [0]], [[0], [0], [0]], [[0], [0], [0]], [[0], [0], [0]]], [[[0], [0], [0]], [[0], [0.1477], [0]], [[0], [0.3078], [0]], [[0], [0], [0]]], [[[0], [0], [0]], [[0], [0], [0]], [[0], [0], [0]], [[0], [0], [0]]]]]