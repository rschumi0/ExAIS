import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Dot23997 = tf.keras.layers.Input(shape=([3]))
in1Dot23997 = tf.keras.layers.Input(shape=([3]))
in0Con69674 = tf.keras.layers.Input(shape=([2, 2, 7, 1]))
in0Min34112 = tf.keras.layers.Input(shape=([2, 2, 1, 2]))
in1Min34112 = tf.keras.layers.Input(shape=([2, 2, 1, 2]))

Dot23997 = keras.layers.Dot(axes=(1, 1), name = 'Dot23997', )([in0Dot23997,in1Dot23997])
Res97867 = keras.layers.Reshape((1, 1), name = 'Res97867', )(Dot23997)
Res33247 = keras.layers.Reshape((1, 1, 1), name = 'Res33247', )(Res97867)
Con65387 = keras.layers.Conv2DTranspose(4, (1, 1),strides=(1, 1), padding='same', name = 'Con65387', )(Res33247)
Res78963 = keras.layers.Reshape((1, 1, 4, 1), name = 'Res78963', )(Con65387)
Zer51686 = keras.layers.ZeroPadding3D(padding=((1, 0), (1, 0), (3, 0)), name = 'Zer51686', )(Res78963)
Con69674 = keras.layers.Concatenate(axis=4, name = 'Con69674', )([Zer51686,in0Con69674])
Min34112 = keras.layers.Minimum(name = 'Min34112', )([in0Min34112,in1Min34112])
Zer5743 = keras.layers.ZeroPadding3D(padding=((0, 0), (0, 0), (6, 0)), name = 'Zer5743', )(Min34112)
Max28129 = keras.layers.Maximum(name = 'Max28129', )([Con69674,Zer5743])
model = tf.keras.models.Model(inputs=[in0Dot23997,in1Dot23997,in0Con69674,in0Min34112,in1Min34112], outputs=Max28129)
w = model.get_layer('Con65387').get_weights() 
w[0] = np.array([[[[0.1236], [0.5949], [0.9335], [0.029]]]])
w[1] = np.array([0, 0, 0, 0])
model.get_layer('Con65387').set_weights(w) 
in0Dot23997 = tf.constant([[0.7277, 0.0176, 0.8925]])
in1Dot23997 = tf.constant([[0.5471, 0.8031, 0.5741]])
in0Con69674 = tf.constant([[[[[0.3389], [0.5422], [0.533], [0.9409], [0.2092], [0.0781], [0.7098]], [[0.4844], [0.7034], [0.2878], [0.7249], [0.7677], [0.4906], [0.5337]]], [[[0.857], [0.0676], [0.4347], [0.2621], [0.4624], [0.9924], [0.4605]], [[0.0756], [0.7169], [0.2377], [0.824], [0.7218], [0.2601], [0.877]]]]])
in0Min34112 = tf.constant([[[[[0.9339, 0.5473]], [[0.5212, 0.0469]]], [[[0.5621, 0.8442]], [[0.1546, 0.348]]]]])
in1Min34112 = tf.constant([[[[[0.7398, 0.2879]], [[0.2316, 0.2607]]], [[[0.4546, 0.699]], [[0.557, 0.7677]]]]])
print (np.array2string(model.predict([in0Dot23997,in1Dot23997,in0Con69674,in0Min34112,in1Min34112],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Max28129.png')

LDot23997 = dot_layer([[0.7277, 0.0176, 0.8925]], [[0.5471, 0.8031, 0.5741]], 1, 1, Dot23997), 
LRes97867 = reshape_layer(Dot23997, [1, 1], Res97867), 
LRes33247 = reshape_layer(Res97867, [1, 1, 1], Res33247), 
LCon65387 = conv2D_transpose_layer(Res33247, 1, 1,[[[[0.1236], [0.5949], [0.9335], [0.029]]]],[0, 0, 0, 0], 1, 1, true, Con65387), 
LRes78963 = reshape_layer(Con65387, [1, 1, 4, 1], Res78963), 
LZer51686 = zero_padding3D_layer(Res78963, 1, 0, 1, 0, 3, 0, Zer51686), 
LCon69674 = concatenate_layer([Zer51686,[[[[[0.3389], [0.5422], [0.533], [0.9409], [0.2092], [0.0781], [0.7098]], [[0.4844], [0.7034], [0.2878], [0.7249], [0.7677], [0.4906], [0.5337]]], [[[0.857], [0.0676], [0.4347], [0.2621], [0.4624], [0.9924], [0.4605]], [[0.0756], [0.7169], [0.2377], [0.824], [0.7218], [0.2601], [0.877]]]]]], 4, Con69674), 
LMin34112 = minimum_layer([[[[[[0.9339, 0.5473]], [[0.5212, 0.0469]]], [[[0.5621, 0.8442]], [[0.1546, 0.348]]]]], [[[[[0.7398, 0.2879]], [[0.2316, 0.2607]]], [[[0.4546, 0.699]], [[0.557, 0.7677]]]]]], Min34112), 
LZer5743 = zero_padding3D_layer(Min34112, 0, 0, 0, 0, 6, 0, Zer5743), 
LMax28129 = maximum_layer([Con69674,Zer5743], Max28129), 
exec_layers([LDot23997,LRes97867,LRes33247,LCon65387,LRes78963,LZer51686,LCon69674,LMin34112,LZer5743,LMax28129],["Dot23997","Res97867","Res33247","Con65387","Res78963","Zer51686","Con69674","Min34112","Zer5743","Max28129"],Max28129,"Max28129")

Actual (Unparsed): [[[[[0.0000000, 0.3389000], [0.0000000, 0.5422000], [0.0000000, 0.5330000], [0.0000000, 0.9409000], [0.0000000, 0.2092000], [0.0000000, 0.0781000], [0.7398000, 0.7098000]], [[0.0000000, 0.4844000], [0.0000000, 0.7034000], [0.0000000, 0.2878000], [0.0000000, 0.7249000], [0.0000000, 0.7677000], [0.0000000, 0.4906000], [0.2316000, 0.5337000]]], [[[0.0000000, 0.8570000], [0.0000000, 0.0676000], [0.0000000, 0.4347000], [0.0000000, 0.2621000], [0.0000000, 0.4624000], [0.0000000, 0.9924000], [0.4546000, 0.6990000]], [[0.0000000, 0.0756000], [0.0000000, 0.7169000], [0.0000000, 0.2377000], [0.1142859, 0.8240000], [0.5500704, 0.7218000], [0.8631547, 0.2601000], [0.1546000, 0.8770000]]]]]

Expected (Unparsed): [[[[[0,0.3389],[0,0.5422],[0,0.533],[0,0.9409],[0,0.2092],[0,0.0781],[0.7398,0.7098]],[[0,0.4844],[0,0.7034],[0,0.2878],[0,0.7249],[0,0.7677],[0,0.4906],[0.2316,0.5337]]],[[[0,0.857],[0,0.0676],[0,0.4347],[0,0.2621],[0,0.4624],[0,0.9924],[0.4546,0.699]],[[0,0.0756],[0,0.7169],[0,0.2377],[0.114285934128,0.824],[0.550070406252,0.7218],[0.8631546885800001,0.2601],[0.1546,0.877]]]]]

Actual:   [[[[[0, 0.3389], [0, 0.5422], [0, 0.533], [0, 0.9409], [0, 0.2092], [0, 0.0781], [0.7398, 0.7098]], [[0, 0.4844], [0, 0.7034], [0, 0.2878], [0, 0.7249], [0, 0.7677], [0, 0.4906], [0.2316, 0.5337]]], [[[0, 0.857], [0, 0.0676], [0, 0.4347], [0, 0.2621], [0, 0.4624], [0, 0.9924], [0.4546, 0.699]], [[0, 0.0756], [0, 0.7169], [0, 0.2377], [0.1143, 0.824], [0.5501, 0.7218], [0.8632, 0.2601], [0.1546, 0.877]]]]]

Expected: [[[[[0, 0.3389], [0, 0.5422], [0, 0.533], [0, 0.9409], [0, 0.2092], [0, 0.0781], [0.7398, 0.7098]], [[0, 0.4844], [0, 0.7034], [0, 0.2878], [0, 0.7249], [0, 0.7677], [0, 0.4906], [0.2316, 0.5337]]], [[[0, 0.857], [0, 0.0676], [0, 0.4347], [0, 0.2621], [0, 0.4624], [0, 0.9924], [0.4546, 0.699]], [[0, 0.0756], [0, 0.7169], [0, 0.2377], [0.1143, 0.824], [0.5501, 0.7218], [0.8632, 0.2601], [0.1546, 0.877]]]]]