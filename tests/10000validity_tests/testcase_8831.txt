import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Min43041 = tf.keras.layers.Input(shape=([2, 1, 2, 1]))
in1Min43041 = tf.keras.layers.Input(shape=([2, 1, 2, 1]))
in0Glo59537 = tf.keras.layers.Input(shape=([2, 1]))

Min43041 = keras.layers.Minimum(name = 'Min43041', )([in0Min43041,in1Min43041])
Res29845 = keras.layers.Reshape((2, 1, 2), name = 'Res29845', )(Min43041)
Ave17315 = keras.layers.AveragePooling2D(pool_size=(1, 1), name = 'Ave17315', )(Res29845)
Res24982 = keras.layers.Reshape((2, 2), name = 'Res24982', )(Ave17315)
Sep15038 = keras.layers.SeparableConv1D(2, (1),strides=(1), padding='valid', name = 'Sep15038', )(Res24982)
Res13915 = keras.layers.Reshape((2, 2, 1), name = 'Res13915', )(Sep15038)
Zer66434 = keras.layers.ZeroPadding2D(padding=((1, 0), (1, 0)), name = 'Zer66434', )(Res13915)
Glo59537 = keras.layers.GlobalMaxPool1D(name = 'Glo59537', )(in0Glo59537)
Fla67104 = keras.layers.Flatten(name = 'Fla67104', )(Glo59537)
Res85838 = keras.layers.Reshape((1, 1), name = 'Res85838', )(Fla67104)
Glo77492 = keras.layers.GlobalMaxPool1D(name = 'Glo77492', )(Res85838)
Res76105 = keras.layers.Reshape((1, 1), name = 'Res76105', )(Glo77492)
Res12011 = keras.layers.Reshape((1, 1, 1), name = 'Res12011', )(Res76105)
Zer89047 = keras.layers.ZeroPadding2D(padding=((1, 1), (1, 1)), name = 'Zer89047', )(Res12011)
Ave40005 = keras.layers.Average(name = 'Ave40005', )([Zer66434,Zer89047])
model = tf.keras.models.Model(inputs=[in0Min43041,in1Min43041,in0Glo59537], outputs=Ave40005)
w = model.get_layer('Sep15038').get_weights() 
w[0] = np.array([[[0.3016], [0.9323]]])
w[1] = np.array([[[0.9617, 0.715], [0.1615, 0.3646]]])
w[2] = np.array([0, 0])
model.get_layer('Sep15038').set_weights(w) 
in0Min43041 = tf.constant([[[[[0.6533], [0.5347]]], [[[0.6], [0.1098]]]]])
in1Min43041 = tf.constant([[[[[0.4641], [0.6843]]], [[[0.001], [0.3706]]]]])
in0Glo59537 = tf.constant([[[1.7871], [1.4357]]])
print (np.array2string(model.predict([in0Min43041,in1Min43041,in0Glo59537],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Ave40005.png')

LMin43041 = minimum_layer([[[[[[0.6533], [0.5347]]], [[[0.6], [0.1098]]]]], [[[[[0.4641], [0.6843]]], [[[0.001], [0.3706]]]]]], Min43041), 
LRes29845 = reshape_layer(Min43041, [2, 1, 2], Res29845), 
LAve17315 = average_pooling2D_layer(Res29845, 1, 1, Ave17315), 
LRes24982 = reshape_layer(Ave17315, [2, 2], Res24982), 
LSep15038 = separable_conv1D_layer(Res24982, 1,[[[[0.3016], [0.9323]]],[[[0.9617, 0.715], [0.1615, 0.3646]]]],[0, 0], 1, false, Sep15038), 
LRes13915 = reshape_layer(Sep15038, [2, 2, 1], Res13915), 
LZer66434 = zero_padding2D_layer(Res13915, 1, 0, 1, 0, Zer66434), 
LGlo59537 = global_max_pool1D_layer([[[1.7871], [1.4357]]], Glo59537), 
LFla67104 = flatten_layer(Glo59537, Fla67104), 
LRes85838 = reshape_layer(Fla67104, [1, 1], Res85838), 
LGlo77492 = global_max_pool1D_layer(Res85838, Glo77492), 
LRes76105 = reshape_layer(Glo77492, [1, 1], Res76105), 
LRes12011 = reshape_layer(Res76105, [1, 1, 1], Res12011), 
LZer89047 = zero_padding2D_layer(Res12011, 1, 1, 1, 1, Zer89047), 
LAve40005 = average_layer([Zer66434,Zer89047], Ave40005), 
exec_layers([LMin43041,LRes29845,LAve17315,LRes24982,LSep15038,LRes13915,LZer66434,LGlo59537,LFla67104,LRes85838,LGlo77492,LRes76105,LRes12011,LZer89047,LAve40005],["Min43041","Res29845","Ave17315","Res24982","Sep15038","Res13915","Zer66434","Glo59537","Fla67104","Res85838","Glo77492","Res76105","Res12011","Zer89047","Ave40005"],Ave40005,"Ave40005")

Actual (Unparsed): [[[[0.0000000], [0.0000000], [0.0000000]], [[0.0000000], [1.0011097], [0.1409169]], [[0.0000000], [0.0084111], [0.0187692]]]]

Expected (Unparsed): [[[[0],[0],[0]],[[0],[1.0011097458834999],[0.140916887863]],[[0],[0.008411122465],[0.018769242242]]]]

Actual:   [[[[0], [0], [0]], [[0], [1.0012], [0.141]], [[0], [0.0085], [0.0188]]]]

Expected: [[[[0], [0], [0]], [[0], [1.0012], [0.141]], [[0], [0.0085], [0.0188]]]]