import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Min85593 = tf.keras.layers.Input(shape=([1, 1, 1, 1]))
in1Min85593 = tf.keras.layers.Input(shape=([1, 1, 1, 1]))

Min85593 = keras.layers.Minimum(name = 'Min85593', )([in0Min85593,in1Min85593])
Res94713 = keras.layers.Reshape((1, 1, 1), name = 'Res94713', )(Min85593)
Loc35669 = keras.layers.LocallyConnected2D(3, (1, 1),strides=(1, 1), name = 'Loc35669', )(Res94713)
Res43056 = keras.layers.Reshape((1, 3), name = 'Res43056', )(Loc35669)
Up_79886 = keras.layers.UpSampling1D(size=(1), name = 'Up_79886', )(Res43056)
model = tf.keras.models.Model(inputs=[in0Min85593,in1Min85593], outputs=Up_79886)
w = model.get_layer('Loc35669').get_weights() 
w[0] = np.array([[[0.287, 0.9062, 0.5475]]])
w[1] = np.array([[[0, 0, 0]]])
model.get_layer('Loc35669').set_weights(w) 
in0Min85593 = tf.constant([[[[[0.0188]]]]])
in1Min85593 = tf.constant([[[[[0.5658]]]]])
print (np.array2string(model.predict([in0Min85593,in1Min85593],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Up_79886.png')

LMin85593 = minimum_layer([[[[[[0.0188]]]]], [[[[[0.5658]]]]]], Min85593), 
LRes94713 = reshape_layer(Min85593, [1, 1, 1], Res94713), 
LLoc35669 = locally_connected2D_layer(Res94713, 1, 1,[[[0.287, 0.9062, 0.5475]]],[[[0, 0, 0]]], 1, 1, Loc35669), 
LRes43056 = reshape_layer(Loc35669, [1, 3], Res43056), 
LUp_79886 = up_sampling1D_layer(Res43056, 1, Up_79886), 
exec_layers([LMin85593,LRes94713,LLoc35669,LRes43056,LUp_79886],["Min85593","Res94713","Loc35669","Res43056","Up_79886"],Up_79886,"Up_79886")

Actual (Unparsed): [[[0.0053956, 0.0170366, 0.0102930]]]

Expected (Unparsed): [[[0.0053955999999999995,0.01703656,0.010293]]]

Actual:   [[[0.0054, 0.0171, 0.0103]]]

Expected: [[[0.0054, 0.0171, 0.0103]]]