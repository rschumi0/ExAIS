import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Dot97332 = tf.keras.layers.Input(shape=([2]))
in1Dot97332 = tf.keras.layers.Input(shape=([2]))

Dot97332 = keras.layers.Dot(axes=(1, 1), name = 'Dot97332', )([in0Dot97332,in1Dot97332])
Res81682 = keras.layers.Reshape((1, 1), name = 'Res81682', )(Dot97332)
Sim14307 = keras.layers.SimpleRNN(1,name = 'Sim14307', )(Res81682)
Sof11230 = keras.layers.Softmax(axis=1, name = 'Sof11230', )(Sim14307)
ELU87471 = keras.layers.ELU(alpha=9.883342834510302, name = 'ELU87471', )(Sof11230)
model = tf.keras.models.Model(inputs=[in0Dot97332,in1Dot97332], outputs=ELU87471)
w = model.get_layer('Sim14307').get_weights() 
w[0] = np.array([[7]])
w[1] = np.array([[6]])
w[2] = np.array([8])
model.get_layer('Sim14307').set_weights(w) 
in0Dot97332 = tf.constant([[0.1702, 0.8374]])
in1Dot97332 = tf.constant([[0.1909, 0.2162]])
print (np.array2string(model.predict([in0Dot97332,in1Dot97332],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='ELU87471.png')

LDot97332 = dot_layer([[0.1702, 0.8374]], [[0.1909, 0.2162]], 1, 1, Dot97332), 
LRes81682 = reshape_layer(Dot97332, [1, 1], Res81682), 
LSim14307 = simple_rnn_layer(Res81682,[[7]],[[6]],[8], Sim14307), 
LSof11230 = softmax_layer(Sim14307, 1, Sof11230), 
LELU87471 = elu_layer(Sof11230, 9.883342834510302, ELU87471), 
exec_layers([LDot97332,LRes81682,LSim14307,LSof11230,LELU87471],["Dot97332","Res81682","Sim14307","Sof11230","ELU87471"],ELU87471,"ELU87471")

Actual (Unparsed): [[1.0000000]]

Expected (Unparsed): [[1.0]]

Actual:   [[1]]

Expected: [[1]]