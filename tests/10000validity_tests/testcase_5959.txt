import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Max39384 = tf.keras.layers.Input(shape=([2, 1]))
in0Max30924 = tf.keras.layers.Input(shape=([2, 2, 2, 2]))
in1Max30924 = tf.keras.layers.Input(shape=([2, 2, 2, 2]))

Max39384 = keras.layers.MaxPool1D(pool_size=(1), name = 'Max39384', )(in0Max39384)
Res35705 = keras.layers.Reshape((2, 1, 1), name = 'Res35705', )(Max39384)
PRe93413 = keras.layers.PReLU(name = 'PRe93413', )(Res35705)
Thr16318 = keras.layers.ThresholdedReLU(theta=6.618606461931883, name = 'Thr16318', )(PRe93413)
Res16851 = keras.layers.Reshape((2, 1), name = 'Res16851', )(Thr16318)
Fla54003 = keras.layers.Flatten(name = 'Fla54003', )(Res16851)
Max30924 = keras.layers.Maximum(name = 'Max30924', )([in0Max30924,in1Max30924])
Res44139 = keras.layers.Reshape((2, 2, 4), name = 'Res44139', )(Max30924)
Res18605 = keras.layers.Reshape((2, 8), name = 'Res18605', )(Res44139)
Sim1284 = keras.layers.SimpleRNN(2,name = 'Sim1284', )(Res18605)
Max39742 = keras.layers.Maximum(name = 'Max39742', )([Fla54003,Sim1284])
model = tf.keras.models.Model(inputs=[in0Max39384,in0Max30924,in1Max30924], outputs=Max39742)
w = model.get_layer('PRe93413').get_weights() 
w[0] = np.array([[[0.5341]], [[0.1392]]])
model.get_layer('PRe93413').set_weights(w) 
w = model.get_layer('Sim1284').get_weights() 
w[0] = np.array([[2, 8], [5, 9], [7, 9], [8, 3], [6, 4], [4, 3], [5, 7], [3, 3]])
w[1] = np.array([[9, 10], [4, 6]])
w[2] = np.array([4, 2])
model.get_layer('Sim1284').set_weights(w) 
in0Max39384 = tf.constant([[[1.8317], [1.1275]]])
in0Max30924 = tf.constant([[[[[0.1307, 0.5208], [0.4651, 0.6433]], [[0.4786, 0.8446], [0.3845, 0.1255]]], [[[0.5549, 0.1713], [0.486, 0.4992]], [[0.1095, 0.4767], [0.8874, 0.7426]]]]])
in1Max30924 = tf.constant([[[[[0.3013, 0.6257], [0.8416, 0.9273]], [[0.6788, 0.5645], [0.0021, 0.2754]]], [[[0.8392, 0.7965], [0.695, 0.6212]], [[0.8969, 0.8665], [0.3153, 0.6611]]]]])
print (np.array2string(model.predict([in0Max39384,in0Max30924,in1Max30924],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Max39742.png')

LMax39384 = max_pool1D_layer([[[1.8317], [1.1275]]], 1, Max39384), 
LRes35705 = reshape_layer(Max39384, [2, 1, 1], Res35705), 
LPRe93413 = prelu_layer(Res35705, [[[0.5341]], [[0.1392]]], PRe93413), 
LThr16318 = thresholded_relu_layer(PRe93413, 6.618606461931883, Thr16318), 
LRes16851 = reshape_layer(Thr16318, [2, 1], Res16851), 
LFla54003 = flatten_layer(Res16851, Fla54003), 
LMax30924 = maximum_layer([[[[[[0.1307, 0.5208], [0.4651, 0.6433]], [[0.4786, 0.8446], [0.3845, 0.1255]]], [[[0.5549, 0.1713], [0.486, 0.4992]], [[0.1095, 0.4767], [0.8874, 0.7426]]]]], [[[[[0.3013, 0.6257], [0.8416, 0.9273]], [[0.6788, 0.5645], [0.0021, 0.2754]]], [[[0.8392, 0.7965], [0.695, 0.6212]], [[0.8969, 0.8665], [0.3153, 0.6611]]]]]], Max30924), 
LRes44139 = reshape_layer(Max30924, [2, 2, 4], Res44139), 
LRes18605 = reshape_layer(Res44139, [2, 8], Res18605), 
LSim1284 = simple_rnn_layer(Res18605,[[2, 8], [5, 9], [7, 9], [8, 3], [6, 4], [4, 3], [5, 7], [3, 3]],[[9, 10], [4, 6]],[4, 2], Sim1284), 
LMax39742 = maximum_layer([Fla54003,Sim1284], Max39742), 
exec_layers([LMax39384,LRes35705,LPRe93413,LThr16318,LRes16851,LFla54003,LMax30924,LRes44139,LRes18605,LSim1284,LMax39742],["Max39384","Res35705","PRe93413","Thr16318","Res16851","Fla54003","Max30924","Res44139","Res18605","Sim1284","Max39742"],Max39742,"Max39742")

Actual (Unparsed): [[1.0000000, 1.0000000]]

Expected (Unparsed): [[1.0,1.0]]

Actual:   [[1, 1]]

Expected: [[1, 1]]