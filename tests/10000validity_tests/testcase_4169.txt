import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Mul18849 = tf.keras.layers.Input(shape=([2, 2, 1, 2]))
in1Mul18849 = tf.keras.layers.Input(shape=([2, 2, 1, 2]))
in0Con13016 = tf.keras.layers.Input(shape=([2, 2, 1]))
in0Sub59152 = tf.keras.layers.Input(shape=([3]))
in1Sub59152 = tf.keras.layers.Input(shape=([3]))
in0Con29951 = tf.keras.layers.Input(shape=([2, 1, 2]))
in0Fla68937 = tf.keras.layers.Input(shape=([3]))

Mul18849 = keras.layers.Multiply(name = 'Mul18849', )([in0Mul18849,in1Mul18849])
Res5918 = keras.layers.Reshape((2, 2, 2), name = 'Res5918', )(Mul18849)
Con13016 = keras.layers.Concatenate(axis=3, name = 'Con13016', )([Res5918,in0Con13016])
Sub59152 = keras.layers.Subtract(name = 'Sub59152', )([in0Sub59152,in1Sub59152])
Res83497 = keras.layers.Reshape((3, 1), name = 'Res83497', )(Sub59152)
Ave97396 = keras.layers.AveragePooling1D(pool_size=(2), strides=(2), padding='valid', name = 'Ave97396', )(Res83497)
Res21910 = keras.layers.Reshape((1, 1, 1), name = 'Res21910', )(Ave97396)
Zer72333 = keras.layers.ZeroPadding2D(padding=((1, 0), (0, 0)), name = 'Zer72333', )(Res21910)
Con29951 = keras.layers.Concatenate(axis=3, name = 'Con29951', )([Zer72333,in0Con29951])
Fla68937 = keras.layers.Flatten(name = 'Fla68937', )(in0Fla68937)
Res27963 = keras.layers.Reshape((3, 1), name = 'Res27963', )(Fla68937)
Res51550 = keras.layers.Reshape((3, 1, 1), name = 'Res51550', )(Res27963)
Sep82449 = keras.layers.SeparableConv2D(3, (1, 1),strides=(2, 2), padding='same', name = 'Sep82449', )(Res51550)
Min25273 = keras.layers.Minimum(name = 'Min25273', )([Con29951,Sep82449])
Zer63545 = keras.layers.ZeroPadding2D(padding=((0, 0), (1, 0)), name = 'Zer63545', )(Min25273)
Max45353 = keras.layers.Maximum(name = 'Max45353', )([Con13016,Zer63545])
model = tf.keras.models.Model(inputs=[in0Mul18849,in1Mul18849,in0Con13016,in0Sub59152,in1Sub59152,in0Con29951,in0Fla68937], outputs=Max45353)
w = model.get_layer('Sep82449').get_weights() 
w[0] = np.array([[[[0.9554]]]])
w[1] = np.array([[[[0.8147, 0.2128, 0.2816]]]])
w[2] = np.array([0, 0, 0])
model.get_layer('Sep82449').set_weights(w) 
in0Mul18849 = tf.constant([[[[[0.1698, 0.8788]], [[0.5867, 0.317]]], [[[0.306, 0.7129]], [[0.1793, 0.3945]]]]])
in1Mul18849 = tf.constant([[[[[0.4698, 0.6219]], [[0.8118, 0.6482]]], [[[0.7347, 0.0441]], [[0.6754, 0.3665]]]]])
in0Con13016 = tf.constant([[[[0.2017], [0.8685]], [[0.8144], [0.6619]]]])
in0Sub59152 = tf.constant([[0.1518, 0.4937, 0.2686]])
in1Sub59152 = tf.constant([[0.1398, 0.7965, 0.1611]])
in0Con29951 = tf.constant([[[[0.1921, 0.1941]], [[0.1782, 0.0093]]]])
in0Fla68937 = tf.constant([[1.6304, 1.4538, 1.717]])
print (np.array2string(model.predict([in0Mul18849,in1Mul18849,in0Con13016,in0Sub59152,in1Sub59152,in0Con29951,in0Fla68937],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Max45353.png')

LMul18849 = multiply_layer([[[[[[0.1698, 0.8788]], [[0.5867, 0.317]]], [[[0.306, 0.7129]], [[0.1793, 0.3945]]]]], [[[[[0.4698, 0.6219]], [[0.8118, 0.6482]]], [[[0.7347, 0.0441]], [[0.6754, 0.3665]]]]]], Mul18849), 
LRes5918 = reshape_layer(Mul18849, [2, 2, 2], Res5918), 
LCon13016 = concatenate_layer([Res5918,[[[[0.2017], [0.8685]], [[0.8144], [0.6619]]]]], 3, Con13016), 
LSub59152 = subtract_layer([[0.1518, 0.4937, 0.2686]], [[0.1398, 0.7965, 0.1611]], Sub59152), 
LRes83497 = reshape_layer(Sub59152, [3, 1], Res83497), 
LAve97396 = average_pooling1D_layer(Res83497, 2, 2, false, Ave97396), 
LRes21910 = reshape_layer(Ave97396, [1, 1, 1], Res21910), 
LZer72333 = zero_padding2D_layer(Res21910, 1, 0, 0, 0, Zer72333), 
LCon29951 = concatenate_layer([Zer72333,[[[[0.1921, 0.1941]], [[0.1782, 0.0093]]]]], 3, Con29951), 
LFla68937 = flatten_layer([[1.6304, 1.4538, 1.717]], Fla68937), 
LRes27963 = reshape_layer(Fla68937, [3, 1], Res27963), 
LRes51550 = reshape_layer(Res27963, [3, 1, 1], Res51550), 
LSep82449 = separable_conv2D_layer(Res51550, 1, 1,[[[[[0.9554]]]],[[[[0.8147, 0.2128, 0.2816]]]]],[0, 0, 0], 2, 2, true, Sep82449), 
LMin25273 = minimum_layer([Con29951,Sep82449], Min25273), 
LZer63545 = zero_padding2D_layer(Min25273, 0, 0, 1, 0, Zer63545), 
LMax45353 = maximum_layer([Con13016,Zer63545], Max45353), 
exec_layers([LMul18849,LRes5918,LCon13016,LSub59152,LRes83497,LAve97396,LRes21910,LZer72333,LCon29951,LFla68937,LRes27963,LRes51550,LSep82449,LMin25273,LZer63545,LMax45353],["Mul18849","Res5918","Con13016","Sub59152","Res83497","Ave97396","Res21910","Zer72333","Con29951","Fla68937","Res27963","Res51550","Sep82449","Min25273","Zer63545","Max45353"],Max45353,"Max45353")

Actual (Unparsed): [[[[0.0797720, 0.5465257, 0.2017000], [0.4762831, 0.2054794, 0.8685000]], [[0.2248182, 0.0314389, 0.8144000], [0.1210992, 0.1782000, 0.6619000]]]]

Expected (Unparsed): [[[[0.07977204,0.54652572,0.2017],[0.47628306,0.2054794,0.8685]],[[0.2248182,0.03143889,0.8144],[0.12109922,0.1782,0.6619]]]]

Actual:   [[[[0.0798, 0.5466, 0.2017], [0.4763, 0.2055, 0.8685]], [[0.2249, 0.0315, 0.8144], [0.1211, 0.1782, 0.6619]]]]

Expected: [[[[0.0798, 0.5466, 0.2017], [0.4763, 0.2055, 0.8685]], [[0.2249, 0.0315, 0.8144], [0.1211, 0.1782, 0.6619]]]]