import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Mul19059 = tf.keras.layers.Input(shape=([2, 1, 2, 1]))
in1Mul19059 = tf.keras.layers.Input(shape=([2, 1, 2, 1]))

Mul19059 = keras.layers.Multiply(name = 'Mul19059', )([in0Mul19059,in1Mul19059])
Res47925 = keras.layers.Reshape((2, 1, 2), name = 'Res47925', )(Mul19059)
Res29847 = keras.layers.Reshape((2, 2), name = 'Res29847', )(Res47925)
Cro4991 = keras.layers.Cropping1D(cropping=((0, 1)), name = 'Cro4991', )(Res29847)
Sof27465 = keras.layers.Softmax(axis=1, name = 'Sof27465', )(Cro4991)
model = tf.keras.models.Model(inputs=[in0Mul19059,in1Mul19059], outputs=Sof27465)
in0Mul19059 = tf.constant([[[[[0.9551], [0.9231]]], [[[0.0435], [0.6046]]]]])
in1Mul19059 = tf.constant([[[[[0.4227], [0.5426]]], [[[0.9823], [0.5411]]]]])
print (np.array2string(model.predict([in0Mul19059,in1Mul19059],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Sof27465.png')

LMul19059 = multiply_layer([[[[[[0.9551], [0.9231]]], [[[0.0435], [0.6046]]]]], [[[[[0.4227], [0.5426]]], [[[0.9823], [0.5411]]]]]], Mul19059), 
LRes47925 = reshape_layer(Mul19059, [2, 1, 2], Res47925), 
LRes29847 = reshape_layer(Res47925, [2, 2], Res29847), 
LCro4991 = cropping1D_layer(Res29847, 0, 1, Cro4991), 
LSof27465 = softmax_layer(Cro4991, 1, Sof27465), 
exec_layers([LMul19059,LRes47925,LRes29847,LCro4991,LSof27465],["Mul19059","Res47925","Res29847","Cro4991","Sof27465"],Sof27465,"Sof27465")

Actual (Unparsed): [[[1.0000000, 1.0000000]]]

Expected (Unparsed): [[[1.0,1.0]]]

Actual:   [[[1, 1]]]

Expected: [[[1, 1]]]