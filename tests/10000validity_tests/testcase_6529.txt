import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Dot81221 = tf.keras.layers.Input(shape=([2, 3]))
in1Dot81221 = tf.keras.layers.Input(shape=([2, 3]))
in0Con2160 = tf.keras.layers.Input(shape=([3, 3, 5]))
in0LST60157 = tf.keras.layers.Input(shape=([2, 1]))
in0Con20733 = tf.keras.layers.Input(shape=([3, 3, 3, 1]))
in0Sub89410 = tf.keras.layers.Input(shape=([2, 2, 2, 2]))
in1Sub89410 = tf.keras.layers.Input(shape=([2, 2, 2, 2]))
in0Ave19772 = tf.keras.layers.Input(shape=([1, 2, 1]))
in1Ave19772 = tf.keras.layers.Input(shape=([1, 2, 1]))
in0Con86652 = tf.keras.layers.Input(shape=([3, 3, 5]))

Dot81221 = keras.layers.Dot(axes=(2, 2), name = 'Dot81221', )([in0Dot81221,in1Dot81221])
Res36 = keras.layers.Reshape((2, 2, 1), name = 'Res36', )(Dot81221)
Zer56071 = keras.layers.ZeroPadding2D(padding=((1, 0), (1, 0)), name = 'Zer56071', )(Res36)
Con2160 = keras.layers.Concatenate(axis=3, name = 'Con2160', )([Zer56071,in0Con2160])
LST60157 = keras.layers.LSTM(3,recurrent_activation='sigmoid', name = 'LST60157', )(in0LST60157)
Res9549 = keras.layers.Reshape((3, 1), name = 'Res9549', )(LST60157)
Res95101 = keras.layers.Reshape((3, 1, 1), name = 'Res95101', )(Res9549)
Res98341 = keras.layers.Reshape((3, 1, 1, 1), name = 'Res98341', )(Res95101)
Zer55288 = keras.layers.ZeroPadding3D(padding=((0, 0), (2, 0), (2, 0)), name = 'Zer55288', )(Res98341)
Con20733 = keras.layers.Concatenate(axis=4, name = 'Con20733', )([Zer55288,in0Con20733])
Sub89410 = keras.layers.Subtract(name = 'Sub89410', )([in0Sub89410,in1Sub89410])
Mas36578 = keras.layers.Masking(mask_value=1, name = 'Mas36578', )(Sub89410)
Con15073 = keras.layers.Conv3D(2, (1, 1, 1),strides=(1, 1, 1), padding='valid', dilation_rate=(1, 1, 1), name = 'Con15073', )(Mas36578)
Zer29719 = keras.layers.ZeroPadding3D(padding=((1, 0), (1, 0), (1, 0)), name = 'Zer29719', )(Con15073)
Min6991 = keras.layers.Minimum(name = 'Min6991', )([Con20733,Zer29719])
Res21854 = keras.layers.Reshape((3, 3, 6), name = 'Res21854', )(Min6991)
Ave19772 = keras.layers.Average(name = 'Ave19772', )([in0Ave19772,in1Ave19772])
Zer16809 = keras.layers.ZeroPadding2D(padding=((2, 0), (1, 0)), name = 'Zer16809', )(Ave19772)
Con86652 = keras.layers.Concatenate(axis=3, name = 'Con86652', )([Zer16809,in0Con86652])
Add11391 = keras.layers.Add(name = 'Add11391', )([Res21854,Con86652])
Sub81233 = keras.layers.Subtract(name = 'Sub81233', )([Con2160,Add11391])
model = tf.keras.models.Model(inputs=[in0Dot81221,in1Dot81221,in0Con2160,in0LST60157,in0Con20733,in0Sub89410,in1Sub89410,in0Ave19772,in1Ave19772,in0Con86652], outputs=Sub81233)
w = model.get_layer('LST60157').get_weights() 
w[0] = np.array([[6, 9, 2, 7, 5, 7, 4, 2, 6, 3, 7, 8]])
w[1] = np.array([[4, 4, 7, 4, 5, 6, 9, 6, 2, 2, 1, 5], [8, 6, 4, 9, 3, 1, 3, 4, 10, 7, 6, 4], [8, 8, 10, 1, 6, 1, 5, 2, 4, 8, 5, 8]])
w[2] = np.array([1, 3, 3, 7, 10, 4, 2, 3, 10, 2, 1, 1])
model.get_layer('LST60157').set_weights(w) 
w = model.get_layer('Con15073').get_weights() 
w[0] = np.array([[[[[0.0894, 0.1352], [0.3261, 0.8657]]]]])
w[1] = np.array([0, 0])
model.get_layer('Con15073').set_weights(w) 
in0Dot81221 = tf.constant([[[0.476, 0.1157, 0.3658], [0.9554, 0.1089, 0.6591]]])
in1Dot81221 = tf.constant([[[0.7287, 0.6927, 0.0639], [0.2145, 0.5932, 0.2055]]])
in0Con2160 = tf.constant([[[[0.7253, 0.7208, 0.583, 0.0305, 0.6461], [0.5663, 0.1508, 0.3585, 0.428, 0.5743], [0.8512, 0.3708, 0.6892, 0.1336, 0.7721]], [[0.4716, 0.6963, 0.5769, 0.3604, 0.9495], [0.8821, 0.2895, 0.3033, 0.9312, 0.0497], [0.2076, 0.4366, 0.8427, 0.8599, 0.9652]], [[0.9063, 0.7649, 0.8673, 0.6834, 0.9277], [0.3889, 0.1953, 0.5447, 0.2664, 0.502], [0.9219, 0.846, 0.0006, 0.0603, 0.3855]]]])
in0LST60157 = tf.constant([[[6], [6]]])
in0Con20733 = tf.constant([[[[[0.1963], [0.6503], [0.0484]], [[0.8272], [0.0473], [0.1621]], [[0.3934], [0.6288], [0.3657]]], [[[0.9464], [0.5441], [0.3887]], [[0.3478], [0.6865], [0.0448]], [[0.3161], [0.0158], [0.0653]]], [[[0.5252], [0.2972], [0.7487]], [[0.0213], [0.9413], [0.5569]], [[0.7357], [0.8762], [0.91]]]]])
in0Sub89410 = tf.constant([[[[[0.2712, 0.0804], [0.1846, 0.5605]], [[0.2124, 0.188], [0.837, 0.0545]]], [[[0.9346, 0.6693], [0.3463, 0.3194]], [[0.1427, 0.7733], [0.5699, 0.1332]]]]])
in1Sub89410 = tf.constant([[[[[0.5137, 0.8807], [0.4403, 0.8833]], [[0.7995, 0.5496], [0.1885, 0.0683]]], [[[0.5949, 0.9895], [0.4203, 0.4636]], [[0.9364, 0.5273], [0.2899, 0.6062]]]]])
in0Ave19772 = tf.constant([[[[0.1165], [0.1949]]]])
in1Ave19772 = tf.constant([[[[0.4937], [0.7168]]]])
in0Con86652 = tf.constant([[[[0.0094, 0.1677, 0.2191, 0.0214, 0.7801], [0.0593, 0.0995, 0.5729, 0.4511, 0.215], [0.3436, 0.5714, 0.167, 0.8684, 0.5319]], [[0.4938, 0.4053, 0.2307, 0.2458, 0.2221], [0.3374, 0.6357, 0.8372, 0.2036, 0.2048], [0.4964, 0.6253, 0.154, 0.3195, 0.8338]], [[0.738, 0.3544, 0.1504, 0.1616, 0.0597], [0.6231, 0.8403, 0.8047, 0.5229, 0.8594], [0.4144, 0.3095, 0.2847, 0.6486, 0.886]]]])
print (np.array2string(model.predict([in0Dot81221,in1Dot81221,in0Con2160,in0LST60157,in0Con20733,in0Sub89410,in1Sub89410,in0Ave19772,in1Ave19772,in0Con86652],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Sub81233.png')

LDot81221 = dot_layer([[[0.476, 0.1157, 0.3658], [0.9554, 0.1089, 0.6591]]], [[[0.7287, 0.6927, 0.0639], [0.2145, 0.5932, 0.2055]]], 2, 2, Dot81221), 
LRes36 = reshape_layer(Dot81221, [2, 2, 1], Res36), 
LZer56071 = zero_padding2D_layer(Res36, 1, 0, 1, 0, Zer56071), 
LCon2160 = concatenate_layer([Zer56071,[[[[0.7253, 0.7208, 0.583, 0.0305, 0.6461], [0.5663, 0.1508, 0.3585, 0.428, 0.5743], [0.8512, 0.3708, 0.6892, 0.1336, 0.7721]], [[0.4716, 0.6963, 0.5769, 0.3604, 0.9495], [0.8821, 0.2895, 0.3033, 0.9312, 0.0497], [0.2076, 0.4366, 0.8427, 0.8599, 0.9652]], [[0.9063, 0.7649, 0.8673, 0.6834, 0.9277], [0.3889, 0.1953, 0.5447, 0.2664, 0.502], [0.9219, 0.846, 0.0006, 0.0603, 0.3855]]]]], 3, Con2160), 
LLST60157 = lstm_layer([[[6], [6]]],[[6, 9, 2, 7, 5, 7, 4, 2, 6, 3, 7, 8]],[[4, 4, 7, 4, 5, 6, 9, 6, 2, 2, 1, 5], [8, 6, 4, 9, 3, 1, 3, 4, 10, 7, 6, 4], [8, 8, 10, 1, 6, 1, 5, 2, 4, 8, 5, 8]],[1, 3, 3, 7, 10, 4, 2, 3, 10, 2, 1, 1], LST60157), 
LRes9549 = reshape_layer(LST60157, [3, 1], Res9549), 
LRes95101 = reshape_layer(Res9549, [3, 1, 1], Res95101), 
LRes98341 = reshape_layer(Res95101, [3, 1, 1, 1], Res98341), 
LZer55288 = zero_padding3D_layer(Res98341, 0, 0, 2, 0, 2, 0, Zer55288), 
LCon20733 = concatenate_layer([Zer55288,[[[[[0.1963], [0.6503], [0.0484]], [[0.8272], [0.0473], [0.1621]], [[0.3934], [0.6288], [0.3657]]], [[[0.9464], [0.5441], [0.3887]], [[0.3478], [0.6865], [0.0448]], [[0.3161], [0.0158], [0.0653]]], [[[0.5252], [0.2972], [0.7487]], [[0.0213], [0.9413], [0.5569]], [[0.7357], [0.8762], [0.91]]]]]], 4, Con20733), 
LSub89410 = subtract_layer([[[[[0.2712, 0.0804], [0.1846, 0.5605]], [[0.2124, 0.188], [0.837, 0.0545]]], [[[0.9346, 0.6693], [0.3463, 0.3194]], [[0.1427, 0.7733], [0.5699, 0.1332]]]]], [[[[[0.5137, 0.8807], [0.4403, 0.8833]], [[0.7995, 0.5496], [0.1885, 0.0683]]], [[[0.5949, 0.9895], [0.4203, 0.4636]], [[0.9364, 0.5273], [0.2899, 0.6062]]]]], Sub89410), 
LMas36578 = masking_layer(Sub89410, 1, Mas36578), 
LCon15073 = conv3D_layer(Mas36578, 1, 1, 1,[[[[[0.0894, 0.1352], [0.3261, 0.8657]]]]],[0, 0], 1, 1, 1, false, 1, 1, 1, Con15073), 
LZer29719 = zero_padding3D_layer(Con15073, 1, 0, 1, 0, 1, 0, Zer29719), 
LMin6991 = minimum_layer([Con20733,Zer29719], Min6991), 
LRes21854 = reshape_layer(Min6991, [3, 3, 6], Res21854), 
LAve19772 = average_layer([[[[[0.1165], [0.1949]]]], [[[[0.4937], [0.7168]]]]], Ave19772), 
LZer16809 = zero_padding2D_layer(Ave19772, 2, 0, 1, 0, Zer16809), 
LCon86652 = concatenate_layer([Zer16809,[[[[0.0094, 0.1677, 0.2191, 0.0214, 0.7801], [0.0593, 0.0995, 0.5729, 0.4511, 0.215], [0.3436, 0.5714, 0.167, 0.8684, 0.5319]], [[0.4938, 0.4053, 0.2307, 0.2458, 0.2221], [0.3374, 0.6357, 0.8372, 0.2036, 0.2048], [0.4964, 0.6253, 0.154, 0.3195, 0.8338]], [[0.738, 0.3544, 0.1504, 0.1616, 0.0597], [0.6231, 0.8403, 0.8047, 0.5229, 0.8594], [0.4144, 0.3095, 0.2847, 0.6486, 0.886]]]]], 3, Con86652), 
LAdd11391 = add_layer([Res21854,Con86652], Add11391), 
LSub81233 = subtract_layer(Con2160,Add11391, Sub81233), 
exec_layers([LDot81221,LRes36,LZer56071,LCon2160,LLST60157,LRes9549,LRes95101,LRes98341,LZer55288,LCon20733,LSub89410,LMas36578,LCon15073,LZer29719,LMin6991,LRes21854,LAve19772,LZer16809,LCon86652,LAdd11391,LSub81233],["Dot81221","Res36","Zer56071","Con2160","LST60157","Res9549","Res95101","Res98341","Zer55288","Con20733","Sub89410","Mas36578","Con15073","Zer29719","Min6991","Res21854","Ave19772","Zer16809","Con86652","Add11391","Sub81233"],Sub81233,"Sub81233")

Actual (Unparsed): [[[[0.0000000, 0.7159000, 0.5531000, 0.3639000, 0.0091000, -0.1340000], [0.0000000, 0.5070000, 0.0513000, -0.2144000, -0.0231000, 0.3593000], [0.0000000, 0.5076000, -0.2006000, 0.5222000, -0.7348000, 0.2402000]], [[0.0000000, -0.0222000, 0.2910000, 0.3462000, 0.1146000, 0.7274000], [0.4503812, 0.5447000, -0.0635427, 0.1917057, 0.8557247, 0.1589186], [0.2459071, -0.2888000, -0.0182955, 1.0811131, 0.4869243, 0.0661000]], [[0.0000000, 0.1683000, 0.4105000, 0.7169000, 0.5218000, 0.8680000], [0.5086515, -0.2342000, -0.5709520, -0.0287303, -0.2028608, -0.2225613], [-0.0508722, 0.5075000, 0.5365000, -0.3897540, -0.4590867, -0.1288799]]]]

Expected (Unparsed): [[[[0,0.7159,0.5531,0.3639,0.0091,-0.134],[0,0.507,0.051299999999999985,-0.21439999999999998,-0.02310000000000001,0.35930000000000006],[0,0.5075999999999999,-0.2006,0.5222,-0.7347999999999999,0.24019999999999997]],[[0,-0.022199999999999998,0.29100000000000004,0.34619999999999995,0.11460000000000001,0.7274],[0.45038121,0.5447,-0.06354267000000002,0.19170570999999992,0.85572466,0.15891859999999997],[0.24590714000000002,-0.2888,-0.01829550000000002,1.08111304,0.48692428,0.06609999999999994]],[[0,0.1683,0.41050000000000003,0.7169,0.5218,0.868],[0.5086514999999999,-0.23419999999999996,-0.57095196,-0.028730299999999875,-0.20286078000000002,-0.22256125999999998],[-0.050872169999999994,0.5075000000000001,0.5365,-0.38975396,-0.45908669999999996,-0.1288799]]]]

Actual:   [[[[0, 0.7159, 0.5531, 0.3639, 0.0091, -0.134], [0, 0.507, 0.0513, -0.2144, -0.0231, 0.3593], [0, 0.5076, -0.2006, 0.5222, -0.7348, 0.2402]], [[0, -0.0222, 0.291, 0.3462, 0.1146, 0.7274], [0.4504, 0.5447, -0.0635, 0.1918, 0.8558, 0.159], [0.246, -0.2888, -0.0182, 1.0812, 0.487, 0.0661]], [[0, 0.1683, 0.4105, 0.7169, 0.5218, 0.868], [0.5087, -0.2342, -0.5709, -0.0287, -0.2028, -0.2225], [-0.0508, 0.5075, 0.5365, -0.3897, -0.459, -0.1288]]]]

Expected: [[[[0, 0.7159, 0.5531, 0.3639, 0.0091, -0.134], [0, 0.507, 0.0513, -0.2143, -0.0231, 0.3594], [0, 0.5076, -0.2006, 0.5222, -0.7347, 0.2402]], [[0, -0.0221, 0.2911, 0.3462, 0.1147, 0.7274], [0.4504, 0.5447, -0.0635, 0.1918, 0.8558, 0.159], [0.246, -0.2888, -0.0182, 1.0812, 0.487, 0.0661]], [[0, 0.1683, 0.4106, 0.7169, 0.5218, 0.868], [0.5087, -0.2341, -0.5709, -0.0287, -0.2028, -0.2225], [-0.0508, 0.5076, 0.5365, -0.3897, -0.459, -0.1288]]]]