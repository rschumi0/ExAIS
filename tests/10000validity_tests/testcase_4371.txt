import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Sub86936 = tf.keras.layers.Input(shape=([2]))
in1Sub86936 = tf.keras.layers.Input(shape=([2]))

Sub86936 = keras.layers.Subtract(name = 'Sub86936', )([in0Sub86936,in1Sub86936])
Res10054 = keras.layers.Reshape((2, 1), name = 'Res10054', )(Sub86936)
Sim78530 = keras.layers.SimpleRNN(2,name = 'Sim78530', )(Res10054)
Res47720 = keras.layers.Reshape((2, 1), name = 'Res47720', )(Sim78530)
Max94947 = keras.layers.MaxPool1D(pool_size=(2), strides=(1), padding='valid', name = 'Max94947', )(Res47720)
Mas99436 = keras.layers.Masking(mask_value=2, name = 'Mas99436', )(Max94947)
model = tf.keras.models.Model(inputs=[in0Sub86936,in1Sub86936], outputs=Mas99436)
w = model.get_layer('Sim78530').get_weights() 
w[0] = np.array([[5, 3]])
w[1] = np.array([[5, 2], [9, 2]])
w[2] = np.array([4, 4])
model.get_layer('Sim78530').set_weights(w) 
in0Sub86936 = tf.constant([[0.6712, 0.9728]])
in1Sub86936 = tf.constant([[0.9372, 0.5167]])
print (np.array2string(model.predict([in0Sub86936,in1Sub86936],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Mas99436.png')

LSub86936 = subtract_layer([[0.6712, 0.9728]], [[0.9372, 0.5167]], Sub86936), 
LRes10054 = reshape_layer(Sub86936, [2, 1], Res10054), 
LSim78530 = simple_rnn_layer(Res10054,[[5, 3]],[[5, 2], [9, 2]],[4, 4], Sim78530), 
LRes47720 = reshape_layer(Sim78530, [2, 1], Res47720), 
LMax94947 = max_pool1D_layer(Res47720, 2, 1, false, Max94947), 
LMas99436 = masking_layer(Max94947, 2, Mas99436), 
exec_layers([LSub86936,LRes10054,LSim78530,LRes47720,LMax94947,LMas99436],["Sub86936","Res10054","Sim78530","Res47720","Max94947","Mas99436"],Mas99436,"Mas99436")

Actual (Unparsed): [[[1.0000000]]]

Expected (Unparsed): [[[1.0]]]

Actual:   [[[1]]]

Expected: [[[1]]]