import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Min59339 = tf.keras.layers.Input(shape=([1, 2, 2]))
in1Min59339 = tf.keras.layers.Input(shape=([1, 2, 2]))
in0Add98728 = tf.keras.layers.Input(shape=([1, 1]))
in1Add98728 = tf.keras.layers.Input(shape=([1, 1]))
in0Con89780 = tf.keras.layers.Input(shape=([1, 3]))
in0Con62143 = tf.keras.layers.Input(shape=([4, 5]))
in0Zer97787 = tf.keras.layers.Input(shape=([1, 4]))
in0Sub87531 = tf.keras.layers.Input(shape=([3, 3, 3]))
in1Sub87531 = tf.keras.layers.Input(shape=([3, 3, 3]))

Min59339 = keras.layers.Minimum(name = 'Min59339', )([in0Min59339,in1Min59339])
Res13223 = keras.layers.Reshape((1, 4), name = 'Res13223', )(Min59339)
Add98728 = keras.layers.Add(name = 'Add98728', )([in0Add98728,in1Add98728])
Bat1516 = keras.layers.BatchNormalization(axis=1, epsilon=0.45590986723858773,  name = 'Bat1516', )(Add98728)
Con89780 = keras.layers.Concatenate(axis=2, name = 'Con89780', )([Bat1516,in0Con89780])
Max85812 = keras.layers.Maximum(name = 'Max85812', )([Res13223,Con89780])
Thr68272 = keras.layers.ThresholdedReLU(theta=1.0538402893306618, name = 'Thr68272', )(Max85812)
Zer68840 = keras.layers.ZeroPadding1D(padding=((3, 0)), name = 'Zer68840', )(Thr68272)
Con62143 = keras.layers.Concatenate(axis=2, name = 'Con62143', )([Zer68840,in0Con62143])
Zer97787 = keras.layers.ZeroPadding1D(padding=((1, 1)), name = 'Zer97787', )(in0Zer97787)
ReL23196 = keras.layers.ReLU(max_value=5.609693707411975, negative_slope=8.431836064001606, threshold=5.237304813938165, name = 'ReL23196', )(Zer97787)
Sub87531 = keras.layers.Subtract(name = 'Sub87531', )([in0Sub87531,in1Sub87531])
Lay59636 = keras.layers.LayerNormalization(axis=1, epsilon=2.614024699569157, name = 'Lay59636', )(Sub87531)
Res55222 = keras.layers.Reshape((3, 9), name = 'Res55222', )(Lay59636)
Dot19280 = keras.layers.Dot(axes=(1, 1), name = 'Dot19280', )([ReL23196,Res55222])
Ave36733 = keras.layers.Average(name = 'Ave36733', )([Con62143,Dot19280])
model = tf.keras.models.Model(inputs=[in0Min59339,in1Min59339,in0Add98728,in1Add98728,in0Con89780,in0Con62143,in0Zer97787,in0Sub87531,in1Sub87531], outputs=Ave36733)
w = model.get_layer('Bat1516').get_weights() 
w[0] = np.array([0.5446])
w[1] = np.array([0.9699])
w[2] = np.array([0.4372])
w[3] = np.array([0.0902])
model.get_layer('Bat1516').set_weights(w) 
in0Min59339 = tf.constant([[[[0.0671, 0.9482], [0.2425, 0.3602]]]])
in1Min59339 = tf.constant([[[[0.8125, 0.3031], [0.167, 0.1385]]]])
in0Add98728 = tf.constant([[[0.5145]]])
in1Add98728 = tf.constant([[[0.527]]])
in0Con89780 = tf.constant([[[0.0943, 0.035, 0.558]]])
in0Con62143 = tf.constant([[[0.7998, 0.6793, 0.1685, 0.8157, 0.1945], [0.5559, 0.9702, 0.5167, 0.8808, 0.2813], [0.8845, 0.3145, 0.9633, 0.7982, 0.7363], [0.279, 0.8777, 0.5253, 0.935, 0.5738]]])
in0Zer97787 = tf.constant([[[1.5445, 1.938, 1.7767, 1.6651]]])
in0Sub87531 = tf.constant([[[[0.4202, 0.63, 0.0026], [0.2653, 0.6611, 0.6138], [0.6255, 0.3388, 0.2959]], [[0.037, 0.3937, 0.3648], [0.8276, 0.3726, 0.2961], [0.7648, 0.7774, 0.8322]], [[0.2242, 0.6019, 0.1848], [0.5009, 0.1352, 0.002], [0.908, 0.4009, 0.3079]]]])
in1Sub87531 = tf.constant([[[[0.9372, 0.3495, 0.9131], [0.2616, 0.5669, 0.6665], [0.1146, 0.0497, 0.2849]], [[0.614, 0.6278, 0.9298], [0.9906, 0.9186, 0.5187], [0.8651, 0.869, 0.4826]], [[0.6308, 0.9165, 0.1425], [0.7773, 0.4947, 0.3494], [0.8409, 0.502, 0.6162]]]])
print (np.array2string(model.predict([in0Min59339,in1Min59339,in0Add98728,in1Add98728,in0Con89780,in0Con62143,in0Zer97787,in0Sub87531,in1Sub87531],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Ave36733.png')

LMin59339 = minimum_layer([[[[[0.0671, 0.9482], [0.2425, 0.3602]]]], [[[[0.8125, 0.3031], [0.167, 0.1385]]]]], Min59339), 
LRes13223 = reshape_layer(Min59339, [1, 4], Res13223), 
LAdd98728 = add_layer([[[[0.5145]]], [[[0.527]]]], Add98728), 
LBat1516 = batch_normalization_layer(Add98728, 1, 0.45590986723858773, [0.5446], [0.9699], [0.4372], [0.0902], Bat1516), 
LCon89780 = concatenate_layer([Bat1516,[[[0.0943, 0.035, 0.558]]]], 2, Con89780), 
LMax85812 = maximum_layer([Res13223,Con89780], Max85812), 
LThr68272 = thresholded_relu_layer(Max85812, 1.0538402893306618, Thr68272), 
LZer68840 = zero_padding1D_layer(Thr68272, 3, 0, Zer68840), 
LCon62143 = concatenate_layer([Zer68840,[[[0.7998, 0.6793, 0.1685, 0.8157, 0.1945], [0.5559, 0.9702, 0.5167, 0.8808, 0.2813], [0.8845, 0.3145, 0.9633, 0.7982, 0.7363], [0.279, 0.8777, 0.5253, 0.935, 0.5738]]]], 2, Con62143), 
LZer97787 = zero_padding1D_layer([[[1.5445, 1.938, 1.7767, 1.6651]]], 1, 1, Zer97787), 
LReL23196 = relu_layer(Zer97787, 5.609693707411975, 8.431836064001606, 5.237304813938165, ReL23196), 
LSub87531 = subtract_layer([[[[0.4202, 0.63, 0.0026], [0.2653, 0.6611, 0.6138], [0.6255, 0.3388, 0.2959]], [[0.037, 0.3937, 0.3648], [0.8276, 0.3726, 0.2961], [0.7648, 0.7774, 0.8322]], [[0.2242, 0.6019, 0.1848], [0.5009, 0.1352, 0.002], [0.908, 0.4009, 0.3079]]]], [[[[0.9372, 0.3495, 0.9131], [0.2616, 0.5669, 0.6665], [0.1146, 0.0497, 0.2849]], [[0.614, 0.6278, 0.9298], [0.9906, 0.9186, 0.5187], [0.8651, 0.869, 0.4826]], [[0.6308, 0.9165, 0.1425], [0.7773, 0.4947, 0.3494], [0.8409, 0.502, 0.6162]]]], Sub87531), 
LLay59636 = layer_normalization_layer(Sub87531, 1, 2.614024699569157, Lay59636), 
LRes55222 = reshape_layer(Lay59636, [3, 9], Res55222), 
LDot19280 = dot_layer(ReL23196,Res55222, 1, 1, Dot19280), 
LAve36733 = average_layer([Con62143,Dot19280], Ave36733), 
exec_layers([LMin59339,LRes13223,LAdd98728,LBat1516,LCon89780,LMax85812,LThr68272,LZer68840,LCon62143,LZer97787,LReL23196,LSub87531,LLay59636,LRes55222,LDot19280,LAve36733],["Min59339","Res13223","Add98728","Bat1516","Con89780","Max85812","Thr68272","Zer68840","Con62143","Zer97787","ReL23196","Sub87531","Lay59636","Res55222","Dot19280","Ave36733"],Ave36733,"Ave36733")

Actual (Unparsed): [[[-0.3090104, -0.5751701, -0.3414728, -0.0713731, -0.6948866, 0.2792729, -0.9479477, -0.0873553, 1.4169287], [-0.3877386, -0.7217091, -0.4284715, -0.0895571, -1.0957608, 0.4093403, -1.0368259, -0.1809712, 1.7965498], [-0.3554670, -0.6616412, -0.3928098, -0.0821033, -0.8171267, 0.0877958, -0.7057283, -0.1705544, 1.8862291], [0.3744802, -0.6200815, -0.3681362, -0.0769461, -1.0407713, 0.3737584, -0.8501454, -0.0663727, 1.7096239]]]

Expected (Unparsed): [[[-0.30901041160618914,-0.5751701862464587,-0.3414728910570908,-0.07137310986320533,-0.6948865660497745,0.2792729230379818,-0.9479477054862618,-0.08735525658433257,1.4169287698927115],[-0.38773854172404976,-0.7217091751023874,-0.4284716496397811,-0.08955719450624278,-1.0957608222754702,0.40934035276633784,-1.0368258842553417,-0.18097117983841848,1.7965499391725968],[-0.35546701087777044,-0.6616412236348874,-0.3928098967569653,-0.082103337192591,-0.8171266862419129,0.0877958383694285,-0.7057282216493631,-0.17055437317797617,1.8862291650815024],[0.3744802055286439,-0.6200815002388986,-0.3681362971182658,-0.07694617366994061,-1.0407713571573194,0.37375846821012854,-0.8501453379120585,-0.06637262721824033,1.7096239363861143]]]

Actual:   [[[-0.309, -0.5751, -0.3414, -0.0713, -0.6948, 0.2793, -0.9479, -0.0873, 1.417], [-0.3877, -0.7217, -0.4284, -0.0895, -1.0957, 0.4094, -1.0368, -0.1809, 1.7966], [-0.3554, -0.6616, -0.3928, -0.0821, -0.8171, 0.0878, -0.7057, -0.1705, 1.8863], [0.3745, -0.62, -0.3681, -0.0769, -1.0407, 0.3738, -0.8501, -0.0663, 1.7097]]]

Expected: [[[-0.309, -0.5751, -0.3414, -0.0713, -0.6948, 0.2793, -0.9479, -0.0873, 1.417], [-0.3877, -0.7217, -0.4284, -0.0895, -1.0957, 0.4094, -1.0368, -0.1809, 1.7966], [-0.3554, -0.6616, -0.3928, -0.0821, -0.8171, 0.0878, -0.7057, -0.1705, 1.8863], [0.3745, -0.62, -0.3681, -0.0769, -1.0407, 0.3738, -0.8501, -0.0663, 1.7097]]]