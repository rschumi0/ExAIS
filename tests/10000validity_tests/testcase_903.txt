import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Ave20983 = tf.keras.layers.Input(shape=([1, 2]))
in1Ave20983 = tf.keras.layers.Input(shape=([1, 2]))
in0Con35371 = tf.keras.layers.Input(shape=([2, 6]))
in0Max57680 = tf.keras.layers.Input(shape=([2, 2, 2]))
in1Max57680 = tf.keras.layers.Input(shape=([2, 2, 2]))
in0Mul91834 = tf.keras.layers.Input(shape=([2, 1]))
in1Mul91834 = tf.keras.layers.Input(shape=([2, 1]))
in0Mul36103 = tf.keras.layers.Input(shape=([2, 1]))
in1Mul36103 = tf.keras.layers.Input(shape=([2, 1]))
in0Sub70089 = tf.keras.layers.Input(shape=([2]))
in1Sub70089 = tf.keras.layers.Input(shape=([2]))
in0Con13003 = tf.keras.layers.Input(shape=([14]))

Ave20983 = keras.layers.Average(name = 'Ave20983', )([in0Ave20983,in1Ave20983])
Con50497 = keras.layers.Conv1D(2, (1),strides=(4), padding='valid', dilation_rate=(1), name = 'Con50497', )(Ave20983)
Zer40063 = keras.layers.ZeroPadding1D(padding=((1, 0)), name = 'Zer40063', )(Con50497)
Con35371 = keras.layers.Concatenate(axis=2, name = 'Con35371', )([Zer40063,in0Con35371])
Max57680 = keras.layers.Maximum(name = 'Max57680', )([in0Max57680,in1Max57680])
Res81232 = keras.layers.Reshape((2, 2, 2, 1), name = 'Res81232', )(Max57680)
Con73739 = keras.layers.Conv3DTranspose(2, (2, 2, 2),strides=(1, 1, 1), padding='same', name = 'Con73739', )(Res81232)
Res70797 = keras.layers.Reshape((2, 2, 4), name = 'Res70797', )(Con73739)
Res43392 = keras.layers.Reshape((2, 8), name = 'Res43392', )(Res70797)
Cro46049 = keras.layers.Cropping1D(cropping=((0, 0)), name = 'Cro46049', )(Res43392)
Ave51630 = keras.layers.Average(name = 'Ave51630', )([Con35371,Cro46049])
Fla5316 = keras.layers.Flatten(name = 'Fla5316', )(Ave51630)
Mul91834 = keras.layers.Multiply(name = 'Mul91834', )([in0Mul91834,in1Mul91834])
Fla6279 = keras.layers.Flatten(name = 'Fla6279', )(Mul91834)
Mul36103 = keras.layers.Multiply(name = 'Mul36103', )([in0Mul36103,in1Mul36103])
Fla45698 = keras.layers.Flatten(name = 'Fla45698', )(Mul36103)
Sub70089 = keras.layers.Subtract(name = 'Sub70089', )([in0Sub70089,in1Sub70089])
Max9573 = keras.layers.Maximum(name = 'Max9573', )([Fla45698,Sub70089])
Ave99867 = keras.layers.Average(name = 'Ave99867', )([Fla6279,Max9573])
Con13003 = keras.layers.Concatenate(axis=1, name = 'Con13003', )([Ave99867,in0Con13003])
Max92920 = keras.layers.Maximum(name = 'Max92920', )([Fla5316,Con13003])
model = tf.keras.models.Model(inputs=[in0Ave20983,in1Ave20983,in0Con35371,in0Max57680,in1Max57680,in0Mul91834,in1Mul91834,in0Mul36103,in1Mul36103,in0Sub70089,in1Sub70089,in0Con13003], outputs=Max92920)
w = model.get_layer('Con50497').get_weights() 
w[0] = np.array([[[0.1885, 0.3505], [0.7983, 0.9611]]])
w[1] = np.array([0, 0])
model.get_layer('Con50497').set_weights(w) 
w = model.get_layer('Con73739').get_weights() 
w[0] = np.array([[[[[0.1353], [0.5213]], [[0.8079], [0.444]]], [[[0.2881], [0.3623]], [[0.0746], [0.7727]]]], [[[[0.3597], [0.0435]], [[0.0014], [0.3236]]], [[[0.1275], [0.7193]], [[0.9686], [0.5732]]]]])
w[1] = np.array([0, 0])
model.get_layer('Con73739').set_weights(w) 
in0Ave20983 = tf.constant([[[0.046, 0.1297]]])
in1Ave20983 = tf.constant([[[0.2486, 0.8624]]])
in0Con35371 = tf.constant([[[0.3763, 0.5753, 0.3191, 0.1529, 0.9113, 0.5395], [0.4341, 0.6419, 0.6507, 0.2863, 0.8439, 0.5115]]])
in0Max57680 = tf.constant([[[[0.9982, 0.7933], [0.1061, 0.0898]], [[0.1389, 0.1239], [0.0504, 0.4424]]]])
in1Max57680 = tf.constant([[[[0.067, 0.1718], [0.1527, 0.7495]], [[0.4481, 0.8613], [0.7767, 0.9715]]]])
in0Mul91834 = tf.constant([[[0.9105], [0.5192]]])
in1Mul91834 = tf.constant([[[0.9219], [0.9158]]])
in0Mul36103 = tf.constant([[[0.92], [0.8693]]])
in1Mul36103 = tf.constant([[[0.4529], [0.2428]]])
in0Sub70089 = tf.constant([[0.1744, 0.8775]])
in1Sub70089 = tf.constant([[0.2396, 0.3067]])
in0Con13003 = tf.constant([[0.5454, 0.299, 0.1666, 0.7692, 0.0924, 0.1697, 0.9754, 0.135, 0.4245, 0.8343, 0.5689, 0.5569, 0.5642, 0.4142]])
print (np.array2string(model.predict([in0Ave20983,in1Ave20983,in0Con35371,in0Max57680,in1Max57680,in0Mul91834,in1Mul91834,in0Mul36103,in1Mul36103,in0Sub70089,in1Sub70089,in0Con13003],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Max92920.png')

LAve20983 = average_layer([[[[0.046, 0.1297]]], [[[0.2486, 0.8624]]]], Ave20983), 
LCon50497 = conv1D_layer(Ave20983, 1,[[[0.1885, 0.3505], [0.7983, 0.9611]]],[0, 0], 4, false, 1, Con50497), 
LZer40063 = zero_padding1D_layer(Con50497, 1, 0, Zer40063), 
LCon35371 = concatenate_layer([Zer40063,[[[0.3763, 0.5753, 0.3191, 0.1529, 0.9113, 0.5395], [0.4341, 0.6419, 0.6507, 0.2863, 0.8439, 0.5115]]]], 2, Con35371), 
LMax57680 = maximum_layer([[[[[0.9982, 0.7933], [0.1061, 0.0898]], [[0.1389, 0.1239], [0.0504, 0.4424]]]], [[[[0.067, 0.1718], [0.1527, 0.7495]], [[0.4481, 0.8613], [0.7767, 0.9715]]]]], Max57680), 
LRes81232 = reshape_layer(Max57680, [2, 2, 2, 1], Res81232), 
LCon73739 = conv3D_transpose_layer(Res81232, 2, 2, 2,[[[[[0.1353], [0.5213]], [[0.8079], [0.444]]], [[[0.2881], [0.3623]], [[0.0746], [0.7727]]]], [[[[0.3597], [0.0435]], [[0.0014], [0.3236]]], [[[0.1275], [0.7193]], [[0.9686], [0.5732]]]]],[0, 0], 1, 1, 1, true, Con73739), 
LRes70797 = reshape_layer(Con73739, [2, 2, 4], Res70797), 
LRes43392 = reshape_layer(Res70797, [2, 8], Res43392), 
LCro46049 = cropping1D_layer(Res43392, 0, 0, Cro46049), 
LAve51630 = average_layer([Con35371,Cro46049], Ave51630), 
LFla5316 = flatten_layer(Ave51630, Fla5316), 
LMul91834 = multiply_layer([[[[0.9105], [0.5192]]], [[[0.9219], [0.9158]]]], Mul91834), 
LFla6279 = flatten_layer(Mul91834, Fla6279), 
LMul36103 = multiply_layer([[[[0.92], [0.8693]]], [[[0.4529], [0.2428]]]], Mul36103), 
LFla45698 = flatten_layer(Mul36103, Fla45698), 
LSub70089 = subtract_layer([[0.1744, 0.8775]], [[0.2396, 0.3067]], Sub70089), 
LMax9573 = maximum_layer([Fla45698,Sub70089], Max9573), 
LAve99867 = average_layer([Fla6279,Max9573], Ave99867), 
LCon13003 = concatenate_layer([Ave99867,[[0.5454, 0.299, 0.1666, 0.7692, 0.0924, 0.1697, 0.9754, 0.135, 0.4245, 0.8343, 0.5689, 0.5569, 0.5642, 0.4142]]], 1, Con13003), 
LMax92920 = maximum_layer([Fla5316,Con13003], Max92920), 
exec_layers([LAve20983,LCon50497,LZer40063,LCon35371,LMax57680,LRes81232,LCon73739,LRes70797,LRes43392,LCro46049,LAve51630,LFla5316,LMul91834,LFla6279,LMul36103,LFla45698,LSub70089,LMax9573,LAve99867,LCon13003,LMax92920],["Ave20983","Con50497","Zer40063","Con35371","Max57680","Res81232","Con73739","Res70797","Res43392","Cro46049","Ave51630","Fla5316","Mul91834","Fla6279","Mul36103","Fla45698","Sub70089","Max9573","Ave99867","Con13003","Max92920"],Max92920,"Max92920")

Actual (Unparsed): [[0.6280290, 0.5231417, 0.6450396, 0.7160240, 0.3136709, 0.7692000, 0.7195446, 1.0283674, 0.9754000, 0.4026993, 0.5997007, 0.8343000, 0.5689000, 0.7890940, 1.6111099, 1.6229497]]

Expected (Unparsed): [[0.6280289750000001,0.5231416799999999,0.645039635,0.7160240449999999,0.313670865,0.7692,0.719544565,1.02836744,0.9754,0.40269926749999996,0.5997006850000001,0.8343,0.5689,0.7890940249999999,1.611109935,1.622949755]]

Actual:   [[0.6281, 0.5232, 0.6451, 0.7161, 0.3137, 0.7692, 0.7196, 1.0284, 0.9754, 0.4027, 0.5998, 0.8343, 0.5689, 0.7891, 1.6112, 1.623]]

Expected: [[0.6281, 0.5232, 0.6451, 0.7161, 0.3137, 0.7692, 0.7196, 1.0284, 0.9754, 0.4027, 0.5998, 0.8343, 0.5689, 0.7891, 1.6112, 1.623]]