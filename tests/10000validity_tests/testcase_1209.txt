import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Mul16890 = tf.keras.layers.Input(shape=([1, 1]))
in1Mul16890 = tf.keras.layers.Input(shape=([1, 1]))

Mul16890 = keras.layers.Multiply(name = 'Mul16890', )([in0Mul16890,in1Mul16890])
Res51844 = keras.layers.Reshape((1, 1, 1), name = 'Res51844', )(Mul16890)
Ave81949 = keras.layers.AveragePooling2D(pool_size=(1, 1), strides=(4, 5), padding='valid', name = 'Ave81949', )(Res51844)
Den22796 = keras.layers.Dense(4,name = 'Den22796', )(Ave81949)
model = tf.keras.models.Model(inputs=[in0Mul16890,in1Mul16890], outputs=Den22796)
w = model.get_layer('Den22796').get_weights() 
w[0] = np.array([[0.8081, 0.9665, 0.0194, 0.8016]])
w[1] = np.array([0.063, 0.5596, 0.3557, 0.0903])
model.get_layer('Den22796').set_weights(w) 
in0Mul16890 = tf.constant([[[0.9124]]])
in1Mul16890 = tf.constant([[[0.3496]]])
print (np.array2string(model.predict([in0Mul16890,in1Mul16890],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Den22796.png')

LMul16890 = multiply_layer([[[[0.9124]]], [[[0.3496]]]], Mul16890), 
LRes51844 = reshape_layer(Mul16890, [1, 1, 1], Res51844), 
LAve81949 = average_pooling2D_layer(Res51844, 1, 1, 4, 5, false, Ave81949), 
LDen22796 = dense_layer(Ave81949, [[0.8081, 0.9665, 0.0194, 0.8016]],[0.063, 0.5596, 0.3557, 0.0903], Den22796), 
exec_layers([LMul16890,LRes51844,LAve81949,LDen22796],["Mul16890","Res51844","Ave81949","Den22796"],Den22796,"Den22796")

Actual (Unparsed): [[[[0.3207637, 0.8678894, 0.3618881, 0.3459904]]]]

Expected (Unparsed): [[[[0.32076372982400003,0.8678893761600001,0.361888115776,0.345990392064]]]]

Actual:   [[[[0.3208, 0.8679, 0.3619, 0.346]]]]

Expected: [[[[0.3208, 0.8679, 0.3619, 0.346]]]]