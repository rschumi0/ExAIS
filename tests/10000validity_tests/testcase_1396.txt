import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Ave1849 = tf.keras.layers.Input(shape=([2, 1, 1]))
in1Ave1849 = tf.keras.layers.Input(shape=([2, 1, 1]))
in0Con74724 = tf.keras.layers.Input(shape=([2, 3]))
in0Dot11145 = tf.keras.layers.Input(shape=([2, 3]))
in1Dot11145 = tf.keras.layers.Input(shape=([2, 3]))

Ave1849 = keras.layers.Average(name = 'Ave1849', )([in0Ave1849,in1Ave1849])
Res17262 = keras.layers.Reshape((2, 1), name = 'Res17262', )(Ave1849)
Con74724 = keras.layers.Concatenate(axis=2, name = 'Con74724', )([Res17262,in0Con74724])
Dot11145 = keras.layers.Dot(axes=(1, 1), name = 'Dot11145', )([in0Dot11145,in1Dot11145])
Loc41457 = keras.layers.LocallyConnected1D(4, (3),strides=(1), name = 'Loc41457', )(Dot11145)
Zer29444 = keras.layers.ZeroPadding1D(padding=((1, 0)), name = 'Zer29444', )(Loc41457)
Max85047 = keras.layers.Maximum(name = 'Max85047', )([Con74724,Zer29444])
Glo94270 = keras.layers.GlobalAveragePooling1D(name = 'Glo94270', )(Max85047)
model = tf.keras.models.Model(inputs=[in0Ave1849,in1Ave1849,in0Con74724,in0Dot11145,in1Dot11145], outputs=Glo94270)
w = model.get_layer('Loc41457').get_weights() 
w[0] = np.array([[[0.2891, 0.3769, 0.5728, 0.696], [0.2497, 0.438, 0.7893, 0.9835], [0.8408, 0.3556, 0.8098, 0.1913], [0.7886, 0.5155, 0.1385, 0.401], [0.9161, 0.0256, 0.4173, 0.9527], [0.0371, 0.6041, 0.4111, 0.2162], [0.9724, 0.1653, 0.0271, 0.4313], [0.6959, 0.3753, 0.3879, 0.6276], [0.2458, 0.0921, 0.4401, 0.2275]]])
w[1] = np.array([[0, 0, 0, 0]])
model.get_layer('Loc41457').set_weights(w) 
in0Ave1849 = tf.constant([[[[0.2999]], [[0.1269]]]])
in1Ave1849 = tf.constant([[[[0.9394]], [[0.5529]]]])
in0Con74724 = tf.constant([[[0.3118, 0.6948, 0.5203], [0.547, 0.9874, 0.7467]]])
in0Dot11145 = tf.constant([[[0.8749, 0.9487, 0.5932], [0.8405, 0.3488, 0.8447]]])
in1Dot11145 = tf.constant([[[0.651, 0.3164, 0.5074], [0.5884, 0.9759, 0.0977]]])
print (np.array2string(model.predict([in0Ave1849,in1Ave1849,in0Con74724,in0Dot11145,in1Dot11145],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Glo94270.png')

LAve1849 = average_layer([[[[[0.2999]], [[0.1269]]]], [[[[0.9394]], [[0.5529]]]]], Ave1849), 
LRes17262 = reshape_layer(Ave1849, [2, 1], Res17262), 
LCon74724 = concatenate_layer([Res17262,[[[0.3118, 0.6948, 0.5203], [0.547, 0.9874, 0.7467]]]], 2, Con74724), 
LDot11145 = dot_layer([[[0.8749, 0.9487, 0.5932], [0.8405, 0.3488, 0.8447]]], [[[0.651, 0.3164, 0.5074], [0.5884, 0.9759, 0.0977]]], 1, 1, Dot11145), 
LLoc41457 = locally_connected1D_layer(Dot11145, 3,[[[0.2891, 0.3769, 0.5728, 0.696], [0.2497, 0.438, 0.7893, 0.9835], [0.8408, 0.3556, 0.8098, 0.1913], [0.7886, 0.5155, 0.1385, 0.401], [0.9161, 0.0256, 0.4173, 0.9527], [0.0371, 0.6041, 0.4111, 0.2162], [0.9724, 0.1653, 0.0271, 0.4313], [0.6959, 0.3753, 0.3879, 0.6276], [0.2458, 0.0921, 0.4401, 0.2275]]],[[0, 0, 0, 0]], 1, Loc41457), 
LZer29444 = zero_padding1D_layer(Loc41457, 1, 0, Zer29444), 
LMax85047 = maximum_layer([Con74724,Zer29444], Max85047), 
LGlo94270 = global_average_pooling1D_layer(Max85047, Glo94270), 
exec_layers([LAve1849,LRes17262,LCon74724,LDot11145,LLoc41457,LZer29444,LMax85047,LGlo94270],["Ave1849","Res17262","Con74724","Dot11145","Loc41457","Zer29444","Max85047","Glo94270"],Glo94270,"Glo94270")

Actual (Unparsed): [[2.2778539, 1.3467597, 1.8873397, 2.2977488]]

Expected (Unparsed): [[2.277853898754,1.346759660837,1.8873397039095,2.2977487895705004]]

Actual:   [[2.2779, 1.3468, 1.8874, 2.2978]]

Expected: [[2.2779, 1.3468, 1.8874, 2.2978]]