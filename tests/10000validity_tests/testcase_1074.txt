import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Dot78115 = tf.keras.layers.Input(shape=([3, 3]))
in1Dot78115 = tf.keras.layers.Input(shape=([3, 3]))
in0Con95041 = tf.keras.layers.Input(shape=([1, 1]))
in0Con17730 = tf.keras.layers.Input(shape=([24]))
in0Con7943 = tf.keras.layers.Input(shape=([25, 1]))
in0Sub29110 = tf.keras.layers.Input(shape=([2, 2]))
in1Sub29110 = tf.keras.layers.Input(shape=([2, 2]))

Dot78115 = keras.layers.Dot(axes=(2, 2), name = 'Dot78115', )([in0Dot78115,in1Dot78115])
Sof79092 = keras.layers.Softmax(axis=1, name = 'Sof79092', )(Dot78115)
Res46422 = keras.layers.Reshape((3, 3, 1), name = 'Res46422', )(Sof79092)
Zer41698 = keras.layers.ZeroPadding2D(padding=((1, 1), (1, 1)), name = 'Zer41698', )(Res46422)
Res89329 = keras.layers.Reshape((5, 5), name = 'Res89329', )(Zer41698)
Fla30015 = keras.layers.Flatten(name = 'Fla30015', )(Res89329)
Con95041 = keras.layers.Conv1D(3, (1),strides=(8), padding='same', dilation_rate=(1), name = 'Con95041', )(in0Con95041)
Res58082 = keras.layers.Reshape((1, 3, 1), name = 'Res58082', )(Con95041)
Glo34490 = keras.layers.GlobalMaxPool2D(name = 'Glo34490', )(Res58082)
Con17730 = keras.layers.Concatenate(axis=1, name = 'Con17730', )([Glo34490,in0Con17730])
Sub63469 = keras.layers.Subtract(name = 'Sub63469', )([Fla30015,Con17730])
Res53083 = keras.layers.Reshape((25, 1), name = 'Res53083', )(Sub63469)
Con7943 = keras.layers.Concatenate(axis=2, name = 'Con7943', )([Res53083,in0Con7943])
Sub29110 = keras.layers.Subtract(name = 'Sub29110', )([in0Sub29110,in1Sub29110])
Zer98822 = keras.layers.ZeroPadding1D(padding=((23, 0)), name = 'Zer98822', )(Sub29110)
Ave10466 = keras.layers.Average(name = 'Ave10466', )([Con7943,Zer98822])
model = tf.keras.models.Model(inputs=[in0Dot78115,in1Dot78115,in0Con95041,in0Con17730,in0Con7943,in0Sub29110,in1Sub29110], outputs=Ave10466)
w = model.get_layer('Con95041').get_weights() 
w[0] = np.array([[[0.0704, 0.9304, 0.4896]]])
w[1] = np.array([0, 0, 0])
model.get_layer('Con95041').set_weights(w) 
in0Dot78115 = tf.constant([[[0.3468, 0.2195, 0.925], [0.2409, 0.4255, 0.1429], [0.8357, 0.5381, 0.9612]]])
in1Dot78115 = tf.constant([[[0.6874, 0.7508, 0.9277], [0.8905, 0.6046, 0.6407], [0.8542, 0.0627, 0.6188]]])
in0Con95041 = tf.constant([[[0.317]]])
in0Con17730 = tf.constant([[0.8596, 0.447, 0.3417, 0.7969, 0.1467, 0.3118, 0.2143, 0.2397, 0.7352, 0.7789, 0.4801, 0.0124, 0.0669, 0.3044, 0.5105, 0.828, 0.8194, 0.802, 0.7942, 0.8805, 0.2, 0.9296, 0.4706, 0.3644]])
in0Con7943 = tf.constant([[[0.1741], [0.9665], [0.868], [0.4485], [0.4848], [0.2769], [0.3841], [0.6838], [0.0396], [0.2835], [0.8125], [0.0308], [0.2439], [0.951], [0.1048], [0.7768], [0.2259], [0.7695], [0.5283], [0.6618], [0.6475], [0.1118], [0.9839], [0.6551], [0.0358]]])
in0Sub29110 = tf.constant([[[0.9444, 0.7911], [0.3366, 0.2637]]])
in1Sub29110 = tf.constant([[[0.5045, 0.8309], [0.4309, 0.7766]]])
print (np.array2string(model.predict([in0Dot78115,in1Dot78115,in0Con95041,in0Con17730,in0Con7943,in0Sub29110,in1Sub29110],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Ave10466.png')

LDot78115 = dot_layer([[[0.3468, 0.2195, 0.925], [0.2409, 0.4255, 0.1429], [0.8357, 0.5381, 0.9612]]], [[[0.6874, 0.7508, 0.9277], [0.8905, 0.6046, 0.6407], [0.8542, 0.0627, 0.6188]]], 2, 2, Dot78115), 
LSof79092 = softmax_layer(Dot78115, 1, Sof79092), 
LRes46422 = reshape_layer(Sof79092, [3, 3, 1], Res46422), 
LZer41698 = zero_padding2D_layer(Res46422, 1, 1, 1, 1, Zer41698), 
LRes89329 = reshape_layer(Zer41698, [5, 5], Res89329), 
LFla30015 = flatten_layer(Res89329, Fla30015), 
LCon95041 = conv1D_layer([[[0.317]]], 1,[[[0.0704, 0.9304, 0.4896]]],[0, 0, 0], 8, true, 1, Con95041), 
LRes58082 = reshape_layer(Con95041, [1, 3, 1], Res58082), 
LGlo34490 = global_max_pool2D_layer(Res58082, Glo34490), 
LCon17730 = concatenate_layer([Glo34490,[[0.8596, 0.447, 0.3417, 0.7969, 0.1467, 0.3118, 0.2143, 0.2397, 0.7352, 0.7789, 0.4801, 0.0124, 0.0669, 0.3044, 0.5105, 0.828, 0.8194, 0.802, 0.7942, 0.8805, 0.2, 0.9296, 0.4706, 0.3644]]], 1, Con17730), 
LSub63469 = subtract_layer(Fla30015,Con17730, Sub63469), 
LRes53083 = reshape_layer(Sub63469, [25, 1], Res53083), 
LCon7943 = concatenate_layer([Res53083,[[[0.1741], [0.9665], [0.868], [0.4485], [0.4848], [0.2769], [0.3841], [0.6838], [0.0396], [0.2835], [0.8125], [0.0308], [0.2439], [0.951], [0.1048], [0.7768], [0.2259], [0.7695], [0.5283], [0.6618], [0.6475], [0.1118], [0.9839], [0.6551], [0.0358]]]], 2, Con7943), 
LSub29110 = subtract_layer([[[0.9444, 0.7911], [0.3366, 0.2637]]], [[[0.5045, 0.8309], [0.4309, 0.7766]]], Sub29110), 
LZer98822 = zero_padding1D_layer(Sub29110, 23, 0, Zer98822), 
LAve10466 = average_layer([Con7943,Zer98822], Ave10466), 
exec_layers([LDot78115,LSof79092,LRes46422,LZer41698,LRes89329,LFla30015,LCon95041,LRes58082,LGlo34490,LCon17730,LSub63469,LRes53083,LCon7943,LSub29110,LZer98822,LAve10466],["Dot78115","Sof79092","Res46422","Zer41698","Res89329","Fla30015","Con95041","Res58082","Glo34490","Con17730","Sub63469","Res53083","Con7943","Sub29110","Zer98822","Ave10466"],Ave10466,"Ave10466")

Actual (Unparsed): [[[-0.1474684, 0.0870500], [-0.4298000, 0.4832500], [-0.2235000, 0.4340000], [-0.1708500, 0.2242500], [-0.3984500, 0.2424000], [-0.0733500, 0.1384500], [-0.0072534, 0.1920500], [0.0340019, 0.3419000], [0.0386580, 0.0198000], [-0.3676000, 0.1417500], [-0.3894500, 0.4062500], [-0.1619581, 0.0154000], [0.0819455, 0.1219500], [0.0569549, 0.4755000], [-0.1522000, 0.0524000], [-0.2552500, 0.3884000], [-0.1407385, 0.1129500], [-0.1389974, 0.3847500], [-0.1499128, 0.2641500], [-0.3971000, 0.3309000], [-0.4402500, 0.3237500], [-0.1000000, 0.0559000], [-0.4648000, 0.4919500], [-0.0153500, 0.3076500], [-0.2293500, -0.2385500]]]

Expected (Unparsed): [[[-0.1474684,0.08705],[-0.4298,0.48325],[-0.2235,0.434],[-0.17085,0.22425],[-0.39845,0.2424],[-0.07335,0.13845],[-0.007253402649970431,0.19205],[0.03400188901544726,0.3419],[0.03865798669195501,0.0198],[-0.3676,0.14175],[-0.38945,0.40625],[-0.16195807730984613,0.0154],[0.08194548761134796,0.12195],[0.05695485044027674,0.4755],[-0.1522,0.0524],[-0.25525,0.3884],[-0.14073852004018345,0.11295],[-0.13899737662679523,0.38475],[-0.1499128371322318,0.26415],[-0.3971,0.3309],[-0.44025,0.32375],[-0.1,0.0559],[-0.4648,0.49195],[-0.015349999999999975,0.30765000000000003],[-0.22935,-0.23854999999999996]]]

Actual:   [[[-0.1474, 0.0871], [-0.4298, 0.4833], [-0.2235, 0.434], [-0.1708, 0.2243], [-0.3984, 0.2424], [-0.0733, 0.1385], [-0.0072, 0.1921], [0.0341, 0.3419], [0.0387, 0.0198], [-0.3676, 0.1418], [-0.3894, 0.4063], [-0.1619, 0.0154], [0.082, 0.122], [0.057, 0.4755], [-0.1522, 0.0524], [-0.2552, 0.3884], [-0.1407, 0.113], [-0.1389, 0.3848], [-0.1499, 0.2642], [-0.3971, 0.3309], [-0.4402, 0.3238], [-0.1, 0.0559], [-0.4648, 0.492], [-0.0153, 0.3077], [-0.2293, -0.2385]]]

Expected: [[[-0.1474, 0.0871], [-0.4298, 0.4833], [-0.2235, 0.434], [-0.1708, 0.2243], [-0.3984, 0.2424], [-0.0733, 0.1385], [-0.0072, 0.1921], [0.0341, 0.3419], [0.0387, 0.0198], [-0.3676, 0.1418], [-0.3894, 0.4063], [-0.1619, 0.0154], [0.082, 0.122], [0.057, 0.4755], [-0.1522, 0.0524], [-0.2552, 0.3884], [-0.1407, 0.113], [-0.1389, 0.3848], [-0.1499, 0.2642], [-0.3971, 0.3309], [-0.4402, 0.3238], [-0.1, 0.0559], [-0.4648, 0.492], [-0.0153, 0.3077], [-0.2293, -0.2385]]]