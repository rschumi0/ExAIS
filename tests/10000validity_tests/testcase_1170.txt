import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Lea26622 = tf.keras.layers.Input(shape=([2, 2]))
in0Con90987 = tf.keras.layers.Input(shape=([1, 1, 1]))
in0Lea34700 = tf.keras.layers.Input(shape=([1, 1, 2]))
in0Min46460 = tf.keras.layers.Input(shape=([1, 1, 1, 1]))
in1Min46460 = tf.keras.layers.Input(shape=([1, 1, 1, 1]))
in0PRe18610 = tf.keras.layers.Input(shape=([2, 2, 2, 1]))
in0Ave27644 = tf.keras.layers.Input(shape=([2, 1, 1]))
in0Con42196 = tf.keras.layers.Input(shape=([2, 2, 1]))

Lea26622 = keras.layers.LeakyReLU(alpha=3.279999461302878, name = 'Lea26622', input_shape=(2, 2))(in0Lea26622)
Res14888 = keras.layers.Reshape((2, 2, 1), name = 'Res14888', )(Lea26622)
Res25991 = keras.layers.Reshape((2, 2, 1, 1), name = 'Res25991', )(Res14888)
Glo81753 = keras.layers.GlobalMaxPool3D(name = 'Glo81753', )(Res25991)
Res70496 = keras.layers.Reshape((1, 1), name = 'Res70496', )(Glo81753)
Res5856 = keras.layers.Reshape((1, 1, 1), name = 'Res5856', )(Res70496)
Con90987 = keras.layers.Concatenate(axis=3, name = 'Con90987', )([Res5856,in0Con90987])
Lea34700 = keras.layers.LeakyReLU(alpha=8.386478635744185, name = 'Lea34700', input_shape=(1, 1, 2))(in0Lea34700)
Min15454 = keras.layers.Minimum(name = 'Min15454', )([Con90987,Lea34700])
Zer69805 = keras.layers.ZeroPadding2D(padding=((1, 0), (1, 0)), name = 'Zer69805', )(Min15454)
Min46460 = keras.layers.Minimum(name = 'Min46460', )([in0Min46460,in1Min46460])
Zer82422 = keras.layers.ZeroPadding3D(padding=((1, 0), (1, 0), (1, 0)), name = 'Zer82422', )(Min46460)
PRe18610 = keras.layers.PReLU(name = 'PRe18610', input_shape=(2, 2, 2, 1))(in0PRe18610)
Min5826 = keras.layers.Minimum(name = 'Min5826', )([Zer82422,PRe18610])
Res50079 = keras.layers.Reshape((2, 2, 2), name = 'Res50079', )(Min5826)
Ave27644 = keras.layers.AveragePooling2D(pool_size=(1, 1), strides=(2, 1), padding='same', name = 'Ave27644', )(in0Ave27644)
Zer47298 = keras.layers.ZeroPadding2D(padding=((1, 0), (1, 0)), name = 'Zer47298', )(Ave27644)
Con42196 = keras.layers.Concatenate(axis=3, name = 'Con42196', )([Zer47298,in0Con42196])
Mul431 = keras.layers.Multiply(name = 'Mul431', )([Res50079,Con42196])
Ave70422 = keras.layers.Average(name = 'Ave70422', )([Zer69805,Mul431])
model = tf.keras.models.Model(inputs=[in0Lea26622,in0Con90987,in0Lea34700,in0Min46460,in1Min46460,in0PRe18610,in0Ave27644,in0Con42196], outputs=Ave70422)
w = model.get_layer('PRe18610').get_weights() 
w[0] = np.array([[[[0.6474], [0.247]], [[0.2939], [0.5687]]], [[[0.3625], [0.5711]], [[0.4638], [0.522]]]])
model.get_layer('PRe18610').set_weights(w) 
in0Lea26622 = tf.constant([[[0.1882, 0.2756], [0.6358, 0.019]]])
in0Con90987 = tf.constant([[[[0.5911]]]])
in0Lea34700 = tf.constant([[[[0.8332, 0.3949]]]])
in0Min46460 = tf.constant([[[[[0.7483]]]]])
in1Min46460 = tf.constant([[[[[0.9576]]]]])
in0PRe18610 = tf.constant([[[[[0.1249], [0.0936]], [[0.6217], [0.4837]]], [[[0.9969], [0.6308]], [[0.4111], [0.7648]]]]])
in0Ave27644 = tf.constant([[[[1.3802]], [[1.7257]]]])
in0Con42196 = tf.constant([[[[0.2017], [0.961]], [[0.4541], [0.4854]]]])
print (np.array2string(model.predict([in0Lea26622,in0Con90987,in0Lea34700,in0Min46460,in1Min46460,in0PRe18610,in0Ave27644,in0Con42196],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Ave70422.png')

LLea26622 = leaky_relu_layer([[[0.1882, 0.2756], [0.6358, 0.019]]], 3.279999461302878, Lea26622), 
LRes14888 = reshape_layer(Lea26622, [2, 2, 1], Res14888), 
LRes25991 = reshape_layer(Res14888, [2, 2, 1, 1], Res25991), 
LGlo81753 = global_max_pool3D_layer(Res25991, Glo81753), 
LRes70496 = reshape_layer(Glo81753, [1, 1], Res70496), 
LRes5856 = reshape_layer(Res70496, [1, 1, 1], Res5856), 
LCon90987 = concatenate_layer([Res5856,[[[[0.5911]]]]], 3, Con90987), 
LLea34700 = leaky_relu_layer([[[[0.8332, 0.3949]]]], 8.386478635744185, Lea34700), 
LMin15454 = minimum_layer([Con90987,Lea34700], Min15454), 
LZer69805 = zero_padding2D_layer(Min15454, 1, 0, 1, 0, Zer69805), 
LMin46460 = minimum_layer([[[[[[0.7483]]]]], [[[[[0.9576]]]]]], Min46460), 
LZer82422 = zero_padding3D_layer(Min46460, 1, 0, 1, 0, 1, 0, Zer82422), 
LPRe18610 = prelu_layer([[[[[0.1249], [0.0936]], [[0.6217], [0.4837]]], [[[0.9969], [0.6308]], [[0.4111], [0.7648]]]]], [[[[0.6474], [0.247]], [[0.2939], [0.5687]]], [[[0.3625], [0.5711]], [[0.4638], [0.522]]]], PRe18610), 
LMin5826 = minimum_layer([Zer82422,PRe18610], Min5826), 
LRes50079 = reshape_layer(Min5826, [2, 2, 2], Res50079), 
LAve27644 = average_pooling2D_layer([[[[1.3802]], [[1.7257]]]], 1, 1, 2, 1, true, Ave27644), 
LZer47298 = zero_padding2D_layer(Ave27644, 1, 0, 1, 0, Zer47298), 
LCon42196 = concatenate_layer([Zer47298,[[[[0.2017], [0.961]], [[0.4541], [0.4854]]]]], 3, Con42196), 
LMul431 = multiply_layer([Res50079,Con42196], Mul431), 
LAve70422 = average_layer([Zer69805,Mul431], Ave70422), 
exec_layers([LLea26622,LRes14888,LRes25991,LGlo81753,LRes70496,LRes5856,LCon90987,LLea34700,LMin15454,LZer69805,LMin46460,LZer82422,LPRe18610,LMin5826,LRes50079,LAve27644,LZer47298,LCon42196,LMul431,LAve70422],["Lea26622","Res14888","Res25991","Glo81753","Res70496","Res5856","Con90987","Lea34700","Min15454","Zer69805","Min46460","Zer82422","PRe18610","Min5826","Res50079","Ave27644","Zer47298","Con42196","Mul431","Ave70422"],Ave70422,"Ave70422")

Actual (Unparsed): [[[[0.0000000, 0.0000000], [0.0000000, 0.0000000]], [[0.0000000, 0.0000000], [0.3179000, 0.3790624]]]]

Expected (Unparsed): [[[[0,0.0],[0,0.0]],[[0,0.0],[0.3179,0.37906240999999996]]]]

Actual:   [[[[0, 0], [0, 0]], [[0, 0], [0.3179, 0.3791]]]]

Expected: [[[[0, 0], [0, 0]], [[0, 0], [0.3179, 0.3791]]]]