import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Min32323 = tf.keras.layers.Input(shape=([2, 2, 2, 2]))
in1Min32323 = tf.keras.layers.Input(shape=([2, 2, 2, 2]))
in0PRe53317 = tf.keras.layers.Input(shape=([1, 2, 1]))
in0Sub70448 = tf.keras.layers.Input(shape=([2, 2]))
in1Sub70448 = tf.keras.layers.Input(shape=([2, 2]))
in0Con8971 = tf.keras.layers.Input(shape=([4, 6]))

Min32323 = keras.layers.Minimum(name = 'Min32323', )([in0Min32323,in1Min32323])
Res20595 = keras.layers.Reshape((2, 2, 4), name = 'Res20595', )(Min32323)
Res9706 = keras.layers.Reshape((2, 8), name = 'Res9706', )(Res20595)
Zer86183 = keras.layers.ZeroPadding1D(padding=((2, 0)), name = 'Zer86183', )(Res9706)
PRe53317 = keras.layers.PReLU(name = 'PRe53317', input_shape=(1, 2, 1))(in0PRe53317)
Res9683 = keras.layers.Reshape((1, 2), name = 'Res9683', )(PRe53317)
Zer2856 = keras.layers.ZeroPadding1D(padding=((1, 0)), name = 'Zer2856', )(Res9683)
Sub70448 = keras.layers.Subtract(name = 'Sub70448', )([in0Sub70448,in1Sub70448])
Mul40565 = keras.layers.Multiply(name = 'Mul40565', )([Zer2856,Sub70448])
Zer3893 = keras.layers.ZeroPadding1D(padding=((1, 1)), name = 'Zer3893', )(Mul40565)
Con8971 = keras.layers.Concatenate(axis=2, name = 'Con8971', )([Zer3893,in0Con8971])
Add57673 = keras.layers.Add(name = 'Add57673', )([Zer86183,Con8971])
model = tf.keras.models.Model(inputs=[in0Min32323,in1Min32323,in0PRe53317,in0Sub70448,in1Sub70448,in0Con8971], outputs=Add57673)
w = model.get_layer('PRe53317').get_weights() 
w[0] = np.array([[[0.6363], [0.4131]]])
model.get_layer('PRe53317').set_weights(w) 
in0Min32323 = tf.constant([[[[[0.783, 0.5428], [0.7005, 0.1934]], [[0.2932, 0.229], [0.0551, 0.5556]]], [[[0.6376, 0.9784], [0.6226, 0.8967]], [[0.0952, 0.0571], [0.6406, 0.0873]]]]])
in1Min32323 = tf.constant([[[[[0.788, 0.4124], [0.6805, 0.8788]], [[0.9302, 0.7442], [0.9732, 0.2081]]], [[[0.5019, 0.0224], [0.6217, 0.924]], [[0.6495, 0.2378], [0.9945, 0.4077]]]]])
in0PRe53317 = tf.constant([[[[0.3883], [0.8905]]]])
in0Sub70448 = tf.constant([[[0.0739, 0.607], [0.1193, 0.355]]])
in1Sub70448 = tf.constant([[[0.1729, 0.4637], [0.0644, 0.7942]]])
in0Con8971 = tf.constant([[[0.1808, 0.8717, 0.4966, 0.9133, 0.5524, 0.2464], [0.8562, 0.6101, 0.0936, 0.4166, 0.8137, 0.7965], [0.7573, 0.8053, 0.0742, 0.8554, 0.5751, 0.9032], [0.9665, 0.3114, 0.4799, 0.9639, 0.9427, 0.8944]]])
print (np.array2string(model.predict([in0Min32323,in1Min32323,in0PRe53317,in0Sub70448,in1Sub70448,in0Con8971],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Add57673.png')

LMin32323 = minimum_layer([[[[[[0.783, 0.5428], [0.7005, 0.1934]], [[0.2932, 0.229], [0.0551, 0.5556]]], [[[0.6376, 0.9784], [0.6226, 0.8967]], [[0.0952, 0.0571], [0.6406, 0.0873]]]]], [[[[[0.788, 0.4124], [0.6805, 0.8788]], [[0.9302, 0.7442], [0.9732, 0.2081]]], [[[0.5019, 0.0224], [0.6217, 0.924]], [[0.6495, 0.2378], [0.9945, 0.4077]]]]]], Min32323), 
LRes20595 = reshape_layer(Min32323, [2, 2, 4], Res20595), 
LRes9706 = reshape_layer(Res20595, [2, 8], Res9706), 
LZer86183 = zero_padding1D_layer(Res9706, 2, 0, Zer86183), 
LPRe53317 = prelu_layer([[[[0.3883], [0.8905]]]], [[[0.6363], [0.4131]]], PRe53317), 
LRes9683 = reshape_layer(PRe53317, [1, 2], Res9683), 
LZer2856 = zero_padding1D_layer(Res9683, 1, 0, Zer2856), 
LSub70448 = subtract_layer([[[0.0739, 0.607], [0.1193, 0.355]]], [[[0.1729, 0.4637], [0.0644, 0.7942]]], Sub70448), 
LMul40565 = multiply_layer([Zer2856,Sub70448], Mul40565), 
LZer3893 = zero_padding1D_layer(Mul40565, 1, 1, Zer3893), 
LCon8971 = concatenate_layer([Zer3893,[[[0.1808, 0.8717, 0.4966, 0.9133, 0.5524, 0.2464], [0.8562, 0.6101, 0.0936, 0.4166, 0.8137, 0.7965], [0.7573, 0.8053, 0.0742, 0.8554, 0.5751, 0.9032], [0.9665, 0.3114, 0.4799, 0.9639, 0.9427, 0.8944]]]], 2, Con8971), 
LAdd57673 = add_layer([Zer86183,Con8971], Add57673), 
exec_layers([LMin32323,LRes20595,LRes9706,LZer86183,LPRe53317,LRes9683,LZer2856,LSub70448,LMul40565,LZer3893,LCon8971,LAdd57673],["Min32323","Res20595","Res9706","Zer86183","PRe53317","Res9683","Zer2856","Sub70448","Mul40565","Zer3893","Con8971","Add57673"],Add57673,"Add57673")

Actual (Unparsed): [[[0.0000000, 0.0000000, 0.1808000, 0.8717000, 0.4966000, 0.9133000, 0.5524000, 0.2464000], [0.0000000, 0.0000000, 0.8562000, 0.6101000, 0.0936000, 0.4166000, 0.8137000, 0.7965000], [0.8043177, 0.0212924, 1.4378000, 0.9987000, 0.3674000, 1.0844000, 0.6302000, 1.1113000], [0.5019000, 0.0224000, 1.5882000, 1.2081000, 0.5751000, 1.0210000, 1.5833001, 0.9817000]]]

Expected (Unparsed): [[[0,0,0.1808,0.8717,0.4966,0.9133,0.5524,0.2464],[0.0,0.0,0.8562,0.6101,0.0936,0.4166,0.8137,0.7965],[0.80431767,0.02129239999999999,1.4378,0.9987,0.3674,1.0844,0.6302,1.1113],[0.5019,0.0224,1.5882,1.2081,0.5751,1.021,1.5833,0.9817]]]

Actual:   [[[0, 0, 0.1808, 0.8717, 0.4966, 0.9133, 0.5524, 0.2464], [0, 0, 0.8562, 0.6101, 0.0936, 0.4166, 0.8137, 0.7965], [0.8044, 0.0213, 1.4378, 0.9987, 0.3674, 1.0844, 0.6302, 1.1113], [0.5019, 0.0224, 1.5882, 1.2081, 0.5751, 1.021, 1.5834, 0.9817]]]

Expected: [[[0, 0, 0.1808, 0.8717, 0.4966, 0.9133, 0.5524, 0.2464], [0, 0, 0.8562, 0.6101, 0.0936, 0.4166, 0.8137, 0.7965], [0.8044, 0.0213, 1.4378, 0.9987, 0.3674, 1.0844, 0.6302, 1.1113], [0.5019, 0.0224, 1.5882, 1.2081, 0.5751, 1.021, 1.5833, 0.9817]]]