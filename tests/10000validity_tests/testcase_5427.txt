import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Sep90232 = tf.keras.layers.Input(shape=([2, 2]))
in0Con30941 = tf.keras.layers.Input(shape=([2, 2, 2, 1]))
in0Add5251 = tf.keras.layers.Input(shape=([2, 2, 2, 2]))
in1Add5251 = tf.keras.layers.Input(shape=([2, 2, 2, 2]))
in0Dot22540 = tf.keras.layers.Input(shape=([3, 3]))
in1Dot22540 = tf.keras.layers.Input(shape=([3, 3]))
in0Con12895 = tf.keras.layers.Input(shape=([3, 5]))
in0Con17324 = tf.keras.layers.Input(shape=([3, 8, 3]))
in0Cro77650 = tf.keras.layers.Input(shape=([3, 3]))
in0Add36590 = tf.keras.layers.Input(shape=([2, 1]))
in1Add36590 = tf.keras.layers.Input(shape=([2, 1]))
in0Con46273 = tf.keras.layers.Input(shape=([2, 1]))

Sep90232 = keras.layers.SeparableConv1D(2, (1),strides=(2), padding='same', name = 'Sep90232', )(in0Sep90232)
Res74230 = keras.layers.Reshape((1, 2, 1), name = 'Res74230', )(Sep90232)
Res60203 = keras.layers.Reshape((1, 2, 1, 1), name = 'Res60203', )(Res74230)
Zer45871 = keras.layers.ZeroPadding3D(padding=((1, 0), (0, 0), (1, 0)), name = 'Zer45871', )(Res60203)
Con30941 = keras.layers.Concatenate(axis=4, name = 'Con30941', )([Zer45871,in0Con30941])
Add5251 = keras.layers.Add(name = 'Add5251', )([in0Add5251,in1Add5251])
Max82558 = keras.layers.Maximum(name = 'Max82558', )([Con30941,Add5251])
Res3278 = keras.layers.Reshape((2, 2, 4), name = 'Res3278', )(Max82558)
Res97769 = keras.layers.Reshape((2, 8), name = 'Res97769', )(Res3278)
Zer64748 = keras.layers.ZeroPadding1D(padding=((1, 0)), name = 'Zer64748', )(Res97769)
Dot22540 = keras.layers.Dot(axes=(2, 2), name = 'Dot22540', )([in0Dot22540,in1Dot22540])
Con12895 = keras.layers.Concatenate(axis=2, name = 'Con12895', )([Dot22540,in0Con12895])
Add49501 = keras.layers.Add(name = 'Add49501', )([Zer64748,Con12895])
Res50734 = keras.layers.Reshape((3, 8, 1), name = 'Res50734', )(Add49501)
Con17324 = keras.layers.Concatenate(axis=3, name = 'Con17324', )([Res50734,in0Con17324])
Cro77650 = keras.layers.Cropping1D(cropping=((0, 1)), name = 'Cro77650', )(in0Cro77650)
Per24794 = keras.layers.Permute((2,1), name = 'Per24794',)(Cro77650)
Res70959 = keras.layers.Reshape((3, 2, 1), name = 'Res70959', )(Per24794)
Loc13383 = keras.layers.LocallyConnected2D(2, (3, 2),strides=(1, 1), name = 'Loc13383', )(Res70959)
Res66737 = keras.layers.Reshape((1, 2), name = 'Res66737', )(Loc13383)
Zer61924 = keras.layers.ZeroPadding1D(padding=((1, 0)), name = 'Zer61924', )(Res66737)
Add36590 = keras.layers.Add(name = 'Add36590', )([in0Add36590,in1Add36590])
Con46273 = keras.layers.Concatenate(axis=2, name = 'Con46273', )([Add36590,in0Con46273])
Ave40277 = keras.layers.Average(name = 'Ave40277', )([Zer61924,Con46273])
Res76021 = keras.layers.Reshape((2, 2, 1), name = 'Res76021', )(Ave40277)
Loc3425 = keras.layers.LocallyConnected2D(4, (1, 2),strides=(1, 1), name = 'Loc3425', )(Res76021)
Zer47669 = keras.layers.ZeroPadding2D(padding=((1, 0), (7, 0)), name = 'Zer47669', )(Loc3425)
Max52411 = keras.layers.Maximum(name = 'Max52411', )([Con17324,Zer47669])
model = tf.keras.models.Model(inputs=[in0Sep90232,in0Con30941,in0Add5251,in1Add5251,in0Dot22540,in1Dot22540,in0Con12895,in0Con17324,in0Cro77650,in0Add36590,in1Add36590,in0Con46273], outputs=Max52411)
w = model.get_layer('Sep90232').get_weights() 
w[0] = np.array([[[0.9874], [0.4295]]])
w[1] = np.array([[[0.8411, 0.8958], [0.751, 0.6396]]])
w[2] = np.array([0, 0])
model.get_layer('Sep90232').set_weights(w) 
w = model.get_layer('Loc13383').get_weights() 
w[0] = np.array([[[0.6217, 0.3394], [0.6552, 0.6816], [0.167, 0.2576], [0.9709, 0.6263], [0.2572, 0.6997], [0.089, 0.5311]]])
w[1] = np.array([[[0, 0]]])
model.get_layer('Loc13383').set_weights(w) 
w = model.get_layer('Loc3425').get_weights() 
w[0] = np.array([[[0.1943, 0.4452, 0.1134, 0.9459], [0.5908, 0.9425, 0.125, 0.1916]], [[0.4384, 0.7595, 0.2141, 0.9315], [0.5382, 0.6875, 0.766, 0.6721]]])
w[1] = np.array([[[0, 0, 0, 0]], [[0, 0, 0, 0]]])
model.get_layer('Loc3425').set_weights(w) 
in0Sep90232 = tf.constant([[[0.475, 0.0073], [0.7646, 0.94]]])
in0Con30941 = tf.constant([[[[[0.4602], [0.9846]], [[0.3059], [0.258]]], [[[0.2172], [0.6263]], [[0.6708], [0.6577]]]]])
in0Add5251 = tf.constant([[[[[0.4669, 0.7877], [0.4594, 0.6349]], [[0.7834, 0.9326], [0.9661, 0.046]]], [[[0.9499, 0.09], [0.4411, 0.2084]], [[0.0172, 0.3496], [0.2903, 0.8508]]]]])
in1Add5251 = tf.constant([[[[[0.6829, 0.0652], [0.716, 0.6619]], [[0.0501, 0.6778], [0.161, 0.5002]]], [[[0.4234, 0.5645], [0.3496, 0.0449]], [[0.7745, 0.3322], [0.2419, 0.7973]]]]])
in0Dot22540 = tf.constant([[[0.7635, 0.6459, 0.369], [0.5243, 0.4942, 0.637], [0.6964, 0.2118, 0.5043]]])
in1Dot22540 = tf.constant([[[0.1701, 0.375, 0.3417], [0.8417, 0.7679, 0.4819], [0.8406, 0.4621, 0.7848]]])
in0Con12895 = tf.constant([[[0.8413, 0.3508, 0.5984, 0.1494, 0.0043], [0.6843, 0.7936, 0.9031, 0.0913, 0.1551], [0.8883, 0.1858, 0.207, 0.9362, 0.439]]])
in0Con17324 = tf.constant([[[[0.6386, 0.6725, 0.7671], [0.6276, 0.972, 0.9307], [0.6918, 0.7819, 0.4582], [0.9775, 0.7105, 0.5902], [0.2672, 0.1615, 0.6943], [0.4313, 0.0533, 0.3652], [0.4801, 0.8107, 0.2488], [0.2673, 0.9452, 0.368]], [[0.9192, 0.0249, 0.6036], [0.1953, 0.6695, 0.6912], [0.4246, 0.8218, 0.7107], [0.2718, 0.7022, 0.9471], [0.0782, 0.4382, 0.7089], [0.7643, 0.1739, 0.5714], [0.5574, 0.5047, 0.2526], [0.9827, 0.1633, 0.6562]], [[0.2131, 0.8774, 0.4527], [0.1615, 0.0657, 0.8651], [0.9899, 0.7838, 0.7529], [0.5979, 0.0158, 0.7455], [0.5706, 0.4207, 0.4806], [0.6889, 0.3053, 0.7588], [0.0313, 0.9877, 0.3395], [0.3306, 0.0715, 0.4457]]]])
in0Cro77650 = tf.constant([[[1.1285, 1.3635, 1.6005], [1.5066, 1.1183, 1.6655], [1.2123, 1.208, 1.6746]]])
in0Add36590 = tf.constant([[[0.6966], [0.0593]]])
in1Add36590 = tf.constant([[[0.8433], [0.6239]]])
in0Con46273 = tf.constant([[[0.18], [0.8184]]])
print (np.array2string(model.predict([in0Sep90232,in0Con30941,in0Add5251,in1Add5251,in0Dot22540,in1Dot22540,in0Con12895,in0Con17324,in0Cro77650,in0Add36590,in1Add36590,in0Con46273],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Max52411.png')

LSep90232 = separable_conv1D_layer([[[0.475, 0.0073], [0.7646, 0.94]]], 1,[[[[0.9874], [0.4295]]],[[[0.8411, 0.8958], [0.751, 0.6396]]]],[0, 0], 2, true, Sep90232), 
LRes74230 = reshape_layer(Sep90232, [1, 2, 1], Res74230), 
LRes60203 = reshape_layer(Res74230, [1, 2, 1, 1], Res60203), 
LZer45871 = zero_padding3D_layer(Res60203, 1, 0, 0, 0, 1, 0, Zer45871), 
LCon30941 = concatenate_layer([Zer45871,[[[[[0.4602], [0.9846]], [[0.3059], [0.258]]], [[[0.2172], [0.6263]], [[0.6708], [0.6577]]]]]], 4, Con30941), 
LAdd5251 = add_layer([[[[[[0.4669, 0.7877], [0.4594, 0.6349]], [[0.7834, 0.9326], [0.9661, 0.046]]], [[[0.9499, 0.09], [0.4411, 0.2084]], [[0.0172, 0.3496], [0.2903, 0.8508]]]]], [[[[[0.6829, 0.0652], [0.716, 0.6619]], [[0.0501, 0.6778], [0.161, 0.5002]]], [[[0.4234, 0.5645], [0.3496, 0.0449]], [[0.7745, 0.3322], [0.2419, 0.7973]]]]]], Add5251), 
LMax82558 = maximum_layer([Con30941,Add5251], Max82558), 
LRes3278 = reshape_layer(Max82558, [2, 2, 4], Res3278), 
LRes97769 = reshape_layer(Res3278, [2, 8], Res97769), 
LZer64748 = zero_padding1D_layer(Res97769, 1, 0, Zer64748), 
LDot22540 = dot_layer([[[0.7635, 0.6459, 0.369], [0.5243, 0.4942, 0.637], [0.6964, 0.2118, 0.5043]]], [[[0.1701, 0.375, 0.3417], [0.8417, 0.7679, 0.4819], [0.8406, 0.4621, 0.7848]]], 2, 2, Dot22540), 
LCon12895 = concatenate_layer([Dot22540,[[[0.8413, 0.3508, 0.5984, 0.1494, 0.0043], [0.6843, 0.7936, 0.9031, 0.0913, 0.1551], [0.8883, 0.1858, 0.207, 0.9362, 0.439]]]], 2, Con12895), 
LAdd49501 = add_layer([Zer64748,Con12895], Add49501), 
LRes50734 = reshape_layer(Add49501, [3, 8, 1], Res50734), 
LCon17324 = concatenate_layer([Res50734,[[[[0.6386, 0.6725, 0.7671], [0.6276, 0.972, 0.9307], [0.6918, 0.7819, 0.4582], [0.9775, 0.7105, 0.5902], [0.2672, 0.1615, 0.6943], [0.4313, 0.0533, 0.3652], [0.4801, 0.8107, 0.2488], [0.2673, 0.9452, 0.368]], [[0.9192, 0.0249, 0.6036], [0.1953, 0.6695, 0.6912], [0.4246, 0.8218, 0.7107], [0.2718, 0.7022, 0.9471], [0.0782, 0.4382, 0.7089], [0.7643, 0.1739, 0.5714], [0.5574, 0.5047, 0.2526], [0.9827, 0.1633, 0.6562]], [[0.2131, 0.8774, 0.4527], [0.1615, 0.0657, 0.8651], [0.9899, 0.7838, 0.7529], [0.5979, 0.0158, 0.7455], [0.5706, 0.4207, 0.4806], [0.6889, 0.3053, 0.7588], [0.0313, 0.9877, 0.3395], [0.3306, 0.0715, 0.4457]]]]], 3, Con17324), 
LCro77650 = cropping1D_layer([[[1.1285, 1.3635, 1.6005], [1.5066, 1.1183, 1.6655], [1.2123, 1.208, 1.6746]]], 0, 1, Cro77650), 
LPer24794 = permute_layer(Cro77650, 2,1, Per24794), 
LRes70959 = reshape_layer(Per24794, [3, 2, 1], Res70959), 
LLoc13383 = locally_connected2D_layer(Res70959, 3, 2,[[[0.6217, 0.3394], [0.6552, 0.6816], [0.167, 0.2576], [0.9709, 0.6263], [0.2572, 0.6997], [0.089, 0.5311]]],[[[0, 0]]], 1, 1, Loc13383), 
LRes66737 = reshape_layer(Loc13383, [1, 2], Res66737), 
LZer61924 = zero_padding1D_layer(Res66737, 1, 0, Zer61924), 
LAdd36590 = add_layer([[[[0.6966], [0.0593]]], [[[0.8433], [0.6239]]]], Add36590), 
LCon46273 = concatenate_layer([Add36590,[[[0.18], [0.8184]]]], 2, Con46273), 
LAve40277 = average_layer([Zer61924,Con46273], Ave40277), 
LRes76021 = reshape_layer(Ave40277, [2, 2, 1], Res76021), 
LLoc3425 = locally_connected2D_layer(Res76021, 1, 2,[[[0.1943, 0.4452, 0.1134, 0.9459], [0.5908, 0.9425, 0.125, 0.1916]], [[0.4384, 0.7595, 0.2141, 0.9315], [0.5382, 0.6875, 0.766, 0.6721]]],[[[0, 0, 0, 0]], [[0, 0, 0, 0]]], 1, 1, Loc3425), 
LZer47669 = zero_padding2D_layer(Loc3425, 1, 0, 7, 0, Zer47669), 
LMax52411 = maximum_layer([Con17324,Zer47669], Max52411), 
exec_layers([LSep90232,LRes74230,LRes60203,LZer45871,LCon30941,LAdd5251,LMax82558,LRes3278,LRes97769,LZer64748,LDot22540,LCon12895,LAdd49501,LRes50734,LCon17324,LCro77650,LPer24794,LRes70959,LLoc13383,LRes66737,LZer61924,LAdd36590,LCon46273,LAve40277,LRes76021,LLoc3425,LZer47669,LMax52411],["Sep90232","Res74230","Res60203","Zer45871","Con30941","Add5251","Max82558","Res3278","Res97769","Zer64748","Dot22540","Con12895","Add49501","Res50734","Con17324","Cro77650","Per24794","Res70959","Loc13383","Res66737","Zer61924","Add36590","Con46273","Ave40277","Res76021","Loc3425","Zer47669","Max52411"],Max52411,"Max52411")

Actual (Unparsed): [[[[0.4981711, 0.6386000, 0.6725000, 0.7671000], [1.3164457, 0.6276000, 0.9720000, 0.9307000], [1.2298597, 0.6918000, 0.7819000, 0.4582000], [0.8413000, 0.9775000, 0.7105000, 0.5902000], [0.3508000, 0.2672000, 0.1615000, 0.6943000], [0.5984000, 0.4313000, 0.0533000, 0.3652000], [0.1494000, 0.4801000, 0.8107000, 0.2488000], [0.0043000, 0.2673000, 0.9452000, 0.3680000]], [[1.6419713, 0.9192000, 0.0249000, 0.6036000], [1.9806698, 0.1953000, 0.6695000, 0.6912000], [2.3444140, 0.4246000, 0.8218000, 0.7107000], [1.9811000, 0.2718000, 0.7022000, 0.9471000], [1.6271000, 0.0782000, 0.4382000, 0.7089000], [2.5135000, 0.7643000, 0.1739000, 0.5714000], [1.2184000, 0.5574000, 0.5047000, 0.2526000], [0.7013000, 0.9827000, 0.1633000, 0.7455397]], [[1.7435019, 0.2131000, 0.8774000, 0.4527000], [1.6463232, 0.1615000, 0.0657000, 0.8651000], [1.8697412, 0.9899000, 0.7838000, 0.7529000], [1.5146000, 0.5979000, 0.0158000, 0.7455000], [0.9775000, 0.5706000, 0.4207000, 0.4806000], [0.8888000, 0.6889000, 0.3053000, 0.7588000], [1.4684000, 0.0313000, 0.9877000, 0.3395000], [2.3525800, 3.4286326, 2.4783631, 3.7530348]]]]

Expected (Unparsed): [[[[0.49817115,0.6386,0.6725,0.7671],[1.31644566,0.6276,0.972,0.9307],[1.22985969,0.6918,0.7819,0.4582],[0.8413,0.9775,0.7105,0.5902],[0.3508,0.2672,0.1615,0.6943],[0.5984,0.4313,0.0533,0.3652],[0.1494,0.4801,0.8107,0.2488],[0.0043,0.2673,0.9452,0.368]],[[1.6419713299999998,0.9192,0.0249,0.6036],[1.9806697899999999,0.1953,0.6695,0.6912],[2.344414,0.4246,0.8218,0.7107],[1.9811,0.2718,0.7022,0.9471],[1.6271,0.0782,0.4382,0.7089],[2.5134999999999996,0.7643,0.1739,0.5714],[1.2184,0.5574,0.5047,0.2526],[0.7013,0.9827,0.1633,0.745539705]],[[1.74350195,0.2131,0.8774,0.4527],[1.64632327,0.1615,0.0657,0.8651],[1.86974126,0.9899,0.7838,0.7529],[1.5146,0.5979,0.0158,0.7455],[0.9774999999999999,0.5706,0.4207,0.4806],[0.8887999999999999,0.6889,0.3053,0.7588],[1.4684,0.0313,0.9877,0.3395],[2.3525799585029996,3.4286325706774994,2.4783631432719995,3.7530347640924995]]]]

Actual:   [[[[0.4982, 0.6386, 0.6725, 0.7671], [1.3165, 0.6276, 0.972, 0.9307], [1.2299, 0.6918, 0.7819, 0.4582], [0.8413, 0.9775, 0.7105, 0.5902], [0.3508, 0.2672, 0.1615, 0.6943], [0.5984, 0.4313, 0.0533, 0.3652], [0.1494, 0.4801, 0.8107, 0.2488], [0.0043, 0.2673, 0.9452, 0.368]], [[1.642, 0.9192, 0.0249, 0.6036], [1.9807, 0.1953, 0.6695, 0.6912], [2.3445, 0.4246, 0.8218, 0.7107], [1.9811, 0.2718, 0.7022, 0.9471], [1.6271, 0.0782, 0.4382, 0.7089], [2.5135, 0.7643, 0.1739, 0.5714], [1.2184, 0.5574, 0.5047, 0.2526], [0.7013, 0.9827, 0.1633, 0.7456]], [[1.7436, 0.2131, 0.8774, 0.4527], [1.6464, 0.1615, 0.0657, 0.8651], [1.8698, 0.9899, 0.7838, 0.7529], [1.5146, 0.5979, 0.0158, 0.7455], [0.9775, 0.5706, 0.4207, 0.4806], [0.8888, 0.6889, 0.3053, 0.7588], [1.4684, 0.0313, 0.9877, 0.3395], [2.3526, 3.4287, 2.4784, 3.7531]]]]

Expected: [[[[0.4982, 0.6386, 0.6725, 0.7671], [1.3165, 0.6276, 0.972, 0.9307], [1.2299, 0.6918, 0.7819, 0.4582], [0.8413, 0.9775, 0.7105, 0.5902], [0.3508, 0.2672, 0.1615, 0.6943], [0.5984, 0.4313, 0.0533, 0.3652], [0.1494, 0.4801, 0.8107, 0.2488], [0.0043, 0.2673, 0.9452, 0.368]], [[1.642, 0.9192, 0.0249, 0.6036], [1.9807, 0.1953, 0.6695, 0.6912], [2.3445, 0.4246, 0.8218, 0.7107], [1.9811, 0.2718, 0.7022, 0.9471], [1.6271, 0.0782, 0.4382, 0.7089], [2.5135, 0.7643, 0.1739, 0.5714], [1.2184, 0.5574, 0.5047, 0.2526], [0.7013, 0.9827, 0.1633, 0.7456]], [[1.7436, 0.2131, 0.8774, 0.4527], [1.6464, 0.1615, 0.0657, 0.8651], [1.8698, 0.9899, 0.7838, 0.7529], [1.5146, 0.5979, 0.0158, 0.7455], [0.9775, 0.5706, 0.4207, 0.4806], [0.8888, 0.6889, 0.3053, 0.7588], [1.4684, 0.0313, 0.9877, 0.3395], [2.3526, 3.4287, 2.4784, 3.7531]]]]