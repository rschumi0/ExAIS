import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Dot38663 = tf.keras.layers.Input(shape=([3]))
in1Dot38663 = tf.keras.layers.Input(shape=([3]))
in0Con98397 = tf.keras.layers.Input(shape=([16, 11]))
in0Sub89157 = tf.keras.layers.Input(shape=([2, 2, 3]))
in1Sub89157 = tf.keras.layers.Input(shape=([2, 2, 3]))

Dot38663 = keras.layers.Dot(axes=(1, 1), name = 'Dot38663', )([in0Dot38663,in1Dot38663])
Res4922 = keras.layers.Reshape((1, 1), name = 'Res4922', )(Dot38663)
Res67820 = keras.layers.Reshape((1, 1, 1), name = 'Res67820', )(Res4922)
Res61047 = keras.layers.Reshape((1, 1, 1, 1), name = 'Res61047', )(Res67820)
Glo60642 = keras.layers.GlobalAveragePooling3D(name = 'Glo60642', )(Res61047)
Res25296 = keras.layers.Reshape((1, 1), name = 'Res25296', )(Glo60642)
Zer37095 = keras.layers.ZeroPadding1D(padding=((11, 0)), name = 'Zer37095', )(Res25296)
Zer80594 = keras.layers.ZeroPadding1D(padding=((4, 0)), name = 'Zer80594', )(Zer37095)
Con98397 = keras.layers.Concatenate(axis=2, name = 'Con98397', )([Zer80594,in0Con98397])
Sub89157 = keras.layers.Subtract(name = 'Sub89157', )([in0Sub89157,in1Sub89157])
Res57042 = keras.layers.Reshape((2, 6), name = 'Res57042', )(Sub89157)
Zer53052 = keras.layers.ZeroPadding1D(padding=((1, 1)), name = 'Zer53052', )(Res57042)
Res5335 = keras.layers.Reshape((4, 6, 1), name = 'Res5335', )(Zer53052)
Res67299 = keras.layers.Reshape((4, 6, 1, 1), name = 'Res67299', )(Res5335)
Up_97349 = keras.layers.UpSampling3D(size=(2, 1, 2), name = 'Up_97349', )(Res67299)
Res58465 = keras.layers.Reshape((8, 6, 2), name = 'Res58465', )(Up_97349)
Res48242 = keras.layers.Reshape((8, 12), name = 'Res48242', )(Res58465)
Dot56865 = keras.layers.Dot(axes=(2, 2), name = 'Dot56865', )([Con98397,Res48242])
model = tf.keras.models.Model(inputs=[in0Dot38663,in1Dot38663,in0Con98397,in0Sub89157,in1Sub89157], outputs=Dot56865)
in0Dot38663 = tf.constant([[0.3301, 0.3723, 0.0373]])
in1Dot38663 = tf.constant([[0.3622, 0.7308, 0.3088]])
in0Con98397 = tf.constant([[[0.3015, 0.3636, 0.3228, 0.5732, 0.2768, 0.5783, 0.7385, 0.1009, 0.1916, 0.5774, 0.258], [0.1733, 0.5893, 0.7601, 0.9422, 0.8061, 0.6489, 0.2838, 0.7454, 0.2351, 0.5807, 0.6835], [0.7502, 0.2476, 0.7075, 0.3735, 0.7888, 0.3185, 0.5602, 0.3362, 0.1507, 0.3281, 0.4107], [0.1614, 0.5039, 0.9472, 0.6744, 0.6082, 0.9892, 0.7418, 0.5213, 0.0352, 0.6873, 0.6709], [0.8564, 0.3661, 0.3026, 0.9301, 0.5497, 0.7418, 0.9602, 0.0281, 0.4298, 0.645, 0.4709], [0.5729, 0.0876, 0.0822, 0.2833, 0.493, 0.9818, 0.3508, 0.61, 0.3226, 0.6857, 0.0338], [0.8974, 0.7362, 0.3682, 0.1197, 0.884, 0.7387, 0.7651, 0.5698, 0.9886, 0.7842, 0.9642], [0.2275, 0.6606, 0.6292, 0.2982, 0.6952, 0.6282, 0.9072, 0.524, 0.6948, 0.6874, 0.2556], [0.2493, 0.4687, 0.7907, 0.3187, 0.2616, 0.9808, 0.7125, 0.1098, 0.0126, 0.031, 0.4975], [0.0181, 0.0175, 0.9126, 0.2279, 0.2187, 0.3358, 0.9074, 0.3898, 0.3594, 0.6241, 0.7419], [0.2586, 0.1838, 0.4675, 0.1059, 0.2797, 0.1764, 0.8325, 0.4761, 0.3763, 0.4137, 0.5169], [0.7788, 0.4813, 0.548, 0.4145, 0.8762, 0.3604, 0.2548, 0.2641, 0.469, 0.9713, 0.5351], [0.303, 0.768, 0.1842, 0.9792, 0.9093, 0.2091, 0.6822, 0.4704, 0.8844, 0.5591, 0.2515], [0.8355, 0.4985, 0.993, 0.4763, 0.6342, 0.8053, 0.1083, 0.0591, 0.6196, 0.015, 0.3908], [0.6027, 0.398, 0.9083, 0.3401, 0.7107, 0.4736, 0.3746, 0.3252, 0.688, 0.1671, 0.1583], [0.2502, 0.9597, 0.8686, 0.8125, 0.2789, 0.5614, 0.7051, 0.6745, 0.1953, 0.704, 0.9789]]])
in0Sub89157 = tf.constant([[[[0.228, 0.0333, 0.3244], [0.6377, 0.1199, 0.6147]], [[0.0173, 0.7906, 0.8413], [0.4053, 0.1631, 0.3273]]]])
in1Sub89157 = tf.constant([[[[0.5418, 0.8866, 0.7849], [0.4835, 0.3284, 0.6003]], [[0.6217, 0.1782, 0.7285], [0.2645, 0.8065, 0.1265]]]])
print (np.array2string(model.predict([in0Dot38663,in1Dot38663,in0Con98397,in0Sub89157,in1Sub89157],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Dot56865.png')

LDot38663 = dot_layer([[0.3301, 0.3723, 0.0373]], [[0.3622, 0.7308, 0.3088]], 1, 1, Dot38663), 
LRes4922 = reshape_layer(Dot38663, [1, 1], Res4922), 
LRes67820 = reshape_layer(Res4922, [1, 1, 1], Res67820), 
LRes61047 = reshape_layer(Res67820, [1, 1, 1, 1], Res61047), 
LGlo60642 = global_average_pooling3D_layer(Res61047, Glo60642), 
LRes25296 = reshape_layer(Glo60642, [1, 1], Res25296), 
LZer37095 = zero_padding1D_layer(Res25296, 11, 0, Zer37095), 
LZer80594 = zero_padding1D_layer(Zer37095, 4, 0, Zer80594), 
LCon98397 = concatenate_layer([Zer80594,[[[0.3015, 0.3636, 0.3228, 0.5732, 0.2768, 0.5783, 0.7385, 0.1009, 0.1916, 0.5774, 0.258], [0.1733, 0.5893, 0.7601, 0.9422, 0.8061, 0.6489, 0.2838, 0.7454, 0.2351, 0.5807, 0.6835], [0.7502, 0.2476, 0.7075, 0.3735, 0.7888, 0.3185, 0.5602, 0.3362, 0.1507, 0.3281, 0.4107], [0.1614, 0.5039, 0.9472, 0.6744, 0.6082, 0.9892, 0.7418, 0.5213, 0.0352, 0.6873, 0.6709], [0.8564, 0.3661, 0.3026, 0.9301, 0.5497, 0.7418, 0.9602, 0.0281, 0.4298, 0.645, 0.4709], [0.5729, 0.0876, 0.0822, 0.2833, 0.493, 0.9818, 0.3508, 0.61, 0.3226, 0.6857, 0.0338], [0.8974, 0.7362, 0.3682, 0.1197, 0.884, 0.7387, 0.7651, 0.5698, 0.9886, 0.7842, 0.9642], [0.2275, 0.6606, 0.6292, 0.2982, 0.6952, 0.6282, 0.9072, 0.524, 0.6948, 0.6874, 0.2556], [0.2493, 0.4687, 0.7907, 0.3187, 0.2616, 0.9808, 0.7125, 0.1098, 0.0126, 0.031, 0.4975], [0.0181, 0.0175, 0.9126, 0.2279, 0.2187, 0.3358, 0.9074, 0.3898, 0.3594, 0.6241, 0.7419], [0.2586, 0.1838, 0.4675, 0.1059, 0.2797, 0.1764, 0.8325, 0.4761, 0.3763, 0.4137, 0.5169], [0.7788, 0.4813, 0.548, 0.4145, 0.8762, 0.3604, 0.2548, 0.2641, 0.469, 0.9713, 0.5351], [0.303, 0.768, 0.1842, 0.9792, 0.9093, 0.2091, 0.6822, 0.4704, 0.8844, 0.5591, 0.2515], [0.8355, 0.4985, 0.993, 0.4763, 0.6342, 0.8053, 0.1083, 0.0591, 0.6196, 0.015, 0.3908], [0.6027, 0.398, 0.9083, 0.3401, 0.7107, 0.4736, 0.3746, 0.3252, 0.688, 0.1671, 0.1583], [0.2502, 0.9597, 0.8686, 0.8125, 0.2789, 0.5614, 0.7051, 0.6745, 0.1953, 0.704, 0.9789]]]], 2, Con98397), 
LSub89157 = subtract_layer([[[[0.228, 0.0333, 0.3244], [0.6377, 0.1199, 0.6147]], [[0.0173, 0.7906, 0.8413], [0.4053, 0.1631, 0.3273]]]], [[[[0.5418, 0.8866, 0.7849], [0.4835, 0.3284, 0.6003]], [[0.6217, 0.1782, 0.7285], [0.2645, 0.8065, 0.1265]]]], Sub89157), 
LRes57042 = reshape_layer(Sub89157, [2, 6], Res57042), 
LZer53052 = zero_padding1D_layer(Res57042, 1, 1, Zer53052), 
LRes5335 = reshape_layer(Zer53052, [4, 6, 1], Res5335), 
LRes67299 = reshape_layer(Res5335, [4, 6, 1, 1], Res67299), 
LUp_97349 = up_sampling3D_layer(Res67299, 2, 1, 2, Up_97349), 
LRes58465 = reshape_layer(Up_97349, [8, 6, 2], Res58465), 
LRes48242 = reshape_layer(Res58465, [8, 12], Res48242), 
LDot56865 = dot_layer(Con98397,Res48242, 2, 2, Dot56865), 
exec_layers([LDot38663,LRes4922,LRes67820,LRes61047,LGlo60642,LRes25296,LZer37095,LZer80594,LCon98397,LSub89157,LRes57042,LZer53052,LRes5335,LRes67299,LUp_97349,LRes58465,LRes48242,LDot56865],["Dot38663","Res4922","Res67820","Res61047","Glo60642","Res25296","Zer37095","Zer80594","Con98397","Sub89157","Res57042","Zer53052","Res5335","Res67299","Up_97349","Res58465","Res48242","Dot56865"],Dot56865,"Dot56865")

Actual (Unparsed): [[[0.0000000, 0.0000000, -0.9176467, -0.9176467, 0.4989640, 0.4989640, 0.0000000, 0.0000000], [0.0000000, 0.0000000, -2.0533241, -2.0533241, 0.6731601, 0.6731601, 0.0000000, 0.0000000], [0.0000000, 0.0000000, -1.5410231, -1.5410231, 0.2213904, 0.2213904, 0.0000000, 0.0000000], [0.0000000, 0.0000000, -1.7090602, -1.7090602, 1.0941800, 1.0941800, 0.0000000, 0.0000000], [0.0000000, 0.0000000, -1.3377427, -1.3377427, 0.2279266, 0.2279266, 0.0000000, 0.0000000], [0.0000000, 0.0000000, -0.6607519, -0.6607519, -0.4226378, -0.4226378, 0.0000000, 0.0000000], [0.0000000, 0.0000000, -1.7540559, -1.7540559, -0.1926975, -0.1926975, 0.0000000, 0.0000000], [0.0000000, 0.0000000, -1.6332185, -1.6332185, 0.3857908, 0.3857908, 0.0000000, 0.0000000], [0.0000000, 0.0000000, -1.1769076, -1.1769076, 0.9518248, 0.9518248, 0.0000000, 0.0000000], [0.0000000, 0.0000000, -0.9498297, -0.9498297, 0.5763302, 0.5763302, 0.0000000, 0.0000000], [0.0000000, 0.0000000, -0.8232241, -0.8232241, 0.0665374, 0.0665374, 0.0000000, 0.0000000], [0.0000000, 0.0000000, -1.7533518, -1.7533518, 0.2226563, 0.2226563, 0.0000000, 0.0000000], [0.0000000, 0.0000000, -1.9106126, -1.9106126, 0.0296021, 0.0296021, 0.0000000, 0.0000000], [0.0000000, 0.0000000, -2.0410504, -2.0410504, 0.3071267, 0.3071267, 0.0000000, 0.0000000], [0.0000000, 0.0000000, -1.8634604, -1.8634604, 0.0871105, 0.0871105, 0.0000000, 0.0000000], [0.0000000, 0.0000000, -2.2295268, -2.2295268, 0.8044919, 0.8044919, 0.0000000, 0.0000000]]]

Expected (Unparsed): [[[0.0,0.0,-0.9176467499999998,-0.9176467499999998,0.49896401999999984,0.49896401999999984,0.0,0.0],[0.0,0.0,-2.05332414,-2.05332414,0.6731601,0.6731601,0.0,0.0],[0.0,0.0,-1.54102313,-1.54102313,0.22139033999999994,0.22139033999999994,0.0,0.0],[0.0,0.0,-1.70906022,-1.70906022,1.09418002,1.09418002,0.0,0.0],[0.0,0.0,-1.3377427199999998,-1.3377427199999998,0.22792661999999983,0.22792661999999983,0.0,0.0],[0.0,0.0,-0.6607518899999999,-0.6607518899999999,-0.42263776000000003,-0.42263776000000003,0.0,0.0],[0.0,0.0,-1.7540559699999998,-1.7540559699999998,-0.19269744000000005,-0.19269744000000005,0.0,0.0],[0.0,0.0,-1.63321846,-1.63321846,0.38579083999999986,0.38579083999999986,0.0,0.0],[0.0,0.0,-1.17690765,-1.17690765,0.95182476,0.95182476,0.0,0.0],[0.0,0.0,-0.9498297699999999,-0.9498297699999999,0.5763301599999998,0.5763301599999998,0.0,0.0],[0.0,0.0,-0.8232241499999999,-0.8232241499999999,0.06653739999999994,0.06653739999999994,0.0,0.0],[0.0,0.0,-1.75335183,-1.75335183,0.22265629999999997,0.22265629999999997,0.0,0.0],[0.0,0.0,-1.9106126100000003,-1.9106126100000003,0.02960207999999992,0.02960207999999992,0.0,0.0],[0.0,0.0,-2.04105041,-2.04105041,0.30712673999999973,0.30712673999999973,0.0,0.0],[0.0,0.0,-1.8634604500000003,-1.8634604500000003,0.08711047999999998,0.08711047999999998,0.0,0.0],[0.0,0.0,-2.2295268507399997,-2.2295268507399997,0.8044918878799998,0.8044918878799998,0.0,0.0]]]

Actual:   [[[0, 0, -0.9176, -0.9176, 0.499, 0.499, 0, 0], [0, 0, -2.0533, -2.0533, 0.6732, 0.6732, 0, 0], [0, 0, -1.541, -1.541, 0.2214, 0.2214, 0, 0], [0, 0, -1.709, -1.709, 1.0942, 1.0942, 0, 0], [0, 0, -1.3377, -1.3377, 0.228, 0.228, 0, 0], [0, 0, -0.6607, -0.6607, -0.4226, -0.4226, 0, 0], [0, 0, -1.754, -1.754, -0.1926, -0.1926, 0, 0], [0, 0, -1.6332, -1.6332, 0.3858, 0.3858, 0, 0], [0, 0, -1.1769, -1.1769, 0.9519, 0.9519, 0, 0], [0, 0, -0.9498, -0.9498, 0.5764, 0.5764, 0, 0], [0, 0, -0.8232, -0.8232, 0.0666, 0.0666, 0, 0], [0, 0, -1.7533, -1.7533, 0.2227, 0.2227, 0, 0], [0, 0, -1.9106, -1.9106, 0.0297, 0.0297, 0, 0], [0, 0, -2.041, -2.041, 0.3072, 0.3072, 0, 0], [0, 0, -1.8634, -1.8634, 0.0872, 0.0872, 0, 0], [0, 0, -2.2295, -2.2295, 0.8045, 0.8045, 0, 0]]]

Expected: [[[0, 0, -0.9176, -0.9176, 0.499, 0.499, 0, 0], [0, 0, -2.0533, -2.0533, 0.6732, 0.6732, 0, 0], [0, 0, -1.541, -1.541, 0.2214, 0.2214, 0, 0], [0, 0, -1.709, -1.709, 1.0942, 1.0942, 0, 0], [0, 0, -1.3377, -1.3377, 0.228, 0.228, 0, 0], [0, 0, -0.6607, -0.6607, -0.4226, -0.4226, 0, 0], [0, 0, -1.754, -1.754, -0.1926, -0.1926, 0, 0], [0, 0, -1.6332, -1.6332, 0.3858, 0.3858, 0, 0], [0, 0, -1.1769, -1.1769, 0.9519, 0.9519, 0, 0], [0, 0, -0.9498, -0.9498, 0.5764, 0.5764, 0, 0], [0, 0, -0.8232, -0.8232, 0.0666, 0.0666, 0, 0], [0, 0, -1.7533, -1.7533, 0.2227, 0.2227, 0, 0], [0, 0, -1.9106, -1.9106, 0.0297, 0.0297, 0, 0], [0, 0, -2.041, -2.041, 0.3072, 0.3072, 0, 0], [0, 0, -1.8634, -1.8634, 0.0872, 0.0872, 0, 0], [0, 0, -2.2295, -2.2295, 0.8045, 0.8045, 0, 0]]]