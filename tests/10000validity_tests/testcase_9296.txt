import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Min76222 = tf.keras.layers.Input(shape=([1, 1, 2]))
in1Min76222 = tf.keras.layers.Input(shape=([1, 1, 2]))
in0Con63017 = tf.keras.layers.Input(shape=([3, 2, 2, 1]))
in0Sub59067 = tf.keras.layers.Input(shape=([3, 2, 2, 2]))
in1Sub59067 = tf.keras.layers.Input(shape=([3, 2, 2, 2]))

Min76222 = keras.layers.Minimum(name = 'Min76222', )([in0Min76222,in1Min76222])
Res35019 = keras.layers.Reshape((1, 1, 2, 1), name = 'Res35019', )(Min76222)
Zer9997 = keras.layers.ZeroPadding3D(padding=((2, 0), (1, 0), (0, 0)), name = 'Zer9997', )(Res35019)
Con63017 = keras.layers.Concatenate(axis=4, name = 'Con63017', )([Zer9997,in0Con63017])
Sub59067 = keras.layers.Subtract(name = 'Sub59067', )([in0Sub59067,in1Sub59067])
Min75532 = keras.layers.Minimum(name = 'Min75532', )([Con63017,Sub59067])
model = tf.keras.models.Model(inputs=[in0Min76222,in1Min76222,in0Con63017,in0Sub59067,in1Sub59067], outputs=Min75532)
in0Min76222 = tf.constant([[[[0.3696, 0.24]]]])
in1Min76222 = tf.constant([[[[0.9232, 0.893]]]])
in0Con63017 = tf.constant([[[[[0.1515], [0.9591]], [[0.4689], [0.2097]]], [[[0.1688], [0.3676]], [[0.6065], [0.9657]]], [[[0.1015], [0.4225]], [[0.6514], [0.5124]]]]])
in0Sub59067 = tf.constant([[[[[0.7511, 0.6299], [0.9654, 0.8538]], [[0.9002, 0.4974], [0.514, 0.8931]]], [[[0.6365, 0.9381], [0.8064, 0.6898]], [[0.3511, 0.9362], [0.8904, 0.1511]]], [[[0.0303, 0.8403], [0.6513, 0.6538]], [[0.7272, 0.729], [0.9392, 0.7159]]]]])
in1Sub59067 = tf.constant([[[[[0.7236, 0.4389], [0.6191, 0.4957]], [[0.5121, 0.5624], [0.3384, 0.2421]]], [[[0.0357, 0.9004], [0.69, 0.7136]], [[0.3287, 0.7015], [0.2323, 0.6215]]], [[[0.8152, 0.5136], [0.5206, 0.3575]], [[0.0446, 0.6259], [0.904, 0.6203]]]]])
print (np.array2string(model.predict([in0Min76222,in1Min76222,in0Con63017,in0Sub59067,in1Sub59067],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Min75532.png')

LMin76222 = minimum_layer([[[[[0.3696, 0.24]]]], [[[[0.9232, 0.893]]]]], Min76222), 
LRes35019 = reshape_layer(Min76222, [1, 1, 2, 1], Res35019), 
LZer9997 = zero_padding3D_layer(Res35019, 2, 0, 1, 0, 0, 0, Zer9997), 
LCon63017 = concatenate_layer([Zer9997,[[[[[0.1515], [0.9591]], [[0.4689], [0.2097]]], [[[0.1688], [0.3676]], [[0.6065], [0.9657]]], [[[0.1015], [0.4225]], [[0.6514], [0.5124]]]]]], 4, Con63017), 
LSub59067 = subtract_layer([[[[[0.7511, 0.6299], [0.9654, 0.8538]], [[0.9002, 0.4974], [0.514, 0.8931]]], [[[0.6365, 0.9381], [0.8064, 0.6898]], [[0.3511, 0.9362], [0.8904, 0.1511]]], [[[0.0303, 0.8403], [0.6513, 0.6538]], [[0.7272, 0.729], [0.9392, 0.7159]]]]], [[[[[0.7236, 0.4389], [0.6191, 0.4957]], [[0.5121, 0.5624], [0.3384, 0.2421]]], [[[0.0357, 0.9004], [0.69, 0.7136]], [[0.3287, 0.7015], [0.2323, 0.6215]]], [[[0.8152, 0.5136], [0.5206, 0.3575]], [[0.0446, 0.6259], [0.904, 0.6203]]]]], Sub59067), 
LMin75532 = minimum_layer([Con63017,Sub59067], Min75532), 
exec_layers([LMin76222,LRes35019,LZer9997,LCon63017,LSub59067,LMin75532],["Min76222","Res35019","Zer9997","Con63017","Sub59067","Min75532"],Min75532,"Min75532")

Actual (Unparsed): [[[[[0.0000000, 0.1515000], [0.0000000, 0.3581000]], [[0.0000000, -0.0650000], [0.0000000, 0.2097000]]], [[[0.0000000, 0.0377000], [0.0000000, -0.0238000]], [[0.0000000, 0.2347000], [0.0000000, -0.4704000]]], [[[-0.7849000, 0.1015000], [0.0000000, 0.2963000]], [[0.3696000, 0.1031000], [0.0352000, 0.0956000]]]]]

Expected (Unparsed): [[[[[0,0.1515],[0,0.35810000000000003]],[[0,-0.065],[0,0.2097]]],[[[0,0.03770000000000007],[0,-0.023800000000000043]],[[0,0.23470000000000002],[0,-0.47040000000000004]]],[[[-0.7849,0.1015],[0,0.29630000000000006]],[[0.3696,0.10309999999999997],[0.03520000000000001,0.09560000000000002]]]]]

Actual:   [[[[[0, 0.1515], [0, 0.3581]], [[0, -0.065], [0, 0.2097]]], [[[0, 0.0377], [0, -0.0238]], [[0, 0.2347], [0, -0.4704]]], [[[-0.7849, 0.1015], [0, 0.2963]], [[0.3696, 0.1031], [0.0352, 0.0956]]]]]

Expected: [[[[[0, 0.1515], [0, 0.3582]], [[0, -0.065], [0, 0.2097]]], [[[0, 0.0378], [0, -0.0238]], [[0, 0.2348], [0, -0.4704]]], [[[-0.7849, 0.1015], [0, 0.2964]], [[0.3696, 0.1031], [0.0353, 0.0957]]]]]