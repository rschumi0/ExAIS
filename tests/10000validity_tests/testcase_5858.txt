import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Cro31767 = tf.keras.layers.Input(shape=([1, 3, 2, 3]))
in0Con3008 = tf.keras.layers.Input(shape=([1, 1, 1]))
in0Loc21273 = tf.keras.layers.Input(shape=([2, 2, 2]))
in0Loc83851 = tf.keras.layers.Input(shape=([2, 2]))

Cro31767 = keras.layers.Cropping3D(cropping=((0, 0), (1, 1), (1, 0)), name = 'Cro31767', )(in0Cro31767)
Cro16405 = keras.layers.Cropping3D(cropping=((0, 0), (0, 0), (0, 0)), name = 'Cro16405', )(Cro31767)
Res85681 = keras.layers.Reshape((1, 1, 3), name = 'Res85681', )(Cro16405)
Con3008 = keras.layers.Concatenate(axis=3, name = 'Con3008', )([Res85681,in0Con3008])
Loc21273 = keras.layers.LocallyConnected2D(4, (2, 2),strides=(1, 1), name = 'Loc21273', )(in0Loc21273)
Ave10230 = keras.layers.Average(name = 'Ave10230', )([Con3008,Loc21273])
Res93086 = keras.layers.Reshape((1, 4), name = 'Res93086', )(Ave10230)
Loc83851 = keras.layers.LocallyConnected1D(4, (1),strides=(2), name = 'Loc83851', )(in0Loc83851)
Ave74799 = keras.layers.Average(name = 'Ave74799', )([Res93086,Loc83851])
model = tf.keras.models.Model(inputs=[in0Cro31767,in0Con3008,in0Loc21273,in0Loc83851], outputs=Ave74799)
w = model.get_layer('Loc21273').get_weights() 
w[0] = np.array([[[0.0762, 0.4344, 0.0962, 0.0691], [0.2178, 0.3127, 0.0003, 0.2267], [0.9176, 0.4433, 0.6462, 0.6849], [0.0557, 0.2263, 0.6479, 0.0463], [0.3087, 0.1651, 0.4768, 0.4833], [0.3167, 0.0535, 0.1014, 0.2482], [0.6722, 0.4939, 0.7234, 0.7713], [0.4379, 0.7263, 0.144, 0.1726]]])
w[1] = np.array([[[0, 0, 0, 0]]])
model.get_layer('Loc21273').set_weights(w) 
w = model.get_layer('Loc83851').get_weights() 
w[0] = np.array([[[0.713, 0.1964, 0.0481, 0.8033], [0.0507, 0.1038, 0.7071, 0.5086]]])
w[1] = np.array([[0, 0, 0, 0]])
model.get_layer('Loc83851').set_weights(w) 
in0Cro31767 = tf.constant([[[[[1.1844, 1.0867, 1.1651], [1.6041, 1.8446, 1.8824]], [[1.1163, 1.6168, 1.6638], [1.8307, 1.9414, 1.3449]], [[1.7701, 1.395, 1.0543], [1.3172, 1.3586, 1.0794]]]]])
in0Con3008 = tf.constant([[[[0.0008]]]])
in0Loc21273 = tf.constant([[[[0.231, 0.8808], [0.5764, 0.2015]], [[0.7375, 0.0962], [0.4996, 0.4732]]]])
in0Loc83851 = tf.constant([[[0.0672, 0.7849], [0.3413, 0.4018]]])
print (np.array2string(model.predict([in0Cro31767,in0Con3008,in0Loc21273,in0Loc83851],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Ave74799.png')

LCro31767 = cropping3D_layer([[[[[1.1844, 1.0867, 1.1651], [1.6041, 1.8446, 1.8824]], [[1.1163, 1.6168, 1.6638], [1.8307, 1.9414, 1.3449]], [[1.7701, 1.395, 1.0543], [1.3172, 1.3586, 1.0794]]]]], 0, 0, 1, 1, 1, 0, Cro31767), 
LCro16405 = cropping3D_layer(Cro31767, 0, 0, 0, 0, 0, 0, Cro16405), 
LRes85681 = reshape_layer(Cro16405, [1, 1, 3], Res85681), 
LCon3008 = concatenate_layer([Res85681,[[[[0.0008]]]]], 3, Con3008), 
LLoc21273 = locally_connected2D_layer([[[[0.231, 0.8808], [0.5764, 0.2015]], [[0.7375, 0.0962], [0.4996, 0.4732]]]], 2, 2,[[[0.0762, 0.4344, 0.0962, 0.0691], [0.2178, 0.3127, 0.0003, 0.2267], [0.9176, 0.4433, 0.6462, 0.6849], [0.0557, 0.2263, 0.6479, 0.0463], [0.3087, 0.1651, 0.4768, 0.4833], [0.3167, 0.0535, 0.1014, 0.2482], [0.6722, 0.4939, 0.7234, 0.7713], [0.4379, 0.7263, 0.144, 0.1726]]],[[[0, 0, 0, 0]]], 1, 1, Loc21273), 
LAve10230 = average_layer([Con3008,Loc21273], Ave10230), 
LRes93086 = reshape_layer(Ave10230, [1, 4], Res93086), 
LLoc83851 = locally_connected1D_layer([[[0.0672, 0.7849], [0.3413, 0.4018]]], 1,[[[0.713, 0.1964, 0.0481, 0.8033], [0.0507, 0.1038, 0.7071, 0.5086]]],[[0, 0, 0, 0]], 2, Loc83851), 
LAve74799 = average_layer([Res93086,Loc83851], Ave74799), 
exec_layers([LCro31767,LCro16405,LRes85681,LCon3008,LLoc21273,LAve10230,LRes93086,LLoc83851,LAve74799],["Cro31767","Cro16405","Res85681","Con3008","Loc21273","Ave10230","Res93086","Loc83851","Ave74799"],Ave74799,"Ave74799")

Actual (Unparsed): [[[0.8892157, 0.8812443, 0.9444561, 0.5935589]]]

Expected (Unparsed): [[[0.8892157199999999,0.88124427,0.9444560774999999,0.5935588650000001]]]

Actual:   [[[0.8893, 0.8813, 0.9445, 0.5936]]]

Expected: [[[0.8893, 0.8813, 0.9445, 0.5936]]]