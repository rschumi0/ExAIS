import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Dot91669 = tf.keras.layers.Input(shape=([2, 3]))
in1Dot91669 = tf.keras.layers.Input(shape=([2, 3]))
in0Con48407 = tf.keras.layers.Input(shape=([2, 2, 1]))
in0Cro62102 = tf.keras.layers.Input(shape=([2, 4, 2]))

Dot91669 = keras.layers.Dot(axes=(2, 2), name = 'Dot91669', )([in0Dot91669,in1Dot91669])
Res95579 = keras.layers.Reshape((2, 2, 1), name = 'Res95579', )(Dot91669)
Con48407 = keras.layers.Concatenate(axis=3, name = 'Con48407', )([Res95579,in0Con48407])
Cro62102 = keras.layers.Cropping2D(cropping=((0, 1), (3, 0)), name = 'Cro62102', )(in0Cro62102)
Zer28598 = keras.layers.ZeroPadding2D(padding=((1, 0), (1, 0)), name = 'Zer28598', )(Cro62102)
Sub45094 = keras.layers.Subtract(name = 'Sub45094', )([Con48407,Zer28598])
Res38632 = keras.layers.Reshape((2, 2, 2, 1), name = 'Res38632', )(Sub45094)
Con10926 = keras.layers.Conv3D(4, (1, 1, 1),strides=(1, 1, 1), padding='same', dilation_rate=(1, 1, 1), name = 'Con10926', )(Res38632)
model = tf.keras.models.Model(inputs=[in0Dot91669,in1Dot91669,in0Con48407,in0Cro62102], outputs=Con10926)
w = model.get_layer('Con10926').get_weights() 
w[0] = np.array([[[[[0.1946, 0.9274, 0.9357, 0.2236]]]]])
w[1] = np.array([0, 0, 0, 0])
model.get_layer('Con10926').set_weights(w) 
in0Dot91669 = tf.constant([[[0.075, 0.3859, 0.0933], [0.1032, 0.6048, 0.5433]]])
in1Dot91669 = tf.constant([[[0.0529, 0.565, 0.7757], [0.4306, 0.9909, 0.032]]])
in0Con48407 = tf.constant([[[[0.5545], [0.2829]], [[0.3179], [0.514]]]])
in0Cro62102 = tf.constant([[[[1.4329, 1.4982], [1.5065, 1.0453], [1.5651, 1.8391], [1.0939, 1.1688]], [[1.7669, 1.9135], [1.3418, 1.9785], [1.4096, 1.538], [1.0772, 1.8053]]]])
print (np.array2string(model.predict([in0Dot91669,in1Dot91669,in0Con48407,in0Cro62102],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Con10926.png')

LDot91669 = dot_layer([[[0.075, 0.3859, 0.0933], [0.1032, 0.6048, 0.5433]]], [[[0.0529, 0.565, 0.7757], [0.4306, 0.9909, 0.032]]], 2, 2, Dot91669), 
LRes95579 = reshape_layer(Dot91669, [2, 2, 1], Res95579), 
LCon48407 = concatenate_layer([Res95579,[[[[0.5545], [0.2829]], [[0.3179], [0.514]]]]], 3, Con48407), 
LCro62102 = cropping2D_layer([[[[1.4329, 1.4982], [1.5065, 1.0453], [1.5651, 1.8391], [1.0939, 1.1688]], [[1.7669, 1.9135], [1.3418, 1.9785], [1.4096, 1.538], [1.0772, 1.8053]]]], 0, 1, 3, 0, Cro62102), 
LZer28598 = zero_padding2D_layer(Cro62102, 1, 0, 1, 0, Zer28598), 
LSub45094 = subtract_layer(Con48407,Zer28598, Sub45094), 
LRes38632 = reshape_layer(Sub45094, [2, 2, 2, 1], Res38632), 
LCon10926 = conv3D_layer(Res38632, 1, 1, 1,[[[[[0.1946, 0.9274, 0.9357, 0.2236]]]]],[0, 0, 0, 0], 1, 1, 1, true, 1, 1, 1, Con10926), 
exec_layers([LDot91669,LRes95579,LCon48407,LCro62102,LZer28598,LSub45094,LRes38632,LCon10926],["Dot91669","Res95579","Con48407","Cro62102","Zer28598","Sub45094","Res38632","Con10926"],Con10926,"Con10926")

Actual (Unparsed): [[[[[0.0572851, 0.2730023, 0.2754456, 0.0658220], [0.1079057, 0.5142433, 0.5188456, 0.1239862]], [[0.0812784, 0.3873461, 0.3908128, 0.0933908], [0.0550523, 0.2623615, 0.2647095, 0.0632564]]], [[[0.1495713, 0.7128080, 0.7191875, 0.1718610], [0.0618633, 0.2948205, 0.2974590, 0.0710824]], [[-0.0842190, -0.4013603, -0.4049524, -0.0967696], [-0.1274241, -0.6072615, -0.6126964, -0.1464133]]]]]

Expected (Unparsed): [[[[[0.057285143426,0.273002271394,0.275445574017,0.065821983916],[0.1079057,0.5142433,0.5188456499999999,0.12398619999999999]],[[0.081278369886,0.387346147134,0.390812799087,0.093390768276],[0.05505234,0.26236146,0.26470952999999997,0.06325644]]],[[[0.149571328914,0.712808070066,0.719187525513,0.171860992524],[0.06186334,0.29482046,0.29745903,0.07108244]],[[-0.08421901913600001,-0.4013603203840001,-0.4049523957120001,-0.09676964377600002],[-0.12742408,-0.60726152,-0.61269636,-0.14641328]]]]]

Actual:   [[[[[0.0573, 0.2731, 0.2755, 0.0659], [0.108, 0.5143, 0.5189, 0.124]], [[0.0813, 0.3874, 0.3909, 0.0934], [0.0551, 0.2624, 0.2648, 0.0633]]], [[[0.1496, 0.7129, 0.7192, 0.1719], [0.0619, 0.2949, 0.2975, 0.0711]], [[-0.0842, -0.4013, -0.4049, -0.0967], [-0.1274, -0.6072, -0.6126, -0.1464]]]]]

Expected: [[[[[0.0573, 0.2731, 0.2755, 0.0659], [0.108, 0.5143, 0.5189, 0.124]], [[0.0813, 0.3874, 0.3909, 0.0934], [0.0551, 0.2624, 0.2648, 0.0633]]], [[[0.1496, 0.7129, 0.7192, 0.1719], [0.0619, 0.2949, 0.2975, 0.0711]], [[-0.0842, -0.4013, -0.4049, -0.0967], [-0.1274, -0.6072, -0.6126, -0.1464]]]]]