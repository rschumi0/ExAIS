import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Sub35673 = tf.keras.layers.Input(shape=([2, 2, 2]))
in1Sub35673 = tf.keras.layers.Input(shape=([2, 2, 2]))

Sub35673 = keras.layers.Subtract(name = 'Sub35673', )([in0Sub35673,in1Sub35673])
Max92647 = keras.layers.MaxPool2D(pool_size=(1, 1), name = 'Max92647', )(Sub35673)
Res40291 = keras.layers.Reshape((2, 4), name = 'Res40291', )(Max92647)
Thr54315 = keras.layers.ThresholdedReLU(theta=6.647135244163966, name = 'Thr54315', )(Res40291)
Res86374 = keras.layers.Reshape((2, 4, 1), name = 'Res86374', )(Thr54315)
Res23831 = keras.layers.Reshape((2, 4, 1, 1), name = 'Res23831', )(Res86374)
Up_85510 = keras.layers.UpSampling3D(size=(2, 1, 1), name = 'Up_85510', )(Res23831)
Res58401 = keras.layers.Reshape((4, 4, 1), name = 'Res58401', )(Up_85510)
Con79740 = keras.layers.Conv2D(3, (4, 4),strides=(1, 1), padding='same', dilation_rate=(1, 1), name = 'Con79740', )(Res58401)
model = tf.keras.models.Model(inputs=[in0Sub35673,in1Sub35673], outputs=Con79740)
w = model.get_layer('Con79740').get_weights() 
w[0] = np.array([[[[0.9975, 0.8821, 0.7657]], [[0.0934, 0.5286, 0.2113]], [[0.5965, 0.3919, 0.5803]], [[0.2496, 0.0232, 0.5158]]], [[[0.7508, 0.3905, 0.3321]], [[0.6784, 0.2151, 0.5567]], [[0.9054, 0.7428, 0.2056]], [[0.4323, 0.1566, 0.2638]]], [[[0.3025, 0.656, 0.028]], [[0.6739, 0.5134, 0.4275]], [[0.7813, 0.3205, 0.0406]], [[0.9687, 0.1852, 0.6316]]], [[[0.7094, 0.6761, 0.2323]], [[0.1585, 0.2605, 0.6034]], [[0.2013, 0.6252, 0.1018]], [[0.1199, 0.2222, 0.3993]]]])
w[1] = np.array([0, 0, 0])
model.get_layer('Con79740').set_weights(w) 
in0Sub35673 = tf.constant([[[[0.4112, 0.6507], [0.3278, 0.3747]], [[0.5142, 0.4996], [0.3784, 0.6497]]]])
in1Sub35673 = tf.constant([[[[0.1299, 0.4075], [0.2924, 0.9896]], [[0.0398, 0.0984], [0.003, 0.8403]]]])
print (np.array2string(model.predict([in0Sub35673,in1Sub35673],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Con79740.png')

LSub35673 = subtract_layer([[[[0.4112, 0.6507], [0.3278, 0.3747]], [[0.5142, 0.4996], [0.3784, 0.6497]]]], [[[[0.1299, 0.4075], [0.2924, 0.9896]], [[0.0398, 0.0984], [0.003, 0.8403]]]], Sub35673), 
LMax92647 = max_pool2D_layer(Sub35673, 1, 1, Max92647), 
LRes40291 = reshape_layer(Max92647, [2, 4], Res40291), 
LThr54315 = thresholded_relu_layer(Res40291, 6.647135244163966, Thr54315), 
LRes86374 = reshape_layer(Thr54315, [2, 4, 1], Res86374), 
LRes23831 = reshape_layer(Res86374, [2, 4, 1, 1], Res23831), 
LUp_85510 = up_sampling3D_layer(Res23831, 2, 1, 1, Up_85510), 
LRes58401 = reshape_layer(Up_85510, [4, 4, 1], Res58401), 
LCon79740 = conv2D_layer(Res58401, 4, 4,[[[[0.9975, 0.8821, 0.7657]], [[0.0934, 0.5286, 0.2113]], [[0.5965, 0.3919, 0.5803]], [[0.2496, 0.0232, 0.5158]]], [[[0.7508, 0.3905, 0.3321]], [[0.6784, 0.2151, 0.5567]], [[0.9054, 0.7428, 0.2056]], [[0.4323, 0.1566, 0.2638]]], [[[0.3025, 0.656, 0.028]], [[0.6739, 0.5134, 0.4275]], [[0.7813, 0.3205, 0.0406]], [[0.9687, 0.1852, 0.6316]]], [[[0.7094, 0.6761, 0.2323]], [[0.1585, 0.2605, 0.6034]], [[0.2013, 0.6252, 0.1018]], [[0.1199, 0.2222, 0.3993]]]],[0, 0, 0], 1, 1, true, 1, 1, Con79740), 
exec_layers([LSub35673,LMax92647,LRes40291,LThr54315,LRes86374,LRes23831,LUp_85510,LRes58401,LCon79740],["Sub35673","Max92647","Res40291","Thr54315","Res86374","Res23831","Up_85510","Res58401","Con79740"],Con79740,"Con79740")

Actual (Unparsed): [[[[0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000]], [[0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000]], [[0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000]], [[0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000]]]]

Expected (Unparsed): [[[[0.0,0.0,0.0],[0.0,0.0,0.0],[0.0,0.0,0.0],[0.0,0.0,0.0]],[[0.0,0.0,0.0],[0.0,0.0,0.0],[0.0,0.0,0.0],[0.0,0.0,0.0]],[[0.0,0.0,0.0],[0.0,0.0,0.0],[0.0,0.0,0.0],[0.0,0.0,0.0]],[[0.0,0.0,0.0],[0.0,0.0,0.0],[0.0,0.0,0.0],[0.0,0.0,0.0]]]]

Actual:   [[[[0, 0, 0], [0, 0, 0], [0, 0, 0], [0, 0, 0]], [[0, 0, 0], [0, 0, 0], [0, 0, 0], [0, 0, 0]], [[0, 0, 0], [0, 0, 0], [0, 0, 0], [0, 0, 0]], [[0, 0, 0], [0, 0, 0], [0, 0, 0], [0, 0, 0]]]]

Expected: [[[[0, 0, 0], [0, 0, 0], [0, 0, 0], [0, 0, 0]], [[0, 0, 0], [0, 0, 0], [0, 0, 0], [0, 0, 0]], [[0, 0, 0], [0, 0, 0], [0, 0, 0], [0, 0, 0]], [[0, 0, 0], [0, 0, 0], [0, 0, 0], [0, 0, 0]]]]