import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Ave54991 = tf.keras.layers.Input(shape=([1, 2]))

Ave54991 = keras.layers.AveragePooling1D(pool_size=(1), strides=(1), padding='same', name = 'Ave54991', )(in0Ave54991)
Sim23419 = keras.layers.SimpleRNN(2,name = 'Sim23419', )(Ave54991)
Res21326 = keras.layers.Reshape((2, 1), name = 'Res21326', )(Sim23419)
Res42036 = keras.layers.Reshape((2, 1, 1), name = 'Res42036', )(Res21326)
Res66127 = keras.layers.Reshape((2, 1, 1, 1), name = 'Res66127', )(Res42036)
Up_78229 = keras.layers.UpSampling3D(size=(2, 1, 1), name = 'Up_78229', )(Res66127)
model = tf.keras.models.Model(inputs=[in0Ave54991], outputs=Up_78229)
w = model.get_layer('Sim23419').get_weights() 
w[0] = np.array([[4, 3], [5, 2]])
w[1] = np.array([[7, 5], [8, 6]])
w[2] = np.array([1, 10])
model.get_layer('Sim23419').set_weights(w) 
in0Ave54991 = tf.constant([[[1.9966, 1.8684]]])
print (np.array2string(model.predict([in0Ave54991],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Up_78229.png')

LAve54991 = average_pooling1D_layer([[[1.9966, 1.8684]]], 1, 1, true, Ave54991), 
LSim23419 = simple_rnn_layer(Ave54991,[[4, 3], [5, 2]],[[7, 5], [8, 6]],[1, 10], Sim23419), 
LRes21326 = reshape_layer(Sim23419, [2, 1], Res21326), 
LRes42036 = reshape_layer(Res21326, [2, 1, 1], Res42036), 
LRes66127 = reshape_layer(Res42036, [2, 1, 1, 1], Res66127), 
LUp_78229 = up_sampling3D_layer(Res66127, 2, 1, 1, Up_78229), 
exec_layers([LAve54991,LSim23419,LRes21326,LRes42036,LRes66127,LUp_78229],["Ave54991","Sim23419","Res21326","Res42036","Res66127","Up_78229"],Up_78229,"Up_78229")

Actual (Unparsed): [[[[[1.0000000]]], [[[1.0000000]]], [[[1.0000000]]], [[[1.0000000]]]]]

Expected (Unparsed): [[[[[0.9999999999999998]]],[[[0.9999999999999998]]],[[[1.0]]],[[[1.0]]]]]

Actual:   [[[[[1]]], [[[1]]], [[[1]]], [[[1]]]]]

Expected: [[[[[1]]], [[[1]]], [[[1]]], [[[1]]]]]