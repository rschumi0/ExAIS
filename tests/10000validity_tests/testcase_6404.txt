import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Min85166 = tf.keras.layers.Input(shape=([1, 1, 2]))
in1Min85166 = tf.keras.layers.Input(shape=([1, 1, 2]))
in0Con81295 = tf.keras.layers.Input(shape=([2, 2, 3, 2]))
in0Dot35784 = tf.keras.layers.Input(shape=([3, 2]))
in1Dot35784 = tf.keras.layers.Input(shape=([3, 2]))
in0Cro22136 = tf.keras.layers.Input(shape=([1, 1, 4]))
in0Ave69868 = tf.keras.layers.Input(shape=([1, 1, 2]))
in1Ave69868 = tf.keras.layers.Input(shape=([1, 1, 2]))

Min85166 = keras.layers.Minimum(name = 'Min85166', )([in0Min85166,in1Min85166])
Res97736 = keras.layers.Reshape((1, 1, 2, 1), name = 'Res97736', )(Min85166)
Zer39208 = keras.layers.ZeroPadding3D(padding=((1, 0), (1, 0), (1, 0)), name = 'Zer39208', )(Res97736)
Con81295 = keras.layers.Concatenate(axis=4, name = 'Con81295', )([Zer39208,in0Con81295])
Dot35784 = keras.layers.Dot(axes=(1, 1), name = 'Dot35784', )([in0Dot35784,in1Dot35784])
Res81571 = keras.layers.Reshape((2, 2, 1), name = 'Res81571', )(Dot35784)
Res16199 = keras.layers.Reshape((2, 2, 1, 1), name = 'Res16199', )(Res81571)
Cro22136 = keras.layers.Cropping2D(cropping=((0, 0), (0, 0)), name = 'Cro22136', )(in0Cro22136)
Res30595 = keras.layers.Reshape((1, 4), name = 'Res30595', )(Cro22136)
Ave69868 = keras.layers.Average(name = 'Ave69868', )([in0Ave69868,in1Ave69868])
Res37608 = keras.layers.Reshape((1, 2), name = 'Res37608', )(Ave69868)
Dot21635 = keras.layers.Dot(axes=(1, 1), name = 'Dot21635', )([Res30595,Res37608])
Res58291 = keras.layers.Reshape((4, 2, 1), name = 'Res58291', )(Dot21635)
Res98417 = keras.layers.Reshape((4, 2, 1, 1), name = 'Res98417', )(Res58291)
Cro46203 = keras.layers.Cropping3D(cropping=((2, 1), (1, 0), (0, 0)), name = 'Cro46203', )(Res98417)
Zer41073 = keras.layers.ZeroPadding3D(padding=((1, 0), (1, 0), (0, 0)), name = 'Zer41073', )(Cro46203)
Max31498 = keras.layers.Maximum(name = 'Max31498', )([Res16199,Zer41073])
Den8377 = keras.layers.Dense(3,name = 'Den8377', )(Max31498)
Zer86992 = keras.layers.ZeroPadding3D(padding=((0, 0), (0, 0), (2, 0)), name = 'Zer86992', )(Den8377)
Max54466 = keras.layers.Maximum(name = 'Max54466', )([Con81295,Zer86992])
model = tf.keras.models.Model(inputs=[in0Min85166,in1Min85166,in0Con81295,in0Dot35784,in1Dot35784,in0Cro22136,in0Ave69868,in1Ave69868], outputs=Max54466)
w = model.get_layer('Den8377').get_weights() 
w[0] = np.array([[0.0283, 0.9524, 0.1144]])
w[1] = np.array([0.5997, 0.3179, 0.9618])
model.get_layer('Den8377').set_weights(w) 
in0Min85166 = tf.constant([[[[0.9692, 0.7614]]]])
in1Min85166 = tf.constant([[[[0.1572, 0.815]]]])
in0Con81295 = tf.constant([[[[[0.1493, 0.0871], [0.3103, 0.4621], [0.9047, 0.3523]], [[0.3721, 0.2183], [0.0736, 0.1396], [0.6654, 0.0286]]], [[[0.9038, 0.8328], [0.1455, 0.6736], [0.7319, 0.1655]], [[0.986, 0.2852], [0.3848, 0.048], [0.5711, 0.2551]]]]])
in0Dot35784 = tf.constant([[[0.2131, 0.1564], [0.286, 0.3092], [0.2958, 0.5934]]])
in1Dot35784 = tf.constant([[[0.2787, 0.075], [0.2263, 0.3521], [0.2313, 0.1115]]])
in0Cro22136 = tf.constant([[[[1.8477, 1.2584, 1.4525, 1.5575]]]])
in0Ave69868 = tf.constant([[[[0.7141, 0.0928]]]])
in1Ave69868 = tf.constant([[[[0.3712, 0.6914]]]])
print (np.array2string(model.predict([in0Min85166,in1Min85166,in0Con81295,in0Dot35784,in1Dot35784,in0Cro22136,in0Ave69868,in1Ave69868],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Max54466.png')

LMin85166 = minimum_layer([[[[[0.9692, 0.7614]]]], [[[[0.1572, 0.815]]]]], Min85166), 
LRes97736 = reshape_layer(Min85166, [1, 1, 2, 1], Res97736), 
LZer39208 = zero_padding3D_layer(Res97736, 1, 0, 1, 0, 1, 0, Zer39208), 
LCon81295 = concatenate_layer([Zer39208,[[[[[0.1493, 0.0871], [0.3103, 0.4621], [0.9047, 0.3523]], [[0.3721, 0.2183], [0.0736, 0.1396], [0.6654, 0.0286]]], [[[0.9038, 0.8328], [0.1455, 0.6736], [0.7319, 0.1655]], [[0.986, 0.2852], [0.3848, 0.048], [0.5711, 0.2551]]]]]], 4, Con81295), 
LDot35784 = dot_layer([[[0.2131, 0.1564], [0.286, 0.3092], [0.2958, 0.5934]]], [[[0.2787, 0.075], [0.2263, 0.3521], [0.2313, 0.1115]]], 1, 1, Dot35784), 
LRes81571 = reshape_layer(Dot35784, [2, 2, 1], Res81571), 
LRes16199 = reshape_layer(Res81571, [2, 2, 1, 1], Res16199), 
LCro22136 = cropping2D_layer([[[[1.8477, 1.2584, 1.4525, 1.5575]]]], 0, 0, 0, 0, Cro22136), 
LRes30595 = reshape_layer(Cro22136, [1, 4], Res30595), 
LAve69868 = average_layer([[[[[0.7141, 0.0928]]]], [[[[0.3712, 0.6914]]]]], Ave69868), 
LRes37608 = reshape_layer(Ave69868, [1, 2], Res37608), 
LDot21635 = dot_layer(Res30595,Res37608, 1, 1, Dot21635), 
LRes58291 = reshape_layer(Dot21635, [4, 2, 1], Res58291), 
LRes98417 = reshape_layer(Res58291, [4, 2, 1, 1], Res98417), 
LCro46203 = cropping3D_layer(Res98417, 2, 1, 1, 0, 0, 0, Cro46203), 
LZer41073 = zero_padding3D_layer(Cro46203, 1, 0, 1, 0, 0, 0, Zer41073), 
LMax31498 = maximum_layer([Res16199,Zer41073], Max31498), 
LDen8377 = dense_layer(Max31498, [[0.0283, 0.9524, 0.1144]],[0.5997, 0.3179, 0.9618], Den8377), 
LZer86992 = zero_padding3D_layer(Den8377, 0, 0, 0, 0, 2, 0, Zer86992), 
LMax54466 = maximum_layer([Con81295,Zer86992], Max54466), 
exec_layers([LMin85166,LRes97736,LZer39208,LCon81295,LDot35784,LRes81571,LRes16199,LCro22136,LRes30595,LAve69868,LRes37608,LDot21635,LRes58291,LRes98417,LCro46203,LZer41073,LMax31498,LDen8377,LZer86992,LMax54466],["Min85166","Res97736","Zer39208","Con81295","Dot35784","Res81571","Res16199","Cro22136","Res30595","Ave69868","Res37608","Dot21635","Res58291","Res98417","Cro46203","Zer41073","Max31498","Den8377","Zer86992","Max54466"],Max54466,"Max54466")

Actual (Unparsed): [[[[[0.0000000, 0.1493000, 0.0871000], [0.0000000, 0.3103000, 0.4621000], [0.6051486, 0.9047000, 0.9838256]], [[0.0000000, 0.3721000, 0.2183000], [0.0000000, 0.0736000, 0.1396000], [0.6039355, 0.6654000, 0.9789217]]], [[[0.0000000, 0.9038000, 0.8328000], [0.0000000, 0.1455000, 0.6736000], [0.6067980, 0.7319000, 0.9904931]], [[0.0000000, 0.9860000, 0.2852000], [0.1572000, 0.3848000, 0.0480000], [0.7614000, 0.8603158, 1.0269537]]]]]

Expected (Unparsed): [[[[[0,0.1493,0.0871],[0,0.3103,0.4621],[0.605148636073,0.9047,0.983825581864]],[[0,0.3721,0.2183],[0,0.0736,0.1396],[0.60393551384,0.6654,0.97892165312]]],[[[0,0.9038,0.8328],[0,0.1455,0.6736],[0.606798037898,0.7319,0.990493128464]],[[0,0.986,0.2852],[0.1572,0.3848,0.048],[0.7614,0.8603158481,1.0269536886]]]]]

Actual:   [[[[[0, 0.1493, 0.0871], [0, 0.3103, 0.4621], [0.6052, 0.9047, 0.9839]], [[0, 0.3721, 0.2183], [0, 0.0736, 0.1396], [0.604, 0.6654, 0.979]]], [[[0, 0.9038, 0.8328], [0, 0.1455, 0.6736], [0.6068, 0.7319, 0.9905]], [[0, 0.986, 0.2852], [0.1572, 0.3848, 0.048], [0.7614, 0.8604, 1.027]]]]]

Expected: [[[[[0, 0.1493, 0.0871], [0, 0.3103, 0.4621], [0.6052, 0.9047, 0.9839]], [[0, 0.3721, 0.2183], [0, 0.0736, 0.1396], [0.604, 0.6654, 0.979]]], [[[0, 0.9038, 0.8328], [0, 0.1455, 0.6736], [0.6068, 0.7319, 0.9905]], [[0, 0.986, 0.2852], [0.1572, 0.3848, 0.048], [0.7614, 0.8604, 1.027]]]]]