import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Min98490 = tf.keras.layers.Input(shape=([1, 2, 1, 1]))
in1Min98490 = tf.keras.layers.Input(shape=([1, 2, 1, 1]))
in0Con34787 = tf.keras.layers.Input(shape=([6]))
in0Up_28549 = tf.keras.layers.Input(shape=([4, 1, 2]))
in0Add78101 = tf.keras.layers.Input(shape=([2, 2, 1, 1]))
in1Add78101 = tf.keras.layers.Input(shape=([2, 2, 1, 1]))
in0Con94056 = tf.keras.layers.Input(shape=([2, 1]))
in0Sep80254 = tf.keras.layers.Input(shape=([1, 2]))
in0Con54538 = tf.keras.layers.Input(shape=([7]))

Min98490 = keras.layers.Minimum(name = 'Min98490', )([in0Min98490,in1Min98490])
Res13283 = keras.layers.Reshape((1, 2, 1), name = 'Res13283', )(Min98490)
Res51570 = keras.layers.Reshape((1, 2), name = 'Res51570', )(Res13283)
Fla63531 = keras.layers.Flatten(name = 'Fla63531', )(Res51570)
Con34787 = keras.layers.Concatenate(axis=1, name = 'Con34787', )([Fla63531,in0Con34787])
Up_28549 = keras.layers.UpSampling2D(size=(1, 1), name = 'Up_28549', )(in0Up_28549)
Res24085 = keras.layers.Reshape((4, 2), name = 'Res24085', )(Up_28549)
Fla32600 = keras.layers.Flatten(name = 'Fla32600', )(Res24085)
Add78101 = keras.layers.Add(name = 'Add78101', )([in0Add78101,in1Add78101])
Res16907 = keras.layers.Reshape((2, 2, 1), name = 'Res16907', )(Add78101)
Res19637 = keras.layers.Reshape((2, 2), name = 'Res19637', )(Res16907)
Con94056 = keras.layers.Concatenate(axis=2, name = 'Con94056', )([Res19637,in0Con94056])
Sep80254 = keras.layers.SeparableConv1D(3, (1),strides=(1), padding='same', name = 'Sep80254', )(in0Sep80254)
Dot2809 = keras.layers.Dot(axes=(2, 2), name = 'Dot2809', )([Con94056,Sep80254])
LST89984 = keras.layers.LSTM(1,recurrent_activation='sigmoid', name = 'LST89984', )(Dot2809)
Con54538 = keras.layers.Concatenate(axis=1, name = 'Con54538', )([LST89984,in0Con54538])
Ave52496 = keras.layers.Average(name = 'Ave52496', )([Fla32600,Con54538])
Ave71888 = keras.layers.Average(name = 'Ave71888', )([Con34787,Ave52496])
Res788 = keras.layers.Reshape((8, 1), name = 'Res788', )(Ave71888)
Per20885 = keras.layers.Permute((2,1), name = 'Per20885',)(Res788)
model = tf.keras.models.Model(inputs=[in0Min98490,in1Min98490,in0Con34787,in0Up_28549,in0Add78101,in1Add78101,in0Con94056,in0Sep80254,in0Con54538], outputs=Per20885)
w = model.get_layer('Sep80254').get_weights() 
w[0] = np.array([[[0.178], [0.9528]]])
w[1] = np.array([[[0.2734, 0.1479, 0.4397], [0.1266, 0.8839, 0.5153]]])
w[2] = np.array([0, 0, 0])
model.get_layer('Sep80254').set_weights(w) 
w = model.get_layer('LST89984').get_weights() 
w[0] = np.array([[8, 4, 1, 8]])
w[1] = np.array([[10, 8, 8, 5]])
w[2] = np.array([10, 9, 5, 7])
model.get_layer('LST89984').set_weights(w) 
in0Min98490 = tf.constant([[[[[0.857]], [[0.5838]]]]])
in1Min98490 = tf.constant([[[[[0.1528]], [[0.1798]]]]])
in0Con34787 = tf.constant([[0.1969, 0.3137, 0.1732, 0.2235, 0.8102, 0.6725]])
in0Up_28549 = tf.constant([[[[1.0357, 1.2726]], [[1.4704, 1.0828]], [[1.7682, 1.2235]], [[1.5254, 1.7468]]]])
in0Add78101 = tf.constant([[[[[0.2602]], [[0.2384]]], [[[0.9662]], [[0.9755]]]]])
in1Add78101 = tf.constant([[[[[0.3629]], [[0.3441]]], [[[0.1102]], [[0.7517]]]]])
in0Con94056 = tf.constant([[[0.3688], [0.9937]]])
in0Sep80254 = tf.constant([[[0.545, 0.4745]]])
in0Con54538 = tf.constant([[0.5035, 0.0553, 0.5079, 0.2568, 0.4535, 0.1157, 0.972]])
print (np.array2string(model.predict([in0Min98490,in1Min98490,in0Con34787,in0Up_28549,in0Add78101,in1Add78101,in0Con94056,in0Sep80254,in0Con54538],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Per20885.png')

LMin98490 = minimum_layer([[[[[[0.857]], [[0.5838]]]]], [[[[[0.1528]], [[0.1798]]]]]], Min98490), 
LRes13283 = reshape_layer(Min98490, [1, 2, 1], Res13283), 
LRes51570 = reshape_layer(Res13283, [1, 2], Res51570), 
LFla63531 = flatten_layer(Res51570, Fla63531), 
LCon34787 = concatenate_layer([Fla63531,[[0.1969, 0.3137, 0.1732, 0.2235, 0.8102, 0.6725]]], 1, Con34787), 
LUp_28549 = up_sampling2D_layer([[[[1.0357, 1.2726]], [[1.4704, 1.0828]], [[1.7682, 1.2235]], [[1.5254, 1.7468]]]], 1, 1, Up_28549), 
LRes24085 = reshape_layer(Up_28549, [4, 2], Res24085), 
LFla32600 = flatten_layer(Res24085, Fla32600), 
LAdd78101 = add_layer([[[[[[0.2602]], [[0.2384]]], [[[0.9662]], [[0.9755]]]]], [[[[[0.3629]], [[0.3441]]], [[[0.1102]], [[0.7517]]]]]], Add78101), 
LRes16907 = reshape_layer(Add78101, [2, 2, 1], Res16907), 
LRes19637 = reshape_layer(Res16907, [2, 2], Res19637), 
LCon94056 = concatenate_layer([Res19637,[[[0.3688], [0.9937]]]], 2, Con94056), 
LSep80254 = separable_conv1D_layer([[[0.545, 0.4745]]], 1,[[[[0.178], [0.9528]]],[[[0.2734, 0.1479, 0.4397], [0.1266, 0.8839, 0.5153]]]],[0, 0, 0], 1, true, Sep80254), 
LDot2809 = dot_layer(Con94056,Sep80254, 2, 2, Dot2809), 
LLST89984 = lstm_layer(Dot2809,[[8, 4, 1, 8]],[[10, 8, 8, 5]],[10, 9, 5, 7], LST89984), 
LCon54538 = concatenate_layer([LST89984,[[0.5035, 0.0553, 0.5079, 0.2568, 0.4535, 0.1157, 0.972]]], 1, Con54538), 
LAve52496 = average_layer([Fla32600,Con54538], Ave52496), 
LAve71888 = average_layer([Con34787,Ave52496], Ave71888), 
LRes788 = reshape_layer(Ave71888, [8, 1], Res788), 
LPer20885 = permute_layer(Res788, 2,1, Per20885), 
exec_layers([LMin98490,LRes13283,LRes51570,LFla63531,LCon34787,LUp_28549,LRes24085,LFla32600,LAdd78101,LRes16907,LRes19637,LCon94056,LSep80254,LDot2809,LLST89984,LCon54538,LAve52496,LAve71888,LRes788,LPer20885],["Min98490","Res13283","Res51570","Fla63531","Con34787","Up_28549","Res24085","Fla32600","Add78101","Res16907","Res19637","Con94056","Sep80254","Dot2809","LST89984","Con54538","Ave52496","Ave71888","Res788","Per20885"],Per20885,"Per20885")

Actual (Unparsed): [[[0.5763311, 0.5339250, 0.4798750, 0.5545250, 0.5928500, 0.5310000, 0.8153750, 1.0159500]]]

Expected (Unparsed): [[[0.5763311321374397,0.533925,0.47987499999999994,0.5545249999999999,0.59285,0.531,0.815375,1.01595]]]

Actual:   [[[0.5764, 0.534, 0.4799, 0.5546, 0.5929, 0.531, 0.8154, 1.016]]]

Expected: [[[0.5764, 0.534, 0.4799, 0.5546, 0.5929, 0.531, 0.8154, 1.016]]]