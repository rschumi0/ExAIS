import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Sof40441 = tf.keras.layers.Input(shape=([1, 1, 1, 2]))
in0Glo18582 = tf.keras.layers.Input(shape=([2, 2, 1, 1]))
in0Con96683 = tf.keras.layers.Input(shape=([1]))
in0Con18607 = tf.keras.layers.Input(shape=([4, 3, 1]))
in0Up_14813 = tf.keras.layers.Input(shape=([2, 3, 2]))
in0Con72467 = tf.keras.layers.Input(shape=([4, 3, 2, 1]))
in0Max78783 = tf.keras.layers.Input(shape=([1, 2, 2]))
in0Con25150 = tf.keras.layers.Input(shape=([2, 1, 1, 1]))
in0Min80184 = tf.keras.layers.Input(shape=([2, 1, 1, 2]))
in1Min80184 = tf.keras.layers.Input(shape=([2, 1, 1, 2]))

Sof40441 = keras.layers.Softmax(axis=1, name = 'Sof40441', input_shape=(1, 1, 1, 2))(in0Sof40441)
Res789 = keras.layers.Reshape((1, 1, 2), name = 'Res789', )(Sof40441)
Res53178 = keras.layers.Reshape((1, 2), name = 'Res53178', )(Res789)
Fla70013 = keras.layers.Flatten(name = 'Fla70013', )(Res53178)
Glo18582 = keras.layers.GlobalMaxPool3D(name = 'Glo18582', )(in0Glo18582)
Con96683 = keras.layers.Concatenate(axis=1, name = 'Con96683', )([Glo18582,in0Con96683])
Mul5922 = keras.layers.Multiply(name = 'Mul5922', )([Fla70013,Con96683])
Res74534 = keras.layers.Reshape((2, 1), name = 'Res74534', )(Mul5922)
Res76708 = keras.layers.Reshape((2, 1, 1), name = 'Res76708', )(Res74534)
Zer60537 = keras.layers.ZeroPadding2D(padding=((2, 0), (2, 0)), name = 'Zer60537', )(Res76708)
Con18607 = keras.layers.Concatenate(axis=3, name = 'Con18607', )([Zer60537,in0Con18607])
Up_14813 = keras.layers.UpSampling2D(size=(2, 1), name = 'Up_14813', )(in0Up_14813)
Mul46341 = keras.layers.Multiply(name = 'Mul46341', )([Con18607,Up_14813])
Res66010 = keras.layers.Reshape((4, 3, 2, 1), name = 'Res66010', )(Mul46341)
Con72467 = keras.layers.Concatenate(axis=4, name = 'Con72467', )([Res66010,in0Con72467])
Max78783 = keras.layers.MaxPool2D(pool_size=(1, 2), name = 'Max78783', )(in0Max78783)
Con43698 = keras.layers.Conv2D(2, (1, 1),strides=(1, 3), padding='valid', dilation_rate=(1, 1), name = 'Con43698', )(Max78783)
Res32497 = keras.layers.Reshape((1, 1, 2, 1), name = 'Res32497', )(Con43698)
Glo80818 = keras.layers.GlobalMaxPool3D(name = 'Glo80818', )(Res32497)
Res60755 = keras.layers.Reshape((1, 1), name = 'Res60755', )(Glo80818)
Res68644 = keras.layers.Reshape((1, 1, 1), name = 'Res68644', )(Res60755)
Res14995 = keras.layers.Reshape((1, 1, 1, 1), name = 'Res14995', )(Res68644)
Zer41250 = keras.layers.ZeroPadding3D(padding=((1, 0), (0, 0), (0, 0)), name = 'Zer41250', )(Res14995)
Con25150 = keras.layers.Concatenate(axis=4, name = 'Con25150', )([Zer41250,in0Con25150])
Min80184 = keras.layers.Minimum(name = 'Min80184', )([in0Min80184,in1Min80184])
Ave47992 = keras.layers.Average(name = 'Ave47992', )([Con25150,Min80184])
Zer56923 = keras.layers.ZeroPadding3D(padding=((2, 0), (2, 0), (1, 0)), name = 'Zer56923', )(Ave47992)
Sub92846 = keras.layers.Subtract(name = 'Sub92846', )([Con72467,Zer56923])
model = tf.keras.models.Model(inputs=[in0Sof40441,in0Glo18582,in0Con96683,in0Con18607,in0Up_14813,in0Con72467,in0Max78783,in0Con25150,in0Min80184,in1Min80184], outputs=Sub92846)
w = model.get_layer('Con43698').get_weights() 
w[0] = np.array([[[[0.7178, 0.0193], [0.5626, 0.2572]]]])
w[1] = np.array([0, 0])
model.get_layer('Con43698').set_weights(w) 
in0Sof40441 = tf.constant([[[[[0.6379, 0.4258]]]]])
in0Glo18582 = tf.constant([[[[[1.1103]], [[1.9398]]], [[[1.6528]], [[1.5672]]]]])
in0Con96683 = tf.constant([[0.3616]])
in0Con18607 = tf.constant([[[[0.5103], [0.4962], [0.0171]], [[0.5055], [0.9449], [0.3839]], [[0.1885], [0.8943], [0.4076]], [[0.5531], [0.6611], [0.7314]]]])
in0Up_14813 = tf.constant([[[[1.2573, 1.9163], [1.8677, 1.8167], [1.2897, 1.6401]], [[1.6113, 1.2622], [1.2579, 1.246], [1.6495, 1.506]]]])
in0Con72467 = tf.constant([[[[[0.7125], [0.922]], [[0.147], [0.9145]], [[0.3867], [0.7372]]], [[[0.5875], [0.9628]], [[0.3201], [0.8651]], [[0.2075], [0.5279]]], [[[0.1443], [0.3805]], [[0.3331], [0.6748]], [[0.755], [0.3697]]], [[[0.262], [0.8428]], [[0.244], [0.6188]], [[0.7562], [0.8241]]]]])
in0Max78783 = tf.constant([[[[1.8962, 1.7098], [1.636, 1.8347]]]])
in0Con25150 = tf.constant([[[[[0.2214]]], [[[0.4208]]]]])
in0Min80184 = tf.constant([[[[[0.1762, 0.7344]]], [[[0.6294, 0.9066]]]]])
in1Min80184 = tf.constant([[[[[0.9709, 0.2821]]], [[[0.5038, 0.182]]]]])
print (np.array2string(model.predict([in0Sof40441,in0Glo18582,in0Con96683,in0Con18607,in0Up_14813,in0Con72467,in0Max78783,in0Con25150,in0Min80184,in1Min80184],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Sub92846.png')

LSof40441 = softmax_layer([[[[[0.6379, 0.4258]]]]], 1, Sof40441), 
LRes789 = reshape_layer(Sof40441, [1, 1, 2], Res789), 
LRes53178 = reshape_layer(Res789, [1, 2], Res53178), 
LFla70013 = flatten_layer(Res53178, Fla70013), 
LGlo18582 = global_max_pool3D_layer([[[[[1.1103]], [[1.9398]]], [[[1.6528]], [[1.5672]]]]], Glo18582), 
LCon96683 = concatenate_layer([Glo18582,[[0.3616]]], 1, Con96683), 
LMul5922 = multiply_layer([Fla70013,Con96683], Mul5922), 
LRes74534 = reshape_layer(Mul5922, [2, 1], Res74534), 
LRes76708 = reshape_layer(Res74534, [2, 1, 1], Res76708), 
LZer60537 = zero_padding2D_layer(Res76708, 2, 0, 2, 0, Zer60537), 
LCon18607 = concatenate_layer([Zer60537,[[[[0.5103], [0.4962], [0.0171]], [[0.5055], [0.9449], [0.3839]], [[0.1885], [0.8943], [0.4076]], [[0.5531], [0.6611], [0.7314]]]]], 3, Con18607), 
LUp_14813 = up_sampling2D_layer([[[[1.2573, 1.9163], [1.8677, 1.8167], [1.2897, 1.6401]], [[1.6113, 1.2622], [1.2579, 1.246], [1.6495, 1.506]]]], 2, 1, Up_14813), 
LMul46341 = multiply_layer([Con18607,Up_14813], Mul46341), 
LRes66010 = reshape_layer(Mul46341, [4, 3, 2, 1], Res66010), 
LCon72467 = concatenate_layer([Res66010,[[[[[0.7125], [0.922]], [[0.147], [0.9145]], [[0.3867], [0.7372]]], [[[0.5875], [0.9628]], [[0.3201], [0.8651]], [[0.2075], [0.5279]]], [[[0.1443], [0.3805]], [[0.3331], [0.6748]], [[0.755], [0.3697]]], [[[0.262], [0.8428]], [[0.244], [0.6188]], [[0.7562], [0.8241]]]]]], 4, Con72467), 
LMax78783 = max_pool2D_layer([[[[1.8962, 1.7098], [1.636, 1.8347]]]], 1, 2, Max78783), 
LCon43698 = conv2D_layer(Max78783, 1, 1,[[[[0.7178, 0.0193], [0.5626, 0.2572]]]],[0, 0], 1, 3, false, 1, 1, Con43698), 
LRes32497 = reshape_layer(Con43698, [1, 1, 2, 1], Res32497), 
LGlo80818 = global_max_pool3D_layer(Res32497, Glo80818), 
LRes60755 = reshape_layer(Glo80818, [1, 1], Res60755), 
LRes68644 = reshape_layer(Res60755, [1, 1, 1], Res68644), 
LRes14995 = reshape_layer(Res68644, [1, 1, 1, 1], Res14995), 
LZer41250 = zero_padding3D_layer(Res14995, 1, 0, 0, 0, 0, 0, Zer41250), 
LCon25150 = concatenate_layer([Zer41250,[[[[[0.2214]]], [[[0.4208]]]]]], 4, Con25150), 
LMin80184 = minimum_layer([[[[[[0.1762, 0.7344]]], [[[0.6294, 0.9066]]]]], [[[[[0.9709, 0.2821]]], [[[0.5038, 0.182]]]]]], Min80184), 
LAve47992 = average_layer([Con25150,Min80184], Ave47992), 
LZer56923 = zero_padding3D_layer(Ave47992, 2, 0, 2, 0, 1, 0, Zer56923), 
LSub92846 = subtract_layer(Con72467,Zer56923, Sub92846), 
exec_layers([LSof40441,LRes789,LRes53178,LFla70013,LGlo18582,LCon96683,LMul5922,LRes74534,LRes76708,LZer60537,LCon18607,LUp_14813,LMul46341,LRes66010,LCon72467,LMax78783,LCon43698,LRes32497,LGlo80818,LRes60755,LRes68644,LRes14995,LZer41250,LCon25150,LMin80184,LAve47992,LZer56923,LSub92846],["Sof40441","Res789","Res53178","Fla70013","Glo18582","Con96683","Mul5922","Res74534","Res76708","Zer60537","Con18607","Up_14813","Mul46341","Res66010","Con72467","Max78783","Con43698","Res32497","Glo80818","Res60755","Res68644","Res14995","Zer41250","Con25150","Min80184","Ave47992","Zer56923","Sub92846"],Sub92846,"Sub92846")

Actual (Unparsed): [[[[[0.0000000, 0.7125000], [0.9778879, 0.9220000]], [[0.0000000, 0.1470000], [0.9014465, 0.9145000]], [[0.0000000, 0.3867000], [0.0280457, 0.7372000]]], [[[0.0000000, 0.5875000], [0.9686897, 0.9628000]], [[0.0000000, 0.3201000], [1.7165998, 0.8651000]], [[0.0000000, 0.2075000], [0.6296344, 0.5279000]]], [[[0.0000000, 0.1443000], [0.2379247, 0.3805000]], [[0.0000000, 0.3331000], [1.1142978, 0.6748000]], [[3.1997002, 0.7550000], [0.5257456, 0.1179500]]], [[[0.0000000, 0.2620000], [0.6981228, 0.8428000]], [[0.0000000, 0.2440000], [0.8237306, 0.6188000]], [[0.5964592, 0.7562000], [-0.3470588, 0.5227000]]]]]

Expected (Unparsed): [[[[[0.0,0.7125],[0.9778878899999999,0.922]],[[0.0,0.147],[0.9014465399999999,0.9145]],[[0.0,0.3867],[0.028045709999999998,0.7372]]],[[[0.0,0.5875],[0.9686896499999998,0.9628]],[[0.0,0.3201],[1.7165998299999998,0.8651]],[[0.0,0.2075],[0.62963439,0.5279]]],[[[0.0,0.1443],[0.2379247,0.3805]],[[0.0,0.3331],[1.1142978,0.6748]],[[3.1997001,0.755],[0.5257456,0.11794999999999994]]],[[[0.0,0.262],[0.69812282,0.8428]],[[0.0,0.244],[0.8237306,0.6188]],[[0.5964592,0.7562],[-0.34705889,0.5227]]]]]

Actual:   [[[[[0, 0.7125], [0.9779, 0.922]], [[0, 0.147], [0.9015, 0.9145]], [[0, 0.3867], [0.0281, 0.7372]]], [[[0, 0.5875], [0.9687, 0.9628]], [[0, 0.3201], [1.7166, 0.8651]], [[0, 0.2075], [0.6297, 0.5279]]], [[[0, 0.1443], [0.238, 0.3805]], [[0, 0.3331], [1.1143, 0.6748]], [[3.1998, 0.755], [0.5258, 0.118]]], [[[0, 0.262], [0.6982, 0.8428]], [[0, 0.244], [0.8238, 0.6188]], [[0.5965, 0.7562], [-0.347, 0.5227]]]]]

Expected: [[[[[0, 0.7125], [0.9779, 0.922]], [[0, 0.147], [0.9015, 0.9145]], [[0, 0.3867], [0.0281, 0.7372]]], [[[0, 0.5875], [0.9687, 0.9628]], [[0, 0.3201], [1.7166, 0.8651]], [[0, 0.2075], [0.6297, 0.5279]]], [[[0, 0.1443], [0.238, 0.3805]], [[0, 0.3331], [1.1143, 0.6748]], [[3.1998, 0.755], [0.5258, 0.118]]], [[[0, 0.262], [0.6982, 0.8428]], [[0, 0.244], [0.8238, 0.6188]], [[0.5965, 0.7562], [-0.347, 0.5227]]]]]