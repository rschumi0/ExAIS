import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Ave80329 = tf.keras.layers.Input(shape=([2, 1]))
in1Ave80329 = tf.keras.layers.Input(shape=([2, 1]))

Ave80329 = keras.layers.Average(name = 'Ave80329', )([in0Ave80329,in1Ave80329])
Res84007 = keras.layers.Reshape((2, 1, 1), name = 'Res84007', )(Ave80329)
Con48456 = keras.layers.Conv2DTranspose(4, (2, 1),strides=(1, 1), padding='valid', name = 'Con48456', )(Res84007)
model = tf.keras.models.Model(inputs=[in0Ave80329,in1Ave80329], outputs=Con48456)
w = model.get_layer('Con48456').get_weights() 
w[0] = np.array([[[[0.1381], [0.9837], [0.7156], [0.9962]]], [[[0.92], [0.8979], [0.1505], [0.6574]]]])
w[1] = np.array([0, 0, 0, 0])
model.get_layer('Con48456').set_weights(w) 
in0Ave80329 = tf.constant([[[0.0679], [0.6101]]])
in1Ave80329 = tf.constant([[[0.6946], [0.6056]]])
print (np.array2string(model.predict([in0Ave80329,in1Ave80329],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Con48456.png')

LAve80329 = average_layer([[[[0.0679], [0.6101]]], [[[0.6946], [0.6056]]]], Ave80329), 
LRes84007 = reshape_layer(Ave80329, [2, 1, 1], Res84007), 
LCon48456 = conv2D_transpose_layer(Res84007, 2, 1,[[[[0.1381], [0.9837], [0.7156], [0.9962]]], [[[0.92], [0.8979], [0.1505], [0.6574]]]],[0, 0, 0, 0], 1, 1, false, Con48456), 
exec_layers([LAve80329,LRes84007,LCon48456],["Ave80329","Res84007","Con48456"],Con48456,"Con48456")

Actual (Unparsed): [[[[0.0526506, 0.3750356, 0.2728225, 0.3798012]], [[0.4346941, 0.9402664, 0.4923556, 0.8561739]], [[0.5592220, 0.5457885, 0.0914814, 0.3996006]]]]

Expected (Unparsed): [[[[0.052650625,0.375035625,0.27282249999999997,0.37980125]],[[0.434694085,0.94026642,0.492355585,0.8561739199999999]],[[0.559222,0.545788515,0.09148142499999999,0.39960059]]]]

Actual:   [[[[0.0527, 0.3751, 0.2729, 0.3799]], [[0.4347, 0.9403, 0.4924, 0.8562]], [[0.5593, 0.5458, 0.0915, 0.3997]]]]

Expected: [[[[0.0527, 0.3751, 0.2729, 0.3799]], [[0.4347, 0.9403, 0.4924, 0.8562]], [[0.5593, 0.5458, 0.0915, 0.3997]]]]