import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Mul68073 = tf.keras.layers.Input(shape=([1, 1, 2, 2]))
in1Mul68073 = tf.keras.layers.Input(shape=([1, 1, 2, 2]))

Mul68073 = keras.layers.Multiply(name = 'Mul68073', )([in0Mul68073,in1Mul68073])
Res83701 = keras.layers.Reshape((1, 1, 4), name = 'Res83701', )(Mul68073)
Res22849 = keras.layers.Reshape((1, 4), name = 'Res22849', )(Res83701)
GRU13507 = keras.layers.GRU(1,reset_after=False, recurrent_activation='sigmoid', name = 'GRU13507', )(Res22849)
model = tf.keras.models.Model(inputs=[in0Mul68073,in1Mul68073], outputs=GRU13507)
w = model.get_layer('GRU13507').get_weights() 
w[0] = np.array([[4, 2, 8], [2, 6, 7], [8, 8, 10], [10, 6, 1]])
w[1] = np.array([[8, 2, 10]])
w[2] = np.array([4, 3, 4])
model.get_layer('GRU13507').set_weights(w) 
in0Mul68073 = tf.constant([[[[[0.2388, 0.7755], [0.6407, 0.3594]]]]])
in1Mul68073 = tf.constant([[[[[0.3702, 0.8931], [0.135, 0.9757]]]]])
print (np.array2string(model.predict([in0Mul68073,in1Mul68073],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='GRU13507.png')

LMul68073 = multiply_layer([[[[[[0.2388, 0.7755], [0.6407, 0.3594]]]]], [[[[[0.3702, 0.8931], [0.135, 0.9757]]]]]], Mul68073), 
LRes83701 = reshape_layer(Mul68073, [1, 1, 4], Res83701), 
LRes22849 = reshape_layer(Res83701, [1, 4], Res22849), 
LGRU13507 = gru_layer(Res22849,[[4, 2, 8], [2, 6, 7], [8, 8, 10], [10, 6, 1]],[[8, 2, 10]],[4, 3, 4], false, GRU13507), 
exec_layers([LMul68073,LRes83701,LRes22849,LGRU13507],["Mul68073","Res83701","Res22849","GRU13507"],GRU13507,"GRU13507")

Actual (Unparsed): [[0.0000483]]

Expected (Unparsed): [[4.8328782160999585e-5]]

Actual:   [[0.0001]]

Expected: [[0.0001]]