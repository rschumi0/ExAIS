import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Max18842 = tf.keras.layers.Input(shape=([1, 2, 2, 1]))
in1Max18842 = tf.keras.layers.Input(shape=([1, 2, 2, 1]))

Max18842 = keras.layers.Maximum(name = 'Max18842', )([in0Max18842,in1Max18842])
Res24127 = keras.layers.Reshape((1, 2, 2), name = 'Res24127', )(Max18842)
Con67935 = keras.layers.Conv2D(4, (1, 2),strides=(1, 2), padding='same', dilation_rate=(1, 1), name = 'Con67935', )(Res24127)
model = tf.keras.models.Model(inputs=[in0Max18842,in1Max18842], outputs=Con67935)
w = model.get_layer('Con67935').get_weights() 
w[0] = np.array([[[[0.9729, 0.3794, 0.6756, 0.5762], [0.9258, 0.4842, 0.1272, 0.7176]], [[0.5075, 0.0199, 0.5462, 0.0676], [0.2601, 0.2907, 0.2747, 0.857]]]])
w[1] = np.array([0, 0, 0, 0])
model.get_layer('Con67935').set_weights(w) 
in0Max18842 = tf.constant([[[[[0.0683], [0.9564]], [[0.5097], [0.8613]]]]])
in1Max18842 = tf.constant([[[[[0.5971], [0.7986]], [[0.6597], [0.4438]]]]])
print (np.array2string(model.predict([in0Max18842,in1Max18842],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Con67935.png')

LMax18842 = maximum_layer([[[[[[0.0683], [0.9564]], [[0.5097], [0.8613]]]]], [[[[[0.5971], [0.7986]], [[0.6597], [0.4438]]]]]], Max18842), 
LRes24127 = reshape_layer(Max18842, [1, 2, 2], Res24127), 
LCon67935 = conv2D_layer(Res24127, 1, 2,[[[[0.9729, 0.3794, 0.6756, 0.5762], [0.9258, 0.4842, 0.1272, 0.7176]], [[0.5075, 0.0199, 0.5462, 0.0676], [0.2601, 0.2907, 0.2747, 0.857]]]],[0, 0, 0, 0], 1, 2, true, 1, 1, Con67935), 
exec_layers([LMax18842,LRes24127,LCon67935],["Max18842","Res24127","Con67935"],Con67935,"Con67935")

Actual (Unparsed): [[[[2.0251756, 0.9531366, 1.1219821, 1.8130915]]]]

Expected (Unparsed): [[[[2.02517559,0.9531365599999999,1.12198209,1.81309148]]]]

Actual:   [[[[2.0252, 0.9532, 1.122, 1.8131]]]]

Expected: [[[[2.0252, 0.9532, 1.122, 1.8131]]]]