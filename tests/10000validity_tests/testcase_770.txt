import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Min79879 = tf.keras.layers.Input(shape=([1, 2, 1]))
in1Min79879 = tf.keras.layers.Input(shape=([1, 2, 1]))
in0Sub90981 = tf.keras.layers.Input(shape=([2]))
in1Sub90981 = tf.keras.layers.Input(shape=([2]))
in0Con55701 = tf.keras.layers.Input(shape=([2, 1, 2]))
in0Loc73388 = tf.keras.layers.Input(shape=([2, 1, 2]))

Min79879 = keras.layers.Minimum(name = 'Min79879', )([in0Min79879,in1Min79879])
Fla73357 = keras.layers.Flatten(name = 'Fla73357', )(Min79879)
Lay624 = keras.layers.LayerNormalization(axis=1, epsilon=2.0736699875507836, name = 'Lay624', )(Fla73357)
Lay90657 = keras.layers.LayerNormalization(axis=1, epsilon=1.168696930079629, name = 'Lay90657', )(Lay624)
Res62189 = keras.layers.Reshape((2, 1), name = 'Res62189', )(Lay90657)
Res29915 = keras.layers.Reshape((2, 1, 1), name = 'Res29915', )(Res62189)
Res61257 = keras.layers.Reshape((2, 1, 1, 1), name = 'Res61257', )(Res29915)
Zer43711 = keras.layers.ZeroPadding3D(padding=((2, 0), (4, 0), (2, 0)), name = 'Zer43711', )(Res61257)
Sub90981 = keras.layers.Subtract(name = 'Sub90981', )([in0Sub90981,in1Sub90981])
Res22765 = keras.layers.Reshape((2, 1), name = 'Res22765', )(Sub90981)
Res47701 = keras.layers.Reshape((2, 1, 1), name = 'Res47701', )(Res22765)
Con55701 = keras.layers.Concatenate(axis=3, name = 'Con55701', )([Res47701,in0Con55701])
Loc73388 = keras.layers.LocallyConnected2D(3, (1, 1),strides=(1, 1), name = 'Loc73388', )(in0Loc73388)
Ave34176 = keras.layers.Average(name = 'Ave34176', )([Con55701,Loc73388])
Res86885 = keras.layers.Reshape((2, 3), name = 'Res86885', )(Ave34176)
Res35176 = keras.layers.Reshape((2, 3, 1), name = 'Res35176', )(Res86885)
Res70893 = keras.layers.Reshape((2, 3, 1, 1), name = 'Res70893', )(Res35176)
Zer83366 = keras.layers.ZeroPadding3D(padding=((1, 1), (1, 1), (1, 1)), name = 'Zer83366', )(Res70893)
Sub61740 = keras.layers.Subtract(name = 'Sub61740', )([Zer43711,Zer83366])
model = tf.keras.models.Model(inputs=[in0Min79879,in1Min79879,in0Sub90981,in1Sub90981,in0Con55701,in0Loc73388], outputs=Sub61740)
w = model.get_layer('Loc73388').get_weights() 
w[0] = np.array([[[0.9175, 0.6252, 0.4183], [0.7369, 0.9596, 0.3214]], [[0.6344, 0.6517, 0.6337], [0.0342, 0.8609, 0.6561]]])
w[1] = np.array([[[0, 0, 0]], [[0, 0, 0]]])
model.get_layer('Loc73388').set_weights(w) 
in0Min79879 = tf.constant([[[[0.558], [0.2113]]]])
in1Min79879 = tf.constant([[[[0.2743], [0.7195]]]])
in0Sub90981 = tf.constant([[0.9936, 0.8314]])
in1Sub90981 = tf.constant([[0.3512, 0.5639]])
in0Con55701 = tf.constant([[[[0.0029, 0.5525]], [[0.3348, 0.4898]]]])
in0Loc73388 = tf.constant([[[[0.8221, 0.4663]], [[0.1294, 0.6054]]]])
print (np.array2string(model.predict([in0Min79879,in1Min79879,in0Sub90981,in1Sub90981,in0Con55701,in0Loc73388],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Sub61740.png')

LMin79879 = minimum_layer([[[[[0.558], [0.2113]]]], [[[[0.2743], [0.7195]]]]], Min79879), 
LFla73357 = flatten_layer(Min79879, Fla73357), 
LLay624 = layer_normalization_layer(Fla73357, 1, 2.0736699875507836, Lay624), 
LLay90657 = layer_normalization_layer(Lay624, 1, 1.168696930079629, Lay90657), 
LRes62189 = reshape_layer(Lay90657, [2, 1], Res62189), 
LRes29915 = reshape_layer(Res62189, [2, 1, 1], Res29915), 
LRes61257 = reshape_layer(Res29915, [2, 1, 1, 1], Res61257), 
LZer43711 = zero_padding3D_layer(Res61257, 2, 0, 4, 0, 2, 0, Zer43711), 
LSub90981 = subtract_layer([[0.9936, 0.8314]], [[0.3512, 0.5639]], Sub90981), 
LRes22765 = reshape_layer(Sub90981, [2, 1], Res22765), 
LRes47701 = reshape_layer(Res22765, [2, 1, 1], Res47701), 
LCon55701 = concatenate_layer([Res47701,[[[[0.0029, 0.5525]], [[0.3348, 0.4898]]]]], 3, Con55701), 
LLoc73388 = locally_connected2D_layer([[[[0.8221, 0.4663]], [[0.1294, 0.6054]]]], 1, 1,[[[0.9175, 0.6252, 0.4183], [0.7369, 0.9596, 0.3214]], [[0.6344, 0.6517, 0.6337], [0.0342, 0.8609, 0.6561]]],[[[0, 0, 0]], [[0, 0, 0]]], 1, 1, Loc73388), 
LAve34176 = average_layer([Con55701,Loc73388], Ave34176), 
LRes86885 = reshape_layer(Ave34176, [2, 3], Res86885), 
LRes35176 = reshape_layer(Res86885, [2, 3, 1], Res35176), 
LRes70893 = reshape_layer(Res35176, [2, 3, 1, 1], Res70893), 
LZer83366 = zero_padding3D_layer(Res70893, 1, 1, 1, 1, 1, 1, Zer83366), 
LSub61740 = subtract_layer(Zer43711,Zer83366, Sub61740), 
exec_layers([LMin79879,LFla73357,LLay624,LLay90657,LRes62189,LRes29915,LRes61257,LZer43711,LSub90981,LRes22765,LRes47701,LCon55701,LLoc73388,LAve34176,LRes86885,LRes35176,LRes70893,LZer83366,LSub61740],["Min79879","Fla73357","Lay624","Lay90657","Res62189","Res29915","Res61257","Zer43711","Sub90981","Res22765","Res47701","Con55701","Loc73388","Ave34176","Res86885","Res35176","Res70893","Zer83366","Sub61740"],Sub61740,"Sub61740")

Actual (Unparsed): [[[[[0.0000000], [0.0000000], [0.0000000]], [[0.0000000], [0.0000000], [0.0000000]], [[0.0000000], [0.0000000], [0.0000000]], [[0.0000000], [0.0000000], [0.0000000]], [[0.0000000], [0.0000000], [0.0000000]]], [[[0.0000000], [0.0000000], [0.0000000]], [[0.0000000], [-0.8701466], [0.0000000]], [[0.0000000], [-0.4821692], [0.0000000]], [[0.0000000], [-0.5231266], [0.0000000]], [[0.0000000], [0.0000000], [0.0000000]]], [[[0.0000000], [0.0000000], [0.0000000]], [[0.0000000], [-0.1851480], [0.0000000]], [[0.0000000], [-0.4701594], [0.0000000]], [[0.0000000], [-0.4845019], [0.0000000]], [[0.0000000], [0.0000000], [0.0202254]]], [[[0.0000000], [0.0000000], [0.0000000]], [[0.0000000], [0.0000000], [0.0000000]], [[0.0000000], [0.0000000], [0.0000000]], [[0.0000000], [0.0000000], [0.0000000]], [[0.0000000], [0.0000000], [-0.0202254]]]]]

Expected (Unparsed): [[[[[0],[0],[0]],[[0],[0],[0]],[[0],[0],[0]],[[0],[0],[0]],[[0],[0],[0]]],[[[0],[0],[0]],[[0],[-0.87014661],[0]],[[0],[-0.4821692],[0]],[[0],[-0.523126625],[0]],[[0],[0],[0]]],[[[0],[0],[0]],[[0],[-0.18514802000000002],[0]],[[0],[-0.47015942000000005],[0]],[[0],[-0.48450186000000006],[0]],[[0],[0],[0.020225397009309323]]],[[[0],[0],[0]],[[0],[0],[0]],[[0],[0],[0]],[[0],[0],[0]],[[0],[0],[-0.020225397009309323]]]]]

Actual:   [[[[[0], [0], [0]], [[0], [0], [0]], [[0], [0], [0]], [[0], [0], [0]], [[0], [0], [0]]], [[[0], [0], [0]], [[0], [-0.8701], [0]], [[0], [-0.4821], [0]], [[0], [-0.5231], [0]], [[0], [0], [0]]], [[[0], [0], [0]], [[0], [-0.1851], [0]], [[0], [-0.4701], [0]], [[0], [-0.4845], [0]], [[0], [0], [0.0203]]], [[[0], [0], [0]], [[0], [0], [0]], [[0], [0], [0]], [[0], [0], [0]], [[0], [0], [-0.0202]]]]]

Expected: [[[[[0], [0], [0]], [[0], [0], [0]], [[0], [0], [0]], [[0], [0], [0]], [[0], [0], [0]]], [[[0], [0], [0]], [[0], [-0.8701], [0]], [[0], [-0.4821], [0]], [[0], [-0.5231], [0]], [[0], [0], [0]]], [[[0], [0], [0]], [[0], [-0.1851], [0]], [[0], [-0.4701], [0]], [[0], [-0.4845], [0]], [[0], [0], [0.0203]]], [[[0], [0], [0]], [[0], [0], [0]], [[0], [0], [0]], [[0], [0], [0]], [[0], [0], [-0.0202]]]]]