import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Ave49993 = tf.keras.layers.Input(shape=([2, 1, 2]))
in1Ave49993 = tf.keras.layers.Input(shape=([2, 1, 2]))
in0Con50755 = tf.keras.layers.Input(shape=([3, 2]))
in0Glo38472 = tf.keras.layers.Input(shape=([2, 1]))

Ave49993 = keras.layers.Average(name = 'Ave49993', )([in0Ave49993,in1Ave49993])
Res92297 = keras.layers.Reshape((2, 2), name = 'Res92297', )(Ave49993)
LST21685 = keras.layers.LSTM(2,recurrent_activation='sigmoid', name = 'LST21685', )(Res92297)
Res85502 = keras.layers.Reshape((2, 1), name = 'Res85502', )(LST21685)
Zer20782 = keras.layers.ZeroPadding1D(padding=((1, 0)), name = 'Zer20782', )(Res85502)
Con50755 = keras.layers.Concatenate(axis=2, name = 'Con50755', )([Zer20782,in0Con50755])
Glo38472 = keras.layers.GlobalMaxPool1D(name = 'Glo38472', )(in0Glo38472)
Res74250 = keras.layers.Reshape((1, 1), name = 'Res74250', )(Glo38472)
Res87841 = keras.layers.Reshape((1, 1, 1), name = 'Res87841', )(Res74250)
Zer94568 = keras.layers.ZeroPadding2D(padding=((1, 1), (1, 1)), name = 'Zer94568', )(Res87841)
Lay78070 = keras.layers.LayerNormalization(axis=3, epsilon=1.021571803723707, name = 'Lay78070', )(Zer94568)
Res57524 = keras.layers.Reshape((3, 3), name = 'Res57524', )(Lay78070)
Dot16273 = keras.layers.Dot(axes=(1, 1), name = 'Dot16273', )([Con50755,Res57524])
model = tf.keras.models.Model(inputs=[in0Ave49993,in1Ave49993,in0Con50755,in0Glo38472], outputs=Dot16273)
w = model.get_layer('LST21685').get_weights() 
w[0] = np.array([[8, 5, 7, 5, 1, 4, 3, 10], [2, 7, 1, 3, 6, 8, 1, 8]])
w[1] = np.array([[4, 5, 1, 6, 6, 2, 6, 4], [5, 1, 3, 8, 1, 3, 6, 4]])
w[2] = np.array([5, 10, 9, 7, 8, 3, 1, 3])
model.get_layer('LST21685').set_weights(w) 
in0Ave49993 = tf.constant([[[[0.4245, 0.9206]], [[0.5469, 0.1033]]]])
in1Ave49993 = tf.constant([[[[0.163, 0.9027]], [[0.8577, 0.7729]]]])
in0Con50755 = tf.constant([[[0.0646, 0.8654], [0.7082, 0.4959], [0.7763, 0.8646]]])
in0Glo38472 = tf.constant([[[1.9221], [1.4682]]])
print (np.array2string(model.predict([in0Ave49993,in1Ave49993,in0Con50755,in0Glo38472],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Dot16273.png')

LAve49993 = average_layer([[[[[0.4245, 0.9206]], [[0.5469, 0.1033]]]], [[[[0.163, 0.9027]], [[0.8577, 0.7729]]]]], Ave49993), 
LRes92297 = reshape_layer(Ave49993, [2, 2], Res92297), 
LLST21685 = lstm_layer(Res92297,[[8, 5, 7, 5, 1, 4, 3, 10], [2, 7, 1, 3, 6, 8, 1, 8]],[[4, 5, 1, 6, 6, 2, 6, 4], [5, 1, 3, 8, 1, 3, 6, 4]],[5, 10, 9, 7, 8, 3, 1, 3], LST21685), 
LRes85502 = reshape_layer(LST21685, [2, 1], Res85502), 
LZer20782 = zero_padding1D_layer(Res85502, 1, 0, Zer20782), 
LCon50755 = concatenate_layer([Zer20782,[[[0.0646, 0.8654], [0.7082, 0.4959], [0.7763, 0.8646]]]], 2, Con50755), 
LGlo38472 = global_max_pool1D_layer([[[1.9221], [1.4682]]], Glo38472), 
LRes74250 = reshape_layer(Glo38472, [1, 1], Res74250), 
LRes87841 = reshape_layer(Res74250, [1, 1, 1], Res87841), 
LZer94568 = zero_padding2D_layer(Res87841, 1, 1, 1, 1, Zer94568), 
LLay78070 = layer_normalization_layer(Zer94568, 3, 1.021571803723707, Lay78070), 
LRes57524 = reshape_layer(Lay78070, [3, 3], Res57524), 
LDot16273 = dot_layer(Con50755,Res57524, 1, 1, Dot16273), 
exec_layers([LAve49993,LRes92297,LLST21685,LRes85502,LZer20782,LCon50755,LGlo38472,LRes74250,LRes87841,LZer94568,LLay78070,LRes57524,LDot16273],["Ave49993","Res92297","LST21685","Res85502","Zer20782","Con50755","Glo38472","Res74250","Res87841","Zer94568","Lay78070","Res57524","Dot16273"],Dot16273,"Dot16273")

Actual (Unparsed): [[[0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000]]]

Expected (Unparsed): [[[0.0,0.0,0.0],[0.0,0.0,0.0],[0.0,0.0,0.0]]]

Actual:   [[[0, 0, 0], [0, 0, 0], [0, 0, 0]]]

Expected: [[[0, 0, 0], [0, 0, 0], [0, 0, 0]]]