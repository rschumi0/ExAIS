import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Loc44041 = tf.keras.layers.Input(shape=([1, 1]))

Loc44041 = keras.layers.LocallyConnected1D(4, (1),strides=(1), name = 'Loc44041', )(in0Loc44041)
Res33178 = keras.layers.Reshape((1, 4, 1), name = 'Res33178', )(Loc44041)
Res36375 = keras.layers.Reshape((1, 4, 1, 1), name = 'Res36375', )(Res33178)
Glo38064 = keras.layers.GlobalAveragePooling3D(name = 'Glo38064', )(Res36375)
model = tf.keras.models.Model(inputs=[in0Loc44041], outputs=Glo38064)
w = model.get_layer('Loc44041').get_weights() 
w[0] = np.array([[[0.3163, 0.4942, 0.0139, 0.3131]]])
w[1] = np.array([[0, 0, 0, 0]])
model.get_layer('Loc44041').set_weights(w) 
in0Loc44041 = tf.constant([[[0.215]]])
print (np.array2string(model.predict([in0Loc44041],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Glo38064.png')

LLoc44041 = locally_connected1D_layer([[[0.215]]], 1,[[[0.3163, 0.4942, 0.0139, 0.3131]]],[[0, 0, 0, 0]], 1, Loc44041), 
LRes33178 = reshape_layer(Loc44041, [1, 4, 1], Res33178), 
LRes36375 = reshape_layer(Res33178, [1, 4, 1, 1], Res36375), 
LGlo38064 = global_average_pooling3D_layer(Res36375, Glo38064), 
exec_layers([LLoc44041,LRes33178,LRes36375,LGlo38064],["Loc44041","Res33178","Res36375","Glo38064"],Glo38064,"Glo38064")

Actual (Unparsed): [[0.0611406]]

Expected (Unparsed): [[0.061140625000000004]]

Actual:   [[0.0612]]

Expected: [[0.0612]]