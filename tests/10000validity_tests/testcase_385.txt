import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Min68344 = tf.keras.layers.Input(shape=([1, 2]))
in1Min68344 = tf.keras.layers.Input(shape=([1, 2]))
in0Con15677 = tf.keras.layers.Input(shape=([2, 3, 1]))
in0Ave59920 = tf.keras.layers.Input(shape=([2, 1]))
in1Ave59920 = tf.keras.layers.Input(shape=([2, 1]))
in0Bat83276 = tf.keras.layers.Input(shape=([4]))
in0Con88210 = tf.keras.layers.Input(shape=([8]))
in0Con95629 = tf.keras.layers.Input(shape=([20]))
in0Sub62368 = tf.keras.layers.Input(shape=([2, 2, 2, 2]))
in1Sub62368 = tf.keras.layers.Input(shape=([2, 2, 2, 2]))
in0Glo20863 = tf.keras.layers.Input(shape=([1, 2, 1]))
in0Con31363 = tf.keras.layers.Input(shape=([31]))

Min68344 = keras.layers.Minimum(name = 'Min68344', )([in0Min68344,in1Min68344])
Res77111 = keras.layers.Reshape((1, 2, 1), name = 'Res77111', )(Min68344)
Zer20718 = keras.layers.ZeroPadding2D(padding=((1, 0), (1, 0)), name = 'Zer20718', )(Res77111)
Con15677 = keras.layers.Concatenate(axis=3, name = 'Con15677', )([Zer20718,in0Con15677])
Ave59920 = keras.layers.Average(name = 'Ave59920', )([in0Ave59920,in1Ave59920])
Res80036 = keras.layers.Reshape((2, 1, 1), name = 'Res80036', )(Ave59920)
Sep5507 = keras.layers.SeparableConv2D(2, (2, 1),strides=(1, 1), padding='same', name = 'Sep5507', )(Res80036)
Zer96628 = keras.layers.ZeroPadding2D(padding=((0, 0), (2, 0)), name = 'Zer96628', )(Sep5507)
Mul52275 = keras.layers.Multiply(name = 'Mul52275', )([Con15677,Zer96628])
Res8243 = keras.layers.Reshape((2, 6), name = 'Res8243', )(Mul52275)
Fla55533 = keras.layers.Flatten(name = 'Fla55533', )(Res8243)
Bat83276 = keras.layers.BatchNormalization(axis=1, epsilon=0.5330355072727188,  name = 'Bat83276', )(in0Bat83276)
Con88210 = keras.layers.Concatenate(axis=1, name = 'Con88210', )([Bat83276,in0Con88210])
Min90593 = keras.layers.Minimum(name = 'Min90593', )([Fla55533,Con88210])
Con95629 = keras.layers.Concatenate(axis=1, name = 'Con95629', )([Min90593,in0Con95629])
Sub62368 = keras.layers.Subtract(name = 'Sub62368', )([in0Sub62368,in1Sub62368])
Res1372 = keras.layers.Reshape((2, 2, 4), name = 'Res1372', )(Sub62368)
Res77446 = keras.layers.Reshape((2, 8), name = 'Res77446', )(Res1372)
Zer57307 = keras.layers.ZeroPadding1D(padding=((1, 1)), name = 'Zer57307', )(Res77446)
Fla1993 = keras.layers.Flatten(name = 'Fla1993', )(Zer57307)
Glo20863 = keras.layers.GlobalAveragePooling2D(name = 'Glo20863', )(in0Glo20863)
Con31363 = keras.layers.Concatenate(axis=1, name = 'Con31363', )([Glo20863,in0Con31363])
Max70491 = keras.layers.Maximum(name = 'Max70491', )([Fla1993,Con31363])
Ave51592 = keras.layers.Average(name = 'Ave51592', )([Con95629,Max70491])
model = tf.keras.models.Model(inputs=[in0Min68344,in1Min68344,in0Con15677,in0Ave59920,in1Ave59920,in0Bat83276,in0Con88210,in0Con95629,in0Sub62368,in1Sub62368,in0Glo20863,in0Con31363], outputs=Ave51592)
w = model.get_layer('Sep5507').get_weights() 
w[0] = np.array([[[[0.5508]]], [[[0.7096]]]])
w[1] = np.array([[[[0.2947, 0.9575]]]])
w[2] = np.array([0, 0])
model.get_layer('Sep5507').set_weights(w) 
w = model.get_layer('Bat83276').get_weights() 
w[0] = np.array([0.9767, 0.0259, 0.4067, 0.3422])
w[1] = np.array([0.4136, 0.8072, 0.6836, 0.4701])
w[2] = np.array([0.6509, 0.0478, 0.14, 0.5213])
w[3] = np.array([0.537, 0.8286, 0.8725, 0.1525])
model.get_layer('Bat83276').set_weights(w) 
in0Min68344 = tf.constant([[[0.9297, 0.3124]]])
in1Min68344 = tf.constant([[[0.9083, 0.1582]]])
in0Con15677 = tf.constant([[[[0.8566], [0.341], [0.5406]], [[0.8981], [0.9601], [0.1996]]]])
in0Ave59920 = tf.constant([[[0.7137], [0.7105]]])
in1Ave59920 = tf.constant([[[0.4216], [0.2112]]])
in0Bat83276 = tf.constant([[1.4565, 1.3228, 1.4077, 1.5416]])
in0Con88210 = tf.constant([[0.7034, 0.5703, 0.4255, 0.964, 0.3608, 0.5372, 0.3597, 0.6396]])
in0Con95629 = tf.constant([[0.3221, 0.0999, 0.4939, 0.8268, 0.0117, 0.9903, 0.6421, 0.8832, 0.922, 0.7429, 0.4792, 0.3962, 0.0295, 0.7585, 0.6678, 0.8395, 0.7279, 0.3165, 0.904, 0.2528]])
in0Sub62368 = tf.constant([[[[[0.1267, 0.5938], [0.5706, 0.0336]], [[0.9908, 0.4679], [0.8024, 0.5166]]], [[[0.4408, 0.2263], [0.3137, 0.7319]], [[0.3795, 0.3649], [0.1719, 0.5843]]]]])
in1Sub62368 = tf.constant([[[[[0.2033, 0.3246], [0.512, 0.9659]], [[0.7783, 0.8093], [0.4877, 0.9389]]], [[[0.3185, 0.7611], [0.5003, 0.4801]], [[0.7448, 0.8012], [0.3629, 0.3031]]]]])
in0Glo20863 = tf.constant([[[[1.926], [1.0901]]]])
in0Con31363 = tf.constant([[0.7024, 0.0701, 0.4852, 0.4679, 0.45, 0.4079, 0.0217, 0.519, 0.2089, 0.5791, 0.756, 0.5926, 0.8598, 0.1005, 0.487, 0.2831, 0.8272, 0.0923, 0.4931, 0.1842, 0.4762, 0.5435, 0.8152, 0.2345, 0.4795, 0.9347, 0.1154, 0.6856, 0.3663, 0.3996, 0.2663]])
print (np.array2string(model.predict([in0Min68344,in1Min68344,in0Con15677,in0Ave59920,in1Ave59920,in0Bat83276,in0Con88210,in0Con95629,in0Sub62368,in1Sub62368,in0Glo20863,in0Con31363],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Ave51592.png')

LMin68344 = minimum_layer([[[[0.9297, 0.3124]]], [[[0.9083, 0.1582]]]], Min68344), 
LRes77111 = reshape_layer(Min68344, [1, 2, 1], Res77111), 
LZer20718 = zero_padding2D_layer(Res77111, 1, 0, 1, 0, Zer20718), 
LCon15677 = concatenate_layer([Zer20718,[[[[0.8566], [0.341], [0.5406]], [[0.8981], [0.9601], [0.1996]]]]], 3, Con15677), 
LAve59920 = average_layer([[[[0.7137], [0.7105]]], [[[0.4216], [0.2112]]]], Ave59920), 
LRes80036 = reshape_layer(Ave59920, [2, 1, 1], Res80036), 
LSep5507 = separable_conv2D_layer(Res80036, 2, 1,[[[[[0.5508]]], [[[0.7096]]]],[[[[0.2947, 0.9575]]]]],[0, 0], 1, 1, true, Sep5507), 
LZer96628 = zero_padding2D_layer(Sep5507, 0, 0, 2, 0, Zer96628), 
LMul52275 = multiply_layer([Con15677,Zer96628], Mul52275), 
LRes8243 = reshape_layer(Mul52275, [2, 6], Res8243), 
LFla55533 = flatten_layer(Res8243, Fla55533), 
LBat83276 = batch_normalization_layer([[1.4565, 1.3228, 1.4077, 1.5416]], 1, 0.5330355072727188, [0.9767, 0.0259, 0.4067, 0.3422], [0.4136, 0.8072, 0.6836, 0.4701], [0.6509, 0.0478, 0.14, 0.5213], [0.537, 0.8286, 0.8725, 0.1525], Bat83276), 
LCon88210 = concatenate_layer([Bat83276,[[0.7034, 0.5703, 0.4255, 0.964, 0.3608, 0.5372, 0.3597, 0.6396]]], 1, Con88210), 
LMin90593 = minimum_layer([Fla55533,Con88210], Min90593), 
LCon95629 = concatenate_layer([Min90593,[[0.3221, 0.0999, 0.4939, 0.8268, 0.0117, 0.9903, 0.6421, 0.8832, 0.922, 0.7429, 0.4792, 0.3962, 0.0295, 0.7585, 0.6678, 0.8395, 0.7279, 0.3165, 0.904, 0.2528]]], 1, Con95629), 
LSub62368 = subtract_layer([[[[[0.1267, 0.5938], [0.5706, 0.0336]], [[0.9908, 0.4679], [0.8024, 0.5166]]], [[[0.4408, 0.2263], [0.3137, 0.7319]], [[0.3795, 0.3649], [0.1719, 0.5843]]]]], [[[[[0.2033, 0.3246], [0.512, 0.9659]], [[0.7783, 0.8093], [0.4877, 0.9389]]], [[[0.3185, 0.7611], [0.5003, 0.4801]], [[0.7448, 0.8012], [0.3629, 0.3031]]]]], Sub62368), 
LRes1372 = reshape_layer(Sub62368, [2, 2, 4], Res1372), 
LRes77446 = reshape_layer(Res1372, [2, 8], Res77446), 
LZer57307 = zero_padding1D_layer(Res77446, 1, 1, Zer57307), 
LFla1993 = flatten_layer(Zer57307, Fla1993), 
LGlo20863 = global_average_pooling2D_layer([[[[1.926], [1.0901]]]], Glo20863), 
LCon31363 = concatenate_layer([Glo20863,[[0.7024, 0.0701, 0.4852, 0.4679, 0.45, 0.4079, 0.0217, 0.519, 0.2089, 0.5791, 0.756, 0.5926, 0.8598, 0.1005, 0.487, 0.2831, 0.8272, 0.0923, 0.4931, 0.1842, 0.4762, 0.5435, 0.8152, 0.2345, 0.4795, 0.9347, 0.1154, 0.6856, 0.3663, 0.3996, 0.2663]]], 1, Con31363), 
LMax70491 = maximum_layer([Fla1993,Con31363], Max70491), 
LAve51592 = average_layer([Con95629,Max70491], Ave51592), 
exec_layers([LMin68344,LRes77111,LZer20718,LCon15677,LAve59920,LRes80036,LSep5507,LZer96628,LMul52275,LRes8243,LFla55533,LBat83276,LCon88210,LMin90593,LCon95629,LSub62368,LRes1372,LRes77446,LZer57307,LFla1993,LGlo20863,LCon31363,LMax70491,LAve51592],["Min68344","Res77111","Zer20718","Con15677","Ave59920","Res80036","Sep5507","Zer96628","Mul52275","Res8243","Fla55533","Bat83276","Con88210","Min90593","Con95629","Sub62368","Res1372","Res77446","Zer57307","Fla1993","Glo20863","Con31363","Max70491","Ave51592"],Ave51592,"Ave51592")

Actual (Unparsed): [[0.7540250, 0.3512000, 0.0350500, 0.2426000, 0.2339500, 0.3905572, 0.2039500, 0.0108500, 0.2595000, 0.1346000, 0.2954671, 0.4022562, 0.4573500, 0.4798500, 0.4043000, 0.6569000, 0.1474000, 0.9087500, 0.3672000, 0.6881500, 0.5531000, 0.6095500, 0.5113500, 0.6057000, 0.1320000, 0.6190000, 0.8012500, 0.4774500, 0.7067500, 0.3414000, 0.6518000, 0.2595500]]

Expected (Unparsed): [[0.754025,0.3512,0.03505,0.2426,0.23395,0.39055722195355497,0.20395,0.01085,0.2595,0.1346,0.2954671168096586,0.40225620460653,0.45735000000000003,0.47985,0.4043,0.6569,0.1474,0.90875,0.36719999999999997,0.68815,0.5531,0.60955,0.51135,0.6057,0.132,0.619,0.80125,0.47745000000000004,0.70675,0.34140000000000004,0.6518,0.25955]]

Actual:   [[0.7541, 0.3512, 0.0351, 0.2426, 0.234, 0.3906, 0.204, 0.0109, 0.2595, 0.1346, 0.2955, 0.4023, 0.4574, 0.4799, 0.4043, 0.6569, 0.1474, 0.9088, 0.3672, 0.6882, 0.5531, 0.6096, 0.5114, 0.6057, 0.132, 0.619, 0.8013, 0.4775, 0.7068, 0.3414, 0.6518, 0.2596]]

Expected: [[0.7541, 0.3512, 0.0351, 0.2426, 0.234, 0.3906, 0.204, 0.0109, 0.2595, 0.1346, 0.2955, 0.4023, 0.4574, 0.4799, 0.4043, 0.6569, 0.1474, 0.9088, 0.3672, 0.6882, 0.5531, 0.6096, 0.5114, 0.6057, 0.132, 0.619, 0.8013, 0.4775, 0.7068, 0.3415, 0.6518, 0.2596]]