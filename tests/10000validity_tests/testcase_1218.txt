import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Max11845 = tf.keras.layers.Input(shape=([1, 2, 2]))

Max11845 = keras.layers.MaxPool2D(pool_size=(1, 2), name = 'Max11845', )(in0Max11845)
Res20254 = keras.layers.Reshape((1, 2), name = 'Res20254', )(Max11845)
Zer28860 = keras.layers.ZeroPadding1D(padding=((1, 1)), name = 'Zer28860', )(Res20254)
ELU9047 = keras.layers.ELU(alpha=8.84667282025148, name = 'ELU9047', )(Zer28860)
Per62903 = keras.layers.Permute((1,2), name = 'Per62903',)(ELU9047)
model = tf.keras.models.Model(inputs=[in0Max11845], outputs=Per62903)
in0Max11845 = tf.constant([[[[1.3095, 1.0877], [1.889, 1.5314]]]])
print (np.array2string(model.predict([in0Max11845],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Per62903.png')

LMax11845 = max_pool2D_layer([[[[1.3095, 1.0877], [1.889, 1.5314]]]], 1, 2, Max11845), 
LRes20254 = reshape_layer(Max11845, [1, 2], Res20254), 
LZer28860 = zero_padding1D_layer(Res20254, 1, 1, Zer28860), 
LELU9047 = elu_layer(Zer28860, 8.84667282025148, ELU9047), 
LPer62903 = permute_layer(ELU9047, 1,2, Per62903), 
exec_layers([LMax11845,LRes20254,LZer28860,LELU9047,LPer62903],["Max11845","Res20254","Zer28860","ELU9047","Per62903"],Per62903,"Per62903")

Actual (Unparsed): [[[0.0000000, 0.0000000], [1.8890001, 1.5314000], [0.0000000, 0.0000000]]]

Expected (Unparsed): [[[0,0],[1.889,1.5314],[0,0]]]

Actual:   [[[0, 0], [1.8891, 1.5314], [0, 0]]]

Expected: [[[0, 0], [1.889, 1.5314], [0, 0]]]