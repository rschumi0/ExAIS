import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Up_16905 = tf.keras.layers.Input(shape=([4, 2, 4]))
in0Min77324 = tf.keras.layers.Input(shape=([2, 1]))
in1Min77324 = tf.keras.layers.Input(shape=([2, 1]))
in0Con65535 = tf.keras.layers.Input(shape=([4, 7]))
in0Con31572 = tf.keras.layers.Input(shape=([3, 4]))
in0Min51224 = tf.keras.layers.Input(shape=([1, 1]))
in1Min51224 = tf.keras.layers.Input(shape=([1, 1]))
in0Con59725 = tf.keras.layers.Input(shape=([3, 2]))
in0Den25629 = tf.keras.layers.Input(shape=([3, 3]))
in0Con64593 = tf.keras.layers.Input(shape=([3, 21]))
in0Zer27962 = tf.keras.layers.Input(shape=([4, 2, 4, 1]))
in0Mul11493 = tf.keras.layers.Input(shape=([1, 1, 1]))
in1Mul11493 = tf.keras.layers.Input(shape=([1, 1, 1]))
in0Con80224 = tf.keras.layers.Input(shape=([6, 4, 5]))
in0Sep7979 = tf.keras.layers.Input(shape=([1, 1, 2]))
in0Con60981 = tf.keras.layers.Input(shape=([3, 2]))

Up_16905 = keras.layers.UpSampling2D(size=(1, 1), name = 'Up_16905', )(in0Up_16905)
Res6005 = keras.layers.Reshape((4, 8), name = 'Res6005', )(Up_16905)
Min77324 = keras.layers.Minimum(name = 'Min77324', )([in0Min77324,in1Min77324])
Zer29366 = keras.layers.ZeroPadding1D(padding=((2, 0)), name = 'Zer29366', )(Min77324)
Con65535 = keras.layers.Concatenate(axis=2, name = 'Con65535', )([Zer29366,in0Con65535])
Min13038 = keras.layers.Minimum(name = 'Min13038', )([Res6005,Con65535])
Loc32146 = keras.layers.LocallyConnected1D(2, (3),strides=(3), name = 'Loc32146', )(Min13038)
Mas87118 = keras.layers.Masking(mask_value=2, name = 'Mas87118', )(Loc32146)
Zer31569 = keras.layers.ZeroPadding1D(padding=((2, 0)), name = 'Zer31569', )(Mas87118)
Con31572 = keras.layers.Concatenate(axis=2, name = 'Con31572', )([Zer31569,in0Con31572])
Min51224 = keras.layers.Minimum(name = 'Min51224', )([in0Min51224,in1Min51224])
Zer79261 = keras.layers.ZeroPadding1D(padding=((2, 0)), name = 'Zer79261', )(Min51224)
Con59725 = keras.layers.Concatenate(axis=2, name = 'Con59725', )([Zer79261,in0Con59725])
Den25629 = keras.layers.Dense(3,name = 'Den25629', )(in0Den25629)
Max82699 = keras.layers.Maximum(name = 'Max82699', )([Con59725,Den25629])
Con64593 = keras.layers.Concatenate(axis=2, name = 'Con64593', )([Max82699,in0Con64593])
Zer27962 = keras.layers.ZeroPadding3D(padding=((1, 1), (1, 1), (1, 1)), name = 'Zer27962', )(in0Zer27962)
Res55097 = keras.layers.Reshape((6, 4, 6), name = 'Res55097', )(Zer27962)
Mul11493 = keras.layers.Multiply(name = 'Mul11493', )([in0Mul11493,in1Mul11493])
Zer16294 = keras.layers.ZeroPadding2D(padding=((5, 0), (3, 0)), name = 'Zer16294', )(Mul11493)
Con80224 = keras.layers.Concatenate(axis=3, name = 'Con80224', )([Zer16294,in0Con80224])
Mul53547 = keras.layers.Multiply(name = 'Mul53547', )([Res55097,Con80224])
Res97129 = keras.layers.Reshape((6, 24), name = 'Res97129', )(Mul53547)
Dot69721 = keras.layers.Dot(axes=(2, 2), name = 'Dot69721', )([Con64593,Res97129])
Sub68481 = keras.layers.Subtract(name = 'Sub68481', )([Con31572,Dot69721])
Sep7979 = keras.layers.SeparableConv2D(2, (1, 1),strides=(1, 1), padding='valid', name = 'Sep7979', )(in0Sep7979)
Res46417 = keras.layers.Reshape((1, 2), name = 'Res46417', )(Sep7979)
GRU20124 = keras.layers.GRU(3,reset_after=True, recurrent_activation='sigmoid', name = 'GRU20124', )(Res46417)
Res38840 = keras.layers.Reshape((3, 1), name = 'Res38840', )(GRU20124)
Loc63151 = keras.layers.LocallyConnected1D(4, (3),strides=(1), name = 'Loc63151', )(Res38840)
Zer24535 = keras.layers.ZeroPadding1D(padding=((2, 0)), name = 'Zer24535', )(Loc63151)
Con60981 = keras.layers.Concatenate(axis=2, name = 'Con60981', )([Zer24535,in0Con60981])
Sub90412 = keras.layers.Subtract(name = 'Sub90412', )([Sub68481,Con60981])
model = tf.keras.models.Model(inputs=[in0Up_16905,in0Min77324,in1Min77324,in0Con65535,in0Con31572,in0Min51224,in1Min51224,in0Con59725,in0Den25629,in0Con64593,in0Zer27962,in0Mul11493,in1Mul11493,in0Con80224,in0Sep7979,in0Con60981], outputs=Sub90412)
w = model.get_layer('Loc32146').get_weights() 
w[0] = np.array([[[0.1741, 0.1529], [0.4753, 0.2947], [0.4157, 0.1796], [0.6134, 0.0809], [0.1054, 0.5442], [0.8584, 0.203], [0.7261, 0.4462], [0.6773, 0.4427], [0.2077, 0.783], [0.1561, 0.6255], [0.9484, 0.4695], [0.0726, 0.5637], [0.283, 0.1267], [0.2695, 0.4682], [0.9147, 0.29], [0.5753, 0.7736], [0.3238, 0.9786], [0.7171, 0.8452], [0.3209, 0.0672], [0.0292, 0.9563], [0.7212, 0.4051], [0.272, 0.2651], [0.5829, 0.0406], [0.5451, 0.2534]]])
w[1] = np.array([[0, 0]])
model.get_layer('Loc32146').set_weights(w) 
w = model.get_layer('Den25629').get_weights() 
w[0] = np.array([[0.4078, 0.7323, 0.5872], [0.6368, 0.7581, 0.5642], [0.0151, 0.13, 0.466]])
w[1] = np.array([0.5948, 0.1473, 0.5562])
model.get_layer('Den25629').set_weights(w) 
w = model.get_layer('Sep7979').get_weights() 
w[0] = np.array([[[[0.8111], [0.9323]]]])
w[1] = np.array([[[[0.5668, 0.6709], [0.9062, 0.3342]]]])
w[2] = np.array([0, 0])
model.get_layer('Sep7979').set_weights(w) 
w = model.get_layer('GRU20124').get_weights() 
w[0] = np.array([[8, 6, 7, 5, 9, 10, 6, 3, 4], [10, 8, 3, 10, 9, 4, 6, 7, 1]])
w[1] = np.array([[3, 4, 7, 9, 8, 3, 1, 7, 4], [1, 10, 9, 1, 2, 6, 9, 9, 7], [6, 3, 7, 6, 1, 1, 7, 5, 7]])
w[2] = np.array([[1, 1, 2, 5, 8, 9, 3, 8, 3], [7, 7, 2, 8, 3, 10, 9, 1, 8]])
model.get_layer('GRU20124').set_weights(w) 
w = model.get_layer('Loc63151').get_weights() 
w[0] = np.array([[[0.4927, 0.5116, 0.2119, 0.9465], [0.385, 0.9235, 0.0355, 0.5532], [0.4751, 0.9496, 0.7171, 0.8828]]])
w[1] = np.array([[0, 0, 0, 0]])
model.get_layer('Loc63151').set_weights(w) 
in0Up_16905 = tf.constant([[[[1.2204, 1.835, 1.1024, 1.9408], [1.4882, 1.0541, 1.2992, 1.6111]], [[1.482, 1.2739, 1.9256, 1.5551], [1.3396, 1.2675, 1.7379, 1.2588]], [[1.1327, 1.8807, 1.2156, 1.6423], [1.1624, 1.6469, 1.6128, 1.875]], [[1.359, 1.563, 1.2199, 1.7919], [1.0286, 1.6347, 1.0467, 1.5392]]]])
in0Min77324 = tf.constant([[[0.5067], [0.0334]]])
in1Min77324 = tf.constant([[[0.3475], [0.8277]]])
in0Con65535 = tf.constant([[[0.3208, 0.5579, 0.7832, 0.01, 0.0268, 0.2185, 0.3942], [0.4085, 0.1125, 0.8716, 0.1395, 0.2939, 0.4107, 0.7806], [0.2358, 0.9607, 0.3968, 0.6842, 0.4831, 0.2655, 0.734], [0.0939, 0.8822, 0.6278, 0.3155, 0.2103, 0.0612, 0.9735]]])
in0Con31572 = tf.constant([[[0.1523, 0.9341, 0.8469, 0.437], [0.1212, 0.5568, 0.3805, 0.3105], [0.3221, 0.6062, 0.291, 0.7604]]])
in0Min51224 = tf.constant([[[0.6348]]])
in1Min51224 = tf.constant([[[0.2236]]])
in0Con59725 = tf.constant([[[0.037, 0.1653], [0.4708, 0.8305], [0.931, 0.4459]]])
in0Den25629 = tf.constant([[[0.1543, 0.7038, 0.358], [0.2181, 0.2569, 0.0624], [0.1565, 0.1974, 0.8755]]])
in0Con64593 = tf.constant([[[0.2244, 0.5032, 0.6202, 0.4008, 0.4221, 0.5482, 0.7777, 0.2624, 0.6689, 0.7274, 0.1849, 0.5138, 0.3146, 0.9254, 0.0198, 0.9408, 0.7335, 0.5877, 0.6287, 0.9476, 0.6395], [0.2343, 0.4036, 0.2453, 0.9346, 0.066, 0.8284, 0.9764, 0.328, 0.7191, 0.3104, 0.414, 0.672, 0.6498, 0.1366, 0.447, 0.9396, 0.5943, 0.394, 0.1638, 0.0426, 0.0434], [0.9744, 0.9819, 0.2294, 0.6947, 0.8496, 0.9334, 0.6383, 0.3997, 0.6455, 0.9178, 0.6857, 0.2132, 0.1713, 0.9545, 0.3645, 0.7668, 0.9669, 0.7313, 0.1997, 0.341, 0.1185]]])
in0Zer27962 = tf.constant([[[[[1.2201], [1.4713], [1.0888], [1.6076]], [[1.7435], [1.7611], [1.3445], [1.1]]], [[[1.3843], [1.3364], [1.0788], [1.294]], [[1.4117], [1.657], [1.9295], [1.0261]]], [[[1.852], [1.3502], [1.4939], [1.2252]], [[1.146], [1.809], [1.9573], [1.942]]], [[[1.5186], [1.8656], [1.5767], [1.97]], [[1.916], [1.697], [1.0161], [1.8747]]]]])
in0Mul11493 = tf.constant([[[[0.713]]]])
in1Mul11493 = tf.constant([[[[0.8187]]]])
in0Con80224 = tf.constant([[[[0.652, 0.7122, 0.0468, 0.6293, 0.0767], [0.866, 0.938, 0.2927, 0.947, 0.5519], [0.3774, 0.7519, 0.2524, 0.602, 0.5082], [0.3445, 0.2448, 0.9384, 0.851, 0.6816]], [[0.2094, 0.8877, 0.3383, 0.3963, 0.1913], [0.8174, 0.7152, 0.1824, 0.0347, 0.4748], [0.0044, 0.6946, 0.6272, 0.2055, 0.5978], [0.129, 0.6818, 0.1756, 0.8092, 0.2055]], [[0.7421, 0.8305, 0.3945, 0.8336, 0.3461], [0.0849, 0.6361, 0.9587, 0.4494, 0.1574], [0.0698, 0.9583, 0.2733, 0.5393, 0.8342], [0.4855, 0.7186, 0.3173, 0.9208, 0.8427]], [[0.3638, 0.9589, 0.3114, 0.8078, 0.8551], [0.7113, 0.1056, 0.3323, 0.1863, 0.9673], [0.2596, 0.6871, 0.9644, 0.3063, 0.4852], [0.436, 0.265, 0.4316, 0.1901, 0.0879]], [[0.0892, 0.8944, 0.0821, 0.3976, 0.7521], [0.3202, 0.2022, 0.0643, 0.7588, 0.8341], [0.705, 0.012, 0.8498, 0.5204, 0.6639], [0.5261, 0.9374, 0.0436, 0.5399, 0.2679]], [[0.595, 0.0117, 0.7271, 0.592, 0.6105], [0.2649, 0.76, 0.6505, 0.87, 0.0388], [0.3565, 0.486, 0.4984, 0.869, 0.4537], [0.6837, 0.7523, 0.1786, 0.7949, 0.1851]]]])
in0Sep7979 = tf.constant([[[[0.136, 0.8314]]]])
in0Con60981 = tf.constant([[[0.6185, 0.3541], [0.9087, 0.2401], [0.9935, 0.7245]]])
print (np.array2string(model.predict([in0Up_16905,in0Min77324,in1Min77324,in0Con65535,in0Con31572,in0Min51224,in1Min51224,in0Con59725,in0Den25629,in0Con64593,in0Zer27962,in0Mul11493,in1Mul11493,in0Con80224,in0Sep7979,in0Con60981],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Sub90412.png')

LUp_16905 = up_sampling2D_layer([[[[1.2204, 1.835, 1.1024, 1.9408], [1.4882, 1.0541, 1.2992, 1.6111]], [[1.482, 1.2739, 1.9256, 1.5551], [1.3396, 1.2675, 1.7379, 1.2588]], [[1.1327, 1.8807, 1.2156, 1.6423], [1.1624, 1.6469, 1.6128, 1.875]], [[1.359, 1.563, 1.2199, 1.7919], [1.0286, 1.6347, 1.0467, 1.5392]]]], 1, 1, Up_16905), 
LRes6005 = reshape_layer(Up_16905, [4, 8], Res6005), 
LMin77324 = minimum_layer([[[[0.5067], [0.0334]]], [[[0.3475], [0.8277]]]], Min77324), 
LZer29366 = zero_padding1D_layer(Min77324, 2, 0, Zer29366), 
LCon65535 = concatenate_layer([Zer29366,[[[0.3208, 0.5579, 0.7832, 0.01, 0.0268, 0.2185, 0.3942], [0.4085, 0.1125, 0.8716, 0.1395, 0.2939, 0.4107, 0.7806], [0.2358, 0.9607, 0.3968, 0.6842, 0.4831, 0.2655, 0.734], [0.0939, 0.8822, 0.6278, 0.3155, 0.2103, 0.0612, 0.9735]]]], 2, Con65535), 
LMin13038 = minimum_layer([Res6005,Con65535], Min13038), 
LLoc32146 = locally_connected1D_layer(Min13038, 3,[[[0.1741, 0.1529], [0.4753, 0.2947], [0.4157, 0.1796], [0.6134, 0.0809], [0.1054, 0.5442], [0.8584, 0.203], [0.7261, 0.4462], [0.6773, 0.4427], [0.2077, 0.783], [0.1561, 0.6255], [0.9484, 0.4695], [0.0726, 0.5637], [0.283, 0.1267], [0.2695, 0.4682], [0.9147, 0.29], [0.5753, 0.7736], [0.3238, 0.9786], [0.7171, 0.8452], [0.3209, 0.0672], [0.0292, 0.9563], [0.7212, 0.4051], [0.272, 0.2651], [0.5829, 0.0406], [0.5451, 0.2534]]],[[0, 0]], 3, Loc32146), 
LMas87118 = masking_layer(Loc32146, 2, Mas87118), 
LZer31569 = zero_padding1D_layer(Mas87118, 2, 0, Zer31569), 
LCon31572 = concatenate_layer([Zer31569,[[[0.1523, 0.9341, 0.8469, 0.437], [0.1212, 0.5568, 0.3805, 0.3105], [0.3221, 0.6062, 0.291, 0.7604]]]], 2, Con31572), 
LMin51224 = minimum_layer([[[[0.6348]]], [[[0.2236]]]], Min51224), 
LZer79261 = zero_padding1D_layer(Min51224, 2, 0, Zer79261), 
LCon59725 = concatenate_layer([Zer79261,[[[0.037, 0.1653], [0.4708, 0.8305], [0.931, 0.4459]]]], 2, Con59725), 
LDen25629 = dense_layer([[[0.1543, 0.7038, 0.358], [0.2181, 0.2569, 0.0624], [0.1565, 0.1974, 0.8755]]], [[0.4078, 0.7323, 0.5872], [0.6368, 0.7581, 0.5642], [0.0151, 0.13, 0.466]],[0.5948, 0.1473, 0.5562], Den25629), 
LMax82699 = maximum_layer([Con59725,Den25629], Max82699), 
LCon64593 = concatenate_layer([Max82699,[[[0.2244, 0.5032, 0.6202, 0.4008, 0.4221, 0.5482, 0.7777, 0.2624, 0.6689, 0.7274, 0.1849, 0.5138, 0.3146, 0.9254, 0.0198, 0.9408, 0.7335, 0.5877, 0.6287, 0.9476, 0.6395], [0.2343, 0.4036, 0.2453, 0.9346, 0.066, 0.8284, 0.9764, 0.328, 0.7191, 0.3104, 0.414, 0.672, 0.6498, 0.1366, 0.447, 0.9396, 0.5943, 0.394, 0.1638, 0.0426, 0.0434], [0.9744, 0.9819, 0.2294, 0.6947, 0.8496, 0.9334, 0.6383, 0.3997, 0.6455, 0.9178, 0.6857, 0.2132, 0.1713, 0.9545, 0.3645, 0.7668, 0.9669, 0.7313, 0.1997, 0.341, 0.1185]]]], 2, Con64593), 
LZer27962 = zero_padding3D_layer([[[[[1.2201], [1.4713], [1.0888], [1.6076]], [[1.7435], [1.7611], [1.3445], [1.1]]], [[[1.3843], [1.3364], [1.0788], [1.294]], [[1.4117], [1.657], [1.9295], [1.0261]]], [[[1.852], [1.3502], [1.4939], [1.2252]], [[1.146], [1.809], [1.9573], [1.942]]], [[[1.5186], [1.8656], [1.5767], [1.97]], [[1.916], [1.697], [1.0161], [1.8747]]]]], 1, 1, 1, 1, 1, 1, Zer27962), 
LRes55097 = reshape_layer(Zer27962, [6, 4, 6], Res55097), 
LMul11493 = multiply_layer([[[[[0.713]]]], [[[[0.8187]]]]], Mul11493), 
LZer16294 = zero_padding2D_layer(Mul11493, 5, 0, 3, 0, Zer16294), 
LCon80224 = concatenate_layer([Zer16294,[[[[0.652, 0.7122, 0.0468, 0.6293, 0.0767], [0.866, 0.938, 0.2927, 0.947, 0.5519], [0.3774, 0.7519, 0.2524, 0.602, 0.5082], [0.3445, 0.2448, 0.9384, 0.851, 0.6816]], [[0.2094, 0.8877, 0.3383, 0.3963, 0.1913], [0.8174, 0.7152, 0.1824, 0.0347, 0.4748], [0.0044, 0.6946, 0.6272, 0.2055, 0.5978], [0.129, 0.6818, 0.1756, 0.8092, 0.2055]], [[0.7421, 0.8305, 0.3945, 0.8336, 0.3461], [0.0849, 0.6361, 0.9587, 0.4494, 0.1574], [0.0698, 0.9583, 0.2733, 0.5393, 0.8342], [0.4855, 0.7186, 0.3173, 0.9208, 0.8427]], [[0.3638, 0.9589, 0.3114, 0.8078, 0.8551], [0.7113, 0.1056, 0.3323, 0.1863, 0.9673], [0.2596, 0.6871, 0.9644, 0.3063, 0.4852], [0.436, 0.265, 0.4316, 0.1901, 0.0879]], [[0.0892, 0.8944, 0.0821, 0.3976, 0.7521], [0.3202, 0.2022, 0.0643, 0.7588, 0.8341], [0.705, 0.012, 0.8498, 0.5204, 0.6639], [0.5261, 0.9374, 0.0436, 0.5399, 0.2679]], [[0.595, 0.0117, 0.7271, 0.592, 0.6105], [0.2649, 0.76, 0.6505, 0.87, 0.0388], [0.3565, 0.486, 0.4984, 0.869, 0.4537], [0.6837, 0.7523, 0.1786, 0.7949, 0.1851]]]]], 3, Con80224), 
LMul53547 = multiply_layer([Res55097,Con80224], Mul53547), 
LRes97129 = reshape_layer(Mul53547, [6, 24], Res97129), 
LDot69721 = dot_layer(Con64593,Res97129, 2, 2, Dot69721), 
LSub68481 = subtract_layer(Con31572,Dot69721, Sub68481), 
LSep7979 = separable_conv2D_layer([[[[0.136, 0.8314]]]], 1, 1,[[[[[0.8111], [0.9323]]]],[[[[0.5668, 0.6709], [0.9062, 0.3342]]]]],[0, 0], 1, 1, false, Sep7979), 
LRes46417 = reshape_layer(Sep7979, [1, 2], Res46417), 
LGRU20124 = gru_layer(Res46417,[[8, 6, 7, 5, 9, 10, 6, 3, 4], [10, 8, 3, 10, 9, 4, 6, 7, 1]],[[3, 4, 7, 9, 8, 3, 1, 7, 4], [1, 10, 9, 1, 2, 6, 9, 9, 7], [6, 3, 7, 6, 1, 1, 7, 5, 7]],[[1, 1, 2, 5, 8, 9, 3, 8, 3], [7, 7, 2, 8, 3, 10, 9, 1, 8]], true, GRU20124), 
LRes38840 = reshape_layer(GRU20124, [3, 1], Res38840), 
LLoc63151 = locally_connected1D_layer(Res38840, 3,[[[0.4927, 0.5116, 0.2119, 0.9465], [0.385, 0.9235, 0.0355, 0.5532], [0.4751, 0.9496, 0.7171, 0.8828]]],[[0, 0, 0, 0]], 1, Loc63151), 
LZer24535 = zero_padding1D_layer(Loc63151, 2, 0, Zer24535), 
LCon60981 = concatenate_layer([Zer24535,[[[0.6185, 0.3541], [0.9087, 0.2401], [0.9935, 0.7245]]]], 2, Con60981), 
LSub90412 = subtract_layer(Sub68481,Con60981, Sub90412), 
exec_layers([LUp_16905,LRes6005,LMin77324,LZer29366,LCon65535,LMin13038,LLoc32146,LMas87118,LZer31569,LCon31572,LMin51224,LZer79261,LCon59725,LDen25629,LMax82699,LCon64593,LZer27962,LRes55097,LMul11493,LZer16294,LCon80224,LMul53547,LRes97129,LDot69721,LSub68481,LSep7979,LRes46417,LGRU20124,LRes38840,LLoc63151,LZer24535,LCon60981,LSub90412],["Up_16905","Res6005","Min77324","Zer29366","Con65535","Min13038","Loc32146","Mas87118","Zer31569","Con31572","Min51224","Zer79261","Con59725","Den25629","Max82699","Con64593","Zer27962","Res55097","Mul11493","Zer16294","Con80224","Mul53547","Res97129","Dot69721","Sub68481","Sep7979","Res46417","GRU20124","Res38840","Loc63151","Zer24535","Con60981","Sub90412"],Sub90412,"Sub90412")

Actual (Unparsed): [[[0.0000000, -2.2713166, -2.8323256, -1.9840174, -2.0894207, 0.0829000], [0.0000000, -2.5537756, -3.3174602, -2.4741001, -2.7293451, 0.0704000], [4.2728690, 1.1994190, -2.4884729, -2.4143311, -4.1396122, 0.0359000]]]

Expected (Unparsed): [[[0.0,-2.271316543366,-2.8323255106930003,-1.984017268989,-2.089420701413,0.08289999999999997],[0.0,-2.5537755695920006,-3.3174602571280007,-2.474100134132,-2.729345024144,0.07039999999999999],[4.272869022080675,1.1994190538099752,-2.488472931192222,-2.4143309535759734,-4.139612236696999,0.03589999999999993]]]

Actual:   [[[0, -2.2713, -2.8323, -1.984, -2.0894, 0.0829], [0, -2.5537, -3.3174, -2.4741, -2.7293, 0.0704], [4.2729, 1.1995, -2.4884, -2.4143, -4.1396, 0.0359]]]

Expected: [[[0, -2.2713, -2.8323, -1.984, -2.0894, 0.0829], [0, -2.5537, -3.3174, -2.4741, -2.7293, 0.0704], [4.2729, 1.1995, -2.4884, -2.4143, -4.1396, 0.0359]]]