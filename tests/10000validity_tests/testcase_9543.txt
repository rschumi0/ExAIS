import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Max16027 = tf.keras.layers.Input(shape=([1, 2]))
in1Max16027 = tf.keras.layers.Input(shape=([1, 2]))
in0Con92337 = tf.keras.layers.Input(shape=([2, 1]))
in0Mul6372 = tf.keras.layers.Input(shape=([1, 1, 2]))
in1Mul6372 = tf.keras.layers.Input(shape=([1, 1, 2]))
in0Sof26495 = tf.keras.layers.Input(shape=([2, 1, 2]))

Max16027 = keras.layers.Maximum(name = 'Max16027', )([in0Max16027,in1Max16027])
Fla26127 = keras.layers.Flatten(name = 'Fla26127', )(Max16027)
Fla95067 = keras.layers.Flatten(name = 'Fla95067', )(Fla26127)
Res66307 = keras.layers.Reshape((2, 1), name = 'Res66307', )(Fla95067)
Con92337 = keras.layers.Concatenate(axis=2, name = 'Con92337', )([Res66307,in0Con92337])
Mul6372 = keras.layers.Multiply(name = 'Mul6372', )([in0Mul6372,in1Mul6372])
Res23869 = keras.layers.Reshape((1, 2), name = 'Res23869', )(Mul6372)
Sof26495 = keras.layers.Softmax(axis=1, name = 'Sof26495', input_shape=(2, 1, 2))(in0Sof26495)
Res76004 = keras.layers.Reshape((2, 2), name = 'Res76004', )(Sof26495)
Ave15224 = keras.layers.AveragePooling1D(pool_size=(2), strides=(2), padding='valid', name = 'Ave15224', )(Res76004)
Add22556 = keras.layers.Add(name = 'Add22556', )([Res23869,Ave15224])
Zer49061 = keras.layers.ZeroPadding1D(padding=((1, 0)), name = 'Zer49061', )(Add22556)
Max84082 = keras.layers.Maximum(name = 'Max84082', )([Con92337,Zer49061])
model = tf.keras.models.Model(inputs=[in0Max16027,in1Max16027,in0Con92337,in0Mul6372,in1Mul6372,in0Sof26495], outputs=Max84082)
in0Max16027 = tf.constant([[[0.866, 0.2658]]])
in1Max16027 = tf.constant([[[0.0396, 0.5597]]])
in0Con92337 = tf.constant([[[0.3668], [0.8373]]])
in0Mul6372 = tf.constant([[[[0.1859, 0.5374]]]])
in1Mul6372 = tf.constant([[[[0.8104, 0.3269]]]])
in0Sof26495 = tf.constant([[[[0.6363, 0.0603]], [[0.3581, 0.3675]]]])
print (np.array2string(model.predict([in0Max16027,in1Max16027,in0Con92337,in0Mul6372,in1Mul6372,in0Sof26495],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Max84082.png')

LMax16027 = maximum_layer([[[[0.866, 0.2658]]], [[[0.0396, 0.5597]]]], Max16027), 
LFla26127 = flatten_layer(Max16027, Fla26127), 
LFla95067 = flatten_layer(Fla26127, Fla95067), 
LRes66307 = reshape_layer(Fla95067, [2, 1], Res66307), 
LCon92337 = concatenate_layer([Res66307,[[[0.3668], [0.8373]]]], 2, Con92337), 
LMul6372 = multiply_layer([[[[[0.1859, 0.5374]]]], [[[[0.8104, 0.3269]]]]], Mul6372), 
LRes23869 = reshape_layer(Mul6372, [1, 2], Res23869), 
LSof26495 = softmax_layer([[[[0.6363, 0.0603]], [[0.3581, 0.3675]]]], 1, Sof26495), 
LRes76004 = reshape_layer(Sof26495, [2, 2], Res76004), 
LAve15224 = average_pooling1D_layer(Res76004, 2, 2, false, Ave15224), 
LAdd22556 = add_layer([Res23869,Ave15224], Add22556), 
LZer49061 = zero_padding1D_layer(Add22556, 1, 0, Zer49061), 
LMax84082 = maximum_layer([Con92337,Zer49061], Max84082), 
exec_layers([LMax16027,LFla26127,LFla95067,LRes66307,LCon92337,LMul6372,LRes23869,LSof26495,LRes76004,LAve15224,LAdd22556,LZer49061,LMax84082],["Max16027","Fla26127","Fla95067","Res66307","Con92337","Mul6372","Res23869","Sof26495","Res76004","Ave15224","Add22556","Zer49061","Max84082"],Max84082,"Max84082")

Actual (Unparsed): [[[0.8660000, 0.3668000], [0.6506534, 0.8373000]]]

Expected (Unparsed): [[[0.866,0.3668],[0.65065336,0.8373]]]

Actual:   [[[0.866, 0.3668], [0.6507, 0.8373]]]

Expected: [[[0.866, 0.3668], [0.6507, 0.8373]]]