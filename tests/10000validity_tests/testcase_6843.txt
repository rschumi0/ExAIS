import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Max48763 = tf.keras.layers.Input(shape=([1, 1, 1]))
in0Dep37929 = tf.keras.layers.Input(shape=([1, 1, 1]))
in0Dot36334 = tf.keras.layers.Input(shape=([3, 3]))
in1Dot36334 = tf.keras.layers.Input(shape=([3, 3]))
in0LST20320 = tf.keras.layers.Input(shape=([2, 1]))
in0Con99577 = tf.keras.layers.Input(shape=([8]))

Max48763 = keras.layers.MaxPool2D(pool_size=(1, 1), strides=(1, 1), padding='same', name = 'Max48763', )(in0Max48763)
Res34092 = keras.layers.Reshape((1, 1), name = 'Res34092', )(Max48763)
Dep37929 = keras.layers.DepthwiseConv2D((1, 1),strides=(1, 1), padding='valid', name = 'Dep37929', )(in0Dep37929)
Res59021 = keras.layers.Reshape((1, 1), name = 'Res59021', )(Dep37929)
Dot83582 = keras.layers.Dot(axes=(2, 1), name = 'Dot83582', )([Res34092,Res59021])
Res70273 = keras.layers.Reshape((1, 1, 1), name = 'Res70273', )(Dot83582)
Con10095 = keras.layers.Conv2D(3, (1, 1),strides=(1, 1), padding='same', dilation_rate=(1, 1), name = 'Con10095', )(Res70273)
Res83891 = keras.layers.Reshape((1, 3), name = 'Res83891', )(Con10095)
Zer37613 = keras.layers.ZeroPadding1D(padding=((8, 0)), name = 'Zer37613', )(Res83891)
Dot36334 = keras.layers.Dot(axes=(1, 2), name = 'Dot36334', )([in0Dot36334,in1Dot36334])
Fla27335 = keras.layers.Flatten(name = 'Fla27335', )(Dot36334)
LST20320 = keras.layers.LSTM(1,recurrent_activation='sigmoid', name = 'LST20320', )(in0LST20320)
Con99577 = keras.layers.Concatenate(axis=1, name = 'Con99577', )([LST20320,in0Con99577])
Max51463 = keras.layers.Maximum(name = 'Max51463', )([Fla27335,Con99577])
Res77800 = keras.layers.Reshape((9, 1), name = 'Res77800', )(Max51463)
Con53582 = keras.layers.Conv1D(3, (8),strides=(1), padding='same', dilation_rate=(1), name = 'Con53582', )(Res77800)
Add67102 = keras.layers.Add(name = 'Add67102', )([Zer37613,Con53582])
model = tf.keras.models.Model(inputs=[in0Max48763,in0Dep37929,in0Dot36334,in1Dot36334,in0LST20320,in0Con99577], outputs=Add67102)
w = model.get_layer('Dep37929').get_weights() 
w[0] = np.array([[[[0.8697]]]])
w[1] = np.array([0])
model.get_layer('Dep37929').set_weights(w) 
w = model.get_layer('Con10095').get_weights() 
w[0] = np.array([[[[0.9242, 0.1717, 0.7866]]]])
w[1] = np.array([0, 0, 0])
model.get_layer('Con10095').set_weights(w) 
w = model.get_layer('LST20320').get_weights() 
w[0] = np.array([[1, 4, 5, 1]])
w[1] = np.array([[6, 8, 10, 8]])
w[2] = np.array([7, 8, 10, 4])
model.get_layer('LST20320').set_weights(w) 
w = model.get_layer('Con53582').get_weights() 
w[0] = np.array([[[0.7199, 0.9068, 0.151]], [[0.0734, 0.4834, 0.7361]], [[0.6611, 0.9004, 0.6588]], [[0.8591, 0.863, 0.9778]], [[0.9957, 0.0339, 0.2519]], [[0.6324, 0.4839, 0.8234]], [[0.8157, 0.513, 0.0251]], [[0.6479, 0.5652, 0.3103]]])
w[1] = np.array([0, 0, 0])
model.get_layer('Con53582').set_weights(w) 
in0Max48763 = tf.constant([[[[1.4068]]]])
in0Dep37929 = tf.constant([[[[0.947]]]])
in0Dot36334 = tf.constant([[[0.0979, 0.6914, 0.7353], [0.2201, 0.8541, 0.6119], [0.4345, 0.2653, 0.7872]]])
in1Dot36334 = tf.constant([[[0.0734, 0.6689, 0.7264], [0.9547, 0.8336, 0.3706], [0.7351, 0.5933, 0.7616]]])
in0LST20320 = tf.constant([[[6], [7]]])
in0Con99577 = tf.constant([[0.7889, 0.2591, 0.8056, 0.6493, 0.019, 0.8808, 0.9089, 0.2071]])
print (np.array2string(model.predict([in0Max48763,in0Dep37929,in0Dot36334,in1Dot36334,in0LST20320,in0Con99577],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Add67102.png')

LMax48763 = max_pool2D_layer([[[[1.4068]]]], 1, 1, 1, 1, true, Max48763), 
LRes34092 = reshape_layer(Max48763, [1, 1], Res34092), 
LDep37929 = depthwise_conv2D_layer([[[[0.947]]]], 1, 1,[[[[0.8697]]]],[0], 1, 1, false, Dep37929), 
LRes59021 = reshape_layer(Dep37929, [1, 1], Res59021), 
LDot83582 = dot_layer(Res34092,Res59021, 2, 1, Dot83582), 
LRes70273 = reshape_layer(Dot83582, [1, 1, 1], Res70273), 
LCon10095 = conv2D_layer(Res70273, 1, 1,[[[[0.9242, 0.1717, 0.7866]]]],[0, 0, 0], 1, 1, true, 1, 1, Con10095), 
LRes83891 = reshape_layer(Con10095, [1, 3], Res83891), 
LZer37613 = zero_padding1D_layer(Res83891, 8, 0, Zer37613), 
LDot36334 = dot_layer([[[0.0979, 0.6914, 0.7353], [0.2201, 0.8541, 0.6119], [0.4345, 0.2653, 0.7872]]], [[[0.0734, 0.6689, 0.7264], [0.9547, 0.8336, 0.3706], [0.7351, 0.5933, 0.7616]]], 1, 2, Dot36334), 
LFla27335 = flatten_layer(Dot36334, Fla27335), 
LLST20320 = lstm_layer([[[6], [7]]],[[1, 4, 5, 1]],[[6, 8, 10, 8]],[7, 8, 10, 4], LST20320), 
LCon99577 = concatenate_layer([LST20320,[[0.7889, 0.2591, 0.8056, 0.6493, 0.019, 0.8808, 0.9089, 0.2071]]], 1, Con99577), 
LMax51463 = maximum_layer([Fla27335,Con99577], Max51463), 
LRes77800 = reshape_layer(Max51463, [9, 1], Res77800), 
LCon53582 = conv1D_layer(Res77800, 8,[[[0.7199, 0.9068, 0.151]], [[0.0734, 0.4834, 0.7361]], [[0.6611, 0.9004, 0.6588]], [[0.8591, 0.863, 0.9778]], [[0.9957, 0.0339, 0.2519]], [[0.6324, 0.4839, 0.8234]], [[0.8157, 0.513, 0.0251]], [[0.6479, 0.5652, 0.3103]]],[0, 0, 0], 1, true, 1, Con53582), 
LAdd67102 = add_layer([Zer37613,Con53582], Add67102), 
exec_layers([LMax48763,LRes34092,LDep37929,LRes59021,LDot83582,LRes70273,LCon10095,LRes83891,LZer37613,LDot36334,LFla27335,LLST20320,LCon99577,LMax51463,LRes77800,LCon53582,LAdd67102],["Max48763","Res34092","Dep37929","Res59021","Dot83582","Res70273","Con10095","Res83891","Zer37613","Dot36334","Fla27335","LST20320","Con99577","Max51463","Res77800","Con53582","Add67102"],Add67102,"Add67102")

Actual (Unparsed): [[[3.5683337, 2.3658784, 2.0573153], [4.3494020, 3.4033564, 2.6263031], [4.4551109, 3.5852298, 3.5186582], [5.8569042, 4.4587395, 3.7395171], [6.4758370, 5.1389462, 4.1493366], [5.6691917, 4.7857068, 4.3757126], [4.8362063, 4.2170451, 4.6357277], [4.6207034, 4.2023925, 3.6488591], [4.3084169, 4.4541093, 4.3175281]]]

Expected (Unparsed): [[[3.5683336949133015,2.3658784075755133,2.0573153407874116],[4.349402021788554,3.4033563966032103,2.6263031238087615],[4.455110927053651,3.5852297936825743,3.518658207866625],[5.856904332683746,4.458739501500891,3.7395171165035306],[6.475837136162999,5.138946300814,4.149336686576],[5.669191830332,4.785706939884,4.375712675441999],[4.836206415374,4.2170452086850005,4.635727848661],[4.62070354908,4.202392603258001,3.648859193327],[4.308416971144904,4.454109414488603,4.317528157265393]]]

Actual:   [[[3.5684, 2.3659, 2.0574], [4.3495, 3.4034, 2.6264], [4.4552, 3.5853, 3.5187], [5.857, 4.4588, 3.7396], [6.4759, 5.139, 4.1494], [5.6692, 4.7858, 4.3758], [4.8363, 4.2171, 4.6358], [4.6208, 4.2024, 3.6489], [4.3085, 4.4542, 4.3176]]]

Expected: [[[3.5684, 2.3659, 2.0574], [4.3495, 3.4034, 2.6264], [4.4552, 3.5853, 3.5187], [5.857, 4.4588, 3.7396], [6.4759, 5.139, 4.1494], [5.6692, 4.7858, 4.3758], [4.8363, 4.2171, 4.6358], [4.6208, 4.2024, 3.6489], [4.3085, 4.4542, 4.3176]]]