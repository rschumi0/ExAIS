import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Min74666 = tf.keras.layers.Input(shape=([2, 2, 2]))
in1Min74666 = tf.keras.layers.Input(shape=([2, 2, 2]))
in0Min35372 = tf.keras.layers.Input(shape=([1, 1]))
in1Min35372 = tf.keras.layers.Input(shape=([1, 1]))
in0Ave85480 = tf.keras.layers.Input(shape=([2, 1]))

Min74666 = keras.layers.Minimum(name = 'Min74666', )([in0Min74666,in1Min74666])
Res43380 = keras.layers.Reshape((2, 2, 2, 1), name = 'Res43380', )(Min74666)
Cro37327 = keras.layers.Cropping3D(cropping=((0, 1), (0, 1), (0, 0)), name = 'Cro37327', )(Res43380)
Res63144 = keras.layers.Reshape((1, 1, 2), name = 'Res63144', )(Cro37327)
Min35372 = keras.layers.Minimum(name = 'Min35372', )([in0Min35372,in1Min35372])
Zer10925 = keras.layers.ZeroPadding1D(padding=((1, 0)), name = 'Zer10925', )(Min35372)
Ave85480 = keras.layers.AveragePooling1D(pool_size=(1), name = 'Ave85480', )(in0Ave85480)
Sub1568 = keras.layers.Subtract(name = 'Sub1568', )([Zer10925,Ave85480])
Res90848 = keras.layers.Reshape((1, 1, 2), name = 'Res90848', )(Sub1568)
Sub18471 = keras.layers.Subtract(name = 'Sub18471', )([Res63144,Res90848])
Bat91379 = keras.layers.BatchNormalization(axis=1, epsilon=0.3613897338723491,  name = 'Bat91379', )(Sub18471)
model = tf.keras.models.Model(inputs=[in0Min74666,in1Min74666,in0Min35372,in1Min35372,in0Ave85480], outputs=Bat91379)
w = model.get_layer('Bat91379').get_weights() 
w[0] = np.array([0.2951])
w[1] = np.array([0.203])
w[2] = np.array([0.4073])
w[3] = np.array([0.093])
model.get_layer('Bat91379').set_weights(w) 
in0Min74666 = tf.constant([[[[0.8535, 0.6889], [0.2048, 0.9527]], [[0.5732, 0.0689], [0.0965, 0.2809]]]])
in1Min74666 = tf.constant([[[[0.5498, 0.4644], [0.6676, 0.0678]], [[0.3099, 0.79], [0.3753, 0.946]]]])
in0Min35372 = tf.constant([[[0.5112]]])
in1Min35372 = tf.constant([[[0.7834]]])
in0Ave85480 = tf.constant([[[1.3676], [1.4983]]])
print (np.array2string(model.predict([in0Min74666,in1Min74666,in0Min35372,in1Min35372,in0Ave85480],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Bat91379.png')

LMin74666 = minimum_layer([[[[[0.8535, 0.6889], [0.2048, 0.9527]], [[0.5732, 0.0689], [0.0965, 0.2809]]]], [[[[0.5498, 0.4644], [0.6676, 0.0678]], [[0.3099, 0.79], [0.3753, 0.946]]]]], Min74666), 
LRes43380 = reshape_layer(Min74666, [2, 2, 2, 1], Res43380), 
LCro37327 = cropping3D_layer(Res43380, 0, 1, 0, 1, 0, 0, Cro37327), 
LRes63144 = reshape_layer(Cro37327, [1, 1, 2], Res63144), 
LMin35372 = minimum_layer([[[[0.5112]]], [[[0.7834]]]], Min35372), 
LZer10925 = zero_padding1D_layer(Min35372, 1, 0, Zer10925), 
LAve85480 = average_pooling1D_layer([[[1.3676], [1.4983]]], 1, Ave85480), 
LSub1568 = subtract_layer(Zer10925,Ave85480, Sub1568), 
LRes90848 = reshape_layer(Sub1568, [1, 1, 2], Res90848), 
LSub18471 = subtract_layer(Res63144,Res90848, Sub18471), 
LBat91379 = batch_normalization_layer(Sub18471, 1, 0.3613897338723491, [0.2951], [0.203], [0.4073], [0.093], Bat91379), 
exec_layers([LMin74666,LRes43380,LCro37327,LRes63144,LMin35372,LZer10925,LAve85480,LSub1568,LRes90848,LSub18471,LBat91379],["Min74666","Res43380","Cro37327","Res63144","Min35372","Zer10925","Ave85480","Sub1568","Res90848","Sub18471","Bat91379"],Bat91379,"Bat91379")

Actual (Unparsed): [[[[0.8640901, 0.6601288]]]]

Expected (Unparsed): [[[[0.8640901124504083,0.6601288626056]]]]

Actual:   [[[[0.8641, 0.6602]]]]

Expected: [[[[0.8641, 0.6602]]]]