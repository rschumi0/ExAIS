import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Thr1854 = tf.keras.layers.Input(shape=([1, 1, 1, 2]))

Thr1854 = keras.layers.ThresholdedReLU(theta=7.0313155411279125, name = 'Thr1854', input_shape=(1, 1, 1, 2))(in0Thr1854)
Mas73588 = keras.layers.Masking(mask_value=2, name = 'Mas73588', )(Thr1854)
Res99314 = keras.layers.Reshape((1, 1, 2), name = 'Res99314', )(Mas73588)
Zer77806 = keras.layers.ZeroPadding2D(padding=((1, 1), (1, 1)), name = 'Zer77806', )(Res99314)
model = tf.keras.models.Model(inputs=[in0Thr1854], outputs=Zer77806)
in0Thr1854 = tf.constant([[[[[0.4089, 0.9709]]]]])
print (np.array2string(model.predict([in0Thr1854],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Zer77806.png')

LThr1854 = thresholded_relu_layer([[[[[0.4089, 0.9709]]]]], 7.0313155411279125, Thr1854), 
LMas73588 = masking_layer(Thr1854, 2, Mas73588), 
LRes99314 = reshape_layer(Mas73588, [1, 1, 2], Res99314), 
LZer77806 = zero_padding2D_layer(Res99314, 1, 1, 1, 1, Zer77806), 
exec_layers([LThr1854,LMas73588,LRes99314,LZer77806],["Thr1854","Mas73588","Res99314","Zer77806"],Zer77806,"Zer77806")

Actual (Unparsed): [[[[0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000]], [[0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000]], [[0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000]]]]

Expected (Unparsed): [[[[0,0],[0,0],[0,0]],[[0,0],[0,0],[0,0]],[[0,0],[0,0],[0,0]]]]

Actual:   [[[[0, 0], [0, 0], [0, 0]], [[0, 0], [0, 0], [0, 0]], [[0, 0], [0, 0], [0, 0]]]]

Expected: [[[[0, 0], [0, 0], [0, 0]], [[0, 0], [0, 0], [0, 0]], [[0, 0], [0, 0], [0, 0]]]]