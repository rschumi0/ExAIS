import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Sub69982 = tf.keras.layers.Input(shape=([2, 3, 3, 2]))
in1Sub69982 = tf.keras.layers.Input(shape=([2, 3, 3, 2]))

Sub69982 = keras.layers.Subtract(name = 'Sub69982', )([in0Sub69982,in1Sub69982])
Res43171 = keras.layers.Reshape((2, 3, 6), name = 'Res43171', )(Sub69982)
Res82382 = keras.layers.Reshape((2, 18), name = 'Res82382', )(Res43171)
LST2584 = keras.layers.LSTM(3,recurrent_activation='sigmoid', name = 'LST2584', )(Res82382)
Res44675 = keras.layers.Reshape((3, 1), name = 'Res44675', )(LST2584)
Res17176 = keras.layers.Reshape((3, 1, 1), name = 'Res17176', )(Res44675)
Glo47035 = keras.layers.GlobalAveragePooling2D(name = 'Glo47035', )(Res17176)
model = tf.keras.models.Model(inputs=[in0Sub69982,in1Sub69982], outputs=Glo47035)
w = model.get_layer('LST2584').get_weights() 
w[0] = np.array([[4, 2, 4, 6, 6, 7, 9, 3, 7, 9, 1, 3], [4, 9, 3, 3, 10, 3, 6, 6, 9, 1, 1, 10], [2, 10, 4, 6, 6, 3, 1, 5, 10, 4, 5, 4], [3, 8, 5, 5, 5, 3, 5, 3, 6, 10, 7, 1], [8, 4, 9, 10, 4, 3, 8, 2, 1, 3, 9, 9], [7, 8, 5, 6, 2, 1, 5, 5, 1, 10, 9, 7], [5, 10, 6, 6, 10, 2, 7, 2, 8, 6, 9, 10], [3, 9, 8, 8, 3, 10, 5, 4, 2, 10, 2, 7], [5, 5, 3, 6, 6, 10, 1, 8, 4, 10, 5, 7], [2, 6, 1, 5, 5, 4, 4, 1, 2, 4, 4, 3], [10, 1, 3, 8, 5, 6, 7, 8, 9, 3, 5, 6], [7, 9, 10, 8, 5, 4, 9, 4, 5, 9, 5, 6], [8, 2, 6, 7, 2, 5, 10, 1, 7, 3, 2, 3], [3, 3, 10, 2, 7, 9, 2, 8, 7, 1, 4, 3], [1, 10, 8, 2, 7, 3, 6, 10, 9, 10, 3, 3], [5, 4, 10, 2, 4, 9, 4, 5, 2, 5, 3, 7], [8, 7, 9, 5, 6, 6, 9, 9, 1, 4, 6, 10], [4, 6, 4, 5, 3, 6, 10, 1, 1, 5, 2, 10]])
w[1] = np.array([[4, 1, 6, 5, 8, 4, 5, 2, 10, 5, 2, 8], [10, 5, 4, 2, 6, 5, 4, 9, 10, 2, 3, 10], [7, 8, 1, 9, 6, 9, 5, 9, 2, 7, 9, 6]])
w[2] = np.array([3, 1, 8, 8, 10, 5, 2, 10, 2, 2, 9, 10])
model.get_layer('LST2584').set_weights(w) 
in0Sub69982 = tf.constant([[[[[0.0946, 0.5982], [0.7181, 0.7368], [0.4716, 0.7953]], [[0.0938, 0.635], [0.7418, 0.5079], [0.9612, 0.947]], [[0.8754, 0.828], [0.0098, 0.4021], [0.9069, 0.192]]], [[[0.7265, 0.2252], [0.9541, 0.6901], [0.9563, 0.6022]], [[0.6637, 0.9061], [0.0925, 0.8797], [0.6248, 0.1015]], [[0.0729, 0.2691], [0.1039, 0.066], [0.8744, 0.1527]]]]])
in1Sub69982 = tf.constant([[[[[0.9161, 0.3655], [0.8629, 0.8339], [0.3758, 0.037]], [[0.1833, 0.7155], [0.041, 0.0029], [0.3563, 0.4435]], [[0.4062, 0.6091], [0.3835, 0.5113], [0.787, 0.7226]]], [[[0.9604, 0.1839], [0.3854, 0.7735], [0.8428, 0.3717]], [[0.931, 0.9685], [0.021, 0.2596], [0.3503, 0.6617]], [[0.1203, 0.0832], [0.6345, 0.5296], [0.3603, 0.4281]]]]])
print (np.array2string(model.predict([in0Sub69982,in1Sub69982],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Glo47035.png')

LSub69982 = subtract_layer([[[[[0.0946, 0.5982], [0.7181, 0.7368], [0.4716, 0.7953]], [[0.0938, 0.635], [0.7418, 0.5079], [0.9612, 0.947]], [[0.8754, 0.828], [0.0098, 0.4021], [0.9069, 0.192]]], [[[0.7265, 0.2252], [0.9541, 0.6901], [0.9563, 0.6022]], [[0.6637, 0.9061], [0.0925, 0.8797], [0.6248, 0.1015]], [[0.0729, 0.2691], [0.1039, 0.066], [0.8744, 0.1527]]]]], [[[[[0.9161, 0.3655], [0.8629, 0.8339], [0.3758, 0.037]], [[0.1833, 0.7155], [0.041, 0.0029], [0.3563, 0.4435]], [[0.4062, 0.6091], [0.3835, 0.5113], [0.787, 0.7226]]], [[[0.9604, 0.1839], [0.3854, 0.7735], [0.8428, 0.3717]], [[0.931, 0.9685], [0.021, 0.2596], [0.3503, 0.6617]], [[0.1203, 0.0832], [0.6345, 0.5296], [0.3603, 0.4281]]]]], Sub69982), 
LRes43171 = reshape_layer(Sub69982, [2, 3, 6], Res43171), 
LRes82382 = reshape_layer(Res43171, [2, 18], Res82382), 
LLST2584 = lstm_layer(Res82382,[[4, 2, 4, 6, 6, 7, 9, 3, 7, 9, 1, 3], [4, 9, 3, 3, 10, 3, 6, 6, 9, 1, 1, 10], [2, 10, 4, 6, 6, 3, 1, 5, 10, 4, 5, 4], [3, 8, 5, 5, 5, 3, 5, 3, 6, 10, 7, 1], [8, 4, 9, 10, 4, 3, 8, 2, 1, 3, 9, 9], [7, 8, 5, 6, 2, 1, 5, 5, 1, 10, 9, 7], [5, 10, 6, 6, 10, 2, 7, 2, 8, 6, 9, 10], [3, 9, 8, 8, 3, 10, 5, 4, 2, 10, 2, 7], [5, 5, 3, 6, 6, 10, 1, 8, 4, 10, 5, 7], [2, 6, 1, 5, 5, 4, 4, 1, 2, 4, 4, 3], [10, 1, 3, 8, 5, 6, 7, 8, 9, 3, 5, 6], [7, 9, 10, 8, 5, 4, 9, 4, 5, 9, 5, 6], [8, 2, 6, 7, 2, 5, 10, 1, 7, 3, 2, 3], [3, 3, 10, 2, 7, 9, 2, 8, 7, 1, 4, 3], [1, 10, 8, 2, 7, 3, 6, 10, 9, 10, 3, 3], [5, 4, 10, 2, 4, 9, 4, 5, 2, 5, 3, 7], [8, 7, 9, 5, 6, 6, 9, 9, 1, 4, 6, 10], [4, 6, 4, 5, 3, 6, 10, 1, 1, 5, 2, 10]],[[4, 1, 6, 5, 8, 4, 5, 2, 10, 5, 2, 8], [10, 5, 4, 2, 6, 5, 4, 9, 10, 2, 3, 10], [7, 8, 1, 9, 6, 9, 5, 9, 2, 7, 9, 6]],[3, 1, 8, 8, 10, 5, 2, 10, 2, 2, 9, 10], LST2584), 
LRes44675 = reshape_layer(LST2584, [3, 1], Res44675), 
LRes17176 = reshape_layer(Res44675, [3, 1, 1], Res17176), 
LGlo47035 = global_average_pooling2D_layer(Res17176, Glo47035), 
exec_layers([LSub69982,LRes43171,LRes82382,LLST2584,LRes44675,LRes17176,LGlo47035],["Sub69982","Res43171","Res82382","LST2584","Res44675","Res17176","Glo47035"],Glo47035,"Glo47035")

Actual (Unparsed): [[0.9606079]]

Expected (Unparsed): [[0.9606079336496226]]

Actual:   [[0.9607]]

Expected: [[0.9607]]