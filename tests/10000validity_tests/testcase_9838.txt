import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Con45442 = tf.keras.layers.Input(shape=([1, 1, 1]))

Con45442 = keras.layers.Conv2D(2, (1, 1),strides=(1, 1), padding='same', dilation_rate=(1, 1), name = 'Con45442', )(in0Con45442)
Sof14164 = keras.layers.Softmax(axis=1, name = 'Sof14164', )(Con45442)
Cro55018 = keras.layers.Cropping2D(cropping=((0, 0), (0, 0)), name = 'Cro55018', )(Sof14164)
Loc12030 = keras.layers.LocallyConnected2D(4, (1, 1),strides=(1, 1), name = 'Loc12030', )(Cro55018)
model = tf.keras.models.Model(inputs=[in0Con45442], outputs=Loc12030)
w = model.get_layer('Con45442').get_weights() 
w[0] = np.array([[[[0.0783, 0.1032]]]])
w[1] = np.array([0, 0])
model.get_layer('Con45442').set_weights(w) 
w = model.get_layer('Loc12030').get_weights() 
w[0] = np.array([[[0.8469, 0.0687, 0.2717, 0.1686], [0.1376, 0.6406, 0.554, 0.2858]]])
w[1] = np.array([[[0, 0, 0, 0]]])
model.get_layer('Loc12030').set_weights(w) 
in0Con45442 = tf.constant([[[[0.9895]]]])
print (np.array2string(model.predict([in0Con45442],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Loc12030.png')

LCon45442 = conv2D_layer([[[[0.9895]]]], 1, 1,[[[[0.0783, 0.1032]]]],[0, 0], 1, 1, true, 1, 1, Con45442), 
LSof14164 = softmax_layer(Con45442, 1, Sof14164), 
LCro55018 = cropping2D_layer(Sof14164, 0, 0, 0, 0, Cro55018), 
LLoc12030 = locally_connected2D_layer(Cro55018, 1, 1,[[[0.8469, 0.0687, 0.2717, 0.1686], [0.1376, 0.6406, 0.554, 0.2858]]],[[[0, 0, 0, 0]]], 1, 1, Loc12030), 
exec_layers([LCon45442,LSof14164,LCro55018,LLoc12030],["Con45442","Sof14164","Cro55018","Loc12030"],Loc12030,"Loc12030")

Actual (Unparsed): [[[[0.9845000, 0.7093000, 0.8257000, 0.4544000]]]]

Expected (Unparsed): [[[[0.9844999999999999,0.7092999999999999,0.8257000000000001,0.4544]]]]

Actual:   [[[[0.9845, 0.7093, 0.8257, 0.4544]]]]

Expected: [[[[0.9845, 0.7093, 0.8258, 0.4544]]]]