import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Lay17419 = tf.keras.layers.Input(shape=([2, 2, 3]))
in0Up_1629 = tf.keras.layers.Input(shape=([4, 2, 1]))
in0Con62926 = tf.keras.layers.Input(shape=([4, 4, 2]))

Lay17419 = keras.layers.LayerNormalization(axis=2, epsilon=1.5214477760931435, name = 'Lay17419', )(in0Lay17419)
Zer65553 = keras.layers.ZeroPadding2D(padding=((2, 0), (2, 0)), name = 'Zer65553', )(Lay17419)
Up_1629 = keras.layers.UpSampling2D(size=(1, 2), name = 'Up_1629', )(in0Up_1629)
Con62926 = keras.layers.Concatenate(axis=3, name = 'Con62926', )([Up_1629,in0Con62926])
Ave6137 = keras.layers.Average(name = 'Ave6137', )([Zer65553,Con62926])
Loc41962 = keras.layers.LocallyConnected2D(2, (2, 2),strides=(1, 1), name = 'Loc41962', )(Ave6137)
Res24723 = keras.layers.Reshape((3, 3, 2, 1), name = 'Res24723', )(Loc41962)
Up_16354 = keras.layers.UpSampling3D(size=(2, 2, 2), name = 'Up_16354', )(Res24723)
Up_33603 = keras.layers.UpSampling3D(size=(1, 1, 2), name = 'Up_33603', )(Up_16354)
Res1859 = keras.layers.Reshape((6, 6, 8), name = 'Res1859', )(Up_33603)
Sep11656 = keras.layers.SeparableConv2D(4, (2, 6),strides=(6, 6), padding='same', name = 'Sep11656', )(Res1859)
model = tf.keras.models.Model(inputs=[in0Lay17419,in0Up_1629,in0Con62926], outputs=Sep11656)
w = model.get_layer('Loc41962').get_weights() 
w[0] = np.array([[[0.5155, 0.7807], [0.8784, 0.0685], [0.1974, 0.3049], [0.3626, 0.7366], [0.7305, 0.6036], [0.383, 0.3044], [0.4758, 0.6867], [0.3531, 0.8737], [0.7261, 0.1081], [0.5023, 0.6796], [0.3556, 0.4853], [0.6327, 0.4384]], [[0.0126, 0.1895], [0.5605, 0.2723], [0.5273, 0.2787], [0.8163, 0.3344], [0.3287, 0.475], [0.0684, 0.3725], [0.5761, 0.7473], [0.9065, 0.12], [0.3946, 0.8476], [0.0774, 0.5836], [0.0794, 0.9747], [0.0002, 0.0094]], [[0.3782, 0.5872], [0.4035, 0.5509], [0.9985, 0.2751], [0.2273, 0.4396], [0.2981, 0.511], [0.5086, 0.7596], [0.7107, 0.0523], [0.8329, 0.7717], [0.8362, 0.7389], [0.073, 0.0926], [0.2825, 0.4428], [0.5614, 0.9413]], [[0.2818, 0.9653], [0.5444, 0.0906], [0.8282, 0.7476], [0.7541, 0.1256], [0.5798, 0.365], [0.1985, 0.1049], [0.0542, 0.9069], [0.8197, 0.7423], [0.7077, 0.512], [0.4973, 0.7848], [0.335, 0.521], [0.9881, 0.3484]], [[0.8504, 0.9411], [0.7786, 0.5912], [0.9194, 0.1712], [0.5077, 0.2538], [0.0991, 0.2298], [0.563, 0.277], [0.114, 0.0461], [0.6961, 0.9171], [0.6448, 0.731], [0.0139, 0.5269], [0.5425, 0.1245], [0.5048, 0.4388]], [[0.6894, 0.3338], [0.3342, 0.197], [0.8275, 0.4216], [0.5073, 0.7203], [0.5478, 0.8822], [0.1361, 0.8458], [0.2928, 0.0507], [0.472, 0.1031], [0.6626, 0.1315], [0.0691, 0.4989], [0.5342, 0.1047], [0.9285, 0.5555]], [[0.5054, 0.3685], [0.2404, 0.8368], [0.9562, 0.6119], [0.389, 0.7234], [0.5854, 0.0777], [0.214, 0.2501], [0.6219, 0.0685], [0.1334, 0.4111], [0.0403, 0.2804], [0.6227, 0.4503], [0.0143, 0.304], [0.7199, 0.3089]], [[0.5303, 0.4259], [0.679, 0.5804], [0.5566, 0.6811], [0.6299, 0.0339], [0.4085, 0.964], [0.1197, 0.0149], [0.9888, 0.8851], [0.708, 0.7996], [0.3906, 0.978], [0.3685, 0.2915], [0.9485, 0.8075], [0.3072, 0.2819]], [[0.1967, 0.5061], [0.9538, 0.8651], [0.3535, 0.2758], [0.2994, 0.4979], [0.8864, 0.4315], [0.4646, 0.6267], [0.4341, 0.6349], [0.3611, 0.7618], [0.8623, 0.0684], [0.5813, 0.3775], [0.5119, 0.4336], [0.1954, 0.0374]]])
w[1] = np.array([[[0, 0], [0, 0], [0, 0]], [[0, 0], [0, 0], [0, 0]], [[0, 0], [0, 0], [0, 0]]])
model.get_layer('Loc41962').set_weights(w) 
w = model.get_layer('Sep11656').get_weights() 
w[0] = np.array([[[[0.7654], [0.3074], [0.9842], [0.2031], [0.5227], [0.0726], [0.9344], [0.8504]], [[0.651], [0.0025], [0.1879], [0.2393], [0.1816], [0.6093], [0.0233], [0.7822]], [[0.0556], [0.0037], [0.942], [0.5815], [0.9871], [0.677], [0.9663], [0.041]], [[0.7895], [0.5165], [0.9335], [0.0864], [0.6922], [0.8546], [0.5528], [0.117]], [[0.3478], [0.0041], [0.6788], [0.602], [0.6847], [0.9109], [0.7258], [0.0545]], [[0.493], [0.2677], [0.3982], [0.9708], [0.6513], [0.6764], [0.9439], [0.2036]]], [[[0.1968], [0.2195], [0.9521], [0.1559], [0.0231], [0.1086], [0.31], [0.127]], [[0.8481], [0.9133], [0.3115], [0.118], [0.2372], [0.2426], [0.0644], [0.4177]], [[0.8897], [0.6505], [0.2857], [0.3236], [0.1004], [0.9683], [0.2897], [0.4297]], [[0.2928], [0.2267], [0.4787], [0.0118], [0.7896], [0.8261], [0.9251], [0.1759]], [[0.5295], [0.6363], [0.6988], [0.6002], [0.274], [0.2622], [0.4389], [0.8982]], [[0.9532], [0.8013], [0.2926], [0.8569], [0.1942], [0.0341], [0.7548], [0.0626]]]])
w[1] = np.array([[[[0.5339, 0.3853, 0.6751, 0.5779], [0.9773, 0.0879, 0.3704, 0.7575], [0.6208, 0.4093, 0.8324, 0.2069], [0.3299, 0.2033, 0.8032, 0.1122], [0.7001, 0.3805, 0.2769, 0.6357], [0.2589, 0.0761, 0.5936, 0.576], [0.3863, 0.2656, 0.437, 0.3479], [0.2239, 0.5596, 0.1211, 0.2094]]]])
w[2] = np.array([0, 0, 0, 0])
model.get_layer('Sep11656').set_weights(w) 
in0Lay17419 = tf.constant([[[[1.4639, 1.8304, 1.8543], [1.5301, 1.6158, 1.9356]], [[1.8166, 1.6216, 1.9975], [1.9715, 1.6803, 1.4562]]]])
in0Up_1629 = tf.constant([[[[1.3379], [1.8543]], [[1.1091], [1.3705]], [[1.9568], [1.7909]], [[1.2151], [1.3361]]]])
in0Con62926 = tf.constant([[[[0.7802, 0.5501], [0.5263, 0.627], [0.4837, 0.4688], [0.6822, 0.3943]], [[0.1577, 0.5517], [0.1978, 0.3067], [0.3797, 0.5639], [0.3922, 0.4154]], [[0.9583, 0.9466], [0.4056, 0.4823], [0.6709, 0.2955], [0.2637, 0.1016]], [[0.0925, 0.0839], [0.0914, 0.7887], [0.4432, 0.8334], [0.4401, 0.8242]]]])
print (np.array2string(model.predict([in0Lay17419,in0Up_1629,in0Con62926],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Sep11656.png')

LLay17419 = layer_normalization_layer([[[[1.4639, 1.8304, 1.8543], [1.5301, 1.6158, 1.9356]], [[1.8166, 1.6216, 1.9975], [1.9715, 1.6803, 1.4562]]]], 2, 1.5214477760931435, Lay17419), 
LZer65553 = zero_padding2D_layer(Lay17419, 2, 0, 2, 0, Zer65553), 
LUp_1629 = up_sampling2D_layer([[[[1.3379], [1.8543]], [[1.1091], [1.3705]], [[1.9568], [1.7909]], [[1.2151], [1.3361]]]], 1, 2, Up_1629), 
LCon62926 = concatenate_layer([Up_1629,[[[[0.7802, 0.5501], [0.5263, 0.627], [0.4837, 0.4688], [0.6822, 0.3943]], [[0.1577, 0.5517], [0.1978, 0.3067], [0.3797, 0.5639], [0.3922, 0.4154]], [[0.9583, 0.9466], [0.4056, 0.4823], [0.6709, 0.2955], [0.2637, 0.1016]], [[0.0925, 0.0839], [0.0914, 0.7887], [0.4432, 0.8334], [0.4401, 0.8242]]]]], 3, Con62926), 
LAve6137 = average_layer([Zer65553,Con62926], Ave6137), 
LLoc41962 = locally_connected2D_layer(Ave6137, 2, 2,[[[0.5155, 0.7807], [0.8784, 0.0685], [0.1974, 0.3049], [0.3626, 0.7366], [0.7305, 0.6036], [0.383, 0.3044], [0.4758, 0.6867], [0.3531, 0.8737], [0.7261, 0.1081], [0.5023, 0.6796], [0.3556, 0.4853], [0.6327, 0.4384]], [[0.0126, 0.1895], [0.5605, 0.2723], [0.5273, 0.2787], [0.8163, 0.3344], [0.3287, 0.475], [0.0684, 0.3725], [0.5761, 0.7473], [0.9065, 0.12], [0.3946, 0.8476], [0.0774, 0.5836], [0.0794, 0.9747], [0.0002, 0.0094]], [[0.3782, 0.5872], [0.4035, 0.5509], [0.9985, 0.2751], [0.2273, 0.4396], [0.2981, 0.511], [0.5086, 0.7596], [0.7107, 0.0523], [0.8329, 0.7717], [0.8362, 0.7389], [0.073, 0.0926], [0.2825, 0.4428], [0.5614, 0.9413]], [[0.2818, 0.9653], [0.5444, 0.0906], [0.8282, 0.7476], [0.7541, 0.1256], [0.5798, 0.365], [0.1985, 0.1049], [0.0542, 0.9069], [0.8197, 0.7423], [0.7077, 0.512], [0.4973, 0.7848], [0.335, 0.521], [0.9881, 0.3484]], [[0.8504, 0.9411], [0.7786, 0.5912], [0.9194, 0.1712], [0.5077, 0.2538], [0.0991, 0.2298], [0.563, 0.277], [0.114, 0.0461], [0.6961, 0.9171], [0.6448, 0.731], [0.0139, 0.5269], [0.5425, 0.1245], [0.5048, 0.4388]], [[0.6894, 0.3338], [0.3342, 0.197], [0.8275, 0.4216], [0.5073, 0.7203], [0.5478, 0.8822], [0.1361, 0.8458], [0.2928, 0.0507], [0.472, 0.1031], [0.6626, 0.1315], [0.0691, 0.4989], [0.5342, 0.1047], [0.9285, 0.5555]], [[0.5054, 0.3685], [0.2404, 0.8368], [0.9562, 0.6119], [0.389, 0.7234], [0.5854, 0.0777], [0.214, 0.2501], [0.6219, 0.0685], [0.1334, 0.4111], [0.0403, 0.2804], [0.6227, 0.4503], [0.0143, 0.304], [0.7199, 0.3089]], [[0.5303, 0.4259], [0.679, 0.5804], [0.5566, 0.6811], [0.6299, 0.0339], [0.4085, 0.964], [0.1197, 0.0149], [0.9888, 0.8851], [0.708, 0.7996], [0.3906, 0.978], [0.3685, 0.2915], [0.9485, 0.8075], [0.3072, 0.2819]], [[0.1967, 0.5061], [0.9538, 0.8651], [0.3535, 0.2758], [0.2994, 0.4979], [0.8864, 0.4315], [0.4646, 0.6267], [0.4341, 0.6349], [0.3611, 0.7618], [0.8623, 0.0684], [0.5813, 0.3775], [0.5119, 0.4336], [0.1954, 0.0374]]],[[[0, 0], [0, 0], [0, 0]], [[0, 0], [0, 0], [0, 0]], [[0, 0], [0, 0], [0, 0]]], 1, 1, Loc41962), 
LRes24723 = reshape_layer(Loc41962, [3, 3, 2, 1], Res24723), 
LUp_16354 = up_sampling3D_layer(Res24723, 2, 2, 2, Up_16354), 
LUp_33603 = up_sampling3D_layer(Up_16354, 1, 1, 2, Up_33603), 
LRes1859 = reshape_layer(Up_33603, [6, 6, 8], Res1859), 
LSep11656 = separable_conv2D_layer(Res1859, 2, 6,[[[[[0.7654], [0.3074], [0.9842], [0.2031], [0.5227], [0.0726], [0.9344], [0.8504]], [[0.651], [0.0025], [0.1879], [0.2393], [0.1816], [0.6093], [0.0233], [0.7822]], [[0.0556], [0.0037], [0.942], [0.5815], [0.9871], [0.677], [0.9663], [0.041]], [[0.7895], [0.5165], [0.9335], [0.0864], [0.6922], [0.8546], [0.5528], [0.117]], [[0.3478], [0.0041], [0.6788], [0.602], [0.6847], [0.9109], [0.7258], [0.0545]], [[0.493], [0.2677], [0.3982], [0.9708], [0.6513], [0.6764], [0.9439], [0.2036]]], [[[0.1968], [0.2195], [0.9521], [0.1559], [0.0231], [0.1086], [0.31], [0.127]], [[0.8481], [0.9133], [0.3115], [0.118], [0.2372], [0.2426], [0.0644], [0.4177]], [[0.8897], [0.6505], [0.2857], [0.3236], [0.1004], [0.9683], [0.2897], [0.4297]], [[0.2928], [0.2267], [0.4787], [0.0118], [0.7896], [0.8261], [0.9251], [0.1759]], [[0.5295], [0.6363], [0.6988], [0.6002], [0.274], [0.2622], [0.4389], [0.8982]], [[0.9532], [0.8013], [0.2926], [0.8569], [0.1942], [0.0341], [0.7548], [0.0626]]]],[[[[0.5339, 0.3853, 0.6751, 0.5779], [0.9773, 0.0879, 0.3704, 0.7575], [0.6208, 0.4093, 0.8324, 0.2069], [0.3299, 0.2033, 0.8032, 0.1122], [0.7001, 0.3805, 0.2769, 0.6357], [0.2589, 0.0761, 0.5936, 0.576], [0.3863, 0.2656, 0.437, 0.3479], [0.2239, 0.5596, 0.1211, 0.2094]]]]],[0, 0, 0, 0], 6, 6, true, Sep11656), 
exec_layers([LLay17419,LZer65553,LUp_1629,LCon62926,LAve6137,LLoc41962,LRes24723,LUp_16354,LUp_33603,LRes1859,LSep11656],["Lay17419","Zer65553","Up_1629","Con62926","Ave6137","Loc41962","Res24723","Up_16354","Up_33603","Res1859","Sep11656"],Sep11656,"Sep11656")

Actual (Unparsed): [[[[47.8543064, 28.5330645, 51.3365559, 40.9979128]]]]

Expected (Unparsed): [[[[47.854306295730765,28.533064446535324,51.33655572614962,40.99791267209746]]]]

Actual:   [[[[47.8544, 28.5331, 51.3366, 40.998]]]]

Expected: [[[[47.8544, 28.5331, 51.3366, 40.998]]]]