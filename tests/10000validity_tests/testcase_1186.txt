import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Bat55891 = tf.keras.layers.Input(shape=([4, 3]))
in0Con87378 = tf.keras.layers.Input(shape=([4, 3, 1, 1]))
in0Add88429 = tf.keras.layers.Input(shape=([2, 2, 1, 2]))
in1Add88429 = tf.keras.layers.Input(shape=([2, 2, 1, 2]))
in0Con47255 = tf.keras.layers.Input(shape=([4, 1]))
in0Sub19828 = tf.keras.layers.Input(shape=([3, 3]))
in1Sub19828 = tf.keras.layers.Input(shape=([3, 3]))
in0Con11242 = tf.keras.layers.Input(shape=([4, 3, 1, 2]))
in0Sub76007 = tf.keras.layers.Input(shape=([2, 2]))
in1Sub76007 = tf.keras.layers.Input(shape=([2, 2]))

Bat55891 = keras.layers.BatchNormalization(axis=2, epsilon=0.7638907420880802,  name = 'Bat55891', )(in0Bat55891)
Res27146 = keras.layers.Reshape((4, 3, 1), name = 'Res27146', )(Bat55891)
Res44429 = keras.layers.Reshape((4, 3, 1, 1), name = 'Res44429', )(Res27146)
Con87378 = keras.layers.Concatenate(axis=4, name = 'Con87378', )([Res44429,in0Con87378])
Add88429 = keras.layers.Add(name = 'Add88429', )([in0Add88429,in1Add88429])
Zer79798 = keras.layers.ZeroPadding3D(padding=((2, 0), (1, 0), (0, 0)), name = 'Zer79798', )(Add88429)
Ave5577 = keras.layers.Average(name = 'Ave5577', )([Con87378,Zer79798])
Res60381 = keras.layers.Reshape((4, 3, 2), name = 'Res60381', )(Ave5577)
Res58319 = keras.layers.Reshape((4, 6), name = 'Res58319', )(Res60381)
Sep4832 = keras.layers.SeparableConv1D(2, (1),strides=(1), padding='same', name = 'Sep4832', )(Res58319)
Con47255 = keras.layers.Concatenate(axis=2, name = 'Con47255', )([Sep4832,in0Con47255])
Sub19828 = keras.layers.Subtract(name = 'Sub19828', )([in0Sub19828,in1Sub19828])
Zer62490 = keras.layers.ZeroPadding1D(padding=((1, 0)), name = 'Zer62490', )(Sub19828)
Add87644 = keras.layers.Add(name = 'Add87644', )([Con47255,Zer62490])
Res66940 = keras.layers.Reshape((4, 3, 1), name = 'Res66940', )(Add87644)
Res14526 = keras.layers.Reshape((4, 3, 1, 1), name = 'Res14526', )(Res66940)
Con11242 = keras.layers.Concatenate(axis=4, name = 'Con11242', )([Res14526,in0Con11242])
Sub76007 = keras.layers.Subtract(name = 'Sub76007', )([in0Sub76007,in1Sub76007])
Res10881 = keras.layers.Reshape((2, 2, 1), name = 'Res10881', )(Sub76007)
Res36526 = keras.layers.Reshape((2, 2, 1, 1), name = 'Res36526', )(Res10881)
Con39736 = keras.layers.Conv3DTranspose(3, (2, 1, 1),strides=(1, 1, 1), padding='same', name = 'Con39736', )(Res36526)
Zer15275 = keras.layers.ZeroPadding3D(padding=((2, 0), (1, 0), (0, 0)), name = 'Zer15275', )(Con39736)
Ave25588 = keras.layers.Average(name = 'Ave25588', )([Con11242,Zer15275])
model = tf.keras.models.Model(inputs=[in0Bat55891,in0Con87378,in0Add88429,in1Add88429,in0Con47255,in0Sub19828,in1Sub19828,in0Con11242,in0Sub76007,in1Sub76007], outputs=Ave25588)
w = model.get_layer('Bat55891').get_weights() 
w[0] = np.array([0.0727, 0.5442, 0.8629])
w[1] = np.array([0.3441, 0.3722, 0.9617])
w[2] = np.array([0.0908, 0.0266, 0.387])
w[3] = np.array([0.9736, 0.4924, 0.444])
model.get_layer('Bat55891').set_weights(w) 
w = model.get_layer('Sep4832').get_weights() 
w[0] = np.array([[[0.9467], [0.0428], [0.0974], [0.8722], [0.3003], [0.3456]]])
w[1] = np.array([[[0.4092, 0.7333], [0.499, 0.9759], [0.6096, 0.7364], [0.7672, 0.8409], [0.0539, 0.519], [0.8298, 0.9729]]])
w[2] = np.array([0, 0])
model.get_layer('Sep4832').set_weights(w) 
w = model.get_layer('Con39736').get_weights() 
w[0] = np.array([[[[[0.5793], [0.3627], [0.8638]]]], [[[[0.4503], [0.7622], [0.7596]]]]])
w[1] = np.array([0, 0, 0])
model.get_layer('Con39736').set_weights(w) 
in0Bat55891 = tf.constant([[[1.2582, 1.2002, 1.5573], [1.1798, 1.8935, 1.4822], [1.3234, 1.8478, 1.0621], [1.4488, 1.7215, 1.7787]]])
in0Con87378 = tf.constant([[[[[0.2864]], [[0.9627]], [[0.8401]]], [[[0.0784]], [[0.7347]], [[0.3752]]], [[[0.8438]], [[0.9099]], [[0.842]]], [[[0.4772]], [[0.5656]], [[0.4959]]]]])
in0Add88429 = tf.constant([[[[[0.7333, 0.1508]], [[0.5185, 0.5541]]], [[[0.6822, 0.0742]], [[0.4174, 0.9197]]]]])
in1Add88429 = tf.constant([[[[[0.7956, 0.7999]], [[0.5973, 0.041]]], [[[0.3438, 0.2983]], [[0.7876, 0.9972]]]]])
in0Con47255 = tf.constant([[[0.1433], [0.2835], [0.3455], [0.2514]]])
in0Sub19828 = tf.constant([[[0.009, 0.0228, 0.6524], [0.5431, 0.5994, 0.9195], [0.3552, 0.2009, 0.6699]]])
in1Sub19828 = tf.constant([[[0.8391, 0.918, 0.6905], [0.7237, 0.6058, 0.3946], [0.5503, 0.2723, 0.1737]]])
in0Con11242 = tf.constant([[[[[0.4838, 0.1712]], [[0.7369, 0.1136]], [[0.6302, 0.2507]]], [[[0.4229, 0.5926]], [[0.6371, 0.3681]], [[0.6275, 0.1174]]], [[[0.865, 0.4943]], [[0.3571, 0.9031]], [[0.8473, 0.9453]]], [[[0.6512, 0.0077]], [[0.749, 0.8127]], [[0.0569, 0.5531]]]]])
in0Sub76007 = tf.constant([[[0.9346, 0.5615], [0.7961, 0.8864]]])
in1Sub76007 = tf.constant([[[0.5347, 0.2435], [0.5662, 0.8428]]])
print (np.array2string(model.predict([in0Bat55891,in0Con87378,in0Add88429,in1Add88429,in0Con47255,in0Sub19828,in1Sub19828,in0Con11242,in0Sub76007,in1Sub76007],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Ave25588.png')

LBat55891 = batch_normalization_layer([[[1.2582, 1.2002, 1.5573], [1.1798, 1.8935, 1.4822], [1.3234, 1.8478, 1.0621], [1.4488, 1.7215, 1.7787]]], 2, 0.7638907420880802, [0.0727, 0.5442, 0.8629], [0.3441, 0.3722, 0.9617], [0.0908, 0.0266, 0.387], [0.9736, 0.4924, 0.444], Bat55891), 
LRes27146 = reshape_layer(Bat55891, [4, 3, 1], Res27146), 
LRes44429 = reshape_layer(Res27146, [4, 3, 1, 1], Res44429), 
LCon87378 = concatenate_layer([Res44429,[[[[[0.2864]], [[0.9627]], [[0.8401]]], [[[0.0784]], [[0.7347]], [[0.3752]]], [[[0.8438]], [[0.9099]], [[0.842]]], [[[0.4772]], [[0.5656]], [[0.4959]]]]]], 4, Con87378), 
LAdd88429 = add_layer([[[[[[0.7333, 0.1508]], [[0.5185, 0.5541]]], [[[0.6822, 0.0742]], [[0.4174, 0.9197]]]]], [[[[[0.7956, 0.7999]], [[0.5973, 0.041]]], [[[0.3438, 0.2983]], [[0.7876, 0.9972]]]]]], Add88429), 
LZer79798 = zero_padding3D_layer(Add88429, 2, 0, 1, 0, 0, 0, Zer79798), 
LAve5577 = average_layer([Con87378,Zer79798], Ave5577), 
LRes60381 = reshape_layer(Ave5577, [4, 3, 2], Res60381), 
LRes58319 = reshape_layer(Res60381, [4, 6], Res58319), 
LSep4832 = separable_conv1D_layer(Res58319, 1,[[[[0.9467], [0.0428], [0.0974], [0.8722], [0.3003], [0.3456]]],[[[0.4092, 0.7333], [0.499, 0.9759], [0.6096, 0.7364], [0.7672, 0.8409], [0.0539, 0.519], [0.8298, 0.9729]]]],[0, 0], 1, true, Sep4832), 
LCon47255 = concatenate_layer([Sep4832,[[[0.1433], [0.2835], [0.3455], [0.2514]]]], 2, Con47255), 
LSub19828 = subtract_layer([[[0.009, 0.0228, 0.6524], [0.5431, 0.5994, 0.9195], [0.3552, 0.2009, 0.6699]]], [[[0.8391, 0.918, 0.6905], [0.7237, 0.6058, 0.3946], [0.5503, 0.2723, 0.1737]]], Sub19828), 
LZer62490 = zero_padding1D_layer(Sub19828, 1, 0, Zer62490), 
LAdd87644 = add_layer([Con47255,Zer62490], Add87644), 
LRes66940 = reshape_layer(Add87644, [4, 3, 1], Res66940), 
LRes14526 = reshape_layer(Res66940, [4, 3, 1, 1], Res14526), 
LCon11242 = concatenate_layer([Res14526,[[[[[0.4838, 0.1712]], [[0.7369, 0.1136]], [[0.6302, 0.2507]]], [[[0.4229, 0.5926]], [[0.6371, 0.3681]], [[0.6275, 0.1174]]], [[[0.865, 0.4943]], [[0.3571, 0.9031]], [[0.8473, 0.9453]]], [[[0.6512, 0.0077]], [[0.749, 0.8127]], [[0.0569, 0.5531]]]]]], 4, Con11242), 
LSub76007 = subtract_layer([[[0.9346, 0.5615], [0.7961, 0.8864]]], [[[0.5347, 0.2435], [0.5662, 0.8428]]], Sub76007), 
LRes10881 = reshape_layer(Sub76007, [2, 2, 1], Res10881), 
LRes36526 = reshape_layer(Res10881, [2, 2, 1, 1], Res36526), 
LCon39736 = conv3D_transpose_layer(Res36526, 2, 1, 1,[[[[[0.5793], [0.3627], [0.8638]]]], [[[[0.4503], [0.7622], [0.7596]]]]],[0, 0, 0], 1, 1, 1, true, Con39736), 
LZer15275 = zero_padding3D_layer(Con39736, 2, 0, 1, 0, 0, 0, Zer15275), 
LAve25588 = average_layer([Con11242,Zer15275], Ave25588), 
exec_layers([LBat55891,LRes27146,LRes44429,LCon87378,LAdd88429,LZer79798,LAve5577,LRes60381,LRes58319,LSep4832,LCon47255,LSub19828,LZer62490,LAdd87644,LRes66940,LRes14526,LCon11242,LSub76007,LRes10881,LRes36526,LCon39736,LZer15275,LAve25588],["Bat55891","Res27146","Res44429","Con87378","Add88429","Zer79798","Ave5577","Res60381","Res58319","Sep4832","Con47255","Sub19828","Zer62490","Add87644","Res66940","Res14526","Con11242","Sub76007","Res10881","Res36526","Con39736","Zer15275","Ave25588"],Ave25588,"Ave25588")

Actual (Unparsed): [[[[[0.2839616, 0.2419000, 0.0856000]], [[0.4111867, 0.3684500, 0.0568000]], [[0.0716500, 0.3151000, 0.1253500]]], [[[-0.1993322, 0.2114500, 0.2963000]], [[-0.1164817, 0.3185500, 0.1840500]], [[0.1227000, 0.3137500, 0.0587000]]], [[[0.4202994, 0.4325000, 0.2471500]], [[0.8064626, 0.2510719, 0.6242668]], [[0.5273087, 0.4813193, 0.6099942]]], [[[0.3216537, 0.3256000, 0.0038500]], [[0.7402805, 0.5685943, 0.6575258]], [[0.4580264, 0.1575467, 0.4161572]]]]]

Expected (Unparsed): [[[[[0.28396161743162296,0.2419,0.0856]],[[0.41118665852235575,0.36845,0.0568]],[[0.07165,0.3151,0.12535]]],[[[-0.19933221292476136,0.21145,0.2963]],[[-0.11648175395386329,0.31855,0.18405]],[[0.12269999999999998,0.31375,0.0587]]],[[[0.42029935581207284,0.4325,0.24715]],[[0.8064626332422623,0.251071865,0.6242668100000001]],[[0.5273087,0.4813193,0.6099942]]],[[[0.3216536682993666,0.3256,0.00385]],[[0.7402804564934838,0.568594255,0.65752583]],[[0.45802644000000003,0.15754666,0.41615724]]]]]

Actual:   [[[[[0.284, 0.2419, 0.0856]], [[0.4112, 0.3685, 0.0568]], [[0.0717, 0.3151, 0.1254]]], [[[-0.1993, 0.2115, 0.2963]], [[-0.1164, 0.3186, 0.1841]], [[0.1227, 0.3138, 0.0587]]], [[[0.4203, 0.4325, 0.2472]], [[0.8065, 0.2511, 0.6243]], [[0.5274, 0.4814, 0.61]]], [[[0.3217, 0.3256, 0.0039]], [[0.7403, 0.5686, 0.6576]], [[0.4581, 0.1576, 0.4162]]]]]

Expected: [[[[[0.284, 0.2419, 0.0856]], [[0.4112, 0.3685, 0.0568]], [[0.0717, 0.3151, 0.1254]]], [[[-0.1993, 0.2115, 0.2963]], [[-0.1164, 0.3186, 0.1841]], [[0.1227, 0.3138, 0.0587]]], [[[0.4203, 0.4325, 0.2472]], [[0.8065, 0.2511, 0.6243]], [[0.5274, 0.4814, 0.61]]], [[[0.3217, 0.3256, 0.0039]], [[0.7403, 0.5686, 0.6576]], [[0.4581, 0.1576, 0.4162]]]]]