import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Ave97379 = tf.keras.layers.Input(shape=([1, 2, 1, 1]))
in1Ave97379 = tf.keras.layers.Input(shape=([1, 2, 1, 1]))

Ave97379 = keras.layers.Average(name = 'Ave97379', )([in0Ave97379,in1Ave97379])
Res64246 = keras.layers.Reshape((1, 2, 1), name = 'Res64246', )(Ave97379)
Ave10452 = keras.layers.AveragePooling2D(pool_size=(1, 1), strides=(1, 1), padding='valid', name = 'Ave10452', )(Res64246)
Sof67331 = keras.layers.Softmax(axis=1, name = 'Sof67331', )(Ave10452)
Res63630 = keras.layers.Reshape((1, 2), name = 'Res63630', )(Sof67331)
Zer22220 = keras.layers.ZeroPadding1D(padding=((1, 1)), name = 'Zer22220', )(Res63630)
model = tf.keras.models.Model(inputs=[in0Ave97379,in1Ave97379], outputs=Zer22220)
in0Ave97379 = tf.constant([[[[[0.65]], [[0.9856]]]]])
in1Ave97379 = tf.constant([[[[[0.3541]], [[0.5469]]]]])
print (np.array2string(model.predict([in0Ave97379,in1Ave97379],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Zer22220.png')

LAve97379 = average_layer([[[[[[0.65]], [[0.9856]]]]], [[[[[0.3541]], [[0.5469]]]]]], Ave97379), 
LRes64246 = reshape_layer(Ave97379, [1, 2, 1], Res64246), 
LAve10452 = average_pooling2D_layer(Res64246, 1, 1, 1, 1, false, Ave10452), 
LSof67331 = softmax_layer(Ave10452, 1, Sof67331), 
LRes63630 = reshape_layer(Sof67331, [1, 2], Res63630), 
LZer22220 = zero_padding1D_layer(Res63630, 1, 1, Zer22220), 
exec_layers([LAve97379,LRes64246,LAve10452,LSof67331,LRes63630,LZer22220],["Ave97379","Res64246","Ave10452","Sof67331","Res63630","Zer22220"],Zer22220,"Zer22220")

Actual (Unparsed): [[[0.0000000, 0.0000000], [1.0000000, 1.0000000], [0.0000000, 0.0000000]]]

Expected (Unparsed): [[[0,0],[1.0,1.0],[0,0]]]

Actual:   [[[0, 0], [1, 1], [0, 0]]]

Expected: [[[0, 0], [1, 1], [0, 0]]]