import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Sub73090 = tf.keras.layers.Input(shape=([3, 3, 2, 2]))
in1Sub73090 = tf.keras.layers.Input(shape=([3, 3, 2, 2]))

Sub73090 = keras.layers.Subtract(name = 'Sub73090', )([in0Sub73090,in1Sub73090])
Res24935 = keras.layers.Reshape((3, 3, 4), name = 'Res24935', )(Sub73090)
Up_38122 = keras.layers.UpSampling2D(size=(1, 1), name = 'Up_38122', )(Res24935)
Res81412 = keras.layers.Reshape((3, 12), name = 'Res81412', )(Up_38122)
Loc41468 = keras.layers.LocallyConnected1D(4, (2),strides=(1), name = 'Loc41468', )(Res81412)
Sof45560 = keras.layers.Softmax(axis=1, name = 'Sof45560', )(Loc41468)
model = tf.keras.models.Model(inputs=[in0Sub73090,in1Sub73090], outputs=Sof45560)
w = model.get_layer('Loc41468').get_weights() 
w[0] = np.array([[[0.5563, 0.4113, 0.3604, 0.3783], [0.0951, 0.7293, 0.8294, 0.2506], [0.9104, 0.6109, 0.6313, 0.8121], [0.5828, 0.672, 0.3473, 0.9818], [0.2963, 0.8934, 0.5868, 0.9095], [0.1171, 0.5563, 0.1435, 0.9243], [0.5825, 0.0201, 0.2258, 0.5759], [0.3075, 0.1569, 0.1081, 0.1485], [0.7268, 0.3337, 0.3552, 0.1239], [0.539, 0.1962, 0.1059, 0.943], [0.896, 0.1484, 0.7746, 0.0742], [0.8906, 0.3435, 0.9254, 0.8356], [0.4337, 0.2108, 0.0057, 0.6372], [0.1856, 0.0208, 0.0878, 0.3105], [0.8067, 0.7661, 0.7598, 0.9738], [0.4286, 0.6756, 0.8324, 0.4484], [0.9087, 0.0149, 0.5826, 0.581], [0.1326, 0.4309, 0.8441, 0.9582], [0.3493, 0.9958, 0.3692, 0.402], [0.2903, 0.272, 0.541, 0.3271], [0.6079, 0.1797, 0.6901, 0.508], [0.9929, 0.1807, 0.9868, 0.0576], [0.1821, 0.309, 0.1194, 0.4476], [0.9517, 0.8775, 0.7455, 0.2178]], [[0.1072, 0.2692, 0.0077, 0.6145], [0.4246, 0.0805, 0.2442, 0.7746], [0.4791, 0.0266, 0.3892, 0.2284], [0.3029, 0.4429, 0.4613, 0.4348], [0.8558, 0.9175, 0.9665, 0.7785], [0.3618, 0.5784, 0.0048, 0.965], [0.6698, 0.8241, 0.3629, 0.0259], [0.928, 0.8338, 0.8993, 0.2144], [0.0276, 0.023, 0.0846, 0.9144], [0.4688, 0.7213, 0.6461, 0.3118], [0.5268, 0.7398, 0.8837, 0.9851], [0.8573, 0.168, 0.3746, 0.7603], [0.9695, 0.6967, 0.4636, 0.1443], [0.3158, 0.9946, 0.1493, 0.403], [0.1004, 0.1874, 0.7178, 0.8817], [0.293, 0.2825, 0.7513, 0.4799], [0.7484, 0.4639, 0.9447, 0.2857], [0.7782, 0.5403, 0.4985, 0.252], [0.0018, 0.4723, 0.7278, 0.4553], [0.8065, 0.8285, 0.9221, 0.9124], [0.2945, 0.2201, 0.4252, 0.1549], [0.1583, 0.2547, 0.3655, 0.7586], [0.5333, 0.3123, 0.4571, 0.8093], [0.5088, 0.4963, 0.8223, 0.8484]]])
w[1] = np.array([[0, 0, 0, 0], [0, 0, 0, 0]])
model.get_layer('Loc41468').set_weights(w) 
in0Sub73090 = tf.constant([[[[[0.6925, 0.1393], [0.8683, 0.0412]], [[0.4042, 0.3778], [0.0386, 0.8241]], [[0.9805, 0.2014], [0.1536, 0.0488]]], [[[0.466, 0.8576], [0.198, 0.4591]], [[0.9309, 0.4353], [0.5964, 0.4938]], [[0.0438, 0.7122], [0.1133, 0.4932]]], [[[0.1987, 0.215], [0.0653, 0.5244]], [[0.6758, 0.2641], [0.6308, 0.3008]], [[0.7496, 0.3137], [0.2473, 0.6002]]]]])
in1Sub73090 = tf.constant([[[[[0.8805, 0.4695], [0.5714, 0.0498]], [[0.1245, 0.6689], [0.2446, 0.1374]], [[0.6815, 0.6431], [0.7525, 0.8345]]], [[[0.0613, 0.443], [0.9993, 0.2709]], [[0.696, 0.0113], [0.8241, 0.4888]], [[0.9494, 0.0066], [0.5814, 0.4221]]], [[[0.3845, 0.8463], [0.0798, 0.8951]], [[0.8364, 0.7249], [0.6251, 0.6167]], [[0.3088, 0.1856], [0.6529, 0.8577]]]]])
print (np.array2string(model.predict([in0Sub73090,in1Sub73090],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Sof45560.png')

LSub73090 = subtract_layer([[[[[0.6925, 0.1393], [0.8683, 0.0412]], [[0.4042, 0.3778], [0.0386, 0.8241]], [[0.9805, 0.2014], [0.1536, 0.0488]]], [[[0.466, 0.8576], [0.198, 0.4591]], [[0.9309, 0.4353], [0.5964, 0.4938]], [[0.0438, 0.7122], [0.1133, 0.4932]]], [[[0.1987, 0.215], [0.0653, 0.5244]], [[0.6758, 0.2641], [0.6308, 0.3008]], [[0.7496, 0.3137], [0.2473, 0.6002]]]]], [[[[[0.8805, 0.4695], [0.5714, 0.0498]], [[0.1245, 0.6689], [0.2446, 0.1374]], [[0.6815, 0.6431], [0.7525, 0.8345]]], [[[0.0613, 0.443], [0.9993, 0.2709]], [[0.696, 0.0113], [0.8241, 0.4888]], [[0.9494, 0.0066], [0.5814, 0.4221]]], [[[0.3845, 0.8463], [0.0798, 0.8951]], [[0.8364, 0.7249], [0.6251, 0.6167]], [[0.3088, 0.1856], [0.6529, 0.8577]]]]], Sub73090), 
LRes24935 = reshape_layer(Sub73090, [3, 3, 4], Res24935), 
LUp_38122 = up_sampling2D_layer(Res24935, 1, 1, Up_38122), 
LRes81412 = reshape_layer(Up_38122, [3, 12], Res81412), 
LLoc41468 = locally_connected1D_layer(Res81412, 2,[[[0.5563, 0.4113, 0.3604, 0.3783], [0.0951, 0.7293, 0.8294, 0.2506], [0.9104, 0.6109, 0.6313, 0.8121], [0.5828, 0.672, 0.3473, 0.9818], [0.2963, 0.8934, 0.5868, 0.9095], [0.1171, 0.5563, 0.1435, 0.9243], [0.5825, 0.0201, 0.2258, 0.5759], [0.3075, 0.1569, 0.1081, 0.1485], [0.7268, 0.3337, 0.3552, 0.1239], [0.539, 0.1962, 0.1059, 0.943], [0.896, 0.1484, 0.7746, 0.0742], [0.8906, 0.3435, 0.9254, 0.8356], [0.4337, 0.2108, 0.0057, 0.6372], [0.1856, 0.0208, 0.0878, 0.3105], [0.8067, 0.7661, 0.7598, 0.9738], [0.4286, 0.6756, 0.8324, 0.4484], [0.9087, 0.0149, 0.5826, 0.581], [0.1326, 0.4309, 0.8441, 0.9582], [0.3493, 0.9958, 0.3692, 0.402], [0.2903, 0.272, 0.541, 0.3271], [0.6079, 0.1797, 0.6901, 0.508], [0.9929, 0.1807, 0.9868, 0.0576], [0.1821, 0.309, 0.1194, 0.4476], [0.9517, 0.8775, 0.7455, 0.2178]], [[0.1072, 0.2692, 0.0077, 0.6145], [0.4246, 0.0805, 0.2442, 0.7746], [0.4791, 0.0266, 0.3892, 0.2284], [0.3029, 0.4429, 0.4613, 0.4348], [0.8558, 0.9175, 0.9665, 0.7785], [0.3618, 0.5784, 0.0048, 0.965], [0.6698, 0.8241, 0.3629, 0.0259], [0.928, 0.8338, 0.8993, 0.2144], [0.0276, 0.023, 0.0846, 0.9144], [0.4688, 0.7213, 0.6461, 0.3118], [0.5268, 0.7398, 0.8837, 0.9851], [0.8573, 0.168, 0.3746, 0.7603], [0.9695, 0.6967, 0.4636, 0.1443], [0.3158, 0.9946, 0.1493, 0.403], [0.1004, 0.1874, 0.7178, 0.8817], [0.293, 0.2825, 0.7513, 0.4799], [0.7484, 0.4639, 0.9447, 0.2857], [0.7782, 0.5403, 0.4985, 0.252], [0.0018, 0.4723, 0.7278, 0.4553], [0.8065, 0.8285, 0.9221, 0.9124], [0.2945, 0.2201, 0.4252, 0.1549], [0.1583, 0.2547, 0.3655, 0.7586], [0.5333, 0.3123, 0.4571, 0.8093], [0.5088, 0.4963, 0.8223, 0.8484]]],[[0, 0, 0, 0], [0, 0, 0, 0]], 1, Loc41468), 
LSof45560 = softmax_layer(Loc41468, 1, Sof45560), 
exec_layers([LSub73090,LRes24935,LUp_38122,LRes81412,LLoc41468,LSof45560],["Sub73090","Res24935","Up_38122","Res81412","Loc41468","Sof45560"],Sof45560,"Sof45560")

Actual (Unparsed): [[[0.5557817, 0.5226307, 0.5518086, 0.4396004], [0.4442183, 0.4773693, 0.4481914, 0.5603996]]]

Expected (Unparsed): [[[0.5557817609855987,0.522630747172397,0.5518086287631884,0.439600461154286],[0.44421823901440116,0.4773692528276031,0.4481913712368115,0.5603995388457139]]]

Actual:   [[[0.5558, 0.5227, 0.5519, 0.4397], [0.4443, 0.4774, 0.4482, 0.5604]]]

Expected: [[[0.5558, 0.5227, 0.5519, 0.4397], [0.4443, 0.4774, 0.4482, 0.5604]]]