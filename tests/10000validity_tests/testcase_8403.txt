import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Lay57839 = tf.keras.layers.Input(shape=([2, 4, 2]))
in0Con58701 = tf.keras.layers.Input(shape=([1, 1]))
in0Thr20326 = tf.keras.layers.Input(shape=([1, 2]))
in0Min24961 = tf.keras.layers.Input(shape=([1, 2, 1]))
in1Min24961 = tf.keras.layers.Input(shape=([1, 2, 1]))

Lay57839 = keras.layers.LayerNormalization(axis=3, epsilon=1.7803063954246725, name = 'Lay57839', )(in0Lay57839)
Res35924 = keras.layers.Reshape((2, 8), name = 'Res35924', )(Lay57839)
GRU43775 = keras.layers.GRU(1,reset_after=True, recurrent_activation='sigmoid', name = 'GRU43775', )(Res35924)
Res11817 = keras.layers.Reshape((1, 1), name = 'Res11817', )(GRU43775)
LST81547 = keras.layers.LSTM(1,recurrent_activation='sigmoid', name = 'LST81547', )(Res11817)
Res38777 = keras.layers.Reshape((1, 1), name = 'Res38777', )(LST81547)
Con58701 = keras.layers.Concatenate(axis=2, name = 'Con58701', )([Res38777,in0Con58701])
Thr20326 = keras.layers.ThresholdedReLU(theta=2.408220495865647, name = 'Thr20326', input_shape=(1, 2))(in0Thr20326)
Mul25291 = keras.layers.Multiply(name = 'Mul25291', )([Con58701,Thr20326])
Res89333 = keras.layers.Reshape((1, 2, 1), name = 'Res89333', )(Mul25291)
Min24961 = keras.layers.Minimum(name = 'Min24961', )([in0Min24961,in1Min24961])
Add95741 = keras.layers.Add(name = 'Add95741', )([Res89333,Min24961])
model = tf.keras.models.Model(inputs=[in0Lay57839,in0Con58701,in0Thr20326,in0Min24961,in1Min24961], outputs=Add95741)
w = model.get_layer('GRU43775').get_weights() 
w[0] = np.array([[1, 8, 10], [6, 1, 3], [6, 9, 4], [7, 10, 6], [7, 2, 9], [10, 2, 5], [7, 3, 3], [7, 8, 6]])
w[1] = np.array([[8, 7, 7]])
w[2] = np.array([[7, 7, 9], [1, 9, 1]])
model.get_layer('GRU43775').set_weights(w) 
w = model.get_layer('LST81547').get_weights() 
w[0] = np.array([[7, 4, 3, 3]])
w[1] = np.array([[8, 9, 5, 10]])
w[2] = np.array([7, 4, 9, 6])
model.get_layer('LST81547').set_weights(w) 
in0Lay57839 = tf.constant([[[[1.2984, 1.6895], [1.046, 1.1507], [1.4652, 1.2323], [1.4347, 1.5435]], [[1.0214, 1.6633], [1.606, 1.6788], [1.0419, 1.3352], [1.4706, 1.5304]]]])
in0Con58701 = tf.constant([[[0.9364]]])
in0Thr20326 = tf.constant([[[0.8445, 0.321]]])
in0Min24961 = tf.constant([[[[0.2928], [0.8612]]]])
in1Min24961 = tf.constant([[[[0.4865], [0.4859]]]])
print (np.array2string(model.predict([in0Lay57839,in0Con58701,in0Thr20326,in0Min24961,in1Min24961],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Add95741.png')

LLay57839 = layer_normalization_layer([[[[1.2984, 1.6895], [1.046, 1.1507], [1.4652, 1.2323], [1.4347, 1.5435]], [[1.0214, 1.6633], [1.606, 1.6788], [1.0419, 1.3352], [1.4706, 1.5304]]]], 3, 1.7803063954246725, Lay57839), 
LRes35924 = reshape_layer(Lay57839, [2, 8], Res35924), 
LGRU43775 = gru_layer(Res35924,[[1, 8, 10], [6, 1, 3], [6, 9, 4], [7, 10, 6], [7, 2, 9], [10, 2, 5], [7, 3, 3], [7, 8, 6]],[[8, 7, 7]],[[7, 7, 9], [1, 9, 1]], true, GRU43775), 
LRes11817 = reshape_layer(GRU43775, [1, 1], Res11817), 
LLST81547 = lstm_layer(Res11817,[[7, 4, 3, 3]],[[8, 9, 5, 10]],[7, 4, 9, 6], LST81547), 
LRes38777 = reshape_layer(LST81547, [1, 1], Res38777), 
LCon58701 = concatenate_layer([Res38777,[[[0.9364]]]], 2, Con58701), 
LThr20326 = thresholded_relu_layer([[[0.8445, 0.321]]], 2.408220495865647, Thr20326), 
LMul25291 = multiply_layer([Con58701,Thr20326], Mul25291), 
LRes89333 = reshape_layer(Mul25291, [1, 2, 1], Res89333), 
LMin24961 = minimum_layer([[[[[0.2928], [0.8612]]]], [[[[0.4865], [0.4859]]]]], Min24961), 
LAdd95741 = add_layer([Res89333,Min24961], Add95741), 
exec_layers([LLay57839,LRes35924,LGRU43775,LRes11817,LLST81547,LRes38777,LCon58701,LThr20326,LMul25291,LRes89333,LMin24961,LAdd95741],["Lay57839","Res35924","GRU43775","Res11817","LST81547","Res38777","Con58701","Thr20326","Mul25291","Res89333","Min24961","Add95741"],Add95741,"Add95741")

Actual (Unparsed): [[[[0.2928000], [0.4859000]]]]

Expected (Unparsed): [[[[0.2928],[0.4859]]]]

Actual:   [[[[0.2928], [0.4859]]]]

Expected: [[[[0.2928], [0.4859]]]]