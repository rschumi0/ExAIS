import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Max56014 = tf.keras.layers.Input(shape=([2, 2, 1]))

Max56014 = keras.layers.MaxPool2D(pool_size=(1, 2), strides=(1, 2), padding='valid', name = 'Max56014', )(in0Max56014)
Den2198 = keras.layers.Dense(2,name = 'Den2198', )(Max56014)
Res49235 = keras.layers.Reshape((2, 2), name = 'Res49235', )(Den2198)
Sof75388 = keras.layers.Softmax(axis=1, name = 'Sof75388', )(Res49235)
model = tf.keras.models.Model(inputs=[in0Max56014], outputs=Sof75388)
w = model.get_layer('Den2198').get_weights() 
w[0] = np.array([[0.2289, 0.4117]])
w[1] = np.array([0.8839, 0.4305])
model.get_layer('Den2198').set_weights(w) 
in0Max56014 = tf.constant([[[[1.8437], [1.0346]], [[1.711], [1.8509]]]])
print (np.array2string(model.predict([in0Max56014],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Sof75388.png')

LMax56014 = max_pool2D_layer([[[[1.8437], [1.0346]], [[1.711], [1.8509]]]], 1, 2, 1, 2, false, Max56014), 
LDen2198 = dense_layer(Max56014, [[0.2289, 0.4117]],[0.8839, 0.4305], Den2198), 
LRes49235 = reshape_layer(Den2198, [2, 2], Res49235), 
LSof75388 = softmax_layer(Res49235, 1, Sof75388), 
exec_layers([LMax56014,LDen2198,LRes49235,LSof75388],["Max56014","Den2198","Res49235","Sof75388"],Sof75388,"Sof75388")

Actual (Unparsed): [[[0.4995880, 0.4992589], [0.5004120, 0.5007411]]]

Expected (Unparsed): [[[0.4995879800932596,0.49925894054262326],[0.5004120199067404,0.5007410594573768]]]

Actual:   [[[0.4996, 0.4993], [0.5005, 0.5008]]]

Expected: [[[0.4996, 0.4993], [0.5005, 0.5008]]]