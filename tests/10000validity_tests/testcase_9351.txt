import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Ave99031 = tf.keras.layers.Input(shape=([2, 2, 2, 2]))
in1Ave99031 = tf.keras.layers.Input(shape=([2, 2, 2, 2]))
in0Min29084 = tf.keras.layers.Input(shape=([2, 2, 1]))
in1Min29084 = tf.keras.layers.Input(shape=([2, 2, 1]))
in0Con42976 = tf.keras.layers.Input(shape=([2, 2, 3]))

Ave99031 = keras.layers.Average(name = 'Ave99031', )([in0Ave99031,in1Ave99031])
Res88019 = keras.layers.Reshape((2, 2, 4), name = 'Res88019', )(Ave99031)
Min29084 = keras.layers.Minimum(name = 'Min29084', )([in0Min29084,in1Min29084])
Con42976 = keras.layers.Concatenate(axis=3, name = 'Con42976', )([Min29084,in0Con42976])
Mul78269 = keras.layers.Multiply(name = 'Mul78269', )([Res88019,Con42976])
model = tf.keras.models.Model(inputs=[in0Ave99031,in1Ave99031,in0Min29084,in1Min29084,in0Con42976], outputs=Mul78269)
in0Ave99031 = tf.constant([[[[[0.4919, 0.3589], [0.3273, 0.3141]], [[0.9263, 0.9296], [0.5807, 0.4017]]], [[[0.278, 0.8135], [0.0172, 0.0887]], [[0.393, 0.6353], [0.4695, 0.1002]]]]])
in1Ave99031 = tf.constant([[[[[0.309, 0.7499], [0.6556, 0.1532]], [[0.4807, 0.6058], [0.9915, 0.1055]]], [[[0.4845, 0.358], [0.1015, 0.9235]], [[0.2282, 0.055], [0.3787, 0.3441]]]]])
in0Min29084 = tf.constant([[[[0.95], [0.9916]], [[0.033], [0.3217]]]])
in1Min29084 = tf.constant([[[[0.4461], [0.2306]], [[0.5511], [0.2236]]]])
in0Con42976 = tf.constant([[[[0.7786, 0.858, 0.7947], [0.7462, 0.2635, 0.0818]], [[0.3582, 0.7965, 0.3612], [0.5411, 0.8795, 0.5673]]]])
print (np.array2string(model.predict([in0Ave99031,in1Ave99031,in0Min29084,in1Min29084,in0Con42976],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Mul78269.png')

LAve99031 = average_layer([[[[[[0.4919, 0.3589], [0.3273, 0.3141]], [[0.9263, 0.9296], [0.5807, 0.4017]]], [[[0.278, 0.8135], [0.0172, 0.0887]], [[0.393, 0.6353], [0.4695, 0.1002]]]]], [[[[[0.309, 0.7499], [0.6556, 0.1532]], [[0.4807, 0.6058], [0.9915, 0.1055]]], [[[0.4845, 0.358], [0.1015, 0.9235]], [[0.2282, 0.055], [0.3787, 0.3441]]]]]], Ave99031), 
LRes88019 = reshape_layer(Ave99031, [2, 2, 4], Res88019), 
LMin29084 = minimum_layer([[[[[0.95], [0.9916]], [[0.033], [0.3217]]]], [[[[0.4461], [0.2306]], [[0.5511], [0.2236]]]]], Min29084), 
LCon42976 = concatenate_layer([Min29084,[[[[0.7786, 0.858, 0.7947], [0.7462, 0.2635, 0.0818]], [[0.3582, 0.7965, 0.3612], [0.5411, 0.8795, 0.5673]]]]], 3, Con42976), 
LMul78269 = multiply_layer([Res88019,Con42976], Mul78269), 
exec_layers([LAve99031,LRes88019,LMin29084,LCon42976,LMul78269],["Ave99031","Res88019","Min29084","Con42976","Mul78269"],Mul78269,"Mul78269")

Actual (Unparsed): [[[[0.1786407, 0.4316558, 0.4216641, 0.1856817], [0.1622271, 0.5728577, 0.2071374, 0.0207445]], [[0.0125812, 0.2098157, 0.0472723, 0.1828033], [0.0694502, 0.1867607, 0.3729959, 0.1260257]]]]

Expected (Unparsed): [[[[0.178640745,0.43165583999999996,0.42166409999999993,0.185681655],[0.1622271,0.57285774,0.20713735000000003,0.02074448]],[[0.01258125,0.20981565000000002,0.047272275,0.18280332000000002],[0.06945016,0.18676066500000002,0.37299594999999997,0.12602569500000002]]]]

Actual:   [[[[0.1787, 0.4317, 0.4217, 0.1857], [0.1623, 0.5729, 0.2072, 0.0208]], [[0.0126, 0.2099, 0.0473, 0.1829], [0.0695, 0.1868, 0.373, 0.1261]]]]

Expected: [[[[0.1787, 0.4317, 0.4217, 0.1857], [0.1623, 0.5729, 0.2072, 0.0208]], [[0.0126, 0.2099, 0.0473, 0.1829], [0.0695, 0.1868, 0.373, 0.1261]]]]