import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Min19634 = tf.keras.layers.Input(shape=([2, 2]))
in1Min19634 = tf.keras.layers.Input(shape=([2, 2]))
in0Ave17611 = tf.keras.layers.Input(shape=([2, 1]))
in1Ave17611 = tf.keras.layers.Input(shape=([2, 1]))
in0Con9456 = tf.keras.layers.Input(shape=([2, 3, 3]))
in0Up_17422 = tf.keras.layers.Input(shape=([2, 3, 4]))

Min19634 = keras.layers.Minimum(name = 'Min19634', )([in0Min19634,in1Min19634])
Res46370 = keras.layers.Reshape((2, 2, 1), name = 'Res46370', )(Min19634)
Res6826 = keras.layers.Reshape((2, 2, 1, 1), name = 'Res6826', )(Res46370)
Cro83146 = keras.layers.Cropping3D(cropping=((1, 0), (0, 0), (0, 0)), name = 'Cro83146', )(Res6826)
Res64040 = keras.layers.Reshape((1, 2, 1), name = 'Res64040', )(Cro83146)
Ave17611 = keras.layers.Average(name = 'Ave17611', )([in0Ave17611,in1Ave17611])
Res44570 = keras.layers.Reshape((1, 2, 1), name = 'Res44570', )(Ave17611)
Mul16373 = keras.layers.Multiply(name = 'Mul16373', )([Res64040,Res44570])
Zer88274 = keras.layers.ZeroPadding2D(padding=((1, 0), (1, 0)), name = 'Zer88274', )(Mul16373)
Con9456 = keras.layers.Concatenate(axis=3, name = 'Con9456', )([Zer88274,in0Con9456])
Up_17422 = keras.layers.UpSampling2D(size=(1, 1), name = 'Up_17422', )(in0Up_17422)
Min70150 = keras.layers.Minimum(name = 'Min70150', )([Con9456,Up_17422])
Ave29500 = keras.layers.AveragePooling2D(pool_size=(1, 1), strides=(1, 1), padding='valid', name = 'Ave29500', )(Min70150)
model = tf.keras.models.Model(inputs=[in0Min19634,in1Min19634,in0Ave17611,in1Ave17611,in0Con9456,in0Up_17422], outputs=Ave29500)
in0Min19634 = tf.constant([[[0.8493, 0.3241], [0.7164, 0.3623]]])
in1Min19634 = tf.constant([[[0.9774, 0.1312], [0.8231, 0.7113]]])
in0Ave17611 = tf.constant([[[0.5163], [0.6564]]])
in1Ave17611 = tf.constant([[[0.0365], [0.7711]]])
in0Con9456 = tf.constant([[[[0.1308, 0.6646, 0.2611], [0.1323, 0.1806, 0.3588], [0.726, 0.2603, 0.0903]], [[0.6211, 0.3265, 0.8534], [0.2298, 0.9701, 0.3326], [0.6625, 0.211, 0.1515]]]])
in0Up_17422 = tf.constant([[[[1.5186, 1.3708, 1.892, 1.4086], [1.9086, 1.0941, 1.1751, 1.0021], [1.5584, 1.1587, 1.7315, 1.4225]], [[1.889, 1.4042, 1.128, 1.7112], [1.4182, 1.9823, 1.8472, 1.8089], [1.2032, 1.5183, 1.3616, 1.0144]]]])
print (np.array2string(model.predict([in0Min19634,in1Min19634,in0Ave17611,in1Ave17611,in0Con9456,in0Up_17422],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Ave29500.png')

LMin19634 = minimum_layer([[[[0.8493, 0.3241], [0.7164, 0.3623]]], [[[0.9774, 0.1312], [0.8231, 0.7113]]]], Min19634), 
LRes46370 = reshape_layer(Min19634, [2, 2, 1], Res46370), 
LRes6826 = reshape_layer(Res46370, [2, 2, 1, 1], Res6826), 
LCro83146 = cropping3D_layer(Res6826, 1, 0, 0, 0, 0, 0, Cro83146), 
LRes64040 = reshape_layer(Cro83146, [1, 2, 1], Res64040), 
LAve17611 = average_layer([[[[0.5163], [0.6564]]], [[[0.0365], [0.7711]]]], Ave17611), 
LRes44570 = reshape_layer(Ave17611, [1, 2, 1], Res44570), 
LMul16373 = multiply_layer([Res64040,Res44570], Mul16373), 
LZer88274 = zero_padding2D_layer(Mul16373, 1, 0, 1, 0, Zer88274), 
LCon9456 = concatenate_layer([Zer88274,[[[[0.1308, 0.6646, 0.2611], [0.1323, 0.1806, 0.3588], [0.726, 0.2603, 0.0903]], [[0.6211, 0.3265, 0.8534], [0.2298, 0.9701, 0.3326], [0.6625, 0.211, 0.1515]]]]], 3, Con9456), 
LUp_17422 = up_sampling2D_layer([[[[1.5186, 1.3708, 1.892, 1.4086], [1.9086, 1.0941, 1.1751, 1.0021], [1.5584, 1.1587, 1.7315, 1.4225]], [[1.889, 1.4042, 1.128, 1.7112], [1.4182, 1.9823, 1.8472, 1.8089], [1.2032, 1.5183, 1.3616, 1.0144]]]], 1, 1, Up_17422), 
LMin70150 = minimum_layer([Con9456,Up_17422], Min70150), 
LAve29500 = average_pooling2D_layer(Min70150, 1, 1, 1, 1, false, Ave29500), 
exec_layers([LMin19634,LRes46370,LRes6826,LCro83146,LRes64040,LAve17611,LRes44570,LMul16373,LZer88274,LCon9456,LUp_17422,LMin70150,LAve29500],["Min19634","Res46370","Res6826","Cro83146","Res64040","Ave17611","Res44570","Mul16373","Zer88274","Con9456","Up_17422","Min70150","Ave29500"],Ave29500,"Ave29500")

Actual (Unparsed): [[[[0.0000000, 0.1308000, 0.6646000, 0.2611000], [0.0000000, 0.1323000, 0.1806000, 0.3588000], [0.0000000, 0.7260000, 0.2603000, 0.0903000]], [[0.0000000, 0.6211000, 0.3265000, 0.8534000], [0.1980130, 0.2298000, 0.9701000, 0.3326000], [0.2585916, 0.6625000, 0.2110000, 0.1515000]]]]

Expected (Unparsed): [[[[0,0.1308,0.6646,0.2611],[0,0.1323,0.1806,0.3588],[0,0.726,0.2603,0.0903]],[[0,0.6211,0.3265,0.8534],[0.19801296,0.2298,0.9701,0.3326],[0.258591625,0.6625,0.211,0.1515]]]]

Actual:   [[[[0, 0.1308, 0.6646, 0.2611], [0, 0.1323, 0.1806, 0.3588], [0, 0.726, 0.2603, 0.0903]], [[0, 0.6211, 0.3265, 0.8534], [0.1981, 0.2298, 0.9701, 0.3326], [0.2586, 0.6625, 0.211, 0.1515]]]]

Expected: [[[[0, 0.1308, 0.6646, 0.2611], [0, 0.1323, 0.1806, 0.3588], [0, 0.726, 0.2603, 0.0903]], [[0, 0.6211, 0.3265, 0.8534], [0.1981, 0.2298, 0.9701, 0.3326], [0.2586, 0.6625, 0.211, 0.1515]]]]