import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Min84596 = tf.keras.layers.Input(shape=([2, 2, 1, 1]))
in1Min84596 = tf.keras.layers.Input(shape=([2, 2, 1, 1]))

Min84596 = keras.layers.Minimum(name = 'Min84596', )([in0Min84596,in1Min84596])
Res53534 = keras.layers.Reshape((2, 2, 1), name = 'Res53534', )(Min84596)
Con98384 = keras.layers.Conv2D(3, (1, 1),strides=(1, 1), padding='valid', dilation_rate=(1, 1), name = 'Con98384', )(Res53534)
model = tf.keras.models.Model(inputs=[in0Min84596,in1Min84596], outputs=Con98384)
w = model.get_layer('Con98384').get_weights() 
w[0] = np.array([[[[0.6182, 0.6431, 0.9199]]]])
w[1] = np.array([0, 0, 0])
model.get_layer('Con98384').set_weights(w) 
in0Min84596 = tf.constant([[[[[0.3855]], [[0.5558]]], [[[0.1454]], [[0.6812]]]]])
in1Min84596 = tf.constant([[[[[0.5427]], [[0.7555]]], [[[0.4209]], [[0.3446]]]]])
print (np.array2string(model.predict([in0Min84596,in1Min84596],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Con98384.png')

LMin84596 = minimum_layer([[[[[[0.3855]], [[0.5558]]], [[[0.1454]], [[0.6812]]]]], [[[[[0.5427]], [[0.7555]]], [[[0.4209]], [[0.3446]]]]]], Min84596), 
LRes53534 = reshape_layer(Min84596, [2, 2, 1], Res53534), 
LCon98384 = conv2D_layer(Res53534, 1, 1,[[[[0.6182, 0.6431, 0.9199]]]],[0, 0, 0], 1, 1, false, 1, 1, Con98384), 
exec_layers([LMin84596,LRes53534,LCon98384],["Min84596","Res53534","Con98384"],Con98384,"Con98384")

Actual (Unparsed): [[[[0.2383161, 0.2479151, 0.3546215], [0.3435956, 0.3574350, 0.5112804]], [[0.0898863, 0.0935067, 0.1337535], [0.2130317, 0.2216123, 0.3169975]]]]

Expected (Unparsed): [[[[0.2383161,0.24791505,0.35462145],[0.34359555999999997,0.35743497999999996,0.51128042]],[[0.08988628,0.09350674,0.13375346000000002],[0.21303172,0.22161226,0.31699754]]]]

Actual:   [[[[0.2384, 0.248, 0.3547], [0.3436, 0.3575, 0.5113]], [[0.0899, 0.0936, 0.1338], [0.2131, 0.2217, 0.317]]]]

Expected: [[[[0.2384, 0.248, 0.3547], [0.3436, 0.3575, 0.5113]], [[0.0899, 0.0936, 0.1338], [0.2131, 0.2217, 0.317]]]]