import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Zer87713 = tf.keras.layers.Input(shape=([3, 2, 4]))

Zer87713 = keras.layers.ZeroPadding2D(padding=((1, 1), (1, 1)), name = 'Zer87713', )(in0Zer87713)
Res33238 = keras.layers.Reshape((5, 16), name = 'Res33238', )(Zer87713)
Cro98816 = keras.layers.Cropping1D(cropping=((0, 1)), name = 'Cro98816', )(Res33238)
Res65000 = keras.layers.Reshape((4, 16, 1), name = 'Res65000', )(Cro98816)
Sep2207 = keras.layers.SeparableConv2D(4, (3, 12),strides=(1, 1), padding='valid', name = 'Sep2207', )(Res65000)
Res58545 = keras.layers.Reshape((2, 20), name = 'Res58545', )(Sep2207)
Glo38081 = keras.layers.GlobalMaxPool1D(name = 'Glo38081', )(Res58545)
model = tf.keras.models.Model(inputs=[in0Zer87713], outputs=Glo38081)
w = model.get_layer('Sep2207').get_weights() 
w[0] = np.array([[[[0.3047]], [[0.5073]], [[0.0356]], [[0.8292]], [[0.1275]], [[0.8863]], [[0.6738]], [[0.5962]], [[0.5872]], [[0.035]], [[0.4665]], [[0.1804]]], [[[0.9277]], [[0.4353]], [[0.1614]], [[0.5342]], [[0.1846]], [[0.0534]], [[0.5108]], [[0.9679]], [[0.8393]], [[0.6754]], [[0.6798]], [[0.2111]]], [[[0.4372]], [[0.1885]], [[0.4868]], [[0.416]], [[0.8032]], [[0.3822]], [[0.1539]], [[0.4949]], [[0.1436]], [[0.3521]], [[0.1641]], [[0.5754]]]])
w[1] = np.array([[[[0.221, 0.4122, 0.2013, 0.6503]]]])
w[2] = np.array([0, 0, 0, 0])
model.get_layer('Sep2207').set_weights(w) 
in0Zer87713 = tf.constant([[[[1.0076, 1.6829, 1.9529, 1.4227], [1.6949, 1.327, 1.5984, 1.5752]], [[1.4708, 1.6137, 1.0881, 1.6493], [1.4192, 1.325, 1.7507, 1.9969]], [[1.7273, 1.3939, 1.5989, 1.8227], [1.8076, 1.3434, 1.872, 1.7801]]]])
print (np.array2string(model.predict([in0Zer87713],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Glo38081.png')

LZer87713 = zero_padding2D_layer([[[[1.0076, 1.6829, 1.9529, 1.4227], [1.6949, 1.327, 1.5984, 1.5752]], [[1.4708, 1.6137, 1.0881, 1.6493], [1.4192, 1.325, 1.7507, 1.9969]], [[1.7273, 1.3939, 1.5989, 1.8227], [1.8076, 1.3434, 1.872, 1.7801]]]], 1, 1, 1, 1, Zer87713), 
LRes33238 = reshape_layer(Zer87713, [5, 16], Res33238), 
LCro98816 = cropping1D_layer(Res33238, 0, 1, Cro98816), 
LRes65000 = reshape_layer(Cro98816, [4, 16, 1], Res65000), 
LSep2207 = separable_conv2D_layer(Res65000, 3, 12,[[[[[0.3047]], [[0.5073]], [[0.0356]], [[0.8292]], [[0.1275]], [[0.8863]], [[0.6738]], [[0.5962]], [[0.5872]], [[0.035]], [[0.4665]], [[0.1804]]], [[[0.9277]], [[0.4353]], [[0.1614]], [[0.5342]], [[0.1846]], [[0.0534]], [[0.5108]], [[0.9679]], [[0.8393]], [[0.6754]], [[0.6798]], [[0.2111]]], [[[0.4372]], [[0.1885]], [[0.4868]], [[0.416]], [[0.8032]], [[0.3822]], [[0.1539]], [[0.4949]], [[0.1436]], [[0.3521]], [[0.1641]], [[0.5754]]]],[[[[0.221, 0.4122, 0.2013, 0.6503]]]]],[0, 0, 0, 0], 1, 1, false, Sep2207), 
LRes58545 = reshape_layer(Sep2207, [2, 20], Res58545), 
LGlo38081 = global_max_pool1D_layer(Res58545, Glo38081), 
exec_layers([LZer87713,LRes33238,LCro98816,LRes65000,LSep2207,LRes58545,LGlo38081],["Zer87713","Res33238","Cro98816","Res65000","Sep2207","Res58545","Glo38081"],Glo38081,"Glo38081")

Actual (Unparsed): [[3.8001945, 7.0879646, 3.4614442, 11.1822014, 3.9997263, 7.4601231, 3.6431897, 11.7693305, 3.8282060, 7.1402104, 3.4869586, 11.2646259, 3.9268457, 7.3241892, 3.5768056, 11.5548768, 3.9317242, 7.3332882, 3.5812492, 11.5692318]]

Expected (Unparsed): [[3.800194522929999,7.087964626026,3.461444151429,11.182201349599,3.9997263332,7.460123052239999,3.6431896419600003,11.769330472759997,3.8282059436400004,7.140210361848,3.486958626492,11.264625905652,3.9268457023899996,7.324189133598001,3.5768056103669994,11.554876743277,3.931724160259999,7.333288230132,3.581249201178,11.569231771118]]

Actual:   [[3.8002, 7.088, 3.4615, 11.1823, 3.9998, 7.4602, 3.6432, 11.7694, 3.8283, 7.1403, 3.487, 11.2647, 3.9269, 7.3242, 3.5769, 11.5549, 3.9318, 7.3333, 3.5813, 11.5693]]

Expected: [[3.8002, 7.088, 3.4615, 11.1823, 3.9998, 7.4602, 3.6432, 11.7694, 3.8283, 7.1403, 3.487, 11.2647, 3.9269, 7.3242, 3.5769, 11.5549, 3.9318, 7.3333, 3.5813, 11.5693]]