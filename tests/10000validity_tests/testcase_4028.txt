import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Mul54360 = tf.keras.layers.Input(shape=([2, 2]))
in1Mul54360 = tf.keras.layers.Input(shape=([2, 2]))

Mul54360 = keras.layers.Multiply(name = 'Mul54360', )([in0Mul54360,in1Mul54360])
Lea7515 = keras.layers.LeakyReLU(alpha=5.0053620040882745, name = 'Lea7515', )(Mul54360)
model = tf.keras.models.Model(inputs=[in0Mul54360,in1Mul54360], outputs=Lea7515)
in0Mul54360 = tf.constant([[[0.1569, 0.0955], [0.8694, 0.9051]]])
in1Mul54360 = tf.constant([[[0.7634, 0.0076], [0.9462, 0.6935]]])
print (np.array2string(model.predict([in0Mul54360,in1Mul54360],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Lea7515.png')

LMul54360 = multiply_layer([[[[0.1569, 0.0955], [0.8694, 0.9051]]], [[[0.7634, 0.0076], [0.9462, 0.6935]]]], Mul54360), 
LLea7515 = leaky_relu_layer(Mul54360, 5.0053620040882745, Lea7515), 
exec_layers([LMul54360,LLea7515],["Mul54360","Lea7515"],Lea7515,"Lea7515")

Actual (Unparsed): [[[0.1197775, 0.0007258], [0.8226263, 0.6276868]]]

Expected (Unparsed): [[[0.11977746,0.0007258],[0.82262628,0.62768685]]]

Actual:   [[[0.1198, 0.0008], [0.8227, 0.6277]]]

Expected: [[[0.1198, 0.0008], [0.8227, 0.6277]]]