import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Mas61635 = tf.keras.layers.Input(shape=([1]))

Mas61635 = keras.layers.Masking(mask_value=1, name = 'Mas61635', )(in0Mas61635)
Lea46811 = keras.layers.LeakyReLU(alpha=6.209992016065637, name = 'Lea46811', )(Mas61635)
Res14395 = keras.layers.Reshape((1, 1), name = 'Res14395', )(Lea46811)
Res86840 = keras.layers.Reshape((1, 1, 1), name = 'Res86840', )(Res14395)
Loc14850 = keras.layers.LocallyConnected2D(3, (1, 1),strides=(1, 1), name = 'Loc14850', )(Res86840)
model = tf.keras.models.Model(inputs=[in0Mas61635], outputs=Loc14850)
w = model.get_layer('Loc14850').get_weights() 
w[0] = np.array([[[0.6439, 0.7973, 0.1719]]])
w[1] = np.array([[[0, 0, 0]]])
model.get_layer('Loc14850').set_weights(w) 
in0Mas61635 = tf.constant([[1.2793]])
print (np.array2string(model.predict([in0Mas61635],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Loc14850.png')

LMas61635 = masking_layer([[1.2793]], 1, Mas61635), 
LLea46811 = leaky_relu_layer(Mas61635, 6.209992016065637, Lea46811), 
LRes14395 = reshape_layer(Lea46811, [1, 1], Res14395), 
LRes86840 = reshape_layer(Res14395, [1, 1, 1], Res86840), 
LLoc14850 = locally_connected2D_layer(Res86840, 1, 1,[[[0.6439, 0.7973, 0.1719]]],[[[0, 0, 0]]], 1, 1, Loc14850), 
exec_layers([LMas61635,LLea46811,LRes14395,LRes86840,LLoc14850],["Mas61635","Lea46811","Res14395","Res86840","Loc14850"],Loc14850,"Loc14850")

Actual (Unparsed): [[[[0.8237413, 1.0199859, 0.2199117]]]]

Expected (Unparsed): [[[[0.8237412700000001,1.01998589,0.21991167]]]]

Actual:   [[[[0.8238, 1.02, 0.22]]]]

Expected: [[[[0.8238, 1.02, 0.22]]]]