import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Sub72167 = tf.keras.layers.Input(shape=([3, 3, 2]))
in1Sub72167 = tf.keras.layers.Input(shape=([3, 3, 2]))
in0Max26830 = tf.keras.layers.Input(shape=([1, 1]))
in1Max26830 = tf.keras.layers.Input(shape=([1, 1]))
in0Con68743 = tf.keras.layers.Input(shape=([2, 2]))
in0Sub40355 = tf.keras.layers.Input(shape=([2, 3]))
in1Sub40355 = tf.keras.layers.Input(shape=([2, 3]))
in0Mul30974 = tf.keras.layers.Input(shape=([2, 1]))
in1Mul30974 = tf.keras.layers.Input(shape=([2, 1]))

Sub72167 = keras.layers.Subtract(name = 'Sub72167', )([in0Sub72167,in1Sub72167])
Res46189 = keras.layers.Reshape((3, 3, 2, 1), name = 'Res46189', )(Sub72167)
Max26830 = keras.layers.Maximum(name = 'Max26830', )([in0Max26830,in1Max26830])
Zer74036 = keras.layers.ZeroPadding1D(padding=((1, 0)), name = 'Zer74036', )(Max26830)
Con68743 = keras.layers.Concatenate(axis=2, name = 'Con68743', )([Zer74036,in0Con68743])
Sub40355 = keras.layers.Subtract(name = 'Sub40355', )([in0Sub40355,in1Sub40355])
Min40030 = keras.layers.Minimum(name = 'Min40030', )([Con68743,Sub40355])
Mul30974 = keras.layers.Multiply(name = 'Mul30974', )([in0Mul30974,in1Mul30974])
Cro75898 = keras.layers.Cropping1D(cropping=((0, 0)), name = 'Cro75898', )(Mul30974)
Dot40433 = keras.layers.Dot(axes=(1, 1), name = 'Dot40433', )([Min40030,Cro75898])
Res51392 = keras.layers.Reshape((3, 1, 1), name = 'Res51392', )(Dot40433)
Res23262 = keras.layers.Reshape((3, 1, 1, 1), name = 'Res23262', )(Res51392)
Cro80127 = keras.layers.Cropping3D(cropping=((2, 0), (0, 0), (0, 0)), name = 'Cro80127', )(Res23262)
Zer94763 = keras.layers.ZeroPadding3D(padding=((2, 0), (2, 0), (1, 0)), name = 'Zer94763', )(Cro80127)
Min66544 = keras.layers.Minimum(name = 'Min66544', )([Res46189,Zer94763])
model = tf.keras.models.Model(inputs=[in0Sub72167,in1Sub72167,in0Max26830,in1Max26830,in0Con68743,in0Sub40355,in1Sub40355,in0Mul30974,in1Mul30974], outputs=Min66544)
in0Sub72167 = tf.constant([[[[0.0048, 0.3264], [0.5312, 0.4341], [0.3608, 0.3418]], [[0.5644, 0.619], [0.774, 0.8182], [0.4037, 0.753]], [[0.9379, 0.0953], [0.0635, 0.8872], [0.533, 0.6737]]]])
in1Sub72167 = tf.constant([[[[0.2929, 0.5974], [0.8376, 0.7533], [0.6302, 0.7693]], [[0.1627, 0.1542], [0.1429, 0.7338], [0.9442, 0.0873]], [[0.8307, 0.4928], [0.2743, 0.5157], [0.5673, 0.125]]]])
in0Max26830 = tf.constant([[[0.7594]]])
in1Max26830 = tf.constant([[[0.5204]]])
in0Con68743 = tf.constant([[[0.5293, 0.7853], [0.2933, 0.818]]])
in0Sub40355 = tf.constant([[[0.0195, 0.7161, 0.8571], [0.1721, 0.1977, 0.3172]]])
in1Sub40355 = tf.constant([[[0.2607, 0.894, 0.162], [0.5066, 0.4773, 0.2027]]])
in0Mul30974 = tf.constant([[[0.939], [0.0983]]])
in1Mul30974 = tf.constant([[[0.4765], [0.0099]]])
print (np.array2string(model.predict([in0Sub72167,in1Sub72167,in0Max26830,in1Max26830,in0Con68743,in0Sub40355,in1Sub40355,in0Mul30974,in1Mul30974],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Min66544.png')

LSub72167 = subtract_layer([[[[0.0048, 0.3264], [0.5312, 0.4341], [0.3608, 0.3418]], [[0.5644, 0.619], [0.774, 0.8182], [0.4037, 0.753]], [[0.9379, 0.0953], [0.0635, 0.8872], [0.533, 0.6737]]]], [[[[0.2929, 0.5974], [0.8376, 0.7533], [0.6302, 0.7693]], [[0.1627, 0.1542], [0.1429, 0.7338], [0.9442, 0.0873]], [[0.8307, 0.4928], [0.2743, 0.5157], [0.5673, 0.125]]]], Sub72167), 
LRes46189 = reshape_layer(Sub72167, [3, 3, 2, 1], Res46189), 
LMax26830 = maximum_layer([[[[0.7594]]], [[[0.5204]]]], Max26830), 
LZer74036 = zero_padding1D_layer(Max26830, 1, 0, Zer74036), 
LCon68743 = concatenate_layer([Zer74036,[[[0.5293, 0.7853], [0.2933, 0.818]]]], 2, Con68743), 
LSub40355 = subtract_layer([[[0.0195, 0.7161, 0.8571], [0.1721, 0.1977, 0.3172]]], [[[0.2607, 0.894, 0.162], [0.5066, 0.4773, 0.2027]]], Sub40355), 
LMin40030 = minimum_layer([Con68743,Sub40355], Min40030), 
LMul30974 = multiply_layer([[[[0.939], [0.0983]]], [[[0.4765], [0.0099]]]], Mul30974), 
LCro75898 = cropping1D_layer(Mul30974, 0, 0, Cro75898), 
LDot40433 = dot_layer(Min40030,Cro75898, 1, 1, Dot40433), 
LRes51392 = reshape_layer(Dot40433, [3, 1, 1], Res51392), 
LRes23262 = reshape_layer(Res51392, [3, 1, 1, 1], Res23262), 
LCro80127 = cropping3D_layer(Res23262, 2, 0, 0, 0, 0, 0, Cro80127), 
LZer94763 = zero_padding3D_layer(Cro80127, 2, 0, 2, 0, 1, 0, Zer94763), 
LMin66544 = minimum_layer([Res46189,Zer94763], Min66544), 
exec_layers([LSub72167,LRes46189,LMax26830,LZer74036,LCon68743,LSub40355,LMin40030,LMul30974,LCro75898,LDot40433,LRes51392,LRes23262,LCro80127,LZer94763,LMin66544],["Sub72167","Res46189","Max26830","Zer74036","Con68743","Sub40355","Min40030","Mul30974","Cro75898","Dot40433","Res51392","Res23262","Cro80127","Zer94763","Min66544"],Min66544,"Min66544")

Actual (Unparsed): [[[[[-0.2881000], [-0.2710000]], [[-0.3064000], [-0.3192000]], [[-0.2694000], [-0.4275000]]], [[[0.0000000], [0.0000000]], [[0.0000000], [0.0000000]], [[-0.5405000], [0.0000000]]], [[[0.0000000], [-0.3975000]], [[-0.2108000], [0.0000000]], [[-0.0343000], [0.3111225]]]]]

Expected (Unparsed): [[[[[-0.28809999999999997],[-0.271]],[[-0.3064],[-0.3192]],[[-0.2694],[-0.4275]]],[[[0],[0]],[[0],[0]],[[-0.5405],[0]]],[[[0],[-0.3975]],[[-0.2108],[0]],[[-0.0343],[0.3111224538149999]]]]]

Actual:   [[[[[-0.2881], [-0.271]], [[-0.3064], [-0.3192]], [[-0.2694], [-0.4275]]], [[[0], [0]], [[0], [0]], [[-0.5405], [0]]], [[[0], [-0.3975]], [[-0.2108], [0]], [[-0.0343], [0.3112]]]]]

Expected: [[[[[-0.288], [-0.271]], [[-0.3064], [-0.3192]], [[-0.2694], [-0.4275]]], [[[0], [0]], [[0], [0]], [[-0.5405], [0]]], [[[0], [-0.3975]], [[-0.2108], [0]], [[-0.0343], [0.3112]]]]]