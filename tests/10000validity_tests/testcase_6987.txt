import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Sof98263 = tf.keras.layers.Input(shape=([1, 2, 1]))
in0Con28685 = tf.keras.layers.Input(shape=([2, 2, 2, 3]))
in0Con72575 = tf.keras.layers.Input(shape=([2, 2, 2, 1]))

Sof98263 = keras.layers.Softmax(axis=1, name = 'Sof98263', input_shape=(1, 2, 1))(in0Sof98263)
Res59735 = keras.layers.Reshape((1, 2, 1, 1), name = 'Res59735', )(Sof98263)
Zer98095 = keras.layers.ZeroPadding3D(padding=((1, 0), (0, 0), (1, 0)), name = 'Zer98095', )(Res59735)
Con28685 = keras.layers.Concatenate(axis=4, name = 'Con28685', )([Zer98095,in0Con28685])
Con72575 = keras.layers.Conv3DTranspose(4, (1, 1, 2),strides=(1, 1, 1), padding='same', name = 'Con72575', )(in0Con72575)
Max90714 = keras.layers.Maximum(name = 'Max90714', )([Con28685,Con72575])
Res4579 = keras.layers.Reshape((2, 2, 8), name = 'Res4579', )(Max90714)
Cro8452 = keras.layers.Cropping2D(cropping=((0, 0), (0, 1)), name = 'Cro8452', )(Res4579)
Con35501 = keras.layers.Conv2D(4, (2, 1),strides=(1, 1), padding='valid', dilation_rate=(1, 1), name = 'Con35501', )(Cro8452)
model = tf.keras.models.Model(inputs=[in0Sof98263,in0Con28685,in0Con72575], outputs=Con35501)
w = model.get_layer('Con72575').get_weights() 
w[0] = np.array([[[[[0.4499], [0.2338], [0.6969], [0.4047]], [[0.509], [0.7204], [0.4242], [0.6885]]]]])
w[1] = np.array([0, 0, 0, 0])
model.get_layer('Con72575').set_weights(w) 
w = model.get_layer('Con35501').get_weights() 
w[0] = np.array([[[[0.1564, 0.877, 0.9212, 0.2958], [0.8059, 0.6027, 0.8737, 0.5118], [0.9033, 0.9067, 0.6188, 0.2607], [0.4182, 0.6685, 0.6553, 0.7816], [0.9163, 0.7045, 0.2794, 0.5388], [0.1157, 0.4279, 0.092, 0.5619], [0.0743, 0.1062, 0.1411, 0.6057], [0.8286, 0.328, 0.6199, 0.7051]]], [[[0.0162, 0.5417, 0.8947, 0.7214], [0.2544, 0.5606, 0.5201, 0.7685], [0.8257, 0.743, 0.8155, 0.991], [0.5232, 0.15, 0.5195, 0.0257], [0.3488, 0.3607, 0.0219, 0.6165], [0.1226, 0.7797, 0.676, 0.281], [0.9624, 0.2132, 0.7387, 0.6257], [0.0251, 0.2066, 0.5531, 0.8963]]]])
w[1] = np.array([0, 0, 0, 0])
model.get_layer('Con35501').set_weights(w) 
in0Sof98263 = tf.constant([[[[0.4087], [0.6015]]]])
in0Con28685 = tf.constant([[[[[0.4004, 0.2351, 0.8928], [0.9891, 0.7908, 0.8875]], [[0.2218, 0.3812, 0.1269], [0.2062, 0.9961, 0.3366]]], [[[0.7805, 0.4072, 0.3591], [0.3767, 0.8628, 0.2388]], [[0.5414, 0.7888, 0.3361], [0.0423, 0.2692, 0.5055]]]]])
in0Con72575 = tf.constant([[[[[0.2091], [0.5483]], [[0.2644], [0.8087]]], [[[0.3361], [0.7639]], [[0.1222], [0.9701]]]]])
print (np.array2string(model.predict([in0Sof98263,in0Con28685,in0Con72575],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Con35501.png')

LSof98263 = softmax_layer([[[[0.4087], [0.6015]]]], 1, Sof98263), 
LRes59735 = reshape_layer(Sof98263, [1, 2, 1, 1], Res59735), 
LZer98095 = zero_padding3D_layer(Res59735, 1, 0, 0, 0, 1, 0, Zer98095), 
LCon28685 = concatenate_layer([Zer98095,[[[[[0.4004, 0.2351, 0.8928], [0.9891, 0.7908, 0.8875]], [[0.2218, 0.3812, 0.1269], [0.2062, 0.9961, 0.3366]]], [[[0.7805, 0.4072, 0.3591], [0.3767, 0.8628, 0.2388]], [[0.5414, 0.7888, 0.3361], [0.0423, 0.2692, 0.5055]]]]]], 4, Con28685), 
LCon72575 = conv3D_transpose_layer([[[[[0.2091], [0.5483]], [[0.2644], [0.8087]]], [[[0.3361], [0.7639]], [[0.1222], [0.9701]]]]], 1, 1, 2,[[[[[0.4499], [0.2338], [0.6969], [0.4047]], [[0.509], [0.7204], [0.4242], [0.6885]]]]],[0, 0, 0, 0], 1, 1, 1, true, Con72575), 
LMax90714 = maximum_layer([Con28685,Con72575], Max90714), 
LRes4579 = reshape_layer(Max90714, [2, 2, 8], Res4579), 
LCro8452 = cropping2D_layer(Res4579, 0, 0, 0, 1, Cro8452), 
LCon35501 = conv2D_layer(Cro8452, 2, 1,[[[[0.1564, 0.877, 0.9212, 0.2958], [0.8059, 0.6027, 0.8737, 0.5118], [0.9033, 0.9067, 0.6188, 0.2607], [0.4182, 0.6685, 0.6553, 0.7816], [0.9163, 0.7045, 0.2794, 0.5388], [0.1157, 0.4279, 0.092, 0.5619], [0.0743, 0.1062, 0.1411, 0.6057], [0.8286, 0.328, 0.6199, 0.7051]]], [[[0.0162, 0.5417, 0.8947, 0.7214], [0.2544, 0.5606, 0.5201, 0.7685], [0.8257, 0.743, 0.8155, 0.991], [0.5232, 0.15, 0.5195, 0.0257], [0.3488, 0.3607, 0.0219, 0.6165], [0.1226, 0.7797, 0.676, 0.281], [0.9624, 0.2132, 0.7387, 0.6257], [0.0251, 0.2066, 0.5531, 0.8963]]]],[0, 0, 0, 0], 1, 1, false, 1, 1, Con35501), 
exec_layers([LSof98263,LRes59735,LZer98095,LCon28685,LCon72575,LMax90714,LRes4579,LCro8452,LCon35501],["Sof98263","Res59735","Zer98095","Con28685","Con72575","Max90714","Res4579","Cro8452","Con35501"],Con35501,"Con35501")

Actual (Unparsed): [[[[4.1246874, 4.0411544, 4.3209154, 5.7233906]]]]

Expected (Unparsed): [[[[4.1246874164289995,4.041154365318,4.320915406516999,5.723390632777999]]]]

Actual:   [[[[4.1247, 4.0412, 4.321, 5.7234]]]]

Expected: [[[[4.1247, 4.0412, 4.321, 5.7234]]]]