import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Ave87362 = tf.keras.layers.Input(shape=([1, 2, 2]))
in1Ave87362 = tf.keras.layers.Input(shape=([1, 2, 2]))

Ave87362 = keras.layers.Average(name = 'Ave87362', )([in0Ave87362,in1Ave87362])
Res88725 = keras.layers.Reshape((1, 4), name = 'Res88725', )(Ave87362)
Con32678 = keras.layers.Conv1D(2, (1),strides=(12), padding='same', dilation_rate=(1), name = 'Con32678', )(Res88725)
model = tf.keras.models.Model(inputs=[in0Ave87362,in1Ave87362], outputs=Con32678)
w = model.get_layer('Con32678').get_weights() 
w[0] = np.array([[[0.3501, 0.2831], [0.6056, 0.9652], [0.1491, 0.1064], [0.0776, 0.1955]]])
w[1] = np.array([0, 0])
model.get_layer('Con32678').set_weights(w) 
in0Ave87362 = tf.constant([[[[0.4917, 0.5544], [0.5758, 0.8748]]]])
in1Ave87362 = tf.constant([[[[0.4766, 0.7272], [0.2824, 0.0039]]]])
print (np.array2string(model.predict([in0Ave87362,in1Ave87362],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Con32678.png')

LAve87362 = average_layer([[[[[0.4917, 0.5544], [0.5758, 0.8748]]]], [[[[0.4766, 0.7272], [0.2824, 0.0039]]]]], Ave87362), 
LRes88725 = reshape_layer(Ave87362, [1, 4], Res88725), 
LCon32678 = conv1D_layer(Res88725, 1,[[[0.3501, 0.2831], [0.6056, 0.9652], [0.1491, 0.1064], [0.0776, 0.1955]]],[0, 0], 12, true, 1, Con32678), 
exec_layers([LAve87362,LRes88725,LCon32678],["Ave87362","Res88725","Con32678"],Con32678,"Con32678")

Actual (Unparsed): [[[0.6556418, 0.8871122]]]

Expected (Unparsed): [[[0.655641765,0.88711219]]]

Actual:   [[[0.6557, 0.8872]]]

Expected: [[[0.6557, 0.8872]]]