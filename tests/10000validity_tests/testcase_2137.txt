import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Ave85175 = tf.keras.layers.Input(shape=([2, 2, 1]))
in1Ave85175 = tf.keras.layers.Input(shape=([2, 2, 1]))
in0GRU41824 = tf.keras.layers.Input(shape=([2, 3]))

Ave85175 = keras.layers.Average(name = 'Ave85175', )([in0Ave85175,in1Ave85175])
Res66984 = keras.layers.Reshape((2, 2), name = 'Res66984', )(Ave85175)
Fla85196 = keras.layers.Flatten(name = 'Fla85196', )(Res66984)
Res65712 = keras.layers.Reshape((4, 1), name = 'Res65712', )(Fla85196)
Glo9807 = keras.layers.GlobalMaxPool1D(name = 'Glo9807', )(Res65712)
Res83940 = keras.layers.Reshape((1, 1), name = 'Res83940', )(Glo9807)
Res62606 = keras.layers.Reshape((1, 1, 1), name = 'Res62606', )(Res83940)
Max81101 = keras.layers.MaxPool2D(pool_size=(1, 1), name = 'Max81101', )(Res62606)
Res52567 = keras.layers.Reshape((1, 1), name = 'Res52567', )(Max81101)
Zer60525 = keras.layers.ZeroPadding1D(padding=((2, 0)), name = 'Zer60525', )(Res52567)
GRU41824 = keras.layers.GRU(3,reset_after=True, recurrent_activation='sigmoid', name = 'GRU41824', )(in0GRU41824)
Res73902 = keras.layers.Reshape((3, 1), name = 'Res73902', )(GRU41824)
Up_32192 = keras.layers.UpSampling1D(size=(1), name = 'Up_32192', )(Res73902)
Sub64971 = keras.layers.Subtract(name = 'Sub64971', )([Zer60525,Up_32192])
model = tf.keras.models.Model(inputs=[in0Ave85175,in1Ave85175,in0GRU41824], outputs=Sub64971)
w = model.get_layer('GRU41824').get_weights() 
w[0] = np.array([[5, 8, 4, 9, 5, 7, 6, 9, 3], [6, 9, 10, 3, 8, 4, 5, 9, 8], [2, 1, 10, 8, 4, 7, 7, 8, 6]])
w[1] = np.array([[1, 9, 6, 7, 6, 5, 2, 9, 8], [9, 6, 5, 7, 2, 2, 5, 5, 5], [2, 8, 5, 7, 1, 9, 1, 4, 1]])
w[2] = np.array([[7, 2, 7, 1, 3, 6, 4, 5, 1], [9, 4, 6, 7, 8, 8, 7, 3, 1]])
model.get_layer('GRU41824').set_weights(w) 
in0Ave85175 = tf.constant([[[[0.6861], [0.6727]], [[0.8093], [0.7056]]]])
in1Ave85175 = tf.constant([[[[0.6247], [0.9652]], [[0.531], [0.4616]]]])
in0GRU41824 = tf.constant([[[5, 8, 4], [1, 6, 6]]])
print (np.array2string(model.predict([in0Ave85175,in1Ave85175,in0GRU41824],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Sub64971.png')

LAve85175 = average_layer([[[[[0.6861], [0.6727]], [[0.8093], [0.7056]]]], [[[[0.6247], [0.9652]], [[0.531], [0.4616]]]]], Ave85175), 
LRes66984 = reshape_layer(Ave85175, [2, 2], Res66984), 
LFla85196 = flatten_layer(Res66984, Fla85196), 
LRes65712 = reshape_layer(Fla85196, [4, 1], Res65712), 
LGlo9807 = global_max_pool1D_layer(Res65712, Glo9807), 
LRes83940 = reshape_layer(Glo9807, [1, 1], Res83940), 
LRes62606 = reshape_layer(Res83940, [1, 1, 1], Res62606), 
LMax81101 = max_pool2D_layer(Res62606, 1, 1, Max81101), 
LRes52567 = reshape_layer(Max81101, [1, 1], Res52567), 
LZer60525 = zero_padding1D_layer(Res52567, 2, 0, Zer60525), 
LGRU41824 = gru_layer([[[5, 8, 4], [1, 6, 6]]],[[5, 8, 4, 9, 5, 7, 6, 9, 3], [6, 9, 10, 3, 8, 4, 5, 9, 8], [2, 1, 10, 8, 4, 7, 7, 8, 6]],[[1, 9, 6, 7, 6, 5, 2, 9, 8], [9, 6, 5, 7, 2, 2, 5, 5, 5], [2, 8, 5, 7, 1, 9, 1, 4, 1]],[[7, 2, 7, 1, 3, 6, 4, 5, 1], [9, 4, 6, 7, 8, 8, 7, 3, 1]], true, GRU41824), 
LRes73902 = reshape_layer(GRU41824, [3, 1], Res73902), 
LUp_32192 = up_sampling1D_layer(Res73902, 1, Up_32192), 
LSub64971 = subtract_layer(Zer60525,Up_32192, Sub64971), 
exec_layers([LAve85175,LRes66984,LFla85196,LRes65712,LGlo9807,LRes83940,LRes62606,LMax81101,LRes52567,LZer60525,LGRU41824,LRes73902,LUp_32192,LSub64971],["Ave85175","Res66984","Fla85196","Res65712","Glo9807","Res83940","Res62606","Max81101","Res52567","Zer60525","GRU41824","Res73902","Up_32192","Sub64971"],Sub64971,"Sub64971")

Actual (Unparsed): [[[0.0000000], [0.0000000], [0.8189500]]]

Expected (Unparsed): [[[0.0],[0.0],[0.81895]]]

Actual:   [[[0], [0], [0.819]]]

Expected: [[[0], [0], [0.819]]]