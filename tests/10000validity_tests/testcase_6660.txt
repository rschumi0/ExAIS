import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Loc33098 = tf.keras.layers.Input(shape=([1, 1, 1]))

Loc33098 = keras.layers.LocallyConnected2D(2, (1, 1),strides=(5, 1), name = 'Loc33098', )(in0Loc33098)
Bat97486 = keras.layers.BatchNormalization(axis=1, epsilon=0.10433810249857348,  name = 'Bat97486', )(Loc33098)
model = tf.keras.models.Model(inputs=[in0Loc33098], outputs=Bat97486)
w = model.get_layer('Loc33098').get_weights() 
w[0] = np.array([[[0.2378, 0.3003]]])
w[1] = np.array([[[0, 0]]])
model.get_layer('Loc33098').set_weights(w) 
w = model.get_layer('Bat97486').get_weights() 
w[0] = np.array([0.8788])
w[1] = np.array([0.1528])
w[2] = np.array([0.496])
w[3] = np.array([0.4781])
model.get_layer('Bat97486').set_weights(w) 
in0Loc33098 = tf.constant([[[[0.4568]]]])
print (np.array2string(model.predict([in0Loc33098],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Bat97486.png')

LLoc33098 = locally_connected2D_layer([[[[0.4568]]]], 1, 1,[[[0.2378, 0.3003]]],[[[0, 0]]], 5, 1, Loc33098), 
LBat97486 = batch_normalization_layer(Loc33098, 1, 0.10433810249857348, [0.8788], [0.1528], [0.496], [0.4781], Bat97486), 
exec_layers([LLoc33098,LBat97486],["Loc33098","Bat97486"],Bat97486,"Bat97486")

Actual (Unparsed): [[[[-0.2932612, -0.2603858]]]]

Expected (Unparsed): [[[[-0.2932612131886746,-0.2603857960802201]]]]

Actual:   [[[[-0.2932, -0.2603]]]]

Expected: [[[[-0.2932, -0.2603]]]]