import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Mul77874 = tf.keras.layers.Input(shape=([2, 1]))
in1Mul77874 = tf.keras.layers.Input(shape=([2, 1]))
in0Con81448 = tf.keras.layers.Input(shape=([3, 5, 2]))
in0Zer9743 = tf.keras.layers.Input(shape=([1, 3, 3]))

Mul77874 = keras.layers.Multiply(name = 'Mul77874', )([in0Mul77874,in1Mul77874])
Res94265 = keras.layers.Reshape((2, 1, 1), name = 'Res94265', )(Mul77874)
Zer81665 = keras.layers.ZeroPadding2D(padding=((1, 0), (4, 0)), name = 'Zer81665', )(Res94265)
Con81448 = keras.layers.Concatenate(axis=3, name = 'Con81448', )([Zer81665,in0Con81448])
Zer9743 = keras.layers.ZeroPadding2D(padding=((1, 1), (1, 1)), name = 'Zer9743', )(in0Zer9743)
Min87981 = keras.layers.Minimum(name = 'Min87981', )([Con81448,Zer9743])
Con89186 = keras.layers.Conv2DTranspose(2, (1, 1),strides=(1, 1), padding='same', name = 'Con89186', )(Min87981)
Mas4000 = keras.layers.Masking(mask_value=1, name = 'Mas4000', )(Con89186)
model = tf.keras.models.Model(inputs=[in0Mul77874,in1Mul77874,in0Con81448,in0Zer9743], outputs=Mas4000)
w = model.get_layer('Con89186').get_weights() 
w[0] = np.array([[[[0.423, 0.8901, 0.0812], [0.3527, 0.7277, 0.7472]]]])
w[1] = np.array([0, 0])
model.get_layer('Con89186').set_weights(w) 
in0Mul77874 = tf.constant([[[0.8859], [0.1203]]])
in1Mul77874 = tf.constant([[[0.3935], [0.1896]]])
in0Con81448 = tf.constant([[[[0.347, 0.7705], [0.0388, 0.4697], [0.4239, 0.8964], [0.1727, 0.9652], [0.7556, 0.5845]], [[0.0934, 0.1603], [0.1947, 0.7105], [0.4363, 0.9534], [0.0639, 0.8469], [0.2639, 0.1546]], [[0.9626, 0.3552], [0.0268, 0.371], [0.2356, 0.3661], [0.7198, 0.0602], [0.2798, 0.3441]]]])
in0Zer9743 = tf.constant([[[[1.6863, 1.4114, 1.3524], [1.7729, 1.9016, 1.2613], [1.16, 1.6366, 1.7918]]]])
print (np.array2string(model.predict([in0Mul77874,in1Mul77874,in0Con81448,in0Zer9743],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Mas4000.png')

LMul77874 = multiply_layer([[[[0.8859], [0.1203]]], [[[0.3935], [0.1896]]]], Mul77874), 
LRes94265 = reshape_layer(Mul77874, [2, 1, 1], Res94265), 
LZer81665 = zero_padding2D_layer(Res94265, 1, 0, 4, 0, Zer81665), 
LCon81448 = concatenate_layer([Zer81665,[[[[0.347, 0.7705], [0.0388, 0.4697], [0.4239, 0.8964], [0.1727, 0.9652], [0.7556, 0.5845]], [[0.0934, 0.1603], [0.1947, 0.7105], [0.4363, 0.9534], [0.0639, 0.8469], [0.2639, 0.1546]], [[0.9626, 0.3552], [0.0268, 0.371], [0.2356, 0.3661], [0.7198, 0.0602], [0.2798, 0.3441]]]]], 3, Con81448), 
LZer9743 = zero_padding2D_layer([[[[1.6863, 1.4114, 1.3524], [1.7729, 1.9016, 1.2613], [1.16, 1.6366, 1.7918]]]], 1, 1, 1, 1, Zer9743), 
LMin87981 = minimum_layer([Con81448,Zer9743], Min87981), 
LCon89186 = conv2D_transpose_layer(Min87981, 1, 1,[[[[0.423, 0.8901, 0.0812], [0.3527, 0.7277, 0.7472]]]],[0, 0], 1, 1, true, Con89186), 
LMas4000 = masking_layer(Con89186, 1, Mas4000), 
exec_layers([LMul77874,LRes94265,LZer81665,LCon81448,LZer9743,LMin87981,LCon89186,LMas4000],["Mul77874","Res94265","Zer81665","Con81448","Zer9743","Min87981","Con89186","Mas4000"],Mas4000,"Mas4000")

Actual (Unparsed): [[[[0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000]], [[0.0000000, 0.0000000], [0.2309951, 0.6725688], [0.4657667, 1.0298760], [0.1256457, 0.6793037], [0.0000000, 0.0000000]], [[0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000]]]]

Expected (Unparsed): [[[[0.0,0.0],[0.0,0.0],[0.0,0.0],[0.0,0.0],[0.0,0.0]],[[0.0,0.0],[0.23099507000000002,0.6725687899999999],[0.46576671000000003,1.02987599],[0.12564567,0.67930371],[0.0,0.0]],[[0.0,0.0],[0.0,0.0],[0.0,0.0],[0.0,0.0],[0.0,0.0]]]]

Actual:   [[[[0, 0], [0, 0], [0, 0], [0, 0], [0, 0]], [[0, 0], [0.231, 0.6726], [0.4658, 1.0299], [0.1257, 0.6794], [0, 0]], [[0, 0], [0, 0], [0, 0], [0, 0], [0, 0]]]]

Expected: [[[[0, 0], [0, 0], [0, 0], [0, 0], [0, 0]], [[0, 0], [0.231, 0.6726], [0.4658, 1.0299], [0.1257, 0.6794], [0, 0]], [[0, 0], [0, 0], [0, 0], [0, 0], [0, 0]]]]