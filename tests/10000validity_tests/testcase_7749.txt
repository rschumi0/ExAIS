import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Min95935 = tf.keras.layers.Input(shape=([2, 2, 1, 2]))
in1Min95935 = tf.keras.layers.Input(shape=([2, 2, 1, 2]))
in0Up_97591 = tf.keras.layers.Input(shape=([4, 3]))
in0Con61201 = tf.keras.layers.Input(shape=([2, 3]))

Min95935 = keras.layers.Minimum(name = 'Min95935', )([in0Min95935,in1Min95935])
Res4422 = keras.layers.Reshape((2, 2, 2), name = 'Res4422', )(Min95935)
Res3726 = keras.layers.Reshape((2, 4), name = 'Res3726', )(Res4422)
Up_97591 = keras.layers.UpSampling1D(size=(1), name = 'Up_97591', )(in0Up_97591)
Res43331 = keras.layers.Reshape((4, 3, 1), name = 'Res43331', )(Up_97591)
Glo96768 = keras.layers.GlobalMaxPool2D(name = 'Glo96768', )(Res43331)
Res60044 = keras.layers.Reshape((1, 1), name = 'Res60044', )(Glo96768)
Max79289 = keras.layers.MaxPool1D(pool_size=(1), strides=(1), padding='same', name = 'Max79289', )(Res60044)
Zer51741 = keras.layers.ZeroPadding1D(padding=((1, 0)), name = 'Zer51741', )(Max79289)
Con61201 = keras.layers.Concatenate(axis=2, name = 'Con61201', )([Zer51741,in0Con61201])
Add7053 = keras.layers.Add(name = 'Add7053', )([Res3726,Con61201])
Res83418 = keras.layers.Reshape((2, 4, 1), name = 'Res83418', )(Add7053)
Up_71431 = keras.layers.UpSampling2D(size=(2, 2), name = 'Up_71431', )(Res83418)
Sof27063 = keras.layers.Softmax(axis=1, name = 'Sof27063', )(Up_71431)
model = tf.keras.models.Model(inputs=[in0Min95935,in1Min95935,in0Up_97591,in0Con61201], outputs=Sof27063)
in0Min95935 = tf.constant([[[[[0.0039, 0.3837]], [[0.568, 0.0795]]], [[[0.4652, 0.3171]], [[0.7863, 0.3879]]]]])
in1Min95935 = tf.constant([[[[[0.9735, 0.1599]], [[0.2861, 0.5173]]], [[[0.1177, 0.8618]], [[0.0425, 0.7521]]]]])
in0Up_97591 = tf.constant([[[1.4358, 1.456, 1.1831], [1.7181, 1.7468, 1.8014], [1.8948, 1.1757, 1.0099], [1.6444, 1.7037, 1.231]]])
in0Con61201 = tf.constant([[[0.7871, 0.3491, 0.3995], [0.3721, 0.0006, 0.2598]]])
print (np.array2string(model.predict([in0Min95935,in1Min95935,in0Up_97591,in0Con61201],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Sof27063.png')

LMin95935 = minimum_layer([[[[[[0.0039, 0.3837]], [[0.568, 0.0795]]], [[[0.4652, 0.3171]], [[0.7863, 0.3879]]]]], [[[[[0.9735, 0.1599]], [[0.2861, 0.5173]]], [[[0.1177, 0.8618]], [[0.0425, 0.7521]]]]]], Min95935), 
LRes4422 = reshape_layer(Min95935, [2, 2, 2], Res4422), 
LRes3726 = reshape_layer(Res4422, [2, 4], Res3726), 
LUp_97591 = up_sampling1D_layer([[[1.4358, 1.456, 1.1831], [1.7181, 1.7468, 1.8014], [1.8948, 1.1757, 1.0099], [1.6444, 1.7037, 1.231]]], 1, Up_97591), 
LRes43331 = reshape_layer(Up_97591, [4, 3, 1], Res43331), 
LGlo96768 = global_max_pool2D_layer(Res43331, Glo96768), 
LRes60044 = reshape_layer(Glo96768, [1, 1], Res60044), 
LMax79289 = max_pool1D_layer(Res60044, 1, 1, true, Max79289), 
LZer51741 = zero_padding1D_layer(Max79289, 1, 0, Zer51741), 
LCon61201 = concatenate_layer([Zer51741,[[[0.7871, 0.3491, 0.3995], [0.3721, 0.0006, 0.2598]]]], 2, Con61201), 
LAdd7053 = add_layer([Res3726,Con61201], Add7053), 
LRes83418 = reshape_layer(Add7053, [2, 4, 1], Res83418), 
LUp_71431 = up_sampling2D_layer(Res83418, 2, 2, Up_71431), 
LSof27063 = softmax_layer(Up_71431, 1, Sof27063), 
exec_layers([LMin95935,LRes4422,LRes3726,LUp_97591,LRes43331,LGlo96768,LRes60044,LMax79289,LZer51741,LCon61201,LAdd7053,LRes83418,LUp_71431,LSof27063],["Min95935","Res4422","Res3726","Up_97591","Res43331","Glo96768","Res60044","Max79289","Zer51741","Con61201","Add7053","Res83418","Up_71431","Sof27063"],Sof27063,"Sof27063")

Actual (Unparsed): [[[[0.0591515], [0.0591515], [0.2820477], [0.2820477], [0.3219234], [0.3219234], [0.2289624], [0.2289624]], [[0.0591515], [0.0591515], [0.2820477], [0.2820477], [0.3219234], [0.3219234], [0.2289624], [0.2289624]], [[0.4408485], [0.4408485], [0.2179523], [0.2179523], [0.1780766], [0.1780766], [0.2710376], [0.2710376]], [[0.4408485], [0.4408485], [0.2179523], [0.2179523], [0.1780766], [0.1780766], [0.2710376], [0.2710376]]]]

Expected (Unparsed): [[[[0.05915146503879696],[0.05915146503879696],[0.28204770318892197],[0.28204770318892197],[0.3219234190046566],[0.3219234190046566],[0.22896237005225728],[0.22896237005225728]],[[0.05915146503879696],[0.05915146503879696],[0.28204770318892197],[0.28204770318892197],[0.3219234190046566],[0.3219234190046566],[0.22896237005225728],[0.22896237005225728]],[[0.440848534961203],[0.440848534961203],[0.217952296811078],[0.217952296811078],[0.17807658099534343],[0.17807658099534343],[0.2710376299477427],[0.2710376299477427]],[[0.440848534961203],[0.440848534961203],[0.217952296811078],[0.217952296811078],[0.17807658099534343],[0.17807658099534343],[0.2710376299477427],[0.2710376299477427]]]]

Actual:   [[[[0.0592], [0.0592], [0.2821], [0.2821], [0.322], [0.322], [0.229], [0.229]], [[0.0592], [0.0592], [0.2821], [0.2821], [0.322], [0.322], [0.229], [0.229]], [[0.4409], [0.4409], [0.218], [0.218], [0.1781], [0.1781], [0.2711], [0.2711]], [[0.4409], [0.4409], [0.218], [0.218], [0.1781], [0.1781], [0.2711], [0.2711]]]]

Expected: [[[[0.0592], [0.0592], [0.2821], [0.2821], [0.322], [0.322], [0.229], [0.229]], [[0.0592], [0.0592], [0.2821], [0.2821], [0.322], [0.322], [0.229], [0.229]], [[0.4409], [0.4409], [0.218], [0.218], [0.1781], [0.1781], [0.2711], [0.2711]], [[0.4409], [0.4409], [0.218], [0.218], [0.1781], [0.1781], [0.2711], [0.2711]]]]