import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Zer86600 = tf.keras.layers.Input(shape=([4, 3]))
in0Con43064 = tf.keras.layers.Input(shape=([8, 3, 1]))
in0Mul15453 = tf.keras.layers.Input(shape=([1, 1, 2]))
in1Mul15453 = tf.keras.layers.Input(shape=([1, 1, 2]))

Zer86600 = keras.layers.ZeroPadding1D(padding=((1, 1)), name = 'Zer86600', )(in0Zer86600)
Zer46434 = keras.layers.ZeroPadding1D(padding=((1, 1)), name = 'Zer46434', )(Zer86600)
Res79546 = keras.layers.Reshape((8, 3, 1), name = 'Res79546', )(Zer46434)
Con43064 = keras.layers.Concatenate(axis=3, name = 'Con43064', )([Res79546,in0Con43064])
Mul15453 = keras.layers.Multiply(name = 'Mul15453', )([in0Mul15453,in1Mul15453])
Zer91182 = keras.layers.ZeroPadding2D(padding=((7, 0), (2, 0)), name = 'Zer91182', )(Mul15453)
Max20930 = keras.layers.Maximum(name = 'Max20930', )([Con43064,Zer91182])
Res37864 = keras.layers.Reshape((8, 6), name = 'Res37864', )(Max20930)
Sep20431 = keras.layers.SeparableConv1D(2, (4),strides=(1), padding='valid', name = 'Sep20431', )(Res37864)
model = tf.keras.models.Model(inputs=[in0Zer86600,in0Con43064,in0Mul15453,in1Mul15453], outputs=Sep20431)
w = model.get_layer('Sep20431').get_weights() 
w[0] = np.array([[[0.5375], [0.411], [0.9872], [0.0008], [0.5655], [0.5221]], [[0.117], [0.2076], [0.6778], [0.4824], [0.9735], [0.4487]], [[0.1349], [0.7595], [0.6671], [0.0854], [0.1509], [0.3906]], [[0.7255], [0.1737], [0.6881], [0.0514], [0.4768], [0.3755]]])
w[1] = np.array([[[0.0351, 0.4649], [0.1324, 0.777], [0.2563, 0.0539], [0.063, 0.8512], [0.6098, 0.8525], [0.1002, 0.6557]]])
w[2] = np.array([0, 0])
model.get_layer('Sep20431').set_weights(w) 
in0Zer86600 = tf.constant([[[1.1105, 1.0475, 1.3975], [1.4968, 1.8167, 1.6961], [1.2661, 1.9913, 1.6912], [1.8486, 1.6465, 1.6641]]])
in0Con43064 = tf.constant([[[[0.1655], [0.9402], [0.3094]], [[0.234], [0.3588], [0.1646]], [[0.4461], [0.9496], [0.595]], [[0.4243], [0.7827], [0.2655]], [[0.4578], [0.8862], [0.3357]], [[0.3639], [0.313], [0.26]], [[0.6948], [0.4234], [0.3595]], [[0.3757], [0.3856], [0.4479]]]])
in0Mul15453 = tf.constant([[[[0.0863, 0.7168]]]])
in1Mul15453 = tf.constant([[[[0.0936, 0.0805]]]])
print (np.array2string(model.predict([in0Zer86600,in0Con43064,in0Mul15453,in1Mul15453],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Sep20431.png')

LZer86600 = zero_padding1D_layer([[[1.1105, 1.0475, 1.3975], [1.4968, 1.8167, 1.6961], [1.2661, 1.9913, 1.6912], [1.8486, 1.6465, 1.6641]]], 1, 1, Zer86600), 
LZer46434 = zero_padding1D_layer(Zer86600, 1, 1, Zer46434), 
LRes79546 = reshape_layer(Zer46434, [8, 3, 1], Res79546), 
LCon43064 = concatenate_layer([Res79546,[[[[0.1655], [0.9402], [0.3094]], [[0.234], [0.3588], [0.1646]], [[0.4461], [0.9496], [0.595]], [[0.4243], [0.7827], [0.2655]], [[0.4578], [0.8862], [0.3357]], [[0.3639], [0.313], [0.26]], [[0.6948], [0.4234], [0.3595]], [[0.3757], [0.3856], [0.4479]]]]], 3, Con43064), 
LMul15453 = multiply_layer([[[[[0.0863, 0.7168]]]], [[[[0.0936, 0.0805]]]]], Mul15453), 
LZer91182 = zero_padding2D_layer(Mul15453, 7, 0, 2, 0, Zer91182), 
LMax20930 = maximum_layer([Con43064,Zer91182], Max20930), 
LRes37864 = reshape_layer(Max20930, [8, 6], Res37864), 
LSep20431 = separable_conv1D_layer(Res37864, 4,[[[[0.5375], [0.411], [0.9872], [0.0008], [0.5655], [0.5221]], [[0.117], [0.2076], [0.6778], [0.4824], [0.9735], [0.4487]], [[0.1349], [0.7595], [0.6671], [0.0854], [0.1509], [0.3906]], [[0.7255], [0.1737], [0.6881], [0.0514], [0.4768], [0.3755]]],[[[0.0351, 0.4649], [0.1324, 0.777], [0.2563, 0.0539], [0.063, 0.8512], [0.6098, 0.8525], [0.1002, 0.6557]]]],[0, 0], 1, false, Sep20431), 
exec_layers([LZer86600,LZer46434,LRes79546,LCon43064,LMul15453,LZer91182,LMax20930,LRes37864,LSep20431],["Zer86600","Zer46434","Res79546","Con43064","Mul15453","Zer91182","Max20930","Res37864","Sep20431"],Sep20431,"Sep20431")

Actual (Unparsed): [[[1.3101215, 2.5832026], [2.5376007, 4.1509325], [3.6058445, 5.6540235], [3.0422307, 4.4910637], [2.5814475, 4.0188562]]]

Expected (Unparsed): [[[1.310121540891,2.583202569525],[2.5376006557370006,4.150932443418],[3.6058444899419997,5.654023461558998],[3.0422307307490004,4.491063684336],[2.5814475080340755,4.018856137534961]]]

Actual:   [[[1.3102, 2.5833], [2.5377, 4.151], [3.6059, 5.6541], [3.0423, 4.4911], [2.5815, 4.0189]]]

Expected: [[[1.3102, 2.5833], [2.5377, 4.151], [3.6059, 5.6541], [3.0423, 4.4911], [2.5815, 4.0189]]]