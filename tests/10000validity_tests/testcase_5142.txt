import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Sub28471 = tf.keras.layers.Input(shape=([2, 2, 2]))
in1Sub28471 = tf.keras.layers.Input(shape=([2, 2, 2]))

Sub28471 = keras.layers.Subtract(name = 'Sub28471', )([in0Sub28471,in1Sub28471])
Bat65457 = keras.layers.BatchNormalization(axis=1, epsilon=0.4993569626068941,  name = 'Bat65457', )(Sub28471)
model = tf.keras.models.Model(inputs=[in0Sub28471,in1Sub28471], outputs=Bat65457)
w = model.get_layer('Bat65457').get_weights() 
w[0] = np.array([0.6749, 0.6101])
w[1] = np.array([0.9181, 0.7787])
w[2] = np.array([0.2791, 0.9232])
w[3] = np.array([0.4551, 0.1669])
model.get_layer('Bat65457').set_weights(w) 
in0Sub28471 = tf.constant([[[[0.3533, 0.4812], [0.3208, 0.9201]], [[0.3656, 0.7563], [0.484, 0.5123]]]])
in1Sub28471 = tf.constant([[[[0.5666, 0.9636], [0.9621, 0.7291]], [[0.2064, 0.3103], [0.6715, 0.6861]]]])
print (np.array2string(model.predict([in0Sub28471,in1Sub28471],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Bat65457.png')

LSub28471 = subtract_layer([[[[0.3533, 0.4812], [0.3208, 0.9201]], [[0.3656, 0.7563], [0.484, 0.5123]]]], [[[[0.5666, 0.9636], [0.9621, 0.7291]], [[0.2064, 0.3103], [0.6715, 0.6861]]]], Sub28471), 
LBat65457 = batch_normalization_layer(Sub28471, 1, 0.4993569626068941, [0.6749, 0.6101], [0.9181, 0.7787], [0.2791, 0.9232], [0.4551, 0.1669], Bat65457), 
exec_layers([LSub28471,LBat65457],["Sub28471","Bat65457"],Bat65457,"Bat65457")

Actual (Unparsed): [[[[0.5779431, 0.3920450], [0.2822746, 0.8572393]], [[0.2076508, 0.4220185], [-0.0514889, -0.0412489]]]]

Expected (Unparsed): [[[[0.5779430904040865,0.39204499054165687],[0.28227461496328443,0.8572392694244517]],[[0.20765083178911992,0.4220185038347748],[-0.051488888916000786,-0.041248871109077934]]]]

Actual:   [[[[0.578, 0.3921], [0.2823, 0.8573]], [[0.2077, 0.4221], [-0.0514, -0.0412]]]]

Expected: [[[[0.578, 0.3921], [0.2823, 0.8573]], [[0.2077, 0.4221], [-0.0514, -0.0412]]]]