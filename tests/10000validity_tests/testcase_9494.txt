import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Loc96089 = tf.keras.layers.Input(shape=([2, 1]))
in0Con87947 = tf.keras.layers.Input(shape=([1, 2]))
in0Con79894 = tf.keras.layers.Input(shape=([1, 2, 1]))

Loc96089 = keras.layers.LocallyConnected1D(4, (1),strides=(2), name = 'Loc96089', )(in0Loc96089)
Res51439 = keras.layers.Reshape((1, 4, 1), name = 'Res51439', )(Loc96089)
Res18413 = keras.layers.Reshape((1, 4, 1, 1), name = 'Res18413', )(Res51439)
Cro51215 = keras.layers.Cropping3D(cropping=((0, 0), (1, 1), (0, 0)), name = 'Cro51215', )(Res18413)
Res82674 = keras.layers.Reshape((1, 2, 1), name = 'Res82674', )(Cro51215)
Res86784 = keras.layers.Reshape((1, 2), name = 'Res86784', )(Res82674)
Con87947 = keras.layers.Concatenate(axis=2, name = 'Con87947', )([Res86784,in0Con87947])
Con79894 = keras.layers.Conv2D(2, (1, 2),strides=(7, 1), padding='same', dilation_rate=(1, 1), name = 'Con79894', )(in0Con79894)
Res25543 = keras.layers.Reshape((1, 4), name = 'Res25543', )(Con79894)
Dot31245 = keras.layers.Dot(axes=(2, 2), name = 'Dot31245', )([Con87947,Res25543])
Res78184 = keras.layers.Reshape((1, 1, 1), name = 'Res78184', )(Dot31245)
Zer62565 = keras.layers.ZeroPadding2D(padding=((1, 1), (1, 1)), name = 'Zer62565', )(Res78184)
model = tf.keras.models.Model(inputs=[in0Loc96089,in0Con87947,in0Con79894], outputs=Zer62565)
w = model.get_layer('Loc96089').get_weights() 
w[0] = np.array([[[0.4233, 0.6093, 0.8191, 0.3759]]])
w[1] = np.array([[0, 0, 0, 0]])
model.get_layer('Loc96089').set_weights(w) 
w = model.get_layer('Con79894').get_weights() 
w[0] = np.array([[[[0.4522, 0.8585]], [[0.2438, 0.3634]]]])
w[1] = np.array([0, 0])
model.get_layer('Con79894').set_weights(w) 
in0Loc96089 = tf.constant([[[0.4874], [0.2652]]])
in0Con87947 = tf.constant([[[0.7072, 0.0725]]])
in0Con79894 = tf.constant([[[[0.2854], [0.0744]]]])
print (np.array2string(model.predict([in0Loc96089,in0Con87947,in0Con79894],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Zer62565.png')

LLoc96089 = locally_connected1D_layer([[[0.4874], [0.2652]]], 1,[[[0.4233, 0.6093, 0.8191, 0.3759]]],[[0, 0, 0, 0]], 2, Loc96089), 
LRes51439 = reshape_layer(Loc96089, [1, 4, 1], Res51439), 
LRes18413 = reshape_layer(Res51439, [1, 4, 1, 1], Res18413), 
LCro51215 = cropping3D_layer(Res18413, 0, 0, 1, 1, 0, 0, Cro51215), 
LRes82674 = reshape_layer(Cro51215, [1, 2, 1], Res82674), 
LRes86784 = reshape_layer(Res82674, [1, 2], Res86784), 
LCon87947 = concatenate_layer([Res86784,[[[0.7072, 0.0725]]]], 2, Con87947), 
LCon79894 = conv2D_layer([[[[0.2854], [0.0744]]]], 1, 2,[[[[0.4522, 0.8585]], [[0.2438, 0.3634]]]],[0, 0], 7, 1, true, 1, 1, Con79894), 
LRes25543 = reshape_layer(Con79894, [1, 4], Res25543), 
LDot31245 = dot_layer(Con87947,Res25543, 2, 2, Dot31245), 
LRes78184 = reshape_layer(Dot31245, [1, 1, 1], Res78184), 
LZer62565 = zero_padding2D_layer(Res78184, 1, 1, 1, 1, Zer62565), 
exec_layers([LLoc96089,LRes51439,LRes18413,LCro51215,LRes82674,LRes86784,LCon87947,LCon79894,LRes25543,LDot31245,LRes78184,LZer62565],["Loc96089","Res51439","Res18413","Cro51215","Res82674","Res86784","Con87947","Con79894","Res25543","Dot31245","Res78184","Zer62565"],Zer62565,"Zer62565")

Actual (Unparsed): [[[[0.0000000], [0.0000000], [0.0000000]], [[0.0000000], [0.1807484], [0.0000000]], [[0.0000000], [0.0000000], [0.0000000]]]]

Expected (Unparsed): [[[[0],[0],[0]],[[0],[0.1807484326353244],[0]],[[0],[0],[0]]]]

Actual:   [[[[0], [0], [0]], [[0], [0.1808], [0]], [[0], [0], [0]]]]

Expected: [[[[0], [0], [0]], [[0], [0.1808], [0]], [[0], [0], [0]]]]