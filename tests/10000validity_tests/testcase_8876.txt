import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Sof13100 = tf.keras.layers.Input(shape=([1, 1, 2, 1]))

Sof13100 = keras.layers.Softmax(axis=1, name = 'Sof13100', input_shape=(1, 1, 2, 1))(in0Sof13100)
Res79532 = keras.layers.Reshape((1, 1, 2), name = 'Res79532', )(Sof13100)
Con37570 = keras.layers.Conv2DTranspose(3, (1, 1),strides=(1, 1), padding='same', name = 'Con37570', )(Res79532)
Res1211 = keras.layers.Reshape((1, 3), name = 'Res1211', )(Con37570)
Glo95033 = keras.layers.GlobalAveragePooling1D(name = 'Glo95033', )(Res1211)
model = tf.keras.models.Model(inputs=[in0Sof13100], outputs=Glo95033)
w = model.get_layer('Con37570').get_weights() 
w[0] = np.array([[[[0.0937, 0.9048], [0.7575, 0.0423], [0.9552, 0.1076]]]])
w[1] = np.array([0, 0, 0])
model.get_layer('Con37570').set_weights(w) 
in0Sof13100 = tf.constant([[[[[0.5237], [0.9858]]]]])
print (np.array2string(model.predict([in0Sof13100],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Glo95033.png')

LSof13100 = softmax_layer([[[[[0.5237], [0.9858]]]]], 1, Sof13100), 
LRes79532 = reshape_layer(Sof13100, [1, 1, 2], Res79532), 
LCon37570 = conv2D_transpose_layer(Res79532, 1, 1,[[[[0.0937, 0.9048], [0.7575, 0.0423], [0.9552, 0.1076]]]],[0, 0, 0], 1, 1, true, Con37570), 
LRes1211 = reshape_layer(Con37570, [1, 3], Res1211), 
LGlo95033 = global_average_pooling1D_layer(Res1211, Glo95033), 
exec_layers([LSof13100,LRes79532,LCon37570,LRes1211,LGlo95033],["Sof13100","Res79532","Con37570","Res1211","Glo95033"],Glo95033,"Glo95033")

Actual (Unparsed): [[0.9985000, 0.7998000, 1.0628000]]

Expected (Unparsed): [[0.9985,0.7998,1.0628]]

Actual:   [[0.9985, 0.7998, 1.0628]]

Expected: [[0.9985, 0.7998, 1.0628]]