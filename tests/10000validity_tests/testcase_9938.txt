import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Ave22002 = tf.keras.layers.Input(shape=([1, 1, 2, 1]))
in1Ave22002 = tf.keras.layers.Input(shape=([1, 1, 2, 1]))

Ave22002 = keras.layers.Average(name = 'Ave22002', )([in0Ave22002,in1Ave22002])
Den30890 = keras.layers.Dense(4,name = 'Den30890', )(Ave22002)
model = tf.keras.models.Model(inputs=[in0Ave22002,in1Ave22002], outputs=Den30890)
w = model.get_layer('Den30890').get_weights() 
w[0] = np.array([[0.6059, 0.9446, 0.6349, 0.0618]])
w[1] = np.array([0.718, 0.6823, 0.021, 0.4334])
model.get_layer('Den30890').set_weights(w) 
in0Ave22002 = tf.constant([[[[[0.3184], [0.5067]]]]])
in1Ave22002 = tf.constant([[[[[0.6387], [0.5742]]]]])
print (np.array2string(model.predict([in0Ave22002,in1Ave22002],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Den30890.png')

LAve22002 = average_layer([[[[[[0.3184], [0.5067]]]]], [[[[[0.6387], [0.5742]]]]]], Ave22002), 
LDen30890 = dense_layer(Ave22002, [[0.6059, 0.9446, 0.6349, 0.0618]],[0.718, 0.6823, 0.021, 0.4334], Den30890), 
exec_layers([LAve22002,LDen30890],["Ave22002","Den30890"],Den30890,"Den30890")

Actual (Unparsed): [[[[[1.0079534, 1.1343383, 0.3248314, 0.4629744], [1.0454586, 1.1928090, 0.3641317, 0.4667998]]]]]

Expected (Unparsed): [[[[[1.007953445,1.13433833,0.324831395,0.46297439],[1.045458655,1.19280907,0.3641317050000001,0.46679981000000004]]]]]

Actual:   [[[[[1.008, 1.1344, 0.3249, 0.463], [1.0455, 1.1929, 0.3642, 0.4668]]]]]

Expected: [[[[[1.008, 1.1344, 0.3249, 0.463], [1.0455, 1.1929, 0.3642, 0.4668]]]]]