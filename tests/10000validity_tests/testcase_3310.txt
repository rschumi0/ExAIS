import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Min98351 = tf.keras.layers.Input(shape=([2, 2, 1, 2]))
in1Min98351 = tf.keras.layers.Input(shape=([2, 2, 1, 2]))
in0Zer37909 = tf.keras.layers.Input(shape=([1, 4]))
in0Up_40107 = tf.keras.layers.Input(shape=([1, 1, 2, 1]))
in0Con23792 = tf.keras.layers.Input(shape=([11]))

Min98351 = keras.layers.Minimum(name = 'Min98351', )([in0Min98351,in1Min98351])
Res24956 = keras.layers.Reshape((2, 2, 2), name = 'Res24956', )(Min98351)
Res56401 = keras.layers.Reshape((2, 4), name = 'Res56401', )(Res24956)
Zer27023 = keras.layers.ZeroPadding1D(padding=((1, 0)), name = 'Zer27023', )(Res56401)
Zer37909 = keras.layers.ZeroPadding1D(padding=((1, 1)), name = 'Zer37909', )(in0Zer37909)
Sub91867 = keras.layers.Subtract(name = 'Sub91867', )([Zer27023,Zer37909])
Fla16993 = keras.layers.Flatten(name = 'Fla16993', )(Sub91867)
Up_40107 = keras.layers.UpSampling3D(size=(1, 2, 2), name = 'Up_40107', )(in0Up_40107)
Glo73431 = keras.layers.GlobalMaxPool3D(name = 'Glo73431', )(Up_40107)
Res75893 = keras.layers.Reshape((1, 1), name = 'Res75893', )(Glo73431)
Res7356 = keras.layers.Reshape((1, 1, 1), name = 'Res7356', )(Res75893)
Glo66036 = keras.layers.GlobalMaxPool2D(name = 'Glo66036', )(Res7356)
Con23792 = keras.layers.Concatenate(axis=1, name = 'Con23792', )([Glo66036,in0Con23792])
Max95996 = keras.layers.Maximum(name = 'Max95996', )([Fla16993,Con23792])
model = tf.keras.models.Model(inputs=[in0Min98351,in1Min98351,in0Zer37909,in0Up_40107,in0Con23792], outputs=Max95996)
in0Min98351 = tf.constant([[[[[0.7214, 0.8665]], [[0.7558, 0.5109]]], [[[0.1574, 0.3303]], [[0.4911, 0.2748]]]]])
in1Min98351 = tf.constant([[[[[0.4871, 0.9834]], [[0.0748, 0.1408]]], [[[0.671, 0.3937]], [[0.916, 0.5703]]]]])
in0Zer37909 = tf.constant([[[1.1979, 1.904, 1.7861, 1.6844]]])
in0Up_40107 = tf.constant([[[[[1.2919], [1.2971]]]]])
in0Con23792 = tf.constant([[0.3408, 0.5916, 0.658, 0.7112, 0.7913, 0.2049, 0.6956, 0.6104, 0.88, 0.0426, 0.2582]])
print (np.array2string(model.predict([in0Min98351,in1Min98351,in0Zer37909,in0Up_40107,in0Con23792],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Max95996.png')

LMin98351 = minimum_layer([[[[[[0.7214, 0.8665]], [[0.7558, 0.5109]]], [[[0.1574, 0.3303]], [[0.4911, 0.2748]]]]], [[[[[0.4871, 0.9834]], [[0.0748, 0.1408]]], [[[0.671, 0.3937]], [[0.916, 0.5703]]]]]], Min98351), 
LRes24956 = reshape_layer(Min98351, [2, 2, 2], Res24956), 
LRes56401 = reshape_layer(Res24956, [2, 4], Res56401), 
LZer27023 = zero_padding1D_layer(Res56401, 1, 0, Zer27023), 
LZer37909 = zero_padding1D_layer([[[1.1979, 1.904, 1.7861, 1.6844]]], 1, 1, Zer37909), 
LSub91867 = subtract_layer(Zer27023,Zer37909, Sub91867), 
LFla16993 = flatten_layer(Sub91867, Fla16993), 
LUp_40107 = up_sampling3D_layer([[[[[1.2919], [1.2971]]]]], 1, 2, 2, Up_40107), 
LGlo73431 = global_max_pool3D_layer(Up_40107, Glo73431), 
LRes75893 = reshape_layer(Glo73431, [1, 1], Res75893), 
LRes7356 = reshape_layer(Res75893, [1, 1, 1], Res7356), 
LGlo66036 = global_max_pool2D_layer(Res7356, Glo66036), 
LCon23792 = concatenate_layer([Glo66036,[[0.3408, 0.5916, 0.658, 0.7112, 0.7913, 0.2049, 0.6956, 0.6104, 0.88, 0.0426, 0.2582]]], 1, Con23792), 
LMax95996 = maximum_layer([Fla16993,Con23792], Max95996), 
exec_layers([LMin98351,LRes24956,LRes56401,LZer27023,LZer37909,LSub91867,LFla16993,LUp_40107,LGlo73431,LRes75893,LRes7356,LGlo66036,LCon23792,LMax95996],["Min98351","Res24956","Res56401","Zer27023","Zer37909","Sub91867","Fla16993","Up_40107","Glo73431","Res75893","Res7356","Glo66036","Con23792","Max95996"],Max95996,"Max95996")

Actual (Unparsed): [[1.2970999, 0.3408000, 0.5916000, 0.6580000, 0.7112000, 0.7913000, 0.2049000, 0.6956000, 0.6104000, 0.8800000, 0.4911000, 0.2748000]]

Expected (Unparsed): [[1.2971,0.3408,0.5916,0.658,0.7112,0.7913,0.2049,0.6956,0.6104,0.88,0.4911,0.2748]]

Actual:   [[1.2971, 0.3408, 0.5916, 0.658, 0.7112, 0.7913, 0.2049, 0.6956, 0.6104, 0.88, 0.4911, 0.2748]]

Expected: [[1.2971, 0.3408, 0.5916, 0.658, 0.7112, 0.7913, 0.2049, 0.6956, 0.6104, 0.88, 0.4911, 0.2748]]