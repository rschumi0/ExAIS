import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Mul54757 = tf.keras.layers.Input(shape=([2, 1, 2]))
in1Mul54757 = tf.keras.layers.Input(shape=([2, 1, 2]))
in0Glo71230 = tf.keras.layers.Input(shape=([2, 2, 1, 1]))
in0Sim40527 = tf.keras.layers.Input(shape=([3, 3]))

Mul54757 = keras.layers.Multiply(name = 'Mul54757', )([in0Mul54757,in1Mul54757])
Glo34476 = keras.layers.GlobalAveragePooling2D(name = 'Glo34476', )(Mul54757)
Res40136 = keras.layers.Reshape((2, 1), name = 'Res40136', )(Glo34476)
Res80538 = keras.layers.Reshape((2, 1, 1), name = 'Res80538', )(Res40136)
Zer46612 = keras.layers.ZeroPadding2D(padding=((2, 0), (0, 0)), name = 'Zer46612', )(Res80538)
Glo71230 = keras.layers.GlobalAveragePooling3D(name = 'Glo71230', )(in0Glo71230)
Res63027 = keras.layers.Reshape((1, 1), name = 'Res63027', )(Glo71230)
Zer90647 = keras.layers.ZeroPadding1D(padding=((1, 0)), name = 'Zer90647', )(Res63027)
Sim40527 = keras.layers.SimpleRNN(3,name = 'Sim40527', )(in0Sim40527)
Res5905 = keras.layers.Reshape((3, 1), name = 'Res5905', )(Sim40527)
Cro21509 = keras.layers.Cropping1D(cropping=((0, 1)), name = 'Cro21509', )(Res5905)
Sub43659 = keras.layers.Subtract(name = 'Sub43659', )([Zer90647,Cro21509])
Res95531 = keras.layers.Reshape((2, 1, 1), name = 'Res95531', )(Sub43659)
Up_99585 = keras.layers.UpSampling2D(size=(2, 1), name = 'Up_99585', )(Res95531)
Mul30030 = keras.layers.Multiply(name = 'Mul30030', )([Zer46612,Up_99585])
model = tf.keras.models.Model(inputs=[in0Mul54757,in1Mul54757,in0Glo71230,in0Sim40527], outputs=Mul30030)
w = model.get_layer('Sim40527').get_weights() 
w[0] = np.array([[6, 6, 6], [9, 6, 9], [7, 2, 4]])
w[1] = np.array([[4, 7, 9], [10, 9, 5], [8, 10, 2]])
w[2] = np.array([5, 4, 8])
model.get_layer('Sim40527').set_weights(w) 
in0Mul54757 = tf.constant([[[[0.4397, 0.8577]], [[0.1919, 0.9414]]]])
in1Mul54757 = tf.constant([[[[0.7422, 0.6725]], [[0.6703, 0.7573]]]])
in0Glo71230 = tf.constant([[[[[1.0508]], [[1.2441]]], [[[1.1124]], [[1.1061]]]]])
in0Sim40527 = tf.constant([[[7, 8, 5], [10, 5, 2], [10, 7, 4]]])
print (np.array2string(model.predict([in0Mul54757,in1Mul54757,in0Glo71230,in0Sim40527],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Mul30030.png')

LMul54757 = multiply_layer([[[[[0.4397, 0.8577]], [[0.1919, 0.9414]]]], [[[[0.7422, 0.6725]], [[0.6703, 0.7573]]]]], Mul54757), 
LGlo34476 = global_average_pooling2D_layer(Mul54757, Glo34476), 
LRes40136 = reshape_layer(Glo34476, [2, 1], Res40136), 
LRes80538 = reshape_layer(Res40136, [2, 1, 1], Res80538), 
LZer46612 = zero_padding2D_layer(Res80538, 2, 0, 0, 0, Zer46612), 
LGlo71230 = global_average_pooling3D_layer([[[[[1.0508]], [[1.2441]]], [[[1.1124]], [[1.1061]]]]], Glo71230), 
LRes63027 = reshape_layer(Glo71230, [1, 1], Res63027), 
LZer90647 = zero_padding1D_layer(Res63027, 1, 0, Zer90647), 
LSim40527 = simple_rnn_layer([[[7, 8, 5], [10, 5, 2], [10, 7, 4]]],[[6, 6, 6], [9, 6, 9], [7, 2, 4]],[[4, 7, 9], [10, 9, 5], [8, 10, 2]],[5, 4, 8], Sim40527), 
LRes5905 = reshape_layer(Sim40527, [3, 1], Res5905), 
LCro21509 = cropping1D_layer(Res5905, 0, 1, Cro21509), 
LSub43659 = subtract_layer(Zer90647,Cro21509, Sub43659), 
LRes95531 = reshape_layer(Sub43659, [2, 1, 1], Res95531), 
LUp_99585 = up_sampling2D_layer(Res95531, 2, 1, Up_99585), 
LMul30030 = multiply_layer([Zer46612,Up_99585], Mul30030), 
exec_layers([LMul54757,LGlo34476,LRes40136,LRes80538,LZer46612,LGlo71230,LRes63027,LZer90647,LSim40527,LRes5905,LCro21509,LSub43659,LRes95531,LUp_99585,LMul30030],["Mul54757","Glo34476","Res40136","Res80538","Zer46612","Glo71230","Res63027","Zer90647","Sim40527","Res5905","Cro21509","Sub43659","Res95531","Up_99585","Mul30030"],Mul30030,"Mul30030")

Actual (Unparsed): [[[[-0.0000000]], [[-0.0000000]], [[0.0291981]], [[0.0827681]]]]

Expected (Unparsed): [[[[-0.0]],[[-0.0]],[[0.02919807902424999]],[[0.08276813203724998]]]]

Actual:   [[[[-0]], [[-0]], [[0.0292]], [[0.0828]]]]

Expected: [[[[-0]], [[-0]], [[0.0292]], [[0.0828]]]]