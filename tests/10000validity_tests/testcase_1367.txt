import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Con42727 = tf.keras.layers.Input(shape=([1, 2, 1]))
in0Con6913 = tf.keras.layers.Input(shape=([1, 2, 7, 1]))
in0Add65329 = tf.keras.layers.Input(shape=([1, 2, 1, 2]))
in1Add65329 = tf.keras.layers.Input(shape=([1, 2, 1, 2]))

Con42727 = keras.layers.Conv2D(4, (1, 2),strides=(1, 1), padding='valid', dilation_rate=(1, 1), name = 'Con42727', )(in0Con42727)
ELU37465 = keras.layers.ELU(alpha=-4.90363175813024, name = 'ELU37465', )(Con42727)
Res73535 = keras.layers.Reshape((1, 1, 4, 1), name = 'Res73535', )(ELU37465)
Zer88048 = keras.layers.ZeroPadding3D(padding=((0, 0), (1, 0), (3, 0)), name = 'Zer88048', )(Res73535)
Con6913 = keras.layers.Concatenate(axis=4, name = 'Con6913', )([Zer88048,in0Con6913])
Add65329 = keras.layers.Add(name = 'Add65329', )([in0Add65329,in1Add65329])
Zer35309 = keras.layers.ZeroPadding3D(padding=((0, 0), (0, 0), (6, 0)), name = 'Zer35309', )(Add65329)
Mul99386 = keras.layers.Multiply(name = 'Mul99386', )([Con6913,Zer35309])
Den59997 = keras.layers.Dense(2,name = 'Den59997', )(Mul99386)
model = tf.keras.models.Model(inputs=[in0Con42727,in0Con6913,in0Add65329,in1Add65329], outputs=Den59997)
w = model.get_layer('Con42727').get_weights() 
w[0] = np.array([[[[0.5824, 0.7673, 0.8193, 0.8309]], [[0.8181, 0.5254, 0.0264, 0.2357]]]])
w[1] = np.array([0, 0, 0, 0])
model.get_layer('Con42727').set_weights(w) 
w = model.get_layer('Den59997').get_weights() 
w[0] = np.array([[0.1207, 0.2291], [0.5023, 0.8911]])
w[1] = np.array([0.7048, 0.634])
model.get_layer('Den59997').set_weights(w) 
in0Con42727 = tf.constant([[[[0.782], [0.8523]]]])
in0Con6913 = tf.constant([[[[[0.5223], [0.2736], [0.4194], [0.3456], [0.2632], [0.6116], [0.1693]], [[0.8065], [0.5828], [0.4036], [0.1903], [0.2296], [0.503], [0.4386]]]]])
in0Add65329 = tf.constant([[[[[0.9294, 0.3093]], [[0.8083, 0.6949]]]]])
in1Add65329 = tf.constant([[[[[0.3529, 0.6993]], [[0.0866, 0.3428]]]]])
print (np.array2string(model.predict([in0Con42727,in0Con6913,in0Add65329,in1Add65329],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Den59997.png')

LCon42727 = conv2D_layer([[[[0.782], [0.8523]]]], 1, 2,[[[[0.5824, 0.7673, 0.8193, 0.8309]], [[0.8181, 0.5254, 0.0264, 0.2357]]]],[0, 0, 0, 0], 1, 1, false, 1, 1, Con42727), 
LELU37465 = elu_layer(Con42727, -4.90363175813024, ELU37465), 
LRes73535 = reshape_layer(ELU37465, [1, 1, 4, 1], Res73535), 
LZer88048 = zero_padding3D_layer(Res73535, 0, 0, 1, 0, 3, 0, Zer88048), 
LCon6913 = concatenate_layer([Zer88048,[[[[[0.5223], [0.2736], [0.4194], [0.3456], [0.2632], [0.6116], [0.1693]], [[0.8065], [0.5828], [0.4036], [0.1903], [0.2296], [0.503], [0.4386]]]]]], 4, Con6913), 
LAdd65329 = add_layer([[[[[[0.9294, 0.3093]], [[0.8083, 0.6949]]]]], [[[[[0.3529, 0.6993]], [[0.0866, 0.3428]]]]]], Add65329), 
LZer35309 = zero_padding3D_layer(Add65329, 0, 0, 0, 0, 6, 0, Zer35309), 
LMul99386 = multiply_layer([Con6913,Zer35309], Mul99386), 
LDen59997 = dense_layer(Mul99386, [[0.1207, 0.2291], [0.5023, 0.8911]],[0.7048, 0.634], Den59997), 
exec_layers([LCon42727,LELU37465,LRes73535,LZer88048,LCon6913,LAdd65329,LZer35309,LMul99386,LDen59997],["Con42727","ELU37465","Res73535","Zer88048","Con6913","Add65329","Zer35309","Mul99386","Den59997"],Den59997,"Den59997")

Actual (Unparsed): [[[[[0.7048000, 0.6340000], [0.7048000, 0.6340000], [0.7048000, 0.6340000], [0.7048000, 0.6340000], [0.7048000, 0.6340000], [0.7048000, 0.6340000], [0.7905707, 0.7861607]], [[0.7048000, 0.6340000], [0.7048000, 0.6340000], [0.7048000, 0.6340000], [0.7048000, 0.6340000], [0.7048000, 0.6340000], [0.7048000, 0.6340000], [1.0252970, 1.2139728]]]]]

Expected (Unparsed): [[[[[0.7048,0.634],[0.7048,0.634],[0.7048,0.634],[0.7048,0.634],[0.7048,0.634],[0.7048,0.634],[0.790570728754,0.786160653778]],[[0.7048,0.634],[0.7048,0.634],[0.7048,0.634],[0.7048,0.634],[0.7048,0.634],[0.7048,0.634],[1.0252969941786312,1.213972796645147]]]]]

Actual:   [[[[[0.7048, 0.634], [0.7048, 0.634], [0.7048, 0.634], [0.7048, 0.634], [0.7048, 0.634], [0.7048, 0.634], [0.7906, 0.7862]], [[0.7048, 0.634], [0.7048, 0.634], [0.7048, 0.634], [0.7048, 0.634], [0.7048, 0.634], [0.7048, 0.634], [1.0253, 1.214]]]]]

Expected: [[[[[0.7048, 0.634], [0.7048, 0.634], [0.7048, 0.634], [0.7048, 0.634], [0.7048, 0.634], [0.7048, 0.634], [0.7906, 0.7862]], [[0.7048, 0.634], [0.7048, 0.634], [0.7048, 0.634], [0.7048, 0.634], [0.7048, 0.634], [0.7048, 0.634], [1.0253, 1.214]]]]]