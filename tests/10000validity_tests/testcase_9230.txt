import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Add163 = tf.keras.layers.Input(shape=([2, 1, 1, 2]))
in1Add163 = tf.keras.layers.Input(shape=([2, 1, 1, 2]))
in0Zer75522 = tf.keras.layers.Input(shape=([1, 3, 2, 2]))
in0Ave2457 = tf.keras.layers.Input(shape=([2, 1]))
in1Ave2457 = tf.keras.layers.Input(shape=([2, 1]))
in0Con1675 = tf.keras.layers.Input(shape=([3, 39]))

Add163 = keras.layers.Add(name = 'Add163', )([in0Add163,in1Add163])
ELU5306 = keras.layers.ELU(alpha=-9.44551521797955, name = 'ELU5306', )(Add163)
Zer23643 = keras.layers.ZeroPadding3D(padding=((1, 0), (4, 0), (3, 0)), name = 'Zer23643', )(ELU5306)
Zer75522 = keras.layers.ZeroPadding3D(padding=((1, 1), (1, 1), (1, 1)), name = 'Zer75522', )(in0Zer75522)
Ave80346 = keras.layers.Average(name = 'Ave80346', )([Zer23643,Zer75522])
Res91852 = keras.layers.Reshape((3, 5, 8), name = 'Res91852', )(Ave80346)
Res74197 = keras.layers.Reshape((3, 40), name = 'Res74197', )(Res91852)
Ave2457 = keras.layers.Average(name = 'Ave2457', )([in0Ave2457,in1Ave2457])
Zer33530 = keras.layers.ZeroPadding1D(padding=((1, 0)), name = 'Zer33530', )(Ave2457)
Con1675 = keras.layers.Concatenate(axis=2, name = 'Con1675', )([Zer33530,in0Con1675])
Min52479 = keras.layers.Minimum(name = 'Min52479', )([Res74197,Con1675])
Res69067 = keras.layers.Reshape((3, 40, 1), name = 'Res69067', )(Min52479)
Res80206 = keras.layers.Reshape((3, 40, 1, 1), name = 'Res80206', )(Res69067)
Cro61636 = keras.layers.Cropping3D(cropping=((0, 0), (2, 3), (0, 0)), name = 'Cro61636', )(Res80206)
model = tf.keras.models.Model(inputs=[in0Add163,in1Add163,in0Zer75522,in0Ave2457,in1Ave2457,in0Con1675], outputs=Cro61636)
in0Add163 = tf.constant([[[[[0.3137, 0.964]]], [[[0.4463, 0.6246]]]]])
in1Add163 = tf.constant([[[[[0.6056, 0.8116]]], [[[0.1114, 0.8686]]]]])
in0Zer75522 = tf.constant([[[[[1.4221, 1.9894], [1.7495, 1.6652]], [[1.5647, 1.9826], [1.5258, 1.7658]], [[1.9852, 1.132], [1.5253, 1.2733]]]]])
in0Ave2457 = tf.constant([[[0.6661], [0.555]]])
in1Ave2457 = tf.constant([[[0.5112], [0.0529]]])
in0Con1675 = tf.constant([[[0.8017, 0.4984, 0.5189, 0.6856, 0.9041, 0.0105, 0.5597, 0.5645, 0.191, 0.3258, 0.6199, 0.8744, 0.7052, 0.2058, 0.3433, 0.3353, 0.1406, 0.1425, 0.1499, 0.0231, 0.8564, 0.973, 0.5095, 0.4689, 0.8258, 0.0267, 0.9233, 0.3986, 0.2856, 0.6395, 0.263, 0.5326, 0.5637, 0.2996, 0.8377, 0.9376, 0.5426, 0.6508, 0.0567], [0.5257, 0.487, 0.0737, 0.844, 0.4271, 0.5074, 0.5894, 0.0181, 0.131, 0.7654, 0.3842, 0.6985, 0.4833, 0.6326, 0.3431, 0.4266, 0.8581, 0.4088, 0.5972, 0.0942, 0.0793, 0.8787, 0.2378, 0.962, 0.9573, 0.9373, 0.0346, 0.0209, 0.628, 0.7534, 0.2026, 0.699, 0.2343, 0.4544, 0.0088, 0.4496, 0.8726, 0.1143, 0.2837], [0.0694, 0.1431, 0.9072, 0.7063, 0.6904, 0.0894, 0.6456, 0.0716, 0.2649, 0.7872, 0.5695, 0.6136, 0.0207, 0.3569, 0.1689, 0.8605, 0.8022, 0.7069, 0.0329, 0.4261, 0.4313, 0.8941, 0.1981, 0.6046, 0.2254, 0.5828, 0.2405, 0.6308, 0.5894, 0.7233, 0.3987, 0.988, 0.1655, 0.233, 0.3493, 0.2059, 0.3641, 0.1598, 0.8618]]])
print (np.array2string(model.predict([in0Add163,in1Add163,in0Zer75522,in0Ave2457,in1Ave2457,in0Con1675],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Cro61636.png')

LAdd163 = add_layer([[[[[[0.3137, 0.964]]], [[[0.4463, 0.6246]]]]], [[[[[0.6056, 0.8116]]], [[[0.1114, 0.8686]]]]]], Add163), 
LELU5306 = elu_layer(Add163, -9.44551521797955, ELU5306), 
LZer23643 = zero_padding3D_layer(ELU5306, 1, 0, 4, 0, 3, 0, Zer23643), 
LZer75522 = zero_padding3D_layer([[[[[1.4221, 1.9894], [1.7495, 1.6652]], [[1.5647, 1.9826], [1.5258, 1.7658]], [[1.9852, 1.132], [1.5253, 1.2733]]]]], 1, 1, 1, 1, 1, 1, Zer75522), 
LAve80346 = average_layer([Zer23643,Zer75522], Ave80346), 
LRes91852 = reshape_layer(Ave80346, [3, 5, 8], Res91852), 
LRes74197 = reshape_layer(Res91852, [3, 40], Res74197), 
LAve2457 = average_layer([[[[0.6661], [0.555]]], [[[0.5112], [0.0529]]]], Ave2457), 
LZer33530 = zero_padding1D_layer(Ave2457, 1, 0, Zer33530), 
LCon1675 = concatenate_layer([Zer33530,[[[0.8017, 0.4984, 0.5189, 0.6856, 0.9041, 0.0105, 0.5597, 0.5645, 0.191, 0.3258, 0.6199, 0.8744, 0.7052, 0.2058, 0.3433, 0.3353, 0.1406, 0.1425, 0.1499, 0.0231, 0.8564, 0.973, 0.5095, 0.4689, 0.8258, 0.0267, 0.9233, 0.3986, 0.2856, 0.6395, 0.263, 0.5326, 0.5637, 0.2996, 0.8377, 0.9376, 0.5426, 0.6508, 0.0567], [0.5257, 0.487, 0.0737, 0.844, 0.4271, 0.5074, 0.5894, 0.0181, 0.131, 0.7654, 0.3842, 0.6985, 0.4833, 0.6326, 0.3431, 0.4266, 0.8581, 0.4088, 0.5972, 0.0942, 0.0793, 0.8787, 0.2378, 0.962, 0.9573, 0.9373, 0.0346, 0.0209, 0.628, 0.7534, 0.2026, 0.699, 0.2343, 0.4544, 0.0088, 0.4496, 0.8726, 0.1143, 0.2837], [0.0694, 0.1431, 0.9072, 0.7063, 0.6904, 0.0894, 0.6456, 0.0716, 0.2649, 0.7872, 0.5695, 0.6136, 0.0207, 0.3569, 0.1689, 0.8605, 0.8022, 0.7069, 0.0329, 0.4261, 0.4313, 0.8941, 0.1981, 0.6046, 0.2254, 0.5828, 0.2405, 0.6308, 0.5894, 0.7233, 0.3987, 0.988, 0.1655, 0.233, 0.3493, 0.2059, 0.3641, 0.1598, 0.8618]]]], 2, Con1675), 
LMin52479 = minimum_layer([Res74197,Con1675], Min52479), 
LRes69067 = reshape_layer(Min52479, [3, 40, 1], Res69067), 
LRes80206 = reshape_layer(Res69067, [3, 40, 1, 1], Res80206), 
LCro61636 = cropping3D_layer(Res80206, 0, 0, 2, 3, 0, 0, Cro61636), 
exec_layers([LAdd163,LELU5306,LZer23643,LZer75522,LAve80346,LRes91852,LRes74197,LAve2457,LZer33530,LCon1675,LMin52479,LRes69067,LRes80206,LCro61636],["Add163","ELU5306","Zer23643","Zer75522","Ave80346","Res91852","Res74197","Ave2457","Zer33530","Con1675","Min52479","Res69067","Res80206","Cro61636"],Cro61636,"Cro61636")

Actual (Unparsed

Expected (Unparsed): [[[[[0]],[[0]],[[0]],[[0]],[[0]],[[0]],[[0]],[[0]],[[0]],[[0]],[[0]],[[0]],[[0]],[[0]],[[0]],[[0]],[[0]],[[0]],[[0]],[[0]],[[0]],[[0]],[[0]],[[0]],[[0]],[[0]],[[0]],[[0]],[[0]],[[0]],[[0]],[[0]],[[0]],[[0]],[[0]]],[[[0]],[[0]],[[0]],[[0]],[[0]],[[0]],[[0]],[[0]],[[0.71105]],[[0.3842]],[[0.6985]],[[0.4833]],[[0]],[[0]],[[0]],[[0]],[[0.4088]],[[0.5972]],[[0.0942]],[[0.0793]],[[0]],[[0]],[[0]],[[0]],[[0.9373]],[[0.0346]],[[0.0209]],[[0.628]],[[0]],[[0]],[[0]],[[0]],[[0]],[[0]],[[0]]],[[[0]],[[0]],[[0]],[[0]],[[0]],[[0]],[[0]],[[0]],[[0]],[[0]],[[0]],[[0]],[[0]],[[0]],[[0]],[[0]],[[0]],[[0]],[[0]],[[0]],[[0]],[[0]],[[0]],[[0]],[[0]],[[0]],[[0]],[[0]],[[0]],[[0]],[[0]],[[0]],[[0]],[[0]],[[0]]]]]

Actual:   [[[[[0]], [[0]], [[0]], [[0]], [[0]], [[0]], [[0]], [[0]], [[0]], [[0]], [[0]], [[0]], [[0]], [[0]], [[0]], [[0]], [[0]], [[0]], [[0]], [[0]], [[0]], [[0]], [[0]], [[0]], [[0]], [[0]], [[0]], [[0]], [[0]], [[0]], [[0]], [[0]], [[0]], [[0]], [[0]]], [[[0]], [[0]], [[0]], [[0]], [[0]], [[0]], [[0]], [[0]], [[0.7111]], [[0.3842]], [[0.6985]], [[0.4833]], [[0]], [[0]], [[0]], [[0]], [[0.4088]], [[0.5972]], [[0.0942]], [[0.0793]], [[0]], [[0]], [[0]], [[0]], [[0.9373]], [[0.0346]], [[0.0209]], [[0.628]], [[0]], [[0]], [[0]], [[0]], [[0]], [[0]], [[0]]], [[[0]], [[0]], [[0]], [[0]], [[0]], [[0]], [[0]], [[0]], [[0]], [[0]], [[0]], [[0]], [[0]], [[0]], [[0]], [[0]], [[0]], [[0]], [[0]], [[0]], [[0]], [[0]], [[0]], [[0]], [[0]], [[0]], [[0]], [[0]], [[0]], [[0]], [[0]], [[0]], [[0]], [[0]], [[0]]]]]

Expected: [[[[[0]], [[0]], [[0]], [[0]], [[0]], [[0]], [[0]], [[0]], [[0]], [[0]], [[0]], [[0]], [[0]], [[0]], [[0]], [[0]], [[0]], [[0]], [[0]], [[0]], [[0]], [[0]], [[0]], [[0]], [[0]], [[0]], [[0]], [[0]], [[0]], [[0]], [[0]], [[0]], [[0]], [[0]], [[0]]], [[[0]], [[0]], [[0]], [[0]], [[0]], [[0]], [[0]], [[0]], [[0.7111]], [[0.3842]], [[0.6985]], [[0.4833]], [[0]], [[0]], [[0]], [[0]], [[0.4088]], [[0.5972]], [[0.0942]], [[0.0793]], [[0]], [[0]], [[0]], [[0]], [[0.9373]], [[0.0346]], [[0.0209]], [[0.628]], [[0]], [[0]], [[0]], [[0]], [[0]], [[0]], [[0]]], [[[0]], [[0]], [[0]], [[0]], [[0]], [[0]], [[0]], [[0]], [[0]], [[0]], [[0]], [[0]], [[0]], [[0]], [[0]], [[0]], [[0]], [[0]], [[0]], [[0]], [[0]], [[0]], [[0]], [[0]], [[0]], [[0]], [[0]], [[0]], [[0]], [[0]], [[0]], [[0]], [[0]], [[0]], [[0]]]]]