import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Sub61063 = tf.keras.layers.Input(shape=([2, 3]))
in1Sub61063 = tf.keras.layers.Input(shape=([2, 3]))
in0Con36638 = tf.keras.layers.Input(shape=([2, 3, 5, 2]))
in0Glo76035 = tf.keras.layers.Input(shape=([1, 1, 2]))
in0Con22267 = tf.keras.layers.Input(shape=([2, 1, 3, 2]))
in0Cro45105 = tf.keras.layers.Input(shape=([4, 1, 3, 3]))

Sub61063 = keras.layers.Subtract(name = 'Sub61063', )([in0Sub61063,in1Sub61063])
Res54768 = keras.layers.Reshape((2, 3, 1), name = 'Res54768', )(Sub61063)
PRe21335 = keras.layers.PReLU(name = 'PRe21335', )(Res54768)
Res1437 = keras.layers.Reshape((2, 3, 1, 1), name = 'Res1437', )(PRe21335)
Zer16445 = keras.layers.ZeroPadding3D(padding=((0, 0), (0, 0), (4, 0)), name = 'Zer16445', )(Res1437)
Con36638 = keras.layers.Concatenate(axis=4, name = 'Con36638', )([Zer16445,in0Con36638])
Glo76035 = keras.layers.GlobalMaxPool2D(name = 'Glo76035', )(in0Glo76035)
Fla13300 = keras.layers.Flatten(name = 'Fla13300', )(Glo76035)
Res24236 = keras.layers.Reshape((2, 1), name = 'Res24236', )(Fla13300)
Res62630 = keras.layers.Reshape((2, 1, 1), name = 'Res62630', )(Res24236)
Res61707 = keras.layers.Reshape((2, 1, 1, 1), name = 'Res61707', )(Res62630)
Zer47532 = keras.layers.ZeroPadding3D(padding=((0, 0), (0, 0), (2, 0)), name = 'Zer47532', )(Res61707)
Con22267 = keras.layers.Concatenate(axis=4, name = 'Con22267', )([Zer47532,in0Con22267])
Cro45105 = keras.layers.Cropping3D(cropping=((0, 3), (0, 0), (1, 0)), name = 'Cro45105', )(in0Cro45105)
Zer14695 = keras.layers.ZeroPadding3D(padding=((1, 0), (0, 0), (1, 0)), name = 'Zer14695', )(Cro45105)
Ave37413 = keras.layers.Average(name = 'Ave37413', )([Con22267,Zer14695])
Zer71877 = keras.layers.ZeroPadding3D(padding=((0, 0), (2, 0), (2, 0)), name = 'Zer71877', )(Ave37413)
Ave60754 = keras.layers.Average(name = 'Ave60754', )([Con36638,Zer71877])
model = tf.keras.models.Model(inputs=[in0Sub61063,in1Sub61063,in0Con36638,in0Glo76035,in0Con22267,in0Cro45105], outputs=Ave60754)
w = model.get_layer('PRe21335').get_weights() 
w[0] = np.array([[[0.3544], [0.3926], [0.4483]], [[0.3852], [0.5209], [0.2722]]])
model.get_layer('PRe21335').set_weights(w) 
in0Sub61063 = tf.constant([[[0.3714, 0.4534, 0.9124], [0.1813, 0.8576, 0.0262]]])
in1Sub61063 = tf.constant([[[0.4939, 0.8867, 0.986], [0.1451, 0.1944, 0.3986]]])
in0Con36638 = tf.constant([[[[[0.4331, 0.0549], [0.6209, 0.0895], [0.8599, 0.7343], [0.6492, 0.3186], [0.411, 0.9067]], [[0.711, 0.6776], [0.5624, 0.9606], [0.8491, 0.5286], [0.4189, 0.8239], [0.5134, 0.2808]], [[0.3792, 0.8279], [0.7468, 0.758], [0.3653, 0.2345], [0.5708, 0.8009], [0.4763, 0.9483]]], [[[0.4572, 0.3869], [0.2351, 0.5292], [0.7173, 0.411], [0.4312, 0.996], [0.6168, 0.413]], [[0.9311, 0.0706], [0.0361, 0.9575], [0.7295, 0.4502], [0.5319, 0.0808], [0.9415, 0.4132]], [[0.7309, 0.1998], [0.4018, 0.5678], [0.0865, 0.1478], [0.0264, 0.8337], [0.1647, 0.5491]]]]])
in0Glo76035 = tf.constant([[[[1.6746, 1.569]]]])
in0Con22267 = tf.constant([[[[[0.7544, 0.2721], [0.8986, 0.602], [0.436, 0.5819]]], [[[0.7392, 0.1582], [0.399, 0.0069], [0.4997, 0.9999]]]]])
in0Cro45105 = tf.constant([[[[[1.1217, 1.8734, 1.1416], [1.256, 1.5731, 1.8198], [1.1634, 1.3319, 1.7458]]], [[[1.3588, 1.9866, 1.3218], [1.5625, 1.139, 1.3867], [1.9623, 1.3138, 1.2617]]], [[[1.9787, 1.4938, 1.9437], [1.2981, 1.7752, 1.4565], [1.715, 1.2407, 1.1605]]], [[[1.6572, 1.6749, 1.019], [1.904, 1.1602, 1.8163], [1.0345, 1.5705, 1.8623]]]]])
print (np.array2string(model.predict([in0Sub61063,in1Sub61063,in0Con36638,in0Glo76035,in0Con22267,in0Cro45105],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Ave60754.png')

LSub61063 = subtract_layer([[[0.3714, 0.4534, 0.9124], [0.1813, 0.8576, 0.0262]]], [[[0.4939, 0.8867, 0.986], [0.1451, 0.1944, 0.3986]]], Sub61063), 
LRes54768 = reshape_layer(Sub61063, [2, 3, 1], Res54768), 
LPRe21335 = prelu_layer(Res54768, [[[0.3544], [0.3926], [0.4483]], [[0.3852], [0.5209], [0.2722]]], PRe21335), 
LRes1437 = reshape_layer(PRe21335, [2, 3, 1, 1], Res1437), 
LZer16445 = zero_padding3D_layer(Res1437, 0, 0, 0, 0, 4, 0, Zer16445), 
LCon36638 = concatenate_layer([Zer16445,[[[[[0.4331, 0.0549], [0.6209, 0.0895], [0.8599, 0.7343], [0.6492, 0.3186], [0.411, 0.9067]], [[0.711, 0.6776], [0.5624, 0.9606], [0.8491, 0.5286], [0.4189, 0.8239], [0.5134, 0.2808]], [[0.3792, 0.8279], [0.7468, 0.758], [0.3653, 0.2345], [0.5708, 0.8009], [0.4763, 0.9483]]], [[[0.4572, 0.3869], [0.2351, 0.5292], [0.7173, 0.411], [0.4312, 0.996], [0.6168, 0.413]], [[0.9311, 0.0706], [0.0361, 0.9575], [0.7295, 0.4502], [0.5319, 0.0808], [0.9415, 0.4132]], [[0.7309, 0.1998], [0.4018, 0.5678], [0.0865, 0.1478], [0.0264, 0.8337], [0.1647, 0.5491]]]]]], 4, Con36638), 
LGlo76035 = global_max_pool2D_layer([[[[1.6746, 1.569]]]], Glo76035), 
LFla13300 = flatten_layer(Glo76035, Fla13300), 
LRes24236 = reshape_layer(Fla13300, [2, 1], Res24236), 
LRes62630 = reshape_layer(Res24236, [2, 1, 1], Res62630), 
LRes61707 = reshape_layer(Res62630, [2, 1, 1, 1], Res61707), 
LZer47532 = zero_padding3D_layer(Res61707, 0, 0, 0, 0, 2, 0, Zer47532), 
LCon22267 = concatenate_layer([Zer47532,[[[[[0.7544, 0.2721], [0.8986, 0.602], [0.436, 0.5819]]], [[[0.7392, 0.1582], [0.399, 0.0069], [0.4997, 0.9999]]]]]], 4, Con22267), 
LCro45105 = cropping3D_layer([[[[[1.1217, 1.8734, 1.1416], [1.256, 1.5731, 1.8198], [1.1634, 1.3319, 1.7458]]], [[[1.3588, 1.9866, 1.3218], [1.5625, 1.139, 1.3867], [1.9623, 1.3138, 1.2617]]], [[[1.9787, 1.4938, 1.9437], [1.2981, 1.7752, 1.4565], [1.715, 1.2407, 1.1605]]], [[[1.6572, 1.6749, 1.019], [1.904, 1.1602, 1.8163], [1.0345, 1.5705, 1.8623]]]]], 0, 3, 0, 0, 1, 0, Cro45105), 
LZer14695 = zero_padding3D_layer(Cro45105, 1, 0, 0, 0, 1, 0, Zer14695), 
LAve37413 = average_layer([Con22267,Zer14695], Ave37413), 
LZer71877 = zero_padding3D_layer(Ave37413, 0, 0, 2, 0, 2, 0, Zer71877), 
LAve60754 = average_layer([Con36638,Zer71877], Ave60754), 
exec_layers([LSub61063,LRes54768,LPRe21335,LRes1437,LZer16445,LCon36638,LGlo76035,LFla13300,LRes24236,LRes62630,LRes61707,LZer47532,LCon22267,LCro45105,LZer14695,LAve37413,LZer71877,LAve60754],["Sub61063","Res54768","PRe21335","Res1437","Zer16445","Con36638","Glo76035","Fla13300","Res24236","Res62630","Res61707","Zer47532","Con22267","Cro45105","Zer14695","Ave37413","Zer71877","Ave60754"],Ave60754,"Ave60754")

Actual (Unparsed): [[[[[0.0000000, 0.2165500, 0.0274500], [0.0000000, 0.3104500, 0.0447500], [0.0000000, 0.4299500, 0.3671500], [0.0000000, 0.3246000, 0.1593000], [-0.0217070, 0.2055000, 0.4533500]], [[0.0000000, 0.3555000, 0.3388000], [0.0000000, 0.2812000, 0.4803000], [0.0000000, 0.4245500, 0.2643000], [0.0000000, 0.2094500, 0.4119500], [-0.0850568, 0.2567000, 0.1404000]], [[0.0000000, 0.1896000, 0.4139500], [0.0000000, 0.3734000, 0.3790000], [0.0000000, 0.3712500, 0.1852750], [0.0000000, 0.5100500, 0.5509500], [0.4021526, 0.3471500, 0.6196250]]], [[[0.0000000, 0.2286000, 0.1934500], [0.0000000, 0.1175500, 0.2646000], [0.0000000, 0.3586500, 0.2055000], [0.0000000, 0.2156000, 0.4980000], [0.0181000, 0.3084000, 0.2065000]], [[0.0000000, 0.4655500, 0.0353000], [0.0000000, 0.0180500, 0.4787500], [0.0000000, 0.3647500, 0.2251000], [0.0000000, 0.2659500, 0.0404000], [0.3316000, 0.4707500, 0.2066000]], [[0.0000000, 0.3654500, 0.0999000], [0.0000000, 0.2009000, 0.2839000], [0.0000000, 0.2280500, 0.1134500], [0.3140000, 0.5062250, 0.8735250], [0.6324164, 0.5402500, 0.9609750]]]]]

Expected (Unparsed): [[[[[0,0.21655,0.02745],[0,0.31045,0.04475],[0,0.42995,0.36715],[0,0.3246,0.1593],[-0.021707,0.2055,0.45335]],[[0,0.3555,0.3388],[0,0.2812,0.4803],[0,0.42455,0.2643],[0,0.20945,0.41195],[-0.08505679000000001,0.2567,0.1404]],[[0,0.1896,0.41395],[0,0.3734,0.379],[0,0.37124999999999997,0.185275],[0,0.51005,0.5509499999999999],[0.40215256000000005,0.34715,0.619625]]],[[[0,0.2286,0.19345],[0,0.11755,0.2646],[0,0.35865,0.2055],[0,0.2156,0.498],[0.01809999999999999,0.3084,0.2065]],[[0,0.46555,0.0353],[0,0.01805,0.47875],[0,0.36475,0.2251],[0,0.26595,0.0404],[0.3316,0.47075,0.2066]],[[0,0.36545,0.0999],[0,0.2009,0.2839],[0,0.22804999999999997,0.11345],[0.314,0.506225,0.873525],[0.63241636,0.54025,0.9609750000000001]]]]]

Actual:   [[[[[0, 0.2166, 0.0275], [0, 0.3105, 0.0448], [0, 0.43, 0.3672], [0, 0.3246, 0.1593], [-0.0217, 0.2055, 0.4534]], [[0, 0.3555, 0.3388], [0, 0.2812, 0.4803], [0, 0.4246, 0.2643], [0, 0.2095, 0.412], [-0.085, 0.2567, 0.1404]], [[0, 0.1896, 0.414], [0, 0.3734, 0.379], [0, 0.3713, 0.1853], [0, 0.5101, 0.551], [0.4022, 0.3472, 0.6197]]], [[[0, 0.2286, 0.1935], [0, 0.1176, 0.2646], [0, 0.3587, 0.2055], [0, 0.2156, 0.498], [0.0181, 0.3084, 0.2065]], [[0, 0.4656, 0.0353], [0, 0.0181, 0.4788], [0, 0.3648, 0.2251], [0, 0.266, 0.0404], [0.3316, 0.4708, 0.2066]], [[0, 0.3655, 0.0999], [0, 0.2009, 0.2839], [0, 0.2281, 0.1135], [0.314, 0.5063, 0.8736], [0.6325, 0.5403, 0.961]]]]]

Expected: [[[[[0, 0.2166, 0.0275], [0, 0.3105, 0.0448], [0, 0.43, 0.3672], [0, 0.3246, 0.1593], [-0.0217, 0.2055, 0.4534]], [[0, 0.3555, 0.3388], [0, 0.2812, 0.4803], [0, 0.4246, 0.2643], [0, 0.2095, 0.412], [-0.085, 0.2567, 0.1404]], [[0, 0.1896, 0.414], [0, 0.3734, 0.379], [0, 0.3713, 0.1853], [0, 0.5101, 0.551], [0.4022, 0.3472, 0.6197]]], [[[0, 0.2286, 0.1935], [0, 0.1176, 0.2646], [0, 0.3587, 0.2055], [0, 0.2156, 0.498], [0.0181, 0.3084, 0.2065]], [[0, 0.4656, 0.0353], [0, 0.0181, 0.4788], [0, 0.3648, 0.2251], [0, 0.266, 0.0404], [0.3316, 0.4708, 0.2066]], [[0, 0.3655, 0.0999], [0, 0.2009, 0.2839], [0, 0.2281, 0.1135], [0.314, 0.5063, 0.8736], [0.6325, 0.5403, 0.961]]]]]