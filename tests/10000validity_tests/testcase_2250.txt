import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Dot90260 = tf.keras.layers.Input(shape=([2, 3]))
in1Dot90260 = tf.keras.layers.Input(shape=([2, 3]))
in0Con10826 = tf.keras.layers.Input(shape=([19]))
in0Con79219 = tf.keras.layers.Input(shape=([1, 1, 2]))
in0Dot19907 = tf.keras.layers.Input(shape=([2]))
in1Dot19907 = tf.keras.layers.Input(shape=([2]))
in0Con22721 = tf.keras.layers.Input(shape=([21]))

Dot90260 = keras.layers.Dot(axes=(2, 2), name = 'Dot90260', )([in0Dot90260,in1Dot90260])
Con90666 = keras.layers.Conv1D(3, (1),strides=(3), padding='valid', dilation_rate=(1), name = 'Con90666', )(Dot90260)
Fla53709 = keras.layers.Flatten(name = 'Fla53709', )(Con90666)
Con10826 = keras.layers.Concatenate(axis=1, name = 'Con10826', )([Fla53709,in0Con10826])
Con79219 = keras.layers.Conv2DTranspose(2, (1, 1),strides=(1, 11), padding='valid', name = 'Con79219', )(in0Con79219)
Res30864 = keras.layers.Reshape((1, 22), name = 'Res30864', )(Con79219)
Fla94294 = keras.layers.Flatten(name = 'Fla94294', )(Res30864)
Dot19907 = keras.layers.Dot(axes=(1, 1), name = 'Dot19907', )([in0Dot19907,in1Dot19907])
Con22721 = keras.layers.Concatenate(axis=1, name = 'Con22721', )([Dot19907,in0Con22721])
Max46062 = keras.layers.Maximum(name = 'Max46062', )([Fla94294,Con22721])
Mul29179 = keras.layers.Multiply(name = 'Mul29179', )([Con10826,Max46062])
Res14726 = keras.layers.Reshape((22, 1), name = 'Res14726', )(Mul29179)
Res17564 = keras.layers.Reshape((22, 1, 1), name = 'Res17564', )(Res14726)
Loc23193 = keras.layers.LocallyConnected2D(4, (16, 1),strides=(1, 1), name = 'Loc23193', )(Res17564)
model = tf.keras.models.Model(inputs=[in0Dot90260,in1Dot90260,in0Con10826,in0Con79219,in0Dot19907,in1Dot19907,in0Con22721], outputs=Loc23193)
w = model.get_layer('Con90666').get_weights() 
w[0] = np.array([[[0.2333, 0.6044, 0.3408], [0.5152, 0.557, 0.8334]]])
w[1] = np.array([0, 0, 0])
model.get_layer('Con90666').set_weights(w) 
w = model.get_layer('Con79219').get_weights() 
w[0] = np.array([[[[0.9684, 0.4977], [0.4991, 0.6444]]]])
w[1] = np.array([0, 0])
model.get_layer('Con79219').set_weights(w) 
w = model.get_layer('Loc23193').get_weights() 
w[0] = np.array([[[0.6564, 0.608, 0.0531, 0.5397], [0.9422, 0.9461, 0.909, 0.0788], [0.6001, 0.1971, 0.1287, 0.7529], [0.2888, 0.3788, 0.9366, 0.8627], [0.3284, 0.7896, 0.2994, 0.2526], [0.2582, 0.2735, 0.6101, 0.9284], [0.3961, 0.8613, 0.3561, 0.8788], [0.935, 0.7843, 0.8135, 0.9234], [0.6702, 0.1104, 0.0772, 0.4916], [0.6667, 0.4147, 0.1511, 0.7275], [0.0488, 0.9629, 0.401, 0.2104], [0.6217, 0.8604, 0.4027, 0.8827], [0.2206, 0.4994, 0.1056, 0.4851], [0.5221, 0.423, 0.2771, 0.9122], [0.5498, 0.4161, 0.3911, 0.4251], [0.2619, 0.2345, 0.4838, 0.579]], [[0.415, 0.8841, 0.0083, 0.0631], [0.3645, 0.7792, 0.3926, 0.3849], [0.5878, 0.4191, 0.8286, 0.4775], [0.4884, 0.4526, 0.8003, 0.8615], [0.4803, 0.1258, 0.0002, 0.9506], [0.4376, 0.1446, 0.5739, 0.4524], [0.3447, 0.9299, 0.0838, 0.589], [0.3837, 0.0857, 0.1908, 0.0388], [0.7571, 0.661, 0.8135, 0.0794], [0.2569, 0.4448, 0.4442, 0.4088], [0.9672, 0.0997, 0.3772, 0.5084], [0.5121, 0.4167, 0.8341, 0.221], [0.9463, 0.3514, 0.3608, 0.4203], [0.7291, 0.7866, 0.4132, 0.2633], [0.2149, 0.1626, 0.7503, 0.5399], [0.7514, 0.2116, 0.1072, 0.0576]], [[0.7827, 0.039, 0.6376, 0.8346], [0.3224, 0.706, 0.7789, 0.1118], [0.783, 0.283, 0.5234, 0.8429], [0.4261, 0.0702, 0.5564, 0.3687], [0.6331, 0.3098, 0.3622, 0.445], [0.7872, 0.2491, 0.1932, 0.6537], [0.8023, 0.8593, 0.7436, 0.4997], [0.2411, 0.8612, 0.4822, 0.1714], [0.5214, 0.9636, 0.8548, 0.0262], [0.9274, 0.3842, 0.9905, 0.3525], [0.0134, 0.7856, 0.119, 0.8534], [0.5163, 0.7373, 0.6371, 0.6008], [0.0789, 0.6913, 0.6535, 0.9151], [0.9236, 0.2466, 0.8802, 0.742], [0.1179, 0.1692, 0.9428, 0.6153], [0.2219, 0.2339, 0.5369, 0.225]], [[0.92, 0.4592, 0.3704, 0.9401], [0.7053, 0.7152, 0.5015, 0.3758], [0.8048, 0.0062, 0.505, 0.2416], [0.3141, 0.9489, 0.8849, 0.2554], [0.9447, 0.0998, 0.2844, 0.8703], [0.876, 0.8208, 0.3422, 0.9224], [0.9527, 0.314, 0.4923, 0.0802], [0.8727, 0.3049, 0.6099, 0.1508], [0.0659, 0.6106, 0.1728, 0.8845], [0.6869, 0.4872, 0.5209, 0.9041], [0.5082, 0.2197, 0.8764, 0.786], [0.538, 0.8931, 0.0173, 0.1163], [0.863, 0.6591, 0.8821, 0.5588], [0.5631, 0.1034, 0.9315, 0.5808], [0.5392, 0.5075, 0.7909, 0.5069], [0.7499, 0.9, 0.553, 0.9971]], [[0.6611, 0.7948, 0.135, 0.875], [0.6798, 0.4284, 0.2524, 0.478], [0.9651, 0.1211, 0.896, 0.3386], [0.2866, 0.115, 0.6814, 0.0659], [0.536, 0.8693, 0.0783, 0.7473], [0.0893, 0.3283, 0.3178, 0.0601], [0.4621, 0.1244, 0.7315, 0.549], [0.6048, 0.0213, 0.3762, 0.2061], [0.7452, 0.1618, 0.0664, 0.5692], [0.8989, 0.8445, 0.3527, 0.047], [0.0439, 0.6191, 0.5587, 0.0723], [0.4806, 0.4673, 0.7243, 0.9884], [0.0844, 0.7134, 0.1857, 0.2801], [0.9996, 0.095, 0.5713, 0.8766], [0.8196, 0.1188, 0.1899, 0.7729], [0.4509, 0.4219, 0.1436, 0.1426]], [[0.6698, 0.3666, 0.0147, 0.4507], [0.8457, 0.5068, 0.6388, 0.8106], [0.4257, 0.8807, 0.3061, 0.9779], [0.5556, 0.3101, 0.7135, 0.9237], [0.6464, 0.0136, 0.1248, 0.889], [0.7848, 0.8809, 0.4957, 0.1857], [0.6348, 0.6938, 0.7641, 0.7803], [0.881, 0.4316, 0.1189, 0.8723], [0.3217, 0.5502, 0.8175, 0.2643], [0.4387, 0.7893, 0.0466, 0.3089], [0.6405, 0.6247, 0.3904, 0.6109], [0.4038, 0.9613, 0.7076, 0.4701], [0.2258, 0.0378, 0.6009, 0.2528], [0.6358, 0.8038, 0.211, 0.4975], [0.5165, 0.2199, 0.7641, 0.5801], [0.6352, 0.0316, 0.1607, 0.1896]], [[0.5965, 0.5715, 0.9042, 0.7003], [0.3928, 0.057, 0.8386, 0.7634], [0.3536, 0.6657, 0.4886, 0.0889], [0.5672, 0.3969, 0.2767, 0.4381], [0.7909, 0.3561, 0.5304, 0.3068], [0.449, 0.6352, 0.9868, 0.6425], [0.5704, 0.4043, 0.4505, 0.2102], [0.4179, 0.1801, 0.3683, 0.8967], [0.1223, 0.4885, 0.3475, 0.3289], [0.8495, 0.3034, 0.0622, 0.668], [0.9014, 0.7081, 0.5673, 0.3385], [0.6793, 0.201, 0.773, 0.7534], [0.6231, 0.9472, 0.7179, 0.8026], [0.0809, 0.0623, 0.3251, 0.9882], [0.5602, 0.7096, 0.5239, 0.6102], [0.9649, 0.3871, 0.9768, 0.3313]]])
w[1] = np.array([[[0, 0, 0, 0]], [[0, 0, 0, 0]], [[0, 0, 0, 0]], [[0, 0, 0, 0]], [[0, 0, 0, 0]], [[0, 0, 0, 0]], [[0, 0, 0, 0]]])
model.get_layer('Loc23193').set_weights(w) 
in0Dot90260 = tf.constant([[[0.7772, 0.0574, 0.9602], [0.5606, 0.2929, 0.4814]]])
in1Dot90260 = tf.constant([[[0.2825, 0.246, 0.7186], [0.3825, 0.9267, 0.3214]]])
in0Con10826 = tf.constant([[0.4878, 0.0791, 0.1046, 0.8471, 0.9003, 0.8406, 0.2203, 0.6337, 0.7167, 0.6633, 0.6241, 0.8445, 0.0797, 0.5086, 0.3911, 0.2513, 0.5717, 0.102, 0.047]])
in0Con79219 = tf.constant([[[[0.8109, 0.3828]]]])
in0Dot19907 = tf.constant([[0.8172, 0.8765]])
in1Dot19907 = tf.constant([[0.3567, 0.7139]])
in0Con22721 = tf.constant([[0.2797, 0.6015, 0.2041, 0.6061, 0.0966, 0.5114, 0.961, 0.8946, 0.537, 0.2116, 0.8108, 0.4397, 0.4108, 0.247, 0.2129, 0.4464, 0.9212, 0.1702, 0.8327, 0.631, 0.8524]])
print (np.array2string(model.predict([in0Dot90260,in1Dot90260,in0Con10826,in0Con79219,in0Dot19907,in1Dot19907,in0Con22721],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Loc23193.png')

LDot90260 = dot_layer([[[0.7772, 0.0574, 0.9602], [0.5606, 0.2929, 0.4814]]], [[[0.2825, 0.246, 0.7186], [0.3825, 0.9267, 0.3214]]], 2, 2, Dot90260), 
LCon90666 = conv1D_layer(Dot90260, 1,[[[0.2333, 0.6044, 0.3408], [0.5152, 0.557, 0.8334]]],[0, 0, 0], 3, false, 1, Con90666), 
LFla53709 = flatten_layer(Con90666, Fla53709), 
LCon10826 = concatenate_layer([Fla53709,[[0.4878, 0.0791, 0.1046, 0.8471, 0.9003, 0.8406, 0.2203, 0.6337, 0.7167, 0.6633, 0.6241, 0.8445, 0.0797, 0.5086, 0.3911, 0.2513, 0.5717, 0.102, 0.047]]], 1, Con10826), 
LCon79219 = conv2D_transpose_layer([[[[0.8109, 0.3828]]]], 1, 1,[[[[0.9684, 0.4977], [0.4991, 0.6444]]]],[0, 0], 1, 11, false, Con79219), 
LRes30864 = reshape_layer(Con79219, [1, 22], Res30864), 
LFla94294 = flatten_layer(Res30864, Fla94294), 
LDot19907 = dot_layer([[0.8172, 0.8765]], [[0.3567, 0.7139]], 1, 1, Dot19907), 
LCon22721 = concatenate_layer([Dot19907,[[0.2797, 0.6015, 0.2041, 0.6061, 0.0966, 0.5114, 0.961, 0.8946, 0.537, 0.2116, 0.8108, 0.4397, 0.4108, 0.247, 0.2129, 0.4464, 0.9212, 0.1702, 0.8327, 0.631, 0.8524]]], 1, Con22721), 
LMax46062 = maximum_layer([Fla94294,Con22721], Max46062), 
LMul29179 = multiply_layer([Con10826,Max46062], Mul29179), 
LRes14726 = reshape_layer(Mul29179, [22, 1], Res14726), 
LRes17564 = reshape_layer(Res14726, [22, 1, 1], Res17564), 
LLoc23193 = locally_connected2D_layer(Res17564, 16, 1,[[[0.6564, 0.608, 0.0531, 0.5397], [0.9422, 0.9461, 0.909, 0.0788], [0.6001, 0.1971, 0.1287, 0.7529], [0.2888, 0.3788, 0.9366, 0.8627], [0.3284, 0.7896, 0.2994, 0.2526], [0.2582, 0.2735, 0.6101, 0.9284], [0.3961, 0.8613, 0.3561, 0.8788], [0.935, 0.7843, 0.8135, 0.9234], [0.6702, 0.1104, 0.0772, 0.4916], [0.6667, 0.4147, 0.1511, 0.7275], [0.0488, 0.9629, 0.401, 0.2104], [0.6217, 0.8604, 0.4027, 0.8827], [0.2206, 0.4994, 0.1056, 0.4851], [0.5221, 0.423, 0.2771, 0.9122], [0.5498, 0.4161, 0.3911, 0.4251], [0.2619, 0.2345, 0.4838, 0.579]], [[0.415, 0.8841, 0.0083, 0.0631], [0.3645, 0.7792, 0.3926, 0.3849], [0.5878, 0.4191, 0.8286, 0.4775], [0.4884, 0.4526, 0.8003, 0.8615], [0.4803, 0.1258, 0.0002, 0.9506], [0.4376, 0.1446, 0.5739, 0.4524], [0.3447, 0.9299, 0.0838, 0.589], [0.3837, 0.0857, 0.1908, 0.0388], [0.7571, 0.661, 0.8135, 0.0794], [0.2569, 0.4448, 0.4442, 0.4088], [0.9672, 0.0997, 0.3772, 0.5084], [0.5121, 0.4167, 0.8341, 0.221], [0.9463, 0.3514, 0.3608, 0.4203], [0.7291, 0.7866, 0.4132, 0.2633], [0.2149, 0.1626, 0.7503, 0.5399], [0.7514, 0.2116, 0.1072, 0.0576]], [[0.7827, 0.039, 0.6376, 0.8346], [0.3224, 0.706, 0.7789, 0.1118], [0.783, 0.283, 0.5234, 0.8429], [0.4261, 0.0702, 0.5564, 0.3687], [0.6331, 0.3098, 0.3622, 0.445], [0.7872, 0.2491, 0.1932, 0.6537], [0.8023, 0.8593, 0.7436, 0.4997], [0.2411, 0.8612, 0.4822, 0.1714], [0.5214, 0.9636, 0.8548, 0.0262], [0.9274, 0.3842, 0.9905, 0.3525], [0.0134, 0.7856, 0.119, 0.8534], [0.5163, 0.7373, 0.6371, 0.6008], [0.0789, 0.6913, 0.6535, 0.9151], [0.9236, 0.2466, 0.8802, 0.742], [0.1179, 0.1692, 0.9428, 0.6153], [0.2219, 0.2339, 0.5369, 0.225]], [[0.92, 0.4592, 0.3704, 0.9401], [0.7053, 0.7152, 0.5015, 0.3758], [0.8048, 0.0062, 0.505, 0.2416], [0.3141, 0.9489, 0.8849, 0.2554], [0.9447, 0.0998, 0.2844, 0.8703], [0.876, 0.8208, 0.3422, 0.9224], [0.9527, 0.314, 0.4923, 0.0802], [0.8727, 0.3049, 0.6099, 0.1508], [0.0659, 0.6106, 0.1728, 0.8845], [0.6869, 0.4872, 0.5209, 0.9041], [0.5082, 0.2197, 0.8764, 0.786], [0.538, 0.8931, 0.0173, 0.1163], [0.863, 0.6591, 0.8821, 0.5588], [0.5631, 0.1034, 0.9315, 0.5808], [0.5392, 0.5075, 0.7909, 0.5069], [0.7499, 0.9, 0.553, 0.9971]], [[0.6611, 0.7948, 0.135, 0.875], [0.6798, 0.4284, 0.2524, 0.478], [0.9651, 0.1211, 0.896, 0.3386], [0.2866, 0.115, 0.6814, 0.0659], [0.536, 0.8693, 0.0783, 0.7473], [0.0893, 0.3283, 0.3178, 0.0601], [0.4621, 0.1244, 0.7315, 0.549], [0.6048, 0.0213, 0.3762, 0.2061], [0.7452, 0.1618, 0.0664, 0.5692], [0.8989, 0.8445, 0.3527, 0.047], [0.0439, 0.6191, 0.5587, 0.0723], [0.4806, 0.4673, 0.7243, 0.9884], [0.0844, 0.7134, 0.1857, 0.2801], [0.9996, 0.095, 0.5713, 0.8766], [0.8196, 0.1188, 0.1899, 0.7729], [0.4509, 0.4219, 0.1436, 0.1426]], [[0.6698, 0.3666, 0.0147, 0.4507], [0.8457, 0.5068, 0.6388, 0.8106], [0.4257, 0.8807, 0.3061, 0.9779], [0.5556, 0.3101, 0.7135, 0.9237], [0.6464, 0.0136, 0.1248, 0.889], [0.7848, 0.8809, 0.4957, 0.1857], [0.6348, 0.6938, 0.7641, 0.7803], [0.881, 0.4316, 0.1189, 0.8723], [0.3217, 0.5502, 0.8175, 0.2643], [0.4387, 0.7893, 0.0466, 0.3089], [0.6405, 0.6247, 0.3904, 0.6109], [0.4038, 0.9613, 0.7076, 0.4701], [0.2258, 0.0378, 0.6009, 0.2528], [0.6358, 0.8038, 0.211, 0.4975], [0.5165, 0.2199, 0.7641, 0.5801], [0.6352, 0.0316, 0.1607, 0.1896]], [[0.5965, 0.5715, 0.9042, 0.7003], [0.3928, 0.057, 0.8386, 0.7634], [0.3536, 0.6657, 0.4886, 0.0889], [0.5672, 0.3969, 0.2767, 0.4381], [0.7909, 0.3561, 0.5304, 0.3068], [0.449, 0.6352, 0.9868, 0.6425], [0.5704, 0.4043, 0.4505, 0.2102], [0.4179, 0.1801, 0.3683, 0.8967], [0.1223, 0.4885, 0.3475, 0.3289], [0.8495, 0.3034, 0.0622, 0.668], [0.9014, 0.7081, 0.5673, 0.3385], [0.6793, 0.201, 0.773, 0.7534], [0.6231, 0.9472, 0.7179, 0.8026], [0.0809, 0.0623, 0.3251, 0.9882], [0.5602, 0.7096, 0.5239, 0.6102], [0.9649, 0.3871, 0.9768, 0.3313]]],[[[0, 0, 0, 0]], [[0, 0, 0, 0]], [[0, 0, 0, 0]], [[0, 0, 0, 0]], [[0, 0, 0, 0]], [[0, 0, 0, 0]], [[0, 0, 0, 0]]], 1, 1, Loc23193), 
exec_layers([LDot90260,LCon90666,LFla53709,LCon10826,LCon79219,LRes30864,LFla94294,LDot19907,LCon22721,LMax46062,LMul29179,LRes14726,LRes17564,LLoc23193],["Dot90260","Con90666","Fla53709","Con10826","Con79219","Res30864","Fla94294","Dot19907","Con22721","Max46062","Mul29179","Res14726","Res17564","Loc23193"],Loc23193,"Loc23193")

Actual (Unparsed): [[[[3.5310078, 3.2381120, 2.1707873, 3.4888642]], [[2.7070851, 2.5565051, 1.6285412, 1.6803000]], [[2.9518811, 2.2443262, 2.8269255, 2.6789551]], [[2.8254067, 2.2682875, 2.1084736, 3.0710837]], [[2.6257841, 1.7188981, 1.9629853, 1.7032109]], [[2.6386300, 2.5564656, 2.6243995, 3.3843265]], [[2.2009216, 1.8969869, 3.1269414, 2.7737789]]]]

Expected (Unparsed): [[[[3.5310077686404258,3.2381119366217903,2.170787296216477,3.4888641722539435]],[[2.7070850699882176,2.556505104840972,1.6285411652763961,1.6802999263207181]],[[2.951881071630289,2.244326198965894,2.8269255482903604,2.6789550717871324]],[[2.82540666613,2.268287498995,2.1084735660529996,3.071083671999]],[[2.6257840779600006,1.718898131642,1.962985259145,1.703210885716]],[[2.638629992488,2.5564654995199994,2.6243994746659998,3.3843264425529997]],[[2.2009215575639995,1.8969869289319996,3.12694140787,2.773778856982]]]]

Actual:   [[[[3.5311, 3.2382, 2.1708, 3.4889]], [[2.7071, 2.5566, 1.6286, 1.6803]], [[2.9519, 2.2444, 2.827, 2.679]], [[2.8255, 2.2683, 2.1085, 3.0711]], [[2.6258, 1.7189, 1.963, 1.7033]], [[2.6387, 2.5565, 2.6244, 3.3844]], [[2.201, 1.897, 3.127, 2.7738]]]]

Expected: [[[[3.5311, 3.2382, 2.1708, 3.4889]], [[2.7071, 2.5566, 1.6286, 1.6803]], [[2.9519, 2.2444, 2.827, 2.679]], [[2.8255, 2.2683, 2.1085, 3.0711]], [[2.6258, 1.7189, 1.963, 1.7033]], [[2.6387, 2.5565, 2.6244, 3.3844]], [[2.201, 1.897, 3.127, 2.7738]]]]