import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Con29146 = tf.keras.layers.Input(shape=([2, 2, 1]))

Con29146 = keras.layers.Conv2DTranspose(2, (2, 2),strides=(1, 1), padding='valid', name = 'Con29146', )(in0Con29146)
Res80111 = keras.layers.Reshape((3, 6), name = 'Res80111', )(Con29146)
Sim74425 = keras.layers.SimpleRNN(1,name = 'Sim74425', )(Res80111)
model = tf.keras.models.Model(inputs=[in0Con29146], outputs=Sim74425)
w = model.get_layer('Con29146').get_weights() 
w[0] = np.array([[[[0.5689], [0.9749]], [[0.5905], [0.5271]]], [[[0.1577], [0.4472]], [[0.8618], [0.6612]]]])
w[1] = np.array([0, 0])
model.get_layer('Con29146').set_weights(w) 
w = model.get_layer('Sim74425').get_weights() 
w[0] = np.array([[6], [4], [9], [3], [2], [1]])
w[1] = np.array([[5]])
w[2] = np.array([3])
model.get_layer('Sim74425').set_weights(w) 
in0Con29146 = tf.constant([[[[0.6662], [0.3793]], [[0.3538], [0.3428]]]])
print (np.array2string(model.predict([in0Con29146],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Sim74425.png')

LCon29146 = conv2D_transpose_layer([[[[0.6662], [0.3793]], [[0.3538], [0.3428]]]], 2, 2,[[[[0.5689], [0.9749]], [[0.5905], [0.5271]]], [[[0.1577], [0.4472]], [[0.8618], [0.6612]]]],[0, 0], 1, 1, false, Con29146), 
LRes80111 = reshape_layer(Con29146, [3, 6], Res80111), 
LSim74425 = simple_rnn_layer(Res80111,[[6], [4], [9], [3], [2], [1]],[[5]],[3], Sim74425), 
exec_layers([LCon29146,LRes80111,LSim74425],["Con29146","Res80111","Sim74425"],Sim74425,"Sim74425")

Actual (Unparsed): [[1.0000000]]

Expected (Unparsed): [[0.9999999999990304]]

Actual:   [[1]]

Expected: [[1]]