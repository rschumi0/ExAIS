import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Min96579 = tf.keras.layers.Input(shape=([2, 2, 2, 2]))
in1Min96579 = tf.keras.layers.Input(shape=([2, 2, 2, 2]))
in0Con61634 = tf.keras.layers.Input(shape=([3, 2]))
in0Dot64272 = tf.keras.layers.Input(shape=([3, 3]))
in1Dot64272 = tf.keras.layers.Input(shape=([3, 3]))
in0Zer10044 = tf.keras.layers.Input(shape=([1, 2]))
in0Con60390 = tf.keras.layers.Input(shape=([3, 1]))

Min96579 = keras.layers.Minimum(name = 'Min96579', )([in0Min96579,in1Min96579])
Res14619 = keras.layers.Reshape((2, 2, 4), name = 'Res14619', )(Min96579)
Res20872 = keras.layers.Reshape((2, 8), name = 'Res20872', )(Res14619)
Res20946 = keras.layers.Reshape((2, 8, 1), name = 'Res20946', )(Res20872)
Res55225 = keras.layers.Reshape((2, 8, 1, 1), name = 'Res55225', )(Res20946)
Glo96008 = keras.layers.GlobalMaxPool3D(name = 'Glo96008', )(Res55225)
Res22823 = keras.layers.Reshape((1, 1), name = 'Res22823', )(Glo96008)
Ave80143 = keras.layers.AveragePooling1D(pool_size=(1), strides=(10), padding='same', name = 'Ave80143', )(Res22823)
Zer46720 = keras.layers.ZeroPadding1D(padding=((2, 0)), name = 'Zer46720', )(Ave80143)
Con61634 = keras.layers.Concatenate(axis=2, name = 'Con61634', )([Zer46720,in0Con61634])
Dot64272 = keras.layers.Dot(axes=(2, 1), name = 'Dot64272', )([in0Dot64272,in1Dot64272])
Zer10044 = keras.layers.ZeroPadding1D(padding=((1, 1)), name = 'Zer10044', )(in0Zer10044)
Con60390 = keras.layers.Concatenate(axis=2, name = 'Con60390', )([Zer10044,in0Con60390])
Min68546 = keras.layers.Minimum(name = 'Min68546', )([Dot64272,Con60390])
Mul60268 = keras.layers.Multiply(name = 'Mul60268', )([Con61634,Min68546])
model = tf.keras.models.Model(inputs=[in0Min96579,in1Min96579,in0Con61634,in0Dot64272,in1Dot64272,in0Zer10044,in0Con60390], outputs=Mul60268)
in0Min96579 = tf.constant([[[[[0.9337, 0.7047], [0.3967, 0.2679]], [[0.9659, 0.0346], [0.9426, 0.0085]]], [[[0.6952, 0.8083], [0.2078, 0.9643]], [[0.753, 0.8198], [0.7468, 0.5284]]]]])
in1Min96579 = tf.constant([[[[[0.4699, 0.628], [0.3453, 0.474]], [[0.3731, 0.658], [0.0762, 0.6246]]], [[[0.4803, 0.5253], [0.6889, 0.9065]], [[0.1343, 0.8961], [0.5756, 0.8987]]]]])
in0Con61634 = tf.constant([[[0.5042, 0.3617], [0.5194, 0.2414], [0.5806, 0.7079]]])
in0Dot64272 = tf.constant([[[0.0027, 0.4933, 0.3314], [0.8068, 0.7863, 0.4374], [0.2317, 0.3822, 0.1228]]])
in1Dot64272 = tf.constant([[[0.9721, 0.7873, 0.6853], [0.1518, 0.7661, 0.906], [0.746, 0.2143, 0.4039]]])
in0Zer10044 = tf.constant([[[1.087, 1.1173]]])
in0Con60390 = tf.constant([[[0.6482], [0.5987], [0.2059]]])
print (np.array2string(model.predict([in0Min96579,in1Min96579,in0Con61634,in0Dot64272,in1Dot64272,in0Zer10044,in0Con60390],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Mul60268.png')

LMin96579 = minimum_layer([[[[[[0.9337, 0.7047], [0.3967, 0.2679]], [[0.9659, 0.0346], [0.9426, 0.0085]]], [[[0.6952, 0.8083], [0.2078, 0.9643]], [[0.753, 0.8198], [0.7468, 0.5284]]]]], [[[[[0.4699, 0.628], [0.3453, 0.474]], [[0.3731, 0.658], [0.0762, 0.6246]]], [[[0.4803, 0.5253], [0.6889, 0.9065]], [[0.1343, 0.8961], [0.5756, 0.8987]]]]]], Min96579), 
LRes14619 = reshape_layer(Min96579, [2, 2, 4], Res14619), 
LRes20872 = reshape_layer(Res14619, [2, 8], Res20872), 
LRes20946 = reshape_layer(Res20872, [2, 8, 1], Res20946), 
LRes55225 = reshape_layer(Res20946, [2, 8, 1, 1], Res55225), 
LGlo96008 = global_max_pool3D_layer(Res55225, Glo96008), 
LRes22823 = reshape_layer(Glo96008, [1, 1], Res22823), 
LAve80143 = average_pooling1D_layer(Res22823, 1, 10, true, Ave80143), 
LZer46720 = zero_padding1D_layer(Ave80143, 2, 0, Zer46720), 
LCon61634 = concatenate_layer([Zer46720,[[[0.5042, 0.3617], [0.5194, 0.2414], [0.5806, 0.7079]]]], 2, Con61634), 
LDot64272 = dot_layer([[[0.0027, 0.4933, 0.3314], [0.8068, 0.7863, 0.4374], [0.2317, 0.3822, 0.1228]]], [[[0.9721, 0.7873, 0.6853], [0.1518, 0.7661, 0.906], [0.746, 0.2143, 0.4039]]], 2, 1, Dot64272), 
LZer10044 = zero_padding1D_layer([[[1.087, 1.1173]]], 1, 1, Zer10044), 
LCon60390 = concatenate_layer([Zer10044,[[[0.6482], [0.5987], [0.2059]]]], 2, Con60390), 
LMin68546 = minimum_layer([Dot64272,Con60390], Min68546), 
LMul60268 = multiply_layer([Con61634,Min68546], Mul60268), 
exec_layers([LMin96579,LRes14619,LRes20872,LRes20946,LRes55225,LGlo96008,LRes22823,LAve80143,LZer46720,LCon61634,LDot64272,LZer10044,LCon60390,LMin68546,LMul60268],["Min96579","Res14619","Res20872","Res20946","Res55225","Glo96008","Res22823","Ave80143","Zer46720","Con61634","Dot64272","Zer10044","Con60390","Min68546","Mul60268"],Mul60268,"Mul60268")

Actual (Unparsed): [[[0.0000000, 0.0000000, 0.2107382], [0.0000000, 0.5803256, 0.1445262], [0.0000000, 0.0000000, 0.1457566]]]

Expected (Unparsed): [[[0,0.0,0.21073820056900003],[0.0,0.58032562,0.14452618],[0.0,0.0,0.14575660999999998]]]

Actual:   [[[0, 0, 0.2108], [0, 0.5804, 0.1446], [0, 0, 0.1458]]]

Expected: [[[0, 0, 0.2108], [0, 0.5804, 0.1446], [0, 0, 0.1458]]]