import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Dep64829 = tf.keras.layers.Input(shape=([2, 2, 2]))

Dep64829 = keras.layers.DepthwiseConv2D((1, 1),strides=(1, 1), padding='same', name = 'Dep64829', )(in0Dep64829)
Res76493 = keras.layers.Reshape((2, 4), name = 'Res76493', )(Dep64829)
Sim9454 = keras.layers.SimpleRNN(3,name = 'Sim9454', )(Res76493)
Sof77597 = keras.layers.Softmax(axis=1, name = 'Sof77597', )(Sim9454)
model = tf.keras.models.Model(inputs=[in0Dep64829], outputs=Sof77597)
w = model.get_layer('Dep64829').get_weights() 
w[0] = np.array([[[[0.7022], [0.5837]]]])
w[1] = np.array([0, 0])
model.get_layer('Dep64829').set_weights(w) 
w = model.get_layer('Sim9454').get_weights() 
w[0] = np.array([[3, 10, 5], [5, 7, 10], [10, 7, 1], [2, 9, 1]])
w[1] = np.array([[10, 3, 8], [3, 5, 6], [4, 1, 7]])
w[2] = np.array([3, 9, 3])
model.get_layer('Sim9454').set_weights(w) 
in0Dep64829 = tf.constant([[[[0.9142, 0.7332], [0.0002, 0.1436]], [[0.9218, 0.5286], [0.785, 0.3876]]]])
print (np.array2string(model.predict([in0Dep64829],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Sof77597.png')

LDep64829 = depthwise_conv2D_layer([[[[0.9142, 0.7332], [0.0002, 0.1436]], [[0.9218, 0.5286], [0.785, 0.3876]]]], 1, 1,[[[[0.7022], [0.5837]]]],[0, 0], 1, 1, true, Dep64829), 
LRes76493 = reshape_layer(Dep64829, [2, 4], Res76493), 
LSim9454 = simple_rnn_layer(Res76493,[[3, 10, 5], [5, 7, 10], [10, 7, 1], [2, 9, 1]],[[10, 3, 8], [3, 5, 6], [4, 1, 7]],[3, 9, 3], Sim9454), 
LSof77597 = softmax_layer(Sim9454, 1, Sof77597), 
exec_layers([LDep64829,LRes76493,LSim9454,LSof77597],["Dep64829","Res76493","Sim9454","Sof77597"],Sof77597,"Sof77597")

Actual (Unparsed): [[0.3333333, 0.3333333, 0.3333333]]

Expected (Unparsed): [[0.3333333333333333,0.3333333333333333,0.3333333333333333]]

Actual:   [[0.3334, 0.3334, 0.3334]]

Expected: [[0.3334, 0.3334, 0.3334]]