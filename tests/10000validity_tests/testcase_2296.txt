import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0ReL96536 = tf.keras.layers.Input(shape=([1, 2, 2]))
in0Cro76320 = tf.keras.layers.Input(shape=([4, 2, 1]))
in0Con22388 = tf.keras.layers.Input(shape=([2, 3]))

ReL96536 = keras.layers.ReLU(max_value=7.733014300751688, negative_slope=7.948334878407772, threshold=2.4297575829237594, name = 'ReL96536', input_shape=(1, 2, 2))(in0ReL96536)
Res27087 = keras.layers.Reshape((1, 4), name = 'Res27087', )(ReL96536)
Zer60054 = keras.layers.ZeroPadding1D(padding=((1, 0)), name = 'Zer60054', )(Res27087)
Cro76320 = keras.layers.Cropping2D(cropping=((1, 1), (0, 1)), name = 'Cro76320', )(in0Cro76320)
Thr82807 = keras.layers.ThresholdedReLU(theta=6.618377590389898, name = 'Thr82807', )(Cro76320)
Res98723 = keras.layers.Reshape((2, 1), name = 'Res98723', )(Thr82807)
Cro80537 = keras.layers.Cropping1D(cropping=((0, 0)), name = 'Cro80537', )(Res98723)
Con22388 = keras.layers.Concatenate(axis=2, name = 'Con22388', )([Cro80537,in0Con22388])
Mul53829 = keras.layers.Multiply(name = 'Mul53829', )([Zer60054,Con22388])
model = tf.keras.models.Model(inputs=[in0ReL96536,in0Cro76320,in0Con22388], outputs=Mul53829)
in0ReL96536 = tf.constant([[[[0.6186, 0.4482], [0.0097, 0.388]]]])
in0Cro76320 = tf.constant([[[[1.6486], [1.7321]], [[1.3756], [1.2862]], [[1.8852], [1.8745]], [[1.8297], [1.6914]]]])
in0Con22388 = tf.constant([[[0.1043, 0.0862, 0.4413], [0.4046, 0.1827, 0.4711]]])
print (np.array2string(model.predict([in0ReL96536,in0Cro76320,in0Con22388],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Mul53829.png')

LReL96536 = relu_layer([[[[0.6186, 0.4482], [0.0097, 0.388]]]], 7.733014300751688, 7.948334878407772, 2.4297575829237594, ReL96536), 
LRes27087 = reshape_layer(ReL96536, [1, 4], Res27087), 
LZer60054 = zero_padding1D_layer(Res27087, 1, 0, Zer60054), 
LCro76320 = cropping2D_layer([[[[1.6486], [1.7321]], [[1.3756], [1.2862]], [[1.8852], [1.8745]], [[1.8297], [1.6914]]]], 1, 1, 0, 1, Cro76320), 
LThr82807 = thresholded_relu_layer(Cro76320, 6.618377590389898, Thr82807), 
LRes98723 = reshape_layer(Thr82807, [2, 1], Res98723), 
LCro80537 = cropping1D_layer(Res98723, 0, 0, Cro80537), 
LCon22388 = concatenate_layer([Cro80537,[[[0.1043, 0.0862, 0.4413], [0.4046, 0.1827, 0.4711]]]], 2, Con22388), 
LMul53829 = multiply_layer([Zer60054,Con22388], Mul53829), 
exec_layers([LReL96536,LRes27087,LZer60054,LCro76320,LThr82807,LRes98723,LCro80537,LCon22388,LMul53829],["ReL96536","Res27087","Zer60054","Cro76320","Thr82807","Res98723","Cro80537","Con22388","Mul53829"],Mul53829,"Mul53829")

Actual (Unparsed): [[[0.0000000, 0.0000000, 0.0000000, 0.0000000], [-0.0000000, -6.3724836, -3.5143126, -7.6452807]]]

Expected (Unparsed): [[[0,0.0,0.0,0.0],[-0.0,-6.37248368292019,-3.5143127127935547,-7.645280744825607]]]

Actual:   [[[0, 0, 0, 0], [-0, -6.3724, -3.5143, -7.6452]]]

Expected: [[[0, 0, 0, 0], [-0, -6.3724, -3.5143, -7.6452]]]