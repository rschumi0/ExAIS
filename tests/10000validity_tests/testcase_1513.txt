import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Up_31831 = tf.keras.layers.Input(shape=([2, 3]))

Up_31831 = keras.layers.UpSampling1D(size=(1), name = 'Up_31831', )(in0Up_31831)
Res94513 = keras.layers.Reshape((2, 3, 1), name = 'Res94513', )(Up_31831)
Res54021 = keras.layers.Reshape((2, 3, 1, 1), name = 'Res54021', )(Res94513)
Glo30680 = keras.layers.GlobalAveragePooling3D(name = 'Glo30680', )(Res54021)
model = tf.keras.models.Model(inputs=[in0Up_31831], outputs=Glo30680)
in0Up_31831 = tf.constant([[[1.1173, 1.2756, 1.9313], [1.3422, 1.1664, 1.8783]]])
print (np.array2string(model.predict([in0Up_31831],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Glo30680.png')

LUp_31831 = up_sampling1D_layer([[[1.1173, 1.2756, 1.9313], [1.3422, 1.1664, 1.8783]]], 1, Up_31831), 
LRes94513 = reshape_layer(Up_31831, [2, 3, 1], Res94513), 
LRes54021 = reshape_layer(Res94513, [2, 3, 1, 1], Res54021), 
LGlo30680 = global_average_pooling3D_layer(Res54021, Glo30680), 
exec_layers([LUp_31831,LRes94513,LRes54021,LGlo30680],["Up_31831","Res94513","Res54021","Glo30680"],Glo30680,"Glo30680")

Actual (Unparsed): [[1.4518500]]

Expected (Unparsed): [[1.45185]]

Actual:   [[1.4519]]

Expected: [[1.4519]]