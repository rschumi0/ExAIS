import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Sub12215 = tf.keras.layers.Input(shape=([3, 3, 2, 2]))
in1Sub12215 = tf.keras.layers.Input(shape=([3, 3, 2, 2]))
in0Ave21191 = tf.keras.layers.Input(shape=([1, 2, 1]))
in1Ave21191 = tf.keras.layers.Input(shape=([1, 2, 1]))
in0Con56508 = tf.keras.layers.Input(shape=([3, 3, 3]))
in0Add24452 = tf.keras.layers.Input(shape=([1, 2, 2, 1]))
in1Add24452 = tf.keras.layers.Input(shape=([1, 2, 2, 1]))
in0Con95305 = tf.keras.layers.Input(shape=([32]))

Sub12215 = keras.layers.Subtract(name = 'Sub12215', )([in0Sub12215,in1Sub12215])
Res3699 = keras.layers.Reshape((3, 3, 4), name = 'Res3699', )(Sub12215)
Ave21191 = keras.layers.Average(name = 'Ave21191', )([in0Ave21191,in1Ave21191])
Zer24779 = keras.layers.ZeroPadding2D(padding=((2, 0), (1, 0)), name = 'Zer24779', )(Ave21191)
Con56508 = keras.layers.Concatenate(axis=3, name = 'Con56508', )([Zer24779,in0Con56508])
Ave82375 = keras.layers.Average(name = 'Ave82375', )([Res3699,Con56508])
Res49028 = keras.layers.Reshape((3, 12), name = 'Res49028', )(Ave82375)
Fla33799 = keras.layers.Flatten(name = 'Fla33799', )(Res49028)
Add24452 = keras.layers.Add(name = 'Add24452', )([in0Add24452,in1Add24452])
Res28055 = keras.layers.Reshape((1, 2, 2), name = 'Res28055', )(Add24452)
Res18043 = keras.layers.Reshape((1, 4), name = 'Res18043', )(Res28055)
Glo11095 = keras.layers.GlobalAveragePooling1D(name = 'Glo11095', )(Res18043)
Con95305 = keras.layers.Concatenate(axis=1, name = 'Con95305', )([Glo11095,in0Con95305])
Add14668 = keras.layers.Add(name = 'Add14668', )([Fla33799,Con95305])
Res51046 = keras.layers.Reshape((36, 1), name = 'Res51046', )(Add14668)
Sim48179 = keras.layers.SimpleRNN(1,name = 'Sim48179', )(Res51046)
model = tf.keras.models.Model(inputs=[in0Sub12215,in1Sub12215,in0Ave21191,in1Ave21191,in0Con56508,in0Add24452,in1Add24452,in0Con95305], outputs=Sim48179)
w = model.get_layer('Sim48179').get_weights() 
w[0] = np.array([[7]])
w[1] = np.array([[4]])
w[2] = np.array([6])
model.get_layer('Sim48179').set_weights(w) 
in0Sub12215 = tf.constant([[[[[0.9463, 0.9509], [0.1739, 0.5969]], [[0.4057, 0.4935], [0.6229, 0.5123]], [[0.1653, 0.5948], [0.6336, 0.4682]]], [[[0.1918, 0.1828], [0.0708, 0.3999]], [[0.1874, 0.3647], [0.4824, 0.4207]], [[0.5979, 0.8973], [0.1643, 0.0501]]], [[[0.4072, 0.2362], [0.2283, 0.6362]], [[0.9197, 0.0416], [0.3674, 0.6302]], [[0.941, 0.3607], [0.2944, 0.9088]]]]])
in1Sub12215 = tf.constant([[[[[0.3777, 0.7041], [0.0241, 0.0456]], [[0.3033, 0.886], [0.2701, 0.2865]], [[0.9575, 0.8084], [0.2278, 0.9971]]], [[[0.9858, 0.335], [0.9289, 0.5192]], [[0.4592, 0.0218], [0.1719, 0.6993]], [[0.865, 0.7518], [0.751, 0.8327]]], [[[0.307, 0.2529], [0.3428, 0.4034]], [[0.6141, 0.0713], [0.9401, 0.7984]], [[0.9198, 0.8192], [0.1691, 0.118]]]]])
in0Ave21191 = tf.constant([[[[0.5446], [0.418]]]])
in1Ave21191 = tf.constant([[[[0.1716], [0.3177]]]])
in0Con56508 = tf.constant([[[[0.1919, 0.2678, 0.8927], [0.8493, 0.1232, 0.476], [0.9381, 0.2958, 0.8511]], [[0.5079, 0.5891, 0.5853], [0.5625, 0.15, 0.7774], [0.6316, 0.9089, 0.6196]], [[0.0498, 0.2883, 0.9551], [0.2748, 0.195, 0.9658], [0.6354, 0.7962, 0.7672]]]])
in0Add24452 = tf.constant([[[[[0.6928], [0.6183]], [[0.9909], [0.1745]]]]])
in1Add24452 = tf.constant([[[[[0.5539], [0.2943]], [[0.5605], [0.9915]]]]])
in0Con95305 = tf.constant([[0.4048, 0.0831, 0.2497, 0.5249, 0.6516, 0.7481, 0.9912, 0.1063, 0.3685, 0.3591, 0.3573, 0.2144, 0.6747, 0.0282, 0.0837, 0.3074, 0.5999, 0.1891, 0.294, 0.9997, 0.4908, 0.2263, 0.5423, 0.0864, 0.1861, 0.2885, 0.6626, 0.3879, 0.6152, 0.3218, 0.4954, 0.6391]])
print (np.array2string(model.predict([in0Sub12215,in1Sub12215,in0Ave21191,in1Ave21191,in0Con56508,in0Add24452,in1Add24452,in0Con95305],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Sim48179.png')

LSub12215 = subtract_layer([[[[[0.9463, 0.9509], [0.1739, 0.5969]], [[0.4057, 0.4935], [0.6229, 0.5123]], [[0.1653, 0.5948], [0.6336, 0.4682]]], [[[0.1918, 0.1828], [0.0708, 0.3999]], [[0.1874, 0.3647], [0.4824, 0.4207]], [[0.5979, 0.8973], [0.1643, 0.0501]]], [[[0.4072, 0.2362], [0.2283, 0.6362]], [[0.9197, 0.0416], [0.3674, 0.6302]], [[0.941, 0.3607], [0.2944, 0.9088]]]]], [[[[[0.3777, 0.7041], [0.0241, 0.0456]], [[0.3033, 0.886], [0.2701, 0.2865]], [[0.9575, 0.8084], [0.2278, 0.9971]]], [[[0.9858, 0.335], [0.9289, 0.5192]], [[0.4592, 0.0218], [0.1719, 0.6993]], [[0.865, 0.7518], [0.751, 0.8327]]], [[[0.307, 0.2529], [0.3428, 0.4034]], [[0.6141, 0.0713], [0.9401, 0.7984]], [[0.9198, 0.8192], [0.1691, 0.118]]]]], Sub12215), 
LRes3699 = reshape_layer(Sub12215, [3, 3, 4], Res3699), 
LAve21191 = average_layer([[[[[0.5446], [0.418]]]], [[[[0.1716], [0.3177]]]]], Ave21191), 
LZer24779 = zero_padding2D_layer(Ave21191, 2, 0, 1, 0, Zer24779), 
LCon56508 = concatenate_layer([Zer24779,[[[[0.1919, 0.2678, 0.8927], [0.8493, 0.1232, 0.476], [0.9381, 0.2958, 0.8511]], [[0.5079, 0.5891, 0.5853], [0.5625, 0.15, 0.7774], [0.6316, 0.9089, 0.6196]], [[0.0498, 0.2883, 0.9551], [0.2748, 0.195, 0.9658], [0.6354, 0.7962, 0.7672]]]]], 3, Con56508), 
LAve82375 = average_layer([Res3699,Con56508], Ave82375), 
LRes49028 = reshape_layer(Ave82375, [3, 12], Res49028), 
LFla33799 = flatten_layer(Res49028, Fla33799), 
LAdd24452 = add_layer([[[[[[0.6928], [0.6183]], [[0.9909], [0.1745]]]]], [[[[[0.5539], [0.2943]], [[0.5605], [0.9915]]]]]], Add24452), 
LRes28055 = reshape_layer(Add24452, [1, 2, 2], Res28055), 
LRes18043 = reshape_layer(Res28055, [1, 4], Res18043), 
LGlo11095 = global_average_pooling1D_layer(Res18043, Glo11095), 
LCon95305 = concatenate_layer([Glo11095,[[0.4048, 0.0831, 0.2497, 0.5249, 0.6516, 0.7481, 0.9912, 0.1063, 0.3685, 0.3591, 0.3573, 0.2144, 0.6747, 0.0282, 0.0837, 0.3074, 0.5999, 0.1891, 0.294, 0.9997, 0.4908, 0.2263, 0.5423, 0.0864, 0.1861, 0.2885, 0.6626, 0.3879, 0.6152, 0.3218, 0.4954, 0.6391]]], 1, Con95305), 
LAdd14668 = add_layer([Fla33799,Con95305], Add14668), 
LRes51046 = reshape_layer(Add14668, [36, 1], Res51046), 
LSim48179 = simple_rnn_layer(Res51046,[[7]],[[4]],[6], Sim48179), 
exec_layers([LSub12215,LRes3699,LAve21191,LZer24779,LCon56508,LAve82375,LRes49028,LFla33799,LAdd24452,LRes28055,LRes18043,LGlo11095,LCon95305,LAdd14668,LRes51046,LSim48179],["Sub12215","Res3699","Ave21191","Zer24779","Con56508","Ave82375","Res49028","Fla33799","Add24452","Res28055","Res18043","Glo11095","Con95305","Add14668","Res51046","Sim48179"],Sim48179,"Sim48179")

Actual (Unparsed): [[1.0000000]]

Expected (Unparsed): [[1.0]]

Actual:   [[1]]

Expected: [[1]]