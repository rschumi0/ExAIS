import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Min91376 = tf.keras.layers.Input(shape=([2, 2, 2]))
in1Min91376 = tf.keras.layers.Input(shape=([2, 2, 2]))
in0Dot44944 = tf.keras.layers.Input(shape=([2, 2]))
in1Dot44944 = tf.keras.layers.Input(shape=([2, 2]))
in0Con28972 = tf.keras.layers.Input(shape=([2, 2]))
in0Ave10153 = tf.keras.layers.Input(shape=([1, 2]))
in1Ave10153 = tf.keras.layers.Input(shape=([1, 2]))
in0Con32909 = tf.keras.layers.Input(shape=([2, 2]))

Min91376 = keras.layers.Minimum(name = 'Min91376', )([in0Min91376,in1Min91376])
Res11136 = keras.layers.Reshape((2, 4), name = 'Res11136', )(Min91376)
Dot44944 = keras.layers.Dot(axes=(2, 2), name = 'Dot44944', )([in0Dot44944,in1Dot44944])
Con28972 = keras.layers.Concatenate(axis=2, name = 'Con28972', )([Dot44944,in0Con28972])
Add12249 = keras.layers.Add(name = 'Add12249', )([Res11136,Con28972])
Ave10153 = keras.layers.Average(name = 'Ave10153', )([in0Ave10153,in1Ave10153])
Mas22742 = keras.layers.Masking(mask_value=1, name = 'Mas22742', )(Ave10153)
Zer92367 = keras.layers.ZeroPadding1D(padding=((1, 0)), name = 'Zer92367', )(Mas22742)
Con32909 = keras.layers.Concatenate(axis=2, name = 'Con32909', )([Zer92367,in0Con32909])
Mul75830 = keras.layers.Multiply(name = 'Mul75830', )([Add12249,Con32909])
model = tf.keras.models.Model(inputs=[in0Min91376,in1Min91376,in0Dot44944,in1Dot44944,in0Con28972,in0Ave10153,in1Ave10153,in0Con32909], outputs=Mul75830)
in0Min91376 = tf.constant([[[[0.5194, 0.6594], [0.1203, 0.8389]], [[0.5027, 0.6745], [0.3741, 0.9469]]]])
in1Min91376 = tf.constant([[[[0.159, 0.2141], [0.9485, 0.3765]], [[0.5576, 0.8588], [0.1671, 0.8476]]]])
in0Dot44944 = tf.constant([[[0.9661, 0.1444], [0.5913, 0.0896]]])
in1Dot44944 = tf.constant([[[0.0748, 0.9018], [0.6164, 0.0781]]])
in0Con28972 = tf.constant([[[0.4028, 0.2177], [0.7309, 0.7769]]])
in0Ave10153 = tf.constant([[[0.2831, 0.0817]]])
in1Ave10153 = tf.constant([[[0.7735, 0.9849]]])
in0Con32909 = tf.constant([[[0.9677, 0.3416], [0.5644, 0.0726]]])
print (np.array2string(model.predict([in0Min91376,in1Min91376,in0Dot44944,in1Dot44944,in0Con28972,in0Ave10153,in1Ave10153,in0Con32909],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Mul75830.png')

LMin91376 = minimum_layer([[[[[0.5194, 0.6594], [0.1203, 0.8389]], [[0.5027, 0.6745], [0.3741, 0.9469]]]], [[[[0.159, 0.2141], [0.9485, 0.3765]], [[0.5576, 0.8588], [0.1671, 0.8476]]]]], Min91376), 
LRes11136 = reshape_layer(Min91376, [2, 4], Res11136), 
LDot44944 = dot_layer([[[0.9661, 0.1444], [0.5913, 0.0896]]], [[[0.0748, 0.9018], [0.6164, 0.0781]]], 2, 2, Dot44944), 
LCon28972 = concatenate_layer([Dot44944,[[[0.4028, 0.2177], [0.7309, 0.7769]]]], 2, Con28972), 
LAdd12249 = add_layer([Res11136,Con28972], Add12249), 
LAve10153 = average_layer([[[[0.2831, 0.0817]]], [[[0.7735, 0.9849]]]], Ave10153), 
LMas22742 = masking_layer(Ave10153, 1, Mas22742), 
LZer92367 = zero_padding1D_layer(Mas22742, 1, 0, Zer92367), 
LCon32909 = concatenate_layer([Zer92367,[[[0.9677, 0.3416], [0.5644, 0.0726]]]], 2, Con32909), 
LMul75830 = multiply_layer([Add12249,Con32909], Mul75830), 
exec_layers([LMin91376,LRes11136,LDot44944,LCon28972,LAdd12249,LAve10153,LMas22742,LZer92367,LCon32909,LMul75830],["Min91376","Res11136","Dot44944","Con28972","Add12249","Ave10153","Mas22742","Zer92367","Con32909","Mul75830"],Mul75830,"Mul75830")

Actual (Unparsed): [[[0.0000000, 0.0000000, 0.5062039, 0.2029787], [0.3316300, 0.5578185, 0.5068312, 0.1179387]]]

Expected (Unparsed): [[[0.0,0.0,0.50620387,0.20297872000000003],[0.33163003371600003,0.5578185101640001,0.5068312,0.11793870000000001]]]

Actual:   [[[0, 0, 0.5063, 0.203], [0.3317, 0.5579, 0.5069, 0.118]]]

Expected: [[[0, 0, 0.5063, 0.203], [0.3317, 0.5579, 0.5069, 0.118]]]