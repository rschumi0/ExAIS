import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Ave1603 = tf.keras.layers.Input(shape=([1, 2]))
in1Ave1603 = tf.keras.layers.Input(shape=([1, 2]))
in0Dot57074 = tf.keras.layers.Input(shape=([2]))
in1Dot57074 = tf.keras.layers.Input(shape=([2]))
in0Con19506 = tf.keras.layers.Input(shape=([1]))
in0Up_73614 = tf.keras.layers.Input(shape=([4, 4, 1, 4]))
in0Con84863 = tf.keras.layers.Input(shape=([2]))

Ave1603 = keras.layers.Average(name = 'Ave1603', )([in0Ave1603,in1Ave1603])
Fla26787 = keras.layers.Flatten(name = 'Fla26787', )(Ave1603)
Dot57074 = keras.layers.Dot(axes=(1, 1), name = 'Dot57074', )([in0Dot57074,in1Dot57074])
Con19506 = keras.layers.Concatenate(axis=1, name = 'Con19506', )([Dot57074,in0Con19506])
Add13594 = keras.layers.Add(name = 'Add13594', )([Fla26787,Con19506])
Res33190 = keras.layers.Reshape((2, 1), name = 'Res33190', )(Add13594)
Sep64994 = keras.layers.SeparableConv1D(4, (2),strides=(2), padding='valid', name = 'Sep64994', )(Res33190)
Fla37968 = keras.layers.Flatten(name = 'Fla37968', )(Sep64994)
Up_73614 = keras.layers.UpSampling3D(size=(2, 2, 2), name = 'Up_73614', )(in0Up_73614)
Res96185 = keras.layers.Reshape((8, 8, 8), name = 'Res96185', )(Up_73614)
Res99008 = keras.layers.Reshape((8, 64), name = 'Res99008', )(Res96185)
GRU77537 = keras.layers.GRU(2,reset_after=True, recurrent_activation='sigmoid', name = 'GRU77537', )(Res99008)
Con84863 = keras.layers.Concatenate(axis=1, name = 'Con84863', )([GRU77537,in0Con84863])
Max84504 = keras.layers.Maximum(name = 'Max84504', )([Fla37968,Con84863])
model = tf.keras.models.Model(inputs=[in0Ave1603,in1Ave1603,in0Dot57074,in1Dot57074,in0Con19506,in0Up_73614,in0Con84863], outputs=Max84504)
w = model.get_layer('Sep64994').get_weights() 
w[0] = np.array([[[0.5927]], [[0.336]]])
w[1] = np.array([[[0.9384, 0.2449, 0.9195, 0.8628]]])
w[2] = np.array([0, 0, 0, 0])
model.get_layer('Sep64994').set_weights(w) 
w = model.get_layer('GRU77537').get_weights() 
w[0] = np.array([[10, 6, 4, 3, 3, 1], [8, 8, 3, 7, 8, 9], [3, 3, 3, 8, 3, 2], [8, 7, 1, 9, 8, 10], [8, 4, 4, 5, 2, 6], [2, 3, 4, 2, 7, 8], [8, 5, 2, 6, 5, 7], [3, 9, 1, 7, 5, 8], [3, 4, 3, 5, 4, 4], [10, 6, 3, 7, 8, 7], [3, 4, 6, 9, 2, 10], [6, 8, 8, 6, 2, 8], [5, 6, 5, 5, 1, 6], [9, 5, 3, 6, 9, 1], [7, 9, 10, 9, 8, 3], [3, 3, 1, 3, 7, 5], [8, 2, 2, 4, 1, 1], [8, 7, 1, 9, 10, 4], [5, 4, 4, 1, 6, 6], [6, 2, 10, 7, 6, 3], [2, 5, 2, 1, 7, 2], [1, 5, 8, 2, 2, 6], [4, 5, 6, 7, 5, 10], [1, 7, 1, 5, 10, 7], [1, 2, 2, 9, 3, 3], [7, 10, 7, 4, 6, 3], [5, 6, 5, 3, 6, 4], [8, 5, 9, 1, 2, 7], [6, 3, 9, 10, 8, 6], [2, 7, 8, 6, 4, 4], [10, 4, 4, 9, 9, 10], [9, 5, 4, 10, 9, 2], [3, 10, 3, 8, 6, 7], [5, 1, 6, 8, 5, 10], [6, 5, 9, 5, 1, 10], [1, 5, 3, 5, 9, 9], [6, 1, 8, 4, 3, 5], [1, 1, 8, 2, 2, 1], [9, 2, 5, 5, 6, 1], [6, 9, 3, 1, 8, 6], [2, 4, 7, 1, 1, 3], [3, 4, 8, 3, 9, 10], [4, 6, 5, 10, 6, 8], [6, 8, 3, 5, 6, 6], [10, 8, 2, 1, 3, 9], [6, 10, 3, 5, 10, 9], [9, 7, 5, 4, 2, 2], [4, 10, 10, 10, 2, 2], [9, 9, 8, 10, 7, 9], [2, 4, 6, 3, 4, 1], [4, 1, 3, 3, 3, 6], [3, 5, 5, 6, 9, 3], [4, 2, 1, 3, 2, 6], [6, 1, 2, 4, 5, 10], [8, 6, 3, 10, 4, 2], [6, 4, 8, 6, 8, 9], [4, 1, 4, 6, 4, 3], [6, 6, 8, 5, 8, 5], [10, 7, 10, 7, 2, 3], [4, 4, 2, 1, 2, 1], [4, 9, 4, 7, 7, 10], [5, 8, 8, 1, 5, 6], [2, 4, 2, 4, 9, 4], [10, 9, 1, 3, 9, 1]])
w[1] = np.array([[3, 9, 3, 8, 4, 8], [9, 1, 9, 8, 8, 4]])
w[2] = np.array([[7, 4, 8, 6, 6, 4], [1, 6, 10, 10, 10, 1]])
model.get_layer('GRU77537').set_weights(w) 
in0Ave1603 = tf.constant([[[0.1576, 0.1255]]])
in1Ave1603 = tf.constant([[[0.0985, 0.3942]]])
in0Dot57074 = tf.constant([[0.0612, 0.3764]])
in1Dot57074 = tf.constant([[0.9565, 0.8199]])
in0Con19506 = tf.constant([[0.58]])
in0Up_73614 = tf.constant([[[[[1.3235, 1.3238, 1.081, 1.0616]], [[1.965, 1.5979, 1.0517, 1.4284]], [[1.59, 1.4608, 1.6865, 1.6905]], [[1.1538, 1.5056, 1.0326, 1.6938]]], [[[1.1435, 1.5333, 1.2856, 1.6828]], [[1.8837, 1.6876, 1.5251, 1.1701]], [[1.7243, 1.4492, 1.717, 1.8533]], [[1.1991, 1.1502, 1.7766, 1.7799]]], [[[1.8533, 1.2543, 1.6153, 1.6854]], [[1.3286, 1.7674, 1.9982, 1.1897]], [[1.4698, 1.7918, 1.7295, 1.3275]], [[1.6676, 1.4182, 1.1535, 1.7085]]], [[[1.392, 1.8633, 1.2064, 1.4569]], [[1.8818, 2, 1.2916, 1.9628]], [[1.26, 1.2065, 1.0595, 1.3926]], [[1.9171, 1.762, 1.771, 1.8536]]]]])
in0Con84863 = tf.constant([[0.8439, 0.8041]])
print (np.array2string(model.predict([in0Ave1603,in1Ave1603,in0Dot57074,in1Dot57074,in0Con19506,in0Up_73614,in0Con84863],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Max84504.png')

LAve1603 = average_layer([[[[0.1576, 0.1255]]], [[[0.0985, 0.3942]]]], Ave1603), 
LFla26787 = flatten_layer(Ave1603, Fla26787), 
LDot57074 = dot_layer([[0.0612, 0.3764]], [[0.9565, 0.8199]], 1, 1, Dot57074), 
LCon19506 = concatenate_layer([Dot57074,[[0.58]]], 1, Con19506), 
LAdd13594 = add_layer([Fla26787,Con19506], Add13594), 
LRes33190 = reshape_layer(Add13594, [2, 1], Res33190), 
LSep64994 = separable_conv1D_layer(Res33190, 2,[[[[0.5927]], [[0.336]]],[[[0.9384, 0.2449, 0.9195, 0.8628]]]],[0, 0, 0, 0], 2, false, Sep64994), 
LFla37968 = flatten_layer(Sep64994, Fla37968), 
LUp_73614 = up_sampling3D_layer([[[[[1.3235, 1.3238, 1.081, 1.0616]], [[1.965, 1.5979, 1.0517, 1.4284]], [[1.59, 1.4608, 1.6865, 1.6905]], [[1.1538, 1.5056, 1.0326, 1.6938]]], [[[1.1435, 1.5333, 1.2856, 1.6828]], [[1.8837, 1.6876, 1.5251, 1.1701]], [[1.7243, 1.4492, 1.717, 1.8533]], [[1.1991, 1.1502, 1.7766, 1.7799]]], [[[1.8533, 1.2543, 1.6153, 1.6854]], [[1.3286, 1.7674, 1.9982, 1.1897]], [[1.4698, 1.7918, 1.7295, 1.3275]], [[1.6676, 1.4182, 1.1535, 1.7085]]], [[[1.392, 1.8633, 1.2064, 1.4569]], [[1.8818, 2, 1.2916, 1.9628]], [[1.26, 1.2065, 1.0595, 1.3926]], [[1.9171, 1.762, 1.771, 1.8536]]]]], 2, 2, 2, Up_73614), 
LRes96185 = reshape_layer(Up_73614, [8, 8, 8], Res96185), 
LRes99008 = reshape_layer(Res96185, [8, 64], Res99008), 
LGRU77537 = gru_layer(Res99008,[[10, 6, 4, 3, 3, 1], [8, 8, 3, 7, 8, 9], [3, 3, 3, 8, 3, 2], [8, 7, 1, 9, 8, 10], [8, 4, 4, 5, 2, 6], [2, 3, 4, 2, 7, 8], [8, 5, 2, 6, 5, 7], [3, 9, 1, 7, 5, 8], [3, 4, 3, 5, 4, 4], [10, 6, 3, 7, 8, 7], [3, 4, 6, 9, 2, 10], [6, 8, 8, 6, 2, 8], [5, 6, 5, 5, 1, 6], [9, 5, 3, 6, 9, 1], [7, 9, 10, 9, 8, 3], [3, 3, 1, 3, 7, 5], [8, 2, 2, 4, 1, 1], [8, 7, 1, 9, 10, 4], [5, 4, 4, 1, 6, 6], [6, 2, 10, 7, 6, 3], [2, 5, 2, 1, 7, 2], [1, 5, 8, 2, 2, 6], [4, 5, 6, 7, 5, 10], [1, 7, 1, 5, 10, 7], [1, 2, 2, 9, 3, 3], [7, 10, 7, 4, 6, 3], [5, 6, 5, 3, 6, 4], [8, 5, 9, 1, 2, 7], [6, 3, 9, 10, 8, 6], [2, 7, 8, 6, 4, 4], [10, 4, 4, 9, 9, 10], [9, 5, 4, 10, 9, 2], [3, 10, 3, 8, 6, 7], [5, 1, 6, 8, 5, 10], [6, 5, 9, 5, 1, 10], [1, 5, 3, 5, 9, 9], [6, 1, 8, 4, 3, 5], [1, 1, 8, 2, 2, 1], [9, 2, 5, 5, 6, 1], [6, 9, 3, 1, 8, 6], [2, 4, 7, 1, 1, 3], [3, 4, 8, 3, 9, 10], [4, 6, 5, 10, 6, 8], [6, 8, 3, 5, 6, 6], [10, 8, 2, 1, 3, 9], [6, 10, 3, 5, 10, 9], [9, 7, 5, 4, 2, 2], [4, 10, 10, 10, 2, 2], [9, 9, 8, 10, 7, 9], [2, 4, 6, 3, 4, 1], [4, 1, 3, 3, 3, 6], [3, 5, 5, 6, 9, 3], [4, 2, 1, 3, 2, 6], [6, 1, 2, 4, 5, 10], [8, 6, 3, 10, 4, 2], [6, 4, 8, 6, 8, 9], [4, 1, 4, 6, 4, 3], [6, 6, 8, 5, 8, 5], [10, 7, 10, 7, 2, 3], [4, 4, 2, 1, 2, 1], [4, 9, 4, 7, 7, 10], [5, 8, 8, 1, 5, 6], [2, 4, 2, 4, 9, 4], [10, 9, 1, 3, 9, 1]],[[3, 9, 3, 8, 4, 8], [9, 1, 9, 8, 8, 4]],[[7, 4, 8, 6, 6, 4], [1, 6, 10, 10, 10, 1]], true, GRU77537), 
LCon84863 = concatenate_layer([GRU77537,[[0.8439, 0.8041]]], 1, Con84863), 
LMax84504 = maximum_layer([Fla37968,Con84863], Max84504), 
exec_layers([LAve1603,LFla26787,LDot57074,LCon19506,LAdd13594,LRes33190,LSep64994,LFla37968,LUp_73614,LRes96185,LRes99008,LGRU77537,LCon84863,LMax84504],["Ave1603","Fla26787","Dot57074","Con19506","Add13594","Res33190","Sep64994","Fla37968","Up_73614","Res96185","Res99008","GRU77537","Con84863","Max84504"],Max84504,"Max84504")

Actual (Unparsed): [[0.5402308, 0.1409873, 0.8439000, 0.8041000]]

Expected (Unparsed): [[0.5402308267869887,0.1409873502558968,0.8439,0.8041]]

Actual:   [[0.5403, 0.141, 0.8439, 0.8041]]

Expected: [[0.5403, 0.141, 0.8439, 0.8041]]