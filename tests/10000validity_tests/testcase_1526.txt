import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Sub33531 = tf.keras.layers.Input(shape=([3, 3]))
in1Sub33531 = tf.keras.layers.Input(shape=([3, 3]))
in0Dot26675 = tf.keras.layers.Input(shape=([2, 2]))
in1Dot26675 = tf.keras.layers.Input(shape=([2, 2]))
in0Con16682 = tf.keras.layers.Input(shape=([3, 1]))
in0Con40803 = tf.keras.layers.Input(shape=([3, 3, 5, 1]))
in0Add83048 = tf.keras.layers.Input(shape=([1, 1, 2, 2]))
in1Add83048 = tf.keras.layers.Input(shape=([1, 1, 2, 2]))
in0Ave91690 = tf.keras.layers.Input(shape=([2, 1, 1, 2]))
in1Ave91690 = tf.keras.layers.Input(shape=([2, 1, 1, 2]))

Sub33531 = keras.layers.Subtract(name = 'Sub33531', )([in0Sub33531,in1Sub33531])
Dot26675 = keras.layers.Dot(axes=(1, 2), name = 'Dot26675', )([in0Dot26675,in1Dot26675])
Zer59590 = keras.layers.ZeroPadding1D(padding=((1, 0)), name = 'Zer59590', )(Dot26675)
Con16682 = keras.layers.Concatenate(axis=2, name = 'Con16682', )([Zer59590,in0Con16682])
Add10086 = keras.layers.Add(name = 'Add10086', )([Sub33531,Con16682])
Res70580 = keras.layers.Reshape((3, 3, 1), name = 'Res70580', )(Add10086)
Res87737 = keras.layers.Reshape((3, 3, 1, 1), name = 'Res87737', )(Res70580)
Zer69353 = keras.layers.ZeroPadding3D(padding=((0, 0), (0, 0), (4, 0)), name = 'Zer69353', )(Res87737)
Con40803 = keras.layers.Concatenate(axis=4, name = 'Con40803', )([Zer69353,in0Con40803])
Add83048 = keras.layers.Add(name = 'Add83048', )([in0Add83048,in1Add83048])
Zer50740 = keras.layers.ZeroPadding3D(padding=((1, 0), (0, 0), (1, 0)), name = 'Zer50740', )(Add83048)
Ave91690 = keras.layers.Average(name = 'Ave91690', )([in0Ave91690,in1Ave91690])
Lay25365 = keras.layers.LayerNormalization(axis=1, epsilon=2.0781484248723214, name = 'Lay25365', )(Ave91690)
Zer64565 = keras.layers.ZeroPadding3D(padding=((0, 0), (0, 0), (2, 0)), name = 'Zer64565', )(Lay25365)
Min29238 = keras.layers.Minimum(name = 'Min29238', )([Zer50740,Zer64565])
Zer46455 = keras.layers.ZeroPadding3D(padding=((1, 0), (2, 0), (2, 0)), name = 'Zer46455', )(Min29238)
Sub28128 = keras.layers.Subtract(name = 'Sub28128', )([Con40803,Zer46455])
model = tf.keras.models.Model(inputs=[in0Sub33531,in1Sub33531,in0Dot26675,in1Dot26675,in0Con16682,in0Con40803,in0Add83048,in1Add83048,in0Ave91690,in1Ave91690], outputs=Sub28128)
in0Sub33531 = tf.constant([[[0.4208, 0.5323, 0.9691], [0.9788, 0.7111, 0.7481], [0.0345, 0.34, 0.476]]])
in1Sub33531 = tf.constant([[[0.2542, 0.1884, 0.1959], [0.9558, 0.7182, 0.1488], [0.007, 0.6202, 0.9984]]])
in0Dot26675 = tf.constant([[[0.4851, 0.1612], [0.0687, 0.2779]]])
in1Dot26675 = tf.constant([[[0.2168, 0.8559], [0.1309, 0.2447]]])
in0Con16682 = tf.constant([[[0.1418], [0.1973], [0.6773]]])
in0Con40803 = tf.constant([[[[[0.2551], [0.5418], [0.2105], [0.7014], [0.0287]], [[0.9616], [0.7381], [0.5404], [0.7667], [0.5078]], [[0.1277], [0.3607], [0.1657], [0.4702], [0.2892]]], [[[0.9289], [0.5289], [0.0487], [0.3194], [0.3646]], [[0.1566], [0.7363], [0.0063], [0.0985], [0.739]], [[0.7442], [0.8649], [0.2316], [0.3136], [0.1442]]], [[[0.515], [0.905], [0.1327], [0.6244], [0.1897]], [[0.841], [0.2157], [0.8876], [0.3051], [0.178]], [[0.4569], [0.7551], [0.3117], [0.0818], [0.9024]]]]])
in0Add83048 = tf.constant([[[[[0.9758, 0.7219], [0.6212, 0.2535]]]]])
in1Add83048 = tf.constant([[[[[0.9733, 0.0736], [0.7531, 0.8403]]]]])
in0Ave91690 = tf.constant([[[[[0.143, 0.8097]]], [[[0.1769, 0.0527]]]]])
in1Ave91690 = tf.constant([[[[[0.8679, 0.2775]]], [[[0.9691, 0.8045]]]]])
print (np.array2string(model.predict([in0Sub33531,in1Sub33531,in0Dot26675,in1Dot26675,in0Con16682,in0Con40803,in0Add83048,in1Add83048,in0Ave91690,in1Ave91690],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Sub28128.png')

LSub33531 = subtract_layer([[[0.4208, 0.5323, 0.9691], [0.9788, 0.7111, 0.7481], [0.0345, 0.34, 0.476]]], [[[0.2542, 0.1884, 0.1959], [0.9558, 0.7182, 0.1488], [0.007, 0.6202, 0.9984]]], Sub33531), 
LDot26675 = dot_layer([[[0.4851, 0.1612], [0.0687, 0.2779]]], [[[0.2168, 0.8559], [0.1309, 0.2447]]], 1, 2, Dot26675), 
LZer59590 = zero_padding1D_layer(Dot26675, 1, 0, Zer59590), 
LCon16682 = concatenate_layer([Zer59590,[[[0.1418], [0.1973], [0.6773]]]], 2, Con16682), 
LAdd10086 = add_layer([Sub33531,Con16682], Add10086), 
LRes70580 = reshape_layer(Add10086, [3, 3, 1], Res70580), 
LRes87737 = reshape_layer(Res70580, [3, 3, 1, 1], Res87737), 
LZer69353 = zero_padding3D_layer(Res87737, 0, 0, 0, 0, 4, 0, Zer69353), 
LCon40803 = concatenate_layer([Zer69353,[[[[[0.2551], [0.5418], [0.2105], [0.7014], [0.0287]], [[0.9616], [0.7381], [0.5404], [0.7667], [0.5078]], [[0.1277], [0.3607], [0.1657], [0.4702], [0.2892]]], [[[0.9289], [0.5289], [0.0487], [0.3194], [0.3646]], [[0.1566], [0.7363], [0.0063], [0.0985], [0.739]], [[0.7442], [0.8649], [0.2316], [0.3136], [0.1442]]], [[[0.515], [0.905], [0.1327], [0.6244], [0.1897]], [[0.841], [0.2157], [0.8876], [0.3051], [0.178]], [[0.4569], [0.7551], [0.3117], [0.0818], [0.9024]]]]]], 4, Con40803), 
LAdd83048 = add_layer([[[[[[0.9758, 0.7219], [0.6212, 0.2535]]]]], [[[[[0.9733, 0.0736], [0.7531, 0.8403]]]]]], Add83048), 
LZer50740 = zero_padding3D_layer(Add83048, 1, 0, 0, 0, 1, 0, Zer50740), 
LAve91690 = average_layer([[[[[[0.143, 0.8097]]], [[[0.1769, 0.0527]]]]], [[[[[0.8679, 0.2775]]], [[[0.9691, 0.8045]]]]]], Ave91690), 
LLay25365 = layer_normalization_layer(Ave91690, 1, 2.0781484248723214, Lay25365), 
LZer64565 = zero_padding3D_layer(Lay25365, 0, 0, 0, 0, 2, 0, Zer64565), 
LMin29238 = minimum_layer([Zer50740,Zer64565], Min29238), 
LZer46455 = zero_padding3D_layer(Min29238, 1, 0, 2, 0, 2, 0, Zer46455), 
LSub28128 = subtract_layer(Con40803,Zer46455, Sub28128), 
exec_layers([LSub33531,LDot26675,LZer59590,LCon16682,LAdd10086,LRes70580,LRes87737,LZer69353,LCon40803,LAdd83048,LZer50740,LAve91690,LLay25365,LZer64565,LMin29238,LZer46455,LSub28128],["Sub33531","Dot26675","Zer59590","Con16682","Add10086","Res70580","Res87737","Zer69353","Con40803","Add83048","Zer50740","Ave91690","Lay25365","Zer64565","Min29238","Zer46455","Sub28128"],Sub28128,"Sub28128")

Actual (Unparsed): [[[[[0.0000000, 0.2551000], [0.0000000, 0.5418000], [0.0000000, 0.2105000], [0.0000000, 0.7014000], [0.1666000, 0.0287000]], [[0.0000000, 0.9616000], [0.0000000, 0.7381000], [0.0000000, 0.5404000], [0.0000000, 0.7667000], [0.3439000, 0.5078000]], [[0.0000000, 0.1277000], [0.0000000, 0.3607000], [0.0000000, 0.1657000], [0.0000000, 0.4702000], [0.9150000, 0.2892000]]], [[[0.0000000, 0.9289000], [0.0000000, 0.5289000], [0.0000000, 0.0487000], [0.0000000, 0.3194000], [0.1869700, 0.3646000]], [[0.0000000, 0.1566000], [0.0000000, 0.7363000], [0.0000000, 0.0063000], [0.0000000, 0.0985000], [0.0732104, 0.7390000]], [[0.0000000, 0.7442000], [0.0000000, 0.8649000], [0.0000000, 0.2316000], [0.0000000, 0.3136000], [0.8200227, 0.1442000]]], [[[0.0000000, 0.5150000], [0.0000000, 0.9050000], [0.0000000, 0.1327000], [0.0000000, 0.6244000], [0.3003028, 0.1897000]], [[0.0000000, 0.8410000], [0.0000000, 0.2157000], [0.0000000, 0.8876000], [0.0000000, 0.3051000], [-0.1910968, 0.1780000]], [[0.0000000, 0.4569000], [0.0000000, 0.7551000], [0.0000000, 0.3117000], [0.0000000, 0.0818000], [0.1314773, 0.9422552]]]]]

Expected (Unparsed): [[[[[0,0.2551],[0,0.5418],[0,0.2105],[0,0.7014],[0.16660000000000003,0.0287]],[[0,0.9616],[0,0.7381],[0,0.5404],[0,0.7667],[0.3439,0.5078]],[[0,0.1277],[0,0.3607],[0,0.1657],[0,0.4702],[0.915,0.2892]]],[[[0,0.9289],[0,0.5289],[0,0.0487],[0,0.3194],[0.18697001000000002,0.3646]],[[0,0.1566],[0,0.7363],[0,0.0063],[0,0.0985],[0.07321048,0.739]],[[0,0.7442],[0,0.8649],[0,0.2316],[0,0.3136],[0.8200227515267892,0.1442]]],[[[0,0.515],[0,0.905],[0,0.1327],[0,0.6244],[0.30030277,0.1897]],[[0,0.841],[0,0.2157],[0,0.8876],[0,0.3051],[-0.19109678999999996,0.178]],[[0,0.4569],[0,0.7551],[0,0.3117],[0,0.0818],[0.1314772484732108,0.9422551424351397]]]]]

Actual:   [[[[[0, 0.2551], [0, 0.5418], [0, 0.2105], [0, 0.7014], [0.1666, 0.0287]], [[0, 0.9616], [0, 0.7381], [0, 0.5404], [0, 0.7667], [0.3439, 0.5078]], [[0, 0.1277], [0, 0.3607], [0, 0.1657], [0, 0.4702], [0.915, 0.2892]]], [[[0, 0.9289], [0, 0.5289], [0, 0.0487], [0, 0.3194], [0.187, 0.3646]], [[0, 0.1566], [0, 0.7363], [0, 0.0063], [0, 0.0985], [0.0733, 0.739]], [[0, 0.7442], [0, 0.8649], [0, 0.2316], [0, 0.3136], [0.8201, 0.1442]]], [[[0, 0.515], [0, 0.905], [0, 0.1327], [0, 0.6244], [0.3004, 0.1897]], [[0, 0.841], [0, 0.2157], [0, 0.8876], [0, 0.3051], [-0.191, 0.178]], [[0, 0.4569], [0, 0.7551], [0, 0.3117], [0, 0.0818], [0.1315, 0.9423]]]]]

Expected: [[[[[0, 0.2551], [0, 0.5418], [0, 0.2105], [0, 0.7014], [0.1667, 0.0287]], [[0, 0.9616], [0, 0.7381], [0, 0.5404], [0, 0.7667], [0.3439, 0.5078]], [[0, 0.1277], [0, 0.3607], [0, 0.1657], [0, 0.4702], [0.915, 0.2892]]], [[[0, 0.9289], [0, 0.5289], [0, 0.0487], [0, 0.3194], [0.187, 0.3646]], [[0, 0.1566], [0, 0.7363], [0, 0.0063], [0, 0.0985], [0.0733, 0.739]], [[0, 0.7442], [0, 0.8649], [0, 0.2316], [0, 0.3136], [0.8201, 0.1442]]], [[[0, 0.515], [0, 0.905], [0, 0.1327], [0, 0.6244], [0.3004, 0.1897]], [[0, 0.841], [0, 0.2157], [0, 0.8876], [0, 0.3051], [-0.191, 0.178]], [[0, 0.4569], [0, 0.7551], [0, 0.3117], [0, 0.0818], [0.1315, 0.9423]]]]]