import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Dot88882 = tf.keras.layers.Input(shape=([3, 2]))
in1Dot88882 = tf.keras.layers.Input(shape=([3, 2]))

Dot88882 = keras.layers.Dot(axes=(2, 2), name = 'Dot88882', )([in0Dot88882,in1Dot88882])
Res5071 = keras.layers.Reshape((3, 3, 1), name = 'Res5071', )(Dot88882)
Res33612 = keras.layers.Reshape((3, 3, 1, 1), name = 'Res33612', )(Res5071)
Up_75230 = keras.layers.UpSampling3D(size=(1, 1, 1), name = 'Up_75230', )(Res33612)
model = tf.keras.models.Model(inputs=[in0Dot88882,in1Dot88882], outputs=Up_75230)
in0Dot88882 = tf.constant([[[0.8543, 0.0461], [0.6916, 0.1162], [0.1734, 0.3991]]])
in1Dot88882 = tf.constant([[[0.0565, 0.0794], [0.9122, 0.2379], [0.5118, 0.6136]]])
print (np.array2string(model.predict([in0Dot88882,in1Dot88882],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Up_75230.png')

LDot88882 = dot_layer([[[0.8543, 0.0461], [0.6916, 0.1162], [0.1734, 0.3991]]], [[[0.0565, 0.0794], [0.9122, 0.2379], [0.5118, 0.6136]]], 2, 2, Dot88882), 
LRes5071 = reshape_layer(Dot88882, [3, 3, 1], Res5071), 
LRes33612 = reshape_layer(Res5071, [3, 3, 1, 1], Res33612), 
LUp_75230 = up_sampling3D_layer(Res33612, 1, 1, 1, Up_75230), 
exec_layers([LDot88882,LRes5071,LRes33612,LUp_75230],["Dot88882","Res5071","Res33612","Up_75230"],Up_75230,"Up_75230")

Actual (Unparsed): [[[[[0.0519283]], [[0.7902596]], [[0.4655177]]], [[[0.0483017]], [[0.6585215]], [[0.4252612]]], [[[0.0414856]], [[0.2531214]], [[0.3336339]]]]]

Expected (Unparsed): [[[[[0.051928289999999995]],[[0.79025965]],[[0.46551770000000003]]],[[[0.04830168]],[[0.6585215]],[[0.4252612]]],[[[0.041485640000000004]],[[0.25312137]],[[0.33363388000000005]]]]]

Actual:   [[[[[0.052]], [[0.7903]], [[0.4656]]], [[[0.0484]], [[0.6586]], [[0.4253]]], [[[0.0415]], [[0.2532]], [[0.3337]]]]]

Expected: [[[[[0.052]], [[0.7903]], [[0.4656]]], [[[0.0484]], [[0.6586]], [[0.4253]]], [[[0.0415]], [[0.2532]], [[0.3337]]]]]