import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Dot64227 = tf.keras.layers.Input(shape=([2, 2]))
in1Dot64227 = tf.keras.layers.Input(shape=([2, 2]))
in0Mul28194 = tf.keras.layers.Input(shape=([1, 1, 1]))
in1Mul28194 = tf.keras.layers.Input(shape=([1, 1, 1]))
in0Con52761 = tf.keras.layers.Input(shape=([2, 3, 1]))
in0Max81207 = tf.keras.layers.Input(shape=([2, 1, 2]))
in1Max81207 = tf.keras.layers.Input(shape=([2, 1, 2]))

Dot64227 = keras.layers.Dot(axes=(1, 1), name = 'Dot64227', )([in0Dot64227,in1Dot64227])
Cro76952 = keras.layers.Cropping1D(cropping=((1, 0)), name = 'Cro76952', )(Dot64227)
Res75104 = keras.layers.Reshape((1, 2, 1), name = 'Res75104', )(Cro76952)
Mul28194 = keras.layers.Multiply(name = 'Mul28194', )([in0Mul28194,in1Mul28194])
Zer18612 = keras.layers.ZeroPadding2D(padding=((0, 0), (1, 0)), name = 'Zer18612', )(Mul28194)
Sub61938 = keras.layers.Subtract(name = 'Sub61938', )([Res75104,Zer18612])
Zer57428 = keras.layers.ZeroPadding2D(padding=((1, 0), (1, 0)), name = 'Zer57428', )(Sub61938)
Con52761 = keras.layers.Concatenate(axis=3, name = 'Con52761', )([Zer57428,in0Con52761])
Max81207 = keras.layers.Maximum(name = 'Max81207', )([in0Max81207,in1Max81207])
Ave37669 = keras.layers.AveragePooling2D(pool_size=(1, 1), name = 'Ave37669', )(Max81207)
Zer18846 = keras.layers.ZeroPadding2D(padding=((0, 0), (2, 0)), name = 'Zer18846', )(Ave37669)
Sub19090 = keras.layers.Subtract(name = 'Sub19090', )([Con52761,Zer18846])
model = tf.keras.models.Model(inputs=[in0Dot64227,in1Dot64227,in0Mul28194,in1Mul28194,in0Con52761,in0Max81207,in1Max81207], outputs=Sub19090)
in0Dot64227 = tf.constant([[[0.5856, 0.6443], [0.9783, 0.8912]]])
in1Dot64227 = tf.constant([[[0.7168, 0.4075], [0.0034, 0.7336]]])
in0Mul28194 = tf.constant([[[[0.6102]]]])
in1Mul28194 = tf.constant([[[[0.6399]]]])
in0Con52761 = tf.constant([[[[0.7328], [0.8615], [0.9925]], [[0.1342], [0.5277], [0.8204]]]])
in0Max81207 = tf.constant([[[[0.2078, 0.5242]], [[0.9093, 0.6252]]]])
in1Max81207 = tf.constant([[[[0.6613, 0.9334]], [[0.8912, 0.8045]]]])
print (np.array2string(model.predict([in0Dot64227,in1Dot64227,in0Mul28194,in1Mul28194,in0Con52761,in0Max81207,in1Max81207],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Sub19090.png')

LDot64227 = dot_layer([[[0.5856, 0.6443], [0.9783, 0.8912]]], [[[0.7168, 0.4075], [0.0034, 0.7336]]], 1, 1, Dot64227), 
LCro76952 = cropping1D_layer(Dot64227, 1, 0, Cro76952), 
LRes75104 = reshape_layer(Cro76952, [1, 2, 1], Res75104), 
LMul28194 = multiply_layer([[[[[0.6102]]]], [[[[0.6399]]]]], Mul28194), 
LZer18612 = zero_padding2D_layer(Mul28194, 0, 0, 1, 0, Zer18612), 
LSub61938 = subtract_layer(Res75104,Zer18612, Sub61938), 
LZer57428 = zero_padding2D_layer(Sub61938, 1, 0, 1, 0, Zer57428), 
LCon52761 = concatenate_layer([Zer57428,[[[[0.7328], [0.8615], [0.9925]], [[0.1342], [0.5277], [0.8204]]]]], 3, Con52761), 
LMax81207 = maximum_layer([[[[[0.2078, 0.5242]], [[0.9093, 0.6252]]]], [[[[0.6613, 0.9334]], [[0.8912, 0.8045]]]]], Max81207), 
LAve37669 = average_pooling2D_layer(Max81207, 1, 1, Ave37669), 
LZer18846 = zero_padding2D_layer(Ave37669, 0, 0, 2, 0, Zer18846), 
LSub19090 = subtract_layer(Con52761,Zer18846, Sub19090), 
exec_layers([LDot64227,LCro76952,LRes75104,LMul28194,LZer18612,LSub61938,LZer57428,LCon52761,LMax81207,LAve37669,LZer18846,LSub19090],["Dot64227","Cro76952","Res75104","Mul28194","Zer18612","Sub61938","Zer57428","Con52761","Max81207","Ave37669","Zer18846","Sub19090"],Sub19090,"Sub19090")

Actual (Unparsed): [[[[0.0000000, 0.7328000], [0.0000000, 0.8615000], [-0.6613000, 0.0591000]], [[0.0000000, 0.1342000], [0.4648643, 0.5277000], [-0.3834304, 0.0159000]]]]

Expected (Unparsed): [[[[0,0.7328],[0,0.8615],[-0.6613,0.05910000000000004]],[[0,0.1342],[0.46486432,0.5277],[-0.3834304100000001,0.015900000000000025]]]]

Actual:   [[[[0, 0.7328], [0, 0.8615], [-0.6613, 0.0591]], [[0, 0.1342], [0.4649, 0.5277], [-0.3834, 0.0159]]]]

Expected: [[[[0, 0.7328], [0, 0.8615], [-0.6613, 0.0592]], [[0, 0.1342], [0.4649, 0.5277], [-0.3834, 0.016]]]]