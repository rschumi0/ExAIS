import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Sim24005 = tf.keras.layers.Input(shape=([2, 1]))
in0Con55615 = tf.keras.layers.Input(shape=([6, 3, 3, 3]))
in0Ave64247 = tf.keras.layers.Input(shape=([2, 2, 2]))
in1Ave64247 = tf.keras.layers.Input(shape=([2, 2, 2]))

Sim24005 = keras.layers.SimpleRNN(3,name = 'Sim24005', )(in0Sim24005)
Bat57757 = keras.layers.BatchNormalization(axis=1, epsilon=0.30856680718020013,  name = 'Bat57757', )(Sim24005)
Res66008 = keras.layers.Reshape((3, 1), name = 'Res66008', )(Bat57757)
Res57281 = keras.layers.Reshape((3, 1, 1), name = 'Res57281', )(Res66008)
Res37426 = keras.layers.Reshape((3, 1, 1, 1), name = 'Res37426', )(Res57281)
Zer50528 = keras.layers.ZeroPadding3D(padding=((3, 0), (2, 0), (2, 0)), name = 'Zer50528', )(Res37426)
Con55615 = keras.layers.Concatenate(axis=4, name = 'Con55615', )([Zer50528,in0Con55615])
Ave64247 = keras.layers.Average(name = 'Ave64247', )([in0Ave64247,in1Ave64247])
Res54192 = keras.layers.Reshape((2, 2, 2, 1), name = 'Res54192', )(Ave64247)
Con13363 = keras.layers.Conv3DTranspose(4, (2, 2, 2),strides=(3, 1, 1), padding='valid', name = 'Con13363', )(Res54192)
Max25300 = keras.layers.Maximum(name = 'Max25300', )([Con55615,Con13363])
model = tf.keras.models.Model(inputs=[in0Sim24005,in0Con55615,in0Ave64247,in1Ave64247], outputs=Max25300)
w = model.get_layer('Sim24005').get_weights() 
w[0] = np.array([[2, 1, 6]])
w[1] = np.array([[5, 3, 6], [2, 6, 2], [1, 9, 5]])
w[2] = np.array([7, 1, 10])
model.get_layer('Sim24005').set_weights(w) 
w = model.get_layer('Bat57757').get_weights() 
w[0] = np.array([0.1027, 0.6644, 0.1544])
w[1] = np.array([0.1254, 0.3158, 0.2751])
w[2] = np.array([0.4433, 0.2425, 0.7026])
w[3] = np.array([0.3404, 0.9054, 0.1184])
model.get_layer('Bat57757').set_weights(w) 
w = model.get_layer('Con13363').get_weights() 
w[0] = np.array([[[[[0.6376], [0.0551], [0.7033], [0.7555]], [[0.5117], [0.2185], [0.3157], [0.8329]]], [[[0.6476], [0.2787], [0.0166], [0.5994]], [[0.3026], [0.7487], [0.9292], [0.2783]]]], [[[[0.7224], [0.6278], [0.0174], [0.3528]], [[0.4541], [0.7941], [0.3405], [0.4257]]], [[[0.0113], [0.0502], [0.2576], [0.3168]], [[0.3574], [0.7485], [0.1453], [0.6741]]]]])
w[1] = np.array([0, 0, 0, 0])
model.get_layer('Con13363').set_weights(w) 
in0Sim24005 = tf.constant([[[1], [1]]])
in0Con55615 = tf.constant([[[[[0.2756, 0.5754, 0.8439], [0.7338, 0.5364, 0.6975], [0.9058, 0.7512, 0.0555]], [[0.3515, 0.0184, 0.6927], [0.1202, 0.2982, 0.8516], [0.2724, 0.6751, 0.3818]], [[0.3599, 0.4013, 0.8848], [0.2377, 0.8521, 0.0433], [0.2564, 0.7171, 0.5622]]], [[[0.9565, 0.436, 0.0062], [0.3928, 0.8353, 0.6607], [0.0707, 0.0066, 0.2986]], [[0.247, 0.4998, 0.9835], [0.3679, 0.4259, 0.0384], [0.3325, 0.5684, 0.3004]], [[0.102, 0.2493, 0.5509], [0.69, 0.3471, 0.6437], [0.1806, 0.1546, 0.9363]]], [[[0.6286, 0.3673, 0.5435], [0.4796, 0.8547, 0.5243], [0.0042, 0.7619, 0.3067]], [[0.4311, 0.5014, 0.272], [0.9319, 0.4509, 0.5492], [0.2364, 0.2647, 0.5075]], [[0.0361, 0.3343, 0.0318], [0.9593, 0.7394, 0.5167], [0.5715, 0.5285, 0.3628]]], [[[0.3883, 0.792, 0.7381], [0.7114, 0.422, 0.2989], [0.8896, 0.919, 0.8728]], [[0.2777, 0.476, 0.4831], [0.6308, 0.6879, 0.0634], [0.2291, 0.4136, 0.3376]], [[0.1, 0.2242, 0.6348], [0.4459, 0.8146, 0.0961], [0.0048, 0.3737, 0.3509]]], [[[0.1665, 0.4227, 0.3026], [0.5522, 0.3109, 0.9996], [0.7791, 0.3579, 0.4727]], [[0.1155, 0.2046, 0.6029], [0.3215, 0.2595, 0.5465], [0.1205, 0.6289, 0.0273]], [[0.7772, 0.4421, 0.5532], [0.057, 0.8022, 0.0593], [0.1775, 0.8736, 0.9317]]], [[[0.1672, 0.3205, 0.582], [0.2699, 0.0455, 0.857], [0.0991, 0.7485, 0.7478]], [[0.5238, 0.1478, 0.917], [0.5689, 0.4647, 0.5493], [0.0132, 0.8392, 0.5704]], [[0.4454, 0.2885, 0.9548], [0.0096, 0.9569, 0.0362], [0.1931, 0.2125, 0.4433]]]]])
in0Ave64247 = tf.constant([[[[0.8171, 0.4317], [0.8245, 0.3335]], [[0.8048, 0.3365], [0.2771, 0.0775]]]])
in1Ave64247 = tf.constant([[[[0.9597, 0.6332], [0.0434, 0.3585]], [[0.1279, 0.7675], [0.597, 0.0506]]]])
print (np.array2string(model.predict([in0Sim24005,in0Con55615,in0Ave64247,in1Ave64247],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Max25300.png')

LSim24005 = simple_rnn_layer([[[1], [1]]],[[2, 1, 6]],[[5, 3, 6], [2, 6, 2], [1, 9, 5]],[7, 1, 10], Sim24005), 
LBat57757 = batch_normalization_layer(Sim24005, 1, 0.30856680718020013, [0.1027, 0.6644, 0.1544], [0.1254, 0.3158, 0.2751], [0.4433, 0.2425, 0.7026], [0.3404, 0.9054, 0.1184], Bat57757), 
LRes66008 = reshape_layer(Bat57757, [3, 1], Res66008), 
LRes57281 = reshape_layer(Res66008, [3, 1, 1], Res57281), 
LRes37426 = reshape_layer(Res57281, [3, 1, 1, 1], Res37426), 
LZer50528 = zero_padding3D_layer(Res37426, 3, 0, 2, 0, 2, 0, Zer50528), 
LCon55615 = concatenate_layer([Zer50528,[[[[[0.2756, 0.5754, 0.8439], [0.7338, 0.5364, 0.6975], [0.9058, 0.7512, 0.0555]], [[0.3515, 0.0184, 0.6927], [0.1202, 0.2982, 0.8516], [0.2724, 0.6751, 0.3818]], [[0.3599, 0.4013, 0.8848], [0.2377, 0.8521, 0.0433], [0.2564, 0.7171, 0.5622]]], [[[0.9565, 0.436, 0.0062], [0.3928, 0.8353, 0.6607], [0.0707, 0.0066, 0.2986]], [[0.247, 0.4998, 0.9835], [0.3679, 0.4259, 0.0384], [0.3325, 0.5684, 0.3004]], [[0.102, 0.2493, 0.5509], [0.69, 0.3471, 0.6437], [0.1806, 0.1546, 0.9363]]], [[[0.6286, 0.3673, 0.5435], [0.4796, 0.8547, 0.5243], [0.0042, 0.7619, 0.3067]], [[0.4311, 0.5014, 0.272], [0.9319, 0.4509, 0.5492], [0.2364, 0.2647, 0.5075]], [[0.0361, 0.3343, 0.0318], [0.9593, 0.7394, 0.5167], [0.5715, 0.5285, 0.3628]]], [[[0.3883, 0.792, 0.7381], [0.7114, 0.422, 0.2989], [0.8896, 0.919, 0.8728]], [[0.2777, 0.476, 0.4831], [0.6308, 0.6879, 0.0634], [0.2291, 0.4136, 0.3376]], [[0.1, 0.2242, 0.6348], [0.4459, 0.8146, 0.0961], [0.0048, 0.3737, 0.3509]]], [[[0.1665, 0.4227, 0.3026], [0.5522, 0.3109, 0.9996], [0.7791, 0.3579, 0.4727]], [[0.1155, 0.2046, 0.6029], [0.3215, 0.2595, 0.5465], [0.1205, 0.6289, 0.0273]], [[0.7772, 0.4421, 0.5532], [0.057, 0.8022, 0.0593], [0.1775, 0.8736, 0.9317]]], [[[0.1672, 0.3205, 0.582], [0.2699, 0.0455, 0.857], [0.0991, 0.7485, 0.7478]], [[0.5238, 0.1478, 0.917], [0.5689, 0.4647, 0.5493], [0.0132, 0.8392, 0.5704]], [[0.4454, 0.2885, 0.9548], [0.0096, 0.9569, 0.0362], [0.1931, 0.2125, 0.4433]]]]]], 4, Con55615), 
LAve64247 = average_layer([[[[[0.8171, 0.4317], [0.8245, 0.3335]], [[0.8048, 0.3365], [0.2771, 0.0775]]]], [[[[0.9597, 0.6332], [0.0434, 0.3585]], [[0.1279, 0.7675], [0.597, 0.0506]]]]], Ave64247), 
LRes54192 = reshape_layer(Ave64247, [2, 2, 2, 1], Res54192), 
LCon13363 = conv3D_transpose_layer(Res54192, 2, 2, 2,[[[[[0.6376], [0.0551], [0.7033], [0.7555]], [[0.5117], [0.2185], [0.3157], [0.8329]]], [[[0.6476], [0.2787], [0.0166], [0.5994]], [[0.3026], [0.7487], [0.9292], [0.2783]]]], [[[[0.7224], [0.6278], [0.0174], [0.3528]], [[0.4541], [0.7941], [0.3405], [0.4257]]], [[[0.0113], [0.0502], [0.2576], [0.3168]], [[0.3574], [0.7485], [0.1453], [0.6741]]]]],[0, 0, 0, 0], 3, 1, 1, false, Con13363), 
LMax25300 = maximum_layer([Con55615,Con13363], Max25300), 
exec_layers([LSim24005,LBat57757,LRes66008,LRes57281,LRes37426,LZer50528,LCon55615,LAve64247,LRes54192,LCon13363,LMax25300],["Sim24005","Bat57757","Res66008","Res57281","Res37426","Zer50528","Con55615","Ave64247","Res54192","Con13363","Max25300"],Max25300,"Max25300")

Actual (Unparsed): [[[[[0.5664438, 0.2756000, 0.6248117, 0.8439000], [0.7940844, 0.7338000, 0.6549400, 1.1422143], [0.2724547, 0.9058000, 0.7512000, 0.4434776]], [[0.8520144, 0.3515000, 0.3199445, 0.8603562], [1.0563063, 0.9274216, 1.2146798, 1.1892322], [0.3381676, 0.4742463, 0.6751000, 0.4363642]], [[0.2810260, 0.3599000, 0.4013000, 0.8848000], [0.3553829, 0.4213286, 0.8521000, 0.3281607], [0.1046996, 0.2590502, 0.7171000, 0.5622000]]], [[[0.6417802, 0.9565000, 0.4360000, 0.3134275], [0.7880643, 1.0397505, 0.8353000, 0.6607000], [0.2417855, 0.4228185, 0.1812992, 0.2986000]], [[0.3235244, 0.3170315, 0.4998000, 0.9835000], [0.7705379, 1.2535149, 0.4259000, 1.0743519], [0.3474162, 0.6732974, 0.5684000, 0.5062167]], [[0.0049036, 0.1020000, 0.2493000, 0.5509000], [0.1590035, 0.6900000, 0.3471000, 0.6437000], [0.1236604, 0.2589810, 0.1546000, 0.9363000]]], [[[0.0000000, 0.6286000, 0.3673000, 0.5435000], [0.0000000, 0.4796000, 0.8547000, 0.5243000], [0.0000000, 0.0042000, 0.7619000, 0.3067000]], [[0.0000000, 0.4311000, 0.5014000, 0.2720000], [0.0000000, 0.9319000, 0.4509000, 0.5492000], [0.0000000, 0.2364000, 0.2647000, 0.5075000]], [[0.0000000, 0.0361000, 0.3343000, 0.0318000], [0.0000000, 0.9593000, 0.7394000, 0.5167000], [0.0000000, 0.5715000, 0.5285000, 0.3628000]]], [[[0.2973448, 0.3883000, 0.7920000, 0.7381000], [0.5905865, 0.7114000, 0.5354483, 0.8054589], [0.2824584, 0.8896000, 0.9190000, 0.8728000]], [[0.5806713, 0.2777000, 0.4760000, 0.6097215], [0.7630695, 0.6308000, 0.6879000, 0.8730627], [0.1998096, 0.4272773, 0.5331390, 0.3376000]], [[0.2830336, 0.1218058, 0.2242000, 0.6348000], [0.1737301, 0.4459000, 0.8146000, 0.1600226], [0.1963709, 0.0479542, 0.3737000, 0.3509000]]], [[[0.3368912, 0.2927745, 0.4227000, 0.3026000], [0.6105343, 0.7168741, 0.3109000, 0.9996000], [0.2506632, 0.7791000, 0.3579000, 0.4727000]], [[0.3209947, 0.2977908, 0.2046000, 0.6029000], [0.4176452, 0.7640454, 0.3598858, 0.6978891], [0.2263699, 0.4640341, 0.6289000, 0.3993693]], [[0.0049387, 0.7772000, 0.4421000, 0.5532000], [0.1569254, 0.3303472, 0.8022000, 0.3149064], [0.7725819, 0.1775000, 0.8736000, 0.9317000]]], [[[0.0000000, 0.1672000, 0.3205000, 0.5820000], [0.0000000, 0.2699000, 0.0455000, 0.8570000], [0.0000000, 0.0991000, 0.7485000, 0.7478000]], [[0.0000000, 0.5238000, 0.1478000, 0.9170000], [0.0000000, 0.5689000, 0.4647000, 0.5493000], [0.0000000, 0.0132000, 0.8392000, 0.5704000]], [[0.0000000, 0.4454000, 0.2885000, 0.9548000], [0.0000000, 0.0096000, 0.9569000, 0.0362000], [0.3453734, 0.1931000, 0.2125000, 0.4433000]]]]]

Expected (Unparsed): [[[[[0.56644384,0.2756,0.6248117200000001,0.8439],[0.7940844,0.7338,0.6549399650000001,1.142214335],[0.272454665,0.9058,0.7512,0.44347760499999994]],[[0.8520143600000001,0.3515,0.319944475,0.8603561850000001],[1.0563062749999999,0.92742157,1.214679765,1.1892322050000002],[0.33816757,0.474246315,0.6751,0.436364235]],[[0.28102602,0.3599,0.4013,0.8848],[0.35538286999999996,0.42132856500000004,0.8521,0.328160685],[0.10469959999999999,0.2590502,0.7171,0.5622]]],[[[0.64178016,0.9565,0.436,0.31342752],[0.78806432,1.03975055,0.8353,0.6607],[0.241785545,0.422818545,0.181299225,0.2986]],[[0.32352440000000005,0.31703149,0.4998,0.9835],[0.7705379400000001,1.2535148850000002,0.4259,1.074351915],[0.34741623,0.6732974249999999,0.5684,0.5062167449999999]],[[0.004903635,0.102,0.2493,0.5509],[0.15900352999999998,0.69,0.3471,0.6437],[0.12366039999999999,0.258981,0.1546,0.9363]]],[[[0,0.6286,0.3673,0.5435],[0,0.4796,0.8547,0.5243],[0,0.0042,0.7619,0.3067]],[[0,0.4311,0.5014,0.272],[0,0.9319,0.4509,0.5492],[0,0.2364,0.2647,0.5075]],[[0,0.0361,0.3343,0.0318],[0,0.9593,0.7394,0.5167],[0,0.5715,0.5285,0.3628]]],[[[0.29734476,0.3883,0.792,0.7381],[0.590586495,0.7114,0.535448295,0.805458915],[0.28245840000000005,0.8896,0.919,0.8728]],[[0.5806713399999999,0.2777,0.476,0.609721465],[0.763069475,0.6308,0.6879,0.873062725],[0.199809585,0.42727732500000004,0.5331389850000001,0.3376]],[[0.28303357999999995,0.121805835,0.2242,0.6348],[0.17373011,0.4459,0.8146,0.160022585],[0.19637091798004896,0.047954235,0.3737,0.3509]]],[[[0.33689124000000004,0.29277453,0.4227,0.3026],[0.6105343350000001,0.7168741350000001,0.3109,0.9996],[0.25066320000000003,0.7791,0.3579,0.4727]],[[0.320994675,0.29779076000000004,0.2046,0.6029],[0.417645215,0.7640453700000001,0.35988585,0.69788916],[0.226369905,0.46403410500000003,0.6289,0.399369285]],[[0.004938664999999999,0.7772,0.4421,0.5532],[0.15692543499999997,0.3303472350000001,0.8022,0.314906445],[0.7725818665489274,0.1775,0.8736,0.9317]]],[[[0,0.1672,0.3205,0.582],[0,0.2699,0.0455,0.857],[0,0.0991,0.7485,0.7478]],[[0,0.5238,0.1478,0.917],[0,0.5689,0.4647,0.5493],[0,0.0132,0.8392,0.5704]],[[0,0.4454,0.2885,0.9548],[0,0.0096,0.9569,0.0362],[0.34537343834521966,0.1931,0.2125,0.4433]]]]]

Actual:   [[[[[0.5665, 0.2756, 0.6249, 0.8439], [0.7941, 0.7338, 0.655, 1.1423], [0.2725, 0.9058, 0.7512, 0.4435]], [[0.8521, 0.3515, 0.32, 0.8604], [1.0564, 0.9275, 1.2147, 1.1893], [0.3382, 0.4743, 0.6751, 0.4364]], [[0.2811, 0.3599, 0.4013, 0.8848], [0.3554, 0.4214, 0.8521, 0.3282], [0.1047, 0.2591, 0.7171, 0.5622]]], [[[0.6418, 0.9565, 0.436, 0.3135], [0.7881, 1.0398, 0.8353, 0.6607], [0.2418, 0.4229, 0.1813, 0.2986]], [[0.3236, 0.3171, 0.4998, 0.9835], [0.7706, 1.2536, 0.4259, 1.0744], [0.3475, 0.6733, 0.5684, 0.5063]], [[0.005, 0.102, 0.2493, 0.5509], [0.1591, 0.69, 0.3471, 0.6437], [0.1237, 0.259, 0.1546, 0.9363]]], [[[0, 0.6286, 0.3673, 0.5435], [0, 0.4796, 0.8547, 0.5243], [0, 0.0042, 0.7619, 0.3067]], [[0, 0.4311, 0.5014, 0.272], [0, 0.9319, 0.4509, 0.5492], [0, 0.2364, 0.2647, 0.5075]], [[0, 0.0361, 0.3343, 0.0318], [0, 0.9593, 0.7394, 0.5167], [0, 0.5715, 0.5285, 0.3628]]], [[[0.2974, 0.3883, 0.792, 0.7381], [0.5906, 0.7114, 0.5355, 0.8055], [0.2825, 0.8896, 0.919, 0.8728]], [[0.5807, 0.2777, 0.476, 0.6098], [0.7631, 0.6308, 0.6879, 0.8731], [0.1999, 0.4273, 0.5332, 0.3376]], [[0.2831, 0.1219, 0.2242, 0.6348], [0.1738, 0.4459, 0.8146, 0.1601], [0.1964, 0.048, 0.3737, 0.3509]]], [[[0.3369, 0.2928, 0.4227, 0.3026], [0.6106, 0.7169, 0.3109, 0.9996], [0.2507, 0.7791, 0.3579, 0.4727]], [[0.321, 0.2978, 0.2046, 0.6029], [0.4177, 0.7641, 0.3599, 0.6979], [0.2264, 0.4641, 0.6289, 0.3994]], [[0.005, 0.7772, 0.4421, 0.5532], [0.157, 0.3304, 0.8022, 0.315], [0.7726, 0.1775, 0.8736, 0.9317]]], [[[0, 0.1672, 0.3205, 0.582], [0, 0.2699, 0.0455, 0.857], [0, 0.0991, 0.7485, 0.7478]], [[0, 0.5238, 0.1478, 0.917], [0, 0.5689, 0.4647, 0.5493], [0, 0.0132, 0.8392, 0.5704]], [[0, 0.4454, 0.2885, 0.9548], [0, 0.0096, 0.9569, 0.0362], [0.3454, 0.1931, 0.2125, 0.4433]]]]]

Expected: [[[[[0.5665, 0.2756, 0.6249, 0.8439], [0.7941, 0.7338, 0.655, 1.1423], [0.2725, 0.9058, 0.7512, 0.4435]], [[0.8521, 0.3515, 0.32, 0.8604], [1.0564, 0.9275, 1.2147, 1.1893], [0.3382, 0.4743, 0.6751, 0.4364]], [[0.2811, 0.3599, 0.4013, 0.8848], [0.3554, 0.4214, 0.8521, 0.3282], [0.1047, 0.2591, 0.7171, 0.5622]]], [[[0.6418, 0.9565, 0.436, 0.3135], [0.7881, 1.0398, 0.8353, 0.6607], [0.2418, 0.4229, 0.1813, 0.2986]], [[0.3236, 0.3171, 0.4998, 0.9835], [0.7706, 1.2536, 0.4259, 1.0744], [0.3475, 0.6733, 0.5684, 0.5063]], [[0.005, 0.102, 0.2493, 0.5509], [0.1591, 0.69, 0.3471, 0.6437], [0.1237, 0.259, 0.1546, 0.9363]]], [[[0, 0.6286, 0.3673, 0.5435], [0, 0.4796, 0.8547, 0.5243], [0, 0.0042, 0.7619, 0.3067]], [[0, 0.4311, 0.5014, 0.272], [0, 0.9319, 0.4509, 0.5492], [0, 0.2364, 0.2647, 0.5075]], [[0, 0.0361, 0.3343, 0.0318], [0, 0.9593, 0.7394, 0.5167], [0, 0.5715, 0.5285, 0.3628]]], [[[0.2974, 0.3883, 0.792, 0.7381], [0.5906, 0.7114, 0.5355, 0.8055], [0.2825, 0.8896, 0.919, 0.8728]], [[0.5807, 0.2777, 0.476, 0.6098], [0.7631, 0.6308, 0.6879, 0.8731], [0.1999, 0.4273, 0.5332, 0.3376]], [[0.2831, 0.1219, 0.2242, 0.6348], [0.1738, 0.4459, 0.8146, 0.1601], [0.1964, 0.048, 0.3737, 0.3509]]], [[[0.3369, 0.2928, 0.4227, 0.3026], [0.6106, 0.7169, 0.3109, 0.9996], [0.2507, 0.7791, 0.3579, 0.4727]], [[0.321, 0.2978, 0.2046, 0.6029], [0.4177, 0.7641, 0.3599, 0.6979], [0.2264, 0.4641, 0.6289, 0.3994]], [[0.005, 0.7772, 0.4421, 0.5532], [0.157, 0.3304, 0.8022, 0.315], [0.7726, 0.1775, 0.8736, 0.9317]]], [[[0, 0.1672, 0.3205, 0.582], [0, 0.2699, 0.0455, 0.857], [0, 0.0991, 0.7485, 0.7478]], [[0, 0.5238, 0.1478, 0.917], [0, 0.5689, 0.4647, 0.5493], [0, 0.0132, 0.8392, 0.5704]], [[0, 0.4454, 0.2885, 0.9548], [0, 0.0096, 0.9569, 0.0362], [0.3454, 0.1931, 0.2125, 0.4433]]]]]