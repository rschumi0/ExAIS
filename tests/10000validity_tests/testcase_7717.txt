import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Con17467 = tf.keras.layers.Input(shape=([2, 1, 2]))

Con17467 = keras.layers.Conv2D(2, (1, 1),strides=(1, 5), padding='valid', dilation_rate=(1, 1), name = 'Con17467', )(in0Con17467)
Glo85217 = keras.layers.GlobalAveragePooling2D(name = 'Glo85217', )(Con17467)
Res1010 = keras.layers.Reshape((2, 1), name = 'Res1010', )(Glo85217)
Sim11256 = keras.layers.SimpleRNN(3,name = 'Sim11256', )(Res1010)
model = tf.keras.models.Model(inputs=[in0Con17467], outputs=Sim11256)
w = model.get_layer('Con17467').get_weights() 
w[0] = np.array([[[[0.9357, 0.9034], [0.154, 0.6716]]]])
w[1] = np.array([0, 0])
model.get_layer('Con17467').set_weights(w) 
w = model.get_layer('Sim11256').get_weights() 
w[0] = np.array([[7, 5, 9]])
w[1] = np.array([[2, 1, 7], [5, 8, 2], [7, 6, 8]])
w[2] = np.array([7, 8, 7])
model.get_layer('Sim11256').set_weights(w) 
in0Con17467 = tf.constant([[[[0.0125, 0.4986]], [[0.8282, 0.989]]]])
print (np.array2string(model.predict([in0Con17467],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Sim11256.png')

LCon17467 = conv2D_layer([[[[0.0125, 0.4986]], [[0.8282, 0.989]]]], 1, 1,[[[[0.9357, 0.9034], [0.154, 0.6716]]]],[0, 0], 1, 5, false, 1, 1, Con17467), 
LGlo85217 = global_average_pooling2D_layer(Con17467, Glo85217), 
LRes1010 = reshape_layer(Glo85217, [2, 1], Res1010), 
LSim11256 = simple_rnn_layer(Res1010,[[7, 5, 9]],[[2, 1, 7], [5, 8, 2], [7, 6, 8]],[7, 8, 7], Sim11256), 
exec_layers([LCon17467,LGlo85217,LRes1010,LSim11256],["Con17467","Glo85217","Res1010","Sim11256"],Sim11256,"Sim11256")

Actual (Unparsed): [[1.0000000, 1.0000000, 1.0000000]]

Expected (Unparsed): [[1.0,1.0,1.0]]

Actual:   [[1, 1, 1]]

Expected: [[1, 1, 1]]