import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Ave10884 = tf.keras.layers.Input(shape=([1, 1]))
in1Ave10884 = tf.keras.layers.Input(shape=([1, 1]))
in0Con19222 = tf.keras.layers.Input(shape=([1]))
in0Sub17996 = tf.keras.layers.Input(shape=([2]))
in1Sub17996 = tf.keras.layers.Input(shape=([2]))
in0Con99762 = tf.keras.layers.Input(shape=([3, 5, 2]))
in0Zer32495 = tf.keras.layers.Input(shape=([1, 3, 3]))

Ave10884 = keras.layers.Average(name = 'Ave10884', )([in0Ave10884,in1Ave10884])
Fla10155 = keras.layers.Flatten(name = 'Fla10155', )(Ave10884)
Con19222 = keras.layers.Concatenate(axis=1, name = 'Con19222', )([Fla10155,in0Con19222])
Sub17996 = keras.layers.Subtract(name = 'Sub17996', )([in0Sub17996,in1Sub17996])
Sub20740 = keras.layers.Subtract(name = 'Sub20740', )([Con19222,Sub17996])
Res28314 = keras.layers.Reshape((2, 1), name = 'Res28314', )(Sub20740)
Max99066 = keras.layers.MaxPool1D(pool_size=(2), strides=(1), padding='valid', name = 'Max99066', )(Res28314)
Res55247 = keras.layers.Reshape((1, 1, 1), name = 'Res55247', )(Max99066)
Zer43591 = keras.layers.ZeroPadding2D(padding=((2, 0), (4, 0)), name = 'Zer43591', )(Res55247)
Con99762 = keras.layers.Concatenate(axis=3, name = 'Con99762', )([Zer43591,in0Con99762])
Zer32495 = keras.layers.ZeroPadding2D(padding=((1, 1), (1, 1)), name = 'Zer32495', )(in0Zer32495)
Thr76050 = keras.layers.ThresholdedReLU(theta=7.4729939244344745, name = 'Thr76050', )(Zer32495)
Min34634 = keras.layers.Minimum(name = 'Min34634', )([Con99762,Thr76050])
model = tf.keras.models.Model(inputs=[in0Ave10884,in1Ave10884,in0Con19222,in0Sub17996,in1Sub17996,in0Con99762,in0Zer32495], outputs=Min34634)
in0Ave10884 = tf.constant([[[0.8372]]])
in1Ave10884 = tf.constant([[[0.4719]]])
in0Con19222 = tf.constant([[0.1019]])
in0Sub17996 = tf.constant([[0.8954, 0.8228]])
in1Sub17996 = tf.constant([[0.2098, 0.9437]])
in0Con99762 = tf.constant([[[[0.7454, 0.5195], [0.0264, 0.3505], [0.0035, 0.5577], [0.342, 0.0555], [0.2207, 0.0511]], [[0.4777, 0.2979], [0.355, 0.149], [0.3002, 0.655], [0.188, 0.545], [0.8208, 0.9594]], [[0.6369, 0.8385], [0.6251, 0.0328], [0.6654, 0.4402], [0.9613, 0.8497], [0.212, 0.0153]]]])
in0Zer32495 = tf.constant([[[[1.398, 1.6172, 1.2567], [1.4687, 1.4743, 1.3575], [1.0949, 1.1036, 1.4311]]]])
print (np.array2string(model.predict([in0Ave10884,in1Ave10884,in0Con19222,in0Sub17996,in1Sub17996,in0Con99762,in0Zer32495],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Min34634.png')

LAve10884 = average_layer([[[[0.8372]]], [[[0.4719]]]], Ave10884), 
LFla10155 = flatten_layer(Ave10884, Fla10155), 
LCon19222 = concatenate_layer([Fla10155,[[0.1019]]], 1, Con19222), 
LSub17996 = subtract_layer([[0.8954, 0.8228]], [[0.2098, 0.9437]], Sub17996), 
LSub20740 = subtract_layer(Con19222,Sub17996, Sub20740), 
LRes28314 = reshape_layer(Sub20740, [2, 1], Res28314), 
LMax99066 = max_pool1D_layer(Res28314, 2, 1, false, Max99066), 
LRes55247 = reshape_layer(Max99066, [1, 1, 1], Res55247), 
LZer43591 = zero_padding2D_layer(Res55247, 2, 0, 4, 0, Zer43591), 
LCon99762 = concatenate_layer([Zer43591,[[[[0.7454, 0.5195], [0.0264, 0.3505], [0.0035, 0.5577], [0.342, 0.0555], [0.2207, 0.0511]], [[0.4777, 0.2979], [0.355, 0.149], [0.3002, 0.655], [0.188, 0.545], [0.8208, 0.9594]], [[0.6369, 0.8385], [0.6251, 0.0328], [0.6654, 0.4402], [0.9613, 0.8497], [0.212, 0.0153]]]]], 3, Con99762), 
LZer32495 = zero_padding2D_layer([[[[1.398, 1.6172, 1.2567], [1.4687, 1.4743, 1.3575], [1.0949, 1.1036, 1.4311]]]], 1, 1, 1, 1, Zer32495), 
LThr76050 = thresholded_relu_layer(Zer32495, 7.4729939244344745, Thr76050), 
LMin34634 = minimum_layer([Con99762,Thr76050], Min34634), 
exec_layers([LAve10884,LFla10155,LCon19222,LSub17996,LSub20740,LRes28314,LMax99066,LRes55247,LZer43591,LCon99762,LZer32495,LThr76050,LMin34634],["Ave10884","Fla10155","Con19222","Sub17996","Sub20740","Res28314","Max99066","Res55247","Zer43591","Con99762","Zer32495","Thr76050","Min34634"],Min34634,"Min34634")

Actual (Unparsed): [[[[0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000]], [[0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000]], [[0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000]]]]

Expected (Unparsed): [[[[0,0,0],[0,0,0],[0,0,0],[0,0,0],[0,0,0]],[[0,0,0],[0,0,0],[0,0,0],[0,0,0],[0,0,0]],[[0,0,0],[0,0,0],[0,0,0],[0,0,0],[0,0,0]]]]

Actual:   [[[[0, 0, 0], [0, 0, 0], [0, 0, 0], [0, 0, 0], [0, 0, 0]], [[0, 0, 0], [0, 0, 0], [0, 0, 0], [0, 0, 0], [0, 0, 0]], [[0, 0, 0], [0, 0, 0], [0, 0, 0], [0, 0, 0], [0, 0, 0]]]]

Expected: [[[[0, 0, 0], [0, 0, 0], [0, 0, 0], [0, 0, 0], [0, 0, 0]], [[0, 0, 0], [0, 0, 0], [0, 0, 0], [0, 0, 0], [0, 0, 0]], [[0, 0, 0], [0, 0, 0], [0, 0, 0], [0, 0, 0], [0, 0, 0]]]]