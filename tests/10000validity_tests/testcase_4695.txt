import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Ave18906 = tf.keras.layers.Input(shape=([1, 2]))
in1Ave18906 = tf.keras.layers.Input(shape=([1, 2]))
in0Con72937 = tf.keras.layers.Input(shape=([3, 3, 1]))
in0Sub14648 = tf.keras.layers.Input(shape=([3, 3, 2]))
in1Sub14648 = tf.keras.layers.Input(shape=([3, 3, 2]))

Ave18906 = keras.layers.Average(name = 'Ave18906', )([in0Ave18906,in1Ave18906])
Res17258 = keras.layers.Reshape((1, 2, 1), name = 'Res17258', )(Ave18906)
Res65163 = keras.layers.Reshape((1, 2, 1, 1), name = 'Res65163', )(Res17258)
Glo15204 = keras.layers.GlobalAveragePooling3D(name = 'Glo15204', )(Res65163)
Res11258 = keras.layers.Reshape((1, 1), name = 'Res11258', )(Glo15204)
Res87921 = keras.layers.Reshape((1, 1, 1), name = 'Res87921', )(Res11258)
Zer98753 = keras.layers.ZeroPadding2D(padding=((2, 0), (2, 0)), name = 'Zer98753', )(Res87921)
Con72937 = keras.layers.Concatenate(axis=3, name = 'Con72937', )([Zer98753,in0Con72937])
Sub14648 = keras.layers.Subtract(name = 'Sub14648', )([in0Sub14648,in1Sub14648])
Max66939 = keras.layers.Maximum(name = 'Max66939', )([Con72937,Sub14648])
Lay68552 = keras.layers.LayerNormalization(axis=2, epsilon=2.7620807902349247, name = 'Lay68552', )(Max66939)
model = tf.keras.models.Model(inputs=[in0Ave18906,in1Ave18906,in0Con72937,in0Sub14648,in1Sub14648], outputs=Lay68552)
in0Ave18906 = tf.constant([[[0.1841, 0.1066]]])
in1Ave18906 = tf.constant([[[0.1527, 0.9836]]])
in0Con72937 = tf.constant([[[[0.6631], [0.3563], [0.7706]], [[0.7431], [0.2566], [0.5415]], [[0.5045], [0.6555], [0.4532]]]])
in0Sub14648 = tf.constant([[[[0.7667, 0.2284], [0.6597, 0.1783], [0.2161, 0.2081]], [[0.2364, 0.311], [0.5509, 0.562], [0.8633, 0.2585]], [[0.584, 0.4645], [0.8147, 0.0815], [0.4588, 0.1012]]]])
in1Sub14648 = tf.constant([[[[0.5137, 0.9894], [0.4755, 0.1591], [0.8363, 0.6253]], [[0.4289, 0.4224], [0.8082, 0.408], [0.5071, 0.1731]], [[0.3513, 0.9182], [0.6485, 0.1182], [0.9776, 0.3493]]]])
print (np.array2string(model.predict([in0Ave18906,in1Ave18906,in0Con72937,in0Sub14648,in1Sub14648],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Lay68552.png')

LAve18906 = average_layer([[[[0.1841, 0.1066]]], [[[0.1527, 0.9836]]]], Ave18906), 
LRes17258 = reshape_layer(Ave18906, [1, 2, 1], Res17258), 
LRes65163 = reshape_layer(Res17258, [1, 2, 1, 1], Res65163), 
LGlo15204 = global_average_pooling3D_layer(Res65163, Glo15204), 
LRes11258 = reshape_layer(Glo15204, [1, 1], Res11258), 
LRes87921 = reshape_layer(Res11258, [1, 1, 1], Res87921), 
LZer98753 = zero_padding2D_layer(Res87921, 2, 0, 2, 0, Zer98753), 
LCon72937 = concatenate_layer([Zer98753,[[[[0.6631], [0.3563], [0.7706]], [[0.7431], [0.2566], [0.5415]], [[0.5045], [0.6555], [0.4532]]]]], 3, Con72937), 
LSub14648 = subtract_layer([[[[0.7667, 0.2284], [0.6597, 0.1783], [0.2161, 0.2081]], [[0.2364, 0.311], [0.5509, 0.562], [0.8633, 0.2585]], [[0.584, 0.4645], [0.8147, 0.0815], [0.4588, 0.1012]]]], [[[[0.5137, 0.9894], [0.4755, 0.1591], [0.8363, 0.6253]], [[0.4289, 0.4224], [0.8082, 0.408], [0.5071, 0.1731]], [[0.3513, 0.9182], [0.6485, 0.1182], [0.9776, 0.3493]]]], Sub14648), 
LMax66939 = maximum_layer([Con72937,Sub14648], Max66939), 
LLay68552 = layer_normalization_layer(Max66939, 2, 2.7620807902349247, Lay68552), 
exec_layers([LAve18906,LRes17258,LRes65163,LGlo15204,LRes11258,LRes87921,LZer98753,LCon72937,LSub14648,LMax66939,LLay68552],["Ave18906","Res17258","Res65163","Glo15204","Res11258","Res87921","Zer98753","Con72937","Sub14648","Max66939","Lay68552"],Lay68552,"Lay68552")

Actual (Unparsed): [[[[0.0644098, 0.0397520], [0.0230978, -0.1438292], [-0.0875076, 0.1040772]], [[-0.0710803, 0.1370260], [-0.0710803, -0.1536141], [0.1421606, 0.0165881]], [[-0.0115297, -0.0199700], [-0.0514978, 0.0707661], [0.0630274, -0.0507962]]]]

Expected (Unparsed): [[[[0.0644097445727491,0.03975197838184856],[0.023097838793335122,-0.14382916011616154],[-0.08750758336608423,0.10407718173431295]],[[-0.07108027161298892,0.13702599197961812],[-0.07108027161298892,-0.15361408256514658],[0.14216054322597785,0.016588090585528566]],[[-0.011529652423269006,-0.01996994337825771],[-0.05149777854737266,0.07076610828022517],[0.06302743097064174,-0.05079616490196742]]]]

Actual:   [[[[0.0645, 0.0398], [0.0231, -0.1438], [-0.0875, 0.1041]], [[-0.071, 0.1371], [-0.071, -0.1536], [0.1422, 0.0166]], [[-0.0115, -0.0199], [-0.0514, 0.0708], [0.0631, -0.0507]]]]

Expected: [[[[0.0645, 0.0398], [0.0231, -0.1438], [-0.0875, 0.1041]], [[-0.071, 0.1371], [-0.071, -0.1536], [0.1422, 0.0166]], [[-0.0115, -0.0199], [-0.0514, 0.0708], [0.0631, -0.0507]]]]