import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Mul67270 = tf.keras.layers.Input(shape=([2, 2, 1, 1]))
in1Mul67270 = tf.keras.layers.Input(shape=([2, 2, 1, 1]))
in0Con43259 = tf.keras.layers.Input(shape=([2, 2, 2, 2]))
in0Sub65847 = tf.keras.layers.Input(shape=([2, 2, 2, 3]))
in1Sub65847 = tf.keras.layers.Input(shape=([2, 2, 2, 3]))

Mul67270 = keras.layers.Multiply(name = 'Mul67270', )([in0Mul67270,in1Mul67270])
Zer28393 = keras.layers.ZeroPadding3D(padding=((0, 0), (0, 0), (1, 0)), name = 'Zer28393', )(Mul67270)
Con43259 = keras.layers.Concatenate(axis=4, name = 'Con43259', )([Zer28393,in0Con43259])
Sub65847 = keras.layers.Subtract(name = 'Sub65847', )([in0Sub65847,in1Sub65847])
Min19378 = keras.layers.Minimum(name = 'Min19378', )([Con43259,Sub65847])
model = tf.keras.models.Model(inputs=[in0Mul67270,in1Mul67270,in0Con43259,in0Sub65847,in1Sub65847], outputs=Min19378)
in0Mul67270 = tf.constant([[[[[0.7161]], [[0.2507]]], [[[0.5593]], [[0.2316]]]]])
in1Mul67270 = tf.constant([[[[[0.4302]], [[0.4469]]], [[[0.5111]], [[0.6868]]]]])
in0Con43259 = tf.constant([[[[[0.1315, 0.2819], [0.4295, 0.2687]], [[0.3826, 0.528], [0.1502, 0.9294]]], [[[0.6476, 0.3214], [0.0787, 0.1821]], [[0.0074, 0.0555], [0.7072, 0.6386]]]]])
in0Sub65847 = tf.constant([[[[[0.4322, 0.633, 0.6238], [0.5257, 0.954, 0.1396]], [[0.3697, 0.8999, 0.9574], [0.3129, 0.5956, 0.5353]]], [[[0.6108, 0.7729, 0.5054], [0.3241, 0.6094, 0.8857]], [[0.1334, 0.3056, 0.5556], [0.2461, 0.0615, 0.3242]]]]])
in1Sub65847 = tf.constant([[[[[0.1352, 0.7113, 0.6665], [0.0399, 0.6198, 0.7992]], [[0.4956, 0.3774, 0.3076], [0.0723, 0.4637, 0.9506]]], [[[0.8738, 0.4642, 0.4434], [0.473, 0.2437, 0.3731]], [[0.4724, 0.6764, 0.5239], [0.7477, 0.2456, 0.7982]]]]])
print (np.array2string(model.predict([in0Mul67270,in1Mul67270,in0Con43259,in0Sub65847,in1Sub65847],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Min19378.png')

LMul67270 = multiply_layer([[[[[[0.7161]], [[0.2507]]], [[[0.5593]], [[0.2316]]]]], [[[[[0.4302]], [[0.4469]]], [[[0.5111]], [[0.6868]]]]]], Mul67270), 
LZer28393 = zero_padding3D_layer(Mul67270, 0, 0, 0, 0, 1, 0, Zer28393), 
LCon43259 = concatenate_layer([Zer28393,[[[[[0.1315, 0.2819], [0.4295, 0.2687]], [[0.3826, 0.528], [0.1502, 0.9294]]], [[[0.6476, 0.3214], [0.0787, 0.1821]], [[0.0074, 0.0555], [0.7072, 0.6386]]]]]], 4, Con43259), 
LSub65847 = subtract_layer([[[[[0.4322, 0.633, 0.6238], [0.5257, 0.954, 0.1396]], [[0.3697, 0.8999, 0.9574], [0.3129, 0.5956, 0.5353]]], [[[0.6108, 0.7729, 0.5054], [0.3241, 0.6094, 0.8857]], [[0.1334, 0.3056, 0.5556], [0.2461, 0.0615, 0.3242]]]]], [[[[[0.1352, 0.7113, 0.6665], [0.0399, 0.6198, 0.7992]], [[0.4956, 0.3774, 0.3076], [0.0723, 0.4637, 0.9506]]], [[[0.8738, 0.4642, 0.4434], [0.473, 0.2437, 0.3731]], [[0.4724, 0.6764, 0.5239], [0.7477, 0.2456, 0.7982]]]]], Sub65847), 
LMin19378 = minimum_layer([Con43259,Sub65847], Min19378), 
exec_layers([LMul67270,LZer28393,LCon43259,LSub65847,LMin19378],["Mul67270","Zer28393","Con43259","Sub65847","Min19378"],Min19378,"Min19378")

Actual (Unparsed): [[[[[0.0000000, -0.0783000, -0.0427000], [0.3080662, 0.3342000, -0.6596000]], [[-0.1259000, 0.3826000, 0.5280000], [0.1120378, 0.1319000, -0.4153000]]], [[[-0.2630000, 0.3087000, 0.0620000], [-0.1489000, 0.0787000, 0.1821000]], [[-0.3390000, -0.3708000, 0.0317000], [-0.5016000, -0.1841000, -0.4740000]]]]]

Expected (Unparsed): [[[[[0,-0.07830000000000004,-0.04269999999999996],[0.30806622,0.33419999999999994,-0.6596]],[[-0.1259,0.3826,0.528],[0.11203782999999999,0.13190000000000002,-0.4153]]],[[[-0.263,0.30870000000000003,0.061999999999999944],[-0.14889999999999998,0.0787,0.1821]],[[-0.33899999999999997,-0.3708,0.03169999999999995],[-0.5016,-0.1841,-0.47400000000000003]]]]]

Actual:   [[[[[0, -0.0783, -0.0427], [0.3081, 0.3342, -0.6596]], [[-0.1259, 0.3826, 0.528], [0.1121, 0.1319, -0.4153]]], [[[-0.263, 0.3087, 0.062], [-0.1489, 0.0787, 0.1821]], [[-0.339, -0.3708, 0.0317], [-0.5016, -0.1841, -0.474]]]]]

Expected: [[[[[0, -0.0783, -0.0426], [0.3081, 0.3342, -0.6596]], [[-0.1259, 0.3826, 0.528], [0.1121, 0.132, -0.4153]]], [[[-0.263, 0.3088, 0.062], [-0.1488, 0.0787, 0.1821]], [[-0.3389, -0.3708, 0.0317], [-0.5016, -0.1841, -0.474]]]]]