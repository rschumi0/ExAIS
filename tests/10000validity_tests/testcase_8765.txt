import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Min26406 = tf.keras.layers.Input(shape=([1, 2, 1]))
in1Min26406 = tf.keras.layers.Input(shape=([1, 2, 1]))

Min26406 = keras.layers.Minimum(name = 'Min26406', )([in0Min26406,in1Min26406])
Lay48739 = keras.layers.LayerNormalization(axis=2, epsilon=2.835462566064006, name = 'Lay48739', )(Min26406)
Res10841 = keras.layers.Reshape((1, 2), name = 'Res10841', )(Lay48739)
Max13091 = keras.layers.MaxPool1D(pool_size=(1), strides=(8), padding='same', name = 'Max13091', )(Res10841)
model = tf.keras.models.Model(inputs=[in0Min26406,in1Min26406], outputs=Max13091)
in0Min26406 = tf.constant([[[[0.2864], [0.7341]]]])
in1Min26406 = tf.constant([[[[0.8347], [0.4361]]]])
print (np.array2string(model.predict([in0Min26406,in1Min26406],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Max13091.png')

LMin26406 = minimum_layer([[[[[0.2864], [0.7341]]]], [[[[0.8347], [0.4361]]]]], Min26406), 
LLay48739 = layer_normalization_layer(Min26406, 2, 2.835462566064006, Lay48739), 
LRes10841 = reshape_layer(Lay48739, [1, 2], Res10841), 
LMax13091 = max_pool1D_layer(Res10841, 1, 8, true, Max13091), 
exec_layers([LMin26406,LLay48739,LRes10841,LMax13091],["Min26406","Lay48739","Res10841","Max13091"],Max13091,"Max13091")

Actual (Unparsed): [[[-0.0444070, 0.0444070]]]

Expected (Unparsed): [[[-0.044406977337824075,0.04440697733782411]]]

Actual:   [[[-0.0444, 0.0445]]]

Expected: [[[-0.0444, 0.0445]]]