import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0LST26080 = tf.keras.layers.Input(shape=([3, 1]))
in0Max14616 = tf.keras.layers.Input(shape=([1, 2]))
in1Max14616 = tf.keras.layers.Input(shape=([1, 2]))
in0Add12149 = tf.keras.layers.Input(shape=([2, 1, 1, 1]))
in1Add12149 = tf.keras.layers.Input(shape=([2, 1, 1, 1]))
in0Con1839 = tf.keras.layers.Input(shape=([1, 3]))
in0Con38320 = tf.keras.layers.Input(shape=([4, 5, 8]))
in0Sub74350 = tf.keras.layers.Input(shape=([2, 3, 3, 3]))
in1Sub74350 = tf.keras.layers.Input(shape=([2, 3, 3, 3]))

LST26080 = keras.layers.LSTM(1,recurrent_activation='sigmoid', name = 'LST26080', )(in0LST26080)
Res13978 = keras.layers.Reshape((1, 1), name = 'Res13978', )(LST26080)
Res25065 = keras.layers.Reshape((1, 1, 1), name = 'Res25065', )(Res13978)
Glo29718 = keras.layers.GlobalAveragePooling2D(name = 'Glo29718', )(Res25065)
Res1817 = keras.layers.Reshape((1, 1), name = 'Res1817', )(Glo29718)
Res98360 = keras.layers.Reshape((1, 1, 1), name = 'Res98360', )(Res1817)
Con45529 = keras.layers.Conv2DTranspose(4, (1, 1),strides=(1, 1), padding='same', name = 'Con45529', )(Res98360)
Res94035 = keras.layers.Reshape((1, 4), name = 'Res94035', )(Con45529)
Max14616 = keras.layers.Maximum(name = 'Max14616', )([in0Max14616,in1Max14616])
GRU10317 = keras.layers.GRU(2,reset_after=True, recurrent_activation='sigmoid', name = 'GRU10317', )(Max14616)
Res71412 = keras.layers.Reshape((2, 1), name = 'Res71412', )(GRU10317)
Add12149 = keras.layers.Add(name = 'Add12149', )([in0Add12149,in1Add12149])
Res79987 = keras.layers.Reshape((2, 1, 1), name = 'Res79987', )(Add12149)
Res15081 = keras.layers.Reshape((2, 1), name = 'Res15081', )(Res79987)
Dot39005 = keras.layers.Dot(axes=(1, 1), name = 'Dot39005', )([Res71412,Res15081])
Con1839 = keras.layers.Concatenate(axis=2, name = 'Con1839', )([Dot39005,in0Con1839])
Mul85098 = keras.layers.Multiply(name = 'Mul85098', )([Res94035,Con1839])
Res4163 = keras.layers.Reshape((1, 4, 1), name = 'Res4163', )(Mul85098)
Zer67140 = keras.layers.ZeroPadding2D(padding=((3, 0), (1, 0)), name = 'Zer67140', )(Res4163)
Con38320 = keras.layers.Concatenate(axis=3, name = 'Con38320', )([Zer67140,in0Con38320])
Sub74350 = keras.layers.Subtract(name = 'Sub74350', )([in0Sub74350,in1Sub74350])
Res3738 = keras.layers.Reshape((2, 3, 9), name = 'Res3738', )(Sub74350)
Zer6542 = keras.layers.ZeroPadding2D(padding=((1, 1), (1, 1)), name = 'Zer6542', )(Res3738)
Min96642 = keras.layers.Minimum(name = 'Min96642', )([Con38320,Zer6542])
model = tf.keras.models.Model(inputs=[in0LST26080,in0Max14616,in1Max14616,in0Add12149,in1Add12149,in0Con1839,in0Con38320,in0Sub74350,in1Sub74350], outputs=Min96642)
w = model.get_layer('LST26080').get_weights() 
w[0] = np.array([[10, 2, 3, 7]])
w[1] = np.array([[2, 5, 4, 2]])
w[2] = np.array([1, 1, 4, 7])
model.get_layer('LST26080').set_weights(w) 
w = model.get_layer('Con45529').get_weights() 
w[0] = np.array([[[[0.5577], [0.39], [0.543], [0.4653]]]])
w[1] = np.array([0, 0, 0, 0])
model.get_layer('Con45529').set_weights(w) 
w = model.get_layer('GRU10317').get_weights() 
w[0] = np.array([[8, 5, 10, 6, 4, 1], [4, 7, 3, 10, 9, 1]])
w[1] = np.array([[2, 7, 4, 6, 8, 1], [8, 3, 7, 6, 9, 6]])
w[2] = np.array([[3, 2, 8, 2, 6, 9], [4, 5, 2, 10, 10, 10]])
model.get_layer('GRU10317').set_weights(w) 
in0LST26080 = tf.constant([[[10], [4], [2]]])
in0Max14616 = tf.constant([[[0.3894, 0.5453]]])
in1Max14616 = tf.constant([[[0.5066, 0.2246]]])
in0Add12149 = tf.constant([[[[[0.5799]]], [[[0.2819]]]]])
in1Add12149 = tf.constant([[[[[0.8424]]], [[[0.0977]]]]])
in0Con1839 = tf.constant([[[0.5551, 0.8333, 0.6326]]])
in0Con38320 = tf.constant([[[[0.7185, 0.3953, 0.8941, 0.7297, 0.2583, 0.5284, 0.8172, 0.3319], [0.7314, 0.4313, 0.6249, 0.5144, 0.1335, 0.7441, 0.7558, 0.7943], [0.0648, 0.3327, 0.261, 0.347, 0.2859, 0.8262, 0.9567, 0.779], [0.0062, 0.6851, 0.478, 0.9155, 0.5992, 0.7464, 0.2728, 0.536], [0.4466, 0.7932, 0.3407, 0.9784, 0.3897, 0.3283, 0.5676, 0.0598]], [[0.8329, 0.4001, 0.8393, 0.8164, 0.8881, 0.0214, 0.7251, 0.1541], [0.0763, 0.4532, 0.4137, 0.6148, 0.0057, 0.3804, 0.76, 0.1189], [0.1403, 0.7991, 0.751, 0.7204, 0.2362, 0.2563, 0.4373, 0.1246], [0.2794, 0.9334, 0.3926, 0.9629, 0.7876, 0.9509, 0.0616, 0.5909], [0.1522, 0.1862, 0.9341, 0.4835, 0.2943, 0.8402, 0.3473, 0.1374]], [[0.2808, 0.9717, 0.8547, 0.7598, 0.7056, 0.2197, 0.5283, 0.9199], [0.5805, 0.9809, 0.2604, 0.772, 0.1982, 0.3761, 0.119, 0.4218], [0.9308, 0.445, 0.0772, 0.4975, 0.2119, 0.1389, 0.9848, 0.0149], [0.0109, 0.8512, 0.4777, 0.1796, 0.9541, 0.4159, 0.6345, 0.8568], [0.8737, 0.737, 0.5778, 0.0579, 0.9723, 0.4667, 0.8929, 0.9409]], [[0.9786, 0.4433, 0.6888, 0.5047, 0.6415, 0.9179, 0.3647, 0.3664], [0.6577, 0.9552, 0.6578, 0.7573, 0.6643, 0.7737, 0.3496, 0.1435], [0.2369, 0.209, 0.085, 0.6878, 0.9318, 0.9269, 0.1192, 0.1007], [0.2855, 0.4945, 0.4499, 0.3021, 0.3418, 0.9221, 0.7142, 0.7106], [0.7159, 0.8315, 0.4334, 0.9095, 0.4237, 0.9774, 0.6752, 0.9013]]]])
in0Sub74350 = tf.constant([[[[[0.8619, 0.9637, 0.3353], [0.3633, 0.1157, 0.2858], [0.5268, 0.2387, 0.2633]], [[0.2003, 0.1375, 0.2626], [0.6479, 0.835, 0.2448], [0.7531, 0.3261, 0.4335]], [[0.3701, 0.8463, 0.3106], [0.8012, 0.7648, 0.1502], [0.1889, 0.5391, 0.46]]], [[[0.3635, 0.9541, 0.4268], [0.4498, 0.3015, 0.3341], [0.6761, 0.716, 0.651]], [[0.3808, 0.4176, 0.6678], [0.4283, 0.5905, 0.7073], [0.973, 0.5583, 0.3666]], [[0.5427, 0.6848, 0.2075], [0.2066, 0.8633, 0.0319], [0.5086, 0.599, 0.2783]]]]])
in1Sub74350 = tf.constant([[[[[0.2321, 0.0936, 0.2478], [0.3111, 0.2144, 0.4181], [0.9091, 0.2789, 0.1898]], [[0.2034, 0.82, 0.5376], [0.5981, 0.4467, 0.4265], [0.7124, 0.0772, 0.363]], [[0.8769, 0.7074, 0.7478], [0.3021, 0.538, 0.7434], [0.2917, 0.163, 0.6106]]], [[[0.4052, 0.0095, 0.0707], [0.7757, 0.7003, 0.2882], [0.12, 0.6835, 0.424]], [[0.6853, 0.7973, 0.0169], [0.7111, 0.139, 0.293], [0.8021, 0.5074, 0.6524]], [[0.2868, 0.6216, 0.8432], [0.1676, 0.9508, 0.3889], [0.208, 0.2455, 0.8498]]]]])
print (np.array2string(model.predict([in0LST26080,in0Max14616,in1Max14616,in0Add12149,in1Add12149,in0Con1839,in0Con38320,in0Sub74350,in1Sub74350],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Min96642.png')

LLST26080 = lstm_layer([[[10], [4], [2]]],[[10, 2, 3, 7]],[[2, 5, 4, 2]],[1, 1, 4, 7], LST26080), 
LRes13978 = reshape_layer(LST26080, [1, 1], Res13978), 
LRes25065 = reshape_layer(Res13978, [1, 1, 1], Res25065), 
LGlo29718 = global_average_pooling2D_layer(Res25065, Glo29718), 
LRes1817 = reshape_layer(Glo29718, [1, 1], Res1817), 
LRes98360 = reshape_layer(Res1817, [1, 1, 1], Res98360), 
LCon45529 = conv2D_transpose_layer(Res98360, 1, 1,[[[[0.5577], [0.39], [0.543], [0.4653]]]],[0, 0, 0, 0], 1, 1, true, Con45529), 
LRes94035 = reshape_layer(Con45529, [1, 4], Res94035), 
LMax14616 = maximum_layer([[[[0.3894, 0.5453]]], [[[0.5066, 0.2246]]]], Max14616), 
LGRU10317 = gru_layer(Max14616,[[8, 5, 10, 6, 4, 1], [4, 7, 3, 10, 9, 1]],[[2, 7, 4, 6, 8, 1], [8, 3, 7, 6, 9, 6]],[[3, 2, 8, 2, 6, 9], [4, 5, 2, 10, 10, 10]], true, GRU10317), 
LRes71412 = reshape_layer(GRU10317, [2, 1], Res71412), 
LAdd12149 = add_layer([[[[[[0.5799]]], [[[0.2819]]]]], [[[[[0.8424]]], [[[0.0977]]]]]], Add12149), 
LRes79987 = reshape_layer(Add12149, [2, 1, 1], Res79987), 
LRes15081 = reshape_layer(Res79987, [2, 1], Res15081), 
LDot39005 = dot_layer(Res71412,Res15081, 1, 1, Dot39005), 
LCon1839 = concatenate_layer([Dot39005,[[[0.5551, 0.8333, 0.6326]]]], 2, Con1839), 
LMul85098 = multiply_layer([Res94035,Con1839], Mul85098), 
LRes4163 = reshape_layer(Mul85098, [1, 4, 1], Res4163), 
LZer67140 = zero_padding2D_layer(Res4163, 3, 0, 1, 0, Zer67140), 
LCon38320 = concatenate_layer([Zer67140,[[[[0.7185, 0.3953, 0.8941, 0.7297, 0.2583, 0.5284, 0.8172, 0.3319], [0.7314, 0.4313, 0.6249, 0.5144, 0.1335, 0.7441, 0.7558, 0.7943], [0.0648, 0.3327, 0.261, 0.347, 0.2859, 0.8262, 0.9567, 0.779], [0.0062, 0.6851, 0.478, 0.9155, 0.5992, 0.7464, 0.2728, 0.536], [0.4466, 0.7932, 0.3407, 0.9784, 0.3897, 0.3283, 0.5676, 0.0598]], [[0.8329, 0.4001, 0.8393, 0.8164, 0.8881, 0.0214, 0.7251, 0.1541], [0.0763, 0.4532, 0.4137, 0.6148, 0.0057, 0.3804, 0.76, 0.1189], [0.1403, 0.7991, 0.751, 0.7204, 0.2362, 0.2563, 0.4373, 0.1246], [0.2794, 0.9334, 0.3926, 0.9629, 0.7876, 0.9509, 0.0616, 0.5909], [0.1522, 0.1862, 0.9341, 0.4835, 0.2943, 0.8402, 0.3473, 0.1374]], [[0.2808, 0.9717, 0.8547, 0.7598, 0.7056, 0.2197, 0.5283, 0.9199], [0.5805, 0.9809, 0.2604, 0.772, 0.1982, 0.3761, 0.119, 0.4218], [0.9308, 0.445, 0.0772, 0.4975, 0.2119, 0.1389, 0.9848, 0.0149], [0.0109, 0.8512, 0.4777, 0.1796, 0.9541, 0.4159, 0.6345, 0.8568], [0.8737, 0.737, 0.5778, 0.0579, 0.9723, 0.4667, 0.8929, 0.9409]], [[0.9786, 0.4433, 0.6888, 0.5047, 0.6415, 0.9179, 0.3647, 0.3664], [0.6577, 0.9552, 0.6578, 0.7573, 0.6643, 0.7737, 0.3496, 0.1435], [0.2369, 0.209, 0.085, 0.6878, 0.9318, 0.9269, 0.1192, 0.1007], [0.2855, 0.4945, 0.4499, 0.3021, 0.3418, 0.9221, 0.7142, 0.7106], [0.7159, 0.8315, 0.4334, 0.9095, 0.4237, 0.9774, 0.6752, 0.9013]]]]], 3, Con38320), 
LSub74350 = subtract_layer([[[[[0.8619, 0.9637, 0.3353], [0.3633, 0.1157, 0.2858], [0.5268, 0.2387, 0.2633]], [[0.2003, 0.1375, 0.2626], [0.6479, 0.835, 0.2448], [0.7531, 0.3261, 0.4335]], [[0.3701, 0.8463, 0.3106], [0.8012, 0.7648, 0.1502], [0.1889, 0.5391, 0.46]]], [[[0.3635, 0.9541, 0.4268], [0.4498, 0.3015, 0.3341], [0.6761, 0.716, 0.651]], [[0.3808, 0.4176, 0.6678], [0.4283, 0.5905, 0.7073], [0.973, 0.5583, 0.3666]], [[0.5427, 0.6848, 0.2075], [0.2066, 0.8633, 0.0319], [0.5086, 0.599, 0.2783]]]]], [[[[[0.2321, 0.0936, 0.2478], [0.3111, 0.2144, 0.4181], [0.9091, 0.2789, 0.1898]], [[0.2034, 0.82, 0.5376], [0.5981, 0.4467, 0.4265], [0.7124, 0.0772, 0.363]], [[0.8769, 0.7074, 0.7478], [0.3021, 0.538, 0.7434], [0.2917, 0.163, 0.6106]]], [[[0.4052, 0.0095, 0.0707], [0.7757, 0.7003, 0.2882], [0.12, 0.6835, 0.424]], [[0.6853, 0.7973, 0.0169], [0.7111, 0.139, 0.293], [0.8021, 0.5074, 0.6524]], [[0.2868, 0.6216, 0.8432], [0.1676, 0.9508, 0.3889], [0.208, 0.2455, 0.8498]]]]], Sub74350), 
LRes3738 = reshape_layer(Sub74350, [2, 3, 9], Res3738), 
LZer6542 = zero_padding2D_layer(Res3738, 1, 1, 1, 1, Zer6542), 
LMin96642 = minimum_layer([Con38320,Zer6542], Min96642), 
exec_layers([LLST26080,LRes13978,LRes25065,LGlo29718,LRes1817,LRes98360,LCon45529,LRes94035,LMax14616,LGRU10317,LRes71412,LAdd12149,LRes79987,LRes15081,LDot39005,LCon1839,LMul85098,LRes4163,LZer67140,LCon38320,LSub74350,LRes3738,LZer6542,LMin96642],["LST26080","Res13978","Res25065","Glo29718","Res1817","Res98360","Con45529","Res94035","Max14616","GRU10317","Res71412","Add12149","Res79987","Res15081","Dot39005","Con1839","Mul85098","Res4163","Zer67140","Con38320","Sub74350","Res3738","Zer6542","Min96642"],Min96642,"Min96642")

Actual (Unparsed): [[[[0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000]], [[0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0763000, 0.0875000, 0.0522000, -0.0987000, -0.1323000, -0.3823000, -0.0402000, 0.0735000], [-0.0031000, -0.6825000, -0.2750000, 0.0498000, 0.3883000, -0.1817000, 0.0407000, 0.2489000, 0.0705000], [-0.5068000, 0.1389000, -0.4372000, 0.3926000, 0.2268000, -0.5932000, -0.1028000, 0.0616000, -0.1506000], [0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000]], [[0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000], [-0.0417000, 0.5805000, 0.3561000, -0.3259000, -0.3988000, 0.0459000, 0.3761000, 0.0325000, 0.2270000], [-0.3045000, -0.3797000, 0.4450000, -0.2828000, 0.4515000, 0.2119000, 0.1389000, 0.0509000, -0.2858000], [0.0000000, 0.0109000, -0.6357000, 0.0390000, -0.0875000, -0.3570000, 0.3006000, 0.3535000, -0.5715000], [0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000]], [[0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000]]]]

Expected (Unparsed): [[[[0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0]],[[0,0,0,0,0,0,0,0,0],[0,0.0763,0.0875,0.052200000000000024,-0.09870000000000001,-0.13230000000000003,-0.3823,-0.040199999999999986,0.07349999999999998],[-0.0030999999999999917,-0.6824999999999999,-0.27499999999999997,0.049800000000000066,0.3883,-0.1817,0.04069999999999996,0.2489,0.07050000000000001],[-0.5068,0.13890000000000002,-0.43720000000000003,0.3926,0.2268,-0.5932,-0.1028,0.0616,-0.1506],[0,0,0,0,0,0,0,0,0]],[[0,0,0,0,0,0,0,0,0],[-0.041700000000000015,0.5805,0.3561,-0.32589999999999997,-0.39880000000000004,0.045899999999999996,0.3761,0.03249999999999997,0.22700000000000004],[-0.3045,-0.3797,0.445,-0.28279999999999994,0.4515,0.2119,0.1389,0.050900000000000056,-0.2858],[0,0.0109,-0.6356999999999999,0.03900000000000001,-0.08750000000000002,-0.35700000000000004,0.3006000000000001,0.3535,-0.5715],[0,0,0,0,0,0,0,0,0]],[[0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0]]]]

Actual:   [[[[0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0]], [[0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0.0763, 0.0875, 0.0522, -0.0987, -0.1323, -0.3823, -0.0402, 0.0735], [-0.0031, -0.6825, -0.275, 0.0498, 0.3883, -0.1817, 0.0407, 0.2489, 0.0705], [-0.5068, 0.1389, -0.4372, 0.3926, 0.2268, -0.5932, -0.1028, 0.0616, -0.1506], [0, 0, 0, 0, 0, 0, 0, 0, 0]], [[0, 0, 0, 0, 0, 0, 0, 0, 0], [-0.0417, 0.5805, 0.3561, -0.3259, -0.3988, 0.0459, 0.3761, 0.0325, 0.227], [-0.3045, -0.3797, 0.445, -0.2828, 0.4515, 0.2119, 0.1389, 0.0509, -0.2858], [0, 0.0109, -0.6357, 0.039, -0.0875, -0.357, 0.3006, 0.3535, -0.5715], [0, 0, 0, 0, 0, 0, 0, 0, 0]], [[0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0]]]]

Expected: [[[[0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0]], [[0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0.0763, 0.0875, 0.0523, -0.0987, -0.1323, -0.3823, -0.0401, 0.0735], [-0.003, -0.6824, -0.2749, 0.0499, 0.3883, -0.1817, 0.0407, 0.2489, 0.0706], [-0.5068, 0.139, -0.4372, 0.3926, 0.2268, -0.5932, -0.1028, 0.0616, -0.1506], [0, 0, 0, 0, 0, 0, 0, 0, 0]], [[0, 0, 0, 0, 0, 0, 0, 0, 0], [-0.0417, 0.5805, 0.3561, -0.3258, -0.3988, 0.0459, 0.3761, 0.0325, 0.2271], [-0.3045, -0.3797, 0.445, -0.2827, 0.4515, 0.2119, 0.1389, 0.051, -0.2858], [0, 0.0109, -0.6356, 0.0391, -0.0875, -0.357, 0.3007, 0.3535, -0.5715], [0, 0, 0, 0, 0, 0, 0, 0, 0]], [[0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0]]]]