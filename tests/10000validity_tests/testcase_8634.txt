import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Add87225 = tf.keras.layers.Input(shape=([2, 1, 1]))
in1Add87225 = tf.keras.layers.Input(shape=([2, 1, 1]))

Add87225 = keras.layers.Add(name = 'Add87225', )([in0Add87225,in1Add87225])
Bat33081 = keras.layers.BatchNormalization(axis=3, epsilon=0.6918817171674894,  name = 'Bat33081', )(Add87225)
model = tf.keras.models.Model(inputs=[in0Add87225,in1Add87225], outputs=Bat33081)
w = model.get_layer('Bat33081').get_weights() 
w[0] = np.array([0.5427])
w[1] = np.array([0.8362])
w[2] = np.array([0.5654])
w[3] = np.array([0.9889])
model.get_layer('Bat33081').set_weights(w) 
in0Add87225 = tf.constant([[[[0.0988]], [[0.9959]]]])
in1Add87225 = tf.constant([[[[0.3288]], [[0.8914]]]])
print (np.array2string(model.predict([in0Add87225,in1Add87225],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Bat33081.png')

LAdd87225 = add_layer([[[[[0.0988]], [[0.9959]]]], [[[[0.3288]], [[0.8914]]]]], Add87225), 
LBat33081 = batch_normalization_layer(Add87225, 3, 0.6918817171674894, [0.5427], [0.8362], [0.5654], [0.9889], Bat33081), 
exec_layers([LAdd87225,LBat33081],["Add87225","Bat33081"],Bat33081,"Bat33081")

Actual (Unparsed): [[[[0.7785163]], [[1.3895536]]]]

Expected (Unparsed): [[[[0.7785162638776499]],[[1.3895536341083785]]]]

Actual:   [[[[0.7786]], [[1.3896]]]]

Expected: [[[[0.7786]], [[1.3896]]]]