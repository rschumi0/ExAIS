import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Sep78850 = tf.keras.layers.Input(shape=([2, 1, 1]))
in0Ave98056 = tf.keras.layers.Input(shape=([2, 2]))
in1Ave98056 = tf.keras.layers.Input(shape=([2, 2]))
in0Con43525 = tf.keras.layers.Input(shape=([2, 3, 3, 2]))
in0Sub24269 = tf.keras.layers.Input(shape=([2, 3, 3, 3]))
in1Sub24269 = tf.keras.layers.Input(shape=([2, 3, 3, 3]))
in0Cro23683 = tf.keras.layers.Input(shape=([3, 4]))
in0Add43338 = tf.keras.layers.Input(shape=([1, 2, 2, 2]))
in1Add43338 = tf.keras.layers.Input(shape=([1, 2, 2, 2]))
in0Con52760 = tf.keras.layers.Input(shape=([4, 6, 3, 2]))

Sep78850 = keras.layers.SeparableConv2D(2, (2, 1),strides=(1, 1), padding='valid', name = 'Sep78850', )(in0Sep78850)
Res38176 = keras.layers.Reshape((1, 2), name = 'Res38176', )(Sep78850)
Zer84382 = keras.layers.ZeroPadding1D(padding=((1, 0)), name = 'Zer84382', )(Res38176)
Ave98056 = keras.layers.Average(name = 'Ave98056', )([in0Ave98056,in1Ave98056])
Mul79400 = keras.layers.Multiply(name = 'Mul79400', )([Zer84382,Ave98056])
Res83516 = keras.layers.Reshape((2, 2, 1), name = 'Res83516', )(Mul79400)
Res94724 = keras.layers.Reshape((2, 2, 1, 1), name = 'Res94724', )(Res83516)
Zer66506 = keras.layers.ZeroPadding3D(padding=((0, 0), (1, 0), (2, 0)), name = 'Zer66506', )(Res94724)
Con43525 = keras.layers.Concatenate(axis=4, name = 'Con43525', )([Zer66506,in0Con43525])
Sub24269 = keras.layers.Subtract(name = 'Sub24269', )([in0Sub24269,in1Sub24269])
Max9417 = keras.layers.Maximum(name = 'Max9417', )([Con43525,Sub24269])
Zer1786 = keras.layers.ZeroPadding3D(padding=((2, 0), (3, 0), (0, 0)), name = 'Zer1786', )(Max9417)
Cro23683 = keras.layers.Cropping1D(cropping=((1, 0)), name = 'Cro23683', )(in0Cro23683)
Res50703 = keras.layers.Reshape((2, 4, 1), name = 'Res50703', )(Cro23683)
Add43338 = keras.layers.Add(name = 'Add43338', )([in0Add43338,in1Add43338])
Res12840 = keras.layers.Reshape((2, 4, 1), name = 'Res12840', )(Add43338)
Mul74051 = keras.layers.Multiply(name = 'Mul74051', )([Res50703,Res12840])
Res614 = keras.layers.Reshape((2, 4, 1, 1), name = 'Res614', )(Mul74051)
Zer60854 = keras.layers.ZeroPadding3D(padding=((1, 1), (1, 1), (1, 1)), name = 'Zer60854', )(Res614)
Con52760 = keras.layers.Concatenate(axis=4, name = 'Con52760', )([Zer60854,in0Con52760])
Max58897 = keras.layers.Maximum(name = 'Max58897', )([Zer1786,Con52760])
model = tf.keras.models.Model(inputs=[in0Sep78850,in0Ave98056,in1Ave98056,in0Con43525,in0Sub24269,in1Sub24269,in0Cro23683,in0Add43338,in1Add43338,in0Con52760], outputs=Max58897)
w = model.get_layer('Sep78850').get_weights() 
w[0] = np.array([[[[0.5889]]], [[[0.5347]]]])
w[1] = np.array([[[[0.7879, 0.072]]]])
w[2] = np.array([0, 0])
model.get_layer('Sep78850').set_weights(w) 
in0Sep78850 = tf.constant([[[[0.117]], [[0.8203]]]])
in0Ave98056 = tf.constant([[[0.5597, 0.0784], [0.2171, 0.8471]]])
in1Ave98056 = tf.constant([[[0.6757, 0.5714], [0.9101, 0.7681]]])
in0Con43525 = tf.constant([[[[[0.1945, 0.4075], [0.8604, 0.1759], [0.6236, 0.2123]], [[0.4866, 0.5785], [0.8748, 0.4044], [0.2885, 0.1618]], [[0.7908, 0.5005], [0.8642, 0.8873], [0.2144, 0.2191]]], [[[0.6678, 0.3748], [0.7183, 0.9642], [0.8071, 0.0544]], [[0.5526, 0.4554], [0.8148, 0.8523], [0.3254, 0.1507]], [[0.2191, 0.3762], [0.9742, 0.2174], [0.2435, 0.2516]]]]])
in0Sub24269 = tf.constant([[[[[0.244, 0.7646, 0.8638], [0.7605, 0.5452, 0.1093], [0.5735, 0.9558, 0.0184]], [[0.3878, 0.1947, 0.9317], [0.9672, 0.0523, 0.4572], [0.7047, 0.1226, 0.4742]], [[0.315, 0.3555, 0.4878], [0.3363, 0.7202, 0.132], [0.1391, 0.256, 0.9282]]], [[[0.1156, 0.6909, 0.6089], [0.0373, 0.3132, 0.9452], [0.4375, 0.0464, 0.341]], [[0.8417, 0.278, 0.5732], [0.7046, 0.1989, 0.7131], [0.5185, 0.0472, 0.8959]], [[0.4692, 0.3846, 0.6385], [0.082, 0.916, 0.6589], [0.8041, 0.72, 0.8975]]]]])
in1Sub24269 = tf.constant([[[[[0.6605, 0.9619, 0.2728], [0.926, 0.5137, 0.4219], [0.6217, 0.9059, 0.4598]], [[0.1306, 0.371, 0.7154], [0.5483, 0.0974, 0.5372], [0.176, 0.8581, 0.3289]], [[0.2467, 0.1619, 0.7925], [0.7101, 0.4738, 0.8636], [0.6623, 0.4288, 0.0385]]], [[[0.5085, 0.7278, 0.2112], [0.0549, 0.1638, 0.1041], [0.8565, 0.7699, 0.5974]], [[0.4517, 0.2963, 0.2654], [0.5591, 0.172, 0.6815], [0.8104, 0.2576, 0.9053]], [[0.8036, 0.7447, 0.2546], [0.4924, 0.4962, 0.6504], [0.4768, 0.1978, 0.5279]]]]])
in0Cro23683 = tf.constant([[[1.2258, 1.5542, 1.9198, 1.9004], [1.7154, 1.2329, 1.3144, 1.393], [1.9671, 1.1818, 1.2456, 1.6593]]])
in0Add43338 = tf.constant([[[[[0.1908, 0.1176], [0.742, 0.1738]], [[0.2752, 0.801], [0.6871, 0.8499]]]]])
in1Add43338 = tf.constant([[[[[0.0795, 0.1291], [0.7985, 0.2087]], [[0.4667, 0.238], [0.0655, 0.5622]]]]])
in0Con52760 = tf.constant([[[[[0.1341, 0.4019], [0.1899, 0.96], [0.8806, 0.6536]], [[0.5035, 0.4287], [0.7319, 0.5225], [0.3787, 0.4991]], [[0.9389, 0.474], [0.9987, 0.8344], [0.0688, 0.5282]], [[0.3214, 0.7745], [0.0349, 0.3414], [0.3793, 0.6241]], [[0.0151, 0.899], [0.9421, 0.895], [0.1687, 0.2615]], [[0.2232, 0.4593], [0.8642, 0.9011], [0.7588, 0.9261]]], [[[0.4703, 0.0426], [0.0661, 0.2018], [0.6279, 0.0783]], [[0.1943, 0.1099], [0.322, 0.5676], [0.8247, 0.1577]], [[0.0028, 0.5478], [0.1444, 0.0165], [0.4662, 0.8886]], [[0.3235, 0.052], [0.1988, 0.1998], [0.0575, 0.2882]], [[0.4147, 0.3688], [0.3027, 0.5183], [0.0702, 0.1485]], [[0.0287, 0.8842], [0.7251, 0.3412], [0.538, 0.1402]]], [[[0.2422, 0.0313], [0.6643, 0.9886], [0.9621, 0.0104]], [[0.9493, 0.3278], [0.1732, 0.0046], [0.7181, 0.9907]], [[0.4087, 0.5674], [0.8291, 0.5663], [0.3443, 0.5334]], [[0.755, 0.1969], [0.8451, 0.7405], [0.5676, 0.8199]], [[0.0182, 0.323], [0.346, 0.1863], [0.9597, 0.2567]], [[0.5048, 0.128], [0.2582, 0.9894], [0.547, 0.9686]]], [[[0.2116, 0.934], [0.7879, 0.6778], [0.1491, 0.3171]], [[0.6665, 0.3545], [0.2077, 0.3788], [0.3631, 0.8882]], [[0.4106, 0.2017], [0.5768, 0.2002], [0.9133, 0.5099]], [[0.4809, 0.2912], [0.8461, 0.6239], [0.0701, 0.4346]], [[0.2613, 0.3832], [0.3426, 0.2455], [0.3171, 0.2549]], [[0.0159, 0.0295], [0.9769, 0.0381], [0.7692, 0.7665]]]]])
print (np.array2string(model.predict([in0Sep78850,in0Ave98056,in1Ave98056,in0Con43525,in0Sub24269,in1Sub24269,in0Cro23683,in0Add43338,in1Add43338,in0Con52760],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Max58897.png')

LSep78850 = separable_conv2D_layer([[[[0.117]], [[0.8203]]]], 2, 1,[[[[[0.5889]]], [[[0.5347]]]],[[[[0.7879, 0.072]]]]],[0, 0], 1, 1, false, Sep78850), 
LRes38176 = reshape_layer(Sep78850, [1, 2], Res38176), 
LZer84382 = zero_padding1D_layer(Res38176, 1, 0, Zer84382), 
LAve98056 = average_layer([[[[0.5597, 0.0784], [0.2171, 0.8471]]], [[[0.6757, 0.5714], [0.9101, 0.7681]]]], Ave98056), 
LMul79400 = multiply_layer([Zer84382,Ave98056], Mul79400), 
LRes83516 = reshape_layer(Mul79400, [2, 2, 1], Res83516), 
LRes94724 = reshape_layer(Res83516, [2, 2, 1, 1], Res94724), 
LZer66506 = zero_padding3D_layer(Res94724, 0, 0, 1, 0, 2, 0, Zer66506), 
LCon43525 = concatenate_layer([Zer66506,[[[[[0.1945, 0.4075], [0.8604, 0.1759], [0.6236, 0.2123]], [[0.4866, 0.5785], [0.8748, 0.4044], [0.2885, 0.1618]], [[0.7908, 0.5005], [0.8642, 0.8873], [0.2144, 0.2191]]], [[[0.6678, 0.3748], [0.7183, 0.9642], [0.8071, 0.0544]], [[0.5526, 0.4554], [0.8148, 0.8523], [0.3254, 0.1507]], [[0.2191, 0.3762], [0.9742, 0.2174], [0.2435, 0.2516]]]]]], 4, Con43525), 
LSub24269 = subtract_layer([[[[[0.244, 0.7646, 0.8638], [0.7605, 0.5452, 0.1093], [0.5735, 0.9558, 0.0184]], [[0.3878, 0.1947, 0.9317], [0.9672, 0.0523, 0.4572], [0.7047, 0.1226, 0.4742]], [[0.315, 0.3555, 0.4878], [0.3363, 0.7202, 0.132], [0.1391, 0.256, 0.9282]]], [[[0.1156, 0.6909, 0.6089], [0.0373, 0.3132, 0.9452], [0.4375, 0.0464, 0.341]], [[0.8417, 0.278, 0.5732], [0.7046, 0.1989, 0.7131], [0.5185, 0.0472, 0.8959]], [[0.4692, 0.3846, 0.6385], [0.082, 0.916, 0.6589], [0.8041, 0.72, 0.8975]]]]], [[[[[0.6605, 0.9619, 0.2728], [0.926, 0.5137, 0.4219], [0.6217, 0.9059, 0.4598]], [[0.1306, 0.371, 0.7154], [0.5483, 0.0974, 0.5372], [0.176, 0.8581, 0.3289]], [[0.2467, 0.1619, 0.7925], [0.7101, 0.4738, 0.8636], [0.6623, 0.4288, 0.0385]]], [[[0.5085, 0.7278, 0.2112], [0.0549, 0.1638, 0.1041], [0.8565, 0.7699, 0.5974]], [[0.4517, 0.2963, 0.2654], [0.5591, 0.172, 0.6815], [0.8104, 0.2576, 0.9053]], [[0.8036, 0.7447, 0.2546], [0.4924, 0.4962, 0.6504], [0.4768, 0.1978, 0.5279]]]]], Sub24269), 
LMax9417 = maximum_layer([Con43525,Sub24269], Max9417), 
LZer1786 = zero_padding3D_layer(Max9417, 2, 0, 3, 0, 0, 0, Zer1786), 
LCro23683 = cropping1D_layer([[[1.2258, 1.5542, 1.9198, 1.9004], [1.7154, 1.2329, 1.3144, 1.393], [1.9671, 1.1818, 1.2456, 1.6593]]], 1, 0, Cro23683), 
LRes50703 = reshape_layer(Cro23683, [2, 4, 1], Res50703), 
LAdd43338 = add_layer([[[[[[0.1908, 0.1176], [0.742, 0.1738]], [[0.2752, 0.801], [0.6871, 0.8499]]]]], [[[[[0.0795, 0.1291], [0.7985, 0.2087]], [[0.4667, 0.238], [0.0655, 0.5622]]]]]], Add43338), 
LRes12840 = reshape_layer(Add43338, [2, 4, 1], Res12840), 
LMul74051 = multiply_layer([Res50703,Res12840], Mul74051), 
LRes614 = reshape_layer(Mul74051, [2, 4, 1, 1], Res614), 
LZer60854 = zero_padding3D_layer(Res614, 1, 1, 1, 1, 1, 1, Zer60854), 
LCon52760 = concatenate_layer([Zer60854,[[[[[0.1341, 0.4019], [0.1899, 0.96], [0.8806, 0.6536]], [[0.5035, 0.4287], [0.7319, 0.5225], [0.3787, 0.4991]], [[0.9389, 0.474], [0.9987, 0.8344], [0.0688, 0.5282]], [[0.3214, 0.7745], [0.0349, 0.3414], [0.3793, 0.6241]], [[0.0151, 0.899], [0.9421, 0.895], [0.1687, 0.2615]], [[0.2232, 0.4593], [0.8642, 0.9011], [0.7588, 0.9261]]], [[[0.4703, 0.0426], [0.0661, 0.2018], [0.6279, 0.0783]], [[0.1943, 0.1099], [0.322, 0.5676], [0.8247, 0.1577]], [[0.0028, 0.5478], [0.1444, 0.0165], [0.4662, 0.8886]], [[0.3235, 0.052], [0.1988, 0.1998], [0.0575, 0.2882]], [[0.4147, 0.3688], [0.3027, 0.5183], [0.0702, 0.1485]], [[0.0287, 0.8842], [0.7251, 0.3412], [0.538, 0.1402]]], [[[0.2422, 0.0313], [0.6643, 0.9886], [0.9621, 0.0104]], [[0.9493, 0.3278], [0.1732, 0.0046], [0.7181, 0.9907]], [[0.4087, 0.5674], [0.8291, 0.5663], [0.3443, 0.5334]], [[0.755, 0.1969], [0.8451, 0.7405], [0.5676, 0.8199]], [[0.0182, 0.323], [0.346, 0.1863], [0.9597, 0.2567]], [[0.5048, 0.128], [0.2582, 0.9894], [0.547, 0.9686]]], [[[0.2116, 0.934], [0.7879, 0.6778], [0.1491, 0.3171]], [[0.6665, 0.3545], [0.2077, 0.3788], [0.3631, 0.8882]], [[0.4106, 0.2017], [0.5768, 0.2002], [0.9133, 0.5099]], [[0.4809, 0.2912], [0.8461, 0.6239], [0.0701, 0.4346]], [[0.2613, 0.3832], [0.3426, 0.2455], [0.3171, 0.2549]], [[0.0159, 0.0295], [0.9769, 0.0381], [0.7692, 0.7665]]]]]], 4, Con52760), 
LMax58897 = maximum_layer([Zer1786,Con52760], Max58897), 
exec_layers([LSep78850,LRes38176,LZer84382,LAve98056,LMul79400,LRes83516,LRes94724,LZer66506,LCon43525,LSub24269,LMax9417,LZer1786,LCro23683,LRes50703,LAdd43338,LRes12840,LMul74051,LRes614,LZer60854,LCon52760,LMax58897],["Sep78850","Res38176","Zer84382","Ave98056","Mul79400","Res83516","Res94724","Zer66506","Con43525","Sub24269","Max9417","Zer1786","Cro23683","Res50703","Add43338","Res12840","Mul74051","Res614","Zer60854","Con52760","Max58897"],Max58897,"Max58897")

Actual (Unparsed): [[[[[0.0000000, 0.1341000, 0.4019000], [0.0000000, 0.1899000, 0.9600000], [0.0000000, 0.8806000, 0.6536000]], [[0.0000000, 0.5035000, 0.4287000], [0.0000000, 0.7319000, 0.5225000], [0.0000000, 0.3787000, 0.4991000]], [[0.0000000, 0.9389000, 0.4740000], [0.0000000, 0.9987000, 0.8344000], [0.0000000, 0.0688000, 0.5282000]], [[0.0000000, 0.3214000, 0.7745000], [0.0000000, 0.0349000, 0.3414000], [0.0000000, 0.3793000, 0.6241000]], [[0.0000000, 0.0151000, 0.8990000], [0.0000000, 0.9421000, 0.8950000], [0.0000000, 0.1687000, 0.2615000]], [[0.0000000, 0.2232000, 0.4593000], [0.0000000, 0.8642000, 0.9011000], [0.0000000, 0.7588000, 0.9261000]]], [[[0.0000000, 0.4703000, 0.0426000], [0.0000000, 0.0661000, 0.2018000], [0.0000000, 0.6279000, 0.0783000]], [[0.0000000, 0.1943000, 0.1099000], [0.4636726, 0.3220000, 0.5676000], [0.0000000, 0.8247000, 0.1577000]], [[0.0000000, 0.0028000, 0.5478000], [0.3041564, 0.1444000, 0.0165000], [0.0000000, 0.4662000, 0.8886000]], [[0.0000000, 0.3235000, 0.0520000], [2.0248331, 0.1988000, 0.1998000], [0.0000000, 0.0575000, 0.2882000]], [[0.0000000, 0.4147000, 0.3688000], [0.5328225, 0.3027000, 0.5183000], [0.0000000, 0.0702000, 0.1485000]], [[0.0000000, 0.0287000, 0.8842000], [0.0000000, 0.7251000, 0.3412000], [0.0000000, 0.5380000, 0.1402000]]], [[[0.0000000, 0.2422000, 0.0313000], [0.0000000, 0.6643000, 0.9886000], [0.0000000, 0.9621000, 0.0104000]], [[0.0000000, 0.9493000, 0.3278000], [1.4593915, 0.1732000, 0.0046000], [0.0000000, 0.7181000, 0.9907000]], [[0.0000000, 0.4087000, 0.5674000], [1.2278902, 0.8291000, 0.5663000], [0.0000000, 0.3443000, 0.5334000]], [[0.0000000, 0.7550000, 0.5910000], [0.9374385, 0.8604000, 0.7405000], [0.0000000, 0.6236000, 0.8199000]], [[0.2572000, 0.4866000, 0.5785000], [2.3430975, 0.8748000, 0.4044000], [0.5287000, 0.9597000, 0.2567000]], [[0.0683000, 0.7908000, 0.5005000], [0.0000000, 0.8642000, 0.9894000], [0.0000000, 0.5470000, 0.9686000]]], [[[0.0000000, 0.2116000, 0.9340000], [0.0000000, 0.7879000, 0.6778000], [0.0000000, 0.1491000, 0.3171000]], [[0.0000000, 0.6665000, 0.3545000], [0.0000000, 0.2077000, 0.3788000], [0.0000000, 0.3631000, 0.8882000]], [[0.0000000, 0.4106000, 0.2017000], [0.0000000, 0.5768000, 0.2002000], [0.0000000, 0.9133000, 0.5099000]], [[0.0000000, 0.6678000, 0.3977000], [0.0000000, 0.8461000, 0.9642000], [0.0000000, 0.8071000, 0.4346000]], [[0.3900000, 0.5526000, 0.4554000], [0.1455000, 0.8148000, 0.8523000], [0.2253676, 0.3254000, 0.2549000]], [[0.0000000, 0.2191000, 0.3839000], [0.0000000, 0.9769000, 0.2174000], [0.3273000, 0.7692000, 0.7665000]]]]]

Expected (Unparsed): [[[[[0,0.1341,0.4019],[0,0.1899,0.96],[0,0.8806,0.6536]],[[0,0.5035,0.4287],[0,0.7319,0.5225],[0,0.3787,0.4991]],[[0,0.9389,0.474],[0,0.9987,0.8344],[0,0.0688,0.5282]],[[0,0.3214,0.7745],[0,0.0349,0.3414],[0,0.3793,0.6241]],[[0,0.0151,0.899],[0,0.9421,0.895],[0,0.1687,0.2615]],[[0,0.2232,0.4593],[0,0.8642,0.9011],[0,0.7588,0.9261]]],[[[0,0.4703,0.0426],[0,0.0661,0.2018],[0,0.6279,0.0783]],[[0,0.1943,0.1099],[0.46367262,0.322,0.5676],[0,0.8247,0.1577]],[[0,0.0028,0.5478],[0.30415643,0.1444,0.0165],[0,0.4662,0.8886]],[[0,0.3235,0.052],[2.0248331999999998,0.1988,0.1998],[0,0.0575,0.2882]],[[0,0.4147,0.3688],[0.5328225,0.3027,0.5183],[0,0.0702,0.1485]],[[0,0.0287,0.8842],[0,0.7251,0.3412],[0,0.538,0.1402]]],[[[0,0.2422,0.0313],[0,0.6643,0.9886],[0,0.9621,0.0104]],[[0,0.9493,0.3278],[1.45939149,0.1732,0.0046],[0,0.7181,0.9907]],[[0,0.4087,0.5674],[1.2278902,0.8291,0.5663],[0,0.3443,0.5334]],[[0,0.755,0.591],[0.9374385600000001,0.8604,0.7405],[0,0.6236,0.8199]],[[0.2572,0.4866,0.5785],[2.34309753,0.8748,0.4044],[0.5287,0.9597,0.2567]],[[0.0683,0.7908,0.5005],[0,0.8642,0.9894],[0.0,0.547,0.9686]]],[[[0,0.2116,0.934],[0,0.7879,0.6778],[0,0.1491,0.3171]],[[0,0.6665,0.3545],[0,0.2077,0.3788],[0,0.3631,0.8882]],[[0,0.4106,0.2017],[0,0.5768,0.2002],[0,0.9133,0.5099]],[[0,0.6678,0.3977],[0,0.8461,0.9642],[0,0.8071,0.4346]],[[0.39,0.5526,0.4554],[0.14549999999999996,0.8148,0.8523],[0.2253676494895124,0.3254,0.2549]],[[0,0.2191,0.38389999999999996],[0,0.9769,0.2174],[0.32730000000000004,0.7692,0.7665]]]]]

Actual:   [[[[[0, 0.1341, 0.4019], [0, 0.1899, 0.96], [0, 0.8806, 0.6536]], [[0, 0.5035, 0.4287], [0, 0.7319, 0.5225], [0, 0.3787, 0.4991]], [[0, 0.9389, 0.474], [0, 0.9987, 0.8344], [0, 0.0688, 0.5282]], [[0, 0.3214, 0.7745], [0, 0.0349, 0.3414], [0, 0.3793, 0.6241]], [[0, 0.0151, 0.899], [0, 0.9421, 0.895], [0, 0.1687, 0.2615]], [[0, 0.2232, 0.4593], [0, 0.8642, 0.9011], [0, 0.7588, 0.9261]]], [[[0, 0.4703, 0.0426], [0, 0.0661, 0.2018], [0, 0.6279, 0.0783]], [[0, 0.1943, 0.1099], [0.4637, 0.322, 0.5676], [0, 0.8247, 0.1577]], [[0, 0.0028, 0.5478], [0.3042, 0.1444, 0.0165], [0, 0.4662, 0.8886]], [[0, 0.3235, 0.052], [2.0249, 0.1988, 0.1998], [0, 0.0575, 0.2882]], [[0, 0.4147, 0.3688], [0.5329, 0.3027, 0.5183], [0, 0.0702, 0.1485]], [[0, 0.0287, 0.8842], [0, 0.7251, 0.3412], [0, 0.538, 0.1402]]], [[[0, 0.2422, 0.0313], [0, 0.6643, 0.9886], [0, 0.9621, 0.0104]], [[0, 0.9493, 0.3278], [1.4594, 0.1732, 0.0046], [0, 0.7181, 0.9907]], [[0, 0.4087, 0.5674], [1.2279, 0.8291, 0.5663], [0, 0.3443, 0.5334]], [[0, 0.755, 0.591], [0.9375, 0.8604, 0.7405], [0, 0.6236, 0.8199]], [[0.2572, 0.4866, 0.5785], [2.3431, 0.8748, 0.4044], [0.5287, 0.9597, 0.2567]], [[0.0683, 0.7908, 0.5005], [0, 0.8642, 0.9894], [0, 0.547, 0.9686]]], [[[0, 0.2116, 0.934], [0, 0.7879, 0.6778], [0, 0.1491, 0.3171]], [[0, 0.6665, 0.3545], [0, 0.2077, 0.3788], [0, 0.3631, 0.8882]], [[0, 0.4106, 0.2017], [0, 0.5768, 0.2002], [0, 0.9133, 0.5099]], [[0, 0.6678, 0.3977], [0, 0.8461, 0.9642], [0, 0.8071, 0.4346]], [[0.39, 0.5526, 0.4554], [0.1455, 0.8148, 0.8523], [0.2254, 0.3254, 0.2549]], [[0, 0.2191, 0.3839], [0, 0.9769, 0.2174], [0.3273, 0.7692, 0.7665]]]]]

Expected: [[[[[0, 0.1341, 0.4019], [0, 0.1899, 0.96], [0, 0.8806, 0.6536]], [[0, 0.5035, 0.4287], [0, 0.7319, 0.5225], [0, 0.3787, 0.4991]], [[0, 0.9389, 0.474], [0, 0.9987, 0.8344], [0, 0.0688, 0.5282]], [[0, 0.3214, 0.7745], [0, 0.0349, 0.3414], [0, 0.3793, 0.6241]], [[0, 0.0151, 0.899], [0, 0.9421, 0.895], [0, 0.1687, 0.2615]], [[0, 0.2232, 0.4593], [0, 0.8642, 0.9011], [0, 0.7588, 0.9261]]], [[[0, 0.4703, 0.0426], [0, 0.0661, 0.2018], [0, 0.6279, 0.0783]], [[0, 0.1943, 0.1099], [0.4637, 0.322, 0.5676], [0, 0.8247, 0.1577]], [[0, 0.0028, 0.5478], [0.3042, 0.1444, 0.0165], [0, 0.4662, 0.8886]], [[0, 0.3235, 0.052], [2.0249, 0.1988, 0.1998], [0, 0.0575, 0.2882]], [[0, 0.4147, 0.3688], [0.5329, 0.3027, 0.5183], [0, 0.0702, 0.1485]], [[0, 0.0287, 0.8842], [0, 0.7251, 0.3412], [0, 0.538, 0.1402]]], [[[0, 0.2422, 0.0313], [0, 0.6643, 0.9886], [0, 0.9621, 0.0104]], [[0, 0.9493, 0.3278], [1.4594, 0.1732, 0.0046], [0, 0.7181, 0.9907]], [[0, 0.4087, 0.5674], [1.2279, 0.8291, 0.5663], [0, 0.3443, 0.5334]], [[0, 0.755, 0.591], [0.9375, 0.8604, 0.7405], [0, 0.6236, 0.8199]], [[0.2572, 0.4866, 0.5785], [2.3431, 0.8748, 0.4044], [0.5287, 0.9597, 0.2567]], [[0.0683, 0.7908, 0.5005], [0, 0.8642, 0.9894], [0, 0.547, 0.9686]]], [[[0, 0.2116, 0.934], [0, 0.7879, 0.6778], [0, 0.1491, 0.3171]], [[0, 0.6665, 0.3545], [0, 0.2077, 0.3788], [0, 0.3631, 0.8882]], [[0, 0.4106, 0.2017], [0, 0.5768, 0.2002], [0, 0.9133, 0.5099]], [[0, 0.6678, 0.3977], [0, 0.8461, 0.9642], [0, 0.8071, 0.4346]], [[0.39, 0.5526, 0.4554], [0.1455, 0.8148, 0.8523], [0.2254, 0.3254, 0.2549]], [[0, 0.2191, 0.3839], [0, 0.9769, 0.2174], [0.3274, 0.7692, 0.7665]]]]]