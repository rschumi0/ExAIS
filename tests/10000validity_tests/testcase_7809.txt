import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Ave30264 = tf.keras.layers.Input(shape=([1, 1]))
in1Ave30264 = tf.keras.layers.Input(shape=([1, 1]))
in0Con67578 = tf.keras.layers.Input(shape=([1, 1, 2, 1]))
in0Ave85195 = tf.keras.layers.Input(shape=([1, 1, 2, 2]))
in1Ave85195 = tf.keras.layers.Input(shape=([1, 1, 2, 2]))
in0Min2529 = tf.keras.layers.Input(shape=([2, 2]))
in1Min2529 = tf.keras.layers.Input(shape=([2, 2]))

Ave30264 = keras.layers.Average(name = 'Ave30264', )([in0Ave30264,in1Ave30264])
Res33032 = keras.layers.Reshape((1, 1, 1), name = 'Res33032', )(Ave30264)
Res9111 = keras.layers.Reshape((1, 1, 1, 1), name = 'Res9111', )(Res33032)
Zer34631 = keras.layers.ZeroPadding3D(padding=((0, 0), (0, 0), (1, 0)), name = 'Zer34631', )(Res9111)
Con67578 = keras.layers.Concatenate(axis=4, name = 'Con67578', )([Zer34631,in0Con67578])
Ave85195 = keras.layers.Average(name = 'Ave85195', )([in0Ave85195,in1Ave85195])
Ave43689 = keras.layers.Average(name = 'Ave43689', )([Con67578,Ave85195])
Res58552 = keras.layers.Reshape((1, 1, 4), name = 'Res58552', )(Ave43689)
Con94102 = keras.layers.Conv2DTranspose(4, (1, 1),strides=(1, 1), padding='valid', name = 'Con94102', )(Res58552)
Res45934 = keras.layers.Reshape((1, 4), name = 'Res45934', )(Con94102)
Fla66655 = keras.layers.Flatten(name = 'Fla66655', )(Res45934)
Min2529 = keras.layers.Minimum(name = 'Min2529', )([in0Min2529,in1Min2529])
Fla16040 = keras.layers.Flatten(name = 'Fla16040', )(Min2529)
Ave36364 = keras.layers.Average(name = 'Ave36364', )([Fla66655,Fla16040])
model = tf.keras.models.Model(inputs=[in0Ave30264,in1Ave30264,in0Con67578,in0Ave85195,in1Ave85195,in0Min2529,in1Min2529], outputs=Ave36364)
w = model.get_layer('Con94102').get_weights() 
w[0] = np.array([[[[0.7777, 0.1096, 0.7471, 0.4198], [0.5808, 0.1931, 0.412, 0.2641], [0.3216, 0.069, 0.8013, 0.3378], [0.2082, 0.9977, 0.9211, 0.1236]]]])
w[1] = np.array([0, 0, 0, 0])
model.get_layer('Con94102').set_weights(w) 
in0Ave30264 = tf.constant([[[0.8196]]])
in1Ave30264 = tf.constant([[[0.7812]]])
in0Con67578 = tf.constant([[[[[0.4712], [0.6468]]]]])
in0Ave85195 = tf.constant([[[[[0.9203, 0.3616], [0.3436, 0.3432]]]]])
in1Ave85195 = tf.constant([[[[[0.0576, 0.7242], [0.7161, 0.1937]]]]])
in0Min2529 = tf.constant([[[0.6349, 0.6151], [0.2544, 0.9066]]])
in1Min2529 = tf.constant([[[0.7197, 0.7983], [0.5009, 0.8235]]])
print (np.array2string(model.predict([in0Ave30264,in1Ave30264,in0Con67578,in0Ave85195,in1Ave85195,in0Min2529,in1Min2529],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Ave36364.png')

LAve30264 = average_layer([[[[0.8196]]], [[[0.7812]]]], Ave30264), 
LRes33032 = reshape_layer(Ave30264, [1, 1, 1], Res33032), 
LRes9111 = reshape_layer(Res33032, [1, 1, 1, 1], Res9111), 
LZer34631 = zero_padding3D_layer(Res9111, 0, 0, 0, 0, 1, 0, Zer34631), 
LCon67578 = concatenate_layer([Zer34631,[[[[[0.4712], [0.6468]]]]]], 4, Con67578), 
LAve85195 = average_layer([[[[[[0.9203, 0.3616], [0.3436, 0.3432]]]]], [[[[[0.0576, 0.7242], [0.7161, 0.1937]]]]]], Ave85195), 
LAve43689 = average_layer([Con67578,Ave85195], Ave43689), 
LRes58552 = reshape_layer(Ave43689, [1, 1, 4], Res58552), 
LCon94102 = conv2D_transpose_layer(Res58552, 1, 1,[[[[0.7777, 0.1096, 0.7471, 0.4198], [0.5808, 0.1931, 0.412, 0.2641], [0.3216, 0.069, 0.8013, 0.3378], [0.2082, 0.9977, 0.9211, 0.1236]]]],[0, 0, 0, 0], 1, 1, false, Con94102), 
LRes45934 = reshape_layer(Con94102, [1, 4], Res45934), 
LFla66655 = flatten_layer(Res45934, Fla66655), 
LMin2529 = minimum_layer([[[[0.6349, 0.6151], [0.2544, 0.9066]]], [[[0.7197, 0.7983], [0.5009, 0.8235]]]], Min2529), 
LFla16040 = flatten_layer(Min2529, Fla16040), 
LAve36364 = average_layer([Fla66655,Fla16040], Ave36364), 
exec_layers([LAve30264,LRes33032,LRes9111,LZer34631,LCon67578,LAve85195,LAve43689,LRes58552,LCon94102,LRes45934,LFla66655,LMin2529,LFla16040,LAve36364],["Ave30264","Res33032","Res9111","Zer34631","Con67578","Ave85195","Ave43689","Res58552","Con94102","Res45934","Fla66655","Min2529","Fla16040","Ave36364"],Ave36364,"Ave36364")

Actual (Unparsed): [[0.7848134, 0.6249464, 0.5277800, 1.0247463]]

Expected (Unparsed): [[0.784813375,0.62494634875,0.52777999875,1.02474628375]]

Actual:   [[0.7849, 0.625, 0.5278, 1.0248]]

Expected: [[0.7849, 0.625, 0.5278, 1.0248]]