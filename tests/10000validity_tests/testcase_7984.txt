import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Mul65680 = tf.keras.layers.Input(shape=([1, 2]))
in1Mul65680 = tf.keras.layers.Input(shape=([1, 2]))
in0Dot25118 = tf.keras.layers.Input(shape=([2, 2]))
in1Dot25118 = tf.keras.layers.Input(shape=([2, 2]))

Mul65680 = keras.layers.Multiply(name = 'Mul65680', )([in0Mul65680,in1Mul65680])
Zer19355 = keras.layers.ZeroPadding1D(padding=((1, 0)), name = 'Zer19355', )(Mul65680)
Dot25118 = keras.layers.Dot(axes=(2, 2), name = 'Dot25118', )([in0Dot25118,in1Dot25118])
Add53619 = keras.layers.Add(name = 'Add53619', )([Zer19355,Dot25118])
model = tf.keras.models.Model(inputs=[in0Mul65680,in1Mul65680,in0Dot25118,in1Dot25118], outputs=Add53619)
in0Mul65680 = tf.constant([[[0.716, 0.2794]]])
in1Mul65680 = tf.constant([[[0.0092, 0.8324]]])
in0Dot25118 = tf.constant([[[0.8242, 0.1962], [0.4729, 0.5301]]])
in1Dot25118 = tf.constant([[[0.1783, 0.8828], [0.4143, 0.1019]]])
print (np.array2string(model.predict([in0Mul65680,in1Mul65680,in0Dot25118,in1Dot25118],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Add53619.png')

LMul65680 = multiply_layer([[[[0.716, 0.2794]]], [[[0.0092, 0.8324]]]], Mul65680), 
LZer19355 = zero_padding1D_layer(Mul65680, 1, 0, Zer19355), 
LDot25118 = dot_layer([[[0.8242, 0.1962], [0.4729, 0.5301]]], [[[0.1783, 0.8828], [0.4143, 0.1019]]], 2, 2, Dot25118), 
LAdd53619 = add_layer([Zer19355,Dot25118], Add53619), 
exec_layers([LMul65680,LZer19355,LDot25118,LAdd53619],["Mul65680","Zer19355","Dot25118","Add53619"],Add53619,"Add53619")

Actual (Unparsed): [[[0.3201602, 0.3614588], [0.5588775, 0.4825122]]]

Expected (Unparsed): [[[0.32016022,0.36145884],[0.5588775500000001,0.48251222]]]

Actual:   [[[0.3202, 0.3615], [0.5589, 0.4826]]]

Expected: [[[0.3202, 0.3615], [0.5589, 0.4826]]]