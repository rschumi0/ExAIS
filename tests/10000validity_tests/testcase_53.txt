import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Dot58821 = tf.keras.layers.Input(shape=([2]))
in1Dot58821 = tf.keras.layers.Input(shape=([2]))

Dot58821 = keras.layers.Dot(axes=(1, 1), name = 'Dot58821', )([in0Dot58821,in1Dot58821])
Lay40961 = keras.layers.LayerNormalization(axis=1, epsilon=1.857973282294007, name = 'Lay40961', )(Dot58821)
model = tf.keras.models.Model(inputs=[in0Dot58821,in1Dot58821], outputs=Lay40961)
in0Dot58821 = tf.constant([[0.0138, 0.583]])
in1Dot58821 = tf.constant([[0.2917, 0.222]])
print (np.array2string(model.predict([in0Dot58821,in1Dot58821],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Lay40961.png')

LDot58821 = dot_layer([[0.0138, 0.583]], [[0.2917, 0.222]], 1, 1, Dot58821), 
LLay40961 = layer_normalization_layer(Dot58821, 1, 1.857973282294007, Lay40961), 
exec_layers([LDot58821,LLay40961],["Dot58821","Lay40961"],Lay40961,"Lay40961")

Actual (Unparsed): [[0.0000000]]

Expected (Unparsed): [[0.0]]

Actual:   [[0]]

Expected: [[0]]