import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Dot30989 = tf.keras.layers.Input(shape=([2]))
in1Dot30989 = tf.keras.layers.Input(shape=([2]))

Dot30989 = keras.layers.Dot(axes=(1, 1), name = 'Dot30989', )([in0Dot30989,in1Dot30989])
Res19477 = keras.layers.Reshape((1, 1), name = 'Res19477', )(Dot30989)
Res33254 = keras.layers.Reshape((1, 1, 1), name = 'Res33254', )(Res19477)
Con72791 = keras.layers.Conv2D(3, (1, 1),strides=(1, 1), padding='valid', dilation_rate=(1, 1), name = 'Con72791', )(Res33254)
model = tf.keras.models.Model(inputs=[in0Dot30989,in1Dot30989], outputs=Con72791)
w = model.get_layer('Con72791').get_weights() 
w[0] = np.array([[[[0.8979, 0.3303, 0.293]]]])
w[1] = np.array([0, 0, 0])
model.get_layer('Con72791').set_weights(w) 
in0Dot30989 = tf.constant([[0.9133, 0.8437]])
in1Dot30989 = tf.constant([[0.7923, 0.2413]])
print (np.array2string(model.predict([in0Dot30989,in1Dot30989],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Con72791.png')

LDot30989 = dot_layer([[0.9133, 0.8437]], [[0.7923, 0.2413]], 1, 1, Dot30989), 
LRes19477 = reshape_layer(Dot30989, [1, 1], Res19477), 
LRes33254 = reshape_layer(Res19477, [1, 1, 1], Res33254), 
LCon72791 = conv2D_layer(Res33254, 1, 1,[[[[0.8979, 0.3303, 0.293]]]],[0, 0, 0], 1, 1, false, 1, 1, Con72791), 
exec_layers([LDot30989,LRes19477,LRes33254,LCon72791],["Dot30989","Res19477","Res33254","Con72791"],Con72791,"Con72791")

Actual (Unparsed): [[[[0.8325260, 0.3062516, 0.2716674]]]]

Expected (Unparsed): [[[[0.83252605596,0.30625164971999996,0.27166737319999995]]]]

Actual:   [[[[0.8326, 0.3063, 0.2717]]]]

Expected: [[[[0.8326, 0.3063, 0.2717]]]]