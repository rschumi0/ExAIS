import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0LST96433 = tf.keras.layers.Input(shape=([1, 3]))
in0Add72244 = tf.keras.layers.Input(shape=([2, 1]))
in1Add72244 = tf.keras.layers.Input(shape=([2, 1]))

LST96433 = keras.layers.LSTM(2,recurrent_activation='sigmoid', name = 'LST96433', )(in0LST96433)
Res81685 = keras.layers.Reshape((2, 1), name = 'Res81685', )(LST96433)
LST38269 = keras.layers.LSTM(2,recurrent_activation='sigmoid', name = 'LST38269', )(Res81685)
Res9626 = keras.layers.Reshape((2, 1), name = 'Res9626', )(LST38269)
Add72244 = keras.layers.Add(name = 'Add72244', )([in0Add72244,in1Add72244])
Mul9679 = keras.layers.Multiply(name = 'Mul9679', )([Res9626,Add72244])
Res66337 = keras.layers.Reshape((2, 1, 1), name = 'Res66337', )(Mul9679)
Loc87660 = keras.layers.LocallyConnected2D(3, (2, 1),strides=(1, 1), name = 'Loc87660', )(Res66337)
Den43515 = keras.layers.Dense(3,name = 'Den43515', )(Loc87660)
model = tf.keras.models.Model(inputs=[in0LST96433,in0Add72244,in1Add72244], outputs=Den43515)
w = model.get_layer('LST96433').get_weights() 
w[0] = np.array([[8, 8, 3, 1, 8, 7, 3, 10], [7, 7, 5, 3, 6, 7, 6, 2], [3, 10, 4, 2, 7, 7, 7, 1]])
w[1] = np.array([[7, 4, 2, 6, 5, 5, 7, 8], [7, 4, 7, 4, 9, 4, 1, 1]])
w[2] = np.array([5, 6, 4, 1, 9, 10, 4, 8])
model.get_layer('LST96433').set_weights(w) 
w = model.get_layer('LST38269').get_weights() 
w[0] = np.array([[2, 10, 10, 6, 3, 8, 2, 10]])
w[1] = np.array([[6, 6, 1, 8, 5, 6, 3, 5], [7, 5, 6, 4, 7, 6, 9, 3]])
w[2] = np.array([8, 9, 9, 4, 2, 10, 7, 10])
model.get_layer('LST38269').set_weights(w) 
w = model.get_layer('Loc87660').get_weights() 
w[0] = np.array([[[0.5172, 0.2942, 0.3257], [0.1596, 0.6849, 0.2926]]])
w[1] = np.array([[[0, 0, 0]]])
model.get_layer('Loc87660').set_weights(w) 
w = model.get_layer('Den43515').get_weights() 
w[0] = np.array([[0.8206, 0.1681, 0.1889], [0.6176, 0.5867, 0.6962], [0.1851, 0.8282, 0.5368]])
w[1] = np.array([0.4489, 0.8293, 0.2438])
model.get_layer('Den43515').set_weights(w) 
in0LST96433 = tf.constant([[[6, 6, 1]]])
in0Add72244 = tf.constant([[[0.6062], [0.9542]]])
in1Add72244 = tf.constant([[[0.0549], [0.7478]]])
print (np.array2string(model.predict([in0LST96433,in0Add72244,in1Add72244],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Den43515.png')

LLST96433 = lstm_layer([[[6, 6, 1]]],[[8, 8, 3, 1, 8, 7, 3, 10], [7, 7, 5, 3, 6, 7, 6, 2], [3, 10, 4, 2, 7, 7, 7, 1]],[[7, 4, 2, 6, 5, 5, 7, 8], [7, 4, 7, 4, 9, 4, 1, 1]],[5, 6, 4, 1, 9, 10, 4, 8], LST96433), 
LRes81685 = reshape_layer(LST96433, [2, 1], Res81685), 
LLST38269 = lstm_layer(Res81685,[[2, 10, 10, 6, 3, 8, 2, 10]],[[6, 6, 1, 8, 5, 6, 3, 5], [7, 5, 6, 4, 7, 6, 9, 3]],[8, 9, 9, 4, 2, 10, 7, 10], LST38269), 
LRes9626 = reshape_layer(LST38269, [2, 1], Res9626), 
LAdd72244 = add_layer([[[[0.6062], [0.9542]]], [[[0.0549], [0.7478]]]], Add72244), 
LMul9679 = multiply_layer([Res9626,Add72244], Mul9679), 
LRes66337 = reshape_layer(Mul9679, [2, 1, 1], Res66337), 
LLoc87660 = locally_connected2D_layer(Res66337, 2, 1,[[[0.5172, 0.2942, 0.3257], [0.1596, 0.6849, 0.2926]]],[[[0, 0, 0]]], 1, 1, Loc87660), 
LDen43515 = dense_layer(Loc87660, [[0.8206, 0.1681, 0.1889], [0.6176, 0.5867, 0.6962], [0.1851, 0.8282, 0.5368]],[0.4489, 0.8293, 0.2438], Den43515), 
exec_layers([LLST96433,LRes81685,LLST38269,LRes9626,LAdd72244,LMul9679,LRes66337,LLoc87660,LDen43515],["LST96433","Res81685","LST38269","Res9626","Add72244","Mul9679","Res66337","Loc87660","Den43515"],Den43515,"Den43515")

Actual (Unparsed): [[[[1.8713864, 2.2675623, 1.6375643]]]]

Expected (Unparsed): [[[[1.8713863533645172,2.2675622813085186,1.637564259833476]]]]

Actual:   [[[[1.8714, 2.2676, 1.6376]]]]

Expected: [[[[1.8714, 2.2676, 1.6376]]]]