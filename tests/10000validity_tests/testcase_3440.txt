import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Glo4634 = tf.keras.layers.Input(shape=([2, 1]))
in0Per45670 = tf.keras.layers.Input(shape=([4, 2]))
in0Con72549 = tf.keras.layers.Input(shape=([3, 1, 1, 1]))
in0Fla55321 = tf.keras.layers.Input(shape=([4, 4, 4]))

Glo4634 = keras.layers.GlobalMaxPool1D(name = 'Glo4634', )(in0Glo4634)
Res41860 = keras.layers.Reshape((1, 1), name = 'Res41860', )(Glo4634)
Zer54731 = keras.layers.ZeroPadding1D(padding=((3, 0)), name = 'Zer54731', )(Res41860)
Per45670 = keras.layers.Permute((1,2), name = 'Per45670',)(in0Per45670)
Dot81277 = keras.layers.Dot(axes=(1, 1), name = 'Dot81277', )([Zer54731,Per45670])
Up_43959 = keras.layers.UpSampling1D(size=(1), name = 'Up_43959', )(Dot81277)
GRU816 = keras.layers.GRU(3,reset_after=False, recurrent_activation='sigmoid', name = 'GRU816', )(Up_43959)
Res44508 = keras.layers.Reshape((3, 1), name = 'Res44508', )(GRU816)
Res12213 = keras.layers.Reshape((3, 1, 1), name = 'Res12213', )(Res44508)
Res26270 = keras.layers.Reshape((3, 1, 1, 1), name = 'Res26270', )(Res12213)
Con72549 = keras.layers.Concatenate(axis=4, name = 'Con72549', )([Res26270,in0Con72549])
Fla55321 = keras.layers.Flatten(name = 'Fla55321', )(in0Fla55321)
Res95801 = keras.layers.Reshape((64, 1), name = 'Res95801', )(Fla55321)
Res7919 = keras.layers.Reshape((64, 1, 1), name = 'Res7919', )(Res95801)
Ave49744 = keras.layers.AveragePooling2D(pool_size=(61, 1), name = 'Ave49744', )(Res7919)
Res78990 = keras.layers.Reshape((1, 1, 1, 1), name = 'Res78990', )(Ave49744)
Con49119 = keras.layers.Conv3D(2, (1, 1, 1),strides=(1, 1, 1), padding='same', dilation_rate=(1, 1, 1), name = 'Con49119', )(Res78990)
Zer95183 = keras.layers.ZeroPadding3D(padding=((2, 0), (0, 0), (0, 0)), name = 'Zer95183', )(Con49119)
Mul56492 = keras.layers.Multiply(name = 'Mul56492', )([Con72549,Zer95183])
model = tf.keras.models.Model(inputs=[in0Glo4634,in0Per45670,in0Con72549,in0Fla55321], outputs=Mul56492)
w = model.get_layer('GRU816').get_weights() 
w[0] = np.array([[1, 2, 10, 9, 9, 10, 6, 2, 1], [10, 7, 9, 7, 4, 10, 4, 9, 9]])
w[1] = np.array([[2, 2, 7, 6, 6, 2, 7, 8, 3], [7, 9, 9, 3, 1, 3, 10, 10, 2], [6, 1, 7, 3, 5, 8, 7, 7, 2]])
w[2] = np.array([2, 2, 5, 2, 5, 8, 6, 4, 6])
model.get_layer('GRU816').set_weights(w) 
w = model.get_layer('Con49119').get_weights() 
w[0] = np.array([[[[[0.6268, 0.9773]]]]])
w[1] = np.array([0, 0])
model.get_layer('Con49119').set_weights(w) 
in0Glo4634 = tf.constant([[[1.422], [1.1402]]])
in0Per45670 = tf.constant([[[1.6345, 1.0273], [1.1927, 1.7173], [1.3387, 1.6042], [1.3095, 1.8598]]])
in0Con72549 = tf.constant([[[[[0.0578]]], [[[0.2948]]], [[[0.4651]]]]])
in0Fla55321 = tf.constant([[[[1.1553, 1.7227, 1.1385, 1.4399], [1.7329, 1.9372, 1.3034, 1.1617], [1.4274, 1.7468, 1.7241, 1.738], [1.1376, 1.1692, 1.2332, 1.2254]], [[1.0162, 1.0786, 1.5952, 1.5665], [1.1353, 1.1088, 1.6681, 1.3707], [1.55, 1.4922, 1.5264, 1.3667], [1.2395, 1.6773, 1.5918, 1.7582]], [[1.0826, 1.9481, 1.2108, 1.9229], [1.3714, 1.5536, 1.6559, 1.5095], [1.3601, 1.0511, 1.2335, 1.0087], [1.0007, 1.6606, 1.0337, 1.2982]], [[1.3262, 1.4376, 1.8724, 1.4986], [1.9093, 1.9805, 1.1429, 1.7128], [1.4449, 1.2041, 1.6223, 1.8698], [1.783, 1.4389, 1.7561, 1.9426]]]])
print (np.array2string(model.predict([in0Glo4634,in0Per45670,in0Con72549,in0Fla55321],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Mul56492.png')

LGlo4634 = global_max_pool1D_layer([[[1.422], [1.1402]]], Glo4634), 
LRes41860 = reshape_layer(Glo4634, [1, 1], Res41860), 
LZer54731 = zero_padding1D_layer(Res41860, 3, 0, Zer54731), 
LPer45670 = permute_layer([[[1.6345, 1.0273], [1.1927, 1.7173], [1.3387, 1.6042], [1.3095, 1.8598]]], 1,2, Per45670), 
LDot81277 = dot_layer(Zer54731,Per45670, 1, 1, Dot81277), 
LUp_43959 = up_sampling1D_layer(Dot81277, 1, Up_43959), 
LGRU816 = gru_layer(Up_43959,[[1, 2, 10, 9, 9, 10, 6, 2, 1], [10, 7, 9, 7, 4, 10, 4, 9, 9]],[[2, 2, 7, 6, 6, 2, 7, 8, 3], [7, 9, 9, 3, 1, 3, 10, 10, 2], [6, 1, 7, 3, 5, 8, 7, 7, 2]],[2, 2, 5, 2, 5, 8, 6, 4, 6], false, GRU816), 
LRes44508 = reshape_layer(GRU816, [3, 1], Res44508), 
LRes12213 = reshape_layer(Res44508, [3, 1, 1], Res12213), 
LRes26270 = reshape_layer(Res12213, [3, 1, 1, 1], Res26270), 
LCon72549 = concatenate_layer([Res26270,[[[[[0.0578]]], [[[0.2948]]], [[[0.4651]]]]]], 4, Con72549), 
LFla55321 = flatten_layer([[[[1.1553, 1.7227, 1.1385, 1.4399], [1.7329, 1.9372, 1.3034, 1.1617], [1.4274, 1.7468, 1.7241, 1.738], [1.1376, 1.1692, 1.2332, 1.2254]], [[1.0162, 1.0786, 1.5952, 1.5665], [1.1353, 1.1088, 1.6681, 1.3707], [1.55, 1.4922, 1.5264, 1.3667], [1.2395, 1.6773, 1.5918, 1.7582]], [[1.0826, 1.9481, 1.2108, 1.9229], [1.3714, 1.5536, 1.6559, 1.5095], [1.3601, 1.0511, 1.2335, 1.0087], [1.0007, 1.6606, 1.0337, 1.2982]], [[1.3262, 1.4376, 1.8724, 1.4986], [1.9093, 1.9805, 1.1429, 1.7128], [1.4449, 1.2041, 1.6223, 1.8698], [1.783, 1.4389, 1.7561, 1.9426]]]], Fla55321), 
LRes95801 = reshape_layer(Fla55321, [64, 1], Res95801), 
LRes7919 = reshape_layer(Res95801, [64, 1, 1], Res7919), 
LAve49744 = average_pooling2D_layer(Res7919, 61, 1, Ave49744), 
LRes78990 = reshape_layer(Ave49744, [1, 1, 1, 1], Res78990), 
LCon49119 = conv3D_layer(Res78990, 1, 1, 1,[[[[[0.6268, 0.9773]]]]],[0, 0], 1, 1, 1, true, 1, 1, 1, Con49119), 
LZer95183 = zero_padding3D_layer(Con49119, 2, 0, 0, 0, 0, 0, Zer95183), 
LMul56492 = multiply_layer([Con72549,Zer95183], Mul56492), 
exec_layers([LGlo4634,LRes41860,LZer54731,LPer45670,LDot81277,LUp_43959,LGRU816,LRes44508,LRes12213,LRes26270,LCon72549,LFla55321,LRes95801,LRes7919,LAve49744,LRes78990,LCon49119,LZer95183,LMul56492],["Glo4634","Res41860","Zer54731","Per45670","Dot81277","Up_43959","GRU816","Res44508","Res12213","Res26270","Con72549","Fla55321","Res95801","Res7919","Ave49744","Res78990","Con49119","Zer95183","Mul56492"],Mul56492,"Mul56492")

Actual (Unparsed): [[[[[0.0000000, 0.0000000]]], [[[0.0000000, 0.0000000]]], [[[0.0000000, 0.6590162]]]]]

Expected (Unparsed): [[[[[0.0,0.0]]],[[[0.0,0.0]]],[[[0.0,0.659016189287508]]]]]

Actual:   [[[[[0, 0]]], [[[0, 0]]], [[[0, 0.6591]]]]]

Expected: [[[[[0, 0]]], [[[0, 0]]], [[[0, 0.6591]]]]]