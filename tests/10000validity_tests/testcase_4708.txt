import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Den9615 = tf.keras.layers.Input(shape=([2, 5]))

Den9615 = keras.layers.Dense(4,name = 'Den9615', )(in0Den9615)
Res40345 = keras.layers.Reshape((2, 4, 1), name = 'Res40345', )(Den9615)
Res8939 = keras.layers.Reshape((2, 4, 1, 1), name = 'Res8939', )(Res40345)
Con68252 = keras.layers.Conv3D(4, (1, 3, 1),strides=(1, 1, 1), padding='valid', dilation_rate=(1, 1, 1), name = 'Con68252', )(Res8939)
Res1812 = keras.layers.Reshape((2, 2, 4), name = 'Res1812', )(Con68252)
Res15011 = keras.layers.Reshape((2, 8), name = 'Res15011', )(Res1812)
Con63647 = keras.layers.Conv1D(4, (1),strides=(11), padding='valid', dilation_rate=(1), name = 'Con63647', )(Res15011)
model = tf.keras.models.Model(inputs=[in0Den9615], outputs=Con63647)
w = model.get_layer('Den9615').get_weights() 
w[0] = np.array([[0.18, 0.6911, 0.3138, 0.4499], [0.2272, 0.5843, 0.1166, 0.2138], [0.9487, 0.9967, 0.8934, 0.5081], [0.7661, 0.6506, 0.5004, 0.9855], [0.1564, 0.0505, 0.8598, 0.4515]])
w[1] = np.array([0.8025, 0.5658, 0.4259, 0.9191])
model.get_layer('Den9615').set_weights(w) 
w = model.get_layer('Con68252').get_weights() 
w[0] = np.array([[[[[0.3791, 0.9828, 0.5101, 0.4068]]], [[[0.4856, 0.8692, 0.6633, 0.3173]]], [[[0.7444, 0.8549, 0.4101, 0.8819]]]]])
w[1] = np.array([0, 0, 0, 0])
model.get_layer('Con68252').set_weights(w) 
w = model.get_layer('Con63647').get_weights() 
w[0] = np.array([[[0.2656, 0.1511, 0.1447, 0.0159], [0.3842, 0.2982, 0.7487, 0.2968], [0.5682, 0.6979, 0.7434, 0.7567], [0.3812, 0.8005, 0.0693, 0.7094], [0.5843, 0.2368, 0.361, 0.305], [0.1813, 0.546, 0.3097, 0.4557], [0.2008, 0.2943, 0.1424, 0.8149], [0.924, 0.6251, 0.1844, 0.4284]]])
w[1] = np.array([0, 0, 0, 0])
model.get_layer('Con63647').set_weights(w) 
in0Den9615 = tf.constant([[[0.8623, 0.6739, 0.8553, 0.1997, 0.02], [0.039, 0.3375, 0.4111, 0.9093, 0.3543]]])
print (np.array2string(model.predict([in0Den9615],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Con63647.png')

LDen9615 = dense_layer([[[0.8623, 0.6739, 0.8553, 0.1997, 0.02], [0.039, 0.3375, 0.4111, 0.9093, 0.3543]]], [[0.18, 0.6911, 0.3138, 0.4499], [0.2272, 0.5843, 0.1166, 0.2138], [0.9487, 0.9967, 0.8934, 0.5081], [0.7661, 0.6506, 0.5004, 0.9855], [0.1564, 0.0505, 0.8598, 0.4515]],[0.8025, 0.5658, 0.4259, 0.9191], Den9615), 
LRes40345 = reshape_layer(Den9615, [2, 4, 1], Res40345), 
LRes8939 = reshape_layer(Res40345, [2, 4, 1, 1], Res8939), 
LCon68252 = conv3D_layer(Res8939, 1, 3, 1,[[[[[0.3791, 0.9828, 0.5101, 0.4068]]], [[[0.4856, 0.8692, 0.6633, 0.3173]]], [[[0.7444, 0.8549, 0.4101, 0.8819]]]]],[0, 0, 0, 0], 1, 1, 1, false, 1, 1, 1, Con68252), 
LRes1812 = reshape_layer(Con68252, [2, 2, 4], Res1812), 
LRes15011 = reshape_layer(Res1812, [2, 8], Res15011), 
LCon63647 = conv1D_layer(Res15011, 1,[[[0.2656, 0.1511, 0.1447, 0.0159], [0.3842, 0.2982, 0.7487, 0.2968], [0.5682, 0.6979, 0.7434, 0.7567], [0.3812, 0.8005, 0.0693, 0.7094], [0.5843, 0.2368, 0.361, 0.305], [0.1813, 0.546, 0.3097, 0.4557], [0.2008, 0.2943, 0.1424, 0.8149], [0.924, 0.6251, 0.1844, 0.4284]]],[0, 0, 0, 0], 11, false, 1, Con63647), 
exec_layers([LDen9615,LRes40345,LRes8939,LCon68252,LRes1812,LRes15011,LCon63647],["Den9615","Res40345","Res8939","Con68252","Res1812","Res15011","Con63647"],Con63647,"Con63647")

Actual (Unparsed): [[[12.9491146, 14.0571751, 11.5359708, 14.2604132]]]

Expected (Unparsed): [[[12.94911462091118,14.057175104691682,11.535970777076102,14.2604132267359]]]

Actual:   [[[12.9492, 14.0572, 11.536, 14.2605]]]

Expected: [[[12.9492, 14.0572, 11.536, 14.2605]]]