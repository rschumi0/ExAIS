import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Glo30376 = tf.keras.layers.Input(shape=([2, 2, 2]))
in0Con67126 = tf.keras.layers.Input(shape=([3, 3]))
in0Den92204 = tf.keras.layers.Input(shape=([3, 2]))

Glo30376 = keras.layers.GlobalMaxPool2D(name = 'Glo30376', )(in0Glo30376)
Res92857 = keras.layers.Reshape((2, 1), name = 'Res92857', )(Glo30376)
Res87391 = keras.layers.Reshape((2, 1, 1), name = 'Res87391', )(Res92857)
Glo55069 = keras.layers.GlobalMaxPool2D(name = 'Glo55069', )(Res87391)
Res49016 = keras.layers.Reshape((1, 1), name = 'Res49016', )(Glo55069)
Per74646 = keras.layers.Permute((1,2), name = 'Per74646',)(Res49016)
Zer38855 = keras.layers.ZeroPadding1D(padding=((2, 0)), name = 'Zer38855', )(Per74646)
Con67126 = keras.layers.Concatenate(axis=2, name = 'Con67126', )([Zer38855,in0Con67126])
Den92204 = keras.layers.Dense(4,name = 'Den92204', )(in0Den92204)
Sub49473 = keras.layers.Subtract(name = 'Sub49473', )([Con67126,Den92204])
model = tf.keras.models.Model(inputs=[in0Glo30376,in0Con67126,in0Den92204], outputs=Sub49473)
w = model.get_layer('Den92204').get_weights() 
w[0] = np.array([[0.6352, 0.7494, 0.5467, 0.8978], [0.5228, 0.0939, 0.5958, 0.1794]])
w[1] = np.array([0.3493, 0.7654, 0.0367, 0.6845])
model.get_layer('Den92204').set_weights(w) 
in0Glo30376 = tf.constant([[[[1.7609, 1.7849], [1.6594, 1.0827]], [[1.5441, 1.1872], [1.7613, 1.0219]]]])
in0Con67126 = tf.constant([[[0.1125, 0.4443, 0.4978], [0.4173, 0.5904, 0.0384], [0.5485, 0.4188, 0.5823]]])
in0Den92204 = tf.constant([[[0.3763, 0.4357], [0.3187, 0.5243], [0.1632, 0.3296]]])
print (np.array2string(model.predict([in0Glo30376,in0Con67126,in0Den92204],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Sub49473.png')

LGlo30376 = global_max_pool2D_layer([[[[1.7609, 1.7849], [1.6594, 1.0827]], [[1.5441, 1.1872], [1.7613, 1.0219]]]], Glo30376), 
LRes92857 = reshape_layer(Glo30376, [2, 1], Res92857), 
LRes87391 = reshape_layer(Res92857, [2, 1, 1], Res87391), 
LGlo55069 = global_max_pool2D_layer(Res87391, Glo55069), 
LRes49016 = reshape_layer(Glo55069, [1, 1], Res49016), 
LPer74646 = permute_layer(Res49016, 1,2, Per74646), 
LZer38855 = zero_padding1D_layer(Per74646, 2, 0, Zer38855), 
LCon67126 = concatenate_layer([Zer38855,[[[0.1125, 0.4443, 0.4978], [0.4173, 0.5904, 0.0384], [0.5485, 0.4188, 0.5823]]]], 2, Con67126), 
LDen92204 = dense_layer([[[0.3763, 0.4357], [0.3187, 0.5243], [0.1632, 0.3296]]], [[0.6352, 0.7494, 0.5467, 0.8978], [0.5228, 0.0939, 0.5958, 0.1794]],[0.3493, 0.7654, 0.0367, 0.6845], Den92204), 
LSub49473 = subtract_layer(Con67126,Den92204, Sub49473), 
exec_layers([LGlo30376,LRes92857,LRes87391,LGlo55069,LRes49016,LPer74646,LZer38855,LCon67126,LDen92204,LSub49473],["Glo30376","Res92857","Res87391","Glo55069","Res49016","Per74646","Zer38855","Con67126","Den92204","Sub49473"],Sub49473,"Sub49473")

Actual (Unparsed): [[[-0.8161097, -0.9758115, -0.0577133, -0.6027067], [-0.8258423, -0.6361656, 0.0670888, -1.0262883], [1.1596204, -0.3701515, 0.0965029, -0.3078512]]]

Expected (Unparsed): [[[-0.81610972,-0.9758114499999999,-0.05771326999999998,-0.60270672],[-0.8258422799999999,-0.6361655499999999,0.06708877000000002,-1.02628828],[1.1596204799999998,-0.37015151999999996,0.09650288000000001,-0.3078512]]]

Actual:   [[[-0.8161, -0.9758, -0.0577, -0.6027], [-0.8258, -0.6361, 0.0671, -1.0262], [1.1597, -0.3701, 0.0966, -0.3078]]]

Expected: [[[-0.8161, -0.9758, -0.0577, -0.6027], [-0.8258, -0.6361, 0.0671, -1.0262], [1.1597, -0.3701, 0.0966, -0.3078]]]