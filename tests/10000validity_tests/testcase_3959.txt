import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Ave29456 = tf.keras.layers.Input(shape=([2, 2, 1, 1]))
in1Ave29456 = tf.keras.layers.Input(shape=([2, 2, 1, 1]))
in0Con14753 = tf.keras.layers.Input(shape=([2, 2, 3, 1]))
in0Min83115 = tf.keras.layers.Input(shape=([1, 1, 2, 2]))
in1Min83115 = tf.keras.layers.Input(shape=([1, 1, 2, 2]))

Ave29456 = keras.layers.Average(name = 'Ave29456', )([in0Ave29456,in1Ave29456])
Zer97737 = keras.layers.ZeroPadding3D(padding=((0, 0), (0, 0), (2, 0)), name = 'Zer97737', )(Ave29456)
Con14753 = keras.layers.Concatenate(axis=4, name = 'Con14753', )([Zer97737,in0Con14753])
Min83115 = keras.layers.Minimum(name = 'Min83115', )([in0Min83115,in1Min83115])
Zer94956 = keras.layers.ZeroPadding3D(padding=((1, 0), (1, 0), (1, 0)), name = 'Zer94956', )(Min83115)
Add70927 = keras.layers.Add(name = 'Add70927', )([Con14753,Zer94956])
PRe36734 = keras.layers.PReLU(name = 'PRe36734', )(Add70927)
model = tf.keras.models.Model(inputs=[in0Ave29456,in1Ave29456,in0Con14753,in0Min83115,in1Min83115], outputs=PRe36734)
w = model.get_layer('PRe36734').get_weights() 
w[0] = np.array([[[[0.5494, 0.7304], [0.6229, 0.5606], [0.8812, 0.4538]], [[0.6359, 0.9473], [0.4861, 0.8896], [0.5625, 0.4526]]], [[[0.7391, 0.4426], [0.266, 0.0194], [0.1432, 0.8286]], [[0.4231, 0.7139], [0.17, 0.9445], [0.0656, 0.5993]]]])
model.get_layer('PRe36734').set_weights(w) 
in0Ave29456 = tf.constant([[[[[0.2613]], [[0.6688]]], [[[0.8634]], [[0.3855]]]]])
in1Ave29456 = tf.constant([[[[[0.596]], [[0.812]]], [[[0.3419]], [[0.3218]]]]])
in0Con14753 = tf.constant([[[[[0.2677], [0.1552], [0.9188]], [[0.2854], [0.2207], [0.7865]]], [[[0.327], [0.7899], [0.3481]], [[0.9613], [0.7067], [0.9146]]]]])
in0Min83115 = tf.constant([[[[[0.7835, 0.3511], [0.5127, 0.149]]]]])
in1Min83115 = tf.constant([[[[[0.2625, 0.5256], [0.6155, 0.9677]]]]])
print (np.array2string(model.predict([in0Ave29456,in1Ave29456,in0Con14753,in0Min83115,in1Min83115],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='PRe36734.png')

LAve29456 = average_layer([[[[[[0.2613]], [[0.6688]]], [[[0.8634]], [[0.3855]]]]], [[[[[0.596]], [[0.812]]], [[[0.3419]], [[0.3218]]]]]], Ave29456), 
LZer97737 = zero_padding3D_layer(Ave29456, 0, 0, 0, 0, 2, 0, Zer97737), 
LCon14753 = concatenate_layer([Zer97737,[[[[[0.2677], [0.1552], [0.9188]], [[0.2854], [0.2207], [0.7865]]], [[[0.327], [0.7899], [0.3481]], [[0.9613], [0.7067], [0.9146]]]]]], 4, Con14753), 
LMin83115 = minimum_layer([[[[[[0.7835, 0.3511], [0.5127, 0.149]]]]], [[[[[0.2625, 0.5256], [0.6155, 0.9677]]]]]], Min83115), 
LZer94956 = zero_padding3D_layer(Min83115, 1, 0, 1, 0, 1, 0, Zer94956), 
LAdd70927 = add_layer([Con14753,Zer94956], Add70927), 
LPRe36734 = prelu_layer(Add70927, [[[[0.5494, 0.7304], [0.6229, 0.5606], [0.8812, 0.4538]], [[0.6359, 0.9473], [0.4861, 0.8896], [0.5625, 0.4526]]], [[[0.7391, 0.4426], [0.266, 0.0194], [0.1432, 0.8286]], [[0.4231, 0.7139], [0.17, 0.9445], [0.0656, 0.5993]]]], PRe36734), 
exec_layers([LAve29456,LZer97737,LCon14753,LMin83115,LZer94956,LAdd70927,LPRe36734],["Ave29456","Zer97737","Con14753","Min83115","Zer94956","Add70927","PRe36734"],PRe36734,"PRe36734")

Actual (Unparsed): [[[[[0.0000000, 0.2677000], [0.0000000, 0.1552000], [0.4286500, 0.9188000]], [[0.0000000, 0.2854000], [0.0000000, 0.2207000], [0.7404000, 0.7865000]]], [[[0.0000000, 0.3270000], [0.0000000, 0.7899000], [0.6026500, 0.3481000]], [[0.0000000, 0.9613000], [0.2625000, 1.0578000], [0.8663500, 1.0636000]]]]]

Expected (Unparsed): [[[[[0,0.2677],[0,0.1552],[0.42865,0.9188]],[[0,0.2854],[0,0.2207],[0.7404,0.7865]]],[[[0,0.327],[0,0.7899],[0.6026499999999999,0.3481]],[[0,0.9613],[0.2625,1.0578],[0.8663500000000001,1.0635999999999999]]]]]

Actual:   [[[[[0, 0.2677], [0, 0.1552], [0.4287, 0.9188]], [[0, 0.2854], [0, 0.2207], [0.7404, 0.7865]]], [[[0, 0.327], [0, 0.7899], [0.6027, 0.3481]], [[0, 0.9613], [0.2625, 1.0578], [0.8664, 1.0636]]]]]

Expected: [[[[[0, 0.2677], [0, 0.1552], [0.4287, 0.9188]], [[0, 0.2854], [0, 0.2207], [0.7404, 0.7865]]], [[[0, 0.327], [0, 0.7899], [0.6027, 0.3481]], [[0, 0.9613], [0.2625, 1.0578], [0.8664, 1.0636]]]]]