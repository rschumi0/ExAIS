import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Add31419 = tf.keras.layers.Input(shape=([2, 1, 2]))
in1Add31419 = tf.keras.layers.Input(shape=([2, 1, 2]))
in0Con5742 = tf.keras.layers.Input(shape=([2, 1]))
in0Sof68085 = tf.keras.layers.Input(shape=([2, 2, 2, 1]))
in0Con49125 = tf.keras.layers.Input(shape=([4, 2]))
in0Min70651 = tf.keras.layers.Input(shape=([2, 2, 1, 2]))
in1Min70651 = tf.keras.layers.Input(shape=([2, 2, 1, 2]))

Add31419 = keras.layers.Add(name = 'Add31419', )([in0Add31419,in1Add31419])
Ave37302 = keras.layers.AveragePooling2D(pool_size=(1, 1), name = 'Ave37302', )(Add31419)
Res2020 = keras.layers.Reshape((2, 2), name = 'Res2020', )(Ave37302)
Con5742 = keras.layers.Concatenate(axis=2, name = 'Con5742', )([Res2020,in0Con5742])
Sof68085 = keras.layers.Softmax(axis=1, name = 'Sof68085', input_shape=(2, 2, 2, 1))(in0Sof68085)
Res41000 = keras.layers.Reshape((2, 2, 2), name = 'Res41000', )(Sof68085)
Ave32251 = keras.layers.AveragePooling2D(pool_size=(1, 2), name = 'Ave32251', )(Res41000)
Res30399 = keras.layers.Reshape((2, 2), name = 'Res30399', )(Ave32251)
Zer96027 = keras.layers.ZeroPadding1D(padding=((2, 0)), name = 'Zer96027', )(Res30399)
Con49125 = keras.layers.Concatenate(axis=2, name = 'Con49125', )([Zer96027,in0Con49125])
Min70651 = keras.layers.Minimum(name = 'Min70651', )([in0Min70651,in1Min70651])
Res97095 = keras.layers.Reshape((2, 2, 2), name = 'Res97095', )(Min70651)
Res57567 = keras.layers.Reshape((2, 4), name = 'Res57567', )(Res97095)
Max55675 = keras.layers.MaxPool1D(pool_size=(2), strides=(1), padding='valid', name = 'Max55675', )(Res57567)
Dot27504 = keras.layers.Dot(axes=(2, 2), name = 'Dot27504', )([Con49125,Max55675])
Res64195 = keras.layers.Reshape((4, 1, 1), name = 'Res64195', )(Dot27504)
Res62694 = keras.layers.Reshape((4, 1, 1, 1), name = 'Res62694', )(Res64195)
Con17085 = keras.layers.Conv3D(3, (4, 1, 1),strides=(1, 1, 1), padding='valid', dilation_rate=(1, 1, 1), name = 'Con17085', )(Res62694)
Res85048 = keras.layers.Reshape((1, 1, 3), name = 'Res85048', )(Con17085)
Res2006 = keras.layers.Reshape((1, 3), name = 'Res2006', )(Res85048)
Dot69221 = keras.layers.Dot(axes=(2, 2), name = 'Dot69221', )([Con5742,Res2006])
model = tf.keras.models.Model(inputs=[in0Add31419,in1Add31419,in0Con5742,in0Sof68085,in0Con49125,in0Min70651,in1Min70651], outputs=Dot69221)
w = model.get_layer('Con17085').get_weights() 
w[0] = np.array([[[[[0.6803, 0.0014, 0.5583]]]], [[[[0.3057, 0.4061, 0.6246]]]], [[[[0.3409, 0.689, 0.081]]]], [[[[0.5241, 0.3065, 0.361]]]]])
w[1] = np.array([0, 0, 0])
model.get_layer('Con17085').set_weights(w) 
in0Add31419 = tf.constant([[[[0.08, 0.9633]], [[0.9753, 0.6705]]]])
in1Add31419 = tf.constant([[[[0.3242, 0.8582]], [[0.5617, 0.3083]]]])
in0Con5742 = tf.constant([[[0.1774], [0.035]]])
in0Sof68085 = tf.constant([[[[[0.2554], [0.9102]], [[0.3093], [0.312]]], [[[0.8198], [0.2229]], [[0.9588], [0.332]]]]])
in0Con49125 = tf.constant([[[0.1165, 0.2887], [0.4759, 0.1926], [0.591, 0.613], [0.8336, 0.2533]]])
in0Min70651 = tf.constant([[[[[0.5979, 0.3003]], [[0.4932, 0.0629]]], [[[0.0807, 0.626]], [[0.755, 0.2974]]]]])
in1Min70651 = tf.constant([[[[[0.789, 0.5096]], [[0.3059, 0.0021]]], [[[0.3457, 0.5604]], [[0.6017, 0.9787]]]]])
print (np.array2string(model.predict([in0Add31419,in1Add31419,in0Con5742,in0Sof68085,in0Con49125,in0Min70651,in1Min70651],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Dot69221.png')

LAdd31419 = add_layer([[[[[0.08, 0.9633]], [[0.9753, 0.6705]]]], [[[[0.3242, 0.8582]], [[0.5617, 0.3083]]]]], Add31419), 
LAve37302 = average_pooling2D_layer(Add31419, 1, 1, Ave37302), 
LRes2020 = reshape_layer(Ave37302, [2, 2], Res2020), 
LCon5742 = concatenate_layer([Res2020,[[[0.1774], [0.035]]]], 2, Con5742), 
LSof68085 = softmax_layer([[[[[0.2554], [0.9102]], [[0.3093], [0.312]]], [[[0.8198], [0.2229]], [[0.9588], [0.332]]]]], 1, Sof68085), 
LRes41000 = reshape_layer(Sof68085, [2, 2, 2], Res41000), 
LAve32251 = average_pooling2D_layer(Res41000, 1, 2, Ave32251), 
LRes30399 = reshape_layer(Ave32251, [2, 2], Res30399), 
LZer96027 = zero_padding1D_layer(Res30399, 2, 0, Zer96027), 
LCon49125 = concatenate_layer([Zer96027,[[[0.1165, 0.2887], [0.4759, 0.1926], [0.591, 0.613], [0.8336, 0.2533]]]], 2, Con49125), 
LMin70651 = minimum_layer([[[[[[0.5979, 0.3003]], [[0.4932, 0.0629]]], [[[0.0807, 0.626]], [[0.755, 0.2974]]]]], [[[[[0.789, 0.5096]], [[0.3059, 0.0021]]], [[[0.3457, 0.5604]], [[0.6017, 0.9787]]]]]], Min70651), 
LRes97095 = reshape_layer(Min70651, [2, 2, 2], Res97095), 
LRes57567 = reshape_layer(Res97095, [2, 4], Res57567), 
LMax55675 = max_pool1D_layer(Res57567, 2, 1, false, Max55675), 
LDot27504 = dot_layer(Con49125,Max55675, 2, 2, Dot27504), 
LRes64195 = reshape_layer(Dot27504, [4, 1, 1], Res64195), 
LRes62694 = reshape_layer(Res64195, [4, 1, 1, 1], Res62694), 
LCon17085 = conv3D_layer(Res62694, 4, 1, 1,[[[[[0.6803, 0.0014, 0.5583]]]], [[[[0.3057, 0.4061, 0.6246]]]], [[[[0.3409, 0.689, 0.081]]]], [[[[0.5241, 0.3065, 0.361]]]]],[0, 0, 0], 1, 1, 1, false, 1, 1, 1, Con17085), 
LRes85048 = reshape_layer(Con17085, [1, 1, 3], Res85048), 
LRes2006 = reshape_layer(Res85048, [1, 3], Res2006), 
LDot69221 = dot_layer(Con5742,Res2006, 2, 2, Dot69221), 
exec_layers([LAdd31419,LAve37302,LRes2020,LCon5742,LSof68085,LRes41000,LAve32251,LRes30399,LZer96027,LCon49125,LMin70651,LRes97095,LRes57567,LMax55675,LDot27504,LRes64195,LRes62694,LCon17085,LRes85048,LRes2006,LDot69221],["Add31419","Ave37302","Res2020","Con5742","Sof68085","Res41000","Ave32251","Res30399","Zer96027","Con49125","Min70651","Res97095","Res57567","Max55675","Dot27504","Res64195","Res62694","Con17085","Res85048","Res2006","Dot69221"],Dot69221,"Dot69221")

Actual (Unparsed): [[[2.9050246], [3.1028014]]]

Expected (Unparsed): [[[2.9050246035438376],[3.1028014086343485]]]

Actual:   [[[2.9051], [3.1029]]]

Expected: [[[2.9051], [3.1029]]]