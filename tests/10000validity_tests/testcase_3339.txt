import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Mul20458 = tf.keras.layers.Input(shape=([2, 2, 1, 2]))
in1Mul20458 = tf.keras.layers.Input(shape=([2, 2, 1, 2]))

Mul20458 = keras.layers.Multiply(name = 'Mul20458', )([in0Mul20458,in1Mul20458])
Res72528 = keras.layers.Reshape((2, 2, 2), name = 'Res72528', )(Mul20458)
Zer64210 = keras.layers.ZeroPadding2D(padding=((1, 1), (1, 1)), name = 'Zer64210', )(Res72528)
model = tf.keras.models.Model(inputs=[in0Mul20458,in1Mul20458], outputs=Zer64210)
in0Mul20458 = tf.constant([[[[[0.6329, 0.4238]], [[0.9479, 0.8078]]], [[[0.5439, 0.0754]], [[0.0711, 0.0566]]]]])
in1Mul20458 = tf.constant([[[[[0.7307, 0.7888]], [[0.1461, 0.8426]]], [[[0.441, 0.8778]], [[0.7629, 0.2915]]]]])
print (np.array2string(model.predict([in0Mul20458,in1Mul20458],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Zer64210.png')

LMul20458 = multiply_layer([[[[[[0.6329, 0.4238]], [[0.9479, 0.8078]]], [[[0.5439, 0.0754]], [[0.0711, 0.0566]]]]], [[[[[0.7307, 0.7888]], [[0.1461, 0.8426]]], [[[0.441, 0.8778]], [[0.7629, 0.2915]]]]]], Mul20458), 
LRes72528 = reshape_layer(Mul20458, [2, 2, 2], Res72528), 
LZer64210 = zero_padding2D_layer(Res72528, 1, 1, 1, 1, Zer64210), 
exec_layers([LMul20458,LRes72528,LZer64210],["Mul20458","Res72528","Zer64210"],Zer64210,"Zer64210")

Actual (Unparsed): [[[[0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000]], [[0.0000000, 0.0000000], [0.4624600, 0.3342934], [0.1384882, 0.6806523], [0.0000000, 0.0000000]], [[0.0000000, 0.0000000], [0.2398599, 0.0661861], [0.0542422, 0.0164989], [0.0000000, 0.0000000]], [[0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000]]]]

Expected (Unparsed): [[[[0,0],[0,0],[0,0],[0,0]],[[0,0],[0.46246003,0.33429344],[0.13848819,0.68065228],[0,0]],[[0,0],[0.23985990000000001,0.06618612],[0.054242189999999996,0.016498899999999997],[0,0]],[[0,0],[0,0],[0,0],[0,0]]]]

Actual:   [[[[0, 0], [0, 0], [0, 0], [0, 0]], [[0, 0], [0.4625, 0.3343], [0.1385, 0.6807], [0, 0]], [[0, 0], [0.2399, 0.0662], [0.0543, 0.0165], [0, 0]], [[0, 0], [0, 0], [0, 0], [0, 0]]]]

Expected: [[[[0, 0], [0, 0], [0, 0], [0, 0]], [[0, 0], [0.4625, 0.3343], [0.1385, 0.6807], [0, 0]], [[0, 0], [0.2399, 0.0662], [0.0543, 0.0165], [0, 0]], [[0, 0], [0, 0], [0, 0], [0, 0]]]]