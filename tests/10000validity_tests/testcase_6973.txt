import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Mul78070 = tf.keras.layers.Input(shape=([1, 1]))
in1Mul78070 = tf.keras.layers.Input(shape=([1, 1]))
in0Con45830 = tf.keras.layers.Input(shape=([2, 5]))
in0Add99253 = tf.keras.layers.Input(shape=([2, 1, 1, 2]))
in1Add99253 = tf.keras.layers.Input(shape=([2, 1, 1, 2]))
in0Lea91209 = tf.keras.layers.Input(shape=([1, 2, 2]))

Mul78070 = keras.layers.Multiply(name = 'Mul78070', )([in0Mul78070,in1Mul78070])
Zer4533 = keras.layers.ZeroPadding1D(padding=((1, 0)), name = 'Zer4533', )(Mul78070)
Con45830 = keras.layers.Concatenate(axis=2, name = 'Con45830', )([Zer4533,in0Con45830])
Add99253 = keras.layers.Add(name = 'Add99253', )([in0Add99253,in1Add99253])
Res68443 = keras.layers.Reshape((2, 1, 2), name = 'Res68443', )(Add99253)
Zer45091 = keras.layers.ZeroPadding2D(padding=((0, 0), (2, 0)), name = 'Zer45091', )(Res68443)
Lea91209 = keras.layers.LeakyReLU(alpha=4.557293070944463, name = 'Lea91209', input_shape=(1, 2, 2))(in0Lea91209)
Zer75022 = keras.layers.ZeroPadding2D(padding=((1, 0), (1, 0)), name = 'Zer75022', )(Lea91209)
Ave7510 = keras.layers.Average(name = 'Ave7510', )([Zer45091,Zer75022])
Res89847 = keras.layers.Reshape((2, 6), name = 'Res89847', )(Ave7510)
Up_97094 = keras.layers.UpSampling1D(size=(1), name = 'Up_97094', )(Res89847)
Add63273 = keras.layers.Add(name = 'Add63273', )([Con45830,Up_97094])
model = tf.keras.models.Model(inputs=[in0Mul78070,in1Mul78070,in0Con45830,in0Add99253,in1Add99253,in0Lea91209], outputs=Add63273)
in0Mul78070 = tf.constant([[[0.8483]]])
in1Mul78070 = tf.constant([[[0.4435]]])
in0Con45830 = tf.constant([[[0.3268, 0.8559, 0.4237, 0.4364, 0.3896], [0.7915, 0.7616, 0.2081, 0.2722, 0.4623]]])
in0Add99253 = tf.constant([[[[[0.2766, 0.5538]]], [[[0.3145, 0.6757]]]]])
in1Add99253 = tf.constant([[[[[0.1376, 0.6552]]], [[[0.9334, 0.8464]]]]])
in0Lea91209 = tf.constant([[[[0.3114, 0.6792], [0.1529, 0.2463]]]])
print (np.array2string(model.predict([in0Mul78070,in1Mul78070,in0Con45830,in0Add99253,in1Add99253,in0Lea91209],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Add63273.png')

LMul78070 = multiply_layer([[[[0.8483]]], [[[0.4435]]]], Mul78070), 
LZer4533 = zero_padding1D_layer(Mul78070, 1, 0, Zer4533), 
LCon45830 = concatenate_layer([Zer4533,[[[0.3268, 0.8559, 0.4237, 0.4364, 0.3896], [0.7915, 0.7616, 0.2081, 0.2722, 0.4623]]]], 2, Con45830), 
LAdd99253 = add_layer([[[[[[0.2766, 0.5538]]], [[[0.3145, 0.6757]]]]], [[[[[0.1376, 0.6552]]], [[[0.9334, 0.8464]]]]]], Add99253), 
LRes68443 = reshape_layer(Add99253, [2, 1, 2], Res68443), 
LZer45091 = zero_padding2D_layer(Res68443, 0, 0, 2, 0, Zer45091), 
LLea91209 = leaky_relu_layer([[[[0.3114, 0.6792], [0.1529, 0.2463]]]], 4.557293070944463, Lea91209), 
LZer75022 = zero_padding2D_layer(Lea91209, 1, 0, 1, 0, Zer75022), 
LAve7510 = average_layer([Zer45091,Zer75022], Ave7510), 
LRes89847 = reshape_layer(Ave7510, [2, 6], Res89847), 
LUp_97094 = up_sampling1D_layer(Res89847, 1, Up_97094), 
LAdd63273 = add_layer([Con45830,Up_97094], Add63273), 
exec_layers([LMul78070,LZer4533,LCon45830,LAdd99253,LRes68443,LZer45091,LLea91209,LZer75022,LAve7510,LRes89847,LUp_97094,LAdd63273],["Mul78070","Zer4533","Con45830","Add99253","Res68443","Zer45091","Lea91209","Zer75022","Ave7510","Res89847","Up_97094","Add63273"],Add63273,"Add63273")

Actual (Unparsed): [[[0.0000000, 0.3268000, 0.8559000, 0.4237000, 0.6435000, 0.9941000], [0.3762211, 0.7915000, 0.9173000, 0.5477000, 0.9726000, 1.3465000]]]

Expected (Unparsed): [[[0,0.3268,0.8559,0.4237,0.6435,0.9941],[0.37622105,0.7915,0.9173,0.5477000000000001,0.9726,1.3465]]]

Actual:   [[[0, 0.3268, 0.8559, 0.4237, 0.6435, 0.9941], [0.3763, 0.7915, 0.9173, 0.5477, 0.9726, 1.3465]]]

Expected: [[[0, 0.3268, 0.8559, 0.4237, 0.6435, 0.9941], [0.3763, 0.7915, 0.9173, 0.5478, 0.9726, 1.3465]]]