import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Max68269 = tf.keras.layers.Input(shape=([2, 1]))
in1Max68269 = tf.keras.layers.Input(shape=([2, 1]))

Max68269 = keras.layers.Maximum(name = 'Max68269', )([in0Max68269,in1Max68269])
Sof37840 = keras.layers.Softmax(axis=1, name = 'Sof37840', )(Max68269)
model = tf.keras.models.Model(inputs=[in0Max68269,in1Max68269], outputs=Sof37840)
in0Max68269 = tf.constant([[[0.0631], [0.1873]]])
in1Max68269 = tf.constant([[[0.609], [0.9192]]])
print (np.array2string(model.predict([in0Max68269,in1Max68269],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Sof37840.png')

LMax68269 = maximum_layer([[[[0.0631], [0.1873]]], [[[0.609], [0.9192]]]], Max68269), 
LSof37840 = softmax_layer(Max68269, 1, Sof37840), 
exec_layers([LMax68269,LSof37840],["Max68269","Sof37840"],Sof37840,"Sof37840")

Actual (Unparsed): [[[0.4230659], [0.5769341]]]

Expected (Unparsed): [[[0.4230659218874535],[0.5769340781125465]]]

Actual:   [[[0.4231], [0.577]]]

Expected: [[[0.4231], [0.577]]]