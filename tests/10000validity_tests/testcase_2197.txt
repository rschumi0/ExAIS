import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0ELU35979 = tf.keras.layers.Input(shape=([1, 2]))
in0Con30904 = tf.keras.layers.Input(shape=([1, 2, 1]))
in0Add91379 = tf.keras.layers.Input(shape=([1, 2, 2]))
in1Add91379 = tf.keras.layers.Input(shape=([1, 2, 2]))
in0Con89516 = tf.keras.layers.Input(shape=([4, 3, 5, 2]))
in0Sub22119 = tf.keras.layers.Input(shape=([2, 2, 3, 3]))
in1Sub22119 = tf.keras.layers.Input(shape=([2, 2, 3, 3]))

ELU35979 = keras.layers.ELU(alpha=-5.484631783046543, name = 'ELU35979', input_shape=(1, 2))(in0ELU35979)
Res19958 = keras.layers.Reshape((1, 2, 1), name = 'Res19958', )(ELU35979)
Con30904 = keras.layers.Concatenate(axis=3, name = 'Con30904', )([Res19958,in0Con30904])
Add91379 = keras.layers.Add(name = 'Add91379', )([in0Add91379,in1Add91379])
Min74960 = keras.layers.Minimum(name = 'Min74960', )([Con30904,Add91379])
Res94796 = keras.layers.Reshape((1, 4), name = 'Res94796', )(Min74960)
Glo8762 = keras.layers.GlobalAveragePooling1D(name = 'Glo8762', )(Res94796)
Res3453 = keras.layers.Reshape((4, 1), name = 'Res3453', )(Glo8762)
Res72790 = keras.layers.Reshape((4, 1, 1), name = 'Res72790', )(Res3453)
Res57572 = keras.layers.Reshape((4, 1, 1, 1), name = 'Res57572', )(Res72790)
Zer31929 = keras.layers.ZeroPadding3D(padding=((0, 0), (2, 0), (4, 0)), name = 'Zer31929', )(Res57572)
Con89516 = keras.layers.Concatenate(axis=4, name = 'Con89516', )([Zer31929,in0Con89516])
Sub22119 = keras.layers.Subtract(name = 'Sub22119', )([in0Sub22119,in1Sub22119])
Zer94577 = keras.layers.ZeroPadding3D(padding=((2, 0), (1, 0), (2, 0)), name = 'Zer94577', )(Sub22119)
Min79202 = keras.layers.Minimum(name = 'Min79202', )([Con89516,Zer94577])
model = tf.keras.models.Model(inputs=[in0ELU35979,in0Con30904,in0Add91379,in1Add91379,in0Con89516,in0Sub22119,in1Sub22119], outputs=Min79202)
in0ELU35979 = tf.constant([[[0.2043, 0.3335]]])
in0Con30904 = tf.constant([[[[0.4566], [0.2186]]]])
in0Add91379 = tf.constant([[[[0.5909, 0.2387], [0.9392, 0.2068]]]])
in1Add91379 = tf.constant([[[[0.8098, 0.0862], [0.3112, 0.3149]]]])
in0Con89516 = tf.constant([[[[[0.9775, 0.612], [0.3011, 0.3014], [0.5887, 0.3744], [0.8557, 0.9481], [0.5741, 0.8305]], [[0.1142, 0.3672], [0.5804, 0.7184], [0.3374, 0.1656], [0.2896, 0.3755], [0.267, 0.2849]], [[0.9309, 0.3894], [0.9752, 0.1542], [0.2031, 0.1575], [0.263, 0.5168], [0.4614, 0.4291]]], [[[0.507, 0.0201], [0.2131, 0.6059], [0.8727, 0.3172], [0.0659, 0.4279], [0.2401, 0.7327]], [[0.2789, 0.692], [0.0209, 0.5141], [0.9749, 0.8125], [0.2839, 0.3114], [0.8918, 0.3618]], [[0.2531, 0.8069], [0.2748, 0.2106], [0.2932, 0.3491], [0.1391, 0.5232], [0.9556, 0.0386]]], [[[0.6706, 0.6593], [0.5225, 0.9585], [0.9747, 0.9822], [0.7564, 0.1474], [0.7297, 0.6805]], [[0.2411, 0.4696], [0.5592, 0.9735], [0.7804, 0.7566], [0.0965, 0.4891], [0.8118, 0.4627]], [[0.7831, 0.1776], [0.6881, 0.6084], [0.4153, 0.8568], [0.9814, 0.9679], [0.3359, 0.3722]]], [[[0.67, 0.2997], [0.9491, 0.3985], [0.1868, 0.914], [0.935, 0.1098], [0.8249, 0.0267]], [[0.1339, 0.3024], [0.9243, 0.1573], [0.5774, 0.0668], [0.5969, 0.2943], [0.5561, 0.7728]], [[0.4854, 0.6744], [0.9268, 0.9601], [0.1973, 0.7992], [0.091, 0.7048], [0.6085, 0.749]]]]])
in0Sub22119 = tf.constant([[[[[0.6777, 0.3297, 0.9451], [0.1533, 0.9162, 0.917], [0.43, 0.3673, 0.5425]], [[0.7106, 0.5622, 0.1971], [0.2608, 0.8186, 0.8861], [0.2852, 0.5367, 0.8933]]], [[[0.8144, 0.0393, 0.5556], [0.4821, 0.5535, 0.1916], [0.0413, 0.9169, 0.9072]], [[0.8014, 0.0819, 0.2896], [0.7884, 0.7126, 0.6999], [0.7778, 0.9263, 0.3947]]]]])
in1Sub22119 = tf.constant([[[[[0.8857, 0.9526, 0.8284], [0.1717, 0.2148, 0.7354], [0.5266, 0.0758, 0.968]], [[0.3488, 0.0181, 0.9483], [0.8816, 0.9508, 0.5988], [0.9565, 0.2706, 0.6394]]], [[[0.4762, 0.3939, 0.2877], [0.1647, 0.1522, 0.4878], [0.5067, 0.998, 0.0658]], [[0.9517, 0.8523, 0.373], [0.9016, 0.1884, 0.14], [0.5338, 0.7832, 0.374]]]]])
print (np.array2string(model.predict([in0ELU35979,in0Con30904,in0Add91379,in1Add91379,in0Con89516,in0Sub22119,in1Sub22119],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Min79202.png')

LELU35979 = elu_layer([[[0.2043, 0.3335]]], -5.484631783046543, ELU35979), 
LRes19958 = reshape_layer(ELU35979, [1, 2, 1], Res19958), 
LCon30904 = concatenate_layer([Res19958,[[[[0.4566], [0.2186]]]]], 3, Con30904), 
LAdd91379 = add_layer([[[[[0.5909, 0.2387], [0.9392, 0.2068]]]], [[[[0.8098, 0.0862], [0.3112, 0.3149]]]]], Add91379), 
LMin74960 = minimum_layer([Con30904,Add91379], Min74960), 
LRes94796 = reshape_layer(Min74960, [1, 4], Res94796), 
LGlo8762 = global_average_pooling1D_layer(Res94796, Glo8762), 
LRes3453 = reshape_layer(Glo8762, [4, 1], Res3453), 
LRes72790 = reshape_layer(Res3453, [4, 1, 1], Res72790), 
LRes57572 = reshape_layer(Res72790, [4, 1, 1, 1], Res57572), 
LZer31929 = zero_padding3D_layer(Res57572, 0, 0, 2, 0, 4, 0, Zer31929), 
LCon89516 = concatenate_layer([Zer31929,[[[[[0.9775, 0.612], [0.3011, 0.3014], [0.5887, 0.3744], [0.8557, 0.9481], [0.5741, 0.8305]], [[0.1142, 0.3672], [0.5804, 0.7184], [0.3374, 0.1656], [0.2896, 0.3755], [0.267, 0.2849]], [[0.9309, 0.3894], [0.9752, 0.1542], [0.2031, 0.1575], [0.263, 0.5168], [0.4614, 0.4291]]], [[[0.507, 0.0201], [0.2131, 0.6059], [0.8727, 0.3172], [0.0659, 0.4279], [0.2401, 0.7327]], [[0.2789, 0.692], [0.0209, 0.5141], [0.9749, 0.8125], [0.2839, 0.3114], [0.8918, 0.3618]], [[0.2531, 0.8069], [0.2748, 0.2106], [0.2932, 0.3491], [0.1391, 0.5232], [0.9556, 0.0386]]], [[[0.6706, 0.6593], [0.5225, 0.9585], [0.9747, 0.9822], [0.7564, 0.1474], [0.7297, 0.6805]], [[0.2411, 0.4696], [0.5592, 0.9735], [0.7804, 0.7566], [0.0965, 0.4891], [0.8118, 0.4627]], [[0.7831, 0.1776], [0.6881, 0.6084], [0.4153, 0.8568], [0.9814, 0.9679], [0.3359, 0.3722]]], [[[0.67, 0.2997], [0.9491, 0.3985], [0.1868, 0.914], [0.935, 0.1098], [0.8249, 0.0267]], [[0.1339, 0.3024], [0.9243, 0.1573], [0.5774, 0.0668], [0.5969, 0.2943], [0.5561, 0.7728]], [[0.4854, 0.6744], [0.9268, 0.9601], [0.1973, 0.7992], [0.091, 0.7048], [0.6085, 0.749]]]]]], 4, Con89516), 
LSub22119 = subtract_layer([[[[[0.6777, 0.3297, 0.9451], [0.1533, 0.9162, 0.917], [0.43, 0.3673, 0.5425]], [[0.7106, 0.5622, 0.1971], [0.2608, 0.8186, 0.8861], [0.2852, 0.5367, 0.8933]]], [[[0.8144, 0.0393, 0.5556], [0.4821, 0.5535, 0.1916], [0.0413, 0.9169, 0.9072]], [[0.8014, 0.0819, 0.2896], [0.7884, 0.7126, 0.6999], [0.7778, 0.9263, 0.3947]]]]], [[[[[0.8857, 0.9526, 0.8284], [0.1717, 0.2148, 0.7354], [0.5266, 0.0758, 0.968]], [[0.3488, 0.0181, 0.9483], [0.8816, 0.9508, 0.5988], [0.9565, 0.2706, 0.6394]]], [[[0.4762, 0.3939, 0.2877], [0.1647, 0.1522, 0.4878], [0.5067, 0.998, 0.0658]], [[0.9517, 0.8523, 0.373], [0.9016, 0.1884, 0.14], [0.5338, 0.7832, 0.374]]]]], Sub22119), 
LZer94577 = zero_padding3D_layer(Sub22119, 2, 0, 1, 0, 2, 0, Zer94577), 
LMin79202 = minimum_layer([Con89516,Zer94577], Min79202), 
exec_layers([LELU35979,LRes19958,LCon30904,LAdd91379,LMin74960,LRes94796,LGlo8762,LRes3453,LRes72790,LRes57572,LZer31929,LCon89516,LSub22119,LZer94577,LMin79202],["ELU35979","Res19958","Con30904","Add91379","Min74960","Res94796","Glo8762","Res3453","Res72790","Res57572","Zer31929","Con89516","Sub22119","Zer94577","Min79202"],Min79202,"Min79202")

Actual (Unparsed): [[[[[0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000]], [[0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000]], [[0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000]]], [[[0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000]], [[0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000]], [[0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000]]], [[[0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000]], [[0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000], [-0.2080000, -0.6229000, 0.1167000], [-0.0184000, 0.0965000, 0.1816000], [-0.0966000, 0.2915000, -0.4255000]], [[0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.4153000, -0.7512000], [-0.6208000, -0.1322000, 0.2873000], [-0.6713000, 0.2661000, 0.2539000]]], [[[0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000]], [[0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000], [0.0000000, -0.3546000, 0.0668000], [0.0000000, 0.4013000, -0.2962000], [-0.4654000, -0.0811000, 0.7728000]], [[0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000], [-0.1503000, -0.7704000, -0.0834000], [-0.1132000, 0.0910000, 0.5599000], [0.2186000, 0.1431000, 0.0207000]]]]]

Expected (Unparsed): [[[[[0,0,0],[0,0,0],[0,0,0],[0,0,0],[0,0,0]],[[0,0,0],[0,0,0],[0,0,0],[0,0,0],[0,0,0]],[[0,0,0],[0,0,0],[0,0,0],[0,0,0],[0,0,0]]],[[[0,0,0],[0,0,0],[0,0,0],[0,0,0],[0,0,0]],[[0,0,0],[0,0,0],[0,0,0],[0,0,0],[0,0,0]],[[0,0,0],[0,0,0],[0,0,0],[0,0,0],[0,0,0]]],[[[0,0,0],[0,0,0],[0,0,0],[0,0,0],[0,0,0]],[[0,0,0],[0,0,0],[-0.20800000000000007,-0.6229,0.11670000000000003],[-0.0184,0.0965,0.18159999999999998],[-0.09659999999999996,0.2915,-0.4255]],[[0,0,0],[0,0,0],[0,0.4153,-0.7512000000000001],[-0.6208,-0.13219999999999998,0.2873],[-0.6713,0.26609999999999995,0.2539]]],[[[0,0,0],[0,0,0],[0,0,0],[0,0,0],[0,0,0]],[[0,0,0],[0,0,0],[0,-0.35459999999999997,0.0668],[0,0.4013,-0.2962],[-0.46540000000000004,-0.08109999999999995,0.7728]],[[0,0,0],[0,0,0],[-0.1503,-0.7704,-0.08339999999999997],[-0.11319999999999997,0.091,0.5599],[0.2186,0.1431,0.020699999999999996]]]]]

Actual:   [[[[[0, 0, 0], [0, 0, 0], [0, 0, 0], [0, 0, 0], [0, 0, 0]], [[0, 0, 0], [0, 0, 0], [0, 0, 0], [0, 0, 0], [0, 0, 0]], [[0, 0, 0], [0, 0, 0], [0, 0, 0], [0, 0, 0], [0, 0, 0]]], [[[0, 0, 0], [0, 0, 0], [0, 0, 0], [0, 0, 0], [0, 0, 0]], [[0, 0, 0], [0, 0, 0], [0, 0, 0], [0, 0, 0], [0, 0, 0]], [[0, 0, 0], [0, 0, 0], [0, 0, 0], [0, 0, 0], [0, 0, 0]]], [[[0, 0, 0], [0, 0, 0], [0, 0, 0], [0, 0, 0], [0, 0, 0]], [[0, 0, 0], [0, 0, 0], [-0.208, -0.6229, 0.1167], [-0.0184, 0.0965, 0.1816], [-0.0966, 0.2915, -0.4255]], [[0, 0, 0], [0, 0, 0], [0, 0.4153, -0.7512], [-0.6208, -0.1322, 0.2873], [-0.6713, 0.2661, 0.2539]]], [[[0, 0, 0], [0, 0, 0], [0, 0, 0], [0, 0, 0], [0, 0, 0]], [[0, 0, 0], [0, 0, 0], [0, -0.3546, 0.0668], [0, 0.4013, -0.2962], [-0.4654, -0.0811, 0.7728]], [[0, 0, 0], [0, 0, 0], [-0.1503, -0.7704, -0.0834], [-0.1132, 0.091, 0.5599], [0.2186, 0.1431, 0.0207]]]]]

Expected: [[[[[0, 0, 0], [0, 0, 0], [0, 0, 0], [0, 0, 0], [0, 0, 0]], [[0, 0, 0], [0, 0, 0], [0, 0, 0], [0, 0, 0], [0, 0, 0]], [[0, 0, 0], [0, 0, 0], [0, 0, 0], [0, 0, 0], [0, 0, 0]]], [[[0, 0, 0], [0, 0, 0], [0, 0, 0], [0, 0, 0], [0, 0, 0]], [[0, 0, 0], [0, 0, 0], [0, 0, 0], [0, 0, 0], [0, 0, 0]], [[0, 0, 0], [0, 0, 0], [0, 0, 0], [0, 0, 0], [0, 0, 0]]], [[[0, 0, 0], [0, 0, 0], [0, 0, 0], [0, 0, 0], [0, 0, 0]], [[0, 0, 0], [0, 0, 0], [-0.208, -0.6229, 0.1168], [-0.0184, 0.0965, 0.1816], [-0.0965, 0.2915, -0.4255]], [[0, 0, 0], [0, 0, 0], [0, 0.4153, -0.7512], [-0.6208, -0.1321, 0.2873], [-0.6713, 0.2661, 0.2539]]], [[[0, 0, 0], [0, 0, 0], [0, 0, 0], [0, 0, 0], [0, 0, 0]], [[0, 0, 0], [0, 0, 0], [0, -0.3545, 0.0668], [0, 0.4013, -0.2962], [-0.4654, -0.081, 0.7728]], [[0, 0, 0], [0, 0, 0], [-0.1503, -0.7704, -0.0833], [-0.1131, 0.091, 0.5599], [0.2186, 0.1431, 0.0207]]]]]