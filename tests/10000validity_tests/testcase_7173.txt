import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Bat24622 = tf.keras.layers.Input(shape=([1]))
in0Add71514 = tf.keras.layers.Input(shape=([1, 1, 1]))
in1Add71514 = tf.keras.layers.Input(shape=([1, 1, 1]))

Bat24622 = keras.layers.BatchNormalization(axis=1, epsilon=0.35822709493701377,  name = 'Bat24622', )(in0Bat24622)
Res34552 = keras.layers.Reshape((1, 1), name = 'Res34552', )(Bat24622)
Add71514 = keras.layers.Add(name = 'Add71514', )([in0Add71514,in1Add71514])
Res8291 = keras.layers.Reshape((1, 1), name = 'Res8291', )(Add71514)
Dot62137 = keras.layers.Dot(axes=(1, 1), name = 'Dot62137', )([Res34552,Res8291])
Res17926 = keras.layers.Reshape((1, 1, 1), name = 'Res17926', )(Dot62137)
Sep34667 = keras.layers.SeparableConv2D(4, (1, 1),strides=(1, 1), padding='same', name = 'Sep34667', )(Res17926)
Res97061 = keras.layers.Reshape((1, 4), name = 'Res97061', )(Sep34667)
Ave63404 = keras.layers.AveragePooling1D(pool_size=(1), strides=(1), padding='valid', name = 'Ave63404', )(Res97061)
Res53938 = keras.layers.Reshape((1, 4, 1), name = 'Res53938', )(Ave63404)
Dep89122 = keras.layers.DepthwiseConv2D((1, 2),strides=(1, 1), padding='same', name = 'Dep89122', )(Res53938)
model = tf.keras.models.Model(inputs=[in0Bat24622,in0Add71514,in1Add71514], outputs=Dep89122)
w = model.get_layer('Bat24622').get_weights() 
w[0] = np.array([0.5626])
w[1] = np.array([0.5553])
w[2] = np.array([0.0502])
w[3] = np.array([0.0617])
model.get_layer('Bat24622').set_weights(w) 
w = model.get_layer('Sep34667').get_weights() 
w[0] = np.array([[[[0.7931]]]])
w[1] = np.array([[[[0.7329, 0.8449, 0.1656, 0.1802]]]])
w[2] = np.array([0, 0, 0, 0])
model.get_layer('Sep34667').set_weights(w) 
w = model.get_layer('Dep89122').get_weights() 
w[0] = np.array([[[[0.2044]], [[0.1595]]]])
w[1] = np.array([0])
model.get_layer('Dep89122').set_weights(w) 
in0Bat24622 = tf.constant([[1.6668]])
in0Add71514 = tf.constant([[[[0.1745]]]])
in1Add71514 = tf.constant([[[[0.2616]]]])
print (np.array2string(model.predict([in0Bat24622,in0Add71514,in1Add71514],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Dep89122.png')

LBat24622 = batch_normalization_layer([[1.6668]], 1, 0.35822709493701377, [0.5626], [0.5553], [0.0502], [0.0617], Bat24622), 
LRes34552 = reshape_layer(Bat24622, [1, 1], Res34552), 
LAdd71514 = add_layer([[[[[0.1745]]]], [[[[0.2616]]]]], Add71514), 
LRes8291 = reshape_layer(Add71514, [1, 1], Res8291), 
LDot62137 = dot_layer(Res34552,Res8291, 1, 1, Dot62137), 
LRes17926 = reshape_layer(Dot62137, [1, 1, 1], Res17926), 
LSep34667 = separable_conv2D_layer(Res17926, 1, 1,[[[[[0.7931]]]],[[[[0.7329, 0.8449, 0.1656, 0.1802]]]]],[0, 0, 0, 0], 1, 1, true, Sep34667), 
LRes97061 = reshape_layer(Sep34667, [1, 4], Res97061), 
LAve63404 = average_pooling1D_layer(Res97061, 1, 1, false, Ave63404), 
LRes53938 = reshape_layer(Ave63404, [1, 4, 1], Res53938), 
LDep89122 = depthwise_conv2D_layer(Res53938, 1, 2,[[[[0.2044]], [[0.1595]]]],[0], 1, 1, true, Dep89122), 
exec_layers([LBat24622,LRes34552,LAdd71514,LRes8291,LDot62137,LRes17926,LSep34667,LRes97061,LAve63404,LRes53938,LDep89122],["Bat24622","Res34552","Add71514","Res8291","Dot62137","Res17926","Sep34667","Res97061","Ave63404","Res53938","Dep89122"],Dep89122,"Dep89122")

Actual (Unparsed): [[[[0.1927923], [0.1348966], [0.0424048], [0.0249541]]]]

Expected (Unparsed): [[[[0.1927923150397764],[0.13489658831971116],[0.04240479172038927],[0.024954100170123016]]]]

Actual:   [[[[0.1928], [0.1349], [0.0425], [0.025]]]]

Expected: [[[[0.1928], [0.1349], [0.0425], [0.025]]]]