import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Cro71223 = tf.keras.layers.Input(shape=([1, 3, 4]))
in0Max67635 = tf.keras.layers.Input(shape=([1, 1, 2, 2]))
in1Max67635 = tf.keras.layers.Input(shape=([1, 1, 2, 2]))
in0Con29084 = tf.keras.layers.Input(shape=([1, 2, 4, 1]))

Cro71223 = keras.layers.Cropping2D(cropping=((0, 0), (0, 1)), name = 'Cro71223', )(in0Cro71223)
Res41337 = keras.layers.Reshape((1, 2, 4, 1), name = 'Res41337', )(Cro71223)
Con3222 = keras.layers.Conv3DTranspose(3, (1, 2, 3),strides=(1, 1, 1), padding='same', name = 'Con3222', )(Res41337)
Max67635 = keras.layers.Maximum(name = 'Max67635', )([in0Max67635,in1Max67635])
Zer1960 = keras.layers.ZeroPadding3D(padding=((0, 0), (1, 0), (2, 0)), name = 'Zer1960', )(Max67635)
Con29084 = keras.layers.Concatenate(axis=4, name = 'Con29084', )([Zer1960,in0Con29084])
Sub657 = keras.layers.Subtract(name = 'Sub657', )([Con3222,Con29084])
model = tf.keras.models.Model(inputs=[in0Cro71223,in0Max67635,in1Max67635,in0Con29084], outputs=Sub657)
w = model.get_layer('Con3222').get_weights() 
w[0] = np.array([[[[[0.0335], [0.0496], [0.8223]], [[0.2034], [0.1302], [0.9514]], [[0.0819], [0.8413], [0.5559]]], [[[0.8527], [0.8647], [0.4099]], [[0.2799], [0.1355], [0.3508]], [[0.4192], [0.4313], [0.4507]]]]])
w[1] = np.array([0, 0, 0])
model.get_layer('Con3222').set_weights(w) 
in0Cro71223 = tf.constant([[[[1.9347, 1.0772, 1.1619, 1.7125], [1.9961, 1.2007, 1.3821, 1.3999], [1.9793, 1.5706, 1.9618, 1.6801]]]])
in0Max67635 = tf.constant([[[[[0.5423, 0.3487], [0.8036, 0.0115]]]]])
in1Max67635 = tf.constant([[[[[0.2462, 0.3841], [0.1948, 0.3079]]]]])
in0Con29084 = tf.constant([[[[[0.1839], [0.46], [0.6664], [0.9287]], [[0.4989], [0.9908], [0.1432], [0.485]]]]])
print (np.array2string(model.predict([in0Cro71223,in0Max67635,in1Max67635,in0Con29084],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Sub657.png')

LCro71223 = cropping2D_layer([[[[1.9347, 1.0772, 1.1619, 1.7125], [1.9961, 1.2007, 1.3821, 1.3999], [1.9793, 1.5706, 1.9618, 1.6801]]]], 0, 0, 0, 1, Cro71223), 
LRes41337 = reshape_layer(Cro71223, [1, 2, 4, 1], Res41337), 
LCon3222 = conv3D_transpose_layer(Res41337, 1, 2, 3,[[[[[0.0335], [0.0496], [0.8223]], [[0.2034], [0.1302], [0.9514]], [[0.0819], [0.8413], [0.5559]]], [[[0.8527], [0.8647], [0.4099]], [[0.2799], [0.1355], [0.3508]], [[0.4192], [0.4313], [0.4507]]]]],[0, 0, 0], 1, 1, 1, true, Con3222), 
LMax67635 = maximum_layer([[[[[[0.5423, 0.3487], [0.8036, 0.0115]]]]], [[[[[0.2462, 0.3841], [0.1948, 0.3079]]]]]], Max67635), 
LZer1960 = zero_padding3D_layer(Max67635, 0, 0, 1, 0, 2, 0, Zer1960), 
LCon29084 = concatenate_layer([Zer1960,[[[[[0.1839], [0.46], [0.6664], [0.9287]], [[0.4989], [0.9908], [0.1432], [0.485]]]]]], 4, Con29084), 
LSub657 = subtract_layer(Con3222,Con29084, Sub657), 
exec_layers([LCro71223,LRes41337,LCon3222,LMax67635,LZer1960,LCon29084,LSub657],["Cro71223","Res41337","Con3222","Max67635","Zer1960","Con29084","Sub657"],Sub657,"Sub657")

Actual (Unparsed): [[[[[0.4296042, 0.3053271, 2.5425552], [0.4164781, 1.8255448, 2.5957783], [0.3819219, 1.1424678, 2.4460359], [0.4434821, 1.2004740, 1.3464727]], [[1.9062812, 1.5130537, 3.5077622], [2.5572900, 3.8892939, 4.1237927], [2.1210799, 2.9782660, 4.5853792], [0.5607309, 1.7702989, 2.7395875]]]]]

Expected (Unparsed): [[[[[0.42960418,0.30532706000000004,2.54255514],[0.41647806,1.82554479,2.59577818],[0.38192189000000004,1.14246774,2.44603589],[0.44348211,1.20047397,1.3464727099999996]],[[1.90628116,1.51305363,3.5077621900000002],[2.5572899700000002,3.8892938699999995,4.123792659999999],[2.1210799199999997,2.97826593,4.58537915],[0.56073088,1.77029893,2.73958758]]]]]

Actual:   [[[[[0.4297, 0.3054, 2.5426], [0.4165, 1.8256, 2.5958], [0.382, 1.1425, 2.4461], [0.4435, 1.2005, 1.3465]], [[1.9063, 1.5131, 3.5078], [2.5573, 3.8893, 4.1238], [2.1211, 2.9783, 4.5854], [0.5608, 1.7703, 2.7396]]]]]

Expected: [[[[[0.4297, 0.3054, 2.5426], [0.4165, 1.8256, 2.5958], [0.382, 1.1425, 2.4461], [0.4435, 1.2005, 1.3465]], [[1.9063, 1.5131, 3.5078], [2.5573, 3.8893, 4.1238], [2.1211, 2.9783, 4.5854], [0.5608, 1.7703, 2.7396]]]]]