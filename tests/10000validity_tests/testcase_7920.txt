import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Con46552 = tf.keras.layers.Input(shape=([2, 1, 1, 2]))
in0Sep76567 = tf.keras.layers.Input(shape=([1, 1]))
in0Con82663 = tf.keras.layers.Input(shape=([2, 2, 1]))
in0Cro18119 = tf.keras.layers.Input(shape=([2, 1, 2]))

Con46552 = keras.layers.Conv3D(2, (1, 1, 1),strides=(1, 1, 1), padding='valid', dilation_rate=(1, 1, 1), name = 'Con46552', )(in0Con46552)
Res44170 = keras.layers.Reshape((2, 1, 2), name = 'Res44170', )(Con46552)
Res21148 = keras.layers.Reshape((2, 2), name = 'Res21148', )(Res44170)
Sep76567 = keras.layers.SeparableConv1D(2, (1),strides=(1), padding='valid', name = 'Sep76567', )(in0Sep76567)
Lea96278 = keras.layers.LeakyReLU(alpha=4.331645741478786, name = 'Lea96278', )(Sep76567)
Zer81868 = keras.layers.ZeroPadding1D(padding=((1, 0)), name = 'Zer81868', )(Lea96278)
Min47244 = keras.layers.Minimum(name = 'Min47244', )([Res21148,Zer81868])
Res67637 = keras.layers.Reshape((2, 2, 1), name = 'Res67637', )(Min47244)
Con82663 = keras.layers.Concatenate(axis=3, name = 'Con82663', )([Res67637,in0Con82663])
Cro18119 = keras.layers.Cropping2D(cropping=((1, 0), (0, 0)), name = 'Cro18119', )(in0Cro18119)
Zer95853 = keras.layers.ZeroPadding2D(padding=((1, 0), (1, 0)), name = 'Zer95853', )(Cro18119)
Min67376 = keras.layers.Minimum(name = 'Min67376', )([Con82663,Zer95853])
model = tf.keras.models.Model(inputs=[in0Con46552,in0Sep76567,in0Con82663,in0Cro18119], outputs=Min67376)
w = model.get_layer('Con46552').get_weights() 
w[0] = np.array([[[[[0.8904, 0.9349], [0.0776, 0.747]]]]])
w[1] = np.array([0, 0])
model.get_layer('Con46552').set_weights(w) 
w = model.get_layer('Sep76567').get_weights() 
w[0] = np.array([[[0.2259]]])
w[1] = np.array([[[0.9738, 0.4328]]])
w[2] = np.array([0, 0])
model.get_layer('Sep76567').set_weights(w) 
in0Con46552 = tf.constant([[[[[0.4979, 0.6763]]], [[[0.1917, 0.4058]]]]])
in0Sep76567 = tf.constant([[[0.6441]]])
in0Con82663 = tf.constant([[[[0.5728], [0.6073]], [[0.701], [0.6995]]]])
in0Cro18119 = tf.constant([[[[1.6996, 1.1089]], [[1.2067, 1.708]]]])
print (np.array2string(model.predict([in0Con46552,in0Sep76567,in0Con82663,in0Cro18119],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Min67376.png')

LCon46552 = conv3D_layer([[[[[0.4979, 0.6763]]], [[[0.1917, 0.4058]]]]], 1, 1, 1,[[[[[0.8904, 0.9349], [0.0776, 0.747]]]]],[0, 0], 1, 1, 1, false, 1, 1, 1, Con46552), 
LRes44170 = reshape_layer(Con46552, [2, 1, 2], Res44170), 
LRes21148 = reshape_layer(Res44170, [2, 2], Res21148), 
LSep76567 = separable_conv1D_layer([[[0.6441]]], 1,[[[[0.2259]]],[[[0.9738, 0.4328]]]],[0, 0], 1, false, Sep76567), 
LLea96278 = leaky_relu_layer(Sep76567, 4.331645741478786, Lea96278), 
LZer81868 = zero_padding1D_layer(Lea96278, 1, 0, Zer81868), 
LMin47244 = minimum_layer([Res21148,Zer81868], Min47244), 
LRes67637 = reshape_layer(Min47244, [2, 2, 1], Res67637), 
LCon82663 = concatenate_layer([Res67637,[[[[0.5728], [0.6073]], [[0.701], [0.6995]]]]], 3, Con82663), 
LCro18119 = cropping2D_layer([[[[1.6996, 1.1089]], [[1.2067, 1.708]]]], 1, 0, 0, 0, Cro18119), 
LZer95853 = zero_padding2D_layer(Cro18119, 1, 0, 1, 0, Zer95853), 
LMin67376 = minimum_layer([Con82663,Zer95853], Min67376), 
exec_layers([LCon46552,LRes44170,LRes21148,LSep76567,LLea96278,LZer81868,LMin47244,LRes67637,LCon82663,LCro18119,LZer95853,LMin67376],["Con46552","Res44170","Res21148","Sep76567","Lea96278","Zer81868","Min47244","Res67637","Con82663","Cro18119","Zer95853","Min67376"],Min67376,"Min67376")

Actual (Unparsed): [[[[0.0000000, 0.0000000], [0.0000000, 0.0000000]], [[0.0000000, 0.0000000], [0.0629733, 0.6995000]]]]

Expected (Unparsed): [[[[0,0],[0,0]],[[0,0],[0.06297334783200001,0.6995]]]]

Actual:   [[[[0, 0], [0, 0]], [[0, 0], [0.063, 0.6995]]]]

Expected: [[[[0, 0], [0, 0]], [[0, 0], [0.063, 0.6995]]]]