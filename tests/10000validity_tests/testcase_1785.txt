import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Mul62111 = tf.keras.layers.Input(shape=([1, 1, 1]))
in1Mul62111 = tf.keras.layers.Input(shape=([1, 1, 1]))
in0Min4271 = tf.keras.layers.Input(shape=([1, 1]))
in1Min4271 = tf.keras.layers.Input(shape=([1, 1]))
in0Max11659 = tf.keras.layers.Input(shape=([2, 1]))
in1Max11659 = tf.keras.layers.Input(shape=([2, 1]))

Mul62111 = keras.layers.Multiply(name = 'Mul62111', )([in0Mul62111,in1Mul62111])
Den19339 = keras.layers.Dense(1,name = 'Den19339', )(Mul62111)
Res85435 = keras.layers.Reshape((1, 1, 1, 1), name = 'Res85435', )(Den19339)
Cro65797 = keras.layers.Cropping3D(cropping=((0, 0), (0, 0), (0, 0)), name = 'Cro65797', )(Res85435)
Res32548 = keras.layers.Reshape((1, 1, 1), name = 'Res32548', )(Cro65797)
Min4271 = keras.layers.Minimum(name = 'Min4271', )([in0Min4271,in1Min4271])
Zer63994 = keras.layers.ZeroPadding1D(padding=((1, 0)), name = 'Zer63994', )(Min4271)
Max11659 = keras.layers.Maximum(name = 'Max11659', )([in0Max11659,in1Max11659])
Max36878 = keras.layers.Maximum(name = 'Max36878', )([Zer63994,Max11659])
Glo67727 = keras.layers.GlobalAveragePooling1D(name = 'Glo67727', )(Max36878)
Res91601 = keras.layers.Reshape((1, 1, 1), name = 'Res91601', )(Glo67727)
Add10635 = keras.layers.Add(name = 'Add10635', )([Res32548,Res91601])
model = tf.keras.models.Model(inputs=[in0Mul62111,in1Mul62111,in0Min4271,in1Min4271,in0Max11659,in1Max11659], outputs=Add10635)
w = model.get_layer('Den19339').get_weights() 
w[0] = np.array([[0.2454]])
w[1] = np.array([0.4906])
model.get_layer('Den19339').set_weights(w) 
in0Mul62111 = tf.constant([[[[0.0079]]]])
in1Mul62111 = tf.constant([[[[0.9728]]]])
in0Min4271 = tf.constant([[[0.7804]]])
in1Min4271 = tf.constant([[[0.8591]]])
in0Max11659 = tf.constant([[[0.6692], [0.0398]]])
in1Max11659 = tf.constant([[[0.0926], [0.7767]]])
print (np.array2string(model.predict([in0Mul62111,in1Mul62111,in0Min4271,in1Min4271,in0Max11659,in1Max11659],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Add10635.png')

LMul62111 = multiply_layer([[[[[0.0079]]]], [[[[0.9728]]]]], Mul62111), 
LDen19339 = dense_layer(Mul62111, [[0.2454]],[0.4906], Den19339), 
LRes85435 = reshape_layer(Den19339, [1, 1, 1, 1], Res85435), 
LCro65797 = cropping3D_layer(Res85435, 0, 0, 0, 0, 0, 0, Cro65797), 
LRes32548 = reshape_layer(Cro65797, [1, 1, 1], Res32548), 
LMin4271 = minimum_layer([[[[0.7804]]], [[[0.8591]]]], Min4271), 
LZer63994 = zero_padding1D_layer(Min4271, 1, 0, Zer63994), 
LMax11659 = maximum_layer([[[[0.6692], [0.0398]]], [[[0.0926], [0.7767]]]], Max11659), 
LMax36878 = maximum_layer([Zer63994,Max11659], Max36878), 
LGlo67727 = global_average_pooling1D_layer(Max36878, Glo67727), 
LRes91601 = reshape_layer(Glo67727, [1, 1, 1], Res91601), 
LAdd10635 = add_layer([Res32548,Res91601], Add10635), 
exec_layers([LMul62111,LDen19339,LRes85435,LCro65797,LRes32548,LMin4271,LZer63994,LMax11659,LMax36878,LGlo67727,LRes91601,LAdd10635],["Mul62111","Den19339","Res85435","Cro65797","Res32548","Min4271","Zer63994","Max11659","Max36878","Glo67727","Res91601","Add10635"],Add10635,"Add10635")

Actual (Unparsed): [[[[1.2172859]]]]

Expected (Unparsed): [[[[1.217285928448]]]]

Actual:   [[[[1.2173]]]]

Expected: [[[[1.2173]]]]