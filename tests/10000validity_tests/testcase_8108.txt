import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Per95882 = tf.keras.layers.Input(shape=([2, 4]))
in0Con34587 = tf.keras.layers.Input(shape=([4, 6]))
in0Sub95546 = tf.keras.layers.Input(shape=([3, 2, 2]))
in1Sub95546 = tf.keras.layers.Input(shape=([3, 2, 2]))
in0Con12884 = tf.keras.layers.Input(shape=([3, 2, 2, 1]))
in0Add73826 = tf.keras.layers.Input(shape=([1, 2, 2, 2]))
in1Add73826 = tf.keras.layers.Input(shape=([1, 2, 2, 2]))
in0Max7847 = tf.keras.layers.Input(shape=([1, 2]))
in1Max7847 = tf.keras.layers.Input(shape=([1, 2]))
in0Con16512 = tf.keras.layers.Input(shape=([1, 6]))

Per95882 = keras.layers.Permute((2,1), name = 'Per95882',)(in0Per95882)
Con34587 = keras.layers.Concatenate(axis=2, name = 'Con34587', )([Per95882,in0Con34587])
Sub95546 = keras.layers.Subtract(name = 'Sub95546', )([in0Sub95546,in1Sub95546])
Res19276 = keras.layers.Reshape((3, 2, 2, 1), name = 'Res19276', )(Sub95546)
Con12884 = keras.layers.Concatenate(axis=4, name = 'Con12884', )([Res19276,in0Con12884])
Add73826 = keras.layers.Add(name = 'Add73826', )([in0Add73826,in1Add73826])
Zer16733 = keras.layers.ZeroPadding3D(padding=((2, 0), (0, 0), (0, 0)), name = 'Zer16733', )(Add73826)
Mul83644 = keras.layers.Multiply(name = 'Mul83644', )([Con12884,Zer16733])
Res7154 = keras.layers.Reshape((3, 2, 4), name = 'Res7154', )(Mul83644)
Res76095 = keras.layers.Reshape((3, 8), name = 'Res76095', )(Res7154)
Cro50776 = keras.layers.Cropping1D(cropping=((2, 0)), name = 'Cro50776', )(Res76095)
Max7847 = keras.layers.Maximum(name = 'Max7847', )([in0Max7847,in1Max7847])
Con16512 = keras.layers.Concatenate(axis=2, name = 'Con16512', )([Max7847,in0Con16512])
Mul30717 = keras.layers.Multiply(name = 'Mul30717', )([Cro50776,Con16512])
Zer49024 = keras.layers.ZeroPadding1D(padding=((3, 0)), name = 'Zer49024', )(Mul30717)
Sub31462 = keras.layers.Subtract(name = 'Sub31462', )([Con34587,Zer49024])
model = tf.keras.models.Model(inputs=[in0Per95882,in0Con34587,in0Sub95546,in1Sub95546,in0Con12884,in0Add73826,in1Add73826,in0Max7847,in1Max7847,in0Con16512], outputs=Sub31462)
in0Per95882 = tf.constant([[[1.0268, 1.5556, 1.05, 1.057], [1.4112, 1.5935, 1.3105, 1.8641]]])
in0Con34587 = tf.constant([[[0.8916, 0.7409, 0.7259, 0.218, 0.7919, 0.3918], [0.6842, 0.1376, 0.5669, 0.1267, 0.764, 0.081], [0.9727, 0.4519, 0.5634, 0.3067, 0.6986, 0.1907], [0.2599, 0.5692, 0.2702, 0.5696, 0.3081, 0.8571]]])
in0Sub95546 = tf.constant([[[[0.5904, 0.757], [0.0927, 0.0932]], [[0.8302, 0.9149], [0.6949, 0.1222]], [[0.9032, 0.2358], [0.1836, 0.237]]]])
in1Sub95546 = tf.constant([[[[0.5156, 0.9723], [0.213, 0.7829]], [[0.2752, 0.5271], [0.1633, 0.3078]], [[0.741, 0.232], [0.7975, 0.7451]]]])
in0Con12884 = tf.constant([[[[[0.5104], [0.4459]], [[0.7842], [0.6905]]], [[[0.6207], [0.21]], [[0.2538], [0.0102]]], [[[0.5803], [0.9968]], [[0.1711], [0.7394]]]]])
in0Add73826 = tf.constant([[[[[0.8571, 0.2606], [0.4164, 0.3172]], [[0.1247, 0.6241], [0.0565, 0.5061]]]]])
in1Add73826 = tf.constant([[[[[0.1921, 0.2519], [0.6192, 0.1332]], [[0.1557, 0.7475], [0.9476, 0.3189]]]]])
in0Max7847 = tf.constant([[[0.7554, 0.5267]]])
in1Max7847 = tf.constant([[[0.7713, 0.8505]]])
in0Con16512 = tf.constant([[[0.9847, 0.7126, 0.8599, 0.8599, 0.5203, 0.2286]]])
print (np.array2string(model.predict([in0Per95882,in0Con34587,in0Sub95546,in1Sub95546,in0Con12884,in0Add73826,in1Add73826,in0Max7847,in1Max7847,in0Con16512],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Sub31462.png')

LPer95882 = permute_layer([[[1.0268, 1.5556, 1.05, 1.057], [1.4112, 1.5935, 1.3105, 1.8641]]], 2,1, Per95882), 
LCon34587 = concatenate_layer([Per95882,[[[0.8916, 0.7409, 0.7259, 0.218, 0.7919, 0.3918], [0.6842, 0.1376, 0.5669, 0.1267, 0.764, 0.081], [0.9727, 0.4519, 0.5634, 0.3067, 0.6986, 0.1907], [0.2599, 0.5692, 0.2702, 0.5696, 0.3081, 0.8571]]]], 2, Con34587), 
LSub95546 = subtract_layer([[[[0.5904, 0.757], [0.0927, 0.0932]], [[0.8302, 0.9149], [0.6949, 0.1222]], [[0.9032, 0.2358], [0.1836, 0.237]]]], [[[[0.5156, 0.9723], [0.213, 0.7829]], [[0.2752, 0.5271], [0.1633, 0.3078]], [[0.741, 0.232], [0.7975, 0.7451]]]], Sub95546), 
LRes19276 = reshape_layer(Sub95546, [3, 2, 2, 1], Res19276), 
LCon12884 = concatenate_layer([Res19276,[[[[[0.5104], [0.4459]], [[0.7842], [0.6905]]], [[[0.6207], [0.21]], [[0.2538], [0.0102]]], [[[0.5803], [0.9968]], [[0.1711], [0.7394]]]]]], 4, Con12884), 
LAdd73826 = add_layer([[[[[[0.8571, 0.2606], [0.4164, 0.3172]], [[0.1247, 0.6241], [0.0565, 0.5061]]]]], [[[[[0.1921, 0.2519], [0.6192, 0.1332]], [[0.1557, 0.7475], [0.9476, 0.3189]]]]]], Add73826), 
LZer16733 = zero_padding3D_layer(Add73826, 2, 0, 0, 0, 0, 0, Zer16733), 
LMul83644 = multiply_layer([Con12884,Zer16733], Mul83644), 
LRes7154 = reshape_layer(Mul83644, [3, 2, 4], Res7154), 
LRes76095 = reshape_layer(Res7154, [3, 8], Res76095), 
LCro50776 = cropping1D_layer(Res76095, 2, 0, Cro50776), 
LMax7847 = maximum_layer([[[[0.7554, 0.5267]]], [[[0.7713, 0.8505]]]], Max7847), 
LCon16512 = concatenate_layer([Max7847,[[[0.9847, 0.7126, 0.8599, 0.8599, 0.5203, 0.2286]]]], 2, Con16512), 
LMul30717 = multiply_layer([Cro50776,Con16512], Mul30717), 
LZer49024 = zero_padding1D_layer(Mul30717, 3, 0, Zer49024), 
LSub31462 = subtract_layer(Con34587,Zer49024, Sub31462), 
exec_layers([LPer95882,LCon34587,LSub95546,LRes19276,LCon12884,LAdd73826,LZer16733,LMul83644,LRes7154,LRes76095,LCro50776,LMax7847,LCon16512,LMul30717,LZer49024,LSub31462],["Per95882","Con34587","Sub95546","Res19276","Con12884","Add73826","Zer16733","Mul83644","Res7154","Res76095","Cro50776","Max7847","Con16512","Mul30717","Zer49024","Sub31462"],Sub31462,"Sub31462")

Actual (Unparsed): [[[1.0268000, 1.4112000, 0.8916000, 0.7409000, 0.7259000, 0.2180000, 0.7919000, 0.3918000], [1.5556000, 1.5935000, 0.6842000, 0.1376000, 0.5669000, 0.1267000, 0.7640000, 0.0810000], [1.0500000, 1.3105000, 0.9727000, 0.4519000, 0.5634000, 0.3067000, 0.6986000, 0.1907000], [0.9257400, 1.6111581, 0.2560249, 0.2492720, 0.4182211, 0.3677980, 0.5735483, 0.7176529]]]

Expected (Unparsed): [[[1.0268,1.4112,0.8916,0.7409,0.7259,0.218,0.7919,0.3918],[1.5556,1.5935,0.6842,0.1376,0.5669,0.1267,0.764,0.081],[1.05,1.3105,0.9727,0.4519,0.5634,0.3067,0.6986,0.1907],[0.9257399808879999,1.6111581106250001,0.25602492978400004,0.24927201612799998,0.41822108784400003,0.367798014476,0.573548324163,0.717652857]]]

Actual:   [[[1.0268, 1.4112, 0.8916, 0.7409, 0.7259, 0.218, 0.7919, 0.3918], [1.5556, 1.5935, 0.6842, 0.1376, 0.5669, 0.1267, 0.764, 0.081], [1.05, 1.3105, 0.9727, 0.4519, 0.5634, 0.3067, 0.6986, 0.1907], [0.9258, 1.6112, 0.2561, 0.2493, 0.4183, 0.3678, 0.5736, 0.7177]]]

Expected: [[[1.0268, 1.4112, 0.8916, 0.7409, 0.7259, 0.218, 0.7919, 0.3918], [1.5556, 1.5935, 0.6842, 0.1376, 0.5669, 0.1267, 0.764, 0.081], [1.05, 1.3105, 0.9727, 0.4519, 0.5634, 0.3067, 0.6986, 0.1907], [0.9258, 1.6112, 0.2561, 0.2493, 0.4183, 0.3678, 0.5736, 0.7177]]]