import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Add19278 = tf.keras.layers.Input(shape=([2, 2, 2]))
in1Add19278 = tf.keras.layers.Input(shape=([2, 2, 2]))

Add19278 = keras.layers.Add(name = 'Add19278', )([in0Add19278,in1Add19278])
Con37696 = keras.layers.Conv2DTranspose(4, (1, 1),strides=(1, 5), padding='valid', name = 'Con37696', )(Add19278)
model = tf.keras.models.Model(inputs=[in0Add19278,in1Add19278], outputs=Con37696)
w = model.get_layer('Con37696').get_weights() 
w[0] = np.array([[[[0.2102, 0.9038], [0.5973, 0.7473], [0.8005, 0.6381], [0.4766, 0.2085]]]])
w[1] = np.array([0, 0, 0, 0])
model.get_layer('Con37696').set_weights(w) 
in0Add19278 = tf.constant([[[[0.5518, 0.2673], [0.2165, 0.7938]], [[0.9053, 0.703], [0.432, 0.93]]]])
in1Add19278 = tf.constant([[[[0.697, 0.1468], [0.9718, 0.352]], [[0.5264, 0.6667], [0.7113, 0.9523]]]])
print (np.array2string(model.predict([in0Add19278,in1Add19278],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Con37696.png')

LAdd19278 = add_layer([[[[[0.5518, 0.2673], [0.2165, 0.7938]], [[0.9053, 0.703], [0.432, 0.93]]]], [[[[0.697, 0.1468], [0.9718, 0.352]], [[0.5264, 0.6667], [0.7113, 0.9523]]]]], Add19278), 
LCon37696 = conv2D_transpose_layer(Add19278, 1, 1,[[[[0.2102, 0.9038], [0.5973, 0.7473], [0.8005, 0.6381], [0.4766, 0.2085]]]],[0, 0, 0, 0], 1, 5, false, Con37696), 
exec_layers([LAdd19278,LCon37696],["Add19278","Con37696"],Con37696,"Con37696")

Actual (Unparsed): [[[[0.6367614, 1.0553652, 1.2639016, 0.6815180], [0.0000000, 0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000, 0.0000000], [1.2853547, 1.5660279, 1.6823691, 0.8052431], [0.0000000, 0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000, 0.0000000]], [[1.5388782, 1.8787313, 2.0200815, 0.9679307], [0.0000000, 0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000, 0.0000000], [1.9415444, 2.0895359, 2.1163073, 0.9373563], [0.0000000, 0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000, 0.0000000]]]]

Expected (Unparsed): [[[[0.6367613400000001,1.05536517,1.26390161,0.6815179299999999],[0,0,0,0],[0,0,0,0],[0,0,0,0],[0,0,0,0],[1.2853547,1.56602793,1.6823691299999999,0.8052430799999999],[0,0,0,0],[0,0,0,0],[0,0,0,0],[0,0,0,0]],[[1.5388782,1.8787312199999997,2.02008142,0.9679306700000001],[0,0,0,0],[0,0,0,0],[0,0,0,0],[0,0,0,0],[1.9415444000000002,2.08953588,2.11630728,0.93735633],[0,0,0,0],[0,0,0,0],[0,0,0,0],[0,0,0,0]]]]

Actual:   [[[[0.6368, 1.0554, 1.264, 0.6816], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [1.2854, 1.5661, 1.6824, 0.8053], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]], [[1.5389, 1.8788, 2.0201, 0.968], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [1.9416, 2.0896, 2.1164, 0.9374], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]]]

Expected: [[[[0.6368, 1.0554, 1.264, 0.6816], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [1.2854, 1.5661, 1.6824, 0.8053], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]], [[1.5389, 1.8788, 2.0201, 0.968], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [1.9416, 2.0896, 2.1164, 0.9374], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]]]