import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Min66301 = tf.keras.layers.Input(shape=([2, 1, 2, 1]))
in1Min66301 = tf.keras.layers.Input(shape=([2, 1, 2, 1]))
in0Con38144 = tf.keras.layers.Input(shape=([2, 1, 1]))
in0Dot69075 = tf.keras.layers.Input(shape=([2]))
in1Dot69075 = tf.keras.layers.Input(shape=([2]))
in0Con72428 = tf.keras.layers.Input(shape=([3, 3, 4, 3]))
in0Zer24916 = tf.keras.layers.Input(shape=([1, 1, 2, 4]))

Min66301 = keras.layers.Minimum(name = 'Min66301', )([in0Min66301,in1Min66301])
Res84982 = keras.layers.Reshape((2, 1, 2), name = 'Res84982', )(Min66301)
Res19499 = keras.layers.Reshape((2, 2), name = 'Res19499', )(Res84982)
Up_49017 = keras.layers.UpSampling1D(size=(2), name = 'Up_49017', )(Res19499)
Glo22846 = keras.layers.GlobalAveragePooling1D(name = 'Glo22846', )(Up_49017)
Res57038 = keras.layers.Reshape((2, 1), name = 'Res57038', )(Glo22846)
Res69637 = keras.layers.Reshape((2, 1, 1), name = 'Res69637', )(Res57038)
Con38144 = keras.layers.Concatenate(axis=3, name = 'Con38144', )([Res69637,in0Con38144])
Dot69075 = keras.layers.Dot(axes=(1, 1), name = 'Dot69075', )([in0Dot69075,in1Dot69075])
Res76776 = keras.layers.Reshape((1, 1), name = 'Res76776', )(Dot69075)
Res29819 = keras.layers.Reshape((1, 1, 1), name = 'Res29819', )(Res76776)
Res90560 = keras.layers.Reshape((1, 1, 1, 1), name = 'Res90560', )(Res29819)
Zer81533 = keras.layers.ZeroPadding3D(padding=((2, 0), (2, 0), (3, 0)), name = 'Zer81533', )(Res90560)
Con72428 = keras.layers.Concatenate(axis=4, name = 'Con72428', )([Zer81533,in0Con72428])
Zer24916 = keras.layers.ZeroPadding3D(padding=((1, 1), (1, 1), (1, 1)), name = 'Zer24916', )(in0Zer24916)
Max9639 = keras.layers.Maximum(name = 'Max9639', )([Con72428,Zer24916])
Res90125 = keras.layers.Reshape((3, 3, 16), name = 'Res90125', )(Max9639)
Con22296 = keras.layers.Conv2D(2, (3, 2),strides=(3, 10), padding='same', dilation_rate=(1, 1), name = 'Con22296', )(Res90125)
Zer87711 = keras.layers.ZeroPadding2D(padding=((1, 0), (0, 0)), name = 'Zer87711', )(Con22296)
Sub12494 = keras.layers.Subtract(name = 'Sub12494', )([Con38144,Zer87711])
model = tf.keras.models.Model(inputs=[in0Min66301,in1Min66301,in0Con38144,in0Dot69075,in1Dot69075,in0Con72428,in0Zer24916], outputs=Sub12494)
w = model.get_layer('Con22296').get_weights() 
w[0] = np.array([[[[0.4129, 0.0344], [0.428, 0.2406], [0.4955, 0.927], [0.8596, 0.9739], [0.9294, 0.4732], [0.7675, 0.8676], [0.0471, 0.3209], [0.6536, 0.5055], [0.3302, 0.865], [0.2973, 0.2899], [0.4441, 0.9992], [0.4168, 0.4246], [0.9344, 0.662], [0.787, 0.9169], [0.8423, 0.6044], [0.736, 0.8477]], [[0.8002, 0.9925], [0.8219, 0.0509], [0.875, 0.3002], [0.2769, 0.3843], [0.5433, 0.4425], [0.4974, 0.9757], [0.7001, 0.2546], [0.4607, 0.1845], [0.5321, 0.2306], [0.4489, 0.5303], [0.4185, 0.9019], [0.8761, 0.5115], [0.7608, 0.3582], [0.3301, 0.06], [0.79, 0.1896], [0.1643, 0.359]]], [[[0.9513, 0.5673], [0.1036, 0.8923], [0.4217, 0.267], [0.3679, 0.8824], [0.6852, 0.1877], [0.7555, 0.7293], [0.8554, 0.3241], [0.9789, 0.6647], [0.6156, 0.2055], [0.3002, 0.603], [0.2294, 0.5358], [0.176, 0.0848], [0.0604, 0.1354], [0.1849, 0.2878], [0.4411, 0.3198], [0.9893, 0.3093]], [[0.5273, 0.5286], [0.4601, 0.3131], [0.9849, 0.3649], [0.3794, 0.6763], [0.9717, 0.1977], [0.3288, 0.9735], [0.8925, 0.1362], [0.4714, 0.4913], [0.8384, 0.4923], [0.936, 0.978], [0.4504, 0.8156], [0.4295, 0.5047], [0.1868, 0.2051], [0.5138, 0.6353], [0.6218, 0.8824], [0.713, 0.59]]], [[[0.4519, 0.9425], [0.2442, 0.7176], [0.3463, 0.7936], [0.6997, 0.3928], [0.6408, 0.0403], [0.4541, 0.3992], [0.1459, 0.4693], [0.9167, 0.9694], [0.0162, 0.358], [0.0034, 0.9131], [0.711, 0.5397], [0.3661, 0.6855], [0.5664, 0.5318], [0.9825, 0.8215], [0.3929, 0.5633], [0.6841, 0.894]], [[0.815, 0.5203], [0.0803, 0.0427], [0.7793, 0.6703], [0.1214, 0.1609], [0.7678, 0.5234], [0.2368, 0.0317], [0.7774, 0.3402], [0.5835, 0.0597], [0.0512, 0.6078], [0.4432, 0.7558], [0.8811, 0.27], [0.2197, 0.804], [0.5398, 0.6196], [0.8038, 0.3629], [0.5473, 0.5399], [0.2978, 0.2363]]]])
w[1] = np.array([0, 0])
model.get_layer('Con22296').set_weights(w) 
in0Min66301 = tf.constant([[[[[0.4086], [0.3763]]], [[[0.7635], [0.0687]]]]])
in1Min66301 = tf.constant([[[[[0.7965], [0.5068]]], [[[0.8641], [0.9416]]]]])
in0Con38144 = tf.constant([[[[0.3778]], [[0.9391]]]])
in0Dot69075 = tf.constant([[0.6614, 0.7789]])
in1Dot69075 = tf.constant([[0.7374, 0.4887]])
in0Con72428 = tf.constant([[[[[0.5999, 0.2001, 0.3827], [0.4972, 0.9984, 0.9062], [0.539, 0.8478, 0.2655], [0.7333, 0.2888, 0.5657]], [[0.7719, 0.27, 0.5542], [0.5879, 0.9728, 0.6033], [0.3259, 0.3434, 0.8476], [0.2894, 0.0695, 0.4053]], [[0.0154, 0.5889, 0.1778], [0.4375, 0.6646, 0.3069], [0.1878, 0.7788, 0.7252], [0.5337, 0.1573, 0.9828]]], [[[0.0327, 0.8144, 0.8128], [0.3761, 0.5858, 0.7961], [0.8202, 0.2343, 0.3845], [0.1954, 0.8048, 0.4872]], [[0.7489, 0.0114, 0.5547], [0.9582, 0.465, 0.2664], [0.176, 0.0222, 0.5847], [0.202, 0.8372, 0.2182]], [[0.2109, 0.7769, 0.1422], [0.798, 0.1429, 0.5204], [0.096, 0.4053, 0.8263], [0.2789, 0.0968, 0.0858]]], [[[0.6549, 0.1599, 0.3745], [0.6083, 0.3062, 0.0257], [0.8237, 0.6413, 0.4556], [0.2187, 0.2352, 0.673]], [[0.9131, 0.8098, 0.5146], [0.692, 0.9525, 0.5527], [0.5961, 0.5474, 0.36], [0.9016, 0.4097, 0.6027]], [[0.5239, 0.9013, 0.4398], [0.7606, 0.7038, 0.4964], [0.1245, 0.1925, 0.4719], [0.8217, 0.5891, 0.134]]]]])
in0Zer24916 = tf.constant([[[[[1.5239, 1.0806, 1.4128, 1.8757], [1.8831, 1.8913, 1.6033, 1.6396]]]]])
print (np.array2string(model.predict([in0Min66301,in1Min66301,in0Con38144,in0Dot69075,in1Dot69075,in0Con72428,in0Zer24916],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Sub12494.png')

LMin66301 = minimum_layer([[[[[[0.4086], [0.3763]]], [[[0.7635], [0.0687]]]]], [[[[[0.7965], [0.5068]]], [[[0.8641], [0.9416]]]]]], Min66301), 
LRes84982 = reshape_layer(Min66301, [2, 1, 2], Res84982), 
LRes19499 = reshape_layer(Res84982, [2, 2], Res19499), 
LUp_49017 = up_sampling1D_layer(Res19499, 2, Up_49017), 
LGlo22846 = global_average_pooling1D_layer(Up_49017, Glo22846), 
LRes57038 = reshape_layer(Glo22846, [2, 1], Res57038), 
LRes69637 = reshape_layer(Res57038, [2, 1, 1], Res69637), 
LCon38144 = concatenate_layer([Res69637,[[[[0.3778]], [[0.9391]]]]], 3, Con38144), 
LDot69075 = dot_layer([[0.6614, 0.7789]], [[0.7374, 0.4887]], 1, 1, Dot69075), 
LRes76776 = reshape_layer(Dot69075, [1, 1], Res76776), 
LRes29819 = reshape_layer(Res76776, [1, 1, 1], Res29819), 
LRes90560 = reshape_layer(Res29819, [1, 1, 1, 1], Res90560), 
LZer81533 = zero_padding3D_layer(Res90560, 2, 0, 2, 0, 3, 0, Zer81533), 
LCon72428 = concatenate_layer([Zer81533,[[[[[0.5999, 0.2001, 0.3827], [0.4972, 0.9984, 0.9062], [0.539, 0.8478, 0.2655], [0.7333, 0.2888, 0.5657]], [[0.7719, 0.27, 0.5542], [0.5879, 0.9728, 0.6033], [0.3259, 0.3434, 0.8476], [0.2894, 0.0695, 0.4053]], [[0.0154, 0.5889, 0.1778], [0.4375, 0.6646, 0.3069], [0.1878, 0.7788, 0.7252], [0.5337, 0.1573, 0.9828]]], [[[0.0327, 0.8144, 0.8128], [0.3761, 0.5858, 0.7961], [0.8202, 0.2343, 0.3845], [0.1954, 0.8048, 0.4872]], [[0.7489, 0.0114, 0.5547], [0.9582, 0.465, 0.2664], [0.176, 0.0222, 0.5847], [0.202, 0.8372, 0.2182]], [[0.2109, 0.7769, 0.1422], [0.798, 0.1429, 0.5204], [0.096, 0.4053, 0.8263], [0.2789, 0.0968, 0.0858]]], [[[0.6549, 0.1599, 0.3745], [0.6083, 0.3062, 0.0257], [0.8237, 0.6413, 0.4556], [0.2187, 0.2352, 0.673]], [[0.9131, 0.8098, 0.5146], [0.692, 0.9525, 0.5527], [0.5961, 0.5474, 0.36], [0.9016, 0.4097, 0.6027]], [[0.5239, 0.9013, 0.4398], [0.7606, 0.7038, 0.4964], [0.1245, 0.1925, 0.4719], [0.8217, 0.5891, 0.134]]]]]], 4, Con72428), 
LZer24916 = zero_padding3D_layer([[[[[1.5239, 1.0806, 1.4128, 1.8757], [1.8831, 1.8913, 1.6033, 1.6396]]]]], 1, 1, 1, 1, 1, 1, Zer24916), 
LMax9639 = maximum_layer([Con72428,Zer24916], Max9639), 
LRes90125 = reshape_layer(Max9639, [3, 3, 16], Res90125), 
LCon22296 = conv2D_layer(Res90125, 3, 2,[[[[0.4129, 0.0344], [0.428, 0.2406], [0.4955, 0.927], [0.8596, 0.9739], [0.9294, 0.4732], [0.7675, 0.8676], [0.0471, 0.3209], [0.6536, 0.5055], [0.3302, 0.865], [0.2973, 0.2899], [0.4441, 0.9992], [0.4168, 0.4246], [0.9344, 0.662], [0.787, 0.9169], [0.8423, 0.6044], [0.736, 0.8477]], [[0.8002, 0.9925], [0.8219, 0.0509], [0.875, 0.3002], [0.2769, 0.3843], [0.5433, 0.4425], [0.4974, 0.9757], [0.7001, 0.2546], [0.4607, 0.1845], [0.5321, 0.2306], [0.4489, 0.5303], [0.4185, 0.9019], [0.8761, 0.5115], [0.7608, 0.3582], [0.3301, 0.06], [0.79, 0.1896], [0.1643, 0.359]]], [[[0.9513, 0.5673], [0.1036, 0.8923], [0.4217, 0.267], [0.3679, 0.8824], [0.6852, 0.1877], [0.7555, 0.7293], [0.8554, 0.3241], [0.9789, 0.6647], [0.6156, 0.2055], [0.3002, 0.603], [0.2294, 0.5358], [0.176, 0.0848], [0.0604, 0.1354], [0.1849, 0.2878], [0.4411, 0.3198], [0.9893, 0.3093]], [[0.5273, 0.5286], [0.4601, 0.3131], [0.9849, 0.3649], [0.3794, 0.6763], [0.9717, 0.1977], [0.3288, 0.9735], [0.8925, 0.1362], [0.4714, 0.4913], [0.8384, 0.4923], [0.936, 0.978], [0.4504, 0.8156], [0.4295, 0.5047], [0.1868, 0.2051], [0.5138, 0.6353], [0.6218, 0.8824], [0.713, 0.59]]], [[[0.4519, 0.9425], [0.2442, 0.7176], [0.3463, 0.7936], [0.6997, 0.3928], [0.6408, 0.0403], [0.4541, 0.3992], [0.1459, 0.4693], [0.9167, 0.9694], [0.0162, 0.358], [0.0034, 0.9131], [0.711, 0.5397], [0.3661, 0.6855], [0.5664, 0.5318], [0.9825, 0.8215], [0.3929, 0.5633], [0.6841, 0.894]], [[0.815, 0.5203], [0.0803, 0.0427], [0.7793, 0.6703], [0.1214, 0.1609], [0.7678, 0.5234], [0.2368, 0.0317], [0.7774, 0.3402], [0.5835, 0.0597], [0.0512, 0.6078], [0.4432, 0.7558], [0.8811, 0.27], [0.2197, 0.804], [0.5398, 0.6196], [0.8038, 0.3629], [0.5473, 0.5399], [0.2978, 0.2363]]]],[0, 0], 3, 10, true, 1, 1, Con22296), 
LZer87711 = zero_padding2D_layer(Con22296, 1, 0, 0, 0, Zer87711), 
LSub12494 = subtract_layer(Con38144,Zer87711, Sub12494), 
exec_layers([LMin66301,LRes84982,LRes19499,LUp_49017,LGlo22846,LRes57038,LRes69637,LCon38144,LDot69075,LRes76776,LRes29819,LRes90560,LZer81533,LCon72428,LZer24916,LMax9639,LRes90125,LCon22296,LZer87711,LSub12494],["Min66301","Res84982","Res19499","Up_49017","Glo22846","Res57038","Res69637","Con38144","Dot69075","Res76776","Res29819","Res90560","Zer81533","Con72428","Zer24916","Max9639","Res90125","Con22296","Zer87711","Sub12494"],Sub12494,"Sub12494")

Actual (Unparsed): [[[[0.5860500, 0.3778000]], [[-26.6092836, -23.9386730]]]]

Expected (Unparsed): [[[[0.58605,0.3778]],[[-26.60928361000001,-23.938673060000003]]]]

Actual:   [[[[0.5861, 0.3778]], [[-26.6092, -23.9386]]]]

Expected: [[[[0.5861, 0.3778]], [[-26.6092, -23.9386]]]]