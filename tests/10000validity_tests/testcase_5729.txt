import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Ave53093 = tf.keras.layers.Input(shape=([2, 1]))
in0Cro24366 = tf.keras.layers.Input(shape=([1, 2, 4]))
in0Den72250 = tf.keras.layers.Input(shape=([2, 4, 3]))

Ave53093 = keras.layers.AveragePooling1D(pool_size=(1), strides=(1), padding='same', name = 'Ave53093', )(in0Ave53093)
Res13378 = keras.layers.Reshape((2, 1, 1), name = 'Res13378', )(Ave53093)
Res17447 = keras.layers.Reshape((2, 1, 1, 1), name = 'Res17447', )(Res13378)
Glo95335 = keras.layers.GlobalMaxPool3D(name = 'Glo95335', )(Res17447)
Res50378 = keras.layers.Reshape((1, 1), name = 'Res50378', )(Glo95335)
Res77876 = keras.layers.Reshape((1, 1, 1), name = 'Res77876', )(Res50378)
Res9937 = keras.layers.Reshape((1, 1, 1, 1), name = 'Res9937', )(Res77876)
Zer87400 = keras.layers.ZeroPadding3D(padding=((1, 0), (1, 0), (1, 0)), name = 'Zer87400', )(Res9937)
Cro24366 = keras.layers.Cropping2D(cropping=((0, 0), (0, 0)), name = 'Cro24366', )(in0Cro24366)
Res21050 = keras.layers.Reshape((1, 8), name = 'Res21050', )(Cro24366)
Sim27899 = keras.layers.SimpleRNN(3,name = 'Sim27899', )(Res21050)
Res68248 = keras.layers.Reshape((3, 1), name = 'Res68248', )(Sim27899)
Ave1354 = keras.layers.AveragePooling1D(pool_size=(2), name = 'Ave1354', )(Res68248)
Res26313 = keras.layers.Reshape((1, 1, 1), name = 'Res26313', )(Ave1354)
Res88316 = keras.layers.Reshape((1, 1, 1, 1), name = 'Res88316', )(Res26313)
Zer54881 = keras.layers.ZeroPadding3D(padding=((1, 0), (1, 0), (1, 0)), name = 'Zer54881', )(Res88316)
Den72250 = keras.layers.Dense(3,name = 'Den72250', )(in0Den72250)
Res63135 = keras.layers.Reshape((2, 12), name = 'Res63135', )(Den72250)
GRU81399 = keras.layers.GRU(2,reset_after=True, recurrent_activation='sigmoid', name = 'GRU81399', )(Res63135)
Res62935 = keras.layers.Reshape((2, 1), name = 'Res62935', )(GRU81399)
Res8037 = keras.layers.Reshape((2, 1, 1), name = 'Res8037', )(Res62935)
Ave98608 = keras.layers.AveragePooling2D(pool_size=(2, 1), strides=(1, 2), padding='same', name = 'Ave98608', )(Res8037)
Res13054 = keras.layers.Reshape((2, 1, 1, 1), name = 'Res13054', )(Ave98608)
Up_65514 = keras.layers.UpSampling3D(size=(1, 2, 2), name = 'Up_65514', )(Res13054)
Max86455 = keras.layers.Maximum(name = 'Max86455', )([Zer54881,Up_65514])
Mul19234 = keras.layers.Multiply(name = 'Mul19234', )([Zer87400,Max86455])
model = tf.keras.models.Model(inputs=[in0Ave53093,in0Cro24366,in0Den72250], outputs=Mul19234)
w = model.get_layer('Sim27899').get_weights() 
w[0] = np.array([[6, 7, 5], [7, 3, 5], [4, 7, 3], [5, 8, 4], [1, 4, 7], [7, 2, 5], [6, 1, 10], [10, 2, 3]])
w[1] = np.array([[5, 3, 9], [7, 1, 3], [5, 10, 4]])
w[2] = np.array([4, 5, 10])
model.get_layer('Sim27899').set_weights(w) 
w = model.get_layer('Den72250').get_weights() 
w[0] = np.array([[0.8589, 0.6332, 0.0316], [0.7153, 0.0464, 0.7351], [0.1694, 0.219, 0.1426]])
w[1] = np.array([0.2152, 0.7718, 0.3661])
model.get_layer('Den72250').set_weights(w) 
w = model.get_layer('GRU81399').get_weights() 
w[0] = np.array([[7, 7, 5, 2, 6, 5], [8, 5, 1, 2, 10, 3], [3, 10, 4, 6, 10, 7], [1, 3, 5, 3, 6, 3], [7, 1, 10, 7, 10, 6], [10, 9, 7, 9, 5, 3], [2, 5, 2, 2, 7, 8], [5, 6, 4, 2, 3, 4], [6, 7, 10, 3, 1, 6], [9, 9, 5, 9, 4, 8], [4, 4, 7, 8, 9, 7], [7, 4, 1, 5, 1, 9]])
w[1] = np.array([[10, 7, 8, 1, 8, 5], [1, 5, 2, 1, 2, 4]])
w[2] = np.array([[10, 4, 2, 1, 9, 5], [6, 9, 10, 4, 1, 5]])
model.get_layer('GRU81399').set_weights(w) 
in0Ave53093 = tf.constant([[[1.9839], [1.4515]]])
in0Cro24366 = tf.constant([[[[1.1104, 1.1257, 1.5659, 1.3139], [1.2812, 1.7537, 1.4387, 1.3993]]]])
in0Den72250 = tf.constant([[[[0.3803, 0.9678, 0.9479], [0.9941, 0.0772, 0.3461], [0.5458, 0.9072, 0.8608], [0.4948, 0.2448, 0.5858]], [[0.5236, 0.7829, 0.7282], [0.3795, 0.29, 0.7401], [0.5203, 0.3514, 0.4325], [0.3711, 0.9813, 0.784]]]])
print (np.array2string(model.predict([in0Ave53093,in0Cro24366,in0Den72250],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Mul19234.png')

LAve53093 = average_pooling1D_layer([[[1.9839], [1.4515]]], 1, 1, true, Ave53093), 
LRes13378 = reshape_layer(Ave53093, [2, 1, 1], Res13378), 
LRes17447 = reshape_layer(Res13378, [2, 1, 1, 1], Res17447), 
LGlo95335 = global_max_pool3D_layer(Res17447, Glo95335), 
LRes50378 = reshape_layer(Glo95335, [1, 1], Res50378), 
LRes77876 = reshape_layer(Res50378, [1, 1, 1], Res77876), 
LRes9937 = reshape_layer(Res77876, [1, 1, 1, 1], Res9937), 
LZer87400 = zero_padding3D_layer(Res9937, 1, 0, 1, 0, 1, 0, Zer87400), 
LCro24366 = cropping2D_layer([[[[1.1104, 1.1257, 1.5659, 1.3139], [1.2812, 1.7537, 1.4387, 1.3993]]]], 0, 0, 0, 0, Cro24366), 
LRes21050 = reshape_layer(Cro24366, [1, 8], Res21050), 
LSim27899 = simple_rnn_layer(Res21050,[[6, 7, 5], [7, 3, 5], [4, 7, 3], [5, 8, 4], [1, 4, 7], [7, 2, 5], [6, 1, 10], [10, 2, 3]],[[5, 3, 9], [7, 1, 3], [5, 10, 4]],[4, 5, 10], Sim27899), 
LRes68248 = reshape_layer(Sim27899, [3, 1], Res68248), 
LAve1354 = average_pooling1D_layer(Res68248, 2, Ave1354), 
LRes26313 = reshape_layer(Ave1354, [1, 1, 1], Res26313), 
LRes88316 = reshape_layer(Res26313, [1, 1, 1, 1], Res88316), 
LZer54881 = zero_padding3D_layer(Res88316, 1, 0, 1, 0, 1, 0, Zer54881), 
LDen72250 = dense_layer([[[[0.3803, 0.9678, 0.9479], [0.9941, 0.0772, 0.3461], [0.5458, 0.9072, 0.8608], [0.4948, 0.2448, 0.5858]], [[0.5236, 0.7829, 0.7282], [0.3795, 0.29, 0.7401], [0.5203, 0.3514, 0.4325], [0.3711, 0.9813, 0.784]]]], [[0.8589, 0.6332, 0.0316], [0.7153, 0.0464, 0.7351], [0.1694, 0.219, 0.1426]],[0.2152, 0.7718, 0.3661], Den72250), 
LRes63135 = reshape_layer(Den72250, [2, 12], Res63135), 
LGRU81399 = gru_layer(Res63135,[[7, 7, 5, 2, 6, 5], [8, 5, 1, 2, 10, 3], [3, 10, 4, 6, 10, 7], [1, 3, 5, 3, 6, 3], [7, 1, 10, 7, 10, 6], [10, 9, 7, 9, 5, 3], [2, 5, 2, 2, 7, 8], [5, 6, 4, 2, 3, 4], [6, 7, 10, 3, 1, 6], [9, 9, 5, 9, 4, 8], [4, 4, 7, 8, 9, 7], [7, 4, 1, 5, 1, 9]],[[10, 7, 8, 1, 8, 5], [1, 5, 2, 1, 2, 4]],[[10, 4, 2, 1, 9, 5], [6, 9, 10, 4, 1, 5]], true, GRU81399), 
LRes62935 = reshape_layer(GRU81399, [2, 1], Res62935), 
LRes8037 = reshape_layer(Res62935, [2, 1, 1], Res8037), 
LAve98608 = average_pooling2D_layer(Res8037, 2, 1, 1, 2, true, Ave98608), 
LRes13054 = reshape_layer(Ave98608, [2, 1, 1, 1], Res13054), 
LUp_65514 = up_sampling3D_layer(Res13054, 1, 2, 2, Up_65514), 
LMax86455 = maximum_layer([Zer54881,Up_65514], Max86455), 
LMul19234 = multiply_layer([Zer87400,Max86455], Mul19234), 
exec_layers([LAve53093,LRes13378,LRes17447,LGlo95335,LRes50378,LRes77876,LRes9937,LZer87400,LCro24366,LRes21050,LSim27899,LRes68248,LAve1354,LRes26313,LRes88316,LZer54881,LDen72250,LRes63135,LGRU81399,LRes62935,LRes8037,LAve98608,LRes13054,LUp_65514,LMax86455,LMul19234],["Ave53093","Res13378","Res17447","Glo95335","Res50378","Res77876","Res9937","Zer87400","Cro24366","Res21050","Sim27899","Res68248","Ave1354","Res26313","Res88316","Zer54881","Den72250","Res63135","GRU81399","Res62935","Res8037","Ave98608","Res13054","Up_65514","Max86455","Mul19234"],Mul19234,"Mul19234")

Actual (Unparsed): [[[[[0.0000000], [0.0000000]], [[0.0000000], [0.0000000]]], [[[0.0000000], [0.0000000]], [[0.0000000], [1.9839000]]]]]

Expected (Unparsed): [[[[[0],[0]],[[0],[0]]],[[[0],[0]],[[0],[1.9839]]]]]

Actual:   [[[[[0], [0]], [[0], [0]]], [[[0], [0]], [[0], [1.9839]]]]]

Expected: [[[[[0], [0]], [[0], [0]]], [[[0], [0]], [[0], [1.9839]]]]]