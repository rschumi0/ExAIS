import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Dep67116 = tf.keras.layers.Input(shape=([2, 1, 2]))
in0Con27706 = tf.keras.layers.Input(shape=([3, 2, 2, 1]))
in0Mul83587 = tf.keras.layers.Input(shape=([2, 1]))
in1Mul83587 = tf.keras.layers.Input(shape=([2, 1]))
in0Con53377 = tf.keras.layers.Input(shape=([3, 2, 2, 1]))
in0Sub45189 = tf.keras.layers.Input(shape=([3, 2, 2, 2]))
in1Sub45189 = tf.keras.layers.Input(shape=([3, 2, 2, 2]))

Dep67116 = keras.layers.DepthwiseConv2D((2, 1),strides=(2, 2), padding='valid', name = 'Dep67116', )(in0Dep67116)
Res60606 = keras.layers.Reshape((1, 1, 2, 1), name = 'Res60606', )(Dep67116)
Zer34922 = keras.layers.ZeroPadding3D(padding=((2, 0), (1, 0), (0, 0)), name = 'Zer34922', )(Res60606)
Con27706 = keras.layers.Concatenate(axis=4, name = 'Con27706', )([Zer34922,in0Con27706])
Mul83587 = keras.layers.Multiply(name = 'Mul83587', )([in0Mul83587,in1Mul83587])
Res18805 = keras.layers.Reshape((2, 1, 1), name = 'Res18805', )(Mul83587)
Res80724 = keras.layers.Reshape((2, 1, 1, 1), name = 'Res80724', )(Res18805)
Zer58222 = keras.layers.ZeroPadding3D(padding=((1, 0), (1, 0), (1, 0)), name = 'Zer58222', )(Res80724)
Con53377 = keras.layers.Concatenate(axis=4, name = 'Con53377', )([Zer58222,in0Con53377])
Sub45189 = keras.layers.Subtract(name = 'Sub45189', )([in0Sub45189,in1Sub45189])
Min78622 = keras.layers.Minimum(name = 'Min78622', )([Con53377,Sub45189])
Add55172 = keras.layers.Add(name = 'Add55172', )([Con27706,Min78622])
model = tf.keras.models.Model(inputs=[in0Dep67116,in0Con27706,in0Mul83587,in1Mul83587,in0Con53377,in0Sub45189,in1Sub45189], outputs=Add55172)
w = model.get_layer('Dep67116').get_weights() 
w[0] = np.array([[[[0.5345], [0.8222]]], [[[0.0317], [0.1665]]]])
w[1] = np.array([0, 0])
model.get_layer('Dep67116').set_weights(w) 
in0Dep67116 = tf.constant([[[[0.2291, 0.569]], [[0.5679, 0.9405]]]])
in0Con27706 = tf.constant([[[[[0.7044], [0.0925]], [[0.0689], [0.9775]]], [[[0.4188], [0.4998]], [[0.435], [0.2277]]], [[[0.4266], [0.1325]], [[0.433], [0.9078]]]]])
in0Mul83587 = tf.constant([[[0.6455], [0.9802]]])
in1Mul83587 = tf.constant([[[0.9782], [0.7355]]])
in0Con53377 = tf.constant([[[[[0.7661], [0.4646]], [[0.6788], [0.62]]], [[[0.6465], [0.1346]], [[0.8173], [0.1363]]], [[[0.9131], [0.0644]], [[0.7334], [0.846]]]]])
in0Sub45189 = tf.constant([[[[[0.7991, 0.89], [0.1903, 0.8926]], [[0.1986, 0.4024], [0.0554, 0.4722]]], [[[0.4324, 0.5412], [0.3119, 0.0182]], [[0.4167, 0.6564], [0.7247, 0.9849]]], [[[0.8029, 0.1949], [0.0575, 0.2986]], [[0.4556, 0.2944], [0.3934, 0.9749]]]]])
in1Sub45189 = tf.constant([[[[[0.6286, 0.9038], [0.1703, 0.728]], [[0.7042, 0.1707], [0.1843, 0.8088]]], [[[0.141, 0.6474], [0.7255, 0.8844]], [[0.5771, 0.4617], [0.9614, 0.6343]]], [[[0.8741, 0.9757], [0.6565, 0.8801]], [[0.2555, 0.6131], [0.3275, 0.4864]]]]])
print (np.array2string(model.predict([in0Dep67116,in0Con27706,in0Mul83587,in1Mul83587,in0Con53377,in0Sub45189,in1Sub45189],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Add55172.png')

LDep67116 = depthwise_conv2D_layer([[[[0.2291, 0.569]], [[0.5679, 0.9405]]]], 2, 1,[[[[0.5345], [0.8222]]], [[[0.0317], [0.1665]]]],[0, 0], 2, 2, false, Dep67116), 
LRes60606 = reshape_layer(Dep67116, [1, 1, 2, 1], Res60606), 
LZer34922 = zero_padding3D_layer(Res60606, 2, 0, 1, 0, 0, 0, Zer34922), 
LCon27706 = concatenate_layer([Zer34922,[[[[[0.7044], [0.0925]], [[0.0689], [0.9775]]], [[[0.4188], [0.4998]], [[0.435], [0.2277]]], [[[0.4266], [0.1325]], [[0.433], [0.9078]]]]]], 4, Con27706), 
LMul83587 = multiply_layer([[[[0.6455], [0.9802]]], [[[0.9782], [0.7355]]]], Mul83587), 
LRes18805 = reshape_layer(Mul83587, [2, 1, 1], Res18805), 
LRes80724 = reshape_layer(Res18805, [2, 1, 1, 1], Res80724), 
LZer58222 = zero_padding3D_layer(Res80724, 1, 0, 1, 0, 1, 0, Zer58222), 
LCon53377 = concatenate_layer([Zer58222,[[[[[0.7661], [0.4646]], [[0.6788], [0.62]]], [[[0.6465], [0.1346]], [[0.8173], [0.1363]]], [[[0.9131], [0.0644]], [[0.7334], [0.846]]]]]], 4, Con53377), 
LSub45189 = subtract_layer([[[[[0.7991, 0.89], [0.1903, 0.8926]], [[0.1986, 0.4024], [0.0554, 0.4722]]], [[[0.4324, 0.5412], [0.3119, 0.0182]], [[0.4167, 0.6564], [0.7247, 0.9849]]], [[[0.8029, 0.1949], [0.0575, 0.2986]], [[0.4556, 0.2944], [0.3934, 0.9749]]]]], [[[[[0.6286, 0.9038], [0.1703, 0.728]], [[0.7042, 0.1707], [0.1843, 0.8088]]], [[[0.141, 0.6474], [0.7255, 0.8844]], [[0.5771, 0.4617], [0.9614, 0.6343]]], [[[0.8741, 0.9757], [0.6565, 0.8801]], [[0.2555, 0.6131], [0.3275, 0.4864]]]]], Sub45189), 
LMin78622 = minimum_layer([Con53377,Sub45189], Min78622), 
LAdd55172 = add_layer([Con27706,Min78622], Add55172), 
exec_layers([LDep67116,LRes60606,LZer34922,LCon27706,LMul83587,LRes18805,LRes80724,LZer58222,LCon53377,LSub45189,LMin78622,LAdd55172],["Dep67116","Res60606","Zer34922","Con27706","Mul83587","Res18805","Res80724","Zer58222","Con53377","Sub45189","Min78622","Add55172"],Add55172,"Add55172")

Actual (Unparsed): [[[[[0.0000000, 0.6906000], [0.0000000, 0.2571000]], [[-0.5056000, 0.3006000], [-0.1289000, 0.6409000]]], [[[0.0000000, 0.3126000], [-0.4136000, -0.3664000]], [[-0.1604000, 0.6297000], [-0.2367000, 0.3640000]]], [[[-0.0712000, -0.3542000], [-0.5990000, -0.4490000]], [[0.1404564, 0.1143000], [0.6903251, 1.3963000]]]]]

Expected (Unparsed): [[[[[0,0.6906],[0,0.2571]],[[-0.5056,0.3006],[-0.1289,0.6409]]],[[[0,0.31260000000000004],[-0.4136,-0.36639999999999995]],[[-0.16039999999999993,0.6296999999999999],[-0.23670000000000002,0.364]]],[[[-0.07120000000000004,-0.35420000000000007],[-0.599,-0.449]],[[0.14045638,0.11430000000000001],[0.69032505,1.3963]]]]]

Actual:   [[[[[0, 0.6906], [0, 0.2571]], [[-0.5056, 0.3006], [-0.1289, 0.6409]]], [[[0, 0.3126], [-0.4136, -0.3664]], [[-0.1604, 0.6297], [-0.2367, 0.364]]], [[[-0.0712, -0.3542], [-0.599, -0.449]], [[0.1405, 0.1143], [0.6904, 1.3963]]]]]

Expected: [[[[[0, 0.6906], [0, 0.2571]], [[-0.5056, 0.3006], [-0.1289, 0.6409]]], [[[0, 0.3127], [-0.4136, -0.3663]], [[-0.1603, 0.6297], [-0.2367, 0.364]]], [[[-0.0712, -0.3542], [-0.599, -0.449]], [[0.1405, 0.1144], [0.6904, 1.3963]]]]]