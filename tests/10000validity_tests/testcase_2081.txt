import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Loc73609 = tf.keras.layers.Input(shape=([2, 1]))
in0Con84649 = tf.keras.layers.Input(shape=([2, 2, 1]))
in0Mul86510 = tf.keras.layers.Input(shape=([2, 2, 2]))
in1Mul86510 = tf.keras.layers.Input(shape=([2, 2, 2]))

Loc73609 = keras.layers.LocallyConnected1D(2, (2),strides=(1), name = 'Loc73609', )(in0Loc73609)
Res87351 = keras.layers.Reshape((1, 2, 1), name = 'Res87351', )(Loc73609)
Zer82880 = keras.layers.ZeroPadding2D(padding=((1, 0), (0, 0)), name = 'Zer82880', )(Res87351)
Con84649 = keras.layers.Concatenate(axis=3, name = 'Con84649', )([Zer82880,in0Con84649])
Mul86510 = keras.layers.Multiply(name = 'Mul86510', )([in0Mul86510,in1Mul86510])
Min32337 = keras.layers.Minimum(name = 'Min32337', )([Con84649,Mul86510])
Sof46863 = keras.layers.Softmax(axis=1, name = 'Sof46863', )(Min32337)
model = tf.keras.models.Model(inputs=[in0Loc73609,in0Con84649,in0Mul86510,in1Mul86510], outputs=Sof46863)
w = model.get_layer('Loc73609').get_weights() 
w[0] = np.array([[[0.5062, 0.9385], [0.3451, 0.0021]]])
w[1] = np.array([[0, 0]])
model.get_layer('Loc73609').set_weights(w) 
in0Loc73609 = tf.constant([[[0.3415], [0.9655]]])
in0Con84649 = tf.constant([[[[0.8289], [0.5412]], [[0.366], [0.9091]]]])
in0Mul86510 = tf.constant([[[[0.4699, 0.793], [0.3027, 0.076]], [[0.4853, 0.7921], [0.2378, 0.3136]]]])
in1Mul86510 = tf.constant([[[[0.3839, 0.1381], [0.9223, 0.7891]], [[0.2014, 0.3652], [0.2291, 0.5048]]]])
print (np.array2string(model.predict([in0Loc73609,in0Con84649,in0Mul86510,in1Mul86510],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Sof46863.png')

LLoc73609 = locally_connected1D_layer([[[0.3415], [0.9655]]], 2,[[[0.5062, 0.9385], [0.3451, 0.0021]]],[[0, 0]], 1, Loc73609), 
LRes87351 = reshape_layer(Loc73609, [1, 2, 1], Res87351), 
LZer82880 = zero_padding2D_layer(Res87351, 1, 0, 0, 0, Zer82880), 
LCon84649 = concatenate_layer([Zer82880,[[[[0.8289], [0.5412]], [[0.366], [0.9091]]]]], 3, Con84649), 
LMul86510 = multiply_layer([[[[[0.4699, 0.793], [0.3027, 0.076]], [[0.4853, 0.7921], [0.2378, 0.3136]]]], [[[[0.3839, 0.1381], [0.9223, 0.7891]], [[0.2014, 0.3652], [0.2291, 0.5048]]]]], Mul86510), 
LMin32337 = minimum_layer([Con84649,Mul86510], Min32337), 
LSof46863 = softmax_layer(Min32337, 1, Sof46863), 
exec_layers([LLoc73609,LRes87351,LZer82880,LCon84649,LMul86510,LMin32337,LSof46863],["Loc73609","Res87351","Zer82880","Con84649","Mul86510","Min32337","Sof46863"],Sof46863,"Sof46863")

Actual (Unparsed): [[[[0.4755846, 0.4551802], [0.4863834, 0.4754364]], [[0.5244154, 0.5448198], [0.5136166, 0.5245636]]]]

Expected (Unparsed): [[[[0.4755845786043525,0.4551802231338422],[0.48638337275662435,0.4754363700050824]],[[0.5244154213956476,0.5448197768661578],[0.5136166272433758,0.5245636299949176]]]]

Actual:   [[[[0.4756, 0.4552], [0.4864, 0.4755]], [[0.5245, 0.5449], [0.5137, 0.5246]]]]

Expected: [[[[0.4756, 0.4552], [0.4864, 0.4755]], [[0.5245, 0.5449], [0.5137, 0.5246]]]]