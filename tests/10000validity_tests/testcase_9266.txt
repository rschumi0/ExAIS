import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Ave3397 = tf.keras.layers.Input(shape=([2, 1, 2, 1]))
in1Ave3397 = tf.keras.layers.Input(shape=([2, 1, 2, 1]))
in0Glo5364 = tf.keras.layers.Input(shape=([2, 1, 2, 2]))
in0Con564 = tf.keras.layers.Input(shape=([2]))

Ave3397 = keras.layers.Average(name = 'Ave3397', )([in0Ave3397,in1Ave3397])
Res6181 = keras.layers.Reshape((2, 1, 2), name = 'Res6181', )(Ave3397)
Res73652 = keras.layers.Reshape((2, 2), name = 'Res73652', )(Res6181)
Fla85257 = keras.layers.Flatten(name = 'Fla85257', )(Res73652)
Glo5364 = keras.layers.GlobalMaxPool3D(name = 'Glo5364', )(in0Glo5364)
Con564 = keras.layers.Concatenate(axis=1, name = 'Con564', )([Glo5364,in0Con564])
Min96954 = keras.layers.Minimum(name = 'Min96954', )([Fla85257,Con564])
Bat30348 = keras.layers.BatchNormalization(axis=1, epsilon=0.10257267491250335,  name = 'Bat30348', )(Min96954)
model = tf.keras.models.Model(inputs=[in0Ave3397,in1Ave3397,in0Glo5364,in0Con564], outputs=Bat30348)
w = model.get_layer('Bat30348').get_weights() 
w[0] = np.array([0.8663, 0.0827, 0.2759, 0.3629])
w[1] = np.array([0.9797, 0.0172, 0.4689, 0.6045])
w[2] = np.array([0.9374, 0.1285, 0.3766, 0.0923])
w[3] = np.array([0.7035, 0.1966, 0.0893, 0.2061])
model.get_layer('Bat30348').set_weights(w) 
in0Ave3397 = tf.constant([[[[[0.5982], [0.4999]]], [[[0.2316], [0.4511]]]]])
in1Ave3397 = tf.constant([[[[[0.8107], [0.8572]]], [[[0.2985], [0.4761]]]]])
in0Glo5364 = tf.constant([[[[[1.5146, 1.2231], [1.2633, 1.7806]]], [[[1.4402, 1.9908], [1.577, 1.4559]]]]])
in0Con564 = tf.constant([[0.9443, 0.3564]])
print (np.array2string(model.predict([in0Ave3397,in1Ave3397,in0Glo5364,in0Con564],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Bat30348.png')

LAve3397 = average_layer([[[[[[0.5982], [0.4999]]], [[[0.2316], [0.4511]]]]], [[[[[0.8107], [0.8572]]], [[[0.2985], [0.4761]]]]]], Ave3397), 
LRes6181 = reshape_layer(Ave3397, [2, 1, 2], Res6181), 
LRes73652 = reshape_layer(Res6181, [2, 2], Res73652), 
LFla85257 = flatten_layer(Res73652, Fla85257), 
LGlo5364 = global_max_pool3D_layer([[[[[1.5146, 1.2231], [1.2633, 1.7806]]], [[[1.4402, 1.9908], [1.577, 1.4559]]]]], Glo5364), 
LCon564 = concatenate_layer([Glo5364,[[0.9443, 0.3564]]], 1, Con564), 
LMin96954 = minimum_layer([Fla85257,Con564], Min96954), 
LBat30348 = batch_normalization_layer(Min96954, 1, 0.10257267491250335, [0.8663, 0.0827, 0.2759, 0.3629], [0.9797, 0.0172, 0.4689, 0.6045], [0.9374, 0.1285, 0.3766, 0.0923], [0.7035, 0.1966, 0.0893, 0.2061], Bat30348), 
exec_layers([LAve3397,LRes6181,LRes73652,LFla85257,LGlo5364,LCon564,LMin96954,LBat30348],["Ave3397","Res6181","Res73652","Fla85257","Glo5364","Con564","Min96954","Bat30348"],Bat30348,"Bat30348")

Actual (Unparsed): [[0.7549271, 0.1003662, 0.3986389, 0.7770068]]

Expected (Unparsed): [[0.7549271099792129,0.10036617280930779,0.39863893797701816,0.7770068228697059]]

Actual:   [[0.755, 0.1004, 0.3987, 0.7771]]

Expected: [[0.755, 0.1004, 0.3987, 0.7771]]