import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Sim12191 = tf.keras.layers.Input(shape=([2, 3]))

Sim12191 = keras.layers.SimpleRNN(1,name = 'Sim12191', )(in0Sim12191)
Res5282 = keras.layers.Reshape((1, 1), name = 'Res5282', )(Sim12191)
Res87497 = keras.layers.Reshape((1, 1, 1), name = 'Res87497', )(Res5282)
Loc75785 = keras.layers.LocallyConnected2D(4, (1, 1),strides=(1, 1), name = 'Loc75785', )(Res87497)
model = tf.keras.models.Model(inputs=[in0Sim12191], outputs=Loc75785)
w = model.get_layer('Sim12191').get_weights() 
w[0] = np.array([[7], [3], [7]])
w[1] = np.array([[7]])
w[2] = np.array([1])
model.get_layer('Sim12191').set_weights(w) 
w = model.get_layer('Loc75785').get_weights() 
w[0] = np.array([[[0.9108, 0.8214, 0.5415, 0.207]]])
w[1] = np.array([[[0, 0, 0, 0]]])
model.get_layer('Loc75785').set_weights(w) 
in0Sim12191 = tf.constant([[[5, 2, 3], [8, 8, 5]]])
print (np.array2string(model.predict([in0Sim12191],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Loc75785.png')

LSim12191 = simple_rnn_layer([[[5, 2, 3], [8, 8, 5]]],[[7], [3], [7]],[[7]],[1], Sim12191), 
LRes5282 = reshape_layer(Sim12191, [1, 1], Res5282), 
LRes87497 = reshape_layer(Res5282, [1, 1, 1], Res87497), 
LLoc75785 = locally_connected2D_layer(Res87497, 1, 1,[[[0.9108, 0.8214, 0.5415, 0.207]]],[[[0, 0, 0, 0]]], 1, 1, Loc75785), 
exec_layers([LSim12191,LRes5282,LRes87497,LLoc75785],["Sim12191","Res5282","Res87497","Loc75785"],Loc75785,"Loc75785")

Actual (Unparsed): [[[[0.9108000, 0.8214000, 0.5415000, 0.2070000]]]]

Expected (Unparsed): [[[[0.9108,0.8214,0.5415,0.207]]]]

Actual:   [[[[0.9108, 0.8214, 0.5415, 0.207]]]]

Expected: [[[[0.9108, 0.8214, 0.5415, 0.207]]]]