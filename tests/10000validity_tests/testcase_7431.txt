import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Mul3245 = tf.keras.layers.Input(shape=([1, 1, 1]))
in1Mul3245 = tf.keras.layers.Input(shape=([1, 1, 1]))

Mul3245 = keras.layers.Multiply(name = 'Mul3245', )([in0Mul3245,in1Mul3245])
Den67872 = keras.layers.Dense(3,name = 'Den67872', )(Mul3245)
model = tf.keras.models.Model(inputs=[in0Mul3245,in1Mul3245], outputs=Den67872)
w = model.get_layer('Den67872').get_weights() 
w[0] = np.array([[0.4908, 0.4674, 0.7806]])
w[1] = np.array([0.392, 0.6059, 0.912])
model.get_layer('Den67872').set_weights(w) 
in0Mul3245 = tf.constant([[[[0.6859]]]])
in1Mul3245 = tf.constant([[[[0.233]]]])
print (np.array2string(model.predict([in0Mul3245,in1Mul3245],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Den67872.png')

LMul3245 = multiply_layer([[[[[0.6859]]]], [[[[0.233]]]]], Mul3245), 
LDen67872 = dense_layer(Mul3245, [[0.4908, 0.4674, 0.7806]],[0.392, 0.6059, 0.912], Den67872), 
exec_layers([LMul3245,LDen67872],["Mul3245","Den67872"],Den67872,"Den67872")

Actual (Unparsed): [[[[0.4704371, 0.6805974, 1.0367513]]]]

Expected (Unparsed): [[[[0.47043705476000003,0.68059739078,1.03675135482]]]]

Actual:   [[[[0.4705, 0.6806, 1.0368]]]]

Expected: [[[[0.4705, 0.6806, 1.0368]]]]