import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Mul30674 = tf.keras.layers.Input(shape=([1, 1, 1]))
in1Mul30674 = tf.keras.layers.Input(shape=([1, 1, 1]))
in0Con35296 = tf.keras.layers.Input(shape=([4, 15]))
in0Glo36438 = tf.keras.layers.Input(shape=([1, 2, 2]))
in0Con64190 = tf.keras.layers.Input(shape=([1, 2, 1, 1]))
in0Lea10622 = tf.keras.layers.Input(shape=([1, 2, 1, 2]))
in0Sep72658 = tf.keras.layers.Input(shape=([1, 2]))
in0Con66897 = tf.keras.layers.Input(shape=([1, 4, 3]))
in0Con64399 = tf.keras.layers.Input(shape=([1, 2, 1]))

Mul30674 = keras.layers.Multiply(name = 'Mul30674', )([in0Mul30674,in1Mul30674])
Res17442 = keras.layers.Reshape((1, 1), name = 'Res17442', )(Mul30674)
Zer79044 = keras.layers.ZeroPadding1D(padding=((3, 0)), name = 'Zer79044', )(Res17442)
Con35296 = keras.layers.Concatenate(axis=2, name = 'Con35296', )([Zer79044,in0Con35296])
Glo36438 = keras.layers.GlobalMaxPool2D(name = 'Glo36438', )(in0Glo36438)
Res36721 = keras.layers.Reshape((2, 1), name = 'Res36721', )(Glo36438)
Res9835 = keras.layers.Reshape((2, 1, 1), name = 'Res9835', )(Res36721)
Res83094 = keras.layers.Reshape((2, 1, 1, 1), name = 'Res83094', )(Res9835)
Glo33257 = keras.layers.GlobalMaxPool3D(name = 'Glo33257', )(Res83094)
Res55896 = keras.layers.Reshape((1, 1), name = 'Res55896', )(Glo33257)
Res20579 = keras.layers.Reshape((1, 1, 1), name = 'Res20579', )(Res55896)
Res28685 = keras.layers.Reshape((1, 1, 1, 1), name = 'Res28685', )(Res20579)
Zer75891 = keras.layers.ZeroPadding3D(padding=((0, 0), (1, 0), (0, 0)), name = 'Zer75891', )(Res28685)
Con64190 = keras.layers.Concatenate(axis=4, name = 'Con64190', )([Zer75891,in0Con64190])
Lea10622 = keras.layers.LeakyReLU(alpha=0.8315431326222872, name = 'Lea10622', input_shape=(1, 2, 1, 2))(in0Lea10622)
Ave47396 = keras.layers.Average(name = 'Ave47396', )([Con64190,Lea10622])
Res61548 = keras.layers.Reshape((1, 2, 2), name = 'Res61548', )(Ave47396)
Res53053 = keras.layers.Reshape((1, 4), name = 'Res53053', )(Res61548)
Sep72658 = keras.layers.SeparableConv1D(4, (1),strides=(1), padding='same', name = 'Sep72658', )(in0Sep72658)
Res69184 = keras.layers.Reshape((1, 4, 1), name = 'Res69184', )(Sep72658)
Con66897 = keras.layers.Concatenate(axis=3, name = 'Con66897', )([Res69184,in0Con66897])
Con64399 = keras.layers.Conv2D(4, (1, 2),strides=(3, 1), padding='valid', dilation_rate=(1, 1), name = 'Con64399', )(in0Con64399)
Zer73151 = keras.layers.ZeroPadding2D(padding=((0, 0), (3, 0)), name = 'Zer73151', )(Con64399)
Mul36859 = keras.layers.Multiply(name = 'Mul36859', )([Con66897,Zer73151])
Res76514 = keras.layers.Reshape((1, 16), name = 'Res76514', )(Mul36859)
Dot17258 = keras.layers.Dot(axes=(1, 1), name = 'Dot17258', )([Res53053,Res76514])
Mul34293 = keras.layers.Multiply(name = 'Mul34293', )([Con35296,Dot17258])
model = tf.keras.models.Model(inputs=[in0Mul30674,in1Mul30674,in0Con35296,in0Glo36438,in0Con64190,in0Lea10622,in0Sep72658,in0Con66897,in0Con64399], outputs=Mul34293)
w = model.get_layer('Sep72658').get_weights() 
w[0] = np.array([[[0.432], [0.4762]]])
w[1] = np.array([[[0.694, 0.1231, 0.5388, 0.515], [0.4996, 0.0702, 0.4977, 0.0029]]])
w[2] = np.array([0, 0, 0, 0])
model.get_layer('Sep72658').set_weights(w) 
w = model.get_layer('Con64399').get_weights() 
w[0] = np.array([[[[0.819, 0.5949, 0.0268, 0.7586]], [[0.2135, 0.1411, 0.3526, 0.6548]]]])
w[1] = np.array([0, 0, 0, 0])
model.get_layer('Con64399').set_weights(w) 
in0Mul30674 = tf.constant([[[[0.9914]]]])
in1Mul30674 = tf.constant([[[[0.2287]]]])
in0Con35296 = tf.constant([[[0.7157, 0.9985, 0.7814, 0.006, 0.3824, 0.7068, 0.3814, 0.3932, 0.5307, 0.0875, 0.0137, 0.5159, 0.2278, 0.3631, 0.3993], [0.9695, 0.9839, 0.9937, 0.288, 0.1287, 0.1578, 0.8653, 0.7136, 0.7827, 0.9339, 0.4442, 0.8461, 0.8344, 0.3076, 0.3378], [0.9456, 0.573, 0.0572, 0.3153, 0.9123, 0.2215, 0.3852, 0.8644, 0.5867, 0.5596, 0.7638, 0.7862, 0.2606, 0.4264, 0.5346], [0.1615, 0.8241, 0.8195, 0.982, 0.2648, 0.6008, 0.1248, 0.922, 0.6435, 0.195, 0.7326, 0.3327, 0.6355, 0.6157, 0.929]]])
in0Glo36438 = tf.constant([[[[1.2002, 1.5278], [1.1263, 1.1055]]]])
in0Con64190 = tf.constant([[[[[0.2956]], [[0.8407]]]]])
in0Lea10622 = tf.constant([[[[[0.0118, 0.782]], [[0.1778, 0.616]]]]])
in0Sep72658 = tf.constant([[[0.0176, 0.7507]]])
in0Con66897 = tf.constant([[[[0.7036, 0.4355, 0.9207], [0.3307, 0.1248, 0.0888], [0.8131, 0.6636, 0.4852], [0.415, 0.5411, 0.8039]]]])
in0Con64399 = tf.constant([[[[0.1368], [0.596]]]])
print (np.array2string(model.predict([in0Mul30674,in1Mul30674,in0Con35296,in0Glo36438,in0Con64190,in0Lea10622,in0Sep72658,in0Con66897,in0Con64399],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Mul34293.png')

LMul30674 = multiply_layer([[[[[0.9914]]]], [[[[0.2287]]]]], Mul30674), 
LRes17442 = reshape_layer(Mul30674, [1, 1], Res17442), 
LZer79044 = zero_padding1D_layer(Res17442, 3, 0, Zer79044), 
LCon35296 = concatenate_layer([Zer79044,[[[0.7157, 0.9985, 0.7814, 0.006, 0.3824, 0.7068, 0.3814, 0.3932, 0.5307, 0.0875, 0.0137, 0.5159, 0.2278, 0.3631, 0.3993], [0.9695, 0.9839, 0.9937, 0.288, 0.1287, 0.1578, 0.8653, 0.7136, 0.7827, 0.9339, 0.4442, 0.8461, 0.8344, 0.3076, 0.3378], [0.9456, 0.573, 0.0572, 0.3153, 0.9123, 0.2215, 0.3852, 0.8644, 0.5867, 0.5596, 0.7638, 0.7862, 0.2606, 0.4264, 0.5346], [0.1615, 0.8241, 0.8195, 0.982, 0.2648, 0.6008, 0.1248, 0.922, 0.6435, 0.195, 0.7326, 0.3327, 0.6355, 0.6157, 0.929]]]], 2, Con35296), 
LGlo36438 = global_max_pool2D_layer([[[[1.2002, 1.5278], [1.1263, 1.1055]]]], Glo36438), 
LRes36721 = reshape_layer(Glo36438, [2, 1], Res36721), 
LRes9835 = reshape_layer(Res36721, [2, 1, 1], Res9835), 
LRes83094 = reshape_layer(Res9835, [2, 1, 1, 1], Res83094), 
LGlo33257 = global_max_pool3D_layer(Res83094, Glo33257), 
LRes55896 = reshape_layer(Glo33257, [1, 1], Res55896), 
LRes20579 = reshape_layer(Res55896, [1, 1, 1], Res20579), 
LRes28685 = reshape_layer(Res20579, [1, 1, 1, 1], Res28685), 
LZer75891 = zero_padding3D_layer(Res28685, 0, 0, 1, 0, 0, 0, Zer75891), 
LCon64190 = concatenate_layer([Zer75891,[[[[[0.2956]], [[0.8407]]]]]], 4, Con64190), 
LLea10622 = leaky_relu_layer([[[[[0.0118, 0.782]], [[0.1778, 0.616]]]]], 0.8315431326222872, Lea10622), 
LAve47396 = average_layer([Con64190,Lea10622], Ave47396), 
LRes61548 = reshape_layer(Ave47396, [1, 2, 2], Res61548), 
LRes53053 = reshape_layer(Res61548, [1, 4], Res53053), 
LSep72658 = separable_conv1D_layer([[[0.0176, 0.7507]]], 1,[[[[0.432], [0.4762]]],[[[0.694, 0.1231, 0.5388, 0.515], [0.4996, 0.0702, 0.4977, 0.0029]]]],[0, 0, 0, 0], 1, true, Sep72658), 
LRes69184 = reshape_layer(Sep72658, [1, 4, 1], Res69184), 
LCon66897 = concatenate_layer([Res69184,[[[[0.7036, 0.4355, 0.9207], [0.3307, 0.1248, 0.0888], [0.8131, 0.6636, 0.4852], [0.415, 0.5411, 0.8039]]]]], 3, Con66897), 
LCon64399 = conv2D_layer([[[[0.1368], [0.596]]]], 1, 2,[[[[0.819, 0.5949, 0.0268, 0.7586]], [[0.2135, 0.1411, 0.3526, 0.6548]]]],[0, 0, 0, 0], 3, 1, false, 1, 1, Con64399), 
LZer73151 = zero_padding2D_layer(Con64399, 0, 0, 3, 0, Zer73151), 
LMul36859 = multiply_layer([Con66897,Zer73151], Mul36859), 
LRes76514 = reshape_layer(Mul36859, [1, 16], Res76514), 
LDot17258 = dot_layer(Res53053,Res76514, 1, 1, Dot17258), 
LMul34293 = multiply_layer([Con35296,Dot17258], Mul34293), 
exec_layers([LMul30674,LRes17442,LZer79044,LCon35296,LGlo36438,LRes36721,LRes9835,LRes83094,LGlo33257,LRes55896,LRes20579,LRes28685,LZer75891,LCon64190,LLea10622,LAve47396,LRes61548,LRes53053,LSep72658,LRes69184,LCon66897,LCon64399,LZer73151,LMul36859,LRes76514,LDot17258,LMul34293],["Mul30674","Res17442","Zer79044","Con35296","Glo36438","Res36721","Res9835","Res83094","Glo33257","Res55896","Res20579","Res28685","Zer75891","Con64190","Lea10622","Ave47396","Res61548","Res53053","Sep72658","Res69184","Con66897","Con64399","Zer73151","Mul36859","Res76514","Dot17258","Mul34293"],Mul34293,"Mul34293")

Actual (Unparsed): [[[0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000036, 0.0000923, 0.0002479, 0.0009356], [0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0005402, 0.0308738, 0.0191748, 0.0722851], [0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0007945, 0.0152619, 0.0420709, 0.1810664], [0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0002872, 0.0317866, 0.0518832, 0.2687309]]]

Expected (Unparsed): [[[0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,3.606987856039891e-6,9.2298338125936e-5,0.00024785385046120496,0.000935649247133531],[0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0005402271700886373,0.030873796163325695,0.019174821412472513,0.07228513274896475],[0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.000794524642912189,0.015261940394964224,0.042070899472201134,0.18106641242301022],[0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.00028715743543971273,0.03178658189743694,0.051883192059054034,0.26873088921718014]]]

Actual:   [[[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0001, 0.0003, 0.001], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0006, 0.0309, 0.0192, 0.0723], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0008, 0.0153, 0.0421, 0.1811], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0003, 0.0318, 0.0519, 0.2688]]]

Expected: [[[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0001, 0.0003, 0.001], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0006, 0.0309, 0.0192, 0.0723], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0008, 0.0153, 0.0421, 0.1811], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0003, 0.0318, 0.0519, 0.2688]]]