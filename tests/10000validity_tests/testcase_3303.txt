import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Max54920 = tf.keras.layers.Input(shape=([2, 1, 2, 2]))
in1Max54920 = tf.keras.layers.Input(shape=([2, 1, 2, 2]))
in0Sub12838 = tf.keras.layers.Input(shape=([3, 2, 2]))
in1Sub12838 = tf.keras.layers.Input(shape=([3, 2, 2]))
in0Con20393 = tf.keras.layers.Input(shape=([6, 2, 2]))

Max54920 = keras.layers.Maximum(name = 'Max54920', )([in0Max54920,in1Max54920])
Res64367 = keras.layers.Reshape((2, 1, 4), name = 'Res64367', )(Max54920)
Zer71304 = keras.layers.ZeroPadding2D(padding=((4, 0), (1, 0)), name = 'Zer71304', )(Res64367)
Sub12838 = keras.layers.Subtract(name = 'Sub12838', )([in0Sub12838,in1Sub12838])
Up_61452 = keras.layers.UpSampling2D(size=(2, 1), name = 'Up_61452', )(Sub12838)
Con20393 = keras.layers.Concatenate(axis=3, name = 'Con20393', )([Up_61452,in0Con20393])
Min36497 = keras.layers.Minimum(name = 'Min36497', )([Zer71304,Con20393])
model = tf.keras.models.Model(inputs=[in0Max54920,in1Max54920,in0Sub12838,in1Sub12838,in0Con20393], outputs=Min36497)
in0Max54920 = tf.constant([[[[[0.6291, 0.3747], [0.3566, 0.3722]]], [[[0.0398, 0.7128], [0.1541, 0.5892]]]]])
in1Max54920 = tf.constant([[[[[0.8475, 0.0926], [0.0046, 0.7454]]], [[[0.5266, 0.1217], [0.5787, 0.8816]]]]])
in0Sub12838 = tf.constant([[[[0.2822, 0.4796], [0.7863, 0.6459]], [[0.3538, 0.6185], [0.6405, 0.4007]], [[0.6627, 0.8237], [0.5384, 0.4325]]]])
in1Sub12838 = tf.constant([[[[0.2881, 0.6468], [0.2002, 0.9442]], [[0.2445, 0.0962], [0.0734, 0.5835]], [[0.4273, 0.9976], [0.4817, 0.4947]]]])
in0Con20393 = tf.constant([[[[0.5807, 0.1984], [0.1694, 0.3915]], [[0.2802, 0.0182], [0.4104, 0.1852]], [[0.831, 0.1519], [0.3722, 0.4255]], [[0.4875, 0.7969], [0.2144, 0.2402]], [[0.6226, 0.1191], [0.5966, 0.0612]], [[0.433, 0.4318], [0.2516, 0.8552]]]])
print (np.array2string(model.predict([in0Max54920,in1Max54920,in0Sub12838,in1Sub12838,in0Con20393],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Min36497.png')

LMax54920 = maximum_layer([[[[[[0.6291, 0.3747], [0.3566, 0.3722]]], [[[0.0398, 0.7128], [0.1541, 0.5892]]]]], [[[[[0.8475, 0.0926], [0.0046, 0.7454]]], [[[0.5266, 0.1217], [0.5787, 0.8816]]]]]], Max54920), 
LRes64367 = reshape_layer(Max54920, [2, 1, 4], Res64367), 
LZer71304 = zero_padding2D_layer(Res64367, 4, 0, 1, 0, Zer71304), 
LSub12838 = subtract_layer([[[[0.2822, 0.4796], [0.7863, 0.6459]], [[0.3538, 0.6185], [0.6405, 0.4007]], [[0.6627, 0.8237], [0.5384, 0.4325]]]], [[[[0.2881, 0.6468], [0.2002, 0.9442]], [[0.2445, 0.0962], [0.0734, 0.5835]], [[0.4273, 0.9976], [0.4817, 0.4947]]]], Sub12838), 
LUp_61452 = up_sampling2D_layer(Sub12838, 2, 1, Up_61452), 
LCon20393 = concatenate_layer([Up_61452,[[[[0.5807, 0.1984], [0.1694, 0.3915]], [[0.2802, 0.0182], [0.4104, 0.1852]], [[0.831, 0.1519], [0.3722, 0.4255]], [[0.4875, 0.7969], [0.2144, 0.2402]], [[0.6226, 0.1191], [0.5966, 0.0612]], [[0.433, 0.4318], [0.2516, 0.8552]]]]], 3, Con20393), 
LMin36497 = minimum_layer([Zer71304,Con20393], Min36497), 
exec_layers([LMax54920,LRes64367,LZer71304,LSub12838,LUp_61452,LCon20393,LMin36497],["Max54920","Res64367","Zer71304","Sub12838","Up_61452","Con20393","Min36497"],Min36497,"Min36497")

Actual (Unparsed): [[[[-0.0059000, -0.1672000, 0.0000000, 0.0000000], [0.0000000, -0.2983000, 0.0000000, 0.0000000]], [[-0.0059000, -0.1672000, 0.0000000, 0.0000000], [0.0000000, -0.2983000, 0.0000000, 0.0000000]], [[0.0000000, 0.0000000, 0.0000000, 0.0000000], [0.0000000, -0.1828000, 0.0000000, 0.0000000]], [[0.0000000, 0.0000000, 0.0000000, 0.0000000], [0.0000000, -0.1828000, 0.0000000, 0.0000000]], [[0.0000000, -0.1739000, 0.0000000, 0.0000000], [0.0567000, -0.0622000, 0.3566000, 0.0612000]], [[0.0000000, -0.1739000, 0.0000000, 0.0000000], [0.0567000, -0.0622000, 0.2516000, 0.8552000]]]]

Expected (Unparsed): [[[[-0.005900000000000016,-0.16720000000000002,0,0],[0,-0.2983,0,0]],[[-0.005900000000000016,-0.16720000000000002,0,0],[0,-0.2983,0,0]],[[0,0,0,0],[0,-0.18280000000000002,0,0]],[[0,0,0,0],[0,-0.18280000000000002,0,0]],[[0,-0.17390000000000005,0,0],[0.05669999999999997,-0.06219999999999998,0.3566,0.0612]],[[0,-0.17390000000000005,0,0],[0.05669999999999997,-0.06219999999999998,0.2516,0.8552]]]]

Actual:   [[[[-0.0059, -0.1672, 0, 0], [0, -0.2983, 0, 0]], [[-0.0059, -0.1672, 0, 0], [0, -0.2983, 0, 0]], [[0, 0, 0, 0], [0, -0.1828, 0, 0]], [[0, 0, 0, 0], [0, -0.1828, 0, 0]], [[0, -0.1739, 0, 0], [0.0567, -0.0622, 0.3566, 0.0612]], [[0, -0.1739, 0, 0], [0.0567, -0.0622, 0.2516, 0.8552]]]]

Expected: [[[[-0.0059, -0.1672, 0, 0], [0, -0.2983, 0, 0]], [[-0.0059, -0.1672, 0, 0], [0, -0.2983, 0, 0]], [[0, 0, 0, 0], [0, -0.1828, 0, 0]], [[0, 0, 0, 0], [0, -0.1828, 0, 0]], [[0, -0.1739, 0, 0], [0.0567, -0.0621, 0.3566, 0.0612]], [[0, -0.1739, 0, 0], [0.0567, -0.0621, 0.2516, 0.8552]]]]