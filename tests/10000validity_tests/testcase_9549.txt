import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Sub30200 = tf.keras.layers.Input(shape=([3]))
in1Sub30200 = tf.keras.layers.Input(shape=([3]))
in0Lay88690 = tf.keras.layers.Input(shape=([3, 1]))
in0Con3660 = tf.keras.layers.Input(shape=([3, 1]))
in0Min6992 = tf.keras.layers.Input(shape=([1, 2]))
in1Min6992 = tf.keras.layers.Input(shape=([1, 2]))
in0Dot4181 = tf.keras.layers.Input(shape=([2, 2]))
in1Dot4181 = tf.keras.layers.Input(shape=([2, 2]))

Sub30200 = keras.layers.Subtract(name = 'Sub30200', )([in0Sub30200,in1Sub30200])
Res79824 = keras.layers.Reshape((3, 1), name = 'Res79824', )(Sub30200)
Lay88690 = keras.layers.LayerNormalization(axis=2, epsilon=2.427867049832706, name = 'Lay88690', )(in0Lay88690)
Mul44541 = keras.layers.Multiply(name = 'Mul44541', )([Res79824,Lay88690])
Con3660 = keras.layers.Concatenate(axis=2, name = 'Con3660', )([Mul44541,in0Con3660])
Min6992 = keras.layers.Minimum(name = 'Min6992', )([in0Min6992,in1Min6992])
Zer2520 = keras.layers.ZeroPadding1D(padding=((1, 0)), name = 'Zer2520', )(Min6992)
Dot4181 = keras.layers.Dot(axes=(2, 1), name = 'Dot4181', )([in0Dot4181,in1Dot4181])
Min55847 = keras.layers.Minimum(name = 'Min55847', )([Zer2520,Dot4181])
Zer86274 = keras.layers.ZeroPadding1D(padding=((1, 0)), name = 'Zer86274', )(Min55847)
Add70211 = keras.layers.Add(name = 'Add70211', )([Con3660,Zer86274])
model = tf.keras.models.Model(inputs=[in0Sub30200,in1Sub30200,in0Lay88690,in0Con3660,in0Min6992,in1Min6992,in0Dot4181,in1Dot4181], outputs=Add70211)
in0Sub30200 = tf.constant([[0.8386, 0.0112, 0.58]])
in1Sub30200 = tf.constant([[0.6735, 0.8266, 0.5986]])
in0Lay88690 = tf.constant([[[1.2643], [1.0622], [1.5681]]])
in0Con3660 = tf.constant([[[0.5209], [0.5904], [0.945]]])
in0Min6992 = tf.constant([[[0.7741, 0.8976]]])
in1Min6992 = tf.constant([[[0.8708, 0.9926]]])
in0Dot4181 = tf.constant([[[0.5039, 0.8561], [0.3339, 0.3419]]])
in1Dot4181 = tf.constant([[[0.9338, 0.9327], [0.1694, 0.3293]]])
print (np.array2string(model.predict([in0Sub30200,in1Sub30200,in0Lay88690,in0Con3660,in0Min6992,in1Min6992,in0Dot4181,in1Dot4181],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Add70211.png')

LSub30200 = subtract_layer([[0.8386, 0.0112, 0.58]], [[0.6735, 0.8266, 0.5986]], Sub30200), 
LRes79824 = reshape_layer(Sub30200, [3, 1], Res79824), 
LLay88690 = layer_normalization_layer([[[1.2643], [1.0622], [1.5681]]], 2, 2.427867049832706, Lay88690), 
LMul44541 = multiply_layer([Res79824,Lay88690], Mul44541), 
LCon3660 = concatenate_layer([Mul44541,[[[0.5209], [0.5904], [0.945]]]], 2, Con3660), 
LMin6992 = minimum_layer([[[[0.7741, 0.8976]]], [[[0.8708, 0.9926]]]], Min6992), 
LZer2520 = zero_padding1D_layer(Min6992, 1, 0, Zer2520), 
LDot4181 = dot_layer([[[0.5039, 0.8561], [0.3339, 0.3419]]], [[[0.9338, 0.9327], [0.1694, 0.3293]]], 2, 1, Dot4181), 
LMin55847 = minimum_layer([Zer2520,Dot4181], Min55847), 
LZer86274 = zero_padding1D_layer(Min55847, 1, 0, Zer86274), 
LAdd70211 = add_layer([Con3660,Zer86274], Add70211), 
exec_layers([LSub30200,LRes79824,LLay88690,LMul44541,LCon3660,LMin6992,LZer2520,LDot4181,LMin55847,LZer86274,LAdd70211],["Sub30200","Res79824","Lay88690","Mul44541","Con3660","Min6992","Zer2520","Dot4181","Min55847","Zer86274","Add70211"],Add70211,"Add70211")

Actual (Unparsed): [[[0.0000000, 0.5209000], [0.0000000, 0.5904000], [0.3697137, 1.3690162]]]

Expected (Unparsed): [[[0.0,0.5209],[0.0,0.5904],[0.36971367999999993,1.3690162]]]

Actual:   [[[0, 0.5209], [0, 0.5904], [0.3698, 1.3691]]]

Expected: [[[0, 0.5209], [0, 0.5904], [0.3698, 1.3691]]]