import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Zer43145 = tf.keras.layers.Input(shape=([3, 4, 4, 1]))
in0Min59902 = tf.keras.layers.Input(shape=([2, 2, 1]))
in1Min59902 = tf.keras.layers.Input(shape=([2, 2, 1]))
in0Con17560 = tf.keras.layers.Input(shape=([5, 34]))

Zer43145 = keras.layers.ZeroPadding3D(padding=((1, 1), (1, 1), (1, 1)), name = 'Zer43145', )(in0Zer43145)
Res48691 = keras.layers.Reshape((5, 6, 6), name = 'Res48691', )(Zer43145)
PRe3460 = keras.layers.PReLU(name = 'PRe3460', )(Res48691)
Res89449 = keras.layers.Reshape((5, 36), name = 'Res89449', )(PRe3460)
Min59902 = keras.layers.Minimum(name = 'Min59902', )([in0Min59902,in1Min59902])
Res26891 = keras.layers.Reshape((2, 2), name = 'Res26891', )(Min59902)
Cro67203 = keras.layers.Cropping1D(cropping=((0, 1)), name = 'Cro67203', )(Res26891)
Zer37947 = keras.layers.ZeroPadding1D(padding=((4, 0)), name = 'Zer37947', )(Cro67203)
Con17560 = keras.layers.Concatenate(axis=2, name = 'Con17560', )([Zer37947,in0Con17560])
Mul97168 = keras.layers.Multiply(name = 'Mul97168', )([Res89449,Con17560])
model = tf.keras.models.Model(inputs=[in0Zer43145,in0Min59902,in1Min59902,in0Con17560], outputs=Mul97168)
w = model.get_layer('PRe3460').get_weights() 
w[0] = np.array([[[0.461, 0.3327, 0.4786, 0.9032, 0.0841, 0.9661], [0.9802, 0.4584, 0.5848, 0.6903, 0.1471, 0.2136], [0.1151, 0.7206, 0.3495, 0.4371, 0.8587, 0.655], [0.6169, 0.2307, 0.2968, 0.5758, 0.2066, 0.767], [0.6115, 0.3294, 0.8882, 0.2855, 0.518, 0.5491], [0.8708, 0.3646, 0.629, 0.4927, 0.8138, 0.3213]], [[0.9169, 0.1756, 0.0286, 0.3268, 0.9657, 0.6002], [0.8076, 0.9744, 0.4777, 0.1024, 0.7944, 0.586], [0.9402, 0.9701, 0.45, 0.5029, 0.4439, 0.5207], [0.9607, 0.9694, 0.394, 0.7704, 0.3871, 0.9895], [0.257, 0.6736, 0.4566, 0.7136, 0.5478, 0.6691], [0.1666, 0.4934, 0.9748, 0.927, 0.2848, 0.7357]], [[0.0352, 0.261, 0.9057, 0.0778, 0.3793, 0.1429], [0.4569, 0.2113, 0.9481, 0.6347, 0.9352, 0.8886], [0.2294, 0.3435, 0.6952, 0.2598, 0.9737, 0.6925], [0.8154, 0.7095, 0.366, 0.9032, 0.9224, 0.7887], [0.9572, 0.0871, 0.3659, 0.6703, 0.6268, 0.7576], [0.807, 0.7969, 0.4696, 0.8881, 0.6069, 0.033]], [[0.7766, 0.3686, 0.8851, 0.6883, 0.2162, 0.3412], [0.7539, 0.2331, 0.9125, 0.4313, 0.0279, 0.3962], [0.3639, 0.3343, 0.6622, 0.5997, 0.0482, 0.5647], [0.2732, 0.3688, 0.1222, 0.4328, 0.3644, 0.4319], [0.8364, 0.4702, 0.2932, 0.7183, 0.1595, 0.598], [0.5963, 0.3574, 0.6362, 0.3007, 0.0148, 0.0817]], [[0.6846, 0.9521, 0.4557, 0.1473, 0.3811, 0.2242], [0.1644, 0.997, 0.2787, 0.2015, 0.5872, 0.4147], [0.9563, 0.4238, 0.7556, 0.843, 0.8074, 0.5843], [0.5405, 0.8722, 0.0416, 0.0202, 0.79, 0.6455], [0.9956, 0.453, 0.1932, 0.0736, 0.6265, 0.6556], [0.6896, 0.2993, 0.4977, 0.8568, 0.3857, 0.8167]]])
model.get_layer('PRe3460').set_weights(w) 
in0Zer43145 = tf.constant([[[[[1.105], [1.6153], [1.0604], [1.7724]], [[1.9779], [1.0845], [1.2883], [1.2569]], [[1.1398], [1.4926], [1.8249], [1.3511]], [[1.4841], [1.3449], [1.328], [1.7671]]], [[[1.715], [1.364], [1.7413], [1.7082]], [[1.8604], [1.8532], [1.1735], [1.0089]], [[1.8888], [1.3286], [1.4317], [1.3]], [[1.404], [1.8586], [1.1061], [1.9433]]], [[[1.4044], [1.3831], [1.0718], [1.3885]], [[1.2639], [1.5247], [1.8944], [1.4239]], [[1.4141], [1.0476], [1.9023], [1.5159]], [[1.6909], [1.1754], [1.6272], [1.061]]]]])
in0Min59902 = tf.constant([[[[0.9467], [0.4322]], [[0.9019], [0.9115]]]])
in1Min59902 = tf.constant([[[[0.3202], [0.5396]], [[0.1529], [0.9792]]]])
in0Con17560 = tf.constant([[[0.4782, 0.173, 0.3926, 0.1501, 0.9285, 0.3592, 0.234, 0.9878, 0.6395, 0.1762, 0.9404, 0.9913, 0.1775, 0.7518, 0.0701, 0.7777, 0.5829, 0.0259, 0.288, 0.1701, 0.3448, 0.3757, 0.8203, 0.5001, 0.3531, 0.3887, 0.6275, 0.8002, 0.9396, 0.7502, 0.134, 0.4415, 0.0759, 0.7062], [0.4496, 0.0356, 0.2931, 0.8509, 0.1569, 0.9682, 0.9105, 0.0464, 0.8997, 0.7636, 0.7172, 0.1305, 0.207, 0.5843, 0.3372, 0.6927, 0.2124, 0.5676, 0.1261, 0.6064, 0.1885, 0.3697, 0.5983, 0.1929, 0.1059, 0.2433, 0.0629, 0.8642, 0.748, 0.21, 0.3586, 0.8407, 0.2634, 0.4064], [0.3227, 0.0732, 0.4257, 0.4773, 0.9008, 0.8125, 0.2801, 0.9744, 0.6129, 0.3626, 0.3067, 0.0719, 0.4242, 0.4326, 0.7066, 0.5589, 0.943, 0.1562, 0.925, 0.9864, 0.2606, 0.2889, 0.0659, 0.0532, 0.6847, 0.3118, 0.426, 0.8006, 0.0761, 0.171, 0.9737, 0.9503, 0.4936, 0.1652], [0.2394, 0.7695, 0.3742, 0.0562, 0.7404, 0.1771, 0.535, 0.8242, 0.7678, 0.4119, 0.8657, 0.6119, 0.0842, 0.479, 0.7031, 0.3122, 0.8438, 0.762, 0.5239, 0.9411, 0.834, 0.6405, 0.7777, 0.4071, 0.961, 0.6933, 0.3896, 0.5404, 0.7515, 0.0769, 0.7075, 0.2753, 0.5311, 0.9746], [0.4433, 0.6959, 0.8495, 0.583, 0.4622, 0.2465, 0.6725, 0.9694, 0.1109, 0.7871, 0.8384, 0.2719, 0.1459, 0.3286, 0.2827, 0.1366, 0.219, 0.2238, 0.5772, 0.9922, 0.3112, 0.3085, 0.4005, 0.7463, 0.4661, 0.9865, 0.6589, 0.7553, 0.6668, 0.5388, 0.11, 0.4664, 0.7271, 0.9951]]])
print (np.array2string(model.predict([in0Zer43145,in0Min59902,in1Min59902,in0Con17560],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Mul97168.png')

LZer43145 = zero_padding3D_layer([[[[[1.105], [1.6153], [1.0604], [1.7724]], [[1.9779], [1.0845], [1.2883], [1.2569]], [[1.1398], [1.4926], [1.8249], [1.3511]], [[1.4841], [1.3449], [1.328], [1.7671]]], [[[1.715], [1.364], [1.7413], [1.7082]], [[1.8604], [1.8532], [1.1735], [1.0089]], [[1.8888], [1.3286], [1.4317], [1.3]], [[1.404], [1.8586], [1.1061], [1.9433]]], [[[1.4044], [1.3831], [1.0718], [1.3885]], [[1.2639], [1.5247], [1.8944], [1.4239]], [[1.4141], [1.0476], [1.9023], [1.5159]], [[1.6909], [1.1754], [1.6272], [1.061]]]]], 1, 1, 1, 1, 1, 1, Zer43145), 
LRes48691 = reshape_layer(Zer43145, [5, 6, 6], Res48691), 
LPRe3460 = prelu_layer(Res48691, [[[0.461, 0.3327, 0.4786, 0.9032, 0.0841, 0.9661], [0.9802, 0.4584, 0.5848, 0.6903, 0.1471, 0.2136], [0.1151, 0.7206, 0.3495, 0.4371, 0.8587, 0.655], [0.6169, 0.2307, 0.2968, 0.5758, 0.2066, 0.767], [0.6115, 0.3294, 0.8882, 0.2855, 0.518, 0.5491], [0.8708, 0.3646, 0.629, 0.4927, 0.8138, 0.3213]], [[0.9169, 0.1756, 0.0286, 0.3268, 0.9657, 0.6002], [0.8076, 0.9744, 0.4777, 0.1024, 0.7944, 0.586], [0.9402, 0.9701, 0.45, 0.5029, 0.4439, 0.5207], [0.9607, 0.9694, 0.394, 0.7704, 0.3871, 0.9895], [0.257, 0.6736, 0.4566, 0.7136, 0.5478, 0.6691], [0.1666, 0.4934, 0.9748, 0.927, 0.2848, 0.7357]], [[0.0352, 0.261, 0.9057, 0.0778, 0.3793, 0.1429], [0.4569, 0.2113, 0.9481, 0.6347, 0.9352, 0.8886], [0.2294, 0.3435, 0.6952, 0.2598, 0.9737, 0.6925], [0.8154, 0.7095, 0.366, 0.9032, 0.9224, 0.7887], [0.9572, 0.0871, 0.3659, 0.6703, 0.6268, 0.7576], [0.807, 0.7969, 0.4696, 0.8881, 0.6069, 0.033]], [[0.7766, 0.3686, 0.8851, 0.6883, 0.2162, 0.3412], [0.7539, 0.2331, 0.9125, 0.4313, 0.0279, 0.3962], [0.3639, 0.3343, 0.6622, 0.5997, 0.0482, 0.5647], [0.2732, 0.3688, 0.1222, 0.4328, 0.3644, 0.4319], [0.8364, 0.4702, 0.2932, 0.7183, 0.1595, 0.598], [0.5963, 0.3574, 0.6362, 0.3007, 0.0148, 0.0817]], [[0.6846, 0.9521, 0.4557, 0.1473, 0.3811, 0.2242], [0.1644, 0.997, 0.2787, 0.2015, 0.5872, 0.4147], [0.9563, 0.4238, 0.7556, 0.843, 0.8074, 0.5843], [0.5405, 0.8722, 0.0416, 0.0202, 0.79, 0.6455], [0.9956, 0.453, 0.1932, 0.0736, 0.6265, 0.6556], [0.6896, 0.2993, 0.4977, 0.8568, 0.3857, 0.8167]]], PRe3460), 
LRes89449 = reshape_layer(PRe3460, [5, 36], Res89449), 
LMin59902 = minimum_layer([[[[[0.9467], [0.4322]], [[0.9019], [0.9115]]]], [[[[0.3202], [0.5396]], [[0.1529], [0.9792]]]]], Min59902), 
LRes26891 = reshape_layer(Min59902, [2, 2], Res26891), 
LCro67203 = cropping1D_layer(Res26891, 0, 1, Cro67203), 
LZer37947 = zero_padding1D_layer(Cro67203, 4, 0, Zer37947), 
LCon17560 = concatenate_layer([Zer37947,[[[0.4782, 0.173, 0.3926, 0.1501, 0.9285, 0.3592, 0.234, 0.9878, 0.6395, 0.1762, 0.9404, 0.9913, 0.1775, 0.7518, 0.0701, 0.7777, 0.5829, 0.0259, 0.288, 0.1701, 0.3448, 0.3757, 0.8203, 0.5001, 0.3531, 0.3887, 0.6275, 0.8002, 0.9396, 0.7502, 0.134, 0.4415, 0.0759, 0.7062], [0.4496, 0.0356, 0.2931, 0.8509, 0.1569, 0.9682, 0.9105, 0.0464, 0.8997, 0.7636, 0.7172, 0.1305, 0.207, 0.5843, 0.3372, 0.6927, 0.2124, 0.5676, 0.1261, 0.6064, 0.1885, 0.3697, 0.5983, 0.1929, 0.1059, 0.2433, 0.0629, 0.8642, 0.748, 0.21, 0.3586, 0.8407, 0.2634, 0.4064], [0.3227, 0.0732, 0.4257, 0.4773, 0.9008, 0.8125, 0.2801, 0.9744, 0.6129, 0.3626, 0.3067, 0.0719, 0.4242, 0.4326, 0.7066, 0.5589, 0.943, 0.1562, 0.925, 0.9864, 0.2606, 0.2889, 0.0659, 0.0532, 0.6847, 0.3118, 0.426, 0.8006, 0.0761, 0.171, 0.9737, 0.9503, 0.4936, 0.1652], [0.2394, 0.7695, 0.3742, 0.0562, 0.7404, 0.1771, 0.535, 0.8242, 0.7678, 0.4119, 0.8657, 0.6119, 0.0842, 0.479, 0.7031, 0.3122, 0.8438, 0.762, 0.5239, 0.9411, 0.834, 0.6405, 0.7777, 0.4071, 0.961, 0.6933, 0.3896, 0.5404, 0.7515, 0.0769, 0.7075, 0.2753, 0.5311, 0.9746], [0.4433, 0.6959, 0.8495, 0.583, 0.4622, 0.2465, 0.6725, 0.9694, 0.1109, 0.7871, 0.8384, 0.2719, 0.1459, 0.3286, 0.2827, 0.1366, 0.219, 0.2238, 0.5772, 0.9922, 0.3112, 0.3085, 0.4005, 0.7463, 0.4661, 0.9865, 0.6589, 0.7553, 0.6668, 0.5388, 0.11, 0.4664, 0.7271, 0.9951]]]], 2, Con17560), 
LMul97168 = multiply_layer([Res89449,Con17560], Mul97168), 
exec_layers([LZer43145,LRes48691,LPRe3460,LRes89449,LMin59902,LRes26891,LCro67203,LZer37947,LCon17560,LMul97168],["Zer43145","Res48691","PRe3460","Res89449","Min59902","Res26891","Cro67203","Zer37947","Con17560","Mul97168"],Mul97168,"Mul97168")

Actual (Unparsed): [[[0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 1.0698610, 1.4707307, 0.0492026, 1.5946283, 0.0000000, 0.0000000, 0.2581160, 0.2244915, 0.7527537, 0.4238266, 0.0000000, 0.0000000, 0.6469505, 0.1882169, 1.1066194, 0.2546823, 0.0000000, 0.0000000, 0.2862829, 0.1424249, 0.3231024, 0.1111506, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 1.3934375, 0.3820564, 1.6967227, 1.0469558, 0.0000000, 0.0000000, 0.1337628, 0.7861274, 0.5076561, 0.7128888, 0.0000000, 0.0000000, 0.2950306, 1.2289551, 1.4122289, 0.3387800, 0.0000000, 0.0000000, 0.0746928, 1.2725835, 0.3448820, 0.8278458, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.2487192, 0.7399586, 0.8833775, 1.0660902, 0.0000000, 0.0000000, 0.7733804, 0.1283797, 0.9074176, 1.0011441, 0.0000000, 0.0000000, 1.0775443, 0.5488376, 1.7902545, 1.2642606, 0.0000000, 0.0000000, 0.6883654, 1.1295594, 1.1281378, 0.4133656, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000]]]

Expected (Unparsed): [[[0,0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0],[0,0,0.0,0.0,0.0,0.0,0.0,1.069861,1.47073065,0.04920256,1.59462828,0.0,0.0,0.25811595,0.22449149999999998,0.75275369,0.42382667999999996,0.0,0.0,0.64695048,0.18821685999999999,1.10661936,0.25468235,0.0,0.0,0.28628288999999996,0.14242491,0.3231024,0.11115059,0.0,0.0,0.0,0.0,0.0,0.0,0.0],[0,0,0.0,0.0,0.0,0.0,0.0,1.3934375,0.3820564000000001,1.6967227200000001,1.04695578,0.0,0.0,0.13376276,0.78612744,0.5076560999999999,0.7128887399999999,0.0,0.0,0.29503056,1.228955,1.41222888,0.33878,0.0,0.0,0.07469279999999999,1.27258342,0.34488198000000003,0.8278458,0.0,0.0,0.0,0.0,0.0,0.0,0.0],[0,0,0.0,0.0,0.0,0.0,0.0,0.24871924000000004,0.7399585000000001,0.8833775600000001,1.0660903000000002,0.0,0.0,0.77338041,0.12837974,0.9074176,1.00114409,0.0,0.0,1.0775442,0.5488376400000001,1.7902545300000001,1.2642606,0.0,0.0,0.6883653900000001,1.1295594,1.12813776,0.4133656,0.0,0.0,0.0,0.0,0.0,0.0,0.0],[0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0]]]

Actual:   [[[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 1.0699, 1.4708, 0.0493, 1.5947, 0, 0, 0.2582, 0.2245, 0.7528, 0.4239, 0, 0, 0.647, 0.1883, 1.1067, 0.2547, 0, 0, 0.2863, 0.1425, 0.3232, 0.1112, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 1.3935, 0.3821, 1.6968, 1.047, 0, 0, 0.1338, 0.7862, 0.5077, 0.7129, 0, 0, 0.2951, 1.229, 1.4123, 0.3388, 0, 0, 0.0747, 1.2726, 0.3449, 0.8279, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0.2488, 0.74, 0.8834, 1.0661, 0, 0, 0.7734, 0.1284, 0.9075, 1.0012, 0, 0, 1.0776, 0.5489, 1.7903, 1.2643, 0, 0, 0.6884, 1.1296, 1.1282, 0.4134, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]]]

Expected: [[[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 1.0699, 1.4708, 0.0493, 1.5947, 0, 0, 0.2582, 0.2245, 0.7528, 0.4239, 0, 0, 0.647, 0.1883, 1.1067, 0.2547, 0, 0, 0.2863, 0.1425, 0.3232, 0.1112, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 1.3935, 0.3821, 1.6968, 1.047, 0, 0, 0.1338, 0.7862, 0.5077, 0.7129, 0, 0, 0.2951, 1.229, 1.4123, 0.3388, 0, 0, 0.0747, 1.2726, 0.3449, 0.8279, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0.2488, 0.74, 0.8834, 1.0661, 0, 0, 0.7734, 0.1284, 0.9075, 1.0012, 0, 0, 1.0776, 0.5489, 1.7903, 1.2643, 0, 0, 0.6884, 1.1296, 1.1282, 0.4134, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]]]