import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Min18396 = tf.keras.layers.Input(shape=([2, 2, 2]))
in1Min18396 = tf.keras.layers.Input(shape=([2, 2, 2]))

Min18396 = keras.layers.Minimum(name = 'Min18396', )([in0Min18396,in1Min18396])
Res58451 = keras.layers.Reshape((2, 4), name = 'Res58451', )(Min18396)
LST27686 = keras.layers.LSTM(1,recurrent_activation='sigmoid', name = 'LST27686', )(Res58451)
Res32278 = keras.layers.Reshape((1, 1), name = 'Res32278', )(LST27686)
Sim32357 = keras.layers.SimpleRNN(1,name = 'Sim32357', )(Res32278)
model = tf.keras.models.Model(inputs=[in0Min18396,in1Min18396], outputs=Sim32357)
w = model.get_layer('LST27686').get_weights() 
w[0] = np.array([[2, 6, 5, 7], [3, 1, 5, 1], [6, 5, 1, 7], [3, 9, 6, 10]])
w[1] = np.array([[2, 5, 7, 5]])
w[2] = np.array([4, 10, 8, 2])
model.get_layer('LST27686').set_weights(w) 
w = model.get_layer('Sim32357').get_weights() 
w[0] = np.array([[5]])
w[1] = np.array([[4]])
w[2] = np.array([8])
model.get_layer('Sim32357').set_weights(w) 
in0Min18396 = tf.constant([[[[0.5315, 0.1157], [0.3368, 0.4759]], [[0.9183, 0.4778], [0.6891, 0.3768]]]])
in1Min18396 = tf.constant([[[[0.4956, 0.7788], [0.171, 0.8649]], [[0.5274, 0.1799], [0.9428, 0.9782]]]])
print (np.array2string(model.predict([in0Min18396,in1Min18396],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Sim32357.png')

LMin18396 = minimum_layer([[[[[0.5315, 0.1157], [0.3368, 0.4759]], [[0.9183, 0.4778], [0.6891, 0.3768]]]], [[[[0.4956, 0.7788], [0.171, 0.8649]], [[0.5274, 0.1799], [0.9428, 0.9782]]]]], Min18396), 
LRes58451 = reshape_layer(Min18396, [2, 4], Res58451), 
LLST27686 = lstm_layer(Res58451,[[2, 6, 5, 7], [3, 1, 5, 1], [6, 5, 1, 7], [3, 9, 6, 10]],[[2, 5, 7, 5]],[4, 10, 8, 2], LST27686), 
LRes32278 = reshape_layer(LST27686, [1, 1], Res32278), 
LSim32357 = simple_rnn_layer(Res32278,[[5]],[[4]],[8], Sim32357), 
exec_layers([LMin18396,LRes58451,LLST27686,LRes32278,LSim32357],["Min18396","Res58451","LST27686","Res32278","Sim32357"],Sim32357,"Sim32357")

Actual (Unparsed): [[1.0000000]]

Expected (Unparsed): [[0.9999999999853537]]

Actual:   [[1]]

Expected: [[1]]