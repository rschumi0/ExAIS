import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Mul8875 = tf.keras.layers.Input(shape=([1, 1]))
in1Mul8875 = tf.keras.layers.Input(shape=([1, 1]))
in0Add82756 = tf.keras.layers.Input(shape=([2, 2]))
in1Add82756 = tf.keras.layers.Input(shape=([2, 2]))
in0Con55505 = tf.keras.layers.Input(shape=([3, 1]))
in0Min50554 = tf.keras.layers.Input(shape=([1, 2, 2]))
in1Min50554 = tf.keras.layers.Input(shape=([1, 2, 2]))

Mul8875 = keras.layers.Multiply(name = 'Mul8875', )([in0Mul8875,in1Mul8875])
Res90092 = keras.layers.Reshape((1, 1, 1), name = 'Res90092', )(Mul8875)
Zer15878 = keras.layers.ZeroPadding2D(padding=((1, 1), (1, 1)), name = 'Zer15878', )(Res90092)
Add82756 = keras.layers.Add(name = 'Add82756', )([in0Add82756,in1Add82756])
Res10679 = keras.layers.Reshape((2, 2, 1), name = 'Res10679', )(Add82756)
Ave76079 = keras.layers.AveragePooling2D(pool_size=(1, 1), name = 'Ave76079', )(Res10679)
Zer58997 = keras.layers.ZeroPadding2D(padding=((1, 0), (1, 0)), name = 'Zer58997', )(Ave76079)
Mul94387 = keras.layers.Multiply(name = 'Mul94387', )([Zer15878,Zer58997])
Res98033 = keras.layers.Reshape((3, 3), name = 'Res98033', )(Mul94387)
Con55505 = keras.layers.Concatenate(axis=2, name = 'Con55505', )([Res98033,in0Con55505])
Min50554 = keras.layers.Minimum(name = 'Min50554', )([in0Min50554,in1Min50554])
Res1603 = keras.layers.Reshape((1, 4), name = 'Res1603', )(Min50554)
Dot21860 = keras.layers.Dot(axes=(2, 2), name = 'Dot21860', )([Con55505,Res1603])
model = tf.keras.models.Model(inputs=[in0Mul8875,in1Mul8875,in0Add82756,in1Add82756,in0Con55505,in0Min50554,in1Min50554], outputs=Dot21860)
in0Mul8875 = tf.constant([[[0.6734]]])
in1Mul8875 = tf.constant([[[0.7196]]])
in0Add82756 = tf.constant([[[0.8655, 0.1895], [0.5502, 0.8008]]])
in1Add82756 = tf.constant([[[0.1238, 0.6669], [0.9269, 0.9133]]])
in0Con55505 = tf.constant([[[0.8873], [0.3191], [0.2402]]])
in0Min50554 = tf.constant([[[[0.3587, 0.2998], [0.2992, 0.0723]]]])
in1Min50554 = tf.constant([[[[0.7395, 0.3238], [0.0587, 0.0873]]]])
print (np.array2string(model.predict([in0Mul8875,in1Mul8875,in0Add82756,in1Add82756,in0Con55505,in0Min50554,in1Min50554],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Dot21860.png')

LMul8875 = multiply_layer([[[[0.6734]]], [[[0.7196]]]], Mul8875), 
LRes90092 = reshape_layer(Mul8875, [1, 1, 1], Res90092), 
LZer15878 = zero_padding2D_layer(Res90092, 1, 1, 1, 1, Zer15878), 
LAdd82756 = add_layer([[[[0.8655, 0.1895], [0.5502, 0.8008]]], [[[0.1238, 0.6669], [0.9269, 0.9133]]]], Add82756), 
LRes10679 = reshape_layer(Add82756, [2, 2, 1], Res10679), 
LAve76079 = average_pooling2D_layer(Res10679, 1, 1, Ave76079), 
LZer58997 = zero_padding2D_layer(Ave76079, 1, 0, 1, 0, Zer58997), 
LMul94387 = multiply_layer([Zer15878,Zer58997], Mul94387), 
LRes98033 = reshape_layer(Mul94387, [3, 3], Res98033), 
LCon55505 = concatenate_layer([Res98033,[[[0.8873], [0.3191], [0.2402]]]], 2, Con55505), 
LMin50554 = minimum_layer([[[[[0.3587, 0.2998], [0.2992, 0.0723]]]], [[[[0.7395, 0.3238], [0.0587, 0.0873]]]]], Min50554), 
LRes1603 = reshape_layer(Min50554, [1, 4], Res1603), 
LDot21860 = dot_layer(Con55505,Res1603, 2, 2, Dot21860), 
exec_layers([LMul8875,LRes90092,LZer15878,LAdd82756,LRes10679,LAve76079,LZer58997,LMul94387,LRes98033,LCon55505,LMin50554,LRes1603,LDot21860],["Mul8875","Res90092","Zer15878","Add82756","Res10679","Ave76079","Zer58997","Mul94387","Res98033","Con55505","Min50554","Res1603","Dot21860"],Dot21860,"Dot21860")

Actual (Unparsed): [[[0.0641518], [0.1667931], [0.0173665]]]

Expected (Unparsed): [[[0.06415179],[0.1667931458358896],[0.01736646]]]

Actual:   [[[0.0642], [0.1668], [0.0174]]]

Expected: [[[0.0642], [0.1668], [0.0174]]]