import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Dot30002 = tf.keras.layers.Input(shape=([2]))
in1Dot30002 = tf.keras.layers.Input(shape=([2]))
in0Con42318 = tf.keras.layers.Input(shape=([1, 1, 2, 1]))
in0Cro73319 = tf.keras.layers.Input(shape=([1, 4, 4, 2]))

Dot30002 = keras.layers.Dot(axes=(1, 1), name = 'Dot30002', )([in0Dot30002,in1Dot30002])
Lea47905 = keras.layers.LeakyReLU(alpha=7.687931109163797, name = 'Lea47905', )(Dot30002)
Res34868 = keras.layers.Reshape((1, 1), name = 'Res34868', )(Lea47905)
Res1702 = keras.layers.Reshape((1, 1, 1), name = 'Res1702', )(Res34868)
Res80187 = keras.layers.Reshape((1, 1, 1, 1), name = 'Res80187', )(Res1702)
Zer23328 = keras.layers.ZeroPadding3D(padding=((0, 0), (0, 0), (1, 0)), name = 'Zer23328', )(Res80187)
Con42318 = keras.layers.Concatenate(axis=4, name = 'Con42318', )([Zer23328,in0Con42318])
Cro73319 = keras.layers.Cropping3D(cropping=((0, 0), (3, 0), (2, 0)), name = 'Cro73319', )(in0Cro73319)
Mul69366 = keras.layers.Multiply(name = 'Mul69366', )([Con42318,Cro73319])
model = tf.keras.models.Model(inputs=[in0Dot30002,in1Dot30002,in0Con42318,in0Cro73319], outputs=Mul69366)
in0Dot30002 = tf.constant([[0.7469, 0.3778]])
in1Dot30002 = tf.constant([[0.2361, 0.1385]])
in0Con42318 = tf.constant([[[[[0.1333], [0.573]]]]])
in0Cro73319 = tf.constant([[[[[1.4408, 1.3808], [1.5083, 1.7827], [1.5101, 1.4165], [1.2648, 1.9312]], [[1.5956, 1.3046], [1.0378, 1.7728], [1.9684, 1.3802], [1.0724, 1.258]], [[1.0996, 1.1317], [1.7762, 1.8516], [1.149, 1.6298], [1.3593, 1.6013]], [[1.0436, 1.7742], [1.0627, 1.1363], [1.7772, 1.886], [1.4759, 1.4792]]]]])
print (np.array2string(model.predict([in0Dot30002,in1Dot30002,in0Con42318,in0Cro73319],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Mul69366.png')

LDot30002 = dot_layer([[0.7469, 0.3778]], [[0.2361, 0.1385]], 1, 1, Dot30002), 
LLea47905 = leaky_relu_layer(Dot30002, 7.687931109163797, Lea47905), 
LRes34868 = reshape_layer(Lea47905, [1, 1], Res34868), 
LRes1702 = reshape_layer(Res34868, [1, 1, 1], Res1702), 
LRes80187 = reshape_layer(Res1702, [1, 1, 1, 1], Res80187), 
LZer23328 = zero_padding3D_layer(Res80187, 0, 0, 0, 0, 1, 0, Zer23328), 
LCon42318 = concatenate_layer([Zer23328,[[[[[0.1333], [0.573]]]]]], 4, Con42318), 
LCro73319 = cropping3D_layer([[[[[1.4408, 1.3808], [1.5083, 1.7827], [1.5101, 1.4165], [1.2648, 1.9312]], [[1.5956, 1.3046], [1.0378, 1.7728], [1.9684, 1.3802], [1.0724, 1.258]], [[1.0996, 1.1317], [1.7762, 1.8516], [1.149, 1.6298], [1.3593, 1.6013]], [[1.0436, 1.7742], [1.0627, 1.1363], [1.7772, 1.886], [1.4759, 1.4792]]]]], 0, 0, 3, 0, 2, 0, Cro73319), 
LMul69366 = multiply_layer([Con42318,Cro73319], Mul69366), 
exec_layers([LDot30002,LLea47905,LRes34868,LRes1702,LRes80187,LZer23328,LCon42318,LCro73319,LMul69366],["Dot30002","Lea47905","Res34868","Res1702","Res80187","Zer23328","Con42318","Cro73319","Mul69366"],Mul69366,"Mul69366")

Actual (Unparsed): [[[[[0.0000000, 0.2514038], [0.3374917, 0.8475816]]]]]

Expected (Unparsed): [[[[[0.0,0.2514038],[0.337491676801,0.8475815999999999]]]]]

Actual:   [[[[[0, 0.2515], [0.3375, 0.8476]]]]]

Expected: [[[[[0, 0.2515], [0.3375, 0.8476]]]]]