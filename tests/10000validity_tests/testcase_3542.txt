import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Sub58352 = tf.keras.layers.Input(shape=([2, 3]))
in1Sub58352 = tf.keras.layers.Input(shape=([2, 3]))

Sub58352 = keras.layers.Subtract(name = 'Sub58352', )([in0Sub58352,in1Sub58352])
Sim38847 = keras.layers.SimpleRNN(1,name = 'Sim38847', )(Sub58352)
model = tf.keras.models.Model(inputs=[in0Sub58352,in1Sub58352], outputs=Sim38847)
w = model.get_layer('Sim38847').get_weights() 
w[0] = np.array([[1], [6], [2]])
w[1] = np.array([[4]])
w[2] = np.array([7])
model.get_layer('Sim38847').set_weights(w) 
in0Sub58352 = tf.constant([[[0.4043, 0.4604, 0.9689], [0.9058, 0.9702, 0.847]]])
in1Sub58352 = tf.constant([[[0.6834, 0.1343, 0.0719], [0.0778, 0.0866, 0.6628]]])
print (np.array2string(model.predict([in0Sub58352,in1Sub58352],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Sim38847.png')

LSub58352 = subtract_layer([[[0.4043, 0.4604, 0.9689], [0.9058, 0.9702, 0.847]]], [[[0.6834, 0.1343, 0.0719], [0.0778, 0.0866, 0.6628]]], Sub58352), 
LSim38847 = simple_rnn_layer(Sub58352,[[1], [6], [2]],[[4]],[7], Sim38847), 
exec_layers([LSub58352,LSim38847],["Sub58352","Sim38847"],Sim38847,"Sim38847")

Actual (Unparsed): [[1.0000000]]

Expected (Unparsed): [[0.9999999999999988]]

Actual:   [[1]]

Expected: [[1]]