import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Sub32464 = tf.keras.layers.Input(shape=([2, 2]))
in1Sub32464 = tf.keras.layers.Input(shape=([2, 2]))
in0Con22313 = tf.keras.layers.Input(shape=([3, 10]))
in0Sub81211 = tf.keras.layers.Input(shape=([2, 2, 2, 3]))
in1Sub81211 = tf.keras.layers.Input(shape=([2, 2, 2, 3]))
in0Dot40618 = tf.keras.layers.Input(shape=([3, 2]))
in1Dot40618 = tf.keras.layers.Input(shape=([3, 2]))
in0Con30006 = tf.keras.layers.Input(shape=([3, 9]))

Sub32464 = keras.layers.Subtract(name = 'Sub32464', )([in0Sub32464,in1Sub32464])
ReL3343 = keras.layers.ReLU(max_value=3.8534654438352045, negative_slope=0.1399836648747046, threshold=5.1023878986718065, name = 'ReL3343', )(Sub32464)
Zer40870 = keras.layers.ZeroPadding1D(padding=((1, 0)), name = 'Zer40870', )(ReL3343)
Con22313 = keras.layers.Concatenate(axis=2, name = 'Con22313', )([Zer40870,in0Con22313])
Sub81211 = keras.layers.Subtract(name = 'Sub81211', )([in0Sub81211,in1Sub81211])
ELU71963 = keras.layers.ELU(alpha=-2.8079358125936027, name = 'ELU71963', )(Sub81211)
Mas72327 = keras.layers.Masking(mask_value=1, name = 'Mas72327', )(ELU71963)
Res75670 = keras.layers.Reshape((2, 2, 6), name = 'Res75670', )(Mas72327)
Res30849 = keras.layers.Reshape((2, 12), name = 'Res30849', )(Res75670)
Zer27015 = keras.layers.ZeroPadding1D(padding=((1, 0)), name = 'Zer27015', )(Res30849)
Dot40618 = keras.layers.Dot(axes=(2, 2), name = 'Dot40618', )([in0Dot40618,in1Dot40618])
Con30006 = keras.layers.Concatenate(axis=2, name = 'Con30006', )([Dot40618,in0Con30006])
Min24209 = keras.layers.Minimum(name = 'Min24209', )([Zer27015,Con30006])
Sub77644 = keras.layers.Subtract(name = 'Sub77644', )([Con22313,Min24209])
model = tf.keras.models.Model(inputs=[in0Sub32464,in1Sub32464,in0Con22313,in0Sub81211,in1Sub81211,in0Dot40618,in1Dot40618,in0Con30006], outputs=Sub77644)
in0Sub32464 = tf.constant([[[0.4064, 0.8861], [0.4664, 0.6952]]])
in1Sub32464 = tf.constant([[[0.1673, 0.1001], [0.2074, 0.7224]]])
in0Con22313 = tf.constant([[[0.9746, 0.0119, 0.4688, 0.0549, 0.4624, 0.938, 0.8128, 0.7787, 0.7461, 0.1424], [0.7839, 0.4708, 0.6162, 0.3905, 0.1946, 0.2104, 0.6063, 0.0313, 0.7496, 0.0558], [0.5001, 0.815, 0.5732, 0.7798, 0.1138, 0.7682, 0.7016, 0.5109, 0.8283, 0.922]]])
in0Sub81211 = tf.constant([[[[[0.9027, 0.1389, 0.0029], [0.1092, 0.0319, 0.3803]], [[0.1097, 0.8323, 0.5318], [0.5239, 0.9253, 0.4421]]], [[[0.2638, 0.0538, 0.9971], [0.2403, 0.7558, 0.7436]], [[0.6496, 0.7923, 0.8526], [0.2554, 0.5973, 0.2046]]]]])
in1Sub81211 = tf.constant([[[[[0.6854, 0.5893, 0.3387], [0.3167, 0.4827, 0.1228]], [[0.0882, 0.4612, 0.8505], [0.2494, 0.4981, 0.7244]]], [[[0.278, 0.1705, 0.4459], [0.7055, 0.7958, 0.2264]], [[0.7176, 0.616, 0.9059], [0.2596, 0.5047, 0.1878]]]]])
in0Dot40618 = tf.constant([[[0.1313, 0.899], [0.2526, 0.2648], [0.794, 0.3229]]])
in1Dot40618 = tf.constant([[[0.5439, 0.1426], [0.9162, 0.014], [0.3845, 0.6882]]])
in0Con30006 = tf.constant([[[0.818, 0.3625, 0.9753, 0.4875, 0.1361, 0.7804, 0.872, 0.2202, 0.2275], [0.8485, 0.4637, 0.6278, 0.5821, 0.2101, 0.795, 0.7399, 0.887, 0.9662], [0.5124, 0.3296, 0.2464, 0.3565, 0.9827, 0.3527, 0.6674, 0.6116, 0.4953]]])
print (np.array2string(model.predict([in0Sub32464,in1Sub32464,in0Con22313,in0Sub81211,in1Sub81211,in0Dot40618,in1Dot40618,in0Con30006],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Sub77644.png')

LSub32464 = subtract_layer([[[0.4064, 0.8861], [0.4664, 0.6952]]], [[[0.1673, 0.1001], [0.2074, 0.7224]]], Sub32464), 
LReL3343 = relu_layer(Sub32464, 3.8534654438352045, 0.1399836648747046, 5.1023878986718065, ReL3343), 
LZer40870 = zero_padding1D_layer(ReL3343, 1, 0, Zer40870), 
LCon22313 = concatenate_layer([Zer40870,[[[0.9746, 0.0119, 0.4688, 0.0549, 0.4624, 0.938, 0.8128, 0.7787, 0.7461, 0.1424], [0.7839, 0.4708, 0.6162, 0.3905, 0.1946, 0.2104, 0.6063, 0.0313, 0.7496, 0.0558], [0.5001, 0.815, 0.5732, 0.7798, 0.1138, 0.7682, 0.7016, 0.5109, 0.8283, 0.922]]]], 2, Con22313), 
LSub81211 = subtract_layer([[[[[0.9027, 0.1389, 0.0029], [0.1092, 0.0319, 0.3803]], [[0.1097, 0.8323, 0.5318], [0.5239, 0.9253, 0.4421]]], [[[0.2638, 0.0538, 0.9971], [0.2403, 0.7558, 0.7436]], [[0.6496, 0.7923, 0.8526], [0.2554, 0.5973, 0.2046]]]]], [[[[[0.6854, 0.5893, 0.3387], [0.3167, 0.4827, 0.1228]], [[0.0882, 0.4612, 0.8505], [0.2494, 0.4981, 0.7244]]], [[[0.278, 0.1705, 0.4459], [0.7055, 0.7958, 0.2264]], [[0.7176, 0.616, 0.9059], [0.2596, 0.5047, 0.1878]]]]], Sub81211), 
LELU71963 = elu_layer(Sub81211, -2.8079358125936027, ELU71963), 
LMas72327 = masking_layer(ELU71963, 1, Mas72327), 
LRes75670 = reshape_layer(Mas72327, [2, 2, 6], Res75670), 
LRes30849 = reshape_layer(Res75670, [2, 12], Res30849), 
LZer27015 = zero_padding1D_layer(Res30849, 1, 0, Zer27015), 
LDot40618 = dot_layer([[[0.1313, 0.899], [0.2526, 0.2648], [0.794, 0.3229]]], [[[0.5439, 0.1426], [0.9162, 0.014], [0.3845, 0.6882]]], 2, 2, Dot40618), 
LCon30006 = concatenate_layer([Dot40618,[[[0.818, 0.3625, 0.9753, 0.4875, 0.1361, 0.7804, 0.872, 0.2202, 0.2275], [0.8485, 0.4637, 0.6278, 0.5821, 0.2101, 0.795, 0.7399, 0.887, 0.9662], [0.5124, 0.3296, 0.2464, 0.3565, 0.9827, 0.3527, 0.6674, 0.6116, 0.4953]]]], 2, Con30006), 
LMin24209 = minimum_layer([Zer27015,Con30006], Min24209), 
LSub77644 = subtract_layer(Con22313,Min24209, Sub77644), 
exec_layers([LSub32464,LReL3343,LZer40870,LCon22313,LSub81211,LELU71963,LMas72327,LRes75670,LRes30849,LZer27015,LDot40618,LCon30006,LMin24209,LSub77644],["Sub32464","ReL3343","Zer40870","Con22313","Sub81211","ELU71963","Mas72327","Res75670","Res30849","Zer27015","Dot40618","Con30006","Min24209","Sub77644"],Sub77644,"Sub77644")

Actual (Unparsed): [[[0.0000000, 0.0000000, 0.9746000, 0.0119000, 0.4688000, 0.0549000, 0.4624000, 0.9380000, 0.8128000, 0.7787000, 0.7461000, 0.1424000], [-0.8559305, -0.8393631, 0.5045400, -0.0553700, 0.1525000, 0.1330000, 0.1731000, 0.0003000, -0.1600036, -0.2432000, 0.3224000, -0.6348190], [-0.7175861, -1.0273467, -0.0274128, 0.3026000, 0.4630994, 0.5334000, -0.0707923, 0.5919000, 0.5558556, 0.4991314, 0.7357000, 0.9052000]]]

Expected (Unparsed): [[[0,0,0.9746,0.0119,0.4688,0.0549,0.4624,0.938,0.8128,0.7787,0.7461,0.1424],[-0.8559304833968805,-0.8393631170769045,0.5045399400000001,-0.055369989231137895,0.15249999999999997,0.133,0.17309999999999998,0.0002999999999999947,-0.1600035285767495,-0.24320000000000003,0.3224,-0.6348190116252881],[-0.7175861161607502,-1.0273467218567487,-0.027412780000000136,0.3026,0.46309926196392803,0.5334000000000001,-0.07079237054548553,0.5919,0.5558556111656876,0.49913140094495795,0.7357,0.9052]]]

Actual:   [[[0, 0, 0.9746, 0.0119, 0.4688, 0.0549, 0.4624, 0.938, 0.8128, 0.7787, 0.7461, 0.1424], [-0.8559, -0.8393, 0.5046, -0.0553, 0.1525, 0.133, 0.1731, 0.0003, -0.16, -0.2432, 0.3224, -0.6348], [-0.7175, -1.0273, -0.0274, 0.3026, 0.4631, 0.5334, -0.0707, 0.5919, 0.5559, 0.4992, 0.7357, 0.9052]]]

Expected: [[[0, 0, 0.9746, 0.0119, 0.4688, 0.0549, 0.4624, 0.938, 0.8128, 0.7787, 0.7461, 0.1424], [-0.8559, -0.8393, 0.5046, -0.0553, 0.1525, 0.133, 0.1731, 0.0003, -0.16, -0.2432, 0.3224, -0.6348], [-0.7175, -1.0273, -0.0274, 0.3026, 0.4631, 0.5335, -0.0707, 0.5919, 0.5559, 0.4992, 0.7357, 0.9052]]]