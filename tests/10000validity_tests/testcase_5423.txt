import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Max38483 = tf.keras.layers.Input(shape=([1, 2]))
in1Max38483 = tf.keras.layers.Input(shape=([1, 2]))

Max38483 = keras.layers.Maximum(name = 'Max38483', )([in0Max38483,in1Max38483])
Loc50025 = keras.layers.LocallyConnected1D(3, (1),strides=(7), name = 'Loc50025', )(Max38483)
Sim18402 = keras.layers.SimpleRNN(1,name = 'Sim18402', )(Loc50025)
model = tf.keras.models.Model(inputs=[in0Max38483,in1Max38483], outputs=Sim18402)
w = model.get_layer('Loc50025').get_weights() 
w[0] = np.array([[[0.9076, 0.6975, 0.1505], [0.6468, 0.0756, 0.7534]]])
w[1] = np.array([[0, 0, 0]])
model.get_layer('Loc50025').set_weights(w) 
w = model.get_layer('Sim18402').get_weights() 
w[0] = np.array([[10], [7], [9]])
w[1] = np.array([[7]])
w[2] = np.array([2])
model.get_layer('Sim18402').set_weights(w) 
in0Max38483 = tf.constant([[[0.0911, 0.9195]]])
in1Max38483 = tf.constant([[[0.8103, 0.1023]]])
print (np.array2string(model.predict([in0Max38483,in1Max38483],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Sim18402.png')

LMax38483 = maximum_layer([[[[0.0911, 0.9195]]], [[[0.8103, 0.1023]]]], Max38483), 
LLoc50025 = locally_connected1D_layer(Max38483, 1,[[[0.9076, 0.6975, 0.1505], [0.6468, 0.0756, 0.7534]]],[[0, 0, 0]], 7, Loc50025), 
LSim18402 = simple_rnn_layer(Loc50025,[[10], [7], [9]],[[7]],[2], Sim18402), 
exec_layers([LMax38483,LLoc50025,LSim18402],["Max38483","Loc50025","Sim18402"],Sim18402,"Sim18402")

Actual (Unparsed): [[1.0000000]]

Expected (Unparsed): [[1.0]]

Actual:   [[1]]

Expected: [[1]]