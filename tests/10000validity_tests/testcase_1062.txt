import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Sub54956 = tf.keras.layers.Input(shape=([3]))
in1Sub54956 = tf.keras.layers.Input(shape=([3]))
in0Con64516 = tf.keras.layers.Input(shape=([3, 3, 5, 2]))
in0Dot46621 = tf.keras.layers.Input(shape=([3, 3]))
in1Dot46621 = tf.keras.layers.Input(shape=([3, 3]))
in0Con76187 = tf.keras.layers.Input(shape=([3, 3, 5, 2]))
in0Sub48014 = tf.keras.layers.Input(shape=([2, 2, 3, 3]))
in1Sub48014 = tf.keras.layers.Input(shape=([2, 2, 3, 3]))

Sub54956 = keras.layers.Subtract(name = 'Sub54956', )([in0Sub54956,in1Sub54956])
Res7678 = keras.layers.Reshape((3, 1), name = 'Res7678', )(Sub54956)
Res49834 = keras.layers.Reshape((3, 1, 1), name = 'Res49834', )(Res7678)
Res48746 = keras.layers.Reshape((3, 1, 1, 1), name = 'Res48746', )(Res49834)
Zer47280 = keras.layers.ZeroPadding3D(padding=((0, 0), (2, 0), (4, 0)), name = 'Zer47280', )(Res48746)
Con64516 = keras.layers.Concatenate(axis=4, name = 'Con64516', )([Zer47280,in0Con64516])
Dot46621 = keras.layers.Dot(axes=(2, 1), name = 'Dot46621', )([in0Dot46621,in1Dot46621])
Res29307 = keras.layers.Reshape((3, 3, 1), name = 'Res29307', )(Dot46621)
Res45793 = keras.layers.Reshape((3, 3, 1, 1), name = 'Res45793', )(Res29307)
Zer54075 = keras.layers.ZeroPadding3D(padding=((0, 0), (0, 0), (4, 0)), name = 'Zer54075', )(Res45793)
Con76187 = keras.layers.Concatenate(axis=4, name = 'Con76187', )([Zer54075,in0Con76187])
Sub48014 = keras.layers.Subtract(name = 'Sub48014', )([in0Sub48014,in1Sub48014])
Zer32238 = keras.layers.ZeroPadding3D(padding=((1, 0), (1, 0), (2, 0)), name = 'Zer32238', )(Sub48014)
Max75727 = keras.layers.Maximum(name = 'Max75727', )([Con76187,Zer32238])
Sub53839 = keras.layers.Subtract(name = 'Sub53839', )([Con64516,Max75727])
Res71736 = keras.layers.Reshape((3, 3, 15), name = 'Res71736', )(Sub53839)
Glo2955 = keras.layers.GlobalAveragePooling2D(name = 'Glo2955', )(Res71736)
model = tf.keras.models.Model(inputs=[in0Sub54956,in1Sub54956,in0Con64516,in0Dot46621,in1Dot46621,in0Con76187,in0Sub48014,in1Sub48014], outputs=Glo2955)
in0Sub54956 = tf.constant([[0.1793, 0.008, 0.6369]])
in1Sub54956 = tf.constant([[0.3213, 0.8715, 0.2367]])
in0Con64516 = tf.constant([[[[[0.0781, 0.7606], [0.3549, 0.1265], [0.2132, 0.1018], [0.0294, 0.0475], [0.9887, 0.8484]], [[0.9849, 0.4838], [0.2965, 0.1124], [0.1802, 0.9209], [0.5347, 0.7144], [0.8949, 0.8487]], [[0.1748, 0.7433], [0.1766, 0.0436], [0.9175, 0.9333], [0.2008, 0.0769], [0.6127, 0.9002]]], [[[0.6894, 0.1116], [0.4462, 0.5197], [0.7491, 0.8062], [0.2434, 0.243], [0.2301, 0.6708]], [[0.1255, 0.9438], [0.984, 0.5383], [0.1717, 0.9719], [0.2018, 0.9067], [0.1806, 0.4457]], [[0.3536, 0.7847], [0.1097, 0.4605], [0.1155, 0.3291], [0.2733, 0.8095], [0.0726, 0.0027]]], [[[0.9242, 0.0223], [0.915, 0.2002], [0.4131, 0.0059], [0.3068, 0.2902], [0.7243, 0.3453]], [[0.6011, 0.8037], [0.8169, 0.3644], [0.0974, 0.0652], [0.8696, 0.3791], [0.5963, 0.9023]], [[0.2211, 0.1849], [0.5891, 0.2014], [0.5253, 0.7111], [0.5421, 0.9811], [0.4011, 0.9495]]]]])
in0Dot46621 = tf.constant([[[0.345, 0.213, 0.3518], [0.2328, 0.9821, 0.6208], [0.0166, 0.0549, 0.8373]]])
in1Dot46621 = tf.constant([[[0.4176, 0.8801, 0.6488], [0.7573, 0.1516, 0.637], [0.1945, 0.3717, 0.2568]]])
in0Con76187 = tf.constant([[[[[0.5671, 0.16], [0.9063, 0.7811], [0.9177, 0.6886], [0.8396, 0.774], [0.0062, 0.5521]], [[0.7527, 0.4231], [0.4862, 0.2541], [0.8658, 0.089], [0.9041, 0.2003], [0.0148, 0.8448]], [[0.656, 0.8793], [0.8688, 0.4982], [0.1602, 0.3469], [0.3496, 0.9371], [0.0646, 0.9027]]], [[[0.9717, 0.1212], [0.8303, 0.0003], [0.4178, 0.3959], [0.9593, 0.2438], [0.171, 0.3182]], [[0.465, 0.7882], [0.4348, 0.8556], [0.9281, 0.582], [0.8913, 0.6398], [0.6202, 0.6715]], [[0.0695, 0.9423], [0.7343, 0.2187], [0.2266, 0.1755], [0.7159, 0.9751], [0.6817, 0.0153]]], [[[0.055, 0.7041], [0.4821, 0.6943], [0.668, 0.4429], [0.1336, 0.6182], [0.1763, 0.5598]], [[0.8784, 0.2231], [0.971, 0.2741], [0.6663, 0.9085], [0.9433, 0.6806], [0.5339, 0.9571]], [[0.154, 0.3482], [0.5774, 0.5843], [0.5181, 0.2463], [0.086, 0.6458], [0.7898, 0.0945]]]]])
in0Sub48014 = tf.constant([[[[[0.9466, 0.2826, 0.1855], [0.2443, 0.0671, 0.4422], [0.126, 0.2742, 0.0116]], [[0.2445, 0.5561, 0.2292], [0.4678, 0.1908, 0.7315], [0.9081, 0.8241, 0.8631]]], [[[0.172, 0.2426, 0.7822], [0.3593, 0.4403, 0.5047], [0.1972, 0.8679, 0.3791]], [[0.3137, 0.9866, 0.3457], [0.9417, 0.8804, 0.1739], [0.6527, 0.3732, 0.3332]]]]])
in1Sub48014 = tf.constant([[[[[0.3923, 0.1737, 0.644], [0.1569, 0.4655, 0.9075], [0.7234, 0.7485, 0.0014]], [[0.2424, 0.4879, 0.8413], [0.289, 0.1518, 0.805], [0.0843, 0.1715, 0.3406]]], [[[0.6082, 0.3744, 0.9841], [0.9564, 0.5813, 0.6364], [0.0914, 0.8337, 0.4106]], [[0.6192, 0.0368, 0.8869], [0.4289, 0.9358, 0.8237], [0.186, 0.8784, 0.0124]]]]])
print (np.array2string(model.predict([in0Sub54956,in1Sub54956,in0Con64516,in0Dot46621,in1Dot46621,in0Con76187,in0Sub48014,in1Sub48014],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Glo2955.png')

LSub54956 = subtract_layer([[0.1793, 0.008, 0.6369]], [[0.3213, 0.8715, 0.2367]], Sub54956), 
LRes7678 = reshape_layer(Sub54956, [3, 1], Res7678), 
LRes49834 = reshape_layer(Res7678, [3, 1, 1], Res49834), 
LRes48746 = reshape_layer(Res49834, [3, 1, 1, 1], Res48746), 
LZer47280 = zero_padding3D_layer(Res48746, 0, 0, 2, 0, 4, 0, Zer47280), 
LCon64516 = concatenate_layer([Zer47280,[[[[[0.0781, 0.7606], [0.3549, 0.1265], [0.2132, 0.1018], [0.0294, 0.0475], [0.9887, 0.8484]], [[0.9849, 0.4838], [0.2965, 0.1124], [0.1802, 0.9209], [0.5347, 0.7144], [0.8949, 0.8487]], [[0.1748, 0.7433], [0.1766, 0.0436], [0.9175, 0.9333], [0.2008, 0.0769], [0.6127, 0.9002]]], [[[0.6894, 0.1116], [0.4462, 0.5197], [0.7491, 0.8062], [0.2434, 0.243], [0.2301, 0.6708]], [[0.1255, 0.9438], [0.984, 0.5383], [0.1717, 0.9719], [0.2018, 0.9067], [0.1806, 0.4457]], [[0.3536, 0.7847], [0.1097, 0.4605], [0.1155, 0.3291], [0.2733, 0.8095], [0.0726, 0.0027]]], [[[0.9242, 0.0223], [0.915, 0.2002], [0.4131, 0.0059], [0.3068, 0.2902], [0.7243, 0.3453]], [[0.6011, 0.8037], [0.8169, 0.3644], [0.0974, 0.0652], [0.8696, 0.3791], [0.5963, 0.9023]], [[0.2211, 0.1849], [0.5891, 0.2014], [0.5253, 0.7111], [0.5421, 0.9811], [0.4011, 0.9495]]]]]], 4, Con64516), 
LDot46621 = dot_layer([[[0.345, 0.213, 0.3518], [0.2328, 0.9821, 0.6208], [0.0166, 0.0549, 0.8373]]], [[[0.4176, 0.8801, 0.6488], [0.7573, 0.1516, 0.637], [0.1945, 0.3717, 0.2568]]], 2, 1, Dot46621), 
LRes29307 = reshape_layer(Dot46621, [3, 3, 1], Res29307), 
LRes45793 = reshape_layer(Res29307, [3, 3, 1, 1], Res45793), 
LZer54075 = zero_padding3D_layer(Res45793, 0, 0, 0, 0, 4, 0, Zer54075), 
LCon76187 = concatenate_layer([Zer54075,[[[[[0.5671, 0.16], [0.9063, 0.7811], [0.9177, 0.6886], [0.8396, 0.774], [0.0062, 0.5521]], [[0.7527, 0.4231], [0.4862, 0.2541], [0.8658, 0.089], [0.9041, 0.2003], [0.0148, 0.8448]], [[0.656, 0.8793], [0.8688, 0.4982], [0.1602, 0.3469], [0.3496, 0.9371], [0.0646, 0.9027]]], [[[0.9717, 0.1212], [0.8303, 0.0003], [0.4178, 0.3959], [0.9593, 0.2438], [0.171, 0.3182]], [[0.465, 0.7882], [0.4348, 0.8556], [0.9281, 0.582], [0.8913, 0.6398], [0.6202, 0.6715]], [[0.0695, 0.9423], [0.7343, 0.2187], [0.2266, 0.1755], [0.7159, 0.9751], [0.6817, 0.0153]]], [[[0.055, 0.7041], [0.4821, 0.6943], [0.668, 0.4429], [0.1336, 0.6182], [0.1763, 0.5598]], [[0.8784, 0.2231], [0.971, 0.2741], [0.6663, 0.9085], [0.9433, 0.6806], [0.5339, 0.9571]], [[0.154, 0.3482], [0.5774, 0.5843], [0.5181, 0.2463], [0.086, 0.6458], [0.7898, 0.0945]]]]]], 4, Con76187), 
LSub48014 = subtract_layer([[[[[0.9466, 0.2826, 0.1855], [0.2443, 0.0671, 0.4422], [0.126, 0.2742, 0.0116]], [[0.2445, 0.5561, 0.2292], [0.4678, 0.1908, 0.7315], [0.9081, 0.8241, 0.8631]]], [[[0.172, 0.2426, 0.7822], [0.3593, 0.4403, 0.5047], [0.1972, 0.8679, 0.3791]], [[0.3137, 0.9866, 0.3457], [0.9417, 0.8804, 0.1739], [0.6527, 0.3732, 0.3332]]]]], [[[[[0.3923, 0.1737, 0.644], [0.1569, 0.4655, 0.9075], [0.7234, 0.7485, 0.0014]], [[0.2424, 0.4879, 0.8413], [0.289, 0.1518, 0.805], [0.0843, 0.1715, 0.3406]]], [[[0.6082, 0.3744, 0.9841], [0.9564, 0.5813, 0.6364], [0.0914, 0.8337, 0.4106]], [[0.6192, 0.0368, 0.8869], [0.4289, 0.9358, 0.8237], [0.186, 0.8784, 0.0124]]]]], Sub48014), 
LZer32238 = zero_padding3D_layer(Sub48014, 1, 0, 1, 0, 2, 0, Zer32238), 
LMax75727 = maximum_layer([Con76187,Zer32238], Max75727), 
LSub53839 = subtract_layer(Con64516,Max75727, Sub53839), 
LRes71736 = reshape_layer(Sub53839, [3, 3, 15], Res71736), 
LGlo2955 = global_average_pooling2D_layer(Res71736, Glo2955), 
exec_layers([LSub54956,LRes7678,LRes49834,LRes48746,LZer47280,LCon64516,LDot46621,LRes29307,LRes45793,LZer54075,LCon76187,LSub48014,LZer32238,LMax75727,LSub53839,LRes71736,LGlo2955],["Sub54956","Res7678","Res49834","Res48746","Zer47280","Con64516","Dot46621","Res29307","Res45793","Zer54075","Con76187","Sub48014","Zer32238","Max75727","Sub53839","Res71736","Glo2955"],Glo2955,"Glo2955")

Actual (Unparsed): [[0.0000000, -0.0463000, 0.0276889, 0.0000000, -0.1780333, -0.1770778, -0.0618222, -0.2685889, 0.1077556, -0.0865556, -0.2912000, -0.1407000, -0.5989069, 0.1825333, 0.0293444]]

Expected (Unparsed): [[0,-0.04630000000000003,0.027688888888888874,0,-0.17803333333333335,-0.17707777777777778,-0.06182222222222222,-0.26858888888888893,0.10775555555555559,-0.08655555555555555,-0.29120000000000007,-0.1407,-0.5989069199999999,0.18253333333333335,0.029344444444444475]]

Actual:   [[0, -0.0463, 0.0277, 0, -0.178, -0.177, -0.0618, -0.2685, 0.1078, -0.0865, -0.2912, -0.1407, -0.5989, 0.1826, 0.0294]]

Expected: [[0, -0.0463, 0.0277, 0, -0.178, -0.177, -0.0618, -0.2685, 0.1078, -0.0865, -0.2912, -0.1407, -0.5989, 0.1826, 0.0294]]