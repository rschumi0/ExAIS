import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Ave52769 = tf.keras.layers.Input(shape=([1, 1]))
in0Con66871 = tf.keras.layers.Input(shape=([2, 1, 1, 1]))
in0Ave70926 = tf.keras.layers.Input(shape=([2, 1, 1, 2]))
in1Ave70926 = tf.keras.layers.Input(shape=([2, 1, 1, 2]))
in0Min42800 = tf.keras.layers.Input(shape=([1, 2, 2]))
in1Min42800 = tf.keras.layers.Input(shape=([1, 2, 2]))
in0Con66473 = tf.keras.layers.Input(shape=([2, 2]))
in0Sof73668 = tf.keras.layers.Input(shape=([2, 1, 1]))
in0Cro24527 = tf.keras.layers.Input(shape=([2, 3, 4]))

Ave52769 = keras.layers.AveragePooling1D(pool_size=(1), strides=(4), padding='same', name = 'Ave52769', )(in0Ave52769)
Res5676 = keras.layers.Reshape((1, 1, 1), name = 'Res5676', )(Ave52769)
Res46900 = keras.layers.Reshape((1, 1, 1, 1), name = 'Res46900', )(Res5676)
Zer69674 = keras.layers.ZeroPadding3D(padding=((1, 0), (0, 0), (0, 0)), name = 'Zer69674', )(Res46900)
Con66871 = keras.layers.Concatenate(axis=4, name = 'Con66871', )([Zer69674,in0Con66871])
Ave70926 = keras.layers.Average(name = 'Ave70926', )([in0Ave70926,in1Ave70926])
Min63268 = keras.layers.Minimum(name = 'Min63268', )([Con66871,Ave70926])
Res3242 = keras.layers.Reshape((2, 1, 2), name = 'Res3242', )(Min63268)
Zer39701 = keras.layers.ZeroPadding2D(padding=((0, 0), (2, 0)), name = 'Zer39701', )(Res3242)
Min42800 = keras.layers.Minimum(name = 'Min42800', )([in0Min42800,in1Min42800])
Zer98231 = keras.layers.ZeroPadding2D(padding=((1, 0), (1, 0)), name = 'Zer98231', )(Min42800)
Sub32283 = keras.layers.Subtract(name = 'Sub32283', )([Zer39701,Zer98231])
Res8321 = keras.layers.Reshape((2, 6), name = 'Res8321', )(Sub32283)
Con66473 = keras.layers.Concatenate(axis=2, name = 'Con66473', )([Res8321,in0Con66473])
Sof73668 = keras.layers.Softmax(axis=1, name = 'Sof73668', input_shape=(2, 1, 1))(in0Sof73668)
Res9669 = keras.layers.Reshape((2, 1), name = 'Res9669', )(Sof73668)
Cro24527 = keras.layers.Cropping2D(cropping=((1, 0), (0, 1)), name = 'Cro24527', )(in0Cro24527)
Res94992 = keras.layers.Reshape((1, 8), name = 'Res94992', )(Cro24527)
Zer16403 = keras.layers.ZeroPadding1D(padding=((1, 0)), name = 'Zer16403', )(Res94992)
Dot99724 = keras.layers.Dot(axes=(1, 1), name = 'Dot99724', )([Res9669,Zer16403])
Up_24441 = keras.layers.UpSampling1D(size=(2), name = 'Up_24441', )(Dot99724)
Mul29298 = keras.layers.Multiply(name = 'Mul29298', )([Con66473,Up_24441])
model = tf.keras.models.Model(inputs=[in0Ave52769,in0Con66871,in0Ave70926,in1Ave70926,in0Min42800,in1Min42800,in0Con66473,in0Sof73668,in0Cro24527], outputs=Mul29298)
in0Ave52769 = tf.constant([[[1.9867]]])
in0Con66871 = tf.constant([[[[[0.0825]]], [[[0.8097]]]]])
in0Ave70926 = tf.constant([[[[[0.33, 0.8658]]], [[[0.5505, 0.6753]]]]])
in1Ave70926 = tf.constant([[[[[0.0306, 0.0418]]], [[[0.5806, 0.5703]]]]])
in0Min42800 = tf.constant([[[[0.2736, 0.7291], [0.1246, 0.7298]]]])
in1Min42800 = tf.constant([[[[0.1959, 0.3748], [0.3824, 0.8276]]]])
in0Con66473 = tf.constant([[[0.5825, 0.2889], [0.5203, 0.1669]]])
in0Sof73668 = tf.constant([[[[0.6447]], [[0.9349]]]])
in0Cro24527 = tf.constant([[[[1.7903, 1.6534, 1.4913, 1.4363], [1.2106, 1.0676, 1.1733, 1.4418], [1.767, 1.5285, 1.5222, 1.1825]], [[1.5692, 1.3288, 1.5944, 1.2207], [1.4249, 1.1061, 1.5252, 1.5107], [1.6524, 1.0245, 1.3982, 1.6351]]]])
print (np.array2string(model.predict([in0Ave52769,in0Con66871,in0Ave70926,in1Ave70926,in0Min42800,in1Min42800,in0Con66473,in0Sof73668,in0Cro24527],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Mul29298.png')

LAve52769 = average_pooling1D_layer([[[1.9867]]], 1, 4, true, Ave52769), 
LRes5676 = reshape_layer(Ave52769, [1, 1, 1], Res5676), 
LRes46900 = reshape_layer(Res5676, [1, 1, 1, 1], Res46900), 
LZer69674 = zero_padding3D_layer(Res46900, 1, 0, 0, 0, 0, 0, Zer69674), 
LCon66871 = concatenate_layer([Zer69674,[[[[[0.0825]]], [[[0.8097]]]]]], 4, Con66871), 
LAve70926 = average_layer([[[[[[0.33, 0.8658]]], [[[0.5505, 0.6753]]]]], [[[[[0.0306, 0.0418]]], [[[0.5806, 0.5703]]]]]], Ave70926), 
LMin63268 = minimum_layer([Con66871,Ave70926], Min63268), 
LRes3242 = reshape_layer(Min63268, [2, 1, 2], Res3242), 
LZer39701 = zero_padding2D_layer(Res3242, 0, 0, 2, 0, Zer39701), 
LMin42800 = minimum_layer([[[[[0.2736, 0.7291], [0.1246, 0.7298]]]], [[[[0.1959, 0.3748], [0.3824, 0.8276]]]]], Min42800), 
LZer98231 = zero_padding2D_layer(Min42800, 1, 0, 1, 0, Zer98231), 
LSub32283 = subtract_layer(Zer39701,Zer98231, Sub32283), 
LRes8321 = reshape_layer(Sub32283, [2, 6], Res8321), 
LCon66473 = concatenate_layer([Res8321,[[[0.5825, 0.2889], [0.5203, 0.1669]]]], 2, Con66473), 
LSof73668 = softmax_layer([[[[0.6447]], [[0.9349]]]], 1, Sof73668), 
LRes9669 = reshape_layer(Sof73668, [2, 1], Res9669), 
LCro24527 = cropping2D_layer([[[[1.7903, 1.6534, 1.4913, 1.4363], [1.2106, 1.0676, 1.1733, 1.4418], [1.767, 1.5285, 1.5222, 1.1825]], [[1.5692, 1.3288, 1.5944, 1.2207], [1.4249, 1.1061, 1.5252, 1.5107], [1.6524, 1.0245, 1.3982, 1.6351]]]], 1, 0, 0, 1, Cro24527), 
LRes94992 = reshape_layer(Cro24527, [1, 8], Res94992), 
LZer16403 = zero_padding1D_layer(Res94992, 1, 0, Zer16403), 
LDot99724 = dot_layer(Res9669,Zer16403, 1, 1, Dot99724), 
LUp_24441 = up_sampling1D_layer(Dot99724, 2, Up_24441), 
LMul29298 = multiply_layer([Con66473,Up_24441], Mul29298), 
exec_layers([LAve52769,LRes5676,LRes46900,LZer69674,LCon66871,LAve70926,LMin63268,LRes3242,LZer39701,LMin42800,LZer98231,LSub32283,LRes8321,LCon66473,LSof73668,LRes9669,LCro24527,LRes94992,LZer16403,LDot99724,LUp_24441,LMul29298],["Ave52769","Res5676","Res46900","Zer69674","Con66871","Ave70926","Min63268","Res3242","Zer39701","Min42800","Zer98231","Sub32283","Res8321","Con66473","Sof73668","Res9669","Cro24527","Res94992","Zer16403","Dot99724","Up_24441","Mul29298"],Mul29298,"Mul29298")

Actual (Unparsed): [[[0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0522010, 0.5082214, 0.2496641], [0.0000000, 0.0000000, -0.1786743, -0.2617211, 0.3594215, -0.0677031, 0.4539530, 0.1442331]]]

Expected (Unparsed): [[[0.0,0.0,0.0,0.0,0.0,0.05220097411437566,0.5082214521834636,0.24966406511194145],[0.0,0.0,-0.1786742583937281,-0.26172113395645197,0.3594214566217346,-0.06770308157864478,0.4539529984052465,0.14423306496082736]]]

Actual:   [[[0, 0, 0, 0, 0, 0.0523, 0.5083, 0.2497], [0, 0, -0.1786, -0.2617, 0.3595, -0.0677, 0.454, 0.1443]]]

Expected: [[[0, 0, 0, 0, 0, 0.0523, 0.5083, 0.2497], [0, 0, -0.1786, -0.2617, 0.3595, -0.0677, 0.454, 0.1443]]]