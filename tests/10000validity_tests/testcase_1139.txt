import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Mul54870 = tf.keras.layers.Input(shape=([1, 1, 2]))
in1Mul54870 = tf.keras.layers.Input(shape=([1, 1, 2]))

Mul54870 = keras.layers.Multiply(name = 'Mul54870', )([in0Mul54870,in1Mul54870])
ReL19411 = keras.layers.ReLU(max_value=0.04053460527073462, negative_slope=1.9131872454606014, threshold=7.366110637892299, name = 'ReL19411', )(Mul54870)
Res64791 = keras.layers.Reshape((1, 1, 2, 1), name = 'Res64791', )(ReL19411)
Glo26260 = keras.layers.GlobalMaxPool3D(name = 'Glo26260', )(Res64791)
model = tf.keras.models.Model(inputs=[in0Mul54870,in1Mul54870], outputs=Glo26260)
in0Mul54870 = tf.constant([[[[0.3729, 0.4879]]]])
in1Mul54870 = tf.constant([[[[0.8526, 0.1782]]]])
print (np.array2string(model.predict([in0Mul54870,in1Mul54870],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Glo26260.png')

LMul54870 = multiply_layer([[[[[0.3729, 0.4879]]]], [[[[0.8526, 0.1782]]]]], Mul54870), 
LReL19411 = relu_layer(Mul54870, 0.04053460527073462, 1.9131872454606014, 7.366110637892299, ReL19411), 
LRes64791 = reshape_layer(ReL19411, [1, 1, 2, 1], Res64791), 
LGlo26260 = global_max_pool3D_layer(Res64791, Glo26260), 
exec_layers([LMul54870,LReL19411,LRes64791,LGlo26260],["Mul54870","ReL19411","Res64791","Glo26260"],Glo26260,"Glo26260")

Actual (Unparsed): [[-13.4844806]]

Expected (Unparsed): [[-13.484480614247818]]

Actual:   [[-13.4844]]

Expected: [[-13.4844]]