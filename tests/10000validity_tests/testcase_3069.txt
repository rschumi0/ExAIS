import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Glo46108 = tf.keras.layers.Input(shape=([1, 1]))

Glo46108 = keras.layers.GlobalMaxPool1D(name = 'Glo46108', )(in0Glo46108)
Res60558 = keras.layers.Reshape((1, 1), name = 'Res60558', )(Glo46108)
Res61225 = keras.layers.Reshape((1, 1, 1), name = 'Res61225', )(Res60558)
Res95861 = keras.layers.Reshape((1, 1, 1, 1), name = 'Res95861', )(Res61225)
Zer13183 = keras.layers.ZeroPadding3D(padding=((1, 1), (1, 1), (1, 1)), name = 'Zer13183', )(Res95861)
model = tf.keras.models.Model(inputs=[in0Glo46108], outputs=Zer13183)
in0Glo46108 = tf.constant([[[1.4614]]])
print (np.array2string(model.predict([in0Glo46108],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Zer13183.png')

LGlo46108 = global_max_pool1D_layer([[[1.4614]]], Glo46108), 
LRes60558 = reshape_layer(Glo46108, [1, 1], Res60558), 
LRes61225 = reshape_layer(Res60558, [1, 1, 1], Res61225), 
LRes95861 = reshape_layer(Res61225, [1, 1, 1, 1], Res95861), 
LZer13183 = zero_padding3D_layer(Res95861, 1, 1, 1, 1, 1, 1, Zer13183), 
exec_layers([LGlo46108,LRes60558,LRes61225,LRes95861,LZer13183],["Glo46108","Res60558","Res61225","Res95861","Zer13183"],Zer13183,"Zer13183")

Actual (Unparsed): [[[[[0.0000000], [0.0000000], [0.0000000]], [[0.0000000], [0.0000000], [0.0000000]], [[0.0000000], [0.0000000], [0.0000000]]], [[[0.0000000], [0.0000000], [0.0000000]], [[0.0000000], [1.4614000], [0.0000000]], [[0.0000000], [0.0000000], [0.0000000]]], [[[0.0000000], [0.0000000], [0.0000000]], [[0.0000000], [0.0000000], [0.0000000]], [[0.0000000], [0.0000000], [0.0000000]]]]]

Expected (Unparsed): [[[[[0],[0],[0]],[[0],[0],[0]],[[0],[0],[0]]],[[[0],[0],[0]],[[0],[1.4614],[0]],[[0],[0],[0]]],[[[0],[0],[0]],[[0],[0],[0]],[[0],[0],[0]]]]]

Actual:   [[[[[0], [0], [0]], [[0], [0], [0]], [[0], [0], [0]]], [[[0], [0], [0]], [[0], [1.4614], [0]], [[0], [0], [0]]], [[[0], [0], [0]], [[0], [0], [0]], [[0], [0], [0]]]]]

Expected: [[[[[0], [0], [0]], [[0], [0], [0]], [[0], [0], [0]]], [[[0], [0], [0]], [[0], [1.4614], [0]], [[0], [0], [0]]], [[[0], [0], [0]], [[0], [0], [0]], [[0], [0], [0]]]]]