import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Min29180 = tf.keras.layers.Input(shape=([2, 1, 1, 1]))
in1Min29180 = tf.keras.layers.Input(shape=([2, 1, 1, 1]))
in0Con77385 = tf.keras.layers.Input(shape=([2, 1, 1, 3]))
in0PRe53079 = tf.keras.layers.Input(shape=([1, 1, 1, 2]))

Min29180 = keras.layers.Minimum(name = 'Min29180', )([in0Min29180,in1Min29180])
Con77385 = keras.layers.Concatenate(axis=4, name = 'Con77385', )([Min29180,in0Con77385])
PRe53079 = keras.layers.PReLU(name = 'PRe53079', input_shape=(1, 1, 1, 2))(in0PRe53079)
Con20157 = keras.layers.Conv3D(4, (1, 1, 1),strides=(1, 1, 1), padding='valid', dilation_rate=(1, 1, 1), name = 'Con20157', )(PRe53079)
Zer9344 = keras.layers.ZeroPadding3D(padding=((1, 0), (0, 0), (0, 0)), name = 'Zer9344', )(Con20157)
Add26549 = keras.layers.Add(name = 'Add26549', )([Con77385,Zer9344])
Res55840 = keras.layers.Reshape((2, 1, 4), name = 'Res55840', )(Add26549)
Res40915 = keras.layers.Reshape((2, 4), name = 'Res40915', )(Res55840)
LST6734 = keras.layers.LSTM(3,recurrent_activation='sigmoid', name = 'LST6734', )(Res40915)
model = tf.keras.models.Model(inputs=[in0Min29180,in1Min29180,in0Con77385,in0PRe53079], outputs=LST6734)
w = model.get_layer('PRe53079').get_weights() 
w[0] = np.array([[[[0.5779, 0.5737]]]])
model.get_layer('PRe53079').set_weights(w) 
w = model.get_layer('Con20157').get_weights() 
w[0] = np.array([[[[[0.3195, 0.6001, 0.6398, 0.8565], [0.9395, 0.2024, 0.3819, 0.4149]]]]])
w[1] = np.array([0, 0, 0, 0])
model.get_layer('Con20157').set_weights(w) 
w = model.get_layer('LST6734').get_weights() 
w[0] = np.array([[6, 8, 10, 8, 2, 2, 10, 8, 2, 1, 5, 10], [10, 5, 2, 7, 2, 10, 5, 5, 2, 1, 9, 6], [4, 10, 3, 6, 3, 9, 8, 7, 10, 8, 3, 3], [3, 5, 8, 6, 9, 8, 7, 7, 3, 4, 3, 9]])
w[1] = np.array([[3, 2, 6, 6, 5, 9, 1, 6, 6, 1, 7, 4], [3, 1, 3, 9, 3, 3, 1, 6, 1, 3, 6, 2], [9, 9, 4, 10, 1, 3, 2, 4, 7, 2, 8, 9]])
w[2] = np.array([9, 3, 2, 10, 9, 5, 4, 9, 3, 4, 5, 8])
model.get_layer('LST6734').set_weights(w) 
in0Min29180 = tf.constant([[[[[0.1858]]], [[[0.006]]]]])
in1Min29180 = tf.constant([[[[[0.1431]]], [[[0.4992]]]]])
in0Con77385 = tf.constant([[[[[0.3933, 0.5716, 0.2319]]], [[[0.7691, 0.8561, 0.7342]]]]])
in0PRe53079 = tf.constant([[[[[0.659, 0.1114]]]]])
print (np.array2string(model.predict([in0Min29180,in1Min29180,in0Con77385,in0PRe53079],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='LST6734.png')

LMin29180 = minimum_layer([[[[[[0.1858]]], [[[0.006]]]]], [[[[[0.1431]]], [[[0.4992]]]]]], Min29180), 
LCon77385 = concatenate_layer([Min29180,[[[[[0.3933, 0.5716, 0.2319]]], [[[0.7691, 0.8561, 0.7342]]]]]], 4, Con77385), 
LPRe53079 = prelu_layer([[[[[0.659, 0.1114]]]]], [[[[0.5779, 0.5737]]]], PRe53079), 
LCon20157 = conv3D_layer(PRe53079, 1, 1, 1,[[[[[0.3195, 0.6001, 0.6398, 0.8565], [0.9395, 0.2024, 0.3819, 0.4149]]]]],[0, 0, 0, 0], 1, 1, 1, false, 1, 1, 1, Con20157), 
LZer9344 = zero_padding3D_layer(Con20157, 1, 0, 0, 0, 0, 0, Zer9344), 
LAdd26549 = add_layer([Con77385,Zer9344], Add26549), 
LRes55840 = reshape_layer(Add26549, [2, 1, 4], Res55840), 
LRes40915 = reshape_layer(Res55840, [2, 4], Res40915), 
LLST6734 = lstm_layer(Res40915,[[6, 8, 10, 8, 2, 2, 10, 8, 2, 1, 5, 10], [10, 5, 2, 7, 2, 10, 5, 5, 2, 1, 9, 6], [4, 10, 3, 6, 3, 9, 8, 7, 10, 8, 3, 3], [3, 5, 8, 6, 9, 8, 7, 7, 3, 4, 3, 9]],[[3, 2, 6, 6, 5, 9, 1, 6, 6, 1, 7, 4], [3, 1, 3, 9, 3, 3, 1, 6, 1, 3, 6, 2], [9, 9, 4, 10, 1, 3, 2, 4, 7, 2, 8, 9]],[9, 3, 2, 10, 9, 5, 4, 9, 3, 4, 5, 8], LST6734), 
exec_layers([LMin29180,LCon77385,LPRe53079,LCon20157,LZer9344,LAdd26549,LRes55840,LRes40915,LLST6734],["Min29180","Con77385","PRe53079","Con20157","Zer9344","Add26549","Res55840","Res40915","LST6734"],LST6734,"LST6734")

Actual (Unparsed): [[0.9640276, 0.9640274, 0.9639983]]

Expected (Unparsed): [[0.9640275764030805,0.9640274182597565,0.963998271098705]]

Actual:   [[0.9641, 0.9641, 0.964]]

Expected: [[0.9641, 0.9641, 0.964]]