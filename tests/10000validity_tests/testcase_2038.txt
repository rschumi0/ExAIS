import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Dep78502 = tf.keras.layers.Input(shape=([2, 2, 1]))
in0LST93391 = tf.keras.layers.Input(shape=([3, 1]))
in0Con63162 = tf.keras.layers.Input(shape=([3, 3, 3, 1]))
in0Sub25533 = tf.keras.layers.Input(shape=([3, 3, 3, 2]))
in1Sub25533 = tf.keras.layers.Input(shape=([3, 3, 3, 2]))

Dep78502 = keras.layers.DepthwiseConv2D((2, 1),strides=(1, 1), padding='same', name = 'Dep78502', )(in0Dep78502)
LST93391 = keras.layers.LSTM(2,recurrent_activation='sigmoid', name = 'LST93391', )(in0LST93391)
Res69542 = keras.layers.Reshape((2, 1), name = 'Res69542', )(LST93391)
Res90668 = keras.layers.Reshape((2, 1, 1), name = 'Res90668', )(Res69542)
Max44381 = keras.layers.MaxPool2D(pool_size=(1, 1), strides=(3, 1), padding='valid', name = 'Max44381', )(Res90668)
Zer22782 = keras.layers.ZeroPadding2D(padding=((1, 0), (1, 0)), name = 'Zer22782', )(Max44381)
Add35161 = keras.layers.Add(name = 'Add35161', )([Dep78502,Zer22782])
Res34844 = keras.layers.Reshape((2, 2, 1, 1), name = 'Res34844', )(Add35161)
Zer27991 = keras.layers.ZeroPadding3D(padding=((1, 0), (1, 0), (2, 0)), name = 'Zer27991', )(Res34844)
Con63162 = keras.layers.Concatenate(axis=4, name = 'Con63162', )([Zer27991,in0Con63162])
Sub25533 = keras.layers.Subtract(name = 'Sub25533', )([in0Sub25533,in1Sub25533])
Mas20532 = keras.layers.Masking(mask_value=1, name = 'Mas20532', )(Sub25533)
Sub86958 = keras.layers.Subtract(name = 'Sub86958', )([Con63162,Mas20532])
model = tf.keras.models.Model(inputs=[in0Dep78502,in0LST93391,in0Con63162,in0Sub25533,in1Sub25533], outputs=Sub86958)
w = model.get_layer('Dep78502').get_weights() 
w[0] = np.array([[[[0.7826]]], [[[0.5568]]]])
w[1] = np.array([0])
model.get_layer('Dep78502').set_weights(w) 
w = model.get_layer('LST93391').get_weights() 
w[0] = np.array([[10, 5, 8, 4, 3, 3, 9, 5]])
w[1] = np.array([[9, 8, 1, 8, 9, 8, 5, 2], [9, 4, 7, 4, 8, 10, 7, 9]])
w[2] = np.array([8, 10, 9, 7, 9, 7, 10, 9])
model.get_layer('LST93391').set_weights(w) 
in0Dep78502 = tf.constant([[[[0.8003], [0.3448]], [[0.3799], [0.2087]]]])
in0LST93391 = tf.constant([[[1], [1], [6]]])
in0Con63162 = tf.constant([[[[[0.5923], [0.3964], [0.221]], [[0.0553], [0.9486], [0.6149]], [[0.7023], [0.7936], [0.3801]]], [[[0.2967], [0.9915], [0.7881]], [[0.6193], [0.2212], [0.476]], [[0.8847], [0.8241], [0.0184]]], [[[0.967], [0.5054], [0.9679]], [[0.3545], [0.2474], [0.9118]], [[0.9772], [0.7937], [0.9163]]]]])
in0Sub25533 = tf.constant([[[[[0.0628, 0.6243], [0.4494, 0.5583], [0.9604, 0.2182]], [[0.0846, 0.753], [0.3519, 0.8055], [0.628, 0.5473]], [[0.8734, 0.93], [0.1055, 0.0811], [0.6822, 0.5342]]], [[[0.3473, 0.3521], [0.217, 0.6269], [0.0568, 0.9351]], [[0.5519, 0.0763], [0.6052, 0.463], [0.0473, 0.3914]], [[0.0742, 0.7569], [0.5814, 0.6579], [0.6604, 0.436]]], [[[0.5049, 0.6327], [0.9346, 0.8156], [0.6039, 0.3692]], [[0.6034, 0.9131], [0.7798, 0.6453], [0.3615, 0.4181]], [[0.8565, 0.8949], [0.1398, 0.5563], [0.9138, 0.3092]]]]])
in1Sub25533 = tf.constant([[[[[0.5601, 0.88], [0.8091, 0.2627], [0.6828, 0.1489]], [[0.101, 0.2474], [0.2048, 0.6338], [0.4142, 0.0515]], [[0.1033, 0.3683], [0.3969, 0.0074], [0.3512, 0.1044]]], [[[0.8148, 0.7507], [0.7349, 0.9843], [0.9955, 0.0833]], [[0.9956, 0.2315], [0.7941, 0.2114], [0.4816, 0.4868]], [[0.4852, 0.8446], [0.2552, 0.7654], [0.5022, 0.3819]]], [[[0.1251, 0.3961], [0.7438, 0.6881], [0.3906, 0.7184]], [[0.2463, 0.7676], [0.181, 0.7607], [0.3813, 0.9795]], [[0.1439, 0.5976], [0.3777, 0.3083], [0.9, 0.5964]]]]])
print (np.array2string(model.predict([in0Dep78502,in0LST93391,in0Con63162,in0Sub25533,in1Sub25533],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Sub86958.png')

LDep78502 = depthwise_conv2D_layer([[[[0.8003], [0.3448]], [[0.3799], [0.2087]]]], 2, 1,[[[[0.7826]]], [[[0.5568]]]],[0], 1, 1, true, Dep78502), 
LLST93391 = lstm_layer([[[1], [1], [6]]],[[10, 5, 8, 4, 3, 3, 9, 5]],[[9, 8, 1, 8, 9, 8, 5, 2], [9, 4, 7, 4, 8, 10, 7, 9]],[8, 10, 9, 7, 9, 7, 10, 9], LST93391), 
LRes69542 = reshape_layer(LST93391, [2, 1], Res69542), 
LRes90668 = reshape_layer(Res69542, [2, 1, 1], Res90668), 
LMax44381 = max_pool2D_layer(Res90668, 1, 1, 3, 1, false, Max44381), 
LZer22782 = zero_padding2D_layer(Max44381, 1, 0, 1, 0, Zer22782), 
LAdd35161 = add_layer([Dep78502,Zer22782], Add35161), 
LRes34844 = reshape_layer(Add35161, [2, 2, 1, 1], Res34844), 
LZer27991 = zero_padding3D_layer(Res34844, 1, 0, 1, 0, 2, 0, Zer27991), 
LCon63162 = concatenate_layer([Zer27991,[[[[[0.5923], [0.3964], [0.221]], [[0.0553], [0.9486], [0.6149]], [[0.7023], [0.7936], [0.3801]]], [[[0.2967], [0.9915], [0.7881]], [[0.6193], [0.2212], [0.476]], [[0.8847], [0.8241], [0.0184]]], [[[0.967], [0.5054], [0.9679]], [[0.3545], [0.2474], [0.9118]], [[0.9772], [0.7937], [0.9163]]]]]], 4, Con63162), 
LSub25533 = subtract_layer([[[[[0.0628, 0.6243], [0.4494, 0.5583], [0.9604, 0.2182]], [[0.0846, 0.753], [0.3519, 0.8055], [0.628, 0.5473]], [[0.8734, 0.93], [0.1055, 0.0811], [0.6822, 0.5342]]], [[[0.3473, 0.3521], [0.217, 0.6269], [0.0568, 0.9351]], [[0.5519, 0.0763], [0.6052, 0.463], [0.0473, 0.3914]], [[0.0742, 0.7569], [0.5814, 0.6579], [0.6604, 0.436]]], [[[0.5049, 0.6327], [0.9346, 0.8156], [0.6039, 0.3692]], [[0.6034, 0.9131], [0.7798, 0.6453], [0.3615, 0.4181]], [[0.8565, 0.8949], [0.1398, 0.5563], [0.9138, 0.3092]]]]], [[[[[0.5601, 0.88], [0.8091, 0.2627], [0.6828, 0.1489]], [[0.101, 0.2474], [0.2048, 0.6338], [0.4142, 0.0515]], [[0.1033, 0.3683], [0.3969, 0.0074], [0.3512, 0.1044]]], [[[0.8148, 0.7507], [0.7349, 0.9843], [0.9955, 0.0833]], [[0.9956, 0.2315], [0.7941, 0.2114], [0.4816, 0.4868]], [[0.4852, 0.8446], [0.2552, 0.7654], [0.5022, 0.3819]]], [[[0.1251, 0.3961], [0.7438, 0.6881], [0.3906, 0.7184]], [[0.2463, 0.7676], [0.181, 0.7607], [0.3813, 0.9795]], [[0.1439, 0.5976], [0.3777, 0.3083], [0.9, 0.5964]]]]], Sub25533), 
LMas20532 = masking_layer(Sub25533, 1, Mas20532), 
LSub86958 = subtract_layer(Con63162,Mas20532, Sub86958), 
exec_layers([LDep78502,LLST93391,LRes69542,LRes90668,LMax44381,LZer22782,LAdd35161,LRes34844,LZer27991,LCon63162,LSub25533,LMas20532,LSub86958],["Dep78502","LST93391","Res69542","Res90668","Max44381","Zer22782","Add35161","Res34844","Zer27991","Con63162","Sub25533","Mas20532","Sub86958"],Sub86958,"Sub86958")

Actual (Unparsed): [[[[[0.4973000, 0.8480000], [0.3597000, 0.1008000], [-0.2776000, 0.1517000]], [[0.0164000, -0.4503000], [-0.1471000, 0.7769001], [-0.2138000, 0.1191000]], [[-0.7701000, 0.1406000], [0.2914000, 0.7199000], [-0.3310000, -0.0497000]]], [[[0.4675000, 0.6953000], [0.5179000, 1.3489000], [0.9387000, -0.0637000]], [[0.4437000, 0.7745000], [0.1889000, -0.0304000], [1.2721431, 0.5714000]], [[0.4110000, 0.9724000], [-0.3262000, 0.9316000], [0.2278447, -0.0357000]]], [[[-0.3798000, 0.7304000], [-0.1908000, 0.3779000], [-0.2133000, 1.3171000]], [[-0.3571000, 0.2090000], [-0.5988000, 0.3628000], [0.3171098, 1.4732000]], [[-0.7126000, 0.6798999], [0.2379000, 0.5457000], [1.1445833, 1.2035000]]]]]

Expected (Unparsed): [[[[[0.4973000000000001,0.8480000000000001],[0.3597,0.10079999999999995],[-0.27760000000000007,0.1517]],[[0.016400000000000012,-0.45030000000000003],[-0.14709999999999998,0.7769],[-0.2138,0.11909999999999998]],[[-0.7701,0.14059999999999995],[0.2914,0.7199],[-0.331,-0.04970000000000002]]],[[[0.46749999999999997,0.6953],[0.5179,1.3489],[0.9387000000000001,-0.06369999999999998]],[[0.4437000000000001,0.7745],[0.18890000000000007,-0.030400000000000038],[1.2721430999999999,0.5713999999999999]],[[0.41100000000000003,0.9724],[-0.32620000000000005,0.9316],[0.22784464,-0.03569999999999998]]],[[[-0.3798,0.7303999999999999],[-0.19079999999999997,0.3779],[-0.2133,1.3171]],[[-0.3571000000000001,0.2089999999999999],[-0.5988,0.36280000000000007],[0.31710974,1.4732]],[[-0.7126,0.6799],[0.23789999999999997,0.5457],[1.144583373534803,1.2035]]]]]

Actual:   [[[[[0.4973, 0.848], [0.3597, 0.1008], [-0.2776, 0.1517]], [[0.0164, -0.4503], [-0.1471, 0.777], [-0.2138, 0.1191]], [[-0.7701, 0.1406], [0.2914, 0.7199], [-0.331, -0.0497]]], [[[0.4675, 0.6953], [0.5179, 1.3489], [0.9387, -0.0637]], [[0.4437, 0.7745], [0.1889, -0.0304], [1.2722, 0.5714]], [[0.411, 0.9724], [-0.3262, 0.9316], [0.2279, -0.0357]]], [[[-0.3798, 0.7304], [-0.1908, 0.3779], [-0.2133, 1.3171]], [[-0.3571, 0.209], [-0.5988, 0.3628], [0.3172, 1.4732]], [[-0.7126, 0.6799], [0.2379, 0.5457], [1.1446, 1.2035]]]]]

Expected: [[[[[0.4974, 0.8481], [0.3597, 0.1008], [-0.2776, 0.1517]], [[0.0165, -0.4503], [-0.147, 0.7769], [-0.2138, 0.1191]], [[-0.7701, 0.1406], [0.2914, 0.7199], [-0.331, -0.0497]]], [[[0.4675, 0.6953], [0.5179, 1.3489], [0.9388, -0.0636]], [[0.4438, 0.7745], [0.189, -0.0304], [1.2722, 0.5714]], [[0.4111, 0.9724], [-0.3262, 0.9316], [0.2279, -0.0356]]], [[[-0.3798, 0.7304], [-0.1907, 0.3779], [-0.2133, 1.3171]], [[-0.3571, 0.209], [-0.5988, 0.3629], [0.3172, 1.4732]], [[-0.7126, 0.6799], [0.2379, 0.5457], [1.1446, 1.2035]]]]]