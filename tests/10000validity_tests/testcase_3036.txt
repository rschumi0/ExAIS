import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Lay93620 = tf.keras.layers.Input(shape=([2]))
in0Dot83873 = tf.keras.layers.Input(shape=([2]))
in1Dot83873 = tf.keras.layers.Input(shape=([2]))
in0Con52491 = tf.keras.layers.Input(shape=([1]))

Lay93620 = keras.layers.LayerNormalization(axis=1, epsilon=2.25399787561066, name = 'Lay93620', )(in0Lay93620)
Dot83873 = keras.layers.Dot(axes=(1, 1), name = 'Dot83873', )([in0Dot83873,in1Dot83873])
Con52491 = keras.layers.Concatenate(axis=1, name = 'Con52491', )([Dot83873,in0Con52491])
Ave23879 = keras.layers.Average(name = 'Ave23879', )([Lay93620,Con52491])
model = tf.keras.models.Model(inputs=[in0Lay93620,in0Dot83873,in1Dot83873,in0Con52491], outputs=Ave23879)
in0Lay93620 = tf.constant([[1.0333, 1.7527]])
in0Dot83873 = tf.constant([[0.6271, 0.1324]])
in1Dot83873 = tf.constant([[0.9211, 0.675]])
in0Con52491 = tf.constant([[0.1767]])
print (np.array2string(model.predict([in0Lay93620,in0Dot83873,in1Dot83873,in0Con52491],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Ave23879.png')

LLay93620 = layer_normalization_layer([[1.0333, 1.7527]], 1, 2.25399787561066, Lay93620), 
LDot83873 = dot_layer([[0.6271, 0.1324]], [[0.9211, 0.675]], 1, 1, Dot83873), 
LCon52491 = concatenate_layer([Dot83873,[[0.1767]]], 1, Con52491), 
LAve23879 = average_layer([Lay93620,Con52491], Ave23879), 
exec_layers([LLay93620,LDot83873,LCon52491,LAve23879],["Lay93620","Dot83873","Con52491","Ave23879"],Ave23879,"Ave23879")

Actual (Unparsed): [[0.2169992, 0.2048467]]

Expected (Unparsed): [[0.21699920648802942,0.20484669851197063]]

Actual:   [[0.217, 0.2049]]

Expected: [[0.217, 0.2049]]