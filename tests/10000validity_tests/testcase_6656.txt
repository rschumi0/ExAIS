import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Con7459 = tf.keras.layers.Input(shape=([1, 1, 2, 2]))
in0Con90047 = tf.keras.layers.Input(shape=([1, 2, 15, 2]))
in0Add53693 = tf.keras.layers.Input(shape=([1, 1]))
in1Add53693 = tf.keras.layers.Input(shape=([1, 1]))
in0Mul57609 = tf.keras.layers.Input(shape=([1, 2, 1]))
in1Mul57609 = tf.keras.layers.Input(shape=([1, 2, 1]))
in0Con25332 = tf.keras.layers.Input(shape=([1, 2, 1, 2]))
in0Max27322 = tf.keras.layers.Input(shape=([2, 2, 2]))
in1Max27322 = tf.keras.layers.Input(shape=([2, 2, 2]))
in0Con96185 = tf.keras.layers.Input(shape=([1, 2, 1, 1]))
in0Con72617 = tf.keras.layers.Input(shape=([1, 2, 1, 1]))

Con7459 = keras.layers.Conv3DTranspose(4, (1, 1, 2),strides=(1, 1, 1), padding='same', name = 'Con7459', )(in0Con7459)
Res61294 = keras.layers.Reshape((1, 1, 8), name = 'Res61294', )(Con7459)
Max44565 = keras.layers.MaxPool2D(pool_size=(1, 1), strides=(8, 1), padding='valid', name = 'Max44565', )(Res61294)
Bat17906 = keras.layers.BatchNormalization(axis=1, epsilon=0.7975458208297819,  name = 'Bat17906', )(Max44565)
Res92201 = keras.layers.Reshape((1, 1, 8, 1), name = 'Res92201', )(Bat17906)
Zer51368 = keras.layers.ZeroPadding3D(padding=((0, 0), (1, 0), (7, 0)), name = 'Zer51368', )(Res92201)
Con90047 = keras.layers.Concatenate(axis=4, name = 'Con90047', )([Zer51368,in0Con90047])
Add53693 = keras.layers.Add(name = 'Add53693', )([in0Add53693,in1Add53693])
Res65870 = keras.layers.Reshape((1, 1, 1), name = 'Res65870', )(Add53693)
Zer25205 = keras.layers.ZeroPadding2D(padding=((0, 0), (1, 0)), name = 'Zer25205', )(Res65870)
Mul57609 = keras.layers.Multiply(name = 'Mul57609', )([in0Mul57609,in1Mul57609])
Min19401 = keras.layers.Minimum(name = 'Min19401', )([Zer25205,Mul57609])
Res38017 = keras.layers.Reshape((1, 2, 1, 1), name = 'Res38017', )(Min19401)
Con25332 = keras.layers.Concatenate(axis=4, name = 'Con25332', )([Res38017,in0Con25332])
Max27322 = keras.layers.Maximum(name = 'Max27322', )([in0Max27322,in1Max27322])
Lea30178 = keras.layers.LeakyReLU(alpha=8.197179505604263, name = 'Lea30178', )(Max27322)
Res52310 = keras.layers.Reshape((2, 2, 2, 1), name = 'Res52310', )(Lea30178)
Con70306 = keras.layers.Conv3D(2, (2, 1, 2),strides=(5, 1, 1), padding='valid', dilation_rate=(1, 1, 1), name = 'Con70306', )(Res52310)
Con96185 = keras.layers.Concatenate(axis=4, name = 'Con96185', )([Con70306,in0Con96185])
Con72617 = keras.layers.Conv3DTranspose(3, (1, 2, 1),strides=(1, 1, 1), padding='same', name = 'Con72617', )(in0Con72617)
Ave63779 = keras.layers.Average(name = 'Ave63779', )([Con96185,Con72617])
Ave83191 = keras.layers.Average(name = 'Ave83191', )([Con25332,Ave63779])
Zer52489 = keras.layers.ZeroPadding3D(padding=((0, 0), (0, 0), (14, 0)), name = 'Zer52489', )(Ave83191)
Max83593 = keras.layers.Maximum(name = 'Max83593', )([Con90047,Zer52489])
model = tf.keras.models.Model(inputs=[in0Con7459,in0Con90047,in0Add53693,in1Add53693,in0Mul57609,in1Mul57609,in0Con25332,in0Max27322,in1Max27322,in0Con96185,in0Con72617], outputs=Max83593)
w = model.get_layer('Con7459').get_weights() 
w[0] = np.array([[[[[0.056, 0.8065], [0.7941, 0.4203], [0.0314, 0.6858], [0.7912, 0.8413]], [[0.8267, 0.032], [0.0015, 0.2831], [0.3247, 0.5868], [0.5946, 0.6131]]]]])
w[1] = np.array([0, 0, 0, 0])
model.get_layer('Con7459').set_weights(w) 
w = model.get_layer('Bat17906').get_weights() 
w[0] = np.array([0.4253])
w[1] = np.array([0.4901])
w[2] = np.array([0.5371])
w[3] = np.array([0.3953])
model.get_layer('Bat17906').set_weights(w) 
w = model.get_layer('Con70306').get_weights() 
w[0] = np.array([[[[[0.8811, 0.2901]], [[0.9766, 0.8398]]]], [[[[0.951, 0.0602]], [[0.2412, 0.3499]]]]])
w[1] = np.array([0, 0])
model.get_layer('Con70306').set_weights(w) 
w = model.get_layer('Con72617').get_weights() 
w[0] = np.array([[[[[0.4019], [0.175], [0.186]]], [[[0.5571], [0.6731], [0.8747]]]]])
w[1] = np.array([0, 0, 0])
model.get_layer('Con72617').set_weights(w) 
in0Con7459 = tf.constant([[[[[0.6818, 0.5797], [0.1072, 0.5558]]]]])
in0Con90047 = tf.constant([[[[[0.2319, 0.8317], [0.2381, 0.0826], [0.2213, 0.6752], [0.2617, 0.2136], [0.4757, 0.4066], [0.7201, 0.6201], [0.2206, 0.4883], [0.7247, 0.0973], [0.4809, 0.074], [0.7532, 0.591], [0.7365, 0.1284], [0.0042, 0.5631], [0.9399, 0.2391], [0.7471, 0.5057], [0.4442, 0.4062]], [[0.9216, 0.8136], [0.3971, 0.1094], [0.0699, 0.1924], [0.0675, 0.1224], [0.9267, 0.4019], [0.3885, 0.866], [0.6365, 0.4114], [0.7225, 0.5767], [0.6191, 0.9791], [0.4879, 0.2029], [0.5635, 0.2577], [0.8181, 0.7351], [0.8931, 0.2766], [0.871, 0.6278], [0.3166, 0.0544]]]]])
in0Add53693 = tf.constant([[[0.3511]]])
in1Add53693 = tf.constant([[[0.5413]]])
in0Mul57609 = tf.constant([[[[0.9092], [0.2002]]]])
in1Mul57609 = tf.constant([[[[0.081], [0.9286]]]])
in0Con25332 = tf.constant([[[[[0.3383, 0.216]], [[0.1194, 0.1286]]]]])
in0Max27322 = tf.constant([[[[0.7221, 0.5954], [0.2884, 0.2909]], [[0.0142, 0.134], [0.6018, 0.1612]]]])
in1Max27322 = tf.constant([[[[0.3684, 0.7504], [0.2161, 0.8323]], [[0.639, 0.6203], [0.8531, 0.6929]]]])
in0Con96185 = tf.constant([[[[[0.9192]], [[0.0708]]]]])
in0Con72617 = tf.constant([[[[[0.8903]], [[0.8214]]]]])
print (np.array2string(model.predict([in0Con7459,in0Con90047,in0Add53693,in1Add53693,in0Mul57609,in1Mul57609,in0Con25332,in0Max27322,in1Max27322,in0Con96185,in0Con72617],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Max83593.png')

LCon7459 = conv3D_transpose_layer([[[[[0.6818, 0.5797], [0.1072, 0.5558]]]]], 1, 1, 2,[[[[[0.056, 0.8065], [0.7941, 0.4203], [0.0314, 0.6858], [0.7912, 0.8413]], [[0.8267, 0.032], [0.0015, 0.2831], [0.3247, 0.5868], [0.5946, 0.6131]]]]],[0, 0, 0, 0], 1, 1, 1, true, Con7459), 
LRes61294 = reshape_layer(Con7459, [1, 1, 8], Res61294), 
LMax44565 = max_pool2D_layer(Res61294, 1, 1, 8, 1, false, Max44565), 
LBat17906 = batch_normalization_layer(Max44565, 1, 0.7975458208297819, [0.4253], [0.4901], [0.5371], [0.3953], Bat17906), 
LRes92201 = reshape_layer(Bat17906, [1, 1, 8, 1], Res92201), 
LZer51368 = zero_padding3D_layer(Res92201, 0, 0, 1, 0, 7, 0, Zer51368), 
LCon90047 = concatenate_layer([Zer51368,[[[[[0.2319, 0.8317], [0.2381, 0.0826], [0.2213, 0.6752], [0.2617, 0.2136], [0.4757, 0.4066], [0.7201, 0.6201], [0.2206, 0.4883], [0.7247, 0.0973], [0.4809, 0.074], [0.7532, 0.591], [0.7365, 0.1284], [0.0042, 0.5631], [0.9399, 0.2391], [0.7471, 0.5057], [0.4442, 0.4062]], [[0.9216, 0.8136], [0.3971, 0.1094], [0.0699, 0.1924], [0.0675, 0.1224], [0.9267, 0.4019], [0.3885, 0.866], [0.6365, 0.4114], [0.7225, 0.5767], [0.6191, 0.9791], [0.4879, 0.2029], [0.5635, 0.2577], [0.8181, 0.7351], [0.8931, 0.2766], [0.871, 0.6278], [0.3166, 0.0544]]]]]], 4, Con90047), 
LAdd53693 = add_layer([[[[0.3511]]], [[[0.5413]]]], Add53693), 
LRes65870 = reshape_layer(Add53693, [1, 1, 1], Res65870), 
LZer25205 = zero_padding2D_layer(Res65870, 0, 0, 1, 0, Zer25205), 
LMul57609 = multiply_layer([[[[[0.9092], [0.2002]]]], [[[[0.081], [0.9286]]]]], Mul57609), 
LMin19401 = minimum_layer([Zer25205,Mul57609], Min19401), 
LRes38017 = reshape_layer(Min19401, [1, 2, 1, 1], Res38017), 
LCon25332 = concatenate_layer([Res38017,[[[[[0.3383, 0.216]], [[0.1194, 0.1286]]]]]], 4, Con25332), 
LMax27322 = maximum_layer([[[[[0.7221, 0.5954], [0.2884, 0.2909]], [[0.0142, 0.134], [0.6018, 0.1612]]]], [[[[0.3684, 0.7504], [0.2161, 0.8323]], [[0.639, 0.6203], [0.8531, 0.6929]]]]], Max27322), 
LLea30178 = leaky_relu_layer(Max27322, 8.197179505604263, Lea30178), 
LRes52310 = reshape_layer(Lea30178, [2, 2, 2, 1], Res52310), 
LCon70306 = conv3D_layer(Res52310, 2, 1, 2,[[[[[0.8811, 0.2901]], [[0.9766, 0.8398]]]], [[[[0.951, 0.0602]], [[0.2412, 0.3499]]]]],[0, 0], 5, 1, 1, false, 1, 1, 1, Con70306), 
LCon96185 = concatenate_layer([Con70306,[[[[[0.9192]], [[0.0708]]]]]], 4, Con96185), 
LCon72617 = conv3D_transpose_layer([[[[[0.8903]], [[0.8214]]]]], 1, 2, 1,[[[[[0.4019], [0.175], [0.186]]], [[[0.5571], [0.6731], [0.8747]]]]],[0, 0, 0], 1, 1, 1, true, Con72617), 
LAve63779 = average_layer([Con96185,Con72617], Ave63779), 
LAve83191 = average_layer([Con25332,Ave63779], Ave83191), 
LZer52489 = zero_padding3D_layer(Ave83191, 0, 0, 0, 0, 14, 0, Zer52489), 
LMax83593 = maximum_layer([Con90047,Zer52489], Max83593), 
exec_layers([LCon7459,LRes61294,LMax44565,LBat17906,LRes92201,LZer51368,LCon90047,LAdd53693,LRes65870,LZer25205,LMul57609,LMin19401,LRes38017,LCon25332,LMax27322,LLea30178,LRes52310,LCon70306,LCon96185,LCon72617,LAve63779,LAve83191,LZer52489,LMax83593],["Con7459","Res61294","Max44565","Bat17906","Res92201","Zer51368","Con90047","Add53693","Res65870","Zer25205","Mul57609","Min19401","Res38017","Con25332","Max27322","Lea30178","Res52310","Con70306","Con96185","Con72617","Ave63779","Ave83191","Zer52489","Max83593"],Max83593,"Max83593")

Actual (Unparsed): [[[[[0.0000000, 0.2319000, 0.8317000], [0.0000000, 0.2381000, 0.0826000], [0.0000000, 0.2213000, 0.6752000], [0.0000000, 0.2617000, 0.2136000], [0.0000000, 0.4757000, 0.4066000], [0.0000000, 0.7201000, 0.6201000], [0.0000000, 0.2206000, 0.4883000], [0.0000000, 0.7247000, 0.0973000], [0.0000000, 0.4809000, 0.0740000], [0.0000000, 0.7532000, 0.5910000], [0.0000000, 0.7365000, 0.1284000], [0.0000000, 0.0042000, 0.5631000], [0.0000000, 0.9399000, 0.2391000], [0.0000000, 0.7471000, 0.5057000], [0.6210500, 0.4818951, 0.4062000]], [[0.0000000, 0.9216000, 0.8136000], [0.0000000, 0.3971000, 0.1094000], [0.0000000, 0.0699000, 0.1924000], [0.0000000, 0.0675000, 0.1224000], [0.0000000, 0.9267000, 0.4019000], [0.0000000, 0.3885000, 0.8660000], [0.0000000, 0.6365000, 0.4114000], [0.4778761, 0.7225000, 0.5767000], [0.5866593, 0.6191000, 0.9791000], [0.4440982, 0.4879000, 0.2029000], [0.6809255, 0.5635000, 0.2577000], [0.6845503, 0.8181000, 0.7351000], [0.4693703, 0.8931000, 0.2766000], [0.6493603, 0.8710000, 0.6278000], [0.8108193, 0.5145597, 0.3148814]]]]]

Expected (Unparsed): [[[[[0,0.2319,0.8317],[0,0.2381,0.0826],[0,0.2213,0.6752],[0,0.2617,0.2136],[0,0.4757,0.4066],[0,0.7201,0.6201],[0,0.2206,0.4883],[0,0.7247,0.0973],[0,0.4809,0.074],[0,0.7532,0.591],[0,0.7365,0.1284],[0,0.0042,0.5631],[0,0.9399,0.2391],[0,0.7471,0.5057],[0.62104997,0.4818951,0.4062]],[[0,0.9216,0.8136],[0,0.3971,0.1094],[0,0.0699,0.1924],[0,0.0675,0.1224],[0,0.9267,0.4019],[0,0.3885,0.866],[0,0.6365,0.4114],[0.47787608131639175,0.7225,0.5767],[0.5866593022656807,0.6191,0.9791],[0.44409815313829537,0.4879,0.2029],[0.6809254634841805,0.5635,0.2577],[0.684550289182476,0.8181,0.7351],[0.4693703446517366,0.8931,0.2766],[0.6493603145283962,0.871,0.6278],[0.8108193075000001,0.51455966,0.3148814525]]]]]

Actual:   [[[[[0, 0.2319, 0.8317], [0, 0.2381, 0.0826], [0, 0.2213, 0.6752], [0, 0.2617, 0.2136], [0, 0.4757, 0.4066], [0, 0.7201, 0.6201], [0, 0.2206, 0.4883], [0, 0.7247, 0.0973], [0, 0.4809, 0.074], [0, 0.7532, 0.591], [0, 0.7365, 0.1284], [0, 0.0042, 0.5631], [0, 0.9399, 0.2391], [0, 0.7471, 0.5057], [0.6211, 0.4819, 0.4062]], [[0, 0.9216, 0.8136], [0, 0.3971, 0.1094], [0, 0.0699, 0.1924], [0, 0.0675, 0.1224], [0, 0.9267, 0.4019], [0, 0.3885, 0.866], [0, 0.6365, 0.4114], [0.4779, 0.7225, 0.5767], [0.5867, 0.6191, 0.9791], [0.4441, 0.4879, 0.2029], [0.681, 0.5635, 0.2577], [0.6846, 0.8181, 0.7351], [0.4694, 0.8931, 0.2766], [0.6494, 0.871, 0.6278], [0.8109, 0.5146, 0.3149]]]]]

Expected: [[[[[0, 0.2319, 0.8317], [0, 0.2381, 0.0826], [0, 0.2213, 0.6752], [0, 0.2617, 0.2136], [0, 0.4757, 0.4066], [0, 0.7201, 0.6201], [0, 0.2206, 0.4883], [0, 0.7247, 0.0973], [0, 0.4809, 0.074], [0, 0.7532, 0.591], [0, 0.7365, 0.1284], [0, 0.0042, 0.5631], [0, 0.9399, 0.2391], [0, 0.7471, 0.5057], [0.6211, 0.4819, 0.4062]], [[0, 0.9216, 0.8136], [0, 0.3971, 0.1094], [0, 0.0699, 0.1924], [0, 0.0675, 0.1224], [0, 0.9267, 0.4019], [0, 0.3885, 0.866], [0, 0.6365, 0.4114], [0.4779, 0.7225, 0.5767], [0.5867, 0.6191, 0.9791], [0.4441, 0.4879, 0.2029], [0.681, 0.5635, 0.2577], [0.6846, 0.8181, 0.7351], [0.4694, 0.8931, 0.2766], [0.6494, 0.871, 0.6278], [0.8109, 0.5146, 0.3149]]]]]