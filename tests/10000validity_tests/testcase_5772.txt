import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Mul97220 = tf.keras.layers.Input(shape=([1, 1]))
in1Mul97220 = tf.keras.layers.Input(shape=([1, 1]))

Mul97220 = keras.layers.Multiply(name = 'Mul97220', )([in0Mul97220,in1Mul97220])
Res99788 = keras.layers.Reshape((1, 1, 1), name = 'Res99788', )(Mul97220)
Res66198 = keras.layers.Reshape((1, 1, 1, 1), name = 'Res66198', )(Res99788)
Con99239 = keras.layers.Conv3D(2, (1, 1, 1),strides=(1, 1, 1), padding='valid', dilation_rate=(1, 1, 1), name = 'Con99239', )(Res66198)
model = tf.keras.models.Model(inputs=[in0Mul97220,in1Mul97220], outputs=Con99239)
w = model.get_layer('Con99239').get_weights() 
w[0] = np.array([[[[[0.5106, 0.8056]]]]])
w[1] = np.array([0, 0])
model.get_layer('Con99239').set_weights(w) 
in0Mul97220 = tf.constant([[[0.6579]]])
in1Mul97220 = tf.constant([[[0.0874]]])
print (np.array2string(model.predict([in0Mul97220,in1Mul97220],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Con99239.png')

LMul97220 = multiply_layer([[[[0.6579]]], [[[0.0874]]]], Mul97220), 
LRes99788 = reshape_layer(Mul97220, [1, 1, 1], Res99788), 
LRes66198 = reshape_layer(Res99788, [1, 1, 1, 1], Res66198), 
LCon99239 = conv3D_layer(Res66198, 1, 1, 1,[[[[[0.5106, 0.8056]]]]],[0, 0], 1, 1, 1, false, 1, 1, 1, Con99239), 
exec_layers([LMul97220,LRes99788,LRes66198,LCon99239],["Mul97220","Res99788","Res66198","Con99239"],Con99239,"Con99239")

Actual (Unparsed): [[[[[0.0293597, 0.0463224]]]]]

Expected (Unparsed): [[[[[0.029359734876000007,0.046322370576000006]]]]]

Actual:   [[[[[0.0294, 0.0464]]]]]

Expected: [[[[[0.0294, 0.0464]]]]]