import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Lay15716 = tf.keras.layers.Input(shape=([4, 1, 1]))
in0Con24198 = tf.keras.layers.Input(shape=([4, 3, 3]))
in0Sub72820 = tf.keras.layers.Input(shape=([2]))
in1Sub72820 = tf.keras.layers.Input(shape=([2]))
in0Con86282 = tf.keras.layers.Input(shape=([4, 3, 3]))
in0Zer95514 = tf.keras.layers.Input(shape=([2, 1, 4]))
in0Ave62242 = tf.keras.layers.Input(shape=([2, 1, 2]))
in1Ave62242 = tf.keras.layers.Input(shape=([2, 1, 2]))
in0Con89284 = tf.keras.layers.Input(shape=([4, 3, 2]))

Lay15716 = keras.layers.LayerNormalization(axis=1, epsilon=2.494056575567631, name = 'Lay15716', )(in0Lay15716)
Res95471 = keras.layers.Reshape((4, 1, 1, 1), name = 'Res95471', )(Lay15716)
Glo48081 = keras.layers.GlobalMaxPool3D(name = 'Glo48081', )(Res95471)
Res48807 = keras.layers.Reshape((1, 1), name = 'Res48807', )(Glo48081)
Res68241 = keras.layers.Reshape((1, 1, 1), name = 'Res68241', )(Res48807)
Zer60583 = keras.layers.ZeroPadding2D(padding=((3, 0), (2, 0)), name = 'Zer60583', )(Res68241)
Con24198 = keras.layers.Concatenate(axis=3, name = 'Con24198', )([Zer60583,in0Con24198])
Sub72820 = keras.layers.Subtract(name = 'Sub72820', )([in0Sub72820,in1Sub72820])
Res91667 = keras.layers.Reshape((2, 1), name = 'Res91667', )(Sub72820)
Res13052 = keras.layers.Reshape((2, 1, 1), name = 'Res13052', )(Res91667)
Zer97577 = keras.layers.ZeroPadding2D(padding=((2, 0), (2, 0)), name = 'Zer97577', )(Res13052)
Con86282 = keras.layers.Concatenate(axis=3, name = 'Con86282', )([Zer97577,in0Con86282])
Zer95514 = keras.layers.ZeroPadding2D(padding=((1, 1), (1, 1)), name = 'Zer95514', )(in0Zer95514)
Con29533 = keras.layers.Conv2D(4, (4, 3),strides=(1, 1), padding='same', dilation_rate=(1, 1), name = 'Con29533', )(Zer95514)
Ave62242 = keras.layers.Average(name = 'Ave62242', )([in0Ave62242,in1Ave62242])
Zer4780 = keras.layers.ZeroPadding2D(padding=((2, 0), (2, 0)), name = 'Zer4780', )(Ave62242)
Con89284 = keras.layers.Concatenate(axis=3, name = 'Con89284', )([Zer4780,in0Con89284])
Sub33592 = keras.layers.Subtract(name = 'Sub33592', )([Con29533,Con89284])
Sub9458 = keras.layers.Subtract(name = 'Sub9458', )([Con86282,Sub33592])
Sub6715 = keras.layers.Subtract(name = 'Sub6715', )([Con24198,Sub9458])
model = tf.keras.models.Model(inputs=[in0Lay15716,in0Con24198,in0Sub72820,in1Sub72820,in0Con86282,in0Zer95514,in0Ave62242,in1Ave62242,in0Con89284], outputs=Sub6715)
w = model.get_layer('Con29533').get_weights() 
w[0] = np.array([[[[0.06, 0.1748, 0.5597, 0.1852], [0.5737, 0.8839, 0.4974, 0.5589], [0.3255, 0.2927, 0.1346, 0.3257], [0.7557, 0.2024, 0.2252, 0.8522]], [[0.3919, 0.675, 0.2233, 0.6539], [0.9537, 0.482, 0.2363, 0.1779], [0.975, 0.9291, 0.0382, 0.2433], [0.7099, 0.432, 0.5537, 0.0814]], [[0.5047, 0.2997, 0.0254, 0.0138], [0.2647, 0.5392, 0.4148, 0.6809], [0.1213, 0.1387, 0.4579, 0.3931], [0.9146, 0.21, 0.1909, 0.6111]]], [[[0.6459, 0.5714, 0.6984, 0.7861], [0.627, 0.8438, 0.2919, 0.7901], [0.6535, 0.8922, 0.3249, 0.9454], [0.1666, 0.4986, 0.3724, 0.2327]], [[0.0285, 0.4773, 0.5586, 0.5944], [0.2371, 0.0579, 0.4051, 0.3819], [0.6305, 0.2471, 0.6871, 0.8985], [0.3914, 0.0607, 0.4387, 0.6813]], [[0.951, 0.9648, 0.4238, 0.6324], [0.7156, 0.6034, 0.1066, 0.3626], [0.8874, 0.9071, 0.3943, 0.1423], [0.5395, 0.9735, 0.2017, 0.6684]]], [[[0.016, 0.6897, 0.1919, 0.4487], [0.678, 0.9276, 0.8852, 0.985], [0.9904, 0.2856, 0.694, 0.0891], [0.9569, 0.7704, 0.3454, 0.6071]], [[0.9461, 0.5192, 0.5789, 0.5475], [0.0282, 0.6476, 0.9719, 0.1064], [0.039, 0.5726, 0.2373, 0.3691], [0.7268, 0.7123, 0.363, 0.5283]], [[0.4974, 0.2887, 0.5172, 0.3059], [0.4747, 0.0734, 0.7321, 0.888], [0.816, 0.306, 0.9952, 0.0942], [0.4848, 0.6884, 0.5287, 0.6886]]], [[[0.9709, 0.3118, 0.7149, 0.7077], [0.7694, 0.6098, 0.3423, 0.4359], [0.7848, 0.9463, 0.5845, 0.1873], [0.2066, 0.2446, 0.4039, 0.369]], [[0.8211, 0.1453, 0.8739, 0.3932], [0.169, 0.5381, 0.252, 0.8835], [0.4353, 0.9556, 0.5041, 0.2776], [0.4682, 0.2417, 0.38, 0.3658]], [[0.8633, 0.1074, 0.0691, 0.5259], [0.6192, 0.6752, 0.9307, 0.4151], [0.476, 0.8807, 0.782, 0.6633], [0.6788, 0.6426, 0.755, 0.6724]]]])
w[1] = np.array([0, 0, 0, 0])
model.get_layer('Con29533').set_weights(w) 
in0Lay15716 = tf.constant([[[[1.1151]], [[1.7336]], [[1.9862]], [[1.5942]]]])
in0Con24198 = tf.constant([[[[0.1152, 0.0547, 0.8484], [0.507, 0.985, 0.598], [0.8641, 0.1729, 0.9441]], [[0.5957, 0.0317, 0.8396], [0.4553, 0.5926, 0.1193], [0.5976, 0.6718, 0.411]], [[0.6602, 0.0005, 0.1933], [0.9936, 0.9225, 0.4395], [0.0211, 0.0518, 0.7276]], [[0.6063, 0.1155, 0.4025], [0.2929, 0.0308, 0.6954], [0.586, 0.522, 0.5272]]]])
in0Sub72820 = tf.constant([[0.3187, 0.5681]])
in1Sub72820 = tf.constant([[0.4808, 0.3899]])
in0Con86282 = tf.constant([[[[0.7654, 0.3513, 0.7301], [0.7087, 0.9848, 0.0725], [0.8423, 0.0571, 0.6836]], [[0.4056, 0.3542, 0.7032], [0.3902, 0.2847, 0.5857], [0.3592, 0.0867, 0.1024]], [[0.6403, 0.2361, 0.3279], [0.0306, 0.5747, 0.5141], [0.3447, 0.2008, 0.6243]], [[0.8123, 0.8478, 0.1621], [0.1769, 0.7116, 0.1743], [0.8427, 0.6891, 0.8967]]]])
in0Zer95514 = tf.constant([[[[1.1698, 1.9979, 1.7197, 1.2418]], [[1.7613, 1.581, 1.9133, 1.0738]]]])
in0Ave62242 = tf.constant([[[[0.2618, 0.6233]], [[0.2455, 0.9379]]]])
in1Ave62242 = tf.constant([[[[0.2986, 0.8534]], [[0.6376, 0.8416]]]])
in0Con89284 = tf.constant([[[[0.0081, 0.8829], [0.1276, 0.3166], [0.062, 0.637]], [[0.0526, 0.4545], [0.7485, 0.6108], [0.9175, 0.0951]], [[0.9564, 0.6394], [0.6376, 0.6044], [0.7687, 0.3589]], [[0.6583, 0.1454], [0.1648, 0.02], [0.2514, 0.9785]]]])
print (np.array2string(model.predict([in0Lay15716,in0Con24198,in0Sub72820,in1Sub72820,in0Con86282,in0Zer95514,in0Ave62242,in1Ave62242,in0Con89284],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Sub6715.png')

LLay15716 = layer_normalization_layer([[[[1.1151]], [[1.7336]], [[1.9862]], [[1.5942]]]], 1, 2.494056575567631, Lay15716), 
LRes95471 = reshape_layer(Lay15716, [4, 1, 1, 1], Res95471), 
LGlo48081 = global_max_pool3D_layer(Res95471, Glo48081), 
LRes48807 = reshape_layer(Glo48081, [1, 1], Res48807), 
LRes68241 = reshape_layer(Res48807, [1, 1, 1], Res68241), 
LZer60583 = zero_padding2D_layer(Res68241, 3, 0, 2, 0, Zer60583), 
LCon24198 = concatenate_layer([Zer60583,[[[[0.1152, 0.0547, 0.8484], [0.507, 0.985, 0.598], [0.8641, 0.1729, 0.9441]], [[0.5957, 0.0317, 0.8396], [0.4553, 0.5926, 0.1193], [0.5976, 0.6718, 0.411]], [[0.6602, 0.0005, 0.1933], [0.9936, 0.9225, 0.4395], [0.0211, 0.0518, 0.7276]], [[0.6063, 0.1155, 0.4025], [0.2929, 0.0308, 0.6954], [0.586, 0.522, 0.5272]]]]], 3, Con24198), 
LSub72820 = subtract_layer([[0.3187, 0.5681]], [[0.4808, 0.3899]], Sub72820), 
LRes91667 = reshape_layer(Sub72820, [2, 1], Res91667), 
LRes13052 = reshape_layer(Res91667, [2, 1, 1], Res13052), 
LZer97577 = zero_padding2D_layer(Res13052, 2, 0, 2, 0, Zer97577), 
LCon86282 = concatenate_layer([Zer97577,[[[[0.7654, 0.3513, 0.7301], [0.7087, 0.9848, 0.0725], [0.8423, 0.0571, 0.6836]], [[0.4056, 0.3542, 0.7032], [0.3902, 0.2847, 0.5857], [0.3592, 0.0867, 0.1024]], [[0.6403, 0.2361, 0.3279], [0.0306, 0.5747, 0.5141], [0.3447, 0.2008, 0.6243]], [[0.8123, 0.8478, 0.1621], [0.1769, 0.7116, 0.1743], [0.8427, 0.6891, 0.8967]]]]], 3, Con86282), 
LZer95514 = zero_padding2D_layer([[[[1.1698, 1.9979, 1.7197, 1.2418]], [[1.7613, 1.581, 1.9133, 1.0738]]]], 1, 1, 1, 1, Zer95514), 
LCon29533 = conv2D_layer(Zer95514, 4, 3,[[[[0.06, 0.1748, 0.5597, 0.1852], [0.5737, 0.8839, 0.4974, 0.5589], [0.3255, 0.2927, 0.1346, 0.3257], [0.7557, 0.2024, 0.2252, 0.8522]], [[0.3919, 0.675, 0.2233, 0.6539], [0.9537, 0.482, 0.2363, 0.1779], [0.975, 0.9291, 0.0382, 0.2433], [0.7099, 0.432, 0.5537, 0.0814]], [[0.5047, 0.2997, 0.0254, 0.0138], [0.2647, 0.5392, 0.4148, 0.6809], [0.1213, 0.1387, 0.4579, 0.3931], [0.9146, 0.21, 0.1909, 0.6111]]], [[[0.6459, 0.5714, 0.6984, 0.7861], [0.627, 0.8438, 0.2919, 0.7901], [0.6535, 0.8922, 0.3249, 0.9454], [0.1666, 0.4986, 0.3724, 0.2327]], [[0.0285, 0.4773, 0.5586, 0.5944], [0.2371, 0.0579, 0.4051, 0.3819], [0.6305, 0.2471, 0.6871, 0.8985], [0.3914, 0.0607, 0.4387, 0.6813]], [[0.951, 0.9648, 0.4238, 0.6324], [0.7156, 0.6034, 0.1066, 0.3626], [0.8874, 0.9071, 0.3943, 0.1423], [0.5395, 0.9735, 0.2017, 0.6684]]], [[[0.016, 0.6897, 0.1919, 0.4487], [0.678, 0.9276, 0.8852, 0.985], [0.9904, 0.2856, 0.694, 0.0891], [0.9569, 0.7704, 0.3454, 0.6071]], [[0.9461, 0.5192, 0.5789, 0.5475], [0.0282, 0.6476, 0.9719, 0.1064], [0.039, 0.5726, 0.2373, 0.3691], [0.7268, 0.7123, 0.363, 0.5283]], [[0.4974, 0.2887, 0.5172, 0.3059], [0.4747, 0.0734, 0.7321, 0.888], [0.816, 0.306, 0.9952, 0.0942], [0.4848, 0.6884, 0.5287, 0.6886]]], [[[0.9709, 0.3118, 0.7149, 0.7077], [0.7694, 0.6098, 0.3423, 0.4359], [0.7848, 0.9463, 0.5845, 0.1873], [0.2066, 0.2446, 0.4039, 0.369]], [[0.8211, 0.1453, 0.8739, 0.3932], [0.169, 0.5381, 0.252, 0.8835], [0.4353, 0.9556, 0.5041, 0.2776], [0.4682, 0.2417, 0.38, 0.3658]], [[0.8633, 0.1074, 0.0691, 0.5259], [0.6192, 0.6752, 0.9307, 0.4151], [0.476, 0.8807, 0.782, 0.6633], [0.6788, 0.6426, 0.755, 0.6724]]]],[0, 0, 0, 0], 1, 1, true, 1, 1, Con29533), 
LAve62242 = average_layer([[[[[0.2618, 0.6233]], [[0.2455, 0.9379]]]], [[[[0.2986, 0.8534]], [[0.6376, 0.8416]]]]], Ave62242), 
LZer4780 = zero_padding2D_layer(Ave62242, 2, 0, 2, 0, Zer4780), 
LCon89284 = concatenate_layer([Zer4780,[[[[0.0081, 0.8829], [0.1276, 0.3166], [0.062, 0.637]], [[0.0526, 0.4545], [0.7485, 0.6108], [0.9175, 0.0951]], [[0.9564, 0.6394], [0.6376, 0.6044], [0.7687, 0.3589]], [[0.6583, 0.1454], [0.1648, 0.02], [0.2514, 0.9785]]]]], 3, Con89284), 
LSub33592 = subtract_layer(Con29533,Con89284, Sub33592), 
LSub9458 = subtract_layer(Con86282,Sub33592, Sub9458), 
LSub6715 = subtract_layer(Con24198,Sub9458, Sub6715), 
exec_layers([LLay15716,LRes95471,LGlo48081,LRes48807,LRes68241,LZer60583,LCon24198,LSub72820,LRes91667,LRes13052,LZer97577,LCon86282,LZer95514,LCon29533,LAve62242,LZer4780,LCon89284,LSub33592,LSub9458,LSub6715],["Lay15716","Res95471","Glo48081","Res48807","Res68241","Zer60583","Con24198","Sub72820","Res91667","Res13052","Zer97577","Con86282","Zer95514","Con29533","Ave62242","Zer4780","Con89284","Sub33592","Sub9458","Sub6715"],Sub6715,"Sub6715")

Actual (Unparsed): [[[[7.6746732, 4.8469724, 8.0310303, 5.9581320], [5.1817022, 6.7632745, 6.6605651, 5.3660110], [8.9146347, 7.7161665, 7.0215765, 5.7136660]], [[8.4465923, 7.2422945, 5.8024148, 5.0832137], [4.6433593, 5.0381849, 6.1485890, 5.1783336], [7.3615153, 8.8011277, 5.5251676, 7.7963511]], [[7.5471294, 7.3812335, 2.5769253, 4.7144985], [6.9737763, 6.3199981, 4.6068271, 5.0622248], [6.1546211, 6.2460689, 3.9550176, 7.3884545]], [[2.5215995, 1.6652095, 0.3910243, 2.6041262], [4.8258113, 4.3084481, 0.5889397, 2.4869872], [2.0624438, 1.3362312, 1.8530389, 1.4000677]]]]

Expected (Unparsed): [[[[7.674673219999999,4.84697245,8.031030379999999,5.958132020000001],[5.181702180000001,6.763274489999999,6.660565040000001,5.36601105],[8.914634790000001,7.716166549999999,7.021576560000001,5.713666009999998]],[[8.44659228,7.242294500000002,5.80241483,5.083213699999999],[4.64335943,5.03818496,6.148589060000001,5.178333639999998],[7.361515290000001,8.801127769999999,5.52516757,7.79635113]],[[7.5471295,7.3812335000000004,2.5769252800000007,4.71449863],[6.97377629,6.31999815,4.60682708,5.06222477],[6.15462114,6.24606892,3.9550176099999996,7.388454630000001]],[[2.52159958,1.6652095199999999,0.3910243100000001,2.6041262499999998],[4.82581129,4.30844813,0.5889397100000001,2.48698718],[2.0624437802370004,1.3362311699999996,1.8530389499999997,1.4000678300000002]]]]

Actual:   [[[[7.6747, 4.847, 8.0311, 5.9582], [5.1818, 6.7633, 6.6606, 5.3661], [8.9147, 7.7162, 7.0216, 5.7137]], [[8.4466, 7.2423, 5.8025, 5.0833], [4.6434, 5.0382, 6.1486, 5.1784], [7.3616, 8.8012, 5.5252, 7.7964]], [[7.5472, 7.3813, 2.577, 4.7145], [6.9738, 6.32, 4.6069, 5.0623], [6.1547, 6.2461, 3.9551, 7.3885]], [[2.5216, 1.6653, 0.3911, 2.6042], [4.8259, 4.3085, 0.589, 2.487], [2.0625, 1.3363, 1.8531, 1.4001]]]]

Expected: [[[[7.6747, 4.847, 8.0311, 5.9582], [5.1818, 6.7633, 6.6606, 5.3661], [8.9147, 7.7162, 7.0216, 5.7137]], [[8.4466, 7.2423, 5.8025, 5.0833], [4.6434, 5.0382, 6.1486, 5.1784], [7.3616, 8.8012, 5.5252, 7.7964]], [[7.5472, 7.3813, 2.577, 4.7145], [6.9738, 6.32, 4.6069, 5.0623], [6.1547, 6.2461, 3.9551, 7.3885]], [[2.5216, 1.6653, 0.3911, 2.6042], [4.8259, 4.3085, 0.589, 2.487], [2.0625, 1.3363, 1.8531, 1.4001]]]]