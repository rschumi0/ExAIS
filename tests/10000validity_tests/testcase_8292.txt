import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Ave26616 = tf.keras.layers.Input(shape=([1, 2, 2]))
in1Ave26616 = tf.keras.layers.Input(shape=([1, 2, 2]))
in0Dot71943 = tf.keras.layers.Input(shape=([3, 2]))
in1Dot71943 = tf.keras.layers.Input(shape=([3, 2]))
in0Con68347 = tf.keras.layers.Input(shape=([3, 1]))
in0Mul91979 = tf.keras.layers.Input(shape=([1, 1]))
in1Mul91979 = tf.keras.layers.Input(shape=([1, 1]))
in0Con96204 = tf.keras.layers.Input(shape=([3, 3]))

Ave26616 = keras.layers.Average(name = 'Ave26616', )([in0Ave26616,in1Ave26616])
Res27167 = keras.layers.Reshape((1, 4), name = 'Res27167', )(Ave26616)
Zer30519 = keras.layers.ZeroPadding1D(padding=((2, 0)), name = 'Zer30519', )(Res27167)
Dot71943 = keras.layers.Dot(axes=(2, 2), name = 'Dot71943', )([in0Dot71943,in1Dot71943])
Con68347 = keras.layers.Concatenate(axis=2, name = 'Con68347', )([Dot71943,in0Con68347])
Mul70262 = keras.layers.Multiply(name = 'Mul70262', )([Zer30519,Con68347])
Mul91979 = keras.layers.Multiply(name = 'Mul91979', )([in0Mul91979,in1Mul91979])
Zer64331 = keras.layers.ZeroPadding1D(padding=((2, 0)), name = 'Zer64331', )(Mul91979)
Con96204 = keras.layers.Concatenate(axis=2, name = 'Con96204', )([Zer64331,in0Con96204])
Add28148 = keras.layers.Add(name = 'Add28148', )([Mul70262,Con96204])
ReL25445 = keras.layers.ReLU(max_value=6.224892673301716, negative_slope=5.36523798667041, threshold=8.180842257028504, name = 'ReL25445', )(Add28148)
model = tf.keras.models.Model(inputs=[in0Ave26616,in1Ave26616,in0Dot71943,in1Dot71943,in0Con68347,in0Mul91979,in1Mul91979,in0Con96204], outputs=ReL25445)
in0Ave26616 = tf.constant([[[[0.6121, 0.5208], [0.9453, 0.9692]]]])
in1Ave26616 = tf.constant([[[[0.3643, 0.8703], [0.8918, 0.909]]]])
in0Dot71943 = tf.constant([[[0.6888, 0.9631], [0.2559, 0.3474], [0.4151, 0.4701]]])
in1Dot71943 = tf.constant([[[0.082, 0.9266], [0.2513, 0.3616], [0.9848, 0.9197]]])
in0Con68347 = tf.constant([[[0.876], [0.1305], [0.9676]]])
in0Mul91979 = tf.constant([[[0.2305]]])
in1Mul91979 = tf.constant([[[0.0729]]])
in0Con96204 = tf.constant([[[0.1864, 0.7383, 0.4391], [0.2103, 0.9226, 0.7733], [0.627, 0.0098, 0.7101]]])
print (np.array2string(model.predict([in0Ave26616,in1Ave26616,in0Dot71943,in1Dot71943,in0Con68347,in0Mul91979,in1Mul91979,in0Con96204],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='ReL25445.png')

LAve26616 = average_layer([[[[[0.6121, 0.5208], [0.9453, 0.9692]]]], [[[[0.3643, 0.8703], [0.8918, 0.909]]]]], Ave26616), 
LRes27167 = reshape_layer(Ave26616, [1, 4], Res27167), 
LZer30519 = zero_padding1D_layer(Res27167, 2, 0, Zer30519), 
LDot71943 = dot_layer([[[0.6888, 0.9631], [0.2559, 0.3474], [0.4151, 0.4701]]], [[[0.082, 0.9266], [0.2513, 0.3616], [0.9848, 0.9197]]], 2, 2, Dot71943), 
LCon68347 = concatenate_layer([Dot71943,[[[0.876], [0.1305], [0.9676]]]], 2, Con68347), 
LMul70262 = multiply_layer([Zer30519,Con68347], Mul70262), 
LMul91979 = multiply_layer([[[[0.2305]]], [[[0.0729]]]], Mul91979), 
LZer64331 = zero_padding1D_layer(Mul91979, 2, 0, Zer64331), 
LCon96204 = concatenate_layer([Zer64331,[[[0.1864, 0.7383, 0.4391], [0.2103, 0.9226, 0.7733], [0.627, 0.0098, 0.7101]]]], 2, Con96204), 
LAdd28148 = add_layer([Mul70262,Con96204], Add28148), 
LReL25445 = relu_layer(Add28148, 6.224892673301716, 5.36523798667041, 8.180842257028504, ReL25445), 
exec_layers([LAve26616,LRes27167,LZer30519,LDot71943,LCon68347,LMul70262,LMul91979,LZer64331,LCon96204,LAdd28148,LReL25445],["Ave26616","Res27167","Zer30519","Dot71943","Con68347","Mul70262","Mul91979","Zer64331","Con96204","Add28148","ReL25445"],ReL25445,"ReL25445")

Actual (Unparsed): [[[-43.8921656, -42.8920853, -39.9310103, -41.5362897], [-43.8921656, -42.7638561, -38.9421972, -39.7432271], [-42.5718975, -39.5045208, -39.6942400, -35.2070625]]]

Expected (Unparsed): [[[-43.89216564036782,-42.892085279652456,-39.93101043480906,-41.53628964042085],[-43.89216564036782,-42.76385609177103,-38.9421970738657,-39.743227105275594],[-42.571897468301444,-39.50452066247707,-39.69423991305823,-35.20706239053332]]]

Actual:   [[[-43.8921, -42.892, -39.931, -41.5362], [-43.8921, -42.7638, -38.9421, -39.7432], [-42.5718, -39.5045, -39.6942, -35.207]]]

Expected: [[[-43.8921, -42.892, -39.931, -41.5362], [-43.8921, -42.7638, -38.9421, -39.7432], [-42.5718, -39.5045, -39.6942, -35.207]]]