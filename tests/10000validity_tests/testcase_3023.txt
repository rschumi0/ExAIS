import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Sim51492 = tf.keras.layers.Input(shape=([3, 2]))

Sim51492 = keras.layers.SimpleRNN(1,name = 'Sim51492', )(in0Sim51492)
Res90090 = keras.layers.Reshape((1, 1), name = 'Res90090', )(Sim51492)
Zer38763 = keras.layers.ZeroPadding1D(padding=((1, 1)), name = 'Zer38763', )(Res90090)
Res17119 = keras.layers.Reshape((3, 1, 1), name = 'Res17119', )(Zer38763)
Res80721 = keras.layers.Reshape((3, 1, 1, 1), name = 'Res80721', )(Res17119)
Up_25686 = keras.layers.UpSampling3D(size=(1, 1, 1), name = 'Up_25686', )(Res80721)
model = tf.keras.models.Model(inputs=[in0Sim51492], outputs=Up_25686)
w = model.get_layer('Sim51492').get_weights() 
w[0] = np.array([[4], [5]])
w[1] = np.array([[6]])
w[2] = np.array([5])
model.get_layer('Sim51492').set_weights(w) 
in0Sim51492 = tf.constant([[[6, 9], [3, 6], [4, 7]]])
print (np.array2string(model.predict([in0Sim51492],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Up_25686.png')

LSim51492 = simple_rnn_layer([[[6, 9], [3, 6], [4, 7]]],[[4], [5]],[[6]],[5], Sim51492), 
LRes90090 = reshape_layer(Sim51492, [1, 1], Res90090), 
LZer38763 = zero_padding1D_layer(Res90090, 1, 1, Zer38763), 
LRes17119 = reshape_layer(Zer38763, [3, 1, 1], Res17119), 
LRes80721 = reshape_layer(Res17119, [3, 1, 1, 1], Res80721), 
LUp_25686 = up_sampling3D_layer(Res80721, 1, 1, 1, Up_25686), 
exec_layers([LSim51492,LRes90090,LZer38763,LRes17119,LRes80721,LUp_25686],["Sim51492","Res90090","Zer38763","Res17119","Res80721","Up_25686"],Up_25686,"Up_25686")

Actual (Unparsed): [[[[[0.0000000]]], [[[1.0000000]]], [[[0.0000000]]]]]

Expected (Unparsed): [[[[[0]]],[[[1.0]]],[[[0]]]]]

Actual:   [[[[[0]]], [[[1]]], [[[0]]]]]

Expected: [[[[[0]]], [[[1]]], [[[0]]]]]