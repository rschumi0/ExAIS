import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Dot81924 = tf.keras.layers.Input(shape=([2, 3]))
in1Dot81924 = tf.keras.layers.Input(shape=([2, 3]))
in0Con27483 = tf.keras.layers.Input(shape=([4, 3, 3]))
in0Up_58159 = tf.keras.layers.Input(shape=([4, 1, 4]))

Dot81924 = keras.layers.Dot(axes=(2, 2), name = 'Dot81924', )([in0Dot81924,in1Dot81924])
Res62717 = keras.layers.Reshape((2, 2, 1), name = 'Res62717', )(Dot81924)
Zer18810 = keras.layers.ZeroPadding2D(padding=((2, 0), (1, 0)), name = 'Zer18810', )(Res62717)
Con27483 = keras.layers.Concatenate(axis=3, name = 'Con27483', )([Zer18810,in0Con27483])
Up_58159 = keras.layers.UpSampling2D(size=(1, 1), name = 'Up_58159', )(in0Up_58159)
Zer80395 = keras.layers.ZeroPadding2D(padding=((0, 0), (2, 0)), name = 'Zer80395', )(Up_58159)
Mul65239 = keras.layers.Multiply(name = 'Mul65239', )([Con27483,Zer80395])
Res95561 = keras.layers.Reshape((4, 12), name = 'Res95561', )(Mul65239)
Cro37517 = keras.layers.Cropping1D(cropping=((2, 0)), name = 'Cro37517', )(Res95561)
model = tf.keras.models.Model(inputs=[in0Dot81924,in1Dot81924,in0Con27483,in0Up_58159], outputs=Cro37517)
in0Dot81924 = tf.constant([[[0.7446, 0.2348, 0.7223], [0.4197, 0.0178, 0.1203]]])
in1Dot81924 = tf.constant([[[0.7035, 0.928, 0.1388], [0.179, 0.6816, 0.862]]])
in0Con27483 = tf.constant([[[[0.0185, 0.9599, 0.822], [0.9542, 0.1855, 0.1038], [0.7928, 0.0472, 0.5021]], [[0.6717, 0.8489, 0.1811], [0.3257, 0.1255, 0.2803], [0.6602, 0.1449, 0.2155]], [[0.2132, 0.7377, 0.1763], [0.3132, 0.2777, 0.374], [0.0175, 0.5585, 0.4039]], [[0.3954, 0.4795, 0.1953], [0.2244, 0.2572, 0.5388], [0.7955, 0.211, 0.8965]]]])
in0Up_58159 = tf.constant([[[[1.241, 1.403, 1.6354, 1.3024]], [[1.6281, 1.2096, 1.4154, 1.6064]], [[1.0405, 1.4515, 1.7275, 1.4586]], [[1.0551, 1.7843, 1.5369, 1.8632]]]])
print (np.array2string(model.predict([in0Dot81924,in1Dot81924,in0Con27483,in0Up_58159],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Cro37517.png')

LDot81924 = dot_layer([[[0.7446, 0.2348, 0.7223], [0.4197, 0.0178, 0.1203]]], [[[0.7035, 0.928, 0.1388], [0.179, 0.6816, 0.862]]], 2, 2, Dot81924), 
LRes62717 = reshape_layer(Dot81924, [2, 2, 1], Res62717), 
LZer18810 = zero_padding2D_layer(Res62717, 2, 0, 1, 0, Zer18810), 
LCon27483 = concatenate_layer([Zer18810,[[[[0.0185, 0.9599, 0.822], [0.9542, 0.1855, 0.1038], [0.7928, 0.0472, 0.5021]], [[0.6717, 0.8489, 0.1811], [0.3257, 0.1255, 0.2803], [0.6602, 0.1449, 0.2155]], [[0.2132, 0.7377, 0.1763], [0.3132, 0.2777, 0.374], [0.0175, 0.5585, 0.4039]], [[0.3954, 0.4795, 0.1953], [0.2244, 0.2572, 0.5388], [0.7955, 0.211, 0.8965]]]]], 3, Con27483), 
LUp_58159 = up_sampling2D_layer([[[[1.241, 1.403, 1.6354, 1.3024]], [[1.6281, 1.2096, 1.4154, 1.6064]], [[1.0405, 1.4515, 1.7275, 1.4586]], [[1.0551, 1.7843, 1.5369, 1.8632]]]], 1, 1, Up_58159), 
LZer80395 = zero_padding2D_layer(Up_58159, 0, 0, 2, 0, Zer80395), 
LMul65239 = multiply_layer([Con27483,Zer80395], Mul65239), 
LRes95561 = reshape_layer(Mul65239, [4, 12], Res95561), 
LCro37517 = cropping1D_layer(Res95561, 2, 0, Cro37517), 
exec_layers([LDot81924,LRes62717,LZer18810,LCon27483,LUp_58159,LZer80395,LMul65239,LRes95561,LCro37517],["Dot81924","Res62717","Zer18810","Con27483","Up_58159","Zer80395","Mul65239","Res95561","Cro37517"],Cro37517,"Cro37517")

Actual (Unparsed): [[[0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.9530415, 0.0254013, 0.9648087, 0.5891286], [0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.2014791, 1.4194106, 0.3242859, 1.6703587]]]

Expected (Unparsed): [[[0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.95304148004,0.025401250000000004,0.96480875,0.5891285399999999],[0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.201479131638,1.4194106499999999,0.32428589999999996,1.6703587999999998]]]

Actual:   [[[0, 0, 0, 0, 0, 0, 0, 0, 0.9531, 0.0255, 0.9649, 0.5892], [0, 0, 0, 0, 0, 0, 0, 0, 0.2015, 1.4195, 0.3243, 1.6704]]]

Expected: [[[0, 0, 0, 0, 0, 0, 0, 0, 0.9531, 0.0255, 0.9649, 0.5892], [0, 0, 0, 0, 0, 0, 0, 0, 0.2015, 1.4195, 0.3243, 1.6704]]]