import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Mul49244 = tf.keras.layers.Input(shape=([2, 1, 2, 1]))
in1Mul49244 = tf.keras.layers.Input(shape=([2, 1, 2, 1]))

Mul49244 = keras.layers.Multiply(name = 'Mul49244', )([in0Mul49244,in1Mul49244])
Res11088 = keras.layers.Reshape((2, 1, 2), name = 'Res11088', )(Mul49244)
Up_98663 = keras.layers.UpSampling2D(size=(1, 1), name = 'Up_98663', )(Res11088)
model = tf.keras.models.Model(inputs=[in0Mul49244,in1Mul49244], outputs=Up_98663)
in0Mul49244 = tf.constant([[[[[0.5095], [0.5612]]], [[[0.6791], [0.1117]]]]])
in1Mul49244 = tf.constant([[[[[0.9832], [0.9924]]], [[[0.0485], [0.9301]]]]])
print (np.array2string(model.predict([in0Mul49244,in1Mul49244],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Up_98663.png')

LMul49244 = multiply_layer([[[[[[0.5095], [0.5612]]], [[[0.6791], [0.1117]]]]], [[[[[0.9832], [0.9924]]], [[[0.0485], [0.9301]]]]]], Mul49244), 
LRes11088 = reshape_layer(Mul49244, [2, 1, 2], Res11088), 
LUp_98663 = up_sampling2D_layer(Res11088, 1, 1, Up_98663), 
exec_layers([LMul49244,LRes11088,LUp_98663],["Mul49244","Res11088","Up_98663"],Up_98663,"Up_98663")

Actual (Unparsed): [[[[0.5009404, 0.5569349]], [[0.0329363, 0.1038922]]]]

Expected (Unparsed): [[[[0.5009404,0.55693488]],[[0.03293635,0.10389216999999999]]]]

Actual:   [[[[0.501, 0.557]], [[0.033, 0.1039]]]]

Expected: [[[[0.501, 0.557]], [[0.033, 0.1039]]]]