import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Add21055 = tf.keras.layers.Input(shape=([1, 2, 1, 2]))
in1Add21055 = tf.keras.layers.Input(shape=([1, 2, 1, 2]))
in0Add13885 = tf.keras.layers.Input(shape=([2, 2]))
in1Add13885 = tf.keras.layers.Input(shape=([2, 2]))
in0Up_37797 = tf.keras.layers.Input(shape=([3, 1, 2]))
in0Con57027 = tf.keras.layers.Input(shape=([6, 2]))
in0Per25397 = tf.keras.layers.Input(shape=([4, 3]))
in0Lay86800 = tf.keras.layers.Input(shape=([1, 1]))
in0Con65109 = tf.keras.layers.Input(shape=([6, 3]))

Add21055 = keras.layers.Add(name = 'Add21055', )([in0Add21055,in1Add21055])
Res87445 = keras.layers.Reshape((1, 2, 2), name = 'Res87445', )(Add21055)
Add13885 = keras.layers.Add(name = 'Add13885', )([in0Add13885,in1Add13885])
Res8941 = keras.layers.Reshape((1, 2, 2), name = 'Res8941', )(Add13885)
Ave41045 = keras.layers.Average(name = 'Ave41045', )([Res87445,Res8941])
Res83502 = keras.layers.Reshape((1, 4), name = 'Res83502', )(Ave41045)
Zer43413 = keras.layers.ZeroPadding1D(padding=((5, 0)), name = 'Zer43413', )(Res83502)
Up_37797 = keras.layers.UpSampling2D(size=(2, 1), name = 'Up_37797', )(in0Up_37797)
Res63267 = keras.layers.Reshape((6, 2), name = 'Res63267', )(Up_37797)
Con57027 = keras.layers.Concatenate(axis=2, name = 'Con57027', )([Res63267,in0Con57027])
Per25397 = keras.layers.Permute((2,1), name = 'Per25397',)(in0Per25397)
Ave28341 = keras.layers.AveragePooling1D(pool_size=(1), strides=(1), padding='same', name = 'Ave28341', )(Per25397)
Zer14782 = keras.layers.ZeroPadding1D(padding=((3, 0)), name = 'Zer14782', )(Ave28341)
Mul52388 = keras.layers.Multiply(name = 'Mul52388', )([Con57027,Zer14782])
Lay86800 = keras.layers.LayerNormalization(axis=1, epsilon=2.721070316639243, name = 'Lay86800', )(in0Lay86800)
Zer66141 = keras.layers.ZeroPadding1D(padding=((5, 0)), name = 'Zer66141', )(Lay86800)
Con65109 = keras.layers.Concatenate(axis=2, name = 'Con65109', )([Zer66141,in0Con65109])
Max38007 = keras.layers.Maximum(name = 'Max38007', )([Mul52388,Con65109])
Sub52353 = keras.layers.Subtract(name = 'Sub52353', )([Zer43413,Max38007])
model = tf.keras.models.Model(inputs=[in0Add21055,in1Add21055,in0Add13885,in1Add13885,in0Up_37797,in0Con57027,in0Per25397,in0Lay86800,in0Con65109], outputs=Sub52353)
in0Add21055 = tf.constant([[[[[0.5372, 0.6897]], [[0.8851, 0.3263]]]]])
in1Add21055 = tf.constant([[[[[0.0463, 0.2531]], [[0.5962, 0.2923]]]]])
in0Add13885 = tf.constant([[[0.2822, 0.7704], [0.0092, 0.6992]]])
in1Add13885 = tf.constant([[[0.3097, 0.0971], [0.8125, 0.4132]]])
in0Up_37797 = tf.constant([[[[1.4343, 1.8912]], [[1.2219, 1.2027]], [[1.8755, 1.3002]]]])
in0Con57027 = tf.constant([[[0.7438, 0.3406], [0.1273, 0.3245], [0.6986, 0.9507], [0.6364, 0.2904], [0.7697, 0.3402], [0.5899, 0.6318]]])
in0Per25397 = tf.constant([[[1.9515, 1.9347, 1.8783], [1.8272, 1.1078, 1.9664], [1.6658, 1.7766, 1.8539], [1.9833, 1.9975, 1.4248]]])
in0Lay86800 = tf.constant([[[1.6303]]])
in0Con65109 = tf.constant([[[0.4409, 0.4517, 0.5394], [0.357, 0.8216, 0.7612], [0.1208, 0.2882, 0.6568], [0.2008, 0.1683, 0.6282], [0.0325, 0.0193, 0.6528], [0.6412, 0.9949, 0.8254]]])
print (np.array2string(model.predict([in0Add21055,in1Add21055,in0Add13885,in1Add13885,in0Up_37797,in0Con57027,in0Per25397,in0Lay86800,in0Con65109],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Sub52353.png')

LAdd21055 = add_layer([[[[[[0.5372, 0.6897]], [[0.8851, 0.3263]]]]], [[[[[0.0463, 0.2531]], [[0.5962, 0.2923]]]]]], Add21055), 
LRes87445 = reshape_layer(Add21055, [1, 2, 2], Res87445), 
LAdd13885 = add_layer([[[[0.2822, 0.7704], [0.0092, 0.6992]]], [[[0.3097, 0.0971], [0.8125, 0.4132]]]], Add13885), 
LRes8941 = reshape_layer(Add13885, [1, 2, 2], Res8941), 
LAve41045 = average_layer([Res87445,Res8941], Ave41045), 
LRes83502 = reshape_layer(Ave41045, [1, 4], Res83502), 
LZer43413 = zero_padding1D_layer(Res83502, 5, 0, Zer43413), 
LUp_37797 = up_sampling2D_layer([[[[1.4343, 1.8912]], [[1.2219, 1.2027]], [[1.8755, 1.3002]]]], 2, 1, Up_37797), 
LRes63267 = reshape_layer(Up_37797, [6, 2], Res63267), 
LCon57027 = concatenate_layer([Res63267,[[[0.7438, 0.3406], [0.1273, 0.3245], [0.6986, 0.9507], [0.6364, 0.2904], [0.7697, 0.3402], [0.5899, 0.6318]]]], 2, Con57027), 
LPer25397 = permute_layer([[[1.9515, 1.9347, 1.8783], [1.8272, 1.1078, 1.9664], [1.6658, 1.7766, 1.8539], [1.9833, 1.9975, 1.4248]]], 2,1, Per25397), 
LAve28341 = average_pooling1D_layer(Per25397, 1, 1, true, Ave28341), 
LZer14782 = zero_padding1D_layer(Ave28341, 3, 0, Zer14782), 
LMul52388 = multiply_layer([Con57027,Zer14782], Mul52388), 
LLay86800 = layer_normalization_layer([[[1.6303]]], 1, 2.721070316639243, Lay86800), 
LZer66141 = zero_padding1D_layer(Lay86800, 5, 0, Zer66141), 
LCon65109 = concatenate_layer([Zer66141,[[[0.4409, 0.4517, 0.5394], [0.357, 0.8216, 0.7612], [0.1208, 0.2882, 0.6568], [0.2008, 0.1683, 0.6282], [0.0325, 0.0193, 0.6528], [0.6412, 0.9949, 0.8254]]]], 2, Con65109), 
LMax38007 = maximum_layer([Mul52388,Con65109], Max38007), 
LSub52353 = subtract_layer(Zer43413,Max38007, Sub52353), 
exec_layers([LAdd21055,LRes87445,LAdd13885,LRes8941,LAve41045,LRes83502,LZer43413,LUp_37797,LRes63267,LCon57027,LPer25397,LAve28341,LZer14782,LMul52388,LLay86800,LZer66141,LCon65109,LMax38007,LSub52353],["Add21055","Res87445","Add13885","Res8941","Ave41045","Res83502","Zer43413","Up_37797","Res63267","Con57027","Per25397","Ave28341","Zer14782","Mul52388","Lay86800","Zer66141","Con65109","Max38007","Sub52353"],Sub52353,"Sub52353")

Actual (Unparsed): [[[0.0000000, -0.4409000, -0.4517000, -0.5394000], [0.0000000, -0.3570000, -0.8216000, -0.7612000], [0.0000000, -0.1208000, -0.2882000, -0.6568000], [-2.3845379, -2.1975735, -1.0601151, -0.6282000], [-3.6285298, -1.4403616, -1.3674490, -0.6795495], [-2.9350515, -1.6515633, 0.0578844, -0.0346887]]]

Expected (Unparsed): [[[0.0,-0.4409,-0.4517,-0.5394],[0.0,-0.357,-0.8216,-0.7612],[0.0,-0.1208,-0.2882,-0.6568],[-2.38453785,-2.19757344,-1.0601151199999999,-0.6282],[-3.62852985,-1.44036156,-1.36744902,-0.6795495],[-2.93505165,-1.65156328,0.0578843899999999,-0.03468864000000005]]]

Actual:   [[[0, -0.4409, -0.4517, -0.5394], [0, -0.357, -0.8216, -0.7612], [0, -0.1208, -0.2882, -0.6568], [-2.3845, -2.1975, -1.0601, -0.6282], [-3.6285, -1.4403, -1.3674, -0.6795], [-2.935, -1.6515, 0.0579, -0.0346]]]

Expected: [[[0, -0.4409, -0.4517, -0.5394], [0, -0.357, -0.8216, -0.7612], [0, -0.1208, -0.2882, -0.6568], [-2.3845, -2.1975, -1.0601, -0.6282], [-3.6285, -1.4403, -1.3674, -0.6795], [-2.935, -1.6515, 0.0579, -0.0346]]]