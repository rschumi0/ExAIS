import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Sof25944 = tf.keras.layers.Input(shape=([1, 2]))

Sof25944 = keras.layers.Softmax(axis=1, name = 'Sof25944', input_shape=(1, 2))(in0Sof25944)
Per51567 = keras.layers.Permute((2,1), name = 'Per51567',)(Sof25944)
Lea41590 = keras.layers.LeakyReLU(alpha=3.3290415308782997, name = 'Lea41590', )(Per51567)
model = tf.keras.models.Model(inputs=[in0Sof25944], outputs=Lea41590)
in0Sof25944 = tf.constant([[[0.1936, 0.1879]]])
print (np.array2string(model.predict([in0Sof25944],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Lea41590.png')

LSof25944 = softmax_layer([[[0.1936, 0.1879]]], 1, Sof25944), 
LPer51567 = permute_layer(Sof25944, 2,1, Per51567), 
LLea41590 = leaky_relu_layer(Per51567, 3.3290415308782997, Lea41590), 
exec_layers([LSof25944,LPer51567,LLea41590],["Sof25944","Per51567","Lea41590"],Lea41590,"Lea41590")

Actual (Unparsed): [[[1.0000000], [1.0000000]]]

Expected (Unparsed): [[[1.0],[1.0]]]

Actual:   [[[1], [1]]]

Expected: [[[1], [1]]]