import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Min93346 = tf.keras.layers.Input(shape=([1, 1, 1]))
in1Min93346 = tf.keras.layers.Input(shape=([1, 1, 1]))

Min93346 = keras.layers.Minimum(name = 'Min93346', )([in0Min93346,in1Min93346])
Res72311 = keras.layers.Reshape((1, 1, 1, 1), name = 'Res72311', )(Min93346)
Zer17215 = keras.layers.ZeroPadding3D(padding=((1, 1), (1, 1), (1, 1)), name = 'Zer17215', )(Res72311)
Lea66101 = keras.layers.LeakyReLU(alpha=5.36466274565845, name = 'Lea66101', )(Zer17215)
model = tf.keras.models.Model(inputs=[in0Min93346,in1Min93346], outputs=Lea66101)
in0Min93346 = tf.constant([[[[0.2137]]]])
in1Min93346 = tf.constant([[[[0.503]]]])
print (np.array2string(model.predict([in0Min93346,in1Min93346],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Lea66101.png')

LMin93346 = minimum_layer([[[[[0.2137]]]], [[[[0.503]]]]], Min93346), 
LRes72311 = reshape_layer(Min93346, [1, 1, 1, 1], Res72311), 
LZer17215 = zero_padding3D_layer(Res72311, 1, 1, 1, 1, 1, 1, Zer17215), 
LLea66101 = leaky_relu_layer(Zer17215, 5.36466274565845, Lea66101), 
exec_layers([LMin93346,LRes72311,LZer17215,LLea66101],["Min93346","Res72311","Zer17215","Lea66101"],Lea66101,"Lea66101")

Actual (Unparsed): [[[[[0.0000000], [0.0000000], [0.0000000]], [[0.0000000], [0.0000000], [0.0000000]], [[0.0000000], [0.0000000], [0.0000000]]], [[[0.0000000], [0.0000000], [0.0000000]], [[0.0000000], [0.2137000], [0.0000000]], [[0.0000000], [0.0000000], [0.0000000]]], [[[0.0000000], [0.0000000], [0.0000000]], [[0.0000000], [0.0000000], [0.0000000]], [[0.0000000], [0.0000000], [0.0000000]]]]]

Expected (Unparsed): [[[[[0],[0],[0]],[[0],[0],[0]],[[0],[0],[0]]],[[[0],[0],[0]],[[0],[0.2137],[0]],[[0],[0],[0]]],[[[0],[0],[0]],[[0],[0],[0]],[[0],[0],[0]]]]]

Actual:   [[[[[0], [0], [0]], [[0], [0], [0]], [[0], [0], [0]]], [[[0], [0], [0]], [[0], [0.2137], [0]], [[0], [0], [0]]], [[[0], [0], [0]], [[0], [0], [0]], [[0], [0], [0]]]]]

Expected: [[[[[0], [0], [0]], [[0], [0], [0]], [[0], [0], [0]]], [[[0], [0], [0]], [[0], [0.2137], [0]], [[0], [0], [0]]], [[[0], [0], [0]], [[0], [0], [0]], [[0], [0], [0]]]]]