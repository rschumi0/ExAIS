import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Glo73572 = tf.keras.layers.Input(shape=([1, 1]))
in0Con73127 = tf.keras.layers.Input(shape=([1, 1, 3]))
in0Dep86302 = tf.keras.layers.Input(shape=([2, 2, 2]))

Glo73572 = keras.layers.GlobalMaxPool1D(name = 'Glo73572', )(in0Glo73572)
Res35232 = keras.layers.Reshape((1, 1), name = 'Res35232', )(Glo73572)
Res17010 = keras.layers.Reshape((1, 1, 1), name = 'Res17010', )(Res35232)
Con73127 = keras.layers.Concatenate(axis=3, name = 'Con73127', )([Res17010,in0Con73127])
Dep86302 = keras.layers.DepthwiseConv2D((1, 1),strides=(1, 1), padding='same', name = 'Dep86302', )(in0Dep86302)
Sep39117 = keras.layers.SeparableConv2D(4, (2, 1),strides=(2, 2), padding='same', name = 'Sep39117', )(Dep86302)
ReL91657 = keras.layers.ReLU(max_value=1.5577809351413088, negative_slope=2.5913732454774214, threshold=7.939340955131996, name = 'ReL91657', )(Sep39117)
Mul6064 = keras.layers.Multiply(name = 'Mul6064', )([Con73127,ReL91657])
Res18188 = keras.layers.Reshape((1, 4), name = 'Res18188', )(Mul6064)
Ave57660 = keras.layers.AveragePooling1D(pool_size=(1), strides=(1), padding='valid', name = 'Ave57660', )(Res18188)
model = tf.keras.models.Model(inputs=[in0Glo73572,in0Con73127,in0Dep86302], outputs=Ave57660)
w = model.get_layer('Dep86302').get_weights() 
w[0] = np.array([[[[0.863], [0.5233]]]])
w[1] = np.array([0, 0])
model.get_layer('Dep86302').set_weights(w) 
w = model.get_layer('Sep39117').get_weights() 
w[0] = np.array([[[[0.0027], [0.8092]]], [[[0.6167], [0.6848]]]])
w[1] = np.array([[[[0.5517, 0.165, 0.1447, 0.3192], [0.8503, 0.1604, 0.1357, 0.7]]]])
w[2] = np.array([0, 0, 0, 0])
model.get_layer('Sep39117').set_weights(w) 
in0Glo73572 = tf.constant([[[1.4708]]])
in0Con73127 = tf.constant([[[[0.2083, 0.2696, 0.8312]]]])
in0Dep86302 = tf.constant([[[[0.7352, 0.228], [0.2634, 0.5783]], [[0.8108, 0.6124], [0.5775, 0.2139]]]])
print (np.array2string(model.predict([in0Glo73572,in0Con73127,in0Dep86302],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Ave57660.png')

LGlo73572 = global_max_pool1D_layer([[[1.4708]]], Glo73572), 
LRes35232 = reshape_layer(Glo73572, [1, 1], Res35232), 
LRes17010 = reshape_layer(Res35232, [1, 1, 1], Res17010), 
LCon73127 = concatenate_layer([Res17010,[[[[0.2083, 0.2696, 0.8312]]]]], 3, Con73127), 
LDep86302 = depthwise_conv2D_layer([[[[0.7352, 0.228], [0.2634, 0.5783]], [[0.8108, 0.6124], [0.5775, 0.2139]]]], 1, 1,[[[[0.863], [0.5233]]]],[0, 0], 1, 1, true, Dep86302), 
LSep39117 = separable_conv2D_layer(Dep86302, 2, 1,[[[[[0.0027], [0.8092]]], [[[0.6167], [0.6848]]]],[[[[0.5517, 0.165, 0.1447, 0.3192], [0.8503, 0.1604, 0.1357, 0.7]]]]],[0, 0, 0, 0], 2, 2, true, Sep39117), 
LReL91657 = relu_layer(Sep39117, 1.5577809351413088, 2.5913732454774214, 7.939340955131996, ReL91657), 
LMul6064 = multiply_layer([Con73127,ReL91657], Mul6064), 
LRes18188 = reshape_layer(Mul6064, [1, 4], Res18188), 
LAve57660 = average_pooling1D_layer(Res18188, 1, 1, false, Ave57660), 
exec_layers([LGlo73572,LRes35232,LRes17010,LCon73127,LDep86302,LSep39117,LReL91657,LMul6064,LRes18188,LAve57660],["Glo73572","Res35232","Res17010","Con73127","Dep86302","Sep39117","ReL91657","Mul6064","Res18188","Ave57660"],Ave57660,"Ave57660")

Actual (Unparsed): [[[-28.3248496, -4.2195761, -5.4729404, -16.3266147]]]

Expected (Unparsed): [[[-28.324848821198874,-4.219576241556995,-5.472940294992165,-16.326614603678927]]]

Actual:   [[[-28.3248, -4.2195, -5.4729, -16.3266]]]

Expected: [[[-28.3248, -4.2195, -5.4729, -16.3266]]]