import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Loc23655 = tf.keras.layers.Input(shape=([2, 2]))
in0Mul81986 = tf.keras.layers.Input(shape=([2, 1]))
in1Mul81986 = tf.keras.layers.Input(shape=([2, 1]))
in0Con90610 = tf.keras.layers.Input(shape=([2, 3]))
in0Con69287 = tf.keras.layers.Input(shape=([2, 4, 1]))
in0Loc47369 = tf.keras.layers.Input(shape=([1, 2, 1]))
in0Con73967 = tf.keras.layers.Input(shape=([8, 1]))
in0Den71250 = tf.keras.layers.Input(shape=([3, 2]))

Loc23655 = keras.layers.LocallyConnected1D(4, (2),strides=(1), name = 'Loc23655', )(in0Loc23655)
Zer23758 = keras.layers.ZeroPadding1D(padding=((1, 0)), name = 'Zer23758', )(Loc23655)
Mul81986 = keras.layers.Multiply(name = 'Mul81986', )([in0Mul81986,in1Mul81986])
Con90610 = keras.layers.Concatenate(axis=2, name = 'Con90610', )([Mul81986,in0Con90610])
Max62284 = keras.layers.Maximum(name = 'Max62284', )([Zer23758,Con90610])
Res26886 = keras.layers.Reshape((2, 4, 1), name = 'Res26886', )(Max62284)
Con69287 = keras.layers.Concatenate(axis=3, name = 'Con69287', )([Res26886,in0Con69287])
Loc47369 = keras.layers.LocallyConnected2D(2, (1, 2),strides=(1, 1), name = 'Loc47369', )(in0Loc47369)
Zer33798 = keras.layers.ZeroPadding2D(padding=((1, 0), (3, 0)), name = 'Zer33798', )(Loc47369)
Add74207 = keras.layers.Add(name = 'Add74207', )([Con69287,Zer33798])
Res63176 = keras.layers.Reshape((2, 8), name = 'Res63176', )(Add74207)
Glo51731 = keras.layers.GlobalAveragePooling1D(name = 'Glo51731', )(Res63176)
Res20322 = keras.layers.Reshape((8, 1), name = 'Res20322', )(Glo51731)
Con73967 = keras.layers.Concatenate(axis=2, name = 'Con73967', )([Res20322,in0Con73967])
Den71250 = keras.layers.Dense(2,name = 'Den71250', )(in0Den71250)
Zer78022 = keras.layers.ZeroPadding1D(padding=((5, 0)), name = 'Zer78022', )(Den71250)
Add3885 = keras.layers.Add(name = 'Add3885', )([Con73967,Zer78022])
model = tf.keras.models.Model(inputs=[in0Loc23655,in0Mul81986,in1Mul81986,in0Con90610,in0Con69287,in0Loc47369,in0Con73967,in0Den71250], outputs=Add3885)
w = model.get_layer('Loc23655').get_weights() 
w[0] = np.array([[[0.8791, 0.3315, 0.4469, 0.6479], [0.1687, 0.756, 0.6073, 0.0228], [0.0643, 0.1704, 0.1533, 0.2854], [0.7128, 0.4805, 0.7614, 0.195]]])
w[1] = np.array([[0, 0, 0, 0]])
model.get_layer('Loc23655').set_weights(w) 
w = model.get_layer('Loc47369').get_weights() 
w[0] = np.array([[[0.5866, 0.8906], [0.5131, 0.72]]])
w[1] = np.array([[[0, 0]]])
model.get_layer('Loc47369').set_weights(w) 
w = model.get_layer('Den71250').get_weights() 
w[0] = np.array([[0.2507, 0.6608], [0.6344, 0.968]])
w[1] = np.array([0.2998, 0.3287])
model.get_layer('Den71250').set_weights(w) 
in0Loc23655 = tf.constant([[[0.5673, 0.4041], [0.4388, 0.8881]]])
in0Mul81986 = tf.constant([[[0.9048], [0.0083]]])
in1Mul81986 = tf.constant([[[0.98], [0.922]]])
in0Con90610 = tf.constant([[[0.0424, 0.2313, 0.7725], [0.4765, 0.9734, 0.2284]]])
in0Con69287 = tf.constant([[[[0.9152], [0.6445], [0.7367], [0.8409]], [[0.7586], [0.0677], [0.325], [0.6584]]]])
in0Loc47369 = tf.constant([[[[0.6138], [0.6464]]]])
in0Con73967 = tf.constant([[[0.2192], [0.3075], [0.3901], [0.7228], [0.7136], [0.5305], [0.5691], [0.9292]]])
in0Den71250 = tf.constant([[[0.6313, 0.8126], [0.3385, 0.5334], [0.2577, 0.6692]]])
print (np.array2string(model.predict([in0Loc23655,in0Mul81986,in1Mul81986,in0Con90610,in0Con69287,in0Loc47369,in0Con73967,in0Den71250],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Add3885.png')

LLoc23655 = locally_connected1D_layer([[[0.5673, 0.4041], [0.4388, 0.8881]]], 2,[[[0.8791, 0.3315, 0.4469, 0.6479], [0.1687, 0.756, 0.6073, 0.0228], [0.0643, 0.1704, 0.1533, 0.2854], [0.7128, 0.4805, 0.7614, 0.195]]],[[0, 0, 0, 0]], 1, Loc23655), 
LZer23758 = zero_padding1D_layer(Loc23655, 1, 0, Zer23758), 
LMul81986 = multiply_layer([[[[0.9048], [0.0083]]], [[[0.98], [0.922]]]], Mul81986), 
LCon90610 = concatenate_layer([Mul81986,[[[0.0424, 0.2313, 0.7725], [0.4765, 0.9734, 0.2284]]]], 2, Con90610), 
LMax62284 = maximum_layer([Zer23758,Con90610], Max62284), 
LRes26886 = reshape_layer(Max62284, [2, 4, 1], Res26886), 
LCon69287 = concatenate_layer([Res26886,[[[[0.9152], [0.6445], [0.7367], [0.8409]], [[0.7586], [0.0677], [0.325], [0.6584]]]]], 3, Con69287), 
LLoc47369 = locally_connected2D_layer([[[[0.6138], [0.6464]]]], 1, 2,[[[0.5866, 0.8906], [0.5131, 0.72]]],[[[0, 0]]], 1, 1, Loc47369), 
LZer33798 = zero_padding2D_layer(Loc47369, 1, 0, 3, 0, Zer33798), 
LAdd74207 = add_layer([Con69287,Zer33798], Add74207), 
LRes63176 = reshape_layer(Add74207, [2, 8], Res63176), 
LGlo51731 = global_average_pooling1D_layer(Res63176, Glo51731), 
LRes20322 = reshape_layer(Glo51731, [8, 1], Res20322), 
LCon73967 = concatenate_layer([Res20322,[[[0.2192], [0.3075], [0.3901], [0.7228], [0.7136], [0.5305], [0.5691], [0.9292]]]], 2, Con73967), 
LDen71250 = dense_layer([[[0.6313, 0.8126], [0.3385, 0.5334], [0.2577, 0.6692]]], [[0.2507, 0.6608], [0.6344, 0.968]],[0.2998, 0.3287], Den71250), 
LZer78022 = zero_padding1D_layer(Den71250, 5, 0, Zer78022), 
LAdd3885 = add_layer([Con73967,Zer78022], Add3885), 
exec_layers([LLoc23655,LZer23758,LMul81986,LCon90610,LMax62284,LRes26886,LCon69287,LLoc47369,LZer33798,LAdd74207,LRes63176,LGlo51731,LRes20322,LCon73967,LDen71250,LZer78022,LAdd3885],["Loc23655","Zer23758","Mul81986","Con90610","Max62284","Res26886","Con69287","Loc47369","Zer33798","Add74207","Res63176","Glo51731","Res20322","Con73967","Den71250","Zer78022","Add3885"],Add3885,"Add3885")

Actual (Unparsed): [[[1.0574208, 0.2192000], [0.8369000, 0.3075000], [0.5187316, 0.3901000], [0.3561000, 0.7228000], [0.7368519, 0.7136000], [1.5044303, 2.0629598], [1.7927524, 1.6378120], [2.0446250, 2.0759738]]]

Expected (Unparsed): [[[1.05742081,0.2192],[0.8369,0.3075],[0.5187315600000001,0.3901],[0.35609999999999997,0.7228],[0.7368518399999999,0.7136],[1.50443035,2.06295984],[1.792752455,1.6378120000000003],[2.04462501,2.07597376]]]

Actual:   [[[1.0575, 0.2192], [0.8369, 0.3075], [0.5188, 0.3901], [0.3561, 0.7228], [0.7369, 0.7136], [1.5045, 2.063], [1.7928, 1.6379], [2.0447, 2.076]]]

Expected: [[[1.0575, 0.2192], [0.8369, 0.3075], [0.5188, 0.3901], [0.3561, 0.7228], [0.7369, 0.7136], [1.5045, 2.063], [1.7928, 1.6379], [2.0447, 2.076]]]