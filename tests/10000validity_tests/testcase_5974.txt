import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0GRU70491 = tf.keras.layers.Input(shape=([2, 1]))
in0Con39436 = tf.keras.layers.Input(shape=([2, 10, 2, 1]))
in0Thr82595 = tf.keras.layers.Input(shape=([2, 1, 2]))
in0PRe68563 = tf.keras.layers.Input(shape=([1, 2, 2]))
in0Con38269 = tf.keras.layers.Input(shape=([1, 2, 1]))
in0Con37432 = tf.keras.layers.Input(shape=([2, 10, 2, 1]))
in0Mul60837 = tf.keras.layers.Input(shape=([2, 2, 2, 2]))
in1Mul60837 = tf.keras.layers.Input(shape=([2, 2, 2, 2]))

GRU70491 = keras.layers.GRU(1,reset_after=False, recurrent_activation='sigmoid', name = 'GRU70491', )(in0GRU70491)
Res84476 = keras.layers.Reshape((1, 1), name = 'Res84476', )(GRU70491)
Res784 = keras.layers.Reshape((1, 1, 1), name = 'Res784', )(Res84476)
Res98351 = keras.layers.Reshape((1, 1, 1, 1), name = 'Res98351', )(Res784)
Glo14743 = keras.layers.GlobalAveragePooling3D(name = 'Glo14743', )(Res98351)
Res92164 = keras.layers.Reshape((1, 1), name = 'Res92164', )(Glo14743)
Res42399 = keras.layers.Reshape((1, 1, 1), name = 'Res42399', )(Res92164)
Res73924 = keras.layers.Reshape((1, 1, 1, 1), name = 'Res73924', )(Res42399)
Zer8515 = keras.layers.ZeroPadding3D(padding=((1, 0), (9, 0), (1, 0)), name = 'Zer8515', )(Res73924)
Con39436 = keras.layers.Concatenate(axis=4, name = 'Con39436', )([Zer8515,in0Con39436])
Thr82595 = keras.layers.ThresholdedReLU(theta=1.398138548364659, name = 'Thr82595', input_shape=(2, 1, 2))(in0Thr82595)
Sep33076 = keras.layers.SeparableConv2D(3, (2, 1),strides=(2, 2), padding='valid', name = 'Sep33076', )(Thr82595)
Zer18710 = keras.layers.ZeroPadding2D(padding=((0, 0), (1, 0)), name = 'Zer18710', )(Sep33076)
PRe68563 = keras.layers.PReLU(name = 'PRe68563', input_shape=(1, 2, 2))(in0PRe68563)
Con38269 = keras.layers.Concatenate(axis=3, name = 'Con38269', )([PRe68563,in0Con38269])
Max95834 = keras.layers.Maximum(name = 'Max95834', )([Zer18710,Con38269])
Res31262 = keras.layers.Reshape((1, 6), name = 'Res31262', )(Max95834)
Up_30675 = keras.layers.UpSampling1D(size=(1), name = 'Up_30675', )(Res31262)
Res89199 = keras.layers.Reshape((1, 6, 1), name = 'Res89199', )(Up_30675)
Res9850 = keras.layers.Reshape((1, 6, 1, 1), name = 'Res9850', )(Res89199)
Zer99749 = keras.layers.ZeroPadding3D(padding=((1, 0), (4, 0), (1, 0)), name = 'Zer99749', )(Res9850)
Con37432 = keras.layers.Concatenate(axis=4, name = 'Con37432', )([Zer99749,in0Con37432])
Mul60837 = keras.layers.Multiply(name = 'Mul60837', )([in0Mul60837,in1Mul60837])
Lay50274 = keras.layers.LayerNormalization(axis=1, epsilon=2.0490617689291177, name = 'Lay50274', )(Mul60837)
Zer25293 = keras.layers.ZeroPadding3D(padding=((0, 0), (8, 0), (0, 0)), name = 'Zer25293', )(Lay50274)
Min25784 = keras.layers.Minimum(name = 'Min25784', )([Con37432,Zer25293])
Sub88962 = keras.layers.Subtract(name = 'Sub88962', )([Con39436,Min25784])
model = tf.keras.models.Model(inputs=[in0GRU70491,in0Con39436,in0Thr82595,in0PRe68563,in0Con38269,in0Con37432,in0Mul60837,in1Mul60837], outputs=Sub88962)
w = model.get_layer('GRU70491').get_weights() 
w[0] = np.array([[7, 5, 7]])
w[1] = np.array([[4, 4, 10]])
w[2] = np.array([8, 7, 2])
model.get_layer('GRU70491').set_weights(w) 
w = model.get_layer('Sep33076').get_weights() 
w[0] = np.array([[[[0.561], [0.6582]]], [[[0.8791], [0.7638]]]])
w[1] = np.array([[[[0.9381, 0.2097, 0.0573], [0.7841, 0.097, 0.3812]]]])
w[2] = np.array([0, 0, 0])
model.get_layer('Sep33076').set_weights(w) 
w = model.get_layer('PRe68563').get_weights() 
w[0] = np.array([[[0.0681, 0.5607], [0.8738, 0.5489]]])
model.get_layer('PRe68563').set_weights(w) 
in0GRU70491 = tf.constant([[[3], [4]]])
in0Con39436 = tf.constant([[[[[0.2825], [0.7413]], [[0.3509], [0.7628]], [[0.3442], [0.6411]], [[0.0587], [0.3693]], [[0.94], [0.3317]], [[0.0867], [0.8299]], [[0.8905], [0.1794]], [[0.8571], [0.1389]], [[0.045], [0.8483]], [[0.3894], [0.482]]], [[[0.9312], [0.4965]], [[0.4961], [0.6183]], [[0.5657], [0.7625]], [[0.196], [0.5034]], [[0.685], [0.8712]], [[0.916], [0.3933]], [[0.6295], [0.9261]], [[0.3543], [0.8564]], [[0.9967], [0.3384]], [[0.5859], [0.9599]]]]])
in0Thr82595 = tf.constant([[[[0.3018, 0.4911]], [[0.639, 0.161]]]])
in0PRe68563 = tf.constant([[[[0.9155, 0.2675], [0.9923, 0.321]]]])
in0Con38269 = tf.constant([[[[0.4329], [0.1697]]]])
in0Con37432 = tf.constant([[[[[0.9276], [0.0654]], [[0.6461], [0.0458]], [[0.1625], [0.0484]], [[0.7856], [0.525]], [[0.5078], [0.5622]], [[0.5292], [0.5924]], [[0.3202], [0.7418]], [[0.6213], [0.2973]], [[0.4976], [0.9895]], [[0.5962], [0.1026]]], [[[0.4328], [0.7472]], [[0.6861], [0.4954]], [[0.6038], [0.2876]], [[0.1996], [0.5087]], [[0.6073], [0.124]], [[0.8805], [0.0879]], [[0.5138], [0.0289]], [[0.784], [0.7053]], [[0.6552], [0.4588]], [[0.8953], [0.0104]]]]])
in0Mul60837 = tf.constant([[[[[0.5448, 0.023], [0.3542, 0.3011]], [[0.607, 0.0917], [0.8418, 0.0687]]], [[[0.7041, 0.4015], [0.8832, 0.9494]], [[0.6781, 0.8306], [0.7702, 0.0388]]]]])
in1Mul60837 = tf.constant([[[[[0.5454, 0.1413], [0.8138, 0.2239]], [[0.0024, 0.2376], [0.8618, 0.0436]]], [[[0.8047, 0.4992], [0.1315, 0.3187]], [[0.3469, 0.5902], [0.4052, 0.3393]]]]])
print (np.array2string(model.predict([in0GRU70491,in0Con39436,in0Thr82595,in0PRe68563,in0Con38269,in0Con37432,in0Mul60837,in1Mul60837],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Sub88962.png')

LGRU70491 = gru_layer([[[3], [4]]],[[7, 5, 7]],[[4, 4, 10]],[8, 7, 2], false, GRU70491), 
LRes84476 = reshape_layer(GRU70491, [1, 1], Res84476), 
LRes784 = reshape_layer(Res84476, [1, 1, 1], Res784), 
LRes98351 = reshape_layer(Res784, [1, 1, 1, 1], Res98351), 
LGlo14743 = global_average_pooling3D_layer(Res98351, Glo14743), 
LRes92164 = reshape_layer(Glo14743, [1, 1], Res92164), 
LRes42399 = reshape_layer(Res92164, [1, 1, 1], Res42399), 
LRes73924 = reshape_layer(Res42399, [1, 1, 1, 1], Res73924), 
LZer8515 = zero_padding3D_layer(Res73924, 1, 0, 9, 0, 1, 0, Zer8515), 
LCon39436 = concatenate_layer([Zer8515,[[[[[0.2825], [0.7413]], [[0.3509], [0.7628]], [[0.3442], [0.6411]], [[0.0587], [0.3693]], [[0.94], [0.3317]], [[0.0867], [0.8299]], [[0.8905], [0.1794]], [[0.8571], [0.1389]], [[0.045], [0.8483]], [[0.3894], [0.482]]], [[[0.9312], [0.4965]], [[0.4961], [0.6183]], [[0.5657], [0.7625]], [[0.196], [0.5034]], [[0.685], [0.8712]], [[0.916], [0.3933]], [[0.6295], [0.9261]], [[0.3543], [0.8564]], [[0.9967], [0.3384]], [[0.5859], [0.9599]]]]]], 4, Con39436), 
LThr82595 = thresholded_relu_layer([[[[0.3018, 0.4911]], [[0.639, 0.161]]]], 1.398138548364659, Thr82595), 
LSep33076 = separable_conv2D_layer(Thr82595, 2, 1,[[[[[0.561], [0.6582]]], [[[0.8791], [0.7638]]]],[[[[0.9381, 0.2097, 0.0573], [0.7841, 0.097, 0.3812]]]]],[0, 0, 0], 2, 2, false, Sep33076), 
LZer18710 = zero_padding2D_layer(Sep33076, 0, 0, 1, 0, Zer18710), 
LPRe68563 = prelu_layer([[[[0.9155, 0.2675], [0.9923, 0.321]]]], [[[0.0681, 0.5607], [0.8738, 0.5489]]], PRe68563), 
LCon38269 = concatenate_layer([PRe68563,[[[[0.4329], [0.1697]]]]], 3, Con38269), 
LMax95834 = maximum_layer([Zer18710,Con38269], Max95834), 
LRes31262 = reshape_layer(Max95834, [1, 6], Res31262), 
LUp_30675 = up_sampling1D_layer(Res31262, 1, Up_30675), 
LRes89199 = reshape_layer(Up_30675, [1, 6, 1], Res89199), 
LRes9850 = reshape_layer(Res89199, [1, 6, 1, 1], Res9850), 
LZer99749 = zero_padding3D_layer(Res9850, 1, 0, 4, 0, 1, 0, Zer99749), 
LCon37432 = concatenate_layer([Zer99749,[[[[[0.9276], [0.0654]], [[0.6461], [0.0458]], [[0.1625], [0.0484]], [[0.7856], [0.525]], [[0.5078], [0.5622]], [[0.5292], [0.5924]], [[0.3202], [0.7418]], [[0.6213], [0.2973]], [[0.4976], [0.9895]], [[0.5962], [0.1026]]], [[[0.4328], [0.7472]], [[0.6861], [0.4954]], [[0.6038], [0.2876]], [[0.1996], [0.5087]], [[0.6073], [0.124]], [[0.8805], [0.0879]], [[0.5138], [0.0289]], [[0.784], [0.7053]], [[0.6552], [0.4588]], [[0.8953], [0.0104]]]]]], 4, Con37432), 
LMul60837 = multiply_layer([[[[[[0.5448, 0.023], [0.3542, 0.3011]], [[0.607, 0.0917], [0.8418, 0.0687]]], [[[0.7041, 0.4015], [0.8832, 0.9494]], [[0.6781, 0.8306], [0.7702, 0.0388]]]]], [[[[[0.5454, 0.1413], [0.8138, 0.2239]], [[0.0024, 0.2376], [0.8618, 0.0436]]], [[[0.8047, 0.4992], [0.1315, 0.3187]], [[0.3469, 0.5902], [0.4052, 0.3393]]]]]], Mul60837), 
LLay50274 = layer_normalization_layer(Mul60837, 1, 2.0490617689291177, Lay50274), 
LZer25293 = zero_padding3D_layer(Lay50274, 0, 0, 8, 0, 0, 0, Zer25293), 
LMin25784 = minimum_layer([Con37432,Zer25293], Min25784), 
LSub88962 = subtract_layer(Con39436,Min25784, Sub88962), 
exec_layers([LGRU70491,LRes84476,LRes784,LRes98351,LGlo14743,LRes92164,LRes42399,LRes73924,LZer8515,LCon39436,LThr82595,LSep33076,LZer18710,LPRe68563,LCon38269,LMax95834,LRes31262,LUp_30675,LRes89199,LRes9850,LZer99749,LCon37432,LMul60837,LLay50274,LZer25293,LMin25784,LSub88962],["GRU70491","Res84476","Res784","Res98351","Glo14743","Res92164","Res42399","Res73924","Zer8515","Con39436","Thr82595","Sep33076","Zer18710","PRe68563","Con38269","Max95834","Res31262","Up_30675","Res89199","Res9850","Zer99749","Con37432","Mul60837","Lay50274","Zer25293","Min25784","Sub88962"],Sub88962,"Sub88962")

Actual (Unparsed): [[[[[0.0000000, 0.2825000], [0.0000000, 0.7413000]], [[0.0000000, 0.3509000], [0.0000000, 0.7628000]], [[0.0000000, 0.3442000], [0.0000000, 0.6411000]], [[0.0000000, 0.0587000], [0.0000000, 0.3693000]], [[0.0000000, 0.9400000], [0.0000000, 0.3317000]], [[0.0000000, 0.0867000], [0.0000000, 0.8299000]], [[0.0000000, 0.8905000], [0.0000000, 0.1794000]], [[0.0000000, 0.8571000], [0.0000000, 0.1389000]], [[0.0937053, 0.1137108], [0.0000000, 0.9301636]], [[0.0813860, 0.5508739], [0.0000000, 0.4855521]]], [[[0.0000000, 0.9312000], [0.0000000, 0.4965000]], [[0.0000000, 0.4961000], [0.0000000, 0.6183000]], [[0.0000000, 0.5657000], [0.0000000, 0.7625000]], [[0.0000000, 0.1960000], [0.0000000, 0.5034000]], [[0.0000000, 0.6850000], [0.0000000, 0.8712000]], [[0.0000000, 0.9160000], [0.0000000, 0.3933000]], [[0.0000000, 0.6295000], [0.0000000, 0.9261000]], [[0.0000000, 0.3543000], [0.0000000, 0.8564000]], [[0.0000000, 0.9279891], [0.0600078, 0.2565364]], [[0.0000000, 0.4244261], [0.1429089, 0.9563479]]]]]

Expected (Unparsed): [[[[[0,0.2825],[0,0.7413]],[[0,0.3509],[0,0.7628]],[[0,0.3442],[0,0.6411]],[[0,0.0587],[0,0.3693]],[[0,0.94],[0,0.3317]],[[0,0.0867],[0,0.8299]],[[0,0.8905],[0,0.1794]],[[0,0.8571],[0,0.1389]],[[0.09370530279458297,0.11371084660278337],[0,0.9301636586624357]],[[0.08138595662578264,0.5508738656918407],[0,0.4855521409794674]]],[[[0,0.9312],[0,0.4965]],[[0,0.4961],[0,0.6183]],[[0,0.5657],[0,0.7625]],[[0,0.196],[0,0.5034]],[[0,0.685],[0,0.8712]],[[0,0.916],[0,0.3933]],[[0,0.6295],[0,0.9261]],[[0,0.3543],[0,0.8564]],[[0,0.9279891533972167],[0.06000785063601469,0.2565363413375643]],[[0,0.4244261343081593],[0.1429089234159404,0.9563478590205325]]]]]

Actual:   [[[[[0, 0.2825], [0, 0.7413]], [[0, 0.3509], [0, 0.7628]], [[0, 0.3442], [0, 0.6411]], [[0, 0.0587], [0, 0.3693]], [[0, 0.94], [0, 0.3317]], [[0, 0.0867], [0, 0.8299]], [[0, 0.8905], [0, 0.1794]], [[0, 0.8571], [0, 0.1389]], [[0.0938, 0.1138], [0, 0.9302]], [[0.0814, 0.5509], [0, 0.4856]]], [[[0, 0.9312], [0, 0.4965]], [[0, 0.4961], [0, 0.6183]], [[0, 0.5657], [0, 0.7625]], [[0, 0.196], [0, 0.5034]], [[0, 0.685], [0, 0.8712]], [[0, 0.916], [0, 0.3933]], [[0, 0.6295], [0, 0.9261]], [[0, 0.3543], [0, 0.8564]], [[0, 0.928], [0.0601, 0.2566]], [[0, 0.4245], [0.143, 0.9564]]]]]

Expected: [[[[[0, 0.2825], [0, 0.7413]], [[0, 0.3509], [0, 0.7628]], [[0, 0.3442], [0, 0.6411]], [[0, 0.0587], [0, 0.3693]], [[0, 0.94], [0, 0.3317]], [[0, 0.0867], [0, 0.8299]], [[0, 0.8905], [0, 0.1794]], [[0, 0.8571], [0, 0.1389]], [[0.0938, 0.1138], [0, 0.9302]], [[0.0814, 0.5509], [0, 0.4856]]], [[[0, 0.9312], [0, 0.4965]], [[0, 0.4961], [0, 0.6183]], [[0, 0.5657], [0, 0.7625]], [[0, 0.196], [0, 0.5034]], [[0, 0.685], [0, 0.8712]], [[0, 0.916], [0, 0.3933]], [[0, 0.6295], [0, 0.9261]], [[0, 0.3543], [0, 0.8564]], [[0, 0.928], [0.0601, 0.2566]], [[0, 0.4245], [0.143, 0.9564]]]]]