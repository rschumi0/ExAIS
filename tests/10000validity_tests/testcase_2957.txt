import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Ave14885 = tf.keras.layers.Input(shape=([1, 2]))

Ave14885 = keras.layers.AveragePooling1D(pool_size=(1), name = 'Ave14885', )(in0Ave14885)
Zer31528 = keras.layers.ZeroPadding1D(padding=((1, 1)), name = 'Zer31528', )(Ave14885)
Lay9859 = keras.layers.LayerNormalization(axis=2, epsilon=1.9294649027698865, name = 'Lay9859', )(Zer31528)
model = tf.keras.models.Model(inputs=[in0Ave14885], outputs=Lay9859)
in0Ave14885 = tf.constant([[[1.8492, 1.4672]]])
print (np.array2string(model.predict([in0Ave14885],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Lay9859.png')

LAve14885 = average_pooling1D_layer([[[1.8492, 1.4672]]], 1, Ave14885), 
LZer31528 = zero_padding1D_layer(Ave14885, 1, 1, Zer31528), 
LLay9859 = layer_normalization_layer(Zer31528, 2, 1.9294649027698865, Lay9859), 
exec_layers([LAve14885,LZer31528,LLay9859],["Ave14885","Zer31528","Lay9859"],Lay9859,"Lay9859")

Actual (Unparsed): [[[0.0000000, 0.0000000], [0.1362221, -0.1362221], [0.0000000, 0.0000000]]]

Expected (Unparsed): [[[0.0,0.0],[0.13622210458217482,-0.13622210458217465],[0.0,0.0]]]

Actual:   [[[0, 0], [0.1363, -0.1362], [0, 0]]]

Expected: [[[0, 0], [0.1363, -0.1362], [0, 0]]]