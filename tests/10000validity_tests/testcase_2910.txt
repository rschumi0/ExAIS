import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Sub86750 = tf.keras.layers.Input(shape=([2, 2, 3, 2]))
in1Sub86750 = tf.keras.layers.Input(shape=([2, 2, 3, 2]))
in0Dot64127 = tf.keras.layers.Input(shape=([3]))
in1Dot64127 = tf.keras.layers.Input(shape=([3]))
in0Dot45716 = tf.keras.layers.Input(shape=([2]))
in1Dot45716 = tf.keras.layers.Input(shape=([2]))
in0Con16905 = tf.keras.layers.Input(shape=([23]))

Sub86750 = keras.layers.Subtract(name = 'Sub86750', )([in0Sub86750,in1Sub86750])
Res26545 = keras.layers.Reshape((2, 2, 6), name = 'Res26545', )(Sub86750)
Res89445 = keras.layers.Reshape((2, 12), name = 'Res89445', )(Res26545)
Fla2787 = keras.layers.Flatten(name = 'Fla2787', )(Res89445)
Dot64127 = keras.layers.Dot(axes=(1, 1), name = 'Dot64127', )([in0Dot64127,in1Dot64127])
Dot45716 = keras.layers.Dot(axes=(1, 1), name = 'Dot45716', )([in0Dot45716,in1Dot45716])
Mul25231 = keras.layers.Multiply(name = 'Mul25231', )([Dot64127,Dot45716])
Con16905 = keras.layers.Concatenate(axis=1, name = 'Con16905', )([Mul25231,in0Con16905])
Max20478 = keras.layers.Maximum(name = 'Max20478', )([Fla2787,Con16905])
model = tf.keras.models.Model(inputs=[in0Sub86750,in1Sub86750,in0Dot64127,in1Dot64127,in0Dot45716,in1Dot45716,in0Con16905], outputs=Max20478)
in0Sub86750 = tf.constant([[[[[0.1029, 0.0357], [0.1004, 0.543], [0.2634, 0.0957]], [[0.1061, 0.7722], [0.6851, 0.475], [0.8129, 0.147]]], [[[0.2656, 0.1112], [0.1815, 0.771], [0.4126, 0.5158]], [[0.4289, 0.0921], [0.3347, 0.3587], [0.9556, 0.2465]]]]])
in1Sub86750 = tf.constant([[[[[0.7971, 0.722], [0.9375, 0.5199], [0.7568, 0.6092]], [[0.4521, 0.5938], [0.8656, 0.1838], [0.5364, 0.2162]]], [[[0.5624, 0.519], [0.7591, 0.8172], [0.3613, 0.3445]], [[0.7301, 0.3745], [0.9889, 0.3919], [0.4661, 0.5288]]]]])
in0Dot64127 = tf.constant([[0.2223, 0.461, 0.6881]])
in1Dot64127 = tf.constant([[0.5447, 0.6364, 0.256]])
in0Dot45716 = tf.constant([[0.9313, 0.2197]])
in1Dot45716 = tf.constant([[0.9821, 0.3724]])
in0Con16905 = tf.constant([[0.8501, 0.3515, 0.2686, 0.4894, 0.3954, 0.4806, 0.2505, 0.0648, 0.1182, 0.2596, 0.5953, 0.4866, 0.0888, 0.2191, 0.1144, 0.3345, 0.3497, 0.7252, 0.0893, 0.6518, 0.1172, 0.7042, 0.5777]])
print (np.array2string(model.predict([in0Sub86750,in1Sub86750,in0Dot64127,in1Dot64127,in0Dot45716,in1Dot45716,in0Con16905],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Max20478.png')

LSub86750 = subtract_layer([[[[[0.1029, 0.0357], [0.1004, 0.543], [0.2634, 0.0957]], [[0.1061, 0.7722], [0.6851, 0.475], [0.8129, 0.147]]], [[[0.2656, 0.1112], [0.1815, 0.771], [0.4126, 0.5158]], [[0.4289, 0.0921], [0.3347, 0.3587], [0.9556, 0.2465]]]]], [[[[[0.7971, 0.722], [0.9375, 0.5199], [0.7568, 0.6092]], [[0.4521, 0.5938], [0.8656, 0.1838], [0.5364, 0.2162]]], [[[0.5624, 0.519], [0.7591, 0.8172], [0.3613, 0.3445]], [[0.7301, 0.3745], [0.9889, 0.3919], [0.4661, 0.5288]]]]], Sub86750), 
LRes26545 = reshape_layer(Sub86750, [2, 2, 6], Res26545), 
LRes89445 = reshape_layer(Res26545, [2, 12], Res89445), 
LFla2787 = flatten_layer(Res89445, Fla2787), 
LDot64127 = dot_layer([[0.2223, 0.461, 0.6881]], [[0.5447, 0.6364, 0.256]], 1, 1, Dot64127), 
LDot45716 = dot_layer([[0.9313, 0.2197]], [[0.9821, 0.3724]], 1, 1, Dot45716), 
LMul25231 = multiply_layer([Dot64127,Dot45716], Mul25231), 
LCon16905 = concatenate_layer([Mul25231,[[0.8501, 0.3515, 0.2686, 0.4894, 0.3954, 0.4806, 0.2505, 0.0648, 0.1182, 0.2596, 0.5953, 0.4866, 0.0888, 0.2191, 0.1144, 0.3345, 0.3497, 0.7252, 0.0893, 0.6518, 0.1172, 0.7042, 0.5777]]], 1, Con16905), 
LMax20478 = maximum_layer([Fla2787,Con16905], Max20478), 
exec_layers([LSub86750,LRes26545,LRes89445,LFla2787,LDot64127,LDot45716,LMul25231,LCon16905,LMax20478],["Sub86750","Res26545","Res89445","Fla2787","Dot64127","Dot45716","Mul25231","Con16905","Max20478"],Max20478,"Max20478")

Actual (Unparsed): [[0.5885217, 0.8501000, 0.3515000, 0.2686000, 0.4894000, 0.3954000, 0.4806000, 0.2505000, 0.0648000, 0.2912000, 0.2765000, 0.5953000, 0.4866000, 0.0888000, 0.2191000, 0.1144000, 0.3345000, 0.3497000, 0.7252000, 0.0893000, 0.6518000, 0.1172000, 0.7042000, 0.5777000]]

Expected (Unparsed): [[0.588521749547468,0.8501,0.3515,0.2686,0.4894,0.3954,0.4806,0.2505,0.0648,0.2912,0.27649999999999997,0.5953,0.4866,0.0888,0.2191,0.1144,0.3345,0.3497,0.7252,0.0893,0.6518,0.1172,0.7042,0.5777]]

Actual:   [[0.5886, 0.8501, 0.3515, 0.2686, 0.4894, 0.3954, 0.4806, 0.2505, 0.0648, 0.2912, 0.2765, 0.5953, 0.4866, 0.0888, 0.2191, 0.1144, 0.3345, 0.3497, 0.7252, 0.0893, 0.6518, 0.1172, 0.7042, 0.5777]]

Expected: [[0.5886, 0.8501, 0.3515, 0.2686, 0.4894, 0.3954, 0.4806, 0.2505, 0.0648, 0.2912, 0.2765, 0.5953, 0.4866, 0.0888, 0.2191, 0.1144, 0.3345, 0.3497, 0.7252, 0.0893, 0.6518, 0.1172, 0.7042, 0.5777]]