import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Min64321 = tf.keras.layers.Input(shape=([1, 2, 2]))
in1Min64321 = tf.keras.layers.Input(shape=([1, 2, 2]))
in0Sof68221 = tf.keras.layers.Input(shape=([2, 1]))
in0Con66615 = tf.keras.layers.Input(shape=([2, 7]))

Min64321 = keras.layers.Minimum(name = 'Min64321', )([in0Min64321,in1Min64321])
Con90707 = keras.layers.Conv2D(4, (1, 2),strides=(1, 1), padding='same', dilation_rate=(1, 1), name = 'Con90707', )(Min64321)
Res31458 = keras.layers.Reshape((1, 8), name = 'Res31458', )(Con90707)
Zer88466 = keras.layers.ZeroPadding1D(padding=((1, 0)), name = 'Zer88466', )(Res31458)
Sof68221 = keras.layers.Softmax(axis=1, name = 'Sof68221', input_shape=(2, 1))(in0Sof68221)
Con66615 = keras.layers.Concatenate(axis=2, name = 'Con66615', )([Sof68221,in0Con66615])
Add58689 = keras.layers.Add(name = 'Add58689', )([Zer88466,Con66615])
model = tf.keras.models.Model(inputs=[in0Min64321,in1Min64321,in0Sof68221,in0Con66615], outputs=Add58689)
w = model.get_layer('Con90707').get_weights() 
w[0] = np.array([[[[0.1301, 0.5743, 0.6576, 0.4683], [0.674, 0.5514, 0.7378, 0.5286]], [[0.5398, 0.7362, 0.3781, 0.5498], [0.5021, 0.14, 0.575, 0.5761]]]])
w[1] = np.array([0, 0, 0, 0])
model.get_layer('Con90707').set_weights(w) 
in0Min64321 = tf.constant([[[[0.0678, 0.1306], [0.2522, 0.0362]]]])
in1Min64321 = tf.constant([[[[0.1569, 0.7829], [0.5031, 0.2481]]]])
in0Sof68221 = tf.constant([[[0.837], [0.168]]])
in0Con66615 = tf.constant([[[0.1496, 0.8352, 0.8773, 0.5263, 0.8567, 0.5224, 0.6623], [0.5278, 0.2433, 0.6665, 0.3268, 0.8086, 0.3978, 0.4597]]])
print (np.array2string(model.predict([in0Min64321,in1Min64321,in0Sof68221,in0Con66615],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Add58689.png')

LMin64321 = minimum_layer([[[[[0.0678, 0.1306], [0.2522, 0.0362]]]], [[[[0.1569, 0.7829], [0.5031, 0.2481]]]]], Min64321), 
LCon90707 = conv2D_layer(Min64321, 1, 2,[[[[0.1301, 0.5743, 0.6576, 0.4683], [0.674, 0.5514, 0.7378, 0.5286]], [[0.5398, 0.7362, 0.3781, 0.5498], [0.5021, 0.14, 0.575, 0.5761]]]],[0, 0, 0, 0], 1, 1, true, 1, 1, Con90707), 
LRes31458 = reshape_layer(Con90707, [1, 8], Res31458), 
LZer88466 = zero_padding1D_layer(Res31458, 1, 0, Zer88466), 
LSof68221 = softmax_layer([[[0.837], [0.168]]], 1, Sof68221), 
LCon66615 = concatenate_layer([Sof68221,[[[0.1496, 0.8352, 0.8773, 0.5263, 0.8567, 0.5224, 0.6623], [0.5278, 0.2433, 0.6665, 0.3268, 0.8086, 0.3978, 0.4597]]]], 2, Con66615), 
LAdd58689 = add_layer([Zer88466,Con66615], Add58689), 
exec_layers([LMin64321,LCon90707,LRes31458,LZer88466,LSof68221,LCon66615,LAdd58689],["Min64321","Con90707","Res31458","Zer88466","Sof68221","Con66615","Add58689"],Add58689,"Add58689")

Actual (Unparsed): [[[0.6612792, 0.1496000, 0.8352000, 0.8773000, 0.5263000, 0.8567000, 0.5224000, 0.6623000], [0.5898796, 0.8294881, 0.5004138, 0.9268003, 0.3840100, 0.9733992, 0.5903551, 0.5969406]]]

Expected (Unparsed): [[[0.6612792063229501,0.1496,0.8352,0.8773,0.5263,0.8567,0.5224,0.6623],[0.5898795536770499,0.8294880200000001,0.5004137799999999,0.9268002799999999,0.38401001999999995,0.9733991399999999,0.5903550799999999,0.59694058]]]

Actual:   [[[0.6613, 0.1496, 0.8352, 0.8773, 0.5263, 0.8567, 0.5224, 0.6623], [0.5899, 0.8295, 0.5005, 0.9269, 0.3841, 0.9734, 0.5904, 0.597]]]

Expected: [[[0.6613, 0.1496, 0.8352, 0.8773, 0.5263, 0.8567, 0.5224, 0.6623], [0.5899, 0.8295, 0.5005, 0.9269, 0.3841, 0.9734, 0.5904, 0.597]]]