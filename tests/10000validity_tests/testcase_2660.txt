import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Con68776 = tf.keras.layers.Input(shape=([2, 2, 1, 2]))
in0Dot2042 = tf.keras.layers.Input(shape=([3]))
in1Dot2042 = tf.keras.layers.Input(shape=([3]))
in0Con14597 = tf.keras.layers.Input(shape=([11]))

Con68776 = keras.layers.Conv3DTranspose(2, (2, 1, 1),strides=(1, 1, 1), padding='valid', name = 'Con68776', )(in0Con68776)
Res27099 = keras.layers.Reshape((3, 2, 2), name = 'Res27099', )(Con68776)
Res41414 = keras.layers.Reshape((3, 4), name = 'Res41414', )(Res27099)
Fla31808 = keras.layers.Flatten(name = 'Fla31808', )(Res41414)
Dot2042 = keras.layers.Dot(axes=(1, 1), name = 'Dot2042', )([in0Dot2042,in1Dot2042])
Res87409 = keras.layers.Reshape((1, 1), name = 'Res87409', )(Dot2042)
Res75894 = keras.layers.Reshape((1, 1, 1), name = 'Res75894', )(Res87409)
Glo9109 = keras.layers.GlobalMaxPool2D(name = 'Glo9109', )(Res75894)
Con14597 = keras.layers.Concatenate(axis=1, name = 'Con14597', )([Glo9109,in0Con14597])
Mul25664 = keras.layers.Multiply(name = 'Mul25664', )([Fla31808,Con14597])
Res7559 = keras.layers.Reshape((12, 1), name = 'Res7559', )(Mul25664)
Res35701 = keras.layers.Reshape((12, 1, 1), name = 'Res35701', )(Res7559)
Loc42438 = keras.layers.LocallyConnected2D(3, (8, 1),strides=(1, 1), name = 'Loc42438', )(Res35701)
model = tf.keras.models.Model(inputs=[in0Con68776,in0Dot2042,in1Dot2042,in0Con14597], outputs=Loc42438)
w = model.get_layer('Con68776').get_weights() 
w[0] = np.array([[[[[0.8142, 0.6411], [0.8327, 0.2667]]]], [[[[0.6666, 0.2555], [0.8974, 0.634]]]]])
w[1] = np.array([0, 0])
model.get_layer('Con68776').set_weights(w) 
w = model.get_layer('Loc42438').get_weights() 
w[0] = np.array([[[0.231, 0.2039, 0.4468], [0.7901, 0.5721, 0.529], [0.1624, 0.1083, 0.7552], [0.9872, 0.6961, 0.459], [0.4756, 0.3779, 0.3392], [0.0835, 0.5336, 0.0538], [0.7803, 0.699, 0.254], [0.8466, 0.4685, 0.0136]], [[0.4044, 0.6583, 0.9597], [0.6882, 0.264, 0.5033], [0.6131, 0.4773, 0.1812], [0.7519, 0.3245, 0.517], [0.1644, 0.0787, 0.3361], [0.2435, 0.7966, 0.1519], [0.5454, 0.2249, 0.0394], [0.412, 0.1535, 0.2665]], [[0.2952, 0.3834, 0.9351], [0.512, 0.4354, 0.8384], [0.8944, 0.903, 0.3694], [0.7918, 0.5769, 0.2835], [0.1294, 0.7389, 0.8482], [0.638, 0.3767, 0.7743], [0.5227, 0.4399, 0.6949], [0.2264, 0.8268, 0.8524]], [[0.0331, 0.2259, 0.3147], [0.5699, 0.1813, 0.1901], [0.522, 0.4205, 0.2206], [0.5498, 0.335, 0.4589], [0.4737, 0.1708, 0.7858], [0.169, 0.603, 0.8294], [0.7369, 0.572, 0.1496], [0.7908, 0.7135, 0.486]], [[0.9901, 0.0079, 0.9611], [0.9217, 0.898, 0.709], [0.6571, 0.6128, 0.6411], [0.1756, 0.0924, 0.9801], [0.8187, 0.3258, 0.55], [0.4046, 0.9509, 0.3106], [0.5584, 0.5475, 0.1668], [0.7101, 0.1697, 0.5959]]])
w[1] = np.array([[[0, 0, 0]], [[0, 0, 0]], [[0, 0, 0]], [[0, 0, 0]], [[0, 0, 0]]])
model.get_layer('Loc42438').set_weights(w) 
in0Con68776 = tf.constant([[[[[0.3738, 0.8771]], [[0.6753, 0.3847]]], [[[0.9272, 0.2271]], [[0.0304, 0.5737]]]]])
in0Dot2042 = tf.constant([[0.7283, 0.2327, 0.9973]])
in1Dot2042 = tf.constant([[0.9565, 0.4777, 0.6678]])
in0Con14597 = tf.constant([[0.0101, 0.8569, 0.7045, 0.2789, 0.3307, 0.3604, 0.522, 0.2847, 0.1743, 0.7805, 0.1318]])
print (np.array2string(model.predict([in0Con68776,in0Dot2042,in1Dot2042,in0Con14597],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Loc42438.png')

LCon68776 = conv3D_transpose_layer([[[[[0.3738, 0.8771]], [[0.6753, 0.3847]]], [[[0.9272, 0.2271]], [[0.0304, 0.5737]]]]], 2, 1, 1,[[[[[0.8142, 0.6411], [0.8327, 0.2667]]]], [[[[0.6666, 0.2555], [0.8974, 0.634]]]]],[0, 0], 1, 1, 1, false, Con68776), 
LRes27099 = reshape_layer(Con68776, [3, 2, 2], Res27099), 
LRes41414 = reshape_layer(Res27099, [3, 4], Res41414), 
LFla31808 = flatten_layer(Res41414, Fla31808), 
LDot2042 = dot_layer([[0.7283, 0.2327, 0.9973]], [[0.9565, 0.4777, 0.6678]], 1, 1, Dot2042), 
LRes87409 = reshape_layer(Dot2042, [1, 1], Res87409), 
LRes75894 = reshape_layer(Res87409, [1, 1, 1], Res75894), 
LGlo9109 = global_max_pool2D_layer(Res75894, Glo9109), 
LCon14597 = concatenate_layer([Glo9109,[[0.0101, 0.8569, 0.7045, 0.2789, 0.3307, 0.3604, 0.522, 0.2847, 0.1743, 0.7805, 0.1318]]], 1, Con14597), 
LMul25664 = multiply_layer([Fla31808,Con14597], Mul25664), 
LRes7559 = reshape_layer(Mul25664, [12, 1], Res7559), 
LRes35701 = reshape_layer(Res7559, [12, 1, 1], Res35701), 
LLoc42438 = locally_connected2D_layer(Res35701, 8, 1,[[[0.231, 0.2039, 0.4468], [0.7901, 0.5721, 0.529], [0.1624, 0.1083, 0.7552], [0.9872, 0.6961, 0.459], [0.4756, 0.3779, 0.3392], [0.0835, 0.5336, 0.0538], [0.7803, 0.699, 0.254], [0.8466, 0.4685, 0.0136]], [[0.4044, 0.6583, 0.9597], [0.6882, 0.264, 0.5033], [0.6131, 0.4773, 0.1812], [0.7519, 0.3245, 0.517], [0.1644, 0.0787, 0.3361], [0.2435, 0.7966, 0.1519], [0.5454, 0.2249, 0.0394], [0.412, 0.1535, 0.2665]], [[0.2952, 0.3834, 0.9351], [0.512, 0.4354, 0.8384], [0.8944, 0.903, 0.3694], [0.7918, 0.5769, 0.2835], [0.1294, 0.7389, 0.8482], [0.638, 0.3767, 0.7743], [0.5227, 0.4399, 0.6949], [0.2264, 0.8268, 0.8524]], [[0.0331, 0.2259, 0.3147], [0.5699, 0.1813, 0.1901], [0.522, 0.4205, 0.2206], [0.5498, 0.335, 0.4589], [0.4737, 0.1708, 0.7858], [0.169, 0.603, 0.8294], [0.7369, 0.572, 0.1496], [0.7908, 0.7135, 0.486]], [[0.9901, 0.0079, 0.9611], [0.9217, 0.898, 0.709], [0.6571, 0.6128, 0.6411], [0.1756, 0.0924, 0.9801], [0.8187, 0.3258, 0.55], [0.4046, 0.9509, 0.3106], [0.5584, 0.5475, 0.1668], [0.7101, 0.1697, 0.5959]]],[[[0, 0, 0]], [[0, 0, 0]], [[0, 0, 0]], [[0, 0, 0]], [[0, 0, 0]]], 1, 1, Loc42438), 
exec_layers([LCon68776,LRes27099,LRes41414,LFla31808,LDot2042,LRes87409,LRes75894,LGlo9109,LCon14597,LMul25664,LRes7559,LRes35701,LLoc42438],["Con68776","Res27099","Res41414","Fla31808","Dot2042","Res87409","Res75894","Glo9109","Con14597","Mul25664","Res7559","Res35701","Loc42438"],Loc42438,"Loc42438")

Actual (Unparsed): [[[[1.8215414, 1.6011368, 1.5580997]], [[1.5955631, 0.9970065, 0.9473486]], [[1.7609242, 1.8186585, 2.3161383]], [[1.2330846, 0.9266271, 1.1718206]], [[1.5577255, 1.0769960, 1.7271226]]]]

Expected (Unparsed): [[[[1.8215414094327151,1.601136755570716,1.5580997161732268]],[[1.595563040028413,0.9970065402027634,0.9473486212580896]],[[1.7609241894508627,1.81865848055723,2.3161382712754204]],[[1.233084566037584,0.9266270620821796,1.1718205706824045]],[[1.5577254592290384,1.076995964044567,1.7271225496004163]]]]

Actual:   [[[[1.8216, 1.6012, 1.5581]], [[1.5956, 0.9971, 0.9474]], [[1.761, 1.8187, 2.3162]], [[1.2331, 0.9267, 1.1719]], [[1.5578, 1.077, 1.7272]]]]

Expected: [[[[1.8216, 1.6012, 1.5581]], [[1.5956, 0.9971, 0.9474]], [[1.761, 1.8187, 2.3162]], [[1.2331, 0.9267, 1.1719]], [[1.5578, 1.077, 1.7272]]]]