import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Sub47329 = tf.keras.layers.Input(shape=([2]))
in1Sub47329 = tf.keras.layers.Input(shape=([2]))

Sub47329 = keras.layers.Subtract(name = 'Sub47329', )([in0Sub47329,in1Sub47329])
Lay89862 = keras.layers.LayerNormalization(axis=1, epsilon=2.8756283451456652, name = 'Lay89862', )(Sub47329)
Thr25043 = keras.layers.ThresholdedReLU(theta=1.5415758610909436, name = 'Thr25043', )(Lay89862)
model = tf.keras.models.Model(inputs=[in0Sub47329,in1Sub47329], outputs=Thr25043)
in0Sub47329 = tf.constant([[0.8624, 0.4109]])
in1Sub47329 = tf.constant([[0.8356, 0.0227]])
print (np.array2string(model.predict([in0Sub47329,in1Sub47329],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Thr25043.png')

LSub47329 = subtract_layer([[0.8624, 0.4109]], [[0.8356, 0.0227]], Sub47329), 
LLay89862 = layer_normalization_layer(Sub47329, 1, 2.8756283451456652, Lay89862), 
LThr25043 = thresholded_relu_layer(Lay89862, 1.5415758610909436, Thr25043), 
exec_layers([LSub47329,LLay89862,LThr25043],["Sub47329","Lay89862","Thr25043"],Thr25043,"Thr25043")

Actual (Unparsed): [[-0.0000000, 0.0000000]]

Expected (Unparsed): [[0,0]]

Actual:   [[-0, 0]]

Expected: [[0, 0]]