import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Zer39587 = tf.keras.layers.Input(shape=([2, 1, 2, 3]))

Zer39587 = keras.layers.ZeroPadding3D(padding=((1, 1), (1, 1), (1, 1)), name = 'Zer39587', )(in0Zer39587)
Res71413 = keras.layers.Reshape((4, 3, 12), name = 'Res71413', )(Zer39587)
Res29177 = keras.layers.Reshape((4, 36), name = 'Res29177', )(Res71413)
Per91671 = keras.layers.Permute((2,1), name = 'Per91671',)(Res29177)
Res97665 = keras.layers.Reshape((36, 4, 1), name = 'Res97665', )(Per91671)
Res86801 = keras.layers.Reshape((36, 4, 1, 1), name = 'Res86801', )(Res97665)
Up_69864 = keras.layers.UpSampling3D(size=(1, 1, 1), name = 'Up_69864', )(Res86801)
Res13999 = keras.layers.Reshape((36, 4, 1), name = 'Res13999', )(Up_69864)
Res63764 = keras.layers.Reshape((36, 4), name = 'Res63764', )(Res13999)
Sep25689 = keras.layers.SeparableConv1D(3, (14),strides=(6), padding='same', name = 'Sep25689', )(Res63764)
model = tf.keras.models.Model(inputs=[in0Zer39587], outputs=Sep25689)
w = model.get_layer('Sep25689').get_weights() 
w[0] = np.array([[[0.675], [0.8164], [0.9057], [0.8121]], [[0.0451], [0.4205], [0.9409], [0.9047]], [[0.7595], [0.144], [0.6313], [0.5893]], [[0.1233], [0.5786], [0.6866], [0.072]], [[0.0188], [0.6725], [0.609], [0.1913]], [[0.0187], [0.2261], [0.3519], [0.4204]], [[0.0833], [0.5394], [0.8906], [0.9101]], [[0.3528], [0.4674], [0.5546], [0.8177]], [[0.5456], [0.7429], [0.7399], [0.1542]], [[0.255], [0.0617], [0.6648], [0.9114]], [[0.002], [0.0884], [0.1634], [0.2845]], [[0.2448], [0.2368], [0.1221], [0.3907]], [[0.6736], [0.8093], [0.0532], [0.0071]], [[0.0236], [0.8351], [0.4764], [0.4952]]])
w[1] = np.array([[[0.9552, 0.0791, 0.6393], [0.4125, 0.1661, 0.5104], [0.6406, 0.715, 0.1032], [0.0647, 0.4969, 0.9983]]])
w[2] = np.array([0, 0, 0])
model.get_layer('Sep25689').set_weights(w) 
in0Zer39587 = tf.constant([[[[[1.191, 1.3353, 1.5433], [1.3209, 1.0787, 1.8628]]], [[[1.9931, 1.4427, 1.9869], [1.6723, 1.8179, 1.3042]]]]])
print (np.array2string(model.predict([in0Zer39587],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Sep25689.png')

LZer39587 = zero_padding3D_layer([[[[[1.191, 1.3353, 1.5433], [1.3209, 1.0787, 1.8628]]], [[[1.9931, 1.4427, 1.9869], [1.6723, 1.8179, 1.3042]]]]], 1, 1, 1, 1, 1, 1, Zer39587), 
LRes71413 = reshape_layer(Zer39587, [4, 3, 12], Res71413), 
LRes29177 = reshape_layer(Res71413, [4, 36], Res29177), 
LPer91671 = permute_layer(Res29177, 2,1, Per91671), 
LRes97665 = reshape_layer(Per91671, [36, 4, 1], Res97665), 
LRes86801 = reshape_layer(Res97665, [36, 4, 1, 1], Res86801), 
LUp_69864 = up_sampling3D_layer(Res86801, 1, 1, 1, Up_69864), 
LRes13999 = reshape_layer(Up_69864, [36, 4, 1], Res13999), 
LRes63764 = reshape_layer(Res13999, [36, 4], Res63764), 
LSep25689 = separable_conv1D_layer(Res63764, 14,[[[[0.675], [0.8164], [0.9057], [0.8121]], [[0.0451], [0.4205], [0.9409], [0.9047]], [[0.7595], [0.144], [0.6313], [0.5893]], [[0.1233], [0.5786], [0.6866], [0.072]], [[0.0188], [0.6725], [0.609], [0.1913]], [[0.0187], [0.2261], [0.3519], [0.4204]], [[0.0833], [0.5394], [0.8906], [0.9101]], [[0.3528], [0.4674], [0.5546], [0.8177]], [[0.5456], [0.7429], [0.7399], [0.1542]], [[0.255], [0.0617], [0.6648], [0.9114]], [[0.002], [0.0884], [0.1634], [0.2845]], [[0.2448], [0.2368], [0.1221], [0.3907]], [[0.6736], [0.8093], [0.0532], [0.0071]], [[0.0236], [0.8351], [0.4764], [0.4952]]],[[[0.9552, 0.0791, 0.6393], [0.4125, 0.1661, 0.5104], [0.6406, 0.715, 0.1032], [0.0647, 0.4969, 0.9983]]]],[0, 0, 0], 6, true, Sep25689), 
exec_layers([LZer39587,LRes71413,LRes29177,LPer91671,LRes97665,LRes86801,LUp_69864,LRes13999,LRes63764,LSep25689],["Zer39587","Res71413","Res29177","Per91671","Res97665","Res86801","Up_69864","Res13999","Res63764","Sep25689"],Sep25689,"Sep25689")

Actual (Unparsed): [[[0.0000000, 0.0000000, 0.0000000], [1.0185321, 0.8441054, 0.6056357], [4.0532690, 3.4869789, 2.2172933], [6.0007128, 5.6019194, 2.6195424], [1.3840115, 1.0971712, 0.8981125], [0.0000000, 0.0000000, 0.0000000]]]

Expected (Unparsed): [[[0.0,0.0,0.0],[1.0185321165539998,0.84410542161,0.6056356577279999],[4.053268977226001,3.4869789373539994,2.2172933273280004],[6.000712780341999,5.601919344142,2.6195424147120003],[1.3840114919639999,1.097171172812,0.8981124537759999],[0.0,0.0,0.0]]]

Actual:   [[[0, 0, 0], [1.0186, 0.8442, 0.6057], [4.0533, 3.487, 2.2173], [6.0008, 5.602, 2.6196], [1.3841, 1.0972, 0.8982], [0, 0, 0]]]

Expected: [[[0, 0, 0], [1.0186, 0.8442, 0.6057], [4.0533, 3.487, 2.2173], [6.0008, 5.602, 2.6196], [1.3841, 1.0972, 0.8982], [0, 0, 0]]]