import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Add81908 = tf.keras.layers.Input(shape=([1, 1]))
in1Add81908 = tf.keras.layers.Input(shape=([1, 1]))

Add81908 = keras.layers.Add(name = 'Add81908', )([in0Add81908,in1Add81908])
Sim39299 = keras.layers.SimpleRNN(2,name = 'Sim39299', )(Add81908)
model = tf.keras.models.Model(inputs=[in0Add81908,in1Add81908], outputs=Sim39299)
w = model.get_layer('Sim39299').get_weights() 
w[0] = np.array([[7, 9]])
w[1] = np.array([[3, 2], [3, 6]])
w[2] = np.array([6, 7])
model.get_layer('Sim39299').set_weights(w) 
in0Add81908 = tf.constant([[[0.765]]])
in1Add81908 = tf.constant([[[0.7514]]])
print (np.array2string(model.predict([in0Add81908,in1Add81908],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Sim39299.png')

LAdd81908 = add_layer([[[[0.765]]], [[[0.7514]]]], Add81908), 
LSim39299 = simple_rnn_layer(Add81908,[[7, 9]],[[3, 2], [3, 6]],[6, 7], Sim39299), 
exec_layers([LAdd81908,LSim39299],["Add81908","Sim39299"],Sim39299,"Sim39299")

Actual (Unparsed): [[1.0000000, 1.0000000]]

Expected (Unparsed): [[0.9999999999999926,1.0]]

Actual:   [[1, 1]]

Expected: [[1, 1]]