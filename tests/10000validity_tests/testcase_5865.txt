import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Zer58756 = tf.keras.layers.Input(shape=([1, 2, 2, 3]))
in0Cro3875 = tf.keras.layers.Input(shape=([3, 2]))
in0Con31425 = tf.keras.layers.Input(shape=([3, 46]))
in0Sof32167 = tf.keras.layers.Input(shape=([2, 2, 2, 2]))
in0Con82325 = tf.keras.layers.Input(shape=([2, 2, 8, 1]))
in0Con98509 = tf.keras.layers.Input(shape=([1, 1, 1, 1]))
in0Max86605 = tf.keras.layers.Input(shape=([2, 2, 1]))
in1Max86605 = tf.keras.layers.Input(shape=([2, 2, 1]))
in0Con71617 = tf.keras.layers.Input(shape=([2, 2, 23]))
in0Con38665 = tf.keras.layers.Input(shape=([120]))

Zer58756 = keras.layers.ZeroPadding3D(padding=((1, 1), (1, 1), (1, 1)), name = 'Zer58756', )(in0Zer58756)
Res88582 = keras.layers.Reshape((3, 4, 12), name = 'Res88582', )(Zer58756)
Res41416 = keras.layers.Reshape((3, 48), name = 'Res41416', )(Res88582)
Cro3875 = keras.layers.Cropping1D(cropping=((2, 0)), name = 'Cro3875', )(in0Cro3875)
Zer97660 = keras.layers.ZeroPadding1D(padding=((2, 0)), name = 'Zer97660', )(Cro3875)
Con31425 = keras.layers.Concatenate(axis=2, name = 'Con31425', )([Zer97660,in0Con31425])
Ave56079 = keras.layers.Average(name = 'Ave56079', )([Res41416,Con31425])
Fla41567 = keras.layers.Flatten(name = 'Fla41567', )(Ave56079)
Sof32167 = keras.layers.Softmax(axis=1, name = 'Sof32167', input_shape=(2, 2, 2, 2))(in0Sof32167)
Zer47478 = keras.layers.ZeroPadding3D(padding=((0, 0), (0, 0), (6, 0)), name = 'Zer47478', )(Sof32167)
Con82325 = keras.layers.Concatenate(axis=4, name = 'Con82325', )([Zer47478,in0Con82325])
Con98509 = keras.layers.Conv3DTranspose(3, (1, 1, 1),strides=(1, 1, 5), padding='valid', name = 'Con98509', )(in0Con98509)
Zer62675 = keras.layers.ZeroPadding3D(padding=((1, 0), (1, 0), (3, 0)), name = 'Zer62675', )(Con98509)
Sub68598 = keras.layers.Subtract(name = 'Sub68598', )([Con82325,Zer62675])
Res94899 = keras.layers.Reshape((2, 2, 24), name = 'Res94899', )(Sub68598)
Max86605 = keras.layers.Maximum(name = 'Max86605', )([in0Max86605,in1Max86605])
Con71617 = keras.layers.Concatenate(axis=3, name = 'Con71617', )([Max86605,in0Con71617])
Ave85527 = keras.layers.Average(name = 'Ave85527', )([Res94899,Con71617])
Glo63010 = keras.layers.GlobalMaxPool2D(name = 'Glo63010', )(Ave85527)
Con38665 = keras.layers.Concatenate(axis=1, name = 'Con38665', )([Glo63010,in0Con38665])
Add36207 = keras.layers.Add(name = 'Add36207', )([Fla41567,Con38665])
model = tf.keras.models.Model(inputs=[in0Zer58756,in0Cro3875,in0Con31425,in0Sof32167,in0Con82325,in0Con98509,in0Max86605,in1Max86605,in0Con71617,in0Con38665], outputs=Add36207)
w = model.get_layer('Con98509').get_weights() 
w[0] = np.array([[[[[0.2583], [0.3506], [0.6263]]]]])
w[1] = np.array([0, 0, 0])
model.get_layer('Con98509').set_weights(w) 
in0Zer58756 = tf.constant([[[[[1.944, 1.6311, 1.0961], [1.9015, 1.906, 1.4164]], [[1.0696, 1.4647, 1.5442], [1.5555, 1.0597, 1.3129]]]]])
in0Cro3875 = tf.constant([[[1.4603, 1.4084], [1.1425, 1.042], [1.494, 1.8458]]])
in0Con31425 = tf.constant([[[0.8942, 0.4455, 0.9868, 0.0712, 0.0928, 0.4664, 0.3884, 0.3732, 0.311, 0.7796, 0.308, 0.4408, 0.0761, 0.0481, 0.9385, 0.4415, 0.5039, 0.4063, 0.6821, 0.3093, 0.8974, 0.1911, 0.7527, 0.037, 0.9064, 0.1536, 0.8566, 0.7639, 0.1711, 0.7421, 0.3158, 0.4865, 0.1387, 0.2181, 0.6472, 0.9103, 0.5248, 0.8214, 0.7938, 0.4288, 0.7181, 0.9382, 0.9109, 0.4671, 0.2765, 0.2382], [0.8609, 0.46, 0.5472, 0.0493, 0.3363, 0.5483, 0.3594, 0.8136, 0.8444, 0.6705, 0.6825, 0.332, 0.6169, 0.1046, 0.1228, 0.6439, 0.8809, 0.6711, 0.1377, 0.8128, 0.8248, 0.7463, 0.8891, 0.5917, 0.0235, 0.9561, 0.7263, 0.9285, 0.0498, 0.9206, 0.3945, 0.5377, 0.4921, 0.7012, 0.1955, 0.3125, 0.6216, 0.6674, 0.4937, 0.18, 0.5093, 0.3436, 0.158, 0.1151, 0.4806, 0.423], [0.7556, 0.4154, 0.4105, 0.5419, 0.573, 0.0178, 0.5149, 0.598, 0.8313, 0.5879, 0.9731, 0.3639, 0.7818, 0.3496, 0.9279, 0.8995, 0.7215, 0.1397, 0.1532, 0.7992, 0.3522, 0.9686, 0.955, 0.6214, 0.3222, 0.4496, 0.6731, 0.9455, 0.2337, 0.8165, 0.4947, 0.3751, 0.8796, 0.8943, 0.1501, 0.4645, 0.9801, 0.3076, 0.4705, 0.9836, 0.2302, 0.4175, 0.7083, 0.1566, 0.0408, 0.9619]]])
in0Sof32167 = tf.constant([[[[[0.7683, 0.1744], [0.1628, 0.7333]], [[0.2346, 0.0008], [0.0242, 0.2426]]], [[[0.9816, 0.3896], [0.7563, 0.1146]], [[0.144, 0.0527], [0.6331, 0.8909]]]]])
in0Con82325 = tf.constant([[[[[0.2422], [0.7684], [0.7068], [0.6982], [0.7988], [0.2566], [0.2412], [0.8717]], [[0.9017], [0.2612], [0.9715], [0.6823], [0.9229], [0.9767], [0.6142], [0.3892]]], [[[0.2788], [0.6358], [0.5656], [0.1933], [0.9833], [0.5321], [0.9144], [0.0331]], [[0.0288], [0.6452], [0.346], [0.2612], [0.1222], [0.116], [0.1121], [0.835]]]]])
in0Con98509 = tf.constant([[[[[0.5045]]]]])
in0Max86605 = tf.constant([[[[0.5972], [0.8566]], [[0.1692], [0.1047]]]])
in1Max86605 = tf.constant([[[[0.1886], [0.9015]], [[0.1439], [0.293]]]])
in0Con71617 = tf.constant([[[[0.7148, 0.2322, 0.1076, 0.8572, 0.282, 0.0796, 0.1056, 0.0465, 0.7931, 0.4833, 0.5032, 0.5835, 0.816, 0.1446, 0.8667, 0.6503, 0.3377, 0.6092, 0.654, 0.917, 0.9512, 0.0125, 0.2803], [0.7315, 0.2197, 0.761, 0.4717, 0.5654, 0.0265, 0.3714, 0.2686, 0.8905, 0.6519, 0.7328, 0.7486, 0.0972, 0.0414, 0.127, 0.522, 0.0232, 0.2288, 0.4451, 0.3191, 0.1565, 0.1604, 0.1724]], [[0.5388, 0.6012, 0.2311, 0.878, 0.4547, 0.449, 0.6859, 0.1426, 0.8857, 0.2873, 0.6679, 0.085, 0.5306, 0.1922, 0.1002, 0.9067, 0.8394, 0.705, 0.7786, 0.1647, 0.2451, 0.9702, 0.0207], [0.802, 0.8196, 0.4267, 0.9678, 0.3206, 0.9301, 0.1847, 0.1698, 0.8633, 0.2724, 0.4978, 0.3952, 0.3863, 0.736, 0.5435, 0.7035, 0.5521, 0.9158, 0.0627, 0.6937, 0.447, 0.7274, 0.2783]]]])
in0Con38665 = tf.constant([[0.3504, 0.204, 0.6231, 0.2477, 0.0973, 0.0514, 0.0206, 0.0912, 0.7734, 0.3971, 0.9631, 0.453, 0.028, 0.9723, 0.0159, 0.601, 0.6843, 0.3697, 0.6937, 0.3189, 0.8135, 0.9522, 0.0152, 0.3501, 0.4876, 0.9712, 0.801, 0.4866, 0.0981, 0.782, 0.6498, 0.4126, 0.8539, 0.9322, 0.6445, 0.3179, 0.831, 0.0737, 0.4892, 0.9865, 0.7371, 0.1024, 0.9586, 0.5333, 0.3741, 0.6642, 0.2547, 0.2145, 0.6358, 0.1851, 0.1066, 0.7696, 0.7611, 0.8767, 0.2249, 0.5647, 0.4766, 0.7532, 0.0291, 0.4036, 0.6128, 0.5498, 0.3994, 0.2472, 0.7495, 0.5811, 0.5776, 0.2407, 0.4622, 0.9939, 0.2372, 0.3861, 0.7735, 0.5787, 0.1744, 0.915, 0.4927, 0.2861, 0.0364, 0.9224, 0.2215, 0.862, 0.991, 0.0991, 0.9447, 0.5633, 0.272, 0.468, 0.2838, 0.7455, 0.0861, 0.8715, 0.6927, 0.2225, 0.4563, 0.5853, 0.098, 0.692, 0.194, 0.8389, 0.7485, 0.1913, 0.3412, 0.214, 0.326, 0.5045, 0.1062, 0.8603, 0.6932, 0.675, 0.5265, 0.2181, 0.0049, 0.2953, 0.8362, 0.4727, 0.293, 0.044, 0.7915, 0.2756]])
print (np.array2string(model.predict([in0Zer58756,in0Cro3875,in0Con31425,in0Sof32167,in0Con82325,in0Con98509,in0Max86605,in1Max86605,in0Con71617,in0Con38665],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Add36207.png')

LZer58756 = zero_padding3D_layer([[[[[1.944, 1.6311, 1.0961], [1.9015, 1.906, 1.4164]], [[1.0696, 1.4647, 1.5442], [1.5555, 1.0597, 1.3129]]]]], 1, 1, 1, 1, 1, 1, Zer58756), 
LRes88582 = reshape_layer(Zer58756, [3, 4, 12], Res88582), 
LRes41416 = reshape_layer(Res88582, [3, 48], Res41416), 
LCro3875 = cropping1D_layer([[[1.4603, 1.4084], [1.1425, 1.042], [1.494, 1.8458]]], 2, 0, Cro3875), 
LZer97660 = zero_padding1D_layer(Cro3875, 2, 0, Zer97660), 
LCon31425 = concatenate_layer([Zer97660,[[[0.8942, 0.4455, 0.9868, 0.0712, 0.0928, 0.4664, 0.3884, 0.3732, 0.311, 0.7796, 0.308, 0.4408, 0.0761, 0.0481, 0.9385, 0.4415, 0.5039, 0.4063, 0.6821, 0.3093, 0.8974, 0.1911, 0.7527, 0.037, 0.9064, 0.1536, 0.8566, 0.7639, 0.1711, 0.7421, 0.3158, 0.4865, 0.1387, 0.2181, 0.6472, 0.9103, 0.5248, 0.8214, 0.7938, 0.4288, 0.7181, 0.9382, 0.9109, 0.4671, 0.2765, 0.2382], [0.8609, 0.46, 0.5472, 0.0493, 0.3363, 0.5483, 0.3594, 0.8136, 0.8444, 0.6705, 0.6825, 0.332, 0.6169, 0.1046, 0.1228, 0.6439, 0.8809, 0.6711, 0.1377, 0.8128, 0.8248, 0.7463, 0.8891, 0.5917, 0.0235, 0.9561, 0.7263, 0.9285, 0.0498, 0.9206, 0.3945, 0.5377, 0.4921, 0.7012, 0.1955, 0.3125, 0.6216, 0.6674, 0.4937, 0.18, 0.5093, 0.3436, 0.158, 0.1151, 0.4806, 0.423], [0.7556, 0.4154, 0.4105, 0.5419, 0.573, 0.0178, 0.5149, 0.598, 0.8313, 0.5879, 0.9731, 0.3639, 0.7818, 0.3496, 0.9279, 0.8995, 0.7215, 0.1397, 0.1532, 0.7992, 0.3522, 0.9686, 0.955, 0.6214, 0.3222, 0.4496, 0.6731, 0.9455, 0.2337, 0.8165, 0.4947, 0.3751, 0.8796, 0.8943, 0.1501, 0.4645, 0.9801, 0.3076, 0.4705, 0.9836, 0.2302, 0.4175, 0.7083, 0.1566, 0.0408, 0.9619]]]], 2, Con31425), 
LAve56079 = average_layer([Res41416,Con31425], Ave56079), 
LFla41567 = flatten_layer(Ave56079, Fla41567), 
LSof32167 = softmax_layer([[[[[0.7683, 0.1744], [0.1628, 0.7333]], [[0.2346, 0.0008], [0.0242, 0.2426]]], [[[0.9816, 0.3896], [0.7563, 0.1146]], [[0.144, 0.0527], [0.6331, 0.8909]]]]], 1, Sof32167), 
LZer47478 = zero_padding3D_layer(Sof32167, 0, 0, 0, 0, 6, 0, Zer47478), 
LCon82325 = concatenate_layer([Zer47478,[[[[[0.2422], [0.7684], [0.7068], [0.6982], [0.7988], [0.2566], [0.2412], [0.8717]], [[0.9017], [0.2612], [0.9715], [0.6823], [0.9229], [0.9767], [0.6142], [0.3892]]], [[[0.2788], [0.6358], [0.5656], [0.1933], [0.9833], [0.5321], [0.9144], [0.0331]], [[0.0288], [0.6452], [0.346], [0.2612], [0.1222], [0.116], [0.1121], [0.835]]]]]], 4, Con82325), 
LCon98509 = conv3D_transpose_layer([[[[[0.5045]]]]], 1, 1, 1,[[[[[0.2583], [0.3506], [0.6263]]]]],[0, 0, 0], 1, 1, 5, false, Con98509), 
LZer62675 = zero_padding3D_layer(Con98509, 1, 0, 1, 0, 3, 0, Zer62675), 
LSub68598 = subtract_layer(Con82325,Zer62675, Sub68598), 
LRes94899 = reshape_layer(Sub68598, [2, 2, 24], Res94899), 
LMax86605 = maximum_layer([[[[[0.5972], [0.8566]], [[0.1692], [0.1047]]]], [[[[0.1886], [0.9015]], [[0.1439], [0.293]]]]], Max86605), 
LCon71617 = concatenate_layer([Max86605,[[[[0.7148, 0.2322, 0.1076, 0.8572, 0.282, 0.0796, 0.1056, 0.0465, 0.7931, 0.4833, 0.5032, 0.5835, 0.816, 0.1446, 0.8667, 0.6503, 0.3377, 0.6092, 0.654, 0.917, 0.9512, 0.0125, 0.2803], [0.7315, 0.2197, 0.761, 0.4717, 0.5654, 0.0265, 0.3714, 0.2686, 0.8905, 0.6519, 0.7328, 0.7486, 0.0972, 0.0414, 0.127, 0.522, 0.0232, 0.2288, 0.4451, 0.3191, 0.1565, 0.1604, 0.1724]], [[0.5388, 0.6012, 0.2311, 0.878, 0.4547, 0.449, 0.6859, 0.1426, 0.8857, 0.2873, 0.6679, 0.085, 0.5306, 0.1922, 0.1002, 0.9067, 0.8394, 0.705, 0.7786, 0.1647, 0.2451, 0.9702, 0.0207], [0.802, 0.8196, 0.4267, 0.9678, 0.3206, 0.9301, 0.1847, 0.1698, 0.8633, 0.2724, 0.4978, 0.3952, 0.3863, 0.736, 0.5435, 0.7035, 0.5521, 0.9158, 0.0627, 0.6937, 0.447, 0.7274, 0.2783]]]]], 3, Con71617), 
LAve85527 = average_layer([Res94899,Con71617], Ave85527), 
LGlo63010 = global_max_pool2D_layer(Ave85527, Glo63010), 
LCon38665 = concatenate_layer([Glo63010,[[0.3504, 0.204, 0.6231, 0.2477, 0.0973, 0.0514, 0.0206, 0.0912, 0.7734, 0.3971, 0.9631, 0.453, 0.028, 0.9723, 0.0159, 0.601, 0.6843, 0.3697, 0.6937, 0.3189, 0.8135, 0.9522, 0.0152, 0.3501, 0.4876, 0.9712, 0.801, 0.4866, 0.0981, 0.782, 0.6498, 0.4126, 0.8539, 0.9322, 0.6445, 0.3179, 0.831, 0.0737, 0.4892, 0.9865, 0.7371, 0.1024, 0.9586, 0.5333, 0.3741, 0.6642, 0.2547, 0.2145, 0.6358, 0.1851, 0.1066, 0.7696, 0.7611, 0.8767, 0.2249, 0.5647, 0.4766, 0.7532, 0.0291, 0.4036, 0.6128, 0.5498, 0.3994, 0.2472, 0.7495, 0.5811, 0.5776, 0.2407, 0.4622, 0.9939, 0.2372, 0.3861, 0.7735, 0.5787, 0.1744, 0.915, 0.4927, 0.2861, 0.0364, 0.9224, 0.2215, 0.862, 0.991, 0.0991, 0.9447, 0.5633, 0.272, 0.468, 0.2838, 0.7455, 0.0861, 0.8715, 0.6927, 0.2225, 0.4563, 0.5853, 0.098, 0.692, 0.194, 0.8389, 0.7485, 0.1913, 0.3412, 0.214, 0.326, 0.5045, 0.1062, 0.8603, 0.6932, 0.675, 0.5265, 0.2181, 0.0049, 0.2953, 0.8362, 0.4727, 0.293, 0.044, 0.7915, 0.2756]]], 1, Con38665), 
LAdd36207 = add_layer([Fla41567,Con38665], Add36207), 
exec_layers([LZer58756,LRes88582,LRes41416,LCro3875,LZer97660,LCon31425,LAve56079,LFla41567,LSof32167,LZer47478,LCon82325,LCon98509,LZer62675,LSub68598,LRes94899,LMax86605,LCon71617,LAve85527,LGlo63010,LCon38665,LAdd36207],["Zer58756","Res88582","Res41416","Cro3875","Zer97660","Con31425","Ave56079","Fla41567","Sof32167","Zer47478","Con82325","Con98509","Zer62675","Sub68598","Res94899","Max86605","Con71617","Ave85527","Glo63010","Con38665","Add36207"],Add36207,"Add36207")

Actual (Unparsed): [[0.4507500, 0.4010000, 1.0078000, 0.6032500, 0.9773000, 0.5808500, 0.5114500, 0.5761500, 0.8142500, 0.6318500, 0.4814500, 1.0973500, 0.5283000, 0.6284000, 0.6258000, 0.4574000, 0.9226000, 0.9065000, 0.9485327, 0.8692467, 0.9201500, 0.8081661, 1.1407137, 0.6715500, 0.7267500, 0.2225000, 1.0763000, 0.3245000, 0.5256000, 0.4333500, 0.1061500, 0.4622500, 0.9313000, 0.6403500, 1.0324500, 0.5620500, 0.3516000, 1.4274500, 0.2783000, 1.0117000, 1.0812000, 0.5841000, 1.0527500, 0.7880000, 1.2689500, 1.1857500, 0.1534500, 0.4692000, 0.4876000, 0.9712000, 1.2314500, 0.7166000, 0.3717000, 0.8066500, 0.8179500, 0.6867500, 1.0336000, 1.3390000, 1.0667000, 0.6531500, 1.1722500, 0.2397000, 0.7976500, 2.0108000, 1.6140500, 0.9724000, 2.3498000, 1.8218500, 1.1511500, 1.0706000, 0.6671000, 0.5876500, 1.0803500, 0.4809500, 0.1183500, 1.7824500, 1.8566000, 2.1130500, 1.0275500, 1.5548500, 1.3303000, 1.0220500, 0.2751500, 0.7542000, 0.7105500, 0.7060500, 0.7102000, 0.5809000, 0.9963500, 0.6711000, 0.8322500, 0.4125000, 0.5412000, 1.0514500, 0.4775000, 0.5976000, 1.5205000, 1.5016000, 0.5522000, 1.1227000, 0.6979500, 0.5570500, 0.3229000, 0.9313000, 0.4789500, 1.1610000, 1.4066500, 0.3930500, 1.4312500, 0.7452500, 0.6629000, 0.6428000, 0.7477500, 1.1952500, 0.4468500, 0.9413500, 0.7693000, 0.6221000, 0.6324000, 1.0696000, 0.5755000, 1.0027000, 0.3551000, 1.0637000, 1.0850500, 0.6640500, 0.4580500, 0.6222500, 0.5733500, 0.6920500, 0.5460000, 1.3074500, 0.7682500, 0.9072500, 1.0165500, 0.3719000, 0.2401500, 0.7871000, 0.9513000, 0.6814500, 0.6471500, 0.1223000, 0.8119000, 0.7565500]]

Expected (Unparsed): [[0.45075,0.401,1.0078,0.6032500000000001,0.9773000000000001,0.58085,0.51145,0.5761499999999999,0.81425,0.63185,0.48145000000000004,1.09735,0.5283,0.6284,0.6258,0.45740000000000003,0.9226,0.9065000000000001,0.9485327402863064,0.8692466646158736,0.92015,0.808166097679544,1.1407136346849187,0.6715500000000001,0.72675,0.22249999999999998,1.0763,0.3245,0.5256000000000001,0.43335,0.10615,0.46225,0.9313,0.64035,1.0324499999999999,0.56205,0.3516,1.42745,0.27830000000000005,1.0117,1.0812,0.5841,1.05275,0.788,1.26895,1.18575,0.15345,0.4692,0.4876,0.9712,1.2314500000000002,0.7166,0.37170000000000003,0.80665,0.8179500000000001,0.68675,1.0336,1.339,1.0667,0.65315,1.17225,0.23970000000000002,0.79765,2.0108,1.61405,0.9724000000000002,2.3498,1.82185,1.15115,1.0706,0.6671,0.58765,1.0803500000000001,0.48095,0.11835,1.7824499999999999,1.8565999999999998,2.1130500000000003,1.0275500000000002,1.55485,1.3303,1.02205,0.27515,0.7542,0.71055,0.70605,0.7101999999999999,0.5809,0.9963500000000001,0.6710999999999999,0.8322499999999999,0.4125,0.5412,1.05145,0.47750000000000004,0.5976,1.5205,1.5016,0.5522,1.1227,0.6979500000000001,0.55705,0.32289999999999996,0.9313,0.47895,1.161,1.40665,0.39305,1.43125,0.74525,0.6629,0.6428,0.7477499999999999,1.1952500000000001,0.44685,0.94135,0.7693,0.6221,0.6324,1.0696,0.5755,1.0027,0.35509999999999997,1.0636999999999999,1.08505,0.66405,0.45805,0.62225,0.57335,0.6920499999999999,0.546,1.30745,0.7682500000000001,0.9072500000000001,1.01655,0.3719,0.24014999999999997,0.7871,0.9513,0.68145,0.64715,0.12229999999999999,0.8119,0.7565500000000001]]

Actual:   [[0.4508, 0.401, 1.0078, 0.6033, 0.9773, 0.5809, 0.5115, 0.5762, 0.8143, 0.6319, 0.4815, 1.0974, 0.5283, 0.6284, 0.6258, 0.4574, 0.9226, 0.9065, 0.9486, 0.8693, 0.9202, 0.8082, 1.1408, 0.6716, 0.7268, 0.2225, 1.0763, 0.3245, 0.5256, 0.4334, 0.1062, 0.4623, 0.9313, 0.6404, 1.0325, 0.5621, 0.3516, 1.4275, 0.2783, 1.0117, 1.0812, 0.5841, 1.0528, 0.788, 1.269, 1.1858, 0.1535, 0.4692, 0.4876, 0.9712, 1.2315, 0.7166, 0.3717, 0.8067, 0.818, 0.6868, 1.0336, 1.339, 1.0667, 0.6532, 1.1723, 0.2397, 0.7977, 2.0108, 1.6141, 0.9724, 2.3498, 1.8219, 1.1512, 1.0706, 0.6671, 0.5877, 1.0804, 0.481, 0.1184, 1.7825, 1.8566, 2.1131, 1.0276, 1.5549, 1.3303, 1.0221, 0.2752, 0.7542, 0.7106, 0.7061, 0.7102, 0.5809, 0.9964, 0.6711, 0.8323, 0.4125, 0.5412, 1.0515, 0.4775, 0.5976, 1.5205, 1.5016, 0.5522, 1.1227, 0.698, 0.5571, 0.3229, 0.9313, 0.479, 1.161, 1.4067, 0.3931, 1.4313, 0.7453, 0.6629, 0.6428, 0.7478, 1.1953, 0.4469, 0.9414, 0.7693, 0.6221, 0.6324, 1.0696, 0.5755, 1.0027, 0.3551, 1.0637, 1.0851, 0.6641, 0.4581, 0.6223, 0.5734, 0.6921, 0.546, 1.3075, 0.7683, 0.9073, 1.0166, 0.3719, 0.2402, 0.7871, 0.9513, 0.6815, 0.6472, 0.1223, 0.8119, 0.7566]]

Expected: [[0.4508, 0.401, 1.0078, 0.6033, 0.9774, 0.5809, 0.5115, 0.5762, 0.8143, 0.6319, 0.4815, 1.0974, 0.5283, 0.6284, 0.6258, 0.4575, 0.9226, 0.9066, 0.9486, 0.8693, 0.9202, 0.8082, 1.1408, 0.6716, 0.7268, 0.2225, 1.0763, 0.3245, 0.5257, 0.4334, 0.1062, 0.4623, 0.9313, 0.6404, 1.0325, 0.5621, 0.3516, 1.4275, 0.2784, 1.0117, 1.0812, 0.5841, 1.0528, 0.788, 1.269, 1.1858, 0.1535, 0.4692, 0.4876, 0.9712, 1.2315, 0.7166, 0.3718, 0.8067, 0.818, 0.6868, 1.0336, 1.339, 1.0667, 0.6532, 1.1723, 0.2398, 0.7977, 2.0108, 1.6141, 0.9725, 2.3498, 1.8219, 1.1512, 1.0706, 0.6671, 0.5877, 1.0804, 0.481, 0.1184, 1.7825, 1.8566, 2.1131, 1.0276, 1.5549, 1.3303, 1.0221, 0.2752, 0.7542, 0.7106, 0.7061, 0.7102, 0.5809, 0.9964, 0.6711, 0.8323, 0.4125, 0.5412, 1.0515, 0.4776, 0.5976, 1.5205, 1.5016, 0.5522, 1.1227, 0.698, 0.5571, 0.3229, 0.9313, 0.479, 1.161, 1.4067, 0.3931, 1.4313, 0.7453, 0.6629, 0.6428, 0.7478, 1.1953, 0.4469, 0.9414, 0.7693, 0.6221, 0.6324, 1.0696, 0.5755, 1.0027, 0.3551, 1.0637, 1.0851, 0.6641, 0.4581, 0.6223, 0.5734, 0.6921, 0.546, 1.3075, 0.7683, 0.9073, 1.0166, 0.3719, 0.2402, 0.7871, 0.9513, 0.6815, 0.6472, 0.1223, 0.8119, 0.7566]]