import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Con91283 = tf.keras.layers.Input(shape=([1, 2, 1, 1]))
in0Con96804 = tf.keras.layers.Input(shape=([1, 1, 2, 1]))
in0Min50949 = tf.keras.layers.Input(shape=([1, 1, 1, 2]))
in1Min50949 = tf.keras.layers.Input(shape=([1, 1, 1, 2]))

Con91283 = keras.layers.Conv3D(4, (1, 1, 1),strides=(1, 1, 1), padding='valid', dilation_rate=(1, 1, 1), name = 'Con91283', )(in0Con91283)
Res63195 = keras.layers.Reshape((1, 2, 4), name = 'Res63195', )(Con91283)
Loc42119 = keras.layers.LocallyConnected2D(2, (1, 2),strides=(1, 1), name = 'Loc42119', )(Res63195)
Res24085 = keras.layers.Reshape((1, 1, 2, 1), name = 'Res24085', )(Loc42119)
Con96804 = keras.layers.Concatenate(axis=4, name = 'Con96804', )([Res24085,in0Con96804])
Min50949 = keras.layers.Minimum(name = 'Min50949', )([in0Min50949,in1Min50949])
Zer4337 = keras.layers.ZeroPadding3D(padding=((0, 0), (0, 0), (1, 0)), name = 'Zer4337', )(Min50949)
Mul66338 = keras.layers.Multiply(name = 'Mul66338', )([Con96804,Zer4337])
model = tf.keras.models.Model(inputs=[in0Con91283,in0Con96804,in0Min50949,in1Min50949], outputs=Mul66338)
w = model.get_layer('Con91283').get_weights() 
w[0] = np.array([[[[[0.5888, 0.1097, 0.7845, 0.7577]]]]])
w[1] = np.array([0, 0, 0, 0])
model.get_layer('Con91283').set_weights(w) 
w = model.get_layer('Loc42119').get_weights() 
w[0] = np.array([[[0.889, 0.7993], [0.4388, 0.686], [0.1653, 0.0288], [0.299, 0.8442], [0.3177, 0.1859], [0.4401, 0.8989], [0.1966, 0.9377], [0.396, 0.2857]]])
w[1] = np.array([[[0, 0]]])
model.get_layer('Loc42119').set_weights(w) 
in0Con91283 = tf.constant([[[[[0.9144]], [[0.1841]]]]])
in0Con96804 = tf.constant([[[[[0.3611], [0.1976]]]]])
in0Min50949 = tf.constant([[[[[0.5166, 0.0184]]]]])
in1Min50949 = tf.constant([[[[[0.4676, 0.8457]]]]])
print (np.array2string(model.predict([in0Con91283,in0Con96804,in0Min50949,in1Min50949],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Mul66338.png')

LCon91283 = conv3D_layer([[[[[0.9144]], [[0.1841]]]]], 1, 1, 1,[[[[[0.5888, 0.1097, 0.7845, 0.7577]]]]],[0, 0, 0, 0], 1, 1, 1, false, 1, 1, 1, Con91283), 
LRes63195 = reshape_layer(Con91283, [1, 2, 4], Res63195), 
LLoc42119 = locally_connected2D_layer(Res63195, 1, 2,[[[0.889, 0.7993], [0.4388, 0.686], [0.1653, 0.0288], [0.299, 0.8442], [0.3177, 0.1859], [0.4401, 0.8989], [0.1966, 0.9377], [0.396, 0.2857]]],[[[0, 0]]], 1, 1, Loc42119), 
LRes24085 = reshape_layer(Loc42119, [1, 1, 2, 1], Res24085), 
LCon96804 = concatenate_layer([Res24085,[[[[[0.3611], [0.1976]]]]]], 4, Con96804), 
LMin50949 = minimum_layer([[[[[[0.5166, 0.0184]]]]], [[[[[0.4676, 0.8457]]]]]], Min50949), 
LZer4337 = zero_padding3D_layer(Min50949, 0, 0, 0, 0, 1, 0, Zer4337), 
LMul66338 = multiply_layer([Con96804,Zer4337], Mul66338), 
exec_layers([LCon91283,LRes63195,LLoc42119,LRes24085,LCon96804,LMin50949,LZer4337,LMul66338],["Con91283","Res63195","Loc42119","Res24085","Con96804","Min50949","Zer4337","Mul66338"],Mul66338,"Mul66338")

Actual (Unparsed): [[[[[0.0000000, 0.0000000], [0.6164358, 0.0036358]]]]]

Expected (Unparsed): [[[[[0.0,0.0],[0.6164358110509677,0.00363584]]]]]

Actual:   [[[[[0, 0], [0.6165, 0.0037]]]]]

Expected: [[[[[0, 0], [0.6165, 0.0037]]]]]