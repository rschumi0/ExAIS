import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Glo15846 = tf.keras.layers.Input(shape=([2, 2, 1, 1]))
in0Con39281 = tf.keras.layers.Input(shape=([3, 3, 2]))
in0Min54513 = tf.keras.layers.Input(shape=([1, 2, 1, 1]))
in1Min54513 = tf.keras.layers.Input(shape=([1, 2, 1, 1]))
in0Con57675 = tf.keras.layers.Input(shape=([2, 2, 2]))
in0Lay39796 = tf.keras.layers.Input(shape=([3, 2]))

Glo15846 = keras.layers.GlobalMaxPool3D(name = 'Glo15846', )(in0Glo15846)
Res59810 = keras.layers.Reshape((1, 1), name = 'Res59810', )(Glo15846)
Res35137 = keras.layers.Reshape((1, 1, 1), name = 'Res35137', )(Res59810)
Zer48685 = keras.layers.ZeroPadding2D(padding=((1, 1), (1, 1)), name = 'Zer48685', )(Res35137)
Con39281 = keras.layers.Concatenate(axis=3, name = 'Con39281', )([Zer48685,in0Con39281])
Min54513 = keras.layers.Minimum(name = 'Min54513', )([in0Min54513,in1Min54513])
Res92415 = keras.layers.Reshape((1, 2, 1), name = 'Res92415', )(Min54513)
Zer40032 = keras.layers.ZeroPadding2D(padding=((1, 0), (0, 0)), name = 'Zer40032', )(Res92415)
Con57675 = keras.layers.Concatenate(axis=3, name = 'Con57675', )([Zer40032,in0Con57675])
Lay39796 = keras.layers.LayerNormalization(axis=2, epsilon=1.0975716679592165, name = 'Lay39796', )(in0Lay39796)
Res57786 = keras.layers.Reshape((3, 2, 1), name = 'Res57786', )(Lay39796)
Res58024 = keras.layers.Reshape((3, 2, 1, 1), name = 'Res58024', )(Res57786)
Zer77871 = keras.layers.ZeroPadding3D(padding=((1, 1), (1, 1), (1, 1)), name = 'Zer77871', )(Res58024)
Res32339 = keras.layers.Reshape((5, 4, 3), name = 'Res32339', )(Zer77871)
Cro73206 = keras.layers.Cropping2D(cropping=((3, 0), (2, 0)), name = 'Cro73206', )(Res32339)
Add47972 = keras.layers.Add(name = 'Add47972', )([Con57675,Cro73206])
Zer57712 = keras.layers.ZeroPadding2D(padding=((1, 0), (1, 0)), name = 'Zer57712', )(Add47972)
Ave71338 = keras.layers.Average(name = 'Ave71338', )([Con39281,Zer57712])
ReL62045 = keras.layers.ReLU(max_value=0.5103826202528408, negative_slope=0.5668551784993622, threshold=8.126297001316674, name = 'ReL62045', )(Ave71338)
model = tf.keras.models.Model(inputs=[in0Glo15846,in0Con39281,in0Min54513,in1Min54513,in0Con57675,in0Lay39796], outputs=ReL62045)
in0Glo15846 = tf.constant([[[[[1.758]], [[1.5986]]], [[[1.6525]], [[1.1362]]]]])
in0Con39281 = tf.constant([[[[0.1236, 0.8788], [0.4441, 0.4944], [0.814, 0.5408]], [[0.3025, 0.9424], [0.8991, 0.0249], [0.9461, 0.5091]], [[0.8228, 0.2402], [0.7672, 0.3613], [0.6603, 0.8361]]]])
in0Min54513 = tf.constant([[[[[0.2091]], [[0.9962]]]]])
in1Min54513 = tf.constant([[[[[0.7015]], [[0.9151]]]]])
in0Con57675 = tf.constant([[[[0.1187, 0.3269], [0.5355, 0.0549]], [[0.3796, 0.533], [0.656, 0.133]]]])
in0Lay39796 = tf.constant([[[1.0046, 1.8004], [1.1406, 1.3557], [1.5952, 1.4725]]])
print (np.array2string(model.predict([in0Glo15846,in0Con39281,in0Min54513,in1Min54513,in0Con57675,in0Lay39796],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='ReL62045.png')

LGlo15846 = global_max_pool3D_layer([[[[[1.758]], [[1.5986]]], [[[1.6525]], [[1.1362]]]]], Glo15846), 
LRes59810 = reshape_layer(Glo15846, [1, 1], Res59810), 
LRes35137 = reshape_layer(Res59810, [1, 1, 1], Res35137), 
LZer48685 = zero_padding2D_layer(Res35137, 1, 1, 1, 1, Zer48685), 
LCon39281 = concatenate_layer([Zer48685,[[[[0.1236, 0.8788], [0.4441, 0.4944], [0.814, 0.5408]], [[0.3025, 0.9424], [0.8991, 0.0249], [0.9461, 0.5091]], [[0.8228, 0.2402], [0.7672, 0.3613], [0.6603, 0.8361]]]]], 3, Con39281), 
LMin54513 = minimum_layer([[[[[[0.2091]], [[0.9962]]]]], [[[[[0.7015]], [[0.9151]]]]]], Min54513), 
LRes92415 = reshape_layer(Min54513, [1, 2, 1], Res92415), 
LZer40032 = zero_padding2D_layer(Res92415, 1, 0, 0, 0, Zer40032), 
LCon57675 = concatenate_layer([Zer40032,[[[[0.1187, 0.3269], [0.5355, 0.0549]], [[0.3796, 0.533], [0.656, 0.133]]]]], 3, Con57675), 
LLay39796 = layer_normalization_layer([[[1.0046, 1.8004], [1.1406, 1.3557], [1.5952, 1.4725]]], 2, 1.0975716679592165, Lay39796), 
LRes57786 = reshape_layer(Lay39796, [3, 2, 1], Res57786), 
LRes58024 = reshape_layer(Res57786, [3, 2, 1, 1], Res58024), 
LZer77871 = zero_padding3D_layer(Res58024, 1, 1, 1, 1, 1, 1, Zer77871), 
LRes32339 = reshape_layer(Zer77871, [5, 4, 3], Res32339), 
LCro73206 = cropping2D_layer(Res32339, 3, 0, 2, 0, Cro73206), 
LAdd47972 = add_layer([Con57675,Cro73206], Add47972), 
LZer57712 = zero_padding2D_layer(Add47972, 1, 0, 1, 0, Zer57712), 
LAve71338 = average_layer([Con39281,Zer57712], Ave71338), 
LReL62045 = relu_layer(Ave71338, 0.5103826202528408, 0.5668551784993622, 8.126297001316674, ReL62045), 
exec_layers([LGlo15846,LRes59810,LRes35137,LZer48685,LCon39281,LMin54513,LRes92415,LZer40032,LCon57675,LLay39796,LRes57786,LRes58024,LZer77871,LRes32339,LCro73206,LAdd47972,LZer57712,LAve71338,LReL62045],["Glo15846","Res59810","Res35137","Zer48685","Con39281","Min54513","Res92415","Zer40032","Con57675","Lay39796","Res57786","Res58024","Zer77871","Res32339","Cro73206","Add47972","Zer57712","Ave71338","ReL62045"],ReL62045,"ReL62045")

Actual (Unparsed): [[[[-4.6064335, -4.5714019, -4.3573574], [-4.6064335, -4.4805633, -4.4663069], [-4.6064335, -4.3757235, -4.4531559]], [[-4.6064335, -4.5206967, -4.3393314], [-4.1081678, -4.3345300, -4.5067237], [-4.6064335, -4.1865072, -4.4465804]], [[-4.6064335, -4.3732293, -4.5383542], [-4.5471688, -4.2813988, -4.3529642], [-4.3470690, -4.2333578, -4.3317639]]]]

Expected (Unparsed): [[[[-4.6064335372201946,-4.571401887188934,-4.357357371787574],[-4.6064335372201946,-4.480563344834411,-4.466306937095152],[-4.6064335372201946,-4.375723479570954,-4.453155896953967]],[[-4.6064335372201946,-4.520696691472166,-4.339331377111295],[-4.1081678353192554,-4.334529958806037,-4.506723711322157],[-4.6064335372201946,-4.186507220987867,-4.446580376883374]],[[-4.6064335372201946,-4.373229316785557,-4.538354230282422],[-4.547168828308086,-4.28139877786866,-4.3529642441542045],[-4.347068950297811,-4.23335780149084,-4.331763860478329]]]]

Actual:   [[[[-4.6064, -4.5714, -4.3573], [-4.6064, -4.4805, -4.4663], [-4.6064, -4.3757, -4.4531]], [[-4.6064, -4.5206, -4.3393], [-4.1081, -4.3345, -4.5067], [-4.6064, -4.1865, -4.4465]], [[-4.6064, -4.3732, -4.5383], [-4.5471, -4.2813, -4.3529], [-4.347, -4.2333, -4.3317]]]]

Expected: [[[[-4.6064, -4.5714, -4.3573], [-4.6064, -4.4805, -4.4663], [-4.6064, -4.3757, -4.4531]], [[-4.6064, -4.5206, -4.3393], [-4.1081, -4.3345, -4.5067], [-4.6064, -4.1865, -4.4465]], [[-4.6064, -4.3732, -4.5383], [-4.5471, -4.2813, -4.3529], [-4.347, -4.2333, -4.3317]]]]