import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Mul1496 = tf.keras.layers.Input(shape=([2, 1, 1]))
in1Mul1496 = tf.keras.layers.Input(shape=([2, 1, 1]))

Mul1496 = keras.layers.Multiply(name = 'Mul1496', )([in0Mul1496,in1Mul1496])
Lay96421 = keras.layers.LayerNormalization(axis=2, epsilon=1.4327282427690653, name = 'Lay96421', )(Mul1496)
model = tf.keras.models.Model(inputs=[in0Mul1496,in1Mul1496], outputs=Lay96421)
in0Mul1496 = tf.constant([[[[0.7892]], [[0.69]]]])
in1Mul1496 = tf.constant([[[[0.6636]], [[0.7557]]]])
print (np.array2string(model.predict([in0Mul1496,in1Mul1496],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Lay96421.png')

LMul1496 = multiply_layer([[[[[0.7892]], [[0.69]]]], [[[[0.6636]], [[0.7557]]]]], Mul1496), 
LLay96421 = layer_normalization_layer(Mul1496, 2, 1.4327282427690653, Lay96421), 
exec_layers([LMul1496,LLay96421],["Mul1496","Lay96421"],Lay96421,"Lay96421")

Actual (Unparsed): [[[[0.0000000]], [[0.0000000]]]]

Expected (Unparsed): [[[[0.0]],[[0.0]]]]

Actual:   [[[[0]], [[0]]]]

Expected: [[[[0]], [[0]]]]