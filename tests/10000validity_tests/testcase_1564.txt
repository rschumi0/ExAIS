import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Sub1480 = tf.keras.layers.Input(shape=([2, 3, 3]))
in1Sub1480 = tf.keras.layers.Input(shape=([2, 3, 3]))
in0Mas66887 = tf.keras.layers.Input(shape=([4, 2]))
in0Con4067 = tf.keras.layers.Input(shape=([4, 7]))
in0Con12434 = tf.keras.layers.Input(shape=([2, 2]))
in0Con46907 = tf.keras.layers.Input(shape=([4, 6]))
in0Con34630 = tf.keras.layers.Input(shape=([4, 9, 1]))
in0Add58474 = tf.keras.layers.Input(shape=([2, 2, 2]))
in1Add58474 = tf.keras.layers.Input(shape=([2, 2, 2]))

Sub1480 = keras.layers.Subtract(name = 'Sub1480', )([in0Sub1480,in1Sub1480])
Res18996 = keras.layers.Reshape((2, 9), name = 'Res18996', )(Sub1480)
Zer15377 = keras.layers.ZeroPadding1D(padding=((2, 0)), name = 'Zer15377', )(Res18996)
Mas66887 = keras.layers.Masking(mask_value=2, name = 'Mas66887', )(in0Mas66887)
Con4067 = keras.layers.Concatenate(axis=2, name = 'Con4067', )([Mas66887,in0Con4067])
Sub84793 = keras.layers.Subtract(name = 'Sub84793', )([Zer15377,Con4067])
Con12434 = keras.layers.Conv1D(3, (2),strides=(1), padding='valid', dilation_rate=(1), name = 'Con12434', )(in0Con12434)
Zer58716 = keras.layers.ZeroPadding1D(padding=((3, 0)), name = 'Zer58716', )(Con12434)
Con46907 = keras.layers.Concatenate(axis=2, name = 'Con46907', )([Zer58716,in0Con46907])
Min66612 = keras.layers.Minimum(name = 'Min66612', )([Sub84793,Con46907])
Res63459 = keras.layers.Reshape((4, 9, 1), name = 'Res63459', )(Min66612)
Con34630 = keras.layers.Concatenate(axis=3, name = 'Con34630', )([Res63459,in0Con34630])
Add58474 = keras.layers.Add(name = 'Add58474', )([in0Add58474,in1Add58474])
Zer61943 = keras.layers.ZeroPadding2D(padding=((2, 0), (7, 0)), name = 'Zer61943', )(Add58474)
Sub68108 = keras.layers.Subtract(name = 'Sub68108', )([Con34630,Zer61943])
model = tf.keras.models.Model(inputs=[in0Sub1480,in1Sub1480,in0Mas66887,in0Con4067,in0Con12434,in0Con46907,in0Con34630,in0Add58474,in1Add58474], outputs=Sub68108)
w = model.get_layer('Con12434').get_weights() 
w[0] = np.array([[[0.1347, 0.5516, 0.7747], [0.0601, 0.1909, 0.4894]], [[0.5319, 0.2722, 0.8648], [0.63, 0.5685, 0.5478]]])
w[1] = np.array([0, 0, 0])
model.get_layer('Con12434').set_weights(w) 
in0Sub1480 = tf.constant([[[[0.9524, 0.0248, 0.1213], [0.0877, 0.3666, 0.802], [0.0729, 0.4981, 0.6679]], [[0.5433, 0.2552, 0.9258], [0.3695, 0.0606, 0.3721], [0.7904, 0.2671, 0.1067]]]])
in1Sub1480 = tf.constant([[[[0.5929, 0.4617, 0.7052], [0.749, 0.9673, 0.851], [0.6896, 0.8172, 0.7726]], [[0.1462, 0.8921, 0.6919], [0.2943, 0.4529, 0.234], [0.9817, 0.2661, 0.5853]]]])
in0Mas66887 = tf.constant([[[1.7892, 1.5682], [1.826, 1.8891], [1.2046, 1.0904], [1.3796, 1.7696]]])
in0Con4067 = tf.constant([[[0.299, 0.5594, 0.1067, 0.5465, 0.3764, 0.1184, 0.4403], [0.4632, 0.3417, 0.2941, 0.4745, 0.4332, 0.6317, 0.5485], [0.8366, 0.5291, 0.3742, 0.1482, 0.4914, 0.4502, 0.1838], [0.553, 0.6865, 0.2369, 0.8919, 0.1936, 0.0796, 0.1102]]])
in0Con12434 = tf.constant([[[0.7011, 0.1882], [0.2058, 0.5541]]])
in0Con46907 = tf.constant([[[0.1047, 0.8188, 0.9517, 0.9802, 0.1226, 0.464], [0.5344, 0.6032, 0.5895, 0.043, 0.1823, 0.7512], [0.3505, 0.2595, 0.0357, 0.1834, 0.4864, 0.6929], [0.4272, 0.4721, 0.9418, 0.1173, 0.276, 0.7558]]])
in0Con34630 = tf.constant([[[[0.9673], [0.9147], [0.3019], [0.6772], [0.7599], [0.5853], [0.7707], [0.526], [0.2209]], [[0.7209], [0.9954], [0.1195], [0.7727], [0.9897], [0.2465], [0.5563], [0.0127], [0.3132]], [[0.5995], [0.1581], [0.5223], [0.9686], [0.5128], [0.6716], [0.8632], [0.3535], [0.9894]], [[0.9427], [0.1669], [0.4781], [0.9431], [0.7826], [0.9402], [0.4067], [0.8069], [0.2318]]]])
in0Add58474 = tf.constant([[[[0.9869, 0.7253], [0.9867, 0.4177]], [[0.0941, 0.7739], [0.7012, 0.3683]]]])
in1Add58474 = tf.constant([[[[0.2299, 0.3577], [0.4803, 0.7053]], [[0.2254, 0.8238], [0.0901, 0.9399]]]])
print (np.array2string(model.predict([in0Sub1480,in1Sub1480,in0Mas66887,in0Con4067,in0Con12434,in0Con46907,in0Con34630,in0Add58474,in1Add58474],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Sub68108.png')

LSub1480 = subtract_layer([[[[0.9524, 0.0248, 0.1213], [0.0877, 0.3666, 0.802], [0.0729, 0.4981, 0.6679]], [[0.5433, 0.2552, 0.9258], [0.3695, 0.0606, 0.3721], [0.7904, 0.2671, 0.1067]]]], [[[[0.5929, 0.4617, 0.7052], [0.749, 0.9673, 0.851], [0.6896, 0.8172, 0.7726]], [[0.1462, 0.8921, 0.6919], [0.2943, 0.4529, 0.234], [0.9817, 0.2661, 0.5853]]]], Sub1480), 
LRes18996 = reshape_layer(Sub1480, [2, 9], Res18996), 
LZer15377 = zero_padding1D_layer(Res18996, 2, 0, Zer15377), 
LMas66887 = masking_layer([[[1.7892, 1.5682], [1.826, 1.8891], [1.2046, 1.0904], [1.3796, 1.7696]]], 2, Mas66887), 
LCon4067 = concatenate_layer([Mas66887,[[[0.299, 0.5594, 0.1067, 0.5465, 0.3764, 0.1184, 0.4403], [0.4632, 0.3417, 0.2941, 0.4745, 0.4332, 0.6317, 0.5485], [0.8366, 0.5291, 0.3742, 0.1482, 0.4914, 0.4502, 0.1838], [0.553, 0.6865, 0.2369, 0.8919, 0.1936, 0.0796, 0.1102]]]], 2, Con4067), 
LSub84793 = subtract_layer(Zer15377,Con4067, Sub84793), 
LCon12434 = conv1D_layer([[[0.7011, 0.1882], [0.2058, 0.5541]]], 2,[[[0.1347, 0.5516, 0.7747], [0.0601, 0.1909, 0.4894]], [[0.5319, 0.2722, 0.8648], [0.63, 0.5685, 0.5478]]],[0, 0, 0], 1, false, 1, Con12434), 
LZer58716 = zero_padding1D_layer(Con12434, 3, 0, Zer58716), 
LCon46907 = concatenate_layer([Zer58716,[[[0.1047, 0.8188, 0.9517, 0.9802, 0.1226, 0.464], [0.5344, 0.6032, 0.5895, 0.043, 0.1823, 0.7512], [0.3505, 0.2595, 0.0357, 0.1834, 0.4864, 0.6929], [0.4272, 0.4721, 0.9418, 0.1173, 0.276, 0.7558]]]], 2, Con46907), 
LMin66612 = minimum_layer([Sub84793,Con46907], Min66612), 
LRes63459 = reshape_layer(Min66612, [4, 9, 1], Res63459), 
LCon34630 = concatenate_layer([Res63459,[[[[0.9673], [0.9147], [0.3019], [0.6772], [0.7599], [0.5853], [0.7707], [0.526], [0.2209]], [[0.7209], [0.9954], [0.1195], [0.7727], [0.9897], [0.2465], [0.5563], [0.0127], [0.3132]], [[0.5995], [0.1581], [0.5223], [0.9686], [0.5128], [0.6716], [0.8632], [0.3535], [0.9894]], [[0.9427], [0.1669], [0.4781], [0.9431], [0.7826], [0.9402], [0.4067], [0.8069], [0.2318]]]]], 3, Con34630), 
LAdd58474 = add_layer([[[[[0.9869, 0.7253], [0.9867, 0.4177]], [[0.0941, 0.7739], [0.7012, 0.3683]]]], [[[[0.2299, 0.3577], [0.4803, 0.7053]], [[0.2254, 0.8238], [0.0901, 0.9399]]]]], Add58474), 
LZer61943 = zero_padding2D_layer(Add58474, 2, 0, 7, 0, Zer61943), 
LSub68108 = subtract_layer(Con34630,Zer61943, Sub68108), 
exec_layers([LSub1480,LRes18996,LZer15377,LMas66887,LCon4067,LSub84793,LCon12434,LZer58716,LCon46907,LMin66612,LRes63459,LCon34630,LAdd58474,LZer61943,LSub68108],["Sub1480","Res18996","Zer15377","Mas66887","Con4067","Sub84793","Con12434","Zer58716","Con46907","Min66612","Res63459","Con34630","Add58474","Zer61943","Sub68108"],Sub68108,"Sub68108")

Actual (Unparsed): [[[[-1.7891999, 0.9673000], [-1.5682000, 0.9147000], [-0.2990000, 0.3019000], [-0.5594000, 0.6772000], [-0.1067000, 0.7599000], [-0.5465000, 0.5853000], [-0.3764000, 0.7707000], [-0.1184000, 0.5260000], [-0.4403000, 0.2209000]], [[-1.8260000, 0.7209000], [-1.8891000, 0.9954000], [-0.4632000, 0.1195000], [-0.3417000, 0.7727000], [-0.2941000, 0.9897000], [-0.4745000, 0.2465000], [-0.4332000, 0.5563000], [-0.6317000, 0.0127000], [-0.5485000, 0.3132000]], [[-0.8450999, 0.5995000], [-1.5273000, 0.1581000], [-1.4205000, 0.5223000], [-1.1904000, 0.9686000], [-0.9749000, 0.5128000], [-0.1972000, 0.6716000], [-1.1081000, 0.8632000], [-1.9861000, -0.7295000], [-1.7555000, -0.1335999]], [[-0.9825001, 0.9427000], [-2.4065000, 0.1669000], [-0.3191000, 0.4781000], [-0.6113000, 0.9431000], [-0.6292000, 0.7826000], [-0.7538000, 0.9402000], [-0.3849000, 0.4067000], [-0.3981000, -0.7908000], [-1.3801000, -1.0764000]]]]

Expected (Unparsed): [[[[-1.7892,0.9673],[-1.5682,0.9147],[-0.299,0.3019],[-0.5594,0.6772],[-0.1067,0.7599],[-0.5465,0.5853],[-0.3764,0.7707],[-0.1184,0.526],[-0.4403,0.2209]],[[-1.826,0.7209],[-1.8891,0.9954],[-0.4632,0.1195],[-0.3417,0.7727],[-0.2941,0.9897],[-0.4745,0.2465],[-0.4332,0.5563],[-0.6317,0.0127],[-0.5485,0.3132]],[[-0.8450999999999999,0.5995],[-1.5273,0.1581],[-1.4205,0.5223],[-1.1904,0.9686],[-0.9749,0.5128],[-0.19719999999999993,0.6716],[-1.1081,0.8632],[-1.9861000000000002,-0.7295],[-1.7555,-0.13360000000000005]],[[-0.9824999999999999,0.9427],[-2.4065000000000003,0.1669],[-0.31910000000000005,0.4781],[-0.6113,0.9431],[-0.6292,0.7826],[-0.7538,0.9402],[-0.3849,0.4067],[-0.3981,-0.7908000000000002],[-1.3801,-1.0764]]]]

Actual:   [[[[-1.7891, 0.9673], [-1.5682, 0.9147], [-0.299, 0.3019], [-0.5594, 0.6772], [-0.1067, 0.7599], [-0.5465, 0.5853], [-0.3764, 0.7707], [-0.1184, 0.526], [-0.4403, 0.2209]], [[-1.826, 0.7209], [-1.8891, 0.9954], [-0.4632, 0.1195], [-0.3417, 0.7727], [-0.2941, 0.9897], [-0.4745, 0.2465], [-0.4332, 0.5563], [-0.6317, 0.0127], [-0.5485, 0.3132]], [[-0.845, 0.5995], [-1.5273, 0.1581], [-1.4205, 0.5223], [-1.1904, 0.9686], [-0.9749, 0.5128], [-0.1972, 0.6716], [-1.1081, 0.8632], [-1.9861, -0.7295], [-1.7555, -0.1335]], [[-0.9825, 0.9427], [-2.4065, 0.1669], [-0.3191, 0.4781], [-0.6113, 0.9431], [-0.6292, 0.7826], [-0.7538, 0.9402], [-0.3849, 0.4067], [-0.3981, -0.7908], [-1.3801, -1.0764]]]]

Expected: [[[[-1.7892, 0.9673], [-1.5682, 0.9147], [-0.299, 0.3019], [-0.5594, 0.6772], [-0.1067, 0.7599], [-0.5465, 0.5853], [-0.3764, 0.7707], [-0.1184, 0.526], [-0.4403, 0.2209]], [[-1.826, 0.7209], [-1.8891, 0.9954], [-0.4632, 0.1195], [-0.3417, 0.7727], [-0.2941, 0.9897], [-0.4745, 0.2465], [-0.4332, 0.5563], [-0.6317, 0.0127], [-0.5485, 0.3132]], [[-0.845, 0.5995], [-1.5273, 0.1581], [-1.4205, 0.5223], [-1.1904, 0.9686], [-0.9749, 0.5128], [-0.1971, 0.6716], [-1.1081, 0.8632], [-1.9861, -0.7295], [-1.7555, -0.1336]], [[-0.9824, 0.9427], [-2.4065, 0.1669], [-0.3191, 0.4781], [-0.6113, 0.9431], [-0.6292, 0.7826], [-0.7538, 0.9402], [-0.3849, 0.4067], [-0.3981, -0.7908], [-1.3801, -1.0764]]]]