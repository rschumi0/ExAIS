import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Sub14335 = tf.keras.layers.Input(shape=([3, 3]))
in1Sub14335 = tf.keras.layers.Input(shape=([3, 3]))
in0Con71591 = tf.keras.layers.Input(shape=([4, 2, 1]))
in0Cro735 = tf.keras.layers.Input(shape=([4, 4, 4]))

Sub14335 = keras.layers.Subtract(name = 'Sub14335', )([in0Sub14335,in1Sub14335])
Den83776 = keras.layers.Dense(1,name = 'Den83776', )(Sub14335)
Res22488 = keras.layers.Reshape((3, 1, 1), name = 'Res22488', )(Den83776)
Glo88190 = keras.layers.GlobalAveragePooling2D(name = 'Glo88190', )(Res22488)
Res6184 = keras.layers.Reshape((1, 1), name = 'Res6184', )(Glo88190)
Res89511 = keras.layers.Reshape((1, 1, 1), name = 'Res89511', )(Res6184)
Zer53751 = keras.layers.ZeroPadding2D(padding=((3, 0), (1, 0)), name = 'Zer53751', )(Res89511)
Con71591 = keras.layers.Concatenate(axis=3, name = 'Con71591', )([Zer53751,in0Con71591])
Cro735 = keras.layers.Cropping2D(cropping=((0, 0), (0, 2)), name = 'Cro735', )(in0Cro735)
Sep13189 = keras.layers.SeparableConv2D(2, (2, 1),strides=(1, 1), padding='same', name = 'Sep13189', )(Cro735)
Max89435 = keras.layers.Maximum(name = 'Max89435', )([Con71591,Sep13189])
model = tf.keras.models.Model(inputs=[in0Sub14335,in1Sub14335,in0Con71591,in0Cro735], outputs=Max89435)
w = model.get_layer('Den83776').get_weights() 
w[0] = np.array([[0.4235], [0.1725], [0.518]])
w[1] = np.array([0.2554])
model.get_layer('Den83776').set_weights(w) 
w = model.get_layer('Sep13189').get_weights() 
w[0] = np.array([[[[0.3909], [0.3311], [0.4721], [0.0537]]], [[[0.4104], [0.6117], [0.0836], [0.9639]]]])
w[1] = np.array([[[[0.6986, 0.7756], [0.3675, 0.1989], [0.5905, 0.2591], [0.1371, 0.7617]]]])
w[2] = np.array([0, 0])
model.get_layer('Sep13189').set_weights(w) 
in0Sub14335 = tf.constant([[[0.7595, 0.6772, 0.3905], [0.2436, 0.1163, 0.0956], [0.1971, 0.7347, 0.239]]])
in1Sub14335 = tf.constant([[[0.1082, 0.6263, 0.1682], [0.0222, 0.6392, 0.1603], [0.3382, 0.9342, 0.8074]]])
in0Con71591 = tf.constant([[[[0.0834], [0.5105]], [[0.3623], [0.6047]], [[0.7862], [0.2448]], [[0.4674], [0.008]]]])
in0Cro735 = tf.constant([[[[1.7001, 1.2539, 1.3091, 1.3537], [1.4874, 1.2518, 1.0321, 1.5093], [1.8258, 1.0827, 1.8147, 1.0261], [1.9337, 1.1473, 1.0686, 1.5968]], [[1.7757, 1.3865, 1.8527, 1.3027], [1.3884, 1.0736, 1.4874, 1.0439], [1.039, 1.8985, 1.2124, 1.1325], [1.5419, 1.2883, 1.6947, 1.3565]], [[1.1899, 1.8651, 1.2883, 1.8599], [1.0548, 1.3062, 1.6905, 1.1271], [1.8619, 1.6439, 1.0462, 1.2063], [1.2475, 1.2159, 1.6088, 1.0649]], [[1.9718, 1.064, 1.7832, 1.6272], [1.5818, 1.5649, 1.7491, 1.6151], [1.0873, 1.474, 1.8886, 1.7845], [1.4521, 1.3646, 1.9308, 1.5304]]]])
print (np.array2string(model.predict([in0Sub14335,in1Sub14335,in0Con71591,in0Cro735],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Max89435.png')

LSub14335 = subtract_layer([[[0.7595, 0.6772, 0.3905], [0.2436, 0.1163, 0.0956], [0.1971, 0.7347, 0.239]]], [[[0.1082, 0.6263, 0.1682], [0.0222, 0.6392, 0.1603], [0.3382, 0.9342, 0.8074]]], Sub14335), 
LDen83776 = dense_layer(Sub14335, [[0.4235], [0.1725], [0.518]],[0.2554], Den83776), 
LRes22488 = reshape_layer(Den83776, [3, 1, 1], Res22488), 
LGlo88190 = global_average_pooling2D_layer(Res22488, Glo88190), 
LRes6184 = reshape_layer(Glo88190, [1, 1], Res6184), 
LRes89511 = reshape_layer(Res6184, [1, 1, 1], Res89511), 
LZer53751 = zero_padding2D_layer(Res89511, 3, 0, 1, 0, Zer53751), 
LCon71591 = concatenate_layer([Zer53751,[[[[0.0834], [0.5105]], [[0.3623], [0.6047]], [[0.7862], [0.2448]], [[0.4674], [0.008]]]]], 3, Con71591), 
LCro735 = cropping2D_layer([[[[1.7001, 1.2539, 1.3091, 1.3537], [1.4874, 1.2518, 1.0321, 1.5093], [1.8258, 1.0827, 1.8147, 1.0261], [1.9337, 1.1473, 1.0686, 1.5968]], [[1.7757, 1.3865, 1.8527, 1.3027], [1.3884, 1.0736, 1.4874, 1.0439], [1.039, 1.8985, 1.2124, 1.1325], [1.5419, 1.2883, 1.6947, 1.3565]], [[1.1899, 1.8651, 1.2883, 1.8599], [1.0548, 1.3062, 1.6905, 1.1271], [1.8619, 1.6439, 1.0462, 1.2063], [1.2475, 1.2159, 1.6088, 1.0649]], [[1.9718, 1.064, 1.7832, 1.6272], [1.5818, 1.5649, 1.7491, 1.6151], [1.0873, 1.474, 1.8886, 1.7845], [1.4521, 1.3646, 1.9308, 1.5304]]]], 0, 0, 0, 2, Cro735), 
LSep13189 = separable_conv2D_layer(Cro735, 2, 1,[[[[[0.3909], [0.3311], [0.4721], [0.0537]]], [[[0.4104], [0.6117], [0.0836], [0.9639]]]],[[[[0.6986, 0.7756], [0.3675, 0.1989], [0.5905, 0.2591], [0.1371, 0.7617]]]]],[0, 0], 1, 1, true, Sep13189), 
LMax89435 = maximum_layer([Con71591,Sep13189], Max89435), 
exec_layers([LSub14335,LDen83776,LRes22488,LGlo88190,LRes6184,LRes89511,LZer53751,LCon71591,LCro735,LSep13189,LMax89435],["Sub14335","Den83776","Res22488","Glo88190","Res6184","Res89511","Zer53751","Con71591","Cro735","Sep13189","Max89435"],Max89435,"Max89435")

Actual (Unparsed): [[[[2.0761527, 2.5440022], [1.7081226, 2.0925848]], [[2.2495085, 2.9087014], [1.7605687, 2.0750884]], [[2.0323015, 2.7076563], [2.0316345, 2.5762944]], [[1.1770228, 0.9525657], [1.1218744, 0.8626458]]]]

Expected (Unparsed): [[[[2.076152725409,2.544002232325],[1.7081225965490001,2.092584751711]],[[2.249508511059,2.908701425427],[1.7605686612000004,2.0750884101360003]],[[2.032301522309,2.707656315529],[2.03163444101,2.576294388502]],[[1.177022823636,0.9525657438719999],[1.121874378689,0.8626458338230001]]]]

Actual:   [[[[2.0762, 2.5441], [1.7082, 2.0926]], [[2.2496, 2.9088], [1.7606, 2.0751]], [[2.0324, 2.7077], [2.0317, 2.5763]], [[1.1771, 0.9526], [1.1219, 0.8627]]]]

Expected: [[[[2.0762, 2.5441], [1.7082, 2.0926]], [[2.2496, 2.9088], [1.7606, 2.0751]], [[2.0324, 2.7077], [2.0317, 2.5763]], [[1.1771, 0.9526], [1.1219, 0.8627]]]]