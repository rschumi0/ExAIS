import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Sof77563 = tf.keras.layers.Input(shape=([2, 1]))
in0Con84049 = tf.keras.layers.Input(shape=([2, 1]))
in0Min51385 = tf.keras.layers.Input(shape=([2, 2]))
in1Min51385 = tf.keras.layers.Input(shape=([2, 2]))
in0Ave25835 = tf.keras.layers.Input(shape=([1, 2]))
in0Min84167 = tf.keras.layers.Input(shape=([1, 2]))
in1Min84167 = tf.keras.layers.Input(shape=([1, 2]))
in0Con13557 = tf.keras.layers.Input(shape=([3, 4, 1]))
in0Add33471 = tf.keras.layers.Input(shape=([2, 2, 2]))
in1Add33471 = tf.keras.layers.Input(shape=([2, 2, 2]))
in0Con33997 = tf.keras.layers.Input(shape=([3, 4, 1]))

Sof77563 = keras.layers.Softmax(axis=1, name = 'Sof77563', input_shape=(2, 1))(in0Sof77563)
Con84049 = keras.layers.Concatenate(axis=2, name = 'Con84049', )([Sof77563,in0Con84049])
Min51385 = keras.layers.Minimum(name = 'Min51385', )([in0Min51385,in1Min51385])
Max73177 = keras.layers.Maximum(name = 'Max73177', )([Con84049,Min51385])
Ave25835 = keras.layers.AveragePooling1D(pool_size=(1), name = 'Ave25835', )(in0Ave25835)
Zer43432 = keras.layers.ZeroPadding1D(padding=((1, 0)), name = 'Zer43432', )(Ave25835)
Ave86631 = keras.layers.Average(name = 'Ave86631', )([Max73177,Zer43432])
Res61040 = keras.layers.Reshape((2, 2, 1), name = 'Res61040', )(Ave86631)
Res48715 = keras.layers.Reshape((2, 2, 1, 1), name = 'Res48715', )(Res61040)
Con25136 = keras.layers.Conv3D(3, (2, 1, 1),strides=(1, 1, 1), padding='valid', dilation_rate=(1, 1, 1), name = 'Con25136', )(Res48715)
Res9569 = keras.layers.Reshape((1, 2, 3), name = 'Res9569', )(Con25136)
Zer69204 = keras.layers.ZeroPadding2D(padding=((2, 0), (2, 0)), name = 'Zer69204', )(Res9569)
Min84167 = keras.layers.Minimum(name = 'Min84167', )([in0Min84167,in1Min84167])
Res33832 = keras.layers.Reshape((1, 2, 1), name = 'Res33832', )(Min84167)
Zer10761 = keras.layers.ZeroPadding2D(padding=((1, 1), (1, 1)), name = 'Zer10761', )(Res33832)
Con13557 = keras.layers.Concatenate(axis=3, name = 'Con13557', )([Zer10761,in0Con13557])
Add33471 = keras.layers.Add(name = 'Add33471', )([in0Add33471,in1Add33471])
Zer25356 = keras.layers.ZeroPadding2D(padding=((1, 0), (2, 0)), name = 'Zer25356', )(Add33471)
Min36786 = keras.layers.Minimum(name = 'Min36786', )([Con13557,Zer25356])
Con33997 = keras.layers.Concatenate(axis=3, name = 'Con33997', )([Min36786,in0Con33997])
Sub77366 = keras.layers.Subtract(name = 'Sub77366', )([Zer69204,Con33997])
Res82652 = keras.layers.Reshape((3, 4, 3, 1), name = 'Res82652', )(Sub77366)
Zer41951 = keras.layers.ZeroPadding3D(padding=((1, 1), (1, 1), (1, 1)), name = 'Zer41951', )(Res82652)
model = tf.keras.models.Model(inputs=[in0Sof77563,in0Con84049,in0Min51385,in1Min51385,in0Ave25835,in0Min84167,in1Min84167,in0Con13557,in0Add33471,in1Add33471,in0Con33997], outputs=Zer41951)
w = model.get_layer('Con25136').get_weights() 
w[0] = np.array([[[[[0.9286, 0.1232, 0.5826]]]], [[[[0.9453, 0.7515, 0.0512]]]]])
w[1] = np.array([0, 0, 0])
model.get_layer('Con25136').set_weights(w) 
in0Sof77563 = tf.constant([[[0.0119], [0.5329]]])
in0Con84049 = tf.constant([[[0.0572], [0.0143]]])
in0Min51385 = tf.constant([[[0.3155, 0.8946], [0.4781, 0.227]]])
in1Min51385 = tf.constant([[[0.9333, 0.8252], [0.8291, 0.0418]]])
in0Ave25835 = tf.constant([[[1.1003, 1.6948]]])
in0Min84167 = tf.constant([[[0.9912, 0.3813]]])
in1Min84167 = tf.constant([[[0.6386, 0.0956]]])
in0Con13557 = tf.constant([[[[0.0925], [0.3125], [0.8968], [0.8335]], [[0.3851], [0.9697], [0.1101], [0.3995]], [[0.9164], [0.4373], [0.588], [0.006]]]])
in0Add33471 = tf.constant([[[[0.7672, 0.0845], [0.1133, 0.3731]], [[0.648, 0.6873], [0.9359, 0.1532]]]])
in1Add33471 = tf.constant([[[[0.3481, 0.7739], [0.2862, 0.1217]], [[0.918, 0.3215], [0.1354, 0.3758]]]])
in0Con33997 = tf.constant([[[[0.7513], [0.31], [0.8081], [0.3548]], [[0.6489], [0.2422], [0.2216], [0.145]], [[0.5419], [0.519], [0.6457], [0.2501]]]])
print (np.array2string(model.predict([in0Sof77563,in0Con84049,in0Min51385,in1Min51385,in0Ave25835,in0Min84167,in1Min84167,in0Con13557,in0Add33471,in1Add33471,in0Con33997],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Zer41951.png')

LSof77563 = softmax_layer([[[0.0119], [0.5329]]], 1, Sof77563), 
LCon84049 = concatenate_layer([Sof77563,[[[0.0572], [0.0143]]]], 2, Con84049), 
LMin51385 = minimum_layer([[[[0.3155, 0.8946], [0.4781, 0.227]]], [[[0.9333, 0.8252], [0.8291, 0.0418]]]], Min51385), 
LMax73177 = maximum_layer([Con84049,Min51385], Max73177), 
LAve25835 = average_pooling1D_layer([[[1.1003, 1.6948]]], 1, Ave25835), 
LZer43432 = zero_padding1D_layer(Ave25835, 1, 0, Zer43432), 
LAve86631 = average_layer([Max73177,Zer43432], Ave86631), 
LRes61040 = reshape_layer(Ave86631, [2, 2, 1], Res61040), 
LRes48715 = reshape_layer(Res61040, [2, 2, 1, 1], Res48715), 
LCon25136 = conv3D_layer(Res48715, 2, 1, 1,[[[[[0.9286, 0.1232, 0.5826]]]], [[[[0.9453, 0.7515, 0.0512]]]]],[0, 0, 0], 1, 1, 1, false, 1, 1, 1, Con25136), 
LRes9569 = reshape_layer(Con25136, [1, 2, 3], Res9569), 
LZer69204 = zero_padding2D_layer(Res9569, 2, 0, 2, 0, Zer69204), 
LMin84167 = minimum_layer([[[[0.9912, 0.3813]]], [[[0.6386, 0.0956]]]], Min84167), 
LRes33832 = reshape_layer(Min84167, [1, 2, 1], Res33832), 
LZer10761 = zero_padding2D_layer(Res33832, 1, 1, 1, 1, Zer10761), 
LCon13557 = concatenate_layer([Zer10761,[[[[0.0925], [0.3125], [0.8968], [0.8335]], [[0.3851], [0.9697], [0.1101], [0.3995]], [[0.9164], [0.4373], [0.588], [0.006]]]]], 3, Con13557), 
LAdd33471 = add_layer([[[[[0.7672, 0.0845], [0.1133, 0.3731]], [[0.648, 0.6873], [0.9359, 0.1532]]]], [[[[0.3481, 0.7739], [0.2862, 0.1217]], [[0.918, 0.3215], [0.1354, 0.3758]]]]], Add33471), 
LZer25356 = zero_padding2D_layer(Add33471, 1, 0, 2, 0, Zer25356), 
LMin36786 = minimum_layer([Con13557,Zer25356], Min36786), 
LCon33997 = concatenate_layer([Min36786,[[[[0.7513], [0.31], [0.8081], [0.3548]], [[0.6489], [0.2422], [0.2216], [0.145]], [[0.5419], [0.519], [0.6457], [0.2501]]]]], 3, Con33997), 
LSub77366 = subtract_layer(Zer69204,Con33997, Sub77366), 
LRes82652 = reshape_layer(Sub77366, [3, 4, 3, 1], Res82652), 
LZer41951 = zero_padding3D_layer(Res82652, 1, 1, 1, 1, 1, 1, Zer41951), 
exec_layers([LSof77563,LCon84049,LMin51385,LMax73177,LAve25835,LZer43432,LAve86631,LRes61040,LRes48715,LCon25136,LRes9569,LZer69204,LMin84167,LRes33832,LZer10761,LCon13557,LAdd33471,LZer25356,LMin36786,LCon33997,LSub77366,LRes82652,LZer41951],["Sof77563","Con84049","Min51385","Max73177","Ave25835","Zer43432","Ave86631","Res61040","Res48715","Con25136","Res9569","Zer69204","Min84167","Res33832","Zer10761","Con13557","Add33471","Zer25356","Min36786","Con33997","Sub77366","Res82652","Zer41951"],Zer41951,"Zer41951")

Actual (Unparsed): [[[[[0.0000000], [0.0000000], [0.0000000], [0.0000000], [0.0000000]], [[0.0000000], [0.0000000], [0.0000000], [0.0000000], [0.0000000]], [[0.0000000], [0.0000000], [0.0000000], [0.0000000], [0.0000000]], [[0.0000000], [0.0000000], [0.0000000], [0.0000000], [0.0000000]], [[0.0000000], [0.0000000], [0.0000000], [0.0000000], [0.0000000]], [[0.0000000], [0.0000000], [0.0000000], [0.0000000], [0.0000000]]], [[[0.0000000], [0.0000000], [0.0000000], [0.0000000], [0.0000000]], [[0.0000000], [0.0000000], [0.0000000], [-0.7513000], [0.0000000]], [[0.0000000], [0.0000000], [0.0000000], [-0.3100000], [0.0000000]], [[0.0000000], [0.0000000], [0.0000000], [-0.8081000], [0.0000000]], [[0.0000000], [0.0000000], [0.0000000], [-0.3548000], [0.0000000]], [[0.0000000], [0.0000000], [0.0000000], [0.0000000], [0.0000000]]], [[[0.0000000], [0.0000000], [0.0000000], [0.0000000], [0.0000000]], [[0.0000000], [0.0000000], [0.0000000], [-0.6489000], [0.0000000]], [[0.0000000], [0.0000000], [0.0000000], [-0.2422000], [0.0000000]], [[0.0000000], [-0.0956000], [-0.1101000], [-0.2216000], [0.0000000]], [[0.0000000], [0.0000000], [-0.3995000], [-0.1450000], [0.0000000]], [[0.0000000], [0.0000000], [0.0000000], [0.0000000], [0.0000000]]], [[[0.0000000], [0.0000000], [0.0000000], [0.0000000], [0.0000000]], [[0.0000000], [0.0000000], [0.0000000], [-0.5419000], [0.0000000]], [[0.0000000], [0.0000000], [0.0000000], [-0.5190000], [0.0000000]], [[0.0000000], [0.9895954], [0.0841296], [-0.4929276], [0.0000000]], [[0.0000000], [1.2039444], [0.6973598], [0.0347377], [0.0000000]], [[0.0000000], [0.0000000], [0.0000000], [0.0000000], [0.0000000]]], [[[0.0000000], [0.0000000], [0.0000000], [0.0000000], [0.0000000]], [[0.0000000], [0.0000000], [0.0000000], [0.0000000], [0.0000000]], [[0.0000000], [0.0000000], [0.0000000], [0.0000000], [0.0000000]], [[0.0000000], [0.0000000], [0.0000000], [0.0000000], [0.0000000]], [[0.0000000], [0.0000000], [0.0000000], [0.0000000], [0.0000000]], [[0.0000000], [0.0000000], [0.0000000], [0.0000000], [0.0000000]]]]]

Expected (Unparsed): [[[[[0],[0],[0],[0],[0]],[[0],[0],[0],[0],[0]],[[0],[0],[0],[0],[0]],[[0],[0],[0],[0],[0]],[[0],[0],[0],[0],[0]],[[0],[0],[0],[0],[0]]],[[[0],[0],[0],[0],[0]],[[0],[0],[0],[-0.7513],[0]],[[0],[0],[0],[-0.31],[0]],[[0],[0],[0],[-0.8081],[0]],[[0],[0],[0],[-0.3548],[0]],[[0],[0],[0],[0],[0]]],[[[0],[0],[0],[0],[0]],[[0],[0],[0],[-0.6489],[0]],[[0],[0],[0],[-0.2422],[0]],[[0],[-0.0956],[-0.1101],[-0.2216],[0]],[[0],[0],[-0.3995],[-0.145],[0]],[[0],[0],[0],[0],[0]]],[[[0],[0],[0],[0],[0]],[[0],[0],[0],[-0.5419],[0]],[[0],[0],[0],[-0.519],[0]],[[0],[0.9895954311095971],[0.08412964521914912],[-0.4929276031520863],[0]],[[0],[1.20394435],[0.69735977],[0.03473772000000003],[0]],[[0],[0],[0],[0],[0]]],[[[0],[0],[0],[0],[0]],[[0],[0],[0],[0],[0]],[[0],[0],[0],[0],[0]],[[0],[0],[0],[0],[0]],[[0],[0],[0],[0],[0]],[[0],[0],[0],[0],[0]]]]]

Actual:   [[[[[0], [0], [0], [0], [0]], [[0], [0], [0], [0], [0]], [[0], [0], [0], [0], [0]], [[0], [0], [0], [0], [0]], [[0], [0], [0], [0], [0]], [[0], [0], [0], [0], [0]]], [[[0], [0], [0], [0], [0]], [[0], [0], [0], [-0.7513], [0]], [[0], [0], [0], [-0.31], [0]], [[0], [0], [0], [-0.8081], [0]], [[0], [0], [0], [-0.3548], [0]], [[0], [0], [0], [0], [0]]], [[[0], [0], [0], [0], [0]], [[0], [0], [0], [-0.6489], [0]], [[0], [0], [0], [-0.2422], [0]], [[0], [-0.0956], [-0.1101], [-0.2216], [0]], [[0], [0], [-0.3995], [-0.145], [0]], [[0], [0], [0], [0], [0]]], [[[0], [0], [0], [0], [0]], [[0], [0], [0], [-0.5419], [0]], [[0], [0], [0], [-0.519], [0]], [[0], [0.9896], [0.0842], [-0.4929], [0]], [[0], [1.204], [0.6974], [0.0348], [0]], [[0], [0], [0], [0], [0]]], [[[0], [0], [0], [0], [0]], [[0], [0], [0], [0], [0]], [[0], [0], [0], [0], [0]], [[0], [0], [0], [0], [0]], [[0], [0], [0], [0], [0]], [[0], [0], [0], [0], [0]]]]]

Expected: [[[[[0], [0], [0], [0], [0]], [[0], [0], [0], [0], [0]], [[0], [0], [0], [0], [0]], [[0], [0], [0], [0], [0]], [[0], [0], [0], [0], [0]], [[0], [0], [0], [0], [0]]], [[[0], [0], [0], [0], [0]], [[0], [0], [0], [-0.7513], [0]], [[0], [0], [0], [-0.31], [0]], [[0], [0], [0], [-0.8081], [0]], [[0], [0], [0], [-0.3548], [0]], [[0], [0], [0], [0], [0]]], [[[0], [0], [0], [0], [0]], [[0], [0], [0], [-0.6489], [0]], [[0], [0], [0], [-0.2422], [0]], [[0], [-0.0956], [-0.1101], [-0.2216], [0]], [[0], [0], [-0.3995], [-0.145], [0]], [[0], [0], [0], [0], [0]]], [[[0], [0], [0], [0], [0]], [[0], [0], [0], [-0.5419], [0]], [[0], [0], [0], [-0.519], [0]], [[0], [0.9896], [0.0842], [-0.4929], [0]], [[0], [1.204], [0.6974], [0.0348], [0]], [[0], [0], [0], [0], [0]]], [[[0], [0], [0], [0], [0]], [[0], [0], [0], [0], [0]], [[0], [0], [0], [0], [0]], [[0], [0], [0], [0], [0]], [[0], [0], [0], [0], [0]], [[0], [0], [0], [0], [0]]]]]