import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Cro27743 = tf.keras.layers.Input(shape=([3, 1]))

Cro27743 = keras.layers.Cropping1D(cropping=((0, 1)), name = 'Cro27743', )(in0Cro27743)
Res19207 = keras.layers.Reshape((2, 1, 1), name = 'Res19207', )(Cro27743)
Con71005 = keras.layers.Conv2D(3, (1, 1),strides=(1, 1), padding='same', dilation_rate=(1, 1), name = 'Con71005', )(Res19207)
Res24310 = keras.layers.Reshape((2, 1, 3, 1), name = 'Res24310', )(Con71005)
Up_19833 = keras.layers.UpSampling3D(size=(2, 1, 2), name = 'Up_19833', )(Res24310)
Den73457 = keras.layers.Dense(3,name = 'Den73457', )(Up_19833)
model = tf.keras.models.Model(inputs=[in0Cro27743], outputs=Den73457)
w = model.get_layer('Con71005').get_weights() 
w[0] = np.array([[[[0.9174, 0.1603, 0.9203]]]])
w[1] = np.array([0, 0, 0])
model.get_layer('Con71005').set_weights(w) 
w = model.get_layer('Den73457').get_weights() 
w[0] = np.array([[0.0638, 0.6012, 0.5139]])
w[1] = np.array([0.9965, 0.6271, 0.7177])
model.get_layer('Den73457').set_weights(w) 
in0Cro27743 = tf.constant([[[1.4879], [1.1394], [1.5437]]])
print (np.array2string(model.predict([in0Cro27743],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Den73457.png')

LCro27743 = cropping1D_layer([[[1.4879], [1.1394], [1.5437]]], 0, 1, Cro27743), 
LRes19207 = reshape_layer(Cro27743, [2, 1, 1], Res19207), 
LCon71005 = conv2D_layer(Res19207, 1, 1,[[[[0.9174, 0.1603, 0.9203]]]],[0, 0, 0], 1, 1, true, 1, 1, Con71005), 
LRes24310 = reshape_layer(Con71005, [2, 1, 3, 1], Res24310), 
LUp_19833 = up_sampling3D_layer(Res24310, 2, 1, 2, Up_19833), 
LDen73457 = dense_layer(Up_19833, [[0.0638, 0.6012, 0.5139]],[0.9965, 0.6271, 0.7177], Den73457), 
exec_layers([LCro27743,LRes19207,LCon71005,LRes24310,LUp_19833,LDen73457],["Cro27743","Res19207","Con71005","Res24310","Up_19833","Den73457"],Den73457,"Den73457")

Actual (Unparsed): [[[[[1.0835870, 1.4477377, 1.4191732], [1.0835870, 1.4477377, 1.4191732], [1.0117170, 0.7704924, 0.8402705], [1.0117170, 0.7704924, 0.8402705], [1.0838623, 1.4503318, 1.4213907], [1.0838623, 1.4503318, 1.4213907]]], [[[1.0835870, 1.4477377, 1.4191732], [1.0835870, 1.4477377, 1.4191732], [1.0117170, 0.7704924, 0.8402705], [1.0117170, 0.7704924, 0.8402705], [1.0838623, 1.4503318, 1.4213907], [1.0838623, 1.4503318, 1.4213907]]], [[[1.0631892, 1.2555257, 1.2548723], [1.0631892, 1.2555257, 1.2548723], [1.0081528, 0.7369067, 0.8115617], [1.0081528, 0.7369067, 0.8115617], [1.0634000, 1.2575122, 1.2565703], [1.0634000, 1.2575122, 1.2565703]]], [[[1.0631892, 1.2555257, 1.2548723], [1.0631892, 1.2555257, 1.2548723], [1.0081528, 0.7369067, 0.8115617], [1.0081528, 0.7369067, 0.8115617], [1.0634000, 1.2575122, 1.2565703], [1.0634000, 1.2575122, 1.2565703]]]]]

Expected (Unparsed): [[[[[1.0835869655480002,1.447737675352,1.419173222494],[1.0835869655480002,1.447737675352,1.419173222494],[1.011716961606,0.770492434444,0.840270479143],[1.011716961606,0.770492434444,0.840270479143],[1.0838622568060001,1.4503317992440001,1.421390654743],[1.0838622568060001,1.4503317992440001,1.421390654743]]],[[[1.0835869655480002,1.447737675352,1.419173222494],[1.0835869655480002,1.447737675352,1.419173222494],[1.011716961606,0.770492434444,0.840270479143],[1.011716961606,0.770492434444,0.840270479143],[1.0838622568060001,1.4503317992440001,1.421390654743],[1.0838622568060001,1.4503317992440001,1.421390654743]]],[[[1.063189218728,1.255525678672,1.2548722492839999],[1.063189218728,1.255525678672,1.2548722492839999],[1.008152803316,0.736906666984,0.811561686898],[1.008152803316,0.736906666984,0.811561686898],[1.063400030516,1.2575121997839998,1.256570308498],[1.063400030516,1.2575121997839998,1.256570308498]]],[[[1.063189218728,1.255525678672,1.2548722492839999],[1.063189218728,1.255525678672,1.2548722492839999],[1.008152803316,0.736906666984,0.811561686898],[1.008152803316,0.736906666984,0.811561686898],[1.063400030516,1.2575121997839998,1.256570308498],[1.063400030516,1.2575121997839998,1.256570308498]]]]]

Actual:   [[[[[1.0836, 1.4478, 1.4192], [1.0836, 1.4478, 1.4192], [1.0118, 0.7705, 0.8403], [1.0118, 0.7705, 0.8403], [1.0839, 1.4504, 1.4214], [1.0839, 1.4504, 1.4214]]], [[[1.0836, 1.4478, 1.4192], [1.0836, 1.4478, 1.4192], [1.0118, 0.7705, 0.8403], [1.0118, 0.7705, 0.8403], [1.0839, 1.4504, 1.4214], [1.0839, 1.4504, 1.4214]]], [[[1.0632, 1.2556, 1.2549], [1.0632, 1.2556, 1.2549], [1.0082, 0.737, 0.8116], [1.0082, 0.737, 0.8116], [1.0634, 1.2576, 1.2566], [1.0634, 1.2576, 1.2566]]], [[[1.0632, 1.2556, 1.2549], [1.0632, 1.2556, 1.2549], [1.0082, 0.737, 0.8116], [1.0082, 0.737, 0.8116], [1.0634, 1.2576, 1.2566], [1.0634, 1.2576, 1.2566]]]]]

Expected: [[[[[1.0836, 1.4478, 1.4192], [1.0836, 1.4478, 1.4192], [1.0118, 0.7705, 0.8403], [1.0118, 0.7705, 0.8403], [1.0839, 1.4504, 1.4214], [1.0839, 1.4504, 1.4214]]], [[[1.0836, 1.4478, 1.4192], [1.0836, 1.4478, 1.4192], [1.0118, 0.7705, 0.8403], [1.0118, 0.7705, 0.8403], [1.0839, 1.4504, 1.4214], [1.0839, 1.4504, 1.4214]]], [[[1.0632, 1.2556, 1.2549], [1.0632, 1.2556, 1.2549], [1.0082, 0.737, 0.8116], [1.0082, 0.737, 0.8116], [1.0635, 1.2576, 1.2566], [1.0635, 1.2576, 1.2566]]], [[[1.0632, 1.2556, 1.2549], [1.0632, 1.2556, 1.2549], [1.0082, 0.737, 0.8116], [1.0082, 0.737, 0.8116], [1.0635, 1.2576, 1.2566], [1.0635, 1.2576, 1.2566]]]]]