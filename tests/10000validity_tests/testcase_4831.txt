import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Min12855 = tf.keras.layers.Input(shape=([1, 2]))
in1Min12855 = tf.keras.layers.Input(shape=([1, 2]))

Min12855 = keras.layers.Minimum(name = 'Min12855', )([in0Min12855,in1Min12855])
Sof12661 = keras.layers.Softmax(axis=1, name = 'Sof12661', )(Min12855)
model = tf.keras.models.Model(inputs=[in0Min12855,in1Min12855], outputs=Sof12661)
in0Min12855 = tf.constant([[[0.0487, 0.3369]]])
in1Min12855 = tf.constant([[[0.0898, 0.6408]]])
print (np.array2string(model.predict([in0Min12855,in1Min12855],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Sof12661.png')

LMin12855 = minimum_layer([[[[0.0487, 0.3369]]], [[[0.0898, 0.6408]]]], Min12855), 
LSof12661 = softmax_layer(Min12855, 1, Sof12661), 
exec_layers([LMin12855,LSof12661],["Min12855","Sof12661"],Sof12661,"Sof12661")

Actual (Unparsed): [[[1.0000000, 1.0000000]]]

Expected (Unparsed): [[[1.0,1.0]]]

Actual:   [[[1, 1]]]

Expected: [[[1, 1]]]