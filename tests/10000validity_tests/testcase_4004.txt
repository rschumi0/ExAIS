import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Loc25986 = tf.keras.layers.Input(shape=([2, 2, 2]))
in0Den29309 = tf.keras.layers.Input(shape=([2, 2]))
in0Con56070 = tf.keras.layers.Input(shape=([2, 1]))
in0Max96659 = tf.keras.layers.Input(shape=([1, 2, 2]))
in1Max96659 = tf.keras.layers.Input(shape=([1, 2, 2]))
in0Min95671 = tf.keras.layers.Input(shape=([1, 2]))
in1Min95671 = tf.keras.layers.Input(shape=([1, 2]))

Loc25986 = keras.layers.LocallyConnected2D(4, (2, 2),strides=(1, 1), name = 'Loc25986', )(in0Loc25986)
Res52159 = keras.layers.Reshape((1, 4), name = 'Res52159', )(Loc25986)
Zer10538 = keras.layers.ZeroPadding1D(padding=((1, 0)), name = 'Zer10538', )(Res52159)
Den29309 = keras.layers.Dense(3,name = 'Den29309', )(in0Den29309)
Con56070 = keras.layers.Concatenate(axis=2, name = 'Con56070', )([Den29309,in0Con56070])
Sub65251 = keras.layers.Subtract(name = 'Sub65251', )([Zer10538,Con56070])
Res92649 = keras.layers.Reshape((2, 4, 1), name = 'Res92649', )(Sub65251)
Res81314 = keras.layers.Reshape((2, 4, 1, 1), name = 'Res81314', )(Res92649)
Zer41541 = keras.layers.ZeroPadding3D(padding=((6, 0), (0, 0), (1, 0)), name = 'Zer41541', )(Res81314)
Max96659 = keras.layers.Maximum(name = 'Max96659', )([in0Max96659,in1Max96659])
Res78602 = keras.layers.Reshape((1, 4), name = 'Res78602', )(Max96659)
Min95671 = keras.layers.Minimum(name = 'Min95671', )([in0Min95671,in1Min95671])
Dot4175 = keras.layers.Dot(axes=(1, 1), name = 'Dot4175', )([Res78602,Min95671])
Res85580 = keras.layers.Reshape((4, 2, 1), name = 'Res85580', )(Dot4175)
Res22528 = keras.layers.Reshape((4, 2, 1, 1), name = 'Res22528', )(Res85580)
Up_29903 = keras.layers.UpSampling3D(size=(2, 2, 2), name = 'Up_29903', )(Res22528)
Sub33569 = keras.layers.Subtract(name = 'Sub33569', )([Zer41541,Up_29903])
model = tf.keras.models.Model(inputs=[in0Loc25986,in0Den29309,in0Con56070,in0Max96659,in1Max96659,in0Min95671,in1Min95671], outputs=Sub33569)
w = model.get_layer('Loc25986').get_weights() 
w[0] = np.array([[[0.9379, 0.8347, 0.8676, 0.1661], [0.183, 0.6413, 0.8971, 0.5126], [0.0539, 0.9536, 0.4955, 0.0017], [0.0397, 0.0816, 0.6148, 0.9181], [0.0971, 0.8869, 0.2101, 0.1573], [0.8898, 0.9453, 0.7482, 0.8224], [0.4738, 0.9419, 0.2334, 0.7776], [0.9472, 0.1824, 0.0311, 0.3258]]])
w[1] = np.array([[[0, 0, 0, 0]]])
model.get_layer('Loc25986').set_weights(w) 
w = model.get_layer('Den29309').get_weights() 
w[0] = np.array([[0.2601, 0.8822, 0.7812], [0.6823, 0.5812, 0.9147]])
w[1] = np.array([0.0356, 0.2755, 0.9172])
model.get_layer('Den29309').set_weights(w) 
in0Loc25986 = tf.constant([[[[0.0618, 0.4894], [0.3147, 0.0707]], [[0.2405, 0.1559], [0.1161, 0.7376]]]])
in0Den29309 = tf.constant([[[0.507, 0.3378], [0.0727, 0.8737]]])
in0Con56070 = tf.constant([[[0.9938], [0.5859]]])
in0Max96659 = tf.constant([[[[0.1456, 0.2852], [0.2794, 0.9483]]]])
in1Max96659 = tf.constant([[[[0.6155, 0.9476], [0.1736, 0.9434]]]])
in0Min95671 = tf.constant([[[0.3637, 0.8366]]])
in1Min95671 = tf.constant([[[0.9954, 0.5906]]])
print (np.array2string(model.predict([in0Loc25986,in0Den29309,in0Con56070,in0Max96659,in1Max96659,in0Min95671,in1Min95671],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Sub33569.png')

LLoc25986 = locally_connected2D_layer([[[[0.0618, 0.4894], [0.3147, 0.0707]], [[0.2405, 0.1559], [0.1161, 0.7376]]]], 2, 2,[[[0.9379, 0.8347, 0.8676, 0.1661], [0.183, 0.6413, 0.8971, 0.5126], [0.0539, 0.9536, 0.4955, 0.0017], [0.0397, 0.0816, 0.6148, 0.9181], [0.0971, 0.8869, 0.2101, 0.1573], [0.8898, 0.9453, 0.7482, 0.8224], [0.4738, 0.9419, 0.2334, 0.7776], [0.9472, 0.1824, 0.0311, 0.3258]]],[[[0, 0, 0, 0]]], 1, 1, Loc25986), 
LRes52159 = reshape_layer(Loc25986, [1, 4], Res52159), 
LZer10538 = zero_padding1D_layer(Res52159, 1, 0, Zer10538), 
LDen29309 = dense_layer([[[0.507, 0.3378], [0.0727, 0.8737]]], [[0.2601, 0.8822, 0.7812], [0.6823, 0.5812, 0.9147]],[0.0356, 0.2755, 0.9172], Den29309), 
LCon56070 = concatenate_layer([Den29309,[[[0.9938], [0.5859]]]], 2, Con56070), 
LSub65251 = subtract_layer(Zer10538,Con56070, Sub65251), 
LRes92649 = reshape_layer(Sub65251, [2, 4, 1], Res92649), 
LRes81314 = reshape_layer(Res92649, [2, 4, 1, 1], Res81314), 
LZer41541 = zero_padding3D_layer(Res81314, 6, 0, 0, 0, 1, 0, Zer41541), 
LMax96659 = maximum_layer([[[[[0.1456, 0.2852], [0.2794, 0.9483]]]], [[[[0.6155, 0.9476], [0.1736, 0.9434]]]]], Max96659), 
LRes78602 = reshape_layer(Max96659, [1, 4], Res78602), 
LMin95671 = minimum_layer([[[[0.3637, 0.8366]]], [[[0.9954, 0.5906]]]], Min95671), 
LDot4175 = dot_layer(Res78602,Min95671, 1, 1, Dot4175), 
LRes85580 = reshape_layer(Dot4175, [4, 2, 1], Res85580), 
LRes22528 = reshape_layer(Res85580, [4, 2, 1, 1], Res22528), 
LUp_29903 = up_sampling3D_layer(Res22528, 2, 2, 2, Up_29903), 
LSub33569 = subtract_layer(Zer41541,Up_29903, Sub33569), 
exec_layers([LLoc25986,LRes52159,LZer10538,LDen29309,LCon56070,LSub65251,LRes92649,LRes81314,LZer41541,LMax96659,LRes78602,LMin95671,LDot4175,LRes85580,LRes22528,LUp_29903,LSub33569],["Loc25986","Res52159","Zer10538","Den29309","Con56070","Sub65251","Res92649","Res81314","Zer41541","Max96659","Res78602","Min95671","Dot4175","Res85580","Res22528","Up_29903","Sub33569"],Sub33569,"Sub33569")

Actual (Unparsed): [[[[[-0.2238573], [-0.2238573]], [[-0.2238573], [-0.2238573]], [[-0.3635143], [-0.3635143]], [[-0.3635143], [-0.3635143]]], [[[-0.2238573], [-0.2238573]], [[-0.2238573], [-0.2238573]], [[-0.3635143], [-0.3635143]], [[-0.3635143], [-0.3635143]]], [[[-0.3446421], [-0.3446421]], [[-0.3446421], [-0.3446421]], [[-0.5596526], [-0.5596526]], [[-0.5596526], [-0.5596526]]], [[[-0.3446421], [-0.3446421]], [[-0.3446421], [-0.3446421]], [[-0.5596526], [-0.5596526]], [[-0.5596526], [-0.5596526]]], [[[-0.1016178], [-0.1016178]], [[-0.1016178], [-0.1016178]], [[-0.1650136], [-0.1650136]], [[-0.1650136], [-0.1650136]]], [[[-0.1016178], [-0.1016178]], [[-0.1016178], [-0.1016178]], [[-0.1650136], [-0.1650136]], [[-0.1650136], [-0.1650136]]], [[[-0.3448967], [-0.7428484]], [[-0.3448967], [-1.2640015]], [[-0.5600660], [-2.1823201]], [[-0.5600660], [-1.5538660]]], [[[-0.3448967], [0.0874953]], [[-0.3448967], [0.0835412]], [[-0.5600660], [-1.4239635]], [[-0.5600660], [-0.3227577]]]]]

Expected (Unparsed): [[[[[-0.22385735000000004],[-0.22385735000000004]],[[-0.22385735000000004],[-0.22385735000000004]],[[-0.3635143],[-0.3635143]],[[-0.3635143],[-0.3635143]]],[[[-0.22385735000000004],[-0.22385735000000004]],[[-0.22385735000000004],[-0.22385735000000004]],[[-0.3635143],[-0.3635143]],[[-0.3635143],[-0.3635143]]],[[[-0.34464212],[-0.34464212]],[[-0.34464212],[-0.34464212]],[[-0.55965256],[-0.55965256]],[[-0.55965256],[-0.55965256]]],[[[-0.34464212],[-0.34464212]],[[-0.34464212],[-0.34464212]],[[-0.55965256],[-0.55965256]],[[-0.55965256],[-0.55965256]]],[[[-0.10161778],[-0.10161778]],[[-0.10161778],[-0.10161778]],[[-0.16501364],[-0.16501364]],[[-0.16501364],[-0.16501364]]],[[[-0.10161778],[-0.10161778]],[[-0.10161778],[-0.10161778]],[[-0.16501364],[-0.16501364]],[[-0.16501364],[-0.16501364]]],[[[-0.34489671000000005],[-0.74284835]],[[-0.34489671000000005],[-1.26400147]],[[-0.5600659800000001],[-2.1823200400000005]],[[-0.5600659800000001],[-1.55386598]]],[[[-0.34489671000000005],[0.08749531999999988]],[[-0.34489671000000005],[0.08354118000000005]],[[-0.5600659800000001],[-1.42396345]],[[-0.5600659800000001],[-0.3227576500000001]]]]]

Actual:   [[[[[-0.2238], [-0.2238]], [[-0.2238], [-0.2238]], [[-0.3635], [-0.3635]], [[-0.3635], [-0.3635]]], [[[-0.2238], [-0.2238]], [[-0.2238], [-0.2238]], [[-0.3635], [-0.3635]], [[-0.3635], [-0.3635]]], [[[-0.3446], [-0.3446]], [[-0.3446], [-0.3446]], [[-0.5596], [-0.5596]], [[-0.5596], [-0.5596]]], [[[-0.3446], [-0.3446]], [[-0.3446], [-0.3446]], [[-0.5596], [-0.5596]], [[-0.5596], [-0.5596]]], [[[-0.1016], [-0.1016]], [[-0.1016], [-0.1016]], [[-0.165], [-0.165]], [[-0.165], [-0.165]]], [[[-0.1016], [-0.1016]], [[-0.1016], [-0.1016]], [[-0.165], [-0.165]], [[-0.165], [-0.165]]], [[[-0.3448], [-0.7428]], [[-0.3448], [-1.264]], [[-0.56], [-2.1823]], [[-0.56], [-1.5538]]], [[[-0.3448], [0.0875]], [[-0.3448], [0.0836]], [[-0.56], [-1.4239]], [[-0.56], [-0.3227]]]]]

Expected: [[[[[-0.2238], [-0.2238]], [[-0.2238], [-0.2238]], [[-0.3635], [-0.3635]], [[-0.3635], [-0.3635]]], [[[-0.2238], [-0.2238]], [[-0.2238], [-0.2238]], [[-0.3635], [-0.3635]], [[-0.3635], [-0.3635]]], [[[-0.3446], [-0.3446]], [[-0.3446], [-0.3446]], [[-0.5596], [-0.5596]], [[-0.5596], [-0.5596]]], [[[-0.3446], [-0.3446]], [[-0.3446], [-0.3446]], [[-0.5596], [-0.5596]], [[-0.5596], [-0.5596]]], [[[-0.1016], [-0.1016]], [[-0.1016], [-0.1016]], [[-0.165], [-0.165]], [[-0.165], [-0.165]]], [[[-0.1016], [-0.1016]], [[-0.1016], [-0.1016]], [[-0.165], [-0.165]], [[-0.165], [-0.165]]], [[[-0.3448], [-0.7428]], [[-0.3448], [-1.264]], [[-0.56], [-2.1823]], [[-0.56], [-1.5538]]], [[[-0.3448], [0.0875]], [[-0.3448], [0.0836]], [[-0.56], [-1.4239]], [[-0.56], [-0.3227]]]]]