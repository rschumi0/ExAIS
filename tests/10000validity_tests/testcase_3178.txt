import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Bat16593 = tf.keras.layers.Input(shape=([1]))

Bat16593 = keras.layers.BatchNormalization(axis=1, epsilon=0.5136041395951061,  name = 'Bat16593', )(in0Bat16593)
Res43246 = keras.layers.Reshape((1, 1), name = 'Res43246', )(Bat16593)
Res89715 = keras.layers.Reshape((1, 1, 1), name = 'Res89715', )(Res43246)
Res72311 = keras.layers.Reshape((1, 1, 1, 1), name = 'Res72311', )(Res89715)
Glo90328 = keras.layers.GlobalAveragePooling3D(name = 'Glo90328', )(Res72311)
model = tf.keras.models.Model(inputs=[in0Bat16593], outputs=Glo90328)
w = model.get_layer('Bat16593').get_weights() 
w[0] = np.array([0.5552])
w[1] = np.array([0.3142])
w[2] = np.array([0.3886])
w[3] = np.array([0.3422])
model.get_layer('Bat16593').set_weights(w) 
in0Bat16593 = tf.constant([[1.5687]])
print (np.array2string(model.predict([in0Bat16593],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Glo90328.png')

LBat16593 = batch_normalization_layer([[1.5687]], 1, 0.5136041395951061, [0.5552], [0.3142], [0.3886], [0.3422], Bat16593), 
LRes43246 = reshape_layer(Bat16593, [1, 1], Res43246), 
LRes89715 = reshape_layer(Res43246, [1, 1, 1], Res89715), 
LRes72311 = reshape_layer(Res89715, [1, 1, 1, 1], Res72311), 
LGlo90328 = global_average_pooling3D_layer(Res72311, Glo90328), 
exec_layers([LBat16593,LRes43246,LRes89715,LRes72311,LGlo90328],["Bat16593","Res43246","Res89715","Res72311","Glo90328"],Glo90328,"Glo90328")

Actual (Unparsed): [[1.0224410]]

Expected (Unparsed): [[1.0224410195065823]]

Actual:   [[1.0225]]

Expected: [[1.0225]]