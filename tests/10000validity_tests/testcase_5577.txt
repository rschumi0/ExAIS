import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Sub56540 = tf.keras.layers.Input(shape=([2, 3]))
in1Sub56540 = tf.keras.layers.Input(shape=([2, 3]))
in0Con42817 = tf.keras.layers.Input(shape=([2, 6]))
in0Min47883 = tf.keras.layers.Input(shape=([1, 2]))
in1Min47883 = tf.keras.layers.Input(shape=([1, 2]))
in0Zer61663 = tf.keras.layers.Input(shape=([1, 1, 1, 1]))

Sub56540 = keras.layers.Subtract(name = 'Sub56540', )([in0Sub56540,in1Sub56540])
Con42817 = keras.layers.Concatenate(axis=2, name = 'Con42817', )([Sub56540,in0Con42817])
Min47883 = keras.layers.Minimum(name = 'Min47883', )([in0Min47883,in1Min47883])
Lea38626 = keras.layers.LeakyReLU(alpha=4.961942151548723, name = 'Lea38626', )(Min47883)
Res15745 = keras.layers.Reshape((1, 2, 1), name = 'Res15745', )(Lea38626)
Res68446 = keras.layers.Reshape((1, 2, 1, 1), name = 'Res68446', )(Res15745)
Zer11342 = keras.layers.ZeroPadding3D(padding=((2, 0), (1, 0), (2, 0)), name = 'Zer11342', )(Res68446)
Zer61663 = keras.layers.ZeroPadding3D(padding=((1, 1), (1, 1), (1, 1)), name = 'Zer61663', )(in0Zer61663)
Add37171 = keras.layers.Add(name = 'Add37171', )([Zer11342,Zer61663])
Res51414 = keras.layers.Reshape((3, 3, 3), name = 'Res51414', )(Add37171)
Res26051 = keras.layers.Reshape((3, 9), name = 'Res26051', )(Res51414)
Dot12757 = keras.layers.Dot(axes=(2, 2), name = 'Dot12757', )([Con42817,Res26051])
model = tf.keras.models.Model(inputs=[in0Sub56540,in1Sub56540,in0Con42817,in0Min47883,in1Min47883,in0Zer61663], outputs=Dot12757)
in0Sub56540 = tf.constant([[[0.0509, 0.9882, 0.9324], [0.6283, 0.1281, 0.0754]]])
in1Sub56540 = tf.constant([[[0.57, 0.982, 0.2998], [0.6113, 0.237, 0.7532]]])
in0Con42817 = tf.constant([[[0.8123, 0.6181, 0.3131, 0.4025, 0.3316, 0.4793], [0.1158, 0.7032, 0.5264, 0.2237, 0.935, 0.8523]]])
in0Min47883 = tf.constant([[[0.3705, 0.1212]]])
in1Min47883 = tf.constant([[[0.1376, 0.4856]]])
in0Zer61663 = tf.constant([[[[[1.7539]]]]])
print (np.array2string(model.predict([in0Sub56540,in1Sub56540,in0Con42817,in0Min47883,in1Min47883,in0Zer61663],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Dot12757.png')

LSub56540 = subtract_layer([[[0.0509, 0.9882, 0.9324], [0.6283, 0.1281, 0.0754]]], [[[0.57, 0.982, 0.2998], [0.6113, 0.237, 0.7532]]], Sub56540), 
LCon42817 = concatenate_layer([Sub56540,[[[0.8123, 0.6181, 0.3131, 0.4025, 0.3316, 0.4793], [0.1158, 0.7032, 0.5264, 0.2237, 0.935, 0.8523]]]], 2, Con42817), 
LMin47883 = minimum_layer([[[[0.3705, 0.1212]]], [[[0.1376, 0.4856]]]], Min47883), 
LLea38626 = leaky_relu_layer(Min47883, 4.961942151548723, Lea38626), 
LRes15745 = reshape_layer(Lea38626, [1, 2, 1], Res15745), 
LRes68446 = reshape_layer(Res15745, [1, 2, 1, 1], Res68446), 
LZer11342 = zero_padding3D_layer(Res68446, 2, 0, 1, 0, 2, 0, Zer11342), 
LZer61663 = zero_padding3D_layer([[[[[1.7539]]]]], 1, 1, 1, 1, 1, 1, Zer61663), 
LAdd37171 = add_layer([Zer11342,Zer61663], Add37171), 
LRes51414 = reshape_layer(Add37171, [3, 3, 3], Res51414), 
LRes26051 = reshape_layer(Res51414, [3, 9], Res26051), 
LDot12757 = dot_layer(Con42817,Res26051, 2, 2, Dot12757), 
exec_layers([LSub56540,LCon42817,LMin47883,LLea38626,LRes15745,LRes68446,LZer11342,LZer61663,LAdd37171,LRes51414,LRes26051,LDot12757],["Sub56540","Con42817","Min47883","Lea38626","Res15745","Res68446","Zer11342","Zer61663","Add37171","Res51414","Res26051","Dot12757"],Dot12757,"Dot12757")

Actual (Unparsed): [[[0.0000000, 1.0840856, 0.1011737], [0.0000000, 1.2333425, 0.1757314]]]

Expected (Unparsed): [[[0.0,1.08408559,0.10117372],[0.0,1.2333424800000001,0.17573139999999998]]]

Actual:   [[[0, 1.0841, 0.1012], [0, 1.2334, 0.1758]]]

Expected: [[[0, 1.0841, 0.1012], [0, 1.2334, 0.1758]]]