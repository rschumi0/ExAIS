import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Cro60869 = tf.keras.layers.Input(shape=([1, 4, 3]))
in0Con9429 = tf.keras.layers.Input(shape=([1, 1]))
in0Ave17661 = tf.keras.layers.Input(shape=([1, 2]))
in1Ave17661 = tf.keras.layers.Input(shape=([1, 2]))
in0Con39406 = tf.keras.layers.Input(shape=([1, 2, 1]))
in0Sof96451 = tf.keras.layers.Input(shape=([1, 1, 2]))

Cro60869 = keras.layers.Cropping2D(cropping=((0, 0), (3, 0)), name = 'Cro60869', )(in0Cro60869)
Cro43193 = keras.layers.Cropping2D(cropping=((0, 0), (0, 0)), name = 'Cro43193', )(Cro60869)
Res97044 = keras.layers.Reshape((1, 3), name = 'Res97044', )(Cro43193)
Con9429 = keras.layers.Concatenate(axis=2, name = 'Con9429', )([Res97044,in0Con9429])
Ave17661 = keras.layers.Average(name = 'Ave17661', )([in0Ave17661,in1Ave17661])
Res23973 = keras.layers.Reshape((1, 2, 1), name = 'Res23973', )(Ave17661)
Con39406 = keras.layers.Concatenate(axis=3, name = 'Con39406', )([Res23973,in0Con39406])
Sof96451 = keras.layers.Softmax(axis=1, name = 'Sof96451', input_shape=(1, 1, 2))(in0Sof96451)
Zer48612 = keras.layers.ZeroPadding2D(padding=((0, 0), (1, 0)), name = 'Zer48612', )(Sof96451)
Ave78088 = keras.layers.Average(name = 'Ave78088', )([Con39406,Zer48612])
Res61352 = keras.layers.Reshape((1, 4), name = 'Res61352', )(Ave78088)
Dot59614 = keras.layers.Dot(axes=(1, 1), name = 'Dot59614', )([Con9429,Res61352])
model = tf.keras.models.Model(inputs=[in0Cro60869,in0Con9429,in0Ave17661,in1Ave17661,in0Con39406,in0Sof96451], outputs=Dot59614)
in0Cro60869 = tf.constant([[[[1.6478, 1.5892, 1.7104], [1.987, 1.6514, 1.4099], [1.4921, 1.611, 1.7497], [1.6913, 1.0662, 1.9844]]]])
in0Con9429 = tf.constant([[[0.4082]]])
in0Ave17661 = tf.constant([[[0.9811, 0.5378]]])
in1Ave17661 = tf.constant([[[0.9238, 0.8155]]])
in0Con39406 = tf.constant([[[[0.1847], [0.8044]]]])
in0Sof96451 = tf.constant([[[[0.3184, 0.7718]]]])
print (np.array2string(model.predict([in0Cro60869,in0Con9429,in0Ave17661,in1Ave17661,in0Con39406,in0Sof96451],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Dot59614.png')

LCro60869 = cropping2D_layer([[[[1.6478, 1.5892, 1.7104], [1.987, 1.6514, 1.4099], [1.4921, 1.611, 1.7497], [1.6913, 1.0662, 1.9844]]]], 0, 0, 3, 0, Cro60869), 
LCro43193 = cropping2D_layer(Cro60869, 0, 0, 0, 0, Cro43193), 
LRes97044 = reshape_layer(Cro43193, [1, 3], Res97044), 
LCon9429 = concatenate_layer([Res97044,[[[0.4082]]]], 2, Con9429), 
LAve17661 = average_layer([[[[0.9811, 0.5378]]], [[[0.9238, 0.8155]]]], Ave17661), 
LRes23973 = reshape_layer(Ave17661, [1, 2, 1], Res23973), 
LCon39406 = concatenate_layer([Res23973,[[[[0.1847], [0.8044]]]]], 3, Con39406), 
LSof96451 = softmax_layer([[[[0.3184, 0.7718]]]], 1, Sof96451), 
LZer48612 = zero_padding2D_layer(Sof96451, 0, 0, 1, 0, Zer48612), 
LAve78088 = average_layer([Con39406,Zer48612], Ave78088), 
LRes61352 = reshape_layer(Ave78088, [1, 4], Res61352), 
LDot59614 = dot_layer(Con9429,Res61352, 1, 1, Dot59614), 
exec_layers([LCro60869,LCro43193,LRes97044,LCon9429,LAve17661,LRes23973,LCon39406,LSof96451,LZer48612,LAve78088,LRes61352,LDot59614],["Cro60869","Cro43193","Res97044","Con9429","Ave17661","Res23973","Con39406","Sof96451","Zer48612","Ave78088","Res61352","Dot59614"],Dot59614,"Dot59614")

Actual (Unparsed): [[[0.8054394, 0.1561916, 1.4178591, 1.5258909], [0.5077511, 0.0984636, 0.8938221, 0.9619257], [0.9450209, 0.1832593, 1.6635722, 1.7903257], [0.1943950, 0.0376973, 0.3422043, 0.3682780]]]

Expected (Unparsed): [[[0.8054393425,0.156191555,1.4178590725,1.52589086],[0.507751095,0.09846357,0.893822115,0.96192564],[0.94502089,0.18325934,1.66357213,1.79032568],[0.19439504500000002,0.03769727,0.342204265,0.36827804000000003]]]

Actual:   [[[0.8055, 0.1562, 1.4179, 1.5259], [0.5078, 0.0985, 0.8939, 0.962], [0.9451, 0.1833, 1.6636, 1.7904], [0.1944, 0.0377, 0.3423, 0.3683]]]

Expected: [[[0.8055, 0.1562, 1.4179, 1.5259], [0.5078, 0.0985, 0.8939, 0.962], [0.9451, 0.1833, 1.6636, 1.7904], [0.1944, 0.0377, 0.3423, 0.3683]]]