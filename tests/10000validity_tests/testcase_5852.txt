import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Glo503 = tf.keras.layers.Input(shape=([2, 2, 2]))
in0Con95873 = tf.keras.layers.Input(shape=([2, 3, 1, 1]))
in0Max4885 = tf.keras.layers.Input(shape=([1, 2, 1, 2]))
in1Max4885 = tf.keras.layers.Input(shape=([1, 2, 1, 2]))
in0Sub87065 = tf.keras.layers.Input(shape=([3, 3, 3]))
in1Sub87065 = tf.keras.layers.Input(shape=([3, 3, 3]))
in0Max12054 = tf.keras.layers.Input(shape=([2, 1]))
in0Con71519 = tf.keras.layers.Input(shape=([3, 3, 3, 1]))

Glo503 = keras.layers.GlobalAveragePooling2D(name = 'Glo503', )(in0Glo503)
Res88969 = keras.layers.Reshape((2, 1), name = 'Res88969', )(Glo503)
Res3639 = keras.layers.Reshape((2, 1, 1), name = 'Res3639', )(Res88969)
Res93196 = keras.layers.Reshape((2, 1, 1, 1), name = 'Res93196', )(Res3639)
Zer91547 = keras.layers.ZeroPadding3D(padding=((0, 0), (2, 0), (0, 0)), name = 'Zer91547', )(Res93196)
Con95873 = keras.layers.Concatenate(axis=4, name = 'Con95873', )([Zer91547,in0Con95873])
Max4885 = keras.layers.Maximum(name = 'Max4885', )([in0Max4885,in1Max4885])
Zer2830 = keras.layers.ZeroPadding3D(padding=((1, 0), (1, 0), (0, 0)), name = 'Zer2830', )(Max4885)
Max77759 = keras.layers.Maximum(name = 'Max77759', )([Con95873,Zer2830])
Zer65882 = keras.layers.ZeroPadding3D(padding=((1, 0), (0, 0), (2, 0)), name = 'Zer65882', )(Max77759)
Sub87065 = keras.layers.Subtract(name = 'Sub87065', )([in0Sub87065,in1Sub87065])
Lea48391 = keras.layers.LeakyReLU(alpha=7.781533858460546, name = 'Lea48391', )(Sub87065)
Res63048 = keras.layers.Reshape((3, 3, 3, 1), name = 'Res63048', )(Lea48391)
Max12054 = keras.layers.MaxPool1D(pool_size=(1), name = 'Max12054', )(in0Max12054)
Res76621 = keras.layers.Reshape((2, 1, 1), name = 'Res76621', )(Max12054)
Res1559 = keras.layers.Reshape((2, 1, 1, 1), name = 'Res1559', )(Res76621)
Cro8988 = keras.layers.Cropping3D(cropping=((1, 0), (0, 0), (0, 0)), name = 'Cro8988', )(Res1559)
Zer77174 = keras.layers.ZeroPadding3D(padding=((2, 0), (2, 0), (2, 0)), name = 'Zer77174', )(Cro8988)
Ave31329 = keras.layers.Average(name = 'Ave31329', )([Res63048,Zer77174])
Con71519 = keras.layers.Concatenate(axis=4, name = 'Con71519', )([Ave31329,in0Con71519])
Ave56079 = keras.layers.Average(name = 'Ave56079', )([Zer65882,Con71519])
model = tf.keras.models.Model(inputs=[in0Glo503,in0Con95873,in0Max4885,in1Max4885,in0Sub87065,in1Sub87065,in0Max12054,in0Con71519], outputs=Ave56079)
in0Glo503 = tf.constant([[[[1.3336, 1.5635], [1.9913, 1.924]], [[1.9759, 1.8932], [1.7842, 1.8375]]]])
in0Con95873 = tf.constant([[[[[0.3022]], [[0.4438]], [[0.5021]]], [[[0.2147]], [[0.0558]], [[0.484]]]]])
in0Max4885 = tf.constant([[[[[0.6032, 0.0922]], [[0.7507, 0.5343]]]]])
in1Max4885 = tf.constant([[[[[0.7722, 0.1183]], [[0.0266, 0.3493]]]]])
in0Sub87065 = tf.constant([[[[0.9742, 0.7906, 0.2395], [0.1286, 0.3175, 0.0346], [0.1238, 0.8526, 0.4592]], [[0.7743, 0.4917, 0.695], [0.0846, 0.928, 0.8803], [0.7387, 0.5405, 0.5624]], [[0.147, 0.4286, 0.0611], [0.6329, 0.2561, 0.9834], [0.3996, 0.8967, 0.5161]]]])
in1Sub87065 = tf.constant([[[[0.4136, 0.5711, 0.5235], [0.5596, 0.4926, 0.8491], [0.6479, 0.4345, 0.0174]], [[0.1151, 0.6093, 0.2755], [0.96, 0.1577, 0.9064], [0.1586, 0.6578, 0.5399]], [[0.958, 0.9061, 0.0223], [0.2089, 0.6052, 0.8088], [0.854, 0.1101, 0.9179]]]])
in0Max12054 = tf.constant([[[1.4539], [1.745]]])
in0Con71519 = tf.constant([[[[[0.1922], [0.2461], [0.6379]], [[0.4542], [0.7853], [0.6898]], [[0.138], [0.4448], [0.8004]]], [[[0.2159], [0.6677], [0.9121]], [[0.3914], [0.0401], [0.2596]], [[0.743], [0.0865], [0.5974]]], [[[0.9879], [0.471], [0.5081]], [[0.456], [0.2624], [0.0857]], [[0.9369], [0.6195], [0.8688]]]]])
print (np.array2string(model.predict([in0Glo503,in0Con95873,in0Max4885,in1Max4885,in0Sub87065,in1Sub87065,in0Max12054,in0Con71519],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Ave56079.png')

LGlo503 = global_average_pooling2D_layer([[[[1.3336, 1.5635], [1.9913, 1.924]], [[1.9759, 1.8932], [1.7842, 1.8375]]]], Glo503), 
LRes88969 = reshape_layer(Glo503, [2, 1], Res88969), 
LRes3639 = reshape_layer(Res88969, [2, 1, 1], Res3639), 
LRes93196 = reshape_layer(Res3639, [2, 1, 1, 1], Res93196), 
LZer91547 = zero_padding3D_layer(Res93196, 0, 0, 2, 0, 0, 0, Zer91547), 
LCon95873 = concatenate_layer([Zer91547,[[[[[0.3022]], [[0.4438]], [[0.5021]]], [[[0.2147]], [[0.0558]], [[0.484]]]]]], 4, Con95873), 
LMax4885 = maximum_layer([[[[[[0.6032, 0.0922]], [[0.7507, 0.5343]]]]], [[[[[0.7722, 0.1183]], [[0.0266, 0.3493]]]]]], Max4885), 
LZer2830 = zero_padding3D_layer(Max4885, 1, 0, 1, 0, 0, 0, Zer2830), 
LMax77759 = maximum_layer([Con95873,Zer2830], Max77759), 
LZer65882 = zero_padding3D_layer(Max77759, 1, 0, 0, 0, 2, 0, Zer65882), 
LSub87065 = subtract_layer([[[[0.9742, 0.7906, 0.2395], [0.1286, 0.3175, 0.0346], [0.1238, 0.8526, 0.4592]], [[0.7743, 0.4917, 0.695], [0.0846, 0.928, 0.8803], [0.7387, 0.5405, 0.5624]], [[0.147, 0.4286, 0.0611], [0.6329, 0.2561, 0.9834], [0.3996, 0.8967, 0.5161]]]], [[[[0.4136, 0.5711, 0.5235], [0.5596, 0.4926, 0.8491], [0.6479, 0.4345, 0.0174]], [[0.1151, 0.6093, 0.2755], [0.96, 0.1577, 0.9064], [0.1586, 0.6578, 0.5399]], [[0.958, 0.9061, 0.0223], [0.2089, 0.6052, 0.8088], [0.854, 0.1101, 0.9179]]]], Sub87065), 
LLea48391 = leaky_relu_layer(Sub87065, 7.781533858460546, Lea48391), 
LRes63048 = reshape_layer(Lea48391, [3, 3, 3, 1], Res63048), 
LMax12054 = max_pool1D_layer([[[1.4539], [1.745]]], 1, Max12054), 
LRes76621 = reshape_layer(Max12054, [2, 1, 1], Res76621), 
LRes1559 = reshape_layer(Res76621, [2, 1, 1, 1], Res1559), 
LCro8988 = cropping3D_layer(Res1559, 1, 0, 0, 0, 0, 0, Cro8988), 
LZer77174 = zero_padding3D_layer(Cro8988, 2, 0, 2, 0, 2, 0, Zer77174), 
LAve31329 = average_layer([Res63048,Zer77174], Ave31329), 
LCon71519 = concatenate_layer([Ave31329,[[[[[0.1922], [0.2461], [0.6379]], [[0.4542], [0.7853], [0.6898]], [[0.138], [0.4448], [0.8004]]], [[[0.2159], [0.6677], [0.9121]], [[0.3914], [0.0401], [0.2596]], [[0.743], [0.0865], [0.5974]]], [[[0.9879], [0.471], [0.5081]], [[0.456], [0.2624], [0.0857]], [[0.9369], [0.6195], [0.8688]]]]]], 4, Con71519), 
LAve56079 = average_layer([Zer65882,Con71519], Ave56079), 
exec_layers([LGlo503,LRes88969,LRes3639,LRes93196,LZer91547,LCon95873,LMax4885,LZer2830,LMax77759,LZer65882,LSub87065,LLea48391,LRes63048,LMax12054,LRes76621,LRes1559,LCro8988,LZer77174,LAve31329,LCon71519,LAve56079],["Glo503","Res88969","Res3639","Res93196","Zer91547","Con95873","Max4885","Zer2830","Max77759","Zer65882","Sub87065","Lea48391","Res63048","Max12054","Res76621","Res1559","Cro8988","Zer77174","Ave31329","Con71519","Ave56079"],Ave56079,"Ave56079")

Actual (Unparsed): [[[[[0.1401500, 0.0961000], [0.0548750, 0.1230500], [-0.5524889, 0.3189500]], [[-0.8384602, 0.2271000], [-0.3406366, 0.3926500], [-1.5845148, 0.3449000]], [[-1.0195754, 0.0690000], [0.1045250, 0.2224000], [0.1104500, 0.4002000]]], [[[0.1648000, 0.1079500], [-0.2287771, 0.3338500], [0.1048750, 0.6071500]], [[-1.7029886, 0.1957000], [0.1925750, 0.0200500], [-0.0507746, 0.3517000]], [[0.1450250, 0.3715000], [-0.2281935, 0.0432500], [0.8912500, 0.5497500]]], [[[-1.5777060, 0.4939500], [-0.9289205, 0.2355000], [0.0097000, 0.3614000]], [[0.1060000, 0.2280000], [-0.6791333, 0.1312000], [0.4297500, 0.1020000]], [[-0.8839822, 0.4684500], [0.1966500, 0.3097500], [0.5568699, 0.7015500]]]]]

Expected (Unparsed): [[[[[0.14015,0.0961],[0.05487499999999998,0.12305],[-0.5524889039506987,0.31895]],[[-0.8384602732491238,0.2271],[-0.34063664465411037,0.39265],[-1.5845148319290285,0.3449]],[[-1.019575473804793,0.069],[0.104525,0.2224],[0.11044999999999999,0.4002]]],[[[0.1648,0.10795],[-0.2287770954387399,0.33385],[0.10487499999999998,0.6071500000000001]],[[-1.7029886849240903,0.1957],[0.192575,0.02005],[-0.05077450842645508,0.3517]],[[0.14502500000000002,0.3715],[-0.22819348039935564,0.04325],[0.89125,0.54975]]],[[[-1.5777059898028756,0.49395],[-0.9289206043537277,0.2355],[0.0097,0.3614]],[[0.10600000000000001,0.228],[-0.679133367497144,0.1312],[0.42975,0.10200000000000001]],[[-0.883982246321118,0.46845],[0.19665000000000002,0.30975],[0.556869923917638,0.70155]]]]]

Actual:   [[[[[0.1402, 0.0961], [0.0549, 0.1231], [-0.5524, 0.319]], [[-0.8384, 0.2271], [-0.3406, 0.3927], [-1.5845, 0.3449]], [[-1.0195, 0.069], [0.1046, 0.2224], [0.1105, 0.4002]]], [[[0.1648, 0.108], [-0.2287, 0.3339], [0.1049, 0.6072]], [[-1.7029, 0.1957], [0.1926, 0.0201], [-0.0507, 0.3517]], [[0.1451, 0.3715], [-0.2281, 0.0433], [0.8913, 0.5498]]], [[[-1.5777, 0.494], [-0.9289, 0.2355], [0.0097, 0.3614]], [[0.106, 0.228], [-0.6791, 0.1312], [0.4298, 0.102]], [[-0.8839, 0.4685], [0.1967, 0.3098], [0.5569, 0.7016]]]]]

Expected: [[[[[0.1402, 0.0961], [0.0549, 0.1231], [-0.5524, 0.319]], [[-0.8384, 0.2271], [-0.3406, 0.3927], [-1.5845, 0.3449]], [[-1.0195, 0.069], [0.1046, 0.2224], [0.1105, 0.4002]]], [[[0.1648, 0.108], [-0.2287, 0.3339], [0.1049, 0.6072]], [[-1.7029, 0.1957], [0.1926, 0.0201], [-0.0507, 0.3517]], [[0.1451, 0.3715], [-0.2281, 0.0433], [0.8913, 0.5498]]], [[[-1.5777, 0.494], [-0.9289, 0.2355], [0.0097, 0.3614]], [[0.1061, 0.228], [-0.6791, 0.1312], [0.4298, 0.1021]], [[-0.8839, 0.4685], [0.1967, 0.3098], [0.5569, 0.7016]]]]]