import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Ave9434 = tf.keras.layers.Input(shape=([2, 2]))

Ave9434 = keras.layers.AveragePooling1D(pool_size=(2), strides=(1), padding='valid', name = 'Ave9434', )(in0Ave9434)
Fla11721 = keras.layers.Flatten(name = 'Fla11721', )(Ave9434)
Res17156 = keras.layers.Reshape((2, 1), name = 'Res17156', )(Fla11721)
Up_57352 = keras.layers.UpSampling1D(size=(2), name = 'Up_57352', )(Res17156)
model = tf.keras.models.Model(inputs=[in0Ave9434], outputs=Up_57352)
in0Ave9434 = tf.constant([[[1.8641, 1.0025], [1.6844, 1.4812]]])
print (np.array2string(model.predict([in0Ave9434],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Up_57352.png')

LAve9434 = average_pooling1D_layer([[[1.8641, 1.0025], [1.6844, 1.4812]]], 2, 1, false, Ave9434), 
LFla11721 = flatten_layer(Ave9434, Fla11721), 
LRes17156 = reshape_layer(Fla11721, [2, 1], Res17156), 
LUp_57352 = up_sampling1D_layer(Res17156, 2, Up_57352), 
exec_layers([LAve9434,LFla11721,LRes17156,LUp_57352],["Ave9434","Fla11721","Res17156","Up_57352"],Up_57352,"Up_57352")

Actual (Unparsed): [[[1.7742500], [1.7742500], [1.2418500], [1.2418500]]]

Expected (Unparsed): [[[1.7742499999999999],[1.7742499999999999],[1.24185],[1.24185]]]

Actual:   [[[1.7743], [1.7743], [1.2419], [1.2419]]]

Expected: [[[1.7743], [1.7743], [1.2419], [1.2419]]]