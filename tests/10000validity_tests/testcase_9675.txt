import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Min1204 = tf.keras.layers.Input(shape=([2, 1, 1]))
in1Min1204 = tf.keras.layers.Input(shape=([2, 1, 1]))

Min1204 = keras.layers.Minimum(name = 'Min1204', )([in0Min1204,in1Min1204])
Res22054 = keras.layers.Reshape((2, 1), name = 'Res22054', )(Min1204)
Zer64672 = keras.layers.ZeroPadding1D(padding=((1, 0)), name = 'Zer64672', )(Res22054)
Res73584 = keras.layers.Reshape((3, 1, 1), name = 'Res73584', )(Zer64672)
Res5715 = keras.layers.Reshape((3, 1, 1, 1), name = 'Res5715', )(Res73584)
Up_81965 = keras.layers.UpSampling3D(size=(1, 1, 1), name = 'Up_81965', )(Res5715)
Glo84940 = keras.layers.GlobalAveragePooling3D(name = 'Glo84940', )(Up_81965)
model = tf.keras.models.Model(inputs=[in0Min1204,in1Min1204], outputs=Glo84940)
in0Min1204 = tf.constant([[[[0.2366]], [[0.1984]]]])
in1Min1204 = tf.constant([[[[0.4734]], [[0.7701]]]])
print (np.array2string(model.predict([in0Min1204,in1Min1204],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Glo84940.png')

LMin1204 = minimum_layer([[[[[0.2366]], [[0.1984]]]], [[[[0.4734]], [[0.7701]]]]], Min1204), 
LRes22054 = reshape_layer(Min1204, [2, 1], Res22054), 
LZer64672 = zero_padding1D_layer(Res22054, 1, 0, Zer64672), 
LRes73584 = reshape_layer(Zer64672, [3, 1, 1], Res73584), 
LRes5715 = reshape_layer(Res73584, [3, 1, 1, 1], Res5715), 
LUp_81965 = up_sampling3D_layer(Res5715, 1, 1, 1, Up_81965), 
LGlo84940 = global_average_pooling3D_layer(Up_81965, Glo84940), 
exec_layers([LMin1204,LRes22054,LZer64672,LRes73584,LRes5715,LUp_81965,LGlo84940],["Min1204","Res22054","Zer64672","Res73584","Res5715","Up_81965","Glo84940"],Glo84940,"Glo84940")

Actual (Unparsed): [[0.1450000]]

Expected (Unparsed): [[0.145]]

Actual:   [[0.145]]

Expected: [[0.145]]