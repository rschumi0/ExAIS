import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Sub24806 = tf.keras.layers.Input(shape=([3, 3, 2]))
in1Sub24806 = tf.keras.layers.Input(shape=([3, 3, 2]))
in0Mul95945 = tf.keras.layers.Input(shape=([1, 2]))
in1Mul95945 = tf.keras.layers.Input(shape=([1, 2]))
in0Con96205 = tf.keras.layers.Input(shape=([99]))

Sub24806 = keras.layers.Subtract(name = 'Sub24806', )([in0Sub24806,in1Sub24806])
Res30650 = keras.layers.Reshape((3, 3, 2, 1), name = 'Res30650', )(Sub24806)
Zer34819 = keras.layers.ZeroPadding3D(padding=((1, 1), (1, 1), (1, 1)), name = 'Zer34819', )(Res30650)
Lea60118 = keras.layers.LeakyReLU(alpha=1.0741825759271402, name = 'Lea60118', )(Zer34819)
Res67589 = keras.layers.Reshape((5, 5, 4), name = 'Res67589', )(Lea60118)
Res65103 = keras.layers.Reshape((5, 20), name = 'Res65103', )(Res67589)
Fla64829 = keras.layers.Flatten(name = 'Fla64829', )(Res65103)
Mul95945 = keras.layers.Multiply(name = 'Mul95945', )([in0Mul95945,in1Mul95945])
Res97078 = keras.layers.Reshape((1, 2, 1), name = 'Res97078', )(Mul95945)
Res25454 = keras.layers.Reshape((1, 2, 1, 1), name = 'Res25454', )(Res97078)
Glo28069 = keras.layers.GlobalMaxPool3D(name = 'Glo28069', )(Res25454)
Con96205 = keras.layers.Concatenate(axis=1, name = 'Con96205', )([Glo28069,in0Con96205])
Sub72335 = keras.layers.Subtract(name = 'Sub72335', )([Fla64829,Con96205])
model = tf.keras.models.Model(inputs=[in0Sub24806,in1Sub24806,in0Mul95945,in1Mul95945,in0Con96205], outputs=Sub72335)
in0Sub24806 = tf.constant([[[[0.5879, 0.9138], [0.3651, 0.4692], [0.8435, 0.7735]], [[0.5887, 0.7875], [0.5009, 0.4444], [0.0697, 0.6463]], [[0.0923, 0.0991], [0.9708, 0.6937], [0.3774, 0.8697]]]])
in1Sub24806 = tf.constant([[[[0.8778, 0.5819], [0.7108, 0.87], [0.4479, 0.9286]], [[0.5396, 0.1282], [0.5544, 0.8745], [0.2345, 0.0688]], [[0.7471, 0.3659], [0.8478, 0.3889], [0.1833, 0.578]]]])
in0Mul95945 = tf.constant([[[0.9341, 0.7913]]])
in1Mul95945 = tf.constant([[[0.1861, 0.087]]])
in0Con96205 = tf.constant([[0.7437, 0.4944, 0.8305, 0.9049, 0.5557, 0.8726, 0.5691, 0.2717, 0.7339, 0.2524, 0.7951, 0.9845, 0.0681, 0.5326, 0.1674, 0.9449, 0.3725, 0.4545, 0.1034, 0.7719, 0.8748, 0.0243, 0.8573, 0.991, 0.0474, 0.9332, 0.9149, 0.8124, 0.0312, 0.8465, 0.5049, 0.7551, 0.3577, 0.279, 0.2222, 0.4881, 0.7625, 0.401, 0.9856, 0.6503, 0.5025, 0.523, 0.8137, 0.0829, 0.7347, 0.2, 0.1888, 0.8634, 0.201, 0.8617, 0.1035, 0.7642, 0.6699, 0.6307, 0.2359, 0.277, 0.3323, 0.5177, 0.0815, 0.1406, 0.6222, 0.5007, 0.2889, 0.3905, 0.7386, 0.0872, 0.888, 0.3061, 0.4812, 0.8358, 0.5802, 0.2773, 0.8828, 0.9697, 0.7679, 0.5304, 0.5181, 0.6541, 0.5405, 0.8613, 0.3007, 0.7287, 0.4054, 0.0065, 0.0425, 0.6878, 0.1555, 0.0503, 0.0409, 0.4812, 0.8969, 0.3149, 0.4857, 0.2765, 0.9294, 0.5084, 0.5324, 0.6623, 0.8627]])
print (np.array2string(model.predict([in0Sub24806,in1Sub24806,in0Mul95945,in1Mul95945,in0Con96205],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Sub72335.png')

LSub24806 = subtract_layer([[[[0.5879, 0.9138], [0.3651, 0.4692], [0.8435, 0.7735]], [[0.5887, 0.7875], [0.5009, 0.4444], [0.0697, 0.6463]], [[0.0923, 0.0991], [0.9708, 0.6937], [0.3774, 0.8697]]]], [[[[0.8778, 0.5819], [0.7108, 0.87], [0.4479, 0.9286]], [[0.5396, 0.1282], [0.5544, 0.8745], [0.2345, 0.0688]], [[0.7471, 0.3659], [0.8478, 0.3889], [0.1833, 0.578]]]], Sub24806), 
LRes30650 = reshape_layer(Sub24806, [3, 3, 2, 1], Res30650), 
LZer34819 = zero_padding3D_layer(Res30650, 1, 1, 1, 1, 1, 1, Zer34819), 
LLea60118 = leaky_relu_layer(Zer34819, 1.0741825759271402, Lea60118), 
LRes67589 = reshape_layer(Lea60118, [5, 5, 4], Res67589), 
LRes65103 = reshape_layer(Res67589, [5, 20], Res65103), 
LFla64829 = flatten_layer(Res65103, Fla64829), 
LMul95945 = multiply_layer([[[[0.9341, 0.7913]]], [[[0.1861, 0.087]]]], Mul95945), 
LRes97078 = reshape_layer(Mul95945, [1, 2, 1], Res97078), 
LRes25454 = reshape_layer(Res97078, [1, 2, 1, 1], Res25454), 
LGlo28069 = global_max_pool3D_layer(Res25454, Glo28069), 
LCon96205 = concatenate_layer([Glo28069,[[0.7437, 0.4944, 0.8305, 0.9049, 0.5557, 0.8726, 0.5691, 0.2717, 0.7339, 0.2524, 0.7951, 0.9845, 0.0681, 0.5326, 0.1674, 0.9449, 0.3725, 0.4545, 0.1034, 0.7719, 0.8748, 0.0243, 0.8573, 0.991, 0.0474, 0.9332, 0.9149, 0.8124, 0.0312, 0.8465, 0.5049, 0.7551, 0.3577, 0.279, 0.2222, 0.4881, 0.7625, 0.401, 0.9856, 0.6503, 0.5025, 0.523, 0.8137, 0.0829, 0.7347, 0.2, 0.1888, 0.8634, 0.201, 0.8617, 0.1035, 0.7642, 0.6699, 0.6307, 0.2359, 0.277, 0.3323, 0.5177, 0.0815, 0.1406, 0.6222, 0.5007, 0.2889, 0.3905, 0.7386, 0.0872, 0.888, 0.3061, 0.4812, 0.8358, 0.5802, 0.2773, 0.8828, 0.9697, 0.7679, 0.5304, 0.5181, 0.6541, 0.5405, 0.8613, 0.3007, 0.7287, 0.4054, 0.0065, 0.0425, 0.6878, 0.1555, 0.0503, 0.0409, 0.4812, 0.8969, 0.3149, 0.4857, 0.2765, 0.9294, 0.5084, 0.5324, 0.6623, 0.8627]]], 1, Con96205), 
LSub72335 = subtract_layer(Fla64829,Con96205, Sub72335), 
exec_layers([LSub24806,LRes30650,LZer34819,LLea60118,LRes67589,LRes65103,LFla64829,LMul95945,LRes97078,LRes25454,LGlo28069,LCon96205,LSub72335],["Sub24806","Res30650","Zer34819","Lea60118","Res67589","Res65103","Fla64829","Mul95945","Res97078","Res25454","Glo28069","Con96205","Sub72335"],Sub72335,"Sub72335")

Actual (Unparsed): [[-0.1738360, -0.7437000, -0.4944000, -0.8305000, -0.9049000, -0.5557000, -0.8726000, -0.5691000, -0.2717000, -0.7339000, -0.2524000, -0.7951000, -0.9845000, -0.0681000, -0.5326000, -0.1674000, -0.9449000, -0.3725000, -0.4545000, -0.1034000, -0.7719000, -0.8748000, -0.0243000, -0.8573000, -0.9910000, -0.3588056, -0.6013000, -0.9149000, -0.8124000, -0.4025449, -1.2770324, -0.5049000, -0.7551000, 0.0379000, -0.4456057, -0.2222000, -0.4881000, -0.7625000, -0.4010000, -0.9856000, -0.6503000, -0.5025000, -0.5230000, -0.8137000, -0.0829000, -0.6856000, 0.4593000, -0.1888000, -0.8634000, -0.2584688, -1.3237059, -0.1035000, -0.7642000, -0.8469253, -0.0532000, -0.2359000, -0.2770000, -0.3323000, -0.5177000, -0.0815000, -0.1406000, -0.6222000, -0.5007000, -0.2889000, -0.3905000, -1.4419748, -0.3737919, -0.8880000, -0.3061000, -0.3582000, -0.5310000, -0.5802000, -0.2773000, -0.6887000, -0.6780000, -0.7679000, -0.5304000, -0.5181000, -0.6541000, -0.5405000, -0.8613000, -0.3007000, -0.7287000, -0.4054000, -0.0065000, -0.0425000, -0.6878000, -0.1555000, -0.0503000, -0.0409000, -0.4812000, -0.8969000, -0.3149000, -0.4857000, -0.2765000, -0.9294000, -0.5084000, -0.5324000, -0.6623000, -0.8627000]]

Expected (Unparsed): [[-0.17383600999999999,-0.7437,-0.4944,-0.8305,-0.9049,-0.5557,-0.8726,-0.5691,-0.2717,-0.7339,-0.2524,-0.7951,-0.9845,-0.0681,-0.5326,-0.1674,-0.9449,-0.3725,-0.4545,-0.1034,-0.7719,-0.8748,-0.0243,-0.8573,-0.991,-0.35880552876127797,-0.6013000000000001,-0.9149,-0.8124,-0.4025449164980124,-1.2770323764315978,-0.5049,-0.7551,0.03789999999999999,-0.4456057175262995,-0.2222,-0.4881,-0.7625,-0.401,-0.9856,-0.6503,-0.5025,-0.523,-0.8137,-0.0829,-0.6856,0.4593,-0.1888,-0.8634,-0.258468767812102,-1.3237059259062631,-0.1035,-0.7642,-0.8469252885127927,-0.053200000000000025,-0.2359,-0.277,-0.3323,-0.5177,-0.0815,-0.1406,-0.6222,-0.5007,-0.2889,-0.3905,-1.4419747507170915,-0.37379191125736105,-0.888,-0.3061,-0.3582,-0.531,-0.5802,-0.2773,-0.6887,-0.6779999999999999,-0.7679,-0.5304,-0.5181,-0.6541,-0.5405,-0.8613,-0.3007,-0.7287,-0.4054,-0.0065,-0.0425,-0.6878,-0.1555,-0.0503,-0.0409,-0.4812,-0.8969,-0.3149,-0.4857,-0.2765,-0.9294,-0.5084,-0.5324,-0.6623,-0.8627]]

Actual:   [[-0.1738, -0.7437, -0.4944, -0.8305, -0.9049, -0.5557, -0.8726, -0.5691, -0.2717, -0.7339, -0.2524, -0.7951, -0.9845, -0.0681, -0.5326, -0.1674, -0.9449, -0.3725, -0.4545, -0.1034, -0.7719, -0.8748, -0.0243, -0.8573, -0.991, -0.3588, -0.6013, -0.9149, -0.8124, -0.4025, -1.277, -0.5049, -0.7551, 0.0379, -0.4456, -0.2222, -0.4881, -0.7625, -0.401, -0.9856, -0.6503, -0.5025, -0.523, -0.8137, -0.0829, -0.6856, 0.4593, -0.1888, -0.8634, -0.2584, -1.3237, -0.1035, -0.7642, -0.8469, -0.0532, -0.2359, -0.277, -0.3323, -0.5177, -0.0815, -0.1406, -0.6222, -0.5007, -0.2889, -0.3905, -1.4419, -0.3737, -0.888, -0.3061, -0.3582, -0.531, -0.5802, -0.2773, -0.6887, -0.678, -0.7679, -0.5304, -0.5181, -0.6541, -0.5405, -0.8613, -0.3007, -0.7287, -0.4054, -0.0065, -0.0425, -0.6878, -0.1555, -0.0503, -0.0409, -0.4812, -0.8969, -0.3149, -0.4857, -0.2765, -0.9294, -0.5084, -0.5324, -0.6623, -0.8627]]

Expected: [[-0.1738, -0.7437, -0.4944, -0.8305, -0.9049, -0.5557, -0.8726, -0.5691, -0.2717, -0.7339, -0.2524, -0.7951, -0.9845, -0.0681, -0.5326, -0.1674, -0.9449, -0.3725, -0.4545, -0.1034, -0.7719, -0.8748, -0.0243, -0.8573, -0.991, -0.3588, -0.6013, -0.9149, -0.8124, -0.4025, -1.277, -0.5049, -0.7551, 0.0379, -0.4456, -0.2222, -0.4881, -0.7625, -0.401, -0.9856, -0.6503, -0.5025, -0.523, -0.8137, -0.0829, -0.6856, 0.4593, -0.1888, -0.8634, -0.2584, -1.3237, -0.1035, -0.7642, -0.8469, -0.0532, -0.2359, -0.277, -0.3323, -0.5177, -0.0815, -0.1406, -0.6222, -0.5007, -0.2889, -0.3905, -1.4419, -0.3737, -0.888, -0.3061, -0.3582, -0.531, -0.5802, -0.2773, -0.6887, -0.6779, -0.7679, -0.5304, -0.5181, -0.6541, -0.5405, -0.8613, -0.3007, -0.7287, -0.4054, -0.0065, -0.0425, -0.6878, -0.1555, -0.0503, -0.0409, -0.4812, -0.8969, -0.3149, -0.4857, -0.2765, -0.9294, -0.5084, -0.5324, -0.6623, -0.8627]]