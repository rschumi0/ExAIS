import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Max5508 = tf.keras.layers.Input(shape=([2, 2]))
in1Max5508 = tf.keras.layers.Input(shape=([2, 2]))
in0Cro90409 = tf.keras.layers.Input(shape=([2, 1, 4]))

Max5508 = keras.layers.Maximum(name = 'Max5508', )([in0Max5508,in1Max5508])
Res74905 = keras.layers.Reshape((2, 2, 1), name = 'Res74905', )(Max5508)
Con37475 = keras.layers.Conv2D(3, (2, 2),strides=(1, 1), padding='valid', dilation_rate=(1, 1), name = 'Con37475', )(Res74905)
Res95429 = keras.layers.Reshape((1, 1, 3, 1), name = 'Res95429', )(Con37475)
Zer3768 = keras.layers.ZeroPadding3D(padding=((2, 0), (2, 0), (3, 0)), name = 'Zer3768', )(Res95429)
Cro90409 = keras.layers.Cropping2D(cropping=((0, 1), (0, 0)), name = 'Cro90409', )(in0Cro90409)
Res44247 = keras.layers.Reshape((1, 1, 4, 1), name = 'Res44247', )(Cro90409)
Zer83126 = keras.layers.ZeroPadding3D(padding=((1, 1), (1, 1), (1, 1)), name = 'Zer83126', )(Res44247)
Mul56200 = keras.layers.Multiply(name = 'Mul56200', )([Zer3768,Zer83126])
model = tf.keras.models.Model(inputs=[in0Max5508,in1Max5508,in0Cro90409], outputs=Mul56200)
w = model.get_layer('Con37475').get_weights() 
w[0] = np.array([[[[0.587, 0.5082, 0.4836]], [[0.9737, 0.7485, 0.2658]]], [[[0.3247, 0.7146, 0.0878]], [[0.4723, 0.2534, 0.4276]]]])
w[1] = np.array([0, 0, 0])
model.get_layer('Con37475').set_weights(w) 
in0Max5508 = tf.constant([[[0.429, 0.6509], [0.7756, 0.1209]]])
in1Max5508 = tf.constant([[[0.9025, 0.8454], [0.9767, 0.0633]]])
in0Cro90409 = tf.constant([[[[1.5252, 1.4603, 1.5166, 1.5212]], [[1.212, 1.8028, 1.2367, 1.5368]]]])
print (np.array2string(model.predict([in0Max5508,in1Max5508,in0Cro90409],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Mul56200.png')

LMax5508 = maximum_layer([[[[0.429, 0.6509], [0.7756, 0.1209]]], [[[0.9025, 0.8454], [0.9767, 0.0633]]]], Max5508), 
LRes74905 = reshape_layer(Max5508, [2, 2, 1], Res74905), 
LCon37475 = conv2D_layer(Res74905, 2, 2,[[[[0.587, 0.5082, 0.4836]], [[0.9737, 0.7485, 0.2658]]], [[[0.3247, 0.7146, 0.0878]], [[0.4723, 0.2534, 0.4276]]]],[0, 0, 0], 1, 1, false, 1, 1, Con37475), 
LRes95429 = reshape_layer(Con37475, [1, 1, 3, 1], Res95429), 
LZer3768 = zero_padding3D_layer(Res95429, 2, 0, 2, 0, 3, 0, Zer3768), 
LCro90409 = cropping2D_layer([[[[1.5252, 1.4603, 1.5166, 1.5212]], [[1.212, 1.8028, 1.2367, 1.5368]]]], 0, 1, 0, 0, Cro90409), 
LRes44247 = reshape_layer(Cro90409, [1, 1, 4, 1], Res44247), 
LZer83126 = zero_padding3D_layer(Res44247, 1, 1, 1, 1, 1, 1, Zer83126), 
LMul56200 = multiply_layer([Zer3768,Zer83126], Mul56200), 
exec_layers([LMax5508,LRes74905,LCon37475,LRes95429,LZer3768,LCro90409,LRes44247,LZer83126,LMul56200],["Max5508","Res74905","Con37475","Res95429","Zer3768","Cro90409","Res44247","Zer83126","Mul56200"],Mul56200,"Mul56200")

Actual (Unparsed): [[[[[0.0000000], [0.0000000], [0.0000000], [0.0000000], [0.0000000], [0.0000000]], [[0.0000000], [0.0000000], [0.0000000], [0.0000000], [0.0000000], [0.0000000]], [[0.0000000], [0.0000000], [0.0000000], [0.0000000], [0.0000000], [0.0000000]]], [[[0.0000000], [0.0000000], [0.0000000], [0.0000000], [0.0000000], [0.0000000]], [[0.0000000], [0.0000000], [0.0000000], [0.0000000], [0.0000000], [0.0000000]], [[0.0000000], [0.0000000], [0.0000000], [0.0000000], [0.0000000], [0.0000000]]], [[[0.0000000], [0.0000000], [0.0000000], [0.0000000], [0.0000000], [0.0000000]], [[0.0000000], [0.0000000], [0.0000000], [0.0000000], [0.0000000], [0.0000000]], [[0.0000000], [0.0000000], [0.0000000], [0.0000000], [0.0000000], [0.0000000]]]]]

Expected (Unparsed): [[[[[0],[0],[0],[0],[0],[0]],[[0],[0],[0],[0],[0],[0]],[[0],[0],[0],[0],[0],[0]]],[[[0],[0],[0],[0],[0],[0]],[[0],[0.0],[0.0],[0.0],[0.0],[0]],[[0],[0],[0],[0],[0],[0]]],[[[0],[0],[0],[0],[0],[0]],[[0],[0],[0],[0],[0],[0]],[[0],[0],[0],[0.0],[0.0],[0.0]]]]]

Actual:   [[[[[0], [0], [0], [0], [0], [0]], [[0], [0], [0], [0], [0], [0]], [[0], [0], [0], [0], [0], [0]]], [[[0], [0], [0], [0], [0], [0]], [[0], [0], [0], [0], [0], [0]], [[0], [0], [0], [0], [0], [0]]], [[[0], [0], [0], [0], [0], [0]], [[0], [0], [0], [0], [0], [0]], [[0], [0], [0], [0], [0], [0]]]]]

Expected: [[[[[0], [0], [0], [0], [0], [0]], [[0], [0], [0], [0], [0], [0]], [[0], [0], [0], [0], [0], [0]]], [[[0], [0], [0], [0], [0], [0]], [[0], [0], [0], [0], [0], [0]], [[0], [0], [0], [0], [0], [0]]], [[[0], [0], [0], [0], [0], [0]], [[0], [0], [0], [0], [0], [0]], [[0], [0], [0], [0], [0], [0]]]]]