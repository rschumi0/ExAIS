import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Mul83938 = tf.keras.layers.Input(shape=([1, 2]))
in1Mul83938 = tf.keras.layers.Input(shape=([1, 2]))
in0Con68629 = tf.keras.layers.Input(shape=([2, 1]))
in0Mul26267 = tf.keras.layers.Input(shape=([2, 2, 2]))
in1Mul26267 = tf.keras.layers.Input(shape=([2, 2, 2]))

Mul83938 = keras.layers.Multiply(name = 'Mul83938', )([in0Mul83938,in1Mul83938])
LST88748 = keras.layers.LSTM(2,recurrent_activation='sigmoid', name = 'LST88748', )(Mul83938)
Res89292 = keras.layers.Reshape((2, 1), name = 'Res89292', )(LST88748)
Con68629 = keras.layers.Concatenate(axis=2, name = 'Con68629', )([Res89292,in0Con68629])
Mul26267 = keras.layers.Multiply(name = 'Mul26267', )([in0Mul26267,in1Mul26267])
Cro98687 = keras.layers.Cropping2D(cropping=((1, 0), (1, 0)), name = 'Cro98687', )(Mul26267)
Lea95434 = keras.layers.LeakyReLU(alpha=8.758093355696005, name = 'Lea95434', )(Cro98687)
Res56242 = keras.layers.Reshape((1, 2), name = 'Res56242', )(Lea95434)
Per88005 = keras.layers.Permute((1,2), name = 'Per88005',)(Res56242)
Zer19565 = keras.layers.ZeroPadding1D(padding=((1, 0)), name = 'Zer19565', )(Per88005)
Sub81977 = keras.layers.Subtract(name = 'Sub81977', )([Con68629,Zer19565])
model = tf.keras.models.Model(inputs=[in0Mul83938,in1Mul83938,in0Con68629,in0Mul26267,in1Mul26267], outputs=Sub81977)
w = model.get_layer('LST88748').get_weights() 
w[0] = np.array([[1, 8, 2, 8, 9, 5, 5, 5], [7, 6, 5, 6, 10, 6, 4, 2]])
w[1] = np.array([[10, 2, 9, 3, 9, 1, 3, 3], [9, 9, 1, 8, 5, 2, 10, 10]])
w[2] = np.array([7, 4, 3, 10, 4, 8, 5, 5])
model.get_layer('LST88748').set_weights(w) 
in0Mul83938 = tf.constant([[[0.3508, 0.5935]]])
in1Mul83938 = tf.constant([[[0.8416, 0.3744]]])
in0Con68629 = tf.constant([[[0.9458], [0.0891]]])
in0Mul26267 = tf.constant([[[[0.7844, 0.4419], [0.1542, 0.3323]], [[0.5939, 0.5827], [0.7152, 0.4726]]]])
in1Mul26267 = tf.constant([[[[0.8259, 0.1228], [0.0629, 0.4683]], [[0.9423, 0.096], [0.7653, 0.2808]]]])
print (np.array2string(model.predict([in0Mul83938,in1Mul83938,in0Con68629,in0Mul26267,in1Mul26267],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Sub81977.png')

LMul83938 = multiply_layer([[[[0.3508, 0.5935]]], [[[0.8416, 0.3744]]]], Mul83938), 
LLST88748 = lstm_layer(Mul83938,[[1, 8, 2, 8, 9, 5, 5, 5], [7, 6, 5, 6, 10, 6, 4, 2]],[[10, 2, 9, 3, 9, 1, 3, 3], [9, 9, 1, 8, 5, 2, 10, 10]],[7, 4, 3, 10, 4, 8, 5, 5], LST88748), 
LRes89292 = reshape_layer(LST88748, [2, 1], Res89292), 
LCon68629 = concatenate_layer([Res89292,[[[0.9458], [0.0891]]]], 2, Con68629), 
LMul26267 = multiply_layer([[[[[0.7844, 0.4419], [0.1542, 0.3323]], [[0.5939, 0.5827], [0.7152, 0.4726]]]], [[[[0.8259, 0.1228], [0.0629, 0.4683]], [[0.9423, 0.096], [0.7653, 0.2808]]]]], Mul26267), 
LCro98687 = cropping2D_layer(Mul26267, 1, 0, 1, 0, Cro98687), 
LLea95434 = leaky_relu_layer(Cro98687, 8.758093355696005, Lea95434), 
LRes56242 = reshape_layer(Lea95434, [1, 2], Res56242), 
LPer88005 = permute_layer(Res56242, 1,2, Per88005), 
LZer19565 = zero_padding1D_layer(Per88005, 1, 0, Zer19565), 
LSub81977 = subtract_layer(Con68629,Zer19565, Sub81977), 
exec_layers([LMul83938,LLST88748,LRes89292,LCon68629,LMul26267,LCro98687,LLea95434,LRes56242,LPer88005,LZer19565,LSub81977],["Mul83938","LST88748","Res89292","Con68629","Mul26267","Cro98687","Lea95434","Res56242","Per88005","Zer19565","Sub81977"],Sub81977,"Sub81977")

Actual (Unparsed): [[[0.7610522, 0.9458000], [0.2133096, -0.0436061]]]

Expected (Unparsed): [[[0.761052196658216,0.9458],[0.21330954745273845,-0.043606080000000005]]]

Actual:   [[[0.7611, 0.9458], [0.2134, -0.0436]]]

Expected: [[[0.7611, 0.9458], [0.2134, -0.0436]]]