import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Min87172 = tf.keras.layers.Input(shape=([1, 1, 2]))
in1Min87172 = tf.keras.layers.Input(shape=([1, 1, 2]))

Min87172 = keras.layers.Minimum(name = 'Min87172', )([in0Min87172,in1Min87172])
Res19297 = keras.layers.Reshape((1, 2), name = 'Res19297', )(Min87172)
Sim1060 = keras.layers.SimpleRNN(3,name = 'Sim1060', )(Res19297)
model = tf.keras.models.Model(inputs=[in0Min87172,in1Min87172], outputs=Sim1060)
w = model.get_layer('Sim1060').get_weights() 
w[0] = np.array([[2, 7, 6], [3, 3, 5]])
w[1] = np.array([[8, 9, 4], [2, 5, 5], [8, 7, 5]])
w[2] = np.array([6, 5, 10])
model.get_layer('Sim1060').set_weights(w) 
in0Min87172 = tf.constant([[[[0.9808, 0.6456]]]])
in1Min87172 = tf.constant([[[[0.4961, 0.6315]]]])
print (np.array2string(model.predict([in0Min87172,in1Min87172],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Sim1060.png')

LMin87172 = minimum_layer([[[[[0.9808, 0.6456]]]], [[[[0.4961, 0.6315]]]]], Min87172), 
LRes19297 = reshape_layer(Min87172, [1, 2], Res19297), 
LSim1060 = simple_rnn_layer(Res19297,[[2, 7, 6], [3, 3, 5]],[[8, 9, 4], [2, 5, 5], [8, 7, 5]],[6, 5, 10], Sim1060), 
exec_layers([LMin87172,LRes19297,LSim1060],["Min87172","Res19297","Sim1060"],Sim1060,"Sim1060")

Actual (Unparsed): [[1.0000000, 1.0000000, 1.0000000]]

Expected (Unparsed): [[0.9999999617932196,0.9999999980221448,0.9999999999999807]]

Actual:   [[1, 1, 1]]

Expected: [[1, 1, 1]]