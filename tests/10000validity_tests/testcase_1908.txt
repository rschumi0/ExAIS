import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Lea4967 = tf.keras.layers.Input(shape=([2, 1, 1, 2]))

Lea4967 = keras.layers.LeakyReLU(alpha=4.854358644920859, name = 'Lea4967', input_shape=(2, 1, 1, 2))(in0Lea4967)
Res79899 = keras.layers.Reshape((2, 1, 2), name = 'Res79899', )(Lea4967)
Glo64497 = keras.layers.GlobalMaxPool2D(name = 'Glo64497', )(Res79899)
Den32271 = keras.layers.Dense(4,name = 'Den32271', )(Glo64497)
Thr67335 = keras.layers.ThresholdedReLU(theta=1.3846673373156317, name = 'Thr67335', )(Den32271)
model = tf.keras.models.Model(inputs=[in0Lea4967], outputs=Thr67335)
w = model.get_layer('Den32271').get_weights() 
w[0] = np.array([[0.1705, 0.9665, 0.8432, 0.7679], [0.8506, 0.3257, 0.1617, 0.6433]])
w[1] = np.array([0.8367, 0.7288, 0.8547, 0.0072])
model.get_layer('Den32271').set_weights(w) 
in0Lea4967 = tf.constant([[[[[0.5371, 0.4255]]], [[[0.1121, 0.2804]]]]])
print (np.array2string(model.predict([in0Lea4967],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Thr67335.png')

LLea4967 = leaky_relu_layer([[[[[0.5371, 0.4255]]], [[[0.1121, 0.2804]]]]], 4.854358644920859, Lea4967), 
LRes79899 = reshape_layer(Lea4967, [2, 1, 2], Res79899), 
LGlo64497 = global_max_pool2D_layer(Res79899, Glo64497), 
LDen32271 = dense_layer(Glo64497, [[0.1705, 0.9665, 0.8432, 0.7679], [0.8506, 0.3257, 0.1617, 0.6433]],[0.8367, 0.7288, 0.8547, 0.0072], Den32271), 
LThr67335 = thresholded_relu_layer(Den32271, 1.3846673373156317, Thr67335), 
exec_layers([LLea4967,LRes79899,LGlo64497,LDen32271,LThr67335],["Lea4967","Res79899","Glo64497","Den32271","Thr67335"],Thr67335,"Thr67335")

Actual (Unparsed): [[0.0000000, 1.3864925, 0.0000000, 0.0000000]]

Expected (Unparsed): [[0,1.3864925000000001,0,0]]

Actual:   [[0, 1.3865, 0, 0]]

Expected: [[0, 1.3865, 0, 0]]