import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Dot6932 = tf.keras.layers.Input(shape=([3]))
in1Dot6932 = tf.keras.layers.Input(shape=([3]))
in0Con50482 = tf.keras.layers.Input(shape=([1]))
in0Bat19335 = tf.keras.layers.Input(shape=([3]))

Dot6932 = keras.layers.Dot(axes=(1, 1), name = 'Dot6932', )([in0Dot6932,in1Dot6932])
Con50482 = keras.layers.Concatenate(axis=1, name = 'Con50482', )([Dot6932,in0Con50482])
Bat19335 = keras.layers.BatchNormalization(axis=1, epsilon=0.13124452781904364,  name = 'Bat19335', )(in0Bat19335)
Res46739 = keras.layers.Reshape((3, 1), name = 'Res46739', )(Bat19335)
Res1738 = keras.layers.Reshape((3, 1, 1), name = 'Res1738', )(Res46739)
Dep72089 = keras.layers.DepthwiseConv2D((1, 1),strides=(2, 2), padding='valid', name = 'Dep72089', )(Res1738)
Res11356 = keras.layers.Reshape((2, 1), name = 'Res11356', )(Dep72089)
LST5359 = keras.layers.LSTM(2,recurrent_activation='sigmoid', name = 'LST5359', )(Res11356)
Sub81553 = keras.layers.Subtract(name = 'Sub81553', )([Con50482,LST5359])
Lea83732 = keras.layers.LeakyReLU(alpha=8.531777262188687, name = 'Lea83732', )(Sub81553)
model = tf.keras.models.Model(inputs=[in0Dot6932,in1Dot6932,in0Con50482,in0Bat19335], outputs=Lea83732)
w = model.get_layer('Bat19335').get_weights() 
w[0] = np.array([0.2266, 0.6196, 0.3241])
w[1] = np.array([0.5101, 0.7077, 0.0838])
w[2] = np.array([0.7301, 0.2492, 0.5305])
w[3] = np.array([0.2031, 0.5985, 0.8456])
model.get_layer('Bat19335').set_weights(w) 
w = model.get_layer('Dep72089').get_weights() 
w[0] = np.array([[[[0.4926]]]])
w[1] = np.array([0])
model.get_layer('Dep72089').set_weights(w) 
w = model.get_layer('LST5359').get_weights() 
w[0] = np.array([[5, 3, 1, 5, 6, 4, 2, 9]])
w[1] = np.array([[8, 9, 10, 4, 5, 7, 1, 8], [5, 1, 4, 3, 6, 3, 4, 2]])
w[2] = np.array([3, 4, 1, 4, 8, 9, 5, 2])
model.get_layer('LST5359').set_weights(w) 
in0Dot6932 = tf.constant([[0.2854, 0.0091, 0.3315]])
in1Dot6932 = tf.constant([[0.2738, 0.2752, 0.2647]])
in0Con50482 = tf.constant([[0.7869]])
in0Bat19335 = tf.constant([[1.6319, 1.3404, 1.9519]])
print (np.array2string(model.predict([in0Dot6932,in1Dot6932,in0Con50482,in0Bat19335],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Lea83732.png')

LDot6932 = dot_layer([[0.2854, 0.0091, 0.3315]], [[0.2738, 0.2752, 0.2647]], 1, 1, Dot6932), 
LCon50482 = concatenate_layer([Dot6932,[[0.7869]]], 1, Con50482), 
LBat19335 = batch_normalization_layer([[1.6319, 1.3404, 1.9519]], 1, 0.13124452781904364, [0.2266, 0.6196, 0.3241], [0.5101, 0.7077, 0.0838], [0.7301, 0.2492, 0.5305], [0.2031, 0.5985, 0.8456], Bat19335), 
LRes46739 = reshape_layer(Bat19335, [3, 1], Res46739), 
LRes1738 = reshape_layer(Res46739, [3, 1, 1], Res1738), 
LDep72089 = depthwise_conv2D_layer(Res1738, 1, 1,[[[[0.4926]]]],[0], 2, 2, false, Dep72089), 
LRes11356 = reshape_layer(Dep72089, [2, 1], Res11356), 
LLST5359 = lstm_layer(Res11356,[[5, 3, 1, 5, 6, 4, 2, 9]],[[8, 9, 10, 4, 5, 7, 1, 8], [5, 1, 4, 3, 6, 3, 4, 2]],[3, 4, 1, 4, 8, 9, 5, 2], LST5359), 
LSub81553 = subtract_layer(Con50482,LST5359, Sub81553), 
LLea83732 = leaky_relu_layer(Sub81553, 8.531777262188687, Lea83732), 
exec_layers([LDot6932,LCon50482,LBat19335,LRes46739,LRes1738,LDep72089,LRes11356,LLST5359,LSub81553,LLea83732],["Dot6932","Con50482","Bat19335","Res46739","Res1738","Dep72089","Res11356","LST5359","Sub81553","Lea83732"],Lea83732,"Lea83732")

Actual (Unparsed): [[-6.7838483, -1.5080652]]

Expected (Unparsed): [[-6.783848171593012,-1.5080650455075026]]

Actual:   [[-6.7838, -1.508]]

Expected: [[-6.7838, -1.508]]