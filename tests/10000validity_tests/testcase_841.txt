import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Add43627 = tf.keras.layers.Input(shape=([2, 2, 2, 1]))
in1Add43627 = tf.keras.layers.Input(shape=([2, 2, 2, 1]))
in0Min70805 = tf.keras.layers.Input(shape=([2, 2, 1, 1]))
in1Min70805 = tf.keras.layers.Input(shape=([2, 2, 1, 1]))
in0Con18628 = tf.keras.layers.Input(shape=([4, 2, 5, 1]))
in0Sub97694 = tf.keras.layers.Input(shape=([3, 2, 3, 2]))
in1Sub97694 = tf.keras.layers.Input(shape=([3, 2, 3, 2]))
in0Con85132 = tf.keras.layers.Input(shape=([4, 2, 5, 2]))

Add43627 = keras.layers.Add(name = 'Add43627', )([in0Add43627,in1Add43627])
Den74017 = keras.layers.Dense(4,name = 'Den74017', )(Add43627)
Zer32767 = keras.layers.ZeroPadding3D(padding=((2, 0), (0, 0), (3, 0)), name = 'Zer32767', )(Den74017)
Min70805 = keras.layers.Minimum(name = 'Min70805', )([in0Min70805,in1Min70805])
Res29952 = keras.layers.Reshape((2, 2, 1), name = 'Res29952', )(Min70805)
Res82838 = keras.layers.Reshape((2, 2), name = 'Res82838', )(Res29952)
Zer16936 = keras.layers.ZeroPadding1D(padding=((1, 1)), name = 'Zer16936', )(Res82838)
Res44966 = keras.layers.Reshape((4, 2, 1), name = 'Res44966', )(Zer16936)
Res87241 = keras.layers.Reshape((4, 2, 1, 1), name = 'Res87241', )(Res44966)
Zer93152 = keras.layers.ZeroPadding3D(padding=((0, 0), (0, 0), (4, 0)), name = 'Zer93152', )(Res87241)
Con18628 = keras.layers.Concatenate(axis=4, name = 'Con18628', )([Zer93152,in0Con18628])
Sub97694 = keras.layers.Subtract(name = 'Sub97694', )([in0Sub97694,in1Sub97694])
Zer90440 = keras.layers.ZeroPadding3D(padding=((1, 0), (0, 0), (2, 0)), name = 'Zer90440', )(Sub97694)
Min35716 = keras.layers.Minimum(name = 'Min35716', )([Con18628,Zer90440])
Con85132 = keras.layers.Concatenate(axis=4, name = 'Con85132', )([Min35716,in0Con85132])
Sub23433 = keras.layers.Subtract(name = 'Sub23433', )([Zer32767,Con85132])
Res99373 = keras.layers.Reshape((4, 2, 20), name = 'Res99373', )(Sub23433)
Max18921 = keras.layers.MaxPool2D(pool_size=(4, 1), name = 'Max18921', )(Res99373)
model = tf.keras.models.Model(inputs=[in0Add43627,in1Add43627,in0Min70805,in1Min70805,in0Con18628,in0Sub97694,in1Sub97694,in0Con85132], outputs=Max18921)
w = model.get_layer('Den74017').get_weights() 
w[0] = np.array([[0.1093, 0.9256, 0.7449, 0.0292]])
w[1] = np.array([0.4967, 0.7774, 0.9407, 0.9113])
model.get_layer('Den74017').set_weights(w) 
in0Add43627 = tf.constant([[[[[0.4488], [0.5068]], [[0.705], [0.762]]], [[[0.0742], [0.7513]], [[1], [0.2156]]]]])
in1Add43627 = tf.constant([[[[[0.2826], [0.1895]], [[0.1635], [0.9062]]], [[[0.658], [0.5539]], [[0.3926], [0.6299]]]]])
in0Min70805 = tf.constant([[[[[0.987]], [[0.7399]]], [[[0.728]], [[0.4021]]]]])
in1Min70805 = tf.constant([[[[[0.0841]], [[0.7929]]], [[[0.2712]], [[0.1881]]]]])
in0Con18628 = tf.constant([[[[[0.205], [0.9727], [0.3076], [0.5071], [0.0327]], [[0.4393], [0.672], [0.6996], [0.0819], [0.1336]]], [[[0.8463], [0.1096], [0.0569], [0.6913], [0.2704]], [[0.4297], [0.354], [0.9882], [0.65], [0.3504]]], [[[0.1805], [0.1003], [0.4429], [0.1096], [0.8815]], [[0.1746], [0.9914], [0.5172], [0.5287], [0.2521]]], [[[0.76], [0.6554], [0.552], [0.3836], [0.3234]], [[0.3385], [0.0861], [0.0894], [0.5908], [0.2002]]]]])
in0Sub97694 = tf.constant([[[[[0.1739, 0.8099], [0.1185, 0.8219], [0.2781, 0.6801]], [[0.421, 0.0302], [0.7019, 0.8661], [0.7033, 0.9637]]], [[[0.7675, 0.3629], [0.2029, 0.2719], [0.3973, 0.5635]], [[0.5275, 0.5536], [0.0173, 0.0031], [0.3726, 0.9655]]], [[[0.5181, 0.8633], [0.3869, 0.8761], [0.6908, 0.6714]], [[0.531, 0.717], [0.6359, 0.8495], [0.4337, 0.6012]]]]])
in1Sub97694 = tf.constant([[[[[0.1343, 0.6389], [0.3196, 0.8533], [0.8624, 0.4531]], [[0.0531, 0.3284], [0.6389, 0.8983], [0.7259, 0.2846]]], [[[0.5952, 0.5405], [0.9996, 0.6162], [0.2774, 0.9959]], [[0.1094, 0.4571], [0.2092, 0.0729], [0.0299, 0.5184]]], [[[0.369, 0.5074], [0.8139, 0.0391], [0.3702, 0.2934]], [[0.5217, 0.8944], [0.8723, 0.7389], [0.4779, 0.2361]]]]])
in0Con85132 = tf.constant([[[[[0.3065, 0.079], [0.6711, 0.6832], [0.2094, 0.5027], [0.7755, 0.1253], [0.5421, 0.3291]], [[0.095, 0.5965], [0.1546, 0.4374], [0.8468, 0.6796], [0.3275, 0.3066], [0.4239, 0.4795]]], [[[0.0516, 0.7788], [0.9964, 0.5153], [0.1393, 0.7971], [0.9877, 0.3743], [0.0625, 0.6436]], [[0.0469, 0.4482], [0.9034, 0.8935], [0.3388, 0.593], [0.9619, 0.9028], [0.3278, 0.4785]]], [[[0.3712, 0.1487], [0.7461, 0.7288], [0.5374, 0.1549], [0.1061, 0.6942], [0.3459, 0.0523]], [[0.9407, 0.8379], [0.8495, 0.0462], [0.936, 0.2769], [0.5917, 0.1938], [0.262, 0.97]]], [[[0.8099, 0.9303], [0.6972, 0.4132], [0.5066, 0.7258], [0.5946, 0.4726], [0.7835, 0.1015]], [[0.3437, 0.1605], [0.8925, 0.9912], [0.7443, 0.7447], [0.171, 0.093], [0.6291, 0.57]]]]])
print (np.array2string(model.predict([in0Add43627,in1Add43627,in0Min70805,in1Min70805,in0Con18628,in0Sub97694,in1Sub97694,in0Con85132],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Max18921.png')

LAdd43627 = add_layer([[[[[[0.4488], [0.5068]], [[0.705], [0.762]]], [[[0.0742], [0.7513]], [[1], [0.2156]]]]], [[[[[0.2826], [0.1895]], [[0.1635], [0.9062]]], [[[0.658], [0.5539]], [[0.3926], [0.6299]]]]]], Add43627), 
LDen74017 = dense_layer(Add43627, [[0.1093, 0.9256, 0.7449, 0.0292]],[0.4967, 0.7774, 0.9407, 0.9113], Den74017), 
LZer32767 = zero_padding3D_layer(Den74017, 2, 0, 0, 0, 3, 0, Zer32767), 
LMin70805 = minimum_layer([[[[[[0.987]], [[0.7399]]], [[[0.728]], [[0.4021]]]]], [[[[[0.0841]], [[0.7929]]], [[[0.2712]], [[0.1881]]]]]], Min70805), 
LRes29952 = reshape_layer(Min70805, [2, 2, 1], Res29952), 
LRes82838 = reshape_layer(Res29952, [2, 2], Res82838), 
LZer16936 = zero_padding1D_layer(Res82838, 1, 1, Zer16936), 
LRes44966 = reshape_layer(Zer16936, [4, 2, 1], Res44966), 
LRes87241 = reshape_layer(Res44966, [4, 2, 1, 1], Res87241), 
LZer93152 = zero_padding3D_layer(Res87241, 0, 0, 0, 0, 4, 0, Zer93152), 
LCon18628 = concatenate_layer([Zer93152,[[[[[0.205], [0.9727], [0.3076], [0.5071], [0.0327]], [[0.4393], [0.672], [0.6996], [0.0819], [0.1336]]], [[[0.8463], [0.1096], [0.0569], [0.6913], [0.2704]], [[0.4297], [0.354], [0.9882], [0.65], [0.3504]]], [[[0.1805], [0.1003], [0.4429], [0.1096], [0.8815]], [[0.1746], [0.9914], [0.5172], [0.5287], [0.2521]]], [[[0.76], [0.6554], [0.552], [0.3836], [0.3234]], [[0.3385], [0.0861], [0.0894], [0.5908], [0.2002]]]]]], 4, Con18628), 
LSub97694 = subtract_layer([[[[[0.1739, 0.8099], [0.1185, 0.8219], [0.2781, 0.6801]], [[0.421, 0.0302], [0.7019, 0.8661], [0.7033, 0.9637]]], [[[0.7675, 0.3629], [0.2029, 0.2719], [0.3973, 0.5635]], [[0.5275, 0.5536], [0.0173, 0.0031], [0.3726, 0.9655]]], [[[0.5181, 0.8633], [0.3869, 0.8761], [0.6908, 0.6714]], [[0.531, 0.717], [0.6359, 0.8495], [0.4337, 0.6012]]]]], [[[[[0.1343, 0.6389], [0.3196, 0.8533], [0.8624, 0.4531]], [[0.0531, 0.3284], [0.6389, 0.8983], [0.7259, 0.2846]]], [[[0.5952, 0.5405], [0.9996, 0.6162], [0.2774, 0.9959]], [[0.1094, 0.4571], [0.2092, 0.0729], [0.0299, 0.5184]]], [[[0.369, 0.5074], [0.8139, 0.0391], [0.3702, 0.2934]], [[0.5217, 0.8944], [0.8723, 0.7389], [0.4779, 0.2361]]]]], Sub97694), 
LZer90440 = zero_padding3D_layer(Sub97694, 1, 0, 0, 0, 2, 0, Zer90440), 
LMin35716 = minimum_layer([Con18628,Zer90440], Min35716), 
LCon85132 = concatenate_layer([Min35716,[[[[[0.3065, 0.079], [0.6711, 0.6832], [0.2094, 0.5027], [0.7755, 0.1253], [0.5421, 0.3291]], [[0.095, 0.5965], [0.1546, 0.4374], [0.8468, 0.6796], [0.3275, 0.3066], [0.4239, 0.4795]]], [[[0.0516, 0.7788], [0.9964, 0.5153], [0.1393, 0.7971], [0.9877, 0.3743], [0.0625, 0.6436]], [[0.0469, 0.4482], [0.9034, 0.8935], [0.3388, 0.593], [0.9619, 0.9028], [0.3278, 0.4785]]], [[[0.3712, 0.1487], [0.7461, 0.7288], [0.5374, 0.1549], [0.1061, 0.6942], [0.3459, 0.0523]], [[0.9407, 0.8379], [0.8495, 0.0462], [0.936, 0.2769], [0.5917, 0.1938], [0.262, 0.97]]], [[[0.8099, 0.9303], [0.6972, 0.4132], [0.5066, 0.7258], [0.5946, 0.4726], [0.7835, 0.1015]], [[0.3437, 0.1605], [0.8925, 0.9912], [0.7443, 0.7447], [0.171, 0.093], [0.6291, 0.57]]]]]], 4, Con85132), 
LSub23433 = subtract_layer(Zer32767,Con85132, Sub23433), 
LRes99373 = reshape_layer(Sub23433, [4, 2, 20], Res99373), 
LMax18921 = max_pool2D_layer(Res99373, 4, 1, Max18921), 
exec_layers([LAdd43627,LDen74017,LZer32767,LMin70805,LRes29952,LRes82838,LZer16936,LRes44966,LRes87241,LZer93152,LCon18628,LSub97694,LZer90440,LMin35716,LCon85132,LSub23433,LRes99373,LMax18921],["Add43627","Den74017","Zer32767","Min70805","Res29952","Res82838","Zer16936","Res44966","Res87241","Zer93152","Con18628","Sub97694","Zer90440","Min35716","Con85132","Sub23433","Res99373","Max18921"],Max18921,"Max18921")

Actual (Unparsed): [[[[0.0000000, 0.0000000, -0.0516000, -0.0790000, 0.0000000, 0.0000000, -0.6711000, -0.4132000, 0.0000000, 0.1776000, -0.1393000, -0.1549000, 1.3733420, 1.7986838, 1.3794198, 0.4600802, 0.6393584, 1.8542953, 1.1294434, 0.8793320], [0.0000000, 0.0000000, -0.0469000, -0.1605000, 0.0000000, 0.0000000, -0.1546000, -0.0462000, 0.0000000, 0.2982000, -0.3388000, -0.2769000, 0.8853112, 1.9557906, 1.8070477, 0.8589639, 0.6333132, 2.0693859, 1.9213422, 0.3659886]]]]

Expected (Unparsed): [[[[0,0,-0.0516,-0.079,0,0,-0.6711,-0.4132,0,0.17759999999999998,-0.1393,-0.1549,1.37334202,1.79868384,1.37941986,0.46008024000000003,0.6393583599999999,1.85429528,1.12944348,0.87933196],[0,0,-0.0469,-0.1605,0,0,-0.1546,-0.0462,0,0.2982,-0.3388,-0.2769,0.88531118,1.9557905599999998,1.80704774,0.85896392,0.63331315,2.06938592,1.92134218,0.3659886]]]]

Actual:   [[[[0, 0, -0.0516, -0.079, 0, 0, -0.6711, -0.4132, 0, 0.1776, -0.1393, -0.1549, 1.3734, 1.7987, 1.3795, 0.4601, 0.6394, 1.8543, 1.1295, 0.8794], [0, 0, -0.0469, -0.1605, 0, 0, -0.1546, -0.0462, 0, 0.2982, -0.3388, -0.2769, 0.8854, 1.9558, 1.8071, 0.859, 0.6334, 2.0694, 1.9214, 0.366]]]]

Expected: [[[[0, 0, -0.0516, -0.079, 0, 0, -0.6711, -0.4132, 0, 0.1776, -0.1393, -0.1549, 1.3734, 1.7987, 1.3795, 0.4601, 0.6394, 1.8543, 1.1295, 0.8794], [0, 0, -0.0469, -0.1605, 0, 0, -0.1546, -0.0462, 0, 0.2982, -0.3388, -0.2769, 0.8854, 1.9558, 1.8071, 0.859, 0.6334, 2.0694, 1.9214, 0.366]]]]