import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Dot38922 = tf.keras.layers.Input(shape=([2, 3]))
in1Dot38922 = tf.keras.layers.Input(shape=([2, 3]))
in0Dot11782 = tf.keras.layers.Input(shape=([3]))
in1Dot11782 = tf.keras.layers.Input(shape=([3]))
in0Con54325 = tf.keras.layers.Input(shape=([8]))
in0Con58827 = tf.keras.layers.Input(shape=([9, 1]))
in0Sep62145 = tf.keras.layers.Input(shape=([2, 2]))

Dot38922 = keras.layers.Dot(axes=(1, 1), name = 'Dot38922', )([in0Dot38922,in1Dot38922])
Fla70122 = keras.layers.Flatten(name = 'Fla70122', )(Dot38922)
Dot11782 = keras.layers.Dot(axes=(1, 1), name = 'Dot11782', )([in0Dot11782,in1Dot11782])
Con54325 = keras.layers.Concatenate(axis=1, name = 'Con54325', )([Dot11782,in0Con54325])
Ave56883 = keras.layers.Average(name = 'Ave56883', )([Fla70122,Con54325])
Res33928 = keras.layers.Reshape((9, 1), name = 'Res33928', )(Ave56883)
Con58827 = keras.layers.Concatenate(axis=2, name = 'Con58827', )([Res33928,in0Con58827])
Sep62145 = keras.layers.SeparableConv1D(2, (1),strides=(1), padding='valid', name = 'Sep62145', )(in0Sep62145)
Lay85958 = keras.layers.LayerNormalization(axis=1, epsilon=2.5410505717046217, name = 'Lay85958', )(Sep62145)
Zer7003 = keras.layers.ZeroPadding1D(padding=((7, 0)), name = 'Zer7003', )(Lay85958)
Sub13005 = keras.layers.Subtract(name = 'Sub13005', )([Con58827,Zer7003])
model = tf.keras.models.Model(inputs=[in0Dot38922,in1Dot38922,in0Dot11782,in1Dot11782,in0Con54325,in0Con58827,in0Sep62145], outputs=Sub13005)
w = model.get_layer('Sep62145').get_weights() 
w[0] = np.array([[[0.8289], [0.7461]]])
w[1] = np.array([[[0.8456, 0.0779], [0.1464, 0.8439]]])
w[2] = np.array([0, 0])
model.get_layer('Sep62145').set_weights(w) 
in0Dot38922 = tf.constant([[[0.7277, 0.8526, 0.1153], [0.416, 0.0704, 0.1741]]])
in1Dot38922 = tf.constant([[[0.9733, 0.6064, 0.8662], [0.6877, 0.6105, 0.8193]]])
in0Dot11782 = tf.constant([[0.2813, 0.2281, 0.5045]])
in1Dot11782 = tf.constant([[0.2069, 0.2976, 0.2887]])
in0Con54325 = tf.constant([[0.2153, 0.6733, 0.2129, 0.9898, 0.2195, 0.1234, 0.0674, 0.9958]])
in0Con58827 = tf.constant([[[0.0007], [0.5999], [0.4389], [0.9729], [0.7376], [0.8327], [0.2059], [0.7855], [0.7688]]])
in0Sep62145 = tf.constant([[[0.5324, 0.0209], [0.2728, 0.3752]]])
print (np.array2string(model.predict([in0Dot38922,in1Dot38922,in0Dot11782,in1Dot11782,in0Con54325,in0Con58827,in0Sep62145],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Sub13005.png')

LDot38922 = dot_layer([[[0.7277, 0.8526, 0.1153], [0.416, 0.0704, 0.1741]]], [[[0.9733, 0.6064, 0.8662], [0.6877, 0.6105, 0.8193]]], 1, 1, Dot38922), 
LFla70122 = flatten_layer(Dot38922, Fla70122), 
LDot11782 = dot_layer([[0.2813, 0.2281, 0.5045]], [[0.2069, 0.2976, 0.2887]], 1, 1, Dot11782), 
LCon54325 = concatenate_layer([Dot11782,[[0.2153, 0.6733, 0.2129, 0.9898, 0.2195, 0.1234, 0.0674, 0.9958]]], 1, Con54325), 
LAve56883 = average_layer([Fla70122,Con54325], Ave56883), 
LRes33928 = reshape_layer(Ave56883, [9, 1], Res33928), 
LCon58827 = concatenate_layer([Res33928,[[[0.0007], [0.5999], [0.4389], [0.9729], [0.7376], [0.8327], [0.2059], [0.7855], [0.7688]]]], 2, Con58827), 
LSep62145 = separable_conv1D_layer([[[0.5324, 0.0209], [0.2728, 0.3752]]], 1,[[[[0.8289], [0.7461]]],[[[0.8456, 0.0779], [0.1464, 0.8439]]]],[0, 0], 1, false, Sep62145), 
LLay85958 = layer_normalization_layer(Sep62145, 1, 2.5410505717046217, Lay85958), 
LZer7003 = zero_padding1D_layer(Lay85958, 7, 0, Zer7003), 
LSub13005 = subtract_layer(Con58827,Zer7003, Sub13005), 
exec_layers([LDot38922,LFla70122,LDot11782,LCon54325,LAve56883,LRes33928,LCon58827,LSep62145,LLay85958,LZer7003,LSub13005],["Dot38922","Fla70122","Dot11782","Con54325","Ave56883","Res33928","Con58827","Sep62145","Lay85958","Zer7003","Sub13005"],Sub13005,"Sub13005")

Actual (Unparsed): [[[0.6330431, 0.0007000], [0.4552726, 0.5999000], [0.8222313, 0.4389000], [0.5455748, 0.9729000], [0.7748979, 0.7376000], [0.5078504, 0.8327000], [0.1776750, 0.2059000], [0.0769134, 0.8500788], [0.6640461, 0.7042212]]]

Expected (Unparsed): [[[0.633043145,0.0007],[0.45527264,0.5999],[0.82223127,0.4389],[0.5455748300000001,0.9729],[0.77489792,0.7376],[0.5078504199999999,0.8327],[0.17767503,0.2059],[0.0769134088118377,0.8500787904663497],[0.6640460711881624,0.7042212095336503]]]

Actual:   [[[0.6331, 0.0007], [0.4553, 0.5999], [0.8223, 0.4389], [0.5456, 0.9729], [0.7749, 0.7376], [0.5079, 0.8327], [0.1777, 0.2059], [0.077, 0.8501], [0.6641, 0.7043]]]

Expected: [[[0.6331, 0.0007], [0.4553, 0.5999], [0.8223, 0.4389], [0.5456, 0.9729], [0.7749, 0.7376], [0.5079, 0.8327], [0.1777, 0.2059], [0.077, 0.8501], [0.6641, 0.7043]]]