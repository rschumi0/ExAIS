import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Min36670 = tf.keras.layers.Input(shape=([1, 1, 2]))
in1Min36670 = tf.keras.layers.Input(shape=([1, 1, 2]))
in0Con84273 = tf.keras.layers.Input(shape=([3, 1]))
in0Dot14438 = tf.keras.layers.Input(shape=([2, 3]))
in1Dot14438 = tf.keras.layers.Input(shape=([2, 3]))
in0Con53688 = tf.keras.layers.Input(shape=([3, 3, 1]))
in0Mul74942 = tf.keras.layers.Input(shape=([2, 2, 1, 2]))
in1Mul74942 = tf.keras.layers.Input(shape=([2, 2, 1, 2]))
in0Glo90510 = tf.keras.layers.Input(shape=([2, 1]))
in0Mul82731 = tf.keras.layers.Input(shape=([2, 1, 1]))
in1Mul82731 = tf.keras.layers.Input(shape=([2, 1, 1]))
in0Ave71402 = tf.keras.layers.Input(shape=([1, 2]))
in1Ave71402 = tf.keras.layers.Input(shape=([1, 2]))
in0Con82934 = tf.keras.layers.Input(shape=([3, 4]))

Min36670 = keras.layers.Minimum(name = 'Min36670', )([in0Min36670,in1Min36670])
Res43636 = keras.layers.Reshape((1, 2), name = 'Res43636', )(Min36670)
Zer73980 = keras.layers.ZeroPadding1D(padding=((2, 0)), name = 'Zer73980', )(Res43636)
Con84273 = keras.layers.Concatenate(axis=2, name = 'Con84273', )([Zer73980,in0Con84273])
Dot14438 = keras.layers.Dot(axes=(1, 1), name = 'Dot14438', )([in0Dot14438,in1Dot14438])
Mul12640 = keras.layers.Multiply(name = 'Mul12640', )([Con84273,Dot14438])
Res63229 = keras.layers.Reshape((3, 3, 1), name = 'Res63229', )(Mul12640)
Con53688 = keras.layers.Concatenate(axis=3, name = 'Con53688', )([Res63229,in0Con53688])
Mul74942 = keras.layers.Multiply(name = 'Mul74942', )([in0Mul74942,in1Mul74942])
Res85954 = keras.layers.Reshape((2, 2, 2), name = 'Res85954', )(Mul74942)
Glo90510 = keras.layers.GlobalAveragePooling1D(name = 'Glo90510', )(in0Glo90510)
Res16885 = keras.layers.Reshape((1, 1), name = 'Res16885', )(Glo90510)
Res47339 = keras.layers.Reshape((1, 1, 1), name = 'Res47339', )(Res16885)
Zer67624 = keras.layers.ZeroPadding2D(padding=((1, 0), (0, 0)), name = 'Zer67624', )(Res47339)
Mul82731 = keras.layers.Multiply(name = 'Mul82731', )([in0Mul82731,in1Mul82731])
Sub33421 = keras.layers.Subtract(name = 'Sub33421', )([Zer67624,Mul82731])
Con31175 = keras.layers.Conv2D(2, (2, 1),strides=(1, 1), padding='same', dilation_rate=(1, 1), name = 'Con31175', )(Sub33421)
Zer92308 = keras.layers.ZeroPadding2D(padding=((0, 0), (1, 0)), name = 'Zer92308', )(Con31175)
Add65675 = keras.layers.Add(name = 'Add65675', )([Res85954,Zer92308])
Zer99915 = keras.layers.ZeroPadding2D(padding=((1, 0), (1, 0)), name = 'Zer99915', )(Add65675)
Ave15173 = keras.layers.Average(name = 'Ave15173', )([Con53688,Zer99915])
Res58388 = keras.layers.Reshape((3, 6), name = 'Res58388', )(Ave15173)
Ave71402 = keras.layers.Average(name = 'Ave71402', )([in0Ave71402,in1Ave71402])
Zer69118 = keras.layers.ZeroPadding1D(padding=((2, 0)), name = 'Zer69118', )(Ave71402)
Con82934 = keras.layers.Concatenate(axis=2, name = 'Con82934', )([Zer69118,in0Con82934])
Max43927 = keras.layers.Maximum(name = 'Max43927', )([Res58388,Con82934])
model = tf.keras.models.Model(inputs=[in0Min36670,in1Min36670,in0Con84273,in0Dot14438,in1Dot14438,in0Con53688,in0Mul74942,in1Mul74942,in0Glo90510,in0Mul82731,in1Mul82731,in0Ave71402,in1Ave71402,in0Con82934], outputs=Max43927)
w = model.get_layer('Con31175').get_weights() 
w[0] = np.array([[[[0.1369, 0.2005]]], [[[0.9348, 0.7138]]]])
w[1] = np.array([0, 0])
model.get_layer('Con31175').set_weights(w) 
in0Min36670 = tf.constant([[[[0.6578, 0.6018]]]])
in1Min36670 = tf.constant([[[[0.3388, 0.4471]]]])
in0Con84273 = tf.constant([[[0.5861], [0.8025], [0.0537]]])
in0Dot14438 = tf.constant([[[0.0912, 0.5836, 0.2149], [0.4375, 0.6758, 0.8613]]])
in1Dot14438 = tf.constant([[[0.8262, 0.5014, 0.5282], [0.4457, 0.0066, 0.115]]])
in0Con53688 = tf.constant([[[[0.683], [0.4002], [0.4376]], [[0.5652], [0.7992], [0.8909]], [[0.8826], [0.8631], [0.021]]]])
in0Mul74942 = tf.constant([[[[[0.3745, 0.6036]], [[0.0382, 0.4367]]], [[[0.1678, 0.6297]], [[0.3629, 0.3881]]]]])
in1Mul74942 = tf.constant([[[[[0.1499, 0.1956]], [[0.291, 0.0646]]], [[[0.2051, 0.5634]], [[0.391, 0.8369]]]]])
in0Glo90510 = tf.constant([[[1.2879], [1.176]]])
in0Mul82731 = tf.constant([[[[0.8193]], [[0.9984]]]])
in1Mul82731 = tf.constant([[[[0.1662]], [[0.134]]]])
in0Ave71402 = tf.constant([[[0.4494, 0.5706]]])
in1Ave71402 = tf.constant([[[0.715, 0.8536]]])
in0Con82934 = tf.constant([[[0.6213, 0.9472, 0.0439, 0.9823], [0.471, 0.2633, 0.7926, 0.4582], [0.9095, 0.0516, 0.6315, 0.5748]]])
print (np.array2string(model.predict([in0Min36670,in1Min36670,in0Con84273,in0Dot14438,in1Dot14438,in0Con53688,in0Mul74942,in1Mul74942,in0Glo90510,in0Mul82731,in1Mul82731,in0Ave71402,in1Ave71402,in0Con82934],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Max43927.png')

LMin36670 = minimum_layer([[[[[0.6578, 0.6018]]]], [[[[0.3388, 0.4471]]]]], Min36670), 
LRes43636 = reshape_layer(Min36670, [1, 2], Res43636), 
LZer73980 = zero_padding1D_layer(Res43636, 2, 0, Zer73980), 
LCon84273 = concatenate_layer([Zer73980,[[[0.5861], [0.8025], [0.0537]]]], 2, Con84273), 
LDot14438 = dot_layer([[[0.0912, 0.5836, 0.2149], [0.4375, 0.6758, 0.8613]]], [[[0.8262, 0.5014, 0.5282], [0.4457, 0.0066, 0.115]]], 1, 1, Dot14438), 
LMul12640 = multiply_layer([Con84273,Dot14438], Mul12640), 
LRes63229 = reshape_layer(Mul12640, [3, 3, 1], Res63229), 
LCon53688 = concatenate_layer([Res63229,[[[[0.683], [0.4002], [0.4376]], [[0.5652], [0.7992], [0.8909]], [[0.8826], [0.8631], [0.021]]]]], 3, Con53688), 
LMul74942 = multiply_layer([[[[[[0.3745, 0.6036]], [[0.0382, 0.4367]]], [[[0.1678, 0.6297]], [[0.3629, 0.3881]]]]], [[[[[0.1499, 0.1956]], [[0.291, 0.0646]]], [[[0.2051, 0.5634]], [[0.391, 0.8369]]]]]], Mul74942), 
LRes85954 = reshape_layer(Mul74942, [2, 2, 2], Res85954), 
LGlo90510 = global_average_pooling1D_layer([[[1.2879], [1.176]]], Glo90510), 
LRes16885 = reshape_layer(Glo90510, [1, 1], Res16885), 
LRes47339 = reshape_layer(Res16885, [1, 1, 1], Res47339), 
LZer67624 = zero_padding2D_layer(Res47339, 1, 0, 0, 0, Zer67624), 
LMul82731 = multiply_layer([[[[[0.8193]], [[0.9984]]]], [[[[0.1662]], [[0.134]]]]], Mul82731), 
LSub33421 = subtract_layer(Zer67624,Mul82731, Sub33421), 
LCon31175 = conv2D_layer(Sub33421, 2, 1,[[[[0.1369, 0.2005]]], [[[0.9348, 0.7138]]]],[0, 0], 1, 1, true, 1, 1, Con31175), 
LZer92308 = zero_padding2D_layer(Con31175, 0, 0, 1, 0, Zer92308), 
LAdd65675 = add_layer([Res85954,Zer92308], Add65675), 
LZer99915 = zero_padding2D_layer(Add65675, 1, 0, 1, 0, Zer99915), 
LAve15173 = average_layer([Con53688,Zer99915], Ave15173), 
LRes58388 = reshape_layer(Ave15173, [3, 6], Res58388), 
LAve71402 = average_layer([[[[0.4494, 0.5706]]], [[[0.715, 0.8536]]]], Ave71402), 
LZer69118 = zero_padding1D_layer(Ave71402, 2, 0, Zer69118), 
LCon82934 = concatenate_layer([Zer69118,[[[0.6213, 0.9472, 0.0439, 0.9823], [0.471, 0.2633, 0.7926, 0.4582], [0.9095, 0.0516, 0.6315, 0.5748]]]], 2, Con82934), 
LMax43927 = maximum_layer([Res58388,Con82934], Max43927), 
exec_layers([LMin36670,LRes43636,LZer73980,LCon84273,LDot14438,LMul12640,LRes63229,LCon53688,LMul74942,LRes85954,LGlo90510,LRes16885,LRes47339,LZer67624,LMul82731,LSub33421,LCon31175,LZer92308,LAdd65675,LZer99915,LAve15173,LRes58388,LAve71402,LZer69118,LCon82934,LMax43927],["Min36670","Res43636","Zer73980","Con84273","Dot14438","Mul12640","Res63229","Con53688","Mul74942","Res85954","Glo90510","Res16885","Res47339","Zer67624","Mul82731","Sub33421","Con31175","Zer92308","Add65675","Zer99915","Ave15173","Res58388","Ave71402","Zer69118","Con82934","Max43927"],Max43927,"Max43927")

Actual (Unparsed): [[[0.0000000, 0.3415000, 0.6213000, 0.9472000, 0.0439000, 0.9823000], [0.0000000, 0.2826000, 0.4710000, 0.4586321, 0.7926000, 0.8378395], [0.5822000, 0.7121000, 0.9095000, 0.6089365, 0.6315000, 0.5748000]]]

Expected (Unparsed): [[[0.0,0.3415,0.6213,0.9472,0.0439,0.9823],[0.0,0.2826,0.471,0.45863208,0.7926,0.8378394764449999],[0.5822,0.7121,0.9095,0.60893649,0.6315,0.5748]]]

Actual:   [[[0, 0.3415, 0.6213, 0.9472, 0.0439, 0.9823], [0, 0.2826, 0.471, 0.4587, 0.7926, 0.8379], [0.5822, 0.7121, 0.9095, 0.609, 0.6315, 0.5748]]]

Expected: [[[0, 0.3415, 0.6213, 0.9472, 0.0439, 0.9823], [0, 0.2826, 0.471, 0.4587, 0.7926, 0.8379], [0.5822, 0.7121, 0.9095, 0.609, 0.6315, 0.5748]]]