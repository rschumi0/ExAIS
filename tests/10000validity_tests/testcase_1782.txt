import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Add87359 = tf.keras.layers.Input(shape=([2, 1, 2]))
in1Add87359 = tf.keras.layers.Input(shape=([2, 1, 2]))
in0Con26301 = tf.keras.layers.Input(shape=([6, 2, 4, 1]))
in0Up_75413 = tf.keras.layers.Input(shape=([3, 2, 2]))
in0Con49978 = tf.keras.layers.Input(shape=([6, 2, 2, 1]))
in0Ave65448 = tf.keras.layers.Input(shape=([1, 1, 2, 2]))
in1Ave65448 = tf.keras.layers.Input(shape=([1, 1, 2, 2]))

Add87359 = keras.layers.Add(name = 'Add87359', )([in0Add87359,in1Add87359])
Res3458 = keras.layers.Reshape((2, 2), name = 'Res3458', )(Add87359)
Fla33776 = keras.layers.Flatten(name = 'Fla33776', )(Res3458)
Res18284 = keras.layers.Reshape((4, 1), name = 'Res18284', )(Fla33776)
Glo70149 = keras.layers.GlobalMaxPool1D(name = 'Glo70149', )(Res18284)
Res48640 = keras.layers.Reshape((1, 1), name = 'Res48640', )(Glo70149)
Res87214 = keras.layers.Reshape((1, 1, 1), name = 'Res87214', )(Res48640)
Con8225 = keras.layers.Conv2DTranspose(3, (1, 1),strides=(1, 1), padding='same', name = 'Con8225', )(Res87214)
Res47727 = keras.layers.Reshape((1, 1, 3, 1), name = 'Res47727', )(Con8225)
Zer670 = keras.layers.ZeroPadding3D(padding=((5, 0), (1, 0), (1, 0)), name = 'Zer670', )(Res47727)
Con26301 = keras.layers.Concatenate(axis=4, name = 'Con26301', )([Zer670,in0Con26301])
Up_75413 = keras.layers.UpSampling2D(size=(2, 1), name = 'Up_75413', )(in0Up_75413)
Res20117 = keras.layers.Reshape((6, 2, 2, 1), name = 'Res20117', )(Up_75413)
Con49978 = keras.layers.Concatenate(axis=4, name = 'Con49978', )([Res20117,in0Con49978])
Ave65448 = keras.layers.Average(name = 'Ave65448', )([in0Ave65448,in1Ave65448])
Zer9525 = keras.layers.ZeroPadding3D(padding=((5, 0), (1, 0), (0, 0)), name = 'Zer9525', )(Ave65448)
Min80995 = keras.layers.Minimum(name = 'Min80995', )([Con49978,Zer9525])
Zer63352 = keras.layers.ZeroPadding3D(padding=((0, 0), (0, 0), (2, 0)), name = 'Zer63352', )(Min80995)
Sub43993 = keras.layers.Subtract(name = 'Sub43993', )([Con26301,Zer63352])
model = tf.keras.models.Model(inputs=[in0Add87359,in1Add87359,in0Con26301,in0Up_75413,in0Con49978,in0Ave65448,in1Ave65448], outputs=Sub43993)
w = model.get_layer('Con8225').get_weights() 
w[0] = np.array([[[[0.7694], [0.3118], [0.1746]]]])
w[1] = np.array([0, 0, 0])
model.get_layer('Con8225').set_weights(w) 
in0Add87359 = tf.constant([[[[0.2584, 0.1806]], [[0.8889, 0.5988]]]])
in1Add87359 = tf.constant([[[[0.3659, 0.735]], [[0.1661, 0.7865]]]])
in0Con26301 = tf.constant([[[[[0.0162], [0.6708], [0.2369], [0.241]], [[0.0596], [0.4135], [0.4925], [0.8411]]], [[[0.5038], [0.5398], [0.1341], [0.1175]], [[0.2171], [0.3248], [0.4531], [0.7277]]], [[[0.6799], [0.0286], [0.9845], [0.6215]], [[0.7614], [0.2625], [0.1167], [0.5101]]], [[[0.7681], [0.6585], [0.1209], [0.8979]], [[0.7873], [0.1079], [0.945], [0.0816]]], [[[0.5339], [0.7142], [0.0042], [0.2284]], [[0.7462], [0.3913], [0.247], [0.7606]]], [[[0.6785], [0.7299], [0.9719], [0.7923]], [[0.3861], [0.3546], [0.2296], [0.2934]]]]])
in0Up_75413 = tf.constant([[[[1.7212, 1.1972], [1.9531, 1.1395]], [[1.8933, 1.201], [1.8083, 1.5499]], [[1.1985, 1.5762], [1.9283, 1.0058]]]])
in0Con49978 = tf.constant([[[[[0.3677], [0.3163]], [[0.6211], [0.0413]]], [[[0.5054], [0.8324]], [[0.0851], [0.7183]]], [[[0.1821], [0.0849]], [[0.8959], [0.6196]]], [[[0.8307], [0.0223]], [[0.62], [0.3734]]], [[[0.1], [0.6021]], [[0.725], [0.7716]]], [[[0.0625], [0.4348]], [[0.1176], [0.4548]]]]])
in0Ave65448 = tf.constant([[[[[0.5339, 0.6994], [0.8285, 0.4224]]]]])
in1Ave65448 = tf.constant([[[[[0.0467, 0.0436], [0.0055, 0.4023]]]]])
print (np.array2string(model.predict([in0Add87359,in1Add87359,in0Con26301,in0Up_75413,in0Con49978,in0Ave65448,in1Ave65448],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Sub43993.png')

LAdd87359 = add_layer([[[[[0.2584, 0.1806]], [[0.8889, 0.5988]]]], [[[[0.3659, 0.735]], [[0.1661, 0.7865]]]]], Add87359), 
LRes3458 = reshape_layer(Add87359, [2, 2], Res3458), 
LFla33776 = flatten_layer(Res3458, Fla33776), 
LRes18284 = reshape_layer(Fla33776, [4, 1], Res18284), 
LGlo70149 = global_max_pool1D_layer(Res18284, Glo70149), 
LRes48640 = reshape_layer(Glo70149, [1, 1], Res48640), 
LRes87214 = reshape_layer(Res48640, [1, 1, 1], Res87214), 
LCon8225 = conv2D_transpose_layer(Res87214, 1, 1,[[[[0.7694], [0.3118], [0.1746]]]],[0, 0, 0], 1, 1, true, Con8225), 
LRes47727 = reshape_layer(Con8225, [1, 1, 3, 1], Res47727), 
LZer670 = zero_padding3D_layer(Res47727, 5, 0, 1, 0, 1, 0, Zer670), 
LCon26301 = concatenate_layer([Zer670,[[[[[0.0162], [0.6708], [0.2369], [0.241]], [[0.0596], [0.4135], [0.4925], [0.8411]]], [[[0.5038], [0.5398], [0.1341], [0.1175]], [[0.2171], [0.3248], [0.4531], [0.7277]]], [[[0.6799], [0.0286], [0.9845], [0.6215]], [[0.7614], [0.2625], [0.1167], [0.5101]]], [[[0.7681], [0.6585], [0.1209], [0.8979]], [[0.7873], [0.1079], [0.945], [0.0816]]], [[[0.5339], [0.7142], [0.0042], [0.2284]], [[0.7462], [0.3913], [0.247], [0.7606]]], [[[0.6785], [0.7299], [0.9719], [0.7923]], [[0.3861], [0.3546], [0.2296], [0.2934]]]]]], 4, Con26301), 
LUp_75413 = up_sampling2D_layer([[[[1.7212, 1.1972], [1.9531, 1.1395]], [[1.8933, 1.201], [1.8083, 1.5499]], [[1.1985, 1.5762], [1.9283, 1.0058]]]], 2, 1, Up_75413), 
LRes20117 = reshape_layer(Up_75413, [6, 2, 2, 1], Res20117), 
LCon49978 = concatenate_layer([Res20117,[[[[[0.3677], [0.3163]], [[0.6211], [0.0413]]], [[[0.5054], [0.8324]], [[0.0851], [0.7183]]], [[[0.1821], [0.0849]], [[0.8959], [0.6196]]], [[[0.8307], [0.0223]], [[0.62], [0.3734]]], [[[0.1], [0.6021]], [[0.725], [0.7716]]], [[[0.0625], [0.4348]], [[0.1176], [0.4548]]]]]], 4, Con49978), 
LAve65448 = average_layer([[[[[[0.5339, 0.6994], [0.8285, 0.4224]]]]], [[[[[0.0467, 0.0436], [0.0055, 0.4023]]]]]], Ave65448), 
LZer9525 = zero_padding3D_layer(Ave65448, 5, 0, 1, 0, 0, 0, Zer9525), 
LMin80995 = minimum_layer([Con49978,Zer9525], Min80995), 
LZer63352 = zero_padding3D_layer(Min80995, 0, 0, 0, 0, 2, 0, Zer63352), 
LSub43993 = subtract_layer(Con26301,Zer63352, Sub43993), 
exec_layers([LAdd87359,LRes3458,LFla33776,LRes18284,LGlo70149,LRes48640,LRes87214,LCon8225,LRes47727,LZer670,LCon26301,LUp_75413,LRes20117,LCon49978,LAve65448,LZer9525,LMin80995,LZer63352,LSub43993],["Add87359","Res3458","Fla33776","Res18284","Glo70149","Res48640","Res87214","Con8225","Res47727","Zer670","Con26301","Up_75413","Res20117","Con49978","Ave65448","Zer9525","Min80995","Zer63352","Sub43993"],Sub43993,"Sub43993")

Actual (Unparsed): [[[[[0.0000000, 0.0162000], [0.0000000, 0.6708000], [0.0000000, 0.2369000], [0.0000000, 0.2410000]], [[0.0000000, 0.0596000], [0.0000000, 0.4135000], [0.0000000, 0.4925000], [0.0000000, 0.8411000]]], [[[0.0000000, 0.5038000], [0.0000000, 0.5398000], [0.0000000, 0.1341000], [0.0000000, 0.1175000]], [[0.0000000, 0.2171000], [0.0000000, 0.3248000], [0.0000000, 0.4531000], [0.0000000, 0.7277000]]], [[[0.0000000, 0.6799000], [0.0000000, 0.0286000], [0.0000000, 0.9845000], [0.0000000, 0.6215000]], [[0.0000000, 0.7614000], [0.0000000, 0.2625000], [0.0000000, 0.1167000], [0.0000000, 0.5101000]]], [[[0.0000000, 0.7681000], [0.0000000, 0.6585000], [0.0000000, 0.1209000], [0.0000000, 0.8979000]], [[0.0000000, 0.7873000], [0.0000000, 0.1079000], [0.0000000, 0.9450000], [0.0000000, 0.0816000]]], [[[0.0000000, 0.5339000], [0.0000000, 0.7142000], [0.0000000, 0.0042000], [0.0000000, 0.2284000]], [[0.0000000, 0.7462000], [0.0000000, 0.3913000], [0.0000000, 0.2470000], [0.0000000, 0.7606000]]], [[[0.0000000, 0.6785000], [0.0000000, 0.7299000], [0.0000000, 0.9719000], [0.0000000, 0.7923000]], [[0.0000000, 0.3861000], [1.0658498, 0.3546000], [0.1416365, 0.1120000], [-0.1751266, -0.1189500]]]]]

Expected (Unparsed): [[[[[0,0.0162],[0,0.6708],[0,0.2369],[0,0.241]],[[0,0.0596],[0,0.4135],[0,0.4925],[0,0.8411]]],[[[0,0.5038],[0,0.5398],[0,0.1341],[0,0.1175]],[[0,0.2171],[0,0.3248],[0,0.4531],[0,0.7277]]],[[[0,0.6799],[0,0.0286],[0,0.9845],[0,0.6215]],[[0,0.7614],[0,0.2625],[0,0.1167],[0,0.5101]]],[[[0,0.7681],[0,0.6585],[0,0.1209],[0,0.8979]],[[0,0.7873],[0,0.1079],[0,0.945],[0,0.0816]]],[[[0,0.5339],[0,0.7142],[0,0.0042],[0,0.2284]],[[0,0.7462],[0,0.3913],[0,0.247],[0,0.7606]]],[[[0,0.6785],[0,0.7299],[0,0.9719],[0,0.7923]],[[0,0.3861],[1.06584982,0.3546],[0.14163654000000003,0.112],[-0.17512661999999998,-0.11895]]]]]

Actual:   [[[[[0, 0.0162], [0, 0.6708], [0, 0.2369], [0, 0.241]], [[0, 0.0596], [0, 0.4135], [0, 0.4925], [0, 0.8411]]], [[[0, 0.5038], [0, 0.5398], [0, 0.1341], [0, 0.1175]], [[0, 0.2171], [0, 0.3248], [0, 0.4531], [0, 0.7277]]], [[[0, 0.6799], [0, 0.0286], [0, 0.9845], [0, 0.6215]], [[0, 0.7614], [0, 0.2625], [0, 0.1167], [0, 0.5101]]], [[[0, 0.7681], [0, 0.6585], [0, 0.1209], [0, 0.8979]], [[0, 0.7873], [0, 0.1079], [0, 0.945], [0, 0.0816]]], [[[0, 0.5339], [0, 0.7142], [0, 0.0042], [0, 0.2284]], [[0, 0.7462], [0, 0.3913], [0, 0.247], [0, 0.7606]]], [[[0, 0.6785], [0, 0.7299], [0, 0.9719], [0, 0.7923]], [[0, 0.3861], [1.0659, 0.3546], [0.1417, 0.112], [-0.1751, -0.1189]]]]]

Expected: [[[[[0, 0.0162], [0, 0.6708], [0, 0.2369], [0, 0.241]], [[0, 0.0596], [0, 0.4135], [0, 0.4925], [0, 0.8411]]], [[[0, 0.5038], [0, 0.5398], [0, 0.1341], [0, 0.1175]], [[0, 0.2171], [0, 0.3248], [0, 0.4531], [0, 0.7277]]], [[[0, 0.6799], [0, 0.0286], [0, 0.9845], [0, 0.6215]], [[0, 0.7614], [0, 0.2625], [0, 0.1167], [0, 0.5101]]], [[[0, 0.7681], [0, 0.6585], [0, 0.1209], [0, 0.8979]], [[0, 0.7873], [0, 0.1079], [0, 0.945], [0, 0.0816]]], [[[0, 0.5339], [0, 0.7142], [0, 0.0042], [0, 0.2284]], [[0, 0.7462], [0, 0.3913], [0, 0.247], [0, 0.7606]]], [[[0, 0.6785], [0, 0.7299], [0, 0.9719], [0, 0.7923]], [[0, 0.3861], [1.0659, 0.3546], [0.1417, 0.112], [-0.1751, -0.1189]]]]]