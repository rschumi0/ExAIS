import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Mul90518 = tf.keras.layers.Input(shape=([1, 2, 2, 1]))
in1Mul90518 = tf.keras.layers.Input(shape=([1, 2, 2, 1]))
in0Con31955 = tf.keras.layers.Input(shape=([2, 3, 3, 2]))
in0Mul95399 = tf.keras.layers.Input(shape=([1, 1, 1]))
in1Mul95399 = tf.keras.layers.Input(shape=([1, 1, 1]))
in0Con39110 = tf.keras.layers.Input(shape=([2, 3, 3, 2]))
in0Sub28172 = tf.keras.layers.Input(shape=([2, 3, 3, 3]))
in1Sub28172 = tf.keras.layers.Input(shape=([2, 3, 3, 3]))

Mul90518 = keras.layers.Multiply(name = 'Mul90518', )([in0Mul90518,in1Mul90518])
Zer10819 = keras.layers.ZeroPadding3D(padding=((1, 0), (1, 0), (1, 0)), name = 'Zer10819', )(Mul90518)
Con31955 = keras.layers.Concatenate(axis=4, name = 'Con31955', )([Zer10819,in0Con31955])
Mul95399 = keras.layers.Multiply(name = 'Mul95399', )([in0Mul95399,in1Mul95399])
Res84985 = keras.layers.Reshape((1, 1, 1, 1), name = 'Res84985', )(Mul95399)
Zer87134 = keras.layers.ZeroPadding3D(padding=((1, 0), (2, 0), (2, 0)), name = 'Zer87134', )(Res84985)
Con39110 = keras.layers.Concatenate(axis=4, name = 'Con39110', )([Zer87134,in0Con39110])
Sub28172 = keras.layers.Subtract(name = 'Sub28172', )([in0Sub28172,in1Sub28172])
Mul62135 = keras.layers.Multiply(name = 'Mul62135', )([Con39110,Sub28172])
Add14394 = keras.layers.Add(name = 'Add14394', )([Con31955,Mul62135])
model = tf.keras.models.Model(inputs=[in0Mul90518,in1Mul90518,in0Con31955,in0Mul95399,in1Mul95399,in0Con39110,in0Sub28172,in1Sub28172], outputs=Add14394)
in0Mul90518 = tf.constant([[[[[0.106], [0.4997]], [[0.7425], [0.1555]]]]])
in1Mul90518 = tf.constant([[[[[0.5893], [0.6207]], [[0.1209], [0.2823]]]]])
in0Con31955 = tf.constant([[[[[0.9211, 0.3992], [0.4479, 0.4278], [0.9608, 0.8661]], [[0.8599, 0.1531], [0.7146, 0.8919], [0.5054, 0.775]], [[0.8879, 0.9875], [0.0253, 0.9983], [0.63, 0.004]]], [[[0.604, 0.6241], [0.7114, 0.7923], [0.5708, 0.7245]], [[0.5988, 0.6919], [0.4061, 0.4303], [0.2603, 0.9935]], [[0.1562, 0.8227], [0.5089, 0.66], [0.6292, 0.5782]]]]])
in0Mul95399 = tf.constant([[[[0.3181]]]])
in1Mul95399 = tf.constant([[[[0.1451]]]])
in0Con39110 = tf.constant([[[[[0.7119, 0.6671], [0.5887, 0.7063], [0.2981, 0.2994]], [[0.9163, 0.5078], [0.7108, 0.2527], [0.0237, 0.2111]], [[0.1472, 0.0086], [0.0596, 0.3206], [0.8878, 0.3033]]], [[[0.6482, 0.3454], [0.7448, 0.4919], [0.9312, 0.1898]], [[0.8055, 0.8248], [0.2429, 0.023], [0.5976, 0.9994]], [[0.6412, 0.5471], [0.4464, 0.2185], [0.1812, 0.0892]]]]])
in0Sub28172 = tf.constant([[[[[0.6646, 0.3156, 0.9116], [0.1659, 0.9461, 0.8298], [0.73, 0.5682, 0.5763]], [[0.9282, 0.6999, 0.9409], [0.7479, 0.9317, 0.8618], [0.8172, 0.2463, 0.1242]], [[0.497, 0.9061, 0.3369], [0.3535, 0.4917, 0.2556], [0.2544, 0.7008, 0.6742]]], [[[0.0931, 0.1113, 0.8784], [0.2224, 0.4238, 0.9214], [0.4935, 0.8783, 0.3389]], [[0.0883, 0.8227, 0.6319], [0.3817, 0.1523, 0.2852], [0.7381, 0.2531, 0.8022]], [[0.3702, 0.4182, 0.5983], [0.1654, 0.38, 0.3625], [0.6096, 0.1693, 0.981]]]]])
in1Sub28172 = tf.constant([[[[[0.1984, 0.706, 0.3292], [0.2225, 0.4184, 0.6043], [0.6663, 0.3776, 0.8725]], [[0.6843, 0.5814, 0.6893], [0.8202, 0.6694, 0.4197], [0.8627, 0.7116, 0.2906]], [[0.1507, 0.9345, 0.3193], [0.7871, 0.0539, 0.973], [0.5812, 0.8038, 0.5561]]], [[[0.9142, 0.5264, 0.4926], [0.3959, 0.7214, 0.9593], [0.3975, 0.104, 0.9735]], [[0.1524, 0.0086, 0.3847], [0.9333, 0.6597, 0.709], [0.3583, 0.1206, 0.5047]], [[0.2033, 0.7817, 0.4303], [0.4205, 0.4209, 0.3038], [0.8697, 0.5205, 0.3117]]]]])
print (np.array2string(model.predict([in0Mul90518,in1Mul90518,in0Con31955,in0Mul95399,in1Mul95399,in0Con39110,in0Sub28172,in1Sub28172],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Add14394.png')

LMul90518 = multiply_layer([[[[[[0.106], [0.4997]], [[0.7425], [0.1555]]]]], [[[[[0.5893], [0.6207]], [[0.1209], [0.2823]]]]]], Mul90518), 
LZer10819 = zero_padding3D_layer(Mul90518, 1, 0, 1, 0, 1, 0, Zer10819), 
LCon31955 = concatenate_layer([Zer10819,[[[[[0.9211, 0.3992], [0.4479, 0.4278], [0.9608, 0.8661]], [[0.8599, 0.1531], [0.7146, 0.8919], [0.5054, 0.775]], [[0.8879, 0.9875], [0.0253, 0.9983], [0.63, 0.004]]], [[[0.604, 0.6241], [0.7114, 0.7923], [0.5708, 0.7245]], [[0.5988, 0.6919], [0.4061, 0.4303], [0.2603, 0.9935]], [[0.1562, 0.8227], [0.5089, 0.66], [0.6292, 0.5782]]]]]], 4, Con31955), 
LMul95399 = multiply_layer([[[[[0.3181]]]], [[[[0.1451]]]]], Mul95399), 
LRes84985 = reshape_layer(Mul95399, [1, 1, 1, 1], Res84985), 
LZer87134 = zero_padding3D_layer(Res84985, 1, 0, 2, 0, 2, 0, Zer87134), 
LCon39110 = concatenate_layer([Zer87134,[[[[[0.7119, 0.6671], [0.5887, 0.7063], [0.2981, 0.2994]], [[0.9163, 0.5078], [0.7108, 0.2527], [0.0237, 0.2111]], [[0.1472, 0.0086], [0.0596, 0.3206], [0.8878, 0.3033]]], [[[0.6482, 0.3454], [0.7448, 0.4919], [0.9312, 0.1898]], [[0.8055, 0.8248], [0.2429, 0.023], [0.5976, 0.9994]], [[0.6412, 0.5471], [0.4464, 0.2185], [0.1812, 0.0892]]]]]], 4, Con39110), 
LSub28172 = subtract_layer([[[[[0.6646, 0.3156, 0.9116], [0.1659, 0.9461, 0.8298], [0.73, 0.5682, 0.5763]], [[0.9282, 0.6999, 0.9409], [0.7479, 0.9317, 0.8618], [0.8172, 0.2463, 0.1242]], [[0.497, 0.9061, 0.3369], [0.3535, 0.4917, 0.2556], [0.2544, 0.7008, 0.6742]]], [[[0.0931, 0.1113, 0.8784], [0.2224, 0.4238, 0.9214], [0.4935, 0.8783, 0.3389]], [[0.0883, 0.8227, 0.6319], [0.3817, 0.1523, 0.2852], [0.7381, 0.2531, 0.8022]], [[0.3702, 0.4182, 0.5983], [0.1654, 0.38, 0.3625], [0.6096, 0.1693, 0.981]]]]], [[[[[0.1984, 0.706, 0.3292], [0.2225, 0.4184, 0.6043], [0.6663, 0.3776, 0.8725]], [[0.6843, 0.5814, 0.6893], [0.8202, 0.6694, 0.4197], [0.8627, 0.7116, 0.2906]], [[0.1507, 0.9345, 0.3193], [0.7871, 0.0539, 0.973], [0.5812, 0.8038, 0.5561]]], [[[0.9142, 0.5264, 0.4926], [0.3959, 0.7214, 0.9593], [0.3975, 0.104, 0.9735]], [[0.1524, 0.0086, 0.3847], [0.9333, 0.6597, 0.709], [0.3583, 0.1206, 0.5047]], [[0.2033, 0.7817, 0.4303], [0.4205, 0.4209, 0.3038], [0.8697, 0.5205, 0.3117]]]]], Sub28172), 
LMul62135 = multiply_layer([Con39110,Sub28172], Mul62135), 
LAdd14394 = add_layer([Con31955,Mul62135], Add14394), 
exec_layers([LMul90518,LZer10819,LCon31955,LMul95399,LRes84985,LZer87134,LCon39110,LSub28172,LMul62135,LAdd14394],["Mul90518","Zer10819","Con31955","Mul95399","Res84985","Zer87134","Con39110","Sub28172","Mul62135","Add14394"],Add14394,"Add14394")

Actual (Unparsed): [[[[[0.0000000, 0.6431743, 0.7877190], [0.0000000, 0.7585570, 0.5870706], [0.0000000, 1.0176178, 0.7774177]], [[0.0000000, 0.9684815, 0.2808625], [0.0000000, 0.9010429, 1.0036187], [0.0000000, 0.4943724, 0.7398729]], [[0.0000000, 0.8837195, 0.9876514], [0.0000000, 0.0513929, 0.7683016], [0.0000000, 0.5385566, 0.0398197]]], [[[0.0000000, 0.3349321, 0.7573554], [0.0000000, 0.4897475, 0.7736570], [0.0000000, 1.2918282, 0.6040529]], [[0.0000000, 1.2545575, 0.8957906], [0.0624658, 0.2828526, 0.4205526], [0.3101638, 0.3394820, 1.2908215]], [[0.0000000, -0.0768762, 0.9146128], [0.0897682, 0.4906422, 0.6728260], [0.0318924, 0.5655625, 0.6379015]]]]]

Expected (Unparsed): [[[[[0.0,0.64317424,0.78771904],[0.0,0.75855699,0.58707065],[0.0,1.01761786,0.77741772]],[[0.0,0.9684815499999999,0.28086248],[0.0,0.90104284,1.00361867],[0.0,0.49437238999999994,0.73987296]],[[0.0,0.88371952,0.9876513600000001],[0.0,0.05139288,0.7683015599999999],[0.0,0.5385566,0.03981973]]],[[[0.0,0.33493218,0.7573553199999999],[0.0,0.48974752,0.77365699],[0.0,1.2918281600000001,0.60405292]],[[0.0,1.25455755,0.89579056],[0.0624658,0.28285254000000004,0.4205526],[0.31016379,0.33948199999999995,1.2908215]],[[0.0,-0.07687619999999995,0.9146128],[0.08976825000000001,0.49064224,0.67282595],[0.031892393768999994,0.56556256,0.6379015600000001]]]]]

Actual:   [[[[[0, 0.6432, 0.7878], [0, 0.7586, 0.5871], [0, 1.0177, 0.7775]], [[0, 0.9685, 0.2809], [0, 0.9011, 1.0037], [0, 0.4944, 0.7399]], [[0, 0.8838, 0.9877], [0, 0.0514, 0.7684], [0, 0.5386, 0.0399]]], [[[0, 0.335, 0.7574], [0, 0.4898, 0.7737], [0, 1.2919, 0.6041]], [[0, 1.2546, 0.8958], [0.0625, 0.2829, 0.4206], [0.3102, 0.3395, 1.2909]], [[0, -0.0768, 0.9147], [0.0898, 0.4907, 0.6729], [0.0319, 0.5656, 0.638]]]]]

Expected: [[[[[0, 0.6432, 0.7878], [0, 0.7586, 0.5871], [0, 1.0177, 0.7775]], [[0, 0.9685, 0.2809], [0, 0.9011, 1.0037], [0, 0.4944, 0.7399]], [[0, 0.8838, 0.9877], [0, 0.0514, 0.7684], [0, 0.5386, 0.0399]]], [[[0, 0.335, 0.7574], [0, 0.4898, 0.7737], [0, 1.2919, 0.6041]], [[0, 1.2546, 0.8958], [0.0625, 0.2829, 0.4206], [0.3102, 0.3395, 1.2909]], [[0, -0.0768, 0.9147], [0.0898, 0.4907, 0.6729], [0.0319, 0.5656, 0.638]]]]]