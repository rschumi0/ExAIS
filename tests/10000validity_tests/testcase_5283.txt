import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Sub47503 = tf.keras.layers.Input(shape=([2]))
in1Sub47503 = tf.keras.layers.Input(shape=([2]))
in0Con11364 = tf.keras.layers.Input(shape=([2, 2, 2]))
in0Sub29328 = tf.keras.layers.Input(shape=([2, 2, 3]))
in1Sub29328 = tf.keras.layers.Input(shape=([2, 2, 3]))
in0Dot34047 = tf.keras.layers.Input(shape=([3]))
in1Dot34047 = tf.keras.layers.Input(shape=([3]))
in0Con23814 = tf.keras.layers.Input(shape=([11]))

Sub47503 = keras.layers.Subtract(name = 'Sub47503', )([in0Sub47503,in1Sub47503])
Res54939 = keras.layers.Reshape((2, 1), name = 'Res54939', )(Sub47503)
Res9916 = keras.layers.Reshape((2, 1, 1), name = 'Res9916', )(Res54939)
Zer3275 = keras.layers.ZeroPadding2D(padding=((0, 0), (1, 0)), name = 'Zer3275', )(Res9916)
Con11364 = keras.layers.Concatenate(axis=3, name = 'Con11364', )([Zer3275,in0Con11364])
Sub29328 = keras.layers.Subtract(name = 'Sub29328', )([in0Sub29328,in1Sub29328])
Mul9316 = keras.layers.Multiply(name = 'Mul9316', )([Con11364,Sub29328])
Res98541 = keras.layers.Reshape((2, 6), name = 'Res98541', )(Mul9316)
Fla52331 = keras.layers.Flatten(name = 'Fla52331', )(Res98541)
Dot34047 = keras.layers.Dot(axes=(1, 1), name = 'Dot34047', )([in0Dot34047,in1Dot34047])
ReL34458 = keras.layers.ReLU(max_value=6.070287459430743, negative_slope=3.645042963696881, threshold=3.9429400064645703, name = 'ReL34458', )(Dot34047)
Res83614 = keras.layers.Reshape((1, 1), name = 'Res83614', )(ReL34458)
Res56878 = keras.layers.Reshape((1, 1, 1), name = 'Res56878', )(Res83614)
Res91817 = keras.layers.Reshape((1, 1, 1, 1), name = 'Res91817', )(Res56878)
Glo97007 = keras.layers.GlobalAveragePooling3D(name = 'Glo97007', )(Res91817)
Con23814 = keras.layers.Concatenate(axis=1, name = 'Con23814', )([Glo97007,in0Con23814])
Min2833 = keras.layers.Minimum(name = 'Min2833', )([Fla52331,Con23814])
model = tf.keras.models.Model(inputs=[in0Sub47503,in1Sub47503,in0Con11364,in0Sub29328,in1Sub29328,in0Dot34047,in1Dot34047,in0Con23814], outputs=Min2833)
in0Sub47503 = tf.constant([[0.0959, 0.9907]])
in1Sub47503 = tf.constant([[0.2655, 0.025]])
in0Con11364 = tf.constant([[[[0.3814, 0.1017], [0.9103, 0.2865]], [[0.9112, 0.5197], [0.0046, 0.6794]]]])
in0Sub29328 = tf.constant([[[[0.7045, 0.3571, 0.198], [0.8837, 0.0788, 0.4276]], [[0.8113, 0.8477, 0.4811], [0.1808, 0.083, 0.2574]]]])
in1Sub29328 = tf.constant([[[[0.183, 0.226, 0.1901], [0.3536, 0.2693, 0.0816]], [[0.7209, 0.7136, 0.3686], [0.0615, 0.3094, 0.5217]]]])
in0Dot34047 = tf.constant([[0.9604, 0.1915, 0.1638]])
in1Dot34047 = tf.constant([[0.9402, 0.6279, 0.6459]])
in0Con23814 = tf.constant([[0.0103, 0.3709, 0.0642, 0.598, 0.5343, 0.7764, 0.5989, 0.9691, 0.6363, 0.3622, 0.6588]])
print (np.array2string(model.predict([in0Sub47503,in1Sub47503,in0Con11364,in0Sub29328,in1Sub29328,in0Dot34047,in1Dot34047,in0Con23814],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Min2833.png')

LSub47503 = subtract_layer([[0.0959, 0.9907]], [[0.2655, 0.025]], Sub47503), 
LRes54939 = reshape_layer(Sub47503, [2, 1], Res54939), 
LRes9916 = reshape_layer(Res54939, [2, 1, 1], Res9916), 
LZer3275 = zero_padding2D_layer(Res9916, 0, 0, 1, 0, Zer3275), 
LCon11364 = concatenate_layer([Zer3275,[[[[0.3814, 0.1017], [0.9103, 0.2865]], [[0.9112, 0.5197], [0.0046, 0.6794]]]]], 3, Con11364), 
LSub29328 = subtract_layer([[[[0.7045, 0.3571, 0.198], [0.8837, 0.0788, 0.4276]], [[0.8113, 0.8477, 0.4811], [0.1808, 0.083, 0.2574]]]], [[[[0.183, 0.226, 0.1901], [0.3536, 0.2693, 0.0816]], [[0.7209, 0.7136, 0.3686], [0.0615, 0.3094, 0.5217]]]], Sub29328), 
LMul9316 = multiply_layer([Con11364,Sub29328], Mul9316), 
LRes98541 = reshape_layer(Mul9316, [2, 6], Res98541), 
LFla52331 = flatten_layer(Res98541, Fla52331), 
LDot34047 = dot_layer([[0.9604, 0.1915, 0.1638]], [[0.9402, 0.6279, 0.6459]], 1, 1, Dot34047), 
LReL34458 = relu_layer(Dot34047, 6.070287459430743, 3.645042963696881, 3.9429400064645703, ReL34458), 
LRes83614 = reshape_layer(ReL34458, [1, 1], Res83614), 
LRes56878 = reshape_layer(Res83614, [1, 1, 1], Res56878), 
LRes91817 = reshape_layer(Res56878, [1, 1, 1, 1], Res91817), 
LGlo97007 = global_average_pooling3D_layer(Res91817, Glo97007), 
LCon23814 = concatenate_layer([Glo97007,[[0.0103, 0.3709, 0.0642, 0.598, 0.5343, 0.7764, 0.5989, 0.9691, 0.6363, 0.3622, 0.6588]]], 1, Con23814), 
LMin2833 = minimum_layer([Fla52331,Con23814], Min2833), 
exec_layers([LSub47503,LRes54939,LRes9916,LZer3275,LCon11364,LSub29328,LMul9316,LRes98541,LFla52331,LDot34047,LReL34458,LRes83614,LRes56878,LRes91817,LGlo97007,LCon23814,LMin2833],["Sub47503","Res54939","Res9916","Zer3275","Con11364","Sub29328","Mul9316","Res98541","Fla52331","Dot34047","ReL34458","Res83614","Res56878","Res91817","Glo97007","Con23814","Min2833"],Min2833,"Min2833")

Actual (Unparsed): [[-10.2568983, 0.0103000, 0.0008034, -0.0899050, -0.1734122, 0.0991290, 0.0000000, 0.1221919, 0.0584662, 0.1152080, -0.0010414, -0.1795654]]

Expected (Unparsed): [[-10.256898139677126,0.0103,0.0008034300000000018,-0.08990496000000002,-0.17341215000000001,0.09912899999999998,0.0,0.12219192,0.05846625000000003,0.11520800999999999,-0.00104144,-0.17956542000000003]]

Actual:   [[-10.2568, 0.0103, 0.0009, -0.0899, -0.1734, 0.0992, 0, 0.1222, 0.0585, 0.1153, -0.001, -0.1795]]

Expected: [[-10.2568, 0.0103, 0.0009, -0.0899, -0.1734, 0.0992, 0, 0.1222, 0.0585, 0.1153, -0.001, -0.1795]]