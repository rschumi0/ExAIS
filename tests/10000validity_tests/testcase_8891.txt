import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Cro1300 = tf.keras.layers.Input(shape=([2, 3]))

Cro1300 = keras.layers.Cropping1D(cropping=((0, 1)), name = 'Cro1300', )(in0Cro1300)
Mas17708 = keras.layers.Masking(mask_value=1, name = 'Mas17708', )(Cro1300)
model = tf.keras.models.Model(inputs=[in0Cro1300], outputs=Mas17708)
in0Cro1300 = tf.constant([[[1.0552, 1.8477, 1.3287], [1.957, 1.8838, 1.7326]]])
print (np.array2string(model.predict([in0Cro1300],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Mas17708.png')

LCro1300 = cropping1D_layer([[[1.0552, 1.8477, 1.3287], [1.957, 1.8838, 1.7326]]], 0, 1, Cro1300), 
LMas17708 = masking_layer(Cro1300, 1, Mas17708), 
exec_layers([LCro1300,LMas17708],["Cro1300","Mas17708"],Mas17708,"Mas17708")

Actual (Unparsed): [[[1.0552000, 1.8477000, 1.3286999]]]

Expected (Unparsed): [[[1.0552,1.8477,1.3287]]]

Actual:   [[[1.0552, 1.8477, 1.3287]]]

Expected: [[[1.0552, 1.8477, 1.3287]]]