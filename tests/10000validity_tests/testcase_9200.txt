import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Sub73541 = tf.keras.layers.Input(shape=([3]))
in1Sub73541 = tf.keras.layers.Input(shape=([3]))

Sub73541 = keras.layers.Subtract(name = 'Sub73541', )([in0Sub73541,in1Sub73541])
Res64903 = keras.layers.Reshape((3, 1), name = 'Res64903', )(Sub73541)
Res84778 = keras.layers.Reshape((3, 1, 1), name = 'Res84778', )(Res64903)
Res48298 = keras.layers.Reshape((3, 1, 1, 1), name = 'Res48298', )(Res84778)
Zer34210 = keras.layers.ZeroPadding3D(padding=((1, 1), (1, 1), (1, 1)), name = 'Zer34210', )(Res48298)
model = tf.keras.models.Model(inputs=[in0Sub73541,in1Sub73541], outputs=Zer34210)
in0Sub73541 = tf.constant([[0.5057, 0.2601, 0.9953]])
in1Sub73541 = tf.constant([[0.8776, 0.7264, 0.4713]])
print (np.array2string(model.predict([in0Sub73541,in1Sub73541],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Zer34210.png')

LSub73541 = subtract_layer([[0.5057, 0.2601, 0.9953]], [[0.8776, 0.7264, 0.4713]], Sub73541), 
LRes64903 = reshape_layer(Sub73541, [3, 1], Res64903), 
LRes84778 = reshape_layer(Res64903, [3, 1, 1], Res84778), 
LRes48298 = reshape_layer(Res84778, [3, 1, 1, 1], Res48298), 
LZer34210 = zero_padding3D_layer(Res48298, 1, 1, 1, 1, 1, 1, Zer34210), 
exec_layers([LSub73541,LRes64903,LRes84778,LRes48298,LZer34210],["Sub73541","Res64903","Res84778","Res48298","Zer34210"],Zer34210,"Zer34210")

Actual (Unparsed): [[[[[0.0000000], [0.0000000], [0.0000000]], [[0.0000000], [0.0000000], [0.0000000]], [[0.0000000], [0.0000000], [0.0000000]]], [[[0.0000000], [0.0000000], [0.0000000]], [[0.0000000], [-0.3719000], [0.0000000]], [[0.0000000], [0.0000000], [0.0000000]]], [[[0.0000000], [0.0000000], [0.0000000]], [[0.0000000], [-0.4663000], [0.0000000]], [[0.0000000], [0.0000000], [0.0000000]]], [[[0.0000000], [0.0000000], [0.0000000]], [[0.0000000], [0.5240000], [0.0000000]], [[0.0000000], [0.0000000], [0.0000000]]], [[[0.0000000], [0.0000000], [0.0000000]], [[0.0000000], [0.0000000], [0.0000000]], [[0.0000000], [0.0000000], [0.0000000]]]]]

Expected (Unparsed): [[[[[0],[0],[0]],[[0],[0],[0]],[[0],[0],[0]]],[[[0],[0],[0]],[[0],[-0.3719],[0]],[[0],[0],[0]]],[[[0],[0],[0]],[[0],[-0.46630000000000005],[0]],[[0],[0],[0]]],[[[0],[0],[0]],[[0],[0.524],[0]],[[0],[0],[0]]],[[[0],[0],[0]],[[0],[0],[0]],[[0],[0],[0]]]]]

Actual:   [[[[[0], [0], [0]], [[0], [0], [0]], [[0], [0], [0]]], [[[0], [0], [0]], [[0], [-0.3719], [0]], [[0], [0], [0]]], [[[0], [0], [0]], [[0], [-0.4663], [0]], [[0], [0], [0]]], [[[0], [0], [0]], [[0], [0.524], [0]], [[0], [0], [0]]], [[[0], [0], [0]], [[0], [0], [0]], [[0], [0], [0]]]]]

Expected: [[[[[0], [0], [0]], [[0], [0], [0]], [[0], [0], [0]]], [[[0], [0], [0]], [[0], [-0.3719], [0]], [[0], [0], [0]]], [[[0], [0], [0]], [[0], [-0.4663], [0]], [[0], [0], [0]]], [[[0], [0], [0]], [[0], [0.524], [0]], [[0], [0], [0]]], [[[0], [0], [0]], [[0], [0], [0]], [[0], [0], [0]]]]]