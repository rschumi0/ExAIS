import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Loc33389 = tf.keras.layers.Input(shape=([2, 1]))
in0Con47846 = tf.keras.layers.Input(shape=([1, 2, 1]))
in0Add59167 = tf.keras.layers.Input(shape=([1, 2, 2]))
in1Add59167 = tf.keras.layers.Input(shape=([1, 2, 2]))
in0Con55310 = tf.keras.layers.Input(shape=([2, 14]))
in0Sub34389 = tf.keras.layers.Input(shape=([2, 3, 2, 3]))
in1Sub34389 = tf.keras.layers.Input(shape=([2, 3, 2, 3]))
in0Min43527 = tf.keras.layers.Input(shape=([1, 2]))
in1Min43527 = tf.keras.layers.Input(shape=([1, 2]))
in0Con27279 = tf.keras.layers.Input(shape=([2, 16]))

Loc33389 = keras.layers.LocallyConnected1D(2, (2),strides=(1), name = 'Loc33389', )(in0Loc33389)
Res97641 = keras.layers.Reshape((1, 2, 1), name = 'Res97641', )(Loc33389)
Con47846 = keras.layers.Concatenate(axis=3, name = 'Con47846', )([Res97641,in0Con47846])
Add59167 = keras.layers.Add(name = 'Add59167', )([in0Add59167,in1Add59167])
Sub71607 = keras.layers.Subtract(name = 'Sub71607', )([Con47846,Add59167])
Res10749 = keras.layers.Reshape((1, 4), name = 'Res10749', )(Sub71607)
Zer23294 = keras.layers.ZeroPadding1D(padding=((1, 0)), name = 'Zer23294', )(Res10749)
Con55310 = keras.layers.Concatenate(axis=2, name = 'Con55310', )([Zer23294,in0Con55310])
Sub34389 = keras.layers.Subtract(name = 'Sub34389', )([in0Sub34389,in1Sub34389])
Res51889 = keras.layers.Reshape((2, 3, 6), name = 'Res51889', )(Sub34389)
Res17094 = keras.layers.Reshape((2, 18), name = 'Res17094', )(Res51889)
Min43527 = keras.layers.Minimum(name = 'Min43527', )([in0Min43527,in1Min43527])
Zer95362 = keras.layers.ZeroPadding1D(padding=((1, 0)), name = 'Zer95362', )(Min43527)
Con27279 = keras.layers.Concatenate(axis=2, name = 'Con27279', )([Zer95362,in0Con27279])
Sub79007 = keras.layers.Subtract(name = 'Sub79007', )([Res17094,Con27279])
Sub84795 = keras.layers.Subtract(name = 'Sub84795', )([Con55310,Sub79007])
Cro58216 = keras.layers.Cropping1D(cropping=((1, 0)), name = 'Cro58216', )(Sub84795)
model = tf.keras.models.Model(inputs=[in0Loc33389,in0Con47846,in0Add59167,in1Add59167,in0Con55310,in0Sub34389,in1Sub34389,in0Min43527,in1Min43527,in0Con27279], outputs=Cro58216)
w = model.get_layer('Loc33389').get_weights() 
w[0] = np.array([[[0.7246, 0.7352], [0.2678, 0.588]]])
w[1] = np.array([[0, 0]])
model.get_layer('Loc33389').set_weights(w) 
in0Loc33389 = tf.constant([[[0.7835], [0.7473]]])
in0Con47846 = tf.constant([[[[0.0693], [0.1751]]]])
in0Add59167 = tf.constant([[[[0.6586, 0.3782], [0.8897, 0.5088]]]])
in1Add59167 = tf.constant([[[[0.2205, 0.2696], [0.6501, 0.3956]]]])
in0Con55310 = tf.constant([[[0.0728, 0.5901, 0.881, 0.6023, 0.9729, 0.4929, 0.8634, 0.5357, 0.9681, 0.9456, 0.149, 0.6667, 0.9049, 0.1887], [0.7782, 0.6006, 0.8576, 0.524, 0.7739, 0.1031, 0.9759, 0.3165, 0.9134, 0.0493, 0.8378, 0.5009, 0.5139, 0.0275]]])
in0Sub34389 = tf.constant([[[[[0.5182, 0.2535, 0.0419], [0.0959, 0.7562, 0.8877]], [[0.5366, 0.9503, 0.5343], [0.919, 0.4697, 0.4529]], [[0.0279, 0.3882, 0.1463], [0.7077, 0.5178, 0.7047]]], [[[0.7736, 0.957, 0.3072], [0.3649, 0.2096, 0.2381]], [[0.1033, 0.6972, 0.9503], [0.9432, 0.0102, 0.998]], [[0.7374, 0.5607, 0.3833], [0.6923, 0.6629, 0.155]]]]])
in1Sub34389 = tf.constant([[[[[0.9318, 0.6983, 0.6704], [0.2083, 0.6162, 0.0071]], [[0.9098, 0.2908, 0.0874], [0.5957, 0.4888, 0.6535]], [[0.641, 0.1861, 0.7807], [0.2419, 0.918, 0.0343]]], [[[0.6011, 0.8212, 0.8742], [0.8876, 0.2433, 0.8708]], [[0.8621, 0.4841, 0.5761], [0.6574, 0.0198, 0.485]], [[0.1507, 0.4281, 0.5482], [0.5277, 0.5363, 0.9798]]]]])
in0Min43527 = tf.constant([[[0.87, 0.1676]]])
in1Min43527 = tf.constant([[[0.912, 0.9534]]])
in0Con27279 = tf.constant([[[0.6265, 0.0617, 0.8361, 0.8798, 0.5977, 0.2244, 0.8461, 0.9275, 0.0616, 0.6204, 0.8611, 0.9284, 0.5372, 0.1768, 0.6991, 0.7769], [0.7517, 0.866, 0.3044, 0.4444, 0.7404, 0.5435, 0.6555, 0.9496, 0.0884, 0.7364, 0.8946, 0.5425, 0.0541, 0.8617, 0.5354, 0.9819]]])
print (np.array2string(model.predict([in0Loc33389,in0Con47846,in0Add59167,in1Add59167,in0Con55310,in0Sub34389,in1Sub34389,in0Min43527,in1Min43527,in0Con27279],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Cro58216.png')

LLoc33389 = locally_connected1D_layer([[[0.7835], [0.7473]]], 2,[[[0.7246, 0.7352], [0.2678, 0.588]]],[[0, 0]], 1, Loc33389), 
LRes97641 = reshape_layer(Loc33389, [1, 2, 1], Res97641), 
LCon47846 = concatenate_layer([Res97641,[[[[0.0693], [0.1751]]]]], 3, Con47846), 
LAdd59167 = add_layer([[[[[0.6586, 0.3782], [0.8897, 0.5088]]]], [[[[0.2205, 0.2696], [0.6501, 0.3956]]]]], Add59167), 
LSub71607 = subtract_layer(Con47846,Add59167, Sub71607), 
LRes10749 = reshape_layer(Sub71607, [1, 4], Res10749), 
LZer23294 = zero_padding1D_layer(Res10749, 1, 0, Zer23294), 
LCon55310 = concatenate_layer([Zer23294,[[[0.0728, 0.5901, 0.881, 0.6023, 0.9729, 0.4929, 0.8634, 0.5357, 0.9681, 0.9456, 0.149, 0.6667, 0.9049, 0.1887], [0.7782, 0.6006, 0.8576, 0.524, 0.7739, 0.1031, 0.9759, 0.3165, 0.9134, 0.0493, 0.8378, 0.5009, 0.5139, 0.0275]]]], 2, Con55310), 
LSub34389 = subtract_layer([[[[[0.5182, 0.2535, 0.0419], [0.0959, 0.7562, 0.8877]], [[0.5366, 0.9503, 0.5343], [0.919, 0.4697, 0.4529]], [[0.0279, 0.3882, 0.1463], [0.7077, 0.5178, 0.7047]]], [[[0.7736, 0.957, 0.3072], [0.3649, 0.2096, 0.2381]], [[0.1033, 0.6972, 0.9503], [0.9432, 0.0102, 0.998]], [[0.7374, 0.5607, 0.3833], [0.6923, 0.6629, 0.155]]]]], [[[[[0.9318, 0.6983, 0.6704], [0.2083, 0.6162, 0.0071]], [[0.9098, 0.2908, 0.0874], [0.5957, 0.4888, 0.6535]], [[0.641, 0.1861, 0.7807], [0.2419, 0.918, 0.0343]]], [[[0.6011, 0.8212, 0.8742], [0.8876, 0.2433, 0.8708]], [[0.8621, 0.4841, 0.5761], [0.6574, 0.0198, 0.485]], [[0.1507, 0.4281, 0.5482], [0.5277, 0.5363, 0.9798]]]]], Sub34389), 
LRes51889 = reshape_layer(Sub34389, [2, 3, 6], Res51889), 
LRes17094 = reshape_layer(Res51889, [2, 18], Res17094), 
LMin43527 = minimum_layer([[[[0.87, 0.1676]]], [[[0.912, 0.9534]]]], Min43527), 
LZer95362 = zero_padding1D_layer(Min43527, 1, 0, Zer95362), 
LCon27279 = concatenate_layer([Zer95362,[[[0.6265, 0.0617, 0.8361, 0.8798, 0.5977, 0.2244, 0.8461, 0.9275, 0.0616, 0.6204, 0.8611, 0.9284, 0.5372, 0.1768, 0.6991, 0.7769], [0.7517, 0.866, 0.3044, 0.4444, 0.7404, 0.5435, 0.6555, 0.9496, 0.0884, 0.7364, 0.8946, 0.5425, 0.0541, 0.8617, 0.5354, 0.9819]]]], 2, Con27279), 
LSub79007 = subtract_layer(Res17094,Con27279, Sub79007), 
LSub84795 = subtract_layer(Con55310,Sub79007, Sub84795), 
LCro58216 = cropping1D_layer(Sub84795, 1, 0, Cro58216), 
exec_layers([LLoc33389,LRes97641,LCon47846,LAdd59167,LSub71607,LRes10749,LZer23294,LCon55310,LSub34389,LRes51889,LRes17094,LMin43527,LZer95362,LCon27279,LSub79007,LSub84795,LCro58216],["Loc33389","Res97641","Con47846","Add59167","Sub71607","Res10749","Zer23294","Con55310","Sub34389","Res51889","Res17094","Min43527","Zer95362","Con27279","Sub79007","Sub84795","Cro58216"],Cro58216,"Cro58216")

Actual (Unparsed): [[[0.5862511, -0.5467000, 0.7943416, 0.6594000, 1.1163000, 1.6777000, 2.3568000, 0.8544000, 1.0552000, 0.7669000, 1.0739000, 0.5399000, 1.2213000, 0.4592000, 1.0568000, 1.1980000, 0.9227000, 1.8342000]]]

Expected (Unparsed): [[[0.58625104,-0.5466999999999999,0.7943415999999999,0.6594,1.1162999999999998,1.6777000000000002,2.3568,0.8543999999999999,1.0552,0.7668999999999999,1.0739,0.5399,1.2212999999999998,0.4592,1.0568,1.198,0.9227,1.8342]]]

Actual:   [[[0.5863, -0.5467, 0.7944, 0.6594, 1.1163, 1.6777, 2.3568, 0.8544, 1.0552, 0.7669, 1.0739, 0.5399, 1.2213, 0.4592, 1.0568, 1.198, 0.9227, 1.8342]]]

Expected: [[[0.5863, -0.5466, 0.7944, 0.6594, 1.1163, 1.6778, 2.3568, 0.8544, 1.0552, 0.7669, 1.0739, 0.5399, 1.2213, 0.4592, 1.0568, 1.198, 0.9227, 1.8342]]]