import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Max78637 = tf.keras.layers.Input(shape=([1, 2]))
in1Max78637 = tf.keras.layers.Input(shape=([1, 2]))
in0Con71402 = tf.keras.layers.Input(shape=([1, 10]))
in0Sub4145 = tf.keras.layers.Input(shape=([2, 2, 2, 3]))
in1Sub4145 = tf.keras.layers.Input(shape=([2, 2, 2, 3]))

Max78637 = keras.layers.Maximum(name = 'Max78637', )([in0Max78637,in1Max78637])
Mas93886 = keras.layers.Masking(mask_value=2, name = 'Mas93886', )(Max78637)
Ave98463 = keras.layers.AveragePooling1D(pool_size=(1), name = 'Ave98463', )(Mas93886)
Con71402 = keras.layers.Concatenate(axis=2, name = 'Con71402', )([Ave98463,in0Con71402])
Sub4145 = keras.layers.Subtract(name = 'Sub4145', )([in0Sub4145,in1Sub4145])
Res67917 = keras.layers.Reshape((2, 2, 6), name = 'Res67917', )(Sub4145)
Res45399 = keras.layers.Reshape((2, 12), name = 'Res45399', )(Res67917)
Up_66207 = keras.layers.UpSampling1D(size=(1), name = 'Up_66207', )(Res45399)
Zer24029 = keras.layers.ZeroPadding1D(padding=((1, 1)), name = 'Zer24029', )(Up_66207)
Dot91220 = keras.layers.Dot(axes=(2, 2), name = 'Dot91220', )([Con71402,Zer24029])
model = tf.keras.models.Model(inputs=[in0Max78637,in1Max78637,in0Con71402,in0Sub4145,in1Sub4145], outputs=Dot91220)
in0Max78637 = tf.constant([[[0.1067, 0.1894]]])
in1Max78637 = tf.constant([[[0.4464, 0.6963]]])
in0Con71402 = tf.constant([[[0.7971, 0.5772, 0.9474, 0.1401, 0.9157, 0.8003, 0.7338, 0.6194, 0.3822, 0.9554]]])
in0Sub4145 = tf.constant([[[[[0.634, 0.8202, 0.1162], [0.2618, 0.2557, 0.0353]], [[0.9739, 0.2041, 0.5526], [0.9459, 0.4987, 0.9742]]], [[[0.43, 0.3132, 0.7463], [0.7261, 0.7997, 0.7157]], [[0.4949, 0.3123, 0.9106], [0.8557, 0.0387, 0.5537]]]]])
in1Sub4145 = tf.constant([[[[[0.0501, 0.8068, 0.2995], [0.5585, 0.3036, 0.3274]], [[0.1617, 0.0712, 0.8149], [0.7181, 0.4512, 0.5833]]], [[[0.5194, 0.0823, 0.7787], [0.2044, 0.636, 0.2675]], [[0.5452, 0.1026, 0.3006], [0.2084, 0.7704, 0.6595]]]]])
print (np.array2string(model.predict([in0Max78637,in1Max78637,in0Con71402,in0Sub4145,in1Sub4145],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Dot91220.png')

LMax78637 = maximum_layer([[[[0.1067, 0.1894]]], [[[0.4464, 0.6963]]]], Max78637), 
LMas93886 = masking_layer(Max78637, 2, Mas93886), 
LAve98463 = average_pooling1D_layer(Mas93886, 1, Ave98463), 
LCon71402 = concatenate_layer([Ave98463,[[[0.7971, 0.5772, 0.9474, 0.1401, 0.9157, 0.8003, 0.7338, 0.6194, 0.3822, 0.9554]]]], 2, Con71402), 
LSub4145 = subtract_layer([[[[[0.634, 0.8202, 0.1162], [0.2618, 0.2557, 0.0353]], [[0.9739, 0.2041, 0.5526], [0.9459, 0.4987, 0.9742]]], [[[0.43, 0.3132, 0.7463], [0.7261, 0.7997, 0.7157]], [[0.4949, 0.3123, 0.9106], [0.8557, 0.0387, 0.5537]]]]], [[[[[0.0501, 0.8068, 0.2995], [0.5585, 0.3036, 0.3274]], [[0.1617, 0.0712, 0.8149], [0.7181, 0.4512, 0.5833]]], [[[0.5194, 0.0823, 0.7787], [0.2044, 0.636, 0.2675]], [[0.5452, 0.1026, 0.3006], [0.2084, 0.7704, 0.6595]]]]], Sub4145), 
LRes67917 = reshape_layer(Sub4145, [2, 2, 6], Res67917), 
LRes45399 = reshape_layer(Res67917, [2, 12], Res45399), 
LUp_66207 = up_sampling1D_layer(Res45399, 1, Up_66207), 
LZer24029 = zero_padding1D_layer(Up_66207, 1, 1, Zer24029), 
LDot91220 = dot_layer(Con71402,Zer24029, 2, 2, Dot91220), 
exec_layers([LMax78637,LMas93886,LAve98463,LCon71402,LSub4145,LRes67917,LRes45399,LUp_66207,LZer24029,LDot91220],["Max78637","Mas93886","Ave98463","Con71402","Sub4145","Res67917","Res45399","Up_66207","Zer24029","Dot91220"],Dot91220,"Dot91220")

Actual (Unparsed): [[[0.0000000, 1.0566515, 1.2036307, 0.0000000]]]

Expected (Unparsed): [[[0.0,1.0566513899999999,1.20363067,0.0]]]

Actual:   [[[0, 1.0567, 1.2037, 0]]]

Expected: [[[0, 1.0567, 1.2037, 0]]]