import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Mas83534 = tf.keras.layers.Input(shape=([4]))
in0Con11763 = tf.keras.layers.Input(shape=([1]))
in0Con37624 = tf.keras.layers.Input(shape=([2, 1, 1, 2]))

Mas83534 = keras.layers.Masking(mask_value=1, name = 'Mas83534', )(in0Mas83534)
Den14753 = keras.layers.Dense(2,name = 'Den14753', )(Mas83534)
Con11763 = keras.layers.Concatenate(axis=1, name = 'Con11763', )([Den14753,in0Con11763])
Con37624 = keras.layers.Conv3DTranspose(4, (1, 1, 1),strides=(1, 1, 1), padding='same', name = 'Con37624', )(in0Con37624)
Den62158 = keras.layers.Dense(3,name = 'Den62158', )(Con37624)
Res54796 = keras.layers.Reshape((2, 1, 3), name = 'Res54796', )(Den62158)
Glo13329 = keras.layers.GlobalAveragePooling2D(name = 'Glo13329', )(Res54796)
Min3113 = keras.layers.Minimum(name = 'Min3113', )([Con11763,Glo13329])
Res95829 = keras.layers.Reshape((3, 1), name = 'Res95829', )(Min3113)
Res29859 = keras.layers.Reshape((3, 1, 1), name = 'Res29859', )(Res95829)
Sep84680 = keras.layers.SeparableConv2D(2, (3, 1),strides=(2, 2), padding='same', name = 'Sep84680', )(Res29859)
model = tf.keras.models.Model(inputs=[in0Mas83534,in0Con11763,in0Con37624], outputs=Sep84680)
w = model.get_layer('Den14753').get_weights() 
w[0] = np.array([[0.8123, 0.9045], [0.5934, 0.5731], [0.5993, 0.3675], [0.9831, 0.965]])
w[1] = np.array([0.2131, 0.1227])
model.get_layer('Den14753').set_weights(w) 
w = model.get_layer('Con37624').get_weights() 
w[0] = np.array([[[[[0.3461, 0.2952], [0.1818, 0.0355], [0.6862, 0.2072], [0.8452, 0.6989]]]]])
w[1] = np.array([0, 0, 0, 0])
model.get_layer('Con37624').set_weights(w) 
w = model.get_layer('Den62158').get_weights() 
w[0] = np.array([[0.1238, 0.0509, 0.3235], [0.5765, 0.7349, 0.4202], [0.6506, 0.3538, 0.7294], [0.0756, 0.2391, 0.8418]])
w[1] = np.array([0.8983, 0.8351, 0.4151])
model.get_layer('Den62158').set_weights(w) 
w = model.get_layer('Sep84680').get_weights() 
w[0] = np.array([[[[0.804]]], [[[0.4635]]], [[[0.8749]]]])
w[1] = np.array([[[[0.1366, 0.0764]]]])
w[2] = np.array([0, 0])
model.get_layer('Sep84680').set_weights(w) 
in0Mas83534 = tf.constant([[1.7423, 1.6257, 1.6952, 1.1862]])
in0Con11763 = tf.constant([[0.2178]])
in0Con37624 = tf.constant([[[[[0.2148, 0.6739]]], [[[0.3001, 0.4585]]]]])
print (np.array2string(model.predict([in0Mas83534,in0Con11763,in0Con37624],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Sep84680.png')

LMas83534 = masking_layer([[1.7423, 1.6257, 1.6952, 1.1862]], 1, Mas83534), 
LDen14753 = dense_layer(Mas83534, [[0.8123, 0.9045], [0.5934, 0.5731], [0.5993, 0.3675], [0.9831, 0.965]],[0.2131, 0.1227], Den14753), 
LCon11763 = concatenate_layer([Den14753,[[0.2178]]], 1, Con11763), 
LCon37624 = conv3D_transpose_layer([[[[[0.2148, 0.6739]]], [[[0.3001, 0.4585]]]]], 1, 1, 1,[[[[[0.3461, 0.2952], [0.1818, 0.0355], [0.6862, 0.2072], [0.8452, 0.6989]]]]],[0, 0, 0, 0], 1, 1, 1, true, Con37624), 
LDen62158 = dense_layer(Con37624, [[0.1238, 0.0509, 0.3235], [0.5765, 0.7349, 0.4202], [0.6506, 0.3538, 0.7294], [0.0756, 0.2391, 0.8418]],[0.8983, 0.8351, 0.4151], Den62158), 
LRes54796 = reshape_layer(Den62158, [2, 1, 3], Res54796), 
LGlo13329 = global_average_pooling2D_layer(Res54796, Glo13329), 
LMin3113 = minimum_layer([Con11763,Glo13329], Min3113), 
LRes95829 = reshape_layer(Min3113, [3, 1], Res95829), 
LRes29859 = reshape_layer(Res95829, [3, 1, 1], Res29859), 
LSep84680 = separable_conv2D_layer(Res29859, 3, 1,[[[[[0.804]]], [[[0.4635]]], [[[0.8749]]]],[[[[0.1366, 0.0764]]]]],[0, 0], 2, 2, true, Sep84680), 
exec_layers([LMas83534,LDen14753,LCon11763,LCon37624,LDen62158,LRes54796,LGlo13329,LMin3113,LRes95829,LRes29859,LSep84680],["Mas83534","Den14753","Con11763","Con37624","Den62158","Res54796","Glo13329","Min3113","Res95829","Res29859","Sep84680"],Sep84680,"Sep84680")

Actual (Unparsed): [[[[0.2135656, 0.1194467]], [[0.1398666, 0.0782270]]]]

Expected (Unparsed): [[[[0.21356564019711302,0.11944666845577917]],[[0.13986657520263632,0.07822698642372924]]]]

Actual:   [[[[0.2136, 0.1195]], [[0.1399, 0.0783]]]]

Expected: [[[[0.2136, 0.1195]], [[0.1399, 0.0783]]]]