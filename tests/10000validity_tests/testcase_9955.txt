import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Mul51581 = tf.keras.layers.Input(shape=([2, 2]))
in1Mul51581 = tf.keras.layers.Input(shape=([2, 2]))
in0Con85674 = tf.keras.layers.Input(shape=([2, 2]))
in0Sub48297 = tf.keras.layers.Input(shape=([2, 3]))
in1Sub48297 = tf.keras.layers.Input(shape=([2, 3]))
in0Con36124 = tf.keras.layers.Input(shape=([2, 1]))
in0Min29293 = tf.keras.layers.Input(shape=([2, 2, 2, 1]))
in1Min29293 = tf.keras.layers.Input(shape=([2, 2, 2, 1]))

Mul51581 = keras.layers.Multiply(name = 'Mul51581', )([in0Mul51581,in1Mul51581])
Con85674 = keras.layers.Concatenate(axis=2, name = 'Con85674', )([Mul51581,in0Con85674])
Sub48297 = keras.layers.Subtract(name = 'Sub48297', )([in0Sub48297,in1Sub48297])
Con36124 = keras.layers.Concatenate(axis=2, name = 'Con36124', )([Sub48297,in0Con36124])
Min29293 = keras.layers.Minimum(name = 'Min29293', )([in0Min29293,in1Min29293])
Res98144 = keras.layers.Reshape((2, 2, 2), name = 'Res98144', )(Min29293)
Res54224 = keras.layers.Reshape((2, 4), name = 'Res54224', )(Res98144)
Ave68216 = keras.layers.AveragePooling1D(pool_size=(2), strides=(1), padding='same', name = 'Ave68216', )(Res54224)
Sub18740 = keras.layers.Subtract(name = 'Sub18740', )([Con36124,Ave68216])
Ave99728 = keras.layers.Average(name = 'Ave99728', )([Con85674,Sub18740])
model = tf.keras.models.Model(inputs=[in0Mul51581,in1Mul51581,in0Con85674,in0Sub48297,in1Sub48297,in0Con36124,in0Min29293,in1Min29293], outputs=Ave99728)
in0Mul51581 = tf.constant([[[0.3411, 0.9957], [0.7189, 0.849]]])
in1Mul51581 = tf.constant([[[0.8405, 0.8907], [0.0273, 0.1688]]])
in0Con85674 = tf.constant([[[0.7349, 0.8297], [0.6231, 0.4947]]])
in0Sub48297 = tf.constant([[[0.0698, 0.3559, 0.6952], [0.1694, 0.9604, 0.5343]]])
in1Sub48297 = tf.constant([[[0.5779, 0.3364, 0.1846], [0.6093, 0.0476, 0.7157]]])
in0Con36124 = tf.constant([[[0.4148], [0.7101]]])
in0Min29293 = tf.constant([[[[[0.0234], [0.0345]], [[0.4885], [0.392]]], [[[0.8255], [0.7607]], [[0.1489], [0.9269]]]]])
in1Min29293 = tf.constant([[[[[0.7143], [0.9538]], [[0.6662], [0.457]]], [[[0.8989], [0.3088]], [[0.1685], [0.28]]]]])
print (np.array2string(model.predict([in0Mul51581,in1Mul51581,in0Con85674,in0Sub48297,in1Sub48297,in0Con36124,in0Min29293,in1Min29293],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Ave99728.png')

LMul51581 = multiply_layer([[[[0.3411, 0.9957], [0.7189, 0.849]]], [[[0.8405, 0.8907], [0.0273, 0.1688]]]], Mul51581), 
LCon85674 = concatenate_layer([Mul51581,[[[0.7349, 0.8297], [0.6231, 0.4947]]]], 2, Con85674), 
LSub48297 = subtract_layer([[[0.0698, 0.3559, 0.6952], [0.1694, 0.9604, 0.5343]]], [[[0.5779, 0.3364, 0.1846], [0.6093, 0.0476, 0.7157]]], Sub48297), 
LCon36124 = concatenate_layer([Sub48297,[[[0.4148], [0.7101]]]], 2, Con36124), 
LMin29293 = minimum_layer([[[[[[0.0234], [0.0345]], [[0.4885], [0.392]]], [[[0.8255], [0.7607]], [[0.1489], [0.9269]]]]], [[[[[0.7143], [0.9538]], [[0.6662], [0.457]]], [[[0.8989], [0.3088]], [[0.1685], [0.28]]]]]], Min29293), 
LRes98144 = reshape_layer(Min29293, [2, 2, 2], Res98144), 
LRes54224 = reshape_layer(Res98144, [2, 4], Res54224), 
LAve68216 = average_pooling1D_layer(Res54224, 2, 1, true, Ave68216), 
LSub18740 = subtract_layer(Con36124,Ave68216, Sub18740), 
LAve99728 = average_layer([Con85674,Sub18740], Ave99728), 
exec_layers([LMul51581,LCon85674,LSub48297,LCon36124,LMin29293,LRes98144,LRes54224,LAve68216,LSub18740,LAve99728],["Mul51581","Con85674","Sub48297","Con36124","Min29293","Res98144","Res54224","Ave68216","Sub18740","Ave99728"],Ave99728,"Ave99728")

Actual (Unparsed): [[[-0.3229277, 0.3673600, 0.4634000, 0.4542500], [-0.6228870, 0.3736556, 0.1464000, 0.4624000]]]

Expected (Unparsed): [[[-0.322927725,0.36735999500000005,0.46340000000000003,0.45425],[-0.622887015,0.37365560000000003,0.14639999999999997,0.4623999999999999]]]

Actual:   [[[-0.3229, 0.3674, 0.4634, 0.4543], [-0.6228, 0.3737, 0.1464, 0.4624]]]

Expected: [[[-0.3229, 0.3674, 0.4635, 0.4543], [-0.6228, 0.3737, 0.1464, 0.4624]]]