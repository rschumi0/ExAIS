import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Ave44639 = tf.keras.layers.Input(shape=([1, 1]))
in1Ave44639 = tf.keras.layers.Input(shape=([1, 1]))
in0Con95672 = tf.keras.layers.Input(shape=([2, 3, 5, 3]))
in0Con80641 = tf.keras.layers.Input(shape=([2, 1, 2, 2]))

Ave44639 = keras.layers.Average(name = 'Ave44639', )([in0Ave44639,in1Ave44639])
Res15404 = keras.layers.Reshape((1, 1, 1), name = 'Res15404', )(Ave44639)
Res79872 = keras.layers.Reshape((1, 1, 1, 1), name = 'Res79872', )(Res15404)
Con37225 = keras.layers.Conv3DTranspose(4, (1, 1, 1),strides=(2, 7, 1), padding='valid', name = 'Con37225', )(Res79872)
Res37889 = keras.layers.Reshape((2, 7, 4), name = 'Res37889', )(Con37225)
Con50950 = keras.layers.Conv2D(3, (1, 4),strides=(12, 2), padding='valid', dilation_rate=(1, 1), name = 'Con50950', )(Res37889)
Res21698 = keras.layers.Reshape((1, 2, 3, 1), name = 'Res21698', )(Con50950)
Zer91352 = keras.layers.ZeroPadding3D(padding=((1, 0), (1, 0), (2, 0)), name = 'Zer91352', )(Res21698)
Con95672 = keras.layers.Concatenate(axis=4, name = 'Con95672', )([Zer91352,in0Con95672])
Con80641 = keras.layers.Conv3D(4, (1, 1, 1),strides=(1, 1, 6), padding='valid', dilation_rate=(1, 1, 1), name = 'Con80641', )(in0Con80641)
Zer76149 = keras.layers.ZeroPadding3D(padding=((0, 0), (2, 0), (4, 0)), name = 'Zer76149', )(Con80641)
Mul93406 = keras.layers.Multiply(name = 'Mul93406', )([Con95672,Zer76149])
model = tf.keras.models.Model(inputs=[in0Ave44639,in1Ave44639,in0Con95672,in0Con80641], outputs=Mul93406)
w = model.get_layer('Con37225').get_weights() 
w[0] = np.array([[[[[0.8127], [0.9301], [0.7219], [0.0125]]]]])
w[1] = np.array([0, 0, 0, 0])
model.get_layer('Con37225').set_weights(w) 
w = model.get_layer('Con50950').get_weights() 
w[0] = np.array([[[[0.1576, 0.7647, 0.8625], [0.2595, 0.3866, 0.6783], [0.0981, 0.4608, 0.1977], [0.2284, 0.76, 0.7346]], [[0.2895, 0.8911, 0.1029], [0.5523, 0.5619, 0.9567], [0.2719, 0.9414, 0.394], [0.7089, 0.3076, 0.1703]], [[0.981, 0.8036, 0.5796], [0.8479, 0.4409, 0.2487], [0.5093, 0.5239, 0.4239], [0.0465, 0.5358, 0.734]], [[0.3802, 0.862, 0.287], [0.4442, 0.4795, 0.0532], [0.8294, 0.0202, 0.4112], [0.0179, 0.685, 0.171]]]])
w[1] = np.array([0, 0, 0])
model.get_layer('Con50950').set_weights(w) 
w = model.get_layer('Con80641').get_weights() 
w[0] = np.array([[[[[0.4849, 0.9511, 0.9331, 0.6515], [0.4643, 0.541, 0.0378, 0.9448]]]]])
w[1] = np.array([0, 0, 0, 0])
model.get_layer('Con80641').set_weights(w) 
in0Ave44639 = tf.constant([[[0.4037]]])
in1Ave44639 = tf.constant([[[0.8453]]])
in0Con95672 = tf.constant([[[[[0.3406, 0.0298, 0.1368], [0.1096, 0.9773, 0.9133], [0.1041, 0.7461, 0.3343], [0.2015, 0.7238, 0.1435], [0.8681, 0.461, 0.8445]], [[0.1945, 0.0954, 0.7091], [0.1855, 0.6542, 0.7857], [0.2754, 0.8496, 0.083], [0.3589, 0.0992, 0.2788], [0.677, 0.2545, 0.7647]], [[0.8, 0.1695, 0.21], [0.8187, 0.5279, 0.808], [0.7113, 0.5576, 0.671], [0.1302, 0.3584, 0.5246], [0.2216, 0.8973, 0.5276]]], [[[0.4155, 0.6016, 0.0753], [0.5075, 0.9545, 0.0812], [0.1981, 0.231, 0.5742], [0.6945, 0.7976, 0.8394], [0.4084, 0.9311, 0.8359]], [[0.5703, 0.1912, 0.7032], [0.2409, 0.8841, 0.1434], [0.9548, 0.7105, 0.319], [0.8249, 0.8139, 0.9261], [0.2925, 0.231, 0.3665]], [[0.1944, 0.9606, 0.121], [0.9786, 0.3249, 0.2834], [0.6793, 0.5828, 0.2401], [0.652, 0.1324, 0.5072], [0.4171, 0.7839, 0.869]]]]])
in0Con80641 = tf.constant([[[[[0.5775, 0.5535], [0.9569, 0.7229]]], [[[0.0081, 0.0789], [0.2619, 0.1283]]]]])
print (np.array2string(model.predict([in0Ave44639,in1Ave44639,in0Con95672,in0Con80641],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Mul93406.png')

LAve44639 = average_layer([[[[0.4037]]], [[[0.8453]]]], Ave44639), 
LRes15404 = reshape_layer(Ave44639, [1, 1, 1], Res15404), 
LRes79872 = reshape_layer(Res15404, [1, 1, 1, 1], Res79872), 
LCon37225 = conv3D_transpose_layer(Res79872, 1, 1, 1,[[[[[0.8127], [0.9301], [0.7219], [0.0125]]]]],[0, 0, 0, 0], 2, 7, 1, false, Con37225), 
LRes37889 = reshape_layer(Con37225, [2, 7, 4], Res37889), 
LCon50950 = conv2D_layer(Res37889, 1, 4,[[[[0.1576, 0.7647, 0.8625], [0.2595, 0.3866, 0.6783], [0.0981, 0.4608, 0.1977], [0.2284, 0.76, 0.7346]], [[0.2895, 0.8911, 0.1029], [0.5523, 0.5619, 0.9567], [0.2719, 0.9414, 0.394], [0.7089, 0.3076, 0.1703]], [[0.981, 0.8036, 0.5796], [0.8479, 0.4409, 0.2487], [0.5093, 0.5239, 0.4239], [0.0465, 0.5358, 0.734]], [[0.3802, 0.862, 0.287], [0.4442, 0.4795, 0.0532], [0.8294, 0.0202, 0.4112], [0.0179, 0.685, 0.171]]]],[0, 0, 0], 12, 2, false, 1, 1, Con50950), 
LRes21698 = reshape_layer(Con50950, [1, 2, 3, 1], Res21698), 
LZer91352 = zero_padding3D_layer(Res21698, 1, 0, 1, 0, 2, 0, Zer91352), 
LCon95672 = concatenate_layer([Zer91352,[[[[[0.3406, 0.0298, 0.1368], [0.1096, 0.9773, 0.9133], [0.1041, 0.7461, 0.3343], [0.2015, 0.7238, 0.1435], [0.8681, 0.461, 0.8445]], [[0.1945, 0.0954, 0.7091], [0.1855, 0.6542, 0.7857], [0.2754, 0.8496, 0.083], [0.3589, 0.0992, 0.2788], [0.677, 0.2545, 0.7647]], [[0.8, 0.1695, 0.21], [0.8187, 0.5279, 0.808], [0.7113, 0.5576, 0.671], [0.1302, 0.3584, 0.5246], [0.2216, 0.8973, 0.5276]]], [[[0.4155, 0.6016, 0.0753], [0.5075, 0.9545, 0.0812], [0.1981, 0.231, 0.5742], [0.6945, 0.7976, 0.8394], [0.4084, 0.9311, 0.8359]], [[0.5703, 0.1912, 0.7032], [0.2409, 0.8841, 0.1434], [0.9548, 0.7105, 0.319], [0.8249, 0.8139, 0.9261], [0.2925, 0.231, 0.3665]], [[0.1944, 0.9606, 0.121], [0.9786, 0.3249, 0.2834], [0.6793, 0.5828, 0.2401], [0.652, 0.1324, 0.5072], [0.4171, 0.7839, 0.869]]]]]], 4, Con95672), 
LCon80641 = conv3D_layer([[[[[0.5775, 0.5535], [0.9569, 0.7229]]], [[[0.0081, 0.0789], [0.2619, 0.1283]]]]], 1, 1, 1,[[[[[0.4849, 0.9511, 0.9331, 0.6515], [0.4643, 0.541, 0.0378, 0.9448]]]]],[0, 0, 0, 0], 1, 1, 6, false, 1, 1, 1, Con80641), 
LZer76149 = zero_padding3D_layer(Con80641, 0, 0, 2, 0, 4, 0, Zer76149), 
LMul93406 = multiply_layer([Con95672,Zer76149], Mul93406), 
exec_layers([LAve44639,LRes15404,LRes79872,LCon37225,LRes37889,LCon50950,LRes21698,LZer91352,LCon95672,LCon80641,LZer76149,LMul93406],["Ave44639","Res15404","Res79872","Con37225","Res37889","Con50950","Res21698","Zer91352","Con95672","Con80641","Zer76149","Mul93406"],Mul93406,"Mul93406")

Actual (Unparsed): [[[[[0.0000000, 0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000, 0.0000000]], [[0.0000000, 0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000, 0.0000000]], [[0.0000000, 0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.1880727, 0.5022974, 0.4744116]]], [[[0.0000000, 0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000, 0.0000000]], [[0.0000000, 0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000, 0.0000000]], [[0.0000000, 0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0210172, 0.0082627, 0.0693652]]]]]

Expected (Unparsed): [[[[[0,0.0,0.0,0.0],[0,0.0,0.0,0.0],[0,0.0,0.0,0.0],[0,0.0,0.0,0.0],[0,0.0,0.0,0.0]],[[0,0.0,0.0,0.0],[0,0.0,0.0,0.0],[0,0.0,0.0,0.0],[0,0.0,0.0,0.0],[0,0.0,0.0,0.0]],[[0,0.0,0.0,0.0],[0,0.0,0.0,0.0],[0,0.0,0.0,0.0],[0,0.0,0.0,0.0],[0.0,0.188072751,0.502297368615,0.4744116151799999]]],[[[0,0.0,0.0,0.0],[0,0.0,0.0,0.0],[0,0.0,0.0,0.0],[0,0.0,0.0,0.0],[0,0.0,0.0,0.0]],[[0,0.0,0.0,0.0],[0,0.0,0.0,0.0],[0.0,0.0,0.0,0.0],[0.0,0.0,0.0,0.0],[0.0,0.0,0.0,0.0]],[[0,0.0,0.0,0.0],[0,0.0,0.0,0.0],[0.0,0.0,0.0,0.0],[0.0,0.0,0.0,0.0],[0.0,0.021017172651000005,0.008262721467,0.06936520502999999]]]]]

Actual:   [[[[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]], [[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]], [[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0.1881, 0.5023, 0.4745]]], [[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]], [[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]], [[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0.0211, 0.0083, 0.0694]]]]]

Expected: [[[[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]], [[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]], [[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0.1881, 0.5023, 0.4745]]], [[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]], [[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]], [[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0.0211, 0.0083, 0.0694]]]]]