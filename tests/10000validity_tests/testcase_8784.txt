import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Glo4114 = tf.keras.layers.Input(shape=([2, 1, 1]))
in0Mul53794 = tf.keras.layers.Input(shape=([1, 2, 1]))
in1Mul53794 = tf.keras.layers.Input(shape=([1, 2, 1]))
in0Con9809 = tf.keras.layers.Input(shape=([1]))
in0Den82308 = tf.keras.layers.Input(shape=([2, 2, 3]))

Glo4114 = keras.layers.GlobalMaxPool2D(name = 'Glo4114', )(in0Glo4114)
Res30942 = keras.layers.Reshape((1, 1), name = 'Res30942', )(Glo4114)
Res12708 = keras.layers.Reshape((1, 1, 1), name = 'Res12708', )(Res30942)
Zer90899 = keras.layers.ZeroPadding2D(padding=((0, 0), (1, 0)), name = 'Zer90899', )(Res12708)
Mul53794 = keras.layers.Multiply(name = 'Mul53794', )([in0Mul53794,in1Mul53794])
Mul36419 = keras.layers.Multiply(name = 'Mul36419', )([Zer90899,Mul53794])
Res4071 = keras.layers.Reshape((1, 2), name = 'Res4071', )(Mul36419)
Fla84968 = keras.layers.Flatten(name = 'Fla84968', )(Res4071)
Con9809 = keras.layers.Concatenate(axis=1, name = 'Con9809', )([Fla84968,in0Con9809])
Den82308 = keras.layers.Dense(3,name = 'Den82308', )(in0Den82308)
Glo24319 = keras.layers.GlobalAveragePooling2D(name = 'Glo24319', )(Den82308)
Ave17794 = keras.layers.Average(name = 'Ave17794', )([Con9809,Glo24319])
model = tf.keras.models.Model(inputs=[in0Glo4114,in0Mul53794,in1Mul53794,in0Con9809,in0Den82308], outputs=Ave17794)
w = model.get_layer('Den82308').get_weights() 
w[0] = np.array([[0.1254, 0.8261, 0.5257], [0.9639, 0.85, 0.8404], [0.87, 0.4641, 0.9497]])
w[1] = np.array([0.2516, 0.8786, 0.8716])
model.get_layer('Den82308').set_weights(w) 
in0Glo4114 = tf.constant([[[[1.2765]], [[1.9707]]]])
in0Mul53794 = tf.constant([[[[0.4191], [0.2102]]]])
in1Mul53794 = tf.constant([[[[0.3816], [0.8694]]]])
in0Con9809 = tf.constant([[0.7039]])
in0Den82308 = tf.constant([[[[0.8164, 0.2532, 0.2081], [0.1301, 0.6528, 0.8164]], [[0.63, 0.392, 0.7884], [0.7203, 0.627, 0.6107]]]])
print (np.array2string(model.predict([in0Glo4114,in0Mul53794,in1Mul53794,in0Con9809,in0Den82308],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Ave17794.png')

LGlo4114 = global_max_pool2D_layer([[[[1.2765]], [[1.9707]]]], Glo4114), 
LRes30942 = reshape_layer(Glo4114, [1, 1], Res30942), 
LRes12708 = reshape_layer(Res30942, [1, 1, 1], Res12708), 
LZer90899 = zero_padding2D_layer(Res12708, 0, 0, 1, 0, Zer90899), 
LMul53794 = multiply_layer([[[[[0.4191], [0.2102]]]], [[[[0.3816], [0.8694]]]]], Mul53794), 
LMul36419 = multiply_layer([Zer90899,Mul53794], Mul36419), 
LRes4071 = reshape_layer(Mul36419, [1, 2], Res4071), 
LFla84968 = flatten_layer(Res4071, Fla84968), 
LCon9809 = concatenate_layer([Fla84968,[[0.7039]]], 1, Con9809), 
LDen82308 = dense_layer([[[[0.8164, 0.2532, 0.2081], [0.1301, 0.6528, 0.8164]], [[0.63, 0.392, 0.7884], [0.7203, 0.627, 0.6107]]]], [[0.1254, 0.8261, 0.5257], [0.9639, 0.85, 0.8404], [0.87, 0.4641, 0.9497]],[0.2516, 0.8786, 0.8716], Den82308), 
LGlo24319 = global_average_pooling2D_layer(Den82308, Glo24319), 
LAve17794 = average_layer([Con9809,Glo24319], Ave17794), 
exec_layers([LGlo4114,LRes30942,LRes12708,LZer90899,LMul53794,LMul36419,LRes4071,LFla84968,LCon9809,LDen82308,LGlo24319,LAve17794],["Glo4114","Res30942","Res12708","Zer90899","Mul53794","Mul36419","Res4071","Fla84968","Con9809","Den82308","Glo24319","Ave17794"],Ave17794,"Ave17794")

Actual (Unparsed): [[0.6573073, 1.2016743, 1.4286113]]

Expected (Unparsed): [[0.6573072775,1.2016742785580001,1.428611335]]

Actual:   [[0.6574, 1.2017, 1.4287]]

Expected: [[0.6574, 1.2017, 1.4287]]