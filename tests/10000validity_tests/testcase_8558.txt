import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Dot14143 = tf.keras.layers.Input(shape=([3]))
in1Dot14143 = tf.keras.layers.Input(shape=([3]))
in0Con77368 = tf.keras.layers.Input(shape=([3, 29]))
in0Ave57858 = tf.keras.layers.Input(shape=([1, 1, 1]))
in1Ave57858 = tf.keras.layers.Input(shape=([1, 1, 1]))
in0Con73466 = tf.keras.layers.Input(shape=([3, 3, 5, 1]))
in0Zer20012 = tf.keras.layers.Input(shape=([1, 1, 3, 2]))
in0Cro6169 = tf.keras.layers.Input(shape=([3, 2]))
in0Con99992 = tf.keras.layers.Input(shape=([3, 28]))

Dot14143 = keras.layers.Dot(axes=(1, 1), name = 'Dot14143', )([in0Dot14143,in1Dot14143])
Res16114 = keras.layers.Reshape((1, 1), name = 'Res16114', )(Dot14143)
Zer40931 = keras.layers.ZeroPadding1D(padding=((2, 0)), name = 'Zer40931', )(Res16114)
Con77368 = keras.layers.Concatenate(axis=2, name = 'Con77368', )([Zer40931,in0Con77368])
Ave57858 = keras.layers.Average(name = 'Ave57858', )([in0Ave57858,in1Ave57858])
Res77418 = keras.layers.Reshape((1, 1, 1, 1), name = 'Res77418', )(Ave57858)
Zer74093 = keras.layers.ZeroPadding3D(padding=((2, 0), (2, 0), (4, 0)), name = 'Zer74093', )(Res77418)
Con73466 = keras.layers.Concatenate(axis=4, name = 'Con73466', )([Zer74093,in0Con73466])
Zer20012 = keras.layers.ZeroPadding3D(padding=((1, 1), (1, 1), (1, 1)), name = 'Zer20012', )(in0Zer20012)
Add76639 = keras.layers.Add(name = 'Add76639', )([Con73466,Zer20012])
Res26403 = keras.layers.Reshape((3, 3, 10), name = 'Res26403', )(Add76639)
Res50689 = keras.layers.Reshape((3, 30), name = 'Res50689', )(Res26403)
Cro6169 = keras.layers.Cropping1D(cropping=((0, 2)), name = 'Cro6169', )(in0Cro6169)
Zer10059 = keras.layers.ZeroPadding1D(padding=((2, 0)), name = 'Zer10059', )(Cro6169)
Con99992 = keras.layers.Concatenate(axis=2, name = 'Con99992', )([Zer10059,in0Con99992])
Min24692 = keras.layers.Minimum(name = 'Min24692', )([Res50689,Con99992])
Add65606 = keras.layers.Add(name = 'Add65606', )([Con77368,Min24692])
Res69051 = keras.layers.Reshape((3, 30, 1), name = 'Res69051', )(Add65606)
Cro94559 = keras.layers.Cropping2D(cropping=((0, 0), (26, 3)), name = 'Cro94559', )(Res69051)
model = tf.keras.models.Model(inputs=[in0Dot14143,in1Dot14143,in0Con77368,in0Ave57858,in1Ave57858,in0Con73466,in0Zer20012,in0Cro6169,in0Con99992], outputs=Cro94559)
in0Dot14143 = tf.constant([[0.4977, 0.0668, 0.7259]])
in1Dot14143 = tf.constant([[0.1187, 0.396, 0.311]])
in0Con77368 = tf.constant([[[0.1627, 0.1796, 0.1732, 0.0874, 0.2063, 0.855, 0.2719, 0.1618, 0.3554, 0.5742, 0.8519, 0.3541, 0.1746, 0.2342, 0.7875, 0.4642, 0.9064, 0.7757, 0.6261, 0.0129, 0.2409, 0.769, 0.3243, 0.6428, 0.6117, 0.5631, 0.5839, 0.8736, 0.6789], [0.564, 0.3656, 0.6704, 0.5957, 0.6586, 0.9305, 0.6886, 0.5108, 0.4061, 0.9323, 0.1159, 0.507, 0.3839, 0.6707, 0.7508, 0.8428, 0.9899, 0.6026, 0.3262, 0.9285, 0.0843, 0.6038, 0.1173, 0.941, 0.0777, 0.277, 0.5559, 0.3658, 0.4678], [0.8078, 0.9156, 0.0344, 0.3651, 0.4872, 0.1273, 0.4249, 0.2518, 0.037, 0.4404, 0.0845, 0.0713, 0.3025, 0.9525, 0.0453, 0.7633, 0.7109, 0.9967, 0.0091, 0.522, 0.1313, 0.9994, 0.8995, 0.3863, 0.4181, 0.6966, 0.099, 0.2475, 0.9721]]])
in0Ave57858 = tf.constant([[[[0.7587]]]])
in1Ave57858 = tf.constant([[[[0.0128]]]])
in0Con73466 = tf.constant([[[[[0.7768], [0.4796], [0.997], [0.2762], [0.4452]], [[0.7877], [0.8985], [0.5599], [0.5176], [0.152]], [[0.6125], [0.7807], [0.7451], [0.1918], [0.9084]]], [[[0.0956], [0.165], [0.4996], [0.2776], [0.3369]], [[0.2379], [0.3163], [0.5594], [0.1033], [0.1044]], [[0.085], [0.594], [0.6649], [0.8132], [0.497]]], [[[0.5618], [0.2991], [0.2713], [0.9949], [0.7698]], [[0.3459], [0.2309], [0.9522], [0.9133], [0.3583]], [[0.84], [0.9102], [0.2559], [0.2099], [0.1588]]]]])
in0Zer20012 = tf.constant([[[[[1.1398, 1.5142], [1.7906, 1.7891], [1.7855, 1.7326]]]]])
in0Cro6169 = tf.constant([[[1.5607, 1.4152], [1.2901, 1.5943], [1.0862, 1.0449]]])
in0Con99992 = tf.constant([[[0.8828, 0.9962, 0.9599, 0.4148, 0.564, 0.4269, 0.4614, 0.1233, 0.5069, 0.2734, 0.5677, 0.1486, 0.5926, 0.9711, 0.217, 0.1391, 0.7341, 0.9943, 0.3731, 0.5629, 0.0642, 0.8261, 0.9164, 0.3897, 0.5978, 0.2593, 0.5234, 0.9179], [0.0022, 0.2772, 0.2395, 0.8847, 0.791, 0.1445, 0.8381, 0.2048, 0.5984, 0.6233, 0.6024, 0.3013, 0.1896, 0.4216, 0.8652, 0.0071, 0.5149, 0.0821, 0.5013, 0.4471, 0.4234, 0.5202, 0.5778, 0.141, 0.6216, 0.3372, 0.5358, 0.8078], [0.08, 0.8444, 0.6057, 0.9979, 0.3736, 0.4654, 0.6346, 0.7296, 0.3718, 0.8075, 0.1469, 0.7671, 0.2886, 0.2325, 0.2508, 0.0381, 0.3489, 0.1989, 0.9524, 0.9631, 0.2287, 0.9957, 0.5484, 0.1428, 0.9901, 0.744, 0.03, 0.9334]]])
print (np.array2string(model.predict([in0Dot14143,in1Dot14143,in0Con77368,in0Ave57858,in1Ave57858,in0Con73466,in0Zer20012,in0Cro6169,in0Con99992],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Cro94559.png')

LDot14143 = dot_layer([[0.4977, 0.0668, 0.7259]], [[0.1187, 0.396, 0.311]], 1, 1, Dot14143), 
LRes16114 = reshape_layer(Dot14143, [1, 1], Res16114), 
LZer40931 = zero_padding1D_layer(Res16114, 2, 0, Zer40931), 
LCon77368 = concatenate_layer([Zer40931,[[[0.1627, 0.1796, 0.1732, 0.0874, 0.2063, 0.855, 0.2719, 0.1618, 0.3554, 0.5742, 0.8519, 0.3541, 0.1746, 0.2342, 0.7875, 0.4642, 0.9064, 0.7757, 0.6261, 0.0129, 0.2409, 0.769, 0.3243, 0.6428, 0.6117, 0.5631, 0.5839, 0.8736, 0.6789], [0.564, 0.3656, 0.6704, 0.5957, 0.6586, 0.9305, 0.6886, 0.5108, 0.4061, 0.9323, 0.1159, 0.507, 0.3839, 0.6707, 0.7508, 0.8428, 0.9899, 0.6026, 0.3262, 0.9285, 0.0843, 0.6038, 0.1173, 0.941, 0.0777, 0.277, 0.5559, 0.3658, 0.4678], [0.8078, 0.9156, 0.0344, 0.3651, 0.4872, 0.1273, 0.4249, 0.2518, 0.037, 0.4404, 0.0845, 0.0713, 0.3025, 0.9525, 0.0453, 0.7633, 0.7109, 0.9967, 0.0091, 0.522, 0.1313, 0.9994, 0.8995, 0.3863, 0.4181, 0.6966, 0.099, 0.2475, 0.9721]]]], 2, Con77368), 
LAve57858 = average_layer([[[[[0.7587]]]], [[[[0.0128]]]]], Ave57858), 
LRes77418 = reshape_layer(Ave57858, [1, 1, 1, 1], Res77418), 
LZer74093 = zero_padding3D_layer(Res77418, 2, 0, 2, 0, 4, 0, Zer74093), 
LCon73466 = concatenate_layer([Zer74093,[[[[[0.7768], [0.4796], [0.997], [0.2762], [0.4452]], [[0.7877], [0.8985], [0.5599], [0.5176], [0.152]], [[0.6125], [0.7807], [0.7451], [0.1918], [0.9084]]], [[[0.0956], [0.165], [0.4996], [0.2776], [0.3369]], [[0.2379], [0.3163], [0.5594], [0.1033], [0.1044]], [[0.085], [0.594], [0.6649], [0.8132], [0.497]]], [[[0.5618], [0.2991], [0.2713], [0.9949], [0.7698]], [[0.3459], [0.2309], [0.9522], [0.9133], [0.3583]], [[0.84], [0.9102], [0.2559], [0.2099], [0.1588]]]]]], 4, Con73466), 
LZer20012 = zero_padding3D_layer([[[[[1.1398, 1.5142], [1.7906, 1.7891], [1.7855, 1.7326]]]]], 1, 1, 1, 1, 1, 1, Zer20012), 
LAdd76639 = add_layer([Con73466,Zer20012], Add76639), 
LRes26403 = reshape_layer(Add76639, [3, 3, 10], Res26403), 
LRes50689 = reshape_layer(Res26403, [3, 30], Res50689), 
LCro6169 = cropping1D_layer([[[1.5607, 1.4152], [1.2901, 1.5943], [1.0862, 1.0449]]], 0, 2, Cro6169), 
LZer10059 = zero_padding1D_layer(Cro6169, 2, 0, Zer10059), 
LCon99992 = concatenate_layer([Zer10059,[[[0.8828, 0.9962, 0.9599, 0.4148, 0.564, 0.4269, 0.4614, 0.1233, 0.5069, 0.2734, 0.5677, 0.1486, 0.5926, 0.9711, 0.217, 0.1391, 0.7341, 0.9943, 0.3731, 0.5629, 0.0642, 0.8261, 0.9164, 0.3897, 0.5978, 0.2593, 0.5234, 0.9179], [0.0022, 0.2772, 0.2395, 0.8847, 0.791, 0.1445, 0.8381, 0.2048, 0.5984, 0.6233, 0.6024, 0.3013, 0.1896, 0.4216, 0.8652, 0.0071, 0.5149, 0.0821, 0.5013, 0.4471, 0.4234, 0.5202, 0.5778, 0.141, 0.6216, 0.3372, 0.5358, 0.8078], [0.08, 0.8444, 0.6057, 0.9979, 0.3736, 0.4654, 0.6346, 0.7296, 0.3718, 0.8075, 0.1469, 0.7671, 0.2886, 0.2325, 0.2508, 0.0381, 0.3489, 0.1989, 0.9524, 0.9631, 0.2287, 0.9957, 0.5484, 0.1428, 0.9901, 0.744, 0.03, 0.9334]]]], 2, Con99992), 
LMin24692 = minimum_layer([Res50689,Con99992], Min24692), 
LAdd65606 = add_layer([Con77368,Min24692], Add65606), 
LRes69051 = reshape_layer(Add65606, [3, 30, 1], Res69051), 
LCro94559 = cropping2D_layer(Res69051, 0, 0, 26, 3, Cro94559), 
exec_layers([LDot14143,LRes16114,LZer40931,LCon77368,LAve57858,LRes77418,LZer74093,LCon73466,LZer20012,LAdd76639,LRes26403,LRes50689,LCro6169,LZer10059,LCon99992,LMin24692,LAdd65606,LRes69051,LCro94559],["Dot14143","Res16114","Zer40931","Con77368","Ave57858","Res77418","Zer74093","Con73466","Zer20012","Add76639","Res26403","Res50689","Cro6169","Zer10059","Con99992","Min24692","Add65606","Res69051","Cro94559"],Cro94559,"Cro94559")

Actual (Unparsed): [[[[0.5631000]], [[0.2770000]], [[0.6966000]]]]

Expected (Unparsed): [[[[0.5631]],[[0.277]],[[0.6966]]]]

Actual:   [[[[0.5631]], [[0.277]], [[0.6966]]]]

Expected: [[[[0.5631]], [[0.277]], [[0.6966]]]]