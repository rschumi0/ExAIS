import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Max58017 = tf.keras.layers.Input(shape=([1, 1]))
in1Max58017 = tf.keras.layers.Input(shape=([1, 1]))
in0Con37784 = tf.keras.layers.Input(shape=([4, 1, 3]))
in0Den96149 = tf.keras.layers.Input(shape=([4, 3, 3]))

Max58017 = keras.layers.Maximum(name = 'Max58017', )([in0Max58017,in1Max58017])
Res57231 = keras.layers.Reshape((1, 1, 1), name = 'Res57231', )(Max58017)
Zer33803 = keras.layers.ZeroPadding2D(padding=((3, 0), (0, 0)), name = 'Zer33803', )(Res57231)
Con37784 = keras.layers.Concatenate(axis=3, name = 'Con37784', )([Zer33803,in0Con37784])
Den96149 = keras.layers.Dense(4,name = 'Den96149', )(in0Den96149)
Con80138 = keras.layers.Conv2D(4, (2, 3),strides=(1, 6), padding='same', dilation_rate=(1, 1), name = 'Con80138', )(Den96149)
Ave71059 = keras.layers.Average(name = 'Ave71059', )([Con37784,Con80138])
Res96498 = keras.layers.Reshape((4, 1, 4, 1), name = 'Res96498', )(Ave71059)
Up_56016 = keras.layers.UpSampling3D(size=(1, 2, 1), name = 'Up_56016', )(Res96498)
model = tf.keras.models.Model(inputs=[in0Max58017,in1Max58017,in0Con37784,in0Den96149], outputs=Up_56016)
w = model.get_layer('Den96149').get_weights() 
w[0] = np.array([[0.3303, 0.0187, 0.9962, 0.778], [0.4841, 0.1632, 0.0525, 0.535], [0.5176, 0.2778, 0.2329, 0.5182]])
w[1] = np.array([0.1504, 0.6654, 0.6221, 0.919])
model.get_layer('Den96149').set_weights(w) 
w = model.get_layer('Con80138').get_weights() 
w[0] = np.array([[[[0.1409, 0.4635, 0.5637, 0.1756], [0.1124, 0.0152, 0.8484, 0.3691], [0.8069, 0.7764, 0.7257, 0.5352], [0.9989, 0.1599, 0.175, 0.4255]], [[0.9052, 0.8989, 0.283, 0.5631], [0.2043, 0.3034, 0.9461, 0.2341], [0.0855, 0.5471, 0.1684, 0.3721], [0.9536, 0.0402, 0.3828, 0.7749]], [[0.7103, 0.7188, 0.0331, 0.0083], [0.115, 0.387, 0.2527, 0.2955], [0.5868, 0.0827, 0.8493, 0.6718], [0.9521, 0.8106, 0.9634, 0.69]]], [[[0.0627, 0.88, 0.7066, 0.0042], [0.9169, 0.52, 0.8053, 0.2287], [0.8983, 0.4048, 0.7762, 0.574], [0.0156, 0.2137, 0.4424, 0.8929]], [[0.5738, 0.3791, 0.6638, 0.937], [0.5353, 0.7246, 0.9965, 0.8186], [0.9428, 0.7903, 0.6262, 0.9017], [0.1638, 0.2531, 0.3252, 0.6034]], [[0.3913, 0.0053, 0.3715, 0.8785], [0.7904, 0.1301, 0.3392, 0.4797], [0.9127, 0.2299, 0.4182, 0.4404], [0.5208, 0.3012, 0.4575, 0.6085]]]])
w[1] = np.array([0, 0, 0, 0])
model.get_layer('Con80138').set_weights(w) 
in0Max58017 = tf.constant([[[0.2417]]])
in1Max58017 = tf.constant([[[0.5695]]])
in0Con37784 = tf.constant([[[[0.8033, 0.209, 0.5235]], [[0.113, 0.4424, 0.4929]], [[0.76, 0.4382, 0.9999]], [[0.4953, 0.5471, 0.2347]]]])
in0Den96149 = tf.constant([[[[0.1543, 0.4793, 0.0392], [0.0363, 0.5371, 0.0403], [0.5856, 0.5143, 0.8082]], [[0.5468, 0.3464, 0.492], [0.9963, 0.8875, 0.2277], [0.5355, 0.5125, 0.2996]], [[0.47, 0.9285, 0.8698], [0.0181, 0.1341, 0.475], [0.9207, 0.2133, 0.7778]], [[0.5029, 0.0512, 0.3321], [0.8559, 0.3299, 0.3372], [0.445, 0.832, 0.4523]]]])
print (np.array2string(model.predict([in0Max58017,in1Max58017,in0Con37784,in0Den96149],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Up_56016.png')

LMax58017 = maximum_layer([[[[0.2417]]], [[[0.5695]]]], Max58017), 
LRes57231 = reshape_layer(Max58017, [1, 1, 1], Res57231), 
LZer33803 = zero_padding2D_layer(Res57231, 3, 0, 0, 0, Zer33803), 
LCon37784 = concatenate_layer([Zer33803,[[[[0.8033, 0.209, 0.5235]], [[0.113, 0.4424, 0.4929]], [[0.76, 0.4382, 0.9999]], [[0.4953, 0.5471, 0.2347]]]]], 3, Con37784), 
LDen96149 = dense_layer([[[[0.1543, 0.4793, 0.0392], [0.0363, 0.5371, 0.0403], [0.5856, 0.5143, 0.8082]], [[0.5468, 0.3464, 0.492], [0.9963, 0.8875, 0.2277], [0.5355, 0.5125, 0.2996]], [[0.47, 0.9285, 0.8698], [0.0181, 0.1341, 0.475], [0.9207, 0.2133, 0.7778]], [[0.5029, 0.0512, 0.3321], [0.8559, 0.3299, 0.3372], [0.445, 0.832, 0.4523]]]], [[0.3303, 0.0187, 0.9962, 0.778], [0.4841, 0.1632, 0.0525, 0.535], [0.5176, 0.2778, 0.2329, 0.5182]],[0.1504, 0.6654, 0.6221, 0.919], Den96149), 
LCon80138 = conv2D_layer(Den96149, 2, 3,[[[[0.1409, 0.4635, 0.5637, 0.1756], [0.1124, 0.0152, 0.8484, 0.3691], [0.8069, 0.7764, 0.7257, 0.5352], [0.9989, 0.1599, 0.175, 0.4255]], [[0.9052, 0.8989, 0.283, 0.5631], [0.2043, 0.3034, 0.9461, 0.2341], [0.0855, 0.5471, 0.1684, 0.3721], [0.9536, 0.0402, 0.3828, 0.7749]], [[0.7103, 0.7188, 0.0331, 0.0083], [0.115, 0.387, 0.2527, 0.2955], [0.5868, 0.0827, 0.8493, 0.6718], [0.9521, 0.8106, 0.9634, 0.69]]], [[[0.0627, 0.88, 0.7066, 0.0042], [0.9169, 0.52, 0.8053, 0.2287], [0.8983, 0.4048, 0.7762, 0.574], [0.0156, 0.2137, 0.4424, 0.8929]], [[0.5738, 0.3791, 0.6638, 0.937], [0.5353, 0.7246, 0.9965, 0.8186], [0.9428, 0.7903, 0.6262, 0.9017], [0.1638, 0.2531, 0.3252, 0.6034]], [[0.3913, 0.0053, 0.3715, 0.8785], [0.7904, 0.1301, 0.3392, 0.4797], [0.9127, 0.2299, 0.4182, 0.4404], [0.5208, 0.3012, 0.4575, 0.6085]]]],[0, 0, 0, 0], 1, 6, true, 1, 1, Con80138), 
LAve71059 = average_layer([Con37784,Con80138], Ave71059), 
LRes96498 = reshape_layer(Ave71059, [4, 1, 4, 1], Res96498), 
LUp_56016 = up_sampling3D_layer(Res96498, 1, 2, 1, Up_56016), 
exec_layers([LMax58017,LRes57231,LZer33803,LCon37784,LDen96149,LCon80138,LAve71059,LRes96498,LUp_56016],["Max58017","Res57231","Zer33803","Con37784","Den96149","Con80138","Ave71059","Res96498","Up_56016"],Up_56016,"Up_56016")

Actual (Unparsed): [[[[[7.8381890], [5.8764321], [7.5803018], [8.0243190]], [[7.8381890], [5.8764321], [7.5803018], [8.0243190]]], [[[8.6204788], [5.9369864], [8.1450195], [8.4175233]], [[8.6204788], [5.9369864], [8.1450195], [8.4175233]]], [[[8.5302050], [6.0426777], [8.1564094], [8.5498261]], [[8.5302050], [6.0426777], [8.1564094], [8.5498261]]], [[[4.6938534], [3.2545497], [3.9053919], [3.5249952]], [[4.6938534], [3.2545497], [3.9053919], [3.5249952]]]]]

Expected (Unparsed): [[[[[7.838189019376501],[5.8764321241045],[7.580301815033499],[8.024318942104001]],[[7.838189019376501],[5.8764321241045],[7.580301815033499],[8.024318942104001]]],[[[8.6204788378585],[5.936986399711],[8.145019456905],[8.417523343189998]],[[8.6204788378585],[5.936986399711],[8.145019456905],[8.417523343189998]]],[[[8.5302050397275],[6.042677662071501],[8.1564093537215],[8.549826057654501]],[[8.5302050397275],[6.042677662071501],[8.1564093537215],[8.549826057654501]]],[[[4.693853347679],[3.2545497451945],[3.905391876474],[3.5249951777004997]],[[4.693853347679],[3.2545497451945],[3.905391876474],[3.5249951777004997]]]]]

Actual:   [[[[[7.8382], [5.8765], [7.5804], [8.0244]], [[7.8382], [5.8765], [7.5804], [8.0244]]], [[[8.6205], [5.937], [8.1451], [8.4176]], [[8.6205], [5.937], [8.1451], [8.4176]]], [[[8.5303], [6.0427], [8.1565], [8.5499]], [[8.5303], [6.0427], [8.1565], [8.5499]]], [[[4.6939], [3.2546], [3.9054], [3.525]], [[4.6939], [3.2546], [3.9054], [3.525]]]]]

Expected: [[[[[7.8382], [5.8765], [7.5804], [8.0244]], [[7.8382], [5.8765], [7.5804], [8.0244]]], [[[8.6205], [5.937], [8.1451], [8.4176]], [[8.6205], [5.937], [8.1451], [8.4176]]], [[[8.5303], [6.0427], [8.1565], [8.5499]], [[8.5303], [6.0427], [8.1565], [8.5499]]], [[[4.6939], [3.2546], [3.9054], [3.525]], [[4.6939], [3.2546], [3.9054], [3.525]]]]]