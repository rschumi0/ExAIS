import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Sep97777 = tf.keras.layers.Input(shape=([1, 1, 1]))
in0Con30626 = tf.keras.layers.Input(shape=([1, 2, 1]))
in0Min63541 = tf.keras.layers.Input(shape=([1, 2, 2]))
in1Min63541 = tf.keras.layers.Input(shape=([1, 2, 2]))

Sep97777 = keras.layers.SeparableConv2D(3, (1, 1),strides=(1, 1), padding='same', name = 'Sep97777', )(in0Sep97777)
Dep98423 = keras.layers.DepthwiseConv2D((1, 1),strides=(1, 1), padding='valid', name = 'Dep98423', )(Sep97777)
Res16414 = keras.layers.Reshape((1, 1, 3, 1), name = 'Res16414', )(Dep98423)
Glo8358 = keras.layers.GlobalMaxPool3D(name = 'Glo8358', )(Res16414)
Res58454 = keras.layers.Reshape((1, 1), name = 'Res58454', )(Glo8358)
Res81789 = keras.layers.Reshape((1, 1, 1), name = 'Res81789', )(Res58454)
Zer29959 = keras.layers.ZeroPadding2D(padding=((0, 0), (1, 0)), name = 'Zer29959', )(Res81789)
Con30626 = keras.layers.Concatenate(axis=3, name = 'Con30626', )([Zer29959,in0Con30626])
Min63541 = keras.layers.Minimum(name = 'Min63541', )([in0Min63541,in1Min63541])
Ave42283 = keras.layers.Average(name = 'Ave42283', )([Con30626,Min63541])
model = tf.keras.models.Model(inputs=[in0Sep97777,in0Con30626,in0Min63541,in1Min63541], outputs=Ave42283)
w = model.get_layer('Sep97777').get_weights() 
w[0] = np.array([[[[0.5195]]]])
w[1] = np.array([[[[0.144, 0.3262, 0.8555]]]])
w[2] = np.array([0, 0, 0])
model.get_layer('Sep97777').set_weights(w) 
w = model.get_layer('Dep98423').get_weights() 
w[0] = np.array([[[[0.6721], [0.9047], [0.1629]]]])
w[1] = np.array([0, 0, 0])
model.get_layer('Dep98423').set_weights(w) 
in0Sep97777 = tf.constant([[[[0.3551]]]])
in0Con30626 = tf.constant([[[[0.0416], [0.6752]]]])
in0Min63541 = tf.constant([[[[0.2948, 0.8456], [0.3999, 0.8359]]]])
in1Min63541 = tf.constant([[[[0.7708, 0.3925], [0.704, 0.6641]]]])
print (np.array2string(model.predict([in0Sep97777,in0Con30626,in0Min63541,in1Min63541],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Ave42283.png')

LSep97777 = separable_conv2D_layer([[[[0.3551]]]], 1, 1,[[[[[0.5195]]]],[[[[0.144, 0.3262, 0.8555]]]]],[0, 0, 0], 1, 1, true, Sep97777), 
LDep98423 = depthwise_conv2D_layer(Sep97777, 1, 1,[[[[0.6721], [0.9047], [0.1629]]]],[0, 0, 0], 1, 1, false, Dep98423), 
LRes16414 = reshape_layer(Dep98423, [1, 1, 3, 1], Res16414), 
LGlo8358 = global_max_pool3D_layer(Res16414, Glo8358), 
LRes58454 = reshape_layer(Glo8358, [1, 1], Res58454), 
LRes81789 = reshape_layer(Res58454, [1, 1, 1], Res81789), 
LZer29959 = zero_padding2D_layer(Res81789, 0, 0, 1, 0, Zer29959), 
LCon30626 = concatenate_layer([Zer29959,[[[[0.0416], [0.6752]]]]], 3, Con30626), 
LMin63541 = minimum_layer([[[[[0.2948, 0.8456], [0.3999, 0.8359]]]], [[[[0.7708, 0.3925], [0.704, 0.6641]]]]], Min63541), 
LAve42283 = average_layer([Con30626,Min63541], Ave42283), 
exec_layers([LSep97777,LDep98423,LRes16414,LGlo8358,LRes58454,LRes81789,LZer29959,LCon30626,LMin63541,LAve42283],["Sep97777","Dep98423","Res16414","Glo8358","Res58454","Res81789","Zer29959","Con30626","Min63541","Ave42283"],Ave42283,"Ave42283")

Actual (Unparsed): [[[[0.1474000, 0.2170500], [0.2271704, 0.6696500]]]]

Expected (Unparsed): [[[[0.1474,0.21705000000000002],[0.22717041709463648,0.6696500000000001]]]]

Actual:   [[[[0.1474, 0.2171], [0.2272, 0.6697]]]]

Expected: [[[[0.1474, 0.2171], [0.2272, 0.6697]]]]