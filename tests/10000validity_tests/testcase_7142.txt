import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Sim59294 = tf.keras.layers.Input(shape=([3, 3]))

Sim59294 = keras.layers.SimpleRNN(1,name = 'Sim59294', )(in0Sim59294)
Res82599 = keras.layers.Reshape((1, 1), name = 'Res82599', )(Sim59294)
Res93082 = keras.layers.Reshape((1, 1, 1), name = 'Res93082', )(Res82599)
Loc53957 = keras.layers.LocallyConnected2D(2, (1, 1),strides=(4, 7), name = 'Loc53957', )(Res93082)
Res65659 = keras.layers.Reshape((1, 2), name = 'Res65659', )(Loc53957)
Cro6339 = keras.layers.Cropping1D(cropping=((0, 0)), name = 'Cro6339', )(Res65659)
model = tf.keras.models.Model(inputs=[in0Sim59294], outputs=Cro6339)
w = model.get_layer('Sim59294').get_weights() 
w[0] = np.array([[6], [6], [10]])
w[1] = np.array([[9]])
w[2] = np.array([2])
model.get_layer('Sim59294').set_weights(w) 
w = model.get_layer('Loc53957').get_weights() 
w[0] = np.array([[[0.7906, 0.4532]]])
w[1] = np.array([[[0, 0]]])
model.get_layer('Loc53957').set_weights(w) 
in0Sim59294 = tf.constant([[[5, 1, 2], [6, 8, 1], [2, 7, 2]]])
print (np.array2string(model.predict([in0Sim59294],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Cro6339.png')

LSim59294 = simple_rnn_layer([[[5, 1, 2], [6, 8, 1], [2, 7, 2]]],[[6], [6], [10]],[[9]],[2], Sim59294), 
LRes82599 = reshape_layer(Sim59294, [1, 1], Res82599), 
LRes93082 = reshape_layer(Res82599, [1, 1, 1], Res93082), 
LLoc53957 = locally_connected2D_layer(Res93082, 1, 1,[[[0.7906, 0.4532]]],[[[0, 0]]], 4, 7, Loc53957), 
LRes65659 = reshape_layer(Loc53957, [1, 2], Res65659), 
LCro6339 = cropping1D_layer(Res65659, 0, 0, Cro6339), 
exec_layers([LSim59294,LRes82599,LRes93082,LLoc53957,LRes65659,LCro6339],["Sim59294","Res82599","Res93082","Loc53957","Res65659","Cro6339"],Cro6339,"Cro6339")

Actual (Unparsed): [[[0.7906000, 0.4532000]]]

Expected (Unparsed): [[[0.7906,0.4532]]]

Actual:   [[[0.7906, 0.4532]]]

Expected: [[[0.7906, 0.4532]]]