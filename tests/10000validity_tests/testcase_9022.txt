import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Sub93873 = tf.keras.layers.Input(shape=([2]))
in1Sub93873 = tf.keras.layers.Input(shape=([2]))

Sub93873 = keras.layers.Subtract(name = 'Sub93873', )([in0Sub93873,in1Sub93873])
Res23680 = keras.layers.Reshape((2, 1), name = 'Res23680', )(Sub93873)
Sim42404 = keras.layers.SimpleRNN(1,name = 'Sim42404', )(Res23680)
Sof22843 = keras.layers.Softmax(axis=1, name = 'Sof22843', )(Sim42404)
model = tf.keras.models.Model(inputs=[in0Sub93873,in1Sub93873], outputs=Sof22843)
w = model.get_layer('Sim42404').get_weights() 
w[0] = np.array([[4]])
w[1] = np.array([[5]])
w[2] = np.array([3])
model.get_layer('Sim42404').set_weights(w) 
in0Sub93873 = tf.constant([[0.3496, 0.0923]])
in1Sub93873 = tf.constant([[0.2081, 0.8825]])
print (np.array2string(model.predict([in0Sub93873,in1Sub93873],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Sof22843.png')

LSub93873 = subtract_layer([[0.3496, 0.0923]], [[0.2081, 0.8825]], Sub93873), 
LRes23680 = reshape_layer(Sub93873, [2, 1], Res23680), 
LSim42404 = simple_rnn_layer(Res23680,[[4]],[[5]],[3], Sim42404), 
LSof22843 = softmax_layer(Sim42404, 1, Sof22843), 
exec_layers([LSub93873,LRes23680,LSim42404,LSof22843],["Sub93873","Res23680","Sim42404","Sof22843"],Sof22843,"Sof22843")

Actual (Unparsed): [[1.0000000]]

Expected (Unparsed): [[1.0]]

Actual:   [[1]]

Expected: [[1]]