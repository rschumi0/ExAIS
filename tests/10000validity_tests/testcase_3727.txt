import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Mul62904 = tf.keras.layers.Input(shape=([2, 1, 2]))
in1Mul62904 = tf.keras.layers.Input(shape=([2, 1, 2]))
in0Sub58086 = tf.keras.layers.Input(shape=([3, 3, 3]))
in1Sub58086 = tf.keras.layers.Input(shape=([3, 3, 3]))
in0Con87398 = tf.keras.layers.Input(shape=([1]))
in0Con65881 = tf.keras.layers.Input(shape=([4, 3]))
in0Glo65459 = tf.keras.layers.Input(shape=([2, 2, 1, 1]))

Mul62904 = keras.layers.Multiply(name = 'Mul62904', )([in0Mul62904,in1Mul62904])
Res34210 = keras.layers.Reshape((2, 2), name = 'Res34210', )(Mul62904)
Fla92474 = keras.layers.Flatten(name = 'Fla92474', )(Res34210)
Sub58086 = keras.layers.Subtract(name = 'Sub58086', )([in0Sub58086,in1Sub58086])
Glo28481 = keras.layers.GlobalMaxPool2D(name = 'Glo28481', )(Sub58086)
Con87398 = keras.layers.Concatenate(axis=1, name = 'Con87398', )([Glo28481,in0Con87398])
Mul1859 = keras.layers.Multiply(name = 'Mul1859', )([Fla92474,Con87398])
Res18234 = keras.layers.Reshape((4, 1), name = 'Res18234', )(Mul1859)
Con65881 = keras.layers.Concatenate(axis=2, name = 'Con65881', )([Res18234,in0Con65881])
Glo65459 = keras.layers.GlobalAveragePooling3D(name = 'Glo65459', )(in0Glo65459)
Res98960 = keras.layers.Reshape((1, 1), name = 'Res98960', )(Glo65459)
Sep94619 = keras.layers.SeparableConv1D(4, (1),strides=(1), padding='valid', name = 'Sep94619', )(Res98960)
Zer19508 = keras.layers.ZeroPadding1D(padding=((3, 0)), name = 'Zer19508', )(Sep94619)
Mul95484 = keras.layers.Multiply(name = 'Mul95484', )([Con65881,Zer19508])
model = tf.keras.models.Model(inputs=[in0Mul62904,in1Mul62904,in0Sub58086,in1Sub58086,in0Con87398,in0Con65881,in0Glo65459], outputs=Mul95484)
w = model.get_layer('Sep94619').get_weights() 
w[0] = np.array([[[0.3457]]])
w[1] = np.array([[[0.8557, 0.0014, 0.7969, 0.614]]])
w[2] = np.array([0, 0, 0, 0])
model.get_layer('Sep94619').set_weights(w) 
in0Mul62904 = tf.constant([[[[0.1784, 0.1875]], [[0.7053, 0.7708]]]])
in1Mul62904 = tf.constant([[[[0.5158, 0.1138]], [[0.905, 0.5152]]]])
in0Sub58086 = tf.constant([[[[0.1928, 0.7942, 0.8953], [0.7119, 0.7631, 0.6445], [0.0688, 0.2448, 0.911]], [[0.6899, 0.0006, 0.6108], [0.8352, 0.2247, 0.3471], [0.5681, 0.8755, 0.0197]], [[0.5575, 0.6725, 0.2127], [0.1969, 0.3161, 0.9387], [0.3693, 0.4183, 0.6031]]]])
in1Sub58086 = tf.constant([[[[0.5985, 0.542, 0.2223], [0.1471, 0.8136, 0.5002], [0.1793, 0.8216, 0.2444]], [[0.9051, 0.0377, 0.2373], [0.5776, 0.419, 0.1831], [0.3755, 0.4712, 0.9046]], [[0.5435, 0.6141, 0.8884], [0.3464, 0.5403, 0.9112], [0.4593, 0.8639, 0.8044]]]])
in0Con87398 = tf.constant([[0.7513]])
in0Con65881 = tf.constant([[[0.918, 0.3833, 0.45], [0.9087, 0.7707, 0.5945], [0.4584, 0.7224, 0.6616], [0.9852, 0.5437, 0.6006]]])
in0Glo65459 = tf.constant([[[[[1.2246]], [[1.3387]]], [[[1.3347]], [[1.1581]]]]])
print (np.array2string(model.predict([in0Mul62904,in1Mul62904,in0Sub58086,in1Sub58086,in0Con87398,in0Con65881,in0Glo65459],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Mul95484.png')

LMul62904 = multiply_layer([[[[[0.1784, 0.1875]], [[0.7053, 0.7708]]]], [[[[0.5158, 0.1138]], [[0.905, 0.5152]]]]], Mul62904), 
LRes34210 = reshape_layer(Mul62904, [2, 2], Res34210), 
LFla92474 = flatten_layer(Res34210, Fla92474), 
LSub58086 = subtract_layer([[[[0.1928, 0.7942, 0.8953], [0.7119, 0.7631, 0.6445], [0.0688, 0.2448, 0.911]], [[0.6899, 0.0006, 0.6108], [0.8352, 0.2247, 0.3471], [0.5681, 0.8755, 0.0197]], [[0.5575, 0.6725, 0.2127], [0.1969, 0.3161, 0.9387], [0.3693, 0.4183, 0.6031]]]], [[[[0.5985, 0.542, 0.2223], [0.1471, 0.8136, 0.5002], [0.1793, 0.8216, 0.2444]], [[0.9051, 0.0377, 0.2373], [0.5776, 0.419, 0.1831], [0.3755, 0.4712, 0.9046]], [[0.5435, 0.6141, 0.8884], [0.3464, 0.5403, 0.9112], [0.4593, 0.8639, 0.8044]]]], Sub58086), 
LGlo28481 = global_max_pool2D_layer(Sub58086, Glo28481), 
LCon87398 = concatenate_layer([Glo28481,[[0.7513]]], 1, Con87398), 
LMul1859 = multiply_layer([Fla92474,Con87398], Mul1859), 
LRes18234 = reshape_layer(Mul1859, [4, 1], Res18234), 
LCon65881 = concatenate_layer([Res18234,[[[0.918, 0.3833, 0.45], [0.9087, 0.7707, 0.5945], [0.4584, 0.7224, 0.6616], [0.9852, 0.5437, 0.6006]]]], 2, Con65881), 
LGlo65459 = global_average_pooling3D_layer([[[[[1.2246]], [[1.3387]]], [[[1.3347]], [[1.1581]]]]], Glo65459), 
LRes98960 = reshape_layer(Glo65459, [1, 1], Res98960), 
LSep94619 = separable_conv1D_layer(Res98960, 1,[[[[0.3457]]],[[[0.8557, 0.0014, 0.7969, 0.614]]]],[0, 0, 0, 0], 1, false, Sep94619), 
LZer19508 = zero_padding1D_layer(Sep94619, 3, 0, Zer19508), 
LMul95484 = multiply_layer([Con65881,Zer19508], Mul95484), 
exec_layers([LMul62904,LRes34210,LFla92474,LSub58086,LGlo28481,LCon87398,LMul1859,LRes18234,LCon65881,LGlo65459,LRes98960,LSep94619,LZer19508,LMul95484],["Mul62904","Res34210","Fla92474","Sub58086","Glo28481","Con87398","Mul1859","Res18234","Con65881","Glo65459","Res98960","Sep94619","Zer19508","Mul95484"],Mul95484,"Mul95484")

Actual (Unparsed): [[[0.0000000, 0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000, 0.0000000], [0.1115597, 0.0006027, 0.1893295, 0.1611420]]]

Expected (Unparsed): [[[0.0,0.0,0.0,0.0],[0.0,0.0,0.0,0.0],[0.0,0.0,0.0,0.0],[0.11155974791700043,0.0006027087297714,0.18932946292166952,0.16114199723321698]]]

Actual:   [[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0.1116, 0.0007, 0.1894, 0.1612]]]

Expected: [[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0.1116, 0.0007, 0.1894, 0.1612]]]