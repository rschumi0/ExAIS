import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Lay6236 = tf.keras.layers.Input(shape=([2, 2]))
in0Min32468 = tf.keras.layers.Input(shape=([2, 1, 1, 2]))
in1Min32468 = tf.keras.layers.Input(shape=([2, 1, 1, 2]))
in0Mul64086 = tf.keras.layers.Input(shape=([1, 1]))
in1Mul64086 = tf.keras.layers.Input(shape=([1, 1]))
in0Con63982 = tf.keras.layers.Input(shape=([2, 1]))

Lay6236 = keras.layers.LayerNormalization(axis=2, epsilon=1.488606406822302, name = 'Lay6236', )(in0Lay6236)
Res10235 = keras.layers.Reshape((2, 2, 1), name = 'Res10235', )(Lay6236)
Min32468 = keras.layers.Minimum(name = 'Min32468', )([in0Min32468,in1Min32468])
Res11554 = keras.layers.Reshape((2, 2, 1), name = 'Res11554', )(Min32468)
Min86104 = keras.layers.Minimum(name = 'Min86104', )([Res10235,Res11554])
Res52056 = keras.layers.Reshape((2, 2), name = 'Res52056', )(Min86104)
Mul64086 = keras.layers.Multiply(name = 'Mul64086', )([in0Mul64086,in1Mul64086])
Zer84367 = keras.layers.ZeroPadding1D(padding=((1, 0)), name = 'Zer84367', )(Mul64086)
Con63982 = keras.layers.Concatenate(axis=2, name = 'Con63982', )([Zer84367,in0Con63982])
Add87915 = keras.layers.Add(name = 'Add87915', )([Res52056,Con63982])
Ave9165 = keras.layers.AveragePooling1D(pool_size=(2), name = 'Ave9165', )(Add87915)
model = tf.keras.models.Model(inputs=[in0Lay6236,in0Min32468,in1Min32468,in0Mul64086,in1Mul64086,in0Con63982], outputs=Ave9165)
in0Lay6236 = tf.constant([[[1.1293, 1.3506], [1.2803, 1.6615]]])
in0Min32468 = tf.constant([[[[[0.7217, 0.7339]]], [[[0.2006, 0.2127]]]]])
in1Min32468 = tf.constant([[[[[0.9854, 0.7793]]], [[[0.8421, 0.3457]]]]])
in0Mul64086 = tf.constant([[[0.7886]]])
in1Mul64086 = tf.constant([[[0.0582]]])
in0Con63982 = tf.constant([[[0.1396], [0.6245]]])
print (np.array2string(model.predict([in0Lay6236,in0Min32468,in1Min32468,in0Mul64086,in1Mul64086,in0Con63982],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Ave9165.png')

LLay6236 = layer_normalization_layer([[[1.1293, 1.3506], [1.2803, 1.6615]]], 2, 1.488606406822302, Lay6236), 
LRes10235 = reshape_layer(Lay6236, [2, 2, 1], Res10235), 
LMin32468 = minimum_layer([[[[[[0.7217, 0.7339]]], [[[0.2006, 0.2127]]]]], [[[[[0.9854, 0.7793]]], [[[0.8421, 0.3457]]]]]], Min32468), 
LRes11554 = reshape_layer(Min32468, [2, 2, 1], Res11554), 
LMin86104 = minimum_layer([Res10235,Res11554], Min86104), 
LRes52056 = reshape_layer(Min86104, [2, 2], Res52056), 
LMul64086 = multiply_layer([[[[0.7886]]], [[[0.0582]]]], Mul64086), 
LZer84367 = zero_padding1D_layer(Mul64086, 1, 0, Zer84367), 
LCon63982 = concatenate_layer([Zer84367,[[[0.1396], [0.6245]]]], 2, Con63982), 
LAdd87915 = add_layer([Res52056,Con63982], Add87915), 
LAve9165 = average_pooling1D_layer(Add87915, 2, Ave9165), 
exec_layers([LLay6236,LRes10235,LMin32468,LRes11554,LMin86104,LRes52056,LMul64086,LZer84367,LCon63982,LAdd87915,LAve9165],["Lay6236","Res10235","Min32468","Res11554","Min86104","Res52056","Mul64086","Zer84367","Con63982","Add87915","Ave9165"],Ave9165,"Ave9165")

Actual (Unparsed): [[[-0.0993849, 0.5043832]]]

Expected (Unparsed): [[[-0.09938495728185878,0.504383217281859]]]

Actual:   [[[-0.0993, 0.5044]]]

Expected: [[[-0.0993, 0.5044]]]