import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Loc99969 = tf.keras.layers.Input(shape=([2, 2]))
in0Dot3921 = tf.keras.layers.Input(shape=([2, 2]))
in1Dot3921 = tf.keras.layers.Input(shape=([2, 2]))
in0Con93240 = tf.keras.layers.Input(shape=([2, 2]))
in0Cro1047 = tf.keras.layers.Input(shape=([2, 4]))

Loc99969 = keras.layers.LocallyConnected1D(4, (2),strides=(1), name = 'Loc99969', )(in0Loc99969)
Zer3833 = keras.layers.ZeroPadding1D(padding=((1, 0)), name = 'Zer3833', )(Loc99969)
Dot3921 = keras.layers.Dot(axes=(1, 1), name = 'Dot3921', )([in0Dot3921,in1Dot3921])
Con93240 = keras.layers.Concatenate(axis=2, name = 'Con93240', )([Dot3921,in0Con93240])
Cro1047 = keras.layers.Cropping1D(cropping=((0, 0)), name = 'Cro1047', )(in0Cro1047)
Min49654 = keras.layers.Minimum(name = 'Min49654', )([Con93240,Cro1047])
Mul84414 = keras.layers.Multiply(name = 'Mul84414', )([Zer3833,Min49654])
Res9585 = keras.layers.Reshape((2, 4, 1), name = 'Res9585', )(Mul84414)
Sep73267 = keras.layers.SeparableConv2D(4, (1, 1),strides=(2, 2), padding='valid', name = 'Sep73267', )(Res9585)
Res63882 = keras.layers.Reshape((1, 2, 4, 1), name = 'Res63882', )(Sep73267)
Con33775 = keras.layers.Conv3DTranspose(3, (1, 2, 4),strides=(1, 1, 1), padding='same', name = 'Con33775', )(Res63882)
model = tf.keras.models.Model(inputs=[in0Loc99969,in0Dot3921,in1Dot3921,in0Con93240,in0Cro1047], outputs=Con33775)
w = model.get_layer('Loc99969').get_weights() 
w[0] = np.array([[[0.9508, 0.4643, 0.2055, 0.0581], [0.2146, 0.2257, 0.4775, 0.4035], [0.9115, 0.769, 0.0678, 0.1965], [0.0317, 0.6382, 0.3935, 0.8427]]])
w[1] = np.array([[0, 0, 0, 0]])
model.get_layer('Loc99969').set_weights(w) 
w = model.get_layer('Sep73267').get_weights() 
w[0] = np.array([[[[0.4961]]]])
w[1] = np.array([[[[0.3757, 0.2342, 0.2755, 0.5949]]]])
w[2] = np.array([0, 0, 0, 0])
model.get_layer('Sep73267').set_weights(w) 
w = model.get_layer('Con33775').get_weights() 
w[0] = np.array([[[[[0.742], [0.7954], [0.2237]], [[0.8696], [0.0322], [0.5514]], [[0.931], [0.7308], [0.6183]], [[0.3019], [0.4998], [0.2327]]], [[[0.5015], [0.1522], [0.5373]], [[0.1324], [0.6738], [0.6836]], [[0.2195], [0.6632], [0.2871]], [[0.7884], [0.9708], [0.1187]]]]])
w[1] = np.array([0, 0, 0])
model.get_layer('Con33775').set_weights(w) 
in0Loc99969 = tf.constant([[[0.1374, 0.2294], [0.2534, 0.827]]])
in0Dot3921 = tf.constant([[[0.1037, 0.8551], [0.5082, 0.8864]]])
in1Dot3921 = tf.constant([[[0.7702, 0.9764], [0.6761, 0.4215]]])
in0Con93240 = tf.constant([[[0.3905, 0.4369], [0.4896, 0.8558]]])
in0Cro1047 = tf.constant([[[1.8338, 1.7216, 1.7987, 1.28], [1.759, 1.9236, 1.186, 1.9296]]])
print (np.array2string(model.predict([in0Loc99969,in0Dot3921,in1Dot3921,in0Con93240,in0Cro1047],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Con33775.png')

LLoc99969 = locally_connected1D_layer([[[0.1374, 0.2294], [0.2534, 0.827]]], 2,[[[0.9508, 0.4643, 0.2055, 0.0581], [0.2146, 0.2257, 0.4775, 0.4035], [0.9115, 0.769, 0.0678, 0.1965], [0.0317, 0.6382, 0.3935, 0.8427]]],[[0, 0, 0, 0]], 1, Loc99969), 
LZer3833 = zero_padding1D_layer(Loc99969, 1, 0, Zer3833), 
LDot3921 = dot_layer([[[0.1037, 0.8551], [0.5082, 0.8864]]], [[[0.7702, 0.9764], [0.6761, 0.4215]]], 1, 1, Dot3921), 
LCon93240 = concatenate_layer([Dot3921,[[[0.3905, 0.4369], [0.4896, 0.8558]]]], 2, Con93240), 
LCro1047 = cropping1D_layer([[[1.8338, 1.7216, 1.7987, 1.28], [1.759, 1.9236, 1.186, 1.9296]]], 0, 0, Cro1047), 
LMin49654 = minimum_layer([Con93240,Cro1047], Min49654), 
LMul84414 = multiply_layer([Zer3833,Min49654], Mul84414), 
LRes9585 = reshape_layer(Mul84414, [2, 4, 1], Res9585), 
LSep73267 = separable_conv2D_layer(Res9585, 1, 1,[[[[[0.4961]]]],[[[[0.3757, 0.2342, 0.2755, 0.5949]]]]],[0, 0, 0, 0], 2, 2, false, Sep73267), 
LRes63882 = reshape_layer(Sep73267, [1, 2, 4, 1], Res63882), 
LCon33775 = conv3D_transpose_layer(Res63882, 1, 2, 4,[[[[[0.742], [0.7954], [0.2237]], [[0.8696], [0.0322], [0.5514]], [[0.931], [0.7308], [0.6183]], [[0.3019], [0.4998], [0.2327]]], [[[0.5015], [0.1522], [0.5373]], [[0.1324], [0.6738], [0.6836]], [[0.2195], [0.6632], [0.2871]], [[0.7884], [0.9708], [0.1187]]]]],[0, 0, 0], 1, 1, 1, true, Con33775), 
exec_layers([LLoc99969,LZer3833,LDot3921,LCon93240,LCro1047,LMin49654,LMul84414,LRes9585,LSep73267,LRes63882,LCon33775],["Loc99969","Zer3833","Dot3921","Con93240","Cro1047","Min49654","Mul84414","Res9585","Sep73267","Res63882","Con33775"],Con33775,"Con33775")

Actual (Unparsed): [[[[[0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000]], [[0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000]]]]]

Expected (Unparsed): [[[[[0.0,0.0,0.0],[0.0,0.0,0.0],[0.0,0.0,0.0],[0.0,0.0,0.0]],[[0.0,0.0,0.0],[0.0,0.0,0.0],[0.0,0.0,0.0],[0.0,0.0,0.0]]]]]

Actual:   [[[[[0, 0, 0], [0, 0, 0], [0, 0, 0], [0, 0, 0]], [[0, 0, 0], [0, 0, 0], [0, 0, 0], [0, 0, 0]]]]]

Expected: [[[[[0, 0, 0], [0, 0, 0], [0, 0, 0], [0, 0, 0]], [[0, 0, 0], [0, 0, 0], [0, 0, 0], [0, 0, 0]]]]]