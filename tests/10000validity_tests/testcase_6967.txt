import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Glo34234 = tf.keras.layers.Input(shape=([2, 1, 2, 1]))
in0Max75205 = tf.keras.layers.Input(shape=([1, 1, 1, 1]))
in1Max75205 = tf.keras.layers.Input(shape=([1, 1, 1, 1]))
in0Con53230 = tf.keras.layers.Input(shape=([3, 3, 3, 1]))
in0Sub28040 = tf.keras.layers.Input(shape=([3, 3, 3, 2]))
in1Sub28040 = tf.keras.layers.Input(shape=([3, 3, 3, 2]))
in0Min35362 = tf.keras.layers.Input(shape=([2, 1, 1, 1]))
in1Min35362 = tf.keras.layers.Input(shape=([2, 1, 1, 1]))
in0Con55766 = tf.keras.layers.Input(shape=([3, 3, 3, 1]))

Glo34234 = keras.layers.GlobalAveragePooling3D(name = 'Glo34234', )(in0Glo34234)
Res15907 = keras.layers.Reshape((1, 1), name = 'Res15907', )(Glo34234)
Res38547 = keras.layers.Reshape((1, 1, 1), name = 'Res38547', )(Res15907)
Res94836 = keras.layers.Reshape((1, 1, 1, 1), name = 'Res94836', )(Res38547)
Con30845 = keras.layers.Conv3D(2, (1, 1, 1),strides=(1, 1, 1), padding='same', dilation_rate=(1, 1, 1), name = 'Con30845', )(Res94836)
Zer34792 = keras.layers.ZeroPadding3D(padding=((2, 0), (2, 0), (2, 0)), name = 'Zer34792', )(Con30845)
Max75205 = keras.layers.Maximum(name = 'Max75205', )([in0Max75205,in1Max75205])
Res60790 = keras.layers.Reshape((1, 1, 1), name = 'Res60790', )(Max75205)
Zer87362 = keras.layers.ZeroPadding2D(padding=((1, 1), (1, 1)), name = 'Zer87362', )(Res60790)
Res39346 = keras.layers.Reshape((3, 3, 1, 1), name = 'Res39346', )(Zer87362)
Zer98787 = keras.layers.ZeroPadding3D(padding=((0, 0), (0, 0), (2, 0)), name = 'Zer98787', )(Res39346)
Con53230 = keras.layers.Concatenate(axis=4, name = 'Con53230', )([Zer98787,in0Con53230])
Sub28040 = keras.layers.Subtract(name = 'Sub28040', )([in0Sub28040,in1Sub28040])
ReL23769 = keras.layers.ReLU(max_value=8.976483376484373, negative_slope=9.734316103779722, threshold=8.877560781464407, name = 'ReL23769', )(Sub28040)
Min35362 = keras.layers.Minimum(name = 'Min35362', )([in0Min35362,in1Min35362])
Zer22767 = keras.layers.ZeroPadding3D(padding=((1, 0), (2, 0), (2, 0)), name = 'Zer22767', )(Min35362)
Con55766 = keras.layers.Concatenate(axis=4, name = 'Con55766', )([Zer22767,in0Con55766])
Mul45834 = keras.layers.Multiply(name = 'Mul45834', )([ReL23769,Con55766])
Min59521 = keras.layers.Minimum(name = 'Min59521', )([Con53230,Mul45834])
Max61020 = keras.layers.Maximum(name = 'Max61020', )([Zer34792,Min59521])
model = tf.keras.models.Model(inputs=[in0Glo34234,in0Max75205,in1Max75205,in0Con53230,in0Sub28040,in1Sub28040,in0Min35362,in1Min35362,in0Con55766], outputs=Max61020)
w = model.get_layer('Con30845').get_weights() 
w[0] = np.array([[[[[0.2875, 0.5373]]]]])
w[1] = np.array([0, 0])
model.get_layer('Con30845').set_weights(w) 
in0Glo34234 = tf.constant([[[[[1.5163], [1.4024]]], [[[1.0319], [1.4799]]]]])
in0Max75205 = tf.constant([[[[[0.0797]]]]])
in1Max75205 = tf.constant([[[[[0.066]]]]])
in0Con53230 = tf.constant([[[[[0.8411], [0.77], [0.7163]], [[0.6003], [0.6338], [0.649]], [[0.1742], [0.0518], [0.5798]]], [[[0.0408], [0.2112], [0.8447]], [[0.5452], [0.1278], [0.0051]], [[0.3652], [0.9872], [0.9982]]], [[[0.2617], [0.052], [0.7304]], [[0.1604], [0.1943], [0.9316]], [[0.099], [0.1131], [0.1028]]]]])
in0Sub28040 = tf.constant([[[[[0.7973, 0.082], [0.2763, 0.4375], [0.6662, 0.8336]], [[0.0827, 0.2371], [0.4958, 0.5187], [0.945, 0.4785]], [[0.114, 0.0307], [0.4955, 0.8353], [0.4312, 0.3005]]], [[[0.2539, 0.0564], [0.4708, 0.6673], [0.4607, 0.1942]], [[0.9346, 0.9759], [0.5109, 0.6453], [0.1313, 0.4339]], [[0.8092, 0.5177], [0.8397, 0.7979], [0.25, 0.6386]]], [[[0.9518, 0.7655], [0.9438, 0.595], [0.5477, 0.5513]], [[0.2548, 0.5602], [0.3901, 0.4953], [0.6926, 0.2997]], [[0.6959, 0.213], [0.712, 0.6739], [0.439, 0.2339]]]]])
in1Sub28040 = tf.constant([[[[[0.0115, 0.1602], [0.3727, 0.2935], [0.4954, 0.3983]], [[0.4193, 0.4473], [0.6649, 0.5353], [0.0682, 0.956]], [[0.838, 0.1889], [0.9496, 0.4547], [0.2638, 0.1804]]], [[[0.8042, 0.2628], [0.8926, 0.7975], [0.6587, 0.8211]], [[0.2891, 0.2394], [0.1332, 0.1436], [0.9383, 0.0685]], [[0.4568, 0.8658], [0.9801, 0.9484], [0.9487, 0.9371]]], [[[0.233, 0.6826], [0.4328, 0.2592], [0.2167, 0.5844]], [[0.2984, 0.6001], [0.77, 0.5077], [0.6933, 0.9323]], [[0.7742, 0.446], [0.6406, 0.9339], [0.4382, 0.468]]]]])
in0Min35362 = tf.constant([[[[[0.7097]]], [[[0.7695]]]]])
in1Min35362 = tf.constant([[[[[0.5796]]], [[[0.9007]]]]])
in0Con55766 = tf.constant([[[[[0.7326], [0.8061], [0.3584]], [[0.9291], [0.8608], [0.1115]], [[0.0602], [0.7033], [0.5363]]], [[[0.6138], [0.086], [0.2486]], [[0.9328], [0.1574], [0.8894]], [[0.9581], [0.6257], [0.8889]]], [[[0.5747], [0.9662], [0.6094]], [[0.4275], [0.4147], [0.4583]], [[0.907], [0.2782], [0.2436]]]]])
print (np.array2string(model.predict([in0Glo34234,in0Max75205,in1Max75205,in0Con53230,in0Sub28040,in1Sub28040,in0Min35362,in1Min35362,in0Con55766],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Max61020.png')

LGlo34234 = global_average_pooling3D_layer([[[[[1.5163], [1.4024]]], [[[1.0319], [1.4799]]]]], Glo34234), 
LRes15907 = reshape_layer(Glo34234, [1, 1], Res15907), 
LRes38547 = reshape_layer(Res15907, [1, 1, 1], Res38547), 
LRes94836 = reshape_layer(Res38547, [1, 1, 1, 1], Res94836), 
LCon30845 = conv3D_layer(Res94836, 1, 1, 1,[[[[[0.2875, 0.5373]]]]],[0, 0], 1, 1, 1, true, 1, 1, 1, Con30845), 
LZer34792 = zero_padding3D_layer(Con30845, 2, 0, 2, 0, 2, 0, Zer34792), 
LMax75205 = maximum_layer([[[[[[0.0797]]]]], [[[[[0.066]]]]]], Max75205), 
LRes60790 = reshape_layer(Max75205, [1, 1, 1], Res60790), 
LZer87362 = zero_padding2D_layer(Res60790, 1, 1, 1, 1, Zer87362), 
LRes39346 = reshape_layer(Zer87362, [3, 3, 1, 1], Res39346), 
LZer98787 = zero_padding3D_layer(Res39346, 0, 0, 0, 0, 2, 0, Zer98787), 
LCon53230 = concatenate_layer([Zer98787,[[[[[0.8411], [0.77], [0.7163]], [[0.6003], [0.6338], [0.649]], [[0.1742], [0.0518], [0.5798]]], [[[0.0408], [0.2112], [0.8447]], [[0.5452], [0.1278], [0.0051]], [[0.3652], [0.9872], [0.9982]]], [[[0.2617], [0.052], [0.7304]], [[0.1604], [0.1943], [0.9316]], [[0.099], [0.1131], [0.1028]]]]]], 4, Con53230), 
LSub28040 = subtract_layer([[[[[0.7973, 0.082], [0.2763, 0.4375], [0.6662, 0.8336]], [[0.0827, 0.2371], [0.4958, 0.5187], [0.945, 0.4785]], [[0.114, 0.0307], [0.4955, 0.8353], [0.4312, 0.3005]]], [[[0.2539, 0.0564], [0.4708, 0.6673], [0.4607, 0.1942]], [[0.9346, 0.9759], [0.5109, 0.6453], [0.1313, 0.4339]], [[0.8092, 0.5177], [0.8397, 0.7979], [0.25, 0.6386]]], [[[0.9518, 0.7655], [0.9438, 0.595], [0.5477, 0.5513]], [[0.2548, 0.5602], [0.3901, 0.4953], [0.6926, 0.2997]], [[0.6959, 0.213], [0.712, 0.6739], [0.439, 0.2339]]]]], [[[[[0.0115, 0.1602], [0.3727, 0.2935], [0.4954, 0.3983]], [[0.4193, 0.4473], [0.6649, 0.5353], [0.0682, 0.956]], [[0.838, 0.1889], [0.9496, 0.4547], [0.2638, 0.1804]]], [[[0.8042, 0.2628], [0.8926, 0.7975], [0.6587, 0.8211]], [[0.2891, 0.2394], [0.1332, 0.1436], [0.9383, 0.0685]], [[0.4568, 0.8658], [0.9801, 0.9484], [0.9487, 0.9371]]], [[[0.233, 0.6826], [0.4328, 0.2592], [0.2167, 0.5844]], [[0.2984, 0.6001], [0.77, 0.5077], [0.6933, 0.9323]], [[0.7742, 0.446], [0.6406, 0.9339], [0.4382, 0.468]]]]], Sub28040), 
LReL23769 = relu_layer(Sub28040, 8.976483376484373, 9.734316103779722, 8.877560781464407, ReL23769), 
LMin35362 = minimum_layer([[[[[[0.7097]]], [[[0.7695]]]]], [[[[[0.5796]]], [[[0.9007]]]]]], Min35362), 
LZer22767 = zero_padding3D_layer(Min35362, 1, 0, 2, 0, 2, 0, Zer22767), 
LCon55766 = concatenate_layer([Zer22767,[[[[[0.7326], [0.8061], [0.3584]], [[0.9291], [0.8608], [0.1115]], [[0.0602], [0.7033], [0.5363]]], [[[0.6138], [0.086], [0.2486]], [[0.9328], [0.1574], [0.8894]], [[0.9581], [0.6257], [0.8889]]], [[[0.5747], [0.9662], [0.6094]], [[0.4275], [0.4147], [0.4583]], [[0.907], [0.2782], [0.2436]]]]]], 4, Con55766), 
LMul45834 = multiply_layer([ReL23769,Con55766], Mul45834), 
LMin59521 = minimum_layer([Con53230,Mul45834], Min59521), 
LMax61020 = maximum_layer([Zer34792,Min59521], Max61020), 
exec_layers([LGlo34234,LRes15907,LRes38547,LRes94836,LCon30845,LZer34792,LMax75205,LRes60790,LZer87362,LRes39346,LZer98787,LCon53230,LSub28040,LReL23769,LMin35362,LZer22767,LCon55766,LMul45834,LMin59521,LMax61020],["Glo34234","Res15907","Res38547","Res94836","Con30845","Zer34792","Max75205","Res60790","Zer87362","Res39346","Zer98787","Con53230","Sub28040","ReL23769","Min35362","Zer22767","Con55766","Mul45834","Min59521","Max61020"],Max61020,"Max61020")

Actual (Unparsed): [[[[[-0.0000000, 0.0000000], [-0.0000000, 0.0000000], [-0.0000000, 0.0000000]], [[-0.0000000, 0.0000000], [-0.0000000, 0.0000000], [-0.0000000, 0.0000000]], [[-0.0000000, 0.0000000], [-0.0000000, 0.0000000], [-0.0000000, 0.0000000]]], [[[-0.0000000, 0.0000000], [-0.0000000, 0.0000000], [-0.0000000, 0.0000000]], [[-0.0000000, 0.0000000], [-0.0000000, 0.0000000], [-0.0000000, 0.0000000]], [[-0.0000000, 0.0000000], [-0.0000000, 0.0000000], [0.0000000, 0.0000000]]], [[[-0.0000000, 0.0000000], [-0.0000000, 0.0000000], [-0.0000000, 0.0000000]], [[-0.0000000, 0.0000000], [-0.0000000, 0.0000000], [-0.0000000, 0.0000000]], [[-0.0000000, 0.0000000], [-0.0000000, 0.0000000], [0.3903172, 0.7294519]]]]]

Expected (Unparsed): [[[[[0,0],[0,0],[0,0]],[[0,0],[0,0],[0,0]],[[0,0],[0,0],[0,0]]],[[[0,0],[0,0],[0,0]],[[0,0],[0,0],[0,0]],[[0,0],[0,0],[0,0]]],[[[0,0],[0,0],[0,0]],[[0,0],[0,0],[0,0]],[[0,0],[0,0],[0.3903171875,0.7294519125000001]]]]]

Actual:   [[[[[-0, 0], [-0, 0], [-0, 0]], [[-0, 0], [-0, 0], [-0, 0]], [[-0, 0], [-0, 0], [-0, 0]]], [[[-0, 0], [-0, 0], [-0, 0]], [[-0, 0], [-0, 0], [-0, 0]], [[-0, 0], [-0, 0], [0, 0]]], [[[-0, 0], [-0, 0], [-0, 0]], [[-0, 0], [-0, 0], [-0, 0]], [[-0, 0], [-0, 0], [0.3904, 0.7295]]]]]

Expected: [[[[[0, 0], [0, 0], [0, 0]], [[0, 0], [0, 0], [0, 0]], [[0, 0], [0, 0], [0, 0]]], [[[0, 0], [0, 0], [0, 0]], [[0, 0], [0, 0], [0, 0]], [[0, 0], [0, 0], [0, 0]]], [[[0, 0], [0, 0], [0, 0]], [[0, 0], [0, 0], [0, 0]], [[0, 0], [0, 0], [0.3904, 0.7295]]]]]