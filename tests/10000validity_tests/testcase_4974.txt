import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Zer66954 = tf.keras.layers.Input(shape=([3, 2, 1, 2]))
in0Add17710 = tf.keras.layers.Input(shape=([2, 2, 2, 2]))
in1Add17710 = tf.keras.layers.Input(shape=([2, 2, 2, 2]))
in0Con67362 = tf.keras.layers.Input(shape=([5, 4, 2]))
in0Min61589 = tf.keras.layers.Input(shape=([1, 1, 2, 2]))
in1Min61589 = tf.keras.layers.Input(shape=([1, 1, 2, 2]))
in0Mas55882 = tf.keras.layers.Input(shape=([3, 3]))
in0Con77547 = tf.keras.layers.Input(shape=([3, 1]))
in0Con23240 = tf.keras.layers.Input(shape=([3, 4, 1]))
in0Ave53667 = tf.keras.layers.Input(shape=([2, 1, 2]))
in1Ave53667 = tf.keras.layers.Input(shape=([2, 1, 2]))
in0Add54759 = tf.keras.layers.Input(shape=([2, 1, 2]))
in1Add54759 = tf.keras.layers.Input(shape=([2, 1, 2]))
in0Con70720 = tf.keras.layers.Input(shape=([5, 4, 4]))

Zer66954 = keras.layers.ZeroPadding3D(padding=((1, 1), (1, 1), (1, 1)), name = 'Zer66954', )(in0Zer66954)
Res66512 = keras.layers.Reshape((5, 4, 6), name = 'Res66512', )(Zer66954)
Add17710 = keras.layers.Add(name = 'Add17710', )([in0Add17710,in1Add17710])
Res6803 = keras.layers.Reshape((2, 2, 4), name = 'Res6803', )(Add17710)
PRe71511 = keras.layers.PReLU(name = 'PRe71511', )(Res6803)
Zer74680 = keras.layers.ZeroPadding2D(padding=((3, 0), (2, 0)), name = 'Zer74680', )(PRe71511)
Con67362 = keras.layers.Concatenate(axis=3, name = 'Con67362', )([Zer74680,in0Con67362])
Mul59646 = keras.layers.Multiply(name = 'Mul59646', )([Res66512,Con67362])
Min61589 = keras.layers.Minimum(name = 'Min61589', )([in0Min61589,in1Min61589])
Res65277 = keras.layers.Reshape((1, 1, 4), name = 'Res65277', )(Min61589)
Res70834 = keras.layers.Reshape((1, 4), name = 'Res70834', )(Res65277)
Zer92491 = keras.layers.ZeroPadding1D(padding=((2, 0)), name = 'Zer92491', )(Res70834)
Mas55882 = keras.layers.Masking(mask_value=1, name = 'Mas55882', )(in0Mas55882)
Con77547 = keras.layers.Concatenate(axis=2, name = 'Con77547', )([Mas55882,in0Con77547])
Min14937 = keras.layers.Minimum(name = 'Min14937', )([Zer92491,Con77547])
Res99812 = keras.layers.Reshape((3, 4, 1), name = 'Res99812', )(Min14937)
Con23240 = keras.layers.Concatenate(axis=3, name = 'Con23240', )([Res99812,in0Con23240])
Ave53667 = keras.layers.Average(name = 'Ave53667', )([in0Ave53667,in1Ave53667])
Add54759 = keras.layers.Add(name = 'Add54759', )([in0Add54759,in1Add54759])
Max53700 = keras.layers.Maximum(name = 'Max53700', )([Ave53667,Add54759])
Zer68098 = keras.layers.ZeroPadding2D(padding=((1, 0), (3, 0)), name = 'Zer68098', )(Max53700)
Sub40119 = keras.layers.Subtract(name = 'Sub40119', )([Con23240,Zer68098])
PRe33016 = keras.layers.PReLU(name = 'PRe33016', )(Sub40119)
Zer15083 = keras.layers.ZeroPadding2D(padding=((2, 0), (0, 0)), name = 'Zer15083', )(PRe33016)
Con70720 = keras.layers.Concatenate(axis=3, name = 'Con70720', )([Zer15083,in0Con70720])
Max61352 = keras.layers.Maximum(name = 'Max61352', )([Mul59646,Con70720])
model = tf.keras.models.Model(inputs=[in0Zer66954,in0Add17710,in1Add17710,in0Con67362,in0Min61589,in1Min61589,in0Mas55882,in0Con77547,in0Con23240,in0Ave53667,in1Ave53667,in0Add54759,in1Add54759,in0Con70720], outputs=Max61352)
w = model.get_layer('PRe71511').get_weights() 
w[0] = np.array([[[0.8479, 0.8734, 0.0087, 0.7005], [0.3451, 0.4808, 0.1209, 0.588]], [[0.38, 0.7987, 0.0225, 0.0798], [0.768, 0.2379, 0.4082, 0.3971]]])
model.get_layer('PRe71511').set_weights(w) 
w = model.get_layer('PRe33016').get_weights() 
w[0] = np.array([[[0.0041, 0.366], [0.3817, 0.6827], [0.3861, 0.3779], [0.8519, 0.1138]], [[0.4417, 0.6337], [0.9712, 0.1183], [0.1411, 0.9725], [0.0727, 0.001]], [[0.4852, 0.3484], [0.2832, 0.668], [0.9119, 0.8069], [0.8435, 0.6095]]])
model.get_layer('PRe33016').set_weights(w) 
in0Zer66954 = tf.constant([[[[[1.9652, 1.5171]], [[1.9464, 1.5415]]], [[[1.5853, 1.7506]], [[1.577, 1.2413]]], [[[1.7338, 1.4056]], [[1.0772, 1.9794]]]]])
in0Add17710 = tf.constant([[[[[0.3505, 0.6385], [0.5338, 0.6175]], [[0.1629, 0.9157], [0.2498, 0.5136]]], [[[0.4644, 0.0979], [0.326, 0.4263]], [[0.3459, 0.1221], [0.0029, 0.2545]]]]])
in1Add17710 = tf.constant([[[[[0.7711, 0.0284], [0.0877, 0.6883]], [[0.5771, 0.8689], [0.2456, 0.0281]]], [[[0.9461, 0.8588], [0.6694, 0.141]], [[0.1518, 0.9798], [0.6597, 0.7664]]]]])
in0Con67362 = tf.constant([[[[0.0673, 0.0884], [0.8906, 0.3953], [0.532, 0.9684], [0.2545, 0.689]], [[0.9531, 0.3132], [0.1073, 0.6554], [0.0172, 0.8265], [0.1046, 0.1754]], [[0.661, 0.6329], [0.628, 0.3917], [0.3907, 0.9904], [0.8031, 0.8184]], [[0.7419, 0.1972], [0.9673, 0.6007], [0.3522, 0.2695], [0.0951, 0.6984]], [[0.1659, 0.904], [0.318, 0.4067], [0.7517, 0.8245], [0.2132, 0.4199]]]])
in0Min61589 = tf.constant([[[[[0.4094, 0.1313], [0.9423, 0.1561]]]]])
in1Min61589 = tf.constant([[[[[0.4784, 0.8412], [0.1336, 0.3429]]]]])
in0Mas55882 = tf.constant([[[1.2551, 1.4903, 1.6199], [1.1647, 1.9748, 1.9867], [1.2623, 1.5423, 1.7947]]])
in0Con77547 = tf.constant([[[0.2037], [0.8408], [0.9559]]])
in0Con23240 = tf.constant([[[[0.7385], [0.6795], [0.9266], [0.1719]], [[0.3914], [0.0365], [0.2996], [0.6765]], [[0.9416], [0.0714], [0.3235], [0.7413]]]])
in0Ave53667 = tf.constant([[[[0.8318, 0.7584]], [[0.4076, 0.4713]]]])
in1Ave53667 = tf.constant([[[[0.5615, 0.1994]], [[0.1078, 0.5633]]]])
in0Add54759 = tf.constant([[[[0.6162, 0.3436]], [[0.0771, 0.0937]]]])
in1Add54759 = tf.constant([[[[0.7971, 0.3955]], [[0.0558, 0.885]]]])
in0Con70720 = tf.constant([[[[0.6219, 0.4393, 0.7522, 0.7241], [0.6405, 0.8362, 0.6773, 0.2213], [0.4168, 0.4823, 0.3591, 0.8872], [0.0789, 0.392, 0.9208, 0.4971]], [[0.9245, 0.1297, 0.1373, 0.6047], [0.8975, 0.8653, 0.803, 0.4532], [0.8351, 0.5813, 0.7867, 0.8866], [0.7006, 0.7692, 0.2871, 0.0717]], [[0.2449, 0.345, 0.418, 0.251], [0.7959, 0.1885, 0.403, 0.9333], [0.1677, 0.6614, 0.3385, 0.8998], [0.0005, 0.6985, 0.6986, 0.1529]], [[0.1972, 0.5807, 0.4958, 0.4698], [0.5038, 0.296, 0.2875, 0.533], [0.6976, 0.4764, 0.0227, 0.7071], [0.2931, 0.2551, 0.0624, 0.4077]], [[0.1521, 0.0331, 0.5725, 0.6614], [0.8951, 0.067, 0.8893, 0.9003], [0.5485, 0.9907, 0.3884, 0.2489], [0.4371, 0.8738, 0.8487, 0.5656]]]])
print (np.array2string(model.predict([in0Zer66954,in0Add17710,in1Add17710,in0Con67362,in0Min61589,in1Min61589,in0Mas55882,in0Con77547,in0Con23240,in0Ave53667,in1Ave53667,in0Add54759,in1Add54759,in0Con70720],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Max61352.png')

LZer66954 = zero_padding3D_layer([[[[[1.9652, 1.5171]], [[1.9464, 1.5415]]], [[[1.5853, 1.7506]], [[1.577, 1.2413]]], [[[1.7338, 1.4056]], [[1.0772, 1.9794]]]]], 1, 1, 1, 1, 1, 1, Zer66954), 
LRes66512 = reshape_layer(Zer66954, [5, 4, 6], Res66512), 
LAdd17710 = add_layer([[[[[[0.3505, 0.6385], [0.5338, 0.6175]], [[0.1629, 0.9157], [0.2498, 0.5136]]], [[[0.4644, 0.0979], [0.326, 0.4263]], [[0.3459, 0.1221], [0.0029, 0.2545]]]]], [[[[[0.7711, 0.0284], [0.0877, 0.6883]], [[0.5771, 0.8689], [0.2456, 0.0281]]], [[[0.9461, 0.8588], [0.6694, 0.141]], [[0.1518, 0.9798], [0.6597, 0.7664]]]]]], Add17710), 
LRes6803 = reshape_layer(Add17710, [2, 2, 4], Res6803), 
LPRe71511 = prelu_layer(Res6803, [[[0.8479, 0.8734, 0.0087, 0.7005], [0.3451, 0.4808, 0.1209, 0.588]], [[0.38, 0.7987, 0.0225, 0.0798], [0.768, 0.2379, 0.4082, 0.3971]]], PRe71511), 
LZer74680 = zero_padding2D_layer(PRe71511, 3, 0, 2, 0, Zer74680), 
LCon67362 = concatenate_layer([Zer74680,[[[[0.0673, 0.0884], [0.8906, 0.3953], [0.532, 0.9684], [0.2545, 0.689]], [[0.9531, 0.3132], [0.1073, 0.6554], [0.0172, 0.8265], [0.1046, 0.1754]], [[0.661, 0.6329], [0.628, 0.3917], [0.3907, 0.9904], [0.8031, 0.8184]], [[0.7419, 0.1972], [0.9673, 0.6007], [0.3522, 0.2695], [0.0951, 0.6984]], [[0.1659, 0.904], [0.318, 0.4067], [0.7517, 0.8245], [0.2132, 0.4199]]]]], 3, Con67362), 
LMul59646 = multiply_layer([Res66512,Con67362], Mul59646), 
LMin61589 = minimum_layer([[[[[[0.4094, 0.1313], [0.9423, 0.1561]]]]], [[[[[0.4784, 0.8412], [0.1336, 0.3429]]]]]], Min61589), 
LRes65277 = reshape_layer(Min61589, [1, 1, 4], Res65277), 
LRes70834 = reshape_layer(Res65277, [1, 4], Res70834), 
LZer92491 = zero_padding1D_layer(Res70834, 2, 0, Zer92491), 
LMas55882 = masking_layer([[[1.2551, 1.4903, 1.6199], [1.1647, 1.9748, 1.9867], [1.2623, 1.5423, 1.7947]]], 1, Mas55882), 
LCon77547 = concatenate_layer([Mas55882,[[[0.2037], [0.8408], [0.9559]]]], 2, Con77547), 
LMin14937 = minimum_layer([Zer92491,Con77547], Min14937), 
LRes99812 = reshape_layer(Min14937, [3, 4, 1], Res99812), 
LCon23240 = concatenate_layer([Res99812,[[[[0.7385], [0.6795], [0.9266], [0.1719]], [[0.3914], [0.0365], [0.2996], [0.6765]], [[0.9416], [0.0714], [0.3235], [0.7413]]]]], 3, Con23240), 
LAve53667 = average_layer([[[[[0.8318, 0.7584]], [[0.4076, 0.4713]]]], [[[[0.5615, 0.1994]], [[0.1078, 0.5633]]]]], Ave53667), 
LAdd54759 = add_layer([[[[[0.6162, 0.3436]], [[0.0771, 0.0937]]]], [[[[0.7971, 0.3955]], [[0.0558, 0.885]]]]], Add54759), 
LMax53700 = maximum_layer([Ave53667,Add54759], Max53700), 
LZer68098 = zero_padding2D_layer(Max53700, 1, 0, 3, 0, Zer68098), 
LSub40119 = subtract_layer(Con23240,Zer68098, Sub40119), 
LPRe33016 = prelu_layer(Sub40119, [[[0.0041, 0.366], [0.3817, 0.6827], [0.3861, 0.3779], [0.8519, 0.1138]], [[0.4417, 0.6337], [0.9712, 0.1183], [0.1411, 0.9725], [0.0727, 0.001]], [[0.4852, 0.3484], [0.2832, 0.668], [0.9119, 0.8069], [0.8435, 0.6095]]], PRe33016), 
LZer15083 = zero_padding2D_layer(PRe33016, 2, 0, 0, 0, Zer15083), 
LCon70720 = concatenate_layer([Zer15083,[[[[0.6219, 0.4393, 0.7522, 0.7241], [0.6405, 0.8362, 0.6773, 0.2213], [0.4168, 0.4823, 0.3591, 0.8872], [0.0789, 0.392, 0.9208, 0.4971]], [[0.9245, 0.1297, 0.1373, 0.6047], [0.8975, 0.8653, 0.803, 0.4532], [0.8351, 0.5813, 0.7867, 0.8866], [0.7006, 0.7692, 0.2871, 0.0717]], [[0.2449, 0.345, 0.418, 0.251], [0.7959, 0.1885, 0.403, 0.9333], [0.1677, 0.6614, 0.3385, 0.8998], [0.0005, 0.6985, 0.6986, 0.1529]], [[0.1972, 0.5807, 0.4958, 0.4698], [0.5038, 0.296, 0.2875, 0.533], [0.6976, 0.4764, 0.0227, 0.7071], [0.2931, 0.2551, 0.0624, 0.4077]], [[0.1521, 0.0331, 0.5725, 0.6614], [0.8951, 0.067, 0.8893, 0.9003], [0.5485, 0.9907, 0.3884, 0.2489], [0.4371, 0.8738, 0.8487, 0.5656]]]]], 3, Con70720), 
LMax61352 = maximum_layer([Mul59646,Con70720], Max61352), 
exec_layers([LZer66954,LRes66512,LAdd17710,LRes6803,LPRe71511,LZer74680,LCon67362,LMul59646,LMin61589,LRes65277,LRes70834,LZer92491,LMas55882,LCon77547,LMin14937,LRes99812,LCon23240,LAve53667,LAdd54759,LMax53700,LZer68098,LSub40119,LPRe33016,LZer15083,LCon70720,LMax61352],["Zer66954","Res66512","Add17710","Res6803","PRe71511","Zer74680","Con67362","Mul59646","Min61589","Res65277","Res70834","Zer92491","Mas55882","Con77547","Min14937","Res99812","Con23240","Ave53667","Add54759","Max53700","Zer68098","Sub40119","PRe33016","Zer15083","Con70720","Max61352"],Max61352,"Max61352")

Actual (Unparsed): [[[[0.0000000, 0.0000000, 0.6219000, 0.4393000, 0.7522000, 0.7241000], [0.0000000, 0.0000000, 0.6405000, 0.8362000, 0.6773000, 0.2213000], [0.0000000, 0.0000000, 0.4168000, 0.4823000, 0.3591000, 0.8872000], [0.0000000, 0.0000000, 0.0789000, 0.3920000, 0.9208000, 0.4971000]], [[0.0000000, 0.0000000, 0.9245000, 0.1297000, 0.1373000, 0.6047000], [0.0000000, 0.0000000, 0.8975000, 0.8653000, 0.8030000, 0.4532000], [0.0000000, 0.0000000, 0.8351000, 0.5813000, 0.7867000, 0.8866000], [0.0000000, 0.0000000, 0.7006000, 0.7692000, 0.2871000, 0.0717000]], [[0.0000000, 0.7385000, 0.2449000, 0.3450000, 0.4180000, 0.2510000], [0.0000000, 0.6795000, 0.7959000, 0.1885000, 0.4030000, 0.9333000], [0.0000000, 0.9266000, 0.1677000, 0.6614000, 0.3385000, 0.8998000], [0.0000000, 0.1719000, 0.0005000, 0.6985000, 0.6986000, 0.1529000]], [[0.0000000, 0.3914000, 0.1972000, 0.5807000, 0.4958000, 0.4698000], [0.0000000, 0.0365000, 0.5038000, 0.2960000, 0.2875000, 0.5330000], [0.0000000, 0.2996000, 0.6976000, 2.5847006, 0.0227000, 0.7071000], [0.0000000, 0.0000000, 0.2931000, 0.2551000, 0.0624000, 0.4077000]], [[0.4094000, 0.9416000, 0.1521000, 0.0331000, 0.5725000, 0.6614000], [0.1313000, 0.0714000, 0.8951000, 0.0670000, 0.8893000, 0.9003000], [0.1336000, 0.3235000, 0.5485000, 0.9907000, 0.3884000, 0.2489000], [0.0000000, 0.0000000, 0.4371000, 0.8738000, 0.8487000, 0.5656000]]]]

Expected (Unparsed): [[[[0,0,0.6219,0.4393,0.7522,0.7241],[0,0,0.6405,0.8362,0.6773,0.2213],[0,0,0.4168,0.4823,0.3591,0.8872],[0,0,0.0789,0.392,0.9208,0.4971]],[[0,0,0.9245,0.1297,0.1373,0.6047],[0,0,0.8975,0.8653,0.803,0.4532],[0,0,0.8351,0.5813,0.7867,0.8866],[0,0,0.7006,0.7692,0.2871,0.0717]],[[0,0.7385,0.2449,0.345,0.418,0.251],[0,0.6795,0.7959,0.1885,0.403,0.9333],[0,0.9266,0.1677,0.6614,0.3385,0.8998],[0,0.1719,0.0005,0.6985,0.6986,0.1529]],[[0,0.3914,0.1972,0.5807,0.4958,0.4698],[0,0.0365,0.5038,0.296,0.2875,0.533],[0.0,0.2996,0.6976,2.58470052,0.0227,0.7071],[0.0,0.0,0.2931,0.2551,0.0624,0.4077]],[[0.4094,0.9416,0.1521,0.0331,0.5725,0.6614],[0.1313,0.0714,0.8951,0.067,0.8893,0.9003],[0.1336,0.3235,0.5485,0.9907,0.3884,0.2489],[0.0,0.0,0.4371,0.8738,0.8487,0.5656]]]]

Actual:   [[[[0, 0, 0.6219, 0.4393, 0.7522, 0.7241], [0, 0, 0.6405, 0.8362, 0.6773, 0.2213], [0, 0, 0.4168, 0.4823, 0.3591, 0.8872], [0, 0, 0.0789, 0.392, 0.9208, 0.4971]], [[0, 0, 0.9245, 0.1297, 0.1373, 0.6047], [0, 0, 0.8975, 0.8653, 0.803, 0.4532], [0, 0, 0.8351, 0.5813, 0.7867, 0.8866], [0, 0, 0.7006, 0.7692, 0.2871, 0.0717]], [[0, 0.7385, 0.2449, 0.345, 0.418, 0.251], [0, 0.6795, 0.7959, 0.1885, 0.403, 0.9333], [0, 0.9266, 0.1677, 0.6614, 0.3385, 0.8998], [0, 0.1719, 0.0005, 0.6985, 0.6986, 0.1529]], [[0, 0.3914, 0.1972, 0.5807, 0.4958, 0.4698], [0, 0.0365, 0.5038, 0.296, 0.2875, 0.533], [0, 0.2996, 0.6976, 2.5848, 0.0227, 0.7071], [0, 0, 0.2931, 0.2551, 0.0624, 0.4077]], [[0.4094, 0.9416, 0.1521, 0.0331, 0.5725, 0.6614], [0.1313, 0.0714, 0.8951, 0.067, 0.8893, 0.9003], [0.1336, 0.3235, 0.5485, 0.9907, 0.3884, 0.2489], [0, 0, 0.4371, 0.8738, 0.8487, 0.5656]]]]

Expected: [[[[0, 0, 0.6219, 0.4393, 0.7522, 0.7241], [0, 0, 0.6405, 0.8362, 0.6773, 0.2213], [0, 0, 0.4168, 0.4823, 0.3591, 0.8872], [0, 0, 0.0789, 0.392, 0.9208, 0.4971]], [[0, 0, 0.9245, 0.1297, 0.1373, 0.6047], [0, 0, 0.8975, 0.8653, 0.803, 0.4532], [0, 0, 0.8351, 0.5813, 0.7867, 0.8866], [0, 0, 0.7006, 0.7692, 0.2871, 0.0717]], [[0, 0.7385, 0.2449, 0.345, 0.418, 0.251], [0, 0.6795, 0.7959, 0.1885, 0.403, 0.9333], [0, 0.9266, 0.1677, 0.6614, 0.3385, 0.8998], [0, 0.1719, 0.0005, 0.6985, 0.6986, 0.1529]], [[0, 0.3914, 0.1972, 0.5807, 0.4958, 0.4698], [0, 0.0365, 0.5038, 0.296, 0.2875, 0.533], [0, 0.2996, 0.6976, 2.5848, 0.0227, 0.7071], [0, 0, 0.2931, 0.2551, 0.0624, 0.4077]], [[0.4094, 0.9416, 0.1521, 0.0331, 0.5725, 0.6614], [0.1313, 0.0714, 0.8951, 0.067, 0.8893, 0.9003], [0.1336, 0.3235, 0.5485, 0.9907, 0.3884, 0.2489], [0, 0, 0.4371, 0.8738, 0.8487, 0.5656]]]]