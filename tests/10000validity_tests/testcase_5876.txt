import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Dot69648 = tf.keras.layers.Input(shape=([3, 2]))
in1Dot69648 = tf.keras.layers.Input(shape=([3, 2]))
in0Con93503 = tf.keras.layers.Input(shape=([3, 3, 1, 1]))
in0Add16160 = tf.keras.layers.Input(shape=([1, 1, 1, 2]))
in1Add16160 = tf.keras.layers.Input(shape=([1, 1, 1, 2]))

Dot69648 = keras.layers.Dot(axes=(2, 2), name = 'Dot69648', )([in0Dot69648,in1Dot69648])
Res73251 = keras.layers.Reshape((3, 3, 1), name = 'Res73251', )(Dot69648)
Res11197 = keras.layers.Reshape((3, 3, 1, 1), name = 'Res11197', )(Res73251)
Con93503 = keras.layers.Concatenate(axis=4, name = 'Con93503', )([Res11197,in0Con93503])
Add16160 = keras.layers.Add(name = 'Add16160', )([in0Add16160,in1Add16160])
Zer61571 = keras.layers.ZeroPadding3D(padding=((2, 0), (2, 0), (0, 0)), name = 'Zer61571', )(Add16160)
Max2983 = keras.layers.Maximum(name = 'Max2983', )([Con93503,Zer61571])
Res45191 = keras.layers.Reshape((3, 3, 2), name = 'Res45191', )(Max2983)
Con67843 = keras.layers.Conv2DTranspose(3, (2, 2),strides=(1, 1), padding='same', name = 'Con67843', )(Res45191)
Thr785 = keras.layers.ThresholdedReLU(theta=0.9653116549109874, name = 'Thr785', )(Con67843)
model = tf.keras.models.Model(inputs=[in0Dot69648,in1Dot69648,in0Con93503,in0Add16160,in1Add16160], outputs=Thr785)
w = model.get_layer('Con67843').get_weights() 
w[0] = np.array([[[[0.1163, 0.1477], [0.0285, 0.8286], [0.5086, 0.0337]], [[0.7705, 0.4954], [0.9586, 0.2406], [0.5944, 0.3632]]], [[[0.3112, 0.0827], [0.2004, 0.9912], [0.3522, 0.6813]], [[0.9872, 0.3938], [0.5916, 0.0178], [0.557, 0.1493]]]])
w[1] = np.array([0, 0, 0])
model.get_layer('Con67843').set_weights(w) 
in0Dot69648 = tf.constant([[[0.8876, 0.6186], [0.4258, 0.8269], [0.3887, 0.0148]]])
in1Dot69648 = tf.constant([[[0.2427, 0.9775], [0.6355, 0.705], [0.4301, 0.7704]]])
in0Con93503 = tf.constant([[[[[0.2797]], [[0.36]], [[0.0867]]], [[[0.1042]], [[0.9285]], [[0.5935]]], [[[0.7949]], [[0.2246]], [[0.6385]]]]])
in0Add16160 = tf.constant([[[[[0.9624, 0.3857]]]]])
in1Add16160 = tf.constant([[[[[0.9311, 0.9903]]]]])
print (np.array2string(model.predict([in0Dot69648,in1Dot69648,in0Con93503,in0Add16160,in1Add16160],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Thr785.png')

LDot69648 = dot_layer([[[0.8876, 0.6186], [0.4258, 0.8269], [0.3887, 0.0148]]], [[[0.2427, 0.9775], [0.6355, 0.705], [0.4301, 0.7704]]], 2, 2, Dot69648), 
LRes73251 = reshape_layer(Dot69648, [3, 3, 1], Res73251), 
LRes11197 = reshape_layer(Res73251, [3, 3, 1, 1], Res11197), 
LCon93503 = concatenate_layer([Res11197,[[[[[0.2797]], [[0.36]], [[0.0867]]], [[[0.1042]], [[0.9285]], [[0.5935]]], [[[0.7949]], [[0.2246]], [[0.6385]]]]]], 4, Con93503), 
LAdd16160 = add_layer([[[[[[0.9624, 0.3857]]]]], [[[[[0.9311, 0.9903]]]]]], Add16160), 
LZer61571 = zero_padding3D_layer(Add16160, 2, 0, 2, 0, 0, 0, Zer61571), 
LMax2983 = maximum_layer([Con93503,Zer61571], Max2983), 
LRes45191 = reshape_layer(Max2983, [3, 3, 2], Res45191), 
LCon67843 = conv2D_transpose_layer(Res45191, 2, 2,[[[[0.1163, 0.1477], [0.0285, 0.8286], [0.5086, 0.0337]], [[0.7705, 0.4954], [0.9586, 0.2406], [0.5944, 0.3632]]], [[[0.3112, 0.0827], [0.2004, 0.9912], [0.3522, 0.6813]], [[0.9872, 0.3938], [0.5916, 0.0178], [0.557, 0.1493]]]],[0, 0, 0], 1, 1, true, Con67843), 
LThr785 = thresholded_relu_layer(Con67843, 0.9653116549109874, Thr785), 
exec_layers([LDot69648,LRes73251,LRes11197,LCon93503,LAdd16160,LZer61571,LMax2983,LRes45191,LCon67843,LThr785],["Dot69648","Res73251","Res11197","Con93503","Add16160","Zer61571","Max2983","Res45191","Con67843","Thr785"],Thr785,"Thr785")

Actual (Unparsed): [[[[0.0000000, 0.0000000, 0.0000000], [0.0000000, 1.1802469, 1.1098807], [1.0616138, 1.1416932, 1.1647272]], [[0.0000000, 0.0000000, 0.0000000], [2.2512246, 2.7400664, 2.1412218], [2.7041238, 2.4128311, 2.2539532]], [[0.0000000, 0.0000000, 0.0000000], [1.8241589, 2.1215555, 1.9484402], [2.2456842, 2.7690864, 2.5512873]]]]

Expected (Unparsed): [[[[0,0,0],[0,1.180246826172,1.109880652768],[1.0616137744599998,1.14169314878,1.1647271516400002]],[[0,0,0],[2.251224519929,2.740066402178,2.141221808844],[2.7041237753419995,2.41283109409,2.253953189924]],[[0,0,0],[1.8241588764319998,2.1215554546549997,1.948440171616],[2.245684209613,2.769086384786,2.551287252588]]]]

Actual:   [[[[0, 0, 0], [0, 1.1803, 1.1099], [1.0617, 1.1417, 1.1648]], [[0, 0, 0], [2.2513, 2.7401, 2.1413], [2.7042, 2.4129, 2.254]], [[0, 0, 0], [1.8242, 2.1216, 1.9485], [2.2457, 2.7691, 2.5513]]]]

Expected: [[[[0, 0, 0], [0, 1.1803, 1.1099], [1.0617, 1.1417, 1.1648]], [[0, 0, 0], [2.2513, 2.7401, 2.1413], [2.7042, 2.4129, 2.254]], [[0, 0, 0], [1.8242, 2.1216, 1.9485], [2.2457, 2.7691, 2.5513]]]]