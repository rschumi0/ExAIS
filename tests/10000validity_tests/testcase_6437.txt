import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Glo40529 = tf.keras.layers.Input(shape=([1, 1, 1, 1]))
in0Glo43069 = tf.keras.layers.Input(shape=([1, 1, 1]))
in0Mul49421 = tf.keras.layers.Input(shape=([1, 1]))
in1Mul49421 = tf.keras.layers.Input(shape=([1, 1]))
in0Con46373 = tf.keras.layers.Input(shape=([2, 1]))
in0Dot45984 = tf.keras.layers.Input(shape=([3, 2]))
in1Dot45984 = tf.keras.layers.Input(shape=([3, 2]))

Glo40529 = keras.layers.GlobalAveragePooling3D(name = 'Glo40529', )(in0Glo40529)
Res53935 = keras.layers.Reshape((1, 1), name = 'Res53935', )(Glo40529)
Res29647 = keras.layers.Reshape((1, 1, 1), name = 'Res29647', )(Res53935)
Res13979 = keras.layers.Reshape((1, 1, 1, 1), name = 'Res13979', )(Res29647)
Cro6477 = keras.layers.Cropping3D(cropping=((0, 0), (0, 0), (0, 0)), name = 'Cro6477', )(Res13979)
Res36690 = keras.layers.Reshape((1, 1, 1), name = 'Res36690', )(Cro6477)
Glo43069 = keras.layers.GlobalMaxPool2D(name = 'Glo43069', )(in0Glo43069)
Res50728 = keras.layers.Reshape((1, 1, 1), name = 'Res50728', )(Glo43069)
Add14481 = keras.layers.Add(name = 'Add14481', )([Res36690,Res50728])
Res32390 = keras.layers.Reshape((1, 1), name = 'Res32390', )(Add14481)
Mul49421 = keras.layers.Multiply(name = 'Mul49421', )([in0Mul49421,in1Mul49421])
Mul2211 = keras.layers.Multiply(name = 'Mul2211', )([Res32390,Mul49421])
Zer71342 = keras.layers.ZeroPadding1D(padding=((1, 0)), name = 'Zer71342', )(Mul2211)
Con46373 = keras.layers.Concatenate(axis=2, name = 'Con46373', )([Zer71342,in0Con46373])
Dot45984 = keras.layers.Dot(axes=(1, 1), name = 'Dot45984', )([in0Dot45984,in1Dot45984])
Min32474 = keras.layers.Minimum(name = 'Min32474', )([Con46373,Dot45984])
model = tf.keras.models.Model(inputs=[in0Glo40529,in0Glo43069,in0Mul49421,in1Mul49421,in0Con46373,in0Dot45984,in1Dot45984], outputs=Min32474)
in0Glo40529 = tf.constant([[[[[1.9051]]]]])
in0Glo43069 = tf.constant([[[[1.5582]]]])
in0Mul49421 = tf.constant([[[0.2566]]])
in1Mul49421 = tf.constant([[[0.7147]]])
in0Con46373 = tf.constant([[[0.7305], [0.2913]]])
in0Dot45984 = tf.constant([[[0.0791, 0.6443], [0.451, 0.5165], [0.112, 0.2574]]])
in1Dot45984 = tf.constant([[[0.6623, 0.0042], [0.2556, 0.5573], [0.1233, 0.0578]]])
print (np.array2string(model.predict([in0Glo40529,in0Glo43069,in0Mul49421,in1Mul49421,in0Con46373,in0Dot45984,in1Dot45984],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Min32474.png')

LGlo40529 = global_average_pooling3D_layer([[[[[1.9051]]]]], Glo40529), 
LRes53935 = reshape_layer(Glo40529, [1, 1], Res53935), 
LRes29647 = reshape_layer(Res53935, [1, 1, 1], Res29647), 
LRes13979 = reshape_layer(Res29647, [1, 1, 1, 1], Res13979), 
LCro6477 = cropping3D_layer(Res13979, 0, 0, 0, 0, 0, 0, Cro6477), 
LRes36690 = reshape_layer(Cro6477, [1, 1, 1], Res36690), 
LGlo43069 = global_max_pool2D_layer([[[[1.5582]]]], Glo43069), 
LRes50728 = reshape_layer(Glo43069, [1, 1, 1], Res50728), 
LAdd14481 = add_layer([Res36690,Res50728], Add14481), 
LRes32390 = reshape_layer(Add14481, [1, 1], Res32390), 
LMul49421 = multiply_layer([[[[0.2566]]], [[[0.7147]]]], Mul49421), 
LMul2211 = multiply_layer([Res32390,Mul49421], Mul2211), 
LZer71342 = zero_padding1D_layer(Mul2211, 1, 0, Zer71342), 
LCon46373 = concatenate_layer([Zer71342,[[[0.7305], [0.2913]]]], 2, Con46373), 
LDot45984 = dot_layer([[[0.0791, 0.6443], [0.451, 0.5165], [0.112, 0.2574]]], [[[0.6623, 0.0042], [0.2556, 0.5573], [0.1233, 0.0578]]], 1, 1, Dot45984), 
LMin32474 = minimum_layer([Con46373,Dot45984], Min32474), 
exec_layers([LGlo40529,LRes53935,LRes29647,LRes13979,LCro6477,LRes36690,LGlo43069,LRes50728,LAdd14481,LRes32390,LMul49421,LMul2211,LZer71342,LCon46373,LDot45984,LMin32474],["Glo40529","Res53935","Res29647","Res13979","Cro6477","Res36690","Glo43069","Res50728","Add14481","Res32390","Mul49421","Mul2211","Zer71342","Con46373","Dot45984","Min32474"],Min32474,"Min32474")

Actual (Unparsed): [[[0.0000000, 0.2581481], [0.5904747, 0.2913000]]]

Expected (Unparsed): [[[0,0.25814812000000004],[0.59047471,0.2913]]]

Actual:   [[[0, 0.2582], [0.5905, 0.2913]]]

Expected: [[[0, 0.2582], [0.5905, 0.2913]]]