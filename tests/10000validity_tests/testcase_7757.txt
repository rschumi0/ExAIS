import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Loc84362 = tf.keras.layers.Input(shape=([2, 2]))
in0Bat583 = tf.keras.layers.Input(shape=([1, 2, 1]))
in0Min73039 = tf.keras.layers.Input(shape=([1, 1, 1, 1]))
in1Min73039 = tf.keras.layers.Input(shape=([1, 1, 1, 1]))
in0Con20676 = tf.keras.layers.Input(shape=([1, 3]))

Loc84362 = keras.layers.LocallyConnected1D(4, (2),strides=(2), name = 'Loc84362', )(in0Loc84362)
Res82966 = keras.layers.Reshape((1, 4, 1), name = 'Res82966', )(Loc84362)
Bat583 = keras.layers.BatchNormalization(axis=1, epsilon=0.7076842140784081,  name = 'Bat583', )(in0Bat583)
Zer58218 = keras.layers.ZeroPadding2D(padding=((0, 0), (2, 0)), name = 'Zer58218', )(Bat583)
Add24003 = keras.layers.Add(name = 'Add24003', )([Res82966,Zer58218])
Res8294 = keras.layers.Reshape((1, 4), name = 'Res8294', )(Add24003)
Min73039 = keras.layers.Minimum(name = 'Min73039', )([in0Min73039,in1Min73039])
Res18867 = keras.layers.Reshape((1, 1, 1), name = 'Res18867', )(Min73039)
Res72899 = keras.layers.Reshape((1, 1), name = 'Res72899', )(Res18867)
Per68793 = keras.layers.Permute((1,2), name = 'Per68793',)(Res72899)
Con20676 = keras.layers.Concatenate(axis=2, name = 'Con20676', )([Per68793,in0Con20676])
Mul88735 = keras.layers.Multiply(name = 'Mul88735', )([Res8294,Con20676])
model = tf.keras.models.Model(inputs=[in0Loc84362,in0Bat583,in0Min73039,in1Min73039,in0Con20676], outputs=Mul88735)
w = model.get_layer('Loc84362').get_weights() 
w[0] = np.array([[[0.9925, 0.2893, 0.7782, 0.2528], [0.0144, 0.1137, 0.0524, 0.5565], [0.9022, 0.9839, 0.4794, 0.2175], [0.8375, 0.9205, 0.8963, 0.8637]]])
w[1] = np.array([[0, 0, 0, 0]])
model.get_layer('Loc84362').set_weights(w) 
w = model.get_layer('Bat583').get_weights() 
w[0] = np.array([0.5668])
w[1] = np.array([0.8707])
w[2] = np.array([0.743])
w[3] = np.array([0.5495])
model.get_layer('Bat583').set_weights(w) 
in0Loc84362 = tf.constant([[[0.1941, 0.5663], [0.6098, 0.6459]]])
in0Bat583 = tf.constant([[[[1.9142], [1.0068]]]])
in0Min73039 = tf.constant([[[[[0.7567]]]]])
in1Min73039 = tf.constant([[[[[0.7234]]]]])
in0Con20676 = tf.constant([[[0.8324, 0.1444, 0.2569]]])
print (np.array2string(model.predict([in0Loc84362,in0Bat583,in0Min73039,in1Min73039,in0Con20676],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Mul88735.png')

LLoc84362 = locally_connected1D_layer([[[0.1941, 0.5663], [0.6098, 0.6459]]], 2,[[[0.9925, 0.2893, 0.7782, 0.2528], [0.0144, 0.1137, 0.0524, 0.5565], [0.9022, 0.9839, 0.4794, 0.2175], [0.8375, 0.9205, 0.8963, 0.8637]]],[[0, 0, 0, 0]], 2, Loc84362), 
LRes82966 = reshape_layer(Loc84362, [1, 4, 1], Res82966), 
LBat583 = batch_normalization_layer([[[[1.9142], [1.0068]]]], 1, 0.7076842140784081, [0.5668], [0.8707], [0.743], [0.5495], Bat583), 
LZer58218 = zero_padding2D_layer(Bat583, 0, 0, 2, 0, Zer58218), 
LAdd24003 = add_layer([Res82966,Zer58218], Add24003), 
LRes8294 = reshape_layer(Add24003, [1, 4], Res8294), 
LMin73039 = minimum_layer([[[[[[0.7567]]]]], [[[[[0.7234]]]]]], Min73039), 
LRes18867 = reshape_layer(Min73039, [1, 1, 1], Res18867), 
LRes72899 = reshape_layer(Res18867, [1, 1], Res72899), 
LPer68793 = permute_layer(Res72899, 1,2, Per68793), 
LCon20676 = concatenate_layer([Per68793,[[[0.8324, 0.1444, 0.2569]]]], 2, Con20676), 
LMul88735 = multiply_layer([Res8294,Con20676], Mul88735), 
exec_layers([LLoc84362,LRes82966,LBat583,LZer58218,LAdd24003,LRes8294,LMin73039,LRes18867,LRes72899,LPer68793,LCon20676,LMul88735],["Loc84362","Res82966","Bat583","Zer58218","Add24003","Res8294","Min73039","Res18867","Res72899","Per68793","Con20676","Mul88735"],Mul88735,"Mul88735")

Actual (Unparsed): [[[0.9345617, 1.0946681, 0.3631278, 0.5288964]]]

Expected (Unparsed): [[[0.9345617476520002,1.094668105364,0.36312776315701134,0.5288963410144449]]]

Actual:   [[[0.9346, 1.0947, 0.3632, 0.5289]]]

Expected: [[[0.9346, 1.0947, 0.3632, 0.5289]]]