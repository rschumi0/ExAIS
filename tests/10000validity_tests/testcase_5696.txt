import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Mul75359 = tf.keras.layers.Input(shape=([2, 1]))
in1Mul75359 = tf.keras.layers.Input(shape=([2, 1]))

Mul75359 = keras.layers.Multiply(name = 'Mul75359', )([in0Mul75359,in1Mul75359])
Sep33891 = keras.layers.SeparableConv1D(2, (2),strides=(1), padding='same', name = 'Sep33891', )(Mul75359)
model = tf.keras.models.Model(inputs=[in0Mul75359,in1Mul75359], outputs=Sep33891)
w = model.get_layer('Sep33891').get_weights() 
w[0] = np.array([[[0.015]], [[0.7885]]])
w[1] = np.array([[[0.8623, 0.1879]]])
w[2] = np.array([0, 0])
model.get_layer('Sep33891').set_weights(w) 
in0Mul75359 = tf.constant([[[0.2552], [0.1705]]])
in1Mul75359 = tf.constant([[[0.5786], [0.8281]]])
print (np.array2string(model.predict([in0Mul75359,in1Mul75359],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Sep33891.png')

LMul75359 = multiply_layer([[[[0.2552], [0.1705]]], [[[0.5786], [0.8281]]]], Mul75359), 
LSep33891 = separable_conv1D_layer(Mul75359, 2,[[[[0.015]], [[0.7885]]],[[[0.8623, 0.1879]]]],[0, 0], 1, true, Sep33891), 
exec_layers([LMul75359,LSep33891],["Mul75359","Sep33891"],Sep33891,"Sep33891")

Actual (Unparsed): [[[0.0979090, 0.0213349], [0.0018262, 0.0003979]]]

Expected (Unparsed): [[[0.09790901165806751,0.021334922057927506],[0.001826235636225,0.00039794697442500004]]]

Actual:   [[[0.098, 0.0214], [0.0019, 0.0004]]]

Expected: [[[0.098, 0.0214], [0.0019, 0.0004]]]