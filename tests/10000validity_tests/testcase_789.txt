import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Sof37816 = tf.keras.layers.Input(shape=([1, 2, 2]))

Sof37816 = keras.layers.Softmax(axis=1, name = 'Sof37816', input_shape=(1, 2, 2))(in0Sof37816)
Dep62846 = keras.layers.DepthwiseConv2D((1, 1),strides=(1, 1), padding='valid', name = 'Dep62846', )(Sof37816)
Res33900 = keras.layers.Reshape((1, 4), name = 'Res33900', )(Dep62846)
Den1083 = keras.layers.Dense(1,name = 'Den1083', )(Res33900)
Sof35177 = keras.layers.Softmax(axis=1, name = 'Sof35177', )(Den1083)
model = tf.keras.models.Model(inputs=[in0Sof37816], outputs=Sof35177)
w = model.get_layer('Dep62846').get_weights() 
w[0] = np.array([[[[0.9358], [0.0578]]]])
w[1] = np.array([0, 0])
model.get_layer('Dep62846').set_weights(w) 
w = model.get_layer('Den1083').get_weights() 
w[0] = np.array([[0.1259], [0.3626], [0.308], [0.422]])
w[1] = np.array([0.8331])
model.get_layer('Den1083').set_weights(w) 
in0Sof37816 = tf.constant([[[[0.5957, 0.1609], [0.4082, 0.0326]]]])
print (np.array2string(model.predict([in0Sof37816],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Sof35177.png')

LSof37816 = softmax_layer([[[[0.5957, 0.1609], [0.4082, 0.0326]]]], 1, Sof37816), 
LDep62846 = depthwise_conv2D_layer(Sof37816, 1, 1,[[[[0.9358], [0.0578]]]],[0, 0], 1, 1, false, Dep62846), 
LRes33900 = reshape_layer(Dep62846, [1, 4], Res33900), 
LDen1083 = dense_layer(Res33900, [[0.1259], [0.3626], [0.308], [0.422]],[0.8331], Den1083), 
LSof35177 = softmax_layer(Den1083, 1, Sof35177), 
exec_layers([LSof37816,LDep62846,LRes33900,LDen1083,LSof35177],["Sof37816","Dep62846","Res33900","Den1083","Sof35177"],Sof35177,"Sof35177")

Actual (Unparsed): [[[1.0000000]]]

Expected (Unparsed): [[[1.0]]]

Actual:   [[[1]]]

Expected: [[[1]]]