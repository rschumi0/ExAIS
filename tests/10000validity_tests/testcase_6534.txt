import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Sof3429 = tf.keras.layers.Input(shape=([1, 2]))
in0Glo95814 = tf.keras.layers.Input(shape=([1, 2, 1]))
in0Con74693 = tf.keras.layers.Input(shape=([1]))
in0LST96557 = tf.keras.layers.Input(shape=([1, 2]))

Sof3429 = keras.layers.Softmax(axis=1, name = 'Sof3429', input_shape=(1, 2))(in0Sof3429)
Fla3200 = keras.layers.Flatten(name = 'Fla3200', )(Sof3429)
Glo95814 = keras.layers.GlobalMaxPool2D(name = 'Glo95814', )(in0Glo95814)
Con74693 = keras.layers.Concatenate(axis=1, name = 'Con74693', )([Glo95814,in0Con74693])
Min13374 = keras.layers.Minimum(name = 'Min13374', )([Fla3200,Con74693])
Res7972 = keras.layers.Reshape((2, 1), name = 'Res7972', )(Min13374)
LST96557 = keras.layers.LSTM(2,recurrent_activation='sigmoid', name = 'LST96557', )(in0LST96557)
Res78069 = keras.layers.Reshape((2, 1), name = 'Res78069', )(LST96557)
LST93104 = keras.layers.LSTM(3,recurrent_activation='sigmoid', name = 'LST93104', )(Res78069)
Res26617 = keras.layers.Reshape((3, 1), name = 'Res26617', )(LST93104)
Max14847 = keras.layers.MaxPool1D(pool_size=(3), strides=(3), padding='valid', name = 'Max14847', )(Res26617)
Zer9440 = keras.layers.ZeroPadding1D(padding=((1, 0)), name = 'Zer9440', )(Max14847)
Sub41329 = keras.layers.Subtract(name = 'Sub41329', )([Res7972,Zer9440])
model = tf.keras.models.Model(inputs=[in0Sof3429,in0Glo95814,in0Con74693,in0LST96557], outputs=Sub41329)
w = model.get_layer('LST96557').get_weights() 
w[0] = np.array([[2, 9, 5, 8, 7, 9, 4, 4], [2, 7, 8, 5, 6, 5, 8, 1]])
w[1] = np.array([[6, 6, 2, 7, 6, 3, 7, 10], [1, 3, 6, 10, 10, 7, 4, 2]])
w[2] = np.array([6, 8, 4, 2, 9, 9, 4, 4])
model.get_layer('LST96557').set_weights(w) 
w = model.get_layer('LST93104').get_weights() 
w[0] = np.array([[7, 7, 9, 2, 4, 4, 6, 7, 8, 8, 2, 10]])
w[1] = np.array([[3, 8, 7, 10, 9, 2, 2, 6, 2, 2, 4, 7], [9, 8, 1, 8, 5, 3, 10, 6, 9, 7, 9, 8], [8, 6, 1, 4, 8, 10, 10, 6, 1, 4, 2, 5]])
w[2] = np.array([2, 3, 2, 4, 2, 2, 3, 5, 6, 9, 9, 8])
model.get_layer('LST93104').set_weights(w) 
in0Sof3429 = tf.constant([[[0.037, 0.8175]]])
in0Glo95814 = tf.constant([[[[1.3102], [1.478]]]])
in0Con74693 = tf.constant([[0.0343]])
in0LST96557 = tf.constant([[[4, 1]]])
print (np.array2string(model.predict([in0Sof3429,in0Glo95814,in0Con74693,in0LST96557],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Sub41329.png')

LSof3429 = softmax_layer([[[0.037, 0.8175]]], 1, Sof3429), 
LFla3200 = flatten_layer(Sof3429, Fla3200), 
LGlo95814 = global_max_pool2D_layer([[[[1.3102], [1.478]]]], Glo95814), 
LCon74693 = concatenate_layer([Glo95814,[[0.0343]]], 1, Con74693), 
LMin13374 = minimum_layer([Fla3200,Con74693], Min13374), 
LRes7972 = reshape_layer(Min13374, [2, 1], Res7972), 
LLST96557 = lstm_layer([[[4, 1]]],[[2, 9, 5, 8, 7, 9, 4, 4], [2, 7, 8, 5, 6, 5, 8, 1]],[[6, 6, 2, 7, 6, 3, 7, 10], [1, 3, 6, 10, 10, 7, 4, 2]],[6, 8, 4, 2, 9, 9, 4, 4], LST96557), 
LRes78069 = reshape_layer(LST96557, [2, 1], Res78069), 
LLST93104 = lstm_layer(Res78069,[[7, 7, 9, 2, 4, 4, 6, 7, 8, 8, 2, 10]],[[3, 8, 7, 10, 9, 2, 2, 6, 2, 2, 4, 7], [9, 8, 1, 8, 5, 3, 10, 6, 9, 7, 9, 8], [8, 6, 1, 4, 8, 10, 10, 6, 1, 4, 2, 5]],[2, 3, 2, 4, 2, 2, 3, 5, 6, 9, 9, 8], LST93104), 
LRes26617 = reshape_layer(LST93104, [3, 1], Res26617), 
LMax14847 = max_pool1D_layer(Res26617, 3, 3, false, Max14847), 
LZer9440 = zero_padding1D_layer(Max14847, 1, 0, Zer9440), 
LSub41329 = subtract_layer(Res7972,Zer9440, Sub41329), 
exec_layers([LSof3429,LFla3200,LGlo95814,LCon74693,LMin13374,LRes7972,LLST96557,LRes78069,LLST93104,LRes26617,LMax14847,LZer9440,LSub41329],["Sof3429","Fla3200","Glo95814","Con74693","Min13374","Res7972","LST96557","Res78069","LST93104","Res26617","Max14847","Zer9440","Sub41329"],Sub41329,"Sub41329")

Actual (Unparsed): [[[1.0000000], [-0.9297175]]]

Expected (Unparsed): [[[1.0],[-0.929717478383968]]]

Actual:   [[[1], [-0.9297]]]

Expected: [[[1], [-0.9297]]]