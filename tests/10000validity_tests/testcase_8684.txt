import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Min27443 = tf.keras.layers.Input(shape=([1, 2, 2, 1]))
in1Min27443 = tf.keras.layers.Input(shape=([1, 2, 2, 1]))
in0Con11958 = tf.keras.layers.Input(shape=([2, 2, 3, 1]))
in0Ave68859 = tf.keras.layers.Input(shape=([2, 2, 1, 2]))
in1Ave68859 = tf.keras.layers.Input(shape=([2, 2, 1, 2]))

Min27443 = keras.layers.Minimum(name = 'Min27443', )([in0Min27443,in1Min27443])
Zer43798 = keras.layers.ZeroPadding3D(padding=((1, 0), (0, 0), (1, 0)), name = 'Zer43798', )(Min27443)
Con11958 = keras.layers.Concatenate(axis=4, name = 'Con11958', )([Zer43798,in0Con11958])
Ave68859 = keras.layers.Average(name = 'Ave68859', )([in0Ave68859,in1Ave68859])
Zer98427 = keras.layers.ZeroPadding3D(padding=((0, 0), (0, 0), (2, 0)), name = 'Zer98427', )(Ave68859)
Ave23629 = keras.layers.Average(name = 'Ave23629', )([Con11958,Zer98427])
model = tf.keras.models.Model(inputs=[in0Min27443,in1Min27443,in0Con11958,in0Ave68859,in1Ave68859], outputs=Ave23629)
in0Min27443 = tf.constant([[[[[0.5548], [0.8701]], [[0.2177], [0.1602]]]]])
in1Min27443 = tf.constant([[[[[0.1295], [0.2203]], [[0.7653], [0.2823]]]]])
in0Con11958 = tf.constant([[[[[0.9946], [0.5119], [0.5157]], [[0.673], [0.4112], [0.9984]]], [[[0.0978], [0.4336], [0.0643]], [[0.4784], [0.433], [0.1515]]]]])
in0Ave68859 = tf.constant([[[[[0.6335, 0.5193]], [[0.0448, 0.3436]]], [[[0.1861, 0.3185]], [[0.0918, 0.0246]]]]])
in1Ave68859 = tf.constant([[[[[0.8494, 0.1654]], [[0.0856, 0.4113]]], [[[0.6767, 0.5532]], [[0.1968, 0.9154]]]]])
print (np.array2string(model.predict([in0Min27443,in1Min27443,in0Con11958,in0Ave68859,in1Ave68859],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Ave23629.png')

LMin27443 = minimum_layer([[[[[[0.5548], [0.8701]], [[0.2177], [0.1602]]]]], [[[[[0.1295], [0.2203]], [[0.7653], [0.2823]]]]]], Min27443), 
LZer43798 = zero_padding3D_layer(Min27443, 1, 0, 0, 0, 1, 0, Zer43798), 
LCon11958 = concatenate_layer([Zer43798,[[[[[0.9946], [0.5119], [0.5157]], [[0.673], [0.4112], [0.9984]]], [[[0.0978], [0.4336], [0.0643]], [[0.4784], [0.433], [0.1515]]]]]], 4, Con11958), 
LAve68859 = average_layer([[[[[[0.6335, 0.5193]], [[0.0448, 0.3436]]], [[[0.1861, 0.3185]], [[0.0918, 0.0246]]]]], [[[[[0.8494, 0.1654]], [[0.0856, 0.4113]]], [[[0.6767, 0.5532]], [[0.1968, 0.9154]]]]]], Ave68859), 
LZer98427 = zero_padding3D_layer(Ave68859, 0, 0, 0, 0, 2, 0, Zer98427), 
LAve23629 = average_layer([Con11958,Zer98427], Ave23629), 
exec_layers([LMin27443,LZer43798,LCon11958,LAve68859,LZer98427,LAve23629],["Min27443","Zer43798","Con11958","Ave68859","Zer98427","Ave23629"],Ave23629,"Ave23629")

Actual (Unparsed): [[[[[0.0000000, 0.4973000], [0.0000000, 0.2559500], [0.3707250, 0.4290250]], [[0.0000000, 0.3365000], [0.0000000, 0.2056000], [0.0326000, 0.6879250]]], [[[0.0000000, 0.0489000], [0.0647500, 0.2168000], [0.3258500, 0.2500750]], [[0.0000000, 0.2392000], [0.1088500, 0.2165000], [0.1522500, 0.3107500]]]]]

Expected (Unparsed): [[[[[0,0.4973],[0,0.25595],[0.37072499999999997,0.429025]],[[0,0.3365],[0,0.2056],[0.0326,0.687925]]],[[[0,0.0489],[0.06475,0.2168],[0.32585,0.250075]],[[0,0.2392],[0.10885,0.2165],[0.15225,0.31074999999999997]]]]]

Actual:   [[[[[0, 0.4973], [0, 0.256], [0.3708, 0.4291]], [[0, 0.3365], [0, 0.2056], [0.0326, 0.688]]], [[[0, 0.0489], [0.0648, 0.2168], [0.3259, 0.2501]], [[0, 0.2392], [0.1089, 0.2165], [0.1523, 0.3108]]]]]

Expected: [[[[[0, 0.4973], [0, 0.256], [0.3708, 0.4291]], [[0, 0.3365], [0, 0.2056], [0.0326, 0.688]]], [[[0, 0.0489], [0.0648, 0.2168], [0.3259, 0.2501]], [[0, 0.2392], [0.1089, 0.2165], [0.1523, 0.3108]]]]]