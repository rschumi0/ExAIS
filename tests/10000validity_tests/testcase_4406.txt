import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Dot66983 = tf.keras.layers.Input(shape=([2, 2]))
in1Dot66983 = tf.keras.layers.Input(shape=([2, 2]))
in0Add15755 = tf.keras.layers.Input(shape=([1, 2, 1, 1]))
in1Add15755 = tf.keras.layers.Input(shape=([1, 2, 1, 1]))
in0Sim97934 = tf.keras.layers.Input(shape=([3, 1]))
in0Con81309 = tf.keras.layers.Input(shape=([1]))

Dot66983 = keras.layers.Dot(axes=(1, 1), name = 'Dot66983', )([in0Dot66983,in1Dot66983])
Max57244 = keras.layers.MaxPool1D(pool_size=(1), strides=(1), padding='same', name = 'Max57244', )(Dot66983)
Res17743 = keras.layers.Reshape((2, 2, 1), name = 'Res17743', )(Max57244)
Res35154 = keras.layers.Reshape((2, 2, 1, 1), name = 'Res35154', )(Res17743)
Add15755 = keras.layers.Add(name = 'Add15755', )([in0Add15755,in1Add15755])
Zer40429 = keras.layers.ZeroPadding3D(padding=((1, 0), (0, 0), (0, 0)), name = 'Zer40429', )(Add15755)
Ave4430 = keras.layers.Average(name = 'Ave4430', )([Res35154,Zer40429])
Res90619 = keras.layers.Reshape((2, 2, 1), name = 'Res90619', )(Ave4430)
Res85847 = keras.layers.Reshape((2, 2), name = 'Res85847', )(Res90619)
Fla85150 = keras.layers.Flatten(name = 'Fla85150', )(Res85847)
Sim97934 = keras.layers.SimpleRNN(3,name = 'Sim97934', )(in0Sim97934)
Con81309 = keras.layers.Concatenate(axis=1, name = 'Con81309', )([Sim97934,in0Con81309])
Max91934 = keras.layers.Maximum(name = 'Max91934', )([Fla85150,Con81309])
Res94836 = keras.layers.Reshape((4, 1), name = 'Res94836', )(Max91934)
Max65818 = keras.layers.MaxPool1D(pool_size=(4), strides=(1), padding='same', name = 'Max65818', )(Res94836)
model = tf.keras.models.Model(inputs=[in0Dot66983,in1Dot66983,in0Add15755,in1Add15755,in0Sim97934,in0Con81309], outputs=Max65818)
w = model.get_layer('Sim97934').get_weights() 
w[0] = np.array([[7, 4, 6]])
w[1] = np.array([[6, 7, 6], [5, 2, 2], [6, 6, 6]])
w[2] = np.array([7, 1, 4])
model.get_layer('Sim97934').set_weights(w) 
in0Dot66983 = tf.constant([[[0.9832, 0.6651], [0.0409, 0.098]]])
in1Dot66983 = tf.constant([[[0.3436, 0.9228], [0.9207, 0.7725]]])
in0Add15755 = tf.constant([[[[[0.4507]], [[0.5609]]]]])
in1Add15755 = tf.constant([[[[[0.5428]], [[0.5862]]]]])
in0Sim97934 = tf.constant([[[6], [7], [5]]])
in0Con81309 = tf.constant([[0.5742]])
print (np.array2string(model.predict([in0Dot66983,in1Dot66983,in0Add15755,in1Add15755,in0Sim97934,in0Con81309],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Max65818.png')

LDot66983 = dot_layer([[[0.9832, 0.6651], [0.0409, 0.098]]], [[[0.3436, 0.9228], [0.9207, 0.7725]]], 1, 1, Dot66983), 
LMax57244 = max_pool1D_layer(Dot66983, 1, 1, true, Max57244), 
LRes17743 = reshape_layer(Max57244, [2, 2, 1], Res17743), 
LRes35154 = reshape_layer(Res17743, [2, 2, 1, 1], Res35154), 
LAdd15755 = add_layer([[[[[[0.4507]], [[0.5609]]]]], [[[[[0.5428]], [[0.5862]]]]]], Add15755), 
LZer40429 = zero_padding3D_layer(Add15755, 1, 0, 0, 0, 0, 0, Zer40429), 
LAve4430 = average_layer([Res35154,Zer40429], Ave4430), 
LRes90619 = reshape_layer(Ave4430, [2, 2, 1], Res90619), 
LRes85847 = reshape_layer(Res90619, [2, 2], Res85847), 
LFla85150 = flatten_layer(Res85847, Fla85150), 
LSim97934 = simple_rnn_layer([[[6], [7], [5]]],[[7, 4, 6]],[[6, 7, 6], [5, 2, 2], [6, 6, 6]],[7, 1, 4], Sim97934), 
LCon81309 = concatenate_layer([Sim97934,[[0.5742]]], 1, Con81309), 
LMax91934 = maximum_layer([Fla85150,Con81309], Max91934), 
LRes94836 = reshape_layer(Max91934, [4, 1], Res94836), 
LMax65818 = max_pool1D_layer(Res94836, 4, 1, true, Max65818), 
exec_layers([LDot66983,LMax57244,LRes17743,LRes35154,LAdd15755,LZer40429,LAve4430,LRes90619,LRes85847,LFla85150,LSim97934,LCon81309,LMax91934,LRes94836,LMax65818],["Dot66983","Max57244","Res17743","Res35154","Add15755","Zer40429","Ave4430","Res90619","Res85847","Fla85150","Sim97934","Con81309","Max91934","Res94836","Max65818"],Max65818,"Max65818")

Actual (Unparsed): [[[1.0000000], [1.0000000], [1.0000000], [1.0000000]]]

Expected (Unparsed): [[[1.0],[1.0],[1.0],[1.0]]]

Actual:   [[[1], [1], [1], [1]]]

Expected: [[[1], [1], [1], [1]]]