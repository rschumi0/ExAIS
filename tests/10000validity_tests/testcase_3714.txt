import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Max16574 = tf.keras.layers.Input(shape=([1, 1, 2]))
in1Max16574 = tf.keras.layers.Input(shape=([1, 1, 2]))

Max16574 = keras.layers.Maximum(name = 'Max16574', )([in0Max16574,in1Max16574])
Bat2468 = keras.layers.BatchNormalization(axis=1, epsilon=0.10214450615736398,  name = 'Bat2468', )(Max16574)
model = tf.keras.models.Model(inputs=[in0Max16574,in1Max16574], outputs=Bat2468)
w = model.get_layer('Bat2468').get_weights() 
w[0] = np.array([0.8608])
w[1] = np.array([0.2291])
w[2] = np.array([0.748])
w[3] = np.array([0.7173])
model.get_layer('Bat2468').set_weights(w) 
in0Max16574 = tf.constant([[[[0.9313, 0.1238]]]])
in1Max16574 = tf.constant([[[[0.9262, 0.8769]]]])
print (np.array2string(model.predict([in0Max16574,in1Max16574],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Bat2468.png')

LMax16574 = maximum_layer([[[[[0.9313, 0.1238]]]], [[[[0.9262, 0.8769]]]]], Max16574), 
LBat2468 = batch_normalization_layer(Max16574, 1, 0.10214450615736398, [0.8608], [0.2291], [0.748], [0.7173], Bat2468), 
exec_layers([LMax16574,LBat2468],["Max16574","Bat2468"],Bat2468,"Bat2468")

Actual (Unparsed): [[[[0.4034030, 0.3516732]]]]

Expected (Unparsed): [[[[0.4034030350504294,0.3516731654009839]]]]

Actual:   [[[[0.4035, 0.3517]]]]

Expected: [[[[0.4035, 0.3517]]]]