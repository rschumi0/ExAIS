import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Max33039 = tf.keras.layers.Input(shape=([1, 1, 2]))
in0Con31962 = tf.keras.layers.Input(shape=([2, 2, 1]))
in0Sub4444 = tf.keras.layers.Input(shape=([2, 2]))
in1Sub4444 = tf.keras.layers.Input(shape=([2, 2]))
in0Con91452 = tf.keras.layers.Input(shape=([2, 2, 2, 1]))
in0Mul14311 = tf.keras.layers.Input(shape=([2, 2, 2, 2]))
in1Mul14311 = tf.keras.layers.Input(shape=([2, 2, 2, 2]))
in0Min56358 = tf.keras.layers.Input(shape=([1, 1, 1]))
in1Min56358 = tf.keras.layers.Input(shape=([1, 1, 1]))
in0Con8647 = tf.keras.layers.Input(shape=([2, 2, 3]))

Max33039 = keras.layers.MaxPool2D(pool_size=(1, 1), strides=(1, 6), padding='same', name = 'Max33039', )(in0Max33039)
Con99610 = keras.layers.Conv2D(3, (1, 1),strides=(1, 1), padding='same', dilation_rate=(1, 1), name = 'Con99610', )(Max33039)
Zer7633 = keras.layers.ZeroPadding2D(padding=((1, 0), (1, 0)), name = 'Zer7633', )(Con99610)
Con31962 = keras.layers.Concatenate(axis=3, name = 'Con31962', )([Zer7633,in0Con31962])
Sub4444 = keras.layers.Subtract(name = 'Sub4444', )([in0Sub4444,in1Sub4444])
Res95459 = keras.layers.Reshape((2, 2, 1), name = 'Res95459', )(Sub4444)
Max15484 = keras.layers.MaxPool2D(pool_size=(1, 1), strides=(12, 4), padding='valid', name = 'Max15484', )(Res95459)
Res96757 = keras.layers.Reshape((1, 1, 1, 1), name = 'Res96757', )(Max15484)
Zer91618 = keras.layers.ZeroPadding3D(padding=((1, 0), (1, 0), (1, 0)), name = 'Zer91618', )(Res96757)
Con91452 = keras.layers.Concatenate(axis=4, name = 'Con91452', )([Zer91618,in0Con91452])
Mul14311 = keras.layers.Multiply(name = 'Mul14311', )([in0Mul14311,in1Mul14311])
Min37285 = keras.layers.Minimum(name = 'Min37285', )([Con91452,Mul14311])
Res14825 = keras.layers.Reshape((2, 2, 4), name = 'Res14825', )(Min37285)
Min56358 = keras.layers.Minimum(name = 'Min56358', )([in0Min56358,in1Min56358])
Sof67511 = keras.layers.Softmax(axis=1, name = 'Sof67511', )(Min56358)
Zer47637 = keras.layers.ZeroPadding2D(padding=((1, 0), (1, 0)), name = 'Zer47637', )(Sof67511)
Con8647 = keras.layers.Concatenate(axis=3, name = 'Con8647', )([Zer47637,in0Con8647])
Min75119 = keras.layers.Minimum(name = 'Min75119', )([Res14825,Con8647])
Max6840 = keras.layers.Maximum(name = 'Max6840', )([Con31962,Min75119])
model = tf.keras.models.Model(inputs=[in0Max33039,in0Con31962,in0Sub4444,in1Sub4444,in0Con91452,in0Mul14311,in1Mul14311,in0Min56358,in1Min56358,in0Con8647], outputs=Max6840)
w = model.get_layer('Con99610').get_weights() 
w[0] = np.array([[[[0.3891, 0.9016, 0.8135], [0.5191, 0.3807, 0.7139]]]])
w[1] = np.array([0, 0, 0])
model.get_layer('Con99610').set_weights(w) 
in0Max33039 = tf.constant([[[[1.3043, 1.655]]]])
in0Con31962 = tf.constant([[[[0.3424], [0.0268]], [[0.9499], [0.2386]]]])
in0Sub4444 = tf.constant([[[0.2816, 0.7796], [0.9221, 0.6946]]])
in1Sub4444 = tf.constant([[[0.249, 0.5676], [0.3014, 0.5449]]])
in0Con91452 = tf.constant([[[[[0.2457], [0.5016]], [[0.7171], [0.8753]]], [[[0.806], [0.0428]], [[0.734], [0.0078]]]]])
in0Mul14311 = tf.constant([[[[[0.1237, 0.7373], [0.6034, 0.0247]], [[0.3128, 0.6604], [0.3228, 0.9021]]], [[[0.8875, 0.0421], [0.0522, 0.0636]], [[0.6821, 0.1602], [0.5328, 0.8581]]]]])
in1Mul14311 = tf.constant([[[[[0.6351, 0.9498], [0.1131, 0.7579]], [[0.231, 0.9008], [0.9087, 0.134]]], [[[0.5921, 0.5246], [0.4114, 0.1207]], [[0.2372, 0.9671], [0.0305, 0.2565]]]]])
in0Min56358 = tf.constant([[[[0.776]]]])
in1Min56358 = tf.constant([[[[0.1995]]]])
in0Con8647 = tf.constant([[[[0.6594, 0.6613, 0.8207], [0.9229, 0.8521, 0.0715]], [[0.6362, 0.0311, 0.8207], [0.7081, 0.3926, 0.1174]]]])
print (np.array2string(model.predict([in0Max33039,in0Con31962,in0Sub4444,in1Sub4444,in0Con91452,in0Mul14311,in1Mul14311,in0Min56358,in1Min56358,in0Con8647],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Max6840.png')

LMax33039 = max_pool2D_layer([[[[1.3043, 1.655]]]], 1, 1, 1, 6, true, Max33039), 
LCon99610 = conv2D_layer(Max33039, 1, 1,[[[[0.3891, 0.9016, 0.8135], [0.5191, 0.3807, 0.7139]]]],[0, 0, 0], 1, 1, true, 1, 1, Con99610), 
LZer7633 = zero_padding2D_layer(Con99610, 1, 0, 1, 0, Zer7633), 
LCon31962 = concatenate_layer([Zer7633,[[[[0.3424], [0.0268]], [[0.9499], [0.2386]]]]], 3, Con31962), 
LSub4444 = subtract_layer([[[0.2816, 0.7796], [0.9221, 0.6946]]], [[[0.249, 0.5676], [0.3014, 0.5449]]], Sub4444), 
LRes95459 = reshape_layer(Sub4444, [2, 2, 1], Res95459), 
LMax15484 = max_pool2D_layer(Res95459, 1, 1, 12, 4, false, Max15484), 
LRes96757 = reshape_layer(Max15484, [1, 1, 1, 1], Res96757), 
LZer91618 = zero_padding3D_layer(Res96757, 1, 0, 1, 0, 1, 0, Zer91618), 
LCon91452 = concatenate_layer([Zer91618,[[[[[0.2457], [0.5016]], [[0.7171], [0.8753]]], [[[0.806], [0.0428]], [[0.734], [0.0078]]]]]], 4, Con91452), 
LMul14311 = multiply_layer([[[[[[0.1237, 0.7373], [0.6034, 0.0247]], [[0.3128, 0.6604], [0.3228, 0.9021]]], [[[0.8875, 0.0421], [0.0522, 0.0636]], [[0.6821, 0.1602], [0.5328, 0.8581]]]]], [[[[[0.6351, 0.9498], [0.1131, 0.7579]], [[0.231, 0.9008], [0.9087, 0.134]]], [[[0.5921, 0.5246], [0.4114, 0.1207]], [[0.2372, 0.9671], [0.0305, 0.2565]]]]]], Mul14311), 
LMin37285 = minimum_layer([Con91452,Mul14311], Min37285), 
LRes14825 = reshape_layer(Min37285, [2, 2, 4], Res14825), 
LMin56358 = minimum_layer([[[[[0.776]]]], [[[[0.1995]]]]], Min56358), 
LSof67511 = softmax_layer(Min56358, 1, Sof67511), 
LZer47637 = zero_padding2D_layer(Sof67511, 1, 0, 1, 0, Zer47637), 
LCon8647 = concatenate_layer([Zer47637,[[[[0.6594, 0.6613, 0.8207], [0.9229, 0.8521, 0.0715]], [[0.6362, 0.0311, 0.8207], [0.7081, 0.3926, 0.1174]]]]], 3, Con8647), 
LMin75119 = minimum_layer([Res14825,Con8647], Min75119), 
LMax6840 = maximum_layer([Con31962,Min75119], Max6840), 
exec_layers([LMax33039,LCon99610,LZer7633,LCon31962,LSub4444,LRes95459,LMax15484,LRes96757,LZer91618,LCon91452,LMul14311,LMin37285,LRes14825,LMin56358,LSof67511,LZer47637,LCon8647,LMin75119,LMax6840],["Max33039","Con99610","Zer7633","Con31962","Sub4444","Res95459","Max15484","Res96757","Zer91618","Con91452","Mul14311","Min37285","Res14825","Min56358","Sof67511","Zer47637","Con8647","Min75119","Max6840"],Max6840,"Max6840")

Actual (Unparsed): [[[[0.0000000, 0.2457000, 0.0000000, 0.3424000], [0.0000000, 0.5948883, 0.0000000, 0.0715000]], [[0.0000000, 0.0220857, 0.0000000, 0.9499000], [1.3666136, 1.8060153, 2.2425525, 0.2386000]]]]

Expected (Unparsed): [[[[0,0.2457,0,0.3424],[0,0.59488832,0,0.0715]],[[0,0.022085659999999997,0,0.9499],[1.36661363,1.8060153799999998,2.24255255,0.2386]]]]

Actual:   [[[[0, 0.2457, 0, 0.3424], [0, 0.5949, 0, 0.0715]], [[0, 0.0221, 0, 0.9499], [1.3667, 1.8061, 2.2426, 0.2386]]]]

Expected: [[[[0, 0.2457, 0, 0.3424], [0, 0.5949, 0, 0.0715]], [[0, 0.0221, 0, 0.9499], [1.3667, 1.8061, 2.2426, 0.2386]]]]