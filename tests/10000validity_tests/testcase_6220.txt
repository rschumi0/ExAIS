import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Glo38678 = tf.keras.layers.Input(shape=([1, 2]))
in0Con62542 = tf.keras.layers.Input(shape=([8, 1, 3, 2]))
in0Loc34414 = tf.keras.layers.Input(shape=([1, 2, 1]))
in0Min32072 = tf.keras.layers.Input(shape=([1, 1, 2, 1]))
in1Min32072 = tf.keras.layers.Input(shape=([1, 1, 2, 1]))
in0Con17073 = tf.keras.layers.Input(shape=([8, 1, 3, 2]))

Glo38678 = keras.layers.GlobalAveragePooling1D(name = 'Glo38678', )(in0Glo38678)
Res74144 = keras.layers.Reshape((2, 1), name = 'Res74144', )(Glo38678)
Res76814 = keras.layers.Reshape((2, 1, 1), name = 'Res76814', )(Res74144)
Glo41428 = keras.layers.GlobalAveragePooling2D(name = 'Glo41428', )(Res76814)
Res53884 = keras.layers.Reshape((1, 1), name = 'Res53884', )(Glo41428)
Res78709 = keras.layers.Reshape((1, 1, 1), name = 'Res78709', )(Res53884)
Res21157 = keras.layers.Reshape((1, 1, 1, 1), name = 'Res21157', )(Res78709)
Zer3389 = keras.layers.ZeroPadding3D(padding=((7, 0), (0, 0), (2, 0)), name = 'Zer3389', )(Res21157)
Con62542 = keras.layers.Concatenate(axis=4, name = 'Con62542', )([Zer3389,in0Con62542])
Loc34414 = keras.layers.LocallyConnected2D(4, (1, 1),strides=(1, 1), name = 'Loc34414', )(in0Loc34414)
Res90038 = keras.layers.Reshape((1, 8), name = 'Res90038', )(Loc34414)
Glo50720 = keras.layers.GlobalAveragePooling1D(name = 'Glo50720', )(Res90038)
Res33579 = keras.layers.Reshape((8, 1), name = 'Res33579', )(Glo50720)
Res62753 = keras.layers.Reshape((8, 1, 1), name = 'Res62753', )(Res33579)
Res71482 = keras.layers.Reshape((8, 1, 1, 1), name = 'Res71482', )(Res62753)
Con83594 = keras.layers.Conv3D(3, (4, 1, 1),strides=(1, 1, 1), padding='same', dilation_rate=(1, 1, 1), name = 'Con83594', )(Res71482)
Zer40717 = keras.layers.ZeroPadding3D(padding=((0, 0), (0, 0), (2, 0)), name = 'Zer40717', )(Con83594)
Min32072 = keras.layers.Minimum(name = 'Min32072', )([in0Min32072,in1Min32072])
Zer96836 = keras.layers.ZeroPadding3D(padding=((7, 0), (0, 0), (1, 0)), name = 'Zer96836', )(Min32072)
Con17073 = keras.layers.Concatenate(axis=4, name = 'Con17073', )([Zer96836,in0Con17073])
Sub34145 = keras.layers.Subtract(name = 'Sub34145', )([Zer40717,Con17073])
Min11482 = keras.layers.Minimum(name = 'Min11482', )([Con62542,Sub34145])
model = tf.keras.models.Model(inputs=[in0Glo38678,in0Con62542,in0Loc34414,in0Min32072,in1Min32072,in0Con17073], outputs=Min11482)
w = model.get_layer('Loc34414').get_weights() 
w[0] = np.array([[[0.7016, 0.6758, 0.7565, 0.0857]], [[0.364, 0.11, 0.783, 0.9879]]])
w[1] = np.array([[[0, 0, 0, 0], [0, 0, 0, 0]]])
model.get_layer('Loc34414').set_weights(w) 
w = model.get_layer('Con83594').get_weights() 
w[0] = np.array([[[[[0.8609, 0.8818, 0.8864]]]], [[[[0.7891, 0.9516, 0.4781]]]], [[[[0.5282, 0.2544, 0.3525]]]], [[[[0.2567, 0.4974, 0.1246]]]]])
w[1] = np.array([0, 0, 0])
model.get_layer('Con83594').set_weights(w) 
in0Glo38678 = tf.constant([[[1.3391, 1.3071]]])
in0Con62542 = tf.constant([[[[[0.6673, 0.3874], [0.7243, 0.6065], [0.232, 0.0866]]], [[[0.5599, 0.1082], [0.7548, 0.3006], [0.8715, 0.3567]]], [[[0.9057, 0.1115], [0.4882, 0.9996], [0.8409, 0.0035]]], [[[0.9506, 0.654], [0.6712, 0.9291], [0.3267, 0.7394]]], [[[0.0864, 0.3507], [0.7547, 0.5816], [0.9191, 0.9712]]], [[[0.5025, 0.6243], [0.4546, 0.9328], [0.5002, 0.4151]]], [[[0.848, 0.1073], [0.497, 0.1408], [0.0997, 0.7268]]], [[[0.2221, 0.8806], [0.6552, 0.0124], [0.1883, 0.418]]]]])
in0Loc34414 = tf.constant([[[[0.2852], [0.0016]]]])
in0Min32072 = tf.constant([[[[[0.0062], [0.2585]]]]])
in1Min32072 = tf.constant([[[[[0.4861], [0.5083]]]]])
in0Con17073 = tf.constant([[[[[0.1578, 0.0419], [0.3213, 0.3096], [0.8206, 0.0215]]], [[[0.4593, 0.2377], [0.9594, 0.3087], [0.32, 0.0858]]], [[[0.5535, 0.4336], [0.585, 0.4784], [0.5539, 0.9978]]], [[[0.1437, 0.7874], [0.6937, 0.7878], [0.8122, 0.7126]]], [[[0.7182, 0.0827], [0.1018, 0.1019], [0.5136, 0.0587]]], [[[0.097, 0.7137], [0.3707, 0.9571], [0.0791, 0.3411]]], [[[0.2768, 0.6026], [0.5267, 0.0894], [0.7019, 0.9312]]], [[[0.5165, 0.6257], [0.8145, 0.4207], [0.3503, 0.9047]]]]])
print (np.array2string(model.predict([in0Glo38678,in0Con62542,in0Loc34414,in0Min32072,in1Min32072,in0Con17073],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Min11482.png')

LGlo38678 = global_average_pooling1D_layer([[[1.3391, 1.3071]]], Glo38678), 
LRes74144 = reshape_layer(Glo38678, [2, 1], Res74144), 
LRes76814 = reshape_layer(Res74144, [2, 1, 1], Res76814), 
LGlo41428 = global_average_pooling2D_layer(Res76814, Glo41428), 
LRes53884 = reshape_layer(Glo41428, [1, 1], Res53884), 
LRes78709 = reshape_layer(Res53884, [1, 1, 1], Res78709), 
LRes21157 = reshape_layer(Res78709, [1, 1, 1, 1], Res21157), 
LZer3389 = zero_padding3D_layer(Res21157, 7, 0, 0, 0, 2, 0, Zer3389), 
LCon62542 = concatenate_layer([Zer3389,[[[[[0.6673, 0.3874], [0.7243, 0.6065], [0.232, 0.0866]]], [[[0.5599, 0.1082], [0.7548, 0.3006], [0.8715, 0.3567]]], [[[0.9057, 0.1115], [0.4882, 0.9996], [0.8409, 0.0035]]], [[[0.9506, 0.654], [0.6712, 0.9291], [0.3267, 0.7394]]], [[[0.0864, 0.3507], [0.7547, 0.5816], [0.9191, 0.9712]]], [[[0.5025, 0.6243], [0.4546, 0.9328], [0.5002, 0.4151]]], [[[0.848, 0.1073], [0.497, 0.1408], [0.0997, 0.7268]]], [[[0.2221, 0.8806], [0.6552, 0.0124], [0.1883, 0.418]]]]]], 4, Con62542), 
LLoc34414 = locally_connected2D_layer([[[[0.2852], [0.0016]]]], 1, 1,[[[0.7016, 0.6758, 0.7565, 0.0857]], [[0.364, 0.11, 0.783, 0.9879]]],[[[0, 0, 0, 0], [0, 0, 0, 0]]], 1, 1, Loc34414), 
LRes90038 = reshape_layer(Loc34414, [1, 8], Res90038), 
LGlo50720 = global_average_pooling1D_layer(Res90038, Glo50720), 
LRes33579 = reshape_layer(Glo50720, [8, 1], Res33579), 
LRes62753 = reshape_layer(Res33579, [8, 1, 1], Res62753), 
LRes71482 = reshape_layer(Res62753, [8, 1, 1, 1], Res71482), 
LCon83594 = conv3D_layer(Res71482, 4, 1, 1,[[[[[0.8609, 0.8818, 0.8864]]]], [[[[0.7891, 0.9516, 0.4781]]]], [[[[0.5282, 0.2544, 0.3525]]]], [[[[0.2567, 0.4974, 0.1246]]]]],[0, 0, 0], 1, 1, 1, true, 1, 1, 1, Con83594), 
LZer40717 = zero_padding3D_layer(Con83594, 0, 0, 0, 0, 2, 0, Zer40717), 
LMin32072 = minimum_layer([[[[[[0.0062], [0.2585]]]]], [[[[[0.4861], [0.5083]]]]]], Min32072), 
LZer96836 = zero_padding3D_layer(Min32072, 7, 0, 0, 0, 1, 0, Zer96836), 
LCon17073 = concatenate_layer([Zer96836,[[[[[0.1578, 0.0419], [0.3213, 0.3096], [0.8206, 0.0215]]], [[[0.4593, 0.2377], [0.9594, 0.3087], [0.32, 0.0858]]], [[[0.5535, 0.4336], [0.585, 0.4784], [0.5539, 0.9978]]], [[[0.1437, 0.7874], [0.6937, 0.7878], [0.8122, 0.7126]]], [[[0.7182, 0.0827], [0.1018, 0.1019], [0.5136, 0.0587]]], [[[0.097, 0.7137], [0.3707, 0.9571], [0.0791, 0.3411]]], [[[0.2768, 0.6026], [0.5267, 0.0894], [0.7019, 0.9312]]], [[[0.5165, 0.6257], [0.8145, 0.4207], [0.3503, 0.9047]]]]]], 4, Con17073), 
LSub34145 = subtract_layer(Zer40717,Con17073, Sub34145), 
LMin11482 = minimum_layer([Con62542,Sub34145], Min11482), 
exec_layers([LGlo38678,LRes74144,LRes76814,LGlo41428,LRes53884,LRes78709,LRes21157,LZer3389,LCon62542,LLoc34414,LRes90038,LGlo50720,LRes33579,LRes62753,LRes71482,LCon83594,LZer40717,LMin32072,LZer96836,LCon17073,LSub34145,LMin11482],["Glo38678","Res74144","Res76814","Glo41428","Res53884","Res78709","Res21157","Zer3389","Con62542","Loc34414","Res90038","Glo50720","Res33579","Res62753","Res71482","Con83594","Zer40717","Min32072","Zer96836","Con17073","Sub34145","Min11482"],Min11482,"Min11482")

Actual (Unparsed): [[[[[0.0000000, -0.1578000, -0.0419000], [0.0000000, -0.3213000, -0.3096000], [0.0000000, -0.4738398, 0.0866000]]], [[[0.0000000, -0.4593000, -0.2377000], [0.0000000, -0.9594000, -0.3087000], [0.0000000, 0.1068996, 0.2628121]]], [[[0.0000000, -0.5535000, -0.4336000], [0.0000000, -0.5850000, -0.4784000], [0.0000000, -0.1721245, -0.7151168]]], [[[0.0000000, -0.1437000, -0.7874000], [0.0000000, -0.6937000, -0.7878000], [0.0000000, -0.5984539, -0.5094431]]], [[[0.0000000, -0.7182000, -0.0827000], [0.0000000, -0.1018000, -0.1019000], [0.0000000, -0.4908252, -0.0365383]]], [[[0.0000000, -0.0970000, -0.7137000], [0.0000000, -0.3707000, -0.9571000], [0.0000000, -0.0773140, -0.3398611]]], [[[0.0000000, -0.2768000, -0.6026000], [0.0000000, -0.5267000, -0.0894000], [0.0000000, -0.7001505, -0.9298879]]], [[[0.0000000, -0.5165000, -0.6257000], [-0.0062000, -0.8145000, -0.4207000], [-0.2561742, -0.3476912, -0.9028338]]]]]

Expected (Unparsed): [[[[[0,-0.1578,-0.0419],[0,-0.3213,-0.3096],[0,-0.473839813864,0.0866]]],[[[0,-0.4593,-0.2377],[0,-0.9594,-0.3087],[0,0.10689960648800001,0.26281213518800006]]],[[[0,-0.5535,-0.4336],[0,-0.585,-0.4784],[0,-0.17212453545599998,-0.7151167580560001]]],[[[0,-0.1437,-0.7874],[0,-0.6937,-0.7878],[0,-0.5984539295760001,-0.5094430579960001]]],[[[0,-0.7182,-0.0827],[0,-0.1018,-0.1019],[0,-0.49082523288799995,-0.036538345984000006]]],[[[0,-0.097,-0.7137],[0,-0.3707,-0.9571],[0,-0.077314035424,-0.339861055296]]],[[[0,-0.2768,-0.6026],[0,-0.5267,-0.0894],[0,-0.700150523904,-0.92988785432]]],[[[0,-0.5165,-0.6257],[-0.0062,-0.8145,-0.4207],[-0.256174181456,-0.347691143936,-0.9028338140959999]]]]]

Actual:   [[[[[0, -0.1578, -0.0419], [0, -0.3213, -0.3096], [0, -0.4738, 0.0866]]], [[[0, -0.4593, -0.2377], [0, -0.9594, -0.3087], [0, 0.1069, 0.2629]]], [[[0, -0.5535, -0.4336], [0, -0.585, -0.4784], [0, -0.1721, -0.7151]]], [[[0, -0.1437, -0.7874], [0, -0.6937, -0.7878], [0, -0.5984, -0.5094]]], [[[0, -0.7182, -0.0827], [0, -0.1018, -0.1019], [0, -0.4908, -0.0365]]], [[[0, -0.097, -0.7137], [0, -0.3707, -0.9571], [0, -0.0773, -0.3398]]], [[[0, -0.2768, -0.6026], [0, -0.5267, -0.0894], [0, -0.7001, -0.9298]]], [[[0, -0.5165, -0.6257], [-0.0062, -0.8145, -0.4207], [-0.2561, -0.3476, -0.9028]]]]]

Expected: [[[[[0, -0.1578, -0.0419], [0, -0.3213, -0.3096], [0, -0.4738, 0.0866]]], [[[0, -0.4593, -0.2377], [0, -0.9594, -0.3087], [0, 0.1069, 0.2629]]], [[[0, -0.5535, -0.4336], [0, -0.585, -0.4784], [0, -0.1721, -0.7151]]], [[[0, -0.1437, -0.7874], [0, -0.6937, -0.7878], [0, -0.5984, -0.5094]]], [[[0, -0.7182, -0.0827], [0, -0.1018, -0.1019], [0, -0.4908, -0.0365]]], [[[0, -0.097, -0.7137], [0, -0.3707, -0.9571], [0, -0.0773, -0.3398]]], [[[0, -0.2768, -0.6026], [0, -0.5267, -0.0894], [0, -0.7001, -0.9298]]], [[[0, -0.5165, -0.6257], [-0.0062, -0.8145, -0.4207], [-0.2561, -0.3476, -0.9028]]]]]