import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Sep28254 = tf.keras.layers.Input(shape=([2, 1, 2]))
in0ReL79934 = tf.keras.layers.Input(shape=([1, 1, 2]))
in0Con28557 = tf.keras.layers.Input(shape=([1, 1, 1]))
in0Con45050 = tf.keras.layers.Input(shape=([2]))
in0Max27253 = tf.keras.layers.Input(shape=([1, 2, 2, 1]))
in1Max27253 = tf.keras.layers.Input(shape=([1, 2, 2, 1]))
in0Sep97172 = tf.keras.layers.Input(shape=([2, 1, 1]))
in0Con40129 = tf.keras.layers.Input(shape=([1]))

Sep28254 = keras.layers.SeparableConv2D(3, (2, 1),strides=(2, 2), padding='same', name = 'Sep28254', )(in0Sep28254)
ReL79934 = keras.layers.ReLU(max_value=0.4396391739521803, negative_slope=3.97798923987274, threshold=3.615624214220513, name = 'ReL79934', input_shape=(1, 1, 2))(in0ReL79934)
Dep42192 = keras.layers.DepthwiseConv2D((1, 1),strides=(1, 1), padding='valid', name = 'Dep42192', )(ReL79934)
Con28557 = keras.layers.Concatenate(axis=3, name = 'Con28557', )([Dep42192,in0Con28557])
Max70379 = keras.layers.Maximum(name = 'Max70379', )([Sep28254,Con28557])
Den57635 = keras.layers.Dense(2,name = 'Den57635', )(Max70379)
Res36092 = keras.layers.Reshape((1, 2), name = 'Res36092', )(Den57635)
Cro94618 = keras.layers.Cropping1D(cropping=((0, 0)), name = 'Cro94618', )(Res36092)
Fla66698 = keras.layers.Flatten(name = 'Fla66698', )(Cro94618)
Con45050 = keras.layers.Concatenate(axis=1, name = 'Con45050', )([Fla66698,in0Con45050])
Max27253 = keras.layers.Maximum(name = 'Max27253', )([in0Max27253,in1Max27253])
Res61639 = keras.layers.Reshape((1, 2, 2), name = 'Res61639', )(Max27253)
Res74157 = keras.layers.Reshape((1, 4), name = 'Res74157', )(Res61639)
Fla30604 = keras.layers.Flatten(name = 'Fla30604', )(Res74157)
Sep97172 = keras.layers.SeparableConv2D(3, (1, 1),strides=(2, 2), padding='valid', name = 'Sep97172', )(in0Sep97172)
Glo90303 = keras.layers.GlobalMaxPool2D(name = 'Glo90303', )(Sep97172)
Con40129 = keras.layers.Concatenate(axis=1, name = 'Con40129', )([Glo90303,in0Con40129])
Max49440 = keras.layers.Maximum(name = 'Max49440', )([Fla30604,Con40129])
Max42804 = keras.layers.Maximum(name = 'Max42804', )([Con45050,Max49440])
model = tf.keras.models.Model(inputs=[in0Sep28254,in0ReL79934,in0Con28557,in0Con45050,in0Max27253,in1Max27253,in0Sep97172,in0Con40129], outputs=Max42804)
w = model.get_layer('Sep28254').get_weights() 
w[0] = np.array([[[[0.2077], [0.7626]]], [[[0.6617], [0.1785]]]])
w[1] = np.array([[[[0.6792, 0.7507, 0.8793], [0.0454, 0.3579, 0.0874]]]])
w[2] = np.array([0, 0, 0])
model.get_layer('Sep28254').set_weights(w) 
w = model.get_layer('Dep42192').get_weights() 
w[0] = np.array([[[[0.6379], [0.3601]]]])
w[1] = np.array([0, 0])
model.get_layer('Dep42192').set_weights(w) 
w = model.get_layer('Den57635').get_weights() 
w[0] = np.array([[0.5321, 0.121], [0.4214, 0.1372], [0.8301, 0.2633]])
w[1] = np.array([0.2919, 0.8975])
model.get_layer('Den57635').set_weights(w) 
w = model.get_layer('Sep97172').get_weights() 
w[0] = np.array([[[[0.2292]]]])
w[1] = np.array([[[[0.9937, 0.7441, 0.8933]]]])
w[2] = np.array([0, 0, 0])
model.get_layer('Sep97172').set_weights(w) 
in0Sep28254 = tf.constant([[[[0.2502, 0.8123]], [[0.0652, 0.8581]]]])
in0ReL79934 = tf.constant([[[[0.7359, 0.1367]]]])
in0Con28557 = tf.constant([[[[0.1695]]]])
in0Con45050 = tf.constant([[0.1474, 0.0634]])
in0Max27253 = tf.constant([[[[[0.3591], [0.727]], [[0.477], [0.3687]]]]])
in1Max27253 = tf.constant([[[[[0.8851], [0.8195]], [[0.5646], [0.6872]]]]])
in0Sep97172 = tf.constant([[[[0.6022]], [[0.1807]]]])
in0Con40129 = tf.constant([[0.5568]])
print (np.array2string(model.predict([in0Sep28254,in0ReL79934,in0Con28557,in0Con45050,in0Max27253,in1Max27253,in0Sep97172,in0Con40129],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Max42804.png')

LSep28254 = separable_conv2D_layer([[[[0.2502, 0.8123]], [[0.0652, 0.8581]]]], 2, 1,[[[[[0.2077], [0.7626]]], [[[0.6617], [0.1785]]]],[[[[0.6792, 0.7507, 0.8793], [0.0454, 0.3579, 0.0874]]]]],[0, 0, 0], 2, 2, true, Sep28254), 
LReL79934 = relu_layer([[[[0.7359, 0.1367]]]], 0.4396391739521803, 3.97798923987274, 3.615624214220513, ReL79934), 
LDep42192 = depthwise_conv2D_layer(ReL79934, 1, 1,[[[[0.6379], [0.3601]]]],[0, 0], 1, 1, false, Dep42192), 
LCon28557 = concatenate_layer([Dep42192,[[[[0.1695]]]]], 3, Con28557), 
LMax70379 = maximum_layer([Sep28254,Con28557], Max70379), 
LDen57635 = dense_layer(Max70379, [[0.5321, 0.121], [0.4214, 0.1372], [0.8301, 0.2633]],[0.2919, 0.8975], Den57635), 
LRes36092 = reshape_layer(Den57635, [1, 2], Res36092), 
LCro94618 = cropping1D_layer(Res36092, 0, 0, Cro94618), 
LFla66698 = flatten_layer(Cro94618, Fla66698), 
LCon45050 = concatenate_layer([Fla66698,[[0.1474, 0.0634]]], 1, Con45050), 
LMax27253 = maximum_layer([[[[[[0.3591], [0.727]], [[0.477], [0.3687]]]]], [[[[[0.8851], [0.8195]], [[0.5646], [0.6872]]]]]], Max27253), 
LRes61639 = reshape_layer(Max27253, [1, 2, 2], Res61639), 
LRes74157 = reshape_layer(Res61639, [1, 4], Res74157), 
LFla30604 = flatten_layer(Res74157, Fla30604), 
LSep97172 = separable_conv2D_layer([[[[0.6022]], [[0.1807]]]], 1, 1,[[[[[0.2292]]]],[[[[0.9937, 0.7441, 0.8933]]]]],[0, 0, 0], 2, 2, false, Sep97172), 
LGlo90303 = global_max_pool2D_layer(Sep97172, Glo90303), 
LCon40129 = concatenate_layer([Glo90303,[[0.5568]]], 1, Con40129), 
LMax49440 = maximum_layer([Fla30604,Con40129], Max49440), 
LMax42804 = maximum_layer([Con45050,Max49440], Max42804), 
exec_layers([LSep28254,LReL79934,LDep42192,LCon28557,LMax70379,LDen57635,LRes36092,LCro94618,LFla66698,LCon45050,LMax27253,LRes61639,LRes74157,LFla30604,LSep97172,LGlo90303,LCon40129,LMax49440,LMax42804],["Sep28254","ReL79934","Dep42192","Con28557","Max70379","Den57635","Res36092","Cro94618","Fla66698","Con45050","Max27253","Res61639","Res74157","Fla30604","Sep97172","Glo90303","Con40129","Max49440","Max42804"],Max42804,"Max42804")

Actual (Unparsed): [[0.8851000, 1.0019252, 0.5646000, 0.6872000]]

Expected (Unparsed): [[0.8851,1.0019251744674136,0.5646,0.6872]]

Actual:   [[0.8851, 1.002, 0.5646, 0.6872]]

Expected: [[0.8851, 1.002, 0.5646, 0.6872]]