import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Dot63222 = tf.keras.layers.Input(shape=([2]))
in1Dot63222 = tf.keras.layers.Input(shape=([2]))

Dot63222 = keras.layers.Dot(axes=(1, 1), name = 'Dot63222', )([in0Dot63222,in1Dot63222])
Res20900 = keras.layers.Reshape((1, 1), name = 'Res20900', )(Dot63222)
Res45060 = keras.layers.Reshape((1, 1, 1), name = 'Res45060', )(Res20900)
Res36729 = keras.layers.Reshape((1, 1, 1, 1), name = 'Res36729', )(Res45060)
Up_98273 = keras.layers.UpSampling3D(size=(1, 2, 1), name = 'Up_98273', )(Res36729)
model = tf.keras.models.Model(inputs=[in0Dot63222,in1Dot63222], outputs=Up_98273)
in0Dot63222 = tf.constant([[0.2316, 0.7843]])
in1Dot63222 = tf.constant([[0.375, 0.5242]])
print (np.array2string(model.predict([in0Dot63222,in1Dot63222],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Up_98273.png')

LDot63222 = dot_layer([[0.2316, 0.7843]], [[0.375, 0.5242]], 1, 1, Dot63222), 
LRes20900 = reshape_layer(Dot63222, [1, 1], Res20900), 
LRes45060 = reshape_layer(Res20900, [1, 1, 1], Res45060), 
LRes36729 = reshape_layer(Res45060, [1, 1, 1, 1], Res36729), 
LUp_98273 = up_sampling3D_layer(Res36729, 1, 2, 1, Up_98273), 
exec_layers([LDot63222,LRes20900,LRes45060,LRes36729,LUp_98273],["Dot63222","Res20900","Res45060","Res36729","Up_98273"],Up_98273,"Up_98273")

Actual (Unparsed): [[[[[0.4979801]], [[0.4979801]]]]]

Expected (Unparsed): [[[[[0.49798006]],[[0.49798006]]]]]

Actual:   [[[[[0.498]], [[0.498]]]]]

Expected: [[[[[0.498]], [[0.498]]]]]