import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Sim69128 = tf.keras.layers.Input(shape=([1, 3]))

Sim69128 = keras.layers.SimpleRNN(1,name = 'Sim69128', )(in0Sim69128)
Res48453 = keras.layers.Reshape((1, 1), name = 'Res48453', )(Sim69128)
Up_15222 = keras.layers.UpSampling1D(size=(1), name = 'Up_15222', )(Res48453)
model = tf.keras.models.Model(inputs=[in0Sim69128], outputs=Up_15222)
w = model.get_layer('Sim69128').get_weights() 
w[0] = np.array([[7], [4], [1]])
w[1] = np.array([[8]])
w[2] = np.array([8])
model.get_layer('Sim69128').set_weights(w) 
in0Sim69128 = tf.constant([[[6, 7, 10]]])
print (np.array2string(model.predict([in0Sim69128],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Up_15222.png')

LSim69128 = simple_rnn_layer([[[6, 7, 10]]],[[7], [4], [1]],[[8]],[8], Sim69128), 
LRes48453 = reshape_layer(Sim69128, [1, 1], Res48453), 
LUp_15222 = up_sampling1D_layer(Res48453, 1, Up_15222), 
exec_layers([LSim69128,LRes48453,LUp_15222],["Sim69128","Res48453","Up_15222"],Up_15222,"Up_15222")

Actual (Unparsed): [[[1.0000000]]]

Expected (Unparsed): [[[1.0]]]

Actual:   [[[1]]]

Expected: [[[1]]]