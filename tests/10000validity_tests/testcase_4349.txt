import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Ave22299 = tf.keras.layers.Input(shape=([2, 1]))
in1Ave22299 = tf.keras.layers.Input(shape=([2, 1]))

Ave22299 = keras.layers.Average(name = 'Ave22299', )([in0Ave22299,in1Ave22299])
Bat95840 = keras.layers.BatchNormalization(axis=1, epsilon=0.3788976417248071,  name = 'Bat95840', )(Ave22299)
model = tf.keras.models.Model(inputs=[in0Ave22299,in1Ave22299], outputs=Bat95840)
w = model.get_layer('Bat95840').get_weights() 
w[0] = np.array([0.6695, 0.2597])
w[1] = np.array([0.5332, 0.8016])
w[2] = np.array([0.9521, 0.2228])
w[3] = np.array([0.1187, 0.029])
model.get_layer('Bat95840').set_weights(w) 
in0Ave22299 = tf.constant([[[0.0867], [0.2337]]])
in1Ave22299 = tf.constant([[[0.3961], [0.4615]]])
print (np.array2string(model.predict([in0Ave22299,in1Ave22299],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Bat95840.png')

LAve22299 = average_layer([[[[0.0867], [0.2337]]], [[[0.3961], [0.4615]]]], Ave22299), 
LBat95840 = batch_normalization_layer(Ave22299, 1, 0.3788976417248071, [0.6695, 0.2597], [0.5332, 0.8016], [0.9521, 0.2228], [0.1187, 0.029], Bat95840), 
exec_layers([LAve22299,LBat95840],["Ave22299","Bat95840"],Bat95840,"Bat95840")

Actual (Unparsed): [[[-0.1413245], [0.8523471]]]

Expected (Unparsed): [[[-0.14132451768949816],[0.8523470659628744]]]

Actual:   [[[-0.1413], [0.8524]]]

Expected: [[[-0.1413], [0.8524]]]