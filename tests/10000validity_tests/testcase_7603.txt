import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Ave50161 = tf.keras.layers.Input(shape=([1, 2]))
in1Ave50161 = tf.keras.layers.Input(shape=([1, 2]))

Ave50161 = keras.layers.Average(name = 'Ave50161', )([in0Ave50161,in1Ave50161])
Lea61553 = keras.layers.LeakyReLU(alpha=8.383418575336107, name = 'Lea61553', )(Ave50161)
Fla53146 = keras.layers.Flatten(name = 'Fla53146', )(Lea61553)
Res46698 = keras.layers.Reshape((2, 1), name = 'Res46698', )(Fla53146)
Cro9000 = keras.layers.Cropping1D(cropping=((1, 0)), name = 'Cro9000', )(Res46698)
model = tf.keras.models.Model(inputs=[in0Ave50161,in1Ave50161], outputs=Cro9000)
in0Ave50161 = tf.constant([[[0.1753, 0.433]]])
in1Ave50161 = tf.constant([[[0.5387, 0.7011]]])
print (np.array2string(model.predict([in0Ave50161,in1Ave50161],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Cro9000.png')

LAve50161 = average_layer([[[[0.1753, 0.433]]], [[[0.5387, 0.7011]]]], Ave50161), 
LLea61553 = leaky_relu_layer(Ave50161, 8.383418575336107, Lea61553), 
LFla53146 = flatten_layer(Lea61553, Fla53146), 
LRes46698 = reshape_layer(Fla53146, [2, 1], Res46698), 
LCro9000 = cropping1D_layer(Res46698, 1, 0, Cro9000), 
exec_layers([LAve50161,LLea61553,LFla53146,LRes46698,LCro9000],["Ave50161","Lea61553","Fla53146","Res46698","Cro9000"],Cro9000,"Cro9000")

Actual (Unparsed): [[[0.5670500]]]

Expected (Unparsed): [[[0.5670499999999999]]]

Actual:   [[[0.5671]]]

Expected: [[[0.5671]]]