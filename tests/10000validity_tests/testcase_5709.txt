import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Con88632 = tf.keras.layers.Input(shape=([1, 2, 2, 2]))
in0Glo97366 = tf.keras.layers.Input(shape=([2, 2, 1, 1]))
in0Con59940 = tf.keras.layers.Input(shape=([1, 12]))

Con88632 = keras.layers.Conv3D(4, (1, 2, 2),strides=(1, 1, 1), padding='same', dilation_rate=(1, 1, 1), name = 'Con88632', )(in0Con88632)
Res82402 = keras.layers.Reshape((1, 2, 8), name = 'Res82402', )(Con88632)
Res18052 = keras.layers.Reshape((1, 16), name = 'Res18052', )(Res82402)
Glo97366 = keras.layers.GlobalAveragePooling3D(name = 'Glo97366', )(in0Glo97366)
Res51261 = keras.layers.Reshape((1, 1), name = 'Res51261', )(Glo97366)
Res24666 = keras.layers.Reshape((1, 1, 1), name = 'Res24666', )(Res51261)
Sep43484 = keras.layers.SeparableConv2D(4, (1, 1),strides=(1, 1), padding='same', name = 'Sep43484', )(Res24666)
Res22702 = keras.layers.Reshape((1, 4), name = 'Res22702', )(Sep43484)
Cro43575 = keras.layers.Cropping1D(cropping=((0, 0)), name = 'Cro43575', )(Res22702)
Con59940 = keras.layers.Concatenate(axis=2, name = 'Con59940', )([Cro43575,in0Con59940])
Mul59634 = keras.layers.Multiply(name = 'Mul59634', )([Res18052,Con59940])
model = tf.keras.models.Model(inputs=[in0Con88632,in0Glo97366,in0Con59940], outputs=Mul59634)
w = model.get_layer('Con88632').get_weights() 
w[0] = np.array([[[[[0.4045, 0.5871, 0.1864, 0.9473], [0.6374, 0.8894, 0.373, 0.7455]], [[0.3554, 0.6554, 0.8707, 0.0571], [0.8507, 0.2046, 0.1478, 0.4524]]], [[[0.234, 0.4408, 0.0495, 0.347], [0.3535, 0.7649, 0.2215, 0.7286]], [[0.1763, 0.7842, 0.5386, 0.6898], [0.7295, 0.3191, 0.5523, 0.1624]]]]])
w[1] = np.array([0, 0, 0, 0])
model.get_layer('Con88632').set_weights(w) 
w = model.get_layer('Sep43484').get_weights() 
w[0] = np.array([[[[0.668]]]])
w[1] = np.array([[[[0.0769, 0.6727, 0.381, 0.4091]]]])
w[2] = np.array([0, 0, 0, 0])
model.get_layer('Sep43484').set_weights(w) 
in0Con88632 = tf.constant([[[[[0.2071, 0.5337], [0.0974, 0.49]], [[0.579, 0.2724], [0.5038, 0.5919]]]]])
in0Glo97366 = tf.constant([[[[[1.406]], [[1.5838]]], [[[1.623]], [[1.0147]]]]])
in0Con59940 = tf.constant([[[0.259, 0.8245, 0.4749, 0.2297, 0.455, 0.9591, 0.3701, 0.1587, 0.5117, 0.7555, 0.3378, 0.5776]]])
print (np.array2string(model.predict([in0Con88632,in0Glo97366,in0Con59940],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Mul59634.png')

LCon88632 = conv3D_layer([[[[[0.2071, 0.5337], [0.0974, 0.49]], [[0.579, 0.2724], [0.5038, 0.5919]]]]], 1, 2, 2,[[[[[0.4045, 0.5871, 0.1864, 0.9473], [0.6374, 0.8894, 0.373, 0.7455]], [[0.3554, 0.6554, 0.8707, 0.0571], [0.8507, 0.2046, 0.1478, 0.4524]]], [[[0.234, 0.4408, 0.0495, 0.347], [0.3535, 0.7649, 0.2215, 0.7286]], [[0.1763, 0.7842, 0.5386, 0.6898], [0.7295, 0.3191, 0.5523, 0.1624]]]]],[0, 0, 0, 0], 1, 1, 1, true, 1, 1, 1, Con88632), 
LRes82402 = reshape_layer(Con88632, [1, 2, 8], Res82402), 
LRes18052 = reshape_layer(Res82402, [1, 16], Res18052), 
LGlo97366 = global_average_pooling3D_layer([[[[[1.406]], [[1.5838]]], [[[1.623]], [[1.0147]]]]], Glo97366), 
LRes51261 = reshape_layer(Glo97366, [1, 1], Res51261), 
LRes24666 = reshape_layer(Res51261, [1, 1, 1], Res24666), 
LSep43484 = separable_conv2D_layer(Res24666, 1, 1,[[[[[0.668]]]],[[[[0.0769, 0.6727, 0.381, 0.4091]]]]],[0, 0, 0, 0], 1, 1, true, Sep43484), 
LRes22702 = reshape_layer(Sep43484, [1, 4], Res22702), 
LCro43575 = cropping1D_layer(Res22702, 0, 0, Cro43575), 
LCon59940 = concatenate_layer([Cro43575,[[[0.259, 0.8245, 0.4749, 0.2297, 0.455, 0.9591, 0.3701, 0.1587, 0.5117, 0.7555, 0.3378, 0.5776]]]], 2, Con59940), 
LMul59634 = multiply_layer([Res18052,Con59940], Mul59634), 
exec_layers([LCon88632,LRes82402,LRes18052,LGlo97366,LRes51261,LRes24666,LSep43484,LRes22702,LCro43575,LCon59940,LMul59634],["Con88632","Res82402","Res18052","Glo97366","Res51261","Res24666","Sep43484","Res22702","Cro43575","Con59940","Mul59634"],Mul59634,"Mul59634")

Actual (Unparsed): [[[0.1176413, 1.1429441, 0.3874763, 0.6398820, 0.1758222, 0.9628585, 0.1695247, 0.2443179, 0.4961380, 0.9912267, 0.2722723, 0.1663340, 0.2973305, 0.6211848, 0.1063013, 0.5305320]]]

Expected (Unparsed): [[[0.11764129781602263,1.142944155236977,0.3874763185003374,0.6398820003974884,0.17582218884999998,0.9628584298049999,0.16952472531899998,0.24431786911199999,0.4961379650500001,0.9912267041519998,0.27227231082799996,0.166334015928,0.297330530672,0.62118482262,0.106301275356,0.530532063344]]]

Actual:   [[[0.1177, 1.143, 0.3875, 0.6399, 0.1759, 0.9629, 0.1696, 0.2444, 0.4962, 0.9913, 0.2723, 0.1664, 0.2974, 0.6212, 0.1064, 0.5306]]]

Expected: [[[0.1177, 1.143, 0.3875, 0.6399, 0.1759, 0.9629, 0.1696, 0.2444, 0.4962, 0.9913, 0.2723, 0.1664, 0.2974, 0.6212, 0.1064, 0.5306]]]