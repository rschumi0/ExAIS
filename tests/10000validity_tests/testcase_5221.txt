import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Ave48484 = tf.keras.layers.Input(shape=([2, 2]))
in1Ave48484 = tf.keras.layers.Input(shape=([2, 2]))
in0Con77460 = tf.keras.layers.Input(shape=([2, 6, 2]))
in0Bat4860 = tf.keras.layers.Input(shape=([1, 4, 3]))

Ave48484 = keras.layers.Average(name = 'Ave48484', )([in0Ave48484,in1Ave48484])
Res89241 = keras.layers.Reshape((2, 2, 1), name = 'Res89241', )(Ave48484)
Zer5438 = keras.layers.ZeroPadding2D(padding=((0, 0), (4, 0)), name = 'Zer5438', )(Res89241)
Con77460 = keras.layers.Concatenate(axis=3, name = 'Con77460', )([Zer5438,in0Con77460])
Bat4860 = keras.layers.BatchNormalization(axis=2, epsilon=0.8329828572617834,  name = 'Bat4860', )(in0Bat4860)
Zer17598 = keras.layers.ZeroPadding2D(padding=((1, 0), (2, 0)), name = 'Zer17598', )(Bat4860)
Ave13479 = keras.layers.Average(name = 'Ave13479', )([Con77460,Zer17598])
model = tf.keras.models.Model(inputs=[in0Ave48484,in1Ave48484,in0Con77460,in0Bat4860], outputs=Ave13479)
w = model.get_layer('Bat4860').get_weights() 
w[0] = np.array([0.9071, 0.1146, 0.1051, 0.2438])
w[1] = np.array([0.958, 0.4192, 0.2778, 0.2349])
w[2] = np.array([0.407, 0.3025, 0.7096, 0.102])
w[3] = np.array([0.5389, 0.203, 0.3707, 0.4161])
model.get_layer('Bat4860').set_weights(w) 
in0Ave48484 = tf.constant([[[0.886, 0.7688], [0.33, 0.2316]]])
in1Ave48484 = tf.constant([[[0.2932, 0.0209], [0.4107, 0.5669]]])
in0Con77460 = tf.constant([[[[0.4715, 0.5923], [0.3221, 0.7553], [0.4358, 0.328], [0.1711, 0.308], [0.6576, 0.2405], [0.7642, 0.3071]], [[0.7673, 0.7326], [0.1944, 0.5709], [0.4986, 0.9463], [0.6405, 0.2076], [0.3061, 0.8167], [0.1477, 0.1251]]]])
in0Bat4860 = tf.constant([[[[1.7403, 1.4739, 1.5271], [1.9007, 1.5606, 1.8567], [1.1367, 1.0026, 1.6054], [1.3674, 1.3952, 1.0391]]]])
print (np.array2string(model.predict([in0Ave48484,in1Ave48484,in0Con77460,in0Bat4860],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Ave13479.png')

LAve48484 = average_layer([[[[0.886, 0.7688], [0.33, 0.2316]]], [[[0.2932, 0.0209], [0.4107, 0.5669]]]], Ave48484), 
LRes89241 = reshape_layer(Ave48484, [2, 2, 1], Res89241), 
LZer5438 = zero_padding2D_layer(Res89241, 0, 0, 4, 0, Zer5438), 
LCon77460 = concatenate_layer([Zer5438,[[[[0.4715, 0.5923], [0.3221, 0.7553], [0.4358, 0.328], [0.1711, 0.308], [0.6576, 0.2405], [0.7642, 0.3071]], [[0.7673, 0.7326], [0.1944, 0.5709], [0.4986, 0.9463], [0.6405, 0.2076], [0.3061, 0.8167], [0.1477, 0.1251]]]]], 3, Con77460), 
LBat4860 = batch_normalization_layer([[[[1.7403, 1.4739, 1.5271], [1.9007, 1.5606, 1.8567], [1.1367, 1.0026, 1.6054], [1.3674, 1.3952, 1.0391]]]], 2, 0.8329828572617834, [0.9071, 0.1146, 0.1051, 0.2438], [0.958, 0.4192, 0.2778, 0.2349], [0.407, 0.3025, 0.7096, 0.102], [0.5389, 0.203, 0.3707, 0.4161], Bat4860), 
LZer17598 = zero_padding2D_layer(Bat4860, 1, 0, 2, 0, Zer17598), 
LAve13479 = average_layer([Con77460,Zer17598], Ave13479), 
exec_layers([LAve48484,LRes89241,LZer5438,LCon77460,LBat4860,LZer17598,LAve13479],["Ave48484","Res89241","Zer5438","Con77460","Bat4860","Zer17598","Ave13479"],Ave13479,"Ave13479")

Actual (Unparsed): [[[[0.0000000, 0.2357500, 0.2961500], [0.0000000, 0.1610500, 0.3776500], [0.0000000, 0.2179000, 0.1640000], [0.0000000, 0.0855500, 0.1540000], [0.2948000, 0.3288000, 0.1202500], [0.1974250, 0.3821000, 0.1535500]], [[0.0000000, 0.3836500, 0.3663000], [0.0000000, 0.0972000, 0.2854500], [0.9952910, 1.1414334, 1.3858840], [0.2995724, 0.6006761, 0.4008954], [0.3445322, 0.3059841, 0.5901569], [0.4550931, 0.3323502, 0.2822102]]]]

Expected (Unparsed): [[[[0,0.23575,0.29615],[0,0.16105,0.37765],[0,0.2179,0.164],[0,0.08555,0.154],[0.2948,0.3288,0.12025],[0.19742500000000002,0.3821,0.15355]],[[0,0.38365,0.3663],[0,0.0972,0.28545],[0.9952909777299441,1.1414334614415942,1.3858839864661443],[0.29957243281467405,0.6006761279715565,0.40089540425514103],[0.3445322029688592,0.30598409147711486,0.5901569595399301],[0.4550930578119034,0.3323502231407883,0.2822101485502882]]]]

Actual:   [[[[0, 0.2358, 0.2962], [0, 0.1611, 0.3777], [0, 0.2179, 0.164], [0, 0.0856, 0.154], [0.2948, 0.3288, 0.1203], [0.1975, 0.3821, 0.1536]], [[0, 0.3837, 0.3663], [0, 0.0972, 0.2855], [0.9953, 1.1415, 1.3859], [0.2996, 0.6007, 0.4009], [0.3446, 0.306, 0.5902], [0.4551, 0.3324, 0.2823]]]]

Expected: [[[[0, 0.2358, 0.2962], [0, 0.1611, 0.3777], [0, 0.2179, 0.164], [0, 0.0856, 0.154], [0.2948, 0.3288, 0.1203], [0.1975, 0.3821, 0.1536]], [[0, 0.3837, 0.3663], [0, 0.0972, 0.2855], [0.9953, 1.1415, 1.3859], [0.2996, 0.6007, 0.4009], [0.3446, 0.306, 0.5902], [0.4551, 0.3324, 0.2823]]]]