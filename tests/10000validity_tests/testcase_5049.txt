import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Lea60487 = tf.keras.layers.Input(shape=([1, 1]))

Lea60487 = keras.layers.LeakyReLU(alpha=9.013087323465157, name = 'Lea60487', input_shape=(1, 1))(in0Lea60487)
Fla39203 = keras.layers.Flatten(name = 'Fla39203', )(Lea60487)
Res31063 = keras.layers.Reshape((1, 1), name = 'Res31063', )(Fla39203)
LST23820 = keras.layers.LSTM(1,recurrent_activation='sigmoid', name = 'LST23820', )(Res31063)
model = tf.keras.models.Model(inputs=[in0Lea60487], outputs=LST23820)
w = model.get_layer('LST23820').get_weights() 
w[0] = np.array([[5, 2, 5, 3]])
w[1] = np.array([[1, 1, 10, 10]])
w[2] = np.array([10, 10, 3, 6])
model.get_layer('LST23820').set_weights(w) 
in0Lea60487 = tf.constant([[[0.6832]]])
print (np.array2string(model.predict([in0Lea60487],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='LST23820.png')

LLea60487 = leaky_relu_layer([[[0.6832]]], 9.013087323465157, Lea60487), 
LFla39203 = flatten_layer(Lea60487, Fla39203), 
LRes31063 = reshape_layer(Fla39203, [1, 1], Res31063), 
LLST23820 = lstm_layer(Res31063,[[5, 2, 5, 3]],[[1, 1, 10, 10]],[10, 10, 3, 6], LST23820), 
exec_layers([LLea60487,LFla39203,LRes31063,LLST23820],["Lea60487","Fla39203","Res31063","LST23820"],LST23820,"LST23820")

Actual (Unparsed): [[0.7613482]]

Expected (Unparsed): [[0.7613482389673571]]

Actual:   [[0.7614]]

Expected: [[0.7614]]