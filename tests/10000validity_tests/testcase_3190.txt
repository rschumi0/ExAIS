import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Ave95779 = tf.keras.layers.Input(shape=([2, 2, 1, 1]))
in1Ave95779 = tf.keras.layers.Input(shape=([2, 2, 1, 1]))

Ave95779 = keras.layers.Average(name = 'Ave95779', )([in0Ave95779,in1Ave95779])
Den14240 = keras.layers.Dense(3,name = 'Den14240', )(Ave95779)
model = tf.keras.models.Model(inputs=[in0Ave95779,in1Ave95779], outputs=Den14240)
w = model.get_layer('Den14240').get_weights() 
w[0] = np.array([[0.9749, 0.4423, 0.5748]])
w[1] = np.array([0.8539, 0.0837, 0.6712])
model.get_layer('Den14240').set_weights(w) 
in0Ave95779 = tf.constant([[[[[0.5116]], [[0.9573]]], [[[0.6631]], [[0.1213]]]]])
in1Ave95779 = tf.constant([[[[[0.3005]], [[0.6624]]], [[[0.91]], [[0.3917]]]]])
print (np.array2string(model.predict([in0Ave95779,in1Ave95779],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Den14240.png')

LAve95779 = average_layer([[[[[[0.5116]], [[0.9573]]], [[[0.6631]], [[0.1213]]]]], [[[[[0.3005]], [[0.6624]]], [[[0.91]], [[0.3917]]]]]], Ave95779), 
LDen14240 = dense_layer(Ave95779, [[0.9749, 0.4423, 0.5748]],[0.8539, 0.0837, 0.6712], Den14240), 
exec_layers([LAve95779,LDen14240],["Ave95779","Den14240"],Den14240,"Den14240")

Actual (Unparsed): [[[[[1.2497582, 0.2632959, 0.9045975]], [[1.6434228, 0.4418967, 1.1367018]]], [[[1.6207076, 0.4315911, 1.1233089]], [[1.1039618, 0.1971499, 0.8186362]]]]]

Expected (Unparsed): [[[[[1.249758145,0.26329591500000005,0.90459754]],[[1.643422765,0.441896655,1.13670178]]],[[[1.620707595,0.43159106500000005,1.12330894]],[[1.1039618500000001,0.19714995000000002,0.8186362]]]]]

Actual:   [[[[[1.2498, 0.2633, 0.9046]], [[1.6435, 0.4419, 1.1368]]], [[[1.6208, 0.4316, 1.1234]], [[1.104, 0.1972, 0.8187]]]]]

Expected: [[[[[1.2498, 0.2633, 0.9046]], [[1.6435, 0.4419, 1.1368]]], [[[1.6208, 0.4316, 1.1234]], [[1.104, 0.1972, 0.8187]]]]]