import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Sub32171 = tf.keras.layers.Input(shape=([3]))
in1Sub32171 = tf.keras.layers.Input(shape=([3]))
in0Glo99368 = tf.keras.layers.Input(shape=([2, 1]))
in0Con43198 = tf.keras.layers.Input(shape=([2]))
in0Con86274 = tf.keras.layers.Input(shape=([3, 4, 3, 1]))
in0Cro95208 = tf.keras.layers.Input(shape=([1, 4]))
in0Sub86493 = tf.keras.layers.Input(shape=([3, 3]))
in1Sub86493 = tf.keras.layers.Input(shape=([3, 3]))
in0Con1321 = tf.keras.layers.Input(shape=([3, 1]))
in0Con2960 = tf.keras.layers.Input(shape=([3, 4, 3, 1]))
in0PRe2166 = tf.keras.layers.Input(shape=([2, 1, 2, 2]))

Sub32171 = keras.layers.Subtract(name = 'Sub32171', )([in0Sub32171,in1Sub32171])
Res66447 = keras.layers.Reshape((3, 1), name = 'Res66447', )(Sub32171)
GRU54904 = keras.layers.GRU(3,reset_after=False, recurrent_activation='sigmoid', name = 'GRU54904', )(Res66447)
Glo99368 = keras.layers.GlobalAveragePooling1D(name = 'Glo99368', )(in0Glo99368)
Con43198 = keras.layers.Concatenate(axis=1, name = 'Con43198', )([Glo99368,in0Con43198])
Min92465 = keras.layers.Minimum(name = 'Min92465', )([GRU54904,Con43198])
Res67850 = keras.layers.Reshape((3, 1), name = 'Res67850', )(Min92465)
Res46083 = keras.layers.Reshape((3, 1, 1), name = 'Res46083', )(Res67850)
Res26840 = keras.layers.Reshape((3, 1, 1, 1), name = 'Res26840', )(Res46083)
Cro36142 = keras.layers.Cropping3D(cropping=((1, 0), (0, 0), (0, 0)), name = 'Cro36142', )(Res26840)
Zer91283 = keras.layers.ZeroPadding3D(padding=((1, 0), (3, 0), (2, 0)), name = 'Zer91283', )(Cro36142)
Con86274 = keras.layers.Concatenate(axis=4, name = 'Con86274', )([Zer91283,in0Con86274])
Cro95208 = keras.layers.Cropping1D(cropping=((0, 0)), name = 'Cro95208', )(in0Cro95208)
Thr51873 = keras.layers.ThresholdedReLU(theta=1.237796061844187, name = 'Thr51873', )(Cro95208)
Zer19855 = keras.layers.ZeroPadding1D(padding=((2, 0)), name = 'Zer19855', )(Thr51873)
Sub86493 = keras.layers.Subtract(name = 'Sub86493', )([in0Sub86493,in1Sub86493])
Con1321 = keras.layers.Concatenate(axis=2, name = 'Con1321', )([Sub86493,in0Con1321])
Sub66794 = keras.layers.Subtract(name = 'Sub66794', )([Zer19855,Con1321])
Res69477 = keras.layers.Reshape((3, 4, 1), name = 'Res69477', )(Sub66794)
Res94308 = keras.layers.Reshape((3, 4, 1, 1), name = 'Res94308', )(Res69477)
Zer32173 = keras.layers.ZeroPadding3D(padding=((0, 0), (0, 0), (2, 0)), name = 'Zer32173', )(Res94308)
Con2960 = keras.layers.Concatenate(axis=4, name = 'Con2960', )([Zer32173,in0Con2960])
PRe2166 = keras.layers.PReLU(name = 'PRe2166', input_shape=(2, 1, 2, 2))(in0PRe2166)
Zer49855 = keras.layers.ZeroPadding3D(padding=((1, 0), (3, 0), (1, 0)), name = 'Zer49855', )(PRe2166)
Max43291 = keras.layers.Maximum(name = 'Max43291', )([Con2960,Zer49855])
Min66535 = keras.layers.Minimum(name = 'Min66535', )([Con86274,Max43291])
model = tf.keras.models.Model(inputs=[in0Sub32171,in1Sub32171,in0Glo99368,in0Con43198,in0Con86274,in0Cro95208,in0Sub86493,in1Sub86493,in0Con1321,in0Con2960,in0PRe2166], outputs=Min66535)
w = model.get_layer('GRU54904').get_weights() 
w[0] = np.array([[7, 6, 2, 9, 9, 7, 5, 10, 5]])
w[1] = np.array([[10, 3, 3, 5, 4, 6, 1, 3, 10], [7, 9, 9, 8, 4, 4, 3, 3, 2], [3, 10, 10, 3, 8, 8, 9, 10, 5]])
w[2] = np.array([1, 3, 8, 7, 10, 8, 10, 5, 9])
model.get_layer('GRU54904').set_weights(w) 
w = model.get_layer('PRe2166').get_weights() 
w[0] = np.array([[[[0.7226, 0.5765], [0.6309, 0.6009]]], [[[0.7149, 0.824], [0.0201, 0.068]]]])
model.get_layer('PRe2166').set_weights(w) 
in0Sub32171 = tf.constant([[0.9591, 0.657, 0.9576]])
in1Sub32171 = tf.constant([[0.5743, 0.7753, 0.6776]])
in0Glo99368 = tf.constant([[[1.1826], [1.4852]]])
in0Con43198 = tf.constant([[0.0755, 0.1691]])
in0Con86274 = tf.constant([[[[[0.2319], [0.5176], [0.6296]], [[0.5551], [0.9245], [0.8973]], [[0.3045], [0.9641], [0.7909]], [[0.5772], [0.4658], [0.2682]]], [[[0.3397], [0.3091], [0.8434]], [[0.6422], [0.8619], [0.6631]], [[0.3578], [0.0571], [0.0309]], [[0.4014], [0.2314], [0.481]]], [[[0.8367], [0.5501], [0.9046]], [[0.5917], [0.2572], [0.8451]], [[0.3985], [0.9981], [0.2412]], [[0.8782], [0.4522], [0.7576]]]]])
in0Cro95208 = tf.constant([[[1.3616, 1.3393, 1.764, 1.096]]])
in0Sub86493 = tf.constant([[[0.4642, 0.6287, 0.7124], [0.9686, 0.4019, 0.2378], [0.4521, 0.4618, 0.3153]]])
in1Sub86493 = tf.constant([[[0.9252, 0.4618, 0.5199], [0.4508, 0.8582, 0.1103], [0.1311, 0.1195, 0.391]]])
in0Con1321 = tf.constant([[[0.7073], [0.8612], [0.5495]]])
in0Con2960 = tf.constant([[[[[0.7277], [0.6422], [0.3134]], [[0.2645], [0.8831], [0.1882]], [[0.7003], [0.4596], [0.3763]], [[0.0452], [0.9246], [0.3223]]], [[[0.312], [0.5529], [0.4173]], [[0.6129], [0.8416], [0.0996]], [[0.9175], [0.8407], [0.449]], [[0.7074], [0.2144], [0.2035]]], [[[0.5138], [0.2739], [0.1055]], [[0.1434], [0.73], [0.2536]], [[0.144], [0.7836], [0.7012]], [[0.0973], [0.1291], [0.3118]]]]])
in0PRe2166 = tf.constant([[[[[0.5053, 0.2579], [0.957, 0.8767]]], [[[0.5381, 0.2033], [0.1106, 0.5339]]]]])
print (np.array2string(model.predict([in0Sub32171,in1Sub32171,in0Glo99368,in0Con43198,in0Con86274,in0Cro95208,in0Sub86493,in1Sub86493,in0Con1321,in0Con2960,in0PRe2166],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Min66535.png')

LSub32171 = subtract_layer([[0.9591, 0.657, 0.9576]], [[0.5743, 0.7753, 0.6776]], Sub32171), 
LRes66447 = reshape_layer(Sub32171, [3, 1], Res66447), 
LGRU54904 = gru_layer(Res66447,[[7, 6, 2, 9, 9, 7, 5, 10, 5]],[[10, 3, 3, 5, 4, 6, 1, 3, 10], [7, 9, 9, 8, 4, 4, 3, 3, 2], [3, 10, 10, 3, 8, 8, 9, 10, 5]],[1, 3, 8, 7, 10, 8, 10, 5, 9], false, GRU54904), 
LGlo99368 = global_average_pooling1D_layer([[[1.1826], [1.4852]]], Glo99368), 
LCon43198 = concatenate_layer([Glo99368,[[0.0755, 0.1691]]], 1, Con43198), 
LMin92465 = minimum_layer([GRU54904,Con43198], Min92465), 
LRes67850 = reshape_layer(Min92465, [3, 1], Res67850), 
LRes46083 = reshape_layer(Res67850, [3, 1, 1], Res46083), 
LRes26840 = reshape_layer(Res46083, [3, 1, 1, 1], Res26840), 
LCro36142 = cropping3D_layer(Res26840, 1, 0, 0, 0, 0, 0, Cro36142), 
LZer91283 = zero_padding3D_layer(Cro36142, 1, 0, 3, 0, 2, 0, Zer91283), 
LCon86274 = concatenate_layer([Zer91283,[[[[[0.2319], [0.5176], [0.6296]], [[0.5551], [0.9245], [0.8973]], [[0.3045], [0.9641], [0.7909]], [[0.5772], [0.4658], [0.2682]]], [[[0.3397], [0.3091], [0.8434]], [[0.6422], [0.8619], [0.6631]], [[0.3578], [0.0571], [0.0309]], [[0.4014], [0.2314], [0.481]]], [[[0.8367], [0.5501], [0.9046]], [[0.5917], [0.2572], [0.8451]], [[0.3985], [0.9981], [0.2412]], [[0.8782], [0.4522], [0.7576]]]]]], 4, Con86274), 
LCro95208 = cropping1D_layer([[[1.3616, 1.3393, 1.764, 1.096]]], 0, 0, Cro95208), 
LThr51873 = thresholded_relu_layer(Cro95208, 1.237796061844187, Thr51873), 
LZer19855 = zero_padding1D_layer(Thr51873, 2, 0, Zer19855), 
LSub86493 = subtract_layer([[[0.4642, 0.6287, 0.7124], [0.9686, 0.4019, 0.2378], [0.4521, 0.4618, 0.3153]]], [[[0.9252, 0.4618, 0.5199], [0.4508, 0.8582, 0.1103], [0.1311, 0.1195, 0.391]]], Sub86493), 
LCon1321 = concatenate_layer([Sub86493,[[[0.7073], [0.8612], [0.5495]]]], 2, Con1321), 
LSub66794 = subtract_layer(Zer19855,Con1321, Sub66794), 
LRes69477 = reshape_layer(Sub66794, [3, 4, 1], Res69477), 
LRes94308 = reshape_layer(Res69477, [3, 4, 1, 1], Res94308), 
LZer32173 = zero_padding3D_layer(Res94308, 0, 0, 0, 0, 2, 0, Zer32173), 
LCon2960 = concatenate_layer([Zer32173,[[[[[0.7277], [0.6422], [0.3134]], [[0.2645], [0.8831], [0.1882]], [[0.7003], [0.4596], [0.3763]], [[0.0452], [0.9246], [0.3223]]], [[[0.312], [0.5529], [0.4173]], [[0.6129], [0.8416], [0.0996]], [[0.9175], [0.8407], [0.449]], [[0.7074], [0.2144], [0.2035]]], [[[0.5138], [0.2739], [0.1055]], [[0.1434], [0.73], [0.2536]], [[0.144], [0.7836], [0.7012]], [[0.0973], [0.1291], [0.3118]]]]]], 4, Con2960), 
LPRe2166 = prelu_layer([[[[[0.5053, 0.2579], [0.957, 0.8767]]], [[[0.5381, 0.2033], [0.1106, 0.5339]]]]], [[[[0.7226, 0.5765], [0.6309, 0.6009]]], [[[0.7149, 0.824], [0.0201, 0.068]]]], PRe2166), 
LZer49855 = zero_padding3D_layer(PRe2166, 1, 0, 3, 0, 1, 0, Zer49855), 
LMax43291 = maximum_layer([Con2960,Zer49855], Max43291), 
LMin66535 = minimum_layer([Con86274,Max43291], Min66535), 
exec_layers([LSub32171,LRes66447,LGRU54904,LGlo99368,LCon43198,LMin92465,LRes67850,LRes46083,LRes26840,LCro36142,LZer91283,LCon86274,LCro95208,LThr51873,LZer19855,LSub86493,LCon1321,LSub66794,LRes69477,LRes94308,LZer32173,LCon2960,LPRe2166,LZer49855,LMax43291,LMin66535],["Sub32171","Res66447","GRU54904","Glo99368","Con43198","Min92465","Res67850","Res46083","Res26840","Cro36142","Zer91283","Con86274","Cro95208","Thr51873","Zer19855","Sub86493","Con1321","Sub66794","Res69477","Res94308","Zer32173","Con2960","PRe2166","Zer49855","Max43291","Min66535"],Min66535,"Min66535")

Actual (Unparsed): [[[[[0.0000000, 0.2319000], [0.0000000, 0.5176000], [0.0000000, 0.3134000]], [[0.0000000, 0.2645000], [0.0000000, 0.8831000], [0.0000000, 0.1882000]], [[0.0000000, 0.3045000], [0.0000000, 0.4596000], [0.0000000, 0.3763000]], [[0.0000000, 0.0452000], [0.0000000, 0.4658000], [0.0000000, 0.2682000]]], [[[0.0000000, 0.3120000], [0.0000000, 0.3091000], [0.0000000, 0.4173000]], [[0.0000000, 0.6129000], [0.0000000, 0.8416000], [0.0000000, 0.0996000]], [[0.0000000, 0.3578000], [0.0000000, 0.0571000], [0.0000000, 0.0309000]], [[0.0000000, 0.4014000], [0.0000000, 0.2314000], [0.0755000, 0.4810000]]], [[[0.0000000, 0.5138000], [0.0000000, 0.2739000], [0.0000000, 0.1055000]], [[0.0000000, 0.1434000], [0.0000000, 0.2572000], [0.0000000, 0.2536000]], [[0.0000000, 0.1440000], [0.0000000, 0.7836000], [0.0000000, 0.2412000]], [[0.0000000, 0.0973000], [0.0000000, 0.2033000], [0.0005585, 0.5339000]]]]]

Expected (Unparsed): [[[[[0,0.2319],[0,0.5176],[0,0.3134]],[[0,0.2645],[0,0.8831],[0,0.1882]],[[0,0.3045],[0,0.4596],[0,0.3763]],[[0,0.0452],[0,0.4658],[0,0.2682]]],[[[0,0.312],[0,0.3091],[0,0.4173]],[[0,0.6129],[0,0.8416],[0,0.0996]],[[0,0.3578],[0,0.0571],[0,0.0309]],[[0,0.4014],[0,0.2314],[0.0755,0.481]]],[[[0,0.5138],[0,0.2739],[0,0.1055]],[[0,0.1434],[0,0.2572],[0,0.2536]],[[0,0.144],[0,0.7836],[0,0.2412]],[[0,0.0973],[0,0.2033],[0.0005585010834856654,0.5339]]]]]

Actual:   [[[[[0, 0.2319], [0, 0.5176], [0, 0.3134]], [[0, 0.2645], [0, 0.8831], [0, 0.1882]], [[0, 0.3045], [0, 0.4596], [0, 0.3763]], [[0, 0.0452], [0, 0.4658], [0, 0.2682]]], [[[0, 0.312], [0, 0.3091], [0, 0.4173]], [[0, 0.6129], [0, 0.8416], [0, 0.0996]], [[0, 0.3578], [0, 0.0571], [0, 0.0309]], [[0, 0.4014], [0, 0.2314], [0.0755, 0.481]]], [[[0, 0.5138], [0, 0.2739], [0, 0.1055]], [[0, 0.1434], [0, 0.2572], [0, 0.2536]], [[0, 0.144], [0, 0.7836], [0, 0.2412]], [[0, 0.0973], [0, 0.2033], [0.0006, 0.5339]]]]]

Expected: [[[[[0, 0.2319], [0, 0.5176], [0, 0.3134]], [[0, 0.2645], [0, 0.8831], [0, 0.1882]], [[0, 0.3045], [0, 0.4596], [0, 0.3763]], [[0, 0.0452], [0, 0.4658], [0, 0.2682]]], [[[0, 0.312], [0, 0.3091], [0, 0.4173]], [[0, 0.6129], [0, 0.8416], [0, 0.0996]], [[0, 0.3578], [0, 0.0571], [0, 0.0309]], [[0, 0.4014], [0, 0.2314], [0.0755, 0.481]]], [[[0, 0.5138], [0, 0.2739], [0, 0.1055]], [[0, 0.1434], [0, 0.2572], [0, 0.2536]], [[0, 0.144], [0, 0.7836], [0, 0.2412]], [[0, 0.0973], [0, 0.2033], [0.0006, 0.5339]]]]]