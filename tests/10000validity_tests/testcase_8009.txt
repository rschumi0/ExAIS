import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Loc22345 = tf.keras.layers.Input(shape=([1, 1]))

Loc22345 = keras.layers.LocallyConnected1D(4, (1),strides=(1), name = 'Loc22345', )(in0Loc22345)
Bat88395 = keras.layers.BatchNormalization(axis=1, epsilon=0.3395532581974524,  name = 'Bat88395', )(Loc22345)
Mas56828 = keras.layers.Masking(mask_value=1, name = 'Mas56828', )(Bat88395)
model = tf.keras.models.Model(inputs=[in0Loc22345], outputs=Mas56828)
w = model.get_layer('Loc22345').get_weights() 
w[0] = np.array([[[0.3017, 0.0938, 0.3581, 0.4853]]])
w[1] = np.array([[0, 0, 0, 0]])
model.get_layer('Loc22345').set_weights(w) 
w = model.get_layer('Bat88395').get_weights() 
w[0] = np.array([0.7645])
w[1] = np.array([0.9056])
w[2] = np.array([0.7864])
w[3] = np.array([0.0602])
model.get_layer('Bat88395').set_weights(w) 
in0Loc22345 = tf.constant([[[0.7722]]])
print (np.array2string(model.predict([in0Loc22345],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Mas56828.png')

LLoc22345 = locally_connected1D_layer([[[0.7722]]], 1,[[[0.3017, 0.0938, 0.3581, 0.4853]]],[[0, 0, 0, 0]], 1, Loc22345), 
LBat88395 = batch_normalization_layer(Loc22345, 1, 0.3395532581974524, [0.7645], [0.9056], [0.7864], [0.0602], Bat88395), 
LMas56828 = masking_layer(Bat88395, 1, Mas56828), 
exec_layers([LLoc22345,LBat88395,LMas56828],["Loc22345","Bat88395","Mas56828"],Mas56828,"Mas56828")

Actual (Unparsed): [[[0.2364214, 0.0423034, 0.2890826, 0.4078503]]]

Expected (Unparsed): [[[0.23642142014949297,0.04230343706159678,0.28908257573466545,0.4078502883310117]]]

Actual:   [[[0.2365, 0.0424, 0.2891, 0.4079]]]

Expected: [[[0.2365, 0.0424, 0.2891, 0.4079]]]