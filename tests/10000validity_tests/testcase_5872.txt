import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Ave88421 = tf.keras.layers.Input(shape=([1, 1, 1, 1]))
in1Ave88421 = tf.keras.layers.Input(shape=([1, 1, 1, 1]))
in0Con68117 = tf.keras.layers.Input(shape=([4, 3]))
in0Con70800 = tf.keras.layers.Input(shape=([2, 1, 2]))
in0Max79569 = tf.keras.layers.Input(shape=([1, 2]))
in0Con44865 = tf.keras.layers.Input(shape=([2, 1]))
in0Per46813 = tf.keras.layers.Input(shape=([2, 3]))
in0Max80445 = tf.keras.layers.Input(shape=([2, 2, 2]))
in1Max80445 = tf.keras.layers.Input(shape=([2, 2, 2]))
in0Con90381 = tf.keras.layers.Input(shape=([5]))
in0Con68151 = tf.keras.layers.Input(shape=([10]))

Ave88421 = keras.layers.Average(name = 'Ave88421', )([in0Ave88421,in1Ave88421])
Res57213 = keras.layers.Reshape((1, 1, 1), name = 'Res57213', )(Ave88421)
Res47282 = keras.layers.Reshape((1, 1), name = 'Res47282', )(Res57213)
Zer66315 = keras.layers.ZeroPadding1D(padding=((3, 0)), name = 'Zer66315', )(Res47282)
Con68117 = keras.layers.Concatenate(axis=2, name = 'Con68117', )([Zer66315,in0Con68117])
Con70800 = keras.layers.Conv2DTranspose(4, (1, 1),strides=(1, 1), padding='valid', name = 'Con70800', )(in0Con70800)
Con98753 = keras.layers.Conv2D(4, (1, 1),strides=(1, 1), padding='same', dilation_rate=(1, 1), name = 'Con98753', )(Con70800)
Res6598 = keras.layers.Reshape((2, 4), name = 'Res6598', )(Con98753)
Zer64328 = keras.layers.ZeroPadding1D(padding=((1, 1)), name = 'Zer64328', )(Res6598)
Ave62650 = keras.layers.Average(name = 'Ave62650', )([Con68117,Zer64328])
Fla75646 = keras.layers.Flatten(name = 'Fla75646', )(Ave62650)
Max79569 = keras.layers.MaxPool1D(pool_size=(1), strides=(1), padding='valid', name = 'Max79569', )(in0Max79569)
Up_44060 = keras.layers.UpSampling1D(size=(1), name = 'Up_44060', )(Max79569)
Zer24306 = keras.layers.ZeroPadding1D(padding=((1, 0)), name = 'Zer24306', )(Up_44060)
Con44865 = keras.layers.Concatenate(axis=2, name = 'Con44865', )([Zer24306,in0Con44865])
Per46813 = keras.layers.Permute((1,2), name = 'Per46813',)(in0Per46813)
Mul6143 = keras.layers.Multiply(name = 'Mul6143', )([Con44865,Per46813])
Fla88994 = keras.layers.Flatten(name = 'Fla88994', )(Mul6143)
Max80445 = keras.layers.Maximum(name = 'Max80445', )([in0Max80445,in1Max80445])
Res48533 = keras.layers.Reshape((2, 2, 2, 1), name = 'Res48533', )(Max80445)
Glo34267 = keras.layers.GlobalAveragePooling3D(name = 'Glo34267', )(Res48533)
Con90381 = keras.layers.Concatenate(axis=1, name = 'Con90381', )([Glo34267,in0Con90381])
Sub41123 = keras.layers.Subtract(name = 'Sub41123', )([Fla88994,Con90381])
Con68151 = keras.layers.Concatenate(axis=1, name = 'Con68151', )([Sub41123,in0Con68151])
Mul89176 = keras.layers.Multiply(name = 'Mul89176', )([Fla75646,Con68151])
model = tf.keras.models.Model(inputs=[in0Ave88421,in1Ave88421,in0Con68117,in0Con70800,in0Max79569,in0Con44865,in0Per46813,in0Max80445,in1Max80445,in0Con90381,in0Con68151], outputs=Mul89176)
w = model.get_layer('Con70800').get_weights() 
w[0] = np.array([[[[0.996, 0.2162], [0.3944, 0.5361], [0.4765, 0.0269], [0.4922, 0.6752]]]])
w[1] = np.array([0, 0, 0, 0])
model.get_layer('Con70800').set_weights(w) 
w = model.get_layer('Con98753').get_weights() 
w[0] = np.array([[[[0.9363, 0.4789, 0.4784, 0.1797], [0.2144, 0.4337, 0.2855, 0.2094], [0.842, 0.1663, 0.0466, 0.2523], [0.6308, 0.6221, 0.9536, 0.9834]]]])
w[1] = np.array([0, 0, 0, 0])
model.get_layer('Con98753').set_weights(w) 
in0Ave88421 = tf.constant([[[[[0.0901]]]]])
in1Ave88421 = tf.constant([[[[[0.3185]]]]])
in0Con68117 = tf.constant([[[0.2036, 0.0324, 0.6317], [0.1107, 0.6055, 0.3423], [0.021, 0.5933, 0.7737], [0.5295, 0.8153, 0.0037]]])
in0Con70800 = tf.constant([[[[0.1659, 0.6932]], [[0.9409, 0.2333]]]])
in0Max79569 = tf.constant([[[1.6098, 1.7094]]])
in0Con44865 = tf.constant([[[0.3044], [0.717]]])
in0Per46813 = tf.constant([[[1.7265, 1.4431, 1.1153], [1.3687, 1.3579, 1.1669]]])
in0Max80445 = tf.constant([[[[0.4865, 0.6555], [0.9813, 0.2907]], [[0.7131, 0.2797], [0.0947, 0.1051]]]])
in1Max80445 = tf.constant([[[[0.5275, 0.0578], [0.6549, 0.9828]], [[0.986, 0.875], [0.9568, 0.1795]]]])
in0Con90381 = tf.constant([[0.1459, 0.9161, 0.4393, 0.9482, 0.1283]])
in0Con68151 = tf.constant([[0.6071, 0.864, 0.6603, 0.5161, 0.6529, 0.6041, 0.4378, 0.6396, 0.8643, 0.1908]])
print (np.array2string(model.predict([in0Ave88421,in1Ave88421,in0Con68117,in0Con70800,in0Max79569,in0Con44865,in0Per46813,in0Max80445,in1Max80445,in0Con90381,in0Con68151],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Mul89176.png')

LAve88421 = average_layer([[[[[[0.0901]]]]], [[[[[0.3185]]]]]], Ave88421), 
LRes57213 = reshape_layer(Ave88421, [1, 1, 1], Res57213), 
LRes47282 = reshape_layer(Res57213, [1, 1], Res47282), 
LZer66315 = zero_padding1D_layer(Res47282, 3, 0, Zer66315), 
LCon68117 = concatenate_layer([Zer66315,[[[0.2036, 0.0324, 0.6317], [0.1107, 0.6055, 0.3423], [0.021, 0.5933, 0.7737], [0.5295, 0.8153, 0.0037]]]], 2, Con68117), 
LCon70800 = conv2D_transpose_layer([[[[0.1659, 0.6932]], [[0.9409, 0.2333]]]], 1, 1,[[[[0.996, 0.2162], [0.3944, 0.5361], [0.4765, 0.0269], [0.4922, 0.6752]]]],[0, 0, 0, 0], 1, 1, false, Con70800), 
LCon98753 = conv2D_layer(Con70800, 1, 1,[[[[0.9363, 0.4789, 0.4784, 0.1797], [0.2144, 0.4337, 0.2855, 0.2094], [0.842, 0.1663, 0.0466, 0.2523], [0.6308, 0.6221, 0.9536, 0.9834]]]],[0, 0, 0, 0], 1, 1, true, 1, 1, Con98753), 
LRes6598 = reshape_layer(Con98753, [2, 4], Res6598), 
LZer64328 = zero_padding1D_layer(Res6598, 1, 1, Zer64328), 
LAve62650 = average_layer([Con68117,Zer64328], Ave62650), 
LFla75646 = flatten_layer(Ave62650, Fla75646), 
LMax79569 = max_pool1D_layer([[[1.6098, 1.7094]]], 1, 1, false, Max79569), 
LUp_44060 = up_sampling1D_layer(Max79569, 1, Up_44060), 
LZer24306 = zero_padding1D_layer(Up_44060, 1, 0, Zer24306), 
LCon44865 = concatenate_layer([Zer24306,[[[0.3044], [0.717]]]], 2, Con44865), 
LPer46813 = permute_layer([[[1.7265, 1.4431, 1.1153], [1.3687, 1.3579, 1.1669]]], 1,2, Per46813), 
LMul6143 = multiply_layer([Con44865,Per46813], Mul6143), 
LFla88994 = flatten_layer(Mul6143, Fla88994), 
LMax80445 = maximum_layer([[[[[0.4865, 0.6555], [0.9813, 0.2907]], [[0.7131, 0.2797], [0.0947, 0.1051]]]], [[[[0.5275, 0.0578], [0.6549, 0.9828]], [[0.986, 0.875], [0.9568, 0.1795]]]]], Max80445), 
LRes48533 = reshape_layer(Max80445, [2, 2, 2, 1], Res48533), 
LGlo34267 = global_average_pooling3D_layer(Res48533, Glo34267), 
LCon90381 = concatenate_layer([Glo34267,[[0.1459, 0.9161, 0.4393, 0.9482, 0.1283]]], 1, Con90381), 
LSub41123 = subtract_layer(Fla88994,Con90381, Sub41123), 
LCon68151 = concatenate_layer([Sub41123,[[0.6071, 0.864, 0.6603, 0.5161, 0.6529, 0.6041, 0.4378, 0.6396, 0.8643, 0.1908]]], 1, Con68151), 
LMul89176 = multiply_layer([Fla75646,Con68151], Mul89176), 
exec_layers([LAve88421,LRes57213,LRes47282,LZer66315,LCon68117,LCon70800,LCon98753,LRes6598,LZer64328,LAve62650,LFla75646,LMax79569,LUp_44060,LZer24306,LCon44865,LPer46813,LMul6143,LFla88994,LMax80445,LRes48533,LGlo34267,LCon90381,LSub41123,LCon68151,LMul89176],["Ave88421","Res57213","Res47282","Zer66315","Con68117","Con70800","Con98753","Res6598","Zer64328","Ave62650","Fla75646","Max79569","Up_44060","Zer24306","Con44865","Per46813","Mul6143","Fla88994","Max80445","Res48533","Glo34267","Con90381","Sub41123","Con68151","Mul89176"],Mul89176,"Mul89176")

Actual (Unparsed): [[-0.0000000, -0.0148526, -0.0093410, 0.5571699, 0.5613861, 0.2866670, 0.4279379, 0.4560507, 0.5960287, 0.3021341, 0.5942805, 0.5376779, 0.0447213, 0.1693341, 0.3523319, 0.0003530]]

Expected (Unparsed): [[-0.0,-0.01485262,-0.009340963416,0.5571699051710001,0.5613860622237854,0.28666697839457667,0.4279378803599523,0.45605066948798395,0.5960286432068649,0.30213411197101525,0.5942805371032768,0.5376779359036995,0.04472127000000001,0.1693341,0.352331895,0.00035298]]

Actual:   [[-0, -0.0148, -0.0093, 0.5572, 0.5614, 0.2867, 0.428, 0.4561, 0.5961, 0.3022, 0.5943, 0.5377, 0.0448, 0.1694, 0.3524, 0.0004]]

Expected: [[-0, -0.0148, -0.0093, 0.5572, 0.5614, 0.2867, 0.428, 0.4561, 0.5961, 0.3022, 0.5943, 0.5377, 0.0448, 0.1694, 0.3524, 0.0004]]