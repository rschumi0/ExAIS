import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Max92650 = tf.keras.layers.Input(shape=([2, 2, 2]))
in1Max92650 = tf.keras.layers.Input(shape=([2, 2, 2]))
in0Con87745 = tf.keras.layers.Input(shape=([2, 2, 2]))
in0Sep39926 = tf.keras.layers.Input(shape=([1, 1, 1]))
in0Mul18925 = tf.keras.layers.Input(shape=([1, 1, 1]))
in1Mul18925 = tf.keras.layers.Input(shape=([1, 1, 1]))
in0Con30088 = tf.keras.layers.Input(shape=([1, 1]))
in0Max88144 = tf.keras.layers.Input(shape=([2, 2]))
in0Con1244 = tf.keras.layers.Input(shape=([2, 6]))
in0Add82401 = tf.keras.layers.Input(shape=([1, 2, 1]))
in1Add82401 = tf.keras.layers.Input(shape=([1, 2, 1]))
in0Con84185 = tf.keras.layers.Input(shape=([14]))

Max92650 = keras.layers.Maximum(name = 'Max92650', )([in0Max92650,in1Max92650])
Con87745 = keras.layers.Concatenate(axis=3, name = 'Con87745', )([Max92650,in0Con87745])
Sep39926 = keras.layers.SeparableConv2D(4, (1, 1),strides=(1, 1), padding='same', name = 'Sep39926', )(in0Sep39926)
Zer80374 = keras.layers.ZeroPadding2D(padding=((1, 0), (1, 0)), name = 'Zer80374', )(Sep39926)
Ave42067 = keras.layers.Average(name = 'Ave42067', )([Con87745,Zer80374])
Res82670 = keras.layers.Reshape((2, 8), name = 'Res82670', )(Ave42067)
Mul18925 = keras.layers.Multiply(name = 'Mul18925', )([in0Mul18925,in1Mul18925])
Res37379 = keras.layers.Reshape((1, 1), name = 'Res37379', )(Mul18925)
Con30088 = keras.layers.Concatenate(axis=2, name = 'Con30088', )([Res37379,in0Con30088])
Max88144 = keras.layers.MaxPool1D(pool_size=(2), name = 'Max88144', )(in0Max88144)
Ave21911 = keras.layers.Average(name = 'Ave21911', )([Con30088,Max88144])
Zer31313 = keras.layers.ZeroPadding1D(padding=((1, 0)), name = 'Zer31313', )(Ave21911)
Con1244 = keras.layers.Concatenate(axis=2, name = 'Con1244', )([Zer31313,in0Con1244])
Min39813 = keras.layers.Minimum(name = 'Min39813', )([Res82670,Con1244])
Fla31718 = keras.layers.Flatten(name = 'Fla31718', )(Min39813)
Add82401 = keras.layers.Add(name = 'Add82401', )([in0Add82401,in1Add82401])
Res96702 = keras.layers.Reshape((1, 2), name = 'Res96702', )(Add82401)
Max73959 = keras.layers.MaxPool1D(pool_size=(1), strides=(1), padding='valid', name = 'Max73959', )(Res96702)
Res42854 = keras.layers.Reshape((1, 2, 1), name = 'Res42854', )(Max73959)
Up_59780 = keras.layers.UpSampling2D(size=(1, 1), name = 'Up_59780', )(Res42854)
Fla32746 = keras.layers.Flatten(name = 'Fla32746', )(Up_59780)
Con84185 = keras.layers.Concatenate(axis=1, name = 'Con84185', )([Fla32746,in0Con84185])
Mul77275 = keras.layers.Multiply(name = 'Mul77275', )([Fla31718,Con84185])
model = tf.keras.models.Model(inputs=[in0Max92650,in1Max92650,in0Con87745,in0Sep39926,in0Mul18925,in1Mul18925,in0Con30088,in0Max88144,in0Con1244,in0Add82401,in1Add82401,in0Con84185], outputs=Mul77275)
w = model.get_layer('Sep39926').get_weights() 
w[0] = np.array([[[[0.5164]]]])
w[1] = np.array([[[[0.9367, 0.8524, 0.6375, 0.393]]]])
w[2] = np.array([0, 0, 0, 0])
model.get_layer('Sep39926').set_weights(w) 
in0Max92650 = tf.constant([[[[0.3689, 0.1092], [0.2954, 0.1056]], [[0.6784, 0.9408], [0.0367, 0.273]]]])
in1Max92650 = tf.constant([[[[0.463, 0.1116], [0.3871, 0.503]], [[0.0669, 0.4598], [0.5172, 0.2902]]]])
in0Con87745 = tf.constant([[[[0.241, 0.516], [0.947, 0.6471]], [[0.1874, 0.1901], [0.9062, 0.9189]]]])
in0Sep39926 = tf.constant([[[[0.8764]]]])
in0Mul18925 = tf.constant([[[[0.5427]]]])
in1Mul18925 = tf.constant([[[[0.2422]]]])
in0Con30088 = tf.constant([[[0.629]]])
in0Max88144 = tf.constant([[[1.1485, 1.3413], [1.7373, 1.7112]]])
in0Con1244 = tf.constant([[[0.0306, 0.0874, 0.2103, 0.6296, 0.1587, 0.2997], [0.2783, 0.0453, 0.6013, 0.9757, 0.5683, 0.4418]]])
in0Add82401 = tf.constant([[[[0.4306], [0.3422]]]])
in1Add82401 = tf.constant([[[[0.069], [0.5331]]]])
in0Con84185 = tf.constant([[0.7805, 0.7055, 0.8185, 0.0931, 0.0648, 0.7123, 0.1089, 0.1406, 0.7115, 0.3812, 0.7596, 0.9533, 0.2829, 0.4517]])
print (np.array2string(model.predict([in0Max92650,in1Max92650,in0Con87745,in0Sep39926,in0Mul18925,in1Mul18925,in0Con30088,in0Max88144,in0Con1244,in0Add82401,in1Add82401,in0Con84185],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Mul77275.png')

LMax92650 = maximum_layer([[[[[0.3689, 0.1092], [0.2954, 0.1056]], [[0.6784, 0.9408], [0.0367, 0.273]]]], [[[[0.463, 0.1116], [0.3871, 0.503]], [[0.0669, 0.4598], [0.5172, 0.2902]]]]], Max92650), 
LCon87745 = concatenate_layer([Max92650,[[[[0.241, 0.516], [0.947, 0.6471]], [[0.1874, 0.1901], [0.9062, 0.9189]]]]], 3, Con87745), 
LSep39926 = separable_conv2D_layer([[[[0.8764]]]], 1, 1,[[[[[0.5164]]]],[[[[0.9367, 0.8524, 0.6375, 0.393]]]]],[0, 0, 0, 0], 1, 1, true, Sep39926), 
LZer80374 = zero_padding2D_layer(Sep39926, 1, 0, 1, 0, Zer80374), 
LAve42067 = average_layer([Con87745,Zer80374], Ave42067), 
LRes82670 = reshape_layer(Ave42067, [2, 8], Res82670), 
LMul18925 = multiply_layer([[[[[0.5427]]]], [[[[0.2422]]]]], Mul18925), 
LRes37379 = reshape_layer(Mul18925, [1, 1], Res37379), 
LCon30088 = concatenate_layer([Res37379,[[[0.629]]]], 2, Con30088), 
LMax88144 = max_pool1D_layer([[[1.1485, 1.3413], [1.7373, 1.7112]]], 2, Max88144), 
LAve21911 = average_layer([Con30088,Max88144], Ave21911), 
LZer31313 = zero_padding1D_layer(Ave21911, 1, 0, Zer31313), 
LCon1244 = concatenate_layer([Zer31313,[[[0.0306, 0.0874, 0.2103, 0.6296, 0.1587, 0.2997], [0.2783, 0.0453, 0.6013, 0.9757, 0.5683, 0.4418]]]], 2, Con1244), 
LMin39813 = minimum_layer([Res82670,Con1244], Min39813), 
LFla31718 = flatten_layer(Min39813, Fla31718), 
LAdd82401 = add_layer([[[[[0.4306], [0.3422]]]], [[[[0.069], [0.5331]]]]], Add82401), 
LRes96702 = reshape_layer(Add82401, [1, 2], Res96702), 
LMax73959 = max_pool1D_layer(Res96702, 1, 1, false, Max73959), 
LRes42854 = reshape_layer(Max73959, [1, 2, 1], Res42854), 
LUp_59780 = up_sampling2D_layer(Res42854, 1, 1, Up_59780), 
LFla32746 = flatten_layer(Up_59780, Fla32746), 
LCon84185 = concatenate_layer([Fla32746,[[0.7805, 0.7055, 0.8185, 0.0931, 0.0648, 0.7123, 0.1089, 0.1406, 0.7115, 0.3812, 0.7596, 0.9533, 0.2829, 0.4517]]], 1, Con84185), 
LMul77275 = multiply_layer([Fla31718,Con84185], Mul77275), 
exec_layers([LMax92650,LCon87745,LSep39926,LZer80374,LAve42067,LRes82670,LMul18925,LRes37379,LCon30088,LMax88144,LAve21911,LZer31313,LCon1244,LMin39813,LFla31718,LAdd82401,LRes96702,LMax73959,LRes42854,LUp_59780,LFla32746,LCon84185,LMul77275],["Max92650","Con87745","Sep39926","Zer80374","Ave42067","Res82670","Mul18925","Res37379","Con30088","Max88144","Ave21911","Zer31313","Con1244","Min39813","Fla31718","Add82401","Res96702","Max73959","Res42854","Up_59780","Fla32746","Con84185","Mul77275"],Mul77275,"Mul77275")

Actual (Unparsed): [[0.0000000, 0.0000000, 0.0238833, 0.0616607, 0.1584207, 0.0234147, 0.0102838, 0.2134763, 0.0369389, 0.0661382, 0.0666675, 0.0172684, 0.3574393, 0.3222026, 0.1607721, 0.1995611]]

Expected (Unparsed): [[0.0,0.0,0.0238833,0.061660700000000006,0.158420675,0.023414650000000002,0.01028376,0.21347631000000003,0.03693888,0.06613824,0.06666755,0.01726836,0.35743930980183364,0.3222026215397216,0.16077207,0.19956106]]

Actual:   [[0, 0, 0.0239, 0.0617, 0.1585, 0.0235, 0.0103, 0.2135, 0.037, 0.0662, 0.0667, 0.0173, 0.3575, 0.3223, 0.1608, 0.1996]]

Expected: [[0, 0, 0.0239, 0.0617, 0.1585, 0.0235, 0.0103, 0.2135, 0.037, 0.0662, 0.0667, 0.0173, 0.3575, 0.3223, 0.1608, 0.1996]]