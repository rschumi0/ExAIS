import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Zer3307 = tf.keras.layers.Input(shape=([2, 2, 1, 1]))
in0Dot80726 = tf.keras.layers.Input(shape=([2]))
in1Dot80726 = tf.keras.layers.Input(shape=([2]))
in0Con83497 = tf.keras.layers.Input(shape=([47]))
in0Con78002 = tf.keras.layers.Input(shape=([48, 3, 1]))
in0Min74449 = tf.keras.layers.Input(shape=([1, 2, 2, 1]))
in1Min74449 = tf.keras.layers.Input(shape=([1, 2, 2, 1]))

Zer3307 = keras.layers.ZeroPadding3D(padding=((1, 1), (1, 1), (1, 1)), name = 'Zer3307', )(in0Zer3307)
Res22007 = keras.layers.Reshape((4, 4, 3), name = 'Res22007', )(Zer3307)
Res34366 = keras.layers.Reshape((4, 12), name = 'Res34366', )(Res22007)
Fla36805 = keras.layers.Flatten(name = 'Fla36805', )(Res34366)
Dot80726 = keras.layers.Dot(axes=(1, 1), name = 'Dot80726', )([in0Dot80726,in1Dot80726])
Mas91010 = keras.layers.Masking(mask_value=1, name = 'Mas91010', )(Dot80726)
Con83497 = keras.layers.Concatenate(axis=1, name = 'Con83497', )([Mas91010,in0Con83497])
Mul32791 = keras.layers.Multiply(name = 'Mul32791', )([Fla36805,Con83497])
Res68854 = keras.layers.Reshape((48, 1), name = 'Res68854', )(Mul32791)
Res78565 = keras.layers.Reshape((48, 1, 1), name = 'Res78565', )(Res68854)
Zer88466 = keras.layers.ZeroPadding2D(padding=((0, 0), (2, 0)), name = 'Zer88466', )(Res78565)
Con78002 = keras.layers.Concatenate(axis=3, name = 'Con78002', )([Zer88466,in0Con78002])
Min74449 = keras.layers.Minimum(name = 'Min74449', )([in0Min74449,in1Min74449])
Res91454 = keras.layers.Reshape((1, 2, 2), name = 'Res91454', )(Min74449)
Ave19702 = keras.layers.AveragePooling2D(pool_size=(1, 1), name = 'Ave19702', )(Res91454)
Zer60854 = keras.layers.ZeroPadding2D(padding=((47, 0), (1, 0)), name = 'Zer60854', )(Ave19702)
Ave93427 = keras.layers.Average(name = 'Ave93427', )([Con78002,Zer60854])
model = tf.keras.models.Model(inputs=[in0Zer3307,in0Dot80726,in1Dot80726,in0Con83497,in0Con78002,in0Min74449,in1Min74449], outputs=Ave93427)
in0Zer3307 = tf.constant([[[[[1.3662]], [[1.4177]]], [[[1.6609]], [[1.7407]]]]])
in0Dot80726 = tf.constant([[0.4282, 0.5199]])
in1Dot80726 = tf.constant([[0.4767, 0.9312]])
in0Con83497 = tf.constant([[0.3822, 0.9296, 0.0448, 0.6739, 0.2881, 0.6329, 0.3695, 0.1113, 0.8752, 0.2033, 0.4284, 0.2726, 0.8401, 0.0802, 0.9454, 0.9277, 0.2165, 0.6418, 0.0295, 0.0723, 0.1338, 0.702, 0.4067, 0.2883, 0.6063, 0.3865, 0.3057, 0.4989, 0.0312, 0.1871, 0.3555, 0.1756, 0.1231, 0.5165, 0.4106, 0.7174, 0.3418, 0.1404, 0.5711, 0.4195, 0.4798, 0.4535, 0.7857, 0.1772, 0.9677, 0.6809, 0.3353]])
in0Con78002 = tf.constant([[[[0.8857], [0.6476], [0.7156]], [[0.4105], [0.3315], [0.325]], [[0.2964], [0.5311], [0.6659]], [[0.658], [0.809], [0.6512]], [[0.241], [0.6838], [0.7752]], [[0.019], [0.4318], [0.6585]], [[0.4996], [0.796], [0.0192]], [[0.1143], [0.9668], [0.2139]], [[0.1926], [0.3483], [0.9568]], [[0.8373], [0.8632], [0.224]], [[0.408], [0.3876], [0.9132]], [[0.3916], [0.628], [0.076]], [[0.4665], [0.0309], [0.5575]], [[0.1538], [0.2601], [0.0036]], [[0.9232], [0.4391], [0.7203]], [[0.8663], [0.7838], [0.9083]], [[0.4012], [0.5382], [0.6655]], [[0.0495], [0.034], [0.5461]], [[0.2159], [0.5682], [0.5496]], [[0.6738], [0.0598], [0.2076]], [[0.0887], [0.5337], [0.3323]], [[0.8989], [0.1943], [0.0462]], [[0.1857], [0.1961], [0.0917]], [[0.0663], [0.4195], [0.9608]], [[0.2074], [0.4246], [0.266]], [[0.5661], [0.848], [0.4685]], [[0.2783], [0.4631], [0.2714]], [[0.7799], [0.2172], [0.8169]], [[0.2149], [0.1245], [0.8056]], [[0.0592], [0.3156], [0.8424]], [[0.2338], [0.6278], [0.7568]], [[0.8324], [0.333], [0.8679]], [[0.9052], [0.9958], [0.4119]], [[0.0535], [0.6657], [0.5135]], [[0.8484], [0.7575], [0.773]], [[0.6065], [0.6651], [0.3421]], [[0.2648], [0.4978], [0.4821]], [[0.1755], [0.9358], [0.1348]], [[0.4364], [0.2864], [0.6602]], [[0.8605], [0.8841], [0.5621]], [[0.0864], [0.6264], [0.9616]], [[0.2693], [0.3592], [0.5302]], [[0.3727], [0.6289], [0.2039]], [[0.4309], [0.0856], [0.4119]], [[0.9195], [0.1428], [0.9834]], [[0.042], [0.5713], [0.2464]], [[0.8877], [0.4856], [0.9468]], [[0.8628], [0.7964], [0.2911]]]])
in0Min74449 = tf.constant([[[[[0.508], [0.464]], [[0.2829], [0.287]]]]])
in1Min74449 = tf.constant([[[[[0.6211], [0.3169]], [[0.828], [0.253]]]]])
print (np.array2string(model.predict([in0Zer3307,in0Dot80726,in1Dot80726,in0Con83497,in0Con78002,in0Min74449,in1Min74449],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Ave93427.png')

LZer3307 = zero_padding3D_layer([[[[[1.3662]], [[1.4177]]], [[[1.6609]], [[1.7407]]]]], 1, 1, 1, 1, 1, 1, Zer3307), 
LRes22007 = reshape_layer(Zer3307, [4, 4, 3], Res22007), 
LRes34366 = reshape_layer(Res22007, [4, 12], Res34366), 
LFla36805 = flatten_layer(Res34366, Fla36805), 
LDot80726 = dot_layer([[0.4282, 0.5199]], [[0.4767, 0.9312]], 1, 1, Dot80726), 
LMas91010 = masking_layer(Dot80726, 1, Mas91010), 
LCon83497 = concatenate_layer([Mas91010,[[0.3822, 0.9296, 0.0448, 0.6739, 0.2881, 0.6329, 0.3695, 0.1113, 0.8752, 0.2033, 0.4284, 0.2726, 0.8401, 0.0802, 0.9454, 0.9277, 0.2165, 0.6418, 0.0295, 0.0723, 0.1338, 0.702, 0.4067, 0.2883, 0.6063, 0.3865, 0.3057, 0.4989, 0.0312, 0.1871, 0.3555, 0.1756, 0.1231, 0.5165, 0.4106, 0.7174, 0.3418, 0.1404, 0.5711, 0.4195, 0.4798, 0.4535, 0.7857, 0.1772, 0.9677, 0.6809, 0.3353]]], 1, Con83497), 
LMul32791 = multiply_layer([Fla36805,Con83497], Mul32791), 
LRes68854 = reshape_layer(Mul32791, [48, 1], Res68854), 
LRes78565 = reshape_layer(Res68854, [48, 1, 1], Res78565), 
LZer88466 = zero_padding2D_layer(Res78565, 0, 0, 2, 0, Zer88466), 
LCon78002 = concatenate_layer([Zer88466,[[[[0.8857], [0.6476], [0.7156]], [[0.4105], [0.3315], [0.325]], [[0.2964], [0.5311], [0.6659]], [[0.658], [0.809], [0.6512]], [[0.241], [0.6838], [0.7752]], [[0.019], [0.4318], [0.6585]], [[0.4996], [0.796], [0.0192]], [[0.1143], [0.9668], [0.2139]], [[0.1926], [0.3483], [0.9568]], [[0.8373], [0.8632], [0.224]], [[0.408], [0.3876], [0.9132]], [[0.3916], [0.628], [0.076]], [[0.4665], [0.0309], [0.5575]], [[0.1538], [0.2601], [0.0036]], [[0.9232], [0.4391], [0.7203]], [[0.8663], [0.7838], [0.9083]], [[0.4012], [0.5382], [0.6655]], [[0.0495], [0.034], [0.5461]], [[0.2159], [0.5682], [0.5496]], [[0.6738], [0.0598], [0.2076]], [[0.0887], [0.5337], [0.3323]], [[0.8989], [0.1943], [0.0462]], [[0.1857], [0.1961], [0.0917]], [[0.0663], [0.4195], [0.9608]], [[0.2074], [0.4246], [0.266]], [[0.5661], [0.848], [0.4685]], [[0.2783], [0.4631], [0.2714]], [[0.7799], [0.2172], [0.8169]], [[0.2149], [0.1245], [0.8056]], [[0.0592], [0.3156], [0.8424]], [[0.2338], [0.6278], [0.7568]], [[0.8324], [0.333], [0.8679]], [[0.9052], [0.9958], [0.4119]], [[0.0535], [0.6657], [0.5135]], [[0.8484], [0.7575], [0.773]], [[0.6065], [0.6651], [0.3421]], [[0.2648], [0.4978], [0.4821]], [[0.1755], [0.9358], [0.1348]], [[0.4364], [0.2864], [0.6602]], [[0.8605], [0.8841], [0.5621]], [[0.0864], [0.6264], [0.9616]], [[0.2693], [0.3592], [0.5302]], [[0.3727], [0.6289], [0.2039]], [[0.4309], [0.0856], [0.4119]], [[0.9195], [0.1428], [0.9834]], [[0.042], [0.5713], [0.2464]], [[0.8877], [0.4856], [0.9468]], [[0.8628], [0.7964], [0.2911]]]]], 3, Con78002), 
LMin74449 = minimum_layer([[[[[[0.508], [0.464]], [[0.2829], [0.287]]]]], [[[[[0.6211], [0.3169]], [[0.828], [0.253]]]]]], Min74449), 
LRes91454 = reshape_layer(Min74449, [1, 2, 2], Res91454), 
LAve19702 = average_pooling2D_layer(Res91454, 1, 1, Ave19702), 
LZer60854 = zero_padding2D_layer(Ave19702, 47, 0, 1, 0, Zer60854), 
LAve93427 = average_layer([Con78002,Zer60854], Ave93427), 
exec_layers([LZer3307,LRes22007,LRes34366,LFla36805,LDot80726,LMas91010,LCon83497,LMul32791,LRes68854,LRes78565,LZer88466,LCon78002,LMin74449,LRes91454,LAve19702,LZer60854,LAve93427],["Zer3307","Res22007","Res34366","Fla36805","Dot80726","Mas91010","Con83497","Mul32791","Res68854","Res78565","Zer88466","Con78002","Min74449","Res91454","Ave19702","Zer60854","Ave93427"],Ave93427,"Ave93427")

Actual (Unparsed): [[[[0.0000000, 0.4428500], [0.0000000, 0.3238000], [0.0000000, 0.3578000]], [[0.0000000, 0.2052500], [0.0000000, 0.1657500], [0.0000000, 0.1625000]], [[0.0000000, 0.1482000], [0.0000000, 0.2655500], [0.0000000, 0.3329500]], [[0.0000000, 0.3290000], [0.0000000, 0.4045000], [0.0000000, 0.3256000]], [[0.0000000, 0.1205000], [0.0000000, 0.3419000], [0.0000000, 0.3876000]], [[0.0000000, 0.0095000], [0.0000000, 0.2159000], [0.0000000, 0.3292500]], [[0.0000000, 0.2498000], [0.0000000, 0.3980000], [0.0000000, 0.0096000]], [[0.0000000, 0.0571500], [0.0000000, 0.4834000], [0.0000000, 0.1069500]], [[0.0000000, 0.0963000], [0.0000000, 0.1741500], [0.0000000, 0.4784000]], [[0.0000000, 0.4186500], [0.0000000, 0.4316000], [0.0000000, 0.1120000]], [[0.0000000, 0.2040000], [0.0000000, 0.1938000], [0.0000000, 0.4566000]], [[0.0000000, 0.1958000], [0.0000000, 0.3140000], [0.0000000, 0.0380000]], [[0.0000000, 0.2332500], [0.0000000, 0.0154500], [0.0000000, 0.2787500]], [[0.0000000, 0.0769000], [0.0000000, 0.1300500], [0.0000000, 0.0018000]], [[0.0000000, 0.4616000], [0.0000000, 0.2195500], [0.0000000, 0.3601500]], [[0.0000000, 0.4331500], [0.0000000, 0.3919000], [0.0000000, 0.4541500]], [[0.0000000, 0.2006000], [0.0000000, 0.2691000], [0.6337118, 0.3327500]], [[0.0000000, 0.0247500], [0.0000000, 0.0170000], [0.0000000, 0.2730500]], [[0.0000000, 0.1079500], [0.0000000, 0.2841000], [0.0000000, 0.2748000]], [[0.0000000, 0.3369000], [0.0000000, 0.0299000], [0.0209111, 0.1038000]], [[0.0000000, 0.0443500], [0.0000000, 0.2668500], [0.0000000, 0.1661500]], [[0.0000000, 0.4494500], [0.0000000, 0.0971500], [0.0000000, 0.0231000]], [[0.0000000, 0.0928500], [0.0000000, 0.0980500], [0.0000000, 0.0458500]], [[0.0000000, 0.0331500], [0.0000000, 0.2097500], [0.0000000, 0.4804000]], [[0.0000000, 0.1037000], [0.0000000, 0.2123000], [0.0000000, 0.1330000]], [[0.0000000, 0.2830500], [0.0000000, 0.4240000], [0.0000000, 0.2342500]], [[0.0000000, 0.1391500], [0.0000000, 0.2315500], [0.0000000, 0.1357000]], [[0.0000000, 0.3899500], [0.0000000, 0.1086000], [0.0000000, 0.4084500]], [[0.0000000, 0.1074500], [0.0000000, 0.0622500], [0.4143115, 0.4028000]], [[0.0000000, 0.0296000], [0.0000000, 0.1578000], [0.0000000, 0.4212000]], [[0.0000000, 0.1169000], [0.0000000, 0.3139000], [0.0000000, 0.3784000]], [[0.0000000, 0.4162000], [0.0000000, 0.1665000], [0.3094094, 0.4339500]], [[0.0000000, 0.4526000], [0.0000000, 0.4979000], [0.0000000, 0.2059500]], [[0.0000000, 0.0267500], [0.0000000, 0.3328500], [0.0000000, 0.2567500]], [[0.0000000, 0.4242000], [0.0000000, 0.3787500], [0.0000000, 0.3865000]], [[0.0000000, 0.3032500], [0.0000000, 0.3325500], [0.0000000, 0.1710500]], [[0.0000000, 0.1324000], [0.0000000, 0.2489000], [0.0000000, 0.2410500]], [[0.0000000, 0.0877500], [0.0000000, 0.4679000], [0.0000000, 0.0674000]], [[0.0000000, 0.2182000], [0.0000000, 0.1432000], [0.0000000, 0.3301000]], [[0.0000000, 0.4302500], [0.0000000, 0.4420500], [0.0000000, 0.2810500]], [[0.0000000, 0.0432000], [0.0000000, 0.3132000], [0.0000000, 0.4808000]], [[0.0000000, 0.1346500], [0.0000000, 0.1796000], [0.0000000, 0.2651000]], [[0.0000000, 0.1863500], [0.0000000, 0.3144500], [0.0000000, 0.1019500]], [[0.0000000, 0.2154500], [0.0000000, 0.0428000], [0.0000000, 0.2059500]], [[0.0000000, 0.4597500], [0.0000000, 0.0714000], [0.0000000, 0.4917000]], [[0.0000000, 0.0210000], [0.0000000, 0.2856500], [0.0000000, 0.1232000]], [[0.0000000, 0.4438500], [0.0000000, 0.2428000], [0.0000000, 0.4734000]], [[0.0000000, 0.4314000], [0.2540000, 0.5566500], [0.1414500, 0.2720500]]]]

Expected (Unparsed): [[[[0,0.44285],[0,0.3238],[0.0,0.3578]],[[0,0.20525],[0,0.16575],[0.0,0.1625]],[[0,0.1482],[0,0.26555],[0.0,0.33295]],[[0,0.329],[0,0.4045],[0.0,0.3256]],[[0,0.1205],[0,0.3419],[0.0,0.3876]],[[0,0.0095],[0,0.2159],[0.0,0.32925]],[[0,0.2498],[0,0.398],[0.0,0.0096]],[[0,0.05715],[0,0.4834],[0.0,0.10695]],[[0,0.0963],[0,0.17415],[0.0,0.4784]],[[0,0.41865],[0,0.4316],[0.0,0.112]],[[0,0.204],[0,0.1938],[0.0,0.4566]],[[0,0.1958],[0,0.314],[0.0,0.038]],[[0,0.23325],[0,0.01545],[0.0,0.27875]],[[0,0.0769],[0,0.13005],[0.0,0.0018]],[[0,0.4616],[0,0.21955],[0.0,0.36015]],[[0,0.43315],[0,0.3919],[0.0,0.45415]],[[0,0.2006],[0,0.2691],[0.6337118700000001,0.33275]],[[0,0.02475],[0,0.017],[0.0,0.27305]],[[0,0.10795],[0,0.2841],[0.0,0.2748]],[[0,0.3369],[0,0.0299],[0.020911074999999998,0.1038]],[[0,0.04435],[0,0.26685],[0.0,0.16615]],[[0,0.44945],[0,0.09715],[0.0,0.0231]],[[0,0.09285],[0,0.09805],[0.0,0.04585]],[[0,0.03315],[0,0.20975],[0.0,0.4804]],[[0,0.1037],[0,0.2123],[0.0,0.133]],[[0,0.28305],[0,0.424],[0.0,0.23425]],[[0,0.13915],[0,0.23155],[0.0,0.1357]],[[0,0.38995],[0,0.1086],[0.0,0.40845]],[[0,0.10745],[0,0.06225],[0.414311505,0.4028]],[[0,0.0296],[0,0.1578],[0.0,0.4212]],[[0,0.1169],[0,0.3139],[0.0,0.3784]],[[0,0.4162],[0,0.1665],[0.30940942499999996,0.43395]],[[0,0.4526],[0,0.4979],[0.0,0.20595]],[[0,0.02675],[0,0.33285],[0.0,0.25675]],[[0,0.4242],[0,0.37875],[0.0,0.3865]],[[0,0.30325],[0,0.33255],[0.0,0.17105]],[[0,0.1324],[0,0.2489],[0.0,0.24105]],[[0,0.08775],[0,0.4679],[0.0,0.0674]],[[0,0.2182],[0,0.1432],[0.0,0.3301]],[[0,0.43025],[0,0.44205],[0.0,0.28105]],[[0,0.0432],[0,0.3132],[0.0,0.4808]],[[0,0.13465],[0,0.1796],[0.0,0.2651]],[[0,0.18635],[0,0.31445],[0.0,0.10195]],[[0,0.21545],[0,0.0428],[0.0,0.20595]],[[0,0.45975],[0,0.0714],[0.0,0.4917]],[[0,0.021],[0,0.28565],[0.0,0.1232]],[[0,0.44385],[0,0.2428],[0.0,0.4734]],[[0,0.4314],[0.254,0.55665],[0.14145,0.27205]]]]

Actual:   [[[[0, 0.4429], [0, 0.3238], [0, 0.3578]], [[0, 0.2053], [0, 0.1658], [0, 0.1625]], [[0, 0.1482], [0, 0.2656], [0, 0.333]], [[0, 0.329], [0, 0.4045], [0, 0.3256]], [[0, 0.1205], [0, 0.3419], [0, 0.3876]], [[0, 0.0095], [0, 0.2159], [0, 0.3293]], [[0, 0.2498], [0, 0.398], [0, 0.0096]], [[0, 0.0572], [0, 0.4834], [0, 0.107]], [[0, 0.0963], [0, 0.1742], [0, 0.4784]], [[0, 0.4187], [0, 0.4316], [0, 0.112]], [[0, 0.204], [0, 0.1938], [0, 0.4566]], [[0, 0.1958], [0, 0.314], [0, 0.038]], [[0, 0.2333], [0, 0.0155], [0, 0.2788]], [[0, 0.0769], [0, 0.1301], [0, 0.0018]], [[0, 0.4616], [0, 0.2196], [0, 0.3602]], [[0, 0.4332], [0, 0.3919], [0, 0.4542]], [[0, 0.2006], [0, 0.2691], [0.6338, 0.3328]], [[0, 0.0248], [0, 0.017], [0, 0.2731]], [[0, 0.108], [0, 0.2841], [0, 0.2748]], [[0, 0.3369], [0, 0.0299], [0.021, 0.1038]], [[0, 0.0444], [0, 0.2669], [0, 0.1662]], [[0, 0.4495], [0, 0.0972], [0, 0.0231]], [[0, 0.0929], [0, 0.0981], [0, 0.0459]], [[0, 0.0332], [0, 0.2098], [0, 0.4804]], [[0, 0.1037], [0, 0.2123], [0, 0.133]], [[0, 0.2831], [0, 0.424], [0, 0.2343]], [[0, 0.1392], [0, 0.2316], [0, 0.1357]], [[0, 0.39], [0, 0.1086], [0, 0.4085]], [[0, 0.1075], [0, 0.0623], [0.4144, 0.4028]], [[0, 0.0296], [0, 0.1578], [0, 0.4212]], [[0, 0.1169], [0, 0.3139], [0, 0.3784]], [[0, 0.4162], [0, 0.1665], [0.3095, 0.434]], [[0, 0.4526], [0, 0.4979], [0, 0.206]], [[0, 0.0268], [0, 0.3329], [0, 0.2568]], [[0, 0.4242], [0, 0.3788], [0, 0.3865]], [[0, 0.3033], [0, 0.3326], [0, 0.1711]], [[0, 0.1324], [0, 0.2489], [0, 0.2411]], [[0, 0.0878], [0, 0.4679], [0, 0.0674]], [[0, 0.2182], [0, 0.1432], [0, 0.3301]], [[0, 0.4303], [0, 0.4421], [0, 0.2811]], [[0, 0.0432], [0, 0.3132], [0, 0.4808]], [[0, 0.1347], [0, 0.1796], [0, 0.2651]], [[0, 0.1864], [0, 0.3145], [0, 0.102]], [[0, 0.2155], [0, 0.0428], [0, 0.206]], [[0, 0.4598], [0, 0.0714], [0, 0.4917]], [[0, 0.021], [0, 0.2857], [0, 0.1232]], [[0, 0.4439], [0, 0.2428], [0, 0.4734]], [[0, 0.4314], [0.254, 0.5567], [0.1415, 0.2721]]]]

Expected: [[[[0, 0.4429], [0, 0.3238], [0, 0.3578]], [[0, 0.2053], [0, 0.1658], [0, 0.1625]], [[0, 0.1482], [0, 0.2656], [0, 0.333]], [[0, 0.329], [0, 0.4045], [0, 0.3256]], [[0, 0.1205], [0, 0.3419], [0, 0.3876]], [[0, 0.0095], [0, 0.2159], [0, 0.3293]], [[0, 0.2498], [0, 0.398], [0, 0.0096]], [[0, 0.0572], [0, 0.4834], [0, 0.107]], [[0, 0.0963], [0, 0.1742], [0, 0.4784]], [[0, 0.4187], [0, 0.4316], [0, 0.112]], [[0, 0.204], [0, 0.1938], [0, 0.4566]], [[0, 0.1958], [0, 0.314], [0, 0.038]], [[0, 0.2333], [0, 0.0155], [0, 0.2788]], [[0, 0.0769], [0, 0.1301], [0, 0.0018]], [[0, 0.4616], [0, 0.2196], [0, 0.3602]], [[0, 0.4332], [0, 0.3919], [0, 0.4542]], [[0, 0.2006], [0, 0.2691], [0.6338, 0.3328]], [[0, 0.0248], [0, 0.017], [0, 0.2731]], [[0, 0.108], [0, 0.2841], [0, 0.2748]], [[0, 0.3369], [0, 0.0299], [0.021, 0.1038]], [[0, 0.0444], [0, 0.2669], [0, 0.1662]], [[0, 0.4495], [0, 0.0972], [0, 0.0231]], [[0, 0.0929], [0, 0.0981], [0, 0.0459]], [[0, 0.0332], [0, 0.2098], [0, 0.4804]], [[0, 0.1037], [0, 0.2123], [0, 0.133]], [[0, 0.2831], [0, 0.424], [0, 0.2343]], [[0, 0.1392], [0, 0.2316], [0, 0.1357]], [[0, 0.39], [0, 0.1086], [0, 0.4085]], [[0, 0.1075], [0, 0.0623], [0.4144, 0.4028]], [[0, 0.0296], [0, 0.1578], [0, 0.4212]], [[0, 0.1169], [0, 0.3139], [0, 0.3784]], [[0, 0.4162], [0, 0.1665], [0.3095, 0.434]], [[0, 0.4526], [0, 0.4979], [0, 0.206]], [[0, 0.0268], [0, 0.3329], [0, 0.2568]], [[0, 0.4242], [0, 0.3788], [0, 0.3865]], [[0, 0.3033], [0, 0.3326], [0, 0.1711]], [[0, 0.1324], [0, 0.2489], [0, 0.2411]], [[0, 0.0878], [0, 0.4679], [0, 0.0674]], [[0, 0.2182], [0, 0.1432], [0, 0.3301]], [[0, 0.4303], [0, 0.4421], [0, 0.2811]], [[0, 0.0432], [0, 0.3132], [0, 0.4808]], [[0, 0.1347], [0, 0.1796], [0, 0.2651]], [[0, 0.1864], [0, 0.3145], [0, 0.102]], [[0, 0.2155], [0, 0.0428], [0, 0.206]], [[0, 0.4598], [0, 0.0714], [0, 0.4917]], [[0, 0.021], [0, 0.2857], [0, 0.1232]], [[0, 0.4439], [0, 0.2428], [0, 0.4734]], [[0, 0.4314], [0.254, 0.5567], [0.1415, 0.2721]]]]