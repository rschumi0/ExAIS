import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Zer35731 = tf.keras.layers.Input(shape=([4, 2, 3]))

Zer35731 = keras.layers.ZeroPadding2D(padding=((1, 1), (1, 1)), name = 'Zer35731', )(in0Zer35731)
Thr20523 = keras.layers.ThresholdedReLU(theta=3.818678618246758, name = 'Thr20523', )(Zer35731)
model = tf.keras.models.Model(inputs=[in0Zer35731], outputs=Thr20523)
in0Zer35731 = tf.constant([[[[1.8862, 1.386, 1.9364], [1.9675, 1.6641, 1.8175]], [[1.3885, 1.0556, 1.7703], [1.9851, 1.3088, 1.977]], [[1.9379, 1.7484, 1.3947], [1.9879, 1.9017, 1.0436]], [[1.7802, 1.8853, 1.8319], [1.1591, 1.1148, 1.4292]]]])
print (np.array2string(model.predict([in0Zer35731],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Thr20523.png')

LZer35731 = zero_padding2D_layer([[[[1.8862, 1.386, 1.9364], [1.9675, 1.6641, 1.8175]], [[1.3885, 1.0556, 1.7703], [1.9851, 1.3088, 1.977]], [[1.9379, 1.7484, 1.3947], [1.9879, 1.9017, 1.0436]], [[1.7802, 1.8853, 1.8319], [1.1591, 1.1148, 1.4292]]]], 1, 1, 1, 1, Zer35731), 
LThr20523 = thresholded_relu_layer(Zer35731, 3.818678618246758, Thr20523), 
exec_layers([LZer35731,LThr20523],["Zer35731","Thr20523"],Thr20523,"Thr20523")

Actual (Unparsed): [[[[0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000]], [[0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000]], [[0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000]], [[0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000]], [[0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000]], [[0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000]]]]

Expected (Unparsed): [[[[0,0,0],[0,0,0],[0,0,0],[0,0,0]],[[0,0,0],[0,0,0],[0,0,0],[0,0,0]],[[0,0,0],[0,0,0],[0,0,0],[0,0,0]],[[0,0,0],[0,0,0],[0,0,0],[0,0,0]],[[0,0,0],[0,0,0],[0,0,0],[0,0,0]],[[0,0,0],[0,0,0],[0,0,0],[0,0,0]]]]

Actual:   [[[[0, 0, 0], [0, 0, 0], [0, 0, 0], [0, 0, 0]], [[0, 0, 0], [0, 0, 0], [0, 0, 0], [0, 0, 0]], [[0, 0, 0], [0, 0, 0], [0, 0, 0], [0, 0, 0]], [[0, 0, 0], [0, 0, 0], [0, 0, 0], [0, 0, 0]], [[0, 0, 0], [0, 0, 0], [0, 0, 0], [0, 0, 0]], [[0, 0, 0], [0, 0, 0], [0, 0, 0], [0, 0, 0]]]]

Expected: [[[[0, 0, 0], [0, 0, 0], [0, 0, 0], [0, 0, 0]], [[0, 0, 0], [0, 0, 0], [0, 0, 0], [0, 0, 0]], [[0, 0, 0], [0, 0, 0], [0, 0, 0], [0, 0, 0]], [[0, 0, 0], [0, 0, 0], [0, 0, 0], [0, 0, 0]], [[0, 0, 0], [0, 0, 0], [0, 0, 0], [0, 0, 0]], [[0, 0, 0], [0, 0, 0], [0, 0, 0], [0, 0, 0]]]]