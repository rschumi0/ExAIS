import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Ave43684 = tf.keras.layers.Input(shape=([2, 2]))
in1Ave43684 = tf.keras.layers.Input(shape=([2, 2]))
in0Ave21976 = tf.keras.layers.Input(shape=([1, 2]))
in1Ave21976 = tf.keras.layers.Input(shape=([1, 2]))
in0Cro48046 = tf.keras.layers.Input(shape=([4, 1]))
in0Con13103 = tf.keras.layers.Input(shape=([2, 1]))
in0Bat24856 = tf.keras.layers.Input(shape=([1]))
in0Con95335 = tf.keras.layers.Input(shape=([3]))

Ave43684 = keras.layers.Average(name = 'Ave43684', )([in0Ave43684,in1Ave43684])
Ave21976 = keras.layers.Average(name = 'Ave21976', )([in0Ave21976,in1Ave21976])
Zer4352 = keras.layers.ZeroPadding1D(padding=((1, 0)), name = 'Zer4352', )(Ave21976)
Ave9990 = keras.layers.Average(name = 'Ave9990', )([Ave43684,Zer4352])
Cro48046 = keras.layers.Cropping1D(cropping=((1, 1)), name = 'Cro48046', )(in0Cro48046)
Con13103 = keras.layers.Concatenate(axis=2, name = 'Con13103', )([Cro48046,in0Con13103])
Min89002 = keras.layers.Minimum(name = 'Min89002', )([Ave9990,Con13103])
Fla26351 = keras.layers.Flatten(name = 'Fla26351', )(Min89002)
Bat24856 = keras.layers.BatchNormalization(axis=1, epsilon=0.6160030618138781,  name = 'Bat24856', )(in0Bat24856)
Con95335 = keras.layers.Concatenate(axis=1, name = 'Con95335', )([Bat24856,in0Con95335])
Mul63628 = keras.layers.Multiply(name = 'Mul63628', )([Fla26351,Con95335])
model = tf.keras.models.Model(inputs=[in0Ave43684,in1Ave43684,in0Ave21976,in1Ave21976,in0Cro48046,in0Con13103,in0Bat24856,in0Con95335], outputs=Mul63628)
w = model.get_layer('Bat24856').get_weights() 
w[0] = np.array([0.1213])
w[1] = np.array([0.677])
w[2] = np.array([0.2742])
w[3] = np.array([0.5283])
model.get_layer('Bat24856').set_weights(w) 
in0Ave43684 = tf.constant([[[0.6431, 0.0159], [0.4987, 0.3203]]])
in1Ave43684 = tf.constant([[[0.8121, 0.8134], [0.2835, 0.3615]]])
in0Ave21976 = tf.constant([[[0.8706, 0.349]]])
in1Ave21976 = tf.constant([[[0.6742, 0.3992]]])
in0Cro48046 = tf.constant([[[1.3805], [1.0695], [1.663], [1.6304]]])
in0Con13103 = tf.constant([[[0.9824], [0.8617]]])
in0Bat24856 = tf.constant([[1.5178]])
in0Con95335 = tf.constant([[0.4521, 0.5651, 0.7113]])
print (np.array2string(model.predict([in0Ave43684,in1Ave43684,in0Ave21976,in1Ave21976,in0Cro48046,in0Con13103,in0Bat24856,in0Con95335],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Mul63628.png')

LAve43684 = average_layer([[[[0.6431, 0.0159], [0.4987, 0.3203]]], [[[0.8121, 0.8134], [0.2835, 0.3615]]]], Ave43684), 
LAve21976 = average_layer([[[[0.8706, 0.349]]], [[[0.6742, 0.3992]]]], Ave21976), 
LZer4352 = zero_padding1D_layer(Ave21976, 1, 0, Zer4352), 
LAve9990 = average_layer([Ave43684,Zer4352], Ave9990), 
LCro48046 = cropping1D_layer([[[1.3805], [1.0695], [1.663], [1.6304]]], 1, 1, Cro48046), 
LCon13103 = concatenate_layer([Cro48046,[[[0.9824], [0.8617]]]], 2, Con13103), 
LMin89002 = minimum_layer([Ave9990,Con13103], Min89002), 
LFla26351 = flatten_layer(Min89002, Fla26351), 
LBat24856 = batch_normalization_layer([[1.5178]], 1, 0.6160030618138781, [0.1213], [0.677], [0.2742], [0.5283], Bat24856), 
LCon95335 = concatenate_layer([Bat24856,[[0.4521, 0.5651, 0.7113]]], 1, Con95335), 
LMul63628 = multiply_layer([Fla26351,Con95335], Mul63628), 
exec_layers([LAve43684,LAve21976,LZer4352,LAve9990,LCro48046,LCon13103,LMin89002,LFla26351,LBat24856,LCon95335,LMul63628],["Ave43684","Ave21976","Zer4352","Ave9990","Cro48046","Con13103","Min89002","Fla26351","Bat24856","Con95335","Mul63628"],Mul63628,"Mul63628")

Actual (Unparsed): [[0.2975945, 0.0937316, 0.3287469, 0.2542898]]

Expected (Unparsed): [[0.2975945270721705,0.09373163250000001,0.328746925,0.25428975]]

Actual:   [[0.2976, 0.0938, 0.3288, 0.2543]]

Expected: [[0.2976, 0.0938, 0.3288, 0.2543]]