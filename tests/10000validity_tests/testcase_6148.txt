import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Ave77331 = tf.keras.layers.Input(shape=([1, 1]))
in1Ave77331 = tf.keras.layers.Input(shape=([1, 1]))

Ave77331 = keras.layers.Average(name = 'Ave77331', )([in0Ave77331,in1Ave77331])
Res1131 = keras.layers.Reshape((1, 1, 1), name = 'Res1131', )(Ave77331)
Up_52991 = keras.layers.UpSampling2D(size=(1, 1), name = 'Up_52991', )(Res1131)
Dep31734 = keras.layers.DepthwiseConv2D((1, 1),strides=(1, 1), padding='valid', name = 'Dep31734', )(Up_52991)
model = tf.keras.models.Model(inputs=[in0Ave77331,in1Ave77331], outputs=Dep31734)
w = model.get_layer('Dep31734').get_weights() 
w[0] = np.array([[[[0.5728]]]])
w[1] = np.array([0])
model.get_layer('Dep31734').set_weights(w) 
in0Ave77331 = tf.constant([[[0.3601]]])
in1Ave77331 = tf.constant([[[0.8304]]])
print (np.array2string(model.predict([in0Ave77331,in1Ave77331],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Dep31734.png')

LAve77331 = average_layer([[[[0.3601]]], [[[0.8304]]]], Ave77331), 
LRes1131 = reshape_layer(Ave77331, [1, 1, 1], Res1131), 
LUp_52991 = up_sampling2D_layer(Res1131, 1, 1, Up_52991), 
LDep31734 = depthwise_conv2D_layer(Up_52991, 1, 1,[[[[0.5728]]]],[0], 1, 1, false, Dep31734), 
exec_layers([LAve77331,LRes1131,LUp_52991,LDep31734],["Ave77331","Res1131","Up_52991","Dep31734"],Dep31734,"Dep31734")

Actual (Unparsed): [[[[0.3409592]]]]

Expected (Unparsed): [[[[0.3409592]]]]

Actual:   [[[[0.341]]]]

Expected: [[[[0.341]]]]