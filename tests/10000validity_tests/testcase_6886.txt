import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Min77289 = tf.keras.layers.Input(shape=([1, 1]))
in1Min77289 = tf.keras.layers.Input(shape=([1, 1]))
in0Con40644 = tf.keras.layers.Input(shape=([2]))
in0Zer79361 = tf.keras.layers.Input(shape=([1, 1, 1]))
in0Con2590 = tf.keras.layers.Input(shape=([3, 1, 3, 2]))
in0Con29728 = tf.keras.layers.Input(shape=([1, 1, 1]))

Min77289 = keras.layers.Minimum(name = 'Min77289', )([in0Min77289,in1Min77289])
Fla42632 = keras.layers.Flatten(name = 'Fla42632', )(Min77289)
Con40644 = keras.layers.Concatenate(axis=1, name = 'Con40644', )([Fla42632,in0Con40644])
Zer79361 = keras.layers.ZeroPadding2D(padding=((1, 1), (1, 1)), name = 'Zer79361', )(in0Zer79361)
Res93848 = keras.layers.Reshape((3, 3), name = 'Res93848', )(Zer79361)
GRU91550 = keras.layers.GRU(3,reset_after=False, recurrent_activation='sigmoid', name = 'GRU91550', )(Res93848)
Ave66003 = keras.layers.Average(name = 'Ave66003', )([Con40644,GRU91550])
Res65083 = keras.layers.Reshape((3, 1), name = 'Res65083', )(Ave66003)
Res87741 = keras.layers.Reshape((3, 1, 1), name = 'Res87741', )(Res65083)
Res59982 = keras.layers.Reshape((3, 1, 1, 1), name = 'Res59982', )(Res87741)
Zer47111 = keras.layers.ZeroPadding3D(padding=((0, 0), (0, 0), (2, 0)), name = 'Zer47111', )(Res59982)
Con2590 = keras.layers.Concatenate(axis=4, name = 'Con2590', )([Zer47111,in0Con2590])
Con29728 = keras.layers.Conv2D(2, (1, 1),strides=(6, 1), padding='same', dilation_rate=(1, 1), name = 'Con29728', )(in0Con29728)
Res97429 = keras.layers.Reshape((1, 1, 2, 1), name = 'Res97429', )(Con29728)
Con36830 = keras.layers.Conv3DTranspose(3, (1, 1, 1),strides=(1, 1, 1), padding='same', name = 'Con36830', )(Res97429)
Zer32176 = keras.layers.ZeroPadding3D(padding=((2, 0), (0, 0), (1, 0)), name = 'Zer32176', )(Con36830)
Max49764 = keras.layers.Maximum(name = 'Max49764', )([Con2590,Zer32176])
model = tf.keras.models.Model(inputs=[in0Min77289,in1Min77289,in0Con40644,in0Zer79361,in0Con2590,in0Con29728], outputs=Max49764)
w = model.get_layer('GRU91550').get_weights() 
w[0] = np.array([[4, 8, 3, 10, 4, 7, 4, 8, 7], [9, 5, 5, 2, 7, 7, 4, 8, 9], [7, 5, 1, 5, 7, 10, 8, 7, 5]])
w[1] = np.array([[3, 7, 1, 2, 9, 3, 4, 4, 8], [9, 3, 6, 6, 9, 2, 6, 6, 4], [9, 3, 2, 3, 5, 3, 5, 3, 4]])
w[2] = np.array([8, 3, 1, 4, 6, 2, 9, 6, 2])
model.get_layer('GRU91550').set_weights(w) 
w = model.get_layer('Con29728').get_weights() 
w[0] = np.array([[[[0.8414, 0.2367]]]])
w[1] = np.array([0, 0])
model.get_layer('Con29728').set_weights(w) 
w = model.get_layer('Con36830').get_weights() 
w[0] = np.array([[[[[0.6341], [0.6045], [0.2567]]]]])
w[1] = np.array([0, 0, 0])
model.get_layer('Con36830').set_weights(w) 
in0Min77289 = tf.constant([[[0.6309]]])
in1Min77289 = tf.constant([[[0.115]]])
in0Con40644 = tf.constant([[0.6033, 0.5985]])
in0Zer79361 = tf.constant([[[[1.6516]]]])
in0Con2590 = tf.constant([[[[[0.1021, 0.4942], [0.063, 0.1692], [0.1521, 0.4196]]], [[[0.3891, 0.5762], [0.3706, 0.5305], [0.0379, 0.1784]]], [[[0.0259, 0.4239], [0.7647, 0.6946], [0.4052, 0.838]]]]])
in0Con29728 = tf.constant([[[[0.2808]]]])
print (np.array2string(model.predict([in0Min77289,in1Min77289,in0Con40644,in0Zer79361,in0Con2590,in0Con29728],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Max49764.png')

LMin77289 = minimum_layer([[[[0.6309]]], [[[0.115]]]], Min77289), 
LFla42632 = flatten_layer(Min77289, Fla42632), 
LCon40644 = concatenate_layer([Fla42632,[[0.6033, 0.5985]]], 1, Con40644), 
LZer79361 = zero_padding2D_layer([[[[1.6516]]]], 1, 1, 1, 1, Zer79361), 
LRes93848 = reshape_layer(Zer79361, [3, 3], Res93848), 
LGRU91550 = gru_layer(Res93848,[[4, 8, 3, 10, 4, 7, 4, 8, 7], [9, 5, 5, 2, 7, 7, 4, 8, 9], [7, 5, 1, 5, 7, 10, 8, 7, 5]],[[3, 7, 1, 2, 9, 3, 4, 4, 8], [9, 3, 6, 6, 9, 2, 6, 6, 4], [9, 3, 2, 3, 5, 3, 5, 3, 4]],[8, 3, 1, 4, 6, 2, 9, 6, 2], false, GRU91550), 
LAve66003 = average_layer([Con40644,GRU91550], Ave66003), 
LRes65083 = reshape_layer(Ave66003, [3, 1], Res65083), 
LRes87741 = reshape_layer(Res65083, [3, 1, 1], Res87741), 
LRes59982 = reshape_layer(Res87741, [3, 1, 1, 1], Res59982), 
LZer47111 = zero_padding3D_layer(Res59982, 0, 0, 0, 0, 2, 0, Zer47111), 
LCon2590 = concatenate_layer([Zer47111,[[[[[0.1021, 0.4942], [0.063, 0.1692], [0.1521, 0.4196]]], [[[0.3891, 0.5762], [0.3706, 0.5305], [0.0379, 0.1784]]], [[[0.0259, 0.4239], [0.7647, 0.6946], [0.4052, 0.838]]]]]], 4, Con2590), 
LCon29728 = conv2D_layer([[[[0.2808]]]], 1, 1,[[[[0.8414, 0.2367]]]],[0, 0], 6, 1, true, 1, 1, Con29728), 
LRes97429 = reshape_layer(Con29728, [1, 1, 2, 1], Res97429), 
LCon36830 = conv3D_transpose_layer(Res97429, 1, 1, 1,[[[[[0.6341], [0.6045], [0.2567]]]]],[0, 0, 0], 1, 1, 1, true, Con36830), 
LZer32176 = zero_padding3D_layer(Con36830, 2, 0, 0, 0, 1, 0, Zer32176), 
LMax49764 = maximum_layer([Con2590,Zer32176], Max49764), 
exec_layers([LMin77289,LFla42632,LCon40644,LZer79361,LRes93848,LGRU91550,LAve66003,LRes65083,LRes87741,LRes59982,LZer47111,LCon2590,LCon29728,LRes97429,LCon36830,LZer32176,LMax49764],["Min77289","Fla42632","Con40644","Zer79361","Res93848","GRU91550","Ave66003","Res65083","Res87741","Res59982","Zer47111","Con2590","Con29728","Res97429","Con36830","Zer32176","Max49764"],Max49764,"Max49764")

Actual (Unparsed): [[[[[0.0000000, 0.1021000, 0.4942000], [0.0000000, 0.0630000, 0.1692000], [0.0576783, 0.1521000, 0.4196000]]], [[[0.0000000, 0.3891000, 0.5762000], [0.0000000, 0.3706000, 0.5305000], [0.3346082, 0.0379000, 0.1784000]]], [[[0.0000000, 0.0259000, 0.4239000], [0.1498157, 0.7647000, 0.6946000], [0.4810287, 0.4052000, 0.8380000]]]]]

Expected (Unparsed): [[[[[0,0.1021,0.4942],[0,0.063,0.1692],[0.057678270697300874,0.1521,0.4196]]],[[[0,0.3891,0.5762],[0,0.3706,0.5305],[0.3346082433889522,0.0379,0.1784]]],[[[0,0.0259,0.4239],[0.149815712592,0.7647,0.6946],[0.481028655590922,0.4052,0.838]]]]]

Actual:   [[[[[0, 0.1021, 0.4942], [0, 0.063, 0.1692], [0.0577, 0.1521, 0.4196]]], [[[0, 0.3891, 0.5762], [0, 0.3706, 0.5305], [0.3347, 0.0379, 0.1784]]], [[[0, 0.0259, 0.4239], [0.1499, 0.7647, 0.6946], [0.4811, 0.4052, 0.838]]]]]

Expected: [[[[[0, 0.1021, 0.4942], [0, 0.063, 0.1692], [0.0577, 0.1521, 0.4196]]], [[[0, 0.3891, 0.5762], [0, 0.3706, 0.5305], [0.3347, 0.0379, 0.1784]]], [[[0, 0.0259, 0.4239], [0.1499, 0.7647, 0.6946], [0.4811, 0.4052, 0.838]]]]]