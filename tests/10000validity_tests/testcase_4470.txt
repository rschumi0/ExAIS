import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Glo76353 = tf.keras.layers.Input(shape=([2, 2, 1]))
in0Con20359 = tf.keras.layers.Input(shape=([3, 3, 3, 2]))
in0Sub57850 = tf.keras.layers.Input(shape=([3, 3, 3, 3]))
in1Sub57850 = tf.keras.layers.Input(shape=([3, 3, 3, 3]))

Glo76353 = keras.layers.GlobalMaxPool2D(name = 'Glo76353', )(in0Glo76353)
Res14858 = keras.layers.Reshape((1, 1), name = 'Res14858', )(Glo76353)
Res18403 = keras.layers.Reshape((1, 1, 1), name = 'Res18403', )(Res14858)
Res42032 = keras.layers.Reshape((1, 1, 1, 1), name = 'Res42032', )(Res18403)
Zer83272 = keras.layers.ZeroPadding3D(padding=((2, 0), (2, 0), (2, 0)), name = 'Zer83272', )(Res42032)
Con20359 = keras.layers.Concatenate(axis=4, name = 'Con20359', )([Zer83272,in0Con20359])
Sub57850 = keras.layers.Subtract(name = 'Sub57850', )([in0Sub57850,in1Sub57850])
Sub69285 = keras.layers.Subtract(name = 'Sub69285', )([Con20359,Sub57850])
Res29104 = keras.layers.Reshape((3, 3, 9), name = 'Res29104', )(Sub69285)
Res35679 = keras.layers.Reshape((3, 27), name = 'Res35679', )(Res29104)
GRU83739 = keras.layers.GRU(1,reset_after=True, recurrent_activation='sigmoid', name = 'GRU83739', )(Res35679)
model = tf.keras.models.Model(inputs=[in0Glo76353,in0Con20359,in0Sub57850,in1Sub57850], outputs=GRU83739)
w = model.get_layer('GRU83739').get_weights() 
w[0] = np.array([[8, 7, 4], [1, 7, 4], [4, 1, 1], [4, 3, 5], [10, 7, 9], [9, 4, 3], [4, 8, 4], [2, 4, 2], [10, 5, 10], [1, 2, 4], [9, 10, 2], [5, 1, 1], [8, 7, 8], [5, 3, 9], [6, 4, 10], [1, 6, 7], [9, 4, 6], [5, 9, 6], [1, 3, 5], [6, 8, 5], [1, 6, 1], [10, 6, 7], [6, 7, 4], [3, 5, 10], [7, 3, 5], [9, 3, 10], [7, 10, 3]])
w[1] = np.array([[7, 6, 7]])
w[2] = np.array([[4, 7, 4], [2, 3, 10]])
model.get_layer('GRU83739').set_weights(w) 
in0Glo76353 = tf.constant([[[[1.1005], [1.9474]], [[1.5533], [1.6313]]]])
in0Con20359 = tf.constant([[[[[0.6437, 0.9924], [0.7447, 0.8976], [0.2882, 0.4636]], [[0.0014, 0.5098], [0.6347, 0.7209], [0.5247, 0.528]], [[0.1622, 0.1212], [0.6309, 0.6957], [0.1741, 0.7028]]], [[[0.0147, 0.2061], [0.259, 0.5385], [0.9152, 0.8775]], [[0.0247, 0.3649], [0.7124, 0.2143], [0.7748, 0.2841]], [[0.7289, 0.731], [0.1146, 0.1605], [0.1627, 0.6949]]], [[[0.6972, 0.3151], [0.6232, 0.8768], [0.4486, 0.2588]], [[0.7045, 0.9913], [0.65, 0.4986], [0.3912, 0.2543]], [[0.1946, 0.903], [0.8665, 0.8885], [0.1871, 0.7168]]]]])
in0Sub57850 = tf.constant([[[[[0.079, 0.3595, 0.3217], [0.1745, 0.0283, 0.2011], [0.928, 0.0595, 0.0623]], [[0.913, 0.3355, 0.5688], [0.6616, 0.0799, 0.8762], [0.9855, 0.35, 0.3054]], [[0.0264, 0.1978, 0.9793], [0.4707, 0.8715, 0.9434], [0.2344, 0.7072, 0.9045]]], [[[0.1961, 0.3534, 0.3919], [0.9415, 0.5688, 0.2086], [0.4846, 0.3632, 0.5016]], [[0.8384, 0.5639, 0.594], [0.4397, 0.234, 0.9918], [0.7155, 0.1645, 0.6913]], [[0.7385, 0.3794, 0.9337], [0.3171, 0.5324, 0.7295], [0.1147, 0.3427, 0.1672]]], [[[0.8759, 0.5459, 0.7444], [0.9914, 0.5712, 0.9524], [0.2939, 0.836, 0.1311]], [[0.3572, 0.5714, 0.8928], [0.3166, 0.5797, 0.6604], [0.3467, 0.8459, 0.5953]], [[0.2146, 0.8867, 0.4419], [0.7386, 0.3366, 0.5727], [0.8365, 0.4793, 0.2435]]]]])
in1Sub57850 = tf.constant([[[[[0.9188, 0.9522, 0.7724], [0.0025, 0.4691, 0.5578], [0.7893, 0.7211, 0.5882]], [[0.0596, 0.1765, 0.4463], [0.6657, 0.7257, 0.8525], [0.6891, 0.4448, 0.5701]], [[0.7559, 0.9254, 0.7209], [0.3213, 0.888, 0.6474], [0.2329, 0.3898, 0.4538]]], [[[0.5376, 0.1672, 0.5138], [0.8999, 0.123, 0.3325], [0.8101, 0.1707, 0.8261]], [[0.7252, 0.2866, 0.5622], [0.6792, 0.9038, 0.4832], [0.1372, 0.0906, 0.3169]], [[0.8007, 0.7851, 0.9595], [0.4887, 0.2463, 0.6594], [0.1271, 0.7558, 0.7834]]], [[[0.9052, 0.6163, 0.0716], [0.2061, 0.3021, 0.3695], [0.2432, 0.4738, 0.691]], [[0.2205, 0.8561, 0.7438], [0.8264, 0.6544, 0.0498], [0.9134, 0.6043, 0.5007]], [[0.2591, 0.349, 0.4482], [0.0836, 0.0112, 0.6152], [0.0098, 0.5089, 0.877]]]]])
print (np.array2string(model.predict([in0Glo76353,in0Con20359,in0Sub57850,in1Sub57850],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='GRU83739.png')

LGlo76353 = global_max_pool2D_layer([[[[1.1005], [1.9474]], [[1.5533], [1.6313]]]], Glo76353), 
LRes14858 = reshape_layer(Glo76353, [1, 1], Res14858), 
LRes18403 = reshape_layer(Res14858, [1, 1, 1], Res18403), 
LRes42032 = reshape_layer(Res18403, [1, 1, 1, 1], Res42032), 
LZer83272 = zero_padding3D_layer(Res42032, 2, 0, 2, 0, 2, 0, Zer83272), 
LCon20359 = concatenate_layer([Zer83272,[[[[[0.6437, 0.9924], [0.7447, 0.8976], [0.2882, 0.4636]], [[0.0014, 0.5098], [0.6347, 0.7209], [0.5247, 0.528]], [[0.1622, 0.1212], [0.6309, 0.6957], [0.1741, 0.7028]]], [[[0.0147, 0.2061], [0.259, 0.5385], [0.9152, 0.8775]], [[0.0247, 0.3649], [0.7124, 0.2143], [0.7748, 0.2841]], [[0.7289, 0.731], [0.1146, 0.1605], [0.1627, 0.6949]]], [[[0.6972, 0.3151], [0.6232, 0.8768], [0.4486, 0.2588]], [[0.7045, 0.9913], [0.65, 0.4986], [0.3912, 0.2543]], [[0.1946, 0.903], [0.8665, 0.8885], [0.1871, 0.7168]]]]]], 4, Con20359), 
LSub57850 = subtract_layer([[[[[0.079, 0.3595, 0.3217], [0.1745, 0.0283, 0.2011], [0.928, 0.0595, 0.0623]], [[0.913, 0.3355, 0.5688], [0.6616, 0.0799, 0.8762], [0.9855, 0.35, 0.3054]], [[0.0264, 0.1978, 0.9793], [0.4707, 0.8715, 0.9434], [0.2344, 0.7072, 0.9045]]], [[[0.1961, 0.3534, 0.3919], [0.9415, 0.5688, 0.2086], [0.4846, 0.3632, 0.5016]], [[0.8384, 0.5639, 0.594], [0.4397, 0.234, 0.9918], [0.7155, 0.1645, 0.6913]], [[0.7385, 0.3794, 0.9337], [0.3171, 0.5324, 0.7295], [0.1147, 0.3427, 0.1672]]], [[[0.8759, 0.5459, 0.7444], [0.9914, 0.5712, 0.9524], [0.2939, 0.836, 0.1311]], [[0.3572, 0.5714, 0.8928], [0.3166, 0.5797, 0.6604], [0.3467, 0.8459, 0.5953]], [[0.2146, 0.8867, 0.4419], [0.7386, 0.3366, 0.5727], [0.8365, 0.4793, 0.2435]]]]], [[[[[0.9188, 0.9522, 0.7724], [0.0025, 0.4691, 0.5578], [0.7893, 0.7211, 0.5882]], [[0.0596, 0.1765, 0.4463], [0.6657, 0.7257, 0.8525], [0.6891, 0.4448, 0.5701]], [[0.7559, 0.9254, 0.7209], [0.3213, 0.888, 0.6474], [0.2329, 0.3898, 0.4538]]], [[[0.5376, 0.1672, 0.5138], [0.8999, 0.123, 0.3325], [0.8101, 0.1707, 0.8261]], [[0.7252, 0.2866, 0.5622], [0.6792, 0.9038, 0.4832], [0.1372, 0.0906, 0.3169]], [[0.8007, 0.7851, 0.9595], [0.4887, 0.2463, 0.6594], [0.1271, 0.7558, 0.7834]]], [[[0.9052, 0.6163, 0.0716], [0.2061, 0.3021, 0.3695], [0.2432, 0.4738, 0.691]], [[0.2205, 0.8561, 0.7438], [0.8264, 0.6544, 0.0498], [0.9134, 0.6043, 0.5007]], [[0.2591, 0.349, 0.4482], [0.0836, 0.0112, 0.6152], [0.0098, 0.5089, 0.877]]]]], Sub57850), 
LSub69285 = subtract_layer(Con20359,Sub57850, Sub69285), 
LRes29104 = reshape_layer(Sub69285, [3, 3, 9], Res29104), 
LRes35679 = reshape_layer(Res29104, [3, 27], Res35679), 
LGRU83739 = gru_layer(Res35679,[[8, 7, 4], [1, 7, 4], [4, 1, 1], [4, 3, 5], [10, 7, 9], [9, 4, 3], [4, 8, 4], [2, 4, 2], [10, 5, 10], [1, 2, 4], [9, 10, 2], [5, 1, 1], [8, 7, 8], [5, 3, 9], [6, 4, 10], [1, 6, 7], [9, 4, 6], [5, 9, 6], [1, 3, 5], [6, 8, 5], [1, 6, 1], [10, 6, 7], [6, 7, 4], [3, 5, 10], [7, 3, 5], [9, 3, 10], [7, 10, 3]],[[7, 6, 7]],[[4, 7, 4], [2, 3, 10]], true, GRU83739), 
exec_layers([LGlo76353,LRes14858,LRes18403,LRes42032,LZer83272,LCon20359,LSub57850,LSub69285,LRes29104,LRes35679,LGRU83739],["Glo76353","Res14858","Res18403","Res42032","Zer83272","Con20359","Sub57850","Sub69285","Res29104","Res35679","GRU83739"],GRU83739,"GRU83739")

Actual (Unparsed): [[0.0000000]]

Expected (Unparsed): [[0.0]]

Actual:   [[0]]

Expected: [[0]]