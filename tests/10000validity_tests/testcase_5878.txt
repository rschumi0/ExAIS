import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Glo85555 = tf.keras.layers.Input(shape=([2, 1, 1, 1]))

Glo85555 = keras.layers.GlobalAveragePooling3D(name = 'Glo85555', )(in0Glo85555)
Res58332 = keras.layers.Reshape((1, 1), name = 'Res58332', )(Glo85555)
Res65842 = keras.layers.Reshape((1, 1, 1), name = 'Res65842', )(Res58332)
Res75756 = keras.layers.Reshape((1, 1, 1, 1), name = 'Res75756', )(Res65842)
Up_85073 = keras.layers.UpSampling3D(size=(2, 1, 2), name = 'Up_85073', )(Res75756)
model = tf.keras.models.Model(inputs=[in0Glo85555], outputs=Up_85073)
in0Glo85555 = tf.constant([[[[[1.236]]], [[[1.5046]]]]])
print (np.array2string(model.predict([in0Glo85555],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Up_85073.png')

LGlo85555 = global_average_pooling3D_layer([[[[[1.236]]], [[[1.5046]]]]], Glo85555), 
LRes58332 = reshape_layer(Glo85555, [1, 1], Res58332), 
LRes65842 = reshape_layer(Res58332, [1, 1, 1], Res65842), 
LRes75756 = reshape_layer(Res65842, [1, 1, 1, 1], Res75756), 
LUp_85073 = up_sampling3D_layer(Res75756, 2, 1, 2, Up_85073), 
exec_layers([LGlo85555,LRes58332,LRes65842,LRes75756,LUp_85073],["Glo85555","Res58332","Res65842","Res75756","Up_85073"],Up_85073,"Up_85073")

Actual (Unparsed): [[[[[1.3703000], [1.3703000]]], [[[1.3703000], [1.3703000]]]]]

Expected (Unparsed): [[[[[1.3702999999999999],[1.3702999999999999]]],[[[1.3702999999999999],[1.3702999999999999]]]]]

Actual:   [[[[[1.3703], [1.3703]]], [[[1.3703], [1.3703]]]]]

Expected: [[[[[1.3703], [1.3703]]], [[[1.3703], [1.3703]]]]]