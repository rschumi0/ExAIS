import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Max67428 = tf.keras.layers.Input(shape=([1, 2]))
in1Max67428 = tf.keras.layers.Input(shape=([1, 2]))
in0Bat65061 = tf.keras.layers.Input(shape=([2]))

Max67428 = keras.layers.Maximum(name = 'Max67428', )([in0Max67428,in1Max67428])
Fla76109 = keras.layers.Flatten(name = 'Fla76109', )(Max67428)
Bat65061 = keras.layers.BatchNormalization(axis=1, epsilon=0.44594303322692475,  name = 'Bat65061', )(in0Bat65061)
Min1491 = keras.layers.Minimum(name = 'Min1491', )([Fla76109,Bat65061])
Res78348 = keras.layers.Reshape((2, 1), name = 'Res78348', )(Min1491)
Res79017 = keras.layers.Reshape((2, 1, 1), name = 'Res79017', )(Res78348)
Res12964 = keras.layers.Reshape((2, 1, 1, 1), name = 'Res12964', )(Res79017)
Con42096 = keras.layers.Conv3D(3, (2, 1, 1),strides=(1, 1, 1), padding='valid', dilation_rate=(1, 1, 1), name = 'Con42096', )(Res12964)
Res19208 = keras.layers.Reshape((1, 1, 3), name = 'Res19208', )(Con42096)
Res59185 = keras.layers.Reshape((1, 3), name = 'Res59185', )(Res19208)
Loc54833 = keras.layers.LocallyConnected1D(4, (1),strides=(1), name = 'Loc54833', )(Res59185)
Res3704 = keras.layers.Reshape((1, 4, 1), name = 'Res3704', )(Loc54833)
Dep46480 = keras.layers.DepthwiseConv2D((1, 4),strides=(1, 1), padding='valid', name = 'Dep46480', )(Res3704)
model = tf.keras.models.Model(inputs=[in0Max67428,in1Max67428,in0Bat65061], outputs=Dep46480)
w = model.get_layer('Bat65061').get_weights() 
w[0] = np.array([0.4426, 0.3875])
w[1] = np.array([0.1373, 0.8493])
w[2] = np.array([0.2208, 0.9076])
w[3] = np.array([0.2372, 0.1689])
model.get_layer('Bat65061').set_weights(w) 
w = model.get_layer('Con42096').get_weights() 
w[0] = np.array([[[[[0.8361, 0.5141, 0.2751]]]], [[[[0.3081, 0.8006, 0.766]]]]])
w[1] = np.array([0, 0, 0])
model.get_layer('Con42096').set_weights(w) 
w = model.get_layer('Loc54833').get_weights() 
w[0] = np.array([[[0.3581, 0.4671, 0.0976, 0.0463], [0.488, 0.6841, 0.5814, 0.0926], [0.522, 0.2026, 0.0188, 0.4528]]])
w[1] = np.array([[0, 0, 0, 0]])
model.get_layer('Loc54833').set_weights(w) 
w = model.get_layer('Dep46480').get_weights() 
w[0] = np.array([[[[0.4008]], [[0.0205]], [[0.8868]], [[0.8832]]]])
w[1] = np.array([0])
model.get_layer('Dep46480').set_weights(w) 
in0Max67428 = tf.constant([[[0.1221, 0.4486]]])
in1Max67428 = tf.constant([[[0.798, 0.6509]]])
in0Bat65061 = tf.constant([[1.1582, 1.4962]])
print (np.array2string(model.predict([in0Max67428,in1Max67428,in0Bat65061],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Dep46480.png')

LMax67428 = maximum_layer([[[[0.1221, 0.4486]]], [[[0.798, 0.6509]]]], Max67428), 
LFla76109 = flatten_layer(Max67428, Fla76109), 
LBat65061 = batch_normalization_layer([[1.1582, 1.4962]], 1, 0.44594303322692475, [0.4426, 0.3875], [0.1373, 0.8493], [0.2208, 0.9076], [0.2372, 0.1689], Bat65061), 
LMin1491 = minimum_layer([Fla76109,Bat65061], Min1491), 
LRes78348 = reshape_layer(Min1491, [2, 1], Res78348), 
LRes79017 = reshape_layer(Res78348, [2, 1, 1], Res79017), 
LRes12964 = reshape_layer(Res79017, [2, 1, 1, 1], Res12964), 
LCon42096 = conv3D_layer(Res12964, 2, 1, 1,[[[[[0.8361, 0.5141, 0.2751]]]], [[[[0.3081, 0.8006, 0.766]]]]],[0, 0, 0], 1, 1, 1, false, 1, 1, 1, Con42096), 
LRes19208 = reshape_layer(Con42096, [1, 1, 3], Res19208), 
LRes59185 = reshape_layer(Res19208, [1, 3], Res59185), 
LLoc54833 = locally_connected1D_layer(Res59185, 1,[[[0.3581, 0.4671, 0.0976, 0.0463], [0.488, 0.6841, 0.5814, 0.0926], [0.522, 0.2026, 0.0188, 0.4528]]],[[0, 0, 0, 0]], 1, Loc54833), 
LRes3704 = reshape_layer(Loc54833, [1, 4, 1], Res3704), 
LDep46480 = depthwise_conv2D_layer(Res3704, 1, 4,[[[[0.4008]], [[0.0205]], [[0.8868]], [[0.8832]]]],[0], 1, 1, false, Dep46480), 
exec_layers([LMax67428,LFla76109,LBat65061,LMin1491,LRes78348,LRes79017,LRes12964,LCon42096,LRes19208,LRes59185,LLoc54833,LRes3704,LDep46480],["Max67428","Fla76109","Bat65061","Min1491","Res78348","Res79017","Res12964","Con42096","Res19208","Res59185","Loc54833","Res3704","Dep46480"],Dep46480,"Dep46480")

Actual (Unparsed): [[[[1.3168316]]]]

Expected (Unparsed): [[[[1.3168315426053847]]]]

Actual:   [[[[1.3169]]]]

Expected: [[[[1.3169]]]]