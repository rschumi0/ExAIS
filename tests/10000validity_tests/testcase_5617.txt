import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0LST26554 = tf.keras.layers.Input(shape=([1, 3]))
in0Con25068 = tf.keras.layers.Input(shape=([6, 3, 1]))
in0Zer93769 = tf.keras.layers.Input(shape=([4, 1, 2]))

LST26554 = keras.layers.LSTM(3,recurrent_activation='sigmoid', name = 'LST26554', )(in0LST26554)
Res60067 = keras.layers.Reshape((3, 1), name = 'Res60067', )(LST26554)
Res80059 = keras.layers.Reshape((3, 1, 1), name = 'Res80059', )(Res60067)
Zer14334 = keras.layers.ZeroPadding2D(padding=((3, 0), (2, 0)), name = 'Zer14334', )(Res80059)
Con25068 = keras.layers.Concatenate(axis=3, name = 'Con25068', )([Zer14334,in0Con25068])
Zer93769 = keras.layers.ZeroPadding2D(padding=((1, 1), (1, 1)), name = 'Zer93769', )(in0Zer93769)
Sub61376 = keras.layers.Subtract(name = 'Sub61376', )([Con25068,Zer93769])
model = tf.keras.models.Model(inputs=[in0LST26554,in0Con25068,in0Zer93769], outputs=Sub61376)
w = model.get_layer('LST26554').get_weights() 
w[0] = np.array([[4, 3, 5, 2, 5, 10, 8, 9, 6, 6, 9, 10], [2, 1, 4, 6, 6, 2, 7, 4, 3, 2, 2, 2], [1, 9, 2, 5, 6, 7, 8, 8, 2, 5, 8, 9]])
w[1] = np.array([[8, 3, 9, 10, 3, 9, 5, 5, 1, 7, 8, 10], [2, 4, 8, 4, 9, 4, 1, 8, 6, 3, 6, 7], [8, 7, 7, 8, 2, 10, 8, 5, 3, 6, 3, 2]])
w[2] = np.array([3, 4, 4, 5, 10, 10, 4, 1, 5, 10, 9, 9])
model.get_layer('LST26554').set_weights(w) 
in0LST26554 = tf.constant([[[10, 6, 3]]])
in0Con25068 = tf.constant([[[[0.1143], [0.3771], [0.7065]], [[0.6175], [0.1893], [0.8112]], [[0.0767], [0.8655], [0.2455]], [[0.1254], [0.8045], [0.7319]], [[0.7123], [0.4957], [0.6672]], [[0.0368], [0.4896], [0.5166]]]])
in0Zer93769 = tf.constant([[[[1.3227, 1.2215]], [[1.6753, 1.3881]], [[1.4071, 1.0839]], [[1.3994, 1.8046]]]])
print (np.array2string(model.predict([in0LST26554,in0Con25068,in0Zer93769],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Sub61376.png')

LLST26554 = lstm_layer([[[10, 6, 3]]],[[4, 3, 5, 2, 5, 10, 8, 9, 6, 6, 9, 10], [2, 1, 4, 6, 6, 2, 7, 4, 3, 2, 2, 2], [1, 9, 2, 5, 6, 7, 8, 8, 2, 5, 8, 9]],[[8, 3, 9, 10, 3, 9, 5, 5, 1, 7, 8, 10], [2, 4, 8, 4, 9, 4, 1, 8, 6, 3, 6, 7], [8, 7, 7, 8, 2, 10, 8, 5, 3, 6, 3, 2]],[3, 4, 4, 5, 10, 10, 4, 1, 5, 10, 9, 9], LST26554), 
LRes60067 = reshape_layer(LST26554, [3, 1], Res60067), 
LRes80059 = reshape_layer(Res60067, [3, 1, 1], Res80059), 
LZer14334 = zero_padding2D_layer(Res80059, 3, 0, 2, 0, Zer14334), 
LCon25068 = concatenate_layer([Zer14334,[[[[0.1143], [0.3771], [0.7065]], [[0.6175], [0.1893], [0.8112]], [[0.0767], [0.8655], [0.2455]], [[0.1254], [0.8045], [0.7319]], [[0.7123], [0.4957], [0.6672]], [[0.0368], [0.4896], [0.5166]]]]], 3, Con25068), 
LZer93769 = zero_padding2D_layer([[[[1.3227, 1.2215]], [[1.6753, 1.3881]], [[1.4071, 1.0839]], [[1.3994, 1.8046]]]], 1, 1, 1, 1, Zer93769), 
LSub61376 = subtract_layer(Con25068,Zer93769, Sub61376), 
exec_layers([LLST26554,LRes60067,LRes80059,LZer14334,LCon25068,LZer93769,LSub61376],["LST26554","Res60067","Res80059","Zer14334","Con25068","Zer93769","Sub61376"],Sub61376,"Sub61376")

Actual (Unparsed): [[[[0.0000000, 0.1143000], [0.0000000, 0.3771000], [0.0000000, 0.7065000]], [[0.0000000, 0.6175000], [-1.3227000, -1.0322000], [0.0000000, 0.8112000]], [[0.0000000, 0.0767000], [-1.6753000, -0.5226001], [0.0000000, 0.2455000]], [[0.0000000, 0.1254000], [-1.4071000, -0.2794000], [0.7615942, 0.7319000]], [[0.0000000, 0.7123000], [-1.3994000, -1.3089000], [0.7615942, 0.6672000]], [[0.0000000, 0.0368000], [0.0000000, 0.4896000], [0.7615942, 0.5166000]]]]

Expected (Unparsed): [[[[0,0.1143],[0,0.3771],[0,0.7065]],[[0,0.6175],[-1.3227,-1.0322],[0,0.8112]],[[0,0.0767],[-1.6753,-0.5225999999999998],[0,0.2455]],[[0,0.1254],[-1.4071,-0.2794000000000001],[0.7615941559557649,0.7319]],[[0,0.7123],[-1.3994,-1.3089],[0.7615941559557649,0.6672]],[[0,0.0368],[0,0.4896],[0.7615941559557649,0.5166]]]]

Actual:   [[[[0, 0.1143], [0, 0.3771], [0, 0.7065]], [[0, 0.6175], [-1.3227, -1.0322], [0, 0.8112]], [[0, 0.0767], [-1.6753, -0.5226], [0, 0.2455]], [[0, 0.1254], [-1.4071, -0.2794], [0.7616, 0.7319]], [[0, 0.7123], [-1.3994, -1.3089], [0.7616, 0.6672]], [[0, 0.0368], [0, 0.4896], [0.7616, 0.5166]]]]

Expected: [[[[0, 0.1143], [0, 0.3771], [0, 0.7065]], [[0, 0.6175], [-1.3227, -1.0322], [0, 0.8112]], [[0, 0.0767], [-1.6753, -0.5225], [0, 0.2455]], [[0, 0.1254], [-1.4071, -0.2794], [0.7616, 0.7319]], [[0, 0.7123], [-1.3994, -1.3089], [0.7616, 0.6672]], [[0, 0.0368], [0, 0.4896], [0.7616, 0.5166]]]]