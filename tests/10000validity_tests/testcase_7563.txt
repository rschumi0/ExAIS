import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Bat36058 = tf.keras.layers.Input(shape=([3, 3, 1]))

Bat36058 = keras.layers.BatchNormalization(axis=2, epsilon=0.7168077733223399,  name = 'Bat36058', )(in0Bat36058)
Glo70413 = keras.layers.GlobalMaxPool2D(name = 'Glo70413', )(Bat36058)
model = tf.keras.models.Model(inputs=[in0Bat36058], outputs=Glo70413)
w = model.get_layer('Bat36058').get_weights() 
w[0] = np.array([0.0326, 0.7551, 0.9373])
w[1] = np.array([0.5038, 0.493, 0.7254])
w[2] = np.array([0.0606, 0.9244, 0.2248])
w[3] = np.array([0.5731, 0.7751, 0.1496])
model.get_layer('Bat36058').set_weights(w) 
in0Bat36058 = tf.constant([[[[1.6333], [1.1802], [1.2946]], [[1.8535], [1.9096], [1.5691]], [[1.2235], [1.5098], [1.7125]]]])
print (np.array2string(model.predict([in0Bat36058],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Glo70413.png')

LBat36058 = batch_normalization_layer([[[[1.6333], [1.1802], [1.2946]], [[1.8535], [1.9096], [1.5691]], [[1.2235], [1.5098], [1.7125]]]], 2, 0.7168077733223399, [0.0326, 0.7551, 0.9373], [0.5038, 0.493, 0.7254], [0.0606, 0.9244, 0.2248], [0.5731, 0.7751, 0.1496], Bat36058), 
LGlo70413 = global_max_pool2D_layer(Bat36058, Glo70413), 
exec_layers([LBat36058,LGlo70413],["Bat36058","Glo70413"],Glo70413,"Glo70413")

Actual (Unparsed): [[2.2234724]]

Expected (Unparsed): [[2.2234724248598488]]

Actual:   [[2.2235]]

Expected: [[2.2235]]