import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Mul88042 = tf.keras.layers.Input(shape=([1, 2]))
in1Mul88042 = tf.keras.layers.Input(shape=([1, 2]))
in0Sub25484 = tf.keras.layers.Input(shape=([3]))
in1Sub25484 = tf.keras.layers.Input(shape=([3]))
in0Thr84522 = tf.keras.layers.Input(shape=([1, 2]))
in0Con32382 = tf.keras.layers.Input(shape=([5, 7]))

Mul88042 = keras.layers.Multiply(name = 'Mul88042', )([in0Mul88042,in1Mul88042])
Max20220 = keras.layers.MaxPool1D(pool_size=(1), strides=(1), padding='valid', name = 'Max20220', )(Mul88042)
Res7512 = keras.layers.Reshape((1, 2, 1), name = 'Res7512', )(Max20220)
Res31924 = keras.layers.Reshape((1, 2, 1, 1), name = 'Res31924', )(Res7512)
Zer79178 = keras.layers.ZeroPadding3D(padding=((4, 0), (1, 0), (2, 0)), name = 'Zer79178', )(Res31924)
Sub25484 = keras.layers.Subtract(name = 'Sub25484', )([in0Sub25484,in1Sub25484])
Res62336 = keras.layers.Reshape((3, 1), name = 'Res62336', )(Sub25484)
Res94116 = keras.layers.Reshape((3, 1, 1), name = 'Res94116', )(Res62336)
Res60856 = keras.layers.Reshape((3, 1, 1, 1), name = 'Res60856', )(Res94116)
Zer9036 = keras.layers.ZeroPadding3D(padding=((1, 1), (1, 1), (1, 1)), name = 'Zer9036', )(Res60856)
Max47568 = keras.layers.Maximum(name = 'Max47568', )([Zer79178,Zer9036])
Res37393 = keras.layers.Reshape((5, 3, 3), name = 'Res37393', )(Max47568)
Res17911 = keras.layers.Reshape((5, 9), name = 'Res17911', )(Res37393)
Thr84522 = keras.layers.ThresholdedReLU(theta=2.065938290262871, name = 'Thr84522', input_shape=(1, 2))(in0Thr84522)
Zer78871 = keras.layers.ZeroPadding1D(padding=((4, 0)), name = 'Zer78871', )(Thr84522)
Con32382 = keras.layers.Concatenate(axis=2, name = 'Con32382', )([Zer78871,in0Con32382])
Mul30961 = keras.layers.Multiply(name = 'Mul30961', )([Res17911,Con32382])
model = tf.keras.models.Model(inputs=[in0Mul88042,in1Mul88042,in0Sub25484,in1Sub25484,in0Thr84522,in0Con32382], outputs=Mul30961)
in0Mul88042 = tf.constant([[[0.2323, 0.7993]]])
in1Mul88042 = tf.constant([[[0.4603, 0.1132]]])
in0Sub25484 = tf.constant([[0.8464, 0.8476, 0.9539]])
in1Sub25484 = tf.constant([[0.0487, 0.1517, 0.031]])
in0Thr84522 = tf.constant([[[0.4106, 0.3145]]])
in0Con32382 = tf.constant([[[0.8312, 0.3942, 0.0132, 0.8111, 0.9252, 0.8338, 0.3748], [0.6063, 0.7194, 0.1333, 0.862, 0.3227, 0.6196, 0.609], [0.0955, 0.7624, 0.8979, 0.7345, 0.5938, 0.7853, 0.4825], [0.7707, 0.0615, 0.7072, 0.7717, 0.4496, 0.2337, 0.1506], [0.0853, 0.7887, 0.2107, 0.3624, 0.0181, 0.8045, 0.0109]]])
print (np.array2string(model.predict([in0Mul88042,in1Mul88042,in0Sub25484,in1Sub25484,in0Thr84522,in0Con32382],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Mul30961.png')

LMul88042 = multiply_layer([[[[0.2323, 0.7993]]], [[[0.4603, 0.1132]]]], Mul88042), 
LMax20220 = max_pool1D_layer(Mul88042, 1, 1, false, Max20220), 
LRes7512 = reshape_layer(Max20220, [1, 2, 1], Res7512), 
LRes31924 = reshape_layer(Res7512, [1, 2, 1, 1], Res31924), 
LZer79178 = zero_padding3D_layer(Res31924, 4, 0, 1, 0, 2, 0, Zer79178), 
LSub25484 = subtract_layer([[0.8464, 0.8476, 0.9539]], [[0.0487, 0.1517, 0.031]], Sub25484), 
LRes62336 = reshape_layer(Sub25484, [3, 1], Res62336), 
LRes94116 = reshape_layer(Res62336, [3, 1, 1], Res94116), 
LRes60856 = reshape_layer(Res94116, [3, 1, 1, 1], Res60856), 
LZer9036 = zero_padding3D_layer(Res60856, 1, 1, 1, 1, 1, 1, Zer9036), 
LMax47568 = maximum_layer([Zer79178,Zer9036], Max47568), 
LRes37393 = reshape_layer(Max47568, [5, 3, 3], Res37393), 
LRes17911 = reshape_layer(Res37393, [5, 9], Res17911), 
LThr84522 = thresholded_relu_layer([[[0.4106, 0.3145]]], 2.065938290262871, Thr84522), 
LZer78871 = zero_padding1D_layer(Thr84522, 4, 0, Zer78871), 
LCon32382 = concatenate_layer([Zer78871,[[[0.8312, 0.3942, 0.0132, 0.8111, 0.9252, 0.8338, 0.3748], [0.6063, 0.7194, 0.1333, 0.862, 0.3227, 0.6196, 0.609], [0.0955, 0.7624, 0.8979, 0.7345, 0.5938, 0.7853, 0.4825], [0.7707, 0.0615, 0.7072, 0.7717, 0.4496, 0.2337, 0.1506], [0.0853, 0.7887, 0.2107, 0.3624, 0.0181, 0.8045, 0.0109]]]], 2, Con32382), 
LMul30961 = multiply_layer([Res17911,Con32382], Mul30961), 
exec_layers([LMul88042,LMax20220,LRes7512,LRes31924,LZer79178,LSub25484,LRes62336,LRes94116,LRes60856,LZer9036,LMax47568,LRes37393,LRes17911,LThr84522,LZer78871,LCon32382,LMul30961],["Mul88042","Max20220","Res7512","Res31924","Zer79178","Sub25484","Res62336","Res94116","Res60856","Zer9036","Max47568","Res37393","Res17911","Thr84522","Zer78871","Con32382","Mul30961"],Mul30961,"Mul30961")

Actual (Unparsed): [[[0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.1063334, 0.0000000, 0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.6248486, 0.0000000, 0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.6526749, 0.0000000, 0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0387506, 0.0000000, 0.0000000, 0.0009862]]]

Expected (Unparsed): [[[0,0,0.0,0.0,0.0,0.0,0.0,0.0,0.0],[0,0,0.0,0.0,0.10633341000000002,0.0,0.0,0.0,0.0],[0,0,0.0,0.0,0.62484861,0.0,0.0,0.0,0.0],[0,0,0.0,0.0,0.65267488,0.0,0.0,0.0,0.0],[0,0,0.0,0.0,0.0,0.038750594856,0.0,0.0,0.000986240284]]]

Actual:   [[[0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0.1064, 0, 0, 0, 0], [0, 0, 0, 0, 0.6249, 0, 0, 0, 0], [0, 0, 0, 0, 0.6527, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0.0388, 0, 0, 0.001]]]

Expected: [[[0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0.1064, 0, 0, 0, 0], [0, 0, 0, 0, 0.6249, 0, 0, 0, 0], [0, 0, 0, 0, 0.6527, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0.0388, 0, 0, 0.001]]]