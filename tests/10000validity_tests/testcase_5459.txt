import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Dot14225 = tf.keras.layers.Input(shape=([3]))
in1Dot14225 = tf.keras.layers.Input(shape=([3]))

Dot14225 = keras.layers.Dot(axes=(1, 1), name = 'Dot14225', )([in0Dot14225,in1Dot14225])
Bat52985 = keras.layers.BatchNormalization(axis=1, epsilon=0.4038066315643136,  name = 'Bat52985', )(Dot14225)
Res70124 = keras.layers.Reshape((1, 1), name = 'Res70124', )(Bat52985)
Res50557 = keras.layers.Reshape((1, 1, 1), name = 'Res50557', )(Res70124)
Glo95265 = keras.layers.GlobalAveragePooling2D(name = 'Glo95265', )(Res50557)
model = tf.keras.models.Model(inputs=[in0Dot14225,in1Dot14225], outputs=Glo95265)
w = model.get_layer('Bat52985').get_weights() 
w[0] = np.array([0.1472])
w[1] = np.array([0.5291])
w[2] = np.array([0.6729])
w[3] = np.array([0.4839])
model.get_layer('Bat52985').set_weights(w) 
in0Dot14225 = tf.constant([[0.0226, 0.0485, 0.1684]])
in1Dot14225 = tf.constant([[0.064, 0.184, 0.8976]])
print (np.array2string(model.predict([in0Dot14225,in1Dot14225],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Glo95265.png')

LDot14225 = dot_layer([[0.0226, 0.0485, 0.1684]], [[0.064, 0.184, 0.8976]], 1, 1, Dot14225), 
LBat52985 = batch_normalization_layer(Dot14225, 1, 0.4038066315643136, [0.1472], [0.5291], [0.6729], [0.4839], Bat52985), 
LRes70124 = reshape_layer(Bat52985, [1, 1], Res70124), 
LRes50557 = reshape_layer(Res70124, [1, 1, 1], Res50557), 
LGlo95265 = global_average_pooling2D_layer(Res50557, Glo95265), 
exec_layers([LDot14225,LBat52985,LRes70124,LRes50557,LGlo95265],["Dot14225","Bat52985","Res70124","Res50557","Glo95265"],Glo95265,"Glo95265")

Actual (Unparsed): [[0.4492065]]

Expected (Unparsed): [[0.44920648712372907]]

Actual:   [[0.4493]]

Expected: [[0.4493]]