import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Zer88296 = tf.keras.layers.Input(shape=([1, 3]))
in0Mul504 = tf.keras.layers.Input(shape=([1, 1, 2, 1]))
in1Mul504 = tf.keras.layers.Input(shape=([1, 1, 2, 1]))
in0Con39869 = tf.keras.layers.Input(shape=([7]))
in0Fla30945 = tf.keras.layers.Input(shape=([3, 3]))
in0Con97225 = tf.keras.layers.Input(shape=([16]))
in0Con70241 = tf.keras.layers.Input(shape=([25, 1, 3, 1]))
in0Mul25422 = tf.keras.layers.Input(shape=([1, 1, 2, 2]))
in1Mul25422 = tf.keras.layers.Input(shape=([1, 1, 2, 2]))

Zer88296 = keras.layers.ZeroPadding1D(padding=((1, 1)), name = 'Zer88296', )(in0Zer88296)
Res20972 = keras.layers.Reshape((3, 3, 1), name = 'Res20972', )(Zer88296)
Zer97779 = keras.layers.ZeroPadding2D(padding=((1, 1), (1, 1)), name = 'Zer97779', )(Res20972)
Res37357 = keras.layers.Reshape((5, 5), name = 'Res37357', )(Zer97779)
Fla84145 = keras.layers.Flatten(name = 'Fla84145', )(Res37357)
Mul504 = keras.layers.Multiply(name = 'Mul504', )([in0Mul504,in1Mul504])
Res10136 = keras.layers.Reshape((1, 1, 2), name = 'Res10136', )(Mul504)
Res5168 = keras.layers.Reshape((1, 2), name = 'Res5168', )(Res10136)
Fla68205 = keras.layers.Flatten(name = 'Fla68205', )(Res5168)
Con39869 = keras.layers.Concatenate(axis=1, name = 'Con39869', )([Fla68205,in0Con39869])
Fla30945 = keras.layers.Flatten(name = 'Fla30945', )(in0Fla30945)
Ave84938 = keras.layers.Average(name = 'Ave84938', )([Con39869,Fla30945])
Con97225 = keras.layers.Concatenate(axis=1, name = 'Con97225', )([Ave84938,in0Con97225])
Max90880 = keras.layers.Maximum(name = 'Max90880', )([Fla84145,Con97225])
ELU53163 = keras.layers.ELU(alpha=3.5752480804945126, name = 'ELU53163', )(Max90880)
Res64522 = keras.layers.Reshape((25, 1), name = 'Res64522', )(ELU53163)
Res75843 = keras.layers.Reshape((25, 1, 1), name = 'Res75843', )(Res64522)
Res79307 = keras.layers.Reshape((25, 1, 1, 1), name = 'Res79307', )(Res75843)
Zer35988 = keras.layers.ZeroPadding3D(padding=((0, 0), (0, 0), (2, 0)), name = 'Zer35988', )(Res79307)
Con70241 = keras.layers.Concatenate(axis=4, name = 'Con70241', )([Zer35988,in0Con70241])
Mul25422 = keras.layers.Multiply(name = 'Mul25422', )([in0Mul25422,in1Mul25422])
Mas34757 = keras.layers.Masking(mask_value=1, name = 'Mas34757', )(Mul25422)
Zer20686 = keras.layers.ZeroPadding3D(padding=((24, 0), (0, 0), (1, 0)), name = 'Zer20686', )(Mas34757)
Mul7521 = keras.layers.Multiply(name = 'Mul7521', )([Con70241,Zer20686])
model = tf.keras.models.Model(inputs=[in0Zer88296,in0Mul504,in1Mul504,in0Con39869,in0Fla30945,in0Con97225,in0Con70241,in0Mul25422,in1Mul25422], outputs=Mul7521)
in0Zer88296 = tf.constant([[[1.9564, 1.9652, 1.3047]]])
in0Mul504 = tf.constant([[[[[0.8238], [0.5373]]]]])
in1Mul504 = tf.constant([[[[[0.9295], [0.169]]]]])
in0Con39869 = tf.constant([[0.1078, 0.9934, 0.5945, 0.8673, 0.8269, 0.038, 0.9648]])
in0Fla30945 = tf.constant([[[1.1347, 1.9371, 1.2175], [1.7408, 1.7666, 1.7174], [1.5046, 1.3268, 1.0188]]])
in0Con97225 = tf.constant([[0.9915, 0.3669, 0.9854, 0.6302, 0.3502, 0.8861, 0.4749, 1, 0.1982, 0.6156, 0.3784, 0.1491, 0.0607, 0.9618, 0.1277, 0.1187]])
in0Con70241 = tf.constant([[[[[0.4874], [0.1901], [0.5348]]], [[[0.7359], [0.6256], [0.6122]]], [[[0.6609], [0.9667], [0.4483]]], [[[0.0202], [0.8115], [0.9488]]], [[[0.8416], [0.9711], [0.491]]], [[[0.9016], [0.9762], [0.6742]]], [[[0.0884], [0.2793], [0.3702]]], [[[0.9809], [0.2323], [0.6899]]], [[[0.9666], [0.6807], [0.4439]]], [[[0.9393], [0.2425], [0.9578]]], [[[0.368], [0.6324], [0.4291]]], [[[0.6178], [0.6235], [0.3453]]], [[[0.6365], [0.3571], [0.2337]]], [[[0.3736], [0.0492], [0.9107]]], [[[0.6726], [0.4543], [0.387]]], [[[0.3927], [0.7933], [0.6639]]], [[[0.5104], [0.5198], [0.2958]]], [[[0.9012], [0.3903], [0.6964]]], [[[0.9302], [0.9781], [0.659]]], [[[0.1317], [0.3368], [0.3625]]], [[[0.6123], [0.2568], [0.277]]], [[[0.0434], [0.8437], [0.7171]]], [[[0.024], [0.8229], [0.6548]]], [[[0.1241], [0.8506], [0.5763]]], [[[0.0114], [0.5683], [0.8757]]]]])
in0Mul25422 = tf.constant([[[[[0.5264, 0.0854], [0.0955, 0.354]]]]])
in1Mul25422 = tf.constant([[[[[0.7874, 0.9595], [0.6084, 0.6121]]]]])
print (np.array2string(model.predict([in0Zer88296,in0Mul504,in1Mul504,in0Con39869,in0Fla30945,in0Con97225,in0Con70241,in0Mul25422,in1Mul25422],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Mul7521.png')

LZer88296 = zero_padding1D_layer([[[1.9564, 1.9652, 1.3047]]], 1, 1, Zer88296), 
LRes20972 = reshape_layer(Zer88296, [3, 3, 1], Res20972), 
LZer97779 = zero_padding2D_layer(Res20972, 1, 1, 1, 1, Zer97779), 
LRes37357 = reshape_layer(Zer97779, [5, 5], Res37357), 
LFla84145 = flatten_layer(Res37357, Fla84145), 
LMul504 = multiply_layer([[[[[[0.8238], [0.5373]]]]], [[[[[0.9295], [0.169]]]]]], Mul504), 
LRes10136 = reshape_layer(Mul504, [1, 1, 2], Res10136), 
LRes5168 = reshape_layer(Res10136, [1, 2], Res5168), 
LFla68205 = flatten_layer(Res5168, Fla68205), 
LCon39869 = concatenate_layer([Fla68205,[[0.1078, 0.9934, 0.5945, 0.8673, 0.8269, 0.038, 0.9648]]], 1, Con39869), 
LFla30945 = flatten_layer([[[1.1347, 1.9371, 1.2175], [1.7408, 1.7666, 1.7174], [1.5046, 1.3268, 1.0188]]], Fla30945), 
LAve84938 = average_layer([Con39869,Fla30945], Ave84938), 
LCon97225 = concatenate_layer([Ave84938,[[0.9915, 0.3669, 0.9854, 0.6302, 0.3502, 0.8861, 0.4749, 1, 0.1982, 0.6156, 0.3784, 0.1491, 0.0607, 0.9618, 0.1277, 0.1187]]], 1, Con97225), 
LMax90880 = maximum_layer([Fla84145,Con97225], Max90880), 
LELU53163 = elu_layer(Max90880, 3.5752480804945126, ELU53163), 
LRes64522 = reshape_layer(ELU53163, [25, 1], Res64522), 
LRes75843 = reshape_layer(Res64522, [25, 1, 1], Res75843), 
LRes79307 = reshape_layer(Res75843, [25, 1, 1, 1], Res79307), 
LZer35988 = zero_padding3D_layer(Res79307, 0, 0, 0, 0, 2, 0, Zer35988), 
LCon70241 = concatenate_layer([Zer35988,[[[[[0.4874], [0.1901], [0.5348]]], [[[0.7359], [0.6256], [0.6122]]], [[[0.6609], [0.9667], [0.4483]]], [[[0.0202], [0.8115], [0.9488]]], [[[0.8416], [0.9711], [0.491]]], [[[0.9016], [0.9762], [0.6742]]], [[[0.0884], [0.2793], [0.3702]]], [[[0.9809], [0.2323], [0.6899]]], [[[0.9666], [0.6807], [0.4439]]], [[[0.9393], [0.2425], [0.9578]]], [[[0.368], [0.6324], [0.4291]]], [[[0.6178], [0.6235], [0.3453]]], [[[0.6365], [0.3571], [0.2337]]], [[[0.3736], [0.0492], [0.9107]]], [[[0.6726], [0.4543], [0.387]]], [[[0.3927], [0.7933], [0.6639]]], [[[0.5104], [0.5198], [0.2958]]], [[[0.9012], [0.3903], [0.6964]]], [[[0.9302], [0.9781], [0.659]]], [[[0.1317], [0.3368], [0.3625]]], [[[0.6123], [0.2568], [0.277]]], [[[0.0434], [0.8437], [0.7171]]], [[[0.024], [0.8229], [0.6548]]], [[[0.1241], [0.8506], [0.5763]]], [[[0.0114], [0.5683], [0.8757]]]]]], 4, Con70241), 
LMul25422 = multiply_layer([[[[[[0.5264, 0.0854], [0.0955, 0.354]]]]], [[[[[0.7874, 0.9595], [0.6084, 0.6121]]]]]], Mul25422), 
LMas34757 = masking_layer(Mul25422, 1, Mas34757), 
LZer20686 = zero_padding3D_layer(Mas34757, 24, 0, 0, 0, 1, 0, Zer20686), 
LMul7521 = multiply_layer([Con70241,Zer20686], Mul7521), 
exec_layers([LZer88296,LRes20972,LZer97779,LRes37357,LFla84145,LMul504,LRes10136,LRes5168,LFla68205,LCon39869,LFla30945,LAve84938,LCon97225,LMax90880,LELU53163,LRes64522,LRes75843,LRes79307,LZer35988,LCon70241,LMul25422,LMas34757,LZer20686,LMul7521],["Zer88296","Res20972","Zer97779","Res37357","Fla84145","Mul504","Res10136","Res5168","Fla68205","Con39869","Fla30945","Ave84938","Con97225","Max90880","ELU53163","Res64522","Res75843","Res79307","Zer35988","Con70241","Mul25422","Mas34757","Zer20686","Mul7521"],Mul7521,"Mul7521")

Actual (Unparsed): [[[[[0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000]]], [[[0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000]]], [[[0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000]]], [[[0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000]]], [[[0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000]]], [[[0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000]]], [[[0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000]]], [[[0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000]]], [[[0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000]]], [[[0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000]]], [[[0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000]]], [[[0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000]]], [[[0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000]]], [[[0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000]]], [[[0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000]]], [[[0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000]]], [[[0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000]]], [[[0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000]]], [[[0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000]]], [[[0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000]]], [[[0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000]]], [[[0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000]]], [[[0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000]]], [[[0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000]]], [[[0.0000000, 0.0000000], [0.0000000, 0.0465672], [0.0068967, 0.1897497]]]]]

Expected (Unparsed): [[[[[0,0.0],[0,0.0],[0.0,0.0]]],[[[0,0.0],[0,0.0],[0.0,0.0]]],[[[0,0.0],[0,0.0],[0.0,0.0]]],[[[0,0.0],[0,0.0],[0.0,0.0]]],[[[0,0.0],[0,0.0],[0.0,0.0]]],[[[0,0.0],[0,0.0],[0.0,0.0]]],[[[0,0.0],[0,0.0],[0.0,0.0]]],[[[0,0.0],[0,0.0],[0.0,0.0]]],[[[0,0.0],[0,0.0],[0.0,0.0]]],[[[0,0.0],[0,0.0],[0.0,0.0]]],[[[0,0.0],[0,0.0],[0.0,0.0]]],[[[0,0.0],[0,0.0],[0.0,0.0]]],[[[0,0.0],[0,0.0],[0.0,0.0]]],[[[0,0.0],[0,0.0],[0.0,0.0]]],[[[0,0.0],[0,0.0],[0.0,0.0]]],[[[0,0.0],[0,0.0],[0.0,0.0]]],[[[0,0.0],[0,0.0],[0,0.0]]],[[[0,0.0],[0,0.0],[0.0,0.0]]],[[[0,0.0],[0,0.0],[0.0,0.0]]],[[[0,0.0],[0,0.0],[0.0,0.0]]],[[[0,0.0],[0,0.0],[0.0,0.0]]],[[[0,0.0],[0,0.0],[0.0,0.0]]],[[[0,0.0],[0,0.0],[0.0,0.0]]],[[[0,0.0],[0,0.0],[0.0,0.0]]],[[[0,0.0],[0.0,0.046567240790000006],[0.006896731140000001,0.18974965338]]]]]

Actual:   [[[[[0, 0], [0, 0], [0, 0]]], [[[0, 0], [0, 0], [0, 0]]], [[[0, 0], [0, 0], [0, 0]]], [[[0, 0], [0, 0], [0, 0]]], [[[0, 0], [0, 0], [0, 0]]], [[[0, 0], [0, 0], [0, 0]]], [[[0, 0], [0, 0], [0, 0]]], [[[0, 0], [0, 0], [0, 0]]], [[[0, 0], [0, 0], [0, 0]]], [[[0, 0], [0, 0], [0, 0]]], [[[0, 0], [0, 0], [0, 0]]], [[[0, 0], [0, 0], [0, 0]]], [[[0, 0], [0, 0], [0, 0]]], [[[0, 0], [0, 0], [0, 0]]], [[[0, 0], [0, 0], [0, 0]]], [[[0, 0], [0, 0], [0, 0]]], [[[0, 0], [0, 0], [0, 0]]], [[[0, 0], [0, 0], [0, 0]]], [[[0, 0], [0, 0], [0, 0]]], [[[0, 0], [0, 0], [0, 0]]], [[[0, 0], [0, 0], [0, 0]]], [[[0, 0], [0, 0], [0, 0]]], [[[0, 0], [0, 0], [0, 0]]], [[[0, 0], [0, 0], [0, 0]]], [[[0, 0], [0, 0.0466], [0.0069, 0.1898]]]]]

Expected