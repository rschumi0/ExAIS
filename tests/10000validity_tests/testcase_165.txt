import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Glo45630 = tf.keras.layers.Input(shape=([2, 1, 1, 2]))

Glo45630 = keras.layers.GlobalMaxPool3D(name = 'Glo45630', )(in0Glo45630)
Bat34552 = keras.layers.BatchNormalization(axis=1, epsilon=0.5534953285849878,  name = 'Bat34552', )(Glo45630)
Res22596 = keras.layers.Reshape((2, 1), name = 'Res22596', )(Bat34552)
Res10970 = keras.layers.Reshape((2, 1, 1), name = 'Res10970', )(Res22596)
Up_27899 = keras.layers.UpSampling2D(size=(2, 2), name = 'Up_27899', )(Res10970)
model = tf.keras.models.Model(inputs=[in0Glo45630], outputs=Up_27899)
w = model.get_layer('Bat34552').get_weights() 
w[0] = np.array([0.3627, 0.216])
w[1] = np.array([0.9891, 0.1376])
w[2] = np.array([0.2001, 0.0561])
w[3] = np.array([0.7029, 0.96])
model.get_layer('Bat34552').set_weights(w) 
in0Glo45630 = tf.constant([[[[[1.5979, 1.1396]]], [[[1.1878, 1.9855]]]]])
print (np.array2string(model.predict([in0Glo45630],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Up_27899.png')

LGlo45630 = global_max_pool3D_layer([[[[[1.5979, 1.1396]]], [[[1.1878, 1.9855]]]]], Glo45630), 
LBat34552 = batch_normalization_layer(Glo45630, 1, 0.5534953285849878, [0.3627, 0.216], [0.9891, 0.1376], [0.2001, 0.0561], [0.7029, 0.96], Bat34552), 
LRes22596 = reshape_layer(Bat34552, [2, 1], Res22596), 
LRes10970 = reshape_layer(Res22596, [2, 1, 1], Res10970), 
LUp_27899 = up_sampling2D_layer(Res10970, 2, 2, Up_27899), 
exec_layers([LGlo45630,LBat34552,LRes22596,LRes10970,LUp_27899],["Glo45630","Bat34552","Res22596","Res10970","Up_27899"],Up_27899,"Up_27899")

Actual (Unparsed): [[[[1.4414030], [1.4414030]], [[1.4414030], [1.4414030]], [[0.4763548], [0.4763548]], [[0.4763548], [0.4763548]]]]

Expected (Unparsed): [[[[1.4414029655490062],[1.4414029655490062]],[[1.4414029655490062],[1.4414029655490062]],[[0.47635481968670934],[0.47635481968670934]],[[0.47635481968670934],[0.47635481968670934]]]]

Actual:   [[[[1.4415], [1.4415]], [[1.4415], [1.4415]], [[0.4764], [0.4764]], [[0.4764], [0.4764]]]]

Expected: [[[[1.4415], [1.4415]], [[1.4415], [1.4415]], [[0.4764], [0.4764]], [[0.4764], [0.4764]]]]