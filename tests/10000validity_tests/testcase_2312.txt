import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Min92059 = tf.keras.layers.Input(shape=([1, 1, 1]))
in1Min92059 = tf.keras.layers.Input(shape=([1, 1, 1]))
in0Add61441 = tf.keras.layers.Input(shape=([1, 2]))
in1Add61441 = tf.keras.layers.Input(shape=([1, 2]))
in0Con34275 = tf.keras.layers.Input(shape=([22]))
in0Fla1787 = tf.keras.layers.Input(shape=([3, 2, 4]))
in0Max72948 = tf.keras.layers.Input(shape=([1, 2, 1]))
in1Max72948 = tf.keras.layers.Input(shape=([1, 2, 1]))

Min92059 = keras.layers.Minimum(name = 'Min92059', )([in0Min92059,in1Min92059])
Zer93321 = keras.layers.ZeroPadding2D(padding=((23, 0), (2, 0)), name = 'Zer93321', )(Min92059)
Add61441 = keras.layers.Add(name = 'Add61441', )([in0Add61441,in1Add61441])
Fla9578 = keras.layers.Flatten(name = 'Fla9578', )(Add61441)
Con34275 = keras.layers.Concatenate(axis=1, name = 'Con34275', )([Fla9578,in0Con34275])
Fla1787 = keras.layers.Flatten(name = 'Fla1787', )(in0Fla1787)
Add12485 = keras.layers.Add(name = 'Add12485', )([Con34275,Fla1787])
Res28034 = keras.layers.Reshape((24, 1), name = 'Res28034', )(Add12485)
Res48460 = keras.layers.Reshape((24, 1, 1), name = 'Res48460', )(Res28034)
Zer14758 = keras.layers.ZeroPadding2D(padding=((0, 0), (2, 0)), name = 'Zer14758', )(Res48460)
Max72948 = keras.layers.Maximum(name = 'Max72948', )([in0Max72948,in1Max72948])
Zer35929 = keras.layers.ZeroPadding2D(padding=((23, 0), (1, 0)), name = 'Zer35929', )(Max72948)
Max46559 = keras.layers.Maximum(name = 'Max46559', )([Zer14758,Zer35929])
Sub10568 = keras.layers.Subtract(name = 'Sub10568', )([Zer93321,Max46559])
model = tf.keras.models.Model(inputs=[in0Min92059,in1Min92059,in0Add61441,in1Add61441,in0Con34275,in0Fla1787,in0Max72948,in1Max72948], outputs=Sub10568)
in0Min92059 = tf.constant([[[[0.7111]]]])
in1Min92059 = tf.constant([[[[0.2914]]]])
in0Add61441 = tf.constant([[[0.5361, 0.4451]]])
in1Add61441 = tf.constant([[[0.1147, 0.971]]])
in0Con34275 = tf.constant([[0.7942, 0.9914, 0.8311, 0.2453, 0.891, 0.4181, 0.7707, 0.3437, 0.6857, 0.8361, 0.8311, 0.4068, 0.7166, 0.6912, 0.2294, 0.5996, 0.1209, 0.6763, 0.6015, 0.3443, 0.3329, 0.7616]])
in0Fla1787 = tf.constant([[[[1.5481, 1.4003, 1.2909, 1.8304], [1.7945, 1.3489, 1.1899, 1.2171]], [[1.2173, 1.3431, 1.7608, 1.5455], [1.4626, 1.6492, 1.243, 1.8783]], [[1.5581, 1.3895, 1.6935, 1.229], [1.7573, 1.8423, 1.6524, 1.4157]]]])
in0Max72948 = tf.constant([[[[0.632], [0.3951]]]])
in1Max72948 = tf.constant([[[[0.966], [0.1995]]]])
print (np.array2string(model.predict([in0Min92059,in1Min92059,in0Add61441,in1Add61441,in0Con34275,in0Fla1787,in0Max72948,in1Max72948],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Sub10568.png')

LMin92059 = minimum_layer([[[[[0.7111]]]], [[[[0.2914]]]]], Min92059), 
LZer93321 = zero_padding2D_layer(Min92059, 23, 0, 2, 0, Zer93321), 
LAdd61441 = add_layer([[[[0.5361, 0.4451]]], [[[0.1147, 0.971]]]], Add61441), 
LFla9578 = flatten_layer(Add61441, Fla9578), 
LCon34275 = concatenate_layer([Fla9578,[[0.7942, 0.9914, 0.8311, 0.2453, 0.891, 0.4181, 0.7707, 0.3437, 0.6857, 0.8361, 0.8311, 0.4068, 0.7166, 0.6912, 0.2294, 0.5996, 0.1209, 0.6763, 0.6015, 0.3443, 0.3329, 0.7616]]], 1, Con34275), 
LFla1787 = flatten_layer([[[[1.5481, 1.4003, 1.2909, 1.8304], [1.7945, 1.3489, 1.1899, 1.2171]], [[1.2173, 1.3431, 1.7608, 1.5455], [1.4626, 1.6492, 1.243, 1.8783]], [[1.5581, 1.3895, 1.6935, 1.229], [1.7573, 1.8423, 1.6524, 1.4157]]]], Fla1787), 
LAdd12485 = add_layer([Con34275,Fla1787], Add12485), 
LRes28034 = reshape_layer(Add12485, [24, 1], Res28034), 
LRes48460 = reshape_layer(Res28034, [24, 1, 1], Res48460), 
LZer14758 = zero_padding2D_layer(Res48460, 0, 0, 2, 0, Zer14758), 
LMax72948 = maximum_layer([[[[[0.632], [0.3951]]]], [[[[0.966], [0.1995]]]]], Max72948), 
LZer35929 = zero_padding2D_layer(Max72948, 23, 0, 1, 0, Zer35929), 
LMax46559 = maximum_layer([Zer14758,Zer35929], Max46559), 
LSub10568 = subtract_layer(Zer93321,Max46559, Sub10568), 
exec_layers([LMin92059,LZer93321,LAdd61441,LFla9578,LCon34275,LFla1787,LAdd12485,LRes28034,LRes48460,LZer14758,LMax72948,LZer35929,LMax46559,LSub10568],["Min92059","Zer93321","Add61441","Fla9578","Con34275","Fla1787","Add12485","Res28034","Res48460","Zer14758","Max72948","Zer35929","Max46559","Sub10568"],Sub10568,"Sub10568")

Actual (Unparsed): [[[[0.0000000], [0.0000000], [-2.1989000]], [[0.0000000], [0.0000000], [-2.8164001]], [[0.0000000], [0.0000000], [-2.0851000]], [[0.0000000], [0.0000000], [-2.8218000]], [[0.0000000], [0.0000000], [-2.6256000]], [[0.0000000], [0.0000000], [-1.5942000]], [[0.0000000], [0.0000000], [-2.0809000]], [[0.0000000], [0.0000000], [-1.6352000]], [[0.0000000], [0.0000000], [-1.9880000]], [[0.0000000], [0.0000000], [-1.6867999]], [[0.0000000], [0.0000000], [-2.4465000]], [[0.0000000], [0.0000000], [-2.3816000]], [[0.0000000], [0.0000000], [-2.2937000]], [[0.0000000], [0.0000000], [-2.0560000]], [[0.0000000], [0.0000000], [-1.9596000]], [[0.0000000], [0.0000000], [-2.5695000]], [[0.0000000], [0.0000000], [-1.7875000]], [[0.0000000], [0.0000000], [-1.9891000]], [[0.0000000], [0.0000000], [-1.8144000]], [[0.0000000], [0.0000000], [-1.9053000]], [[0.0000000], [0.0000000], [-2.3588000]], [[0.0000000], [0.0000000], [-2.1866001]], [[0.0000000], [0.0000000], [-1.9853000]], [[0.0000000], [-0.9660000], [-1.8859000]]]]

Expected (Unparsed): [[[[0],[0],[-2.1989]],[[0],[0],[-2.8164]],[[0],[0],[-2.0850999999999997]],[[0],[0],[-2.8218]],[[0],[0],[-2.6256]],[[0],[0],[-1.5942]],[[0],[0],[-2.0808999999999997]],[[0],[0],[-1.6352000000000002]],[[0],[0],[-1.988]],[[0],[0],[-1.6867999999999999]],[[0],[0],[-2.4465]],[[0],[0],[-2.3816]],[[0],[0],[-2.2937]],[[0],[0],[-2.056]],[[0],[0],[-1.9596]],[[0],[0],[-2.5695]],[[0],[0],[-1.7875]],[[0],[0],[-1.9891]],[[0],[0],[-1.8144]],[[0],[0],[-1.9053]],[[0],[0],[-2.3588]],[[0],[0],[-2.1866]],[[0],[0],[-1.9853]],[[0],[-0.966],[-1.8859]]]]

Actual:   [[[[0], [0], [-2.1989]], [[0], [0], [-2.8164]], [[0], [0], [-2.0851]], [[0], [0], [-2.8218]], [[0], [0], [-2.6256]], [[0], [0], [-1.5942]], [[0], [0], [-2.0809]], [[0], [0], [-1.6352]], [[0], [0], [-1.988]], [[0], [0], [-1.6867]], [[0], [0], [-2.4465]], [[0], [0], [-2.3816]], [[0], [0], [-2.2937]], [[0], [0], [-2.056]], [[0], [0], [-1.9596]], [[0], [0], [-2.5695]], [[0], [0], [-1.7875]], [[0], [0], [-1.9891]], [[0], [0], [-1.8144]], [[0], [0], [-1.9053]], [[0], [0], [-2.3588]], [[0], [0], [-2.1866]], [[0], [0], [-1.9853]], [[0], [-0.966], [-1.8859]]]]

Expected: [[[[0], [0], [-2.1989]], [[0], [0], [-2.8164]], [[0], [0], [-2.085]], [[0], [0], [-2.8218]], [[0], [0], [-2.6256]], [[0], [0], [-1.5942]], [[0], [0], [-2.0808]], [[0], [0], [-1.6352]], [[0], [0], [-1.988]], [[0], [0], [-1.6867]], [[0], [0], [-2.4465]], [[0], [0], [-2.3816]], [[0], [0], [-2.2937]], [[0], [0], [-2.056]], [[0], [0], [-1.9596]], [[0], [0], [-2.5695]], [[0], [0], [-1.7875]], [[0], [0], [-1.9891]], [[0], [0], [-1.8144]], [[0], [0], [-1.9053]], [[0], [0], [-2.3588]], [[0], [0], [-2.1866]], [[0], [0], [-1.9853]], [[0], [-0.966], [-1.8859]]]]