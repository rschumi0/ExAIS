import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Ave20895 = tf.keras.layers.Input(shape=([2, 2]))
in1Ave20895 = tf.keras.layers.Input(shape=([2, 2]))
in0Con94857 = tf.keras.layers.Input(shape=([2, 2]))
in0Ave4542 = tf.keras.layers.Input(shape=([1, 1, 2, 2]))
in1Ave4542 = tf.keras.layers.Input(shape=([1, 1, 2, 2]))
in0Mul89209 = tf.keras.layers.Input(shape=([2, 1]))
in1Mul89209 = tf.keras.layers.Input(shape=([2, 1]))
in0Con46347 = tf.keras.layers.Input(shape=([2, 3]))

Ave20895 = keras.layers.Average(name = 'Ave20895', )([in0Ave20895,in1Ave20895])
Con94857 = keras.layers.Concatenate(axis=2, name = 'Con94857', )([Ave20895,in0Con94857])
Ave4542 = keras.layers.Average(name = 'Ave4542', )([in0Ave4542,in1Ave4542])
Res509 = keras.layers.Reshape((1, 1, 4), name = 'Res509', )(Ave4542)
Max45294 = keras.layers.MaxPool2D(pool_size=(1, 1), name = 'Max45294', )(Res509)
Res30918 = keras.layers.Reshape((1, 4), name = 'Res30918', )(Max45294)
Zer61245 = keras.layers.ZeroPadding1D(padding=((1, 0)), name = 'Zer61245', )(Res30918)
Mul89209 = keras.layers.Multiply(name = 'Mul89209', )([in0Mul89209,in1Mul89209])
Con46347 = keras.layers.Concatenate(axis=2, name = 'Con46347', )([Mul89209,in0Con46347])
Add19922 = keras.layers.Add(name = 'Add19922', )([Zer61245,Con46347])
Mul19140 = keras.layers.Multiply(name = 'Mul19140', )([Con94857,Add19922])
model = tf.keras.models.Model(inputs=[in0Ave20895,in1Ave20895,in0Con94857,in0Ave4542,in1Ave4542,in0Mul89209,in1Mul89209,in0Con46347], outputs=Mul19140)
in0Ave20895 = tf.constant([[[0.7946, 0.4569], [0.8517, 0.1186]]])
in1Ave20895 = tf.constant([[[0.9578, 0.5348], [0.5349, 0.2676]]])
in0Con94857 = tf.constant([[[0.3151, 0.2572], [0.9629, 0.4364]]])
in0Ave4542 = tf.constant([[[[[0.0193, 0.8161], [0.2128, 0.163]]]]])
in1Ave4542 = tf.constant([[[[[0.9916, 0.933], [0.9171, 0.6463]]]]])
in0Mul89209 = tf.constant([[[0.5545], [0.9204]]])
in1Mul89209 = tf.constant([[[0.7327], [0.0843]]])
in0Con46347 = tf.constant([[[0.4553, 0.725, 0.1915], [0.8347, 0.2411, 0.217]]])
print (np.array2string(model.predict([in0Ave20895,in1Ave20895,in0Con94857,in0Ave4542,in1Ave4542,in0Mul89209,in1Mul89209,in0Con46347],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Mul19140.png')

LAve20895 = average_layer([[[[0.7946, 0.4569], [0.8517, 0.1186]]], [[[0.9578, 0.5348], [0.5349, 0.2676]]]], Ave20895), 
LCon94857 = concatenate_layer([Ave20895,[[[0.3151, 0.2572], [0.9629, 0.4364]]]], 2, Con94857), 
LAve4542 = average_layer([[[[[[0.0193, 0.8161], [0.2128, 0.163]]]]], [[[[[0.9916, 0.933], [0.9171, 0.6463]]]]]], Ave4542), 
LRes509 = reshape_layer(Ave4542, [1, 1, 4], Res509), 
LMax45294 = max_pool2D_layer(Res509, 1, 1, Max45294), 
LRes30918 = reshape_layer(Max45294, [1, 4], Res30918), 
LZer61245 = zero_padding1D_layer(Res30918, 1, 0, Zer61245), 
LMul89209 = multiply_layer([[[[0.5545], [0.9204]]], [[[0.7327], [0.0843]]]], Mul89209), 
LCon46347 = concatenate_layer([Mul89209,[[[0.4553, 0.725, 0.1915], [0.8347, 0.2411, 0.217]]]], 2, Con46347), 
LAdd19922 = add_layer([Zer61245,Con46347], Add19922), 
LMul19140 = multiply_layer([Con94857,Add19922], Mul19140), 
exec_layers([LAve20895,LCon94857,LAve4542,LRes509,LMax45294,LRes30918,LZer61245,LMul89209,LCon46347,LAdd19922,LMul19140],["Ave20895","Con94857","Ave4542","Res509","Max45294","Res30918","Zer61245","Mul89209","Con46347","Add19922","Mul19140"],Mul19140,"Mul19140")

Actual (Unparsed): [[[0.3559844, 0.2257605, 0.2284475, 0.0492538], [0.4042214, 0.3300562, 0.7761455, 0.2712881]]]

Expected (Unparsed): [[[0.35598441983,0.225760505,0.2284475,0.0492538],[0.40422143787600007,0.33005617499999995,0.776145545,0.27128806]]]

Actual:   [[[0.356, 0.2258, 0.2285, 0.0493], [0.4043, 0.3301, 0.7762, 0.2713]]]

Expected: [[[0.356, 0.2258, 0.2285, 0.0493], [0.4043, 0.3301, 0.7762, 0.2713]]]