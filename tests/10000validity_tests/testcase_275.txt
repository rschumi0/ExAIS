import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Con20542 = tf.keras.layers.Input(shape=([1, 1, 2]))
in0Bat73484 = tf.keras.layers.Input(shape=([1, 3, 1]))
in0Con29828 = tf.keras.layers.Input(shape=([1, 3, 1]))
in0Cro32434 = tf.keras.layers.Input(shape=([2, 4, 2]))
in0Con26390 = tf.keras.layers.Input(shape=([1, 3, 14]))

Con20542 = keras.layers.Conv2D(4, (1, 1),strides=(1, 1), padding='valid', dilation_rate=(1, 1), name = 'Con20542', )(in0Con20542)
Res63768 = keras.layers.Reshape((1, 1, 4, 1), name = 'Res63768', )(Con20542)
Con57886 = keras.layers.Conv3DTranspose(4, (1, 1, 1),strides=(1, 1, 1), padding='same', name = 'Con57886', )(Res63768)
Res96865 = keras.layers.Reshape((1, 1, 16), name = 'Res96865', )(Con57886)
Zer88991 = keras.layers.ZeroPadding2D(padding=((0, 0), (2, 0)), name = 'Zer88991', )(Res96865)
Bat73484 = keras.layers.BatchNormalization(axis=1, epsilon=0.5457870012522665,  name = 'Bat73484', )(in0Bat73484)
Con29828 = keras.layers.Concatenate(axis=3, name = 'Con29828', )([Bat73484,in0Con29828])
Cro32434 = keras.layers.Cropping2D(cropping=((1, 0), (0, 2)), name = 'Cro32434', )(in0Cro32434)
Zer43022 = keras.layers.ZeroPadding2D(padding=((0, 0), (1, 0)), name = 'Zer43022', )(Cro32434)
Min9321 = keras.layers.Minimum(name = 'Min9321', )([Con29828,Zer43022])
Con26390 = keras.layers.Concatenate(axis=3, name = 'Con26390', )([Min9321,in0Con26390])
Max66199 = keras.layers.Maximum(name = 'Max66199', )([Zer88991,Con26390])
Res55893 = keras.layers.Reshape((1, 3, 16, 1), name = 'Res55893', )(Max66199)
Cro45337 = keras.layers.Cropping3D(cropping=((0, 0), (1, 1), (14, 1)), name = 'Cro45337', )(Res55893)
model = tf.keras.models.Model(inputs=[in0Con20542,in0Bat73484,in0Con29828,in0Cro32434,in0Con26390], outputs=Cro45337)
w = model.get_layer('Con20542').get_weights() 
w[0] = np.array([[[[0.4025, 0.6755, 0.6383, 0.8503], [0.274, 0.7388, 0.4028, 0.053]]]])
w[1] = np.array([0, 0, 0, 0])
model.get_layer('Con20542').set_weights(w) 
w = model.get_layer('Con57886').get_weights() 
w[0] = np.array([[[[[0.8224], [0.174], [0.594], [0.5464]]]]])
w[1] = np.array([0, 0, 0, 0])
model.get_layer('Con57886').set_weights(w) 
w = model.get_layer('Bat73484').get_weights() 
w[0] = np.array([0.1828])
w[1] = np.array([0.6394])
w[2] = np.array([0.4696])
w[3] = np.array([0.7399])
model.get_layer('Bat73484').set_weights(w) 
in0Con20542 = tf.constant([[[[0.5454, 0.6649]]]])
in0Bat73484 = tf.constant([[[[1.3301], [1.1375], [1.5191]]]])
in0Con29828 = tf.constant([[[[0.4168], [0.2643], [0.4992]]]])
in0Cro32434 = tf.constant([[[[1.7167, 1.8172], [1.2399, 1.8221], [1.0886, 1.3962], [1.6734, 1.4752]], [[1.6086, 1.1031], [1.5339, 1.824], [1.8459, 1.6798], [1.1842, 1.4612]]]])
in0Con26390 = tf.constant([[[[0.8362, 0.4037, 0.6466, 0.953, 0.5852, 0.3352, 0.5006, 0.9449, 0.722, 0.1455, 0.3187, 0.6158, 0.4362, 0.0178], [0.0955, 0.2841, 0.681, 0.3082, 0.7935, 0.503, 0.6142, 0.2435, 0.1539, 0.7376, 0.0668, 0.2173, 0.2376, 0.2746], [0.3186, 0.6711, 0.3689, 0.4632, 0.8429, 0.9352, 0.3566, 0.7257, 0.9669, 0.9447, 0.4878, 0.7728, 0.5848, 0.451]]]])
print (np.array2string(model.predict([in0Con20542,in0Bat73484,in0Con29828,in0Cro32434,in0Con26390],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Cro45337.png')

LCon20542 = conv2D_layer([[[[0.5454, 0.6649]]]], 1, 1,[[[[0.4025, 0.6755, 0.6383, 0.8503], [0.274, 0.7388, 0.4028, 0.053]]]],[0, 0, 0, 0], 1, 1, false, 1, 1, Con20542), 
LRes63768 = reshape_layer(Con20542, [1, 1, 4, 1], Res63768), 
LCon57886 = conv3D_transpose_layer(Res63768, 1, 1, 1,[[[[[0.8224], [0.174], [0.594], [0.5464]]]]],[0, 0, 0, 0], 1, 1, 1, true, Con57886), 
LRes96865 = reshape_layer(Con57886, [1, 1, 16], Res96865), 
LZer88991 = zero_padding2D_layer(Res96865, 0, 0, 2, 0, Zer88991), 
LBat73484 = batch_normalization_layer([[[[1.3301], [1.1375], [1.5191]]]], 1, 0.5457870012522665, [0.1828], [0.6394], [0.4696], [0.7399], Bat73484), 
LCon29828 = concatenate_layer([Bat73484,[[[[0.4168], [0.2643], [0.4992]]]]], 3, Con29828), 
LCro32434 = cropping2D_layer([[[[1.7167, 1.8172], [1.2399, 1.8221], [1.0886, 1.3962], [1.6734, 1.4752]], [[1.6086, 1.1031], [1.5339, 1.824], [1.8459, 1.6798], [1.1842, 1.4612]]]], 1, 0, 0, 2, Cro32434), 
LZer43022 = zero_padding2D_layer(Cro32434, 0, 0, 1, 0, Zer43022), 
LMin9321 = minimum_layer([Con29828,Zer43022], Min9321), 
LCon26390 = concatenate_layer([Min9321,[[[[0.8362, 0.4037, 0.6466, 0.953, 0.5852, 0.3352, 0.5006, 0.9449, 0.722, 0.1455, 0.3187, 0.6158, 0.4362, 0.0178], [0.0955, 0.2841, 0.681, 0.3082, 0.7935, 0.503, 0.6142, 0.2435, 0.1539, 0.7376, 0.0668, 0.2173, 0.2376, 0.2746], [0.3186, 0.6711, 0.3689, 0.4632, 0.8429, 0.9352, 0.3566, 0.7257, 0.9669, 0.9447, 0.4878, 0.7728, 0.5848, 0.451]]]]], 3, Con26390), 
LMax66199 = maximum_layer([Zer88991,Con26390], Max66199), 
LRes55893 = reshape_layer(Max66199, [1, 3, 16, 1], Res55893), 
LCro45337 = cropping3D_layer(Res55893, 0, 0, 1, 1, 14, 1, Cro45337), 
exec_layers([LCon20542,LRes63768,LCon57886,LRes96865,LZer88991,LBat73484,LCon29828,LCro32434,LZer43022,LMin9321,LCon26390,LMax66199,LRes55893,LCro45337],["Con20542","Res63768","Con57886","Res96865","Zer88991","Bat73484","Con29828","Cro32434","Zer43022","Min9321","Con26390","Max66199","Res55893","Cro45337"],Cro45337,"Cro45337")

Actual (Unparsed): [[[[[0.2376000]]]]]

Expected (Unparsed): [[[[[0.2376]]]]]

Actual:   [[[[[0.2376]]]]]

Expected: [[[[[0.2376]]]]]