import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Ave59244 = tf.keras.layers.Input(shape=([2, 2, 2]))
in1Ave59244 = tf.keras.layers.Input(shape=([2, 2, 2]))
in0Con587 = tf.keras.layers.Input(shape=([3, 3]))
in0Den39697 = tf.keras.layers.Input(shape=([3, 4]))

Ave59244 = keras.layers.Average(name = 'Ave59244', )([in0Ave59244,in1Ave59244])
Glo86627 = keras.layers.GlobalMaxPool2D(name = 'Glo86627', )(Ave59244)
Res18475 = keras.layers.Reshape((2, 1), name = 'Res18475', )(Glo86627)
Zer58898 = keras.layers.ZeroPadding1D(padding=((1, 0)), name = 'Zer58898', )(Res18475)
Con587 = keras.layers.Concatenate(axis=2, name = 'Con587', )([Zer58898,in0Con587])
Den39697 = keras.layers.Dense(4,name = 'Den39697', )(in0Den39697)
Min34574 = keras.layers.Minimum(name = 'Min34574', )([Con587,Den39697])
Ave30778 = keras.layers.AveragePooling1D(pool_size=(1), strides=(1), padding='same', name = 'Ave30778', )(Min34574)
model = tf.keras.models.Model(inputs=[in0Ave59244,in1Ave59244,in0Con587,in0Den39697], outputs=Ave30778)
w = model.get_layer('Den39697').get_weights() 
w[0] = np.array([[0.8519, 0.9792, 0.8271, 0.1364], [0.0605, 0.0988, 0.346, 0.7677], [0.833, 0.7945, 0.8508, 0.8012], [0.9071, 0.6122, 0.0074, 0.189]])
w[1] = np.array([0.1501, 0.8755, 0.5105, 0.2197])
model.get_layer('Den39697').set_weights(w) 
in0Ave59244 = tf.constant([[[[0.2373, 0.8136], [0.4674, 0.1344]], [[0.5157, 0.1604], [0.2238, 0.1615]]]])
in1Ave59244 = tf.constant([[[[0.8871, 0.8378], [0.5925, 0.482]], [[0.2937, 0.2103], [0.4726, 0.2931]]]])
in0Con587 = tf.constant([[[0.1131, 0.8388, 0.4389], [0.7404, 0.2507, 0.7029], [0.3285, 0.4724, 0.8657]]])
in0Den39697 = tf.constant([[[0.4823, 0.7531, 0.9891, 0.123], [0.441, 0.0044, 0.5358, 0.1911], [0.1217, 0.0802, 0.4898, 0.7723]]])
print (np.array2string(model.predict([in0Ave59244,in1Ave59244,in0Con587,in0Den39697],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Ave30778.png')

LAve59244 = average_layer([[[[[0.2373, 0.8136], [0.4674, 0.1344]], [[0.5157, 0.1604], [0.2238, 0.1615]]]], [[[[0.8871, 0.8378], [0.5925, 0.482]], [[0.2937, 0.2103], [0.4726, 0.2931]]]]], Ave59244), 
LGlo86627 = global_max_pool2D_layer(Ave59244, Glo86627), 
LRes18475 = reshape_layer(Glo86627, [2, 1], Res18475), 
LZer58898 = zero_padding1D_layer(Res18475, 1, 0, Zer58898), 
LCon587 = concatenate_layer([Zer58898,[[[0.1131, 0.8388, 0.4389], [0.7404, 0.2507, 0.7029], [0.3285, 0.4724, 0.8657]]]], 2, Con587), 
LDen39697 = dense_layer([[[0.4823, 0.7531, 0.9891, 0.123], [0.441, 0.0044, 0.5358, 0.1911], [0.1217, 0.0802, 0.4898, 0.7723]]], [[0.8519, 0.9792, 0.8271, 0.1364], [0.0605, 0.0988, 0.346, 0.7677], [0.833, 0.7945, 0.8508, 0.8012], [0.9071, 0.6122, 0.0074, 0.189]],[0.1501, 0.8755, 0.5105, 0.2197], Den39697), 
LMin34574 = minimum_layer([Con587,Den39697], Min34574), 
LAve30778 = average_pooling1D_layer(Min34574, 1, 1, true, Ave30778), 
exec_layers([LAve59244,LGlo86627,LRes18475,LZer58898,LCon587,LDen39697,LMin34574,LAve30778],["Ave59244","Glo86627","Res18475","Zer58898","Con587","Den39697","Min34574","Ave30778"],Ave30778,"Ave30778")

Actual (Unparsed): [[[0.0000000, 0.1131000, 0.8388000, 0.4389000], [0.5622000, 0.7404000, 0.2507000, 0.7029000], [0.8257000, 0.3285000, 0.4724000, 0.8362619]]]

Expected (Unparsed): [[[0,0.1131,0.8388,0.4389],[0.5622,0.7404,0.2507,0.7029],[0.8257,0.3285,0.4724,0.8362618799999999]]]

Actual:   [[[0, 0.1131, 0.8388, 0.4389], [0.5622, 0.7404, 0.2507, 0.7029], [0.8257, 0.3285, 0.4724, 0.8363]]]

Expected: [[[0, 0.1131, 0.8388, 0.4389], [0.5622, 0.7404, 0.2507, 0.7029], [0.8257, 0.3285, 0.4724, 0.8363]]]