import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Ave6684 = tf.keras.layers.Input(shape=([1, 1]))
in1Ave6684 = tf.keras.layers.Input(shape=([1, 1]))

Ave6684 = keras.layers.Average(name = 'Ave6684', )([in0Ave6684,in1Ave6684])
Cro60452 = keras.layers.Cropping1D(cropping=((0, 0)), name = 'Cro60452', )(Ave6684)
Lea94516 = keras.layers.LeakyReLU(alpha=4.2227680582720275, name = 'Lea94516', )(Cro60452)
Res68033 = keras.layers.Reshape((1, 1, 1), name = 'Res68033', )(Lea94516)
Res53067 = keras.layers.Reshape((1, 1, 1, 1), name = 'Res53067', )(Res68033)
Up_65785 = keras.layers.UpSampling3D(size=(2, 2, 2), name = 'Up_65785', )(Res53067)
model = tf.keras.models.Model(inputs=[in0Ave6684,in1Ave6684], outputs=Up_65785)
in0Ave6684 = tf.constant([[[0.2224]]])
in1Ave6684 = tf.constant([[[0.166]]])
print (np.array2string(model.predict([in0Ave6684,in1Ave6684],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Up_65785.png')

LAve6684 = average_layer([[[[0.2224]]], [[[0.166]]]], Ave6684), 
LCro60452 = cropping1D_layer(Ave6684, 0, 0, Cro60452), 
LLea94516 = leaky_relu_layer(Cro60452, 4.2227680582720275, Lea94516), 
LRes68033 = reshape_layer(Lea94516, [1, 1, 1], Res68033), 
LRes53067 = reshape_layer(Res68033, [1, 1, 1, 1], Res53067), 
LUp_65785 = up_sampling3D_layer(Res53067, 2, 2, 2, Up_65785), 
exec_layers([LAve6684,LCro60452,LLea94516,LRes68033,LRes53067,LUp_65785],["Ave6684","Cro60452","Lea94516","Res68033","Res53067","Up_65785"],Up_65785,"Up_65785")

Actual (Unparsed): [[[[[0.1942000], [0.1942000]], [[0.1942000], [0.1942000]]], [[[0.1942000], [0.1942000]], [[0.1942000], [0.1942000]]]]]

Expected (Unparsed): [[[[[0.19419999999999998],[0.19419999999999998]],[[0.19419999999999998],[0.19419999999999998]]],[[[0.19419999999999998],[0.19419999999999998]],[[0.19419999999999998],[0.19419999999999998]]]]]

Actual:   [[[[[0.1942], [0.1942]], [[0.1942], [0.1942]]], [[[0.1942], [0.1942]], [[0.1942], [0.1942]]]]]

Expected: [[[[[0.1942], [0.1942]], [[0.1942], [0.1942]]], [[[0.1942], [0.1942]], [[0.1942], [0.1942]]]]]