import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Cro46852 = tf.keras.layers.Input(shape=([4, 1]))

Cro46852 = keras.layers.Cropping1D(cropping=((2, 0)), name = 'Cro46852', )(in0Cro46852)
Res32134 = keras.layers.Reshape((2, 1, 1), name = 'Res32134', )(Cro46852)
Dep38348 = keras.layers.DepthwiseConv2D((2, 1),strides=(2, 2), padding='same', name = 'Dep38348', )(Res32134)
Bat19847 = keras.layers.BatchNormalization(axis=2, epsilon=0.39859860058419516,  name = 'Bat19847', )(Dep38348)
model = tf.keras.models.Model(inputs=[in0Cro46852], outputs=Bat19847)
w = model.get_layer('Dep38348').get_weights() 
w[0] = np.array([[[[0.4188]]], [[[0.5671]]]])
w[1] = np.array([0])
model.get_layer('Dep38348').set_weights(w) 
w = model.get_layer('Bat19847').get_weights() 
w[0] = np.array([0.1818])
w[1] = np.array([0.0737])
w[2] = np.array([0.701])
w[3] = np.array([0.2297])
model.get_layer('Bat19847').set_weights(w) 
in0Cro46852 = tf.constant([[[1.6723], [1.2297], [1.8901], [1.4209]]])
print (np.array2string(model.predict([in0Cro46852],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Bat19847.png')

LCro46852 = cropping1D_layer([[[1.6723], [1.2297], [1.8901], [1.4209]]], 2, 0, Cro46852), 
LRes32134 = reshape_layer(Cro46852, [2, 1, 1], Res32134), 
LDep38348 = depthwise_conv2D_layer(Res32134, 2, 1,[[[[0.4188]]], [[[0.5671]]]],[0], 2, 2, true, Dep38348), 
LBat19847 = batch_normalization_layer(Dep38348, 2, 0.39859860058419516, [0.1818], [0.0737], [0.701], [0.2297], Bat19847), 
exec_layers([LCro46852,LRes32134,LDep38348,LBat19847],["Cro46852","Res32134","Dep38348","Bat19847"],Bat19847,"Bat19847")

Actual (Unparsed): [[[[0.2792873]]]]

Expected (Unparsed): [[[[0.27928732629141095]]]]

Actual:   [[[[0.2793]]]]

Expected: [[[[0.2793]]]]