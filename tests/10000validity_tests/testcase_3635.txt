import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Fla35332 = tf.keras.layers.Input(shape=([4, 2]))
in0Con54803 = tf.keras.layers.Input(shape=([2, 3, 2, 2]))
in0Sub40911 = tf.keras.layers.Input(shape=([2, 3, 2, 3]))
in1Sub40911 = tf.keras.layers.Input(shape=([2, 3, 2, 3]))

Fla35332 = keras.layers.Flatten(name = 'Fla35332', )(in0Fla35332)
Res81202 = keras.layers.Reshape((8, 1), name = 'Res81202', )(Fla35332)
Ave88997 = keras.layers.AveragePooling1D(pool_size=(8), strides=(7), padding='valid', name = 'Ave88997', )(Res81202)
Res69341 = keras.layers.Reshape((1, 1, 1), name = 'Res69341', )(Ave88997)
Res24058 = keras.layers.Reshape((1, 1, 1, 1), name = 'Res24058', )(Res69341)
Zer39197 = keras.layers.ZeroPadding3D(padding=((1, 0), (2, 0), (1, 0)), name = 'Zer39197', )(Res24058)
Con54803 = keras.layers.Concatenate(axis=4, name = 'Con54803', )([Zer39197,in0Con54803])
Sub40911 = keras.layers.Subtract(name = 'Sub40911', )([in0Sub40911,in1Sub40911])
Min96438 = keras.layers.Minimum(name = 'Min96438', )([Con54803,Sub40911])
Glo97463 = keras.layers.GlobalMaxPool3D(name = 'Glo97463', )(Min96438)
model = tf.keras.models.Model(inputs=[in0Fla35332,in0Con54803,in0Sub40911,in1Sub40911], outputs=Glo97463)
in0Fla35332 = tf.constant([[[1.862, 1.4726], [1.6049, 1.1], [1.1196, 1.7536], [1.0894, 1.7407]]])
in0Con54803 = tf.constant([[[[[0.4573, 0.2469], [0.1287, 0.6843]], [[0.9074, 0.8875], [0.6749, 0.4623]], [[0.7369, 0.5911], [0.6687, 0.7915]]], [[[0.2529, 0.2518], [0.8559, 0.992]], [[0.0414, 0.5801], [0.1881, 0.8134]], [[0.9094, 0.4889], [0.3733, 0.2536]]]]])
in0Sub40911 = tf.constant([[[[[0.6095, 0.5372, 0.9148], [0.185, 0.183, 0.4578]], [[0.8455, 0.0011, 0.7897], [0.2788, 0.5668, 0.1323]], [[0.7448, 0.3978, 0.3229], [0.7515, 0.3332, 0.4967]]], [[[0.51, 0.6917, 0.0373], [0.9868, 0.6659, 0.0124]], [[0.9061, 0.7004, 0.9884], [0.6455, 0.9693, 0.4866]], [[0.8499, 0.3482, 0.147], [0.9865, 0.7762, 0.3821]]]]])
in1Sub40911 = tf.constant([[[[[0.802, 0.8796, 0.0099], [0.4392, 0.942, 0.3241]], [[0.0876, 0.337, 0.0893], [0.143, 0.8272, 0.9191]], [[0.0047, 0.5499, 0.7429], [0.4126, 0.779, 0.8522]]], [[[0.1831, 0.2186, 0.2841], [0.6227, 0.4238, 0.742]], [[0.618, 0.2871, 0.5361], [0.4021, 0.9661, 0.9394]], [[0.0993, 0.4085, 0.2566], [0.4698, 0.7292, 0.2359]]]]])
print (np.array2string(model.predict([in0Fla35332,in0Con54803,in0Sub40911,in1Sub40911],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Glo97463.png')

LFla35332 = flatten_layer([[[1.862, 1.4726], [1.6049, 1.1], [1.1196, 1.7536], [1.0894, 1.7407]]], Fla35332), 
LRes81202 = reshape_layer(Fla35332, [8, 1], Res81202), 
LAve88997 = average_pooling1D_layer(Res81202, 8, 7, false, Ave88997), 
LRes69341 = reshape_layer(Ave88997, [1, 1, 1], Res69341), 
LRes24058 = reshape_layer(Res69341, [1, 1, 1, 1], Res24058), 
LZer39197 = zero_padding3D_layer(Res24058, 1, 0, 2, 0, 1, 0, Zer39197), 
LCon54803 = concatenate_layer([Zer39197,[[[[[0.4573, 0.2469], [0.1287, 0.6843]], [[0.9074, 0.8875], [0.6749, 0.4623]], [[0.7369, 0.5911], [0.6687, 0.7915]]], [[[0.2529, 0.2518], [0.8559, 0.992]], [[0.0414, 0.5801], [0.1881, 0.8134]], [[0.9094, 0.4889], [0.3733, 0.2536]]]]]], 4, Con54803), 
LSub40911 = subtract_layer([[[[[0.6095, 0.5372, 0.9148], [0.185, 0.183, 0.4578]], [[0.8455, 0.0011, 0.7897], [0.2788, 0.5668, 0.1323]], [[0.7448, 0.3978, 0.3229], [0.7515, 0.3332, 0.4967]]], [[[0.51, 0.6917, 0.0373], [0.9868, 0.6659, 0.0124]], [[0.9061, 0.7004, 0.9884], [0.6455, 0.9693, 0.4866]], [[0.8499, 0.3482, 0.147], [0.9865, 0.7762, 0.3821]]]]], [[[[[0.802, 0.8796, 0.0099], [0.4392, 0.942, 0.3241]], [[0.0876, 0.337, 0.0893], [0.143, 0.8272, 0.9191]], [[0.0047, 0.5499, 0.7429], [0.4126, 0.779, 0.8522]]], [[[0.1831, 0.2186, 0.2841], [0.6227, 0.4238, 0.742]], [[0.618, 0.2871, 0.5361], [0.4021, 0.9661, 0.9394]], [[0.0993, 0.4085, 0.2566], [0.4698, 0.7292, 0.2359]]]]], Sub40911), 
LMin96438 = minimum_layer([Con54803,Sub40911], Min96438), 
LGlo97463 = global_max_pool3D_layer(Min96438, Glo97463), 
exec_layers([LFla35332,LRes81202,LAve88997,LRes69341,LRes24058,LZer39197,LCon54803,LSub40911,LMin96438,LGlo97463],["Fla35332","Res81202","Ave88997","Res69341","Res24058","Zer39197","Con54803","Sub40911","Min96438","Glo97463"],Glo97463,"Glo97463")

Actual (Unparsed): [[0.5167000, 0.2529000, 0.7004000]]

Expected (Unparsed): [[0.5167,0.2529,0.7003999999999999]]

Actual:   [[0.5167, 0.2529, 0.7004]]

Expected: [[0.5167, 0.2529, 0.7004]]