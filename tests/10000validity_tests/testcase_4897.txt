import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Cro20131 = tf.keras.layers.Input(shape=([1, 4]))
in0Con11659 = tf.keras.layers.Input(shape=([1]))
in0Up_67491 = tf.keras.layers.Input(shape=([3, 4, 2]))

Cro20131 = keras.layers.Cropping1D(cropping=((0, 0)), name = 'Cro20131', )(in0Cro20131)
Zer69188 = keras.layers.ZeroPadding1D(padding=((1, 1)), name = 'Zer69188', )(Cro20131)
Sim27608 = keras.layers.SimpleRNN(1,name = 'Sim27608', )(Zer69188)
Con11659 = keras.layers.Concatenate(axis=1, name = 'Con11659', )([Sim27608,in0Con11659])
Up_67491 = keras.layers.UpSampling2D(size=(1, 1), name = 'Up_67491', )(in0Up_67491)
Den30729 = keras.layers.Dense(4,name = 'Den30729', )(Up_67491)
Res35272 = keras.layers.Reshape((3, 16), name = 'Res35272', )(Den30729)
LST82637 = keras.layers.LSTM(2,recurrent_activation='sigmoid', name = 'LST82637', )(Res35272)
Ave81350 = keras.layers.Average(name = 'Ave81350', )([Con11659,LST82637])
model = tf.keras.models.Model(inputs=[in0Cro20131,in0Con11659,in0Up_67491], outputs=Ave81350)
w = model.get_layer('Sim27608').get_weights() 
w[0] = np.array([[2], [9], [6], [1]])
w[1] = np.array([[6]])
w[2] = np.array([9])
model.get_layer('Sim27608').set_weights(w) 
w = model.get_layer('Den30729').get_weights() 
w[0] = np.array([[0.5274, 0.0449, 0.1412, 0.9559], [0.585, 0.0111, 0.8054, 0.3872]])
w[1] = np.array([0.5613, 0.3015, 0.1046, 0.4651])
model.get_layer('Den30729').set_weights(w) 
w = model.get_layer('LST82637').get_weights() 
w[0] = np.array([[1, 1, 4, 4, 2, 3, 8, 9], [9, 5, 8, 6, 5, 6, 7, 7], [6, 8, 10, 10, 7, 4, 2, 3], [5, 3, 2, 2, 2, 7, 1, 10], [4, 10, 8, 3, 9, 6, 8, 2], [10, 3, 6, 10, 4, 6, 5, 1], [8, 4, 2, 8, 9, 9, 7, 9], [9, 2, 4, 1, 1, 9, 7, 10], [8, 6, 10, 5, 3, 9, 5, 1], [3, 1, 4, 7, 7, 1, 7, 2], [7, 8, 3, 3, 5, 2, 5, 10], [3, 4, 7, 2, 9, 9, 6, 10], [9, 1, 10, 6, 4, 9, 10, 10], [4, 6, 10, 7, 2, 2, 1, 6], [3, 4, 7, 10, 7, 8, 2, 5], [6, 4, 5, 9, 6, 10, 5, 2]])
w[1] = np.array([[2, 7, 2, 7, 7, 10, 1, 2], [9, 8, 9, 3, 5, 5, 7, 7]])
w[2] = np.array([6, 2, 9, 6, 8, 3, 7, 7])
model.get_layer('LST82637').set_weights(w) 
in0Cro20131 = tf.constant([[[1.4646, 1.8234, 1.8782, 1.5614]]])
in0Con11659 = tf.constant([[0.5748]])
in0Up_67491 = tf.constant([[[[1.8405, 1.2335], [1.5663, 1.9627], [1.5024, 1.6842], [1.3305, 1.6754]], [[1.0859, 1.2596], [1.2244, 1.5292], [1.8392, 1.4707], [1.7975, 1.7599]], [[1.5527, 1.0701], [1.0719, 1.5382], [1.3156, 1.0667], [1.2108, 1.102]]]])
print (np.array2string(model.predict([in0Cro20131,in0Con11659,in0Up_67491],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Ave81350.png')

LCro20131 = cropping1D_layer([[[1.4646, 1.8234, 1.8782, 1.5614]]], 0, 0, Cro20131), 
LZer69188 = zero_padding1D_layer(Cro20131, 1, 1, Zer69188), 
LSim27608 = simple_rnn_layer(Zer69188,[[2], [9], [6], [1]],[[6]],[9], Sim27608), 
LCon11659 = concatenate_layer([Sim27608,[[0.5748]]], 1, Con11659), 
LUp_67491 = up_sampling2D_layer([[[[1.8405, 1.2335], [1.5663, 1.9627], [1.5024, 1.6842], [1.3305, 1.6754]], [[1.0859, 1.2596], [1.2244, 1.5292], [1.8392, 1.4707], [1.7975, 1.7599]], [[1.5527, 1.0701], [1.0719, 1.5382], [1.3156, 1.0667], [1.2108, 1.102]]]], 1, 1, Up_67491), 
LDen30729 = dense_layer(Up_67491, [[0.5274, 0.0449, 0.1412, 0.9559], [0.585, 0.0111, 0.8054, 0.3872]],[0.5613, 0.3015, 0.1046, 0.4651], Den30729), 
LRes35272 = reshape_layer(Den30729, [3, 16], Res35272), 
LLST82637 = lstm_layer(Res35272,[[1, 1, 4, 4, 2, 3, 8, 9], [9, 5, 8, 6, 5, 6, 7, 7], [6, 8, 10, 10, 7, 4, 2, 3], [5, 3, 2, 2, 2, 7, 1, 10], [4, 10, 8, 3, 9, 6, 8, 2], [10, 3, 6, 10, 4, 6, 5, 1], [8, 4, 2, 8, 9, 9, 7, 9], [9, 2, 4, 1, 1, 9, 7, 10], [8, 6, 10, 5, 3, 9, 5, 1], [3, 1, 4, 7, 7, 1, 7, 2], [7, 8, 3, 3, 5, 2, 5, 10], [3, 4, 7, 2, 9, 9, 6, 10], [9, 1, 10, 6, 4, 9, 10, 10], [4, 6, 10, 7, 2, 2, 1, 6], [3, 4, 7, 10, 7, 8, 2, 5], [6, 4, 5, 9, 6, 10, 5, 2]],[[2, 7, 2, 7, 7, 10, 1, 2], [9, 8, 9, 3, 5, 5, 7, 7]],[6, 2, 9, 6, 8, 3, 7, 7], LST82637), 
LAve81350 = average_layer([Con11659,LST82637], Ave81350), 
exec_layers([LCro20131,LZer69188,LSim27608,LCon11659,LUp_67491,LDen30729,LRes35272,LLST82637,LAve81350],["Cro20131","Zer69188","Sim27608","Con11659","Up_67491","Den30729","Res35272","LST82637","Ave81350"],Ave81350,"Ave81350")

Actual (Unparsed): [[0.9975274, 0.7849274]]

Expected (Unparsed): [[0.9975273768432716,0.7849273768433652]]

Actual:   [[0.9976, 0.785]]

Expected: [[0.9976, 0.785]]