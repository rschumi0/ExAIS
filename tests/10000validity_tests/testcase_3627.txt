import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Mul51618 = tf.keras.layers.Input(shape=([1, 1, 1, 2]))
in1Mul51618 = tf.keras.layers.Input(shape=([1, 1, 1, 2]))

Mul51618 = keras.layers.Multiply(name = 'Mul51618', )([in0Mul51618,in1Mul51618])
Res71053 = keras.layers.Reshape((1, 1, 2), name = 'Res71053', )(Mul51618)
Res26645 = keras.layers.Reshape((1, 2), name = 'Res26645', )(Res71053)
Sep59341 = keras.layers.SeparableConv1D(2, (1),strides=(1), padding='valid', name = 'Sep59341', )(Res26645)
model = tf.keras.models.Model(inputs=[in0Mul51618,in1Mul51618], outputs=Sep59341)
w = model.get_layer('Sep59341').get_weights() 
w[0] = np.array([[[0.2314], [0.3364]]])
w[1] = np.array([[[0.4814, 0.8725], [0.0877, 0.3421]]])
w[2] = np.array([0, 0])
model.get_layer('Sep59341').set_weights(w) 
in0Mul51618 = tf.constant([[[[[0.9882, 0.5613]]]]])
in1Mul51618 = tf.constant([[[[[0.1379, 0.9945]]]]])
print (np.array2string(model.predict([in0Mul51618,in1Mul51618],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Sep59341.png')

LMul51618 = multiply_layer([[[[[[0.9882, 0.5613]]]]], [[[[[0.1379, 0.9945]]]]]], Mul51618), 
LRes71053 = reshape_layer(Mul51618, [1, 1, 2], Res71053), 
LRes26645 = reshape_layer(Res71053, [1, 2], Res26645), 
LSep59341 = separable_conv1D_layer(Res26645, 1,[[[[0.2314], [0.3364]]],[[[0.4814, 0.8725], [0.0877, 0.3421]]]],[0, 0], 1, false, Sep59341), 
exec_layers([LMul51618,LRes71053,LRes26645,LSep59341],["Mul51618","Res71053","Res26645","Sep59341"],Sep59341,"Sep59341")

Actual (Unparsed): [[[0.0316488, 0.0917535]]]

Expected (Unparsed): [[[0.0316487889502668,0.09175349414462401]]]

Actual:   [[[0.0317, 0.0918]]]

Expected: [[[0.0317, 0.0918]]]