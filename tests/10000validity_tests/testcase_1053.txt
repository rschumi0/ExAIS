import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Sof61818 = tf.keras.layers.Input(shape=([1, 2]))
in0Con77850 = tf.keras.layers.Input(shape=([2, 2]))
in0Dot80206 = tf.keras.layers.Input(shape=([3, 3]))
in1Dot80206 = tf.keras.layers.Input(shape=([3, 3]))

Sof61818 = keras.layers.Softmax(axis=1, name = 'Sof61818', input_shape=(1, 2))(in0Sof61818)
Zer1864 = keras.layers.ZeroPadding1D(padding=((1, 0)), name = 'Zer1864', )(Sof61818)
Con77850 = keras.layers.Concatenate(axis=2, name = 'Con77850', )([Zer1864,in0Con77850])
Dot80206 = keras.layers.Dot(axes=(2, 1), name = 'Dot80206', )([in0Dot80206,in1Dot80206])
Loc64862 = keras.layers.LocallyConnected1D(4, (2),strides=(1), name = 'Loc64862', )(Dot80206)
Min66438 = keras.layers.Minimum(name = 'Min66438', )([Con77850,Loc64862])
model = tf.keras.models.Model(inputs=[in0Sof61818,in0Con77850,in0Dot80206,in1Dot80206], outputs=Min66438)
w = model.get_layer('Loc64862').get_weights() 
w[0] = np.array([[[0.2072, 0.8325, 0.522, 0.504], [0.2143, 0.1392, 0.0061, 0.0491], [0.046, 0.9234, 0.1352, 0.4655], [0.706, 0.3692, 0.6619, 0.0459], [0.791, 0.198, 0.651, 0.9551], [0.161, 0.9308, 0.0346, 0.2365]], [[0.0954, 0.4452, 0.2639, 0.4116], [0.9457, 0.1165, 0.9136, 0.6489], [0.8336, 0.6228, 0.9575, 0.7266], [0.3851, 0.447, 0.7031, 0.9187], [0.8393, 0.2144, 0.0536, 0.4901], [0.1275, 0.2649, 0.8433, 0.7069]]])
w[1] = np.array([[0, 0, 0, 0], [0, 0, 0, 0]])
model.get_layer('Loc64862').set_weights(w) 
in0Sof61818 = tf.constant([[[0.1146, 0.8644]]])
in0Con77850 = tf.constant([[[0.7279, 0.4317], [0.7395, 0.6106]]])
in0Dot80206 = tf.constant([[[0.3026, 0.8254, 0.9369], [0.7054, 0.2427, 0.339], [0.1562, 0.5701, 0.6996]]])
in1Dot80206 = tf.constant([[[0.9149, 0.4621, 0.8673], [0.7658, 0.0032, 0.1208], [0.1259, 0.3104, 0.4905]]])
print (np.array2string(model.predict([in0Sof61818,in0Con77850,in0Dot80206,in1Dot80206],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Min66438.png')

LSof61818 = softmax_layer([[[0.1146, 0.8644]]], 1, Sof61818), 
LZer1864 = zero_padding1D_layer(Sof61818, 1, 0, Zer1864), 
LCon77850 = concatenate_layer([Zer1864,[[[0.7279, 0.4317], [0.7395, 0.6106]]]], 2, Con77850), 
LDot80206 = dot_layer([[[0.3026, 0.8254, 0.9369], [0.7054, 0.2427, 0.339], [0.1562, 0.5701, 0.6996]]], [[[0.9149, 0.4621, 0.8673], [0.7658, 0.0032, 0.1208], [0.1259, 0.3104, 0.4905]]], 2, 1, Dot80206), 
LLoc64862 = locally_connected1D_layer(Dot80206, 2,[[[0.2072, 0.8325, 0.522, 0.504], [0.2143, 0.1392, 0.0061, 0.0491], [0.046, 0.9234, 0.1352, 0.4655], [0.706, 0.3692, 0.6619, 0.0459], [0.791, 0.198, 0.651, 0.9551], [0.161, 0.9308, 0.0346, 0.2365]], [[0.0954, 0.4452, 0.2639, 0.4116], [0.9457, 0.1165, 0.9136, 0.6489], [0.8336, 0.6228, 0.9575, 0.7266], [0.3851, 0.447, 0.7031, 0.9187], [0.8393, 0.2144, 0.0536, 0.4901], [0.1275, 0.2649, 0.8433, 0.7069]]],[[0, 0, 0, 0], [0, 0, 0, 0]], 1, Loc64862), 
LMin66438 = minimum_layer([Con77850,Loc64862], Min66438), 
exec_layers([LSof61818,LZer1864,LCon77850,LDot80206,LLoc64862,LMin66438],["Sof61818","Zer1864","Con77850","Dot80206","Loc64862","Min66438"],Min66438,"Min66438")

Actual (Unparsed): [[[0.0000000, 0.0000000, 0.7279000, 0.4317000], [1.0000000, 1.0000000, 0.7395000, 0.6106000]]]

Expected (Unparsed): [[[0,0,0.7279,0.4317],[1.0,1.0,0.7395,0.6106]]]

Actual:   [[[0, 0, 0.7279, 0.4317], [1, 1, 0.7395, 0.6106]]]

Expected: [[[0, 0, 0.7279, 0.4317], [1, 1, 0.7395, 0.6106]]]