import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Loc8201 = tf.keras.layers.Input(shape=([1, 2, 2]))
in0Dot66352 = tf.keras.layers.Input(shape=([3, 2]))
in1Dot66352 = tf.keras.layers.Input(shape=([3, 2]))
in0Per65872 = tf.keras.layers.Input(shape=([2, 2]))
in0Con32242 = tf.keras.layers.Input(shape=([3, 1]))
in0Con71183 = tf.keras.layers.Input(shape=([3, 3]))
in0Ave8080 = tf.keras.layers.Input(shape=([2, 1]))
in1Ave8080 = tf.keras.layers.Input(shape=([2, 1]))
in0Con83831 = tf.keras.layers.Input(shape=([3, 5]))

Loc8201 = keras.layers.LocallyConnected2D(3, (1, 1),strides=(1, 1), name = 'Loc8201', )(in0Loc8201)
Max23500 = keras.layers.MaxPool2D(pool_size=(1, 1), name = 'Max23500', )(Loc8201)
Res48752 = keras.layers.Reshape((1, 6), name = 'Res48752', )(Max23500)
Zer54032 = keras.layers.ZeroPadding1D(padding=((2, 0)), name = 'Zer54032', )(Res48752)
Dot66352 = keras.layers.Dot(axes=(2, 2), name = 'Dot66352', )([in0Dot66352,in1Dot66352])
ELU73954 = keras.layers.ELU(alpha=6.306370164608573, name = 'ELU73954', )(Dot66352)
Per65872 = keras.layers.Permute((2,1), name = 'Per65872',)(in0Per65872)
Zer35074 = keras.layers.ZeroPadding1D(padding=((1, 0)), name = 'Zer35074', )(Per65872)
Con32242 = keras.layers.Concatenate(axis=2, name = 'Con32242', )([Zer35074,in0Con32242])
Ave2744 = keras.layers.Average(name = 'Ave2744', )([ELU73954,Con32242])
Con71183 = keras.layers.Concatenate(axis=2, name = 'Con71183', )([Ave2744,in0Con71183])
Max55797 = keras.layers.Maximum(name = 'Max55797', )([Zer54032,Con71183])
Ave8080 = keras.layers.Average(name = 'Ave8080', )([in0Ave8080,in1Ave8080])
Zer79914 = keras.layers.ZeroPadding1D(padding=((1, 0)), name = 'Zer79914', )(Ave8080)
Con83831 = keras.layers.Concatenate(axis=2, name = 'Con83831', )([Zer79914,in0Con83831])
Max6923 = keras.layers.Maximum(name = 'Max6923', )([Max55797,Con83831])
model = tf.keras.models.Model(inputs=[in0Loc8201,in0Dot66352,in1Dot66352,in0Per65872,in0Con32242,in0Con71183,in0Ave8080,in1Ave8080,in0Con83831], outputs=Max6923)
w = model.get_layer('Loc8201').get_weights() 
w[0] = np.array([[[0.9225, 0.5189, 0.0576], [0.308, 0.4982, 0.1282]], [[0.9386, 0.0974, 0.1291], [0.1744, 0.4366, 0.3411]]])
w[1] = np.array([[[0, 0, 0], [0, 0, 0]]])
model.get_layer('Loc8201').set_weights(w) 
in0Loc8201 = tf.constant([[[[0.0352, 0.6371], [0.8894, 0.9893]]]])
in0Dot66352 = tf.constant([[[0.1682, 0.8416], [0.5467, 0.0848], [0.8381, 0.9106]]])
in1Dot66352 = tf.constant([[[0.7348, 0.1775], [0.715, 0.3272], [0.5394, 0.5155]]])
in0Per65872 = tf.constant([[[1.7696, 1.0536], [1.7353, 1.6088]]])
in0Con32242 = tf.constant([[[0.751], [0.4299], [0.5004]]])
in0Con71183 = tf.constant([[[0.1592, 0.9103, 0.5438], [0.7029, 0.9088, 0.4195], [0.5484, 0.7899, 0.0533]]])
in0Ave8080 = tf.constant([[[0.8188], [0.7066]]])
in1Ave8080 = tf.constant([[[0.5634], [0.6236]]])
in0Con83831 = tf.constant([[[0.1038, 0.691, 0.3202, 0.468, 0.378], [0.6026, 0.673, 0.1365, 0.7956, 0.3828], [0.7636, 0.9208, 0.8679, 0.3536, 0.7195]]])
print (np.array2string(model.predict([in0Loc8201,in0Dot66352,in1Dot66352,in0Per65872,in0Con32242,in0Con71183,in0Ave8080,in1Ave8080,in0Con83831],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Max6923.png')

LLoc8201 = locally_connected2D_layer([[[[0.0352, 0.6371], [0.8894, 0.9893]]]], 1, 1,[[[0.9225, 0.5189, 0.0576], [0.308, 0.4982, 0.1282]], [[0.9386, 0.0974, 0.1291], [0.1744, 0.4366, 0.3411]]],[[[0, 0, 0], [0, 0, 0]]], 1, 1, Loc8201), 
LMax23500 = max_pool2D_layer(Loc8201, 1, 1, Max23500), 
LRes48752 = reshape_layer(Max23500, [1, 6], Res48752), 
LZer54032 = zero_padding1D_layer(Res48752, 2, 0, Zer54032), 
LDot66352 = dot_layer([[[0.1682, 0.8416], [0.5467, 0.0848], [0.8381, 0.9106]]], [[[0.7348, 0.1775], [0.715, 0.3272], [0.5394, 0.5155]]], 2, 2, Dot66352), 
LELU73954 = elu_layer(Dot66352, 6.306370164608573, ELU73954), 
LPer65872 = permute_layer([[[1.7696, 1.0536], [1.7353, 1.6088]]], 2,1, Per65872), 
LZer35074 = zero_padding1D_layer(Per65872, 1, 0, Zer35074), 
LCon32242 = concatenate_layer([Zer35074,[[[0.751], [0.4299], [0.5004]]]], 2, Con32242), 
LAve2744 = average_layer([ELU73954,Con32242], Ave2744), 
LCon71183 = concatenate_layer([Ave2744,[[[0.1592, 0.9103, 0.5438], [0.7029, 0.9088, 0.4195], [0.5484, 0.7899, 0.0533]]]], 2, Con71183), 
LMax55797 = maximum_layer([Zer54032,Con71183], Max55797), 
LAve8080 = average_layer([[[[0.8188], [0.7066]]], [[[0.5634], [0.6236]]]], Ave8080), 
LZer79914 = zero_padding1D_layer(Ave8080, 1, 0, Zer79914), 
LCon83831 = concatenate_layer([Zer79914,[[[0.1038, 0.691, 0.3202, 0.468, 0.378], [0.6026, 0.673, 0.1365, 0.7956, 0.3828], [0.7636, 0.9208, 0.8679, 0.3536, 0.7195]]]], 2, Con83831), 
LMax6923 = maximum_layer([Max55797,Con83831], Max6923), 
exec_layers([LLoc8201,LMax23500,LRes48752,LZer54032,LDot66352,LELU73954,LPer65872,LZer35074,LCon32242,LAve2744,LCon71183,LMax55797,LAve8080,LZer79914,LCon83831,LMax6923],["Loc8201","Max23500","Res48752","Zer54032","Dot66352","ELU73954","Per65872","Zer35074","Con32242","Ave2744","Con71183","Max55797","Ave8080","Zer79914","Con83831","Max6923"],Max6923,"Max6923")

Actual (Unparsed): [[[0.1364887, 0.1978173, 0.6910000, 0.3202000, 0.9103000, 0.5438000], [1.0931836, 1.0769685, 0.6730000, 0.7029000, 0.9088000, 0.4195000], [0.9155337, 1.2529949, 0.9208000, 1.0073248, 0.7899000, 0.7195000]]]

Expected (Unparsed): [[[0.13648868,0.19781726,0.691,0.3202,0.9103,0.5438],[1.09318358,1.07696853,0.673,0.7029,0.9088,0.4195],[0.9155336900000001,1.25299491,0.9208,1.00732476,0.7899,0.7195]]]

Actual:   [[[0.1365, 0.1979, 0.691, 0.3202, 0.9103, 0.5438], [1.0932, 1.077, 0.673, 0.7029, 0.9088, 0.4195], [0.9156, 1.253, 0.9208, 1.0074, 0.7899, 0.7195]]]

Expected: [[[0.1365, 0.1979, 0.691, 0.3202, 0.9103, 0.5438], [1.0932, 1.077, 0.673, 0.7029, 0.9088, 0.4195], [0.9156, 1.253, 0.9208, 1.0074, 0.7899, 0.7195]]]