import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Max34882 = tf.keras.layers.Input(shape=([1, 1, 2, 2]))
in1Max34882 = tf.keras.layers.Input(shape=([1, 1, 2, 2]))
in0LST56820 = tf.keras.layers.Input(shape=([2, 3]))
in0Con55400 = tf.keras.layers.Input(shape=([1, 2]))

Max34882 = keras.layers.Maximum(name = 'Max34882', )([in0Max34882,in1Max34882])
Res95609 = keras.layers.Reshape((1, 1, 4), name = 'Res95609', )(Max34882)
Res72184 = keras.layers.Reshape((1, 4), name = 'Res72184', )(Res95609)
LST56820 = keras.layers.LSTM(1,recurrent_activation='sigmoid', name = 'LST56820', )(in0LST56820)
Res13118 = keras.layers.Reshape((1, 1), name = 'Res13118', )(LST56820)
Sep96371 = keras.layers.SeparableConv1D(2, (1),strides=(1), padding='same', name = 'Sep96371', )(Res13118)
Zer77535 = keras.layers.ZeroPadding1D(padding=((1, 1)), name = 'Zer77535', )(Sep96371)
Max57671 = keras.layers.MaxPool1D(pool_size=(2), name = 'Max57671', )(Zer77535)
Con55400 = keras.layers.Concatenate(axis=2, name = 'Con55400', )([Max57671,in0Con55400])
Mul99542 = keras.layers.Multiply(name = 'Mul99542', )([Res72184,Con55400])
model = tf.keras.models.Model(inputs=[in0Max34882,in1Max34882,in0LST56820,in0Con55400], outputs=Mul99542)
w = model.get_layer('LST56820').get_weights() 
w[0] = np.array([[6, 9, 2, 7], [5, 4, 8, 1], [7, 10, 10, 4]])
w[1] = np.array([[7, 2, 8, 1]])
w[2] = np.array([2, 4, 3, 2])
model.get_layer('LST56820').set_weights(w) 
w = model.get_layer('Sep96371').get_weights() 
w[0] = np.array([[[0.0665]]])
w[1] = np.array([[[0.5285, 0.3849]]])
w[2] = np.array([0, 0])
model.get_layer('Sep96371').set_weights(w) 
in0Max34882 = tf.constant([[[[[0.3282, 0.5305], [0.7903, 0.4096]]]]])
in1Max34882 = tf.constant([[[[[0.526, 0.8893], [0.6411, 0.8908]]]]])
in0LST56820 = tf.constant([[[10, 4, 7], [3, 4, 10]]])
in0Con55400 = tf.constant([[[0.4896, 0.0453]]])
print (np.array2string(model.predict([in0Max34882,in1Max34882,in0LST56820,in0Con55400],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Mul99542.png')

LMax34882 = maximum_layer([[[[[[0.3282, 0.5305], [0.7903, 0.4096]]]]], [[[[[0.526, 0.8893], [0.6411, 0.8908]]]]]], Max34882), 
LRes95609 = reshape_layer(Max34882, [1, 1, 4], Res95609), 
LRes72184 = reshape_layer(Res95609, [1, 4], Res72184), 
LLST56820 = lstm_layer([[[10, 4, 7], [3, 4, 10]]],[[6, 9, 2, 7], [5, 4, 8, 1], [7, 10, 10, 4]],[[7, 2, 8, 1]],[2, 4, 3, 2], LST56820), 
LRes13118 = reshape_layer(LST56820, [1, 1], Res13118), 
LSep96371 = separable_conv1D_layer(Res13118, 1,[[[[0.0665]]],[[[0.5285, 0.3849]]]],[0, 0], 1, true, Sep96371), 
LZer77535 = zero_padding1D_layer(Sep96371, 1, 1, Zer77535), 
LMax57671 = max_pool1D_layer(Zer77535, 2, Max57671), 
LCon55400 = concatenate_layer([Max57671,[[[0.4896, 0.0453]]]], 2, Con55400), 
LMul99542 = multiply_layer([Res72184,Con55400], Mul99542), 
exec_layers([LMax34882,LRes95609,LRes72184,LLST56820,LRes13118,LSep96371,LZer77535,LMax57671,LCon55400,LMul99542],["Max34882","Res95609","Res72184","LST56820","Res13118","Sep96371","Zer77535","Max57671","Con55400","Mul99542"],Mul99542,"Mul99542")

Actual (Unparsed): [[[0.0178214, 0.0219436, 0.3869309, 0.0403532]]]

Expected (Unparsed): [[[0.017821400902354952,0.021943571174845564,0.38693088,0.04035324]]]

Actual:   [[[0.0179, 0.022, 0.387, 0.0404]]]

Expected: [[[0.0179, 0.022, 0.387, 0.0404]]]