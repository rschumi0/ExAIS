import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Con16969 = tf.keras.layers.Input(shape=([1, 1, 1, 2]))
in0Add56123 = tf.keras.layers.Input(shape=([2, 2, 1]))
in1Add56123 = tf.keras.layers.Input(shape=([2, 2, 1]))
in0Con21456 = tf.keras.layers.Input(shape=([2, 2, 2]))
in0Mul94007 = tf.keras.layers.Input(shape=([1, 2]))
in1Mul94007 = tf.keras.layers.Input(shape=([1, 2]))
in0Con74138 = tf.keras.layers.Input(shape=([2, 4]))
in0Cro4253 = tf.keras.layers.Input(shape=([1, 1, 2]))
in0Con37275 = tf.keras.layers.Input(shape=([2, 6, 1]))

Con16969 = keras.layers.Conv3D(3, (1, 1, 1),strides=(1, 1, 1), padding='same', dilation_rate=(1, 1, 1), name = 'Con16969', )(in0Con16969)
Res44344 = keras.layers.Reshape((1, 1, 3), name = 'Res44344', )(Con16969)
Zer43080 = keras.layers.ZeroPadding2D(padding=((1, 0), (1, 0)), name = 'Zer43080', )(Res44344)
Add56123 = keras.layers.Add(name = 'Add56123', )([in0Add56123,in1Add56123])
Con21456 = keras.layers.Concatenate(axis=3, name = 'Con21456', )([Add56123,in0Con21456])
Max28376 = keras.layers.Maximum(name = 'Max28376', )([Zer43080,Con21456])
Res60651 = keras.layers.Reshape((2, 6), name = 'Res60651', )(Max28376)
Mul94007 = keras.layers.Multiply(name = 'Mul94007', )([in0Mul94007,in1Mul94007])
Zer88016 = keras.layers.ZeroPadding1D(padding=((1, 0)), name = 'Zer88016', )(Mul94007)
Con74138 = keras.layers.Concatenate(axis=2, name = 'Con74138', )([Zer88016,in0Con74138])
Add16709 = keras.layers.Add(name = 'Add16709', )([Res60651,Con74138])
Res36740 = keras.layers.Reshape((2, 6, 1), name = 'Res36740', )(Add16709)
Res60389 = keras.layers.Reshape((2, 6, 1, 1), name = 'Res60389', )(Res36740)
Con75601 = keras.layers.Conv3D(3, (2, 6, 1),strides=(1, 1, 1), padding='same', dilation_rate=(1, 1, 1), name = 'Con75601', )(Res60389)
Res24644 = keras.layers.Reshape((2, 6, 3), name = 'Res24644', )(Con75601)
Cro4253 = keras.layers.Cropping2D(cropping=((0, 0), (0, 0)), name = 'Cro4253', )(in0Cro4253)
Zer8153 = keras.layers.ZeroPadding2D(padding=((1, 0), (5, 0)), name = 'Zer8153', )(Cro4253)
Con37275 = keras.layers.Concatenate(axis=3, name = 'Con37275', )([Zer8153,in0Con37275])
Max76312 = keras.layers.Maximum(name = 'Max76312', )([Res24644,Con37275])
model = tf.keras.models.Model(inputs=[in0Con16969,in0Add56123,in1Add56123,in0Con21456,in0Mul94007,in1Mul94007,in0Con74138,in0Cro4253,in0Con37275], outputs=Max76312)
w = model.get_layer('Con16969').get_weights() 
w[0] = np.array([[[[[0.4551, 0.928, 0.9235], [0.1266, 0.0175, 0.2796]]]]])
w[1] = np.array([0, 0, 0])
model.get_layer('Con16969').set_weights(w) 
w = model.get_layer('Con75601').get_weights() 
w[0] = np.array([[[[[0.1074, 0.719, 0.0006]]], [[[0.5712, 0.5202, 0.2868]]], [[[0.0095, 0.0923, 0.258]]], [[[0.1187, 0.1338, 0.5536]]], [[[0.4714, 0.8514, 0.2739]]], [[[0.4726, 0.8602, 0.3005]]]], [[[[0.5889, 0.0306, 0.2809]]], [[[0.6155, 0.2725, 0.8267]]], [[[0.0064, 0.3627, 0.3154]]], [[[0.7768, 0.7035, 0.0477]]], [[[0.3694, 0.4829, 0.8593]]], [[[0.0988, 0.7475, 0.7985]]]]])
w[1] = np.array([0, 0, 0])
model.get_layer('Con75601').set_weights(w) 
in0Con16969 = tf.constant([[[[[0.4051, 0.4619]]]]])
in0Add56123 = tf.constant([[[[0.8685], [0.7127]], [[0.1321], [0.1679]]]])
in1Add56123 = tf.constant([[[[0.5952], [0.4712]], [[0.9219], [0.7051]]]])
in0Con21456 = tf.constant([[[[0.3886, 0.2312], [0.8973, 0.2025]], [[0.7182, 0.945], [0.22, 0.3153]]]])
in0Mul94007 = tf.constant([[[0.2015, 0.971]]])
in1Mul94007 = tf.constant([[[0.5876, 0.9026]]])
in0Con74138 = tf.constant([[[0.9921, 0.7956, 0.1816, 0.5404], [0.6766, 0.234, 0.7161, 0.3475]]])
in0Cro4253 = tf.constant([[[[1.1993, 1.1362]]]])
in0Con37275 = tf.constant([[[[0.4499], [0.5002], [0.5957], [0.9488], [0.9884], [0.5496]], [[0.3953], [0.1983], [0.8485], [0.58], [0.4802], [0.6241]]]])
print (np.array2string(model.predict([in0Con16969,in0Add56123,in1Add56123,in0Con21456,in0Mul94007,in1Mul94007,in0Con74138,in0Cro4253,in0Con37275],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Max76312.png')

LCon16969 = conv3D_layer([[[[[0.4051, 0.4619]]]]], 1, 1, 1,[[[[[0.4551, 0.928, 0.9235], [0.1266, 0.0175, 0.2796]]]]],[0, 0, 0], 1, 1, 1, true, 1, 1, 1, Con16969), 
LRes44344 = reshape_layer(Con16969, [1, 1, 3], Res44344), 
LZer43080 = zero_padding2D_layer(Res44344, 1, 0, 1, 0, Zer43080), 
LAdd56123 = add_layer([[[[[0.8685], [0.7127]], [[0.1321], [0.1679]]]], [[[[0.5952], [0.4712]], [[0.9219], [0.7051]]]]], Add56123), 
LCon21456 = concatenate_layer([Add56123,[[[[0.3886, 0.2312], [0.8973, 0.2025]], [[0.7182, 0.945], [0.22, 0.3153]]]]], 3, Con21456), 
LMax28376 = maximum_layer([Zer43080,Con21456], Max28376), 
LRes60651 = reshape_layer(Max28376, [2, 6], Res60651), 
LMul94007 = multiply_layer([[[[0.2015, 0.971]]], [[[0.5876, 0.9026]]]], Mul94007), 
LZer88016 = zero_padding1D_layer(Mul94007, 1, 0, Zer88016), 
LCon74138 = concatenate_layer([Zer88016,[[[0.9921, 0.7956, 0.1816, 0.5404], [0.6766, 0.234, 0.7161, 0.3475]]]], 2, Con74138), 
LAdd16709 = add_layer([Res60651,Con74138], Add16709), 
LRes36740 = reshape_layer(Add16709, [2, 6, 1], Res36740), 
LRes60389 = reshape_layer(Res36740, [2, 6, 1, 1], Res60389), 
LCon75601 = conv3D_layer(Res60389, 2, 6, 1,[[[[[0.1074, 0.719, 0.0006]]], [[[0.5712, 0.5202, 0.2868]]], [[[0.0095, 0.0923, 0.258]]], [[[0.1187, 0.1338, 0.5536]]], [[[0.4714, 0.8514, 0.2739]]], [[[0.4726, 0.8602, 0.3005]]]], [[[[0.5889, 0.0306, 0.2809]]], [[[0.6155, 0.2725, 0.8267]]], [[[0.0064, 0.3627, 0.3154]]], [[[0.7768, 0.7035, 0.0477]]], [[[0.3694, 0.4829, 0.8593]]], [[[0.0988, 0.7475, 0.7985]]]]],[0, 0, 0], 1, 1, 1, true, 1, 1, 1, Con75601), 
LRes24644 = reshape_layer(Con75601, [2, 6, 3], Res24644), 
LCro4253 = cropping2D_layer([[[[1.1993, 1.1362]]]], 0, 0, 0, 0, Cro4253), 
LZer8153 = zero_padding2D_layer(Cro4253, 1, 0, 5, 0, Zer8153), 
LCon37275 = concatenate_layer([Zer8153,[[[[0.4499], [0.5002], [0.5957], [0.9488], [0.9884], [0.5496]], [[0.3953], [0.1983], [0.8485], [0.58], [0.4802], [0.6241]]]]], 3, Con37275), 
LMax76312 = maximum_layer([Res24644,Con37275], Max76312), 
exec_layers([LCon16969,LRes44344,LZer43080,LAdd56123,LCon21456,LMax28376,LRes60651,LMul94007,LZer88016,LCon74138,LAdd16709,LRes36740,LRes60389,LCon75601,LRes24644,LCro4253,LZer8153,LCon37275,LMax76312],["Con16969","Res44344","Zer43080","Add56123","Con21456","Max28376","Res60651","Mul94007","Zer88016","Con74138","Add16709","Res36740","Res60389","Con75601","Res24644","Cro4253","Zer8153","Con37275","Max76312"],Max76312,"Max76312")

Actual (Unparsed): [[[[3.5268057, 6.0889792, 4.2458845], [4.9370821, 6.9699305, 5.4428682], [4.5180978, 6.1944622, 5.8790629], [4.3506522, 3.9522864, 4.5837316], [3.6647322, 3.4570692, 3.0163023], [2.1704021, 2.6952994, 1.9910354]], [[1.4880102, 2.6544450, 1.9620735], [1.9190631, 2.8628567, 2.2791678], [2.1042341, 3.6387306, 2.0462241], [1.6396677, 2.9637976, 1.5936842], [0.9179142, 1.9571638, 1.0732696], [1.1993001, 1.4467382, 0.6241000]]]]

Expected (Unparsed): [[[[3.52680568824,6.088979243880001,4.245884554979999],[4.93708209488,6.969930511295,5.442868262145],[4.518097835122,6.194462221659999,5.879062968209999],[4.350652183626001,3.952286442696,4.5837316231620004],[3.6647321902320003,3.4570692541500003,3.016302275363],[2.170402104151,2.6952993701679997,1.991035444721]],[[1.4880101933199998,2.6544450607,1.9620734797599997],[1.91906317861,2.8628567650699996,2.279167801345],[2.104234088584,3.638730657308,2.04622406776],[1.6396677694010002,2.963797621316,1.5936842669909999],[0.917914209058,1.957163810057,1.073269625924],[1.1993,1.446738248617,0.6241]]]]

Actual:   [[[[3.5269, 6.089, 4.2459], [4.9371, 6.97, 5.4429], [4.5181, 6.1945, 5.8791], [4.3507, 3.9523, 4.5838], [3.6648, 3.4571, 3.0164], [2.1705, 2.6953, 1.9911]], [[1.4881, 2.6545, 1.9621], [1.9191, 2.8629, 2.2792], [2.1043, 3.6388, 2.0463], [1.6397, 2.9638, 1.5937], [0.918, 1.9572, 1.0733], [1.1994, 1.4468, 0.6241]]]]

Expected: [[[[3.5269, 6.089, 4.2459], [4.9371, 6.97, 5.4429], [4.5181, 6.1945, 5.8791], [4.3507, 3.9523, 4.5838], [3.6648, 3.4571, 3.0164], [2.1705, 2.6953, 1.9911]], [[1.4881, 2.6545, 1.9621], [1.9191, 2.8629, 2.2792], [2.1043, 3.6388, 2.0463], [1.6397, 2.9638, 1.5937], [0.918, 1.9572, 1.0733], [1.1993, 1.4468, 0.6241]]]]