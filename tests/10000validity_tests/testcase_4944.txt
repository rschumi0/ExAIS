import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Cro52262 = tf.keras.layers.Input(shape=([3, 3]))
in0Con4300 = tf.keras.layers.Input(shape=([2, 3, 1, 1]))
in0Min87003 = tf.keras.layers.Input(shape=([1, 2, 1, 2]))
in1Min87003 = tf.keras.layers.Input(shape=([1, 2, 1, 2]))

Cro52262 = keras.layers.Cropping1D(cropping=((2, 0)), name = 'Cro52262', )(in0Cro52262)
Zer62043 = keras.layers.ZeroPadding1D(padding=((1, 1)), name = 'Zer62043', )(Cro52262)
Ave21655 = keras.layers.AveragePooling1D(pool_size=(2), strides=(1), padding='valid', name = 'Ave21655', )(Zer62043)
Lea90101 = keras.layers.LeakyReLU(alpha=0.5774695372299703, name = 'Lea90101', )(Ave21655)
Res4788 = keras.layers.Reshape((2, 3, 1), name = 'Res4788', )(Lea90101)
Res86209 = keras.layers.Reshape((2, 3, 1, 1), name = 'Res86209', )(Res4788)
Con4300 = keras.layers.Concatenate(axis=4, name = 'Con4300', )([Res86209,in0Con4300])
Min87003 = keras.layers.Minimum(name = 'Min87003', )([in0Min87003,in1Min87003])
Zer96052 = keras.layers.ZeroPadding3D(padding=((1, 0), (1, 0), (0, 0)), name = 'Zer96052', )(Min87003)
Mul49899 = keras.layers.Multiply(name = 'Mul49899', )([Con4300,Zer96052])
model = tf.keras.models.Model(inputs=[in0Cro52262,in0Con4300,in0Min87003,in1Min87003], outputs=Mul49899)
in0Cro52262 = tf.constant([[[1.4006, 1.452, 1.5218], [1.3785, 1.5794, 1.3298], [1.1866, 1.2271, 1.8709]]])
in0Con4300 = tf.constant([[[[[0.3036]], [[0.9406]], [[0.3125]]], [[[0.8775]], [[0.594]], [[0.5809]]]]])
in0Min87003 = tf.constant([[[[[0.7993, 0.147]], [[0.2076, 0.3329]]]]])
in1Min87003 = tf.constant([[[[[0.451, 0.9606]], [[0.5843, 0.7416]]]]])
print (np.array2string(model.predict([in0Cro52262,in0Con4300,in0Min87003,in1Min87003],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Mul49899.png')

LCro52262 = cropping1D_layer([[[1.4006, 1.452, 1.5218], [1.3785, 1.5794, 1.3298], [1.1866, 1.2271, 1.8709]]], 2, 0, Cro52262), 
LZer62043 = zero_padding1D_layer(Cro52262, 1, 1, Zer62043), 
LAve21655 = average_pooling1D_layer(Zer62043, 2, 1, false, Ave21655), 
LLea90101 = leaky_relu_layer(Ave21655, 0.5774695372299703, Lea90101), 
LRes4788 = reshape_layer(Lea90101, [2, 3, 1], Res4788), 
LRes86209 = reshape_layer(Res4788, [2, 3, 1, 1], Res86209), 
LCon4300 = concatenate_layer([Res86209,[[[[[0.3036]], [[0.9406]], [[0.3125]]], [[[0.8775]], [[0.594]], [[0.5809]]]]]], 4, Con4300), 
LMin87003 = minimum_layer([[[[[[0.7993, 0.147]], [[0.2076, 0.3329]]]]], [[[[[0.451, 0.9606]], [[0.5843, 0.7416]]]]]], Min87003), 
LZer96052 = zero_padding3D_layer(Min87003, 1, 0, 1, 0, 0, 0, Zer96052), 
LMul49899 = multiply_layer([Con4300,Zer96052], Mul49899), 
exec_layers([LCro52262,LZer62043,LAve21655,LLea90101,LRes4788,LRes86209,LCon4300,LMin87003,LZer96052,LMul49899],["Cro52262","Zer62043","Ave21655","Lea90101","Res4788","Res86209","Con4300","Min87003","Zer96052","Mul49899"],Mul49899,"Mul49899")

Actual (Unparsed): [[[[[0.0000000, 0.0000000]], [[0.0000000, 0.0000000]], [[0.0000000, 0.0000000]]], [[[0.0000000, 0.0000000]], [[0.2767111, 0.0873180]], [[0.1941994, 0.1933816]]]]]

Expected (Unparsed): [[[[[0.0,0.0]],[[0.0,0.0]],[[0.0,0.0]]],[[[0.0,0.0]],[[0.27671105,0.08731799999999999]],[[0.19419942,0.19338160999999998]]]]]

Actual:   [[[[[0, 0]], [[0, 0]], [[0, 0]]], [[[0, 0]], [[0.2768, 0.0874]], [[0.1942, 0.1934]]]]]

Expected: [[[[[0, 0]], [[0, 0]], [[0, 0]]], [[[0, 0]], [[0.2768, 0.0874]], [[0.1942, 0.1934]]]]]