import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Glo36820 = tf.keras.layers.Input(shape=([1, 2]))
in0Con1464 = tf.keras.layers.Input(shape=([2, 1, 1, 1]))
in0Mul31250 = tf.keras.layers.Input(shape=([2, 1, 1, 2]))
in1Mul31250 = tf.keras.layers.Input(shape=([2, 1, 1, 2]))
in0Con26615 = tf.keras.layers.Input(shape=([2, 1, 2]))
in0Lea49673 = tf.keras.layers.Input(shape=([2, 1, 2]))
in0Con65315 = tf.keras.layers.Input(shape=([2, 1, 2]))
in0Min55377 = tf.keras.layers.Input(shape=([2, 1, 2]))
in1Min55377 = tf.keras.layers.Input(shape=([2, 1, 2]))
in0Max85004 = tf.keras.layers.Input(shape=([2, 2, 1]))
in1Max85004 = tf.keras.layers.Input(shape=([2, 2, 1]))
in0Per28040 = tf.keras.layers.Input(shape=([4, 1]))
in0Con56701 = tf.keras.layers.Input(shape=([3]))
in0Con29903 = tf.keras.layers.Input(shape=([4]))

Glo36820 = keras.layers.GlobalAveragePooling1D(name = 'Glo36820', )(in0Glo36820)
Res89467 = keras.layers.Reshape((2, 1), name = 'Res89467', )(Glo36820)
Res12354 = keras.layers.Reshape((2, 1, 1), name = 'Res12354', )(Res89467)
Res21766 = keras.layers.Reshape((2, 1, 1, 1), name = 'Res21766', )(Res12354)
Con1464 = keras.layers.Concatenate(axis=4, name = 'Con1464', )([Res21766,in0Con1464])
Mul31250 = keras.layers.Multiply(name = 'Mul31250', )([in0Mul31250,in1Mul31250])
Max71999 = keras.layers.Maximum(name = 'Max71999', )([Con1464,Mul31250])
Res24186 = keras.layers.Reshape((2, 1, 2), name = 'Res24186', )(Max71999)
Con26615 = keras.layers.Concatenate(axis=3, name = 'Con26615', )([Res24186,in0Con26615])
Lea49673 = keras.layers.LeakyReLU(alpha=0.44106425608546024, name = 'Lea49673', input_shape=(2, 1, 2))(in0Lea49673)
Res57710 = keras.layers.Reshape((2, 1, 2, 1), name = 'Res57710', )(Lea49673)
PRe16799 = keras.layers.PReLU(name = 'PRe16799', )(Res57710)
Res94519 = keras.layers.Reshape((2, 1, 2), name = 'Res94519', )(PRe16799)
Con65315 = keras.layers.Concatenate(axis=3, name = 'Con65315', )([Res94519,in0Con65315])
Min55377 = keras.layers.Minimum(name = 'Min55377', )([in0Min55377,in1Min55377])
Loc36370 = keras.layers.LocallyConnected2D(4, (2, 1),strides=(1, 1), name = 'Loc36370', )(Min55377)
Zer96863 = keras.layers.ZeroPadding2D(padding=((1, 0), (0, 0)), name = 'Zer96863', )(Loc36370)
Mul32275 = keras.layers.Multiply(name = 'Mul32275', )([Con65315,Zer96863])
Min91380 = keras.layers.Minimum(name = 'Min91380', )([Con26615,Mul32275])
Res5077 = keras.layers.Reshape((2, 4), name = 'Res5077', )(Min91380)
Fla98592 = keras.layers.Flatten(name = 'Fla98592', )(Res5077)
Max85004 = keras.layers.Maximum(name = 'Max85004', )([in0Max85004,in1Max85004])
Res64080 = keras.layers.Reshape((2, 2), name = 'Res64080', )(Max85004)
Fla36415 = keras.layers.Flatten(name = 'Fla36415', )(Res64080)
Per28040 = keras.layers.Permute((2,1), name = 'Per28040',)(in0Per28040)
Res83369 = keras.layers.Reshape((1, 4, 1), name = 'Res83369', )(Per28040)
Res94833 = keras.layers.Reshape((1, 4, 1, 1), name = 'Res94833', )(Res83369)
Glo29001 = keras.layers.GlobalAveragePooling3D(name = 'Glo29001', )(Res94833)
Con56701 = keras.layers.Concatenate(axis=1, name = 'Con56701', )([Glo29001,in0Con56701])
Ave73195 = keras.layers.Average(name = 'Ave73195', )([Fla36415,Con56701])
Con29903 = keras.layers.Concatenate(axis=1, name = 'Con29903', )([Ave73195,in0Con29903])
Ave47804 = keras.layers.Average(name = 'Ave47804', )([Fla98592,Con29903])
model = tf.keras.models.Model(inputs=[in0Glo36820,in0Con1464,in0Mul31250,in1Mul31250,in0Con26615,in0Lea49673,in0Con65315,in0Min55377,in1Min55377,in0Max85004,in1Max85004,in0Per28040,in0Con56701,in0Con29903], outputs=Ave47804)
w = model.get_layer('PRe16799').get_weights() 
w[0] = np.array([[[[0.0185], [0.1933]]], [[[0.1248], [0.0592]]]])
model.get_layer('PRe16799').set_weights(w) 
w = model.get_layer('Loc36370').get_weights() 
w[0] = np.array([[[0.4889, 0.1477, 0.3084, 0.7982], [0.9391, 0.0924, 0.1233, 0.1712], [0.2154, 0.3383, 0.8914, 0.3773], [0.945, 0.3299, 0.7246, 0.5187]]])
w[1] = np.array([[[0, 0, 0, 0]]])
model.get_layer('Loc36370').set_weights(w) 
in0Glo36820 = tf.constant([[[1.5462, 1.7976]]])
in0Con1464 = tf.constant([[[[[0.1775]]], [[[0.706]]]]])
in0Mul31250 = tf.constant([[[[[0.3623, 0.5267]]], [[[0.2429, 0.9876]]]]])
in1Mul31250 = tf.constant([[[[[0.4063, 0.3553]]], [[[0.0363, 0.8581]]]]])
in0Con26615 = tf.constant([[[[0.1286, 0.6838]], [[0.4277, 0.5224]]]])
in0Lea49673 = tf.constant([[[[0.6515, 0.9167]], [[0.6969, 0.9462]]]])
in0Con65315 = tf.constant([[[[0.8619, 0.0376]], [[0.1089, 0.5073]]]])
in0Min55377 = tf.constant([[[[0.3427, 0.3658]], [[0.0071, 0.318]]]])
in1Min55377 = tf.constant([[[[0.0831, 0.3294]], [[0.6863, 0.5138]]]])
in0Max85004 = tf.constant([[[[0.7854], [0.2869]], [[0.8137], [0.0949]]]])
in1Max85004 = tf.constant([[[[0.148], [0.4891]], [[0.7005], [0.4462]]]])
in0Per28040 = tf.constant([[[1.1854], [1.0732], [1.4509], [1.4413]]])
in0Con56701 = tf.constant([[0.6989, 0.3714, 0.4762]])
in0Con29903 = tf.constant([[0.9263, 0.5662, 0.4854, 0.2881]])
print (np.array2string(model.predict([in0Glo36820,in0Con1464,in0Mul31250,in1Mul31250,in0Con26615,in0Lea49673,in0Con65315,in0Min55377,in1Min55377,in0Max85004,in1Max85004,in0Per28040,in0Con56701,in0Con29903],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Ave47804.png')

LGlo36820 = global_average_pooling1D_layer([[[1.5462, 1.7976]]], Glo36820), 
LRes89467 = reshape_layer(Glo36820, [2, 1], Res89467), 
LRes12354 = reshape_layer(Res89467, [2, 1, 1], Res12354), 
LRes21766 = reshape_layer(Res12354, [2, 1, 1, 1], Res21766), 
LCon1464 = concatenate_layer([Res21766,[[[[[0.1775]]], [[[0.706]]]]]], 4, Con1464), 
LMul31250 = multiply_layer([[[[[[0.3623, 0.5267]]], [[[0.2429, 0.9876]]]]], [[[[[0.4063, 0.3553]]], [[[0.0363, 0.8581]]]]]], Mul31250), 
LMax71999 = maximum_layer([Con1464,Mul31250], Max71999), 
LRes24186 = reshape_layer(Max71999, [2, 1, 2], Res24186), 
LCon26615 = concatenate_layer([Res24186,[[[[0.1286, 0.6838]], [[0.4277, 0.5224]]]]], 3, Con26615), 
LLea49673 = leaky_relu_layer([[[[0.6515, 0.9167]], [[0.6969, 0.9462]]]], 0.44106425608546024, Lea49673), 
LRes57710 = reshape_layer(Lea49673, [2, 1, 2, 1], Res57710), 
LPRe16799 = prelu_layer(Res57710, [[[[0.0185], [0.1933]]], [[[0.1248], [0.0592]]]], PRe16799), 
LRes94519 = reshape_layer(PRe16799, [2, 1, 2], Res94519), 
LCon65315 = concatenate_layer([Res94519,[[[[0.8619, 0.0376]], [[0.1089, 0.5073]]]]], 3, Con65315), 
LMin55377 = minimum_layer([[[[[0.3427, 0.3658]], [[0.0071, 0.318]]]], [[[[0.0831, 0.3294]], [[0.6863, 0.5138]]]]], Min55377), 
LLoc36370 = locally_connected2D_layer(Min55377, 2, 1,[[[0.4889, 0.1477, 0.3084, 0.7982], [0.9391, 0.0924, 0.1233, 0.1712], [0.2154, 0.3383, 0.8914, 0.3773], [0.945, 0.3299, 0.7246, 0.5187]]],[[[0, 0, 0, 0]]], 1, 1, Loc36370), 
LZer96863 = zero_padding2D_layer(Loc36370, 1, 0, 0, 0, Zer96863), 
LMul32275 = multiply_layer([Con65315,Zer96863], Mul32275), 
LMin91380 = minimum_layer([Con26615,Mul32275], Min91380), 
LRes5077 = reshape_layer(Min91380, [2, 4], Res5077), 
LFla98592 = flatten_layer(Res5077, Fla98592), 
LMax85004 = maximum_layer([[[[[0.7854], [0.2869]], [[0.8137], [0.0949]]]], [[[[0.148], [0.4891]], [[0.7005], [0.4462]]]]], Max85004), 
LRes64080 = reshape_layer(Max85004, [2, 2], Res64080), 
LFla36415 = flatten_layer(Res64080, Fla36415), 
LPer28040 = permute_layer([[[1.1854], [1.0732], [1.4509], [1.4413]]], 2,1, Per28040), 
LRes83369 = reshape_layer(Per28040, [1, 4, 1], Res83369), 
LRes94833 = reshape_layer(Res83369, [1, 4, 1, 1], Res94833), 
LGlo29001 = global_average_pooling3D_layer(Res94833, Glo29001), 
LCon56701 = concatenate_layer([Glo29001,[[0.6989, 0.3714, 0.4762]]], 1, Con56701), 
LAve73195 = average_layer([Fla36415,Con56701], Ave73195), 
LCon29903 = concatenate_layer([Ave73195,[[0.9263, 0.5662, 0.4854, 0.2881]]], 1, Con29903), 
LAve47804 = average_layer([Fla98592,Con29903], Ave47804), 
exec_layers([LGlo36820,LRes89467,LRes12354,LRes21766,LCon1464,LMul31250,LMax71999,LRes24186,LCon26615,LLea49673,LRes57710,LPRe16799,LRes94519,LCon65315,LMin55377,LLoc36370,LZer96863,LMul32275,LMin91380,LRes5077,LFla98592,LMax85004,LRes64080,LFla36415,LPer28040,LRes83369,LRes94833,LGlo29001,LCon56701,LAve73195,LCon29903,LAve47804],["Glo36820","Res89467","Res12354","Res21766","Con1464","Mul31250","Max71999","Res24186","Con26615","Lea49673","Res57710","PRe16799","Res94519","Con65315","Min55377","Loc36370","Zer96863","Mul32275","Min91380","Res5077","Fla98592","Max85004","Res64080","Fla36415","Per28040","Res83369","Res94833","Glo29001","Con56701","Ave73195","Con29903","Ave47804"],Ave47804,"Ave47804")

Actual (Unparsed): [[0.5182750, 0.2970000, 0.2962750, 0.2306000, 0.6903416, 0.3540747, 0.2591981, 0.2176971]]

Expected (Unparsed): [[0.518275,0.297,0.296275,0.2306,0.6903416544715,0.35407472693600006,0.25919806686,0.21769705682450002]]

Actual:   [[0.5183, 0.297, 0.2963, 0.2306, 0.6904, 0.3541, 0.2592, 0.2177]]

Expected: [[0.5183, 0.297, 0.2963, 0.2306, 0.6904, 0.3541, 0.2592, 0.2177]]