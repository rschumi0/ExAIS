import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Bat26891 = tf.keras.layers.Input(shape=([4, 1]))

Bat26891 = keras.layers.BatchNormalization(axis=2, epsilon=0.6125135559300487,  name = 'Bat26891', )(in0Bat26891)
Lea11942 = keras.layers.LeakyReLU(alpha=7.589600777236377, name = 'Lea11942', )(Bat26891)
Con40331 = keras.layers.Conv1D(2, (4),strides=(1), padding='valid', dilation_rate=(1), name = 'Con40331', )(Lea11942)
model = tf.keras.models.Model(inputs=[in0Bat26891], outputs=Con40331)
w = model.get_layer('Bat26891').get_weights() 
w[0] = np.array([0.0776])
w[1] = np.array([0.9175])
w[2] = np.array([0.4511])
w[3] = np.array([0.4923])
model.get_layer('Bat26891').set_weights(w) 
w = model.get_layer('Con40331').get_weights() 
w[0] = np.array([[[0.2622, 0.4499]], [[0.7606, 0.9012]], [[0.4015, 0.8546]], [[0.2654, 0.6348]]])
w[1] = np.array([0, 0])
model.get_layer('Con40331').set_weights(w) 
in0Bat26891 = tf.constant([[[1.111], [1.1882], [1.9546], [1.4187]]])
print (np.array2string(model.predict([in0Bat26891],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Con40331.png')

LBat26891 = batch_normalization_layer([[[1.111], [1.1882], [1.9546], [1.4187]]], 2, 0.6125135559300487, [0.0776], [0.9175], [0.4511], [0.4923], Bat26891), 
LLea11942 = leaky_relu_layer(Bat26891, 7.589600777236377, Lea11942), 
LCon40331 = conv1D_layer(Lea11942, 4,[[[0.2622, 0.4499]], [[0.7606, 0.9012]], [[0.4015, 0.8546]], [[0.2654, 0.6348]]],[0, 0], 1, false, 1, Con40331), 
exec_layers([LBat26891,LLea11942,LCon40331],["Bat26891","Lea11942","Con40331"],Con40331,"Con40331")

Actual (Unparsed): [[[1.6679894, 2.8173261]]]

Expected (Unparsed): [[[1.6679894144214735,2.8173261404346768]]]

Actual:   [[[1.668, 2.8174]]]

Expected: [[[1.668, 2.8174]]]