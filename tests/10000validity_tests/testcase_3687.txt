import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Min92506 = tf.keras.layers.Input(shape=([1, 2]))
in1Min92506 = tf.keras.layers.Input(shape=([1, 2]))
in0Con59607 = tf.keras.layers.Input(shape=([2, 3, 5]))
in0Sub96867 = tf.keras.layers.Input(shape=([2, 3, 3, 2]))
in1Sub96867 = tf.keras.layers.Input(shape=([2, 3, 3, 2]))

Min92506 = keras.layers.Minimum(name = 'Min92506', )([in0Min92506,in1Min92506])
Res98848 = keras.layers.Reshape((1, 2, 1), name = 'Res98848', )(Min92506)
Zer64909 = keras.layers.ZeroPadding2D(padding=((1, 0), (1, 0)), name = 'Zer64909', )(Res98848)
Con59607 = keras.layers.Concatenate(axis=3, name = 'Con59607', )([Zer64909,in0Con59607])
Sub96867 = keras.layers.Subtract(name = 'Sub96867', )([in0Sub96867,in1Sub96867])
Res12251 = keras.layers.Reshape((2, 3, 6), name = 'Res12251', )(Sub96867)
Cro89133 = keras.layers.Cropping2D(cropping=((0, 0), (0, 2)), name = 'Cro89133', )(Res12251)
Zer10783 = keras.layers.ZeroPadding2D(padding=((0, 0), (2, 0)), name = 'Zer10783', )(Cro89133)
Max8497 = keras.layers.Maximum(name = 'Max8497', )([Con59607,Zer10783])
model = tf.keras.models.Model(inputs=[in0Min92506,in1Min92506,in0Con59607,in0Sub96867,in1Sub96867], outputs=Max8497)
in0Min92506 = tf.constant([[[0.7291, 0.3358]]])
in1Min92506 = tf.constant([[[0.0888, 0.2387]]])
in0Con59607 = tf.constant([[[[0.424, 0.2483, 0.7129, 0.9451, 0.5445], [0.3363, 0.0639, 0.5588, 0.1248, 0.9237], [0.3909, 0.5621, 0.0688, 0.6348, 0.3835]], [[0.0246, 0.3117, 0.0526, 0.6818, 0.5551], [0.5748, 0.696, 0.1645, 0.9984, 0.289], [0.0961, 0.3331, 0.7563, 0.5199, 0.4166]]]])
in0Sub96867 = tf.constant([[[[[0.7227, 0.81], [0.5616, 0.9511], [0.777, 0.525]], [[0.3687, 0.8753], [0.4195, 0.7792], [0.0614, 0.8718]], [[0.5029, 0.0952], [0.6033, 0.4265], [0.0293, 0.1048]]], [[[0.3686, 0.8375], [0.197, 0.2486], [0.789, 0.8251]], [[0.3078, 0.2036], [0.129, 0.1696], [0.708, 0.7445]], [[0.7322, 0.2244], [0.3782, 0.6969], [0.3536, 0.0591]]]]])
in1Sub96867 = tf.constant([[[[[0.1373, 0.7443], [0.8687, 0.545], [0.678, 0.1165]], [[0.7335, 0.9104], [0.8163, 0.6032], [0.0573, 0.1685]], [[0.4009, 0.9128], [0.0499, 0.3433], [0.3043, 0.1296]]], [[[0.8994, 0.6111], [0.7976, 0.9065], [0.8539, 0.3082]], [[0.395, 0.079], [0.3852, 0.2582], [0.9486, 0.5809]], [[0.8416, 0.023], [0.3714, 0.9051], [0.9168, 0.4919]]]]])
print (np.array2string(model.predict([in0Min92506,in1Min92506,in0Con59607,in0Sub96867,in1Sub96867],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Max8497.png')

LMin92506 = minimum_layer([[[[0.7291, 0.3358]]], [[[0.0888, 0.2387]]]], Min92506), 
LRes98848 = reshape_layer(Min92506, [1, 2, 1], Res98848), 
LZer64909 = zero_padding2D_layer(Res98848, 1, 0, 1, 0, Zer64909), 
LCon59607 = concatenate_layer([Zer64909,[[[[0.424, 0.2483, 0.7129, 0.9451, 0.5445], [0.3363, 0.0639, 0.5588, 0.1248, 0.9237], [0.3909, 0.5621, 0.0688, 0.6348, 0.3835]], [[0.0246, 0.3117, 0.0526, 0.6818, 0.5551], [0.5748, 0.696, 0.1645, 0.9984, 0.289], [0.0961, 0.3331, 0.7563, 0.5199, 0.4166]]]]], 3, Con59607), 
LSub96867 = subtract_layer([[[[[0.7227, 0.81], [0.5616, 0.9511], [0.777, 0.525]], [[0.3687, 0.8753], [0.4195, 0.7792], [0.0614, 0.8718]], [[0.5029, 0.0952], [0.6033, 0.4265], [0.0293, 0.1048]]], [[[0.3686, 0.8375], [0.197, 0.2486], [0.789, 0.8251]], [[0.3078, 0.2036], [0.129, 0.1696], [0.708, 0.7445]], [[0.7322, 0.2244], [0.3782, 0.6969], [0.3536, 0.0591]]]]], [[[[[0.1373, 0.7443], [0.8687, 0.545], [0.678, 0.1165]], [[0.7335, 0.9104], [0.8163, 0.6032], [0.0573, 0.1685]], [[0.4009, 0.9128], [0.0499, 0.3433], [0.3043, 0.1296]]], [[[0.8994, 0.6111], [0.7976, 0.9065], [0.8539, 0.3082]], [[0.395, 0.079], [0.3852, 0.2582], [0.9486, 0.5809]], [[0.8416, 0.023], [0.3714, 0.9051], [0.9168, 0.4919]]]]], Sub96867), 
LRes12251 = reshape_layer(Sub96867, [2, 3, 6], Res12251), 
LCro89133 = cropping2D_layer(Res12251, 0, 0, 0, 2, Cro89133), 
LZer10783 = zero_padding2D_layer(Cro89133, 0, 0, 2, 0, Zer10783), 
LMax8497 = maximum_layer([Con59607,Zer10783], Max8497), 
exec_layers([LMin92506,LRes98848,LZer64909,LCon59607,LSub96867,LRes12251,LCro89133,LZer10783,LMax8497],["Min92506","Res98848","Zer64909","Con59607","Sub96867","Res12251","Cro89133","Zer10783","Max8497"],Max8497,"Max8497")

Actual (Unparsed): [[[[0.0000000, 0.4240000, 0.2483000, 0.7129000, 0.9451000, 0.5445000], [0.0000000, 0.3363000, 0.0639000, 0.5588000, 0.1248000, 0.9237000], [0.5854000, 0.3909000, 0.5621000, 0.4061000, 0.6348000, 0.4085000]], [[0.0000000, 0.0246000, 0.3117000, 0.0526000, 0.6818000, 0.5551000], [0.0888000, 0.5748000, 0.6960000, 0.1645000, 0.9984000, 0.2890000], [0.2387000, 0.2264000, 0.3331000, 0.7563000, 0.5199000, 0.5169000]]]]

Expected (Unparsed): [[[[0,0.424,0.2483,0.7129,0.9451,0.5445],[0,0.3363,0.0639,0.5588,0.1248,0.9237],[0.5854,0.3909,0.5621,0.4060999999999999,0.6348,0.40850000000000003]],[[0,0.0246,0.3117,0.0526,0.6818,0.5551],[0.0888,0.5748,0.696,0.1645,0.9984,0.289],[0.2387,0.22640000000000005,0.3331,0.7563,0.5199,0.5168999999999999]]]]

Actual:   [[[[0, 0.424, 0.2483, 0.7129, 0.9451, 0.5445], [0, 0.3363, 0.0639, 0.5588, 0.1248, 0.9237], [0.5854, 0.3909, 0.5621, 0.4061, 0.6348, 0.4085]], [[0, 0.0246, 0.3117, 0.0526, 0.6818, 0.5551], [0.0888, 0.5748, 0.696, 0.1645, 0.9984, 0.289], [0.2387, 0.2264, 0.3331, 0.7563, 0.5199, 0.5169]]]]

Expected: [[[[0, 0.424, 0.2483, 0.7129, 0.9451, 0.5445], [0, 0.3363, 0.0639, 0.5588, 0.1248, 0.9237], [0.5854, 0.3909, 0.5621, 0.4061, 0.6348, 0.4086]], [[0, 0.0246, 0.3117, 0.0526, 0.6818, 0.5551], [0.0888, 0.5748, 0.696, 0.1645, 0.9984, 0.289], [0.2387, 0.2265, 0.3331, 0.7563, 0.5199, 0.5169]]]]