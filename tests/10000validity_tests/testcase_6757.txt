import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Ave96591 = tf.keras.layers.Input(shape=([1, 1]))
in1Ave96591 = tf.keras.layers.Input(shape=([1, 1]))
in0Con24037 = tf.keras.layers.Input(shape=([2, 2, 3]))
in0Den61431 = tf.keras.layers.Input(shape=([2, 2, 5]))
in0Con1813 = tf.keras.layers.Input(shape=([5, 10]))
in0Zer14459 = tf.keras.layers.Input(shape=([3, 4, 3]))
in0Ave93642 = tf.keras.layers.Input(shape=([2, 2, 1]))
in1Ave93642 = tf.keras.layers.Input(shape=([2, 2, 1]))
in0Ave88125 = tf.keras.layers.Input(shape=([2, 1, 1, 2]))
in1Ave88125 = tf.keras.layers.Input(shape=([2, 1, 1, 2]))
in0Con5621 = tf.keras.layers.Input(shape=([5, 16]))

Ave96591 = keras.layers.Average(name = 'Ave96591', )([in0Ave96591,in1Ave96591])
Res99871 = keras.layers.Reshape((1, 1, 1), name = 'Res99871', )(Ave96591)
Zer90655 = keras.layers.ZeroPadding2D(padding=((1, 0), (1, 0)), name = 'Zer90655', )(Res99871)
Con24037 = keras.layers.Concatenate(axis=3, name = 'Con24037', )([Zer90655,in0Con24037])
Den61431 = keras.layers.Dense(4,name = 'Den61431', )(in0Den61431)
Sub88201 = keras.layers.Subtract(name = 'Sub88201', )([Con24037,Den61431])
Res25467 = keras.layers.Reshape((2, 8), name = 'Res25467', )(Sub88201)
Zer51053 = keras.layers.ZeroPadding1D(padding=((3, 0)), name = 'Zer51053', )(Res25467)
Con1813 = keras.layers.Concatenate(axis=2, name = 'Con1813', )([Zer51053,in0Con1813])
Zer14459 = keras.layers.ZeroPadding2D(padding=((1, 1), (1, 1)), name = 'Zer14459', )(in0Zer14459)
Res48794 = keras.layers.Reshape((5, 18), name = 'Res48794', )(Zer14459)
Ave93642 = keras.layers.Average(name = 'Ave93642', )([in0Ave93642,in1Ave93642])
Mas25211 = keras.layers.Masking(mask_value=2, name = 'Mas25211', )(Ave93642)
Res38736 = keras.layers.Reshape((2, 2), name = 'Res38736', )(Mas25211)
Ave88125 = keras.layers.Average(name = 'Ave88125', )([in0Ave88125,in1Ave88125])
Res29905 = keras.layers.Reshape((2, 2), name = 'Res29905', )(Ave88125)
Dot56726 = keras.layers.Dot(axes=(1, 1), name = 'Dot56726', )([Res38736,Res29905])
Zer81054 = keras.layers.ZeroPadding1D(padding=((3, 0)), name = 'Zer81054', )(Dot56726)
Con5621 = keras.layers.Concatenate(axis=2, name = 'Con5621', )([Zer81054,in0Con5621])
Min25188 = keras.layers.Minimum(name = 'Min25188', )([Res48794,Con5621])
Mul81505 = keras.layers.Multiply(name = 'Mul81505', )([Con1813,Min25188])
model = tf.keras.models.Model(inputs=[in0Ave96591,in1Ave96591,in0Con24037,in0Den61431,in0Con1813,in0Zer14459,in0Ave93642,in1Ave93642,in0Ave88125,in1Ave88125,in0Con5621], outputs=Mul81505)
w = model.get_layer('Den61431').get_weights() 
w[0] = np.array([[0.525, 0.5323, 0.378, 0.898], [0.9136, 0.4281, 0.0541, 0.5464], [0.4693, 0.7863, 0.3654, 0.9705], [0.822, 0.0198, 0.5507, 0.3084], [0.6266, 0.5074, 0.0142, 0.723]])
w[1] = np.array([0.943, 0.6334, 0.7383, 0.5476])
model.get_layer('Den61431').set_weights(w) 
in0Ave96591 = tf.constant([[[0.2842]]])
in1Ave96591 = tf.constant([[[0.3084]]])
in0Con24037 = tf.constant([[[[0.0393, 0.4915, 0.2644], [0.7708, 0.7846, 0.7498]], [[0.7899, 0.4267, 0.4645], [0.4547, 0.0746, 0.2193]]]])
in0Den61431 = tf.constant([[[[0.9831, 0.9546, 0.2679, 0.8039, 0.5329], [0.3504, 0.054, 0.6443, 0.4207, 0.7774]], [[0.0638, 0.2249, 0.0937, 0.0931, 0.4418], [0.1872, 0.9047, 0.7291, 0.8511, 0.8303]]]])
in0Con1813 = tf.constant([[[0.2492, 0.5988, 0.766, 0.4746, 0.3846, 0.9757, 0.9588, 0.6055, 0.0709, 0.5194], [0.5327, 0.9891, 0.7533, 0.9594, 0.3814, 0.7014, 0.5587, 0.1557, 0.4518, 0.6609], [0.7341, 0.6777, 0.7861, 0.9371, 0.3729, 0.2452, 0.8927, 0.3394, 0.3025, 0.578], [0.9983, 0.5037, 0.1212, 0.1082, 0.4902, 0.8618, 0.0237, 0.6948, 0.649, 0.3377], [0.2339, 0.956, 0.5942, 0.3452, 0.5771, 0.0771, 0.215, 0.6822, 0.9657, 0.9934]]])
in0Zer14459 = tf.constant([[[[1.2499, 1.3345, 1.2081], [1.0994, 1.2031, 1.9747], [1.7027, 1.7621, 1.3856], [1.0139, 1.9033, 1.1504]], [[1.2164, 1.6623, 1.349], [1.0268, 1.7457, 1.9238], [1.797, 1.7128, 1.9905], [1.3377, 1.2091, 1.6093]], [[1.0641, 1.4803, 1.6401], [1.6332, 1.4181, 1.6615], [1.419, 1.8952, 1.2022], [1.6337, 1.4027, 1.155]]]])
in0Ave93642 = tf.constant([[[[0.085], [0.4167]], [[0.628], [0.1999]]]])
in1Ave93642 = tf.constant([[[[0.88], [0.5324]], [[0.3831], [0.3173]]]])
in0Ave88125 = tf.constant([[[[[0.9692, 0.0449]]], [[[0.5817, 0.4563]]]]])
in1Ave88125 = tf.constant([[[[[0.8322, 0.8033]]], [[[0.3319, 0.5063]]]]])
in0Con5621 = tf.constant([[[0.3369, 0.7052, 0.1167, 0.5084, 0.3712, 0.6902, 0.6786, 0.0146, 0.0199, 0.1259, 0.1746, 0.9249, 0.2074, 0.7231, 0.952, 0.9971], [0.3678, 0.7395, 0.6117, 0.5494, 0.4257, 0.35, 0.0278, 0.5043, 0.6777, 0.7642, 0.8026, 0.0137, 0.3451, 0.8287, 0.4589, 0.0759], [0.9481, 0.8296, 0.8083, 0.9227, 0.8037, 0.2189, 0.3626, 0.8542, 0.8925, 0.0294, 0.3534, 0.6295, 0.0569, 0.8137, 0.9155, 0.4846], [0.995, 0.0446, 0.2534, 0.3398, 0.7965, 0.05, 0.1589, 0.7857, 0.8305, 0.7177, 0.0765, 0.9897, 0.6398, 0.404, 0.0251, 0.7561], [0.1222, 0.707, 0.074, 0.5856, 0.6866, 0.0236, 0.7447, 0.7343, 0.2599, 0.0993, 0.6667, 0.9501, 0.991, 0.1031, 0.0448, 0.7773]]])
print (np.array2string(model.predict([in0Ave96591,in1Ave96591,in0Con24037,in0Den61431,in0Con1813,in0Zer14459,in0Ave93642,in1Ave93642,in0Ave88125,in1Ave88125,in0Con5621],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Mul81505.png')

LAve96591 = average_layer([[[[0.2842]]], [[[0.3084]]]], Ave96591), 
LRes99871 = reshape_layer(Ave96591, [1, 1, 1], Res99871), 
LZer90655 = zero_padding2D_layer(Res99871, 1, 0, 1, 0, Zer90655), 
LCon24037 = concatenate_layer([Zer90655,[[[[0.0393, 0.4915, 0.2644], [0.7708, 0.7846, 0.7498]], [[0.7899, 0.4267, 0.4645], [0.4547, 0.0746, 0.2193]]]]], 3, Con24037), 
LDen61431 = dense_layer([[[[0.9831, 0.9546, 0.2679, 0.8039, 0.5329], [0.3504, 0.054, 0.6443, 0.4207, 0.7774]], [[0.0638, 0.2249, 0.0937, 0.0931, 0.4418], [0.1872, 0.9047, 0.7291, 0.8511, 0.8303]]]], [[0.525, 0.5323, 0.378, 0.898], [0.9136, 0.4281, 0.0541, 0.5464], [0.4693, 0.7863, 0.3654, 0.9705], [0.822, 0.0198, 0.5507, 0.3084], [0.6266, 0.5074, 0.0142, 0.723]],[0.943, 0.6334, 0.7383, 0.5476], Den61431), 
LSub88201 = subtract_layer(Con24037,Den61431, Sub88201), 
LRes25467 = reshape_layer(Sub88201, [2, 8], Res25467), 
LZer51053 = zero_padding1D_layer(Res25467, 3, 0, Zer51053), 
LCon1813 = concatenate_layer([Zer51053,[[[0.2492, 0.5988, 0.766, 0.4746, 0.3846, 0.9757, 0.9588, 0.6055, 0.0709, 0.5194], [0.5327, 0.9891, 0.7533, 0.9594, 0.3814, 0.7014, 0.5587, 0.1557, 0.4518, 0.6609], [0.7341, 0.6777, 0.7861, 0.9371, 0.3729, 0.2452, 0.8927, 0.3394, 0.3025, 0.578], [0.9983, 0.5037, 0.1212, 0.1082, 0.4902, 0.8618, 0.0237, 0.6948, 0.649, 0.3377], [0.2339, 0.956, 0.5942, 0.3452, 0.5771, 0.0771, 0.215, 0.6822, 0.9657, 0.9934]]]], 2, Con1813), 
LZer14459 = zero_padding2D_layer([[[[1.2499, 1.3345, 1.2081], [1.0994, 1.2031, 1.9747], [1.7027, 1.7621, 1.3856], [1.0139, 1.9033, 1.1504]], [[1.2164, 1.6623, 1.349], [1.0268, 1.7457, 1.9238], [1.797, 1.7128, 1.9905], [1.3377, 1.2091, 1.6093]], [[1.0641, 1.4803, 1.6401], [1.6332, 1.4181, 1.6615], [1.419, 1.8952, 1.2022], [1.6337, 1.4027, 1.155]]]], 1, 1, 1, 1, Zer14459), 
LRes48794 = reshape_layer(Zer14459, [5, 18], Res48794), 
LAve93642 = average_layer([[[[[0.085], [0.4167]], [[0.628], [0.1999]]]], [[[[0.88], [0.5324]], [[0.3831], [0.3173]]]]], Ave93642), 
LMas25211 = masking_layer(Ave93642, 2, Mas25211), 
LRes38736 = reshape_layer(Mas25211, [2, 2], Res38736), 
LAve88125 = average_layer([[[[[[0.9692, 0.0449]]], [[[0.5817, 0.4563]]]]], [[[[[0.8322, 0.8033]]], [[[0.3319, 0.5063]]]]]], Ave88125), 
LRes29905 = reshape_layer(Ave88125, [2, 2], Res29905), 
LDot56726 = dot_layer(Res38736,Res29905, 1, 1, Dot56726), 
LZer81054 = zero_padding1D_layer(Dot56726, 3, 0, Zer81054), 
LCon5621 = concatenate_layer([Zer81054,[[[0.3369, 0.7052, 0.1167, 0.5084, 0.3712, 0.6902, 0.6786, 0.0146, 0.0199, 0.1259, 0.1746, 0.9249, 0.2074, 0.7231, 0.952, 0.9971], [0.3678, 0.7395, 0.6117, 0.5494, 0.4257, 0.35, 0.0278, 0.5043, 0.6777, 0.7642, 0.8026, 0.0137, 0.3451, 0.8287, 0.4589, 0.0759], [0.9481, 0.8296, 0.8083, 0.9227, 0.8037, 0.2189, 0.3626, 0.8542, 0.8925, 0.0294, 0.3534, 0.6295, 0.0569, 0.8137, 0.9155, 0.4846], [0.995, 0.0446, 0.2534, 0.3398, 0.7965, 0.05, 0.1589, 0.7857, 0.8305, 0.7177, 0.0765, 0.9897, 0.6398, 0.404, 0.0251, 0.7561], [0.1222, 0.707, 0.074, 0.5856, 0.6866, 0.0236, 0.7447, 0.7343, 0.2599, 0.0993, 0.6667, 0.9501, 0.991, 0.1031, 0.0448, 0.7773]]]], 2, Con5621), 
LMin25188 = minimum_layer([Res48794,Con5621], Min25188), 
LMul81505 = multiply_layer([Con1813,Min25188], Mul81505), 
exec_layers([LAve96591,LRes99871,LZer90655,LCon24037,LDen61431,LSub88201,LRes25467,LZer51053,LCon1813,LZer14459,LRes48794,LAve93642,LMas25211,LRes38736,LAve88125,LRes29905,LDot56726,LZer81054,LCon5621,LMin25188,LMul81505],["Ave96591","Res99871","Zer90655","Con24037","Den61431","Sub88201","Res25467","Zer51053","Con1813","Zer14459","Res48794","Ave93642","Mas25211","Res38736","Ave88125","Res29905","Dot56726","Zer81054","Con5621","Min25188","Mul81505"],Mul81505,"Mul81505")

Actual (Unparsed): [[[0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0148091, 0.4988031, 0.5105114, 0.7331735, 0.3061116, 0.0096092, 0.1928074, 0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.2661847, 0.5788913, 0.7015942, 0.0275507, 0.1317829, 0.1543534, 0.0507946, 0.0000000, 0.0000000, 0.0000000], [-0.0000000, -0.0000000, -0.0000000, -0.1151047, -0.5857591, -0.3335582, -0.4517894, -0.0729531, 0.1586299, 0.3957571, 0.1006566, 0.0776551, 0.0375003, 0.8529235, 0.0151633, 0.0000000, 0.0000000, 0.0000000], [-0.0000000, -0.0000000, -0.0000000, -0.0000000, -0.0000000, -0.0000000, -0.0000000, -0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000]]]

Expected (Unparsed): [[[0,0,0,0,0,0,0,0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0],[0,0,0,0.0,0.0,0.0,0.0,0.0,0.014809059999999997,0.49880313,0.51051141,0.73317348,0.30611164,0.00960918,0.19280737,0.0,0.0,0.0],[0,0,0,0.0,0.0,0.0,0.0,0.0,0.26618465999999996,0.57889134,0.70159425,0.02755074,0.13178286,0.1543534,0.05079463,0.0,0.0,0.0],[-0.0,-0.0,-0.0,-0.11510473478999998,-0.5857590928420001,-0.3335582239939999,-0.4517894476349999,-0.07295310149999999,0.15862987,0.39575709,0.1006566,0.07765514,0.0375003,0.8529234600000001,0.01516326,0.0,0.0,0.0],[-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0]]]

Actual:   [[[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0.0149, 0.4989, 0.5106, 0.7332, 0.3062, 0.0097, 0.1929, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0.2662, 0.5789, 0.7016, 0.0276, 0.1318, 0.1544, 0.0508, 0, 0, 0], [-0, -0, -0, -0.1151, -0.5857, -0.3335, -0.4517, -0.0729, 0.1587, 0.3958, 0.1007, 0.0777, 0.0376, 0.853, 0.0152, 0, 0, 0], [-0, -0, -0, -0, -0, -0, -0, -0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]]]

Expected: [[[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0.0149, 0.4989, 0.5106, 0.7332, 0.3062, 0.0097, 0.1929, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0.2662, 0.5789, 0.7016, 0.0276, 0.1318, 0.1544, 0.0508, 0, 0, 0], [-0, -0, -0, -0.1151, -0.5857, -0.3335, -0.4517, -0.0729, 0.1587, 0.3958, 0.1007, 0.0777, 0.0376, 0.853, 0.0152, 0, 0, 0], [-0, -0, -0, -0, -0, -0, -0, -0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]]]