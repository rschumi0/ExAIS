import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Loc56685 = tf.keras.layers.Input(shape=([1, 2, 1]))

Loc56685 = keras.layers.LocallyConnected2D(3, (1, 1),strides=(1, 1), name = 'Loc56685', )(in0Loc56685)
Glo36333 = keras.layers.GlobalMaxPool2D(name = 'Glo36333', )(Loc56685)
Res11265 = keras.layers.Reshape((3, 1), name = 'Res11265', )(Glo36333)
Zer15110 = keras.layers.ZeroPadding1D(padding=((1, 1)), name = 'Zer15110', )(Res11265)
model = tf.keras.models.Model(inputs=[in0Loc56685], outputs=Zer15110)
w = model.get_layer('Loc56685').get_weights() 
w[0] = np.array([[[0.6457, 0.9108, 0.6447]], [[0.8751, 0.8531, 0.0176]]])
w[1] = np.array([[[0, 0, 0], [0, 0, 0]]])
model.get_layer('Loc56685').set_weights(w) 
in0Loc56685 = tf.constant([[[[0.9854], [0.7164]]]])
print (np.array2string(model.predict([in0Loc56685],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Zer15110.png')

LLoc56685 = locally_connected2D_layer([[[[0.9854], [0.7164]]]], 1, 1,[[[0.6457, 0.9108, 0.6447]], [[0.8751, 0.8531, 0.0176]]],[[[0, 0, 0], [0, 0, 0]]], 1, 1, Loc56685), 
LGlo36333 = global_max_pool2D_layer(Loc56685, Glo36333), 
LRes11265 = reshape_layer(Glo36333, [3, 1], Res11265), 
LZer15110 = zero_padding1D_layer(Res11265, 1, 1, Zer15110), 
exec_layers([LLoc56685,LGlo36333,LRes11265,LZer15110],["Loc56685","Glo36333","Res11265","Zer15110"],Zer15110,"Zer15110")

Actual (Unparsed): [[[0.0000000], [0.6362728], [0.8975023], [0.6352874], [0.0000000]]]

Expected (Unparsed): [[[0],[0.6362727800000001],[0.8975023200000001],[0.6352873800000001],[0]]]

Actual:   [[[0], [0.6363], [0.8976], [0.6353], [0]]]

Expected: [[[0], [0.6363], [0.8976], [0.6353], [0]]]