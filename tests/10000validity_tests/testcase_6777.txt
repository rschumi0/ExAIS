import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Zer10832 = tf.keras.layers.Input(shape=([4, 4, 2, 4]))

Zer10832 = keras.layers.ZeroPadding3D(padding=((1, 1), (1, 1), (1, 1)), name = 'Zer10832', )(in0Zer10832)
Mas10736 = keras.layers.Masking(mask_value=2, name = 'Mas10736', )(Zer10832)
Res49463 = keras.layers.Reshape((6, 6, 16), name = 'Res49463', )(Mas10736)
Res18267 = keras.layers.Reshape((6, 96), name = 'Res18267', )(Res49463)
Con83737 = keras.layers.Conv1D(2, (1),strides=(1), padding='same', dilation_rate=(1), name = 'Con83737', )(Res18267)
model = tf.keras.models.Model(inputs=[in0Zer10832], outputs=Con83737)
w = model.get_layer('Con83737').get_weights() 
w[0] = np.array([[[0.127, 0.741], [0.8457, 0.791], [0.9399, 0.771], [0.392, 0.5296], [0.7289, 0.4172], [0.0708, 0.975], [0.6194, 0.5777], [0.2077, 0.104], [0.9628, 0.811], [0.8896, 0.1861], [0.318, 0.9144], [0.0243, 0.9965], [0.3817, 0.9233], [0.8906, 0.0601], [0.7306, 0.6287], [0.7429, 0.9538], [0.242, 0.7271], [0.8695, 0.652], [0.9726, 0.8816], [0.7395, 0.5314], [0.0907, 0.3022], [0.5208, 0.9209], [0.1831, 0.9316], [0.3035, 0.0236], [0.8834, 0.962], [0.8207, 0.6254], [0.311, 0.2029], [0.3225, 0.2515], [0.2459, 0.7675], [0.529, 0.3376], [0.3184, 0.6558], [0.2681, 0.5411], [0.7432, 0.0713], [0.4822, 0.5314], [0.2928, 0.729], [0.7804, 0.4746], [0.2687, 0.9882], [0.6077, 0.953], [0.2048, 0.3735], [0.4037, 0.2446], [0.9172, 0.9354], [0.8316, 0.731], [0.2994, 0.948], [0.2735, 0.6957], [0.9552, 0.6373], [0.3071, 0.9318], [0.3606, 0.9948], [0.806, 0.384], [0.7504, 0.2398], [0.6401, 0.519], [0.3356, 0.1657], [0.6901, 0.2375], [0.7764, 0.4282], [0.0363, 0.9222], [0.0589, 0.8179], [0.7342, 0.648], [0.0527, 0.6933], [0.5464, 0.6734], [0.0631, 0.0491], [0.3662, 0.0785], [0.6356, 0.1402], [0.8354, 0.8178], [0.7151, 0.1915], [0.8405, 0.5165], [0.0223, 0.4849], [0.1505, 0.055], [0.1663, 0.0338], [0.4497, 0.3558], [0.582, 0.1317], [0.4158, 0.8199], [0.8553, 0.2912], [0.2941, 0.5393], [0.3763, 0.4785], [0.6265, 0.7576], [0.5499, 0.0933], [0.4089, 0.0438], [0.9831, 0.8416], [0.9712, 0.3013], [0.1685, 0.5082], [0.2995, 0.0401], [0.1874, 0.6466], [0.3559, 0.3098], [0.8683, 0.3733], [0.1863, 0.3091], [0.6517, 0.7794], [0.2572, 0.9704], [0.1388, 0.9525], [0.5097, 0.747], [0.929, 0.2413], [0.0794, 0.4269], [0.8881, 0.188], [0.4956, 0.0409], [0.4326, 0.5035], [0.4411, 0.8361], [0.7616, 0.5684], [0.8333, 0.8476]]])
w[1] = np.array([0, 0])
model.get_layer('Con83737').set_weights(w) 
in0Zer10832 = tf.constant([[[[[1.2946, 1.8913, 1.2215, 1.9709], [1.912, 1.0916, 1.647, 1.2772]], [[1.6509, 1.5096, 1.4032, 1.636], [1.4362, 1.2133, 1.8409, 1.9392]], [[1.1431, 1.3559, 1.8735, 1.7043], [1.5175, 1.6662, 1.9516, 1.7215]], [[1.3393, 1.6425, 1.5324, 1.3627], [1.6038, 1.9221, 1.3806, 1.1857]]], [[[1.9712, 1.5317, 1.8408, 1.149], [1.1134, 1.1124, 1.4266, 1.096]], [[1.8729, 1.7532, 1.6876, 1.1613], [1.3429, 1.7718, 1.3358, 1.4087]], [[1.0737, 1.6349, 1.0402, 1.3171], [1.6171, 1.2226, 1.1287, 1.6969]], [[1.5325, 1.8145, 1.68, 1.2446], [1.7925, 1.4935, 1.1305, 1.2158]]], [[[1.2531, 1.1523, 1.5724, 1.6375], [1.4806, 1.9185, 1.3815, 1.0672]], [[1.7668, 1.614, 1.6723, 1.1551], [1.6009, 1.8095, 1.3514, 1.1689]], [[1.2229, 1.1448, 1.2174, 1.2003], [1.1296, 1.8477, 1.6353, 1.987]], [[1.5735, 1.8014, 1.8077, 1.1581], [1.1557, 1.0878, 1.5552, 1.2375]]], [[[1.592, 1.6644, 1.824, 1.9248], [1.6088, 1.72, 1.8453, 1.0146]], [[1.7128, 1.2991, 1.985, 1.8118], [1.2706, 1.9843, 1.8439, 1.0528]], [[1.9316, 1.7837, 1.0941, 1.155], [1.9353, 1.881, 1.8704, 1.0789]], [[1.2527, 1.5765, 1.277, 1.2123], [1.8296, 1.5731, 1.7111, 1.4627]]]]])
print (np.array2string(model.predict([in0Zer10832],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Con83737.png')

LZer10832 = zero_padding3D_layer([[[[[1.2946, 1.8913, 1.2215, 1.9709], [1.912, 1.0916, 1.647, 1.2772]], [[1.6509, 1.5096, 1.4032, 1.636], [1.4362, 1.2133, 1.8409, 1.9392]], [[1.1431, 1.3559, 1.8735, 1.7043], [1.5175, 1.6662, 1.9516, 1.7215]], [[1.3393, 1.6425, 1.5324, 1.3627], [1.6038, 1.9221, 1.3806, 1.1857]]], [[[1.9712, 1.5317, 1.8408, 1.149], [1.1134, 1.1124, 1.4266, 1.096]], [[1.8729, 1.7532, 1.6876, 1.1613], [1.3429, 1.7718, 1.3358, 1.4087]], [[1.0737, 1.6349, 1.0402, 1.3171], [1.6171, 1.2226, 1.1287, 1.6969]], [[1.5325, 1.8145, 1.68, 1.2446], [1.7925, 1.4935, 1.1305, 1.2158]]], [[[1.2531, 1.1523, 1.5724, 1.6375], [1.4806, 1.9185, 1.3815, 1.0672]], [[1.7668, 1.614, 1.6723, 1.1551], [1.6009, 1.8095, 1.3514, 1.1689]], [[1.2229, 1.1448, 1.2174, 1.2003], [1.1296, 1.8477, 1.6353, 1.987]], [[1.5735, 1.8014, 1.8077, 1.1581], [1.1557, 1.0878, 1.5552, 1.2375]]], [[[1.592, 1.6644, 1.824, 1.9248], [1.6088, 1.72, 1.8453, 1.0146]], [[1.7128, 1.2991, 1.985, 1.8118], [1.2706, 1.9843, 1.8439, 1.0528]], [[1.9316, 1.7837, 1.0941, 1.155], [1.9353, 1.881, 1.8704, 1.0789]], [[1.2527, 1.5765, 1.277, 1.2123], [1.8296, 1.5731, 1.7111, 1.4627]]]]], 1, 1, 1, 1, 1, 1, Zer10832), 
LMas10736 = masking_layer(Zer10832, 2, Mas10736), 
LRes49463 = reshape_layer(Mas10736, [6, 6, 16], Res49463), 
LRes18267 = reshape_layer(Res49463, [6, 96], Res18267), 
LCon83737 = conv1D_layer(Res18267, 1,[[[0.127, 0.741], [0.8457, 0.791], [0.9399, 0.771], [0.392, 0.5296], [0.7289, 0.4172], [0.0708, 0.975], [0.6194, 0.5777], [0.2077, 0.104], [0.9628, 0.811], [0.8896, 0.1861], [0.318, 0.9144], [0.0243, 0.9965], [0.3817, 0.9233], [0.8906, 0.0601], [0.7306, 0.6287], [0.7429, 0.9538], [0.242, 0.7271], [0.8695, 0.652], [0.9726, 0.8816], [0.7395, 0.5314], [0.0907, 0.3022], [0.5208, 0.9209], [0.1831, 0.9316], [0.3035, 0.0236], [0.8834, 0.962], [0.8207, 0.6254], [0.311, 0.2029], [0.3225, 0.2515], [0.2459, 0.7675], [0.529, 0.3376], [0.3184, 0.6558], [0.2681, 0.5411], [0.7432, 0.0713], [0.4822, 0.5314], [0.2928, 0.729], [0.7804, 0.4746], [0.2687, 0.9882], [0.6077, 0.953], [0.2048, 0.3735], [0.4037, 0.2446], [0.9172, 0.9354], [0.8316, 0.731], [0.2994, 0.948], [0.2735, 0.6957], [0.9552, 0.6373], [0.3071, 0.9318], [0.3606, 0.9948], [0.806, 0.384], [0.7504, 0.2398], [0.6401, 0.519], [0.3356, 0.1657], [0.6901, 0.2375], [0.7764, 0.4282], [0.0363, 0.9222], [0.0589, 0.8179], [0.7342, 0.648], [0.0527, 0.6933], [0.5464, 0.6734], [0.0631, 0.0491], [0.3662, 0.0785], [0.6356, 0.1402], [0.8354, 0.8178], [0.7151, 0.1915], [0.8405, 0.5165], [0.0223, 0.4849], [0.1505, 0.055], [0.1663, 0.0338], [0.4497, 0.3558], [0.582, 0.1317], [0.4158, 0.8199], [0.8553, 0.2912], [0.2941, 0.5393], [0.3763, 0.4785], [0.6265, 0.7576], [0.5499, 0.0933], [0.4089, 0.0438], [0.9831, 0.8416], [0.9712, 0.3013], [0.1685, 0.5082], [0.2995, 0.0401], [0.1874, 0.6466], [0.3559, 0.3098], [0.8683, 0.3733], [0.1863, 0.3091], [0.6517, 0.7794], [0.2572, 0.9704], [0.1388, 0.9525], [0.5097, 0.747], [0.929, 0.2413], [0.0794, 0.4269], [0.8881, 0.188], [0.4956, 0.0409], [0.4326, 0.5035], [0.4411, 0.8361], [0.7616, 0.5684], [0.8333, 0.8476]]],[0, 0], 1, true, 1, Con83737), 
exec_layers([LZer10832,LMas10736,LRes49463,LRes18267,LCon83737],["Zer10832","Mas10736","Res49463","Res18267","Con83737"],Con83737,"Con83737")

Actual (Unparsed): [[[0.0000000, 0.0000000], [21.4177915, 27.7039862], [19.7748348, 26.1164751], [20.9898100, 25.2501370], [21.8726299, 27.9205843], [0.0000000, 0.0000000]]]

Expected (Unparsed): [[[0.0,0.0],[21.417791429999998,27.703986109999992],[19.77483465,26.11647487000001],[20.989809979999997,25.250137099999996],[21.872629939999996,27.920584260000002],[0.0,0.0]]]

Actual:   [[[0, 0], [21.4178, 27.704], [19.7749, 26.1165], [20.9899, 25.2502], [21.8727, 27.9206], [0, 0]]]

Expected: [[[0, 0], [21.4178, 27.704], [19.7749, 26.1165], [20.9899, 25.2502], [21.8727, 27.9206], [0, 0]]]