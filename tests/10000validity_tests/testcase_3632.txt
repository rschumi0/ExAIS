import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Add54632 = tf.keras.layers.Input(shape=([2, 1]))
in1Add54632 = tf.keras.layers.Input(shape=([2, 1]))
in0Con77015 = tf.keras.layers.Input(shape=([2, 3, 2]))
in0Con89801 = tf.keras.layers.Input(shape=([1, 1]))
in0Con59715 = tf.keras.layers.Input(shape=([1, 2, 2]))
in0Loc47781 = tf.keras.layers.Input(shape=([1, 1, 1]))

Add54632 = keras.layers.Add(name = 'Add54632', )([in0Add54632,in1Add54632])
Res42496 = keras.layers.Reshape((2, 1, 1), name = 'Res42496', )(Add54632)
Zer34631 = keras.layers.ZeroPadding2D(padding=((0, 0), (2, 0)), name = 'Zer34631', )(Res42496)
Con77015 = keras.layers.Concatenate(axis=3, name = 'Con77015', )([Zer34631,in0Con77015])
Con89801 = keras.layers.Conv1D(4, (1),strides=(1), padding='valid', dilation_rate=(1), name = 'Con89801', )(in0Con89801)
Den55142 = keras.layers.Dense(2,name = 'Den55142', )(Con89801)
Res9233 = keras.layers.Reshape((1, 2, 1), name = 'Res9233', )(Den55142)
Con59715 = keras.layers.Concatenate(axis=3, name = 'Con59715', )([Res9233,in0Con59715])
Loc47781 = keras.layers.LocallyConnected2D(3, (1, 1),strides=(1, 1), name = 'Loc47781', )(in0Loc47781)
Lay64562 = keras.layers.LayerNormalization(axis=1, epsilon=2.749305748451348, name = 'Lay64562', )(Loc47781)
Zer98132 = keras.layers.ZeroPadding2D(padding=((0, 0), (1, 0)), name = 'Zer98132', )(Lay64562)
Ave11887 = keras.layers.Average(name = 'Ave11887', )([Con59715,Zer98132])
Zer26338 = keras.layers.ZeroPadding2D(padding=((1, 0), (1, 0)), name = 'Zer26338', )(Ave11887)
Min21768 = keras.layers.Minimum(name = 'Min21768', )([Con77015,Zer26338])
Lay80009 = keras.layers.LayerNormalization(axis=1, epsilon=1.372661338666549, name = 'Lay80009', )(Min21768)
model = tf.keras.models.Model(inputs=[in0Add54632,in1Add54632,in0Con77015,in0Con89801,in0Con59715,in0Loc47781], outputs=Lay80009)
w = model.get_layer('Con89801').get_weights() 
w[0] = np.array([[[0.4007, 0.5252, 0.5004, 0.0129]]])
w[1] = np.array([0, 0, 0, 0])
model.get_layer('Con89801').set_weights(w) 
w = model.get_layer('Den55142').get_weights() 
w[0] = np.array([[0.8799, 0.8492], [0.3928, 0.0595], [0.8358, 0.2795], [0.7949, 0.4712]])
w[1] = np.array([0.3797, 0.4466])
model.get_layer('Den55142').set_weights(w) 
w = model.get_layer('Loc47781').get_weights() 
w[0] = np.array([[[0.7186, 0.025, 0.4795]]])
w[1] = np.array([[[0, 0, 0]]])
model.get_layer('Loc47781').set_weights(w) 
in0Add54632 = tf.constant([[[0.537], [0.4436]]])
in1Add54632 = tf.constant([[[0.1272], [0.7682]]])
in0Con77015 = tf.constant([[[[0.6152, 0.1898], [0.1397, 0.9953], [0.9978, 0.4451]], [[0.8951, 0.7613], [0.9463, 0.4577], [0.6139, 0.57]]]])
in0Con89801 = tf.constant([[[0.8081]]])
in0Con59715 = tf.constant([[[[0.6923, 0.3282], [0.8497, 0.2996]]]])
in0Loc47781 = tf.constant([[[[0.9786]]]])
print (np.array2string(model.predict([in0Add54632,in1Add54632,in0Con77015,in0Con89801,in0Con59715,in0Loc47781],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Lay80009.png')

LAdd54632 = add_layer([[[[0.537], [0.4436]]], [[[0.1272], [0.7682]]]], Add54632), 
LRes42496 = reshape_layer(Add54632, [2, 1, 1], Res42496), 
LZer34631 = zero_padding2D_layer(Res42496, 0, 0, 2, 0, Zer34631), 
LCon77015 = concatenate_layer([Zer34631,[[[[0.6152, 0.1898], [0.1397, 0.9953], [0.9978, 0.4451]], [[0.8951, 0.7613], [0.9463, 0.4577], [0.6139, 0.57]]]]], 3, Con77015), 
LCon89801 = conv1D_layer([[[0.8081]]], 1,[[[0.4007, 0.5252, 0.5004, 0.0129]]],[0, 0, 0, 0], 1, false, 1, Con89801), 
LDen55142 = dense_layer(Con89801, [[0.8799, 0.8492], [0.3928, 0.0595], [0.8358, 0.2795], [0.7949, 0.4712]],[0.3797, 0.4466], Den55142), 
LRes9233 = reshape_layer(Den55142, [1, 2, 1], Res9233), 
LCon59715 = concatenate_layer([Res9233,[[[[0.6923, 0.3282], [0.8497, 0.2996]]]]], 3, Con59715), 
LLoc47781 = locally_connected2D_layer([[[[0.9786]]]], 1, 1,[[[0.7186, 0.025, 0.4795]]],[[[0, 0, 0]]], 1, 1, Loc47781), 
LLay64562 = layer_normalization_layer(Loc47781, 1, 2.749305748451348, Lay64562), 
LZer98132 = zero_padding2D_layer(Lay64562, 0, 0, 1, 0, Zer98132), 
LAve11887 = average_layer([Con59715,Zer98132], Ave11887), 
LZer26338 = zero_padding2D_layer(Ave11887, 1, 0, 1, 0, Zer26338), 
LMin21768 = minimum_layer([Con77015,Zer26338], Min21768), 
LLay80009 = layer_normalization_layer(Min21768, 1, 1.372661338666549, Lay80009), 
exec_layers([LAdd54632,LRes42496,LZer34631,LCon77015,LCon89801,LDen55142,LRes9233,LCon59715,LLoc47781,LLay64562,LZer98132,LAve11887,LZer26338,LMin21768,LLay80009],["Add54632","Res42496","Zer34631","Con77015","Con89801","Den55142","Res9233","Con59715","Loc47781","Lay64562","Zer98132","Ave11887","Zer26338","Min21768","Lay80009"],Lay80009,"Lay80009")

Actual (Unparsed): [[[[0.0000000, 0.0000000, 0.0000000], [0.0000000, -0.1461386, -0.0698610], [-0.1814616, -0.1784022, -0.0637991]], [[0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.1461386, 0.0698610], [0.1814616, 0.1784022, 0.0637991]]]]

Expected (Unparsed): [[[[0.0,0.0,0.0],[0.0,-0.1461385858205825,-0.06986095068442459],[-0.1814615527230276,-0.17840225031089144,-0.06379908550648451]],[[0.0,0.0,0.0],[0.0,0.1461385858205825,0.06986095068442459],[0.1814615527230276,0.17840225031089144,0.06379908550648451]]]]

Actual:   [[[[0, 0, 0], [0, -0.1461, -0.0698], [-0.1814, -0.1784, -0.0637]], [[0, 0, 0], [0, 0.1462, 0.0699], [0.1815, 0.1785, 0.0638]]]]

Expected: [[[[0, 0, 0], [0, -0.1461, -0.0698], [-0.1814, -0.1784, -0.0637]], [[0, 0, 0], [0, 0.1462, 0.0699], [0.1815, 0.1785, 0.0638]]]]