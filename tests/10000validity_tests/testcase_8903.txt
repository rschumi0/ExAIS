import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Min53270 = tf.keras.layers.Input(shape=([1, 1]))
in1Min53270 = tf.keras.layers.Input(shape=([1, 1]))
in0Con92870 = tf.keras.layers.Input(shape=([5, 1]))
in0Zer40798 = tf.keras.layers.Input(shape=([3, 2]))
in0Con96058 = tf.keras.layers.Input(shape=([2, 1]))
in0Mul50059 = tf.keras.layers.Input(shape=([1, 2]))
in1Mul50059 = tf.keras.layers.Input(shape=([1, 2]))

Min53270 = keras.layers.Minimum(name = 'Min53270', )([in0Min53270,in1Min53270])
Zer84649 = keras.layers.ZeroPadding1D(padding=((4, 0)), name = 'Zer84649', )(Min53270)
Con92870 = keras.layers.Concatenate(axis=2, name = 'Con92870', )([Zer84649,in0Con92870])
Zer40798 = keras.layers.ZeroPadding1D(padding=((1, 1)), name = 'Zer40798', )(in0Zer40798)
Sub26685 = keras.layers.Subtract(name = 'Sub26685', )([Con92870,Zer40798])
Ave67999 = keras.layers.AveragePooling1D(pool_size=(1), strides=(1), padding='same', name = 'Ave67999', )(Sub26685)
Glo13626 = keras.layers.GlobalAveragePooling1D(name = 'Glo13626', )(Ave67999)
Res89171 = keras.layers.Reshape((2, 1), name = 'Res89171', )(Glo13626)
Con96058 = keras.layers.Concatenate(axis=2, name = 'Con96058', )([Res89171,in0Con96058])
Mul50059 = keras.layers.Multiply(name = 'Mul50059', )([in0Mul50059,in1Mul50059])
Zer78473 = keras.layers.ZeroPadding1D(padding=((1, 0)), name = 'Zer78473', )(Mul50059)
Min19792 = keras.layers.Minimum(name = 'Min19792', )([Con96058,Zer78473])
Max27127 = keras.layers.MaxPool1D(pool_size=(1), name = 'Max27127', )(Min19792)
model = tf.keras.models.Model(inputs=[in0Min53270,in1Min53270,in0Con92870,in0Zer40798,in0Con96058,in0Mul50059,in1Mul50059], outputs=Max27127)
in0Min53270 = tf.constant([[[0.6156]]])
in1Min53270 = tf.constant([[[0.326]]])
in0Con92870 = tf.constant([[[0.8178], [0.0125], [0.2691], [0.7065], [0.4317]]])
in0Zer40798 = tf.constant([[[1.8698, 1.035], [1.7044, 1.4492], [1.4487, 1.4748]]])
in0Con96058 = tf.constant([[[0.7794], [0.8803]]])
in0Mul50059 = tf.constant([[[0.8309, 0.5899]]])
in1Mul50059 = tf.constant([[[0.5717, 0.3322]]])
print (np.array2string(model.predict([in0Min53270,in1Min53270,in0Con92870,in0Zer40798,in0Con96058,in0Mul50059,in1Mul50059],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Max27127.png')

LMin53270 = minimum_layer([[[[0.6156]]], [[[0.326]]]], Min53270), 
LZer84649 = zero_padding1D_layer(Min53270, 4, 0, Zer84649), 
LCon92870 = concatenate_layer([Zer84649,[[[0.8178], [0.0125], [0.2691], [0.7065], [0.4317]]]], 2, Con92870), 
LZer40798 = zero_padding1D_layer([[[1.8698, 1.035], [1.7044, 1.4492], [1.4487, 1.4748]]], 1, 1, Zer40798), 
LSub26685 = subtract_layer(Con92870,Zer40798, Sub26685), 
LAve67999 = average_pooling1D_layer(Sub26685, 1, 1, true, Ave67999), 
LGlo13626 = global_average_pooling1D_layer(Ave67999, Glo13626), 
LRes89171 = reshape_layer(Glo13626, [2, 1], Res89171), 
LCon96058 = concatenate_layer([Res89171,[[[0.7794], [0.8803]]]], 2, Con96058), 
LMul50059 = multiply_layer([[[[0.8309, 0.5899]]], [[[0.5717, 0.3322]]]], Mul50059), 
LZer78473 = zero_padding1D_layer(Mul50059, 1, 0, Zer78473), 
LMin19792 = minimum_layer([Con96058,Zer78473], Min19792), 
LMax27127 = max_pool1D_layer(Min19792, 1, Max27127), 
exec_layers([LMin53270,LZer84649,LCon92870,LZer40798,LSub26685,LAve67999,LGlo13626,LRes89171,LCon96058,LMul50059,LZer78473,LMin19792,LMax27127],["Min53270","Zer84649","Con92870","Zer40798","Sub26685","Ave67999","Glo13626","Res89171","Con96058","Mul50059","Zer78473","Min19792","Max27127"],Max27127,"Max27127")

Actual (Unparsed): [[[-0.9393800, 0.0000000], [-0.3442800, 0.1959648]]]

Expected (Unparsed): [[[-0.9393800000000001,0],[-0.34428,0.19596477999999998]]]

Actual:   [[[-0.9393, 0], [-0.3442, 0.196]]]

Expected: [[[-0.9393, 0], [-0.3442, 0.196]]]