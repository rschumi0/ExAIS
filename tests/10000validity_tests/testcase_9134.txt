import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Dot23402 = tf.keras.layers.Input(shape=([3]))
in1Dot23402 = tf.keras.layers.Input(shape=([3]))

Dot23402 = keras.layers.Dot(axes=(1, 1), name = 'Dot23402', )([in0Dot23402,in1Dot23402])
Res63787 = keras.layers.Reshape((1, 1), name = 'Res63787', )(Dot23402)
Sim99943 = keras.layers.SimpleRNN(3,name = 'Sim99943', )(Res63787)
model = tf.keras.models.Model(inputs=[in0Dot23402,in1Dot23402], outputs=Sim99943)
w = model.get_layer('Sim99943').get_weights() 
w[0] = np.array([[3, 4, 10]])
w[1] = np.array([[3, 1, 5], [5, 9, 8], [9, 10, 2]])
w[2] = np.array([7, 9, 2])
model.get_layer('Sim99943').set_weights(w) 
in0Dot23402 = tf.constant([[0.0946, 0.8183, 0.2472]])
in1Dot23402 = tf.constant([[0.2401, 0.7186, 0.9499]])
print (np.array2string(model.predict([in0Dot23402,in1Dot23402],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Sim99943.png')

LDot23402 = dot_layer([[0.0946, 0.8183, 0.2472]], [[0.2401, 0.7186, 0.9499]], 1, 1, Dot23402), 
LRes63787 = reshape_layer(Dot23402, [1, 1], Res63787), 
LSim99943 = simple_rnn_layer(Res63787,[[3, 4, 10]],[[3, 1, 5], [5, 9, 8], [9, 10, 2]],[7, 9, 2], Sim99943), 
exec_layers([LDot23402,LRes63787,LSim99943],["Dot23402","Res63787","Sim99943"],Sim99943,"Sim99943")

Actual (Unparsed): [[1.0000000, 1.0000000, 1.0000000]]

Expected (Unparsed): [[0.999999989586966,0.9999999999648476,0.9999999983426323]]

Actual:   [[1, 1, 1]]

Expected: [[1, 1, 1]]