import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Con68167 = tf.keras.layers.Input(shape=([1, 2]))
in0ELU80796 = tf.keras.layers.Input(shape=([2, 1, 1]))
in0Con50039 = tf.keras.layers.Input(shape=([1, 1]))
in0Con11945 = tf.keras.layers.Input(shape=([1]))
in0Up_70270 = tf.keras.layers.Input(shape=([4, 1, 3, 3]))

Con68167 = keras.layers.Conv1D(2, (1),strides=(1), padding='valid', dilation_rate=(1), name = 'Con68167', )(in0Con68167)
Cro46429 = keras.layers.Cropping1D(cropping=((0, 0)), name = 'Cro46429', )(Con68167)
ELU80796 = keras.layers.ELU(alpha=-1.860220642055479, name = 'ELU80796', input_shape=(2, 1, 1))(in0ELU80796)
Mas39058 = keras.layers.Masking(mask_value=1, name = 'Mas39058', )(ELU80796)
Res51396 = keras.layers.Reshape((2, 1), name = 'Res51396', )(Mas39058)
Ave53437 = keras.layers.AveragePooling1D(pool_size=(2), name = 'Ave53437', )(Res51396)
Con50039 = keras.layers.Concatenate(axis=2, name = 'Con50039', )([Ave53437,in0Con50039])
Add90 = keras.layers.Add(name = 'Add90', )([Cro46429,Con50039])
Fla1999 = keras.layers.Flatten(name = 'Fla1999', )(Add90)
Con11945 = keras.layers.Concatenate(axis=1, name = 'Con11945', )([Fla1999,in0Con11945])
Up_70270 = keras.layers.UpSampling3D(size=(2, 2, 2), name = 'Up_70270', )(in0Up_70270)
Glo20640 = keras.layers.GlobalMaxPool3D(name = 'Glo20640', )(Up_70270)
Sub68818 = keras.layers.Subtract(name = 'Sub68818', )([Con11945,Glo20640])
model = tf.keras.models.Model(inputs=[in0Con68167,in0ELU80796,in0Con50039,in0Con11945,in0Up_70270], outputs=Sub68818)
w = model.get_layer('Con68167').get_weights() 
w[0] = np.array([[[0.9524, 0.411], [0.1317, 0.245]]])
w[1] = np.array([0, 0])
model.get_layer('Con68167').set_weights(w) 
in0Con68167 = tf.constant([[[0.5995, 0.7455]]])
in0ELU80796 = tf.constant([[[[0.8909]], [[0.6103]]]])
in0Con50039 = tf.constant([[[0.2082]]])
in0Con11945 = tf.constant([[0.3984]])
in0Up_70270 = tf.constant([[[[[1.3005, 1.2593, 1.4968], [1.7178, 1.5283, 1.8944], [1.4054, 1.8133, 1.6382]]], [[[1.7197, 1.828, 1.6276], [1.5141, 1.9626, 1.1354], [1.3618, 1.0242, 1.7975]]], [[[1.7843, 1.1357, 1.5838], [1.1821, 1.8195, 1.6236], [1.1967, 1.9956, 1.5377]]], [[[1.5796, 1.0301, 1.6965], [1.2189, 1.1885, 1.7875], [1.4748, 1.1826, 1.695]]]]])
print (np.array2string(model.predict([in0Con68167,in0ELU80796,in0Con50039,in0Con11945,in0Up_70270],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Sub68818.png')

LCon68167 = conv1D_layer([[[0.5995, 0.7455]]], 1,[[[0.9524, 0.411], [0.1317, 0.245]]],[0, 0], 1, false, 1, Con68167), 
LCro46429 = cropping1D_layer(Con68167, 0, 0, Cro46429), 
LELU80796 = elu_layer([[[[0.8909]], [[0.6103]]]], -1.860220642055479, ELU80796), 
LMas39058 = masking_layer(ELU80796, 1, Mas39058), 
LRes51396 = reshape_layer(Mas39058, [2, 1], Res51396), 
LAve53437 = average_pooling1D_layer(Res51396, 2, Ave53437), 
LCon50039 = concatenate_layer([Ave53437,[[[0.2082]]]], 2, Con50039), 
LAdd90 = add_layer([Cro46429,Con50039], Add90), 
LFla1999 = flatten_layer(Add90, Fla1999), 
LCon11945 = concatenate_layer([Fla1999,[[0.3984]]], 1, Con11945), 
LUp_70270 = up_sampling3D_layer([[[[[1.3005, 1.2593, 1.4968], [1.7178, 1.5283, 1.8944], [1.4054, 1.8133, 1.6382]]], [[[1.7197, 1.828, 1.6276], [1.5141, 1.9626, 1.1354], [1.3618, 1.0242, 1.7975]]], [[[1.7843, 1.1357, 1.5838], [1.1821, 1.8195, 1.6236], [1.1967, 1.9956, 1.5377]]], [[[1.5796, 1.0301, 1.6965], [1.2189, 1.1885, 1.7875], [1.4748, 1.1826, 1.695]]]]], 2, 2, 2, Up_70270), 
LGlo20640 = global_max_pool3D_layer(Up_70270, Glo20640), 
LSub68818 = subtract_layer(Con11945,Glo20640, Sub68818), 
exec_layers([LCon68167,LCro46429,LELU80796,LMas39058,LRes51396,LAve53437,LCon50039,LAdd90,LFla1999,LCon11945,LUp_70270,LGlo20640,LSub68818],["Con68167","Cro46429","ELU80796","Mas39058","Res51396","Ave53437","Con50039","Add90","Fla1999","Con11945","Up_70270","Glo20640","Sub68818"],Sub68818,"Sub68818")

Actual (Unparsed): [[-0.3645538, -1.3583580, -1.4960000]]

Expected (Unparsed): [[-0.36455385000000007,-1.358358,-1.496]]

Actual:   [[-0.3645, -1.3583, -1.496]]

Expected: [[-0.3645, -1.3583, -1.496]]