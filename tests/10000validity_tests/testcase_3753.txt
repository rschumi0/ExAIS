import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Dot66497 = tf.keras.layers.Input(shape=([2, 2]))
in1Dot66497 = tf.keras.layers.Input(shape=([2, 2]))
in0Up_44880 = tf.keras.layers.Input(shape=([2, 1, 1]))
in0Min11945 = tf.keras.layers.Input(shape=([2, 2, 1]))
in1Min11945 = tf.keras.layers.Input(shape=([2, 2, 1]))
in0Sim72149 = tf.keras.layers.Input(shape=([1, 3]))
in0Con80503 = tf.keras.layers.Input(shape=([1]))
in0Con23550 = tf.keras.layers.Input(shape=([4, 1, 2]))
in0Dot75642 = tf.keras.layers.Input(shape=([3]))
in1Dot75642 = tf.keras.layers.Input(shape=([3]))

Dot66497 = keras.layers.Dot(axes=(2, 2), name = 'Dot66497', )([in0Dot66497,in1Dot66497])
GRU86311 = keras.layers.GRU(2,reset_after=False, recurrent_activation='sigmoid', name = 'GRU86311', )(Dot66497)
Lea33118 = keras.layers.LeakyReLU(alpha=3.5172339894754967, name = 'Lea33118', )(GRU86311)
Res17454 = keras.layers.Reshape((2, 1), name = 'Res17454', )(Lea33118)
Res8440 = keras.layers.Reshape((2, 1, 1), name = 'Res8440', )(Res17454)
Zer21343 = keras.layers.ZeroPadding2D(padding=((0, 0), (1, 0)), name = 'Zer21343', )(Res8440)
Up_44880 = keras.layers.UpSampling2D(size=(1, 1), name = 'Up_44880', )(in0Up_44880)
Zer625 = keras.layers.ZeroPadding2D(padding=((0, 0), (1, 0)), name = 'Zer625', )(Up_44880)
Min11945 = keras.layers.Minimum(name = 'Min11945', )([in0Min11945,in1Min11945])
Ave7889 = keras.layers.Average(name = 'Ave7889', )([Zer625,Min11945])
Max55216 = keras.layers.Maximum(name = 'Max55216', )([Zer21343,Ave7889])
Res37271 = keras.layers.Reshape((2, 2), name = 'Res37271', )(Max55216)
Fla38668 = keras.layers.Flatten(name = 'Fla38668', )(Res37271)
Sim72149 = keras.layers.SimpleRNN(3,name = 'Sim72149', )(in0Sim72149)
Con80503 = keras.layers.Concatenate(axis=1, name = 'Con80503', )([Sim72149,in0Con80503])
Add39052 = keras.layers.Add(name = 'Add39052', )([Fla38668,Con80503])
Res37256 = keras.layers.Reshape((4, 1), name = 'Res37256', )(Add39052)
Res70617 = keras.layers.Reshape((4, 1, 1), name = 'Res70617', )(Res37256)
Con23550 = keras.layers.Concatenate(axis=3, name = 'Con23550', )([Res70617,in0Con23550])
Dot75642 = keras.layers.Dot(axes=(1, 1), name = 'Dot75642', )([in0Dot75642,in1Dot75642])
Res10210 = keras.layers.Reshape((1, 1), name = 'Res10210', )(Dot75642)
Res20145 = keras.layers.Reshape((1, 1, 1), name = 'Res20145', )(Res10210)
Res99342 = keras.layers.Reshape((1, 1, 1, 1), name = 'Res99342', )(Res20145)
Con80364 = keras.layers.Conv3DTranspose(4, (1, 1, 1),strides=(1, 1, 1), padding='valid', name = 'Con80364', )(Res99342)
Res23731 = keras.layers.Reshape((1, 1, 4), name = 'Res23731', )(Con80364)
Con11264 = keras.layers.Conv2D(3, (1, 1),strides=(4, 1), padding='valid', dilation_rate=(1, 1), name = 'Con11264', )(Res23731)
Zer91990 = keras.layers.ZeroPadding2D(padding=((3, 0), (0, 0)), name = 'Zer91990', )(Con11264)
Add7341 = keras.layers.Add(name = 'Add7341', )([Con23550,Zer91990])
model = tf.keras.models.Model(inputs=[in0Dot66497,in1Dot66497,in0Up_44880,in0Min11945,in1Min11945,in0Sim72149,in0Con80503,in0Con23550,in0Dot75642,in1Dot75642], outputs=Add7341)
w = model.get_layer('GRU86311').get_weights() 
w[0] = np.array([[7, 6, 10, 6, 7, 9], [6, 3, 2, 1, 10, 1]])
w[1] = np.array([[10, 8, 3, 1, 9, 2], [9, 2, 5, 9, 10, 2]])
w[2] = np.array([10, 10, 8, 3, 10, 7])
model.get_layer('GRU86311').set_weights(w) 
w = model.get_layer('Sim72149').get_weights() 
w[0] = np.array([[3, 5, 1], [3, 4, 8], [4, 6, 9]])
w[1] = np.array([[8, 1, 3], [4, 4, 4], [2, 1, 1]])
w[2] = np.array([5, 9, 6])
model.get_layer('Sim72149').set_weights(w) 
w = model.get_layer('Con80364').get_weights() 
w[0] = np.array([[[[[0.3003], [0.5144], [0.9086], [0.4955]]]]])
w[1] = np.array([0, 0, 0, 0])
model.get_layer('Con80364').set_weights(w) 
w = model.get_layer('Con11264').get_weights() 
w[0] = np.array([[[[0.5699, 0.5195, 0.0891], [0.4341, 0.4285, 0.0078], [0.4401, 0.4143, 0.9966], [0.8492, 0.0065, 0.3753]]]])
w[1] = np.array([0, 0, 0])
model.get_layer('Con11264').set_weights(w) 
in0Dot66497 = tf.constant([[[0.4232, 0.7156], [0.7422, 0.6411]]])
in1Dot66497 = tf.constant([[[0.0758, 0.0893], [0.2312, 0.8141]]])
in0Up_44880 = tf.constant([[[[1.036]], [[1.8237]]]])
in0Min11945 = tf.constant([[[[0.523], [0.461]], [[0.7454], [0.3666]]]])
in1Min11945 = tf.constant([[[[0.7328], [0.4326]], [[0.9625], [0.2472]]]])
in0Sim72149 = tf.constant([[[4, 5, 5]]])
in0Con80503 = tf.constant([[0.5929]])
in0Con23550 = tf.constant([[[[0.4926, 0.5033]], [[0.4765, 0.683]], [[0.6754, 0.0418]], [[0.0265, 0.6639]]]])
in0Dot75642 = tf.constant([[0.4062, 0.524, 0.854]])
in1Dot75642 = tf.constant([[0.8603, 0.7846, 0.1208]])
print (np.array2string(model.predict([in0Dot66497,in1Dot66497,in0Up_44880,in0Min11945,in1Min11945,in0Sim72149,in0Con80503,in0Con23550,in0Dot75642,in1Dot75642],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Add7341.png')

LDot66497 = dot_layer([[[0.4232, 0.7156], [0.7422, 0.6411]]], [[[0.0758, 0.0893], [0.2312, 0.8141]]], 2, 2, Dot66497), 
LGRU86311 = gru_layer(Dot66497,[[7, 6, 10, 6, 7, 9], [6, 3, 2, 1, 10, 1]],[[10, 8, 3, 1, 9, 2], [9, 2, 5, 9, 10, 2]],[10, 10, 8, 3, 10, 7], false, GRU86311), 
LLea33118 = leaky_relu_layer(GRU86311, 3.5172339894754967, Lea33118), 
LRes17454 = reshape_layer(Lea33118, [2, 1], Res17454), 
LRes8440 = reshape_layer(Res17454, [2, 1, 1], Res8440), 
LZer21343 = zero_padding2D_layer(Res8440, 0, 0, 1, 0, Zer21343), 
LUp_44880 = up_sampling2D_layer([[[[1.036]], [[1.8237]]]], 1, 1, Up_44880), 
LZer625 = zero_padding2D_layer(Up_44880, 0, 0, 1, 0, Zer625), 
LMin11945 = minimum_layer([[[[[0.523], [0.461]], [[0.7454], [0.3666]]]], [[[[0.7328], [0.4326]], [[0.9625], [0.2472]]]]], Min11945), 
LAve7889 = average_layer([Zer625,Min11945], Ave7889), 
LMax55216 = maximum_layer([Zer21343,Ave7889], Max55216), 
LRes37271 = reshape_layer(Max55216, [2, 2], Res37271), 
LFla38668 = flatten_layer(Res37271, Fla38668), 
LSim72149 = simple_rnn_layer([[[4, 5, 5]]],[[3, 5, 1], [3, 4, 8], [4, 6, 9]],[[8, 1, 3], [4, 4, 4], [2, 1, 1]],[5, 9, 6], Sim72149), 
LCon80503 = concatenate_layer([Sim72149,[[0.5929]]], 1, Con80503), 
LAdd39052 = add_layer([Fla38668,Con80503], Add39052), 
LRes37256 = reshape_layer(Add39052, [4, 1], Res37256), 
LRes70617 = reshape_layer(Res37256, [4, 1, 1], Res70617), 
LCon23550 = concatenate_layer([Res70617,[[[[0.4926, 0.5033]], [[0.4765, 0.683]], [[0.6754, 0.0418]], [[0.0265, 0.6639]]]]], 3, Con23550), 
LDot75642 = dot_layer([[0.4062, 0.524, 0.854]], [[0.8603, 0.7846, 0.1208]], 1, 1, Dot75642), 
LRes10210 = reshape_layer(Dot75642, [1, 1], Res10210), 
LRes20145 = reshape_layer(Res10210, [1, 1, 1], Res20145), 
LRes99342 = reshape_layer(Res20145, [1, 1, 1, 1], Res99342), 
LCon80364 = conv3D_transpose_layer(Res99342, 1, 1, 1,[[[[[0.3003], [0.5144], [0.9086], [0.4955]]]]],[0, 0, 0, 0], 1, 1, 1, false, Con80364), 
LRes23731 = reshape_layer(Con80364, [1, 1, 4], Res23731), 
LCon11264 = conv2D_layer(Res23731, 1, 1,[[[[0.5699, 0.5195, 0.0891], [0.4341, 0.4285, 0.0078], [0.4401, 0.4143, 0.9966], [0.8492, 0.0065, 0.3753]]]],[0, 0, 0], 4, 1, false, 1, 1, Con11264), 
LZer91990 = zero_padding2D_layer(Con11264, 3, 0, 0, 0, Zer91990), 
LAdd7341 = add_layer([Con23550,Zer91990], Add7341), 
exec_layers([LDot66497,LGRU86311,LLea33118,LRes17454,LRes8440,LZer21343,LUp_44880,LZer625,LMin11945,LAve7889,LMax55216,LRes37271,LFla38668,LSim72149,LCon80503,LAdd39052,LRes37256,LRes70617,LCon23550,LDot75642,LRes10210,LRes20145,LRes99342,LCon80364,LRes23731,LCon11264,LZer91990,LAdd7341],["Dot66497","GRU86311","Lea33118","Res17454","Res8440","Zer21343","Up_44880","Zer625","Min11945","Ave7889","Max55216","Res37271","Fla38668","Sim72149","Con80503","Add39052","Res37256","Res70617","Con23550","Dot75642","Res10210","Res20145","Res99342","Con80364","Res23731","Con11264","Zer91990","Add7341"],Add7341,"Add7341")

Actual (Unparsed): [[[[1.2615000, 0.4926000, 0.5033000]], [[1.7343000, 0.4765000, 0.6830000]], [[1.3727000, 0.6754000, 0.0418000]], [[2.6778856, 0.6795622, 1.6332328]]]]

Expected (Unparsed): [[[[1.2615,0.4926,0.5033]],[[1.7343,0.4765,0.683]],[[1.3727,0.6754,0.0418]],[[2.6778856258700063,0.6795621622818507,1.6332327787079617]]]]

Actual:   [[[[1.2615, 0.4926, 0.5033]], [[1.7343, 0.4765, 0.683]], [[1.3727, 0.6754, 0.0418]], [[2.6779, 0.6796, 1.6333]]]]

Expected: [[[[1.2615, 0.4926, 0.5033]], [[1.7343, 0.4765, 0.683]], [[1.3727, 0.6754, 0.0418]], [[2.6779, 0.6796, 1.6333]]]]