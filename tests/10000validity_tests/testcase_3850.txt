import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Min89637 = tf.keras.layers.Input(shape=([1, 1, 1, 1]))
in1Min89637 = tf.keras.layers.Input(shape=([1, 1, 1, 1]))

Min89637 = keras.layers.Minimum(name = 'Min89637', )([in0Min89637,in1Min89637])
Res51022 = keras.layers.Reshape((1, 1, 1), name = 'Res51022', )(Min89637)
Res97578 = keras.layers.Reshape((1, 1), name = 'Res97578', )(Res51022)
Zer5851 = keras.layers.ZeroPadding1D(padding=((1, 1)), name = 'Zer5851', )(Res97578)
Res94433 = keras.layers.Reshape((3, 1, 1), name = 'Res94433', )(Zer5851)
Glo46959 = keras.layers.GlobalAveragePooling2D(name = 'Glo46959', )(Res94433)
Res64583 = keras.layers.Reshape((1, 1), name = 'Res64583', )(Glo46959)
Per66488 = keras.layers.Permute((1,2), name = 'Per66488',)(Res64583)
model = tf.keras.models.Model(inputs=[in0Min89637,in1Min89637], outputs=Per66488)
in0Min89637 = tf.constant([[[[[0.6504]]]]])
in1Min89637 = tf.constant([[[[[0.6172]]]]])
print (np.array2string(model.predict([in0Min89637,in1Min89637],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Per66488.png')

LMin89637 = minimum_layer([[[[[[0.6504]]]]], [[[[[0.6172]]]]]], Min89637), 
LRes51022 = reshape_layer(Min89637, [1, 1, 1], Res51022), 
LRes97578 = reshape_layer(Res51022, [1, 1], Res97578), 
LZer5851 = zero_padding1D_layer(Res97578, 1, 1, Zer5851), 
LRes94433 = reshape_layer(Zer5851, [3, 1, 1], Res94433), 
LGlo46959 = global_average_pooling2D_layer(Res94433, Glo46959), 
LRes64583 = reshape_layer(Glo46959, [1, 1], Res64583), 
LPer66488 = permute_layer(Res64583, 1,2, Per66488), 
exec_layers([LMin89637,LRes51022,LRes97578,LZer5851,LRes94433,LGlo46959,LRes64583,LPer66488],["Min89637","Res51022","Res97578","Zer5851","Res94433","Glo46959","Res64583","Per66488"],Per66488,"Per66488")

Actual (Unparsed): [[[0.2057333]]]

Expected (Unparsed): [[[0.20573333333333332]]]

Actual:   [[[0.2058]]]

Expected: [[[0.2058]]]