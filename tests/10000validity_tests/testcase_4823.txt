import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Ave48680 = tf.keras.layers.Input(shape=([2, 1, 2]))
in1Ave48680 = tf.keras.layers.Input(shape=([2, 1, 2]))

Ave48680 = keras.layers.Average(name = 'Ave48680', )([in0Ave48680,in1Ave48680])
Res14132 = keras.layers.Reshape((2, 2), name = 'Res14132', )(Ave48680)
Res69184 = keras.layers.Reshape((2, 2, 1), name = 'Res69184', )(Res14132)
Loc53091 = keras.layers.LocallyConnected2D(2, (1, 1),strides=(1, 2), name = 'Loc53091', )(Res69184)
model = tf.keras.models.Model(inputs=[in0Ave48680,in1Ave48680], outputs=Loc53091)
w = model.get_layer('Loc53091').get_weights() 
w[0] = np.array([[[0.1232, 0.2534]], [[0.3885, 0.0265]]])
w[1] = np.array([[[0, 0]], [[0, 0]]])
model.get_layer('Loc53091').set_weights(w) 
in0Ave48680 = tf.constant([[[[0.6256, 0.6262]], [[0.5712, 0.2187]]]])
in1Ave48680 = tf.constant([[[[0.5587, 0.8252]], [[0.3004, 0.2862]]]])
print (np.array2string(model.predict([in0Ave48680,in1Ave48680],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Loc53091.png')

LAve48680 = average_layer([[[[[0.6256, 0.6262]], [[0.5712, 0.2187]]]], [[[[0.5587, 0.8252]], [[0.3004, 0.2862]]]]], Ave48680), 
LRes14132 = reshape_layer(Ave48680, [2, 2], Res14132), 
LRes69184 = reshape_layer(Res14132, [2, 2, 1], Res69184), 
LLoc53091 = locally_connected2D_layer(Res69184, 1, 1,[[[0.1232, 0.2534]], [[0.3885, 0.0265]]],[[[0, 0]], [[0, 0]]], 1, 2, Loc53091), 
exec_layers([LAve48680,LRes14132,LRes69184,LLoc53091],["Ave48680","Res14132","Res69184","Loc53091"],Loc53091,"Loc53091")

Actual (Unparsed): [[[[0.0729529, 0.1500508]], [[0.1693083, 0.0115487]]]]

Expected (Unparsed): [[[[0.07295288,0.15005081]],[[0.16930830000000002,0.0115487]]]]

Actual:   [[[[0.073, 0.1501]], [[0.1694, 0.0116]]]]

Expected: [[[[0.073, 0.1501]], [[0.1694, 0.0116]]]]