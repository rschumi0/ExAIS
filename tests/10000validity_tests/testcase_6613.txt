import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Ave17936 = tf.keras.layers.Input(shape=([2, 2]))
in1Ave17936 = tf.keras.layers.Input(shape=([2, 2]))
in0Con37615 = tf.keras.layers.Input(shape=([3, 10]))
in0Min94951 = tf.keras.layers.Input(shape=([2, 1, 1, 2]))
in1Min94951 = tf.keras.layers.Input(shape=([2, 1, 1, 2]))
in0Con27613 = tf.keras.layers.Input(shape=([3, 10]))
in0Sub77344 = tf.keras.layers.Input(shape=([3, 2, 2, 3]))
in1Sub77344 = tf.keras.layers.Input(shape=([3, 2, 2, 3]))
in0Min29856 = tf.keras.layers.Input(shape=([2, 1]))
in1Min29856 = tf.keras.layers.Input(shape=([2, 1]))
in0Con33174 = tf.keras.layers.Input(shape=([3, 11]))

Ave17936 = keras.layers.Average(name = 'Ave17936', )([in0Ave17936,in1Ave17936])
Zer73028 = keras.layers.ZeroPadding1D(padding=((1, 0)), name = 'Zer73028', )(Ave17936)
Con37615 = keras.layers.Concatenate(axis=2, name = 'Con37615', )([Zer73028,in0Con37615])
Min94951 = keras.layers.Minimum(name = 'Min94951', )([in0Min94951,in1Min94951])
Res46194 = keras.layers.Reshape((2, 1, 2), name = 'Res46194', )(Min94951)
Res61947 = keras.layers.Reshape((2, 2), name = 'Res61947', )(Res46194)
Zer45626 = keras.layers.ZeroPadding1D(padding=((1, 0)), name = 'Zer45626', )(Res61947)
Con27613 = keras.layers.Concatenate(axis=2, name = 'Con27613', )([Zer45626,in0Con27613])
Sub77344 = keras.layers.Subtract(name = 'Sub77344', )([in0Sub77344,in1Sub77344])
Res58793 = keras.layers.Reshape((3, 2, 6), name = 'Res58793', )(Sub77344)
Res80313 = keras.layers.Reshape((3, 12), name = 'Res80313', )(Res58793)
Min29856 = keras.layers.Minimum(name = 'Min29856', )([in0Min29856,in1Min29856])
Zer22581 = keras.layers.ZeroPadding1D(padding=((1, 0)), name = 'Zer22581', )(Min29856)
Con33174 = keras.layers.Concatenate(axis=2, name = 'Con33174', )([Zer22581,in0Con33174])
Min13309 = keras.layers.Minimum(name = 'Min13309', )([Res80313,Con33174])
Add93864 = keras.layers.Add(name = 'Add93864', )([Con27613,Min13309])
Max87002 = keras.layers.Maximum(name = 'Max87002', )([Con37615,Add93864])
model = tf.keras.models.Model(inputs=[in0Ave17936,in1Ave17936,in0Con37615,in0Min94951,in1Min94951,in0Con27613,in0Sub77344,in1Sub77344,in0Min29856,in1Min29856,in0Con33174], outputs=Max87002)
in0Ave17936 = tf.constant([[[0.7327, 0.0065], [0.9664, 0.217]]])
in1Ave17936 = tf.constant([[[0.799, 0.9997], [0.0593, 0.9017]]])
in0Con37615 = tf.constant([[[0.5686, 0.9198, 0.1811, 0.2795, 0.8934, 0.8926, 0.9973, 0.2258, 0.1329, 0.1627], [0.8079, 0.9454, 0.3596, 0.9642, 0.0782, 0.9313, 0.0522, 0.8615, 0.2099, 0.2367], [0.5429, 0.3803, 0.6176, 0.5917, 0.9017, 0.024, 0.8122, 0.7132, 0.5831, 0.0273]]])
in0Min94951 = tf.constant([[[[[0.3023, 0.9214]]], [[[0.5144, 0.4673]]]]])
in1Min94951 = tf.constant([[[[[0.8429, 0.3309]]], [[[0.6058, 0.1523]]]]])
in0Con27613 = tf.constant([[[0.2861, 0.7896, 0.6701, 0.2556, 0.5946, 0.31, 0.8049, 0.9006, 0.9998, 0.2779], [0.2552, 0.3557, 0.3663, 0.9897, 0.6005, 0.8867, 0.7797, 0.6273, 0.7942, 0.9253], [0.7226, 0.7297, 0.7983, 0.1251, 0.7957, 0.5721, 0.7771, 0.7954, 0.9764, 0.3404]]])
in0Sub77344 = tf.constant([[[[[0.4031, 0.9356, 0.1598], [0.0577, 0.8094, 0.633]], [[0.1559, 0.0347, 0.1768], [0.3221, 0.7745, 0.566]]], [[[0.2197, 0.8649, 0.4079], [0.7648, 0.5864, 0.8903]], [[0.5671, 0.6994, 0.183], [0.2277, 0.0636, 0.6053]]], [[[0.7847, 0.6336, 0.3204], [0.1942, 0.1069, 0.1322]], [[0.1787, 0.1878, 0.9013], [0.728, 0.1043, 0.4113]]]]])
in1Sub77344 = tf.constant([[[[[0.5779, 0.4713, 0.2698], [0.2654, 0.3141, 0.8534]], [[0.5913, 0.1621, 0.6031], [0.2965, 0.4327, 0.5584]]], [[[0.7226, 0.0616, 0.3537], [0.5504, 0.6562, 0.2453]], [[0.9765, 0.6009, 0.589], [0.6624, 0.7722, 0.8648]]], [[[0.2177, 0.3166, 0.3262], [0.7502, 0.7626, 0.8514]], [[0.4342, 0.8069, 0.7513], [0.8435, 0.1986, 0.7683]]]]])
in0Min29856 = tf.constant([[[0.3559], [0.0509]]])
in1Min29856 = tf.constant([[[0.1506], [0.5915]]])
in0Con33174 = tf.constant([[[0.1415, 0.5933, 0.3594, 0.9001, 0.7204, 0.1157, 0.8302, 0.3291, 0.374, 0.3661, 0.3244], [0.6502, 0.1757, 0.2009, 0.4993, 0.3388, 0.5671, 0.1857, 0.3252, 0.5285, 0.1124, 0.1738], [0.4792, 0.0382, 0.5514, 0.0375, 0.1486, 0.376, 0.3759, 0.2648, 0.4789, 0.9678, 0.2478]]])
print (np.array2string(model.predict([in0Ave17936,in1Ave17936,in0Con37615,in0Min94951,in1Min94951,in0Con27613,in0Sub77344,in1Sub77344,in0Min29856,in1Min29856,in0Con33174],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Max87002.png')

LAve17936 = average_layer([[[[0.7327, 0.0065], [0.9664, 0.217]]], [[[0.799, 0.9997], [0.0593, 0.9017]]]], Ave17936), 
LZer73028 = zero_padding1D_layer(Ave17936, 1, 0, Zer73028), 
LCon37615 = concatenate_layer([Zer73028,[[[0.5686, 0.9198, 0.1811, 0.2795, 0.8934, 0.8926, 0.9973, 0.2258, 0.1329, 0.1627], [0.8079, 0.9454, 0.3596, 0.9642, 0.0782, 0.9313, 0.0522, 0.8615, 0.2099, 0.2367], [0.5429, 0.3803, 0.6176, 0.5917, 0.9017, 0.024, 0.8122, 0.7132, 0.5831, 0.0273]]]], 2, Con37615), 
LMin94951 = minimum_layer([[[[[[0.3023, 0.9214]]], [[[0.5144, 0.4673]]]]], [[[[[0.8429, 0.3309]]], [[[0.6058, 0.1523]]]]]], Min94951), 
LRes46194 = reshape_layer(Min94951, [2, 1, 2], Res46194), 
LRes61947 = reshape_layer(Res46194, [2, 2], Res61947), 
LZer45626 = zero_padding1D_layer(Res61947, 1, 0, Zer45626), 
LCon27613 = concatenate_layer([Zer45626,[[[0.2861, 0.7896, 0.6701, 0.2556, 0.5946, 0.31, 0.8049, 0.9006, 0.9998, 0.2779], [0.2552, 0.3557, 0.3663, 0.9897, 0.6005, 0.8867, 0.7797, 0.6273, 0.7942, 0.9253], [0.7226, 0.7297, 0.7983, 0.1251, 0.7957, 0.5721, 0.7771, 0.7954, 0.9764, 0.3404]]]], 2, Con27613), 
LSub77344 = subtract_layer([[[[[0.4031, 0.9356, 0.1598], [0.0577, 0.8094, 0.633]], [[0.1559, 0.0347, 0.1768], [0.3221, 0.7745, 0.566]]], [[[0.2197, 0.8649, 0.4079], [0.7648, 0.5864, 0.8903]], [[0.5671, 0.6994, 0.183], [0.2277, 0.0636, 0.6053]]], [[[0.7847, 0.6336, 0.3204], [0.1942, 0.1069, 0.1322]], [[0.1787, 0.1878, 0.9013], [0.728, 0.1043, 0.4113]]]]], [[[[[0.5779, 0.4713, 0.2698], [0.2654, 0.3141, 0.8534]], [[0.5913, 0.1621, 0.6031], [0.2965, 0.4327, 0.5584]]], [[[0.7226, 0.0616, 0.3537], [0.5504, 0.6562, 0.2453]], [[0.9765, 0.6009, 0.589], [0.6624, 0.7722, 0.8648]]], [[[0.2177, 0.3166, 0.3262], [0.7502, 0.7626, 0.8514]], [[0.4342, 0.8069, 0.7513], [0.8435, 0.1986, 0.7683]]]]], Sub77344), 
LRes58793 = reshape_layer(Sub77344, [3, 2, 6], Res58793), 
LRes80313 = reshape_layer(Res58793, [3, 12], Res80313), 
LMin29856 = minimum_layer([[[[0.3559], [0.0509]]], [[[0.1506], [0.5915]]]], Min29856), 
LZer22581 = zero_padding1D_layer(Min29856, 1, 0, Zer22581), 
LCon33174 = concatenate_layer([Zer22581,[[[0.1415, 0.5933, 0.3594, 0.9001, 0.7204, 0.1157, 0.8302, 0.3291, 0.374, 0.3661, 0.3244], [0.6502, 0.1757, 0.2009, 0.4993, 0.3388, 0.5671, 0.1857, 0.3252, 0.5285, 0.1124, 0.1738], [0.4792, 0.0382, 0.5514, 0.0375, 0.1486, 0.376, 0.3759, 0.2648, 0.4789, 0.9678, 0.2478]]]], 2, Con33174), 
LMin13309 = minimum_layer([Res80313,Con33174], Min13309), 
LAdd93864 = add_layer([Con27613,Min13309], Add93864), 
LMax87002 = maximum_layer([Con37615,Add93864], Max87002), 
exec_layers([LAve17936,LZer73028,LCon37615,LMin94951,LRes46194,LRes61947,LZer45626,LCon27613,LSub77344,LRes58793,LRes80313,LMin29856,LZer22581,LCon33174,LMin13309,LAdd93864,LMax87002],["Ave17936","Zer73028","Con37615","Min94951","Res46194","Res61947","Zer45626","Con27613","Sub77344","Res58793","Res80313","Min29856","Zer22581","Con33174","Min13309","Add93864","Max87002"],Max87002,"Max87002")

Actual (Unparsed): [[[0.0000000, 0.1415000, 0.5686000, 0.9198000, 1.1654000, 0.2795000, 0.8934000, 0.8926000, 0.9973000, 0.9262000, 1.3416000, 0.2855000], [0.7658500, 0.9811000, 0.8079000, 0.9454000, 0.3596000, 1.3285000, 0.1911000, 0.9852000, 0.3737000, 0.8615000, 0.2099000, 0.6658000], [0.5653000, 0.5593500, 0.7168000, 0.3803000, 0.6176000, 0.5917000, 0.9017000, 0.0240000, 0.9271001, 0.7132000, 0.8821000, 0.0273000]]]

Expected (Unparsed): [[[0,0.1415,0.5686,0.9198,1.1654,0.2795,0.8934,0.8926,0.9973,0.9261999999999999,1.3416000000000001,0.2854999999999999],[0.76585,0.9811000000000001,0.8079,0.9454,0.3596,1.3285,0.19110000000000005,0.9852000000000001,0.3737,0.8615,0.2099,0.6658],[0.5652999999999999,0.55935,0.7168000000000001,0.3803,0.6176,0.5917,0.9017,0.024,0.9271,0.7132,0.8821000000000001,0.0273]]]

Actual:   [[[0, 0.1415, 0.5686, 0.9198, 1.1654, 0.2795, 0.8934, 0.8926, 0.9973, 0.9262, 1.3416, 0.2855], [0.7659, 0.9811, 0.8079, 0.9454, 0.3596, 1.3285, 0.1911, 0.9852, 0.3737, 0.8615, 0.2099, 0.6658], [0.5653, 0.5594, 0.7168, 0.3803, 0.6176, 0.5917, 0.9017, 0.024, 0.9272, 0.7132, 0.8821, 0.0273]]]

Expected: [[[0, 0.1415, 0.5686, 0.9198, 1.1654, 0.2795, 0.8934, 0.8926, 0.9973, 0.9262, 1.3417, 0.2855], [0.7659, 0.9812, 0.8079, 0.9454, 0.3596, 1.3285, 0.1912, 0.9853, 0.3737, 0.8615, 0.2099, 0.6658], [0.5653, 0.5594, 0.7169, 0.3803, 0.6176, 0.5917, 0.9017, 0.024, 0.9271, 0.7132, 0.8822, 0.0273]]]