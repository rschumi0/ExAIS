import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Min94054 = tf.keras.layers.Input(shape=([1, 2, 2, 1]))
in1Min94054 = tf.keras.layers.Input(shape=([1, 2, 2, 1]))

Min94054 = keras.layers.Minimum(name = 'Min94054', )([in0Min94054,in1Min94054])
Den52152 = keras.layers.Dense(1,name = 'Den52152', )(Min94054)
model = tf.keras.models.Model(inputs=[in0Min94054,in1Min94054], outputs=Den52152)
w = model.get_layer('Den52152').get_weights() 
w[0] = np.array([[0.5507]])
w[1] = np.array([0.7445])
model.get_layer('Den52152').set_weights(w) 
in0Min94054 = tf.constant([[[[[0.178], [0.4683]], [[0.2815], [0.8762]]]]])
in1Min94054 = tf.constant([[[[[0.7324], [0.7459]], [[0.6133], [0.0422]]]]])
print (np.array2string(model.predict([in0Min94054,in1Min94054],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Den52152.png')

LMin94054 = minimum_layer([[[[[[0.178], [0.4683]], [[0.2815], [0.8762]]]]], [[[[[0.7324], [0.7459]], [[0.6133], [0.0422]]]]]], Min94054), 
LDen52152 = dense_layer(Min94054, [[0.5507]],[0.7445], Den52152), 
exec_layers([LMin94054,LDen52152],["Min94054","Den52152"],Den52152,"Den52152")

Actual (Unparsed): [[[[[0.8425246], [1.0023928]], [[0.8995221], [0.7677395]]]]]

Expected (Unparsed): [[[[[0.8425246000000001],[1.00239281]],[[0.8995220500000001],[0.76773954]]]]]

Actual:   [[[[[0.8426], [1.0024]], [[0.8996], [0.7678]]]]]

Expected: [[[[[0.8426], [1.0024]], [[0.8996], [0.7678]]]]]