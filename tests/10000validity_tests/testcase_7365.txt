import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Sub33369 = tf.keras.layers.Input(shape=([3, 2]))
in1Sub33369 = tf.keras.layers.Input(shape=([3, 2]))
in0Max52828 = tf.keras.layers.Input(shape=([1, 2, 1]))
in0Con28709 = tf.keras.layers.Input(shape=([2, 2]))

Sub33369 = keras.layers.Subtract(name = 'Sub33369', )([in0Sub33369,in1Sub33369])
Res98251 = keras.layers.Reshape((3, 2, 1), name = 'Res98251', )(Sub33369)
Loc75082 = keras.layers.LocallyConnected2D(3, (3, 2),strides=(8, 1), name = 'Loc75082', )(Res98251)
Res94659 = keras.layers.Reshape((1, 3), name = 'Res94659', )(Loc75082)
Zer92512 = keras.layers.ZeroPadding1D(padding=((1, 0)), name = 'Zer92512', )(Res94659)
Max52828 = keras.layers.MaxPool2D(pool_size=(1, 2), strides=(1, 1), padding='valid', name = 'Max52828', )(in0Max52828)
Res21210 = keras.layers.Reshape((1, 1), name = 'Res21210', )(Max52828)
Up_713 = keras.layers.UpSampling1D(size=(2), name = 'Up_713', )(Res21210)
Con28709 = keras.layers.Concatenate(axis=2, name = 'Con28709', )([Up_713,in0Con28709])
Sub36255 = keras.layers.Subtract(name = 'Sub36255', )([Zer92512,Con28709])
Fla62527 = keras.layers.Flatten(name = 'Fla62527', )(Sub36255)
model = tf.keras.models.Model(inputs=[in0Sub33369,in1Sub33369,in0Max52828,in0Con28709], outputs=Fla62527)
w = model.get_layer('Loc75082').get_weights() 
w[0] = np.array([[[0.1309, 0.1402, 0.084], [0.9675, 0.0975, 0.6837], [0.0699, 0.2052, 0.2602], [0.7048, 0.9891, 0.6049], [0.621, 0.8561, 0.7423], [0.8586, 0.7534, 0.5795]]])
w[1] = np.array([[[0, 0, 0]]])
model.get_layer('Loc75082').set_weights(w) 
in0Sub33369 = tf.constant([[[0.4828, 0.342], [0.7599, 0.4903], [0.3629, 0.2999]]])
in1Sub33369 = tf.constant([[[0.6566, 0.5199], [0.1361, 0.0865], [0.6919, 0.1872]]])
in0Max52828 = tf.constant([[[[1.7926], [1.5087]]]])
in0Con28709 = tf.constant([[[0.3559, 0.3522], [0.9927, 0.0629]]])
print (np.array2string(model.predict([in0Sub33369,in1Sub33369,in0Max52828,in0Con28709],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Fla62527.png')

LSub33369 = subtract_layer([[[0.4828, 0.342], [0.7599, 0.4903], [0.3629, 0.2999]]], [[[0.6566, 0.5199], [0.1361, 0.0865], [0.6919, 0.1872]]], Sub33369), 
LRes98251 = reshape_layer(Sub33369, [3, 2, 1], Res98251), 
LLoc75082 = locally_connected2D_layer(Res98251, 3, 2,[[[0.1309, 0.1402, 0.084], [0.9675, 0.0975, 0.6837], [0.0699, 0.2052, 0.2602], [0.7048, 0.9891, 0.6049], [0.621, 0.8561, 0.7423], [0.8586, 0.7534, 0.5795]]],[[[0, 0, 0]]], 8, 1, Loc75082), 
LRes94659 = reshape_layer(Loc75082, [1, 3], Res94659), 
LZer92512 = zero_padding1D_layer(Res94659, 1, 0, Zer92512), 
LMax52828 = max_pool2D_layer([[[[1.7926], [1.5087]]]], 1, 2, 1, 1, false, Max52828), 
LRes21210 = reshape_layer(Max52828, [1, 1], Res21210), 
LUp_713 = up_sampling1D_layer(Res21210, 2, Up_713), 
LCon28709 = concatenate_layer([Up_713,[[[0.3559, 0.3522], [0.9927, 0.0629]]]], 2, Con28709), 
LSub36255 = subtract_layer(Zer92512,Con28709, Sub36255), 
LFla62527 = flatten_layer(Sub36255, Fla62527), 
exec_layers([LSub33369,LRes98251,LLoc75082,LRes94659,LZer92512,LMax52828,LRes21210,LUp_713,LCon28709,LSub36255,LFla62527],["Sub33369","Res98251","Loc75082","Res94659","Zer92512","Max52828","Res21210","Up_713","Con28709","Sub36255","Fla62527"],Fla62527,"Fla62527")

Actual (Unparsed): [[-1.7926000, -0.3559000, -0.3522000, -1.7668117, -0.7037584, 0.0285349]]

Expected (Unparsed): [[-1.7926,-0.3559,-0.3522,-1.7668115899999999,-0.70375839,0.0285349000000001]]

Actual:   [[-1.7926, -0.3559, -0.3522, -1.7668, -0.7037, 0.0286]]

Expected: [[-1.7926, -0.3559, -0.3522, -1.7668, -0.7037, 0.0286]]