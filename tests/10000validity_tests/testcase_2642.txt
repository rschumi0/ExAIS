import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Sep81542 = tf.keras.layers.Input(shape=([1, 2, 2]))
in0Con44730 = tf.keras.layers.Input(shape=([1, 2, 1, 3]))
in0Min73870 = tf.keras.layers.Input(shape=([1, 1, 1]))
in1Min73870 = tf.keras.layers.Input(shape=([1, 1, 1]))

Sep81542 = keras.layers.SeparableConv2D(4, (1, 2),strides=(1, 1), padding='valid', name = 'Sep81542', )(in0Sep81542)
Res64646 = keras.layers.Reshape((1, 1, 4, 1), name = 'Res64646', )(Sep81542)
Con62042 = keras.layers.Conv3D(4, (1, 1, 2),strides=(1, 1, 12), padding='valid', dilation_rate=(1, 1, 1), name = 'Con62042', )(Res64646)
Res12757 = keras.layers.Reshape((1, 1, 4), name = 'Res12757', )(Con62042)
Res98809 = keras.layers.Reshape((1, 4), name = 'Res98809', )(Res12757)
Loc43861 = keras.layers.LocallyConnected1D(2, (1),strides=(1), name = 'Loc43861', )(Res98809)
Res82860 = keras.layers.Reshape((1, 2, 1), name = 'Res82860', )(Loc43861)
Res77294 = keras.layers.Reshape((1, 2, 1, 1), name = 'Res77294', )(Res82860)
Con44730 = keras.layers.Concatenate(axis=4, name = 'Con44730', )([Res77294,in0Con44730])
Min73870 = keras.layers.Minimum(name = 'Min73870', )([in0Min73870,in1Min73870])
Res4778 = keras.layers.Reshape((1, 1, 1, 1), name = 'Res4778', )(Min73870)
Con50133 = keras.layers.Conv3D(4, (1, 1, 1),strides=(1, 1, 1), padding='valid', dilation_rate=(1, 1, 1), name = 'Con50133', )(Res4778)
Zer52445 = keras.layers.ZeroPadding3D(padding=((0, 0), (1, 0), (0, 0)), name = 'Zer52445', )(Con50133)
Min77533 = keras.layers.Minimum(name = 'Min77533', )([Con44730,Zer52445])
model = tf.keras.models.Model(inputs=[in0Sep81542,in0Con44730,in0Min73870,in1Min73870], outputs=Min77533)
w = model.get_layer('Sep81542').get_weights() 
w[0] = np.array([[[[0.5794], [0.0344]], [[0.9233], [0.3334]]]])
w[1] = np.array([[[[0.0758, 0.2523, 0.174, 0.1002], [0.9474, 0.1741, 0.9966, 0.9846]]]])
w[2] = np.array([0, 0, 0, 0])
model.get_layer('Sep81542').set_weights(w) 
w = model.get_layer('Con62042').get_weights() 
w[0] = np.array([[[[[0.8194, 0.6066, 0.6503, 0.6684]], [[0.6845, 0.4978, 0.1224, 0.2658]]]]])
w[1] = np.array([0, 0, 0, 0])
model.get_layer('Con62042').set_weights(w) 
w = model.get_layer('Loc43861').get_weights() 
w[0] = np.array([[[0.7962, 0.6373], [0.6876, 0.6806], [0.4761, 0.2762], [0.4095, 0.0624]]])
w[1] = np.array([[0, 0]])
model.get_layer('Loc43861').set_weights(w) 
w = model.get_layer('Con50133').get_weights() 
w[0] = np.array([[[[[0.1541, 0.3375, 0.268, 0.4395]]]]])
w[1] = np.array([0, 0, 0, 0])
model.get_layer('Con50133').set_weights(w) 
in0Sep81542 = tf.constant([[[[0.4021, 0.4833], [0.0116, 0.7333]]]])
in0Con44730 = tf.constant([[[[[0.5707, 0.3456, 0.5373]], [[0.3492, 0.5082, 0.4501]]]]])
in0Min73870 = tf.constant([[[[0.4844]]]])
in1Min73870 = tf.constant([[[[0.3487]]]])
print (np.array2string(model.predict([in0Sep81542,in0Con44730,in0Min73870,in1Min73870],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Min77533.png')

LSep81542 = separable_conv2D_layer([[[[0.4021, 0.4833], [0.0116, 0.7333]]]], 1, 2,[[[[[0.5794], [0.0344]], [[0.9233], [0.3334]]]],[[[[0.0758, 0.2523, 0.174, 0.1002], [0.9474, 0.1741, 0.9966, 0.9846]]]]],[0, 0, 0, 0], 1, 1, false, Sep81542), 
LRes64646 = reshape_layer(Sep81542, [1, 1, 4, 1], Res64646), 
LCon62042 = conv3D_layer(Res64646, 1, 1, 2,[[[[[0.8194, 0.6066, 0.6503, 0.6684]], [[0.6845, 0.4978, 0.1224, 0.2658]]]]],[0, 0, 0, 0], 1, 1, 12, false, 1, 1, 1, Con62042), 
LRes12757 = reshape_layer(Con62042, [1, 1, 4], Res12757), 
LRes98809 = reshape_layer(Res12757, [1, 4], Res98809), 
LLoc43861 = locally_connected1D_layer(Res98809, 1,[[[0.7962, 0.6373], [0.6876, 0.6806], [0.4761, 0.2762], [0.4095, 0.0624]]],[[0, 0]], 1, Loc43861), 
LRes82860 = reshape_layer(Loc43861, [1, 2, 1], Res82860), 
LRes77294 = reshape_layer(Res82860, [1, 2, 1, 1], Res77294), 
LCon44730 = concatenate_layer([Res77294,[[[[[0.5707, 0.3456, 0.5373]], [[0.3492, 0.5082, 0.4501]]]]]], 4, Con44730), 
LMin73870 = minimum_layer([[[[[0.4844]]]], [[[[0.3487]]]]], Min73870), 
LRes4778 = reshape_layer(Min73870, [1, 1, 1, 1], Res4778), 
LCon50133 = conv3D_layer(Res4778, 1, 1, 1,[[[[[0.1541, 0.3375, 0.268, 0.4395]]]]],[0, 0, 0, 0], 1, 1, 1, false, 1, 1, 1, Con50133), 
LZer52445 = zero_padding3D_layer(Con50133, 0, 0, 1, 0, 0, 0, Zer52445), 
LMin77533 = minimum_layer([Con44730,Zer52445], Min77533), 
exec_layers([LSep81542,LRes64646,LCon62042,LRes12757,LRes98809,LLoc43861,LRes82860,LRes77294,LCon44730,LMin73870,LRes4778,LCon50133,LZer52445,LMin77533],["Sep81542","Res64646","Con62042","Res12757","Res98809","Loc43861","Res82860","Res77294","Con44730","Min73870","Res4778","Con50133","Zer52445","Min77533"],Min77533,"Min77533")

Actual (Unparsed): [[[[[0.0000000, 0.0000000, 0.0000000, 0.0000000]], [[0.0537347, 0.1176862, 0.0934516, 0.1532536]]]]]

Expected (Unparsed): [[[[[0,0,0,0]],[[0.05373467,0.11768625,0.09345160000000001,0.15325365]]]]]

Actual:   [[[[[0, 0, 0, 0]], [[0.0538, 0.1177, 0.0935, 0.1533]]]]]

Expected: [[[[[0, 0, 0, 0]], [[0.0538, 0.1177, 0.0935, 0.1533]]]]]