import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Glo29875 = tf.keras.layers.Input(shape=([1, 1]))
in0Con38444 = tf.keras.layers.Input(shape=([2, 2, 2, 1]))
in0Add20872 = tf.keras.layers.Input(shape=([2, 2, 2, 2]))
in1Add20872 = tf.keras.layers.Input(shape=([2, 2, 2, 2]))

Glo29875 = keras.layers.GlobalMaxPool1D(name = 'Glo29875', )(in0Glo29875)
Res38198 = keras.layers.Reshape((1, 1), name = 'Res38198', )(Glo29875)
Res70156 = keras.layers.Reshape((1, 1, 1), name = 'Res70156', )(Res38198)
Res45734 = keras.layers.Reshape((1, 1, 1, 1), name = 'Res45734', )(Res70156)
Zer16582 = keras.layers.ZeroPadding3D(padding=((1, 0), (1, 0), (1, 0)), name = 'Zer16582', )(Res45734)
Con38444 = keras.layers.Concatenate(axis=4, name = 'Con38444', )([Zer16582,in0Con38444])
Add20872 = keras.layers.Add(name = 'Add20872', )([in0Add20872,in1Add20872])
Add94501 = keras.layers.Add(name = 'Add94501', )([Con38444,Add20872])
Res71738 = keras.layers.Reshape((2, 2, 4), name = 'Res71738', )(Add94501)
Res34641 = keras.layers.Reshape((2, 8), name = 'Res34641', )(Res71738)
Per87513 = keras.layers.Permute((2,1), name = 'Per87513',)(Res34641)
model = tf.keras.models.Model(inputs=[in0Glo29875,in0Con38444,in0Add20872,in1Add20872], outputs=Per87513)
in0Glo29875 = tf.constant([[[1.7242]]])
in0Con38444 = tf.constant([[[[[0.4367], [0.4568]], [[0.2214], [0.9789]]], [[[0.5734], [0.8136]], [[0.1205], [0.7002]]]]])
in0Add20872 = tf.constant([[[[[0.6098, 0.3528], [0.1971, 0.9682]], [[0.4098, 0.2458], [0.6308, 0.9764]]], [[[0.8238, 0.8274], [0.7365, 0.1237]], [[0.0823, 0.8594], [0.3366, 0.4811]]]]])
in1Add20872 = tf.constant([[[[[0.626, 0.1555], [0.4709, 0.5139]], [[0.1802, 0.6803], [0.5706, 0.5289]]], [[[0.4871, 0.0465], [0.6934, 0.7103]], [[0.9614, 0.4305], [0.2556, 0.7031]]]]])
print (np.array2string(model.predict([in0Glo29875,in0Con38444,in0Add20872,in1Add20872],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Per87513.png')

LGlo29875 = global_max_pool1D_layer([[[1.7242]]], Glo29875), 
LRes38198 = reshape_layer(Glo29875, [1, 1], Res38198), 
LRes70156 = reshape_layer(Res38198, [1, 1, 1], Res70156), 
LRes45734 = reshape_layer(Res70156, [1, 1, 1, 1], Res45734), 
LZer16582 = zero_padding3D_layer(Res45734, 1, 0, 1, 0, 1, 0, Zer16582), 
LCon38444 = concatenate_layer([Zer16582,[[[[[0.4367], [0.4568]], [[0.2214], [0.9789]]], [[[0.5734], [0.8136]], [[0.1205], [0.7002]]]]]], 4, Con38444), 
LAdd20872 = add_layer([[[[[[0.6098, 0.3528], [0.1971, 0.9682]], [[0.4098, 0.2458], [0.6308, 0.9764]]], [[[0.8238, 0.8274], [0.7365, 0.1237]], [[0.0823, 0.8594], [0.3366, 0.4811]]]]], [[[[[0.626, 0.1555], [0.4709, 0.5139]], [[0.1802, 0.6803], [0.5706, 0.5289]]], [[[0.4871, 0.0465], [0.6934, 0.7103]], [[0.9614, 0.4305], [0.2556, 0.7031]]]]]], Add20872), 
LAdd94501 = add_layer([Con38444,Add20872], Add94501), 
LRes71738 = reshape_layer(Add94501, [2, 2, 4], Res71738), 
LRes34641 = reshape_layer(Res71738, [2, 8], Res34641), 
LPer87513 = permute_layer(Res34641, 2,1, Per87513), 
exec_layers([LGlo29875,LRes38198,LRes70156,LRes45734,LZer16582,LCon38444,LAdd20872,LAdd94501,LRes71738,LRes34641,LPer87513],["Glo29875","Res38198","Res70156","Res45734","Zer16582","Con38444","Add20872","Add94501","Res71738","Res34641","Per87513"],Per87513,"Per87513")

Actual (Unparsed): [[[1.2358000, 1.3109000], [0.9450000, 1.4473001], [0.6680000, 1.4299001], [1.9389000, 1.6476000], [0.5900000, 1.0437000], [1.1475000, 1.4104000], [1.2014000, 2.3164000], [2.4842001, 1.8844000]]]

Expected (Unparsed): [[[1.2358,1.3109],[0.945,1.4473],[0.6679999999999999,1.4299],[1.9388999999999998,1.6476000000000002],[0.59,1.0437],[1.1475,1.4104],[1.2014,2.3164],[2.4842,1.8843999999999999]]]

Actual:   [[[1.2358, 1.3109], [0.945, 1.4474], [0.668, 1.43], [1.9389, 1.6476], [0.59, 1.0437], [1.1475, 1.4104], [1.2014, 2.3164], [2.4843, 1.8844]]]

Expected: [[[1.2358, 1.3109], [0.945, 1.4473], [0.668, 1.4299], [1.9389, 1.6477], [0.59, 1.0437], [1.1475, 1.4104], [1.2014, 2.3164], [2.4842, 1.8844]]]