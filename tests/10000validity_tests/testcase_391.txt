import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Con56317 = tf.keras.layers.Input(shape=([1, 2, 2]))

Con56317 = keras.layers.Conv2D(2, (1, 1),strides=(1, 2), padding='valid', dilation_rate=(1, 1), name = 'Con56317', )(in0Con56317)
Res64308 = keras.layers.Reshape((1, 2), name = 'Res64308', )(Con56317)
Zer35065 = keras.layers.ZeroPadding1D(padding=((1, 1)), name = 'Zer35065', )(Res64308)
model = tf.keras.models.Model(inputs=[in0Con56317], outputs=Zer35065)
w = model.get_layer('Con56317').get_weights() 
w[0] = np.array([[[[0.1903, 0.8095], [0.435, 0.0744]]]])
w[1] = np.array([0, 0])
model.get_layer('Con56317').set_weights(w) 
in0Con56317 = tf.constant([[[[0.4963, 0.043], [0.1687, 0.1253]]]])
print (np.array2string(model.predict([in0Con56317],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Zer35065.png')

LCon56317 = conv2D_layer([[[[0.4963, 0.043], [0.1687, 0.1253]]]], 1, 1,[[[[0.1903, 0.8095], [0.435, 0.0744]]]],[0, 0], 1, 2, false, 1, 1, Con56317), 
LRes64308 = reshape_layer(Con56317, [1, 2], Res64308), 
LZer35065 = zero_padding1D_layer(Res64308, 1, 1, Zer35065), 
exec_layers([LCon56317,LRes64308,LZer35065],["Con56317","Res64308","Zer35065"],Zer35065,"Zer35065")

Actual (Unparsed): [[[0.0000000, 0.0000000], [0.1131509, 0.4049541], [0.0000000, 0.0000000]]]

Expected (Unparsed): [[[0,0],[0.11315089,0.40495405],[0,0]]]

Actual:   [[[0, 0], [0.1132, 0.405], [0, 0]]]

Expected: [[[0, 0], [0.1132, 0.405], [0, 0]]]