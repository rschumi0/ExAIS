import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Ave73514 = tf.keras.layers.Input(shape=([2, 1]))
in1Ave73514 = tf.keras.layers.Input(shape=([2, 1]))

Ave73514 = keras.layers.Average(name = 'Ave73514', )([in0Ave73514,in1Ave73514])
Res46589 = keras.layers.Reshape((2, 1, 1), name = 'Res46589', )(Ave73514)
Res40844 = keras.layers.Reshape((2, 1, 1, 1), name = 'Res40844', )(Res46589)
Con20526 = keras.layers.Conv3DTranspose(3, (1, 1, 1),strides=(8, 1, 1), padding='valid', name = 'Con20526', )(Res40844)
model = tf.keras.models.Model(inputs=[in0Ave73514,in1Ave73514], outputs=Con20526)
w = model.get_layer('Con20526').get_weights() 
w[0] = np.array([[[[[0.5917], [0.996], [0.6586]]]]])
w[1] = np.array([0, 0, 0])
model.get_layer('Con20526').set_weights(w) 
in0Ave73514 = tf.constant([[[0.5779], [0.821]]])
in1Ave73514 = tf.constant([[[0.6819], [0.0642]]])
print (np.array2string(model.predict([in0Ave73514,in1Ave73514],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Con20526.png')

LAve73514 = average_layer([[[[0.5779], [0.821]]], [[[0.6819], [0.0642]]]], Ave73514), 
LRes46589 = reshape_layer(Ave73514, [2, 1, 1], Res46589), 
LRes40844 = reshape_layer(Res46589, [2, 1, 1, 1], Res40844), 
LCon20526 = conv3D_transpose_layer(Res40844, 1, 1, 1,[[[[[0.5917], [0.996], [0.6586]]]]],[0, 0, 0], 8, 1, 1, false, Con20526), 
exec_layers([LAve73514,LRes46589,LRes40844,LCon20526],["Ave73514","Res46589","Res40844","Con20526"],Con20526,"Con20526")

Actual (Unparsed): [[[[[0.3727118, 0.6273804, 0.4148521]]], [[[0.0000000, 0.0000000, 0.0000000]]], [[[0.0000000, 0.0000000, 0.0000000]]], [[[0.0000000, 0.0000000, 0.0000000]]], [[[0.0000000, 0.0000000, 0.0000000]]], [[[0.0000000, 0.0000000, 0.0000000]]], [[[0.0000000, 0.0000000, 0.0000000]]], [[[0.0000000, 0.0000000, 0.0000000]]], [[[0.2618864, 0.4408296, 0.2914964]]], [[[0.0000000, 0.0000000, 0.0000000]]], [[[0.0000000, 0.0000000, 0.0000000]]], [[[0.0000000, 0.0000000, 0.0000000]]], [[[0.0000000, 0.0000000, 0.0000000]]], [[[0.0000000, 0.0000000, 0.0000000]]], [[[0.0000000, 0.0000000, 0.0000000]]], [[[0.0000000, 0.0000000, 0.0000000]]]]]

Expected (Unparsed): [[[[[0.37271182999999997,0.6273804,0.4148521399999999]]],[[[0,0,0]]],[[[0,0,0]]],[[[0,0,0]]],[[[0,0,0]]],[[[0,0,0]]],[[[0,0,0]]],[[[0,0,0]]],[[[0.26188642,0.4408296,0.29149635999999995]]],[[[0,0,0]]],[[[0,0,0]]],[[[0,0,0]]],[[[0,0,0]]],[[[0,0,0]]],[[[0,0,0]]],[[[0,0,0]]]]]

Actual:   [[[[[0.3728, 0.6274, 0.4149]]], [[[0, 0, 0]]], [[[0, 0, 0]]], [[[0, 0, 0]]], [[[0, 0, 0]]], [[[0, 0, 0]]], [[[0, 0, 0]]], [[[0, 0, 0]]], [[[0.2619, 0.4409, 0.2915]]], [[[0, 0, 0]]], [[[0, 0, 0]]], [[[0, 0, 0]]], [[[0, 0, 0]]], [[[0, 0, 0]]], [[[0, 0, 0]]], [[[0, 0, 0]]]]]

Expected: [[[[[0.3728, 0.6274, 0.4149]]], [[[0, 0, 0]]], [[[0, 0, 0]]], [[[0, 0, 0]]], [[[0, 0, 0]]], [[[0, 0, 0]]], [[[0, 0, 0]]], [[[0, 0, 0]]], [[[0.2619, 0.4409, 0.2915]]], [[[0, 0, 0]]], [[[0, 0, 0]]], [[[0, 0, 0]]], [[[0, 0, 0]]], [[[0, 0, 0]]], [[[0, 0, 0]]], [[[0, 0, 0]]]]]