import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Dot69283 = tf.keras.layers.Input(shape=([3, 3]))
in1Dot69283 = tf.keras.layers.Input(shape=([3, 3]))

Dot69283 = keras.layers.Dot(axes=(2, 1), name = 'Dot69283', )([in0Dot69283,in1Dot69283])
ReL62838 = keras.layers.ReLU(max_value=7.644407439530705, negative_slope=7.461339242507974, threshold=9.117139957603989, name = 'ReL62838', )(Dot69283)
Den18929 = keras.layers.Dense(2,name = 'Den18929', )(ReL62838)
model = tf.keras.models.Model(inputs=[in0Dot69283,in1Dot69283], outputs=Den18929)
w = model.get_layer('Den18929').get_weights() 
w[0] = np.array([[0.834, 0.22], [0.6096, 0.4388], [0.7043, 0.4378]])
w[1] = np.array([0.8249, 0.5233])
model.get_layer('Den18929').set_weights(w) 
in0Dot69283 = tf.constant([[[0.4218, 0.0972, 0.7871], [0.7119, 0.9455, 0.0574], [0.417, 0.8165, 0.6843]]])
in1Dot69283 = tf.constant([[[0.576, 0.4894, 0.2614], [0.6089, 0.0126, 0.983], [0.8344, 0.5613, 0.811]]])
print (np.array2string(model.predict([in0Dot69283,in1Dot69283],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Den18929.png')

LDot69283 = dot_layer([[[0.4218, 0.0972, 0.7871], [0.7119, 0.9455, 0.0574], [0.417, 0.8165, 0.6843]]], [[[0.576, 0.4894, 0.2614], [0.6089, 0.0126, 0.983], [0.8344, 0.5613, 0.811]]], 2, 1, Dot69283), 
LReL62838 = relu_layer(Dot69283, 7.644407439530705, 7.461339242507974, 9.117139957603989, ReL62838), 
LDen18929 = dense_layer(ReL62838, [[0.834, 0.22], [0.6096, 0.4388], [0.7043, 0.4378]],[0.8249, 0.5233], Den18929), 
exec_layers([LDot69283,LReL62838,LDen18929],["Dot69283","ReL62838","Den18929"],Den18929,"Den18929")

Actual (Unparsed): [[[-131.9313265, -67.6162751], [-130.9639480, -67.2961797], [-126.7177869, -65.1763380]]]

Expected (Unparsed): [[[-131.93132646291494,-67.61627510225605],[-130.9639479862833,-67.29617968857204],[-126.71778685759615,-65.17633794500819]]]

Actual:   [[[-131.9313, -67.6162], [-130.9639, -67.2961], [-126.7177, -65.1763]]]

Expected: [[[-131.9313, -67.6162], [-130.9639, -67.2961], [-126.7177, -65.1763]]]