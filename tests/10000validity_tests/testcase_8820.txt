import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Max8903 = tf.keras.layers.Input(shape=([1, 1, 1]))
in0Con45374 = tf.keras.layers.Input(shape=([1]))
in0Lay36091 = tf.keras.layers.Input(shape=([3, 3, 3]))

Max8903 = keras.layers.MaxPool2D(pool_size=(1, 1), strides=(7, 1), padding='valid', name = 'Max8903', )(in0Max8903)
Glo25702 = keras.layers.GlobalMaxPool2D(name = 'Glo25702', )(Max8903)
Con45374 = keras.layers.Concatenate(axis=1, name = 'Con45374', )([Glo25702,in0Con45374])
Lay36091 = keras.layers.LayerNormalization(axis=1, epsilon=2.5428148173520793, name = 'Lay36091', )(in0Lay36091)
Res35621 = keras.layers.Reshape((3, 9), name = 'Res35621', )(Lay36091)
Sim23884 = keras.layers.SimpleRNN(2,name = 'Sim23884', )(Res35621)
Ave52155 = keras.layers.Average(name = 'Ave52155', )([Con45374,Sim23884])
Res31724 = keras.layers.Reshape((2, 1), name = 'Res31724', )(Ave52155)
Cro39023 = keras.layers.Cropping1D(cropping=((0, 0)), name = 'Cro39023', )(Res31724)
model = tf.keras.models.Model(inputs=[in0Max8903,in0Con45374,in0Lay36091], outputs=Cro39023)
w = model.get_layer('Sim23884').get_weights() 
w[0] = np.array([[3, 2], [10, 7], [5, 5], [4, 5], [6, 9], [1, 10], [1, 5], [4, 7], [1, 2]])
w[1] = np.array([[9, 7], [5, 5]])
w[2] = np.array([4, 7])
model.get_layer('Sim23884').set_weights(w) 
in0Max8903 = tf.constant([[[[1.789]]]])
in0Con45374 = tf.constant([[0.2744]])
in0Lay36091 = tf.constant([[[[1.2433, 1.0233, 1.4283], [1.581, 1.7447, 1.5884], [1.0939, 1.8451, 1.9565]], [[1.6697, 1.0426, 1.7431], [1.9782, 1.1754, 1.1613], [1.8853, 1.9716, 1.061]], [[1.6053, 1.0387, 1.3106], [1.4213, 1.212, 1.8931], [1.0138, 1.6573, 1.0665]]]])
print (np.array2string(model.predict([in0Max8903,in0Con45374,in0Lay36091],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Cro39023.png')

LMax8903 = max_pool2D_layer([[[[1.789]]]], 1, 1, 7, 1, false, Max8903), 
LGlo25702 = global_max_pool2D_layer(Max8903, Glo25702), 
LCon45374 = concatenate_layer([Glo25702,[[0.2744]]], 1, Con45374), 
LLay36091 = layer_normalization_layer([[[[1.2433, 1.0233, 1.4283], [1.581, 1.7447, 1.5884], [1.0939, 1.8451, 1.9565]], [[1.6697, 1.0426, 1.7431], [1.9782, 1.1754, 1.1613], [1.8853, 1.9716, 1.061]], [[1.6053, 1.0387, 1.3106], [1.4213, 1.212, 1.8931], [1.0138, 1.6573, 1.0665]]]], 1, 2.5428148173520793, Lay36091), 
LRes35621 = reshape_layer(Lay36091, [3, 9], Res35621), 
LSim23884 = simple_rnn_layer(Res35621,[[3, 2], [10, 7], [5, 5], [4, 5], [6, 9], [1, 10], [1, 5], [4, 7], [1, 2]],[[9, 7], [5, 5]],[4, 7], Sim23884), 
LAve52155 = average_layer([Con45374,Sim23884], Ave52155), 
LRes31724 = reshape_layer(Ave52155, [2, 1], Res31724), 
LCro39023 = cropping1D_layer(Res31724, 0, 0, Cro39023), 
exec_layers([LMax8903,LGlo25702,LCon45374,LLay36091,LRes35621,LSim23884,LAve52155,LRes31724,LCro39023],["Max8903","Glo25702","Con45374","Lay36091","Res35621","Sim23884","Ave52155","Res31724","Cro39023"],Cro39023,"Cro39023")

Actual (Unparsed): [[[1.3945000], [0.6372000]]]

Expected (Unparsed): [[[1.394499999999983],[0.6371999999999982]]]

Actual:   [[[1.3945], [0.6372]]]

Expected: [[[1.3945], [0.6372]]]