import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Dot98965 = tf.keras.layers.Input(shape=([2]))
in1Dot98965 = tf.keras.layers.Input(shape=([2]))

Dot98965 = keras.layers.Dot(axes=(1, 1), name = 'Dot98965', )([in0Dot98965,in1Dot98965])
Thr80673 = keras.layers.ThresholdedReLU(theta=6.919666623408692, name = 'Thr80673', )(Dot98965)
model = tf.keras.models.Model(inputs=[in0Dot98965,in1Dot98965], outputs=Thr80673)
in0Dot98965 = tf.constant([[0.046, 0.6762]])
in1Dot98965 = tf.constant([[0.8291, 0.5738]])
print (np.array2string(model.predict([in0Dot98965,in1Dot98965],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Thr80673.png')

LDot98965 = dot_layer([[0.046, 0.6762]], [[0.8291, 0.5738]], 1, 1, Dot98965), 
LThr80673 = thresholded_relu_layer(Dot98965, 6.919666623408692, Thr80673), 
exec_layers([LDot98965,LThr80673],["Dot98965","Thr80673"],Thr80673,"Thr80673")

Actual (Unparsed): [[0.0000000]]

Expected (Unparsed): [[0]]

Actual:   [[0]]

Expected: [[0]]