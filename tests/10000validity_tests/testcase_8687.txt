import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Max91450 = tf.keras.layers.Input(shape=([2, 2, 2, 2]))
in1Max91450 = tf.keras.layers.Input(shape=([2, 2, 2, 2]))
in0Dep64097 = tf.keras.layers.Input(shape=([1, 2, 1]))
in0Con51267 = tf.keras.layers.Input(shape=([2, 2, 3]))

Max91450 = keras.layers.Maximum(name = 'Max91450', )([in0Max91450,in1Max91450])
Res661 = keras.layers.Reshape((2, 2, 4), name = 'Res661', )(Max91450)
Dep64097 = keras.layers.DepthwiseConv2D((1, 1),strides=(1, 1), padding='same', name = 'Dep64097', )(in0Dep64097)
Zer6603 = keras.layers.ZeroPadding2D(padding=((1, 0), (0, 0)), name = 'Zer6603', )(Dep64097)
Con51267 = keras.layers.Concatenate(axis=3, name = 'Con51267', )([Zer6603,in0Con51267])
Mul32421 = keras.layers.Multiply(name = 'Mul32421', )([Res661,Con51267])
Res30966 = keras.layers.Reshape((2, 8), name = 'Res30966', )(Mul32421)
Zer81901 = keras.layers.ZeroPadding1D(padding=((1, 1)), name = 'Zer81901', )(Res30966)
model = tf.keras.models.Model(inputs=[in0Max91450,in1Max91450,in0Dep64097,in0Con51267], outputs=Zer81901)
w = model.get_layer('Dep64097').get_weights() 
w[0] = np.array([[[[0.467]]]])
w[1] = np.array([0])
model.get_layer('Dep64097').set_weights(w) 
in0Max91450 = tf.constant([[[[[0.594, 0.3589], [0.6506, 0.2039]], [[0.1047, 0.2127], [0.1602, 0.9915]]], [[[0.2515, 0.7781], [0.7669, 0.7628]], [[0.3824, 0.9905], [0.1649, 0.6641]]]]])
in1Max91450 = tf.constant([[[[[0.6641, 0.1329], [0.7369, 0.4092]], [[0.447, 0.5414], [0.3899, 0.2196]]], [[[0.4831, 0.3274], [0.1172, 0.8347]], [[0.5139, 0.073], [0.834, 0.518]]]]])
in0Dep64097 = tf.constant([[[[0.5914], [0.2447]]]])
in0Con51267 = tf.constant([[[[0.6415, 0.9935, 0.0885], [0.3651, 0.9273, 0.9888]], [[0.4288, 0.768, 0.4593], [0.13, 0.1434, 0.2586]]]])
print (np.array2string(model.predict([in0Max91450,in1Max91450,in0Dep64097,in0Con51267],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Zer81901.png')

LMax91450 = maximum_layer([[[[[[0.594, 0.3589], [0.6506, 0.2039]], [[0.1047, 0.2127], [0.1602, 0.9915]]], [[[0.2515, 0.7781], [0.7669, 0.7628]], [[0.3824, 0.9905], [0.1649, 0.6641]]]]], [[[[[0.6641, 0.1329], [0.7369, 0.4092]], [[0.447, 0.5414], [0.3899, 0.2196]]], [[[0.4831, 0.3274], [0.1172, 0.8347]], [[0.5139, 0.073], [0.834, 0.518]]]]]], Max91450), 
LRes661 = reshape_layer(Max91450, [2, 2, 4], Res661), 
LDep64097 = depthwise_conv2D_layer([[[[0.5914], [0.2447]]]], 1, 1,[[[[0.467]]]],[0], 1, 1, true, Dep64097), 
LZer6603 = zero_padding2D_layer(Dep64097, 1, 0, 0, 0, Zer6603), 
LCon51267 = concatenate_layer([Zer6603,[[[[0.6415, 0.9935, 0.0885], [0.3651, 0.9273, 0.9888]], [[0.4288, 0.768, 0.4593], [0.13, 0.1434, 0.2586]]]]], 3, Con51267), 
LMul32421 = multiply_layer([Res661,Con51267], Mul32421), 
LRes30966 = reshape_layer(Mul32421, [2, 8], Res30966), 
LZer81901 = zero_padding1D_layer(Res30966, 1, 1, Zer81901), 
exec_layers([LMax91450,LRes661,LDep64097,LZer6603,LCon51267,LMul32421,LRes30966,LZer81901],["Max91450","Res661","Dep64097","Zer6603","Con51267","Mul32421","Res30966","Zer81901"],Zer81901,"Zer81901")

Actual (Unparsed): [[[0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.2302344, 0.7321101, 0.0362142, 0.0000000, 0.1976651, 0.3615543, 0.9803952], [0.1334244, 0.3336493, 0.5889792, 0.3833777, 0.0587259, 0.1287650, 0.1195956, 0.1717363], [0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000]]]

Expected (Unparsed): [[[0,0,0,0,0,0,0,0],[0.0,0.23023434999999998,0.73211015,0.0362142,0.0,0.19766514,0.36155427,0.9803952],[0.13342439378,0.33364928,0.5889792,0.38337771,0.05872587111000001,0.12876500000000002,0.1195956,0.17173626],[0,0,0,0,0,0,0,0]]]

Actual:   [[[0, 0, 0, 0, 0, 0, 0, 0], [0, 0.2303, 0.7322, 0.0363, 0, 0.1977, 0.3616, 0.9804], [0.1335, 0.3337, 0.589, 0.3834, 0.0588, 0.1288, 0.1196, 0.1718], [0, 0, 0, 0, 0, 0, 0, 0]]]

Expected: [[[0, 0, 0, 0, 0, 0, 0, 0], [0, 0.2303, 0.7322, 0.0363, 0, 0.1977, 0.3616, 0.9804], [0.1335, 0.3337, 0.589, 0.3834, 0.0588, 0.1288, 0.1196, 0.1718], [0, 0, 0, 0, 0, 0, 0, 0]]]