import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Zer27508 = tf.keras.layers.Input(shape=([3, 4, 1]))
in0Con96326 = tf.keras.layers.Input(shape=([5, 6, 5, 1]))
in0Cro38716 = tf.keras.layers.Input(shape=([3, 3, 3]))
in0Con83780 = tf.keras.layers.Input(shape=([1, 2, 3, 1]))
in0Min23173 = tf.keras.layers.Input(shape=([1, 2, 2, 2]))
in1Min23173 = tf.keras.layers.Input(shape=([1, 2, 2, 2]))

Zer27508 = keras.layers.ZeroPadding2D(padding=((1, 1), (1, 1)), name = 'Zer27508', )(in0Zer27508)
Res98757 = keras.layers.Reshape((5, 6, 1, 1), name = 'Res98757', )(Zer27508)
Zer34858 = keras.layers.ZeroPadding3D(padding=((0, 0), (0, 0), (4, 0)), name = 'Zer34858', )(Res98757)
Con96326 = keras.layers.Concatenate(axis=4, name = 'Con96326', )([Zer34858,in0Con96326])
Cro38716 = keras.layers.Cropping2D(cropping=((2, 0), (1, 0)), name = 'Cro38716', )(in0Cro38716)
Res50102 = keras.layers.Reshape((1, 2, 3, 1), name = 'Res50102', )(Cro38716)
Con83780 = keras.layers.Concatenate(axis=4, name = 'Con83780', )([Res50102,in0Con83780])
Min23173 = keras.layers.Minimum(name = 'Min23173', )([in0Min23173,in1Min23173])
Zer85150 = keras.layers.ZeroPadding3D(padding=((0, 0), (0, 0), (1, 0)), name = 'Zer85150', )(Min23173)
Min6913 = keras.layers.Minimum(name = 'Min6913', )([Con83780,Zer85150])
Zer9960 = keras.layers.ZeroPadding3D(padding=((4, 0), (4, 0), (2, 0)), name = 'Zer9960', )(Min6913)
Min18860 = keras.layers.Minimum(name = 'Min18860', )([Con96326,Zer9960])
model = tf.keras.models.Model(inputs=[in0Zer27508,in0Con96326,in0Cro38716,in0Con83780,in0Min23173,in1Min23173], outputs=Min18860)
in0Zer27508 = tf.constant([[[[1.1136], [1.5502], [1.5522], [1.422]], [[1.3018], [1.0214], [1.6907], [1.1014]], [[1.1848], [1.8438], [1.5662], [1.6689]]]])
in0Con96326 = tf.constant([[[[[0.2687], [0.7093], [0.7249], [0.3558], [0.0876]], [[0.8482], [0.0019], [0.8124], [0.7406], [0.3313]], [[0.1783], [0.167], [0.8789], [0.6049], [0.6993]], [[0.0211], [0.269], [0.9357], [0.7852], [0.9222]], [[0.8604], [0.2036], [0.4491], [0.2594], [0.8051]], [[0.9744], [0.7713], [0.2403], [0.6625], [0.938]]], [[[0.3876], [0.6292], [0.9839], [0.3026], [0.2563]], [[0.1911], [0.9672], [0.0165], [0.9008], [0.3341]], [[0.8921], [0.7521], [0.4884], [0.2731], [0.6073]], [[0.4303], [0.3047], [0.1468], [0.4223], [0.6938]], [[0.4086], [0.9112], [0.38], [0.1387], [0.5127]], [[0.5081], [0.0307], [0.3086], [0.4232], [0.7584]]], [[[0.5145], [0.4201], [0.6956], [0.6664], [0.9635]], [[0.5422], [0.5142], [0.3387], [0.9868], [0.4853]], [[0.1872], [0.5183], [0.269], [0.9642], [0.0657]], [[0.8135], [0.1213], [0.7016], [0.1388], [0.0616]], [[0.1625], [0.0061], [0.0361], [0.9098], [0.172]], [[0.0245], [0.678], [0.6183], [0.5593], [0.2991]]], [[[0.3533], [0.2924], [0.8239], [0.4856], [0.5743]], [[0.2408], [0.8418], [0.0861], [0.6648], [0.9176]], [[0.8065], [0.8335], [0.6664], [0.959], [0.1797]], [[0.9289], [0.818], [0.1518], [0.0602], [0.6761]], [[0.5543], [0.7799], [0.9664], [0.1846], [0.7027]], [[0.6919], [0.1481], [0.7209], [0.3109], [0.5988]]], [[[0.1901], [0.9725], [0.3326], [0.5707], [0.8528]], [[0.963], [0.2162], [0.4336], [0.8055], [0.6058]], [[0.296], [0.7843], [0.1521], [0.9153], [0.7688]], [[0.6412], [0.4228], [0.7096], [0.9537], [0.3249]], [[0.0122], [0.2321], [0.4783], [0.026], [0.8788]], [[0.4974], [0.0142], [0.656], [0.6922], [0.3206]]]]])
in0Cro38716 = tf.constant([[[[1.4196, 1.5932, 1.7587], [1.1615, 1.4721, 1.1214], [1.6863, 1.3078, 1.9315]], [[1.1083, 1.3226, 1.8695], [1.6634, 1.3971, 1.1537], [1.5696, 1.0848, 1.0264]], [[1.7799, 1.9489, 1.9751], [1.4215, 1.5966, 1.5533], [1.4049, 1.0345, 1.5394]]]])
in0Con83780 = tf.constant([[[[[0.3738], [0.2468], [0.9185]], [[0.2624], [0.4771], [0.7289]]]]])
in0Min23173 = tf.constant([[[[[0.7018, 0.5582], [0.836, 0.969]], [[0.7075, 0.4539], [0.4494, 0.388]]]]])
in1Min23173 = tf.constant([[[[[0.8348, 0.8288], [0.3951, 0.8308]], [[0.4613, 0.7352], [0.8629, 0.4503]]]]])
print (np.array2string(model.predict([in0Zer27508,in0Con96326,in0Cro38716,in0Con83780,in0Min23173,in1Min23173],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Min18860.png')

LZer27508 = zero_padding2D_layer([[[[1.1136], [1.5502], [1.5522], [1.422]], [[1.3018], [1.0214], [1.6907], [1.1014]], [[1.1848], [1.8438], [1.5662], [1.6689]]]], 1, 1, 1, 1, Zer27508), 
LRes98757 = reshape_layer(Zer27508, [5, 6, 1, 1], Res98757), 
LZer34858 = zero_padding3D_layer(Res98757, 0, 0, 0, 0, 4, 0, Zer34858), 
LCon96326 = concatenate_layer([Zer34858,[[[[[0.2687], [0.7093], [0.7249], [0.3558], [0.0876]], [[0.8482], [0.0019], [0.8124], [0.7406], [0.3313]], [[0.1783], [0.167], [0.8789], [0.6049], [0.6993]], [[0.0211], [0.269], [0.9357], [0.7852], [0.9222]], [[0.8604], [0.2036], [0.4491], [0.2594], [0.8051]], [[0.9744], [0.7713], [0.2403], [0.6625], [0.938]]], [[[0.3876], [0.6292], [0.9839], [0.3026], [0.2563]], [[0.1911], [0.9672], [0.0165], [0.9008], [0.3341]], [[0.8921], [0.7521], [0.4884], [0.2731], [0.6073]], [[0.4303], [0.3047], [0.1468], [0.4223], [0.6938]], [[0.4086], [0.9112], [0.38], [0.1387], [0.5127]], [[0.5081], [0.0307], [0.3086], [0.4232], [0.7584]]], [[[0.5145], [0.4201], [0.6956], [0.6664], [0.9635]], [[0.5422], [0.5142], [0.3387], [0.9868], [0.4853]], [[0.1872], [0.5183], [0.269], [0.9642], [0.0657]], [[0.8135], [0.1213], [0.7016], [0.1388], [0.0616]], [[0.1625], [0.0061], [0.0361], [0.9098], [0.172]], [[0.0245], [0.678], [0.6183], [0.5593], [0.2991]]], [[[0.3533], [0.2924], [0.8239], [0.4856], [0.5743]], [[0.2408], [0.8418], [0.0861], [0.6648], [0.9176]], [[0.8065], [0.8335], [0.6664], [0.959], [0.1797]], [[0.9289], [0.818], [0.1518], [0.0602], [0.6761]], [[0.5543], [0.7799], [0.9664], [0.1846], [0.7027]], [[0.6919], [0.1481], [0.7209], [0.3109], [0.5988]]], [[[0.1901], [0.9725], [0.3326], [0.5707], [0.8528]], [[0.963], [0.2162], [0.4336], [0.8055], [0.6058]], [[0.296], [0.7843], [0.1521], [0.9153], [0.7688]], [[0.6412], [0.4228], [0.7096], [0.9537], [0.3249]], [[0.0122], [0.2321], [0.4783], [0.026], [0.8788]], [[0.4974], [0.0142], [0.656], [0.6922], [0.3206]]]]]], 4, Con96326), 
LCro38716 = cropping2D_layer([[[[1.4196, 1.5932, 1.7587], [1.1615, 1.4721, 1.1214], [1.6863, 1.3078, 1.9315]], [[1.1083, 1.3226, 1.8695], [1.6634, 1.3971, 1.1537], [1.5696, 1.0848, 1.0264]], [[1.7799, 1.9489, 1.9751], [1.4215, 1.5966, 1.5533], [1.4049, 1.0345, 1.5394]]]], 2, 0, 1, 0, Cro38716), 
LRes50102 = reshape_layer(Cro38716, [1, 2, 3, 1], Res50102), 
LCon83780 = concatenate_layer([Res50102,[[[[[0.3738], [0.2468], [0.9185]], [[0.2624], [0.4771], [0.7289]]]]]], 4, Con83780), 
LMin23173 = minimum_layer([[[[[[0.7018, 0.5582], [0.836, 0.969]], [[0.7075, 0.4539], [0.4494, 0.388]]]]], [[[[[0.8348, 0.8288], [0.3951, 0.8308]], [[0.4613, 0.7352], [0.8629, 0.4503]]]]]], Min23173), 
LZer85150 = zero_padding3D_layer(Min23173, 0, 0, 0, 0, 1, 0, Zer85150), 
LMin6913 = minimum_layer([Con83780,Zer85150], Min6913), 
LZer9960 = zero_padding3D_layer(Min6913, 4, 0, 4, 0, 2, 0, Zer9960), 
LMin18860 = minimum_layer([Con96326,Zer9960], Min18860), 
exec_layers([LZer27508,LRes98757,LZer34858,LCon96326,LCro38716,LRes50102,LCon83780,LMin23173,LZer85150,LMin6913,LZer9960,LMin18860],["Zer27508","Res98757","Zer34858","Con96326","Cro38716","Res50102","Con83780","Min23173","Zer85150","Min6913","Zer9960","Min18860"],Min18860,"Min18860")

Actual (Unparsed): [[[[[0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000]], [[0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000]], [[0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000]], [[0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000]], [[0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000]], [[0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000]]], [[[0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000]], [[0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000]], [[0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000]], [[0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000]], [[0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000]], [[0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000]]], [[[0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000]], [[0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000]], [[0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000]], [[0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000]], [[0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000]], [[0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000]]], [[[0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000]], [[0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000]], [[0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000]], [[0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000]], [[0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000]], [[0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000]]], [[[0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000]], [[0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000]], [[0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000]], [[0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000]], [[0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0260000], [0.0000000, 0.8308000]], [[0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.4539000], [0.0000000, 0.3206000]]]]]

Expected (Unparsed): [[[[[0,0],[0,0],[0,0],[0,0],[0,0]],[[0,0],[0,0],[0,0],[0,0],[0,0]],[[0,0],[0,0],[0,0],[0,0],[0,0]],[[0,0],[0,0],[0,0],[0,0],[0,0]],[[0,0],[0,0],[0,0],[0,0],[0,0]],[[0,0],[0,0],[0,0],[0,0],[0,0]]],[[[0,0],[0,0],[0,0],[0,0],[0,0]],[[0,0],[0,0],[0,0],[0,0],[0,0]],[[0,0],[0,0],[0,0],[0,0],[0,0]],[[0,0],[0,0],[0,0],[0,0],[0,0]],[[0,0],[0,0],[0,0],[0,0],[0,0]],[[0,0],[0,0],[0,0],[0,0],[0,0]]],[[[0,0],[0,0],[0,0],[0,0],[0,0]],[[0,0],[0,0],[0,0],[0,0],[0,0]],[[0,0],[0,0],[0,0],[0,0],[0,0]],[[0,0],[0,0],[0,0],[0,0],[0,0]],[[0,0],[0,0],[0,0],[0,0],[0,0]],[[0,0],[0,0],[0,0],[0,0],[0,0]]],[[[0,0],[0,0],[0,0],[0,0],[0,0]],[[0,0],[0,0],[0,0],[0,0],[0,0]],[[0,0],[0,0],[0,0],[0,0],[0,0]],[[0,0],[0,0],[0,0],[0,0],[0,0]],[[0,0],[0,0],[0,0],[0,0],[0,0]],[[0,0],[0,0],[0,0],[0,0],[0,0]]],[[[0,0],[0,0],[0,0],[0,0],[0,0]],[[0,0],[0,0],[0,0],[0,0],[0,0]],[[0,0],[0,0],[0,0],[0,0],[0,0]],[[0,0],[0,0],[0,0],[0,0],[0,0]],[[0,0],[0,0],[0,0],[0,0.026],[0,0.8308]],[[0,0],[0,0],[0,0],[0,0.4539],[0,0.3206]]]]]

Actual:   [[[[[0, 0], [0, 0], [0, 0], [0, 0], [0, 0]], [[0, 0], [0, 0], [0, 0], [0, 0], [0, 0]], [[0, 0], [0, 0], [0, 0], [0, 0], [0, 0]], [[0, 0], [0, 0], [0, 0], [0, 0], [0, 0]], [[0, 0], [0, 0], [0, 0], [0, 0], [0, 0]], [[0, 0], [0, 0], [0, 0], [0, 0], [0, 0]]], [[[0, 0], [0, 0], [0, 0], [0, 0], [0, 0]], [[0, 0], [0, 0], [0, 0], [0, 0], [0, 0]], [[0, 0], [0, 0], [0, 0], [0, 0], [0, 0]], [[0, 0], [0, 0], [0, 0], [0, 0], [0, 0]], [[0, 0], [0, 0], [0, 0], [0, 0], [0, 0]], [[0, 0], [0, 0], [0, 0], [0, 0], [0, 0]]], [[[0, 0], [0, 0], [0, 0], [0, 0], [0, 0]], [[0, 0], [0, 0], [0, 0], [0, 0], [0, 0]], [[0, 0], [0, 0], [0, 0], [0, 0], [0, 0]], [[0, 0], [0, 0], [0, 0], [0, 0], [0, 0]], [[0, 0], [0, 0], [0, 0], [0, 0], [0, 0]], [[0, 0], [0, 0], [0, 0], [0, 0], [0, 0]]], [[[0, 0], [0, 0], [0, 0], [0, 0], [0, 0]], [[0, 0], [0, 0], [0, 0], [0, 0], [0, 0]], [[0, 0], [0, 0], [0, 0], [0, 0], [0, 0]], [[0, 0], [0, 0], [0, 0], [0, 0], [0, 0]], [[0, 0], [0, 0], [0, 0], [0, 0], [0, 0]], [[0, 0], [0, 0], [0, 0], [0, 0], [0, 0]]], [[[0, 0], [0, 0], [0, 0], [0, 0], [0, 0]], [[0, 0], [0, 0], [0, 0], [0, 0], [0, 0]], [[0, 0], [0, 0], [0, 0], [0, 0], [0, 0]], [[0, 0], [0, 0], [0, 0], [0, 0], [0, 0]], [[0, 0], [0, 0], [0, 0], [0, 0.026], [0, 0.8308]], [[0, 0], [0, 0], [0, 0], [0, 0.4539], [0, 0.3206]]]]]

Expected: [[[[[0, 0], [0, 0], [0, 0], [0, 0], [0, 0]], [[0, 0], [0, 0], [0, 0], [0, 0], [0, 0]], [[0, 0], [0, 0], [0, 0], [0, 0], [0, 0]], [[0, 0], [0, 0], [0, 0], [0, 0], [0, 0]], [[0, 0], [0, 0], [0, 0], [0, 0], [0, 0]], [[0, 0], [0, 0], [0, 0], [0, 0], [0, 0]]], [[[0, 0], [0, 0], [0, 0], [0, 0], [0, 0]], [[0, 0], [0, 0], [0, 0], [0, 0], [0, 0]], [[0, 0], [0, 0], [0, 0], [0, 0], [0, 0]], [[0, 0], [0, 0], [0, 0], [0, 0], [0, 0]], [[0, 0], [0, 0], [0, 0], [0, 0], [0, 0]], [[0, 0], [0, 0], [0, 0], [0, 0], [0, 0]]], [[[0, 0], [0, 0], [0, 0], [0, 0], [0, 0]], [[0, 0], [0, 0], [0, 0], [0, 0], [0, 0]], [[0, 0], [0, 0], [0, 0], [0, 0], [0, 0]], [[0, 0], [0, 0], [0, 0], [0, 0], [0, 0]], [[0, 0], [0, 0], [0, 0], [0, 0], [0, 0]], [[0, 0], [0, 0], [0, 0], [0, 0], [0, 0]]], [[[0, 0], [0, 0], [0, 0], [0, 0], [0, 0]], [[0, 0], [0, 0], [0, 0], [0, 0], [0, 0]], [[0, 0], [0, 0], [0, 0], [0, 0], [0, 0]], [[0, 0], [0, 0], [0, 0], [0, 0], [0, 0]], [[0, 0], [0, 0], [0, 0], [0, 0], [0, 0]], [[0, 0], [0, 0], [0, 0], [0, 0], [0, 0]]], [[[0, 0], [0, 0], [0, 0], [0, 0], [0, 0]], [[0, 0], [0, 0], [0, 0], [0, 0], [0, 0]], [[0, 0], [0, 0], [0, 0], [0, 0], [0, 0]], [[0, 0], [0, 0], [0, 0], [0, 0], [0, 0]], [[0, 0], [0, 0], [0, 0], [0, 0.026], [0, 0.8308]], [[0, 0], [0, 0], [0, 0], [0, 0.4539], [0, 0.3206]]]]]