import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Cro87638 = tf.keras.layers.Input(shape=([4, 2]))

Cro87638 = keras.layers.Cropping1D(cropping=((2, 0)), name = 'Cro87638', )(in0Cro87638)
Lea65002 = keras.layers.LeakyReLU(alpha=4.215880616742374, name = 'Lea65002', )(Cro87638)
Res76856 = keras.layers.Reshape((2, 2, 1), name = 'Res76856', )(Lea65002)
Glo1949 = keras.layers.GlobalAveragePooling2D(name = 'Glo1949', )(Res76856)
model = tf.keras.models.Model(inputs=[in0Cro87638], outputs=Glo1949)
in0Cro87638 = tf.constant([[[1.3774, 1.3737], [1.5328, 1.0163], [1.5233, 1.2748], [1.7533, 1.4279]]])
print (np.array2string(model.predict([in0Cro87638],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Glo1949.png')

LCro87638 = cropping1D_layer([[[1.3774, 1.3737], [1.5328, 1.0163], [1.5233, 1.2748], [1.7533, 1.4279]]], 2, 0, Cro87638), 
LLea65002 = leaky_relu_layer(Cro87638, 4.215880616742374, Lea65002), 
LRes76856 = reshape_layer(Lea65002, [2, 2, 1], Res76856), 
LGlo1949 = global_average_pooling2D_layer(Res76856, Glo1949), 
exec_layers([LCro87638,LLea65002,LRes76856,LGlo1949],["Cro87638","Lea65002","Res76856","Glo1949"],Glo1949,"Glo1949")

Actual (Unparsed): [[1.4948250]]

Expected (Unparsed): [[1.494825]]

Actual:   [[1.4949]]

Expected: [[1.4949]]