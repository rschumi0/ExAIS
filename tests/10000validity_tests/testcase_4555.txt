import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Dot31594 = tf.keras.layers.Input(shape=([3, 2]))
in1Dot31594 = tf.keras.layers.Input(shape=([3, 2]))

Dot31594 = keras.layers.Dot(axes=(2, 2), name = 'Dot31594', )([in0Dot31594,in1Dot31594])
Glo9695 = keras.layers.GlobalAveragePooling1D(name = 'Glo9695', )(Dot31594)
Res75180 = keras.layers.Reshape((3, 1), name = 'Res75180', )(Glo9695)
Res49413 = keras.layers.Reshape((3, 1, 1), name = 'Res49413', )(Res75180)
Up_37465 = keras.layers.UpSampling2D(size=(2, 2), name = 'Up_37465', )(Res49413)
model = tf.keras.models.Model(inputs=[in0Dot31594,in1Dot31594], outputs=Up_37465)
in0Dot31594 = tf.constant([[[0.6004, 0.3669], [0.0279, 0.0966], [0.4988, 0.9009]]])
in1Dot31594 = tf.constant([[[0.0405, 0.0046], [0.3419, 0.5115], [0.3389, 0.9526]]])
print (np.array2string(model.predict([in0Dot31594,in1Dot31594],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Up_37465.png')

LDot31594 = dot_layer([[[0.6004, 0.3669], [0.0279, 0.0966], [0.4988, 0.9009]]], [[[0.0405, 0.0046], [0.3419, 0.5115], [0.3389, 0.9526]]], 2, 2, Dot31594), 
LGlo9695 = global_average_pooling1D_layer(Dot31594, Glo9695), 
LRes75180 = reshape_layer(Glo9695, [3, 1], Res75180), 
LRes49413 = reshape_layer(Res75180, [3, 1, 1], Res49413), 
LUp_37465 = up_sampling2D_layer(Res49413, 2, 2, Up_37465), 
exec_layers([LDot31594,LGlo9695,LRes75180,LRes49413,LUp_37465],["Dot31594","Glo9695","Res75180","Res49413","Up_37465"],Up_37465,"Up_37465")

Actual (Unparsed): [[[[0.0173079], [0.0173079]], [[0.0173079], [0.0173079]], [[0.3610820], [0.3610820]], [[0.3610820], [0.3610820]], [[0.5605672], [0.5605672]], [[0.5605672], [0.5605672]]]]

Expected (Unparsed): [[[[0.017307930000000003],[0.017307930000000003]],[[0.017307930000000003],[0.017307930000000003]],[[0.36108203],[0.36108203]],[[0.36108203],[0.36108203]],[[0.56056721],[0.56056721]],[[0.56056721],[0.56056721]]]]

Actual:   [[[[0.0174], [0.0174]], [[0.0174], [0.0174]], [[0.3611], [0.3611]], [[0.3611], [0.3611]], [[0.5606], [0.5606]], [[0.5606], [0.5606]]]]

Expected: [[[[0.0174], [0.0174]], [[0.0174], [0.0174]], [[0.3611], [0.3611]], [[0.3611], [0.3611]], [[0.5606], [0.5606]], [[0.5606], [0.5606]]]]