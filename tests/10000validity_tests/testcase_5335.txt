import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Mul80161 = tf.keras.layers.Input(shape=([1, 1, 2]))
in1Mul80161 = tf.keras.layers.Input(shape=([1, 1, 2]))

Mul80161 = keras.layers.Multiply(name = 'Mul80161', )([in0Mul80161,in1Mul80161])
Res64883 = keras.layers.Reshape((1, 1, 2, 1), name = 'Res64883', )(Mul80161)
Con43244 = keras.layers.Conv3DTranspose(3, (1, 1, 2),strides=(1, 1, 1), padding='same', name = 'Con43244', )(Res64883)
model = tf.keras.models.Model(inputs=[in0Mul80161,in1Mul80161], outputs=Con43244)
w = model.get_layer('Con43244').get_weights() 
w[0] = np.array([[[[[0.6266], [0.9101], [0.9831]], [[0.9947], [0.1265], [0.6982]]]]])
w[1] = np.array([0, 0, 0])
model.get_layer('Con43244').set_weights(w) 
in0Mul80161 = tf.constant([[[[0.1297, 0.963]]]])
in1Mul80161 = tf.constant([[[[0.2795, 0.1042]]]])
print (np.array2string(model.predict([in0Mul80161,in1Mul80161],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Con43244.png')

LMul80161 = multiply_layer([[[[[0.1297, 0.963]]]], [[[[0.2795, 0.1042]]]]], Mul80161), 
LRes64883 = reshape_layer(Mul80161, [1, 1, 2, 1], Res64883), 
LCon43244 = conv3D_transpose_layer(Res64883, 1, 1, 2,[[[[[0.6266], [0.9101], [0.9831]], [[0.9947], [0.1265], [0.6982]]]]],[0, 0, 0], 1, 1, 1, true, Con43244), 
exec_layers([LMul80161,LRes64883,LCon43244],["Mul80161","Res64883","Con43244"],Con43244,"Con43244")

Actual (Unparsed): [[[[[0.0227150, 0.0329922, 0.0356385], [0.0989349, 0.0959094, 0.1239593]]]]]

Expected (Unparsed): [[[[[0.022714970590000005,0.032992171615,0.035638505565],[0.098934945265,0.09590939093499999,0.12395932919]]]]]

Actual:   [[[[[0.0228, 0.033, 0.0357], [0.099, 0.096, 0.124]]]]]

Expected: [[[[[0.0228, 0.033, 0.0357], [0.099, 0.096, 0.124]]]]]