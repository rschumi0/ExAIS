import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Lay17438 = tf.keras.layers.Input(shape=([1, 3]))

Lay17438 = keras.layers.LayerNormalization(axis=1, epsilon=2.794821913520104, name = 'Lay17438', )(in0Lay17438)
Bat65619 = keras.layers.BatchNormalization(axis=1, epsilon=0.7636580960104025,  name = 'Bat65619', )(Lay17438)
Cro1085 = keras.layers.Cropping1D(cropping=((0, 0)), name = 'Cro1085', )(Bat65619)
model = tf.keras.models.Model(inputs=[in0Lay17438], outputs=Cro1085)
w = model.get_layer('Bat65619').get_weights() 
w[0] = np.array([0.3153])
w[1] = np.array([0.447])
w[2] = np.array([0.0427])
w[3] = np.array([0.4531])
model.get_layer('Bat65619').set_weights(w) 
in0Lay17438 = tf.constant([[[1.7215, 1.2405, 1.54]]])
print (np.array2string(model.predict([in0Lay17438],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Cro1085.png')

LLay17438 = layer_normalization_layer([[[1.7215, 1.2405, 1.54]]], 1, 2.794821913520104, Lay17438), 
LBat65619 = batch_normalization_layer(Lay17438, 1, 0.7636580960104025, [0.3153], [0.447], [0.0427], [0.4531], Bat65619), 
LCro1085 = cropping1D_layer(Bat65619, 0, 0, Cro1085), 
exec_layers([LLay17438,LBat65619,LCro1085],["Lay17438","Bat65619","Cro1085"],Cro1085,"Cro1085")

Actual (Unparsed): [[[0.4347947, 0.4347947, 0.4347947]]]

Expected (Unparsed): [[[0.4347946644530354,0.4347946644530354,0.4347946644530354]]]

Actual:   [[[0.4348, 0.4348, 0.4348]]]

Expected: [[[0.4348, 0.4348, 0.4348]]]