import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Sub8196 = tf.keras.layers.Input(shape=([2, 3, 2]))
in1Sub8196 = tf.keras.layers.Input(shape=([2, 3, 2]))

Sub8196 = keras.layers.Subtract(name = 'Sub8196', )([in0Sub8196,in1Sub8196])
Res24055 = keras.layers.Reshape((2, 6), name = 'Res24055', )(Sub8196)
Zer99613 = keras.layers.ZeroPadding1D(padding=((1, 1)), name = 'Zer99613', )(Res24055)
Res5245 = keras.layers.Reshape((4, 6, 1), name = 'Res5245', )(Zer99613)
Res18260 = keras.layers.Reshape((4, 6, 1, 1), name = 'Res18260', )(Res5245)
Glo12424 = keras.layers.GlobalAveragePooling3D(name = 'Glo12424', )(Res18260)
Res74914 = keras.layers.Reshape((1, 1), name = 'Res74914', )(Glo12424)
LST82483 = keras.layers.LSTM(2,recurrent_activation='sigmoid', name = 'LST82483', )(Res74914)
Res1399 = keras.layers.Reshape((2, 1), name = 'Res1399', )(LST82483)
Res52594 = keras.layers.Reshape((2, 1, 1), name = 'Res52594', )(Res1399)
Res11218 = keras.layers.Reshape((2, 1, 1, 1), name = 'Res11218', )(Res52594)
Zer73571 = keras.layers.ZeroPadding3D(padding=((1, 1), (1, 1), (1, 1)), name = 'Zer73571', )(Res11218)
Up_27605 = keras.layers.UpSampling3D(size=(1, 1, 1), name = 'Up_27605', )(Zer73571)
model = tf.keras.models.Model(inputs=[in0Sub8196,in1Sub8196], outputs=Up_27605)
w = model.get_layer('LST82483').get_weights() 
w[0] = np.array([[4, 9, 5, 3, 1, 5, 7, 4]])
w[1] = np.array([[3, 7, 8, 5, 9, 3, 3, 3], [3, 8, 8, 7, 5, 10, 4, 10]])
w[2] = np.array([8, 3, 2, 10, 7, 2, 4, 2])
model.get_layer('LST82483').set_weights(w) 
in0Sub8196 = tf.constant([[[[0.9774, 0.5231], [0.139, 0.9919], [0.3192, 0.0131]], [[0.7268, 0.9797], [0.9613, 0.286], [0.9145, 0.8692]]]])
in1Sub8196 = tf.constant([[[[0.5745, 0.7862], [0.3954, 0.9269], [0.78, 0.9119]], [[0.4238, 0.2461], [0.4517, 0.2448], [0.4982, 0.4439]]]])
print (np.array2string(model.predict([in0Sub8196,in1Sub8196],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Up_27605.png')

LSub8196 = subtract_layer([[[[0.9774, 0.5231], [0.139, 0.9919], [0.3192, 0.0131]], [[0.7268, 0.9797], [0.9613, 0.286], [0.9145, 0.8692]]]], [[[[0.5745, 0.7862], [0.3954, 0.9269], [0.78, 0.9119]], [[0.4238, 0.2461], [0.4517, 0.2448], [0.4982, 0.4439]]]], Sub8196), 
LRes24055 = reshape_layer(Sub8196, [2, 6], Res24055), 
LZer99613 = zero_padding1D_layer(Res24055, 1, 1, Zer99613), 
LRes5245 = reshape_layer(Zer99613, [4, 6, 1], Res5245), 
LRes18260 = reshape_layer(Res5245, [4, 6, 1, 1], Res18260), 
LGlo12424 = global_average_pooling3D_layer(Res18260, Glo12424), 
LRes74914 = reshape_layer(Glo12424, [1, 1], Res74914), 
LLST82483 = lstm_layer(Res74914,[[4, 9, 5, 3, 1, 5, 7, 4]],[[3, 7, 8, 5, 9, 3, 3, 3], [3, 8, 8, 7, 5, 10, 4, 10]],[8, 3, 2, 10, 7, 2, 4, 2], LST82483), 
LRes1399 = reshape_layer(LST82483, [2, 1], Res1399), 
LRes52594 = reshape_layer(Res1399, [2, 1, 1], Res52594), 
LRes11218 = reshape_layer(Res52594, [2, 1, 1, 1], Res11218), 
LZer73571 = zero_padding3D_layer(Res11218, 1, 1, 1, 1, 1, 1, Zer73571), 
LUp_27605 = up_sampling3D_layer(Zer73571, 1, 1, 1, Up_27605), 
exec_layers([LSub8196,LRes24055,LZer99613,LRes5245,LRes18260,LGlo12424,LRes74914,LLST82483,LRes1399,LRes52594,LRes11218,LZer73571,LUp_27605],["Sub8196","Res24055","Zer99613","Res5245","Res18260","Glo12424","Res74914","LST82483","Res1399","Res52594","Res11218","Zer73571","Up_27605"],Up_27605,"Up_27605")

Actual (Unparsed): [[[[[0.0000000], [0.0000000], [0.0000000]], [[0.0000000], [0.0000000], [0.0000000]], [[0.0000000], [0.0000000], [0.0000000]]], [[[0.0000000], [0.0000000], [0.0000000]], [[0.0000000], [0.7512492], [0.0000000]], [[0.0000000], [0.0000000], [0.0000000]]], [[[0.0000000], [0.0000000], [0.0000000]], [[0.0000000], [0.6615884], [0.0000000]], [[0.0000000], [0.0000000], [0.0000000]]], [[[0.0000000], [0.0000000], [0.0000000]], [[0.0000000], [0.0000000], [0.0000000]], [[0.0000000], [0.0000000], [0.0000000]]]]]

Expected (Unparsed): [[[[[0],[0],[0]],[[0],[0],[0]],[[0],[0],[0]]],[[[0],[0],[0]],[[0],[0.7512491750601357],[0]],[[0],[0],[0]]],[[[0],[0],[0]],[[0],[0.6615883934514968],[0]],[[0],[0],[0]]],[[[0],[0],[0]],[[0],[0],[0]],[[0],[0],[0]]]]]

Actual:   [[[[[0], [0], [0]], [[0], [0], [0]], [[0], [0], [0]]], [[[0], [0], [0]], [[0], [0.7513], [0]], [[0], [0], [0]]], [[[0], [0], [0]], [[0], [0.6616], [0]], [[0], [0], [0]]], [[[0], [0], [0]], [[0], [0], [0]], [[0], [0], [0]]]]]

Expected: [[[[[0], [0], [0]], [[0], [0], [0]], [[0], [0], [0]]], [[[0], [0], [0]], [[0], [0.7513], [0]], [[0], [0], [0]]], [[[0], [0], [0]], [[0], [0.6616], [0]], [[0], [0], [0]]], [[[0], [0], [0]], [[0], [0], [0]], [[0], [0], [0]]]]]