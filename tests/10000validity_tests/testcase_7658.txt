import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Glo49209 = tf.keras.layers.Input(shape=([2, 2, 1]))
in0Con1037 = tf.keras.layers.Input(shape=([3, 3, 2]))
in0Dot27536 = tf.keras.layers.Input(shape=([3]))
in1Dot27536 = tf.keras.layers.Input(shape=([3]))
in0Con29882 = tf.keras.layers.Input(shape=([3, 3, 2]))
in0Sub49663 = tf.keras.layers.Input(shape=([3, 3, 3]))
in1Sub49663 = tf.keras.layers.Input(shape=([3, 3, 3]))

Glo49209 = keras.layers.GlobalAveragePooling2D(name = 'Glo49209', )(in0Glo49209)
Res6625 = keras.layers.Reshape((1, 1), name = 'Res6625', )(Glo49209)
Res59403 = keras.layers.Reshape((1, 1, 1), name = 'Res59403', )(Res6625)
Res45257 = keras.layers.Reshape((1, 1, 1, 1), name = 'Res45257', )(Res59403)
Glo66654 = keras.layers.GlobalMaxPool3D(name = 'Glo66654', )(Res45257)
Res20128 = keras.layers.Reshape((1, 1), name = 'Res20128', )(Glo66654)
Res67358 = keras.layers.Reshape((1, 1, 1), name = 'Res67358', )(Res20128)
Zer5761 = keras.layers.ZeroPadding2D(padding=((2, 0), (2, 0)), name = 'Zer5761', )(Res67358)
Con1037 = keras.layers.Concatenate(axis=3, name = 'Con1037', )([Zer5761,in0Con1037])
Dot27536 = keras.layers.Dot(axes=(1, 1), name = 'Dot27536', )([in0Dot27536,in1Dot27536])
Res74764 = keras.layers.Reshape((1, 1), name = 'Res74764', )(Dot27536)
Res86608 = keras.layers.Reshape((1, 1, 1), name = 'Res86608', )(Res74764)
Zer10383 = keras.layers.ZeroPadding2D(padding=((2, 0), (2, 0)), name = 'Zer10383', )(Res86608)
Con29882 = keras.layers.Concatenate(axis=3, name = 'Con29882', )([Zer10383,in0Con29882])
Sub49663 = keras.layers.Subtract(name = 'Sub49663', )([in0Sub49663,in1Sub49663])
Max24534 = keras.layers.Maximum(name = 'Max24534', )([Con29882,Sub49663])
Sub76501 = keras.layers.Subtract(name = 'Sub76501', )([Con1037,Max24534])
model = tf.keras.models.Model(inputs=[in0Glo49209,in0Con1037,in0Dot27536,in1Dot27536,in0Con29882,in0Sub49663,in1Sub49663], outputs=Sub76501)
in0Glo49209 = tf.constant([[[[1.8917], [1.8778]], [[1.4656], [1.0852]]]])
in0Con1037 = tf.constant([[[[0.7038, 0.3077], [0.4137, 0.9868], [0.4037, 0.49]], [[0.6039, 0.8863], [0.3362, 0.269], [0.36, 0.2813]], [[0.6538, 0.5534], [0.3205, 0.9186], [0.2665, 0.9702]]]])
in0Dot27536 = tf.constant([[0.5053, 0.2003, 0.5471]])
in1Dot27536 = tf.constant([[0.5575, 0.2938, 0.4305]])
in0Con29882 = tf.constant([[[[0.4595, 0.3717], [0.4452, 0.1509], [0.8454, 0.8998]], [[0.8904, 0.6977], [0.2498, 0.215], [0.4615, 0.9979]], [[0.9897, 0.8751], [0.4274, 0.5411], [0.3677, 0.1533]]]])
in0Sub49663 = tf.constant([[[[0.6378, 0.347, 0.0547], [0.7239, 0.093, 0.2681], [0.2377, 0.2689, 0.5202]], [[0.9891, 0.428, 0.2132], [0.7284, 0.9159, 0.0741], [0.3817, 0.7814, 0.7478]], [[0.0697, 0.2997, 0.668], [0.2603, 0.9202, 0.7569], [0.9897, 0.9942, 0.1375]]]])
in1Sub49663 = tf.constant([[[[0.9132, 0.2416, 0.1767], [0.1915, 0.7311, 0.715], [0.3802, 0.8161, 0.3458]], [[0.7867, 0.1394, 0.7228], [0.8327, 0.3761, 0.9873], [0.8005, 0.7187, 0.6478]], [[0.1467, 0.7005, 0.4975], [0.6199, 0.4197, 0.2954], [0.3544, 0.1938, 0.6538]]]])
print (np.array2string(model.predict([in0Glo49209,in0Con1037,in0Dot27536,in1Dot27536,in0Con29882,in0Sub49663,in1Sub49663],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Sub76501.png')

LGlo49209 = global_average_pooling2D_layer([[[[1.8917], [1.8778]], [[1.4656], [1.0852]]]], Glo49209), 
LRes6625 = reshape_layer(Glo49209, [1, 1], Res6625), 
LRes59403 = reshape_layer(Res6625, [1, 1, 1], Res59403), 
LRes45257 = reshape_layer(Res59403, [1, 1, 1, 1], Res45257), 
LGlo66654 = global_max_pool3D_layer(Res45257, Glo66654), 
LRes20128 = reshape_layer(Glo66654, [1, 1], Res20128), 
LRes67358 = reshape_layer(Res20128, [1, 1, 1], Res67358), 
LZer5761 = zero_padding2D_layer(Res67358, 2, 0, 2, 0, Zer5761), 
LCon1037 = concatenate_layer([Zer5761,[[[[0.7038, 0.3077], [0.4137, 0.9868], [0.4037, 0.49]], [[0.6039, 0.8863], [0.3362, 0.269], [0.36, 0.2813]], [[0.6538, 0.5534], [0.3205, 0.9186], [0.2665, 0.9702]]]]], 3, Con1037), 
LDot27536 = dot_layer([[0.5053, 0.2003, 0.5471]], [[0.5575, 0.2938, 0.4305]], 1, 1, Dot27536), 
LRes74764 = reshape_layer(Dot27536, [1, 1], Res74764), 
LRes86608 = reshape_layer(Res74764, [1, 1, 1], Res86608), 
LZer10383 = zero_padding2D_layer(Res86608, 2, 0, 2, 0, Zer10383), 
LCon29882 = concatenate_layer([Zer10383,[[[[0.4595, 0.3717], [0.4452, 0.1509], [0.8454, 0.8998]], [[0.8904, 0.6977], [0.2498, 0.215], [0.4615, 0.9979]], [[0.9897, 0.8751], [0.4274, 0.5411], [0.3677, 0.1533]]]]], 3, Con29882), 
LSub49663 = subtract_layer([[[[0.6378, 0.347, 0.0547], [0.7239, 0.093, 0.2681], [0.2377, 0.2689, 0.5202]], [[0.9891, 0.428, 0.2132], [0.7284, 0.9159, 0.0741], [0.3817, 0.7814, 0.7478]], [[0.0697, 0.2997, 0.668], [0.2603, 0.9202, 0.7569], [0.9897, 0.9942, 0.1375]]]], [[[[0.9132, 0.2416, 0.1767], [0.1915, 0.7311, 0.715], [0.3802, 0.8161, 0.3458]], [[0.7867, 0.1394, 0.7228], [0.8327, 0.3761, 0.9873], [0.8005, 0.7187, 0.6478]], [[0.1467, 0.7005, 0.4975], [0.6199, 0.4197, 0.2954], [0.3544, 0.1938, 0.6538]]]], Sub49663), 
LMax24534 = maximum_layer([Con29882,Sub49663], Max24534), 
LSub76501 = subtract_layer(Con1037,Max24534, Sub76501), 
exec_layers([LGlo49209,LRes6625,LRes59403,LRes45257,LGlo66654,LRes20128,LRes67358,LZer5761,LCon1037,LDot27536,LRes74764,LRes86608,LZer10383,LCon29882,LSub49663,LMax24534,LSub76501],["Glo49209","Res6625","Res59403","Res45257","Glo66654","Res20128","Res67358","Zer5761","Con1037","Dot27536","Res74764","Res86608","Zer10383","Con29882","Sub49663","Max24534","Sub76501"],Sub76501,"Sub76501")

Actual (Unparsed): [[[[0.0000000, 0.2443000, -0.0640000], [-0.5324000, -0.0315000, 0.8359000], [0.0000000, -0.4417000, -0.4098000]], [[-0.2024000, -0.2865000, 0.1886000], [0.0000000, -0.2036000, 0.0540000], [0.0000000, -0.1015000, -0.7166000]], [[0.0000000, -0.3359000, -0.3217000], [0.0000000, -0.1800000, 0.3775000], [0.9447750, -0.5339000, 0.8169000]]]]

Expected (Unparsed): [[[[0,0.24429999999999996,-0.064],[-0.5324,-0.03149999999999997,0.8359],[0,-0.44170000000000004,-0.40980000000000005]],[[-0.20240000000000002,-0.2865,0.1886],[0,-0.20360000000000006,0.05400000000000002],[0,-0.10150000000000003,-0.7166]],[[0,-0.3359,-0.3217],[0,-0.17999999999999994,0.37749999999999995],[0.9447749999999999,-0.5339,0.8169]]]]

Actual:   [[[[0, 0.2443, -0.064], [-0.5324, -0.0315, 0.8359], [0, -0.4417, -0.4098]], [[-0.2024, -0.2865, 0.1886], [0, -0.2036, 0.054], [0, -0.1015, -0.7166]], [[0, -0.3359, -0.3217], [0, -0.18, 0.3775], [0.9448, -0.5339, 0.8169]]]]

Expected: [[[[0, 0.2443, -0.064], [-0.5324, -0.0314, 0.8359], [0, -0.4417, -0.4098]], [[-0.2024, -0.2865, 0.1886], [0, -0.2036, 0.0541], [0, -0.1015, -0.7166]], [[0, -0.3359, -0.3217], [0, -0.1799, 0.3775], [0.9448, -0.5339, 0.8169]]]]