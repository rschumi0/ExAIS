import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Cro86466 = tf.keras.layers.Input(shape=([2, 1]))
in0Con38141 = tf.keras.layers.Input(shape=([1, 1, 1]))
in0Max56128 = tf.keras.layers.Input(shape=([1, 2, 1]))
in1Max56128 = tf.keras.layers.Input(shape=([1, 2, 1]))
in0Min42090 = tf.keras.layers.Input(shape=([1, 2, 2]))
in1Min42090 = tf.keras.layers.Input(shape=([1, 2, 2]))

Cro86466 = keras.layers.Cropping1D(cropping=((0, 1)), name = 'Cro86466', )(in0Cro86466)
Res19055 = keras.layers.Reshape((1, 1, 1), name = 'Res19055', )(Cro86466)
Con38141 = keras.layers.Concatenate(axis=3, name = 'Con38141', )([Res19055,in0Con38141])
Max56128 = keras.layers.Maximum(name = 'Max56128', )([in0Max56128,in1Max56128])
Res94095 = keras.layers.Reshape((1, 2, 1, 1), name = 'Res94095', )(Max56128)
Glo5580 = keras.layers.GlobalMaxPool3D(name = 'Glo5580', )(Res94095)
Bat7527 = keras.layers.BatchNormalization(axis=1, epsilon=0.442119476657455,  name = 'Bat7527', )(Glo5580)
Res3064 = keras.layers.Reshape((1, 1), name = 'Res3064', )(Bat7527)
Res64167 = keras.layers.Reshape((1, 1, 1), name = 'Res64167', )(Res3064)
Con11330 = keras.layers.Conv2D(2, (1, 1),strides=(12, 1), padding='same', dilation_rate=(1, 1), name = 'Con11330', )(Res64167)
Add80762 = keras.layers.Add(name = 'Add80762', )([Con38141,Con11330])
Zer75097 = keras.layers.ZeroPadding2D(padding=((0, 0), (1, 0)), name = 'Zer75097', )(Add80762)
Min42090 = keras.layers.Minimum(name = 'Min42090', )([in0Min42090,in1Min42090])
Bat75077 = keras.layers.BatchNormalization(axis=2, epsilon=0.7411989001113403,  name = 'Bat75077', )(Min42090)
Sub34450 = keras.layers.Subtract(name = 'Sub34450', )([Zer75097,Bat75077])
model = tf.keras.models.Model(inputs=[in0Cro86466,in0Con38141,in0Max56128,in1Max56128,in0Min42090,in1Min42090], outputs=Sub34450)
w = model.get_layer('Bat7527').get_weights() 
w[0] = np.array([0.662])
w[1] = np.array([0.7637])
w[2] = np.array([0.5625])
w[3] = np.array([0.7853])
model.get_layer('Bat7527').set_weights(w) 
w = model.get_layer('Con11330').get_weights() 
w[0] = np.array([[[[0.2641, 0.1367]]]])
w[1] = np.array([0, 0])
model.get_layer('Con11330').set_weights(w) 
w = model.get_layer('Bat75077').get_weights() 
w[0] = np.array([0.2175, 0.5754])
w[1] = np.array([0.2037, 0.6756])
w[2] = np.array([0.2683, 0.0968])
w[3] = np.array([0.4987, 0.6394])
model.get_layer('Bat75077').set_weights(w) 
in0Cro86466 = tf.constant([[[1.7266], [1.2307]]])
in0Con38141 = tf.constant([[[[0.7529]]]])
in0Max56128 = tf.constant([[[[0.0319], [0.9828]]]])
in1Max56128 = tf.constant([[[[0.0252], [0.9497]]]])
in0Min42090 = tf.constant([[[[0.7503, 0.4284], [0.3433, 0.343]]]])
in1Min42090 = tf.constant([[[[0.2734, 0.6554], [0.3065, 0.964]]]])
print (np.array2string(model.predict([in0Cro86466,in0Con38141,in0Max56128,in1Max56128,in0Min42090,in1Min42090],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Sub34450.png')

LCro86466 = cropping1D_layer([[[1.7266], [1.2307]]], 0, 1, Cro86466), 
LRes19055 = reshape_layer(Cro86466, [1, 1, 1], Res19055), 
LCon38141 = concatenate_layer([Res19055,[[[[0.7529]]]]], 3, Con38141), 
LMax56128 = maximum_layer([[[[[0.0319], [0.9828]]]], [[[[0.0252], [0.9497]]]]], Max56128), 
LRes94095 = reshape_layer(Max56128, [1, 2, 1, 1], Res94095), 
LGlo5580 = global_max_pool3D_layer(Res94095, Glo5580), 
LBat7527 = batch_normalization_layer(Glo5580, 1, 0.442119476657455, [0.662], [0.7637], [0.5625], [0.7853], Bat7527), 
LRes3064 = reshape_layer(Bat7527, [1, 1], Res3064), 
LRes64167 = reshape_layer(Res3064, [1, 1, 1], Res64167), 
LCon11330 = conv2D_layer(Res64167, 1, 1,[[[[0.2641, 0.1367]]]],[0, 0], 12, 1, true, 1, 1, Con11330), 
LAdd80762 = add_layer([Con38141,Con11330], Add80762), 
LZer75097 = zero_padding2D_layer(Add80762, 0, 0, 1, 0, Zer75097), 
LMin42090 = minimum_layer([[[[[0.7503, 0.4284], [0.3433, 0.343]]]], [[[[0.2734, 0.6554], [0.3065, 0.964]]]]], Min42090), 
LBat75077 = batch_normalization_layer(Min42090, 2, 0.7411989001113403, [0.2175, 0.5754], [0.2037, 0.6756], [0.2683, 0.0968], [0.4987, 0.6394], Bat75077), 
LSub34450 = subtract_layer(Zer75097,Bat75077, Sub34450), 
exec_layers([LCro86466,LRes19055,LCon38141,LMax56128,LRes94095,LGlo5580,LBat7527,LRes3064,LRes64167,LCon11330,LAdd80762,LZer75097,LMin42090,LBat75077,LSub34450],["Cro86466","Res19055","Con38141","Max56128","Res94095","Glo5580","Bat7527","Res3064","Res64167","Con11330","Add80762","Zer75097","Min42090","Bat75077","Sub34450"],Sub34450,"Sub34450")

Actual (Unparsed): [[[[-0.2046962, -0.2349721], [1.2163286, 0.0954632]]]]

Expected (Unparsed): [[[[-0.2046961765174095,-0.2349721294975027],[1.2163284983845781,0.095463218565501]]]]

Actual:   [[[[-0.2046, -0.2349], [1.2164, 0.0955]]]]

Expected: [[[[-0.2046, -0.2349], [1.2164, 0.0955]]]]