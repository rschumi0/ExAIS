import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Max97703 = tf.keras.layers.Input(shape=([2, 2]))
in1Max97703 = tf.keras.layers.Input(shape=([2, 2]))
in0Con10245 = tf.keras.layers.Input(shape=([3, 3, 2]))
in0Sub64600 = tf.keras.layers.Input(shape=([3, 3, 3]))
in1Sub64600 = tf.keras.layers.Input(shape=([3, 3, 3]))

Max97703 = keras.layers.Maximum(name = 'Max97703', )([in0Max97703,in1Max97703])
Res30164 = keras.layers.Reshape((2, 2, 1), name = 'Res30164', )(Max97703)
Glo1881 = keras.layers.GlobalAveragePooling2D(name = 'Glo1881', )(Res30164)
Res61153 = keras.layers.Reshape((1, 1), name = 'Res61153', )(Glo1881)
Res15307 = keras.layers.Reshape((1, 1, 1), name = 'Res15307', )(Res61153)
Zer19917 = keras.layers.ZeroPadding2D(padding=((2, 0), (2, 0)), name = 'Zer19917', )(Res15307)
Con10245 = keras.layers.Concatenate(axis=3, name = 'Con10245', )([Zer19917,in0Con10245])
Sub64600 = keras.layers.Subtract(name = 'Sub64600', )([in0Sub64600,in1Sub64600])
Max4455 = keras.layers.Maximum(name = 'Max4455', )([Con10245,Sub64600])
model = tf.keras.models.Model(inputs=[in0Max97703,in1Max97703,in0Con10245,in0Sub64600,in1Sub64600], outputs=Max4455)
in0Max97703 = tf.constant([[[0.3244, 0.4074], [0.092, 0.0504]]])
in1Max97703 = tf.constant([[[0.2015, 0.9251], [0.887, 0.5503]]])
in0Con10245 = tf.constant([[[[0.8682, 0.6027], [0.368, 0.4183], [0.1607, 0.703]], [[0.8394, 0.5012], [0.9501, 0.4852], [0.6101, 0.6952]], [[0.8521, 0.8436], [0.1032, 0.5504], [0.672, 0.6794]]]])
in0Sub64600 = tf.constant([[[[0.3111, 0.7299, 0.8087], [0.1594, 0.1291, 0.9694], [0.3949, 0.0739, 0.1171]], [[0.5184, 0.0867, 0.6585], [0.1905, 0.2233, 0.943], [0.9671, 0.7069, 0.2403]], [[0.494, 0.0334, 0.8429], [0.712, 0.4001, 0.1499], [0.458, 0.4176, 0.2037]]]])
in1Sub64600 = tf.constant([[[[0.7598, 0.804, 0.7077], [0.6095, 0.7773, 0.7243], [0.9861, 0.4086, 0.1168]], [[0.3146, 0.2378, 0.3754], [0.9693, 0.3625, 0.6189], [0.2083, 0.8885, 0.2731]], [[0.9204, 0.8599, 0.0708], [0.5996, 0.8005, 0.4083], [0.3006, 0.7436, 0.0355]]]])
print (np.array2string(model.predict([in0Max97703,in1Max97703,in0Con10245,in0Sub64600,in1Sub64600],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Max4455.png')

LMax97703 = maximum_layer([[[[0.3244, 0.4074], [0.092, 0.0504]]], [[[0.2015, 0.9251], [0.887, 0.5503]]]], Max97703), 
LRes30164 = reshape_layer(Max97703, [2, 2, 1], Res30164), 
LGlo1881 = global_average_pooling2D_layer(Res30164, Glo1881), 
LRes61153 = reshape_layer(Glo1881, [1, 1], Res61153), 
LRes15307 = reshape_layer(Res61153, [1, 1, 1], Res15307), 
LZer19917 = zero_padding2D_layer(Res15307, 2, 0, 2, 0, Zer19917), 
LCon10245 = concatenate_layer([Zer19917,[[[[0.8682, 0.6027], [0.368, 0.4183], [0.1607, 0.703]], [[0.8394, 0.5012], [0.9501, 0.4852], [0.6101, 0.6952]], [[0.8521, 0.8436], [0.1032, 0.5504], [0.672, 0.6794]]]]], 3, Con10245), 
LSub64600 = subtract_layer([[[[0.3111, 0.7299, 0.8087], [0.1594, 0.1291, 0.9694], [0.3949, 0.0739, 0.1171]], [[0.5184, 0.0867, 0.6585], [0.1905, 0.2233, 0.943], [0.9671, 0.7069, 0.2403]], [[0.494, 0.0334, 0.8429], [0.712, 0.4001, 0.1499], [0.458, 0.4176, 0.2037]]]], [[[[0.7598, 0.804, 0.7077], [0.6095, 0.7773, 0.7243], [0.9861, 0.4086, 0.1168]], [[0.3146, 0.2378, 0.3754], [0.9693, 0.3625, 0.6189], [0.2083, 0.8885, 0.2731]], [[0.9204, 0.8599, 0.0708], [0.5996, 0.8005, 0.4083], [0.3006, 0.7436, 0.0355]]]], Sub64600), 
LMax4455 = maximum_layer([Con10245,Sub64600], Max4455), 
exec_layers([LMax97703,LRes30164,LGlo1881,LRes61153,LRes15307,LZer19917,LCon10245,LSub64600,LMax4455],["Max97703","Res30164","Glo1881","Res61153","Res15307","Zer19917","Con10245","Sub64600","Max4455"],Max4455,"Max4455")

Actual (Unparsed): [[[[0.0000000, 0.8682000, 0.6027000], [0.0000000, 0.3680000, 0.4183000], [0.0000000, 0.1607000, 0.7030000]], [[0.2038000, 0.8394000, 0.5012000], [0.0000000, 0.9501000, 0.4852000], [0.7588000, 0.6101000, 0.6952000]], [[0.0000000, 0.8521000, 0.8436000], [0.1124000, 0.1032000, 0.5504000], [0.6717000, 0.6720000, 0.6794000]]]]

Expected (Unparsed): [[[[0,0.8682,0.6027],[0,0.368,0.4183],[0,0.1607,0.703]],[[0.20379999999999998,0.8394,0.5012],[0,0.9501,0.4852],[0.7587999999999999,0.6101,0.6952]],[[0,0.8521,0.8436],[0.11239999999999994,0.1032,0.5504],[0.6717,0.672,0.6794]]]]

Actual:   [[[[0, 0.8682, 0.6027], [0, 0.368, 0.4183], [0, 0.1607, 0.703]], [[0.2038, 0.8394, 0.5012], [0, 0.9501, 0.4852], [0.7588, 0.6101, 0.6952]], [[0, 0.8521, 0.8436], [0.1124, 0.1032, 0.5504], [0.6717, 0.672, 0.6794]]]]

Expected: [[[[0, 0.8682, 0.6027], [0, 0.368, 0.4183], [0, 0.1607, 0.703]], [[0.2038, 0.8394, 0.5012], [0, 0.9501, 0.4852], [0.7588, 0.6101, 0.6952]], [[0, 0.8521, 0.8436], [0.1124, 0.1032, 0.5504], [0.6717, 0.672, 0.6794]]]]