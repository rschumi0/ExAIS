import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Mul30955 = tf.keras.layers.Input(shape=([1, 1]))
in1Mul30955 = tf.keras.layers.Input(shape=([1, 1]))

Mul30955 = keras.layers.Multiply(name = 'Mul30955', )([in0Mul30955,in1Mul30955])
Res67281 = keras.layers.Reshape((1, 1, 1), name = 'Res67281', )(Mul30955)
Con70630 = keras.layers.Conv2D(4, (1, 1),strides=(1, 1), padding='valid', dilation_rate=(1, 1), name = 'Con70630', )(Res67281)
model = tf.keras.models.Model(inputs=[in0Mul30955,in1Mul30955], outputs=Con70630)
w = model.get_layer('Con70630').get_weights() 
w[0] = np.array([[[[0.1917, 0.5444, 0.998, 0.7939]]]])
w[1] = np.array([0, 0, 0, 0])
model.get_layer('Con70630').set_weights(w) 
in0Mul30955 = tf.constant([[[0.6406]]])
in1Mul30955 = tf.constant([[[0.0578]]])
print (np.array2string(model.predict([in0Mul30955,in1Mul30955],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Con70630.png')

LMul30955 = multiply_layer([[[[0.6406]]], [[[0.0578]]]], Mul30955), 
LRes67281 = reshape_layer(Mul30955, [1, 1, 1], Res67281), 
LCon70630 = conv2D_layer(Res67281, 1, 1,[[[[0.1917, 0.5444, 0.998, 0.7939]]]],[0, 0, 0, 0], 1, 1, false, 1, 1, Con70630), 
exec_layers([LMul30955,LRes67281,LCon70630],["Mul30955","Res67281","Con70630"],Con70630,"Con70630")

Actual (Unparsed): [[[[0.0070980, 0.0201573, 0.0369526, 0.0293955]]]]

Expected (Unparsed): [[[[0.007098014555999999,0.020157324591999995,0.03695262663999999,0.029395481251999995]]]]

Actual:   [[[[0.0071, 0.0202, 0.037, 0.0294]]]]

Expected: [[[[0.0071, 0.0202, 0.037, 0.0294]]]]