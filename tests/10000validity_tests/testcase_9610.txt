import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Mul56312 = tf.keras.layers.Input(shape=([1, 2, 2]))
in1Mul56312 = tf.keras.layers.Input(shape=([1, 2, 2]))
in0Mul24988 = tf.keras.layers.Input(shape=([2, 1]))
in1Mul24988 = tf.keras.layers.Input(shape=([2, 1]))
in0Con2104 = tf.keras.layers.Input(shape=([2, 3]))
in0Cro40956 = tf.keras.layers.Input(shape=([3, 1]))
in0Con96573 = tf.keras.layers.Input(shape=([2, 3]))

Mul56312 = keras.layers.Multiply(name = 'Mul56312', )([in0Mul56312,in1Mul56312])
Res42189 = keras.layers.Reshape((1, 4), name = 'Res42189', )(Mul56312)
Zer4660 = keras.layers.ZeroPadding1D(padding=((1, 1)), name = 'Zer4660', )(Res42189)
Cro27677 = keras.layers.Cropping1D(cropping=((1, 0)), name = 'Cro27677', )(Zer4660)
Mul24988 = keras.layers.Multiply(name = 'Mul24988', )([in0Mul24988,in1Mul24988])
Con2104 = keras.layers.Concatenate(axis=2, name = 'Con2104', )([Mul24988,in0Con2104])
Min83586 = keras.layers.Minimum(name = 'Min83586', )([Cro27677,Con2104])
Cro40956 = keras.layers.Cropping1D(cropping=((0, 1)), name = 'Cro40956', )(in0Cro40956)
Con96573 = keras.layers.Concatenate(axis=2, name = 'Con96573', )([Cro40956,in0Con96573])
Min82697 = keras.layers.Minimum(name = 'Min82697', )([Min83586,Con96573])
model = tf.keras.models.Model(inputs=[in0Mul56312,in1Mul56312,in0Mul24988,in1Mul24988,in0Con2104,in0Cro40956,in0Con96573], outputs=Min82697)
in0Mul56312 = tf.constant([[[[0.7445, 0.6002], [0.3361, 0.2731]]]])
in1Mul56312 = tf.constant([[[[0.403, 0.2397], [0.9272, 0.8168]]]])
in0Mul24988 = tf.constant([[[0.7157], [0.473]]])
in1Mul24988 = tf.constant([[[0.0116], [0.902]]])
in0Con2104 = tf.constant([[[0.766, 0.0093, 0.7141], [0.9324, 0.3247, 0.902]]])
in0Cro40956 = tf.constant([[[1.2716], [1.9854], [1.133]]])
in0Con96573 = tf.constant([[[0.3509, 0.5333, 0.4047], [0.1603, 0.8856, 0.0902]]])
print (np.array2string(model.predict([in0Mul56312,in1Mul56312,in0Mul24988,in1Mul24988,in0Con2104,in0Cro40956,in0Con96573],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Min82697.png')

LMul56312 = multiply_layer([[[[[0.7445, 0.6002], [0.3361, 0.2731]]]], [[[[0.403, 0.2397], [0.9272, 0.8168]]]]], Mul56312), 
LRes42189 = reshape_layer(Mul56312, [1, 4], Res42189), 
LZer4660 = zero_padding1D_layer(Res42189, 1, 1, Zer4660), 
LCro27677 = cropping1D_layer(Zer4660, 1, 0, Cro27677), 
LMul24988 = multiply_layer([[[[0.7157], [0.473]]], [[[0.0116], [0.902]]]], Mul24988), 
LCon2104 = concatenate_layer([Mul24988,[[[0.766, 0.0093, 0.7141], [0.9324, 0.3247, 0.902]]]], 2, Con2104), 
LMin83586 = minimum_layer([Cro27677,Con2104], Min83586), 
LCro40956 = cropping1D_layer([[[1.2716], [1.9854], [1.133]]], 0, 1, Cro40956), 
LCon96573 = concatenate_layer([Cro40956,[[[0.3509, 0.5333, 0.4047], [0.1603, 0.8856, 0.0902]]]], 2, Con96573), 
LMin82697 = minimum_layer([Min83586,Con96573], Min82697), 
exec_layers([LMul56312,LRes42189,LZer4660,LCro27677,LMul24988,LCon2104,LMin83586,LCro40956,LCon96573,LMin82697],["Mul56312","Res42189","Zer4660","Cro27677","Mul24988","Con2104","Min83586","Cro40956","Con96573","Min82697"],Min82697,"Min82697")

Actual (Unparsed): [[[0.0083021, 0.1438679, 0.0093000, 0.2230681], [0.0000000, 0.0000000, 0.0000000, 0.0000000]]]

Expected (Unparsed): [[[0.00830212,0.14386794,0.0093,0.22306808],[0,0,0,0]]]

Actual:   [[[0.0084, 0.1439, 0.0093, 0.2231], [0, 0, 0, 0]]]

Expected: [[[0.0084, 0.1439, 0.0093, 0.2231], [0, 0, 0, 0]]]