import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Ave66040 = tf.keras.layers.Input(shape=([2, 1, 2]))
in1Ave66040 = tf.keras.layers.Input(shape=([2, 1, 2]))

Ave66040 = keras.layers.Average(name = 'Ave66040', )([in0Ave66040,in1Ave66040])
Res82310 = keras.layers.Reshape((2, 2), name = 'Res82310', )(Ave66040)
Sim90695 = keras.layers.SimpleRNN(1,name = 'Sim90695', )(Res82310)
model = tf.keras.models.Model(inputs=[in0Ave66040,in1Ave66040], outputs=Sim90695)
w = model.get_layer('Sim90695').get_weights() 
w[0] = np.array([[1], [10]])
w[1] = np.array([[6]])
w[2] = np.array([7])
model.get_layer('Sim90695').set_weights(w) 
in0Ave66040 = tf.constant([[[[0.6626, 0.0714]], [[0.1138, 0.5808]]]])
in1Ave66040 = tf.constant([[[[0.7, 0.8172]], [[0.5659, 0.2422]]]])
print (np.array2string(model.predict([in0Ave66040,in1Ave66040],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Sim90695.png')

LAve66040 = average_layer([[[[[0.6626, 0.0714]], [[0.1138, 0.5808]]]], [[[[0.7, 0.8172]], [[0.5659, 0.2422]]]]], Ave66040), 
LRes82310 = reshape_layer(Ave66040, [2, 2], Res82310), 
LSim90695 = simple_rnn_layer(Res82310,[[1], [10]],[[6]],[7], Sim90695), 
exec_layers([LAve66040,LRes82310,LSim90695],["Ave66040","Res82310","Sim90695"],Sim90695,"Sim90695")

Actual (Unparsed): [[1.0000000]]

Expected (Unparsed): [[0.9999999999999987]]

Actual:   [[1]]

Expected: [[1]]