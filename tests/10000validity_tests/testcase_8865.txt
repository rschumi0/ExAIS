import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Add39087 = tf.keras.layers.Input(shape=([1, 2, 2, 2]))
in1Add39087 = tf.keras.layers.Input(shape=([1, 2, 2, 2]))
in0Mas42815 = tf.keras.layers.Input(shape=([3, 3]))

Add39087 = keras.layers.Add(name = 'Add39087', )([in0Add39087,in1Add39087])
Res63486 = keras.layers.Reshape((1, 2, 4), name = 'Res63486', )(Add39087)
Res47031 = keras.layers.Reshape((1, 8), name = 'Res47031', )(Res63486)
Sep50140 = keras.layers.SeparableConv1D(3, (1),strides=(1), padding='same', name = 'Sep50140', )(Res47031)
Zer44128 = keras.layers.ZeroPadding1D(padding=((2, 0)), name = 'Zer44128', )(Sep50140)
Mas42815 = keras.layers.Masking(mask_value=2, name = 'Mas42815', )(in0Mas42815)
Mul46860 = keras.layers.Multiply(name = 'Mul46860', )([Zer44128,Mas42815])
model = tf.keras.models.Model(inputs=[in0Add39087,in1Add39087,in0Mas42815], outputs=Mul46860)
w = model.get_layer('Sep50140').get_weights() 
w[0] = np.array([[[0.4261], [0.0101], [0.9127], [0.3461], [0.2315], [0.1261], [0.7872], [0.9501]]])
w[1] = np.array([[[0.3279, 0.6721, 0.1728], [0.0896, 0.4251, 0.7847], [0.1385, 0.7431, 0.4995], [0.0109, 0.266, 0.4021], [0.1082, 0.0922, 0.8956], [0.904, 0.9489, 0.647], [0.454, 0.0063, 0.8614], [0.854, 0.3329, 0.6766]]])
w[2] = np.array([0, 0, 0])
model.get_layer('Sep50140').set_weights(w) 
in0Add39087 = tf.constant([[[[[0.2677, 0.0209], [0.3841, 0.0386]], [[0.9104, 0.7015], [0.4264, 0.5788]]]]])
in1Add39087 = tf.constant([[[[[0.6256, 0.1736], [0.2832, 0.0544]], [[0.6212, 0.7218], [0.6866, 0.1571]]]]])
in0Mas42815 = tf.constant([[[1.39, 1.8263, 1.107], [1.4892, 1.8036, 1.7873], [1.1059, 1.211, 1.4477]]])
print (np.array2string(model.predict([in0Add39087,in1Add39087,in0Mas42815],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Mul46860.png')

LAdd39087 = add_layer([[[[[[0.2677, 0.0209], [0.3841, 0.0386]], [[0.9104, 0.7015], [0.4264, 0.5788]]]]], [[[[[0.6256, 0.1736], [0.2832, 0.0544]], [[0.6212, 0.7218], [0.6866, 0.1571]]]]]], Add39087), 
LRes63486 = reshape_layer(Add39087, [1, 2, 4], Res63486), 
LRes47031 = reshape_layer(Res63486, [1, 8], Res47031), 
LSep50140 = separable_conv1D_layer(Res47031, 1,[[[[0.4261], [0.0101], [0.9127], [0.3461], [0.2315], [0.1261], [0.7872], [0.9501]]],[[[0.3279, 0.6721, 0.1728], [0.0896, 0.4251, 0.7847], [0.1385, 0.7431, 0.4995], [0.0109, 0.266, 0.4021], [0.1082, 0.0922, 0.8956], [0.904, 0.9489, 0.647], [0.454, 0.0063, 0.8614], [0.854, 0.3329, 0.6766]]]],[0, 0, 0], 1, true, Sep50140), 
LZer44128 = zero_padding1D_layer(Sep50140, 2, 0, Zer44128), 
LMas42815 = masking_layer([[[1.39, 1.8263, 1.107], [1.4892, 1.8036, 1.7873], [1.1059, 1.211, 1.4477]]], 2, Mas42815), 
LMul46860 = multiply_layer([Zer44128,Mas42815], Mul46860), 
exec_layers([LAdd39087,LRes63486,LRes47031,LSep50140,LZer44128,LMas42815,LMul46860],["Add39087","Res63486","Res47031","Sep50140","Zer44128","Mas42815","Mul46860"],Mul46860,"Mul46860")

Actual (Unparsed): [[[0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000], [1.5539823, 1.4036421, 2.9618925]]]

Expected (Unparsed): [[[0.0,0.0,0.0],[0.0,0.0,0.0],[1.553982218349691,1.4036421889894668,2.961892379984303]]]

Actual:   [[[0, 0, 0], [0, 0, 0], [1.554, 1.4037, 2.9619]]]

Expected: [[[0, 0, 0], [0, 0, 0], [1.554, 1.4037, 2.9619]]]