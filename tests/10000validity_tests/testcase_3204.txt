import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Ave2859 = tf.keras.layers.Input(shape=([2, 2]))
in1Ave2859 = tf.keras.layers.Input(shape=([2, 2]))

Ave2859 = keras.layers.Average(name = 'Ave2859', )([in0Ave2859,in1Ave2859])
Lea90644 = keras.layers.LeakyReLU(alpha=5.759799629631173, name = 'Lea90644', )(Ave2859)
Lea10240 = keras.layers.LeakyReLU(alpha=7.7818598470091604, name = 'Lea10240', )(Lea90644)
model = tf.keras.models.Model(inputs=[in0Ave2859,in1Ave2859], outputs=Lea10240)
in0Ave2859 = tf.constant([[[0.7995, 0.2782], [0.5543, 0.0945]]])
in1Ave2859 = tf.constant([[[0.9122, 0.9871], [0.2308, 0.3705]]])
print (np.array2string(model.predict([in0Ave2859,in1Ave2859],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Lea10240.png')

LAve2859 = average_layer([[[[0.7995, 0.2782], [0.5543, 0.0945]]], [[[0.9122, 0.9871], [0.2308, 0.3705]]]], Ave2859), 
LLea90644 = leaky_relu_layer(Ave2859, 5.759799629631173, Lea90644), 
LLea10240 = leaky_relu_layer(Lea90644, 7.7818598470091604, Lea10240), 
exec_layers([LAve2859,LLea90644,LLea10240],["Ave2859","Lea90644","Lea10240"],Lea10240,"Lea10240")

Actual (Unparsed): [[[0.8558500, 0.6326500], [0.3925500, 0.2325000]]]

Expected (Unparsed): [[[0.85585,0.6326499999999999],[0.39255,0.23249999999999998]]]

Actual:   [[[0.8559, 0.6327], [0.3926, 0.2325]]]

Expected: [[[0.8559, 0.6327], [0.3926, 0.2325]]]