import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Sim40683 = tf.keras.layers.Input(shape=([2, 1]))

Sim40683 = keras.layers.SimpleRNN(1,name = 'Sim40683', )(in0Sim40683)
Res86982 = keras.layers.Reshape((1, 1), name = 'Res86982', )(Sim40683)
Res67664 = keras.layers.Reshape((1, 1, 1), name = 'Res67664', )(Res86982)
Res11385 = keras.layers.Reshape((1, 1, 1, 1), name = 'Res11385', )(Res67664)
Cro40224 = keras.layers.Cropping3D(cropping=((0, 0), (0, 0), (0, 0)), name = 'Cro40224', )(Res11385)
Thr32509 = keras.layers.ThresholdedReLU(theta=6.7957710292243, name = 'Thr32509', )(Cro40224)
model = tf.keras.models.Model(inputs=[in0Sim40683], outputs=Thr32509)
w = model.get_layer('Sim40683').get_weights() 
w[0] = np.array([[3]])
w[1] = np.array([[9]])
w[2] = np.array([1])
model.get_layer('Sim40683').set_weights(w) 
in0Sim40683 = tf.constant([[[9], [3]]])
print (np.array2string(model.predict([in0Sim40683],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Thr32509.png')

LSim40683 = simple_rnn_layer([[[9], [3]]],[[3]],[[9]],[1], Sim40683), 
LRes86982 = reshape_layer(Sim40683, [1, 1], Res86982), 
LRes67664 = reshape_layer(Res86982, [1, 1, 1], Res67664), 
LRes11385 = reshape_layer(Res67664, [1, 1, 1, 1], Res11385), 
LCro40224 = cropping3D_layer(Res11385, 0, 0, 0, 0, 0, 0, Cro40224), 
LThr32509 = thresholded_relu_layer(Cro40224, 6.7957710292243, Thr32509), 
exec_layers([LSim40683,LRes86982,LRes67664,LRes11385,LCro40224,LThr32509],["Sim40683","Res86982","Res67664","Res11385","Cro40224","Thr32509"],Thr32509,"Thr32509")

Actual (Unparsed): [[[[[0.0000000]]]]]

Expected (Unparsed): [[[[[0]]]]]

Actual:   [[[[[0]]]]]

Expected: [[[[[0]]]]]