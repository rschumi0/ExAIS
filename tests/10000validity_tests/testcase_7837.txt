import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Ave63859 = tf.keras.layers.Input(shape=([2, 2, 2]))
in1Ave63859 = tf.keras.layers.Input(shape=([2, 2, 2]))
in0Glo21396 = tf.keras.layers.Input(shape=([2, 2, 2, 1]))
in0Con1724 = tf.keras.layers.Input(shape=([7]))
in0Sof67395 = tf.keras.layers.Input(shape=([2, 2]))
in0LST2116 = tf.keras.layers.Input(shape=([3, 3]))
in0Con26536 = tf.keras.layers.Input(shape=([2]))

Ave63859 = keras.layers.Average(name = 'Ave63859', )([in0Ave63859,in1Ave63859])
Res80945 = keras.layers.Reshape((2, 4), name = 'Res80945', )(Ave63859)
Fla42960 = keras.layers.Flatten(name = 'Fla42960', )(Res80945)
Glo21396 = keras.layers.GlobalAveragePooling3D(name = 'Glo21396', )(in0Glo21396)
Con1724 = keras.layers.Concatenate(axis=1, name = 'Con1724', )([Glo21396,in0Con1724])
Ave33721 = keras.layers.Average(name = 'Ave33721', )([Fla42960,Con1724])
Res93685 = keras.layers.Reshape((8, 1), name = 'Res93685', )(Ave33721)
Sof67395 = keras.layers.Softmax(axis=1, name = 'Sof67395', input_shape=(2, 2))(in0Sof67395)
Fla47812 = keras.layers.Flatten(name = 'Fla47812', )(Sof67395)
LST2116 = keras.layers.LSTM(2,recurrent_activation='sigmoid', name = 'LST2116', )(in0LST2116)
Con26536 = keras.layers.Concatenate(axis=1, name = 'Con26536', )([LST2116,in0Con26536])
Min99995 = keras.layers.Minimum(name = 'Min99995', )([Fla47812,Con26536])
Res63567 = keras.layers.Reshape((4, 1), name = 'Res63567', )(Min99995)
Zer18122 = keras.layers.ZeroPadding1D(padding=((1, 1)), name = 'Zer18122', )(Res63567)
Zer54704 = keras.layers.ZeroPadding1D(padding=((2, 0)), name = 'Zer54704', )(Zer18122)
Ave19397 = keras.layers.Average(name = 'Ave19397', )([Res93685,Zer54704])
model = tf.keras.models.Model(inputs=[in0Ave63859,in1Ave63859,in0Glo21396,in0Con1724,in0Sof67395,in0LST2116,in0Con26536], outputs=Ave19397)
w = model.get_layer('LST2116').get_weights() 
w[0] = np.array([[5, 9, 8, 5, 1, 4, 7, 4], [9, 7, 10, 4, 3, 6, 5, 1], [1, 6, 10, 7, 6, 4, 7, 10]])
w[1] = np.array([[9, 5, 8, 2, 4, 4, 3, 3], [7, 7, 4, 7, 5, 4, 10, 8]])
w[2] = np.array([5, 4, 3, 7, 10, 2, 3, 4])
model.get_layer('LST2116').set_weights(w) 
in0Ave63859 = tf.constant([[[[0.4246, 0.7616], [0.9207, 0.6393]], [[0.1711, 0.2008], [0.8225, 0.1592]]]])
in1Ave63859 = tf.constant([[[[0.0593, 0.3164], [0.4811, 0.8814]], [[0.7729, 0.1098], [0.2124, 0.9035]]]])
in0Glo21396 = tf.constant([[[[[1.8059], [1.7549]], [[1.5997], [1.3234]]], [[[1.7909], [1.4386]], [[1.7269], [1.2219]]]]])
in0Con1724 = tf.constant([[0.9897, 0.3446, 0.572, 0.3311, 0.2055, 0.9325, 0.0112]])
in0Sof67395 = tf.constant([[[0.8536, 0.7562], [0.4817, 0.6562]]])
in0LST2116 = tf.constant([[[5, 5, 8], [3, 10, 2], [2, 7, 9]]])
in0Con26536 = tf.constant([[0.9866, 0.2516]])
print (np.array2string(model.predict([in0Ave63859,in1Ave63859,in0Glo21396,in0Con1724,in0Sof67395,in0LST2116,in0Con26536],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Ave19397.png')

LAve63859 = average_layer([[[[[0.4246, 0.7616], [0.9207, 0.6393]], [[0.1711, 0.2008], [0.8225, 0.1592]]]], [[[[0.0593, 0.3164], [0.4811, 0.8814]], [[0.7729, 0.1098], [0.2124, 0.9035]]]]], Ave63859), 
LRes80945 = reshape_layer(Ave63859, [2, 4], Res80945), 
LFla42960 = flatten_layer(Res80945, Fla42960), 
LGlo21396 = global_average_pooling3D_layer([[[[[1.8059], [1.7549]], [[1.5997], [1.3234]]], [[[1.7909], [1.4386]], [[1.7269], [1.2219]]]]], Glo21396), 
LCon1724 = concatenate_layer([Glo21396,[[0.9897, 0.3446, 0.572, 0.3311, 0.2055, 0.9325, 0.0112]]], 1, Con1724), 
LAve33721 = average_layer([Fla42960,Con1724], Ave33721), 
LRes93685 = reshape_layer(Ave33721, [8, 1], Res93685), 
LSof67395 = softmax_layer([[[0.8536, 0.7562], [0.4817, 0.6562]]], 1, Sof67395), 
LFla47812 = flatten_layer(Sof67395, Fla47812), 
LLST2116 = lstm_layer([[[5, 5, 8], [3, 10, 2], [2, 7, 9]]],[[5, 9, 8, 5, 1, 4, 7, 4], [9, 7, 10, 4, 3, 6, 5, 1], [1, 6, 10, 7, 6, 4, 7, 10]],[[9, 5, 8, 2, 4, 4, 3, 3], [7, 7, 4, 7, 5, 4, 10, 8]],[5, 4, 3, 7, 10, 2, 3, 4], LST2116), 
LCon26536 = concatenate_layer([LST2116,[[0.9866, 0.2516]]], 1, Con26536), 
LMin99995 = minimum_layer([Fla47812,Con26536], Min99995), 
LRes63567 = reshape_layer(Min99995, [4, 1], Res63567), 
LZer18122 = zero_padding1D_layer(Res63567, 1, 1, Zer18122), 
LZer54704 = zero_padding1D_layer(Zer18122, 2, 0, Zer54704), 
LAve19397 = average_layer([Res93685,Zer54704], Ave19397), 
exec_layers([LAve63859,LRes80945,LFla42960,LGlo21396,LCon1724,LAve33721,LRes93685,LSof67395,LFla47812,LLST2116,LCon26536,LMin99995,LRes63567,LZer18122,LZer54704,LAve19397],["Ave63859","Res80945","Fla42960","Glo21396","Con1724","Ave33721","Res93685","Sof67395","Fla47812","LST2116","Con26536","Min99995","Res63567","Zer18122","Zer54704","Ave19397"],Ave19397,"Ave19397")

Actual (Unparsed): [[[0.4561812], [0.3821750], [0.2613750], [0.6290465], [0.4632646], [0.2942410], [0.4882875], [0.1356375]]]

Expected (Unparsed): [[[0.45618125],[0.38217500000000004],[0.261375],[0.6290465027568051],[0.46326459373947004],[0.29424099724319497],[0.4882875],[0.1356375]]]

Actual:   [[[0.4562], [0.3822], [0.2614], [0.6291], [0.4633], [0.2943], [0.4883], [0.1357]]]

Expected: [[[0.4562], [0.3822], [0.2614], [0.6291], [0.4633], [0.2943], [0.4883], [0.1357]]]