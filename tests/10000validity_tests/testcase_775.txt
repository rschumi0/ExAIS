import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Sub69564 = tf.keras.layers.Input(shape=([3, 2, 3, 3]))
in1Sub69564 = tf.keras.layers.Input(shape=([3, 2, 3, 3]))
in0Ave58790 = tf.keras.layers.Input(shape=([1, 1]))
in1Ave58790 = tf.keras.layers.Input(shape=([1, 1]))
in0Con93001 = tf.keras.layers.Input(shape=([3, 17]))

Sub69564 = keras.layers.Subtract(name = 'Sub69564', )([in0Sub69564,in1Sub69564])
Res31041 = keras.layers.Reshape((3, 2, 9), name = 'Res31041', )(Sub69564)
Res84512 = keras.layers.Reshape((3, 18), name = 'Res84512', )(Res31041)
Ave58790 = keras.layers.Average(name = 'Ave58790', )([in0Ave58790,in1Ave58790])
Zer60239 = keras.layers.ZeroPadding1D(padding=((2, 0)), name = 'Zer60239', )(Ave58790)
Con93001 = keras.layers.Concatenate(axis=2, name = 'Con93001', )([Zer60239,in0Con93001])
Add32434 = keras.layers.Add(name = 'Add32434', )([Res84512,Con93001])
model = tf.keras.models.Model(inputs=[in0Sub69564,in1Sub69564,in0Ave58790,in1Ave58790,in0Con93001], outputs=Add32434)
in0Sub69564 = tf.constant([[[[[0.7606, 0.641, 0.1824], [0.0777, 0.1794, 0.7061], [0.7462, 0.966, 0.8709]], [[0.8223, 0.6084, 0.3377], [0.3198, 0.4524, 0.6052], [0.9307, 0.3303, 0.7658]]], [[[0.4872, 0.0119, 0.9275], [0.4711, 0.9096, 0.6242], [0.0437, 0.9839, 0.4239]], [[0.8104, 0.2781, 0.0872], [0.3316, 0.3595, 0.7013], [0.6178, 0.649, 0.8288]]], [[[0.0209, 0.0023, 0.9771], [0.2075, 0.4151, 0.6552], [0.7661, 0.6106, 0.0022]], [[0.3531, 0.3277, 0.8171], [0.2173, 0.7018, 0.9539], [0.2994, 0.3352, 0.7248]]]]])
in1Sub69564 = tf.constant([[[[[0.6755, 0.6314, 0.0035], [0.4204, 0.515, 0.807], [0.923, 0.856, 0.5722]], [[0.0521, 0.7514, 1], [0.9173, 0.1738, 0.8943], [0.0259, 0.0611, 0.3514]]], [[[0.0978, 0.2691, 0.7212], [0.5462, 0.6552, 0.3598], [0.711, 0.3842, 0.6063]], [[0.3167, 0.0384, 0.4472], [0.5174, 0.5425, 0.7234], [0.3989, 0.3069, 0.7322]]], [[[0.4162, 0.2663, 0.1074], [0.6775, 0.63, 0.5], [0.3396, 0.8309, 0.2915]], [[0.1443, 0.0158, 0.2802], [0.3523, 0.5617, 0.7854], [0.4748, 0.4104, 0.6785]]]]])
in0Ave58790 = tf.constant([[[0.3918]]])
in1Ave58790 = tf.constant([[[0.644]]])
in0Con93001 = tf.constant([[[0.0598, 0.9728, 0.5552, 0.7602, 0.3385, 0.2416, 0.0715, 0.0959, 0.6952, 0.6596, 0.1204, 0.362, 0.0779, 0.3081, 0.4885, 0.586, 0.4764], [0.4346, 0.0338, 0.2599, 0.6773, 0.0663, 0.2922, 0.9561, 0.8292, 0.4162, 0.9695, 0.473, 0.176, 0.9442, 0.345, 0.8117, 0.2245, 0.6976], [0.7889, 0.9351, 0.3007, 0.342, 0.045, 0.4416, 0.9186, 0.1179, 0.6706, 0.9969, 0.637, 0.8079, 0.0373, 0.6108, 0.1116, 0.6862, 0.5985]]])
print (np.array2string(model.predict([in0Sub69564,in1Sub69564,in0Ave58790,in1Ave58790,in0Con93001],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Add32434.png')

LSub69564 = subtract_layer([[[[[0.7606, 0.641, 0.1824], [0.0777, 0.1794, 0.7061], [0.7462, 0.966, 0.8709]], [[0.8223, 0.6084, 0.3377], [0.3198, 0.4524, 0.6052], [0.9307, 0.3303, 0.7658]]], [[[0.4872, 0.0119, 0.9275], [0.4711, 0.9096, 0.6242], [0.0437, 0.9839, 0.4239]], [[0.8104, 0.2781, 0.0872], [0.3316, 0.3595, 0.7013], [0.6178, 0.649, 0.8288]]], [[[0.0209, 0.0023, 0.9771], [0.2075, 0.4151, 0.6552], [0.7661, 0.6106, 0.0022]], [[0.3531, 0.3277, 0.8171], [0.2173, 0.7018, 0.9539], [0.2994, 0.3352, 0.7248]]]]], [[[[[0.6755, 0.6314, 0.0035], [0.4204, 0.515, 0.807], [0.923, 0.856, 0.5722]], [[0.0521, 0.7514, 1], [0.9173, 0.1738, 0.8943], [0.0259, 0.0611, 0.3514]]], [[[0.0978, 0.2691, 0.7212], [0.5462, 0.6552, 0.3598], [0.711, 0.3842, 0.6063]], [[0.3167, 0.0384, 0.4472], [0.5174, 0.5425, 0.7234], [0.3989, 0.3069, 0.7322]]], [[[0.4162, 0.2663, 0.1074], [0.6775, 0.63, 0.5], [0.3396, 0.8309, 0.2915]], [[0.1443, 0.0158, 0.2802], [0.3523, 0.5617, 0.7854], [0.4748, 0.4104, 0.6785]]]]], Sub69564), 
LRes31041 = reshape_layer(Sub69564, [3, 2, 9], Res31041), 
LRes84512 = reshape_layer(Res31041, [3, 18], Res84512), 
LAve58790 = average_layer([[[[0.3918]]], [[[0.644]]]], Ave58790), 
LZer60239 = zero_padding1D_layer(Ave58790, 2, 0, Zer60239), 
LCon93001 = concatenate_layer([Zer60239,[[[0.0598, 0.9728, 0.5552, 0.7602, 0.3385, 0.2416, 0.0715, 0.0959, 0.6952, 0.6596, 0.1204, 0.362, 0.0779, 0.3081, 0.4885, 0.586, 0.4764], [0.4346, 0.0338, 0.2599, 0.6773, 0.0663, 0.2922, 0.9561, 0.8292, 0.4162, 0.9695, 0.473, 0.176, 0.9442, 0.345, 0.8117, 0.2245, 0.6976], [0.7889, 0.9351, 0.3007, 0.342, 0.045, 0.4416, 0.9186, 0.1179, 0.6706, 0.9969, 0.637, 0.8079, 0.0373, 0.6108, 0.1116, 0.6862, 0.5985]]]], 2, Con93001), 
LAdd32434 = add_layer([Res84512,Con93001], Add32434), 
exec_layers([LSub69564,LRes31041,LRes84512,LAve58790,LZer60239,LCon93001,LAdd32434],["Sub69564","Res31041","Res84512","Ave58790","Zer60239","Con93001","Add32434"],Add32434,"Add32434")

Actual (Unparsed): [[[0.0851000, 0.0694000, 1.1517000, 0.2125000, 0.4246000, 0.2376000, 0.0648001, 0.1815000, 0.3946000, 1.4654000, 0.5166000, -0.5419000, -0.2355000, 0.3565000, 0.0190000, 1.3933000, 0.8552000, 0.8908000], [0.3894000, 0.1774000, 0.2401000, 0.1848000, 0.9317000, 0.3307000, -0.3751000, 1.5558000, 0.6468000, 0.9099000, 1.2092000, 0.1130000, -0.0098000, 0.7612000, 0.3229000, 1.0306000, 0.5666000, 0.7942000], [0.1226000, 0.5249000, 1.8048000, -0.1693000, 0.1271000, 0.2002000, 0.8681000, 0.6983000, -0.1714000, 0.8794000, 1.3088000, 1.1739000, 0.6729000, 0.1774000, 0.7793000, -0.0638000, 0.6110000, 0.6448000]]]

Expected (Unparsed): [[[0.08510000000000006,0.06940000000000004,1.1517,0.21250000000000002,0.4246,0.23759999999999992,0.06479999999999994,0.1815,0.39459999999999995,1.4654,0.5166000000000001,-0.5419,-0.23550000000000004,0.35650000000000004,0.01899999999999996,1.3933,0.8552,0.8908],[0.3894,0.1774,0.24010000000000004,0.18480000000000002,0.9317,0.3307,-0.3751,1.5558,0.6468,0.9099,1.2092,0.11299999999999999,-0.009799999999999975,0.7612000000000001,0.32289999999999996,1.0306,0.5666,0.7942],[0.12259999999999999,0.5249000000000001,1.8048,-0.16929999999999995,0.12710000000000005,0.2002,0.8681,0.6983,-0.1714,0.8794,1.3088,1.1739000000000002,0.6728999999999999,0.1774,0.7793,-0.0638,0.611,0.6448]]]

Actual:   [[[0.0851, 0.0694, 1.1517, 0.2125, 0.4246, 0.2376, 0.0649, 0.1815, 0.3946, 1.4654, 0.5166, -0.5419, -0.2355, 0.3565, 0.019, 1.3933, 0.8552, 0.8908], [0.3894, 0.1774, 0.2401, 0.1848, 0.9317, 0.3307, -0.3751, 1.5558, 0.6468, 0.9099, 1.2092, 0.113, -0.0098, 0.7612, 0.3229, 1.0306, 0.5666, 0.7942], [0.1226, 0.5249, 1.8048, -0.1693, 0.1271, 0.2002, 0.8681, 0.6983, -0.1714, 0.8794, 1.3088, 1.1739, 0.6729, 0.1774, 0.7793, -0.0638, 0.611, 0.6448]]]

Expected: [[[0.0852, 0.0695, 1.1517, 0.2126, 0.4246, 0.2376, 0.0648, 0.1815, 0.3946, 1.4654, 0.5167, -0.5419, -0.2355, 0.3566, 0.019, 1.3933, 0.8552, 0.8908], [0.3894, 0.1774, 0.2402, 0.1849, 0.9317, 0.3307, -0.3751, 1.5558, 0.6468, 0.9099, 1.2092, 0.113, -0.0097, 0.7613, 0.3229, 1.0306, 0.5666, 0.7942], [0.1226, 0.525, 1.8048, -0.1692, 0.1272, 0.2002, 0.8681, 0.6983, -0.1714, 0.8794, 1.3088, 1.174, 0.6729, 0.1774, 0.7793, -0.0638, 0.611, 0.6448]]]