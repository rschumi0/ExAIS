import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Sub14731 = tf.keras.layers.Input(shape=([3, 3]))
in1Sub14731 = tf.keras.layers.Input(shape=([3, 3]))

Sub14731 = keras.layers.Subtract(name = 'Sub14731', )([in0Sub14731,in1Sub14731])
Up_66079 = keras.layers.UpSampling1D(size=(2), name = 'Up_66079', )(Sub14731)
model = tf.keras.models.Model(inputs=[in0Sub14731,in1Sub14731], outputs=Up_66079)
in0Sub14731 = tf.constant([[[0.3899, 0.4311, 0.2482], [0.6034, 0.9686, 0.7242], [0.6747, 0.3196, 0.5753]]])
in1Sub14731 = tf.constant([[[0.0687, 0.6744, 0.7256], [0.9444, 0.2515, 0.488], [0.1183, 0.4734, 0.341]]])
print (np.array2string(model.predict([in0Sub14731,in1Sub14731],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Up_66079.png')

LSub14731 = subtract_layer([[[0.3899, 0.4311, 0.2482], [0.6034, 0.9686, 0.7242], [0.6747, 0.3196, 0.5753]]], [[[0.0687, 0.6744, 0.7256], [0.9444, 0.2515, 0.488], [0.1183, 0.4734, 0.341]]], Sub14731), 
LUp_66079 = up_sampling1D_layer(Sub14731, 2, Up_66079), 
exec_layers([LSub14731,LUp_66079],["Sub14731","Up_66079"],Up_66079,"Up_66079")

Actual (Unparsed): [[[0.3212000, -0.2433000, -0.4774000], [0.3212000, -0.2433000, -0.4774000], [-0.3410000, 0.7171000, 0.2362000], [-0.3410000, 0.7171000, 0.2362000], [0.5564000, -0.1538000, 0.2343000], [0.5564000, -0.1538000, 0.2343000]]]

Expected (Unparsed): [[[0.32120000000000004,-0.24330000000000002,-0.47740000000000005],[0.32120000000000004,-0.24330000000000002,-0.47740000000000005],[-0.34099999999999997,0.7171000000000001,0.23619999999999997],[-0.34099999999999997,0.7171000000000001,0.23619999999999997],[0.5564,-0.1538,0.2343],[0.5564,-0.1538,0.2343]]]

Actual:   [[[0.3212, -0.2433, -0.4774], [0.3212, -0.2433, -0.4774], [-0.341, 0.7171, 0.2362], [-0.341, 0.7171, 0.2362], [0.5564, -0.1538, 0.2343], [0.5564, -0.1538, 0.2343]]]

Expected: [[[0.3213, -0.2433, -0.4774], [0.3213, -0.2433, -0.4774], [-0.3409, 0.7172, 0.2362], [-0.3409, 0.7172, 0.2362], [0.5564, -0.1538, 0.2343], [0.5564, -0.1538, 0.2343]]]