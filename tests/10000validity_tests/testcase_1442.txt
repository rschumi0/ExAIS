import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Dot45036 = tf.keras.layers.Input(shape=([2]))
in1Dot45036 = tf.keras.layers.Input(shape=([2]))

Dot45036 = keras.layers.Dot(axes=(1, 1), name = 'Dot45036', )([in0Dot45036,in1Dot45036])
Res73233 = keras.layers.Reshape((1, 1), name = 'Res73233', )(Dot45036)
Sim46316 = keras.layers.SimpleRNN(2,name = 'Sim46316', )(Res73233)
Mas83796 = keras.layers.Masking(mask_value=1, name = 'Mas83796', )(Sim46316)
model = tf.keras.models.Model(inputs=[in0Dot45036,in1Dot45036], outputs=Mas83796)
w = model.get_layer('Sim46316').get_weights() 
w[0] = np.array([[3, 4]])
w[1] = np.array([[10, 1], [10, 10]])
w[2] = np.array([6, 2])
model.get_layer('Sim46316').set_weights(w) 
in0Dot45036 = tf.constant([[0.7728, 0.2965]])
in1Dot45036 = tf.constant([[0.8338, 0.0187]])
print (np.array2string(model.predict([in0Dot45036,in1Dot45036],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Mas83796.png')

LDot45036 = dot_layer([[0.7728, 0.2965]], [[0.8338, 0.0187]], 1, 1, Dot45036), 
LRes73233 = reshape_layer(Dot45036, [1, 1], Res73233), 
LSim46316 = simple_rnn_layer(Res73233,[[3, 4]],[[10, 1], [10, 10]],[6, 2], Sim46316), 
LMas83796 = masking_layer(Sim46316, 1, Mas83796), 
exec_layers([LDot45036,LRes73233,LSim46316,LMas83796],["Dot45036","Res73233","Sim46316","Mas83796"],Mas83796,"Mas83796")

Actual (Unparsed): [[0.9999998, 0.9997978]]

Expected (Unparsed): [[0.9999997511172871,0.9997977883123036]]

Actual:   [[1, 0.9998]]

Expected: [[1, 0.9998]]