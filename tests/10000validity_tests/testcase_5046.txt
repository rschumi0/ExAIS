import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Fla48261 = tf.keras.layers.Input(shape=([2, 4]))

Fla48261 = keras.layers.Flatten(name = 'Fla48261', )(in0Fla48261)
Res25744 = keras.layers.Reshape((8, 1), name = 'Res25744', )(Fla48261)
Res74746 = keras.layers.Reshape((8, 1, 1), name = 'Res74746', )(Res25744)
Res73243 = keras.layers.Reshape((8, 1, 1, 1), name = 'Res73243', )(Res74746)
Con12051 = keras.layers.Conv3D(2, (4, 1, 1),strides=(1, 3, 1), padding='valid', dilation_rate=(1, 1, 1), name = 'Con12051', )(Res73243)
model = tf.keras.models.Model(inputs=[in0Fla48261], outputs=Con12051)
w = model.get_layer('Con12051').get_weights() 
w[0] = np.array([[[[[0.6168, 0.6797]]]], [[[[0.5696, 0.7081]]]], [[[[0.3231, 0.0501]]]], [[[[0.055, 0.3661]]]]])
w[1] = np.array([0, 0])
model.get_layer('Con12051').set_weights(w) 
in0Fla48261 = tf.constant([[[1.1699, 1.9637, 1.8002, 1.9842], [1.9929, 1.7459, 1.4451, 1.0546]]])
print (np.array2string(model.predict([in0Fla48261],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Con12051.png')

LFla48261 = flatten_layer([[[1.1699, 1.9637, 1.8002, 1.9842], [1.9929, 1.7459, 1.4451, 1.0546]]], Fla48261), 
LRes25744 = reshape_layer(Fla48261, [8, 1], Res25744), 
LRes74746 = reshape_layer(Res25744, [8, 1, 1], Res74746), 
LRes73243 = reshape_layer(Res74746, [8, 1, 1, 1], Res73243), 
LCon12051 = conv3D_layer(Res73243, 4, 1, 1,[[[[[0.6168, 0.6797]]]], [[[[0.5696, 0.7081]]]], [[[[0.3231, 0.0501]]]], [[[[0.055, 0.3661]]]]],[0, 0], 1, 3, 1, false, 1, 1, 1, Con12051), 
exec_layers([LFla48261,LRes25744,LRes74746,LRes73243,LCon12051],["Fla48261","Res25744","Res74746","Res73243","Con12051"],Con12051,"Con12051")

Actual (Unparsed): [[[[[2.5308935, 3.0022826]]], [[[2.9873086, 3.4384577]]], [[[2.9804942, 3.3676262]]], [[[3.0025912, 3.3763539]]], [[[2.7486002, 3.0493345]]]]]

Expected (Unparsed): [[[[[2.53089346,3.0022826400000002]]],[[[2.9873086,3.43845762]]],[[[2.98049417,3.36762624]]],[[[3.0025911899999995,3.37635393]]],[[[2.74860017,3.0493344899999997]]]]]

Actual:   [[[[[2.5309, 3.0023]]], [[[2.9874, 3.4385]]], [[[2.9805, 3.3677]]], [[[3.0026, 3.3764]]], [[[2.7487, 3.0494]]]]]

Expected: [[[[[2.5309, 3.0023]]], [[[2.9874, 3.4385]]], [[[2.9805, 3.3677]]], [[[3.0026, 3.3764]]], [[[2.7487, 3.0494]]]]]