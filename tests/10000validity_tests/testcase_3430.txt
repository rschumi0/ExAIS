import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Lea92598 = tf.keras.layers.Input(shape=([2, 2]))

Lea92598 = keras.layers.LeakyReLU(alpha=5.2184074298378595, name = 'Lea92598', input_shape=(2, 2))(in0Lea92598)
Glo11377 = keras.layers.GlobalAveragePooling1D(name = 'Glo11377', )(Lea92598)
model = tf.keras.models.Model(inputs=[in0Lea92598], outputs=Glo11377)
in0Lea92598 = tf.constant([[[0.3291, 0.4113], [0.5431, 0.8891]]])
print (np.array2string(model.predict([in0Lea92598],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Glo11377.png')

LLea92598 = leaky_relu_layer([[[0.3291, 0.4113], [0.5431, 0.8891]]], 5.2184074298378595, Lea92598), 
LGlo11377 = global_average_pooling1D_layer(Lea92598, Glo11377), 
exec_layers([LLea92598,LGlo11377],["Lea92598","Glo11377"],Glo11377,"Glo11377")

Actual (Unparsed): [[0.4361000, 0.6502000]]

Expected (Unparsed): [[0.43610000000000004,0.6502]]

Actual:   [[0.4361, 0.6502]]

Expected: [[0.4362, 0.6502]]