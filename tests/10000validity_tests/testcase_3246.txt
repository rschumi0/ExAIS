import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Max61876 = tf.keras.layers.Input(shape=([2, 2]))
in1Max61876 = tf.keras.layers.Input(shape=([2, 2]))
in0Max35210 = tf.keras.layers.Input(shape=([1, 2]))
in1Max35210 = tf.keras.layers.Input(shape=([1, 2]))
in0Con21587 = tf.keras.layers.Input(shape=([2, 3, 2, 1]))
in0Ave32187 = tf.keras.layers.Input(shape=([2, 1, 2, 2]))
in1Ave32187 = tf.keras.layers.Input(shape=([2, 1, 2, 2]))
in0Con56680 = tf.keras.layers.Input(shape=([3, 4, 6, 1]))
in0Sub85424 = tf.keras.layers.Input(shape=([3, 2, 2, 2]))
in1Sub85424 = tf.keras.layers.Input(shape=([3, 2, 2, 2]))

Max61876 = keras.layers.Maximum(name = 'Max61876', )([in0Max61876,in1Max61876])
Cro84527 = keras.layers.Cropping1D(cropping=((1, 0)), name = 'Cro84527', )(Max61876)
Max35210 = keras.layers.Maximum(name = 'Max35210', )([in0Max35210,in1Max35210])
Sub94609 = keras.layers.Subtract(name = 'Sub94609', )([Cro84527,Max35210])
Res66933 = keras.layers.Reshape((1, 2, 1), name = 'Res66933', )(Sub94609)
Res27790 = keras.layers.Reshape((1, 2, 1, 1), name = 'Res27790', )(Res66933)
Zer71656 = keras.layers.ZeroPadding3D(padding=((1, 0), (1, 0), (1, 0)), name = 'Zer71656', )(Res27790)
Con21587 = keras.layers.Concatenate(axis=4, name = 'Con21587', )([Zer71656,in0Con21587])
Ave32187 = keras.layers.Average(name = 'Ave32187', )([in0Ave32187,in1Ave32187])
Zer3656 = keras.layers.ZeroPadding3D(padding=((0, 0), (2, 0), (0, 0)), name = 'Zer3656', )(Ave32187)
Add24823 = keras.layers.Add(name = 'Add24823', )([Con21587,Zer3656])
Res30249 = keras.layers.Reshape((2, 3, 4), name = 'Res30249', )(Add24823)
Max89780 = keras.layers.MaxPool2D(pool_size=(2, 1), name = 'Max89780', )(Res30249)
Res97672 = keras.layers.Reshape((1, 3, 4, 1), name = 'Res97672', )(Max89780)
Zer12145 = keras.layers.ZeroPadding3D(padding=((2, 0), (1, 0), (2, 0)), name = 'Zer12145', )(Res97672)
Con56680 = keras.layers.Concatenate(axis=4, name = 'Con56680', )([Zer12145,in0Con56680])
Sub85424 = keras.layers.Subtract(name = 'Sub85424', )([in0Sub85424,in1Sub85424])
Zer85256 = keras.layers.ZeroPadding3D(padding=((0, 0), (2, 0), (4, 0)), name = 'Zer85256', )(Sub85424)
Mul39368 = keras.layers.Multiply(name = 'Mul39368', )([Con56680,Zer85256])
model = tf.keras.models.Model(inputs=[in0Max61876,in1Max61876,in0Max35210,in1Max35210,in0Con21587,in0Ave32187,in1Ave32187,in0Con56680,in0Sub85424,in1Sub85424], outputs=Mul39368)
in0Max61876 = tf.constant([[[0.8804, 0.225], [0.2144, 0.7413]]])
in1Max61876 = tf.constant([[[0.4945, 0.6395], [0.2376, 0.0476]]])
in0Max35210 = tf.constant([[[0.8568, 0.9995]]])
in1Max35210 = tf.constant([[[0.8255, 0.1638]]])
in0Con21587 = tf.constant([[[[[0.6024], [0.4877]], [[0.936], [0.4824]], [[0.4473], [0.8718]]], [[[0.9471], [0.3728]], [[0.1112], [0.0285]], [[0.8447], [0.6462]]]]])
in0Ave32187 = tf.constant([[[[[0.4198, 0.4172], [0.7772, 0.0487]]], [[[0.5113, 0.8763], [0.4251, 0.0676]]]]])
in1Ave32187 = tf.constant([[[[[0.2387, 0.4263], [0.6131, 0.6038]]], [[[0.036, 0.476], [0.4369, 0.4572]]]]])
in0Con56680 = tf.constant([[[[[0.0461], [0.7929], [0.8329], [0.4876], [0.0782], [0.1749]], [[0.6459], [0.9351], [0.4725], [0.896], [0.2631], [0.1688]], [[0.2781], [0.8274], [0.7693], [0.3006], [0.2665], [0.2836]], [[0.4654], [0.9725], [0.8474], [0.9105], [0.8832], [0.5039]]], [[[0.0637], [0.7988], [0.4735], [0.0647], [0.9194], [0.2382]], [[0.0584], [0.1586], [0.6906], [0.5578], [0.6067], [0.9356]], [[0.6687], [0.1804], [0.2762], [0.2374], [0.9975], [0.3626]], [[0.9503], [0.8247], [0.8753], [0.0852], [0.6893], [0.9358]]], [[[0.4172], [0.2166], [0.6144], [0.1823], [0.8979], [0.3766]], [[0.7503], [0.7993], [0.9277], [0.899], [0.2592], [0.4381]], [[0.3563], [0.908], [0.3195], [0.0128], [0.3416], [0.8062]], [[0.626], [0.5957], [0.0735], [0.4048], [0.1155], [0.9925]]]]])
in0Sub85424 = tf.constant([[[[[0.2668, 0.0653], [0.4986, 0.6914]], [[0.7651, 0.4133], [0.0978, 0.3325]]], [[[0.3138, 0.3516], [0.6051, 0.4671]], [[0.8433, 0.4798], [0.2472, 0.8384]]], [[[0.5637, 0.0083], [0.6684, 0.9993]], [[0.3371, 0.2886], [0.9297, 0.4427]]]]])
in1Sub85424 = tf.constant([[[[[0.3435, 0.9767], [0.0536, 0.9029]], [[0.4947, 0.6199], [0.8331, 0.1953]]], [[[0.1141, 0.2166], [0.3824, 0.5485]], [[0.1124, 0.9551], [0.8286, 0.3681]]], [[[0.2639, 0.9091], [0.617, 0.7712]], [[0.2146, 0.9381], [0.1345, 0.0274]]]]])
print (np.array2string(model.predict([in0Max61876,in1Max61876,in0Max35210,in1Max35210,in0Con21587,in0Ave32187,in1Ave32187,in0Con56680,in0Sub85424,in1Sub85424],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Mul39368.png')

LMax61876 = maximum_layer([[[[0.8804, 0.225], [0.2144, 0.7413]]], [[[0.4945, 0.6395], [0.2376, 0.0476]]]], Max61876), 
LCro84527 = cropping1D_layer(Max61876, 1, 0, Cro84527), 
LMax35210 = maximum_layer([[[[0.8568, 0.9995]]], [[[0.8255, 0.1638]]]], Max35210), 
LSub94609 = subtract_layer(Cro84527,Max35210, Sub94609), 
LRes66933 = reshape_layer(Sub94609, [1, 2, 1], Res66933), 
LRes27790 = reshape_layer(Res66933, [1, 2, 1, 1], Res27790), 
LZer71656 = zero_padding3D_layer(Res27790, 1, 0, 1, 0, 1, 0, Zer71656), 
LCon21587 = concatenate_layer([Zer71656,[[[[[0.6024], [0.4877]], [[0.936], [0.4824]], [[0.4473], [0.8718]]], [[[0.9471], [0.3728]], [[0.1112], [0.0285]], [[0.8447], [0.6462]]]]]], 4, Con21587), 
LAve32187 = average_layer([[[[[[0.4198, 0.4172], [0.7772, 0.0487]]], [[[0.5113, 0.8763], [0.4251, 0.0676]]]]], [[[[[0.2387, 0.4263], [0.6131, 0.6038]]], [[[0.036, 0.476], [0.4369, 0.4572]]]]]], Ave32187), 
LZer3656 = zero_padding3D_layer(Ave32187, 0, 0, 2, 0, 0, 0, Zer3656), 
LAdd24823 = add_layer([Con21587,Zer3656], Add24823), 
LRes30249 = reshape_layer(Add24823, [2, 3, 4], Res30249), 
LMax89780 = max_pool2D_layer(Res30249, 2, 1, Max89780), 
LRes97672 = reshape_layer(Max89780, [1, 3, 4, 1], Res97672), 
LZer12145 = zero_padding3D_layer(Res97672, 2, 0, 1, 0, 2, 0, Zer12145), 
LCon56680 = concatenate_layer([Zer12145,[[[[[0.0461], [0.7929], [0.8329], [0.4876], [0.0782], [0.1749]], [[0.6459], [0.9351], [0.4725], [0.896], [0.2631], [0.1688]], [[0.2781], [0.8274], [0.7693], [0.3006], [0.2665], [0.2836]], [[0.4654], [0.9725], [0.8474], [0.9105], [0.8832], [0.5039]]], [[[0.0637], [0.7988], [0.4735], [0.0647], [0.9194], [0.2382]], [[0.0584], [0.1586], [0.6906], [0.5578], [0.6067], [0.9356]], [[0.6687], [0.1804], [0.2762], [0.2374], [0.9975], [0.3626]], [[0.9503], [0.8247], [0.8753], [0.0852], [0.6893], [0.9358]]], [[[0.4172], [0.2166], [0.6144], [0.1823], [0.8979], [0.3766]], [[0.7503], [0.7993], [0.9277], [0.899], [0.2592], [0.4381]], [[0.3563], [0.908], [0.3195], [0.0128], [0.3416], [0.8062]], [[0.626], [0.5957], [0.0735], [0.4048], [0.1155], [0.9925]]]]]], 4, Con56680), 
LSub85424 = subtract_layer([[[[[0.2668, 0.0653], [0.4986, 0.6914]], [[0.7651, 0.4133], [0.0978, 0.3325]]], [[[0.3138, 0.3516], [0.6051, 0.4671]], [[0.8433, 0.4798], [0.2472, 0.8384]]], [[[0.5637, 0.0083], [0.6684, 0.9993]], [[0.3371, 0.2886], [0.9297, 0.4427]]]]], [[[[[0.3435, 0.9767], [0.0536, 0.9029]], [[0.4947, 0.6199], [0.8331, 0.1953]]], [[[0.1141, 0.2166], [0.3824, 0.5485]], [[0.1124, 0.9551], [0.8286, 0.3681]]], [[[0.2639, 0.9091], [0.617, 0.7712]], [[0.2146, 0.9381], [0.1345, 0.0274]]]]], Sub85424), 
LZer85256 = zero_padding3D_layer(Sub85424, 0, 0, 2, 0, 4, 0, Zer85256), 
LMul39368 = multiply_layer([Con56680,Zer85256], Mul39368), 
exec_layers([LMax61876,LCro84527,LMax35210,LSub94609,LRes66933,LRes27790,LZer71656,LCon21587,LAve32187,LZer3656,LAdd24823,LRes30249,LMax89780,LRes97672,LZer12145,LCon56680,LSub85424,LZer85256,LMul39368],["Max61876","Cro84527","Max35210","Sub94609","Res66933","Res27790","Zer71656","Con21587","Ave32187","Zer3656","Add24823","Res30249","Max89780","Res97672","Zer12145","Con56680","Sub85424","Zer85256","Mul39368"],Mul39368,"Mul39368")

Actual (Unparsed): [[[[[0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000]], [[0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000]], [[0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000], [-0.0000000, -0.2428881], [0.0000000, -0.0599814]], [[0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, -0.1824691], [-0.0000000, 0.0691351]]], [[[0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000]], [[0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000]], [[0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.1346625], [0.0000000, -0.0295156]], [[0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, -0.3276243], [-0.0000000, 0.4401068]]], [[[0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000]], [[0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000]], [[0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, -0.3077133], [0.0247954, 0.1838942]], [[0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0851559, -0.0750173], [0.9526894, 0.4121853]]]]]

Expected (Unparsed): [[[[[0,0.0],[0,0.0],[0,0.0],[0,0.0],[0,0.0],[0,0.0]],[[0,0.0],[0,0.0],[0,0.0],[0,0.0],[0,0.0],[0,0.0]],[[0,0.0],[0,0.0],[0,0.0],[0,0.0],[-0.0,-0.24288810000000002],[0.0,-0.05998140000000001]],[[0,0.0],[0,0.0],[0,0.0],[0,0.0],[0.0,-0.18246912],[-0.0,0.06913508000000002]]],[[[0,0.0],[0,0.0],[0,0.0],[0,0.0],[0,0.0],[0,0.0]],[[0,0.0],[0,0.0],[0,0.0],[0,0.0],[0,0.0],[0,0.0]],[[0,0.0],[0,0.0],[0,0.0],[0,0.0],[0.0,0.13466250000000005],[0.0,-0.02951563999999999]],[[0,0.0],[0,0.0],[0,0.0],[0,0.0],[0.0,-0.32762429],[-0.0,0.44010674000000005]]],[[[0,0.0],[0,0.0],[0,0.0],[0,0.0],[0,0.0],[0,0.0]],[[0,0.0],[0,0.0],[0,0.0],[0.0,0.0],[0,0.0],[0.0,0.0]],[[0,0.0],[0,0.0],[0,0.0],[0.0,0.0],[0.0,-0.30771328000000003],[0.02479536,0.18389421999999997]],[[0,0.0],[0,0.0],[0.0,0.0],[0.0,0.0],[0.08515587499999999,-0.07501725],[0.9526893599999999,0.41218525]]]]]

Actual:   [[[[[0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0]], [[0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0]], [[0, 0], [0, 0], [0, 0], [0, 0], [-0, -0.2428], [0, -0.0599]], [[0, 0], [0, 0], [0, 0], [0, 0], [0, -0.1824], [-0, 0.0692]]], [[[0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0]], [[0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0]], [[0, 0], [0, 0], [0, 0], [0, 0], [0, 0.1347], [0, -0.0295]], [[0, 0], [0, 0], [0, 0], [0, 0], [0, -0.3276], [-0, 0.4402]]], [[[0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0]], [[0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0]], [[0, 0], [0, 0], [0, 0], [0, 0], [0, -0.3077], [0.0248, 0.1839]], [[0, 0], [0, 0], [0, 0], [0, 0], [0.0852, -0.075], [0.9527, 0.4122]]]]]

Expected: [[[[[0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0]], [[0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0]], [[0, 0], [0, 0], [0, 0], [0, 0], [-0, -0.2428], [0, -0.0599]], [[0, 0], [0, 0], [0, 0], [0, 0], [0, -0.1824], [-0, 0.0692]]], [[[0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0]], [[0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0]], [[0, 0], [0, 0], [0, 0], [0, 0], [0, 0.1347], [0, -0.0295]], [[0, 0], [0, 0], [0, 0], [0, 0], [0, -0.3276], [-0, 0.4402]]], [[[0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0]], [[0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0]], [[0, 0], [0, 0], [0, 0], [0, 0], [0, -0.3077], [0.0248, 0.1839]], [[0, 0], [0, 0], [0, 0], [0, 0], [0.0852, -0.075], [0.9527, 0.4122]]]]]