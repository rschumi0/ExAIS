import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Sim35195 = tf.keras.layers.Input(shape=([2, 3]))
in0Dot17525 = tf.keras.layers.Input(shape=([3]))
in1Dot17525 = tf.keras.layers.Input(shape=([3]))
in0Con58750 = tf.keras.layers.Input(shape=([1]))
in0Con80369 = tf.keras.layers.Input(shape=([2, 1]))
in0Dot12461 = tf.keras.layers.Input(shape=([2, 2]))
in1Dot12461 = tf.keras.layers.Input(shape=([2, 2]))
in0Con90745 = tf.keras.layers.Input(shape=([3, 5, 1]))
in0Glo51838 = tf.keras.layers.Input(shape=([1, 1, 2]))
in0Con69292 = tf.keras.layers.Input(shape=([3, 5, 1]))
in0LST65330 = tf.keras.layers.Input(shape=([1, 3]))
in0Con53333 = tf.keras.layers.Input(shape=([3, 5, 1]))
in0Cro25873 = tf.keras.layers.Input(shape=([3, 3, 2]))

Sim35195 = keras.layers.SimpleRNN(2,name = 'Sim35195', )(in0Sim35195)
Dot17525 = keras.layers.Dot(axes=(1, 1), name = 'Dot17525', )([in0Dot17525,in1Dot17525])
Thr21512 = keras.layers.ThresholdedReLU(theta=6.491247020420769, name = 'Thr21512', )(Dot17525)
Con58750 = keras.layers.Concatenate(axis=1, name = 'Con58750', )([Thr21512,in0Con58750])
Ave54950 = keras.layers.Average(name = 'Ave54950', )([Sim35195,Con58750])
Res89143 = keras.layers.Reshape((2, 1), name = 'Res89143', )(Ave54950)
Con80369 = keras.layers.Concatenate(axis=2, name = 'Con80369', )([Res89143,in0Con80369])
Dot12461 = keras.layers.Dot(axes=(2, 1), name = 'Dot12461', )([in0Dot12461,in1Dot12461])
Ave94750 = keras.layers.Average(name = 'Ave94750', )([Con80369,Dot12461])
Res12087 = keras.layers.Reshape((2, 2, 1), name = 'Res12087', )(Ave94750)
Zer42945 = keras.layers.ZeroPadding2D(padding=((1, 0), (3, 0)), name = 'Zer42945', )(Res12087)
Con90745 = keras.layers.Concatenate(axis=3, name = 'Con90745', )([Zer42945,in0Con90745])
Glo51838 = keras.layers.GlobalMaxPool2D(name = 'Glo51838', )(in0Glo51838)
ELU58693 = keras.layers.ELU(alpha=-0.28498893849425144, name = 'ELU58693', )(Glo51838)
Mas43869 = keras.layers.Masking(mask_value=2, name = 'Mas43869', )(ELU58693)
Res23333 = keras.layers.Reshape((2, 1), name = 'Res23333', )(Mas43869)
Res68586 = keras.layers.Reshape((2, 1, 1), name = 'Res68586', )(Res23333)
Zer9461 = keras.layers.ZeroPadding2D(padding=((1, 0), (4, 0)), name = 'Zer9461', )(Res68586)
Con69292 = keras.layers.Concatenate(axis=3, name = 'Con69292', )([Zer9461,in0Con69292])
LST65330 = keras.layers.LSTM(3,recurrent_activation='sigmoid', name = 'LST65330', )(in0LST65330)
Res48366 = keras.layers.Reshape((3, 1), name = 'Res48366', )(LST65330)
Res35656 = keras.layers.Reshape((3, 1, 1), name = 'Res35656', )(Res48366)
Zer54226 = keras.layers.ZeroPadding2D(padding=((0, 0), (4, 0)), name = 'Zer54226', )(Res35656)
Con53333 = keras.layers.Concatenate(axis=3, name = 'Con53333', )([Zer54226,in0Con53333])
Cro25873 = keras.layers.Cropping2D(cropping=((2, 0), (0, 0)), name = 'Cro25873', )(in0Cro25873)
Zer96990 = keras.layers.ZeroPadding2D(padding=((2, 0), (2, 0)), name = 'Zer96990', )(Cro25873)
Sub63871 = keras.layers.Subtract(name = 'Sub63871', )([Con53333,Zer96990])
Ave33129 = keras.layers.Average(name = 'Ave33129', )([Con69292,Sub63871])
Sub83925 = keras.layers.Subtract(name = 'Sub83925', )([Con90745,Ave33129])
model = tf.keras.models.Model(inputs=[in0Sim35195,in0Dot17525,in1Dot17525,in0Con58750,in0Con80369,in0Dot12461,in1Dot12461,in0Con90745,in0Glo51838,in0Con69292,in0LST65330,in0Con53333,in0Cro25873], outputs=Sub83925)
w = model.get_layer('Sim35195').get_weights() 
w[0] = np.array([[7, 7], [2, 7], [1, 1]])
w[1] = np.array([[9, 10], [5, 8]])
w[2] = np.array([2, 10])
model.get_layer('Sim35195').set_weights(w) 
w = model.get_layer('LST65330').get_weights() 
w[0] = np.array([[10, 4, 4, 4, 3, 10, 1, 8, 3, 4, 9, 2], [7, 10, 8, 5, 1, 10, 5, 8, 6, 9, 8, 5], [1, 7, 3, 1, 8, 10, 10, 1, 10, 3, 9, 9]])
w[1] = np.array([[10, 1, 3, 5, 2, 5, 10, 9, 6, 8, 4, 10], [3, 8, 7, 6, 2, 6, 2, 7, 6, 9, 3, 10], [7, 4, 10, 10, 6, 5, 10, 6, 10, 1, 10, 1]])
w[2] = np.array([10, 6, 3, 7, 4, 2, 8, 9, 7, 1, 8, 9])
model.get_layer('LST65330').set_weights(w) 
in0Sim35195 = tf.constant([[[1, 1, 7], [10, 4, 10]]])
in0Dot17525 = tf.constant([[0.9747, 0.5942, 0.7124]])
in1Dot17525 = tf.constant([[0.9849, 0.3926, 0.0757]])
in0Con58750 = tf.constant([[0.5482]])
in0Con80369 = tf.constant([[[0.3415], [0.7439]]])
in0Dot12461 = tf.constant([[[0.3644, 0.2916], [0.5953, 0.293]]])
in1Dot12461 = tf.constant([[[0.8111, 0.557], [0.4222, 0.0593]]])
in0Con90745 = tf.constant([[[[0.8922], [0.7046], [0.0003], [0.7672], [0.6505]], [[0.1178], [0.24], [0.7099], [0.1894], [0.3537]], [[0.0396], [0.6073], [0.0335], [0.3093], [0.3983]]]])
in0Glo51838 = tf.constant([[[[1.6526, 1.5459]]]])
in0Con69292 = tf.constant([[[[0.8793], [0.4686], [0.1305], [0.1945], [0.8464]], [[0.608], [0.9853], [0.6204], [0.7031], [0.2348]], [[0.3967], [0.2739], [0.535], [0.4569], [0.0799]]]])
in0LST65330 = tf.constant([[[5, 10, 9]]])
in0Con53333 = tf.constant([[[[0.5502], [0.3192], [0.0783], [0.3645], [0.7321]], [[0.6798], [0.4722], [0.2287], [0.4543], [0.3632]], [[0.2659], [0.2397], [0.5948], [0.4441], [0.0229]]]])
in0Cro25873 = tf.constant([[[[1.6362, 1.9405], [1.5599, 1.3815], [1.7929, 1.4217]], [[1.6463, 1.9015], [1.1569, 1.1681], [1.1796, 1.904]], [[1.8344, 1.6435], [1.5935, 1.4009], [1.7803, 1.1239]]]])
print (np.array2string(model.predict([in0Sim35195,in0Dot17525,in1Dot17525,in0Con58750,in0Con80369,in0Dot12461,in1Dot12461,in0Con90745,in0Glo51838,in0Con69292,in0LST65330,in0Con53333,in0Cro25873],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Sub83925.png')

LSim35195 = simple_rnn_layer([[[1, 1, 7], [10, 4, 10]]],[[7, 7], [2, 7], [1, 1]],[[9, 10], [5, 8]],[2, 10], Sim35195), 
LDot17525 = dot_layer([[0.9747, 0.5942, 0.7124]], [[0.9849, 0.3926, 0.0757]], 1, 1, Dot17525), 
LThr21512 = thresholded_relu_layer(Dot17525, 6.491247020420769, Thr21512), 
LCon58750 = concatenate_layer([Thr21512,[[0.5482]]], 1, Con58750), 
LAve54950 = average_layer([Sim35195,Con58750], Ave54950), 
LRes89143 = reshape_layer(Ave54950, [2, 1], Res89143), 
LCon80369 = concatenate_layer([Res89143,[[[0.3415], [0.7439]]]], 2, Con80369), 
LDot12461 = dot_layer([[[0.3644, 0.2916], [0.5953, 0.293]]], [[[0.8111, 0.557], [0.4222, 0.0593]]], 2, 1, Dot12461), 
LAve94750 = average_layer([Con80369,Dot12461], Ave94750), 
LRes12087 = reshape_layer(Ave94750, [2, 2, 1], Res12087), 
LZer42945 = zero_padding2D_layer(Res12087, 1, 0, 3, 0, Zer42945), 
LCon90745 = concatenate_layer([Zer42945,[[[[0.8922], [0.7046], [0.0003], [0.7672], [0.6505]], [[0.1178], [0.24], [0.7099], [0.1894], [0.3537]], [[0.0396], [0.6073], [0.0335], [0.3093], [0.3983]]]]], 3, Con90745), 
LGlo51838 = global_max_pool2D_layer([[[[1.6526, 1.5459]]]], Glo51838), 
LELU58693 = elu_layer(Glo51838, -0.28498893849425144, ELU58693), 
LMas43869 = masking_layer(ELU58693, 2, Mas43869), 
LRes23333 = reshape_layer(Mas43869, [2, 1], Res23333), 
LRes68586 = reshape_layer(Res23333, [2, 1, 1], Res68586), 
LZer9461 = zero_padding2D_layer(Res68586, 1, 0, 4, 0, Zer9461), 
LCon69292 = concatenate_layer([Zer9461,[[[[0.8793], [0.4686], [0.1305], [0.1945], [0.8464]], [[0.608], [0.9853], [0.6204], [0.7031], [0.2348]], [[0.3967], [0.2739], [0.535], [0.4569], [0.0799]]]]], 3, Con69292), 
LLST65330 = lstm_layer([[[5, 10, 9]]],[[10, 4, 4, 4, 3, 10, 1, 8, 3, 4, 9, 2], [7, 10, 8, 5, 1, 10, 5, 8, 6, 9, 8, 5], [1, 7, 3, 1, 8, 10, 10, 1, 10, 3, 9, 9]],[[10, 1, 3, 5, 2, 5, 10, 9, 6, 8, 4, 10], [3, 8, 7, 6, 2, 6, 2, 7, 6, 9, 3, 10], [7, 4, 10, 10, 6, 5, 10, 6, 10, 1, 10, 1]],[10, 6, 3, 7, 4, 2, 8, 9, 7, 1, 8, 9], LST65330), 
LRes48366 = reshape_layer(LST65330, [3, 1], Res48366), 
LRes35656 = reshape_layer(Res48366, [3, 1, 1], Res35656), 
LZer54226 = zero_padding2D_layer(Res35656, 0, 0, 4, 0, Zer54226), 
LCon53333 = concatenate_layer([Zer54226,[[[[0.5502], [0.3192], [0.0783], [0.3645], [0.7321]], [[0.6798], [0.4722], [0.2287], [0.4543], [0.3632]], [[0.2659], [0.2397], [0.5948], [0.4441], [0.0229]]]]], 3, Con53333), 
LCro25873 = cropping2D_layer([[[[1.6362, 1.9405], [1.5599, 1.3815], [1.7929, 1.4217]], [[1.6463, 1.9015], [1.1569, 1.1681], [1.1796, 1.904]], [[1.8344, 1.6435], [1.5935, 1.4009], [1.7803, 1.1239]]]], 2, 0, 0, 0, Cro25873), 
LZer96990 = zero_padding2D_layer(Cro25873, 2, 0, 2, 0, Zer96990), 
LSub63871 = subtract_layer(Con53333,Zer96990, Sub63871), 
LAve33129 = average_layer([Con69292,Sub63871], Ave33129), 
LSub83925 = subtract_layer(Con90745,Ave33129, Sub83925), 
exec_layers([LSim35195,LDot17525,LThr21512,LCon58750,LAve54950,LRes89143,LCon80369,LDot12461,LAve94750,LRes12087,LZer42945,LCon90745,LGlo51838,LELU58693,LMas43869,LRes23333,LRes68586,LZer9461,LCon69292,LLST65330,LRes48366,LRes35656,LZer54226,LCon53333,LCro25873,LZer96990,LSub63871,LAve33129,LSub83925],["Sim35195","Dot17525","Thr21512","Con58750","Ave54950","Res89143","Con80369","Dot12461","Ave94750","Res12087","Zer42945","Con90745","Glo51838","ELU58693","Mas43869","Res23333","Res68586","Zer9461","Con69292","LST65330","Res48366","Res35656","Zer54226","Con53333","Cro25873","Zer96990","Sub63871","Ave33129","Sub83925"],Sub83925,"Sub83925")

Actual (Unparsed): [[[[0.0000000, 0.1774500], [0.0000000, 0.3107000], [0.0000000, -0.1041000], [0.0000000, 0.4877000], [-0.3807971, -0.1387500]], [[0.0000000, -0.5261000], [0.0000000, -0.4887500], [0.0000000, 0.2853500], [0.4593392, -0.3893000], [-0.9262158, 0.0547000]], [[0.0000000, -0.2917000], [0.0000000, 0.3505000], [0.9172000, 0.2903500], [1.4870762, 0.5592500], [0.2828314, 0.9088500]]]]

Expected (Unparsed): [[[[0,0.17745],[0,0.3107],[0,-0.1041],[0,0.4877],[-0.3807970779778824,-0.13875000000000004]],[[0,-0.5260999999999999],[0,-0.48875],[0,0.28535],[0.45933918,-0.3893],[-0.9262157379778824,0.05469999999999997]],[[0,-0.2917],[0,0.3505],[0.9172,0.29035],[1.487076215,0.55925],[0.28283142202211753,0.9088499999999999]]]]

Actual:   [[[[0, 0.1775], [0, 0.3107], [0, -0.1041], [0, 0.4877], [-0.3807, -0.1387]], [[0, -0.5261], [0, -0.4887], [0, 0.2854], [0.4594, -0.3893], [-0.9262, 0.0547]], [[0, -0.2917], [0, 0.3505], [0.9172, 0.2904], [1.4871, 0.5593], [0.2829, 0.9089]]]]

Expected: [[[[0, 0.1775], [0, 0.3107], [0, -0.1041], [0, 0.4877], [-0.3807, -0.1387]], [[0, -0.526], [0, -0.4887], [0, 0.2854], [0.4594, -0.3893], [-0.9262, 0.0547]], [[0, -0.2917], [0, 0.3505], [0.9172, 0.2904], [1.4871, 0.5593], [0.2829, 0.9089]]]]