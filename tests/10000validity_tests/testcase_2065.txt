import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Loc42907 = tf.keras.layers.Input(shape=([2, 2, 1]))
in0Sub12367 = tf.keras.layers.Input(shape=([3, 3, 3]))
in1Sub12367 = tf.keras.layers.Input(shape=([3, 3, 3]))
in0Loc86897 = tf.keras.layers.Input(shape=([1, 1, 1]))
in0Thr56082 = tf.keras.layers.Input(shape=([2, 2, 1]))
in0Con52994 = tf.keras.layers.Input(shape=([9, 3, 3]))

Loc42907 = keras.layers.LocallyConnected2D(4, (1, 2),strides=(1, 1), name = 'Loc42907', )(in0Loc42907)
Zer1628 = keras.layers.ZeroPadding2D(padding=((7, 0), (2, 0)), name = 'Zer1628', )(Loc42907)
Sub12367 = keras.layers.Subtract(name = 'Sub12367', )([in0Sub12367,in1Sub12367])
Res85024 = keras.layers.Reshape((3, 9), name = 'Res85024', )(Sub12367)
Loc86897 = keras.layers.LocallyConnected2D(3, (1, 1),strides=(1, 1), name = 'Loc86897', )(in0Loc86897)
Res12830 = keras.layers.Reshape((1, 3), name = 'Res12830', )(Loc86897)
Zer24065 = keras.layers.ZeroPadding1D(padding=((2, 0)), name = 'Zer24065', )(Res12830)
Dot483 = keras.layers.Dot(axes=(1, 1), name = 'Dot483', )([Res85024,Zer24065])
Res12069 = keras.layers.Reshape((9, 3, 1), name = 'Res12069', )(Dot483)
Thr56082 = keras.layers.ThresholdedReLU(theta=1.6278437087500612, name = 'Thr56082', input_shape=(2, 2, 1))(in0Thr56082)
Sof80524 = keras.layers.Softmax(axis=1, name = 'Sof80524', )(Thr56082)
Zer49754 = keras.layers.ZeroPadding2D(padding=((7, 0), (1, 0)), name = 'Zer49754', )(Sof80524)
Sub62293 = keras.layers.Subtract(name = 'Sub62293', )([Res12069,Zer49754])
Con52994 = keras.layers.Concatenate(axis=3, name = 'Con52994', )([Sub62293,in0Con52994])
Ave71257 = keras.layers.Average(name = 'Ave71257', )([Zer1628,Con52994])
model = tf.keras.models.Model(inputs=[in0Loc42907,in0Sub12367,in1Sub12367,in0Loc86897,in0Thr56082,in0Con52994], outputs=Ave71257)
w = model.get_layer('Loc42907').get_weights() 
w[0] = np.array([[[0.3276, 0.4646, 0.6638, 0.4934], [0.0292, 0.9026, 0.1342, 0.7092]], [[0.742, 0.5899, 0.8257, 0.4747], [0.1627, 0.0357, 0.2766, 0.6856]]])
w[1] = np.array([[[0, 0, 0, 0]], [[0, 0, 0, 0]]])
model.get_layer('Loc42907').set_weights(w) 
w = model.get_layer('Loc86897').get_weights() 
w[0] = np.array([[[0.2438, 0.5391, 0.0574]]])
w[1] = np.array([[[0, 0, 0]]])
model.get_layer('Loc86897').set_weights(w) 
in0Loc42907 = tf.constant([[[[0.4953], [0.9375]], [[0.904], [0.5461]]]])
in0Sub12367 = tf.constant([[[[0.035, 0.8756, 0.8588], [0.5402, 0.8154, 0.0985], [0.51, 0.0208, 0.5288]], [[0.0292, 0.4932, 0.9693], [0.0299, 0.3949, 0.4621], [0.6034, 0.9176, 0.0738]], [[0.2943, 0.7401, 0.3431], [0.6894, 0.6478, 0.0951], [0.7542, 0.1757, 0.2818]]]])
in1Sub12367 = tf.constant([[[[0.8719, 0.8226, 0.74], [0.4838, 0.2132, 0.3763], [0.1374, 0.4079, 0.0885]], [[0.7569, 0.9352, 0.1224], [0.9728, 0.6607, 0.4956], [0.6883, 0.2361, 0.1825]], [[0.7323, 0.6482, 0.5081], [0.4807, 0.3085, 0.888], [0.4067, 0.2092, 0.8339]]]])
in0Loc86897 = tf.constant([[[[0.9573]]]])
in0Thr56082 = tf.constant([[[[0.9292], [0.6189]], [[0.793], [0.5787]]]])
in0Con52994 = tf.constant([[[[0.7157, 0.245, 0.5997], [0.7693, 0.7605, 0.4866], [0.2825, 0.3871, 0.4565]], [[0.259, 0.6547, 0.5078], [0.2887, 0.8716, 0.9588], [0.9775, 0.0731, 0.3659]], [[0.405, 0.3608, 0.5475], [0.888, 0.3412, 0.144], [0.8039, 0.4623, 0.0993]], [[0.0623, 0.757, 0.8278], [0.8442, 0.256, 0.5818], [0.1208, 0.0672, 0.7814]], [[0.2007, 0.9643, 0.5922], [0.9871, 0.4489, 0.9627], [0.0889, 0.4032, 0.5087]], [[0.6865, 0.128, 0.0831], [0.5646, 0.9826, 0.7516], [0.7901, 0.4028, 0.8471]], [[0.3838, 0.0269, 0.8563], [0.1575, 0.6581, 0.6672], [0.5776, 0.2778, 0.4041]], [[0.8694, 0.6129, 0.9209], [0.5979, 0.0278, 0.6449], [0.6811, 0.558, 0.7452]], [[0.5741, 0.336, 0.0475], [0.2027, 0.3173, 0.3546], [0.2288, 0.8433, 0.314]]]])
print (np.array2string(model.predict([in0Loc42907,in0Sub12367,in1Sub12367,in0Loc86897,in0Thr56082,in0Con52994],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Ave71257.png')

LLoc42907 = locally_connected2D_layer([[[[0.4953], [0.9375]], [[0.904], [0.5461]]]], 1, 2,[[[0.3276, 0.4646, 0.6638, 0.4934], [0.0292, 0.9026, 0.1342, 0.7092]], [[0.742, 0.5899, 0.8257, 0.4747], [0.1627, 0.0357, 0.2766, 0.6856]]],[[[0, 0, 0, 0]], [[0, 0, 0, 0]]], 1, 1, Loc42907), 
LZer1628 = zero_padding2D_layer(Loc42907, 7, 0, 2, 0, Zer1628), 
LSub12367 = subtract_layer([[[[0.035, 0.8756, 0.8588], [0.5402, 0.8154, 0.0985], [0.51, 0.0208, 0.5288]], [[0.0292, 0.4932, 0.9693], [0.0299, 0.3949, 0.4621], [0.6034, 0.9176, 0.0738]], [[0.2943, 0.7401, 0.3431], [0.6894, 0.6478, 0.0951], [0.7542, 0.1757, 0.2818]]]], [[[[0.8719, 0.8226, 0.74], [0.4838, 0.2132, 0.3763], [0.1374, 0.4079, 0.0885]], [[0.7569, 0.9352, 0.1224], [0.9728, 0.6607, 0.4956], [0.6883, 0.2361, 0.1825]], [[0.7323, 0.6482, 0.5081], [0.4807, 0.3085, 0.888], [0.4067, 0.2092, 0.8339]]]], Sub12367), 
LRes85024 = reshape_layer(Sub12367, [3, 9], Res85024), 
LLoc86897 = locally_connected2D_layer([[[[0.9573]]]], 1, 1,[[[0.2438, 0.5391, 0.0574]]],[[[0, 0, 0]]], 1, 1, Loc86897), 
LRes12830 = reshape_layer(Loc86897, [1, 3], Res12830), 
LZer24065 = zero_padding1D_layer(Res12830, 2, 0, Zer24065), 
LDot483 = dot_layer(Res85024,Zer24065, 1, 1, Dot483), 
LRes12069 = reshape_layer(Dot483, [9, 3, 1], Res12069), 
LThr56082 = thresholded_relu_layer([[[[0.9292], [0.6189]], [[0.793], [0.5787]]]], 1.6278437087500612, Thr56082), 
LSof80524 = softmax_layer(Thr56082, 1, Sof80524), 
LZer49754 = zero_padding2D_layer(Sof80524, 7, 0, 1, 0, Zer49754), 
LSub62293 = subtract_layer(Res12069,Zer49754, Sub62293), 
LCon52994 = concatenate_layer([Sub62293,[[[[0.7157, 0.245, 0.5997], [0.7693, 0.7605, 0.4866], [0.2825, 0.3871, 0.4565]], [[0.259, 0.6547, 0.5078], [0.2887, 0.8716, 0.9588], [0.9775, 0.0731, 0.3659]], [[0.405, 0.3608, 0.5475], [0.888, 0.3412, 0.144], [0.8039, 0.4623, 0.0993]], [[0.0623, 0.757, 0.8278], [0.8442, 0.256, 0.5818], [0.1208, 0.0672, 0.7814]], [[0.2007, 0.9643, 0.5922], [0.9871, 0.4489, 0.9627], [0.0889, 0.4032, 0.5087]], [[0.6865, 0.128, 0.0831], [0.5646, 0.9826, 0.7516], [0.7901, 0.4028, 0.8471]], [[0.3838, 0.0269, 0.8563], [0.1575, 0.6581, 0.6672], [0.5776, 0.2778, 0.4041]], [[0.8694, 0.6129, 0.9209], [0.5979, 0.0278, 0.6449], [0.6811, 0.558, 0.7452]], [[0.5741, 0.336, 0.0475], [0.2027, 0.3173, 0.3546], [0.2288, 0.8433, 0.314]]]]], 3, Con52994), 
LAve71257 = average_layer([Zer1628,Con52994], Ave71257), 
exec_layers([LLoc42907,LZer1628,LSub12367,LRes85024,LLoc86897,LRes12830,LZer24065,LDot483,LRes12069,LThr56082,LSof80524,LZer49754,LSub62293,LCon52994,LAve71257],["Loc42907","Zer1628","Sub12367","Res85024","Loc86897","Res12830","Zer24065","Dot483","Res12069","Thr56082","Sof80524","Zer49754","Sub62293","Con52994","Ave71257"],Ave71257,"Ave71257")

Actual (Unparsed): [[[[-0.0511124, 0.3578500, 0.1225000, 0.2998500], [-0.1130216, 0.3846500, 0.3802500, 0.2433000], [-0.0120338, 0.1412500, 0.1935500, 0.2282500]], [[0.0107243, 0.1295000, 0.3273500, 0.2539000], [0.0237139, 0.1443500, 0.4358000, 0.4794000], [0.0025249, 0.4887500, 0.0365500, 0.1829500]], [[-0.0192546, 0.2025000, 0.1804000, 0.2737500], [-0.0425766, 0.4440000, 0.1706000, 0.0720000], [-0.0045333, 0.4019500, 0.2311500, 0.0496500]], [[0.0243542, 0.0311500, 0.3785000, 0.4139000], [0.0538530, 0.4221000, 0.1280000, 0.2909000], [0.0057339, 0.0604000, 0.0336000, 0.3907000]], [[0.0395946, 0.1003500, 0.4821500, 0.2961000], [0.0875531, 0.4935500, 0.2244500, 0.4813500], [0.0093221, 0.0444500, 0.2016000, 0.2543500]], [[-0.0925274, 0.3432500, 0.0640000, 0.0415500], [-0.2046001, 0.2823000, 0.4913000, 0.3758000], [-0.0217845, 0.3950500, 0.2014000, 0.4235500]], [[0.0405515, 0.1919000, 0.0134500, 0.4281500], [0.0896690, 0.0787500, 0.3290500, 0.3336000], [0.0095474, 0.2888000, 0.1389000, 0.2020500]], [[-0.0039093, 0.4347000, 0.3064500, 0.4604500], [-0.2586443, 0.2989500, 0.0139000, 0.3224500], [-0.1561028, 0.8787019, 0.5062963, 0.8272280]], [[-0.0644272, 0.2870500, 0.1680000, 0.0237500], [-0.3924640, 0.1013500, 0.1586500, 0.1773000], [0.1146406, 0.3907827, 0.8703920, 0.5587675]]]]

Expected (Unparsed): [[[[-0.05111235306,0.35785,0.1225,0.29985],[-0.11302161416999999,0.38465,0.38025,0.2433],[-0.012033835379999998,0.14125,0.19355,0.22825]],[[0.010724258552999999,0.1295,0.32735,0.2539],[0.023713895758499998,0.14435,0.4358,0.4794],[0.0025249074689999997,0.48875,0.03655,0.18295]],[[-0.019254653549999997,0.2025,0.1804,0.27375],[-0.042576635475,0.444,0.1706,0.072],[-0.00453329415,0.40195,0.23115,0.04965]],[[0.024354219369,0.03115,0.3785,0.4139],[0.0538529928705,0.4221,0.128,0.2909],[0.005733930237,0.0604,0.0336,0.3907]],[[0.039594569391000006,0.10035,0.48215,0.2961],[0.08755304494950002,0.49355,0.22445,0.48135],[0.009322101243000001,0.04445,0.2016,0.25435]],[[-0.09252736242300001,0.34325,0.064,0.04155],[-0.20460008647350003,0.2823,0.4913,0.3758],[-0.021784538979,0.39505,0.2014,0.42355]],[[0.040551467325,0.1919,0.01345,0.42815],[0.0896689747125,0.07875,0.32905,0.3336],[0.009547392225,0.2888,0.1389,0.20205]],[[-0.003909278145,0.4347,0.30645,0.46045],[-0.2586443472025,0.29895,0.0139,0.32245],[-0.156102756085,0.87870194,0.50629632,0.82722801]],[[-0.06442723772700001,0.28705,0.168,0.02375],[-0.39246400270150006,0.10135,0.15865,0.1773],[0.11464055802900003,0.390782685,0.8703920300000001,0.55876748]]]]

Actual:   [[[[-0.0511, 0.3579, 0.1225, 0.2999], [-0.113, 0.3847, 0.3803, 0.2433], [-0.012, 0.1413, 0.1936, 0.2283]], [[0.0108, 0.1295, 0.3274, 0.2539], [0.0238, 0.1444, 0.4358, 0.4794], [0.0026, 0.4888, 0.0366, 0.183]], [[-0.0192, 0.2025, 0.1804, 0.2738], [-0.0425, 0.444, 0.1706, 0.072], [-0.0045, 0.402, 0.2312, 0.0497]], [[0.0244, 0.0312, 0.3785, 0.4139], [0.0539, 0.4221, 0.128, 0.2909], [0.0058, 0.0604, 0.0336, 0.3907]], [[0.0396, 0.1004, 0.4822, 0.2961], [0.0876, 0.4936, 0.2245, 0.4814], [0.0094, 0.0445, 0.2016, 0.2544]], [[-0.0925, 0.3433, 0.064, 0.0416], [-0.2046, 0.2823, 0.4913, 0.3758], [-0.0217, 0.3951, 0.2014, 0.4236]], [[0.0406, 0.1919, 0.0135, 0.4282], [0.0897, 0.0788, 0.3291, 0.3336], [0.0096, 0.2888, 0.1389, 0.2021]], [[-0.0039, 0.4347, 0.3065, 0.4605], [-0.2586, 0.299, 0.0139, 0.3225], [-0.1561, 0.8788, 0.5063, 0.8273]], [[-0.0644, 0.2871, 0.168, 0.0238], [-0.3924, 0.1014, 0.1587, 0.1773], [0.1147, 0.3908, 0.8704, 0.5588]]]]

Expected: [[[[-0.0511, 0.3579, 0.1225, 0.2999], [-0.113, 0.3847, 0.3803, 0.2433], [-0.012, 0.1413, 0.1936, 0.2283]], [[0.0108, 0.1295, 0.3274, 0.2539], [0.0238, 0.1444, 0.4358, 0.4794], [0.0026, 0.4888, 0.0366, 0.183]], [[-0.0192, 0.2025, 0.1804, 0.2738], [-0.0425, 0.444, 0.1706, 0.072], [-0.0045, 0.402, 0.2312, 0.0497]], [[0.0244, 0.0312, 0.3785, 0.4139], [0.0539, 0.4221, 0.128, 0.2909], [0.0058, 0.0604, 0.0336, 0.3907]], [[0.0396, 0.1004, 0.4822, 0.2961], [0.0876, 0.4936, 0.2245, 0.4814], [0.0094, 0.0445, 0.2016, 0.2544]], [[-0.0925, 0.3433, 0.064, 0.0416], [-0.2046, 0.2823, 0.4913, 0.3758], [-0.0217, 0.3951, 0.2014, 0.4236]], [[0.0406, 0.1919, 0.0135, 0.4282], [0.0897, 0.0788, 0.3291, 0.3336], [0.0096, 0.2888, 0.1389, 0.2021]], [[-0.0039, 0.4347, 0.3065, 0.4605], [-0.2586, 0.299, 0.0139, 0.3225], [-0.1561, 0.8788, 0.5063, 0.8273]], [[-0.0644, 0.2871, 0.168, 0.0238], [-0.3924, 0.1014, 0.1587, 0.1773], [0.1147, 0.3908, 0.8704, 0.5588]]]]