import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Glo47349 = tf.keras.layers.Input(shape=([1, 2]))
in0Con8848 = tf.keras.layers.Input(shape=([2, 1, 2, 1]))
in0Add51412 = tf.keras.layers.Input(shape=([2, 1, 2, 2]))
in1Add51412 = tf.keras.layers.Input(shape=([2, 1, 2, 2]))
in0Con2720 = tf.keras.layers.Input(shape=([4, 3, 4, 2]))
in0Dot69814 = tf.keras.layers.Input(shape=([2]))
in1Dot69814 = tf.keras.layers.Input(shape=([2]))

Glo47349 = keras.layers.GlobalAveragePooling1D(name = 'Glo47349', )(in0Glo47349)
Res9207 = keras.layers.Reshape((2, 1), name = 'Res9207', )(Glo47349)
Res67863 = keras.layers.Reshape((2, 1, 1), name = 'Res67863', )(Res9207)
Res85108 = keras.layers.Reshape((2, 1, 1, 1), name = 'Res85108', )(Res67863)
Zer40627 = keras.layers.ZeroPadding3D(padding=((0, 0), (0, 0), (1, 0)), name = 'Zer40627', )(Res85108)
Con8848 = keras.layers.Concatenate(axis=4, name = 'Con8848', )([Zer40627,in0Con8848])
Add51412 = keras.layers.Add(name = 'Add51412', )([in0Add51412,in1Add51412])
Ave85574 = keras.layers.Average(name = 'Ave85574', )([Con8848,Add51412])
Zer25667 = keras.layers.ZeroPadding3D(padding=((1, 1), (1, 1), (1, 1)), name = 'Zer25667', )(Ave85574)
Con2720 = keras.layers.Concatenate(axis=4, name = 'Con2720', )([Zer25667,in0Con2720])
Dot69814 = keras.layers.Dot(axes=(1, 1), name = 'Dot69814', )([in0Dot69814,in1Dot69814])
Res92526 = keras.layers.Reshape((1, 1), name = 'Res92526', )(Dot69814)
Res61460 = keras.layers.Reshape((1, 1, 1), name = 'Res61460', )(Res92526)
Res94004 = keras.layers.Reshape((1, 1, 1, 1), name = 'Res94004', )(Res61460)
Glo54740 = keras.layers.GlobalMaxPool3D(name = 'Glo54740', )(Res94004)
Res69963 = keras.layers.Reshape((1, 1), name = 'Res69963', )(Glo54740)
Res65916 = keras.layers.Reshape((1, 1, 1), name = 'Res65916', )(Res69963)
Res63540 = keras.layers.Reshape((1, 1, 1, 1), name = 'Res63540', )(Res65916)
Con88055 = keras.layers.Conv3DTranspose(2, (1, 1, 1),strides=(1, 1, 1), padding='valid', name = 'Con88055', )(Res63540)
Den79173 = keras.layers.Dense(4,name = 'Den79173', )(Con88055)
Zer15003 = keras.layers.ZeroPadding3D(padding=((3, 0), (2, 0), (3, 0)), name = 'Zer15003', )(Den79173)
Mul61443 = keras.layers.Multiply(name = 'Mul61443', )([Con2720,Zer15003])
model = tf.keras.models.Model(inputs=[in0Glo47349,in0Con8848,in0Add51412,in1Add51412,in0Con2720,in0Dot69814,in1Dot69814], outputs=Mul61443)
w = model.get_layer('Con88055').get_weights() 
w[0] = np.array([[[[[0.6268], [0.527]]]]])
w[1] = np.array([0, 0])
model.get_layer('Con88055').set_weights(w) 
w = model.get_layer('Den79173').get_weights() 
w[0] = np.array([[0.5826, 0.5034, 0.3911, 0.2229], [0.4986, 0.4282, 0.4814, 0.2417]])
w[1] = np.array([0.2876, 0.9585, 0.5551, 0.1942])
model.get_layer('Den79173').set_weights(w) 
in0Glo47349 = tf.constant([[[1.1568, 1.7167]]])
in0Con8848 = tf.constant([[[[[0.4674], [0.3099]]], [[[0.8969], [0.4385]]]]])
in0Add51412 = tf.constant([[[[[0.9342, 0.8375], [0.2762, 0.7525]]], [[[0.4728, 0.1215], [0.3601, 0.8366]]]]])
in1Add51412 = tf.constant([[[[[0.1684, 0.473], [0.2697, 0.0423]]], [[[0.852, 0.4539], [0.9877, 0.1317]]]]])
in0Con2720 = tf.constant([[[[[0.9162, 0.4558], [0.2402, 0.185], [0.238, 0.1528], [0.9767, 0.1529]], [[0.3919, 0.2427], [0.1992, 0.4465], [0.8779, 0.5292], [0.5993, 0.1413]], [[0.3087, 0.8361], [0.1058, 0.0631], [0.2304, 0.309], [0.8754, 0.6439]]], [[[0.3873, 0.3657], [0.2186, 0.5698], [0.9812, 0.9092], [0.6831, 0.6794]], [[0.4533, 0.5553], [0.8865, 0.7326], [0.3241, 0.0521], [0.5864, 0.6036]], [[0.6706, 0.7727], [0.9117, 0.1744], [0.8856, 0.1453], [0.6357, 0.7064]]], [[[0.472, 0.1547], [0.8677, 0.7476], [0.7554, 0.5964], [0.5639, 0.6982]], [[0.5646, 0.5901], [0.8136, 0.0024], [0.1255, 0.975], [0.943, 0.5583]], [[0.6412, 0.5983], [0.0984, 0.3468], [0.2918, 0.1788], [0.1196, 0.4686]]], [[[0.6736, 0.3876], [0.1938, 0.7467], [0.0232, 0.0168], [0.994, 0.8052]], [[0.9203, 0.628], [0.7485, 0.0644], [0.5508, 0.8689], [0.9605, 0.4098]], [[0.0235, 0.7245], [0.3062, 0.3819], [0.6816, 0.3314], [0.5741, 0.6149]]]]])
in0Dot69814 = tf.constant([[0.9918, 0.1587]])
in1Dot69814 = tf.constant([[0.5091, 0.4436]])
print (np.array2string(model.predict([in0Glo47349,in0Con8848,in0Add51412,in1Add51412,in0Con2720,in0Dot69814,in1Dot69814],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Mul61443.png')

LGlo47349 = global_average_pooling1D_layer([[[1.1568, 1.7167]]], Glo47349), 
LRes9207 = reshape_layer(Glo47349, [2, 1], Res9207), 
LRes67863 = reshape_layer(Res9207, [2, 1, 1], Res67863), 
LRes85108 = reshape_layer(Res67863, [2, 1, 1, 1], Res85108), 
LZer40627 = zero_padding3D_layer(Res85108, 0, 0, 0, 0, 1, 0, Zer40627), 
LCon8848 = concatenate_layer([Zer40627,[[[[[0.4674], [0.3099]]], [[[0.8969], [0.4385]]]]]], 4, Con8848), 
LAdd51412 = add_layer([[[[[[0.9342, 0.8375], [0.2762, 0.7525]]], [[[0.4728, 0.1215], [0.3601, 0.8366]]]]], [[[[[0.1684, 0.473], [0.2697, 0.0423]]], [[[0.852, 0.4539], [0.9877, 0.1317]]]]]], Add51412), 
LAve85574 = average_layer([Con8848,Add51412], Ave85574), 
LZer25667 = zero_padding3D_layer(Ave85574, 1, 1, 1, 1, 1, 1, Zer25667), 
LCon2720 = concatenate_layer([Zer25667,[[[[[0.9162, 0.4558], [0.2402, 0.185], [0.238, 0.1528], [0.9767, 0.1529]], [[0.3919, 0.2427], [0.1992, 0.4465], [0.8779, 0.5292], [0.5993, 0.1413]], [[0.3087, 0.8361], [0.1058, 0.0631], [0.2304, 0.309], [0.8754, 0.6439]]], [[[0.3873, 0.3657], [0.2186, 0.5698], [0.9812, 0.9092], [0.6831, 0.6794]], [[0.4533, 0.5553], [0.8865, 0.7326], [0.3241, 0.0521], [0.5864, 0.6036]], [[0.6706, 0.7727], [0.9117, 0.1744], [0.8856, 0.1453], [0.6357, 0.7064]]], [[[0.472, 0.1547], [0.8677, 0.7476], [0.7554, 0.5964], [0.5639, 0.6982]], [[0.5646, 0.5901], [0.8136, 0.0024], [0.1255, 0.975], [0.943, 0.5583]], [[0.6412, 0.5983], [0.0984, 0.3468], [0.2918, 0.1788], [0.1196, 0.4686]]], [[[0.6736, 0.3876], [0.1938, 0.7467], [0.0232, 0.0168], [0.994, 0.8052]], [[0.9203, 0.628], [0.7485, 0.0644], [0.5508, 0.8689], [0.9605, 0.4098]], [[0.0235, 0.7245], [0.3062, 0.3819], [0.6816, 0.3314], [0.5741, 0.6149]]]]]], 4, Con2720), 
LDot69814 = dot_layer([[0.9918, 0.1587]], [[0.5091, 0.4436]], 1, 1, Dot69814), 
LRes92526 = reshape_layer(Dot69814, [1, 1], Res92526), 
LRes61460 = reshape_layer(Res92526, [1, 1, 1], Res61460), 
LRes94004 = reshape_layer(Res61460, [1, 1, 1, 1], Res94004), 
LGlo54740 = global_max_pool3D_layer(Res94004, Glo54740), 
LRes69963 = reshape_layer(Glo54740, [1, 1], Res69963), 
LRes65916 = reshape_layer(Res69963, [1, 1, 1], Res65916), 
LRes63540 = reshape_layer(Res65916, [1, 1, 1, 1], Res63540), 
LCon88055 = conv3D_transpose_layer(Res63540, 1, 1, 1,[[[[[0.6268], [0.527]]]]],[0, 0], 1, 1, 1, false, Con88055), 
LDen79173 = dense_layer(Con88055, [[0.5826, 0.5034, 0.3911, 0.2229], [0.4986, 0.4282, 0.4814, 0.2417]],[0.2876, 0.9585, 0.5551, 0.1942], Den79173), 
LZer15003 = zero_padding3D_layer(Den79173, 3, 0, 2, 0, 3, 0, Zer15003), 
LMul61443 = multiply_layer([Con2720,Zer15003], Mul61443), 
exec_layers([LGlo47349,LRes9207,LRes67863,LRes85108,LZer40627,LCon8848,LAdd51412,LAve85574,LZer25667,LCon2720,LDot69814,LRes92526,LRes61460,LRes94004,LGlo54740,LRes69963,LRes65916,LRes63540,LCon88055,LDen79173,LZer15003,LMul61443],["Glo47349","Res9207","Res67863","Res85108","Zer40627","Con8848","Add51412","Ave85574","Zer25667","Con2720","Dot69814","Res92526","Res61460","Res94004","Glo54740","Res69963","Res65916","Res63540","Con88055","Den79173","Zer15003","Mul61443"],Mul61443,"Mul61443")

Actual (Unparsed): [[[[[0.0000000, 0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000, 0.0000000]], [[0.0000000, 0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000, 0.0000000]], [[0.0000000, 0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000, 0.0000000]]], [[[0.0000000, 0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000, 0.0000000]], [[0.0000000, 0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000, 0.0000000]], [[0.0000000, 0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000, 0.0000000]]], [[[0.0000000, 0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000, 0.0000000]], [[0.0000000, 0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000, 0.0000000]], [[0.0000000, 0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000, 0.0000000]]], [[[0.0000000, 0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000, 0.0000000]], [[0.0000000, 0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000, 0.0000000]], [[0.0000000, 0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.4834465, 0.2139011]]]]]

Expected (Unparsed): [[[[[0,0,0.0,0.0],[0,0,0.0,0.0],[0,0,0.0,0.0],[0,0,0.0,0.0]],[[0,0,0.0,0.0],[0,0,0.0,0.0],[0,0,0.0,0.0],[0,0,0.0,0.0]],[[0,0,0.0,0.0],[0,0,0.0,0.0],[0,0,0.0,0.0],[0,0,0.0,0.0]]],[[[0,0,0.0,0.0],[0,0,0.0,0.0],[0,0,0.0,0.0],[0,0,0.0,0.0]],[[0,0,0.0,0.0],[0.0,0.0,0.0,0.0],[0.0,0.0,0.0,0.0],[0,0,0.0,0.0]],[[0,0,0.0,0.0],[0,0,0.0,0.0],[0,0,0.0,0.0],[0,0,0.0,0.0]]],[[[0,0,0.0,0.0],[0,0,0.0,0.0],[0,0,0.0,0.0],[0,0,0.0,0.0]],[[0,0,0.0,0.0],[0.0,0.0,0.0,0.0],[0.0,0.0,0.0,0.0],[0,0,0.0,0.0]],[[0,0,0.0,0.0],[0,0,0.0,0.0],[0,0,0.0,0.0],[0,0,0.0,0.0]]],[[[0,0,0.0,0.0],[0,0,0.0,0.0],[0,0,0.0,0.0],[0,0,0.0,0.0]],[[0,0,0.0,0.0],[0,0,0.0,0.0],[0,0,0.0,0.0],[0,0,0.0,0.0]],[[0,0,0.0,0.0],[0,0,0.0,0.0],[0,0,0.0,0.0],[0.0,0.0,0.48344648638747156,0.21390111580671267]]]]]

Actual:   [[[[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]], [[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]], [[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]], [[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]], [[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]], [[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]], [[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]], [[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]], [[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]], [[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]], [[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]], [[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0.4835, 0.214]]]]]

Expected: [[[[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]], [[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]], [[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]], [[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]], [[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]], [[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]], [[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]], [[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]], [[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]], [[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]], [[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]], [[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0.4835, 0.214]]]]]