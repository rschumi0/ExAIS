import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Mul16206 = tf.keras.layers.Input(shape=([1, 2, 2]))
in1Mul16206 = tf.keras.layers.Input(shape=([1, 2, 2]))
in0Glo28097 = tf.keras.layers.Input(shape=([1, 1]))
in0Con71131 = tf.keras.layers.Input(shape=([3]))

Mul16206 = keras.layers.Multiply(name = 'Mul16206', )([in0Mul16206,in1Mul16206])
Res65053 = keras.layers.Reshape((1, 4), name = 'Res65053', )(Mul16206)
Fla68185 = keras.layers.Flatten(name = 'Fla68185', )(Res65053)
Glo28097 = keras.layers.GlobalAveragePooling1D(name = 'Glo28097', )(in0Glo28097)
Res24734 = keras.layers.Reshape((1, 1), name = 'Res24734', )(Glo28097)
Res18312 = keras.layers.Reshape((1, 1, 1), name = 'Res18312', )(Res24734)
Res7230 = keras.layers.Reshape((1, 1, 1, 1), name = 'Res7230', )(Res18312)
Glo60715 = keras.layers.GlobalMaxPool3D(name = 'Glo60715', )(Res7230)
Con71131 = keras.layers.Concatenate(axis=1, name = 'Con71131', )([Glo60715,in0Con71131])
Ave40738 = keras.layers.Average(name = 'Ave40738', )([Fla68185,Con71131])
Lea29298 = keras.layers.LeakyReLU(alpha=5.5683343025250025, name = 'Lea29298', )(Ave40738)
model = tf.keras.models.Model(inputs=[in0Mul16206,in1Mul16206,in0Glo28097,in0Con71131], outputs=Lea29298)
in0Mul16206 = tf.constant([[[[0.5777, 0.9919], [0.3248, 0.9612]]]])
in1Mul16206 = tf.constant([[[[0.7943, 0.0284], [0.6644, 0.2026]]]])
in0Glo28097 = tf.constant([[[1.4208]]])
in0Con71131 = tf.constant([[0.4951, 0.1051, 0.9734]])
print (np.array2string(model.predict([in0Mul16206,in1Mul16206,in0Glo28097,in0Con71131],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Lea29298.png')

LMul16206 = multiply_layer([[[[[0.5777, 0.9919], [0.3248, 0.9612]]]], [[[[0.7943, 0.0284], [0.6644, 0.2026]]]]], Mul16206), 
LRes65053 = reshape_layer(Mul16206, [1, 4], Res65053), 
LFla68185 = flatten_layer(Res65053, Fla68185), 
LGlo28097 = global_average_pooling1D_layer([[[1.4208]]], Glo28097), 
LRes24734 = reshape_layer(Glo28097, [1, 1], Res24734), 
LRes18312 = reshape_layer(Res24734, [1, 1, 1], Res18312), 
LRes7230 = reshape_layer(Res18312, [1, 1, 1, 1], Res7230), 
LGlo60715 = global_max_pool3D_layer(Res7230, Glo60715), 
LCon71131 = concatenate_layer([Glo60715,[[0.4951, 0.1051, 0.9734]]], 1, Con71131), 
LAve40738 = average_layer([Fla68185,Con71131], Ave40738), 
LLea29298 = leaky_relu_layer(Ave40738, 5.5683343025250025, Lea29298), 
exec_layers([LMul16206,LRes65053,LFla68185,LGlo28097,LRes24734,LRes18312,LRes7230,LGlo60715,LCon71131,LAve40738,LLea29298],["Mul16206","Res65053","Fla68185","Glo28097","Res24734","Res18312","Res7230","Glo60715","Con71131","Ave40738","Lea29298"],Lea29298,"Lea29298")

Actual (Unparsed): [[0.9398336, 0.2616350, 0.1604486, 0.5840696]]

Expected (Unparsed): [[0.9398335550000001,0.26163498,0.16044856,0.58406956]]

Actual:   [[0.9399, 0.2617, 0.1605, 0.5841]]

Expected: [[0.9399, 0.2617, 0.1605, 0.5841]]