import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Zer21376 = tf.keras.layers.Input(shape=([3, 4, 1, 2]))
in0Ave54043 = tf.keras.layers.Input(shape=([2, 2, 1, 1]))
in1Ave54043 = tf.keras.layers.Input(shape=([2, 2, 1, 1]))
in0Min56284 = tf.keras.layers.Input(shape=([2, 1]))
in1Min56284 = tf.keras.layers.Input(shape=([2, 1]))
in0Con90114 = tf.keras.layers.Input(shape=([2, 1]))
in0Add64326 = tf.keras.layers.Input(shape=([1, 1, 1]))
in1Add64326 = tf.keras.layers.Input(shape=([1, 1, 1]))
in0Con40169 = tf.keras.layers.Input(shape=([5, 6, 5]))

Zer21376 = keras.layers.ZeroPadding3D(padding=((1, 1), (1, 1), (1, 1)), name = 'Zer21376', )(in0Zer21376)
PRe52328 = keras.layers.PReLU(name = 'PRe52328', )(Zer21376)
Res23336 = keras.layers.Reshape((5, 6, 6), name = 'Res23336', )(PRe52328)
Ave54043 = keras.layers.Average(name = 'Ave54043', )([in0Ave54043,in1Ave54043])
Res3420 = keras.layers.Reshape((2, 2, 1), name = 'Res3420', )(Ave54043)
Res45256 = keras.layers.Reshape((2, 2), name = 'Res45256', )(Res3420)
Min56284 = keras.layers.Minimum(name = 'Min56284', )([in0Min56284,in1Min56284])
Con90114 = keras.layers.Concatenate(axis=2, name = 'Con90114', )([Min56284,in0Con90114])
Mul44655 = keras.layers.Multiply(name = 'Mul44655', )([Res45256,Con90114])
Ave93741 = keras.layers.AveragePooling1D(pool_size=(1), name = 'Ave93741', )(Mul44655)
Res84090 = keras.layers.Reshape((2, 2, 1), name = 'Res84090', )(Ave93741)
Add64326 = keras.layers.Add(name = 'Add64326', )([in0Add64326,in1Add64326])
Zer56472 = keras.layers.ZeroPadding2D(padding=((1, 0), (1, 0)), name = 'Zer56472', )(Add64326)
Ave96735 = keras.layers.Average(name = 'Ave96735', )([Res84090,Zer56472])
Zer35869 = keras.layers.ZeroPadding2D(padding=((3, 0), (4, 0)), name = 'Zer35869', )(Ave96735)
Con40169 = keras.layers.Concatenate(axis=3, name = 'Con40169', )([Zer35869,in0Con40169])
Sub16901 = keras.layers.Subtract(name = 'Sub16901', )([Res23336,Con40169])
model = tf.keras.models.Model(inputs=[in0Zer21376,in0Ave54043,in1Ave54043,in0Min56284,in1Min56284,in0Con90114,in0Add64326,in1Add64326,in0Con40169], outputs=Sub16901)
w = model.get_layer('PRe52328').get_weights() 
w[0] = np.array([[[[0.6638, 0.6867], [0.6503, 0.8689], [0.9763, 0.4246]], [[0.7386, 0.1987], [0.6426, 0.6334], [0.6174, 0.0482]], [[0.6087, 0.9268], [0.3222, 0.3254], [0.6051, 0.1984]], [[0.5457, 0.0486], [0.1369, 0.1344], [0.2615, 0.3428]], [[0.7214, 0.3139], [0.3709, 0.1064], [0.0556, 0.4535]], [[0.8528, 0.8795], [0.0255, 0.7462], [0.517, 0.8508]]], [[[0.7243, 0.9149], [0.6066, 0.1293], [0.9423, 0.5586]], [[0.1806, 0.3777], [0.9059, 0.5996], [0.4157, 0.6532]], [[0.4017, 0.1636], [0.7118, 0.8358], [0.8011, 0.0142]], [[0.7593, 0.3364], [0.9187, 0.7503], [0.5322, 0.8725]], [[0.0821, 0.3288], [0.5081, 0.9739], [0.2696, 0.1218]], [[0.2828, 0.5397], [0.6802, 0.6358], [0.1496, 0.2061]]], [[[0.6415, 0.2284], [0.1415, 0.5028], [0.3303, 0.6406]], [[0.4967, 0.7782], [0.3858, 0.9308], [0.503, 0.6555]], [[0.127, 0.4442], [0.1984, 0.3452], [0.7525, 0.7796]], [[0.4621, 0.484], [0.5957, 0.3278], [0.6184, 0.2959]], [[0.2369, 0.8449], [0.7911, 0.7805], [0.0331, 0.6994]], [[0.8977, 0.3176], [0.4146, 0.8828], [0.3539, 0.5531]]], [[[0.1204, 0.613], [0.2672, 0.6754], [0.3964, 0.372]], [[0.1471, 0.2297], [0.0637, 0.5203], [0.928, 0.4273]], [[0.2802, 0.208], [0.4107, 0.5031], [0.7648, 0.1644]], [[0.0646, 0.0498], [0.2295, 0.0871], [0.4982, 0.4163]], [[0.7772, 0.7772], [0.8085, 0.1936], [0.0575, 0.869]], [[0.4491, 0.5337], [0.0505, 0.9895], [0.2169, 0.5457]]], [[[0.4452, 0.4492], [0.4543, 0.2981], [0.7173, 0.1132]], [[0.5848, 0.0173], [0.1734, 0.9301], [0.6563, 0.9188]], [[0.4268, 0.7088], [0.6561, 0.7324], [0.9962, 0.1226]], [[0.9746, 0.3906], [0.9784, 0.594], [0.5496, 0.5384]], [[0.0356, 0.6665], [0.8993, 0.49], [0.2596, 0.7078]], [[0.4673, 0.0125], [0.8267, 0.3017], [0.4432, 0.8463]]]])
model.get_layer('PRe52328').set_weights(w) 
in0Zer21376 = tf.constant([[[[[1.1113, 1.0025]], [[1.1618, 1.6635]], [[1.9574, 1.8438]], [[1.0694, 1.3411]]], [[[1.2018, 1.8945]], [[1.0355, 1.3692]], [[1.4113, 1.4827]], [[1.8918, 1.5463]]], [[[1.562, 1.3445]], [[1.157, 1.6629]], [[1.7064, 1.0993]], [[1.4696, 1.417]]]]])
in0Ave54043 = tf.constant([[[[[0.9833]], [[0.6128]]], [[[0.2012]], [[0.1158]]]]])
in1Ave54043 = tf.constant([[[[[0.4864]], [[0.6741]]], [[[0.2948]], [[0.8534]]]]])
in0Min56284 = tf.constant([[[0.8172], [0.0095]]])
in1Min56284 = tf.constant([[[0.313], [0.713]]])
in0Con90114 = tf.constant([[[0.3935], [0.7152]]])
in0Add64326 = tf.constant([[[[0.9803]]]])
in1Add64326 = tf.constant([[[[0.0302]]]])
in0Con40169 = tf.constant([[[[0.0127, 0.1178, 0.7043, 0.4966, 0.6015], [0.9474, 0.4611, 0.9315, 0.5856, 0.1357], [0.0315, 0.809, 0.1112, 0.2049, 0.8207], [0.3007, 0.7205, 0.5453, 0.6818, 0.63], [0.8714, 0.1535, 0.3343, 0.0798, 0.6555], [0.319, 0.9323, 0.8849, 0.7941, 0.4476]], [[0.5025, 0.767, 0.407, 0.2884, 0.7785], [0.9601, 0.4955, 0.1922, 0.2951, 0.4522], [0.5566, 0.6715, 0.4739, 0.8288, 0.2577], [0.4531, 0.8305, 0.5358, 0.6374, 0.4201], [0.3659, 0.6071, 0.872, 0.3252, 0.6648], [0.8963, 0.2485, 0.9227, 0.2179, 0.6382]], [[0.6189, 0.2166, 0.0081, 0.7284, 0.2762], [0.8482, 0.46, 0.4528, 0.8879, 0.2604], [0.4324, 0.5256, 0.8512, 0.1651, 0.0595], [0.2034, 0.1919, 0.0132, 0.8893, 0.9276], [0.9207, 0.6223, 0.9522, 0.42, 0.5793], [0.851, 0.1034, 0.408, 0.5642, 0.2256]], [[0.2262, 0.1841, 0.6978, 0.7233, 0.657], [0.0231, 0.4317, 0.4954, 0.4998, 0.0704], [0.0148, 0.1733, 0.3337, 0.6945, 0.9339], [0.5416, 0.185, 0.4517, 0.9465, 0.7878], [0.5368, 0.7495, 0.062, 0.2391, 0.5768], [0.0171, 0.9015, 0.4835, 0.8483, 0.69]], [[0.968, 0.0407, 0.9616, 0.5985, 0.4916], [0.2921, 0.0465, 0.4147, 0.6822, 0.2123], [0.1847, 0.6553, 0.4139, 0.5535, 0.146], [0.3652, 0.5984, 0.524, 0.3687, 0.0134], [0.7583, 0.6779, 0.2799, 0.3203, 0.605], [0.6849, 0.7242, 0.7075, 0.7447, 0.8856]]]])
print (np.array2string(model.predict([in0Zer21376,in0Ave54043,in1Ave54043,in0Min56284,in1Min56284,in0Con90114,in0Add64326,in1Add64326,in0Con40169],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Sub16901.png')

LZer21376 = zero_padding3D_layer([[[[[1.1113, 1.0025]], [[1.1618, 1.6635]], [[1.9574, 1.8438]], [[1.0694, 1.3411]]], [[[1.2018, 1.8945]], [[1.0355, 1.3692]], [[1.4113, 1.4827]], [[1.8918, 1.5463]]], [[[1.562, 1.3445]], [[1.157, 1.6629]], [[1.7064, 1.0993]], [[1.4696, 1.417]]]]], 1, 1, 1, 1, 1, 1, Zer21376), 
LPRe52328 = prelu_layer(Zer21376, [[[[0.6638, 0.6867], [0.6503, 0.8689], [0.9763, 0.4246]], [[0.7386, 0.1987], [0.6426, 0.6334], [0.6174, 0.0482]], [[0.6087, 0.9268], [0.3222, 0.3254], [0.6051, 0.1984]], [[0.5457, 0.0486], [0.1369, 0.1344], [0.2615, 0.3428]], [[0.7214, 0.3139], [0.3709, 0.1064], [0.0556, 0.4535]], [[0.8528, 0.8795], [0.0255, 0.7462], [0.517, 0.8508]]], [[[0.7243, 0.9149], [0.6066, 0.1293], [0.9423, 0.5586]], [[0.1806, 0.3777], [0.9059, 0.5996], [0.4157, 0.6532]], [[0.4017, 0.1636], [0.7118, 0.8358], [0.8011, 0.0142]], [[0.7593, 0.3364], [0.9187, 0.7503], [0.5322, 0.8725]], [[0.0821, 0.3288], [0.5081, 0.9739], [0.2696, 0.1218]], [[0.2828, 0.5397], [0.6802, 0.6358], [0.1496, 0.2061]]], [[[0.6415, 0.2284], [0.1415, 0.5028], [0.3303, 0.6406]], [[0.4967, 0.7782], [0.3858, 0.9308], [0.503, 0.6555]], [[0.127, 0.4442], [0.1984, 0.3452], [0.7525, 0.7796]], [[0.4621, 0.484], [0.5957, 0.3278], [0.6184, 0.2959]], [[0.2369, 0.8449], [0.7911, 0.7805], [0.0331, 0.6994]], [[0.8977, 0.3176], [0.4146, 0.8828], [0.3539, 0.5531]]], [[[0.1204, 0.613], [0.2672, 0.6754], [0.3964, 0.372]], [[0.1471, 0.2297], [0.0637, 0.5203], [0.928, 0.4273]], [[0.2802, 0.208], [0.4107, 0.5031], [0.7648, 0.1644]], [[0.0646, 0.0498], [0.2295, 0.0871], [0.4982, 0.4163]], [[0.7772, 0.7772], [0.8085, 0.1936], [0.0575, 0.869]], [[0.4491, 0.5337], [0.0505, 0.9895], [0.2169, 0.5457]]], [[[0.4452, 0.4492], [0.4543, 0.2981], [0.7173, 0.1132]], [[0.5848, 0.0173], [0.1734, 0.9301], [0.6563, 0.9188]], [[0.4268, 0.7088], [0.6561, 0.7324], [0.9962, 0.1226]], [[0.9746, 0.3906], [0.9784, 0.594], [0.5496, 0.5384]], [[0.0356, 0.6665], [0.8993, 0.49], [0.2596, 0.7078]], [[0.4673, 0.0125], [0.8267, 0.3017], [0.4432, 0.8463]]]], PRe52328), 
LRes23336 = reshape_layer(PRe52328, [5, 6, 6], Res23336), 
LAve54043 = average_layer([[[[[[0.9833]], [[0.6128]]], [[[0.2012]], [[0.1158]]]]], [[[[[0.4864]], [[0.6741]]], [[[0.2948]], [[0.8534]]]]]], Ave54043), 
LRes3420 = reshape_layer(Ave54043, [2, 2, 1], Res3420), 
LRes45256 = reshape_layer(Res3420, [2, 2], Res45256), 
LMin56284 = minimum_layer([[[[0.8172], [0.0095]]], [[[0.313], [0.713]]]], Min56284), 
LCon90114 = concatenate_layer([Min56284,[[[0.3935], [0.7152]]]], 2, Con90114), 
LMul44655 = multiply_layer([Res45256,Con90114], Mul44655), 
LAve93741 = average_pooling1D_layer(Mul44655, 1, Ave93741), 
LRes84090 = reshape_layer(Ave93741, [2, 2, 1], Res84090), 
LAdd64326 = add_layer([[[[[0.9803]]]], [[[[0.0302]]]]], Add64326), 
LZer56472 = zero_padding2D_layer(Add64326, 1, 0, 1, 0, Zer56472), 
LAve96735 = average_layer([Res84090,Zer56472], Ave96735), 
LZer35869 = zero_padding2D_layer(Ave96735, 3, 0, 4, 0, Zer35869), 
LCon40169 = concatenate_layer([Zer35869,[[[[0.0127, 0.1178, 0.7043, 0.4966, 0.6015], [0.9474, 0.4611, 0.9315, 0.5856, 0.1357], [0.0315, 0.809, 0.1112, 0.2049, 0.8207], [0.3007, 0.7205, 0.5453, 0.6818, 0.63], [0.8714, 0.1535, 0.3343, 0.0798, 0.6555], [0.319, 0.9323, 0.8849, 0.7941, 0.4476]], [[0.5025, 0.767, 0.407, 0.2884, 0.7785], [0.9601, 0.4955, 0.1922, 0.2951, 0.4522], [0.5566, 0.6715, 0.4739, 0.8288, 0.2577], [0.4531, 0.8305, 0.5358, 0.6374, 0.4201], [0.3659, 0.6071, 0.872, 0.3252, 0.6648], [0.8963, 0.2485, 0.9227, 0.2179, 0.6382]], [[0.6189, 0.2166, 0.0081, 0.7284, 0.2762], [0.8482, 0.46, 0.4528, 0.8879, 0.2604], [0.4324, 0.5256, 0.8512, 0.1651, 0.0595], [0.2034, 0.1919, 0.0132, 0.8893, 0.9276], [0.9207, 0.6223, 0.9522, 0.42, 0.5793], [0.851, 0.1034, 0.408, 0.5642, 0.2256]], [[0.2262, 0.1841, 0.6978, 0.7233, 0.657], [0.0231, 0.4317, 0.4954, 0.4998, 0.0704], [0.0148, 0.1733, 0.3337, 0.6945, 0.9339], [0.5416, 0.185, 0.4517, 0.9465, 0.7878], [0.5368, 0.7495, 0.062, 0.2391, 0.5768], [0.0171, 0.9015, 0.4835, 0.8483, 0.69]], [[0.968, 0.0407, 0.9616, 0.5985, 0.4916], [0.2921, 0.0465, 0.4147, 0.6822, 0.2123], [0.1847, 0.6553, 0.4139, 0.5535, 0.146], [0.3652, 0.5984, 0.524, 0.3687, 0.0134], [0.7583, 0.6779, 0.2799, 0.3203, 0.605], [0.6849, 0.7242, 0.7075, 0.7447, 0.8856]]]]], 3, Con40169), 
LSub16901 = subtract_layer(Res23336,Con40169, Sub16901), 
exec_layers([LZer21376,LPRe52328,LRes23336,LAve54043,LRes3420,LRes45256,LMin56284,LCon90114,LMul44655,LAve93741,LRes84090,LAdd64326,LZer56472,LAve96735,LZer35869,LCon40169,LSub16901],["Zer21376","PRe52328","Res23336","Ave54043","Res3420","Res45256","Min56284","Con90114","Mul44655","Ave93741","Res84090","Add64326","Zer56472","Ave96735","Zer35869","Con40169","Sub16901"],Sub16901,"Sub16901")

Actual (Unparsed): [[[[0.0000000, -0.0127000, -0.1178000, -0.7043000, -0.4966000, -0.6015000], [0.0000000, -0.9474000, -0.4611000, -0.9315000, -0.5856000, -0.1357000], [0.0000000, -0.0315000, -0.8090000, -0.1112000, -0.2049000, -0.8207000], [0.0000000, -0.3007000, -0.7205000, -0.5453000, -0.6818000, -0.6300000], [0.0000000, -0.8714000, -0.1535000, -0.3343000, -0.0798000, -0.6555000], [0.0000000, -0.3190000, -0.9323000, -0.8849000, -0.7941000, -0.4476000]], [[0.0000000, -0.5025000, -0.7670000, -0.4070000, -0.2884000, -0.7785000], [0.0000000, -0.9601000, 0.6158000, 0.8103001, -0.2951000, -0.4522000], [0.0000000, -0.5566000, 0.4903000, 1.1896000, -0.8288000, -0.2577000], [0.0000000, -0.4531000, 1.1269000, 1.3080000, -0.6374000, -0.4201000], [0.0000000, -0.3659000, 0.4622999, 0.4691000, -0.3252000, -0.6648000], [0.0000000, -0.8963000, -0.2485000, -0.9227000, -0.2179000, -0.6382000]], [[0.0000000, -0.6189000, -0.2166000, -0.0081000, -0.7284000, -0.2762000], [0.0000000, -0.8482000, 0.7418000, 1.4417000, -0.8879000, -0.2604000], [0.0000000, -0.4324000, 0.5099000, 0.5180000, -0.1651000, -0.0595000], [0.0000000, -0.2034000, 1.2193999, 1.4695000, -0.8893000, -0.9276000], [0.0000000, -0.9207000, 1.2695000, 0.5941001, -0.4200000, -0.5793000], [0.0000000, -0.8510000, -0.1034000, -0.4080000, -0.5642000, -0.2256000]], [[0.0000000, -0.2262000, -0.1841000, -0.6978000, -0.7233000, -0.6570000], [0.0000000, -0.0231000, 1.1303000, 0.8490999, -0.4998000, -0.0704000], [0.0000000, -0.0148000, 0.9836999, 1.3292000, -0.6945000, -0.9339000], [0.0000000, -0.5416000, 1.5214000, 0.6476000, -0.9465000, -0.7878000], [-0.1150040, -0.5368000, 0.7201000, 1.3550001, -0.2391000, -0.5768000], [-0.1265988, -0.0171000, -0.9015000, -0.4835000, -0.8483000, -0.6900000]], [[0.0000000, -0.9680000, -0.0407000, -0.9616000, -0.5985000, -0.4916000], [0.0000000, -0.2921000, -0.0465000, -0.4147000, -0.6822000, -0.2123000], [0.0000000, -0.1847000, -0.6553000, -0.4139000, -0.5535000, -0.1460000], [0.0000000, -0.3652000, -0.5984000, -0.5240000, -0.3687000, -0.0134000], [-0.0011780, -0.7583000, -0.6779000, -0.2799000, -0.3203000, -0.6050000], [-0.6785430, -0.6849000, -0.7242000, -0.7075000, -0.7447000, -0.8856000]]]]

Expected (Unparsed): [[[[0,-0.0127,-0.1178,-0.7043,-0.4966,-0.6015],[0,-0.9474,-0.4611,-0.9315,-0.5856,-0.1357],[0,-0.0315,-0.809,-0.1112,-0.2049,-0.8207],[0,-0.3007,-0.7205,-0.5453,-0.6818,-0.63],[0,-0.8714,-0.1535,-0.3343,-0.0798,-0.6555],[0,-0.319,-0.9323,-0.8849,-0.7941,-0.4476]],[[0,-0.5025,-0.767,-0.407,-0.2884,-0.7785],[0,-0.9601,0.6157999999999999,0.8102999999999999,-0.2951,-0.4522],[0,-0.5566,0.49029999999999996,1.1896,-0.8288,-0.2577],[0,-0.4531,1.1269,1.308,-0.6374,-0.4201],[0,-0.3659,0.46229999999999993,0.46909999999999996,-0.3252,-0.6648],[0,-0.8963,-0.2485,-0.9227,-0.2179,-0.6382]],[[0,-0.6189,-0.2166,-0.0081,-0.7284,-0.2762],[0,-0.8482,0.7418,1.4417,-0.8879,-0.2604],[0,-0.4324,0.5099000000000001,0.518,-0.1651,-0.0595],[0,-0.2034,1.2194,1.4694999999999998,-0.8893,-0.9276],[0,-0.9207,1.2694999999999999,0.5941,-0.42,-0.5793],[0,-0.851,-0.1034,-0.408,-0.5642,-0.2256]],[[0,-0.2262,-0.1841,-0.6978,-0.7233,-0.657],[0,-0.0231,1.1303,0.8491,-0.4998,-0.0704],[0,-0.0148,0.9837,1.3292000000000002,-0.6945,-0.9339],[0,-0.5416,1.5213999999999999,0.6476,-0.9465,-0.7878],[-0.115004025,-0.5368,0.7201,1.355,-0.2391,-0.5768],[-0.12659878750000003,-0.0171,-0.9015,-0.4835,-0.8483,-0.69]],[[0,-0.968,-0.0407,-0.9616,-0.5985,-0.4916],[0,-0.2921,-0.0465,-0.4147,-0.6822,-0.2123],[0,-0.1847,-0.6553,-0.4139,-0.5535,-0.146],[0,-0.3652,-0.5984,-0.524,-0.3687,-0.0134],[-0.001178,-0.7583,-0.6779,-0.2799,-0.3203,-0.605],[-0.6785429599999999,-0.6849,-0.7242,-0.7075,-0.7447,-0.8856]]]]

Actual:   [[[[0, -0.0127, -0.1178, -0.7043, -0.4966, -0.6015], [0, -0.9474, -0.4611, -0.9315, -0.5856, -0.1357], [0, -0.0315, -0.809, -0.1112, -0.2049, -0.8207], [0, -0.3007, -0.7205, -0.5453, -0.6818, -0.63], [0, -0.8714, -0.1535, -0.3343, -0.0798, -0.6555], [0, -0.319, -0.9323, -0.8849, -0.7941, -0.4476]], [[0, -0.5025, -0.767, -0.407, -0.2884, -0.7785], [0, -0.9601, 0.6158, 0.8104, -0.2951, -0.4522], [0, -0.5566, 0.4903, 1.1896, -0.8288, -0.2577], [0, -0.4531, 1.1269, 1.308, -0.6374, -0.4201], [0, -0.3659, 0.4623, 0.4691, -0.3252, -0.6648], [0, -0.8963, -0.2485, -0.9227, -0.2179, -0.6382]], [[0, -0.6189, -0.2166, -0.0081, -0.7284, -0.2762], [0, -0.8482, 0.7418, 1.4417, -0.8879, -0.2604], [0, -0.4324, 0.5099, 0.518, -0.1651, -0.0595], [0, -0.2034, 1.2194, 1.4695, -0.8893, -0.9276], [0, -0.9207, 1.2695, 0.5942, -0.42, -0.5793], [0, -0.851, -0.1034, -0.408, -0.5642, -0.2256]], [[0, -0.2262, -0.1841, -0.6978, -0.7233, -0.657], [0, -0.0231, 1.1303, 0.8491, -0.4998, -0.0704], [0, -0.0148, 0.9837, 1.3292, -0.6945, -0.9339], [0, -0.5416, 1.5214, 0.6476, -0.9465, -0.7878], [-0.115, -0.5368, 0.7201, 1.3551, -0.2391, -0.5768], [-0.1265, -0.0171, -0.9015, -0.4835, -0.8483, -0.69]], [[0, -0.968, -0.0407, -0.9616, -0.5985, -0.4916], [0, -0.2921, -0.0465, -0.4147, -0.6822, -0.2123], [0, -0.1847, -0.6553, -0.4139, -0.5535, -0.146], [0, -0.3652, -0.5984, -0.524, -0.3687, -0.0134], [-0.0011, -0.7583, -0.6779, -0.2799, -0.3203, -0.605], [-0.6785, -0.6849, -0.7242, -0.7075, -0.7447, -0.8856]]]]

Expected: [[[[0, -0.0127, -0.1178, -0.7043, -0.4966, -0.6015], [0, -0.9474, -0.4611, -0.9315, -0.5856, -0.1357], [0, -0.0315, -0.809, -0.1112, -0.2049, -0.8207], [0, -0.3007, -0.7205, -0.5453, -0.6818, -0.63], [0, -0.8714, -0.1535, -0.3343, -0.0798, -0.6555], [0, -0.319, -0.9323, -0.8849, -0.7941, -0.4476]], [[0, -0.5025, -0.767, -0.407, -0.2884, -0.7785], [0, -0.9601, 0.6158, 0.8103, -0.2951, -0.4522], [0, -0.5566, 0.4903, 1.1896, -0.8288, -0.2577], [0, -0.4531, 1.1269, 1.308, -0.6374, -0.4201], [0, -0.3659, 0.4623, 0.4691, -0.3252, -0.6648], [0, -0.8963, -0.2485, -0.9227, -0.2179, -0.6382]], [[0, -0.6189, -0.2166, -0.0081, -0.7284, -0.2762], [0, -0.8482, 0.7418, 1.4417, -0.8879, -0.2604], [0, -0.4324, 0.51, 0.518, -0.1651, -0.0595], [0, -0.2034, 1.2194, 1.4695, -0.8893, -0.9276], [0, -0.9207, 1.2695, 0.5941, -0.42, -0.5793], [0, -0.851, -0.1034, -0.408, -0.5642, -0.2256]], [[0, -0.2262, -0.1841, -0.6978, -0.7233, -0.657], [0, -0.0231, 1.1303, 0.8491, -0.4998, -0.0704], [0, -0.0148, 0.9837, 1.3293, -0.6945, -0.9339], [0, -0.5416, 1.5214, 0.6476, -0.9465, -0.7878], [-0.115, -0.5368, 0.7201, 1.355, -0.2391, -0.5768], [-0.1265, -0.0171, -0.9015, -0.4835, -0.8483, -0.69]], [[0, -0.968, -0.0407, -0.9616, -0.5985, -0.4916], [0, -0.2921, -0.0465, -0.4147, -0.6822, -0.2123], [0, -0.1847, -0.6553, -0.4139, -0.5535, -0.146], [0, -0.3652, -0.5984, -0.524, -0.3687, -0.0134], [-0.0011, -0.7583, -0.6779, -0.2799, -0.3203, -0.605], [-0.6785, -0.6849, -0.7242, -0.7075, -0.7447, -0.8856]]]]