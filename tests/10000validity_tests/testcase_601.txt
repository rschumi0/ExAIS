import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Con96572 = tf.keras.layers.Input(shape=([2, 2, 2, 2]))

Con96572 = keras.layers.Conv3DTranspose(3, (2, 2, 2),strides=(1, 2, 1), padding='same', name = 'Con96572', )(in0Con96572)
Mas90157 = keras.layers.Masking(mask_value=2, name = 'Mas90157', )(Con96572)
ReL4648 = keras.layers.ReLU(max_value=1.113588865393057, negative_slope=2.488086722313005, threshold=2.329675385062325, name = 'ReL4648', )(Mas90157)
model = tf.keras.models.Model(inputs=[in0Con96572], outputs=ReL4648)
w = model.get_layer('Con96572').get_weights() 
w[0] = np.array([[[[[0.5362, 0.1356], [0.4057, 0.5899], [0.3623, 0.7046]], [[0.7386, 0.438], [0.5236, 0.5036], [0.3123, 0.7242]]], [[[0.154, 0.657], [0.2459, 0.871], [0.6076, 0.295]], [[0.7314, 0.1022], [0.8488, 0.5681], [0.657, 0.3902]]]], [[[[0.7415, 0.7995], [0.3219, 0.8627], [0.4997, 0.146]], [[0.7348, 0.1268], [0.5284, 0.6378], [0.0898, 0.2378]]], [[[0.373, 0.7496], [0.1484, 0.586], [0.5217, 0.719]], [[0.4202, 0.8059], [0.3616, 0.6727], [0.2318, 0.9203]]]]])
w[1] = np.array([0, 0, 0])
model.get_layer('Con96572').set_weights(w) 
in0Con96572 = tf.constant([[[[[0.2488, 0.0016], [0.3256, 0.674]], [[0.8068, 0.294], [0.896, 0.751]]], [[[0.5101, 0.5221], [0.4378, 0.7408]], [[0.5317, 0.4825], [0.9637, 0.7798]]]]])
print (np.array2string(model.predict([in0Con96572],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='ReL4648.png')

LCon96572 = conv3D_transpose_layer([[[[[0.2488, 0.0016], [0.3256, 0.674]], [[0.8068, 0.294], [0.896, 0.751]]], [[[0.5101, 0.5221], [0.4378, 0.7408]], [[0.5317, 0.4825], [0.9637, 0.7798]]]]], 2, 2, 2,[[[[[0.5362, 0.1356], [0.4057, 0.5899], [0.3623, 0.7046]], [[0.7386, 0.438], [0.5236, 0.5036], [0.3123, 0.7242]]], [[[0.154, 0.657], [0.2459, 0.871], [0.6076, 0.295]], [[0.7314, 0.1022], [0.8488, 0.5681], [0.657, 0.3902]]]], [[[[0.7415, 0.7995], [0.3219, 0.8627], [0.4997, 0.146]], [[0.7348, 0.1268], [0.5284, 0.6378], [0.0898, 0.2378]]], [[[0.373, 0.7496], [0.1484, 0.586], [0.5217, 0.719]], [[0.4202, 0.8059], [0.3616, 0.6727], [0.2318, 0.9203]]]]],[0, 0, 0], 1, 2, 1, true, Con96572), 
LMas90157 = masking_layer(Con96572, 2, Mas90157), 
LReL4648 = relu_layer(Mas90157, 1.113588865393057, 2.488086722313005, 2.329675385062325, ReL4648), 
exec_layers([LCon96572,LMas90157,LReL4648],["Con96572","Mas90157","ReL4648"],ReL4648,"ReL4648")

Actual (Unparsed): [[[[[-5.4639675, -5.5429431, -5.5693527], [-4.6756867, -4.1523914, -4.1251262]], [[-5.6984874, -5.6407461, -5.4191338], [-4.1167364, -3.6088850, -4.4012386]], [[-4.6208817, -4.5505266, -4.5537444], [-2.5446411, -2.3702868, -2.5155093]], [[-5.0067027, -4.6656833, -4.3609534], [-2.6825159, -1.5012984, -2.2863884]]], [[[-4.4775574, -4.3125311, -4.1114030], [-1.0592242, -0.9113544, -2.0597742]], [[-4.5136345, -4.2586918, -4.3162576], [-1.5341254, -0.7784731, -1.4745823]], [[-2.8509882, -3.2743102, -3.3613778], [1.1135889, 1.1135889, -0.5370842]], [[-3.5068893, -3.6989384, -3.0652815], [1.1135889, 1.1135889, 1.1135889]]]]]

Expected (Unparsed): [[[[[-5.463967486972282,-5.542943141430315,-5.569352689135634],[-4.675686676388693,-4.152391381240602,-4.125126230273214]],[[-5.698487375727746,-5.6407460485926215,-5.419133756611704],[-4.116736401845575,-3.6088850590767554,-4.401238569054364]],[[-4.6208816896797735,-4.550526559050274,-4.553744451369975],[-2.544641194915356,-2.3702867761885664,-2.5155092822419505]],[[-5.006702729159905,-4.6656832739599,-4.3609534593160495],[-2.682515933022139,-1.5012984535030123,-2.286388442150438]]],[[[-4.477557394748576,-4.312531012190677,-4.111402914266757],[-1.0592242115563728,-0.9113544309921808,-2.059774225027318]],[[-4.513634453175177,-4.2586917763430225,-4.316257618721623],[-1.5341254735294578,-0.7784731585327433,-1.4745823735135035]],[[-2.850988216166975,-3.2743102461048856,-3.361377830367296],[1.113588865393057,1.113588865393057,-0.5370842345969189]],[[-3.506889277931742,-3.698938347405941,-3.0652815522455357],[1.113588865393057,1.113588865393057,1.113588865393057]]]]]

Actual:   [[[[[-5.4639, -5.5429, -5.5693], [-4.6756, -4.1523, -4.1251]], [[-5.6984, -5.6407, -5.4191], [-4.1167, -3.6088, -4.4012]], [[-4.6208, -4.5505, -4.5537], [-2.5446, -2.3702, -2.5155]], [[-5.0067, -4.6656, -4.3609], [-2.6825, -1.5012, -2.2863]]], [[[-4.4775, -4.3125, -4.1114], [-1.0592, -0.9113, -2.0597]], [[-4.5136, -4.2586, -4.3162], [-1.5341, -0.7784, -1.4745]], [[-2.8509, -3.2743, -3.3613], [1.1136, 1.1136, -0.537]], [[-3.5068, -3.6989, -3.0652], [1.1136, 1.1136, 1.1136]]]]]

Expected: [[[[[-5.4639, -5.5429, -5.5693], [-4.6756, -4.1523, -4.1251]], [[-5.6984, -5.6407, -5.4191], [-4.1167, -3.6088, -4.4012]], [[-4.6208, -4.5505, -4.5537], [-2.5446, -2.3702, -2.5155]], [[-5.0067, -4.6656, -4.3609], [-2.6825, -1.5012, -2.2863]]], [[[-4.4775, -4.3125, -4.1114], [-1.0592, -0.9113, -2.0597]], [[-4.5136, -4.2586, -4.3162], [-1.5341, -0.7784, -1.4745]], [[-2.8509, -3.2743, -3.3613], [1.1136, 1.1136, -0.537]], [[-3.5068, -3.6989, -3.0652], [1.1136, 1.1136, 1.1136]]]]]