import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Sub28597 = tf.keras.layers.Input(shape=([2, 3, 3]))
in1Sub28597 = tf.keras.layers.Input(shape=([2, 3, 3]))

Sub28597 = keras.layers.Subtract(name = 'Sub28597', )([in0Sub28597,in1Sub28597])
Fla68200 = keras.layers.Flatten(name = 'Fla68200', )(Sub28597)
model = tf.keras.models.Model(inputs=[in0Sub28597,in1Sub28597], outputs=Fla68200)
in0Sub28597 = tf.constant([[[[0.9658, 0.1286, 0.3551], [0.7217, 0.1231, 0.0456], [0.9965, 0.6455, 0.4896]], [[0.1784, 0.9127, 0.0477], [0.7657, 0.9498, 0.6632], [0.2973, 0.346, 0.7762]]]])
in1Sub28597 = tf.constant([[[[0.8636, 0.8191, 0.1429], [0.5735, 0.8314, 0.6557], [0.141, 0.0544, 0.0323]], [[0.5268, 0.2447, 0.5745], [0.6546, 0.0411, 0.1734], [0.8061, 0.7903, 0.314]]]])
print (np.array2string(model.predict([in0Sub28597,in1Sub28597],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Fla68200.png')

LSub28597 = subtract_layer([[[[0.9658, 0.1286, 0.3551], [0.7217, 0.1231, 0.0456], [0.9965, 0.6455, 0.4896]], [[0.1784, 0.9127, 0.0477], [0.7657, 0.9498, 0.6632], [0.2973, 0.346, 0.7762]]]], [[[[0.8636, 0.8191, 0.1429], [0.5735, 0.8314, 0.6557], [0.141, 0.0544, 0.0323]], [[0.5268, 0.2447, 0.5745], [0.6546, 0.0411, 0.1734], [0.8061, 0.7903, 0.314]]]], Sub28597), 
LFla68200 = flatten_layer(Sub28597, Fla68200), 
exec_layers([LSub28597,LFla68200],["Sub28597","Fla68200"],Fla68200,"Fla68200")

Actual (Unparsed): [[0.1022000, -0.6905000, 0.2122000, 0.1482000, -0.7083000, -0.6101000, 0.8555000, 0.5911000, 0.4573000, -0.3484000, 0.6680000, -0.5268000, 0.1111000, 0.9087000, 0.4898000, -0.5088000, -0.4443000, 0.4622000]]

Expected (Unparsed): [[0.10219999999999996,-0.6905000000000001,0.21220000000000003,0.1482,-0.7083,-0.6101,0.8555,0.5911,0.4573,-0.34840000000000004,0.6679999999999999,-0.5268,0.11110000000000009,0.9087,0.4898,-0.5088,-0.44430000000000003,0.4622]]

Actual:   [[0.1022, -0.6905, 0.2122, 0.1482, -0.7083, -0.6101, 0.8555, 0.5911, 0.4573, -0.3484, 0.668, -0.5268, 0.1111, 0.9087, 0.4898, -0.5088, -0.4443, 0.4622]]

Expected: [[0.1022, -0.6905, 0.2123, 0.1482, -0.7083, -0.6101, 0.8555, 0.5911, 0.4573, -0.3484, 0.668, -0.5268, 0.1112, 0.9087, 0.4898, -0.5088, -0.4443, 0.4622]]