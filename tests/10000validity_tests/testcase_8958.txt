import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Mas28564 = tf.keras.layers.Input(shape=([2, 4, 1]))
in0Con5528 = tf.keras.layers.Input(shape=([2, 1]))
in0GRU45283 = tf.keras.layers.Input(shape=([3, 3]))
in0Mul19024 = tf.keras.layers.Input(shape=([1, 2]))
in1Mul19024 = tf.keras.layers.Input(shape=([1, 2]))

Mas28564 = keras.layers.Masking(mask_value=1, name = 'Mas28564', )(in0Mas28564)
Res53511 = keras.layers.Reshape((2, 4), name = 'Res53511', )(Mas28564)
GRU46364 = keras.layers.GRU(2,reset_after=False, recurrent_activation='sigmoid', name = 'GRU46364', )(Res53511)
Res19262 = keras.layers.Reshape((2, 1), name = 'Res19262', )(GRU46364)
Con5528 = keras.layers.Concatenate(axis=2, name = 'Con5528', )([Res19262,in0Con5528])
GRU45283 = keras.layers.GRU(1,reset_after=False, recurrent_activation='sigmoid', name = 'GRU45283', )(in0GRU45283)
Res4769 = keras.layers.Reshape((1, 1), name = 'Res4769', )(GRU45283)
Mul19024 = keras.layers.Multiply(name = 'Mul19024', )([in0Mul19024,in1Mul19024])
Dot74526 = keras.layers.Dot(axes=(2, 1), name = 'Dot74526', )([Res4769,Mul19024])
Zer14403 = keras.layers.ZeroPadding1D(padding=((1, 0)), name = 'Zer14403', )(Dot74526)
Add14518 = keras.layers.Add(name = 'Add14518', )([Con5528,Zer14403])
Res47053 = keras.layers.Reshape((2, 2, 1), name = 'Res47053', )(Add14518)
Zer52706 = keras.layers.ZeroPadding2D(padding=((1, 1), (1, 1)), name = 'Zer52706', )(Res47053)
Res40083 = keras.layers.Reshape((4, 4), name = 'Res40083', )(Zer52706)
Res69787 = keras.layers.Reshape((4, 4, 1), name = 'Res69787', )(Res40083)
Con79768 = keras.layers.Conv2DTranspose(3, (1, 4),strides=(1, 1), padding='valid', name = 'Con79768', )(Res69787)
model = tf.keras.models.Model(inputs=[in0Mas28564,in0Con5528,in0GRU45283,in0Mul19024,in1Mul19024], outputs=Con79768)
w = model.get_layer('GRU46364').get_weights() 
w[0] = np.array([[10, 7, 7, 9, 4, 5], [2, 4, 7, 3, 3, 7], [10, 8, 10, 7, 10, 1], [9, 3, 6, 4, 7, 7]])
w[1] = np.array([[10, 7, 1, 8, 10, 7], [7, 6, 10, 4, 8, 3]])
w[2] = np.array([5, 4, 2, 3, 8, 8])
model.get_layer('GRU46364').set_weights(w) 
w = model.get_layer('GRU45283').get_weights() 
w[0] = np.array([[2, 2, 1], [10, 2, 2], [9, 5, 8]])
w[1] = np.array([[10, 10, 10]])
w[2] = np.array([7, 7, 10])
model.get_layer('GRU45283').set_weights(w) 
w = model.get_layer('Con79768').get_weights() 
w[0] = np.array([[[[0.3154], [0.8116], [0.1116]], [[0.4189], [0.9812], [0.5749]], [[0.6349], [0.973], [0.4542]], [[0.0694], [0.0161], [0.9032]]]])
w[1] = np.array([0, 0, 0])
model.get_layer('Con79768').set_weights(w) 
in0Mas28564 = tf.constant([[[[1.8127], [1.4883], [1.7271], [1.4998]], [[1.0848], [1.0486], [1.0441], [1.822]]]])
in0Con5528 = tf.constant([[[0.2821], [0.0401]]])
in0GRU45283 = tf.constant([[[6, 1, 5], [4, 5, 1], [9, 5, 3]]])
in0Mul19024 = tf.constant([[[0.0736, 0.6545]]])
in1Mul19024 = tf.constant([[[0.2447, 0.886]]])
print (np.array2string(model.predict([in0Mas28564,in0Con5528,in0GRU45283,in0Mul19024,in1Mul19024],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Con79768.png')

LMas28564 = masking_layer([[[[1.8127], [1.4883], [1.7271], [1.4998]], [[1.0848], [1.0486], [1.0441], [1.822]]]], 1, Mas28564), 
LRes53511 = reshape_layer(Mas28564, [2, 4], Res53511), 
LGRU46364 = gru_layer(Res53511,[[10, 7, 7, 9, 4, 5], [2, 4, 7, 3, 3, 7], [10, 8, 10, 7, 10, 1], [9, 3, 6, 4, 7, 7]],[[10, 7, 1, 8, 10, 7], [7, 6, 10, 4, 8, 3]],[5, 4, 2, 3, 8, 8], false, GRU46364), 
LRes19262 = reshape_layer(GRU46364, [2, 1], Res19262), 
LCon5528 = concatenate_layer([Res19262,[[[0.2821], [0.0401]]]], 2, Con5528), 
LGRU45283 = gru_layer([[[6, 1, 5], [4, 5, 1], [9, 5, 3]]],[[2, 2, 1], [10, 2, 2], [9, 5, 8]],[[10, 10, 10]],[7, 7, 10], false, GRU45283), 
LRes4769 = reshape_layer(GRU45283, [1, 1], Res4769), 
LMul19024 = multiply_layer([[[[0.0736, 0.6545]]], [[[0.2447, 0.886]]]], Mul19024), 
LDot74526 = dot_layer(Res4769,Mul19024, 2, 1, Dot74526), 
LZer14403 = zero_padding1D_layer(Dot74526, 1, 0, Zer14403), 
LAdd14518 = add_layer([Con5528,Zer14403], Add14518), 
LRes47053 = reshape_layer(Add14518, [2, 2, 1], Res47053), 
LZer52706 = zero_padding2D_layer(Res47053, 1, 1, 1, 1, Zer52706), 
LRes40083 = reshape_layer(Zer52706, [4, 4], Res40083), 
LRes69787 = reshape_layer(Res40083, [4, 4, 1], Res69787), 
LCon79768 = conv2D_transpose_layer(Res69787, 1, 4,[[[[0.3154], [0.8116], [0.1116]], [[0.4189], [0.9812], [0.5749]], [[0.6349], [0.973], [0.4542]], [[0.0694], [0.0161], [0.9032]]]],[0, 0, 0], 1, 1, false, Con79768), 
exec_layers([LMas28564,LRes53511,LGRU46364,LRes19262,LCon5528,LGRU45283,LRes4769,LMul19024,LDot74526,LZer14403,LAdd14518,LRes47053,LZer52706,LRes40083,LRes69787,LCon79768],["Mas28564","Res53511","GRU46364","Res19262","Con5528","GRU45283","Res4769","Mul19024","Dot74526","Zer14403","Add14518","Res47053","Zer52706","Res40083","Res69787","Con79768"],Con79768,"Con79768")

Actual (Unparsed): [[[[0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000]], [[0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000], [0.0889743, 0.2289524, 0.0314824], [0.1181717, 0.2767965, 0.1621793], [0.1791053, 0.2744833, 0.1281298], [0.0195777, 0.0045418, 0.2547927], [0.0000000, 0.0000000, 0.0000000]], [[0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000], [0.0126475, 0.0325452, 0.0044752], [0.0167979, 0.0393461, 0.0230535], [0.0254595, 0.0390173, 0.0182134], [0.0027829, 0.0006456, 0.0362183], [0.0000000, 0.0000000, 0.0000000]], [[0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000]]]]

Expected (Unparsed): [[[[0.0,0.0,0.0],[0.0,0.0,0.0],[0.0,0.0,0.0],[0.0,0.0,0.0],[0.0,0.0,0.0],[0.0,0.0,0.0],[0.0,0.0,0.0]],[[0.0,0.0,0.0],[0.0,0.0,0.0],[0.08897434000000001,0.22895236000000002,0.03148236],[0.11817169000000001,0.27679652,0.16217929],[0.17910529000000003,0.2744833,0.12812982],[0.019577740000000003,0.00454181,0.25479272000000003],[0.0,0.0,0.0]],[[0.0,0.0,0.0],[4.3700509877453446e-14,1.1245191444686498e-13,1.54628310156113e-14],[0.01264754000005804,0.03254516000013595,0.004475160000079656],[0.016797890000087967,0.039346120000134814,0.023053490000062928],[0.025459490000009615,0.039017300000002225,0.01821342000012514],[0.00278294,0.0006456099999999999,0.03621832],[0.0,0.0,0.0]],[[0.0,0.0,0.0],[0.0,0.0,0.0],[0.0,0.0,0.0],[0.0,0.0,0.0],[0.0,0.0,0.0],[0.0,0.0,0.0],[0.0,0.0,0.0]]]]

Actual:   [[[[0, 0, 0], [0, 0, 0], [0, 0, 0], [0, 0, 0], [0, 0, 0], [0, 0, 0], [0, 0, 0]], [[0, 0, 0], [0, 0, 0], [0.089, 0.229, 0.0315], [0.1182, 0.2768, 0.1622], [0.1792, 0.2745, 0.1282], [0.0196, 0.0046, 0.2548], [0, 0, 0]], [[0, 0, 0], [0, 0, 0], [0.0127, 0.0326, 0.0045], [0.0168, 0.0394, 0.0231], [0.0255, 0.0391, 0.0183], [0.0028, 0.0007, 0.0363], [0, 0, 0]], [[0, 0, 0], [0, 0, 0], [0, 0, 0], [0, 0, 0], [0, 0, 0], [0, 0, 0], [0, 0, 0]]]]

Expected: [[[[0, 0, 0], [0, 0, 0], [0, 0, 0], [0, 0, 0], [0, 0, 0], [0, 0, 0], [0, 0, 0]], [[0, 0, 0], [0, 0, 0], [0.089, 0.229, 0.0315], [0.1182, 0.2768, 0.1622], [0.1792, 0.2745, 0.1282], [0.0196, 0.0046, 0.2548], [0, 0, 0]], [[0, 0, 0], [0, 0, 0], [0.0127, 0.0326, 0.0045], [0.0168, 0.0394, 0.0231], [0.0255, 0.0391, 0.0183], [0.0028, 0.0007, 0.0363], [0, 0, 0]], [[0, 0, 0], [0, 0, 0], [0, 0, 0], [0, 0, 0], [0, 0, 0], [0, 0, 0], [0, 0, 0]]]]