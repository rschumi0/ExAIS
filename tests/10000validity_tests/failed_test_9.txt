import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Sof25837 = tf.keras.layers.Input(shape=([1, 1, 2]))

Sof25837 = keras.layers.Softmax(axis=1, name = 'Sof25837', input_shape=(1, 1, 2))(in0Sof25837)
Res15388 = keras.layers.Reshape((1, 1, 2, 1), name = 'Res15388', )(Sof25837)
Glo59737 = keras.layers.GlobalMaxPool3D(name = 'Glo59737', )(Res15388)
Mas7668 = keras.layers.Masking(mask_value=1, name = 'Mas7668', )(Glo59737)
Res71615 = keras.layers.Reshape((1, 1), name = 'Res71615', )(Mas7668)
Zer33284 = keras.layers.ZeroPadding1D(padding=((1, 1)), name = 'Zer33284', )(Res71615)
model = tf.keras.models.Model(inputs=[in0Sof25837], outputs=Zer33284)
in0Sof25837 = tf.constant([[[[0.3908, 0.1603]]]])
print (np.array2string(model.predict([in0Sof25837],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Zer33284.png')

LSof25837 = softmax_layer([[[[0.3908, 0.1603]]]], 1, Sof25837), 
LRes15388 = reshape_layer(Sof25837, [1, 1, 2, 1], Res15388), 
LGlo59737 = global_max_pool3D_layer(Res15388, Glo59737), 
LMas7668 = masking_layer(Glo59737, 1, Mas7668), 
LRes71615 = reshape_layer(Mas7668, [1, 1], Res71615), 
LZer33284 = zero_padding1D_layer(Res71615, 1, 1, Zer33284), 
exec_layers([LSof25837,LRes15388,LGlo59737,LMas7668,LRes71615,LZer33284],["Sof25837","Res15388","Glo59737","Mas7668","Res71615","Zer33284"],Zer33284,"Zer33284")

Actual (Unparsed): [[[0.0000000], [0.0000000], [0.0000000]]]

Expected (Unparsed): [[[0],[1.0],[0]]]

Actual:   [[[0], [0], [0]]]

Expected: [[[0], [1], [0]]]