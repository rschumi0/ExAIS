import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Sub78599 = tf.keras.layers.Input(shape=([3, 3]))
in1Sub78599 = tf.keras.layers.Input(shape=([3, 3]))
in0Add23639 = tf.keras.layers.Input(shape=([2, 2, 1]))
in1Add23639 = tf.keras.layers.Input(shape=([2, 2, 1]))
in0Con90476 = tf.keras.layers.Input(shape=([2, 1]))
in0Mul30549 = tf.keras.layers.Input(shape=([1, 1, 1]))
in1Mul30549 = tf.keras.layers.Input(shape=([1, 1, 1]))
in0Con55795 = tf.keras.layers.Input(shape=([3, 5, 4, 1]))
in0Zer95334 = tf.keras.layers.Input(shape=([1, 3, 2, 2]))
in0Con94155 = tf.keras.layers.Input(shape=([2, 9]))

Sub78599 = keras.layers.Subtract(name = 'Sub78599', )([in0Sub78599,in1Sub78599])
Res21512 = keras.layers.Reshape((3, 3, 1), name = 'Res21512', )(Sub78599)
Res71361 = keras.layers.Reshape((3, 3, 1, 1), name = 'Res71361', )(Res21512)
Up_18707 = keras.layers.UpSampling3D(size=(1, 2, 2), name = 'Up_18707', )(Res71361)
Res27708 = keras.layers.Reshape((3, 6, 2), name = 'Res27708', )(Up_18707)
Res17800 = keras.layers.Reshape((3, 12), name = 'Res17800', )(Res27708)
Ave63049 = keras.layers.AveragePooling1D(pool_size=(2), name = 'Ave63049', )(Res17800)
Zer61682 = keras.layers.ZeroPadding1D(padding=((1, 0)), name = 'Zer61682', )(Ave63049)
Add23639 = keras.layers.Add(name = 'Add23639', )([in0Add23639,in1Add23639])
Ave11235 = keras.layers.AveragePooling2D(pool_size=(1, 1), name = 'Ave11235', )(Add23639)
Res71211 = keras.layers.Reshape((2, 2), name = 'Res71211', )(Ave11235)
Con90476 = keras.layers.Concatenate(axis=2, name = 'Con90476', )([Res71211,in0Con90476])
Mul30549 = keras.layers.Multiply(name = 'Mul30549', )([in0Mul30549,in1Mul30549])
Res15297 = keras.layers.Reshape((1, 1, 1, 1), name = 'Res15297', )(Mul30549)
Zer40849 = keras.layers.ZeroPadding3D(padding=((2, 0), (4, 0), (3, 0)), name = 'Zer40849', )(Res15297)
Con55795 = keras.layers.Concatenate(axis=4, name = 'Con55795', )([Zer40849,in0Con55795])
Zer95334 = keras.layers.ZeroPadding3D(padding=((1, 1), (1, 1), (1, 1)), name = 'Zer95334', )(in0Zer95334)
Add77457 = keras.layers.Add(name = 'Add77457', )([Con55795,Zer95334])
Res98324 = keras.layers.Reshape((3, 5, 8), name = 'Res98324', )(Add77457)
Res71954 = keras.layers.Reshape((3, 40), name = 'Res71954', )(Res98324)
Loc11534 = keras.layers.LocallyConnected1D(3, (2),strides=(1), name = 'Loc11534', )(Res71954)
Ave70313 = keras.layers.Average(name = 'Ave70313', )([Con90476,Loc11534])
Con94155 = keras.layers.Concatenate(axis=2, name = 'Con94155', )([Ave70313,in0Con94155])
Mul12903 = keras.layers.Multiply(name = 'Mul12903', )([Zer61682,Con94155])
model = tf.keras.models.Model(inputs=[in0Sub78599,in1Sub78599,in0Add23639,in1Add23639,in0Con90476,in0Mul30549,in1Mul30549,in0Con55795,in0Zer95334,in0Con94155], outputs=Mul12903)
w = model.get_layer('Loc11534').get_weights() 
w[0] = np.array([[[0.4576, 0.8574, 0.0593], [0.8375, 0.7509, 0.7212], [0.0154, 0.4031, 0.6767], [0.5252, 0.7754, 0.2792], [0.1993, 0.3772, 0.0504], [0.722, 0.3345, 0.4143], [0.6484, 0.2991, 0.9203], [0.5924, 0.5818, 0.5329], [0.5332, 0.9431, 0.972], [0.9987, 0.1976, 0.0318], [0.3605, 0.4273, 0.3183], [0.3922, 0.154, 0.8555], [0.9599, 0.9163, 0.4508], [0.0232, 0.1942, 0.5328], [0.4217, 0.0264, 0.7443], [0.0198, 0.7525, 0.6979], [0.5618, 0.4679, 0.3937], [0.3131, 0.294, 0.7337], [0.0093, 0.9944, 0.8185], [0.2057, 0.0678, 0.6228], [0.1565, 0.3421, 0.4766], [0.1569, 0.1074, 0.7346], [0.0256, 0.0055, 0.8942], [0.9013, 0.6757, 0.5035], [0.9549, 0.6196, 0.9054], [0.6013, 0.7706, 0.3707], [0.9105, 0.5924, 0.284], [0.3898, 0.4436, 0.0772], [0.0257, 0.8864, 0.4717], [0.3886, 0.543, 0.2356], [0.6359, 0.3886, 0.1041], [0.3248, 0.704, 0.8893], [0.936, 0.7868, 0.8179], [0.9442, 0.4488, 0.5495], [0.3641, 0.9131, 0.9956], [0.989, 0.7174, 0.5098], [0.7239, 0.9853, 0.9424], [0.0119, 0.9842, 0.3496], [0.7786, 0.4295, 0.5794], [0.4159, 0.8764, 0.7114], [0.8632, 0.0727, 0.3081], [0.9998, 0.3222, 0.1475], [0.8306, 0.5373, 0.8186], [0.8507, 0.2454, 0.0751], [0.1052, 0.9348, 0.4691], [0.5352, 0.5802, 0.3348], [0.606, 0.2404, 0.499], [0.3124, 0.396, 0.2395], [0.0238, 0.5521, 0.9011], [0.1293, 0.5591, 0.2272], [0.1902, 0.3005, 0.7938], [0.7888, 0.0815, 0.7231], [0.7515, 0.1158, 0.7105], [0.2243, 0.9357, 0.7104], [0.8091, 0.7099, 0.3504], [0.8216, 0.0951, 0.9351], [0.7745, 0.7371, 0.1054], [0.2378, 0.1713, 0.9961], [0.1337, 0.1148, 0.5306], [0.9443, 0.6769, 0.6433], [0.7522, 0.8787, 0.9359], [0.5278, 0.4082, 0.0083], [0.4715, 0.9871, 0.3475], [0.6001, 0.0734, 0.7884], [0.1465, 0.9658, 0.2624], [0.4794, 0.3461, 0.4034], [0.6201, 0.2771, 0.2714], [0.8073, 0.3134, 0.1266], [0.9782, 0.4273, 0.7674], [0.1634, 0.536, 0.1744], [0.4258, 0.1818, 0.424], [0.9464, 0.9393, 0.7418], [0.2878, 0.6788, 0.9159], [0.2307, 0.6874, 0.2125], [0.584, 0.5378, 0.7517], [0.615, 0.3264, 0.9948], [0.8471, 0.2925, 0.0672], [0.8918, 0.4665, 0.084], [0.9208, 0.1846, 0.5505], [0.546, 0.3425, 0.9772]], [[0.3631, 0.7989, 0.2623], [0.9847, 0.8614, 0.6385], [0.3267, 0.4598, 0.2232], [0.0912, 0.4275, 0.0017], [0.826, 0.2334, 0.1524], [0.2555, 0.5061, 0.8878], [0.6565, 0.7587, 0.3707], [0.7588, 0.7273, 0.0939], [0.7827, 0.6783, 0.4884], [0.0669, 0.3941, 0.8924], [0.2731, 0.8442, 0.2641], [0.7414, 0.6862, 0.8576], [0.1667, 0.6594, 0.7715], [0.8106, 0.1638, 0.1505], [0.4979, 0.3056, 0.4028], [0.2885, 0.4926, 0.4543], [0.8813, 0.3283, 0.0576], [0.3263, 0.6156, 0.2198], [0.0309, 0.2492, 0.2459], [0.1694, 0.9766, 0.779], [0.6209, 0.9091, 0.5258], [0.6281, 0.3082, 0.0001], [0.4242, 0.9582, 0.302], [0.324, 0.9917, 0.2265], [0.4182, 0.8965, 0.2503], [0.2043, 0.9979, 0.2753], [0.9327, 0.8816, 0.5785], [0.1284, 0.9504, 0.7167], [0.1304, 0.979, 0.6701], [0.0923, 0.31, 0.7499], [0.5228, 0.9011, 0.931], [0.4927, 0.0552, 0.8986], [0.5191, 0.6059, 0.5197], [0.8321, 0.3826, 0.922], [0.4966, 0.3861, 0.1042], [0.2738, 0.8435, 0.6643], [0.7389, 0.5399, 0.4746], [0.2743, 0.2909, 0.7101], [0.0868, 0.0738, 0.2332], [0.2157, 0.9707, 0.2938], [0.9319, 0.6217, 0.47], [0.0611, 0.8433, 0.7956], [0.4876, 0.3109, 0.2628], [0.8306, 0.6746, 0.6991], [0.2214, 0.3321, 0.5842], [0.4062, 0.8494, 0.1528], [0.1246, 0.6558, 0.1567], [0.3039, 0.1029, 0.3634], [0.7167, 0.5594, 0.5159], [0.5772, 0.1802, 0.2242], [0.5145, 0.2774, 0.8971], [0.6413, 0.6454, 0.6586], [0.1777, 0.2779, 0.0561], [0.236, 0.8855, 0.6449], [0.8393, 0.9893, 0.1226], [0.8863, 0.5879, 0.2846], [0.7408, 0.5999, 0.5326], [0.5013, 0.2928, 0.3412], [0.3452, 0.1297, 0.8219], [0.3086, 0.7999, 0.6041], [0.5845, 0.9028, 0.0111], [0.2881, 0.3946, 0.2152], [0.8884, 0.8384, 0.7861], [0.0086, 0.785, 0.6402], [0.6008, 0.4258, 0.0542], [0.1294, 0.9255, 0.4844], [0.3739, 0.5925, 0.5257], [0.398, 0.252, 0.4738], [0.055, 0.9042, 0.0813], [0.3076, 0.3524, 0.0693], [0.4798, 0.1397, 0.0854], [0.4935, 0.42, 0.7087], [0.8421, 0.4454, 0.8289], [0.714, 0.5339, 0.2182], [0.9244, 0.2152, 0.628], [0.9157, 0.5398, 0.5786], [0.2989, 0.9575, 0.0881], [0.4164, 0.0613, 0.8173], [0.6153, 0.646, 0.8243], [0.9016, 0.6026, 0.1408]]])
w[1] = np.array([[0, 0, 0], [0, 0, 0]])
model.get_layer('Loc11534').set_weights(w) 
in0Sub78599 = tf.constant([[[0.7608, 0.739, 0.4407], [0.7502, 0.173, 0.4043], [0.7389, 0.3915, 0.788]]])
in1Sub78599 = tf.constant([[[0.7837, 0.8397, 0.3349], [0.3979, 0.1957, 0.7933], [0.2738, 0.0966, 0.5067]]])
in0Add23639 = tf.constant([[[[0.2507], [0.155]], [[0.5987], [0.661]]]])
in1Add23639 = tf.constant([[[[0.4543], [0.6189]], [[0.8349], [0.4185]]]])
in0Con90476 = tf.constant([[[0.0383], [0.1147]]])
in0Mul30549 = tf.constant([[[[0.0724]]]])
in1Mul30549 = tf.constant([[[[0.2733]]]])
in0Con55795 = tf.constant([[[[[0.2041], [0.9848], [0.3996], [0.1679]], [[0.6628], [0.9535], [0.0121], [0.1525]], [[0.0798], [0.1669], [0.6901], [0.8218]], [[0.0562], [0.2045], [0.8728], [0.1134]], [[0.8505], [0.9869], [0.5074], [0.9367]]], [[[0.3466], [0.8148], [0.053], [0.9369]], [[0.6104], [0.9954], [0.4529], [0.9514]], [[0.0219], [0.9099], [0.6175], [0.5516]], [[0.8407], [0.0273], [0.4706], [0.9884]], [[0.4591], [0.8134], [0.152], [0.0625]]], [[[0.5308], [0.6998], [0.5383], [0.925]], [[0.6232], [0.2806], [0.8503], [0.5833]], [[0.035], [0.6874], [0.7449], [0.9319]], [[0.944], [0.6532], [0.9579], [0.4588]], [[0.1092], [0.1249], [0.2583], [0.3886]]]]])
in0Zer95334 = tf.constant([[[[[1.701, 1.7359], [1.824, 1.7187]], [[1.4536, 1.2285], [1.0324, 1.943]], [[1.2645, 1.801], [1.346, 1.5595]]]]])
in0Con94155 = tf.constant([[[0.8371, 0.0173, 0.7816, 0.9569, 0.0219, 0.5838, 0.8363, 0.1532, 0.2286], [0.5469, 0.3076, 0.4576, 0.9954, 0.0971, 0.5275, 0.1966, 0.387, 0.3324]]])
print (np.array2string(model.predict([in0Sub78599,in1Sub78599,in0Add23639,in1Add23639,in0Con90476,in0Mul30549,in1Mul30549,in0Con55795,in0Zer95334,in0Con94155],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Mul12903.png')

LSub78599 = subtract_layer([[[0.7608, 0.739, 0.4407], [0.7502, 0.173, 0.4043], [0.7389, 0.3915, 0.788]]], [[[0.7837, 0.8397, 0.3349], [0.3979, 0.1957, 0.7933], [0.2738, 0.0966, 0.5067]]], Sub78599), 
LRes21512 = reshape_layer(Sub78599, [3, 3, 1], Res21512), 
LRes71361 = reshape_layer(Res21512, [3, 3, 1, 1], Res71361), 
LUp_18707 = up_sampling3D_layer(Res71361, 1, 2, 2, Up_18707), 
LRes27708 = reshape_layer(Up_18707, [3, 6, 2], Res27708), 
LRes17800 = reshape_layer(Res27708, [3, 12], Res17800), 
LAve63049 = average_pooling1D_layer(Res17800, 2, Ave63049), 
LZer61682 = zero_padding1D_layer(Ave63049, 1, 0, Zer61682), 
LAdd23639 = add_layer([[[[[0.2507], [0.155]], [[0.5987], [0.661]]]], [[[[0.4543], [0.6189]], [[0.8349], [0.4185]]]]], Add23639), 
LAve11235 = average_pooling2D_layer(Add23639, 1, 1, Ave11235), 
LRes71211 = reshape_layer(Ave11235, [2, 2], Res71211), 
LCon90476 = concatenate_layer([Res71211,[[[0.0383], [0.1147]]]], 2, Con90476), 
LMul30549 = multiply_layer([[[[[0.0724]]]], [[[[0.2733]]]]], Mul30549), 
LRes15297 = reshape_layer(Mul30549, [1, 1, 1, 1], Res15297), 
LZer40849 = zero_padding3D_layer(Res15297, 2, 0, 4, 0, 3, 0, Zer40849), 
LCon55795 = concatenate_layer([Zer40849,[[[[[0.2041], [0.9848], [0.3996], [0.1679]], [[0.6628], [0.9535], [0.0121], [0.1525]], [[0.0798], [0.1669], [0.6901], [0.8218]], [[0.0562], [0.2045], [0.8728], [0.1134]], [[0.8505], [0.9869], [0.5074], [0.9367]]], [[[0.3466], [0.8148], [0.053], [0.9369]], [[0.6104], [0.9954], [0.4529], [0.9514]], [[0.0219], [0.9099], [0.6175], [0.5516]], [[0.8407], [0.0273], [0.4706], [0.9884]], [[0.4591], [0.8134], [0.152], [0.0625]]], [[[0.5308], [0.6998], [0.5383], [0.925]], [[0.6232], [0.2806], [0.8503], [0.5833]], [[0.035], [0.6874], [0.7449], [0.9319]], [[0.944], [0.6532], [0.9579], [0.4588]], [[0.1092], [0.1249], [0.2583], [0.3886]]]]]], 4, Con55795), 
LZer95334 = zero_padding3D_layer([[[[[1.701, 1.7359], [1.824, 1.7187]], [[1.4536, 1.2285], [1.0324, 1.943]], [[1.2645, 1.801], [1.346, 1.5595]]]]], 1, 1, 1, 1, 1, 1, Zer95334), 
LAdd77457 = add_layer([Con55795,Zer95334], Add77457), 
LRes98324 = reshape_layer(Add77457, [3, 5, 8], Res98324), 
LRes71954 = reshape_layer(Res98324, [3, 40], Res71954), 
LLoc11534 = locally_connected1D_layer(Res71954, 2,[[[0.4576, 0.8574, 0.0593], [0.8375, 0.7509, 0.7212], [0.0154, 0.4031, 0.6767], [0.5252, 0.7754, 0.2792], [0.1993, 0.3772, 0.0504], [0.722, 0.3345, 0.4143], [0.6484, 0.2991, 0.9203], [0.5924, 0.5818, 0.5329], [0.5332, 0.9431, 0.972], [0.9987, 0.1976, 0.0318], [0.3605, 0.4273, 0.3183], [0.3922, 0.154, 0.8555], [0.9599, 0.9163, 0.4508], [0.0232, 0.1942, 0.5328], [0.4217, 0.0264, 0.7443], [0.0198, 0.7525, 0.6979], [0.5618, 0.4679, 0.3937], [0.3131, 0.294, 0.7337], [0.0093, 0.9944, 0.8185], [0.2057, 0.0678, 0.6228], [0.1565, 0.3421, 0.4766], [0.1569, 0.1074, 0.7346], [0.0256, 0.0055, 0.8942], [0.9013, 0.6757, 0.5035], [0.9549, 0.6196, 0.9054], [0.6013, 0.7706, 0.3707], [0.9105, 0.5924, 0.284], [0.3898, 0.4436, 0.0772], [0.0257, 0.8864, 0.4717], [0.3886, 0.543, 0.2356], [0.6359, 0.3886, 0.1041], [0.3248, 0.704, 0.8893], [0.936, 0.7868, 0.8179], [0.9442, 0.4488, 0.5495], [0.3641, 0.9131, 0.9956], [0.989, 0.7174, 0.5098], [0.7239, 0.9853, 0.9424], [0.0119, 0.9842, 0.3496], [0.7786, 0.4295, 0.5794], [0.4159, 0.8764, 0.7114], [0.8632, 0.0727, 0.3081], [0.9998, 0.3222, 0.1475], [0.8306, 0.5373, 0.8186], [0.8507, 0.2454, 0.0751], [0.1052, 0.9348, 0.4691], [0.5352, 0.5802, 0.3348], [0.606, 0.2404, 0.499], [0.3124, 0.396, 0.2395], [0.0238, 0.5521, 0.9011], [0.1293, 0.5591, 0.2272], [0.1902, 0.3005, 0.7938], [0.7888, 0.0815, 0.7231], [0.7515, 0.1158, 0.7105], [0.2243, 0.9357, 0.7104], [0.8091, 0.7099, 0.3504], [0.8216, 0.0951, 0.9351], [0.7745, 0.7371, 0.1054], [0.2378, 0.1713, 0.9961], [0.1337, 0.1148, 0.5306], [0.9443, 0.6769, 0.6433], [0.7522, 0.8787, 0.9359], [0.5278, 0.4082, 0.0083], [0.4715, 0.9871, 0.3475], [0.6001, 0.0734, 0.7884], [0.1465, 0.9658, 0.2624], [0.4794, 0.3461, 0.4034], [0.6201, 0.2771, 0.2714], [0.8073, 0.3134, 0.1266], [0.9782, 0.4273, 0.7674], [0.1634, 0.536, 0.1744], [0.4258, 0.1818, 0.424], [0.9464, 0.9393, 0.7418], [0.2878, 0.6788, 0.9159], [0.2307, 0.6874, 0.2125], [0.584, 0.5378, 0.7517], [0.615, 0.3264, 0.9948], [0.8471, 0.2925, 0.0672], [0.8918, 0.4665, 0.084], [0.9208, 0.1846, 0.5505], [0.546, 0.3425, 0.9772]], [[0.3631, 0.7989, 0.2623], [0.9847, 0.8614, 0.6385], [0.3267, 0.4598, 0.2232], [0.0912, 0.4275, 0.0017], [0.826, 0.2334, 0.1524], [0.2555, 0.5061, 0.8878], [0.6565, 0.7587, 0.3707], [0.7588, 0.7273, 0.0939], [0.7827, 0.6783, 0.4884], [0.0669, 0.3941, 0.8924], [0.2731, 0.8442, 0.2641], [0.7414, 0.6862, 0.8576], [0.1667, 0.6594, 0.7715], [0.8106, 0.1638, 0.1505], [0.4979, 0.3056, 0.4028], [0.2885, 0.4926, 0.4543], [0.8813, 0.3283, 0.0576], [0.3263, 0.6156, 0.2198], [0.0309, 0.2492, 0.2459], [0.1694, 0.9766, 0.779], [0.6209, 0.9091, 0.5258], [0.6281, 0.3082, 0.0001], [0.4242, 0.9582, 0.302], [0.324, 0.9917, 0.2265], [0.4182, 0.8965, 0.2503], [0.2043, 0.9979, 0.2753], [0.9327, 0.8816, 0.5785], [0.1284, 0.9504, 0.7167], [0.1304, 0.979, 0.6701], [0.0923, 0.31, 0.7499], [0.5228, 0.9011, 0.931], [0.4927, 0.0552, 0.8986], [0.5191, 0.6059, 0.5197], [0.8321, 0.3826, 0.922], [0.4966, 0.3861, 0.1042], [0.2738, 0.8435, 0.6643], [0.7389, 0.5399, 0.4746], [0.2743, 0.2909, 0.7101], [0.0868, 0.0738, 0.2332], [0.2157, 0.9707, 0.2938], [0.9319, 0.6217, 0.47], [0.0611, 0.8433, 0.7956], [0.4876, 0.3109, 0.2628], [0.8306, 0.6746, 0.6991], [0.2214, 0.3321, 0.5842], [0.4062, 0.8494, 0.1528], [0.1246, 0.6558, 0.1567], [0.3039, 0.1029, 0.3634], [0.7167, 0.5594, 0.5159], [0.5772, 0.1802, 0.2242], [0.5145, 0.2774, 0.8971], [0.6413, 0.6454, 0.6586], [0.1777, 0.2779, 0.0561], [0.236, 0.8855, 0.6449], [0.8393, 0.9893, 0.1226], [0.8863, 0.5879, 0.2846], [0.7408, 0.5999, 0.5326], [0.5013, 0.2928, 0.3412], [0.3452, 0.1297, 0.8219], [0.3086, 0.7999, 0.6041], [0.5845, 0.9028, 0.0111], [0.2881, 0.3946, 0.2152], [0.8884, 0.8384, 0.7861], [0.0086, 0.785, 0.6402], [0.6008, 0.4258, 0.0542], [0.1294, 0.9255, 0.4844], [0.3739, 0.5925, 0.5257], [0.398, 0.252, 0.4738], [0.055, 0.9042, 0.0813], [0.3076, 0.3524, 0.0693], [0.4798, 0.1397, 0.0854], [0.4935, 0.42, 0.7087], [0.8421, 0.4454, 0.8289], [0.714, 0.5339, 0.2182], [0.9244, 0.2152, 0.628], [0.9157, 0.5398, 0.5786], [0.2989, 0.9575, 0.0881], [0.4164, 0.0613, 0.8173], [0.6153, 0.646, 0.8243], [0.9016, 0.6026, 0.1408]]],[[0, 0, 0], [0, 0, 0]], 1, Loc11534), 
LAve70313 = average_layer([Con90476,Loc11534], Ave70313), 
LCon94155 = concatenate_layer([Ave70313,[[[0.8371, 0.0173, 0.7816, 0.9569, 0.0219, 0.5838, 0.8363, 0.1532, 0.2286], [0.5469, 0.3076, 0.4576, 0.9954, 0.0971, 0.5275, 0.1966, 0.387, 0.3324]]]], 2, Con94155), 
LMul12903 = multiply_layer([Zer61682,Con94155], Mul12903), 
exec_layers([LSub78599,LRes21512,LRes71361,LUp_18707,LRes27708,LRes17800,LAve63049,LZer61682,LAdd23639,LAve11235,LRes71211,LCon90476,LMul30549,LRes15297,LZer40849,LCon55795,LZer95334,LAdd77457,LRes98324,LRes71954,LLoc11534,LAve70313,LCon94155,LMul12903],["Sub78599","Res21512","Res71361","Up_18707","Res27708","Res17800","Ave63049","Zer61682","Add23639","Ave11235","Res71211","Con90476","Mul30549","Res15297","Zer40849","Con55795","Zer95334","Add77457","Res98324","Res71954","Loc11534","Ave70313","Con94155","Mul12903"],Mul12903,"Mul12903")

Actual (Unparsed): [[[0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000], [1.4633216, 2.1258576, 1.6829275, 0.0900744, -0.0189789, -0.0282339, -0.0614162, -0.0059911, -0.0746940, -0.0278386, -0.0547992, -0.0470678]]]

Expected (Unparsed): [[[0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0],[1.4633215392749896,2.125857569241853,1.6829274626786472,0.09007443000000002,-0.018978920000000003,-0.02823392000000001,-0.061416180000000015,-0.005991070000000002,-0.074694,-0.027838560000000002,-0.054799200000000006,-0.04706784]]]

Actual:   [[[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [1.4634, 2.1259, 1.683, 0.0901, -0.0189, -0.0282, -0.0614, -0.0059, -0.0746, -0.0278, -0.0547, -0.047]]]

Expected: [[[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [1.4634, 2.1259, 1.683, 0.0901, -0.0189, -0.0282, -0.0614, -0.0059, -0.0746, -0.0278, -0.0547, -0.047]]]