import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Dot53046 = tf.keras.layers.Input(shape=([2]))
in1Dot53046 = tf.keras.layers.Input(shape=([2]))

Dot53046 = keras.layers.Dot(axes=(1, 1), name = 'Dot53046', )([in0Dot53046,in1Dot53046])
Sof47854 = keras.layers.Softmax(axis=1, name = 'Sof47854', )(Dot53046)
Res21296 = keras.layers.Reshape((1, 1), name = 'Res21296', )(Sof47854)
Up_62232 = keras.layers.UpSampling1D(size=(2), name = 'Up_62232', )(Res21296)
LST87293 = keras.layers.LSTM(2,recurrent_activation='sigmoid', name = 'LST87293', )(Up_62232)
model = tf.keras.models.Model(inputs=[in0Dot53046,in1Dot53046], outputs=LST87293)
w = model.get_layer('LST87293').get_weights() 
w[0] = np.array([[3, 7, 10, 2, 8, 5, 1, 5]])
w[1] = np.array([[10, 10, 6, 1, 2, 7, 9, 1], [4, 5, 6, 3, 8, 7, 1, 8]])
w[2] = np.array([6, 8, 6, 6, 7, 5, 7, 6])
model.get_layer('LST87293').set_weights(w) 
in0Dot53046 = tf.constant([[0.5029, 0.1036]])
in1Dot53046 = tf.constant([[0.0585, 0.4873]])
print (np.array2string(model.predict([in0Dot53046,in1Dot53046],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='LST87293.png')

LDot53046 = dot_layer([[0.5029, 0.1036]], [[0.0585, 0.4873]], 1, 1, Dot53046), 
LSof47854 = softmax_layer(Dot53046, 1, Sof47854), 
LRes21296 = reshape_layer(Sof47854, [1, 1], Res21296), 
LUp_62232 = up_sampling1D_layer(Res21296, 2, Up_62232), 
LLST87293 = lstm_layer(Up_62232,[[3, 7, 10, 2, 8, 5, 1, 5]],[[10, 10, 6, 1, 2, 7, 9, 1], [4, 5, 6, 3, 8, 7, 1, 8]],[6, 8, 6, 6, 7, 5, 7, 6], LST87293), 
exec_layers([LDot53046,LSof47854,LRes21296,LUp_62232,LLST87293],["Dot53046","Sof47854","Res21296","Up_62232","LST87293"],LST87293,"LST87293")

Actual (Unparsed): [[0.9640187, 0.9640264]]

Expected (Unparsed): [[0.9640187011788247,0.9640264142771002]]

Actual:   [[0.9641, 0.9641]]

Expected: [[0.9641, 0.9641]]