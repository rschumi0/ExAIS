import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Cro40623 = tf.keras.layers.Input(shape=([3, 1, 4]))
in0Add16909 = tf.keras.layers.Input(shape=([1, 2, 1]))
in1Add16909 = tf.keras.layers.Input(shape=([1, 2, 1]))
in0Con64339 = tf.keras.layers.Input(shape=([1, 2, 3]))
in0Add38738 = tf.keras.layers.Input(shape=([2, 1, 1]))
in1Add38738 = tf.keras.layers.Input(shape=([2, 1, 1]))
in0Con34845 = tf.keras.layers.Input(shape=([2, 3, 3]))

Cro40623 = keras.layers.Cropping2D(cropping=((1, 1), (0, 0)), name = 'Cro40623', )(in0Cro40623)
Zer42031 = keras.layers.ZeroPadding2D(padding=((0, 0), (1, 0)), name = 'Zer42031', )(Cro40623)
Add16909 = keras.layers.Add(name = 'Add16909', )([in0Add16909,in1Add16909])
Con64339 = keras.layers.Concatenate(axis=3, name = 'Con64339', )([Add16909,in0Con64339])
Add38920 = keras.layers.Add(name = 'Add38920', )([Zer42031,Con64339])
Zer13309 = keras.layers.ZeroPadding2D(padding=((1, 0), (1, 0)), name = 'Zer13309', )(Add38920)
Add38738 = keras.layers.Add(name = 'Add38738', )([in0Add38738,in1Add38738])
Zer1226 = keras.layers.ZeroPadding2D(padding=((0, 0), (2, 0)), name = 'Zer1226', )(Add38738)
Con34845 = keras.layers.Concatenate(axis=3, name = 'Con34845', )([Zer1226,in0Con34845])
Max4810 = keras.layers.Maximum(name = 'Max4810', )([Zer13309,Con34845])
model = tf.keras.models.Model(inputs=[in0Cro40623,in0Add16909,in1Add16909,in0Con64339,in0Add38738,in1Add38738,in0Con34845], outputs=Max4810)
in0Cro40623 = tf.constant([[[[1.8771, 1.5055, 1.8605, 1.4573]], [[1.5505, 1.0796, 1.1855, 1.5387]], [[1.6824, 1.2889, 1.7704, 1.6839]]]])
in0Add16909 = tf.constant([[[[0.4604], [0.6775]]]])
in1Add16909 = tf.constant([[[[0.8144], [0.5169]]]])
in0Con64339 = tf.constant([[[[0.7806, 0.6783, 0.0548], [0.7652, 0.4864, 0.0108]]]])
in0Add38738 = tf.constant([[[[0.7869]], [[0.0016]]]])
in1Add38738 = tf.constant([[[[0.6117]], [[0.7253]]]])
in0Con34845 = tf.constant([[[[0.6362, 0.7882, 0.6224], [0.7155, 0.0328, 0.2922], [0.7914, 0.5671, 0.4812]], [[0.8869, 0.1183, 0.2063], [0.6186, 0.7663, 0.9009], [0.9614, 0.6556, 0.1725]]]])
print (np.array2string(model.predict([in0Cro40623,in0Add16909,in1Add16909,in0Con64339,in0Add38738,in1Add38738,in0Con34845],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Max4810.png')

LCro40623 = cropping2D_layer([[[[1.8771, 1.5055, 1.8605, 1.4573]], [[1.5505, 1.0796, 1.1855, 1.5387]], [[1.6824, 1.2889, 1.7704, 1.6839]]]], 1, 1, 0, 0, Cro40623), 
LZer42031 = zero_padding2D_layer(Cro40623, 0, 0, 1, 0, Zer42031), 
LAdd16909 = add_layer([[[[[0.4604], [0.6775]]]], [[[[0.8144], [0.5169]]]]], Add16909), 
LCon64339 = concatenate_layer([Add16909,[[[[0.7806, 0.6783, 0.0548], [0.7652, 0.4864, 0.0108]]]]], 3, Con64339), 
LAdd38920 = add_layer([Zer42031,Con64339], Add38920), 
LZer13309 = zero_padding2D_layer(Add38920, 1, 0, 1, 0, Zer13309), 
LAdd38738 = add_layer([[[[[0.7869]], [[0.0016]]]], [[[[0.6117]], [[0.7253]]]]], Add38738), 
LZer1226 = zero_padding2D_layer(Add38738, 0, 0, 2, 0, Zer1226), 
LCon34845 = concatenate_layer([Zer1226,[[[[0.6362, 0.7882, 0.6224], [0.7155, 0.0328, 0.2922], [0.7914, 0.5671, 0.4812]], [[0.8869, 0.1183, 0.2063], [0.6186, 0.7663, 0.9009], [0.9614, 0.6556, 0.1725]]]]], 3, Con34845), 
LMax4810 = maximum_layer([Zer13309,Con34845], Max4810), 
exec_layers([LCro40623,LZer42031,LAdd16909,LCon64339,LAdd38920,LZer13309,LAdd38738,LZer1226,LCon34845,LMax4810],["Cro40623","Zer42031","Add16909","Con64339","Add38920","Zer13309","Add38738","Zer1226","Con34845","Max4810"],Max4810,"Max4810")

Actual (Unparsed): [[[[0.0000000, 0.6362000, 0.7882000, 0.6224000], [0.0000000, 0.7155000, 0.0328000, 0.2922000], [1.3986000, 0.7914000, 0.5671000, 0.4812000]], [[0.0000000, 0.8869000, 0.1183000, 0.2063000], [1.2748000, 0.7806000, 0.7663000, 0.9009000], [2.7449000, 1.8448000, 1.6719000, 1.5495000]]]]

Expected (Unparsed): [[[[0,0.6362,0.7882,0.6224],[0,0.7155,0.0328,0.2922],[1.3986,0.7914,0.5671,0.4812]],[[0,0.8869,0.1183,0.2063],[1.2748,0.7806,0.7663,0.9009],[2.7449,1.8447999999999998,1.6719,1.5494999999999999]]]]

Actual:   [[[[0, 0.6362, 0.7882, 0.6224], [0, 0.7155, 0.0328, 0.2922], [1.3986, 0.7914, 0.5671, 0.4812]], [[0, 0.8869, 0.1183, 0.2063], [1.2748, 0.7806, 0.7663, 0.9009], [2.7449, 1.8448, 1.6719, 1.5495]]]]

Expected: [[[[0, 0.6362, 0.7882, 0.6224], [0, 0.7155, 0.0328, 0.2922], [1.3986, 0.7914, 0.5671, 0.4812]], [[0, 0.8869, 0.1183, 0.2063], [1.2748, 0.7806, 0.7663, 0.9009], [2.7449, 1.8448, 1.6719, 1.5495]]]]