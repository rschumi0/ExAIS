import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Dot70405 = tf.keras.layers.Input(shape=([2]))
in1Dot70405 = tf.keras.layers.Input(shape=([2]))

Dot70405 = keras.layers.Dot(axes=(1, 1), name = 'Dot70405', )([in0Dot70405,in1Dot70405])
Res29752 = keras.layers.Reshape((1, 1), name = 'Res29752', )(Dot70405)
Con76107 = keras.layers.Conv1D(3, (1),strides=(1), padding='same', dilation_rate=(1), name = 'Con76107', )(Res29752)
model = tf.keras.models.Model(inputs=[in0Dot70405,in1Dot70405], outputs=Con76107)
w = model.get_layer('Con76107').get_weights() 
w[0] = np.array([[[0.6905, 0.4946, 0.9367]]])
w[1] = np.array([0, 0, 0])
model.get_layer('Con76107').set_weights(w) 
in0Dot70405 = tf.constant([[0.7879, 0.8597]])
in1Dot70405 = tf.constant([[0.1198, 0.1385]])
print (np.array2string(model.predict([in0Dot70405,in1Dot70405],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Con76107.png')

LDot70405 = dot_layer([[0.7879, 0.8597]], [[0.1198, 0.1385]], 1, 1, Dot70405), 
LRes29752 = reshape_layer(Dot70405, [1, 1], Res29752), 
LCon76107 = conv1D_layer(Res29752, 1,[[[0.6905, 0.4946, 0.9367]]],[0, 0, 0], 1, true, 1, Con76107), 
exec_layers([LDot70405,LRes29752,LCon76107],["Dot70405","Res29752","Con76107"],Con76107,"Con76107")

Actual (Unparsed): [[[0.1473934, 0.1055768, 0.1999469]]]

Expected (Unparsed): [[[0.147393349735,0.10557675710200001,0.199946923529]]]

Actual:   [[[0.1474, 0.1056, 0.2]]]

Expected: [[[0.1474, 0.1056, 0.2]]]