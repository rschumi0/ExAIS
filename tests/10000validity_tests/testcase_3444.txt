import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Dot86790 = tf.keras.layers.Input(shape=([3, 3]))
in1Dot86790 = tf.keras.layers.Input(shape=([3, 3]))
in0Ave26009 = tf.keras.layers.Input(shape=([2, 1]))
in1Ave26009 = tf.keras.layers.Input(shape=([2, 1]))
in0Con68470 = tf.keras.layers.Input(shape=([3, 2]))
in0GRU20549 = tf.keras.layers.Input(shape=([2, 2]))
in0Con28793 = tf.keras.layers.Input(shape=([1]))
in0Glo46543 = tf.keras.layers.Input(shape=([2, 2]))
in0Con36572 = tf.keras.layers.Input(shape=([8]))

Dot86790 = keras.layers.Dot(axes=(2, 2), name = 'Dot86790', )([in0Dot86790,in1Dot86790])
Ave26009 = keras.layers.Average(name = 'Ave26009', )([in0Ave26009,in1Ave26009])
Zer26551 = keras.layers.ZeroPadding1D(padding=((1, 0)), name = 'Zer26551', )(Ave26009)
Con68470 = keras.layers.Concatenate(axis=2, name = 'Con68470', )([Zer26551,in0Con68470])
Mul75606 = keras.layers.Multiply(name = 'Mul75606', )([Dot86790,Con68470])
Fla92069 = keras.layers.Flatten(name = 'Fla92069', )(Mul75606)
GRU20549 = keras.layers.GRU(1,reset_after=False, recurrent_activation='sigmoid', name = 'GRU20549', )(in0GRU20549)
Con28793 = keras.layers.Concatenate(axis=1, name = 'Con28793', )([GRU20549,in0Con28793])
Glo46543 = keras.layers.GlobalAveragePooling1D(name = 'Glo46543', )(in0Glo46543)
Dot44827 = keras.layers.Dot(axes=(1, 1), name = 'Dot44827', )([Con28793,Glo46543])
Con36572 = keras.layers.Concatenate(axis=1, name = 'Con36572', )([Dot44827,in0Con36572])
Add60222 = keras.layers.Add(name = 'Add60222', )([Fla92069,Con36572])
model = tf.keras.models.Model(inputs=[in0Dot86790,in1Dot86790,in0Ave26009,in1Ave26009,in0Con68470,in0GRU20549,in0Con28793,in0Glo46543,in0Con36572], outputs=Add60222)
w = model.get_layer('GRU20549').get_weights() 
w[0] = np.array([[9, 3, 5], [4, 2, 7]])
w[1] = np.array([[4, 4, 5]])
w[2] = np.array([4, 2, 7])
model.get_layer('GRU20549').set_weights(w) 
in0Dot86790 = tf.constant([[[0.593, 0.2317, 0.0457], [0.391, 0.2787, 0.9785], [0.6509, 0.1824, 0.6083]]])
in1Dot86790 = tf.constant([[[0.1318, 0.4473, 0.4464], [0.7629, 0.7477, 0.6462], [0.8526, 0.5858, 0.6969]]])
in0Ave26009 = tf.constant([[[0.8498], [0.3728]]])
in1Ave26009 = tf.constant([[[0.4477], [0.0357]]])
in0Con68470 = tf.constant([[[0.2061, 0.1218], [0.721, 0.4228], [0.3172, 0.7707]]])
in0GRU20549 = tf.constant([[[7, 2], [2, 7]]])
in0Con28793 = tf.constant([[0.9028]])
in0Glo46543 = tf.constant([[[1.1907, 1.7308], [1.1276, 1.4994]]])
in0Con36572 = tf.constant([[0.2504, 0.642, 0.6469, 0.4752, 0.6635, 0.2299, 0.7529, 0.8608]])
print (np.array2string(model.predict([in0Dot86790,in1Dot86790,in0Ave26009,in1Ave26009,in0Con68470,in0GRU20549,in0Con28793,in0Glo46543,in0Con36572],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Add60222.png')

LDot86790 = dot_layer([[[0.593, 0.2317, 0.0457], [0.391, 0.2787, 0.9785], [0.6509, 0.1824, 0.6083]]], [[[0.1318, 0.4473, 0.4464], [0.7629, 0.7477, 0.6462], [0.8526, 0.5858, 0.6969]]], 2, 2, Dot86790), 
LAve26009 = average_layer([[[[0.8498], [0.3728]]], [[[0.4477], [0.0357]]]], Ave26009), 
LZer26551 = zero_padding1D_layer(Ave26009, 1, 0, Zer26551), 
LCon68470 = concatenate_layer([Zer26551,[[[0.2061, 0.1218], [0.721, 0.4228], [0.3172, 0.7707]]]], 2, Con68470), 
LMul75606 = multiply_layer([Dot86790,Con68470], Mul75606), 
LFla92069 = flatten_layer(Mul75606, Fla92069), 
LGRU20549 = gru_layer([[[7, 2], [2, 7]]],[[9, 3, 5], [4, 2, 7]],[[4, 4, 5]],[4, 2, 7], false, GRU20549), 
LCon28793 = concatenate_layer([GRU20549,[[0.9028]]], 1, Con28793), 
LGlo46543 = global_average_pooling1D_layer([[[1.1907, 1.7308], [1.1276, 1.4994]]], Glo46543), 
LDot44827 = dot_layer(Con28793,Glo46543, 1, 1, Dot44827), 
LCon36572 = concatenate_layer([Dot44827,[[0.2504, 0.642, 0.6469, 0.4752, 0.6635, 0.2299, 0.7529, 0.8608]]], 1, Con36572), 
LAdd60222 = add_layer([Fla92069,Con36572], Add60222), 
exec_layers([LDot86790,LAve26009,LZer26551,LCon68470,LMul75606,LFla92069,LGRU20549,LCon28793,LGlo46543,LDot44827,LCon36572,LAdd60222],["Dot86790","Ave26009","Zer26551","Con68470","Mul75606","Fla92069","GRU20549","Con28793","Glo46543","Dot44827","Con36572","Add60222"],Add60222,"Add60222")

Actual (Unparsed): [[1.4581123, 0.3854312, 0.7239921, 1.0445829, 1.2964079, 1.1617891, 0.3195497, 1.0783585, 1.6975733]]

Expected (Unparsed): [[1.4581122800000001,0.385431182093,0.723992104782,1.0445829131125,1.29640788939,1.161789126188,0.319549667355,1.07835847646,1.6975732901710001]]

Actual:   [[1.4582, 0.3855, 0.724, 1.0446, 1.2965, 1.1618, 0.3196, 1.0784, 1.6976]]

Expected: [[1.4582, 0.3855, 0.724, 1.0446, 1.2965, 1.1618, 0.3196, 1.0784, 1.6976]]