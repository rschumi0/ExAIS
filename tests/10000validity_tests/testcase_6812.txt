import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Dot16591 = tf.keras.layers.Input(shape=([3, 3]))
in1Dot16591 = tf.keras.layers.Input(shape=([3, 3]))
in0Con36096 = tf.keras.layers.Input(shape=([3, 3, 1]))
in0Min16364 = tf.keras.layers.Input(shape=([1, 2, 2]))
in1Min16364 = tf.keras.layers.Input(shape=([1, 2, 2]))
in0Max14512 = tf.keras.layers.Input(shape=([1, 1, 1, 2]))
in1Max14512 = tf.keras.layers.Input(shape=([1, 1, 1, 2]))
in0Con82185 = tf.keras.layers.Input(shape=([3, 3, 2, 2]))
in0Sub83135 = tf.keras.layers.Input(shape=([3, 3, 2, 3]))
in1Sub83135 = tf.keras.layers.Input(shape=([3, 3, 2, 3]))

Dot16591 = keras.layers.Dot(axes=(2, 1), name = 'Dot16591', )([in0Dot16591,in1Dot16591])
Res22 = keras.layers.Reshape((3, 3, 1), name = 'Res22', )(Dot16591)
Con36096 = keras.layers.Concatenate(axis=3, name = 'Con36096', )([Res22,in0Con36096])
Min16364 = keras.layers.Minimum(name = 'Min16364', )([in0Min16364,in1Min16364])
Zer32755 = keras.layers.ZeroPadding2D(padding=((2, 0), (1, 0)), name = 'Zer32755', )(Min16364)
Mul53361 = keras.layers.Multiply(name = 'Mul53361', )([Con36096,Zer32755])
Zer43575 = keras.layers.ZeroPadding2D(padding=((0, 0), (34, 0)), name = 'Zer43575', )(Mul53361)
Max14512 = keras.layers.Maximum(name = 'Max14512', )([in0Max14512,in1Max14512])
Res80597 = keras.layers.Reshape((1, 1, 2), name = 'Res80597', )(Max14512)
Res75580 = keras.layers.Reshape((1, 2), name = 'Res75580', )(Res80597)
Sep43430 = keras.layers.SeparableConv1D(2, (1),strides=(1), padding='same', name = 'Sep43430', )(Res75580)
Res50814 = keras.layers.Reshape((1, 2, 1), name = 'Res50814', )(Sep43430)
Res89463 = keras.layers.Reshape((1, 2, 1, 1), name = 'Res89463', )(Res50814)
Zer99579 = keras.layers.ZeroPadding3D(padding=((2, 0), (1, 0), (1, 0)), name = 'Zer99579', )(Res89463)
Con82185 = keras.layers.Concatenate(axis=4, name = 'Con82185', )([Zer99579,in0Con82185])
Sub83135 = keras.layers.Subtract(name = 'Sub83135', )([in0Sub83135,in1Sub83135])
Sub86892 = keras.layers.Subtract(name = 'Sub86892', )([Con82185,Sub83135])
Res77711 = keras.layers.Reshape((3, 3, 6), name = 'Res77711', )(Sub86892)
Res62087 = keras.layers.Reshape((3, 18), name = 'Res62087', )(Res77711)
Sep78203 = keras.layers.SeparableConv1D(2, (2),strides=(1), padding='valid', name = 'Sep78203', )(Res62087)
Res42876 = keras.layers.Reshape((2, 2, 1), name = 'Res42876', )(Sep78203)
Con77733 = keras.layers.Conv2DTranspose(2, (1, 1),strides=(1, 10), padding='valid', name = 'Con77733', )(Res42876)
Zer89926 = keras.layers.ZeroPadding2D(padding=((1, 0), (17, 0)), name = 'Zer89926', )(Con77733)
Ave76457 = keras.layers.Average(name = 'Ave76457', )([Zer43575,Zer89926])
model = tf.keras.models.Model(inputs=[in0Dot16591,in1Dot16591,in0Con36096,in0Min16364,in1Min16364,in0Max14512,in1Max14512,in0Con82185,in0Sub83135,in1Sub83135], outputs=Ave76457)
w = model.get_layer('Sep43430').get_weights() 
w[0] = np.array([[[0.838], [0.5799]]])
w[1] = np.array([[[0.8225, 0.6671], [0.9386, 0.6019]]])
w[2] = np.array([0, 0])
model.get_layer('Sep43430').set_weights(w) 
w = model.get_layer('Sep78203').get_weights() 
w[0] = np.array([[[0.1478], [0.9496], [0.8589], [0.0934], [0.3663], [0.3368], [0.6882], [0.0078], [0.0468], [0.3483], [0.1624], [0.3211], [0.929], [0.7934], [0.3928], [0.5286], [0.4131], [0.5932]], [[0.6595], [0.618], [0.2039], [0.5335], [0.0857], [0.451], [0.0289], [0.8842], [0.3214], [0.421], [0.5369], [0.7731], [0.8077], [0.1838], [0.2049], [0.8686], [0.1143], [0.2451]]])
w[1] = np.array([[[0.2378, 0.912], [0.7927, 0.5955], [0.3447, 0.33], [0.2675, 0.0666], [0.0394, 0.8267], [0.5528, 0.9664], [0.8778, 0.0522], [0.3563, 0.5942], [0.1928, 0.8058], [0.1113, 0.2886], [0.7505, 0.6081], [0.0752, 0.9962], [0.4231, 0.3388], [0.851, 0.4407], [0.0778, 0.6618], [0.6662, 0.066], [0.6889, 0.4643], [0.2549, 0.2578]]])
w[2] = np.array([0, 0])
model.get_layer('Sep78203').set_weights(w) 
w = model.get_layer('Con77733').get_weights() 
w[0] = np.array([[[[0.1056], [0.2534]]]])
w[1] = np.array([0, 0])
model.get_layer('Con77733').set_weights(w) 
in0Dot16591 = tf.constant([[[0.8168, 0.2386, 0.5031], [0.6427, 0.9422, 0.7936], [0.3598, 0.4763, 0.9092]]])
in1Dot16591 = tf.constant([[[0.9159, 0.6841, 0.8722], [0.6205, 0.8621, 0.9137], [0.4439, 0.5384, 0.3942]]])
in0Con36096 = tf.constant([[[[0.7701], [0.2242], [0.3489]], [[0.6373], [0.3406], [0.3081]], [[0.7115], [0.8258], [0.2006]]]])
in0Min16364 = tf.constant([[[[0.404, 0.743], [0.8009, 0.469]]]])
in1Min16364 = tf.constant([[[[0.8984, 0.9306], [0.867, 0.0711]]]])
in0Max14512 = tf.constant([[[[[0.5678, 0.1108]]]]])
in1Max14512 = tf.constant([[[[[0.9121, 0.8426]]]]])
in0Con82185 = tf.constant([[[[[0.6705, 0.3795], [0.6481, 0.0985]], [[0.9452, 0.6312], [0.4734, 0.4757]], [[0.7888, 0.4063], [0.1108, 0.552]]], [[[0.568, 0.8276], [0.8827, 0.7093]], [[0.6727, 0.4651], [0.8641, 0.034]], [[0.3011, 0.0213], [0.0853, 0.2229]]], [[[0.9293, 0.7107], [0.4846, 0.5704]], [[0.1769, 0.6671], [0.2063, 0.366]], [[0.5541, 0.5232], [0.753, 0.6111]]]]])
in0Sub83135 = tf.constant([[[[[0.846, 0.0962, 0.2169], [0.2269, 0.4543, 0.2126]], [[0.3508, 0.6848, 0.2061], [0.8535, 0.0341, 0.173]], [[0.4059, 0.8918, 0.1873], [0.4753, 0.921, 0.7256]]], [[[0.8187, 0.1729, 0.2899], [0.6906, 0.0874, 0.0027]], [[0.555, 0.8069, 0.0873], [0.1087, 0.8596, 0.3443]], [[0.6433, 0.2214, 0.2319], [0.4878, 0.6828, 0.1143]]], [[[0.3946, 0.4642, 0.5544], [0.7808, 0.885, 0.853]], [[0.9992, 0.6509, 0.2481], [0.4419, 0.3506, 0.8258]], [[0.5725, 0.9148, 0.9377], [0.7439, 0.1819, 0.8624]]]]])
in1Sub83135 = tf.constant([[[[[0.597, 0.9148, 0.8631], [0.0891, 0.6596, 0.3567]], [[0.6163, 0.9601, 0.7747], [0.1544, 0.5455, 0.5772]], [[0.4537, 0.1225, 0.1743], [0.9027, 0.2761, 0.8965]]], [[[0.1651, 0.5612, 0.2833], [0.9075, 0.1504, 0.9386]], [[0.2079, 0.5978, 0.143], [0.3745, 0.8304, 0.9274]], [[0.78, 0.6929, 0.9427], [0.6874, 0.4799, 0.057]]], [[[0.1024, 0.3908, 0.4414], [0.1466, 0.6107, 0.5409]], [[0.2998, 0.9553, 0.9188], [0.8916, 0.1674, 0.0855]], [[0.9724, 0.9096, 0.7368], [0.2777, 0.8436, 0.023]]]]])
print (np.array2string(model.predict([in0Dot16591,in1Dot16591,in0Con36096,in0Min16364,in1Min16364,in0Max14512,in1Max14512,in0Con82185,in0Sub83135,in1Sub83135],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Ave76457.png')

LDot16591 = dot_layer([[[0.8168, 0.2386, 0.5031], [0.6427, 0.9422, 0.7936], [0.3598, 0.4763, 0.9092]]], [[[0.9159, 0.6841, 0.8722], [0.6205, 0.8621, 0.9137], [0.4439, 0.5384, 0.3942]]], 2, 1, Dot16591), 
LRes22 = reshape_layer(Dot16591, [3, 3, 1], Res22), 
LCon36096 = concatenate_layer([Res22,[[[[0.7701], [0.2242], [0.3489]], [[0.6373], [0.3406], [0.3081]], [[0.7115], [0.8258], [0.2006]]]]], 3, Con36096), 
LMin16364 = minimum_layer([[[[[0.404, 0.743], [0.8009, 0.469]]]], [[[[0.8984, 0.9306], [0.867, 0.0711]]]]], Min16364), 
LZer32755 = zero_padding2D_layer(Min16364, 2, 0, 1, 0, Zer32755), 
LMul53361 = multiply_layer([Con36096,Zer32755], Mul53361), 
LZer43575 = zero_padding2D_layer(Mul53361, 0, 0, 34, 0, Zer43575), 
LMax14512 = maximum_layer([[[[[[0.5678, 0.1108]]]]], [[[[[0.9121, 0.8426]]]]]], Max14512), 
LRes80597 = reshape_layer(Max14512, [1, 1, 2], Res80597), 
LRes75580 = reshape_layer(Res80597, [1, 2], Res75580), 
LSep43430 = separable_conv1D_layer(Res75580, 1,[[[[0.838], [0.5799]]],[[[0.8225, 0.6671], [0.9386, 0.6019]]]],[0, 0], 1, true, Sep43430), 
LRes50814 = reshape_layer(Sep43430, [1, 2, 1], Res50814), 
LRes89463 = reshape_layer(Res50814, [1, 2, 1, 1], Res89463), 
LZer99579 = zero_padding3D_layer(Res89463, 2, 0, 1, 0, 1, 0, Zer99579), 
LCon82185 = concatenate_layer([Zer99579,[[[[[0.6705, 0.3795], [0.6481, 0.0985]], [[0.9452, 0.6312], [0.4734, 0.4757]], [[0.7888, 0.4063], [0.1108, 0.552]]], [[[0.568, 0.8276], [0.8827, 0.7093]], [[0.6727, 0.4651], [0.8641, 0.034]], [[0.3011, 0.0213], [0.0853, 0.2229]]], [[[0.9293, 0.7107], [0.4846, 0.5704]], [[0.1769, 0.6671], [0.2063, 0.366]], [[0.5541, 0.5232], [0.753, 0.6111]]]]]], 4, Con82185), 
LSub83135 = subtract_layer([[[[[0.846, 0.0962, 0.2169], [0.2269, 0.4543, 0.2126]], [[0.3508, 0.6848, 0.2061], [0.8535, 0.0341, 0.173]], [[0.4059, 0.8918, 0.1873], [0.4753, 0.921, 0.7256]]], [[[0.8187, 0.1729, 0.2899], [0.6906, 0.0874, 0.0027]], [[0.555, 0.8069, 0.0873], [0.1087, 0.8596, 0.3443]], [[0.6433, 0.2214, 0.2319], [0.4878, 0.6828, 0.1143]]], [[[0.3946, 0.4642, 0.5544], [0.7808, 0.885, 0.853]], [[0.9992, 0.6509, 0.2481], [0.4419, 0.3506, 0.8258]], [[0.5725, 0.9148, 0.9377], [0.7439, 0.1819, 0.8624]]]]], [[[[[0.597, 0.9148, 0.8631], [0.0891, 0.6596, 0.3567]], [[0.6163, 0.9601, 0.7747], [0.1544, 0.5455, 0.5772]], [[0.4537, 0.1225, 0.1743], [0.9027, 0.2761, 0.8965]]], [[[0.1651, 0.5612, 0.2833], [0.9075, 0.1504, 0.9386]], [[0.2079, 0.5978, 0.143], [0.3745, 0.8304, 0.9274]], [[0.78, 0.6929, 0.9427], [0.6874, 0.4799, 0.057]]], [[[0.1024, 0.3908, 0.4414], [0.1466, 0.6107, 0.5409]], [[0.2998, 0.9553, 0.9188], [0.8916, 0.1674, 0.0855]], [[0.9724, 0.9096, 0.7368], [0.2777, 0.8436, 0.023]]]]], Sub83135), 
LSub86892 = subtract_layer(Con82185,Sub83135, Sub86892), 
LRes77711 = reshape_layer(Sub86892, [3, 3, 6], Res77711), 
LRes62087 = reshape_layer(Res77711, [3, 18], Res62087), 
LSep78203 = separable_conv1D_layer(Res62087, 2,[[[[0.1478], [0.9496], [0.8589], [0.0934], [0.3663], [0.3368], [0.6882], [0.0078], [0.0468], [0.3483], [0.1624], [0.3211], [0.929], [0.7934], [0.3928], [0.5286], [0.4131], [0.5932]], [[0.6595], [0.618], [0.2039], [0.5335], [0.0857], [0.451], [0.0289], [0.8842], [0.3214], [0.421], [0.5369], [0.7731], [0.8077], [0.1838], [0.2049], [0.8686], [0.1143], [0.2451]]],[[[0.2378, 0.912], [0.7927, 0.5955], [0.3447, 0.33], [0.2675, 0.0666], [0.0394, 0.8267], [0.5528, 0.9664], [0.8778, 0.0522], [0.3563, 0.5942], [0.1928, 0.8058], [0.1113, 0.2886], [0.7505, 0.6081], [0.0752, 0.9962], [0.4231, 0.3388], [0.851, 0.4407], [0.0778, 0.6618], [0.6662, 0.066], [0.6889, 0.4643], [0.2549, 0.2578]]]],[0, 0], 1, false, Sep78203), 
LRes42876 = reshape_layer(Sep78203, [2, 2, 1], Res42876), 
LCon77733 = conv2D_transpose_layer(Res42876, 1, 1,[[[[0.1056], [0.2534]]]],[0, 0], 1, 10, false, Con77733), 
LZer89926 = zero_padding2D_layer(Con77733, 1, 0, 17, 0, Zer89926), 
LAve76457 = average_layer([Zer43575,Zer89926], Ave76457), 
exec_layers([LDot16591,LRes22,LCon36096,LMin16364,LZer32755,LMul53361,LZer43575,LMax14512,LRes80597,LRes75580,LSep43430,LRes50814,LRes89463,LZer99579,LCon82185,LSub83135,LSub86892,LRes77711,LRes62087,LSep78203,LRes42876,LCon77733,LZer89926,LAve76457],["Dot16591","Res22","Con36096","Min16364","Zer32755","Mul53361","Zer43575","Max14512","Res80597","Res75580","Sep43430","Res50814","Res89463","Zer99579","Con82185","Sub83135","Sub86892","Res77711","Res62087","Sep78203","Res42876","Con77733","Zer89926","Ave76457"],Ave76457,"Ave76457")

Actual (Unparsed): [[[[0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000]], [[0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.1915868, 0.4597357], [0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.2180953, 0.5233460], [0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000]], [[0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.1602422, 0.3845205], [0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.1797313, 0.4312872], [0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.2315467, 0.3067847], [0.4434661, 0.0071313]]]]

Expected (Unparsed): [[[[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0.0,0.0],[0.0,0.0],[0.0,0.0]],[[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0.19158677198664953,0.4597356820209943],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0.21809525584403036,0.5233460021863381],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0.0,0.0],[0.0,0.0],[0.0,0.0]],[[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0.16024217871993615,0.3845205311328771],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0.17973134610519834,0.4312871505971332],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0.0,0.0],[0.23154667938,0.30678469999999997],[0.4434661427795,0.00713133]]]]

Actual:   [[[[0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0]], [[0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0.1916, 0.4598], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0.2181, 0.5234], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0]], [[0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0.1603, 0.3846], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0.1798, 0.4313], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0.2316, 0.3068], [0.4435, 0.0072]]]]

Expected: [[[[0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0]], [[0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0.1916, 0.4598], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0.2181, 0.5234], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0]], [[0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0.1603, 0.3846], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0.1798, 0.4313], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0.2316, 0.3068], [0.4435, 0.0072]]]]