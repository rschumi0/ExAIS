import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Glo70308 = tf.keras.layers.Input(shape=([1, 2, 1, 2]))
in0Con91084 = tf.keras.layers.Input(shape=([2, 1, 2]))
in0Loc52656 = tf.keras.layers.Input(shape=([2, 1, 2]))

Glo70308 = keras.layers.GlobalAveragePooling3D(name = 'Glo70308', )(in0Glo70308)
Res75417 = keras.layers.Reshape((2, 1), name = 'Res75417', )(Glo70308)
Res81493 = keras.layers.Reshape((2, 1, 1), name = 'Res81493', )(Res75417)
Con91084 = keras.layers.Concatenate(axis=3, name = 'Con91084', )([Res81493,in0Con91084])
Loc52656 = keras.layers.LocallyConnected2D(3, (1, 1),strides=(7, 3), name = 'Loc52656', )(in0Loc52656)
Zer65045 = keras.layers.ZeroPadding2D(padding=((1, 0), (0, 0)), name = 'Zer65045', )(Loc52656)
Max9880 = keras.layers.Maximum(name = 'Max9880', )([Con91084,Zer65045])
Res88621 = keras.layers.Reshape((2, 1, 3, 1), name = 'Res88621', )(Max9880)
Up_68606 = keras.layers.UpSampling3D(size=(1, 2, 2), name = 'Up_68606', )(Res88621)
Fla10123 = keras.layers.Flatten(name = 'Fla10123', )(Up_68606)
model = tf.keras.models.Model(inputs=[in0Glo70308,in0Con91084,in0Loc52656], outputs=Fla10123)
w = model.get_layer('Loc52656').get_weights() 
w[0] = np.array([[[0.3405, 0.9723, 0.5249], [0.3575, 0.7748, 0.8652]]])
w[1] = np.array([[[0, 0, 0]]])
model.get_layer('Loc52656').set_weights(w) 
in0Glo70308 = tf.constant([[[[[1.4245, 1.255]], [[1.1323, 1.0869]]]]])
in0Con91084 = tf.constant([[[[0.7382, 0.0893]], [[0.3405, 0.6184]]]])
in0Loc52656 = tf.constant([[[[0.3218, 0.8223]], [[0.8253, 0.9472]]]])
print (np.array2string(model.predict([in0Glo70308,in0Con91084,in0Loc52656],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Fla10123.png')

LGlo70308 = global_average_pooling3D_layer([[[[[1.4245, 1.255]], [[1.1323, 1.0869]]]]], Glo70308), 
LRes75417 = reshape_layer(Glo70308, [2, 1], Res75417), 
LRes81493 = reshape_layer(Res75417, [2, 1, 1], Res81493), 
LCon91084 = concatenate_layer([Res81493,[[[[0.7382, 0.0893]], [[0.3405, 0.6184]]]]], 3, Con91084), 
LLoc52656 = locally_connected2D_layer([[[[0.3218, 0.8223]], [[0.8253, 0.9472]]]], 1, 1,[[[0.3405, 0.9723, 0.5249], [0.3575, 0.7748, 0.8652]]],[[[0, 0, 0]]], 7, 3, Loc52656), 
LZer65045 = zero_padding2D_layer(Loc52656, 1, 0, 0, 0, Zer65045), 
LMax9880 = maximum_layer([Con91084,Zer65045], Max9880), 
LRes88621 = reshape_layer(Max9880, [2, 1, 3, 1], Res88621), 
LUp_68606 = up_sampling3D_layer(Res88621, 1, 2, 2, Up_68606), 
LFla10123 = flatten_layer(Up_68606, Fla10123), 
exec_layers([LGlo70308,LRes75417,LRes81493,LCon91084,LLoc52656,LZer65045,LMax9880,LRes88621,LUp_68606,LFla10123],["Glo70308","Res75417","Res81493","Con91084","Loc52656","Zer65045","Max9880","Res88621","Up_68606","Fla10123"],Fla10123,"Fla10123")

Actual (Unparsed): [[1.2784000, 1.2784000, 0.7382000, 0.7382000, 0.0893000, 0.0893000, 1.2784000, 1.2784000, 0.7382000, 0.7382000, 0.0893000, 0.0893000, 1.1709500, 1.1709500, 0.9500042, 0.9500042, 0.8803668, 0.8803668, 1.1709500, 1.1709500, 0.9500042, 0.9500042, 0.8803668, 0.8803668]]

Expected (Unparsed): [[1.2784,1.2784,0.7382,0.7382,0.0893,0.0893,1.2784,1.2784,0.7382,0.7382,0.0893,0.0893,1.17095,1.17095,0.9500041800000001,0.9500041800000001,0.88036678,0.88036678,1.17095,1.17095,0.9500041800000001,0.9500041800000001,0.88036678,0.88036678]]

Actual:   [[1.2784, 1.2784, 0.7382, 0.7382, 0.0893, 0.0893, 1.2784, 1.2784, 0.7382, 0.7382, 0.0893, 0.0893, 1.171, 1.171, 0.9501, 0.9501, 0.8804, 0.8804, 1.171, 1.171, 0.9501, 0.9501, 0.8804, 0.8804]]

Expected: [[1.2784, 1.2784, 0.7382, 0.7382, 0.0893, 0.0893, 1.2784, 1.2784, 0.7382, 0.7382, 0.0893, 0.0893, 1.171, 1.171, 0.9501, 0.9501, 0.8804, 0.8804, 1.171, 1.171, 0.9501, 0.9501, 0.8804, 0.8804]]