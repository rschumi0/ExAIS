import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Min95972 = tf.keras.layers.Input(shape=([1, 2, 1]))
in1Min95972 = tf.keras.layers.Input(shape=([1, 2, 1]))
in0Sub62771 = tf.keras.layers.Input(shape=([3, 3, 2]))
in1Sub62771 = tf.keras.layers.Input(shape=([3, 3, 2]))
in0Con12145 = tf.keras.layers.Input(shape=([1]))

Min95972 = keras.layers.Minimum(name = 'Min95972', )([in0Min95972,in1Min95972])
Con76019 = keras.layers.Conv2D(2, (1, 2),strides=(1, 1), padding='valid', dilation_rate=(1, 1), name = 'Con76019', )(Min95972)
Res88377 = keras.layers.Reshape((1, 2), name = 'Res88377', )(Con76019)
Fla8787 = keras.layers.Flatten(name = 'Fla8787', )(Res88377)
Sub62771 = keras.layers.Subtract(name = 'Sub62771', )([in0Sub62771,in1Sub62771])
Res79596 = keras.layers.Reshape((3, 3, 2, 1), name = 'Res79596', )(Sub62771)
Glo690 = keras.layers.GlobalAveragePooling3D(name = 'Glo690', )(Res79596)
Con12145 = keras.layers.Concatenate(axis=1, name = 'Con12145', )([Glo690,in0Con12145])
Mul48733 = keras.layers.Multiply(name = 'Mul48733', )([Fla8787,Con12145])
model = tf.keras.models.Model(inputs=[in0Min95972,in1Min95972,in0Sub62771,in1Sub62771,in0Con12145], outputs=Mul48733)
w = model.get_layer('Con76019').get_weights() 
w[0] = np.array([[[[0.7583, 0.6133]], [[0.6863, 0.3672]]]])
w[1] = np.array([0, 0])
model.get_layer('Con76019').set_weights(w) 
in0Min95972 = tf.constant([[[[0.3343], [0.1345]]]])
in1Min95972 = tf.constant([[[[0.7813], [0.2899]]]])
in0Sub62771 = tf.constant([[[[0.3787, 0.1729], [0.2818, 0.4882], [0.6796, 0.4004]], [[0.995, 0.9997], [0.5906, 0.1292], [0.1683, 0.4385]], [[0.2224, 0.3657], [0.8123, 0.3983], [0.7198, 0.6421]]]])
in1Sub62771 = tf.constant([[[[0.372, 0.2745], [0.0664, 0.4974], [0.3208, 0.8821]], [[0.0461, 0.5439], [0.6628, 0.0469], [0.8751, 0.7622]], [[0.1742, 0.1316], [0.0619, 0.7834], [0.7102, 0.1521]]]])
in0Con12145 = tf.constant([[0.5071]])
print (np.array2string(model.predict([in0Min95972,in1Min95972,in0Sub62771,in1Sub62771,in0Con12145],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Mul48733.png')

LMin95972 = minimum_layer([[[[[0.3343], [0.1345]]]], [[[[0.7813], [0.2899]]]]], Min95972), 
LCon76019 = conv2D_layer(Min95972, 1, 2,[[[[0.7583, 0.6133]], [[0.6863, 0.3672]]]],[0, 0], 1, 1, false, 1, 1, Con76019), 
LRes88377 = reshape_layer(Con76019, [1, 2], Res88377), 
LFla8787 = flatten_layer(Res88377, Fla8787), 
LSub62771 = subtract_layer([[[[0.3787, 0.1729], [0.2818, 0.4882], [0.6796, 0.4004]], [[0.995, 0.9997], [0.5906, 0.1292], [0.1683, 0.4385]], [[0.2224, 0.3657], [0.8123, 0.3983], [0.7198, 0.6421]]]], [[[[0.372, 0.2745], [0.0664, 0.4974], [0.3208, 0.8821]], [[0.0461, 0.5439], [0.6628, 0.0469], [0.8751, 0.7622]], [[0.1742, 0.1316], [0.0619, 0.7834], [0.7102, 0.1521]]]], Sub62771), 
LRes79596 = reshape_layer(Sub62771, [3, 3, 2, 1], Res79596), 
LGlo690 = global_average_pooling3D_layer(Res79596, Glo690), 
LCon12145 = concatenate_layer([Glo690,[[0.5071]]], 1, Con12145), 
LMul48733 = multiply_layer([Fla8787,Con12145], Mul48733), 
exec_layers([LMin95972,LCon76019,LRes88377,LFla8787,LSub62771,LRes79596,LGlo690,LCon12145,LMul48733],["Min95972","Con76019","Res88377","Fla8787","Sub62771","Res79596","Glo690","Con12145","Mul48733"],Mul48733,"Mul48733")

Actual (Unparsed): [[0.0291996, 0.1290136]]

Expected (Unparsed): [[0.029199562227555563,0.129013638589]]

Actual:   [[0.0292, 0.1291]]

Expected: [[0.0292, 0.1291]]