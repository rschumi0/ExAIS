import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Max98705 = tf.keras.layers.Input(shape=([1, 2, 2, 2]))
in1Max98705 = tf.keras.layers.Input(shape=([1, 2, 2, 2]))
in0Sub27854 = tf.keras.layers.Input(shape=([3]))
in1Sub27854 = tf.keras.layers.Input(shape=([3]))
in0Con21297 = tf.keras.layers.Input(shape=([3, 3, 3]))

Max98705 = keras.layers.Maximum(name = 'Max98705', )([in0Max98705,in1Max98705])
Res29963 = keras.layers.Reshape((1, 2, 4), name = 'Res29963', )(Max98705)
Zer75546 = keras.layers.ZeroPadding2D(padding=((2, 0), (1, 0)), name = 'Zer75546', )(Res29963)
Sub27854 = keras.layers.Subtract(name = 'Sub27854', )([in0Sub27854,in1Sub27854])
Lay23244 = keras.layers.LayerNormalization(axis=1, epsilon=1.671663027379654, name = 'Lay23244', )(Sub27854)
Res83902 = keras.layers.Reshape((3, 1), name = 'Res83902', )(Lay23244)
Res23633 = keras.layers.Reshape((3, 1, 1), name = 'Res23633', )(Res83902)
Dep21776 = keras.layers.DepthwiseConv2D((1, 1),strides=(1, 1), padding='same', name = 'Dep21776', )(Res23633)
Zer4854 = keras.layers.ZeroPadding2D(padding=((0, 0), (2, 0)), name = 'Zer4854', )(Dep21776)
Con21297 = keras.layers.Concatenate(axis=3, name = 'Con21297', )([Zer4854,in0Con21297])
Mul53324 = keras.layers.Multiply(name = 'Mul53324', )([Zer75546,Con21297])
model = tf.keras.models.Model(inputs=[in0Max98705,in1Max98705,in0Sub27854,in1Sub27854,in0Con21297], outputs=Mul53324)
w = model.get_layer('Dep21776').get_weights() 
w[0] = np.array([[[[0.5552]]]])
w[1] = np.array([0])
model.get_layer('Dep21776').set_weights(w) 
in0Max98705 = tf.constant([[[[[0.6917, 0.3117], [0.8762, 0.418]], [[0.3203, 0.7632], [0.7185, 0.1285]]]]])
in1Max98705 = tf.constant([[[[[0.8667, 0.6982], [0.3314, 0.9997]], [[0.2807, 0.2421], [0.0522, 0.7317]]]]])
in0Sub27854 = tf.constant([[0.4114, 0.5797, 0.9219]])
in1Sub27854 = tf.constant([[0.7774, 0.1227, 0.5042]])
in0Con21297 = tf.constant([[[[0.2051, 0.8808, 0.8705], [0.1603, 0.9917, 0.4023], [0.1216, 0.8483, 0.3518]], [[0.7538, 0.9658, 0.0002], [0.7312, 0.7327, 0.6986], [0.0545, 0.0175, 0.7536]], [[0.1625, 0.5736, 0.4552], [0.0071, 0.7295, 0.465], [0.0776, 0.8198, 0.4775]]]])
print (np.array2string(model.predict([in0Max98705,in1Max98705,in0Sub27854,in1Sub27854,in0Con21297],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Mul53324.png')

LMax98705 = maximum_layer([[[[[[0.6917, 0.3117], [0.8762, 0.418]], [[0.3203, 0.7632], [0.7185, 0.1285]]]]], [[[[[0.8667, 0.6982], [0.3314, 0.9997]], [[0.2807, 0.2421], [0.0522, 0.7317]]]]]], Max98705), 
LRes29963 = reshape_layer(Max98705, [1, 2, 4], Res29963), 
LZer75546 = zero_padding2D_layer(Res29963, 2, 0, 1, 0, Zer75546), 
LSub27854 = subtract_layer([[0.4114, 0.5797, 0.9219]], [[0.7774, 0.1227, 0.5042]], Sub27854), 
LLay23244 = layer_normalization_layer(Sub27854, 1, 1.671663027379654, Lay23244), 
LRes83902 = reshape_layer(Lay23244, [3, 1], Res83902), 
LRes23633 = reshape_layer(Res83902, [3, 1, 1], Res23633), 
LDep21776 = depthwise_conv2D_layer(Res23633, 1, 1,[[[[0.5552]]]],[0], 1, 1, true, Dep21776), 
LZer4854 = zero_padding2D_layer(Dep21776, 0, 0, 2, 0, Zer4854), 
LCon21297 = concatenate_layer([Zer4854,[[[[0.2051, 0.8808, 0.8705], [0.1603, 0.9917, 0.4023], [0.1216, 0.8483, 0.3518]], [[0.7538, 0.9658, 0.0002], [0.7312, 0.7327, 0.6986], [0.0545, 0.0175, 0.7536]], [[0.1625, 0.5736, 0.4552], [0.0071, 0.7295, 0.465], [0.0776, 0.8198, 0.4775]]]]], 3, Con21297), 
LMul53324 = multiply_layer([Zer75546,Con21297], Mul53324), 
exec_layers([LMax98705,LRes29963,LZer75546,LSub27854,LLay23244,LRes83902,LRes23633,LDep21776,LZer4854,LCon21297,LMul53324],["Max98705","Res29963","Zer75546","Sub27854","Lay23244","Res83902","Res23633","Dep21776","Zer4854","Con21297","Mul53324"],Mul53324,"Mul53324")

Actual (Unparsed): [[[[0.0000000, 0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000, 0.0000000], [-0.0000000, 0.0000000, 0.0000000, 0.0000000]], [[0.0000000, 0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000, 0.0000000]], [[0.0000000, 0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0049572, 0.6391879, 0.4648605], [0.0327501, 0.0592243, 0.5890263, 0.3493867]]]]

Expected (Unparsed): [[[[0,0.0,0.0,0.0],[0,0.0,0.0,0.0],[-0.0,0.0,0.0,0.0]],[[0,0.0,0.0,0.0],[0,0.0,0.0,0.0],[0.0,0.0,0.0,0.0]],[[0,0.0,0.0,0.0],[0.0,0.004957220000000001,0.6391879,0.46486050000000007],[0.03275012511605326,0.059224320000000004,0.5890263,0.34938674999999997]]]]

Actual:   [[[[0, 0, 0, 0], [0, 0, 0, 0], [-0, 0, 0, 0]], [[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]], [[0, 0, 0, 0], [0, 0.005, 0.6392, 0.4649], [0.0328, 0.0593, 0.5891, 0.3494]]]]

Expected: [[[[0, 0, 0, 0], [0, 0, 0, 0], [-0, 0, 0, 0]], [[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]], [[0, 0, 0, 0], [0, 0.005, 0.6392, 0.4649], [0.0328, 0.0593, 0.5891, 0.3494]]]]