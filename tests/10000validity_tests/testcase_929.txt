import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Thr69826 = tf.keras.layers.Input(shape=([1, 2, 1, 1]))
in0Ave16142 = tf.keras.layers.Input(shape=([1, 1, 2, 1]))
in1Ave16142 = tf.keras.layers.Input(shape=([1, 1, 2, 1]))
in0Ave63943 = tf.keras.layers.Input(shape=([2, 1, 1]))
in1Ave63943 = tf.keras.layers.Input(shape=([2, 1, 1]))
in0Con79394 = tf.keras.layers.Input(shape=([2, 3]))

Thr69826 = keras.layers.ThresholdedReLU(theta=5.519509481220495, name = 'Thr69826', input_shape=(1, 2, 1, 1))(in0Thr69826)
Res79238 = keras.layers.Reshape((1, 2, 1), name = 'Res79238', )(Thr69826)
Con79477 = keras.layers.Conv2DTranspose(2, (1, 2),strides=(1, 1), padding='same', name = 'Con79477', )(Res79238)
Res1130 = keras.layers.Reshape((1, 2, 2, 1), name = 'Res1130', )(Con79477)
Ave16142 = keras.layers.Average(name = 'Ave16142', )([in0Ave16142,in1Ave16142])
Zer18589 = keras.layers.ZeroPadding3D(padding=((0, 0), (1, 0), (0, 0)), name = 'Zer18589', )(Ave16142)
Min21354 = keras.layers.Minimum(name = 'Min21354', )([Res1130,Zer18589])
Res83796 = keras.layers.Reshape((1, 2, 2), name = 'Res83796', )(Min21354)
Res31117 = keras.layers.Reshape((1, 4), name = 'Res31117', )(Res83796)
Zer64703 = keras.layers.ZeroPadding1D(padding=((1, 0)), name = 'Zer64703', )(Res31117)
Ave63943 = keras.layers.Average(name = 'Ave63943', )([in0Ave63943,in1Ave63943])
Res51688 = keras.layers.Reshape((2, 1), name = 'Res51688', )(Ave63943)
Cro32077 = keras.layers.Cropping1D(cropping=((0, 0)), name = 'Cro32077', )(Res51688)
Con79394 = keras.layers.Concatenate(axis=2, name = 'Con79394', )([Cro32077,in0Con79394])
Sub5863 = keras.layers.Subtract(name = 'Sub5863', )([Zer64703,Con79394])
model = tf.keras.models.Model(inputs=[in0Thr69826,in0Ave16142,in1Ave16142,in0Ave63943,in1Ave63943,in0Con79394], outputs=Sub5863)
w = model.get_layer('Con79477').get_weights() 
w[0] = np.array([[[[0.8609], [0.7228]], [[0.4389], [0.4966]]]])
w[1] = np.array([0, 0])
model.get_layer('Con79477').set_weights(w) 
in0Thr69826 = tf.constant([[[[[0.1858]], [[0.0481]]]]])
in0Ave16142 = tf.constant([[[[[0.2699], [0.5596]]]]])
in1Ave16142 = tf.constant([[[[[0.0826], [0.9413]]]]])
in0Ave63943 = tf.constant([[[[0.7714]], [[0.5696]]]])
in1Ave63943 = tf.constant([[[[0.7464]], [[0.2303]]]])
in0Con79394 = tf.constant([[[0.1962, 0.3423, 0.2686], [0.8899, 0.2893, 0.5017]]])
print (np.array2string(model.predict([in0Thr69826,in0Ave16142,in1Ave16142,in0Ave63943,in1Ave63943,in0Con79394],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Sub5863.png')

LThr69826 = thresholded_relu_layer([[[[[0.1858]], [[0.0481]]]]], 5.519509481220495, Thr69826), 
LRes79238 = reshape_layer(Thr69826, [1, 2, 1], Res79238), 
LCon79477 = conv2D_transpose_layer(Res79238, 1, 2,[[[[0.8609], [0.7228]], [[0.4389], [0.4966]]]],[0, 0], 1, 1, true, Con79477), 
LRes1130 = reshape_layer(Con79477, [1, 2, 2, 1], Res1130), 
LAve16142 = average_layer([[[[[[0.2699], [0.5596]]]]], [[[[[0.0826], [0.9413]]]]]], Ave16142), 
LZer18589 = zero_padding3D_layer(Ave16142, 0, 0, 1, 0, 0, 0, Zer18589), 
LMin21354 = minimum_layer([Res1130,Zer18589], Min21354), 
LRes83796 = reshape_layer(Min21354, [1, 2, 2], Res83796), 
LRes31117 = reshape_layer(Res83796, [1, 4], Res31117), 
LZer64703 = zero_padding1D_layer(Res31117, 1, 0, Zer64703), 
LAve63943 = average_layer([[[[[0.7714]], [[0.5696]]]], [[[[0.7464]], [[0.2303]]]]], Ave63943), 
LRes51688 = reshape_layer(Ave63943, [2, 1], Res51688), 
LCro32077 = cropping1D_layer(Res51688, 0, 0, Cro32077), 
LCon79394 = concatenate_layer([Cro32077,[[[0.1962, 0.3423, 0.2686], [0.8899, 0.2893, 0.5017]]]], 2, Con79394), 
LSub5863 = subtract_layer(Zer64703,Con79394, Sub5863), 
exec_layers([LThr69826,LRes79238,LCon79477,LRes1130,LAve16142,LZer18589,LMin21354,LRes83796,LRes31117,LZer64703,LAve63943,LRes51688,LCro32077,LCon79394,LSub5863],["Thr69826","Res79238","Con79477","Res1130","Ave16142","Zer18589","Min21354","Res83796","Res31117","Zer64703","Ave63943","Res51688","Cro32077","Con79394","Sub5863"],Sub5863,"Sub5863")

Actual (Unparsed): [[[-0.7589000, -0.1962000, -0.3423000, -0.2686000], [-0.3999500, -0.8899000, -0.2893000, -0.5017000]]]

Expected (Unparsed): [[[-0.7588999999999999,-0.1962,-0.3423,-0.2686],[-0.39995,-0.8899,-0.2893,-0.5017]]]

Actual:   [[[-0.7589, -0.1962, -0.3423, -0.2686], [-0.3999, -0.8899, -0.2893, -0.5017]]]

Expected: [[[-0.7588, -0.1962, -0.3423, -0.2686], [-0.3999, -0.8899, -0.2893, -0.5017]]]