import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Loc62789 = tf.keras.layers.Input(shape=([2, 2]))

Loc62789 = keras.layers.LocallyConnected1D(2, (1),strides=(1), name = 'Loc62789', )(in0Loc62789)
Glo85866 = keras.layers.GlobalMaxPool1D(name = 'Glo85866', )(Loc62789)
Res70878 = keras.layers.Reshape((2, 1), name = 'Res70878', )(Glo85866)
Res42755 = keras.layers.Reshape((2, 1, 1), name = 'Res42755', )(Res70878)
Res58757 = keras.layers.Reshape((2, 1, 1, 1), name = 'Res58757', )(Res42755)
Glo3269 = keras.layers.GlobalMaxPool3D(name = 'Glo3269', )(Res58757)
model = tf.keras.models.Model(inputs=[in0Loc62789], outputs=Glo3269)
w = model.get_layer('Loc62789').get_weights() 
w[0] = np.array([[[0.1054, 0.3348], [0.3865, 0.8638]], [[0.9327, 0.6899], [0.0422, 0.525]]])
w[1] = np.array([[0, 0], [0, 0]])
model.get_layer('Loc62789').set_weights(w) 
in0Loc62789 = tf.constant([[[0.8736, 0.0141], [0.6502, 0.6104]]])
print (np.array2string(model.predict([in0Loc62789],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Glo3269.png')

LLoc62789 = locally_connected1D_layer([[[0.8736, 0.0141], [0.6502, 0.6104]]], 1,[[[0.1054, 0.3348], [0.3865, 0.8638]], [[0.9327, 0.6899], [0.0422, 0.525]]],[[0, 0], [0, 0]], 1, Loc62789), 
LGlo85866 = global_max_pool1D_layer(Loc62789, Glo85866), 
LRes70878 = reshape_layer(Glo85866, [2, 1], Res70878), 
LRes42755 = reshape_layer(Res70878, [2, 1, 1], Res42755), 
LRes58757 = reshape_layer(Res42755, [2, 1, 1, 1], Res58757), 
LGlo3269 = global_max_pool3D_layer(Res58757, Glo3269), 
exec_layers([LLoc62789,LGlo85866,LRes70878,LRes42755,LRes58757,LGlo3269],["Loc62789","Glo85866","Res70878","Res42755","Res58757","Glo3269"],Glo3269,"Glo3269")

Actual (Unparsed): [[0.7690330]]

Expected (Unparsed): [[0.76903298]]

Actual:   [[0.7691]]

Expected: [[0.7691]]