import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Glo40831 = tf.keras.layers.Input(shape=([2, 2, 1]))
in0Con1898 = tf.keras.layers.Input(shape=([3]))
in0Glo56747 = tf.keras.layers.Input(shape=([2, 2]))
in0Con59608 = tf.keras.layers.Input(shape=([2]))
in0Up_21222 = tf.keras.layers.Input(shape=([2, 2, 2, 1]))

Glo40831 = keras.layers.GlobalMaxPool2D(name = 'Glo40831', )(in0Glo40831)
Con1898 = keras.layers.Concatenate(axis=1, name = 'Con1898', )([Glo40831,in0Con1898])
Glo56747 = keras.layers.GlobalAveragePooling1D(name = 'Glo56747', )(in0Glo56747)
Con59608 = keras.layers.Concatenate(axis=1, name = 'Con59608', )([Glo56747,in0Con59608])
Up_21222 = keras.layers.UpSampling3D(size=(2, 1, 1), name = 'Up_21222', )(in0Up_21222)
Res16740 = keras.layers.Reshape((4, 2, 2), name = 'Res16740', )(Up_21222)
Res42467 = keras.layers.Reshape((4, 4), name = 'Res42467', )(Res16740)
Glo97973 = keras.layers.GlobalAveragePooling1D(name = 'Glo97973', )(Res42467)
Sub53973 = keras.layers.Subtract(name = 'Sub53973', )([Con59608,Glo97973])
Mul16960 = keras.layers.Multiply(name = 'Mul16960', )([Con1898,Sub53973])
model = tf.keras.models.Model(inputs=[in0Glo40831,in0Con1898,in0Glo56747,in0Con59608,in0Up_21222], outputs=Mul16960)
in0Glo40831 = tf.constant([[[[1.533], [1.6011]], [[1.5072], [1.0041]]]])
in0Con1898 = tf.constant([[0.9019, 0.5709, 0.6008]])
in0Glo56747 = tf.constant([[[1.5673, 1.1181], [1.0504, 1.8238]]])
in0Con59608 = tf.constant([[0.91, 0.2528]])
in0Up_21222 = tf.constant([[[[[1.9969], [1.5888]], [[1.8537], [1.5998]]], [[[1.8375], [1.4881]], [[1.0006], [1.752]]]]])
print (np.array2string(model.predict([in0Glo40831,in0Con1898,in0Glo56747,in0Con59608,in0Up_21222],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Mul16960.png')

LGlo40831 = global_max_pool2D_layer([[[[1.533], [1.6011]], [[1.5072], [1.0041]]]], Glo40831), 
LCon1898 = concatenate_layer([Glo40831,[[0.9019, 0.5709, 0.6008]]], 1, Con1898), 
LGlo56747 = global_average_pooling1D_layer([[[1.5673, 1.1181], [1.0504, 1.8238]]], Glo56747), 
LCon59608 = concatenate_layer([Glo56747,[[0.91, 0.2528]]], 1, Con59608), 
LUp_21222 = up_sampling3D_layer([[[[[1.9969], [1.5888]], [[1.8537], [1.5998]]], [[[1.8375], [1.4881]], [[1.0006], [1.752]]]]], 2, 1, 1, Up_21222), 
LRes16740 = reshape_layer(Up_21222, [4, 2, 2], Res16740), 
LRes42467 = reshape_layer(Res16740, [4, 4], Res42467), 
LGlo97973 = global_average_pooling1D_layer(Res42467, Glo97973), 
LSub53973 = subtract_layer(Con59608,Glo97973, Sub53973), 
LMul16960 = multiply_layer([Con1898,Sub53973], Mul16960), 
exec_layers([LGlo40831,LCon1898,LGlo56747,LCon59608,LUp_21222,LRes16740,LRes42467,LGlo97973,LSub53973,LMul16960],["Glo40831","Con1898","Glo56747","Con59608","Up_21222","Res16740","Res42467","Glo97973","Sub53973","Mul16960"],Mul16960,"Mul16960")

Actual (Unparsed): [[-0.9740291, -0.0608782, -0.2952409, -0.8549984]]

Expected (Unparsed): [[-0.9740291849999996,-0.060878249999999905,-0.29524093500000004,-0.8549984799999999]]

Actual:   [[-0.974, -0.0608, -0.2952, -0.8549]]

Expected: [[-0.974, -0.0608, -0.2952, -0.8549]]