import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Mul81879 = tf.keras.layers.Input(shape=([1, 2]))
in1Mul81879 = tf.keras.layers.Input(shape=([1, 2]))
in0Zer5026 = tf.keras.layers.Input(shape=([1, 1]))
in0Con2635 = tf.keras.layers.Input(shape=([3, 1]))
in0Sub82231 = tf.keras.layers.Input(shape=([2, 2]))
in1Sub82231 = tf.keras.layers.Input(shape=([2, 2]))
in0ReL10735 = tf.keras.layers.Input(shape=([2, 2, 1, 1]))
in0Con9722 = tf.keras.layers.Input(shape=([6]))
in0Bat38970 = tf.keras.layers.Input(shape=([4, 3]))
in0Bat53483 = tf.keras.layers.Input(shape=([3]))
in0Con54825 = tf.keras.layers.Input(shape=([9]))

Mul81879 = keras.layers.Multiply(name = 'Mul81879', )([in0Mul81879,in1Mul81879])
Zer24221 = keras.layers.ZeroPadding1D(padding=((2, 0)), name = 'Zer24221', )(Mul81879)
Zer5026 = keras.layers.ZeroPadding1D(padding=((1, 1)), name = 'Zer5026', )(in0Zer5026)
Con2635 = keras.layers.Concatenate(axis=2, name = 'Con2635', )([Zer5026,in0Con2635])
Ave81933 = keras.layers.Average(name = 'Ave81933', )([Zer24221,Con2635])
Res38374 = keras.layers.Reshape((3, 2, 1), name = 'Res38374', )(Ave81933)
Res29684 = keras.layers.Reshape((3, 2, 1, 1), name = 'Res29684', )(Res38374)
Sub82231 = keras.layers.Subtract(name = 'Sub82231', )([in0Sub82231,in1Sub82231])
Res16582 = keras.layers.Reshape((2, 2, 1), name = 'Res16582', )(Sub82231)
Res29947 = keras.layers.Reshape((2, 2, 1, 1), name = 'Res29947', )(Res16582)
ReL10735 = keras.layers.ReLU(max_value=8.125169915480742, negative_slope=8.805959337899537, threshold=7.292393438037273, name = 'ReL10735', input_shape=(2, 2, 1, 1))(in0ReL10735)
Mul80247 = keras.layers.Multiply(name = 'Mul80247', )([Res29947,ReL10735])
Zer65172 = keras.layers.ZeroPadding3D(padding=((1, 0), (0, 0), (0, 0)), name = 'Zer65172', )(Mul80247)
Mul49475 = keras.layers.Multiply(name = 'Mul49475', )([Res29684,Zer65172])
Res5626 = keras.layers.Reshape((3, 2, 1), name = 'Res5626', )(Mul49475)
Res68811 = keras.layers.Reshape((3, 2), name = 'Res68811', )(Res5626)
Fla19136 = keras.layers.Flatten(name = 'Fla19136', )(Res68811)
Con9722 = keras.layers.Concatenate(axis=1, name = 'Con9722', )([Fla19136,in0Con9722])
Bat38970 = keras.layers.BatchNormalization(axis=2, epsilon=0.19665303721319133,  name = 'Bat38970', )(in0Bat38970)
Fla50532 = keras.layers.Flatten(name = 'Fla50532', )(Bat38970)
Bat53483 = keras.layers.BatchNormalization(axis=1, epsilon=0.17820978539624432,  name = 'Bat53483', )(in0Bat53483)
Con54825 = keras.layers.Concatenate(axis=1, name = 'Con54825', )([Bat53483,in0Con54825])
Mul12988 = keras.layers.Multiply(name = 'Mul12988', )([Fla50532,Con54825])
Max6707 = keras.layers.Maximum(name = 'Max6707', )([Con9722,Mul12988])
model = tf.keras.models.Model(inputs=[in0Mul81879,in1Mul81879,in0Zer5026,in0Con2635,in0Sub82231,in1Sub82231,in0ReL10735,in0Con9722,in0Bat38970,in0Bat53483,in0Con54825], outputs=Max6707)
w = model.get_layer('Bat38970').get_weights() 
w[0] = np.array([0.8682, 0.2398, 0.3748])
w[1] = np.array([0.4008, 0.0828, 0.7292])
w[2] = np.array([0.1018, 0.5277, 0.6495])
w[3] = np.array([0.4758, 0.5139, 0.7986])
model.get_layer('Bat38970').set_weights(w) 
w = model.get_layer('Bat53483').get_weights() 
w[0] = np.array([0.6213, 0.1368, 0.5298])
w[1] = np.array([0.2725, 0.8778, 0.3633])
w[2] = np.array([0.6198, 0.9676, 0.2978])
w[3] = np.array([0.0144, 0.8044, 0.3384])
model.get_layer('Bat53483').set_weights(w) 
in0Mul81879 = tf.constant([[[0.7431, 0.4187]]])
in1Mul81879 = tf.constant([[[0.6252, 0.9246]]])
in0Zer5026 = tf.constant([[[1.8343]]])
in0Con2635 = tf.constant([[[0.6719], [0.4301], [0.9799]]])
in0Sub82231 = tf.constant([[[0.8156, 0.1127], [0.0895, 0.6837]]])
in1Sub82231 = tf.constant([[[0.264, 0.8649], [0.8822, 0.7625]]])
in0ReL10735 = tf.constant([[[[[0.0768]], [[0.4858]]], [[[0.4055]], [[0.97]]]]])
in0Con9722 = tf.constant([[0.875, 0.0069, 0.224, 0.295, 0.7541, 0.4371]])
in0Bat38970 = tf.constant([[[1.9398, 1.5134, 1.0661], [1.882, 1.001, 1.1821], [1.0857, 1.299, 1.3966], [1.1929, 1.5841, 1.669]]])
in0Bat53483 = tf.constant([[1.5396, 1.8221, 1.0203]])
in0Con54825 = tf.constant([[0.3438, 0.3674, 0.2351, 0.1096, 0.1582, 0.825, 0.3298, 0.4996, 0.5471]])
print (np.array2string(model.predict([in0Mul81879,in1Mul81879,in0Zer5026,in0Con2635,in0Sub82231,in1Sub82231,in0ReL10735,in0Con9722,in0Bat38970,in0Bat53483,in0Con54825],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Max6707.png')

LMul81879 = multiply_layer([[[[0.7431, 0.4187]]], [[[0.6252, 0.9246]]]], Mul81879), 
LZer24221 = zero_padding1D_layer(Mul81879, 2, 0, Zer24221), 
LZer5026 = zero_padding1D_layer([[[1.8343]]], 1, 1, Zer5026), 
LCon2635 = concatenate_layer([Zer5026,[[[0.6719], [0.4301], [0.9799]]]], 2, Con2635), 
LAve81933 = average_layer([Zer24221,Con2635], Ave81933), 
LRes38374 = reshape_layer(Ave81933, [3, 2, 1], Res38374), 
LRes29684 = reshape_layer(Res38374, [3, 2, 1, 1], Res29684), 
LSub82231 = subtract_layer([[[0.8156, 0.1127], [0.0895, 0.6837]]], [[[0.264, 0.8649], [0.8822, 0.7625]]], Sub82231), 
LRes16582 = reshape_layer(Sub82231, [2, 2, 1], Res16582), 
LRes29947 = reshape_layer(Res16582, [2, 2, 1, 1], Res29947), 
LReL10735 = relu_layer([[[[[0.0768]], [[0.4858]]], [[[0.4055]], [[0.97]]]]], 8.125169915480742, 8.805959337899537, 7.292393438037273, ReL10735), 
LMul80247 = multiply_layer([Res29947,ReL10735], Mul80247), 
LZer65172 = zero_padding3D_layer(Mul80247, 1, 0, 0, 0, 0, 0, Zer65172), 
LMul49475 = multiply_layer([Res29684,Zer65172], Mul49475), 
LRes5626 = reshape_layer(Mul49475, [3, 2, 1], Res5626), 
LRes68811 = reshape_layer(Res5626, [3, 2], Res68811), 
LFla19136 = flatten_layer(Res68811, Fla19136), 
LCon9722 = concatenate_layer([Fla19136,[[0.875, 0.0069, 0.224, 0.295, 0.7541, 0.4371]]], 1, Con9722), 
LBat38970 = batch_normalization_layer([[[1.9398, 1.5134, 1.0661], [1.882, 1.001, 1.1821], [1.0857, 1.299, 1.3966], [1.1929, 1.5841, 1.669]]], 2, 0.19665303721319133, [0.8682, 0.2398, 0.3748], [0.4008, 0.0828, 0.7292], [0.1018, 0.5277, 0.6495], [0.4758, 0.5139, 0.7986], Bat38970), 
LFla50532 = flatten_layer(Bat38970, Fla50532), 
LBat53483 = batch_normalization_layer([[1.5396, 1.8221, 1.0203]], 1, 0.17820978539624432, [0.6213, 0.1368, 0.5298], [0.2725, 0.8778, 0.3633], [0.6198, 0.9676, 0.2978], [0.0144, 0.8044, 0.3384], Bat53483), 
LCon54825 = concatenate_layer([Bat53483,[[0.3438, 0.3674, 0.2351, 0.1096, 0.1582, 0.825, 0.3298, 0.4996, 0.5471]]], 1, Con54825), 
LMul12988 = multiply_layer([Fla50532,Con54825], Mul12988), 
LMax6707 = maximum_layer([Con9722,Mul12988], Max6707), 
exec_layers([LMul81879,LZer24221,LZer5026,LCon2635,LAve81933,LRes38374,LRes29684,LSub82231,LRes16582,LRes29947,LReL10735,LMul80247,LZer65172,LMul49475,LRes5626,LRes68811,LFla19136,LCon9722,LBat38970,LFla50532,LBat53483,LCon54825,LMul12988,LMax6707],["Mul81879","Zer24221","Zer5026","Con2635","Ave81933","Res38374","Res29684","Sub82231","Res16582","Res29947","ReL10735","Mul80247","Zer65172","Mul49475","Res5626","Res68811","Fla19136","Con9722","Bat38970","Fla50532","Bat53483","Con54825","Mul12988","Max6707"],Max6707,"Max6707")

Actual (Unparsed): [[3.6952903, 0.3616588, 0.7934754, 9.6957018, 11.1672209, 2.9986948, 0.8750000, 0.0478110, 0.8331510, 0.5131654, 0.7541000, 0.6084949]]

Expected (Unparsed): [[3.6952902477772667,0.36165885515057344,0.793475332154913,9.695702079411229,11.167221543083421,2.998696187743408,0.875,0.04781104808723959,0.8331510506374356,0.5131654465654286,0.7541,0.6084948887071446]]

Actual:   [[3.6953, 0.3617, 0.7935, 9.6958, 11.1673, 2.9987, 0.875, 0.0479, 0.8332, 0.5132, 0.7541, 0.6085]]

Expected: [[3.6953, 0.3617, 0.7935, 9.6958, 11.1673, 2.9987, 0.875, 0.0479, 0.8332, 0.5132, 0.7541, 0.6085]]