import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0GRU18195 = tf.keras.layers.Input(shape=([1, 3]))
in0Con35735 = tf.keras.layers.Input(shape=([3, 3]))
in0Cro30136 = tf.keras.layers.Input(shape=([1, 4]))
in0Con50114 = tf.keras.layers.Input(shape=([3, 4, 3]))
in0Con53079 = tf.keras.layers.Input(shape=([1, 2, 1]))
in0Con68442 = tf.keras.layers.Input(shape=([3, 4, 4, 1]))
in0Con24894 = tf.keras.layers.Input(shape=([1, 1, 1, 1]))

GRU18195 = keras.layers.GRU(3,reset_after=False, recurrent_activation='sigmoid', name = 'GRU18195', )(in0GRU18195)
Res17734 = keras.layers.Reshape((3, 1), name = 'Res17734', )(GRU18195)
Con35735 = keras.layers.Concatenate(axis=2, name = 'Con35735', )([Res17734,in0Con35735])
Cro30136 = keras.layers.Cropping1D(cropping=((0, 0)), name = 'Cro30136', )(in0Cro30136)
Lea43351 = keras.layers.LeakyReLU(alpha=8.68637410107927, name = 'Lea43351', )(Cro30136)
Zer69322 = keras.layers.ZeroPadding1D(padding=((2, 0)), name = 'Zer69322', )(Lea43351)
Add91004 = keras.layers.Add(name = 'Add91004', )([Con35735,Zer69322])
Res89027 = keras.layers.Reshape((3, 4, 1), name = 'Res89027', )(Add91004)
Con50114 = keras.layers.Concatenate(axis=3, name = 'Con50114', )([Res89027,in0Con50114])
Con53079 = keras.layers.Conv2D(4, (1, 2),strides=(1, 1), padding='same', dilation_rate=(1, 1), name = 'Con53079', )(in0Con53079)
Zer9871 = keras.layers.ZeroPadding2D(padding=((2, 0), (2, 0)), name = 'Zer9871', )(Con53079)
Add39749 = keras.layers.Add(name = 'Add39749', )([Con50114,Zer9871])
Res52694 = keras.layers.Reshape((3, 4, 4, 1), name = 'Res52694', )(Add39749)
Con68442 = keras.layers.Concatenate(axis=4, name = 'Con68442', )([Res52694,in0Con68442])
Con24894 = keras.layers.Conv3D(2, (1, 1, 1),strides=(1, 1, 1), padding='same', dilation_rate=(1, 1, 1), name = 'Con24894', )(in0Con24894)
Zer35951 = keras.layers.ZeroPadding3D(padding=((2, 0), (3, 0), (3, 0)), name = 'Zer35951', )(Con24894)
Min50730 = keras.layers.Minimum(name = 'Min50730', )([Con68442,Zer35951])
model = tf.keras.models.Model(inputs=[in0GRU18195,in0Con35735,in0Cro30136,in0Con50114,in0Con53079,in0Con68442,in0Con24894], outputs=Min50730)
w = model.get_layer('GRU18195').get_weights() 
w[0] = np.array([[3, 4, 1, 10, 9, 5, 1, 8, 5], [3, 2, 10, 9, 6, 5, 4, 1, 2], [2, 9, 8, 4, 5, 4, 1, 1, 7]])
w[1] = np.array([[2, 1, 8, 9, 9, 8, 9, 4, 1], [2, 10, 3, 5, 9, 1, 3, 2, 9], [10, 9, 10, 5, 10, 3, 2, 7, 4]])
w[2] = np.array([2, 3, 10, 1, 2, 9, 10, 5, 1])
model.get_layer('GRU18195').set_weights(w) 
w = model.get_layer('Con53079').get_weights() 
w[0] = np.array([[[[0.5941, 0.2383, 0.7223, 0.4795]], [[0.9046, 0.011, 0.5861, 0.9325]]]])
w[1] = np.array([0, 0, 0, 0])
model.get_layer('Con53079').set_weights(w) 
w = model.get_layer('Con24894').get_weights() 
w[0] = np.array([[[[[0.158, 0.4772]]]]])
w[1] = np.array([0, 0])
model.get_layer('Con24894').set_weights(w) 
in0GRU18195 = tf.constant([[[1, 5, 4]]])
in0Con35735 = tf.constant([[[0.9574, 0.8249, 0.6762], [0.4054, 0.6659, 0.4734], [0.5723, 0.6581, 0.8394]]])
in0Cro30136 = tf.constant([[[1.2138, 1.0104, 1.7549, 1.7083]]])
in0Con50114 = tf.constant([[[[0.4431, 0.7873, 0.5141], [0.2714, 0.9813, 0.8281], [0.225, 0.5249, 0.769], [0.6815, 0.921, 0.1861]], [[0.7748, 0.6745, 0.7425], [0.2802, 0.848, 0.1532], [0.1029, 0.3186, 0.9667], [0.7647, 0.562, 0.9547]], [[0.446, 0.4701, 0.1317], [0.9008, 0.5881, 0.7962], [0.8379, 0.8055, 0.7902], [0.6262, 0.2262, 0.0334]]]])
in0Con53079 = tf.constant([[[[0.558], [0.9641]]]])
in0Con68442 = tf.constant([[[[[0.2285], [0.2763], [0.5634], [0.4511]], [[0.504], [0.7207], [0.8379], [0.5129]], [[0.123], [0.1807], [0.2386], [0.1828]], [[0.1891], [0.8588], [0.5349], [0.3355]]], [[[0.6819], [0.8257], [0.2641], [0.5885]], [[0.6194], [0.9428], [0.2259], [0.5979]], [[0.1933], [0.9137], [0.9944], [0.5833]], [[0.4885], [0.2656], [0.59], [0.351]]], [[[0.2435], [0.8474], [0.4921], [0.1985]], [[0.6002], [0.126], [0.3779], [0.6035]], [[0.9507], [0.1558], [0.3253], [0.5264]], [[0.793], [0.609], [0.7349], [0.491]]]]])
in0Con24894 = tf.constant([[[[[0.2022]]]]])
print (np.array2string(model.predict([in0GRU18195,in0Con35735,in0Cro30136,in0Con50114,in0Con53079,in0Con68442,in0Con24894],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Min50730.png')

LGRU18195 = gru_layer([[[1, 5, 4]]],[[3, 4, 1, 10, 9, 5, 1, 8, 5], [3, 2, 10, 9, 6, 5, 4, 1, 2], [2, 9, 8, 4, 5, 4, 1, 1, 7]],[[2, 1, 8, 9, 9, 8, 9, 4, 1], [2, 10, 3, 5, 9, 1, 3, 2, 9], [10, 9, 10, 5, 10, 3, 2, 7, 4]],[2, 3, 10, 1, 2, 9, 10, 5, 1], false, GRU18195), 
LRes17734 = reshape_layer(GRU18195, [3, 1], Res17734), 
LCon35735 = concatenate_layer([Res17734,[[[0.9574, 0.8249, 0.6762], [0.4054, 0.6659, 0.4734], [0.5723, 0.6581, 0.8394]]]], 2, Con35735), 
LCro30136 = cropping1D_layer([[[1.2138, 1.0104, 1.7549, 1.7083]]], 0, 0, Cro30136), 
LLea43351 = leaky_relu_layer(Cro30136, 8.68637410107927, Lea43351), 
LZer69322 = zero_padding1D_layer(Lea43351, 2, 0, Zer69322), 
LAdd91004 = add_layer([Con35735,Zer69322], Add91004), 
LRes89027 = reshape_layer(Add91004, [3, 4, 1], Res89027), 
LCon50114 = concatenate_layer([Res89027,[[[[0.4431, 0.7873, 0.5141], [0.2714, 0.9813, 0.8281], [0.225, 0.5249, 0.769], [0.6815, 0.921, 0.1861]], [[0.7748, 0.6745, 0.7425], [0.2802, 0.848, 0.1532], [0.1029, 0.3186, 0.9667], [0.7647, 0.562, 0.9547]], [[0.446, 0.4701, 0.1317], [0.9008, 0.5881, 0.7962], [0.8379, 0.8055, 0.7902], [0.6262, 0.2262, 0.0334]]]]], 3, Con50114), 
LCon53079 = conv2D_layer([[[[0.558], [0.9641]]]], 1, 2,[[[[0.5941, 0.2383, 0.7223, 0.4795]], [[0.9046, 0.011, 0.5861, 0.9325]]]],[0, 0, 0, 0], 1, 1, true, 1, 1, Con53079), 
LZer9871 = zero_padding2D_layer(Con53079, 2, 0, 2, 0, Zer9871), 
LAdd39749 = add_layer([Con50114,Zer9871], Add39749), 
LRes52694 = reshape_layer(Add39749, [3, 4, 4, 1], Res52694), 
LCon68442 = concatenate_layer([Res52694,[[[[[0.2285], [0.2763], [0.5634], [0.4511]], [[0.504], [0.7207], [0.8379], [0.5129]], [[0.123], [0.1807], [0.2386], [0.1828]], [[0.1891], [0.8588], [0.5349], [0.3355]]], [[[0.6819], [0.8257], [0.2641], [0.5885]], [[0.6194], [0.9428], [0.2259], [0.5979]], [[0.1933], [0.9137], [0.9944], [0.5833]], [[0.4885], [0.2656], [0.59], [0.351]]], [[[0.2435], [0.8474], [0.4921], [0.1985]], [[0.6002], [0.126], [0.3779], [0.6035]], [[0.9507], [0.1558], [0.3253], [0.5264]], [[0.793], [0.609], [0.7349], [0.491]]]]]], 4, Con68442), 
LCon24894 = conv3D_layer([[[[[0.2022]]]]], 1, 1, 1,[[[[[0.158, 0.4772]]]]],[0, 0], 1, 1, 1, true, 1, 1, 1, Con24894), 
LZer35951 = zero_padding3D_layer(Con24894, 2, 0, 3, 0, 3, 0, Zer35951), 
LMin50730 = minimum_layer([Con68442,Zer35951], Min50730), 
exec_layers([LGRU18195,LRes17734,LCon35735,LCro30136,LLea43351,LZer69322,LAdd91004,LRes89027,LCon50114,LCon53079,LZer9871,LAdd39749,LRes52694,LCon68442,LCon24894,LZer35951,LMin50730],["GRU18195","Res17734","Con35735","Cro30136","Lea43351","Zer69322","Add91004","Res89027","Con50114","Con53079","Zer9871","Add39749","Res52694","Con68442","Con24894","Zer35951","Min50730"],Min50730,"Min50730")

Actual (Unparsed): [[[[[0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000]], [[0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000]], [[0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000]], [[0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000]]], [[[0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000]], [[0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000]], [[0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000]], [[0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000]]], [[[0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000]], [[0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000]], [[0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000]], [[0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0319476, 0.0964898]]]]]

Expected (Unparsed): [[[[[0,0],[0,0],[0,0],[0,0]],[[0,0],[0,0],[0,0],[0,0]],[[0,0],[0,0],[0,0],[0,0]],[[0,0],[0,0],[0,0],[0,0]]],[[[0.0,0],[0,0],[0,0],[0,0]],[[0,0],[0,0],[0,0],[0,0]],[[0,0],[0,0],[0,0],[0,0]],[[0,0],[0,0],[0,0],[0,0]]],[[[0,0],[0,0],[0,0],[0,0]],[[0,0],[0,0],[0,0],[0,0]],[[0,0],[0,0],[0,0],[0,0]],[[0,0],[0,0],[0,0],[0.0319476,0.09648984]]]]]

Actual:   [[[[[0, 0], [0, 0], [0, 0], [0, 0]], [[0, 0], [0, 0], [0, 0], [0, 0]], [[0, 0], [0, 0], [0, 0], [0, 0]], [[0, 0], [0, 0], [0, 0], [0, 0]]], [[[0, 0], [0, 0], [0, 0], [0, 0]], [[0, 0], [0, 0], [0, 0], [0, 0]], [[0, 0], [0, 0], [0, 0], [0, 0]], [[0, 0], [0, 0], [0, 0], [0, 0]]], [[[0, 0], [0, 0], [0, 0], [0, 0]], [[0, 0], [0, 0], [0, 0], [0, 0]], [[0, 0], [0, 0], [0, 0], [0, 0]], [[0, 0], [0, 0], [0, 0], [0.032, 0.0965]]]]]

Expected: [[[[[0, 0], [0, 0], [0, 0], [0, 0]], [[0, 0], [0, 0], [0, 0], [0, 0]], [[0, 0], [0, 0], [0, 0], [0, 0]], [[0, 0], [0, 0], [0, 0], [0, 0]]], [[[0, 0], [0, 0], [0, 0], [0, 0]], [[0, 0], [0, 0], [0, 0], [0, 0]], [[0, 0], [0, 0], [0, 0], [0, 0]], [[0, 0], [0, 0], [0, 0], [0, 0]]], [[[0, 0], [0, 0], [0, 0], [0, 0]], [[0, 0], [0, 0], [0, 0], [0, 0]], [[0, 0], [0, 0], [0, 0], [0, 0]], [[0, 0], [0, 0], [0, 0], [0.032, 0.0965]]]]]