import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Zer76779 = tf.keras.layers.Input(shape=([2, 2]))
in0Con74316 = tf.keras.layers.Input(shape=([4, 2, 2]))
in0Cro55377 = tf.keras.layers.Input(shape=([2, 3, 3, 3]))

Zer76779 = keras.layers.ZeroPadding1D(padding=((1, 1)), name = 'Zer76779', )(in0Zer76779)
Res65873 = keras.layers.Reshape((4, 2, 1), name = 'Res65873', )(Zer76779)
Con74316 = keras.layers.Concatenate(axis=3, name = 'Con74316', )([Res65873,in0Con74316])
Cro55377 = keras.layers.Cropping3D(cropping=((1, 0), (2, 0), (2, 0)), name = 'Cro55377', )(in0Cro55377)
Res26443 = keras.layers.Reshape((1, 1, 3), name = 'Res26443', )(Cro55377)
Cro75921 = keras.layers.Cropping2D(cropping=((0, 0), (0, 0)), name = 'Cro75921', )(Res26443)
Zer27548 = keras.layers.ZeroPadding2D(padding=((3, 0), (1, 0)), name = 'Zer27548', )(Cro75921)
Add39914 = keras.layers.Add(name = 'Add39914', )([Con74316,Zer27548])
model = tf.keras.models.Model(inputs=[in0Zer76779,in0Con74316,in0Cro55377], outputs=Add39914)
in0Zer76779 = tf.constant([[[1.5213, 1.939], [1.9739, 1.9029]]])
in0Con74316 = tf.constant([[[[0.6512, 0.8661], [0.363, 0.0408]], [[0.5378, 0.7201], [0.7939, 0.1632]], [[0.4492, 0.014], [0.1833, 0.0337]], [[0.1335, 0.7723], [0.3311, 0.3677]]]])
in0Cro55377 = tf.constant([[[[[1.7521, 1.3556, 1.1907], [1.4917, 1.983, 1.9806], [1.8143, 1.9048, 1.3554]], [[1.0639, 1.1055, 1.3498], [1.1968, 1.9547, 1.5443], [1.738, 1.8775, 1.8294]], [[1.3912, 1.671, 1.288], [1.1515, 1.0269, 1.2322], [1.9759, 1.748, 1.5928]]], [[[1.6284, 1.5822, 1.1469], [1.4485, 1.5042, 1.8538], [1.8751, 1.4887, 1.3182]], [[1.1703, 1.7399, 1.4141], [1.5124, 1.2231, 1.7305], [1.6427, 1.3356, 1.2093]], [[1.0661, 1.6606, 1.0843], [1.663, 1.0912, 1.2654], [1.2171, 1.8382, 1.1716]]]]])
print (np.array2string(model.predict([in0Zer76779,in0Con74316,in0Cro55377],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Add39914.png')

LZer76779 = zero_padding1D_layer([[[1.5213, 1.939], [1.9739, 1.9029]]], 1, 1, Zer76779), 
LRes65873 = reshape_layer(Zer76779, [4, 2, 1], Res65873), 
LCon74316 = concatenate_layer([Res65873,[[[[0.6512, 0.8661], [0.363, 0.0408]], [[0.5378, 0.7201], [0.7939, 0.1632]], [[0.4492, 0.014], [0.1833, 0.0337]], [[0.1335, 0.7723], [0.3311, 0.3677]]]]], 3, Con74316), 
LCro55377 = cropping3D_layer([[[[[1.7521, 1.3556, 1.1907], [1.4917, 1.983, 1.9806], [1.8143, 1.9048, 1.3554]], [[1.0639, 1.1055, 1.3498], [1.1968, 1.9547, 1.5443], [1.738, 1.8775, 1.8294]], [[1.3912, 1.671, 1.288], [1.1515, 1.0269, 1.2322], [1.9759, 1.748, 1.5928]]], [[[1.6284, 1.5822, 1.1469], [1.4485, 1.5042, 1.8538], [1.8751, 1.4887, 1.3182]], [[1.1703, 1.7399, 1.4141], [1.5124, 1.2231, 1.7305], [1.6427, 1.3356, 1.2093]], [[1.0661, 1.6606, 1.0843], [1.663, 1.0912, 1.2654], [1.2171, 1.8382, 1.1716]]]]], 1, 0, 2, 0, 2, 0, Cro55377), 
LRes26443 = reshape_layer(Cro55377, [1, 1, 3], Res26443), 
LCro75921 = cropping2D_layer(Res26443, 0, 0, 0, 0, Cro75921), 
LZer27548 = zero_padding2D_layer(Cro75921, 3, 0, 1, 0, Zer27548), 
LAdd39914 = add_layer([Con74316,Zer27548], Add39914), 
exec_layers([LZer76779,LRes65873,LCon74316,LCro55377,LRes26443,LCro75921,LZer27548,LAdd39914],["Zer76779","Res65873","Con74316","Cro55377","Res26443","Cro75921","Zer27548","Add39914"],Add39914,"Add39914")

Actual (Unparsed): [[[[0.0000000, 0.6512000, 0.8661000], [0.0000000, 0.3630000, 0.0408000]], [[1.5213000, 0.5378000, 0.7201000], [1.9390000, 0.7939000, 0.1632000]], [[1.9739000, 0.4492000, 0.0140000], [1.9029000, 0.1833000, 0.0337000]], [[0.0000000, 0.1335000, 0.7723000], [1.2171000, 2.1693000, 1.5393000]]]]

Expected (Unparsed): [[[[0,0.6512,0.8661],[0,0.363,0.0408]],[[1.5213,0.5378,0.7201],[1.939,0.7939,0.1632]],[[1.9739,0.4492,0.014],[1.9029,0.1833,0.0337]],[[0,0.1335,0.7723],[1.2171,2.1693000000000002,1.5393]]]]

Actual:   [[[[0, 0.6512, 0.8661], [0, 0.363, 0.0408]], [[1.5213, 0.5378, 0.7201], [1.939, 0.7939, 0.1632]], [[1.9739, 0.4492, 0.014], [1.9029, 0.1833, 0.0337]], [[0, 0.1335, 0.7723], [1.2171, 2.1693, 1.5393]]]]

Expected: [[[[0, 0.6512, 0.8661], [0, 0.363, 0.0408]], [[1.5213, 0.5378, 0.7201], [1.939, 0.7939, 0.1632]], [[1.9739, 0.4492, 0.014], [1.9029, 0.1833, 0.0337]], [[0, 0.1335, 0.7723], [1.2171, 2.1694, 1.5393]]]]