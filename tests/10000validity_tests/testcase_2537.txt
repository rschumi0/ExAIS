import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Ave94116 = tf.keras.layers.Input(shape=([1, 1, 1, 2]))
in1Ave94116 = tf.keras.layers.Input(shape=([1, 1, 1, 2]))

Ave94116 = keras.layers.Average(name = 'Ave94116', )([in0Ave94116,in1Ave94116])
Lea12951 = keras.layers.LeakyReLU(alpha=2.036576963477625, name = 'Lea12951', )(Ave94116)
Lay63710 = keras.layers.LayerNormalization(axis=1, epsilon=1.6601335564899262, name = 'Lay63710', )(Lea12951)
model = tf.keras.models.Model(inputs=[in0Ave94116,in1Ave94116], outputs=Lay63710)
in0Ave94116 = tf.constant([[[[[0.9396, 0.62]]]]])
in1Ave94116 = tf.constant([[[[[0.5515, 0.7445]]]]])
print (np.array2string(model.predict([in0Ave94116,in1Ave94116],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Lay63710.png')

LAve94116 = average_layer([[[[[[0.9396, 0.62]]]]], [[[[[0.5515, 0.7445]]]]]], Ave94116), 
LLea12951 = leaky_relu_layer(Ave94116, 2.036576963477625, Lea12951), 
LLay63710 = layer_normalization_layer(Lea12951, 1, 1.6601335564899262, Lay63710), 
exec_layers([LAve94116,LLea12951,LLay63710],["Ave94116","Lea12951","Lay63710"],Lay63710,"Lay63710")

Actual (Unparsed): [[[[[0.0000000, 0.0000000]]]]]

Expected (Unparsed): [[[[[0.0,0.0]]]]]

Actual:   [[[[[0, 0]]]]]

Expected: [[[[[0, 0]]]]]