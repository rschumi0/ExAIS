import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Min84029 = tf.keras.layers.Input(shape=([1, 2, 1, 1]))
in1Min84029 = tf.keras.layers.Input(shape=([1, 2, 1, 1]))
in0Cro12162 = tf.keras.layers.Input(shape=([3, 4]))

Min84029 = keras.layers.Minimum(name = 'Min84029', )([in0Min84029,in1Min84029])
Res2130 = keras.layers.Reshape((1, 2, 1), name = 'Res2130', )(Min84029)
Zer96144 = keras.layers.ZeroPadding2D(padding=((1, 1), (1, 1)), name = 'Zer96144', )(Res2130)
Glo15203 = keras.layers.GlobalMaxPool2D(name = 'Glo15203', )(Zer96144)
Res56472 = keras.layers.Reshape((1, 1), name = 'Res56472', )(Glo15203)
Res99927 = keras.layers.Reshape((1, 1, 1), name = 'Res99927', )(Res56472)
Res73993 = keras.layers.Reshape((1, 1, 1, 1), name = 'Res73993', )(Res99927)
Zer48726 = keras.layers.ZeroPadding3D(padding=((1, 0), (7, 0), (0, 0)), name = 'Zer48726', )(Res73993)
Cro12162 = keras.layers.Cropping1D(cropping=((1, 1)), name = 'Cro12162', )(in0Cro12162)
Res36634 = keras.layers.Reshape((1, 4, 1), name = 'Res36634', )(Cro12162)
Res63564 = keras.layers.Reshape((1, 4, 1, 1), name = 'Res63564', )(Res36634)
Up_8468 = keras.layers.UpSampling3D(size=(2, 2, 1), name = 'Up_8468', )(Res63564)
Bat10981 = keras.layers.BatchNormalization(axis=3, epsilon=0.7456223622978742,  name = 'Bat10981', )(Up_8468)
Min12143 = keras.layers.Minimum(name = 'Min12143', )([Zer48726,Bat10981])
model = tf.keras.models.Model(inputs=[in0Min84029,in1Min84029,in0Cro12162], outputs=Min12143)
w = model.get_layer('Bat10981').get_weights() 
w[0] = np.array([0.0741])
w[1] = np.array([0.8188])
w[2] = np.array([0.7757])
w[3] = np.array([0.4812])
model.get_layer('Bat10981').set_weights(w) 
in0Min84029 = tf.constant([[[[[0.179]], [[0.4778]]]]])
in1Min84029 = tf.constant([[[[[0.4906]], [[0.1676]]]]])
in0Cro12162 = tf.constant([[[1.2891, 1.3071, 1.9046, 1.9653], [1.3172, 1.3947, 1.7824, 1.3809], [1.296, 1.4604, 1.1378, 1.447]]])
print (np.array2string(model.predict([in0Min84029,in1Min84029,in0Cro12162],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Min12143.png')

LMin84029 = minimum_layer([[[[[[0.179]], [[0.4778]]]]], [[[[[0.4906]], [[0.1676]]]]]], Min84029), 
LRes2130 = reshape_layer(Min84029, [1, 2, 1], Res2130), 
LZer96144 = zero_padding2D_layer(Res2130, 1, 1, 1, 1, Zer96144), 
LGlo15203 = global_max_pool2D_layer(Zer96144, Glo15203), 
LRes56472 = reshape_layer(Glo15203, [1, 1], Res56472), 
LRes99927 = reshape_layer(Res56472, [1, 1, 1], Res99927), 
LRes73993 = reshape_layer(Res99927, [1, 1, 1, 1], Res73993), 
LZer48726 = zero_padding3D_layer(Res73993, 1, 0, 7, 0, 0, 0, Zer48726), 
LCro12162 = cropping1D_layer([[[1.2891, 1.3071, 1.9046, 1.9653], [1.3172, 1.3947, 1.7824, 1.3809], [1.296, 1.4604, 1.1378, 1.447]]], 1, 1, Cro12162), 
LRes36634 = reshape_layer(Cro12162, [1, 4, 1], Res36634), 
LRes63564 = reshape_layer(Res36634, [1, 4, 1, 1], Res63564), 
LUp_8468 = up_sampling3D_layer(Res63564, 2, 2, 1, Up_8468), 
LBat10981 = batch_normalization_layer(Up_8468, 3, 0.7456223622978742, [0.0741], [0.8188], [0.7757], [0.4812], Bat10981), 
LMin12143 = minimum_layer([Zer48726,Bat10981], Min12143), 
exec_layers([LMin84029,LRes2130,LZer96144,LGlo15203,LRes56472,LRes99927,LRes73993,LZer48726,LCro12162,LRes36634,LRes63564,LUp_8468,LBat10981,LMin12143],["Min84029","Res2130","Zer96144","Glo15203","Res56472","Res99927","Res73993","Zer48726","Cro12162","Res36634","Res63564","Up_8468","Bat10981","Min12143"],Min12143,"Min12143")

Actual (Unparsed): [[[[[0.0000000]], [[0.0000000]], [[0.0000000]], [[0.0000000]], [[0.0000000]], [[0.0000000]], [[0.0000000]], [[0.0000000]]], [[[0.0000000]], [[0.0000000]], [[0.0000000]], [[0.0000000]], [[0.0000000]], [[0.0000000]], [[0.0000000]], [[0.1790000]]]]]

Expected (Unparsed): [[[[[0]],[[0]],[[0]],[[0]],[[0]],[[0]],[[0]],[[0]]],[[[0]],[[0]],[[0]],[[0]],[[0]],[[0]],[[0]],[[0.179]]]]]

Actual:   [[[[[0]], [[0]], [[0]], [[0]], [[0]], [[0]], [[0]], [[0]]], [[[0]], [[0]], [[0]], [[0]], [[0]], [[0]], [[0]], [[0.179]]]]]

Expected: [[[[[0]], [[0]], [[0]], [[0]], [[0]], [[0]], [[0]], [[0]]], [[[0]], [[0]], [[0]], [[0]], [[0]], [[0]], [[0]], [[0.179]]]]]