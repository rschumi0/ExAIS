import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Max67313 = tf.keras.layers.Input(shape=([2, 1]))
in0Con28990 = tf.keras.layers.Input(shape=([2, 1, 2]))
in0Min33714 = tf.keras.layers.Input(shape=([2, 1, 1]))
in1Min33714 = tf.keras.layers.Input(shape=([2, 1, 1]))

Max67313 = keras.layers.MaxPool1D(pool_size=(2), strides=(1), padding='valid', name = 'Max67313', )(in0Max67313)
Mas3083 = keras.layers.Masking(mask_value=2, name = 'Mas3083', )(Max67313)
Res54524 = keras.layers.Reshape((1, 1, 1), name = 'Res54524', )(Mas3083)
Res11794 = keras.layers.Reshape((1, 1, 1, 1), name = 'Res11794', )(Res54524)
Con19578 = keras.layers.Conv3DTranspose(2, (1, 1, 1),strides=(1, 1, 1), padding='same', name = 'Con19578', )(Res11794)
Res24969 = keras.layers.Reshape((1, 1, 2), name = 'Res24969', )(Con19578)
Zer56286 = keras.layers.ZeroPadding2D(padding=((1, 0), (0, 0)), name = 'Zer56286', )(Res24969)
Con28990 = keras.layers.Concatenate(axis=3, name = 'Con28990', )([Zer56286,in0Con28990])
Min33714 = keras.layers.Minimum(name = 'Min33714', )([in0Min33714,in1Min33714])
Den15697 = keras.layers.Dense(4,name = 'Den15697', )(Min33714)
Min3838 = keras.layers.Minimum(name = 'Min3838', )([Con28990,Den15697])
Res87163 = keras.layers.Reshape((2, 4), name = 'Res87163', )(Min3838)
Max48817 = keras.layers.MaxPool1D(pool_size=(1), name = 'Max48817', )(Res87163)
model = tf.keras.models.Model(inputs=[in0Max67313,in0Con28990,in0Min33714,in1Min33714], outputs=Max48817)
w = model.get_layer('Con19578').get_weights() 
w[0] = np.array([[[[[0.6945], [0.765]]]]])
w[1] = np.array([0, 0])
model.get_layer('Con19578').set_weights(w) 
w = model.get_layer('Den15697').get_weights() 
w[0] = np.array([[0.9425, 0.2604, 0.5246, 0.4992]])
w[1] = np.array([0.4399, 0.3441, 0.6301, 0.9775])
model.get_layer('Den15697').set_weights(w) 
in0Max67313 = tf.constant([[[1.3129], [1.2554]]])
in0Con28990 = tf.constant([[[[0.711, 0.1081]], [[0.0267, 0.1781]]]])
in0Min33714 = tf.constant([[[[0.75]], [[0.5514]]]])
in1Min33714 = tf.constant([[[[0.0805]], [[0.6354]]]])
print (np.array2string(model.predict([in0Max67313,in0Con28990,in0Min33714,in1Min33714],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Max48817.png')

LMax67313 = max_pool1D_layer([[[1.3129], [1.2554]]], 2, 1, false, Max67313), 
LMas3083 = masking_layer(Max67313, 2, Mas3083), 
LRes54524 = reshape_layer(Mas3083, [1, 1, 1], Res54524), 
LRes11794 = reshape_layer(Res54524, [1, 1, 1, 1], Res11794), 
LCon19578 = conv3D_transpose_layer(Res11794, 1, 1, 1,[[[[[0.6945], [0.765]]]]],[0, 0], 1, 1, 1, true, Con19578), 
LRes24969 = reshape_layer(Con19578, [1, 1, 2], Res24969), 
LZer56286 = zero_padding2D_layer(Res24969, 1, 0, 0, 0, Zer56286), 
LCon28990 = concatenate_layer([Zer56286,[[[[0.711, 0.1081]], [[0.0267, 0.1781]]]]], 3, Con28990), 
LMin33714 = minimum_layer([[[[[0.75]], [[0.5514]]]], [[[[0.0805]], [[0.6354]]]]], Min33714), 
LDen15697 = dense_layer(Min33714, [[0.9425, 0.2604, 0.5246, 0.4992]],[0.4399, 0.3441, 0.6301, 0.9775], Den15697), 
LMin3838 = minimum_layer([Con28990,Den15697], Min3838), 
LRes87163 = reshape_layer(Min3838, [2, 4], Res87163), 
LMax48817 = max_pool1D_layer(Res87163, 1, Max48817), 
exec_layers([LMax67313,LMas3083,LRes54524,LRes11794,LCon19578,LRes24969,LZer56286,LCon28990,LMin33714,LDen15697,LMin3838,LRes87163,LMax48817],["Max67313","Mas3083","Res54524","Res11794","Con19578","Res24969","Zer56286","Con28990","Min33714","Den15697","Min3838","Res87163","Max48817"],Max48817,"Max48817")

Actual (Unparsed): [[[0.0000000, 0.0000000, 0.6723303, 0.1081000], [0.9118090, 0.4876846, 0.0267000, 0.1781000]]]

Expected (Unparsed): [[[0,0,0.6723303,0.1081],[0.91180905,0.48768456000000004,0.0267,0.1781]]]

Actual:   [[[0, 0, 0.6724, 0.1081], [0.9119, 0.4877, 0.0267, 0.1781]]]

Expected: [[[0, 0, 0.6724, 0.1081], [0.9119, 0.4877, 0.0267, 0.1781]]]