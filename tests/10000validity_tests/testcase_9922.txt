import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Mul53724 = tf.keras.layers.Input(shape=([1, 2, 2, 2]))
in1Mul53724 = tf.keras.layers.Input(shape=([1, 2, 2, 2]))

Mul53724 = keras.layers.Multiply(name = 'Mul53724', )([in0Mul53724,in1Mul53724])
Lea71909 = keras.layers.LeakyReLU(alpha=4.708979663431964, name = 'Lea71909', )(Mul53724)
model = tf.keras.models.Model(inputs=[in0Mul53724,in1Mul53724], outputs=Lea71909)
in0Mul53724 = tf.constant([[[[[0.4095, 0.8973], [0.7163, 0.0164]], [[0.7453, 0.2022], [0.9515, 0.2718]]]]])
in1Mul53724 = tf.constant([[[[[0.8737, 0.2885], [0.9975, 0.1729]], [[0.3536, 0.7112], [0.1811, 0.0933]]]]])
print (np.array2string(model.predict([in0Mul53724,in1Mul53724],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Lea71909.png')

LMul53724 = multiply_layer([[[[[[0.4095, 0.8973], [0.7163, 0.0164]], [[0.7453, 0.2022], [0.9515, 0.2718]]]]], [[[[[0.8737, 0.2885], [0.9975, 0.1729]], [[0.3536, 0.7112], [0.1811, 0.0933]]]]]], Mul53724), 
LLea71909 = leaky_relu_layer(Mul53724, 4.708979663431964, Lea71909), 
exec_layers([LMul53724,LLea71909],["Mul53724","Lea71909"],Lea71909,"Lea71909")

Actual (Unparsed): [[[[[0.3577802, 0.2588711], [0.7145093, 0.0028356]], [[0.2635381, 0.1438046], [0.1723166, 0.0253589]]]]]

Expected (Unparsed): [[[[[0.35778015,0.25887105],[0.7145092500000001,0.0028355600000000004]],[[0.26353808,0.14380464],[0.17231665000000002,0.025358939999999996]]]]]

Actual:   [[[[[0.3578, 0.2589], [0.7146, 0.0029]], [[0.2636, 0.1439], [0.1724, 0.0254]]]]]

Expected: [[[[[0.3578, 0.2589], [0.7146, 0.0029]], [[0.2636, 0.1439], [0.1724, 0.0254]]]]]