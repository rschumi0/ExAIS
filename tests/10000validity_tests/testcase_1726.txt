import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Den63788 = tf.keras.layers.Input(shape=([3, 4, 2]))

Den63788 = keras.layers.Dense(1,name = 'Den63788', )(in0Den63788)
Res22983 = keras.layers.Reshape((3, 4), name = 'Res22983', )(Den63788)
Glo38716 = keras.layers.GlobalAveragePooling1D(name = 'Glo38716', )(Res22983)
model = tf.keras.models.Model(inputs=[in0Den63788], outputs=Glo38716)
w = model.get_layer('Den63788').get_weights() 
w[0] = np.array([[0.3487], [0.5271]])
w[1] = np.array([0.4524])
model.get_layer('Den63788').set_weights(w) 
in0Den63788 = tf.constant([[[[0.6057, 0.5332], [0.3821, 0.9963], [0.9563, 0.8935], [0.7072, 0.6144]], [[0.5693, 0.3876], [0.514, 0.8517], [0.0409, 0.7881], [0.5191, 0.8574]], [[0.1598, 0.2054], [0.786, 0.1084], [0.0678, 0.128], [0.6249, 0.883]]]])
print (np.array2string(model.predict([in0Den63788],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Glo38716.png')

LDen63788 = dense_layer([[[[0.6057, 0.5332], [0.3821, 0.9963], [0.9563, 0.8935], [0.7072, 0.6144]], [[0.5693, 0.3876], [0.514, 0.8517], [0.0409, 0.7881], [0.5191, 0.8574]], [[0.1598, 0.2054], [0.786, 0.1084], [0.0678, 0.128], [0.6249, 0.883]]]], [[0.3487], [0.5271]],[0.4524], Den63788), 
LRes22983 = reshape_layer(Den63788, [3, 4], Res22983), 
LGlo38716 = global_average_pooling1D_layer(Res22983, Glo38716), 
exec_layers([LDen63788,LRes22983,LGlo38716],["Den63788","Res22983","Glo38716"],Glo38716,"Glo38716")

Actual (Unparsed): [[0.8054216, 0.9916556, 0.8941352, 1.0813095]]

Expected (Unparsed): [[0.8054215933333334,0.9916555699999999,0.89413522,1.0813095066666667]]

Actual:   [[0.8055, 0.9917, 0.8942, 1.0814]]

Expected: [[0.8055, 0.9917, 0.8942, 1.0814]]