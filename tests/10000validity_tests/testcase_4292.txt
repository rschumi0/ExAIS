import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Dot6734 = tf.keras.layers.Input(shape=([2]))
in1Dot6734 = tf.keras.layers.Input(shape=([2]))
in0Add98350 = tf.keras.layers.Input(shape=([1, 1]))
in1Add98350 = tf.keras.layers.Input(shape=([1, 1]))

Dot6734 = keras.layers.Dot(axes=(1, 1), name = 'Dot6734', )([in0Dot6734,in1Dot6734])
Res65405 = keras.layers.Reshape((1, 1), name = 'Res65405', )(Dot6734)
Add98350 = keras.layers.Add(name = 'Add98350', )([in0Add98350,in1Add98350])
Mul18483 = keras.layers.Multiply(name = 'Mul18483', )([Res65405,Add98350])
model = tf.keras.models.Model(inputs=[in0Dot6734,in1Dot6734,in0Add98350,in1Add98350], outputs=Mul18483)
in0Dot6734 = tf.constant([[0.6055, 0.8801]])
in1Dot6734 = tf.constant([[0.85, 0.5922]])
in0Add98350 = tf.constant([[[0.417]]])
in1Add98350 = tf.constant([[[0.5716]]])
print (np.array2string(model.predict([in0Dot6734,in1Dot6734,in0Add98350,in1Add98350],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Mul18483.png')

LDot6734 = dot_layer([[0.6055, 0.8801]], [[0.85, 0.5922]], 1, 1, Dot6734), 
LRes65405 = reshape_layer(Dot6734, [1, 1], Res65405), 
LAdd98350 = add_layer([[[[0.417]]], [[[0.5716]]]], Add98350), 
LMul18483 = multiply_layer([Res65405,Add98350], Mul18483), 
exec_layers([LDot6734,LRes65405,LAdd98350,LMul18483],["Dot6734","Res65405","Add98350","Mul18483"],Mul18483,"Mul18483")

Actual (Unparsed): [[[1.0240613]]]

Expected (Unparsed): [[[1.024061299492]]]

Actual:   [[[1.0241]]]

Expected: [[[1.0241]]]