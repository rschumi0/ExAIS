import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Zer40103 = tf.keras.layers.Input(shape=([2, 3]))
in0Con56216 = tf.keras.layers.Input(shape=([4, 3, 2]))
in0Thr80638 = tf.keras.layers.Input(shape=([2, 2]))
in0Sep90206 = tf.keras.layers.Input(shape=([1, 1, 2]))

Zer40103 = keras.layers.ZeroPadding1D(padding=((1, 1)), name = 'Zer40103', )(in0Zer40103)
Res57120 = keras.layers.Reshape((4, 3, 1), name = 'Res57120', )(Zer40103)
Con56216 = keras.layers.Concatenate(axis=3, name = 'Con56216', )([Res57120,in0Con56216])
Thr80638 = keras.layers.ThresholdedReLU(theta=3.567260771898043, name = 'Thr80638', input_shape=(2, 2))(in0Thr80638)
Res91068 = keras.layers.Reshape((2, 2, 1), name = 'Res91068', )(Thr80638)
Con77833 = keras.layers.Conv2D(3, (1, 2),strides=(1, 1), padding='same', dilation_rate=(1, 1), name = 'Con77833', )(Res91068)
Sep90206 = keras.layers.SeparableConv2D(3, (1, 1),strides=(1, 1), padding='valid', name = 'Sep90206', )(in0Sep90206)
Zer77131 = keras.layers.ZeroPadding2D(padding=((1, 0), (1, 0)), name = 'Zer77131', )(Sep90206)
Min23340 = keras.layers.Minimum(name = 'Min23340', )([Con77833,Zer77131])
Zer43391 = keras.layers.ZeroPadding2D(padding=((2, 0), (1, 0)), name = 'Zer43391', )(Min23340)
Mul75115 = keras.layers.Multiply(name = 'Mul75115', )([Con56216,Zer43391])
model = tf.keras.models.Model(inputs=[in0Zer40103,in0Con56216,in0Thr80638,in0Sep90206], outputs=Mul75115)
w = model.get_layer('Con77833').get_weights() 
w[0] = np.array([[[[0.6747, 0.5201, 0.4246]], [[0.9358, 0.8573, 0.0942]]]])
w[1] = np.array([0, 0, 0])
model.get_layer('Con77833').set_weights(w) 
w = model.get_layer('Sep90206').get_weights() 
w[0] = np.array([[[[0.9419], [0.1107]]]])
w[1] = np.array([[[[0.665, 0.5411, 0.5974], [0.3824, 0.5395, 0.5552]]]])
w[2] = np.array([0, 0, 0])
model.get_layer('Sep90206').set_weights(w) 
in0Zer40103 = tf.constant([[[1.1236, 1.1174, 1.5885], [1.8614, 1.4483, 1.766]]])
in0Con56216 = tf.constant([[[[0.6992, 0.4516], [0.4851, 0.9165], [0.7401, 0.5603]], [[0.088, 0.8014], [0.7702, 0.6278], [0.0651, 0.2268]], [[0.7579, 0.1129], [0.6668, 0.2424], [0.4056, 0.3344]], [[0.9628, 0.9961], [0.692, 0.6942], [0.4878, 0.3488]]]])
in0Thr80638 = tf.constant([[[0.0066, 0.6416], [0.0553, 0.6811]]])
in0Sep90206 = tf.constant([[[[0.7372, 0.5743]]]])
print (np.array2string(model.predict([in0Zer40103,in0Con56216,in0Thr80638,in0Sep90206],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Mul75115.png')

LZer40103 = zero_padding1D_layer([[[1.1236, 1.1174, 1.5885], [1.8614, 1.4483, 1.766]]], 1, 1, Zer40103), 
LRes57120 = reshape_layer(Zer40103, [4, 3, 1], Res57120), 
LCon56216 = concatenate_layer([Res57120,[[[[0.6992, 0.4516], [0.4851, 0.9165], [0.7401, 0.5603]], [[0.088, 0.8014], [0.7702, 0.6278], [0.0651, 0.2268]], [[0.7579, 0.1129], [0.6668, 0.2424], [0.4056, 0.3344]], [[0.9628, 0.9961], [0.692, 0.6942], [0.4878, 0.3488]]]]], 3, Con56216), 
LThr80638 = thresholded_relu_layer([[[0.0066, 0.6416], [0.0553, 0.6811]]], 3.567260771898043, Thr80638), 
LRes91068 = reshape_layer(Thr80638, [2, 2, 1], Res91068), 
LCon77833 = conv2D_layer(Res91068, 1, 2,[[[[0.6747, 0.5201, 0.4246]], [[0.9358, 0.8573, 0.0942]]]],[0, 0, 0], 1, 1, true, 1, 1, Con77833), 
LSep90206 = separable_conv2D_layer([[[[0.7372, 0.5743]]]], 1, 1,[[[[[0.9419], [0.1107]]]],[[[[0.665, 0.5411, 0.5974], [0.3824, 0.5395, 0.5552]]]]],[0, 0, 0], 1, 1, false, Sep90206), 
LZer77131 = zero_padding2D_layer(Sep90206, 1, 0, 1, 0, Zer77131), 
LMin23340 = minimum_layer([Con77833,Zer77131], Min23340), 
LZer43391 = zero_padding2D_layer(Min23340, 2, 0, 1, 0, Zer43391), 
LMul75115 = multiply_layer([Con56216,Zer43391], Mul75115), 
exec_layers([LZer40103,LRes57120,LCon56216,LThr80638,LRes91068,LCon77833,LSep90206,LZer77131,LMin23340,LZer43391,LMul75115],["Zer40103","Res57120","Con56216","Thr80638","Res91068","Con77833","Sep90206","Zer77131","Min23340","Zer43391","Mul75115"],Mul75115,"Mul75115")

Actual (Unparsed): [[[[0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000]], [[0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000]], [[0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000]], [[0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000]]]]

Expected (Unparsed): [[[[0,0.0,0.0],[0,0.0,0.0],[0,0.0,0.0]],[[0.0,0.0,0.0],[0.0,0.0,0.0],[0.0,0.0,0.0]],[[0.0,0.0,0.0],[0.0,0.0,0.0],[0.0,0.0,0.0]],[[0,0.0,0.0],[0.0,0.0,0.0],[0.0,0.0,0.0]]]]

Actual:   [[[[0, 0, 0], [0, 0, 0], [0, 0, 0]], [[0, 0, 0], [0, 0, 0], [0, 0, 0]], [[0, 0, 0], [0, 0, 0], [0, 0, 0]], [[0, 0, 0], [0, 0, 0], [0, 0, 0]]]]

Expected: [[[[0, 0, 0], [0, 0, 0], [0, 0, 0]], [[0, 0, 0], [0, 0, 0], [0, 0, 0]], [[0, 0, 0], [0, 0, 0], [0, 0, 0]], [[0, 0, 0], [0, 0, 0], [0, 0, 0]]]]