import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Mul60537 = tf.keras.layers.Input(shape=([1, 2]))
in1Mul60537 = tf.keras.layers.Input(shape=([1, 2]))
in0Dot80517 = tf.keras.layers.Input(shape=([3]))
in1Dot80517 = tf.keras.layers.Input(shape=([3]))
in0Con94054 = tf.keras.layers.Input(shape=([3]))

Mul60537 = keras.layers.Multiply(name = 'Mul60537', )([in0Mul60537,in1Mul60537])
Res88646 = keras.layers.Reshape((1, 2, 1), name = 'Res88646', )(Mul60537)
Con51522 = keras.layers.Conv2D(2, (1, 1),strides=(12, 1), padding='valid', dilation_rate=(1, 1), name = 'Con51522', )(Res88646)
Res20787 = keras.layers.Reshape((1, 4), name = 'Res20787', )(Con51522)
Fla92987 = keras.layers.Flatten(name = 'Fla92987', )(Res20787)
Dot80517 = keras.layers.Dot(axes=(1, 1), name = 'Dot80517', )([in0Dot80517,in1Dot80517])
Con94054 = keras.layers.Concatenate(axis=1, name = 'Con94054', )([Dot80517,in0Con94054])
Min55300 = keras.layers.Minimum(name = 'Min55300', )([Fla92987,Con94054])
Res68992 = keras.layers.Reshape((4, 1), name = 'Res68992', )(Min55300)
Res61712 = keras.layers.Reshape((4, 1, 1), name = 'Res61712', )(Res68992)
Con21422 = keras.layers.Conv2DTranspose(2, (2, 1),strides=(1, 1), padding='same', name = 'Con21422', )(Res61712)
model = tf.keras.models.Model(inputs=[in0Mul60537,in1Mul60537,in0Dot80517,in1Dot80517,in0Con94054], outputs=Con21422)
w = model.get_layer('Con51522').get_weights() 
w[0] = np.array([[[[0.8843, 0.3086]]]])
w[1] = np.array([0, 0])
model.get_layer('Con51522').set_weights(w) 
w = model.get_layer('Con21422').get_weights() 
w[0] = np.array([[[[0.0535], [0.0564]]], [[[0.1008], [0.7536]]]])
w[1] = np.array([0, 0])
model.get_layer('Con21422').set_weights(w) 
in0Mul60537 = tf.constant([[[0.0944, 0.1903]]])
in1Mul60537 = tf.constant([[[0.2611, 0.2424]]])
in0Dot80517 = tf.constant([[0.8736, 0.7279, 0.304]])
in1Dot80517 = tf.constant([[0.3891, 0.5521, 0.6828]])
in0Con94054 = tf.constant([[0.6581, 0.4953, 0.7817]])
print (np.array2string(model.predict([in0Mul60537,in1Mul60537,in0Dot80517,in1Dot80517,in0Con94054],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Con21422.png')

LMul60537 = multiply_layer([[[[0.0944, 0.1903]]], [[[0.2611, 0.2424]]]], Mul60537), 
LRes88646 = reshape_layer(Mul60537, [1, 2, 1], Res88646), 
LCon51522 = conv2D_layer(Res88646, 1, 1,[[[[0.8843, 0.3086]]]],[0, 0], 12, 1, false, 1, 1, Con51522), 
LRes20787 = reshape_layer(Con51522, [1, 4], Res20787), 
LFla92987 = flatten_layer(Res20787, Fla92987), 
LDot80517 = dot_layer([[0.8736, 0.7279, 0.304]], [[0.3891, 0.5521, 0.6828]], 1, 1, Dot80517), 
LCon94054 = concatenate_layer([Dot80517,[[0.6581, 0.4953, 0.7817]]], 1, Con94054), 
LMin55300 = minimum_layer([Fla92987,Con94054], Min55300), 
LRes68992 = reshape_layer(Min55300, [4, 1], Res68992), 
LRes61712 = reshape_layer(Res68992, [4, 1, 1], Res61712), 
LCon21422 = conv2D_transpose_layer(Res61712, 2, 1,[[[[0.0535], [0.0564]]], [[[0.1008], [0.7536]]]],[0, 0], 1, 1, true, Con21422), 
exec_layers([LMul60537,LRes88646,LCon51522,LRes20787,LFla92987,LDot80517,LCon94054,LMin55300,LRes68992,LRes61712,LCon21422],["Mul60537","Res88646","Con51522","Res20787","Fla92987","Dot80517","Con94054","Min55300","Res68992","Res61712","Con21422"],Con21422,"Con21422")

Actual (Unparsed): [[[[0.0011661, 0.0012293]], [[0.0026040, 0.0168545]], [[0.0029491, 0.0080328]], [[0.0048734, 0.0315434]]]]

Expected (Unparsed): [[[[0.001166090542792,0.0012292991890368]],[[0.0026039836623136,0.016854526230796803]],[[0.0029490694507752,0.0080327731005408]],[[0.0048733857913488,0.0315434423962944]]]]

Actual:   [[[[0.0012, 0.0013]], [[0.0027, 0.0169]], [[0.003, 0.0081]], [[0.0049, 0.0316]]]]

Expected: [[[[0.0012, 0.0013]], [[0.0027, 0.0169]], [[0.003, 0.0081]], [[0.0049, 0.0316]]]]