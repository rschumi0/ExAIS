import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Mul93953 = tf.keras.layers.Input(shape=([2, 2, 1, 2]))
in1Mul93953 = tf.keras.layers.Input(shape=([2, 2, 1, 2]))
in0Glo6222 = tf.keras.layers.Input(shape=([1, 1, 2, 2]))
in0Con65962 = tf.keras.layers.Input(shape=([1, 1]))
in0Loc11036 = tf.keras.layers.Input(shape=([2, 2, 1]))

Mul93953 = keras.layers.Multiply(name = 'Mul93953', )([in0Mul93953,in1Mul93953])
Res6112 = keras.layers.Reshape((2, 2, 2), name = 'Res6112', )(Mul93953)
Glo70420 = keras.layers.GlobalAveragePooling2D(name = 'Glo70420', )(Res6112)
Glo6222 = keras.layers.GlobalAveragePooling3D(name = 'Glo6222', )(in0Glo6222)
Dot13425 = keras.layers.Dot(axes=(1, 1), name = 'Dot13425', )([Glo70420,Glo6222])
Res78627 = keras.layers.Reshape((1, 1), name = 'Res78627', )(Dot13425)
Con65962 = keras.layers.Concatenate(axis=2, name = 'Con65962', )([Res78627,in0Con65962])
Loc11036 = keras.layers.LocallyConnected2D(2, (2, 2),strides=(1, 1), name = 'Loc11036', )(in0Loc11036)
Res64520 = keras.layers.Reshape((1, 2), name = 'Res64520', )(Loc11036)
Up_97286 = keras.layers.UpSampling1D(size=(1), name = 'Up_97286', )(Res64520)
Min73429 = keras.layers.Minimum(name = 'Min73429', )([Con65962,Up_97286])
model = tf.keras.models.Model(inputs=[in0Mul93953,in1Mul93953,in0Glo6222,in0Con65962,in0Loc11036], outputs=Min73429)
w = model.get_layer('Loc11036').get_weights() 
w[0] = np.array([[[0.3502, 0.7787], [0.4147, 0.9799], [0.9322, 0.5471], [0.0619, 0.9817]]])
w[1] = np.array([[[0, 0]]])
model.get_layer('Loc11036').set_weights(w) 
in0Mul93953 = tf.constant([[[[[0.3299, 0.1355]], [[0.4512, 0.4001]]], [[[0.9164, 0.641]], [[0.6662, 0.78]]]]])
in1Mul93953 = tf.constant([[[[[0.2827, 0.3373]], [[0.6228, 0.848]]], [[[0.9695, 0.8842]], [[0.7621, 0.6124]]]]])
in0Glo6222 = tf.constant([[[[[1.3606, 1.3194], [1.3272, 1.6328]]]]])
in0Con65962 = tf.constant([[[0.94]]])
in0Loc11036 = tf.constant([[[[0.0119], [0.0635]], [[0.1209], [0.6511]]]])
print (np.array2string(model.predict([in0Mul93953,in1Mul93953,in0Glo6222,in0Con65962,in0Loc11036],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Min73429.png')

LMul93953 = multiply_layer([[[[[[0.3299, 0.1355]], [[0.4512, 0.4001]]], [[[0.9164, 0.641]], [[0.6662, 0.78]]]]], [[[[[0.2827, 0.3373]], [[0.6228, 0.848]]], [[[0.9695, 0.8842]], [[0.7621, 0.6124]]]]]], Mul93953), 
LRes6112 = reshape_layer(Mul93953, [2, 2, 2], Res6112), 
LGlo70420 = global_average_pooling2D_layer(Res6112, Glo70420), 
LGlo6222 = global_average_pooling3D_layer([[[[[1.3606, 1.3194], [1.3272, 1.6328]]]]], Glo6222), 
LDot13425 = dot_layer(Glo70420,Glo6222, 1, 1, Dot13425), 
LRes78627 = reshape_layer(Dot13425, [1, 1], Res78627), 
LCon65962 = concatenate_layer([Res78627,[[[0.94]]]], 2, Con65962), 
LLoc11036 = locally_connected2D_layer([[[[0.0119], [0.0635]], [[0.1209], [0.6511]]]], 2, 2,[[[0.3502, 0.7787], [0.4147, 0.9799], [0.9322, 0.5471], [0.0619, 0.9817]]],[[[0, 0]]], 1, 1, Loc11036), 
LRes64520 = reshape_layer(Loc11036, [1, 2], Res64520), 
LUp_97286 = up_sampling1D_layer(Res64520, 1, Up_97286), 
LMin73429 = minimum_layer([Con65962,Up_97286], Min73429), 
exec_layers([LMul93953,LRes6112,LGlo70420,LGlo6222,LDot13425,LRes78627,LCon65962,LLoc11036,LRes64520,LUp_97286,LMin73429],["Mul93953","Res6112","Glo70420","Glo6222","Dot13425","Res78627","Con65962","Loc11036","Res64520","Up_97286","Min73429"],Min73429,"Min73429")

Actual (Unparsed): [[[0.1835069, 0.7768194]]]

Expected (Unparsed): [[[0.18350689999999997,0.77681944]]]

Actual:   [[[0.1836, 0.7769]]]

Expected: [[[0.1836, 0.7769]]]