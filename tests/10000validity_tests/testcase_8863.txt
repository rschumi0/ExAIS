import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Dot89483 = tf.keras.layers.Input(shape=([3, 2]))
in1Dot89483 = tf.keras.layers.Input(shape=([3, 2]))

Dot89483 = keras.layers.Dot(axes=(2, 2), name = 'Dot89483', )([in0Dot89483,in1Dot89483])
Res45498 = keras.layers.Reshape((3, 3, 1), name = 'Res45498', )(Dot89483)
Res47038 = keras.layers.Reshape((3, 3, 1, 1), name = 'Res47038', )(Res45498)
Con63876 = keras.layers.Conv3DTranspose(2, (1, 1, 1),strides=(1, 1, 1), padding='valid', name = 'Con63876', )(Res47038)
model = tf.keras.models.Model(inputs=[in0Dot89483,in1Dot89483], outputs=Con63876)
w = model.get_layer('Con63876').get_weights() 
w[0] = np.array([[[[[0.4361], [0.1717]]]]])
w[1] = np.array([0, 0])
model.get_layer('Con63876').set_weights(w) 
in0Dot89483 = tf.constant([[[0.6603, 0.9017], [0.048, 0.7006], [0.3331, 0.9105]]])
in1Dot89483 = tf.constant([[[0.2672, 0.3255], [0.86, 0.4156], [0.0135, 0.2717]]])
print (np.array2string(model.predict([in0Dot89483,in1Dot89483],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Con63876.png')

LDot89483 = dot_layer([[[0.6603, 0.9017], [0.048, 0.7006], [0.3331, 0.9105]]], [[[0.2672, 0.3255], [0.86, 0.4156], [0.0135, 0.2717]]], 2, 2, Dot89483), 
LRes45498 = reshape_layer(Dot89483, [3, 3, 1], Res45498), 
LRes47038 = reshape_layer(Res45498, [3, 3, 1, 1], Res47038), 
LCon63876 = conv3D_transpose_layer(Res47038, 1, 1, 1,[[[[[0.4361], [0.1717]]]]],[0, 0], 1, 1, 1, false, Con63876), 
exec_layers([LDot89483,LRes45498,LRes47038,LCon63876],["Dot89483","Res45498","Res47038","Con63876"],Con63876,"Con63876")

Actual (Unparsed): [[[[[0.2049389, 0.0806879]], [[0.4110698, 0.1618452]], [[0.1107284, 0.0435957]]], [[[0.1050438, 0.0413575]], [[0.1449812, 0.0570816]], [[0.0832955, 0.0327949]]], [[[0.1680608, 0.0661684]], [[0.2899497, 0.1141581]], [[0.1098447, 0.0432477]]]]]

Expected (Unparsed): [[[[[0.204938875911,0.080687927067]],[[0.41106983117199997,0.16184519608399997]],[[0.11072838043399999,0.043595649897999994]]],[[[0.10504379948999999,0.04135753353]],[[0.14498116589600002,0.057081555112]],[[0.08329554482200001,0.032794875134]]],[[[0.16806075972699996,0.06616838441899998]],[[0.28994971977999995,0.11415814465999999]],[[0.10984473716999998,0.04324774449]]]]]

Actual:   [[[[[0.205, 0.0807]], [[0.4111, 0.1619]], [[0.1108, 0.0436]]], [[[0.1051, 0.0414]], [[0.145, 0.0571]], [[0.0833, 0.0328]]], [[[0.1681, 0.0662]], [[0.29, 0.1142]], [[0.1099, 0.0433]]]]]

Expected: [[[[[0.205, 0.0807]], [[0.4111, 0.1619]], [[0.1108, 0.0436]]], [[[0.1051, 0.0414]], [[0.145, 0.0571]], [[0.0833, 0.0328]]], [[[0.1681, 0.0662]], [[0.29, 0.1142]], [[0.1099, 0.0433]]]]]