import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Lea11571 = tf.keras.layers.Input(shape=([2, 2, 2]))
in0Sep43117 = tf.keras.layers.Input(shape=([1, 1]))
in0Add38716 = tf.keras.layers.Input(shape=([2, 2]))
in1Add38716 = tf.keras.layers.Input(shape=([2, 2]))
in0Con18368 = tf.keras.layers.Input(shape=([2, 2]))

Lea11571 = keras.layers.LeakyReLU(alpha=5.23633604382801, name = 'Lea11571', input_shape=(2, 2, 2))(in0Lea11571)
Lea2159 = keras.layers.LeakyReLU(alpha=1.2966635940406428, name = 'Lea2159', )(Lea11571)
Res21358 = keras.layers.Reshape((2, 4), name = 'Res21358', )(Lea2159)
Sep43117 = keras.layers.SeparableConv1D(4, (1),strides=(1), padding='valid', name = 'Sep43117', )(in0Sep43117)
Zer5972 = keras.layers.ZeroPadding1D(padding=((1, 0)), name = 'Zer5972', )(Sep43117)
Ave17999 = keras.layers.Average(name = 'Ave17999', )([Res21358,Zer5972])
Add38716 = keras.layers.Add(name = 'Add38716', )([in0Add38716,in1Add38716])
Sof61944 = keras.layers.Softmax(axis=1, name = 'Sof61944', )(Add38716)
Sep40321 = keras.layers.SeparableConv1D(2, (2),strides=(2), padding='valid', name = 'Sep40321', )(Sof61944)
Zer94723 = keras.layers.ZeroPadding1D(padding=((1, 0)), name = 'Zer94723', )(Sep40321)
Con18368 = keras.layers.Concatenate(axis=2, name = 'Con18368', )([Zer94723,in0Con18368])
Min72734 = keras.layers.Minimum(name = 'Min72734', )([Ave17999,Con18368])
model = tf.keras.models.Model(inputs=[in0Lea11571,in0Sep43117,in0Add38716,in1Add38716,in0Con18368], outputs=Min72734)
w = model.get_layer('Sep43117').get_weights() 
w[0] = np.array([[[0.9906]]])
w[1] = np.array([[[0.8145, 0.4338, 0.1648, 0.295]]])
w[2] = np.array([0, 0, 0, 0])
model.get_layer('Sep43117').set_weights(w) 
w = model.get_layer('Sep40321').get_weights() 
w[0] = np.array([[[0.5441], [0.224]], [[0.9129], [0.5468]]])
w[1] = np.array([[[0.8328, 0.2304], [0.3355, 0.3317]]])
w[2] = np.array([0, 0])
model.get_layer('Sep40321').set_weights(w) 
in0Lea11571 = tf.constant([[[[0.0985, 0.0808], [0.4276, 0.4359]], [[0.9576, 0.6034], [0.7688, 0.1622]]]])
in0Sep43117 = tf.constant([[[0.6836]]])
in0Add38716 = tf.constant([[[0.9605, 0.4505], [0.5717, 0.5462]]])
in1Add38716 = tf.constant([[[0.4368, 0.7418], [0.979, 0.1187]]])
in0Con18368 = tf.constant([[[0.1613, 0.8013], [0.3629, 0.4557]]])
print (np.array2string(model.predict([in0Lea11571,in0Sep43117,in0Add38716,in1Add38716,in0Con18368],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Min72734.png')

LLea11571 = leaky_relu_layer([[[[0.0985, 0.0808], [0.4276, 0.4359]], [[0.9576, 0.6034], [0.7688, 0.1622]]]], 5.23633604382801, Lea11571), 
LLea2159 = leaky_relu_layer(Lea11571, 1.2966635940406428, Lea2159), 
LRes21358 = reshape_layer(Lea2159, [2, 4], Res21358), 
LSep43117 = separable_conv1D_layer([[[0.6836]]], 1,[[[[0.9906]]],[[[0.8145, 0.4338, 0.1648, 0.295]]]],[0, 0, 0, 0], 1, false, Sep43117), 
LZer5972 = zero_padding1D_layer(Sep43117, 1, 0, Zer5972), 
LAve17999 = average_layer([Res21358,Zer5972], Ave17999), 
LAdd38716 = add_layer([[[[0.9605, 0.4505], [0.5717, 0.5462]]], [[[0.4368, 0.7418], [0.979, 0.1187]]]], Add38716), 
LSof61944 = softmax_layer(Add38716, 1, Sof61944), 
LSep40321 = separable_conv1D_layer(Sof61944, 2,[[[[0.5441], [0.224]], [[0.9129], [0.5468]]],[[[0.8328, 0.2304], [0.3355, 0.3317]]]],[0, 0], 2, false, Sep40321), 
LZer94723 = zero_padding1D_layer(Sep40321, 1, 0, Zer94723), 
LCon18368 = concatenate_layer([Zer94723,[[[0.1613, 0.8013], [0.3629, 0.4557]]]], 2, Con18368), 
LMin72734 = minimum_layer([Ave17999,Con18368], Min72734), 
exec_layers([LLea11571,LLea2159,LRes21358,LSep43117,LZer5972,LAve17999,LAdd38716,LSof61944,LSep40321,LZer94723,LCon18368,LMin72734],["Lea11571","Lea2159","Res21358","Sep43117","Zer5972","Ave17999","Add38716","Sof61944","Sep40321","Zer94723","Con18368","Min72734"],Min72734,"Min72734")

Actual (Unparsed): [[[0.0000000, 0.0000000, 0.1613000, 0.2179500], [0.7337949, 0.2851367, 0.3629000, 0.1809832]]]

Expected (Unparsed): [[[0,0,0.1613,0.21795],[0.7337948992319915,0.28513670019832493,0.3629,0.1809831886]]]

Actual:   [[[0, 0, 0.1613, 0.218], [0.7338, 0.2852, 0.3629, 0.181]]]

Expected: [[[0, 0, 0.1613, 0.218], [0.7338, 0.2852, 0.3629, 0.181]]]