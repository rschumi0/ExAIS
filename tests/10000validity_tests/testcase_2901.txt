import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Ave52530 = tf.keras.layers.Input(shape=([1, 2]))
in1Ave52530 = tf.keras.layers.Input(shape=([1, 2]))
in0Con27961 = tf.keras.layers.Input(shape=([7, 3, 2]))
in0Con74872 = tf.keras.layers.Input(shape=([1, 1, 2]))
in0ReL80281 = tf.keras.layers.Input(shape=([2, 1]))
in0Con94340 = tf.keras.layers.Input(shape=([5]))

Ave52530 = keras.layers.Average(name = 'Ave52530', )([in0Ave52530,in1Ave52530])
Res37482 = keras.layers.Reshape((1, 2, 1), name = 'Res37482', )(Ave52530)
Zer94689 = keras.layers.ZeroPadding2D(padding=((6, 0), (1, 0)), name = 'Zer94689', )(Res37482)
Con27961 = keras.layers.Concatenate(axis=3, name = 'Con27961', )([Zer94689,in0Con27961])
Con74872 = keras.layers.Conv2DTranspose(3, (1, 1),strides=(7, 1), padding='same', name = 'Con74872', )(in0Con74872)
Zer77796 = keras.layers.ZeroPadding2D(padding=((0, 0), (2, 0)), name = 'Zer77796', )(Con74872)
Ave79951 = keras.layers.Average(name = 'Ave79951', )([Con27961,Zer77796])
Loc23128 = keras.layers.LocallyConnected2D(3, (4, 2),strides=(7, 1), name = 'Loc23128', )(Ave79951)
Res94575 = keras.layers.Reshape((1, 6), name = 'Res94575', )(Loc23128)
Fla63453 = keras.layers.Flatten(name = 'Fla63453', )(Res94575)
ReL80281 = keras.layers.ReLU(max_value=8.828436931942953, negative_slope=0.11152578806042969, threshold=4.782644687305382, name = 'ReL80281', input_shape=(2, 1))(in0ReL80281)
Glo40699 = keras.layers.GlobalMaxPool1D(name = 'Glo40699', )(ReL80281)
Con94340 = keras.layers.Concatenate(axis=1, name = 'Con94340', )([Glo40699,in0Con94340])
Ave36793 = keras.layers.Average(name = 'Ave36793', )([Fla63453,Con94340])
model = tf.keras.models.Model(inputs=[in0Ave52530,in1Ave52530,in0Con27961,in0Con74872,in0ReL80281,in0Con94340], outputs=Ave36793)
w = model.get_layer('Con74872').get_weights() 
w[0] = np.array([[[[0.9906, 0.0621], [0.7026, 0.5497], [0.976, 0.1061]]]])
w[1] = np.array([0, 0, 0])
model.get_layer('Con74872').set_weights(w) 
w = model.get_layer('Loc23128').get_weights() 
w[0] = np.array([[[0.1733, 0.7041, 0.0161], [0.4028, 0.2082, 0.6406], [0.0451, 0.9077, 0.9954], [0.9661, 0.5318, 0.849], [0.0241, 0.135, 0.3911], [0.7498, 0.1858, 0.2683], [0.0014, 0.007, 0.571], [0.0536, 0.3306, 0.4133], [0.9788, 0.2446, 0.231], [0.5172, 0.3976, 0.584], [0.0594, 0.0785, 0.2339], [0.1309, 0.3736, 0.2358], [0.9971, 0.7824, 0.9654], [0.5127, 0.4744, 0.2418], [0.8989, 0.4589, 0.1766], [0.8143, 0.54, 0.5493], [0.9748, 0.1821, 0.7884], [0.9424, 0.4049, 0.7515], [0.8522, 0.8406, 0.0701], [0.251, 0.9413, 0.4861], [0.9404, 0.0094, 0.1978], [0.2778, 0.1145, 0.745], [0.0322, 0.1011, 0.7895], [0.7556, 0.7863, 0.7236]], [[0.7645, 0.1175, 0.3067], [0.0311, 0.7955, 0.8714], [0.5802, 0.9516, 0.5119], [0.2014, 0.0543, 0.1463], [0.4099, 0.3002, 0.6486], [0.937, 0.6432, 0.9519], [0.7466, 0.4793, 0.9467], [0.8619, 0.65, 0.8938], [0.051, 0.4172, 0.0796], [0.924, 0.3693, 0.8685], [0.3054, 0.7011, 0.5731], [0.8933, 0.4071, 0.3648], [0.9129, 0.1198, 0.977], [0.6161, 0.7842, 0.4697], [0.3051, 0.7574, 0.0909], [0.114, 0.715, 0.4149], [0.4181, 0.4245, 0.2539], [0.9299, 0.8877, 0.5535], [0.3852, 0.3588, 0.8437], [0.1744, 0.6775, 0.1245], [0.188, 0.4785, 0.7419], [0.6283, 0.2727, 0.7371], [0.8279, 0.5476, 0.7435], [0.6104, 0.5581, 0.1204]]])
w[1] = np.array([[[0, 0, 0], [0, 0, 0]]])
model.get_layer('Loc23128').set_weights(w) 
in0Ave52530 = tf.constant([[[0.8077, 0.7533]]])
in1Ave52530 = tf.constant([[[0.2898, 0.1012]]])
in0Con27961 = tf.constant([[[[0.8026, 0.2278], [0.7538, 0.6331], [0.5175, 0.006]], [[0.5086, 0.4806], [0.9198, 0.6241], [0.3432, 0.1311]], [[0.8647, 0.2081], [0.4345, 0.707], [0.346, 0.4329]], [[0.6686, 0.151], [0.2476, 0.6306], [0.1853, 0.2381]], [[0.604, 0.6374], [0.5224, 0.7514], [0.1841, 0.3272]], [[0.5063, 0.9371], [0.0727, 0.6178], [0.4122, 0.3262]], [[0.0668, 0.1027], [0.0727, 0.024], [0.1241, 0.36]]]])
in0Con74872 = tf.constant([[[[0.6176, 0.8674]]]])
in0ReL80281 = tf.constant([[[0.9859], [0.9217]]])
in0Con94340 = tf.constant([[0.6987, 0.6669, 0.8205, 0.9475, 0.4473]])
print (np.array2string(model.predict([in0Ave52530,in1Ave52530,in0Con27961,in0Con74872,in0ReL80281,in0Con94340],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Ave36793.png')

LAve52530 = average_layer([[[[0.8077, 0.7533]]], [[[0.2898, 0.1012]]]], Ave52530), 
LRes37482 = reshape_layer(Ave52530, [1, 2, 1], Res37482), 
LZer94689 = zero_padding2D_layer(Res37482, 6, 0, 1, 0, Zer94689), 
LCon27961 = concatenate_layer([Zer94689,[[[[0.8026, 0.2278], [0.7538, 0.6331], [0.5175, 0.006]], [[0.5086, 0.4806], [0.9198, 0.6241], [0.3432, 0.1311]], [[0.8647, 0.2081], [0.4345, 0.707], [0.346, 0.4329]], [[0.6686, 0.151], [0.2476, 0.6306], [0.1853, 0.2381]], [[0.604, 0.6374], [0.5224, 0.7514], [0.1841, 0.3272]], [[0.5063, 0.9371], [0.0727, 0.6178], [0.4122, 0.3262]], [[0.0668, 0.1027], [0.0727, 0.024], [0.1241, 0.36]]]]], 3, Con27961), 
LCon74872 = conv2D_transpose_layer([[[[0.6176, 0.8674]]]], 1, 1,[[[[0.9906, 0.0621], [0.7026, 0.5497], [0.976, 0.1061]]]],[0, 0, 0], 7, 1, true, Con74872), 
LZer77796 = zero_padding2D_layer(Con74872, 0, 0, 2, 0, Zer77796), 
LAve79951 = average_layer([Con27961,Zer77796], Ave79951), 
LLoc23128 = locally_connected2D_layer(Ave79951, 4, 2,[[[0.1733, 0.7041, 0.0161], [0.4028, 0.2082, 0.6406], [0.0451, 0.9077, 0.9954], [0.9661, 0.5318, 0.849], [0.0241, 0.135, 0.3911], [0.7498, 0.1858, 0.2683], [0.0014, 0.007, 0.571], [0.0536, 0.3306, 0.4133], [0.9788, 0.2446, 0.231], [0.5172, 0.3976, 0.584], [0.0594, 0.0785, 0.2339], [0.1309, 0.3736, 0.2358], [0.9971, 0.7824, 0.9654], [0.5127, 0.4744, 0.2418], [0.8989, 0.4589, 0.1766], [0.8143, 0.54, 0.5493], [0.9748, 0.1821, 0.7884], [0.9424, 0.4049, 0.7515], [0.8522, 0.8406, 0.0701], [0.251, 0.9413, 0.4861], [0.9404, 0.0094, 0.1978], [0.2778, 0.1145, 0.745], [0.0322, 0.1011, 0.7895], [0.7556, 0.7863, 0.7236]], [[0.7645, 0.1175, 0.3067], [0.0311, 0.7955, 0.8714], [0.5802, 0.9516, 0.5119], [0.2014, 0.0543, 0.1463], [0.4099, 0.3002, 0.6486], [0.937, 0.6432, 0.9519], [0.7466, 0.4793, 0.9467], [0.8619, 0.65, 0.8938], [0.051, 0.4172, 0.0796], [0.924, 0.3693, 0.8685], [0.3054, 0.7011, 0.5731], [0.8933, 0.4071, 0.3648], [0.9129, 0.1198, 0.977], [0.6161, 0.7842, 0.4697], [0.3051, 0.7574, 0.0909], [0.114, 0.715, 0.4149], [0.4181, 0.4245, 0.2539], [0.9299, 0.8877, 0.5535], [0.3852, 0.3588, 0.8437], [0.1744, 0.6775, 0.1245], [0.188, 0.4785, 0.7419], [0.6283, 0.2727, 0.7371], [0.8279, 0.5476, 0.7435], [0.6104, 0.5581, 0.1204]]],[[[0, 0, 0], [0, 0, 0]]], 7, 1, Loc23128), 
LRes94575 = reshape_layer(Loc23128, [1, 6], Res94575), 
LFla63453 = flatten_layer(Res94575, Fla63453), 
LReL80281 = relu_layer([[[0.9859], [0.9217]]], 8.828436931942953, 0.11152578806042969, 4.782644687305382, ReL80281), 
LGlo40699 = global_max_pool1D_layer(ReL80281, Glo40699), 
LCon94340 = concatenate_layer([Glo40699,[[0.6987, 0.6669, 0.8205, 0.9475, 0.4473]]], 1, Con94340), 
LAve36793 = average_layer([Fla63453,Con94340], Ave36793), 
exec_layers([LAve52530,LRes37482,LZer94689,LCon27961,LCon74872,LZer77796,LAve79951,LLoc23128,LRes94575,LFla63453,LReL80281,LGlo40699,LCon94340,LAve36793],["Ave52530","Res37482","Zer94689","Con27961","Con74872","Zer77796","Ave79951","Loc23128","Res94575","Fla63453","ReL80281","Glo40699","Con94340","Ave36793"],Ave36793,"Ave36793")

Actual (Unparsed): [[0.7820131, 1.1511194, 1.3373146, 1.4863877, 1.8190561, 1.4859025]]

Expected (Unparsed): [[0.7820131108420088,1.151119395,1.3373146025,1.4863876803415,1.8190561410265,1.4859025308699996]]

Actual:   [[0.7821, 1.1512, 1.3374, 1.4864, 1.8191, 1.486]]

Expected: [[0.7821, 1.1512, 1.3374, 1.4864, 1.8191, 1.486]]