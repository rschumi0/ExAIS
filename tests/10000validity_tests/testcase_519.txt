import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Ave39630 = tf.keras.layers.Input(shape=([1, 1, 2]))
in1Ave39630 = tf.keras.layers.Input(shape=([1, 1, 2]))
in0Con19624 = tf.keras.layers.Input(shape=([2, 7, 2]))
in0Mul4852 = tf.keras.layers.Input(shape=([1, 2]))
in1Mul4852 = tf.keras.layers.Input(shape=([1, 2]))
in0Con96863 = tf.keras.layers.Input(shape=([2, 7, 3]))
in0Mas14449 = tf.keras.layers.Input(shape=([1, 4, 4]))
in0Cro72406 = tf.keras.layers.Input(shape=([2, 1]))
in0Con73658 = tf.keras.layers.Input(shape=([2, 1, 1]))
in0Thr55368 = tf.keras.layers.Input(shape=([2, 1, 2]))
in0Con20512 = tf.keras.layers.Input(shape=([2, 7, 2]))

Ave39630 = keras.layers.Average(name = 'Ave39630', )([in0Ave39630,in1Ave39630])
Lea4410 = keras.layers.LeakyReLU(alpha=1.9670784165625546, name = 'Lea4410', )(Ave39630)
Zer20847 = keras.layers.ZeroPadding2D(padding=((1, 0), (6, 0)), name = 'Zer20847', )(Lea4410)
Con19624 = keras.layers.Concatenate(axis=3, name = 'Con19624', )([Zer20847,in0Con19624])
Mul4852 = keras.layers.Multiply(name = 'Mul4852', )([in0Mul4852,in1Mul4852])
Per21915 = keras.layers.Permute((2,1), name = 'Per21915',)(Mul4852)
Res23006 = keras.layers.Reshape((2, 1, 1), name = 'Res23006', )(Per21915)
Zer24539 = keras.layers.ZeroPadding2D(padding=((0, 0), (6, 0)), name = 'Zer24539', )(Res23006)
Con96863 = keras.layers.Concatenate(axis=3, name = 'Con96863', )([Zer24539,in0Con96863])
Mas14449 = keras.layers.Masking(mask_value=1, name = 'Mas14449', )(in0Mas14449)
Zer54468 = keras.layers.ZeroPadding2D(padding=((1, 0), (3, 0)), name = 'Zer54468', )(Mas14449)
Ave49095 = keras.layers.Average(name = 'Ave49095', )([Con96863,Zer54468])
Sub37789 = keras.layers.Subtract(name = 'Sub37789', )([Con19624,Ave49095])
Cro72406 = keras.layers.Cropping1D(cropping=((1, 0)), name = 'Cro72406', )(in0Cro72406)
Res80043 = keras.layers.Reshape((1, 1, 1), name = 'Res80043', )(Cro72406)
Zer16962 = keras.layers.ZeroPadding2D(padding=((1, 0), (0, 0)), name = 'Zer16962', )(Res80043)
Con73658 = keras.layers.Concatenate(axis=3, name = 'Con73658', )([Zer16962,in0Con73658])
Thr55368 = keras.layers.ThresholdedReLU(theta=7.789972954972581, name = 'Thr55368', input_shape=(2, 1, 2))(in0Thr55368)
Max19765 = keras.layers.Maximum(name = 'Max19765', )([Con73658,Thr55368])
Zer72577 = keras.layers.ZeroPadding2D(padding=((0, 0), (6, 0)), name = 'Zer72577', )(Max19765)
Con20512 = keras.layers.Concatenate(axis=3, name = 'Con20512', )([Zer72577,in0Con20512])
Sub66037 = keras.layers.Subtract(name = 'Sub66037', )([Sub37789,Con20512])
model = tf.keras.models.Model(inputs=[in0Ave39630,in1Ave39630,in0Con19624,in0Mul4852,in1Mul4852,in0Con96863,in0Mas14449,in0Cro72406,in0Con73658,in0Thr55368,in0Con20512], outputs=Sub66037)
in0Ave39630 = tf.constant([[[[0.5241, 0.6579]]]])
in1Ave39630 = tf.constant([[[[0.8349, 0.0343]]]])
in0Con19624 = tf.constant([[[[0.2659, 0.8272], [0.458, 0.7177], [0.1127, 0.4478], [0.7196, 0.531], [0.0316, 0.5183], [0.9244, 0.67], [0.6588, 0.1047]], [[0.0428, 0.9526], [0.545, 0.749], [0.3759, 0.4562], [0.0104, 0.9838], [0.0146, 0.1662], [0.3585, 0.893], [0.4818, 0.4177]]]])
in0Mul4852 = tf.constant([[[0.0511, 0.7941]]])
in1Mul4852 = tf.constant([[[0.3437, 0.8182]]])
in0Con96863 = tf.constant([[[[0.5203, 0.7826, 0.645], [0.8084, 0.0272, 0.7382], [0.2991, 0.7843, 0.1418], [0.2073, 0.629, 0.3515], [0.6743, 0.3131, 0.8901], [0.9792, 0.1499, 0.06], [0.1972, 0.0909, 0.5262]], [[0.4341, 0.4734, 0.6053], [0.4172, 0.928, 0.3454], [0.5281, 0.8871, 0.0644], [0.5288, 0.7079, 0.8762], [0.6791, 0.9462, 0.8961], [0.9705, 0.8295, 0.6765], [0.6744, 0.5413, 0.1939]]]])
in0Mas14449 = tf.constant([[[[1.9382, 1.6701, 1.8097, 1.9301], [1.3886, 1.2511, 1.757, 1.7447], [1.6863, 1.1893, 1.6076, 1.5742], [1.0575, 1.0247, 1.2864, 1.3366]]]])
in0Cro72406 = tf.constant([[[1.9101], [1.3373]]])
in0Con73658 = tf.constant([[[[0.0498]], [[0.7965]]]])
in0Thr55368 = tf.constant([[[[0.7495, 0.5169]], [[0.2284, 0.7599]]]])
in0Con20512 = tf.constant([[[[0.5823, 0.0454], [0.7587, 0.6032], [0.309, 0.536], [0.549, 0.3396], [0.6086, 0.3656], [0.491, 0.9429], [0.1227, 0.8479]], [[0.2168, 0.3424], [0.9731, 0.8795], [0.6225, 0.7975], [0.0925, 0.2132], [0.1026, 0.3014], [0.4564, 0.9376], [0.3003, 0.6223]]]])
print (np.array2string(model.predict([in0Ave39630,in1Ave39630,in0Con19624,in0Mul4852,in1Mul4852,in0Con96863,in0Mas14449,in0Cro72406,in0Con73658,in0Thr55368,in0Con20512],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Sub66037.png')

LAve39630 = average_layer([[[[[0.5241, 0.6579]]]], [[[[0.8349, 0.0343]]]]], Ave39630), 
LLea4410 = leaky_relu_layer(Ave39630, 1.9670784165625546, Lea4410), 
LZer20847 = zero_padding2D_layer(Lea4410, 1, 0, 6, 0, Zer20847), 
LCon19624 = concatenate_layer([Zer20847,[[[[0.2659, 0.8272], [0.458, 0.7177], [0.1127, 0.4478], [0.7196, 0.531], [0.0316, 0.5183], [0.9244, 0.67], [0.6588, 0.1047]], [[0.0428, 0.9526], [0.545, 0.749], [0.3759, 0.4562], [0.0104, 0.9838], [0.0146, 0.1662], [0.3585, 0.893], [0.4818, 0.4177]]]]], 3, Con19624), 
LMul4852 = multiply_layer([[[[0.0511, 0.7941]]], [[[0.3437, 0.8182]]]], Mul4852), 
LPer21915 = permute_layer(Mul4852, 2,1, Per21915), 
LRes23006 = reshape_layer(Per21915, [2, 1, 1], Res23006), 
LZer24539 = zero_padding2D_layer(Res23006, 0, 0, 6, 0, Zer24539), 
LCon96863 = concatenate_layer([Zer24539,[[[[0.5203, 0.7826, 0.645], [0.8084, 0.0272, 0.7382], [0.2991, 0.7843, 0.1418], [0.2073, 0.629, 0.3515], [0.6743, 0.3131, 0.8901], [0.9792, 0.1499, 0.06], [0.1972, 0.0909, 0.5262]], [[0.4341, 0.4734, 0.6053], [0.4172, 0.928, 0.3454], [0.5281, 0.8871, 0.0644], [0.5288, 0.7079, 0.8762], [0.6791, 0.9462, 0.8961], [0.9705, 0.8295, 0.6765], [0.6744, 0.5413, 0.1939]]]]], 3, Con96863), 
LMas14449 = masking_layer([[[[1.9382, 1.6701, 1.8097, 1.9301], [1.3886, 1.2511, 1.757, 1.7447], [1.6863, 1.1893, 1.6076, 1.5742], [1.0575, 1.0247, 1.2864, 1.3366]]]], 1, Mas14449), 
LZer54468 = zero_padding2D_layer(Mas14449, 1, 0, 3, 0, Zer54468), 
LAve49095 = average_layer([Con96863,Zer54468], Ave49095), 
LSub37789 = subtract_layer(Con19624,Ave49095, Sub37789), 
LCro72406 = cropping1D_layer([[[1.9101], [1.3373]]], 1, 0, Cro72406), 
LRes80043 = reshape_layer(Cro72406, [1, 1, 1], Res80043), 
LZer16962 = zero_padding2D_layer(Res80043, 1, 0, 0, 0, Zer16962), 
LCon73658 = concatenate_layer([Zer16962,[[[[0.0498]], [[0.7965]]]]], 3, Con73658), 
LThr55368 = thresholded_relu_layer([[[[0.7495, 0.5169]], [[0.2284, 0.7599]]]], 7.789972954972581, Thr55368), 
LMax19765 = maximum_layer([Con73658,Thr55368], Max19765), 
LZer72577 = zero_padding2D_layer(Max19765, 0, 0, 6, 0, Zer72577), 
LCon20512 = concatenate_layer([Zer72577,[[[[0.5823, 0.0454], [0.7587, 0.6032], [0.309, 0.536], [0.549, 0.3396], [0.6086, 0.3656], [0.491, 0.9429], [0.1227, 0.8479]], [[0.2168, 0.3424], [0.9731, 0.8795], [0.6225, 0.7975], [0.0925, 0.2132], [0.1026, 0.3014], [0.4564, 0.9376], [0.3003, 0.6223]]]]], 3, Con20512), 
LSub66037 = subtract_layer(Sub37789,Con20512, Sub66037), 
exec_layers([LAve39630,LLea4410,LZer20847,LCon19624,LMul4852,LPer21915,LRes23006,LZer24539,LCon96863,LMas14449,LZer54468,LAve49095,LSub37789,LCro72406,LRes80043,LZer16962,LCon73658,LThr55368,LMax19765,LZer72577,LCon20512,LSub66037],["Ave39630","Lea4410","Zer20847","Con19624","Mul4852","Per21915","Res23006","Zer24539","Con96863","Mas14449","Zer54468","Ave49095","Sub37789","Cro72406","Res80043","Zer16962","Con73658","Thr55368","Max19765","Zer72577","Con20512","Sub66037"],Sub66037,"Sub66037")

Actual (Unparsed): [[[[0.0000000, -0.2601500, -0.7077000, 0.4593000], [0.0000000, -0.4042000, -0.3143000, -0.2546000], [0.0000000, -0.1495500, -0.5884500, -0.1591000], [0.0000000, -0.1036500, -0.1439000, 0.0156500], [0.0000000, -0.3371500, -0.7335500, -0.2923500], [0.0000000, -0.4896000, 0.3584500, -0.3029000], [-0.0087815, -0.1484000, 0.4906500, -1.0063000]], [[0.0000000, -0.2170500, -0.4107000, 0.3075500], [0.0000000, -0.2086000, -0.8921000, -0.3032000], [0.0000000, -0.2640500, -0.6901500, -0.3735000], [-0.9691000, -1.0994500, -1.3409000, -0.6325500], [-0.6943000, -0.9651000, -1.4396000, -1.4556000], [-0.8431500, -1.0799000, -1.3164500, -1.1699500], [-1.5114162, -1.2999500, -0.7323500, -0.9698500]]]]

Expected (Unparsed): [[[[0,-0.26015,-0.7077,0.45930000000000004],[0,-0.4042,-0.3143,-0.25459999999999994],[0,-0.14955,-0.5884499999999999,-0.15910000000000007],[0,-0.10365,-0.14390000000000003,0.015650000000000053],[0,-0.33715,-0.73355,-0.29235],[0,-0.4896,0.35845000000000005,-0.30289999999999995],[-0.008781535,-0.14839999999999998,0.49065000000000003,-1.0063]],[[0,-0.21705,-0.41069999999999995,0.30755000000000005],[0,-0.2086,-0.8920999999999999,-0.3031999999999999],[0,-0.26405,-0.69015,-0.3735],[-0.9691,-1.09945,-1.3409,-0.63255],[-0.6943,-0.9651000000000001,-1.4396,-1.4556],[-0.84315,-1.0799,-1.31645,-1.16995],[-1.51141631,-1.29995,-0.7323500000000001,-0.9698499999999999]]]]

Actual:   [[[[0, -0.2601, -0.7077, 0.4593], [0, -0.4042, -0.3143, -0.2546], [0, -0.1495, -0.5884, -0.1591], [0, -0.1036, -0.1439, 0.0157], [0, -0.3371, -0.7335, -0.2923], [0, -0.4896, 0.3585, -0.3029], [-0.0087, -0.1484, 0.4907, -1.0063]], [[0, -0.217, -0.4107, 0.3076], [0, -0.2086, -0.8921, -0.3032], [0, -0.264, -0.6901, -0.3735], [-0.9691, -1.0994, -1.3409, -0.6325], [-0.6943, -0.9651, -1.4396, -1.4556], [-0.8431, -1.0799, -1.3164, -1.1699], [-1.5114, -1.2999, -0.7323, -0.9698]]]]

Expected: [[[[0, -0.2601, -0.7077, 0.4594], [0, -0.4042, -0.3143, -0.2545], [0, -0.1495, -0.5884, -0.1591], [0, -0.1036, -0.1439, 0.0157], [0, -0.3371, -0.7335, -0.2923], [0, -0.4896, 0.3585, -0.3028], [-0.0087, -0.1483, 0.4907, -1.0063]], [[0, -0.217, -0.4106, 0.3076], [0, -0.2086, -0.892, -0.3031], [0, -0.264, -0.6901, -0.3735], [-0.9691, -1.0994, -1.3409, -0.6325], [-0.6943, -0.9651, -1.4396, -1.4556], [-0.8431, -1.0799, -1.3164, -1.1699], [-1.5114, -1.2999, -0.7323, -0.9698]]]]