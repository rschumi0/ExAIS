import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Mul31298 = tf.keras.layers.Input(shape=([1, 2, 1, 2]))
in1Mul31298 = tf.keras.layers.Input(shape=([1, 2, 1, 2]))

Mul31298 = keras.layers.Multiply(name = 'Mul31298', )([in0Mul31298,in1Mul31298])
Res79081 = keras.layers.Reshape((1, 2, 2), name = 'Res79081', )(Mul31298)
Res12050 = keras.layers.Reshape((1, 4), name = 'Res12050', )(Res79081)
Up_19303 = keras.layers.UpSampling1D(size=(1), name = 'Up_19303', )(Res12050)
Res85283 = keras.layers.Reshape((1, 4, 1), name = 'Res85283', )(Up_19303)
Up_85764 = keras.layers.UpSampling2D(size=(1, 1), name = 'Up_85764', )(Res85283)
model = tf.keras.models.Model(inputs=[in0Mul31298,in1Mul31298], outputs=Up_85764)
in0Mul31298 = tf.constant([[[[[0.1247, 0.7838]], [[0.4479, 0.4561]]]]])
in1Mul31298 = tf.constant([[[[[0.6736, 0.3362]], [[0.9859, 0.9717]]]]])
print (np.array2string(model.predict([in0Mul31298,in1Mul31298],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Up_85764.png')

LMul31298 = multiply_layer([[[[[[0.1247, 0.7838]], [[0.4479, 0.4561]]]]], [[[[[0.6736, 0.3362]], [[0.9859, 0.9717]]]]]], Mul31298), 
LRes79081 = reshape_layer(Mul31298, [1, 2, 2], Res79081), 
LRes12050 = reshape_layer(Res79081, [1, 4], Res12050), 
LUp_19303 = up_sampling1D_layer(Res12050, 1, Up_19303), 
LRes85283 = reshape_layer(Up_19303, [1, 4, 1], Res85283), 
LUp_85764 = up_sampling2D_layer(Res85283, 1, 1, Up_85764), 
exec_layers([LMul31298,LRes79081,LRes12050,LUp_19303,LRes85283,LUp_85764],["Mul31298","Res79081","Res12050","Up_19303","Res85283","Up_85764"],Up_85764,"Up_85764")

Actual (Unparsed): [[[[0.0839979], [0.2635136], [0.4415846], [0.4431924]]]]

Expected (Unparsed): [[[[0.08399792],[0.26351356000000004],[0.44158461000000004],[0.44319237]]]]

Actual:   [[[[0.084], [0.2636], [0.4416], [0.4432]]]]

Expected: [[[[0.084], [0.2636], [0.4416], [0.4432]]]]