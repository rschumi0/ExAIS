import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Con45349 = tf.keras.layers.Input(shape=([2, 2, 1]))

Con45349 = keras.layers.Conv2D(4, (1, 1),strides=(1, 4), padding='valid', dilation_rate=(1, 1), name = 'Con45349', )(in0Con45349)
Res51608 = keras.layers.Reshape((2, 1, 4, 1), name = 'Res51608', )(Con45349)
Zer54477 = keras.layers.ZeroPadding3D(padding=((1, 1), (1, 1), (1, 1)), name = 'Zer54477', )(Res51608)
Res43696 = keras.layers.Reshape((4, 3, 6), name = 'Res43696', )(Zer54477)
Res62277 = keras.layers.Reshape((4, 18), name = 'Res62277', )(Res43696)
Loc54850 = keras.layers.LocallyConnected1D(3, (1),strides=(1), name = 'Loc54850', )(Res62277)
model = tf.keras.models.Model(inputs=[in0Con45349], outputs=Loc54850)
w = model.get_layer('Con45349').get_weights() 
w[0] = np.array([[[[0.2085, 0.5659, 0.0514, 0.5602]]]])
w[1] = np.array([0, 0, 0, 0])
model.get_layer('Con45349').set_weights(w) 
w = model.get_layer('Loc54850').get_weights() 
w[0] = np.array([[[0.4135, 0.1405, 0.3112], [0.5531, 0.6245, 0.6414], [0.4061, 0.4229, 0.5979], [0.2232, 0.1538, 0.5271], [0.5802, 0.584, 0.3011], [0.7157, 0.0777, 0.0706], [0.6881, 0.7353, 0.4991], [0.7981, 0.9675, 0.1712], [0.5762, 0.897, 0.052], [0.8291, 0.787, 0.2061], [0.2918, 0.7944, 0.8824], [0.2013, 0.028, 0.2761], [0.2754, 0.4654, 0.0884], [0.7404, 0.4875, 0.5401], [0.9959, 0.7705, 0.0706], [0.5732, 0.1483, 0.5531], [0.4205, 0.7786, 0.9908], [0.8792, 0.6812, 0.3581]], [[0.2535, 0.0802, 0.5046], [0.1992, 0.653, 0.3666], [0.7711, 0.3623, 0.0696], [0.6309, 0.5069, 0.0945], [0.102, 0.8896, 0.1371], [0.8672, 0.0742, 0.1924], [0.9051, 0.7271, 0.0233], [0.0029, 0.7572, 0.0672], [0.9341, 0.7725, 0.2421], [0.7812, 0.4998, 0.667], [0.0079, 0.6454, 0.9889], [0.1838, 0.2927, 0.6884], [0.3755, 0.7008, 0.3985], [0.2557, 0.7525, 0.8366], [0.5153, 0.4536, 0.1856], [0.8685, 0.4197, 0.6637], [0.5931, 0.3558, 0.5089], [0.8628, 0.9373, 0.5438]], [[0.3537, 0.5516, 0.9997], [0.09, 0.4511, 0.1988], [0.2788, 0.1423, 0.1445], [0.2413, 0.0983, 0.8277], [0.7374, 0.8463, 0.8392], [0.7631, 0.6754, 0.8376], [0.3252, 0.2871, 0.2958], [0.4136, 0.7757, 0.7314], [0.0507, 0.5481, 0.4195], [0.1969, 0.2989, 0.25], [0.8131, 0.9837, 0.7313], [0.1818, 0.1433, 0.0336], [0.2459, 0.4895, 0.3112], [0.4868, 0.6194, 0.0802], [0.3918, 0.7321, 0.6378], [0.9965, 0.1437, 0.1311], [0.4417, 0.9869, 0.6012], [0.9361, 0.718, 0.8458]], [[0.426, 0.7918, 0.0282], [0.6069, 0.6161, 0.6039], [0.0006, 0.2137, 0.3747], [0.497, 0.3337, 0.8615], [0.4265, 0.0373, 0.5602], [0.8095, 0.8364, 0.8959], [0.3009, 0.0918, 0.4331], [0.6488, 0.3046, 0.2269], [0.2684, 0.4669, 0.9113], [0.7147, 0.1536, 0.0348], [0.7042, 0.8437, 0.2087], [0.1589, 0.0231, 0.0858], [0.527, 0.1693, 0.6993], [0.1483, 0.5191, 0.4057], [0.8423, 0.5726, 0.2292], [0.7867, 0.7599, 0.6233], [0.9372, 0.7053, 0.1254], [0.0925, 0.6574, 0.2687]]])
w[1] = np.array([[0, 0, 0], [0, 0, 0], [0, 0, 0], [0, 0, 0]])
model.get_layer('Loc54850').set_weights(w) 
in0Con45349 = tf.constant([[[[0.4904], [0.6404]], [[0.803], [0.5439]]]])
print (np.array2string(model.predict([in0Con45349],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Loc54850.png')

LCon45349 = conv2D_layer([[[[0.4904], [0.6404]], [[0.803], [0.5439]]]], 1, 1,[[[[0.2085, 0.5659, 0.0514, 0.5602]]]],[0, 0, 0, 0], 1, 4, false, 1, 1, Con45349), 
LRes51608 = reshape_layer(Con45349, [2, 1, 4, 1], Res51608), 
LZer54477 = zero_padding3D_layer(Res51608, 1, 1, 1, 1, 1, 1, Zer54477), 
LRes43696 = reshape_layer(Zer54477, [4, 3, 6], Res43696), 
LRes62277 = reshape_layer(Res43696, [4, 18], Res62277), 
LLoc54850 = locally_connected1D_layer(Res62277, 1,[[[0.4135, 0.1405, 0.3112], [0.5531, 0.6245, 0.6414], [0.4061, 0.4229, 0.5979], [0.2232, 0.1538, 0.5271], [0.5802, 0.584, 0.3011], [0.7157, 0.0777, 0.0706], [0.6881, 0.7353, 0.4991], [0.7981, 0.9675, 0.1712], [0.5762, 0.897, 0.052], [0.8291, 0.787, 0.2061], [0.2918, 0.7944, 0.8824], [0.2013, 0.028, 0.2761], [0.2754, 0.4654, 0.0884], [0.7404, 0.4875, 0.5401], [0.9959, 0.7705, 0.0706], [0.5732, 0.1483, 0.5531], [0.4205, 0.7786, 0.9908], [0.8792, 0.6812, 0.3581]], [[0.2535, 0.0802, 0.5046], [0.1992, 0.653, 0.3666], [0.7711, 0.3623, 0.0696], [0.6309, 0.5069, 0.0945], [0.102, 0.8896, 0.1371], [0.8672, 0.0742, 0.1924], [0.9051, 0.7271, 0.0233], [0.0029, 0.7572, 0.0672], [0.9341, 0.7725, 0.2421], [0.7812, 0.4998, 0.667], [0.0079, 0.6454, 0.9889], [0.1838, 0.2927, 0.6884], [0.3755, 0.7008, 0.3985], [0.2557, 0.7525, 0.8366], [0.5153, 0.4536, 0.1856], [0.8685, 0.4197, 0.6637], [0.5931, 0.3558, 0.5089], [0.8628, 0.9373, 0.5438]], [[0.3537, 0.5516, 0.9997], [0.09, 0.4511, 0.1988], [0.2788, 0.1423, 0.1445], [0.2413, 0.0983, 0.8277], [0.7374, 0.8463, 0.8392], [0.7631, 0.6754, 0.8376], [0.3252, 0.2871, 0.2958], [0.4136, 0.7757, 0.7314], [0.0507, 0.5481, 0.4195], [0.1969, 0.2989, 0.25], [0.8131, 0.9837, 0.7313], [0.1818, 0.1433, 0.0336], [0.2459, 0.4895, 0.3112], [0.4868, 0.6194, 0.0802], [0.3918, 0.7321, 0.6378], [0.9965, 0.1437, 0.1311], [0.4417, 0.9869, 0.6012], [0.9361, 0.718, 0.8458]], [[0.426, 0.7918, 0.0282], [0.6069, 0.6161, 0.6039], [0.0006, 0.2137, 0.3747], [0.497, 0.3337, 0.8615], [0.4265, 0.0373, 0.5602], [0.8095, 0.8364, 0.8959], [0.3009, 0.0918, 0.4331], [0.6488, 0.3046, 0.2269], [0.2684, 0.4669, 0.9113], [0.7147, 0.1536, 0.0348], [0.7042, 0.8437, 0.2087], [0.1589, 0.0231, 0.0858], [0.527, 0.1693, 0.6993], [0.1483, 0.5191, 0.4057], [0.8423, 0.5726, 0.2292], [0.7867, 0.7599, 0.6233], [0.9372, 0.7053, 0.1254], [0.0925, 0.6574, 0.2687]]],[[0, 0, 0], [0, 0, 0], [0, 0, 0], [0, 0, 0]], 1, Loc54850), 
exec_layers([LCon45349,LRes51608,LZer54477,LRes43696,LRes62277,LLoc54850],["Con45349","Res51608","Zer54477","Res43696","Res62277","Loc54850"],Loc54850,"Loc54850")

Actual (Unparsed): [[[0.0000000, 0.0000000, 0.0000000], [0.2813871, 0.4817085, 0.3625435], [0.4661784, 0.8337833, 0.6523702], [0.0000000, 0.0000000, 0.0000000]]]

Expected (Unparsed): [[[0.0,0.0,0.0],[0.28138715544,0.48170851819999994,0.36254348576800005],[0.46617844603,0.8337833583200001,0.6523702166299999],[0.0,0.0,0.0]]]

Actual:   [[[0, 0, 0], [0.2814, 0.4818, 0.3626], [0.4662, 0.8338, 0.6524], [0, 0, 0]]]

Expected: [[[0, 0, 0], [0.2814, 0.4818, 0.3626], [0.4662, 0.8338, 0.6524], [0, 0, 0]]]