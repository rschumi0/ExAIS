import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Add44838 = tf.keras.layers.Input(shape=([2, 1]))
in1Add44838 = tf.keras.layers.Input(shape=([2, 1]))
in0Con57607 = tf.keras.layers.Input(shape=([2, 2]))
in0Zer16571 = tf.keras.layers.Input(shape=([2, 1]))
in0Mul20201 = tf.keras.layers.Input(shape=([1, 2]))
in1Mul20201 = tf.keras.layers.Input(shape=([1, 2]))
in0Con37448 = tf.keras.layers.Input(shape=([2, 1]))

Add44838 = keras.layers.Add(name = 'Add44838', )([in0Add44838,in1Add44838])
Con57607 = keras.layers.Concatenate(axis=2, name = 'Con57607', )([Add44838,in0Con57607])
Zer16571 = keras.layers.ZeroPadding1D(padding=((1, 1)), name = 'Zer16571', )(in0Zer16571)
Loc67954 = keras.layers.LocallyConnected1D(3, (2),strides=(10), name = 'Loc67954', )(Zer16571)
Zer99376 = keras.layers.ZeroPadding1D(padding=((1, 0)), name = 'Zer99376', )(Loc67954)
Mul54826 = keras.layers.Multiply(name = 'Mul54826', )([Con57607,Zer99376])
Mul20201 = keras.layers.Multiply(name = 'Mul20201', )([in0Mul20201,in1Mul20201])
Zer73183 = keras.layers.ZeroPadding1D(padding=((1, 0)), name = 'Zer73183', )(Mul20201)
Con37448 = keras.layers.Concatenate(axis=2, name = 'Con37448', )([Zer73183,in0Con37448])
Sub62321 = keras.layers.Subtract(name = 'Sub62321', )([Mul54826,Con37448])
model = tf.keras.models.Model(inputs=[in0Add44838,in1Add44838,in0Con57607,in0Zer16571,in0Mul20201,in1Mul20201,in0Con37448], outputs=Sub62321)
w = model.get_layer('Loc67954').get_weights() 
w[0] = np.array([[[0.0097, 0.6882, 0.176], [0.6597, 0.0926, 0.0902]]])
w[1] = np.array([[0, 0, 0]])
model.get_layer('Loc67954').set_weights(w) 
in0Add44838 = tf.constant([[[0.3058], [0.3156]]])
in1Add44838 = tf.constant([[[0.4044], [0.1625]]])
in0Con57607 = tf.constant([[[0.0569, 0.6906], [0.4786, 0.5639]]])
in0Zer16571 = tf.constant([[[1.7071], [1.2424]]])
in0Mul20201 = tf.constant([[[0.7837, 0.6776]]])
in1Mul20201 = tf.constant([[[0.874, 0.993]]])
in0Con37448 = tf.constant([[[0.0536], [0.647]]])
print (np.array2string(model.predict([in0Add44838,in1Add44838,in0Con57607,in0Zer16571,in0Mul20201,in1Mul20201,in0Con37448],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Sub62321.png')

LAdd44838 = add_layer([[[[0.3058], [0.3156]]], [[[0.4044], [0.1625]]]], Add44838), 
LCon57607 = concatenate_layer([Add44838,[[[0.0569, 0.6906], [0.4786, 0.5639]]]], 2, Con57607), 
LZer16571 = zero_padding1D_layer([[[1.7071], [1.2424]]], 1, 1, Zer16571), 
LLoc67954 = locally_connected1D_layer(Zer16571, 2,[[[0.0097, 0.6882, 0.176], [0.6597, 0.0926, 0.0902]]],[[0, 0, 0]], 10, Loc67954), 
LZer99376 = zero_padding1D_layer(Loc67954, 1, 0, Zer99376), 
LMul54826 = multiply_layer([Con57607,Zer99376], Mul54826), 
LMul20201 = multiply_layer([[[[0.7837, 0.6776]]], [[[0.874, 0.993]]]], Mul20201), 
LZer73183 = zero_padding1D_layer(Mul20201, 1, 0, Zer73183), 
LCon37448 = concatenate_layer([Zer73183,[[[0.0536], [0.647]]]], 2, Con37448), 
LSub62321 = subtract_layer(Mul54826,Con37448, Sub62321), 
exec_layers([LAdd44838,LCon57607,LZer16571,LLoc67954,LZer99376,LMul54826,LMul20201,LZer73183,LCon37448,LSub62321],["Add44838","Con57607","Zer16571","Loc67954","Zer99376","Mul54826","Mul20201","Zer73183","Con37448","Sub62321"],Sub62321,"Sub62321")

Actual (Unparsed): [[[0.0000000, 0.0000000, -0.0536000], [-0.1465301, -0.5972009, -0.5601705]]]

Expected (Unparsed): [[[0.0,0.0,-0.0536],[-0.146530072753,-0.5972009276439999,-0.560170441162]]]

Actual:   [[[0, 0, -0.0536], [-0.1465, -0.5972, -0.5601]]]

Expected: [[[0, 0, -0.0536], [-0.1465, -0.5972, -0.5601]]]