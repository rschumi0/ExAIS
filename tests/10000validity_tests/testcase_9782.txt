import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Sub29986 = tf.keras.layers.Input(shape=([2, 3, 2, 3]))
in1Sub29986 = tf.keras.layers.Input(shape=([2, 3, 2, 3]))
in0Max27889 = tf.keras.layers.Input(shape=([2, 1]))
in0Con58492 = tf.keras.layers.Input(shape=([35]))
in0Con71373 = tf.keras.layers.Input(shape=([1, 1]))
in0Ave35658 = tf.keras.layers.Input(shape=([2, 1]))
in1Ave35658 = tf.keras.layers.Input(shape=([2, 1]))
in0Max56957 = tf.keras.layers.Input(shape=([2, 1, 2]))

Sub29986 = keras.layers.Subtract(name = 'Sub29986', )([in0Sub29986,in1Sub29986])
Res37086 = keras.layers.Reshape((2, 3, 6), name = 'Res37086', )(Sub29986)
Res64981 = keras.layers.Reshape((2, 18), name = 'Res64981', )(Res37086)
Fla43296 = keras.layers.Flatten(name = 'Fla43296', )(Res64981)
Max27889 = keras.layers.MaxPool1D(pool_size=(1), strides=(1), padding='valid', name = 'Max27889', )(in0Max27889)
Glo65366 = keras.layers.GlobalMaxPool1D(name = 'Glo65366', )(Max27889)
Con58492 = keras.layers.Concatenate(axis=1, name = 'Con58492', )([Glo65366,in0Con58492])
Ave35769 = keras.layers.Average(name = 'Ave35769', )([Fla43296,Con58492])
Res33845 = keras.layers.Reshape((36, 1), name = 'Res33845', )(Ave35769)
Res88803 = keras.layers.Reshape((36, 1, 1), name = 'Res88803', )(Res33845)
Res37163 = keras.layers.Reshape((36, 1, 1, 1), name = 'Res37163', )(Res88803)
Glo37894 = keras.layers.GlobalMaxPool3D(name = 'Glo37894', )(Res37163)
Res72695 = keras.layers.Reshape((1, 1), name = 'Res72695', )(Glo37894)
Con71373 = keras.layers.Concatenate(axis=2, name = 'Con71373', )([Res72695,in0Con71373])
Ave35658 = keras.layers.Average(name = 'Ave35658', )([in0Ave35658,in1Ave35658])
Max56957 = keras.layers.MaxPool2D(pool_size=(1, 1), name = 'Max56957', )(in0Max56957)
Res69913 = keras.layers.Reshape((2, 2), name = 'Res69913', )(Max56957)
Cro85189 = keras.layers.Cropping1D(cropping=((0, 0)), name = 'Cro85189', )(Res69913)
Dot34032 = keras.layers.Dot(axes=(1, 1), name = 'Dot34032', )([Ave35658,Cro85189])
Ave74848 = keras.layers.Average(name = 'Ave74848', )([Con71373,Dot34032])
model = tf.keras.models.Model(inputs=[in0Sub29986,in1Sub29986,in0Max27889,in0Con58492,in0Con71373,in0Ave35658,in1Ave35658,in0Max56957], outputs=Ave74848)
in0Sub29986 = tf.constant([[[[[0.6234, 0.6891, 0.5255], [0.6594, 0.037, 0.4636]], [[0.3555, 0.2777, 0.3357], [0.0767, 0.6504, 0.6763]], [[0.3842, 0.1499, 0.4115], [0.2921, 0.806, 0.8112]]], [[[0.4465, 0.2545, 0.0634], [0.4907, 0.5145, 0.8435]], [[0.7544, 0.665, 0.1008], [0.4879, 0.2127, 0.6555]], [[0.0249, 0.011, 0.4895], [0.3684, 0.7203, 0.886]]]]])
in1Sub29986 = tf.constant([[[[[0.3209, 0.4246, 0.6864], [0.5854, 0.7398, 0.4782]], [[0.3138, 0.7251, 0.579], [0.6413, 0.0072, 0.5909]], [[0.229, 0.8455, 0.2923], [0.8112, 0.665, 0.6565]]], [[[0.3809, 0.392, 0.9372], [0.5285, 0.4921, 0.0656]], [[0.0299, 0.7359, 0.0761], [0.9225, 0.2403, 0.2512]], [[0.9759, 0.5927, 0.9998], [0.6549, 0.4734, 0.8204]]]]])
in0Max27889 = tf.constant([[[1.3676], [1.752]]])
in0Con58492 = tf.constant([[0.4563, 0.7897, 0.6968, 0.7424, 0.0828, 0.0305, 0.1079, 0.0648, 0.8841, 0.2919, 0.679, 0.5438, 0.0777, 0.0896, 0.4074, 0.553, 0.9539, 0.801, 0.0513, 0.354, 0.2241, 0.2698, 0.8374, 0.7067, 0.8294, 0.9561, 0.9807, 0.0776, 0.2588, 0.8915, 0.2608, 0.9218, 0.8924, 0.5142, 0.6415]])
in0Con71373 = tf.constant([[[0.9051]]])
in0Ave35658 = tf.constant([[[0.1135], [0.1409]]])
in1Ave35658 = tf.constant([[[0.2627], [0.9522]]])
in0Max56957 = tf.constant([[[[1.1794, 1.5038]], [[1.8702, 1.6228]]]])
print (np.array2string(model.predict([in0Sub29986,in1Sub29986,in0Max27889,in0Con58492,in0Con71373,in0Ave35658,in1Ave35658,in0Max56957],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Ave74848.png')

LSub29986 = subtract_layer([[[[[0.6234, 0.6891, 0.5255], [0.6594, 0.037, 0.4636]], [[0.3555, 0.2777, 0.3357], [0.0767, 0.6504, 0.6763]], [[0.3842, 0.1499, 0.4115], [0.2921, 0.806, 0.8112]]], [[[0.4465, 0.2545, 0.0634], [0.4907, 0.5145, 0.8435]], [[0.7544, 0.665, 0.1008], [0.4879, 0.2127, 0.6555]], [[0.0249, 0.011, 0.4895], [0.3684, 0.7203, 0.886]]]]], [[[[[0.3209, 0.4246, 0.6864], [0.5854, 0.7398, 0.4782]], [[0.3138, 0.7251, 0.579], [0.6413, 0.0072, 0.5909]], [[0.229, 0.8455, 0.2923], [0.8112, 0.665, 0.6565]]], [[[0.3809, 0.392, 0.9372], [0.5285, 0.4921, 0.0656]], [[0.0299, 0.7359, 0.0761], [0.9225, 0.2403, 0.2512]], [[0.9759, 0.5927, 0.9998], [0.6549, 0.4734, 0.8204]]]]], Sub29986), 
LRes37086 = reshape_layer(Sub29986, [2, 3, 6], Res37086), 
LRes64981 = reshape_layer(Res37086, [2, 18], Res64981), 
LFla43296 = flatten_layer(Res64981, Fla43296), 
LMax27889 = max_pool1D_layer([[[1.3676], [1.752]]], 1, 1, false, Max27889), 
LGlo65366 = global_max_pool1D_layer(Max27889, Glo65366), 
LCon58492 = concatenate_layer([Glo65366,[[0.4563, 0.7897, 0.6968, 0.7424, 0.0828, 0.0305, 0.1079, 0.0648, 0.8841, 0.2919, 0.679, 0.5438, 0.0777, 0.0896, 0.4074, 0.553, 0.9539, 0.801, 0.0513, 0.354, 0.2241, 0.2698, 0.8374, 0.7067, 0.8294, 0.9561, 0.9807, 0.0776, 0.2588, 0.8915, 0.2608, 0.9218, 0.8924, 0.5142, 0.6415]]], 1, Con58492), 
LAve35769 = average_layer([Fla43296,Con58492], Ave35769), 
LRes33845 = reshape_layer(Ave35769, [36, 1], Res33845), 
LRes88803 = reshape_layer(Res33845, [36, 1, 1], Res88803), 
LRes37163 = reshape_layer(Res88803, [36, 1, 1, 1], Res37163), 
LGlo37894 = global_max_pool3D_layer(Res37163, Glo37894), 
LRes72695 = reshape_layer(Glo37894, [1, 1], Res72695), 
LCon71373 = concatenate_layer([Res72695,[[[0.9051]]]], 2, Con71373), 
LAve35658 = average_layer([[[[0.1135], [0.1409]]], [[[0.2627], [0.9522]]]], Ave35658), 
LMax56957 = max_pool2D_layer([[[[1.1794, 1.5038]], [[1.8702, 1.6228]]]], 1, 1, Max56957), 
LRes69913 = reshape_layer(Max56957, [2, 2], Res69913), 
LCro85189 = cropping1D_layer(Res69913, 0, 0, Cro85189), 
LDot34032 = dot_layer(Ave35658,Cro85189, 1, 1, Dot34032), 
LAve74848 = average_layer([Con71373,Dot34032], Ave74848), 
exec_layers([LSub29986,LRes37086,LRes64981,LFla43296,LMax27889,LGlo65366,LCon58492,LAve35769,LRes33845,LRes88803,LRes37163,LGlo37894,LRes72695,LCon71373,LAve35658,LMax56957,LRes69913,LCro85189,LDot34032,LAve74848],["Sub29986","Res37086","Res64981","Fla43296","Max27889","Glo65366","Con58492","Ave35769","Res33845","Res88803","Res37163","Glo37894","Res72695","Con71373","Ave35658","Max56957","Res69913","Cro85189","Dot34032","Ave74848"],Ave74848,"Ave74848")

Actual (Unparsed): [[[1.1356265, 1.0374531]]]

Expected (Unparsed): [[[1.135626475,1.03745306]]]

Actual:   [[[1.1357, 1.0375]]]

Expected: [[[1.1357, 1.0375]]]