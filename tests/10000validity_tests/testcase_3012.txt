import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Con45016 = tf.keras.layers.Input(shape=([1, 2, 1, 1]))

Con45016 = keras.layers.Conv3DTranspose(4, (1, 2, 1),strides=(12, 1, 1), padding='valid', name = 'Con45016', )(in0Con45016)
Res76710 = keras.layers.Reshape((12, 3, 4), name = 'Res76710', )(Con45016)
Res29862 = keras.layers.Reshape((12, 12), name = 'Res29862', )(Res76710)
Glo62365 = keras.layers.GlobalMaxPool1D(name = 'Glo62365', )(Res29862)
Lea83468 = keras.layers.LeakyReLU(alpha=3.99850944331639, name = 'Lea83468', )(Glo62365)
model = tf.keras.models.Model(inputs=[in0Con45016], outputs=Lea83468)
w = model.get_layer('Con45016').get_weights() 
w[0] = np.array([[[[[0.1325], [0.901], [0.3485], [0.543]]], [[[0.739], [0.4117], [0.7653], [0.0745]]]]])
w[1] = np.array([0, 0, 0, 0])
model.get_layer('Con45016').set_weights(w) 
in0Con45016 = tf.constant([[[[[0.1805]], [[0.153]]]]])
print (np.array2string(model.predict([in0Con45016],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Lea83468.png')

LCon45016 = conv3D_transpose_layer([[[[[0.1805]], [[0.153]]]]], 1, 2, 1,[[[[[0.1325], [0.901], [0.3485], [0.543]]], [[[0.739], [0.4117], [0.7653], [0.0745]]]]],[0, 0, 0, 0], 12, 1, 1, false, Con45016), 
LRes76710 = reshape_layer(Con45016, [12, 3, 4], Res76710), 
LRes29862 = reshape_layer(Res76710, [12, 12], Res29862), 
LGlo62365 = global_max_pool1D_layer(Res29862, Glo62365), 
LLea83468 = leaky_relu_layer(Glo62365, 3.99850944331639, Lea83468), 
exec_layers([LCon45016,LRes76710,LRes29862,LGlo62365,LLea83468],["Con45016","Res76710","Res29862","Glo62365","Lea83468"],Lea83468,"Lea83468")

Actual (Unparsed): [[0.0239163, 0.1626305, 0.0629043, 0.0980115, 0.1536620, 0.2121648, 0.1914571, 0.0965262, 0.1130670, 0.0629901, 0.1170909, 0.0113985]]

Expected (Unparsed): [[0.02391625,0.1626305,0.06290425,0.0980115,0.153662,0.21216485000000002,0.19145715,0.09652625,0.113067,0.06299010000000001,0.1170909,0.011398499999999999]]

Actual:   [[0.024, 0.1627, 0.063, 0.0981, 0.1537, 0.2122, 0.1915, 0.0966, 0.1131, 0.063, 0.1171, 0.0114]]

Expected: [[0.024, 0.1627, 0.063, 0.0981, 0.1537, 0.2122, 0.1915, 0.0966, 0.1131, 0.063, 0.1171, 0.0114]]