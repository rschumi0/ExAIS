import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Con28958 = tf.keras.layers.Input(shape=([2, 1, 1]))
in0Con57937 = tf.keras.layers.Input(shape=([2, 7, 2]))
in0ELU50259 = tf.keras.layers.Input(shape=([1, 2, 1, 1]))
in0Min62546 = tf.keras.layers.Input(shape=([1, 2, 2]))
in1Min62546 = tf.keras.layers.Input(shape=([1, 2, 2]))
in0Add8581 = tf.keras.layers.Input(shape=([1, 2, 1, 1]))
in1Add8581 = tf.keras.layers.Input(shape=([1, 2, 1, 1]))
in0Ave49630 = tf.keras.layers.Input(shape=([1, 2, 2]))
in0Con7550 = tf.keras.layers.Input(shape=([2, 7, 2]))

Con28958 = keras.layers.Conv2DTranspose(2, (1, 1),strides=(1, 1), padding='valid', name = 'Con28958', )(in0Con28958)
Zer9507 = keras.layers.ZeroPadding2D(padding=((0, 0), (6, 0)), name = 'Zer9507', )(Con28958)
Con57937 = keras.layers.Concatenate(axis=3, name = 'Con57937', )([Zer9507,in0Con57937])
ELU50259 = keras.layers.ELU(alpha=-1.273737416320067, name = 'ELU50259', input_shape=(1, 2, 1, 1))(in0ELU50259)
Res83136 = keras.layers.Reshape((1, 2, 1), name = 'Res83136', )(ELU50259)
Res50595 = keras.layers.Reshape((1, 2), name = 'Res50595', )(Res83136)
Sep30732 = keras.layers.SeparableConv1D(4, (1),strides=(1), padding='same', name = 'Sep30732', )(Res50595)
Res6828 = keras.layers.Reshape((1, 4, 1), name = 'Res6828', )(Sep30732)
Con81516 = keras.layers.Conv2DTranspose(4, (1, 1),strides=(1, 1), padding='same', name = 'Con81516', )(Res6828)
Zer3979 = keras.layers.ZeroPadding2D(padding=((1, 0), (3, 0)), name = 'Zer3979', )(Con81516)
Ave98580 = keras.layers.Average(name = 'Ave98580', )([Con57937,Zer3979])
Min62546 = keras.layers.Minimum(name = 'Min62546', )([in0Min62546,in1Min62546])
Res48031 = keras.layers.Reshape((1, 2, 2, 1), name = 'Res48031', )(Min62546)
Add8581 = keras.layers.Add(name = 'Add8581', )([in0Add8581,in1Add8581])
Zer55760 = keras.layers.ZeroPadding3D(padding=((0, 0), (0, 0), (1, 0)), name = 'Zer55760', )(Add8581)
Ave99 = keras.layers.Average(name = 'Ave99', )([Res48031,Zer55760])
Lea20212 = keras.layers.LeakyReLU(alpha=0.6968433021727183, name = 'Lea20212', )(Ave99)
Res46406 = keras.layers.Reshape((1, 2, 2), name = 'Res46406', )(Lea20212)
Ave49630 = keras.layers.AveragePooling2D(pool_size=(1, 1), strides=(12, 7), padding='valid', name = 'Ave49630', )(in0Ave49630)
Zer47871 = keras.layers.ZeroPadding2D(padding=((0, 0), (1, 0)), name = 'Zer47871', )(Ave49630)
Min47777 = keras.layers.Minimum(name = 'Min47777', )([Res46406,Zer47871])
ELU37250 = keras.layers.ELU(alpha=9.425929268107065, name = 'ELU37250', )(Min47777)
Zer83367 = keras.layers.ZeroPadding2D(padding=((1, 0), (5, 0)), name = 'Zer83367', )(ELU37250)
Con7550 = keras.layers.Concatenate(axis=3, name = 'Con7550', )([Zer83367,in0Con7550])
Add8650 = keras.layers.Add(name = 'Add8650', )([Ave98580,Con7550])
model = tf.keras.models.Model(inputs=[in0Con28958,in0Con57937,in0ELU50259,in0Min62546,in1Min62546,in0Add8581,in1Add8581,in0Ave49630,in0Con7550], outputs=Add8650)
w = model.get_layer('Con28958').get_weights() 
w[0] = np.array([[[[0.9744], [0.0202]]]])
w[1] = np.array([0, 0])
model.get_layer('Con28958').set_weights(w) 
w = model.get_layer('Sep30732').get_weights() 
w[0] = np.array([[[0.8736], [0.1677]]])
w[1] = np.array([[[0.1722, 0.7976, 0.387, 0.2804], [0.5277, 0.9049, 0.7403, 0.5406]]])
w[2] = np.array([0, 0, 0, 0])
model.get_layer('Sep30732').set_weights(w) 
w = model.get_layer('Con81516').get_weights() 
w[0] = np.array([[[[0.8869], [0.2748], [0.7389], [0.2483]]]])
w[1] = np.array([0, 0, 0, 0])
model.get_layer('Con81516').set_weights(w) 
in0Con28958 = tf.constant([[[[0.2639]], [[0.3764]]]])
in0Con57937 = tf.constant([[[[0.3918, 0.0338], [0.7551, 0.9413], [0.7076, 0.6047], [0.3476, 0.991], [0.1516, 0.9573], [0.3814, 0.0049], [0.2859, 0.1613]], [[0.4239, 0.9221], [0.7402, 0.295], [0.3596, 0.0957], [0.6744, 0.2665], [0.4793, 0.2368], [0.2029, 0.2532], [0.7552, 0.348]]]])
in0ELU50259 = tf.constant([[[[[0.9436]], [[0.7328]]]]])
in0Min62546 = tf.constant([[[[0.3224, 0.8303], [0.009, 0.0375]]]])
in1Min62546 = tf.constant([[[[0.497, 0.6426], [0.7085, 0.5289]]]])
in0Add8581 = tf.constant([[[[[0.6126]], [[0.9369]]]]])
in1Add8581 = tf.constant([[[[[0.8867]], [[0.3081]]]]])
in0Ave49630 = tf.constant([[[[1.6753, 1.6257], [1.0347, 1.1981]]]])
in0Con7550 = tf.constant([[[[0.7597, 0.6015], [0.3287, 0.6094], [0.0635, 0.3897], [0.5974, 0.2648], [0.0738, 0.9094], [0.0395, 0.2399], [0.7739, 0.8439]], [[0.9547, 0.4773], [0.4886, 0.5306], [0.8463, 0.0733], [0.1433, 0.8186], [0.8768, 0.4861], [0.8735, 0.9342], [0.9078, 0.6122]]]])
print (np.array2string(model.predict([in0Con28958,in0Con57937,in0ELU50259,in0Min62546,in1Min62546,in0Add8581,in1Add8581,in0Ave49630,in0Con7550],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Add8650.png')

LCon28958 = conv2D_transpose_layer([[[[0.2639]], [[0.3764]]]], 1, 1,[[[[0.9744], [0.0202]]]],[0, 0], 1, 1, false, Con28958), 
LZer9507 = zero_padding2D_layer(Con28958, 0, 0, 6, 0, Zer9507), 
LCon57937 = concatenate_layer([Zer9507,[[[[0.3918, 0.0338], [0.7551, 0.9413], [0.7076, 0.6047], [0.3476, 0.991], [0.1516, 0.9573], [0.3814, 0.0049], [0.2859, 0.1613]], [[0.4239, 0.9221], [0.7402, 0.295], [0.3596, 0.0957], [0.6744, 0.2665], [0.4793, 0.2368], [0.2029, 0.2532], [0.7552, 0.348]]]]], 3, Con57937), 
LELU50259 = elu_layer([[[[[0.9436]], [[0.7328]]]]], -1.273737416320067, ELU50259), 
LRes83136 = reshape_layer(ELU50259, [1, 2, 1], Res83136), 
LRes50595 = reshape_layer(Res83136, [1, 2], Res50595), 
LSep30732 = separable_conv1D_layer(Res50595, 1,[[[[0.8736], [0.1677]]],[[[0.1722, 0.7976, 0.387, 0.2804], [0.5277, 0.9049, 0.7403, 0.5406]]]],[0, 0, 0, 0], 1, true, Sep30732), 
LRes6828 = reshape_layer(Sep30732, [1, 4, 1], Res6828), 
LCon81516 = conv2D_transpose_layer(Res6828, 1, 1,[[[[0.8869], [0.2748], [0.7389], [0.2483]]]],[0, 0, 0, 0], 1, 1, true, Con81516), 
LZer3979 = zero_padding2D_layer(Con81516, 1, 0, 3, 0, Zer3979), 
LAve98580 = average_layer([Con57937,Zer3979], Ave98580), 
LMin62546 = minimum_layer([[[[[0.3224, 0.8303], [0.009, 0.0375]]]], [[[[0.497, 0.6426], [0.7085, 0.5289]]]]], Min62546), 
LRes48031 = reshape_layer(Min62546, [1, 2, 2, 1], Res48031), 
LAdd8581 = add_layer([[[[[[0.6126]], [[0.9369]]]]], [[[[[0.8867]], [[0.3081]]]]]], Add8581), 
LZer55760 = zero_padding3D_layer(Add8581, 0, 0, 0, 0, 1, 0, Zer55760), 
LAve99 = average_layer([Res48031,Zer55760], Ave99), 
LLea20212 = leaky_relu_layer(Ave99, 0.6968433021727183, Lea20212), 
LRes46406 = reshape_layer(Lea20212, [1, 2, 2], Res46406), 
LAve49630 = average_pooling2D_layer([[[[1.6753, 1.6257], [1.0347, 1.1981]]]], 1, 1, 12, 7, false, Ave49630), 
LZer47871 = zero_padding2D_layer(Ave49630, 0, 0, 1, 0, Zer47871), 
LMin47777 = minimum_layer([Res46406,Zer47871], Min47777), 
LELU37250 = elu_layer(Min47777, 9.425929268107065, ELU37250), 
LZer83367 = zero_padding2D_layer(ELU37250, 1, 0, 5, 0, Zer83367), 
LCon7550 = concatenate_layer([Zer83367,[[[[0.7597, 0.6015], [0.3287, 0.6094], [0.0635, 0.3897], [0.5974, 0.2648], [0.0738, 0.9094], [0.0395, 0.2399], [0.7739, 0.8439]], [[0.9547, 0.4773], [0.4886, 0.5306], [0.8463, 0.0733], [0.1433, 0.8186], [0.8768, 0.4861], [0.8735, 0.9342], [0.9078, 0.6122]]]]], 3, Con7550), 
LAdd8650 = add_layer([Ave98580,Con7550], Add8650), 
exec_layers([LCon28958,LZer9507,LCon57937,LELU50259,LRes83136,LRes50595,LSep30732,LRes6828,LCon81516,LZer3979,LAve98580,LMin62546,LRes48031,LAdd8581,LZer55760,LAve99,LLea20212,LRes46406,LAve49630,LZer47871,LMin47777,LELU37250,LZer83367,LCon7550,LAdd8650],["Con28958","Zer9507","Con57937","ELU50259","Res83136","Res50595","Sep30732","Res6828","Con81516","Zer3979","Ave98580","Min62546","Res48031","Add8581","Zer55760","Ave99","Lea20212","Res46406","Ave49630","Zer47871","Min47777","ELU37250","Zer83367","Con7550","Add8650"],Add8650,"Add8650")

Actual (Unparsed): [[[[0.0000000, 0.0000000, 0.9556000, 0.6184000], [0.0000000, 0.0000000, 0.7062500, 1.0800500], [0.0000000, 0.0000000, 0.4173000, 0.6920500], [0.0000000, 0.0000000, 0.7712000, 0.7603000], [0.0000000, 0.0000000, 0.1496000, 1.3880500], [0.0000000, 0.0000000, 0.2302000, 0.2423500], [0.1285721, 0.0026654, 0.9168500, 0.9245500]], [[0.0000000, 0.0000000, 1.1666500, 0.9383500], [0.0000000, 0.0000000, 0.8587000, 0.6781000], [0.0000000, 0.0000000, 1.0261000, 0.1211500], [0.0917049, 0.0284142, 0.5569018, 0.9775241], [0.3408749, 0.1056178, 1.4004419, 0.6999327], [0.1818106, 0.0563328, 1.1264212, 1.1117004], [0.3198424, 0.6859387, 1.3953397, 0.8231441]]]]

Expected (Unparsed): [[[[0,0,0.9556,0.6184000000000001],[0,0,0.70625,1.08005],[0,0,0.4173,0.69205],[0,0,0.7712000000000001,0.7603],[0,0,0.1496,1.38805],[0,0,0.23020000000000002,0.24235],[0.12857208,0.00266539,0.91685,0.92455]],[[0,0,1.16665,0.93835],[0,0,0.8587,0.6780999999999999],[0,0,1.0261,0.12115000000000001],[0.09170492583077279,0.028414154491257598,0.5569018149693968,0.9775240704518896],[0.340874891485128,0.105617792513376,1.400441946463368,0.699932670600696],[0.18181059280107362,0.0563327893806912,1.1264212448085615,1.111700406125275],[0.319842368778864,0.685938647956288,1.395339629471984,0.823144119634448]]]]

Actual:   [[[[0, 0, 0.9556, 0.6184], [0, 0, 0.7063, 1.0801], [0, 0, 0.4173, 0.6921], [0, 0, 0.7712, 0.7603], [0, 0, 0.1496, 1.3881], [0, 0, 0.2302, 0.2424], [0.1286, 0.0027, 0.9169, 0.9246]], [[0, 0, 1.1667, 0.9384], [0, 0, 0.8587, 0.6781], [0, 0, 1.0261, 0.1212], [0.0918, 0.0285, 0.557, 0.9776], [0.3409, 0.1057, 1.4005, 0.7], [0.1819, 0.0564, 1.1265, 1.1118], [0.3199, 0.686, 1.3954, 0.8232]]]]

Expected: [[[[0, 0, 0.9556, 0.6185], [0, 0, 0.7063, 1.0801], [0, 0, 0.4173, 0.6921], [0, 0, 0.7713, 0.7603], [0, 0, 0.1496, 1.3881], [0, 0, 0.2303, 0.2424], [0.1286, 0.0027, 0.9169, 0.9246]], [[0, 0, 1.1667, 0.9384], [0, 0, 0.8587, 0.6781], [0, 0, 1.0261, 0.1212], [0.0918, 0.0285, 0.557, 0.9776], [0.3409, 0.1057, 1.4005, 0.7], [0.1819, 0.0564, 1.1265, 1.1118], [0.3199, 0.686, 1.3954, 0.8232]]]]