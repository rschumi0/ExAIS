import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Mul22667 = tf.keras.layers.Input(shape=([2, 2]))
in1Mul22667 = tf.keras.layers.Input(shape=([2, 2]))
in0Con2270 = tf.keras.layers.Input(shape=([2, 2, 1, 3]))
in0Sep63271 = tf.keras.layers.Input(shape=([2, 2, 1]))
in0Add37922 = tf.keras.layers.Input(shape=([1, 1]))
in1Add37922 = tf.keras.layers.Input(shape=([1, 1]))
in0Con74117 = tf.keras.layers.Input(shape=([1, 1]))

Mul22667 = keras.layers.Multiply(name = 'Mul22667', )([in0Mul22667,in1Mul22667])
Res45857 = keras.layers.Reshape((2, 2, 1), name = 'Res45857', )(Mul22667)
Res27989 = keras.layers.Reshape((2, 2, 1, 1), name = 'Res27989', )(Res45857)
Con2270 = keras.layers.Concatenate(axis=4, name = 'Con2270', )([Res27989,in0Con2270])
Sep63271 = keras.layers.SeparableConv2D(2, (1, 1),strides=(2, 2), padding='same', name = 'Sep63271', )(in0Sep63271)
Res80775 = keras.layers.Reshape((1, 2), name = 'Res80775', )(Sep63271)
Add37922 = keras.layers.Add(name = 'Add37922', )([in0Add37922,in1Add37922])
Con74117 = keras.layers.Concatenate(axis=2, name = 'Con74117', )([Add37922,in0Con74117])
Sub49233 = keras.layers.Subtract(name = 'Sub49233', )([Res80775,Con74117])
Res74133 = keras.layers.Reshape((1, 2, 1), name = 'Res74133', )(Sub49233)
Res36462 = keras.layers.Reshape((1, 2, 1, 1), name = 'Res36462', )(Res74133)
Con38566 = keras.layers.Conv3D(4, (1, 1, 1),strides=(1, 1, 1), padding='valid', dilation_rate=(1, 1, 1), name = 'Con38566', )(Res36462)
Zer15238 = keras.layers.ZeroPadding3D(padding=((1, 0), (0, 0), (0, 0)), name = 'Zer15238', )(Con38566)
Max17797 = keras.layers.Maximum(name = 'Max17797', )([Con2270,Zer15238])
model = tf.keras.models.Model(inputs=[in0Mul22667,in1Mul22667,in0Con2270,in0Sep63271,in0Add37922,in1Add37922,in0Con74117], outputs=Max17797)
w = model.get_layer('Sep63271').get_weights() 
w[0] = np.array([[[[0.9578]]]])
w[1] = np.array([[[[0.8318, 0.3664]]]])
w[2] = np.array([0, 0])
model.get_layer('Sep63271').set_weights(w) 
w = model.get_layer('Con38566').get_weights() 
w[0] = np.array([[[[[0.9685, 0.5987, 0.8202, 0.3421]]]]])
w[1] = np.array([0, 0, 0, 0])
model.get_layer('Con38566').set_weights(w) 
in0Mul22667 = tf.constant([[[0.1911, 0.0296], [0.1328, 0.1127]]])
in1Mul22667 = tf.constant([[[0.5595, 0.7916], [0.233, 0.3498]]])
in0Con2270 = tf.constant([[[[[0.7704, 0.3421, 0.1022]], [[0.0365, 0.046, 0.4574]]], [[[0.5562, 0.3563, 0.4241]], [[0.5222, 0.4246, 0.7187]]]]])
in0Sep63271 = tf.constant([[[[0.9451], [0.0907]], [[0.6467], [0.166]]]])
in0Add37922 = tf.constant([[[0.4982]]])
in1Add37922 = tf.constant([[[0.0095]]])
in0Con74117 = tf.constant([[[0.791]]])
print (np.array2string(model.predict([in0Mul22667,in1Mul22667,in0Con2270,in0Sep63271,in0Add37922,in1Add37922,in0Con74117],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Max17797.png')

LMul22667 = multiply_layer([[[[0.1911, 0.0296], [0.1328, 0.1127]]], [[[0.5595, 0.7916], [0.233, 0.3498]]]], Mul22667), 
LRes45857 = reshape_layer(Mul22667, [2, 2, 1], Res45857), 
LRes27989 = reshape_layer(Res45857, [2, 2, 1, 1], Res27989), 
LCon2270 = concatenate_layer([Res27989,[[[[[0.7704, 0.3421, 0.1022]], [[0.0365, 0.046, 0.4574]]], [[[0.5562, 0.3563, 0.4241]], [[0.5222, 0.4246, 0.7187]]]]]], 4, Con2270), 
LSep63271 = separable_conv2D_layer([[[[0.9451], [0.0907]], [[0.6467], [0.166]]]], 1, 1,[[[[[0.9578]]]],[[[[0.8318, 0.3664]]]]],[0, 0], 2, 2, true, Sep63271), 
LRes80775 = reshape_layer(Sep63271, [1, 2], Res80775), 
LAdd37922 = add_layer([[[[0.4982]]], [[[0.0095]]]], Add37922), 
LCon74117 = concatenate_layer([Add37922,[[[0.791]]]], 2, Con74117), 
LSub49233 = subtract_layer(Res80775,Con74117, Sub49233), 
LRes74133 = reshape_layer(Sub49233, [1, 2, 1], Res74133), 
LRes36462 = reshape_layer(Res74133, [1, 2, 1, 1], Res36462), 
LCon38566 = conv3D_layer(Res36462, 1, 1, 1,[[[[[0.9685, 0.5987, 0.8202, 0.3421]]]]],[0, 0, 0, 0], 1, 1, 1, false, 1, 1, 1, Con38566), 
LZer15238 = zero_padding3D_layer(Con38566, 1, 0, 0, 0, 0, 0, Zer15238), 
LMax17797 = maximum_layer([Con2270,Zer15238], Max17797), 
exec_layers([LMul22667,LRes45857,LRes27989,LCon2270,LSep63271,LRes80775,LAdd37922,LCon74117,LSub49233,LRes74133,LRes36462,LCon38566,LZer15238,LMax17797],["Mul22667","Res45857","Res27989","Con2270","Sep63271","Res80775","Add37922","Con74117","Sub49233","Res74133","Res36462","Con38566","Zer15238","Max17797"],Max17797,"Max17797")

Actual (Unparsed): [[[[[0.1069204, 0.7704000, 0.3421000, 0.1022000]], [[0.0234314, 0.0365000, 0.0460000, 0.4574000]]], [[[0.2375337, 0.5562000, 0.3563000, 0.4241000]], [[0.0394225, 0.5222000, 0.4246000, 0.7187000]]]]]

Expected (Unparsed): [[[[[0.10692045,0.7704,0.3421,0.1022]],[[0.023431360000000002,0.0365,0.046,0.4574]]],[[[0.2375336490994741,0.5562,0.3563,0.4241]],[[0.03942246,0.5222,0.4246,0.7187]]]]]

Actual:   [[[[[0.107, 0.7704, 0.3421, 0.1022]], [[0.0235, 0.0365, 0.046, 0.4574]]], [[[0.2376, 0.5562, 0.3563, 0.4241]], [[0.0395, 0.5222, 0.4246, 0.7187]]]]]

Expected: [[[[[0.107, 0.7704, 0.3421, 0.1022]], [[0.0235, 0.0365, 0.046, 0.4574]]], [[[0.2376, 0.5562, 0.3563, 0.4241]], [[0.0395, 0.5222, 0.4246, 0.7187]]]]]