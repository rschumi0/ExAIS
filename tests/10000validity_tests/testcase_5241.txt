import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Mas11921 = tf.keras.layers.Input(shape=([4, 1, 2]))

Mas11921 = keras.layers.Masking(mask_value=1, name = 'Mas11921', )(in0Mas11921)
Res99217 = keras.layers.Reshape((4, 2), name = 'Res99217', )(Mas11921)
Con35495 = keras.layers.Conv1D(4, (3),strides=(1), padding='same', dilation_rate=(1), name = 'Con35495', )(Res99217)
model = tf.keras.models.Model(inputs=[in0Mas11921], outputs=Con35495)
w = model.get_layer('Con35495').get_weights() 
w[0] = np.array([[[0.5786, 0.0876, 0.5532, 0.0393], [0.7882, 0.4784, 0.3166, 0.3336]], [[0.6185, 0.7124, 0.4011, 0.1635], [0.6456, 0.8891, 0.1891, 0.9878]], [[0.3653, 0.8504, 0.4585, 0.9282], [0.1024, 0.4821, 0.9003, 0.4134]]])
w[1] = np.array([0, 0, 0, 0])
model.get_layer('Con35495').set_weights(w) 
in0Mas11921 = tf.constant([[[[1.0363, 1.045]], [[1.5177, 1.9286]], [[1.1105, 1.309]], [[1.7662, 1.3891]]]])
print (np.array2string(model.predict([in0Mas11921],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Con35495.png')

LMas11921 = masking_layer([[[[1.0363, 1.045]], [[1.5177, 1.9286]], [[1.1105, 1.309]], [[1.7662, 1.3891]]]], 1, Mas11921), 
LRes99217 = reshape_layer(Mas11921, [4, 2], Res99217), 
LCon35495 = conv1D_layer(Res99217, 3,[[[0.5786, 0.0876, 0.5532, 0.0393], [0.7882, 0.4784, 0.3166, 0.3336]], [[0.6185, 0.7124, 0.4011, 0.1635], [0.6456, 0.8891, 0.1891, 0.9878]], [[0.3653, 0.8504, 0.4585, 0.9282], [0.1024, 0.4821, 0.9003, 0.4134]]],[0, 0, 0, 0], 1, true, 1, Con35495), 
exec_layers([LMas11921,LRes99217,LCon35495],["Mas11921","Res99217","Con35495"],Con35495,"Con35495")

Actual (Unparsed): [[[2.0675079, 3.8877996, 3.0454534, 3.4076983], [4.1467809, 4.9620736, 3.5652328, 4.1144602], [4.7176350, 5.1822064, 4.2035492, 4.3912642], [3.6634867, 3.2167950, 1.9998596, 2.1412517]]]

Expected (Unparsed): [[[2.067508,3.88779976,3.04545346,3.4076984300000004],[4.1467810400000005,4.96207372,3.56523284,4.11446032],[4.71763509,5.18220645,4.20354928,4.3912643],[3.66348676,3.2167950899999997,1.9998596299999998,2.14125173]]]

Actual:   [[[2.0676, 3.8878, 3.0455, 3.4077], [4.1468, 4.9621, 3.5653, 4.1145], [4.7177, 5.1823, 4.2036, 4.3913], [3.6635, 3.2168, 1.9999, 2.1413]]]

Expected: [[[2.0676, 3.8878, 3.0455, 3.4077], [4.1468, 4.9621, 3.5653, 4.1145], [4.7177, 5.1823, 4.2036, 4.3913], [3.6635, 3.2168, 1.9999, 2.1413]]]