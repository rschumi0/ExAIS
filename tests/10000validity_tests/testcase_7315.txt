import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Bat66682 = tf.keras.layers.Input(shape=([3, 2]))
in0ELU789 = tf.keras.layers.Input(shape=([1, 2, 1]))
in0Con61792 = tf.keras.layers.Input(shape=([2, 3, 3]))

Bat66682 = keras.layers.BatchNormalization(axis=1, epsilon=0.3182587061908739,  name = 'Bat66682', )(in0Bat66682)
Res13607 = keras.layers.Reshape((3, 2, 1), name = 'Res13607', )(Bat66682)
Sep14935 = keras.layers.SeparableConv2D(4, (1, 1),strides=(2, 2), padding='valid', name = 'Sep14935', )(Res13607)
Zer65053 = keras.layers.ZeroPadding2D(padding=((0, 0), (2, 0)), name = 'Zer65053', )(Sep14935)
ELU789 = keras.layers.ELU(alpha=-7.283996919451365, name = 'ELU789', input_shape=(1, 2, 1))(in0ELU789)
Zer14596 = keras.layers.ZeroPadding2D(padding=((1, 0), (1, 0)), name = 'Zer14596', )(ELU789)
Con61792 = keras.layers.Concatenate(axis=3, name = 'Con61792', )([Zer14596,in0Con61792])
Add75068 = keras.layers.Add(name = 'Add75068', )([Zer65053,Con61792])
Zer40598 = keras.layers.ZeroPadding2D(padding=((1, 1), (1, 1)), name = 'Zer40598', )(Add75068)
model = tf.keras.models.Model(inputs=[in0Bat66682,in0ELU789,in0Con61792], outputs=Zer40598)
w = model.get_layer('Bat66682').get_weights() 
w[0] = np.array([0.2373, 0.6165, 0.5959])
w[1] = np.array([0.7735, 0.4002, 0.8547])
w[2] = np.array([0.7011, 0.7317, 0.0274])
w[3] = np.array([0.7973, 0.0179, 0.9245])
model.get_layer('Bat66682').set_weights(w) 
w = model.get_layer('Sep14935').get_weights() 
w[0] = np.array([[[[0.7542]]]])
w[1] = np.array([[[[0.0385, 0.0463, 0.5754, 0.7151]]]])
w[2] = np.array([0, 0, 0, 0])
model.get_layer('Sep14935').set_weights(w) 
in0Bat66682 = tf.constant([[[1.9021, 1.7004], [1.8559, 1.5451], [1.0316, 1.2903]]])
in0ELU789 = tf.constant([[[[0.6195], [0.9801]]]])
in0Con61792 = tf.constant([[[[0.1738, 0.9706, 0.8246], [0.259, 0.9414, 0.5939], [0.7218, 0.9443, 0.4596]], [[0.385, 0.2594, 0.2665], [0.3414, 0.7372, 0.8948], [0.7708, 0.7037, 0.0532]]]])
print (np.array2string(model.predict([in0Bat66682,in0ELU789,in0Con61792],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Zer40598.png')

LBat66682 = batch_normalization_layer([[[1.9021, 1.7004], [1.8559, 1.5451], [1.0316, 1.2903]]], 1, 0.3182587061908739, [0.2373, 0.6165, 0.5959], [0.7735, 0.4002, 0.8547], [0.7011, 0.7317, 0.0274], [0.7973, 0.0179, 0.9245], Bat66682), 
LRes13607 = reshape_layer(Bat66682, [3, 2, 1], Res13607), 
LSep14935 = separable_conv2D_layer(Res13607, 1, 1,[[[[[0.7542]]]],[[[[0.0385, 0.0463, 0.5754, 0.7151]]]]],[0, 0, 0, 0], 2, 2, false, Sep14935), 
LZer65053 = zero_padding2D_layer(Sep14935, 0, 0, 2, 0, Zer65053), 
LELU789 = elu_layer([[[[0.6195], [0.9801]]]], -7.283996919451365, ELU789), 
LZer14596 = zero_padding2D_layer(ELU789, 1, 0, 1, 0, Zer14596), 
LCon61792 = concatenate_layer([Zer14596,[[[[0.1738, 0.9706, 0.8246], [0.259, 0.9414, 0.5939], [0.7218, 0.9443, 0.4596]], [[0.385, 0.2594, 0.2665], [0.3414, 0.7372, 0.8948], [0.7708, 0.7037, 0.0532]]]]], 3, Con61792), 
LAdd75068 = add_layer([Zer65053,Con61792], Add75068), 
LZer40598 = zero_padding2D_layer(Add75068, 1, 1, 1, 1, Zer40598), 
exec_layers([LBat66682,LRes13607,LSep14935,LZer65053,LELU789,LZer14596,LCon61792,LAdd75068,LZer40598],["Bat66682","Res13607","Sep14935","Zer65053","ELU789","Zer14596","Con61792","Add75068","Zer40598"],Zer40598,"Zer40598")

Actual (Unparsed): [[[[0.0000000, 0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000, 0.0000000]], [[0.0000000, 0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.1738000, 0.9706000, 0.8246000], [0.0000000, 0.2590000, 0.9414000, 0.5939000], [0.0302949, 0.7582326, 1.3970716, 1.0222990], [0.0000000, 0.0000000, 0.0000000, 0.0000000]], [[0.0000000, 0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.3850000, 0.2594000, 0.2665000], [0.6195000, 0.3414000, 0.7372000, 0.8948000], [1.0205041, 0.8193899, 1.3075580, 0.8036673], [0.0000000, 0.0000000, 0.0000000, 0.0000000]], [[0.0000000, 0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000, 0.0000000]]]]

Expected (Unparsed): [[[[0,0,0,0],[0,0,0,0],[0,0,0,0],[0,0,0,0],[0,0,0,0]],[[0,0,0,0],[0,0.1738,0.9706,0.8246],[0,0.259,0.9414,0.5939],[0.030294937737434306,0.7582326134348886,1.3970716149122,1.0222989604166044],[0,0,0,0]],[[0,0,0,0],[0,0.385,0.2594,0.2665],[0.6195,0.3414,0.7372,0.8948],[1.0205041261822425,0.8193898972009825,1.3075580313055148,0.8036672891667949],[0,0,0,0]],[[0,0,0,0],[0,0,0,0],[0,0,0,0],[0,0,0,0],[0,0,0,0]]]]

Actual:   [[[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]], [[0, 0, 0, 0], [0, 0.1738, 0.9706, 0.8246], [0, 0.259, 0.9414, 0.5939], [0.0303, 0.7583, 1.3971, 1.0223], [0, 0, 0, 0]], [[0, 0, 0, 0], [0, 0.385, 0.2594, 0.2665], [0.6195, 0.3414, 0.7372, 0.8948], [1.0206, 0.8194, 1.3076, 0.8037], [0, 0, 0, 0]], [[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]]]

Expected: [[[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]], [[0, 0, 0, 0], [0, 0.1738, 0.9706, 0.8246], [0, 0.259, 0.9414, 0.5939], [0.0303, 0.7583, 1.3971, 1.0223], [0, 0, 0, 0]], [[0, 0, 0, 0], [0, 0.385, 0.2594, 0.2665], [0.6195, 0.3414, 0.7372, 0.8948], [1.0206, 0.8194, 1.3076, 0.8037], [0, 0, 0, 0]], [[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]]]