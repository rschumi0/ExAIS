import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Sub29991 = tf.keras.layers.Input(shape=([2]))
in1Sub29991 = tf.keras.layers.Input(shape=([2]))
in0Add70874 = tf.keras.layers.Input(shape=([2, 2]))
in1Add70874 = tf.keras.layers.Input(shape=([2, 2]))
in0Con44929 = tf.keras.layers.Input(shape=([4, 2]))
in0Up_64987 = tf.keras.layers.Input(shape=([4, 2, 1, 1]))
in0Sub24215 = tf.keras.layers.Input(shape=([2, 2, 2]))
in1Sub24215 = tf.keras.layers.Input(shape=([2, 2, 2]))
in0Con25888 = tf.keras.layers.Input(shape=([4, 4, 1]))

Sub29991 = keras.layers.Subtract(name = 'Sub29991', )([in0Sub29991,in1Sub29991])
Res96042 = keras.layers.Reshape((2, 1), name = 'Res96042', )(Sub29991)
Res11663 = keras.layers.Reshape((2, 1, 1), name = 'Res11663', )(Res96042)
Res8365 = keras.layers.Reshape((2, 1, 1, 1), name = 'Res8365', )(Res11663)
Up_72494 = keras.layers.UpSampling3D(size=(2, 2, 2), name = 'Up_72494', )(Res8365)
Res70747 = keras.layers.Reshape((4, 2, 2), name = 'Res70747', )(Up_72494)
Res14802 = keras.layers.Reshape((4, 4), name = 'Res14802', )(Res70747)
Add70874 = keras.layers.Add(name = 'Add70874', )([in0Add70874,in1Add70874])
Zer16457 = keras.layers.ZeroPadding1D(padding=((2, 0)), name = 'Zer16457', )(Add70874)
Con44929 = keras.layers.Concatenate(axis=2, name = 'Con44929', )([Zer16457,in0Con44929])
Ave82324 = keras.layers.Average(name = 'Ave82324', )([Res14802,Con44929])
Bat31368 = keras.layers.BatchNormalization(axis=2, epsilon=0.659972751872068,  name = 'Bat31368', )(Ave82324)
Res50781 = keras.layers.Reshape((4, 4, 1), name = 'Res50781', )(Bat31368)
Res73622 = keras.layers.Reshape((4, 4, 1, 1), name = 'Res73622', )(Res50781)
Zer11672 = keras.layers.ZeroPadding3D(padding=((0, 0), (0, 0), (2, 0)), name = 'Zer11672', )(Res73622)
Up_64987 = keras.layers.UpSampling3D(size=(1, 1, 2), name = 'Up_64987', )(in0Up_64987)
Zer13880 = keras.layers.ZeroPadding3D(padding=((0, 0), (2, 0), (1, 0)), name = 'Zer13880', )(Up_64987)
Ave405 = keras.layers.Average(name = 'Ave405', )([Zer11672,Zer13880])
Res15074 = keras.layers.Reshape((4, 4, 3), name = 'Res15074', )(Ave405)
Sub24215 = keras.layers.Subtract(name = 'Sub24215', )([in0Sub24215,in1Sub24215])
Zer74980 = keras.layers.ZeroPadding2D(padding=((2, 0), (2, 0)), name = 'Zer74980', )(Sub24215)
Con25888 = keras.layers.Concatenate(axis=3, name = 'Con25888', )([Zer74980,in0Con25888])
Add57095 = keras.layers.Add(name = 'Add57095', )([Res15074,Con25888])
model = tf.keras.models.Model(inputs=[in0Sub29991,in1Sub29991,in0Add70874,in1Add70874,in0Con44929,in0Up_64987,in0Sub24215,in1Sub24215,in0Con25888], outputs=Add57095)
w = model.get_layer('Bat31368').get_weights() 
w[0] = np.array([0.7117, 0.4813, 0.4651, 0.4142])
w[1] = np.array([0.9335, 0.4809, 0.3751, 0.2651])
w[2] = np.array([0.7142, 0.6731, 0.5352, 0.9882])
w[3] = np.array([0.0232, 0.5565, 0.2166, 0.3065])
model.get_layer('Bat31368').set_weights(w) 
in0Sub29991 = tf.constant([[0.5955, 0.8856]])
in1Sub29991 = tf.constant([[0.7729, 0.023]])
in0Add70874 = tf.constant([[[0.7313, 0.3386], [0.643, 0.6138]]])
in1Add70874 = tf.constant([[[0.7976, 0.5632], [0.8317, 0.6909]]])
in0Con44929 = tf.constant([[[0.8481, 0.1817], [0.8551, 0.5294], [0.9719, 0.4762], [0.3311, 0.2257]]])
in0Up_64987 = tf.constant([[[[[1.9781]], [[1.4618]]], [[[1.2132]], [[1.6688]]], [[[1.3507]], [[1.8538]]], [[[1.0513]], [[1.1219]]]]])
in0Sub24215 = tf.constant([[[[0.635, 0.5484], [0.5257, 0.8413]], [[0.148, 0.883], [0.4322, 0.007]]]])
in1Sub24215 = tf.constant([[[[0.5906, 0.2758], [0.0653, 0.9327]], [[0.1305, 0.5395], [0.4044, 0.9245]]]])
in0Con25888 = tf.constant([[[[0.909], [0.7161], [0.2429], [0.7644]], [[0.3101], [0.0821], [0.6673], [0.9473]], [[0.6117], [0.1924], [0.147], [0.0814]], [[0.3259], [0.7565], [0.4432], [0.8713]]]])
print (np.array2string(model.predict([in0Sub29991,in1Sub29991,in0Add70874,in1Add70874,in0Con44929,in0Up_64987,in0Sub24215,in1Sub24215,in0Con25888],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Add57095.png')

LSub29991 = subtract_layer([[0.5955, 0.8856]], [[0.7729, 0.023]], Sub29991), 
LRes96042 = reshape_layer(Sub29991, [2, 1], Res96042), 
LRes11663 = reshape_layer(Res96042, [2, 1, 1], Res11663), 
LRes8365 = reshape_layer(Res11663, [2, 1, 1, 1], Res8365), 
LUp_72494 = up_sampling3D_layer(Res8365, 2, 2, 2, Up_72494), 
LRes70747 = reshape_layer(Up_72494, [4, 2, 2], Res70747), 
LRes14802 = reshape_layer(Res70747, [4, 4], Res14802), 
LAdd70874 = add_layer([[[[0.7313, 0.3386], [0.643, 0.6138]]], [[[0.7976, 0.5632], [0.8317, 0.6909]]]], Add70874), 
LZer16457 = zero_padding1D_layer(Add70874, 2, 0, Zer16457), 
LCon44929 = concatenate_layer([Zer16457,[[[0.8481, 0.1817], [0.8551, 0.5294], [0.9719, 0.4762], [0.3311, 0.2257]]]], 2, Con44929), 
LAve82324 = average_layer([Res14802,Con44929], Ave82324), 
LBat31368 = batch_normalization_layer(Ave82324, 2, 0.659972751872068, [0.7117, 0.4813, 0.4651, 0.4142], [0.9335, 0.4809, 0.3751, 0.2651], [0.7142, 0.6731, 0.5352, 0.9882], [0.0232, 0.5565, 0.2166, 0.3065], Bat31368), 
LRes50781 = reshape_layer(Bat31368, [4, 4, 1], Res50781), 
LRes73622 = reshape_layer(Res50781, [4, 4, 1, 1], Res73622), 
LZer11672 = zero_padding3D_layer(Res73622, 0, 0, 0, 0, 2, 0, Zer11672), 
LUp_64987 = up_sampling3D_layer([[[[[1.9781]], [[1.4618]]], [[[1.2132]], [[1.6688]]], [[[1.3507]], [[1.8538]]], [[[1.0513]], [[1.1219]]]]], 1, 1, 2, Up_64987), 
LZer13880 = zero_padding3D_layer(Up_64987, 0, 0, 2, 0, 1, 0, Zer13880), 
LAve405 = average_layer([Zer11672,Zer13880], Ave405), 
LRes15074 = reshape_layer(Ave405, [4, 4, 3], Res15074), 
LSub24215 = subtract_layer([[[[0.635, 0.5484], [0.5257, 0.8413]], [[0.148, 0.883], [0.4322, 0.007]]]], [[[[0.5906, 0.2758], [0.0653, 0.9327]], [[0.1305, 0.5395], [0.4044, 0.9245]]]], Sub24215), 
LZer74980 = zero_padding2D_layer(Sub24215, 2, 0, 2, 0, Zer74980), 
LCon25888 = concatenate_layer([Zer74980,[[[[0.909], [0.7161], [0.2429], [0.7644]], [[0.3101], [0.0821], [0.6673], [0.9473]], [[0.6117], [0.1924], [0.147], [0.0814]], [[0.3259], [0.7565], [0.4432], [0.8713]]]]], 3, Con25888), 
LAdd57095 = add_layer([Res15074,Con25888], Add57095), 
exec_layers([LSub29991,LRes96042,LRes11663,LRes8365,LUp_72494,LRes70747,LRes14802,LAdd70874,LZer16457,LCon44929,LAve82324,LBat31368,LRes50781,LRes73622,LZer11672,LUp_64987,LZer13880,LAve405,LRes15074,LSub24215,LZer74980,LCon25888,LAdd57095],["Sub29991","Res96042","Res11663","Res8365","Up_72494","Res70747","Res14802","Add70874","Zer16457","Con44929","Ave82324","Bat31368","Res50781","Res73622","Zer11672","Up_64987","Zer13880","Ave405","Res15074","Sub24215","Zer74980","Con25888","Add57095"],Add57095,"Add57095")

Actual (Unparsed): [[[[0.0000000, 0.0000000, 1.0300788], [0.0000000, 0.0000000, 0.7903329], [0.0000000, 0.9890500, 1.3698606], [0.0000000, 0.7309000, 1.4201272]], [[0.0000000, 0.0000000, 0.4311788], [0.0000000, 0.0000000, 0.1563329], [0.0000000, 0.6066000, 1.4126799], [0.0000000, 0.8344000, 1.7431507]], [[0.0000000, 0.0000000, 1.2857709], [0.0000000, 0.0000000, 0.4784735], [0.0444000, 0.9479500, 1.1047948], [0.4604000, 0.8355001, 1.0736911]], [[0.0000000, 0.0000000, 0.9883036], [0.0000000, 0.0000000, 1.0865279], [0.0175000, 0.8691500, 1.1717128], [0.0278000, -0.3565500, 1.4712557]]]]

Expected (Unparsed): [[[[0,0,1.0300788297548762],[0,0,0.7903329226893345],[0,0.98905,1.3698606011770456],[0,0.7309,1.4201271707606715]],[[0,0,0.43117882975487615],[0,0,0.1563329226893346],[0,0.6066,1.4126799426625614],[0,0.8344,1.7431506826142869]],[[0,0,1.2857709017705061],[0,0,0.47847351124397497],[0.044399999999999995,0.9479500000000001,1.1047948327260932],[0.4603999999999999,0.8355,1.0736910953181908]],[[0,0,0.9883035849021007],[0,0,1.0865278696375604],[0.017499999999999988,0.86915,1.1717128293091574],[0.02779999999999999,-0.35655000000000003,1.471255735182066]]]]

Actual:   [[[[0, 0, 1.0301], [0, 0, 0.7904], [0, 0.9891, 1.3699], [0, 0.7309, 1.4202]], [[0, 0, 0.4312], [0, 0, 0.1564], [0, 0.6066, 1.4127], [0, 0.8344, 1.7432]], [[0, 0, 1.2858], [0, 0, 0.4785], [0.0444, 0.948, 1.1048], [0.4604, 0.8356, 1.0737]], [[0, 0, 0.9884], [0, 0, 1.0866], [0.0175, 0.8692, 1.1718], [0.0278, -0.3565, 1.4713]]]]

Expected: [[[[0, 0, 1.0301], [0, 0, 0.7904], [0, 0.9891, 1.3699], [0, 0.7309, 1.4202]], [[0, 0, 0.4312], [0, 0, 0.1564], [0, 0.6066, 1.4127], [0, 0.8344, 1.7432]], [[0, 0, 1.2858], [0, 0, 0.4785], [0.0444, 0.948, 1.1048], [0.4604, 0.8355, 1.0737]], [[0, 0, 0.9884], [0, 0, 1.0866], [0.0175, 0.8692, 1.1718], [0.0278, -0.3565, 1.4713]]]]