import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Per23809 = tf.keras.layers.Input(shape=([4, 1]))
in0Zer823 = tf.keras.layers.Input(shape=([1, 1, 1]))

Per23809 = keras.layers.Permute((2,1), name = 'Per23809',)(in0Per23809)
Res18898 = keras.layers.Reshape((1, 4, 1), name = 'Res18898', )(Per23809)
Max45118 = keras.layers.MaxPool2D(pool_size=(1, 4), strides=(1, 3), padding='valid', name = 'Max45118', )(Res18898)
Zer5694 = keras.layers.ZeroPadding2D(padding=((2, 0), (2, 0)), name = 'Zer5694', )(Max45118)
Zer823 = keras.layers.ZeroPadding2D(padding=((1, 1), (1, 1)), name = 'Zer823', )(in0Zer823)
Min19146 = keras.layers.Minimum(name = 'Min19146', )([Zer5694,Zer823])
Res81930 = keras.layers.Reshape((3, 3, 1, 1), name = 'Res81930', )(Min19146)
Con76629 = keras.layers.Conv3DTranspose(2, (2, 2, 1),strides=(1, 2, 6), padding='same', name = 'Con76629', )(Res81930)
model = tf.keras.models.Model(inputs=[in0Per23809,in0Zer823], outputs=Con76629)
w = model.get_layer('Con76629').get_weights() 
w[0] = np.array([[[[[0.7658], [0.7188]]], [[[0.1349], [0.482]]]], [[[[0.2996], [0.7124]]], [[[0.1747], [0.2879]]]]])
w[1] = np.array([0, 0])
model.get_layer('Con76629').set_weights(w) 
in0Per23809 = tf.constant([[[1.6964], [1.4859], [1.294], [1.8517]]])
in0Zer823 = tf.constant([[[[1.5408]]]])
print (np.array2string(model.predict([in0Per23809,in0Zer823],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Con76629.png')

LPer23809 = permute_layer([[[1.6964], [1.4859], [1.294], [1.8517]]], 2,1, Per23809), 
LRes18898 = reshape_layer(Per23809, [1, 4, 1], Res18898), 
LMax45118 = max_pool2D_layer(Res18898, 1, 4, 1, 3, false, Max45118), 
LZer5694 = zero_padding2D_layer(Max45118, 2, 0, 2, 0, Zer5694), 
LZer823 = zero_padding2D_layer([[[[1.5408]]]], 1, 1, 1, 1, Zer823), 
LMin19146 = minimum_layer([Zer5694,Zer823], Min19146), 
LRes81930 = reshape_layer(Min19146, [3, 3, 1, 1], Res81930), 
LCon76629 = conv3D_transpose_layer(Res81930, 2, 2, 1,[[[[[0.7658], [0.7188]]], [[[0.1349], [0.482]]]], [[[[0.2996], [0.7124]]], [[[0.1747], [0.2879]]]]],[0, 0], 1, 2, 6, true, Con76629), 
exec_layers([LPer23809,LRes18898,LMax45118,LZer5694,LZer823,LMin19146,LRes81930,LCon76629],["Per23809","Res18898","Max45118","Zer5694","Zer823","Min19146","Res81930","Con76629"],Con76629,"Con76629")

Actual (Unparsed): [[[[[0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000]], [[0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000]], [[0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000]], [[0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000]], [[0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000]], [[0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000]]], [[[0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000]], [[0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000]], [[0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000]], [[0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000]], [[0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000]], [[0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000]]], [[[0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000]], [[0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000]], [[0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000]], [[0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000]], [[0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000]], [[0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000]]]]]

Expected (Unparsed): [[[[[0.0,0.0],[0,0],[0,0],[0,0],[0,0],[0,0]],[[0.0,0.0],[0,0],[0,0],[0,0],[0,0],[0,0]],[[0.0,0.0],[0,0],[0,0],[0,0],[0,0],[0,0]],[[0.0,0.0],[0,0],[0,0],[0,0],[0,0],[0,0]],[[0.0,0.0],[0,0],[0,0],[0,0],[0,0],[0,0]],[[0.0,0.0],[0,0],[0,0],[0,0],[0,0],[0,0]]],[[[0.0,0.0],[0,0],[0,0],[0,0],[0,0],[0,0]],[[0.0,0.0],[0,0],[0,0],[0,0],[0,0],[0,0]],[[0.0,0.0],[0,0],[0,0],[0,0],[0,0],[0,0]],[[0.0,0.0],[0,0],[0,0],[0,0],[0,0],[0,0]],[[0.0,0.0],[0,0],[0,0],[0,0],[0,0],[0,0]],[[0.0,0.0],[0,0],[0,0],[0,0],[0,0],[0,0]]],[[[0.0,0.0],[0,0],[0,0],[0,0],[0,0],[0,0]],[[0.0,0.0],[0,0],[0,0],[0,0],[0,0],[0,0]],[[0.0,0.0],[0,0],[0,0],[0,0],[0,0],[0,0]],[[0.0,0.0],[0,0],[0,0],[0,0],[0,0],[0,0]],[[0.0,0.0],[0,0],[0,0],[0,0],[0,0],[0,0]],[[0.0,0.0],[0,0],[0,0],[0,0],[0,0],[0,0]]]]]

Actual:   [[[[[0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0]], [[0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0]], [[0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0]], [[0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0]], [[0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0]], [[0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0]]], [[[0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0]], [[0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0]], [[0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0]], [[0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0]], [[0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0]], [[0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0]]], [[[0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0]], [[0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0]], [[0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0]], [[0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0]], [[0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0]], [[0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0]]]]]

Expected: [[[[[0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0]], [[0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0]], [[0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0]], [[0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0]], [[0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0]], [[0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0]]], [[[0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0]], [[0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0]], [[0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0]], [[0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0]], [[0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0]], [[0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0]]], [[[0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0]], [[0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0]], [[0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0]], [[0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0]], [[0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0]], [[0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0]]]]]