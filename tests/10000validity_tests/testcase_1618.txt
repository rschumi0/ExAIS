import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Mul96806 = tf.keras.layers.Input(shape=([1, 1, 1, 2]))
in1Mul96806 = tf.keras.layers.Input(shape=([1, 1, 1, 2]))

Mul96806 = keras.layers.Multiply(name = 'Mul96806', )([in0Mul96806,in1Mul96806])
Thr23587 = keras.layers.ThresholdedReLU(theta=1.4079647782519582, name = 'Thr23587', )(Mul96806)
model = tf.keras.models.Model(inputs=[in0Mul96806,in1Mul96806], outputs=Thr23587)
in0Mul96806 = tf.constant([[[[[0.67, 0.1577]]]]])
in1Mul96806 = tf.constant([[[[[0.3259, 0.3589]]]]])
print (np.array2string(model.predict([in0Mul96806,in1Mul96806],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Thr23587.png')

LMul96806 = multiply_layer([[[[[[0.67, 0.1577]]]]], [[[[[0.3259, 0.3589]]]]]], Mul96806), 
LThr23587 = thresholded_relu_layer(Mul96806, 1.4079647782519582, Thr23587), 
exec_layers([LMul96806,LThr23587],["Mul96806","Thr23587"],Thr23587,"Thr23587")

Actual (Unparsed): [[[[[0.0000000, 0.0000000]]]]]

Expected (Unparsed): [[[[[0,0]]]]]

Actual:   [[[[[0, 0]]]]]

Expected: [[[[[0, 0]]]]]