import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Dot91738 = tf.keras.layers.Input(shape=([2, 3]))
in1Dot91738 = tf.keras.layers.Input(shape=([2, 3]))
in0Max50510 = tf.keras.layers.Input(shape=([2, 2]))
in1Max50510 = tf.keras.layers.Input(shape=([2, 2]))
in0Ave14295 = tf.keras.layers.Input(shape=([1, 2, 1]))
in0Con5384 = tf.keras.layers.Input(shape=([3]))

Dot91738 = keras.layers.Dot(axes=(2, 2), name = 'Dot91738', )([in0Dot91738,in1Dot91738])
Fla87277 = keras.layers.Flatten(name = 'Fla87277', )(Dot91738)
Max50510 = keras.layers.Maximum(name = 'Max50510', )([in0Max50510,in1Max50510])
Fla30024 = keras.layers.Flatten(name = 'Fla30024', )(Max50510)
Lea72714 = keras.layers.LeakyReLU(alpha=2.618622829480944, name = 'Lea72714', )(Fla30024)
Min10403 = keras.layers.Minimum(name = 'Min10403', )([Fla87277,Lea72714])
Ave14295 = keras.layers.AveragePooling2D(pool_size=(1, 1), name = 'Ave14295', )(in0Ave14295)
Glo51392 = keras.layers.GlobalAveragePooling2D(name = 'Glo51392', )(Ave14295)
Thr92409 = keras.layers.ThresholdedReLU(theta=6.8852372566346025, name = 'Thr92409', )(Glo51392)
Con5384 = keras.layers.Concatenate(axis=1, name = 'Con5384', )([Thr92409,in0Con5384])
Mul69545 = keras.layers.Multiply(name = 'Mul69545', )([Min10403,Con5384])
model = tf.keras.models.Model(inputs=[in0Dot91738,in1Dot91738,in0Max50510,in1Max50510,in0Ave14295,in0Con5384], outputs=Mul69545)
in0Dot91738 = tf.constant([[[0.7387, 0.7773, 0.8618], [0.5207, 0.1509, 0.0235]]])
in1Dot91738 = tf.constant([[[0.6379, 0.8406, 0.7669], [0.1279, 0.4038, 0.3089]]])
in0Max50510 = tf.constant([[[0.2686, 0.316], [0.1739, 0.8384]]])
in1Max50510 = tf.constant([[[0.8226, 0.3581], [0.8227, 0.7412]]])
in0Ave14295 = tf.constant([[[[1.2732], [1.0731]]]])
in0Con5384 = tf.constant([[0.6564, 0.8085, 0.584]])
print (np.array2string(model.predict([in0Dot91738,in1Dot91738,in0Max50510,in1Max50510,in0Ave14295,in0Con5384],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Mul69545.png')

LDot91738 = dot_layer([[[0.7387, 0.7773, 0.8618], [0.5207, 0.1509, 0.0235]]], [[[0.6379, 0.8406, 0.7669], [0.1279, 0.4038, 0.3089]]], 2, 2, Dot91738), 
LFla87277 = flatten_layer(Dot91738, Fla87277), 
LMax50510 = maximum_layer([[[[0.2686, 0.316], [0.1739, 0.8384]]], [[[0.8226, 0.3581], [0.8227, 0.7412]]]], Max50510), 
LFla30024 = flatten_layer(Max50510, Fla30024), 
LLea72714 = leaky_relu_layer(Fla30024, 2.618622829480944, Lea72714), 
LMin10403 = minimum_layer([Fla87277,Lea72714], Min10403), 
LAve14295 = average_pooling2D_layer([[[[1.2732], [1.0731]]]], 1, 1, Ave14295), 
LGlo51392 = global_average_pooling2D_layer(Ave14295, Glo51392), 
LThr92409 = thresholded_relu_layer(Glo51392, 6.8852372566346025, Thr92409), 
LCon5384 = concatenate_layer([Thr92409,[[0.6564, 0.8085, 0.584]]], 1, Con5384), 
LMul69545 = multiply_layer([Min10403,Con5384], Mul69545), 
exec_layers([LDot91738,LFla87277,LMax50510,LFla30024,LLea72714,LMin10403,LAve14295,LGlo51392,LThr92409,LCon5384,LMul69545],["Dot91738","Fla87277","Max50510","Fla30024","Lea72714","Min10403","Ave14295","Glo51392","Thr92409","Con5384","Mul69545"],Mul69545,"Mul69545")

Actual (Unparsed): [[0.0000000, 0.2350568, 0.3856733, 0.0787174]]

Expected (Unparsed): [[0.0,0.23505684,0.38567327337000007,0.0787174184]]

Actual:   [[0, 0.2351, 0.3857, 0.0788]]

Expected: [[0, 0.2351, 0.3857, 0.0788]]