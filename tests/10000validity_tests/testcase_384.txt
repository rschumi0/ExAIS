import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Dot57571 = tf.keras.layers.Input(shape=([3, 2]))
in1Dot57571 = tf.keras.layers.Input(shape=([3, 2]))
in0Con50652 = tf.keras.layers.Input(shape=([2, 2, 2, 1]))
in0Mul14183 = tf.keras.layers.Input(shape=([2, 2, 2, 2]))
in1Mul14183 = tf.keras.layers.Input(shape=([2, 2, 2, 2]))

Dot57571 = keras.layers.Dot(axes=(1, 1), name = 'Dot57571', )([in0Dot57571,in1Dot57571])
Res66638 = keras.layers.Reshape((2, 2, 1), name = 'Res66638', )(Dot57571)
PRe62278 = keras.layers.PReLU(name = 'PRe62278', )(Res66638)
Res53434 = keras.layers.Reshape((2, 2, 1, 1), name = 'Res53434', )(PRe62278)
Zer87152 = keras.layers.ZeroPadding3D(padding=((0, 0), (0, 0), (1, 0)), name = 'Zer87152', )(Res53434)
Con50652 = keras.layers.Concatenate(axis=4, name = 'Con50652', )([Zer87152,in0Con50652])
Mul14183 = keras.layers.Multiply(name = 'Mul14183', )([in0Mul14183,in1Mul14183])
Mul53504 = keras.layers.Multiply(name = 'Mul53504', )([Con50652,Mul14183])
Res93485 = keras.layers.Reshape((2, 2, 4), name = 'Res93485', )(Mul53504)
Res6040 = keras.layers.Reshape((2, 8), name = 'Res6040', )(Res93485)
Sim6159 = keras.layers.SimpleRNN(2,name = 'Sim6159', )(Res6040)
model = tf.keras.models.Model(inputs=[in0Dot57571,in1Dot57571,in0Con50652,in0Mul14183,in1Mul14183], outputs=Sim6159)
w = model.get_layer('PRe62278').get_weights() 
w[0] = np.array([[[0.2989], [0.4797]], [[0.735], [0.8691]]])
model.get_layer('PRe62278').set_weights(w) 
w = model.get_layer('Sim6159').get_weights() 
w[0] = np.array([[6, 3], [4, 8], [3, 4], [9, 6], [8, 4], [3, 5], [4, 8], [7, 6]])
w[1] = np.array([[1, 5], [2, 7]])
w[2] = np.array([2, 1])
model.get_layer('Sim6159').set_weights(w) 
in0Dot57571 = tf.constant([[[0.3721, 0.5985], [0.8854, 0.549], [0.2505, 0.8401]]])
in1Dot57571 = tf.constant([[[0.1286, 0.7283], [0.586, 0.404], [0.2281, 0.9159]]])
in0Con50652 = tf.constant([[[[[0.455], [0.6804]], [[0.4679], [0.0741]]], [[[0.53], [0.6122]], [[0.3252], [0.9437]]]]])
in0Mul14183 = tf.constant([[[[[0.8672, 0.0655], [0.5573, 0.9216]], [[0.6602, 0.8673], [0.6589, 0.7054]]], [[[0.0606, 0.01], [0.5357, 0.2001]], [[0.5527, 0.4654], [0.0785, 0.8027]]]]])
in1Mul14183 = tf.constant([[[[[0.3283, 0.7879], [0.2472, 0.9619]], [[0.0609, 0.6376], [0.3222, 0.7202]]], [[[0.8462, 0.6005], [0.5296, 0.0308]], [[0.5254, 0.9947], [0.6108, 0.1634]]]]])
print (np.array2string(model.predict([in0Dot57571,in1Dot57571,in0Con50652,in0Mul14183,in1Mul14183],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Sim6159.png')

LDot57571 = dot_layer([[[0.3721, 0.5985], [0.8854, 0.549], [0.2505, 0.8401]]], [[[0.1286, 0.7283], [0.586, 0.404], [0.2281, 0.9159]]], 1, 1, Dot57571), 
LRes66638 = reshape_layer(Dot57571, [2, 2, 1], Res66638), 
LPRe62278 = prelu_layer(Res66638, [[[0.2989], [0.4797]], [[0.735], [0.8691]]], PRe62278), 
LRes53434 = reshape_layer(PRe62278, [2, 2, 1, 1], Res53434), 
LZer87152 = zero_padding3D_layer(Res53434, 0, 0, 0, 0, 1, 0, Zer87152), 
LCon50652 = concatenate_layer([Zer87152,[[[[[0.455], [0.6804]], [[0.4679], [0.0741]]], [[[0.53], [0.6122]], [[0.3252], [0.9437]]]]]], 4, Con50652), 
LMul14183 = multiply_layer([[[[[[0.8672, 0.0655], [0.5573, 0.9216]], [[0.6602, 0.8673], [0.6589, 0.7054]]], [[[0.0606, 0.01], [0.5357, 0.2001]], [[0.5527, 0.4654], [0.0785, 0.8027]]]]], [[[[[0.3283, 0.7879], [0.2472, 0.9619]], [[0.0609, 0.6376], [0.3222, 0.7202]]], [[[0.8462, 0.6005], [0.5296, 0.0308]], [[0.5254, 0.9947], [0.6108, 0.1634]]]]]], Mul14183), 
LMul53504 = multiply_layer([Con50652,Mul14183], Mul53504), 
LRes93485 = reshape_layer(Mul53504, [2, 2, 4], Res93485), 
LRes6040 = reshape_layer(Res93485, [2, 8], Res6040), 
LSim6159 = simple_rnn_layer(Res6040,[[6, 3], [4, 8], [3, 4], [9, 6], [8, 4], [3, 5], [4, 8], [7, 6]],[[1, 5], [2, 7]],[2, 1], Sim6159), 
exec_layers([LDot57571,LRes66638,LPRe62278,LRes53434,LZer87152,LCon50652,LMul14183,LMul53504,LRes93485,LRes6040,LSim6159],["Dot57571","Res66638","PRe62278","Res53434","Zer87152","Con50652","Mul14183","Mul53504","Res93485","Res6040","Sim6159"],Sim6159,"Sim6159")

Actual (Unparsed): [[0.9999987, 1.0000000]]

Expected (Unparsed): [[0.9999987453423453,0.9999999999999591]]

Actual:   [[1, 1]]

Expected: [[1, 1]]