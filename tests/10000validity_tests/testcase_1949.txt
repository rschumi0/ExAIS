import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Add75 = tf.keras.layers.Input(shape=([2, 1, 1, 2]))
in1Add75 = tf.keras.layers.Input(shape=([2, 1, 1, 2]))
in0Min75521 = tf.keras.layers.Input(shape=([2, 2, 1]))
in1Min75521 = tf.keras.layers.Input(shape=([2, 2, 1]))
in0Con58333 = tf.keras.layers.Input(shape=([2, 2, 2]))
in0Lay5378 = tf.keras.layers.Input(shape=([2, 4]))
in0Con20147 = tf.keras.layers.Input(shape=([2, 2]))
in0Up_10523 = tf.keras.layers.Input(shape=([2, 1, 4, 1]))
in0Min26257 = tf.keras.layers.Input(shape=([1, 2, 1]))
in1Min26257 = tf.keras.layers.Input(shape=([1, 2, 1]))
in0Ave68636 = tf.keras.layers.Input(shape=([1, 1, 1]))
in1Ave68636 = tf.keras.layers.Input(shape=([1, 1, 1]))

Add75 = keras.layers.Add(name = 'Add75', )([in0Add75,in1Add75])
Res96111 = keras.layers.Reshape((2, 1, 2), name = 'Res96111', )(Add75)
Con8344 = keras.layers.Conv2DTranspose(3, (1, 1),strides=(1, 1), padding='same', name = 'Con8344', )(Res96111)
Zer93182 = keras.layers.ZeroPadding2D(padding=((0, 0), (1, 0)), name = 'Zer93182', )(Con8344)
Min75521 = keras.layers.Minimum(name = 'Min75521', )([in0Min75521,in1Min75521])
Con58333 = keras.layers.Concatenate(axis=3, name = 'Con58333', )([Min75521,in0Con58333])
Max21710 = keras.layers.Maximum(name = 'Max21710', )([Zer93182,Con58333])
Res29816 = keras.layers.Reshape((2, 6), name = 'Res29816', )(Max21710)
Lay5378 = keras.layers.LayerNormalization(axis=2, epsilon=1.3594928023933586, name = 'Lay5378', )(in0Lay5378)
Con20147 = keras.layers.Concatenate(axis=2, name = 'Con20147', )([Lay5378,in0Con20147])
Ave3988 = keras.layers.Average(name = 'Ave3988', )([Res29816,Con20147])
Up_10523 = keras.layers.UpSampling3D(size=(1, 2, 1), name = 'Up_10523', )(in0Up_10523)
ReL79739 = keras.layers.ReLU(max_value=2.6591108140726254, negative_slope=1.006423299112356, threshold=6.15987216864876, name = 'ReL79739', )(Up_10523)
Res82175 = keras.layers.Reshape((2, 2, 4), name = 'Res82175', )(ReL79739)
Res91644 = keras.layers.Reshape((2, 8), name = 'Res91644', )(Res82175)
Dot22320 = keras.layers.Dot(axes=(1, 1), name = 'Dot22320', )([Ave3988,Res91644])
Res93541 = keras.layers.Reshape((6, 8, 1), name = 'Res93541', )(Dot22320)
Min26257 = keras.layers.Minimum(name = 'Min26257', )([in0Min26257,in1Min26257])
Ave68636 = keras.layers.Average(name = 'Ave68636', )([in0Ave68636,in1Ave68636])
Zer48666 = keras.layers.ZeroPadding2D(padding=((0, 0), (1, 0)), name = 'Zer48666', )(Ave68636)
Sub40339 = keras.layers.Subtract(name = 'Sub40339', )([Min26257,Zer48666])
Bat35195 = keras.layers.BatchNormalization(axis=2, epsilon=0.613802986895665,  name = 'Bat35195', )(Sub40339)
Zer63450 = keras.layers.ZeroPadding2D(padding=((5, 0), (6, 0)), name = 'Zer63450', )(Bat35195)
Min7551 = keras.layers.Minimum(name = 'Min7551', )([Res93541,Zer63450])
model = tf.keras.models.Model(inputs=[in0Add75,in1Add75,in0Min75521,in1Min75521,in0Con58333,in0Lay5378,in0Con20147,in0Up_10523,in0Min26257,in1Min26257,in0Ave68636,in1Ave68636], outputs=Min7551)
w = model.get_layer('Con8344').get_weights() 
w[0] = np.array([[[[0.7974, 0.1023], [0.5893, 0.1551], [0.6499, 0.8452]]]])
w[1] = np.array([0, 0, 0])
model.get_layer('Con8344').set_weights(w) 
w = model.get_layer('Bat35195').get_weights() 
w[0] = np.array([0.0644, 0.0701])
w[1] = np.array([0.4754, 0.1902])
w[2] = np.array([0.2413, 0.6501])
w[3] = np.array([0.1185, 0.5978])
model.get_layer('Bat35195').set_weights(w) 
in0Add75 = tf.constant([[[[[0.2965, 0.2766]]], [[[0.0445, 0.576]]]]])
in1Add75 = tf.constant([[[[[0.9028, 0.3494]]], [[[0.8218, 0.9374]]]]])
in0Min75521 = tf.constant([[[[0.6385], [0.2039]], [[0.0997], [0.142]]]])
in1Min75521 = tf.constant([[[[0.1925], [0.6117]], [[0.8211], [0.1682]]]])
in0Con58333 = tf.constant([[[[0.435, 0.8492], [0.3018, 0.5013]], [[0.4817, 0.4406], [0.8544, 0.8833]]]])
in0Lay5378 = tf.constant([[[1.8884, 1.4631, 1.3102, 1.3087], [1.3759, 1.0845, 1.3351, 1.9882]]])
in0Con20147 = tf.constant([[[0.138, 0.3284], [0.9761, 0.5093]]])
in0Up_10523 = tf.constant([[[[[1.761], [1.4977], [1.4435], [1.9686]]], [[[1.5755], [1.2596], [1.2943], [1.7203]]]]])
in0Min26257 = tf.constant([[[[0.1668], [0.4024]]]])
in1Min26257 = tf.constant([[[[0.5913], [0.4478]]]])
in0Ave68636 = tf.constant([[[[0.9302]]]])
in1Ave68636 = tf.constant([[[[0.7814]]]])
print (np.array2string(model.predict([in0Add75,in1Add75,in0Min75521,in1Min75521,in0Con58333,in0Lay5378,in0Con20147,in0Up_10523,in0Min26257,in1Min26257,in0Ave68636,in1Ave68636],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Min7551.png')

LAdd75 = add_layer([[[[[[0.2965, 0.2766]]], [[[0.0445, 0.576]]]]], [[[[[0.9028, 0.3494]]], [[[0.8218, 0.9374]]]]]], Add75), 
LRes96111 = reshape_layer(Add75, [2, 1, 2], Res96111), 
LCon8344 = conv2D_transpose_layer(Res96111, 1, 1,[[[[0.7974, 0.1023], [0.5893, 0.1551], [0.6499, 0.8452]]]],[0, 0, 0], 1, 1, true, Con8344), 
LZer93182 = zero_padding2D_layer(Con8344, 0, 0, 1, 0, Zer93182), 
LMin75521 = minimum_layer([[[[[0.6385], [0.2039]], [[0.0997], [0.142]]]], [[[[0.1925], [0.6117]], [[0.8211], [0.1682]]]]], Min75521), 
LCon58333 = concatenate_layer([Min75521,[[[[0.435, 0.8492], [0.3018, 0.5013]], [[0.4817, 0.4406], [0.8544, 0.8833]]]]], 3, Con58333), 
LMax21710 = maximum_layer([Zer93182,Con58333], Max21710), 
LRes29816 = reshape_layer(Max21710, [2, 6], Res29816), 
LLay5378 = layer_normalization_layer([[[1.8884, 1.4631, 1.3102, 1.3087], [1.3759, 1.0845, 1.3351, 1.9882]]], 2, 1.3594928023933586, Lay5378), 
LCon20147 = concatenate_layer([Lay5378,[[[0.138, 0.3284], [0.9761, 0.5093]]]], 2, Con20147), 
LAve3988 = average_layer([Res29816,Con20147], Ave3988), 
LUp_10523 = up_sampling3D_layer([[[[[1.761], [1.4977], [1.4435], [1.9686]]], [[[1.5755], [1.2596], [1.2943], [1.7203]]]]], 1, 2, 1, Up_10523), 
LReL79739 = relu_layer(Up_10523, 2.6591108140726254, 1.006423299112356, 6.15987216864876, ReL79739), 
LRes82175 = reshape_layer(ReL79739, [2, 2, 4], Res82175), 
LRes91644 = reshape_layer(Res82175, [2, 8], Res91644), 
LDot22320 = dot_layer(Ave3988,Res91644, 1, 1, Dot22320), 
LRes93541 = reshape_layer(Dot22320, [6, 8, 1], Res93541), 
LMin26257 = minimum_layer([[[[[0.1668], [0.4024]]]], [[[[0.5913], [0.4478]]]]], Min26257), 
LAve68636 = average_layer([[[[[0.9302]]]], [[[[0.7814]]]]], Ave68636), 
LZer48666 = zero_padding2D_layer(Ave68636, 0, 0, 1, 0, Zer48666), 
LSub40339 = subtract_layer(Min26257,Zer48666, Sub40339), 
LBat35195 = batch_normalization_layer(Sub40339, 2, 0.613802986895665, [0.0644, 0.0701], [0.4754, 0.1902], [0.2413, 0.6501], [0.1185, 0.5978], Bat35195), 
LZer63450 = zero_padding2D_layer(Bat35195, 5, 0, 6, 0, Zer63450), 
LMin7551 = minimum_layer([Res93541,Zer63450], Min7551), 
exec_layers([LAdd75,LRes96111,LCon8344,LZer93182,LMin75521,LCon58333,LMax21710,LRes29816,LLay5378,LCon20147,LAve3988,LUp_10523,LReL79739,LRes82175,LRes91644,LDot22320,LRes93541,LMin26257,LAve68636,LZer48666,LSub40339,LBat35195,LZer63450,LMin7551],["Add75","Res96111","Con8344","Zer93182","Min75521","Con58333","Max21710","Res29816","Lay5378","Con20147","Ave3988","Up_10523","ReL79739","Res82175","Res91644","Dot22320","Res93541","Min26257","Ave68636","Zer48666","Sub40339","Bat35195","Zer63450","Min7551"],Min7551,"Min7551")

Actual (Unparsed): [[[[-1.2592314], [-1.3354801], [-1.3490709], [-1.2013136], [-1.2592314], [-1.3354801], [-1.3490709], [-1.2013136]], [[-1.3315608], [-1.4150969], [-1.4230790], [-1.2753301], [-1.3315608], [-1.4150969], [-1.4230790], [-1.2753301]], [[-2.3459692], [-2.4936818], [-2.5065644], [-2.2478271], [-2.3459692], [-2.4936818], [-2.5065644], [-2.2478271]], [[-4.8990473], [-5.2192832], [-5.2203216], [-4.7143947], [-4.8990473], [-5.2192832], [-5.2203216], [-4.7143947]], [[-6.3076209], [-6.7233952], [-6.7171199], [-6.0758505], [-6.3076209], [-6.7233952], [-6.7171199], [-6.0758505]], [[-9.0479727], [-9.6386522], [-9.6422383], [-8.7056317], [-9.0479727], [-9.6386522], [-9.6422383], [-8.7056317]]]]

Expected (Unparsed): [[[[-1.2592313475348456],[-1.3354800658565997],[-1.349070873636912],[-1.201313555251292],[-1.2592313475348456],[-1.3354800658565997],[-1.349070873636912],[-1.201313555251292]],[[-1.3315609056599995],[-1.415096967451228],[-1.4230790755175902],[-1.2753301474988192],[-1.3315609056599995],[-1.415096967451228],[-1.4230790755175902],[-1.2753301474988192]],[[-2.345969024239758],[-2.4936816240812005],[-2.506564205653333],[-2.247826928758128],[-2.345969024239758],[-2.4936816240812005],[-2.506564205653333],[-2.247826928758128]],[[-4.899047348972683],[-5.219283268931113],[-5.220321667804765],[-4.714394735265546],[-4.899047348972683],[-5.219283268931113],[-5.220321667804765],[-4.714394735265546]],[[-6.3076208587008615],[-6.72339517952173],[-6.717119819708785],[-6.075850428089698],[-6.3076208587008615],[-6.72339517952173],[-6.717119819708785],[-6.075850428089698]],[[-9.04797282676661],[-9.638652284176587],[-9.642238329959234],[-8.705631752829095],[-9.04797282676661],[-9.638652284176587],[-9.642238329959234],[-8.705631752829095]]]]

Actual:   [[[[-1.2592], [-1.3354], [-1.349], [-1.2013], [-1.2592], [-1.3354], [-1.349], [-1.2013]], [[-1.3315], [-1.415], [-1.423], [-1.2753], [-1.3315], [-1.415], [-1.423], [-1.2753]], [[-2.3459], [-2.4936], [-2.5065], [-2.2478], [-2.3459], [-2.4936], [-2.5065], [-2.2478]], [[-4.899], [-5.2192], [-5.2203], [-4.7143], [-4.899], [-5.2192], [-5.2203], [-4.7143]], [[-6.3076], [-6.7233], [-6.7171], [-6.0758], [-6.3076], [-6.7233], [-6.7171], [-6.0758]], [[-9.0479], [-9.6386], [-9.6422], [-8.7056], [-9.0479], [-9.6386], [-9.6422], [-8.7056]]]]

Expected: [[[[-1.2592], [-1.3354], [-1.349], [-1.2013], [-1.2592], [-1.3354], [-1.349], [-1.2013]], [[-1.3315], [-1.415], [-1.423], [-1.2753], [-1.3315], [-1.415], [-1.423], [-1.2753]], [[-2.3459], [-2.4936], [-2.5065], [-2.2478], [-2.3459], [-2.4936], [-2.5065], [-2.2478]], [[-4.899], [-5.2192], [-5.2203], [-4.7143], [-4.899], [-5.2192], [-5.2203], [-4.7143]], [[-6.3076], [-6.7233], [-6.7171], [-6.0758], [-6.3076], [-6.7233], [-6.7171], [-6.0758]], [[-9.0479], [-9.6386], [-9.6422], [-8.7056], [-9.0479], [-9.6386], [-9.6422], [-8.7056]]]]