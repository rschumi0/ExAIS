import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Sub79843 = tf.keras.layers.Input(shape=([2]))
in1Sub79843 = tf.keras.layers.Input(shape=([2]))

Sub79843 = keras.layers.Subtract(name = 'Sub79843', )([in0Sub79843,in1Sub79843])
Res50079 = keras.layers.Reshape((2, 1), name = 'Res50079', )(Sub79843)
Res90691 = keras.layers.Reshape((2, 1, 1), name = 'Res90691', )(Res50079)
Res7491 = keras.layers.Reshape((2, 1, 1, 1), name = 'Res7491', )(Res90691)
Glo57391 = keras.layers.GlobalAveragePooling3D(name = 'Glo57391', )(Res7491)
Res52452 = keras.layers.Reshape((1, 1), name = 'Res52452', )(Glo57391)
Up_92933 = keras.layers.UpSampling1D(size=(2), name = 'Up_92933', )(Res52452)
model = tf.keras.models.Model(inputs=[in0Sub79843,in1Sub79843], outputs=Up_92933)
in0Sub79843 = tf.constant([[0.718, 0.3161]])
in1Sub79843 = tf.constant([[0.6698, 0.1638]])
print (np.array2string(model.predict([in0Sub79843,in1Sub79843],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Up_92933.png')

LSub79843 = subtract_layer([[0.718, 0.3161]], [[0.6698, 0.1638]], Sub79843), 
LRes50079 = reshape_layer(Sub79843, [2, 1], Res50079), 
LRes90691 = reshape_layer(Res50079, [2, 1, 1], Res90691), 
LRes7491 = reshape_layer(Res90691, [2, 1, 1, 1], Res7491), 
LGlo57391 = global_average_pooling3D_layer(Res7491, Glo57391), 
LRes52452 = reshape_layer(Glo57391, [1, 1], Res52452), 
LUp_92933 = up_sampling1D_layer(Res52452, 2, Up_92933), 
exec_layers([LSub79843,LRes50079,LRes90691,LRes7491,LGlo57391,LRes52452,LUp_92933],["Sub79843","Res50079","Res90691","Res7491","Glo57391","Res52452","Up_92933"],Up_92933,"Up_92933")

Actual (Unparsed): [[[0.1002500], [0.1002500]]]

Expected (Unparsed): [[[0.10025],[0.10025]]]

Actual:   [[[0.1003], [0.1003]]]

Expected: [[[0.1003], [0.1003]]]