import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Up_32442 = tf.keras.layers.Input(shape=([4, 1, 4]))

Up_32442 = keras.layers.UpSampling2D(size=(2, 1), name = 'Up_32442', )(in0Up_32442)
Up_32452 = keras.layers.UpSampling2D(size=(2, 2), name = 'Up_32452', )(Up_32442)
model = tf.keras.models.Model(inputs=[in0Up_32442], outputs=Up_32452)
in0Up_32442 = tf.constant([[[[1.6709, 1.4211, 1.3341, 1.0855]], [[1.7434, 1.0854, 1.0132, 1.7684]], [[1.4507, 1.8276, 1.9606, 1.8047]], [[1.4463, 1.9547, 1.7368, 1.762]]]])
print (np.array2string(model.predict([in0Up_32442],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Up_32452.png')

LUp_32442 = up_sampling2D_layer([[[[1.6709, 1.4211, 1.3341, 1.0855]], [[1.7434, 1.0854, 1.0132, 1.7684]], [[1.4507, 1.8276, 1.9606, 1.8047]], [[1.4463, 1.9547, 1.7368, 1.762]]]], 2, 1, Up_32442), 
LUp_32452 = up_sampling2D_layer(Up_32442, 2, 2, Up_32452), 
exec_layers([LUp_32442,LUp_32452],["Up_32442","Up_32452"],Up_32452,"Up_32452")

Actual (Unparsed): [[[[1.6709000, 1.4211000, 1.3341000, 1.0855000], [1.6709000, 1.4211000, 1.3341000, 1.0855000]], [[1.6709000, 1.4211000, 1.3341000, 1.0855000], [1.6709000, 1.4211000, 1.3341000, 1.0855000]], [[1.6709000, 1.4211000, 1.3341000, 1.0855000], [1.6709000, 1.4211000, 1.3341000, 1.0855000]], [[1.6709000, 1.4211000, 1.3341000, 1.0855000], [1.6709000, 1.4211000, 1.3341000, 1.0855000]], [[1.7434000, 1.0854000, 1.0132000, 1.7684000], [1.7434000, 1.0854000, 1.0132000, 1.7684000]], [[1.7434000, 1.0854000, 1.0132000, 1.7684000], [1.7434000, 1.0854000, 1.0132000, 1.7684000]], [[1.7434000, 1.0854000, 1.0132000, 1.7684000], [1.7434000, 1.0854000, 1.0132000, 1.7684000]], [[1.7434000, 1.0854000, 1.0132000, 1.7684000], [1.7434000, 1.0854000, 1.0132000, 1.7684000]], [[1.4507000, 1.8276000, 1.9606000, 1.8047000], [1.4507000, 1.8276000, 1.9606000, 1.8047000]], [[1.4507000, 1.8276000, 1.9606000, 1.8047000], [1.4507000, 1.8276000, 1.9606000, 1.8047000]], [[1.4507000, 1.8276000, 1.9606000, 1.8047000], [1.4507000, 1.8276000, 1.9606000, 1.8047000]], [[1.4507000, 1.8276000, 1.9606000, 1.8047000], [1.4507000, 1.8276000, 1.9606000, 1.8047000]], [[1.4463000, 1.9547000, 1.7368000, 1.7620000], [1.4463000, 1.9547000, 1.7368000, 1.7620000]], [[1.4463000, 1.9547000, 1.7368000, 1.7620000], [1.4463000, 1.9547000, 1.7368000, 1.7620000]], [[1.4463000, 1.9547000, 1.7368000, 1.7620000], [1.4463000, 1.9547000, 1.7368000, 1.7620000]], [[1.4463000, 1.9547000, 1.7368000, 1.7620000], [1.4463000, 1.9547000, 1.7368000, 1.7620000]]]]

Expected (Unparsed): [[[[1.6709,1.4211,1.3341,1.0855],[1.6709,1.4211,1.3341,1.0855]],[[1.6709,1.4211,1.3341,1.0855],[1.6709,1.4211,1.3341,1.0855]],[[1.6709,1.4211,1.3341,1.0855],[1.6709,1.4211,1.3341,1.0855]],[[1.6709,1.4211,1.3341,1.0855],[1.6709,1.4211,1.3341,1.0855]],[[1.7434,1.0854,1.0132,1.7684],[1.7434,1.0854,1.0132,1.7684]],[[1.7434,1.0854,1.0132,1.7684],[1.7434,1.0854,1.0132,1.7684]],[[1.7434,1.0854,1.0132,1.7684],[1.7434,1.0854,1.0132,1.7684]],[[1.7434,1.0854,1.0132,1.7684],[1.7434,1.0854,1.0132,1.7684]],[[1.4507,1.8276,1.9606,1.8047],[1.4507,1.8276,1.9606,1.8047]],[[1.4507,1.8276,1.9606,1.8047],[1.4507,1.8276,1.9606,1.8047]],[[1.4507,1.8276,1.9606,1.8047],[1.4507,1.8276,1.9606,1.8047]],[[1.4507,1.8276,1.9606,1.8047],[1.4507,1.8276,1.9606,1.8047]],[[1.4463,1.9547,1.7368,1.762],[1.4463,1.9547,1.7368,1.762]],[[1.4463,1.9547,1.7368,1.762],[1.4463,1.9547,1.7368,1.762]],[[1.4463,1.9547,1.7368,1.762],[1.4463,1.9547,1.7368,1.762]],[[1.4463,1.9547,1.7368,1.762],[1.4463,1.9547,1.7368,1.762]]]]

Actual:   [[[[1.6709, 1.4211, 1.3341, 1.0855], [1.6709, 1.4211, 1.3341, 1.0855]], [[1.6709, 1.4211, 1.3341, 1.0855], [1.6709, 1.4211, 1.3341, 1.0855]], [[1.6709, 1.4211, 1.3341, 1.0855], [1.6709, 1.4211, 1.3341, 1.0855]], [[1.6709, 1.4211, 1.3341, 1.0855], [1.6709, 1.4211, 1.3341, 1.0855]], [[1.7434, 1.0854, 1.0132, 1.7684], [1.7434, 1.0854, 1.0132, 1.7684]], [[1.7434, 1.0854, 1.0132, 1.7684], [1.7434, 1.0854, 1.0132, 1.7684]], [[1.7434, 1.0854, 1.0132, 1.7684], [1.7434, 1.0854, 1.0132, 1.7684]], [[1.7434, 1.0854, 1.0132, 1.7684], [1.7434, 1.0854, 1.0132, 1.7684]], [[1.4507, 1.8276, 1.9606, 1.8047], [1.4507, 1.8276, 1.9606, 1.8047]], [[1.4507, 1.8276, 1.9606, 1.8047], [1.4507, 1.8276, 1.9606, 1.8047]], [[1.4507, 1.8276, 1.9606, 1.8047], [1.4507, 1.8276, 1.9606, 1.8047]], [[1.4507, 1.8276, 1.9606, 1.8047], [1.4507, 1.8276, 1.9606, 1.8047]], [[1.4463, 1.9547, 1.7368, 1.762], [1.4463, 1.9547, 1.7368, 1.762]], [[1.4463, 1.9547, 1.7368, 1.762], [1.4463, 1.9547, 1.7368, 1.762]], [[1.4463, 1.9547, 1.7368, 1.762], [1.4463, 1.9547, 1.7368, 1.762]], [[1.4463, 1.9547, 1.7368, 1.762], [1.4463, 1.9547, 1.7368, 1.762]]]]

Expected: [[[[1.6709, 1.4211, 1.3341, 1.0855], [1.6709, 1.4211, 1.3341, 1.0855]], [[1.6709, 1.4211, 1.3341, 1.0855], [1.6709, 1.4211, 1.3341, 1.0855]], [[1.6709, 1.4211, 1.3341, 1.0855], [1.6709, 1.4211, 1.3341, 1.0855]], [[1.6709, 1.4211, 1.3341, 1.0855], [1.6709, 1.4211, 1.3341, 1.0855]], [[1.7434, 1.0854, 1.0132, 1.7684], [1.7434, 1.0854, 1.0132, 1.7684]], [[1.7434, 1.0854, 1.0132, 1.7684], [1.7434, 1.0854, 1.0132, 1.7684]], [[1.7434, 1.0854, 1.0132, 1.7684], [1.7434, 1.0854, 1.0132, 1.7684]], [[1.7434, 1.0854, 1.0132, 1.7684], [1.7434, 1.0854, 1.0132, 1.7684]], [[1.4507, 1.8276, 1.9606, 1.8047], [1.4507, 1.8276, 1.9606, 1.8047]], [[1.4507, 1.8276, 1.9606, 1.8047], [1.4507, 1.8276, 1.9606, 1.8047]], [[1.4507, 1.8276, 1.9606, 1.8047], [1.4507, 1.8276, 1.9606, 1.8047]], [[1.4507, 1.8276, 1.9606, 1.8047], [1.4507, 1.8276, 1.9606, 1.8047]], [[1.4463, 1.9547, 1.7368, 1.762], [1.4463, 1.9547, 1.7368, 1.762]], [[1.4463, 1.9547, 1.7368, 1.762], [1.4463, 1.9547, 1.7368, 1.762]], [[1.4463, 1.9547, 1.7368, 1.762], [1.4463, 1.9547, 1.7368, 1.762]], [[1.4463, 1.9547, 1.7368, 1.762], [1.4463, 1.9547, 1.7368, 1.762]]]]