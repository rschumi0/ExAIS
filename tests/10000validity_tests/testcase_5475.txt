import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Sub14853 = tf.keras.layers.Input(shape=([2, 3, 3, 3]))
in1Sub14853 = tf.keras.layers.Input(shape=([2, 3, 3, 3]))

Sub14853 = keras.layers.Subtract(name = 'Sub14853', )([in0Sub14853,in1Sub14853])
Res66399 = keras.layers.Reshape((2, 3, 9), name = 'Res66399', )(Sub14853)
Con60053 = keras.layers.Conv2D(3, (1, 3),strides=(1, 2), padding='same', dilation_rate=(1, 1), name = 'Con60053', )(Res66399)
model = tf.keras.models.Model(inputs=[in0Sub14853,in1Sub14853], outputs=Con60053)
w = model.get_layer('Con60053').get_weights() 
w[0] = np.array([[[[0.3329, 0.7009, 0.3544], [0.4257, 0.5957, 0.869], [0.5318, 0.2043, 0.3974], [0.0361, 0.7117, 0.8585], [0.6051, 0.9527, 0.6034], [0.9473, 0.4033, 0.3627], [0.1547, 0.2916, 0.6068], [0.1005, 0.8328, 0.364], [0.8979, 0.6113, 0.9799]], [[0.3558, 0.8864, 0.0119], [0.3738, 0.9475, 0.9927], [0.0744, 0.623, 0.093], [0.2889, 0.0622, 0.0435], [0.1874, 0.596, 0.1795], [0.2252, 0.8382, 0.3344], [0.5026, 0.5809, 0.0816], [0.8498, 0.656, 0.7879], [0.2934, 0.1966, 0.1661]], [[0.1839, 0.2352, 0.6512], [0.3827, 0.8579, 0.6423], [0.548, 0.09, 0.3897], [0.5149, 0.3848, 0.4499], [0.9333, 0.8021, 0.5258], [0.7138, 0.6167, 0.4856], [0.2482, 0.2214, 0.0323], [0.1616, 0.3226, 0.5641], [0.9333, 0.0985, 0.7961]]]])
w[1] = np.array([0, 0, 0])
model.get_layer('Con60053').set_weights(w) 
in0Sub14853 = tf.constant([[[[[0.1153, 0.8389, 0.8409], [0.9834, 0.8754, 0.1022], [0.198, 0.0568, 0.5776]], [[0.3228, 0.8645, 0.5896], [0.279, 0.0406, 0.1455], [0.8578, 0.0307, 0.347]], [[0.9963, 0.6206, 0.3728], [0.2519, 0.9764, 0.7549], [0.2398, 0.1644, 0.2209]]], [[[0.7024, 0.6446, 0.3284], [0.9509, 0.4581, 0.0667], [0.8979, 0.2338, 0.9395]], [[0.5554, 0.9643, 0.9383], [0.9646, 0.1791, 0.2551], [0.0829, 0.7451, 0.5988]], [[0.4111, 0.0696, 0.7485], [0.2267, 0.7192, 0.6146], [0.0246, 0.6415, 0.9295]]]]])
in1Sub14853 = tf.constant([[[[[0.5403, 0.6034, 0.6754], [0.3163, 0.9777, 0.373], [0.8624, 0.4583, 0.9416]], [[0.9223, 0.7429, 0.3048], [0.6893, 0.1961, 0.8567], [0.9742, 0.7496, 0.4499]], [[0.1249, 0.3856, 0.0173], [0.9156, 0.7201, 0.2643], [0.8514, 0.7934, 0.4548]]], [[[0.2809, 0.6818, 0.6692], [0.1813, 0.0852, 0.2365], [0.2262, 0.6873, 0.7784]], [[0.1314, 0.1637, 0.0978], [0.9296, 0.2327, 0.5689], [0.8483, 0.5892, 0.8961]], [[0.5938, 0.8821, 0.8749], [0.9155, 0.1852, 0.8418], [0.617, 0.7727, 0.785]]]]])
print (np.array2string(model.predict([in0Sub14853,in1Sub14853],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Con60053.png')

LSub14853 = subtract_layer([[[[[0.1153, 0.8389, 0.8409], [0.9834, 0.8754, 0.1022], [0.198, 0.0568, 0.5776]], [[0.3228, 0.8645, 0.5896], [0.279, 0.0406, 0.1455], [0.8578, 0.0307, 0.347]], [[0.9963, 0.6206, 0.3728], [0.2519, 0.9764, 0.7549], [0.2398, 0.1644, 0.2209]]], [[[0.7024, 0.6446, 0.3284], [0.9509, 0.4581, 0.0667], [0.8979, 0.2338, 0.9395]], [[0.5554, 0.9643, 0.9383], [0.9646, 0.1791, 0.2551], [0.0829, 0.7451, 0.5988]], [[0.4111, 0.0696, 0.7485], [0.2267, 0.7192, 0.6146], [0.0246, 0.6415, 0.9295]]]]], [[[[[0.5403, 0.6034, 0.6754], [0.3163, 0.9777, 0.373], [0.8624, 0.4583, 0.9416]], [[0.9223, 0.7429, 0.3048], [0.6893, 0.1961, 0.8567], [0.9742, 0.7496, 0.4499]], [[0.1249, 0.3856, 0.0173], [0.9156, 0.7201, 0.2643], [0.8514, 0.7934, 0.4548]]], [[[0.2809, 0.6818, 0.6692], [0.1813, 0.0852, 0.2365], [0.2262, 0.6873, 0.7784]], [[0.1314, 0.1637, 0.0978], [0.9296, 0.2327, 0.5689], [0.8483, 0.5892, 0.8961]], [[0.5938, 0.8821, 0.8749], [0.9155, 0.1852, 0.8418], [0.617, 0.7727, 0.785]]]]], Sub14853), 
LRes66399 = reshape_layer(Sub14853, [2, 3, 9], Res66399), 
LCon60053 = conv2D_layer(Res66399, 1, 3,[[[[0.3329, 0.7009, 0.3544], [0.4257, 0.5957, 0.869], [0.5318, 0.2043, 0.3974], [0.0361, 0.7117, 0.8585], [0.6051, 0.9527, 0.6034], [0.9473, 0.4033, 0.3627], [0.1547, 0.2916, 0.6068], [0.1005, 0.8328, 0.364], [0.8979, 0.6113, 0.9799]], [[0.3558, 0.8864, 0.0119], [0.3738, 0.9475, 0.9927], [0.0744, 0.623, 0.093], [0.2889, 0.0622, 0.0435], [0.1874, 0.596, 0.1795], [0.2252, 0.8382, 0.3344], [0.5026, 0.5809, 0.0816], [0.8498, 0.656, 0.7879], [0.2934, 0.1966, 0.1661]], [[0.1839, 0.2352, 0.6512], [0.3827, 0.8579, 0.6423], [0.548, 0.09, 0.3897], [0.5149, 0.3848, 0.4499], [0.9333, 0.8021, 0.5258], [0.7138, 0.6167, 0.4856], [0.2482, 0.2214, 0.0323], [0.1616, 0.3226, 0.5641], [0.9333, 0.0985, 0.7961]]]],[0, 0, 0], 1, 2, true, 1, 1, Con60053), 
exec_layers([LSub14853,LRes66399,LCon60053],["Sub14853","Res66399","Con60053"],Con60053,"Con60053")

Actual (Unparsed): [[[[-1.7330104, -2.0179159, -1.5710305], [-1.4810604, -0.7867407, -1.2572184]], [[0.5108821, 0.8689194, 0.4838814], [-0.6642219, -0.8093324, -0.5934241]]]]

Expected (Unparsed): [[[[-1.7330104300000002,-2.0179158900000003,-1.5710306100000002],[-1.48106036,-0.7867406800000001,-1.2572184499999997]],[[0.5108820899999998,0.8689194,0.48388143000000017],[-0.6642219600000001,-0.8093324900000001,-0.5934241200000002]]]]

Actual:   [[[[-1.733, -2.0179, -1.571], [-1.481, -0.7867, -1.2572]], [[0.5109, 0.869, 0.4839], [-0.6642, -0.8093, -0.5934]]]]

Expected: [[[[-1.733, -2.0179, -1.571], [-1.481, -0.7867, -1.2572]], [[0.5109, 0.869, 0.4839], [-0.6642, -0.8093, -0.5934]]]]