import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Max79476 = tf.keras.layers.Input(shape=([1, 1, 2]))
in1Max79476 = tf.keras.layers.Input(shape=([1, 1, 2]))
in0Up_4010 = tf.keras.layers.Input(shape=([3, 2]))
in0Con23599 = tf.keras.layers.Input(shape=([6, 2]))

Max79476 = keras.layers.Maximum(name = 'Max79476', )([in0Max79476,in1Max79476])
Den39244 = keras.layers.Dense(4,name = 'Den39244', )(Max79476)
Res3898 = keras.layers.Reshape((1, 4), name = 'Res3898', )(Den39244)
Zer31908 = keras.layers.ZeroPadding1D(padding=((5, 0)), name = 'Zer31908', )(Res3898)
Up_4010 = keras.layers.UpSampling1D(size=(2), name = 'Up_4010', )(in0Up_4010)
Con23599 = keras.layers.Concatenate(axis=2, name = 'Con23599', )([Up_4010,in0Con23599])
Mul90516 = keras.layers.Multiply(name = 'Mul90516', )([Zer31908,Con23599])
model = tf.keras.models.Model(inputs=[in0Max79476,in1Max79476,in0Up_4010,in0Con23599], outputs=Mul90516)
w = model.get_layer('Den39244').get_weights() 
w[0] = np.array([[0.2497, 0.5664, 0.8999, 0.3317], [0.949, 0.2817, 0.8991, 0.6091]])
w[1] = np.array([0.7724, 0.8627, 0.5436, 0.5671])
model.get_layer('Den39244').set_weights(w) 
in0Max79476 = tf.constant([[[[0.4311, 0.5549]]]])
in1Max79476 = tf.constant([[[[0.6809, 0.5787]]]])
in0Up_4010 = tf.constant([[[1.9392, 1.0633], [1.8902, 1.2071], [1.4068, 1.8038]]])
in0Con23599 = tf.constant([[[0.11, 0.5443], [0.9555, 0.3513], [0.1168, 0.4672], [0.4718, 0.2537], [0.8904, 0.3526], [0.6611, 0.5418]]])
print (np.array2string(model.predict([in0Max79476,in1Max79476,in0Up_4010,in0Con23599],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Mul90516.png')

LMax79476 = maximum_layer([[[[[0.4311, 0.5549]]]], [[[[0.6809, 0.5787]]]]], Max79476), 
LDen39244 = dense_layer(Max79476, [[0.2497, 0.5664, 0.8999, 0.3317], [0.949, 0.2817, 0.8991, 0.6091]],[0.7724, 0.8627, 0.5436, 0.5671], Den39244), 
LRes3898 = reshape_layer(Den39244, [1, 4], Res3898), 
LZer31908 = zero_padding1D_layer(Res3898, 5, 0, Zer31908), 
LUp_4010 = up_sampling1D_layer([[[1.9392, 1.0633], [1.8902, 1.2071], [1.4068, 1.8038]]], 2, Up_4010), 
LCon23599 = concatenate_layer([Up_4010,[[[0.11, 0.5443], [0.9555, 0.3513], [0.1168, 0.4672], [0.4718, 0.2537], [0.8904, 0.3526], [0.6611, 0.5418]]]], 2, Con23599), 
LMul90516 = multiply_layer([Zer31908,Con23599], Mul90516), 
exec_layers([LMax79476,LDen39244,LRes3898,LZer31908,LUp_4010,LCon23599,LMul90516],["Max79476","Den39244","Res3898","Zer31908","Up_4010","Con23599","Mul90516"],Mul90516,"Mul90516")

Actual (Unparsed): [[[0.0000000, 0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000, 0.0000000], [2.0983928, 2.5458500, 1.1084340, 0.6205998]]]

Expected (Unparsed): [[[0.0,0.0,0.0,0.0],[0.0,0.0,0.0,0.0],[0.0,0.0,0.0,0.0],[0.0,0.0,0.0,0.0],[0.0,0.0,0.0,0.0],[2.098392769804,2.5458500398899995,1.1084340289880001,0.6205997712599999]]]

Actual:   [[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [2.0984, 2.5459, 1.1085, 0.6206]]]

Expected: [[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [2.0984, 2.5459, 1.1085, 0.6206]]]