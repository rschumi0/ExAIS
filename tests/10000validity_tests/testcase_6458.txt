import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Dot94 = tf.keras.layers.Input(shape=([3]))
in1Dot94 = tf.keras.layers.Input(shape=([3]))
in0Con30509 = tf.keras.layers.Input(shape=([5, 3, 4, 1]))
in0Mul42739 = tf.keras.layers.Input(shape=([1, 2, 2, 2]))
in1Mul42739 = tf.keras.layers.Input(shape=([1, 2, 2, 2]))
in0Zer83799 = tf.keras.layers.Input(shape=([1, 1]))
in0Con3850 = tf.keras.layers.Input(shape=([3, 1, 1]))
in0Max7953 = tf.keras.layers.Input(shape=([1, 2, 2]))
in0Con68775 = tf.keras.layers.Input(shape=([5, 3, 4, 1]))

Dot94 = keras.layers.Dot(axes=(1, 1), name = 'Dot94', )([in0Dot94,in1Dot94])
Den54651 = keras.layers.Dense(2,name = 'Den54651', )(Dot94)
Sof69902 = keras.layers.Softmax(axis=1, name = 'Sof69902', )(Den54651)
Res61858 = keras.layers.Reshape((2, 1), name = 'Res61858', )(Sof69902)
Res42552 = keras.layers.Reshape((2, 1, 1), name = 'Res42552', )(Res61858)
Res30288 = keras.layers.Reshape((2, 1, 1, 1), name = 'Res30288', )(Res42552)
Zer89840 = keras.layers.ZeroPadding3D(padding=((3, 0), (2, 0), (3, 0)), name = 'Zer89840', )(Res30288)
Con30509 = keras.layers.Concatenate(axis=4, name = 'Con30509', )([Zer89840,in0Con30509])
Mul42739 = keras.layers.Multiply(name = 'Mul42739', )([in0Mul42739,in1Mul42739])
Zer6788 = keras.layers.ZeroPadding3D(padding=((4, 0), (1, 0), (2, 0)), name = 'Zer6788', )(Mul42739)
Zer83799 = keras.layers.ZeroPadding1D(padding=((1, 1)), name = 'Zer83799', )(in0Zer83799)
Res10733 = keras.layers.Reshape((3, 1, 1), name = 'Res10733', )(Zer83799)
Con3850 = keras.layers.Concatenate(axis=3, name = 'Con3850', )([Res10733,in0Con3850])
Max7953 = keras.layers.MaxPool2D(pool_size=(1, 1), strides=(1, 2), padding='same', name = 'Max7953', )(in0Max7953)
Zer1123 = keras.layers.ZeroPadding2D(padding=((2, 0), (0, 0)), name = 'Zer1123', )(Max7953)
Ave51819 = keras.layers.Average(name = 'Ave51819', )([Con3850,Zer1123])
Res13499 = keras.layers.Reshape((3, 1, 2, 1), name = 'Res13499', )(Ave51819)
Zer20393 = keras.layers.ZeroPadding3D(padding=((1, 1), (1, 1), (1, 1)), name = 'Zer20393', )(Res13499)
Con68775 = keras.layers.Concatenate(axis=4, name = 'Con68775', )([Zer20393,in0Con68775])
Min95356 = keras.layers.Minimum(name = 'Min95356', )([Zer6788,Con68775])
Ave50932 = keras.layers.Average(name = 'Ave50932', )([Con30509,Min95356])
Res8403 = keras.layers.Reshape((5, 3, 8), name = 'Res8403', )(Ave50932)
Glo57519 = keras.layers.GlobalMaxPool2D(name = 'Glo57519', )(Res8403)
model = tf.keras.models.Model(inputs=[in0Dot94,in1Dot94,in0Con30509,in0Mul42739,in1Mul42739,in0Zer83799,in0Con3850,in0Max7953,in0Con68775], outputs=Glo57519)
w = model.get_layer('Den54651').get_weights() 
w[0] = np.array([[0.4235, 0.401]])
w[1] = np.array([0.1141, 0.0266])
model.get_layer('Den54651').set_weights(w) 
in0Dot94 = tf.constant([[0.8748, 0.1195, 0.0041]])
in1Dot94 = tf.constant([[0.757, 0.5549, 0.8408]])
in0Con30509 = tf.constant([[[[[0.0076], [0.0283], [0.9645], [0.3179]], [[0.0573], [0.0093], [0.8321], [0.9901]], [[0.0715], [0.3477], [0.4898], [0.0215]]], [[[0.938], [0.3886], [0.8047], [0.7072]], [[0.2584], [0.0984], [0.8504], [0.8048]], [[0.2533], [0.2263], [0.2208], [0.4408]]], [[[0.3345], [0.8941], [0.5863], [0.8225]], [[0.1009], [0.9894], [0.3229], [0.018]], [[0.1989], [0.1155], [0.4305], [0.2757]]], [[[0.831], [0.1397], [0.5034], [0.9699]], [[0.6909], [0.572], [0.2126], [0.2781]], [[0.7585], [0.1052], [0.6199], [0.1237]]], [[[0.697], [0.655], [0.6531], [0.7497]], [[0.56], [0.1436], [0.2424], [0.5293]], [[0.1395], [0.0964], [0.9431], [0.2636]]]]])
in0Mul42739 = tf.constant([[[[[0.1907, 0.8246], [0.1695, 0.826]], [[0.3659, 0.1712], [0.6868, 0.5411]]]]])
in1Mul42739 = tf.constant([[[[[0.1986, 0.4846], [0.9877, 0.0241]], [[0.1327, 0.6853], [0.0982, 0.9561]]]]])
in0Zer83799 = tf.constant([[[1.8041]]])
in0Con3850 = tf.constant([[[[0.5743]], [[0.1675]], [[0.0123]]]])
in0Max7953 = tf.constant([[[[1.4452, 1.7906], [1.8105, 1.4962]]]])
in0Con68775 = tf.constant([[[[[0.0211], [0.4782], [0.2457], [0.9369]], [[0.7804], [0.2392], [0.5031], [0.1911]], [[0.6788], [0.8801], [0.8579], [0.3664]]], [[[0.8242], [0.3548], [0.8761], [0.2277]], [[0.8772], [0.2249], [0.1044], [0.6167]], [[0.0299], [0.8265], [0.8216], [0.0921]]], [[[0.7722], [0.2162], [0.7486], [0.6208]], [[0.483], [0.4969], [0.4452], [0.6202]], [[0.6791], [0.9958], [0.3693], [0.0896]]], [[[0.7021], [0.0312], [0.4748], [0.9226]], [[0.7334], [0.6853], [0.7872], [0.7433]], [[0.2869], [0.0811], [0.6098], [0.7713]]], [[[0.7499], [0.1527], [0.8868], [0.2893]], [[0.1176], [0.7915], [0.7758], [0.2582]], [[0.7974], [0.5546], [0.6695], [0.5074]]]]])
print (np.array2string(model.predict([in0Dot94,in1Dot94,in0Con30509,in0Mul42739,in1Mul42739,in0Zer83799,in0Con3850,in0Max7953,in0Con68775],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Glo57519.png')

LDot94 = dot_layer([[0.8748, 0.1195, 0.0041]], [[0.757, 0.5549, 0.8408]], 1, 1, Dot94), 
LDen54651 = dense_layer(Dot94, [[0.4235, 0.401]],[0.1141, 0.0266], Den54651), 
LSof69902 = softmax_layer(Den54651, 1, Sof69902), 
LRes61858 = reshape_layer(Sof69902, [2, 1], Res61858), 
LRes42552 = reshape_layer(Res61858, [2, 1, 1], Res42552), 
LRes30288 = reshape_layer(Res42552, [2, 1, 1, 1], Res30288), 
LZer89840 = zero_padding3D_layer(Res30288, 3, 0, 2, 0, 3, 0, Zer89840), 
LCon30509 = concatenate_layer([Zer89840,[[[[[0.0076], [0.0283], [0.9645], [0.3179]], [[0.0573], [0.0093], [0.8321], [0.9901]], [[0.0715], [0.3477], [0.4898], [0.0215]]], [[[0.938], [0.3886], [0.8047], [0.7072]], [[0.2584], [0.0984], [0.8504], [0.8048]], [[0.2533], [0.2263], [0.2208], [0.4408]]], [[[0.3345], [0.8941], [0.5863], [0.8225]], [[0.1009], [0.9894], [0.3229], [0.018]], [[0.1989], [0.1155], [0.4305], [0.2757]]], [[[0.831], [0.1397], [0.5034], [0.9699]], [[0.6909], [0.572], [0.2126], [0.2781]], [[0.7585], [0.1052], [0.6199], [0.1237]]], [[[0.697], [0.655], [0.6531], [0.7497]], [[0.56], [0.1436], [0.2424], [0.5293]], [[0.1395], [0.0964], [0.9431], [0.2636]]]]]], 4, Con30509), 
LMul42739 = multiply_layer([[[[[[0.1907, 0.8246], [0.1695, 0.826]], [[0.3659, 0.1712], [0.6868, 0.5411]]]]], [[[[[0.1986, 0.4846], [0.9877, 0.0241]], [[0.1327, 0.6853], [0.0982, 0.9561]]]]]], Mul42739), 
LZer6788 = zero_padding3D_layer(Mul42739, 4, 0, 1, 0, 2, 0, Zer6788), 
LZer83799 = zero_padding1D_layer([[[1.8041]]], 1, 1, Zer83799), 
LRes10733 = reshape_layer(Zer83799, [3, 1, 1], Res10733), 
LCon3850 = concatenate_layer([Res10733,[[[[0.5743]], [[0.1675]], [[0.0123]]]]], 3, Con3850), 
LMax7953 = max_pool2D_layer([[[[1.4452, 1.7906], [1.8105, 1.4962]]]], 1, 1, 1, 2, true, Max7953), 
LZer1123 = zero_padding2D_layer(Max7953, 2, 0, 0, 0, Zer1123), 
LAve51819 = average_layer([Con3850,Zer1123], Ave51819), 
LRes13499 = reshape_layer(Ave51819, [3, 1, 2, 1], Res13499), 
LZer20393 = zero_padding3D_layer(Res13499, 1, 1, 1, 1, 1, 1, Zer20393), 
LCon68775 = concatenate_layer([Zer20393,[[[[[0.0211], [0.4782], [0.2457], [0.9369]], [[0.7804], [0.2392], [0.5031], [0.1911]], [[0.6788], [0.8801], [0.8579], [0.3664]]], [[[0.8242], [0.3548], [0.8761], [0.2277]], [[0.8772], [0.2249], [0.1044], [0.6167]], [[0.0299], [0.8265], [0.8216], [0.0921]]], [[[0.7722], [0.2162], [0.7486], [0.6208]], [[0.483], [0.4969], [0.4452], [0.6202]], [[0.6791], [0.9958], [0.3693], [0.0896]]], [[[0.7021], [0.0312], [0.4748], [0.9226]], [[0.7334], [0.6853], [0.7872], [0.7433]], [[0.2869], [0.0811], [0.6098], [0.7713]]], [[[0.7499], [0.1527], [0.8868], [0.2893]], [[0.1176], [0.7915], [0.7758], [0.2582]], [[0.7974], [0.5546], [0.6695], [0.5074]]]]]], 4, Con68775), 
LMin95356 = minimum_layer([Zer6788,Con68775], Min95356), 
LAve50932 = average_layer([Con30509,Min95356], Ave50932), 
LRes8403 = reshape_layer(Ave50932, [5, 3, 8], Res8403), 
LGlo57519 = global_max_pool2D_layer(Res8403, Glo57519), 
exec_layers([LDot94,LDen54651,LSof69902,LRes61858,LRes42552,LRes30288,LZer89840,LCon30509,LMul42739,LZer6788,LZer83799,LRes10733,LCon3850,LMax7953,LZer1123,LAve51819,LRes13499,LZer20393,LCon68775,LMin95356,LAve50932,LRes8403,LGlo57519],["Dot94","Den54651","Sof69902","Res61858","Res42552","Res30288","Zer89840","Con30509","Mul42739","Zer6788","Zer83799","Res10733","Con3850","Max7953","Zer1123","Ave51819","Res13499","Zer20393","Con68775","Min95356","Ave50932","Res8403","Glo57519"],Glo57519,"Glo57519")

Actual (Unparsed): [[0.0000000, 0.4690000, 0.0000000, 0.4947000, 0.0000000, 0.5302117, 0.2629845, 0.4950500]]

Expected (Unparsed): [[0,0.469,0,0.4947,0,0.5302116800000001,0.26298450335787743,0.49505]]

Actual:   [[0, 0.469, 0, 0.4947, 0, 0.5303, 0.263, 0.4951]]

Expected: [[0, 0.469, 0, 0.4947, 0, 0.5303, 0.263, 0.4951]]