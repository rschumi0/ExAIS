import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Mul10151 = tf.keras.layers.Input(shape=([1, 2]))
in1Mul10151 = tf.keras.layers.Input(shape=([1, 2]))
in0Con4429 = tf.keras.layers.Input(shape=([2, 1, 1, 3]))
in0Con19701 = tf.keras.layers.Input(shape=([1, 1, 1, 1]))
in0LST84031 = tf.keras.layers.Input(shape=([2, 2]))
in0Con9447 = tf.keras.layers.Input(shape=([5]))

Mul10151 = keras.layers.Multiply(name = 'Mul10151', )([in0Mul10151,in1Mul10151])
Glo11976 = keras.layers.GlobalMaxPool1D(name = 'Glo11976', )(Mul10151)
Res75220 = keras.layers.Reshape((2, 1), name = 'Res75220', )(Glo11976)
Res67327 = keras.layers.Reshape((2, 1, 1), name = 'Res67327', )(Res75220)
Res69298 = keras.layers.Reshape((2, 1, 1, 1), name = 'Res69298', )(Res67327)
Con4429 = keras.layers.Concatenate(axis=4, name = 'Con4429', )([Res69298,in0Con4429])
Con19701 = keras.layers.Conv3DTranspose(4, (1, 1, 1),strides=(1, 1, 1), padding='same', name = 'Con19701', )(in0Con19701)
Zer95830 = keras.layers.ZeroPadding3D(padding=((1, 0), (0, 0), (0, 0)), name = 'Zer95830', )(Con19701)
Min81081 = keras.layers.Minimum(name = 'Min81081', )([Con4429,Zer95830])
Res80166 = keras.layers.Reshape((2, 1, 4), name = 'Res80166', )(Min81081)
Res4539 = keras.layers.Reshape((2, 4), name = 'Res4539', )(Res80166)
Fla4381 = keras.layers.Flatten(name = 'Fla4381', )(Res4539)
LST84031 = keras.layers.LSTM(3,recurrent_activation='sigmoid', name = 'LST84031', )(in0LST84031)
Con9447 = keras.layers.Concatenate(axis=1, name = 'Con9447', )([LST84031,in0Con9447])
Max66051 = keras.layers.Maximum(name = 'Max66051', )([Fla4381,Con9447])
Sof59809 = keras.layers.Softmax(axis=1, name = 'Sof59809', )(Max66051)
model = tf.keras.models.Model(inputs=[in0Mul10151,in1Mul10151,in0Con4429,in0Con19701,in0LST84031,in0Con9447], outputs=Sof59809)
w = model.get_layer('Con19701').get_weights() 
w[0] = np.array([[[[[0.8975], [0.9868], [0.7434], [0.2641]]]]])
w[1] = np.array([0, 0, 0, 0])
model.get_layer('Con19701').set_weights(w) 
w = model.get_layer('LST84031').get_weights() 
w[0] = np.array([[7, 6, 1, 10, 8, 8, 3, 3, 4, 6, 2, 1], [5, 6, 7, 9, 9, 3, 5, 5, 4, 2, 7, 6]])
w[1] = np.array([[6, 5, 3, 4, 5, 9, 10, 7, 1, 1, 6, 6], [1, 3, 9, 10, 3, 10, 9, 4, 9, 1, 7, 5], [10, 3, 2, 8, 5, 3, 7, 8, 5, 8, 3, 2]])
w[2] = np.array([2, 10, 3, 7, 2, 5, 3, 2, 1, 3, 6, 5])
model.get_layer('LST84031').set_weights(w) 
in0Mul10151 = tf.constant([[[0.9072, 0.4775]]])
in1Mul10151 = tf.constant([[[0.6244, 0.6957]]])
in0Con4429 = tf.constant([[[[[0.0429, 0.1664, 0.179]]], [[[0.4953, 0.3675, 0.4656]]]]])
in0Con19701 = tf.constant([[[[[0.0348]]]]])
in0LST84031 = tf.constant([[[9, 9], [10, 7]]])
in0Con9447 = tf.constant([[0.2414, 0.7525, 0.1054, 0.9591, 0.001]])
print (np.array2string(model.predict([in0Mul10151,in1Mul10151,in0Con4429,in0Con19701,in0LST84031,in0Con9447],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Sof59809.png')

LMul10151 = multiply_layer([[[[0.9072, 0.4775]]], [[[0.6244, 0.6957]]]], Mul10151), 
LGlo11976 = global_max_pool1D_layer(Mul10151, Glo11976), 
LRes75220 = reshape_layer(Glo11976, [2, 1], Res75220), 
LRes67327 = reshape_layer(Res75220, [2, 1, 1], Res67327), 
LRes69298 = reshape_layer(Res67327, [2, 1, 1, 1], Res69298), 
LCon4429 = concatenate_layer([Res69298,[[[[[0.0429, 0.1664, 0.179]]], [[[0.4953, 0.3675, 0.4656]]]]]], 4, Con4429), 
LCon19701 = conv3D_transpose_layer([[[[[0.0348]]]]], 1, 1, 1,[[[[[0.8975], [0.9868], [0.7434], [0.2641]]]]],[0, 0, 0, 0], 1, 1, 1, true, Con19701), 
LZer95830 = zero_padding3D_layer(Con19701, 1, 0, 0, 0, 0, 0, Zer95830), 
LMin81081 = minimum_layer([Con4429,Zer95830], Min81081), 
LRes80166 = reshape_layer(Min81081, [2, 1, 4], Res80166), 
LRes4539 = reshape_layer(Res80166, [2, 4], Res4539), 
LFla4381 = flatten_layer(Res4539, Fla4381), 
LLST84031 = lstm_layer([[[9, 9], [10, 7]]],[[7, 6, 1, 10, 8, 8, 3, 3, 4, 6, 2, 1], [5, 6, 7, 9, 9, 3, 5, 5, 4, 2, 7, 6]],[[6, 5, 3, 4, 5, 9, 10, 7, 1, 1, 6, 6], [1, 3, 9, 10, 3, 10, 9, 4, 9, 1, 7, 5], [10, 3, 2, 8, 5, 3, 7, 8, 5, 8, 3, 2]],[2, 10, 3, 7, 2, 5, 3, 2, 1, 3, 6, 5], LST84031), 
LCon9447 = concatenate_layer([LST84031,[[0.2414, 0.7525, 0.1054, 0.9591, 0.001]]], 1, Con9447), 
LMax66051 = maximum_layer([Fla4381,Con9447], Max66051), 
LSof59809 = softmax_layer(Max66051, 1, Sof59809), 
exec_layers([LMul10151,LGlo11976,LRes75220,LRes67327,LRes69298,LCon4429,LCon19701,LZer95830,LMin81081,LRes80166,LRes4539,LFla4381,LLST84031,LCon9447,LMax66051,LSof59809],["Mul10151","Glo11976","Res75220","Res67327","Res69298","Con4429","Con19701","Zer95830","Min81081","Res80166","Res4539","Fla4381","LST84031","Con9447","Max66051","Sof59809"],Sof59809,"Sof59809")

Actual (Unparsed): [[0.1639741, 0.1639741, 0.1639741, 0.0796053, 0.1327119, 0.0694829, 0.1631681, 0.0631095]]

Expected (Unparsed): [[0.16397408636509092,0.16397408636509092,0.16397408636509092,0.07960531207980005,0.13271192813707652,0.06948291015581873,0.16316807838948114,0.06310951214255073]]

Actual:   [[0.164, 0.164, 0.164, 0.0797, 0.1328, 0.0695, 0.1632, 0.0632]]

Expected: [[0.164, 0.164, 0.164, 0.0797, 0.1328, 0.0695, 0.1632, 0.0632]]