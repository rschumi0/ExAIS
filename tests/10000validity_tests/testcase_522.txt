import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Mul23097 = tf.keras.layers.Input(shape=([1, 1]))
in1Mul23097 = tf.keras.layers.Input(shape=([1, 1]))
in0Con54347 = tf.keras.layers.Input(shape=([3]))
in0Mul82086 = tf.keras.layers.Input(shape=([2, 1, 2]))
in1Mul82086 = tf.keras.layers.Input(shape=([2, 1, 2]))
in0Sub71622 = tf.keras.layers.Input(shape=([2]))
in1Sub71622 = tf.keras.layers.Input(shape=([2]))
in0Con69973 = tf.keras.layers.Input(shape=([2]))

Mul23097 = keras.layers.Multiply(name = 'Mul23097', )([in0Mul23097,in1Mul23097])
Fla17047 = keras.layers.Flatten(name = 'Fla17047', )(Mul23097)
Con54347 = keras.layers.Concatenate(axis=1, name = 'Con54347', )([Fla17047,in0Con54347])
Mul82086 = keras.layers.Multiply(name = 'Mul82086', )([in0Mul82086,in1Mul82086])
Res75406 = keras.layers.Reshape((2, 2), name = 'Res75406', )(Mul82086)
Fla73102 = keras.layers.Flatten(name = 'Fla73102', )(Res75406)
Sub71622 = keras.layers.Subtract(name = 'Sub71622', )([in0Sub71622,in1Sub71622])
Con69973 = keras.layers.Concatenate(axis=1, name = 'Con69973', )([Sub71622,in0Con69973])
Mul67952 = keras.layers.Multiply(name = 'Mul67952', )([Fla73102,Con69973])
Max97518 = keras.layers.Maximum(name = 'Max97518', )([Con54347,Mul67952])
Lea93613 = keras.layers.LeakyReLU(alpha=7.739547844346999, name = 'Lea93613', )(Max97518)
model = tf.keras.models.Model(inputs=[in0Mul23097,in1Mul23097,in0Con54347,in0Mul82086,in1Mul82086,in0Sub71622,in1Sub71622,in0Con69973], outputs=Lea93613)
in0Mul23097 = tf.constant([[[0.077]]])
in1Mul23097 = tf.constant([[[0.0225]]])
in0Con54347 = tf.constant([[0.4346, 0.5526, 0.396]])
in0Mul82086 = tf.constant([[[[0.8256, 0.5536]], [[0.1679, 0.9345]]]])
in1Mul82086 = tf.constant([[[[0.5067, 0.2883]], [[0.8953, 0.5873]]]])
in0Sub71622 = tf.constant([[0.2554, 0.9663]])
in1Sub71622 = tf.constant([[0.3436, 0.9933]])
in0Con69973 = tf.constant([[0.5459, 0.3363]])
print (np.array2string(model.predict([in0Mul23097,in1Mul23097,in0Con54347,in0Mul82086,in1Mul82086,in0Sub71622,in1Sub71622,in0Con69973],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Lea93613.png')

LMul23097 = multiply_layer([[[[0.077]]], [[[0.0225]]]], Mul23097), 
LFla17047 = flatten_layer(Mul23097, Fla17047), 
LCon54347 = concatenate_layer([Fla17047,[[0.4346, 0.5526, 0.396]]], 1, Con54347), 
LMul82086 = multiply_layer([[[[[0.8256, 0.5536]], [[0.1679, 0.9345]]]], [[[[0.5067, 0.2883]], [[0.8953, 0.5873]]]]], Mul82086), 
LRes75406 = reshape_layer(Mul82086, [2, 2], Res75406), 
LFla73102 = flatten_layer(Res75406, Fla73102), 
LSub71622 = subtract_layer([[0.2554, 0.9663]], [[0.3436, 0.9933]], Sub71622), 
LCon69973 = concatenate_layer([Sub71622,[[0.5459, 0.3363]]], 1, Con69973), 
LMul67952 = multiply_layer([Fla73102,Con69973], Mul67952), 
LMax97518 = maximum_layer([Con54347,Mul67952], Max97518), 
LLea93613 = leaky_relu_layer(Max97518, 7.739547844346999, Lea93613), 
exec_layers([LMul23097,LFla17047,LCon54347,LMul82086,LRes75406,LFla73102,LSub71622,LCon69973,LMul67952,LMax97518,LLea93613],["Mul23097","Fla17047","Con54347","Mul82086","Res75406","Fla73102","Sub71622","Con69973","Mul67952","Max97518","Lea93613"],Lea93613,"Lea93613")

Actual (Unparsed): [[0.0017325, 0.4346000, 0.5526000, 0.3960000]]

Expected (Unparsed): [[0.0017324999999999999,0.4346,0.5526,0.396]]

Actual:   [[0.0018, 0.4346, 0.5526, 0.396]]

Expected: [[0.0018, 0.4346, 0.5526, 0.396]]