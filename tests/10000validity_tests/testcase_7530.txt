import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Lay992 = tf.keras.layers.Input(shape=([3]))

Lay992 = keras.layers.LayerNormalization(axis=1, epsilon=2.338064333758516, name = 'Lay992', )(in0Lay992)
Res38713 = keras.layers.Reshape((3, 1), name = 'Res38713', )(Lay992)
LST66950 = keras.layers.LSTM(2,recurrent_activation='sigmoid', name = 'LST66950', )(Res38713)
Res17828 = keras.layers.Reshape((2, 1), name = 'Res17828', )(LST66950)
Cro10066 = keras.layers.Cropping1D(cropping=((1, 0)), name = 'Cro10066', )(Res17828)
model = tf.keras.models.Model(inputs=[in0Lay992], outputs=Cro10066)
w = model.get_layer('LST66950').get_weights() 
w[0] = np.array([[1, 9, 3, 3, 8, 5, 4, 7]])
w[1] = np.array([[10, 10, 7, 3, 3, 3, 2, 8], [9, 5, 5, 10, 2, 9, 6, 4]])
w[2] = np.array([1, 2, 9, 4, 7, 6, 9, 7])
model.get_layer('LST66950').set_weights(w) 
in0Lay992 = tf.constant([[1.0944, 1.1913, 1.7547]])
print (np.array2string(model.predict([in0Lay992],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Cro10066.png')

LLay992 = layer_normalization_layer([[1.0944, 1.1913, 1.7547]], 1, 2.338064333758516, Lay992), 
LRes38713 = reshape_layer(Lay992, [3, 1], Res38713), 
LLST66950 = lstm_layer(Res38713,[[1, 9, 3, 3, 8, 5, 4, 7]],[[10, 10, 7, 3, 3, 3, 2, 8], [9, 5, 5, 10, 2, 9, 6, 4]],[1, 2, 9, 4, 7, 6, 9, 7], LST66950), 
LRes17828 = reshape_layer(LST66950, [2, 1], Res17828), 
LCro10066 = cropping1D_layer(Res17828, 1, 0, Cro10066), 
exec_layers([LLay992,LRes38713,LLST66950,LRes17828,LCro10066],["Lay992","Res38713","LST66950","Res17828","Cro10066"],Cro10066,"Cro10066")

Actual (Unparsed): [[[0.9897012]]]

Expected (Unparsed): [[[0.9897011968489045]]]

Actual:   [[[0.9898]]]

Expected: [[[0.9898]]]