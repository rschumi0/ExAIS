import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Dot44602 = tf.keras.layers.Input(shape=([3, 3]))
in1Dot44602 = tf.keras.layers.Input(shape=([3, 3]))
in0Glo80699 = tf.keras.layers.Input(shape=([2, 2, 1]))
in0Con58336 = tf.keras.layers.Input(shape=([35]))

Dot44602 = keras.layers.Dot(axes=(1, 2), name = 'Dot44602', )([in0Dot44602,in1Dot44602])
Fla59419 = keras.layers.Flatten(name = 'Fla59419', )(Dot44602)
Res75788 = keras.layers.Reshape((9, 1), name = 'Res75788', )(Fla59419)
Res20135 = keras.layers.Reshape((9, 1, 1), name = 'Res20135', )(Res75788)
Con33314 = keras.layers.Conv2DTranspose(4, (2, 1),strides=(1, 1), padding='same', name = 'Con33314', )(Res20135)
Res2188 = keras.layers.Reshape((9, 4), name = 'Res2188', )(Con33314)
Fla94949 = keras.layers.Flatten(name = 'Fla94949', )(Res2188)
Glo80699 = keras.layers.GlobalMaxPool2D(name = 'Glo80699', )(in0Glo80699)
Con58336 = keras.layers.Concatenate(axis=1, name = 'Con58336', )([Glo80699,in0Con58336])
Add37309 = keras.layers.Add(name = 'Add37309', )([Fla94949,Con58336])
Res39647 = keras.layers.Reshape((36, 1), name = 'Res39647', )(Add37309)
Max79318 = keras.layers.MaxPool1D(pool_size=(12), name = 'Max79318', )(Res39647)
model = tf.keras.models.Model(inputs=[in0Dot44602,in1Dot44602,in0Glo80699,in0Con58336], outputs=Max79318)
w = model.get_layer('Con33314').get_weights() 
w[0] = np.array([[[[0.3308], [0.526], [0.8355], [0.852]]], [[[0.5583], [0.019], [0.0595], [0.6733]]]])
w[1] = np.array([0, 0, 0, 0])
model.get_layer('Con33314').set_weights(w) 
in0Dot44602 = tf.constant([[[0.1108, 0.3937, 0.923], [0.6974, 0.008, 0.8246], [0.5307, 0.901, 0.0081]]])
in1Dot44602 = tf.constant([[[0.4161, 0.4078, 0.3114], [0.5327, 0.5212, 0.5099], [0.589, 0.7367, 0.6866]]])
in0Glo80699 = tf.constant([[[[1.3085], [1.0898]], [[1.2207], [1.8577]]]])
in0Con58336 = tf.constant([[0.2084, 0.9806, 0.6128, 0.812, 0.5439, 0.6161, 0.7733, 0.2015, 0.4371, 0.3041, 0.1662, 0.3358, 0.9068, 0.6941, 0.0769, 0.2809, 0.0415, 0.0857, 0.6284, 0.1402, 0.1088, 0.9384, 0.1359, 0.5505, 0.0379, 0.3857, 0.4014, 0.556, 0.4438, 0.4451, 0.4564, 0.7443, 0.8958, 0.4147, 0.1297]])
print (np.array2string(model.predict([in0Dot44602,in1Dot44602,in0Glo80699,in0Con58336],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Max79318.png')

LDot44602 = dot_layer([[[0.1108, 0.3937, 0.923], [0.6974, 0.008, 0.8246], [0.5307, 0.901, 0.0081]]], [[[0.4161, 0.4078, 0.3114], [0.5327, 0.5212, 0.5099], [0.589, 0.7367, 0.6866]]], 1, 2, Dot44602), 
LFla59419 = flatten_layer(Dot44602, Fla59419), 
LRes75788 = reshape_layer(Fla59419, [9, 1], Res75788), 
LRes20135 = reshape_layer(Res75788, [9, 1, 1], Res20135), 
LCon33314 = conv2D_transpose_layer(Res20135, 2, 1,[[[[0.3308], [0.526], [0.8355], [0.852]]], [[[0.5583], [0.019], [0.0595], [0.6733]]]],[0, 0, 0, 0], 1, 1, true, Con33314), 
LRes2188 = reshape_layer(Con33314, [9, 4], Res2188), 
LFla94949 = flatten_layer(Res2188, Fla94949), 
LGlo80699 = global_max_pool2D_layer([[[[1.3085], [1.0898]], [[1.2207], [1.8577]]]], Glo80699), 
LCon58336 = concatenate_layer([Glo80699,[[0.2084, 0.9806, 0.6128, 0.812, 0.5439, 0.6161, 0.7733, 0.2015, 0.4371, 0.3041, 0.1662, 0.3358, 0.9068, 0.6941, 0.0769, 0.2809, 0.0415, 0.0857, 0.6284, 0.1402, 0.1088, 0.9384, 0.1359, 0.5505, 0.0379, 0.3857, 0.4014, 0.556, 0.4438, 0.4451, 0.4564, 0.7443, 0.8958, 0.4147, 0.1297]]], 1, Con58336), 
LAdd37309 = add_layer([Fla94949,Con58336], Add37309), 
LRes39647 = reshape_layer(Add37309, [36, 1], Res39647), 
LMax79318 = max_pool1D_layer(Res39647, 12, Max79318), 
exec_layers([LDot44602,LFla59419,LRes75788,LRes20135,LCon33314,LRes2188,LFla94949,LGlo80699,LCon58336,LAdd37309,LRes39647,LMax79318],["Dot44602","Fla59419","Res75788","Res20135","Con33314","Res2188","Fla94949","Glo80699","Con58336","Add37309","Res39647","Max79318"],Max79318,"Max79318")

Actual (Unparsed): [[[2.0216986], [1.6939923], [1.7384032]]]

Expected (Unparsed): [[[2.021698592264],[1.6939922899050002],[1.7384032828329998]]]

Actual:   [[[2.0217], [1.694], [1.7385]]]

Expected: [[[2.0217], [1.694], [1.7385]]]