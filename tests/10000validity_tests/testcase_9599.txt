import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Dot13541 = tf.keras.layers.Input(shape=([2, 3]))
in1Dot13541 = tf.keras.layers.Input(shape=([2, 3]))

Dot13541 = keras.layers.Dot(axes=(1, 1), name = 'Dot13541', )([in0Dot13541,in1Dot13541])
Bat43847 = keras.layers.BatchNormalization(axis=1, epsilon=0.269328840494972,  name = 'Bat43847', )(Dot13541)
Cro53706 = keras.layers.Cropping1D(cropping=((1, 0)), name = 'Cro53706', )(Bat43847)
model = tf.keras.models.Model(inputs=[in0Dot13541,in1Dot13541], outputs=Cro53706)
w = model.get_layer('Bat43847').get_weights() 
w[0] = np.array([0.1515, 0.6418, 0.4898])
w[1] = np.array([0.1975, 0.1175, 0.334])
w[2] = np.array([0.2572, 0.3956, 0.241])
w[3] = np.array([0.2231, 0.9732, 0.9289])
model.get_layer('Bat43847').set_weights(w) 
in0Dot13541 = tf.constant([[[0.0598, 0.951, 0.5615], [0.8471, 0.2826, 0.6618]]])
in1Dot13541 = tf.constant([[[0.5833, 0.4147, 0.6739], [0.2569, 0.4408, 0.4021]]])
print (np.array2string(model.predict([in0Dot13541,in1Dot13541],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Cro53706.png')

LDot13541 = dot_layer([[[0.0598, 0.951, 0.5615], [0.8471, 0.2826, 0.6618]]], [[[0.5833, 0.4147, 0.6739], [0.2569, 0.4408, 0.4021]]], 1, 1, Dot13541), 
LBat43847 = batch_normalization_layer(Dot13541, 1, 0.269328840494972, [0.1515, 0.6418, 0.4898], [0.1975, 0.1175, 0.334], [0.2572, 0.3956, 0.241], [0.2231, 0.9732, 0.9289], Bat43847), 
LCro53706 = cropping1D_layer(Bat43847, 1, 0, Cro53706), 
exec_layers([LDot13541,LBat43847,LCro53706],["Dot13541","Bat43847","Cro53706"],Cro53706,"Cro53706")

Actual (Unparsed): [[[0.2509156, 0.1885207, 0.3241497], [0.4487897, 0.4608871, 0.5145500]]]

Expected (Unparsed): [[[0.25091562496916187,0.1885206843816379,0.324149751951149],[0.4487896998768324,0.46088713389108926,0.514549969295599]]]

Actual:   [[[0.251, 0.1886, 0.3242], [0.4488, 0.4609, 0.5146]]]

Expected: [[[0.251, 0.1886, 0.3242], [0.4488, 0.4609, 0.5146]]]