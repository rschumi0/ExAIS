import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Min80021 = tf.keras.layers.Input(shape=([1, 1]))
in1Min80021 = tf.keras.layers.Input(shape=([1, 1]))

Min80021 = keras.layers.Minimum(name = 'Min80021', )([in0Min80021,in1Min80021])
Sep30417 = keras.layers.SeparableConv1D(3, (1),strides=(1), padding='same', name = 'Sep30417', )(Min80021)
model = tf.keras.models.Model(inputs=[in0Min80021,in1Min80021], outputs=Sep30417)
w = model.get_layer('Sep30417').get_weights() 
w[0] = np.array([[[0.7889]]])
w[1] = np.array([[[0.4924, 0.8868, 0.1471]]])
w[2] = np.array([0, 0, 0])
model.get_layer('Sep30417').set_weights(w) 
in0Min80021 = tf.constant([[[0.8639]]])
in1Min80021 = tf.constant([[[0.4815]]])
print (np.array2string(model.predict([in0Min80021,in1Min80021],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Sep30417.png')

LMin80021 = minimum_layer([[[[0.8639]]], [[[0.4815]]]], Min80021), 
LSep30417 = separable_conv1D_layer(Min80021, 1,[[[[0.7889]]],[[[0.4924, 0.8868, 0.1471]]]],[0, 0, 0], 1, true, Sep30417), 
exec_layers([LMin80021,LSep30417],["Min80021","Sep30417"],Sep30417,"Sep30417")

Actual (Unparsed): [[[0.1870408, 0.3368557, 0.0558767]]]

Expected (Unparsed): [[[0.18704077434000002,0.33685572438000005,0.05587672198500001]]]

Actual:   [[[0.1871, 0.3369, 0.0559]]]

Expected: [[[0.1871, 0.3369, 0.0559]]]