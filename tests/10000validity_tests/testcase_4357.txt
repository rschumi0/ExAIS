import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Thr38666 = tf.keras.layers.Input(shape=([2, 1, 1]))
in0Con10726 = tf.keras.layers.Input(shape=([1]))
in0Sub20519 = tf.keras.layers.Input(shape=([3]))
in1Sub20519 = tf.keras.layers.Input(shape=([3]))
in0Con47544 = tf.keras.layers.Input(shape=([1, 1, 1]))
in0Add57814 = tf.keras.layers.Input(shape=([2, 1]))
in1Add57814 = tf.keras.layers.Input(shape=([2, 1]))

Thr38666 = keras.layers.ThresholdedReLU(theta=1.7881225289235567, name = 'Thr38666', input_shape=(2, 1, 1))(in0Thr38666)
Res79304 = keras.layers.Reshape((2, 1), name = 'Res79304', )(Thr38666)
Fla56099 = keras.layers.Flatten(name = 'Fla56099', )(Res79304)
Con10726 = keras.layers.Concatenate(axis=1, name = 'Con10726', )([Fla56099,in0Con10726])
Sub20519 = keras.layers.Subtract(name = 'Sub20519', )([in0Sub20519,in1Sub20519])
Dot94636 = keras.layers.Dot(axes=(1, 1), name = 'Dot94636', )([Con10726,Sub20519])
Res69304 = keras.layers.Reshape((1, 1), name = 'Res69304', )(Dot94636)
Res75985 = keras.layers.Reshape((1, 1, 1), name = 'Res75985', )(Res69304)
Con47544 = keras.layers.Concatenate(axis=3, name = 'Con47544', )([Res75985,in0Con47544])
Add57814 = keras.layers.Add(name = 'Add57814', )([in0Add57814,in1Add57814])
Res67331 = keras.layers.Reshape((2, 1, 1), name = 'Res67331', )(Add57814)
Loc58354 = keras.layers.LocallyConnected2D(2, (2, 1),strides=(1, 1), name = 'Loc58354', )(Res67331)
Thr64917 = keras.layers.ThresholdedReLU(theta=9.379061603042336, name = 'Thr64917', )(Loc58354)
Mul78822 = keras.layers.Multiply(name = 'Mul78822', )([Con47544,Thr64917])
model = tf.keras.models.Model(inputs=[in0Thr38666,in0Con10726,in0Sub20519,in1Sub20519,in0Con47544,in0Add57814,in1Add57814], outputs=Mul78822)
w = model.get_layer('Loc58354').get_weights() 
w[0] = np.array([[[0.6687, 0.4738], [0.9688, 0.567]]])
w[1] = np.array([[[0, 0]]])
model.get_layer('Loc58354').set_weights(w) 
in0Thr38666 = tf.constant([[[[0.2941]], [[0.8211]]]])
in0Con10726 = tf.constant([[0.2776]])
in0Sub20519 = tf.constant([[0.0821, 0.649, 0.4641]])
in1Sub20519 = tf.constant([[0.9104, 0.341, 0.6674]])
in0Con47544 = tf.constant([[[[0.9787]]]])
in0Add57814 = tf.constant([[[0.3663], [0.0126]]])
in1Add57814 = tf.constant([[[0.9547], [0.4014]]])
print (np.array2string(model.predict([in0Thr38666,in0Con10726,in0Sub20519,in1Sub20519,in0Con47544,in0Add57814,in1Add57814],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Mul78822.png')

LThr38666 = thresholded_relu_layer([[[[0.2941]], [[0.8211]]]], 1.7881225289235567, Thr38666), 
LRes79304 = reshape_layer(Thr38666, [2, 1], Res79304), 
LFla56099 = flatten_layer(Res79304, Fla56099), 
LCon10726 = concatenate_layer([Fla56099,[[0.2776]]], 1, Con10726), 
LSub20519 = subtract_layer([[0.0821, 0.649, 0.4641]], [[0.9104, 0.341, 0.6674]], Sub20519), 
LDot94636 = dot_layer(Con10726,Sub20519, 1, 1, Dot94636), 
LRes69304 = reshape_layer(Dot94636, [1, 1], Res69304), 
LRes75985 = reshape_layer(Res69304, [1, 1, 1], Res75985), 
LCon47544 = concatenate_layer([Res75985,[[[[0.9787]]]]], 3, Con47544), 
LAdd57814 = add_layer([[[[0.3663], [0.0126]]], [[[0.9547], [0.4014]]]], Add57814), 
LRes67331 = reshape_layer(Add57814, [2, 1, 1], Res67331), 
LLoc58354 = locally_connected2D_layer(Res67331, 2, 1,[[[0.6687, 0.4738], [0.9688, 0.567]]],[[[0, 0]]], 1, 1, Loc58354), 
LThr64917 = thresholded_relu_layer(Loc58354, 9.379061603042336, Thr64917), 
LMul78822 = multiply_layer([Con47544,Thr64917], Mul78822), 
exec_layers([LThr38666,LRes79304,LFla56099,LCon10726,LSub20519,LDot94636,LRes69304,LRes75985,LCon47544,LAdd57814,LRes67331,LLoc58354,LThr64917,LMul78822],["Thr38666","Res79304","Fla56099","Con10726","Sub20519","Dot94636","Res69304","Res75985","Con47544","Add57814","Res67331","Loc58354","Thr64917","Mul78822"],Mul78822,"Mul78822")

Actual (Unparsed): [[[[-0.0000000, 0.0000000]]]]

Expected (Unparsed): [[[[-0.0,0.0]]]]

Actual:   [[[[-0, 0]]]]

Expected: [[[[-0, 0]]]]