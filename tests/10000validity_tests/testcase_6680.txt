import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0LST13867 = tf.keras.layers.Input(shape=([3, 2]))
in0Min76851 = tf.keras.layers.Input(shape=([2, 2]))
in1Min76851 = tf.keras.layers.Input(shape=([2, 2]))

LST13867 = keras.layers.LSTM(1,recurrent_activation='sigmoid', name = 'LST13867', )(in0LST13867)
Res69165 = keras.layers.Reshape((1, 1), name = 'Res69165', )(LST13867)
Res42376 = keras.layers.Reshape((1, 1, 1), name = 'Res42376', )(Res69165)
Res8113 = keras.layers.Reshape((1, 1, 1, 1), name = 'Res8113', )(Res42376)
Zer47395 = keras.layers.ZeroPadding3D(padding=((3, 0), (3, 0), (2, 0)), name = 'Zer47395', )(Res8113)
Min76851 = keras.layers.Minimum(name = 'Min76851', )([in0Min76851,in1Min76851])
Res11949 = keras.layers.Reshape((2, 2, 1), name = 'Res11949', )(Min76851)
Res37559 = keras.layers.Reshape((2, 2, 1, 1), name = 'Res37559', )(Res11949)
Zer28576 = keras.layers.ZeroPadding3D(padding=((1, 1), (1, 1), (1, 1)), name = 'Zer28576', )(Res37559)
Mul61524 = keras.layers.Multiply(name = 'Mul61524', )([Zer47395,Zer28576])
model = tf.keras.models.Model(inputs=[in0LST13867,in0Min76851,in1Min76851], outputs=Mul61524)
w = model.get_layer('LST13867').get_weights() 
w[0] = np.array([[8, 3, 8, 1], [4, 10, 1, 1]])
w[1] = np.array([[10, 9, 5, 10]])
w[2] = np.array([8, 3, 8, 1])
model.get_layer('LST13867').set_weights(w) 
in0LST13867 = tf.constant([[[2, 2], [4, 3], [4, 7]]])
in0Min76851 = tf.constant([[[0.0252, 0.3593], [0.5144, 0.6533]]])
in1Min76851 = tf.constant([[[0.2594, 0.5711], [0.3673, 0.1331]]])
print (np.array2string(model.predict([in0LST13867,in0Min76851,in1Min76851],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Mul61524.png')

LLST13867 = lstm_layer([[[2, 2], [4, 3], [4, 7]]],[[8, 3, 8, 1], [4, 10, 1, 1]],[[10, 9, 5, 10]],[8, 3, 8, 1], LST13867), 
LRes69165 = reshape_layer(LST13867, [1, 1], Res69165), 
LRes42376 = reshape_layer(Res69165, [1, 1, 1], Res42376), 
LRes8113 = reshape_layer(Res42376, [1, 1, 1, 1], Res8113), 
LZer47395 = zero_padding3D_layer(Res8113, 3, 0, 3, 0, 2, 0, Zer47395), 
LMin76851 = minimum_layer([[[[0.0252, 0.3593], [0.5144, 0.6533]]], [[[0.2594, 0.5711], [0.3673, 0.1331]]]], Min76851), 
LRes11949 = reshape_layer(Min76851, [2, 2, 1], Res11949), 
LRes37559 = reshape_layer(Res11949, [2, 2, 1, 1], Res37559), 
LZer28576 = zero_padding3D_layer(Res37559, 1, 1, 1, 1, 1, 1, Zer28576), 
LMul61524 = multiply_layer([Zer47395,Zer28576], Mul61524), 
exec_layers([LLST13867,LRes69165,LRes42376,LRes8113,LZer47395,LMin76851,LRes11949,LRes37559,LZer28576,LMul61524],["LST13867","Res69165","Res42376","Res8113","Zer47395","Min76851","Res11949","Res37559","Zer28576","Mul61524"],Mul61524,"Mul61524")

Actual (Unparsed): [[[[[0.0000000], [0.0000000], [0.0000000]], [[0.0000000], [0.0000000], [0.0000000]], [[0.0000000], [0.0000000], [0.0000000]], [[0.0000000], [0.0000000], [0.0000000]]], [[[0.0000000], [0.0000000], [0.0000000]], [[0.0000000], [0.0000000], [0.0000000]], [[0.0000000], [0.0000000], [0.0000000]], [[0.0000000], [0.0000000], [0.0000000]]], [[[0.0000000], [0.0000000], [0.0000000]], [[0.0000000], [0.0000000], [0.0000000]], [[0.0000000], [0.0000000], [0.0000000]], [[0.0000000], [0.0000000], [0.0000000]]], [[[0.0000000], [0.0000000], [0.0000000]], [[0.0000000], [0.0000000], [0.0000000]], [[0.0000000], [0.0000000], [0.0000000]], [[0.0000000], [0.0000000], [0.0000000]]]]]

Expected (Unparsed): [[[[[0],[0],[0]],[[0],[0],[0]],[[0],[0],[0]],[[0],[0],[0]]],[[[0],[0],[0]],[[0],[0.0],[0]],[[0],[0.0],[0]],[[0],[0],[0]]],[[[0],[0],[0]],[[0],[0.0],[0]],[[0],[0.0],[0]],[[0],[0],[0]]],[[[0],[0],[0]],[[0],[0],[0]],[[0],[0],[0]],[[0],[0],[0.0]]]]]

Actual:   [[[[[0], [0], [0]], [[0], [0], [0]], [[0], [0], [0]], [[0], [0], [0]]], [[[0], [0], [0]], [[0], [0], [0]], [[0], [0], [0]], [[0], [0], [0]]], [[[0], [0], [0]], [[0], [0], [0]], [[0], [0], [0]], [[0], [0], [0]]], [[[0], [0], [0]], [[0], [0], [0]], [[0], [0], [0]], [[0], [0], [0]]]]]

Expected: [[[[[0], [0], [0]], [[0], [0], [0]], [[0], [0], [0]], [[0], [0], [0]]], [[[0], [0], [0]], [[0], [0], [0]], [[0], [0], [0]], [[0], [0], [0]]], [[[0], [0], [0]], [[0], [0], [0]], [[0], [0], [0]], [[0], [0], [0]]], [[[0], [0], [0]], [[0], [0], [0]], [[0], [0], [0]], [[0], [0], [0]]]]]