import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Thr27295 = tf.keras.layers.Input(shape=([2, 1, 2, 1]))

Thr27295 = keras.layers.ThresholdedReLU(theta=1.639935647319914, name = 'Thr27295', input_shape=(2, 1, 2, 1))(in0Thr27295)
ReL80567 = keras.layers.ReLU(max_value=6.953481765362983, negative_slope=7.627776546082817, threshold=0.16900799821001788, name = 'ReL80567', )(Thr27295)
Res32164 = keras.layers.Reshape((2, 1, 2), name = 'Res32164', )(ReL80567)
Res39618 = keras.layers.Reshape((2, 2), name = 'Res39618', )(Res32164)
Cro39492 = keras.layers.Cropping1D(cropping=((1, 0)), name = 'Cro39492', )(Res39618)
model = tf.keras.models.Model(inputs=[in0Thr27295], outputs=Cro39492)
in0Thr27295 = tf.constant([[[[[0.9015], [0.9384]]], [[[0.2277], [0.374]]]]])
print (np.array2string(model.predict([in0Thr27295],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Cro39492.png')

LThr27295 = thresholded_relu_layer([[[[[0.9015], [0.9384]]], [[[0.2277], [0.374]]]]], 1.639935647319914, Thr27295), 
LReL80567 = relu_layer(Thr27295, 6.953481765362983, 7.627776546082817, 0.16900799821001788, ReL80567), 
LRes32164 = reshape_layer(ReL80567, [2, 1, 2], Res32164), 
LRes39618 = reshape_layer(Res32164, [2, 2], Res39618), 
LCro39492 = cropping1D_layer(Res39618, 1, 0, Cro39492), 
exec_layers([LThr27295,LReL80567,LRes32164,LRes39618,LCro39492],["Thr27295","ReL80567","Res32164","Res39618","Cro39492"],Cro39492,"Cro39492")

Actual (Unparsed): [[[-1.2891552, -1.2891552]]]

Expected (Unparsed): [[[-1.2891552448467811,-1.2891552448467811]]]

Actual:   [[[-1.2891, -1.2891]]]

Expected: [[[-1.2891, -1.2891]]]