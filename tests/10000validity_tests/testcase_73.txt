import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Glo78240 = tf.keras.layers.Input(shape=([2, 2, 2, 1]))

Glo78240 = keras.layers.GlobalMaxPool3D(name = 'Glo78240', )(in0Glo78240)
Res24180 = keras.layers.Reshape((1, 1), name = 'Res24180', )(Glo78240)
Sim88567 = keras.layers.SimpleRNN(3,name = 'Sim88567', )(Res24180)
model = tf.keras.models.Model(inputs=[in0Glo78240], outputs=Sim88567)
w = model.get_layer('Sim88567').get_weights() 
w[0] = np.array([[8, 10, 7]])
w[1] = np.array([[10, 3, 7], [8, 9, 5], [10, 10, 6]])
w[2] = np.array([9, 2, 3])
model.get_layer('Sim88567').set_weights(w) 
in0Glo78240 = tf.constant([[[[[1.4796], [1.2555]], [[1.5636], [1.0922]]], [[[1.255], [1.5652]], [[1.7223], [1.4669]]]]])
print (np.array2string(model.predict([in0Glo78240],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Sim88567.png')

LGlo78240 = global_max_pool3D_layer([[[[[1.4796], [1.2555]], [[1.5636], [1.0922]]], [[[1.255], [1.5652]], [[1.7223], [1.4669]]]]], Glo78240), 
LRes24180 = reshape_layer(Glo78240, [1, 1], Res24180), 
LSim88567 = simple_rnn_layer(Res24180,[[8, 10, 7]],[[10, 3, 7], [8, 9, 5], [10, 10, 6]],[9, 2, 3], Sim88567), 
exec_layers([LGlo78240,LRes24180,LSim88567],["Glo78240","Res24180","Sim88567"],Sim88567,"Sim88567")

Actual (Unparsed): [[1.0000000, 1.0000000, 1.0000000]]

Expected (Unparsed): [[1.0,1.0,0.9999999999998327]]

Actual:   [[1, 1, 1]]

Expected: [[1, 1, 1]]