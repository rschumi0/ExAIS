import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Max30478 = tf.keras.layers.Input(shape=([1, 1]))
in1Max30478 = tf.keras.layers.Input(shape=([1, 1]))
in0Con95634 = tf.keras.layers.Input(shape=([1, 1]))
in0Add96478 = tf.keras.layers.Input(shape=([1, 2]))
in1Add96478 = tf.keras.layers.Input(shape=([1, 2]))
in0Con14721 = tf.keras.layers.Input(shape=([2, 3, 2, 1]))
in0Min83189 = tf.keras.layers.Input(shape=([2, 1, 2, 2]))
in1Min83189 = tf.keras.layers.Input(shape=([2, 1, 2, 2]))

Max30478 = keras.layers.Maximum(name = 'Max30478', )([in0Max30478,in1Max30478])
Con95634 = keras.layers.Concatenate(axis=2, name = 'Con95634', )([Max30478,in0Con95634])
Add96478 = keras.layers.Add(name = 'Add96478', )([in0Add96478,in1Add96478])
Sub1219 = keras.layers.Subtract(name = 'Sub1219', )([Con95634,Add96478])
Res83674 = keras.layers.Reshape((1, 2, 1), name = 'Res83674', )(Sub1219)
Res83090 = keras.layers.Reshape((1, 2, 1, 1), name = 'Res83090', )(Res83674)
Zer13075 = keras.layers.ZeroPadding3D(padding=((1, 0), (1, 0), (1, 0)), name = 'Zer13075', )(Res83090)
Con14721 = keras.layers.Concatenate(axis=4, name = 'Con14721', )([Zer13075,in0Con14721])
Min83189 = keras.layers.Minimum(name = 'Min83189', )([in0Min83189,in1Min83189])
Zer82666 = keras.layers.ZeroPadding3D(padding=((0, 0), (2, 0), (0, 0)), name = 'Zer82666', )(Min83189)
Max89430 = keras.layers.Maximum(name = 'Max89430', )([Con14721,Zer82666])
model = tf.keras.models.Model(inputs=[in0Max30478,in1Max30478,in0Con95634,in0Add96478,in1Add96478,in0Con14721,in0Min83189,in1Min83189], outputs=Max89430)
in0Max30478 = tf.constant([[[0.5295]]])
in1Max30478 = tf.constant([[[0.3506]]])
in0Con95634 = tf.constant([[[0.5137]]])
in0Add96478 = tf.constant([[[0.7655, 0.7887]]])
in1Add96478 = tf.constant([[[0.8552, 0.5401]]])
in0Con14721 = tf.constant([[[[[0.7878], [0.2199]], [[0.4269], [0.5763]], [[0.1864], [0.4987]]], [[[0.8851], [0.2356]], [[0.3213], [0.7682]], [[0.1373], [0.8589]]]]])
in0Min83189 = tf.constant([[[[[0.5213, 0.8018], [0.6907, 0.0112]]], [[[0.248, 0.1093], [0.8036, 0.083]]]]])
in1Min83189 = tf.constant([[[[[0.7588, 0.4243], [0.6152, 0.4376]]], [[[0.4849, 0.6992], [0.0602, 0.148]]]]])
print (np.array2string(model.predict([in0Max30478,in1Max30478,in0Con95634,in0Add96478,in1Add96478,in0Con14721,in0Min83189,in1Min83189],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Max89430.png')

LMax30478 = maximum_layer([[[[0.5295]]], [[[0.3506]]]], Max30478), 
LCon95634 = concatenate_layer([Max30478,[[[0.5137]]]], 2, Con95634), 
LAdd96478 = add_layer([[[[0.7655, 0.7887]]], [[[0.8552, 0.5401]]]], Add96478), 
LSub1219 = subtract_layer(Con95634,Add96478, Sub1219), 
LRes83674 = reshape_layer(Sub1219, [1, 2, 1], Res83674), 
LRes83090 = reshape_layer(Res83674, [1, 2, 1, 1], Res83090), 
LZer13075 = zero_padding3D_layer(Res83090, 1, 0, 1, 0, 1, 0, Zer13075), 
LCon14721 = concatenate_layer([Zer13075,[[[[[0.7878], [0.2199]], [[0.4269], [0.5763]], [[0.1864], [0.4987]]], [[[0.8851], [0.2356]], [[0.3213], [0.7682]], [[0.1373], [0.8589]]]]]], 4, Con14721), 
LMin83189 = minimum_layer([[[[[[0.5213, 0.8018], [0.6907, 0.0112]]], [[[0.248, 0.1093], [0.8036, 0.083]]]]], [[[[[0.7588, 0.4243], [0.6152, 0.4376]]], [[[0.4849, 0.6992], [0.0602, 0.148]]]]]], Min83189), 
LZer82666 = zero_padding3D_layer(Min83189, 0, 0, 2, 0, 0, 0, Zer82666), 
LMax89430 = maximum_layer([Con14721,Zer82666], Max89430), 
exec_layers([LMax30478,LCon95634,LAdd96478,LSub1219,LRes83674,LRes83090,LZer13075,LCon14721,LMin83189,LZer82666,LMax89430],["Max30478","Con95634","Add96478","Sub1219","Res83674","Res83090","Zer13075","Con14721","Min83189","Zer82666","Max89430"],Max89430,"Max89430")

Actual (Unparsed): [[[[[0.0000000, 0.7878000], [0.0000000, 0.2199000]], [[0.0000000, 0.4269000], [0.0000000, 0.5763000]], [[0.5213000, 0.4243000], [0.6152000, 0.4987000]]], [[[0.0000000, 0.8851000], [0.0000000, 0.2356000]], [[0.0000000, 0.3213000], [0.0000000, 0.7682000]], [[0.2480000, 0.1373000], [0.0602000, 0.8589000]]]]]

Expected (Unparsed): [[[[[0,0.7878],[0,0.2199]],[[0,0.4269],[0,0.5763]],[[0.5213,0.4243],[0.6152,0.4987]]],[[[0,0.8851],[0,0.2356]],[[0,0.3213],[0,0.7682]],[[0.248,0.1373],[0.0602,0.8589]]]]]

Actual:   [[[[[0, 0.7878], [0, 0.2199]], [[0, 0.4269], [0, 0.5763]], [[0.5213, 0.4243], [0.6152, 0.4987]]], [[[0, 0.8851], [0, 0.2356]], [[0, 0.3213], [0, 0.7682]], [[0.248, 0.1373], [0.0602, 0.8589]]]]]

Expected: [[[[[0, 0.7878], [0, 0.2199]], [[0, 0.4269], [0, 0.5763]], [[0.5213, 0.4243], [0.6152, 0.4987]]], [[[0, 0.8851], [0, 0.2356]], [[0, 0.3213], [0, 0.7682]], [[0.248, 0.1373], [0.0602, 0.8589]]]]]