import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Glo95923 = tf.keras.layers.Input(shape=([2, 1, 2, 1]))
in0Den71839 = tf.keras.layers.Input(shape=([5, 2, 2]))
in0Max163 = tf.keras.layers.Input(shape=([1, 2, 2, 1]))
in1Max163 = tf.keras.layers.Input(shape=([1, 2, 2, 1]))
in0Mul88190 = tf.keras.layers.Input(shape=([1, 2, 1]))
in1Mul88190 = tf.keras.layers.Input(shape=([1, 2, 1]))
in0Con10116 = tf.keras.layers.Input(shape=([3, 1]))
in0Dot49569 = tf.keras.layers.Input(shape=([3, 3]))
in1Dot49569 = tf.keras.layers.Input(shape=([3, 3]))
in0Con11680 = tf.keras.layers.Input(shape=([3, 13]))

Glo95923 = keras.layers.GlobalMaxPool3D(name = 'Glo95923', )(in0Glo95923)
Res47653 = keras.layers.Reshape((1, 1), name = 'Res47653', )(Glo95923)
Res85170 = keras.layers.Reshape((1, 1, 1), name = 'Res85170', )(Res47653)
Res59684 = keras.layers.Reshape((1, 1, 1, 1), name = 'Res59684', )(Res85170)
Zer30829 = keras.layers.ZeroPadding3D(padding=((3, 0), (1, 0), (1, 0)), name = 'Zer30829', )(Res59684)
Den71839 = keras.layers.Dense(2,name = 'Den71839', )(in0Den71839)
Loc23222 = keras.layers.LocallyConnected2D(2, (2, 1),strides=(1, 1), name = 'Loc23222', )(Den71839)
Res29434 = keras.layers.Reshape((4, 2, 2, 1), name = 'Res29434', )(Loc23222)
Max163 = keras.layers.Maximum(name = 'Max163', )([in0Max163,in1Max163])
Zer9797 = keras.layers.ZeroPadding3D(padding=((3, 0), (0, 0), (0, 0)), name = 'Zer9797', )(Max163)
Min38674 = keras.layers.Minimum(name = 'Min38674', )([Res29434,Zer9797])
Ave43849 = keras.layers.Average(name = 'Ave43849', )([Zer30829,Min38674])
Res54132 = keras.layers.Reshape((4, 2, 2), name = 'Res54132', )(Ave43849)
Res71100 = keras.layers.Reshape((4, 4), name = 'Res71100', )(Res54132)
Res13702 = keras.layers.Reshape((4, 4, 1), name = 'Res13702', )(Res71100)
Loc10116 = keras.layers.LocallyConnected2D(4, (2, 1),strides=(1, 1), name = 'Loc10116', )(Res13702)
Res73721 = keras.layers.Reshape((3, 16), name = 'Res73721', )(Loc10116)
Mul88190 = keras.layers.Multiply(name = 'Mul88190', )([in0Mul88190,in1Mul88190])
Res50322 = keras.layers.Reshape((1, 2), name = 'Res50322', )(Mul88190)
Zer42871 = keras.layers.ZeroPadding1D(padding=((2, 0)), name = 'Zer42871', )(Res50322)
Con10116 = keras.layers.Concatenate(axis=2, name = 'Con10116', )([Zer42871,in0Con10116])
Dot49569 = keras.layers.Dot(axes=(1, 1), name = 'Dot49569', )([in0Dot49569,in1Dot49569])
Min58616 = keras.layers.Minimum(name = 'Min58616', )([Con10116,Dot49569])
Con11680 = keras.layers.Concatenate(axis=2, name = 'Con11680', )([Min58616,in0Con11680])
Min31624 = keras.layers.Minimum(name = 'Min31624', )([Res73721,Con11680])
model = tf.keras.models.Model(inputs=[in0Glo95923,in0Den71839,in0Max163,in1Max163,in0Mul88190,in1Mul88190,in0Con10116,in0Dot49569,in1Dot49569,in0Con11680], outputs=Min31624)
w = model.get_layer('Den71839').get_weights() 
w[0] = np.array([[0.803, 0.5672], [0.2294, 0.9491]])
w[1] = np.array([0.078, 0.6904])
model.get_layer('Den71839').set_weights(w) 
w = model.get_layer('Loc23222').get_weights() 
w[0] = np.array([[[0.6931, 0.8341], [0.4116, 0.6216], [0.371, 0.5984], [0.1067, 0.8676]], [[0.0707, 0.0364], [0.2131, 0.0637], [0.4487, 0.0318], [0.9396, 0.0199]], [[0.5408, 0.4511], [0.8054, 0.6476], [0.6687, 0.3523], [0.5474, 0.4357]], [[0.7937, 0.31], [0.6215, 0.904], [0.1043, 0.7169], [0.1905, 0.0648]], [[0.8786, 0.3664], [0.4427, 0.1961], [0.5582, 0.9656], [0.1942, 0.9023]], [[0.5376, 0.4882], [0.9858, 0.5259], [0.3816, 0.4325], [0.3086, 0.4602]], [[0.0616, 0.1215], [0.1661, 0.8086], [0.3253, 0.1529], [0.9105, 0.1398]], [[0.5011, 0.9878], [0.1813, 0.7929], [0.88, 0.4538], [0.8168, 0.3053]]])
w[1] = np.array([[[0, 0], [0, 0]], [[0, 0], [0, 0]], [[0, 0], [0, 0]], [[0, 0], [0, 0]]])
model.get_layer('Loc23222').set_weights(w) 
w = model.get_layer('Loc10116').get_weights() 
w[0] = np.array([[[0.9032, 0.8176, 0.2937, 0.6716], [0.9784, 0.5996, 0.7456, 0.0332]], [[0.6108, 0.9598, 0.2574, 0.0419], [0.1433, 0.1826, 0.0475, 0.9811]], [[0.4868, 0.7271, 0.4076, 0.1401], [0.0559, 0.4869, 0.1026, 0.6076]], [[0.3065, 0.6696, 0.0459, 0.665], [0.4486, 0.0922, 0.0763, 0.3306]], [[0.8256, 0.6788, 0.033, 0.1762], [0.5284, 0.3389, 0.3546, 0.0079]], [[0.0404, 0.2109, 0.1127, 0.384], [0.103, 0.4591, 0.7313, 0.2308]], [[0.528, 0.4305, 0.6396, 0.0057], [0.3902, 0.9957, 0.7603, 0.9593]], [[0.8855, 0.3251, 0.0446, 0.0511], [0.1543, 0.1873, 0.2298, 0.9854]], [[0.5385, 0.0914, 0.6198, 0.6499], [0.0662, 0.2443, 0.9651, 0.9656]], [[0.4382, 0.3445, 0.4538, 0.7845], [0.43, 0.6908, 0.4177, 0.008]], [[0.4158, 0.9503, 0.6009, 0.5425], [0.6708, 0.1998, 0.7471, 0.0551]], [[0.2156, 0.5315, 0.815, 0.7505], [0.2291, 0.5965, 0.3531, 0.5474]]])
w[1] = np.array([[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]], [[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]], [[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]])
model.get_layer('Loc10116').set_weights(w) 
in0Glo95923 = tf.constant([[[[[1.408], [1.0389]]], [[[1.2035], [1.9182]]]]])
in0Den71839 = tf.constant([[[[0.5236, 0.5921], [0.9925, 0.871]], [[0.9098, 0.5215], [0.1619, 0.2608]], [[0.8803, 0.4425], [0.1908, 0.8089]], [[0.9655, 0.33], [0.3741, 0.9331]], [[0.0699, 0.6197], [0.0861, 0.1993]]]])
in0Max163 = tf.constant([[[[[0.4539], [0.3256]], [[0.3892], [0.2179]]]]])
in1Max163 = tf.constant([[[[[0.7784], [0.9976]], [[0.985], [0.8858]]]]])
in0Mul88190 = tf.constant([[[[0.5094], [0.0957]]]])
in1Mul88190 = tf.constant([[[[0.2678], [0.4563]]]])
in0Con10116 = tf.constant([[[0.34], [0.6125], [0.344]]])
in0Dot49569 = tf.constant([[[0.6943, 0.0235, 0.1605], [0.9098, 0.4966, 0.6255], [0.487, 0.4934, 0.9002]]])
in1Dot49569 = tf.constant([[[0.43, 0.8674, 0.0993], [0.6832, 0.298, 0.5095], [0.3602, 0.0977, 0.4251]]])
in0Con11680 = tf.constant([[[0.5566, 0.4126, 0.6554, 0.3799, 0.6737, 0.6655, 0.5241, 0.9697, 0.2478, 0.6121, 0.6019, 0.3608, 0.8356], [0.5541, 0.3694, 0.0582, 0.972, 0.7272, 0.0973, 0.1145, 0.9674, 0.5548, 0.8273, 0.7403, 0.2368, 0.1617], [0.9083, 0.3983, 0.159, 0.1216, 0.6475, 0.7191, 0.4697, 0.8319, 0.5347, 0.5133, 0.235, 0.6175, 0.9309]]])
print (np.array2string(model.predict([in0Glo95923,in0Den71839,in0Max163,in1Max163,in0Mul88190,in1Mul88190,in0Con10116,in0Dot49569,in1Dot49569,in0Con11680],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Min31624.png')

LGlo95923 = global_max_pool3D_layer([[[[[1.408], [1.0389]]], [[[1.2035], [1.9182]]]]], Glo95923), 
LRes47653 = reshape_layer(Glo95923, [1, 1], Res47653), 
LRes85170 = reshape_layer(Res47653, [1, 1, 1], Res85170), 
LRes59684 = reshape_layer(Res85170, [1, 1, 1, 1], Res59684), 
LZer30829 = zero_padding3D_layer(Res59684, 3, 0, 1, 0, 1, 0, Zer30829), 
LDen71839 = dense_layer([[[[0.5236, 0.5921], [0.9925, 0.871]], [[0.9098, 0.5215], [0.1619, 0.2608]], [[0.8803, 0.4425], [0.1908, 0.8089]], [[0.9655, 0.33], [0.3741, 0.9331]], [[0.0699, 0.6197], [0.0861, 0.1993]]]], [[0.803, 0.5672], [0.2294, 0.9491]],[0.078, 0.6904], Den71839), 
LLoc23222 = locally_connected2D_layer(Den71839, 2, 1,[[[0.6931, 0.8341], [0.4116, 0.6216], [0.371, 0.5984], [0.1067, 0.8676]], [[0.0707, 0.0364], [0.2131, 0.0637], [0.4487, 0.0318], [0.9396, 0.0199]], [[0.5408, 0.4511], [0.8054, 0.6476], [0.6687, 0.3523], [0.5474, 0.4357]], [[0.7937, 0.31], [0.6215, 0.904], [0.1043, 0.7169], [0.1905, 0.0648]], [[0.8786, 0.3664], [0.4427, 0.1961], [0.5582, 0.9656], [0.1942, 0.9023]], [[0.5376, 0.4882], [0.9858, 0.5259], [0.3816, 0.4325], [0.3086, 0.4602]], [[0.0616, 0.1215], [0.1661, 0.8086], [0.3253, 0.1529], [0.9105, 0.1398]], [[0.5011, 0.9878], [0.1813, 0.7929], [0.88, 0.4538], [0.8168, 0.3053]]],[[[0, 0], [0, 0]], [[0, 0], [0, 0]], [[0, 0], [0, 0]], [[0, 0], [0, 0]]], 1, 1, Loc23222), 
LRes29434 = reshape_layer(Loc23222, [4, 2, 2, 1], Res29434), 
LMax163 = maximum_layer([[[[[[0.4539], [0.3256]], [[0.3892], [0.2179]]]]], [[[[[0.7784], [0.9976]], [[0.985], [0.8858]]]]]], Max163), 
LZer9797 = zero_padding3D_layer(Max163, 3, 0, 0, 0, 0, 0, Zer9797), 
LMin38674 = minimum_layer([Res29434,Zer9797], Min38674), 
LAve43849 = average_layer([Zer30829,Min38674], Ave43849), 
LRes54132 = reshape_layer(Ave43849, [4, 2, 2], Res54132), 
LRes71100 = reshape_layer(Res54132, [4, 4], Res71100), 
LRes13702 = reshape_layer(Res71100, [4, 4, 1], Res13702), 
LLoc10116 = locally_connected2D_layer(Res13702, 2, 1,[[[0.9032, 0.8176, 0.2937, 0.6716], [0.9784, 0.5996, 0.7456, 0.0332]], [[0.6108, 0.9598, 0.2574, 0.0419], [0.1433, 0.1826, 0.0475, 0.9811]], [[0.4868, 0.7271, 0.4076, 0.1401], [0.0559, 0.4869, 0.1026, 0.6076]], [[0.3065, 0.6696, 0.0459, 0.665], [0.4486, 0.0922, 0.0763, 0.3306]], [[0.8256, 0.6788, 0.033, 0.1762], [0.5284, 0.3389, 0.3546, 0.0079]], [[0.0404, 0.2109, 0.1127, 0.384], [0.103, 0.4591, 0.7313, 0.2308]], [[0.528, 0.4305, 0.6396, 0.0057], [0.3902, 0.9957, 0.7603, 0.9593]], [[0.8855, 0.3251, 0.0446, 0.0511], [0.1543, 0.1873, 0.2298, 0.9854]], [[0.5385, 0.0914, 0.6198, 0.6499], [0.0662, 0.2443, 0.9651, 0.9656]], [[0.4382, 0.3445, 0.4538, 0.7845], [0.43, 0.6908, 0.4177, 0.008]], [[0.4158, 0.9503, 0.6009, 0.5425], [0.6708, 0.1998, 0.7471, 0.0551]], [[0.2156, 0.5315, 0.815, 0.7505], [0.2291, 0.5965, 0.3531, 0.5474]]],[[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]], [[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]], [[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]], 1, 1, Loc10116), 
LRes73721 = reshape_layer(Loc10116, [3, 16], Res73721), 
LMul88190 = multiply_layer([[[[[0.5094], [0.0957]]]], [[[[0.2678], [0.4563]]]]], Mul88190), 
LRes50322 = reshape_layer(Mul88190, [1, 2], Res50322), 
LZer42871 = zero_padding1D_layer(Res50322, 2, 0, Zer42871), 
LCon10116 = concatenate_layer([Zer42871,[[[0.34], [0.6125], [0.344]]]], 2, Con10116), 
LDot49569 = dot_layer([[[0.6943, 0.0235, 0.1605], [0.9098, 0.4966, 0.6255], [0.487, 0.4934, 0.9002]]], [[[0.43, 0.8674, 0.0993], [0.6832, 0.298, 0.5095], [0.3602, 0.0977, 0.4251]]], 1, 1, Dot49569), 
LMin58616 = minimum_layer([Con10116,Dot49569], Min58616), 
LCon11680 = concatenate_layer([Min58616,[[[0.5566, 0.4126, 0.6554, 0.3799, 0.6737, 0.6655, 0.5241, 0.9697, 0.2478, 0.6121, 0.6019, 0.3608, 0.8356], [0.5541, 0.3694, 0.0582, 0.972, 0.7272, 0.0973, 0.1145, 0.9674, 0.5548, 0.8273, 0.7403, 0.2368, 0.1617], [0.9083, 0.3983, 0.159, 0.1216, 0.6475, 0.7191, 0.4697, 0.8319, 0.5347, 0.5133, 0.235, 0.6175, 0.9309]]]], 2, Con11680), 
LMin31624 = minimum_layer([Res73721,Con11680], Min31624), 
exec_layers([LGlo95923,LRes47653,LRes85170,LRes59684,LZer30829,LDen71839,LLoc23222,LRes29434,LMax163,LZer9797,LMin38674,LAve43849,LRes54132,LRes71100,LRes13702,LLoc10116,LRes73721,LMul88190,LRes50322,LZer42871,LCon10116,LDot49569,LMin58616,LCon11680,LMin31624],["Glo95923","Res47653","Res85170","Res59684","Zer30829","Den71839","Loc23222","Res29434","Max163","Zer9797","Min38674","Ave43849","Res54132","Res71100","Res13702","Loc10116","Res73721","Mul88190","Res50322","Zer42871","Con10116","Dot49569","Min58616","Con11680","Min31624"],Min31624,"Min31624")

Actual (Unparsed): [[[0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000], [0.0257650, 0.0436679, 0.3440000, 0.3758115, 0.2144840, 0.1590000, 0.1216000, 0.0039904, 0.3303690, 0.0984015, 0.3679468, 0.0271368, 0.3211982, 0.2350000, 0.4950462, 0.7674548]]]

Expected (Unparsed): [[[0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0],[0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0],[0.025765039999999996,0.04366791,0.344,0.37581152,0.214484,0.159,0.1216,0.0039904,0.33036899999999997,0.0984015,0.36794675,0.02713675,0.3211982,0.235,0.4950462,0.7674548]]]

Actual:   [[[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0.0258, 0.0437, 0.344, 0.3759, 0.2145, 0.159, 0.1216, 0.004, 0.3304, 0.0985, 0.368, 0.0272, 0.3212, 0.235, 0.4951, 0.7675]]]

Expected: [[[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0.0258, 0.0437, 0.344, 0.3759, 0.2145, 0.159, 0.1216, 0.004, 0.3304, 0.0985, 0.368, 0.0272, 0.3212, 0.235, 0.4951, 0.7675]]]