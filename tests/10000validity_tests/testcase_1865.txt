import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Max12875 = tf.keras.layers.Input(shape=([1, 2, 2]))
in1Max12875 = tf.keras.layers.Input(shape=([1, 2, 2]))
in0Con22447 = tf.keras.layers.Input(shape=([2, 12]))
in0Up_89492 = tf.keras.layers.Input(shape=([2, 4, 4]))
in0Add49438 = tf.keras.layers.Input(shape=([2, 1]))
in1Add49438 = tf.keras.layers.Input(shape=([2, 1]))
in0Con56570 = tf.keras.layers.Input(shape=([2, 15]))

Max12875 = keras.layers.Maximum(name = 'Max12875', )([in0Max12875,in1Max12875])
Res83428 = keras.layers.Reshape((1, 4), name = 'Res83428', )(Max12875)
Zer73084 = keras.layers.ZeroPadding1D(padding=((1, 0)), name = 'Zer73084', )(Res83428)
Con22447 = keras.layers.Concatenate(axis=2, name = 'Con22447', )([Zer73084,in0Con22447])
Up_89492 = keras.layers.UpSampling2D(size=(1, 1), name = 'Up_89492', )(in0Up_89492)
Res15770 = keras.layers.Reshape((2, 16), name = 'Res15770', )(Up_89492)
Add49438 = keras.layers.Add(name = 'Add49438', )([in0Add49438,in1Add49438])
Con56570 = keras.layers.Concatenate(axis=2, name = 'Con56570', )([Add49438,in0Con56570])
Add58850 = keras.layers.Add(name = 'Add58850', )([Res15770,Con56570])
Add67948 = keras.layers.Add(name = 'Add67948', )([Con22447,Add58850])
model = tf.keras.models.Model(inputs=[in0Max12875,in1Max12875,in0Con22447,in0Up_89492,in0Add49438,in1Add49438,in0Con56570], outputs=Add67948)
in0Max12875 = tf.constant([[[[0.9664, 0.1373], [0.0433, 0.5212]]]])
in1Max12875 = tf.constant([[[[0.5649, 0.6339], [0.8408, 0.5732]]]])
in0Con22447 = tf.constant([[[0.8136, 0.8703, 0.0874, 0.9134, 0.8727, 0.6496, 0.8181, 0.3212, 0.4216, 0.9294, 0.0647, 0.189], [0.3006, 0.2636, 0.2611, 0.6549, 0.4003, 0.9889, 0.9436, 0.6121, 0.2598, 0.5908, 0.7455, 0.6753]]])
in0Up_89492 = tf.constant([[[[1.1594, 1.0539, 1.7171, 1.3124], [1.2453, 1.2479, 1.2506, 1.9356], [1.4257, 1.4202, 1.0335, 1.3494], [1.609, 1.5598, 1.834, 1.2862]], [[1.7503, 1.6406, 1.9214, 1.4263], [1.7259, 1.0274, 1.6445, 1.9689], [1.347, 1.0136, 1.228, 1.1631], [1.0965, 1.3113, 1.2758, 1.2818]]]])
in0Add49438 = tf.constant([[[0.9031], [0.6167]]])
in1Add49438 = tf.constant([[[0.6596], [0.4022]]])
in0Con56570 = tf.constant([[[0.33, 0.1384, 0.8435, 0.616, 0.4021, 0.7127, 0.5866, 0.8349, 0.7644, 0.5157, 0.5038, 0.5344, 0.4396, 0.6666, 0.1026], [0.8462, 0.5055, 0.805, 0.4459, 0.2127, 0.4414, 0.7153, 0.1424, 0.7237, 0.6422, 0.1204, 0.7936, 0.4104, 0.9086, 0.0714]]])
print (np.array2string(model.predict([in0Max12875,in1Max12875,in0Con22447,in0Up_89492,in0Add49438,in1Add49438,in0Con56570],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Add67948.png')

LMax12875 = maximum_layer([[[[[0.9664, 0.1373], [0.0433, 0.5212]]]], [[[[0.5649, 0.6339], [0.8408, 0.5732]]]]], Max12875), 
LRes83428 = reshape_layer(Max12875, [1, 4], Res83428), 
LZer73084 = zero_padding1D_layer(Res83428, 1, 0, Zer73084), 
LCon22447 = concatenate_layer([Zer73084,[[[0.8136, 0.8703, 0.0874, 0.9134, 0.8727, 0.6496, 0.8181, 0.3212, 0.4216, 0.9294, 0.0647, 0.189], [0.3006, 0.2636, 0.2611, 0.6549, 0.4003, 0.9889, 0.9436, 0.6121, 0.2598, 0.5908, 0.7455, 0.6753]]]], 2, Con22447), 
LUp_89492 = up_sampling2D_layer([[[[1.1594, 1.0539, 1.7171, 1.3124], [1.2453, 1.2479, 1.2506, 1.9356], [1.4257, 1.4202, 1.0335, 1.3494], [1.609, 1.5598, 1.834, 1.2862]], [[1.7503, 1.6406, 1.9214, 1.4263], [1.7259, 1.0274, 1.6445, 1.9689], [1.347, 1.0136, 1.228, 1.1631], [1.0965, 1.3113, 1.2758, 1.2818]]]], 1, 1, Up_89492), 
LRes15770 = reshape_layer(Up_89492, [2, 16], Res15770), 
LAdd49438 = add_layer([[[[0.9031], [0.6167]]], [[[0.6596], [0.4022]]]], Add49438), 
LCon56570 = concatenate_layer([Add49438,[[[0.33, 0.1384, 0.8435, 0.616, 0.4021, 0.7127, 0.5866, 0.8349, 0.7644, 0.5157, 0.5038, 0.5344, 0.4396, 0.6666, 0.1026], [0.8462, 0.5055, 0.805, 0.4459, 0.2127, 0.4414, 0.7153, 0.1424, 0.7237, 0.6422, 0.1204, 0.7936, 0.4104, 0.9086, 0.0714]]]], 2, Con56570), 
LAdd58850 = add_layer([Res15770,Con56570], Add58850), 
LAdd67948 = add_layer([Con22447,Add58850], Add67948), 
exec_layers([LMax12875,LRes83428,LZer73084,LCon22447,LUp_89492,LRes15770,LAdd49438,LCon56570,LAdd58850,LAdd67948],["Max12875","Res83428","Zer73084","Con22447","Up_89492","Res15770","Add49438","Con56570","Add58850","Add67948"],Add67948,"Add67948")

Actual (Unparsed): [[[2.7221000, 1.3839000, 1.8555000, 2.1559000, 2.6749001, 2.5203000, 2.0507000, 3.4356000, 3.1332999, 2.8342000, 2.3672999, 2.1744000, 2.5650000, 2.9288000, 2.5653000, 1.5778000], [3.7356001, 3.1206999, 3.2677000, 2.8045000, 2.4724000, 1.5037000, 2.3470000, 3.3391000, 1.8897000, 2.7262000, 2.8138000, 1.8956000, 2.1499000, 2.3125000, 2.9299000, 2.0285000]]]

Expected (Unparsed): [[[2.7221,1.3839000000000001,1.8555000000000001,2.1559,2.6749,2.5202999999999998,2.0507,3.4356,3.1333,2.8341999999999996,2.3673,2.1744,2.5649999999999995,2.9288,2.5653,1.5778],[3.7356,3.1207000000000003,3.2676999999999996,2.8045,2.4724000000000004,1.5037,2.347,3.3391,1.8897,2.7262,2.8138,1.8956,2.1498999999999997,2.3125,2.9299,2.0285]]]

Actual:   [[[2.7221, 1.3839, 1.8555, 2.1559, 2.675, 2.5203, 2.0507, 3.4356, 3.1333, 2.8342, 2.3673, 2.1744, 2.565, 2.9288, 2.5653, 1.5778], [3.7357, 3.1207, 3.2677, 2.8045, 2.4724, 1.5037, 2.347, 3.3391, 1.8897, 2.7262, 2.8138, 1.8956, 2.1499, 2.3125, 2.9299, 2.0285]]]

Expected: [[[2.7221, 1.384, 1.8556, 2.1559, 2.6749, 2.5203, 2.0507, 3.4356, 3.1333, 2.8342, 2.3673, 2.1744, 2.565, 2.9288, 2.5653, 1.5778], [3.7356, 3.1208, 3.2677, 2.8045, 2.4725, 1.5037, 2.347, 3.3391, 1.8897, 2.7262, 2.8138, 1.8956, 2.1499, 2.3125, 2.9299, 2.0285]]]