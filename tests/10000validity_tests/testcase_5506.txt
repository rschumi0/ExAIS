import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Max44138 = tf.keras.layers.Input(shape=([2, 2, 2]))
in1Max44138 = tf.keras.layers.Input(shape=([2, 2, 2]))

Max44138 = keras.layers.Maximum(name = 'Max44138', )([in0Max44138,in1Max44138])
Res76412 = keras.layers.Reshape((2, 2, 2, 1), name = 'Res76412', )(Max44138)
PRe92192 = keras.layers.PReLU(name = 'PRe92192', )(Res76412)
model = tf.keras.models.Model(inputs=[in0Max44138,in1Max44138], outputs=PRe92192)
w = model.get_layer('PRe92192').get_weights() 
w[0] = np.array([[[[0.5078], [0.3763]], [[0.5183], [0.3823]]], [[[0.4401], [0.3602]], [[0.344], [0.999]]]])
model.get_layer('PRe92192').set_weights(w) 
in0Max44138 = tf.constant([[[[0.8162, 0.9474], [0.4528, 0.1747]], [[0.3074, 0.3043], [0.7637, 0.6456]]]])
in1Max44138 = tf.constant([[[[0.1841, 0.4175], [0.7601, 0.7189]], [[0.315, 0.1086], [0.2085, 0.9179]]]])
print (np.array2string(model.predict([in0Max44138,in1Max44138],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='PRe92192.png')

LMax44138 = maximum_layer([[[[[0.8162, 0.9474], [0.4528, 0.1747]], [[0.3074, 0.3043], [0.7637, 0.6456]]]], [[[[0.1841, 0.4175], [0.7601, 0.7189]], [[0.315, 0.1086], [0.2085, 0.9179]]]]], Max44138), 
LRes76412 = reshape_layer(Max44138, [2, 2, 2, 1], Res76412), 
LPRe92192 = prelu_layer(Res76412, [[[[0.5078], [0.3763]], [[0.5183], [0.3823]]], [[[0.4401], [0.3602]], [[0.344], [0.999]]]], PRe92192), 
exec_layers([LMax44138,LRes76412,LPRe92192],["Max44138","Res76412","PRe92192"],PRe92192,"PRe92192")

Actual (Unparsed): [[[[[0.8162000], [0.9474000]], [[0.7601000], [0.7189000]]], [[[0.3150000], [0.3043000]], [[0.7637000], [0.9179000]]]]]

Expected (Unparsed): [[[[[0.8162],[0.9474]],[[0.7601],[0.7189]]],[[[0.315],[0.3043]],[[0.7637],[0.9179]]]]]

Actual:   [[[[[0.8162], [0.9474]], [[0.7601], [0.7189]]], [[[0.315], [0.3043]], [[0.7637], [0.9179]]]]]

Expected: [[[[[0.8162], [0.9474]], [[0.7601], [0.7189]]], [[[0.315], [0.3043]], [[0.7637], [0.9179]]]]]