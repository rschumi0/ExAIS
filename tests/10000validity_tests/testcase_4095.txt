import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Min81672 = tf.keras.layers.Input(shape=([2, 1]))
in1Min81672 = tf.keras.layers.Input(shape=([2, 1]))

Min81672 = keras.layers.Minimum(name = 'Min81672', )([in0Min81672,in1Min81672])
Thr90539 = keras.layers.ThresholdedReLU(theta=1.0910418512866797, name = 'Thr90539', )(Min81672)
model = tf.keras.models.Model(inputs=[in0Min81672,in1Min81672], outputs=Thr90539)
in0Min81672 = tf.constant([[[0.8131], [0.7917]]])
in1Min81672 = tf.constant([[[0.5125], [0.3974]]])
print (np.array2string(model.predict([in0Min81672,in1Min81672],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Thr90539.png')

LMin81672 = minimum_layer([[[[0.8131], [0.7917]]], [[[0.5125], [0.3974]]]], Min81672), 
LThr90539 = thresholded_relu_layer(Min81672, 1.0910418512866797, Thr90539), 
exec_layers([LMin81672,LThr90539],["Min81672","Thr90539"],Thr90539,"Thr90539")

Actual (Unparsed): [[[0.0000000], [0.0000000]]]

Expected (Unparsed): [[[0],[0]]]

Actual:   [[[0], [0]]]

Expected: [[[0], [0]]]