import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Zer91183 = tf.keras.layers.Input(shape=([4, 4, 4]))
in0Dot38336 = tf.keras.layers.Input(shape=([3, 3]))
in1Dot38336 = tf.keras.layers.Input(shape=([3, 3]))
in0Con57970 = tf.keras.layers.Input(shape=([6, 21]))

Zer91183 = keras.layers.ZeroPadding2D(padding=((1, 1), (1, 1)), name = 'Zer91183', )(in0Zer91183)
Res89725 = keras.layers.Reshape((6, 24), name = 'Res89725', )(Zer91183)
Dot38336 = keras.layers.Dot(axes=(1, 2), name = 'Dot38336', )([in0Dot38336,in1Dot38336])
Zer77363 = keras.layers.ZeroPadding1D(padding=((3, 0)), name = 'Zer77363', )(Dot38336)
Con57970 = keras.layers.Concatenate(axis=2, name = 'Con57970', )([Zer77363,in0Con57970])
Ave57813 = keras.layers.Average(name = 'Ave57813', )([Res89725,Con57970])
Bat81910 = keras.layers.BatchNormalization(axis=2, epsilon=0.8000306453807322,  name = 'Bat81910', )(Ave57813)
model = tf.keras.models.Model(inputs=[in0Zer91183,in0Dot38336,in1Dot38336,in0Con57970], outputs=Bat81910)
w = model.get_layer('Bat81910').get_weights() 
w[0] = np.array([0.0997, 0.8174, 0.1124, 0.6972, 0.071, 0.926, 0.4479, 0.6937, 0.8182, 0.0444, 0.6485, 0.9887, 0.7544, 0.2439, 0.3086, 0.8126, 0.4517, 0.426, 0.4695, 0.2959, 0.9358, 0.4507, 0.0855, 0.7501])
w[1] = np.array([0.2901, 0.08, 0.8005, 0.0836, 0.7385, 0.4583, 0.6342, 0.4894, 0.9926, 0.2516, 0.4345, 0.2126, 0.7982, 0.7621, 0.2428, 0.1629, 0.2995, 0.299, 0.0418, 0.3699, 0.046, 0.8426, 0.7046, 0.797])
w[2] = np.array([0.2162, 0.5663, 0.3514, 0.8264, 0.9025, 0.0975, 0.7329, 0.8087, 0.1087, 0.4926, 0.706, 0.4294, 0.4489, 0.7762, 0.3458, 0.2858, 0.4041, 0.5533, 0.746, 0.993, 0.3918, 0.6404, 0.0998, 0.3386])
w[3] = np.array([0.8364, 0.8827, 0.2254, 0.4944, 0.8874, 0.3232, 0.3018, 0.0566, 0.4285, 0.6751, 0.2147, 0.7373, 0.5424, 0.6085, 0.5783, 0.8561, 0.6536, 0.711, 0.1933, 0.3927, 0.1578, 0.1043, 0.4304, 0.2535])
model.get_layer('Bat81910').set_weights(w) 
in0Zer91183 = tf.constant([[[[1.4325, 1.5309, 1.5061, 1.3532], [1.8108, 1.121, 1.035, 1.0769], [1.6228, 1.6489, 1.992, 1.5929], [1.9954, 1.715, 1.9555, 1.7205]], [[1.2508, 1.5463, 1.27, 1.1085], [1.5479, 1.2429, 1.152, 1.9913], [1.3928, 1.5858, 1.8247, 1.0366], [1.3031, 1.2216, 1.741, 1.6145]], [[1.7142, 1.1373, 1.3965, 1.1784], [1.5538, 1.2132, 1.7143, 1.0893], [1.7775, 1.2996, 1.4916, 1.1382], [1.561, 1.7019, 1.9368, 1.2256]], [[1.7703, 1.1767, 1.8996, 1.1423], [1.7981, 1.5449, 1.9969, 1.1614], [1.8448, 1.808, 1.4719, 1.2011], [1.2467, 1.2185, 1.2893, 1.6458]]]])
in0Dot38336 = tf.constant([[[0.5119, 0.0995, 0.6655], [0.5223, 0.3098, 0.3339], [0.9588, 0.6231, 0.778]]])
in1Dot38336 = tf.constant([[[0.3537, 0.6065, 0.3365], [0.1602, 0.1432, 0.583], [0.4025, 0.9701, 0.2458]]])
in0Con57970 = tf.constant([[[0.8263, 0.8552, 0.6166, 0.2649, 0.9669, 0.3935, 0.4778, 0.7091, 0.7313, 0.87, 0.2236, 0.6676, 0.2517, 0.4989, 0.8274, 0.0255, 0.9814, 0.205, 0.7946, 0.4578, 0.9204], [0.1431, 0.1648, 0.3748, 0.1667, 0.072, 0.325, 0.9001, 0.6787, 0.7706, 0.4487, 0.9858, 0.7542, 0.0897, 0.6392, 0.444, 0.8807, 0.4229, 0.1398, 0.6259, 0.2911, 0.3467], [0.3012, 0.7162, 0.7724, 0.9363, 0.3429, 0.1276, 0.0172, 0.789, 0.3337, 0.2766, 0.0828, 0.1069, 0.2289, 0.1021, 0.3272, 0.2809, 0.2489, 0.0482, 0.5302, 0.2962, 0.3629], [0.8748, 0.7742, 0.9365, 0.1454, 0.5807, 0.0591, 0.2006, 0.8207, 0.9302, 0.5571, 0.5692, 0.8748, 0.5588, 0.8747, 0.7552, 0.22, 0.3986, 0.6816, 0.3572, 0.5327, 0.2147], [0.5916, 0.3977, 0.0458, 0.3712, 0.2369, 0.0724, 0.7769, 0.5549, 0.0615, 0.1625, 0.9001, 0.0794, 0.4804, 0.4709, 0.7268, 0.5618, 0.6993, 0.3287, 0.5531, 0.2212, 0.6702], [0.6916, 0.4495, 0.7804, 0.3708, 0.5942, 0.9261, 0.9726, 0.8379, 0.7623, 0.2841, 0.9493, 0.1606, 0, 0.3846, 0.4668, 0.943, 0.5589, 0.51, 0.5878, 0.5856, 0.0751]]])
print (np.array2string(model.predict([in0Zer91183,in0Dot38336,in1Dot38336,in0Con57970],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Bat81910.png')

LZer91183 = zero_padding2D_layer([[[[1.4325, 1.5309, 1.5061, 1.3532], [1.8108, 1.121, 1.035, 1.0769], [1.6228, 1.6489, 1.992, 1.5929], [1.9954, 1.715, 1.9555, 1.7205]], [[1.2508, 1.5463, 1.27, 1.1085], [1.5479, 1.2429, 1.152, 1.9913], [1.3928, 1.5858, 1.8247, 1.0366], [1.3031, 1.2216, 1.741, 1.6145]], [[1.7142, 1.1373, 1.3965, 1.1784], [1.5538, 1.2132, 1.7143, 1.0893], [1.7775, 1.2996, 1.4916, 1.1382], [1.561, 1.7019, 1.9368, 1.2256]], [[1.7703, 1.1767, 1.8996, 1.1423], [1.7981, 1.5449, 1.9969, 1.1614], [1.8448, 1.808, 1.4719, 1.2011], [1.2467, 1.2185, 1.2893, 1.6458]]]], 1, 1, 1, 1, Zer91183), 
LRes89725 = reshape_layer(Zer91183, [6, 24], Res89725), 
LDot38336 = dot_layer([[[0.5119, 0.0995, 0.6655], [0.5223, 0.3098, 0.3339], [0.9588, 0.6231, 0.778]]], [[[0.3537, 0.6065, 0.3365], [0.1602, 0.1432, 0.583], [0.4025, 0.9701, 0.2458]]], 1, 2, Dot38336), 
LZer77363 = zero_padding1D_layer(Dot38336, 3, 0, Zer77363), 
LCon57970 = concatenate_layer([Zer77363,[[[0.8263, 0.8552, 0.6166, 0.2649, 0.9669, 0.3935, 0.4778, 0.7091, 0.7313, 0.87, 0.2236, 0.6676, 0.2517, 0.4989, 0.8274, 0.0255, 0.9814, 0.205, 0.7946, 0.4578, 0.9204], [0.1431, 0.1648, 0.3748, 0.1667, 0.072, 0.325, 0.9001, 0.6787, 0.7706, 0.4487, 0.9858, 0.7542, 0.0897, 0.6392, 0.444, 0.8807, 0.4229, 0.1398, 0.6259, 0.2911, 0.3467], [0.3012, 0.7162, 0.7724, 0.9363, 0.3429, 0.1276, 0.0172, 0.789, 0.3337, 0.2766, 0.0828, 0.1069, 0.2289, 0.1021, 0.3272, 0.2809, 0.2489, 0.0482, 0.5302, 0.2962, 0.3629], [0.8748, 0.7742, 0.9365, 0.1454, 0.5807, 0.0591, 0.2006, 0.8207, 0.9302, 0.5571, 0.5692, 0.8748, 0.5588, 0.8747, 0.7552, 0.22, 0.3986, 0.6816, 0.3572, 0.5327, 0.2147], [0.5916, 0.3977, 0.0458, 0.3712, 0.2369, 0.0724, 0.7769, 0.5549, 0.0615, 0.1625, 0.9001, 0.0794, 0.4804, 0.4709, 0.7268, 0.5618, 0.6993, 0.3287, 0.5531, 0.2212, 0.6702], [0.6916, 0.4495, 0.7804, 0.3708, 0.5942, 0.9261, 0.9726, 0.8379, 0.7623, 0.2841, 0.9493, 0.1606, 0, 0.3846, 0.4668, 0.943, 0.5589, 0.51, 0.5878, 0.5856, 0.0751]]]], 2, Con57970), 
LAve57813 = average_layer([Res89725,Con57970], Ave57813), 
LBat81910 = batch_normalization_layer(Ave57813, 2, 0.8000306453807322, [0.0997, 0.8174, 0.1124, 0.6972, 0.071, 0.926, 0.4479, 0.6937, 0.8182, 0.0444, 0.6485, 0.9887, 0.7544, 0.2439, 0.3086, 0.8126, 0.4517, 0.426, 0.4695, 0.2959, 0.9358, 0.4507, 0.0855, 0.7501], [0.2901, 0.08, 0.8005, 0.0836, 0.7385, 0.4583, 0.6342, 0.4894, 0.9926, 0.2516, 0.4345, 0.2126, 0.7982, 0.7621, 0.2428, 0.1629, 0.2995, 0.299, 0.0418, 0.3699, 0.046, 0.8426, 0.7046, 0.797], [0.2162, 0.5663, 0.3514, 0.8264, 0.9025, 0.0975, 0.7329, 0.8087, 0.1087, 0.4926, 0.706, 0.4294, 0.4489, 0.7762, 0.3458, 0.2858, 0.4041, 0.5533, 0.746, 0.993, 0.3918, 0.6404, 0.0998, 0.3386], [0.8364, 0.8827, 0.2254, 0.4944, 0.8874, 0.3232, 0.3018, 0.0566, 0.4285, 0.6751, 0.2147, 0.7373, 0.5424, 0.6085, 0.5783, 0.8561, 0.6536, 0.711, 0.1933, 0.3927, 0.1578, 0.1043, 0.4304, 0.2535], Bat81910), 
exec_layers([LZer91183,LRes89725,LDot38336,LZer77363,LCon57970,LAve57813,LBat81910],["Zer91183","Res89725","Dot38336","Zer77363","Con57970","Ave57813","Bat81910"],Bat81910,"Bat81910")

Actual (Unparsed): [[[0.2732499, -0.2768403, 0.7614955, -0.1696391, 0.7125434, 0.6424820, 0.3779874, 0.2456233, 1.0575974, 0.2423255, 0.2082450, 0.1617652, 0.7891495, 0.6255605, 0.2396457, 0.0619018, 0.2415607, 0.2506208, -0.3036146, 0.2338066, -0.2306223, 0.7273850, 0.7145509, 0.8858647], [0.2732499, -0.2768403, 0.7614955, -0.3789713, 0.7328239, 1.2056437, 0.6783636, 0.4173725, 1.7006691, 0.2705346, 0.5316135, 0.6067989, 1.1803051, 0.8733106, 0.5128328, 0.5136629, 0.6416283, 0.4813576, 0.3584085, 0.3912230, -0.2617936, 0.6874081, 0.7081264, 0.6762361], [0.2732499, -0.2768403, 0.7614955, -0.3305295, 0.7429272, 1.3860687, 0.7921860, 0.4271910, 1.5307753, 0.2566247, 0.6047787, 0.7971802, 1.0493990, 0.7740400, 0.4057712, 0.3819768, 0.4113323, 0.3756235, 0.1666109, 0.3532914, -0.3055866, 0.6647301, 0.7083229, 0.6821556], [0.3052226, -0.0513245, 0.8141303, -0.1547788, 0.7571763, 1.2790806, 0.6504360, 0.5425025, 1.5076701, 0.2594341, 0.7959801, 0.6753761, 1.2659589, 0.7946114, 0.4629163, 0.5182092, 0.6043696, 0.5330117, 0.1983848, 0.3208869, -0.0027651, 0.6237342, 0.7174376, 0.6280037], [0.2901140, -0.1433889, 0.7888976, -0.2415511, 0.7484202, 0.9071780, 0.8059471, 0.4001339, 1.6027486, 0.2760309, 0.8013878, 0.3577682, 1.1594044, 0.8808528, 0.3557890, 0.5133156, 0.4698523, 0.4443281, 0.1263812, 0.4185473, -0.1714826, 0.6701567, 0.7054325, 0.7944422], [0.3005161, -0.0852815, 0.8049517, -0.2109111, 0.7014563, 0.7140403, 0.4005812, 0.1059529, 1.2541766, 0.2513697, 0.2497042, 0.1741250, 0.5984063, 0.7001291, 0.1730115, -0.0175645, 0.2201496, 0.1881369, -0.0875097, 0.1765705, -0.0848051, 0.6783796, 0.7194763, 0.5769942]]]

Expected (Unparsed): [[[0.27324991694133866,-0.2768402976727127,0.7614954813930341,-0.1696391502520856,0.7125434150772292,0.642481973146199,0.37798739744809384,0.24562329856647064,1.0575973781181967,0.24232554935066813,0.20824502376139783,0.1617652044788281,0.7891495421296689,0.6255605107664377,0.2396457184066218,0.06190176933976371,0.2415607352349254,0.25062083357393766,-0.3036146483393717,0.23380663439688634,-0.23062225065332742,0.7273850348448001,0.7145509326620961,0.8858646743847928],[0.27324991694133866,-0.2768402976727127,0.7614954813930341,-0.3789712584822428,0.7328238758807544,1.2056436941679383,0.6783635512767463,0.4173725103527681,1.7006691094943114,0.27053457514316687,0.5316135671236111,0.6067989202492755,1.180305122388764,0.873310633050485,0.5128327900731181,0.5136628454627148,0.641628267594349,0.48135757430798,0.3584085034420617,0.3912230099003883,-0.2617936484110131,0.6874081433974899,0.7081263762144918,0.676236123009153],[0.27324991694133866,-0.2768402976727127,0.7614954813930341,-0.33052950451387647,0.7429272128421657,1.386068634655083,0.7921860372967662,0.4271910339155021,1.5307753380700873,0.25662472700729466,0.6047786775220096,0.7971802132795468,1.0493990393074637,0.7740400125293045,0.4057712156578733,0.3819768123011501,0.41133233451260753,0.37562345055016033,0.16661092543814054,0.3532913531525565,-0.3055865937270255,0.664730084645222,0.7083229283313651,0.6821555626680085],[0.3052226058408642,-0.05132449489519554,0.8141302711039936,-0.1547787766438265,0.7571762793600987,1.2790805767245703,0.6504359722326589,0.5425024728564659,1.5076700804312508,0.2594341142063532,0.7959800658926595,0.6753760561680329,1.2659589161184086,0.7946113594171427,0.46291628385790823,0.5182091865740228,0.6043695551411536,0.5330116914699039,0.19838483342380794,0.32088688067369453,-0.0027650701117168802,0.6237342208610804,0.7174375510059806,0.6280036517147753],[0.2901140287463023,-0.1433889073179559,0.7888976380859302,-0.24155110253782602,0.7484202361833712,0.9071780299044583,0.8059471438540132,0.4001338811968229,1.6027485847086353,0.27603088438686824,0.8013877819273848,0.35776822783732304,1.1594044247169921,0.8808527752161559,0.35578899524280133,0.5133155555167122,0.4698523031922367,0.4443281048765705,0.126381248018185,0.4185473497790943,-0.17148265091980402,0.6701567047646257,0.7054324560244046,0.7944422174313588],[0.30051613759514334,-0.0852815260033858,0.8049516953741349,-0.21091115695378665,0.7014562530397811,0.7140403393733039,0.4005812142606901,0.10595292712254073,1.2541766148345592,0.25136969239617346,0.2497041800276263,0.17412503711534835,0.598406259171863,0.7001290743853391,0.17301151974650747,-0.017564484668305902,0.22014961993376791,0.18813685286749754,-0.08750967742128543,0.17657047376846155,-0.08480512924084059,0.678379574552543,0.7194762974731568,0.576994159345873]]]

Actual:   [[[0.2733, -0.2768, 0.7615, -0.1696, 0.7126, 0.6425, 0.378, 0.2457, 1.0576, 0.2424, 0.2083, 0.1618, 0.7892, 0.6256, 0.2397, 0.062, 0.2416, 0.2507, -0.3036, 0.2339, -0.2306, 0.7274, 0.7146, 0.8859], [0.2733, -0.2768, 0.7615, -0.3789, 0.7329, 1.2057, 0.6784, 0.4174, 1.7007, 0.2706, 0.5317, 0.6068, 1.1804, 0.8734, 0.5129, 0.5137, 0.6417, 0.4814, 0.3585, 0.3913, -0.2617, 0.6875, 0.7082, 0.6763], [0.2733, -0.2768, 0.7615, -0.3305, 0.743, 1.3861, 0.7922, 0.4272, 1.5308, 0.2567, 0.6048, 0.7972, 1.0494, 0.7741, 0.4058, 0.382, 0.4114, 0.3757, 0.1667, 0.3533, -0.3055, 0.6648, 0.7084, 0.6822], [0.3053, -0.0513, 0.8142, -0.1547, 0.7572, 1.2791, 0.6505, 0.5426, 1.5077, 0.2595, 0.796, 0.6754, 1.266, 0.7947, 0.463, 0.5183, 0.6044, 0.5331, 0.1984, 0.3209, -0.0027, 0.6238, 0.7175, 0.6281], [0.2902, -0.1433, 0.7889, -0.2415, 0.7485, 0.9072, 0.806, 0.4002, 1.6028, 0.2761, 0.8014, 0.3578, 1.1595, 0.8809, 0.3558, 0.5134, 0.4699, 0.4444, 0.1264, 0.4186, -0.1714, 0.6702, 0.7055, 0.7945], [0.3006, -0.0852, 0.805, -0.2109, 0.7015, 0.7141, 0.4006, 0.106, 1.2542, 0.2514, 0.2498, 0.1742, 0.5985, 0.7002, 0.1731, -0.0175, 0.2202, 0.1882, -0.0875, 0.1766, -0.0848, 0.6784, 0.7195, 0.577]]]

Expected: [[[0.2733, -0.2768, 0.7615, -0.1696, 0.7126, 0.6425, 0.378, 0.2457, 1.0576, 0.2424, 0.2083, 0.1618, 0.7892, 0.6256, 0.2397, 0.062, 0.2416, 0.2507, -0.3036, 0.2339, -0.2306, 0.7274, 0.7146, 0.8859], [0.2733, -0.2768, 0.7615, -0.3789, 0.7329, 1.2057, 0.6784, 0.4174, 1.7007, 0.2706, 0.5317, 0.6068, 1.1804, 0.8734, 0.5129, 0.5137, 0.6417, 0.4814, 0.3585, 0.3913, -0.2617, 0.6875, 0.7082, 0.6763], [0.2733, -0.2768, 0.7615, -0.3305, 0.743, 1.3861, 0.7922, 0.4272, 1.5308, 0.2567, 0.6048, 0.7972, 1.0494, 0.7741, 0.4058, 0.382, 0.4114, 0.3757, 0.1667, 0.3533, -0.3055, 0.6648, 0.7084, 0.6822], [0.3053, -0.0513, 0.8142, -0.1547, 0.7572, 1.2791, 0.6505, 0.5426, 1.5077, 0.2595, 0.796, 0.6754, 1.266, 0.7947, 0.463, 0.5183, 0.6044, 0.5331, 0.1984, 0.3209, -0.0027, 0.6238, 0.7175, 0.6281], [0.2902, -0.1433, 0.7889, -0.2415, 0.7485, 0.9072, 0.806, 0.4002, 1.6028, 0.2761, 0.8014, 0.3578, 1.1595, 0.8809, 0.3558, 0.5134, 0.4699, 0.4444, 0.1264, 0.4186, -0.1714, 0.6702, 0.7055, 0.7945], [0.3006, -0.0852, 0.805, -0.2109, 0.7015, 0.7141, 0.4006, 0.106, 1.2542, 0.2514, 0.2498, 0.1742, 0.5985, 0.7002, 0.1731, -0.0175, 0.2202, 0.1882, -0.0875, 0.1766, -0.0848, 0.6784, 0.7195, 0.577]]]