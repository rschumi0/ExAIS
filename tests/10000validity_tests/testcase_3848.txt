import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Con43829 = tf.keras.layers.Input(shape=([2, 1]))

Con43829 = keras.layers.Conv1D(2, (2),strides=(1), padding='valid', dilation_rate=(1), name = 'Con43829', )(in0Con43829)
Zer11082 = keras.layers.ZeroPadding1D(padding=((1, 1)), name = 'Zer11082', )(Con43829)
model = tf.keras.models.Model(inputs=[in0Con43829], outputs=Zer11082)
w = model.get_layer('Con43829').get_weights() 
w[0] = np.array([[[0.2388, 0.863]], [[0.076, 0.6497]]])
w[1] = np.array([0, 0])
model.get_layer('Con43829').set_weights(w) 
in0Con43829 = tf.constant([[[0.597], [0.3105]]])
print (np.array2string(model.predict([in0Con43829],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Zer11082.png')

LCon43829 = conv1D_layer([[[0.597], [0.3105]]], 2,[[[0.2388, 0.863]], [[0.076, 0.6497]]],[0, 0], 1, false, 1, Con43829), 
LZer11082 = zero_padding1D_layer(Con43829, 1, 1, Zer11082), 
exec_layers([LCon43829,LZer11082],["Con43829","Zer11082"],Zer11082,"Zer11082")

Actual (Unparsed): [[[0.0000000, 0.0000000], [0.1661616, 0.7169428], [0.0000000, 0.0000000]]]

Expected (Unparsed): [[[0,0],[0.16616160000000002,0.71694285],[0,0]]]

Actual:   [[[0, 0], [0.1662, 0.717], [0, 0]]]

Expected: [[[0, 0], [0.1662, 0.717], [0, 0]]]