import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Thr69733 = tf.keras.layers.Input(shape=([2, 1, 2, 2]))
in0Up_34215 = tf.keras.layers.Input(shape=([3, 4]))

Thr69733 = keras.layers.ThresholdedReLU(theta=1.244675464719919, name = 'Thr69733', input_shape=(2, 1, 2, 2))(in0Thr69733)
Res47903 = keras.layers.Reshape((2, 1, 4), name = 'Res47903', )(Thr69733)
Res47944 = keras.layers.Reshape((2, 4), name = 'Res47944', )(Res47903)
Zer94231 = keras.layers.ZeroPadding1D(padding=((4, 0)), name = 'Zer94231', )(Res47944)
Up_34215 = keras.layers.UpSampling1D(size=(2), name = 'Up_34215', )(in0Up_34215)
Min98018 = keras.layers.Minimum(name = 'Min98018', )([Zer94231,Up_34215])
Res63253 = keras.layers.Reshape((6, 4, 1), name = 'Res63253', )(Min98018)
Con81942 = keras.layers.Conv2D(2, (3, 1),strides=(1, 1), padding='same', dilation_rate=(1, 1), name = 'Con81942', )(Res63253)
model = tf.keras.models.Model(inputs=[in0Thr69733,in0Up_34215], outputs=Con81942)
w = model.get_layer('Con81942').get_weights() 
w[0] = np.array([[[[0.4951, 0.6836]]], [[[0.3372, 0.9388]]], [[[0.6338, 0.2287]]]])
w[1] = np.array([0, 0])
model.get_layer('Con81942').set_weights(w) 
in0Thr69733 = tf.constant([[[[[0.5534, 0.1566], [0.7857, 0.4295]]], [[[0.4019, 0.4803], [0.2359, 0.9837]]]]])
in0Up_34215 = tf.constant([[[1.1869, 1.4027, 1.1108, 1.4586], [1.3703, 1.1071, 1.9858, 1.2228], [1.5256, 1.1165, 1.8776, 1.4711]]])
print (np.array2string(model.predict([in0Thr69733,in0Up_34215],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Con81942.png')

LThr69733 = thresholded_relu_layer([[[[[0.5534, 0.1566], [0.7857, 0.4295]]], [[[0.4019, 0.4803], [0.2359, 0.9837]]]]], 1.244675464719919, Thr69733), 
LRes47903 = reshape_layer(Thr69733, [2, 1, 4], Res47903), 
LRes47944 = reshape_layer(Res47903, [2, 4], Res47944), 
LZer94231 = zero_padding1D_layer(Res47944, 4, 0, Zer94231), 
LUp_34215 = up_sampling1D_layer([[[1.1869, 1.4027, 1.1108, 1.4586], [1.3703, 1.1071, 1.9858, 1.2228], [1.5256, 1.1165, 1.8776, 1.4711]]], 2, Up_34215), 
LMin98018 = minimum_layer([Zer94231,Up_34215], Min98018), 
LRes63253 = reshape_layer(Min98018, [6, 4, 1], Res63253), 
LCon81942 = conv2D_layer(Res63253, 3, 1,[[[[0.4951, 0.6836]]], [[[0.3372, 0.9388]]], [[[0.6338, 0.2287]]]],[0, 0], 1, 1, true, 1, 1, Con81942), 
exec_layers([LThr69733,LRes47903,LRes47944,LZer94231,LUp_34215,LMin98018,LRes63253,LCon81942],["Thr69733","Res47903","Res47944","Zer94231","Up_34215","Min98018","Res63253","Con81942"],Con81942,"Con81942")

Actual (Unparsed): [[[[0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000]], [[0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000]], [[0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000]], [[0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000]], [[0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000]], [[0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.0000000, 0.0000000]]]]

Expected (Unparsed): [[[[0.0,0.0],[0.0,0.0],[0.0,0.0],[0.0,0.0]],[[0.0,0.0],[0.0,0.0],[0.0,0.0],[0.0,0.0]],[[0.0,0.0],[0.0,0.0],[0.0,0.0],[0.0,0.0]],[[0.0,0.0],[0.0,0.0],[0.0,0.0],[0.0,0.0]],[[0.0,0.0],[0.0,0.0],[0.0,0.0],[0.0,0.0]],[[0.0,0.0],[0.0,0.0],[0.0,0.0],[0.0,0.0]]]]

Actual:   [[[[0, 0], [0, 0], [0, 0], [0, 0]], [[0, 0], [0, 0], [0, 0], [0, 0]], [[0, 0], [0, 0], [0, 0], [0, 0]], [[0, 0], [0, 0], [0, 0], [0, 0]], [[0, 0], [0, 0], [0, 0], [0, 0]], [[0, 0], [0, 0], [0, 0], [0, 0]]]]

Expected: [[[[0, 0], [0, 0], [0, 0], [0, 0]], [[0, 0], [0, 0], [0, 0], [0, 0]], [[0, 0], [0, 0], [0, 0], [0, 0]], [[0, 0], [0, 0], [0, 0], [0, 0]], [[0, 0], [0, 0], [0, 0], [0, 0]], [[0, 0], [0, 0], [0, 0], [0, 0]]]]