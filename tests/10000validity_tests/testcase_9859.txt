import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Sub18204 = tf.keras.layers.Input(shape=([2]))
in1Sub18204 = tf.keras.layers.Input(shape=([2]))

Sub18204 = keras.layers.Subtract(name = 'Sub18204', )([in0Sub18204,in1Sub18204])
Res75434 = keras.layers.Reshape((2, 1), name = 'Res75434', )(Sub18204)
Res85014 = keras.layers.Reshape((2, 1, 1), name = 'Res85014', )(Res75434)
Up_79584 = keras.layers.UpSampling2D(size=(2, 1), name = 'Up_79584', )(Res85014)
model = tf.keras.models.Model(inputs=[in0Sub18204,in1Sub18204], outputs=Up_79584)
in0Sub18204 = tf.constant([[0.7095, 0.8531]])
in1Sub18204 = tf.constant([[0.2604, 0.9689]])
print (np.array2string(model.predict([in0Sub18204,in1Sub18204],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Up_79584.png')

LSub18204 = subtract_layer([[0.7095, 0.8531]], [[0.2604, 0.9689]], Sub18204), 
LRes75434 = reshape_layer(Sub18204, [2, 1], Res75434), 
LRes85014 = reshape_layer(Res75434, [2, 1, 1], Res85014), 
LUp_79584 = up_sampling2D_layer(Res85014, 2, 1, Up_79584), 
exec_layers([LSub18204,LRes75434,LRes85014,LUp_79584],["Sub18204","Res75434","Res85014","Up_79584"],Up_79584,"Up_79584")

Actual (Unparsed): [[[[0.4491000]], [[0.4491000]], [[-0.1158000]], [[-0.1158000]]]]

Expected (Unparsed): [[[[0.4491]],[[0.4491]],[[-0.11580000000000001]],[[-0.11580000000000001]]]]

Actual:   [[[[0.4491]], [[0.4491]], [[-0.1158]], [[-0.1158]]]]

Expected: [[[[0.4491]], [[0.4491]], [[-0.1158]], [[-0.1158]]]]