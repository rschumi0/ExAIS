import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Sub45100 = tf.keras.layers.Input(shape=([3, 3, 2, 2]))
in1Sub45100 = tf.keras.layers.Input(shape=([3, 3, 2, 2]))

Sub45100 = keras.layers.Subtract(name = 'Sub45100', )([in0Sub45100,in1Sub45100])
Lay13597 = keras.layers.LayerNormalization(axis=3, epsilon=2.8993229827319027, name = 'Lay13597', )(Sub45100)
model = tf.keras.models.Model(inputs=[in0Sub45100,in1Sub45100], outputs=Lay13597)
in0Sub45100 = tf.constant([[[[[0.7684, 0.4632], [0.2951, 0.9267]], [[0.2429, 0.8182], [0.6591, 0.2553]], [[0.8885, 0.723], [0.2874, 0.1468]]], [[[0.7245, 0.6011], [0.9055, 0.3335]], [[0.8169, 0.7666], [0.0322, 0.0364]], [[0.7565, 0.2984], [0.3598, 0.0698]]], [[[0.6761, 0.7975], [0.4811, 0.3795]], [[0.6244, 0.7096], [0.1454, 0.3491]], [[0.0734, 0.9883], [0.2645, 0.5035]]]]])
in1Sub45100 = tf.constant([[[[[0.6998, 0.6212], [0.8314, 0.6871]], [[0.3512, 0.9425], [0.7624, 0.4034]], [[0.2848, 0.7178], [0.4281, 0.7628]]], [[[0.35, 0.7008], [0.302, 0.4062]], [[0.7741, 0.7347], [0.7202, 0.8455]], [[0.6079, 0.4983], [0.2194, 0.896]]], [[[0.6869, 0.6834], [0.3042, 0.2599]], [[0.1751, 0.7285], [0.7742, 0.8685]], [[0.3696, 0.2323], [0.9404, 0.2854]]]]])
print (np.array2string(model.predict([in0Sub45100,in1Sub45100],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Lay13597.png')

LSub45100 = subtract_layer([[[[[0.7684, 0.4632], [0.2951, 0.9267]], [[0.2429, 0.8182], [0.6591, 0.2553]], [[0.8885, 0.723], [0.2874, 0.1468]]], [[[0.7245, 0.6011], [0.9055, 0.3335]], [[0.8169, 0.7666], [0.0322, 0.0364]], [[0.7565, 0.2984], [0.3598, 0.0698]]], [[[0.6761, 0.7975], [0.4811, 0.3795]], [[0.6244, 0.7096], [0.1454, 0.3491]], [[0.0734, 0.9883], [0.2645, 0.5035]]]]], [[[[[0.6998, 0.6212], [0.8314, 0.6871]], [[0.3512, 0.9425], [0.7624, 0.4034]], [[0.2848, 0.7178], [0.4281, 0.7628]]], [[[0.35, 0.7008], [0.302, 0.4062]], [[0.7741, 0.7347], [0.7202, 0.8455]], [[0.6079, 0.4983], [0.2194, 0.896]]], [[[0.6869, 0.6834], [0.3042, 0.2599]], [[0.1751, 0.7285], [0.7742, 0.8685]], [[0.3696, 0.2323], [0.9404, 0.2854]]]]], Sub45100), 
LLay13597 = layer_normalization_layer(Sub45100, 3, 2.8993229827319027, Lay13597), 
exec_layers([LSub45100,LLay13597],["Sub45100","Lay13597"],Lay13597,"Lay13597")

Actual (Unparsed): [[[[[0.1748880, -0.1159653], [-0.1748880, 0.1159653]], [[-0.0014682, 0.0069886], [0.0014682, -0.0069886]], [[0.2135467, 0.1794508], [-0.2135467, -0.1794508]]], [[[-0.0670930, -0.0079281], [0.0670930, 0.0079281]], [[0.2098185, 0.2397523], [-0.2098185, -0.2397523]], [[0.0024079, 0.1808761], [-0.0024079, -0.1808761]]], [[[-0.0550335, -0.0016150], [0.0550335, 0.0016150]], [[0.3018149, 0.1454070], [-0.3018149, -0.1454070]], [[0.1108101, 0.1560171], [-0.1108101, -0.1560171]]]]]

Expected (Unparsed): [[[[[0.1748879860252812,-0.11596530701609617],[-0.1748879860252812,0.11596530701609617]],[[-0.0014682203575992973,0.006988565767677386],[0.0014682203575992973,-0.006988565767677386]],[[0.21354666317376575,0.17945079255073296],[-0.21354666317376575,-0.17945079255073296]]],[[[-0.06709304423064472,-0.007928149300705829],[0.06709304423064472,0.007928149300705829]],[[0.20981850251516115,0.2397522675820901],[-0.20981850251516115,-0.2397522675820901]],[[0.002407877001455811,0.18087605849745506],[-0.0024078770014557944,-0.1808760584974551]]],[[[-0.05503352214540274,-0.0016150420278018248],[0.05503352214540274,0.0016150420278018248]],[[0.3018148887523864,0.14540701796833042],[-0.3018148887523864,-0.14540701796833042]],[[0.11081013176964713,0.156017100452919],[-0.11081013176964709,-0.156017100452919]]]]]

Actual:   [[[[[0.1749, -0.1159], [-0.1748, 0.116]], [[-0.0014, 0.007], [0.0015, -0.0069]], [[0.2136, 0.1795], [-0.2135, -0.1794]]], [[[-0.067, -0.0079], [0.0671, 0.008]], [[0.2099, 0.2398], [-0.2098, -0.2397]], [[0.0025, 0.1809], [-0.0024, -0.1808]]], [[[-0.055, -0.0016], [0.0551, 0.0017]], [[0.3019, 0.1455], [-0.3018, -0.1454]], [[0.1109, 0.1561], [-0.1108, -0.156]]]]]

Expected: [[[[[0.1749, -0.1159], [-0.1748, 0.116]], [[-0.0014, 0.007], [0.0015, -0.0069]], [[0.2136, 0.1795], [-0.2135, -0.1794]]], [[[-0.067, -0.0079], [0.0671, 0.008]], [[0.2099, 0.2398], [-0.2098, -0.2397]], [[0.0025, 0.1809], [-0.0024, -0.1808]]], [[[-0.055, -0.0016], [0.0551, 0.0017]], [[0.3019, 0.1455], [-0.3018, -0.1454]], [[0.1109, 0.1561], [-0.1108, -0.156]]]]]