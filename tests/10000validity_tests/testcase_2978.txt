import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Ave76720 = tf.keras.layers.Input(shape=([2, 2]))
in1Ave76720 = tf.keras.layers.Input(shape=([2, 2]))
in0Loc43857 = tf.keras.layers.Input(shape=([2, 2]))
in0Con85815 = tf.keras.layers.Input(shape=([3, 2]))
in0Lay52273 = tf.keras.layers.Input(shape=([3, 2, 2]))

Ave76720 = keras.layers.Average(name = 'Ave76720', )([in0Ave76720,in1Ave76720])
Loc43857 = keras.layers.LocallyConnected1D(2, (1),strides=(1), name = 'Loc43857', )(in0Loc43857)
Sub24523 = keras.layers.Subtract(name = 'Sub24523', )([Ave76720,Loc43857])
Res45037 = keras.layers.Reshape((2, 2, 1), name = 'Res45037', )(Sub24523)
Dep95652 = keras.layers.DepthwiseConv2D((1, 1),strides=(1, 1), padding='same', name = 'Dep95652', )(Res45037)
Res14733 = keras.layers.Reshape((2, 2), name = 'Res14733', )(Dep95652)
Zer29679 = keras.layers.ZeroPadding1D(padding=((1, 0)), name = 'Zer29679', )(Res14733)
Con85815 = keras.layers.Concatenate(axis=2, name = 'Con85815', )([Zer29679,in0Con85815])
Lay52273 = keras.layers.LayerNormalization(axis=3, epsilon=1.8633686503169036, name = 'Lay52273', )(in0Lay52273)
Res11956 = keras.layers.Reshape((3, 4), name = 'Res11956', )(Lay52273)
Max52841 = keras.layers.MaxPool1D(pool_size=(1), name = 'Max52841', )(Res11956)
Mul74402 = keras.layers.Multiply(name = 'Mul74402', )([Con85815,Max52841])
model = tf.keras.models.Model(inputs=[in0Ave76720,in1Ave76720,in0Loc43857,in0Con85815,in0Lay52273], outputs=Mul74402)
w = model.get_layer('Loc43857').get_weights() 
w[0] = np.array([[[0.7015, 0.1101], [0.4108, 0.1754]], [[0.6562, 0.0142], [0.613, 0.2184]]])
w[1] = np.array([[0, 0], [0, 0]])
model.get_layer('Loc43857').set_weights(w) 
w = model.get_layer('Dep95652').get_weights() 
w[0] = np.array([[[[0.1198]]]])
w[1] = np.array([0])
model.get_layer('Dep95652').set_weights(w) 
in0Ave76720 = tf.constant([[[0.1328, 0.2585], [0.3305, 0.7993]]])
in1Ave76720 = tf.constant([[[0.3843, 0.7767], [0.1758, 0.5977]]])
in0Loc43857 = tf.constant([[[0.4269, 0.8054], [0.0483, 0.2052]]])
in0Con85815 = tf.constant([[[0.0928, 0.8182], [0.4433, 0.4585], [0.4481, 0.1502]]])
in0Lay52273 = tf.constant([[[[1.3148, 1.5251], [1.0032, 1.4607]], [[1.2412, 1.7187], [1.3355, 1.1582]], [[1.0767, 1.0737], [1.7961, 1.3482]]]])
print (np.array2string(model.predict([in0Ave76720,in1Ave76720,in0Loc43857,in0Con85815,in0Lay52273],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Mul74402.png')

LAve76720 = average_layer([[[[0.1328, 0.2585], [0.3305, 0.7993]]], [[[0.3843, 0.7767], [0.1758, 0.5977]]]], Ave76720), 
LLoc43857 = locally_connected1D_layer([[[0.4269, 0.8054], [0.0483, 0.2052]]], 1,[[[0.7015, 0.1101], [0.4108, 0.1754]], [[0.6562, 0.0142], [0.613, 0.2184]]],[[0, 0], [0, 0]], 1, Loc43857), 
LSub24523 = subtract_layer(Ave76720,Loc43857, Sub24523), 
LRes45037 = reshape_layer(Sub24523, [2, 2, 1], Res45037), 
LDep95652 = depthwise_conv2D_layer(Res45037, 1, 1,[[[[0.1198]]]],[0], 1, 1, true, Dep95652), 
LRes14733 = reshape_layer(Dep95652, [2, 2], Res14733), 
LZer29679 = zero_padding1D_layer(Res14733, 1, 0, Zer29679), 
LCon85815 = concatenate_layer([Zer29679,[[[0.0928, 0.8182], [0.4433, 0.4585], [0.4481, 0.1502]]]], 2, Con85815), 
LLay52273 = layer_normalization_layer([[[[1.3148, 1.5251], [1.0032, 1.4607]], [[1.2412, 1.7187], [1.3355, 1.1582]], [[1.0767, 1.0737], [1.7961, 1.3482]]]], 3, 1.8633686503169036, Lay52273), 
LRes11956 = reshape_layer(Lay52273, [3, 4], Res11956), 
LMax52841 = max_pool1D_layer(Res11956, 1, Max52841), 
LMul74402 = multiply_layer([Con85815,Max52841], Mul74402), 
exec_layers([LAve76720,LLoc43857,LSub24523,LRes45037,LDep95652,LRes14733,LZer29679,LCon85815,LLay52273,LRes11956,LMax52841,LMul74402],["Ave76720","Loc43857","Sub24523","Res45037","Dep95652","Res14733","Zer29679","Con85815","Lay52273","Res11956","Max52841","Mul74402"],Mul74402,"Mul74402")

Actual (Unparsed): [[[-0.0000000, 0.0000000, -0.0153372, 0.1352251], [0.0076735, 0.0067974, 0.0287285, -0.0297136], [0.0000126, -0.0000860, 0.0725453, -0.0243167]]]

Expected (Unparsed): [[[-0.0,0.0,-0.015337192621884573,0.13522511856924524],[0.007673476850766373,0.006797364022420291,0.02872851507792392,-0.029713566801777766],[1.2594033526713556e-5,-8.596280528391789e-5,0.07254529517881114,-0.024316677830523194]]]

Actual:   [[[-0, 0, -0.0153, 0.1353], [0.0077, 0.0068, 0.0288, -0.0297], [0.0001, -0, 0.0726, -0.0243]]]

Expected: [[[-0, 0, -0.0153, 0.1353], [0.0077, 0.0068, 0.0288, -0.0297], [0.0001, -0, 0.0726, -0.0243]]]