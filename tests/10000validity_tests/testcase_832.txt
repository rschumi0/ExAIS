import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Con96787 = tf.keras.layers.Input(shape=([1, 2]))

Con96787 = keras.layers.Conv1D(2, (1),strides=(1), padding='valid', dilation_rate=(1), name = 'Con96787', )(in0Con96787)
Up_3421 = keras.layers.UpSampling1D(size=(2), name = 'Up_3421', )(Con96787)
model = tf.keras.models.Model(inputs=[in0Con96787], outputs=Up_3421)
w = model.get_layer('Con96787').get_weights() 
w[0] = np.array([[[0.4694, 0.5637], [0.6102, 0.0555]]])
w[1] = np.array([0, 0])
model.get_layer('Con96787').set_weights(w) 
in0Con96787 = tf.constant([[[0.0015, 0.7485]]])
print (np.array2string(model.predict([in0Con96787],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Up_3421.png')

LCon96787 = conv1D_layer([[[0.0015, 0.7485]]], 1,[[[0.4694, 0.5637], [0.6102, 0.0555]]],[0, 0], 1, false, 1, Con96787), 
LUp_3421 = up_sampling1D_layer(Con96787, 2, Up_3421), 
exec_layers([LCon96787,LUp_3421],["Con96787","Up_3421"],Up_3421,"Up_3421")

Actual (Unparsed): [[[0.4574388, 0.0423873], [0.4574388, 0.0423873]]]

Expected (Unparsed): [[[0.4574388,0.0423873],[0.4574388,0.0423873]]]

Actual:   [[[0.4575, 0.0424], [0.4575, 0.0424]]]

Expected: [[[0.4575, 0.0424], [0.4575, 0.0424]]]