import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Mul83272 = tf.keras.layers.Input(shape=([2, 2, 2, 1]))
in1Mul83272 = tf.keras.layers.Input(shape=([2, 2, 2, 1]))
in0Loc70891 = tf.keras.layers.Input(shape=([2, 1]))
in0Con35232 = tf.keras.layers.Input(shape=([1, 4, 1]))
in0Cro63827 = tf.keras.layers.Input(shape=([1, 1, 2]))

Mul83272 = keras.layers.Multiply(name = 'Mul83272', )([in0Mul83272,in1Mul83272])
Cro23430 = keras.layers.Cropping3D(cropping=((1, 0), (0, 0), (0, 0)), name = 'Cro23430', )(Mul83272)
Res41851 = keras.layers.Reshape((1, 2, 2), name = 'Res41851', )(Cro23430)
Zer11785 = keras.layers.ZeroPadding2D(padding=((0, 0), (2, 0)), name = 'Zer11785', )(Res41851)
Loc70891 = keras.layers.LocallyConnected1D(4, (2),strides=(1), name = 'Loc70891', )(in0Loc70891)
Res28266 = keras.layers.Reshape((1, 4, 1), name = 'Res28266', )(Loc70891)
Con35232 = keras.layers.Concatenate(axis=3, name = 'Con35232', )([Res28266,in0Con35232])
Cro63827 = keras.layers.Cropping2D(cropping=((0, 0), (0, 0)), name = 'Cro63827', )(in0Cro63827)
Zer88375 = keras.layers.ZeroPadding2D(padding=((0, 0), (3, 0)), name = 'Zer88375', )(Cro63827)
Max64402 = keras.layers.Maximum(name = 'Max64402', )([Con35232,Zer88375])
Min90317 = keras.layers.Minimum(name = 'Min90317', )([Zer11785,Max64402])
model = tf.keras.models.Model(inputs=[in0Mul83272,in1Mul83272,in0Loc70891,in0Con35232,in0Cro63827], outputs=Min90317)
w = model.get_layer('Loc70891').get_weights() 
w[0] = np.array([[[0.8692, 0.5575, 0.6729, 0.0625], [0.2203, 0.8603, 0.4256, 0.3778]]])
w[1] = np.array([[0, 0, 0, 0]])
model.get_layer('Loc70891').set_weights(w) 
in0Mul83272 = tf.constant([[[[[0.9568], [0.2825]], [[0.512], [0.8957]]], [[[0.3508], [0.8707]], [[0.0384], [0.5344]]]]])
in1Mul83272 = tf.constant([[[[[0.4376], [0.3032]], [[0.1207], [0.187]]], [[[0.4836], [0.9671]], [[0.8221], [0.3525]]]]])
in0Loc70891 = tf.constant([[[0.939], [0.4731]]])
in0Con35232 = tf.constant([[[[0.4603], [0.3343], [0.9118], [0.0597]]]])
in0Cro63827 = tf.constant([[[[1.7757, 1.413]]]])
print (np.array2string(model.predict([in0Mul83272,in1Mul83272,in0Loc70891,in0Con35232,in0Cro63827],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Min90317.png')

LMul83272 = multiply_layer([[[[[[0.9568], [0.2825]], [[0.512], [0.8957]]], [[[0.3508], [0.8707]], [[0.0384], [0.5344]]]]], [[[[[0.4376], [0.3032]], [[0.1207], [0.187]]], [[[0.4836], [0.9671]], [[0.8221], [0.3525]]]]]], Mul83272), 
LCro23430 = cropping3D_layer(Mul83272, 1, 0, 0, 0, 0, 0, Cro23430), 
LRes41851 = reshape_layer(Cro23430, [1, 2, 2], Res41851), 
LZer11785 = zero_padding2D_layer(Res41851, 0, 0, 2, 0, Zer11785), 
LLoc70891 = locally_connected1D_layer([[[0.939], [0.4731]]], 2,[[[0.8692, 0.5575, 0.6729, 0.0625], [0.2203, 0.8603, 0.4256, 0.3778]]],[[0, 0, 0, 0]], 1, Loc70891), 
LRes28266 = reshape_layer(Loc70891, [1, 4, 1], Res28266), 
LCon35232 = concatenate_layer([Res28266,[[[[0.4603], [0.3343], [0.9118], [0.0597]]]]], 3, Con35232), 
LCro63827 = cropping2D_layer([[[[1.7757, 1.413]]]], 0, 0, 0, 0, Cro63827), 
LZer88375 = zero_padding2D_layer(Cro63827, 0, 0, 3, 0, Zer88375), 
LMax64402 = maximum_layer([Con35232,Zer88375], Max64402), 
LMin90317 = minimum_layer([Zer11785,Max64402], Min90317), 
exec_layers([LMul83272,LCro23430,LRes41851,LZer11785,LLoc70891,LRes28266,LCon35232,LCro63827,LZer88375,LMax64402,LMin90317],["Mul83272","Cro23430","Res41851","Zer11785","Loc70891","Res28266","Con35232","Cro63827","Zer88375","Max64402","Min90317"],Min90317,"Min90317")

Actual (Unparsed): [[[[0.0000000, 0.0000000], [0.0000000, 0.0000000], [0.1696469, 0.8420540], [0.0315686, 0.1883760]]]]

Expected (Unparsed): [[[[0,0],[0,0],[0.16964688,0.84205397],[0.03156864,0.188376]]]]

Actual:   [[[[0, 0], [0, 0], [0.1697, 0.8421], [0.0316, 0.1884]]]]

Expected: [[[[0, 0], [0, 0], [0.1697, 0.8421], [0.0316, 0.1884]]]]