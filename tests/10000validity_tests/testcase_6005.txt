import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Add23870 = tf.keras.layers.Input(shape=([2, 2, 1, 1]))
in1Add23870 = tf.keras.layers.Input(shape=([2, 2, 1, 1]))
in0Dot27930 = tf.keras.layers.Input(shape=([3, 2]))
in1Dot27930 = tf.keras.layers.Input(shape=([3, 2]))
in0Ave87950 = tf.keras.layers.Input(shape=([2, 2, 2]))
in1Ave87950 = tf.keras.layers.Input(shape=([2, 2, 2]))

Add23870 = keras.layers.Add(name = 'Add23870', )([in0Add23870,in1Add23870])
Res44120 = keras.layers.Reshape((2, 2, 1), name = 'Res44120', )(Add23870)
Dot27930 = keras.layers.Dot(axes=(1, 1), name = 'Dot27930', )([in0Dot27930,in1Dot27930])
Res78927 = keras.layers.Reshape((2, 2, 1), name = 'Res78927', )(Dot27930)
Mul51624 = keras.layers.Multiply(name = 'Mul51624', )([Res44120,Res78927])
Den51220 = keras.layers.Dense(3,name = 'Den51220', )(Mul51624)
Res56346 = keras.layers.Reshape((2, 2, 3, 1), name = 'Res56346', )(Den51220)
Cro53955 = keras.layers.Cropping3D(cropping=((1, 0), (0, 1), (1, 0)), name = 'Cro53955', )(Res56346)
Res4262 = keras.layers.Reshape((1, 1, 2), name = 'Res4262', )(Cro53955)
Zer77822 = keras.layers.ZeroPadding2D(padding=((1, 0), (1, 0)), name = 'Zer77822', )(Res4262)
Ave87950 = keras.layers.Average(name = 'Ave87950', )([in0Ave87950,in1Ave87950])
Mul35204 = keras.layers.Multiply(name = 'Mul35204', )([Zer77822,Ave87950])
model = tf.keras.models.Model(inputs=[in0Add23870,in1Add23870,in0Dot27930,in1Dot27930,in0Ave87950,in1Ave87950], outputs=Mul35204)
w = model.get_layer('Den51220').get_weights() 
w[0] = np.array([[0.5979, 0.0623, 0.2891]])
w[1] = np.array([0.3923, 0.3178, 0.3298])
model.get_layer('Den51220').set_weights(w) 
in0Add23870 = tf.constant([[[[[0.2889]], [[0.596]]], [[[0.4563]], [[0.8749]]]]])
in1Add23870 = tf.constant([[[[[0.7381]], [[0.9337]]], [[[0.96]], [[0.5961]]]]])
in0Dot27930 = tf.constant([[[0.8434, 0.6439], [0.3875, 0.2422], [0.0582, 0.0767]]])
in1Dot27930 = tf.constant([[[0.2963, 0.4218], [0.7092, 0.946], [0.7214, 0.5504]]])
in0Ave87950 = tf.constant([[[[0.3626, 0.7846], [0.1153, 0.7665]], [[0.2996, 0.191], [0.7059, 0.1062]]]])
in1Ave87950 = tf.constant([[[[0.1156, 0.0837], [0.8641, 0.1558]], [[0.7439, 0.1324], [0.7535, 0.3751]]]])
print (np.array2string(model.predict([in0Add23870,in1Add23870,in0Dot27930,in1Dot27930,in0Ave87950,in1Ave87950],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Mul35204.png')

LAdd23870 = add_layer([[[[[[0.2889]], [[0.596]]], [[[0.4563]], [[0.8749]]]]], [[[[[0.7381]], [[0.9337]]], [[[0.96]], [[0.5961]]]]]], Add23870), 
LRes44120 = reshape_layer(Add23870, [2, 2, 1], Res44120), 
LDot27930 = dot_layer([[[0.8434, 0.6439], [0.3875, 0.2422], [0.0582, 0.0767]]], [[[0.2963, 0.4218], [0.7092, 0.946], [0.7214, 0.5504]]], 1, 1, Dot27930), 
LRes78927 = reshape_layer(Dot27930, [2, 2, 1], Res78927), 
LMul51624 = multiply_layer([Res44120,Res78927], Mul51624), 
LDen51220 = dense_layer(Mul51624, [[0.5979, 0.0623, 0.2891]],[0.3923, 0.3178, 0.3298], Den51220), 
LRes56346 = reshape_layer(Den51220, [2, 2, 3, 1], Res56346), 
LCro53955 = cropping3D_layer(Res56346, 1, 0, 0, 1, 1, 0, Cro53955), 
LRes4262 = reshape_layer(Cro53955, [1, 1, 2], Res4262), 
LZer77822 = zero_padding2D_layer(Res4262, 1, 0, 1, 0, Zer77822), 
LAve87950 = average_layer([[[[[0.3626, 0.7846], [0.1153, 0.7665]], [[0.2996, 0.191], [0.7059, 0.1062]]]], [[[[0.1156, 0.0837], [0.8641, 0.1558]], [[0.7439, 0.1324], [0.7535, 0.3751]]]]], Ave87950), 
LMul35204 = multiply_layer([Zer77822,Ave87950], Mul35204), 
exec_layers([LAdd23870,LRes44120,LDot27930,LRes78927,LMul51624,LDen51220,LRes56346,LCro53955,LRes4262,LZer77822,LAve87950,LMul35204],["Add23870","Res44120","Dot27930","Res78927","Mul51624","Den51220","Res56346","Cro53955","Res4262","Zer77822","Ave87950","Mul35204"],Mul35204,"Mul35204")

Actual (Unparsed): [[[[0.0000000, 0.0000000], [0.0000000, 0.0000000]], [[0.0000000, 0.0000000], [0.2588045, 0.1205428]]]]

Expected (Unparsed): [[[[0.0,0.0],[0.0,0.0]],[[0.0,0.0],[0.25880450936700006,0.12054276024379136]]]]

Actual:   [[[[0, 0], [0, 0]], [[0, 0], [0.2589, 0.1206]]]]

Expected: [[[[0, 0], [0, 0]], [[0, 0], [0.2589, 0.1206]]]]