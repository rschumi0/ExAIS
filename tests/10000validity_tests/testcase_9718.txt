import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Mul17377 = tf.keras.layers.Input(shape=([1, 2, 1]))
in1Mul17377 = tf.keras.layers.Input(shape=([1, 2, 1]))

Mul17377 = keras.layers.Multiply(name = 'Mul17377', )([in0Mul17377,in1Mul17377])
Dep47533 = keras.layers.DepthwiseConv2D((1, 1),strides=(1, 1), padding='same', name = 'Dep47533', )(Mul17377)
model = tf.keras.models.Model(inputs=[in0Mul17377,in1Mul17377], outputs=Dep47533)
w = model.get_layer('Dep47533').get_weights() 
w[0] = np.array([[[[0.8305]]]])
w[1] = np.array([0])
model.get_layer('Dep47533').set_weights(w) 
in0Mul17377 = tf.constant([[[[1], [0.4964]]]])
in1Mul17377 = tf.constant([[[[0.9723], [0.9301]]]])
print (np.array2string(model.predict([in0Mul17377,in1Mul17377],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Dep47533.png')

LMul17377 = multiply_layer([[[[[1], [0.4964]]]], [[[[0.9723], [0.9301]]]]], Mul17377), 
LDep47533 = depthwise_conv2D_layer(Mul17377, 1, 1,[[[[0.8305]]]],[0], 1, 1, true, Dep47533), 
exec_layers([LMul17377,LDep47533],["Mul17377","Dep47533"],Dep47533,"Dep47533")

Actual (Unparsed): [[[[0.8074951], [0.3834432]]]]

Expected (Unparsed): [[[[0.80749515],[0.38344321202000003]]]]

Actual:   [[[[0.8075], [0.3835]]]]

Expected: [[[[0.8075], [0.3835]]]]