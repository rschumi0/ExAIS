import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Sof18500 = tf.keras.layers.Input(shape=([1, 2, 1, 1]))

Sof18500 = keras.layers.Softmax(axis=1, name = 'Sof18500', input_shape=(1, 2, 1, 1))(in0Sof18500)
Res12034 = keras.layers.Reshape((1, 2, 1), name = 'Res12034', )(Sof18500)
Res95808 = keras.layers.Reshape((1, 2), name = 'Res95808', )(Res12034)
Sep49472 = keras.layers.SeparableConv1D(3, (1),strides=(1), padding='valid', name = 'Sep49472', )(Res95808)
model = tf.keras.models.Model(inputs=[in0Sof18500], outputs=Sep49472)
w = model.get_layer('Sep49472').get_weights() 
w[0] = np.array([[[0.0961], [0.7599]]])
w[1] = np.array([[[0.8125, 0.4732, 0.2666], [0.5919, 0.988, 0.8125]]])
w[2] = np.array([0, 0, 0])
model.get_layer('Sep49472').set_weights(w) 
in0Sof18500 = tf.constant([[[[[0.1318]], [[0.415]]]]])
print (np.array2string(model.predict([in0Sof18500],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Sep49472.png')

LSof18500 = softmax_layer([[[[[0.1318]], [[0.415]]]]], 1, Sof18500), 
LRes12034 = reshape_layer(Sof18500, [1, 2, 1], Res12034), 
LRes95808 = reshape_layer(Res12034, [1, 2], Res95808), 
LSep49472 = separable_conv1D_layer(Res95808, 1,[[[[0.0961], [0.7599]]],[[[0.8125, 0.4732, 0.2666], [0.5919, 0.988, 0.8125]]]],[0, 0, 0], 1, false, Sep49472), 
exec_layers([LSof18500,LRes12034,LRes95808,LSep49472],["Sof18500","Res12034","Res95808","Sep49472"],Sep49472,"Sep49472")

Actual (Unparsed): [[[0.5278661, 0.7962557, 0.6430390]]]

Expected (Unparsed): [[[0.52786606,0.79625572,0.64303901]]]

Actual:   [[[0.5279, 0.7963, 0.6431]]]

Expected: [[[0.5279, 0.7963, 0.6431]]]