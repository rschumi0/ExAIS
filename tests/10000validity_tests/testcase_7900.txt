import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Max61842 = tf.keras.layers.Input(shape=([1, 2, 1]))
in1Max61842 = tf.keras.layers.Input(shape=([1, 2, 1]))
in0Con60008 = tf.keras.layers.Input(shape=([3, 1]))
in0Den53520 = tf.keras.layers.Input(shape=([3, 2]))

Max61842 = keras.layers.Maximum(name = 'Max61842', )([in0Max61842,in1Max61842])
Res11170 = keras.layers.Reshape((1, 2), name = 'Res11170', )(Max61842)
Zer54975 = keras.layers.ZeroPadding1D(padding=((2, 0)), name = 'Zer54975', )(Res11170)
Con60008 = keras.layers.Concatenate(axis=2, name = 'Con60008', )([Zer54975,in0Con60008])
Den53520 = keras.layers.Dense(3,name = 'Den53520', )(in0Den53520)
Mas18701 = keras.layers.Masking(mask_value=1, name = 'Mas18701', )(Den53520)
Sub70894 = keras.layers.Subtract(name = 'Sub70894', )([Con60008,Mas18701])
PRe13855 = keras.layers.PReLU(name = 'PRe13855', )(Sub70894)
model = tf.keras.models.Model(inputs=[in0Max61842,in1Max61842,in0Con60008,in0Den53520], outputs=PRe13855)
w = model.get_layer('Den53520').get_weights() 
w[0] = np.array([[0.3798, 0.2184, 0.7866], [0.9087, 0.8779, 0.1584]])
w[1] = np.array([0.3738, 0.2529, 0.2813])
model.get_layer('Den53520').set_weights(w) 
w = model.get_layer('PRe13855').get_weights() 
w[0] = np.array([[0.8406, 0.7552, 0.244], [0.9884, 0.9862, 0.6412], [0.3193, 0.8225, 0.598]])
model.get_layer('PRe13855').set_weights(w) 
in0Max61842 = tf.constant([[[[0.0736], [0.7633]]]])
in1Max61842 = tf.constant([[[[0.2477], [0.4647]]]])
in0Con60008 = tf.constant([[[0.2901], [0.8585], [0.7091]]])
in0Den53520 = tf.constant([[[0.9386, 0.6715], [0.6886, 0.2271], [0.6676, 0.4524]]])
print (np.array2string(model.predict([in0Max61842,in1Max61842,in0Con60008,in0Den53520],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='PRe13855.png')

LMax61842 = maximum_layer([[[[[0.0736], [0.7633]]]], [[[[0.2477], [0.4647]]]]], Max61842), 
LRes11170 = reshape_layer(Max61842, [1, 2], Res11170), 
LZer54975 = zero_padding1D_layer(Res11170, 2, 0, Zer54975), 
LCon60008 = concatenate_layer([Zer54975,[[[0.2901], [0.8585], [0.7091]]]], 2, Con60008), 
LDen53520 = dense_layer([[[0.9386, 0.6715], [0.6886, 0.2271], [0.6676, 0.4524]]], [[0.3798, 0.2184, 0.7866], [0.9087, 0.8779, 0.1584]],[0.3738, 0.2529, 0.2813], Den53520), 
LMas18701 = masking_layer(Den53520, 1, Mas18701), 
LSub70894 = subtract_layer(Con60008,Mas18701, Sub70894), 
LPRe13855 = prelu_layer(Sub70894, [[0.8406, 0.7552, 0.244], [0.9884, 0.9862, 0.6412], [0.3193, 0.8225, 0.598]], PRe13855), 
exec_layers([LMax61842,LRes11170,LZer54975,LCon60008,LDen53520,LMas18701,LSub70894,LPRe13855],["Max61842","Res11170","Zer54975","Con60008","Den53520","Mas18701","Sub70894","PRe13855"],PRe13855,"PRe13855")

Actual (Unparsed): [[[-1.1268011, -0.7909966, -0.2039519], [-0.8319324, -0.5943446, -0.0002728], [-0.2524866, -0.0267854, -0.1010586]]]

Expected (Unparsed): [[[-1.126801040598,-0.790996547968,-0.20395187983999996],[-0.83193237582,-0.594344603646,-0.0002727664799999418],[-0.252486589948,-0.026785370500000072,-0.10105860335999994]]]

Actual:   [[[-1.1268, -0.7909, -0.2039], [-0.8319, -0.5943, -0.0002], [-0.2524, -0.0267, -0.101]]]

Expected: [[[-1.1268, -0.7909, -0.2039], [-0.8319, -0.5943, -0.0002], [-0.2524, -0.0267, -0.101]]]