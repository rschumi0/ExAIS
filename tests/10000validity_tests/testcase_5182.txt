import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Add21305 = tf.keras.layers.Input(shape=([2, 1, 1]))
in1Add21305 = tf.keras.layers.Input(shape=([2, 1, 1]))

Add21305 = keras.layers.Add(name = 'Add21305', )([in0Add21305,in1Add21305])
Lay41757 = keras.layers.LayerNormalization(axis=2, epsilon=1.9030708170002975, name = 'Lay41757', )(Add21305)
Sof22949 = keras.layers.Softmax(axis=1, name = 'Sof22949', )(Lay41757)
model = tf.keras.models.Model(inputs=[in0Add21305,in1Add21305], outputs=Sof22949)
in0Add21305 = tf.constant([[[[0.7359]], [[0.1588]]]])
in1Add21305 = tf.constant([[[[0.0571]], [[0.7404]]]])
print (np.array2string(model.predict([in0Add21305,in1Add21305],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Sof22949.png')

LAdd21305 = add_layer([[[[[0.7359]], [[0.1588]]]], [[[[0.0571]], [[0.7404]]]]], Add21305), 
LLay41757 = layer_normalization_layer(Add21305, 2, 1.9030708170002975, Lay41757), 
LSof22949 = softmax_layer(Lay41757, 1, Sof22949), 
exec_layers([LAdd21305,LLay41757,LSof22949],["Add21305","Lay41757","Sof22949"],Sof22949,"Sof22949")

Actual (Unparsed): [[[[0.5000000]], [[0.5000000]]]]

Expected (Unparsed): [[[[0.5]],[[0.5]]]]

Actual:   [[[[0.5]], [[0.5]]]]

Expected: [[[[0.5]], [[0.5]]]]