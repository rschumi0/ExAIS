import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Max48466 = tf.keras.layers.Input(shape=([1, 2, 1]))
in1Max48466 = tf.keras.layers.Input(shape=([1, 2, 1]))

Max48466 = keras.layers.Maximum(name = 'Max48466', )([in0Max48466,in1Max48466])
Sof16032 = keras.layers.Softmax(axis=1, name = 'Sof16032', )(Max48466)
model = tf.keras.models.Model(inputs=[in0Max48466,in1Max48466], outputs=Sof16032)
in0Max48466 = tf.constant([[[[0.1473], [0.7839]]]])
in1Max48466 = tf.constant([[[[0.2981], [0.9337]]]])
print (np.array2string(model.predict([in0Max48466,in1Max48466],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Sof16032.png')

LMax48466 = maximum_layer([[[[[0.1473], [0.7839]]]], [[[[0.2981], [0.9337]]]]], Max48466), 
LSof16032 = softmax_layer(Max48466, 1, Sof16032), 
exec_layers([LMax48466,LSof16032],["Max48466","Sof16032"],Sof16032,"Sof16032")

Actual (Unparsed): [[[[1.0000000], [1.0000000]]]]

Expected (Unparsed): [[[[1.0],[1.0]]]]

Actual:   [[[[1], [1]]]]

Expected: [[[[1], [1]]]]