import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0LST1146 = tf.keras.layers.Input(shape=([2, 3]))
in0Max86542 = tf.keras.layers.Input(shape=([1, 1]))
in1Max86542 = tf.keras.layers.Input(shape=([1, 1]))

LST1146 = keras.layers.LSTM(3,recurrent_activation='sigmoid', name = 'LST1146', )(in0LST1146)
Res12391 = keras.layers.Reshape((3, 1), name = 'Res12391', )(LST1146)
Max86542 = keras.layers.Maximum(name = 'Max86542', )([in0Max86542,in1Max86542])
Zer75687 = keras.layers.ZeroPadding1D(padding=((2, 0)), name = 'Zer75687', )(Max86542)
Sub58304 = keras.layers.Subtract(name = 'Sub58304', )([Res12391,Zer75687])
Res17689 = keras.layers.Reshape((3, 1, 1), name = 'Res17689', )(Sub58304)
Dep21601 = keras.layers.DepthwiseConv2D((2, 1),strides=(2, 2), padding='same', name = 'Dep21601', )(Res17689)
Res25349 = keras.layers.Reshape((2, 1), name = 'Res25349', )(Dep21601)
LST75730 = keras.layers.LSTM(2,recurrent_activation='sigmoid', name = 'LST75730', )(Res25349)
model = tf.keras.models.Model(inputs=[in0LST1146,in0Max86542,in1Max86542], outputs=LST75730)
w = model.get_layer('LST1146').get_weights() 
w[0] = np.array([[4, 1, 7, 5, 6, 9, 2, 1, 4, 10, 8, 9], [4, 1, 10, 3, 9, 2, 7, 6, 5, 9, 6, 4], [5, 3, 7, 5, 6, 2, 7, 9, 6, 9, 1, 8]])
w[1] = np.array([[8, 9, 9, 9, 10, 3, 1, 5, 4, 2, 1, 6], [10, 2, 3, 8, 1, 5, 2, 5, 9, 2, 5, 10], [8, 9, 1, 2, 5, 3, 9, 4, 5, 2, 1, 6]])
w[2] = np.array([4, 9, 1, 5, 4, 10, 5, 3, 1, 6, 9, 5])
model.get_layer('LST1146').set_weights(w) 
w = model.get_layer('Dep21601').get_weights() 
w[0] = np.array([[[[0.7156]]], [[[0.0598]]]])
w[1] = np.array([0])
model.get_layer('Dep21601').set_weights(w) 
w = model.get_layer('LST75730').get_weights() 
w[0] = np.array([[6, 7, 3, 7, 8, 3, 5, 8]])
w[1] = np.array([[3, 9, 5, 3, 8, 7, 8, 4], [8, 4, 5, 1, 7, 9, 9, 5]])
w[2] = np.array([3, 6, 6, 9, 8, 8, 1, 6])
model.get_layer('LST75730').set_weights(w) 
in0LST1146 = tf.constant([[[3, 4, 6], [9, 5, 6]]])
in0Max86542 = tf.constant([[[0.6716]]])
in1Max86542 = tf.constant([[[0.5873]]])
print (np.array2string(model.predict([in0LST1146,in0Max86542,in1Max86542],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='LST75730.png')

LLST1146 = lstm_layer([[[3, 4, 6], [9, 5, 6]]],[[4, 1, 7, 5, 6, 9, 2, 1, 4, 10, 8, 9], [4, 1, 10, 3, 9, 2, 7, 6, 5, 9, 6, 4], [5, 3, 7, 5, 6, 2, 7, 9, 6, 9, 1, 8]],[[8, 9, 9, 9, 10, 3, 1, 5, 4, 2, 1, 6], [10, 2, 3, 8, 1, 5, 2, 5, 9, 2, 5, 10], [8, 9, 1, 2, 5, 3, 9, 4, 5, 2, 1, 6]],[4, 9, 1, 5, 4, 10, 5, 3, 1, 6, 9, 5], LST1146), 
LRes12391 = reshape_layer(LST1146, [3, 1], Res12391), 
LMax86542 = maximum_layer([[[[0.6716]]], [[[0.5873]]]], Max86542), 
LZer75687 = zero_padding1D_layer(Max86542, 2, 0, Zer75687), 
LSub58304 = subtract_layer(Res12391,Zer75687, Sub58304), 
LRes17689 = reshape_layer(Sub58304, [3, 1, 1], Res17689), 
LDep21601 = depthwise_conv2D_layer(Res17689, 2, 1,[[[[0.7156]]], [[[0.0598]]]],[0], 2, 2, true, Dep21601), 
LRes25349 = reshape_layer(Dep21601, [2, 1], Res25349), 
LLST75730 = lstm_layer(Res25349,[[6, 7, 3, 7, 8, 3, 5, 8]],[[3, 9, 5, 3, 8, 7, 8, 4], [8, 4, 5, 1, 7, 9, 9, 5]],[3, 6, 6, 9, 8, 8, 1, 6], LST75730), 
exec_layers([LLST1146,LRes12391,LMax86542,LZer75687,LSub58304,LRes17689,LDep21601,LRes25349,LLST75730],["LST1146","Res12391","Max86542","Zer75687","Sub58304","Res17689","Dep21601","Res25349","LST75730"],LST75730,"LST75730")

Actual (Unparsed): [[0.9639873, 0.9640261]]

Expected (Unparsed): [[0.9639873193316986,0.9640260590933198]]

Actual:   [[0.964, 0.9641]]

Expected: [[0.964, 0.9641]]