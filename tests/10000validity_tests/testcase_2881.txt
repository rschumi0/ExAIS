import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Dot20678 = tf.keras.layers.Input(shape=([3, 2]))
in1Dot20678 = tf.keras.layers.Input(shape=([3, 2]))
in0Con70655 = tf.keras.layers.Input(shape=([3, 3, 2]))
in0Cro31106 = tf.keras.layers.Input(shape=([3, 2, 3]))

Dot20678 = keras.layers.Dot(axes=(2, 2), name = 'Dot20678', )([in0Dot20678,in1Dot20678])
Res46446 = keras.layers.Reshape((3, 3, 1), name = 'Res46446', )(Dot20678)
Con70655 = keras.layers.Concatenate(axis=3, name = 'Con70655', )([Res46446,in0Con70655])
Cro31106 = keras.layers.Cropping2D(cropping=((0, 0), (1, 0)), name = 'Cro31106', )(in0Cro31106)
Zer92786 = keras.layers.ZeroPadding2D(padding=((0, 0), (2, 0)), name = 'Zer92786', )(Cro31106)
Mul58337 = keras.layers.Multiply(name = 'Mul58337', )([Con70655,Zer92786])
Sep36253 = keras.layers.SeparableConv2D(3, (1, 3),strides=(3, 3), padding='valid', name = 'Sep36253', )(Mul58337)
model = tf.keras.models.Model(inputs=[in0Dot20678,in1Dot20678,in0Con70655,in0Cro31106], outputs=Sep36253)
w = model.get_layer('Sep36253').get_weights() 
w[0] = np.array([[[[0.7456], [0.537], [0.0473]], [[0.2608], [0.7016], [0.6578]], [[0.4498], [0.9854], [0.5865]]]])
w[1] = np.array([[[[0.1266, 0.3005, 0.5945], [0.1419, 0.6195, 0.8277], [0.6841, 0.135, 0.568]]]])
w[2] = np.array([0, 0, 0])
model.get_layer('Sep36253').set_weights(w) 
in0Dot20678 = tf.constant([[[0.5543, 0.214], [0.6122, 0.2346], [0.1244, 0.4685]]])
in1Dot20678 = tf.constant([[[0.4749, 0.0469], [0.274, 0.5732], [0.484, 0.0001]]])
in0Con70655 = tf.constant([[[[0.1045, 0.8667], [0.3915, 0.0564], [0.1445, 0.183]], [[0.2456, 0.3389], [0.4809, 0.6078], [0.7826, 0.9313]], [[0.8453, 0.2758], [0.122, 0.6033], [0.2447, 0.2076]]]])
in0Cro31106 = tf.constant([[[[1.3416, 1.1755, 1.7194], [1.1855, 1.1095, 1.3877]], [[1.2282, 1.2978, 1.2889], [1.0098, 1.5926, 1.7731]], [[1.1072, 1.6088, 1.8582], [1.2611, 1.0298, 1.3953]]]])
print (np.array2string(model.predict([in0Dot20678,in1Dot20678,in0Con70655,in0Cro31106],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Sep36253.png')

LDot20678 = dot_layer([[[0.5543, 0.214], [0.6122, 0.2346], [0.1244, 0.4685]]], [[[0.4749, 0.0469], [0.274, 0.5732], [0.484, 0.0001]]], 2, 2, Dot20678), 
LRes46446 = reshape_layer(Dot20678, [3, 3, 1], Res46446), 
LCon70655 = concatenate_layer([Res46446,[[[[0.1045, 0.8667], [0.3915, 0.0564], [0.1445, 0.183]], [[0.2456, 0.3389], [0.4809, 0.6078], [0.7826, 0.9313]], [[0.8453, 0.2758], [0.122, 0.6033], [0.2447, 0.2076]]]]], 3, Con70655), 
LCro31106 = cropping2D_layer([[[[1.3416, 1.1755, 1.7194], [1.1855, 1.1095, 1.3877]], [[1.2282, 1.2978, 1.2889], [1.0098, 1.5926, 1.7731]], [[1.1072, 1.6088, 1.8582], [1.2611, 1.0298, 1.3953]]]], 0, 0, 1, 0, Cro31106), 
LZer92786 = zero_padding2D_layer(Cro31106, 0, 0, 2, 0, Zer92786), 
LMul58337 = multiply_layer([Con70655,Zer92786], Mul58337), 
LSep36253 = separable_conv2D_layer(Mul58337, 1, 3,[[[[[0.7456], [0.537], [0.0473]], [[0.2608], [0.7016], [0.6578]], [[0.4498], [0.9854], [0.5865]]]],[[[[0.1266, 0.3005, 0.5945], [0.1419, 0.6195, 0.8277], [0.6841, 0.135, 0.568]]]]],[0, 0, 0], 3, 3, false, Sep36253), 
exec_layers([LDot20678,LRes46446,LCon70655,LCro31106,LZer92786,LMul58337,LSep36253],["Dot20678","Res46446","Con70655","Cro31106","Zer92786","Mul58337","Sep36253"],Sep36253,"Sep36253")

Actual (Unparsed): [[[[0.1424208, 0.1609692, 0.3004149]]]]

Expected (Unparsed): [[[[0.14242083989377918,0.16096919636738127,0.30041489317033204]]]]

Actual:   [[[[0.1425, 0.161, 0.3005]]]]

Expected: [[[[0.1425, 0.161, 0.3005]]]]