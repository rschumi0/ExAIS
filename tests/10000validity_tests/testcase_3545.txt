import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Ave71677 = tf.keras.layers.Input(shape=([1, 1, 1]))
in1Ave71677 = tf.keras.layers.Input(shape=([1, 1, 1]))
in0Max37969 = tf.keras.layers.Input(shape=([2, 1]))
in1Max37969 = tf.keras.layers.Input(shape=([2, 1]))

Ave71677 = keras.layers.Average(name = 'Ave71677', )([in0Ave71677,in1Ave71677])
Res65099 = keras.layers.Reshape((1, 1), name = 'Res65099', )(Ave71677)
Zer57565 = keras.layers.ZeroPadding1D(padding=((1, 0)), name = 'Zer57565', )(Res65099)
Max37969 = keras.layers.Maximum(name = 'Max37969', )([in0Max37969,in1Max37969])
Lay86772 = keras.layers.LayerNormalization(axis=2, epsilon=1.419863066249383, name = 'Lay86772', )(Max37969)
Ave91607 = keras.layers.Average(name = 'Ave91607', )([Zer57565,Lay86772])
model = tf.keras.models.Model(inputs=[in0Ave71677,in1Ave71677,in0Max37969,in1Max37969], outputs=Ave91607)
in0Ave71677 = tf.constant([[[[0.1544]]]])
in1Ave71677 = tf.constant([[[[0.8919]]]])
in0Max37969 = tf.constant([[[0.0975], [0.8053]]])
in1Max37969 = tf.constant([[[0.2172], [0.3869]]])
print (np.array2string(model.predict([in0Ave71677,in1Ave71677,in0Max37969,in1Max37969],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Ave91607.png')

LAve71677 = average_layer([[[[[0.1544]]]], [[[[0.8919]]]]], Ave71677), 
LRes65099 = reshape_layer(Ave71677, [1, 1], Res65099), 
LZer57565 = zero_padding1D_layer(Res65099, 1, 0, Zer57565), 
LMax37969 = maximum_layer([[[[0.0975], [0.8053]]], [[[0.2172], [0.3869]]]], Max37969), 
LLay86772 = layer_normalization_layer(Max37969, 2, 1.419863066249383, Lay86772), 
LAve91607 = average_layer([Zer57565,Lay86772], Ave91607), 
exec_layers([LAve71677,LRes65099,LZer57565,LMax37969,LLay86772,LAve91607],["Ave71677","Res65099","Zer57565","Max37969","Lay86772","Ave91607"],Ave91607,"Ave91607")

Actual (Unparsed): [[[0.0000000], [0.2615750]]]

Expected (Unparsed): [[[0.0],[0.261575]]]

Actual:   [[[0], [0.2616]]]

Expected: [[[0], [0.2616]]]