import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Mul29439 = tf.keras.layers.Input(shape=([1, 1, 2, 1]))
in1Mul29439 = tf.keras.layers.Input(shape=([1, 1, 2, 1]))
in0Ave23435 = tf.keras.layers.Input(shape=([2, 1]))
in1Ave23435 = tf.keras.layers.Input(shape=([2, 1]))
in0Con91479 = tf.keras.layers.Input(shape=([2, 3, 1]))
in0Con25313 = tf.keras.layers.Input(shape=([2, 2, 1, 2]))
in0Con67619 = tf.keras.layers.Input(shape=([2, 3, 2]))
in0Sep24659 = tf.keras.layers.Input(shape=([1, 2, 1]))
in0Ave17447 = tf.keras.layers.Input(shape=([2, 1, 2]))
in1Ave17447 = tf.keras.layers.Input(shape=([2, 1, 2]))
in0Con91009 = tf.keras.layers.Input(shape=([2, 3, 1]))

Mul29439 = keras.layers.Multiply(name = 'Mul29439', )([in0Mul29439,in1Mul29439])
Res50104 = keras.layers.Reshape((1, 1, 2), name = 'Res50104', )(Mul29439)
Ave23435 = keras.layers.Average(name = 'Ave23435', )([in0Ave23435,in1Ave23435])
Res88850 = keras.layers.Reshape((1, 1, 2), name = 'Res88850', )(Ave23435)
Mul83172 = keras.layers.Multiply(name = 'Mul83172', )([Res50104,Res88850])
Zer80949 = keras.layers.ZeroPadding2D(padding=((1, 0), (2, 0)), name = 'Zer80949', )(Mul83172)
Con91479 = keras.layers.Concatenate(axis=3, name = 'Con91479', )([Zer80949,in0Con91479])
Con25313 = keras.layers.Conv3D(3, (2, 2, 1),strides=(2, 12, 1), padding='valid', dilation_rate=(1, 1, 1), name = 'Con25313', )(in0Con25313)
Res68654 = keras.layers.Reshape((1, 1, 3), name = 'Res68654', )(Con25313)
Res56798 = keras.layers.Reshape((1, 3), name = 'Res56798', )(Res68654)
Res89773 = keras.layers.Reshape((1, 3, 1), name = 'Res89773', )(Res56798)
PRe11235 = keras.layers.PReLU(name = 'PRe11235', )(Res89773)
Zer76488 = keras.layers.ZeroPadding2D(padding=((1, 0), (0, 0)), name = 'Zer76488', )(PRe11235)
Con67619 = keras.layers.Concatenate(axis=3, name = 'Con67619', )([Zer76488,in0Con67619])
Sep24659 = keras.layers.SeparableConv2D(3, (1, 1),strides=(1, 1), padding='valid', name = 'Sep24659', )(in0Sep24659)
Zer78478 = keras.layers.ZeroPadding2D(padding=((1, 0), (1, 0)), name = 'Zer78478', )(Sep24659)
Ave17447 = keras.layers.Average(name = 'Ave17447', )([in0Ave17447,in1Ave17447])
Zer70864 = keras.layers.ZeroPadding2D(padding=((0, 0), (2, 0)), name = 'Zer70864', )(Ave17447)
Con91009 = keras.layers.Concatenate(axis=3, name = 'Con91009', )([Zer70864,in0Con91009])
Min6402 = keras.layers.Minimum(name = 'Min6402', )([Zer78478,Con91009])
Add80270 = keras.layers.Add(name = 'Add80270', )([Con67619,Min6402])
Ave39638 = keras.layers.Average(name = 'Ave39638', )([Con91479,Add80270])
model = tf.keras.models.Model(inputs=[in0Mul29439,in1Mul29439,in0Ave23435,in1Ave23435,in0Con91479,in0Con25313,in0Con67619,in0Sep24659,in0Ave17447,in1Ave17447,in0Con91009], outputs=Ave39638)
w = model.get_layer('Con25313').get_weights() 
w[0] = np.array([[[[[0.1981, 0.049, 0.4382], [0.8369, 0.1102, 0.4655]]], [[[0.9172, 0.5563, 0.2498], [0.9632, 0.2175, 0.692]]]], [[[[0.3113, 0.6477, 0.494], [0.6019, 0.5511, 0.7536]]], [[[0.6967, 0.8716, 0.2631], [0.879, 0.7973, 0.0503]]]]])
w[1] = np.array([0, 0, 0])
model.get_layer('Con25313').set_weights(w) 
w = model.get_layer('PRe11235').get_weights() 
w[0] = np.array([[[0.9916], [0.018], [0.1485]]])
model.get_layer('PRe11235').set_weights(w) 
w = model.get_layer('Sep24659').get_weights() 
w[0] = np.array([[[[0.5129]]]])
w[1] = np.array([[[[0.4154, 0.4513, 0.7164]]]])
w[2] = np.array([0, 0, 0])
model.get_layer('Sep24659').set_weights(w) 
in0Mul29439 = tf.constant([[[[[0.6923], [0.3119]]]]])
in1Mul29439 = tf.constant([[[[[0.6069], [0.5735]]]]])
in0Ave23435 = tf.constant([[[0.89], [0.1559]]])
in1Ave23435 = tf.constant([[[0.1997], [0.3109]]])
in0Con91479 = tf.constant([[[[0.0487], [0.2937], [0.5023]], [[0.5347], [0.6463], [0.2526]]]])
in0Con25313 = tf.constant([[[[[0.7351, 0.5409]], [[0.4873, 0.8208]]], [[[0.1351, 0.7541]], [[0.0342, 0.7687]]]]])
in0Con67619 = tf.constant([[[[0.8706, 0.8249], [0.4095, 0.8471], [0.5308, 0.3399]], [[0.2709, 0.4503], [0.4548, 0.4581], [0.6713, 0.094]]]])
in0Sep24659 = tf.constant([[[[0.886], [0.4426]]]])
in0Ave17447 = tf.constant([[[[0.0259, 0.1562]], [[0.2322, 0.1356]]]])
in1Ave17447 = tf.constant([[[[0.7955, 0.9503]], [[0.9133, 0.2164]]]])
in0Con91009 = tf.constant([[[[0.6553], [0.5853], [0.8849]], [[0.6066], [0.1407], [0.8741]]]])
print (np.array2string(model.predict([in0Mul29439,in1Mul29439,in0Ave23435,in1Ave23435,in0Con91479,in0Con25313,in0Con67619,in0Sep24659,in0Ave17447,in1Ave17447,in0Con91009],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Ave39638.png')

LMul29439 = multiply_layer([[[[[[0.6923], [0.3119]]]]], [[[[[0.6069], [0.5735]]]]]], Mul29439), 
LRes50104 = reshape_layer(Mul29439, [1, 1, 2], Res50104), 
LAve23435 = average_layer([[[[0.89], [0.1559]]], [[[0.1997], [0.3109]]]], Ave23435), 
LRes88850 = reshape_layer(Ave23435, [1, 1, 2], Res88850), 
LMul83172 = multiply_layer([Res50104,Res88850], Mul83172), 
LZer80949 = zero_padding2D_layer(Mul83172, 1, 0, 2, 0, Zer80949), 
LCon91479 = concatenate_layer([Zer80949,[[[[0.0487], [0.2937], [0.5023]], [[0.5347], [0.6463], [0.2526]]]]], 3, Con91479), 
LCon25313 = conv3D_layer([[[[[0.7351, 0.5409]], [[0.4873, 0.8208]]], [[[0.1351, 0.7541]], [[0.0342, 0.7687]]]]], 2, 2, 1,[[[[[0.1981, 0.049, 0.4382], [0.8369, 0.1102, 0.4655]]], [[[0.9172, 0.5563, 0.2498], [0.9632, 0.2175, 0.692]]]], [[[[0.3113, 0.6477, 0.494], [0.6019, 0.5511, 0.7536]]], [[[0.6967, 0.8716, 0.2631], [0.879, 0.7973, 0.0503]]]]],[0, 0, 0], 2, 12, 1, false, 1, 1, 1, Con25313), 
LRes68654 = reshape_layer(Con25313, [1, 1, 3], Res68654), 
LRes56798 = reshape_layer(Res68654, [1, 3], Res56798), 
LRes89773 = reshape_layer(Res56798, [1, 3, 1], Res89773), 
LPRe11235 = prelu_layer(Res89773, [[[0.9916], [0.018], [0.1485]]], PRe11235), 
LZer76488 = zero_padding2D_layer(PRe11235, 1, 0, 0, 0, Zer76488), 
LCon67619 = concatenate_layer([Zer76488,[[[[0.8706, 0.8249], [0.4095, 0.8471], [0.5308, 0.3399]], [[0.2709, 0.4503], [0.4548, 0.4581], [0.6713, 0.094]]]]], 3, Con67619), 
LSep24659 = separable_conv2D_layer([[[[0.886], [0.4426]]]], 1, 1,[[[[[0.5129]]]],[[[[0.4154, 0.4513, 0.7164]]]]],[0, 0, 0], 1, 1, false, Sep24659), 
LZer78478 = zero_padding2D_layer(Sep24659, 1, 0, 1, 0, Zer78478), 
LAve17447 = average_layer([[[[[0.0259, 0.1562]], [[0.2322, 0.1356]]]], [[[[0.7955, 0.9503]], [[0.9133, 0.2164]]]]], Ave17447), 
LZer70864 = zero_padding2D_layer(Ave17447, 0, 0, 2, 0, Zer70864), 
LCon91009 = concatenate_layer([Zer70864,[[[[0.6553], [0.5853], [0.8849]], [[0.6066], [0.1407], [0.8741]]]]], 3, Con91009), 
LMin6402 = minimum_layer([Zer78478,Con91009], Min6402), 
LAdd80270 = add_layer([Con67619,Min6402], Add80270), 
LAve39638 = average_layer([Con91479,Add80270], Ave39638), 
exec_layers([LMul29439,LRes50104,LAve23435,LRes88850,LMul83172,LZer80949,LCon91479,LCon25313,LRes68654,LRes56798,LRes89773,LPRe11235,LZer76488,LCon67619,LSep24659,LZer78478,LAve17447,LZer70864,LCon91009,LMin6402,LAdd80270,LAve39638],["Mul29439","Res50104","Ave23435","Res88850","Mul83172","Zer80949","Con91479","Con25313","Res68654","Res56798","Res89773","PRe11235","Zer76488","Con67619","Sep24659","Zer78478","Ave17447","Zer70864","Con91009","Min6402","Add80270","Ave39638"],Ave39638,"Ave39638")

Actual (Unparsed): [[[[0.0000000, 0.4353000, 0.4368000], [0.0000000, 0.2047500, 0.5704000], [0.0000000, 0.2654000, 0.4211000]], [[1.5156563, 0.1354500, 0.4925000], [0.8455091, 0.2274000, 0.6225500], [1.1347730, 0.4077494, 0.2546148]]]]

Expected (Unparsed): [[[[0,0.4353,0.43679999999999997],[0,0.20475,0.5704],[0,0.2654,0.4211]],[[1.5156562500000001,0.13545,0.49249999999999994],[0.8455090399999999,0.2274,0.6225499999999999],[1.13477296676775,0.407749374356,0.254614817228]]]]

Actual:   [[[[0, 0.4353, 0.4368], [0, 0.2048, 0.5704], [0, 0.2654, 0.4211]], [[1.5157, 0.1355, 0.4925], [0.8456, 0.2274, 0.6226], [1.1348, 0.4078, 0.2547]]]]

Expected: [[[[0, 0.4353, 0.4368], [0, 0.2048, 0.5704], [0, 0.2654, 0.4211]], [[1.5157, 0.1355, 0.4925], [0.8456, 0.2274, 0.6226], [1.1348, 0.4078, 0.2547]]]]