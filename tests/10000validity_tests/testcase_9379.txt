import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Sub53898 = tf.keras.layers.Input(shape=([2]))
in1Sub53898 = tf.keras.layers.Input(shape=([2]))
in0Sub88959 = tf.keras.layers.Input(shape=([3, 3, 2]))
in1Sub88959 = tf.keras.layers.Input(shape=([3, 3, 2]))
in0Con19827 = tf.keras.layers.Input(shape=([2]))

Sub53898 = keras.layers.Subtract(name = 'Sub53898', )([in0Sub53898,in1Sub53898])
Res69930 = keras.layers.Reshape((2, 1), name = 'Res69930', )(Sub53898)
Res80417 = keras.layers.Reshape((2, 1, 1), name = 'Res80417', )(Res69930)
Loc81670 = keras.layers.LocallyConnected2D(3, (2, 1),strides=(1, 1), name = 'Loc81670', )(Res80417)
Cro14285 = keras.layers.Cropping2D(cropping=((0, 0), (0, 0)), name = 'Cro14285', )(Loc81670)
Res9771 = keras.layers.Reshape((1, 3), name = 'Res9771', )(Cro14285)
Fla11459 = keras.layers.Flatten(name = 'Fla11459', )(Res9771)
Sub88959 = keras.layers.Subtract(name = 'Sub88959', )([in0Sub88959,in1Sub88959])
Res65252 = keras.layers.Reshape((3, 3, 2, 1), name = 'Res65252', )(Sub88959)
Glo74725 = keras.layers.GlobalAveragePooling3D(name = 'Glo74725', )(Res65252)
Con19827 = keras.layers.Concatenate(axis=1, name = 'Con19827', )([Glo74725,in0Con19827])
Add17573 = keras.layers.Add(name = 'Add17573', )([Fla11459,Con19827])
model = tf.keras.models.Model(inputs=[in0Sub53898,in1Sub53898,in0Sub88959,in1Sub88959,in0Con19827], outputs=Add17573)
w = model.get_layer('Loc81670').get_weights() 
w[0] = np.array([[[0.8044, 0.9315, 0.1819], [0.3562, 0.7309, 0.1782]]])
w[1] = np.array([[[0, 0, 0]]])
model.get_layer('Loc81670').set_weights(w) 
in0Sub53898 = tf.constant([[0.1829, 0.5703]])
in1Sub53898 = tf.constant([[0.9478, 0.6687]])
in0Sub88959 = tf.constant([[[[0.2347, 0.7893], [0.8685, 0.9916], [0.6679, 0.261]], [[0.1149, 0.5437], [0.8199, 0.5555], [0.0167, 0.0666]], [[0.1503, 0.1854], [0.3925, 0.4119], [0.2489, 0.4811]]]])
in1Sub88959 = tf.constant([[[[0.4336, 0.0079], [0.7682, 0.7817], [0.9292, 0.0139]], [[0.5836, 0.5556], [0.514, 0.8637], [0.1863, 0.4978]], [[0.3402, 0.9721], [0.2989, 0.6106], [0.0731, 0.4792]]]])
in0Con19827 = tf.constant([[0.2986, 0.7529]])
print (np.array2string(model.predict([in0Sub53898,in1Sub53898,in0Sub88959,in1Sub88959,in0Con19827],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Add17573.png')

LSub53898 = subtract_layer([[0.1829, 0.5703]], [[0.9478, 0.6687]], Sub53898), 
LRes69930 = reshape_layer(Sub53898, [2, 1], Res69930), 
LRes80417 = reshape_layer(Res69930, [2, 1, 1], Res80417), 
LLoc81670 = locally_connected2D_layer(Res80417, 2, 1,[[[0.8044, 0.9315, 0.1819], [0.3562, 0.7309, 0.1782]]],[[[0, 0, 0]]], 1, 1, Loc81670), 
LCro14285 = cropping2D_layer(Loc81670, 0, 0, 0, 0, Cro14285), 
LRes9771 = reshape_layer(Cro14285, [1, 3], Res9771), 
LFla11459 = flatten_layer(Res9771, Fla11459), 
LSub88959 = subtract_layer([[[[0.2347, 0.7893], [0.8685, 0.9916], [0.6679, 0.261]], [[0.1149, 0.5437], [0.8199, 0.5555], [0.0167, 0.0666]], [[0.1503, 0.1854], [0.3925, 0.4119], [0.2489, 0.4811]]]], [[[[0.4336, 0.0079], [0.7682, 0.7817], [0.9292, 0.0139]], [[0.5836, 0.5556], [0.514, 0.8637], [0.1863, 0.4978]], [[0.3402, 0.9721], [0.2989, 0.6106], [0.0731, 0.4792]]]], Sub88959), 
LRes65252 = reshape_layer(Sub88959, [3, 3, 2, 1], Res65252), 
LGlo74725 = global_average_pooling3D_layer(Res65252, Glo74725), 
LCon19827 = concatenate_layer([Glo74725,[[0.2986, 0.7529]]], 1, Con19827), 
LAdd17573 = add_layer([Fla11459,Con19827], Add17573), 
exec_layers([LSub53898,LRes69930,LRes80417,LLoc81670,LCro14285,LRes9771,LFla11459,LSub88959,LRes65252,LGlo74725,LCon19827,LAdd17573],["Sub53898","Res69930","Res80417","Loc81670","Cro14285","Res9771","Fla11459","Sub88959","Res65252","Glo74725","Con19827","Add17573"],Add17573,"Add17573")

Actual (Unparsed): [[-0.7119578, -0.4858249, 0.5962298]]

Expected (Unparsed): [[-0.7119578622222221,-0.48582490999999983,0.5962298100000001]]

Actual:   [[-0.7119, -0.4858, 0.5963]]

Expected: [[-0.7119, -0.4858, 0.5963]]