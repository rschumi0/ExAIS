import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Mul34389 = tf.keras.layers.Input(shape=([1, 2, 2]))
in1Mul34389 = tf.keras.layers.Input(shape=([1, 2, 2]))

Mul34389 = keras.layers.Multiply(name = 'Mul34389', )([in0Mul34389,in1Mul34389])
Res82204 = keras.layers.Reshape((1, 4), name = 'Res82204', )(Mul34389)
Loc81382 = keras.layers.LocallyConnected1D(3, (1),strides=(1), name = 'Loc81382', )(Res82204)
model = tf.keras.models.Model(inputs=[in0Mul34389,in1Mul34389], outputs=Loc81382)
w = model.get_layer('Loc81382').get_weights() 
w[0] = np.array([[[0.1774, 0.4598, 0.6499], [0.3703, 0.9638, 0.4365], [0.7515, 0.3198, 0.0286], [0.6788, 0.4284, 0.3161]]])
w[1] = np.array([[0, 0, 0]])
model.get_layer('Loc81382').set_weights(w) 
in0Mul34389 = tf.constant([[[[0.5275, 0.2857], [0.0606, 0.1572]]]])
in1Mul34389 = tf.constant([[[[0.7198, 0.6395], [0.0003, 0.9397]]]])
print (np.array2string(model.predict([in0Mul34389,in1Mul34389],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Loc81382.png')

LMul34389 = multiply_layer([[[[[0.5275, 0.2857], [0.0606, 0.1572]]]], [[[[0.7198, 0.6395], [0.0003, 0.9397]]]]], Mul34389), 
LRes82204 = reshape_layer(Mul34389, [1, 4], Res82204), 
LLoc81382 = locally_connected1D_layer(Res82204, 1,[[[0.1774, 0.4598, 0.6499], [0.3703, 0.9638, 0.4365], [0.7515, 0.3198, 0.0286], [0.6788, 0.4284, 0.3161]]],[[0, 0, 0]], 1, Loc81382), 
exec_layers([LMul34389,LRes82204,LLoc81382],["Mul34389","Res82204","Loc81382"],Loc81382,"Loc81382")

Actual (Unparsed): [[[0.2353001, 0.4139642, 0.3732093]]]

Expected (Unparsed): [[[0.23530008980699998,0.41396417649,0.373209330997]]]

Actual:   [[[0.2354, 0.414, 0.3733]]]

Expected: [[[0.2354, 0.414, 0.3733]]]