import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Min47643 = tf.keras.layers.Input(shape=([2, 1, 1, 1]))
in1Min47643 = tf.keras.layers.Input(shape=([2, 1, 1, 1]))
in0Con4126 = tf.keras.layers.Input(shape=([2, 2]))
in0Con12772 = tf.keras.layers.Input(shape=([1, 2]))
in0Max56825 = tf.keras.layers.Input(shape=([2, 2, 2, 1]))
in1Max56825 = tf.keras.layers.Input(shape=([2, 2, 2, 1]))

Min47643 = keras.layers.Minimum(name = 'Min47643', )([in0Min47643,in1Min47643])
Res32690 = keras.layers.Reshape((2, 1, 1), name = 'Res32690', )(Min47643)
Con35196 = keras.layers.Conv2DTranspose(2, (1, 1),strides=(1, 1), padding='valid', name = 'Con35196', )(Res32690)
Res16039 = keras.layers.Reshape((2, 2), name = 'Res16039', )(Con35196)
Con4126 = keras.layers.Concatenate(axis=2, name = 'Con4126', )([Res16039,in0Con4126])
Con12772 = keras.layers.Conv1D(4, (1),strides=(1), padding='same', dilation_rate=(1), name = 'Con12772', )(in0Con12772)
Lea85716 = keras.layers.LeakyReLU(alpha=1.8704011031542669, name = 'Lea85716', )(Con12772)
Zer70331 = keras.layers.ZeroPadding1D(padding=((1, 0)), name = 'Zer70331', )(Lea85716)
Mul75756 = keras.layers.Multiply(name = 'Mul75756', )([Con4126,Zer70331])
Zer29731 = keras.layers.ZeroPadding1D(padding=((2, 0)), name = 'Zer29731', )(Mul75756)
Max56825 = keras.layers.Maximum(name = 'Max56825', )([in0Max56825,in1Max56825])
Res1618 = keras.layers.Reshape((2, 2, 2), name = 'Res1618', )(Max56825)
Res49945 = keras.layers.Reshape((2, 4), name = 'Res49945', )(Res1618)
Zer72765 = keras.layers.ZeroPadding1D(padding=((1, 1)), name = 'Zer72765', )(Res49945)
Mul9050 = keras.layers.Multiply(name = 'Mul9050', )([Zer29731,Zer72765])
model = tf.keras.models.Model(inputs=[in0Min47643,in1Min47643,in0Con4126,in0Con12772,in0Max56825,in1Max56825], outputs=Mul9050)
w = model.get_layer('Con35196').get_weights() 
w[0] = np.array([[[[0.5012], [0.5454]]]])
w[1] = np.array([0, 0])
model.get_layer('Con35196').set_weights(w) 
w = model.get_layer('Con12772').get_weights() 
w[0] = np.array([[[0.9483, 0.3092, 0.819, 0.6952], [0.5608, 0.7765, 0.2626, 0.6699]]])
w[1] = np.array([0, 0, 0, 0])
model.get_layer('Con12772').set_weights(w) 
in0Min47643 = tf.constant([[[[[0.3647]]], [[[0.2493]]]]])
in1Min47643 = tf.constant([[[[[0.7465]]], [[[0.2345]]]]])
in0Con4126 = tf.constant([[[0.5381, 0.6995], [0.7779, 0.2484]]])
in0Con12772 = tf.constant([[[0.7536, 0.2658]]])
in0Max56825 = tf.constant([[[[[0.2828], [0.8537]], [[0.9792], [0.1721]]], [[[0.4693], [0.1949]], [[0.9332], [0.8401]]]]])
in1Max56825 = tf.constant([[[[[0.1144], [0.9476]], [[0.6092], [0.7098]]], [[[0.1396], [0.5877]], [[0.3779], [0.4698]]]]])
print (np.array2string(model.predict([in0Min47643,in1Min47643,in0Con4126,in0Con12772,in0Max56825,in1Max56825],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Mul9050.png')

LMin47643 = minimum_layer([[[[[[0.3647]]], [[[0.2493]]]]], [[[[[0.7465]]], [[[0.2345]]]]]], Min47643), 
LRes32690 = reshape_layer(Min47643, [2, 1, 1], Res32690), 
LCon35196 = conv2D_transpose_layer(Res32690, 1, 1,[[[[0.5012], [0.5454]]]],[0, 0], 1, 1, false, Con35196), 
LRes16039 = reshape_layer(Con35196, [2, 2], Res16039), 
LCon4126 = concatenate_layer([Res16039,[[[0.5381, 0.6995], [0.7779, 0.2484]]]], 2, Con4126), 
LCon12772 = conv1D_layer([[[0.7536, 0.2658]]], 1,[[[0.9483, 0.3092, 0.819, 0.6952], [0.5608, 0.7765, 0.2626, 0.6699]]],[0, 0, 0, 0], 1, true, 1, Con12772), 
LLea85716 = leaky_relu_layer(Con12772, 1.8704011031542669, Lea85716), 
LZer70331 = zero_padding1D_layer(Lea85716, 1, 0, Zer70331), 
LMul75756 = multiply_layer([Con4126,Zer70331], Mul75756), 
LZer29731 = zero_padding1D_layer(Mul75756, 2, 0, Zer29731), 
LMax56825 = maximum_layer([[[[[[0.2828], [0.8537]], [[0.9792], [0.1721]]], [[[0.4693], [0.1949]], [[0.9332], [0.8401]]]]], [[[[[0.1144], [0.9476]], [[0.6092], [0.7098]]], [[[0.1396], [0.5877]], [[0.3779], [0.4698]]]]]], Max56825), 
LRes1618 = reshape_layer(Max56825, [2, 2, 2], Res1618), 
LRes49945 = reshape_layer(Res1618, [2, 4], Res49945), 
LZer72765 = zero_padding1D_layer(Res49945, 1, 1, Zer72765), 
LMul9050 = multiply_layer([Zer29731,Zer72765], Mul9050), 
exec_layers([LMin47643,LRes32690,LCon35196,LRes16039,LCon4126,LCon12772,LLea85716,LZer70331,LMul75756,LZer29731,LMax56825,LRes1618,LRes49945,LZer72765,LMul9050],["Min47643","Res32690","Con35196","Res16039","Con4126","Con12772","Lea85716","Zer70331","Mul75756","Zer29731","Max56825","Res1618","Res49945","Zer72765","Mul9050"],Mul9050,"Mul9050")

Actual (Unparsed): [[[0.0000000, 0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000, 0.0000000]]]

Expected (Unparsed): [[[0,0,0,0],[0.0,0.0,0.0,0.0],[0.0,0.0,0.0,0.0],[0.0,0.0,0.0,0.0]]]

Actual:   [[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]]

Expected: [[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]]