import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Per66522 = tf.keras.layers.Input(shape=([2, 2]))
in0Con9531 = tf.keras.layers.Input(shape=([2, 1]))
in0Ave36204 = tf.keras.layers.Input(shape=([2, 1, 1, 2]))
in1Ave36204 = tf.keras.layers.Input(shape=([2, 1, 1, 2]))
in0Glo3473 = tf.keras.layers.Input(shape=([1, 1]))
in0Mul43205 = tf.keras.layers.Input(shape=([1, 1]))
in1Mul43205 = tf.keras.layers.Input(shape=([1, 1]))
in0Con68068 = tf.keras.layers.Input(shape=([3]))
in0Add49542 = tf.keras.layers.Input(shape=([1, 2, 2]))
in1Add49542 = tf.keras.layers.Input(shape=([1, 2, 2]))
in0Up_12855 = tf.keras.layers.Input(shape=([4, 1, 1, 3]))
in0Con20589 = tf.keras.layers.Input(shape=([1]))

Per66522 = keras.layers.Permute((2,1), name = 'Per66522',)(in0Per66522)
Sim63391 = keras.layers.SimpleRNN(2,name = 'Sim63391', )(Per66522)
Res53380 = keras.layers.Reshape((2, 1), name = 'Res53380', )(Sim63391)
Con9531 = keras.layers.Concatenate(axis=2, name = 'Con9531', )([Res53380,in0Con9531])
Ave36204 = keras.layers.Average(name = 'Ave36204', )([in0Ave36204,in1Ave36204])
Res28851 = keras.layers.Reshape((2, 1, 2), name = 'Res28851', )(Ave36204)
Res38849 = keras.layers.Reshape((2, 2), name = 'Res38849', )(Res28851)
Per69685 = keras.layers.Permute((2,1), name = 'Per69685',)(Res38849)
Min64240 = keras.layers.Minimum(name = 'Min64240', )([Con9531,Per69685])
Fla10510 = keras.layers.Flatten(name = 'Fla10510', )(Min64240)
Glo3473 = keras.layers.GlobalMaxPool1D(name = 'Glo3473', )(in0Glo3473)
Res66099 = keras.layers.Reshape((1, 1), name = 'Res66099', )(Glo3473)
Res101 = keras.layers.Reshape((1, 1, 1), name = 'Res101', )(Res66099)
Res3283 = keras.layers.Reshape((1, 1, 1, 1), name = 'Res3283', )(Res101)
Mul43205 = keras.layers.Multiply(name = 'Mul43205', )([in0Mul43205,in1Mul43205])
Res26003 = keras.layers.Reshape((1, 1, 1), name = 'Res26003', )(Mul43205)
Res84380 = keras.layers.Reshape((1, 1, 1, 1), name = 'Res84380', )(Res26003)
Cro29187 = keras.layers.Cropping3D(cropping=((0, 0), (0, 0), (0, 0)), name = 'Cro29187', )(Res84380)
Mul12192 = keras.layers.Multiply(name = 'Mul12192', )([Res3283,Cro29187])
Res85992 = keras.layers.Reshape((1, 1, 1), name = 'Res85992', )(Mul12192)
Res5007 = keras.layers.Reshape((1, 1), name = 'Res5007', )(Res85992)
Fla65198 = keras.layers.Flatten(name = 'Fla65198', )(Res5007)
Con68068 = keras.layers.Concatenate(axis=1, name = 'Con68068', )([Fla65198,in0Con68068])
Add49542 = keras.layers.Add(name = 'Add49542', )([in0Add49542,in1Add49542])
Res7693 = keras.layers.Reshape((1, 4), name = 'Res7693', )(Add49542)
Fla49471 = keras.layers.Flatten(name = 'Fla49471', )(Res7693)
Up_12855 = keras.layers.UpSampling3D(size=(2, 1, 2), name = 'Up_12855', )(in0Up_12855)
Glo32514 = keras.layers.GlobalAveragePooling3D(name = 'Glo32514', )(Up_12855)
Con20589 = keras.layers.Concatenate(axis=1, name = 'Con20589', )([Glo32514,in0Con20589])
Sub11023 = keras.layers.Subtract(name = 'Sub11023', )([Fla49471,Con20589])
Add55688 = keras.layers.Add(name = 'Add55688', )([Con68068,Sub11023])
Min48261 = keras.layers.Minimum(name = 'Min48261', )([Fla10510,Add55688])
model = tf.keras.models.Model(inputs=[in0Per66522,in0Con9531,in0Ave36204,in1Ave36204,in0Glo3473,in0Mul43205,in1Mul43205,in0Con68068,in0Add49542,in1Add49542,in0Up_12855,in0Con20589], outputs=Min48261)
w = model.get_layer('Sim63391').get_weights() 
w[0] = np.array([[8, 4], [6, 7]])
w[1] = np.array([[2, 7], [10, 3]])
w[2] = np.array([7, 7])
model.get_layer('Sim63391').set_weights(w) 
in0Per66522 = tf.constant([[[1.4574, 1.7713], [1.9998, 1.155]]])
in0Con9531 = tf.constant([[[0.7212], [0.7916]]])
in0Ave36204 = tf.constant([[[[[0.7281, 0.0553]]], [[[0.8407, 0.3626]]]]])
in1Ave36204 = tf.constant([[[[[0.6434, 0.6749]]], [[[0.8846, 0.4579]]]]])
in0Glo3473 = tf.constant([[[1.3359]]])
in0Mul43205 = tf.constant([[[0.1716]]])
in1Mul43205 = tf.constant([[[0.2344]]])
in0Con68068 = tf.constant([[0.56, 0.3851, 0.1998]])
in0Add49542 = tf.constant([[[[0.2076, 0.2445], [0.2974, 0.9137]]]])
in1Add49542 = tf.constant([[[[0.6314, 0.0354], [0.6044, 0.5123]]]])
in0Up_12855 = tf.constant([[[[[1.1479, 1.9802, 1.5073]]], [[[1.6393, 1.0074, 1.0921]]], [[[1.4567, 1.9526, 1.9684]]], [[[1.1074, 1.908, 1.6486]]]]])
in0Con20589 = tf.constant([[0.9425]])
print (np.array2string(model.predict([in0Per66522,in0Con9531,in0Ave36204,in1Ave36204,in0Glo3473,in0Mul43205,in1Mul43205,in0Con68068,in0Add49542,in1Add49542,in0Up_12855,in0Con20589],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Min48261.png')

LPer66522 = permute_layer([[[1.4574, 1.7713], [1.9998, 1.155]]], 2,1, Per66522), 
LSim63391 = simple_rnn_layer(Per66522,[[8, 4], [6, 7]],[[2, 7], [10, 3]],[7, 7], Sim63391), 
LRes53380 = reshape_layer(Sim63391, [2, 1], Res53380), 
LCon9531 = concatenate_layer([Res53380,[[[0.7212], [0.7916]]]], 2, Con9531), 
LAve36204 = average_layer([[[[[[0.7281, 0.0553]]], [[[0.8407, 0.3626]]]]], [[[[[0.6434, 0.6749]]], [[[0.8846, 0.4579]]]]]], Ave36204), 
LRes28851 = reshape_layer(Ave36204, [2, 1, 2], Res28851), 
LRes38849 = reshape_layer(Res28851, [2, 2], Res38849), 
LPer69685 = permute_layer(Res38849, 2,1, Per69685), 
LMin64240 = minimum_layer([Con9531,Per69685], Min64240), 
LFla10510 = flatten_layer(Min64240, Fla10510), 
LGlo3473 = global_max_pool1D_layer([[[1.3359]]], Glo3473), 
LRes66099 = reshape_layer(Glo3473, [1, 1], Res66099), 
LRes101 = reshape_layer(Res66099, [1, 1, 1], Res101), 
LRes3283 = reshape_layer(Res101, [1, 1, 1, 1], Res3283), 
LMul43205 = multiply_layer([[[[0.1716]]], [[[0.2344]]]], Mul43205), 
LRes26003 = reshape_layer(Mul43205, [1, 1, 1], Res26003), 
LRes84380 = reshape_layer(Res26003, [1, 1, 1, 1], Res84380), 
LCro29187 = cropping3D_layer(Res84380, 0, 0, 0, 0, 0, 0, Cro29187), 
LMul12192 = multiply_layer([Res3283,Cro29187], Mul12192), 
LRes85992 = reshape_layer(Mul12192, [1, 1, 1], Res85992), 
LRes5007 = reshape_layer(Res85992, [1, 1], Res5007), 
LFla65198 = flatten_layer(Res5007, Fla65198), 
LCon68068 = concatenate_layer([Fla65198,[[0.56, 0.3851, 0.1998]]], 1, Con68068), 
LAdd49542 = add_layer([[[[[0.2076, 0.2445], [0.2974, 0.9137]]]], [[[[0.6314, 0.0354], [0.6044, 0.5123]]]]], Add49542), 
LRes7693 = reshape_layer(Add49542, [1, 4], Res7693), 
LFla49471 = flatten_layer(Res7693, Fla49471), 
LUp_12855 = up_sampling3D_layer([[[[[1.1479, 1.9802, 1.5073]]], [[[1.6393, 1.0074, 1.0921]]], [[[1.4567, 1.9526, 1.9684]]], [[[1.1074, 1.908, 1.6486]]]]], 2, 1, 2, Up_12855), 
LGlo32514 = global_average_pooling3D_layer(Up_12855, Glo32514), 
LCon20589 = concatenate_layer([Glo32514,[[0.9425]]], 1, Con20589), 
LSub11023 = subtract_layer(Fla49471,Con20589, Sub11023), 
LAdd55688 = add_layer([Con68068,Sub11023], Add55688), 
LMin48261 = minimum_layer([Fla10510,Add55688], Min48261), 
exec_layers([LPer66522,LSim63391,LRes53380,LCon9531,LAve36204,LRes28851,LRes38849,LPer69685,LMin64240,LFla10510,LGlo3473,LRes66099,LRes101,LRes3283,LMul43205,LRes26003,LRes84380,LCro29187,LMul12192,LRes85992,LRes5007,LFla65198,LCon68068,LAdd49542,LRes7693,LFla49471,LUp_12855,LGlo32514,LCon20589,LSub11023,LAdd55688,LMin48261],["Per66522","Sim63391","Res53380","Con9531","Ave36204","Res28851","Res38849","Per69685","Min64240","Fla10510","Glo3473","Res66099","Res101","Res3283","Mul43205","Res26003","Res84380","Cro29187","Mul12192","Res85992","Res5007","Fla65198","Con68068","Add49542","Res7693","Fla49471","Up_12855","Glo32514","Con20589","Sub11023","Add55688","Min48261"],Min48261,"Min48261")

Actual (Unparsed): [[-0.4450910, -0.8721500, -0.2672000, 0.4102500]]

Expected (Unparsed): [[-0.4450910408640001,-0.8721500000000002,-0.2672,0.41025]]

Actual:   [[-0.445, -0.8721, -0.2672, 0.4103]]

Expected: [[-0.445, -0.8721, -0.2672, 0.4103]]