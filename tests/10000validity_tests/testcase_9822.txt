import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Loc27177 = tf.keras.layers.Input(shape=([1, 1]))
in0Min81737 = tf.keras.layers.Input(shape=([1, 1, 1]))
in1Min81737 = tf.keras.layers.Input(shape=([1, 1, 1]))

Loc27177 = keras.layers.LocallyConnected1D(3, (1),strides=(1), name = 'Loc27177', )(in0Loc27177)
Res56258 = keras.layers.Reshape((1, 3, 1), name = 'Res56258', )(Loc27177)
Ave4222 = keras.layers.AveragePooling2D(pool_size=(1, 3), name = 'Ave4222', )(Res56258)
Min81737 = keras.layers.Minimum(name = 'Min81737', )([in0Min81737,in1Min81737])
Mul50900 = keras.layers.Multiply(name = 'Mul50900', )([Ave4222,Min81737])
model = tf.keras.models.Model(inputs=[in0Loc27177,in0Min81737,in1Min81737], outputs=Mul50900)
w = model.get_layer('Loc27177').get_weights() 
w[0] = np.array([[[0.2668, 0.3431, 0.9339]]])
w[1] = np.array([[0, 0, 0]])
model.get_layer('Loc27177').set_weights(w) 
in0Loc27177 = tf.constant([[[0.9654]]])
in0Min81737 = tf.constant([[[[0.8136]]]])
in1Min81737 = tf.constant([[[[0.7642]]]])
print (np.array2string(model.predict([in0Loc27177,in0Min81737,in1Min81737],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Mul50900.png')

LLoc27177 = locally_connected1D_layer([[[0.9654]]], 1,[[[0.2668, 0.3431, 0.9339]]],[[0, 0, 0]], 1, Loc27177), 
LRes56258 = reshape_layer(Loc27177, [1, 3, 1], Res56258), 
LAve4222 = average_pooling2D_layer(Res56258, 1, 3, Ave4222), 
LMin81737 = minimum_layer([[[[[0.8136]]]], [[[[0.7642]]]]], Min81737), 
LMul50900 = multiply_layer([Ave4222,Min81737], Mul50900), 
exec_layers([LLoc27177,LRes56258,LAve4222,LMin81737,LMul50900],["Loc27177","Res56258","Ave4222","Min81737","Mul50900"],Mul50900,"Mul50900")

Actual (Unparsed): [[[[0.3796506]]]]

Expected (Unparsed): [[[[0.379650616728]]]]

Actual:   [[[[0.3797]]]]

Expected: [[[[0.3797]]]]