import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Con49795 = tf.keras.layers.Input(shape=([1, 1, 1]))
in0Mul3044 = tf.keras.layers.Input(shape=([1, 1, 2]))
in1Mul3044 = tf.keras.layers.Input(shape=([1, 1, 2]))

Con49795 = keras.layers.Conv2DTranspose(2, (1, 1),strides=(1, 1), padding='same', name = 'Con49795', )(in0Con49795)
Mul3044 = keras.layers.Multiply(name = 'Mul3044', )([in0Mul3044,in1Mul3044])
Max66890 = keras.layers.Maximum(name = 'Max66890', )([Con49795,Mul3044])
Bat40374 = keras.layers.BatchNormalization(axis=2, epsilon=0.4966750113294156,  name = 'Bat40374', )(Max66890)
Res74096 = keras.layers.Reshape((1, 2), name = 'Res74096', )(Bat40374)
Glo40743 = keras.layers.GlobalAveragePooling1D(name = 'Glo40743', )(Res74096)
model = tf.keras.models.Model(inputs=[in0Con49795,in0Mul3044,in1Mul3044], outputs=Glo40743)
w = model.get_layer('Con49795').get_weights() 
w[0] = np.array([[[[0.5441], [0.1727]]]])
w[1] = np.array([0, 0])
model.get_layer('Con49795').set_weights(w) 
w = model.get_layer('Bat40374').get_weights() 
w[0] = np.array([0.8378])
w[1] = np.array([0.7997])
w[2] = np.array([0.2435])
w[3] = np.array([0.797])
model.get_layer('Bat40374').set_weights(w) 
in0Con49795 = tf.constant([[[[0.7719]]]])
in0Mul3044 = tf.constant([[[[0.2459, 0.3995]]]])
in1Mul3044 = tf.constant([[[[0.301, 0.1704]]]])
print (np.array2string(model.predict([in0Con49795,in0Mul3044,in1Mul3044],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Glo40743.png')

LCon49795 = conv2D_transpose_layer([[[[0.7719]]]], 1, 1,[[[[0.5441], [0.1727]]]],[0, 0], 1, 1, true, Con49795), 
LMul3044 = multiply_layer([[[[[0.2459, 0.3995]]]], [[[[0.301, 0.1704]]]]], Mul3044), 
LMax66890 = maximum_layer([Con49795,Mul3044], Max66890), 
LBat40374 = batch_normalization_layer(Max66890, 2, 0.4966750113294156, [0.8378], [0.7997], [0.2435], [0.797], Bat40374), 
LRes74096 = reshape_layer(Bat40374, [1, 2], Res74096), 
LGlo40743 = global_average_pooling1D_layer(Res74096, Glo40743), 
exec_layers([LCon49795,LMul3044,LMax66890,LBat40374,LRes74096,LGlo40743],["Con49795","Mul3044","Max66890","Bat40374","Res74096","Glo40743"],Glo40743,"Glo40743")

Actual (Unparsed): [[0.9297019, 0.7185327]]

Expected (Unparsed): [[0.9297019325601554,0.7185326707906402]]

Actual:   [[0.9298, 0.7186]]

Expected: [[0.9298, 0.7186]]