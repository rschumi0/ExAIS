import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Mul39472 = tf.keras.layers.Input(shape=([1, 1, 1, 2]))
in1Mul39472 = tf.keras.layers.Input(shape=([1, 1, 1, 2]))
in0Con13646 = tf.keras.layers.Input(shape=([4, 5, 5, 1]))
in0Min79606 = tf.keras.layers.Input(shape=([2, 2, 2, 2]))
in1Min79606 = tf.keras.layers.Input(shape=([2, 2, 2, 2]))
in0Thr37737 = tf.keras.layers.Input(shape=([1, 2, 2, 1]))
in0Con62887 = tf.keras.layers.Input(shape=([2, 4, 3, 1]))

Mul39472 = keras.layers.Multiply(name = 'Mul39472', )([in0Mul39472,in1Mul39472])
Glo56732 = keras.layers.GlobalMaxPool3D(name = 'Glo56732', )(Mul39472)
Res42216 = keras.layers.Reshape((2, 1), name = 'Res42216', )(Glo56732)
Res17461 = keras.layers.Reshape((2, 1, 1), name = 'Res17461', )(Res42216)
Zer26293 = keras.layers.ZeroPadding2D(padding=((1, 1), (1, 1)), name = 'Zer26293', )(Res17461)
Res98139 = keras.layers.Reshape((4, 3, 1, 1), name = 'Res98139', )(Zer26293)
Zer17637 = keras.layers.ZeroPadding3D(padding=((0, 0), (2, 0), (4, 0)), name = 'Zer17637', )(Res98139)
Con13646 = keras.layers.Concatenate(axis=4, name = 'Con13646', )([Zer17637,in0Con13646])
Min79606 = keras.layers.Minimum(name = 'Min79606', )([in0Min79606,in1Min79606])
Zer93810 = keras.layers.ZeroPadding3D(padding=((0, 0), (2, 0), (1, 0)), name = 'Zer93810', )(Min79606)
Thr37737 = keras.layers.ThresholdedReLU(theta=6.794626590230877, name = 'Thr37737', input_shape=(1, 2, 2, 1))(in0Thr37737)
Res83789 = keras.layers.Reshape((1, 2, 2), name = 'Res83789', )(Thr37737)
Res51156 = keras.layers.Reshape((1, 4), name = 'Res51156', )(Res83789)
Ave89119 = keras.layers.AveragePooling1D(pool_size=(1), strides=(8), padding='same', name = 'Ave89119', )(Res51156)
Res21720 = keras.layers.Reshape((1, 4, 1), name = 'Res21720', )(Ave89119)
Res36199 = keras.layers.Reshape((1, 4, 1, 1), name = 'Res36199', )(Res21720)
Up_48014 = keras.layers.UpSampling3D(size=(2, 1, 1), name = 'Up_48014', )(Res36199)
Zer35281 = keras.layers.ZeroPadding3D(padding=((0, 0), (0, 0), (2, 0)), name = 'Zer35281', )(Up_48014)
Con62887 = keras.layers.Concatenate(axis=4, name = 'Con62887', )([Zer35281,in0Con62887])
Add23454 = keras.layers.Add(name = 'Add23454', )([Zer93810,Con62887])
Zer94931 = keras.layers.ZeroPadding3D(padding=((2, 0), (1, 0), (2, 0)), name = 'Zer94931', )(Add23454)
Sub53642 = keras.layers.Subtract(name = 'Sub53642', )([Con13646,Zer94931])
model = tf.keras.models.Model(inputs=[in0Mul39472,in1Mul39472,in0Con13646,in0Min79606,in1Min79606,in0Thr37737,in0Con62887], outputs=Sub53642)
in0Mul39472 = tf.constant([[[[[0.8986, 0.259]]]]])
in1Mul39472 = tf.constant([[[[[0.2796, 0.6359]]]]])
in0Con13646 = tf.constant([[[[[0.8272], [0.7546], [0.9426], [0.7831], [0.0429]], [[0.7371], [0.0514], [0.627], [0.0867], [0.8061]], [[0.2548], [0.868], [0.5889], [0.7452], [0.8343]], [[0.9042], [0.3447], [0.0489], [0.678], [0.1191]], [[0.0246], [0.6487], [0.3094], [0.3559], [0.3147]]], [[[0.643], [0.0732], [0.0086], [0.8576], [0.1017]], [[0.6126], [0.697], [0.5652], [0.5362], [0.9343]], [[0.0914], [0.2305], [0.5509], [0.1593], [0.958]], [[0.8791], [0.5293], [0.5304], [0.9068], [0.9681]], [[0.942], [0.3628], [0.641], [0.3685], [0.013]]], [[[0.4088], [0.7303], [0.0447], [0.0314], [0.5358]], [[0.0626], [0.4865], [0.5531], [0.7146], [0.1608]], [[0.2395], [0.1018], [0.0552], [0.4973], [0.3322]], [[0.7494], [0.0352], [0.7854], [0.0026], [0.1326]], [[0.1248], [0.9835], [0.8931], [0.0439], [0.7255]]], [[[0.4062], [0.7973], [0.7278], [0.7158], [0.907]], [[0.1196], [0.4047], [0.9216], [0.5698], [0.4419]], [[0.3498], [0.5173], [0.724], [0.9747], [0.0607]], [[0.6998], [0.3881], [0.2182], [0.6614], [0.9807]], [[0.4372], [0.8565], [0.7131], [0.0883], [0.8859]]]]])
in0Min79606 = tf.constant([[[[[0.3816, 0.3664], [0.2521, 0.9747]], [[0.7038, 0.094], [0.183, 0.1101]]], [[[0.0632, 0.5522], [0.2012, 0.6471]], [[0.6359, 0.839], [0.7369, 0.8179]]]]])
in1Min79606 = tf.constant([[[[[0.5257, 0.2845], [0.4329, 0.0396]], [[0.3025, 0.1345], [0.9199, 0.5173]]], [[[0.9, 0.5071], [0.1064, 0.3151]], [[0.3457, 0.8866], [0.351, 0.3842]]]]])
in0Thr37737 = tf.constant([[[[[0.7847], [0.3821]], [[0.3892], [0.1452]]]]])
in0Con62887 = tf.constant([[[[[0.7337], [0.6188], [0.2934]], [[0.8716], [0.4963], [0.2983]], [[0.9838], [0.0233], [0.3524]], [[0.7103], [0.8973], [0.2297]]], [[[0.9481], [0.8412], [0.0432]], [[0.1569], [0.9752], [0.7494]], [[0.6111], [0.6734], [0.4787]], [[0.1674], [0.6463], [0.3688]]]]])
print (np.array2string(model.predict([in0Mul39472,in1Mul39472,in0Con13646,in0Min79606,in1Min79606,in0Thr37737,in0Con62887],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Sub53642.png')

LMul39472 = multiply_layer([[[[[[0.8986, 0.259]]]]], [[[[[0.2796, 0.6359]]]]]], Mul39472), 
LGlo56732 = global_max_pool3D_layer(Mul39472, Glo56732), 
LRes42216 = reshape_layer(Glo56732, [2, 1], Res42216), 
LRes17461 = reshape_layer(Res42216, [2, 1, 1], Res17461), 
LZer26293 = zero_padding2D_layer(Res17461, 1, 1, 1, 1, Zer26293), 
LRes98139 = reshape_layer(Zer26293, [4, 3, 1, 1], Res98139), 
LZer17637 = zero_padding3D_layer(Res98139, 0, 0, 2, 0, 4, 0, Zer17637), 
LCon13646 = concatenate_layer([Zer17637,[[[[[0.8272], [0.7546], [0.9426], [0.7831], [0.0429]], [[0.7371], [0.0514], [0.627], [0.0867], [0.8061]], [[0.2548], [0.868], [0.5889], [0.7452], [0.8343]], [[0.9042], [0.3447], [0.0489], [0.678], [0.1191]], [[0.0246], [0.6487], [0.3094], [0.3559], [0.3147]]], [[[0.643], [0.0732], [0.0086], [0.8576], [0.1017]], [[0.6126], [0.697], [0.5652], [0.5362], [0.9343]], [[0.0914], [0.2305], [0.5509], [0.1593], [0.958]], [[0.8791], [0.5293], [0.5304], [0.9068], [0.9681]], [[0.942], [0.3628], [0.641], [0.3685], [0.013]]], [[[0.4088], [0.7303], [0.0447], [0.0314], [0.5358]], [[0.0626], [0.4865], [0.5531], [0.7146], [0.1608]], [[0.2395], [0.1018], [0.0552], [0.4973], [0.3322]], [[0.7494], [0.0352], [0.7854], [0.0026], [0.1326]], [[0.1248], [0.9835], [0.8931], [0.0439], [0.7255]]], [[[0.4062], [0.7973], [0.7278], [0.7158], [0.907]], [[0.1196], [0.4047], [0.9216], [0.5698], [0.4419]], [[0.3498], [0.5173], [0.724], [0.9747], [0.0607]], [[0.6998], [0.3881], [0.2182], [0.6614], [0.9807]], [[0.4372], [0.8565], [0.7131], [0.0883], [0.8859]]]]]], 4, Con13646), 
LMin79606 = minimum_layer([[[[[[0.3816, 0.3664], [0.2521, 0.9747]], [[0.7038, 0.094], [0.183, 0.1101]]], [[[0.0632, 0.5522], [0.2012, 0.6471]], [[0.6359, 0.839], [0.7369, 0.8179]]]]], [[[[[0.5257, 0.2845], [0.4329, 0.0396]], [[0.3025, 0.1345], [0.9199, 0.5173]]], [[[0.9, 0.5071], [0.1064, 0.3151]], [[0.3457, 0.8866], [0.351, 0.3842]]]]]], Min79606), 
LZer93810 = zero_padding3D_layer(Min79606, 0, 0, 2, 0, 1, 0, Zer93810), 
LThr37737 = thresholded_relu_layer([[[[[0.7847], [0.3821]], [[0.3892], [0.1452]]]]], 6.794626590230877, Thr37737), 
LRes83789 = reshape_layer(Thr37737, [1, 2, 2], Res83789), 
LRes51156 = reshape_layer(Res83789, [1, 4], Res51156), 
LAve89119 = average_pooling1D_layer(Res51156, 1, 8, true, Ave89119), 
LRes21720 = reshape_layer(Ave89119, [1, 4, 1], Res21720), 
LRes36199 = reshape_layer(Res21720, [1, 4, 1, 1], Res36199), 
LUp_48014 = up_sampling3D_layer(Res36199, 2, 1, 1, Up_48014), 
LZer35281 = zero_padding3D_layer(Up_48014, 0, 0, 0, 0, 2, 0, Zer35281), 
LCon62887 = concatenate_layer([Zer35281,[[[[[0.7337], [0.6188], [0.2934]], [[0.8716], [0.4963], [0.2983]], [[0.9838], [0.0233], [0.3524]], [[0.7103], [0.8973], [0.2297]]], [[[0.9481], [0.8412], [0.0432]], [[0.1569], [0.9752], [0.7494]], [[0.6111], [0.6734], [0.4787]], [[0.1674], [0.6463], [0.3688]]]]]], 4, Con62887), 
LAdd23454 = add_layer([Zer93810,Con62887], Add23454), 
LZer94931 = zero_padding3D_layer(Add23454, 2, 0, 1, 0, 2, 0, Zer94931), 
LSub53642 = subtract_layer(Con13646,Zer94931, Sub53642), 
exec_layers([LMul39472,LGlo56732,LRes42216,LRes17461,LZer26293,LRes98139,LZer17637,LCon13646,LMin79606,LZer93810,LThr37737,LRes83789,LRes51156,LAve89119,LRes21720,LRes36199,LUp_48014,LZer35281,LCon62887,LAdd23454,LZer94931,LSub53642],["Mul39472","Glo56732","Res42216","Res17461","Zer26293","Res98139","Zer17637","Con13646","Min79606","Zer93810","Thr37737","Res83789","Res51156","Ave89119","Res21720","Res36199","Up_48014","Zer35281","Con62887","Add23454","Zer94931","Sub53642"],Sub53642,"Sub53642")

Actual (Unparsed): [[[[[0.0000000, 0.8272000], [0.0000000, 0.7546000], [0.0000000, 0.9426000], [0.0000000, 0.7831000], [0.0000000, 0.0429000]], [[0.0000000, 0.7371000], [0.0000000, 0.0514000], [0.0000000, 0.6270000], [0.0000000, 0.0867000], [0.0000000, 0.8061000]], [[0.0000000, 0.2548000], [0.0000000, 0.8680000], [0.0000000, 0.5889000], [0.0000000, 0.7452000], [0.0000000, 0.8343000]], [[0.0000000, 0.9042000], [0.0000000, 0.3447000], [0.0000000, 0.0489000], [0.0000000, 0.6780000], [0.0000000, 0.1191000]], [[0.0000000, 0.0246000], [0.0000000, 0.6487000], [0.0000000, 0.3094000], [0.0000000, 0.3559000], [0.0000000, 0.3147000]]], [[[0.0000000, 0.6430000], [0.0000000, 0.0732000], [0.0000000, 0.0086000], [0.0000000, 0.8576000], [0.0000000, 0.1017000]], [[0.0000000, 0.6126000], [0.0000000, 0.6970000], [0.0000000, 0.5652000], [0.0000000, 0.5362000], [0.0000000, 0.9343000]], [[0.0000000, 0.0914000], [0.0000000, 0.2305000], [0.0000000, 0.5509000], [0.0000000, 0.1593000], [0.0000000, 0.9580000]], [[0.0000000, 0.8791000], [0.0000000, 0.5293000], [0.0000000, 0.5304000], [0.0000000, 0.9068000], [0.2512486, 0.9681000]], [[0.0000000, 0.9420000], [0.0000000, 0.3628000], [0.0000000, 0.6410000], [0.0000000, 0.3685000], [0.0000000, 0.0130000]]], [[[0.0000000, 0.4088000], [0.0000000, 0.7303000], [0.0000000, 0.0447000], [0.0000000, 0.0314000], [0.0000000, 0.5358000]], [[0.0000000, 0.0626000], [0.0000000, 0.4865000], [0.0000000, -0.1806000], [0.0000000, 0.0958000], [0.0000000, -0.1326000]], [[0.0000000, 0.2395000], [0.0000000, 0.1018000], [0.0000000, -0.8164000], [0.0000000, 0.0010000], [0.0000000, 0.0339000]], [[0.0000000, 0.7494000], [0.0000000, 0.0352000], [0.0000000, -0.1984000], [-0.3816000, -0.3052000], [-0.0874019, -0.2594000]], [[0.0000000, 0.1248000], [0.0000000, 0.9835000], [0.0000000, 0.1828000], [-0.3025000, -0.9474000], [-0.1830000, 0.3857000]]], [[[0.0000000, 0.4062000], [0.0000000, 0.7973000], [0.0000000, 0.7278000], [0.0000000, 0.7158000], [0.0000000, 0.9070000]], [[0.0000000, 0.1196000], [0.0000000, 0.4047000], [0.0000000, -0.0265000], [0.0000000, -0.2714000], [0.0000000, 0.3987000]], [[0.0000000, 0.3498000], [0.0000000, 0.5173000], [0.0000000, 0.5671000], [0.0000000, -0.0005000], [0.0000000, -0.6887000]], [[0.0000000, 0.6998000], [0.0000000, 0.3881000], [0.0000000, -0.3929000], [-0.0632000, -0.5191000], [-0.1064000, 0.1869000]], [[0.0000000, 0.4372000], [0.0000000, 0.8565000], [0.0000000, 0.5457000], [-0.3457000, -1.3970000], [-0.3510000, 0.1329000]]]]]

Expected (Unparsed): [[[[[0,0.8272],[0,0.7546],[0,0.9426],[0,0.7831],[0,0.0429]],[[0,0.7371],[0,0.0514],[0,0.627],[0,0.0867],[0,0.8061]],[[0,0.2548],[0,0.868],[0,0.5889],[0,0.7452],[0,0.8343]],[[0,0.9042],[0,0.3447],[0,0.0489],[0,0.678],[0,0.1191]],[[0,0.0246],[0,0.6487],[0,0.3094],[0,0.3559],[0,0.3147]]],[[[0,0.643],[0,0.0732],[0,0.0086],[0,0.8576],[0,0.1017]],[[0,0.6126],[0,0.697],[0,0.5652],[0,0.5362],[0,0.9343]],[[0,0.0914],[0,0.2305],[0,0.5509],[0,0.1593],[0,0.958]],[[0,0.8791],[0,0.5293],[0,0.5304],[0,0.9068],[0.25124856,0.9681]],[[0,0.942],[0,0.3628],[0,0.641],[0,0.3685],[0,0.013]]],[[[0,0.4088],[0,0.7303],[0,0.0447],[0,0.0314],[0,0.5358]],[[0,0.0626],[0,0.4865],[0,-0.18059999999999998],[0,0.0958],[0,-0.1326]],[[0,0.2395],[0,0.1018],[0,-0.8164],[0,0.0010000000000000009],[0,0.033899999999999986]],[[0,0.7494],[0,0.0352],[0,-0.19840000000000002],[-0.3816,-0.30519999999999997],[-0.08740189999999998,-0.2594]],[[0,0.1248],[0,0.9835],[0,0.18279999999999996],[-0.3025,-0.9473999999999999],[-0.183,0.38570000000000004]]],[[[0,0.4062],[0,0.7973],[0,0.7278],[0,0.7158],[0,0.907]],[[0,0.1196],[0,0.4047],[0,-0.02650000000000008],[0,-0.2714],[0,0.3987]],[[0,0.3498],[0,0.5173],[0,0.5670999999999999],[0,-0.0004999999999999449],[0,-0.6887]],[[0,0.6998],[0,0.3881],[0,-0.39289999999999997],[-0.0632,-0.5190999999999999],[-0.1064,0.18689999999999996]],[[0,0.4372],[0,0.8565],[0,0.5457],[-0.3457,-1.397],[-0.351,0.13290000000000002]]]]]

Actual:   [[[[[0, 0.8272], [0, 0.7546], [0, 0.9426], [0, 0.7831], [0, 0.0429]], [[0, 0.7371], [0, 0.0514], [0, 0.627], [0, 0.0867], [0, 0.8061]], [[0, 0.2548], [0, 0.868], [0, 0.5889], [0, 0.7452], [0, 0.8343]], [[0, 0.9042], [0, 0.3447], [0, 0.0489], [0, 0.678], [0, 0.1191]], [[0, 0.0246], [0, 0.6487], [0, 0.3094], [0, 0.3559], [0, 0.3147]]], [[[0, 0.643], [0, 0.0732], [0, 0.0086], [0, 0.8576], [0, 0.1017]], [[0, 0.6126], [0, 0.697], [0, 0.5652], [0, 0.5362], [0, 0.9343]], [[0, 0.0914], [0, 0.2305], [0, 0.5509], [0, 0.1593], [0, 0.958]], [[0, 0.8791], [0, 0.5293], [0, 0.5304], [0, 0.9068], [0.2513, 0.9681]], [[0, 0.942], [0, 0.3628], [0, 0.641], [0, 0.3685], [0, 0.013]]], [[[0, 0.4088], [0, 0.7303], [0, 0.0447], [0, 0.0314], [0, 0.5358]], [[0, 0.0626], [0, 0.4865], [0, -0.1806], [0, 0.0958], [0, -0.1326]], [[0, 0.2395], [0, 0.1018], [0, -0.8164], [0, 0.001], [0, 0.0339]], [[0, 0.7494], [0, 0.0352], [0, -0.1984], [-0.3816, -0.3052], [-0.0874, -0.2594]], [[0, 0.1248], [0, 0.9835], [0, 0.1828], [-0.3025, -0.9474], [-0.183, 0.3857]]], [[[0, 0.4062], [0, 0.7973], [0, 0.7278], [0, 0.7158], [0, 0.907]], [[0, 0.1196], [0, 0.4047], [0, -0.0265], [0, -0.2714], [0, 0.3987]], [[0, 0.3498], [0, 0.5173], [0, 0.5671], [0, -0.0005], [0, -0.6887]], [[0, 0.6998], [0, 0.3881], [0, -0.3929], [-0.0632, -0.5191], [-0.1064, 0.1869]], [[0, 0.4372], [0, 0.8565], [0, 0.5457], [-0.3457, -1.397], [-0.351, 0.1329]]]]]

Expected: [[[[[0, 0.8272], [0, 0.7546], [0, 0.9426], [0, 0.7831], [0, 0.0429]], [[0, 0.7371], [0, 0.0514], [0, 0.627], [0, 0.0867], [0, 0.8061]], [[0, 0.2548], [0, 0.868], [0, 0.5889], [0, 0.7452], [0, 0.8343]], [[0, 0.9042], [0, 0.3447], [0, 0.0489], [0, 0.678], [0, 0.1191]], [[0, 0.0246], [0, 0.6487], [0, 0.3094], [0, 0.3559], [0, 0.3147]]], [[[0, 0.643], [0, 0.0732], [0, 0.0086], [0, 0.8576], [0, 0.1017]], [[0, 0.6126], [0, 0.697], [0, 0.5652], [0, 0.5362], [0, 0.9343]], [[0, 0.0914], [0, 0.2305], [0, 0.5509], [0, 0.1593], [0, 0.958]], [[0, 0.8791], [0, 0.5293], [0, 0.5304], [0, 0.9068], [0.2513, 0.9681]], [[0, 0.942], [0, 0.3628], [0, 0.641], [0, 0.3685], [0, 0.013]]], [[[0, 0.4088], [0, 0.7303], [0, 0.0447], [0, 0.0314], [0, 0.5358]], [[0, 0.0626], [0, 0.4865], [0, -0.1805], [0, 0.0958], [0, -0.1326]], [[0, 0.2395], [0, 0.1018], [0, -0.8164], [0, 0.0011], [0, 0.0339]], [[0, 0.7494], [0, 0.0352], [0, -0.1984], [-0.3816, -0.3051], [-0.0874, -0.2594]], [[0, 0.1248], [0, 0.9835], [0, 0.1828], [-0.3025, -0.9473], [-0.183, 0.3858]]], [[[0, 0.4062], [0, 0.7973], [0, 0.7278], [0, 0.7158], [0, 0.907]], [[0, 0.1196], [0, 0.4047], [0, -0.0265], [0, -0.2714], [0, 0.3987]], [[0, 0.3498], [0, 0.5173], [0, 0.5671], [0, -0.0004], [0, -0.6887]], [[0, 0.6998], [0, 0.3881], [0, -0.3928], [-0.0632, -0.519], [-0.1064, 0.1869]], [[0, 0.4372], [0, 0.8565], [0, 0.5457], [-0.3457, -1.397], [-0.351, 0.133]]]]]