import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Dot42319 = tf.keras.layers.Input(shape=([3]))
in1Dot42319 = tf.keras.layers.Input(shape=([3]))
in0Con80862 = tf.keras.layers.Input(shape=([2, 3]))
in0Add73285 = tf.keras.layers.Input(shape=([2, 2, 2]))
in1Add73285 = tf.keras.layers.Input(shape=([2, 2, 2]))
in0Max7606 = tf.keras.layers.Input(shape=([1, 1]))
in0Con78059 = tf.keras.layers.Input(shape=([2, 3]))
in0Max97095 = tf.keras.layers.Input(shape=([2, 2]))
in1Max97095 = tf.keras.layers.Input(shape=([2, 2]))
in0ReL95282 = tf.keras.layers.Input(shape=([1, 2]))

Dot42319 = keras.layers.Dot(axes=(1, 1), name = 'Dot42319', )([in0Dot42319,in1Dot42319])
Res49326 = keras.layers.Reshape((1, 1), name = 'Res49326', )(Dot42319)
Zer74805 = keras.layers.ZeroPadding1D(padding=((1, 0)), name = 'Zer74805', )(Res49326)
Con80862 = keras.layers.Concatenate(axis=2, name = 'Con80862', )([Zer74805,in0Con80862])
Add73285 = keras.layers.Add(name = 'Add73285', )([in0Add73285,in1Add73285])
Res59441 = keras.layers.Reshape((2, 4), name = 'Res59441', )(Add73285)
Max7606 = keras.layers.MaxPool1D(pool_size=(1), name = 'Max7606', )(in0Max7606)
Zer88442 = keras.layers.ZeroPadding1D(padding=((1, 0)), name = 'Zer88442', )(Max7606)
Con78059 = keras.layers.Concatenate(axis=2, name = 'Con78059', )([Zer88442,in0Con78059])
Add87849 = keras.layers.Add(name = 'Add87849', )([Res59441,Con78059])
Mul84557 = keras.layers.Multiply(name = 'Mul84557', )([Con80862,Add87849])
Den58605 = keras.layers.Dense(2,name = 'Den58605', )(Mul84557)
Max97095 = keras.layers.Maximum(name = 'Max97095', )([in0Max97095,in1Max97095])
Mul82469 = keras.layers.Multiply(name = 'Mul82469', )([Den58605,Max97095])
Res63463 = keras.layers.Reshape((2, 2, 1), name = 'Res63463', )(Mul82469)
ReL95282 = keras.layers.ReLU(max_value=0.29171083159302447, negative_slope=3.054080161312512, threshold=7.775054761536602, name = 'ReL95282', input_shape=(1, 2))(in0ReL95282)
Res81808 = keras.layers.Reshape((1, 2, 1), name = 'Res81808', )(ReL95282)
Ave96642 = keras.layers.AveragePooling2D(pool_size=(1, 1), strides=(1, 1), padding='valid', name = 'Ave96642', )(Res81808)
Zer27974 = keras.layers.ZeroPadding2D(padding=((1, 0), (0, 0)), name = 'Zer27974', )(Ave96642)
Mul94753 = keras.layers.Multiply(name = 'Mul94753', )([Res63463,Zer27974])
model = tf.keras.models.Model(inputs=[in0Dot42319,in1Dot42319,in0Con80862,in0Add73285,in1Add73285,in0Max7606,in0Con78059,in0Max97095,in1Max97095,in0ReL95282], outputs=Mul94753)
w = model.get_layer('Den58605').get_weights() 
w[0] = np.array([[0.8614, 0.7847], [0.0604, 0.3842], [0.8112, 0.241], [0.0014, 0.1494]])
w[1] = np.array([0.6594, 0.078])
model.get_layer('Den58605').set_weights(w) 
in0Dot42319 = tf.constant([[0.0173, 0.439, 0.7072]])
in1Dot42319 = tf.constant([[0.3368, 0.7601, 0.7258]])
in0Con80862 = tf.constant([[[0.0021, 0.963, 0.532], [0.8435, 0.7814, 0.6866]]])
in0Add73285 = tf.constant([[[[0.9181, 0.043], [0.7897, 0.6493]], [[0.1773, 0.0402], [0.4739, 0.9986]]]])
in1Add73285 = tf.constant([[[[0.5082, 0.2075], [0.7568, 0.8027]], [[0.6025, 0.9279], [0.2014, 0.4368]]]])
in0Max7606 = tf.constant([[[1.2135]]])
in0Con78059 = tf.constant([[[0.9008, 0.8293, 0.9881], [0.5468, 0.1474, 0.6548]]])
in0Max97095 = tf.constant([[[0.3117, 0.9584], [0.1849, 0.5787]]])
in1Max97095 = tf.constant([[[0.0451, 0.2305], [0.9942, 0.6878]]])
in0ReL95282 = tf.constant([[[0.9452, 0.6493]]])
print (np.array2string(model.predict([in0Dot42319,in1Dot42319,in0Con80862,in0Add73285,in1Add73285,in0Max7606,in0Con78059,in0Max97095,in1Max97095,in0ReL95282],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Mul94753.png')

LDot42319 = dot_layer([[0.0173, 0.439, 0.7072]], [[0.3368, 0.7601, 0.7258]], 1, 1, Dot42319), 
LRes49326 = reshape_layer(Dot42319, [1, 1], Res49326), 
LZer74805 = zero_padding1D_layer(Res49326, 1, 0, Zer74805), 
LCon80862 = concatenate_layer([Zer74805,[[[0.0021, 0.963, 0.532], [0.8435, 0.7814, 0.6866]]]], 2, Con80862), 
LAdd73285 = add_layer([[[[[0.9181, 0.043], [0.7897, 0.6493]], [[0.1773, 0.0402], [0.4739, 0.9986]]]], [[[[0.5082, 0.2075], [0.7568, 0.8027]], [[0.6025, 0.9279], [0.2014, 0.4368]]]]], Add73285), 
LRes59441 = reshape_layer(Add73285, [2, 4], Res59441), 
LMax7606 = max_pool1D_layer([[[1.2135]]], 1, Max7606), 
LZer88442 = zero_padding1D_layer(Max7606, 1, 0, Zer88442), 
LCon78059 = concatenate_layer([Zer88442,[[[0.9008, 0.8293, 0.9881], [0.5468, 0.1474, 0.6548]]]], 2, Con78059), 
LAdd87849 = add_layer([Res59441,Con78059], Add87849), 
LMul84557 = multiply_layer([Con80862,Add87849], Mul84557), 
LDen58605 = dense_layer(Mul84557, [[0.8614, 0.7847], [0.0604, 0.3842], [0.8112, 0.241], [0.0014, 0.1494]],[0.6594, 0.078], Den58605), 
LMax97095 = maximum_layer([[[[0.3117, 0.9584], [0.1849, 0.5787]]], [[[0.0451, 0.2305], [0.9942, 0.6878]]]], Max97095), 
LMul82469 = multiply_layer([Den58605,Max97095], Mul82469), 
LRes63463 = reshape_layer(Mul82469, [2, 2, 1], Res63463), 
LReL95282 = relu_layer([[[0.9452, 0.6493]]], 0.29171083159302447, 3.054080161312512, 7.775054761536602, ReL95282), 
LRes81808 = reshape_layer(ReL95282, [1, 2, 1], Res81808), 
LAve96642 = average_pooling2D_layer(Res81808, 1, 1, 1, 1, false, Ave96642), 
LZer27974 = zero_padding2D_layer(Ave96642, 1, 0, 0, 0, Zer27974), 
LMul94753 = multiply_layer([Res63463,Zer27974], Mul94753), 
exec_layers([LDot42319,LRes49326,LZer74805,LCon80862,LAdd73285,LRes59441,LMax7606,LZer88442,LCon78059,LAdd87849,LMul84557,LDen58605,LMax97095,LMul82469,LRes63463,LReL95282,LRes81808,LAve96642,LZer27974,LMul94753],["Dot42319","Res49326","Zer74805","Con80862","Add73285","Res59441","Max7606","Zer88442","Con78059","Add87849","Mul84557","Den58605","Max97095","Mul82469","Res63463","ReL95282","Res81808","Ave96642","Zer27974","Mul94753"],Mul94753,"Mul94753")

Actual (Unparsed): [[[[0.0000000], [0.0000000]], [[-56.4974394], [-34.0106009]]]]

Expected (Unparsed): [[[[0.0],[0.0]],[[-56.49743941516258],[-34.01060056643369]]]]

Actual:   [[[[0], [0]], [[-56.4974], [-34.0106]]]]

Expected: [[[[0], [0]], [[-56.4974], [-34.0106]]]]