import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0GRU49005 = tf.keras.layers.Input(shape=([3, 2]))
in0Con27228 = tf.keras.layers.Input(shape=([3, 3, 3]))
in0Sep21201 = tf.keras.layers.Input(shape=([1, 2, 2]))
in0Con60028 = tf.keras.layers.Input(shape=([1, 2, 1]))
in0Con71965 = tf.keras.layers.Input(shape=([1, 2, 2, 1]))
in0Min68927 = tf.keras.layers.Input(shape=([1, 2, 2]))
in1Min68927 = tf.keras.layers.Input(shape=([1, 2, 2]))
in0Con54951 = tf.keras.layers.Input(shape=([1, 2, 2]))

GRU49005 = keras.layers.GRU(3,reset_after=True, recurrent_activation='sigmoid', name = 'GRU49005', )(in0GRU49005)
Res8918 = keras.layers.Reshape((3, 1), name = 'Res8918', )(GRU49005)
Res52288 = keras.layers.Reshape((3, 1, 1), name = 'Res52288', )(Res8918)
Zer19934 = keras.layers.ZeroPadding2D(padding=((0, 0), (2, 0)), name = 'Zer19934', )(Res52288)
Con27228 = keras.layers.Concatenate(axis=3, name = 'Con27228', )([Zer19934,in0Con27228])
Sep21201 = keras.layers.SeparableConv2D(3, (1, 1),strides=(1, 1), padding='same', name = 'Sep21201', )(in0Sep21201)
Con60028 = keras.layers.Concatenate(axis=3, name = 'Con60028', )([Sep21201,in0Con60028])
Con71965 = keras.layers.Conv3DTranspose(2, (1, 1, 2),strides=(1, 1, 1), padding='same', name = 'Con71965', )(in0Con71965)
Res89655 = keras.layers.Reshape((1, 2, 4), name = 'Res89655', )(Con71965)
Min68927 = keras.layers.Minimum(name = 'Min68927', )([in0Min68927,in1Min68927])
Con54951 = keras.layers.Concatenate(axis=3, name = 'Con54951', )([Min68927,in0Con54951])
Mul78901 = keras.layers.Multiply(name = 'Mul78901', )([Res89655,Con54951])
Sub25290 = keras.layers.Subtract(name = 'Sub25290', )([Con60028,Mul78901])
Zer98854 = keras.layers.ZeroPadding2D(padding=((2, 0), (1, 0)), name = 'Zer98854', )(Sub25290)
Add56216 = keras.layers.Add(name = 'Add56216', )([Con27228,Zer98854])
model = tf.keras.models.Model(inputs=[in0GRU49005,in0Con27228,in0Sep21201,in0Con60028,in0Con71965,in0Min68927,in1Min68927,in0Con54951], outputs=Add56216)
w = model.get_layer('GRU49005').get_weights() 
w[0] = np.array([[6, 3, 10, 4, 3, 8, 4, 10, 9], [8, 4, 8, 4, 4, 4, 10, 7, 7]])
w[1] = np.array([[9, 9, 2, 5, 1, 10, 8, 7, 8], [8, 8, 4, 6, 8, 2, 9, 6, 10], [9, 8, 7, 7, 9, 1, 6, 1, 5]])
w[2] = np.array([[8, 9, 3, 6, 3, 5, 7, 7, 10], [5, 3, 4, 9, 3, 4, 5, 4, 9]])
model.get_layer('GRU49005').set_weights(w) 
w = model.get_layer('Sep21201').get_weights() 
w[0] = np.array([[[[0.8672], [0.7485]]]])
w[1] = np.array([[[[0.4565, 0.2525, 0.4553], [0.0338, 0.3008, 0.7619]]]])
w[2] = np.array([0, 0, 0])
model.get_layer('Sep21201').set_weights(w) 
w = model.get_layer('Con71965').get_weights() 
w[0] = np.array([[[[[0.4208], [0.64]], [[0.5571], [0.8443]]]]])
w[1] = np.array([0, 0])
model.get_layer('Con71965').set_weights(w) 
in0GRU49005 = tf.constant([[[7, 4], [6, 5], [8, 6]]])
in0Con27228 = tf.constant([[[[0.2408, 0.1044, 0.0884], [0.3863, 0.3052, 0.6292], [0.6725, 0.5511, 0.948]], [[0.3959, 0.7801, 0.3625], [0.3253, 0.4677, 0.0604], [0.5377, 0.23, 0.7373]], [[0.5222, 0.0364, 0.2878], [0.2499, 0.0531, 0.1436], [0.387, 0.586, 0.7802]]]])
in0Sep21201 = tf.constant([[[[0.4613, 0.0155], [0.5374, 0.798]]]])
in0Con60028 = tf.constant([[[[0.3872], [0.6822]]]])
in0Con71965 = tf.constant([[[[[0.0682], [0.821]], [[0.3002], [0.8002]]]]])
in0Min68927 = tf.constant([[[[0.7538, 0.6419], [0.7635, 0.7928]]]])
in1Min68927 = tf.constant([[[[0.4917, 0.8905], [0.9383, 0.095]]]])
in0Con54951 = tf.constant([[[[0.2613, 0.1449], [0.5685, 0.0802]]]])
print (np.array2string(model.predict([in0GRU49005,in0Con27228,in0Sep21201,in0Con60028,in0Con71965,in0Min68927,in1Min68927,in0Con54951],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Add56216.png')

LGRU49005 = gru_layer([[[7, 4], [6, 5], [8, 6]]],[[6, 3, 10, 4, 3, 8, 4, 10, 9], [8, 4, 8, 4, 4, 4, 10, 7, 7]],[[9, 9, 2, 5, 1, 10, 8, 7, 8], [8, 8, 4, 6, 8, 2, 9, 6, 10], [9, 8, 7, 7, 9, 1, 6, 1, 5]],[[8, 9, 3, 6, 3, 5, 7, 7, 10], [5, 3, 4, 9, 3, 4, 5, 4, 9]], true, GRU49005), 
LRes8918 = reshape_layer(GRU49005, [3, 1], Res8918), 
LRes52288 = reshape_layer(Res8918, [3, 1, 1], Res52288), 
LZer19934 = zero_padding2D_layer(Res52288, 0, 0, 2, 0, Zer19934), 
LCon27228 = concatenate_layer([Zer19934,[[[[0.2408, 0.1044, 0.0884], [0.3863, 0.3052, 0.6292], [0.6725, 0.5511, 0.948]], [[0.3959, 0.7801, 0.3625], [0.3253, 0.4677, 0.0604], [0.5377, 0.23, 0.7373]], [[0.5222, 0.0364, 0.2878], [0.2499, 0.0531, 0.1436], [0.387, 0.586, 0.7802]]]]], 3, Con27228), 
LSep21201 = separable_conv2D_layer([[[[0.4613, 0.0155], [0.5374, 0.798]]]], 1, 1,[[[[[0.8672], [0.7485]]]],[[[[0.4565, 0.2525, 0.4553], [0.0338, 0.3008, 0.7619]]]]],[0, 0, 0], 1, 1, true, Sep21201), 
LCon60028 = concatenate_layer([Sep21201,[[[[0.3872], [0.6822]]]]], 3, Con60028), 
LCon71965 = conv3D_transpose_layer([[[[[0.0682], [0.821]], [[0.3002], [0.8002]]]]], 1, 1, 2,[[[[[0.4208], [0.64]], [[0.5571], [0.8443]]]]],[0, 0], 1, 1, 1, true, Con71965), 
LRes89655 = reshape_layer(Con71965, [1, 2, 4], Res89655), 
LMin68927 = minimum_layer([[[[[0.7538, 0.6419], [0.7635, 0.7928]]]], [[[[0.4917, 0.8905], [0.9383, 0.095]]]]], Min68927), 
LCon54951 = concatenate_layer([Min68927,[[[[0.2613, 0.1449], [0.5685, 0.0802]]]]], 3, Con54951), 
LMul78901 = multiply_layer([Res89655,Con54951], Mul78901), 
LSub25290 = subtract_layer(Con60028,Mul78901, Sub25290), 
LZer98854 = zero_padding2D_layer(Sub25290, 2, 0, 1, 0, Zer98854), 
LAdd56216 = add_layer([Con27228,Zer98854], Add56216), 
exec_layers([LGRU49005,LRes8918,LRes52288,LZer19934,LCon27228,LSep21201,LCon60028,LCon71965,LRes89655,LMin68927,LCon54951,LMul78901,LSub25290,LZer98854,LAdd56216],["GRU49005","Res8918","Res52288","Zer19934","Con27228","Sep21201","Con60028","Con71965","Res89655","Min68927","Con54951","Mul78901","Sub25290","Zer98854","Add56216"],Add56216,"Add56216")

Actual (Unparsed): [[[[0.0000000, 0.2408000, 0.1044000, 0.0884000], [0.0000000, 0.3863000, 0.3052000, 0.6292000], [0.0000000, 0.6725000, 0.5511000, 0.9480000]], [[0.0000000, 0.3959000, 0.7801000, 0.3625000], [0.0000000, 0.3253000, 0.4677000, 0.0604000], [0.0000000, 0.5377000, 0.2300000, 0.7373000]], [[0.0000000, 0.5222000, 0.0364000, 0.2878000], [0.1688990, 0.3263821, 0.1438763, 0.4463202], [0.1364845, 0.6660900, 0.9667657, 1.4010000]]]]

Expected (Unparsed): [[[[0,0.2408,0.1044,0.0884],[0,0.3863,0.3052,0.6292],[0.0,0.6725,0.5511,0.948]],[[0,0.3959,0.7801,0.3625],[0,0.3253,0.4677,0.0604],[0.0,0.5377,0.23,0.7373]],[[0,0.5222,0.0364,0.2878],[0.16889902503799997,0.32638209360000003,0.143876316407,0.446320219426],[0.13648453755999998,0.6660899856,0.966765675854,1.400999933828]]]]

Actual:   [[[[0, 0.2408, 0.1044, 0.0884], [0, 0.3863, 0.3052, 0.6292], [0, 0.6725, 0.5511, 0.948]], [[0, 0.3959, 0.7801, 0.3625], [0, 0.3253, 0.4677, 0.0604], [0, 0.5377, 0.23, 0.7373]], [[0, 0.5222, 0.0364, 0.2878], [0.1689, 0.3264, 0.1439, 0.4464], [0.1365, 0.6661, 0.9668, 1.401]]]]

Expected: [[[[0, 0.2408, 0.1044, 0.0884], [0, 0.3863, 0.3052, 0.6292], [0, 0.6725, 0.5511, 0.948]], [[0, 0.3959, 0.7801, 0.3625], [0, 0.3253, 0.4677, 0.0604], [0, 0.5377, 0.23, 0.7373]], [[0, 0.5222, 0.0364, 0.2878], [0.1689, 0.3264, 0.1439, 0.4464], [0.1365, 0.6661, 0.9668, 1.401]]]]