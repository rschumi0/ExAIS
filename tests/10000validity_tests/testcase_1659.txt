import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Mul41526 = tf.keras.layers.Input(shape=([1, 1, 1]))
in1Mul41526 = tf.keras.layers.Input(shape=([1, 1, 1]))

Mul41526 = keras.layers.Multiply(name = 'Mul41526', )([in0Mul41526,in1Mul41526])
Res13925 = keras.layers.Reshape((1, 1), name = 'Res13925', )(Mul41526)
Sim23457 = keras.layers.SimpleRNN(2,name = 'Sim23457', )(Res13925)
model = tf.keras.models.Model(inputs=[in0Mul41526,in1Mul41526], outputs=Sim23457)
w = model.get_layer('Sim23457').get_weights() 
w[0] = np.array([[8, 7]])
w[1] = np.array([[4, 10], [8, 6]])
w[2] = np.array([2, 7])
model.get_layer('Sim23457').set_weights(w) 
in0Mul41526 = tf.constant([[[[0.2705]]]])
in1Mul41526 = tf.constant([[[[0.3987]]]])
print (np.array2string(model.predict([in0Mul41526,in1Mul41526],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Sim23457.png')

LMul41526 = multiply_layer([[[[[0.2705]]]], [[[[0.3987]]]]], Mul41526), 
LRes13925 = reshape_layer(Mul41526, [1, 1], Res13925), 
LSim23457 = simple_rnn_layer(Res13925,[[8, 7]],[[4, 10], [8, 6]],[2, 7], Sim23457), 
exec_layers([LMul41526,LRes13925,LSim23457],["Mul41526","Res13925","Sim23457"],Sim23457,"Sim23457")

Actual (Unparsed): [[0.9934982, 0.9999996]]

Expected (Unparsed): [[0.9934982414615703,0.9999996325688575]]

Actual:   [[0.9935, 1]]

Expected: [[0.9935, 1]]