import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Mul49941 = tf.keras.layers.Input(shape=([2, 2, 2, 2]))
in1Mul49941 = tf.keras.layers.Input(shape=([2, 2, 2, 2]))
in0Lay99722 = tf.keras.layers.Input(shape=([3, 2, 3]))
in0Con26366 = tf.keras.layers.Input(shape=([3, 5]))
in0Glo23657 = tf.keras.layers.Input(shape=([2, 2, 1]))

Mul49941 = keras.layers.Multiply(name = 'Mul49941', )([in0Mul49941,in1Mul49941])
Res22823 = keras.layers.Reshape((2, 2, 4), name = 'Res22823', )(Mul49941)
Res4646 = keras.layers.Reshape((2, 8), name = 'Res4646', )(Res22823)
Zer50528 = keras.layers.ZeroPadding1D(padding=((1, 0)), name = 'Zer50528', )(Res4646)
Lay99722 = keras.layers.LayerNormalization(axis=3, epsilon=2.988027648865507, name = 'Lay99722', )(in0Lay99722)
Res3171 = keras.layers.Reshape((3, 6), name = 'Res3171', )(Lay99722)
Sep60163 = keras.layers.SeparableConv1D(3, (2),strides=(1), padding='same', name = 'Sep60163', )(Res3171)
Con26366 = keras.layers.Concatenate(axis=2, name = 'Con26366', )([Sep60163,in0Con26366])
Mul79797 = keras.layers.Multiply(name = 'Mul79797', )([Zer50528,Con26366])
Res13488 = keras.layers.Reshape((3, 8, 1), name = 'Res13488', )(Mul79797)
Res56431 = keras.layers.Reshape((3, 8, 1, 1), name = 'Res56431', )(Res13488)
Glo23657 = keras.layers.GlobalAveragePooling2D(name = 'Glo23657', )(in0Glo23657)
Res11440 = keras.layers.Reshape((1, 1), name = 'Res11440', )(Glo23657)
Res6061 = keras.layers.Reshape((1, 1, 1), name = 'Res6061', )(Res11440)
Up_42032 = keras.layers.UpSampling2D(size=(2, 2), name = 'Up_42032', )(Res6061)
Res18063 = keras.layers.Reshape((2, 2, 1, 1), name = 'Res18063', )(Up_42032)
Cro97762 = keras.layers.Cropping3D(cropping=((0, 1), (0, 0), (0, 0)), name = 'Cro97762', )(Res18063)
Zer30227 = keras.layers.ZeroPadding3D(padding=((2, 0), (6, 0), (0, 0)), name = 'Zer30227', )(Cro97762)
Ave4663 = keras.layers.Average(name = 'Ave4663', )([Res56431,Zer30227])
model = tf.keras.models.Model(inputs=[in0Mul49941,in1Mul49941,in0Lay99722,in0Con26366,in0Glo23657], outputs=Ave4663)
w = model.get_layer('Sep60163').get_weights() 
w[0] = np.array([[[0.7125], [0.4307], [0.6423], [0.5615], [0.5451], [0.4973]], [[0.0833], [0.9706], [0.7815], [0.4894], [0.1427], [0.5174]]])
w[1] = np.array([[[0.0571, 0.7819, 0.7985], [0.1942, 0.7239, 0.3765], [0.0626, 0.9162, 0.1791], [0.7798, 0.2027, 0.6733], [0.2977, 0.6932, 0.1079], [0.7278, 0.4179, 0.9564]]])
w[2] = np.array([0, 0, 0])
model.get_layer('Sep60163').set_weights(w) 
in0Mul49941 = tf.constant([[[[[0.1863, 0.2977], [0.2292, 0.405]], [[0.4066, 0.8257], [0.8274, 0.494]]], [[[0.8977, 0.4113], [0.9203, 0.6267]], [[0.9853, 0.1735], [0.2788, 0.9035]]]]])
in1Mul49941 = tf.constant([[[[[0.6318, 0.1495], [0.5117, 0.0062]], [[0.2948, 0.2768], [0.3595, 0.6576]]], [[[0.5469, 0.9723], [0.7959, 0.4782]], [[0.185, 0.8127], [0.3009, 0.6971]]]]])
in0Lay99722 = tf.constant([[[[1.3689, 1.3234, 1.1846], [1.5011, 1.7948, 1.2973]], [[1.5063, 1.5542, 1.0296], [1.3773, 1.9621, 1.355]], [[1.9124, 1.8659, 1.0941], [1.6616, 1.3628, 1.8495]]]])
in0Con26366 = tf.constant([[[0.9262, 0.9258, 0.7732, 0.3673, 0.9982], [0.3029, 0.7652, 0.9091, 0.4316, 0.4685], [0.5793, 0.9796, 0.7203, 0.4264, 0.4436]]])
in0Glo23657 = tf.constant([[[[1.3108], [1.1623]], [[1.0272], [1.7657]]]])
print (np.array2string(model.predict([in0Mul49941,in1Mul49941,in0Lay99722,in0Con26366,in0Glo23657],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Ave4663.png')

LMul49941 = multiply_layer([[[[[[0.1863, 0.2977], [0.2292, 0.405]], [[0.4066, 0.8257], [0.8274, 0.494]]], [[[0.8977, 0.4113], [0.9203, 0.6267]], [[0.9853, 0.1735], [0.2788, 0.9035]]]]], [[[[[0.6318, 0.1495], [0.5117, 0.0062]], [[0.2948, 0.2768], [0.3595, 0.6576]]], [[[0.5469, 0.9723], [0.7959, 0.4782]], [[0.185, 0.8127], [0.3009, 0.6971]]]]]], Mul49941), 
LRes22823 = reshape_layer(Mul49941, [2, 2, 4], Res22823), 
LRes4646 = reshape_layer(Res22823, [2, 8], Res4646), 
LZer50528 = zero_padding1D_layer(Res4646, 1, 0, Zer50528), 
LLay99722 = layer_normalization_layer([[[[1.3689, 1.3234, 1.1846], [1.5011, 1.7948, 1.2973]], [[1.5063, 1.5542, 1.0296], [1.3773, 1.9621, 1.355]], [[1.9124, 1.8659, 1.0941], [1.6616, 1.3628, 1.8495]]]], 3, 2.988027648865507, Lay99722), 
LRes3171 = reshape_layer(Lay99722, [3, 6], Res3171), 
LSep60163 = separable_conv1D_layer(Res3171, 2,[[[[0.7125], [0.4307], [0.6423], [0.5615], [0.5451], [0.4973]], [[0.0833], [0.9706], [0.7815], [0.4894], [0.1427], [0.5174]]],[[[0.0571, 0.7819, 0.7985], [0.1942, 0.7239, 0.3765], [0.0626, 0.9162, 0.1791], [0.7798, 0.2027, 0.6733], [0.2977, 0.6932, 0.1079], [0.7278, 0.4179, 0.9564]]]],[0, 0, 0], 1, true, Sep60163), 
LCon26366 = concatenate_layer([Sep60163,[[[0.9262, 0.9258, 0.7732, 0.3673, 0.9982], [0.3029, 0.7652, 0.9091, 0.4316, 0.4685], [0.5793, 0.9796, 0.7203, 0.4264, 0.4436]]]], 2, Con26366), 
LMul79797 = multiply_layer([Zer50528,Con26366], Mul79797), 
LRes13488 = reshape_layer(Mul79797, [3, 8, 1], Res13488), 
LRes56431 = reshape_layer(Res13488, [3, 8, 1, 1], Res56431), 
LGlo23657 = global_average_pooling2D_layer([[[[1.3108], [1.1623]], [[1.0272], [1.7657]]]], Glo23657), 
LRes11440 = reshape_layer(Glo23657, [1, 1], Res11440), 
LRes6061 = reshape_layer(Res11440, [1, 1, 1], Res6061), 
LUp_42032 = up_sampling2D_layer(Res6061, 2, 2, Up_42032), 
LRes18063 = reshape_layer(Up_42032, [2, 2, 1, 1], Res18063), 
LCro97762 = cropping3D_layer(Res18063, 0, 1, 0, 0, 0, 0, Cro97762), 
LZer30227 = zero_padding3D_layer(Cro97762, 2, 0, 6, 0, 0, 0, Zer30227), 
LAve4663 = average_layer([Res56431,Zer30227], Ave4663), 
exec_layers([LMul49941,LRes22823,LRes4646,LZer50528,LLay99722,LRes3171,LSep60163,LCon26366,LMul79797,LRes13488,LRes56431,LGlo23657,LRes11440,LRes6061,LUp_42032,LRes18063,LCro97762,LZer30227,LAve4663],["Mul49941","Res22823","Res4646","Zer50528","Lay99722","Res3171","Sep60163","Con26366","Mul79797","Res13488","Res56431","Glo23657","Res11440","Res6061","Up_42032","Res18063","Cro97762","Zer30227","Ave4663"],Ave4663,"Ave4663")

Actual (Unparsed): [[[[[0.0000000]], [[0.0000000]], [[0.0000000]], [[0.0000000]], [[0.0000000]], [[0.0000000]], [[0.0000000]], [[0.0000000]]], [[[0.0008016]], [[-0.0017120]], [[0.0026799]], [[0.0003803]], [[0.0458606]], [[0.1038891]], [[0.0641898]], [[0.0760971]]], [[[0.0092467]], [[-0.0140993]], [[0.0516580]], [[0.0868046]], [[0.0892810]], [[0.0507824]], [[0.6761355]], [[0.7979462]]]]]

Expected (Unparsed): [[[[[0.0]],[[0.0]],[[0.0]],[[0.0]],[[0.0]],[[0.0]],[[0.0]],[[0.0]]],[[[0.000801572155665745]],[[-0.0017119746703851987]],[[0.002679933332581959]],[[0.00038029095000000003]],[[0.045860609168]],[[0.103889111608]],[[0.06418977474]],[[0.0760971432]]],[[[0.009246691129999901]],[[-0.014099279455115452]],[[0.051658039079508]],[[0.08680461182100002]],[[0.0892809889]],[[0.0507823925175]],[[0.676135544144]],[[0.79794626073]]]]]

Actual:   [[[[[0]], [[0]], [[0]], [[0]], [[0]], [[0]], [[0]], [[0]]], [[[0.0009]], [[-0.0017]], [[0.0027]], [[0.0004]], [[0.0459]], [[0.1039]], [[0.0642]], [[0.0761]]], [[[0.0093]], [[-0.014]], [[0.0517]], [[0.0869]], [[0.0893]], [[0.0508]], [[0.6762]], [[0.798]]]]]

Expected: [[[[[0]], [[0]], [[0]], [[0]], [[0]], [[0]], [[0]], [[0]]], [[[0.0009]], [[-0.0017]], [[0.0027]], [[0.0004]], [[0.0459]], [[0.1039]], [[0.0642]], [[0.0761]]], [[[0.0093]], [[-0.014]], [[0.0517]], [[0.0869]], [[0.0893]], [[0.0508]], [[0.6762]], [[0.798]]]]]