import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Con65165 = tf.keras.layers.Input(shape=([1, 2, 2, 1]))
in0Mul35587 = tf.keras.layers.Input(shape=([2, 2]))
in1Mul35587 = tf.keras.layers.Input(shape=([2, 2]))
in0Con12551 = tf.keras.layers.Input(shape=([4, 14]))

Con65165 = keras.layers.Conv3D(4, (1, 1, 2),strides=(1, 1, 1), padding='same', dilation_rate=(1, 1, 1), name = 'Con65165', )(in0Con65165)
Res13246 = keras.layers.Reshape((1, 2, 8), name = 'Res13246', )(Con65165)
Res2788 = keras.layers.Reshape((1, 16), name = 'Res2788', )(Res13246)
Zer93375 = keras.layers.ZeroPadding1D(padding=((3, 0)), name = 'Zer93375', )(Res2788)
Mul35587 = keras.layers.Multiply(name = 'Mul35587', )([in0Mul35587,in1Mul35587])
Zer36911 = keras.layers.ZeroPadding1D(padding=((1, 1)), name = 'Zer36911', )(Mul35587)
Con12551 = keras.layers.Concatenate(axis=2, name = 'Con12551', )([Zer36911,in0Con12551])
Min98271 = keras.layers.Minimum(name = 'Min98271', )([Zer93375,Con12551])
ELU77723 = keras.layers.ELU(alpha=-2.5286461907618962, name = 'ELU77723', )(Min98271)
model = tf.keras.models.Model(inputs=[in0Con65165,in0Mul35587,in1Mul35587,in0Con12551], outputs=ELU77723)
w = model.get_layer('Con65165').get_weights() 
w[0] = np.array([[[[[0.0324, 0.4056, 0.5787, 0.4567]], [[0.1679, 0.5081, 0.8643, 0.7618]]]]])
w[1] = np.array([0, 0, 0, 0])
model.get_layer('Con65165').set_weights(w) 
in0Con65165 = tf.constant([[[[[0.992], [0.1134]], [[0.7186], [0.8738]]]]])
in0Mul35587 = tf.constant([[[0.4972, 0.9895], [0.8701, 0.5113]]])
in1Mul35587 = tf.constant([[[0.7312, 0.0583], [0.099, 0.7653]]])
in0Con12551 = tf.constant([[[0.6734, 0.9171, 0.6635, 0.4102, 0.1265, 0.6671, 0.3973, 0.8961, 0.6563, 0.8956, 0.5575, 0.8914, 0.3381, 0.9674], [0.86, 0.0472, 0.2238, 0.6525, 0.1972, 0.0993, 0.0843, 0.8956, 0.5571, 0.4181, 0.7719, 0.2635, 0.0639, 0.3064], [0.0809, 0.5288, 0.1754, 0.2131, 0.6785, 0.4673, 0.6583, 0.1616, 0.4097, 0.8295, 0.0795, 0.5932, 0.034, 0.6277], [0.2039, 0.5209, 0.2453, 0.3268, 0.8663, 0.3516, 0.6461, 0.2683, 0.6003, 0.9923, 0.1999, 0.6696, 0.5472, 0.8831]]])
print (np.array2string(model.predict([in0Con65165,in0Mul35587,in1Mul35587,in0Con12551],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='ELU77723.png')

LCon65165 = conv3D_layer([[[[[0.992], [0.1134]], [[0.7186], [0.8738]]]]], 1, 1, 2,[[[[[0.0324, 0.4056, 0.5787, 0.4567]], [[0.1679, 0.5081, 0.8643, 0.7618]]]]],[0, 0, 0, 0], 1, 1, 1, true, 1, 1, 1, Con65165), 
LRes13246 = reshape_layer(Con65165, [1, 2, 8], Res13246), 
LRes2788 = reshape_layer(Res13246, [1, 16], Res2788), 
LZer93375 = zero_padding1D_layer(Res2788, 3, 0, Zer93375), 
LMul35587 = multiply_layer([[[[0.4972, 0.9895], [0.8701, 0.5113]]], [[[0.7312, 0.0583], [0.099, 0.7653]]]], Mul35587), 
LZer36911 = zero_padding1D_layer(Mul35587, 1, 1, Zer36911), 
LCon12551 = concatenate_layer([Zer36911,[[[0.6734, 0.9171, 0.6635, 0.4102, 0.1265, 0.6671, 0.3973, 0.8961, 0.6563, 0.8956, 0.5575, 0.8914, 0.3381, 0.9674], [0.86, 0.0472, 0.2238, 0.6525, 0.1972, 0.0993, 0.0843, 0.8956, 0.5571, 0.4181, 0.7719, 0.2635, 0.0639, 0.3064], [0.0809, 0.5288, 0.1754, 0.2131, 0.6785, 0.4673, 0.6583, 0.1616, 0.4097, 0.8295, 0.0795, 0.5932, 0.034, 0.6277], [0.2039, 0.5209, 0.2453, 0.3268, 0.8663, 0.3516, 0.6461, 0.2683, 0.6003, 0.9923, 0.1999, 0.6696, 0.5472, 0.8831]]]], 2, Con12551), 
LMin98271 = minimum_layer([Zer93375,Con12551], Min98271), 
LELU77723 = elu_layer(Min98271, -2.5286461907618962, ELU77723), 
exec_layers([LCon65165,LRes13246,LRes2788,LZer93375,LMul35587,LZer36911,LCon12551,LMin98271,LELU77723],["Con65165","Res13246","Res2788","Zer93375","Mul35587","Zer36911","Con12551","Min98271","ELU77723"],ELU77723,"ELU77723")

Actual (Unparsed): [[[-0.0000000, -0.0000000, -0.0000000, -0.0000000, -0.0000000, -0.0000000, -0.0000000, -0.0000000, -0.0000000, -0.0000000, -0.0000000, -0.0000000, -0.0000000, -0.0000000, -0.0000000, -0.0000000], [-0.0000000, -0.0000000, -0.0000000, -0.0000000, -0.0000000, -0.0000000, -0.0000000, -0.0000000, -0.0000000, -0.0000000, -0.0000000, -0.0000000, -0.0000000, -0.0000000, -0.0000000, -0.0000000], [-0.0000000, -0.0000000, -0.0000000, -0.0000000, -0.0000000, -0.0000000, -0.0000000, -0.0000000, -0.0000000, -0.0000000, -0.0000000, -0.0000000, -0.0000000, -0.0000000, -0.0000000, -0.0000000], [-0.0000000, -0.0000000, 0.2039000, 0.5209000, 0.0036742, 0.0459950, 0.0656246, 0.0517898, 0.1699937, 0.2683000, 0.6003000, 0.9923000, 0.0283111, 0.3544133, 0.5056680, 0.3990645]]]

Expected (Unparsed): [[[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0.2039,0.5209,0.0036741599999999997,0.04599504,0.06562458,0.05178978,0.16999366,0.2683,0.6003,0.9923,0.02831112,0.35441328,0.50566806,0.39906446]]]

Actual:   [[[-0, -0, -0, -0, -0, -0, -0, -0, -0, -0, -0, -0, -0, -0, -0, -0], [-0, -0, -0, -0, -0, -0, -0, -0, -0, -0, -0, -0, -0, -0, -0, -0], [-0, -0, -0, -0, -0, -0, -0, -0, -0, -0, -0, -0, -0, -0, -0, -0], [-0, -0, 0.2039, 0.5209, 0.0037, 0.046, 0.0657, 0.0518, 0.17, 0.2683, 0.6003, 0.9923, 0.0284, 0.3545, 0.5057, 0.3991]]]

Expected: [[[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0.2039, 0.5209, 0.0037, 0.046, 0.0657, 0.0518, 0.17, 0.2683, 0.6003, 0.9923, 0.0284, 0.3545, 0.5057, 0.3991]]]