import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Sub36233 = tf.keras.layers.Input(shape=([2]))
in1Sub36233 = tf.keras.layers.Input(shape=([2]))
in0Con44343 = tf.keras.layers.Input(shape=([2, 3, 3, 2]))
in0Ave48944 = tf.keras.layers.Input(shape=([2, 2]))
in1Ave48944 = tf.keras.layers.Input(shape=([2, 2]))

Sub36233 = keras.layers.Subtract(name = 'Sub36233', )([in0Sub36233,in1Sub36233])
Res79094 = keras.layers.Reshape((2, 1), name = 'Res79094', )(Sub36233)
Res50806 = keras.layers.Reshape((2, 1, 1), name = 'Res50806', )(Res79094)
Res94353 = keras.layers.Reshape((2, 1, 1, 1), name = 'Res94353', )(Res50806)
Zer25563 = keras.layers.ZeroPadding3D(padding=((0, 0), (2, 0), (2, 0)), name = 'Zer25563', )(Res94353)
Con44343 = keras.layers.Concatenate(axis=4, name = 'Con44343', )([Zer25563,in0Con44343])
Ave48944 = keras.layers.Average(name = 'Ave48944', )([in0Ave48944,in1Ave48944])
Cro95043 = keras.layers.Cropping1D(cropping=((0, 0)), name = 'Cro95043', )(Ave48944)
Ave85237 = keras.layers.AveragePooling1D(pool_size=(2), name = 'Ave85237', )(Cro95043)
Res17690 = keras.layers.Reshape((1, 2, 1), name = 'Res17690', )(Ave85237)
Res6073 = keras.layers.Reshape((1, 2, 1, 1), name = 'Res6073', )(Res17690)
Up_87717 = keras.layers.UpSampling3D(size=(1, 1, 2), name = 'Up_87717', )(Res6073)
Den4279 = keras.layers.Dense(3,name = 'Den4279', )(Up_87717)
Zer14613 = keras.layers.ZeroPadding3D(padding=((1, 0), (1, 0), (1, 0)), name = 'Zer14613', )(Den4279)
Add49004 = keras.layers.Add(name = 'Add49004', )([Con44343,Zer14613])
model = tf.keras.models.Model(inputs=[in0Sub36233,in1Sub36233,in0Con44343,in0Ave48944,in1Ave48944], outputs=Add49004)
w = model.get_layer('Den4279').get_weights() 
w[0] = np.array([[0.8649, 0.266, 0.0907]])
w[1] = np.array([0.0192, 0.3194, 0.1059])
model.get_layer('Den4279').set_weights(w) 
in0Sub36233 = tf.constant([[0.4883, 0.7613]])
in1Sub36233 = tf.constant([[0.1923, 0.2139]])
in0Con44343 = tf.constant([[[[[0.7325, 0.0097], [0.8977, 0.1706], [0.9377, 0.9212]], [[0.5202, 0.0101], [0.0532, 0.1181], [0.427, 0.5426]], [[0.1325, 0.4709], [0.182, 0.7704], [0.5832, 0.2581]]], [[[0.436, 0.1558], [0.2884, 0.3203], [0.1442, 0.1478]], [[0.3748, 0.12], [0.8442, 0.4731], [0.3828, 0.6829]], [[0.5931, 0.451], [0.0647, 0.8092], [0.8272, 0.326]]]]])
in0Ave48944 = tf.constant([[[0.118, 0.7166], [0.6316, 0.3675]]])
in1Ave48944 = tf.constant([[[0.1705, 0.8136], [0.2208, 0.5737]]])
print (np.array2string(model.predict([in0Sub36233,in1Sub36233,in0Con44343,in0Ave48944,in1Ave48944],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Add49004.png')

LSub36233 = subtract_layer([[0.4883, 0.7613]], [[0.1923, 0.2139]], Sub36233), 
LRes79094 = reshape_layer(Sub36233, [2, 1], Res79094), 
LRes50806 = reshape_layer(Res79094, [2, 1, 1], Res50806), 
LRes94353 = reshape_layer(Res50806, [2, 1, 1, 1], Res94353), 
LZer25563 = zero_padding3D_layer(Res94353, 0, 0, 2, 0, 2, 0, Zer25563), 
LCon44343 = concatenate_layer([Zer25563,[[[[[0.7325, 0.0097], [0.8977, 0.1706], [0.9377, 0.9212]], [[0.5202, 0.0101], [0.0532, 0.1181], [0.427, 0.5426]], [[0.1325, 0.4709], [0.182, 0.7704], [0.5832, 0.2581]]], [[[0.436, 0.1558], [0.2884, 0.3203], [0.1442, 0.1478]], [[0.3748, 0.12], [0.8442, 0.4731], [0.3828, 0.6829]], [[0.5931, 0.451], [0.0647, 0.8092], [0.8272, 0.326]]]]]], 4, Con44343), 
LAve48944 = average_layer([[[[0.118, 0.7166], [0.6316, 0.3675]]], [[[0.1705, 0.8136], [0.2208, 0.5737]]]], Ave48944), 
LCro95043 = cropping1D_layer(Ave48944, 0, 0, Cro95043), 
LAve85237 = average_pooling1D_layer(Cro95043, 2, Ave85237), 
LRes17690 = reshape_layer(Ave85237, [1, 2, 1], Res17690), 
LRes6073 = reshape_layer(Res17690, [1, 2, 1, 1], Res6073), 
LUp_87717 = up_sampling3D_layer(Res6073, 1, 1, 2, Up_87717), 
LDen4279 = dense_layer(Up_87717, [[0.8649, 0.266, 0.0907]],[0.0192, 0.3194, 0.1059], Den4279), 
LZer14613 = zero_padding3D_layer(Den4279, 1, 0, 1, 0, 1, 0, Zer14613), 
LAdd49004 = add_layer([Con44343,Zer14613], Add49004), 
exec_layers([LSub36233,LRes79094,LRes50806,LRes94353,LZer25563,LCon44343,LAve48944,LCro95043,LAve85237,LRes17690,LRes6073,LUp_87717,LDen4279,LZer14613,LAdd49004],["Sub36233","Res79094","Res50806","Res94353","Zer25563","Con44343","Ave48944","Cro95043","Ave85237","Res17690","Res6073","Up_87717","Den4279","Zer14613","Add49004"],Add49004,"Add49004")

Actual (Unparsed): [[[[[0.0000000, 0.7325000, 0.0097000], [0.0000000, 0.8977000, 0.1706000], [0.0000000, 0.9377000, 0.9212000]], [[0.0000000, 0.5202000, 0.0101000], [0.0000000, 0.0532000, 0.1181000], [0.0000000, 0.4270000, 0.5426000]], [[0.0000000, 0.1325000, 0.4709000], [0.0000000, 0.1820000, 0.7704000], [0.2960000, 0.5832000, 0.2581000]]], [[[0.0000000, 0.4360000, 0.1558000], [0.0000000, 0.2884000, 0.3203000], [0.0000000, 0.1442000, 0.1478000]], [[0.0000000, 0.3748000, 0.1200000], [0.2658911, 1.2394699, 0.6048699], [0.2658911, 0.7780699, 0.8146699]], [[0.0000000, 0.5931000, 0.4510000], [0.5535785, 0.5484481, 0.9711390], [1.1009785, 1.3109481, 0.4879390]]]]]

Expected (Unparsed): [[[[[0,0.7325,0.0097],[0,0.8977,0.1706],[0,0.9377,0.9212]],[[0,0.5202,0.0101],[0,0.0532,0.1181],[0,0.427,0.5426]],[[0,0.1325,0.4709],[0,0.182,0.7704],[0.29600000000000004,0.5832,0.2581]]],[[[0,0.436,0.1558],[0,0.2884,0.3203],[0,0.1442,0.1478]],[[0,0.3748,0.12],[0.26589110250000003,1.2394698499999999,0.6048699075],[0.26589110250000003,0.7780698500000001,0.8146699074999999]],[[0,0.5931,0.451],[0.553578465,0.5484481,0.971138995],[1.1009784649999999,1.3109481,0.48793899500000004]]]]]

Actual:   [[[[[0, 0.7325, 0.0097], [0, 0.8977, 0.1706], [0, 0.9377, 0.9212]], [[0, 0.5202, 0.0101], [0, 0.0532, 0.1181], [0, 0.427, 0.5426]], [[0, 0.1325, 0.4709], [0, 0.182, 0.7704], [0.296, 0.5832, 0.2581]]], [[[0, 0.436, 0.1558], [0, 0.2884, 0.3203], [0, 0.1442, 0.1478]], [[0, 0.3748, 0.12], [0.2659, 1.2395, 0.6049], [0.2659, 0.7781, 0.8147]], [[0, 0.5931, 0.451], [0.5536, 0.5485, 0.9712], [1.101, 1.311, 0.488]]]]]

Expected: [[[[[0, 0.7325, 0.0097], [0, 0.8977, 0.1706], [0, 0.9377, 0.9212]], [[0, 0.5202, 0.0101], [0, 0.0532, 0.1181], [0, 0.427, 0.5426]], [[0, 0.1325, 0.4709], [0, 0.182, 0.7704], [0.2961, 0.5832, 0.2581]]], [[[0, 0.436, 0.1558], [0, 0.2884, 0.3203], [0, 0.1442, 0.1478]], [[0, 0.3748, 0.12], [0.2659, 1.2395, 0.6049], [0.2659, 0.7781, 0.8147]], [[0, 0.5931, 0.451], [0.5536, 0.5485, 0.9712], [1.101, 1.311, 0.488]]]]]