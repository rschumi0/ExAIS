import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Con88187 = tf.keras.layers.Input(shape=([1, 1]))
in0Sub2084 = tf.keras.layers.Input(shape=([2, 2]))
in1Sub2084 = tf.keras.layers.Input(shape=([2, 2]))
in0Con56371 = tf.keras.layers.Input(shape=([2, 2]))
in0Add67111 = tf.keras.layers.Input(shape=([1, 2, 2]))
in1Add67111 = tf.keras.layers.Input(shape=([1, 2, 2]))
in0Con16539 = tf.keras.layers.Input(shape=([2, 4, 2]))

Con88187 = keras.layers.Conv1D(4, (1),strides=(1), padding='valid', dilation_rate=(1), name = 'Con88187', )(in0Con88187)
Zer73343 = keras.layers.ZeroPadding1D(padding=((1, 0)), name = 'Zer73343', )(Con88187)
Sub2084 = keras.layers.Subtract(name = 'Sub2084', )([in0Sub2084,in1Sub2084])
Con56371 = keras.layers.Concatenate(axis=2, name = 'Con56371', )([Sub2084,in0Con56371])
Add55050 = keras.layers.Add(name = 'Add55050', )([Zer73343,Con56371])
Res93564 = keras.layers.Reshape((2, 4, 1), name = 'Res93564', )(Add55050)
Res33490 = keras.layers.Reshape((2, 4, 1, 1), name = 'Res33490', )(Res93564)
Con77995 = keras.layers.Conv3D(4, (2, 4, 1),strides=(1, 1, 1), padding='same', dilation_rate=(1, 1, 1), name = 'Con77995', )(Res33490)
Res72939 = keras.layers.Reshape((2, 4, 4), name = 'Res72939', )(Con77995)
Add67111 = keras.layers.Add(name = 'Add67111', )([in0Add67111,in1Add67111])
Zer54998 = keras.layers.ZeroPadding2D(padding=((1, 0), (2, 0)), name = 'Zer54998', )(Add67111)
Con16539 = keras.layers.Concatenate(axis=3, name = 'Con16539', )([Zer54998,in0Con16539])
Mul65561 = keras.layers.Multiply(name = 'Mul65561', )([Res72939,Con16539])
model = tf.keras.models.Model(inputs=[in0Con88187,in0Sub2084,in1Sub2084,in0Con56371,in0Add67111,in1Add67111,in0Con16539], outputs=Mul65561)
w = model.get_layer('Con88187').get_weights() 
w[0] = np.array([[[0.4527, 0.1029, 0.9264, 0.4383]]])
w[1] = np.array([0, 0, 0, 0])
model.get_layer('Con88187').set_weights(w) 
w = model.get_layer('Con77995').get_weights() 
w[0] = np.array([[[[[0.829, 0.1966, 0.1927, 0.0197]]], [[[0.1364, 0.6715, 0.266, 0.6634]]], [[[0.5555, 0.4841, 0.7735, 0.4383]]], [[[0.5541, 0.8906, 0.1701, 0.0312]]]], [[[[0.2271, 0.0748, 0.7788, 0.4064]]], [[[0.3417, 0.1334, 0.7629, 0.6475]]], [[[0.1196, 0.5953, 0.7404, 0.368]]], [[[0.9521, 0.1971, 0.3741, 0.8633]]]]])
w[1] = np.array([0, 0, 0, 0])
model.get_layer('Con77995').set_weights(w) 
in0Con88187 = tf.constant([[[0.0618]]])
in0Sub2084 = tf.constant([[[0.0458, 0.3475], [0.0732, 0.5613]]])
in1Sub2084 = tf.constant([[[0.3015, 0.1934], [0.5139, 0.7086]]])
in0Con56371 = tf.constant([[[0.9077, 0.6757], [0.5865, 0.4447]]])
in0Add67111 = tf.constant([[[[0.2933, 0.878], [0.3779, 0.5893]]]])
in1Add67111 = tf.constant([[[[0.8554, 0.5572], [0.9739, 0.0641]]]])
in0Con16539 = tf.constant([[[[0.5501, 0.4097], [0.5802, 0.7689], [0.7584, 0.076], [0.0176, 0.968]], [[0.0412, 0.3525], [0.1463, 0.5657], [0.8593, 0.6087], [0.353, 0.0323]]]])
print (np.array2string(model.predict([in0Con88187,in0Sub2084,in1Sub2084,in0Con56371,in0Add67111,in1Add67111,in0Con16539],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Mul65561.png')

LCon88187 = conv1D_layer([[[0.0618]]], 1,[[[0.4527, 0.1029, 0.9264, 0.4383]]],[0, 0, 0, 0], 1, false, 1, Con88187), 
LZer73343 = zero_padding1D_layer(Con88187, 1, 0, Zer73343), 
LSub2084 = subtract_layer([[[0.0458, 0.3475], [0.0732, 0.5613]]], [[[0.3015, 0.1934], [0.5139, 0.7086]]], Sub2084), 
LCon56371 = concatenate_layer([Sub2084,[[[0.9077, 0.6757], [0.5865, 0.4447]]]], 2, Con56371), 
LAdd55050 = add_layer([Zer73343,Con56371], Add55050), 
LRes93564 = reshape_layer(Add55050, [2, 4, 1], Res93564), 
LRes33490 = reshape_layer(Res93564, [2, 4, 1, 1], Res33490), 
LCon77995 = conv3D_layer(Res33490, 2, 4, 1,[[[[[0.829, 0.1966, 0.1927, 0.0197]]], [[[0.1364, 0.6715, 0.266, 0.6634]]], [[[0.5555, 0.4841, 0.7735, 0.4383]]], [[[0.5541, 0.8906, 0.1701, 0.0312]]]], [[[[0.2271, 0.0748, 0.7788, 0.4064]]], [[[0.3417, 0.1334, 0.7629, 0.6475]]], [[[0.1196, 0.5953, 0.7404, 0.368]]], [[[0.9521, 0.1971, 0.3741, 0.8633]]]]],[0, 0, 0, 0], 1, 1, 1, true, 1, 1, 1, Con77995), 
LRes72939 = reshape_layer(Con77995, [2, 4, 4], Res72939), 
LAdd67111 = add_layer([[[[[0.2933, 0.878], [0.3779, 0.5893]]]], [[[[0.8554, 0.5572], [0.9739, 0.0641]]]]], Add67111), 
LZer54998 = zero_padding2D_layer(Add67111, 1, 0, 2, 0, Zer54998), 
LCon16539 = concatenate_layer([Zer54998,[[[[0.5501, 0.4097], [0.5802, 0.7689], [0.7584, 0.076], [0.0176, 0.968]], [[0.0412, 0.3525], [0.1463, 0.5657], [0.8593, 0.6087], [0.353, 0.0323]]]]], 3, Con16539), 
LMul65561 = multiply_layer([Res72939,Con16539], Mul65561), 
exec_layers([LCon88187,LZer73343,LSub2084,LCon56371,LAdd55050,LRes93564,LRes33490,LCon77995,LRes72939,LAdd67111,LZer54998,LCon16539,LMul65561],["Con88187","Zer73343","Sub2084","Con56371","Add55050","Res93564","Res33490","Con77995","Res72939","Add67111","Zer54998","Con16539","Mul65561"],Mul65561,"Mul65561")

Actual (Unparsed): [[[[0.0000000, 0.0000000, 0.0149563, 0.0667308], [0.0000000, 0.0000000, 0.5993097, 0.6930278], [0.0000000, 0.0000000, 1.1561517, 0.1090244], [0.0000000, 0.0000000, 0.0214004, 1.0001799]], [[0.0000000, 0.0000000, -0.0045032, -0.1112102], [0.0000000, 0.0000000, 0.0674693, 0.1104503], [0.2676993, 0.9084274, 0.4373887, 0.3841338], [0.8084058, 0.2896956, 0.0880898, 0.0105190]]]]

Expected (Unparsed): [[[[0.0,0.0,0.014956298470361326,0.06673076303955218],[0.0,0.0,0.5993096686268736,0.6930278586832525],[0.0,0.0,1.156151696794368,0.10902440388972798],[0.0,0.0,0.021400366773315204,1.000179931973904]],[[0.0,0.0,-0.0045031564987416004,-0.11121016420291498],[0.0,0.0,0.06746928257657281,0.11045025740431381],[0.2676993036800586,0.9084274154391073,0.4373886960595671,0.38413379471739484],[0.8084057998872527,0.28969565740604286,0.088089824112232,0.010518991158362]]]]

Actual:   [[[[0, 0, 0.015, 0.0668], [0, 0, 0.5994, 0.6931], [0, 0, 1.1562, 0.1091], [0, 0, 0.0215, 1.0002]], [[0, 0, -0.0045, -0.1112], [0, 0, 0.0675, 0.1105], [0.2677, 0.9085, 0.4374, 0.3842], [0.8085, 0.2897, 0.0881, 0.0106]]]]

Expected: [[[[0, 0, 0.015, 0.0668], [0, 0, 0.5994, 0.6931], [0, 0, 1.1562, 0.1091], [0, 0, 0.0215, 1.0002]], [[0, 0, -0.0045, -0.1112], [0, 0, 0.0675, 0.1105], [0.2677, 0.9085, 0.4374, 0.3842], [0.8085, 0.2897, 0.0881, 0.0106]]]]