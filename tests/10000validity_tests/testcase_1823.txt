import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Ave38153 = tf.keras.layers.Input(shape=([1, 1, 2, 1]))
in1Ave38153 = tf.keras.layers.Input(shape=([1, 1, 2, 1]))
in0Max14369 = tf.keras.layers.Input(shape=([1, 2, 2]))
in1Max14369 = tf.keras.layers.Input(shape=([1, 2, 2]))
in0Sof91210 = tf.keras.layers.Input(shape=([1, 1, 1, 1]))

Ave38153 = keras.layers.Average(name = 'Ave38153', )([in0Ave38153,in1Ave38153])
Zer93883 = keras.layers.ZeroPadding3D(padding=((0, 0), (3, 0), (1, 0)), name = 'Zer93883', )(Ave38153)
Max14369 = keras.layers.Maximum(name = 'Max14369', )([in0Max14369,in1Max14369])
Res10725 = keras.layers.Reshape((1, 4), name = 'Res10725', )(Max14369)
Up_44979 = keras.layers.UpSampling1D(size=(1), name = 'Up_44979', )(Res10725)
Res81386 = keras.layers.Reshape((1, 4, 1), name = 'Res81386', )(Up_44979)
Dep80644 = keras.layers.DepthwiseConv2D((1, 1),strides=(1, 1), padding='valid', name = 'Dep80644', )(Res81386)
Res99014 = keras.layers.Reshape((1, 4, 1, 1), name = 'Res99014', )(Dep80644)
Sof91210 = keras.layers.Softmax(axis=1, name = 'Sof91210', input_shape=(1, 1, 1, 1))(in0Sof91210)
Zer61741 = keras.layers.ZeroPadding3D(padding=((0, 0), (3, 0), (0, 0)), name = 'Zer61741', )(Sof91210)
Max81988 = keras.layers.Maximum(name = 'Max81988', )([Res99014,Zer61741])
Zer51890 = keras.layers.ZeroPadding3D(padding=((0, 0), (0, 0), (2, 0)), name = 'Zer51890', )(Max81988)
Add52360 = keras.layers.Add(name = 'Add52360', )([Zer93883,Zer51890])
model = tf.keras.models.Model(inputs=[in0Ave38153,in1Ave38153,in0Max14369,in1Max14369,in0Sof91210], outputs=Add52360)
w = model.get_layer('Dep80644').get_weights() 
w[0] = np.array([[[[0.2444]]]])
w[1] = np.array([0])
model.get_layer('Dep80644').set_weights(w) 
in0Ave38153 = tf.constant([[[[[0.7061], [0.318]]]]])
in1Ave38153 = tf.constant([[[[[0.5517], [0.6818]]]]])
in0Max14369 = tf.constant([[[[0.5877, 0.0834], [0.8987, 0.2636]]]])
in1Max14369 = tf.constant([[[[0.7649, 0.4475], [0.8798, 0.6649]]]])
in0Sof91210 = tf.constant([[[[[0.3274]]]]])
print (np.array2string(model.predict([in0Ave38153,in1Ave38153,in0Max14369,in1Max14369,in0Sof91210],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Add52360.png')

LAve38153 = average_layer([[[[[[0.7061], [0.318]]]]], [[[[[0.5517], [0.6818]]]]]], Ave38153), 
LZer93883 = zero_padding3D_layer(Ave38153, 0, 0, 3, 0, 1, 0, Zer93883), 
LMax14369 = maximum_layer([[[[[0.5877, 0.0834], [0.8987, 0.2636]]]], [[[[0.7649, 0.4475], [0.8798, 0.6649]]]]], Max14369), 
LRes10725 = reshape_layer(Max14369, [1, 4], Res10725), 
LUp_44979 = up_sampling1D_layer(Res10725, 1, Up_44979), 
LRes81386 = reshape_layer(Up_44979, [1, 4, 1], Res81386), 
LDep80644 = depthwise_conv2D_layer(Res81386, 1, 1,[[[[0.2444]]]],[0], 1, 1, false, Dep80644), 
LRes99014 = reshape_layer(Dep80644, [1, 4, 1, 1], Res99014), 
LSof91210 = softmax_layer([[[[[0.3274]]]]], 1, Sof91210), 
LZer61741 = zero_padding3D_layer(Sof91210, 0, 0, 3, 0, 0, 0, Zer61741), 
LMax81988 = maximum_layer([Res99014,Zer61741], Max81988), 
LZer51890 = zero_padding3D_layer(Max81988, 0, 0, 0, 0, 2, 0, Zer51890), 
LAdd52360 = add_layer([Zer93883,Zer51890], Add52360), 
exec_layers([LAve38153,LZer93883,LMax14369,LRes10725,LUp_44979,LRes81386,LDep80644,LRes99014,LSof91210,LZer61741,LMax81988,LZer51890,LAdd52360],["Ave38153","Zer93883","Max14369","Res10725","Up_44979","Res81386","Dep80644","Res99014","Sof91210","Zer61741","Max81988","Zer51890","Add52360"],Add52360,"Add52360")

Actual (Unparsed): [[[[[0.0000000], [0.0000000], [0.1869416]], [[0.0000000], [0.0000000], [0.1093690]], [[0.0000000], [0.0000000], [0.2196423]], [[0.0000000], [0.6289000], [1.4999000]]]]]

Expected (Unparsed): [[[[[0],[0],[0.18694156]],[[0],[0],[0.10936900000000001]],[[0],[0],[0.21964228000000002]],[[0],[0.6289],[1.4999]]]]]

Actual:   [[[[[0], [0], [0.187]], [[0], [0], [0.1094]], [[0], [0], [0.2197]], [[0], [0.6289], [1.4999]]]]]

Expected: [[[[[0], [0], [0.187]], [[0], [0], [0.1094]], [[0], [0], [0.2197]], [[0], [0.6289], [1.4999]]]]]