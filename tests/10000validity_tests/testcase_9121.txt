import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Zer73471 = tf.keras.layers.Input(shape=([1, 1, 3, 1]))
in0PRe80380 = tf.keras.layers.Input(shape=([1, 2, 1]))
in0Con48264 = tf.keras.layers.Input(shape=([3, 3, 4]))
in0Min91405 = tf.keras.layers.Input(shape=([1, 1]))
in1Min91405 = tf.keras.layers.Input(shape=([1, 1]))
in0Con58414 = tf.keras.layers.Input(shape=([3, 14]))

Zer73471 = keras.layers.ZeroPadding3D(padding=((1, 1), (1, 1), (1, 1)), name = 'Zer73471', )(in0Zer73471)
Res13495 = keras.layers.Reshape((3, 3, 5), name = 'Res13495', )(Zer73471)
PRe80380 = keras.layers.PReLU(name = 'PRe80380', input_shape=(1, 2, 1))(in0PRe80380)
Zer83730 = keras.layers.ZeroPadding2D(padding=((2, 0), (1, 0)), name = 'Zer83730', )(PRe80380)
Con48264 = keras.layers.Concatenate(axis=3, name = 'Con48264', )([Zer83730,in0Con48264])
Min24988 = keras.layers.Minimum(name = 'Min24988', )([Res13495,Con48264])
Res39488 = keras.layers.Reshape((3, 15), name = 'Res39488', )(Min24988)
Min91405 = keras.layers.Minimum(name = 'Min91405', )([in0Min91405,in1Min91405])
Zer50566 = keras.layers.ZeroPadding1D(padding=((2, 0)), name = 'Zer50566', )(Min91405)
Con58414 = keras.layers.Concatenate(axis=2, name = 'Con58414', )([Zer50566,in0Con58414])
Min48435 = keras.layers.Minimum(name = 'Min48435', )([Res39488,Con58414])
model = tf.keras.models.Model(inputs=[in0Zer73471,in0PRe80380,in0Con48264,in0Min91405,in1Min91405,in0Con58414], outputs=Min48435)
w = model.get_layer('PRe80380').get_weights() 
w[0] = np.array([[[0.1628], [0.2645]]])
model.get_layer('PRe80380').set_weights(w) 
in0Zer73471 = tf.constant([[[[[1.8291], [1.6438], [1.694]]]]])
in0PRe80380 = tf.constant([[[[0.9167], [0.8617]]]])
in0Con48264 = tf.constant([[[[0.1084, 0.6279, 0.1187, 0.4297], [0.2371, 0.393, 0.1461, 0.3287], [0.9695, 0.3012, 0.388, 0.9588]], [[0.3797, 0.7102, 0.7875, 0.1453], [0.8039, 0.9711, 0.5264, 0.1519], [0.76, 0.7011, 0.1399, 0.2677]], [[0.7162, 0.8742, 0.3398, 0.7623], [0.3445, 0.6628, 0.1128, 0.0643], [0.5143, 0.3779, 0.9207, 0.6922]]]])
in0Min91405 = tf.constant([[[0.6018]]])
in1Min91405 = tf.constant([[[0.2692]]])
in0Con58414 = tf.constant([[[0.6866, 0.3143, 0.9881, 0.4657, 0.8126, 0.2034, 0.8193, 0.9965, 0.9244, 0.2548, 0.3584, 0.74, 0.5891, 0.6322], [0.2746, 0.7976, 0.152, 0.7043, 0.4636, 0.4077, 0.7069, 0.5069, 0.3154, 0.0961, 0.2745, 0.5907, 0.7022, 0.1955], [0.4325, 0.4413, 0.5746, 0.1007, 0.6583, 0.3119, 0.1552, 0.4854, 0.0753, 0.6151, 0.7203, 0.7163, 0.1237, 0.9891]]])
print (np.array2string(model.predict([in0Zer73471,in0PRe80380,in0Con48264,in0Min91405,in1Min91405,in0Con58414],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Min48435.png')

LZer73471 = zero_padding3D_layer([[[[[1.8291], [1.6438], [1.694]]]]], 1, 1, 1, 1, 1, 1, Zer73471), 
LRes13495 = reshape_layer(Zer73471, [3, 3, 5], Res13495), 
LPRe80380 = prelu_layer([[[[0.9167], [0.8617]]]], [[[0.1628], [0.2645]]], PRe80380), 
LZer83730 = zero_padding2D_layer(PRe80380, 2, 0, 1, 0, Zer83730), 
LCon48264 = concatenate_layer([Zer83730,[[[[0.1084, 0.6279, 0.1187, 0.4297], [0.2371, 0.393, 0.1461, 0.3287], [0.9695, 0.3012, 0.388, 0.9588]], [[0.3797, 0.7102, 0.7875, 0.1453], [0.8039, 0.9711, 0.5264, 0.1519], [0.76, 0.7011, 0.1399, 0.2677]], [[0.7162, 0.8742, 0.3398, 0.7623], [0.3445, 0.6628, 0.1128, 0.0643], [0.5143, 0.3779, 0.9207, 0.6922]]]]], 3, Con48264), 
LMin24988 = minimum_layer([Res13495,Con48264], Min24988), 
LRes39488 = reshape_layer(Min24988, [3, 15], Res39488), 
LMin91405 = minimum_layer([[[[0.6018]]], [[[0.2692]]]], Min91405), 
LZer50566 = zero_padding1D_layer(Min91405, 2, 0, Zer50566), 
LCon58414 = concatenate_layer([Zer50566,[[[0.6866, 0.3143, 0.9881, 0.4657, 0.8126, 0.2034, 0.8193, 0.9965, 0.9244, 0.2548, 0.3584, 0.74, 0.5891, 0.6322], [0.2746, 0.7976, 0.152, 0.7043, 0.4636, 0.4077, 0.7069, 0.5069, 0.3154, 0.0961, 0.2745, 0.5907, 0.7022, 0.1955], [0.4325, 0.4413, 0.5746, 0.1007, 0.6583, 0.3119, 0.1552, 0.4854, 0.0753, 0.6151, 0.7203, 0.7163, 0.1237, 0.9891]]]], 2, Con58414), 
LMin48435 = minimum_layer([Res39488,Con58414], Min48435), 
exec_layers([LZer73471,LRes13495,LPRe80380,LZer83730,LCon48264,LMin24988,LRes39488,LMin91405,LZer50566,LCon58414,LMin48435],["Zer73471","Res13495","PRe80380","Zer83730","Con48264","Min24988","Res39488","Min91405","Zer50566","Con58414","Min48435"],Min48435,"Min48435")

Actual (Unparsed): [[[0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.4077000, 0.7069000, 0.5069000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000]]]

Expected (Unparsed): [[[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0.4077,0.7069,0.5069,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]]]

Actual:   [[[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0.4077, 0.7069, 0.5069, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]]]

Expected: [[[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0.4077, 0.7069, 0.5069, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]]]