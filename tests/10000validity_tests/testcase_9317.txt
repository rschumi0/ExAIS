import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Sub18795 = tf.keras.layers.Input(shape=([2, 2, 3, 3]))
in1Sub18795 = tf.keras.layers.Input(shape=([2, 2, 3, 3]))
in0Sub57225 = tf.keras.layers.Input(shape=([2, 2, 2]))
in1Sub57225 = tf.keras.layers.Input(shape=([2, 2, 2]))
in0Dot29003 = tf.keras.layers.Input(shape=([3]))
in1Dot29003 = tf.keras.layers.Input(shape=([3]))
in0Con42144 = tf.keras.layers.Input(shape=([7]))
in0Con58754 = tf.keras.layers.Input(shape=([8, 1, 1]))
in0Sub29570 = tf.keras.layers.Input(shape=([3]))
in1Sub29570 = tf.keras.layers.Input(shape=([3]))
in0Con21925 = tf.keras.layers.Input(shape=([1, 1, 1]))
in0Con90237 = tf.keras.layers.Input(shape=([1, 1, 1]))
in0Con56157 = tf.keras.layers.Input(shape=([8, 3, 7]))

Sub18795 = keras.layers.Subtract(name = 'Sub18795', )([in0Sub18795,in1Sub18795])
Res74720 = keras.layers.Reshape((2, 2, 9), name = 'Res74720', )(Sub18795)
Zer25560 = keras.layers.ZeroPadding2D(padding=((6, 0), (1, 0)), name = 'Zer25560', )(Res74720)
Sub57225 = keras.layers.Subtract(name = 'Sub57225', )([in0Sub57225,in1Sub57225])
Res37293 = keras.layers.Reshape((2, 4), name = 'Res37293', )(Sub57225)
Fla46294 = keras.layers.Flatten(name = 'Fla46294', )(Res37293)
Dot29003 = keras.layers.Dot(axes=(1, 1), name = 'Dot29003', )([in0Dot29003,in1Dot29003])
Con42144 = keras.layers.Concatenate(axis=1, name = 'Con42144', )([Dot29003,in0Con42144])
Ave6139 = keras.layers.Average(name = 'Ave6139', )([Fla46294,Con42144])
Res3771 = keras.layers.Reshape((8, 1), name = 'Res3771', )(Ave6139)
Res87948 = keras.layers.Reshape((8, 1, 1), name = 'Res87948', )(Res3771)
Con58754 = keras.layers.Concatenate(axis=3, name = 'Con58754', )([Res87948,in0Con58754])
Sub29570 = keras.layers.Subtract(name = 'Sub29570', )([in0Sub29570,in1Sub29570])
Res37199 = keras.layers.Reshape((3, 1), name = 'Res37199', )(Sub29570)
Res60875 = keras.layers.Reshape((3, 1, 1), name = 'Res60875', )(Res37199)
Cro57393 = keras.layers.Cropping2D(cropping=((0, 2), (0, 0)), name = 'Cro57393', )(Res60875)
Con21925 = keras.layers.Concatenate(axis=3, name = 'Con21925', )([Cro57393,in0Con21925])
Con90237 = keras.layers.Conv2DTranspose(2, (1, 1),strides=(1, 1), padding='valid', name = 'Con90237', )(in0Con90237)
Max78734 = keras.layers.Maximum(name = 'Max78734', )([Con21925,Con90237])
Zer93719 = keras.layers.ZeroPadding2D(padding=((7, 0), (0, 0)), name = 'Zer93719', )(Max78734)
Max78228 = keras.layers.Maximum(name = 'Max78228', )([Con58754,Zer93719])
Zer42639 = keras.layers.ZeroPadding2D(padding=((0, 0), (2, 0)), name = 'Zer42639', )(Max78228)
Con56157 = keras.layers.Concatenate(axis=3, name = 'Con56157', )([Zer42639,in0Con56157])
Add97371 = keras.layers.Add(name = 'Add97371', )([Zer25560,Con56157])
model = tf.keras.models.Model(inputs=[in0Sub18795,in1Sub18795,in0Sub57225,in1Sub57225,in0Dot29003,in1Dot29003,in0Con42144,in0Con58754,in0Sub29570,in1Sub29570,in0Con21925,in0Con90237,in0Con56157], outputs=Add97371)
w = model.get_layer('Con90237').get_weights() 
w[0] = np.array([[[[0.8616], [0.751]]]])
w[1] = np.array([0, 0])
model.get_layer('Con90237').set_weights(w) 
in0Sub18795 = tf.constant([[[[[0.7686, 0.4592, 0.8025], [0.8946, 0.959, 0.4676], [0.7641, 0.2333, 0.0265]], [[0.823, 0.3399, 0.0894], [0.772, 0.4472, 0.7625], [0.1648, 0.5614, 0.616]]], [[[0.6829, 0.9651, 0.3261], [0.0533, 0.7772, 0.8545], [0.7642, 0.9223, 0.1025]], [[0.7721, 0.8428, 0.3045], [0.3125, 0.7304, 0.7938], [0.1991, 0.2048, 0.5535]]]]])
in1Sub18795 = tf.constant([[[[[0.6736, 0.5565, 0.7124], [0.179, 0.2131, 0.366], [0.3754, 0.2497, 0.1235]], [[0.3596, 0.5341, 0.6493], [0.243, 0.4636, 0.9665], [0.0997, 0.9102, 0.7329]]], [[[0.465, 0.9308, 0.7328], [0.1369, 0.8894, 0.6565], [0.4825, 0.2314, 0.5676]], [[0.0483, 0.1939, 0.445], [0.5211, 0.9834, 0.6685], [0.4384, 0.8879, 0.463]]]]])
in0Sub57225 = tf.constant([[[[0.4944, 0.7538], [0.0854, 0.8458]], [[0.3791, 0.7585], [0.7119, 0.5223]]]])
in1Sub57225 = tf.constant([[[[0.0634, 0.7133], [0.9192, 0.9671]], [[0.3365, 0.6428], [0.0067, 0.3502]]]])
in0Dot29003 = tf.constant([[0.7008, 0.5746, 0.2838]])
in1Dot29003 = tf.constant([[0.663, 0.0532, 0.6239]])
in0Con42144 = tf.constant([[0.0251, 0.1172, 0.9701, 0.0307, 0.4685, 0.9185, 0.1927]])
in0Con58754 = tf.constant([[[[0.4661]], [[0.625]], [[0.4603]], [[0.1522]], [[0.9137]], [[0.4793]], [[0.7553]], [[0.2632]]]])
in0Sub29570 = tf.constant([[0.8291, 0.6182, 0.3416]])
in1Sub29570 = tf.constant([[0.3505, 0.6307, 0.4229]])
in0Con21925 = tf.constant([[[[0.0713]]]])
in0Con90237 = tf.constant([[[[0.531]]]])
in0Con56157 = tf.constant([[[[0.9152, 0.7345, 0.7757, 0.3129, 0.4762, 0.6389, 0.3431], [0.5251, 0.5222, 0.3766, 0.0619, 0.4435, 0.1453, 0.8323], [0.5021, 0.3332, 0.4763, 0.5302, 0.4728, 0.0482, 0.6453]], [[0.1273, 0.6581, 0.5102, 0.2825, 0.1399, 0.9467, 0.6878], [0.2935, 0.9999, 0.3316, 0.2368, 0.0609, 0.613, 0.0621], [0.0593, 0.6694, 0.9543, 0.0694, 0.9118, 0.2286, 0.8749]], [[0.551, 0.8529, 0.8777, 0.2194, 0.0038, 0.7587, 0.5948], [0.557, 0.9209, 0.3516, 0.5065, 0.3126, 0.8345, 0.1936], [0.9951, 0.8536, 0.3756, 0.8723, 0.5334, 0.1345, 0.5491]], [[0.1761, 0.8458, 0.8307, 0.4769, 0.3954, 0.6849, 0.5024], [0.4487, 0.0166, 0.247, 0.224, 0.2387, 0.9799, 0.0026], [0.2831, 0.2957, 0.362, 0.5125, 0.0105, 0.5945, 0.8134]], [[0.6192, 0.5367, 0.6492, 0.3331, 0.2558, 0.2878, 0.4302], [0.9925, 0.9998, 0.3292, 0.7048, 0.0365, 0.412, 0.2485], [0.6225, 0.3835, 0.1506, 0.1257, 0.2058, 0.922, 0.8226]], [[0.2825, 0.7762, 0.1587, 0.5505, 0.9243, 0.2408, 0.711], [0.2643, 0.494, 0.6001, 0.8585, 0.8087, 0.5396, 0.996], [0.8657, 0.049, 0.1675, 0.1136, 0.0743, 0.302, 0.6975]], [[0.7764, 0.8233, 0.5747, 0.9685, 0.1253, 0.1023, 0.2967], [0.8506, 0.865, 0.4682, 0.456, 0.9137, 0.6751, 0.1639], [0.3074, 0.8742, 0.0333, 0.5635, 0.1135, 0.3955, 0.3813]], [[0.042, 0.6988, 0.0538, 0.772, 0.1152, 0.9503, 0.7973], [0.8836, 0.2292, 0.7818, 0.0238, 0.5575, 0.8923, 0.4945], [0.4831, 0.8244, 0.937, 0.9104, 0.5672, 0.72, 0.5745]]]])
print (np.array2string(model.predict([in0Sub18795,in1Sub18795,in0Sub57225,in1Sub57225,in0Dot29003,in1Dot29003,in0Con42144,in0Con58754,in0Sub29570,in1Sub29570,in0Con21925,in0Con90237,in0Con56157],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Add97371.png')

LSub18795 = subtract_layer([[[[[0.7686, 0.4592, 0.8025], [0.8946, 0.959, 0.4676], [0.7641, 0.2333, 0.0265]], [[0.823, 0.3399, 0.0894], [0.772, 0.4472, 0.7625], [0.1648, 0.5614, 0.616]]], [[[0.6829, 0.9651, 0.3261], [0.0533, 0.7772, 0.8545], [0.7642, 0.9223, 0.1025]], [[0.7721, 0.8428, 0.3045], [0.3125, 0.7304, 0.7938], [0.1991, 0.2048, 0.5535]]]]], [[[[[0.6736, 0.5565, 0.7124], [0.179, 0.2131, 0.366], [0.3754, 0.2497, 0.1235]], [[0.3596, 0.5341, 0.6493], [0.243, 0.4636, 0.9665], [0.0997, 0.9102, 0.7329]]], [[[0.465, 0.9308, 0.7328], [0.1369, 0.8894, 0.6565], [0.4825, 0.2314, 0.5676]], [[0.0483, 0.1939, 0.445], [0.5211, 0.9834, 0.6685], [0.4384, 0.8879, 0.463]]]]], Sub18795), 
LRes74720 = reshape_layer(Sub18795, [2, 2, 9], Res74720), 
LZer25560 = zero_padding2D_layer(Res74720, 6, 0, 1, 0, Zer25560), 
LSub57225 = subtract_layer([[[[0.4944, 0.7538], [0.0854, 0.8458]], [[0.3791, 0.7585], [0.7119, 0.5223]]]], [[[[0.0634, 0.7133], [0.9192, 0.9671]], [[0.3365, 0.6428], [0.0067, 0.3502]]]], Sub57225), 
LRes37293 = reshape_layer(Sub57225, [2, 4], Res37293), 
LFla46294 = flatten_layer(Res37293, Fla46294), 
LDot29003 = dot_layer([[0.7008, 0.5746, 0.2838]], [[0.663, 0.0532, 0.6239]], 1, 1, Dot29003), 
LCon42144 = concatenate_layer([Dot29003,[[0.0251, 0.1172, 0.9701, 0.0307, 0.4685, 0.9185, 0.1927]]], 1, Con42144), 
LAve6139 = average_layer([Fla46294,Con42144], Ave6139), 
LRes3771 = reshape_layer(Ave6139, [8, 1], Res3771), 
LRes87948 = reshape_layer(Res3771, [8, 1, 1], Res87948), 
LCon58754 = concatenate_layer([Res87948,[[[[0.4661]], [[0.625]], [[0.4603]], [[0.1522]], [[0.9137]], [[0.4793]], [[0.7553]], [[0.2632]]]]], 3, Con58754), 
LSub29570 = subtract_layer([[0.8291, 0.6182, 0.3416]], [[0.3505, 0.6307, 0.4229]], Sub29570), 
LRes37199 = reshape_layer(Sub29570, [3, 1], Res37199), 
LRes60875 = reshape_layer(Res37199, [3, 1, 1], Res60875), 
LCro57393 = cropping2D_layer(Res60875, 0, 2, 0, 0, Cro57393), 
LCon21925 = concatenate_layer([Cro57393,[[[[0.0713]]]]], 3, Con21925), 
LCon90237 = conv2D_transpose_layer([[[[0.531]]]], 1, 1,[[[[0.8616], [0.751]]]],[0, 0], 1, 1, false, Con90237), 
LMax78734 = maximum_layer([Con21925,Con90237], Max78734), 
LZer93719 = zero_padding2D_layer(Max78734, 7, 0, 0, 0, Zer93719), 
LMax78228 = maximum_layer([Con58754,Zer93719], Max78228), 
LZer42639 = zero_padding2D_layer(Max78228, 0, 0, 2, 0, Zer42639), 
LCon56157 = concatenate_layer([Zer42639,[[[[0.9152, 0.7345, 0.7757, 0.3129, 0.4762, 0.6389, 0.3431], [0.5251, 0.5222, 0.3766, 0.0619, 0.4435, 0.1453, 0.8323], [0.5021, 0.3332, 0.4763, 0.5302, 0.4728, 0.0482, 0.6453]], [[0.1273, 0.6581, 0.5102, 0.2825, 0.1399, 0.9467, 0.6878], [0.2935, 0.9999, 0.3316, 0.2368, 0.0609, 0.613, 0.0621], [0.0593, 0.6694, 0.9543, 0.0694, 0.9118, 0.2286, 0.8749]], [[0.551, 0.8529, 0.8777, 0.2194, 0.0038, 0.7587, 0.5948], [0.557, 0.9209, 0.3516, 0.5065, 0.3126, 0.8345, 0.1936], [0.9951, 0.8536, 0.3756, 0.8723, 0.5334, 0.1345, 0.5491]], [[0.1761, 0.8458, 0.8307, 0.4769, 0.3954, 0.6849, 0.5024], [0.4487, 0.0166, 0.247, 0.224, 0.2387, 0.9799, 0.0026], [0.2831, 0.2957, 0.362, 0.5125, 0.0105, 0.5945, 0.8134]], [[0.6192, 0.5367, 0.6492, 0.3331, 0.2558, 0.2878, 0.4302], [0.9925, 0.9998, 0.3292, 0.7048, 0.0365, 0.412, 0.2485], [0.6225, 0.3835, 0.1506, 0.1257, 0.2058, 0.922, 0.8226]], [[0.2825, 0.7762, 0.1587, 0.5505, 0.9243, 0.2408, 0.711], [0.2643, 0.494, 0.6001, 0.8585, 0.8087, 0.5396, 0.996], [0.8657, 0.049, 0.1675, 0.1136, 0.0743, 0.302, 0.6975]], [[0.7764, 0.8233, 0.5747, 0.9685, 0.1253, 0.1023, 0.2967], [0.8506, 0.865, 0.4682, 0.456, 0.9137, 0.6751, 0.1639], [0.3074, 0.8742, 0.0333, 0.5635, 0.1135, 0.3955, 0.3813]], [[0.042, 0.6988, 0.0538, 0.772, 0.1152, 0.9503, 0.7973], [0.8836, 0.2292, 0.7818, 0.0238, 0.5575, 0.8923, 0.4945], [0.4831, 0.8244, 0.937, 0.9104, 0.5672, 0.72, 0.5745]]]]], 3, Con56157), 
LAdd97371 = add_layer([Zer25560,Con56157], Add97371), 
exec_layers([LSub18795,LRes74720,LZer25560,LSub57225,LRes37293,LFla46294,LDot29003,LCon42144,LAve6139,LRes3771,LRes87948,LCon58754,LSub29570,LRes37199,LRes60875,LCro57393,LCon21925,LCon90237,LMax78734,LZer93719,LMax78228,LZer42639,LCon56157,LAdd97371],["Sub18795","Res74720","Zer25560","Sub57225","Res37293","Fla46294","Dot29003","Con42144","Ave6139","Res3771","Res87948","Con58754","Sub29570","Res37199","Res60875","Cro57393","Con21925","Con90237","Max78734","Zer93719","Max78228","Zer42639","Con56157","Add97371"],Add97371,"Add97371")

Actual (Unparsed): [[[[0.0000000, 0.0000000, 0.9152000, 0.7345000, 0.7757000, 0.3129000, 0.4762000, 0.6389000, 0.3431000], [0.0000000, 0.0000000, 0.5251000, 0.5222000, 0.3766000, 0.0619000, 0.4435000, 0.1453000, 0.8323000], [0.5516310, 0.4661000, 0.5021000, 0.3332000, 0.4763000, 0.5302000, 0.4728000, 0.0482000, 0.6453000]], [[0.0000000, 0.0000000, 0.1273000, 0.6581000, 0.5102000, 0.2825000, 0.1399000, 0.9467000, 0.6878000], [0.0000000, 0.0000000, 0.2935000, 0.9999000, 0.3316000, 0.2368000, 0.0609000, 0.6130000, 0.0621000], [0.0328000, 0.6250000, 0.0593000, 0.6694000, 0.9543000, 0.0694000, 0.9118000, 0.2286000, 0.8749000]], [[0.0000000, 0.0000000, 0.5510000, 0.8529000, 0.8777000, 0.2194000, 0.0038000, 0.7587000, 0.5948000], [0.0000000, 0.0000000, 0.5570000, 0.9209000, 0.3516000, 0.5065000, 0.3126000, 0.8345000, 0.1936000], [0.0000000, 0.4603000, 0.9951000, 0.8536000, 0.3756000, 0.8723000, 0.5334000, 0.1345000, 0.5491000]], [[0.0000000, 0.0000000, 0.1761000, 0.8458000, 0.8307000, 0.4769000, 0.3954000, 0.6849000, 0.5024000], [0.0000000, 0.0000000, 0.4487000, 0.0166000, 0.2470000, 0.2240000, 0.2387000, 0.9799000, 0.0026000], [0.4244000, 0.1522000, 0.2831000, 0.2957000, 0.3620000, 0.5125000, 0.0105000, 0.5945000, 0.8134000]], [[0.0000000, 0.0000000, 0.6192000, 0.5367000, 0.6492000, 0.3331000, 0.2558000, 0.2878000, 0.4302000], [0.0000000, 0.0000000, 0.9925000, 0.9998000, 0.3292000, 0.7048000, 0.0365000, 0.4120000, 0.2485000], [0.0366500, 0.9137000, 0.6225000, 0.3835000, 0.1506000, 0.1257000, 0.2058000, 0.9220000, 0.8226000]], [[0.0000000, 0.0000000, 0.2825000, 0.7762000, 0.1587000, 0.5505000, 0.9243000, 0.2408000, 0.7110000], [0.0000000, 0.0000000, 0.2643000, 0.4940000, 0.6001000, 0.8585000, 0.8087000, 0.5396000, 0.9960000], [0.2921000, 0.4793000, 0.8657000, 0.0490000, 0.1675000, 0.1136000, 0.0743000, 0.3020000, 0.6975000]], [[0.0000000, 0.0000000, 0.7764000, 0.8233000, 0.5747000, 0.9685000, 0.1253000, 0.1023000, 0.2967000], [0.0950000, -0.0973000, 0.9407000, 1.5806000, 1.2141000, 0.5576000, 1.3024000, 0.6587000, 0.0669000], [1.2752500, 0.5611000, -0.2525000, 1.4032000, 0.0169000, 0.3595000, 0.1786000, 0.0467000, 0.2644000]], [[0.0000000, 0.0000000, 0.0420000, 0.6988000, 0.0538000, 0.7720000, 0.1152000, 0.9503000, 0.7973000], [0.2179000, 0.0343000, 0.4769000, 0.1456000, 0.6696000, 0.2218000, 0.8392000, 1.5832000, 0.0294000], [1.2024000, 1.0476810, 0.3426000, 0.6158000, 0.6840000, 1.0357000, 0.3279000, 0.0369000, 0.6650000]]]]

Expected (Unparsed): [[[[0,0,0.9152,0.7345,0.7757,0.3129,0.4762,0.6389,0.3431],[0,0,0.5251,0.5222,0.3766,0.0619,0.4435,0.1453,0.8323],[0.55163097,0.4661,0.5021,0.3332,0.4763,0.5302,0.4728,0.0482,0.6453]],[[0,0,0.1273,0.6581,0.5102,0.2825,0.1399,0.9467,0.6878],[0,0,0.2935,0.9999,0.3316,0.2368,0.0609,0.613,0.0621],[0.03279999999999999,0.625,0.0593,0.6694,0.9543,0.0694,0.9118,0.2286,0.8749]],[[0,0,0.551,0.8529,0.8777,0.2194,0.0038,0.7587,0.5948],[0,0,0.557,0.9209,0.3516,0.5065,0.3126,0.8345,0.1936],[0,0.4603,0.9951,0.8536,0.3756,0.8723,0.5334,0.1345,0.5491]],[[0,0,0.1761,0.8458,0.8307,0.4769,0.3954,0.6849,0.5024],[0,0,0.4487,0.0166,0.247,0.224,0.2387,0.9799,0.0026],[0.4244,0.1522,0.2831,0.2957,0.362,0.5125,0.0105,0.5945,0.8134]],[[0,0,0.6192,0.5367,0.6492,0.3331,0.2558,0.2878,0.4302],[0,0,0.9925,0.9998,0.3292,0.7048,0.0365,0.412,0.2485],[0.03664999999999999,0.9137,0.6225,0.3835,0.1506,0.1257,0.2058,0.922,0.8226]],[[0,0,0.2825,0.7762,0.1587,0.5505,0.9243,0.2408,0.711],[0,0,0.2643,0.494,0.6001,0.8585,0.8087,0.5396,0.996],[0.29209999999999997,0.4793,0.8657,0.049,0.1675,0.1136,0.0743,0.302,0.6975]],[[0,0,0.7764,0.8233,0.5747,0.9685,0.1253,0.1023,0.2967],[0.09499999999999997,-0.0973,0.9407,1.5806,1.2141,0.5576000000000001,1.3024,0.6587000000000001,0.06689999999999999],[1.27525,0.5610999999999999,-0.25249999999999995,1.4032,0.016899999999999978,0.35949999999999993,0.1786,0.04670000000000002,0.26439999999999997]],[[0,0,0.042,0.6988,0.0538,0.772,0.1152,0.9503,0.7973],[0.21789999999999993,0.0343,0.47690000000000005,0.1456,0.6696000000000001,0.22180000000000005,0.8392,1.5832000000000002,0.02939999999999998],[1.2024,1.047681,0.34259999999999996,0.6158,0.684,1.0356999999999998,0.3279,0.03689999999999993,0.665]]]]

Actual:   [[[[0, 0, 0.9152, 0.7345, 0.7757, 0.3129, 0.4762, 0.6389, 0.3431], [0, 0, 0.5251, 0.5222, 0.3766, 0.0619, 0.4435, 0.1453, 0.8323], [0.5517, 0.4661, 0.5021, 0.3332, 0.4763, 0.5302, 0.4728, 0.0482, 0.6453]], [[0, 0, 0.1273, 0.6581, 0.5102, 0.2825, 0.1399, 0.9467, 0.6878], [0, 0, 0.2935, 0.9999, 0.3316, 0.2368, 0.0609, 0.613, 0.0621], [0.0328, 0.625, 0.0593, 0.6694, 0.9543, 0.0694, 0.9118, 0.2286, 0.8749]], [[0, 0, 0.551, 0.8529, 0.8777, 0.2194, 0.0038, 0.7587, 0.5948], [0, 0, 0.557, 0.9209, 0.3516, 0.5065, 0.3126, 0.8345, 0.1936], [0, 0.4603, 0.9951, 0.8536, 0.3756, 0.8723, 0.5334, 0.1345, 0.5491]], [[0, 0, 0.1761, 0.8458, 0.8307, 0.4769, 0.3954, 0.6849, 0.5024], [0, 0, 0.4487, 0.0166, 0.247, 0.224, 0.2387, 0.9799, 0.0026], [0.4244, 0.1522, 0.2831, 0.2957, 0.362, 0.5125, 0.0105, 0.5945, 0.8134]], [[0, 0, 0.6192, 0.5367, 0.6492, 0.3331, 0.2558, 0.2878, 0.4302], [0, 0, 0.9925, 0.9998, 0.3292, 0.7048, 0.0365, 0.412, 0.2485], [0.0367, 0.9137, 0.6225, 0.3835, 0.1506, 0.1257, 0.2058, 0.922, 0.8226]], [[0, 0, 0.2825, 0.7762, 0.1587, 0.5505, 0.9243, 0.2408, 0.711], [0, 0, 0.2643, 0.494, 0.6001, 0.8585, 0.8087, 0.5396, 0.996], [0.2921, 0.4793, 0.8657, 0.049, 0.1675, 0.1136, 0.0743, 0.302, 0.6975]], [[0, 0, 0.7764, 0.8233, 0.5747, 0.9685, 0.1253, 0.1023, 0.2967], [0.095, -0.0973, 0.9407, 1.5806, 1.2141, 0.5576, 1.3024, 0.6587, 0.0669], [1.2753, 0.5611, -0.2525, 1.4032, 0.0169, 0.3595, 0.1786, 0.0467, 0.2644]], [[0, 0, 0.042, 0.6988, 0.0538, 0.772, 0.1152, 0.9503, 0.7973], [0.2179, 0.0343, 0.4769, 0.1456, 0.6696, 0.2218, 0.8392, 1.5832, 0.0294], [1.2024, 1.0477, 0.3426, 0.6158, 0.684, 1.0357, 0.3279, 0.0369, 0.665]]]]

Expected: [[[[0, 0, 0.9152, 0.7345, 0.7757, 0.3129, 0.4762, 0.6389, 0.3431], [0, 0, 0.5251, 0.5222, 0.3766, 0.0619, 0.4435, 0.1453, 0.8323], [0.5517, 0.4661, 0.5021, 0.3332, 0.4763, 0.5302, 0.4728, 0.0482, 0.6453]], [[0, 0, 0.1273, 0.6581, 0.5102, 0.2825, 0.1399, 0.9467, 0.6878], [0, 0, 0.2935, 0.9999, 0.3316, 0.2368, 0.0609, 0.613, 0.0621], [0.0328, 0.625, 0.0593, 0.6694, 0.9543, 0.0694, 0.9118, 0.2286, 0.8749]], [[0, 0, 0.551, 0.8529, 0.8777, 0.2194, 0.0038, 0.7587, 0.5948], [0, 0, 0.557, 0.9209, 0.3516, 0.5065, 0.3126, 0.8345, 0.1936], [0, 0.4603, 0.9951, 0.8536, 0.3756, 0.8723, 0.5334, 0.1345, 0.5491]], [[0, 0, 0.1761, 0.8458, 0.8307, 0.4769, 0.3954, 0.6849, 0.5024], [0, 0, 0.4487, 0.0166, 0.247, 0.224, 0.2387, 0.9799, 0.0026], [0.4244, 0.1522, 0.2831, 0.2957, 0.362, 0.5125, 0.0105, 0.5945, 0.8134]], [[0, 0, 0.6192, 0.5367, 0.6492, 0.3331, 0.2558, 0.2878, 0.4302], [0, 0, 0.9925, 0.9998, 0.3292, 0.7048, 0.0365, 0.412, 0.2485], [0.0367, 0.9137, 0.6225, 0.3835, 0.1506, 0.1257, 0.2058, 0.922, 0.8226]], [[0, 0, 0.2825, 0.7762, 0.1587, 0.5505, 0.9243, 0.2408, 0.711], [0, 0, 0.2643, 0.494, 0.6001, 0.8585, 0.8087, 0.5396, 0.996], [0.2921, 0.4793, 0.8657, 0.049, 0.1675, 0.1136, 0.0743, 0.302, 0.6975]], [[0, 0, 0.7764, 0.8233, 0.5747, 0.9685, 0.1253, 0.1023, 0.2967], [0.095, -0.0973, 0.9407, 1.5806, 1.2141, 0.5577, 1.3024, 0.6588, 0.0669], [1.2753, 0.5611, -0.2524, 1.4032, 0.0169, 0.3595, 0.1786, 0.0468, 0.2644]], [[0, 0, 0.042, 0.6988, 0.0538, 0.772, 0.1152, 0.9503, 0.7973], [0.2179, 0.0343, 0.477, 0.1456, 0.6697, 0.2219, 0.8392, 1.5833, 0.0294], [1.2024, 1.0477, 0.3426, 0.6158, 0.684, 1.0357, 0.3279, 0.0369, 0.665]]]]