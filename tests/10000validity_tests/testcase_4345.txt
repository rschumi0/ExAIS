import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Max63349 = tf.keras.layers.Input(shape=([1, 1, 1]))
in1Max63349 = tf.keras.layers.Input(shape=([1, 1, 1]))
in0Con6103 = tf.keras.layers.Input(shape=([2, 2, 3, 3]))
in0Max62581 = tf.keras.layers.Input(shape=([2, 2]))
in1Max62581 = tf.keras.layers.Input(shape=([2, 2]))
in0Con57875 = tf.keras.layers.Input(shape=([2, 2, 3, 3]))
in0Max37698 = tf.keras.layers.Input(shape=([2, 2, 2, 2]))
in1Max37698 = tf.keras.layers.Input(shape=([2, 2, 2, 2]))

Max63349 = keras.layers.Maximum(name = 'Max63349', )([in0Max63349,in1Max63349])
Res82324 = keras.layers.Reshape((1, 1, 1, 1), name = 'Res82324', )(Max63349)
Zer80382 = keras.layers.ZeroPadding3D(padding=((1, 0), (1, 0), (2, 0)), name = 'Zer80382', )(Res82324)
Con6103 = keras.layers.Concatenate(axis=4, name = 'Con6103', )([Zer80382,in0Con6103])
Max62581 = keras.layers.Maximum(name = 'Max62581', )([in0Max62581,in1Max62581])
Res44874 = keras.layers.Reshape((2, 2, 1), name = 'Res44874', )(Max62581)
Res33472 = keras.layers.Reshape((2, 2, 1, 1), name = 'Res33472', )(Res44874)
Zer55463 = keras.layers.ZeroPadding3D(padding=((0, 0), (0, 0), (2, 0)), name = 'Zer55463', )(Res33472)
Con57875 = keras.layers.Concatenate(axis=4, name = 'Con57875', )([Zer55463,in0Con57875])
Max37698 = keras.layers.Maximum(name = 'Max37698', )([in0Max37698,in1Max37698])
Con72124 = keras.layers.Conv3DTranspose(4, (1, 1, 2),strides=(1, 1, 1), padding='valid', name = 'Con72124', )(Max37698)
Min89804 = keras.layers.Minimum(name = 'Min89804', )([Con57875,Con72124])
Min80600 = keras.layers.Minimum(name = 'Min80600', )([Con6103,Min89804])
model = tf.keras.models.Model(inputs=[in0Max63349,in1Max63349,in0Con6103,in0Max62581,in1Max62581,in0Con57875,in0Max37698,in1Max37698], outputs=Min80600)
w = model.get_layer('Con72124').get_weights() 
w[0] = np.array([[[[[0.4726, 0.2836], [0.4685, 0.8788], [0.0026, 0.9743], [0.1605, 0.189]], [[0.6572, 0.2594], [0.7529, 0.4425], [0.2482, 0.5269], [0.0052, 0.696]]]]])
w[1] = np.array([0, 0, 0, 0])
model.get_layer('Con72124').set_weights(w) 
in0Max63349 = tf.constant([[[[0.1758]]]])
in1Max63349 = tf.constant([[[[0.3681]]]])
in0Con6103 = tf.constant([[[[[0.5258, 0.5076, 0.0044], [0.6599, 0.6182, 0.3893], [0.6611, 0.8865, 0.9572]], [[0.748, 0.3897, 0.9628], [0.8329, 0.6294, 0.0369], [0.609, 0.7344, 0.4117]]], [[[0.2445, 0.9863, 0.384], [0.5206, 0.2386, 0.2665], [0.6853, 0.9599, 0.8312]], [[0.9222, 0.2946, 0.0021], [0.4869, 0.3541, 0.4696], [0.651, 0.2061, 0.8194]]]]])
in0Max62581 = tf.constant([[[0.2439, 0.7957], [0.6562, 0.6969]]])
in1Max62581 = tf.constant([[[0.3972, 0.0368], [0.6553, 0.6753]]])
in0Con57875 = tf.constant([[[[[0.6252, 0.9207, 0.2823], [0.0871, 0.7428, 0.0314], [0.3723, 0.0533, 0.2965]], [[0.2988, 0.1253, 0.4549], [0.6134, 0.8045, 0.3272], [0.9609, 0.5868, 0.886]]], [[[0.6163, 0.4579, 0.9541], [0.8646, 0.2514, 0.5523], [0.8801, 0.8497, 0.5757]], [[0.8563, 0.1885, 0.7457], [0.587, 0.4571, 0.667], [0.3957, 0.1218, 0.4172]]]]])
in0Max37698 = tf.constant([[[[[0.7836, 0.8516], [0.4249, 0.0741]], [[0.9803, 0.5868], [0.9236, 0.4042]]], [[[0.2857, 0.5455], [0.6433, 0.3189]], [[0.2427, 0.6132], [0.3207, 0.292]]]]])
in1Max37698 = tf.constant([[[[[0.0096, 0.1878], [0.4271, 0.3974]], [[0.0823, 0.7327], [0.7142, 0.2239]]], [[[0.2125, 0.5531], [0.6432, 0.5743]], [[0.3649, 0.5939], [0.2174, 0.6168]]]]])
print (np.array2string(model.predict([in0Max63349,in1Max63349,in0Con6103,in0Max62581,in1Max62581,in0Con57875,in0Max37698,in1Max37698],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Min80600.png')

LMax63349 = maximum_layer([[[[[0.1758]]]], [[[[0.3681]]]]], Max63349), 
LRes82324 = reshape_layer(Max63349, [1, 1, 1, 1], Res82324), 
LZer80382 = zero_padding3D_layer(Res82324, 1, 0, 1, 0, 2, 0, Zer80382), 
LCon6103 = concatenate_layer([Zer80382,[[[[[0.5258, 0.5076, 0.0044], [0.6599, 0.6182, 0.3893], [0.6611, 0.8865, 0.9572]], [[0.748, 0.3897, 0.9628], [0.8329, 0.6294, 0.0369], [0.609, 0.7344, 0.4117]]], [[[0.2445, 0.9863, 0.384], [0.5206, 0.2386, 0.2665], [0.6853, 0.9599, 0.8312]], [[0.9222, 0.2946, 0.0021], [0.4869, 0.3541, 0.4696], [0.651, 0.2061, 0.8194]]]]]], 4, Con6103), 
LMax62581 = maximum_layer([[[[0.2439, 0.7957], [0.6562, 0.6969]]], [[[0.3972, 0.0368], [0.6553, 0.6753]]]], Max62581), 
LRes44874 = reshape_layer(Max62581, [2, 2, 1], Res44874), 
LRes33472 = reshape_layer(Res44874, [2, 2, 1, 1], Res33472), 
LZer55463 = zero_padding3D_layer(Res33472, 0, 0, 0, 0, 2, 0, Zer55463), 
LCon57875 = concatenate_layer([Zer55463,[[[[[0.6252, 0.9207, 0.2823], [0.0871, 0.7428, 0.0314], [0.3723, 0.0533, 0.2965]], [[0.2988, 0.1253, 0.4549], [0.6134, 0.8045, 0.3272], [0.9609, 0.5868, 0.886]]], [[[0.6163, 0.4579, 0.9541], [0.8646, 0.2514, 0.5523], [0.8801, 0.8497, 0.5757]], [[0.8563, 0.1885, 0.7457], [0.587, 0.4571, 0.667], [0.3957, 0.1218, 0.4172]]]]]], 4, Con57875), 
LMax37698 = maximum_layer([[[[[[0.7836, 0.8516], [0.4249, 0.0741]], [[0.9803, 0.5868], [0.9236, 0.4042]]], [[[0.2857, 0.5455], [0.6433, 0.3189]], [[0.2427, 0.6132], [0.3207, 0.292]]]]], [[[[[0.0096, 0.1878], [0.4271, 0.3974]], [[0.0823, 0.7327], [0.7142, 0.2239]]], [[[0.2125, 0.5531], [0.6432, 0.5743]], [[0.3649, 0.5939], [0.2174, 0.6168]]]]]], Max37698), 
LCon72124 = conv3D_transpose_layer(Max37698, 1, 1, 2,[[[[[0.4726, 0.2836], [0.4685, 0.8788], [0.0026, 0.9743], [0.1605, 0.189]], [[0.6572, 0.2594], [0.7529, 0.4425], [0.2482, 0.5269], [0.0052, 0.696]]]]],[0, 0, 0, 0], 1, 1, 1, false, Con72124), 
LMin89804 = minimum_layer([Con57875,Con72124], Min89804), 
LMin80600 = minimum_layer([Con6103,Min89804], Min80600), 
exec_layers([LMax63349,LRes82324,LZer80382,LCon6103,LMax62581,LRes44874,LRes33472,LZer55463,LCon57875,LMax37698,LCon72124,LMin89804,LMin80600],["Max63349","Res82324","Zer80382","Con6103","Max62581","Res44874","Res33472","Zer55463","Con57875","Max37698","Con72124","Min89804","Min80600"],Min80600,"Min80600")

Actual (Unparsed): [[[[[0.0000000, 0.5258000, 0.5076000, 0.0044000], [0.0000000, 0.0871000, 0.6182000, 0.0314000], [0.0000000, 0.3723000, 0.0533000, 0.2788113]], [[0.0000000, 0.2988000, 0.1253000, 0.2958184], [0.0000000, 0.6134000, 0.6294000, 0.0369000], [0.0000000, 0.6090000, 0.4422105, 0.2861259]]], [[[0.0000000, 0.2445000, 0.4579000, 0.1503907], [0.0000000, 0.5206000, 0.2386000, 0.2665000], [0.0000000, 0.6853000, 0.4622657, 0.4030580]], [[0.0000000, 0.7098358, 0.1885000, 0.0021000], [0.0000000, 0.4869000, 0.3541000, 0.4696000], [0.3681000, 0.3957000, 0.1218000, 0.4172000]]]]]

Expected (Unparsed): [[[[[0,0.5258,0.5076,0.0044],[0,0.0871,0.6182,0.0314],[0,0.3723,0.0533,0.27881132]],[[0,0.2988,0.1253,0.29581844999999996],[0,0.6134,0.6294,0.0369],[0,0.609,0.4422105,0.28612592]]],[[[0,0.2445,0.4579,0.15039075000000002],[0,0.5206,0.2386,0.2665],[0,0.6853,0.46226573000000004,0.40305796]],[[0,0.70983581,0.1885,0.0021],[0,0.4869,0.3541,0.4696],[0.3681,0.3957,0.1218,0.4172]]]]]

Actual:   [[[[[0, 0.5258, 0.5076, 0.0044], [0, 0.0871, 0.6182, 0.0314], [0, 0.3723, 0.0533, 0.2789]], [[0, 0.2988, 0.1253, 0.2959], [0, 0.6134, 0.6294, 0.0369], [0, 0.609, 0.4423, 0.2862]]], [[[0, 0.2445, 0.4579, 0.1504], [0, 0.5206, 0.2386, 0.2665], [0, 0.6853, 0.4623, 0.4031]], [[0, 0.7099, 0.1885, 0.0021], [0, 0.4869, 0.3541, 0.4696], [0.3681, 0.3957, 0.1218, 0.4172]]]]]

Expected: [[[[[0, 0.5258, 0.5076, 0.0044], [0, 0.0871, 0.6182, 0.0314], [0, 0.3723, 0.0533, 0.2789]], [[0, 0.2988, 0.1253, 0.2959], [0, 0.6134, 0.6294, 0.0369], [0, 0.609, 0.4423, 0.2862]]], [[[0, 0.2445, 0.4579, 0.1504], [0, 0.5206, 0.2386, 0.2665], [0, 0.6853, 0.4623, 0.4031]], [[0, 0.7099, 0.1885, 0.0021], [0, 0.4869, 0.3541, 0.4696], [0.3681, 0.3957, 0.1218, 0.4172]]]]]