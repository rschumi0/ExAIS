import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Sof34708 = tf.keras.layers.Input(shape=([1, 2, 1, 2]))
in0Add85022 = tf.keras.layers.Input(shape=([1, 1, 1]))
in1Add85022 = tf.keras.layers.Input(shape=([1, 1, 1]))
in0Con15151 = tf.keras.layers.Input(shape=([2]))
in0Lay70952 = tf.keras.layers.Input(shape=([1]))

Sof34708 = keras.layers.Softmax(axis=1, name = 'Sof34708', input_shape=(1, 2, 1, 2))(in0Sof34708)
Glo21551 = keras.layers.GlobalAveragePooling3D(name = 'Glo21551', )(Sof34708)
Res30382 = keras.layers.Reshape((2, 1), name = 'Res30382', )(Glo21551)
Add85022 = keras.layers.Add(name = 'Add85022', )([in0Add85022,in1Add85022])
Res4991 = keras.layers.Reshape((1, 1), name = 'Res4991', )(Add85022)
Fla78809 = keras.layers.Flatten(name = 'Fla78809', )(Res4991)
Con15151 = keras.layers.Concatenate(axis=1, name = 'Con15151', )([Fla78809,in0Con15151])
Lay70952 = keras.layers.LayerNormalization(axis=1, epsilon=2.2424572077506637, name = 'Lay70952', )(in0Lay70952)
Res9674 = keras.layers.Reshape((1, 1), name = 'Res9674', )(Lay70952)
Sim92625 = keras.layers.SimpleRNN(3,name = 'Sim92625', )(Res9674)
Ave5898 = keras.layers.Average(name = 'Ave5898', )([Con15151,Sim92625])
Res11631 = keras.layers.Reshape((3, 1), name = 'Res11631', )(Ave5898)
Cro65560 = keras.layers.Cropping1D(cropping=((1, 1)), name = 'Cro65560', )(Res11631)
Zer54893 = keras.layers.ZeroPadding1D(padding=((1, 0)), name = 'Zer54893', )(Cro65560)
Add92575 = keras.layers.Add(name = 'Add92575', )([Res30382,Zer54893])
model = tf.keras.models.Model(inputs=[in0Sof34708,in0Add85022,in1Add85022,in0Con15151,in0Lay70952], outputs=Add92575)
w = model.get_layer('Sim92625').get_weights() 
w[0] = np.array([[9, 2, 6]])
w[1] = np.array([[3, 8, 5], [9, 8, 5], [8, 1, 8]])
w[2] = np.array([8, 9, 5])
model.get_layer('Sim92625').set_weights(w) 
in0Sof34708 = tf.constant([[[[[0.0751, 0.7355]], [[0.7591, 0.0285]]]]])
in0Add85022 = tf.constant([[[[0.5023]]]])
in1Add85022 = tf.constant([[[[0.7579]]]])
in0Con15151 = tf.constant([[0.5453, 0.2917]])
in0Lay70952 = tf.constant([[1.5881]])
print (np.array2string(model.predict([in0Sof34708,in0Add85022,in1Add85022,in0Con15151,in0Lay70952],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Add92575.png')

LSof34708 = softmax_layer([[[[[0.0751, 0.7355]], [[0.7591, 0.0285]]]]], 1, Sof34708), 
LGlo21551 = global_average_pooling3D_layer(Sof34708, Glo21551), 
LRes30382 = reshape_layer(Glo21551, [2, 1], Res30382), 
LAdd85022 = add_layer([[[[[0.5023]]]], [[[[0.7579]]]]], Add85022), 
LRes4991 = reshape_layer(Add85022, [1, 1], Res4991), 
LFla78809 = flatten_layer(Res4991, Fla78809), 
LCon15151 = concatenate_layer([Fla78809,[[0.5453, 0.2917]]], 1, Con15151), 
LLay70952 = layer_normalization_layer([[1.5881]], 1, 2.2424572077506637, Lay70952), 
LRes9674 = reshape_layer(Lay70952, [1, 1], Res9674), 
LSim92625 = simple_rnn_layer(Res9674,[[9, 2, 6]],[[3, 8, 5], [9, 8, 5], [8, 1, 8]],[8, 9, 5], Sim92625), 
LAve5898 = average_layer([Con15151,Sim92625], Ave5898), 
LRes11631 = reshape_layer(Ave5898, [3, 1], Res11631), 
LCro65560 = cropping1D_layer(Res11631, 1, 1, Cro65560), 
LZer54893 = zero_padding1D_layer(Cro65560, 1, 0, Zer54893), 
LAdd92575 = add_layer([Res30382,Zer54893], Add92575), 
exec_layers([LSof34708,LGlo21551,LRes30382,LAdd85022,LRes4991,LFla78809,LCon15151,LLay70952,LRes9674,LSim92625,LAve5898,LRes11631,LCro65560,LZer54893,LAdd92575],["Sof34708","Glo21551","Res30382","Add85022","Res4991","Fla78809","Con15151","Lay70952","Res9674","Sim92625","Ave5898","Res11631","Cro65560","Zer54893","Add92575"],Add92575,"Add92575")

Actual (Unparsed): [[[1.0000000], [1.7726500]]]

Expected (Unparsed): [[[1.0],[1.7726499847700206]]]

Actual:   [[[1], [1.7727]]]

Expected: [[[1], [1.7727]]]