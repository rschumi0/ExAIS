import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Glo8135 = tf.keras.layers.Input(shape=([1, 2, 1, 1]))

Glo8135 = keras.layers.GlobalAveragePooling3D(name = 'Glo8135', )(in0Glo8135)
Res29648 = keras.layers.Reshape((1, 1), name = 'Res29648', )(Glo8135)
Res66336 = keras.layers.Reshape((1, 1, 1), name = 'Res66336', )(Res29648)
Zer86398 = keras.layers.ZeroPadding2D(padding=((1, 1), (1, 1)), name = 'Zer86398', )(Res66336)
Lay88527 = keras.layers.LayerNormalization(axis=1, epsilon=1.3508146361561972, name = 'Lay88527', )(Zer86398)
model = tf.keras.models.Model(inputs=[in0Glo8135], outputs=Lay88527)
in0Glo8135 = tf.constant([[[[[1.3147]], [[1.8513]]]]])
print (np.array2string(model.predict([in0Glo8135],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Lay88527.png')

LGlo8135 = global_average_pooling3D_layer([[[[[1.3147]], [[1.8513]]]]], Glo8135), 
LRes29648 = reshape_layer(Glo8135, [1, 1], Res29648), 
LRes66336 = reshape_layer(Res29648, [1, 1, 1], Res66336), 
LZer86398 = zero_padding2D_layer(Res66336, 1, 1, 1, 1, Zer86398), 
LLay88527 = layer_normalization_layer(Zer86398, 1, 1.3508146361561972, Lay88527), 
exec_layers([LGlo8135,LRes29648,LRes66336,LZer86398,LLay88527],["Glo8135","Res29648","Res66336","Zer86398","Lay88527"],Lay88527,"Lay88527")

Actual (Unparsed): [[[[0.0000000], [-0.3820384], [0.0000000]], [[0.0000000], [0.7640768], [0.0000000]], [[0.0000000], [-0.3820384], [0.0000000]]]]

Expected (Unparsed): [[[[0.0],[-0.3820384081289304],[0.0]],[[0.0],[0.7640768162578611],[0.0]],[[0.0],[-0.3820384081289304],[0.0]]]]

Actual:   [[[[0], [-0.382], [0]], [[0], [0.7641], [0]], [[0], [-0.382], [0]]]]

Expected: [[[[0], [-0.382], [0]], [[0], [0.7641], [0]], [[0], [-0.382], [0]]]]