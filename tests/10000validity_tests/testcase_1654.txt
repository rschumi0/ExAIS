import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Thr33805 = tf.keras.layers.Input(shape=([1, 2, 2, 1]))
in0Mul13408 = tf.keras.layers.Input(shape=([1, 1]))
in1Mul13408 = tf.keras.layers.Input(shape=([1, 1]))
in0Con26890 = tf.keras.layers.Input(shape=([1, 3]))

Thr33805 = keras.layers.ThresholdedReLU(theta=6.517469202783451, name = 'Thr33805', input_shape=(1, 2, 2, 1))(in0Thr33805)
Res70543 = keras.layers.Reshape((1, 2, 2), name = 'Res70543', )(Thr33805)
Res54022 = keras.layers.Reshape((1, 4), name = 'Res54022', )(Res70543)
Mul13408 = keras.layers.Multiply(name = 'Mul13408', )([in0Mul13408,in1Mul13408])
Con26890 = keras.layers.Concatenate(axis=2, name = 'Con26890', )([Mul13408,in0Con26890])
Min32121 = keras.layers.Minimum(name = 'Min32121', )([Res54022,Con26890])
Sep14839 = keras.layers.SeparableConv1D(2, (1),strides=(1), padding='same', name = 'Sep14839', )(Min32121)
Res85467 = keras.layers.Reshape((1, 2, 1), name = 'Res85467', )(Sep14839)
Up_24867 = keras.layers.UpSampling2D(size=(2, 1), name = 'Up_24867', )(Res85467)
model = tf.keras.models.Model(inputs=[in0Thr33805,in0Mul13408,in1Mul13408,in0Con26890], outputs=Up_24867)
w = model.get_layer('Sep14839').get_weights() 
w[0] = np.array([[[0.7573], [0.6676], [0.2328], [0.3188]]])
w[1] = np.array([[[0.2231, 0.2087], [0.8475, 0.9621], [0.3399, 0.0755], [0.2597, 0.1053]]])
w[2] = np.array([0, 0])
model.get_layer('Sep14839').set_weights(w) 
in0Thr33805 = tf.constant([[[[[0.4215], [0.1186]], [[0.6315], [0.0103]]]]])
in0Mul13408 = tf.constant([[[0.6929]]])
in1Mul13408 = tf.constant([[[0.2557]]])
in0Con26890 = tf.constant([[[0.5854, 0.2801, 0.0074]]])
print (np.array2string(model.predict([in0Thr33805,in0Mul13408,in1Mul13408,in0Con26890],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Up_24867.png')

LThr33805 = thresholded_relu_layer([[[[[0.4215], [0.1186]], [[0.6315], [0.0103]]]]], 6.517469202783451, Thr33805), 
LRes70543 = reshape_layer(Thr33805, [1, 2, 2], Res70543), 
LRes54022 = reshape_layer(Res70543, [1, 4], Res54022), 
LMul13408 = multiply_layer([[[[0.6929]]], [[[0.2557]]]], Mul13408), 
LCon26890 = concatenate_layer([Mul13408,[[[0.5854, 0.2801, 0.0074]]]], 2, Con26890), 
LMin32121 = minimum_layer([Res54022,Con26890], Min32121), 
LSep14839 = separable_conv1D_layer(Min32121, 1,[[[[0.7573], [0.6676], [0.2328], [0.3188]]],[[[0.2231, 0.2087], [0.8475, 0.9621], [0.3399, 0.0755], [0.2597, 0.1053]]]],[0, 0], 1, true, Sep14839), 
LRes85467 = reshape_layer(Sep14839, [1, 2, 1], Res85467), 
LUp_24867 = up_sampling2D_layer(Res85467, 2, 1, Up_24867), 
exec_layers([LThr33805,LRes70543,LRes54022,LMul13408,LCon26890,LMin32121,LSep14839,LRes85467,LUp_24867],["Thr33805","Res70543","Res54022","Mul13408","Con26890","Min32121","Sep14839","Res85467","Up_24867"],Up_24867,"Up_24867")

Actual (Unparsed): [[[[0.0000000], [0.0000000]], [[0.0000000], [0.0000000]]]]

Expected (Unparsed): [[[[0.0],[0.0]],[[0.0],[0.0]]]]

Actual:   [[[[0], [0]], [[0], [0]]]]

Expected: [[[[0], [0]], [[0], [0]]]]