import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Ave3984 = tf.keras.layers.Input(shape=([2, 2, 1]))
in1Ave3984 = tf.keras.layers.Input(shape=([2, 2, 1]))
in0Con48437 = tf.keras.layers.Input(shape=([3, 10]))
in0Sub32496 = tf.keras.layers.Input(shape=([3, 3, 2, 2]))
in1Sub32496 = tf.keras.layers.Input(shape=([3, 3, 2, 2]))
in0Dep90628 = tf.keras.layers.Input(shape=([2, 2, 2]))
in0Con38315 = tf.keras.layers.Input(shape=([3, 3, 2]))
in0Dot43714 = tf.keras.layers.Input(shape=([3, 2]))
in1Dot43714 = tf.keras.layers.Input(shape=([3, 2]))
in0Con85365 = tf.keras.layers.Input(shape=([3, 10]))

Ave3984 = keras.layers.Average(name = 'Ave3984', )([in0Ave3984,in1Ave3984])
Res23436 = keras.layers.Reshape((2, 2), name = 'Res23436', )(Ave3984)
Zer50227 = keras.layers.ZeroPadding1D(padding=((1, 0)), name = 'Zer50227', )(Res23436)
Con48437 = keras.layers.Concatenate(axis=2, name = 'Con48437', )([Zer50227,in0Con48437])
Sub32496 = keras.layers.Subtract(name = 'Sub32496', )([in0Sub32496,in1Sub32496])
Res8471 = keras.layers.Reshape((3, 3, 4), name = 'Res8471', )(Sub32496)
Dep90628 = keras.layers.DepthwiseConv2D((2, 1),strides=(1, 1), padding='valid', name = 'Dep90628', )(in0Dep90628)
Zer18743 = keras.layers.ZeroPadding2D(padding=((2, 0), (1, 0)), name = 'Zer18743', )(Dep90628)
Con38315 = keras.layers.Concatenate(axis=3, name = 'Con38315', )([Zer18743,in0Con38315])
Ave15621 = keras.layers.Average(name = 'Ave15621', )([Res8471,Con38315])
Res9733 = keras.layers.Reshape((3, 12), name = 'Res9733', )(Ave15621)
Dot43714 = keras.layers.Dot(axes=(1, 1), name = 'Dot43714', )([in0Dot43714,in1Dot43714])
Zer74213 = keras.layers.ZeroPadding1D(padding=((1, 0)), name = 'Zer74213', )(Dot43714)
Con85365 = keras.layers.Concatenate(axis=2, name = 'Con85365', )([Zer74213,in0Con85365])
Mul19081 = keras.layers.Multiply(name = 'Mul19081', )([Res9733,Con85365])
Min67612 = keras.layers.Minimum(name = 'Min67612', )([Con48437,Mul19081])
model = tf.keras.models.Model(inputs=[in0Ave3984,in1Ave3984,in0Con48437,in0Sub32496,in1Sub32496,in0Dep90628,in0Con38315,in0Dot43714,in1Dot43714,in0Con85365], outputs=Min67612)
w = model.get_layer('Dep90628').get_weights() 
w[0] = np.array([[[[0.3362], [0.6828]]], [[[0.5734], [0.0977]]]])
w[1] = np.array([0, 0])
model.get_layer('Dep90628').set_weights(w) 
in0Ave3984 = tf.constant([[[[0.3551], [0.1117]], [[0.2325], [0.7223]]]])
in1Ave3984 = tf.constant([[[[0.4998], [0.8782]], [[0.5086], [0.8749]]]])
in0Con48437 = tf.constant([[[0.5736, 0.6632, 0.2899, 0.0451, 0.916, 0.8517, 0.7684, 0.7266, 0.3261, 0.1774], [0.415, 0.1547, 0.8695, 0.573, 0.2558, 0.2479, 0.1042, 0.2733, 0.7146, 0.3757], [0.6237, 0.1718, 0.2478, 0.9006, 0.6063, 0.1727, 0.7874, 0.6007, 0.4077, 0.0924]]])
in0Sub32496 = tf.constant([[[[[0.6659, 0.1435], [0.7262, 0.1091]], [[0.4881, 0.8557], [0.0056, 0.5404]], [[0.3386, 0.4136], [0.6488, 0.88]]], [[[0.0381, 0.0394], [0.0725, 0.2218]], [[0.14, 0.9745], [0.1032, 0.9418]], [[0.5976, 0.9295], [0.5327, 0.8774]]], [[[0.1189, 0.3188], [0.0965, 0.4403]], [[0.8022, 0.9461], [0.5882, 0.3471]], [[0.7032, 0.9714], [0.6497, 0.2036]]]]])
in1Sub32496 = tf.constant([[[[[0.8347, 0.1862], [0.8883, 0.268]], [[0.7211, 0.8505], [0.3646, 0.3348]], [[0.0399, 0.6069], [0.1656, 0.831]]], [[[0.0706, 0.2728], [0.7329, 0.8983]], [[0.6407, 0.6367], [0.8518, 0.4439]], [[0.0083, 0.7351], [0.7224, 0.8893]]], [[[0.6561, 0.4709], [0.3316, 0.6177]], [[0.2817, 0.8491], [0.4263, 0.9284]], [[0.3658, 0.5532], [0.7452, 0.6426]]]]])
in0Dep90628 = tf.constant([[[[0.5764, 0.0593], [0.81, 0.3731]], [[0.9211, 0.9996], [0.5008, 0.8702]]]])
in0Con38315 = tf.constant([[[[0.9933, 0.3978], [0.4472, 0.5485], [0.9846, 0.8577]], [[0.202, 0.1017], [0.9382, 0.1552], [0.2218, 0.07]], [[0.1377, 0.1675], [0.2699, 0.0795], [0.2035, 0.1553]]]])
in0Dot43714 = tf.constant([[[0.0025, 0.0219], [0.8406, 0.7869], [0.9485, 0.9655]]])
in1Dot43714 = tf.constant([[[0.9053, 0.6674], [0.5903, 0.7756], [0.5346, 0.9579]]])
in0Con85365 = tf.constant([[[0.4144, 0.5527, 0.333, 0.2086, 0.6971, 0.3775, 0.8338, 0.8208, 0.2769, 0.5513], [0.5014, 0.5478, 0.4047, 0.9879, 0.3915, 0.856, 0.87, 0.1693, 0.5608, 0.1268], [0.0358, 0.5688, 0.8312, 0.9841, 0.877, 0.3072, 0.6244, 0.1698, 0.4725, 0.5446]]])
print (np.array2string(model.predict([in0Ave3984,in1Ave3984,in0Con48437,in0Sub32496,in1Sub32496,in0Dep90628,in0Con38315,in0Dot43714,in1Dot43714,in0Con85365],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Min67612.png')

LAve3984 = average_layer([[[[[0.3551], [0.1117]], [[0.2325], [0.7223]]]], [[[[0.4998], [0.8782]], [[0.5086], [0.8749]]]]], Ave3984), 
LRes23436 = reshape_layer(Ave3984, [2, 2], Res23436), 
LZer50227 = zero_padding1D_layer(Res23436, 1, 0, Zer50227), 
LCon48437 = concatenate_layer([Zer50227,[[[0.5736, 0.6632, 0.2899, 0.0451, 0.916, 0.8517, 0.7684, 0.7266, 0.3261, 0.1774], [0.415, 0.1547, 0.8695, 0.573, 0.2558, 0.2479, 0.1042, 0.2733, 0.7146, 0.3757], [0.6237, 0.1718, 0.2478, 0.9006, 0.6063, 0.1727, 0.7874, 0.6007, 0.4077, 0.0924]]]], 2, Con48437), 
LSub32496 = subtract_layer([[[[[0.6659, 0.1435], [0.7262, 0.1091]], [[0.4881, 0.8557], [0.0056, 0.5404]], [[0.3386, 0.4136], [0.6488, 0.88]]], [[[0.0381, 0.0394], [0.0725, 0.2218]], [[0.14, 0.9745], [0.1032, 0.9418]], [[0.5976, 0.9295], [0.5327, 0.8774]]], [[[0.1189, 0.3188], [0.0965, 0.4403]], [[0.8022, 0.9461], [0.5882, 0.3471]], [[0.7032, 0.9714], [0.6497, 0.2036]]]]], [[[[[0.8347, 0.1862], [0.8883, 0.268]], [[0.7211, 0.8505], [0.3646, 0.3348]], [[0.0399, 0.6069], [0.1656, 0.831]]], [[[0.0706, 0.2728], [0.7329, 0.8983]], [[0.6407, 0.6367], [0.8518, 0.4439]], [[0.0083, 0.7351], [0.7224, 0.8893]]], [[[0.6561, 0.4709], [0.3316, 0.6177]], [[0.2817, 0.8491], [0.4263, 0.9284]], [[0.3658, 0.5532], [0.7452, 0.6426]]]]], Sub32496), 
LRes8471 = reshape_layer(Sub32496, [3, 3, 4], Res8471), 
LDep90628 = depthwise_conv2D_layer([[[[0.5764, 0.0593], [0.81, 0.3731]], [[0.9211, 0.9996], [0.5008, 0.8702]]]], 2, 1,[[[[0.3362], [0.6828]]], [[[0.5734], [0.0977]]]],[0, 0], 1, 1, false, Dep90628), 
LZer18743 = zero_padding2D_layer(Dep90628, 2, 0, 1, 0, Zer18743), 
LCon38315 = concatenate_layer([Zer18743,[[[[0.9933, 0.3978], [0.4472, 0.5485], [0.9846, 0.8577]], [[0.202, 0.1017], [0.9382, 0.1552], [0.2218, 0.07]], [[0.1377, 0.1675], [0.2699, 0.0795], [0.2035, 0.1553]]]]], 3, Con38315), 
LAve15621 = average_layer([Res8471,Con38315], Ave15621), 
LRes9733 = reshape_layer(Ave15621, [3, 12], Res9733), 
LDot43714 = dot_layer([[[0.0025, 0.0219], [0.8406, 0.7869], [0.9485, 0.9655]]], [[[0.9053, 0.6674], [0.5903, 0.7756], [0.5346, 0.9579]]], 1, 1, Dot43714), 
LZer74213 = zero_padding1D_layer(Dot43714, 1, 0, Zer74213), 
LCon85365 = concatenate_layer([Zer74213,[[[0.4144, 0.5527, 0.333, 0.2086, 0.6971, 0.3775, 0.8338, 0.8208, 0.2769, 0.5513], [0.5014, 0.5478, 0.4047, 0.9879, 0.3915, 0.856, 0.87, 0.1693, 0.5608, 0.1268], [0.0358, 0.5688, 0.8312, 0.9841, 0.877, 0.3072, 0.6244, 0.1698, 0.4725, 0.5446]]]], 2, Con85365), 
LMul19081 = multiply_layer([Res9733,Con85365], Mul19081), 
LMin67612 = minimum_layer([Con48437,Mul19081], Min67612), 
exec_layers([LAve3984,LRes23436,LZer50227,LCon48437,LSub32496,LRes8471,LDep90628,LZer18743,LCon38315,LAve15621,LRes9733,LDot43714,LZer74213,LCon85365,LMul19081,LMin67612],["Ave3984","Res23436","Zer50227","Con48437","Sub32496","Res8471","Dep90628","Zer18743","Con38315","Ave15621","Res9733","Dot43714","Zer74213","Con85365","Mul19081","Min67612"],Min67612,"Min67612")

Actual (Unparsed): [[[-0.0000000, -0.0000000, 0.1722246, 0.0660200, -0.0387945, 0.0005424, 0.0307421, 0.1423364, 0.1245280, -0.0793303, 0.2032169, 0.1774000], [-0.0163400, -0.1823094, -0.1149209, -0.1574377, -0.1013166, 0.1668563, 0.0371142, 0.2479000, 0.1042000, 0.0164560, 0.0090008, 0.0036835], [-0.2687315, -0.1178614, -0.0017435, -0.0028156, 0.2478000, 0.1157060, 0.1893443, -0.0770765, 0.2800062, 0.0643518, 0.0255150, -0.0772515]]]

Expected (Unparsed): [[[0,0,0.17222463999999998,0.06602001499999999,-0.0387945,0.0005423599999999981,0.030742110000000003,0.142336375,0.12452803000000001,-0.07933031999999998,0.20321690999999997,0.1774],[-0.016339984862499997,-0.18230944136699997,-0.11492087999999999,-0.15743771999999998,-0.10131664500000001,0.16685631,0.0371142,0.2479,0.1042,0.016455960000000002,0.009000839999999974,0.003683539999999999],[-0.268731463584,-0.11786138880750002,-0.0017434600000000003,-0.0028155599999999978,0.2478,0.11570602986800003,0.18934429999999997,-0.07707647999999998,0.280006160784,0.06435175657799999,0.025515000000000013,-0.07725150999999998]]]

Actual:   [[[-0, -0, 0.1723, 0.0661, -0.0387, 0.0006, 0.0308, 0.1424, 0.1246, -0.0793, 0.2033, 0.1774], [-0.0163, -0.1823, -0.1149, -0.1574, -0.1013, 0.1669, 0.0372, 0.2479, 0.1042, 0.0165, 0.0091, 0.0037], [-0.2687, -0.1178, -0.0017, -0.0028, 0.2478, 0.1158, 0.1894, -0.077, 0.2801, 0.0644, 0.0256, -0.0772]]]

Expected: [[[0, 0, 0.1723, 0.0661, -0.0387, 0.0006, 0.0308, 0.1424, 0.1246, -0.0793, 0.2033, 0.1774], [-0.0163, -0.1823, -0.1149, -0.1574, -0.1013, 0.1669, 0.0372, 0.2479, 0.1042, 0.0165, 0.0091, 0.0037], [-0.2687, -0.1178, -0.0017, -0.0028, 0.2478, 0.1158, 0.1894, -0.077, 0.2801, 0.0644, 0.0256, -0.0772]]]