import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Sub22165 = tf.keras.layers.Input(shape=([3, 3]))
in1Sub22165 = tf.keras.layers.Input(shape=([3, 3]))
in0Con56360 = tf.keras.layers.Input(shape=([3, 3]))
in0Con82888 = tf.keras.layers.Input(shape=([2, 2, 2]))
in0Max31625 = tf.keras.layers.Input(shape=([1, 2]))
in1Max31625 = tf.keras.layers.Input(shape=([1, 2]))
in0Con80082 = tf.keras.layers.Input(shape=([2, 4]))
in0Mul83901 = tf.keras.layers.Input(shape=([1, 2, 2]))
in1Mul83901 = tf.keras.layers.Input(shape=([1, 2, 2]))
in0Con73612 = tf.keras.layers.Input(shape=([3, 3, 1]))

Sub22165 = keras.layers.Subtract(name = 'Sub22165', )([in0Sub22165,in1Sub22165])
Con56360 = keras.layers.Concatenate(axis=2, name = 'Con56360', )([Sub22165,in0Con56360])
Con82888 = keras.layers.Conv2D(3, (2, 1),strides=(1, 1), padding='same', dilation_rate=(1, 1), name = 'Con82888', )(in0Con82888)
Res59372 = keras.layers.Reshape((2, 6), name = 'Res59372', )(Con82888)
Max31625 = keras.layers.Maximum(name = 'Max31625', )([in0Max31625,in1Max31625])
Zer53364 = keras.layers.ZeroPadding1D(padding=((1, 0)), name = 'Zer53364', )(Max31625)
Con80082 = keras.layers.Concatenate(axis=2, name = 'Con80082', )([Zer53364,in0Con80082])
Ave30884 = keras.layers.Average(name = 'Ave30884', )([Res59372,Con80082])
Zer86660 = keras.layers.ZeroPadding1D(padding=((1, 0)), name = 'Zer86660', )(Ave30884)
Min53992 = keras.layers.Minimum(name = 'Min53992', )([Con56360,Zer86660])
Res23270 = keras.layers.Reshape((3, 6, 1), name = 'Res23270', )(Min53992)
Loc9043 = keras.layers.LocallyConnected2D(3, (1, 4),strides=(1, 1), name = 'Loc9043', )(Res23270)
Mul83901 = keras.layers.Multiply(name = 'Mul83901', )([in0Mul83901,in1Mul83901])
Zer98526 = keras.layers.ZeroPadding2D(padding=((2, 0), (1, 0)), name = 'Zer98526', )(Mul83901)
Con73612 = keras.layers.Concatenate(axis=3, name = 'Con73612', )([Zer98526,in0Con73612])
Mul17337 = keras.layers.Multiply(name = 'Mul17337', )([Loc9043,Con73612])
model = tf.keras.models.Model(inputs=[in0Sub22165,in1Sub22165,in0Con56360,in0Con82888,in0Max31625,in1Max31625,in0Con80082,in0Mul83901,in1Mul83901,in0Con73612], outputs=Mul17337)
w = model.get_layer('Con82888').get_weights() 
w[0] = np.array([[[[0.2937, 0.0939, 0.6905], [0.8562, 0.6788, 0.5352]]], [[[0.1322, 0.3826, 0.1287], [0.1558, 0.8835, 0.7034]]]])
w[1] = np.array([0, 0, 0])
model.get_layer('Con82888').set_weights(w) 
w = model.get_layer('Loc9043').get_weights() 
w[0] = np.array([[[0.6876, 0.9236, 0.9704], [0.6258, 0.5914, 0.2629], [0.21, 0.479, 0.1675], [0.6691, 0.8005, 0.9186]], [[0.3875, 0.3459, 0.0094], [0.5768, 0.8197, 0.6396], [0.8062, 0.217, 0.1689], [0.3318, 0.9584, 0.6386]], [[0.8515, 0.3575, 0.5704], [0.8916, 0.8644, 0.521], [0.5106, 0.5659, 0.9967], [0.6471, 0.4215, 0.3661]], [[0.3862, 0.8761, 0.9091], [0.5285, 0.5269, 0.4869], [0.0679, 0.895, 0.0971], [0.7154, 0.7139, 0.6159]], [[0.3983, 0.5262, 0.5693], [0.5242, 0.7662, 0.1885], [0.1732, 0.1972, 0.0525], [0.813, 0.4732, 0.5976]], [[0.157, 0.7084, 0.8972], [0.9786, 0.6405, 0.5374], [0.201, 0.4236, 0.6426], [0.7672, 0.5389, 0.9944]], [[0.6904, 0.8386, 0.0153], [0.9639, 0.4929, 0.811], [0.4426, 0.0219, 0.4874], [0.9783, 0.1491, 0.659]], [[0.7278, 0.0986, 0.4633], [0.158, 0.6865, 0.4296], [0.9309, 0.7521, 0.6809], [0.7217, 0.4167, 0.5444]], [[0.9261, 0.6841, 0.9859], [0.7264, 0.6693, 0.2103], [0.8659, 0.4822, 0.4644], [0.8255, 0.8474, 0.7181]]])
w[1] = np.array([[[0, 0, 0], [0, 0, 0], [0, 0, 0]], [[0, 0, 0], [0, 0, 0], [0, 0, 0]], [[0, 0, 0], [0, 0, 0], [0, 0, 0]]])
model.get_layer('Loc9043').set_weights(w) 
in0Sub22165 = tf.constant([[[0.1846, 0.3514, 0.9327], [0.5478, 0.8657, 0.8952], [0.0208, 0.0158, 0.4538]]])
in1Sub22165 = tf.constant([[[0.7115, 0.4276, 0.3166], [0.7738, 0.5416, 0.8474], [0.2942, 0.9934, 0.3161]]])
in0Con56360 = tf.constant([[[0.0091, 0.888, 0.3527], [0.7982, 0.8618, 0.0683], [0.5381, 0.299, 0.5516]]])
in0Con82888 = tf.constant([[[[0.5861, 0.8817], [0.4874, 0.9158]], [[0.3105, 0.5658], [0.5909, 0.8119]]]])
in0Max31625 = tf.constant([[[0.8628, 0.1354]]])
in1Max31625 = tf.constant([[[0.5555, 0.5483]]])
in0Con80082 = tf.constant([[[0.5888, 0.4034, 0.1762, 0.794], [0.9758, 0.735, 0.6713, 0.6717]]])
in0Mul83901 = tf.constant([[[[0.4577, 0.5982], [0.5074, 0.9068]]]])
in1Mul83901 = tf.constant([[[[0.6474, 0.7219], [0.1043, 0.1198]]]])
in0Con73612 = tf.constant([[[[0.027], [0.5378], [0.4429]], [[0.451], [0.1803], [0.6998]], [[0.7518], [0.4533], [0.6308]]]])
print (np.array2string(model.predict([in0Sub22165,in1Sub22165,in0Con56360,in0Con82888,in0Max31625,in1Max31625,in0Con80082,in0Mul83901,in1Mul83901,in0Con73612],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Mul17337.png')

LSub22165 = subtract_layer([[[0.1846, 0.3514, 0.9327], [0.5478, 0.8657, 0.8952], [0.0208, 0.0158, 0.4538]]], [[[0.7115, 0.4276, 0.3166], [0.7738, 0.5416, 0.8474], [0.2942, 0.9934, 0.3161]]], Sub22165), 
LCon56360 = concatenate_layer([Sub22165,[[[0.0091, 0.888, 0.3527], [0.7982, 0.8618, 0.0683], [0.5381, 0.299, 0.5516]]]], 2, Con56360), 
LCon82888 = conv2D_layer([[[[0.5861, 0.8817], [0.4874, 0.9158]], [[0.3105, 0.5658], [0.5909, 0.8119]]]], 2, 1,[[[[0.2937, 0.0939, 0.6905], [0.8562, 0.6788, 0.5352]]], [[[0.1322, 0.3826, 0.1287], [0.1558, 0.8835, 0.7034]]]],[0, 0, 0], 1, 1, true, 1, 1, Con82888), 
LRes59372 = reshape_layer(Con82888, [2, 6], Res59372), 
LMax31625 = maximum_layer([[[[0.8628, 0.1354]]], [[[0.5555, 0.5483]]]], Max31625), 
LZer53364 = zero_padding1D_layer(Max31625, 1, 0, Zer53364), 
LCon80082 = concatenate_layer([Zer53364,[[[0.5888, 0.4034, 0.1762, 0.794], [0.9758, 0.735, 0.6713, 0.6717]]]], 2, Con80082), 
LAve30884 = average_layer([Res59372,Con80082], Ave30884), 
LZer86660 = zero_padding1D_layer(Ave30884, 1, 0, Zer86660), 
LMin53992 = minimum_layer([Con56360,Zer86660], Min53992), 
LRes23270 = reshape_layer(Min53992, [3, 6, 1], Res23270), 
LLoc9043 = locally_connected2D_layer(Res23270, 1, 4,[[[0.6876, 0.9236, 0.9704], [0.6258, 0.5914, 0.2629], [0.21, 0.479, 0.1675], [0.6691, 0.8005, 0.9186]], [[0.3875, 0.3459, 0.0094], [0.5768, 0.8197, 0.6396], [0.8062, 0.217, 0.1689], [0.3318, 0.9584, 0.6386]], [[0.8515, 0.3575, 0.5704], [0.8916, 0.8644, 0.521], [0.5106, 0.5659, 0.9967], [0.6471, 0.4215, 0.3661]], [[0.3862, 0.8761, 0.9091], [0.5285, 0.5269, 0.4869], [0.0679, 0.895, 0.0971], [0.7154, 0.7139, 0.6159]], [[0.3983, 0.5262, 0.5693], [0.5242, 0.7662, 0.1885], [0.1732, 0.1972, 0.0525], [0.813, 0.4732, 0.5976]], [[0.157, 0.7084, 0.8972], [0.9786, 0.6405, 0.5374], [0.201, 0.4236, 0.6426], [0.7672, 0.5389, 0.9944]], [[0.6904, 0.8386, 0.0153], [0.9639, 0.4929, 0.811], [0.4426, 0.0219, 0.4874], [0.9783, 0.1491, 0.659]], [[0.7278, 0.0986, 0.4633], [0.158, 0.6865, 0.4296], [0.9309, 0.7521, 0.6809], [0.7217, 0.4167, 0.5444]], [[0.9261, 0.6841, 0.9859], [0.7264, 0.6693, 0.2103], [0.8659, 0.4822, 0.4644], [0.8255, 0.8474, 0.7181]]],[[[0, 0, 0], [0, 0, 0], [0, 0, 0]], [[0, 0, 0], [0, 0, 0], [0, 0, 0]], [[0, 0, 0], [0, 0, 0], [0, 0, 0]]], 1, 1, Loc9043), 
LMul83901 = multiply_layer([[[[[0.4577, 0.5982], [0.5074, 0.9068]]]], [[[[0.6474, 0.7219], [0.1043, 0.1198]]]]], Mul83901), 
LZer98526 = zero_padding2D_layer(Mul83901, 2, 0, 1, 0, Zer98526), 
LCon73612 = concatenate_layer([Zer98526,[[[[0.027], [0.5378], [0.4429]], [[0.451], [0.1803], [0.6998]], [[0.7518], [0.4533], [0.6308]]]]], 3, Con73612), 
LMul17337 = multiply_layer([Loc9043,Con73612], Mul17337), 
exec_layers([LSub22165,LCon56360,LCon82888,LRes59372,LMax31625,LZer53364,LCon80082,LAve30884,LZer86660,LMin53992,LRes23270,LLoc9043,LMul83901,LZer98526,LCon73612,LMul17337],["Sub22165","Con56360","Con82888","Res59372","Max31625","Zer53364","Con80082","Ave30884","Zer86660","Min53992","Res23270","Loc9043","Mul83901","Zer98526","Con73612","Mul17337"],Mul17337,"Mul17337")

Actual (Unparsed): [[[[-0.0000000, -0.0000000, -0.0143461], [-0.0000000, -0.0000000, -0.0003852], [0.0000000, 0.0000000, 0.0000000]], [[0.0000000, 0.0000000, 0.1938285], [0.0000000, 0.0000000, 0.1350146], [0.0000000, 0.0000000, 0.7537707]], [[-0.0000000, -0.0000000, -0.2821458], [0.0079901, 0.2277691, 0.0613776], [0.0652341, 0.1157996, 0.4944718]]]]

Expected (Unparsed): [[[[-0.0,-0.0,-0.014346091980000001],[-0.0,-0.0,-0.00038521538399999993],[0.0,0.0,0.0]],[[0.0,0.0,0.19382850484165298],[0.0,0.0,0.1350145725776775],[0.0,0.0,0.7537706494780082]],[[-0.0,-0.0,-0.282145833732],[0.00799010676735182,0.22776913183404002,0.06137760420900001],[0.0652340660756722,0.1157995877092656,0.49447176893600003]]]]

Actual:   [[[[-0, -0, -0.0143], [-0, -0, -0.0003], [0, 0, 0]], [[0, 0, 0.1939], [0, 0, 0.1351], [0, 0, 0.7538]], [[-0, -0, -0.2821], [0.008, 0.2278, 0.0614], [0.0653, 0.1158, 0.4945]]]]

Expected: [[[[-0, -0, -0.0143], [-0, -0, -0.0003], [0, 0, 0]], [[0, 0, 0.1939], [0, 0, 0.1351], [0, 0, 0.7538]], [[-0, -0, -0.2821], [0.008, 0.2278, 0.0614], [0.0653, 0.1158, 0.4945]]]]