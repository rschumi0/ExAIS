import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Sub14227 = tf.keras.layers.Input(shape=([3, 3, 3, 3]))
in1Sub14227 = tf.keras.layers.Input(shape=([3, 3, 3, 3]))
in0Sof86513 = tf.keras.layers.Input(shape=([1, 1]))

Sub14227 = keras.layers.Subtract(name = 'Sub14227', )([in0Sub14227,in1Sub14227])
Glo3063 = keras.layers.GlobalAveragePooling3D(name = 'Glo3063', )(Sub14227)
Res60062 = keras.layers.Reshape((3, 1), name = 'Res60062', )(Glo3063)
Res6434 = keras.layers.Reshape((3, 1, 1), name = 'Res6434', )(Res60062)
Res5384 = keras.layers.Reshape((3, 1, 1, 1), name = 'Res5384', )(Res6434)
Zer39349 = keras.layers.ZeroPadding3D(padding=((0, 0), (2, 0), (2, 0)), name = 'Zer39349', )(Res5384)
Sof86513 = keras.layers.Softmax(axis=1, name = 'Sof86513', input_shape=(1, 1))(in0Sof86513)
Max78681 = keras.layers.MaxPool1D(pool_size=(2), strides=(1), padding='same', name = 'Max78681', )(Sof86513)
Max12974 = keras.layers.MaxPool1D(pool_size=(1), name = 'Max12974', )(Max78681)
Res54659 = keras.layers.Reshape((1, 1, 1), name = 'Res54659', )(Max12974)
Res99977 = keras.layers.Reshape((1, 1, 1, 1), name = 'Res99977', )(Res54659)
Up_29796 = keras.layers.UpSampling3D(size=(1, 2, 2), name = 'Up_29796', )(Res99977)
Zer20561 = keras.layers.ZeroPadding3D(padding=((2, 0), (1, 0), (1, 0)), name = 'Zer20561', )(Up_29796)
Max37110 = keras.layers.Maximum(name = 'Max37110', )([Zer39349,Zer20561])
model = tf.keras.models.Model(inputs=[in0Sub14227,in1Sub14227,in0Sof86513], outputs=Max37110)
in0Sub14227 = tf.constant([[[[[0.3256, 0.4879, 0.1625], [0.4505, 0.7112, 0.4518], [0.0635, 0.9824, 0.756]], [[0.0513, 0.2544, 0.0795], [0.9102, 0.4336, 0.8259], [0.3733, 0.1144, 0.7308]], [[0.8183, 0.8603, 0.577], [0.0767, 0.7971, 0.8512], [0.182, 0.7614, 0.5958]]], [[[0.5438, 0.2433, 0.4098], [0.4146, 0.0349, 0.7071], [0.6893, 0.8653, 0.8475]], [[0.5841, 0.2009, 0.7494], [0.3393, 0.3412, 0.8885], [0.3173, 0.6788, 0.2218]], [[0.5133, 0.5155, 0.4299], [0.9776, 0.4846, 0.2546], [0.1664, 0.2951, 0.609]]], [[[0.0481, 0.957, 0.2772], [0.1305, 0.466, 0.0037], [0.7013, 0.7676, 0.7215]], [[0.197, 0.4175, 0.3221], [0.3696, 0.8582, 0.1725], [0.8358, 0.5305, 0.4805]], [[0.3489, 0.1981, 0.2753], [0.8507, 0.5962, 0.5744], [0.8079, 0.5365, 0.0943]]]]])
in1Sub14227 = tf.constant([[[[[0.0133, 0.8629, 0.3587], [0.2404, 0.1191, 0.3], [0.1306, 0.8773, 0.7286]], [[0.223, 0.6467, 0.793], [0.1214, 0.0732, 0.6263], [0.1128, 0.4072, 0.0602]], [[0.0791, 0.3758, 0.3866], [0.9749, 0.3498, 0.5469], [0.3603, 0.9048, 0.9178]]], [[[0.9436, 0.0744, 0.6201], [0.8845, 0.0805, 0.2322], [0.4304, 0.9595, 0.7279]], [[0.7788, 0.1279, 0.6769], [0.0608, 0.467, 0.2261], [0.5163, 0.6363, 0.0548]], [[0.0787, 0.5807, 0.0777], [0.8482, 0.6213, 0.4941], [0.7666, 0.2061, 0.4172]]], [[[0.2193, 0.5492, 0.0523], [0.4082, 0.5706, 0.4469], [0.4026, 0.2709, 0.2946]], [[0.6304, 0.4085, 0.5633], [0.7304, 0.4606, 0.4421], [0.9093, 0.2224, 0.2329]], [[0.3046, 0.3122, 0.6573], [0.3681, 0.7242, 0.3157], [0.7217, 0.1879, 0.9323]]]]])
in0Sof86513 = tf.constant([[[0.138]]])
print (np.array2string(model.predict([in0Sub14227,in1Sub14227,in0Sof86513],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Max37110.png')

LSub14227 = subtract_layer([[[[[0.3256, 0.4879, 0.1625], [0.4505, 0.7112, 0.4518], [0.0635, 0.9824, 0.756]], [[0.0513, 0.2544, 0.0795], [0.9102, 0.4336, 0.8259], [0.3733, 0.1144, 0.7308]], [[0.8183, 0.8603, 0.577], [0.0767, 0.7971, 0.8512], [0.182, 0.7614, 0.5958]]], [[[0.5438, 0.2433, 0.4098], [0.4146, 0.0349, 0.7071], [0.6893, 0.8653, 0.8475]], [[0.5841, 0.2009, 0.7494], [0.3393, 0.3412, 0.8885], [0.3173, 0.6788, 0.2218]], [[0.5133, 0.5155, 0.4299], [0.9776, 0.4846, 0.2546], [0.1664, 0.2951, 0.609]]], [[[0.0481, 0.957, 0.2772], [0.1305, 0.466, 0.0037], [0.7013, 0.7676, 0.7215]], [[0.197, 0.4175, 0.3221], [0.3696, 0.8582, 0.1725], [0.8358, 0.5305, 0.4805]], [[0.3489, 0.1981, 0.2753], [0.8507, 0.5962, 0.5744], [0.8079, 0.5365, 0.0943]]]]], [[[[[0.0133, 0.8629, 0.3587], [0.2404, 0.1191, 0.3], [0.1306, 0.8773, 0.7286]], [[0.223, 0.6467, 0.793], [0.1214, 0.0732, 0.6263], [0.1128, 0.4072, 0.0602]], [[0.0791, 0.3758, 0.3866], [0.9749, 0.3498, 0.5469], [0.3603, 0.9048, 0.9178]]], [[[0.9436, 0.0744, 0.6201], [0.8845, 0.0805, 0.2322], [0.4304, 0.9595, 0.7279]], [[0.7788, 0.1279, 0.6769], [0.0608, 0.467, 0.2261], [0.5163, 0.6363, 0.0548]], [[0.0787, 0.5807, 0.0777], [0.8482, 0.6213, 0.4941], [0.7666, 0.2061, 0.4172]]], [[[0.2193, 0.5492, 0.0523], [0.4082, 0.5706, 0.4469], [0.4026, 0.2709, 0.2946]], [[0.6304, 0.4085, 0.5633], [0.7304, 0.4606, 0.4421], [0.9093, 0.2224, 0.2329]], [[0.3046, 0.3122, 0.6573], [0.3681, 0.7242, 0.3157], [0.7217, 0.1879, 0.9323]]]]], Sub14227), 
LGlo3063 = global_average_pooling3D_layer(Sub14227, Glo3063), 
LRes60062 = reshape_layer(Glo3063, [3, 1], Res60062), 
LRes6434 = reshape_layer(Res60062, [3, 1, 1], Res6434), 
LRes5384 = reshape_layer(Res6434, [3, 1, 1, 1], Res5384), 
LZer39349 = zero_padding3D_layer(Res5384, 0, 0, 2, 0, 2, 0, Zer39349), 
LSof86513 = softmax_layer([[[0.138]]], 1, Sof86513), 
LMax78681 = max_pool1D_layer(Sof86513, 2, 1, true, Max78681), 
LMax12974 = max_pool1D_layer(Max78681, 1, Max12974), 
LRes54659 = reshape_layer(Max12974, [1, 1, 1], Res54659), 
LRes99977 = reshape_layer(Res54659, [1, 1, 1, 1], Res99977), 
LUp_29796 = up_sampling3D_layer(Res99977, 1, 2, 2, Up_29796), 
LZer20561 = zero_padding3D_layer(Up_29796, 2, 0, 1, 0, 1, 0, Zer20561), 
LMax37110 = maximum_layer([Zer39349,Zer20561], Max37110), 
exec_layers([LSub14227,LGlo3063,LRes60062,LRes6434,LRes5384,LZer39349,LSof86513,LMax78681,LMax12974,LRes54659,LRes99977,LUp_29796,LZer20561,LMax37110],["Sub14227","Glo3063","Res60062","Res6434","Res5384","Zer39349","Sof86513","Max78681","Max12974","Res54659","Res99977","Up_29796","Zer20561","Max37110"],Max37110,"Max37110")

Actual (Unparsed): [[[[[0.0000000], [0.0000000], [0.0000000]], [[0.0000000], [0.0000000], [0.0000000]], [[0.0000000], [0.0000000], [0.0000000]]], [[[0.0000000], [0.0000000], [0.0000000]], [[0.0000000], [0.0000000], [0.0000000]], [[0.0000000], [0.0000000], [0.0856630]]], [[[0.0000000], [0.0000000], [0.0000000]], [[0.0000000], [1.0000000], [1.0000000]], [[0.0000000], [1.0000000], [1.0000000]]]]]

Expected (Unparsed): [[[[[0],[0],[0]],[[0],[0],[0]],[[0],[0],[0]]],[[[0],[0],[0]],[[0],[0],[0]],[[0],[0],[0.08566296296296293]]],[[[0],[0],[0]],[[0],[1.0],[1.0]],[[0],[1.0],[1.0]]]]]

Actual:   [[[[[0], [0], [0]], [[0], [0], [0]], [[0], [0], [0]]], [[[0], [0], [0]], [[0], [0], [0]], [[0], [0], [0.0857]]], [[[0], [0], [0]], [[0], [1], [1]], [[0], [1], [1]]]]]

Expected: [[[[[0], [0], [0]], [[0], [0], [0]], [[0], [0], [0]]], [[[0], [0], [0]], [[0], [0], [0]], [[0], [0], [0.0857]]], [[[0], [0], [0]], [[0], [1], [1]], [[0], [1], [1]]]]]