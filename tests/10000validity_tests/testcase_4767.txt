import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Up_2069 = tf.keras.layers.Input(shape=([2, 1, 1, 3]))
in0Cro97047 = tf.keras.layers.Input(shape=([4, 1, 2, 2]))
in0Add9529 = tf.keras.layers.Input(shape=([1, 1]))
in1Add9529 = tf.keras.layers.Input(shape=([1, 1]))
in0Con61814 = tf.keras.layers.Input(shape=([4, 1]))
in0Con53843 = tf.keras.layers.Input(shape=([4, 10]))

Up_2069 = keras.layers.UpSampling3D(size=(1, 2, 2), name = 'Up_2069', )(in0Up_2069)
Res91922 = keras.layers.Reshape((2, 2, 6), name = 'Res91922', )(Up_2069)
Res69572 = keras.layers.Reshape((2, 12), name = 'Res69572', )(Res91922)
Zer12733 = keras.layers.ZeroPadding1D(padding=((2, 0)), name = 'Zer12733', )(Res69572)
Cro97047 = keras.layers.Cropping3D(cropping=((0, 0), (0, 0), (1, 0)), name = 'Cro97047', )(in0Cro97047)
Res40641 = keras.layers.Reshape((4, 1, 2), name = 'Res40641', )(Cro97047)
Res54814 = keras.layers.Reshape((4, 2), name = 'Res54814', )(Res40641)
Add9529 = keras.layers.Add(name = 'Add9529', )([in0Add9529,in1Add9529])
Zer96263 = keras.layers.ZeroPadding1D(padding=((3, 0)), name = 'Zer96263', )(Add9529)
Con61814 = keras.layers.Concatenate(axis=2, name = 'Con61814', )([Zer96263,in0Con61814])
Add8812 = keras.layers.Add(name = 'Add8812', )([Res54814,Con61814])
Lay6037 = keras.layers.LayerNormalization(axis=1, epsilon=2.549668711303141, name = 'Lay6037', )(Add8812)
Con53843 = keras.layers.Concatenate(axis=2, name = 'Con53843', )([Lay6037,in0Con53843])
Max25253 = keras.layers.Maximum(name = 'Max25253', )([Zer12733,Con53843])
model = tf.keras.models.Model(inputs=[in0Up_2069,in0Cro97047,in0Add9529,in1Add9529,in0Con61814,in0Con53843], outputs=Max25253)
in0Up_2069 = tf.constant([[[[[1.7525, 1.5656, 1.2016]]], [[[1.2851, 1.9142, 1.5946]]]]])
in0Cro97047 = tf.constant([[[[[1.1503, 1.2201], [1.5174, 1.8254]]], [[[1.2264, 1.9667], [1.5401, 1.5151]]], [[[1.0606, 1.7539], [1.333, 1.9168]]], [[[1.3754, 1.6958], [1.7199, 1.0014]]]]])
in0Add9529 = tf.constant([[[0.2277]]])
in1Add9529 = tf.constant([[[0.2651]]])
in0Con61814 = tf.constant([[[0.5286], [0.625], [0.2146], [0.3296]]])
in0Con53843 = tf.constant([[[0.1487, 0.4972, 0.7147, 0.1358, 0.9729, 0.8977, 0.2106, 0.9529, 0.3151, 0.6422], [0.3468, 0.601, 0.5323, 0.4756, 0.0115, 0.3923, 0.7557, 0.7499, 0.2223, 0.9112], [0.3211, 0.0123, 0.2381, 0.882, 0.3081, 0.1789, 0.9433, 0.4498, 0.2305, 0.2599], [0.1231, 0.6404, 0.6742, 0.3674, 0.8315, 0.4809, 0.3429, 0.6523, 0.0433, 0.6344]]])
print (np.array2string(model.predict([in0Up_2069,in0Cro97047,in0Add9529,in1Add9529,in0Con61814,in0Con53843],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Max25253.png')

LUp_2069 = up_sampling3D_layer([[[[[1.7525, 1.5656, 1.2016]]], [[[1.2851, 1.9142, 1.5946]]]]], 1, 2, 2, Up_2069), 
LRes91922 = reshape_layer(Up_2069, [2, 2, 6], Res91922), 
LRes69572 = reshape_layer(Res91922, [2, 12], Res69572), 
LZer12733 = zero_padding1D_layer(Res69572, 2, 0, Zer12733), 
LCro97047 = cropping3D_layer([[[[[1.1503, 1.2201], [1.5174, 1.8254]]], [[[1.2264, 1.9667], [1.5401, 1.5151]]], [[[1.0606, 1.7539], [1.333, 1.9168]]], [[[1.3754, 1.6958], [1.7199, 1.0014]]]]], 0, 0, 0, 0, 1, 0, Cro97047), 
LRes40641 = reshape_layer(Cro97047, [4, 1, 2], Res40641), 
LRes54814 = reshape_layer(Res40641, [4, 2], Res54814), 
LAdd9529 = add_layer([[[[0.2277]]], [[[0.2651]]]], Add9529), 
LZer96263 = zero_padding1D_layer(Add9529, 3, 0, Zer96263), 
LCon61814 = concatenate_layer([Zer96263,[[[0.5286], [0.625], [0.2146], [0.3296]]]], 2, Con61814), 
LAdd8812 = add_layer([Res54814,Con61814], Add8812), 
LLay6037 = layer_normalization_layer(Add8812, 1, 2.549668711303141, Lay6037), 
LCon53843 = concatenate_layer([Lay6037,[[[0.1487, 0.4972, 0.7147, 0.1358, 0.9729, 0.8977, 0.2106, 0.9529, 0.3151, 0.6422], [0.3468, 0.601, 0.5323, 0.4756, 0.0115, 0.3923, 0.7557, 0.7499, 0.2223, 0.9112], [0.3211, 0.0123, 0.2381, 0.882, 0.3081, 0.1789, 0.9433, 0.4498, 0.2305, 0.2599], [0.1231, 0.6404, 0.6742, 0.3674, 0.8315, 0.4809, 0.3429, 0.6523, 0.0433, 0.6344]]]], 2, Con53843), 
LMax25253 = maximum_layer([Zer12733,Con53843], Max25253), 
exec_layers([LUp_2069,LRes91922,LRes69572,LZer12733,LCro97047,LRes40641,LRes54814,LAdd9529,LZer96263,LCon61814,LAdd8812,LLay6037,LCon53843,LMax25253],["Up_2069","Res91922","Res69572","Zer12733","Cro97047","Res40641","Res54814","Add9529","Zer96263","Con61814","Add8812","Lay6037","Con53843","Max25253"],Max25253,"Max25253")

Actual (Unparsed): [[[0.0000000, 0.2219739, 0.1487000, 0.4972000, 0.7147000, 0.1358000, 0.9729000, 0.8977000, 0.2106000, 0.9529000, 0.3151000, 0.6422000], [0.0000000, 0.0918466, 0.3468000, 0.6010000, 0.5323000, 0.4756000, 0.0115000, 0.3923000, 0.7557000, 0.7499000, 0.2223000, 0.9112000], [1.7525001, 1.5656000, 1.2016000, 1.7525001, 1.5656000, 1.2016000, 1.7525001, 1.5656000, 1.2016000, 1.7525001, 1.5656000, 1.2016000], [1.2851000, 1.9141999, 1.5946000, 1.2851000, 1.9141999, 1.5946000, 1.2851000, 1.9141999, 1.5946000, 1.2851000, 1.9141999, 1.5946000]]]

Expected (Unparsed): [[[0,0.22197393607709645,0.1487,0.4972,0.7147,0.1358,0.9729,0.8977,0.2106,0.9529,0.3151,0.6422],[0,0.09184656388965975,0.3468,0.601,0.5323,0.4756,0.0115,0.3923,0.7557,0.7499,0.2223,0.9112],[1.7525,1.5656,1.2016,1.7525,1.5656,1.2016,1.7525,1.5656,1.2016,1.7525,1.5656,1.2016],[1.2851,1.9142,1.5946,1.2851,1.9142,1.5946,1.2851,1.9142,1.5946,1.2851,1.9142,1.5946]]]

Actual:   [[[0, 0.222, 0.1487, 0.4972, 0.7147, 0.1358, 0.9729, 0.8977, 0.2106, 0.9529, 0.3151, 0.6422], [0, 0.0919, 0.3468, 0.601, 0.5323, 0.4756, 0.0115, 0.3923, 0.7557, 0.7499, 0.2223, 0.9112], [1.7526, 1.5656, 1.2016, 1.7526, 1.5656, 1.2016, 1.7526, 1.5656, 1.2016, 1.7526, 1.5656, 1.2016], [1.2851, 1.9142, 1.5946, 1.2851, 1.9142, 1.5946, 1.2851, 1.9142, 1.5946, 1.2851, 1.9142, 1.5946]]]

Expected: [[[0, 0.222, 0.1487, 0.4972, 0.7147, 0.1358, 0.9729, 0.8977, 0.2106, 0.9529, 0.3151, 0.6422], [0, 0.0919, 0.3468, 0.601, 0.5323, 0.4756, 0.0115, 0.3923, 0.7557, 0.7499, 0.2223, 0.9112], [1.7525, 1.5656, 1.2016, 1.7525, 1.5656, 1.2016, 1.7525, 1.5656, 1.2016, 1.7525, 1.5656, 1.2016], [1.2851, 1.9142, 1.5946, 1.2851, 1.9142, 1.5946, 1.2851, 1.9142, 1.5946, 1.2851, 1.9142, 1.5946]]]