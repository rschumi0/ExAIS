import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Mul37853 = tf.keras.layers.Input(shape=([1, 1, 1]))
in1Mul37853 = tf.keras.layers.Input(shape=([1, 1, 1]))

Mul37853 = keras.layers.Multiply(name = 'Mul37853', )([in0Mul37853,in1Mul37853])
Res38903 = keras.layers.Reshape((1, 1), name = 'Res38903', )(Mul37853)
Zer1113 = keras.layers.ZeroPadding1D(padding=((1, 1)), name = 'Zer1113', )(Res38903)
model = tf.keras.models.Model(inputs=[in0Mul37853,in1Mul37853], outputs=Zer1113)
in0Mul37853 = tf.constant([[[[0.0999]]]])
in1Mul37853 = tf.constant([[[[0.9396]]]])
print (np.array2string(model.predict([in0Mul37853,in1Mul37853],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Zer1113.png')

LMul37853 = multiply_layer([[[[[0.0999]]]], [[[[0.9396]]]]], Mul37853), 
LRes38903 = reshape_layer(Mul37853, [1, 1], Res38903), 
LZer1113 = zero_padding1D_layer(Res38903, 1, 1, Zer1113), 
exec_layers([LMul37853,LRes38903,LZer1113],["Mul37853","Res38903","Zer1113"],Zer1113,"Zer1113")

Actual (Unparsed): [[[0.0000000], [0.0938660], [0.0000000]]]

Expected (Unparsed): [[[0],[0.09386604],[0]]]

Actual:   [[[0], [0.0939], [0]]]

Expected: [[[0], [0.0939], [0]]]