import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Con16868 = tf.keras.layers.Input(shape=([1, 1]))
in0Min80438 = tf.keras.layers.Input(shape=([2, 2]))
in1Min80438 = tf.keras.layers.Input(shape=([2, 2]))
in0Con34424 = tf.keras.layers.Input(shape=([2, 1]))
in0Ave12526 = tf.keras.layers.Input(shape=([1, 1, 1]))
in0Sim30326 = tf.keras.layers.Input(shape=([1, 2]))
in0Con9732 = tf.keras.layers.Input(shape=([2, 1, 2]))
in0Loc74236 = tf.keras.layers.Input(shape=([1, 1, 2]))

Con16868 = keras.layers.Conv1D(3, (1),strides=(1), padding='valid', dilation_rate=(1), name = 'Con16868', )(in0Con16868)
Thr20664 = keras.layers.ThresholdedReLU(theta=5.565415498059973, name = 'Thr20664', )(Con16868)
Zer64494 = keras.layers.ZeroPadding1D(padding=((1, 0)), name = 'Zer64494', )(Thr20664)
Min80438 = keras.layers.Minimum(name = 'Min80438', )([in0Min80438,in1Min80438])
Cro605 = keras.layers.Cropping1D(cropping=((0, 0)), name = 'Cro605', )(Min80438)
Con34424 = keras.layers.Concatenate(axis=2, name = 'Con34424', )([Cro605,in0Con34424])
Ave12526 = keras.layers.AveragePooling2D(pool_size=(1, 1), strides=(1, 1), padding='valid', name = 'Ave12526', )(in0Ave12526)
Res43436 = keras.layers.Reshape((1, 1), name = 'Res43436', )(Ave12526)
Zer68454 = keras.layers.ZeroPadding1D(padding=((1, 0)), name = 'Zer68454', )(Res43436)
Sim30326 = keras.layers.SimpleRNN(2,name = 'Sim30326', )(in0Sim30326)
Res95071 = keras.layers.Reshape((2, 1), name = 'Res95071', )(Sim30326)
Res81558 = keras.layers.Reshape((2, 1, 1), name = 'Res81558', )(Res95071)
Con9732 = keras.layers.Concatenate(axis=3, name = 'Con9732', )([Res81558,in0Con9732])
Loc74236 = keras.layers.LocallyConnected2D(3, (1, 1),strides=(1, 1), name = 'Loc74236', )(in0Loc74236)
Zer86745 = keras.layers.ZeroPadding2D(padding=((1, 0), (0, 0)), name = 'Zer86745', )(Loc74236)
Mul64923 = keras.layers.Multiply(name = 'Mul64923', )([Con9732,Zer86745])
Res57644 = keras.layers.Reshape((2, 3), name = 'Res57644', )(Mul64923)
Dot94696 = keras.layers.Dot(axes=(1, 1), name = 'Dot94696', )([Zer68454,Res57644])
Zer31049 = keras.layers.ZeroPadding1D(padding=((1, 0)), name = 'Zer31049', )(Dot94696)
Add42240 = keras.layers.Add(name = 'Add42240', )([Con34424,Zer31049])
Max41071 = keras.layers.Maximum(name = 'Max41071', )([Zer64494,Add42240])
model = tf.keras.models.Model(inputs=[in0Con16868,in0Min80438,in1Min80438,in0Con34424,in0Ave12526,in0Sim30326,in0Con9732,in0Loc74236], outputs=Max41071)
w = model.get_layer('Con16868').get_weights() 
w[0] = np.array([[[0.0512, 0.5459, 0.3082]]])
w[1] = np.array([0, 0, 0])
model.get_layer('Con16868').set_weights(w) 
w = model.get_layer('Sim30326').get_weights() 
w[0] = np.array([[5, 3], [8, 10]])
w[1] = np.array([[1, 6], [7, 7]])
w[2] = np.array([2, 2])
model.get_layer('Sim30326').set_weights(w) 
w = model.get_layer('Loc74236').get_weights() 
w[0] = np.array([[[0.3533, 0.1376, 0.44], [0.2535, 0.0343, 0.8415]]])
w[1] = np.array([[[0, 0, 0]]])
model.get_layer('Loc74236').set_weights(w) 
in0Con16868 = tf.constant([[[0.6218]]])
in0Min80438 = tf.constant([[[0.938, 0.399], [0.0186, 0.381]]])
in1Min80438 = tf.constant([[[0.367, 0.0974], [0.0881, 0.5047]]])
in0Con34424 = tf.constant([[[0.4364], [0.979]]])
in0Ave12526 = tf.constant([[[[1.9226]]]])
in0Sim30326 = tf.constant([[[7, 7]]])
in0Con9732 = tf.constant([[[[0.2697, 0.6597]], [[0.7676, 0.252]]]])
in0Loc74236 = tf.constant([[[[0.8275, 0.4932]]]])
print (np.array2string(model.predict([in0Con16868,in0Min80438,in1Min80438,in0Con34424,in0Ave12526,in0Sim30326,in0Con9732,in0Loc74236],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Max41071.png')

LCon16868 = conv1D_layer([[[0.6218]]], 1,[[[0.0512, 0.5459, 0.3082]]],[0, 0, 0], 1, false, 1, Con16868), 
LThr20664 = thresholded_relu_layer(Con16868, 5.565415498059973, Thr20664), 
LZer64494 = zero_padding1D_layer(Thr20664, 1, 0, Zer64494), 
LMin80438 = minimum_layer([[[[0.938, 0.399], [0.0186, 0.381]]], [[[0.367, 0.0974], [0.0881, 0.5047]]]], Min80438), 
LCro605 = cropping1D_layer(Min80438, 0, 0, Cro605), 
LCon34424 = concatenate_layer([Cro605,[[[0.4364], [0.979]]]], 2, Con34424), 
LAve12526 = average_pooling2D_layer([[[[1.9226]]]], 1, 1, 1, 1, false, Ave12526), 
LRes43436 = reshape_layer(Ave12526, [1, 1], Res43436), 
LZer68454 = zero_padding1D_layer(Res43436, 1, 0, Zer68454), 
LSim30326 = simple_rnn_layer([[[7, 7]]],[[5, 3], [8, 10]],[[1, 6], [7, 7]],[2, 2], Sim30326), 
LRes95071 = reshape_layer(Sim30326, [2, 1], Res95071), 
LRes81558 = reshape_layer(Res95071, [2, 1, 1], Res81558), 
LCon9732 = concatenate_layer([Res81558,[[[[0.2697, 0.6597]], [[0.7676, 0.252]]]]], 3, Con9732), 
LLoc74236 = locally_connected2D_layer([[[[0.8275, 0.4932]]]], 1, 1,[[[0.3533, 0.1376, 0.44], [0.2535, 0.0343, 0.8415]]],[[[0, 0, 0]]], 1, 1, Loc74236), 
LZer86745 = zero_padding2D_layer(Loc74236, 1, 0, 0, 0, Zer86745), 
LMul64923 = multiply_layer([Con9732,Zer86745], Mul64923), 
LRes57644 = reshape_layer(Mul64923, [2, 3], Res57644), 
LDot94696 = dot_layer(Zer68454,Res57644, 1, 1, Dot94696), 
LZer31049 = zero_padding1D_layer(Dot94696, 1, 0, Zer31049), 
LAdd42240 = add_layer([Con34424,Zer31049], Add42240), 
LMax41071 = maximum_layer([Zer64494,Add42240], Max41071), 
exec_layers([LCon16868,LThr20664,LZer64494,LMin80438,LCro605,LCon34424,LAve12526,LRes43436,LZer68454,LSim30326,LRes95071,LRes81558,LCon9732,LLoc74236,LZer86745,LMul64923,LRes57644,LDot94696,LZer31049,LAdd42240,LMax41071],["Con16868","Thr20664","Zer64494","Min80438","Cro605","Con34424","Ave12526","Res43436","Zer68454","Sim30326","Res95071","Res81558","Con9732","Loc74236","Zer86745","Mul64923","Res57644","Dot94696","Zer31049","Add42240","Max41071"],Max41071,"Max41071")

Actual (Unparsed): [[[0.3670000, 0.0974000, 0.4364000], [0.8210585, 0.5740047, 1.3564837]]]

Expected (Unparsed): [[[0.367,0.0974,0.4364],[0.82105853707,0.5740046448514976,1.35648367928656]]]

Actual:   [[[0.367, 0.0974, 0.4364], [0.8211, 0.5741, 1.3565]]]

Expected: [[[0.367, 0.0974, 0.4364], [0.8211, 0.5741, 1.3565]]]