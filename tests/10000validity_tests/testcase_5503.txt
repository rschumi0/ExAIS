import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Up_82461 = tf.keras.layers.Input(shape=([1, 4]))
in0Max60931 = tf.keras.layers.Input(shape=([2, 2, 2, 2]))
in1Max60931 = tf.keras.layers.Input(shape=([2, 2, 2, 2]))
in0Con61938 = tf.keras.layers.Input(shape=([4, 8, 1, 1]))
in0Add53443 = tf.keras.layers.Input(shape=([1, 2, 1, 2]))
in1Add53443 = tf.keras.layers.Input(shape=([1, 2, 1, 2]))

Up_82461 = keras.layers.UpSampling1D(size=(2), name = 'Up_82461', )(in0Up_82461)
Up_22267 = keras.layers.UpSampling1D(size=(1), name = 'Up_22267', )(Up_82461)
Max60931 = keras.layers.Maximum(name = 'Max60931', )([in0Max60931,in1Max60931])
Res87232 = keras.layers.Reshape((2, 2, 4), name = 'Res87232', )(Max60931)
Res3127 = keras.layers.Reshape((2, 8), name = 'Res3127', )(Res87232)
Dot23612 = keras.layers.Dot(axes=(1, 1), name = 'Dot23612', )([Up_22267,Res3127])
Res48825 = keras.layers.Reshape((4, 8, 1), name = 'Res48825', )(Dot23612)
Res31994 = keras.layers.Reshape((4, 8, 1, 1), name = 'Res31994', )(Res48825)
Con61938 = keras.layers.Concatenate(axis=4, name = 'Con61938', )([Res31994,in0Con61938])
Add53443 = keras.layers.Add(name = 'Add53443', )([in0Add53443,in1Add53443])
ReL70323 = keras.layers.ReLU(max_value=8.706441511707261, negative_slope=7.732785767913747, threshold=5.40195076662521, name = 'ReL70323', )(Add53443)
Zer24461 = keras.layers.ZeroPadding3D(padding=((3, 0), (6, 0), (0, 0)), name = 'Zer24461', )(ReL70323)
Add54504 = keras.layers.Add(name = 'Add54504', )([Con61938,Zer24461])
model = tf.keras.models.Model(inputs=[in0Up_82461,in0Max60931,in1Max60931,in0Con61938,in0Add53443,in1Add53443], outputs=Add54504)
in0Up_82461 = tf.constant([[[1.8684, 1.0598, 1.1237, 1.6924]]])
in0Max60931 = tf.constant([[[[[0.6085, 0.0758], [0.5858, 0.0916]], [[0.5237, 0.0849], [0.0707, 0.9355]]], [[[0.8761, 0.4188], [0.672, 0.2438]], [[0.9337, 0.955], [0.0107, 0.3703]]]]])
in1Max60931 = tf.constant([[[[[0.5975, 0.0624], [0.7096, 0.5597]], [[0.3092, 0.0214], [0.4774, 0.5148]]], [[[0.5658, 0.1744], [0.3281, 0.2449]], [[0.304, 0.6947], [0.0986, 0.9247]]]]])
in0Con61938 = tf.constant([[[[[0.6983]], [[0.5752]], [[0.8187]], [[0.2551]], [[0.6218]], [[0.8879]], [[0.1419]], [[0.5681]]], [[[0.3371]], [[0.4506]], [[0.8439]], [[0.0481]], [[0.7601]], [[0.2224]], [[0.7141]], [[0.1813]]], [[[0.5907]], [[0.0137]], [[0.1147]], [[0.9059]], [[0.1567]], [[0.8584]], [[0.6749]], [[0.7242]]], [[[0.9091]], [[0.7939]], [[0.0108]], [[0.1271]], [[0.1476]], [[0.8568]], [[0.1333]], [[0.8464]]]]])
in0Add53443 = tf.constant([[[[[0.0066, 0.3969]], [[0.2208, 0.3583]]]]])
in1Add53443 = tf.constant([[[[[0.6296, 0.4541]], [[0.6548, 0.9109]]]]])
print (np.array2string(model.predict([in0Up_82461,in0Max60931,in1Max60931,in0Con61938,in0Add53443,in1Add53443],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Add54504.png')

LUp_82461 = up_sampling1D_layer([[[1.8684, 1.0598, 1.1237, 1.6924]]], 2, Up_82461), 
LUp_22267 = up_sampling1D_layer(Up_82461, 1, Up_22267), 
LMax60931 = maximum_layer([[[[[[0.6085, 0.0758], [0.5858, 0.0916]], [[0.5237, 0.0849], [0.0707, 0.9355]]], [[[0.8761, 0.4188], [0.672, 0.2438]], [[0.9337, 0.955], [0.0107, 0.3703]]]]], [[[[[0.5975, 0.0624], [0.7096, 0.5597]], [[0.3092, 0.0214], [0.4774, 0.5148]]], [[[0.5658, 0.1744], [0.3281, 0.2449]], [[0.304, 0.6947], [0.0986, 0.9247]]]]]], Max60931), 
LRes87232 = reshape_layer(Max60931, [2, 2, 4], Res87232), 
LRes3127 = reshape_layer(Res87232, [2, 8], Res3127), 
LDot23612 = dot_layer(Up_22267,Res3127, 1, 1, Dot23612), 
LRes48825 = reshape_layer(Dot23612, [4, 8, 1], Res48825), 
LRes31994 = reshape_layer(Res48825, [4, 8, 1, 1], Res31994), 
LCon61938 = concatenate_layer([Res31994,[[[[[0.6983]], [[0.5752]], [[0.8187]], [[0.2551]], [[0.6218]], [[0.8879]], [[0.1419]], [[0.5681]]], [[[0.3371]], [[0.4506]], [[0.8439]], [[0.0481]], [[0.7601]], [[0.2224]], [[0.7141]], [[0.1813]]], [[[0.5907]], [[0.0137]], [[0.1147]], [[0.9059]], [[0.1567]], [[0.8584]], [[0.6749]], [[0.7242]]], [[[0.9091]], [[0.7939]], [[0.0108]], [[0.1271]], [[0.1476]], [[0.8568]], [[0.1333]], [[0.8464]]]]]], 4, Con61938), 
LAdd53443 = add_layer([[[[[[0.0066, 0.3969]], [[0.2208, 0.3583]]]]], [[[[[0.6296, 0.4541]], [[0.6548, 0.9109]]]]]], Add53443), 
LReL70323 = relu_layer(Add53443, 8.706441511707261, 7.732785767913747, 5.40195076662521, ReL70323), 
LZer24461 = zero_padding3D_layer(ReL70323, 3, 0, 6, 0, 0, 0, Zer24461), 
LAdd54504 = add_layer([Con61938,Zer24461], Add54504), 
exec_layers([LUp_82461,LUp_22267,LMax60931,LRes87232,LRes3127,LDot23612,LRes48825,LRes31994,LCon61938,LAdd53443,LReL70323,LZer24461,LAdd54504],["Up_82461","Up_22267","Max60931","Res87232","Res3127","Dot23612","Res48825","Res31994","Con61938","Add53443","ReL70323","Zer24461","Add54504"],Add54504,"Add54504")

Actual (Unparsed): [[[[[2.7738266, 0.6983000]], [[0.9241106, 0.5752000]], [[2.5813813, 0.8187000]], [[1.5033147, 0.2551000]], [[2.7230062, 0.6218000]], [[1.9429491, 0.8879000]], [[1.0761984, 0.1419000]], [[3.4755977, 0.5681000]]], [[[1.5733791, 0.3371000]], [[0.5241771, 0.4506000]], [[1.4642197, 0.8439000]], [[0.8527151, 0.0481000]], [[1.5445526, 0.7601000]], [[1.1020860, 0.2224000]], [[0.6104448, 0.7141000]], [[1.9714401, 0.1813000]]], [[[1.6682451, 0.5907000]], [[0.5557820, 0.0137000]], [[1.5525039, 0.1147000]], [[0.9041291, 0.9059000]], [[1.6376804, 0.1567000]], [[1.1685356, 0.8584000]], [[0.6472512, 0.6749000]], [[2.0903068, 0.7242000]]], [[[2.5125370, 0.9091000]], [[0.8370610, 0.7939000]], [[2.3382197, 0.0108000]], [[1.3617050, 0.1271000]], [[2.4665038, 0.1476000]], [[1.7599267, 0.8568000]], [[-35.8777074, -35.0582272]], [[-31.8530983, -31.1112763]]]]]

Expected (Unparsed): [[[[[2.7738266400000002,0.6983]],[[0.9241106400000001,0.5752]],[[2.5813814400000004,0.8187]],[[1.5033146400000001,0.2551]],[[2.72300616,0.6218]],[[1.94294916,0.8879]],[[1.0761984,0.1419]],[[3.47559768,0.5681]]],[[[1.57337908,0.3371]],[[0.5241770800000001,0.4506]],[[1.4642196800000002,0.8439]],[[0.8527150800000001,0.0481]],[[1.54455252,0.7601]],[[1.10208602,0.2224]],[[0.6104448,0.7141]],[[1.97143996,0.1813]]],[[[1.6682450199999999,0.5907]],[[0.55578202,0.0137]],[[1.55250392,0.1147]],[[0.9041290199999998,0.9059]],[[1.63768038,0.1567]],[[1.16853563,0.8584]],[[0.6472511999999999,0.6749]],[[2.09030674,0.7242]]],[[[2.5125370399999998,0.9091]],[[0.8370610399999999,0.7939]],[[2.33821984,0.0108]],[[1.36170504,0.1271]],[[2.46650376,0.1476]],[[1.7599267599999997,0.8568]],[[-35.87770730158345,-35.05822731863558]],[[-31.8530983087449,-31.111276310494052]]]]]

Actual:   [[[[[2.7739, 0.6983]], [[0.9242, 0.5752]], [[2.5814, 0.8187]], [[1.5034, 0.2551]], [[2.7231, 0.6218]], [[1.943, 0.8879]], [[1.0762, 0.1419]], [[3.4756, 0.5681]]], [[[1.5734, 0.3371]], [[0.5242, 0.4506]], [[1.4643, 0.8439]], [[0.8528, 0.0481]], [[1.5446, 0.7601]], [[1.1021, 0.2224]], [[0.6105, 0.7141]], [[1.9715, 0.1813]]], [[[1.6683, 0.5907]], [[0.5558, 0.0137]], [[1.5526, 0.1147]], [[0.9042, 0.9059]], [[1.6377, 0.1567]], [[1.1686, 0.8584]], [[0.6473, 0.6749]], [[2.0904, 0.7242]]], [[[2.5126, 0.9091]], [[0.8371, 0.7939]], [[2.3383, 0.0108]], [[1.3618, 0.1271]], [[2.4666, 0.1476]], [[1.76, 0.8568]], [[-35.8777, -35.0582]], [[-31.853, -31.1112]]]]]

Expected: [[[[[2.7739, 0.6983]], [[0.9242, 0.5752]], [[2.5814, 0.8187]], [[1.5034, 0.2551]], [[2.7231, 0.6218]], [[1.943, 0.8879]], [[1.0762, 0.1419]], [[3.4756, 0.5681]]], [[[1.5734, 0.3371]], [[0.5242, 0.4506]], [[1.4643, 0.8439]], [[0.8528, 0.0481]], [[1.5446, 0.7601]], [[1.1021, 0.2224]], [[0.6105, 0.7141]], [[1.9715, 0.1813]]], [[[1.6683, 0.5907]], [[0.5558, 0.0137]], [[1.5526, 0.1147]], [[0.9042, 0.9059]], [[1.6377, 0.1567]], [[1.1686, 0.8584]], [[0.6473, 0.6749]], [[2.0904, 0.7242]]], [[[2.5126, 0.9091]], [[0.8371, 0.7939]], [[2.3383, 0.0108]], [[1.3618, 0.1271]], [[2.4666, 0.1476]], [[1.76, 0.8568]], [[-35.8777, -35.0582]], [[-31.853, -31.1112]]]]]