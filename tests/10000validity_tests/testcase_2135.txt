import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Ave29211 = tf.keras.layers.Input(shape=([2, 1, 2, 1]))
in1Ave29211 = tf.keras.layers.Input(shape=([2, 1, 2, 1]))
in0Mul20996 = tf.keras.layers.Input(shape=([2, 1, 1, 1]))
in1Mul20996 = tf.keras.layers.Input(shape=([2, 1, 1, 1]))
in0Con14952 = tf.keras.layers.Input(shape=([8, 7, 4]))
in0Max69751 = tf.keras.layers.Input(shape=([2, 2, 2]))
in1Max69751 = tf.keras.layers.Input(shape=([2, 2, 2]))
in0Dot13625 = tf.keras.layers.Input(shape=([3]))
in1Dot13625 = tf.keras.layers.Input(shape=([3]))
in0Con48278 = tf.keras.layers.Input(shape=([7]))
in0Con70758 = tf.keras.layers.Input(shape=([8, 7, 5]))
in0Sub59933 = tf.keras.layers.Input(shape=([2, 2, 2, 3]))
in1Sub59933 = tf.keras.layers.Input(shape=([2, 2, 2, 3]))
in0Up_46804 = tf.keras.layers.Input(shape=([1, 4, 2]))
in0Con62611 = tf.keras.layers.Input(shape=([2, 4, 4]))

Ave29211 = keras.layers.Average(name = 'Ave29211', )([in0Ave29211,in1Ave29211])
Mul20996 = keras.layers.Multiply(name = 'Mul20996', )([in0Mul20996,in1Mul20996])
Zer99645 = keras.layers.ZeroPadding3D(padding=((0, 0), (0, 0), (1, 0)), name = 'Zer99645', )(Mul20996)
Add55168 = keras.layers.Add(name = 'Add55168', )([Ave29211,Zer99645])
Res3530 = keras.layers.Reshape((2, 1, 2), name = 'Res3530', )(Add55168)
Dep62896 = keras.layers.DepthwiseConv2D((2, 1),strides=(1, 1), padding='valid', name = 'Dep62896', )(Res3530)
Zer84351 = keras.layers.ZeroPadding2D(padding=((7, 0), (6, 0)), name = 'Zer84351', )(Dep62896)
Con14952 = keras.layers.Concatenate(axis=3, name = 'Con14952', )([Zer84351,in0Con14952])
Max69751 = keras.layers.Maximum(name = 'Max69751', )([in0Max69751,in1Max69751])
Res63588 = keras.layers.Reshape((2, 4), name = 'Res63588', )(Max69751)
Fla92052 = keras.layers.Flatten(name = 'Fla92052', )(Res63588)
Dot13625 = keras.layers.Dot(axes=(1, 1), name = 'Dot13625', )([in0Dot13625,in1Dot13625])
Con48278 = keras.layers.Concatenate(axis=1, name = 'Con48278', )([Dot13625,in0Con48278])
Add69281 = keras.layers.Add(name = 'Add69281', )([Fla92052,Con48278])
Res62239 = keras.layers.Reshape((8, 1), name = 'Res62239', )(Add69281)
Res29391 = keras.layers.Reshape((8, 1, 1), name = 'Res29391', )(Res62239)
Zer71711 = keras.layers.ZeroPadding2D(padding=((0, 0), (6, 0)), name = 'Zer71711', )(Res29391)
Con70758 = keras.layers.Concatenate(axis=3, name = 'Con70758', )([Zer71711,in0Con70758])
Sub59933 = keras.layers.Subtract(name = 'Sub59933', )([in0Sub59933,in1Sub59933])
Res1069 = keras.layers.Reshape((2, 2, 6), name = 'Res1069', )(Sub59933)
Cro33453 = keras.layers.Cropping2D(cropping=((0, 0), (0, 1)), name = 'Cro33453', )(Res1069)
Zer2261 = keras.layers.ZeroPadding2D(padding=((0, 0), (3, 0)), name = 'Zer2261', )(Cro33453)
Up_46804 = keras.layers.UpSampling2D(size=(2, 1), name = 'Up_46804', )(in0Up_46804)
Con62611 = keras.layers.Concatenate(axis=3, name = 'Con62611', )([Up_46804,in0Con62611])
Ave1709 = keras.layers.Average(name = 'Ave1709', )([Zer2261,Con62611])
Zer83198 = keras.layers.ZeroPadding2D(padding=((6, 0), (3, 0)), name = 'Zer83198', )(Ave1709)
Mul24186 = keras.layers.Multiply(name = 'Mul24186', )([Con70758,Zer83198])
Sub9908 = keras.layers.Subtract(name = 'Sub9908', )([Con14952,Mul24186])
model = tf.keras.models.Model(inputs=[in0Ave29211,in1Ave29211,in0Mul20996,in1Mul20996,in0Con14952,in0Max69751,in1Max69751,in0Dot13625,in1Dot13625,in0Con48278,in0Con70758,in0Sub59933,in1Sub59933,in0Up_46804,in0Con62611], outputs=Sub9908)
w = model.get_layer('Dep62896').get_weights() 
w[0] = np.array([[[[0.2795], [0.2144]]], [[[0.5544], [0.3186]]]])
w[1] = np.array([0, 0])
model.get_layer('Dep62896').set_weights(w) 
in0Ave29211 = tf.constant([[[[[0.9894], [0.8907]]], [[[0.6783], [0.2976]]]]])
in1Ave29211 = tf.constant([[[[[0.5043], [0.0502]]], [[[0.0584], [0.7347]]]]])
in0Mul20996 = tf.constant([[[[[0.7783]]], [[[0.8226]]]]])
in1Mul20996 = tf.constant([[[[[0.8599]]], [[[0.0983]]]]])
in0Con14952 = tf.constant([[[[0.5422, 0.8339, 0.0928, 0.2686], [0.4211, 0.625, 0.54, 0.9417], [0.3285, 0.7993, 0.4775, 0.6276], [0.2952, 0.6662, 0.5265, 0.2129], [0.1274, 0.9349, 0.6861, 0.0915], [0.0674, 0.9385, 0.357, 0.2227], [0.3708, 0.1172, 0.7602, 0.7033]], [[0.0711, 0.9264, 0.2908, 0.0066], [0.3369, 0.4719, 0.3016, 0.1309], [0.8584, 0.4722, 0.1741, 0.6487], [0.6452, 0.5923, 0.3085, 0.0502], [0.4661, 0.8051, 0.8382, 0.8331], [0.9142, 0.1963, 0.4594, 0.51], [0.7444, 0.5483, 0.7529, 0.0728]], [[0.6962, 0.1143, 0.7742, 0.4844], [0.4881, 0.2245, 0.4872, 0.4509], [0.0519, 0.7542, 0.8252, 0.0709], [0.3581, 0.0285, 0.7781, 0.9522], [0.3786, 0.4364, 0.925, 0.0413], [0.8315, 0.8864, 0.2568, 0.7217], [0.3543, 0.245, 0.9681, 0.7008]], [[0.6687, 0.0722, 0.1358, 0.8278], [0.1118, 0.2891, 0.8493, 0.2649], [0.6357, 0.8993, 0.4044, 0.3656], [0.0065, 0.5176, 0.6379, 0.2087], [0.4695, 0.2584, 0.3364, 0.9797], [0.5895, 0.4841, 0.9307, 0.2974], [0.3256, 0.0198, 0.3583, 0.1413]], [[0.6512, 0.705, 0.0618, 0.2537], [0.1958, 0.5707, 0.5813, 0.7583], [0.4474, 0.5055, 0.0926, 0.2703], [0.0334, 0.0065, 0.5448, 0.9535], [0.4717, 0.4983, 0.7608, 0.8235], [0.5761, 0.7457, 0.9755, 0.0912], [0.3874, 0.0896, 0.811, 0.4958]], [[0.1031, 0.5877, 0.6099, 0.3846], [0.9824, 0.657, 0.3853, 0.7639], [0.6151, 0.4841, 0.3833, 0.6662], [0.2594, 0.2928, 0.3981, 0.9593], [0.1769, 0.5415, 0.535, 0.1533], [0.0264, 0.2594, 0.071, 0.8589], [0.4082, 0.0262, 0.4297, 0.2899]], [[0.5992, 0.5482, 0.0549, 0.6122], [0.3635, 0.3906, 0.1481, 0.9983], [0.4799, 0.1903, 0.8132, 0.962], [0.2882, 0.5898, 0.1454, 0.9215], [0.1247, 0.2098, 0.1934, 0.9663], [0.9886, 0.2091, 0.5288, 0.4883], [0.1639, 0.3672, 0.3617, 0.6778]], [[0.8051, 0.1712, 0.7568, 0.8837], [0.688, 0.0856, 0.5278, 0.4881], [0.427, 0.043, 0.8077, 0.257], [0.4625, 0.205, 0.1342, 0.0943], [0.0359, 0.2108, 0.121, 0.7479], [0.1851, 0.4588, 0.4366, 0.2942], [0.5174, 0.4445, 0.8611, 0.1649]]]])
in0Max69751 = tf.constant([[[[0.0387, 0.1898], [0.2866, 0.331]], [[0.4796, 0.8163], [0.2535, 0.3888]]]])
in1Max69751 = tf.constant([[[[0.3858, 0.1544], [0.5657, 0.8625]], [[0.6842, 0.4511], [0.26, 0.229]]]])
in0Dot13625 = tf.constant([[0.1922, 0.6416, 0.2012]])
in1Dot13625 = tf.constant([[0.1523, 0.4839, 0.8021]])
in0Con48278 = tf.constant([[0.8934, 0.8867, 0.8308, 0.9825, 0.2827, 0.1312, 0.0414]])
in0Con70758 = tf.constant([[[[0.9488, 0.5073, 0.7764, 0.3347, 0.0627], [0.7311, 0.5338, 0.5121, 0.9468, 0.8782], [0.151, 0.2318, 0.2462, 0.8906, 0.3135], [0.9724, 0.9698, 0.0068, 0.7653, 0.7381], [0.4508, 0.1811, 0.2636, 0.5554, 0.4018], [0.0764, 0.6837, 0.302, 0.3328, 0.4122], [0.831, 0.3028, 0.6878, 0.0715, 0.7464]], [[0.5142, 0.6735, 0.7806, 0.5495, 0.7963], [0.9033, 0.3622, 0.1542, 0.7219, 0.6602], [0.5336, 0.5119, 0.6097, 0.7941, 0.9708], [0.3918, 0.9841, 0.013, 0.8947, 0.0884], [0.4625, 0.6005, 0.744, 0.8665, 0.1505], [0.399, 0.6004, 0.3934, 0.9843, 0.2344], [0.9026, 0.8927, 0.1023, 0.826, 0.6445]], [[0.2569, 0.2515, 0.6251, 0.6929, 0.9002], [0.4366, 0.9566, 0.078, 0.7023, 0.5054], [0.2993, 0.1104, 0.996, 0.133, 0.5338], [0.9633, 0.1868, 0.7116, 0.5128, 0.9194], [0.2577, 0.9847, 0.3605, 0.828, 0.1056], [0.8726, 0.5003, 0.4424, 0.3883, 0.8308], [0.5228, 0.2188, 0.3157, 0.2512, 0.6587]], [[0.8395, 0.6102, 0.8749, 0.8007, 0.201], [0.6836, 0.9174, 0.7313, 0.852, 0.9284], [0.6246, 0.4549, 0.902, 0.9081, 0.2771], [0.309, 0.2335, 0.1411, 0.237, 0.8335], [0.4467, 0.1259, 0.4937, 0.2147, 0.339], [0.2266, 0.3063, 0.4886, 0.8822, 0.0503], [0.9624, 0.5875, 0.5963, 0.9864, 0.3778]], [[0.7445, 0.9392, 0.6498, 0.2474, 0.733], [0.8328, 0.0718, 0.723, 0.9096, 0.7285], [0.618, 0.1424, 0.0565, 0.678, 0.7741], [0.163, 0.572, 0.7195, 0.1413, 0.7641], [0.6451, 0.5173, 0.2069, 0.9726, 0.6718], [0.5982, 0.7159, 0.8397, 0.3144, 0.7171], [0.7598, 0.1526, 0.2906, 0.854, 0.0193]], [[0.5968, 0.1885, 0.0963, 0.9511, 0.6042], [0.3489, 0.1905, 0.0905, 0.9186, 0.1268], [0.8643, 0.0608, 0.9905, 0.6552, 0.11], [0.3215, 0.6715, 0.5662, 0.501, 0.17], [0.3218, 0.9953, 0.268, 0.0155, 0.3678], [0.594, 0.2983, 0.4879, 0.5476, 0.205], [0.4465, 0.514, 0.5722, 0.3184, 0.5389]], [[0.094, 0.6924, 0.4177, 0.2431, 0.1493], [0.7125, 0.8528, 0.5325, 0.4745, 0.3192], [0.9271, 0.8229, 0.5227, 0.2051, 0.4801], [0.9836, 0.4832, 0.3571, 0.3572, 0.3325], [0.8662, 0.055, 0.8142, 0.4133, 0.6032], [0.5762, 0.0813, 0.8226, 0.4881, 0.3409], [0.0237, 0.6065, 0.6412, 0.2473, 0.0805]], [[0.7765, 0.5593, 0.2447, 0.4359, 0.3099], [0.2308, 0.7699, 0.6841, 0.594, 0.742], [0.5368, 0.086, 0.6497, 0.7757, 0.304], [0.8823, 0.6256, 0.4163, 0.6763, 0.0294], [0.9955, 0.7102, 0.6914, 0.1536, 0.6077], [0.5074, 0.9368, 0.4815, 0.2402, 0.207], [0.2011, 0.9973, 0.5935, 0.1683, 0.2177]]]])
in0Sub59933 = tf.constant([[[[[0.813, 0.7058, 0.4745], [0.3051, 0.648, 0.125]], [[0.5349, 0.071, 0.35], [0.7143, 0.1931, 0.3421]]], [[[0.4493, 0.8324, 0.2516], [0.2175, 0.3438, 0.456]], [[0.4572, 0.7855, 0.7673], [0.6848, 0.6959, 0.061]]]]])
in1Sub59933 = tf.constant([[[[[0.022, 0.6923, 0.0527], [0.0972, 0.2623, 0.047]], [[0.9786, 0.5773, 0.1561], [0.0368, 0.2338, 0.911]]], [[[0.3225, 0.6106, 0.2402], [0.3631, 0.0455, 0.8217]], [[0.9712, 0.0233, 0.8985], [0.2013, 0.5257, 0.4888]]]]])
in0Up_46804 = tf.constant([[[[1.0787, 1.3238], [1.0965, 1.9775], [1.4473, 1.932], [1.1218, 1.2144]]]])
in0Con62611 = tf.constant([[[[0.5511, 0.4427, 0.137, 0.3476], [0.8014, 0.7708, 0.7633, 0.6152], [0.6277, 0.8139, 0.037, 0.4112], [0.7253, 0.3855, 0.6471, 0.3562]], [[0.743, 0.2069, 0.1583, 0.4479], [0.5763, 0.0442, 0.5226, 0.791], [0.5484, 0.8886, 0.655, 0.5204], [0.9581, 0.2551, 0.7441, 0.3893]]]])
print (np.array2string(model.predict([in0Ave29211,in1Ave29211,in0Mul20996,in1Mul20996,in0Con14952,in0Max69751,in1Max69751,in0Dot13625,in1Dot13625,in0Con48278,in0Con70758,in0Sub59933,in1Sub59933,in0Up_46804,in0Con62611],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Sub9908.png')

LAve29211 = average_layer([[[[[[0.9894], [0.8907]]], [[[0.6783], [0.2976]]]]], [[[[[0.5043], [0.0502]]], [[[0.0584], [0.7347]]]]]], Ave29211), 
LMul20996 = multiply_layer([[[[[[0.7783]]], [[[0.8226]]]]], [[[[[0.8599]]], [[[0.0983]]]]]], Mul20996), 
LZer99645 = zero_padding3D_layer(Mul20996, 0, 0, 0, 0, 1, 0, Zer99645), 
LAdd55168 = add_layer([Ave29211,Zer99645], Add55168), 
LRes3530 = reshape_layer(Add55168, [2, 1, 2], Res3530), 
LDep62896 = depthwise_conv2D_layer(Res3530, 2, 1,[[[[0.2795], [0.2144]]], [[[0.5544], [0.3186]]]],[0, 0], 1, 1, false, Dep62896), 
LZer84351 = zero_padding2D_layer(Dep62896, 7, 0, 6, 0, Zer84351), 
LCon14952 = concatenate_layer([Zer84351,[[[[0.5422, 0.8339, 0.0928, 0.2686], [0.4211, 0.625, 0.54, 0.9417], [0.3285, 0.7993, 0.4775, 0.6276], [0.2952, 0.6662, 0.5265, 0.2129], [0.1274, 0.9349, 0.6861, 0.0915], [0.0674, 0.9385, 0.357, 0.2227], [0.3708, 0.1172, 0.7602, 0.7033]], [[0.0711, 0.9264, 0.2908, 0.0066], [0.3369, 0.4719, 0.3016, 0.1309], [0.8584, 0.4722, 0.1741, 0.6487], [0.6452, 0.5923, 0.3085, 0.0502], [0.4661, 0.8051, 0.8382, 0.8331], [0.9142, 0.1963, 0.4594, 0.51], [0.7444, 0.5483, 0.7529, 0.0728]], [[0.6962, 0.1143, 0.7742, 0.4844], [0.4881, 0.2245, 0.4872, 0.4509], [0.0519, 0.7542, 0.8252, 0.0709], [0.3581, 0.0285, 0.7781, 0.9522], [0.3786, 0.4364, 0.925, 0.0413], [0.8315, 0.8864, 0.2568, 0.7217], [0.3543, 0.245, 0.9681, 0.7008]], [[0.6687, 0.0722, 0.1358, 0.8278], [0.1118, 0.2891, 0.8493, 0.2649], [0.6357, 0.8993, 0.4044, 0.3656], [0.0065, 0.5176, 0.6379, 0.2087], [0.4695, 0.2584, 0.3364, 0.9797], [0.5895, 0.4841, 0.9307, 0.2974], [0.3256, 0.0198, 0.3583, 0.1413]], [[0.6512, 0.705, 0.0618, 0.2537], [0.1958, 0.5707, 0.5813, 0.7583], [0.4474, 0.5055, 0.0926, 0.2703], [0.0334, 0.0065, 0.5448, 0.9535], [0.4717, 0.4983, 0.7608, 0.8235], [0.5761, 0.7457, 0.9755, 0.0912], [0.3874, 0.0896, 0.811, 0.4958]], [[0.1031, 0.5877, 0.6099, 0.3846], [0.9824, 0.657, 0.3853, 0.7639], [0.6151, 0.4841, 0.3833, 0.6662], [0.2594, 0.2928, 0.3981, 0.9593], [0.1769, 0.5415, 0.535, 0.1533], [0.0264, 0.2594, 0.071, 0.8589], [0.4082, 0.0262, 0.4297, 0.2899]], [[0.5992, 0.5482, 0.0549, 0.6122], [0.3635, 0.3906, 0.1481, 0.9983], [0.4799, 0.1903, 0.8132, 0.962], [0.2882, 0.5898, 0.1454, 0.9215], [0.1247, 0.2098, 0.1934, 0.9663], [0.9886, 0.2091, 0.5288, 0.4883], [0.1639, 0.3672, 0.3617, 0.6778]], [[0.8051, 0.1712, 0.7568, 0.8837], [0.688, 0.0856, 0.5278, 0.4881], [0.427, 0.043, 0.8077, 0.257], [0.4625, 0.205, 0.1342, 0.0943], [0.0359, 0.2108, 0.121, 0.7479], [0.1851, 0.4588, 0.4366, 0.2942], [0.5174, 0.4445, 0.8611, 0.1649]]]]], 3, Con14952), 
LMax69751 = maximum_layer([[[[[0.0387, 0.1898], [0.2866, 0.331]], [[0.4796, 0.8163], [0.2535, 0.3888]]]], [[[[0.3858, 0.1544], [0.5657, 0.8625]], [[0.6842, 0.4511], [0.26, 0.229]]]]], Max69751), 
LRes63588 = reshape_layer(Max69751, [2, 4], Res63588), 
LFla92052 = flatten_layer(Res63588, Fla92052), 
LDot13625 = dot_layer([[0.1922, 0.6416, 0.2012]], [[0.1523, 0.4839, 0.8021]], 1, 1, Dot13625), 
LCon48278 = concatenate_layer([Dot13625,[[0.8934, 0.8867, 0.8308, 0.9825, 0.2827, 0.1312, 0.0414]]], 1, Con48278), 
LAdd69281 = add_layer([Fla92052,Con48278], Add69281), 
LRes62239 = reshape_layer(Add69281, [8, 1], Res62239), 
LRes29391 = reshape_layer(Res62239, [8, 1, 1], Res29391), 
LZer71711 = zero_padding2D_layer(Res29391, 0, 0, 6, 0, Zer71711), 
LCon70758 = concatenate_layer([Zer71711,[[[[0.9488, 0.5073, 0.7764, 0.3347, 0.0627], [0.7311, 0.5338, 0.5121, 0.9468, 0.8782], [0.151, 0.2318, 0.2462, 0.8906, 0.3135], [0.9724, 0.9698, 0.0068, 0.7653, 0.7381], [0.4508, 0.1811, 0.2636, 0.5554, 0.4018], [0.0764, 0.6837, 0.302, 0.3328, 0.4122], [0.831, 0.3028, 0.6878, 0.0715, 0.7464]], [[0.5142, 0.6735, 0.7806, 0.5495, 0.7963], [0.9033, 0.3622, 0.1542, 0.7219, 0.6602], [0.5336, 0.5119, 0.6097, 0.7941, 0.9708], [0.3918, 0.9841, 0.013, 0.8947, 0.0884], [0.4625, 0.6005, 0.744, 0.8665, 0.1505], [0.399, 0.6004, 0.3934, 0.9843, 0.2344], [0.9026, 0.8927, 0.1023, 0.826, 0.6445]], [[0.2569, 0.2515, 0.6251, 0.6929, 0.9002], [0.4366, 0.9566, 0.078, 0.7023, 0.5054], [0.2993, 0.1104, 0.996, 0.133, 0.5338], [0.9633, 0.1868, 0.7116, 0.5128, 0.9194], [0.2577, 0.9847, 0.3605, 0.828, 0.1056], [0.8726, 0.5003, 0.4424, 0.3883, 0.8308], [0.5228, 0.2188, 0.3157, 0.2512, 0.6587]], [[0.8395, 0.6102, 0.8749, 0.8007, 0.201], [0.6836, 0.9174, 0.7313, 0.852, 0.9284], [0.6246, 0.4549, 0.902, 0.9081, 0.2771], [0.309, 0.2335, 0.1411, 0.237, 0.8335], [0.4467, 0.1259, 0.4937, 0.2147, 0.339], [0.2266, 0.3063, 0.4886, 0.8822, 0.0503], [0.9624, 0.5875, 0.5963, 0.9864, 0.3778]], [[0.7445, 0.9392, 0.6498, 0.2474, 0.733], [0.8328, 0.0718, 0.723, 0.9096, 0.7285], [0.618, 0.1424, 0.0565, 0.678, 0.7741], [0.163, 0.572, 0.7195, 0.1413, 0.7641], [0.6451, 0.5173, 0.2069, 0.9726, 0.6718], [0.5982, 0.7159, 0.8397, 0.3144, 0.7171], [0.7598, 0.1526, 0.2906, 0.854, 0.0193]], [[0.5968, 0.1885, 0.0963, 0.9511, 0.6042], [0.3489, 0.1905, 0.0905, 0.9186, 0.1268], [0.8643, 0.0608, 0.9905, 0.6552, 0.11], [0.3215, 0.6715, 0.5662, 0.501, 0.17], [0.3218, 0.9953, 0.268, 0.0155, 0.3678], [0.594, 0.2983, 0.4879, 0.5476, 0.205], [0.4465, 0.514, 0.5722, 0.3184, 0.5389]], [[0.094, 0.6924, 0.4177, 0.2431, 0.1493], [0.7125, 0.8528, 0.5325, 0.4745, 0.3192], [0.9271, 0.8229, 0.5227, 0.2051, 0.4801], [0.9836, 0.4832, 0.3571, 0.3572, 0.3325], [0.8662, 0.055, 0.8142, 0.4133, 0.6032], [0.5762, 0.0813, 0.8226, 0.4881, 0.3409], [0.0237, 0.6065, 0.6412, 0.2473, 0.0805]], [[0.7765, 0.5593, 0.2447, 0.4359, 0.3099], [0.2308, 0.7699, 0.6841, 0.594, 0.742], [0.5368, 0.086, 0.6497, 0.7757, 0.304], [0.8823, 0.6256, 0.4163, 0.6763, 0.0294], [0.9955, 0.7102, 0.6914, 0.1536, 0.6077], [0.5074, 0.9368, 0.4815, 0.2402, 0.207], [0.2011, 0.9973, 0.5935, 0.1683, 0.2177]]]]], 3, Con70758), 
LSub59933 = subtract_layer([[[[[0.813, 0.7058, 0.4745], [0.3051, 0.648, 0.125]], [[0.5349, 0.071, 0.35], [0.7143, 0.1931, 0.3421]]], [[[0.4493, 0.8324, 0.2516], [0.2175, 0.3438, 0.456]], [[0.4572, 0.7855, 0.7673], [0.6848, 0.6959, 0.061]]]]], [[[[[0.022, 0.6923, 0.0527], [0.0972, 0.2623, 0.047]], [[0.9786, 0.5773, 0.1561], [0.0368, 0.2338, 0.911]]], [[[0.3225, 0.6106, 0.2402], [0.3631, 0.0455, 0.8217]], [[0.9712, 0.0233, 0.8985], [0.2013, 0.5257, 0.4888]]]]], Sub59933), 
LRes1069 = reshape_layer(Sub59933, [2, 2, 6], Res1069), 
LCro33453 = cropping2D_layer(Res1069, 0, 0, 0, 1, Cro33453), 
LZer2261 = zero_padding2D_layer(Cro33453, 0, 0, 3, 0, Zer2261), 
LUp_46804 = up_sampling2D_layer([[[[1.0787, 1.3238], [1.0965, 1.9775], [1.4473, 1.932], [1.1218, 1.2144]]]], 2, 1, Up_46804), 
LCon62611 = concatenate_layer([Up_46804,[[[[0.5511, 0.4427, 0.137, 0.3476], [0.8014, 0.7708, 0.7633, 0.6152], [0.6277, 0.8139, 0.037, 0.4112], [0.7253, 0.3855, 0.6471, 0.3562]], [[0.743, 0.2069, 0.1583, 0.4479], [0.5763, 0.0442, 0.5226, 0.791], [0.5484, 0.8886, 0.655, 0.5204], [0.9581, 0.2551, 0.7441, 0.3893]]]]], 3, Con62611), 
LAve1709 = average_layer([Zer2261,Con62611], Ave1709), 
LZer83198 = zero_padding2D_layer(Ave1709, 6, 0, 3, 0, Zer83198), 
LMul24186 = multiply_layer([Con70758,Zer83198], Mul24186), 
LSub9908 = subtract_layer(Con14952,Mul24186, Sub9908), 
exec_layers([LAve29211,LMul20996,LZer99645,LAdd55168,LRes3530,LDep62896,LZer84351,LCon14952,LMax69751,LRes63588,LFla92052,LDot13625,LCon48278,LAdd69281,LRes62239,LRes29391,LZer71711,LCon70758,LSub59933,LRes1069,LCro33453,LZer2261,LUp_46804,LCon62611,LAve1709,LZer83198,LMul24186,LSub9908],["Ave29211","Mul20996","Zer99645","Add55168","Res3530","Dep62896","Zer84351","Con14952","Max69751","Res63588","Fla92052","Dot13625","Con48278","Add69281","Res62239","Res29391","Zer71711","Con70758","Sub59933","Res1069","Cro33453","Zer2261","Up_46804","Con62611","Ave1709","Zer83198","Mul24186","Sub9908"],Sub9908,"Sub9908")

Actual (Unparsed): [[[[0.0000000, 0.0000000, 0.5422000, 0.8339000, 0.0928000, 0.2686000], [0.0000000, 0.0000000, 0.4211000, 0.6250000, 0.5400000, 0.9417000], [0.0000000, 0.0000000, 0.3285000, 0.7993000, 0.4775000, 0.6276000], [0.0000000, 0.0000000, 0.2952000, 0.6662000, 0.5265000, 0.2129000], [0.0000000, 0.0000000, 0.1274000, 0.9349000, 0.6861000, 0.0915000], [0.0000000, 0.0000000, 0.0674000, 0.9385000, 0.3570000, 0.2227000], [0.0000000, 0.0000000, 0.3708000, 0.1172000, 0.7602000, 0.7033000]], [[0.0000000, 0.0000000, 0.0711000, 0.9264000, 0.2908000, 0.0066000], [0.0000000, 0.0000000, 0.3369000, 0.4719000, 0.3016000, 0.1309000], [0.0000000, 0.0000000, 0.8584000, 0.4722000, 0.1741000, 0.6487000], [0.0000000, 0.0000000, 0.6452000, 0.5923000, 0.3085000, 0.0502000], [0.0000000, 0.0000000, 0.4661000, 0.8051000, 0.8382000, 0.8331000], [0.0000000, 0.0000000, 0.9142000, 0.1963000, 0.4594000, 0.5100000], [0.0000000, 0.0000000, 0.7444000, 0.5483000, 0.7529000, 0.0728000]], [[0.0000000, 0.0000000, 0.6962000, 0.1143000, 0.7742000, 0.4844000], [0.0000000, 0.0000000, 0.4881000, 0.2245000, 0.4872000, 0.4509000], [0.0000000, 0.0000000, 0.0519000, 0.7542000, 0.8252000, 0.0709000], [0.0000000, 0.0000000, 0.3581000, 0.0285000, 0.7781000, 0.9522000], [0.0000000, 0.0000000, 0.3786000, 0.4364000, 0.9250000, 0.0413000], [0.0000000, 0.0000000, 0.8315000, 0.8864000, 0.2568000, 0.7217000], [0.0000000, 0.0000000, 0.3543000, 0.2450000, 0.9681000, 0.7008000]], [[0.0000000, 0.0000000, 0.6687000, 0.0722000, 0.1358000, 0.8278000], [0.0000000, 0.0000000, 0.1118000, 0.2891000, 0.8493000, 0.2649000], [0.0000000, 0.0000000, 0.6357000, 0.8993000, 0.4044000, 0.3656000], [0.0000000, 0.0000000, 0.0065000, 0.5176000, 0.6379000, 0.2087000], [0.0000000, 0.0000000, 0.4695000, 0.2584000, 0.3364000, 0.9797000], [0.0000000, 0.0000000, 0.5895000, 0.4841000, 0.9307000, 0.2974000], [0.0000000, 0.0000000, 0.3256000, 0.0198000, 0.3583000, 0.1413000]], [[0.0000000, 0.0000000, 0.6512000, 0.7050000, 0.0618000, 0.2537000], [0.0000000, 0.0000000, 0.1958000, 0.5707000, 0.5813000, 0.7583000], [0.0000000, 0.0000000, 0.4474000, 0.5055000, 0.0926000, 0.2703000], [0.0000000, 0.0000000, 0.0334000, 0.0065000, 0.5448000, 0.9535000], [0.0000000, 0.0000000, 0.4717000, 0.4983000, 0.7608000, 0.8235000], [0.0000000, 0.0000000, 0.5761000, 0.7457000, 0.9755000, 0.0912000], [0.0000000, 0.0000000, 0.3874000, 0.0896000, 0.8110000, 0.4958000]], [[0.0000000, 0.0000000, 0.1031000, 0.5877000, 0.6099000, 0.3846000], [0.0000000, 0.0000000, 0.9824000, 0.6570000, 0.3853000, 0.7639000], [0.0000000, 0.0000000, 0.6151000, 0.4841000, 0.3833000, 0.6662000], [0.0000000, 0.0000000, 0.2594000, 0.2928000, 0.3981000, 0.9593000], [0.0000000, 0.0000000, 0.1769000, 0.5415000, 0.5350000, 0.1533000], [0.0000000, 0.0000000, 0.0264000, 0.2594000, 0.0710000, 0.8589000], [0.0000000, 0.0000000, 0.4082000, 0.0262000, 0.4297000, 0.2899000]], [[0.0000000, 0.0000000, 0.5992000, 0.5482000, 0.0549000, 0.6122000], [0.0000000, 0.0000000, 0.3635000, 0.3906000, 0.1481000, 0.9983000], [0.0000000, 0.0000000, 0.4799000, 0.1903000, 0.8132000, 0.9620000], [0.0000000, -0.6510448, 0.1550542, 0.5107559, 0.1209318, 0.8637115], [0.0000000, -0.8564552, 0.1026615, -0.1039927, 0.0356640, 0.7807557], [0.0000000, -0.5566092, 0.9630840, -0.1256571, 0.5197702, 0.4182110], [-0.3741437, -0.0145506, -0.1839581, 0.1769559, 0.2339943, 0.6603234]], [[0.0000000, 0.0000000, 0.8051000, 0.1712000, 0.7568000, 0.8837000], [0.0000000, 0.0000000, 0.6880000, 0.0856000, 0.5278000, 0.4881000], [0.0000000, 0.0000000, 0.4270000, 0.0430000, 0.8077000, 0.2570000], [0.0000000, -0.5839944, 0.2300896, 0.1619338, 0.0806709, 0.0877159], [0.0000000, -0.9843006, -0.1687441, 0.1955201, 0.0808643, 0.5075547], [0.0000000, -0.4901484, -0.0717705, 0.2448695, 0.3579345, 0.2403386], [0.1443840, 0.2901518, 0.0339588, 0.4120059, 0.7733821, 0.1623311]]]]

Expected (Unparsed): [[[[0,0.0,0.5422,0.8339,0.0928,0.2686],[0,0.0,0.4211,0.625,0.54,0.9417],[0,0.0,0.3285,0.7993,0.4775,0.6276],[0,0.0,0.2952,0.6662,0.5265,0.2129],[0,0.0,0.1274,0.9349,0.6861,0.0915],[0,0.0,0.0674,0.9385,0.357,0.2227],[0.0,0.0,0.3708,0.1172,0.7602,0.7033]],[[0,0.0,0.0711,0.9264,0.2908,0.0066],[0,0.0,0.3369,0.4719,0.3016,0.1309],[0,0.0,0.8584,0.4722,0.1741,0.6487],[0,0.0,0.6452,0.5923,0.3085,0.0502],[0,0.0,0.4661,0.8051,0.8382,0.8331],[0,0.0,0.9142,0.1963,0.4594,0.51],[0.0,0.0,0.7444,0.5483,0.7529,0.0728]],[[0,0.0,0.6962,0.1143,0.7742,0.4844],[0,0.0,0.4881,0.2245,0.4872,0.4509],[0,0.0,0.0519,0.7542,0.8252,0.0709],[0,0.0,0.3581,0.0285,0.7781,0.9522],[0,0.0,0.3786,0.4364,0.925,0.0413],[0,0.0,0.8315,0.8864,0.2568,0.7217],[0.0,0.0,0.3543,0.245,0.9681,0.7008]],[[0,0.0,0.6687,0.0722,0.1358,0.8278],[0,0.0,0.1118,0.2891,0.8493,0.2649],[0,0.0,0.6357,0.8993,0.4044,0.3656],[0,0.0,0.0065,0.5176,0.6379,0.2087],[0,0.0,0.4695,0.2584,0.3364,0.9797],[0,0.0,0.5895,0.4841,0.9307,0.2974],[0.0,0.0,0.3256,0.0198,0.3583,0.1413]],[[0,0.0,0.6512,0.705,0.0618,0.2537],[0,0.0,0.1958,0.5707,0.5813,0.7583],[0,0.0,0.4474,0.5055,0.0926,0.2703],[0,0.0,0.0334,0.0065,0.5448,0.9535],[0,0.0,0.4717,0.4983,0.7608,0.8235],[0,0.0,0.5761,0.7457,0.9755,0.0912],[0.0,0.0,0.3874,0.0896,0.811,0.4958]],[[0,0.0,0.1031,0.5877,0.6099,0.3846],[0,0.0,0.9824,0.657,0.3853,0.7639],[0,0.0,0.6151,0.4841,0.3833,0.6662],[0,0.0,0.2594,0.2928,0.3981,0.9593],[0,0.0,0.1769,0.5415,0.535,0.1533],[0,0.0,0.0264,0.2594,0.071,0.8589],[0.0,0.0,0.4082,0.0262,0.4297,0.2899]],[[0,0.0,0.5992,0.5482,0.0549,0.6122],[0,0.0,0.3635,0.3906,0.1481,0.9983],[0,0.0,0.4799,0.1903,0.8132,0.962],[0.0,-0.6510448400000001,0.15505424,0.5107559150000001,0.1209318,0.8637115],[0.0,-0.85645525,0.1026615,-0.10399268000000006,0.035664055,0.7807556800000001],[0.0,-0.5566092,0.9630839950000001,-0.12565706999999998,0.51977015,0.41821096],[-0.37414368,-0.014550615,-0.18395807500000005,0.17695596000000005,0.23399428000000003,0.6603234499999999]],[[0,0.0,0.8051,0.1712,0.7568,0.8837],[0,0.0,0.688,0.0856,0.5278,0.4881],[0,0.0,0.427,0.043,0.8077,0.257],[0.0,-0.58399437,0.2300896,0.16193376499999998,0.08067085500000001,0.08771587],[0.0,-0.984300625,-0.16874413000000005,0.19552006,0.08086432,0.50755465],[0.0,-0.49014839999999993,-0.07177055999999998,0.24486955000000002,0.3579345,0.2403386],[0.14438395500000012,0.290151839836,0.033958825000000026,0.412005875,0.77338204,0.16233113999999998]]]]

Actual:   [[[[0, 0, 0.5422, 0.8339, 0.0928, 0.2686], [0, 0, 0.4211, 0.625, 0.54, 0.9417], [0, 0, 0.3285, 0.7993, 0.4775, 0.6276], [0, 0, 0.2952, 0.6662, 0.5265, 0.2129], [0, 0, 0.1274, 0.9349, 0.6861, 0.0915], [0, 0, 0.0674, 0.9385, 0.357, 0.2227], [0, 0, 0.3708, 0.1172, 0.7602, 0.7033]], [[0, 0, 0.0711, 0.9264, 0.2908, 0.0066], [0, 0, 0.3369, 0.4719, 0.3016, 0.1309], [0, 0, 0.8584, 0.4722, 0.1741, 0.6487], [0, 0, 0.6452, 0.5923, 0.3085, 0.0502], [0, 0, 0.4661, 0.8051, 0.8382, 0.8331], [0, 0, 0.9142, 0.1963, 0.4594, 0.51], [0, 0, 0.7444, 0.5483, 0.7529, 0.0728]], [[0, 0, 0.6962, 0.1143, 0.7742, 0.4844], [0, 0, 0.4881, 0.2245, 0.4872, 0.4509], [0, 0, 0.0519, 0.7542, 0.8252, 0.0709], [0, 0, 0.3581, 0.0285, 0.7781, 0.9522], [0, 0, 0.3786, 0.4364, 0.925, 0.0413], [0, 0, 0.8315, 0.8864, 0.2568, 0.7217], [0, 0, 0.3543, 0.245, 0.9681, 0.7008]], [[0, 0, 0.6687, 0.0722, 0.1358, 0.8278], [0, 0, 0.1118, 0.2891, 0.8493, 0.2649], [0, 0, 0.6357, 0.8993, 0.4044, 0.3656], [0, 0, 0.0065, 0.5176, 0.6379, 0.2087], [0, 0, 0.4695, 0.2584, 0.3364, 0.9797], [0, 0, 0.5895, 0.4841, 0.9307, 0.2974], [0, 0, 0.3256, 0.0198, 0.3583, 0.1413]], [[0, 0, 0.6512, 0.705, 0.0618, 0.2537], [0, 0, 0.1958, 0.5707, 0.5813, 0.7583], [0, 0, 0.4474, 0.5055, 0.0926, 0.2703], [0, 0, 0.0334, 0.0065, 0.5448, 0.9535], [0, 0, 0.4717, 0.4983, 0.7608, 0.8235], [0, 0, 0.5761, 0.7457, 0.9755, 0.0912], [0, 0, 0.3874, 0.0896, 0.811, 0.4958]], [[0, 0, 0.1031, 0.5877, 0.6099, 0.3846], [0, 0, 0.9824, 0.657, 0.3853, 0.7639], [0, 0, 0.6151, 0.4841, 0.3833, 0.6662], [0, 0, 0.2594, 0.2928, 0.3981, 0.9593], [0, 0, 0.1769, 0.5415, 0.535, 0.1533], [0, 0, 0.0264, 0.2594, 0.071, 0.8589], [0, 0, 0.4082, 0.0262, 0.4297, 0.2899]], [[0, 0, 0.5992, 0.5482, 0.0549, 0.6122], [0, 0, 0.3635, 0.3906, 0.1481, 0.9983], [0, 0, 0.4799, 0.1903, 0.8132, 0.962], [0, -0.651, 0.1551, 0.5108, 0.121, 0.8638], [0, -0.8564, 0.1027, -0.1039, 0.0357, 0.7808], [0, -0.5566, 0.9631, -0.1256, 0.5198, 0.4183], [-0.3741, -0.0145, -0.1839, 0.177, 0.234, 0.6604]], [[0, 0, 0.8051, 0.1712, 0.7568, 0.8837], [0, 0, 0.688, 0.0856, 0.5278, 0.4881], [0, 0, 0.427, 0.043, 0.8077, 0.257], [0, -0.5839, 0.2301, 0.162, 0.0807, 0.0878], [0, -0.9843, -0.1687, 0.1956, 0.0809, 0.5076], [0, -0.4901, -0.0717, 0.2449, 0.358, 0.2404], [0.1444, 0.2902, 0.034, 0.4121, 0.7734, 0.1624]]]]

Expected: [[[[0, 0, 0.5422, 0.8339, 0.0928, 0.2686], [0, 0, 0.4211, 0.625, 0.54, 0.9417], [0, 0, 0.3285, 0.7993, 0.4775, 0.6276], [0, 0, 0.2952, 0.6662, 0.5265, 0.2129], [0, 0, 0.1274, 0.9349, 0.6861, 0.0915], [0, 0, 0.0674, 0.9385, 0.357, 0.2227], [0, 0, 0.3708, 0.1172, 0.7602, 0.7033]], [[0, 0, 0.0711, 0.9264, 0.2908, 0.0066], [0, 0, 0.3369, 0.4719, 0.3016, 0.1309], [0, 0, 0.8584, 0.4722, 0.1741, 0.6487], [0, 0, 0.6452, 0.5923, 0.3085, 0.0502], [0, 0, 0.4661, 0.8051, 0.8382, 0.8331], [0, 0, 0.9142, 0.1963, 0.4594, 0.51], [0, 0, 0.7444, 0.5483, 0.7529, 0.0728]], [[0, 0, 0.6962, 0.1143, 0.7742, 0.4844], [0, 0, 0.4881, 0.2245, 0.4872, 0.4509], [0, 0, 0.0519, 0.7542, 0.8252, 0.0709], [0, 0, 0.3581, 0.0285, 0.7781, 0.9522], [0, 0, 0.3786, 0.4364, 0.925, 0.0413], [0, 0, 0.8315, 0.8864, 0.2568, 0.7217], [0, 0, 0.3543, 0.245, 0.9681, 0.7008]], [[0, 0, 0.6687, 0.0722, 0.1358, 0.8278], [0, 0, 0.1118, 0.2891, 0.8493, 0.2649], [0, 0, 0.6357, 0.8993, 0.4044, 0.3656], [0, 0, 0.0065, 0.5176, 0.6379, 0.2087], [0, 0, 0.4695, 0.2584, 0.3364, 0.9797], [0, 0, 0.5895, 0.4841, 0.9307, 0.2974], [0, 0, 0.3256, 0.0198, 0.3583, 0.1413]], [[0, 0, 0.6512, 0.705, 0.0618, 0.2537], [0, 0, 0.1958, 0.5707, 0.5813, 0.7583], [0, 0, 0.4474, 0.5055, 0.0926, 0.2703], [0, 0, 0.0334, 0.0065, 0.5448, 0.9535], [0, 0, 0.4717, 0.4983, 0.7608, 0.8235], [0, 0, 0.5761, 0.7457, 0.9755, 0.0912], [0, 0, 0.3874, 0.0896, 0.811, 0.4958]], [[0, 0, 0.1031, 0.5877, 0.6099, 0.3846], [0, 0, 0.9824, 0.657, 0.3853, 0.7639], [0, 0, 0.6151, 0.4841, 0.3833, 0.6662], [0, 0, 0.2594, 0.2928, 0.3981, 0.9593], [0, 0, 0.1769, 0.5415, 0.535, 0.1533], [0, 0, 0.0264, 0.2594, 0.071, 0.8589], [0, 0, 0.4082, 0.0262, 0.4297, 0.2899]], [[0, 0, 0.5992, 0.5482, 0.0549, 0.6122], [0, 0, 0.3635, 0.3906, 0.1481, 0.9983], [0, 0, 0.4799, 0.1903, 0.8132, 0.962], [0, -0.651, 0.1551, 0.5108, 0.121, 0.8638], [0, -0.8564, 0.1027, -0.1039, 0.0357, 0.7808], [0, -0.5566, 0.9631, -0.1256, 0.5198, 0.4183], [-0.3741, -0.0145, -0.1839, 0.177, 0.234, 0.6604]], [[0, 0, 0.8051, 0.1712, 0.7568, 0.8837], [0, 0, 0.688, 0.0856, 0.5278, 0.4881], [0, 0, 0.427, 0.043, 0.8077, 0.257], [0, -0.5839, 0.2301, 0.162, 0.0807, 0.0878], [0, -0.9843, -0.1687, 0.1956, 0.0809, 0.5076], [0, -0.4901, -0.0717, 0.2449, 0.358, 0.2404], [0.1444, 0.2902, 0.034, 0.4121, 0.7734, 0.1624]]]]