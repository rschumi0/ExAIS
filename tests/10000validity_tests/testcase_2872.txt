import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Dot57850 = tf.keras.layers.Input(shape=([3]))
in1Dot57850 = tf.keras.layers.Input(shape=([3]))
in0Con46827 = tf.keras.layers.Input(shape=([2, 5, 1]))
in0Den36007 = tf.keras.layers.Input(shape=([2, 3, 5]))

Dot57850 = keras.layers.Dot(axes=(1, 1), name = 'Dot57850', )([in0Dot57850,in1Dot57850])
Res56608 = keras.layers.Reshape((1, 1), name = 'Res56608', )(Dot57850)
Con81856 = keras.layers.Conv1D(4, (1),strides=(1), padding='same', dilation_rate=(1), name = 'Con81856', )(Res56608)
Res85088 = keras.layers.Reshape((1, 4, 1), name = 'Res85088', )(Con81856)
Zer25882 = keras.layers.ZeroPadding2D(padding=((1, 0), (1, 0)), name = 'Zer25882', )(Res85088)
Con46827 = keras.layers.Concatenate(axis=3, name = 'Con46827', )([Zer25882,in0Con46827])
Den36007 = keras.layers.Dense(2,name = 'Den36007', )(in0Den36007)
Zer41030 = keras.layers.ZeroPadding2D(padding=((0, 0), (2, 0)), name = 'Zer41030', )(Den36007)
Add19989 = keras.layers.Add(name = 'Add19989', )([Con46827,Zer41030])
model = tf.keras.models.Model(inputs=[in0Dot57850,in1Dot57850,in0Con46827,in0Den36007], outputs=Add19989)
w = model.get_layer('Con81856').get_weights() 
w[0] = np.array([[[0.6311, 0.298, 0.521, 0.0926]]])
w[1] = np.array([0, 0, 0, 0])
model.get_layer('Con81856').set_weights(w) 
w = model.get_layer('Den36007').get_weights() 
w[0] = np.array([[0.2371, 0.1968], [0.2562, 0.1515], [0.1095, 0.2617], [0.8047, 0.5328], [0.1883, 0.8943]])
w[1] = np.array([0.422, 0.9404])
model.get_layer('Den36007').set_weights(w) 
in0Dot57850 = tf.constant([[0.0969, 0.9742, 0.1076]])
in1Dot57850 = tf.constant([[0.4202, 0.1405, 0.4736]])
in0Con46827 = tf.constant([[[[0.7748], [0.5682], [0.835], [0.0506], [0.6234]], [[0.3459], [0.6043], [0.7648], [0.6931], [0.3826]]]])
in0Den36007 = tf.constant([[[[0.4356, 0.8271, 0.8715, 0.9249, 0.5172], [0.1066, 0.559, 0.8736, 0.625, 0.5787], [0.665, 0.186, 0.1216, 0.244, 0.1422]], [[0.1628, 0.2366, 0.5106, 0.8637, 0.6883], [0.4215, 0.7569, 0.5722, 0.7548, 0.54], [0.8325, 0.2979, 0.3625, 0.4822, 0.6569]]]])
print (np.array2string(model.predict([in0Dot57850,in1Dot57850,in0Con46827,in0Den36007],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Add19989.png')

LDot57850 = dot_layer([[0.0969, 0.9742, 0.1076]], [[0.4202, 0.1405, 0.4736]], 1, 1, Dot57850), 
LRes56608 = reshape_layer(Dot57850, [1, 1], Res56608), 
LCon81856 = conv1D_layer(Res56608, 1,[[[0.6311, 0.298, 0.521, 0.0926]]],[0, 0, 0, 0], 1, true, 1, Con81856), 
LRes85088 = reshape_layer(Con81856, [1, 4, 1], Res85088), 
LZer25882 = zero_padding2D_layer(Res85088, 1, 0, 1, 0, Zer25882), 
LCon46827 = concatenate_layer([Zer25882,[[[[0.7748], [0.5682], [0.835], [0.0506], [0.6234]], [[0.3459], [0.6043], [0.7648], [0.6931], [0.3826]]]]], 3, Con46827), 
LDen36007 = dense_layer([[[[0.4356, 0.8271, 0.8715, 0.9249, 0.5172], [0.1066, 0.559, 0.8736, 0.625, 0.5787], [0.665, 0.186, 0.1216, 0.244, 0.1422]], [[0.1628, 0.2366, 0.5106, 0.8637, 0.6883], [0.4215, 0.7569, 0.5722, 0.7548, 0.54], [0.8325, 0.2979, 0.3625, 0.4822, 0.6569]]]], [[0.2371, 0.1968], [0.2562, 0.1515], [0.1095, 0.2617], [0.8047, 0.5328], [0.1883, 0.8943]],[0.422, 0.9404], Den36007), 
LZer41030 = zero_padding2D_layer(Den36007, 0, 0, 2, 0, Zer41030), 
LAdd19989 = add_layer([Con46827,Zer41030], Add19989), 
exec_layers([LDot57850,LRes56608,LCon81856,LRes85088,LZer25882,LCon46827,LDen36007,LZer41030,LAdd19989],["Dot57850","Res56608","Con81856","Res85088","Zer25882","Con46827","Den36007","Zer41030","Add19989"],Add19989,"Add19989")

Actual (Unparsed): [[[[0.0000000, 0.7748000], [0.0000000, 0.5682000], [1.6742688, 3.1698219], [1.2980566, 2.1758199], [0.8637630, 2.0118464]], [[0.0000000, 0.3459000], [0.1442391, 0.6043000], [1.4698622, 2.9824340], [1.6066564, 2.8659457], [1.2682860, 2.4712159]]]]

Expected (Unparsed): [[[[0,0.7748],[0,0.5682],[1.6742688200000002,3.16982196],[1.29805657,2.17581991],[0.86376296,2.0118463799999997]],[[0,0.3459],[0.144239066224,0.6043],[1.46986222832,2.9824340100000004],[1.60665639864,2.86594573],[1.268285990384,2.47121593]]]]

Actual:   [[[[0, 0.7748], [0, 0.5682], [1.6743, 3.1699], [1.2981, 2.1759], [0.8638, 2.0119]], [[0, 0.3459], [0.1443, 0.6043], [1.4699, 2.9825], [1.6067, 2.866], [1.2683, 2.4713]]]]

Expected: [[[[0, 0.7748], [0, 0.5682], [1.6743, 3.1699], [1.2981, 2.1759], [0.8638, 2.0119]], [[0, 0.3459], [0.1443, 0.6043], [1.4699, 2.9825], [1.6067, 2.866], [1.2683, 2.4713]]]]