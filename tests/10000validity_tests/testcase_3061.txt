import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Con67070 = tf.keras.layers.Input(shape=([2, 2]))
in0Con72798 = tf.keras.layers.Input(shape=([3, 1]))
in0Ave42351 = tf.keras.layers.Input(shape=([2, 1, 2, 1]))
in1Ave42351 = tf.keras.layers.Input(shape=([2, 1, 2, 1]))
in0Con89235 = tf.keras.layers.Input(shape=([3, 1]))
in0Per47531 = tf.keras.layers.Input(shape=([3, 3]))

Con67070 = keras.layers.Conv1D(2, (2),strides=(10), padding='same', dilation_rate=(1), name = 'Con67070', )(in0Con67070)
Zer7131 = keras.layers.ZeroPadding1D(padding=((2, 0)), name = 'Zer7131', )(Con67070)
Con72798 = keras.layers.Concatenate(axis=2, name = 'Con72798', )([Zer7131,in0Con72798])
Ave42351 = keras.layers.Average(name = 'Ave42351', )([in0Ave42351,in1Ave42351])
Res57890 = keras.layers.Reshape((2, 1, 2), name = 'Res57890', )(Ave42351)
Res31277 = keras.layers.Reshape((2, 2), name = 'Res31277', )(Res57890)
Zer48947 = keras.layers.ZeroPadding1D(padding=((1, 0)), name = 'Zer48947', )(Res31277)
Con89235 = keras.layers.Concatenate(axis=2, name = 'Con89235', )([Zer48947,in0Con89235])
Per47531 = keras.layers.Permute((1,2), name = 'Per47531',)(in0Per47531)
Ave26260 = keras.layers.Average(name = 'Ave26260', )([Con89235,Per47531])
Dot45670 = keras.layers.Dot(axes=(1, 1), name = 'Dot45670', )([Con72798,Ave26260])
model = tf.keras.models.Model(inputs=[in0Con67070,in0Con72798,in0Ave42351,in1Ave42351,in0Con89235,in0Per47531], outputs=Dot45670)
w = model.get_layer('Con67070').get_weights() 
w[0] = np.array([[[0.5205, 0.551], [0.628, 0.2522]], [[0.1184, 0.8309], [0.05, 0.8127]]])
w[1] = np.array([0, 0])
model.get_layer('Con67070').set_weights(w) 
in0Con67070 = tf.constant([[[0.4732, 0.6161], [0.9672, 0.945]]])
in0Con72798 = tf.constant([[[0.753], [0.5725], [0.5118]]])
in0Ave42351 = tf.constant([[[[[0.5305], [0.6877]]], [[[0.5458], [0.2037]]]]])
in1Ave42351 = tf.constant([[[[[0.2229], [0.3305]]], [[[0.8012], [0.566]]]]])
in0Con89235 = tf.constant([[[0.078], [0.4344], [0.3819]]])
in0Per47531 = tf.constant([[[1.1809, 1.4405, 1.665], [1.8981, 1.0772, 1.2445], [1.0802, 1.3963, 1.4513]]])
print (np.array2string(model.predict([in0Con67070,in0Con72798,in0Ave42351,in1Ave42351,in0Con89235,in0Per47531],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Dot45670.png')

LCon67070 = conv1D_layer([[[0.4732, 0.6161], [0.9672, 0.945]]], 2,[[[0.5205, 0.551], [0.628, 0.2522]], [[0.1184, 0.8309], [0.05, 0.8127]]],[0, 0], 10, true, 1, Con67070), 
LZer7131 = zero_padding1D_layer(Con67070, 2, 0, Zer7131), 
LCon72798 = concatenate_layer([Zer7131,[[[0.753], [0.5725], [0.5118]]]], 2, Con72798), 
LAve42351 = average_layer([[[[[[0.5305], [0.6877]]], [[[0.5458], [0.2037]]]]], [[[[[0.2229], [0.3305]]], [[[0.8012], [0.566]]]]]], Ave42351), 
LRes57890 = reshape_layer(Ave42351, [2, 1, 2], Res57890), 
LRes31277 = reshape_layer(Res57890, [2, 2], Res31277), 
LZer48947 = zero_padding1D_layer(Res31277, 1, 0, Zer48947), 
LCon89235 = concatenate_layer([Zer48947,[[[0.078], [0.4344], [0.3819]]]], 2, Con89235), 
LPer47531 = permute_layer([[[1.1809, 1.4405, 1.665], [1.8981, 1.0772, 1.2445], [1.0802, 1.3963, 1.4513]]], 1,2, Per47531), 
LAve26260 = average_layer([Con89235,Per47531], Ave26260), 
LDot45670 = dot_layer(Con72798,Ave26260, 1, 1, Dot45670), 
exec_layers([LCon67070,LZer7131,LCon72798,LAve42351,LRes57890,LRes31277,LZer48947,LCon89235,LPer47531,LAve26260,LDot45670],["Con67070","Zer7131","Con72798","Ave42351","Res57890","Res31277","Zer48947","Con89235","Per47531","Ave26260","Dot45670"],Dot45670,"Dot45670")

Actual (Unparsed): [[[0.6970763, 0.7079874, 0.7286767], [1.7429687, 1.7702507, 1.8219823], [1.5445422, 1.4522229, 1.6059405]]]

Expected (Unparsed): [[[0.6970763540780001,0.707987425481,0.728676724808],[1.7429687589599998,1.77025078692,1.82198228256],[1.54454218,1.4522229100000001,1.6059405050000002]]]

Actual:   [[[0.6971, 0.708, 0.7287], [1.743, 1.7703, 1.822], [1.5446, 1.4523, 1.606]]]

Expected: [[[0.6971, 0.708, 0.7287], [1.743, 1.7703, 1.822], [1.5446, 1.4523, 1.606]]]