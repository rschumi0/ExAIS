import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Dot19299 = tf.keras.layers.Input(shape=([3]))
in1Dot19299 = tf.keras.layers.Input(shape=([3]))

Dot19299 = keras.layers.Dot(axes=(1, 1), name = 'Dot19299', )([in0Dot19299,in1Dot19299])
Res1831 = keras.layers.Reshape((1, 1), name = 'Res1831', )(Dot19299)
Sim66921 = keras.layers.SimpleRNN(2,name = 'Sim66921', )(Res1831)
Res35507 = keras.layers.Reshape((2, 1), name = 'Res35507', )(Sim66921)
Up_16025 = keras.layers.UpSampling1D(size=(2), name = 'Up_16025', )(Res35507)
model = tf.keras.models.Model(inputs=[in0Dot19299,in1Dot19299], outputs=Up_16025)
w = model.get_layer('Sim66921').get_weights() 
w[0] = np.array([[2, 6]])
w[1] = np.array([[9, 9], [1, 4]])
w[2] = np.array([3, 5])
model.get_layer('Sim66921').set_weights(w) 
in0Dot19299 = tf.constant([[0.4356, 0.3924, 0.8269]])
in1Dot19299 = tf.constant([[0.5772, 0.2173, 0.8833]])
print (np.array2string(model.predict([in0Dot19299,in1Dot19299],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Up_16025.png')

LDot19299 = dot_layer([[0.4356, 0.3924, 0.8269]], [[0.5772, 0.2173, 0.8833]], 1, 1, Dot19299), 
LRes1831 = reshape_layer(Dot19299, [1, 1], Res1831), 
LSim66921 = simple_rnn_layer(Res1831,[[2, 6]],[[9, 9], [1, 4]],[3, 5], Sim66921), 
LRes35507 = reshape_layer(Sim66921, [2, 1], Res35507), 
LUp_16025 = up_sampling1D_layer(Res35507, 2, Up_16025), 
exec_layers([LDot19299,LRes1831,LSim66921,LRes35507,LUp_16025],["Dot19299","Res1831","Sim66921","Res35507","Up_16025"],Up_16025,"Up_16025")

Actual (Unparsed): [[[0.9999306], [0.9999306], [1.0000000], [1.0000000]]]

Expected (Unparsed): [[[0.9999305760029944],[0.9999305760029944],[0.9999999997506153],[0.9999999997506153]]]

Actual:   [[[1], [1], [1], [1]]]

Expected: [[[1], [1], [1], [1]]]