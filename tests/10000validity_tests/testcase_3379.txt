import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Cro24607 = tf.keras.layers.Input(shape=([1, 1, 2]))
in0Con60440 = tf.keras.layers.Input(shape=([2, 2, 3, 1]))
in0Min37297 = tf.keras.layers.Input(shape=([2, 2, 1, 2]))
in1Min37297 = tf.keras.layers.Input(shape=([2, 2, 1, 2]))
in0Mul60757 = tf.keras.layers.Input(shape=([2, 2]))
in1Mul60757 = tf.keras.layers.Input(shape=([2, 2]))
in0Con93810 = tf.keras.layers.Input(shape=([4, 3, 1]))
in0Up_72095 = tf.keras.layers.Input(shape=([4, 1, 2]))
in0Sub98563 = tf.keras.layers.Input(shape=([3, 3]))
in1Sub98563 = tf.keras.layers.Input(shape=([3, 3]))
in0Con13545 = tf.keras.layers.Input(shape=([5, 5, 3, 1]))

Cro24607 = keras.layers.Cropping2D(cropping=((0, 0), (0, 0)), name = 'Cro24607', )(in0Cro24607)
Res45551 = keras.layers.Reshape((1, 1, 2, 1), name = 'Res45551', )(Cro24607)
Zer42573 = keras.layers.ZeroPadding3D(padding=((1, 0), (1, 0), (1, 0)), name = 'Zer42573', )(Res45551)
Con60440 = keras.layers.Concatenate(axis=4, name = 'Con60440', )([Zer42573,in0Con60440])
Min37297 = keras.layers.Minimum(name = 'Min37297', )([in0Min37297,in1Min37297])
Zer60293 = keras.layers.ZeroPadding3D(padding=((0, 0), (0, 0), (2, 0)), name = 'Zer60293', )(Min37297)
Ave96580 = keras.layers.Average(name = 'Ave96580', )([Con60440,Zer60293])
Con99110 = keras.layers.Conv3DTranspose(2, (1, 2, 1),strides=(1, 1, 1), padding='valid', name = 'Con99110', )(Ave96580)
Zer29944 = keras.layers.ZeroPadding3D(padding=((3, 0), (2, 0), (0, 0)), name = 'Zer29944', )(Con99110)
Mul60757 = keras.layers.Multiply(name = 'Mul60757', )([in0Mul60757,in1Mul60757])
Res76033 = keras.layers.Reshape((2, 2, 1), name = 'Res76033', )(Mul60757)
Zer28550 = keras.layers.ZeroPadding2D(padding=((2, 0), (1, 0)), name = 'Zer28550', )(Res76033)
Con93810 = keras.layers.Concatenate(axis=3, name = 'Con93810', )([Zer28550,in0Con93810])
Up_72095 = keras.layers.UpSampling2D(size=(1, 1), name = 'Up_72095', )(in0Up_72095)
Zer34214 = keras.layers.ZeroPadding2D(padding=((0, 0), (2, 0)), name = 'Zer34214', )(Up_72095)
Mul95339 = keras.layers.Multiply(name = 'Mul95339', )([Con93810,Zer34214])
Res42051 = keras.layers.Reshape((4, 3, 2, 1), name = 'Res42051', )(Mul95339)
Zer60448 = keras.layers.ZeroPadding3D(padding=((1, 0), (2, 0), (1, 0)), name = 'Zer60448', )(Res42051)
Sub98563 = keras.layers.Subtract(name = 'Sub98563', )([in0Sub98563,in1Sub98563])
Res91048 = keras.layers.Reshape((3, 3, 1), name = 'Res91048', )(Sub98563)
Res85182 = keras.layers.Reshape((3, 3, 1, 1), name = 'Res85182', )(Res91048)
Zer75099 = keras.layers.ZeroPadding3D(padding=((1, 1), (1, 1), (1, 1)), name = 'Zer75099', )(Res85182)
Add76341 = keras.layers.Add(name = 'Add76341', )([Zer60448,Zer75099])
Con13545 = keras.layers.Concatenate(axis=4, name = 'Con13545', )([Add76341,in0Con13545])
Sub49791 = keras.layers.Subtract(name = 'Sub49791', )([Zer29944,Con13545])
model = tf.keras.models.Model(inputs=[in0Cro24607,in0Con60440,in0Min37297,in1Min37297,in0Mul60757,in1Mul60757,in0Con93810,in0Up_72095,in0Sub98563,in1Sub98563,in0Con13545], outputs=Sub49791)
w = model.get_layer('Con99110').get_weights() 
w[0] = np.array([[[[[0.2653, 0.0953], [0.2204, 0.7955]]], [[[0.4706, 0.3859], [0.0429, 0.5315]]]]])
w[1] = np.array([0, 0])
model.get_layer('Con99110').set_weights(w) 
in0Cro24607 = tf.constant([[[[1.6624, 1.8282]]]])
in0Con60440 = tf.constant([[[[[0.5471], [0.7687], [0.8728]], [[0.8157], [0.0869], [0.8612]]], [[[0.8854], [0.1048], [0.2545]], [[0.7933], [0.5306], [0.5035]]]]])
in0Min37297 = tf.constant([[[[[0.1273, 0.0932]], [[0.287, 0.1191]]], [[[0.3992, 0.744]], [[0.9529, 0.6116]]]]])
in1Min37297 = tf.constant([[[[[0.1344, 0.6445]], [[0.2116, 0.7732]]], [[[0.9044, 0.6937]], [[0.5426, 0.9107]]]]])
in0Mul60757 = tf.constant([[[0.4137, 0.2086], [0.3886, 0.1878]]])
in1Mul60757 = tf.constant([[[0.4525, 0.9537], [0.6662, 0.2115]]])
in0Con93810 = tf.constant([[[[0.367], [0.0565], [0.9202]], [[0.301], [0.8267], [0.0101]], [[0.4305], [0.5772], [0.6737]], [[0.689], [0.7328], [0.9294]]]])
in0Up_72095 = tf.constant([[[[1.8761, 1.262]], [[1.978, 1.0083]], [[1.0293, 1.4694]], [[1.084, 1.2703]]]])
in0Sub98563 = tf.constant([[[0.3792, 0.5796, 0.798], [0.3341, 0.2487, 0.8042], [0.368, 0.4768, 0.4438]]])
in1Sub98563 = tf.constant([[[0.383, 0.5716, 0.7609], [0.2648, 0.8766, 0.2114], [0.8413, 0.8538, 0.9487]]])
in0Con13545 = tf.constant([[[[[0.0385], [0.4699], [0.5643]], [[0.1675], [0.0994], [0.6723]], [[0.3456], [0.7675], [0.4502]], [[0.3767], [0.5509], [0.0397]], [[0.7386], [0.1631], [0.7719]]], [[[0.321], [0.4004], [0.1172]], [[0.1054], [0.6501], [0.6436]], [[0.7289], [0.9356], [0.3665]], [[0.5404], [0.0325], [0.4427]], [[0.9039], [0.8934], [0.2543]]], [[[0.1146], [0.9223], [0.3262]], [[0.8667], [0.5797], [0.4422]], [[0.6111], [0.6159], [0.4126]], [[0.7036], [0.5919], [0.7815]], [[0.1727], [0.0586], [0.1845]]], [[[0.6594], [0.8286], [0.3246]], [[0.8477], [0.0146], [0.8915]], [[0.673], [0.6022], [0.0407]], [[0.039], [0.3122], [0.1481]], [[0.1868], [0.7416], [0.932]]], [[[0.8795], [0.0616], [0.4245]], [[0.122], [0.6302], [0.5106]], [[0.9931], [0.751], [0.7951]], [[0.8774], [0.1291], [0.5979]], [[0.0678], [0.4041], [0.6279]]]]])
print (np.array2string(model.predict([in0Cro24607,in0Con60440,in0Min37297,in1Min37297,in0Mul60757,in1Mul60757,in0Con93810,in0Up_72095,in0Sub98563,in1Sub98563,in0Con13545],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Sub49791.png')

LCro24607 = cropping2D_layer([[[[1.6624, 1.8282]]]], 0, 0, 0, 0, Cro24607), 
LRes45551 = reshape_layer(Cro24607, [1, 1, 2, 1], Res45551), 
LZer42573 = zero_padding3D_layer(Res45551, 1, 0, 1, 0, 1, 0, Zer42573), 
LCon60440 = concatenate_layer([Zer42573,[[[[[0.5471], [0.7687], [0.8728]], [[0.8157], [0.0869], [0.8612]]], [[[0.8854], [0.1048], [0.2545]], [[0.7933], [0.5306], [0.5035]]]]]], 4, Con60440), 
LMin37297 = minimum_layer([[[[[[0.1273, 0.0932]], [[0.287, 0.1191]]], [[[0.3992, 0.744]], [[0.9529, 0.6116]]]]], [[[[[0.1344, 0.6445]], [[0.2116, 0.7732]]], [[[0.9044, 0.6937]], [[0.5426, 0.9107]]]]]], Min37297), 
LZer60293 = zero_padding3D_layer(Min37297, 0, 0, 0, 0, 2, 0, Zer60293), 
LAve96580 = average_layer([Con60440,Zer60293], Ave96580), 
LCon99110 = conv3D_transpose_layer(Ave96580, 1, 2, 1,[[[[[0.2653, 0.0953], [0.2204, 0.7955]]], [[[0.4706, 0.3859], [0.0429, 0.5315]]]]],[0, 0], 1, 1, 1, false, Con99110), 
LZer29944 = zero_padding3D_layer(Con99110, 3, 0, 2, 0, 0, 0, Zer29944), 
LMul60757 = multiply_layer([[[[0.4137, 0.2086], [0.3886, 0.1878]]], [[[0.4525, 0.9537], [0.6662, 0.2115]]]], Mul60757), 
LRes76033 = reshape_layer(Mul60757, [2, 2, 1], Res76033), 
LZer28550 = zero_padding2D_layer(Res76033, 2, 0, 1, 0, Zer28550), 
LCon93810 = concatenate_layer([Zer28550,[[[[0.367], [0.0565], [0.9202]], [[0.301], [0.8267], [0.0101]], [[0.4305], [0.5772], [0.6737]], [[0.689], [0.7328], [0.9294]]]]], 3, Con93810), 
LUp_72095 = up_sampling2D_layer([[[[1.8761, 1.262]], [[1.978, 1.0083]], [[1.0293, 1.4694]], [[1.084, 1.2703]]]], 1, 1, Up_72095), 
LZer34214 = zero_padding2D_layer(Up_72095, 0, 0, 2, 0, Zer34214), 
LMul95339 = multiply_layer([Con93810,Zer34214], Mul95339), 
LRes42051 = reshape_layer(Mul95339, [4, 3, 2, 1], Res42051), 
LZer60448 = zero_padding3D_layer(Res42051, 1, 0, 2, 0, 1, 0, Zer60448), 
LSub98563 = subtract_layer([[[0.3792, 0.5796, 0.798], [0.3341, 0.2487, 0.8042], [0.368, 0.4768, 0.4438]]], [[[0.383, 0.5716, 0.7609], [0.2648, 0.8766, 0.2114], [0.8413, 0.8538, 0.9487]]], Sub98563), 
LRes91048 = reshape_layer(Sub98563, [3, 3, 1], Res91048), 
LRes85182 = reshape_layer(Res91048, [3, 3, 1, 1], Res85182), 
LZer75099 = zero_padding3D_layer(Res85182, 1, 1, 1, 1, 1, 1, Zer75099), 
LAdd76341 = add_layer([Zer60448,Zer75099], Add76341), 
LCon13545 = concatenate_layer([Add76341,[[[[[0.0385], [0.4699], [0.5643]], [[0.1675], [0.0994], [0.6723]], [[0.3456], [0.7675], [0.4502]], [[0.3767], [0.5509], [0.0397]], [[0.7386], [0.1631], [0.7719]]], [[[0.321], [0.4004], [0.1172]], [[0.1054], [0.6501], [0.6436]], [[0.7289], [0.9356], [0.3665]], [[0.5404], [0.0325], [0.4427]], [[0.9039], [0.8934], [0.2543]]], [[[0.1146], [0.9223], [0.3262]], [[0.8667], [0.5797], [0.4422]], [[0.6111], [0.6159], [0.4126]], [[0.7036], [0.5919], [0.7815]], [[0.1727], [0.0586], [0.1845]]], [[[0.6594], [0.8286], [0.3246]], [[0.8477], [0.0146], [0.8915]], [[0.673], [0.6022], [0.0407]], [[0.039], [0.3122], [0.1481]], [[0.1868], [0.7416], [0.932]]], [[[0.8795], [0.0616], [0.4245]], [[0.122], [0.6302], [0.5106]], [[0.9931], [0.751], [0.7951]], [[0.8774], [0.1291], [0.5979]], [[0.0678], [0.4041], [0.6279]]]]]], 4, Con13545), 
LSub49791 = subtract_layer(Zer29944,Con13545, Sub49791), 
exec_layers([LCro24607,LRes45551,LZer42573,LCon60440,LMin37297,LZer60293,LAve96580,LCon99110,LZer29944,LMul60757,LRes76033,LZer28550,LCon93810,LUp_72095,LZer34214,LMul95339,LRes42051,LZer60448,LSub98563,LRes91048,LRes85182,LZer75099,LAdd76341,LCon13545,LSub49791],["Cro24607","Res45551","Zer42573","Con60440","Min37297","Zer60293","Ave96580","Con99110","Zer29944","Mul60757","Res76033","Zer28550","Con93810","Up_72095","Zer34214","Mul95339","Res42051","Zer60448","Sub98563","Res91048","Res85182","Zer75099","Add76341","Con13545","Sub49791"],Sub49791,"Sub49791")

Actual (Unparsed): [[[[[0.0000000, -0.0385000], [0.0000000, -0.4699000], [0.0000000, -0.5643000]], [[0.0000000, -0.1675000], [0.0000000, -0.0994000], [0.0000000, -0.6723000]], [[0.0000000, -0.3456000], [0.0000000, -0.7675000], [0.0000000, -0.4502000]], [[0.0000000, -0.3767000], [0.0000000, -0.5509000], [0.0000000, -0.0397000]], [[0.0000000, -0.7386000], [0.0000000, -0.1631000], [0.0000000, -0.7719000]]], [[[0.0000000, -0.3210000], [0.0000000, -0.4004000], [0.0000000, -0.1172000]], [[0.0000000, -0.1054000], [0.0038000, -0.6501000], [0.0000000, -0.6436000]], [[0.0000000, -0.7289000], [-0.0080000, -0.9356000], [0.0000000, -0.3665000]], [[0.0000000, -0.5404000], [-0.0371000, -0.0325000], [0.0000000, -0.4427000]], [[0.0000000, -0.9039000], [0.0000000, -0.8934000], [-1.1612924, -0.2543000]]], [[[0.0000000, -0.1146000], [0.0000000, -0.9223000], [0.0000000, -0.3262000]], [[0.0000000, -0.8667000], [-0.0693000, -0.5797000], [0.0000000, -0.4422000]], [[0.0000000, -0.6111000], [0.6279000, -0.6159000], [0.0000000, -0.4126000]], [[0.0000000, -0.7036000], [-0.5928000, -0.5919000], [0.0000000, -0.7815000]], [[0.0000000, -0.1727000], [0.0000000, -0.0586000], [-0.0101838, -0.1845000]]], [[[0.0000000, -0.6594000], [0.0000000, -0.8286000], [0.0000000, -0.3246000]], [[0.0000000, -0.8477000], [0.4733000, -0.0146000], [0.0000000, -0.8915000]], [[0.0260693, -0.4553910], [0.4136286, -0.2964495], [0.0629162, 0.3575550]], [[0.1444311, 0.4308365], [0.6573615, -0.0733535], [0.2911234, 0.5245777]], [[0.1573893, 0.0299723], [-0.1880035, -0.7185063], [-0.7509964, -0.6669464]]], [[[0.0000000, -0.8795000], [0.0000000, -0.0616000], [0.0000000, -0.4245000]], [[0.0000000, -0.1220000], [0.0000000, -0.6302000], [0.0000000, -0.5106000]], [[0.0421893, -0.6409321], [0.0049937, -0.7093158], [0.0981356, -0.3739616]], [[0.2086387, -0.3265699], [0.2660216, 0.2929932], [0.6445081, 0.3674402]], [[0.1530672, 0.1430195], [0.4504858, -0.2274346], [-0.4076091, -0.2807085]]]]]

Expected (Unparsed): [[[[[0,-0.0385],[0,-0.4699],[0,-0.5643]],[[0,-0.1675],[0,-0.0994],[0,-0.6723]],[[0,-0.3456],[0,-0.7675],[0,-0.4502]],[[0,-0.3767],[0,-0.5509],[0,-0.0397]],[[0,-0.7386],[0,-0.1631],[0,-0.7719]]],[[[0,-0.321],[0,-0.4004],[0,-0.1172]],[[0,-0.1054],[0.0038000000000000256,-0.6501],[0,-0.6436]],[[0,-0.7289],[-0.008000000000000007,-0.9356],[0.0,-0.3665]],[[0,-0.5404],[-0.03710000000000002,-0.0325],[0.0,-0.4427]],[[0,-0.9039],[0.0,-0.8934],[-1.1612924,-0.2543]]],[[[0,-0.1146],[0,-0.9223],[0,-0.3262]],[[0,-0.8667],[-0.06930000000000003,-0.5797],[0,-0.4422]],[[0,-0.6111],[0.6279,-0.6159],[0.0,-0.4126]],[[0,-0.7036],[-0.5928,-0.5919],[0.0,-0.7815]],[[0,-0.1727],[0.0,-0.0586],[-0.01018383,-0.1845]]],[[[0,-0.6594],[0,-0.8286],[0,-0.3246]],[[0,-0.8477],[0.47330000000000005,-0.0146],[0,-0.8915]],[[0.026069315,-0.45539097500000003],[0.413628555,-0.29644957499999997],[0.062916245,0.35755496]],[[0.14443105,0.4308365],[0.65736145,-0.07335349999999996],[0.291123425,0.52457773]],[[0.157389315,0.029972274999999993],[-0.18800346032600002,-0.718506325],[-0.750996415,-0.6669464550000002]]],[[[0,-0.8795],[0,-0.0616],[0,-0.4245]],[[0,-0.122],[0,-0.6302],[0,-0.5106]],[[0.042189309999999994,-0.64093215],[0.00499372,-0.7093158],[0.09813560999999998,-0.37396161000000006]],[[0.208638675,-0.326569875],[0.26602161,0.29299323],[0.644508085,0.3674401749999999]],[[0.153067235,0.14301947499999998],[0.45048583519999996,-0.22743457000000003],[-0.407609035,-0.280708515]]]]]

Actual:   [[[[[0, -0.0385], [0, -0.4699], [0, -0.5643]], [[0, -0.1675], [0, -0.0994], [0, -0.6723]], [[0, -0.3456], [0, -0.7675], [0, -0.4502]], [[0, -0.3767], [0, -0.5509], [0, -0.0397]], [[0, -0.7386], [0, -0.1631], [0, -0.7719]]], [[[0, -0.321], [0, -0.4004], [0, -0.1172]], [[0, -0.1054], [0.0038, -0.6501], [0, -0.6436]], [[0, -0.7289], [-0.008, -0.9356], [0, -0.3665]], [[0, -0.5404], [-0.0371, -0.0325], [0, -0.4427]], [[0, -0.9039], [0, -0.8934], [-1.1612, -0.2543]]], [[[0, -0.1146], [0, -0.9223], [0, -0.3262]], [[0, -0.8667], [-0.0693, -0.5797], [0, -0.4422]], [[0, -0.6111], [0.6279, -0.6159], [0, -0.4126]], [[0, -0.7036], [-0.5928, -0.5919], [0, -0.7815]], [[0, -0.1727], [0, -0.0586], [-0.0101, -0.1845]]], [[[0, -0.6594], [0, -0.8286], [0, -0.3246]], [[0, -0.8477], [0.4733, -0.0146], [0, -0.8915]], [[0.0261, -0.4553], [0.4137, -0.2964], [0.063, 0.3576]], [[0.1445, 0.4309], [0.6574, -0.0733], [0.2912, 0.5246]], [[0.1574, 0.03], [-0.188, -0.7185], [-0.7509, -0.6669]]], [[[0, -0.8795], [0, -0.0616], [0, -0.4245]], [[0, -0.122], [0, -0.6302], [0, -0.5106]], [[0.0422, -0.6409], [0.005, -0.7093], [0.0982, -0.3739]], [[0.2087, -0.3265], [0.2661, 0.293], [0.6446, 0.3675]], [[0.1531, 0.1431], [0.4505, -0.2274], [-0.4076, -0.2807]]]]]

Expected: [[[[[0, -0.0385], [0, -0.4699], [0, -0.5643]], [[0, -0.1675], [0, -0.0994], [0, -0.6723]], [[0, -0.3456], [0, -0.7675], [0, -0.4502]], [[0, -0.3767], [0, -0.5509], [0, -0.0397]], [[0, -0.7386], [0, -0.1631], [0, -0.7719]]], [[[0, -0.321], [0, -0.4004], [0, -0.1172]], [[0, -0.1054], [0.0039, -0.6501], [0, -0.6436]], [[0, -0.7289], [-0.008, -0.9356], [0, -0.3665]], [[0, -0.5404], [-0.0371, -0.0325], [0, -0.4427]], [[0, -0.9039], [0, -0.8934], [-1.1612, -0.2543]]], [[[0, -0.1146], [0, -0.9223], [0, -0.3262]], [[0, -0.8667], [-0.0693, -0.5797], [0, -0.4422]], [[0, -0.6111], [0.6279, -0.6159], [0, -0.4126]], [[0, -0.7036], [-0.5928, -0.5919], [0, -0.7815]], [[0, -0.1727], [0, -0.0586], [-0.0101, -0.1845]]], [[[0, -0.6594], [0, -0.8286], [0, -0.3246]], [[0, -0.8477], [0.4734, -0.0146], [0, -0.8915]], [[0.0261, -0.4553], [0.4137, -0.2964], [0.063, 0.3576]], [[0.1445, 0.4309], [0.6574, -0.0733], [0.2912, 0.5246]], [[0.1574, 0.03], [-0.188, -0.7185], [-0.7509, -0.6669]]], [[[0, -0.8795], [0, -0.0616], [0, -0.4245]], [[0, -0.122], [0, -0.6302], [0, -0.5106]], [[0.0422, -0.6409], [0.005, -0.7093], [0.0982, -0.3739]], [[0.2087, -0.3265], [0.2661, 0.293], [0.6446, 0.3675]], [[0.1531, 0.1431], [0.4505, -0.2274], [-0.4076, -0.2807]]]]]