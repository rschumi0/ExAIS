import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Thr22054 = tf.keras.layers.Input(shape=([2, 2, 1, 1]))
in0Lea13060 = tf.keras.layers.Input(shape=([1, 2, 2, 1]))

Thr22054 = keras.layers.ThresholdedReLU(theta=9.790911247476087, name = 'Thr22054', input_shape=(2, 2, 1, 1))(in0Thr22054)
Zer31431 = keras.layers.ZeroPadding3D(padding=((0, 0), (0, 0), (2, 0)), name = 'Zer31431', )(Thr22054)
Lea13060 = keras.layers.LeakyReLU(alpha=5.254825735214655, name = 'Lea13060', input_shape=(1, 2, 2, 1))(in0Lea13060)
Zer51704 = keras.layers.ZeroPadding3D(padding=((1, 0), (0, 0), (1, 0)), name = 'Zer51704', )(Lea13060)
Sub89394 = keras.layers.Subtract(name = 'Sub89394', )([Zer31431,Zer51704])
Res37889 = keras.layers.Reshape((2, 2, 3), name = 'Res37889', )(Sub89394)
Con24742 = keras.layers.Conv2DTranspose(3, (2, 2),strides=(1, 1), padding='same', name = 'Con24742', )(Res37889)
Zer45441 = keras.layers.ZeroPadding2D(padding=((1, 1), (1, 1)), name = 'Zer45441', )(Con24742)
model = tf.keras.models.Model(inputs=[in0Thr22054,in0Lea13060], outputs=Zer45441)
w = model.get_layer('Con24742').get_weights() 
w[0] = np.array([[[[0.0867, 0.6846, 0.763], [0.9219, 0.6475, 0.9689], [0.1103, 0.6238, 0.0223]], [[0.8678, 0.3551, 0.542], [0.4184, 0.5751, 0.4745], [0.4678, 0.7403, 0.9626]]], [[[0.5917, 0.904, 0.7588], [0.2555, 0.9595, 0.6702], [0.4419, 0.2249, 0.3307]], [[0.2746, 0.2167, 0.4752], [0.6567, 0.982, 0.9091], [0.5516, 0.4256, 0.6642]]]])
w[1] = np.array([0, 0, 0])
model.get_layer('Con24742').set_weights(w) 
in0Thr22054 = tf.constant([[[[[0.8129]], [[0.6316]]], [[[0.5845]], [[0.8917]]]]])
in0Lea13060 = tf.constant([[[[[0.553], [0.7417]], [[0.8839], [0.0823]]]]])
print (np.array2string(model.predict([in0Thr22054,in0Lea13060],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Zer45441.png')

LThr22054 = thresholded_relu_layer([[[[[0.8129]], [[0.6316]]], [[[0.5845]], [[0.8917]]]]], 9.790911247476087, Thr22054), 
LZer31431 = zero_padding3D_layer(Thr22054, 0, 0, 0, 0, 2, 0, Zer31431), 
LLea13060 = leaky_relu_layer([[[[[0.553], [0.7417]], [[0.8839], [0.0823]]]]], 5.254825735214655, Lea13060), 
LZer51704 = zero_padding3D_layer(Lea13060, 1, 0, 0, 0, 1, 0, Zer51704), 
LSub89394 = subtract_layer(Zer31431,Zer51704, Sub89394), 
LRes37889 = reshape_layer(Sub89394, [2, 2, 3], Res37889), 
LCon24742 = conv2D_transpose_layer(Res37889, 2, 2,[[[[0.0867, 0.6846, 0.763], [0.9219, 0.6475, 0.9689], [0.1103, 0.6238, 0.0223]], [[0.8678, 0.3551, 0.542], [0.4184, 0.5751, 0.4745], [0.4678, 0.7403, 0.9626]]], [[[0.5917, 0.904, 0.7588], [0.2555, 0.9595, 0.6702], [0.4419, 0.2249, 0.3307]], [[0.2746, 0.2167, 0.4752], [0.6567, 0.982, 0.9091], [0.5516, 0.4256, 0.6642]]]],[0, 0, 0], 1, 1, true, Con24742), 
LZer45441 = zero_padding2D_layer(Con24742, 1, 1, 1, 1, Zer45441), 
exec_layers([LThr22054,LZer31431,LLea13060,LZer51704,LSub89394,LRes37889,LCon24742,LZer45441],["Thr22054","Zer31431","Lea13060","Zer51704","Sub89394","Res37889","Con24742","Zer45441"],Zer45441,"Zer45441")

Actual (Unparsed): [[[[0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000]], [[0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000]], [[0.0000000, 0.0000000, 0.0000000], [-0.9445009, -1.0767006, -0.3615013], [-1.2662845, -1.3220326, -1.6765584], [0.0000000, 0.0000000, 0.0000000]], [[0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000], [0.0000000, 0.0000000, 0.0000000]]]]

Expected (Unparsed): [[[[0,0,0],[0,0,0],[0,0,0],[0,0,0]],[[0,0,0],[0.0,0.0,0.0],[0.0,0.0,0.0],[0,0,0]],[[0,0,0],[-0.9445009000000001,-1.0767006300000002,-0.36150131],[-1.26628454,-1.32203267,-1.67655843],[0,0,0]],[[0,0,0],[0,0,0],[0,0,0],[0,0,0]]]]

Actual:   [[[[0, 0, 0], [0, 0, 0], [0, 0, 0], [0, 0, 0]], [[0, 0, 0], [0, 0, 0], [0, 0, 0], [0, 0, 0]], [[0, 0, 0], [-0.9445, -1.0767, -0.3615], [-1.2662, -1.322, -1.6765], [0, 0, 0]], [[0, 0, 0], [0, 0, 0], [0, 0, 0], [0, 0, 0]]]]

Expected: [[[[0, 0, 0], [0, 0, 0], [0, 0, 0], [0, 0, 0]], [[0, 0, 0], [0, 0, 0], [0, 0, 0], [0, 0, 0]], [[0, 0, 0], [-0.9445, -1.0767, -0.3615], [-1.2662, -1.322, -1.6765], [0, 0, 0]], [[0, 0, 0], [0, 0, 0], [0, 0, 0], [0, 0, 0]]]]