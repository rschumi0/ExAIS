import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Mas20771 = tf.keras.layers.Input(shape=([3, 2]))

Mas20771 = keras.layers.Masking(mask_value=1, name = 'Mas20771', )(in0Mas20771)
Sim52851 = keras.layers.SimpleRNN(2,name = 'Sim52851', )(Mas20771)
model = tf.keras.models.Model(inputs=[in0Mas20771], outputs=Sim52851)
w = model.get_layer('Sim52851').get_weights() 
w[0] = np.array([[6, 7], [7, 3]])
w[1] = np.array([[7, 9], [6, 5]])
w[2] = np.array([3, 3])
model.get_layer('Sim52851').set_weights(w) 
in0Mas20771 = tf.constant([[[1.4882, 1.7819], [1.8872, 1.2028], [1.9277, 1.1482]]])
print (np.array2string(model.predict([in0Mas20771],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Sim52851.png')

LMas20771 = masking_layer([[[1.4882, 1.7819], [1.8872, 1.2028], [1.9277, 1.1482]]], 1, Mas20771), 
LSim52851 = simple_rnn_layer(Mas20771,[[6, 7], [7, 3]],[[7, 9], [6, 5]],[3, 3], Sim52851), 
exec_layers([LMas20771,LSim52851],["Mas20771","Sim52851"],Sim52851,"Sim52851")

Actual (Unparsed): [[1.0000000, 1.0000000]]

Expected (Unparsed): [[1.0,1.0]]

Actual:   [[1, 1]]

Expected: [[1, 1]]