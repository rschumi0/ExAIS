import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Mul48018 = tf.keras.layers.Input(shape=([1, 2]))
in1Mul48018 = tf.keras.layers.Input(shape=([1, 2]))
in0Mul57980 = tf.keras.layers.Input(shape=([2, 1]))
in1Mul57980 = tf.keras.layers.Input(shape=([2, 1]))
in0Con89387 = tf.keras.layers.Input(shape=([1, 2, 1, 2]))
in0Ave93666 = tf.keras.layers.Input(shape=([1, 2]))
in1Ave93666 = tf.keras.layers.Input(shape=([1, 2]))
in0Min68684 = tf.keras.layers.Input(shape=([1, 2, 1, 1]))
in1Min68684 = tf.keras.layers.Input(shape=([1, 2, 1, 1]))

Mul48018 = keras.layers.Multiply(name = 'Mul48018', )([in0Mul48018,in1Mul48018])
Mul57980 = keras.layers.Multiply(name = 'Mul57980', )([in0Mul57980,in1Mul57980])
Loc78475 = keras.layers.LocallyConnected1D(2, (2),strides=(1), name = 'Loc78475', )(Mul57980)
Ave74124 = keras.layers.Average(name = 'Ave74124', )([Mul48018,Loc78475])
Res92215 = keras.layers.Reshape((1, 2, 1), name = 'Res92215', )(Ave74124)
Res74241 = keras.layers.Reshape((1, 2, 1, 1), name = 'Res74241', )(Res92215)
Con89387 = keras.layers.Concatenate(axis=4, name = 'Con89387', )([Res74241,in0Con89387])
Ave93666 = keras.layers.Average(name = 'Ave93666', )([in0Ave93666,in1Ave93666])
Res80158 = keras.layers.Reshape((1, 2, 1), name = 'Res80158', )(Ave93666)
Min68684 = keras.layers.Minimum(name = 'Min68684', )([in0Min68684,in1Min68684])
Res19326 = keras.layers.Reshape((1, 2, 1), name = 'Res19326', )(Min68684)
Min53584 = keras.layers.Minimum(name = 'Min53584', )([Res80158,Res19326])
Up_89919 = keras.layers.UpSampling2D(size=(1, 1), name = 'Up_89919', )(Min53584)
Res58261 = keras.layers.Reshape((1, 2, 1, 1), name = 'Res58261', )(Up_89919)
Con66892 = keras.layers.Conv3D(3, (1, 1, 1),strides=(1, 1, 1), padding='same', dilation_rate=(1, 1, 1), name = 'Con66892', )(Res58261)
Mul91215 = keras.layers.Multiply(name = 'Mul91215', )([Con89387,Con66892])
model = tf.keras.models.Model(inputs=[in0Mul48018,in1Mul48018,in0Mul57980,in1Mul57980,in0Con89387,in0Ave93666,in1Ave93666,in0Min68684,in1Min68684], outputs=Mul91215)
w = model.get_layer('Loc78475').get_weights() 
w[0] = np.array([[[0.0692, 0.6771], [0.1763, 0.9313]]])
w[1] = np.array([[0, 0]])
model.get_layer('Loc78475').set_weights(w) 
w = model.get_layer('Con66892').get_weights() 
w[0] = np.array([[[[[0.1023, 0.0261, 0.3889]]]]])
w[1] = np.array([0, 0, 0])
model.get_layer('Con66892').set_weights(w) 
in0Mul48018 = tf.constant([[[0.4804, 0.7035]]])
in1Mul48018 = tf.constant([[[0.5025, 0.8668]]])
in0Mul57980 = tf.constant([[[0.7467], [0.5315]]])
in1Mul57980 = tf.constant([[[0.4824], [0.7099]]])
in0Con89387 = tf.constant([[[[[0.9102, 0.3992]], [[0.9034, 0.4307]]]]])
in0Ave93666 = tf.constant([[[0.9308, 0.2537]]])
in1Ave93666 = tf.constant([[[0.5516, 0.3307]]])
in0Min68684 = tf.constant([[[[[0.126]], [[0.5187]]]]])
in1Min68684 = tf.constant([[[[[0.148]], [[0.4121]]]]])
print (np.array2string(model.predict([in0Mul48018,in1Mul48018,in0Mul57980,in1Mul57980,in0Con89387,in0Ave93666,in1Ave93666,in0Min68684,in1Min68684],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Mul91215.png')

LMul48018 = multiply_layer([[[[0.4804, 0.7035]]], [[[0.5025, 0.8668]]]], Mul48018), 
LMul57980 = multiply_layer([[[[0.7467], [0.5315]]], [[[0.4824], [0.7099]]]], Mul57980), 
LLoc78475 = locally_connected1D_layer(Mul57980, 2,[[[0.0692, 0.6771], [0.1763, 0.9313]]],[[0, 0]], 1, Loc78475), 
LAve74124 = average_layer([Mul48018,Loc78475], Ave74124), 
LRes92215 = reshape_layer(Ave74124, [1, 2, 1], Res92215), 
LRes74241 = reshape_layer(Res92215, [1, 2, 1, 1], Res74241), 
LCon89387 = concatenate_layer([Res74241,[[[[[0.9102, 0.3992]], [[0.9034, 0.4307]]]]]], 4, Con89387), 
LAve93666 = average_layer([[[[0.9308, 0.2537]]], [[[0.5516, 0.3307]]]], Ave93666), 
LRes80158 = reshape_layer(Ave93666, [1, 2, 1], Res80158), 
LMin68684 = minimum_layer([[[[[[0.126]], [[0.5187]]]]], [[[[[0.148]], [[0.4121]]]]]], Min68684), 
LRes19326 = reshape_layer(Min68684, [1, 2, 1], Res19326), 
LMin53584 = minimum_layer([Res80158,Res19326], Min53584), 
LUp_89919 = up_sampling2D_layer(Min53584, 1, 1, Up_89919), 
LRes58261 = reshape_layer(Up_89919, [1, 2, 1, 1], Res58261), 
LCon66892 = conv3D_layer(Res58261, 1, 1, 1,[[[[[0.1023, 0.0261, 0.3889]]]]],[0, 0, 0], 1, 1, 1, true, 1, 1, 1, Con66892), 
LMul91215 = multiply_layer([Con89387,Con66892], Mul91215), 
exec_layers([LMul48018,LMul57980,LLoc78475,LAve74124,LRes92215,LRes74241,LCon89387,LAve93666,LRes80158,LMin68684,LRes19326,LMin53584,LUp_89919,LRes58261,LCon66892,LMul91215],["Mul48018","Mul57980","Loc78475","Ave74124","Res92215","Res74241","Con89387","Ave93666","Res80158","Min68684","Res19326","Min53584","Up_89919","Res58261","Con66892","Mul91215"],Mul91215,"Mul91215")

Actual (Unparsed): [[[[[0.0021452, 0.0029933, 0.0195614]], [[0.0180112, 0.0068897, 0.0489433]]]]]

Expected (Unparsed): [[[[[0.002145168712837666,0.00299328372,0.01956135888]],[[0.018011180019820366,0.006889707828,0.04894327500600001]]]]]

Actual:   [[[[[0.0022, 0.003, 0.0196]], [[0.0181, 0.0069, 0.049]]]]]

Expected: [[[[[0.0022, 0.003, 0.0196]], [[0.0181, 0.0069, 0.049]]]]]