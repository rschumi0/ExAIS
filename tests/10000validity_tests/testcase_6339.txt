import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Lay35045 = tf.keras.layers.Input(shape=([1, 4, 2]))
in0Per10552 = tf.keras.layers.Input(shape=([1, 3]))

Lay35045 = keras.layers.LayerNormalization(axis=1, epsilon=1.9915692291838525, name = 'Lay35045', )(in0Lay35045)
Res85739 = keras.layers.Reshape((1, 8), name = 'Res85739', )(Lay35045)
Sep83121 = keras.layers.SeparableConv1D(3, (1),strides=(1), padding='same', name = 'Sep83121', )(Res85739)
Res70174 = keras.layers.Reshape((1, 3, 1), name = 'Res70174', )(Sep83121)
Res95453 = keras.layers.Reshape((1, 3, 1, 1), name = 'Res95453', )(Res70174)
Zer94448 = keras.layers.ZeroPadding3D(padding=((4, 0), (0, 0), (2, 0)), name = 'Zer94448', )(Res95453)
Per10552 = keras.layers.Permute((1,2), name = 'Per10552',)(in0Per10552)
LST10811 = keras.layers.LSTM(3,recurrent_activation='sigmoid', name = 'LST10811', )(Per10552)
Res38997 = keras.layers.Reshape((3, 1), name = 'Res38997', )(LST10811)
Res36193 = keras.layers.Reshape((3, 1, 1), name = 'Res36193', )(Res38997)
Res82605 = keras.layers.Reshape((3, 1, 1, 1), name = 'Res82605', )(Res36193)
Zer93582 = keras.layers.ZeroPadding3D(padding=((1, 1), (1, 1), (1, 1)), name = 'Zer93582', )(Res82605)
Max67240 = keras.layers.Maximum(name = 'Max67240', )([Zer94448,Zer93582])
Res82164 = keras.layers.Reshape((5, 3, 3), name = 'Res82164', )(Max67240)
Res25571 = keras.layers.Reshape((5, 9), name = 'Res25571', )(Res82164)
Sim79583 = keras.layers.SimpleRNN(2,name = 'Sim79583', )(Res25571)
model = tf.keras.models.Model(inputs=[in0Lay35045,in0Per10552], outputs=Sim79583)
w = model.get_layer('Sep83121').get_weights() 
w[0] = np.array([[[0.4456], [0.4028], [0.053], [0.6002], [0.6773], [0.9272], [0.7808], [0.5383]]])
w[1] = np.array([[[0.0639, 0.3409, 0.3649], [0.008, 0.9981, 0.29], [0.76, 0.6084, 0.0041], [0.5532, 0.3767, 0.9987], [0.4745, 0.9074, 0.8521], [0.7401, 0.8746, 0.4734], [0.4801, 0.1817, 0.8418], [0.1784, 0.305, 0.9123]]])
w[2] = np.array([0, 0, 0])
model.get_layer('Sep83121').set_weights(w) 
w = model.get_layer('LST10811').get_weights() 
w[0] = np.array([[7, 10, 10, 1, 3, 8, 8, 4, 1, 1, 8, 1], [3, 10, 5, 9, 7, 6, 1, 3, 7, 9, 4, 3], [6, 1, 7, 10, 5, 4, 4, 6, 1, 4, 3, 1]])
w[1] = np.array([[4, 3, 7, 5, 8, 7, 5, 4, 6, 10, 2, 4], [5, 5, 7, 5, 3, 6, 3, 7, 9, 6, 1, 5], [7, 5, 9, 10, 8, 1, 7, 3, 5, 8, 2, 6]])
w[2] = np.array([7, 5, 10, 3, 7, 9, 7, 5, 1, 7, 10, 8])
model.get_layer('LST10811').set_weights(w) 
w = model.get_layer('Sim79583').get_weights() 
w[0] = np.array([[5, 3], [7, 10], [3, 2], [4, 1], [9, 7], [3, 10], [4, 4], [9, 10], [8, 10]])
w[1] = np.array([[5, 2], [6, 2]])
w[2] = np.array([9, 9])
model.get_layer('Sim79583').set_weights(w) 
in0Lay35045 = tf.constant([[[[1.5147, 1.1578], [1.2285, 1.2701], [1.5233, 1.5931], [1.321, 1.1459]]]])
in0Per10552 = tf.constant([[[1.1259, 1.8857, 1.2767]]])
print (np.array2string(model.predict([in0Lay35045,in0Per10552],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Sim79583.png')

LLay35045 = layer_normalization_layer([[[[1.5147, 1.1578], [1.2285, 1.2701], [1.5233, 1.5931], [1.321, 1.1459]]]], 1, 1.9915692291838525, Lay35045), 
LRes85739 = reshape_layer(Lay35045, [1, 8], Res85739), 
LSep83121 = separable_conv1D_layer(Res85739, 1,[[[[0.4456], [0.4028], [0.053], [0.6002], [0.6773], [0.9272], [0.7808], [0.5383]]],[[[0.0639, 0.3409, 0.3649], [0.008, 0.9981, 0.29], [0.76, 0.6084, 0.0041], [0.5532, 0.3767, 0.9987], [0.4745, 0.9074, 0.8521], [0.7401, 0.8746, 0.4734], [0.4801, 0.1817, 0.8418], [0.1784, 0.305, 0.9123]]]],[0, 0, 0], 1, true, Sep83121), 
LRes70174 = reshape_layer(Sep83121, [1, 3, 1], Res70174), 
LRes95453 = reshape_layer(Res70174, [1, 3, 1, 1], Res95453), 
LZer94448 = zero_padding3D_layer(Res95453, 4, 0, 0, 0, 2, 0, Zer94448), 
LPer10552 = permute_layer([[[1.1259, 1.8857, 1.2767]]], 1,2, Per10552), 
LLST10811 = lstm_layer(Per10552,[[7, 10, 10, 1, 3, 8, 8, 4, 1, 1, 8, 1], [3, 10, 5, 9, 7, 6, 1, 3, 7, 9, 4, 3], [6, 1, 7, 10, 5, 4, 4, 6, 1, 4, 3, 1]],[[4, 3, 7, 5, 8, 7, 5, 4, 6, 10, 2, 4], [5, 5, 7, 5, 3, 6, 3, 7, 9, 6, 1, 5], [7, 5, 9, 10, 8, 1, 7, 3, 5, 8, 2, 6]],[7, 5, 10, 3, 7, 9, 7, 5, 1, 7, 10, 8], LST10811), 
LRes38997 = reshape_layer(LST10811, [3, 1], Res38997), 
LRes36193 = reshape_layer(Res38997, [3, 1, 1], Res36193), 
LRes82605 = reshape_layer(Res36193, [3, 1, 1, 1], Res82605), 
LZer93582 = zero_padding3D_layer(Res82605, 1, 1, 1, 1, 1, 1, Zer93582), 
LMax67240 = maximum_layer([Zer94448,Zer93582], Max67240), 
LRes82164 = reshape_layer(Max67240, [5, 3, 3], Res82164), 
LRes25571 = reshape_layer(Res82164, [5, 9], Res25571), 
LSim79583 = simple_rnn_layer(Res25571,[[5, 3], [7, 10], [3, 2], [4, 1], [9, 7], [3, 10], [4, 4], [9, 10], [8, 10]],[[5, 2], [6, 2]],[9, 9], Sim79583), 
exec_layers([LLay35045,LRes85739,LSep83121,LRes70174,LRes95453,LZer94448,LPer10552,LLST10811,LRes38997,LRes36193,LRes82605,LZer93582,LMax67240,LRes82164,LRes25571,LSim79583],["Lay35045","Res85739","Sep83121","Res70174","Res95453","Zer94448","Per10552","LST10811","Res38997","Res36193","Res82605","Zer93582","Max67240","Res82164","Res25571","Sim79583"],Sim79583,"Sim79583")

Actual (Unparsed): [[1.0000000, 1.0000000]]

Expected (Unparsed): [[1.0,0.9999999999897818]]

Actual:   [[1, 1]]

Expected: [[1, 1]]