import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Max67713 = tf.keras.layers.Input(shape=([1, 2, 1]))
in1Max67713 = tf.keras.layers.Input(shape=([1, 2, 1]))
in0Con20248 = tf.keras.layers.Input(shape=([2, 2, 2, 1]))
in0Add85818 = tf.keras.layers.Input(shape=([2, 1, 2, 1]))
in1Add85818 = tf.keras.layers.Input(shape=([2, 1, 2, 1]))
in0Con1606 = tf.keras.layers.Input(shape=([2, 2, 2, 1]))
in0Sub40348 = tf.keras.layers.Input(shape=([2, 2, 2, 2]))
in1Sub40348 = tf.keras.layers.Input(shape=([2, 2, 2, 2]))

Max67713 = keras.layers.Maximum(name = 'Max67713', )([in0Max67713,in1Max67713])
Bat79614 = keras.layers.BatchNormalization(axis=1, epsilon=0.26152151587723427,  name = 'Bat79614', )(Max67713)
Res92178 = keras.layers.Reshape((1, 2, 1, 1), name = 'Res92178', )(Bat79614)
Zer23030 = keras.layers.ZeroPadding3D(padding=((1, 0), (0, 0), (1, 0)), name = 'Zer23030', )(Res92178)
Con20248 = keras.layers.Concatenate(axis=4, name = 'Con20248', )([Zer23030,in0Con20248])
Add85818 = keras.layers.Add(name = 'Add85818', )([in0Add85818,in1Add85818])
Zer45520 = keras.layers.ZeroPadding3D(padding=((0, 0), (1, 0), (0, 0)), name = 'Zer45520', )(Add85818)
Con1606 = keras.layers.Concatenate(axis=4, name = 'Con1606', )([Zer45520,in0Con1606])
Sub40348 = keras.layers.Subtract(name = 'Sub40348', )([in0Sub40348,in1Sub40348])
Min41373 = keras.layers.Minimum(name = 'Min41373', )([Con1606,Sub40348])
Min86752 = keras.layers.Minimum(name = 'Min86752', )([Con20248,Min41373])
Glo96792 = keras.layers.GlobalAveragePooling3D(name = 'Glo96792', )(Min86752)
model = tf.keras.models.Model(inputs=[in0Max67713,in1Max67713,in0Con20248,in0Add85818,in1Add85818,in0Con1606,in0Sub40348,in1Sub40348], outputs=Glo96792)
w = model.get_layer('Bat79614').get_weights() 
w[0] = np.array([0.2988])
w[1] = np.array([0.9231])
w[2] = np.array([0.6078])
w[3] = np.array([0.4364])
model.get_layer('Bat79614').set_weights(w) 
in0Max67713 = tf.constant([[[[0.7432], [0.7159]]]])
in1Max67713 = tf.constant([[[[0.6301], [0.9637]]]])
in0Con20248 = tf.constant([[[[[0.0948], [0.8096]], [[0.3694], [0.5918]]], [[[0.829], [0.171]], [[0.5348], [0.3003]]]]])
in0Add85818 = tf.constant([[[[[0.5636], [0.3483]]], [[[0.6314], [0.6358]]]]])
in1Add85818 = tf.constant([[[[[0.1204], [0.4771]]], [[[0.4825], [0.0644]]]]])
in0Con1606 = tf.constant([[[[[0.503], [0.8922]], [[0.19], [0.5647]]], [[[0.2455], [0.9236]], [[0.6843], [0.2976]]]]])
in0Sub40348 = tf.constant([[[[[0.635, 0.2454], [0.569, 0.9119]], [[0.4542, 0.021], [0.0865, 0.2683]]], [[[0.9396, 0.6148], [0.3261, 0.3901]], [[0.3592, 0.9925], [0.8661, 0.6227]]]]])
in1Sub40348 = tf.constant([[[[[0.0461, 0.4975], [0.1036, 0.4624]], [[0.996, 0.3654], [0.7305, 0.3684]]], [[[0.7645, 0.0991], [0.2164, 0.11]], [[0.995, 0.0932], [0.0923, 0.1505]]]]])
print (np.array2string(model.predict([in0Max67713,in1Max67713,in0Con20248,in0Add85818,in1Add85818,in0Con1606,in0Sub40348,in1Sub40348],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Glo96792.png')

LMax67713 = maximum_layer([[[[[0.7432], [0.7159]]]], [[[[0.6301], [0.9637]]]]], Max67713), 
LBat79614 = batch_normalization_layer(Max67713, 1, 0.26152151587723427, [0.2988], [0.9231], [0.6078], [0.4364], Bat79614), 
LRes92178 = reshape_layer(Bat79614, [1, 2, 1, 1], Res92178), 
LZer23030 = zero_padding3D_layer(Res92178, 1, 0, 0, 0, 1, 0, Zer23030), 
LCon20248 = concatenate_layer([Zer23030,[[[[[0.0948], [0.8096]], [[0.3694], [0.5918]]], [[[0.829], [0.171]], [[0.5348], [0.3003]]]]]], 4, Con20248), 
LAdd85818 = add_layer([[[[[[0.5636], [0.3483]]], [[[0.6314], [0.6358]]]]], [[[[[0.1204], [0.4771]]], [[[0.4825], [0.0644]]]]]], Add85818), 
LZer45520 = zero_padding3D_layer(Add85818, 0, 0, 1, 0, 0, 0, Zer45520), 
LCon1606 = concatenate_layer([Zer45520,[[[[[0.503], [0.8922]], [[0.19], [0.5647]]], [[[0.2455], [0.9236]], [[0.6843], [0.2976]]]]]], 4, Con1606), 
LSub40348 = subtract_layer([[[[[0.635, 0.2454], [0.569, 0.9119]], [[0.4542, 0.021], [0.0865, 0.2683]]], [[[0.9396, 0.6148], [0.3261, 0.3901]], [[0.3592, 0.9925], [0.8661, 0.6227]]]]], [[[[[0.0461, 0.4975], [0.1036, 0.4624]], [[0.996, 0.3654], [0.7305, 0.3684]]], [[[0.7645, 0.0991], [0.2164, 0.11]], [[0.995, 0.0932], [0.0923, 0.1505]]]]], Sub40348), 
LMin41373 = minimum_layer([Con1606,Sub40348], Min41373), 
LMin86752 = minimum_layer([Con20248,Min41373], Min86752), 
LGlo96792 = global_average_pooling3D_layer(Min86752, Glo96792), 
exec_layers([LMax67713,LBat79614,LRes92178,LZer23030,LCon20248,LAdd85818,LZer45520,LCon1606,LSub40348,LMin41373,LMin86752,LGlo96792],["Max67713","Bat79614","Res92178","Zer23030","Con20248","Add85818","Zer45520","Con1606","Sub40348","Min41373","Min86752","Glo96792"],Glo96792,"Glo96792")

Actual (Unparsed): [[-0.1401750, 0.1252250]]

Expected (Unparsed): [[-0.140175,0.12522500000000003]]

Actual:   [[-0.1401, 0.1253]]

Expected: [[-0.1401, 0.1253]]