import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Sub52572 = tf.keras.layers.Input(shape=([3, 2, 2, 2]))
in1Sub52572 = tf.keras.layers.Input(shape=([3, 2, 2, 2]))

Sub52572 = keras.layers.Subtract(name = 'Sub52572', )([in0Sub52572,in1Sub52572])
Res52145 = keras.layers.Reshape((3, 2, 4), name = 'Res52145', )(Sub52572)
Loc67982 = keras.layers.LocallyConnected2D(3, (2, 2),strides=(1, 1), name = 'Loc67982', )(Res52145)
model = tf.keras.models.Model(inputs=[in0Sub52572,in1Sub52572], outputs=Loc67982)
w = model.get_layer('Loc67982').get_weights() 
w[0] = np.array([[[0.006, 0.355, 0.0785], [0.1851, 0.411, 0.921], [0.5917, 0.8054, 0.7508], [0.845, 0.366, 0.3686], [0.9144, 0.1434, 0.7999], [0.4957, 0.9432, 0.6173], [0.8856, 0.7461, 0.8895], [0.5208, 0.3747, 0.8628], [0.8053, 0.846, 0.4259], [0.3129, 0.7658, 0.3536], [0.6997, 0.1147, 0.8381], [0.9019, 0.7667, 0.8823], [0.9474, 0.327, 0.125], [0.7399, 0.6639, 0.1189], [0.0842, 0.2556, 0.0355], [0.3975, 0.2667, 0.8294]], [[0.725, 0.2463, 0.503], [0.0331, 0.8781, 0.2881], [0.4512, 0.2436, 0.3404], [0.496, 0.3581, 0.5373], [0.0733, 0.6286, 1], [0.2221, 0.8756, 0.3466], [0.9859, 0.5699, 0.8064], [0.0255, 0.2929, 0.2828], [0.0298, 0.513, 0.1085], [0.9783, 0.1498, 0.5963], [0.8034, 0.5095, 0.4925], [0.7425, 0.1298, 0.2509], [0.2035, 0.7547, 0.5462], [0.5745, 0.4762, 0.3468], [0.9078, 0.6166, 0.707], [0.2804, 0.6286, 0.0945]]])
w[1] = np.array([[[0, 0, 0]], [[0, 0, 0]]])
model.get_layer('Loc67982').set_weights(w) 
in0Sub52572 = tf.constant([[[[[0.6223, 0.2531], [0.021, 0.5641]], [[0.5325, 0.196], [0.8175, 0.9192]]], [[[0.7504, 0.3341], [0.9007, 0.747]], [[0.2867, 0.0384], [0.5066, 0.6342]]], [[[0.009, 0.1566], [0.6269, 0.0796]], [[0.1774, 0.1714], [0.1984, 0.3292]]]]])
in1Sub52572 = tf.constant([[[[[0.8798, 0.7982], [0.2667, 0.6655]], [[0.5199, 0.9088], [0.758, 0.3775]]], [[[0.9768, 0.6666], [0.0922, 0.4022]], [[0.0461, 0.5399], [0.508, 0.6794]]], [[[0.2965, 0.4278], [0.6321, 0.5855]], [[0.5336, 0.4729], [0.523, 0.4292]]]]])
print (np.array2string(model.predict([in0Sub52572,in1Sub52572],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Loc67982.png')

LSub52572 = subtract_layer([[[[[0.6223, 0.2531], [0.021, 0.5641]], [[0.5325, 0.196], [0.8175, 0.9192]]], [[[0.7504, 0.3341], [0.9007, 0.747]], [[0.2867, 0.0384], [0.5066, 0.6342]]], [[[0.009, 0.1566], [0.6269, 0.0796]], [[0.1774, 0.1714], [0.1984, 0.3292]]]]], [[[[[0.8798, 0.7982], [0.2667, 0.6655]], [[0.5199, 0.9088], [0.758, 0.3775]]], [[[0.9768, 0.6666], [0.0922, 0.4022]], [[0.0461, 0.5399], [0.508, 0.6794]]], [[[0.2965, 0.4278], [0.6321, 0.5855]], [[0.5336, 0.4729], [0.523, 0.4292]]]]], Sub52572), 
LRes52145 = reshape_layer(Sub52572, [3, 2, 4], Res52145), 
LLoc67982 = locally_connected2D_layer(Res52145, 2, 2,[[[0.006, 0.355, 0.0785], [0.1851, 0.411, 0.921], [0.5917, 0.8054, 0.7508], [0.845, 0.366, 0.3686], [0.9144, 0.1434, 0.7999], [0.4957, 0.9432, 0.6173], [0.8856, 0.7461, 0.8895], [0.5208, 0.3747, 0.8628], [0.8053, 0.846, 0.4259], [0.3129, 0.7658, 0.3536], [0.6997, 0.1147, 0.8381], [0.9019, 0.7667, 0.8823], [0.9474, 0.327, 0.125], [0.7399, 0.6639, 0.1189], [0.0842, 0.2556, 0.0355], [0.3975, 0.2667, 0.8294]], [[0.725, 0.2463, 0.503], [0.0331, 0.8781, 0.2881], [0.4512, 0.2436, 0.3404], [0.496, 0.3581, 0.5373], [0.0733, 0.6286, 1], [0.2221, 0.8756, 0.3466], [0.9859, 0.5699, 0.8064], [0.0255, 0.2929, 0.2828], [0.0298, 0.513, 0.1085], [0.9783, 0.1498, 0.5963], [0.8034, 0.5095, 0.4925], [0.7425, 0.1298, 0.2509], [0.2035, 0.7547, 0.5462], [0.5745, 0.4762, 0.3468], [0.9078, 0.6166, 0.707], [0.2804, 0.6286, 0.0945]]],[[[0, 0, 0]], [[0, 0, 0]]], 1, 1, Loc67982), 
exec_layers([LSub52572,LRes52145,LLoc67982],["Sub52572","Res52145","Loc67982"],Loc67982,"Loc67982")

Actual (Unparsed): [[[[0.0886134, -1.3293381, 0.0470060]], [[-0.9577110, -1.2610515, -0.5567899]]]]

Expected (Unparsed): [[[[0.08861344999999993,-1.32933808,0.04700605999999989]],[[-0.9577109999999999,-1.26105155,-0.5567898899999999]]]]

Actual:   [[[[0.0887, -1.3293, 0.0471]], [[-0.9577, -1.261, -0.5567]]]]

Expected: [[[[0.0887, -1.3293, 0.0471]], [[-0.9577, -1.261, -0.5567]]]]