import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Ave26616 = tf.keras.layers.Input(shape=([2, 1, 2]))
in1Ave26616 = tf.keras.layers.Input(shape=([2, 1, 2]))
in0Con11119 = tf.keras.layers.Input(shape=([2, 3, 2, 1]))
in0Mul50079 = tf.keras.layers.Input(shape=([1, 2, 1, 2]))
in1Mul50079 = tf.keras.layers.Input(shape=([1, 2, 1, 2]))
in0Ave44937 = tf.keras.layers.Input(shape=([2, 2, 2]))
in1Ave44937 = tf.keras.layers.Input(shape=([2, 2, 2]))
in0Con56494 = tf.keras.layers.Input(shape=([2, 3, 2]))
in0Min19249 = tf.keras.layers.Input(shape=([2, 1, 2, 1]))
in1Min19249 = tf.keras.layers.Input(shape=([2, 1, 2, 1]))
in0Con99687 = tf.keras.layers.Input(shape=([2, 10]))

Ave26616 = keras.layers.Average(name = 'Ave26616', )([in0Ave26616,in1Ave26616])
Res4466 = keras.layers.Reshape((2, 1, 2, 1), name = 'Res4466', )(Ave26616)
Zer1902 = keras.layers.ZeroPadding3D(padding=((0, 0), (2, 0), (0, 0)), name = 'Zer1902', )(Res4466)
Con11119 = keras.layers.Concatenate(axis=4, name = 'Con11119', )([Zer1902,in0Con11119])
Mul50079 = keras.layers.Multiply(name = 'Mul50079', )([in0Mul50079,in1Mul50079])
Zer87521 = keras.layers.ZeroPadding3D(padding=((1, 0), (1, 0), (1, 0)), name = 'Zer87521', )(Mul50079)
Max31374 = keras.layers.Maximum(name = 'Max31374', )([Con11119,Zer87521])
Res85333 = keras.layers.Reshape((2, 3, 4), name = 'Res85333', )(Max31374)
Ave44937 = keras.layers.Average(name = 'Ave44937', )([in0Ave44937,in1Ave44937])
Zer83814 = keras.layers.ZeroPadding2D(padding=((0, 0), (1, 0)), name = 'Zer83814', )(Ave44937)
Con56494 = keras.layers.Concatenate(axis=3, name = 'Con56494', )([Zer83814,in0Con56494])
Min78195 = keras.layers.Minimum(name = 'Min78195', )([Res85333,Con56494])
Res87066 = keras.layers.Reshape((2, 12), name = 'Res87066', )(Min78195)
Min19249 = keras.layers.Minimum(name = 'Min19249', )([in0Min19249,in1Min19249])
Bat27409 = keras.layers.BatchNormalization(axis=3, epsilon=0.37692784340338814,  name = 'Bat27409', )(Min19249)
Res77038 = keras.layers.Reshape((2, 1, 2), name = 'Res77038', )(Bat27409)
Res21721 = keras.layers.Reshape((2, 2), name = 'Res21721', )(Res77038)
Max38784 = keras.layers.MaxPool1D(pool_size=(2), strides=(9), padding='same', name = 'Max38784', )(Res21721)
Zer73128 = keras.layers.ZeroPadding1D(padding=((1, 0)), name = 'Zer73128', )(Max38784)
Con99687 = keras.layers.Concatenate(axis=2, name = 'Con99687', )([Zer73128,in0Con99687])
Sub31505 = keras.layers.Subtract(name = 'Sub31505', )([Res87066,Con99687])
model = tf.keras.models.Model(inputs=[in0Ave26616,in1Ave26616,in0Con11119,in0Mul50079,in1Mul50079,in0Ave44937,in1Ave44937,in0Con56494,in0Min19249,in1Min19249,in0Con99687], outputs=Sub31505)
w = model.get_layer('Bat27409').get_weights() 
w[0] = np.array([0.0708, 0.8518])
w[1] = np.array([0.5023, 0.1192])
w[2] = np.array([0.8871, 0.2651])
w[3] = np.array([0.0646, 0.5295])
model.get_layer('Bat27409').set_weights(w) 
in0Ave26616 = tf.constant([[[[0.1528, 0.0134]], [[0.562, 0.5604]]]])
in1Ave26616 = tf.constant([[[[0.8279, 0.7252]], [[0.4116, 0.4369]]]])
in0Con11119 = tf.constant([[[[[0.6157], [0.5402]], [[0.3837], [0.4616]], [[0.4988], [0.3063]]], [[[0.3797], [0.97]], [[0.9646], [0.7507]], [[0.2737], [0.5461]]]]])
in0Mul50079 = tf.constant([[[[[0.6323, 0.029]], [[0.7742, 0.8479]]]]])
in1Mul50079 = tf.constant([[[[[0.6075, 0.7406]], [[0.4626, 0.2356]]]]])
in0Ave44937 = tf.constant([[[[0.2104, 0.387], [0.7672, 0.8745]], [[0.8419, 0.9328], [0.1846, 0.3574]]]])
in1Ave44937 = tf.constant([[[[0.1521, 0.1143], [0.8494, 0.84]], [[0.8094, 0.6967], [0.277, 0.0488]]]])
in0Con56494 = tf.constant([[[[0.3302, 0.3755], [0.5944, 0.6085], [0.6341, 0.6654]], [[0.0786, 0.6263], [0.3663, 0.4915], [0.5352, 0.3391]]]])
in0Min19249 = tf.constant([[[[[0.8274], [0.2316]]], [[[0.6924], [0.2068]]]]])
in1Min19249 = tf.constant([[[[[0.732], [0.1797]]], [[[0.1801], [0.7118]]]]])
in0Con99687 = tf.constant([[[0.8398, 0.1243, 0.5594, 0.725, 0.9955, 0.6866, 0.5154, 0.0882, 0.5466, 0.9983], [0.5431, 0.5688, 0.0209, 0.7474, 0.1414, 0.5978, 0.3322, 0.1177, 0.5066, 0.2453]]])
print (np.array2string(model.predict([in0Ave26616,in1Ave26616,in0Con11119,in0Mul50079,in1Mul50079,in0Ave44937,in1Ave44937,in0Con56494,in0Min19249,in1Min19249,in0Con99687],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Sub31505.png')

LAve26616 = average_layer([[[[[0.1528, 0.0134]], [[0.562, 0.5604]]]], [[[[0.8279, 0.7252]], [[0.4116, 0.4369]]]]], Ave26616), 
LRes4466 = reshape_layer(Ave26616, [2, 1, 2, 1], Res4466), 
LZer1902 = zero_padding3D_layer(Res4466, 0, 0, 2, 0, 0, 0, Zer1902), 
LCon11119 = concatenate_layer([Zer1902,[[[[[0.6157], [0.5402]], [[0.3837], [0.4616]], [[0.4988], [0.3063]]], [[[0.3797], [0.97]], [[0.9646], [0.7507]], [[0.2737], [0.5461]]]]]], 4, Con11119), 
LMul50079 = multiply_layer([[[[[[0.6323, 0.029]], [[0.7742, 0.8479]]]]], [[[[[0.6075, 0.7406]], [[0.4626, 0.2356]]]]]], Mul50079), 
LZer87521 = zero_padding3D_layer(Mul50079, 1, 0, 1, 0, 1, 0, Zer87521), 
LMax31374 = maximum_layer([Con11119,Zer87521], Max31374), 
LRes85333 = reshape_layer(Max31374, [2, 3, 4], Res85333), 
LAve44937 = average_layer([[[[[0.2104, 0.387], [0.7672, 0.8745]], [[0.8419, 0.9328], [0.1846, 0.3574]]]], [[[[0.1521, 0.1143], [0.8494, 0.84]], [[0.8094, 0.6967], [0.277, 0.0488]]]]], Ave44937), 
LZer83814 = zero_padding2D_layer(Ave44937, 0, 0, 1, 0, Zer83814), 
LCon56494 = concatenate_layer([Zer83814,[[[[0.3302, 0.3755], [0.5944, 0.6085], [0.6341, 0.6654]], [[0.0786, 0.6263], [0.3663, 0.4915], [0.5352, 0.3391]]]]], 3, Con56494), 
LMin78195 = minimum_layer([Res85333,Con56494], Min78195), 
LRes87066 = reshape_layer(Min78195, [2, 12], Res87066), 
LMin19249 = minimum_layer([[[[[[0.8274], [0.2316]]], [[[0.6924], [0.2068]]]]], [[[[[0.732], [0.1797]]], [[[0.1801], [0.7118]]]]]], Min19249), 
LBat27409 = batch_normalization_layer(Min19249, 3, 0.37692784340338814, [0.0708, 0.8518], [0.5023, 0.1192], [0.8871, 0.2651], [0.0646, 0.5295], Bat27409), 
LRes77038 = reshape_layer(Bat27409, [2, 1, 2], Res77038), 
LRes21721 = reshape_layer(Res77038, [2, 2], Res21721), 
LMax38784 = max_pool1D_layer(Res21721, 2, 9, true, Max38784), 
LZer73128 = zero_padding1D_layer(Max38784, 1, 0, Zer73128), 
LCon99687 = concatenate_layer([Zer73128,[[[0.8398, 0.1243, 0.5594, 0.725, 0.9955, 0.6866, 0.5154, 0.0882, 0.5466, 0.9983], [0.5431, 0.5688, 0.0209, 0.7474, 0.1414, 0.5978, 0.3322, 0.1177, 0.5066, 0.2453]]]], 2, Con99687), 
LSub31505 = subtract_layer(Res87066,Con99687, Sub31505), 
exec_layers([LAve26616,LRes4466,LZer1902,LCon11119,LMul50079,LZer87521,LMax31374,LRes85333,LAve44937,LZer83814,LCon56494,LMin78195,LRes87066,LMin19249,LBat27409,LRes77038,LRes21721,LMax38784,LZer73128,LCon99687,LSub31505],["Ave26616","Res4466","Zer1902","Con11119","Mul50079","Zer87521","Max31374","Res85333","Ave44937","Zer83814","Con56494","Min78195","Res87066","Min19249","Bat27409","Res77038","Res21721","Max38784","Zer73128","Con99687","Sub31505"],Sub31505,"Sub31505")

Actual (Unparsed): [[[0.0000000, 0.0000000, -0.8398000, 0.2512000, -0.5594000, -0.4743500, -0.9955000, -0.2250000, -0.0250500, 0.4106000, -0.1773000, -0.6920000], [-0.4857741, -0.0670398, -0.5431000, 0.0575000, -0.0209000, 0.0673500, 0.2249000, -0.1063000, -0.1014000, 0.0854000, -0.0079500, 0.0938000]]]

Expected (Unparsed): [[[0,0,-0.8398,0.2512,-0.5594,-0.47435,-0.9955,-0.22499999999999998,-0.025050000000000017,0.4106,-0.1773,-0.692],[-0.48577406624679725,-0.06703976111814888,-0.5431,0.057499999999999996,-0.0209,0.06735000000000002,0.22490000000000002,-0.1063,-0.10139999999999999,0.0854,-0.007950000000000013,0.09380000000000002]]]

Actual:   [[[0, 0, -0.8398, 0.2512, -0.5594, -0.4743, -0.9955, -0.225, -0.025, 0.4106, -0.1773, -0.692], [-0.4857, -0.067, -0.5431, 0.0575, -0.0209, 0.0674, 0.2249, -0.1063, -0.1014, 0.0854, -0.0079, 0.0938]]]

Expected: [[[0, 0, -0.8398, 0.2512, -0.5594, -0.4743, -0.9955, -0.2249, -0.025, 0.4106, -0.1773, -0.692], [-0.4857, -0.067, -0.5431, 0.0575, -0.0209, 0.0674, 0.225, -0.1063, -0.1013, 0.0854, -0.0079, 0.0939]]]