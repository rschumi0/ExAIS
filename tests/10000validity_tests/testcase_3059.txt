import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
np.set_printoptions(suppress=True,threshold=np.inf,formatter={'float_kind':'{:16.7f}'.format})
tf.keras.backend.set_floatx('float64')
in0Ave10627 = tf.keras.layers.Input(shape=([1, 2, 2, 1]))
in1Ave10627 = tf.keras.layers.Input(shape=([1, 2, 2, 1]))

Ave10627 = keras.layers.Average(name = 'Ave10627', )([in0Ave10627,in1Ave10627])
Res79755 = keras.layers.Reshape((1, 2, 2), name = 'Res79755', )(Ave10627)
Res38157 = keras.layers.Reshape((1, 4), name = 'Res38157', )(Res79755)
Up_33464 = keras.layers.UpSampling1D(size=(1), name = 'Up_33464', )(Res38157)
model = tf.keras.models.Model(inputs=[in0Ave10627,in1Ave10627], outputs=Up_33464)
in0Ave10627 = tf.constant([[[[[0.8956], [0.6362]], [[0.8372], [0.5775]]]]])
in1Ave10627 = tf.constant([[[[[0.6664], [0.7001]], [[0.7014], [0.1763]]]]])
print (np.array2string(model.predict([in0Ave10627,in1Ave10627],steps=1), separator=', '))
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='Up_33464.png')

LAve10627 = average_layer([[[[[[0.8956], [0.6362]], [[0.8372], [0.5775]]]]], [[[[[0.6664], [0.7001]], [[0.7014], [0.1763]]]]]], Ave10627), 
LRes79755 = reshape_layer(Ave10627, [1, 2, 2], Res79755), 
LRes38157 = reshape_layer(Res79755, [1, 4], Res38157), 
LUp_33464 = up_sampling1D_layer(Res38157, 1, Up_33464), 
exec_layers([LAve10627,LRes79755,LRes38157,LUp_33464],["Ave10627","Res79755","Res38157","Up_33464"],Up_33464,"Up_33464")

Actual (Unparsed): [[[0.7810000, 0.6681500, 0.7693000, 0.3769000]]]

Expected (Unparsed): [[[0.7809999999999999,0.66815,0.7693000000000001,0.3769]]]

Actual:   [[[0.781, 0.6682, 0.7693, 0.3769]]]

Expected: [[[0.781, 0.6682, 0.7694, 0.3769]]]